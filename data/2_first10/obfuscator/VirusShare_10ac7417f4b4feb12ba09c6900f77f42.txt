push
call
ret
ret
cld
or
in
lock
out
lret
dec
push
cmpsl
inc
or
mull
jns
stos
mov
adc
dec
push
ljmp
xlat
and
cmpsl
xchg
popf
cmp
mov
mov
cmp
sub
roll
push
aam
shlb
sub
in
xor
mov
repnz
mov
fnstsw
pop
leave
pop
mov
dec
loop
fldl
cmpsb
mov
ss
loop
mov
fs
cmc
sub
stos
shl
lret
jg
lahf
sbb
mov
push
mov
push
add
push
xor
ja
lock
and
roll
iret
fisubs
sahf
mov
mov
jmp
test
xchg
sbb
xchg
mov
xchg
aam
mov
or
je
push
std
adc
xor
cmp
push
popa
ds
test
sub
or
mov
pusha
push
insw
movsl
dec
jne
xor
cmp
adc
push
push
cmp
in
jb
push
mov
jbe
add
dec
mov
das
inc
jne
jno
lcall
lret
xchg
dec
jecxz
push
ret
mov
mov
or
jns
mov
pop
mov
stos
mov
cmp
or
fmuls
imul
aaa
sahf
aaa
or
xorb
testb
roll
popa
in
out
mov
jmp
jb
xchg
mov
mov
sbb
push
mov
xchg
pushf
arpl
gs
push
sahf
repz
mov
sub
gs
sub
push
push
inc
mov
xchg
fadds
shrl
inc
mov
sbb
mov
sti
sbb
stc
shll
mov
dec
jl
jg
xor
mov
into
ja
out
push
mov
xor
mov
push
push
repnz
arpl
pop
movzwl
ljmp
add
test
movsl
fwait
mov
inc
adc
ds
movsl
mov
mov
adc
invd
in
add
out
ret
mov
mov
mov
dec
xchg
mov
cmpsl
out
addr16
mov
aam
fwait
or
dec
dec
mov
jb
arpl
and
out
ljmp
inc
pop
mov
dec
icebp
mov
adc
dec
sti
or
aam
jle
sub
sbb
movsb
addr16
adc
roll
rcr
test
pop
imul
jle
push
sub
dec
sbb
push
pop
push
lret
pusha
aam
aas
jb
fcos
cs
aaa
shrl
sbbl
sahf
fisttps
fidivl
in
lret
orb
push
mov
lods
inc
and
fildll
inc
shl
les
data16
outsb
add
js
popa
inc
scas
ret
pop
test
loope
shl
lds
mov
test
mov
addl
push
into
iret
fcomp
xchg
dec
in
xor
push
mov
xchg
mov
adc
pop
mov
fcompl
mov
roll
push
adc
xchg
call
les
cmc
jae
into
das
stc
cmp
call
fnstcw
inc
pop
sbb
and
out
nop
xchg
arpl
sbb
lods
jae
sub
jl
inc
add
icebp
lods
stos
cld
es
xchg
pop
xchg
mov
daa
aaa
or
mov
mov
cmp
outsb
lret
mov
out
popf
inc
push
pop
push
out
mov
add
ljmp
push
popa
in
int
lea
xor
cmpsb
mov
xchg
arpl
sbb
repnz
sbb
inc
push
or
dec
pop
add
imul
mov
testb
movsb
stos
mov
pop
xor
lret
insl
ret
hlt
test
mov
mov
xor
rcrl
or
xchg
sub
mov
or
xchg
mov
iret
and
andl
adc
jae
cmpl
mov
mov
jg
dec
cmp
es
sbb
mov
jae
out
jno
clc
cli
gs
test
and
lcall
clc
repz
aad
es
jg
pushf
mov
xchg
mov
and
xchg
push
cltd
lds
adc
jg
cld
stc
push
movsl
inc
test
nop
xchg
push
iret
lret
cmpsb
pop
mov
ret
inc
add
orl
and
dec
mov
mov
sti
or
int3
lcall
mov
push
fwait
call
stos
pushf
pop
mov
sarb
jmp
xlat
cmpsw
out
dec
loope
test
aaa
les
mov
push
sarl
xor
dec
push
push
stc
lock
in
stc
js
jnp
mov
fwait
out
pop
mov
imull
mov
fstpl
and
push
das
sbb
cmp
test
in
shll
mov
xlat
icebp
add
dec
ljmp
in
pop
lods
lahf
insl
scas
mov
and
in
addr16
cmp
ds
mov
je
fiadds
aad
int
mov
les
std
add
or
shll
sbb
scas
rorb
jecxz
adc
cmp
and
sub
mov
in
sub
aad
jp
dec
mov
sub
jg
test
or
cwtl
imul
pop
out
hlt
pop
in
outsl
stos
xchg
leave
push
imulb
jmp
pop
push
xor
insl
hlt
scas
and
jl
pop
lods
mov
mov
sub
mov
out
cld
cmp
mov
mov
fs
in
adcl
add
fisubrs
stos
cld
jne
cmp
mov
xchg
cmp
sbb
mov
dec
inc
lock
jb
out
int
in
push
pop
arpl
movsl
xchg
lock
add
push
or
adc
scas
into
cwtl
adc
stos
paddb
sahf
loope
movzwl
mov
mov
leave
cs
jl
out
gs
sbb
mov
lds
fcomps
nop
dec
adc
movl
or
mov
mov
xor
adc
bound
pusha
inc
movsl
xor
lahf
pusha
sbb
and
cmpsl
scas
repz
sbb
test
lds
xor
imul
in
and
adc
mov
fistpll
out
loop
and
or
daa
loope
cmp
jbe
fidivrl
mov
sbb
pop
cs
pop
mov
xchg
nop
push
cmpsl
dec
shrl
pop
xchg
aam
lcall
xchg
imul
dec
mov
into
inc
adc
call
pop
fidivrs
mov
cmp
in
fadds
test
aam
push
mov
pop
cltd
sub
bound
push
cs
adc
cmp
or
xchg
std
int
mov
adc
cmpsl
mov
lahf
call
lds
adc
in
cmp
shrl
gs
push
out
pop
xchg
sub
and
jns
mov
les
pop
inc
fldenv
jge
loope
mov
cmp
and
imul
je
pop
sbb
sbb
sbb
push
pop
or
pop
inc
push
fsubs
shll
jb
clc
sti
inc
out
ljmp
cmpl
icebp
out
cmp
ds
ljmp
ja
jp
adc
sub
repnz
gs
adc
repz
imulb
nop
pop
add
jecxz
xchg
ljmp
sub
mov
mov
dec
ret
push
pavgb
out
fcomp
clc
sbb
ja
push
jmp
sub
adc
and
jo
mov
lods
fimuls
jo
inc
and
aas
test
fs
fnstsw
leave
fs
inc
ljmp
mov
je
mov
or
xor
push
es
aad
out
mov
ret
inc
jle
mov
loopne
cmp
add
testb
sbb
je
je
into
mov
xchg
inc
movsb
dec
jle
cwtl
lret
sub
and
rol
std
fldcw
mov
clc
clc
pop
adc
pop
pop
ds
cmp
sub
insl
jp
mov
je
jmp
stos
push
ret
xor
cmp
jecxz
out
xchg
mov
lock
stos
jne
or
inc
mov
jmp
stc
mov
sub
stos
push
sbb
add
xor
mov
in
sbb
add
mov
push
cmc
movb
cmp
jnp
xchg
loopne
sub
jb
dec
push
je
scas
out
fstl
cmp
mov
sti
adc
xor
loope
pop
add
sub
inc
sub
data16
cld
lea
sbb
or
shrb
jne
test
mov
adc
cmpsb
jne
test
std
arpl
adcl
pop
out
bound
pushf
sbb
dec
icebp
push
xchg
or
or
cmp
cmp
movsl
adc
inc
mov
into
add
add
mov
adc
dec
in
mov
add
sbb
out
adc
push
pusha
in
test
xchg
das
aas
ret
jb
dec
adc
xor
push
jge
cmc
push
pushf
mov
and
sbb
sbb
pop
stos
fadds
push
inc
out
or
fnsave
jno
divb
xor
out
call
mov
stc
mov
mov
cmp
daa
cmp
stos
pop
in
push
adc
push
jmp
cmc
push
mov
mov
push
dec
cmpsb
pop
dec
adc
shrb
xor
scas
or
add
outsb
out
ja
imul
jbe
addr16
push
pushf
dec
sahf
lea
jecxz
addl
xor
push
pop
clc
inc
mov
aaa
mov
shll
scas
mov
je
clc
test
stos
and
cmp
dec
pop
mov
hlt
and
and
mov
out
cwtl
jne
sbb
fistpl
xor
pop
jne
xchg
paddusb
into
mov
jmp
sub
sti
mov
add
stos
insl
pop
jge
test
add
popf
adc
cmovp
lret
xor
push
sbb
scas
adcl
into
add
jge,pt
sub
repz
dec
mov
leave
cmp
cs
ds
and
dec
push
jle
push
rorl
mov
pop
jl
jno
mov
xorb
and
jne
xor
dec
sahf
lahf
fildll
scas
test
pop
adc
lods
xchg
pusha
incb
ljmp
stos
int3
leave
push
inc
jmp
test
xchg
adc
jl
and
sbb
mov
pop
sahf
dec
adc
ja
mov
pop
sub
mov
fsubrs
lret
fldt
hlt
push
xchg
jno
jnp
int3
lcall
or
adc
lret
sub
and
jns
sub
or
ret
push
lret
lret
sarl
dec
lret
lds
js
xor
inc
aam
push
xchg
mov
inc
pop
mov
mov
sbb
loop
cwtl
or
mov
adc
mov
repnz
rorl
test
adc
sbb
aaa
mov
nop
sub
jae
mov
cmp
lcall
out
jmp
dec
mov
out
sti
inc
js
pop
mov
push
adc
cmc
push
bound
cmp
add
mov
inc
in
mov
popa
addr16
repnz
push
cmp
in
adc
sbb
push
out
addr16
gs
add
insl
out
cmp
imul
xor
push
aad
add
push
gs
mov
cmp
in
xor
ret
in
lcall
jb
sbb
adc
jge
push
or
xchg
adc
cmp
push
jmp
jge
mov
adc
into
rorl
sub
ljmp
or
adc
mov
ds
mov
inc
push
ret
cmpb
xchg
push
mov
cmp
adc
pop
lahf
lret
hlt
xchg
push
rclb
xchg
or
xchg
les
xorl
xchg
popf
pop
out
movsl
ljmp
in
sub
inc
sbb
stos
lret
sub
sahf
mov
push
testl
cmpsl
inc
mov
push
xchg
sub
fisttpl
push
imul
mov
fistps
bound
pop
fmul
dec
testb
cmpsl
push
mov
or
mov
jmp
xlat
mov
popf
jns
sbb
shll
mov
imul
pop
ljmp
pop
pop
popf
mov
rcrl
aam
mov
lahf
fisubs
and
repnz
lds
popa
or
nop
cli
mov
gs
mov
xor
fwait
imul
pop
fs
push
std
jg
jmp
push
mov
je
fwait
movsl
orl
push
mov
test
aas
das
xor
jno
xlat
scas
push
fistpll
xlat
sbb
data16
xchg
jp
push
adc
cmp
mov
add
pop
outsl
dec
lret
cmpsl
mov
imul
cld
lahf
push
pop
sbb
pop
in
lahf
lods
xchg
mov
pop
shll
mov
or
xchg
movsb
mov
mov
xchg
hlt
rolb
sbb
ret
and
sub
mov
mov
or
js
popa
lret
movsb
repnz
rorb
iret
mov
sbb
or
xchg
icebp
mov
enter
jge
sbb
mov
popf
push
int
and
scas
jb
mov
inc
inc
insb
pop
into
xchg
dec
adc
addr16
pop
je
mov
push
or
mov
pop
xchg
and
mov
imul
jp
mov
xchg
inc
and
lea
dec
push
test
mov
imul
pop
mov
out
fidivrl
cltd
std
loopne
push
mov
pop
cltd
sarb
cmp
jnp
ret
sub
sarl
rcrl
dec
iret
sub
imul
push
xchg
andl
sub
jg
or
sub
cwtl
clc
push
arpl
lret
mov
cmp
jmp
bound
jp
addr16
addb
push
insl
jne
jp
pop
jmp
inc
dec
adc
mov
mov
andb
push
std
test
jbe
dec
loope
and
jmp
faddp
push
push
shlb
mov
fdivrs
popa
xor
lods
arpl
pop
xchg
cmpsb
out
into
ret
icebp
mov
adc
fcoms
shr
push
lods
adc
inc
mov
std
sub
test
mov
or
fldenv
inc
out
mov
ljmp
and
jae
incb
icebp
jno
and
and
pushf
xor
pushf
and
cmp
xchg
sbb
or
sbb
pop
scas
push
ja
movsl
icebp
sub
sarb
add
lret
dec
jne
lods
inc
mov
orl
add
call
pusha
iret
jmp
inc
dec
es
lea
repz
sub
mov
adc
out
mov
jae
mov
aas
clc
and
repz
and
or
sub
or
das
inc
pushf
jnp
data16
mov
repnz
movsl
sbb
rcll
or
xchg
mov
fchs
aam
push
mov
gs
in
mov
sti
jns
sub
xchg
mov
mov
xchg
mov
mov
scas
pop
xlat
int3
or
pop
jecxz
xchg
jbe
lds
xchg
dec
jmp
xchg
sbb
insl
xor
fdivrp
jge
mov
jle
jne
mov
jle
cmpsl
jb
jns
push
cmpsb
iret
movsl
and
ja
and
push
mov
hlt
sahf
jns
and
add
loop
repz
and
mov
test
sarl
cmp
push
cmpsl
mov
lods
rcrl
adc
xlat
jns
shll
loop
push
push
pop
sbb
push
sbb
out
cmp
xchg
or
mov
adc
test
and
inc
pop
cs
scas
mov
loopne
and
data16
pop
push
xorl
jecxz
das
fwait
push
push
ret
cmp
xchg
cmp
mov
jecxz
fs
shlb
lea
mov
jbe
xchg
cmovne
adc
sub
cmp
fstpt
mov
xor
int3
daa
cld
mov
fs
bound
imul
dec
cmp
add
fs
mov
enter
adc
cmp
leave
pop
xor
dec
jbe
fxch
or
imul
add
mov
shrl
push
inc
pusha
decb
and
pop
lret
out
fsub
scas
sahf
ret
outsl
adc
sbb
iret
sbb
xchg
adc
notb
fists
paddb
sub
adc
jmp
push
inc
pop
push
data16
or
xchg
mov
popa
sub
mov
mov
scas
mull
into
mov
push
mov
lods
iret
pop
add
int
push
xchg
daa
pop
mov
mov
data16
fnsave
aam
iret
into
jo
jno
and
dec
pop
stos
pop
rolb
sub
int
pop
sub
or
mov
cmpsb
cs
fwait
mov
test
gs
jo
or
shll
insl
xor
adc
sbb
mov
pop
pop
es
pop
mov
mov
insl
out
loopne
sbb
or
xor
jbe
mov
mov
dec
insl
xor
jp
loop
cmp
scas
push
loope
xchg
push
icebp
push
ss
mov
cmpsb
inc
mov
jno
xorb
addb
fcomps
and
mov
cld
neg
inc
divb
mull
clc
jb
cmp
or
add
jb
jnp
dec
jecxz
mov
dec
pusha
add
pop
repz
cmpsl
sub
and
iret
leave
sbb
out
pop
mov
mov
mov
cmp
rcrb
sbb
into
mov
out
adcb
xchg
sbb
insl
subl
iret
sub
cmp
xchg
in
push
in
clc
adc
sbb
push
aad
fs
sbb
out
mov
dec
add
js
xchg
jmp
les
pop
sbb
mov
addr16
pop
lods
dec
mov
xchg
cmp
and
cmp
push
into
mov
cmp
ret
das
mov
in
int3
or
popa
mov
cmpsl
insb
dec
repnz
fnstsw
adc
sbbb
cmpb
shll
pop
xchg
mov
clc
iret
jp
jle
adc
pop
mov
xchg
add
fnstsw
adc
cmp
inc
or
iret
jmp
cmpsb
test
xchg
rcpps
pop
cltd
nop
pop
test
jmp
adcb
nop
mov
pushf
push
addr16
out
shl
test
pop
test
std
or
dec
js
inc
xchg
jge
push
cmp
mov
fldl
frstor
and
push
push
mov
jecxz
push
repz
xor
dec
aam
inc
xor
ja
stos
stos
sahf
xchg
pop
aam
js
inc
notb
push
mov
lcall
or
dec
and
out
or
dec
dec
negb
sub
sarb
movl
scas
ret
cmp
or
sbb
dec
sbb
in
ja
out
je
int3
pop
ficoms
cmpsb
mov
dec
and
adc
stc
cmovne
push
add
js
adc
imul
inc
arpl
dec
inc
sub
add
cmp
push
movsb
jno
std
mov
testb
icebp
movsb
and
mov
add
sbb
out
lahf
dec
notl
shll
inc
push
mov
jb
sub
push
andl
push
jp
stc
int3
sub
mov
sub
xchg
push
jle
jecxz
jge
hlt
add
ja
leave
test
jb
out
sti
pop
add
leave
push
sub
movsb
inc
pop
pusha
cld
sbb
test
ret
stc
lods
popf
jb
inc
and
and
sti
test
icebp
pop
popa
stos
cmc
incb
pop
jnp
dec
shr
or
and
cmp
repnz
mov
cli
cld
out
cmpl
popf
in
in
mov
idivb
and
xor
sub
cwtl
daa
jno
or
dec
pop
xlat
xor
add
aad
movsb
ret
outsl
jmp
out
jecxz
dec
add
jle
push
fistpl
pop
shll
fisubs
xor
sbb
scas
cmp
push
jmp
sub
pop
cmp
xor
add
lahf
je
or
add
dec
jmp
rcl
cmc
or
adcb
xor
xchg
sahf
or
pop
push
jne
xlat
test
dec
and
push
pop
adc
xor
cld
pop
fdiv
fwait
stos
cmp
and
adc
shlb
cwtl
ljmp
call
jno
outsl
cmp
lea
pop
sbb
cmp
and
mov
push
cmpsl
dec
addr16
cmp
ljmp
jne
cltd
and
dec
aam
mov
ljmp
add
ds
or
dec
repnz
test
sbb
fs
mov
mov
add
fs
jge
mov
outsl
fdivrs
xlat
stos
xchg
dec
out
push
cs
int3
mov
imul
addr16
ret
mov
push
aaa
sbb
pop
push
inc
xchg
pop
adcb
movsb
jnp
mov
adc
inc
popa
push
jno
xor
push
push
adc
lods
imul
das
stos
cli
jge
incl
jnp
mov
fdivs
add
mov
mov
mov
pop
cld
aam
dec
or
add
out
xlat
loopne
cmpsl
pop
fs
mov
cld
ficomps
cmpb
pop
cmp
insb
bound
jbe
cs
in
iret
in
pop
pop
pop
sbb
pop
repz
hlt
js
sbb
push
movsl
lret
out
xchg
loope
ret
mov
loopne
jl
mov
cs
mov
add
push
pop
loope
stc
or
adc
sbb
inc
pushf
fwait
imul
je
je
add
mov
cmc
xlat
nop
test
mov
arpl
ja
mov
adc
xchg
dec
adc
loope
test
jne
dec
aaa
xor
jl
xor
fabs
mov
cmp
dec
mov
pop
jo
mov
ss
iret
fisubl
lods
inc
jg
push
xchg
data16
sub
pop
test
xor
cmpsb
bound
stos
and
rolb
cmpsl
mov
test
shlb
push
int3
scas
fsub
sub
addr16
hlt
sub
cwtl
aam
sbb
fcomps
test
dec
mov
jl
inc
popf
jle
jne
mov
mov
mov
push
rcrb
outsb
sar
xchg
ret
movsb
pop
je
dec
mov
test
gs
lds
sbb
fisttps
rclb
lahf
aas
xor
mov
sbb
inc
sbb
fiaddl
sub
dec
adc
mov
outsl
xor
ret
sbb
or
fiaddl
xchg
xchg
inc
push
jae
add
xor
test
mov
aaa
imul
orb
mov
dec
sarb
or
ret
ds
pushf
aad
mov
jp
inc
clc
xlat
xchg
decl
inc
or
outsl
dec
jle
xchg
in
ljmp
push
loopne
test
popaw
jmp
mov
cmp
pop
test
cmp
inc
pop
repnz
pop
es
stos
or
xor
sbb
pop
and
jl
nop
lods
aaa
sti
insb
lock
mov
test
int3
daa
ret
fbld
jle
ret
js
out
scas
mov
jmp
notl
ret
or
test
mov
jle
adc
jmp
sarl
mov
call
cli
or
mov
lret
push
imul
mov
push
mov
sarb
fcmovne
fcoms
movsb
inc
mov
push
cmpsb
fs
insb
shrb
fldt
inc
jno
rcrl
mov
jl
pusha
hlt
sub
in
jo
mov
out
push
cmp
sbb
cmc
or
das
adc
test
lea
repz
sub
cltd
pxor
loop
ficoms
loopne
jecxz
jb
and
and
xchg
push
aas
test
repnz
cmp
add
push
mov
in
fnstcw
sti
push
pop
pop
imul
push
mov
fnstsw
aad
out
in
push
jecxz
gs
adc
pop
sbb
xor
into
lods
mov
dec
repnz
jo
mov
loopne
test
cmpb
dec
shrl
bnd
jge
push
sti
fldt
clc
int
push
flds
xchg
je
cmp
pop
lds
fbld
mov
fs
add
push
mov
inc
mov
fstpt
mov
fdiv
into
inc
pusha
pusha
and
cmp
push
mov
add
cltd
lods
push
movl
xchg
shll
daa
mov
popf
into
movsb
xchg
sysret
dec
mov
inc
sbb
pop
and
leave
insl
mov
imul
inc
lcall
sbb
pop
pop
iret
push
dec
popa
ljmp
sub
mov
xor
lahf
adc
xchg
push
cmpb
adc
push
mov
dec
jmp
pop
stos
mov
arpl
je
xor
pop
popl
push
gs
pusha
mov
scas
in
pop
inc
mov
pusha
ret
fstpl
jne
sub
adc
lret
movsb
lock
dec
repz
xor
add
sbb
mov
cmp
cmp
addr16
lcall
or
push
icebp
in
push
mov
in
dec
mov
jmp
movsb
test
add
xchg
lea
xchg
mov
jae
test
fdivrl
fwait
xorl
lcall
pop
mov
fnstenv
ror
iret
adc
fidivrl
cmpsl
std
add
insb
inc
popf
adc
rol
mov
in
stos
dec
mov
pop
xchg
out
enter
or
sub
adc
cltd
hlt
repz
pop
sub
jl
push
cmp
aaa
scas
ja
addb
test
in
jecxz
in
rol
loop
loope
aaa
mov
cmpsl
pop
andl
mov
je
stos
jge
ljmp
cltd
jae
cmpsl
call
or
in
pop
arpl
data16
push
add
cmpsb
stos
outsb
push
inc
inc
mov
out
adc
push
jge
pusha
jg
aaa
jecxz
xor
stos
roll
in
in
andl
fcoml
orl
je
jae
and
inc
xlat
les
xchg
dec
push
cmp
pop
jg
hlt
lret
xor
repnz
ret
pop
xor
jle
mov
push
and
enter
and
mov
mov
mov
xchg
jo
ljmp
mov
ret
dec
mov
test
pop
adc
je
mov
dec
iret
dec
mov
jns
or
cmpsb
push
loop
xor
test
nopl
movsb
in
push
in
cmpsb
pop
pop
lcall
fmul
gs
std
or
addr16
jne
push
repz
movsb
fnstenv
jnp
fwait
clc
jbe
mov
cmpb
jp
mull
mov
push
adc
xchg
outsb
mov
ret
push
nop
repz
into
inc
sub
inc
mov
enter
lret
aad
clc
test
dec
jo
or
loope
ret
out
pop
sbb
inc
aaa
sbb
push
aad
mov
inc
xchg
rolb
std
sub
push
hlt
je
push
jge
loop
hlt
frstpm(287
jl
lea
and
sbb
lret
pop
cltd
pop
push
scas
lds
fidivs
xor
add
mov
mov
inc
popa
or
test
shlb
lods
adc
fistl
loop
dec
jnp
arpl
or
mov
cmp
mov
xor
je
fwait
dec
xchg
sahf
test
dec
cmp
stos
mov
mov
inc
int
daa
outsb
movsb
inc
addr16
in
pusha
dec
fisubrs
aas
shll
mov
js
push
push
or
jle
cmp
sar
mov
or
fisubrl
test
jmp
rorl
dec
lcall
mov
jo
jecxz
push
jecxz
adc
in
into
inc
push
mov
xor
cwtl
cltd
cmp
inc
ret
push
mov
mov
repnz
aaa
xchg
sbb
inc
lods
inc
fadds
sbb
sub
aad
scas
inc
cmp
shlb
fidivrl
mov
scas
add
ss
imul
outsl
enter
jo
inc
imul
cli
adc
jne
sbb
les
fiaddl
sbb
push
xor
jge
add
xchg
cmp
shl
push
mov
adc
sub
jp
adc
xchg
lcall
mov
jno
ja
cwtl
dec
adc
sub
sub
pop
pop
gs
cwtl
addr16
fldl
leave
xlat
clc
js
hlt
outsl
adc
inc
call
inc
cli
push
imul
jecxz
shlb
add
or
rorl
mov
push
js
stc
cmp
dec
lods
dec
pop
sbb
loop
mov
push
imul
cmpsl
ljmp
stc
lock
dec
add
jp
rorb
popa
mov
jns
das
sub
or
xor
xlat
out
sub
andb
jnp
imul
stos
cmp
mov
ljmp
test
add
jge
sub
arpl
push
cmp
out
mov
jmp
int
js
jmp
test
inc
or
push
aad
push
aam
rorb
aas
jno
mov
pop
add
dec
xchg
rcrl
pusha
out
aas
lcall
mov
xor
xchg
lock
mov
bswap
xor
into
fiaddl
dec
mov
lret
cmpsl
mov
inc
in
fisttpll
dec
jg,pt
xchg
mov
imul
add
mov
push
pop
xchg
test
in
outsb
and
sub
bound
mov
sbb
out
mov
popf
mov
sbb
sub
cmp
gs
xchg
xor
or
je
stos
pusha
and
lods
ret
or
xchg
xchg
xchg
cmpsl
aaa
scas
mov
mov
push
mov
sti
xchg
mov
test
push
fistpll
test
das
and
add
in
scas
dec
int
push
jmp
dec
int
test
mov
je
leave
inc
std
xchg
popf
and
or
cmp
ret
lock
jnp
jns
aad
fs
xchg
or
or
cmpsb
and
test
sbb
lret
popa
scas
outsl
mov
arpl
lcall
jne
mov
xchg
push
test
xor
jns
jae
push
int3
lods
mov
xchg
inc
dec
dec
out
and
aad
cmp
mov
repz
pop
sbb
adc
sub
imul
nop
popf
cli
or
fwait
add
inc
xchg
call
push
inc
jb
jns
inc
mov
icebp
movsb
and
xchg
push
mov
in
jb
pop
arpl
les
sbb
data16
mov
mov
in
popa
aaa
pusha
jmp
call
sbb
mov
add
or
push
push
int
inc
jne
sbb
push
mov
adc
repz
fstpl
xor
pop
insl
leave
mov
leave
push
or
das
popf
mov
js
fnsave
xor
gs
aam
lcall
sbb
xchg
jmp
adc
leave
adc
cmp
inc
mov
push
data16
in
sub
test
out
cs
clc
xor
sbb
push
mov
jl
cmp
aad
lret
push
pop
jne
pop
add
cmp
and
dec
xor
pop
insl
xor
pop
ret
movsl
sbb
pusha
fdivrs
std
mov
add
push
pop
cmp
stos
xor
mov
or
movsb
shlb
dec
or
push
cmovnp
je
sahf
cmp
adcl
adc
jae
xor
lahf
out
mov
mov
stos
fcompl
fldt
mov
imul
xor
sub
fxch
add
xchg
pop
lods
out
lret
cmpl
cmp
test
mov
bound
daa
jge
inc
or
out
scas
es
popa
dec
jbe
repz
xchg
sarb
testl
push
cli
sub
mov
mov
daa
dec
xor
push
out
aam
loopne
insl
shr
scas
int3
jnp
push
out
pop
repnz
cmp
push
cmp
xlat
cs
push
add
call
sbb
hlt
jne
scas
shrl
test
jb
stos
nop
into
mov
call
popl
dec
pop
sti
mov
aad
nop
test
mov
inc
jbe
mov
adc
mov
into
add
scas
cmp
stc
jno
mov
jne
or
dec
int3
in
mov
test
sub
add
popf
clc
jle
es
add
jb
and
cltd
mov
xor
addb
push
push
outsb
lods
and
sahf
repz
ds
jae
rorb
repnz
or
repnz
fs
outsb
cltd
shlb
jmp
in
push
inc
sbb
scas
push
fstl
jns
out
call
daa
mov
es
ret
adc
into
int
mov
jbe
xchg
das
lea
push
sti
aaa
in
lcall
and
mov
pop
fcoml
and
fwait
mov
and
push
and
mov
dec
clc
daa
jo
leave
pop
aas
xor
fsubrl
pop
in
push
or
jbe
xor
daa
out
sbb
data16
cs
sbbl
pop
mov
xor
mov
ret
movsb
pop
stos
shl
insb
psllw
int3
push
iret
fsubrs
pop
cmc
insb
scas
adc
xchg
rclb
xchg
jb
inc
xchg
pop
mov
repz
lahf
adc
mov
shrl
pushf
fimull
std
adc
aaa
sub
out
jo
imul
leave
xor
repnz
cmp
pusha
inc
out
xchg
dec
fadds
ret
repnz
dec
pop
push
or
mov
ret
cld
mov
cmp
ds
mov
push
int3
xor
xor
xchg
out
mov
add
lret
cmpsb
xchg
jbe
sub
mov
push
inc
jmp
iret
cmpsl
jecxz
sub
lea
rol
rol
xchg
or
pop
sbb
subb
mov
daa
mov
jmp
mov
mov
cmc
lahf
push
inc
inc
push
outsl
clc
xchg
dec
add
jge
adc
pop
jo
sbb
outsb
or
sbb
xchg
outsb
adc
loop
rcrb
lock
lods
xor
lods
mov
mov
sub
fldcw
in
mov
cmp
sub
and
imul
inc
and
out
std
push
leave
lods
push
push
xchg
mov
add
adc
sti
inc
pop
dec
add
ja
lods
das
xchg
or
sub
push
pop
imul
aad
pop
in
cmc
push
inc
mov
sub
aaa
add
or
pop
xor
push
jne
inc
outsb
and
lods
mov
hlt
xchg
stos
into
sarl
cmpsl
jecxz
inc
mov
sub
jl
mov
mov
cmp
stos
push
insl
repnz
sub
test
jge
into
iret
cmp
arpl
push
pop
mov
std
dec
sub
iret
push
xor
adc
push
adc
cmp
pop
add
pop
imul
inc
adc
adc
or
sbb
or
add
ljmp
sbb
cli
repnz
cmp
sbb
and
inc
sub
aas
inc
pop
dec
and
sbbl
inc
fwait
xor
mov
sbb
je
push
lods
pop
orl
mov
fcompl
call
jle
scas
cmp
scas
cmp
add
es
push
sti
in
movsl
push
popa
fdivr
cmp
mov
xor
leave
or
and
nop
inc
jmp
xlat
dec
rcrb
mov
cmp
insb
stos
bnd
jns
dec
cmp
xchg
mov
int3
subb
push
enter
iret
push
fwait
jle
inc
jne
inc
insb
jne
rcrb
daa
lods
sbb
add
hlt
outsb
mov
jg
jns
or
popa
jb
loop
bnd
aad
mov
jmp
inc
add
sbb
ja
les
pop
adc
dec
cmp
lock
insl
fistl
mov
adc
rorb
sbb
pop
mov
in
repnz
in
xchg
nop
mov
sub
scas
mov
sti
fstpl
sbb
mov
faddl
and
outsb
dec
fldenv
or
mov
adc
scas
sar
xchg
push
fstpt
dec
cs
loope
dec
hlt
push
xor
inc
sub
bound
mov
pushf
mov
rolb
pop
mov
mul
mov
fs
mov
addb
in
jg
cmpsb
cmp
stos
dec
aam
test
rcrb
inc
xor
ret
insb
jmp
into
mov
leave
mov
dec
test
cmp
fadd
mov
dec
or
rorb
add
add
repnz
sub
xchg
inc
orb
out
mov
mov
pop
rcr
adc
dec
insl
out
or
mov
mov
jnp
sbb
jle
stos
pop
out
inc
or
pop
jne
lods
sahf
xor
shl
and
and
adcb
stc
mov
test
xchg
icebp
inc
data16
push
mov
rol
and
pop
and
or
movsl
pop
movsl
pop
pop
mov
scas
lret
cltd
ret
enter
leave
in
sar
stos
mov
in
dec
cmp
or
enter
jecxz
addr16
xor
push
mov
jne
iret
aad
scas
dec
sti
and
movsb
repnz
aas
and
lods
pop
inc
enter
add
and
mov
adc
adc
jno
in
roll
cmpl
fstpl
add
pop
pop
xchg
dec
xor
cmp
inc
and
loop
and
xor
neg
lcall
aaa
lret
xchg
aam
std
or
pop
arpl
test
lret
push
pushf
insl
loope
sub
loope
inc
arpl
xorl
and
scas
jne
mov
and
pop
cmp
add
cmpsb
stos
bound
std
mov
je
or
mov
clc
add
jne
mov
fwait
adc
fwait
int3
sub
push
int
std
aaa
jbe
sahf
in
dec
mov
and
mov
iret
jge
jl
in
add
out
aaa
ficoml
dec
mov
aas
outsb
cmpsb
fs
out
dec
jns
jp
pop
shlb
int
lods
bound
inc
push
out
pop
sub
sub
mov
cmpsl
push
dec
jne
push
leave
adc
mov
addr16
out
sub
int3
sub
sub
stc
lret
mov
jns
insl
jp
stos
outsl
or
iret
push
xor
and
push
jnp
pop
sub
inc
inc
fidivl
push
adc
and
pop
inc
rcr
sbb
jns
cltd
pop
test
xorl
push
rdrand
mov
das
in
test
fwait
xor
scas
rclb
inc
test
push
adc
test
sbb
data16
cs
push
lock
aad
leave
mov
mov
loope
fsubp
xchg
and
iret
fcoms
out
mov
sub
lock
mov
insl
test
or
push
in
test
ret
mov
xchg
repz
cmp
imul
lret
cmp
sub
pushf
add
cli
adc
scas
xor
sti
ljmp
lcall
and
push
pop
xchg
scas
fs
mov
jp
lea
dec
or
aaa
mov
mov
inc
arpl
adc
ss
sub
out
nop
pop
iret
iret
popa
and
repnz
cmpsl
ja
pop
push
jp
push
sub
xorl
or
push
fisubl
into
iret
leave
add
es
mov
cmp
add
or
sti
mov
js
ret
repz
fprem
xchg
shll
jle
sbb
les
dec
shl
sarb
pop
aas
sub
xor
push
pop
sub
pushf
cmc
imul
imul
cmp
test
and
pop
mov
lret
aam
je
jbe
add
movsb
jno
inc
scas
out
mov
cmp
into
xchg
mov
xor
outsl
adc
addb
and
imul
pop
call
jnp
or
pop
jle
fisubrl
inc
mov
imul
xor
adc
and
outsb
push
paddw
test
pop
cwtl
lret
push
dec
icebp
shr
mov
jne
shll
or
fsubrl
mov
out
inc
pop
push
gs
and
outsl
push
xor
adc
inc
and
test
rcrb
cmpsb
inc
pop
imul
stos
repz
inc
shlb
notb
sub
vmptrst
lret
push
push
jbe
cwtl
cmp
mov
arpl
inc
call
iret
mov
xor
add
mov
rcrb
or
mov
clc
xchg
rcrl
das
andb
mov
loopne
adc
jae
pop
popa
mov
cwtl
aaa
test
je
std
mov
mov
lcall
xor
test
or
inc
mov
or
pop
mov
xchg
ljmp
popl
repz
jg
xor
lret
jbe
in
mov
xlat
bound
mov
adc
pop
mov
xchg
jg
pop
xchg
and
cmp
add
and
aas
dec
inc
dec
push
shlb
jo
repz
push
leave
iret
lea
mov
add
pop
dec
pop
lcall
xor
push
pop
ss
hlt
sbb
jle
mov
jmp
jnp
repnz
mov
mov
and
ret
movsl
dec
pop
mov
cmp
xlat
mov
xchg
int
add
rcr
mov
jno
sbb
loopne
aad
je
cmpsb
mov
iret
subb
data16
ja
js
jg
sub
push
lods
sub
adcb
xchg
sbb
pop
xor
and
ret
loop
jnp
sbb
nop
fcom
cli
pushf
and
pop
cmp
xor
or
add
arpl
xor
icebp
adc
adc
mull
test
fidivl
lods
leave
ret
pop
lea
xor
popa
in
cli
shll
outsl
fistps
inc
addb
and
lret
icebp
xchg
adc
mov
movsl
inc
lods
loop
rcr
xchg
sbb
jns
dec
movl
adc
loopne
dec
jmp
cmp
out
adcb
jecxz
shrb
adc
ret
stos
cmpsb
stos
add
inc
test
pop
lret
pop
loopne
lock
sti
cwtl
jo
lds
sbb
je
stos
sub
xchg
adc
nop
cmp
aas
ss
lea
sbb
out
jns
nop
lret
enter
jns
xchg
xor
outsl
xchg
es
int
les
ret
bound
sub
ds
loopne
pop
inc
jmp
sub
in
jg
lods
shrb
stos
cmp
push
stc
cwtl
mov
lock
pop
cwtl
negl
mov
nop
dec
icebp
and
movsl
fstl
je
push
xlat
sub
cmp
loop
loop
push
mov
push
sub
test
mov
pop
das
js
shl
imul
repz
lahf
jl
xor
jmp
mov
call
xlat
jns
mov
lret
push
call
mov
cwtl
int
cmp
fdivp
scas
pop
xchg
xor
fcomps
adc
pop
std
jae,pt
mov
into
fisubrl
inc
inc
mov
mov
adc
ljmp
mov
call
imul
inc
popa
xchg
mov
xchg
outsb
jecxz
pushf
sub
or
sub
mov
decl
daa
push
mov
les
or
xor
xchg
lret
jne
dec
mov
mov
popa
cmp
sub
aas
lcall
adc
xor
and
fadds
pop
cmc
jp
mov
lods
adc
int
adc
pop
out
push
mov
push
cmp
pop
out
orb
add
sahf
pop
cmpsb
cmc
adc
dec
in
and
mov
fsts
dec
aam
push
sbb
cld
mov
in
fwait
mov
stc
ljmp
inc
push
pop
pop
imul
test
lods
xor
and
xchg
out
iret
outsb
sub
xchg
in
sbb
xor
cmp
jae
sti
mov
mov
adc
sbb
xor
mull
add
sbb
adc
mov
dec
cmp
lock
daa
mov
aas
ds
in
xor
popl
fstl
repz
mov
and
nop
inc
or
sbb
mov
jecxz
jp
ret
sbb
pop
or
jge
imul
adcb
mov
dec
lds
and
inc
inc
mov
test
push
push
xor
push
sub
outsl
lea
adc
jne
push
xchg
cwtl
lods
xchg
lods
cmp
xchg
imul
or
sbb
je
mov
int
inc
xchg
mov
sub
pushf
nop
xchg
mov
add
and
lods
pusha
in
xchg
shlb
test
mov
lock
cld
imul
pop
jmp
mov
ss
mov
jmp
jg
sub
mov
xchg
out
mov
les
movsb
lret
inc
loope
mov
xchg
fstps
js
sub
test
clc
jl
shl
data16
xchg
orb
xor
inc
stc
mov
jne
mov
pop
movsl
adc
hlt
imulb
mov
push
push
jle
aam
lods
int3
movsl
push
dec
je
fists
jns
xlat
fcmovb
dec
incl
adc
dec
rcr
in
fs
popa
inc
and
xchg
loop
jns
xor
xlat
dec
mov
add
sbb
ds
xchg
pushl
lods
xchg
and
andl
xchg
call
int
sub
adc
mov
pop
sahf
xor
test
cvttps2pi
push
sbb
in
xor
mov
adc
jns
sahf
fs
mov
stos
add
fildll
adc
mov
sbb
jns
stos
fwait
ds
out
loop
rolb
jnp
sbb
or
ss
divb
mov
xchg
xor
aam
xchg
sub
jge
mov
xchg
cmp
xchg
mov
adcb
mov
mov
stc
popa
cmpsb
jo
and
mov
gs
ror
in
jo
inc
fdivs
inc
lret
insl
inc
les
add
mov
jns
inc
ss
pop
fs
or
std
out
jnp
sbb
enter
sbb
gs
jle
cmp
push
hlt
xlat
inc
out
imul
in
pop
test
int3
inc
push
pushf
in
cmp
xchg
int
cmpsb
es
incl
mov
sub
xor
in
test
xlat
fdivr
jbe
sbb
push
lret
hlt
mov
movsb
lds
and
push
mov
movsl
nop
js
es
shlb
lds
xchg
sbb
xor
cmpsb
insl
flds
jmp
ljmp
ss
inc
into
cmpsb
xor
lods
and
addr16
sti
popf
testl
adc
xchg
inc
mov
or
addr16
rcll
or
jb
cmpsb
cmp
fucomp
add
out
pop
repnz
aas
cmp
ret
sub
jbe
sub
and
test
cltd
adc
pop
push
cmp
and
aam
movsb
jno
test
and
push
push
sub
jmp
stos
adc
cmp
movsb
movsl
test
jns
cmp
push
cltd
push
fwait
mov
test
repz
jge
imul
fs
pusha
inc
pop
mov
jmp
stc
or
push
mov
inc
or
xchg
fidivrl
push
push
jbe
push
pop
xorb
in
rcrl
ret
gs
sub
pop
sbbl
hlt
xor
fisttpll
aaa
sub
scas
mov
outsb
js
sub
arpl
adc
sub
fcomps
mov
inc
and
mov
fldt
xchg
aas
mov
aas
adc
jmp
loopne
mov
or
jecxz
rclb
push
adc
imul
testb
das
xchg
add
xor
insb
movsl
std
push
cltd
add
jmp
mov
mov
and
in
fmuls
test
cmp
lods
push
iret
mov
fld
jecxz
movsb
lret
popf
sbb
imul
cltd
push
enter
nop
scas
inc
inc
sbb
jb
push
jmp
fwait
pop
inc
shll
rorl
lret
cmovge
adc
les
pop
in
inc
and
les
outsl
add
and
push
lahf
call
ds
mov
iret
das
stos
and
mov
scas
imul
jecxz
ret
fdivs
cwtl
cmp
int
insl
xor
mov
loopne
mov
hlt
andb
adcl
add
sti
add
pop
pop
in
and
hlt
xchg
icebp
lods
cmp
out
cs
loop
push
sbb
fst
fdivs
jp
or
add
mov
fldenv
imul
cs
sub
arpl
stc
push
aam
outsl
xchg
sub
lock
cmp
dec
js
pop
lods
or
lods
sub
xor
push
cmpsb
insb
stos
iret
adc
jb
fwait
dec
daa
sub
jno
xchg
out
arpl
add
sbb
xlat
ja
inc
inc
inc
mov
mov
mov
ret
add
jge
aas
pusha
cmp
cmp
mov
add
pop
sub
mov
add
push
push
fsubrs
cmp
cmpl
mov
outsb
mov
lods
and
jb
lea
add
mov
jmp
lods
repz
push
test
hlt
dec
mov
insl
sarb
add
lock
jl
mov
push
cld
pushf
cmpb
lock
lret
sbb
popa
loopne
in
or
sbb
insb
mov
popa
stos
call
jb
es
in
xor
sbbb
push
filds
mov
pop
or
and
outsb
or
cmpsb
mov
sub
notb
inc
xor
adc
outsb
enter
and
leave
and
pop
outsb
xor
jecxz
mov
mov
jo
or
adc
xor
mov
inc
jg
lods
jb
jb
mov
mull
mov
sbb
jo
into
int
jmp
icebp
cs
pop
xchg
mov
fs
ret
jmp
sti
into
arpl
sub
inc
fidivrl
test
sbb
adc
xchg
insl
pop
jnp
inc
jge
pop
pop
js
filds
adc
dec
mov
mov
fmul
sbb
dec
jmp
push
xor
test
hlt
aam
out
movsbl
out
rcrb
addr16
je
cmp
mov
xchg
in
pop
ficoml
push
jg
loope
icebp
inc
or
ffree
push
inc
test
or
jno
lds
push
fcoml
xchg
sub
imul
push
or
dec
mov
add
leave
in
jecxz
jecxz
xchg
das
lret
cli
in
push
in
add
and
jno
minps
subl
add
pop
xchg
stos
xor
in
cmpb
xor
jne
movsb
xchg
adc
dec
cmp
xchg
iret
std
iret
cmp
pop
mov
xorl
pop
jl
sbb
mov
or
fildl
adc
sub
jnp
inc
mov
mov
pop
sarb
fcoms
inc
xor
mov
int
stos
lcall
xchg
pop
mov
add
sub
fisubrl
xchg
or
out
inc
xlat
mov
cmp
jl
rcrl
fs
out
out
lea
sub
mov
shr
popf
test
cli
sti
orl
rclb
loop
ret
dec
jle
out
mov
sub
xlat
xor
test
xchg
jno
mov
jecxz
inc
es
or
adcb
pop
ja
gs
test
jnp
inc
push
sbb
jecxz
movsl
iret
insl
xchg
mov
rorl
iret
mov
pop
push
mov
jno
leave
daa
push
push
test
or
pushf
andb
xchg
mov
dec
jnp
adc
jle
mov
xor
push
clc
sbb
or
cmc
jle
mov
pop
stos
arpl
pop
cmpsb
shlb
cmp
rclb
mov
push
mov
cmp
scas
outsl
lods
cmp
xchg
aas
pop
mov
xchg
and
cltd
sbb
clc
jns
out
adc
cmp
sbb
push
out
arpl
push
cld
push
push
push
aaa
loope
xchg
fs
orl
in
loop
jns
mov
or
cmp
in
in
adc
jbe
cmpsl
mov
popa
xchg
mov
sbb
cltd
lds
js
insb
push
jmp
cmp
repnz
bound
or
cs
pop
lea
xchg
mov
sub
inc
mov
insb
mov
cwtl
int
dec
iret
popa
cs
icebp
xchg
repz
ret
aaa
loope
pop
data16
int
lock
outsb
dec
repnz
notl
hlt
or
add
stos
xor
lcall
jge
filds
cmp
bound
dec
mov
fists
lcall
jo
stc
notl
xchg
xor
movsl
push
and
das
and
sahf
mov
jecxz
push
sbb
loope
push
xchg
adc
push
insb
jns
xlat
mov
add
jge
pop
inc
loopne
cli
push
inc
xchg
ds
adc
repnz
mov
pop
push
cmp
pop
fdivs
jno
stc
mov
repnz
dec
out
jb
xor
mov
jmp
ljmp
ret
das
ds
jle
testl
or
mov
lret
jmp
sbb
stos
jg
je
pop
jns
enter
sub
std
jmp
dec
fwait
and
in
into
icebp
add
es
subb
lcall
dec
inc
leave
addr16
adc
mov
ret
xorb
or
sbb
add
out
int3
push
mov
adc
in
xchg
or
adc
inc
out
mov
lds
fldenv
jae
mov
outsl
xchg
rorb
or
outsl
daa
out
in
call
push
clc
imul
cmp
inc
and
sbb
popf
arpl
mov
push
and
jecxz
aaa
gs
cwtl
pusha
push
and
ja
mov
xlat
in
ja
sub
je
aad
pushf
das
xor
mov
jo
pop
cmp
sahf
loopne
lds
cmp
jecxz
xor
jl
mov
popa
ds
int3
outsl
mov
call
iret
leave
flds
cmp
pop
inc
addl
rcrb
imul
add
inc
mov
icebp
cmp
sbb
mov
inc
dec
jecxz
dec
sub
xlat
cmpsl
popa
add
sbb
push
mov
inc
sub
ljmp
cmpsb
mov
mov
movsb
ret
mov
cmpsb
or
adc
int3
jb
aaa
ret
aaa
lds
out
ret
jl
sarb
sub
xchg
sub
fimuls
pushf
sti
push
mov
rol
mov
sub
jecxz
inc
out
fmuls
xchg
in
shlb
icebp
mov
dec
jnp
mov
adc
and
jbe
aam
pushf
jnp
push
shll
or
shll
das
out
or
xor
push
insb
idiv
mov
icebp
inc
push
add
out
inc
jae
mov
inc
test
out
jae
sbb
sub
pop
lcall
push
movsl
in
mov
test
push
leave
cmp
je
lret
sub
mov
push
dec
dec
mov
in
int
lahf
pop
ret
add
pop
in
in
sti
mov
xchg
ds
mov
fiadds
pop
dec
cmp
mov
cmp
and
jecxz
and
je
cld
xchg
cmp
dec
mov
jecxz
and
cld
lds
mov
pop
addr16
mov
ja
xor
sbb
daa
jmp
add
mov
xor
xor
loopne
mov
jle
mov
xchg
jbe
mov
shl
adc
lret
fs
add
xor
cli
hlt
scas
mov
xor
xchg
leave
lock
out
mov
idiv
xchg
ds
adc
sub
push
cmc
fwait
arpl
xor
add
push
mov
mov
int
ja
or
fcomps
lea
and
and
fcomps
sub
dec
lahf
cbtw
jmp
inc
or
inc
mov
xor
xor
negb
in
pop
pop
adc
jl
mov
dec
test
push
sarl
mov
addl
and
add
js
daa
das
fdivs
xor
in
shrb
pop
test
push
fildl
pusha
push
shll
mov
fadd
push
xchg
addr16
test
mov
xchg
inc
std
movsb
mov
mov
pop
out
jg
and
sbb
mov
dec
imul
insl
out
mov
cmp
add
mov
sub
addps
or
stos
addr16
push
push
cmp
lods
push
jne
push
sub
xchg
inc
cmp
xor
xor
sbb
bound
xor
aaa
pop
add
cmp
scas
bswap
add
test
jnp
add
push
in
movsb
cmp
add
decb
repnz
mov
aaa
xchg
or
daa
mov
cmp
mov
lcall
lahf
scas
stos
mov
pop
je
mov
call
mov
or
xor
movsl
stc
mov
mov
fsubr
repz
ljmp
fwait
sbb
inc
cmp
adc
int
mov
adc
cld
jae
xor
xchg
loop
dec
fcmovbe
mov
lods
fstps
pop
in
dec
pop
sbb
mov
mov
pusha
adc
mov
in
mov
xor
sub
addr16
scas
adc
sbb
inc
int3
filds
aad
xlat
repz
xor
mov
nop
adc
clc
aad
aad
movsb
or
or
lods
pusha
pop
daa
sbb
sub
jne
dec
xor
xchg
pop
paddsw
roll
out
test
push
sahf
push
jmp
dec
push
fldl
mov
add
jge
jle
xor
in
sahf
xchg
rorb
jge
push
sub
in
psraw
add
cmc
mov
jp
test
pop
xor
push
cmp
xor
ja
ficoml
test
add
stc
adc
sbb
sbb
jns
and
enter
or
mov
int3
cmc
daa
repnz
inc
int3
xchg
in
rcrl
push
test
jle
fisubl
ja
inc
mov
andl
cli
dec
sub
or
hlt
jmp
fwait
in
dec
mov
cmpsl
mov
js
xlat
jle
loope
pop
lahf
loope
xchg
mov
push
pop
xlat
std
lods
filds
cmp
stos
xchg
add
cmc
in
stos
shlb
lock
jo
xchg
jmp
outsb
loopne
mov
push
pop
xor
movsb
jb
lods
repnz
or
mov
xchg
cltd
add
pop
icebp
push
sbb
leave
shl
pop
leave
sbb
or
ret
fucomi
imul
and
and
lock
sahf
and
fdivs
xor
and
inc
sbb
inc
adcb
jl
jg
mov
pop
push
rcrb
mov
xchg
cmp
addr16
mov
fucomi
and
and
sub
add
sahf
inc
mov
cmp
push
les
outsb
scas
push
daa
xchg
adc
xor
insb
out
jae
enter
sub
cld
out
xchg
xor
inc
adc
adc
dec
gs
fadds
ds
push
xchg
inc
lcall
dec
xor
cltd
idivl
fdivrs
clc
push
rcr
cmpsb
repnz
clc
xchg
sbb
addr16
adc
xchg
jle
or
hlt
aas
int3
pop
mov
cmp
lret
in
ret
cmp
test
outsl
cmc
jmp
or
pop
cmp
notb
les
movl
inc
outsb
push
fsubs
dec
mov
sbb
loope
inc
and
xchg
loop
sbb
repnz
sub
cwtl
lret
stos
pop
cs
xchg
call
pop
insb
or
inc
pop
push
orl
add
push
fwait
mov
arpl
jecxz
cmc
arpl
in
dec
sbb
push
scas
sbb
stos
cld
int3
adc
leave
lock
iret
sbb
mov
sti
popa
pop
outsl
jmp
dec
jecxz
push
fs
sbb
pop
xchg
jno
mov
stos
jle
sti
mov
cld
roll
push
or
dec
lods
xlat
cmp
push
int3
ss
and
add
aas
frstor
push
mov
xor
fimuls
in
xchg
ss
dec
stos
add
xlat
mov
icebp
sub
push
out
ljmp
jl
and
mov
xor
and
xchg
adc
mov
nop
inc
mov
andb
int
inc
mov
sbb
sbb
xchg
mov
pushf
sub
jl
push
pusha
mov
lods
daa
xor
ss
test
sahf
notb
insl
inc
dec
pop
mov
fwait
aas
adc
fwait
lahf
aas
sti
sbb
sub
ds
in
rorl
in
mov
push
and
cmp
inc
jbe
dec
imul
jns
std
push
pop
flds
das
insl
lret
sbbb
or
out
dec
mov
dec
xchg
push
icebp
fdivrp
aam
push
cmp
dec
jge
adc
in
adc
or
dec
dec
and
test
pushf
xchg
sbb
mov
loop
pop
and
andb
fcoms
ja
test
mov
icebp
mov
cwtl
lret
add
pushf
pop
stos
mov
dec
sbbb
push
cs
pop
xchg
mov
enter
pop
or
dec
in
xchg
mov
dec
call
xor
xchg
andl
push
test
outsl
test
push
cmp
lahf
lcall
scas
xchg
sbb
adc
shr
data16
seto
pop
inc
xor
xchg
and
mov
bound
bound
nop
cld
xchg
fcoml
xor
xor
test
sbb
fwait
cmp
jmp
pop
xchg
sbb
mov
dec
movsl
jg
stos
stc
jle
push
and
xchg
mov
into
pushf
out
lods
push
push
movsl
add
es
cmp
adc
aad
cmp
outsl
dec
aam
jne
test
lds
sbb
fldl
jmp
nop
out
xchg
pop
in
jnp
mov
pop
in
xchg
jecxz
sbb
xlat
enter
in
fsubs
cmpsb
lods
mov
cltd
cmpsl
and
cs
and
ss
jae
aaa
imul
mov
aas
fdiv
mov
pop
mov
cwtl
mov
dec
mov
pop
adc
ret
je
sahf
jl
xchg
dec
lds
loop
insl
std
iret
adc
xchg
rcrl
pop
and
out
adc
addr16
movl
adc
shll
jbe
push
cmp
pop
inc
sub
cs
mov
jne
stos
cmp
push
repnz
in
cmp
mov
das
and
push
sbb
mov
inc
sbbl
mov
aad
push
ficoms
aaa
pop
out
inc
mov
adc
fmuls
arpl
jl
roll
pushf
mov
lahf
bound
out
dec
cmp
pop
mov
pop
outsl
jns
aam
or
gs
adc
mov
in
lods
gs
pop
jp
es
push
mov
mov
repz
cmc
xchg
mov
and
pop
and
stc
xchg
leave
arpl
cmp
fiaddl
push
sub
pop
stc
cmp
nop
adc
js
out
dec
or
int3
mov
xor
movsb
push
ret
mov
loop
lcall
jle
and
push
hlt
je
lock
pop
inc
lret
xor
data16
add
arpl
div
mov
xchg
mov
mov
push
or
test
data16
mov
mov
jl
xchg
push
cmp
into
cmp
xchg
inc
inc
vsqrtps
in
add
mov
arpl
adc
or
addr16
test
jo
cltd
or
mov
or
mov
jmp
lods
daa
sti
call
mov
or
and
pop
xlat
sbb
inc
shll
fistps
rorl
adc
fcomi
in
testb
hlt
xchg
mov
in
popa
std
xor
push
int
mov
or
rcl
dec
sub
inc
mov
or
mov
xchg
mov
mov
pop
sti
clc
leave
mov
call
rorb
push
sbb
or
xor
ret
or
mov
cld
addl
jb
add
jge
add
sub
mov
sub
jle
lea
stos
push
or
push
or
dec
push
jno
push
mov
outsb
popa
cmp
aas
test
in
mov
scas
ds
and
outsb
inc
cmp
dec
sbb
xor
cli
push
and
mov
mov
scas
lods
icebp
push
mov
ds
add
sarb
and
ret
mov
push
adc
mov
shl
popa
jecxz
pop
jne
cmp
mov
pop
jg
mov
sbb
push
scas
dec
adc
mov
into
push
push
das
add
push
xchg
push
xlat
inc
cld
inc
cmpsb
iret
add
rorl
out
sub
mov
mov
pop
pop
mulps
add
pop
inc
adc
outsl
test
push
dec
cmp
sub
movsl
push
pop
add
mov
insl
ret
out
adcl
pop
adc
test
cmp
pushf
bound
adc
stos
popa
xchg
daa
jecxz
jb
in
cmc
adc
jp
inc
mov
xor
mov
mov
jbe
sti
jae
insb
pop
push
dec
inc
xchg
out
pushf
imul
int3
dec
out
xlat
inc
and
and
add
aas
mov
and
add
ret
orl
jmp
or
aad
int3
pusha
js
negb
xchg
lahf
in
ss
cmp
popa
push
int3
add
pop
pushf
pop
popl
add
xor
adc
shrb
pop
ljmp
rclb
dec
jns
and
cwtl
push
sub
jp
fmuls
std
out
pop
sbb
outsl
xor
or
out
sub
and
or
sbb
clc
stos
add
adc
test
mov
xor
ds
dec
push
aad
lea
lahf
arpl
jle
mov
movsl
sub
cmpsl
dec
int3
rcrl
rcll
fs
sub
sbb
cmp
xlat
mov
sub
rcr
aam
push
adc
or
jo
rorl
mov
decb
shl
stos
jge
add
icebp
rcll
in
pop
mov
test
jl
cwtl
clc
cmp
and
cmc
sbb
push
mov
jp
fimull
mov
push
es
dec
push
mov
sbb
or
ljmp
dec
lret
push
mov
hlt
scas
and
inc
sub
xchg
arpl
sub
jae
mov
inc
mov
sbb
sbb
rclb
fstl
popf
push
loopne
and
nop
sbbb
ficoml
dec
ja
mov
lods
mov
int3
cmpsl
adc
repnz
movsb
push
pop
mov
and
into
and
pop
scas
aam
cs
scas
int
or
mov
in
xchg
xchg
daa
sbb
dec
das
out
outsb
scas
sub
pop
jge
and
jge
pushf
lock
mov
cwtl
mov
sub
orb
sub
push
inc
test
push
movsb
and
cmp
enter
lods
clc
mov
dec
mov
xor
add
flds
bound
mov
inc
outsl
push
mov
push
xor
outsb
out
in
mov
cmp
pusha
addl
addr16
int3
sbb
int3
xchg
testb
add
add
pop
add
pusha
xor
inc
cmpb
out
and
inc
sbb
ret
push
pop
sbb
aad
flds
jo
dec
and
hlt
dec
flds
jl
add
clc
clc
movsl
loopne
jne
js
mov
inc
enter
mov
jne
push
in
mov
lret
sbb
or
gs
xchg
sbb
in
mov
in
dec
mov
out
push
rclb
adc
xor
dec
jge
iret
cmp
mov
.byte
adc
xor
nop
add
add
test
mulb
mov
mov
jns
cmp
xchg
sbb
dec
xor
and
addr16
and
cmp
lea
test
test
nop
mov
int3
cmpsb
std
xchg
adc
pushf
xchg
sub
rorl
call
es
push
pop
imul
pop
and
lret
adc
jge
aam
add
lock
mov
or
cmp
or
xchg
hlt
addr16
test
pop
sub
daa
pop
mov
push
out
sbb
sub
int
nop
xchg
out
xor
dec
lds
sahf
hlt
addr16
cld
ret
das
or
adc
rorb
movsl
inc
into
or
or
cmpsb
push
out
or
pop
into
sub
and
jo
pop
sbb
mulb
mov
sbb
ficompl
push
pop
push
mov
and
cmp
in
pop
test
lahf
push
xchg
or
xchg
jb
xlat
sbb
and
gs
dec
and
jmp
int3
lahf
pop
or
aam
sbb
insb
sub
iret
inc
jle
adc
push
xchg
inc
outsb
daa
and
lods
lahf
loopne
push
testb
adc
jne
push
xor
mov
sub
jnp
push
adc
jae
jno
push
mov
jmp
ficoml
pop
ficompl
push
jle
and
fwait
sar
fisubl
mov
stos
fldenv
bound
insb
rcrl
mov
jp
sbb
mov
inc
in
mov
mov
outsl
add
and
ja
popf
subl
pop
es
outsb
xchg
and
int
xor
jae
cmp
push
jb
xchg
lods
cwtl
imul
shlb
scas
mov
mov
sbb
in
xchg
mov
xchg
sub
test
ljmp
repnz
add
add
push
add
add
add
add
add
addb
addb
add
pop
add
addb
add
rolb
add
adc
add
nop
add
addb
add
push
add
add
add
add
add
mov
add
addb
add
push
add
add
add
add
add
add
add
addb
add
fadds
add
lock
addb
add
add
addb
add
push
add
add
add
add
push
add
pop
add
cmp
add
push
add
adc
add
push
pop
add
addb
adc
add
cwtl
add
adc
add
mov
add
push
add
add
add
add
push
add
add
add
add
orb
loopne
add
clc
add
adcb
add
add
adcb
add
add
adcb
add
add
push
add
add
add
push
add
add
push
add
call
add
cmp
add
push
pop
add
and
add
ss
add
inc
pop
add
bound
add
addb
sbbb
add
xor
andb
cmpb
add
js
add
nop
add
addb
add
push
add
add
add
add
add
mov
add
addb
add
push
add
add
add
add
add
add
add
rolb
add
add
push
add
add
add
add
add
add
add
rolb
add
add
add
jmp
add
add
add
add
add
add
loopne
add
add
add
push
add
add
add
add
add
add
add
lock
add
add
add
jmp
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
adc
add
push
add
add
add
add
add
add
add
and
add
push
add
add
add
add
add
add
add
xor
add
push
add
add
add
add
add
add
add
inc
add
add
push
add
add
add
add
add
add
add
push
add
add
push
add
add
add
add
add
add
add
pusha
add
add
push
add
add
add
add
add
add
add
jo
add
add
add
push
add
add
add
add
add
add
add
addb
add
jmp
add
add
add
add
add
add
nop
add
add
push
add
add
add
add
add
add
add
mov
add
add
jmp
add
add
add
add
add
add
mov
add
add
add
push
add
add
add
add
add
add
add
rolb
add
jmp
add
add
add
add
add
add
rolb
add
push
add
add
add
add
add
or
add
add
add
push
add
add
add
add
add
or
add
add
add
push
add
add
add
add
add
or
add
push
add
add
add
push
add
add
add
add
add
or
add
push
add
add
add
push
add
add
add
add
add
or
add
push
add
add
add
push
add
add
add
add
add
or
add
push
add
add
add
push
add
add
add
add
add
or
add
add
add
add
push
add
add
add
add
add
or
add
add
add
add
push
add
add
add
add
add
or
add
add
add
add
push
add
add
add
add
add
or
add
add
add
add
push
add
add
add
add
add
or
add
add
add
jmp
add
add
add
add
or
add
add
add
jmp
add
add
add
add
or
add
add
add
jmp
add
add
add
add
or
add
add
add
jmp
add
add
add
add
add
add
rolb
add
movl
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
cwtl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pushf
add
add
add
add
add
add
add
adc
add
in
add
add
add
js
add
or
add
in
add
add
add
addb
insb
add
add
add
add
add
add
inc
add
faddl
add
in
add
add
add
enter
aam
add
in
add
add
add
pushf
inc
add
inc
add
add
add
add
add
add
inc
add
mov
add
add
add
add
add
in
add
add
add
xor
add
sbb
add
in
add
add
add
push
dec
add
mov
add
add
add
add
add
xor
add
in
add
add
add
inc
dec
add
pop
add
add
add
add
add
add
add
push
sub
in
add
add
add
pushf
ja
add
add
in
add
add
add
mov
add
add
add
add
add
add
ja
add
add
add
add
add
add
add
ja
add
add
add
add
add
add
add
ja
add
add
in
add
add
add
fdivs
add
add
add
add
add
add
add
ja
add
add
in
add
add
add
in
add
add
add
add
add
add
ja
add
add
in
add
add
add
hlt
ja
add
add
add
add
add
add
add
ja
add
add
add
add
add
add
add
js
add
add
add
add
add
add
add
lea
add
add
add
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
add
inc
add
dec
add
inc
add
add
pop
add
add
inc
add
add
push
add
add
dec
add
add
dec
add
inc
add
or
inc
add
dec
add
push
add
dec
add
inc
add
add
add
inc
add
push
add
or
add
dec
add
dec
add
push
add
push
add
inc
add
push
add
dec
add
push
add
push
add
push
add
dec
add
push
add
dec
add
add
inc
add
dec
add
push
add
add
push
add
push
add
dec
add
push
add
dec
add
add
dec
add
push
add
dec
add
inc
add
push
add
add
add
pop
add
push
add
dec
add
push
add
add
push
add
push
add
dec
add
add
cmp
add
xor
cmp
pop
or
mov
mov
xor
les
into
pushf
mov
ret
mov
fcoml
les
jo
and
mov
mov
jmp
dec
xchg
pop
sahf
sbb
and
xchg
aaa
push
ret
outsb
dec
sbb
or
mov
cli
jl
sbb
mov
xor
pop
push
ja
xchg
sub
rolb
int
add
ja
jne
cltd
aaa
testl
pop
inc
jns
in
inc
inc
in
inc
repz
push
iret
cltd
or
jno
pop
pop
iret
pop
dec
mov
sub
xchg
in
cmpsb
outsb
cmpsl
fmul
aam
sbb
lea
jmp
xor
adcl
stos
or
xchg
cwtl
jae
mov
mov
or
add
shrl
test
sbb
push
push
inc
das
xchg
add
fildl
jmp
btc
mov
lds
xor
fstps
or
jmp
add
scas
lock
enter
add
and
mov
dec
int3
jge
mov
xor
fs
and
jl
jg
jnp
movsb
cwtl
mov
fisubrl
push
loope
jnp
addl
lods
sub
cmp
add
mov
lret
jp
pop
fildl
loope
dec
inc
cltd
mov
in
fnstsw
xchg
fwait
test
hlt
loop
inc
mov
pusha
jle
dec
dec
jno
shrl
pop
pop
and
sbb
in
push
mov
int3
aad
inc
pop
dec
jnp
lods
push
data16
jno
or
std
rcrl
pop
jmp
xor
shrb
fistps
daa
mov
push
pop
xchg
dec
aad
cmp
pop
std
shlb
jno
cltd
inc
mov
cmp
jbe
in
outsb
pop
adc
mov
sbb
ds
mov
fildl
jg
daa
daa
mov
jle
adc
or
and
dec
dec
inc
pop
cwtl
aad
mov
inc
inc
dec
imul
mov
fildll
dec
mov
ljmp
sbb
fldenv
fsubs
sub
add
cmpl
andl
jno
das
jp
mov
movsl
xlat
dec
push
mov
jno
lahf
icebp
pop
or
sti
int3
movsl
cmp
mov
jecxz
jb
outsl
ret
cmpsl
vpmacswd
jae
push
ss
inc
pop
mov
pusha
les
xor
push
arpl
add
xchg
pop
insl
dec
gs
out
neg
push
mov
and
inc
cmc
and
cmp
je
inc
movsl
xchg
mov
add
repz
cmpb
imul
in
jmp
dec
imul
mov
adc
std
roll
pop
mov
gs
jmp
mov
add
jbe
les
negl
insb
push
stos
jo
mov
enter
jno
jne
dec
in
add
push
dec
push
or
ror
imul
data16
lock
f2xm1
cwtl
pop
mov
or
and
testb
clc
sub
jg
insl
repz
rol
push
loop
ss
dec
add
and
out
out
imul
pop
icebp
xchg
adc
push
insb
mov
pop
jge
lret
add
inc
imul
jbe
lahf
jmp
bnd
repz
or
and
movsb
or
jl
pop
gs
cmp
outsl
enter
jle
and
lods
mov
sub
jmp
dec
jo
aaa
mov
jnp
xor
loope
mov
sbb
xlat
lods
mov
ja
test
lods
into
mov
adc
add
push
enter
adc
cmc
sahf
aas
mov
inc
sti
aas
int
pop
adc
or
add
clc
rcrl
shll
cli
movsl
sbb
mov
push
test
xor
les
mov
dec
addr16
stos
mov
sub
sub
mov
or
hlt
into
mov
sub
adc
push
jae
push
leave
sar
scas
add
iret
mov
sub
fwait
adc
jns
push
jne
add
mov
lret
pop
mov
pop
jle
sahf
out
adc
test
push
mov
loopne
jb
xor
mov
fs
sub
imul
fnsave
js
push
call
or
mov
pop
ja
push
or
xchg
sbb
mov
imul
lods
pop
cmp
outsb
cli
lock
out
imul
js
arpl
adc
and
outsb
inc
pop
test
iret
or
xchg
mov
scas
sbb
inc
jl
mov
jg
les
mov
orb
int
into
jnp
jb
lods
scas
inc
sbb
insl
sbb
hlt
push
ljmp
test
xor
xchg
pop
cs
insb
orb
xor
std
aad
xor
mov
and
je
addr16
test
jbe
xor
sbb
jae
lcall
dec
fs
lods
test
shl
inc
fcmove
pop
stos
shl
or
push
test
adc
pop
dec
fistpl
popa
outsb
mov
lahf
sbb
out
push
xchg
jecxz
fs
cwtl
fldl2e
loopne
push
insl
cmp
in
hlt
scas
mull
fidivl
outsb
mov
mov
cmc
adc
cmc
xchg
or
inc
pop
mov
mov
cwtl
movsl
xchg
mov
mov
fcomps
adc
dec
and
aad
roll
push
lea
sbb
rclb
jmp
push
dec
inc
ss
adc
xchg
jecxz
mov
shr
and
mov
mov
add
mov
hlt
aam
cltd
mov
dec
push
int
inc
sbb
mov
xchg
lods
iret
test
add
pop
mov
test
xchg
cmpsb
push
paddw
insl
fildl
push
pop
cmp
imul
mov
mov
mov
cmp
js
push
add
stos
insl
cld
dec
inc
cmc
gs
aam
sub
mov
adc
aad
fs
fwait
jae
sub
ss
push
or
loope
cmp
mov
int3
xchg
inc
mov
or
adcb
loopne
mov
test
loop
shlb
jge
mov
dec
adc
rcrb
ss
das
pop
hlt
repnz
pop
cmp
fwait
lret
punpcklbw
mov
pop
fbstp
mov
xchg
roll
sti
fdivrs
pop
xchg
aaa
leave
mov
jns
cltd
xchg
out
jge
ret
xchg
jb
sti
out
out
clc
mov
test
xor
or
not
ljmp
in
xchg
cli
and
mov
jb
cmp
pop
dec
pop
int3
mov
cld
pop
ret
mov
add
js
clc
lahf
jns
mov
iret
aas
dec
scas
mov
adc
sti
lock
rorl
ret
ss
pop
or
xchg
mov
in
call
in
cmp
movsb
push
mov
add
mov
lods
cwtl
int3
aad
sub
push
or
or
ficoml
sub
lret
cmp
cwtl
movsb
lcall
mov
les
pop
mov
dec
dec
adc
je
aam
jnp
sbb
daa
and
xchg
hlt
cmp
lock
outsb
loope
gs
mov
xchg
lret
adc
mov
cld
cmpsb
sub
andb
mov
xchg
je
ja
fsts
dec
push
out
mov
jge
mov
mov
mov
sub
icebp
sbb
cmp
or
idivl
mov
sbb
cltd
movsb
fwait
sbb
pop
push
movsl
fistpll
in
lret
repz
enter
sbb
push
test
jl
jns
int
lock
jl
inc
ljmp
pop
jle
aaa
xchg
mov
testb
push
sub
bound
test
jbe
sub
cwtl
xor
lds
stc
test
popf
int3
add
test
fdivrl
movsb
and
add
stc
add
repz
test
aas
hlt
or
cltd
imul
lock
ret
imul
lods
loopne
cmpl
repz
add
cmp
loop
push
cmc
gs
xchg
movsb
out
outsb
movsl
or
or
cmp
pop
insl
or
and
loop
mov
mov
sub
bound
fldcw
test
subb
jno
shrb
stc
dec
mov
insb
enter
dec
add
lret
testl
call
inc
xor
xchg
dec
mov
push
shrl
fcmovnbe
xor
push
cmp
adc
push
mov
mov
xor
jne
push
mov
inc
das
mov
data16
mov
dec
aad
xor
arpl
jle
lds
xchg
pop
jge
iret
je
push
ss
and
or
shl
mov
cmpl
add
or
icebp
mov
cmc
jp
jmp
pop
out
cmp
cmp
push
rcll
cmc
add
fimull
lock
or
sub
sbb
sub
shll
cmc
xchg
outsl
cmp
pop
popa
mov
sbb
sub
and
enter
xchg
fldenv
lock
push
jge
ja
roll
add
pop
dec
test
sub
ret
gs
leave
js
fistpl
fistpll
and
pop
lods
mov
icebp
jbe
push
fiadds
xor
xor
mov
cld
push
test
cs
clc
cmp
jnp
call
mov
out
pusha
stos
fidivl
subb
sbb
int3
mov
dec
fwait
xor
loop
jmp
dec
hlt
out
fidivrs
dec
pop
ss
xchg
adc
test
fwait
xchg
ss
out
shlb
outsl
cltd
xor
mov
cmpsl
or
mov
xor
inc
fstpl
mov
mov
mov
mov
xchg
mov
jo
pop
addr16
dec
inc
lret
inc
mov
xor
in
jns
das
mov
jo
in
mov
cmpsl
outsl
push
sub
xor
jae
and
inc
push
push
sbb
mov
xchg
cli
movsb
test
inc
xor
movsl
push
adc
jge
sahf
cwtl
sub
or
push
inc
jg
mov
aaa
jo
add
jg
in
xor
lock
or
jb
inc
inc
aas
aas
nop
sarb
xor
sub
mov
scas
sti
pop
out
gs
sbb
add
or
adcl
xchg
les
and
shl
mov
cmc
repz
sub
push
xchg
lods
ds
inc
mov
cmp
cld
fldt
jg
adc
ror
dec
adc
xchg
fdivl
js
nop
push
cltd
jl
inc
stc
imul
sub
fimuls
jnp
and
mov
loopne
daa
dec
mov
mov
hlt
adc
ja
sub
movsl
mov
add
shl
pop
xchg
mov
dec
movsl
nop
xchg
and
add
push
cmp
int
xchg
das
sbb
jno
push
repnz
les
jbe
adc
push
sub
mov
js
lods
clc
subb
add
adc
or
ds
sub
pop
jns
inc
icebp
jge
sbb
mov
cmp
lcall
inc
pop
mov
pop
aad
mov
movsb
js
jnp
or
add
movl
out
and
adc
pop
dec
cs
mov
out
movsb
lea
test
shrl
cmpsb
or
loopne
cmc
push
mov
dec
mov
jl
xchg
cmc
xor
mov
imul
mov
pop
cld
inc
xor
xor
pushf
imul
in
ftst
push
psubq
adc
testl
pusha
xchg
mov
cmp
fistl
sbb
rep
es
jno
sub
bound
cwtl
jns
incl
xchg
xchg
mov
jb
push
push
cmp
mov
fnstcw
add
popa
cmp
push
out
lret
ficoms
or
sub
ret
rclb
jge
push
test
addl
pop
pop
es
imull
cmp
aad
or
or
sahf
hlt
hlt
mov
not
sti
fs
popf
lock
xchg
xchg
jle
enter
mov
or
addr16
mov
add
fs
repz
push
or
adc
mov
sbb
ljmp
push
mov
sub
imul
rol
aaa
pop
addr16
stc
jno
gs
or
aas
movsl
test
clc
push
and
pop
lret
int3
in
mov
lret
mov
and
in
lret
outsl
stos
cltd
mov
jg
inc
cvtps2pi
xor
pop
das
mov
std
das
mov
and
outsl
enter
cmp
jmp
hlt
mov
add
push
dec
cmpsl
repz
mov
mov
pop
cmpsb
daa
xor
mov
aas
or
jnp
xor
dec
push
insb
rcll
loop
push
popa
adc
out
cli
adc
adc
jp
cmp
repnz
addr16
popl
daa
mov
sbb
arpl
test
add
cmp
jecxz
int
jl
hlt
addl
lahf
rcll
ja
iret
icebp
jns
mov
lahf
inc
dec
mov
cmp
mov
sbb
mov
arpl
rolb
jmp
jno
imull
mov
mov
mov
js
jae
add
notl
pop
in
hlt
pop
lock
aaa
leave
scas
xchg
dec
repz
pop
clc
xor
mov
jns
insl
cmc
test
xor
inc
push
ss
test
stc
xlat
shll
mov
fmulp
ljmp
xchg
fsts
into
std
jp
add
repz
mov
mov
inc
mov
dec
dec
scas
inc
movsb
sub
jmp
add
mov
cmp
xor
sti
sbb
mov
stos
std
loope
dec
push
es
sub
xor
cmpsl
or
push
add
push
sbb
rcrl
arpl
mov
or
dec
pop
xchg
dec
adc
pop
cmp
xchg
in
lods
fucomip
or
fildl
lahf
pop
jns
cwtl
adc
xor
push
sbb
dec
incb
nop
pop
repz
and
out
inc
fstpl
lea
inc
sbb
push
mov
gs
jl
push
dec
enter
ds
mov
nop
call
push
mov
aas
fstp
sub
in
add
xchg
xor
lret
ret
jl
xchg
sbb
repnz
xchg
cmp
or
loopne
xor
fsubs
mov
dec
popf
leave
xor
lods
xchg
and
scas
xchg
pop
pop
and
jne
jns
jne
pop
jns
pop
mov
out
lcall
fcmovbe
push
hlt
inc
mov
sbb
jo
insl
or
daa
adc
mov
int3
addr16
adc
push
and
cltd
int3
mov
push
arpl
cmc
test
rcll
jno
and
sbb
aas
cmpsb
cmp
popa
cli
add
imul
mov
shl
mov
pop
mov
stos
dec
cmp
nop
mov
lret
jno
in
imul
aad
cwtl
cmp
in
dec
iret
sahf
stc
mov
mov
movups
add
lret
dec
dec
mov
pop
mov
dec
dec
pop
mov
push
jnp
jl
les
outsb
gs
adc
rcll
ja
cmp
adc
sbb
out
mov
mov
jl
or
jp
test
push
call
dec
dec
xchg
ficomps
push
dec
loopne
imul
scas
jo
lock
imul
das
dec
not
xchg
add
negl
test
in
ss
sub
or
mov
int3
pop
scas
lahf
pop
xchg
mov
popa
bound
inc
arpl
int
pop
lahf
test
mov
sbb
cli
test
cli
jecxz
daa
sub
add
pop
sahf
inc
cmpsl
jge
jecxz
push
cltd
push
mov
test
out
mov
arpl
das
das
and
jno
xchg
sub
xor
imul
shll
push
cmp
rcrl
and
leave
into
test
aaa
pop
sahf
dec
js
mov
add
and
or
jg
pop
pop
add
shlb
pop
and
inc
and
jmp
cmp
popf
test
insb
add
psubd
movsb
dec
notl
jl
nop
add
call
inc
cmp
jo
mov
push
std
lret
test
mov
stc
cmp
dec
ljmp
push
pushf
jp
mov
inc
mov
cmp
shlb
mov
dec
mov
in
nopl
outsb
mov
sub
popa
addl
mov
cmc
mov
push
insb
inc
push
in
cmp
inc
mov
pop
nop
lret
push
push
push
push
cmpsb
cmpsb
insb
lock
movsb
loope
mov
and
pop
cmpxchg
std
adc
std
icebp
adc
add
cmpsl
popa
roll
cmp
adc
add
sbb
mov
inc
out
inc
mov
test
pop
icebp
imul
int3
add
push
mov
in
outsl
rorl
rol
popl
lds
xor
xor
fiadds
fbld
push
pusha
xchg
orb
pushf
cld
in
incb
das
aaa
popf
sbb
mov
or
dec
mov
pop
xchg
gs
std
sub
rcr
in
ficomps
shll
push
fdivl
mov
mov
out
push
in
data16
aad
xor
adc
mov
sub
xchg
das
popf
out
jl
push
mov
sbb
into
mov
push
mov
pop
fimull
jae
pop
xchg
pop
loope
pop
sbb
mov
shrb
sbb
push
xor
pop
cwtl
jl
sbb
aaa
xchg
mov
fwait
rolb
mov
repz
sbb
stc
dec
in
jle
and
mov
mov
push
jecxz
mov
in
inc
rcrb
jns
fwait
sbb
sbb
pop
jmp
loope
push
fldt
mov
mov
mov
loope
cld
inc
jb
and
or
lock
fmulp
popa
cmp
sbbb
xor
into
mov
jmp
testl
cmpsb
mov
mov
mov
xchg
mov
stos
aas
orb
mov
insb
jb
inc
cmp
pop
inc
dec
inc
mov
xchg
les
jle
rolb
xor
idiv
push
adc
int
mov
pop
cmc
jb
add
cwtl
cmp
pop
movsl
lds
mov
movsb
cltd
mov
jo
push
mull
mov
out
cmp
push
jge
jo
pushf
shr
mov
mov
pop
pop
inc
outsl
xchg
test
dec
dec
testb
repnz
push
jo
sti
push
inc
mov
mov
bswap
mov
or
aaa
xor
sub
dec
lcall
jbe
xor
pop
jb
pop
pop
fisttps
xchg
and
mov
xchg
mov
inc
popa
pop
lods
stc
pop
mov
jecxz
xor
fisttps
xor
xchg
test
icebp
out
cld
mov
cmp
mov
aaa
sbb
das
or
clc
ror
inc
mov
icebp
ja
mov
or
or
sbb
js
pusha
jl
cwtl
rolb
mov
das
int
daa
add
dec
testl
or
cltd
mov
push
lea
jmp
add
adc
sbb
rolb
rcrl
out
mov
iret
sahf
xlat
sti
push
dec
outsb
xchg
mov
addr16
pop
out
mov
mov
jp
pop
jge
dec
cmp
les
loop
imul
addb
in
and
push
insl
push
dec
mov
xchg
sarl
xchg
xchg
pop
and
xchg
std
mov
dec
divb
imul
fdivrs
test
mov
add
mov
pusha
insl
stos
sbbl
rcrl
and
movsl
or
xchg
mov
jp
and
rcll
stc
sub
jbe
jns
push
cmp
setno
push
xor
mov
popf
push
dec
dec
lods
mov
add
jae
pop
add
lods
lods
das
insl
jg
push
paddw
xchg
je
dec
dec
mov
mov
stc
test
dec
pop
mov
sbb
icebp
mov
jecxz
push
hlt
shr
repz
xchg
cwtl
add
adc
add
pop
jmp
jne
kmovw
sub
fmull
lods
add
mov
lds
dec
inc
fisttps
imul
fistpll
ljmp
pop
fidivl
mov
inc
pop
adc
movsb
xor
shll
add
insb
enter
inc
push
adc
add
leave
fwait
push
lahf
jae
dec
es
pop
ljmp
pushf
jb
ja
pushf
mov
dec
dec
leave
ret
mov
mov
add
sub
sub
xchg
sbb
inc
push
mov
xchg
mov
xor
inc
xor
mov
lods
popa
iret
ja
rclb
pop
mov
in
popa
jl
push
push
xchg
xor
mov
jns
xor
cld
popa
sbb
xchg
jo
out
in
imulb
arpl
xor
adc
xor
daa
pminsw
js
ds
fldl
stc
mov
mov
inc
pop
add
aad
rcrb
push
dec
js
xor
pop
mov
sbb
les
lods
mov
fnsave
iret
sbb
daa
sbb
mov
lods
mov
mov
add
sbb
into
or
mov
iret
out
movsl
jmp
push
repz
imul
scas
mov
adc
repz
gs
pusha
lahf
pop
add
popa
rcrl
ficoms
mov
xchg
pushf
int
scas
fsubrl
fdivrl
xorl
movsb
pop
push
sbb
dec
sub
or
ss
sub
pop
jmp
inc
mov
jl
sbb
stos
dec
rol
pop
stos
pop
shrl
mov
mov
mov
fsubr
sbb
sbb
cltd
fwait
popf
xchg
and
sub
inc
push
pushf
jbe
arpl
jmp
imul
fimull
push
cs
mov
fdiv
xchg
repnz
ss
in
loopne
mov
lahf
inc
mov
inc
fbstp
dec
xchg
out
cld
adc
iret
sub
push
jmp
push
mov
xchg
scas
mov
mov
xchg
aaa
push
jle
fbstp
in
lods
lret
adc
insl
lods
int
pop
int
sub
cmp
fprem1
cs
jns
shll
xor
mov
data16
cmpsb
mov
or
inc
pop
aas
inc
fadds
sub
adc
sbbb
lahf
cs
nop
cs
loope
sbbb
pop
dec
data16
rorb
push
and
out
or
imul
hlt
push
cmp
test
cwtl
fcom
sub
pop
loop
push
repz
test
lret
ljmp
cmpsb
clc
out
scas
jl
and
push
push
adc
hlt
dec
outsb
pop
mov
jge
push
xchg
pop
out
loop
xlat
push
mov
lret
and
mov
and
aas
aam
mov
gs
jp
int
pop
jmp
es
nop
and
mov
stos
rcr
out
leave
test
hlt
mov
sub
outsb
cmp
outsb
movsl
pop
cwtl
xlat
adc
in
cmpsb
repz
les
jge
das
mov
or
inc
push
push
fsubrp
sbb
outsb
cmp
iret
popa
in
xor
int3
pop
mov
fsubr
sub
jbe
movsl
jl
stos
xor
jno
repz
sub
or
jae
cwtl
out
push
mov
jecxz
in
sub
in
cmp
xchg
mov
xor
outsl
insb
sahf
mov
cli
jl
push
add
int3
inc
sub
pop
cmpsb
testl
out
inc
jp
fs
xchg
pop
lods
orl
xchg
push
popf
mov
popa
shrl
cmp
or
leave
jmp
and
outsb
fildl
jne,pn
popf
jns
or
xchg
cli
xorb
or
mov
push
stos
xchg
lock
dec
sarb
sub
dec
or
push
subb
sarl
fsubp
push
inc
xchg
int
cli
mov
mov
popf
mov
push
xchg
mov
sub
fdivrs
fdivs
mov
inc
sub
popa
mov
les
enter
push
pushf
lods
lds
aad
notl
mov
pop
mov
insb
adc
push
or
cmpsl
add
push
dec
mov
divb
cmp
paddq
lock
push
jb
jp
dec
cli
mull
stc
rclb
fidivl
in
lahf
adc
pop
and
repz
mov
xor
xorps
mov
pushf
jb
sbb
xchg
shrb
mov
push
jmp
jg
cmp
xor
popa
inc
in
xor
and
push
mov
jno
fistps
or
jns
adc
adc
xchg
push
dec
pop
xor
test
fistps
rorb
push
das
bound
gs
xchg
mov
scas
movsl
push
dec
subl
pop
fistpll
or
sahf
out
add
and
sbb
mov
xchg
movsl
jmp
sbb
aaa
imul
dec
jmp
repnz
ja,pn
add
push
mov
popf
sub
push
sahf
adc
add
sbb
lcall
jp
arpl
xchg
das
cmpl
sbb
sbbb
sub
mov
or
inc
cltd
push
xchg
es
pop
scas
scas
movsl
push
lock
push
jge
addr16
hlt
pop
sub
icebp
adc
jo
dec
add
xor
in
mov
hlt
or
cmp
dec
mov
pop
push
pop
fistl
hlt
stc
pop
roll
inc
xor
pop
out
or
and
das
fisubrl
mov
mov
mov
adc
cli
imul
adc
cli
jae
jmp
aam
adc
lcall
cmp
sarb
or
mov
xorl
add
sbb
adc
repnz
fs
shlb
or
push
xchg
jo
pusha
push
dec
mov
cmpsl
cmp
sbb
aaa
stos
dec
movsb
sub
xor
sub
addb
push
cltd
sbb
repnz
adc
shlb
ud0
pop
aam
dec
dec
int
aad
int3
movsl
add
fdivrs
pop
jg
adcb
divl
pusha
sub
pop
mov
lods
out
or
mov
adc
sbb
or
jne
xor
rcll
test
xchg
push
subb
fsubrl
or
into
fiadds
jge
sub
gs
fs
xchg
lea
push
xor
mov
sbb
test
xchg
sub
or
inc
jo
cltd
stos
push
or
test
icebp
loopne
stos
pop
pusha
inc
pop
lock
adc
cwtl
push
xorl
imul
ret
push
stos
jno
inc
push
mov
jmp
xchg
inc
outsl
jle
mov
lea
push
pop
mov
lods
int
lea
add
out
mov
sub
cld
insb
or
lods
pop
sbb
dec
pushf
mov
mov
in
cmpsl
dec
bound
nop
roll
mov
xor
adc
out
or
push
dec
cltd
ficoml
mov
out
insl
push
vmwrite
cmp
enter
fwait
xor
sbb
in
int3
ret
adc
cmp
mov
jp
or
out
pop
fsubs
mov
mov
mov
cmp
je
divl
inc
pusha
stos
mov
out
test
xor
insb
mov
fists
lret
fdivrp
arpl
movsb
jno
enter
in
dec
pop
stos
cwtl
ds
pop
dec
jae
jp
mov
iret
xor
pop
andb
dec
test
jg
std
adc
push
mov
mov
cmp
jp
lds
popf
mov
push
push
xchg
adc
adc
and
mull
cld
pushf
or
mov
inc
xchg
test
sbb
out
mov
inc
mov
fldt
call
jge
movsl
dec
fsubrs
inc
or
ja
std
pop
sbb
push
cli
cltd
or
int3
cwtl
push
bound
je
dec
shrl
out
xchg
adc
mov
loope
test
and
cmpl
fisttpll
call
sub
cmp
int3
mov
pop
test
push
sbb
jb
lock
inc
ljmp
sbb
fdivp
notb
test
andl
lea
in
or
add
stos
mov
dec
ja
xchg
cmpsl
jnp
xchg
shrb
jbe
jno
jo
xchg
out
cmpsl
lret
jecxz
jae
das
jo
imul
imul
movsb
fidivs
xchg
jne
xchg
hlt
mov
sub
jge
fcoms
sub
or
andb
andb
jl
sub
out
mov
scas
jl
ficoml
call
es
fcmove
dec
fcom
pop
push
stos
outsl
data16
mov
pop
cmc
jo
je
out
xchg
mov
mov
call
and
js
jnp
and
xchg
pushf
fsubrl
nop
out
mov
movsb
test
cmpsb
mov
gs
insl
ja,pn
and
loopne
dec
xor
mov
mov
cli
js
or
orl
cli
sub
loope
jl
xchg
xor
push
push
and
push
sub
sbb
iret
push
adc
and
je
jecxz,pt
push
lahf
mov
dec
and
cwtl
fcmovne
push
xor
jl
mov
popf
cmp
lahf
mov
mov
adc
movsb
clc
loop
xor
xchg
pop
jp
and
mov
popa
sub
int
adc
pop
inc
or
cmp
xchg
adc
and
pop
sbbb
enter
xor
fsubp
js
test
sub
pop
fs
mov
xorb
mov
mov
and
and
or
jl
sahf
xchg
mov
cld
js
mov
out
push
outsl
xlat
iret
or
les
cmp
outsb
push
lds
adc
out
pop
or
cmp
pop
inc
mov
nop
scas
mov
jne
into
sub
mov
mov
xor
aaa
enter
mov
imul
pop
add
xchg
push
aam
mov
and
ret
xchg
or
add
aam
cmp
mov
shll
or
and
pop
aad
es
cmpsl
jbe
jnp
dec
pushf
mov
inc
push
shlb
xchg
lock
jbe
pop
push
add
sbb
and
mov
xchg
inc
stos
xchg
sbb
jmp
add
pop
mov
and
pop
mov
lret
fwait
aaa
sub
dec
fprem
push
inc
and
mov
push
push
dec
xchg
ljmp
adc
and
lea
cmpb
mov
int
data16
xlat
mov
fbstp
pop
mov
pop
xor
cltd
test
add
movsl
add
jmp
addr16
fnstsw
lock
test
sub
fisttpl
or
ss
negl
mov
call
cmpsb
fcom
add
push
stos
pop
test
test
mov
mov
mov
ret
xchg
out
mov
iret
push
mov
mov
repz
sbb
lahf
cmc
pop
pop
pusha
imul
or
sub
fistl
xor
pusha
add
je
xor
addr16
fisttpll
hlt
adc
add
das
out
mov
inc
mov
adc
loopne
jae
mov
inc
cs
cmp
xchg
xchg
sub
pop
or
mov
jbe
addl
sahf
push
testl
mov
mov
xor
pop
sub
fsubrp
lret
xchg
imul
aaa
and
testb
jae,pn
hlt
inc
call
jo
inc
dec
sbbb
mov
xchg
mov
lahf
xor
jb
xor
sub
das
sahf
fstpl
push
lods
insl
add
test
imul
xchg
outsb
or
mov
add
cwtl
mov
jo
xor
adc
pop
ds
jne
xor
out
add
outsw
fstpt
pop
outsb
cs
je
xor
cmp
adc
test
insl
xor
repz
and
push
mov
ret
push
cmpsl
pop
lret
cwtl
cmp
jno
mov
cmp
mov
ja
stos
rolb
pop
fadd
inc
sub
fwait
inc
jmp
cmp
sbb
cltd
aam
movsb
ret
jbe
sub
xor
jae
jno
fwait
in
testl
ret
cwtl
push
sti
cmp
fwait
pop
xchg
sbb
fwait
and
inc
jecxz
xchg
lret
shl
lcall
loope
test
testb
sub
popa
and
lods
add
sub
mov
jg
pop
repz
and
aam
fnstcw
lods
outsl
pop
arpl
adc
in
loope
notl
repz
scas
mov
mov
mov
pop
mov
pop
xchg
enter
xor
aad
mov
adc
jmp
push
xor
cmp
addl
in
fwait
push
ja
xchg
in
xchg
sbb
sbb
xlat
xchg
inc
sbb
mov
outsb
ss
sahf
dec
mov
cld
cmp
mov
aas
lahf
mov
xchg
fimull
sahf
mov
push
test
mov
lds
mov
outsl
stc
gs
push
sbb
mov
add
xor
stos
xchg
movsb
cmc
mov
loop
cmc
popa
jmp
idiv
push
pop
arpl
pop
testl
sbb
stos
mov
sbb
stos
pop
in
mov
mulb
jge
sub
pop
pop
jo
or
push
iret
in
inc
out
and
js
pop
sbb
sbb
jle
outsb
cmpsl
mov
movsb
mov
test
aas
xor
pop
cmp
adc
test
mov
lret
xor
ss
leave
cmp
mov
loopne
mov
push
add
push
mov
add
mov
int3
mov
push
lcall
stc
or
stos
pop
fcomps
ljmp
xlat
mov
add
inc
pusha
mov
roll
xchg
outsl
dec
imul
ret
popa
clc
fwait
mov
pop
rcrl
lea
dec
or
mov
cld
lods
sbb
sti
into
insb
push
jbe
scas
in
inc
jecxz
std
jmp
das
ficomps
ror
test
sbb
insb
xor
call
cmpb
push
inc
cmp
adc
pushf
or
add
sahf
jle
pop
mov
aad
das
mov
mov
leave
fwait
push
push
lret
mov
push
xor
mov
dec
xchg
mov
push
add
jecxz
es
or
add
mov
push
out
lret
iret
aas
dec
and
std
jnp
cmp
int3
cmp
push
jmp
xor
jl
add
rcll
add
mov
data16
mov
add
adc
fsubs
fisubrs
scas
adc
es
mov
and
repnz
add
xor
xchg
ss
dec
mov
adc
inc
enter
xor
pop
sub
adc
mov
ret
rcrb
jae
xor
xchg
cltd
fiadds
and
jbe
cltd
dec
arpl
and
retw
xchg
getsec
push
push
rcl
cmp
mov
fdivs
dec
hlt
ret
arpl
dec
sti
dec
jg
cmp
cs
imul
ficoml
daa
adc
and
or
call
outsl
mov
leave
push
adc
outsl
lcall
repnz
lret
add
dec
fadd
xchg
aad
mov
rcr
add
xchg
jb
add
lds
aas
out
out
dec
jo
inc
out
cmpsl
movb
jnp
aam
pushf
cmc
mov
dec
nop
xor
fs
icebp
xor
inc
aaa
pop
out
lea
pusha
imul
addl
mov
pop
or
pop
test
or
imul
ja
sbb
ret
mov
mov
inc
stos
mov
add
push
jle
xor
push
lods
enter
enter
jnp
lea
mov
sub
mov
push
fisttps
movsl
jb
loopne
cmp
inc
cmpsb
sub
insl
adc
leave
and
aam
cwtl
jle
xor
mov
push
cltd
inc
iret
jns
mov
into
adc
jp
jl
int3
test
imul
mov
sub
xchg
pop
sar
adc
lcall
mov
lods
xchg
dec
out
loop
ja
and
jb
loopne
adc
push
vmovss
addr16
mov
inc
dec
pop
cltd
add
dec
jne
movsb
jo
mov
pop
xchg
in
imul
xchg
fdiv
and
js
dec
xor
aaa
cmpsb
test
adc
std
loop
lock
cwtl
dec
sub
std
rcl
xorb
fdivrl
dec
out
pop
rcrb
add
push
repz
inc
loope
rcl
cli
fisubl
dec
decl
add
daa
popa
cli
push
xchg
push
flds
pop
add
push
push
icebp
push
call
cltd
fsubl
test
dec
cmp
ljmp
sbb
jge
jns
dec
xor
call
pushf
test
orb
enter
pop
loop
std
push
push
lods
pushf
or
push
test
cmpsl
dec
popf
rorb
mov
ret
gs
sbb
test
in
push
add
inc
lcall
mov
cmpsl
cmp
cmp
movsl
push
inc
jno
adc
pop
jo
lock
jo
pusha
sahf
in
push
in
or
push
cli
enter
ja
into
arpl
cmp
imul
test
sbbb
arpl
dec
test
inc
lods
jmp
loope
ds
sub
addb
jb
mov
lcall
int
jmp
cmp
inc
fdivs
aaa
dec
xchg
and
mov
ror
push
ret
mov
inc
dec
shlb
jl
pop
test
pop
and
cwtl
enter
imul
hlt
xchg
imul
fistpll
or
cmp
and
push
fists
sub
call
sarl
xchg
outsl
insl
inc
dec
cmpb
sub
in
daa
xchg
int3
push
js
sbb
and
dec
shl
pushf
fimuls
add
icebp
aad
shrb
stos
int3
aaa
pop
pop
mov
lahf
mov
cmp
cmp
loopne
dec
xchg
lods
movsb
pop
mov
sbbb
loope
das
sahf
inc
or
sub
xchg
mov
inc
mov
xchg
popa
xlat
popf
inc
loop
push
js
dec
testb
mov
and
lock
and
xchg
call
sbb
xchg
mov
jle
je
ss
fadd
mov
xor
lea
adc
or
gs
and
mov
pop
xchg
adcb
ret
pop
push
add
popf
test
xchg
mov
lcall
push
insb
fdivr
dec
imul
cmp
mov
ficoms
xor
mov
sbb
andl
pop
int3
popa
imull
cmp
insl
xchg
pop
jg
fs
xor
fstps
mov
stc
pop
or
lcall
jo
push
xor
mov
jo
xor
xchg
nop
jl
push
pop
iret
xchg
jle
and
xchg
push
jecxz
fs
test
push
bound
lods
push
lret
jo
mov
adc
pusha
jecxz
sbb
test
arpl
mov
ror
push
int3
scas
jbe
and
cmp
push
cmp
push
cwtl
mov
pop
call
in
jecxz
out
jl
jle
rolb
stc
fbstp
notl
cwtl
sbb
ja
out
insl
stos
nop
push
rolb
xor
adc
aam
push
out
sub
push
enter
xchg
mov
mov
push
dec
add
clc
and
les
test
frstor
dec
enter
jnp
ret
inc
pop
sbb
pusha
xchg
sub
dec
push
jge
sbb
fsubrs
fcmovne
cmp
loop
jp
lock
mov
int3
jb
mov
adc
cli
cmp
cli
fdivl
pop
lret
stc
xchg
mov
mov
add
sub
scas
popa
push
push
popf
push
int3
jnp
push
or
push
adc
mov
mov
push
adc
or
cmpl
adc
jns
lock
test
jne
lds
mov
int
xchg
jbe
mov
adc
adc
outsb
push
aaa
test
dec
lret
xchg
push
adc
and
push
filds
imul
jns
sahf
add
pop
mov
ss
xor
cli
xor
and
cmp
push
dec
int
filds
push
loop
mov
lret
in
paddb
lcall
int
std
shlb
or
push
push
in
jns
repz
cld
lahf
mov
sbb
jo
pop
sub
outsb
out
faddl
xor
into
pushf
les
jnp
nop
lds
pop
cltd
out
and
imul
pushf
sar
aad
insl
pop
das
sub
jp
insb
out
dec
dec
loopne
xchg
ret
cmp
es
gs
pop
inc
mov
int3
rcl
mov
retw
cmc
mov
cld
push
cwtl
cmpb
ret
dec
dec
pop
pushf
mov
adc
std
rcl
movsb
mov
into
faddl
cmp
pop
add
inc
mov
pop
xor
pop
inc
xchg
sub
scas
sub
sarl
push
out
mov
lock
jne
rcll
jl
lahf
addr16
scas
lods
sahf
xor
add
ljmp
mov
aaa
ljmp
inc
aad
pop
scas
movsl
arpl
push
ret
jnp
pop
sahf
gs
mov
roll
int
inc
or
push
lret
in
jae
outsb
mov
inc
cwtl
incl
ja,pn
les
xor
xchg
cltd
jl
jbe
mov
movsb
or
out
push
cmpsb
cmp
sarb
xchg
arpl
cmp
out
sti
pop
lock
aad
pushf
inc
outsb
lock
inc
mov
rcl
sub
cmc
mov
push
mov
sbbb
ja
in
bound
dec
movsb
daa
cmp
xchg
movsb
lods
xlat
shlb
dec
imul
cmp
notb
imul
xor
dec
push
hlt
xor
dec
xor
pop
stos
mov
icebp
mov
in
cmp
and
dec
mov
mov
loop
adc
xorb
adc
outsl
test
sbb
ret
inc
push
rcrb
lret
out
and
roll
out
jp
and
sar
das
repz
movsb
nop
mov
in
mov
fcmovnbe
out
sarl
xchg
sbb
fwait
iret
pop
fwait
xchg
xor
in
xor
lret
pop
mov
divl
mov
sub
pop
add
inc
inc
pusha
xchg
xlat
cli
leave
mov
lahf
push
shlb
pop
mov
adc
pushf
push
dec
test
push
dec
mov
cmc
pop
repnz
xchg
inc
lods
cmp
fldcw
add
jo
push
jne
das
add
dec
jp
loope
aas
jae
sub
jle
add
jp
pusha
fwait
mov
cmpsl
sbb
cld
hlt
mov
mov
pusha
cld
inc
in
andb
push
arpl
pop
sub
ret
push
add
sub
lret
cli
and
pop
pop
inc
mov
movsbl
xchg
icebp
lods
add
call
mov
xor
jne
stos
sahf
mov
mov
inc
scas
clc
mov
ss
test
sbb
outsb
insb
daa
scas
enter
repnz
aad
imul
mov
imul
iret
sti
mov
pop
xor
lea
mov
mov
sarl
add
add
mov
fsubp
pop
mov
add
push
inc
adc
fmul
mov
cmp
pop
test
and
sbb
nop
sub
je
jns
cltd
mov
js
jmp
pusha
dec
adc
test
sbb
sbb
or
lock
fistps
pop
push
mov
sbb
andl
cltd
xor
aam
xchg
xchg
or
jg
jp
pusha
xor
pop
xor
cmc
mov
mov
inc
dec
popf
insl
call
and
jmp
ret
in
push
cmp
or
push
mov
pushf
dec
sahf
lret
or
call
jg
gs
lea
mov
mov
aas
push
xor
jb
cld
adcb
out
sahf
jb
movsb
out
popa
int
rcr
inc
sti
cli
test
loope
lock
push
mov
cmp
mov
fdivr
int
hlt
test
fdivs
cmp
cmpsl
js
sub
add
mov
adcl
std
fimuls
lock
das
cmp
mov
lods
in
fimull
icebp
shrl
xchg
xchg
cmp
fisubl
stc
push
xchg
push
insb
jbe
jge
sbbl
pop
xor
jmp
adc
loope
incl
jno
mov
fistpll
lcall
inc
and
xchg
mov
pop
inc
rorb
xchg
and
addb
or
jae
enter
scas
mov
lods
cmp
add
mov
sbb
push
adc
sub
push
loopne
aad
mov
lds
push
push
xlat
andl
dec
push
pop
sbb
add
into
mov
sub
frstor
mov
and
aad
and
inc
insb
mov
push
test
aam
test
mov
mov
rclb
adc
adc
xchg
out
mov
add
rol
fdivr
popa
aas
sti
xor
and
rcll
iret
xchg
test
mov
enter
or
jb
jmp
ret
lods
fimull
pop
ds
or
ror
loopne
mov
scas
scas
in
sub
shlb
mov
dec
cmp
ror
jmp
jne
popa
inc
ljmp
and
xor
lcall
ret
mov
or
adc
xor
add
mov
popa
pop
xchg
adc
sub
loop
push
scas
push
inc
or
das
sti
call
mov
push
gs
mov
mov
fwait
push
sarb
sub
pop
xor
popf
pop
rorb
push
mov
scas
pop
mov
ljmp
in
push
aad
mov
sub
in
dec
xor
imul
test
imul
cmc
mov
notb
inc
jmp
aad
and
mov
icebp
clc
pop
movsl
dec
add
data16
pop
dec
pushf
popa
xor
in
mov
daa
repz
jb
stos
sub
cli
dec
and
xor
ret
les
dec
imul
mov
dec
jl
andl
adc
or
cs
rcrl
sub
inc
mul
mov
stos
xor
xor
icebp
pop
cs
out
add
js
inc
cmpsb
add
sbb
jge
jp
push
into
xchg
movsb
fiaddl
mov
ret
loop
clc
outsb
xor
and
sub
js
adcl
insl
cmp
add
cmp
pop
stos
sub
push
mov
cmp
cltd
ljmp
or
lock
sub
das
aaa
lcall
cmpl
clc
loop
fs
mov
sahf
and
push
pop
inc
repnz
mov
rcrl
mov
adc
or
inc
cmp
arpl
sbb
and
ss
dec
inc
sbb
lods
orl
xchg
mov
in
mov
pop
fwait
xor
in
dec
outsb
sti
adc
jns
xlat
call
fcomps
add
add
repz
fistpll
jmp
sbb
dec
add
mov
out
negl
mov
jge
pop
mov
push
sti
inc
sbb
cmp
jnp
rorl
pop
mulb
jmp
mov
and
in
aas
repnz
dec
xlat
outsb
jnp
mov
jbe
movsl
andb
pop
dec
ljmp
pop
add
lock
pop
nop
or
arpl
push
adc
stos
dec
jge
outsb
pusha
fnstsw
push
nop
mov
ficomps
push
mov
movsl
cmp
xor
inc
sahf
and
pop
xchg
push
mov
push
jo
insl
mov
fnstsw
jle
or
cmc
or
hlt
mov
lock
outsb
adc
lods
jp
cli
push
cmpsl
int
cld
sub
ljmp
xchg
test
xor
lods
fdivrl
push
jecxz
imul
pop
ljmp
mov
push
inc
insl
scas
pushf
jecxz
inc
mov
pop
loope
inc
cltd
adc
sbb
inc
loopne
add
loopne
sbb
push
sbb
mov
loop
loopne
fs
into
das
mov
fists
data16
icebp
cli
gs
jns
rcll
stos
outsl
jmp
inc
fbstp
mov
pop
pop
loopw
dec
jmp
ret
pop
mov
adc
repz
add
mov
dec
inc
pop
dec
int3
je
push
sbb
cld
dec
test
fistps
hlt
outsl
xchg
adc
jmp
add
pop
jecxz
outsb
sbb
int
ss
push
adc
or
popf
jle
roll
shlb
insb
ret
loop
mov
dec
and
imul
test
pop
call
lea
mov
add
sbb
cmp
pop
jg
sub
int3
leave
popf
mov
lcall
sahf
in
dec
xchg
add
cmp
xor
xchg
cmp
rorb
cmpsl
push
mov
call
jecxz
icebp
adcl
jge
cmp
dec
pop
sub
push
sbb
push
arpl
xor
ficoms
lret
scas
xchg
insb
sti
push
add
ss
sar
outsl
insl
mov
pusha
adc
inc
mov
daa
fnsave
add
cmp
push
dec
push
mov
movsb
lods
out
sub
outsb
sti
xor
lods
stos
xchg
stos
xor
aaa
push
push
outsl
popa
and
dec
test
stc
fs
fbld
enter
into
sbb
stc
idiv
icebp
inc
mov
cwtl
filds
sbb
pop
xorb
xlat
mov
outsl
inc
shll
out
js
repnz
scas
mov
aaa
sub
push
stos
push
sbb
bound
stos
xchg
lret
add
mov
addr16
xchg
mov
pop
jmp
pop
out
das
cmp
loope
sbb
xor
ffree
mov
mov
push
inc
push
loopne
outsb
pop
imul
push
sub
addr16
imul
imul
std
jae
mov
mov
mov
cmpsb
out
out
in
lds
pop
fbstp
mov
pusha
mov
cltd
insb
fnstsw
je
paddb
dec
mov
xchg
sub
cmc
repnz
and
xchg
mov
mov
inc
aam
scas
pop
sbb
mov
adc
out
xchg
loopne
pop
xchg
aaa
fnstenv
push
js
and
and
mov
mov
push
repz
subb
loopne
mov
bound
or
jmp
mov
push
mov
sbb
loop
lock
lods
pop
xlat
jno
aaa
sbb
sbb
jno
pop
cwtl
movsl
pop
xor
cwtl
lods
sbb
loopne
adcb
push
add
nop
cmp
movsl
lret
popa
dec
rcrb
test
outsb
dec
jecxz
out
sti
push
push
out
fsubrl
lcall
jg
jne
cs
fstpl
mov
js
fldenv
cmpsl
outsb
sbbl
pop
jmp
sub
xchg
xor
out
insb
jl
int3
mov
add
data16
call
out
lods
std
ret
hlt
hlt
xor
push
xor
icebp
out
sbb
and
int
cmc
subb
pop
push
rcl
cld
sub
outsl
xchg
add
dec
push
scas
xor
add
loop
mov
dec
inc
lahf
stos
lcall
das
push
mov
sahf
jmp
adc
sbb
fdivr
xchg
pop
cwtl
clc
push
and
rcrl
or
xchg
cmpsb
aam
pusha
mov
mov
lock
aam
jmp
nop
add
ljmp
dec
std
loopne
push
dec
movsb
cmp
pusha
jecxz
repz
incb
lea
pop
pop
cmpsl
lret
daa
stos
daa
xorb
les
dec
fistpll
push
mov
aad
xor
rorb
gs
stos
aaa
inc
pop
cli
pop
sub
pushl
jg
cmpsb
ret
xlat
mov
mov
aaa
mov
push
ja
out
ret
jo,pn
inc
xor
mov
or
mov
dec
xor
cwtl
lods
cmp
dec
fmuls
aas
and
inc
xchg
mov
in
outsb
inc
jp
and
jns
fwait
jae
xor
sub
int3
lea
adc
push
or
cmp
or
pusha
mov
lret
push
pop
mov
inc
adc
dec
pop
xchg
push
sub
adc
push
inc
pop
rclb
mov
jno
sub
rol
iret
dec
sub
lret
fnsave
aam
dec
lea
mov
inc
lret
enter
xlat
fcoml
aam
aad
xchg
inc
fmuls
sbb
sbbb
ja
jmp
pop
outsl
test
adc
or
adc
or
dec
or
xchg
popf
jo
dec
cld
repz
lret
das
dec
mov
xchg
loope
fucomp
roll
stos
mov
mov
in
sahf
imul
movb
pop
cmpsl
mov
push
test
xor
lret
push
lods
and
in
ss
gs
jl
lcall
push
mov
jle
add
mov
dec
cltd
pusha
nop
add
in
pop
ds
jge
mov
pop
cmp
sub
cmpsb
xchg
idivb
js
sub
fisttpll
divb
adc
add
cmpsl
xchg
dec
sbb
or
adc
js
lea
fisubl
cmp
mov
in
and
mov
cmp
add
andl
add
mov
mov
jns
scas
jg
pop
mov
xchg
mov
or
push
jno
shrb
cmpsl
outsb
in
notb
orb
data16
push
jbe
stc
or
fs
cmp
mov
xchg
dec
and
pop
cmp
jbe
fisubl
daa
inc
scas
addr16
xchg
and
xlat
fisttps
cmp
pop
cmp
fwait
and
or
sar
mov
jno
mov
xor
lods
ja
mov
mov
out
jne
jb
ret
inc
rcl
in
hlt
jge
aad
push
mov
imul
xor
push
aas
mov
inc
ljmp
testl
pop
nop
adcb
cmpsb
jnp
adc
in
xlat
pop
scas
pushf
sarl
rcrl
cmpsl
loop
xchg
push
mov
xchg
cmpsb
test
mov
cmp
aaa
jns
xlat
push
xor
push
push
icebp
jecxz
pop
mov
icebp
sbb
jo
mov
ds
fnstsw
sbb
cmc
mov
lahf
out
add
pop
jp
pushf
lea
lea
jle
jno
xchg
insb
xor
pop
repnz
inc
mov
add
rcll
cmc
jle
xlat
dec
loop
dec
inc
pop
mov
mov
shl
paddw
imul
inc
sbb
and
or
xor
dec
xor
xchg
lcall
sub
push
dec
jle
stc
in
lock
mov
cld
and
lahf
ds
arpl
ret
or
sub
or
cmp
cmp
mov
popa
sbb
mov
mov
fisubs
nop
cltd
jns
mov
jle
pop
pop
pop
lds
fstps
stos
popf
ljmp
jb
pop
pop
add
sub
mov
mov
ret
or
jne
or
push
sub
sub
mov
shl
mov
jnp
roll
aad
cmp
sbb
gs
xchg
repnz
aaa
lret
fwait
and
les
popf
dec
stc
cmpsl
shll
je
sub
shll
push
inc
or
js
mov
xchg
xor
and
xchg
jo
rorb
cmp
jg
sbb
or
inc
cmpsl
lret
pop
lahf
or
aas
mov
out
lods
movsb
repnz
mov
inc
adc
mov
aad
and
out
mov
outsb
and
stos
stos
cmp
sbb
aad
or
hlt
push
sbb
xorl
jb
in
jne
dec
scas
fwait
cmp
dec
mov
pop
xor
sarl
pop
pushf
lret
cmp
mov
lods
insb
sbb
dec
movl
mov
mov
mov
stc
pop
cli
andb
sub
imul
and
dec
cmp
xor
cld
fisttpl
in
andb
jge
loopne
hlt
fadd
or
flds
pushf
mov
test
mov
mov
shrb
enter
popf
cmp
mov
mov
jnp
fwait
shl
mov
out
rorb
loope
rorl
xchg
fists
cwtl
add
mov
mov
mov
stc
add
sub
stc
ss
cmp
xchg
pop
movsl
mul
or
dec
and
fstl
push
sub
cmp
mov
xchg
mov
iret
or
sti
jb
push
xchg
incl
mov
mov
or
loop
iret
sub
mov
sbb
test
mov
imul
mov
lcall
rcr
sub
dec
cli
pop
inc
movl
dec
fpatan
call
insl
loope
dec
sbb
cmpsl
rcll
adc
and
rorl
js
fwait
or
mov
arpl
decb
fadds
popa
aaa
cld
pop
pop
mov
push
add
mov
add
out
push
cld
bound
aas
inc
icebp
aam
cmpsb
xchg
in
addr16
inc
pushf
or
test
jae
inc
shll
sub
repz
add
leave
imul
test
ljmp
sub
pop
js
xchg
xor
decb
pop
xchg
mov
pop
icebp
jp
mov
or
mov
out
rcl
aad
fcmovne
cltd
scas
repnz
in
lcall
nop
jle
aas
sar
push
notl
daa
adc
mov
sub
shlb
test
mov
stc
mov
adc
inc
lods
push
ficompl
xor
jl
mov
jo
mov
sarb
mov
mov
in
sbbl
stos
xchg
mull
push
or
mov
test
pusha
sbb
pop
mov
xlat
xchg
gs
mov
sub
dec
out
mov
lahf
adc
lahf
mov
hlt
push
jp
ljmp
dec
fisttpll
clc
and
stos
xor
xchg
std
das
xor
or
mov
fcomps
mov
pop
bound
out
fisubl
lret
mov
and
data16
fists
cltd
fdivs
adc
inc
sbb
sub
sub
or
xor
fwait
jb
lods
cwtl
mov
push
es
sub
icebp
inc
push
fs
dec
stos
jmp
jge
cmp
xchg
cmpb
ja
addl
adc
rorl
mov
enter
or
test
aas
mov
inc
stos
incb
xor
test
loope
call
xlat
xor
push
movb
dec
stos
shll
mov
cmp
pop
xchg
aaa
in
add
test
jns
clc
cmp
sub
cs
xor
mov
dec
pusha
xlat
les
mov
xor
out
xchg
push
mov
xchg
rdtsc
in
fstpl
test
in
js
xor
in
inc
nop
push
das
mov
repz
dec
adc
in
in
dec
dec
cli
or
ret
or
xor
js
loopne
push
rolb
add
hlt
rcr
inc
adc
mov
cld
add
mov
xor
xor
aas
stos
pop
cmp
push
test
shl
sbb
stc
orb
mov
scas
push
sti
int
sbb
and
jle
in
je
xchg
add
data16
dec
stos
icebp
jp
pop
rol
inc
mov
mov
lea
mov
mov
and
jl
sub
stos
sbbb
push
pop
mov
cmpl
sbb
mov
cmp
jbe
inc
ffreep
jg
sbb
jns
push
loope
das
shrb
int
pop
push
push
fimull
out
out
vpscatterdd
loop
push
mov
daa
mov
lea
test
sub
popa
lea
loop
jns
cmc
clc
xchg
jno
iret
jmp
dec
ja
push
pop
lods
stos
in
xlat
pop
sub
and
inc
add
neg
jg
scas
and
ss
lahf
xor
nop
fistpll
add
icebp
adc
mov
jmp
leave
pop
sbb
int3
test
ss
in
mov
inc
out
pop
cmp
mov
daa
push
xchg
roll
iret
mov
addr16
loope
lds
jl
fidivrl
mov
mov
dec
mov
mov
and
mov
addr16
and
pop
xchg
inc
cmc
or
mov
xor
push
xor
adc
fucomip
popa
add
inc
mov
mov
push
inc
jb
rcl
outsl
jnp
cltd
stos
dec
jne
xchg
xabort
dec
andl
add
iret
lcall
rol
shrb
cmp
jge
imul
adc
shr
fwait
mov
inc
cmp
sub
popl
lret
jmp
gs
pop
clc
sub
icebp
lret
cmp
cmp
jge
sub
mov
ficompl
in
push
sbb
enter
imul
inc
pop
sbb
pop
ret
fadds
popa
ret
jp
pop
fisttps
sub
in
ljmp
pop
xchg
or
call
add
dec
aaa
jo
adc
xor
or
test
push
mov
sub
inc
lods
addr16
jmp
insb
xor
cmpb
pop
xorl
jg
and
mov
sub
flds
push
movsb
pop
dec
fcoml
ret
xchg
in
mov
jmp
jne
push
push
xchg
xchg
push
iret
call
mov
stc
mov
ret
dec
jl
loope
divb
rclb
jb
pop
adc
out
or
mov
push
mov
lods
push
cwtl
call
xchg
imull
shlb
adc
gs
jno
inc
outsl
sbb
call
outsb
cmc
bound
xchg
imul
lahf
cmp
dec
ds
dec
inc
dec
cmp
adc
in
scas
cmp
lock
dec
std
subl
mov
iret
lret
stc
push
test
or
fisubrl
jle
scas
aaa
adcb
pop
cli
adc
dec
test
movsl
fimuls
sub
sbb
xchg
xor
loope
dec
inc
xchg
xchg
adc
les
ret
out
mov
xchg
push
jns
cs
int
add
xchg
sbb
mov
clc
mov
add
cld
inc
mov
std
xchg
pop
sbb
sarb
pop
inc
arpl
mov
inc
fwait
outsb
in
mov
mov
dec
dec
adc
adc
daa
cltd
add
mov
adc
shlb
mov
or
adc
int3
push
cwtl
sbb
mov
and
mov
xor
pop
xor
cmp
cmp
jge
cld
call
fwait
out
ds
aam
pushf
out
das
stos
adc
sub
push
mov
enter
imul
loope
test
gs
push
gs
add
cmc
sti
gs
mov
clc
push
mov
jb
xchg
mov
push
xor
add
pop
cmp
sbb
out
xchg
or
outsb
dec
mov
mov
mov
sar
es
lcall
aad
push
loopne
in
fcmove
aam
jg
pushf
xlat
dec
cmc
lock
jns
movsl
mov
mov
int3
cmp
xchg
es
shrl
es
sbb
mov
mov
push
cwtl
add
jmp
fldt
push
aad
sub
cvttps2pi
xchg
cltd
cmp
inc
pop
push
xchg
push
lock
adc
pushf
les
insl
inc
out
sahf
loope
hlt
cli
push
sub
jp
push
jb
sbb
mov
sbb
push
inc
xor
cmp
cmp
mov
xor
sahf
jns
fcmove
pop
icebp
cmc
mov
arpl
lock
sbb
out
out
lahf
movsb
mov
xchg
scas
imul
jb
mov
mov
adc
sbb
xchg
sub
xchg
scas
aad
pop
cmpsb
adc
xor
call
cmp
adc
mov
adc
mov
inc
pop
cld
mov
xchg
xchg
pusha
pop
push
push
stos
jns
fsts
cwtl
mov
fdivrl
leave
lods
daa
inc
ss
add
xlat
jo
pop
je
lahf
arpl
jl
adc
or
lods
testb
cmc
js
gs
pop
sbb
sbb
mov
imul
or
jbe
sub
decb
dec
jp
mov
inc
sti
and
inc
movsl
push
xchg
icebp
pop
mov
sbb
std
scas
mov
mov
push
cmp
adc
pop
mov
or
stos
or
test
clc
ljmp
add
xor
and
rorb
jne
or
adc
test
sub
inc
mov
bound
enter
push
dec
jns
mov
dec
mov
imul
call
pop
cmp
push
rorl
or
pop
mov
out
mov
addr16
sub
xchg
jle
push
int
dec
push
popa
adc
sbb
push
scas
addr16
pop
xor
jbe
xchg
xchg
decb
pop
jle
pushf
lahf
push
sahf
mov
in
and
std
ret
aad
cltd
xchg
pusha
xor
and
push
adcb
and
jne
mov
xchg
shrl
xor
or
mov
dec
ljmp
or
mov
jns
cld
xchg
jnp
and
adc
mov
mov
or
push
test
in
lods
sbb
sbb
cmpsb
in
jp
jbe
sbb
test
enter
popa
sub
sub
mov
xchg
dec
shrb
pop
movd
int
bsr
shl
andb
sti
jno
mov
mov
jne
xchg
nop
dec
dec
pop
in
jb
loopne
jnp
xor
cmp
bswap
jmp
push
aad
mov
dec
xor
jnp
addr16
in
iret
pop
inc
pop
pushf
sbb
mov
mov
push
sbb
xor
shlb
mov
mov
mov
add
mov
sbb
dec
cmp
cmp
ret
mov
cmpsl
scas
inc
int
cmp
dec
lods
adc
je
jge
das
leave
jb
rcrl
into
enter
adc
icebp
fisttps
mov
sahf
jmp
cmpsb
rorl
imulb
mov
fcmovnbe
pop
xchg
jae
sbb
jmp
ja
or
aam
xchg
cwtl
call
dec
call
dec
bound
dec
pushf
push
roll
out
adc
movb
push
cwtl
dec
xchg
test
dec
xchg
push
inc
jbe
push
lahf
cmpsl
inc
cmpsb
cld
mov
in
lret
dec
sti
mov
jecxz
fidivrl
mov
mov
adc
mov
xor
or
mov
fwait
pushf
sbb
inc
adc
pop
fcompl
pop
popa
dec
adc
ds
fildll
push
popf
and
mov
hlt
nop
ja
xor
jns
mov
jo
add
jp
addr16
add
xor
shrb
mov
mov
jmp
mov
hlt
lds
or
jne
sahf
mov
xchg
fwait
jle
outsb
imul
pusha
sub
imul
sti
cmp
jge
imul
xor
xor
fdivrl
leave
mov
into
sbb
push
xchg
push
mov
ror
sbb
dec
xor
sub
mov
outsb
outsb
sarl
push
mov
xor
js
mov
mov
in
orb
xchg
jg
sarb
mov
test
adc
rcrl
rcrb
jle
fmull
cmpsb
or
dec
mov
je
xor
add
js
dec
imul
cmp
ds
lods
lock
and
pop
aam
in
mov
cld
in
sbb
sbb
cltd
leave
add
sub
movsl
stos
mov
in
or
jle
fstpl
dec
loopne
cmp
inc
pop
add
dec
icebp
js
push
dec
in
mov
sti
mov
mov
mov
addb
insl
mov
push
sti
sub
rcrl
js
pop
call
xchg
cmp
lret
jl
mov
je
stos
cmpsl
ja
pop
flds
movb
stos
test
sarb
xchg
ret
or
jns
jae
or
pop
cli
cmpsl
jge
shl
push
or
outsl
jmp
into
cmp
dec
sub
popa
in
out
sub
xchg
idivb
out
sbb
xchg
dec
addr16
inc
mov
shl
repz
loope
lcall
stos
dec
inc
lods
jnp
cmp
inc
mov
mov
stos
testl
int
or
int
xchg
sub
pushf
mov
in
dec
sub
cmc
negl
adc
cmp
pusha
jns
mov
clc
mov
mov
mov
sub
inc
mov
scas
mov
sbb
enter
cmp
and
in
orl
and
add
sbb
aam
xchg
and
in
pop
gs
lock
out
push
jnp
popf
int
out
xchg
sub
movsl
lods
jp
mov
lahf
dec
arpl
mov
lahf
dec
subb
push
inc
add
cltd
mov
fidivrs
adc
mov
xor
jno
dec
repz
or
push
pushf
fiaddl
jmp
lea
sbb
inc
shll
xchg
mov
std
lret
fmuls
jo
cmp
pop
jae
iret
or
push
cs
insl
inc
cmp
jae
mov
stc
in
imul
idivl
jmp
mov
outsb
and
inc
mov
or
aas
and
fstpl
nop
mov
xchg
rcll
sub
sbb
cmpsb
adc
lods
or
fistps
ja
jno
xor
mov
int
aam
push
fisttps
pop
dec
dec
les
sbb
pop
enter
xchg
insb
loop
inc
lods
cmp
loope
out
adc
lcall
inc
movsb
mov
inc
sub
cwtl
xor
cmp
jbe
insb
mov
arpl
aad
lret
pop
scas
std
ljmp
jae
push
cmpsl
addr16
cmp
sbb
push
cmp
stc
mov
jae
jo
jae
push
jp
dec
mov
sub
inc
dec
arpl
add
push
push
leave
pop
add
fs
es
jb
shrl
fadds
loop
mov
in
imul
dec
pop
les
xor
push
daa
cmp
cld
pop
in
idivb
pop
and
out
dec
lret
ret
adc
hlt
adc
in
or
mov
inc
pop
mov
mov
jmp
cmp
or
mov
dec
adc
push
notl
lds
and
add
daa
cmp
insb
sub
pop
sti
in
xchg
dec
enter
sub
push
je
dec
std
js
int
jge
adc
jecxz
addr16
sbb
or
adc
xlat
mov
jb
lds
push
ja
movsl
inc
mov
call
sbb
aaa
inc
adc
lea
push
jge
inc
push
pop
pop
bound
sub
mov
rol
movsb
repnz
shlb
cmp
fistpl
daa
adc
inc
adc
repz
ret
fmuls
test
mov
or
mov
psllw
jno
dec
xchg
pop
pusha
jge
inc
out
outsl
fbld
inc
mov
test
xchg
scas
xor
out
addr16
push
cmc
and
shlb
jnp
gs
push
mov
and
mov
jl
cwtl
dec
cs
push
mulb
push
sbb
ds
cmp
jnp
inc
jne
mov
ja,pt
push
nop
push
jmp
lret
ja
mov
pop
pop
push
das
or
inc
adc
arpl
test
push
inc
cmp
notb
jae
push
add
ret
loop
testb
lods
cmc
mov
jge
and
fcomip
add
add
adc
sub
cmp
jl
into
lods
out
add
in
test
mov
and
pop
mov
je
test
xor
mov
in
cltd
out
push
icebp
imul
outsl
stos
iret
mov
daa
push
imul
and
cs
shr
and
test
add
aas
or
cmpsb
loopne
push
negb
push
out
repz
xlat
and
bound
xchg
xor
cltd
pop
or
sub
pop
sub
cmp
loope
cmp
sbb
mov
js
xor
mov
xor
mov
ds
hlt
inc
add
daa
jo
sub
sbb
jmp
rorb
fsubrl
inc
mov
mov
test
pushf
push
fdivrs
fcompl
inc
scas
push
add
into
insl
jo
daa
hlt
fdivr
or
or
les
fs
lods
mov
xor
ja
jnp
jo
dec
pop
clc
jge
inc
dec
andl
dec
pop
in
jge
and
popf
or
mov
imul
push
popa
clc
cltd
stc
iret
negl
pop
fwait
arpl
outsl
loopne
es
mov
enter
add
xor
fimuls
andl
js
jp
ret
ret
loope
icebp
jecxz
xor
push
mov
cwtl
dec
out
aas
das
arpl
or
in
aad
jno
cli
das
mov
jmp
mov
add
fisubs
lcall
mov
rolb
pop
fnstenv
mov
idiv
mov
cmpsl
jb,pt
or
xchg
in
lret
jg
mov
iret
inc
sub
cli
sbb
sub
adc
in
jg
stos
push
xor
xor
push
xor
aas
lret
fwait
adcb
stos
clc
imul
and
pop
ds
sbb
or
div
and
jge
jbe
inc
jle
clc
sahf
xor
cmp
xor
xor
or
sbb
in
lods
inc
pop
cmp
jbe
xchg
cmp
pushf
inc
cmp
mov
pop
cmp
hlt
dec
int3
pop
movsl
jnp
repz
std
ljmp
xor
xor
or
mov
cmp
stos
clc
push
iret
inc
stc
xor
lcall
enter
jmp
cmpb
cmpsb
ss
das
pop
sahf
xor
cli
dec
sbb
push
outsl
fbld
mov
sbb
xchg
or
ja
sub
adc
das
movsl
loop
mov
mov
ja
test
shll
clc
jne
or
ret
add
xor
dec
shrb
fucomp
lods
divb
jmp
dec
xor
fwait
inc
mov
pop
sbb
cs
cs
cmpl
mov
mov
push
aaa
sbb
fimull
mov
push
repnz
jge
inc
loop
lds
cs
xchg
pop
push
mov
sub
pop
addr16
out
jle
and
js
orb
cltd
sub
mov
bound
cmp
in
jmp
cld
or
cs
xlat
mov
fprem1
les
inc
xor
imull
stos
pop
pop
jp
push
popl
lods
xchg
and
leave
dec
sub
add
mov
push
cwtl
add
rol
xor
stos
or
add
sub
add
jg
popf
and
addb
int
pushf
je
ret
push
pushf
data16
mov
aas
sub
push
or
ror
fstpt
jecxz
xor
mov
je
mov
and
and
test
cmc
mov
lock
fwait
mov
bound
out
xchg
inc
jmp
add
icebp
in
in
stc
stos
sbb
xchg
cs
cld
or
and
inc
or
ss
adc
loope
mov
dec
ss
xor
subl
stos
adc
cmc
or
in
ret
push
shl
mov
push
pop
loope
mov
mov
dec
push
mov
xchg
dec
in
ds
xchg
or
mov
mov
or
cmp
push
xchg
outsb
sahf
adc
or
mov
subb
push
popa
sub
xor
and
sbb
xor
movsl
jnp
ror
jbe
push
pushf
sarl
add
cmp
inc
stc
je
jb
push
addr16
jb
sub
mov
mov
stos
lea
xchg
iret
repnz
xchg
roll
lock
test
push
or
mov
dec
addr16
jae
repnz
and
xchg
sbb
dec
inc
cs
lock
xor
mov
push
ror
test
stc
or
fwait
ss
and
dec
cltd
add
inc
dec
fwait
push
in
subb
pop
cmp
imul
lcall
mov
cmovne
lahf
stos
int3
enter
out
movsb
push
sahf
jp
mov
mov
test
fildl
out
or
pop
dec
inc
inc
xchg
sub
adcl
push
out
xor
lods
mov
jbe
rcrl
inc
dec
int
fildll
adc
into
pop
mov
inc
mov
icebp
push
jns
or
jno
shlb
cmp
jg
inc
add
xchg
int3
dec
sub
push
mull
lahf
mov
pop
mov
lcall
xchg
fwait
leave
or
fcomi
movsl
cmp
xor
pop
test
and
add
xor
jp
dec
int
cmp
inc
inc
lea
sti
push
inc
sub
add
dec
jle
in
jmp
adc
ud2
arpl
or
dec
ja
lods
jl
xchg
aam
aam
aad
inc
cltd
dec
push
dec
fcompl
add
cmp
insb
es
pop
xlat
jl
mov
or
mov
sub
jge
push
dec
movsb
push
in
stos
mov
div
xor
sahf
mov
cmp
jne
test
or
les
addr16
pop
leave
out
mov
mov
adc
enter
cld
lahf
shll
or
jae
jo
inc
xchg
mov
addr16
test
es
inc
sbbl
lea
or
sub
jne
adc
fs
imulb
movl
int3
pop
sbb
ret
rcr
push
mov
lret
add
sub
jns
cmp
inc
jae
inc
sub
jae
push
sub
push
ret
addl
out
iret
pusha
xchg
sbb
shr
pmuludq
xchg
push
xchg
or
mov
and
insl
inc
push
imul
mull
gs
xchg
push
lahf
inc
sub
call
call
inc
clc
mov
pop
aas
das
adc
cli
fwait
mov
test
mov
sahf
ss
mov
sbb
int3
dec
sahf
divb
cmc
and
or
jmp
mov
or
and
leave
mov
call
inc
ficoml
xchg
mov
loopw
je
repnz
data16
mov
int3
rcr
push
push
rcrl
push
ret
repz
lods
xchg
mov
and
adc
sub
dec
into
pop
add
orb
adc
jbe
xchg
sub
lods
aam
daa
sub
shl
jb
add
sub
push
xchg
ja
sbb
ret
repnz
inc
in
fbld
jb
fs
test
mov
pop
je
pop
jle
lds
and
iret
push
jl
fwait
pusha
rcrb
push
clc
mov
add
ret
push
xor
ja
popa
lods
mov
jnp
xor
adc
lcall
test
out
loop
push
push
or
xchg
mov
cmp
mov
push
pusha
pusha
imull
hlt
pushf
out
push
popa
mov
jb
jae
int3
fdivp
loopne
xor
fcomps
or
fisubrs
push
mov
xor
jne
sti
imul
in
inc
shrl
ja
pop
sbb
frstor
inc
sub
lcall
test
sbb
jge
add
gs
das
or
loopne
push
mov
sahf
repnz
sbb
out
cltd
loop
push
sub
push
repnz
gs
add
lock
fbstp
mov
int3
push
dec
addr16
mov
cmp
cld
ja
pop
jb
lds
push
pop
jne
in
pop
xchg
test
push
xchg
sbb
and
cmp
adc
jmp
push
push
leave
jge
cmp
xchg
into
das
mov
push
mov
mulb
pop
lret
jne
push
xor
adcl
scas
sbb
and
sbb
cwtl
jmp
mov
inc
mov
fdivl
pop
push
cltd
add
mov
jle
xor
mov
stc
mov
jl
dec
and
sar
cmc
pop
repz
mov
cmpsl
loop
inc
and
add
and
xor
and
add
mov
xor
jge
out
lds
inc
inc
xlat
xchg
and
das
ret
sarl
ds
sbb
add
daa
clc
outsb
movsb
lea
add
cmpsb
hlt
xchg
xor
fucomp
cs
sub
leave
xor
xor
iret
inc
ret
sub
and
xchg
scas
sbb
cmp
jb
pop
cmc
and
les
sub
cmpsb
lock
mov
mov
shll
daa
pop
jb
les
leave
push
mov
cs
add
imull
pop
pop
sti
xor
roll
jne
out
jle
out
add
fwait
in
mov
xor
out
push
mov
mov
test
fwait
scas
ljmp
pushf
mov
and
xorl
iret
nop
gs
lock
jo
cwtl
loop
lods
inc
mov
cmp
mov
pop
xchg
sbb
pop
fidivrs
mov
cmpsb
mov
cmp
ret
stc
test
push
cmpsl
or
add
aaa
insb
rolb
sbb
aas
icebp
mov
nop
lret
cmp
pop
cmpsb
nop
aad
adc
test
add
dec
fldenv
roll
imul
test
sbb
mov
sbb
xor
dec
mov
mov
les
mov
sbb
dec
leave
cwtl
sub
xor
and
movsl
mov
das
shlb
ficoms
test
int
in
inc
ret
ret
movsl
and
lea
dec
mull
scas
dec
jns
inc
fists
int3
arpl
ss
mov
iret
popl
mov
adc
or
jmp
pop
lret
mov
mov
bound
jle
daa
dec
jo
subl
jo
mov
pop
dec
inc
nop
mov
psllw
dec
rorb
aam
fs
jno
fsubr
cmc
lahf
cmp
mov
ss
mov
psubq
lock
mov
rolb
lds
jmp
sbb
xchg
sbb
repnz
adc
popaw
aad
mov
xor
std
aad
js
lods
push
inc
es
lahf
insl
dec
dec
xchg
out
mov
mull
cmp
faddl
push
loopne
repnz
mov
ljmp
rcll
sub
add
rcll
and
or
addr16
enter
adc
sbb
roll
aaa
fsubs
shrb
add
sarb
mov
xchg
sub
in
in
push
dec
ret
push
aas
repz
shrb
xchg
jge
cmpsb
shlb
outsb
popa
mov
fcmovbe
cli
xchg
ja
pop
dec
inc
dec
adc
jne
jne
aas
inc
and
pop
mov
or
cmpsb
fiadds
inc
repz
add
shlb
adc
je
neg
or
jge
aad
stos
sub
dec
es
or
add
xor
or
mov
lods
jne
out
lods
xchg
cmp
cld
mov
repnz
pop
cmp
enter
repnz
inc
pop
out
aam
or
ja
mov
dec
mov
pop
inc
push
lret
sub
cli
lea
and
push
pop
cmpsb
inc
cwtl
mov
mov
pop
nop
push
dec
dec
fs
xchg
imul
enter
les
fwait
aaa
in
shlb
and
xor
adc
test
pop
iret
outsl
sub
in
push
push
pusha
aad
aam
push
add
movsb
xor
outsb
jl
jnp
dec
hlt
jg
popf
das
adc
sarb
loop
push
cmpsl
test
adc
cmp
xchg
enter
bound
pop
push
int
int
jo
jp
pusha
shlb
sub
pusha
or
insl
adc
push
sbb
je
push
add
sarl
mov
pusha
pop
sbb
mov
cmp
insl
dec
les
mov
cwtl
mov
jmp
and
test
mov
pop
icebp
mov
mov
or
adc
fcomps
dec
cmp
add
scas
push
bound
mov
sahf
aam
les
lock
dec
in
rcrb
add
push
mov
negl
movsb
sub
push
push
xor
add
cwtl
divb
lds
add
pop
and
sub
xor
outsb
xor
jb
insl
sub
hlt
xor
and
add
mov
mov
dec
adc
enter
push
iret
mov
xor
cmp
stos
sar
xchg
rcll
jge
jle
jmp
push
jl
xlat
mov
adc
mov
xchg
push
shl
sarb
sbb
leave
sahf
sahf
in
push
cmp
xlat
aaa
insl
enter
xlat
scas
mov
adc
and
cli
icebp
outsb
adc
js
add
xchg
sbb
xor
popl
into
out
sarl
loop
pop
aad
mov
scas
inc
mov
pop
in
lahf
xchg
push
rcll
loopne
int3
ss
sub
jp
out
lret
insl
jnp
xchg
sbb
or
cmpsl
push
daa
cltd
dec
mov
pop
jecxz
pop
loope
jmp
pop
fsubrp
push
loope
std
fwait
xorl
xor
cmp
push
lods
adc
test
insb
and
jns
das
xor
addl
arpl
or
loope
jb
xchg
mov
cmp
jae
ss
xchg
add
rclb
stc
ret
mov
inc
call
insl
inc
jo
aas
and
call
or
leave
inc
cmpsb
xor
cmp
loope
int
fisubl
dec
aad
pop
or
sarb
mov
gs
jns
out
xor
shr
fwait
shrb
jl
cmove
or
jo
aas
addb
adc
inc
dec
push
in
shrl
iret
xchg
or
std
in
jle
mov
lods
cmp
mov
xchg
jo
fildll
daa
mov
decb
scas
inc
mov
movsl
and
repnz
scas
out
mov
fcompl
inc
pop
movsb
and
cmp
cltd
gs
aaa
pushf
adc
aam
add
mov
sub
mov
test
adc
test
xor
jno
or
sbb
cltd
out
jmp
mov
shlb
dec
imul
mov
or
dec
xor
loope
push
push
mov
inc
cs
xchg
js
flds
aad
orl
lret
push
orb
dec
daa
push
xor
adc
cmp
push
ljmp
les
movsb
fidivrl
and
daa
test
sbb
std
mov
fldcw
mov
jmp
dec
ss
stos
mov
je
push
adc
addr16
cmc
pop
outsl
xchg
clc
das
scas
lcall
or
push
inc
sbb
aad
adc
mov
pop
cmp
lds
mov
sub
ja
mov
sub
pusha
idiv
in
sub
mov
fists
inc
sahf
add
push
xchg
jle
cmp
inc
mov
daa
push
outsl
jbe
sbb
hlt
xchg
cmpl
add
jle
idivb
cmpsb
lcall
lds
mov
addr16
push
add
iret
js
add
jecxz
aam
arpl
mov
and
sti
adc
cwtl
xchg
and
sub
das
xchg
fcompl
aam
sbb
lahf
sub
jp
addr16
adc
inc
div
scas
sbb
xlat
in
scas
mov
div
mov
mov
xor
fsubs
addr16
fsubrs
push
negl
jge
or
das
cmc
inc
pop
pop
je
cmpsb
pop
dec
and
jno
das
cltd
push
mov
inc
xor
movsb
fcomp
push
push
lret
enter
out
stc
movsl
or
push
xchg
andb
inc
fisttpll
push
pop
inc
or
mov
mov
jno
shlb
out
mov
xchg
pop
push
fcmovb
adc
xor
test
ret
hlt
pop
push
push
and
pop
xlat
xor
out
mov
aas
sub
cli
sbb
sub
mov
jne
lcall
lods
ret
mov
pop
out
mov
fs
cmpsb
push
sahf
mov
lret
and
cmp
std
xchg
notl
insb
inc
cmp
imul
jno
lret
test
jg
subl
xchg
xchg
and
xchg
loope
add
mov
or
push
add
inc
and
lock
xchg
xchg
mov
lock
nop
sbb
xor
ss
and
add
mov
xor
lea
inc
pminsw
in
aas
add
cmpsb
js
mov
hlt
je
outsl
jns
jbe
lcall
les
fbld
or
dec
insl
xchg
sar
sti
cmp
jbe
paddq
imull
iretw
adc
and
aam
and
mov
jle
ljmp
call
pop
push
idivb
gs
push
enter
or
jle
inc
cmpsl
or
cwtl
push
jb
std
xor
add
adc
cs
jmp
imul
xchg
mov
clc
dec
or
stc
js
cs
out
xchg
jb
out
xchg
std
insl
mov
xchg
out
cmp
push
insb
inc
mov
insb
daa
inc
stos
fld
xor
mull
mov
addb
test
imul
movsb
adc
dec
dec
mov
mov
jmp
push
inc
xor
and
popf
and
cmp
pop
subb
cmp
test
adcl
fildl
or
cmpsb
cmp
and
push
cltd
xchg
lret
insl
stos
loope
aad
adc
xchg
sbb
dec
push
cmp
pop
push
inc
jmp
jmp
adc
mov
int3
xor
and
gs
cmpsl
pop
insb
out
adc
mov
cld
push
mov
lret
fmull
gs
lret
sbb
xchg
insl
loope
movsl
sbb
pop
push
stos
arpl
loope
add
cmp
xor
cmpsl
cltd
lods
aad
les
or
lods
xchg
sarl
sub
test
dec
xor
sub
xchg
mov
jns
pop
iret
adc
hlt
sbb
or
fldenv
cmp
js
out
xlat
adc
pop
lds
or
jbe
add
ret
cltd
dec
xchg
jge
push
test
pop
insb
std
dec
into
cld
das
xchg
lea
pushf
out
ret
inc
xchg
shlb
imul
pop
je
dec
popf
ror
inc
test
add
lods
out
jno
jns
ror
jl
gs
xchg
shrb
mov
js
repz
xchg
rep
int
insl
cwtl
es
sub
xor
hlt
xchg
ds
inc
xlat
out
das
clc
in
push
jmp
mov
mov
sti
test
es
fistpll
push
lret
cmp
push
push
clc
js
xchg
xchg
das
nop
xchg
and
cmpsl
jle
cmp
dec
dec
mov
loop
cld
xlat
sub
cmpsl
mov
es
test
dec
push
mov
dec
inc
cmc
and
mov
sbb
fs
fisubl
add
sub
xchg
jg
insl
insb
loopne
xor
xchg
rcr
insl
sar
sub
cli
sbb
aam
dec
fadds
aas
add
cli
nop
jne
inc
popf
mov
ss
call
into
outsb
mov
inc
mov
and
sub
jecxz
out
aaa
mov
xor
shll
pop
sbb
mov
ret
xchg
adc
mov
outsb
mov
pop
outsl
mov
mov
pop
mov
xlat
std
gs
aas
jle
jecxz
pushf
aaa
mov
sbb
fidivrs
ret
xor
jae
insb
mov
shrl
sbb
in
mov
mov
fldl
ja
jmp
cld
mov
adcl
mov
sub
test
nop
data16
es
nop
inc
es
pop
fwait
mov
or
push
nop
in
push
sbbb
xchg
int3
xor
mov
sub
movsb
jno
aaa
insl
or
inc
ja
loop
mov
fnstenv
icebp
sbb
stos
mov
into
mov
mov
mov
dec
idivb
lods
lahf
mov
pop
aad
pusha
sbb
jge
bound
in
xorb
push
dec
mov
leave
jmp
push
adc
scas
imulb
into
sub
sarb
lock
dec
in
shll
in
insb
mov
not
cwtl
das
cmp
aad
mov
sahf
xchg
clc
cwtl
clc
aad
push
fildll
lds
cmc
sub
in
or
cltd
ja
xorl
dec
scas
xchg
aad
push
xorl
divl
xor
mov
fcmovnb
out
inc
mov
xlat
js
loopne
test
gs
xchg
enter
and
adc
pop
pop
and
jb
dec
xchg
xor
mov
dec
aas
adc
repz
sbb
xchg
inc
push
jns
cmp
xchg
add
jl
jecxz
mov
loop
jl
stos
jae
rclb
xchg
and
jle
adc
xor
daa
loop
push
popf
inc
xchg
mov
or
xor
push
jns
daa
xchg
mov
mov
mov
das
xchg
mov
sub
xor
xchg
scas
sub
xor
push
push
pop
push
lret
std
cmp
pop
out
loopne
cmpsl
mov
cmp
shll
sbb
mov
arpl
enter
lea
mov
iret
jae
xor
xlat
adc
xor
fmuls
test
faddl
push
push
and
inc
test
or
imul
jg
mov
adc
pop
dec
mov
adc
imul
pop
mov
daa
in
mov
ljmp
call
mov
addr16
jle
pop
into
ficompl
mov
es
push
sbb
adc
std
clc
lods
subb
fucomi
jge
in
arpl
stos
jmp
sub
cmp
jle
into
mov
sub
movsb
arpl
xchg
jns
dec
js
jbe
mov
mov
inc
int
mov
cmp
inc
gs
in
adc
shrb
jnp
int3
scas
jnp
imul
cs
or
jae
mov
inc
fstpt
sbb
pop
sub
test
mov
pop
lds
mov
mov
xchg
and
jb
mov
push
jae
push
lret
mov
or
ss
jp
push
mov
dec
mov
scas
andb
mov
inc
mov
dec
and
call
or
movsl
loopne
rcr
pop
mov
add
ljmp
cmp
data16
rdmsr
xlat
and
xor
mov
mov
mov
mov
lds
xor
or
and
add
jecxz
xchg
jg
push
push
test
pop
jmp
xchg
jbe
jmp
in
and
xchg
shr
push
sbb
mov
mov
int
cs
loop
outsb
leave
sub
inc
mov
movsl
lock
sub
or
xchg
loope
inc
lods
jmp
shrl
dec
or
shl
dec
addr16
mov
les
pop
insb
mov
push
scas
test
push
test
mov
add
fsub
in
data16
ljmp
xchg
jg
imul
sub
push
sbb
jno
xor
and
imul
fists
pop
add
dec
xchg
pop
or
inc
into
movsb
popf
out
or
repz
ret
imul
or
ja
sub
rorb
mov
mov
cmpsl
aas
push
cmp
rcrb
push
xchg
mov
xchg
add
sub
push
jge
enter
arpl
aas
sahf
jb
lcall
imul
js
test
mov
dec
push
adc
std
test
push
jmp
jmp
dec
dec
mov
movsb
loop
adc
or
or
sbb
mov
mov
xor
adc
cld
sbb
push
shlb
out
xchg
scas
pop
and
and
dec
cmp
add
pop
es
out
jne
adc
shll
xor
mov
out
testl
or
cli
and
mov
enter
dec
sbb
mov
imul
aam
mov
pop
call
int3
in
mov
adc
fsts
xchg
mov
fdivs
mov
push
jo
or
mov
push
mov
arpl
lods
push
jp
je
push
sbb
gs
loop
mov
xchg
rclb
adc
addr16
rcrl
push
orb
xor
jbe
ss
adcl
dec
pop
mov
movsl
out
jns
sub
in
out
fildl
add
pop
mov
repnz
sahf
ret
aam
add
mov
lahf
push
insl
dec
xor
mov
xchg
loope
pop
cmpsl
mov
jb
lret
or
inc
sub
sbb
pop
mov
add
in
lods
cmpsl
imul
sbb
jae
cmp
lea
push
dec
push
push
sar
mov
stos
sbb
aaa
push
rol
mov
xor
sbb
adcb
add
or
pop
jne
test
cmpl
stos
lods
js
daa
out
ret
loope
add
leave
mov
int3
and
lahf
pop
test
push
leave
xor
push
push
in
pop
clc
pop
dec
gs
lret
imul
and
mov
lahf
ficoml
sub
adc
out
mov
addr16
subb
scas
xchg
xchg
jb
mov
sahf
lret
push
fstpl
or
in
mov
mov
xchg
shrl
movsb
jae
pop
loope
in
xchg
xchg
jmp
inc
push
gs
xor
fldt
mov
push
enter
lods
js
ret
inc
int3
mov
or
ret
ret
iret
cmpb
pop
mov
fucomi
lods
xchg
and
mov
mov
dec
sub
lods
shr
or
cs
imul
imul
mov
fcomip
aad
clc
pop
mov
xlat
push
pop
jns
xor
test
xor
mov
dec
xchg
push
mov
mov
addr16
cmp
ret
push
push
xchg
sub
scas
dec
add
dec
lds
mov
mov
test
mov
int
jp
sub
xchg
xchg
mov
aam
mov
loope
push
outsl
and
or
push
mov
mov
js
cmp
sti
dec
loop
pop
pop
dec
test
ss
inc
mov
gs
ds
in
mov
inc
ror
addr16
dec
sbb
scas
sbb
rorb
cmp
test
lods
sbb
jg
test
dec
cmpb
in
mov
out
mull
addb
ja
std
sub
dec
mov
cmp
jb
inc
pop
mov
inc
mov
cmp
mov
xor
rcrl
cmp
lret
jne
ret
and
cmp
jns
das
fildll
movsb
push
dec
je
popf
pop
fcomi
std
test
sub
sub
mov
add
out
sbb
fisubrs
sub
aad
bound
pop
stc
movsl
mov
jg
push
test
out
xor
lcall
dec
pushf
sbb
insb
xorl
inc
sub
push
outsl
adc
or
push
scas
aad
or
jge
push
jl
lods
das
xchg
mov
out
pop
in
xor
sub
and
lret
fdivrs
cmpl
jmp
subb
pop
popa
mov
pop
inc
sub
mov
sub
pop
mov
mov
dec
adcl
push
mov
jle
aam
adcb
cli
or
mov
mov
faddl
cltd
or
mov
pushf
pop
shl
fnsave
test
adc
stos
in
inc
stos
adc
in
dec
leave
ds
pop
add
mov
nop
jl
cld
rcll
mov
rcl
rol
sub
lahf
out
aam
jmp
imul
jo
test
xchg
int3
pop
fstpl
aas
rclb
push
mov
mov
xor
int
dec
xchg
or
inc
stos
sbb
dec
fs
jo
mov
lret
test
inc
insb
inc
ljmp
or
repz
mov
scas
jp
sahf
mov
in
dec
cltd
pop
mov
nop
xchg
or
rorb
push
in
pop
popl
jg
loop
aad
cmc
fisubl
pop
sbb
add
jae
sbb
sbb
mov
cwtl
mov
xchg
or
inc
mov
sbb
cmc
in
cmpb
shll
jnp
mov
add
jb
push
mov
fidivs
mov
aas
push
test
lcall
mov
xchg
lods
xchg
repnz
inc
mov
fistpl
jnp
nop
outsl
les
pop
rcrb
jl
jno
pushf
stos
pop
es
jl
popf
loope
pop
loopne
rol
push
and
ret
jp
aad
cmp
inc
xchg
sbb
lret
mov
pop
scas
jns
xchg
pop
or
lret
adc
xchg
fisttpl
inc
add
das
inc
mov
fistps
je
xor
xor
jb
or
dec
sub
lock
xlat
mov
loopne
testl
rorl
ds
mov
xchg
lods
jg
jmp
and
adc
fisttpl
ss
inc
aaa
aaa
out
sub
jge
mov
sub
les
test
push
mov
data16
push
cmp
xchg
fwait
hlt
cltd
loopne
rorb
cmp
lahf
std
call
inc
sbb
pop
fadds
bound
or
mov
icebp
movl
aaa
mul
out
and
int3
push
push
sbb
loop
and
lahf
out
rorl
aad
dec
mov
dec
push
es
and
mov
in
std
and
outsl
shrl
lahf
call
cwtl
push
mov
adc
aas
cmp
cwtl
mov
push
cmpsl
bound
adc
cld
sub
mov
jnp
sbb
lock
aad
cmp
adc
loope
adc
das
add
repz
add
lcall
mov
mov
in
xor
ja
jno
cli
decb
es
scas
test
sub
pop
insb
dec
mov
mov
and
jp
leave
loop
lahf
pmulhw
sbb
mov
add
mov
push
out
cli
push
jle
outsb
jecxz
or
lret
je
add
inc
clc
je
inc
and
mov
addr16
add
or
arpl
cld
pop
fldcw
scas
ret
daa
mov
cltd
mov
ret
dec
inc
fists
cmp
cltd
pop
jp
jns
sbb
std
mov
std
inc
mov
jns
jmp
jl
cmp
imul
loope
sti
xor
pop
int
movsl
push
repnz
cmpsl
pop
mov
and
pushf
cmp
mov
mov
fstps
mov
daa
stc
jbe
ljmp
adc
rcrb
mov
in
sbb
xchg
sbb
pop
dec
std
xlat
negb
and
stos
jmp
push
popa
clc
dec
in
loopne
ret
sbb
insl
std
inc
xor
cmp
mov
in
xlat
add
int
pushf
cmpsb
rorb
dec
lods
push
inc
lods
or
gs
jmp
les
aam
bound
lret
mov
inc
adc
enter
aas
cmc
cmp
pushf
cmp
mov
popa
add
insb
xor
es
in
cmp
jmp
lret
and
fcmovne
cs
push
add
and
push
lret
mov
jae
jne
push
fsubs
adc
dec
mov
adc
mov
es
push
stc
cli
xor
cmp
test
fcoms
dec
dec
das
pop
rclb
lds
into
lds
outsl
movups
lods
jmp
adc
cmp
fwait
xchg
cmp
out
cwtl
outsb
xchg
jnp
sub
fisttpll
aas
dec
xchg
and
out
cmp
lock
cmp
inc
ret
cwtl
adcb
movsl
lock
dec
mov
pop
jp
add
aad
adc
mov
xchg
xchg
repnz
mov
mov
inc
jb
loopne
inc
icebp
pop
sub
faddl
add
loope
mov
movl
dec
or
shl
push
in
jae
and
pop
push
jne
add
mov
fcoms
icebp
sub
push
fnstsw
jno
loope
lret
pop
aas
rclb
faddl
mov
jb
and
lret
stos
mov
mov
inc
out
mov
insl
push
movsl
faddl
cwtl
sub
dec
hlt
or
jecxz
outsb
in
jmp
pop
jno
sbb
sub
add
cmp
mov
add
ja
aad
sub
movsl
add
pop
push
add
sbb
dec
push
sbb
adc
inc
fcom
mov
cmp
loopne
add
and
xchg
outsl
dec
pushw
push
cmp
insl
xor
int3
and
mov
movsl
push
sahf
pop
insl
cmp
xor
jo
in
lahf
out
push
inc
fwait
sbb
mov
les
push
addr16
pop
jo
inc
notl
or
push
ret
push
cmp
pushf
mov
je
jcxz
aad
dec
jno
test
scas
insl
inc
mov
mov
movsl
in
out
in
jo
mov
sbb
adc
mov
ret
mov
jge
aam
mov
ret
or
aam
dec
mov
cs
mov
lds
xor
xchg
inc
aaa
cmpsl
xor
mov
fxch
sub
dec
fsubrl
je
push
testl
test
sbb
pop
sbb
push
mov
push
aas
aam
pop
or
neg
es
jmp
stos
test
sbb
push
inc
lcall
sbb
push
xor
ja
mov
addb
push
cmp
test
aas
xchg
push
push
fwait
push
icebp
xchg
xchg
jns
sub
cmp
sub
les
inc
jmp
test
dec
push
fs
mov
aad
mov
pop
rol
dec
cltd
add
add
sarb
xor
cmp
jle
out
and
and
push
or
fisttpl
andb
or
jl
popa
adc
aaa
stos
mov
dec
icebp
imul
fwait
mov
xor
sub
lret
or
loopne
mov
jno
sbb
mov
xor
lods
mov
ja
into
stos
pop
dec
stos
xor
sub
adc
mov
ss
jle
xor
add
lds
lahf
imul
fsubs
sbb
adc
inc
outsl
cltd
insb
sbb
repnz
mov
mov
jecxz
inc
push
inc
dec
sbb
or
cmp
lcall
xchg
sub
repz
mov
adc
cmpl
push
stc
jp
mov
stc
or
aaa
mov
ljmp
call
rcll
sub
xchg
push
mov
xchg
addr16
outsb
test
es
xchg
stos
ret
dec
aam
in
add
ja
ret
mov
inc
adc
cmp
loope
sti
bound
orb
mov
xlat
aad
sbb
les
jecxz
or
mov
or
cmp
ret
sbb
fdivs
push
push
in
and
jmp
mov
adc
fucomip
cmp
cmp
add
push
ss
shll
cmpsl
lret
fdiv
push
popf
mov
or
sbb
adc
push
xchg
cmp
test
and
insb
pop
cmpsl
scas
fimuls
outsl
int
jnp
xor
xchg
cmp
testb
inc
scas
scas
aam
mov
shrl
insl
mov
std
cmc
test
add
std
inc
push
das
out
ss
in
pop
js
es
xor
lock
repz
cmpsl
jl
push
stos
outsl
in
adc
xor
pop
movsl
in
mov
imul
mov
gs
cmp
loope
lea
mov
aaa
dec
jno
pop
fimull
stos
ljmp
sbb
cmp
cmp
sbb
sbbl
and
mov
ror
sub
mov
cmp
push
cmp
loope
lods
cmc
push
cli
in
mov
pop
mov
cmp
adc
adc
jmp
xor
mov
mov
jg
shrb
outsb
imul
ja
pop
pushf
imul
aad
std
je
lods
call
loop
cmp
icebp
cmpsb
andl
outsb
adc
and
lea
mull
dec
fnstcw
inc
push
stos
fsubl
in
into
arpl
mov
add
dec
aas
mov
lods
rolb
mov
out
push
sarb
jne
stc
in
pop
cs
imul
jae
jg
in
cmpsb
hlt
mov
mov
hlt
jecxz
pop
push
pop
inc
push
js
xchg
jne
pop
cmp
inc
cwtl
out
adc
xchg
sbb
xor
call
xor
mov
rcrb
adcb
mov
push
mov
pusha
movsl
lcall
stc
cs
jl
fiadds
inc
ficompl
loope
mov
inc
shlb
ja
jl
push
xchg
mov
mov
addr16
jecxz
stos
sahf
fists
mov
sub
cltd
mov
out
lds
jge
cli
test
dec
fildl
jecxz
aaa
adc
imul
fidivl
dec
or
jbe
pop
lods
daa
jge
pop
push
rcr
adc
mov
fs
jne
test
in
cmp
fimuls
popf
dec
hlt
mov
mov
inc
push
pop
call
movsb
mov
int3
out
inc
add
lea
or
xchg
es
stos
add
cmp
xchg
mov
lret
sub
mov
pop
scas
sbb
lds
jp
adc
fcmovnb
adc
test
nop
rolb
jp
sbb
xchg
fstp
insb
clc
inc
lret
jge
xchg
jg
or
repz
jg
ja
inc
movsb
iret
sub
cmc
xchg
shlb
jmp
jl
sub
push
int
xor
pop
xor
xchg
dec
add
fisubrl
les
mov
cwtl
adc
add
cmp
adc
sbb
test
jle
push
cmpsb
jle
cli
mov
ds
rcrl
dec
xchg
daa
divl
dec
or
fstps
sub
sbbb
inc
jp
cs
out
out
aam
mov
rcrl
pop
pop
pushf
stos
movsb
fisttps
addr16
dec
fucom
cmpl
test
rcrl
mov
sub
adc
and
sahf
sbb
pop
pop
cmp
cmp
ss
sub
add
adc
and
mov
push
and
jmp
sbb
stos
lods
cltd
cmp
pop
daa
xchg
sub
dec
sub
xor
adc
xchg
cmp
icebp
cmpsl
shll
mov
mov
dec
pop
xchg
bound
outsb
cmp
popf
add
scas
mov
clc
lret
into
mov
fwait
mov
cwtl
push
addr16
aas
testl
imul
dec
sub
or
loope
jbe
cli
pop
pop
pop
jno
sbb
mov
pop
insl
lahf
sti
ja
push
adc
stc
stc
inc
pop
inc
pop
clc
lcall
mov
cmpsl
push
and
mov
dec
inc
frstor
data16
bound
or
ret
push
cmp
pop
pop
pop
das
jp
jge
jl
outsb
xlat
dec
arpl
mov
mov
push
jle
clc
jnp
bnd
cs
mov
in
aas
or
mov
mov
cltd
and
push
in
or
lods
pop
and
mov
xchg
ljmp
les
je
pop
add
hlt
cltd
mov
loop
jmp
jne
cmpsl
rcr
call
loop
cmpsl
jp
push
ja
jbe
fldl
notl
lret
xchg
and
mov
iret
mov
pop
sarb
dec
mov
mov
adc
sub
in
sahf
in
inc
adc
out
shlb
out
add
mov
mov
xchg
pop
sub
mov
inc
shlb
mov
popa
mov
mov
lcall
mov
hlt
jmp
adc
push
sbb
or
aaa
sbb
push
ds
pop
xchg
imul
pop
fbstp
lock
lret
fs
push
in
cmpsl
cmc
mov
imul
test
mov
aas
mov
jecxz
mov
sub
insb
pop
sub
aas
ljmp
and
pop
adc
xor
mov
or
imul
dec
push
stc
out
dec
xor
xchg
stc
cmp
inc
int
out
fnsave
dec
gs
in
mov
fisubrs
cmovno
and
push
adc
hlt
out
push
test
cmpl
inc
or
outsb
mov
inc
mov
adc
mov
dec
movsb
adc
test
in
lret
lahf
imul
fcompl
shl
testl
jnp
mov
xchg
in
stc
out
adc
out
xlat
testl
inc
jno
test
push
adc
lock
frstor
stc
imul
and
pop
jecxz
lret
jmp
lods
pop
jge
cltd
push
mov
and
cmc
xchg
jg
pop
add
outsb
xor
sbb
fs
out
mov
or
insl
arpl
int3
insl
mov
fs
lret
mov
inc
jl
jb
fsubrs
lock
cmp
dec
clc
in
rcl
test
lods
lods
push
mov
cli
pusha
mov
pop
mul
pop
notl
dec
cmp
and
fwait
movsb
fwait
inc
insl
jge
int3
push
jne
inc
dec
in
insl
xor
imul
mov
lods
xchg
jmp
push
pushf
divl
push
insl
mov
or
fwait
out
jg
dec
cmpsb
lea
push
mov
inc
dec
xor
xchg
jg
loopne
pop
int
sarl
loopne
pop
sbb
xor
mov
jbe
aaa
test
xor
mov
or
jae
sub
pop
push
repnz
sub
loope
xchg
pop
hlt
iret
loope
shrl
push
mov
outsl
mov
fmul
mov
push
jg
push
inc
je
stos
add
xor
add
adc
or
add
xlat
cltd
sub
stos
mov
shlb
cmpsl
popf
xchg
adc
aad
jb
ret
test
jle
sub
add
mov
mov
or
sahf
btsl
and
inc
xchg
and
int
lods
add
stos
jmp
test
xchg
out
xor
mov
and
or
push
jp
lret
xlat
leave
imul
je
xchg
in
push
movsl
push
clc
out
fcoml
lods
sub
push
iret
xor
pusha
ret
inc
jmp
push
aaa
stos
xor
adc
inc
fadds
std
jo
call
xchg
inc
hlt
addr16
sub
cli
xchg
rcll
int3
xor
test
cmp
fwait
aas
mov
icebp
mov
fdivl
fwait
xor
loope
sbb
dec
lcall
ror
ficompl
jl
fbstp
leave
pop
movsb
test
xor
sub
icebp
mov
std
mov
ja
pop
in
pop
rcll
inc
push
sub
adc
imul
test
push
inc
std
push
cmp
mov
jns
mov
aas
push
mov
jl
shlb
cmc
es
jl
jo
lcall
paddw
jo
push
adc
xchg
js
push
pop
cltd
mov
das
test
fsubl
and
mov
push
lret
xchg
ret
adc
cmp
mov
jb
sub
lods
xchg
mov
dec
and
and
test
sub
adc
mov
int3
mulb
xchg
xchg
mov
add
pushf
push
cmp
sbb
scas
sbb
mov
imul
out
je
pop
push
sub
mov
jnp
inc
pop
xchg
popf
imul
les
add
and
mov
sti
es
jg
fdivr
pop
cmp
stos
out
fisubrs
stc
sbb
xchg
pushl
pushf
jb
movsl
mov
ret
scas
shl
popf
jne
mov
std
inc
insb
dec
gs
push
inc
mov
pop
outsl
hlt
jl
inc
pushf
dec
movsb
add
aam
mov
cmp
mov
cmpsl
andb
jmp
sbb
lods
insb
mov
outsb
insb
sub
fcmovb
xchg
jbe
adc
jnp
xchg
mov
rcl
xlat
push
cmpsl
loop
data16
pop
sub
jmp
in
lock
mov
je
cmc
ret
flds
inc
dec
out
dec
and
fcmovnbe
loop
pop
rcl
leave
scas
rcrb
push
mov
pop
mov
lods
xlat
add
ret
loopne
cmpl
scas
das
aas
and
sar
pop
and
xchg
xchg
sbb
cmp
push
nop
rcrl
jp
sbb
jnp
das
and
push
sti
jp
mov
or
ja
jge
es
cmp
leave
pop
cltd
xchg
cmp
mov
cmp
sub
sti
mov
fistps
ds
xor
and
or
imul
xor
in
mov
sbb
mull
mov
jo
in
icebp
mov
les
cmpsl
dec
cmpsl
inc
add
cmp
popf
insl
or
lds
bound
xchg
ffreep
fdivr
mov
test
pop
jmp
fcomps
sbb
pop
sub
mov
fcomi
jg
nop
sub
cs
loop
cmp
xchg
jp
push
rcrb
pushf
dec
xor
shrl
in
sahf
adc
mov
cs
fmull
mov
outsl
imul
js
nop
in
inc
rclb
mov
push
mov
pop
jecxz
mov
fld
shl
mov
out
adc
lahf
cmp
les
shlb
addr16
dec
lock
or
in
mov
pop
lahf
mov
pusha
xchg
filds
stos
push
jo
pop
fdivrl
xchg
xchg
cld
mov
clc
xor
or
mov
mov
popf
je
adc
mov
jo
pop
imul
cmp
shlb
push
or
out
dec
subb
scas
mov
mov
or
mov
mov
aaa
fwait
divl
data16
push
xchg
cs
sti
shrb
mov
xchg
out
in
sbb
or
scas
stos
or
pop
repnz
pusha
mov
sar
mov
scas
push
mov
out
jmp
sub
iret
sahf
lock
push
shll
daa
adc
dec
xor
jbe
add
mov
sahf
mov
cs
sbb
add
adc
repz
jle
cmp
lea
or
lcall
pop
jl
dec
fdivr
call
les
jp
sarb
cmp
xchg
mov
add
pop
iret
shll
icebp
outsl
fcompl
fimull
fisubs
cli
mov
es
int3
imul
dec
ljmp
notb
xor
lret
or
jp
jg
out
insb
and
inc
rorb
jno
cmc
ret
push
rclb
and
jbe
fisubl
sub
and
fmuls
lret
pop
out
js
inc
fwait
push
push
dec
in
fcoms
fisttpl
mov
sbb
jo
into
bound
out
mov
fdivp
aad
push
movsl
or
push
fldenv
and
pop
loopne
insb
call
pop
out
into
test
std
adc
into
and
pop
jnp
scas
xchg
jae
popf
shlb
outsb
mov
aad
and
arpl
and
ljmp
pop
stos
nop
iret
add
data16
dec
sbb
repnz
sbb
out
rolb
cltd
lea
or
mov
aas
cmp
cmp
or
push
and
mov
inc
mov
jle
jnp
inc
aam
dec
cmp
lea
stos
dec
out
bound
xchg
hlt
out
cmp
mov
mov
xor
jge
sbbl
sbb
aaa
xor
cmpsb
addr16
incl
push
scas
cs
jbe
pop
aam
sbb
test
lock
imul
pop
pop
addr16
repnz
test
add
lds
loope
insb
push
mov
push
int3
pusha
ds
lods
ja
lcall
stos
fnstcw
sub
iret
xchg
in
pop
shrl
jmp
push
cmp
dec
rolb
xchg
sti
mov
pop
mov
in
sub
inc
cmp
ds
mov
xchg
xchg
xor
adc
or
test
mov
cwtl
mov
out
cmpsl
test
lret
inc
fs
scas
add
fadds
mov
insb
ret
mov
dec
outsl
xchg
into
outsl
mov
jmp
adc
or
loope
loopne
outsb
sub
sbb
fstl
lods
jnp
jb
jno
sbb
add
out
pop
das
pop
loopne
jae
xlat
testl
add
insb
in
push
push
les
cld
stos
mov
push
std
mov
scas
out
push
nop
scas
pop
in
pushf
dec
popa
fistpll
aam
pop
push
xchg
and
ret
loopne
cmp
inc
outsb
fbstp
arpl
xchg
push
call
inc
xor
cmc
mov
sbb
xchg
out
inc
jg
lcall
repnz
and
jge
in
int
popf
mov
jl
xchg
push
imul
enter
insl
dec
andb
lret
repnz
loope
push
lret
jp
rclb
call
dec
xchg
sub
jl
subb
jge
das
lods
lahf
in
adc
and
cmp
stc
xor
mov
fs
frndint
mov
das
ljmp
jne
mov
or
or
cmp
jbe
imul
pop
movsb
inc
cwtl
adc
insl
xchg
clc
loopne
repz
rclb
add
push
inc
and
inc
jo
pop
rorb
outsl
mov
pusha
pop
sub
stos
push
dec
mov
ds
stos
test
arpl
aas
xor
jge
jmp
fucom
cmp
mov
loop
in
adcl
repnz
bound
cmp
mov
adc
ljmp
mov
adcb
xchg
mov
or
lds
push
adc
shrb
cmpsl
mov
icebp
popf
adc
xor
add
xchg
mov
mov
aam
lret
add
dec
pusha
lret
pusha
add
sub
je
data16
and
iret
inc
xor
jbe
lcall
int3
push
jae
mov
inc
dec
add
inc
shlb
push
int
sbb
sti
daa
inc
scas
sti
or
shrb
xchg
pop
add
testb
enter
pop
fnstenv
faddl
jae
xchg
xchg
inc
xchg
jbe
rorb
mov
fisubs
dec
mov
loope
adc
xchg
mov
xor
sbb
fidivrl
testb
jno
push
mov
stc
lahf
int
cmp
add
add
xchg
in
inc
and
or
mov
dec
inc
mov
std
fistl
mov
and
call
pop
mov
jle
push
mov
mov
int
cltd
rcl
adc
jns
xchg
and
xchg
push
push
xor
pop
sahf
jl
jl
mov
mov
xchg
cmpsl
and
xchg
and
inc
fcom
fcomps
push
mov
fnsave
pop
jmp
xlat
fisubrl
mov
into
mov
and
xorb
or
lret
add
mov
out
movsb
dec
xlat
jge
dec
dec
cld
faddl
sbb
aam
inc
lods
rol
je
mov
stc
xchg
push
fisubrs
pop
mov
jge
or
loopne
cmp
adc
outsl
repnz
rclb
xchg
incb
cmp
sbb
out
loope
adc
je
add
stos
and
dec
pop
fimull
cmpsb
xor
xlat
xchg
imul
jge
dec
ds
inc
and
daa
aaa
jae
std
inc
rcll
outsl
int3
push
sbb
gs
bound
fnstcw
push
jge
mov
jbe
sub
pop
and
cld
push
inc
sub
xor
jecxz
ds
xchg
and
enter
mov
adc
test
cmpsl
lea
xor
sbb
mov
dec
fidivrs
dec
scas
fsubl
mov
sbb
push
sub
std
push
adc
outsl
stc
cs
daa
sub
stos
nop
dec
out
dec
lock
movb
sbb
xchg
pop
xor
hlt
shll
lods
mov
enter
mov
adc
loopne
ds
inc
int
repnz
xlat
mov
int3
pushl
stos
sub
xor
inc
mov
comiss
std
rorl
sbbl
imul
inc
adc
cmp
lods
push
mov
roll
js
xchg
in
aam
add
or
ret
mov
mov
cwtl
pop
push
inc
outsb
repnz
addr16
and
xor
dec
jo
mov
mov
dec
push
lds
movsl
in
movsl
pop
and
mov
jle
lods
pop
inc
popf
faddl
mov
stos
jecxz
popa
or
jo
jl
sub
cmp
xor
ret
sub
add
or
xor
fstp
movsl
add
dec
inc
xchg
fidivs
int3
xchg
imul
ficoml
lcall
mov
icebp
in
lods
data16
or
mov
ret
ds
jecxz
mov
dec
shll
loop
jp
dec
daa
mov
fdivrl
inc
in
push
stos
stos
jb
daa
mov
orl
adc
andb
cwtl
test
sbb
ret
jmp
dec
scas
pop
mov
rcll
sbb
inc
adc
pop
xor
or
push
rcr
movsb
fldt
in
jne
lods
adc
push
jb
ja
lcall
xchg
dec
movsb
sub
ficompl
sub
out
in
mov
pop
sbb
cmp
cmp
in
push
es
das
adc
xor
mov
in
add
int3
xchg
sub
lock
fdivl
xor
pop
movsb
rolb
stos
repz
or
dec
das
xor
mov
adc
jne
ljmp
fsubp
cmpsl
xchg
aaa
cld
iret
stos
inc
test
int
icebp
xadd
cmpsl
lahf
fcoms
call
pop
sub
shlb
mov
dec
dec
xor
mov
icebp
or
rcr
rcrb
xor
rol
push
cltd
repz
mov
xchg
popf
dec
mov
xchg
gs
enter
and
push
pusha
shrl
xchg
mov
add
sbbl
punpcklwd
sub
push
daa
mov
pushl
aas
hlt
sbb
dec
les
mov
lds
fsubrl
test
pop
sub
and
cmpsl
push
push
lods
and
pushf
jl
cmp
sbb
test
add
xlat
scas
adc
mov
loope
aad
mov
xor
xchg
dec
jge
iret
cmpsb
mov
push
pushl
push
dec
cmp
in
mov
xchg
aam
ret
cmp
pop
dec
jae
cltd
std
shrb
jge
fisttps
mov
cmp
xchg
dec
cmpsl
dec
fbld
enter
sbb
bound
xchg
gs
loopne
imul
loope
xor
mov
fsubrs
repz
mov
call
inc
jge
punpckhbw
test
xchg
mov
dec
int3
push
inc
jl
jle
out
je
daa
mov
movsl
and
dec
movsl
push
sbbl
outsb
icebp
xchg
lods
mov
pop
mov
pop
push
lahf
cwtl
clc
jge
xchg
into
lods
xorl
jbe
xchg
test
sub
fldenv
int3
cli
sbb
ror
pop
mov
jle
xchg
pop
nop
bound
pop
xor
lock
enter
xchg
push
jge
jbe
in
dec
mov
xchg
dec
ret
sbb
xchg
jno
and
sbb
inc
in
pop
jecxz
movb
or
sti
lea
imul
mov
mov
cltd
call
pop
pop
sub
aas
add
sbb
mov
lcall
or
and
in
sbb
and
mov
mov
aad
xor
sub
rolb
sub
mov
mov
mov
push
mov
cmp
inc
dec
es
mov
dec
sub
mov
dec
fstl
or
fwait
clc
into
ret
mov
sub
insb
inc
pusha
in
jae
push
or
sbb
loopne
lods
push
cmc
sub
jmp
nop
movsb
adc
jb
xchg
inc
adc
loope
and
push
std
jne
push
cmpsb
decb
inc
out
das
mov
call
jp
ja
sub
sahf
sub
mov
test
mov
gs
sbb
nop
iret
icebp
sbb
pop
dec
out
add
sti
mov
sub
repnz
xor
mov
sub
jo
das
in
push
fnstcw
test
mov
repnz
test
mov
imul
sti
xor
lahf
xor
cmp
mov
cmp
xchg
mov
mov
insb
inc
cwtl
and
sub
les
inc
idivb
sbb
adc
or
lods
sub
mov
data16
fisubrl
cmp
push
in
xchg
jo
stc
fidivs
fwait
or
mov
je
mov
add
push
lahf
xchg
mov
out
in
ss
in
addl
pop
fs
sub
dec
mov
push
cli
pop
nop
push
test
cmp
mov
mov
push
xchg
push
sbb
mov
out
in
xchg
xor
repz
div
dec
fisttpll
jbe
loop
mov
xchg
das
pop
fdiv
and
nop
mov
inc
adcl
ja
mov
xchg
in
and
ret
add
fucomi
pop
cmp
mov
fmuls
data16
jb
int
dec
imul
insl
mov
loope
sub
sahf
cmp
fadds
xchg
test
add
and
hlt
pop
mov
sahf
shlb
ret
sbb
cs
xor
mov
jp
test
out
cs
ljmp
jg
lock
iret
cld
mov
ja
movsb
mov
out
insl
nop
sbb
xor
jae
outsb
sbb
xchg
sub
sbbb
or
lods
int
inc
lahf
dec
out
sub
out
xchg
and
hlt
inc
ret
sub
out
push
imulb
adc
js
clc
fwait
mov
mov
sub
add
xchg
pop
aam
pop
pop
dec
sbb
es
mov
pop
pop
gs
mov
adc
adc
ljmp
inc
cmp
pop
jecxz
mov
lcall
das
cmp
into
aas
ds
mov
lds
lods
pop
js
dec
mov
add
rcr
test
add
cmpsb
push
lods
pop
pop
iret
fisttpll
mov
pop
fistl
push
jno
shrl
aas
notb
icebp
out
rolb
mov
mov
ficoms
mov
inc
push
ljmp
or
shrb
ljmp
xchg
adc
cli
jl
ljmp
movsb
popa
mov
shl
push
lahf
rolb
and
jae
fnstcw
adc
pop
popf
mov
add
pop
jae
mov
add
insl
movsl
push
push
and
dec
movsl
pop
scas
xchg
jno
and
mov
insb
xor
or
push
stc
sbb
sarl
mov
push
push
sbb
pop
xor
mov
js
mov
adc
jle
cld
pop
dec
push
es
push
push
pop
pusha
aas
mov
xor
mov
and
in
nop
sbb
adc
dec
mov
ja
daa
pushf
mov
cld
mov
ljmp
dec
pop
push
ss
cmp
cmp
mov
fstps
jp
movsb
fmul
iret
dec
jp
orl
mov
or
test
ja
adc
nop
sti
lcall
scas
negl
out
mov
in
jae
popa
add
or
nop
das
push
mov
lcall
and
cmc
xor
mov
ljmp
mov
fisttpll
iret
push
lods
pop
and
push
paddusw
daa
xor
cmp
jecxz
pop
dec
dec
push
mov
lahf
call
dec
push
fwait
xchg
cltd
push
shll
or
out
mov
aad
cmp
adc
lea
loopne
sub
shrl
outsl
fstl
stos
stos
mov
or
dec
test
or
insb
mov
repz
pop
stc
lods
out
aam
sbbb
mov
inc
adc
push
das
pop
scas
cmpl
mov
pusha
ljmp
call
mov
test
inc
adc
faddl
mov
fld
and
insb
xchg
push
pushf
push
push
sbb
inc
mov
fmulp
push
shrb
push
xchg
cmp
and
xor
incb
pop
xor
adc
sti
inc
cmc
in
dec
sub
pop
dec
into
sub
out
fistps
cmp
clc
into
stos
mov
fdivp
test
fsubl
cmp
outsb
mov
lea
cs
out
push
inc
fs
shll
add
aaa
fbstp
scas
js
pusha
outsl
into
dec
aas
fsts
jmp
push
xchg
mov
aaa
arpl
popa
inc
addb
mov
sub
mov
cmp
add
imul
and
mov
push
mov
dec
push
aaa
dec
adc
mov
movsb
sahf
mov
mov
imul
or
inc
lods
and
fimull
aad
in
rcl
movsb
lahf
pop
jae
mov
adc
outsb
xchg
and
sub
imul
mov
aaa
shll
mov
inc
call
mov
mov
mov
sub
pop
mov
dec
or
pop
fs
aam
fisttpll
push
mov
inc
arpl
ds
add
filds
xchg
adc
popf
pushf
and
or
pop
dec
daa
and
int3
sbb
xchg
enter
mov
sbb
jnp
cmp
and
adc
test
xor
imul
loopne
shlb
jge
ret
iret
cs
shl
jmp
mov
cli
jp
xchg
xchg
movl
xchg
ljmp
popa
xchg
or
and
push
pop
cs
js
sub
nop
testl
mov
xchg
mov
sub
xchg
pop
mov
adc
sahf
lea
mov
push
push
pop
mov
adc
push
adc
add
pop
dec
cs
xchg
stc
pop
sbb
jb
and
pop
push
jge
data16
stos
jge
icebp
pusha
dec
pushf
jae
and
inc
enter
sub
out
and
clc
fsubrs
ds
icebp
andl
and
ljmp
mov
mov
in
jne
movsl
jo
xor
aam
call
inc
stos
push
and
pop
repz
lcall
cmp
movsl
inc
pop
clc
test
mov
lods
call
ja
ficompl
jno
hlt
sub
in
js
fcomi
inc
es
mov
nop
inc
pop
shlb
insb
aas
jp
add
push
insb
stos
mov
xlat
repnz
fcoms
enter
fstps
jne
mov
or
lds
adc
test
iret
cmp
mov
dec
cmc
jmp
sbb
idivb
or
mov
lahf
dec
jp
loop
ror
add
cs
in
repnz
dec
mov
xor
mov
sub
mov
mov
ret
sahf
jnp
stc
push
inc
aad
push
and
ret
sbbb
and
and
push
lods
cmp
mov
jnp
or
fistps
lahf
mov
cmp
lock
push
repnz
cli
mov
scas
pop
jne
push
pop
inc
jmp
inc
adc
cmp
dec
insb
add
dec
push
nop
dec
ds
adc
mov
in
je
jo,pt
cld
orb
and
fcmovne
or
in
out
jl
and
int
out
ret
mov
js
jge
mov
daa
in
scas
xor
xchg
inc
mov
mov
and
cli
mov
sbb
enter
or
xchg
mov
add
jae
dec
into
pop
sub
movsl
mov
jg
fwait
mov
xlat
xor
loopne
inc
movsb
fmul
ds
imul
adc
or
imulb
cmp
adc
lcall
dec
add
movsb
sbb
aas
es
roll
xchg
sti
es
mov
cli
aam
add
mov
aaa
sub
imul
das
bound
out
movsb
or
in
into
call
ljmp
int3
cmp
insl
add
add
nop
ret
inc
sub
inc
push
popf
aas
icebp
cli
in
cli
jge
or
scas
bswap
xor
inc
mov
push
add
icebp
jnp
and
loopne
pop
push
cmp
and
aam
or
aam
inc
xchg
xchg
push
dec
imul
dec
insl
js
sub
sbbb
inc
and
jecxz
fmulp
ffree
sbbb
clc
xchg
xchg
lret
mov
push
mov
xor
and
push
jo
sub
addr16
mov
aad
arpl
fucomi
insb
and
out
push
pop
sbb
out
lds
fistpll
inc
lahf
mov
xor
int3
in
mov
dec
xchg
adc
mov
movsl
jp
std
femms
stc
push
mov
adc
pop
jb
add
add
mov
and
jns
push
xor
xchg
aam
hlt
aaa
sbb
adc
out
push
xchg
ljmp
mov
arpl
dec
shlb
sahf
push
adc
fbstp
sbb
arpl
jmp
mov
popf
pop
dec
ja
mov
pop
aad
jbe
aam
pop
inc
xor
outsb
fmuls
notl
dec
xchg
call
and
adc
xchg
lds
xor
push
scas
gs
js
jno
pop
xor
mov
cmpsb
movsl
pop
push
xor
ret
xlat
push
and
inc
cmp
int3
ficomps
push
jnp
pop
add
imull
mov
dec
or
addr16
xor
leave
sub
adc
ja
adc
xchg
push
dec
mov
xchg
popl
dec
out
push
lret
popa
xor
jg
jg
mov
sahf
adc
and
adc
int3
cli
lcall
aas
icebp
xlat
mov
pop
pop
data16
sbb
xor
mov
jbe
inc
jp
xor
into
movsl
dec
jne
ret
push
cmpsb
pop
adc
pop
mov
mov
dec
cmpsl
in
repnz
aas
inc
jo
xchg
lahf
aad
jmp
push
nop
push
int
jbe
scas
add
imul
fwait
in
jp
or
mov
add
pop
sub
popf
jnp
and
mov
xor
enter
loope
les
sbb
inc
mov
sarb
loope
pop
adc
jne
and
fdivs
fmull
lods
xor
add
daa
xlat
pop
cld
shlb
dec
sti
sub
sti
test
inc
addr16
mov
in
push
dec
lret
aad
ljmp
imul
ds
mov
out
adc
inc
sub
orl
leave
xor
xchg
and
stc
mov
sarb
mov
outsl
repnz
daa
jb
out
mov
fisubrl
adc
xchg
add
cltd
jb
insb
inc
jae
das
ja
mov
xchg
lock
out
cmp
clc
adc
in
mov
mov
add
rol
mov
add
add
inc
enter
cld
sub
dec
mov
in
push
es
mov
test
inc
mov
push
sub
sbb
es
sub
sub
pop
pop
repnz
fiaddl
fisttps
rcll
out
xchg
les
in
xor
xor
push
xor
cmp
cmpsl
and
pop
and
jmp
icebp
dec
shlb
push
jne
loope
aaa
add
aad
fdivl
movl
jb
ja
jns
test
js
fscale
addr16
or
mov
mov
int3
int
push
fidivl
sbb
loope
xor
nop
dec
pop
or
pop
dec
sub
pop
cmpsl
outsb
push
mov
mov
cmp
push
adc
inc
or
ret
enter
stos
addl
ret
in
movsl
lock
inc
loopne
cmp
mov
mov
out
pushf
add
xor
jecxz
sbb
mov
lahf
push
stc
out
mov
mov
notb
or
in
and
mov
mov
push
insb
push
push
ss
stc
pop
xor
movl
bound
sub
dec
and
je
clc
test
sbb
pop
inc
stc
loopne
lcall
js
cld
imul
mov
inc
pop
js
and
jecxz
push
xor
mov
mov
xor
js
mov
jbe
scas
jno
mov
jmp
outsb
fmull
and
fisttpl
lds
cmp
and
or
fisubrs
push
inc
push
and
cmpsb
cmp
xchg
movsb
sub
fs
outsb
repz
insb
fmull
push
mov
push
xlat
subl
xor
xchg
cmpsb
push
xchg
or
out
fs
mov
jbe
lea
xchg
rorb
cld
loope
xor
xchg
cmpsl
inc
push
cmp
add
aaa
pop
outsb
in
into
pop
test
pop
jb
or
sbb
decl
sbb
jl
iret
mov
roll
ret
into
xor
add
inc
addr16
shll
bound
cmp
je
xchg
xchg
test
fcoms
stos
sbbb
sub
cmc
call
jp
pusha
jge
lds
xchg
out
fidivs
popa
pop
adc
mov
frstor
and
into
in
jmp
mov
loope
arpl
sbb
aaa
push
lods
and
sub
mov
stos
icebp
insb
ja
pop
dec
jbe
or
add
inc
inc
mov
mov
out
test
out
mov
das
imul
vmovss
shll
mov
pushf
push
aas
stos
inc
push
pop
sub
in
push
pushl
push
in
into
rcrl
icebp
pushf
sbb
push
push
mov
or
pop
lods
movb
std
mov
outsl
inc
pusha
xor
push
pop
sub
xor
enter
mov
and
xor
and
jo
and
inc
push
mov
cmp
mov
ret
adc
mov
sub
mov
jp
sub
sbb
icebp
das
pop
and
xchg
movsb
push
sbb
mov
insl
scas
out
call
or
out
enter
test
stos
jle
jl
pop
mov
mov
xor
sbb
rolb
xor
jmp
ret
arpl
sbb
inc
push
jmp
lret
popa
inc
jecxz,pn
jge
lahf
mov
outsb
fcoml
iret
sbbb
adc
outsl
shrd
mov
or
dec
pop
ss
aad
dec
adc
mov
ret
push
in
inc
add
cli
pop
cmp
push
inc
inc
push
pop
and
out
and
call
out
rclb
mov
les
out
popf
push
jne
and
pop
in
pusha
loopne
jmp
int3
adc
xchg
inc
fidivrl
xchg
sahf
push
js
fcmove
repz
and
xchg
inc
ret
cmc
hlt
andl
data16
inc
push
cmp
loopne
sti
rcrb
jg
js
mov
mov
mov
ds
adc
pop
jg
in
aas
mov
xor
mov
stos
and
addl
push
dec
sbbb
sub
jge
xchg
sbb
test
lcall
rorl
ror
test
xabort
movsl
pop
sbb
jb
mov
leave
cli
adc
mov
fmulp
dec
pushf
cmpsb
jmp
les
add
xor
cltd
jle
dec
mov
clc
inc
stc
add
mov
sbb
mov
sbb
adc
push
sub
sbbl
les
mov
mov
cmp
cwtl
pop
mov
pop
test
lret
cmpsb
loopne
cmpl
dec
loop
xchg
out
jne
int
push
ficompl
fwait
and
push
push
jns
shrb
cli
mov
outsb
movsb
stos
adc
fmull
sti
movl
ficompl
dec
push
xor
push
and
filds
js
cmp
dec
pushf
mov
or
int
mov
pusha
stc
addr16
xor
mov
add
nop
or
push
jo
cmpsl
in
int
loope
ljmp
loope
dec
in
jns
sub
fs
aam
mov
cwtl
mov
enter
ret
dec
jg
addr16
mov
lret
push
mov
inc
fisubl
and
or
nop
cmp
or
cmp
adc
xchg
jecxz
push
mov
in
jecxz
jl
dec
fisttpll
out
aaa
outsl
xchg
dec
lret
shll
stos
aad
mov
mov
aaa
and
xor
movsb
and
xor
xchg
push
outsb
fwait
sahf
add
mov
das
jne
adc
push
loope
stos
mov
adc
pop
fucomi
pushf
lea
push
movsb
adc
fcomps
xchg
dec
jp
xchg
in
call
inc
pop
ds
dec
ret
movsb
imull
sahf
xor
in
sti
fdivs
movsb
mov
xor
stc
pop
rcll
ss
fcomip
mov
xchg
xor
push
adc
mov
fnsave
push
pop
test
dec
push
call
adc
dec
mov
jo
inc
jae
decb
movsb
pop
xor
add
pop
popf
pop
mov
sub
push
mov
mov
mov
out
xchg
scas
pop
jle
and
mov
lret
mov
xorb
shlb
fnstsw
repz
cmp
lahf
and
icebp
jecxz
sbb
repz
push
sub
loopne
xor
mov
jae
pop
test
lods
loope
rcll
sub
call
sbb
push
addr16
lgs
xchg
mov
mov
loopne
lods
iret
push
test
pusha
cs
enter
mov
aad
push
mov
mov
cmpsb
adcb
addr16
ret
pop
pop
mov
or
mov
dec
and
imul
jno
lods
mov
stos
jmp
leave
aad
jns
mov
repnz
add
xor
pop
scas
rolb
mov
jns
cmc
subl
pop
cmpsl
dec
push
pusha
aam
add
ja
cmp
sbb
jp
add
mov
lods
jb
mov
add
out
adc
aad
xchg
dec
mov
push
cltd
les
mov
filds
jnp
cmp
push
add
nop
xchg
sbb
xor
fwait
inc
out
jae
xbegin
jae
inc
or
cwtl
dec
lock
adc
ret
leave
cmp
js
out
sub
out
sub
mov
push
and
repz
loopne
jbe
cmc
xor
mov
jnp
dec
stc
and
ljmp
mov
sbb
or
scas
sbb
inc
fbstp
adc
mov
scas
rolb
lea
add
daa
push
out
lahf
insb
call
mov
je
repz
test
cld
or
pop
dec
and
jne
mov
repnz
push
adc
imul
mov
mov
scas
inc
jns
jbe
stos
out
pop
sbb
or
push
aaa
shlb
cwtl
push
test
jmp
loopne
xchg
pop
mov
andl
xchg
ret
out
shlb
les
es
dec
aas
aas
ja
push
mov
jb
cltd
cmpsb
clc
xor
dec
std
pop
jne
ret
cwtl
cld
dec
test
push
xchg
mov
fcompl
mov
sbb
inc
dec
mov
mov
pop
loope
std
xor
dec
mov
cmp
cli
mov
push
pop
push
lret
sbbl
xor
push
test
decl
dec
mov
call
xor
pop
psubq
in
sbb
fmul
mov
scas
jo
push
mov
in
add
popf
cmc
cwtl
and
sahf
int3
inc
and
fstpt
cmp
nop
push
fistl
lahf
pop
mov
push
in
fcomps
jno
sub
mov
subb
sbb
movsl
and
fidivrs
adc
scas
int
insb
mov
sbbl
out
imul
test
js
mov
cmp
stos
les
std
or
dec
cwtl
sub
pop
mov
or
sub
xorb
lcall
jecxz
add
sub
lahf
mov
jno
fstps
ljmp
lret
jnp
out
das
or
test
stos
inc
mov
iret
jge
outsb
sbb
bnd
mov
in
out
cmpsl
and
adc
loopne
mov
lret
subl
sub
das
jno
adc
mov
lods
jb
test
ja
jo
inc
adc
jmp
cld
outsb
add
jbe
add
jb
and
subb
cld
lods
cmc
movsl
xchg
mov
aad
outsl
addw
inc
lods
jp
in
loop
aas
mov
incl
imul
ljmp
mull
push
inc
lods
pop
lods
dec
nop
mov
repz
in
pop
cmc
jnp
push
lods
pmuludq
sub
ret
out
mov
je,pt
inc
pop
sahf
mov
inc
and
add
mov
xor
xlat
lods
push
out
xchg
shll
push
loopne
enter
xchg
fsts
jne
adc
aam
push
or
or
inc
cmp
cltd
outsl
push
xchg
and
push
xlat
sub
outsl
test
push
add
aas
and
pop
addr16
stos
lock
or
out
es
inc
shlb
mov
or
add
in
jmp
jge
mov
jne
jne
pop
or
mov
adc
inc
or
pop
jae
cltd
mov
movsb
aas
addr16
sub
inc
maxps
adc
cld
je
repz
dec
jecxz
jecxz
or
jae
push
test
repnz
call
xchg
lock
or
push
out
add
fists
or
cli
je
je
out
jnp
xor
lock
test
lds
mov
repnz
or
mov
adc
mov
sub
inc
inc
jbe
ss
mov
mov
lret
repz
outsl
xchg
inc
jne
xor
cli
rol
jle
fidivs
orb
lds
xlat
adc
mov
adcl
rclb
negb
ss
xchg
cmp
xor
imul
rolb
and
push
push
imul
popf
cmpsb
insl
ret
loope
test
addr16
xchg
dec
sahf
jnp
scas
xor
bound
cli
or
fnstenv
ja
pop
mov
xor
sbb
or
pop
dec
fcomps
clc
adc
testb
shr
push
xchg
lods
cmpsb
push
mov
lods
fcoml
cmp
and
jae
inc
mov
inc
stos
mov
sub
sbb
lods
xchg
jne
andb
pop
xorb
clc
pop
pop
sub
mov
sbb
fcomi
dec
mov
out
sbb
rolb
add
jae
xor
iret
push
iret
mov
into
imul
mov
je
xchg
adc
andb
dec
xor
pop
mov
sti
xchg
cmp
cli
dec
push
mov
jbe
repz
cmpsl
xchg
mov
clc
dec
mov
lret
cmp
fwait
incb
or
cmp
xor
push
pop
shll
push
inc
cltd
ds
rorb
inc
orb
inc
outsl
add
fisubrl
aam
mov
lret
scas
sti
push
popa
lock
push
call
cmpsb
insb
popf
ss
xchg
mov
cmc
cmp
adc
mov
aam
js
cmp
clc
mov
xor
imul
rclb
fisttpl
add
pop
fucompp
mov
and
adc
insl
popf
mov
pusha
mov
cmp
push
outsb
mov
add
idivl
and
dec
loop
sub
mov
mov
addb
pusha
jns
add
scas
push
xor
inc
movsb
mov
xchg
pushf
pop
pop
js
ja
pusha
daa
push
nop
outsb
test
add
inc
xchg
cmc
mov
xchg
push
add
cmp
xchg
xchg
cmpsl
scas
xor
mov
hlt
xchg
stos
nop
and
gs
stc
mov
xchg
bound
xchg
fidivl
cmp
push
inc
sarb
movsb
xlat
enter
loopne
cmc
jo
out
pop
mov
roll
lcall
pop
lods
mov
out
add
add
out
mov
bound
roll
xchg
pop
pop
mov
inc
add
ja
push
sub
dec
gs
adc
sub
pop
inc
jecxz
sub
repz
lods
iret
sbb
xor
pop
std
insb
aas
and
xchg
enter
fimuls
fstpl
or
cmp
out
dec
ljmp
sub
xor
scas
jmp
or
pop
repz
mov
sub
or
and
ljmp
push
jle
pop
push
rclb
push
xor
cmpsl
xchg
push
loopne
lods
mov
jecxz
mov
clc
pusha
sahf
pop
dec
in
sub
push
mov
pop
popf
fists
adc
pusha
pop
into
aam
cmc
ret
outsb
dec
aaa
inc
jge
hlt
fnstsw
mov
mov
lahf
jo
xchg
add
lods
push
jno
pop
ror
mov
cmp
cmp
jnp
into
into
adc
cwtl
lret
iret
xchg
sub
enter
cwtl
or
sub
insl
xor
popa
insl
jg
testl
aaa
mov
cmp
or
icebp
and
les
loop
mov
ret
and
int
xchg
in
pop
roll
imul
out
fisubl
inc
mov
hlt
sub
jl
mov
mov
repnz
outsb
popf
push
hlt
sub
lock
push
clc
xor
sbb
popf
repnz
xchg
jae
cmp
data16
mov
test
push
mov
xchg
cmp
mov
or
cmpsl
jne
mov
jle
xchg
inc
sub
pop
fmuls
lcall
pop
push
sbb
std
push
repnz
mov
scas
sub
pusha
lods
jg
xchg
jmp
adc
aad
mov
adc
cmp
mov
fwait
mov
movsb
sub
dec
aas
flds
fidivs
adc
adc
jmp
int3
fildll
and
movd
aas
arpl
jbe
scas
cmp
lock
sub
insl
imul
xchg
or
cmpl
ja
or
and
mov
pop
or
xor
push
ss
cmc
mov
lahf
dec
xchg
mov
xor
ficoml
outsb
or
dec
ja
sahf
add
jno
popf
popf
and
sub
insl
cmp
mov
mov
xchg
push
aam
in
lret
icebp
adc
adc
lret
hlt
dec
idivb
cs
out
mov
cmp
adc
fiadds
pop
mov
imul
xor
in
xor
iret
outsb
push
xchg
lcall
fst
int
popf
inc
aam
pop
and
es
push
imul
mov
faddl
jae
test
add
ret
adc
sbb
aad
jecxz
push
or
pop
jl
fstpt
or
lds
dec
adc
pop
xchg
sbb
or
stc
or
dec
cli
jno
call
xor
fdivrl
or
out
push
ja
fnstenv
out
xor
call
xchg
adc
jae
enter
and
div
pop
pop
cmp
test
lret
pop
lcall
dec
push
ja
aas
mov
es
jmp
push
push
and
adc
shl
lds
push
ss
popl
lret
lods
cli
adc
subl
push
sti
cmpsb
push
in
sbb
xor
or
ja
pusha
mov
adcl
or
aas
dec
shl
xchg
leave
xchg
sub
cwtl
mov
imul
sub
xor
insb
xchg
mov
push
mov
bound
lahf
cld
jmp
push
push
stos
add
dec
inc
es
roll
and
push
lock
inc
mov
mov
inc
popa
stos
movsl
xchg
es
xchg
lods
cltd
negl
mov
dec
add
mov
out
jge
pop
ret
or
dec
mov
mov
inc
mov
mov
cmp
jle
push
adc
push
cmp
test
sbb
fbld
dec
xchg
insl
xchg
push
test
xlat
pcmpgtb
int
xchg
cmpsl
insb
xor
pop
mov
adc
push
xchg
push
jbe
js
jnp
sbb
cmc
xchg
push
sub
and
imull
or
int3
movsb
mov
in
pop
pop
mov
jmp
fistpl
mov
cmp
arpl
inc
sbb
xchg
jns
jae
cmp
in
xchg
cwtl
loop
movsb
das
cmp
lds
cmpsb
push
insl
cmp
out
adc
fucomp
jae
push
incl
ret
cmp
dec
in
dec
cld
pop
cmp
pop
in
push
sbb
push
gs
shl
pushf
ja
nop
and
sbb
dec
int3
inc
hlt
pop
or
mov
mov
aaa
or
cwtl
jne
xchg
arpl
loopne
mov
sub
imul
scas
mov
xchg
jl
movsb
fs
lret
mov
fcoms
imul
les
pop
pushf
dec
or
jns
xor
xchg
pop
rcrb
fidivrs
lds
shll
pop
arpl
jo
jge
lea
inc
aad
pop
cltd
in
xchg
loopne
out
lcall
dec
into
or
add
rcrl
std
mov
hlt
int3
adc
lods
add
jns
and
shrl
xchg
cs
and
push
or
dec
inc
xchg
mov
and
mov
je
out
rorb
std
or
hlt
ljmp
sub
mov
cmp
ja
jbe
fnstenv
pop
ja
enter
nop
mov
adc
pop
add
shlb
testl
mov
pushf
xorb
pop
mov
jbe
dec
mov
test
jns
sarb
mov
mov
scas
sub
icebp
mov
cmp
cli
in
sub
sbb
insl
pop
mov
test
into
jmp
hlt
push
dec
dec
sti
popa
push
data16
pop
popl
pop
add
call
mov
ret
ljmp
sbb
xor
testb
adc
and
mov
pop
aaa
imul
inc
loope
pop
mov
loope
mov
jo
mov
scas
xor
das
mov
xchg
mov
cmpsb
cmpsb
jbe
jecxz
sbb
mov
sbb
xor
out
xchg
adc
adc
mov
pop
bound
jae
ret
rcrl
iret
xchg
inc
cli
jae
jmp
adc
jmp
mov
outsb
imul
xchg
ret
jae
sahf
jg
pop
or
cmp
outsl
fimuls
iret
inc
xchg
call
ficompl
mov
in
inc
orb
mov
std
pop
mov
pushf
cmp
cmp
addr16
adc
inc
aam
ljmp
or
test
sahf
or
cltd
mov
push
dec
add
mov
mov
retw
mov
cld
mov
in
sbbl
mov
add
stc
fucom
xchg
xor
fbstp
xchg
push
insb
push
jle
mov
push
mov
stc
jg
testl
or
mov
imul
add
insb
push
gs
cs
scas
xlat
or
insl
int
push
mov
fisubrs
pop
jecxz
fwait
push
xor
ja
test
fbstp
or
in
mov
jecxz
or
xor
dec
daa
insl
mov
xchg
cmp
xlat
addr16
xchg
popa
xor
movsb
and
repnz
addl
lock
pop
std
sbb
rol
aam
into
testl
dec
std
js
mov
shll
pop
jo
out
movsb
repnz
jle
xchg
scas
cld
xchg
es
push
je
cld
dec
or
ret
lea
dec
scas
and
mov
mov
movsb
movsl
xchg
sbbb
and
ficoml
inc
sub
cwtl
out
add
and
loop
repz
call
mov
ja
fdivrl
pusha
inc
add
or
xchg
stos
add
out
sub
lcall
lods
daa
cmpsb
pusha
adc
xchg
shrl
sbb
pop
lods
pop
sbb
dec
jb
subb
dec
push
hlt
lods
add
add
mov
cmpsb
xchg
iret
icebp
xchg
movsb
lahf
iret
pop
pop
xchg
psubusb
call
adcb
outsl
int3
cmpsb
sub
mov
mov
inc
inc
ficomps
icebp
movsb
dec
sbb
imul
add
xchg
pushf
les
and
add
jnp
test
adc
test
mov
cmp
mov
cltd
sbb
pop
outsb
gs
xchg
sbb
or
call
enter
popa
mov
es
shrl
or
out
enter
push
out
imul
in
mov
sbb
push
outsl
fwait
mov
and
iret
mov
das
aad
ds
dec
and
add
shlb
mov
outsb
xor
jmp
lcall
call
jl
stc
cmc
cmpsl
sti
sub
mov
sub
jo
popf
sbb
mov
jnp
push
lcall
insb
mov
add
push
xor
pop
push
add
mov
push
scas
mov
mov
psraw
push
inc
inc
mov
xchg
adc
movsb
cmp
in
fdivrl
repnz
lret
clc
mov
mov
loop
int3
aad
mov
orl
dec
inc
or
fucomi
xlat
into
and
loop
arpl
mov
imul
lds
sbb
sub
test
xchg
mov
subl
cs
or
mov
testb
and
pop
or
mov
xlat
lret
and
sub
lret
mov
out
cld
sbb
push
pop
sbb
jbe
mov
call
movsl
jl
lret
pop
mov
cli
in
xchg
sub
in
loop
xchg
das
xchg
adc
sti
pop
inc
sub
jb
dec
cmp
jecxz
mov
test
leave
cltd
cmp
xor
pop
hlt
dec
and
sbb
sbb
inc
push
mov
inc
xchg
xor
sbb
ss
pop
push
insl
test
lret
mov
ljmp
push
imul
pop
sub
hlt
mov
into
fwait
insl
pop
mov
cmp
xor
mov
fistpl
push
sub
push
sbb
push
add
push
mov
pop
adc
or
push
imul
adc
rcll
sbb
push
dec
push
ss
and
mov
dec
add
pop
ljmp
in
cltd
sbb
mov
gs
pop
je
lret
adc
cltd
pop
fstpt
lds
loopne
or
int
xor
incb
adc
mov
mov
in
cwtl
jb
sahf
popf
loope
cmp
push
mov
icebp
xor
cmp
jmp
push
xor
out
nop
adc
pop
cmc
add
fwait
adc
sbb
sbb
inc
mov
das
mov
ret
fbstp
jle
popl
stc
or
lcall
push
mov
enter
sbb
out
push
ret
pushf
jo
orb
jae
xor
je
nop
pop
inc
arpl
das
jg
mov
test
mov
lds
cmp
cli
inc
add
adc
fwait
ljmp
adc
inc
scas
out
shlb
outsb
cli
nop
movsb
mov
jne
lret
into
das
int
push
sbbb
imul
mov
lods
scas
pusha
mov
lds
sub
arpl
mov
cltd
dec
sbb
pop
inc
jle
orb
xchg
test
pushf
neg
aas
pop
out
jnp
daa
aad
add
out
xchg
movsb
mov
pop
jmp
je
sbb
cmp
and
mov
mov
stos
mov
stos
push
jno
xor
pushf
or
or
mov
mov
aaa
mov
jnp
pop
stos
in
dec
clc
xor
fcomps
inc
add
call
mov
cld
fmuls
dec
mov
es
mov
jbe
sub
adc
sub
adc
pop
push
xor
ret
push
or
aad
push
pop
mov
popf
aaa
ja
movsl
shll
cmp
xor
sbb
pop
jb
adc
cld
xor
js
fmull
dec
pop
aad
and
aad
out
aaa
pusha
mov
or
cmpb
mov
mov
sbb
push
ja
lahf
cmp
sbb
fwait
mov
pop
in
inc
jo
or
insl
pop
mov
sbb
push
add
rcll
mov
ret
in
push
xor
push
mov
push
mov
outsb
inc
lahf
sar
fbld
call
pop
mov
cmp
adc
xchg
test
sti
call
in
or
add
fistpl
mov
pop
leave
dec
mov
mov
jg
repnz
pushf
mov
fwait
pop
jecxz
mov
or
es
lret
xchg
lret
cmp
push
fwait
aam
int3
iret
adc
push
jno
mov
dec
mov
jle
sbb
enter
pop
fwait
and
mov
call
popf
xor
sbb
insb
movsb
imul
cld
fnstenv
dec
inc
xor
cmp
test
insb
jge
popa
test
mov
out
xchg
int
mov
dec
ficomps
nop
pop
lcall
pop
scas
push
addr16
adc
jp
mov
in
push
aam
or
loop
iret
cltd
je
mov
icebp
es
cs
call
fbstp
dec
leavew
mov
out
and
imul
or
sub
faddl
jmp
cs
stc
and
pop
lods
inc
int
lock
push
leave
cmpsl
out
push
dec
orl
mov
aad
adc
repnz
mov
loop
loop
pop
jb
in
mov
fnstsw
out
sub
dec
jb
test
ret
sbb
adc
mov
cmp
test
outsb
pop
jl
std
bsf
aad
inc
dec
sbb
xor
jns
pop
jg
cmp
ja
xchg
test
cld
scas
xchg
pushf
cmp
loopne
mov
sbb
pop
and
clc
mov
cmpsb
dec
jle
adc
imul
mov
mov
movsl
cs
das
mov
call
or
push
xor
in
aaa
push
mov
roll
push
jno
mov
decl
movsl
out
sub
idiv
adc
and
insb
cwtl
pop
push
dec
out
jmp
add
mov
xlat
mov
pop
test
repz
outsl
ud0
mov
jmp
insb
add
fbld
mov
jns
jmp
adc
rolb
orl
add
push
std
mov
inc
stos
mov
ret
jecxz
insb
dec
and
ret
lcall
pop
bound
fcmove
aas
and
add
stc
outsb
aas
xchg
or
ret
or
idivl
mov
sar
push
out
sahf
xchg
mov
aad
stc
mov
inc
mov
aaa
xchg
pop
pop
shlb
lds
fstpt
sub
loope
mov
jmp
loop
out
add
jb
mov
aas
nop
movsl
sub
xor
inc
push
test
inc
popa
jmp
test
push
or
sbb
dec
xchg
aaa
pop
sub
sub
ret
push
movsl
inc
fs
in
into
adcl
dec
scas
nop
inc
cmp
pop
mov
icebp
mov
scas
push
jmp
in
repz
test
imul
movsb
in
jmp
out
movzwl
sbb
fstpl
mov
insl
push
add
push
leave
in
fnsave
or
pop
pop
push
mov
mov
add
ja
and
mov
or
or
push
sub
int
pop
outsl
pusha
mov
mov
mov
sub
xlat
sti
outsb
adc
mov
push
ss
fidivs
adc
and
jae
jmp
dec
sbb
sub
in
xor
pushf
xchg
and
jno
in
stos
in
in
add
or
or
adc
pop
insb
mov
sti
push
inc
jo
jnp
movsb
jne
test
in
fbstp
pop
and
aas
test
jge
neg
in
les
push
aad
mov
push
mov
lods
je
out
cmp
xchg
jno
std
rolb
add
jns
and
mov
bound
and
mov
fisubrs
sti
aad
push
sbb
nop
pop
mov
test
dec
pop
push
cwtl
sahf
pop
inc
mov
adc
icebp
popf
push
icebp
arpl
mulb
cmpsb
add
loop
sbb
je
mov
pop
lret
stos
rcl
add
or
mov
inc
jo
mov
mov
js
and
mov
addr16
or
cli
cmpb
push
dec
adc
ret
mov
mov
jae
test
loope
mov
jb
jns
pop
adc
mov
and
lcall
push
sbb
xchg
ficomps
fldcw
pop
ret
loopne
mov
xorl
sbb
cmp
or
lods
imul
dec
mov
mov
call
jns
test
sub
stos
push
repnz
add
addr16
jb
mov
shll
cmc
mov
jne
dec
iret
mov
cmp
aaa
jle
loope
or
out
mov
jecxz
pop
mov
mov
test
pop
lds
mov
jns
xchg
jp
dec
cmp
lock
lret
push
push
sbb
movsb
nop
dec
sbb
add
repz
xchg
xchg
jg
mov
sub
icebp
mov
nop
sub
jg
lods
xchg
and
xchg
into
dec
xor
pop
insl
maskmovq
testl
jmp
clc
lea
xchg
mov
ret
aas
test
cmp
mov
sbb
xchg
shll
enter
fscale
or
cmp
cmc
pop
xchg
xchg
add
aam
xchg
cmc
cmp
jp
nop
stc
mov
cs
sub
mov
ja
cmp
sbb
nop
mov
pop
and
mov
dec
rorl
and
mov
lahf
call
movsb
mov
xor
mov
ljmp
setno
neg
mov
loopne
ret
mov
lods
cmp
push
mov
sbb
mull
nop
push
inc
add
or
test
lods
adc
push
sub
shll
push
enter
sub
call
sbb
lcall
push
mov
imul
xchg
jmp
and
fisubl
pop
sub
popa
addl
or
in
lea
loop
test
cmp
addr16
pop
dec
xchg
in
adc
mov
int3
outsl
stos
loope
mov
or
adc
dec
jmp
and
xchg
jge
dec
cli
lds
xchg
sub
dec
icebp
syscall
mulb
outsl
and
pop
cmp
pop
sbb
fnstcw
ljmp
pop
cmp
icebp
push
jmp
push
es
loope
movsl
adc
clc
testl
lea
dec
or
mov
push
pop
out
loop
mov
sub
cmpsb
imul
cs
inc
adc
ja
in
arpl
or
sub
cmp
or
bnd
pop
dec
aaa
cmpsl
leave
jp
es
dec
rorb
out
popf
cltd
push
jg
fstps
add
outsl
popa
sub
xlat
js
fwait
test
fists
into
imul
push
ljmp
cmc
ljmp
fcom
icebp
call
push
mov
loope
imulb
sbb
mov
add
add
adc
inc
sbb
cltd
and
int3
cmc
xchg
push
shl
nop
pop
push
sub
out
andb
and
fwait
sub
xor
les
iret
dec
mov
test
test
sub
xchg
push
out
gs
mov
adc
clc
sbb
cmc
insl
jmp
aaa
adc
ljmp
in
push
mov
stc
jnp
fs
mov
jmp
shlb
xchg
popf
inc
mull
cmp
test
int
mov
mov
cwtl
fcompl
enter
inc
out
ret
movsb
xchg
mov
xchg
adc
pushf
mov
fdivr
mov
in
lock
add
fistpll
inc
sub
sbb
jbe
inc
xor
inc
mov
ljmp
enter
push
xchg
and
xlat
outsb
popl
inc
pop
sbb
iret
and
push
sub
subb
xchg
add
leave
cmp
xchg
stos
sahf
fildll
cmp
stc
fcomps
adc
popa
hlt
fmuls
jae
and
push
cmpsb
sbb
fdivrs
push
sub
sbb
clc
int3
ficoml
xchg
dec
int3
or
and
popf
movsb
inc
shl
and
mov
arpl
jp
adc
aad
and
jns
push
dec
pop
rorb
pop
mov
mov
cmp
inc
dec
pop
adc
add
adc
sbbl
jg
subl
xchg
dec
sbb
push
mov
das
out
pop
adc
rcrb
movsb
or
xlat
ja
ss
sbb
inc
mov
mov
es
cmp
pop
popf
cwtl
cld
xor
xor
stos
push
pop
or
sbb
xor
xchg
sbb
fistpl
adc
cmp
ds
sub
cs
fistps
or
mov
add
push
leave
jg
lods
outsl
jno
dec
lea
xchg
sbb
pop
mov
lret
daa
dec
leave
mov
mov
adc
sub
pop
mov
fadds
mov
sti
daa
adc
sub
shlb
sbb
adc
dec
inc
addb
pop
int3
movsl
inc
lods
and
dec
mov
inc
mov
sahf
xchg
sbb
or
cltd
sub
daa
push
add
jo
cmp
sar
adc
mov
sub
iret
mov
inc
mov
dec
arpl
out
outsb
sti
rolb
test
test
idivb
loope
mov
pushaw
pop
das
icebp
mov
xor
pop
shl
mov
sahf
adc
cli
sti
movsl
fsubl
mov
mov
jns
add
mov
mov
cmpsl
inc
test
cmp
iret
mov
ljmp
and
decb
mov
xchg
push
mov
pop
push
pop
cli
inc
xor
int3
mov
add
xor
in
lods
enter
subl
dec
xchg
mulb
in
out
jecxz
and
push
les
icebp
adcb
jns
dec
xchg
xor
push
mov
dec
and
leave
dec
mov
jbe
scas
cmpsb
sbb
xor
movsl
jb
fists
lret
push
sbb
es
lret
dec
xor
dec
in
adc
int3
mov
loopne
lret
je
xor
clc
imul
pop
push
ds
lock
adc
xchg
scas
subl
adc
xor
mov
icebp
xlat
adc
out
hlt
divl
pop
arpl
jb
push
xor
fdiv
repz
mov
add
sub
lea
xchg
inc
lcall
in
stos
inc
jmp
in
or
imul
cmc
or
or
repnz
call
xchg
pop
test
aaa
cmp
hlt
stos
push
inc
adc
push
add
mov
jno
jb
fldt
adc
xor
xchg
jo
fs
lods
loopne
and
pop
push
sarl
mov
adc
mov
cmp
or
sbb
icebp
mov
pop
mov
and
aas
adc
xchg
mov
mov
jg
shll
test
add
jge
jnp
xorl
or
in
cwtl
xchg
out
pop
cmp
pushf
icebp
sub
mov
lods
add
jg
fistpll
ljmp
mov
out
in
xor
insl
sbb
shlb
inc
insb
repz
add
xorb
andl
jo
sub
xchg
sbb
sub
shrl
aam
jp
int
test
mov
mov
mov
out
inc
lahf
mov
test
jle
cmp
mov
notl
outsl
adc
mov
push
add
or
out
push
int3
xor
and
push
push
aam
sbb
lret
push
xor
ret
nop
mov
sbb
or
das
dec
insb
add
pop
push
cmp
shll
imul
jb
lret
enter
fcomp
outsb
lahf
or
lret
outsb
push
notb
mov
gs
xchg
mov
popa
push
xlat
subb
shl
xchg
aam
lods
adc
xor
xchg
test
xor
mov
mov
test
or
insb
outsl
inc
mov
pop
inc
testl
xchg
in
pop
mov
push
popf
sbb
xchg
movsb
scas
xor
aas
in
cs
and
xor
cmp
push
xchg
lret
and
aaa
sub
dec
sti
mov
sub
test
and
jmp
jnp
lods
lock
jmp
mov
daa
icebp
dec
test
pop
sbb
dec
cli
outsb
jns
xchg
leave
repz
mov
and
xchg
inc
outsb
ss
sub
or
cmp
pop
inc
cmpsl
jl
loop
push
loope
shll
fdivl
or
push
add
or
pushw
push
loop
and
loopne
adcl
aam
xlat
xchg
and
sub
lods
lcall
mov
pop
hlt
pop
insb
cwtl
or
fstpt
and
jns
pop
int
sub
lods
dec
dec
js
test
sub
jge
push
nop
adc
push
jae
mov
insl
or
add
js
adc
mov
jae
test
enter
jge
mov
filds
loopne
push
push
ret
cli
cmp
pop
js
insb
ret
or
cmp
sub
addr16
das
xchg
dec
xor
mov
cmpsl
or
mov
xchg
iret
ds
xor
jl
mov
cmpsb
cmp
xorl
mov
scas
mulb
sbb
or
and
in
int3
push
mov
cld
mov
inc
mov
arpl
xor
mov
stc
xchg
shlb
in
sub
cmpsb
dec
mov
and
mov
adc
into
les
pop
xchg
ss
or
jg
adc
or
cli
xchg
aaa
mov
outsb
fidivrs
repnz
add
loope
and
xor
dec
in
sub
testl
mov
mov
or
pop
inc
jp
loope
adc
ret
mov
push
mov
and
jno
les
or
jae
and
lods
sbb
int
cmc
cmp
cmp
mov
jns
sub
cltd
mov
or
cmp
aas
stc
xchg
inc
js
dec
add
mov
adc
insb
sbb
mov
stos
std
mov
nop
insl
addb
jb
sahf
clc
out
push
sub
pop
jecxz
mov
cs
clc
ficomps
bound
fisubl
dec
push
in
daa
push
testl
outsb
shlb
mov
outsb
int3
push
ret
add
mov
enter
xchg
jnp
fprem1
xchg
jmp
add
or
cmp
faddl
dec
adc
psrlq
mov
mov
arpl
cmpsl
pop
sbb
or
sub
adc
cmp
adc
lock
je
int
inc
mov
inc
or
cmpsb
xlat
mov
sub
jb
jo
jmp
add
cmc
xchg
xchg
adc
or
pop
xchg
dec
mov
hlt
mov
sbb
jmp
sbb
ss
or
shrl
popa
cmpsl
push
inc
faddl
jnp
add
popl
and
sbb
jl
mov
jmp
add
fstl
or
xlat
sub
dec
hlt
jb
arpl
pop
jmp
mov
dec
push
in
jp
lret
mov
cmp
bound
jecxz
and
icebp
loop
sub
cmpsb
mov
xchg
push
sub
xchg
stos
aas
enter
dec
mov
ror
jns
fwait
and
sub
loop
mov
inc
dec
cmp
jle
sub
scas
ja
push
aas
sarb
enter
mov
lret
adc
dec
pop
popf
insb
push
xor
add
mov
cmc
outsb
push
add
jle
jge
bound
dec
add
fisubs
mov
je
push
push
andw
hlt
xchg
xchg
bound
les
mov
aaa
lods
stos
mov
in
mov
jne
pop
popf
inc
sbb
push
dec
jnp
mov
inc
dec
call
in
fadd
bnd
sub
sbb
cmp
mov
aas
fstpl
subl
clc
and
mov
mov
push
rcr
notl
jo
outsb
imul
icebp
scas
mov
add
ds
jmp
and
sub
mov
pop
shrl
dec
pushf
pop
cmp
inc
inc
scas
push
jl
mov
fistps
xor
enter
mov
mov
out
ret
mov
imulb
mov
neg
shll
fldcw
aam
test
and
or
fs
test
jp
notl
lret
sahf
mov
hlt
add
mulb
in
cmpsl
xor
aad
test
fldcw
push
inc
and
test
rcr
imul
iret
test
sbb
xchg
scas
arpl
jb
roll
inc
mov
and
out
int
push
sub
jge
in
jecxz
fisubrl
imul
lock
mov
push
mov
pop
xchg
loopne
push
mov
pop
push
push
cld
push
rcrl
inc
xor
or
enter
movd
xor
add
gs
icebp
aas
add
das
stos
je
rorb
cmp
sbb
lret
sahf
xor
jns
xor
mov
cwtl
fists
fisttpll
nop
popa
mov
push
loope
je
mov
out
mov
push
or
jae
add
std
mov
pop
cmp
cmp
mov
mov
push
xchg
test
lcall
push
lret
into
pop
adc
jb
xor
pop
outsb
das
sub
loop
pop
fidivs
cmp
mov
pop
add
jp
sbb
gs
adc
pop
aaa
push
pop
cltd
add
push
push
cmp
hlt
stos
addr16
rcl
adc
shrl
aam
pop
pop
insl
xor
mov
push
inc
jnp
lahf
sbb
popa
or
cmpsl
sub
jl
icebp
inc
lock
xchg
faddl
in
add
mov
lcall
xchg
xor
fwait
push
outsb
loopne
adc
sbb
xchg
imulb
mov
addb
popaw
dec
cmp
mov
and
call
adc
nop
sbb
decl
mov
mov
pop
rcrl
mov
cli
shll
push
jecxz
lock
sbb
xor
sub
and
fisubs
push
pop
xor
xlat
dec
mov
xadd
xlat
jp
sub
add
in
lds
inc
fwait
xchg
das
stc
or
adc
dec
pushf
sub
sti
outsl
orl
sti
and
std
push
repnz
aad
pop
or
std
outsb
sbb
ret
cmpsb
jp
mov
pop
mov
xor
jae
dec
inc
sub
lea
jns
pop
les
imul
scas
sbb
sti
into
sbb
or
mov
mov
add
sub
insb
std
iret
fisubrl
pop
push
xchg
cmp
add
add
sub
addr16
dec
or
fbstp
aas
adc
scas
lret
nop
popa
lcall
mov
xor
dec
jb
and
insb
pop
jmp
rclb
xchg
mov
lods
jbe
and
xchg
push
or
cmp
adc
mov
imul
faddl
mov
sar
hlt
add
dec
mov
adc
push
jmp
fisubrl
out
mov
adc
mov
daa
cmpl
and
mov
cmp
fnsave
out
and
mov
bound
sbb
sbb
dec
outsl
xor
repnz
push
mov
dec
mov
pusha
mov
push
into
sub
loopne
imul
mov
dec
out
cs
sbb
fdivrs
loop
dec
mov
ljmp
int
int3
rcrw
inc
stos
xor
mov
cmp
add
mov
psubusb
ja
stc
push
sti
add
lret
jnp
sbb
pop
cmc
lods
or
jns
jbe
xchg
jnp
xor
and
cmpsb
in
mov
cmc
pop
outsb
pop
cmp
hlt
es
mov
aaa
push
dec
in
sub
mov
lods
dec
into
sbb
lods
xor
mov
testb
jmp
push
push
jo
add
iret
inc
scas
mov
jp
test
push
cmpb
mov
lahf
fimuls
lcall
push
cwtl
add
rol
lcallw
popf
jmp
push
mov
into
sbb
test
mov
lcall
cmp
repnz
test
pop
aas
cmp
loop
adc
sub
mov
mov
jge
in
out
dec
pop
loop
lods
inc
mov
sub
pusha
xor
nop
testl
lcall
fdivrp
and
inc
shrb
and
data16
std
repnz
stc
adcl
inc
imull
stos
out
jmp
adc
sub
or
xor
ficoml
xchg
add
jae
xchg
movsb
push
adc
sbb
jbe
xchg
in
cmp
movsb
iret
shrb
sub
jne
cmp
sar
push
loope
fld
cmc
xchg
mov
mov
aam
mov
imul
out
shll
jmp
imul
jb
sbb
dec
adc
sbb
test
xchg
loope
sahf
sub
insl
out
mov
inc
xor
adc
jo
in
ret
pushf
int3
test
bound
mov
daa
mov
mov
mov
enter
arpl
fmul
add
adc
bound
notl
mov
jecxz
movsl
sub
imul
mov
mov
mov
mov
pop
enter
xchg
push
imul
popf
sub
nop
test
je
imul
dec
pop
addr16
je
xchg
pop
or
scas
lahf
in
xchg
pop
andb
mov
xchg
jbe
or
ss
mov
push
cmpsl
rcr
and
mov
outsl
gs
rol
mov
cmp
and
jl
mov
jae
xchg
aaa
ss
ffree
stc
dec
loope
push
loope
mov
cmpsb
mov
aas
mov
xor
push
mov
pop
or
adc
cmp
jp
add
cwtl
lcall
mov
jmp
cwtl
inc
xor
dec
cmp
and
stc
jge
cmp
or
out
stc
daa
adc
xchg
mov
clc
jp
in
shll
int3
repz
xorl
cwtl
cmp
xchg
dec
shlb
stos
ret
fistpl
jp
mov
loope
xchg
ds
jbe
mov
jo
movsl
fdiv
test
es
cld
iret
lret
sti
lock
inc
cmp
add
push
scas
push
pop
enter
in
scas
mov
sbb
add
and
jl
sub
movsl
int3
and
mov
dec
sub
mov
aaa
inc
ds
movsb
cmc
mov
adc
icebp
rorl
aas
jb
sbb
pusha
iret
push
dec
pusha
inc
adc
pop
sub
jns
into
mov
jmp
mov
inc
mov
pop
xchg
ret
out
popa
xchg
dec
jecxz
pop
or
push
ds
test
adc
cmpb
unpcklps
xorl
aaa
repz
xor
push
and
fsubs
jbe
stos
sbb
testb
mov
inc
dec
xchg
cmp
insb
mov
cli
outsb
outsl
mov
adc
pop
or
add
popa
or
xchg
xor
or
shlb
scas
mov
out
aaa
fistl
fmuls
add
loopne
mov
jl
in
jo
or
add
sbb
fsubrs
fcmovne
pushf
rclb
or
push
imul
out
rclb
fs
xor
js
ljmp
add
mov
call
mov
xor
stc
xchg
dec
adc
movsl
test
pusha
shlb
xchg
popf
neg
fdivl
mov
dec
mov
cmc
lret
pop
push
inc
jne
popf
adc
loop
stos
andl
cmp
stc
jae
ja
outsl
rorb
loope
mov
cmp
fsub
popl
inc
fnop
and
lods
push
mov
test
das
movsb
out
cmc
jl
mov
inc
fdivp
out
mov
sahf
les
es
enter
mov
shrb
xchg
xor
sti
fisubs
sbb
mov
rep
mov
nop
lcall
push
das
gs
int3
mov
adc
in
fldl
ja
arpl
lock
pop
mov
fwait
gs
pop
cwtl
add
imul
rolb
les
mov
jnp
mov
add
dec
cmp
lret
cmpsb
fs
int3
ret
mov
mov
addr16
cltd
inc
mov
mov
jns
int
add
paddb
mov
inc
jns
in
test
fimuls
das
push
stos
adc
mov
stc
xchg
xor
dec
inc
jecxz
rorl
mov
dec
jl
pop
cmp
mov
cs
in
imul
cltd
ds
loop
lods
inc
stos
js
push
ret
pop
and
mov
popa
cmp
bound
repnz
xchg
clc
stc
fisubs
stos
sbb
stos
add
mov
cmp
ja
data16
and
sub
cmpsb
mov
out
xor
push
mov
test
movsb
fwait
sub
ret
leave
imul
add
stos
and
nop
pop
push
inc
out
movsl
sbb
sub
mov
ja
xchg
mov
not
in
lods
lds
es
iret
inc
adc
fisttpl
sub
leave
das
sub
or
pop
add
mov
xchg
fs
rclb
jno
shrl
pop
aad
push
sahf
subl
clc
in
jns
xor
loope,pn
fcmovbe
sub
sbb
fcomp
movsb
test
fsubs
enter
and
dec
test
mov
or
imul
shlb
push
iret
cmc
add
xchg
shll
aas
pushf
idiv
rclb
bound
mov
or
outsb
jb
add
inc
xchg
imul
insl
add
repz
adc
mov
xchg
cltd
inc
dec
ljmp
mov
insl
push
xchg
rol
adc
cltd
mov
sub
mov
leave
lcall
pusha
pop
pop
xchg
sub
jbe
aas
mov
or
popa
les
in
jp
xchg
or
dec
scas
or
gs
dec
leave
pushf
cwtl
cld
hlt
push
jmp
push
add
xchg
data16
sbb
bnd
jmp
add
mov
addl
mov
push
push
inc
fisubs
pop
out
and
paddq
test
popf
call
push
fsubl
popf
or
sbb
push
imull
cli
mov
or
pop
arpl
mov
push
outsl
mov
js
insb
adc
and
test
pop
and
jne
adc
mov
ds
dec
and
xlat
jnp
cmp
vpminub
adc
xor
loope
out
push
push
faddp
mov
sbb
push
scas
cmc
mov
shll
les
jb
mov
mov
adc
lret
jne
pop
pop
adc
in
dec
ds
pushf
pop
sub
aas
xor
cmp
fwait
mov
jle
fcmovne
and
add
and
in
jb
add
mov
dec
cmp
movsl
jg
cmp
xchg
pop
cmc
ret
popa
lret
repnz
xchg
ds
mov
jp
mov
fstps
push
repnz
jmp
mov
xchg
cmpl
inc
adc
xor
adc
ret
arpl
inc
in
inc
mov
shlb
push
push
xchg
das
shll
ja
mov
cwtl
frstor
adc
ficoml
or
mov
ret
addr16
or
fcoml
inc
stc
pop
aad
inc
mov
xor
sbb
lods
inc
sub
out
jle
mov
filds
dec
add
rorl
ljmp
cmpsb
add
and
rorb
inc
or
call
int3
cmp
mov
mov
out
out
jne
movsb
idivl
test
imul
inc
hlt
pushl
loop
test
pushf
je
cmpsl
sub
loope
mov
lods
popf
fcmovb
lock
cli
mov
sbb
inc
cltd
ficomps
popf
pop
adc
dec
aam
sbb
rcl
call
or
test
aam
add
push
sub
inc
xchg
leave
shrl
jb
imul
push
rcrb
add
adc
xchg
sarl
push
test
mov
mov
sarl
mov
inc
mov
aas
aaa
mov
jl
xchg
lret
mov
into
pop
sbb
adc
sbb
fmuls
dec
mov
rcrb
pop
in
mov
pop
and
jge
xrelease
jl
popf
shll
lock
push
out
pop
xchg
movsl
sub
inc
cmpsl
shl
add
mov
les
popa
cmc
mov
mov
jo
xor
cmp
cltd
lahf
xchg
pusha
pusha
fcompl
xchg
cli
lret
add
cltd
mov
mov
mov
test
aaa
jno
int
inc
inc
test
jl
or
pop
push
and
pop
mov
cmp
daa
sbb
jne
int3
push
or
jp
mov
fdivr
dec
sbb
and
mov
aaa
adc
or
test
push
xor
ret
adcb
das
idivb
add
pop
adc
jmp
xchg
andl
loope
jnp
dec
addb
jg
push
add
clc
lods
dec
jae
push
aaa
popf
bound
test
push
push
imul
sbbl
arpl
aad
mov
inc
push
shlb
jp
xor
xor
ss
es
dec
mov
mov
cwtl
push
icebp
popf
jg
cs
insb
int3
mov
inc
add
pusha
loop
jecxz
fsubrp
or
lods
sbb
dec
xchg
xor
es
sbb
icebp
xchg
roll
xor
call
xor
xor
cmp
add
cmp
or
call
and
xchg
xor
xor
sub
xchg
mov
or
int3
add
mov
and
push
ljmp
aaa
daa
or
pop
fimuls
sub
insb
or
ret
adc
in
das
sub
xor
mov
jmp
nop
sub
movsb
les
pop
int3
xchg
mov
addr16
test
insl
mov
pop
ljmp
dec
addb
das
lahf
mov
dec
insl
rcrb
ret
imul
inc
push
imul
in
add
shlb
outsb
out
sbb
xchg
bound
adc
ficompl
cmp
int3
xchg
xor
out
stc
jp
push
xor
sarl
cmp
js
popf
hlt
sbb
mov
xchg
mov
jnp
add
leave
or
lods
insb
stos
jmp
mov
inc
xchg
lock
add
outsl
es
cli
rolb
cmp
cli
ficomps
in
push
adc
xchg
js
scas
popf
les
mov
out
push
sub
jmp
sub
mov
xchg
inc
lret
sub
jae
jmp
xchg
cmp
in
mov
in
pushf
test
test
rorl
int
mov
and
out
jns
cmp
popf
xor
cmp
fsubl
lcall
aad
or
vsubsd
add
fidivrl
jg
push
fcompl
notb
insl
jb
xlat
lret
ficomps
xchg
mov
xor
int3
arpl
jmp
addr16
cs
aaa
lret
push
cltd
lods
ret
inc
jg
jecxz
pop
cmc
adc
push
sub
sub
stos
call
aad
sti
or
and
pop
fistpll
mov
pop
and
cmp
movsl
pop
dec
pop
xor
int3
dec
aad
cmp
fs
sahf
inc
xor
jne
and
iret
xor
xchg
push
mov
and
mov
mov
loope
xlat
mov
lds
pop
dec
lret
lret
and
shll
push
iret
push
pop
out
dec
cmp
mov
lock
enter
mov
jmp
dec
pop
jmp
scas
jnp
push
mov
jnp
mov
scas
pop
cmpl
jmp
sub
je
hlt
lods
pop
mov
sahf
out
pop
test
lret
add
outsb
jg
std
push
cmpsb
inc
ss
or
daa
pop
test
hlt
je
jmp
dec
stos
xchg
out
mov
fstpt
push
clc
sub
xlat
out
cmp
dec
sub
mov
out
imul
test
lahf
mov
sbb
cli
test
jmp
adc
push
or
pop
addr16
mov
push
bound
in
jb
cmp
mov
push
push
lds
lret
clc
inc
fwait
int3
sub
dec
adc
sub
cmp
popf
xchg
daa
fldcw
mov
les
cmp
xchg
inc
cmc
jno
leave
iret
push
js
xor
loope
xchg
push
xor
int
mov
mov
cmp
mov
lock
lea
daa
ja
or
ja
sub
sahf
jl
fiaddl
ss
mov
xchg
bnd
fwait
lods
and
popa
push
mov
ret
stos
dec
das
mov
cmp
cld
mov
jno
insl
xor
lahf
push
adc
inc
ljmp
jecxz
adc
or
lret
fistl
fidivrs
ret
les
sub
mov
ret
mov
dec
xchg
lret
xor
and
adc
jmp
scas
sbb
lcall
lret
jl
xchg
imul
mov
sbb
scas
push
push
out
scas
mov
add
loop
cmp
push
xor
cmpsl
mov
dec
and
push
pop
fs
test
arpl
and
pop
sti
and
inc
jmp
shlb
pop
pop
mov
std
inc
jne
aam
orl
int3
not
std
test
test
pop
outsb
add
ja
in
popa
lcall
pop
and
or
int3
jp
jae
mov
jae
push
mov
popa
sbb
xchg
nop
dec
or
xor
fistpll
scas
rorb
loopne
fmull
jle
repnz
mov
pop
add
or
popf
jae
fcoml
push
xchg
and
lahf
sar
movsb
pop
cmc
fwait
xchg
push
xchg
jae
fwait
call
add
and
mov
dec
cmp
mov
mov
ds
pop
sub
cmp
pop
ficoms
or
mov
mov
dec
mov
cmp
sbb
jle
ljmp
xchg
dec
inc
pop
mov
add
lea
fisubs
cmp
push
and
add
lahf
dec
aad
push
and
jg
adc
cs
add
aas
push
mov
dec
adc
push
push
and
push
ret
fdivs
cmc
pop
fstl
sti
movsb
pushf
gs
dec
xor
sub
stc
jge
sbb
lds
cs
jl
fwait
push
psubsb
or
jecxz
fnstenv
into
stc
mov
inc
mov
inc
xlat
xchg
mov
inc
sbb
add
mov
or
je,pn
cmpsb
insb
jp
adc
fmuls
call
fstl
scas
push
scas
pushf
mov
iret
addr16
arpl
jge
lock
or
lds
outsl
ret
imul
insl
fdivr
into
test
movsb
ja
add
sbb
xor
and
in
outsl
push
add
push
ror
inc
movl
addr16
je
faddl
ret
imul
addr16
pop
leave
icebp
es
add
fstpt
sbb
or
movb
js
lcall
cwtl
es
mov
shll
shll
cmp
fdivs
dec
enter
ds
fwait
xchg
leave
aam
inc
sub
stos
and
xchg
add
idivb
mov
gs
jnp
adc
pop
repnz
lret
push
inc
dec
rorl
cmp
or
pop
dec
pop
mov
sbb
jge
ret
xchg
jg
jge
cli
scas
xchg
jecxz
out
in
lahf
inc
fldcw
sub
test
mulb
push
idiv
inc
dec
xchg
add
fwait
lods
mov
mov
test
sbb
jmp
or
imul
sbb
popf
cmp
adc
push
inc
jo
dec
outsb
pop
mov
dec
mov
mov
clc
hlt
in
or
lret
dec
pop
inc
jns
dec
out
mov
sar
in
aam
fisttpl
shlw
lock
stc
lahf
aas
sbb
mov
xor
std
cmc
mov
mov
clc
xor
sahf
testb
mov
dec
scas
mov
in
and
outsb
insb
mov
fwait
test
sub
xlat
gs
stos
aam
fdivl
mov
xor
dec
dec
and
sub
popf
mov
cmc
pop
mulb
cmpsb
or
lds
or
jnp
scas
push
xchg
mov
bound
inc
mov
and
leave
inc
cmc
sbb
popa
cmp
arpl
test
sub
push
mov
out
orl
add
lret
xchg
int3
xchg
jmp
shll
adc
mov
or
push
es
scas
arpl
cmpsl
out
and
fidivl
inc
in
or
jne
cmpsl
mov
or
shrl
mov
xlat
adc
inc
pusha
jbe
mov
jp
push
inc
ds
inc
nop
sar
dec
loop
pop
push
outsb
jmp
sub
pop
stos
data16
test
icebp
cmp
sbb
ja
jmp
mov
add
mov
enter
sub
sti
jp
push
xor
mov
sbb
mov
mov
leave
mov
mov
je
gs
leave
push
inc
inc
pop
jmp
lods
jns
data16
fimuls
or
adc
sbb
push
push
cmpsl
jno
or
or
xchg
jnp
mov
aad
call
stos
sbb
fsub
ss
sti
out
mov
pop
cli
int
movsl
in
or
daa
cmp
adc
cmp
mov
test
jns
js
ds
inc
inc
jecxz
out
cmc
xor
push
jl
sbb
movsb
ja
leave
in
sbbl
shl
scas
dec
outsl
adc
test
or
sub
mov
mov
pop
fs
cmp
or
xchg
iret
or
push
lods
popf
mov
std
jne
lds
add
mov
dec
inc
ret
test
or
push
out
mov
push
xor
sarl
aaa
fwait
and
mov
enter
mov
fmull
movsl
scas
das
cmpsl
push
cli
mov
out
test
jge
cmp
notb
jo
mov
mov
insb
shlb
inc
aas
push
pop
insl
mov
mov
mov
fimull
data16
iret
sarb
adc
xor
das
cmpb
mov
sub
test
jge
mov
mov
mov
xor
sahf
in
xchg
cltd
sar
jl
dec
mov
fst
add
lds
sub
and
inc
fmul
je
push
lock
rcll
cmp
fbstp
jno
xor
js
enter
jle
subl
subl
dec
into
test
pop
fstpt
cmp
push
add
cmpsb
repz
sub
xchg
mov
pushf
add
out
or
lcall
add
push
shl
lret
lods
cmp
rorl
outsl
clc
jp
pop
jo
movsl
ss
mov
xorb
fwait
repnz
push
les
gs
shrb
out
inc
pop
dec
gs
mov
sbbb
push
lods
test
ret
xchg
movhps
xchg
or
push
xor
es
jl
adc
gs
dec
inc
sub
jo
int3
mov
mov
stos
stc
ja
insl
popa
pusha
sub
cwtl
inc
sbbb
inc
lods
jae
inc
dec
sti
test
sahf
rorb
push
or
std
jne
or
pop
add
pop
inc
xor
add
xchg
mov
adc
xchg
out
inc
pop
addr16
out
mov
test
mov
into
fcoml
dec
jae
fcoml
xchg
loopne
sub
mov
sub
sbb
iret
dec
cwtl
pop
add
xchg
and
cmp
mov
or
mov
lock
dec
sti
aas
jp
lea
and
and
es
rclb
rcrb
jnp
les
cs
sti
fstl
cli
arpl
sbb
test
or
pop
negb
fsubr
popa
shl
mov
or
stc
pushf
or
int
cmpsb
sbb
clc
shll
lret
xchg
sbb
push
xchg
xlat
adc
jnp
and
or
pop
fisttpll
dec
cmp
scas
rorb
in
mov
sbb
push
sbb
imul
stos
lcall
mov
movsb
jl
push
push
mov
or
and
push
mov
cmpb
je
add
mov
push
and
mov
aaa
aam
cli
mov
xchg
inc
xchg
cmp
std
dec
ret
ds
dec
mov
jbe
mov
or
mov
sbb
sarl
aaa
and
stc
sbb
shrl
fdivl
aaa
and
jg
xor
pop
jne
xchg
test
add
test
xchg
jl
jne
sbb
icebp
dec
pop
pop
and
fcoms
loop
xor
out
pop
js
pop
jo
popf
loopne
adc
loope
xchg
xchg
mov
testl
je
mov
push
fwait
in
mov
cmp
jmp
clc
mov
push
cli
in
ja
lea
movsb
or
dec
jae
fwait
pop
add
mov
inc
outsl
pop
stos
sbb
leave
inc
dec
or
sub
add
aam
sahf
cmp
and
push
dec
lods
andl
jae
clc
sbb
xchg
ds
mov
mov
mov
test
movsb
sub
mov
pop
cltd
fisttps
aas
daa
or
scas
sahf
xor
daa
fisubrs
add
mov
test
mov
sub
ror
loope
cmp
mov
in
in
push
or
popf
ror
jns
push
shrl
enter
lahf
dec
iret
xor
test
jge
xchg
sub
ss
xchg
push
data16
ret
stos
inc
int3
les
push
sub
xor
cmp
jno
push
movsb
in
hlt
aaa
jbe
je
imul
xlat
push
jnp
lods
pop
push
pop
and
into
fwait
ja
insb
mov
in
adc
xor
shrl
inc
xchg
cltd
inc
push
adc
cmp
jg
std
in
clc
xor
sub
pop
and
add
scas
push
sub
out
adc
mov
mov
inc
jg
jnp
imul
cmp
inc
sub
mov
test
mov
xchg
je
xor
inc
ss
outsl
cmc
adc
dec
adc
pop
das
xor
jns
sbb
adc
mov
mov
xchg
mov
shr
mov
subl
add
mov
rcrl
dec
pop
cmpsl
cmpsl
imul
push
scas
icebp
xchg
aaa
and
add
notl
sbb
lea
rclb
mov
pop
out
sahf
xor
test
and
inc
ss
push
outsb
call
js
lcall
sbb
xchg
mov
pop
mov
sub
es
and
cmpsl
jno
xchg
arpl
adc
inc
ljmp
pop
pop
jle
and
cwtl
mov
mov
data16
mov
fstl
pop
pop
icebp
cmpsb
pop
dec
pop
mov
dec
mov
roll
aam
test
fcompp
sarl
push
stc
push
cmp
hlt
xchg
cmp
mov
lahf
add
mov
xlat
mov
dec
inc
scas
clc
test
aaa
mov
out
cmp
insb
in
test
mov
jno
jno
test
test
push
test
and
mov
je
mov
lret
jp
fs
or
xchg
sahf
loope
outsl
xchg
pop
pop
repz
inc
fsub
repz
cmpsl
sub
or
push
arpl
adc
lea
push
dec
and
lcall
pop
mov
xchg
das
gs
mov
push
out
fnstcw
pop
xchg
inc
add
mov
xor
cmpsb
sbb
call
in
orb
je
in
jns
lahf
leave
jge
popa
fistpll
insb
dec
xchg
xchg
iret
mov
and
mov
pop
cs
inc
add
or
movl
and
ficoml
aas
adc
xchg
cmp
ds
add
in
inc
or
xchg
roll
popf
lock
insl
insb
scas
in
jo
mov
addr16
inc
movsb
jne
or
out
or
push
fbld
jae
add
mov
ss
fmuls
pushf
sub
mov
aaa
jnp
or
cli
jg
add
es
cmp
movsb
dec
add
stc
mov
int3
adc
outsl
icebp
sbb
mov
cmc
mov
jb
pop
mov
pop
sbb
inc
and
std
lea
je
xchg
dec
adc
jecxz
aam
lods
insb
cmc
dec
leave
adc
sub
cmp
sub
test
jae
inc
inc
inc
mov
pop
pop
push
clc
aad
cld
dec
ljmp
cltd
xor
mov
sbb
pop
out
cmp
sbb
es
dec
mov
sub
mov
adc
mov
lret
ja
xor
sub
lea
les
lods
pop
sbb
cmpsl
sahf
sbb
pop
mov
jo
out
popl
movsl
sub
or
xor
dec
in
push
push
and
lds
inc
mov
pushf
mov
sub
jbe
rolb
sti
sub
lea
std
lock
lcall
mov
cwtl
sub
xorb
into
cli
mov
lret
push
cmp
inc
cmp
xchg
not
sahf
dec
mov
adc
loop
xchg
jbe
shrl
test
loope
insl
and
lret
gs
mov
xlat
cmp
pop
out
mov
shrl
cmp
cmp
lds
lods
add
adc
pusha
rcr
lods
in
movsl
andb
sti
sub
push
mov
xchg
nop
in
cli
negb
lock
add
bound
mov
or
jecxz
cwtl
scas
lea
sub
push
ret
nop
sbb
jp
pop
mov
inc
jnp
es
push
test
push
add
cmc
sub
or
inc
mov
icebp
out
jns
push
or
movsb
outsl
test
test
mov
pop
add
scas
popa
pop
pop
xlat
retw
push
xchg
mov
push
into
dec
aas
ljmp
xchg
xor
sbb
ret
aaa
fstpt
inc
adc
cmp
pop
cld
scas
sti
icebp
and
cmp
pop
out
jmp
jbe
mov
in
push
dec
sbb
jno
mov
jb
add
outsl
fsubrs
xor
or
enter
add
aam
inc
and
dec
push
int
or
outsl
fs
lahf
mov
shrb
fiaddl
mull
icebp
out
loop
mov
mov
and
cmc
cmp
cmp
xor
push
inc
mov
imul
push
test
inc
aaa
stos
pop
push
mov
clc
sbb
bound
outsb
add
inc
imul
jne
insb
mov
lds
cwtl
fwait
lcall
sbb
in
or
movsb
js
je
dec
sub
jno
int
movsb
adc
xchg
xchg
aas
jecxz
pop
dec
jmp
mov
pop
xlat
sahf
ret
testb
shll
sub
out
movsb
sbbl
mov
inc
ljmp
lods
mov
lock
cli
xchg
xorb
aaa
fdivs
fsubrl
jge
aas
cs
les
in
iret
mov
into
push
pop
push
sub
pushf
in
fs
push
sub
pop
and
pop
add
mov
lret
adc
or
sub
pop
stc
mov
cltd
clc
in
ret
inc
cmp
insl
sbb
pusha
hlt
mov
inc
push
sub
mov
push
insl
mov
popf
add
mov
mov
lret
les
mov
sub
pop
cmp
aas
subl
adc
pop
aas
jecxz
mov
orb
jg
and
aas
lret
sub
jno
jo
mov
pop
adc
cli
push
inc
fwait
xchg
sbb
arpl
shl
shlb
fldl
xchg
pusha
mov
data16
inc
jg
out
mov
mov
insl
sub
loopne
push
or
inc
lahf
stos
adc
ljmp
dec
inc
pusha
fstl
ret
jge
and
icebp
xor
les
ljmp
fisubl
mov
insb
jp
repz
lret
repz
das
sbb
pop
test
adc
and
mov
imul
or
cmc
push
test
popf
xlat
xlat
rorb
push
mov
mov
stos
jo
pop
mov
jne
mov
inc
xchg
test
sbb
popw
shl
movsb
inc
mov
stos
pop
fwait
sahf
fsubs
movsb
cmp
popf
ja
push
jecxz
nop
por
or
test
testl
xchg
lahf
rorb
ljmp
sbb
dec
jns
movsb
out
repz
scas
rcll
arpl
mov
incl
adc
jbe
mov
aad
mov
add
push
inc
or
inc
insl
jle
in
jae
adc
mov
ffree
mov
popf
daa
adc
movsl
aas
cmp
and
or
adc
mov
mov
xchg
xor
mov
mov
pop
adc
out
mov
outsl
jmp
lret
pop
ja
or
ss
adc
fsubrl
insb
mov
or
mov
push
sbb
inc
sbb
aaa
je
xlat
sbbl
adc
xchg
popa
aaa
jge
test
test
push
or
insl
xor
int3
adc
ja
push
sbb
bound
pop
fxch
adc
shll
mov
push
lahf
int
sbb
add
pop
inc
mov
push
push
xchg
iret
jno
movhps
mov
jae
push
jmp
insb
sbb
ret
out
adc
xor
add
lds
in
cmp
and
call
jmp
mov
lods
mov
jmp
push
pop
imul
dec
inc
push
inc
jle
inc
lds
xchg
inc
add
push
mov
imull
adc
mov
cmp
stos
out
mov
mov
cmp
or
pop
xor
pop
xor
mov
rorb
jno
and
add
cmp
stos
add
outsl
push
sub
and
push
sahf
and
add
js
jns
mov
das
in
sbb
js
lods
js
wrmsr
cwtl
rcll
push
loope
bound
imul
jge
cs
int3
pop
inc
mov
call
dec
sbbb
xor
and
pushf
push
mov
mov
pop
in
xor
popa
rcll
and
add
inc
cmc
test
mov
jle
lock
and
xorl
dec
mov
and
mov
sub
arpl
adc
xchg
cmpsl
lahf
leave
out
sub
xlat
sahf
addr16
inc
jl
inc
inc
out
push
test
mov
xchg
mov
test
mov
shll
mov
out
lcall
sub
jmp
aas
jns
mov
dec
mov
adc
orb
mov
mov
sti
fs
scas
pop
ja
out
in
lcall
jnp
adc
sbb
fstpl
aas
jbe
out
lock
orl
int
pop
and
sub
mov
mov
cwtl
addr16
sbb
mov
jl
xchg
jp
xor
inc
aas
pop
mov
jns
mov
daa
jecxz
sahf
xchg
mov
mov
push
cmc
loope
sub
jp
inc
sbb
flds
stos
aam
fs
mov
mov
dec
add
mov
xchg
sbb
add
or
push
hlt
pop
pop
imul
adc
push
pop
and
mov
ficomps
inc
lds
or
aaa
dec
inc
lea
mov
out
sub
inc
cli
pushf
lret
push
pop
mov
mov
mov
ret
mov
fbstp
dec
mov
cwtl
stos
sarl
mov
and
sub
and
xchg
jnp
pusha
fnstenv
insl
pop
pop
inc
gs
rorl
pusha
pop
jmp
lock
and
fldt
inc
aas
mov
pop
test
xor
push
push
adc
mov
xchg
imulb
cmp
jmp
xchg
mov
nop
out
jge
push
add
cmpsl
cmpsb
mov
mov
addr16
sti
xchg
jge
xchg
mov
and
xchg
hlt
push
mov
fidivl
les
in
shlb
mov
fdivrl
push
cmp
push
aaa
xor
xchg
stc
imul
shlb
jne
enter
and
enter
in
imul
sbb
xchg
popa
and
pop
imul
push
shl
xor
push
fs
cwtl
lods
mov
popa
mov
adc
popf
andb
fldlg2
push
lods
divps
pop
clts
jge
lock
fsub
les
sbb
mov
out
mov
insb
subl
in
xchg
cmp
cmp
ds
loope
jae
xchg
nop
cwtl
pop
sub
shrl
jg
movsb
pop
mov
ret
jp
cmpsl
and
in
pop
stos
jmp
popf
push
sahf
in
lret
in
in
mov
or
adc
js
shl
xchg
in
dec
jp
adc
xorl
test
jp
divl
xchg
xchg
sbb
iret
gs
cwtl
sbb
adc
scas
jne
inc
add
repz
cmp
xchg
push
xor
int3
mov
mov
pusha
cmpl
mov
lcall
mov
push
test
push
test
jmp
mov
mov
test
fwait
mov
shll
sbb
sub
xor
adc
cmpsb
xchg
xlat
cmp
sbbl
or
popa
xchg
mov
ss
mov
pop
scas
pop
cmpb
in
scas
rorl
xlat
fbld
add
adc
mov
pop
arpl
cmp
mov
xchg
test
test
lds
les
mov
sub
pop
fwait
mov
pop
jle
xchg
mov
sbbb
std
std
mov
ja
addr16
sbb
ds
push
shlb
push
int
test
dec
mov
aam
mov
lods
cmp
pop
mov
and
fs
jne
or
xor
dec
xor
xchg
lret
bound
jl
in
jne
jne
inc
cmp
mov
ds
int3
xchg
pop
push
cwtl
out
xor
pop
imul
cmp
lods
hlt
jne
jb
dec
fbld
out
add
ss
lea
mov
scas
out
jg
jl
clc
insl
xchg
rcl
sub
jae
or
jbe
aas
int
xchg
fcomi
lret
fidivl
sub
xlat
call
jnp
sbbb
xor
mov
int3
xchg
xchg
push
pop
push
ret
fstps
lcall
imul
cmp
das
push
rcll
int
push
jnp
lea
loopne
cwtl
and
push
shrb
pusha
pusha
jl
xchg
fwait
aas
out
stos
sub
clc
jl
call
push
int
mov
cmp
jae
cmp
popa
inc
aaa
decl
push
aaa
jle
mov
rcrl
mov
repnz
es
stc
xchg
ljmp
fadd
add
cmp
jbe
gs
cmp
push
mov
dec
ffree
aad
not
and
sbb
movsl
loope
pusha
inc
push
sbb
jge
loopne
push
imulb
dec
push
pop
or
shll
gs
insb
mov
push
adc
pop
fistpl
sub
mov
mov
sti
mov
fmuls
ret
sub
fwait
cld
imul
roll
dec
mov
lahf
push
shlb
mov
sbb
or
jl
mov
sbb
jne
pop
inc
and
adc
inc
test
outsl
mov
inc
andl
int3
pop
test
or
mov
and
mov
les
dec
mov
dec
push
pusha
xchg
or
daa
outsl
ljmp
pop
stos
sub
aad
loope
or
mov
repz
mov
sbb
xlat
ds
mov
ret
adc
dec
dec
mov
inc
jnp
dec
mov
pop
add
fwait
dec
xchg
sbb
dec
mov
and
or
xchg
les
arpl
ja
mov
out
xor
dec
inc
rcll
pop
xlat
xor
jb
lds
sar
hlt
test
outsb
mov
stos
mov
pop
bound
imul
mov
and
or
dec
insl
clc
lret
test
mov
xor
lret
push
cmc
xor
insb
shll
and
cmpsl
and
out
ljmp
cltd
loopne
divl
divl
ror
jecxz
lcall
and
fnsetpm(287
mov
push
add
cmp
xor
pop
fisttps
jbe
lods
push
loopne
xchg
js
jnp
pop
mov
mov
in
outsl
insl
data16
loope
popa
lret
mov
xchg
std
push
sti
sub
arpl
or
push
xor
xor
sbb
mov
daa
insb
pop
dec
cmpsl
cs
xlat
sbb
repnz
inc
push
ret
lds
cld
jge
ljmp
lahf
repnz
cmp
jb
mov
pop
nop
cmpsb
mov
sub
test
pop
sub
rolb
int3
scas
pop
mov
in
scas
mov
rol
jo
xlat
mov
sbb
mov
dec
dec
pop
stos
jmp
inc
enter
aam
and
js
inc
push
rdpmc
inc
push
xorb
cmpsl
test
ljmp
dec
jae
fsubrs
adc
sub
aas
rcrl
push
push
cmp
inc
adcb
cmp
sub
lock
je
aas
lret
je
fdivrs
jnp
pop
arpl
in
dec
push
sub
shlb
push
lsl
loope
xor
or
data16
add
add
mov
push
stos
sarl
imul
push
idivl
inc
cmp
outsl
cs
jle
lods
outsl
jp
sbb
cli
inc
rclb
mov
pushf
pop
fwait
xchg
add
pop
adc
jno
ljmp
push
and
mov
adc
lahf
lret
and
aad
jo
dec
cli
cs
push
xor
sbb
adcb
popf
lcall
fnstcw
xchg
iret
or
push
pop
adc
daa
inc
sub
fwait
jne
into
shll
push
int
jne
mov
xchg
dec
xchg
in
sbb
loopne
push
xor
int3
cs
arpl
cmpsl
repz
mov
test
adc
cs
push
inc
mov
ret
negb
jp
in
js
jmp
push
rcrb
mov
into
adc
mulb
ret
mov
pusha
ljmp
loopne
and
mov
ds
inc
in
mov
pop
imul
xchg
int
xlat
das
inc
xor
mov
mov
sub
fdivrs
loop
jle
adc
jb
out
adc
loope
push
jp
mov
in
je
push
lock
mov
mov
in
and
jg
mov
pop
scas
add
cwtl
mov
in
jb
mov
test
nop
dec
mov
mov
pop
imul
dec
popl
cmp
in
and
mov
mov
pop
or
or
pop
mov
jns
jg
icebp
repnz
add
sbb
dec
cmpsl
fiadds
sub
lret
push
xor
addr16
shl
add
sub
push
inc
mov
dec
iret
ja
mov
aaa
mov
sbb
and
repz
push
pop
lea
jmp
test
in
dec
cmpl
xorb
push
icebp
insb
pop
mov
xchg
sbb
push
loope
js
sarl
in
sahf
aam
idivl
outsl
fcompl
cmpb
mov
pop
pop
test
pop
enter
mov
iret
or
pop
scas
popa
push
sub
ja
dec
les
xchg
pop
bound
pop
pushl
pop
aaa
js
push
cmpb
adc
or
cmc
cmp
sbb
xchg
int3
inc
sbb
jecxz
jns
adcb
fwait
pop
add
in
adc
cmpsl
loope
lcall
bound
test
icebp
dec
jae
jns
cmp
dec
jns
out
jo
xchg
mov
aaa
mov
inc
or
mov
sti
pop
sbb
xchg
int
adc
adc
or
mov
fsts
repnz
scas
scas
aaa
jb
mov
add
mov
jle
jae
pop
add
repz
shl
push
push
cltd
xchg
addl
roll
cmp
addr16
pop
aam
dec
scas
out
mov
mov
gs
fldenv
repz
mov
icebp
dec
mov
add
dec
mov
sub
cmp
js
xor
inc
inc
pusha
mov
movsl
wbinvd
movsb
pop
cwtl
cmpsb
jo
push
cmpsb
popa
ret
dec
dec
pop
ss
fists
push
in
pusha
bound
or
mov
xchg
call
aaa
test
lea
and
pushf
and
and
rol
mov
push
cs
adc
fistl
enter
inc
fcompl
lret
movsl
sbb
jmp
jns
lahf
adc
dec
cmp
and
sahf
leave
xchg
fidivrl
mov
lods
jo
fs
dec
jnp
and
js
jns
mov
pop
jae
inc
fnstsw
loope
out
pop
mov
inc
push
cs
mov
cltd
sbb
jle
inc
aad
cmp
pop
add
pushf
mov
ja
dec
adc
cmpsl
lea
mov
hlt
dec
mov
and
stc
outsl
push
insb
adc
nop
pop
push
jecxz
cwtl
int
push
lods
cmp
loop
push
inc
int
cmp
gs
clc
les
inc
add
mov
imul
out
xchg
push
add
or
stc
lea
les
cld
hlt
mov
insl
enter
cmp
inc
and
cmp
mov
movsl
xchg
ja
imul
adc
imul
daa
sbb
push
idivl
xlat
dec
lahf
lahf
pop
popl
out
loope
mov
push
pushf
outsl
movsl
jns
vpunpcklwd
xor
addr16
hlt
mov
ljmp
leave
mov
iret
imul
lods
ffreep
inc
fsubs
dec
push
movsb
add
inc
stc
cli
out
int
aad
es
out
clc
movsl
adc
movzbl
shlb
mov
gs
roll
dec
imul
push
jns
and
sbbb
enter
xor
pop
xchg
and
sub
cmc
aam
mov
rorl
jne
or
movsl
daa
shrb
ja
jle
enter
dec
or
call
cmp
and
popa
pop
jns
or
add
movsl
add
mov
cmp
xor
dec
repz
dec
out
loop
mov
jl
sahf
jecxz,pn
jo
sbb
lock
mov
sub
movb
ret
rcrl
jle
jb
je
xor
xor
and
mov
cli
xchg
cwtl
add
pop
mov
dec
fnstcw
test
push
mov
push
mov
ret
std
repz
test
fldt
sbb
or
adc
test
in
stos
bnd
into
jb
movsb
fcmovb
repnz
dec
cmpsb
push
jnp
sub
dec
xchg
xor
cmpsl
cmp
xorl
dec
mov
insb
in
or
and
jecxz
out
adc
push
sbb
sbb
imul
xlat
pop
sbb
sbb
mov
xor
push
sbb
repnz
loopne
aam
out
mulb
lds
dec
out
cld
fs
lea
push
jno
repz
xor
loopne
inc
mov
or
pop
js
jecxz
es
inc
inc
mov
gs
dec
in
cmp
jb
lods
xor
xchg
shlb
or
sarl
jbe
pop
xchg
xor
call
hlt
dec
icebp
popf
pop
pop
add
hlt
cli
cmp
in
dec
gs
push
pusha
xor
lea
mov
sub
sub
imul
popf
sub
xor
jp
sahf
mov
das
mov
mov
and
push
je
repz
stos
xchg
pop
cli
cs
call
test
or
fadds
push
pop
aas
notb
sbb
subb
adc
jb
or
mov
jle
lea
insl
outsl
std
jle
divb
inc
popf
pusha
or
mov
jge
adc
mov
inc
test
cltd
fmuls
clc
cld
cmp
dec
dec
and
and
pop
mov
andl
movsl
cmp
dec
movsb
mov
shll
pop
sti
jb
or
gs
movsl
jg,pn
in
mov
rcll
inc
jne
outsb
xor
sub
sub
fwait
test
cld
adc
jp
xor
imull
mov
clc
fidivs
rcrb
mov
ljmp
sarl
mov
fisttpl
and
cmp
push
cmp
cs
cli
repz
iret
fisttpl
push
int3
pusha
test
sahf
add
sahf
pushf
sbb
int3
jl
scas
dec
arpl
stc
gs
dec
sbb
jns
repnz
xchg
mov
jmp
lcall
adcb
jp
fwait
aas
mov
les
testb
shlb
call
pop
pop
push
mov
sti
rcll
pushf
in
jp
cltd
icebp
jmp
push
mov
xchg
mov
push
jle
pop
inc
push
fdivr
push
inc
in
mov
mov
cmpsl
mov
cmp
pop
pop
mov
bound
pop
mov
movsl
hlt
fcoml
pushf
xchg
jne
sub
sahf
repz
rcrb
xor
xor
fcomp
push
rcrl
mov
insl
pop
xchg
popa
pop
mov
pusha
shl
xor
pop
jmp
leave
cmp
mov
push
jbe
stos
mov
pop
xor
movsb
movsb
repnz
into
ljmp
in
mov
inc
dec
decl
pop
xchg
loope
add
inc
popf
sub
jo
cmp
nop
lock
cmc
push
mov
xor
icebp
add
ljmp
xor
mov
mov
pop
aad
inc
sti
icebp
adc
lcall
add
mov
xacquire
je
adc
xor
into
cmove
aas
cmpb
imul
in
xchg
xchg
pop
sbb
lahf
inc
insl
jg
in
ds
pop
and
mov
xchg
dec
inc
pop
jle
mov
or
jecxz
imul
or
outsl
jnp
mov
xor
lahf
aaa
rcl
push
imul
mov
mov
call
stos
ret
lret
or
mov
std
xchg
ds
and
gs
push
loop
test
adc
and
aad
mov
arpl
and
xchg
out
dec
jmp
ret
add
nop
nop
sahf
adc
ret
push
test
sbb
mov
cmp
ficoms
sbb
push
fs
push
pop
push
es
out
addb
ret
mov
shr
add
dec
mov
cs
aas
ret
add
and
adc
mov
ficoms
fildl
mov
pop
outsb
xor
add
sti
imul
mov
push
mov
inc
pop
pop
fldl
adcb
nop
in
add
sbb
jmp
stos
out
fildll
cmp
pop
inc
clc
in
pop
sub
test
pop
mov
aam
push
jecxz
test
mov
out
in
mov
test
lcall
push
into
cmp
push
loope
scas
sbb
stos
test
push
cmp
inc
add
int
lcall
sahf
mov
mov
addb
subl
mov
fs
cmp
mov
lock
loop
or
repnz
xor
dec
jno
scas
stos
xor
push
test
test
and
inc
and
adcl
roll
and
lods
add
pop
clc
scas
lret
jg
fmulp
cld
rorl
mov
lods
aas
adc
mov
or
fdivs
mov
fldenv
mov
jb
or
dec
push
mov
jmp
aaa
mov
jno
add
pop
mov
sbb
aaa
lret
mov
out
jne
sbb
and
pusha
jl
adc
lahf
cmpsl
loope
outsb
orl
and
adc
repnz
in
testb
cmp
mov
lock
test
adcl
aaa
fs
cli
je
pop
sbb
inc
add
push
dec
and
addb
loopne
xlat
push
cmp
and
dec
dec
and
or
xor
mov
inc
mov
popf
popa
mov
sub
fidivrs
nop
ficoms
xchg
andb
mov
fwait
inc
fldenv
aaa
in
lods
jmp
stc
fdivp
and
mov
cs
jns
xchg
lds
and
popl
push
jbe
ljmp
mov
adc
sub
fildll
sbb
pop
mov
mov
mov
ja
jp
dec
and
inc
mov
inc
push
xchg
jnp
sub
in
sub
adc
fidivrs
lds
dec
insl
icebp
sahf
in
rcrb
inc
xlat
loopne
fwait
dec
std
stos
outsl
push
xchg
imul
es
sbb
jo
or
mov
jmp
sbb
jmp
cmc
mov
pop
fmul
scas
ss
scas
and
pop
aas
xchg
int
cwtl
addb
loopne
pop
bswap
nop
inc
lahf
sub
les
xor
sbb
pop
call
dec
iret
std
xlat
dec
dec
inc
daa
stos
cs
sub
push
call
dec
push
mov
pop
mov
push
add
push
mov
shll
bound
into
pop
and
dec
cli
in
cltd
loopne
jmp
cli
sbb
inc
sbb
or
push
pop
notl
out
push
inc
push
xchg
clc
roll
ss
out
pop
out
fcompl
xlat
cwtl
inc
insl
xchg
lock
inc
ljmp
test
pushf
shr
sub
sti
jae
aaa
or
aaa
leave
sti
test
das
iret
aam
mov
movsl
jmp
clc
dec
xchg
pop
sbb
dec
enter
sub
cmc
fsubs
bswap
xchg
xor
movswl
inc
fsubr
sub
ret
cli
mov
cld
fisubrl
shr
ror
ss
out
mov
dec
add
sahf
add
fisubl
push
add
sbb
mov
xchg
cmpb
jnp
paddusb
mov
xchg
test
int3
mov
jmp
in
in
mov
repz
ficompl
iret
scas
ficompl
fistl
js
dec
pusha
cltd
stos
insb
sbb
scas
or
lock
dec
jae
cmc
cmp
arpl
out
pop
rcl
and
pop
cli
cmc
push
mov
movsb
xchg
shl
out
stos
sahf
jecxz
mov
sub
mov
repz
ret
lods
xchg
jmp
xchg
movsb
movsb
inc
pusha
inc
hlt
std
jns
add
sbb
ljmp
dec
movsb
push
mov
in
into
push
cwtl
aas
mov
movsl
add
out
xchg
test
inc
push
sbb
xchg
in
scas
fwait
bound
inc
ficomps
shlb
int
mov
pop
dec
cs
and
xchg
jne
icebp
cmp
jmp
mov
mov
xor
into
ss
into
pop
mov
sub
enter
daa
push
jns
divl
add
mov
iret
push
adcb
mov
mov
mov
insb
xchg
sbb
aas
enter
jecxz
jnp
mov
sub
aaa
aad
clc
cmp
add
mov
ret
inc
dec
addr16
xlat
jae
push
cmp
pusha
xchg
into
fadd
push
inc
jg
and
clc
cmp
lea
adc
push
xchg
fiadds
dec
or
mov
inc
mov
aam
fsub
pusha
cli
std
mov
pushf
pop
aam
imul
sub
clc
jl
bound
sub
push
pop
jp
lods
adc
jle
fxch
push
jmp
or
sub
xchg
jp
fs
mov
push
push
lahf
sub
cmp
dec
pop
lods
popf
int
ret
push
dec
xchg
clc
dec
out
jle
pop
xchg
loop
pop
cmp
lret
ss
stos
mov
jecxz
imul
inc
test
jno
adc
xchg
add
mov
xchg
lcall
pushf
movsb
test
sub
dec
lret
sbb
sbb
jle
pop
test
mov
mov
xchg
jns
fldenv
xor
orl
adc
and
inc
aad
push
sbb
fstpt
je
mov
pop
or
faddl
sbb
rorb
lcall
sti
jne
cmpsl
xor
inc
cmp
or
cwtl
sub
popf
sbb
cmp
fninit
jle
cli
and
out
push
xchg
push
mov
pop
dec
movsb
xchg
push
lock
mov
fadds
testb
mov
outsl
cld
in
call
mov
inc
push
lods
out
adc
xor
repnz
jle
cmp
push
in
xor
jecxz
sub
sarl
cwtl
pop
push
dec
in
or
pop
jno
or
andb
movsb
sbb
mov
movsb
cmp
xchg
cmp
push
fstp
imul
stos
jno,pt
dec
jne
mov
pop
in
in
push
xchg
sub
sahf
leave
inc
push
gs
lods
push
jnp
cmpsb
jp
aas
sbb
mov
in
add
je
dec
mov
mov
aas
loop
ja
scas
mov
cmp
insl
insb
faddl
mov
jo
mov
out
lods
scas
popf
clc
xchg
es
jns
jp
lock
inc
cmpsl
paddd
je
gs
loope
mov
aam
test
push
cmovge
push
imul
jbe
inc
popa
jecxz
inc
add
xor
inc
fisttpll
scas
pop
push
xchg
xchg
xchg
xchg
add
cmp
jl
jbe
loope
adc
pop
fldcw
lock
sub
mov
outsl
cli
mov
andb
cmp
into
lods
insl
jbe
push
insb
or
sbb
popf
fwait
sahf
mov
stc
add
cli
mov
mov
ljmp
mov
sbb
repnz
or
sbb
stc
xchg
clc
jne
jbe
lods
mov
aam
imul
mov
nop
jl
outsb
pop
mov
push
push
xchg
ret
arpl
xchg
cmpl
xchg
inc
mov
loopne
mov
divl
adc
dec
mov
inc
es
inc
mulb
mov
mov
andb
sub
mov
pop
out
mov
push
movsl
outsl
out
jp
es
sub
add
shll
addr16
inc
mov
push
jno
jne
enter
pop
leave
push
xor
mov
xor
je
pop
cmp
jne,pn
jae
jg
mov
jb
inc
sub
cmp
rclb
mov
jg
sub
add
xchg
popa
out
pop
fmuls
mov
adc
fistpl
sub
popf
aaa
xor
test
dec
cmpsl
ljmp
mov
dec
lock
dec
sbb
sub
mov
lock
adc
xor
xchg
xchg
loop
call
jo
push
repnz
and
shlb
pushl
add
cmp
arpl
and
mov
daa
mov
loope
pop
mov
mov
insb
movsb
movsb
rclb
repz
test
dec
insb
pop
jb
jmp
sub
loopne
mov
jecxz
call
addr16
or
jp
lods
stos
jle
or
or
mov
cmp
pop
and
push
and
jnp
push
push
pop
lods
sub
jg
out
xchg
mov
push
pop
js
test
cmpsb
ljmp
sub
sub
scas
pop
fsubrl
inc
push
les
mov
cmpsb
rorl
sub
adc
dec
out
inc
mov
fcoms
push
xchg
stos
mov
testb
lcall
ja
xchg
add
add
or
cltd
test
leave
stos
andb
pop
add
jae
icebp
nop
test
mov
insl
xor
shrb
js
inc
jp
nop
push
sbb
push
pop
jmp
jge
jne
xchg
mov
loopne
fmul
mov
call
xchg
pop
shrb
adc
ljmp
jmp
pop
cmp
arpl
js
xchg
je
inc
out
push
adc
orb
or
xor
cmp
jmp
loopne
pop
inc
mov
add
push
sub
jmp
lret
or
xor
cld
sbb
jbe
jne
stc
stos
out
jmp
je
add
sub
dec
ror
cmc
dec
mov
cwtl
dec
dec
stc
mov
sub
mov
sbb
adcb
je
jg
in
stos
in
or
inc
and
pop
cmp
pushf
subl
enter
xlat
sub
gs
push
dec
mov
std
jno
lahf
sbb
sub
ds
cmc
push
cmc
mov
xor
out
lcall
pop
jo
xor
cli
in
movb
pusha
shrb
je
lret
jne
cmc
and
lods
cmp
stc
cltd
inc
sbb
fadds
dec
arpl
pop
fwait
jbe
imul
jg
fwait
mov
test
jae
lds
push
adc
js
jle
xchg
mov
and
bound
repz
sti
sub
pop
stc
cmpsb
mov
rcrb
jnp
call
or
xlat
jb
mov
cmp
push
ljmp
stc
xchg
lret
out
lahf
stc
lret
cmp
inc
dec
std
push
cs
lcall
loopne
jnp
push
stos
sbb
mov
iret
ss
mov
daa
outsb
adc
psrlw
scas
outsl
inc
test
pop
incl
add
push
jns
test
and
dec
bound
mov
je
neg
iret
adc
jnp
imul
inc
cmp
scas
cmc
lahf
fsubs
pushf
dec
movsl
jmp
aaa
or
or
add
sub
movsl
fstps
mov
sbb
jp
fmull
cmpsl
gs
arpl
cs
mov
pop
mov
jg
mov
dec
jecxz
and
call
push
loop
dec
pop
aad
addr16
leave
aas
cmp
dec
push
data16
lret
sub
das
or
das
jno
dec
jno
out
xchg
repnz
cmpsb
lods
sub
cmp
repz
lahf
jns
lods
fstpt
or
fucomi
sub
xor
add
lcall
dec
mov
outsb
int
push
rcrl
loopne
dec
sbb
push
sbb
add
pop
fisubrl
fdivrs
aaa
mov
insl
nop
and
popa
add
pop
test
aas
test
and
push
stc
inc
push
cmp
sbb
scas
mov
xchg
cmp
stos
push
aas
sbb
hlt
sbb
mov
sbb
jnp
or
aaa
iret
jno
or
enter
xor
pop
sub
stos
adc
cmp
dec
lcall
enter
scas
xor
jne
cmpsl
xor
shrb
ja
sti
enter
push
jae
or
pop
cmpsl
xchg
or
push
daa
dec
icebp
nop
and
shl
hlt
lret
mov
aad
xorl
leave
inc
stos
insl
adc
or
lods
test
xchg
or
cli
in
mov
and
push
xor
pop
out
jl
lsl
sub
andl
pop
pop
or
popa
cmp
cmp
icebp
add
push
mov
ss
push
bnd
in
std
sbb
outsb
xor
shr
add
cltd
cmp
sarl
mov
outsb
pop
loopne
mov
fists
jmp
arpl
push
sub
xchg
mov
cmp
mov
jp
or
cmpsb
ljmp
fsts
and
orb
sbb
lea
inc
rolb
hlt
add
sbb
xchg
fcmovne
push
inc
adc
jbe
inc
decb
lds
stos
lret
push
insb
pop
mov
push
push
push
movsl
cmpsl
sub
push
iret
int3
in
add
mov
adc
cmp
add
popf
add
mov
lock
adcl
mov
daa
mov
das
sub
xor
mov
adc
mov
pop
rorl
ret
lret
push
out
aam
mov
push
pop
icebp
scas
jb
sbb
jecxz
dec
mov
js
inc
pop
adc
std
adc
shll
das
fpatan
mov
jge
nop
mov
dec
outsb
pop
push
jge
sbb
cmp
add
adc
jb
insl
fisubrl
push
xchg
scas
jp
jle
cmp
sub
shll
inc
ficoms
or
push
lahf
sahf
imul
lods
or
cmc
and
jnp
loope
inc
out
cmp
xlat
jg
das
cmp
aad
sub
mov
enter
xor
test
rorl
test
test
adc
fadds
mov
or
jbe
jb
dec
nop
inc
xchg
test
mov
js
icebp
lods
sti
hlt
out
lods
inc
sbb
pop
out
std
xor
jge
scas
fdivrs
shlb
rolb
test
enter
mov
mov
shll
ljmp
mov
in
imul
out
movsb
push
dec
ja
cli
pop
mov
dec
cmp
insl
dec
push
dec
or
inc
cs
jmp
fs
mov
xchg
dec
arpl
cmp
cmpl
add
xor
js
out
inc
fldcw
cwtl
cmp
mov
es
sbbl
repz
aaa
mov
and
mov
es
ficoms
add
and
xchg
insb
add
sub
and
dec
iret
pop
out
push
sub
sbb
loopne
and
or
int3
xor
mov
cmp
xor
orb
cmp
jmp
cmp
push
or
jnp
xchg
call
daa
and
sub
mov
jae
adc
clc
pop
pop
push
pop
jb
test
add
pop
imulb
mov
mov
into
push
shld
aam
inc
adc
movsl
cmp
lock
jg
push
adc
or
pop
mov
jmp
fcoml
icebp
dec
movsb
fs
bsf
xchg
clc
lods
sbb
pop
jmp
out
xlat
es
push
sbb
imul
cmpsb
push
or
in
mov
mov
je
fcompl
push
inc
lret
push
mov
xor
into
orb
addr16
xor
fcoml
int
test
cmp
out
daa
and
push
mov
push
xlat
call
and
rcll
lods
loope
push
xor
adc
shrb
sbb
mov
leave
mov
sbb
sbb
lahf
push
xchg
and
cli
es
ds
mov
enter
out
inc
andl
mov
sahf
sub
fisttpll
std
cld
push
pusha
mov
fcmovnb
fwait
adc
iret
je
ss
xchg
jae
xor
test
inc
and
inc
mov
add
add
inc
sbb
stos
inc
imul
jecxz
fistpl
call
xor
mov
mov
sub
sbb
dec
pop
aaa
hlt
sbbb
inc
dec
icebp
sub
dec
pop
cmp
push
popf
std
pop
pop
add
mov
dec
outsl
mov
ja
outsb
into
in
mov
mov
cltd
mov
add
scas
and
lret
pop
lea
je
pop
push
stc
sub
mov
popa
mov
in
outsb
push
cmc
xchg
es
dec
lea
jle
dec
mov
in
out
flds
xchg
and
popf
push
sbb
jmp
push
insl
fstpl
ja
and
mov
filds
out
sbb
imul
mov
push
and
sbb
sbb
ficoml
daa
ja
aaa
out
rorl
lds
pushl
or
dec
mov
js
int
inc
push
push
jecxz
adc
cmp
jmp
xchg
cmp
pop
std
and
lahf
icebp
push
repz
mov
mov
out
sub
test
push
enter
xchg
adc
lret
inc
push
cmp
cmp
in
jecxz
xor
rorl
stos
sbb
inc
sub
xchg
mov
mov
mov
or
or
sub
lock
mov
lret
xchg
sti
xchg
arpl
jle
mov
out
jo
cmc
inc
jl
gs
ja
shl
aam
mov
test
fwait
out
xchg
fcomip
cmc
and
les
mov
push
xor
imul
call
fiaddl
jbe
in
bound
push
adc
xor
ret
pop
lock
inc
cmp
adc
xor
jecxz
mov
rol
jo
sar
cmp
orl
dec
add
cmpsl
insl
fsub
add
insl
jbe
or
sahf
mov
push
test
xchg
lea
jb
pop
rorb
repnz
cmp
int3
push
into
lea
cwtl
insl
in
mov
movl
jnp
jl
pop
xchg
repnz
xchg
sub
jnp
mov
out
sub
push
jge
push
adc
fsts
scas
and
or
cmp
mov
je
loop
mov
inc
fcompl
or
push
cs
fisubl
sbb
bound
dec
ljmp
push
dec
sbb
xchg
pusha
jmp
fwait
pop
popa
dec
popf
mov
addr16
adc
jmp
add
cwtl
clc
add
mov
ret
fsubrp
data16
mov
repnz
mov
movb
fs
push
decb
ret
pop
add
xor
dec
inc
adc
incb
mov
test
jp
repnz
sub
pop
test
loop
pop
es
andl
or
mov
dec
push
lods
lea
nop
iret
push
and
pop
mov
add
jmp
fcoml
jnp
jbe
jns
scas
inc
pop
xchg
loopne
call
lods
lods
aam
xor
cmp
movsb
push
xchg
daa
fwait
cs
dec
jns
out
push
mov
push
xlat
and
xor
lods
pop
push
xor
inc
das
push
aaa
add
or
pusha
das
xchg
add
and
je
jecxz
cli
mov
push
test
ja
dec
push
imul
cmpsb
imul
scas
and
loopne
adc
add
add
xchg
repz
mov
and
xor
mov
andb
mov
jmp
and
test
aas
xchg
mov
std
and
adc
insl
mov
push
adc
test
fldt
cwtl
xchg
xchg
add
jns
dec
inc
xchg
add
push
xchg
aad
jns
insb
add
jb
cmp
into
mov
je
pop
popa
jnp
jl
xor
mov
lock
cmpsl
or
mov
movsl
xor
int3
or
xor
cmp
fists
jae
mov
mov
cmpsl
faddl
cmpsl
adc
rorl
mov
mov
jbe
fnstenv
fwait
add
xlat
push
mov
test
lea
mov
inc
test
sbb
imul
in
lock
addr16
push
lahf
lret
mov
sar
ret
andl
mov
dec
aas
sbb
cwtl
cmp
movsb
loopne
aaa
dec
sbb
mov
pop
or
mov
lods
mov
mov
mov
xchg
adc
ret
dec
cmp
shlb
out
mov
and
stos
hlt
stc
pop
aas
dec
mov
in
shrb
mov
cmp
out
dec
fimuls
xchg
xor
mov
mov
adc
xchg
xchg
call
mov
outsl
movsl
in
fistpll
aam
inc
ljmp
rcll
icebp
sub
pop
paddq
stos
clc
bound
xchg
push
jp
xor
test
sbb
push
and
mov
std
fcoms
clc
mov
sahf
mov
cmp
mov
add
mov
orl
mov
std
pop
fbstp
mov
inc
push
push
mov
add
fcomps
jbe
aam
hlt
mov
out
and
adc
decl
sbb
stc
dec
data16
in
adc
les
adc
mov
jge
sbb
sub
sbb
xor
push
jle
sarb
mov
js
and
movsb
lcall
mov
and
rcr
cmp
push
mov
and
or
sbb
imulb
push
mov
sbb
idivb
mov
fincstp
inc
cmc
push
xor
pop
sub
mov
bound
subb
imul
mov
lods
mov
lds
mov
push
cltd
popf
pop
aad
lcall
dec
arpl
jne
sbb
call
call
jne
and
fsub
enter
pusha
lret
lret
add
data16
jno
inc
mov
test
adc
je
enter
push
pop
insl
jne
sbb
sub
adc
adc
pop
and
dec
xchg
inc
jmp
mov
push
mov
mov
pop
pusha
cmp
add
cld
test
mov
in
xor
cli
or
pop
push
xor
mov
insb
xor
mov
movsl
dec
pushf
fmuls
div
mov
cmpsb
lret
out
xchg
jl
jl
movsb
scas
in
cwtl
loop
cmp
outsl
dec
inc
sbb
xchg
cld
das
or
loopne
scas
xor
cli
sti
push
imul
leave
aaa
in
mov
and
movsl
push
sub
inc
dec
cmpsb
push
sbb
and
hlt
movsb
mov
popa
sbb
bound
xchg
xor
mov
shll
mov
out
push
cltd
mov
aad
mov
sbb
xor
int3
shlb
xor
iret
or
dec
sbb
clc
inc
xchg
shl
int3
push
mov
jbe
pop
push
notb
sbb
adcl
xchg
iret
loope
dec
or
fs
pop
scas
cmpl
pop
mov
lahf
movsb
push
and
adc
jl
popa
and
push
xchg
arpl
add
xor
mov
push
push
xchg
test
jecxz
mov
call
aas
mov
add
sub
arpl
xchg
sub
pop
push
shlb
jbe
test
pop
pop
dec
adc
xchg
xchg
mov
inc
pushf
dec
jae
call
rclb
jmp
mov
cmpsl
out
je
sub
shr
pop
mov
sbb
std
test
sbb
mov
scas
push
test
xchg
mov
rcll
addb
pop
add
incl
or
sub
movsb
aad
call
outsb
jnp
mov
movsl
mov
mov
fs
dec
adc
push
push
cmp
mov
into
jbe
dec
outsb
arpl
mov
pop
mov
mov
aaa
das
sbb
push
mov
loop
mov
ret
mov
repz
loop
aaa
pop
cmp
insl
test
cld
mov
xchg
dec
mov
push
add
imul
mov
push
out
ret
incb
in
mov
in
inc
xor
jbe
in
xchg
sub
mov
into
popf
mov
add
je
mov
jg
out
lcall
xchg
push
ss
and
cmp
loopne
dec
add
jle
xor
dec
jmp
jo
jnp
aad
out
pop
add
popa
pushf
cmpsb
lea
add
bound
das
scas
lcall
sub
popa
dec
mull
rorl
mov
std
mov
cwtl
jmp
jge
orb
outsl
or
and
inc
pop
fwait
rcr
xchg
or
cwtl
adc
dec
inc
leave
cmc
cmpsb
sbb
popa
sti
xchg
dec
cmp
jne
jmp
lcall
popa
and
gs
jp
push
loope
fwait
fs
pop
pop
pusha
jbe
lcall
test
popf
jo
jl
mov
xorl
js
pusha
das
or
mov
leave
popa
insl
repnz
mov
call
mov
mov
push
arpl
inc
sub
test
movsl
push
sub
pop
xchg
xchg
xlat
inc
pop
xchg
mov
in
sub
and
mov
into
out
cmpsl
imull
push
sbb
inc
pop
inc
decb
sub
div
mov
loopne
adc
js
fimull
adc
sbb
inc
and
jecxz
and
test
mov
sub
imul
in
sbb
mov
sbb
sbb
add
cli
pop
jl
ja
xchg
popa
imul
ficoms
cmp
nop
repz
test
stos
jae
ljmp
push
daa
sbb
adc
cwtl
sti
push
xlat
fnsave
cmp
inc
jae
mov
dec
lret
pop
iret
pop
xor
adc
dec
inc
loope
imulb
mov
enter
aad
fisubl
insl
outsb
aaa
cmp
mov
cltd
into
sub
or
out
sti
cmp
xchg
adc
data16
test
popf
sarb
dec
inc
push
mov
in
jbe
mov
fnsave
shl
lcall
add
insb
mov
xchg
cli
out
cmc
sub
add
inc
add
jmp
outsb
hlt
mov
sbb
jmp
jbe
outsl
leave
stc
inc
loopne
lahf
cmp
mov
dec
bound
adc
out
sub
ret
in
fcmovnbe
mov
aas
repz
out
xlat
xor
cld
repz
pop
jb
sti
test
sahf
cmp
sbb
movsl
test
enter
adc
push
add
ror
xchg
push
in
test
js
sub
rcl
fcmovb
pop
inc
mov
out
push
xchg
inc
popf
arpl
add
mov
das
fstpt
sarb
sub
push
sbb
aam
int
inc
addr16
scas
int
test
mov
mov
rorb
out
push
mov
lcall
lock
xchg
jae
nop
addr16
mov
cmpb
sub
clc
adc
cmp
scas
lret
inc
and
jge
xlat
jp
inc
sub
sub
dec
test
in
into
fs
jecxz
rol
movsb
stos
add
into
cli
cvtps2pd
jno
aad
call
lcall
dec
adc
lods
aad
mov
add
jecxz
call
in
add
aas
and
mov
mov
movsb
sub
jne
sub
lods
int3
push
mov
xor
and
add
ljmp
sub
or
lock
out
adc
out
ficoml
movsl
xchg
sbb
or
dec
repnz
sub
call
add
sahf
cwtl
xor
icebp
pop
dec
jae
or
inc
cmp
cmp
mov
push
enter
jae
test
xor
inc
xchg
repnz
xor
andl
jecxz
xorb
scas
ja
sarl
imul
xchg
sbb
jmp
sub
mov
rol
jno
arpl
test
stos
jne
mov
mov
mov
mov
scas
cld
call
lahf
filds
or
push
pcmpeqw
xor
mov
inc
shlb
arpl
xlat
std
mov
jmp
add
inc
dec
popf
rcr
or
leave
pop
push
sbb
ss
jno
loopne
clc
mov
sub
jno
sbb
push
insb
rolb
out
call
out
add
inc
cs
outsb
mov
icebp
rorb
loop
mov
jge
into
loopne
or
call
mov
adc
pop
xor
adc
cwtl
into
cs
inc
out
push
ljmp
cmpsl
pop
sbb
hlt
xor
push
insl
mov
sbb
or
push
aas
mov
sbb
scas
daa
pushf
and
lds
std
outsl
or
sub
gs
push
jne
or
mov
xchg
mov
aad
adc
lods
xchg
lea
add
pop
inc
sbb
adc
xor
mov
xchg
dec
adc
outsl
adc
jb
cmpsl
leave
push
mov
sbb
and
xchg
or
sbb
cmpsl
mov
or
outsb
mov
lcall
cli
add
outsb
pop
pop
sbbb
or
lcall
pop
ret
pop
mov
add
ljmp
xchg
pop
out
push
mov
aad
pop
jo
xor
stc
outsl
mov
insl
shrb
movsb
sarl
ljmp
dec
or
mov
lret
enter
cmpsb
dec
push
data16
inc
ss
inc
sbb
dec
cwtl
jno
jae
gs
mov
cmp
stos
cmpsl
mov
sub
ljmp
and
mov
adc
cmp
daa
jnp
sti
xlat
jne
push
mov
xor
push
xor
sbb
outsl
and
pop
or
movsbl
pop
scas
adc
mov
cmp
aam
loop
sub
adc
je
pop
nop
scas
leave
xorb
push
out
aad
daa
enter
sbb
cmp
or
or
and
xchg
jle
lea
push
leave
pop
popa
pop
fadd
orb
popa
dec
insb
ret
add
jecxz
paddusw
xchg
movsl
inc
sbb
andb
addr16
add
add
test
or
in
cld
iret
dec
cmpsl
jg
adc
pop
pop
out
stc
or
cltd
and
pop
sub
add
loop
loopne
cld
sub
or
insl
jnp
mov
es
popa
insl
iret
lods
icebp
and
int3
xor
icebp
add
add
cmp
pushf
cwtl
sbb
dec
mov
xchg
xchg
shr
inc
jecxz
adc
scas
decl
sbb
fs
ret
cmpsb
sbb
movsb
out
test
push
push
outsb
sub
add
xchg
xchg
dec
mov
sbb
test
mov
aad
arpl
aas
sbb
in
fcomps
lock
mov
jmp
lock
cmp
lods
xor
loope
cmc
enter
shl
and
aad
int3
mov
mov
scas
ljmp
add
cmovge
aas
std
fmuls
and
cmp
scas
jno
repnz
loop
gs
jp
jmp
mov
out
jecxz
out
pusha
mov
fsubrs
sub
insl
jno
mov
lahf
jge
xor
bound
mov
aaa
push
int3
das
lcall
int
and
repz
dec
push
cs
push
jg
xchg
dec
mov
cmp
outsb
xchg
cmp
and
stos
push
jne
xchg
mov
adc
insb
daa
daa
das
mov
leave
aad
mov
sbb
fld
arpl
mov
and
imul
cmpsl
mov
scas
arpl
imul
rcrl
xchg
arpl
popf
adc
lds
xchg
mov
and
and
lea
repnz
call
stos
sub
sbb
jecxz
jle
dec
pop
icebp
cmc
jp
pop
and
mov
dec
sbb
jmp
mov
lret
jmp
jbe
leave
subl
adc
insl
arpl
push
pop
adc
pushf
inc
pop
push
lret
daa
mov
jo
mov
mov
lods
pop
inc
dec
movsl
adc
sarl
lea
sti
imul
xchg
jne
les
hlt
movsl
mov
insb
iret
xchg
inc
fwait
mov
dec
mov
mov
or
into
dec
lods
shrb
cli
arpl
data16
xchg
insl
addb
pop
and
dec
ja
outsb
cli
sub
fldt
rcrl
shr
push
inc
les
sbb
lea
das
sahf
ja
aam
and
aam
out
sub
jp
sbb
xchg
pop
jb
cli
loopne
mov
addr16
xchg
push
mov
addb
jo
iret
xor
pop
push
in
fs
repz
push
divb
fwait
aam
popf
in
sub
loop
call
lret
mov
dec
aas
xor
and
sahf
xchg
xor
mov
imul
in
xlat
in
outsb
scas
xchg
pop
std
push
cli
cmpsl
push
dec
lea
jmp
mov
stos
cmp
xchg
lahf
mov
jg
call
sbb
sub
sahf
rclb
push
lods
pop
mov
andb
cmp
dec
adc
push
or
mov
cmp
mov
rorl
or
xchg
add
add
sbb
orb
js
stc
push
jo
sti
out
enter
or
test
jnp
add
pop
xor
push
pop
js
inc
and
sahf
test
jno
or
lcall
pop
or
mov
outsb
cmpsb
adcb
mov
insb
mov
loope
jl
dec
test
mov
pop
xor
xchg
sub
push
jle
aas
dec
or
dec
sbb
mov
adc
aam
mov
fisubrs
xchg
and
pop
sbb
inc
mov
lods
cmp
xchg
aad
rorl
adc
orl
add
xlat
push
movsb
std
out
pop
mov
push
aaa
sbb
into
out
call
mov
lcall
in
dec
aad
adcl
pop
das
addb
xor
mov
dec
push
ja
xchg
push
ss
add
movsl
adc
fsubs
ljmp
cmpsl
outsl
inc
adc
dec
das
movsl
out
mov
xor
test
in
push
dec
mov
cmp
faddl
cs
shlb
add
sbb
cmpsb
mov
mov
lret
dec
push
inc
jne
mov
fistl
in
push
aas
leave
stos
aam
scas
jno
xchg
das
and
test
out
inc
sub
stos
inc
xor
pushf
in
jp
nop
pop
in
cwtl
fcom
push
jnp
or
push
lcall
adc
shrb
dec
and
and
mov
or
and
pusha
sti
mov
xchg
daa
pop
mov
jp
int
mov
push
add
xor
jle
xchg
loope
lods
adcl
and
std
aaa
test
lahf
push
push
xchg
xor
sub
addb
mov
add
scas
mov
popa
fsubs
cmc
jmp
jnp
std
pop
loopne
or
ror
cmpsb
push
int
in
xlat
test
dec
loope
cmp
xlat
js
mov
mov
in
lods
enter
stos
mov
push
idivl
popa
mov
les
cmp
sbbl
sub
ds
mov
sub
cld
push
imul
sbb
ds
decb
ljmp
cli
sbb
mov
sbb
push
popa
cli
cmp
xchg
push
lods
pop
jmp
subb
xor
je
cmp
mov
mov
fs
push
mov
ja
jg
push
inc
mov
jmp
or
sub
sahf
shlb
cmp
sbb
imul
add
jae
gs
pop
daa
pushf
int3
mov
es
stos
pop
push
mov
and
xor
pusha
test
ficoml
xchg
aas
lds
mov
mov
out
outsb
std
es
adcb
nop
pusha
test
sub
sahf
pop
or
rcrl
pop
jne
mov
inc
pop
das
in
cld
adc
cmp
mov
repz
in
rcr
dec
push
dec
sarb
adc
mov
stc
adc
inc
je
cmp
pop
mov
ret
sub
push
movsb
idiv
push
pop
cmp
or
cmp
dec
mov
fadd
stos
outsb
shl
mov
jbe
daa
xor
lahf
pushf
scas
push
lds
movsb
ja
iret
lock
outsl
outsl
push
arpl
sub
jecxz
mov
ret
test
pop
push
xchg
ss
insl
nop
xor
jbe
inc
cmp
sahf
push
pop
adc
mov
fldl2e
dec
xchg
movsl
icebp
sbb
loopne
mov
fwait
cmpsl
cmp
jl
pop
repz
jecxz
mov
dec
push
mov
jbe
in
xor
in
mov
ss
pop
sub
or
hlt
xchg
loope
mov
movsb
icebp
adc
jg
jns
sub
js
test
sbb
pop
push
xchg
push
pop
aas
fildll
fisubrs
push
jns
pop
mov
hlt
mov
push
movsl
jle
mov
test
or
xchg
loope
inc
int3
mov
dec
lock
mov
jl
jecxz
add
mov
rolb
dec
ret
fildl
out
shlb
int
sub
adc
cmpsl
mov
mov
dec
int
pop
xchg
jb
adcb
pop
mov
or
lods
imul
leave
mov
repnz
adc
sub
orl
and
loope
mov
fnstsw
out
mov
mov
cld
xchg
pop
pop
sti
inc
cmc
xchg
jmp
daa
dec
pusha
fildl
ret
test
adc
pusha
pop
mov
mov
scas
loope
stc
xor
mov
xor
testl
insl
pop
add
out
decb
inc
adc
mov
clc
fsubrs
in
sahf
dec
in
add
pushf
popf
roll
mov
not
into
mov
push
iret
flds
out
stos
and
movsl
adc
xchg
test
jmp
dec
and
push
xchg
pop
ds
mov
sub
fstps
inc
arpl
dec
loope
adc
ss
pop
in
push
cmp
mov
fisttps
push
jns
outsl
push
mov
pop
js
dec
pop
xorl
ljmp
jp
mov
mov
lcall
lcall
lods
lods
ljmp
dec
or
pusha
and
mov
dec
push
push
add
mov
push
pop
lds
dec
mov
mov
pop
pop
jge
push
sbb
scas
lods
push
lods
data16
add
int3
sbb
pop
ret
sub
adcl
fimuls
adc
out
push
mov
in
pop
pop
repnz
push
test
ret
mov
lcall
jbe
cmp
in
ret
out
jns
jne
push
aaa
jnp
call
addl
mov
cwtl
jbe
in
dec
xor
fisubrl
lods
or
call
aad
jmp
pop
scas
xor
xor
xorl
mov
mov
lret
imul
sarl
hlt
push
push
jbe
mov
xchg
cmp
pop
outsb
hlt
insb
lret
cwtl
inc
lret
out
into
rcrb
loope
std
xlat
loop
adc
cmc
cmc
in
nop
mov
jge
or
in
xchg
lea
pop
les
popa
ret
lods
jmp
and
popa
sbb
ss
mov
clc
arpl
test
adc
sbb
or
pop
outsl
loope
mov
loopne
and
dec
jp
loopne
fs
jbe
adc
ret
sbb
xchg
loope
pop
aas
pop
or
sti
jne
pop
test
es
subb
lret
pop
push
inc
xor
and
push
jns
movb
ss
mov
mov
sbb
inc
pop
mov
mov
push
sbb
or
leave
imul
lds
jmp
cmp
push
dec
or
jno
movsb
or
mov
pop
jne
mov
ret
sbbl
xchg
out
js
dec
mov
lcall
filds
lahf
push
test
xor
mov
sub
imul
js
cmp
loop
jae
pop
lds
addr16
ret
xchg
inc
mov
daa
dec
and
lret
xchg
or
push
mov
in
sub
mov
xacquire
ja
lods
popa
stos
pop
negl
cmp
xchg
inc
int3
imul
enter
jge
jmp
push
pop
cld
dec
shrl
mov
sahf
xlat
cmp
mov
xor
and
or
cmp
adc
mov
outsb
out
push
push
xor
into
repnz
in
nop
jp
mov
and
popf
cli
mov
call
jne
lea
pop
and
dec
push
dec
out
xchg
pop
test
arpl
jno
cmpsl
ror
cmp
not
mov
insl
cmp
js
movsb
test
inc
xchg
lea
popa
push
mov
xor
addr16
sub
push
xor
or
mov
shlb
and
repz
sbb
pusha
adc
dec
stos
jmp
cld
jno
out
adc
mov
mov
sbb
inc
scas
fcmove
push
arpl
incl
scas
sub
in
movsl
jecxz
sbb
cmpb
bound
inc
insl
mov
xchg
sbb
mov
cld
les
enter
lcall
inc
call
push
cmpsb
pop
sbb
test
push
cld
sti
mov
push
mov
xchg
cmpsl
das
push
or
out
shl
test
scas
sub
sbb
add
loop
iret
pusha
jne
add
pop
mov
shlb
xor
mov
and
sbb
xorl
rcrb
sub
bound
xor
adcb
stc
inc
gs
mov
ds
sarl
mov
push
enter
pop
jbe
adc
pusha
mov
jo
xor
sbb
cwtl
pop
sub
xchg
jle
js
pop
fldenv
imul
lcall
imul
inc
push
fimuls
int
push
ja
xchg
arpl
mov
xor
iret
pop
ret
and
fimuls
outsb
std
ss
jmp
jle
repnz
fdivl
addb
test
loopne
into
cmp
adcl
and
xor
add
pop
aas
fdivr
dec
adcb
add
lods
mov
popa
roll
mov
sarb
fistpl
push
data16
cmp
insl
sbb
je
fisttpll
rcll
lcall
add
hlt
sub
sub
or
xchg
rcrl
adc
pop
inc
pop
pop
cs
ret
add
pop
xchg
lods
mov
daa
mov
or
jmp
jmp
in
movb
xor
stos
jecxz
in
fucomip
dec
ret
add
push
jge
repz
into
push
test
mov
pop
repnz
mov
ret
out
xchg
notl
enter
jae
sub
repnz
dec
sbbl
subb
cmp
xchg
sbb
ffreep
push
dec
cmp
pop
jge
lods
inc
xchg
xor
aaa
test
insb
aas
dec
pusha
int
add
pop
dec
fnstcw
ljmp
arpl
mov
push
ficoml
xchg
pop
mov
dec
popf
jl
or
push
inc
loop
dec
mov
mov
add
mov
jmp
ret
mov
and
mov
inc
jl
ret
ss
shll
jns
and
fiaddl
inc
cmp
mov
jb
cmp
pop
xor
adc
test
xchg
test
popa
cmpsb
mov
adc
mov
jno
jno
xchg
insl
mov
mov
std
insl
rcrb
sbb
subl
ja
mov
js
leave
mov
lods
mov
push
pushf
aam
aaa
mov
sti
stos
pop
cld
out
push
sub
daa
imul
mov
or
jb
sub
xchg
out
mov
sub
jge
lahf
hlt
or
loopne
loop
popl
popa
ret
xchg
pop
out
xchg
cmpsb
sbb
mov
mov
pop
or
cmp
push
sbb
adc
xchg
inc
mov
rclb
pop
enter
cs
mov
js
dec
cs
outsb
sub
lods
or
and
jae
sti
loopne
push
scas
cmc
outsb
sar
adc
push
pop
mov
xchg
popf
pop
movsb
add
adc
sub
ljmp
push
cli
xchg
out
push
push
jecxz
nop
dec
mov
cmpb
cmp
movsb
cmp
shll
push
out
popa
lea
aas
pusha
sti
inc
push
mov
and
cmc
add
cmp
dec
in
jb
xlat
sbb
shlb
mov
push
pop
lcall
clc
and
adc
push
pop
pop
stos
xor
pop
cli
mov
xor
outsb
mov
shrb
cli
nop
das
mov
adc
adc
push
js
stc
jnp
fimuls
cltd
shl
repz
fcmove
stos
xchg
dec
push
fldcw
cli
pop
loope
and
mov
rcrb
push
loope
sahf
or
pop
mov
aaa
mov
movsb
dec
ss
stos
inc
rcrb
push
aas
iret
std
lds
lret
adc
aas
outsb
xor
mov
addb
xchg
sbb
push
dec
test
shll
aas
lds
xor
mov
mov
jmp
cmc
daa
fcoms
adc
sarb
sub
int3
aad
sahf
sbb
sub
fdiv
push
andb
mov
mov
cmc
not
pop
movsl
repnz
fisubl
sbb
push
pop
xchg
sti
sub
push
sbb
mov
lods
fistps
das
loopne
xchg
addr16
or
mov
outsb
sub
add
xor
mov
cmp
fdivrs
push
cmpsb
xchg
pop
subb
add
mov
mov
cld
mov
jne
jb
roll
popl
lods
les
push
je
sub
fistpl
outsb
push
adc
aam
and
xchg
pop
repz
ret
movl
and
test
add
imul
jne
dec
or
push
sbb
dec
cmc
popf
lea
push
pop
leave
add
inc
scas
ret
cmpsl
js
andb
add
nop
add
sub
inc
inc
scas
jne
inc
out
cwtl
test
sub
scas
mov
mov
inc
out
in
push
xchg
cmpsb
lret
cli
stos
lahf
or
or
sbb
push
xor
xchg
test
ja
scas
dec
adc
push
push
insb
dec
leave
pusha
inc
dec
pop
sahf
cmpsb
jbe
shlb
movsl
lret
les
jg
jbe
out
xor
xchg
jmp
cs
out
push
mov
sbb
bound
inc
fucomi
dec
mov
test
out
popa
and
adc
fnstenv
lods
add
into
sub
pusha
jl
xchg
inc
scas
movsb
jo
mov
fmul
jbe
mov
sub
add
sub
inc
leave
pop
fsubl
hlt
sub
es
repz
lods
mov
add
jnp
pop
xchg
divl
mov
inc
xor
das
mov
jl
adc
and
mov
lods
inc
dec
adc
testb
shlb
inc
add
inc
ljmp
pop
daa
arpl
fcmovnb
push
sbb
mov
mov
jle
jge
lret
mov
ja
repz
mov
jge
data16
jl
inc
fadds
mov
or
dec
rcr
sub
daa
xchg
pushf
out
sub
mov
mov
sub
mov
dec
scas
cmpsb
gs
cmp
push
inc
pop
call
jle
aad
mov
cwtl
rcll
mov
movsb
scas
out
dec
and
fsubl
adc
xor
push
repnz
dec
or
in
add
mov
cs
push
out
ja
pop
stc
or
jb
pop
fidivrl
cltd
sti
cmpsb
jp
xchg
std
fldl
pusha
fnsave
xchg
jns
int
mov
or
jecxz
loope
test
push
jmp
push
sub
xchg
or
mov
xor
push
jne
cmovns
or
sub
dec
and
dec
dec
dec
fwait
loop
in
stos
mov
and
mov
les
add
adc
xor
loop
stos
rol
mov
push
stos
icebp
aad
push
out
sub
jne
stos
add
mov
mov
fidivl
fneni(8087
sub
pop
testb
mov
jae
push
in
mov
sbb
dec
or
pop
lea
adc
mov
mov
push
ret
mov
pop
push
out
or
mov
sub
and
orl
sub
repz
xchg
xchg
repnz
repnz
mov
fmul
xchg
fidivl
lret
pop
push
jae
push
inc
and
adc
decb
pop
jp
xchg
mov
outsl
sub
mov
imul
movsl
imul
out
push
push
rcll
fidivl
and
sbb
bound
scas
out
mov
push
dec
scas
rolb
mov
out
push
jo
call
inc
push
sbbl
movsl
pushf
inc
xor
push
mov
fimull
xchg
aad
xor
in
lds
push
out
neg
rcr
sahf
outsb
xchg
and
pop
and
pop
push
push
xchg
mov
fnstenv
mov
xlat
ja
je
xor
in
sub
rcll
or
dec
xor
and
ficoml
iret
jo
loope
jg
leave
bound
into
sbb
fsubrl
or
or
inc
dec
xchg
mov
sahf
mov
jnp
add
and
xor
adc
arpl
cmpsb
add
xor
jo
and
mov
push
pusha
or
cmc
sub
dec
sbbb
rcrb
inc
cwtl
and
in
test
add
addl
imul
incb
repnz
hlt
movsb
xchg
fcomps
mov
fdivrs
lea
mov
test
pushf
mov
addr16
xor
test
pop
pop
jle
add
adc
jge
push
daa
jmp
pop
movl
jg
or
push
dec
xor
test
pop
jge
gs
xchg
clc
dec
scas
inc
adc
wbinvd
in
and
lea
xchg
pop
jl
fistl
jo
repz
es
dec
sbb
sarl
lea
call
aam
xlat
in
or
pop
xchg
inc
aam
cmp
sub
add
cmp
gs
add
js
dec
shlb
dec
xchg
aaa
mov
xchg
add
ljmp
movsb
cltd
sbb
inc
and
sbb
jne
push
mov
cmc
setne
or
xchg
fstpt
std
lahf
xor
loope
jl
pop
idiv
aad
scas
pop
inc
sahf
test
ficoms
dec
in
je
cmpsb
imul
add
cld
adc
int3
xchg
aad
or
cmpsl
cwtl
pop
addr16
fiadds
scas
orl
repnz
cmp
out
int
ret
movl
inc
xor
inc
mov
test
sbb
das
sahf
xchg
lds
mov
mov
xchg
shll
dec
mov
adc
je
leave
into
xor
aam
push
jecxz
out
inc
cs
std
sbb
imul
jbe
mov
std
adc
jnp
xchg
dec
pop
out
adc
sbb
out
cmp
xchg
pushf
out
jge
mull
mov
pop
inc
or
decb
mov
jle
or
inc
int
jbe
sub
lahf
mov
imulb
dec
insl
and
rcrl
hlt
int3
pop
gs
aad
out
out
stos
or
daa
xor
cmp
movaps
xchg
enter
call
inc
inc
mov
notb
fsubp
pop
sub
xor
rorb
mov
scas
inc
push
sbb
pop
push
jno
lcall
enter
pop
or
xchg
mov
das
ja
cmc
loopne
pop
push
imul
xor
jg
xorl
fmul
add
cli
lgs
dec
inc
cmp
dec
adc
repz
stc
js
pop
out
fwait
rcrb
enter
and
xchg
mov
int3
andb
and
dec
ds
js
cmp
pushf
nop
sbb
push
add
pop
in
ret
fdivrs
rol
sbb
xchg
lods
mov
stc
jl
popa
lock
imul
jo
sub
aam
cmpsb
jmp
int
mov
push
dec
pop
pusha
pop
inc
outsb
pop
cmpsb
pusha
jmp
in
sub
and
fcoms
ret
jne
in
mov
stos
mov
stos
xlat
shlb
out
push
pop
fnstenv
push
data16
fidivs
inc
sbbl
scas
xchg
mov
mov
hlt
cs
into
cmp
pop
negl
dec
xor
sbb
sbb
out
or
sub
popf
jbe
push
xor
dec
movsb
mov
pop
xchg
dec
sarb
push
jg
jno
in
shll
jmp
jns
xchg
push
xchg
outsl
out
cmp
out
out
mov
sbb
inc
push
jle
arpl
dec
xor
scas
iret
inc
shl
and
adc
mov
int3
jmp
stc
lahf
jge
and
xor
xorb
fistl
or
aad
into
lret
and
push
sub
jns
pop
loope
pop
insb
push
andl
in
test
das
iret
add
sub
shl
aad
mov
push
jb
enter
aas
mov
cmpb
nop
mov
adc
mov
frstor
jno
popf
lods
xor
das
aaa
aam
notb
xor
repnz
orl
push
push
repnz
xor
push
mov
pop
push
mov
push
repz
pop
ret
and
sub
loope
fucomp
sub
ja
push
inc
or
sahf
fcmovne
push
fxch
push
data16
mov
or
mov
testb
push
xor
mov
push
inc
jge
jb
icebp
int
push
js
jne
pop
or
jnp
popf
cmpsb
sbb
or
mov
inc
lcall
addb
fildll
and
xchg
call
mov
mov
cmpl
movsb
push
sub
stc
int
mov
stos
imul
sbb
andl
cs
sub
or
inc
movsl
or
movsb
xlat
mov
sbb
mov
xor
movsl
xchg
ret
orl
js
mov
sub
mov
pop
aaa
xor
jae
std
and
xchg
fninit
xor
addr16
lcall
in
push
les
jge
cmp
roll
push
gs
ja
ja
mov
or
lock
lcall
jmp
mov
iret
lcall
jmp
sbb
jl
aad
cmp
sbb
cmp
jg
popa
sbb
xor
adc
popf
cmpsl
dec
lock
popf
out
mov
ror
mov
push
inc
xchg
adc
sbb
test
shrb
cmp
inc
stos
call
insl
int
jns
fsubp
cwtl
adc
enter
movsb
push
hlt
add
jge
inc
jg
xchg
insb
notl
sbb
xchg
aam
inc
push
push
mov
and
jp
inc
inc
lret
dec
in
mov
xor
pop
mov
adc
sahf
push
or
sub
cmp
movl
ja
outsl
mov
insl
shlb
xor
ret
es
and
flds
sbb
adc
in
rcll
test
in
in
popf
push
mov
push
xor
xchg
mov
or
gs
sub
imul
rcrb
xchg
icebp
cmp
pop
insb
mov
out
dec
adc
cmp
shll
je
cs
dec
sahf
pushf
sub
imul
cmp
jg
lock
and
jmp
jnp
xor
sub
bound
test
push
sbb
sub
test
mov
sbb
jns
cmp
mov
cmp
adc
xor
into
jge
jle
ss
add
push
cwtl
imul
stc
cli
push
rcrl
sahf
mov
lods
dec
ret
jmp
xor
mov
push
pop
jl
ja
xor
in
and
pop
or
pop
add
sub
mov
addb
fildl
daa
xor
pop
jp
adc
into
pusha
std
test
dec
lds
incb
push
jle
arpl
sbb
pop
lahf
imul
repnz
data16
mov
dec
cs
jg
xor
out
into
fcomps
sbb
jecxz
mov
aas
mov
daa
ds
xor
sub
jo
fdivs
mov
dec
jb
pop
push
lret
pop
int3
stos
add
in
mov
xchg
repnz
cmc
and
jle
cwtl
test
ds
fisubs
cwtl
repz
adc
inc
sti
pop
inc
mov
mov
add
jbe
scas
sarb
inc
cwtl
dec
cmpsl
and
dec
xchg
leave
dec
cmp
mov
in
ss
sub
outsl
into
and
mov
sub
inc
nop
jmp
add
rol
mov
ljmp
mov
mov
pop
mov
sbb
jmp
aas
sti
pushf
mov
shll
mov
addb
test
jmp
lret
jno
fdivrs
loope
jbe
and
rclb
sbb
scas
psrlq
hlt
imul
jne
jae
jp
fiaddl
repz
push
mov
stc
inc
push
arpl
push
fidivs
loopne
xchg
insl
or
aas
dec
mov
push
sub
inc
in
loope
inc
sbb
mov
into
push
cld
or
aad
dec
fbstp
jnp
stc
aam
push
jl
jl
out
roll
call
and
sbb
movsl
or
mov
push
stos
inc
mov
nop
cs
int3
jo
jb
test
pop
mov
popa
in
dec
ret
aas
sub
xor
out
leave
add
mov
jg
enter
test
sub
sahf
push
cmp
pop
popf
mov
fwait
lcall
pop
rorl
dec
adc
and
scas
cli
and
ret
jnp
jle
pop
or
incb
add
jmp
lret
imul
lret
ds
mov
ficoml
fdivs
jno
mov
push
fcomip
dec
cmpsl
cmp
dec
and
xchg
das
pop
or
lock
mov
imul
dec
divl
call
lcall
cli
dec
loop
jbe
sbb
sbbb
xchg
into
xchg
std
lods
jmp
decb
insb
mov
daa
lret
jne
scas
jns
mov
push
pop
xor
xchg
push
and
lahf
jbe
adc
push
xchg
insb
xchg
rcl
add
outsl
movsb
mov
out
sti
imul
int
int3
clc
sub
xchg
test
add
fsubrl
enter
rcll
aas
xchg
cmp
fsubrs
je
pop
fmuls
pop
mov
pop
push
inc
in
lods
fcomps
das
rcrb
pop
push
imul
cwtl
mov
inc
adc
lods
push
je
pop
dec
rolb
int
mov
cltd
fwait
in
cwtl
rcr
js
push
jge
lahf
fildl
push
jo
ds
pop
xchg
movsl
mov
fisttps
test
or
insl
mov
js
inc
icebp
jmp
aaa
dec
nop
fisubrl
iret
xor
dec
and
test
lods
and
loop
rclb
mov
adc
xchg
fwait
aas
les
clc
mov
fidivrs
rolb
loop
mov
xor
jge
sbb
mov
sub
and
dec
les
pop
lret
jge
xchg
push
mov
in
das
cmpsl
mov
call
mov
imulb
inc
xchg
lock
mov
mov
cmc
pushf
lahf
lret
stos
sbb
pop
scas
add
orb
adc
dec
rolb
pop
mov
mov
cmp
and
in
ret
scas
and
pop
cmp
push
jbe
xchg
notb
mov
sbb
mov
pushf
push
mov
cmp
pop
aas
xchg
xchg
jl
dec
cmc
xor
loope
adc
lahf
dec
lods
in
bsf
and
in
sub
sahf
push
rep
orl
mov
adc
jnp
loop
ljmp
sbb
lahf
scas
scas
push
add
ljmp
popa
imul
cs
in
pop
fistpl
jecxz
add
notb
sub
in
jp
dec
mov
cmp
div
movb
mov
aam
fwait
fwait
or
repz
push
das
mov
fs
fwait
cmp
cmp
imul
test
pop
movsl
ds
pop
jle
cmpb
fldl
mov
inc
xchg
es
or
lahf
faddl
adc
stc
lret
pop
mov
ljmp
mov
sar
sti
out
xchg
jo
pop
sub
insl
fsubrs
scas
in
std
int
ljmp
dec
lock
mov
mov
add
fstl
jp
mov
jbe
addl
aaa
pop
bound
cld
ucomiss
cmp
adc
or
jl
loop
xchg
xchg
pusha
sti
xchg
cmp
add
sub
hlt
adc
mov
adc
cmp
ror
imul
mov
cmpl
fldcw
out
inc
mov
jnp
xor
mov
movl
out
test
pop
arpl
lods
push
push
mov
insb
fwait
adc
data16
addl
pop
clc
pop
mov
or
jne
mov
push
ss
enter
popf
call
ret
fidivs
mov
inc
int3
in
or
lods
mov
and
loopw
mov
xor
jbe
xchg
sbb
sbb
dec
sub
clc
or
inc
cmp
daa
mov
xchg
or
pop
cmpsb
jns
jge
dec
shlb
xchg
cld
bound
jge
mov
mov
enter
repnz
push
xchg
cltd
push
sti
sahf
lret
add
popa
dec
pop
xor
mov
aad
mov
push
std
out
dec
sub
xchg
inc
fldt
mov
rorb
inc
xchg
mov
addb
inc
pop
loope
jp
xlat
leave
hlt
adc
stc
xchg
pop
jle
mov
cld
add
sub
jb
and
push
mov
xor
test
fistps
sar
mov
notb
mov
je
inc
fmuls
outsb
cmp
outsl
cmp
jle
mov
mov
cmc
pop
outsl
and
stc
imul
mov
add
int3
mov
sub
mov
cmp
jae
and
test
loope
in
mov
jle
adc
xchg
jo
out
mov
iret
adc
mov
and
filds
or
and
xor
push
sub
call
pop
sbb
icebp
lret
inc
cmpsb
imul
lods
cmp
adc
lret
sbb
mov
add
in
mov
adc
xor
stos
xchg
js
in
jno
in
pop
xchg
or
cmp
pop
inc
pop
inc
sub
stos
dec
int3
adc
icebp
jno
idiv
or
popf
pusha
pusha
lahf
or
lret
out
push
int
movsl
xor
ds
push
push
pop
mov
mov
push
add
xchg
push
add
pop
cmp
mov
push
lret
cltd
jecxz
inc
jbe
mov
je
enter
cmpsl
jg
mov
lds
jp
rcrl
data16
or
scas
shlb
fucomp
into
jo
jge
int3
or
fnstsw
loope
cltd
jnp
mov
xor
mov
lahf
dec
cmovns
repnz
lods
jle
mov
jle
xchg
jmp
dec
or
adc
sub
dec
pop
nop
lds
mov
es
cmp
inc
in
jno
aam
xchg
jge
adc
lds
ja
cwtl
in
add
clc
xor
icebp
shl
cmp
arpl
test
xchg
cmp
mov
das
mov
popf
out
ret
push
fwait
push
addr16
int3
insl
push
push
xchg
test
push
lea
dec
call
stos
add
pop
fisubrl
jbe
shrl
jb
cmc
fwait
je
push
cwtl
mov
xor
adcl
aad
cld
divl
lea
pop
push
outsl
cltd
pop
sub
enter
mov
sub
inc
mov
or
sub
in
out
jno
adc
cmp
cwtl
sahf
push
ljmp
pop
in
gs
pmuludq
inc
push
sbb
cmp
mov
js
lret
addr16
xor
ficoml
daa
and
mov
repz
push
sbb
popa
sub
mov
insl
fsubl
dec
movsb
mov
fisubrs
popa
js
jns
pop
movsl
push
imul
sub
xor
lret
in
inc
fistl
mov
pop
leave
mov
and
sub
xchg
cmp
xlat
add
mov
fdivp
icebp
jg
insl
aaa
in
call
mov
popl
jle
xor
rorb
aas
pop
pop
pop
sbb
xchg
xchg
mov
and
sub
icebp
or
shlb
ljmp
loopne
mov
ja
pusha
mov
mov
cmp
push
addr16
movsb
sahf
push
stc
mov
sbb
out
fnstenv
fwait
mov
adc
out
mov
push
dec
ja
xlat
xchg
xor
adc
push
lods
sahf
jg
in
mov
and
int3
jns
jl
jno
imul
pusha
fwait
xchg
rclb
pop
sub
inc
adc
push
fists
dec
addl
lcall
ret
fstl
mov
lret
cld
sub
fisubl
arpl
inc
jmp
or
out
fcomi
cmpsl
cltd
mov
pop
fbld
stos
mov
sub
enter
sub
pop
lcall
cmp
loop
aas
xor
aam
add
lods
aaa
int
and
jmp
add
push
adc
jecxz
aad
xor
out
in
jne
add
mov
std
lods
clc
push
into
lock
jb
jnp
adc
mov
jmp
adc
add
sbb
cmp
out
ss
jecxz
jecxz
pop
or
cltd
pop
jle
pop
pop
jg
das
xchg
sbb
push
insb
fcoms
lods
cmp
dec
inc
mov
sbb
pop
movsl
push
and
shll
dec
ss
mov
cwtl
cmp
push
cmpsl
cwtl
inc
sbb
dec
add
in
es
lahf
dec
sub
mov
cmpb
add
out
mov
out
pop
adc
stos
xor
mov
les
jmp
xor
ret
push
dec
mov
inc
add
pop
xlat
pusha
sub
xchg
arpl
ret
inc
out
or
fmull
sbb
pushf
out
mov
fstpt
dec
sarl
leave
pop
xor
or
and
add
adc
and
daa
popf
lcall
in
negb
mov
sbb
idivl
imul
jno
shll
loopne
sahf
inc
enter
jecxz
mov
jne
daa
mov
mov
lea
insb
mov
std
movsb
nop
cltd
test
sbb
in
in
iret
xlat
add
xor
into
mov
inc
push
xchg
and
mov
inc
or
jno
mov
inc
dec
scas
cmc
and
mov
jle
std
lahf
lods
notl
cltd
sub
xor
mov
adc
pop
add
mov
mov
and
ret
mov
mov
or
int3
mov
pop
insl
xchg
scas
push
sub
dec
cmp
xchg
push
xor
lret
dec
shrb
cmp
mov
pusha
adc
aas
mov
std
xor
inc
adc
or
fisttpll
add
xchg
call
hlt
into
loope
and
ficoml
out
cmp
and
es
aad
sbb
je
xlat
pop
mov
xchg
sbb
jbe
cmp
and
mov
add
and
lahf
xchg
lods
add
add
pop
cwtl
ds
dec
imul
in
xchg
adc
mov
imul
lock
aam
fwait
rolb
lea
icebp
pop
imul
push
pop
jbe
push
mov
bound
ret
xchg
imul
lret
mov
arpl
push
sub
ret
ljmp
testb
jmp
inc
and
dec
arpl
push
mov
aam
fnstsw
jno
pop
sahf
cmp
add
push
fcmovnbe
jecxz
and
mov
shlb
xor
jb
jns
les
sub
jbe
cltd
out
out
movsb
loop
addr16
pop
xor
sbb
jb
add
dec
adc
or
pop
js
jne
jmp
sti
ds
mov
adc
inc
xor
ja
fs
dec
in
jnp
les
inc
gs
or
je
pop
jb
mov
and
jg
pop
cmp
icebp
mov
ja
and
mov
inc
cltd
dec
jg
sub
cmp
mov
inc
hlt
ja
dec
dec
cmp
push
les
and
das
insb
pop
mov
iret
lock
xchg
aam
mov
mov
loopne
push
ficompl
xchg
push
cld
stc
jecxz
pop
movsb
xor
mov
fcmove
jb
xchg
shll
ror
data16
cmp
das
repnz
push
dec
xchg
shlb
add
pop
in
stos
lret
arpl
sti
pop
popa
xchg
pushf
xor
movsb
xchg
popf
iret
adc
xor
je
mov
mov
sub
sti
das
dec
les
int3
sub
mov
cmc
inc
imul
mov
in
imul
paddw
outsl
into
roll
and
inc
sarl
sbb
pusha
adc
icebp
adc
push
xchg
push
push
lcall
cli
insl
jns
sbb
mov
inc
dec
xor
enter
xor
int
pop
lods
fisubrs
push
fdivl
xor
jnp
mov
xlat
in
push
adc
scas
jmp
adc
lahf
mov
pop
and
mov
dec
mov
push
arpl
add
lods
cmp
mov
fucomip
test
xorb
decl
mov
xchg
push
test
stos
mov
mov
mov
cmp
xchg
lahf
jnp
pop
ljmp
test
in
push
mov
iret
pop
out
in
mov
in
into
test
mov
pop
cmp
inc
and
andb
fwait
insl
mov
mov
sbb
insl
sbb
imul
cld
pop
daa
inc
mov
repz
add
jle
jge
sahf
lock
ret
mov
aas
adc
pop
lods
dec
mov
das
shlb
xlat
mov
addr16
jl
dec
fldenv
sbb
add
dec
iret
mov
dec
leave
jg
ss
mov
loope
push
add
xlat
and
sbb
push
leave
lret
lret
clc
xchg
mov
mov
cmpl
pusha
add
movsl
sbb
xchg
in
out
xor
out
push
lahf
push
in
jne
lret
pushf
pop
pop
dec
call
adc
inc
cmp
sub
add
or
cmp
push
or
or
xorl
mov
ret
addl
je
push
xlat
and
fsubrp
inc
in
sub
cld
mov
xor
jne
sub
iret
jne
mov
in
xchg
cwtl
daa
adc
mov
arpl
pop
push
rorl
sbb
enter
cmp
pop
pop
cmp
mov
incl
cmpsb
inc
inc
xor
xchg
out
sbb
stos
ficompl
push
push
sarl
cld
int3
and
inc
push
fwait
sbb
pop
aad
mov
pop
add
push
jno
sub
daa
movsb
fs
add
inc
sbb
mov
and
pop
pop
and
xlat
mov
subb
adc
pushf
dec
and
repz
scas
mov
sbb
outsl
in
out
in
lret
xor
jo
ss
int3
xchg
xor
in
in
cmpsb
imul
scas
sbb
out
mov
or
add
jecxz
adc
xor
sbb
mov
push
scas
testb
fs
pop
sbb
in
out
dec
imul
cmp
and
fidivl
ja
mov
cmp
dec
fnstsw
fistl
aaa
pop
sbb
out
dec
inc
inc
aaa
pop
inc
mov
mov
inc
into
fwait
mov
sti
lea
mov
cmpsl
stc
add
in
adc
scas
in
xchg
lret
add
adc
jl
dec
testl
push
cmp
fsubs
lcall
lret
mov
and
xchg
pop
push
inc
jne
in
dec
sahf
mov
and
inc
pop
sub
sbb
pop
adc
adc
mov
ret
and
je
inc
mov
bound
sbb
lahf
mov
aam
pop
or
subb
outsl
iret
aas
pop
pop
pop
andb
sbb
bound
xor
mov
push
or
inc
dec
and
push
pop
leave
pop
pushf
mov
cmp
movsb
pop
pop
mov
dec
mov
jge
mov
addr16
push
sub
xor
add
es
sub
aad
in
lret
imul
insb
bound
add
jne
jns
push
icebp
dec
or
lcall
xchg
ja
mov
cmp
cmpl
push
addr16
fsubrl
add
test
mov
sti
jb
rolb
mov
stos
push
cmp
add
adc
int3
push
push
mov
and
repz
cld
pop
jg
jmp
pushf
addr16
or
fidivrs
jmp
mov
nop
mov
clc
lret
js
cli
icebp
in
test
cltd
je
push
popf
negl
lods
cmp
addr16
cld
jae
and
nop
pop
pop
clc
idivl
fwait
sub
imul
dec
dec
push
addb
lods
in
lret
dec
add
mov
orl
cmp
sbb
ja
fstpt
add
xor
and
loopne
outsl
adc
adc
clc
pop
rclb
out
dec
mov
fs
dec
or
cmp
js
push
jno
dec
adc
jg
mov
jno
mov
xchg
pop
adc
fsubrl
mov
pop
in
popf
inc
xchg
xor
jmp
cmp
sbb
xchg
add
test
nop
nop
in
jb
cld
pop
ljmp
xchg
xlat
inc
aam
nop
xchg
mov
jne
dec
xor
dec
sbb
mov
lods
mov
cld
sbb
jmp
shll
mov
xchg
xor
fsubr
lcall
adc
in
inc
ljmp
add
hlt
xchg
cmovno
jnp
fwait
icebp
mov
pop
daa
punpckhbw
jbe
lods
aam
xor
mov
cmp
add
sub
loopne
inc
xchg
mov
xor
mov
arpl
xchg
or
gs
jno
mov
cmp
pop
mov
outsl
in
add
jb
rolb
mov
xor
mov
es
cmc
rcll
sbb
adc
mov
mov
jne
dec
push
pushf
movsl
xchg
or
push
outsb
int3
shll
pop
cmpsb
clc
or
mov
nop
cmpsb
test
repz
incb
out
jg
pop
xchg
movsl
testb
cmp
scas
maxss
cmp
scas
xchg
xchg
aaa
dec
dec
inc
push
nop
out
dec
lock
lds
decl
or
aad
mov
sti
dec
dec
fxch
ret
pop
repz
mov
fwait
sbb
cmp
or
add
iret
and
dec
outsl
pop
subl
flds
leave
iret
loope
add
mov
or
add
push
icebp
cmpb
push
daa
orb
fistpll
stos
ret
loop
cmp
push
inc
push
mov
adcl
loope
push
das
imul
mov
cmp
das
cmpsl
lods
lods
mov
cmpsb
or
sub
cmp
loop
dec
je
out
sub
sahf
cli
cmp
xor
mov
arpl
mov
stos
sub
jmp
jge
nop
push
sub
mov
test
push
jo
sub
adc
fnstcw
ljmp
sub
aaa
mov
scas
and
repz
sub
push
frstor
lock
jg
out
jmp
mov
loope
pop
xchg
adc
insl
inc
cmp
arpl
lret
add
inc
jns
incl
mov
cld
push
cmc
lcall
fsubs
or
movsb
popf
sbb
lds
pusha
mov
or
lcall
sbb
mov
add
push
cmp
js
in
insl
cmpsb
mov
das
stc
mov
cmc
out
mov
mov
pop
add
push
aad
jp
pop
rclb
xor
xor
into
adc
clc
mov
enter
pushf
adc
daa
adc
cmpsb
mov
adcb
or
mov
dec
push
xlat
out
mov
or
add
mov
mov
ret
mov
cmp
ud1
cmp
jns
into
adc
adc
hlt
je
mov
aaa
mov
mov
push
shlb
and
inc
push
in
sbb
adc
and
stos
js
xor
mov
or
sub
aas
sti
pop
jnp
xchg
xchg
sub
jecxz
in
add
inc
xchg
adc
push
cli
mov
push
test
cmp
and
xor
ljmp
cmp
mov
imul
jg
and
idivl
sbb
pop
addl
xor
scas
push
ret
shl
mov
inc
stos
add
mov
mov
cld
repz
fsts
jbe
ja
flds
adc
push
mov
or
ret
or
mov
test
add
pop
orb
fwait
sti
mov
jno
cmpsl
adc
mov
xor
icebp
sarl
add
jb
jecxz
lcall
xchg
sub
mov
aam
lods
xor
icebp
addr16
jecxz
inc
repnz
icebp
dec
insb
sti
pop
mov
popa
daa
or
out
stos
cmp
fdivl
inc
xor
loop
sbb
mov
sub
xchg
mov
lock
bound
jle
push
sbb
jg
dec
iret
test
and
loope
cmc
rorl
lds
sub
dec
scas
and
add
jbe
int3
jo
stc
mov
aad
xor
lods
xchg
je
mov
pop
adc
inc
cmovnp
pop
sbb
loope
cmp
loopne
xchg
repz
sbb
filds
mov
icebp
add
mov
push
pop
enter
mov
mov
pop
push
cwtl
or
xchg
cld
and
std
fildl
mov
jp
je
lcall
fs
pop
out
pop
mov
cs
inc
cli
push
out
sub
lret
out
adc
jmp
pop
outsb
xchg
lret
in
cs
xlat
xchg
fldenv
faddp
repnz
mov
dec
xchg
jnp
cld
add
cmp
xor
movsl
enter
pop
inc
out
loopne
xchg
adc
push
sub
mov
xchg
stc
mov
roll
popf
pop
out
sub
cmpsb
sub
loopne
cwtl
mov
mov
jp
dec
fbld
scas
push
addr16
mov
dec
add
test
pop
lea
ja
xchg
ss
fisubrs
outsb
popf
sbb
mov
leave
outsb
mov
jge
repnz
sbb
cld
and
xchg
insb
hlt
jge
jo
lock
incb
lea
add
int3
push
jg
jge
decb
inc
orb
insb
test
enter
test
pop
jae
add
fs
push
outsb
pop
shrl
and
or
clc
add
sarl
adc
aas
das
cmp
jns
adcb
adc
xor
xchg
scas
into
fiaddl
mov
sub
testb
adc
ja
cmp
das
sub
mov
test
pop
std
lods
adc
xchg
inc
xchg
pop
repnz
push
sbb
xchg
push
lahf
pop
loopne
or
lret
std
adc
or
push
in
dec
mov
lret
fidivrl
mov
add
jle
push
push
add
loopne
cmp
cmc
and
sbb
xchg
in
ficomps
ret
or
fisttps
jg
cmp
les
and
mov
call
rorb
fisttpl
cli
popf
notl
mov
fbld
jns
mov
add
std
mov
mov
jle
repz
jg
or
cmp
test
dec
pop
loop
xor
fdivrl
push
lcall
xchg
push
daa
mov
sub
shll
dec
sbb
inc
das
add
push
inc
pop
ret
mov
popf
cmp
out
arpl
push
add
in
jbe
mov
add
add
jno
sub
fsub
push
push
dec
sub
repz
fstl
sahf
push
or
or
divb
jp
out
xor
xchg
and
jmp
cs
and
fldt
mov
pop
sahf
imul
mov
push
fisttps
insl
mov
pop
test
pop
or
mov
test
or
arpl
cmp
fmull
jmp
push
lds
dec
fwait
rcrl
mov
jnp
jge
out
loopne
movsb
std
out
lahf
insb
movsl
and
loope
aaa
pop
push
jecxz
pop
out
mov
icebp
xchg
mov
insb
sub
jns
sbb
pop
or
out
fucomip
push
or
sub
push
pop
push
lcall
gs
add
cmp
inc
jge
stc
out
gs
ret
xor
cmp
sub
stos
stos
jmp
or
imul
adc
lret
rorb
daa
scas
mov
push
dec
jl
add
hlt
nop
cmp
or
mov
dec
adc
xor
cld
cwtl
test
cmc
fisubrs
xchg
inc
push
ja
outsb
mov
int3
ret
inc
loopne
js
stos
in
jnp
hlt
jo
leave
or
mov
inc
pop
xchg
movsl
sub
cwtl
fmul
mov
add
dec
sbb
dec
daa
cmp
out
stos
pop
lods
jne
mov
mov
mov
movsl
enter
scas
sbb
xchg
xor
test
and
jne
pop
adc
pop
jmp
xchg
push
add
xchg
icebp
pop
addl
mov
xchg
shrb
mov
sbb
push
jbe
aad
shlb
jo
or
in
lds
jbe
and
push
cmc
pop
iret
sbb
in
lret
push
adc
ja
inc
or
aaa
js
loopne
adc
or
repnz
mov
xor
das
fnstenv
ljmp
xor
sbb
pop
inc
jge
jo
sbb
out
jb
out
sbb
xchg
movups
enter
pop
in
ss
and
sarb
fdivr
push
jecxz
roll
fisttpl
stc
dec
xor
dec
test
mov
lea
push
and
out
fnstsw
inc
pop
cmpsb
test
sti
sar
jb
jne
stos
lea
out
es
inc
ds
out
hlt
repz
rcl
lea
pop
popa
xchg
xlat
in
pusha
lods
imul
mov
test
test
and
add
add
popa
neg
popa
mov
in
pop
push
push
jmp
xor
scas
xchg
inc
cmp
xchg
xchg
xchg
mov
mov
cmp
cmpps
ljmp
push
fidivrl
xlat
out
cmp
push
sbb
stos
push
les
sub
xor
mov
in
lret
push
in
mov
cmpsl
sub
sub
repnz
rol
mov
jno
xchg
mov
cmp
jbe
jo
rorl
xchg
inc
fwait
mov
in
aas
lock
fwait
imulb
or
popa
push
pop
incl
push
pop
out
pushf
sub
pushf
frstor
fwait
mov
sti
leave
or
mov
push
and
sbb
aas
mov
movsb
cmp
repnz
add
je
push
ldmxcsr
pop
aam
jle
add
sub
pop
mov
ja
pop
dec
jecxz
stos
fdivrs
fldcw
leave
pusha
dec
cmpsb
and
mov
push
mov
sub
jbe
push
int3
and
int3
js
push
sbb
cmp
push
lret
loope
std
insl
loopne
pop
pop
sbbb
dec
loopne
addl
incl
arpl
test
sar
ds
aam
sub
mov
sub
sbb
imul
scas
cmp
popa
xor
lods
addr16
iret
push
scas
add
mov
sahf
insb
test
sarl
notl
inc
pushf
ret
pop
mov
leave
and
shrb
lea
stos
aas
mov
cmpl
xchg
mov
mov
lods
in
movsb
xor
je
push
dec
repnz
inc
pop
je
in
mov
inc
or
leave
sbb
daa
loop
push
out
inc
dec
add
or
pop
inc
fwait
sarl
cmp
cmpsl
pop
in
pushf
xor
mov
adc
sbb
scas
aad
imul
jmp
pop
inc
arpl
insb
xchg
or
arpl
sub
imul
test
xchg
les
stos
mov
sbb
push
xchg
out
lcall
dec
xchg
and
rcrl
aam
scas
jmp
clc
and
mov
lods
out
in
cmp
sbb
push
pop
fmull
fisttpl
push
pop
popf
data16
pop
mov
mov
cld
pop
es
cmp
pop
nop
cmp
xchg
ret
jmp
push
dec
mov
les
sbb
pop
pop
movsl
sub
test
cld
stc
in
pop
data16
std
mov
loop
ret
sti
cmp
arpl
xor
in
inc
mov
inc
outsl
das
xor
enter
or
mov
popf
inc
outsb
por
imul
fimull
jne
or
jo
push
dec
xor
cmp
stc
jg
fdivrs
sarb
pop
rorb
daa
cmp
pop
es
cmp
dec
lea
adc
call
cld
inc
push
sarl
sbb
test
inc
shlb
addr16
mov
push
push
into
rorl
into
push
ss
imul
imul
mov
jp
test
and
jne
fadd
cmp
iret
mov
decl
ja
push
cwtl
jne
inc
xor
sbb
mov
mov
nop
xrelease
dec
xchg
iret
imul
aas
cmp
out
sbb
repz
dec
pushf
push
jnp
out
push
mov
pop
sub
add
jb
push
stos
das
or
mov
xchg
out
cmpsb
sbb
out
mov
add
fwait
xchg
xor
push
sti
xor
push
scas
pop
stos
popf
or
fimuls
jecxz
add
mulb
adc
ret
mov
sub
lock
cmc
xor
iret
test
cmp
xchg
bound
loope
jbe
in
cld
sbb
faddp
mov
jnp
mov
push
loop
stc
cwtl
add
adc
call
loopne
mov
sub
fildll
fisubs
pop
in
add
fnstcw
mov
addl
call
lea
jb
movsb
xchg
xchg
inc
pop
adc
lds
push
and
insl
inc
pop
or
ret
test
les
cmp
or
xchg
xchg
repnz
pop
bound
xchg
imul
cmpsb
inc
push
lds
out
xchg
js
dec
lret
push
cli
aaa
imul
fstl
es
je
fildll
fs
sbb
jecxz
repz
jecxz
xchg
and
test
mov
insl
lret
push
aad
jo
pop
mov
mov
cmpsb
ficoml
lret
adc
jge
insb
cli
mov
imul
inc
mov
mov
push
imull
cs
mov
mov
cltd
mov
lret
movsb
cmpsl
jmp
mov
or
in
xor
mov
into
movl
scas
pop
jno
aaa
fwait
sbb
mov
cmp
inc
ret
test
sub
aad
xor
popf
mov
addl
inc
xchg
bswap
or
mov
lds
outsl
sbb
shll
dec
pusha
pop
xchg
xchg
mov
xor
cmp
pusha
push
cmp
insl
jecxz
test
iret
inc
jmp
sub
inc
add
loop
ds
mov
adc
outsb
dec
mov
dec
jns
pop
pop
xor
xchg
js
movsb
pop
icebp
pop
jbe
cwtl
dec
sub
movsl
mov
iret
daa
add
imul
lret
xor
xlat
arpl
mov
dec
mov
pop
mov
add
jg
movsl
sbb
sub
adc
sub
ret
or
arpl
loope
dec
push
xchg
sbb
pop
es
test
hlt
fidivrs
cmp
inc
and
adc
es
out
inc
mov
daa
and
scas
shl
xchg
scas
in
adc
and
stos
or
and
mov
sbb
push
push
popa
jne
xlat
int3
dec
xor
mov
push
pop
fs
add
mov
mov
gs
pop
mov
dec
mov
xlat
xchg
push
jl
pop
stos
mov
and
and
test
into
pusha
sbb
fisttpl
dec
shll
or
add
lahf
data16
fcompl
gs
xor
cld
push
dec
push
sub
aam
push
mov
mov
jg
pop
dec
cs
das
dec
repz
push
mov
rorl
adc
mov
xor
fwait
enter
dec
fwait
stos
gs
inc
test
in
push
inc
sarb
test
insb
cmp
popa
and
cmp
push
sbb
sahf
mov
out
int
push
jb
loopne
mov
das
ret
mov
cwtl
cmc
jmp
or
es
cmp
ja
adc
roll
or
imul
adc
pushf
ss
mov
arpl
imulb
pushl
rorb
rsqrtps
sbb
orb
mov
push
push
and
and
fildl
lahf
fs
jne
fisubl
xor
inc
cwtl
jl
or
sarl
int
mov
mov
and
or
cmp
movb
scas
lock
pop
ret
mov
test
fwait
jb
fists
dec
aam
cltd
xchg
imul
and
mov
jb
int
aam
lods
xor
dec
repz
hlt
scas
xchg
movsl
iret
dec
outsl
scas
mov
mov
out
pop
mov
stos
mov
cmp
jns
xchg
jmp
rolb
loop
dec
dec
nop
mov
iret
mov
sub
jbe
push
adc
or
pop
scas
dec
pushf
sub
stos
lret
stos
pop
jp
ss
ss
fsubl
sti
fnstcw
pushf
push
cmp
imul
adc
mov
push
inc
in
adc
cltd
cmpsb
jae
mov
aam
sub
mov
sbb
test
push
test
push
sub
mov
or
sbb
data16
fstps
loopne
les
xchg
mov
sbb
imul
mov
pop
cmc
mov
and
mov
hlt
fcomps
cs
movsb
mov
nop
jb
mov
jne
mov
mov
cmp
dec
jp
mov
or
or
int3
xor
jg
insb
lea
stc
pop
jnp
lea
adc
and
lock
mov
push
mov
sarb
scas
popa
add
in
cwtl
push
je
jecxz
cwtl
das
int3
sti
xor
or
and
shl
lahf
fistpll
xchg
dec
popa
lods
xchg
lock
and
cltd
sbb
aaa
je
xorl
iret
jo
dec
in
mov
dec
into
out
pop
push
nop
push
cmpb
das
cmpsl
sbb
mov
push
ss
in
repz
adc
jle
pop
fisttpl
cmp
mov
mov
or
sarl
adc
lds
cmp
and
fistpll
popa
pop
incl
pop
or
or
dec
orl
shrl
dec
cmpsl
mov
insl
cld
les
xor
xchg
dec
and
pop
dec
ret
add
lret
out
mov
daa
arpl
shl
adc
push
outsb
loop
or
and
sub
jnp
in
lret
lods
loop
movsb
sub
fsubrs
loop
das
jecxz
xor
mov
add
in
xor
stos
mov
fidivs
cmp
jmp
xor
fsts
js
pop
mov
xchg
imul
popa
push
mov
mov
lea
lret
xchg
hlt
sub
and
cltd
mov
icebp
pop
xchg
push
fidivrs
int
fsubrs
adc
xor
addr16
es
add
cs
in
and
xchg
in
sub
jecxz
jno
sub
dec
call
shlb
dec
push
sti
imul
inc
insb
pop
test
inc
xchg
mov
dec
je
jne
add
adc
sahf
inc
mov
xor
repz
mov
out
test
sub
xlat
fs
mov
push
xchg
orb
in
aam
mov
in
les
cmp
imul
fisttps
xchg
cmp
mov
jno
sti
pop
ret
iret
movsl
es
cmc
insl
mov
movsl
arpl
inc
sub
push
ljmp
lea
jns
sti
mov
mov
mov
push
sbb
xchg
insl
sahf
add
jae
xchg
sub
sub
idivb
inc
dec
pop
adc
mov
xor
ret
dec
and
call
cmp
mov
xchg
cld
fistps
ljmp
xor
cmp
adc
push
sbb
sbb
das
pop
leave
push
scas
fstp
sub
adc
push
sub
leave
mov
mov
and
mov
pop
pop
xlat
test
jge
out
in
popf
cmc
xchg
sbb
aam
mov
mov
mov
ss
scas
xchg
rclb
sti
addr16
xchg
mov
pop
rorb
sbb
jae
fwait
ljmp
adc
icebp
clc
loopne
mov
fs
pop
leave
aad
shrb
ljmp
sub
jmp
jecxz
jmp
ja
xchg
popf
jmp
rcrl
fnstenv
movsb
jno
insl
jg
inc
sub
pop
or
adc
xor
rorb
lock
sbb
jmp
pop
mov
jp
mov
push
incl
push
mov
movsb
fsubl
out
xor
aaa
stos
push
cmp
or
sbb
in
sbb
jb
movsb
fldenv
xchg
in
nop
lds
loope
mov
fisttpll
into
nop
fstps
popa
xor
sub
inc
push
nop
push
inc
xor
imul
jnp
push
mov
mov
mov
xor
faddl
sub
pop
cmp
jp
inc
sbb
lds
adc
call
cmp
mov
inc
test
rcll
dec
decl
cmpsw
mov
push
scas
mov
arpl
stc
jmp
dec
mov
cmp
decl
jp
cmp
sarl
lret
add
es
jo
push
cmpsl
aam
add
out
mov
xchg
push
popf
xchg
sbb
aas
rorb
and
inc
pop
xor
mov
or
mov
jo
mov
out
mov
pop
mov
fisubrs
lcall
dec
gs
push
lahf
in
mov
pop
enter
outsb
out
mov
shl
imul
xchg
shlb
das
inc
test
pop
ret
jbe
jmp
popa
loop
test
insb
aaa
cmc
add
lcall
rol
arpl
icebp
sub
jns
imul
sbb
arpl
stos
loope
xlat
sub
dec
xor
lret
imul
insb
rcrl
pop
xchg
inc
cmp
cmp
mul
add
dec
jl
negl
pusha
pop
jne
xor
outsl
leavew
dec
cmp
in
cld
xor
push
push
add
add
cmp
test
test
dec
inc
ds
out
adc
gs
out
xchg
movsl
aaa
adc
loopne
aad
push
data16
outsl
adc
mov
xchg
cmp
push
mov
pop
cli
push
aaa
es
mov
inc
fmul
and
iret
adc
imul
test
or
add
mov
sub
mov
pop
rorb
sub
test
hlt
outsl
cmp
jo
adcb
add
sub
out
lret
cs
rcr
pusha
cli
pop
inc
sbb
push
stc
add
xchg
fstpl
lock
dec
push
adc
sarb
fwait
push
movb
clc
out
or
jns
and
xor
rorb
inc
sub
dec
mul
push
jmp
ret
xor
ss
jno
cld
aam
add
jmp
xchg
ss
mov
lret
cmc
mov
mulb
mov
ja
mov
mov
lods
push
adc
and
xchg
jnp
add
fcomi
push
shll
out
sub
in
je
lock
movsl
inc
aam
imul
mov
hlt
mov
cld
jo
sbb
xor
dec
pusha
inc
out
mov
es
ja
pushf
dec
sub
arpl
cmpsb
imul
gs
mov
dec
int3
xor
pop
test
fsubr
or
movl
aad
fs
hlt
xchg
das
xor
sbb
popa
jae
loope
and
test
sbb
mov
lock
jns
and
int
in
sub
jg
sti
rorb
stos
dec
push
in
and
icebp
push
and
fisubs
push
jbe
adcb
inc
pop
xor
cmovae
stos
icebp
cld
imull
jnp
jge
enter
jne
cmp
nop
clc
movsl
sti
stos
cmp
stc
cmp
aas
jo
or
bound
stos
imul
imul
push
cmp
adc
jns
daa
jmp
arpl
pop
ret
in
call
paddusb
jno
idivb
cmc
push
popa
xchg
lcall
das
fsubrl
pop
sti
jl
mov
jp
pop
js
pop
outsb
push
push
lds
rol
lds
fdivs
or
fs
jmp
dec
imul
aad
sub
rcr
cwtl
add
sbb
ds
and
sub
mov
adc
out
push
repz
or
and
test
lods
adc
pop
adc
stos
ds
jmp
cmp
or
xchg
stc
fdivl
iret
jbe
jge
hlt
mov
hlt
cmc
jo
scas
xor
pop
xlat
call
data16
adc
iret
inc
subl
scas
movsb
add
or
bound
in
or
jne
cmp
inc
jnp
push
mov
stos
in
fwait
cmpsl
cmpsb
xchg
ret
out
test
inc
rol
xchg
inc
jmp
jb
mov
psubsw
and
hlt
dec
cmp
or
and
sbb
fisttpl
inc
rorb
push
nop
std
sbb
mov
jo
ret
sbb
or
into
mov
bound
and
hlt
ret
adc
fcomp
cmpsl
mov
mov
imul
mov
add
scas
int
cwtl
mov
mov
jl
test
mov
std
jno
cmp
mov
mov
mov
fistpl
mov
arpl
jb
inc
add
sub
and
sub
in
bound
dec
fsts
jl
sub
ja
adcl
xchg
jecxz
leave
push
or
daa
call
sub
xor
rorb
and
xor
xchg
dec
xor
push
xchg
mov
xchg
dec
fistl
mov
xlat
mov
mov
mov
mov
mov
or
gs
addl
in
mulb
or
out
je
jmp
mov
out
pop
sbb
xchg
dec
cmp
mov
dec
xlat
cmpl
mov
testl
enter
das
fildll
jl
popf
in
and
iret
out
aas
call
push
pop
xor
cmp
pop
out
lock
movsb
ss
lea
sbb
cmpsb
stos
cmp
addr16
jns
mov
pop
cmpsl
xchg
sbb
add
xor
cmp
push
mov
cli
push
mov
int
pop
enter
clc
push
fimull
sti
popa
mov
dec
fnstcw
and
push
cwtl
out
call
mov
lods
and
jne
pushf
mov
adc
xor
in
inc
movsl
add
fidivs
add
mov
fstl
add
pop
mov
mov
loop
mov
and
pop
shlb
xor
addr16
sub
sarl
xchg
inc
adc
mov
jnp
inc
jp
jg
jg
mov
sub
mov
dec
out
jo
or
mov
push
idivl
add
xchg
ror
and
test
lea
loopne
pop
dec
pop
lfs
xchg
lahf
cmc
and
push
adc
dec
sbb
int
jecxz
gs
cmpl
cmpsl
lods
jne
popa
jg
leave
jecxz
sub
insl
mov
pushf
movsb
push
jp
test
mov
call
mov
sti
xor
mov
jmp
sbb
call
inc
ficomps
mov
mov
add
mov
push
lcall
mov
pop
fdivrl
inc
inc
fnsave
dec
rorb
dec
adc
jecxz
sub
rcl
push
mov
jg
sbb
mov
pop
mov
pop
outsb
sub
lods
add
bound
mov
dec
jb
jecxz
movsb
loop
test
pop
add
mov
psllq
repnz
mov
out
hlt
add
cmp
add
dec
sub
push
jmp
pop
das
adc
insl
test
movsb
dec
add
shlb
jge
arpl
mov
and
push
fnstenv
fucomp
psubd
jmp
xchg
sub
add
stos
rclb
mov
jne
mov
xchg
mov
int3
rorb
dec
mov
mov
lock
pop
inc
cmp
repnz
out
out
sub
divl
mov
lret
arpl
andb
fdivrl
inc
dec
in
out
out
jmp
ret
mov
leave
push
xchg
addr16
mov
jmp
lahf
cmpsl
inc
bound
mov
adc
xchg
mov
jecxz
xchg
push
bound
out
mov
rcrl
sub
push
arpl
jo
mov
pop
ret
jmp
xor
sub
inc
out
jmp
mov
repz
add
ret
aam
pop
inc
rcrb
or
adc
in
sub
sub
pop
cmp
xchg
xor
and
insb
aam
xor
jp
mov
pop
insb
and
xchg
sbb
dec
imul
xchg
hlt
xchg
int
int3
in
push
ss
cmp
stos
test
push
dec
hlt
shrb
jo
ja
ljmp
pop
adc
pop
mov
push
push
add
stc
adc
fucomip
test
clc
mov
cld
mov
dec
aam
dec
push
inc
mov
xor
out
inc
xchg
scas
imul
inc
xchg
fisttps
adc
insl
cmp
icebp
ret
and
and
int3
inc
push
jl
inc
push
mov
jns
mov
push
sti
dec
mov
xor
push
lods
nop
ficoms
dec
dec
in
jno
inc
popa
hlt
adc
pop
mov
pop
andb
incl
push
sub
aam
sub
call
xor
cmp
push
lahf
stos
and
mov
adcl
stos
fwait
hlt
jecxz
mov
inc
insb
cmpsb
sbb
sbb
into
mov
push
mov
ret
pop
sbb
sub
jg
push
popf
dec
js
xor
push
or
jp
dec
mov
pop
xor
es
dec
rorl
cmpsl
mov
push
mov
repz
cli
pop
mov
inc
jg
sti
popf
jo
jbe
outsb
jge
cmp
fsubrl
or
pop
jnp
mov
or
push
mov
xchg
lods
jb
inc
inc
pop
in
sbb
cmpsb
sahf
jle
sub
mov
cmp
xchg
data16
lahf
and
mov
jle
mov
out
lds
adc
cmp
pop
scas
pop
imul
divb
in
pop
push
dec
mov
push
lcall
jge
lret
or
mov
xor
xlat
adc
push
test
sahf
enter
push
dec
jge
jo
fisttps
mov
mov
stos
push
push
insl
mov
call
dec
out
xor
xor
and
jnp
inc
fisttpll
mov
fsubl
lds
xor
mov
mov
imul
xrelease
and
aad
adc
scas
lods
bound
fs
into
xor
cld
and
ror
push
pusha
loopne
incb
pop
ja
or
imulb
xor
push
imul
int
fs
jo
call
mov
jle
cs
cs
test
mov
fwait
sbb
and
jecxz
sahf
mov
sbb
ljmp
into
cmp
or
cwtl
lret
cli
loopne
xor
fsub
mov
fdivp
icebp
icebp
std
pusha
mov
clc
das
lret
add
push
sub
pop
fcmove
out
add
loopne
add
xchg
mov
pop
mov
out
push
int
sub
mov
test
sbbl
jl
test
and
sti
xchg
mov
fiaddl
sbb
xor
mov
pushf
cmp
pop
jg
in
mov
stc
gs
fidivrs
int
jmp
jae
xor
lods
imul
cmc
repnz
outsb
mov
push
inc
add
xchg
jne
int3
ds
cmp
inc
mov
call
lea
jp
shll
loopne
lahf
popf
mov
icebp
xchg
push
or
sbb
xchg
dec
and
jle
je
repz
cmp
aam
adc
and
adc
inc
mov
or
push
pop
sti
in
pop
movsl
je
mov
lods
test
out
loop
cli
add
lret
lock
mov
int3
sub
inc
pop
dec
dec
test
xor
pusha
insb
mov
adcl
movsl
loop
xchg
stos
inc
dec
fldcw
mov
sub
xchg
rorb
outsb
imul
sbb
lahf
imul
cmp
adcb
pop
in
dec
mov
adc
sbb
pop
cmpsl
inc
mov
rorl
push
mov
jo
jl
push
loopnew
and
adc
xor
stc
out
cs
or
mov
sbb
push
xchg
aaa
sub
test
rep
cmp
ljmp
loop
jl
sbb
lds
mov
pop
inc
push
sbb
add
fistl
adcl
jns
fld
outsl
and
js
push
cmp
shlb
add
fidivl
lcall
sub
mov
repz
mov
xchg
jg,pn
shll
fistps
adc
sarb
jne
ss
inc
and
lds
fidivrl
jnp
adc
mov
pop
jb
mov
inc
clc
sub
stos
xchg
flds
xor
jl
sub
jl
iret
movb
mov
and
inc
fistl
mov
pop
loopne
gs
shll
add
testb
lock
push
mov
fwait
movsl
ror
addl
fistpll
push
lcall
jp
adc
inc
test
push
movsb
inc
sub
clc
xchg
enter
inc
clc
inc
sbb
sbb
repnz
sub
push
inc
xchg
xlat
or
cld
test
pop
mov
mov
inc
cvtps2pi
dec
cld
sbb
xchg
popf
aad
jl
sbb
icebp
cmp
popa
dec
pop
cmpsb
mov
mov
aas
out
pop
mov
add
stc
add
movb
jno
mov
loope
leave
or
pop
sti
inc
xchg
mov
sahf
and
mov
or
insl
jb
cmp
xor
mov
add
js
push
outsl
ret
sub
mov
inc
cmpsl
cltd
pop
clc
push
mov
jbe
or
xchg
out
ljmp
lods
mov
xchg
sahf
cmp
xor
push
mov
mov
lret
mov
test
loop
sbb
fs
inc
xor
xchg
mov
in
vmovd
clc
sbb
mov
pusha
pop
cmp
push
xor
in
mov
insl
adc
inc
pop
mov
ljmp
mov
shlb
jne
jb
mov
mov
arpl
les
and
mov
aaa
or
aaa
aas
int3
dec
pop
xchg
jae
push
adc
cld
sub
out
test
hlt
jle
mov
mov
pusha
lods
cmpsb
pop
pop
loop
cmp
addr16
loope
jnp
or
or
adc
fsubrp
ja
aaa
sbb
jne
pinsrw
mov
aas
cmp
pop
sbb
push
lea
jnp
dec
dec
xor
inc
jl
mov
out
in
rcrb
pusha
cmp
sbb
call
sbb
cmp
lret
pop
add
sbb
pop
sbb
push
add
sub
sbb
adc
mov
or
lods
stos
inc
xor
jge
in
jmp
adc
or
fs
push
loope
jl
adc
xor
pushf
xchg
or
loope
mov
ss
sti
lods
jb
aam
aaa
push
xchg
mov
cmpsl
ds
fsubl
fnstcw
add
dec
mov
inc
and
incl
adc
push
dec
xor
int3
out
ror
pop
rclb
stos
ds
fcmovnb
dec
movsl
mov
out
xchg
stc
mov
jge
outsb
imul
or
xor
sbb
arpl
dec
adc
xor
daa
and
stc
cwtl
xor
loope
xor
in
pop
xor
sub
mov
or
inc
inc
lds
fisttpl
mov
jmp
popl
cmp
mov
aaa
push
movsb
rolb
xchg
out
mov
dec
shl
fdivrl
mov
push
hlt
js
pusha
or
xor
ljmp
test
sbb
ret
push
cld
out
icebp
mov
rorl
and
cld
icebp
punpckhbw
xor
addb
int3
adc
mov
mov
mov
stos
xor
and
push
and
frstor
mov
push
inc
jle
add
inc
cmp
pusha
stos
xchg
orb
rcl
add
or
stc
dec
fdivrl
sbb
push
clc
adc
mov
push
mov
rcrl
aam
pop
push
cmp
mov
push
mov
and
jle
jne
dec
movsl
cmp
addl
mov
mov
lock
negb
negl
push
push
roll
mov
mov
lret
mov
pop
cmc
mov
int3
movsb
lcall
sbb
inc
mov
es
mov
mov
and
sahf
loop
insl
out
sbb
daa
or
repz
cmp
pusha
add
bound
and
shll
mov
test
lea
jbe
lea
mov
cmpsb
imul
addr16
xchg
sbb
jecxz
or
daa
outsb
jle
fs
dec
mov
xor
iret
xor
xlat
mov
jbe
lea
pop
jno
bound
fisubrs
aas
xlat
outsb
mov
fsubrl
xor
sbb
dec
mov
shll
add
fisubrs
and
mov
popa
cli
xchg
sub
mov
adc
fwait
sub
dec
pop
dec
ret
test
adc
dec
xchg
repz
or
adc
xchg
rcll
mov
fwait
push
or
push
flds
movsb
pop
or
mov
fildl
jmp
fistps
jno
push
sbb
jg
ljmp
popf
mov
dec
es
loop
mov
and
sub
lock
push
dec
mov
sbb
push
icebp
pop
inc
jmp
out
mov
mov
cld
mov
dec
mov
outsl
inc
cld
push
dec
jns
sub
rorb
es
adc
outsb
xor
mov
outsl
inc
or
mov
push
mov
or
mov
xchg
mov
inc
cmp
sarl
inc
test
mov
sub
pop
imul
fisubl
or
lods
pop
das
jg
popw
jmp
sarb
or
out
fsubrp
movsl
dec
fwait
dec
mov
pop
push
adc
push
scas
push
mov
mov
mov
lea
and
out
add
repnz
mov
daa
mov
mov
sbbb
pop
or
sti
je
xchg
mov
dec
pop
and
or
fisubl
mov
icebp
xor
pushf
bound
daa
xor
out
in
addb
inc
jo
dec
mov
lods
gs
inc
rcrl
aam
xor
adc
dec
aam
test
fwait
mov
and
gs
fistpl
mov
mov
mov
mov
jp
sub
es
lods
ss
cltd
ljmp
outsb
mov
fildl
data16
push
repz
jecxz
stc
btc
and
or
movsb
daa
pop
enter
pop
je
imul
mov
gs
mov
rorl
repnz
nop
xchg
inc
cltd
xchg
jne
dec
xchg
stos
adc
lret
inc
subl
ret
mov
pop
subb
jns
mov
lret
pop
mov
adc
mov
cmp
mov
cmpl
pop
test
cmp
lock
fsubrp
pop
dec
js
and
xchg
pop
pop
fstpt
xchg
jo
rolb
mov
dec
pop
xchg
shl
mov
cmpl
or
jmp
add
jl
repnz
and
add
mov
aas
dec
sarl
push
pop
jb
jmp
pand
cltd
dec
add
pop
insb
inc
or
xor
push
or
pushf
and
add
xchg
jb
pop
or
cmc
lods
popa
inc
jae
mov
jle
jp
push
cmp
and
call
push
jmp
xchg
and
jnp
out
iret
xor
cmp
movsl
fucomip
jle
rorl
adc
lcall
pop
xchg
insl
nop
xor
or
mov
fwait
jp
imul
pop
ljmp
sub
cmpsb
xchg
mov
pop
sub
pop
mov
in
sub
jmp
pop
popl
xchg
push
scas
fwait
loope
arpl
xchg
outsb
fcmovne
jbe
push
lea
std
jecxz
std
insl
js
lret
inc
pop
mov
pop
jo
pop
jecxz
int3
enter
pop
inc
nop
mov
jbe
jnp
fs
sbb
lahf
push
pop
add
out
and
test
xchg
push
push
or
xor
fists
jecxz
cmc
and
jns
negl
sub
push
out
notb
or
fldl
sarl
shll
in
jae
sbb
into
mov
lret
dec
shl
mov
ljmp
lcall
mov
and
inc
sub
push
in
into
out
mov
mov
xchg
repnz
stos
jns
mov
dec
outsb
xchg
mov
cmp
arpl
out
push
mov
mov
push
or
jbe
pop
std
cmpsb
popa
les
cltd
bound
add
decb
sar
sbb
jl
jne
sub
push
ds
mov
inc
in
cmp
pop
push
mov
gs
into
jnp
cmpsl
pushf
shll
mov
mov
mov
fs
mov
scas
fiadds
aaa
or
cld
insl
mov
out
mov
sub
lds
mov
scas
pop
mov
lock
loope
sti
movsb
mov
andb
loope
jno
xchg
mov
inc
imul
in
and
dec
std
je
pop
cmp
ret
xor
push
lret
ljmp
pop
aas
stos
fucomp
adc
mov
or
cli
nop
mov
stos
mov
fldcw
in
mov
pop
add
les
or
dec
sti
aas
jne
inc
lods
fbstp
push
fnstcw
cli
inc
arpl
lds
or
gs
dec
rclb
repz
subl
mov
repz
scas
jl
aad
and
jne
popa
jl
movb
add
or
cli
dec
fucomip
adcb
iret
xchg
xor
jb
xchg
fs
mov
idivb
jb
jmp
pusha
aas
xchg
outsb
sbb
inc
lahf
in
stos
imul
mov
gs
dec
jle
cwtl
icebp
sbb
rclb
mov
push
cmp
push
jb
mov
out
sbb
pop
inc
popf
loopne
dec
pop
mov
call
pop
mov
ja
test
inc
push
lahf
shlb
mov
movsb
lock
dec
sti
mov
mov
push
scas
push
flds
enter
aas
and
push
mov
pop
loopne
jae
adc
push
cltd
mov
sbb
cmpsl
push
add
adc
xor
pop
outsl
repz
lock
int3
jmp
test
and
xchg
and
pop
popf
insb
rorl
cmc
mov
sbb
adc
sbb
xor
jl
add
shl
add
adcl
lock
mov
lret
repnz
icebp
or
cmpl
cmpsb
daa
arpl
add
movsb
ret
add
out
popa
xorl
mov
sub
sub
cmc
insb
shll
jg
mov
push
dec
dec
insb
mov
jbe
or
sub
xor
lock
mov
rcll
xchg
shrl
jp
sbb
or
pop
mov
and
mov
cmp
cwtl
xchg
pop
xlat
mov
cli
sbb
xor
mov
sbb
orb
int3
push
xchg
xor
fwait
jle
sub
xchg
sub
xor
mov
mov
or
inc
inc
pusha
dec
movsb
fimull
ffreep
xlat
aad
cmp
dec
fwait
gs
call
jge
stos
enter
lds
outsl
repz
cmc
xchg
xchg
mov
shl
and
lahf
cmpsl
jmp
jno
inc
out
push
sbb
push
push
test
cmp
lcall
adc
sti
je
mov
sbb
push
mov
cwtl
dec
sbb
lock
ss
xchg
addr16
mov
fs
movswl
sbb
jp
repnz
fld
ret
popl
or
das
scas
notb
aam
in
or
stos
add
cmpsb
in
aad
mov
stos
fnsave
decl
adc
mov
shl
ret
cmp
jge
aad
sub
jae
rorl
movsl
sbb
repnz
adc
sub
xchg
or
xlat
rorl
std
sbb
loopew
pop
out
jns
test
mov
movsl
dec
xorl
xchg
loope
insw
xchg
ret
mov
jmp
add
lods
in
pop
or
hlt
jne
push
xor
jge
pop
add
mov
fldt
aaa
lods
and
adc
or
inc
and
rcrl
in
xacquire
jb
xor
mov
aam
sub
stos
out
and
mov
mov
out
nop
mov
enter
pushf
sbb
cs
lock
loop
mov
ret
sub
mov
pop
out
sbb
dec
imul
in
loopne
decl
loope
into
cwtl
jl
lods
pop
and
fsts
ret
sbbb
jbe
dec
xor
or
add
sbbb
dec
test
xchg
cli
mov
mov
or
cmpsl
pop
mov
adc
cld
ljmp
sbbl
and
dec
pop
cmp
es
jae
xchg
fdivs
das
stc
dec
int3
push
clc
test
sub
pop
pop
cmp
push
fwait
sub
mov
shlb
xorl
mov
aam
push
js
arpl
jns
std
cmp
arpl
scas
lcall
imul
sub
sbb
outsl
mov
add
into
repnz
jnp
sti
mov
mov
in
mov
inc
jns
gs
out
lret
hlt
mov
jg
enter
sub
in
mov
iret
push
dec
outsb
test
xor
sub
xchg
inc
dec
xor
data16
daa
fldenv
out
or
fdiv
mov
push
cmpsl
or
lcall
test
test
sub
lods
fwait
ja
dec
adc
imull
stos
push
aaa
sbb
out
movl
pop
aaa
adc
out
mov
mov
test
jge
hlt
enter
int
adc
addl
ljmp
dec
gs
push
jbe
xchg
or
push
jecxz
shlb
push
in
mov
loope
shll
mov
mov
inc
mov
jp
push
testb
adc
leave
sbb
cmp
fxch
fwait
sbb
addr16
leave
ljmp
xchg
fwait
shll
orl
and
lds
mov
out
or
mov
mov
out
dec
loope
out
sub
mov
lock
ror
shr
inc
into
lods
xor
and
ret
add
iret
mov
loopne
test
fsub
jge
mov
adc
sbb
popf
or
and
gs
jg
test
loope
xchg
rorl
xchg
cmpsl
inc
loope
test
cld
pop
or
loop
jge
mov
adc
cmp
inc
push
add
jecxz
xchg
jle
jge
push
pop
decb
jo
pop
pop
mov
lods
push
nop
dec
ret
int3
mov
xchg
ret
out
push
movsl
add
xlat
cmp
jbe
fisubs
cld
jl
xor
mov
pushl
inc
das
imul
sub
dec
and
push
nop
add
inc
jecxz
nop
jo
paddsb
jp
mov
fwait
inc
divb
push
adc
mov
jne
adc
stos
jns
into
sub
pop
cmp
rcl
jns
std
fnstenv
jmp
adc
pop
dec
xchg
sti
int
ljmp
sbb
out
in
mov
je
pop
js
mov
and
sti
addl
rclb
xchg
mov
mov
int
test
aam
push
lahf
movsb
mov
push
fldl
lea
adcl
ja
xchg
hlt
loop
pop
lods
ljmp
jp
pop
int
or
daa
fwait
sahf
jmp
sbb
stos
je
addb
adc
clc
jecxz
test
movl
add
fstp
cwtl
sti
inc
mov
daa
add
xor
adc
ret
leave
fs
dec
fidivrl
jl
lds
ret
into
int3
in
add
loopne
lods
mov
mov
cmp
mov
xchg
insb
fwait
insb
loop
les
mov
aam
shlb
lock
popf
dec
fdivs
imul
mov
and
pop
lcall
inc
fwait
xchg
push
jge
test
pop
add
jl
pop
lea
sarb
cmp
pop
add
out
negb
out
aad
jle
add
and
ljmp
ljmp
lcall
addr16
cli
fs
push
add
add
mov
cmp
in
dec
es
xor
sti
mov
fnsave
mov
insl
scas
xchg
stos
jbe
iret
rcrb
push
xchg
rcll
xchg
ljmp
mov
push
into
cmpb
mov
mov
jnp
cmpsl
push
jae
outsl
push
test
call
mov
in
mov
movsb
and
sub
mov
loop
sbb
js
fildl
out
lds
jo
rclb
inc
punpckhwd
aad
lahf
out
xchg
and
cwtl
or
add
es
rcl
sbb
mov
lea
push
fstpl
adc
dec
int3
fisubs
xor
adc
cmp
xchg
imull
lret
std
mov
test
in
in
add
mov
fs
and
fidivl
inc
pop
mov
cwtl
ja
xor
enter
xor
aad
dec
cmp
lahf
and
lea
int3
stos
dec
cmpl
mov
fstl
daa
xlat
les
out
sub
sbb
pop
jb
ds
cmp
pop
fxch
sbb
and
in
xlat
aaa
fdivr
popa
out
cmp
jp
loop
pusha
lcall
cld
push
fistl
inc
cld
dec
stos
jb
std
ss
jo
sbb
push
stos
inc
fnstenv
lcall
movsb
sbb
dec
cs
cmc
lds
enter
leave
fnstcw
xchg
push
fsubp
fdivl
call
loopne
push
movsb
call
jbe
sub
iret
fcomps
xor
dec
aas
aaa
das
push
jo
ret
xchg
addb
inc
repnz
push
push
loopne
sub
adc
cmpl
in
inc
loop
out
pusha
sub
sub
push
clc
in
xchg
push
div
cli
lahf
sbb
mov
jl
rcl
add
mov
cmp
sbb
push
jne
push
addr16
xchg
fistps
bound
lods
mov
pop
lahf
pushf
cmp
jae
mov
pop
in
mov
sbb
sub
hlt
js
ja
out
push
js
in
jnp
add
pop
out
cmp
negl
lods
pop
push
lock
and
xor
mov
arpl
enter
adc
popa
int3
lock
js
and
lea
pop
pop
ljmp
cmpsb
sbb
pop
inc
jb
test
jmp
hlt
imul
jp
xchg
loop
arpl
sbb
imul
xchg
ss
inc
add
xor
adc
pop
xchg
xor
repnz
cmp
push
sbb
sti
add
and
dec
mov
inc
lcall
je
enter
in
adc
sbb
push
inc
push
dec
pop
pop
or
mov
xchg
jo
sbb
ficomps
cmp
fstp
or
cli
stos
dec
int
lods
in
lret
cmp
cwtl
add
dec
dec
icebp
jg
xchg
enter
fisubrs
xchg
fistl
cltd
es
pop
push
push
ja
cmp
and
xor
movsb
imul
inc
mov
iret
test
xchg
inc
arpl
jg
hlt
ret
fstps
adc
cmpsl
das
adc
dec
fwait
std
jne
cmp
pop
xchg
cmpsb
mov
fcompl
test
hlt
sbbl
sub
mov
fcomp
pop
mov
mov
lods
daa
jne
mov
stos
cli
dec
and
adc
daa
cmpsb
push
sub
ss
adc
call
mov
sbb
incb
ror
stos
pop
cmc
cmpsl
jo
test
xor
jnp
push
xchg
sti
sub
or
ret
push
dec
mov
imul
repnz
add
loopne
mov
push
jl
lds
rcrb
jl
fwait
divl
push
push
mov
pop
cmpsb
scas
pcmpeqd
scas
pushf
inc
sub
xchg
cmpsb
sub
ds
pop
lea
lds
iret
xor
subb
aas
aaa
lea
lock
sahf
ss
lret
andb
pop
addr16
jno
xor
cmp
inc
rcll
pop
cmp
mov
mov
or
and
sub
divb
push
add
stc
sar
lods
mov
out
jo
or
loopne
mov
mov
call
out
ljmp
scas
cmp
aam
and
inc
in
adc
jo
arpl
pop
dec
lods
iret
lret
fstpl
icebp
faddl
int
adc
mov
mov
adc
pusha
bound
fnstenv
out
andl
out
test
mov
inc
repnz
mov
pop
ds
cld
mov
mov
in
inc
and
daa
fcmovnbe
or
cmp
mov
cmp
lods
and
aad
and
sti
and
rorb
add
or
or
les
test
cmc
mov
sbb
jbe
cmp
rol
rcll
inc
and
in
push
dec
shrb
xor
daa
lds
in
pop
push
mov
je
in
insl
mov
sub
lret
sbb
in
in
lcall
push
xorb
fsub
adc
push
rorl
enter
fnstsw
jecxz
or
popf
dec
jns
pop
or
in
pushf
xchg
je
jl
sub
or
ljmp
fadds
pop
leave
je
add
mov
or
mov
rep
repnz
sbb
aad
test
pop
shlb
mov
sbb
cmp
les
push
mov
rcrl
pop
sar
shll
pop
lret
in
xchg
pop
clc
inc
mov
inc
xchg
mov
sbb
outsl
xor
mov
shll
xchg
repnz
dec
imull
add
clc
aas
xor
inc
mov
std
pop
sbb
fsubp
mov
dec
mov
nop
dec
sbb
mov
mov
add
lret
fwait
out
mov
mov
xchg
arpl
arpl
jne
cmpsb
orl
dec
stc
inc
xor
frstor
test
cmpsb
sub
or
rorl
jl
in
sub
mov
and
mov
dec
xor
rcrb
push
pop
sbb
sub
jbe
adc
clc
jecxz
adc
aas
enter
xchg
pop
decb
xchg
xchg
setge
mov
sbb
jo
iret
sahf
pusha
scas
insl
loope
dec
pusha
mov
push
in
adcb
stc
les
or
sti
add
roll
sub
sti
xor
fdivs
dec
outsl
add
pop
scas
dec
stos
ja
sub
in
hlt
jl
rcl
push
xchg
inc
ds
dec
sahf
mov
adc
iret
mov
cmp
call
stos
or
lods
daa
inc
xor
jne
mov
in
ja
rorb
mov
mov
sub
imul
xchg
das
fcomps
nop
hlt
mov
sahf
mov
push
cmp
sahf
lahf
pushf
jno
daa
std
and
sahf
in
xchg
in
test
pusha
pop
iret
or
fmull
aas
popf
jbe
les
data16
xchg
shll
shll
outsl
addl
or
out
cmpsl
inc
movsb
cmp
jge
fld
and
jge
cwtl
mov
shlb
mov
das
pop
popf
push
pop
roll
icebp
movsl
andl
lds
into
dec
int
inc
lods
in
push
ret
out
gs
lcall
or
or
leave
or
mov
lods
scas
pop
rcrl
cli
xor
pop
rcpps
pop
test
repz
into
push
lods
loop
or
test
xor
xchg
or
pop
fstp
cmc
jg
stos
subl
ja
xchg
mov
sub
mov
pop
cmp
in
lock
add
call
dec
jmp
std
or
push
data16
pop
sub
test
dec
arpl
sub
add
out
mov
sbb
push
inc
fisttpl
pushf
mov
out
xchg
popf
outsb
dec
fildll
lock
adc
int3
call
stos
pop
sbb
sahf
pusha
loop
in
sbb
or
iret
inc
dec
mov
std
cwtl
orb
enter
inc
cmpsb
xor
scas
in
ja
mov
inc
sbb
lods
jae
add
fistpll
xchg
jb
out
in
ret
push
cltd
pushf
mov
sbb
shll
xor
adc
cmpsl
dec
adc
push
rcl
cmp
inc
xchg
sbb
xor
shll
xor
mov
test
gs
fwait
out
push
fidivl
ja
shll
std
test
ljmp
inc
scas
icebp
test
fcomps
adc
ljmp
or
push
in
out
pop
xor
mov
in
out
scas
jp
jge
pop
and
mov
jno
push
jb
fidivrs
mov
cli
test
cltd
xchg
adc
dec
pop
in
sub
sub
lret
inc
imull
mov
or
jle
push
adc
ja
mov
fadd
mov
fwait
inc
mov
push
js
mov
inc
pushf
enter
ljmp
mov
fcoms
arpl
je
inc
test
mov
pushf
pushf
or
pop
aaa
push
xchg
mov
minps
cld
xlat
outsb
push
sub
lods
in
cmp
stos
jno
sbb
test
daa
and
mov
sub
je
dec
add
adc
mov
adc
lods
or
mov
pop
sbb
xorb
jp
outsl
xchg
and
enter
inc
add
xchg
jmp
stc
push
cmp
jl
movsl
xor
pop
inc
xchg
xlat
adc
lcall
jb
sbb
or
dec
add
and
mov
movd
sbb
shll
call
dec
lret
cld
push
idivl
inc
xchg
push
aaa
test
das
push
adc
and
cs
imul
out
xor
add
pop
xchg
sub
clc
fbstp
cmp
add
std
inc
or
daa
inc
mov
imul
dec
push
insb
dec
outsl
rcrb
push
or
add
and
lds
neg
testl
ret
dec
xchg
mov
fwait
iret
clc
shll
push
pop
pop
imull
call
dec
xchg
lret
fstps
iret
or
inc
cld
ja
push
pop
into
into
sahf
ret
imul
xchg
mov
fdivrs
addr16
fisubl
lahf
test
ret
dec
push
stc
jl
cmp
lea
aad
xchg
mov
inc
xchg
mov
cmpsb
pop
in
mov
jbe
xlat
jnp
jmp
ret
cmp
clc
outsl
int3
ret
pop
jl
xchg
insb
mov
cld
stc
sbb
push
nop
jnp
jb
jmp
rcrb
add
mov
jno
push
pop
std
xor
in
xlat
pop
sub
dec
cmpsl
or
sbb
pop
leave
pop
out
mov
sub
mov
das
hlt
or
adc
ficoml
insb
arpl
dec
xchg
jp
pop
inc
ljmp
sub
cmc
sbb
pop
adc
scas
psrad
dec
push
sub
nop
pop
jns
lret
jecxz
ret
mov
xor
mov
xchg
cmpsb
daa
lea
sub
lea
les
cwtl
xchg
add
adc
shrl
xchg
sub
sar
jmp
dec
mov
in
cmc
sarb
ret
out
cmpsl
or
push
notb
lret
dec
dec
call
stos
into
loop
lcall
sbb
clc
xor
cmp
dec
leave
outsb
clc
cmp
cld
jbe
pushl
test
jl
pop
pop
mov
movsb
dec
mov
jb
mov
ljmp
cwtl
jne
dec
mov
ficompl
bound
xchg
jmp
sbb
push
push
cld
shl
cmpsb
das
jle
dec
and
xor
inc
scas
test
xchg
jmp
pop
jge
xor
pop
xchg
jnp
jo
xor
mov
pop
xchg
jmp
mov
pop
sti
aad
cli
dec
into
loop
mov
and
mov
stc
cmp
or
movsb
xlat
xchg
ret
add
rcll
in
sub
cli
or
movsl
pushf
out
gs
mov
not
xchg
push
jle
pop
je
inc
out
xchg
int3
sub
sbb
in
jge
sbbl
sbbb
or
sub
cmpb
jle
or
arpl
movsl
adc
mov
mov
push
pop
xchg
jecxz
adc
cmp
mov
subl
mov
fmulp
popf
loopne
sbb
cld
pop
dec
lods
jg
outsl
jp
call
clc
scas
push
hlt
push
pop
push
jns
fisubrl
push
or
mov
jo
pop
xchg
shl
mov
iret
lods
cmpsl
jbe
lock
decl
test
imulb
divl
dec
arpl
pop
idivl
leave
call
popf
adc
lds
pusha
sub
cs
xor
enter
call
insl
jno
mov
sub
cmpb
mov
xchg
sbbb
call
mov
cmc
pop
xchg
jle
cmp
add
lea
inc
sar
jecxz
pop
sbb
cli
es
cmp
add
xchg
addr16
or
and
stos
pop
and
xchg
incb
icebp
sarl
or
cmpsl
jl
daa
push
push
cltd
or
out
xchg
into
sti
sub
cmp
mov
fucom
or
push
out
dec
out
mov
mov
push
mov
mov
xchg
jno
arpl
lahf
cwtl
cmp
jmp
fprem1
add
sub
dec
or
mov
adc
mov
pusha
jnp
and
movsb
push
decl
xorl
shrb
sahf
repz
test
sahf
outsb
xor
sbb
ss
pop
in
addb
test
pop
sbb
jns
sub
test
js
popf
sbb
in
or
mov
jo
xor
stos
lock
sarl
pusha
xchg
pushf
push
negb
dec
jnp
xorl
out
jmp
outsb
pushf
jno
fstps
cmp
insl
mov
jno
xor
ljmp
jns
xor
fistl
jg
mov
popf
cmpsl
inc
jb
stos
notl
jle
xchg
sarl
fstpt
mov
adc
mov
add
jo
loop
movsl
nop
cs
ja
int3
pop
cmc
fdivrl
cmp
jl
pop
bound
adc
scas
mov
sbb
sbb
adc
push
test
mov
std
add
inc
inc
inc
lods
or
fwait
hlt
xor
push
imul
dec
pop
pop
ljmp
push
mov
enter
sbb
jno
pusha
sbb
aas
movsb
sarl
push
or
inc
mov
ffreep
movsl
stos
or
or
adc
popf
push
int3
loopne
test
pop
push
sbb
inc
sar
sbb
inc
sbb
ret
lods
mov
fsubs
jmp
mov
ret
mov
xor
dec
xlat
mov
fimuls
xchg
sbb
rcrb
push
lahf
in
or
mov
mov
jmp
movsl
into
shr
pusha
push
adc
xchg
imul
cmpsb
dec
cmp
jecxz
mov
jle
and
shlb
jle
jp
subb
imull
mov
pop
adcl
xlat
mov
cwtl
xrelease
shll
pcmpgtd
jo
clc
mov
mov
std
add
xchg
imul
cmp
jg
xchg
cmp
pop
and
ret
dec
sahf
jnp
dec
jno
dec
sbb
int
enter
push
inc
and
push
ljmp
call
push
fs
push
mov
pushf
inc
incb
sbb
fisttpl
pop
pop
push
fcomps
lret
push
dec
fisubrs
cmpsb
aaa
test
sbb
dec
rcll
adc
icebp
in
insb
ret
adc
daa
xor
push
dec
outsl
push
and
repnz
mov
fwait
push
mov
jb
int
or
xor
add
and
xor
mov
dec
loope
gs
shll
je
cltd
sti
adc
pop
sbb
sbb
mov
das
push
ret
inc
and
mov
jae
and
rcrl
lret
inc
repnz
add
fadds
mov
loop
pop
add
dec
dec
lock
push
dec
outsb
push
mov
mov
jp
jne
add
xchg
inc
add
pop
stc
mov
out
dec
lods
stc
pop
into
xchg
fwait
int
mov
ljmp
subl
add
add
dec
mov
sahf
cld
fsts
mov
fsub
xchg
jns
jecxz
out
es
fwait
loope
sub
cwtl
adc
test
and
mov
xchg
nop
mov
enter
mov
or
mov
xchg
mov
addl
out
repz
in
das
sbb
adc
sub
rol
or
pop
cmpsl
call
testl
lret
jbe
add
push
in
icebp
mov
int3
sub
outsb
mov
repnz
mov
pop
test
arpl
jp
push
pop
ficompl
xor
xchg
enter
mov
mov
test
or
mov
mov
fidivrs
rorl
out
mov
out
lea
icebp
cli
or
push
mov
fstpl
ds
push
fucomp
stos
hlt
sub
inc
mov
adc
and
mov
hlt
adc
mov
addps
inc
shrl
scas
dec
in
pop
fcmovbe
lea
mov
pushf
pusha
fidivrs
daa
sbbb
scas
outsl
sbb
loope
in
cmpsb
inc
or
aaa
cwtl
icebp
sub
in
loope
xchg
cmp
xchg
mov
cld
cmpsl
xchg
cwtl
pop
fildll
push
push
aad
xchg
inc
dec
lock
adc
inc
mov
daa
sbb
pop
cmp
pop
mov
aaa
clc
lods
jl
mov
lret
pop
mov
sub
cmp
or
std
push
mov
in
je
xchg
nop
repnz
lds
mov
hlt
add
ror
ss
pop
xchg
mov
mulb
arpl
ret
xor
mov
test
lcall
add
fcompp
push
sbb
into
xlat
test
addr16
and
pop
test
pop
sbb
dec
dec
sarb
mov
jo
mov
sahf
sbb
inc
sti
stc
inc
sbb
adc
pop
fdivl
imul
jmp
aad
sti
les
fstpt
es
push
pop
cwtl
add
push
mov
mov
addr16
push
mov
and
xchg
jmp
cmp
mov
push
dec
stos
xlat
or
xlat
jb
loope
xchg
cmpsl
cmp
enter
clc
movsl
inc
and
mov
data16
mov
jecxz
call
add
movsl
lahf
xor
loope
int
lcall
out
or
addr16
or
leave
cmp
or
or
inc
nop
imul
cwtl
in
adc
mov
mov
bound
or
adc
std
sub
dec
inc
push
lret
sarl
pop
add
mov
sub
popf
jge
int
shl
loopne
imul
mov
mov
pushf
or
mov
push
cmp
dec
push
jae
test
iret
insb
add
sahf
movsl
popf
subb
push
push
lds
sub
notl
push
xchg
jg
mov
aaa
xor
ret
add
mov
or
dec
lea
aas
arpl
jmp
pop
mov
mov
fistpl
cmpsl
cmc
gs
imul
aad
lds
or
lods
sbb
push
cwtl
stos
pop
adcb
or
out
aam
or
pop
sarl
popf
clc
pop
mov
dec
add
mov
insl
ret
cmp
lret
mov
xchg
mov
adc
xor
daa
stos
and
lea
xchg
cli
fcoml
adc
pop
leave
scas
inc
xchg
mov
ret
push
xchg
xlat
push
andl
push
imul
shrb
ret
rclb
add
outsl
push
or
push
stos
mov
or
sti
fwait
adc
mov
int3
cmp
sub
fcoms
adc
xchg
orb
mov
pop
pop
dec
insl
adc
cmp
mov
fcom
sahf
addl
icebp
je
int3
in
xchg
jge
jnp
enter
jns
cli
mov
pop
int
cmc
subb
or
xchg
cwtl
jns
push
mov
imul
subb
faddp
push
sub
lcall
xlat
mov
pop
sbb
cmpsb
push
lock
fwait
test
cmp
pop
mov
loop
adc
dec
std
dec
testl
stos
lock
mov
mov
mov
insb
insb
stos
push
sbb
enter
cld
movsl
or
cmp
push
pop
orb
mov
in
sbb
insb
adc
hlt
xor
push
push
and
movsb
mov
out
or
mov
insl
add
dec
test
or
xchg
xlat
push
jnp
adc
pop
in
sbb
lret
jne
xor
aam
fisubl
push
push
fs
fmuls
mov
iret
and
mov
pop
outsl
lret
sbb
ds
ja
faddl
sub
and
cmpsb
push
loopne
movb
out
fsubl
push
push
dec
ljmp
cltd
std
lods
xchg
cli
lahf
aas
mov
add
cltd
cmp
cld
jmp
flds
inc
adc
sahf
push
cld
mov
stos
mov
lods
ss
daa
xchg
add
push
daa
mov
outsb
std
xorl
pop
push
mov
mov
mov
or
into
jo
dec
aas
or
adcl
cmp
xchg
mov
fsts
cltd
inc
xchg
rolb
adc
lret
push
dec
lods
pop
int3
pop
lret
dec
or
iret
fcomi
cmpsb
mov
xor
fucomp
fwait
adc
in
cmp
cld
subb
jo
rclb
pop
in
push
lods
or
add
gs
repz
dec
push
rclb
mov
aaa
mov
inc
lds
mov
enter
test
adc
push
mov
push
pop
or
cli
xchg
dec
cmpsb
fidivs
outsb
mov
adc
addr16
mov
xchg
push
ds
mov
push
push
rorb
out
mov
sbb
mov
and
popa
adc
push
out
loope
xchg
decl
pop
int
lret
jae
mov
xchg
gs
inc
adc
xchg
xchg
jb
adcl
mov
lods
sub
pop
aas
push
test
or
dec
mov
adc
stos
mov
mov
xchg
stos
adc
fimull
xchg
idivl
pop
out
sub
jbe
js
pushf
fwait
cli
sbb
mov
mov
adc
jmp
orb
cwtl
adc
push
lretw
push
mov
fistpll
imul
lods
lods
movsl
sub
stos
dec
and
inc
push
arpl
into
outsb
mov
pop
outsl
ret
xchg
pusha
js
sub
mov
test
push
addr16
adc
mov
dec
push
sbb
add
mov
mov
stos
push
or
xchg
cli
dec
or
mov
pop
popf
and
rolb
xchg
push
xchg
xchg
in
add
mov
mov
push
jae
dec
rclb
rorl
in
jnp
sbb
clc
jl
popa
leave
fwait
mov
mov
mov
scas
cmpsl
mov
mov
out
jo
scas
jg
adc
outsl
xchg
mov
pop
inc
xchg
mov
inc
inc
cmp
cmc
add
inc
xlat
inc
xchg
je
daa
pop
jne
out
jnp
lods
js,pn
xchg
pop
repz
fs
adc
sysexit
sbb
mov
or
mov
pop
hlt
test
xchg
loopne
leave
leave
scas
mov
ljmp
pusha
xor
lock
es
dec
addr16
cltd
mov
es
adc
push
add
mov
or
add
sbb
dec
sbb
cmovnp
in
gs
loop
pop
push
orb
popa
jg
adc
mov
mov
inc
inc
test
and
mov
xor
add
mov
call
ja
in
xor
aam
pop
aam
push
mov
in
in
leave
inc
or
lock
daa
push
mov
xlat
arpl
xor
bound
inc
lahf
cmp
lods
add
and
shl
lcall
rcrb
daa
enter
pushf
ja
push
sti
sub
leave
mov
inc
arpl
inc
pop
adc
mov
cwtl
test
cmp
inc
dec
and
adc
xchg
mov
dec
add
notb
pop
xchg
ljmp
lds
into
aas
push
dec
sbb
pop
repnz
and
fs
aaa
cmp
pushf
lds
add
xchg
mov
and
bnd
push
mov
xchg
out
loope
push
cmp
out
or
std
leave
fisubl
mov
mov
daa
inc
stc
cmp
js
rolb
notl
mov
ds
lock
push
push
stos
jp
adc
dec
mov
or
cmp
jmp
popa
mov
gs
jno
ret
lea
jg
jl
jle
mov
cmp
mov
inc
xchg
jae
ljmp
mov
movsl
inc
dec
cmp
pop
fwait
sbb
mov
and
or
mov
cltd
push
ret
test
push
inc
icebp
xlat
jp
push
jne
push
push
gs
add
fpatan
jge
and
movsb
cli
mov
faddl
outsl
mov
fisubrl
inc
sub
popf
or
rcll
arpl
add
mov
stos
rcrl
push
add
pusha
scas
fcmovb
int3
rolb
out
mov
adc
dec
sbb
xor
adc
lret
mov
mov
cmpb
add
es
adc
xchg
push
loope
xor
pop
or
push
ret
mov
lcall
gs
mov
mov
pop
sub
adc
or
mov
sbb
cmp
or
stos
and
repnz
das
scas
pushl
sub
dec
aaa
push
loopne
sbb
lret
push
insl
mov
ficompl
fcoml
cmp
inc
rolb
push
loopne
sub
dec
push
and
les
dec
xchg
or
mov
cmpsb
rclb
les
out
sub
jne
mov
jnp
jl
xor
jnp
sub
push
jle
int3
mov
push
adc
or
inc
push
fistl
xchg
popa
arpl
mov
add
ljmp
cmp
lds
fdivrs
mov
inc
jle
fistpl
arpl
jo
dec
xchg
and
pop
cmpsl
cmp
lea
pop
add
cltd
dec
or
mov
data16
pushf
sub
mov
out
mov
push
push
jge
dec
pop
sbb
pop
out
incl
test
bound
in
fisubl
daa
repnz
inc
cmp
fcmovne
insb
jg
mov
mov
mov
or
jb
mov
insl
loope
add
cmpsb
je
inc
dec
sbb
pop
or
push
inc
jmp
imul
popa
loop
cmp
xchg
or
or
jae
sbb
dec
or
sbb
pop
push
out
outsb
in
fmull
test
xor
pop
jo
rcrb
mov
paddw
insb
bound
call
add
data16
cmp
cmp
bound
fwait
and
sbb
push
mov
dec
ja
repz
cmc
fs
push
out
pop
bound
mov
insb
rcll
hlt
mov
in
and
mov
mov
nop
xchg
dec
mov
jno
pop
adc
and
cli
xor
mov
pop
inc
incw
pop
xchg
cs
unpckhps
jg
testl
xlat
xchg
xchg
testb
int3
add
jnp
popa
jge
subb
ljmp
ss
mov
mov
call
and
mov
rorb
mov
popa
and
inc
movsb
test
decl
sbb
and
jge
shrb
bound
insb
pop
sbb
xor
call
icebp
mov
sub
popf
aas
jne
jge
xlat
jno
aam
pushf
fdivl
pop
pop
repnz
xchg
imul
into
add
mov
jno
in
ret
cmp
jle
push
sub
sub
mov
xchg
push
iret
jns
popa
repz
xor
xchg
fildl
jmp
orb
hlt
lods
and
icebp
mov
inc
shll
pop
mov
fwait
adcl
dec
lds
je
sbb
adc
stc
mov
adc
mov
lds
cmp
and
test
scas
std
cld
lldt
dec
push
or
in
test
mov
hlt
pop
mov
repz
mov
fsub
pop
popf
loope
ret
out
dec
xor
scas
out
sti
sbb
jl
sti
adc
fwait
pop
lret
mov
cmp
loopne
scas
xchg
aam
in
xchg
cmp
test
adc
jo
pop
dec
ds
outsb
inc
jno
adc
adc
pop
and
adcl
jecxz
repz
xchg
cli
push
daa
addr16
push
movsl
add
inc
in
adc
dec
int3
pushf
addl
push
fcomps
jo
push
mov
xchg
jns
je
fsubrl
jb
mov
insl
outsb
sbb
cmp
dec
clc
enter
lret
bound
xlat
pusha
int3
addl
or
inc
in
and
lock
or
push
ljmp
js
nop
sub
out
cmpsl
mov
inc
repz
jnp
pop
sahf
clc
loope
inc
ret
and
adc
xor
jbe
mov
pusha
fnstsw
inc
lock
int3
aad
aad
lcall
sub
lock
push
inc
pusha
mov
jle
pop
and
lds
xlat
xor
cmpsb
inc
push
sbb
push
loop
mov
pop
mov
fisubrs
test
rcl
inc
dec
adc
mov
xchg
push
push
mov
stos
mov
mov
pop
push
mov
out
cmp
and
orl
enter
add
bnd
jae
push
lock
dec
into
mov
jle
cld
add
in
jmp
or
push
out
xchg
pop
scas
jnp
mov
jnp
add
jmp
daa
std
dec
out
push
nop
movl
mov
cmp
mov
mov
or
outsl
aas
cltd
int
xchg
mov
pop
insb
add
push
pop
push
cmp
cs
in
jg
pop
xchg
mov
call
cld
nop
scas
mov
xor
aas
fildl
test
jns
cwtl
jle
pop
pushf
jno
fcmove
in
xchg
pop
lods
into
jg
push
mov
negb
fadds
cld
lcall
mov
mov
push
xchg
testb
add
mov
jl
int3
fnsave
addr16
imull
stc
adc
in
rcr
jmp
jae
sub
dec
je
jo
xchg
xor
sahf
cmp
std
int
cltd
clc
imul
add
sub
out
bound
push
xchg
and
frstor
ljmp
lds
data16
mov
push
mov
mov
stc
push
outsl
test
cmc
jl
xor
sub
bound
push
lods
fsubrl
in
cmp
jno
outsb
lock
test
sbb
lcall
cmc
lret
or
and
dec
cs
add
dec
cli
dec
iret
addr16
stos
pop
lea
add
xor
mov
stos
and
mov
imul
into
xchg
xor
cmp
cld
ficomps
movsb
scas
cli
sub
movsl
in
rolb
movsb
shll
push
add
aaa
lret
mov
movq
inc
mov
es
mov
ret
sub
pusha
aad
jle
cmc
pop
incb
mov
add
iret
sbb
out
aaa
push
mov
add
inc
inc
inc
icebp
outsl
push
lret
pop
sub
sbb
clc
inc
nop
ret
sti
adc
mov
mov
mov
adc
ja
mov
sub
addr16
or
xchg
cmp
lret
clc
cld
cli
loope
test
cwtl
std
cmpsl
mov
jmp
cmp
jae
popf
mov
or
mov
dec
daa
call
jmp
mov
ret
ljmp
fldenv
es
cmp
fisubs
arpl
adc
or
xor
mov
xchg
push
fnstenv
pop
in
xchg
sub
pop
inc
pop
push
jnp
add
lret
sbb
out
xor
gs
add
and
lcall
adc
or
out
inc
inc
mov
cmpsb
loopne
es
and
inc
icebp
jnp
push
sbb
test
pop
out
cmp
int3
imul
add
into
pop
push
sbb
inc
mov
testb
pop
dec
jns
dec
clc
aaa
cltd
fdivrs
adc
je
mov
push
bnd
xor
loope
jl
loopne
inc
sbb
adc
movsb
lods
in
mov
orb
lods
cld
mov
outsb
sub
enter
jmp
add
jp
insb
inc
jle
data16
fcmovnb
fildl
subb
sub
rcrl
pop
jmp
in
scas
incl
or
adc
and
iret
mov
cld
mov
in
dec
xchg
pop
imul
or
out
cwtl
push
lock
lsl
sbb
or
loop
push
push
shrl
pop
sahf
movsb
fisubl
push
in
sub
inc
mov
add
enter
pop
aaa
xchg
xchg
cmp
mov
testb
aad
cwtl
enter
pop
fcom
movl
movsbl
push
es
fiaddl
push
fucomi
cmp
movsb
scas
ljmp
orl
dec
jne
xor
insl
test
pushf
in
adc
sub
lret
adc
xchg
stc
shrb
dec
dec
sbb
mov
ficoms
mov
in
and
repnz
add
in
mov
sbb
sub
pusha
pushf
adc
jecxz
pop
call
push
push
lcall
dec
xchg
pop
cld
movsl
or
sbb
cmp
int
cmp
idivb
movl
pop
inc
lret
imul
dec
cmpsl
adc
push
cmp
les
dec
add
aam
shl
inc
test
nop
cmpb
adc
or
pop
outsb
add
xor
enter
lods
stos
shl
sbb
jle
sbb
mov
addr16
adc
add
ja
add
sub
ret
pop
je
or
push
inc
mov
aaa
adc
inc
imul
pop
loope
leave
jl
pop
and
xchg
inc
mov
jne
lcall
and
jb
cmc
imul
inc
push
sbb
cmp
dec
lahf
cmpsl
lcall
std
mov
push
push
dec
scas
adc
je
add
test
outsb
adc
push
inc
data16
lret
leave
ljmp
bound
je
mov
jge
adc
push
adc
lret
stc
insb
and
xchg
xchg
mov
insl
bsf
sbb
je
shll
cmove
int3
push
push
cmp
mov
arpl
bound
inc
lods
inc
negl
and
mov
insl
shr
push
dec
jae
test
lea
lods
sub
inc
jle
push
jmp
mov
pop
mull
cli
cmp
clc
popa
xchg
stos
adc
cld
cmp
push
push
fnstsw
mov
inc
iret
ja
push
aaa
dec
mov
cmp
scas
and
hlt
mov
stos
inc
fwait
sbb
imul
stos
cmp
mov
shll
or
arpl
jp
je
in
arpl
js
shl
jge
jmp
mov
pop
test
sub
sahf
sahf
pop
and
xor
and
add
and
dec
sti
test
sub
cmp
push
mov
std
orb
bound
adc
fmull
xchg
test
loopne
fld
and
dec
divb
jmp
std
ret
cwtl
into
repz
out
adc
mov
xor
sbb
cmpsb
dec
lods
adc
push
and
das
lahf
scas
idivl
fidivrs
mov
jnp
outsl
xor
clc
fwait
cwtl
mov
mov
dec
cmpb
jge
mov
in
rorb
adc
jb
fmul
out
aam
push
in
pop
arpl
sub
test
and
inc
mov
mov
xlat
idiv
sbb
jecxz
mov
fimull
ljmp
inc
std
jle
jl
mov
cmp
in
and
scas
mov
mov
cmp
lret
dec
sub
jge
add
pop
int3
leave
mov
test
push
mov
test
sbb
pusha
mov
pop
cmp
push
sbb
insb
push
stc
movsl
xchg
cli
dec
int3
add
aaa
int3
out
iret
adc
movsl
or
push
add
pop
xchg
rclb
or
cmp
clc
lea
mov
cs
push
nop
ror
mov
mov
pushf
faddp
dec
shrb
cmp
jae
nop
fs
add
inc
xchg
scas
adc
jmp
xor
add
std
or
push
add
arpl
repnz
fists
or
push
in
dec
cwtl
jo
call
or
std
js
xchg
lock
notb
lret
dec
rclb
pop
ret
lret
push
seto
icebp
in
mov
pop
adc
ficoml
xor
in
dec
xlat
add
sbb
inc
mov
pop
iret
shl
dec
aas
mov
icebp
cmp
leave
cmp
xor
loopne
rcl
jg,pt
out
jmp
jp
icebp
jle
mov
mov
dec
in
xor
fimuls
xchg
jae
stos
pop
movsb
and
push
imul
jmp
inc
xchg
mov
insl
mov
stos
andb
roll
jno
pop
int3
pop
or
sbb
cmp
aas
rcrb
shrl
or
fidivrs
jb
je
stc
int3
mov
data16
add
push
xchg
rol
sbb
lcall
adc
jns
push
add
cmpsl
insl
sbb
test
jle
fisttpll
xchg
cmp
rol
out
nop
xchg
push
test
pop
int
gs
sub
pop
mov
pop
popa
mov
lods
mov
mov
mov
inc
push
mov
ret
or
or
sub
imul
adc
in
aas
jp
outsl
dec
xchg
bound
jp
cli
inc
incl
pusha
pop
lea
and
mov
mov
daa
scas
adc
xor
jge
fwait
pop
test
xlat
leave
mov
daa
pop
cmp
loop
in
dec
icebp
sub
jp
add
es
clc
fs
int
in
adc
push
lods
sub
sub
enter
lahf
subb
mov
add
mov
push
mov
push
lock
add
xchg
fiadds
adcl
xchg
fisttpl
dec
add
dec
mov
dec
addr16
iret
dec
jmp
and
cltd
les
pushf
sbb
addr16
js
addr16
cs
outsb
adc
lods
xchg
inc
xchg
xlat
push
loopne
imul
out
aad
dec
sbb
pop
in
pushf
mov
push
and
cmp
lea
stos
xchg
push
and
ljmp
imul
fbld
orl
fiaddl
out
pop
xlat
mov
jmp
xor
mov
xor
rorb
mov
sbb
push
mov
rclb
data16
xchg
pop
in
mov
or
mov
je
ret
sub
das
fbstp
fstpt
aad
popf
iret
out
cmp
insb
bound
cmp
push
adc
mov
out
subl
fadds
ret
and
cmp
cmp
cmp
insb
jns
test
sbb
sbbl
arpl
fiaddl
mov
neg
dec
in
xor
bound
pop
sub
int
jp
mov
mov
sbb
sbb
rorl
std
cmp
mov
cmp
add
jecxz
pusha
jo
or
pop
dec
imul
xor
xchg
add
push
hlt
and
lods
cwtl
jle
rol
dec
pop
and
mov
adc
push
jb
mov
das
ret
ds
enter
pop
bound
scas
pop
sub
sub
in
iret
daa
sbb
add
push
xchg
push
push
mov
rcr
mov
movsb
bound
pop
lods
lahf
aas
lcall
xchg
push
xchg
sti
in
inc
jmp
xchg
inc
subl
xchg
adc
add
repnz
in
and
pop
shrb
ss
gs
xchg
pusha
push
sub
clc
movsl
popa
adc
xlat
ja
or
ja
xchg
cli
or
mov
sub
jno
mov
or
ss
pushf
into
adc
cmp
sti
push
pop
movsl
sub
mov
fdivrs
sub
aam
mov
bound
pusha
cmp
clc
mov
sti
scas
aam
bound
add
icebp
xchg
sahf
cmc
enter
enter
leave
add
out
stos
or
popa
xchg
cltd
fwait
lcall
sti
sub
mov
in
std
mov
std
and
shll
fiadds
pop
sub
leave
cmp
pop
iret
mov
mov
lea
and
sbb
xchg
jns
sub
xchg
push
pop
call
cld
dec
jne
inc
push
xchg
icebp
ja
xlat
and
mov
lret
sbb
cmpsl
xor
in
mov
mov
aaa
scas
jge
sti
scas
mov
xchg
and
xchg
dec
inc
ds
dec
sbb
sbb
inc
aaa
mov
sub
sbb
mov
xchg
sub
das
mov
ss
or
dec
cltd
mov
out
ja
jne
daa
jbe
inc
in
add
ret
xchg
movsl
je
push
pushf
dec
test
lods
fadds
fmuls
enter
jl
std
aad
dec
xchg
xchg
sbb
fldt
insl
stos
mov
inc
cmp
xor
loopne
adc
lcall
push
jae
and
orl
push
out
outsl
sub
mov
popf
ffreep
jnp
es
ret
mov
cmpl
jns
repnz
add
movsl
xor
dec
inc
aas
adc
enter
push
jno
mov
std
or
xchg
flds
adc
outsb
pushf
ret
xorb
jl
sbb
mov
adc
cli
repz
or
jo
test
push
fldcw
jns
mov
aad
sub
or
jg
mov
ds
jl
pop
mov
leave
lret
mov
push
xor
loope
aaa
ficoml
jp
jl
xchg
mov
and
pop
push
out
fcompl
ret
fmul
adc
jae
and
jmp
pop
add
push
iret
cmp
insb
sbb
popf
mov
add
icebp
xor
das
sti
mov
mov
xchg
push
cmp
push
sub
lahf
sbb
mov
sbb
dec
test
aad
adc
mov
xor
cmp
cmpsl
adc
xchg
dec
pop
ja
dec
outsl
jge
in
je,pn
sub
mov
popa
sbb
mov
pushf
scas
sbb
mov
mov
int3
or
cmp
adc
rcrb
or
lahf
repnz
cld
inc
mov
stc
xchg
mov
insb
lods
push
cmpsl
dec
add
incb
sub
inc
adc
ds
inc
sub
shrb
mov
cmp
lds
mov
inc
push
fmuls
push
jecxz
insl
idivb
mov
lcall
out
cmp
sub
popf
sbb
out
adc
mov
mov
push
or
xlat
popf
mov
daa
and
jae
pop
push
sbb
jno
mov
jp
iret
inc
out
icebp
adc
inc
jge
pop
fldl
add
mov
sbb
and
std
xorb
sbb
add
das
mov
jl
adc
mov
and
shrb
jmp
subb
pop
cvtps2pd
ret
hlt
pushf
sub
fdivs
dec
rcrl
fimull
das
lret
addl
ss
sub
push
jmp
xorl
test
push
sbb
loope
pop
fisubrl
aas
mov
cmpsl
mov
int3
idivl
bound
dec
shl
jno
mov
inc
mov
sarl
inc
aaa
insb
xchg
dec
movsb
fidivrs
mov
int3
add
in
in
xor
test
sub
mov
inc
dec
out
cmp
or
sti
loop
sub
dec
xor
inc
inc
add
lret
sarb
sbb
into
lds
push
mov
out
call
hlt
lahf
cmp
mov
data16
loop
popa
nop
cmp
push
jae
jae
xor
iret
xor
adc
cmp
bound
xor
andl
xchg
les
cs
mov
or
jp
outsl
mov
mov
inc
es
aad
pop
dec
add
les
jle
xchg
push
fisttps
jmp
pop
fmull
fcomi
xchg
movsb
mov
pop
pop
mov
sbb
mov
cwtl
or
fidivrl
shl
test
sub
jl
leave
imul
ret
and
push
mov
inc
dec
jbe
mov
and
pop
pop
into
pushf
cmp
xchg
adcl
xlat
cmp
in
mov
mov
mov
mov
leave
imul
das
lods
ljmp
and
push
push
jecxz
mov
daa
sub
inc
pop
dec
test
test
push
and
insb
add
js
xor
inc
pop
dec
fsubrs
push
leave
xorb
sub
pusha
rcrb
addl
iret
sbbl
adc
rolb
xor
inc
cmc
xor
mov
lret
mov
in
out
fbld
adc
gs
pusha
add
pop
mov
das
dec
outsb
pop
lea
dec
add
xor
fldcw
sti
add
pop
scas
push
push
loope
mov
cli
pop
fstpt
sbb
hlt
jl
loope
lods
jns
das
inc
mov
push
outsl
cmp
pop
push
mov
lret
int
call
jns
adc
or
jbe,pn
sti
lds
mov
mov
mov
cmovle
sub
je
rorb
in
push
and
or
movhps
fidivs
dec
lcall
mov
pop
mov
lock
enter
dec
aad
jnp
xor
cmpb
fsubl
ljmp
dec
pushw
sti
stos
xor
pop
sub
dec
and
repnz
cmp
daa
addb
mov
cmp
push
fimull
sub
pop
mov
leave
and
in
sbb
or
lret
sbb
jne
sub
push
lods
xchg
jp
dec
dec
lods
xor
sar
call
adc
in
xchg
pop
imul
or
std
cmp
push
aaa
and
lods
rcll
xchg
mov
and
sbb
adc
imul
aas
mov
pusha
fwait
gs
or
loop
and
pusha
sbb
and
sbb
and
inc
xchg
mov
mov
enter
fwait
hlt
aam
sub
aam
sbb
into
out
push
jp
jmp
mov
fiaddl
in
pusha
and
jmp
mov
test
sub
jge
jmp
cmc
cmp
sbb
cs
jge
lock
xchg
xor
ljmp
xchg
mov
push
sub
mov
or
cmp
test
sbb
jmp
cli
add
adc
cmp
mov
push
das
cmp
mov
adc
sub
aas
mov
jl
cmp
mov
xchg
sub
jbe
insb
int3
dec
mov
cld
mov
in
test
or
xor
push
lret
lret
test
lea
movsb
aaa
mov
enter
out
or
out
mov
cmc
cmpl
dec
push
inc
inc
in
in
loop
mov
ret
insb
cld
add
sysenter
xchg
and
or
fistps
fcompl
std
sbb
mov
and
push
lods
jbe
push
adc
rcr
dec
clc
psubusw
mov
cmc
push
loopne
mov
mov
cmpsl
jne
fimuls
fstp
outsb
xchg
out
pop
bound
aad
push
dec
push
sbb
adc
jns
negl
jno
jmp
mov
outsl
nop
cli
fldl
inc
add
out
mov
dec
cwtl
mov
shll
pop
dec
in
les
stc
test
or
sub
popa
mov
cmp
in
stos
aam
scas
add
jnp
pop
sbb
das
push
xchg
lret
lcall
fmuls
loopne
and
pop
ljmp
cli
mov
jno
das
mov
push
gs
lea
sub
push
mov
fsts
add
test
dec
xor
std
lods
cmp
sti
mov
and
sti
stos
lods
mov
dec
and
iret
mov
sbbb
ja
xchg
popf
xor
pop
jg
sar
inc
bound
jp
mov
flds
leave
sub
mov
outsb
and
inc
in
in
cmc
push
in
ljmp
and
test
push
xor
outsb
jb
divl
ret
jmp
in
mov
jle
aad
ja
push
push
xor
ret
mov
or
jl
inc
jmp
lea
jmp
and
addr16
pop
mov
rcrl
adc
inc
inc
sarl
pop
aam
mov
and
loop
dec
pop
movsl
cld
daa
mov
sbb
jecxz
test
cmc
mov
mov
and
sub
scas
jmp
dec
cmpsl
lcall
xlat
leave
push
sbb
ficoml
fcompl
cli
bndstx
and
fdiv
movsb
adc
push
adc
inc
fs
pop
mov
mov
xchg
shrl
dec
aaa
stos
dec
movsb
ret
push
jb
add
repz
scas
pop
lods
adc
push
sbb
fbld
dec
into
push
pop
mov
lret
cltd
mov
xorl
mov
test
mov
mov
sahf
hlt
in
adc
mov
cmp
cwtl
lret
sub
and
xor
mov
out
insb
jns
mov
mov
cmc
sub
add
int
call
pop
shrb
js
push
lret
mov
sub
scas
and
jecxz
idivb
mov
lds
ret
fmull
inc
xor
lret
lcall
dec
shrb
xor
xchg
popf
das
rol
mov
dec
mov
js
cmp
dec
xchg
push
mov
xlat
loope
add
or
cmpsl
stc
or
rsm
jge
aas
rclb
mov
pusha
sbb
adc
cli
add
aas
xor
insb
lods
inc
inc
jecxz
sub
sub
push
int
adc
enter
mov
push
popa
or
sub
and
hlt
cmpsl
and
jnp
or
popa
adc
jns
in
das
test
ja
stc
pop
out
test
mov
popf
lods
xchg
leave
pop
jae
into
jb
movsb
sub
lods
or
sbb
aas
adc
fst
adc
cwtl
push
pop
cmp
in
sub
jnp
xchg
ss
icebp
imull
jmp
ret
mov
scas
cld
stos
sub
inc
outsb
cmp
loop
adc
aas
fsubl
aaa
cmp
cmp
fimuls
out
pusha
rcl
iret
cwtl
shrl
in
add
inc
mov
add
jmp
add
es
push
and
inc
dec
cld
pop
sub
loopne
divl
or
ss
sbbb
and
pop
adc
nop
fdivrs
js
or
leave
lahf
dec
lahf
xor
ret
test
adc
sub
push
data16
cmc
int
ljmp
mov
ds
lock
mov
inc
dec
push
mov
mov
ss
jbe
xabort
in
xchg
sub
mov
in
outsb
enter
ficompl
fs
sbb
arpl
jge
push
inc
mov
adc
xchg
imul
inc
das
mov
insl
add
xchg
mov
hlt
xlat
scas
inc
xchg
mov
xor
adc
jmp
dec
mov
sbb
fnstenv
ret
lods
outsl
pop
cld
jge
jl
xchg
in
sub
push
js
inc
divb
call
jb
stos
sbb
mov
aas
aad
test
fisubrl
add
dec
adc
xor
fwait
dec
jg
add
lret
in
mov
ss
adc
cmc
lods
xchg
aaa
push
test
jbe
and
mov
add
idivl
mov
dec
lds
pop
scas
xor
cmp
jle
pop
push
aas
or
stos
out
mov
lock
adc
lcall
lock
cmpsl
xchg
push
push
imulb
arpl
int3
ficoms
mov
jo
popa
mov
cmp
js
dec
outsl
mov
mov
cmpsl
leave
movsl
js
pop
addb
fidivrl
rol
push
mov
jp
mov
or
push
inc
xchg
sar
xchg
mov
aad
cwtl
incl
in
cwtl
mov
dec
sub
jne
jno
jne
insb
andl
pop
dec
add
mov
fstl
outsl
xchg
inc
add
je
or
pop
pop
dec
pop
lar
mov
pop
cwtl
jl
pop
adc
xor
imul
sub
aaa
cmpsl
out
lret
lods
add
mov
and
push
dec
mov
sub
lahf
roll
mov
inc
adc
lea
add
inc
std
dec
pop
pop
arpl
popf
sarb
les
hlt
rorl
adc
int
shrb
jl
lds
mov
cmp
pop
xchg
xor
cwtl
roll
mov
xchg
cmp
lcall
out
int3
inc
jo
jae
xor
outsb
ret
mov
out
add
sahf
or
pop
fstl
loopne
das
dec
push
or
faddl
call
xchg
sbb
popa
and
stos
and
loopne
mov
xchg
setb
xor
cmp
inc
inc
stc
cmp
fwait
jl
test
push
adc
mov
add
fdivrl
cmp
mov
cltd
cmp
les
inc
fsubl
or
mov
xor
cmc
push
push
or
inc
sbb
je
aam
lds
jp
xor
fbstp
int3
and
cltd
sub
pop
lret
push
stos
int3
iret
sti
inc
cmp
loop
add
addb
push
std
fmull
xchg
cmp
mov
adc
xor
movsl
xchg
pusha
cmp
and
test
dec
insb
mov
jp
gs
cmpsl
dec
jno
jnp
sti
popl
into
insl
lret
inc
jg
mov
loopne
jecxz
add
push
jl
or
daa
test
lahf
aam
mov
loop
adc
lcall
mov
xchg
mov
dec
stos
sarl
in
cmpsb
leave
or
cmpb
pop
negb
cmpsl
sub
cld
jge
lea
aas
xchg
stos
dec
dec
test
add
sbb
push
movsl
dec
outsb
sub
lahf
data16
outsb
xchg
fwait
jl
mov
mov
lods
xchg
leave
mov
fmull
fnsave
jecxz
add
ja
je
outsb
aas
xchg
out
add
movsb
int
and
xchg
lods
cmp
ficompl
jp
sarb
roll
lds
cmp
lods
mov
sub
pop
nop
push
adc
xchg
sahf
and
jo
lret
pop
add
cmp
cmp
dec
cmp
dec
adc
add
addb
or
bound
loop
movsb
jl
sbb
sti
cmp
pop
fwait
aas
test
sbb
das
test
push
cs
in
adcb
loopne
pop
pushf
lds
sub
xchg
mov
lcall
mov
cmpsb
cmp
pusha
cmp
cmp
mov
pop
sar
adc
pushf
out
jg
mov
jmp
sbb
or
ret
pop
dec
sahf
in
xchg
adc
in
mov
stos
out
lea
mov
jle
cmpsb
out
fstps
sete
das
and
push
std
and
xchg
cwtl
and
xchg
repnz
push
loope
loope
fwait
sbb
daa
ret
test
insl
daa
sbb
mov
xor
leave
bound
jb
das
mov
clc
push
es
fiaddl
mov
and
lahf
aad
push
arpl
imul
ljmp
popa
mov
mov
sar
out
sar
arpl
ss
cmp
fcoms
lea
loop
sub
into
adc
dec
cs
mov
popa
mov
and
loop
addr16
mov
popf
jo
sub
sbb
rcrl
mov
ss
pop
divl
sub
push
cli
push
paddusb
call
pop
call
or
adc
inc
mov
mov
and
divl
adc
and
adc
jnp
into
mov
loope
cmp
xor
or
or
outsb
pop
sub
mov
mov
mov
jg
mov
sahf
mov
dec
xlat
mov
pop
xchg
dec
mov
mulb
and
int
fcomps
dec
sbbl
xchg
cmp
mov
jecxz
jg
decb
add
fs
lods
stc
push
mov
lods
dec
lock
mov
fisttps
lods
or
mov
in
cltd
sbb
mov
xchg
jne
rol
imul
jne
mov
mul
jmp
sti
pop
popa
and
ret
in
jle
pop
xchg
pop
ja
repz
sbb
adc
inc
mov
les
lock
pop
cmpsl
lret
push
jp
shrl
sahf
pop
jmp
xchg
xchg
dec
jp
pop
cmp
sbb
or
in
fadds
cwtl
popf
xor
push
xchg
fistps
and
inc
cli
cmp
inc
xor
fisubl
cmp
adcb
mov
cmc
std
cltd
adc
jbe
jle
mov
in
out
frstor
mov
hlt
scas
das
scas
sti
in
jbe
imul
cmp
xchg
push
and
stos
mov
lods
je
xor
inc
int
sub
stos
rcll
xor
loope
push
xchg
sti
sub
xchg
lret
stos
ret
jge
xchg
mov
cld
mov
lds
xchg
scas
pop
jmp
pop
mov
gs
iret
adc
movsb
mov
mov
lock
popl
mov
stc
push
mov
leave
pop
jne
popa
jle
mov
mov
pop
xchg
mov
pop
enter
cmp
mov
outsb
ss
pusha
xchg
push
and
insb
ret
cmc
sbb
add
cmpsl
jl
mov
add
aas
mov
lods
inc
test
and
xorl
fstp
call
push
subl
jmp
cs
rorb
xchg
or
test
mov
cmp
repz
sbb
popa
test
cmpsl
scas
and
push
sub
cli
daa
jno
inc
inc
sbb
sahf
and
xchg
dec
mov
mov
aaa
iret
stc
js
add
xchg
xchg
test
dec
cmpsb
mov
push
imul
lcall
inc
push
mov
js
dec
jns
and
jae
mov
popa
pop
test
faddp
dec
mov
cmpsl
aas
bound
and
lcall
ds
imul
ja,pn
orb
mov
aam
adc
jns
cmp
or
mov
pushl
and
loope
sar
sbb
call
push
aad
out
jo
xlat
and
dec
cli
shrb
sar
or
push
dec
pop
in
mov
into
addb
in
adc
sub
push
jnp
scas
push
in
rorl
and
lldt
lcall
xor
mov
and
jl
push
out
imul
and
pop
dec
push
sahf
nop
int
aas
push
not
lahf
sub
mov
xchg
aad
je
xchg
arpl
fildll
pcmpeqw
out
in
fistpl
fs
sbb
sahf
stos
cmp
in
rol
les
aas
pop
hlt
imul
sbb
sub
leave
mov
insb
test
into
jle
mov
ss
shlb
push
leave
lods
test
xchg
add
ss
pop
xchg
xchg
sub
stos
pop
adc
mov
or
mov
cs
jmp
dec
inc
ret
arpl
cld
out
or
sbb
and
incl
adc
push
shll
xchg
push
push
movsb
sub
dec
loopne
xchg
dec
popa
add
inc
or
hlt
leave
xlat
push
jg
gs
sti
fistpl
pop
aaa
jne
dec
pusha
shrb
lcall
mov
ja
sub
clc
xchg
stos
xchg
lcall
push
xor
notb
and
cmpsl
jge
xchg
in
enter
shrb
sub
sarb
adc
push
lds
repnz
outsb
or
mov
fwait
addb
movsl
data16
push
aad
neg
addb
das
lods
add
std
or
out
int
iret
mov
sarb
sbbb
mov
fwait
push
add
add
imul
bound
dec
or
mov
jbe
sbb
sub
jb
sub
stos
and
push
pop
jge
sbb
inc
stos
add
add
pop
xchg
xor
inc
dec
xchg
ja
mov
mov
pop
mov
pusha
mov
push
xchg
popa
and
xor
int3
mov
sbb
repz
dec
xor
xchg
cmp
pop
lds
and
push
pop
xor
xchg
iret
jns
mov
pop
mov
cmp
out
mov
lahf
pop
mov
inc
pop
mov
or
jo
mov
dec
scas
shlb
jmp
cld
dec
and
outsl
outsl
enter
fcoml
sarb
pop
fs
pop
dec
push
push
pushf
out
or
pushf
nop
or
icebp
xor
mov
ljmp
out
or
sbb
sbb
dec
jg
add
mov
movsl
adc
sub
sub
mov
stos
sub
js
insl
fcoml
in
sbb
cli
or
icebp
lret
hlt
mov
lea
test
cmp
mov
mov
out
sub
in
enter
adc
xchg
arpl
sbb
call
call
lds
xor
add
sub
enter
aam
enter
sahf
ljmp
inc
les
xchg
insb
scas
cmpsl
jl
cli
inc
mov
in
xchg
and
push
pop
xchg
push
sub
test
ja
rclb
push
mov
sbb
jge
lcall
push
fnsave
xlat
pop
fsts
sti
jae
xchg
popa
jnp
aaa
mov
mov
or
jne
jno
xchg
ds
popf
enter
lea
cmp
sti
inc
jno
xchg
int3
pop
jmp
jmp
jnp
cld
mov
enter
jp
mov
pop
cmpsl
mov
xchg
iret
cwtl
ret
fldt
lock
repnz
nop
inc
adc
pop
jbe
mov
lea
icebp
sbb
int
cli
sarl
push
jnp
xchg
mov
and
inc
lea
mov
jp
or
mov
test
xor
sbb
xchg
lret
faddl
sbb
aad
icebp
sbb
add
jmp
mov
imul
mov
inc
mov
mov
and
sbbb
lds
xchg
test
loopne
jl
flds
test
pop
add
out
test
sub
ds
es
cmpsl
std
mov
jg
sub
or
jae
scas
add
mov
dec
in
sbb
mov
decl
mov
incb
mov
and
and
jle
mov
xchg
xchg
fcomp
iret
dec
lret
es
and
pop
mov
inc
shlb
xchg
aam
xchg
jecxz
mov
jb
cmp
fnstenv
xor
addr16
dec
hlt
mov
aam
movhps
mov
mov
dec
dec
jno
xor
sbb
fadds
fisttpl
leave
xchg
jo
jb
jo,pt
aam
mov
sub
inc
xor
out
outsl
fnstenv
les
mov
mov
add
sbb
sub
sub
mov
mov
xor
out
add
sbb
dec
sti
push
adc
dec
push
hlt
insb
cmc
xchg
fldl
cwtl
leave
inc
rol
movsl
js
pop
clc
je
jb
xchg
or
mov
push
and
in
mov
jmp
dec
add
xchg
dec
mov
imul
push
in
add
mov
push
inc
cmp
sbb
mov
sub
jns
sti
outsl
inc
mov
jo
mov
sahf
mov
cmpl
jecxz
or
jecxz
inc
fistps
je
sub
adc
and
shll
popf
mov
scas
mov
in
repz
rorb
xchg
in
daa
in
inc
loopne
cmpsb
popa
lea
out
int3
push
in
adc
sub
aam
enter
mov
mov
push
sbb
cmpsb
jbe
in
mov
rcrb
mov
jnp
pop
ljmp
movsb
mov
xchg
adc
mov
ja
mov
sbb
icebp
or
shll
add
push
dec
in
lss
push
adc
aas
xchg
mov
inc
in
mov
nop
repnz
js
stc
pmulhuw
jno
xor
dec
adc
inc
orb
jecxz
fbld
mov
adc
xor
xor
ljmp
out
cmp
sarl
dec
xor
insl
cmp
or
or
imul
adc
addl
mov
movsb
push
dec
xor
jge
or
lods
sbb
mov
fimuls
loope
ret
sub
cmp
ficoms
ss
mov
sti
mov
imul
nop
ds
sub
lea
ret
add
test
jp
in
das
stos
stc
inc
js
xchg
sub
dec
je
adc
fbstp
ds
in
stc
fucomi
mov
ja
xchg
shlb
les
push
xor
and
or
cltd
insb
xchg
mov
mov
or
add
add
cmpsl
popf
mov
jge
test
lock
xchg
jl
stc
cmp
jno
leave
rclb
psrlw
dec
out
mov
mov
lret
xor
rcrl
push
fdivs
jg
push
mov
inc
hlt
mov
jmp
cli
add
in
mov
pop
test
aaa
ds
xchg
aad
add
and
mov
out
int3
push
mov
hlt
jp
sbb
push
pop
adc
jp
push
add
icebp
jns
and
sub
jmp
xchg
xor
sbb
jb
hlt
jp
nop
scas
stos
dec
pop
mov
out
es
adc
into
inc
lret
or
add
insl
pushf
mov
sbb
and
sbb
out
aad
outsl
clc
mov
push
mov
inc
fstp
into
sti
sub
push
push
popf
lds
jg
pop
mov
roll
leave
adc
outsb
or
pushf
popf
xor
mov
aaa
push
shll
mov
sub
scas
mov
sarb
shlb
fidivrl
fidivrs
or
jo
sarl
mov
mov
jb
call
call
adc
adc
add
nop
in
outsl
icebp
loop
inc
mov
xor
cmpsb
dec
rcl
sarl
inc
mov
test
sub
cwtl
aam
rorb
ss
imul
sbb
mov
sti
repnz
and
rclb
lds
rolb
dec
cltd
gs
test
mov
pop
mov
cmp
xchg
add
mov
scas
pop
push
inc
or
mov
aaa
popa
into
shll
inc
adc
loop
rcr
inc
mov
push
popl
shll
xor
in
inc
mov
sbb
mov
lods
mov
gs
sahf
fdivl
clc
jg
pop
imul
lret
imul
cmpsl
repz
mov
movsb
shlb
decl
mov
ret
cmpsb
pop
sub
insl
imul
div
xor
test
leave
pop
cmp
sbb
rolb
das
mov
jmp
jmp
daa
clc
roll
or
push
and
push
sub
or
ds
xor
xor
jge
xchg
mov
test
sbb
pop
cwtl
pop
mov
repz
vshufps
jnp
fstpt
cwtl
mov
stos
add
in
enter
adc
xor
xor
adc
push
out
scas
fcom
pop
or
xchg
push
mov
inc
ror
dec
bound
scas
push
sbbb
mov
pushl
inc
js
icebp
pusha
mov
sti
in
cld
dec
mov
xlat
mov
outsl
mov
mov
rclb
icebp
adc
cld
fwait
daa
cmp
repz
pop
daa
jne
cmp
and
fs
sub
pop
push
outsl
lret
clc
and
adc
xchg
repz
cld
push
imul
fcoms
jg
sbb
fcmovbe
or
mov
xchg
repnz
push
mov
fadd
inc
mov
or
jne
xchg
mov
in
pop
adc
ja
ljmp
inc
idiv
mov
test
test
xchg
repz
jbe
jmp
in
fimull
pusha
loop
sbb
cltd
movsb
sbb
lahf
push
add
adc
fnstenv
aam
jbe
movsl
push
or
add
fwait
mov
or
outsl
dec
lea
sbb
rcrb
push
fwait
sbb
sub
xchg
lret
inc
movsl
cmc
popl
scas
in
xor
add
mov
xchg
mov
add
jnp
movsb
movsl
je
pusha
jnp
mov
cmp
lea
gs
insl
int3
cmp
sbb
or
stos
inc
pop
imul
jmp
xchg
sub
roll
bound
test
lods
ret
lods
push
inc
and
loop
cmp
addr16
add
or
adcb
push
and
cmpsl
shr
mov
mov
jnp
stos
push
xor
xlat
lock
jne
mov
and
lods
dec
negb
dec
jecxz
lret
mov
nop
xor
insl
and
movl
pop
inc
mov
incl
subl
xchg
sti
loopne
scas
test
aad
adc
and
ljmp
arpl
rcl
stc
ret
pand
or
jnp
icebp
sub
in
inc
push
or
pop
jnp
leave
fcomip
stc
pop
or
inc
test
in
in
repnz
mov
enter
test
mov
adc
popf
fdivrl
push
sbb
dec
push
ficoms
fxch
xlat
mov
fwait
cmp
xchg
mov
jp
es
ficompl
mov
icebp
sbb
mov
mov
mov
jae
inc
repnz
and
jnp
inc
cmp
pusha
mov
test
imul
iret
popf
inc
push
das
adc
push
xchg
fldenv
push
xchg
inc
sub
mov
cli
cmpb
mov
cmp
xor
loope
pop
add
inc
fwait
in
xor
roll
mov
or
sbb
out
leave
push
in
imul
sbbb
cmp
add
cmp
out
dec
aas
ljmp
cmp
cmovnp
pop
mov
call
jp
push
push
mov
ja
rorb
fsubrs
imul
sbbl
test
jb
xor
movsb
mov
pop
or
clc
shl
mov
mov
aad
out
adcb
or
cmp
or
dec
dec
test
clc
lea
lea
pop
test
and
adc
xchg
fsts
cmp
sub
inc
ljmp
hlt
lcall
leave
mov
lahf
out
xor
pop
imul
data16
mov
or
sub
fstps
mov
pop
adc
stc
cmpsl
pop
pop
dec
cmpsb
push
and
insl
xchg
mov
xor
jl
bound
stos
fimull
adc
push
push
sbb
call
ljmp
pop
mov
jb
ret
push
dec
push
movsl
xchg
lret
lret
bound
call
shlb
push
inc
int
pop
ja
decl
shll
and
fldenv
inc
cmp
pop
xor
ucomiss
in
or
leave
ja
shrl
jge
pop
mov
cmp
enter
fmuls
sub
push
aaa
mov
ret
mov
mov
cli
out
sbb
mov
adc
xor
out
push
imul
ja
mov
icebp
andb
mov
repnz
push
in
jnp
mov
lahf
sub
mov
cmp
xor
sub
lret
jbe
mov
and
push
or
jmp
mov
inc
sti
xchg
sbb
out
add
adc
push
inc
aas
les
into
push
into
mov
xchg
xchg
dec
mov
and
les
push
mov
mov
push
pop
enter
leave
in
shll
sbb
lret
popa
repz
adc
xchg
test
xchg
ds
or
xorb
xor
dec
sbb
cwtl
and
sub
pusha
mov
fisttpl
push
enter
js
mov
mov
mov
or
inc
loop
inc
push
push
mov
std
mov
shlb
push
mov
sbb
inc
getsec
lds
test
loopne
mulb
sub
testb
cmp
icebp
pop
movsl
test
rol
sub
subl
pop
arpl
pushf
mov
cwtl
pop
scas
and
pusha
in
and
adc
shr
sbb
mov
loope
cmpsb
xor
outsl
inc
je
jno
sub
out
push
pop
cld
sub
test
sub
stc
enter
pop
fstpt
xchg
pop
pop
inc
cmp
add
scas
sub
lahf
xchg
jmp
out
mov
sub
xchg
jmp
popf
inc
lock
and
in
cmpsl
int
mov
and
mov
jo
sub
mov
sub
lret
jae
test
loopne
mov
fnsave
lret
int3
push
xor
loopne
dec
cmc
mov
or
pop
sub
inc
xchg
xor
push
das
xlat
sbb
sahf
fisttps
push
subb
mov
ds
cmp
and
mov
pop
jno
stos
xor
xchg
cwtl
inc
jno
enter
movl
inc
in
std
cltd
fdivr
inc
push
ja
arpl
cwtl
and
pop
sbb
in
ljmp
pop
mov
jns
and
sbb
js
xor
rcl
stc
clc
stos
loope
jmp
mov
inc
stos
push
mov
ljmp
mov
pop
push
mov
outsl
icebp
or
mov
pop
outsb
clc
out
into
ret
mov
cmp
push
jmp
outsb
ficompl
nop
jne
xchg
xchg
jp
and
cmc
orb
dec
xor
jmp
jae
jb
jnp
mov
sub
retw
out
mov
testb
movsl
and
push
xor
mov
jo
pop
jmp
int
push
xchg
fisttpll
fisubrs
sbb
insb
dec
rorb
rclb
cld
dec
popa
movsl
push
subb
nop
or
and
jge
pop
imul
cmp
jb
pushf
lahf
xchg
daa
sar
loop
inc
repz
mov
popf
lods
loop
sbb
inc
mov
cmp
jl
and
jbe
pop
jecxz
xlat
xor
inc
push
sub
stos
add
mov
js
dec
sub
xchg
cmp
lods
lods
push
cmp
fwait
xor
mov
in
pop
cmp
cmp
cmp
ret
cmp
xor
and
rclb
inc
sbb
xchg
push
jmp
sbb
ss
shrb
cmp
xor
pop
fistps
je
popa
cmpsb
ficoml
xchg
cli
fsub
or
fidivs
lahf
mov
cli
push
add
or
test
les
into
jbe
jae
pop
inc
dec
adcl
ret
cmp
jb
test
push
scas
outsl
pop
xor
fstpl
mov
sbb
test
or
mov
or
mov
dec
jno
xor
xor
mov
inc
push
push
and
mov
ds
test
mov
adc
loopne
lret
inc
sub
xchg
cmp
dec
out
sub
pop
ljmp
push
das
addr16
js
mov
or
rcr
shlb
or
aam
ret
mov
dec
xchg
rclb
push
fsubr
inc
scas
aam
int
mov
add
xorb
push
push
xor
scas
pop
mov
jb
scas
sub
mov
mov
mov
jo
lcall
into
into
adc
xor
imul
or
or
jmp
out
pop
bnd
sbb
aad
adc
adcb
or
neg
pop
cs
pop
mov
sbb
gs
sbb
nop
pop
pop
push
jle
loopne
cmpsb
sbb
push
lods
jo
out
push
je
mov
sub
pusha
dec
lods
loope
cmc
sbb
mov
push
sbb
ja
cmp
dec
xchg
or
pop
xor
dec
movsl
movsb
scas
or
decb
lret
jmp
imul
fistpll
es
adc
movsl
pop
mov
add
std
xor
push
sub
add
dec
inc
es
jge
xor
rolb
inc
stos
dec
mov
dec
hlt
xor
push
mov
dec
aad
fisttps
pop
push
je
mov
fxtract
imull
pop
ss
dec
cmp
enter
sub
sbb
mov
or
call
test
mov
mov
movsl
mov
mov
call
add
decb
and
in
pop
add
loopne
out
nop
inc
sbb
hlt
add
mov
les
das
call
adc
sbb
cli
push
test
insb
vmwrite
gs
pusha
xchg
mov
push
fists
cmpsl
faddl
mov
inc
in
inc
mov
repz
pop
sub
mov
leave
insl
and
pop
mov
mov
aam
clc
or
xchg
enter
fcoms
in
jmp
xchg
pop
adc
xor
mov
shlb
push
imul
or
das
pusha
decl
pop
pop
repnz
push
inc
pusha
in
out
mov
add
jb
scas
test
or
fs
ja
mov
cmp
mov
fcompl
push
jne
repnz
insl
xchg
and
pop
data16
sub
xchg
std
cmp
jmp
mov
icebp
mov
test
mov
fwait
cmp
pminub
sub
or
ja
imul
pinsrw
repnz
dec
mov
xor
enter
iret
or
xchg
add
je
push
and
outsl
nop
mov
hlt
dec
or
and
pop
push
in
push
jns
push
pop
cltd
or
push
addr16
push
mov
xor
imul
add
lcall
lods
jle
pop
out
idivb
test
fwait
jbe
and
ss
iret
pop
add
xor
xor
dec
clc
scas
js
shl
mov
xchg
mov
mov
iret
mov
mov
xchg
sbb
frstor
sarl
lret
mov
int3
in
rcll
idivb
pop
sub
lahf
outsb
stos
xchg
push
sbb
sub
xchg
mov
loope
inc
push
push
xchg
jnp
popa
outsl
in
stc
lods
jbe
repnz
sub
icebp
subl
sub
adc
bound
add
lret
sbb
movsl
fisubl
push
push
out
push
movsb
jno
sub
sub
push
adc
outsb
xchg
push
cmpsb
jae
xor
push
xlat
out
jl
divb
int3
gs
hlt
hlt
add
aad
in
dec
clc
dec
dec
mov
cmpsl
std
pop
sbb
add
sbb
stos
xchg
not
fdivl
mov
cli
cltd
push
jnp
imul
movsl
popa
mov
sub
lret
mov
cmp
mov
lcall
fcomp
cmp
ret
out
jge
leave
push
adc
lods
imul
and
cli
jge
sub
mov
jl
pop
jo
divb
popf
jle
jb
iret
sahf
icebp
in
stos
fldz
les
dec
addr16
pop
cld
mov
push
sub
push
cmpsl
pop
cmp
jmp
stc
nop
aad
std
outsl
xor
ja
cmc
inc
xor
mov
aam
xchg
and
les
lahf
leave
jle
jno
xor
adc
mov
cmp
roll
lods
outsl
lret
push
xor
sub
mov
pcmpgtw
imul
incb
inc
mov
cmp
pop
and
mov
inc
adc
popf
pop
add
fsubs
scas
adc
sub
mov
push
fidivrl
test
xchg
ds
mov
xchg
pop
dec
dec
call
imul
push
notl
mov
add
jp
daa
lods
mov
mov
mov
daa
sub
mov
adc
pop
cs
add
pop
xor
jns
and
sbb
cli
cld
adc
shrb
sub
cmp
pop
sub
sub
jnp
test
pop
enter
subb
sub
ret
pop
inc
inc
adc
mov
sbb
test
push
and
or
push
adc
push
jg
push
xchg
sub
xchg
les
push
test
xchg
add
lods
stc
and
fisttpl
cli
pop
inc
stc
fidivrl
mov
out
lret
bound
xchg
sbb
outsb
cmc
in
inc
jle
fimull
rcr
je
adc
outsb
adc
stos
xchg
adc
cmp
loopne
loop
aad
lods
cmp
dec
sub
mov
pop
mov
ja
pop
addr16
inc
sahf
addr16
test
mov
lods
gs
pop
in
pop
push
push
or
notl
and
jb
cwtl
mov
jae
xchg
dec
out
lods
push
scas
mov
push
inc
out
or
dec
test
shl
pop
ss
adc
mov
lea
push
dec
mov
call
and
rol
ret
popa
nop
cmpsb
adc
icebp
pop
js
popf
inc
int
inc
pop
shrb
jecxz
scas
aam
fimull
inc
psubq
jle
sti
push
in
push
stos
sti
push
ljmp
popa
std
xlat
xor
outsl
aaa
shll
fsubrs
add
bound
add
mov
sahf
adc
mov
mov
fcmovbe
sarl
cli
aaa
pop
fists
adc
test
pusha
pop
cmp
into
xchg
push
mov
divb
rorb
daa
xor
sar
xchg
ljmp
xor
dec
jmp
or
stos
cmp
push
ficomps
and
pop
push
jle
mov
mov
into
outsl
loope
mov
xor
out
aaa
notb
add
mov
or
and
popf
dec
mov
js
jle
ret
xchg
aam
pushf
loop
add
pop
ja
rclb
push
cmp
mov
pop
xor
jle
xchg
mov
push
int3
lcall
push
jb
das
fidivs
xor
mov
pop
add
mov
dec
or
or
mov
mov
pop
adc
outsb
mov
cmpsb
xchg
jmp
inc
or
repz
mov
sbb
and
int3
xchg
push
xchg
mov
pusha
clc
dec
outsb
loopne
mov
lds
jecxz
mov
aad
mov
or
fsubl
xchg
mulb
loop
pop
pop
repnz
popa
movsl
mov
mov
adc
push
imul
stos
pushf
pop
sub
cmc
addb
push
mov
in
lock
test
jo
mov
mov
mov
inc
pusha
insb
sbb
inc
loope
enter
inc
int3
insb
outsl
xor
cmc
sub
aaa
shr
jne
pop
popa
subl
stos
ret
out
mov
iret
lock
leave
mov
das
xchg
dec
into
into
jl
test
mov
test
jae
ret
ds
cmp
add
adc
inc
test
adcl
jl
cmp
push
pop
sahf
in
pop
xchg
enter
leave
cli
std
out
fs
push
dec
orb
mov
enter
fldt
jbe
jae
mov
imul
jb
cmp
add
mov
ja
iret
lds
jp
aad
and
rcrl
mov
adc
push
ret
dec
pop
aad
into
inc
lea
add
dec
jl
lret
push
in
in
jmp
mov
test
fwait
add
cs
aas
bound
iret
lea
stc
push
jg
fwait
int
enter
out
hlt
pop
and
sbb
iret
lds
lock
mov
in
jnp
aaa
lret
adc
sub
adc
push
scas
lret
lcall
push
sbb
sub
test
push
rcrb
xor
fsub
imul
fnop
movsb
lret
fisttpl
xchg
mov
int
ds
mov
fsub
sub
push
rorl
cmp
cltd
insb
inc
in
jmp
adc
pop
dec
mov
dec
jo
lods
stos
fwait
scas
push
movl
mov
cmp
into
xchg
push
fldl
add
xchg
sbb
jp
xchg
cltd
mov
inc
rcl
ljmp
mov
popa
pop
pop
dec
fimull
inc
mov
leave
push
out
clc
loope
xlat
push
mov
fmuls
test
sub
hlt
fucomp
xchg
cmp
pop
jb
punpckhdq
adc
subl
test
dec
pop
mov
and
mov
in
rcl
mov
int
mov
push
jp
push
and
add
xor
cmp
dec
or
scas
stc
lret
or
inc
push
pop
xchg
leave
dec
popl
outsl
sbbl
mov
push
scas
jae
sarb
jbe
add
pop
fwait
sub
out
mov
jle
repnz
inc
mov
push
je
xchg
orb
xchg
cmp
loop
ljmp
int3
xbegin
or
fsubr
fbld
rcrb
push
adc
aad
repz
out
icebp
inc
jne
iret
push
push
or
or
test
or
sub
in
ret
ffree
sub
incl
cli
dec
stos
aaa
jae
jne
jns
ret
sbb
xor
xor
mov
xchg
push
inc
popw
or
mov
or
notl
pusha
pop
jl
sbb
and
dec
cmpsl
repnz
nop
xor
pushl
incw
sub
add
out
leave
fs
and
out
inc
mov
bound
aas
dec
cltd
push
lea
aad
jnp
repz
ret
les
les
sbb
test
mov
push
loope
push
lahf
fidivrl
xor
cltd
push
xchg
adc
lcall
popf
adc
push
ljmp
dec
fadds
mov
fcomp
out
inc
repz
aad
add
ret
xor
xor
dec
je
jnp
or
shrb
mov
lret
cli
in
pusha
out
jp
mov
add
mov
fnsetpm(287
lcall
lret
icebp
lods
and
lcall
push
decl
mov
or
loope
push
cmpl
pop
add
mov
inc
iret
mov
fistpll
mov
mov
mov
xor
loopne
in
jecxz
dec
mov
scas
cld
fisubrs
es
cwtl
les
lea
sar
in
rcll
scas
ret
push
or
sar
push
mov
aas
sbb
pop
out
sbbl
sbb
in
iret
insl
movsb
dec
iret
sbb
test
shll
loopne
stc
mov
insl
test
xor
jb
or
xor
jl
sbb
addr16
sub
loope
xchg
mov
mov
xlat
mov
data16
rclb
sub
scas
mov
push
mov
dec
xchg
sub
sbb
clc
mov
pop
sbb
cld
adc
fwait
inc
enter
subl
mov
std
mov
cmp
pop
xchg
cmc
sbb
ror
sbb
inc
jge
pushf
xchg
add
jmp
ss
shll
cmp
xchg
testb
std
dec
movsb
mov
inc
shrl
arpl
xor
adc
mov
lea
mov
aam
and
pushl
rol
push
jecxz
psubsw
jecxz
shl
rcrb
and
push
notb
stc
insb
loope
sbb
loope
loopne
push
fwait
sti
cld
mov
data16
mov
pop
pop
or
js
xchg
cli
outsl
push
iret
lock
adc
pop
inc
imull
arpl
sub
ja
in
ja
test
jb
imul
lahf
cltd
aas
adc
jnp
movsbl
test
mov
add
xchg
shr
lock
fisttpll
adc
fsubl
push
daa
inc
sub
sbb
bound
shrb
mov
sbb
jb
push
subl
cmc
adc
stc
dec
testl
shll
hlt
jmp
push
enter
mov
and
add
sub
and
rorb
xor
dec
rolb
imul
xor
add
call
cmpsb
push
shlb
mov
iret
inc
and
pminub
jle
pop
cmp
pop
divb
add
xchg
lret
xchg
hlt
icebp
sub
mov
or
or
mov
lods
xchg
push
jmp
jne
xchg
inc
jl
push
inc
pop
dec
pop
sbb
pop
mov
iret
push
or
inc
je
cs
dec
cwtl
ja
jmp
sub
lcall
sub
stos
out
into
mov
sbb
cmp
mov
movlps
or
inc
push
in
into
lahf
mov
mov
pop
push
stos
and
cmp
inc
pop
pushf
jno
xor
push
cmpsb
mov
mov
decl
inc
loope
xchg
jae
sub
mov
xchg
lret
cmpsl
xchg
mov
in
or
lods
shll
mov
fsubrs
std
shr
push
jno
jo
push
lret
jns
fisttps
sub
fistpl
and
inc
lss
shl
inc
fs
imul
lret
insb
call
scas
xchg
mov
ds
sahf
sarb
push
jmp
dec
cwtl
dec
xchg
cmpsb
xchg
fisubrl
and
lds
xchg
jge
icebp
pop
push
inc
repz
jmp
sub
adc
xchg
int
mov
mov
sahf
js
sub
lcall
fsubrl
adc
mov
mov
lock
repnz
xchg
ds
pop
mov
outsl
and
inc
sbb
call
xorl
xchg
popf
aam
outsb
addr16
push
cmp
sbb
push
push
out
fs
xor
cmp
pop
sbb
lods
sbb
jp
cmp
lods
jo
pushf
add
xchg
sub
and
fdivrs
cmp
test
out
or
sub
sub
call
mov
sbb
jle
jge
mov
out
xchg
in
out
adc
add
inc
std
das
pop
and
ficomps
or
rol
das
xchg
push
inc
dec
dec
lret
push
fs
sub
and
jmp
int3
push
sbb
xor
xchg
shrb
mov
push
cwtl
outsl
push
and
fsubrl
xchg
xor
sub
out
mov
popf
inc
inc
add
out
mov
push
mov
xor
ret
jmp
sbb
incb
cltd
sti
fists
popa
mov
push
cmp
call
jl
aam
jle
cli
mov
xorl
shrb
fstpl
into
adcl
pop
mov
ds
mov
pushf
adc
sub
bound
xor
popaw
xor
jne
clc
adc
cmpsl
jo
insl
adcb
in
xchg
mov
add
sub
xor
test
stos
sbb
adc
mov
scas
pop
push
mov
fs
mov
pop
pop
fldt
and
gs
testb
aaa
pop
mov
ficomps
xchg
stc
incb
dec
mov
imull
push
pop
inc
adc
aad
pop
fxch
and
pusha
and
mov
icebp
cmp
inc
lods
andb
out
xchg
adc
and
loope
dec
pushf
pop
mov
push
ds
gs
stos
pop
lahf
mov
fildll
aaa
pushf
inc
jp
adc
jbe
sbb
push
cmp
sub
icebp
cmp
decl
mov
jmp
aas
sbb
jns
loop
aad
ret
push
jnp
out
popf
dec
fwait
pop
push
or
xchg
mov
int3
insb
add
test
cmp
out
xchg
xchg
or
sub
outsl
out
cld
fs
jecxz
add
dec
std
stc
pop
addl
fcomps
push
mov
dec
testl
xchg
jle
add
or
filds
fs
or
fidivrl
cltd
lods
stc
and
rcl
mov
adc
test
ror
mov
dec
cmpl
aas
mov
mov
push
inc
pcmpeqw
pop
inc
mov
xor
cmpsb
pop
cltd
gs
pop
jae
jle
movsl
mov
sbb
dec
adc
jne
dec
out
out
mov
aam
test
cmp
fcoms
repnz
push
notb
fsubrl
je
adc
adc
inc
dec
jbe
ss
jle
xchg
jnp
cmp
testb
out
inc
adc
sub
cmp
lods
push
xlat
cwtl
addb
mov
movsl
mov
mov
pop
lcall
insb
in
aam
xchg
shrl
pop
mov
mov
xchg
cwtl
xor
inc
mov
pop
inc
jo
inc
pop
pushw
test
xchg
adc
call
jns
std
pop
addr16
bnd
ret
fsubrs
sub
pop
mov
cwtl
test
mov
daa
mov
test
addr16
mov
orl
ss
add
outsb
push
bound
cltd
sbb
sbb
mov
push
daa
stos
and
xchg
test
cmpsl
sbb
xchg
sbb
les
or
ret
stos
adc
sub
mov
mov
ljmp
push
cmpsb
sub
dec
addr16
push
in
mov
jp
aaa
add
movl
out
inc
xor
jmp
int3
and
push
lds
shl
xor
rcll
inc
stc
shrb
testb
insl
loopne
cld
cmp
dec
pop
aam
xor
jecxz
xlat
mov
cmpsb
mov
mov
jb
repz
and
test
pusha
loope
add
xchg
jne
inc
div
cmp
popf
and
sbb
jmp
push
mov
mov
fsubrl
jecxz
push
push
icebp
dec
xchg
sub
xor
jl
out
incl
sar
push
xor
sbb
add
data16
cmp
mov
adc
ds
pop
dec
bound
mov
dec
pop
sahf
dec
mov
inc
stc
arpl
cmp
push
iret
pop
mov
pop
cmp
sbb
xchg
add
gs
lock
rorl
xchg
jbe
cmp
dec
or
sub
cs
lea
aam
lret
incl
inc
loop
pop
les
loope
mov
popa
test
lret
sbb
add
fstpt
sbb
adc
push
mov
arpl
and
ret
cmp
xchg
cmpsl
jnp
and
pop
repnz
mov
jae
popa
cli
fcoml
adc
inc
pop
sub
mov
sub
xor
adc
aam
rcll
mov
aad
inc
scas
test
in
mov
mov
sub
mov
sbb
andb
pop
bswap
dec
lock
sub
std
jecxz
lcall
repnz
xor
call
loope
cmp
jns
cld
xor
into
mov
adc
pop
movsb
mov
dec
arpl
xchg
or
xchg
leave
jo
jp
cmp
push
lods
dec
mov
into
adc
mov
mov
fistps
sub
rolb
ucomiss
lret
xchg
dec
or
xor
dec
jb
outsl
adc
icebp
xchg
repz
pop
pop
xchg
inc
fidivl
mov
lea
ret
inc
out
fstp
in
icebp
pushf
mov
push
pusha
xorl
jo
mov
mov
and
sbb
xlat
sar
icebp
sbb
mov
subb
and
sub
mov
outsl
xchg
push
lods
imul
and
pop
and
bound
adc
stos
adc
dec
xchg
subb
rclb
sbb
ljmp
xchg
testb
mov
add
out
cltd
jns
xchg
pop
mov
aam
or
scas
es
daa
repz
jb
push
pop
repz
lods
mov
pop
jb
imul
xchg
mov
pop
ret
mov
and
xchg
push
movsb
mov
std
mov
add
mov
adc
sbb
push
loopne
sbb
emms
fldt
dec
ja
dec
mov
je
rorl
pusha
ss
or
inc
sub
push
inc
imul
dec
shlb
push
and
por
jge
add
mov
push
sub
ror
jecxz
orl
jp,pt
dec
popf
fst
push
inc
fdivrl
xchg
dec
lret
test
sti
mov
jne
data16
loop
mov
test
push
fistl
shlb
fs
fiadds
jg
rorb
adc
shl
dec
cmpl
jecxz
push
dec
mov
jb
jne
in
pop
sahf
fcomi
cltd
iret
dec
rcl
stc
inc
test
and
cmpsb
sub
in
out
sbb
arpl
lcall
std
sahf
sub
cltd
call
and
dec
arpl
jp
es
sub
adc
fmuls
mov
sbb
xor
stos
adc
pop
lcall
imul
mov
cmp
cmp
xchg
sub
sub
cs
into
sub
loope
mov
adc
push
pop
into
aas
out
ljmp
daa
mov
dec
sbb
stos
in
add
test
movlps
xchg
mov
leave
ss
mov
shr
mov
pushf
push
fisubrl
mov
sbb
xor
and
pop
sbb
pop
rcll
loop
pop
shll
mov
sub
mov
jl
outsl
ret
lods
icebp
dec
fcoml
or
inc
xchg
std
cmp
mov
movsb
dec
les
loopne
aas
nop
sbb
push
pushl
iret
jp
lahf
jle
xchg
jl
nop
stos
xor
stc
mov
cmpsb
das
imul
test
jae
jae
xor
jnp
leave
lret
call
and
fildll
xchg
mov
inc
push
and
sbb
and
adc
scas
pop
mov
imul
in
mov
mov
inc
addr16
mov
hlt
insb
ret
jmp
out
xchg
dec
sti
mov
pushf
stos
cmc
out
cmp
scas
imul
shrb
andl
jb
xor
popa
lock
or
or
mov
insl
sti
mov
cmc
rcrb
icebp
jp
das
dec
addr16
rorl
aad
aaa
mov
mov
filds
aad
push
push
out
or
ds
mov
or
movsb
outsl
shr
movsb
sbb
stos
adc
sbb
adc
jmp
mov
jns
xor
and
xchg
in
xchg
mov
mov
or
gs
xchg
pop
push
push
mov
dec
xchg
leave
pop
fcomi
xor
push
and
sub
cmpsb
lods
dec
shlb
sbb
dec
rcl
push
and
insl
ss
or
and
mov
mov
push
push
pop
add
ljmp
cmp
sub
adc
xlat
and
or
nop
pop
sbb
aaa
aad
dec
hlt
jle
jbe
rorl
fs
mov
inc
rcll
pop
cmp
andl
cmp
fwait
pop
test
push
mov
jns
movsb
fwait
mov
jo
inc
shll
cli
mov
js
dec
inc
imul
xor
jns
mov
xor
sub
mov
inc
xor
jl
add
leave
bound
in
jecxz
sbb
adcb
mov
cmpsb
hlt
mov
mov
ficompl
mov
mov
ret
sahf
data16
jae
pop
aad
xor
and
repnz
xchg
xchg
pop
data16
jmp
mov
movsb
sbb
fs
outsl
mov
mov
mov
sbb
js
in
lcall
push
push
xchg
or
fsub
aas
int3
lock
pop
dec
das
scas
enter
fs
push
mov
loopne
addr16
fwait
test
ret
mov
enter
mov
mov
cmp
fnsave
dec
cmp
mov
into
mov
xor
mov
mov
adc
sub
pop
pop
rorb
jns
scas
jno
fdivrp
movsl
fwait
scas
ja
mov
insl
push
scas
push
mov
push
mov
push
jle
les
out
adc
sbb
add
mov
aas
jmp
xchg
adc
cli
iret
fildl
mov
cmpsl
mov
or
int3
mov
addb
and
push
or
add
push
hlt
pop
inc
xor
into
jle
scas
pop
ret
dec
or
pushf
add
mov
xchg
mov
js
js
push
cli
push
nop
sbb
cmp
data16
loope
jmp
cmp
and
xor
xor
mov
sub
xor
inc
pop
loopne
enter
xor
jecxz
je
jmp
movswl
pop
push
rcrl
xor
push
mov
pop
add
sbb
jl
add
orl
pop
rcrl
push
icebp
xor
and
fcom
lret
push
sub
or
andl
and
inc
xor
jbe
into
push
pop
add
ret
mov
loope
out
jo
in
mov
xchg
mov
scas
mov
shrl
xor
push
repnz
mulb
cld
jle
mov
or
push
sbb
cmp
js
outsl
inc
mov
adc
and
adc
mov
enter
mov
lea
inc
cmpsb
fstl
mov
dec
jo
inc
pusha
jg
popf
sahf
fwait
jbe
sub
jg
outsl
cmp
decb
ljmp
lea
inc
mov
into
jne
dec
and
orl
and
add
loopne
fcom
outsb
jle
lahf
xor
sbb
nop
sbb
push
mov
mov
aad
mov
pop
vpsraw
int3
shl
ds
xchg
loope
jbe
gs
repnz
movsb
test
inc
xchg
aam
push
stos
push
addl
jne
int
pop
test
fstps
js
shlb
push
lret
sbbl
punpcklwd
jmp
adc
pop
jnp
scas
inc
les
movsl
imul
cmpsb
mov
push
push
xchg
imul
cli
stos
jo
cmp
pop
leave
mov
or
lcall
loop
mov
sbb
sub
incb
loopne
das
pop
stos
stos
repz
mov
inc
aaa
and
lret
pop
aam
dec
lahf
mov
loop
hlt
add
arpl
insl
in
out
andb
adc
xchg
cld
mov
pop
hlt
repnz
jae
lahf
xor
sahf
frstor
insb
addr16
das
lock
jnp
je
fmul
xor
lret
insl
pop
les
sbb
push
adc
cmp
gs
adc
and
shll
lods
popa
sub
ret
sub
lret
lret
icebp
sub
outsb
lock
cmc
sbb
cli
push
loop
cli
pushf
out
xchg
lcall
mov
pop
stos
adc
push
rorb
das
mov
cmc
sahf
mov
xchg
mov
aaa
sti
jbe
js
xchg
pop
inc
loope
sbb
and
hlt
mov
sbb
jmp
enter
out
xchg
and
fdivs
movsl
jo
notb
mov
sbb
out
mov
xchg
lods
and
frstor
xchg
orl
in
sbb
adc
mov
xchg
jg
test
pop
xchg
cmpsl
repnz
dec
gs
dec
scas
and
shrb
into
aam
aaa
jge
fmull
or
pop
or
mov
lahf
sub
lods
sub
adc
sbb
sbb
pop
enter
ljmp
mov
fstps
and
mov
lahf
pop
cmp
ds
rcll
sbb
sti
adc
mov
xchg
xchg
movsl
xchg
or
xor
fsts
push
call
in
loop
inc
jge
adc
dec
rorl
testb
mov
xlat
sbbl
test
or
mov
push
xor
lods
out
arpl
loop
or
mov
xchg
dec
ljmp
incl
xlat
xor
mov
jecxz
inc
mov
inc
aaa
ss
rclb
dec
flds
popf
and
xor
jge
push
loop
inc
push
push
xor
dec
pop
adcl
rcrb
orb
pop
in
mov
test
cmpsb
hlt
dec
push
cmp
pminsw
in
out
out
jmp
fmull
sub
adc
xchg
dec
gs
and
filds
enter
xchg
rorl
ret
add
iret
fmull
add
mov
cld
push
xchg
incl
loopne
cmp
out
mov
push
dec
fdivs
mov
leave
mov
jge
js
mov
and
and
and
outsb
push
xchg
enter
notl
mov
adc
add
mov
aas
pop
sub
cmp
loopne
fdivrs
pop
in
mov
test
xor
jp
pop
pop
mov
xor
and
and
dec
mov
movb
sbb
repnz
push
xor
pop
adc
mov
mov
push
mov
je
sti
jg
or
fstl
xchg
cli
or
dec
dec
lds
loop
mov
xor
lcall
mov
pop
push
lcall
enter
xor
jno
jecxz
cmpsb
dec
jp
adc
jns
jnp
push
sbb
fldt
pop
bnd
inc
pop
out
sbbb
adc
dec
dec
xlat
mov
adc
fidivrl
cmpsb
dec
int3
aaa
nop
mov
sbbb
xlat
inc
xor
mov
fnstenv
xchg
rcrb
xor
arpl
lods
or
jl
adc
les
xchg
ds
mov
fiadds
daa
outsb
out
ret
push
inc
sarb
dec
test
adc
push
mov
and
jo
jl
fstpl
xor
repnz
jbe
xchg
mov
push
mov
push
test
sub
sub
and
adc
push
stos
xchg
mov
imul
fs
mov
mov
in
dec
pop
add
and
dec
adc
gs
ds
push
cwtl
aas
sbb
leave
add
mov
or
mov
mov
fildl
rorl
fsubs
xchg
fs
xor
out
pusha
mov
dec
pop
jle
in
adc
adc
or
aaa
or
ror
sub
cvtps2pi
call
dec
ja
xchg
std
jae
cmp
and
loop
pushf
mov
pusha
cmpsl
mov
inc
xchg
xchg
sahf
fnsave
jg
pop
inc
ret
loope
fisttpll
sub
das
sarb
or
pusha
xorb
jns
cmp
mov
or
xor
stos
aas
jns
mov
inc
mov
in
out
xchg
pop
xchg
lahf
into
jo
xchg
mov
fdivl
rcrl
lcall
push
cs
sbb
adc
mov
mov
fwait
call
mov
insl
lds
loop
lea
mov
mov
mov
lods
scas
dec
pop
or
sbb
jle
pop
push
daa
lods
cmp
cltd
into
xor
outsb
cmp
and
dec
repz
rcrl
inc
sahf
xchg
int3
es
inc
out
lret
adc
call
cmp
inc
sub
adcl
sub
loopne
sub
jl
mov
imul
ror
inc
fsubrl
mov
les
push
inc
and
aas
cmpsl
insl
push
les
push
xchg
movsb
xchg
cmp
out
jne
mov
pusha
push
mov
jo
loope
outsb
or
je
sbb
ss
ror
pop
xor
data16
sbb
daa
sub
mov
scas
mov
and
inc
xlat
mov
mov
aas
push
and
pop
mov
dec
push
pusha
add
jge
stc
add
mov
addr16
divl
mov
or
pusha
inc
xor
test
movsl
lcall
pop
mov
and
and
cmp
call
fdiv
xchg
dec
mov
rorb
dec
jp
mov
cmp
cmp
add
cli
sub
xchg
mov
imul
int
fwait
repnz
subb
and
out
mov
mov
in
add
lahf
lods
jo
aad
and
lods
xor
out
jg
add
or
scas
lods
int
cmpsl
inc
scas
mov
xchg
or
aaa
cmp
inc
popf
push
mov
jae
addr16
rcr
add
add
repz
sbb
or
sti
adc
pop
jl
scas
repnz
fldt
gs
sub
mov
int3
aas
and
jg
dec
mov
fwait
aaa
or
sbb
sbb
ds
add
repnz
pop
clc
xor
mov
and
clc
ret
pusha
loopne
dec
jnp
mov
adc
mov
push
dec
shr
xchg
dec
add
lods
mov
inc
pop
cmpsl
nop
outsl
sahf
jnp
lock
xchg
xor
dec
mov
nop
xor
out
movsb
cmpl
or
pop
xor
fidivl
test
dec
add
imul
xor
mov
mov
mov
sbb
and
and
cli
add
sbb
and
addr16
call
inc
cmp
addb
stc
mov
bound
dec
push
mov
out
pop
and
imul
pop
stos
add
push
imul
inc
in
mov
jnp
loop
pop
jp
pushf
ucomiss
sbbb
sti
mov
neg
addr16
js
add
and
push
std
or
xor
xchg
hlt
add
adc
addr16
and
addl
push
mov
daa
mov
out
je
lret
repnz
clc
pushf
pop
fildl
adc
ret
pop
loop
cmp
jmp
mov
int3
pop
mov
jnp
add
or
xchg
fsubs
inc
test
mov
sbb
lods
outsb
jb
xor
movsb
outsl
movsl
fimuls
adc
rcll
test
imul
ja
insb
sbb
jmp
jns
push
mov
adc
mov
or
arpl
sub
into
add
jl
inc
or
sarb
shll
push
adc
sub
sub
or
lock
fisttpl
push
test
cmp
push
sub
xchg
dec
mov
inc
xchg
xchg
xchg
jne
aam
or
nop
xchg
mov
sti
xchg
and
fcompl
xchg
test
pusha
add
fistl
and
mov
and
jp
mov
push
cmp
mov
xchg
in
jo
mov
pop
or
imul
stc
dec
xor
mov
loope
mov
mov
repnz
test
xor
dec
mov
insl
xchg
and
inc
or
leave
adc
mov
add
shr
mov
sub
adc
sbb
mov
sbb
sbb
mov
imul
push
add
push
mov
cltd
jge
std
pop
out
mov
imul
mov
fcomp
daa
sbb
dec
jns
in
jle
iret
jg
and
jae
cmc
add
pop
push
out
stc
lret
outsl
sbb
dec
cmc
xlat
fwait
test
fisubl
shll
dec
mov
ds
sbbb
dec
cli
sub
leave
pop
mov
mov
lret
push
aas
add
arpl
or
xchg
xchg
sbbb
mov
push
loope
push
iret
mov
xor
mov
sbb
fs
jae
cwtl
add
pop
test
xor
jnp
pop
out
sbb
lcall
push
in
add
mov
jae
ss
mov
cmc
push
jg
divb
xchg
nop
scas
aaa
or
adcl
lea
std
or
xlat
xor
adc
push
cmc
popf
fisttpll
push
test
cltd
imul
mov
mov
mov
lods
pop
popf
jns
mov
dec
inc
sub
add
mov
popf
ja
es
push
icebp
loopne
mov
sti
and
in
xchg
scas
jo
adc
adc
adc
fldenv
ds
inc
gs
xor
leave
pop
dec
orb
mov
mov
lret
out
jl
repz
arpl
sarb
xlat
lret
nop
mov
mov
call
push
call
aaa
inc
mov
adc
fisttps
add
lret
clc
fmull
lret
jmp
out
rcll
test
push
in
jp
mov
push
inc
jecxz
add
adc
xchg
sub
or
mov
push
pop
hlt
mov
or
mov
xchg
sub
nop
rcl
pop
insl
pop
mov
into
push
shlb
inc
push
sub
lret
pushf
push
stos
adc
sub
pushf
push
and
push
mov
frstor
dec
stc
xchg
cmp
repnz
xor
sub
aas
aaa
in
rcll
sub
push
bound
xchg
call
enter
enter
int3
idivb
ds
clc
data16
mov
adc
push
pop
jg
insb
data16
insl
ja
and
rcrb
cwtl
push
adcb
shrb
cmp
lcall
push
mov
iret
movb
add
mov
sarb
push
adc
mov
pop
adc
icebp
push
ja
mov
push
add
dec
adc
mov
mov
push
pop
ret
shll
imul
mov
shrl
push
mov
ds
jle
pop
push
mov
popa
mov
jle
sbb
cmpsb
arpl
in
push
je
mov
xor
pusha
in
cli
out
mov
pop
and
pop
sub
cmpl
dec
add
stos
push
sbb
cmpsb
mov
mov
mov
fdivl
push
mov
fsubrs
push
repz
adc
movsl
push
cmpsb
out
push
lock
ljmp
imul
mov
lea
sub
pop
fsubs
sbb
ret
xchg
sti
getsec
mov
icebp
scas
push
into
mov
fldl
jp
sbb
loop
mov
jns
int3
pop
fwait
inc
bound
xchg
out
dec
pop
push
sub
inc
in
pop
cmp
mov
dec
in
out
rclb
jno
mov
or
push
dec
mov
lret
cmp
mov
int3
movsb
pop
mov
fldenv
xor
insb
iret
adc
dec
imulb
out
faddp
ret
mov
and
pop
and
gs
scas
pop
inc
dec
jmp
mov
mov
mov
xlat
adc
sahf
xchg
pop
xchg
jo
xchg
or
push
cs
xor
xchg
mov
hlt
xchg
loopne
jg
sti
add
push
jmp
or
ja
jb
imul
or
push
and
cmp
sbb
mov
adc
je
ds
jbe
pop
stos
xchg
add
mov
fs
fdiv
push
push
inc
mov
xchg
mov
xor
add
mov
mov
mov
js
pop
jns
dec
mov
ret
inc
pusha
stos
call
and
inc
jmp
dec
inc
xor
xor
les
cwtl
or
sahf
int
push
inc
test
fwait
scas
jbe
jne
mov
sbb
leave
xchg
xor
inc
sbb
and
test
cmp
push
call
jmp
movb
std
lret
adc
stos
dec
jecxz
lods
iret
out
addr16
ficompl
mov
jl
scas
xor
inc
xchg
addb
test
xchg
cmp
mov
jns
sub
mov
jbe
mov
dec
xorl
and
xchg
mov
stc
ret
icebp
add
xchg
dec
mov
ljmp
cmpsb
dec
or
test
pop
and
or
rorb
stos
jae
add
xchg
push
mov
out
inc
iret
sub
xchg
fdivs
dec
mov
aam
mov
adc
xchg
lret
pop
adc
add
les
sti
iret
xor
pusha
fisubrl
add
mov
mov
int
add
scas
push
xor
stc
icebp
add
imul
sub
sti
mov
xlat
add
push
fldenv
outsl
add
cmp
xor
data16
jp
and
mov
add
inc
jae
ja
sti
arpl
fdivs
ret
mov
scas
xor
lret
leave
in
cmpsb
mov
gs
dec
sub
pop
call
js
mov
icebp
xchg
adc
push
movsb
and
push
aas
mov
leave
xor
cmp
xlat
xchg
cltd
add
std
push
insb
pop
dec
daa
jge
test
jb
or
in
xor
cmp
jno
cmp
inc
cmp
loop
bound
cmc
adc
ds
xlat
sti
mov
arpl
iret
jbe
fdecstp
mov
and
ret
push
jns
pop
iret
cli
add
cmpsb
lcall
out
cmp
rolb
jno
inc
mov
test
mov
imul
sub
pop
orl
lods
push
mov
jl
jo
loop
stos
mov
and
adc
or
adcl
mov
in
in
sub
rorb
inc
in
adc
xchg
push
rol
scas
mov
jl
aaa
popfw
gs
test
xor
fs
jmp
xor
pushf
subb
xlat
sti
ds
insb
fs
xchg
in
aad
and
xor
lea
cmpsl
rcll
iret
sbb
sbb
aas
mov
push
xchg
add
fsubrs
fstps
push
pop
pop
dec
or
mov
cmp
aad
sub
pushf
sub
clc
sub
shlb
enter
aaa
mov
out
les
jnp
pusha
pusha
addb
hlt
iret
sub
mov
gs
nop
adc
dec
fimuls
pmullw
aaa
push
notb
bound
ljmp
fdivs
aaa
sub
outsl
dec
cmp
andl
je
or
insl
ja
fldcw
stos
xchg
adc
sbb
insb
pushf
rclb
and
mov
jge
scas
sbb
mov
push
xor
mov
shl
dec
cmpsl
add
clc
addl
jno
scas
je,pn
addr16
xlat
icebp
loopne
mov
inc
jne
movsl
ret
adc
repz
sub
or
fstpt
ret
or
sbb
fucom
imul
mov
mov
mov
add
frstor
and
lods
xchg
idiv
jmp
repz
add
lcall
fisttps
bound
subb
iret
mov
bnd
xor
jmp
sbb
cltd
fs
cli
pop
and
xchg
push
out
out
call
inc
xor
adcl
lcall
pmulhuw
mov
lcall
stos
jbe
mov
leave
dec
imul
bound
addr16
inc
xlat
pushf
xor
mov
sahf
aaa
or
lock
sbb
sub
sub
sbb
mov
mov
push
or
mov
pop
lods
sarb
out
movsl
cmpsl
cmp
and
jge
movsl
mov
data16
cli
and
pop
xor
jecxz
cmp
stc
fisubrl
cmp
lret
dec
out
jne
or
sbb
sub
lcall
adc
bound
popa
outsb
cmp
cmp
inc
fadds
enter
xchg
mov
je
out
sbb
push
dec
shlb
xor
mov
fsubl
movsl
or
jb
cmp
sbb
push
and
insl
sbb
jae
dec
and
inc
push
movl
or
aas
addb
mov
xchg
fstl
push
out
inc
cwtl
mov
ds
cli
adc
and
dec
fnsave
jmp
inc
and
lcall
rclb
insl
arpl
mov
and
dec
ljmp
xchg
or
aaa
movsb
cmp
push
push
ja
dec
clc
add
cmp
mov
inc
insl
fnstsw
cmp
sub
pop
out
jbe
fucomi
ret
pop
mov
sub
bnd
mov
xchg
nop
fs
mov
aam
prefetch
xor
test
add
test
daa
mov
lahf
pop
imul
cmpsl
mov
sbb
int
xor
inc
clc
jo
push
cmpsl
and
and
fldl
sub
out
cmpsl
xor
pushf
dec
mov
lcall
sti
mov
push
pop
push
sub
mov
scas
divb
js
adc
andb
xor
fisubrs
pop
subl
je
imul
pop
lcall
sub
xchg
mov
cmp
stos
sbb
stos
cmp
lcall
sbb
sti
pusha
shlb
jg
push
mov
test
ds
data16
mov
dec
mull
test
push
popa
adc
fisubrl
push
fwait
jb
dec
fistpl
sub
xchg
adc
mov
add
test
pop
adc
mov
les
dec
mov
popa
or
sbb
mov
xchg
xlat
int
out
les
das
xor
psubsb
jmp
push
push
in
movsb
ljmp
or
pop
sub
push
mov
iret
dec
test
pop
xor
test
rcr
mov
insb
inc
jg
sub
sbb
push
adc
mov
stos
xorb
mov
imul
jge
mov
scas
scas
icebp
cs
mov
sub
std
insb
rcrb
cwtl
fcmovbe
ljmp
mov
jl
mov
fwait
arpl
inc
inc
jge
mov
popa
std
push
xchg
jae
sbb
mov
cmp
xor
in
xchg
cmp
stos
mov
mov
pop
sbb
cmp
daa
pop
mov
aas
mov
sbb
jg
in
test
lcall
jae
jbe
out
mov
test
sub
mov
fwait
sub
imul
adc
ret
ljmp
jbe
test
aam
xchg
mulb
scas
mov
js
pop
test
inc
pop
shll
mov
cs
mull
sub
cmpsb
leave
mov
and
jmp
xchg
jg
jne
xor
outsl
xor
inc
insl
aaa
and
ret
repz
testl
lret
and
in
test
mov
inc
mov
or
and
inc
adc
popa
add
and
mov
lea
scas
jb
mov
stc
bound
mov
pop
ror
jb
pop
fnstcw
ds
mov
jp
push
test
mov
enter
es
rcr
je
inc
pop
subl
scas
adc
jle
adc
inc
aam
mov
test
stos
adc
cltd
mov
aam
inc
sub
cli
push
adc
sub
imul
in
push
add
push
dec
jg
xchg
jge
pop
mov
push
xor
iret
jne
fxch
push
iret
out
cld
xchg
push
add
mov
mov
fbld
pop
xor
sarl
aas
mov
add
popf
lods
push
mov
enter
lods
adc
jle
cmp
lret
adc
mov
and
xchg
xchg
mov
movsb
ficoml
add
popa
xchg
jae
mov
mov
imulb
rep
xor
jne
sbb
out
pop
cmp
lret
adc
dec
push
push
movsb
inc
mov
ret
jecxz
test
cmp
inc
mov
xlat
cld
push
ljmp
jno
lds
out
adcb
lcall
cld
push
xchg
stos
js
cmpsl
cs
add
pop
and
mov
subb
dec
test
sbb
data16
out
push
xor
inc
push
and
mov
sbb
mov
icebp
push
or
pop
call
cmpb
mov
jns
xor
lds
xor
pop
push
push
fwait
sub
leave
inc
movsb
mov
push
push
loope
push
cmp
adc
xchg
insb
mov
arpl
mov
fdivl
call
mov
inc
sbb
adc
mov
push
mov
fisttps
dec
cld
lret
jmp
pop
jbe
push
xchg
adc
xchg
pushf
test
data16
les
pop
sub
or
in
mov
shll
movsl
test
mov
icebp
loope
je,pt
js
inc
jb
aas
out
jg
dec
pop
lcall
push
push
or
call
stc
icebp
xor
nop
andl
lods
shlb
sbb
fs
sbb
pop
sbb
sub
cmp
sub
add
xchg
lahf
jp
insb
mov
xchg
mov
inc
adc
fidivrl
movsl
aaa
mov
cmpsl
lahf
loopne
xchg
cmp
mov
pop
mov
idivl
or
movsl
aam
and
ss
pop
arpl
mov
and
iret
dec
or
adc
jle
xchg
mov
sahf
cli
xor
adc
push
sbb
jmp
stc
ret
push
cmc
add
mov
mov
add
in
in
push
or
mov
sub
cwtl
sbb
push
repnz
fidivl
pop
pop
adc
leave
out
rcrl
in
popf
cmpsb
nop
mov
pushl
sub
push
lcall
aaa
js
push
sub
neg
or
pop
adc
ljmp
imul
imul
sar
mov
pop
inc
dec
mov
mov
xor
roll
mov
movsb
mov
int
in
int
push
pop
pop
aas
aas
flds
pusha
mov
push
mov
mov
mov
or
pop
stc
loop
into
lea
int
pop
stos
sbb
jnp
cld
add
mov
cli
add
mov
rcrb
xor
je
pop
cmpsb
xor
dec
test
cwtl
inc
pop
adc
xchg
mov
lret
pop
sarb
mov
xchg
movsl
jge
rclb
ja
push
in
sub
cmp
mov
and
push
icebp
out
inc
test
pusha
test
outsl
daa
leave
je
cmpsb
xlat
cmp
pop
jge
insl
rorb
pop
xchg
rolb
ds
adc
ja
and
sbb
pop
int
ficomps
inc
lock
negb
xchg
rcll
pop
jb
mov
ds
stos
inc
int
push
fnstenv
stc
xor
mov
xchg
hlt
outsb
rcrb
mov
pusha
sub
xchg
inc
sbb
dec
dec
sub
inc
stc
push
aam
mov
outsl
sub
sbb
pop
cmp
dec
aad
fcoms
sub
lcall
and
sub
imul
push
sarb
jg
std
pop
mov
aam
mov
outsb
push
push
das
inc
jae
jge
sub
jecxz
add
addr16
mov
or
push
jno
clc
add
clc
xchg
pop
aas
add
insb
fs
sbb
pop
repnz
sbb
xchg
add
mov
push
xchg
nop
popa
outsb
mov
add
inc
sub
dec
cmp
push
or
mov
push
or
and
dec
xlat
cwtl
push
cmp
pop
and
push
icebp
aam
dec
push
mov
mov
or
ret
sbb
lock
push
lahf
xchg
test
sti
adc
pop
in
xchg
flds
stos
aas
idivb
jmp
inc
mov
js
fs
scas
mov
push
shlb
mov
idivl
lahf
push
fistl
push
dec
icebp
dec
inc
cmp
ss
adc
insl
sahf
repnz
int3
xlat
cmp
pop
inc
inc
clc
lea
mov
dec
lods
mov
add
orb
cmp
or
and
loopne
mov
xlat
and
sti
adc
add
fcompl
out
push
int3
sub
dec
xchg
pop
adc
outsl
mov
mov
or
xor
mov
cmc
call
movsb
adc
and
sub
add
cmp
jb
shlb
repz
jp
and
daa
call
imul
xor
cmp
push
dec
andl
lahf
adc
add
imul
insl
aad
cbtw
arpl
popf
aaa
in
push
cmp
sub
cwtl
cmpsb
cmp
adc
in
sub
sub
cltd
fisttpl
xor
mov
pop
sti
out
dec
jle
aas
jp
jmp
faddl
add
imul
sbb
lea
sbb
mov
xor
arpl
dec
in
imul
xor
dec
and
scas
mov
and
xchg
adc
xchg
fnstcw
cmp
cli
jns
mov
dec
pop
xor
daa
mov
or
mov
in
inc
push
pop
xlat
andl
pop
cwtl
xor
push
ljmp
lcall
rcrb
repnz
push
pusha
push
mov
cwtl
sbb
stc
push
mov
test
jecxz
cmc
ret
insb
lock
stos
roll
add
sbb
mov
pop
scas
test
popf
pop
mov
pop
gs
ja
ret
sbb
in
inc
divl
ret
aaa
pop
icebp
adc
cmp
sbb
pop
or
fcompl
dec
jns
push
xchg
xor
stos
shl
mov
mov
xlat
sub
jno
sub
loopne
dec
pop
jnp
mov
fstps
in
and
or
pop
sub
mov
pop
lods
clc
xor
mov
jg
ror
clc
xor
imul
stos
sbb
mov
enter
out
inc
fwait
out
mov
mov
cs
xor
bnd
dec
pop
mov
stc
push
fs
cltd
popa
jns
sar
test
jg
cmpsl
xchg
inc
sti
mov
or
scas
ret
adc
jmp
and
roll
jnp
movsb
push
sub
sub
cltd
repz
lcall
mov
fcmove
mov
mov
pop
insl
rcrl
pop
add
filds
test
repz
sbb
or
bound
fs
fistpll
xchg
fninit
pop
xchg
jno
scas
ja
imul
inc
xor
xor
out
test
dec
cmp
repnz
sahf
cli
mov
or
sub
subl
outsb
ds
jmp
push
dec
xchg
addr16
andb
stos
dec
popf
mov
in
stos
in
pushl
jno
dec
leave
mov
sbbl
ja
sbb
xchg
hlt
inc
out
mov
sbb
mov
mov
fdivr
inc
in
mov
stos
das
dec
fadd
adc
mov
xchg
imul
mov
xchg
test
enter
or
iret
dec
adc
outsb
leave
push
sbb
ds
ja
sub
mov
lods
arpl
and
loop
mov
xchg
mov
icebp
xchg
aam
push
aas
push
add
in
sub
insl
inc
andb
in
lcall
or
push
pop
ja
or
pop
outsl
xchg
gs
push
mov
hlt
cmp
mov
cwtl
neg
mov
push
test
push
xor
ds
push
xchg
xor
mov
xchg
sub
mov
jge
lcall
sar
dec
mov
add
mov
xchg
mov
adc
repnz
xchg
pop
xor
out
inc
push
inc
add
pop
jae
test
sahf
enter
jmp
out
int3
fisubl
mov
out
jle
daa
scas
sbb
cld
push
lret
popf
sbb
mov
loopne
jmp
jmp
dec
pop
mov
sbb
fisubrl
xchg
jne
xchg
jmp
push
inc
repz
pushl
and
aad
pop
fwait
lahf
pop
inc
stos
sbb
fs
cld
sbb
ja
and
fsts
fs
pop
mov
and
out
xor
into
out
jbe
ds
or
ret
daa
hlt
inc
inc
ja
mov
pop
mov
sub
aad
mov
mov
sub
cli
lock
out
fistpl
mov
enter
and
insb
je
and
sub
lea
sbb
push
rol
adc
das
mov
jns
mov
imulb
push
mov
push
and
mov
cltd
sbb
mov
or
jae
cmp
scas
in
icebp
popf
push
outsb
popa
adc
aaa
jg
inc
sub
popa
pushf
and
pop
jnp
cltd
notl
cli
std
sub
cli
mov
es
test
xchg
cmp
xchg
movsb
mov
bndstx
xchg
iretw
sub
mov
inc
mov
xor
cmpsl
mov
mov
dec
or
xchg
adc
add
rcl
outsb
cwtl
lea
sbb
andl
repnz
bound
nop
mov
adc
xor
add
add
daa
xor
xchg
push
pop
leave
cs
pop
sbbl
lods
push
jp
leave
xchg
rolb
xorb
inc
cmp
js
lret
jns
or
into
dec
xchg
into
inc
xchg
or
sahf
jl
dec
jmp
add
dec
out
or
jb
jecxz
mov
push
filds
call
xchg
repnz
push
nop
mov
pop
mov
pop
aaa
inc
add
ffree
call
mov
mov
mov
jbe
jo
sahf
push
aaa
jno
repnz
or
pop
cmp
mov
cmp
adc
xchg
outsl
fldt
pop
data16
mov
adc
mov
orb
imul
call
das
lds
fwait
mov
or
aaa
mov
popa
push
clc
mov
jmp
or
jae
out
pop
sub
cli
xor
push
aam
pop
xor
aam
enter
cmp
repz
sbb
stos
inc
mov
mov
mov
mov
xchg
mov
jmpw
xor
pop
dec
mov
test
stos
pop
fnstcw
jne
ljmp
adc
arpl
mov
add
dec
clc
shll
imul
cmp
insl
pop
aad
mov
or
cmp
iret
adc
and
sbb
into
fdivr
pusha
data16
jno
imul
jp
lock
outsl
jb
pop
decl
push
fisttps
inc
mov
popf
adc
lret
dec
or
bound
lods
les
arpl
test
cli
add
xchg
inc
xchg
fistl
push
push
push
scas
adc
pop
push
shll
and
aam
test
aas
jge
iret
js
lods
loope
and
mov
out
jmp
std
and
inc
lods
mov
add
mov
or
inc
pop
lock
fistps
and
pop
xor
in
imul
int3
movswl
pop
inc
xor
out
pop
adc
dec
out
insl
outsb
loop
lds
mov
loopne
cmp
cmp
js
and
jp
or
mov
stc
mov
add
and
add
popf
xchg
pop
xchg
nop
lds
in
inc
dec
out
addb
jo
into
and
fnstsw
das
jg
cli
pop
mov
sbb
idivl
into
enter
js
pop
xchg
xcrypt-ctr
cmpsl
fisubs
fmulp
inc
push
pop
xor
inc
adc
ljmp
and
jl
xor
lds
or
in
arpl
mov
out
push
rcrb
mov
movsl
mov
xchg
dec
pop
inc
cmc
addr16
clc
hlt
push
je
hlt
icebp
cmc
movsb
scas
push
jl
and
lret
or
cmc
cmp
inc
push
jae
and
push
jne
cltd
loop
fs
inc
mov
insl
in
test
adc
push
ja
adc
dec
cmp
push
xchg
push
xchg
xor
cmp
add
add
je
jmp
inc
add
daa
fiadds
cmp
dec
cmp
lahf
inc
imul
scas
push
fstpl
sbb
dec
xor
call
lret
pushf
xchg
iret
pop
or
mov
adc
divb
xchg
mov
push
cld
jl
ret
mov
repz
rolb
xchg
push
data16
sbb
dec
fists
fstl
pop
jmp
mov
movsl
mov
in
lea
xchg
adc
add
xchg
and
add
xor
das
add
mov
xchg
or
sbb
xchg
sub
dec
lret
pop
adc
jl
push
fiadds
testl
idivl
repz
insb
aaa
sbb
pop
xor
jns
movsb
ljmp
mov
mov
lods
xor
bnd
or
hlt
jno
xchg
jmp
movsb
mov
xchg
repnz
push
loopne
mov
inc
loopne
lds
pop
mov
and
ret
adc
sbb
xchg
adc
js
inc
or
push
test
psrlw
lret
dec
push
pusha
jmp
push
adc
stos
clc
into
jle
aad
loopne
filds
scas
inc
out
add
in
inc
add
cs
fbld
pushf
das
ret
add
inc
adc
aaa
xor
fdivrs
shl
jo
in
leave
jns
xchg
outsl
inc
cmp
stos
lahf
cs
sar
add
repz
jnp
int
inc
lret
je
pop
daa
sarl
popf
les
add
xor
shrb
add
sub
pop
lret
cmpb
xchg
rcl
xor
into
pop
cli
subl
je
jae
cmp
in
jmp
test
rcll
call
loope
leave
stos
adc
aam
sub
sub
in
aaa
lret
movsb
push
outsb
add
or
dec
sbb
jno
inc
cltd
push
fiadds
les
mov
cmp
hlt
sub
push
shrl
push
push
jmp
inc
inc
xor
into
cmp
mov
xchg
jne
cld
lcall
lods
jp
pusha
rclb
inc
adc
cmp
rorb
push
in
mov
shl
test
cld
mov
inc
cmp
push
pop
mov
xchg
cmp
adc
sub
fstps
xchg
pop
pusha
out
aad
bound
cmp
std
dec
adc
outsb
out
pop
fsubrl
rolb
dec
push
ljmp
fstp
enter
lcall
jnp
inc
xchg
in
sahf
cli
cltd
dec
in
jmp
out
xchg
xchg
shrl
call
sbb
add
xchg
inc
or
xchg
jbe
sbb
lock
fstpl
pop
push
ret
jo
loop
cld
lcall
scas
rcr
push
mov
mov
cs
mov
data16
inc
sub
push
stos
shrb
leave
mov
mov
test
add
lock
sub
push
sub
mov
sub
stc
rolb
ret
push
out
jl
xchg
lock
xor
sbb
jb
inc
cmp
jno
mov
sbb
pusha
jnp
mov
scas
adc
ja
movsb
call
push
pushf
repnz
jle
lcall
into
inc
pop
sub
divl
and
push
cltd
sub
js
daa
ficoml
add
sub
outsl
adcb
jns
test
inc
bound
imul
cwtl
or
add
jb
and
sbb
cli
insl
xor
loopne
or
mov
bound
mov
lea
sbb
rorb
aam
insl
inc
fists
xor
mov
mov
addr16
add
lcall
xor
dec
pushf
popa
dec
movsb
cmp
test
mov
subl
push
xchg
cwtl
cli
jnp
arpl
fwait
repz
mov
loopne
daa
mov
or
push
test
jbe
mov
lods
aaa
dec
adc
mov
jmp
cld
jae
or
stos
ljmp
jle
enter
fs
lods
mov
adc
popa
or
mov
xor
int
shrb
cmp
aaa
sbb
cmp
outsb
sbb
mov
lret
xor
mov
insb
xchg
mov
xchg
xor
movsb
js
fdiv
mov
dec
dec
push
shrb
mov
imull
dec
pop
add
fwait
popa
popa
mov
rcl
cmpsb
data16
lret
pop
imul
sbb
mov
jae
mov
pop
mov
nop
sbb
pusha
or
inc
pop
or
xor
jbe
adc
push
movsb
mov
inc
mov
daa
xor
push
dec
popa
ret
jnp
stc
lahf
dec
mov
pop
adc
xor
or
sub
cmpsl
in
scas
dec
and
jl
sbb
aad
push
dec
jbe
iret
jmp
int
data16
xor
jecxz
frstor
in
popa
cmc
roll
scas
sub
mov
dec
add
cmpsb
lea
push
cs
sbb
bound
aaa
sahf
jecxz
call
sub
rclb
pop
cmpsl
pop
repnz
inc
cltd
mov
int3
lret
inc
pop
es
lahf
pop
mov
loopne
cmp
push
mov
imul
lret
mov
in
dec
aad
insb
sub
sub
int
ds
repnz
jne
ljmp
dec
push
xchg
adc
out
push
int
pop
push
xor
shlb
mov
ljmp
xchg
je
arpl
mov
fdivrl
stc
xor
test
xlat
out
shlb
cltd
lret
imul
in
jp
pop
lretw
shll
scas
dec
cmp
push
fwait
icebp
fisttpl
cli
out
lea
cmp
popl
mov
push
pop
mov
mov
or
ds
arpl
inc
aas
pushf
sahf
cmp
xor
fwait
ss
mov
adc
pushf
mov
xor
and
mov
add
and
mov
mov
jb
xchg
sbb
mov
addr16
or
push
test
inc
jle
or
insl
or
outsl
repz
push
lahf
sbb
std
rcll
adc
dec
jno
lods
pop
das
lret
leave
in
in
in
lcall
mov
jae
xchg
addr16
cld
jno
sbb
mov
es
fistpl
js
sub
nop
cmpsl
add
or
dec
popf
fisubl
xchg
mov
mov
xor
mov
mov
mov
inc
hlt
ja
sar
stc
lea
sbb
and
xchg
push
sti
xchg
or
jecxz
pop
insl
push
int
std
test
popf
ficoml
ret
add
daa
dec
xor
pop
lret
out
cmp
sbb
pop
aaa
sub
leave
cmp
or
xchg
jmp
mov
cltd
and
xor
inc
mov
scas
cmc
xor
out
sub
pop
xor
sahf
xchg
daa
popf
add
fcmove
popf
or
add
hlt
and
mov
and
std
sub
inc
sub
xor
loope
jae
xchg
and
and
push
sub
out
cmp
cmp
arpl
sbb
pop
inc
xor
push
lea
inc
notb
hlt
cmc
cld
push
movsl
jbe
addb
lcall
sbb
fmul
outsl
xchg
inc
nop
add
adc
ja
test
mov
pop
sahf
mov
sbb
cltd
xchg
negb
sub
aas
popa
scas
fs
push
xor
push
mov
fsubrl
in
insb
das
scas
sub
lret
mov
sub
mov
pop
popa
aas
mov
clc
inc
ja
inc
cld
hlt
add
and
lahf
or
test
cmpsl
push
loope
rcrl
les
imul
xchg
scas
and
insb
out
jns
out
out
aaa
cmpsb
fisubrl
js
mov
daa
adc
sub
sahf
inc
inc
cltd
sbb
insb
jnp
stc
into
sbb
repnz
cld
adc
mov
mov
sahf
movsl
fldt
lds
ret
mov
cld
push
mov
rorb
decl
into
mov
lea
dec
clc
jne
and
shrb
xor
and
inc
sahf
and
mov
inc
rcl
sbb
mov
inc
xchg
and
or
bnd
cmp
adc
mov
sbb
loope
jno
test
cmpsb
ss
cs
and
or
xchg
sbb
arpl
push
add
cmp
cmpb
xor
mov
fmuls
and
dec
insl
mov
movsl
outsl
pop
or
fisubrs
jle
fildl
xchg
jb
sub
stc
ja
cmp
sub
and
inc
loopne
push
dec
and
rorb
divl
nopl
push
pop
arpl
mov
fstpt
in
addl
movsl
pusha
or
inc
xor
movsb
pop
out
add
mov
pop
outsb
sub
stc
fistl
jno
dec
pop
cmpsl
imul
or
rcll
adc
sahf
hlt
insl
mov
ss
mov
dec
pop
orl
or
or
cld
test
dec
mov
in
ja
jno
mov
notb
cmp
es
mov
xor
into
stos
xchg
push
stos
fldt
mov
cs
dec
or
mov
jl
leave
scas
jb
cmpsl
repz
xlat
and
test
cli
std
xor
mov
pop
sub
dec
lahf
aas
push
ljmp
cmp
inc
scas
xor
sarb
sahf
xor
xor
pop
and
es
xor
mov
clc
sbb
mov
lock
lea
imul
or
and
sbb
add
adc
xchg
fwait
scas
jbe
mov
in
pop
jbe
add
pop
and
std
pop
les
jnp
sbb
mov
adc
insl
mov
out
push
lods
jle
sbb
pusha
pop
push
std
dec
mov
lahf
jp
ds
sub
inc
lds
fisttpl
cli
dec
jo
test
lahf
flds
test
arpl
xchg
cld
cmp
ljmp
jle
jg
insw
sbb
push
sub
fstps
sub
in
outsb
enter
dec
or
dec
outsl
sti
xchg
mov
imul
lea
leave
mov
popf
mov
dec
mov
sub
stc
out
and
xchg
out
xorb
das
jo
test
arpl
mov
pop
mov
std
jne
xchg
add
mov
into
mov
jns
push
loop
inc
cmp
test
sbb
mov
mov
lds
and
push
arpl
call
arpl
adc
cli
in
rcll
mov
test
inc
xor
idivl
dec
in
lret
outsl
jo
adcb
jbe
cld
push
aas
mov
mov
loope
clc
scas
pop
adc
pop
mov
sub
xor
inc
mov
inc
ja
fldlg2
inc
test
mov
aas
stos
mov
ljmp
mov
pop
lods
push
sub
cmp
xchg
jmp
ss
or
out
cld
aad
cmpsl
mov
enter
movsl
cs
cs
int3
nop
push
into
adc
fdivrl
push
xlat
in
push
je
push
sub
out
in
push
outsl
mov
adc
xor
addr16
mov
lret
mov
jbe
enter
adcb
jp
adc
cmp
lods
xchg
push
stos
loopne
ds
aad
aaa
outsl
or
inc
dec
mov
fwait
or
mov
loop
filds
xchg
jge
fildl
gs
sub
mov
mov
ja
inc
pusha
jle
mov
pop
sbbb
in
sub
stc
and
push
cltd
leave
inc
notl
jno
std
mov
repnz
into
hlt
lods
pop
add
push
in
sahf
lods
xchg
mov
push
jnp
rcr
lret
flds
sbb
pop
stc
rcll
mov
js
pop
cmpsb
or
dec
add
dec
hlt
inc
lods
out
call
pusha
fld
inc
jne
cli
movsl
into
inc
leave
nop
and
sbb
loope
inc
jne
push
xor
mov
mov
jae
ja
jne
sbb
int3
xchg
je
sbb
dec
stos
xor
sub
nop
lret
sbb
inc
leave
aad
push
fbld
pop
shlb
cmp
xchg
push
iret
lahf
xor
xchg
sbb
jns
xchg
pop
push
and
xchg
cmpsl
push
mov
inc
inc
jb
pop
aas
loop
ret
pushf
xlat
or
inc
fisttps
dec
subl
push
jb
das
mov
dec
out
and
punpcklwd
js
jno
popa
mov
push
ss
inc
adc
sbb
data16
mov
mov
jmp
scas
out
jp
jns
sub
push
dec
jbe
imul
ds
aam
xchg
fwait
pop
push
or
add
in
mov
mov
sahf
mov
jmp
sub
mov
ljmp
mov
sti
dec
in
scas
in
das
in
stos
sbb
jp
inc
inc
scas
mov
push
push
vpmuludq
movsl
cli
push
dec
stos
mov
xchg
lods
mulb
test
xlat
fsubrl
cmc
ss
pop
popa
clc
out
pushf
adc
sub
lcall
test
hlt
add
outsb
in
mov
pushf
adc
push
add
push
outsl
sbb
loopne
out
xor
jge
adc
out
mov
andb
adc
mov
repnz
ljmp
cmp
ss
xor
divl
iret
sarb
cmp
pop
xor
pop
push
and
adc
add
mov
mov
and
jp
popa
aam
push
scas
adc
jno
push
sub
js
pusha
leave
xor
adc
xchg
push
movsl
arpl
xchg
imul
ljmp
inc
loope
cmp
pop
cli
adc
rcr
push
jnp
sub
test
fstl
and
sbb
iret
cmp
popa
mov
shrb
inc
sbb
jb
ret
fcoml
sub
out
mov
lods
mov
xchg
pop
aaa
push
push
daa
and
or
outsl
mov
adc
inc
out
loop
adc
neg
cmp
mov
loope
xor
and
xor
push
pop
das
sub
arpl
jle
sbb
add
or
cmp
js
je
mov
xchg
lret
and
and
mov
cmpsb
pop
mov
lea
lahf
je
lahf
out
jo
popa
xchg
adc
out
push
jl
or
sti
and
shld
in
jo
rorb
andb
and
dec
xor
aam
sub
push
xlat
xchg
xor
mov
ljmp
lret
out
jle
xchg
mov
sbb
aad
rorb
xor
int3
sarl
call
mov
add
scas
mov
mov
ds
fcomps
mov
sbb
test
jo
sub
roll
pop
lds
mov
cmpsl
jb
jecxz
dec
testb
lock
lcall
push
imul
repz
xchg
pop
jmp
xchg
adc
add
subb
lea
in
les
or
xchg
pop
xchg
mov
inc
movsl
std
inc
dec
nop
lods
dec
mov
mov
push
dec
mov
je
and
test
mov
into
es
iret
add
aaa
cwtl
dec
pushaw
in
andl
inc
iret
movsl
rolb
pusha
lods
mov
dec
incl
or
pop
pushf
testl
in
mov
or
insb
ja
mov
jmp
jno
inc
in
xor
mov
call
syscall
cmp
rolb
dec
push
xchg
pop
push
cmp
or
sub
and
es
shrb
mov
cli
add
fincstp
mov
jp
fnsave
out
daa
ljmp
mov
push
stc
push
testb
jbe
fwait
adc
sbb
psrlw
insb
stos
sahf
out
jp
ds
movsb
cmc
sahf
adc
pmaxub
insl
imul
lock
popa
je
sub
in
test
test
mov
rcrb
lea
sbb
mov
mov
xor
xchg
pop
fwait
repnz
arpl
arpl
dec
shll
sub
mov
decb
inc
sub
aad
dec
cmpb
loopne
dec
call
sahf
push
inc
enter
aaa
push
pop
fwait
addl
imul
es
ds
jae
or
dec
dec
call
mov
jl
out
push
xor
lods
push
pop
and
cmp
popf
jo
sbb
mov
sbb
push
sub
scas
sbb
fdivr
mov
inc
mov
sbb
aas
das
jns
je
data16
and
jmp
sbb
push
inc
cmp
das
inc
push
sbb
add
in
insl
pop
popf
dec
jno
int
aad
pop
mov
insl
push
cmp
popf
mov
sbb
outsb
jge
nop
in
adcl
add
mov
call
fwait
pop
ret
jns
lea
add
jns
jbe
inc
xchg
mov
adc
rorl
adc
jb
inc
or
testl
push
jmp
sti
adc
aaa
mov
test
pusha
sub
ret
mov
ds
xchg
sbb
dec
stos
out
and
stos
mov
pop
xchg
cmpsb
int3
push
in
or
cmp
jge
ret
jne
jl
cld
shl
in
add
gs
loope
mov
jmp
fdivrs
int
sub
shll
cmpsb
mov
ja
sub
test
jae
sub
jbe
mov
decl
mov
adc
mov
add
stc
ss
lods
sub
adc
mov
inc
cmpsl
cmp
ret
adc
loop
add
ror
xor
lds
pop
xchg
dec
xchg
mov
xchg
xchg
cltd
sbb
fdivrl
cwtl
pop
test
icebp
pop
or
adc
into
clc
icebp
xchg
stc
or
mov
jl
inc
xor
cmpsb
fadds
aam
mov
push
dec
imul
jnp
iret
cmp
jmp
sub
lcall
add
jg
insl
out
icebp
arpl
loop
loop
add
int3
lds
ficompl
in
fwait
out
cmp
cmp
fldcw
sub
and
rol
lea
outsl
lods
iret
stos
out
out
in
je
insl
add
fidivrs
push
jo
aaa
into
adc
icebp
or
mov
test
cmpsl
push
ret
iretw
or
ja
mov
push
cmp
cmpsl
out
js
insl
inc
std
mov
or
push
fwait
in
bound
mov
repz
inc
mov
push
pop
sbb
push
pop
nop
mov
lea
and
repz
pop
xor
ds
ffree
mov
xchg
out
in
mov
in
inc
add
add
stos
fidivrs
xor
adc
and
aam
push
lock
scas
stos
icebp
aaa
hlt
push
insb
aad
jmp
inc
sti
jae
push
shr
cmp
mov
push
xchg
pop
test
pop
mov
mov
fwait
pop
jg
cmpsb
lret
cmp
lock
lods
push
sbb
loop
cmpsb
xchg
in
cld
shrl
pop
cwtl
push
fwait
cld
or
cmp
dec
scas
gs
sti
jo
mov
lods
repz
adc
push
add
xor
testl
repz
adc
and
pop
aad
test
add
lock
sub
daa
inc
in
daa
insl
mov
mov
mov
aas
inc
inc
mov
lcall
sub
incb
dec
jg,pt
test
xchg
push
push
pop
inc
cmp
lea
mov
loop
inc
jg
repz
mov
mov
adc
lods
mov
aad
sbb
push
pop
js
sub
subb
repnz
mov
pop
push
js
jp
inc
mov
stos
sbb
add
nop
and
mov
pop
decb
loope
xchg
in
ja
loopne
pop
xchg
outsl
cmp
adc
mov
pop
popl
cmp
sbb
sub
mov
jo
xchg
lret
jno
or
adc
xor
bound
ljmp
mov
push
xor
sbb
outsb
cs
dec
mov
ret
loopne
clc
lret
cs
mov
add
xor
in
test
ja
xchg
incl
dec
and
loope
cmp
adc
adc
dec
xor
movsb
mov
mov
jge
xchg
pop
pop
aaa
lock
jge
sbb
xchg
cmc
add
xchg
cmp
mov
loop
push
sar
cmp
inc
and
pop
pop
out
jbe
dec
xor
jne
shrb
in
pop
push
mov
lret
add
mov
cmc
shr
les
xchg
loopne
jmp
test
lcall
jne
pop
sub
sbb
inc
dec
fidivl
sbb
sub
ljmp
sti
push
dec
gs
jle
cld
lods
ds
repz
jne
mov
aaa
stc
lds
stc
xor
cli
or
and
mov
cmp
mov
cmp
xchg
cmp
sbb
es
test
out
ljmp
adc
inc
jecxz
lcall
xlat
adc
lcall
ret
test
ds
mov
cmpsl
mov
mov
shrb
mov
insl
jns
dec
js
call
push
inc
sbb
aam
add
adc
jns
sti
inc
jmp
add
mov
sbb
cmp
inc
xor
pushf
into
cmp
mov
jae
shrb
mov
outsl
mov
movsb
rol
mov
or
sub
shll
sub
pop
sub
jl
adcl
shrb
adc
in
adc
movsb
repz
in
addb
push
pop
or
stos
xchg
insl
cli
neg
dec
repz
sbb
addr16
mov
cmp
jle
xchg
xor
dec
shlb
push
pop
aaa
enter
cmpsl
filds
adc
cmp
decl
mov
shll
add
dec
fs
mov
fisttps
mov
shl
adc
out
filds
insl
inc
xor
cltd
mov
mov
sub
ja
push
push
clc
outsb
push
dec
push
popf
leave
scas
cmp
test
sub
call
aaa
and
cmp
imulb
loopne
xor
mov
stos
fdivrs
xchg
in
dec
cmp
pushf
jl
mov
and
push
pushf
out
insl
jl
orb
or
mov
mov
shrl
and
loopne
mov
and
cs
push
xor
add
in
lock
push
leave
dec
mov
gs
pop
cmp
lcall
mov
push
ss
push
orb
fisttpll
xor
arpl
gs
inc
adc
push
push
mov
mov
fisubrs
popa
shlb
jmp
dec
cmp
xlat
cmp
push
adc
clc
inc
sbb
insl
gs
adcb
add
xor
sbb
ret
dec
or
xchg
test
xor
lahf
leave
push
cli
jg
gs
gs
push
movsb
in
shll
mov
mov
adc
inc
pop
jns
xchg
fdivrp
or
push
adc
lcall
inc
test
addr16
jecxz
sarl
jae
dec
push
xchg
add
test
cmpsb
std
mov
aam
insl
lock
inc
cmp
mov
inc
cltd
aam
call
mov
lea
cmp
push
pop
cmc
imul
pushf
mov
sub
push
jg
pop
and
add
add
xchg
iret
stos
testl
xor
inc
sub
jl
fimuls
and
mov
mov
lahf
ljmp
pop
icebp
push
sub
adc
add
fwait
mov
pop
outsb
lret
pop
fsubl
not
jno
jecxz
mov
in
orl
sub
inc
cld
xor
mov
outsl
sbb
pop
loopne
enter
push
out
xor
jo
sarb
addl
cwtl
jle
cltd
psubsb
inc
fimuls
mov
fists
shlb
test
into
mov
pushf
ret
mov
and
push
mov
xchg
andb
bound
pop
fmuls
call
jle
daa
jae
stos
out
in
jmp
xchg
cld
push
loope
call
xor
mov
fistps
call
xor
xchg
sbb
push
jecxz
push
stos
dec
aad
std
ljmp
pusha
pop
test
ja
popf
into
xor
jbe
movsb
cmpsb
aad
adc
pushf
lret
and
adc
subl
fidivrs
cs
gs
cmc
push
leave
jb
pop
aaa
outsl
pop
inc
push
or
pop
mov
enter
or
shld
popa
repz
test
jb
lret
inc
ret
sbb
lods
push
jne
pop
push
mov
stc
out
orb
push
addb
mov
mov
pop
repnz
pop
push
roll
mov
push
or
mov
call
lret
jp
out
imul
popa
jo
fsubrs
subb
push
cmp
js
sbb
and
insb
mov
dec
dec
shll
data16
and
lds
fistl
icebp
xchg
jmp
js
or
test
pop
sub
lock
inc
adc
in
push
push
stos
es
xchg
push
ret
cmp
aas
or
pop
jno
xor
jo
mov
stc
aas
mov
outsl
cs
xchg
mov
mov
cmp
insl
xchg
inc
jns
scas
lock
add
shrl
stos
rcrb
fdivrl
and
lods
adc
xchg
pop
and
movsl
xchg
xchg
pop
icebp
mov
pop
popa
aas
xchg
xor
sar
xor
xor
mov
pop
lret
dec
lds
mov
je
lock
in
mov
mov
sbb
or
divl
movsl
add
psubusb
mov
movsl
jmp
stos
mov
pop
adc
jo
mov
cwtl
add
xchg
mov
cmp
dec
testb
jno
loop
dec
fs
dec
rorl
faddl
stc
in
int
push
xorb
inc
push
ja
in
inc
push
sti
mov
sub
scas
mov
cmp
popf
cli
into
loop
jl
lds
dec
push
adc
mov
outsb
enter
xchg
pop
leave
lea
jnp
push
shlb
mov
mov
imul
sub
pop
cmpsb
test
cmc
inc
scas
and
adc
or
mov
sahf
or
jno
addb
cld
dec
push
push
push
add
jno
cmp
pop
sub
push
out
cmp
or
into
aas
inc
xchg
mov
std
inc
push
ret
lock
rcll
cs
in
dec
inc
mov
daa
in
test
int
sub
cwtl
lods
mov
iret
cs
push
xchg
inc
or
clc
in
jl
sub
xchg
mov
das
aaa
mov
sub
inc
gs
stc
pop
dec
sbb
sahf
sbb
into
mov
enter
mov
lods
or
cmp
mov
int3
sbbb
sti
repnz
ret
xchg
ja
aas
dec
add
addr16
out
adc
lret
test
in
sti
sbb
jne
inc
jp
hlt
adc
insl
adc
or
push
movl
sub
sbb
mov
push
jns
loop
mov
add
adc
jne
fdivrs
push
dec
pop
aam
mov
cs
or
xor
add
dec
arpl
in
popf
popa
pusha
cmpsl
lret
movsl
in
push
adc
into
inc
push
mov
jb
xchg
jg
ja
adc
hlt
fbstp
test
insb
faddl
mov
or
gs
test
mov
nop
repnz
ss
push
mov
popa
pop
sub
push
mov
sbb
repz
jns
lds
outsb
or
mov
cmc
xor
filds
mov
ljmp
jbe
inc
loopne,pt
stos
nop
pop
jno
mov
scas
stos
shrl
mov
mov
or
and
mov
add
fistl
test
outsb
out
inc
std
lds
repz
xor
fidivrl
adc
call
xor
cmp
in
nop
lods
sarb
jne
xchg
jecxz
std
arpl
inc
adc
pop
xchg
mov
call
mov
jecxz
adc
and
shl
inc
loop
adc
lods
insb
les
pop
pop
data16
push
add
xchg
stc
enter
mov
rdmsr
jle
push
lods
sbb
fs
xor
popa
xchg
and
add
outsb
add
andl
add
push
xor
mov
jae
jg
flds
in
sbb
icebp
pop
cmp
and
aaa
test
cwtl
popl
cmp
int
inc
jne
add
push
push
imul
and
imul
repz
movsb
add
pop
loopne
into
mov
sbb
daa
fwait
jmp
pop
loope
or
cmpsb
loope
stos
pop
pop
test
or
cmp
fdivr
mov
jg
dec
popa
pushf
aas
push
out
add
push
add
sub
popf
rclb
push
xbegin
insb
in
cmpsb
pop
ret
mov
scas
or
adc
in
mov
les
enter
lahf
arpl
cld
sub
test
movsl
arpl
sub
cmp
pop
push
sub
and
int
mov
add
sub
jmp
dec
jae
add
sbb
mov
pop
add
pop
mov
xchg
popf
and
mov
cmp
insb
cmp
sbb
add
or
rolb
mov
pushf
push
out
mov
jp
jmp
mov
clc
ficoml
int3
jge
sahf
and
xor
xchg
adc
adc
adcb
adc
mov
add
push
xchg
inc
inc
jno
jbe
enter
or
loop
popa
lret
pop
stos
aam
iret
lds
adc
cmc
or
popf
inc
xchg
arpl
pop
mov
jb
ss
dec
push
lods
add
xor
scas
idiv
in
les
outsb
or
mov
xor
sarb
or
in
sub
outsb
sbb
popa
pop
adc
fsubr
std
add
inc
mov
or
rcrb
add
pop
stos
bound
ja
lahf
movsl
cmpsb
push
jbe,pt
imulb
jg
decl
rorb
dec
call
xchg
incl
sar
cmc
jle
dec
in
mov
push
js
mov
out
enter
mov
andb
nop
pop
mov
xchg
enter
rcl
push
out
inc
iret
or
mov
jg
mov
mov
xor
repnz
sub
jns
addl
xor
or
pop
pop
mov
jecxz
xchg
jg
or
movl
iret
lahf
pop
loop
inc
shr
fisubrs
aaa
setb
mov
rorb
sbb
sarl
pop
std
add
int3
push
dec
fidivrl
dec
in
jge
jle
ds
push
dec
repnz
movsb
movb
cmpb
adc
ret
lds
into
movsb
lds
aas
arpl
nop
xchg
or
jl
pusha
lods
adc
repnz
insl
cmpsb
and
in
jp
icebp
mov
insl
mov
xchg
je
jg
xchg
fwait
mov
lea
out
dec
bound
cmp
adc
or
loopne,pt
orb
ljmp
push
xchg
and
jge
cmp
and
imul
mov
lods
out
push
sub
data16
lret
std
or
lock
mov
dec
mov
in
outsl
and
sbb
jmp
shll
je
shll
daa
std
ljmp
xchg
push
jae
aaa
mov
mov
push
mov
das
xor
xor
cwtl
jne
add
mov
add
pop
loopw
pop
pop
scas
aaa
int3
cwtl
jle
xor
sub
sbb
out
faddp
fcompl
add
or
jo
psrld
jl
adc
push
mov
xor
jl
push
cltd
cwtl
jg
lretw
loopne
cmpsl
add
inc
push
mov
and
daa
repz
pop
stc
out
mov
inc
mov
cmpl
xor
jne
mov
shll
in
jg
jbe
add
cmpsb
rorl
lret
stc
push
xor
jecxz
mov
inc
xchg
mov
inc
pop
fildl
jo
mov
push
daa
dec
in
and
iret
mov
int
add
push
sbb
jg
ja
jno
lods
add
lret
xor
inc
fsubrp
xor
stos
lods
test
mov
xchg
mov
xchg
clc
ds
mov
jne
jno
push
xchg
mov
leave
mov
pushaw
scas
outsb
sub
jmp
inc
test
imul
test
es
jg
icebp
fcoms
jg
fistpl
mov
cltd
mov
nop
cwtl
cmp
sbb
mov
dec
cmpsl
jecxz
lds
daa
mov
inc
dec
aam
leave
jp
sbb
sbb
rorl
mov
mov
inc
adc
ficompl
xchg
lret
xchg
sub
and
push
shr
hlt
subl
lcall
mov
movsl
adc
push
in
push
imul
clc
popa
pushf
push
je
push
or
push
push
inc
sub
pop
pop
insb
mov
int
mov
gs
movsl
sbb
sbb
adc
shll
lods
adc
nop
outsb
cmp
push
enter
test
in
lret
nop
divl
mov
daa
mov
dec
rclb
mov
test
adc
insl
into
and
mov
stos
aas
das
push
inc
or
sub
in
mov
out
dec
ficoml
popa
ret
insb
in
aaa
inc
push
loopne
push
fwait
cltd
xchg
loope
rorb
inc
jae
add
xor
mov
mov
shrb
sbb
xchg
jno
adc
jg
icebp
mov
in
jae
mov
addr16
je
push
sub
inc
push
pushf
xor
push
stos
adc
cmp
mov
mov
sub
add
pop
or
push
cwtl
lahf
inc
mov
inc
jle
or
jp
dec
and
pop
push
leave
push
xchg
dec
cmp
xor
ret
bound
adc
pop
xlat
inc
movsb
pop
in
movsl
push
sub
sbb
sbb
test
mov
cmc
mov
rcr
dec
xor
lock
loopne
mov
mov
adc
imul
cmp
repnz
fs
frstor
test
push
dec
loope
dec
jo
movsb
push
aas
out
cli
lock
mov
aas
dec
fimuls
insl
repnz
inc
or
loope
dec
scas
push
jg
aam
fidivrs
pushf
fstpt
in
cmp
pop
in
aam
aam
cmp
imul
xchg
push
xor
movsl
dec
or
insl
push
pop
andb
jb
out
imul
mov
adc
je
pusha
aad
mov
dec
add
and
outsl
icebp
aaa
movsl
inc
outsb
in
mov
pop
in
cmp
lcall
orb
ljmp
xchg
mov
out
xor
jns
push
adc
mov
adc
xchg
mov
addl
mov
mov
fsubs
clc
lcall
mov
mov
inc
cltd
sbb
push
pop
push
mov
out
mov
cmp
sti
add
mov
mov
push
aas
mov
call
push
mov
insb
mov
xchg
inc
jge
mov
bound
int
je
decl
leave
in
mov
insb
push
inc
push
pusha
outsb
pop
dec
mov
xchg
and
imul
jno
sub
incl
clc
mov
lcall
popf
test
rcl
lret
cmp
std
push
test
mov
ficoml
and
roll
icebp
cs
push
dec
xchg
push
push
mov
and
dec
xor
movsl
push
pop
add
inc
jae
push
jne
mov
xchg
mov
mov
mov
cmp
pushf
sbbb
ss
pop
mov
sub
xchg
xor
xchg
aaa
lods
push
pop
mov
mov
repz
mov
rcl
loopne
aaa
or
cmp
and
lcall
mov
jl
mov
outsl
push
mov
sbb
inc
jnp
test
repnz
jne
jmp
cmpsb
xchg
mov
dec
mov
bound
mov
jo
int3
fsts
and
add
mov
lahf
inc
and
sbb
mov
cwtl
add
sbb
xchg
sub
inc
xchg
aad
xchg
mov
push
mov
mov
mov
mov
lods
mov
out
hlt
testb
xchg
cmp
sar
mov
out
ds
fnstcw
push
mov
jmp
adc
les
imul
pop
jp
sbb
adc
enter
mov
std
pop
mov
jne
xor
jo
sti
mov
dec
add
pop
js
xor
rclb
sub
and
daa
icebp
pusha
insl
loop
mov
pop
pop
shll
sbb
add
aam
mov
je
dec
lods
fwait
neg
lea
jge
cmp
xor
dec
frstor
xchg
adc
and
push
mov
pushf
data16
inc
jge
loop
pop
scas
stos
cmp
sub
sbb
xchg
cltd
out
lea
xchg
jl
jo
jb
hlt
mov
inc
iret
mov
shll
dec
adc
sti
call
xor
js
mov
es
mov
repnz
jecxz
dec
insl
fisttpll
pushf
sbb
dec
and
outsl
leave
cmp
in
popf
mov
pop
mov
jmp
jo
in
ljmp
enter
mov
jl
mov
inc
sbb
out
adc
adc
mov
lret
loopne
mov
test
push
pop
sub
sub
stos
jmp
xor
shll
rclb
je
cmpsb
fcoms
inc
pop
ret
jecxz
push
addb
rcrl
out
jo
inc
xchg
outsl
fildll
and
fnsave
inc
and
jns
jecxz
je
test
inc
clc
add
test
or
or
push
mov
dec
xchg
cmpsl
mov
add
out
rcrl
jecxz
and
pop
mov
mov
gs
mov
mov
adc
and
int
aaa
subl
pushf
fs
cli
mov
add
dec
cs
lods
xchg
cmp
enter
in
pop
loope
sarl
sub
scas
or
out
jae
or
or
and
insb
adc
jb
in
in
or
mov
cmc
add
ja
xchg
das
jbe
ficoms
into
dec
jge
push
pop
cmp
mov
fcmovbe
dec
or
ja
ljmp
jl
dec
rclb
fcompl
pop
inc
xchg
int3
pop
jge
loope
pop
push
cmpsl
shr
cmpsb
leave
dec
mov
popf
int
imul
jb
mov
movsl
mov
mov
push
hlt
xchg
fsub
scas
sarl
sub
dec
js
pop
js
fwait
in
dec
sbb
add
out
mov
push
call
jno
jae
or
and
cmpsb
sub
das
and
aam
ret
inc
into
pushf
dec
mov
add
or
add
lret
mov
dec
cmpl
aad
rcrl
shlb
jmp
push
test
in
add
gs
fistps
mov
sbb
and
daa
cmpsl
mul
mov
xor
mov
clc
sbbb
pop
hlt
mov
in
inc
sahf
or
stc
pushf
test
push
xchg
sub
and
inc
xor
push
hlt
lods
repz
ss
push
je
inc
jp
into
add
and
jbe
jle
xchg
cwtl
xor
sub
cmp
sbb
jmp
push
dec
jmp
repz
fsts
inc
daa
inc
jmp
xor
push
pop
ret
out
and
push
xor
pop
mov
in
push
dec
out
inc
jno
jmp
jne
cmp
mov
lods
xor
and
mov
dec
loopne
and
cmpsl
imul
negb
cmp
mov
or
ret
in
pop
mov
add
push
cmpsl
xor
push
leave
add
outsb
test
push
sbbb
in
loopne
push
lret
pop
gs
sub
lret
mov
jge
push
push
loopne
ss
fimuls
insb
mov
jecxz
mov
lahf
sub
inc
mov
enter
hlt
mov
mov
sbbl
mov
mov
test
out
xchg
lcall
popf
mov
or
or
and
mov
into
inc
adcl
mov
pop
std
cwtl
mov
cld
sbb
nop
cltd
push
arpl
lahf
mov
cmpb
xor
lahf
cld
xor
jecxz
or
xchg
jbe
es
dec
sub
mov
jle
iret
jg
lret
lret
gs
aad
push
fisubs
xchg
scas
lods
cmp
and
out
pop
inc
lcall
pmaddwd
ljmp
fs
ja
inc
mov
mov
adcl
in
ret
pop
shll
fwait
je
sbb
lods
and
pusha
mov
aad
cltd
xor
in
jnp
test
xchg
and
pop
loopne
cwtl
cltd
sub
sub
faddl
and
fucomi
arpl
mov
bound
je
rol
orb
push
mov
lret
inc
push
push
push
out
xor
push
xchg
subb
movl
std
lods
mov
mov
mov
fldenv
xchg
fdivr
roll
push
cmp
xor
out
adc
pop
jne
add
jmp
xchg
push
jne
imull
insl
mov
add
pusha
push
lret
jns
ret
push
test
ret
add
lods
int3
lret
subl
dec
shr
push
mov
leave
ja
shl
push
jp
xor
stos
add
add
into
or
sub
or
je
adc
xchg
rolb
adc
inc
out
xor
aaa
or
stc
cmpl
xor
out
out
mov
jge
sbb
test
jno
sbb
mov
fdivp
or
mov
jns
aad
adc
cmp
cmp
and
inc
and
int3
decl
data16
shlb
sbb
dec
test
and
inc
ret
ljmp
inc
aad
adc
mov
popa
inc
inc
leave
idivl
mov
lahf
and
mov
push
jmp
fiadds
push
xor
fs
pop
mov
pop
stos
xchg
mov
jno
pop
test
faddl
aaa
into
push
fs
test
outsl
fbstp
cmp
cmpsb
xchg
into
pop
enter
out
inc
cli
cltd
xchg
jbe
sbb
lods
in
mov
and
cs
jb
out
mov
dec
mov
rorb
repnz
jg
frstor
cwtl
jb
or
jns
sub
xchg
adc
xlat
into
or
imul
pop
loope
scas
sbb
adc
mov
cmp
scas
and
jle
xchg
adc
add
aad
insl
fadds
dec
add
xchg
pusha
push
sbb
movsb
cli
imulb
out
es
iret
jne
lea
ljmp
mov
js
jb
mov
sub
in
sbb
sahf
mov
aad
jp
xchg
inc
mov
mov
xor
mov
dec
ficompl
lods
aas
push
loopne
lds
es
and
movsl
fildl
bound
jb
jp
pusha
in
dec
inc
inc
inc
rorl
jecxz
cwtl
int
jne
or
jmp
stc
outsl
mov
out
call
scas
inc
adc
push
sbb
lret
jle
outsb
inc
sub
mov
xor
sarl
mov
ja
mov
psubq
pop
outsb
xchg
jae
push
jmp
adc
and
mov
jmp
add
jno
out
dec
jnp
jle
pop
or
enter
dec
into
es
imul
movsb
fucomi
push
push
mov
das
push
cmp
mov
imul
add
push
insl
xor
cmp
out
mov
mov
dec
mov
scas
inc
sub
pop
mov
lahf
cmp
sub
push
jno
jo
int
and
pop
pop
jmp
mov
mov
dec
je
mov
mov
sahf
dec
jo
loopne
je
fdivrl
mov
pop
cmc
push
or
sahf
add
mov
ss
xchg
bound
mov
test
jecxz
mov
pusha
out
add
cmp
xorl
popa
pop
or
jbe
rcr
gs
test
dec
sub
out
fisubrl
sbb
inc
xor
in
lret
dec
outsl
mov
xor
imul
adc
jge
hlt
mov
adc
sbb
jbe
pop
push
dec
dec
push
mov
inc
push
ret
xor
dec
mov
pop
in
push
imul
cltd
xorl
xchg
ds
test
fnstcw
out
popa
das
jle
jmp
outsl
popa
out
in
xchg
std
jge
add
push
stos
enter
divb
jbe
imul
dec
jl
insl
push
ljmp
pop
adc
lock
sub
repnz
dec
pop
ret
in
cltd
jae
inc
jnp
or
insl
sahf
fistpll
jns
add
push
sub
mov
stc
xchg
stos
mov
mov
sub
push
sahf
mov
mov
mov
ss
mov
dec
movsl
inc
and
inc
xor
inc
sub
stc
mov
sbb
stos
lahf
adc
mov
subb
les
sbb
addps
or
jb
xchg
cs
std
mov
dec
lods
jmp
adc
es
rol
dec
push
loope
xchg
cmp
notb
cmp
jge
inc
std
iret
pushl
ffree
push
inc
popl
insl
and
sbbl
lds
dec
and
push
sub
cmpsb
cwtl
out
daa
shlb
adcl
sub
jne
mov
in
cs
aaa
mov
leave
mov
and
sti
mov
addl
xor
mov
dec
mov
sub
out
addr16
inc
cmp
and
mov
mov
divl
jge
sub
lds
test
mov
pusha
push
frstor
and
cmpsb
sub
pop
repnz
jno
aaa
ret
cmp
imul
add
shll
jmp
push
sbb
ret
lods
inc
push
insb
xchg
fs
ret
repnz
and
pop
int
rcll
sahf
push
popf
adc
push
repz
test
xor
mov
jp
cmpsb
inc
std
fcomi
and
add
cmp
jg
push
popa
xor
sbb
in
shr
bound
aas
mov
xor
push
insb
lods
cmc
push
xchg
inc
inc
mov
stos
push
arpl
aad
add
ds
js
push
int
fildll
jo
inc
mov
inc
mov
fidivs
pop
pusha
and
movb
xor
in
or
fimull
cmc
push
push
cmpsb
push
dec
outsb
in
cmp
and
sub
je
xor
out
cmp
in
outsb
dec
mov
jmp
pop
addr16
cwtl
jg
cmp
enter
add
ret
lahf
mov
mov
out
dec
or
jne,pn
and
push
adc
xlat
jecxz
adc
mov
mov
bound
cwtl
js
cmp
sarl
lods
aas
popf
add
insl
stc
jno
cltd
dec
scas
cwtl
mov
xchg
or
lret
outsl
adc
inc
or
inc
xchg
int3
ret
nop
test
popa
push
xor
lods
and
pop
cltd
fmuls
fwait
lock
popl
or
cli
push
cmpsl
push
and
cwtl
decb
lret
sub
pop
fmulp
xchg
repz
mov
mov
or
ret
add
mov
aam
inc
sub
mov
les
pop
cmpsl
aad
push
out
sbb
cmp
mov
jp
and
pop
iret
inc
xor
fcoms
cmc
jnp
bswap
xchg
sbb
stos
mov
add
lods
lods
dec
mov
push
aad
gs
push
mov
cmp
testl
pop
imul
jbe
adc
jne
adc
fwait
pop
test
xlat
data16
sub
xor
add
stos
xor
arpl
shlb
push
or
lret
aam
sub
ds
xor
inc
inc
mov
inc
jl
inc
gs
lret
faddl
int
cmpsb
imul
or
or
adc
roll
mov
pop
mov
add
stos
add
int3
imul
sub
add
lock
fld
idiv
loopne
xchg
xor
jbe
aam
ljmp
lret
mov
push
mov
inc
lods
jns
and
sub
hlt
das
lret
push
sbb
xor
cmp
or
shll
sbb
dec
fdivrl
push
fsubrl
mov
xor
sub
data16
bound
inc
fidivrs
int
test
fiaddl
jl
add
cmp
push
dec
aas
dec
push
clc
outsb
and
mov
and
nop
cs
or
stos
repz
into
stc
aaa
shl
or
sbb
pop
mov
in
popa
sbb
addb
and
adc
je
and
dec
imul
mov
pop
subl
xchg
push
aaa
dec
das
sarl
bswap
adc
pop
in
repnz
mov
shl
pop
push
les
test
rorb
push
and
sub
stos
dec
push
ja
aaa
mov
arpl
test
and
push
leave
push
fisttpl
xchg
fwait
leave
or
push
xchg
cwtl
push
mov
push
mov
mov
sub
int
xor
pop
push
loope
out
mov
xor
inc
jno
push
scas
jl
push
pusha
test
mov
sahf
xchg
movsl
and
xchg
lea
adc
inc
adc
js
jo
push
adc
pop
inc
cmpsb
mov
fcmove
xorl
imul
scas
scas
imul
pop
sbb
jmp
mov
push
or
jo
mov
iret
push
xor
hlt
xchg
pusha
sub
fiaddl
xchg
jnp
mov
sub
or
mov
xorb
mov
cs
sbb
stos
popa
outsb
sarl
inc
iret
jge
mov
xlat
and
push
pop
adc
or
sub
adc
inc
pop
push
mov
daa
aas
jae
cmpsb
mov
fisubs
insl
aas
insb
pop
rclb
push
insl
mov
mov
cmp
test
xchg
dec
jl
das
in
shlb
sbb
push
jns
cmpsb
insl
pop
aam
push
fisttps
and
in
push
xchg
or
jno
push
or
cmpl
lds
mov
push
mov
xor
rcr
push
mov
incb
jecxz
push
lea
sbb
jbe
sahf
mov
sub
imul
loope
dec
pop
jns
mov
sbb
push
nop
in
xchg
inc
add
aad
push
xchg
ss
dec
test
mov
pop
jo
and
dec
xchg
push
push
xchg
xor
insb
and
leave
push
adc
and
into
data16
repz
stc
ret
outsb
mov
mov
cs
push
lcall
call
pop
cld
and
stos
clc
xchg
icebp
push
jno
lret
in
cmp
jecxz
adcl
pusha
mov
mov
cmpsl
sarl
or
stos
ret
inc
ja
jne
stc
cmp
dec
pop
jne
inc
call
test
jl
mov
xchg
sbb
add
sar
sbb
xor
lea
inc
cwtl
or
sub
pop
mov
stos
js
ja
xchg
int
dec
cltd
outsl
adc
or
push
rol
xor
clc
cmp
xor
into
cltd
test
jae
sub
cwtl
sbb
mov
rcrl
inc
hlt
outsb
and
test
jb
mov
sub
rcll
test
lods
adc
sub
mov
out
sbb
out
xacquire
pushf
shll
push
jne
lea
jle
jge
jb
and
xchg
data16
test
popa
mov
xor
pop
cmp
xchg
les
paddusw
movsb
push
xchg
test
fisubrl
sub
enter
or
rcrl
xor
data16
fs
mov
cmp
dec
in
push
loop
jo
js
pcmpeqb
movsb
outsb
dec
xchg
push
aas
cwtl
sti
lds
loop
jo
cli
mov
pop
repnz
mov
enter
inc
sbb
hlt
cli
push
fmull
or
dec
mov
outsl
mov
pop
rcll
stos
inc
jb
mov
xlat
rclb
jmp
icebp
pop
aam
jge
push
sbb
lcall
fnstcw
jge
or
xchg
dec
aad
sbb
xor
clc
outsl
jae
fcmove
inc
cld
call
leave
dec
add
adcb
mov
js
addr16
push
xchg
sub
xchg
int3
jl
sub
lret
call
aad
pcmpeqw
push
imull
cmp
fists
jge
push
cmpsb
and
sarl
call
jne
add
cld
pop
popa
push
adc
sub
and
into
jecxz
rol
lock
inc
sbb
fldt
xchg
movsl
fists
repnz
adc
into
cmp
outsb
dec
mov
xchg
sub
shll
adc
mov
sbb
cmp
fwait
add
jno
lahf
push
loopne
loope
mov
and
insb
adc
test
outsl
sub
push
call
data16
xor
test
aas
mov
lahf
nop
sbb
mov
mov
leave
xor
jmp
arpl
pop
push
flds
das
stos
imul
mov
pminub
fdivs
test
jbe
mov
cmpsl
int3
mov
pop
shrb
pop
stc
or
push
test
and
cmpsb
sub
or
cmc
cmpsl
pop
cmpsl
ret
jmp
int3
mov
nop
add
call
adc
jecxz
sbb
and
repnz
ss
jp
mov
add
stos
mov
sbb
mov
ja
mov
xor
push
pop
mov
popa
hlt
push
out
repz
mov
mov
mov
mov
inc
mov
mov
stos
stos
aad
insb
mov
xor
data16
xchg
nop
out
pop
sbb
dec
dec
mov
lods
out
test
cmp
push
sbb
pusha
int
push
dec
ss
sbb
or
popa
xbegin
sarb
inc
pmaxub
inc
mov
pop
sbbb
mov
mov
pop
ljmp
inc
push
test
xor
push
sbb
stos
add
dec
fucom
call
mov
fcom
lods
pop
cld
mov
pop
aam
mov
xor
mov
loop
testl
mov
jmp
inc
ficoms
stos
std
aad
inc
lea
in
mov
pusha
aaa
nop
rcll
enter
cmpsb
mov
fldt
scas
push
pop
iret
pop
addr16
dec
outsb
ret
data16
xchg
jle
sbb
mov
sub
dec
enter
lds
iret
mov
out
repz
idivl
into
cmpsl
fistpll
loope,pt
adc
and
jmp
out
cmp
dec
push
xor
gs
inc
outsb
repz
loop
repz
lds
dec
ss
jnp
xchg
cmp
test
iret
int3
std
mov
sbb
lcall
jbe
shlb
push
movb
cwtl
or
xbegin
and
lret
pop
jb
cmp
mov
lds
popa
jnp
pop
dec
in
push
cmp
call
fs
sbb
mov
pop
cmp
mov
sub
aam
loope
jmp
add
pop
push
xchg
rclb
sub
jp
jmp
mov
stos
enter
push
jno
out
movsl
movsl
aas
aad
clc
outsb
xlat
arpl
mov
das
xchg
iret
mov
aaa
sbbl
mov
lods
xor
cmp
mov
cmp
xchg
xlat
adc
decl
ss
inc
mov
in
jbe
incb
sbb
xchg
gs
cmp
pusha
insb
push
mov
insl
mov
lds
and
pusha
push
aaa
mov
mov
shlb
pop
je
sub
sbb
out
out
cs
imul
xor
mov
repz
push
xor
ljmp
pop
and
clc
je
pop
test
lods
add
xor
xor
ljmp
mov
pop
cmc
pop
pop
inc
pop
pop
fsubp
lock
test
leave
push
cmpsl
imul
fs
cmpsl
into
adc
mov
mov
mov
aad
sbb
mov
es
mov
ret
add
jmp
mov
insb
jns
arpl
push
out
daa
sbb
ja
lds
in
aas
gs
ljmp
or
xorl
jmp
fists
mov
test
hlt
cmp
mov
inc
outsl
out
push
and
and
cmp
ljmp
pop
pop
lret
xchg
mov
cli
imul
repnz
repnz
addr16
push
add
mov
je
pop
jge
push
push
outsb
pushf
or
sub
and
orl
cmp
dec
rclb
repz
mov
push
or
aad
stc
into
dec
sbb
or
cmpsb
out
xor
js
pushf
sub
gs
jo
pushf
mov
in
mov
outsb
ret
mov
daa
or
mov
mov
pop
sbb
push
mov
xchg
insl
mul
stc
sbb
inc
out
dec
shr
lcall
add
adcb
mov
push
push
sbb
pop
mov
xchg
lret
pop
xchg
cmpsl
add
mov
dec
mov
dec
int3
sub
pusha
dec
add
adcl
mov
xor
shr
xor
es
rclb
mov
mov
push
out
mov
xchg
mov
dec
or
pop
mov
adc
rorl
cmpsl
into
stos
inc
xchg
cmp
pop
sbb
sti
dec
fstps
shlb
std
or
sbb
out
repnz
inc
dec
in
push
adc
int
jns
fdiv
faddl
js
shlb
mov
mov
add
testl
out
cli
adc
mov
mov
push
push
xchg
pop
aad
ja
lea
push
xchg
stc
loopne
sbb
dec
mov
flds
push
add
lcall
pop
xor
stos
incb
or
lods
in
and
filds
xchg
clc
std
cld
mov
in
insb
mov
fcomi
loope
in
mov
dec
or
mov
adc
ds
shlb
das
mov
or
xchg
jl
cmp
lock
cmpsb
shr
test
adc
mov
jge
lret
mov
ss
inc
pop
in
repz
adc
call
fisttpl
xchg
in
iret
mov
shrb
movsl
sbb
les
loopne
es
mov
lods
mov
xchg
fildll
sub
xchg
xor
xlat
lret
push
inc
push
push
test
mov
sub
in
movsl
push
push
aad
loopne
dec
mov
pop
push
je
or
push
dec
fisttpl
mov
cmpsl
sbb
fidivrs
xchg
xor
mov
pop
lret
les
cmp
pop
pop
aas
mov
or
adc
inc
and
sbb
push
inc
pop
test
clc
leave
dec
xchg
sbb
cmp
lds
pop
icebp
cmp
inc
inc
test
fimuls
lods
jl
push
nop
popf
repz
sub
pop
lods
repnz
or
ret
ret
sahf
movsl
rorb
add
fists
jo
add
movsb
nop
adc
out
div
jmp
xor
loope
daa
in
push
inc
xchg
xor
lret
lret
shl
ret
mov
sub
in
mov
mov
cmp
fxch
xlat
mov
data16
psubusb
sbb
into
ss
and
icebp
shll
cmovg
add
or
xor
inc
sbb
sbb
xchg
cmpsb
stos
add
or
sub
movsl
mov
or
aam
lock
call
pop
mov
cli
xchg
mov
cmp
mov
out
out
inc
mov
add
mov
add
adc
mov
and
add
inc
add
cmp
mul
push
mov
lret
jle
add
faddp
mov
or
adc
adc
movsl
sbb
int
add
call
int
ja
or
pop
jecxz
ror
loop
lea
ficoms
dec
push
loopne
cvtps2pd
leave
sbb
into
das
pop
cmpsb
or
inc
test
jns
xchg
call
cld
data16
jbe
lahf
lret
shrb
jge
pop
xchg
jmp
mov
ljmp
mov
pusha
xchg
sub
xchg
int
push
or
fidivrs
leave
not
xor
jno
or
inc
in
lds
das
lods
mov
add
and
div
mov
lock
cmp
push
das
addr16
fimuls
std
mov
pop
mov
or
mov
shll
xor
test
fcmovnb
inc
ret
dec
int3
mov
xchg
xchg
das
dec
jge
movsb
mov
cmp
dec
sub
jns
mov
xchg
sbb
aaa
cli
fstl
daa
outsb
jecxz
cmp
or
push
mov
fsubrl
and
stos
pop
and
jl
fmull
pop
push
sub
inc
in
mov
add
add
iret
in
dec
fs
xor
push
adc
sbb
cmp
xchg
xor
or
xchg
enter
lock
sbb
in
xchg
xor
shl
in
lahf
fdivrl
pop
lret
test
mov
jae
inc
pushf
pop
add
push
dec
and
stos
sub
sbb
imul
mov
mov
pop
in
lcall
ljmp
jae
dec
xchg
leave
popf
rorl
cs
jp
sub
leave
sahf
push
out
adcl
imul
or
mov
call
nop
int3
pop
jo
fisttpl
fsubr
add
icebp
mov
pop
jg
shll
test
es
sub
jno
lret
mov
pop
fdiv
test
push
lea
rcrb
stos
mov
bnd
in
scas
mov
stos
popf
push
shrb
in
dec
std
jge
add
jl
cmp
test
icebp
sub
cmp
clc
add
imul
pop
mov
mov
and
in
out
lcall
in
insl
adc
add
xor
pop
in
sub
data16
jae
fcmovnbe
adc
sub
xchg
nop
mov
dec
bnd
scas
sub
dec
out
shlb
and
cmp
cmc
hlt
cmpsb
dec
jge
insb
js
fsubrs
and
dec
lods
jge
icebp
push
jmp
dec
sbb
adc
rol
lcall
movsl
jb
xchg
lahf
lcall
aas
and
out
adc
pop
test
pop
adc
xorb
scas
pop
icebp
xchg
shl
dec
xor
fisttps
shll
gs
mov
jb
ja
xchg
xchg
ret
mov
lods
sub
mov
andl
imul
data16
mov
bound
pusha
repz
or
push
into
sub
imul
aas
sbb
fistpl
scas
jno
lock
iret
xchg
push
jo
add
decb
mov
cltd
rcrl
outsb
mov
push
mov
nop
das
and
jb
js
sub
pop
popa
and
jo
dec
aad
enter
pop
inc
fcoml
pop
push
jno
icebp
jp
popa
mov
icebp
rorb
lea
fildll
sbb
inc
iret
push
in
dec
in
mov
mov
aas
les
or
jnp
jae
inc
aad
xor
push
rol
outsw
rorl
rclb
test
fidivrs
mov
dec
inc
sahf
pop
jo
daa
insl
and
inc
scas
test
add
mov
data16
mov
xchg
aam
push
xchg
ficomps
and
mov
or
pop
ljmp
cli
inc
shrb
adc
mov
fisubl
fistps
pop
pushf
fistl
stc
lea
or
mov
add
sti
cs
arpl
clc
leave
les
std
sbb
ds
jbe
xchg
xor
or
adc
push
mov
push
adc
enter
inc
bnd
cmp
sbb
int3
xchg
inc
int3
jno
or
std
xchg
or
xchg
icebp
scas
cmp
mov
test
mov
inc
cmc
ja
xor
es
adc
xchg
mov
jmp
cmp
loope
sub
aas
adc
cmpsl
test
sahf
push
xor
sbb
adc
ss
mov
add
mov
add
jmp
xchg
mov
jp
inc
fdivrl
pop
and
jb
jbe
stos
mov
rcll
mov
or
jb
jecxz
add
mov
and
loopne
add
jp
cmpsl
jp
or
sub
xlat
loope
jmp
xchg
shlb
mov
or
dec
cmpsl
in
sbb
inc
or
xchg
dec
cli
inc
mov
mov
jb
out
mov
iret
je
mov
or
jbe
ficompl
xchg
scas
pop
mov
sbb
mov
clc
dec
pop
and
jle
jg
clc
data16
clc
xchg
mov
jno
pop
loopne
push
out
mov
rcrl
sub
insb
movsb
scas
jo
insl
popf
mov
push
cwtl
dec
mov
in
inc
jbe
shlb
pop
jo
mov
dec
test
outsb
inc
dec
dec
fcoml
repz
dec
push
loope
push
mov
push
mov
inc
cld
scas
mov
insl
mov
test
fidivrl
into
or
mov
mov
xor
mov
sub
sbb
add
data16
outsb
mov
cmpsb
pop
xchg
xchg
or
add
pop
pop
outsl
mov
ss
in
xchg
inc
js
sti
mov
lcall
mov
aad
stc
cmc
mov
ja
push
inc
sbb
imul
dec
jb
fcmovnu
not
rorb
in
insb
fcmovnbe
pop
fidivs
or
pop
dec
pop
mov
cmpsb
imul
ja
sbb
xor
xchg
movsb
imul
mov
repz
jp
lds
sbbl
movsl
push
mov
cld
or
ljmp
hlt
rorb
nop
xor
dec
sub
sub
ret
in
mov
enter
sbb
rolb
nop
cli
sub
int
push
mov
push
pusha
ja
clc
xchg
mov
enter
or
lahf
icebp
add
mov
shll
cmpsl
xchg
imul
mov
bound
mov
ret
jmp
mov
mov
daa
std
outsl
in
mov
jae
add
dec
dec
cmp
pushf
push
popf
sbb
clc
mov
and
je,pn
fs
movsl
dec
jne
xchg
aad
cld
out
inc
repnz
cmp
rorl
or
or
out
mov
xor
cmpsl
cli
dec
test
jno
inc
mov
dec
push
xchg
out
lahf
adc
daa
push
xchg
cmpl
mov
and
enter
aam
cmc
pop
jecxz
push
pop
push
ja
pop
test
cmpb
daa
das
xor
cltd
xor
adc
jp
cli
popa
sbbl
cwtl
xor
push
sbb
jno
inc
mov
inc
insl
sbb
repnz
push
addb
mov
sub
push
xlat
jb
mov
jp
mov
jge
add
insl
or
mov
add
mov
xchg
xchg
lret
inc
pusha
xchg
sbb
cmpsb
out
inc
outsl
sub
sub
sbb
stc
adc
pushf
lods
and
sub
mov
call
loope
inc
mov
cmp
enter
add
mov
bound
repnz
mov
mov
inc
pop
or
jae
or
and
xor
gs
out
jae
cmc
dec
scas
mov
cs
lods
int
xchg
inc
xor
jp
out
nop
aas
jne
sahf
inc
mov
out
push
ss
outsb
je
mov
bound
in
stos
test
outsl
push
fidivl
insl
sub
mov
repz
inc
dec
xchg
mov
dec
es
mov
xchg
push
in
arpl
stc
push
movsl
in
rolb
mov
jbe
inc
cmp
jg
adc
mov
lods
into
jle
ds
daa
mov
enter
xchg
scas
stos
mov
aad
popa
jmp
push
or
int3
and
out
sahf
jmp
stos
and
mov
mov
dec
ds
les
iret
xchg
mov
jmp
pushf
jne
cmp
dec
test
shll
roll
out
dec
mov
cld
outsb
lea
jb
data16
push
cs
xchg
cmp
adc
je
mov
mov
dec
add
test
movsl
inc
ficoms
ret
dec
rolb
inc
loope
inc
call
mov
add
fldl
pushf
mov
cmp
adc
rclb
inc
push
dec
add
pop
bound
test
jns
ret
fisttpl
mov
mov
pop
and
push
adc
lcall
in
jbe
rorb
inc
mov
cltd
jae
aad
or
call
pop
jno
inc
scas
lea
loopne
inc
mov
mov
xchg
cmpsl
popa
mov
mov
sub
xor
mov
loope
xchg
inc
int3
cmp
xchg
sbb
out
push
dec
jnp
xor
fsubrp
outsb
mov
stc
enter
adc
sbb
xchg
in
sbb
aad
cmpsb
push
push
xchg
fadd
push
int3
xlat
lds
popf
and
cli
aaa
fwait
pop
rcrl
insb
push
dec
adc
adc
jmp
cs
sarb
jb
jns
add
into
pop
outsb
sti
lcall
and
dec
sbb
sarl
cli
xor
or
and
or
jns
data16
adc
es
test
sub
std
fnsave
cltd
mov
insb
add
mov
jno
rolb
adc
push
adc
bound
shr
mov
fs
push
testl
fidivl
stos
xchg
fsubp
mov
cwtl
xchg
bnd
data16
push
push
movsb
iret
dec
in
jmp
cmp
mov
aad
sub
cmp
add
dec
xor
xchg
aad
sti
jno
sbb
mov
mov
imul
add
int
mov
scas
inc
movsl
cmc
aaa
mov
pushf
ljmp
xchg
dec
mov
bound
adcb
dec
jg
xor
jmp
cmpl
psrld
xchg
jb
xchg
jns
mov
dec
loopne
aaa
xchg
mov
test
jmp
jo
mov
xchg
sub
ja
clc
jo
xchg
adc
xchg
cltd
jbe
cmpsb
adc
loop
dec
or
xchg
xor
std
fwait
adc
call
rolb
sub
roll
and
push
lods
add
pop
fisubrl
stos
inc
pusha
data16
in
inc
leave
add
xor
add
orl
cmpsb
outsb
movsb
sbb
mov
sub
lds
mov
add
movsl
inc
xchg
mov
orl
rcrl
in
insb
xchg
stc
pop
dec
pusha
nop
std
fmuls
clc
movsb
lea
aas
dec
cmp
arpl
mov
daa
mov
pop
jb
mov
int
mov
outsb
push
mov
push
mov
in
adc
mov
push
cs
sbb
mov
dec
in
and
ds
pop
out
inc
ja
addr16
and
xchg
push
les
push
inc
pop
popa
sbb
mov
pop
loopne
mov
cwtl
mov
push
shl
mov
sub
dec
cmp
idiv
or
mov
arpl
or
movl
mov
test
sahf
sbbb
dec
cltd
cld
inc
imul
xchg
mov
out
std
lcall
cmp
mulb
inc
pop
out
jae
pop
es
divb
mov
mov
inc
jmp
lret
cmp
pop
lret
jbe
loop
test
dec
in
pop
iret
mov
mov
mov
sub
mov
inc
mov
shl
addb
pushl
mov
ja
cmp
add
mov
inc
inc
mov
aad
push
outsl
fwait
or
loopne
pop
jnp
lods
dec
fiadds
adc
inc
push
pop
and
xor
xor
bound
mull
fnstenv
stos
arpl
scas
idivb
pushf
test
lods
hlt
sti
repz
push
repz
and
fsubrs
movsb
rorb
scas
aam
fdivrs
cmpb
insl
scas
nop
add
cmp
push
push
xchg
sbb
es
repz
pop
popa
mov
cmpsl
sbb
mov
push
lcall
adc
pushf
push
jbe
and
imul
ljmp
jmp
das
in
sub
or
out
int3
mov
test
mov
mov
jo
negl
mov
insb
ret
xchg
ljmp
mov
fsubs
cmpb
xor
xchg
sti
stos
out
xchg
push
push
in
add
pop
mov
mov
inc
lea
sub
xlat
jne
jo
and
ja
inc
lahf
insl
pop
imul
xor
int
es
into
pop
cmp
bound
lods
push
mov
shll
sub
mov
daa
fs
into
xlat
push
fs
mov
movntq
out
xor
sbbl
xor
or
decb
xchg
push
fstl
frstor
inc
flds
ljmp
lret
cmpsl
adc
repz
mov
filds
xor
and
test
repnz
cmc
sbb
adc
aam
fsubl
cmc
xchg
push
dec
mov
cli
adc
push
rclb
jmp
out
adc
fcoms
outsl
stc
or
stc
movsl
insl
sbb
cwtl
out
sbb
lods
insb
clc
out
sub
jg
and
icebp
jnp
pop
mov
incb
xlat
mov
mov
scas
bound
leave
das
adcb
xchg
int3
movsb
cmp
cwtl
lock
and
pop
cmp
xchg
scas
scas
mov
lcall
js
idivb
ss
xor
push
xor
xchg
push
cmp
leave
mov
pushf
repnz
jo
dec
mov
ror
mov
rcrl
roll
xlat
fs
sub
in
leave
cmp
out
xchg
cmp
fdivs
xor
add
xor
cmp
dec
jno
or
jmp
outsl
push
enter
nop
jg
dec
mov
insl
and
pop
xor
cmp
shrl
sbb
out
xor
push
mov
jb
xchg
imul
mov
add
sarl
pop
arpl
or
add
sbb
push
outsl
or
cwtl
mov
sbb
inc
dec
or
cmp
dec
push
mov
sub
mov
stos
mov
push
shlb
outsb
add
adc
sbb
andl
stos
pop
pop
jle
fistps
cwtl
fsts
mov
add
jne
push
int
cld
pushf
stos
jne
xchg
adc
scas
cmp
sbb
pop
xchg
jp
orb
jno
rep
pop
andb
xchg
orb
mov
insb
cmp
stos
jnp
dec
ret
jmp
push
sbbl
lods
sarl
pop
clc
sti
adc
jnp
rclb
jb
push
loopne
inc
xchg
sub
adc
mov
out
or
addr16
repnz
imul
popa
nop
xor
cld
je
cltd
ficompl
popa
sub
sbb
add
sub
aam
xor
cmpsb
pusha
fcom
jo
jg
adc
mov
pusha
daa
push
jnp
lret
xor
rcl
call
imul
push
mov
jae
sbb
jno
fwait
cli
adc
insl
adcb
aaa
hlt
sbb
cmp
cmp
pop
mov
push
mov
int3
icebp
scas
or
pop
add
cld
fimull
jp
mov
orb
mulb
mov
mov
cmp
pop
push
das
into
xchg
xchg
dec
cltd
fwait
pop
enter
ror
mov
add
jns
loop
xchg
pusha
mov
pop
jecxz
shll
int3
xor
dec
into
adc
cmp
dec
les
add
out
clc
lock
jb
dec
pop
mov
push
inc
stos
pop
add
pop
cli
fmull
mov
dec
or
sub
jbe
push
push
sbb
sbb
push
pop
jae
mov
xor
push
cmp
jle
lahf
fsubrl
loopne
sahf
sub
in
pop
cltd
adc
dec
add
and
lods
lock
fistpl
cmc
out
cmpsl
bound
jno
cmp
movl
sbb
lahf
dec
and
and
pop
dec
sub
repnz
xlat
adc
pop
adc
add
add
cmp
insl
fs
cmp
mov
or
nop
pushf
imul
and
inc
jle
mov
sbb
mov
sahf
fwait
es
mov
aas
into
sbb
clc
jae
ds
inc
jno
popa
sub
rcll
cmpb
insb
stos
lahf
test
lret
aaa
cli
dec
xor
mov
dec
test
jne
sub
push
cld
push
pusha
dec
fmulp
mov
popf
xor
fwait
scas
mov
aaa
jnp
mov
inc
push
in
stos
mov
add
lods
decb
ds
arpl
xchg
push
adc
fs
xchg
out
das
test
rol
cmp
mov
lock
sbb
fs
cmc
cmp
push
xchg
inc
push
rorl
jnp
add
xchg
int
mov
dec
aaa
in
clc
sub
mov
and
outsb
stc
jmp
push
jno
or
or
mov
mov
xchg
jp
jg
mov
es
xor
mov
mov
push
fs
into
inc
push
movsb
fsubs
loop
pop
push
aaa
inc
or
clc
sub
imul
inc
leave
lock
xor
call
fcom
es
or
xchg
pop
cmp
xor
cs
lcall
fildll
push
mov
dec
movsl
inc
cmpsl
sub
scas
mov
dec
into
gs
add
push
mov
and
fstpt
add
hlt
lods
push
push
push
and
cmc
mov
inc
fmull
enter
push
sbb
xchg
inc
add
push
int
mov
mov
dec
jmp
mov
xchg
mov
sti
das
lock
push
ljmp
sbb
inc
jns
scas
mov
add
imul
pop
cmc
flds
lock
subb
mov
inc
jl
or
outsb
clc
notb
dec
add
iret
xchg
aam
mov
cmp
fisubrl
inc
ret
clc
sub
push
sbb
mov
es
imul
je
notl
sub
popf
fisubs
arpl
dec
adc
cwtl
mov
cmp
dec
out
daa
mov
rcrl
jmp
cmpsb
mov
jge
pop
fildll
out
cmp
aam
imul
shll
xlat
ss
add
mov
adc
inc
stc
gs
jmp
xchg
iret
ljmp
mov
jno
fs
mov
sbb
cmp
int3
cs
enter
sub
mov
repnz
dec
adc
push
mov
dec
sahf
pop
pusha
icebp
mov
stos
pop
pop
pop
xchg
test
xchg
imul
dec
mov
arpl
out
inc
jp
movsl
out
pop
add
jecxz
adc
jmp
push
adc
popa
jo
mov
loope
or
lods
jno
mov
xchg
out
imul
sahf
fistpl
mov
out
std
xchg
mov
sbbl
int
jmp
pop
sub
mov
inc
fstps
push
aad
je
xor
pusha
lds
or
int
or
add
mov
jns
mov
jnp
repz
xor
sbb
ja
push
loop
xor
or
sarl
mov
jne
sub
adc
inc
int3
lret
sbb
out
cmp
xchg
mov
lcall
xchg
xor
push
inc
loopne
cltd
pop
mov
mov
xor
call
dec
fwait
push
xchg
bnd
shl
lret
mulb
cmp
mov
jnp
mov
icebp
ljmp
jns
push
movsb
push
sub
add
arpl
incb
or
mov
insl
sub
pop
mov
mov
lcall
int
pop
xor
xor
orb
add
inc
mov
insb
mov
test
ss
lret
pop
mov
shlb
inc
imul
sbb
test
paddusb
mov
push
sub
ds
aam
gs
loop
pop
xchg
dec
adc
rcr
xchg
inc
jle
repz
test
and
int3
pushf
pop
in
sub
dec
arpl
and
mov
mov
push
dec
mov
jp
in
ss
in
xchg
mov
pop
or
outsb
mov
inc
sbb
or
psllw
mov
xor
ret
pop
sbb
sub
movsb
cmpb
adc
mov
mov
xor
scas
xchg
je
scas
enter
jo
sub
clc
jge
xchg
mov
pop
and
ret
cltd
mov
loop
mov
xchg
push
cmp
inc
lods
sbb
inc
call
je
sbb
cmp
jne
mov
ss
xor
dec
dec
out
dec
xor
sub
mov
add
hlt
lcall
enter
jg
pop
sbb
mov
or
fmull
popf
mov
sbb
imul
adc
or
sub
ja
mov
add
jne
or
nop
sbb
test
pop
lods
rclb
insb
pop
arpl
insb
psubusw
test
and
or
or
and
rolb
fcmovne
mov
adc
test
ljmp
jp
enter
push
sahf
pop
jecxz
cld
xor
leave
scas
xchg
dec
stos
xor
mov
jmp
insl
aam
push
dec
xchg
fnstcw
pop
sbb
fstenv
rcl
mov
dec
sbb
cltd
imul
cmpb
ret
insl
fwait
jmp
or
cwtl
inc
sti
jns
lods
pop
inc
mov
xlat
jg
sbb
mov
test
call
sub
and
sbb
daa
jmp
mov
pop
clc
xorl
addr16
push
xor
std
shl
in
mov
xchg
sbb
adc
pop
or
test
test
dec
testb
std
or
jecxz
inc
je
daa
cwtl
mov
jns
cmp
ljmp
out
insl
xchg
and
pop
mov
inc
jae
es
push
mov
fs
xor
mov
insb
pop
sti
jle
bound
mov
ss
push
sbb
into
mov
idiv
call
pop
rcrb
cmp
or
push
lahf
mov
jae
int3
lods
in
lea
adc
repz
cli
mov
aad
xchg
inc
and
rcl
movsb
movsb
xchg
jp
and
mov
jecxz
mov
ret
mov
mov
cmpsl
ret
daa
test
sbb
movsb
mov
xchg
mov
mov
std
push
mov
xor
inc
or
fistl
jge
fistps
inc
nop
lds
lahf
stos
mov
fsubrl
dec
lods
arpl
jl
inc
dec
lret
sbb
in
icebp
sub
bound
and
shr
and
inc
imul
das
in
ss
movsb
movsb
mov
push
sbb
cmp
pop
dec
sbb
cltd
imul
cmpsl
lcall
mov
pop
sub
sub
xchg
cmp
das
in
xchg
push
lcall
mov
ficoml
pop
xlat
jle
scas
mov
dec
push
mov
lret
xor
iret
mov
test
into
ds
mov
sub
add
into
out
or
dec
cmp
add
xor
cmpsl
xchg
xor
les
loopne
popf
cmp
cmp
xor
mov
sbb
mov
cmp
pop
shrl
jae
xlat
ss
mov
rcll
int
inc
lahf
adc
and
sub
insl
mov
dec
xchg
mov
mov
repnz
out
ja
jnp
or
push
inc
mov
pop
mov
aad
lods
out
aam
adc
pop
dec
mov
sub
pop
pop
lods
mov
pop
jo
shrb
pop
xchg
mov
in
punpcklbw
cs
add
pop
mov
xchg
arpl
push
xor
mov
xor
mov
addr16
bound
leave
out
push
adc
jecxz
xor
jecxz
mov
incl
dec
icebp
rorb
adc
jl
bound
push
xchg
add
push
lcall
and
and
scas
push
add
mov
add
out
pop
rclb
mov
fidivl
jae
and
or
or
and
pop
mov
push
in
add
cmc
mov
popf
push
mov
lods
adc
pushf
mov
jge
add
mov
adc
xchg
jle
out
add
inc
cmp
jne
ja
push
mov
in
inc
push
leave
dec
in
adc
lret
jns
pop
data16
inc
jne
mov
add
sub
jp
addr16
scas
inc
clc
movsl
adc
add
push
push
repz
xchg
and
dec
out
rorl
jne
mov
insb
popa
outsb
btc
cmp
imul
ret
xchg
cs
jnp
xor
ret
inc
mov
fsubrl
aam
movsl
cmpb
mov
notb
mov
sub
loopne
out
iret
mov
xor
mov
dec
jb
xchg
xor
addr16
push
lret
test
add
mov
inc
das
shll
sbb
or
out
cmc
fwait
out
sub
cmp
mov
ljmp
mov
ficompl
sub
fwait
out
outsl
push
pop
sub
das
testl
pushf
mov
mov
rcrl
push
dec
fsub
pushf
shlb
jmp
aam
adc
dec
mov
ljmp
popa
sub
fisttpll
cmpsl
in
push
sub
mov
mov
test
daa
mov
fisubrs
inc
sti
mov
cli
cmpsl
shl
lods
insb
hlt
pop
mov
mov
icebp
xor
add
cmp
loope
mov
movsb
dec
repz
lret
and
movsl
pop
add
inc
push
int
jl
les
andb
and
mov
push
repz
shl
enter
add
sti
sbb
je
mov
jge
int
dec
xor
idiv
mov
cmp
add
idivl
imull
and
cmp
cmp
jo
mov
inc
sahf
or
and
sub
daa
bound
xchg
mov
roll
mov
jp
rorb
pop
dec
jmp
inc
insb
ret
into
loope
ja
jmp
jmp
cmp
cld
xor
mov
and
ret
sbb
test
xor
bound
push
fdivs
fsubrp
movsl
mov
ja
add
sbb
lods
int3
push
test
dec
les
dec
fst
clc
pop
xor
js
mov
js
mov
dec
mov
xor
xchg
jne
adc
arpl
mov
cmp
lret
loop
shll
cli
jnp
xchg
add
repnz
into
or
mov
rcrb
das
cmc
shrb
sti
or
xchg
mov
or
movsl
lret
sbb
inc
sub
lret
mov
mov
test
push
cmp
loope
pop
push
insb
rcl
rol
xlat
mov
sub
cs
aas
imul
stos
std
push
loopne
push
push
jge
mov
lods
push
xchg
adcb
ja
xor
insl
or
adc
sti
mov
mov
push
ss
scas
adc
fists
cmp
jecxz
movsl
mov
cltd
movsl
mov
cltd
das
arpl
mov
mov
or
inc
out
add
pushf
xchg
dec
mov
push
cmp
lds
dec
stos
jns
jo
jnp
scas
and
fsubr
dec
jp
fildl
into
jae
inc
aam
mov
xchg
xchg
cltd
fldt
inc
lret
pushf
mov
mov
popa
mov
cmc
mov
es
add
mov
cmp
pop
jge
cmp
pop
test
and
mov
ret
and
popa
xor
adc
fsubrs
adc
xchg
fiadds
adc
inc
iret
and
mov
int3
mov
das
icebp
mov
sahf
mov
aas
xchg
pop
bound
fildll
gs
and
sub
dec
add
ljmp
outsl
testl
mov
mov
lea
push
rcrb
pusha
nop
es
push
inc
cmc
scas
in
jge
push
shll
xor
adcb
xorb
jns
test
add
add
jbe
or
test
in
es
outsl
pop
or
outsb
jne
gs
mov
push
iret
cmpsl
xlat
shll
pop
sub
mov
jge
shl
push
mov
xor
hlt
jns
divb
ss
roll
iret
xchg
push
add
mov
or
pop
jmp
std
mov
sti
insl
mov
mov
inc
push
jg
mov
jno
cmp
mov
cmp
arpl
cmp
data16
push
xor
lcall
jecxz
and
xor
xor
add
cmp
jb
xchg
cld
inc
scas
push
test
jo
inc
or
jne
jb
add
push
fdivrp
je
cmp
mov
insl
test
push
add
dec
aam
stos
out
imul
daa
xor
jbe
mov
adc
sbb
jne
mov
cld
ret
sbb
push
push
xchg
pop
mull
imul
push
pop
dec
sarb
cmp
pop
dec
repz
popf
es
lret
scas
sub
or
loope
ds
shll
rcrb
sbbb
xchg
or
and
mov
adc
mov
cld
lcall
scas
out
sub
aas
ret
sub
adc
mov
nop
sub
sub
push
out
testl
es
sbbb
xchg
mov
jnp
xor
mov
fdivs
push
push
stos
pop
aaa
imul
mov
cwtl
xor
shrb
int3
orb
or
outsb
mov
or
add
mov
mov
sub
mov
addr16
cwtl
sub
shll
sbbb
inc
push
inc
inc
pop
or
or
insl
lock
in
add
test
jb
adc
mov
cmovg
xor
cli
jno
add
add
cmp
cld
inc
outsl
leave
sbb
cmp
xor
rcrb
loope
inc
inc
xor
mov
jmp
nop
leave
out
add
cmp
icebp
pop
jae
adc
adc
mov
and
cmp
xor
xchg
and
fwait
mov
push
fdivl
add
lds
sub
pusha
sbb
mov
cmc
inc
cli
jo
andl
cmp
clc
jp
aad
xlat
push
jmp
scas
adc
mov
xor
and
xchg
sub
sbb
and
ret
imul
pop
mov
stos
mov
fbld
ss
jle
aaa
test
jmp
pop
test
dec
sbb
test
fs
dec
xchg
push
sbb
repz
sti
jo
push
fadd
repnz
cmpsb
addr16
in
clc
xchg
inc
loopne
ljmp
or
mov
cmp
fisttps
mov
gs
out
sub
rclb
ljmp
push
subb
mov
sbb
push
add
test
xchg
add
xchg
mov
mov
js
popf
mov
jg
ss
inc
inc
or
arpl
imul
dec
cmp
aaa
mov
push
out
iret
mov
push
mov
out
cmp
add
mov
std
xorb
and
push
dec
imul
loop
fwait
dec
mov
ret
addb
adc
mov
test
nop
xor
jae
sbb
call
clc
push
mov
lcall
lock
cmp
data16
push
mov
orl
in
std
jecxz
test
sar
mov
cltd
int
jns
mov
mov
popf
je
cli
pop
xor
mov
outsl
aam
mov
icebp
jne
std
scas
rolb
and
add
sarb
pop
mov
mov
mov
jge
daa
lcall
loop
mov
mov
dec
pop
loopne
adc
and
mov
xor
mov
dec
mov
sub
mov
clc
sub
mov
std
xchg
scas
incl
xchg
mov
inc
popf
jbe
add
stos
nop
ffree
add
mov
and
xchg
movsl
icebp
cs
cmp
mov
je
pop
ficoml
clc
cmp
dec
outsl
pop
imul
insl
sbb
pop
popa
std
out
dec
xor
push
xor
sahf
or
scas
inc
lods
mov
les
fwait
jg
sbb
and
shll
xchg
cmp
fucompp
jae
insb
push
xchg
loope
daa
cmp
push
sbb
pop
mov
inc
scas
gs
sub
fdivl
aas
adc
lahf
mov
and
push
jle
js
xor
incl
push
xor
inc
incl
pop
pop
push
pop
xor
hlt
mov
mov
rcll
inc
pop
lock
jge
arpl
movl
pop
jp
or
int3
inc
sub
xchg
inc
add
jbe
in
jg
lea
sbb
popa
loop
nop
aaa
fld
inc
sti
dec
fimull
cmp
je
pusha
adc
pop
movsl
xor
xor
cmp
cmpsb
and
mov
add
add
mov
out
xchg
shl
push
ret
adc
in
ret
mov
push
adc
int3
mov
insl
adc
test
int
push
pop
dec
jle
pop
lods
cmp
arpl
addb
std
scas
ror
mov
lahf
mov
xchg
mov
pop
jne
mov
xor
cmpl
xchg
lahf
dec
fildl
cmpsl
adc
jp
or
xchg
pop
jp
add
test
or
inc
daa
hlt
ja
or
push
xor
lds
mov
sbb
loopne
movsb
daa
test
out
clc
testl
lahf
lea
or
add
loopne
dec
mov
jns
mov
leave
cmp
rolb
flds
les
cwtl
int3
je
cs
xchg
or
xlat
ret
in
shr
in
xacquire
and
hlt
adc
leave
imull
nop
inc
xchg
xchg
push
and
jne
pop
stos
movsb
add
aam
pushl
xor
shll
cmp
out
and
rclb
mov
cmp
ret
repz
xchg
test
out
push
jmp
push
mov
loop
and
imul
test
pop
hlt
mov
inc
jae
mov
mov
js
scas
xor
es
pop
jp
push
dec
sbb
and
cmc
ret
fs
dec
or
xchg
hlt
mov
jecxz
sarl
dec
fwait
push
je
aam
dec
mov
fisttpl
mov
push
pop
sahf
xor
add
sahf
sbb
mov
push
sbb
adc
xor
xor
mulb
mov
dec
hlt
stos
pop
adc
ret
fsub
aaa
aad
xchg
mov
out
add
add
ss
inc
inc
data16
add
daa
push
sbb
icebp
arpl
aam
inc
std
dec
aaa
sbb
xchg
jns
ret
mov
mov
ja
sbb
testb
mov
fsubl
aam
out
inc
fsubl
fsubr
sbb
adc
xchg
fisttps
das
jne
lods
lcall
hlt
xchg
movsb
gs
xor
mov
jns
xchg
orl
adc
jae
and
lock
xor
js
mov
jmp
mov
jb
xchg
xchg
repnz
and
mov
mov
xor
push
dec
enter
cmpsb
rcrb
jbe
in
sub
sarl
cmp
test
cmp
lock
mov
sahf
ja
nop
cli
dec
fcomp
xor
in
int
or
adc
cmp
or
jge
les
and
jns
jmp
inc
pop
mov
pop
pop
xchg
loope
shll
mov
jne
into
mov
lods
icebp
fdivrs
mov
mov
lea
mov
fisttps
xchg
jecxz
fistpll
lds
je
pop
daa
lods
popa
adc
sbb
cld
dec
pop
mov
xorps
and
icebp
lods
lock
mov
rolb
jns
push
xorl
pop
loop
or
lret
pop
pop
loopne
xor
mov
outsl
in
aam
leave
sbb
adc
dec
pop
inc
sbb
out
jecxz
mov
push
mov
cmp
scas
or
dec
out
mov
xchg
je
pop
or
xchg
cmp
call
cmp
or
adc
inc
or
mov
insl
sarb
sbb
pop
jns
call
xor
mov
sub
and
imul
fdivp
imul
cmpsb
cltd
and
leave
in
jg
popa
jp
nop
cmp
outsb
dec
lods
scas
sub
or
sub
js
scas
popf
orl
out
dec
sub
pop
xor
mov
cmp
lods
adc
mov
call
dec
pop
stc
add
inc
stc
dec
mov
inc
in
out
repnz
icebp
or
cmp
adc
pop
xor
inc
mov
xor
dec
rcr
repnz
imul
and
push
test
pop
sub
lock
mov
sub
xorb
bound
cmp
sub
call
cltd
xor
addr16
movb
xchg
sbb
push
add
inc
push
lret
mov
or
inc
flds
xchg
sub
idivl
sbb
fucom
mov
movsb
mov
scas
cli
fisttps
xor
pop
cmp
out
movsl
add
cwtl
repz
mov
mov
push
das
or
lret
jle
jge
push
jbe
nop
cltd
jae
hlt
push
hlt
cli
inc
rcll
std
mov
int3
dec
sub
pop
add
popf
xor
rolb
es
xchg
ds
ljmp
lea
dec
sub
dec
mov
loop
pop
cld
cs
loope
inc
and
cmp
iret
mov
imul
jle
jmp
shlb
pop
push
leave
adc
fucomip
sbb
push
sbb
orb
push
fcomi
mov
or
jmp
push
jp
jo
ds
mov
xchg
mov
and
sub
sarb
inc
pop
add
sub
mov
and
mov
and
fucomp
pop
mov
mov
push
aad
push
int
push
xchg
cli
xchg
xor
xchg
stc
mov
or
push
daa
mov
sbb
jb
gs
lods
xor
xor
xor
ss
test
push
cld
out
mov
and
add
data16
or
dec
out
adc
mov
rcrb
icebp
decb
mov
push
fsubs
sbb
aad
filds
outsl
fstpt
aad
jecxz
mov
inc
std
fwait
xchg
in
and
test
lret
popf
insb
adcb
mov
je,pn
adc
scas
xchg
arpl
dec
in
lret
leave
adc
in
ja
pop
pusha
cs
dec
inc
lea
lods
lods
movsb
ljmp
ds
cmp
mov
or
jae
out
xor
and
or
rcrb
pop
sub
xor
push
cld
inc
jmp
push
lock
cmc
mov
sbb
and
fwait
xor
xchg
int3
dec
cmp
pop
dec
adc
sahf
out
jae
cmpsb
insl
push
xchg
push
adc
inc
lds
aam
xchg
sbb
inc
sahf
push
cli
sub
repnz
pusha
cld
mov
aad
pop
stc
clc
cltd
decl
jmp
jb
and
jb
push
orb
xchg
dec
rcrl
in
mov
mov
loop
jmp
xchg
adc
cmp
mov
and
jmp
dec
cmpb
xchg
dec
or
adc
cmp
adc
nop
adc
mov
orb
push
push
imul
push
jecxz
dec
icebp
movsl
fimull
pop
das
les
lea
fs
outsb
jle
xor
lret
int3
or
jecxz
sub
in
mov
ss
jae
jg
addr16
insl
js
roll
push
xor
mov
mov
jo
mov
fidivs
loopne
imul
add
fisubrs
inc
pop
decb
mov
jecxz
push
cli
je
lahf
dec
cli
add
dec
mov
insb
xor
mov
xchg
jbe
scas
frstor
std
xor
xor
bound
rorb
and
jl
inc
sbb
int3
cmpl
push
cmp
inc
into
add
lcall
and
dec
sub
mov
fisttpl
dec
xor
ret
mov
dec
sub
pop
xchg
inc
fcmovnb
addl
inc
jge
test
mov
adc
cmpsb
mov
in
test
push
ljmp
mov
repz
cld
std
leave
and
rorb
popf
dec
fsubrl
pop
jo
push
in
push
notb
push
test
cli
and
aas
cmp
mov
pushf
adc
sub
sbb
popf
cmp
push
mov
imul
fbstp
in
test
hlt
and
push
mov
scas
ljmp
mov
mov
jnp
mov
sbb
in
ret
jno
insb
pop
push
pop
dec
fwait
ret
jae
and
cmp
sahf
jmp
push
and
loope
jge
jnp
jg
adc
in
cld
icebp
pop
outsl
mov
fstpt
push
div
push
aad
shl
out
jns
ss
push
jg
clc
push
and
rolb
jae
sbb
sub
push
add
mov
or
cmp
js
push
das
sbb
jp
cli
cmp
aas
add
pop
repz
cmp
adc
mov
pusha
int
sti
jnp
stos
jnp
or
mov
mov
push
cs
jl
stos
out
inc
or
in
jg
xor
mov
popf
xchg
jl
mov
mov
dec
push
enter
mov
jae
daa
or
loopne
sbb
and
mov
fbld
lds
lret
mov
xor
outsl
sbb
add
mov
notb
cltd
les
dec
popf
ficoml
jl
mov
icebp
xor
sbb
ss
test
dec
mov
repnz
pop
sub
mov
imul
pop
dec
mov
add
sub
mov
in
ret
adc
insb
adc
pop
mov
sbb
mov
jbe
mov
adc
pop
cmp
mov
cs
icebp
frstor
mov
mov
gs
cmpsb
dec
xchg
mov
fimuls
or
ds
pop
adc
int
je
jo,pn
sub
mov
sbb
fisttpll
fs
lret
nop
imul
cmpsl
out
ret
inc
lret
add
pop
pop
cltd
sbb
pop
inc
inc
sbb
lods
jge
nop
mov
mov
dec
or
xor
cs
mov
mov
push
icebp
aam
or
sub
push
and
int3
push
dec
into
fdivl
test
push
out
psubb
nop
sbb
dec
iret
and
adc
push
sbb
xchg
add
imul
stos
push
sbb
xorl
adc
daa
addr16
adc
push
add
das
sub
pusha
mov
addr16
lcall
push
outsb
inc
ret
sbb
adc
mov
rorb
sbb
push
sbb
xchg
or
mov
jmp
cmpl
cwtl
sbb
mov
fdivrl
lahf
jo
cmp
test
adc
mov
imul
cmc
jmp
pop
addr16
fildll
xor
pop
fmuls
and
imul
test
pop
sub
jne
mov
cld
mov
mov
incl
push
cmp
mov
xchg
mov
adc
or
jb
sbb
pusha
sub
cmp
or
test
movsb
aam
scas
dec
mov
jbe
pop
sub
mov
push
add
jle
push
fildl
xor
repnz
cld
mov
xor
mov
xor
int
pop
dec
cmp
lahf
shrl
enter
sbb
test
or
mov
and
sbb
push
add
mull
sti
pop
xor
or
popa
pop
aam
jecxz
call
jle
out
scas
push
fsubrl
jns
icebp
gs
cmp
sbb
shll
jmp
cmc
dec
idivl
out
out
or
xor
or
ljmp
scas
out
mov
dec
mov
pop
xor
arpl
dec
sbb
jg,pt
lret
scas
lcall
cmp
xor
mov
cmp
negb
lcall
mov
xlat
rol
adc
pushf
ljmp
push
lahf
jmp
sahf
mov
mov
outsl
mov
sub
mov
lock
push
out
jbe
cmp
mov
mov
xchg
cmp
mov
stos
pop
test
mov
adc
add
dec
outsl
or
xor
push
es
or
mov
neg
pusha
mov
add
pop
dec
jg
push
nop
adcl
nop
and
lret
cltd
inc
aam
dec
in
xchg
mov
pusha
mov
sbb
xchg
pop
aad
dec
addr16
sbb
stos
sbb
or
xor
leave
cmp
mov
test
mov
std
int3
xor
and
imul
fdivl
pop
xlat
call
int3
mov
sbb
cmp
sub
pop
jno
push
xchg
add
cmp
jmp
shll
shr
dec
pusha
jle
lods
cli
bnd
sahf
lods
push
loop
cs
test
push
mov
mov
in
adc
mov
cmpsl
mov
mov
dec
lea
lahf
pop
je
je
sbb
imul
push
repnz
xchg
push
lret
pop
xchg
lahf
push
add
loopne
jle
popf
das
out
in
pusha
stos
dec
bound
jns
repz
fwait
mov
cltd
push
ds
test
or
cli
adc
xchg
xacquire
ja
sbb
cmp
or
and
icebp
jge
jne
outsb
iret
test
cmp
dec
push
sbb
icebp
jnp
mov
icebp
jne
std
fmuls
inc
filds
pop
test
or
dec
mov
push
sbb
arpl
fs
sub
mov
popf
bsf
push
inc
mov
xor
xchg
mov
and
cmp
dec
into
movsl
jp
push
inc
cmp
add
xchg
mov
xlat
inc
cmc
imul
imul
filds
in
insl
xlat
ds
mov
scas
and
pop
sbb
cmp
mov
xchg
sub
fidivrl
les
mov
fisttpl
push
jge
lods
andb
push
out
test
mov
push
rcrb
jns,pt
imul
pop
dec
cmp
push
pop
pop
push
adc
dec
lock
sub
inc
ja
or
or
or
push
test
adcl
adc
xchg
out
and
fdivrl
mov
pop
icebp
inc
in
push
lret
pop
lret
jecxz
dec
mov
sbb
arpl
inc
jl
fmull
aad
push
add
dec
pop
mov
cmp
push
xchg
arpl
icebp
into
lcall
xchg
jmp
cmp
mov
cmp
sbb
lods
out
pop
mov
dec
push
fadds
xlat
push
add
lds
sub
jg
add
es
jo
mov
mov
mov
push
jecxz
adc
adc
loop
scas
sub
inc
and
jge
sbb
push
stos
rcll
dec
vpcmpgtd
sbb
iret
add
call
dec
add
xchg
pushf
and
shll
scas
adc
dec
aam
sbb
sbb
dec
push
les
jl
out
stc
push
test
movlps
aad
es
pop
repz
jno
repnz
dec
lods
xchg
mov
bound
fbstp
jle
jne
outsb
sbb
int
push
push
add
xchg
jmp
inc
imul
xor
adc
dec
sub
ret
push
push
in
lea
dec
psubusw
push
mov
cmc
repz
aaa
shll
mov
pop
lahf
sbb
add
movsl
mov
je
xchg
rcrb
cmp
nop
ljmp
xchg
test
ret
add
dec
pop
or
xchg
dec
sbb
xor
pop
xchg
mov
pushf
les
stc
aad
lods
pop
xchg
jb
add
xor
mov
cmp
out
fsubl
prefetchnta
mov
int
jg
push
sub
jbe
jno
dec
and
add
lods
sahf
xor
mov
das
stos
mov
push
xchg
cmp
push
add
xchg
lahf
fistl
push
rcrb
dec
inc
jg
jp
mov
cmp
gs
push
xchg
pusha
push
mov
out
addr16
dec
stos
mov
adcl
mov
sub
lret
mov
xchg
add
jp
testl
mov
test
pop
jmp
mov
daa
sub
jo
rolb
std
or
jnp
pop
dec
cmp
test
pop
mov
repz
cltd
cmc
mov
xor
mov
insl
xchg
flds
mov
cmp
xchg
mov
push
repz
sub
repnz
mov
sbbb
push
stc
cmp
out
std
jg
das
imul
pop
je
popa
dec
js
arpl
sbb
adc
xor
sbb
push
jl
xchg
jo
lods
xor
jge
dec
jl
repnz
stos
jae
stc
and
push
das
xor
outsb
mov
cwtl
dec
dec
int
popf
lret
jle
add
incb
insb
fwait
lret
sub
scas
pop
dec
clc
test
packsswb
inc
sub
adc
in
jmp
std
shld
sahf
pop
sbb
lahf
lret
jle
bound
out
jge
dec
pop
cmp
adc
push
out
jle
lock
pop
jle
pop
push
stos
push
test
or
lods
jmp
aas
negb
in
shll
fdivs
sub
jg
and
mov
mov
and
add
stos
push
sbb
div
out
xchg
and
sbb
fwait
mov
flds
mov
pop
dec
xor
test
inc
sub
add
mov
dec
dec
ret
xchg
ret
jae
push
mov
out
jno
jne
mov
gs
sbb
das
adc
or
sub
shll
lret
fsubrl
adc
dec
jmp
jnp
add
add
sub
shlb
pop
in
mov
out
testl
dec
pop
iret
push
push
repnz
in
mov
cmpl
andl
sub
leave
push
hlt
mov
arpl
push
mov
insb
xor
out
mov
adc
fnstcw
xchg
lahf
pushf
jg
or
daa
dec
shlb
nop
fwait
jae
incl
jecxz
in
pop
xor
enter
into
jnp
or
decb
lea
test
pop
lahf
mov
or
dec
jno
test
les
push
loope
in
inc
stos
jns
fimuls
and
ds
sahf
mov
sub
sub
daa
out
aad
xchg
nop
fstpl
leave
adc
outsl
adc
popa
scas
mov
dec
lcall
rorb
je
sub
sbb
and
lret
leave
mov
lcall
mov
and
lcall
push
push
sbb
in
mov
ret
das
aaa
fsub
pusha
lock
iret
jns
fs
jge
push
adc
jmp
adc
ret
inc
dec
in
in
mov
imul
clc
pop
xchg
jecxz
pop
icebp
out
aas
inc
jns
mov
ss
lret
mov
mov
int3
into
stc
push
mov
push
cmc
pop
call
imul
add
aad
and
stc
stos
int3
inc
mov
push
jge
dec
scas
insl
imul
pop
pop
shrb
std
mov
in
shlb
gs
les
lret
outsb
push
pushf
push
adcb
xor
pop
adc
popa
pusha
shll
jecxz
out
lcall
cmp
sahf
lret
lcall
mov
ja
cmp
push
dec
fsubrs
and
mov
mov
in
sahf
mov
pop
out
mov
inc
inc
sbb
insl
bndldx
out
out
dec
cli
mov
ret
mov
aaa
sbb
fmull
out
xor
pop
div
cmp
mov
sbb
jbe
cld
push
jp
push
mov
shll
arpl
addr16
and
or
or
hlt
xor
sbb
inc
cld
js
jecxz
lret
or
cmpsb
mov
push
or
cmpsb
and
js
lock
lret
cmp
cmpl
rclb
orb
orb
and
fisttpl
into
arpl
pop
cmp
cmpsb
add
pop
cltd
and
sub
addr16
mov
pop
fbld
pop
lock
out
repnz
aam
popa
iret
push
out
lahf
add
inc
mov
aad
adc
ret
sub
icebp
mov
shll
mov
cmpsl
sub
xchg
pushf
int3
push
xchg
inc
call
fbld
in
mov
std
daa
pop
enter
outsl
jae
mov
adc
pop
push
or
cmp
test
push
add
scas
gs
enter
cmp
add
mov
jl
cs
les
hlt
into
stos
int
insl
mov
mov
fcoml
mov
or
ror
shlb
sbb
js
pop
sbb
cmp
fistpl
cmpsl
push
mov
out
sub
shl
adc
cli
jg
sub
call
fisubl
xor
gs
es
or
mov
lret
int
outsb
je
push
mov
aam
pop
mov
lds
clc
outsl
mov
sub
pop
fdivs
sub
xchg
push
sbb
or
sarb
daa
add
addl
gs
movsb
shlb
in
cmc
pop
cli
hlt
mov
inc
outsb
movl
sbb
xor
insb
cmove
mov
mov
mov
pop
cmpsl
cmp
insb
ja
sub
addb
lcall
dec
scas
mov
cmp
nop
mov
adc
cmc
or
outsb
hlt
lcall
gs
push
xor
ret
mov
sbb
mov
adc
cmpsl
outsl
out
adc
sub
inc
loop
ret
mov
movsb
adc
mov
mov
loopne
push
imul
stos
jg
shlb
shrb
push
sbb
in
pop
lret
pop
mov
mov
sbb
cmp
loop
xlat
lock
xlat
push
sub
loop
cli
test
dec
fldl2t
mov
sub
inc
push
dec
sbbl
xor
negb
leave
outsb
test
cld
sbb
mov
outsl
add
aad
fnstsw
inc
mov
push
addr16
push
loop
test
cmp
insb
push
cmp
cmp
xchg
pushf
cmp
xorb
pusha
aas
and
mov
loopne
mov
mov
inc
pop
xor
add
into
dec
pop
arpl
mov
push
lcall
sub
popf
out
mov
js
add
fnstsw
inc
inc
mov
test
add
push
insb
daa
mov
cli
sub
sbb
cmc
addb
push
pop
sti
jp
push
add
ret
jecxz
arpl
lcall
add
iret
dec
fisttpll
sbb
out
xlat
ss
ficoml
mov
mov
lea
inc
adc
ret
or
dec
cwtl
mov
sbb
scas
mov
les
inc
adc
test
mov
mov
adc
dec
or
addr16
inc
es
inc
es
into
imul
mov
jmp
xchg
push
sub
ja
mov
scas
ret
pop
test
add
lods
fxch
jnp
sar
repz
imul
ja
mov
imul
es
je
adc
in
incl
aad
sub
or
adc
out
push
cmc
mov
inc
aad
je
fistpll
add
mov
mov
sub
lret
ret
jns
sbb
sub
stc
inc
ror
stos
ss
and
push
and
adc
sbb
or
insb
xor
dec
mov
jl
int
push
cmp
aad
pop
int
fstl
mov
or
ds
push
lahf
iret
xchg
dec
push
sbb
xchg
mov
scas
addb
mov
sti
jle
and
and
mov
or
mov
cli
js
into
cmp
lahf
pop
int3
jmp
ret
fisubs
xor
scas
add
loope
sbb
cmp
mov
fcompp
jns
repnz
mov
fisttps
pop
xor
cmpsb
lret
add
sbb
push
dec
pushf
dec
sbb
add
xchg
dec
pushf
movb
push
loope
xor
sbbl
add
fisttpl
ja
lret
cli
insl
mov
insb
fsubp
movsb
scas
mov
imul
add
das
pop
lock
jae
inc
das
mov
sbb
out
in
mov
call
enter
add
dec
bnd
push
xchg
rcrb
js
mov
sub
mov
xchg
xchg
mov
lahf
sub
outsl
subl
push
mov
xchg
adc
insl
in
jecxz
xor
in
into
testl
bound
jbe
dec
test
sub
mov
subb
cmpsb
imul
outsl
mov
mov
dec
or
pusha
sbb
rorl
jo
out
daa
or
xchg
and
in
lds
sarb
fs
call
das
push
into
xor
pop
mul
mov
lock
cmpb
icebp
je
gs
jle
ja
push
jmp
add
ret
add
dec
mov
cmp
add
sub
adc
xor
cmp
sbb
xchg
or
lret
sbb
pop
jmp
cmp
cmp
mov
cmp
or
popf
sub
sbb
jl
lods
mov
and
xadd
inc
or
ret
dec
sbb
or
insb
lds
jb
add
xor
mov
mov
push
pop
add
call
int3
inc
mov
in
iret
push
jecxz
lahf
jge
pop
idivb
inc
aam
dec
mov
dec
pusha
test
int
lods
jge
test
inc
or
jnp
addr16
inc
mov
sub
or
inc
inc
sub
ja
inc
add
jb
mov
pop
imul
inc
divb
dec
sti
xor
fwait
mov
sti
fcoms
inc
subl
lcall
mov
ja
stc
xor
and
cld
xor
push
push
mov
mov
or
shll
shl
mov
jae
lock
inc
in
repz
cwtl
fsts
sub
inc
aaa
sarb
int
out
and
dec
sbb
scas
fsubs
jbe
shlb
aaa
fs
xor
jl
sahf
mov
ret
push
lret
popa
mov
dec
or
lock
jecxz
inc
outsl
cmp
pushf
mov
rcrl
sbb
outsb
out
into
sub
in
push
jns
jb
or
outsl
out
xlat
test
cmpsb
push
aaa
xchg
mov
xchg
inc
pop
cli
int
jecxz
jo
lea
xchg
ss
jo
cltd
lret
jl
jmp
jae
repz
adc
pop
cmp
sbb
in
xchg
adc
push
cld
subb
push
lahf
adc
push
push
hlt
aam
xchg
loop
sub
cmpsl
stc
mov
add
jb
add
mov
mov
adc
ret
subl
mov
adc
pop
in
aam
mov
xlat
icebp
sbb
bound
dec
xlat
int3
xor
push
cmp
mov
dec
sbb
jmp
aad
scas
dec
jmp
mov
es
mov
flds
arpl
lcall
mov
lock
hlt
adc
lret
mov
sarl
xor
outsl
cli
xor
cld
les
xor
pushf
jae
rep
xchg
xor
fs
xchg
fnstcw
icebp
aaa
movsl
jb
mov
js
pop
outsb
lret
push
xchg
mov
mov
mov
or
loop
sub
or
pop
pop
test
or
push
insb
ror
adc
jo
or
lcall
mov
inc
bound
les
loop
cmp
cld
in
lods
mov
out
mov
rolb
in
dec
in
lods
push
xchg
shr
jl
pop
xor
rcr
notb
or
mov
lock
and
and
mov
mov
mov
adc
cs
mov
dec
in
push
ret
push
stos
cmp
outsb
gs
test
dec
stos
lods
xor
stc
fwait
mov
cld
sub
pop
cmc
sti
xchg
sub
je
dec
test
stos
pop
jne
cmp
fwait
mov
sti
push
lretw
hlt
add
pusha
adc
int
cmp
lret
pop
les
or
rcrl
or
fidivrl
lea
fidivl
int3
or
xchg
daa
lock
ret
negl
sub
xchg
ret
enter
std
push
and
bound
add
or
aam
cmp
jnp
mov
sub
out
sub
add
push
cmp
aas
sub
and
fcmovnb
fldenv
lock
arpl
fisttpl
sbb
lahf
aas
adc
inc
insl
pop
lock
imul
add
ret
nop
sub
test
push
enter
int3
inc
inc
repnz
cld
sub
mov
rclb
dec
loope
push
push
lock
aaa
roll
fninit
pusha
nop
xchg
mov
movsb
xchg
and
fsubrs
mov
sub
adc
enter
int3
mov
sbb
lock
sahf
addl
jne
test
or
dec
add
jp
aas
pop
std
add
pop
insl
dec
push
xor
push
in
in
xchg
mov
cmpsl
jns
add
js
fsubs
inc
das
inc
into
flds
fbld
jne
pop
cli
xorb
fisttps
add
fcmovnu
lret
add
es
inc
sbb
jbe
aaa
sub
repz
mov
arpl
or
incl
pop
and
pop
popa
inc
inc
loop
push
outsb
xchg
sti
test
divb
std
add
js
and
ds
out
rorb
mov
push
and
xchg
adc
repz
sahf
cmc
sub
dec
pop
out
aaa
je
subb
jno
pop
and
dec
mov
inc
pusha
imul
pop
ja
gs
fmull
fndisi(8087
and
ljmp
adc
inc
sub
das
hlt
in
xor
cwtl
insl
and
xor
push
mov
xor
insl
in
into
push
insb
jecxz
and
and
sbb
out
xor
imul
imul
pop
xchg
in
cmp
xor
stos
into
popf
je
push
jmp
and
in
outsl
subl
inc
stos
sub
in
test
ss
or
jge
or
mov
addl
outsb
sahf
testb
sub
shlb
sub
lret
pop
dec
in
sbb
add
mov
push
repz
pop
fcoms
fwait
dec
rolb
in
cltd
fstp
sub
cs
in
and
push
jbe
lcall
dec
dec
in
cmp
jl
orb
ss
je
fidivrl
lret
fldcw
inc
jb
cli
out
js
add
imul
cwtl
mov
add
int3
push
inc
adc
cltd
leave
pusha
fsubrs
clc
dec
add
mov
dec
pushf
in
mov
insb
push
inc
push
je
lret
inc
cltd
fmulp
aad
sti
iret
movsl
sbb
xchg
push
xchg
cmp
mov
std
lods
mov
xchg
imul
push
sub
leave
insl
cltd
pop
xor
scas
jne
inc
xor
sahf
cwtl
inc
lcall
and
mov
pop
mov
pop
xchg
repz
icebp
outsb
scas
jle
hlt
and
cmp
and
pop
in
add
mov
push
add
sbb
push
mov
cltd
push
mov
push
push
xchg
mov
popa
xchg
outsb
test
dec
inc
out
adc
mov
sbb
fwait
clc
and
add
hlt
daa
in
mov
jmp
dec
and
lea
lock
cltd
loop
mov
lods
jbe
pop
in
testl
mov
push
imul
sbb
mov
faddl
push
loopne
push
inc
fs
subb
arpl
or
dec
loopne
pop
repz
push
jge
push
fwait
int
rol
push
dec
sbb
jle
lods
pop
and
jp
and
ja
pop
pop
outsl
js
xchg
dec
mov
cwtl
push
popa
imul
ret
or
dec
repz
ss
out
lods
xor
push
mov
inc
sub
cmp
mov
mov
out
sub
data16
sahf
pushf
aaa
dec
dec
jg
mov
dec
mov
jns
std
outsl
cmp
inc
rorb
outsl
mov
mov
mov
inc
fcoml
add
or
xchg
in
jg
cmp
pop
add
push
pop
sbb
pop
int
out
add
sub
ljmp
shlb
xchg
xchg
sahf
loopne
cmc
ret
cmp
mov
adc
sbb
xor
cmp
mov
inc
xor
adc
mov
leave
inc
mov
dec
fsubrp
ret
outsb
int3
push
dec
xchg
add
pop
les
xchg
mov
std
stos
gs
imul
adc
rcl
push
push
cmp
stos
push
in
add
dec
icebp
in
or
mov
lret
test
mov
jecxz
cmp
clc
cmpsb
pop
lret
aad
mov
or
fwait
mov
jne
adc
in
mov
insl
push
or
testb
inc
call
jmp
pop
inc
in
push
adc
and
push
jl
mov
mov
mov
xor
pop
adc
rcrl
imul
and
int3
jl
add
stos
cmp
lahf
das
mov
xchg
or
orl
jb
cmpsl
fs
in
shll
push
aad
pop
pop
xor
xlat
popf
and
push
ret
jns
nop
push
lock
jb
mov
add
mov
push
shrl
in
xchg
adc
imul
jae
popf
out
push
sbb
mov
cmp
js
sbb
cwtl
clc
cli
mov
pop
or
pop
xchg
dec
mov
xor
insl
lret
or
jnp
ds
push
pop
inc
mov
mov
clc
test
mov
loope
mov
cmp
dec
notl
lea
test
mov
pushf
jmp
adc
mov
in
sbb
fst
fistps
lea
outsl
xchg
jl
xor
sahf
sbb
add
in
push
out
stos
rclb
sbb
sti
imul
out
xor
push
stc
push
clc
fs
or
daa
inc
scas
mov
xor
je
dec
sbb
jns
xor
xchg
sub
pop
cmp
mov
fs
mov
popf
loopne
pop
lock
iretw
inc
mov
pop
test
adc
sub
inc
fldt
clc
and
jb
or
cmp
fwait
repnz
sub
shlb
fstpt
mov
inc
push
and
clc
sti
addr16
sarb
js
in
lods
loopne
adc
add
daa
fisubl
cmp
adc
lahf
pop
loop
int
outsl
push
inc
out
stos
sahf
jg
jge
dec
in
lcall
data16
mov
mov
push
push
imul
je
mov
shll
mov
insb
sbb
dec
je
jle
scas
test
fdivl
addr16
ljmp
lods
sub
fldenv
push
lcall
inc
push
iret
aad
scas
mov
test
push
sahf
loope
popa
lea
bound
mov
call
or
add
inc
sub
bound
jecxz
jns
inc
xchg
popf
stos
adc
dec
maskmovq
testl
pop
push
push
loop
xchg
lea
cmp
push
push
jne
push
xor
adc
loopne
inc
cmp
mov
out
push
inc
add
clc
fcmovnu
push
mov
or
adc
fstpl
cmp
icebp
xchg
jb
ss
mov
cmp
ja
sbb
fwait
xchg
or
cmp
inc
sbb
stos
cli
jo
jg
jnp
sbb
sbb
ljmp
sbb
movsb
fldenv
xor
mov
loopne
test
dec
popl
cmp
inc
les
lods
ja
adc
xchg
pop
pushf
lods
inc
sbb
sar
in
lods
dec
js
aaa
bnd
loop
push
sub
xadd
rolb
loop
dec
cltd
mov
fxtract
xorl
xchg
iret
inc
je
scas
jne
sarb
stos
mov
adc
mov
xor
je
cltd
frstor
les
xor
ljmp
pop
fwait
dec
xor
and
fnstsw
icebp
push
mov
dec
je
or
shll
jae
add
stos
sbb
push
insb
push
in
scas
lea
in
xchg
xor
mov
xor
cmp
movsb
sub
mov
sbb
rorl
mov
adc
sti
gs
sub
lret
leave
inc
adc
xchg
mov
scas
push
add
xor
aas
ds
je
xor
jle
or
mov
std
cli
jae
frstor
fnstenv
inc
aam
pop
sub
push
insl
fists
adc
movsl
repz
push
xor
dec
cli
daa
mov
adc
std
inc
mov
fcomp
cmpsb
and
js
jns
xor
idivw
mov
bound
daa
mov
pop
mov
or
inc
dec
mov
sbb
add
mov
das
adc
jbe
inc
or
or
sub
fildll
cmpsl
lock
pop
lret
stc
cmp
lods
fldt
mov
fisttpll
mov
jae
mov
inc
mov
jl
jo
xor
scas
lcall
cmp
lcall
outsb
dec
push
jp
push
daa
mov
idivl
js
inc
out
cmp
mov
fdiv
xchg
ljmp
xchg
mov
cmp
jnp
mov
cmpsb
mov
sbb
cmp
xlat
xchg
sbb
stos
lds
adc
int3
mov
lods
xchg
cwtl
push
leave
stos
inc
test
icebp
call
mov
mov
das
adc
or
adcb
aas
in
xchg
inc
or
out
sub
je
addr16
popa
and
pop
mov
popf
or
dec
leave
shrb
test
std
dec
rorl
pop
and
call
jb
cmc
push
test
pop
xor
and
in
cmp
or
sahf
leave
mov
aam
pop
das
dec
mov
add
outsb
adc
shr
mov
dec
jmp
lcall
jne
mov
inc
stos
ficomps
es
test
jle
xchg
mov
or
adc
push
subb
dec
jne
ljmp
adc
lock
shll
adc
imul
je
pop
mov
repz
inc
call
in
mov
pop
push
fcoml
ljmp
jecxz
dec
aaa
call
dec
push
xlat
or
lods
mov
js
xchg
mov
mov
pop
outsb
push
push
or
test
pop
repnz
stos
cmp
enter
fisttps
outsb
lds
sbb
push
mov
enter
in
clc
insl
xor
pop
or
stos
js
pop
nop
ljmp
adc
mov
cmp
jo
jns
mov
sbb
in
pusha
sub
xchg
lea
mov
mov
jae
push
fiadds
jae
aad
and
mov
stos
ss
js
pop
sub
js
and
cmp
scas
mov
mov
jecxz
dec
mov
sub
test
nop
inc
out
int3
enter
shll
cmp
xchg
sub
popa
jae
jo
cmp
sarb
mov
fdivrs
pop
nop
ret
sub
sbb
sub
mov
or
jecxz
out
lret
mov
aam
int3
repz
mov
sahf
fwait
inc
dec
fs
lahf
cmp
jp
leave
iret
out
jg
or
test
add
add
sbb
fwait
add
lods
aaa
or
push
sbb
in
or
jle
xor
div
inc
sub
inc
dec
fcoml
ds
push
loope
add
popa
popf
adc
xchg
js
add
mov
lea
inc
ret
sub
enter
loope
mov
mov
mov
sarl
push
jbe
jae
cmc
xchg
or
and
adc
mov
movsb
sub
jo
popa
push
ss
fistpl
jbe
cli
jmp
mov
ftst
shrb
insl
ljmp
dec
aad
xchg
call
and
jb
out
shrb
pop
jecxz
cmp
or
dec
mov
fidivl
or
cld
xor
lods
aad
insb
ss
testl
fs
lods
gs
mov
mov
test
loope
mov
push
in
xchg
pushf
jno
addl
add
fdivl
mov
and
inc
imul
xor
push
xor
psrad
out
out
mov
sub
mov
push
fstpt
bound
in
in
je
mov
jmp
in
ljmp
idiv
mov
pop
mov
or
outsl
stos
repnz
mov
aam
or
push
jbe
pop
sub
lock
rcrl
jmp
ret
sbb
sti
cmp
mov
mov
jo
jl
push
mov
add
mov
push
lds
jb
ret
mov
dec
jae
xchg
cmp
pop
aas
add
pop
ret
movsb
es
xchg
jae
push
clc
insb
imul
ss
cmp
inc
and
mov
enter
sub
dec
xor
scas
test
or
pop
test
adc
clc
lock
cmp
sbb
and
pop
andl
mov
iret
iret
pusha
int3
xor
mov
pop
loopne
sub
mov
leave
mov
mov
xchg
xchg
sbb
sub
ret
mov
rolb
hlt
mov
shlb
xchg
mov
sub
cmp
dec
jmp
adc
stc
mov
jbe
jns
inc
mov
or
sub
mov
jo
push
xchg
insb
loop
or
jnp
stos
leave
mov
mov
mov
inc
fwait
push
or
sub
aad
jecxz
lds
mov
jmp
push
insl
rorl
andl
orb
dec
jmp
fcmovnb
jmp
cmp
jne
out
mov
pop
mov
mov
mov
push
pop
or
jl
inc
popa
insb
inc
cmp
lret
cld
sbb
jnp
inc
inc
jae
dec
lods
inc
mov
xlat
jb
xor
sub
pop
push
inc
mov
out
sub
gs
fnsave
jge
push
shl
inc
movsl
xlat
sub
aas
sahf
xor
cmpsb
leave
add
add
sbb
lahf
stos
sbb
scas
fcompp
aad
xor
test
push
shrl
mov
add
mov
and
pusha
mov
out
add
mov
mov
pop
fidivrl
adc
cmp
add
mov
call
call
loop
and
mov
movsb
stos
sbb
xor
push
add
mov
xchg
dec
rcrb
icebp
repz
push
and
xor
gs
in
stos
loope
push
jne
dec
xchg
xchg
jp
cmp
loope
jl
repz
mov
pop
xchg
jg
out
loope
jle
xor
cmpsb
insl
in
push
dec
mov
cld
insw
loop
int3
sbb
shrl
mov
push
sbb
mov
or
data16
cltd
rep
ret
adc
add
xor
mov
lds
jp
or
fcomps
push
into
loop
inc
push
cs
push
stos
push
jg
out
mov
mov
fisubrs
loop
mov
and
shrl
in
inc
and
jp
in
push
mov
inc
mov
lahf
xchg
lahf
movsl
sub
aaa
imul
xchg
nop
in
rolb
fisubl
lahf
sub
lods
inc
inc
fidivl
push
popl
gs
bound
notb
lods
push
clc
push
scas
sub
push
inc
ljmp
fs
add
pop
int
cmpl
jmp
bound
mov
xchg
hlt
jmp
stos
sbb
adc
insl
popf
mov
mov
les
mov
lcall
add
sarb
outsl
outsb
shr
push
mov
das
cmp
push
pop
xchg
adc
push
xchg
jge
mov
icebp
push
idivb
jnp
popa
mov
pop
xchg
push
sbb
nop
mov
xchg
pop
mov
lods
imul
sbb
jle
pusha
lret
repz
push
adc
cmpsb
cmp
nop
lock
ss
das
test
cmp
push
fwait
arpl
icebp
sub
add
lcall
sbb
dec
mov
inc
xchg
stos
cs
lahf
fldcw
insl
push
iret
cmpsb
push
add
cmp
shrb
sub
arpl
in
cltd
enter
jo
mov
jae
mov
fldcw
mov
add
and
or
push
sub
mov
pop
scas
adc
sbb
jbe
lock
fldcw
je
inc
popf
jns
jmp
jae
inc
es
lcall
pushf
mov
xor
mov
push
pandn
add
push
adc
or
daa
mov
pop
push
into
jno
out
je
aas
stos
push
jmp
cmp
cmc
cli
dec
addl
rcll
bound
jb
cmp
cmp
lds
jl
out
or
sarl
into
roll
faddl
lods
leave
mov
scas
cmc
push
sub
stc
inc
push
cmp
cmp
and
cmp
inc
push
mov
inc
sbb
mov
cltd
sub
push
in
lret
cmpsl
cmp
nop
jb
sbb
cld
jge
int3
adc
cmp
out
sbb
mov
mov
mov
dec
xchg
pop
mov
movsb
aam
jg
adc
je
test
mov
popf
mov
push
add
mov
movsl
test
mov
xchg
push
mov
xchg
inc
and
pop
push
lret
and
xchg
pop
dec
mov
mov
cmc
rclb
adc
mov
jmp
sbb
bnd
nop
rol
cmp
and
ret
test
cli
scas
rcrl
stos
adc
fmull
add
imul
or
inc
scas
std
in
jmp
adc
inc
adc
mov
aas
daa
hlt
sbbb
pop
xchg
ret
mov
inc
das
scas
adc
dec
insl
int3
dec
push
int
cmc
aam
pushf
or
data16
je
xchg
in
frstor
cmc
push
mov
xchg
inc
stc
add
scas
add
xchg
mov
sarb
outsb
pop
inc
out
push
and
leave
icebp
ret
add
pop
push
mov
and
arpl
out
into
lods
mov
outsl
pop
mov
dec
sahf
es
rcrb
fisttpll
lcall
mov
loop
stc
jg
push
xchg
push
xchg
fists
scas
lods
sbb
xchg
mov
sub
negb
xchg
ret
jno
push
or
lahf
shrl
sub
mov
mov
out
aam
pop
push
sub
nop
flds
fstpt
cmpsb
jns
fimull
jae
ljmp
imulb
ljmp
jne
cld
pop
les
sbb
adc
mov
mov
aam
push
mov
fcoms
cmp
clc
sub
lret
push
loope
sti
in
xchg
push
fldenv
adc
xor
xor
xor
cmp
pushf
push
xchg
es
dec
inc
adc
out
push
insl
jne
stos
ja
dec
fistps
xchg
fdivl
popf
lds
out
fisttps
fcmove
ror
and
bound
pop
shlb
adc
mov
outsl
loopne
push
push
cwtl
jnp
dec
dec
jb
addr16
inc
mov
cmp
xchg
in
scas
cmc
mov
sub
mov
dec
xchg
loop
xrelease
and
sub
push
out
and
xchg
mov
icebp
cmpsl
out
popa
adc
push
scas
ret
lret
in
in
cmpsl
pop
dec
std
andb
sbb
es
sbb
lods
inc
int
pop
in
fcoms
sub
sbb
push
mov
inc
arpl
stc
ret
sbb
xchg
popa
outsl
shlb
jno
sbb
aam
gs
lods
jle
xchg
test
push
inc
movaps
jmp
sbb
ss
je
jne
loopne
fbstp
fsts
data16
gs
dec
fdivrs
mov
ret
dec
aam
icebp
repnz
add
std
pop
or
movsb
or
pushf
push
push
mov
mov
jge
jl
jne
fsub
ss
mov
lret
sub
pushl
pop
xor
aam
rcrb
cmpsl
pop
aaa
cmp
movsl
or
push
mov
mov
test
xor
lock
mov
xorl
inc
pop
add
push
lret
cmp
pop
dec
push
cmp
mov
cwtl
gs
mov
out
pop
push
rorl
or
fmuls
jmp
mov
mov
pop
adc
pop
and
cmp
xor
mov
das
pusha
std
pushf
mov
lret
push
pop
cs
cmp
sub
mov
out
arpl
cmp
mov
xor
lods
mov
mov
inc
imul
xchg
dec
sbb
push
in
lds
in
jg
scas
sub
mov
mov
pop
cmp
test
mov
pop
cs
sbb
rorl
js
outsl
xchg
imul
xor
mov
sbb
ljmp
sbb
push
enter
sbb
lods
push
cmc
lock
insl
gs
mov
mov
cwtl
pop
fldt
cmp
stc
data16
loopne
in
clc
bound
sbb
imul
cmc
mov
iret
lods
xor
sarl
push
mov
xchg
pusha
jecxz
int
popa
ret
ss
mov
dec
insb
rorl
mov
int
and
lods
pop
insl
fiaddl
xchg
out
push
stos
inc
aaa
outsl
ljmp
out
pop
mov
daa
pop
add
arpl
sub
push
dec
xor
and
inc
cmc
test
xchg
js
je
outsl
ss
xchg
data16
stos
mov
or
ret
les
inc
movsb
jb
xor
stos
icebp
xchg
in
call
stos
cmp
mov
push
dec
ja
xchg
es
push
fisttpl
push
aad
inc
cmc
push
and
pushf
cmc
xor
xor
mov
fsubl
mov
jg
inc
mov
jg
or
shlb
cmpl
movsl
sub
ficompl
xchg
repz
xor
jns
comiss
cwtl
xchg
add
mov
sbb
outsl
xor
pop
inc
xor
ljmp
adc
aaa
ret
daa
das
sub
pop
rcrl
daa
push
cmp
cmp
push
adc
add
mov
addr16
xor
addr16
adc
out
in
lock
enter
hlt
mov
test
mov
mov
out
cmpsl
test
jp
dec
jne
imul
arpl
sbb
push
push
pop
cmp
jp
leave
leave
jnp
dec
orb
add
movsb
fs
call
mov
orb
dec
mov
adc
xor
inc
xchg
xchg
clc
rcll
pop
negb
icebp
cmp
lea
mov
add
inc
dec
fs
xlat
addr16
and
pushl
int
in
loop
fisubs
lret
stos
rcll
sub
adc
xchg
push
pop
lret
mov
add
aad
fcmovb
fisttpll
xchg
in
shrl
mov
dec
xchg
xchg
sarb
fimull
adc
inc
stos
popf
add
ret
outsb
dec
movsl
pushf
push
jae
and
xorl
pop
das
push
jmp
jo
cli
or
imul
inc
xorl
lret
jmp
shrb
sbb
xlat
push
ret
jbe
outsl
stos
sub
icebp
fadds
loopne
add
add
pmulhuw
shll
dec
mov
imul
push
inc
faddp
ret
clc
push
mov
dec
cmpl
xor
and
aaa
inc
mov
mov
xor
inc
push
xchg
and
xchg
pusha
lcall
mov
push
or
inc
mov
push
fldl
and
sub
mov
sub
push
fwait
cmp
stc
jmp
cmc
ret
push
cs
sbb
loopne
or
loopne
and
xchg
jecxz
adc
aam
pop
mov
sub
aad
addps
fstps
bound
cmp
shlb
dec
sub
aad
loopne
add
jb
pop
in
mov
mov
outsb
cmpsl
xor
inc
dec
decb
and
inc
cli
fistpl
xchg
xor
in
or
rorl
jecxz
and
fwait
call
outsl
aaa
pop
cs
sahf
jmp
bound
outsl
mov
je
sub
push
push
subl
fsts
cmp
pusha
add
mov
pusha
clc
lret
or
or
and
mov
enter
sbb
jmp
pusha
jae
stc
adc
dec
push
ficomps
movhps
jmp
cmp
xor
sbb
pushl
lods
loope
ret
nop
std
sbb
sub
push
and
dec
sbb
cmp
xlat
aam
sub
add
and
in
mov
dec
xchg
add
pop
xchg
inc
inc
mov
stos
jp
push
inc
dec
subl
adc
test
mov
add
std
adc
mov
jecxz
in
insl
leave
or
ret
mov
insl
sahf
mov
push
xchg
jle
insb
lret
cltd
dec
mov
iret
pop
xor
inc
sub
adc
stos
lret
mov
pop
shr
stos
and
jnp
xor
enter
jmp
add
inc
jp
mov
adc
mov
addb
test
jae
push
lahf
arpl
sbb
and
and
add
sub
sbb
into
lock
negl
add
dec
call
add
fwait
cmc
pop
rcr
xchg
mov
or
into
push
out
mov
dec
mov
xor
add
adc
xchg
repz
nop
or
sbb
aad
loop
add
out
inc
mov
clc
inc
insb
mov
jle
inc
push
aam
lret
mov
xor
xor
loop
andb
and
add
push
jne
sub
out
inc
data16
std
push
adc
add
daa
and
jmp
lods
xchg
xchg
lock
push
inc
adc
imul
cltd
cmpsb
jmp
xchg
cmp
cmpsl
inc
sub
adc
leave
inc
aas
out
and
or
and
jmp
imul
xlat
fcmovu
jb
lret
ds
or
jle
push
fstpl
jmp
sbb
dec
call
adc
test
adc
xchg
test
divb
and
repz
dec
sub
hlt
or
aaa
xchg
xchg
sub
mov
cltd
icebp
mov
pop
mov
nop
push
sbb
or
cmpsl
js
in
lahf
loop
and
insl
scas
mov
into
mov
pushf
cmp
mov
mov
jecxz
and
push
leave
and
mov
add
push
push
cmp
push
inc
ret
sbb
push
sub
je
filds
rcrl
sub
not
cltd
push
fidivl
pop
loop
arpl
sbb
sbb
mov
repz
dec
xchg
push
inc
add
pop
push
cmpsl
jle
fmulp
xor
inc
jnp
jae
jb
test
inc
pop
ja
xlat
pop
stc
or
inc
test
or
xor
les
stos
sbb
push
pop
vdivsd
bound
jl
mov
cmp
inc
addr16
cmp
or
fmuls
iret
cmp
or
lret
mov
ret
cmp
sbb
aad
test
cmpsb
or
xor
push
imul
mov
jecxz
pop
das
scas
add
jno
std
je
adc
mov
push
dec
clc
fadds
mov
xchg
mov
into
xchg
pushf
fbstp
or
fldt
jns
mov
sub
out
aam
test
cli
lret
outsb
mov
and
xchg
mov
adc
dec
add
mov
pop
add
in
out
es
add
add
cmp
mov
loopne
jg
xchg
pusha
lret
aaa
xor
pop
sub
pop
ljmp
sbb
insl
sti
jno
cmpsb
subl
inc
loopne
add
cltd
xchg
sub
mov
ror
jmp
fwait
cld
test
pop
jbe
mov
repnz
idiv
fisubrs
push
fs
push
inc
jl
push
rorl
xchg
shlb
sub
push
cwtl
pop
fiaddl
and
mov
sub
xor
ret
sbb
sub
sbb
push
popa
xchg
repz
xor
bound
and
jmp
add
cld
mov
iret
dec
mov
ss
cmpsl
push
xchg
sti
leave
sub
testb
fcoms
cwtl
dec
pop
add
es
and
fldenv
adc
int3
lret
pop
out
xchg
pop
or
add
flds
cmc
js
sarb
scas
cli
loop
insb
mov
mov
add
sarb
inc
xchg
bound
xchg
inc
imul
orb
adc
imul
xor
add
xor
adc
fnsave
jp
shlb
pop
sub
loope
mov
xchg
sub
mov
xchg
fsts
mov
repz
gs
mov
push
ja
std
and
inc
dec
inc
int
mov
or
popf
and
add
xor
xchg
mov
pop
fcomps
adc
mov
push
mov
dec
pop
jo
fcmovb
fwait
test
mov
inc
popf
mov
xchg
xchg
enter
pushf
lret
ror
adc
mov
sahf
mov
and
jne
jb
xchg
jo
mov
jae
pop
pop
mov
pop
out
dec
std
or
ljmp
stc
ss
dec
out
pop
rolb
bnd
push
notl
lahf
cmp
in
sub
xchg
pop
pop
ja
mov
outsb
sub
adc
out
mov
sub
cmp
mov
shrl
adc
xchg
cmpsb
popf
stos
rclb
out
sahf
dec
rcr
in
cmpsl
lret
ss
mov
jne
enter
outsl
rclb
fildll
xchg
addb
cld
lds
bound
movsl
cs
ljmp
fisttpl
pop
sar
add
shrl
lods
push
add
jecxz
inc
movsl
les
inc
jne
push
daa
jle
out
idivb
pop
loope
jns
notl
arpl
divb
hlt
ja
push
clc
xor
inc
bound
dec
xor
es
or
out
add
cwtl
movsb
loope
dec
mov
mov
sub
repz
sbb
lods
xor
imul
mov
das
out
lea
mov
and
lea
fsubrs
cli
sub
movsb
mov
mov
mov
pop
sub
inc
jbe
sbb
mov
mov
push
xchg
ljmp
jb
cli
and
in
mov
adc
outsl
add
hlt
xchg
dec
addb
xchg
adc
add
jns
pop
mov
pop
adc
aad
add
sub
arpl
push
push
xor
subl
cmp
jp
mov
mov
pop
push
fcmovnu
mov
pop
adc
lods
icebp
inc
data16
gs
push
test
out
ret
mov
lahf
mov
cmpsl
and
jge
loope
sahf
testl
mov
fmul
rcrl
inc
es
mov
push
pop
push
lahf
pop
int3
out
ficomps
in
adc
adc
pop
call
jo
cmp
sub
xchg
inc
push
push
mov
sbb
sub
jae
lds
mov
jbe,pn
inc
notl
movsl
inc
divb
add
divb
shlb
mov
mov
stos
inc
xor
jecxz
repz
clc
in
push
add
xchg
or
pusha
outsl
and
sti
push
sub
fcmovu
pop
adc
dec
in
cmp
icebp
jbe
sub
mov
imul
xchg
adc
shll
jb
and
push
nop
sti
das
invd
out
addr16
lret
dec
and
pop
sbb
xor
mov
push
testl
sub
lods
mov
pop
sub
xor
jmp
dec
imul
lea
push
mov
cmp
jbe
mov
fldt
imul
nop
push
test
xchg
mov
out
mov
cwtl
mulb
enter
jb
sub
out
outsb
cmc
stos
ja
mov
repz
fidivl
in
inc
lock
cmc
cli
fcompl
sbb
sahf
push
lret
out
gs
inc
sub
fs
adc
add
or
fs
lcall
xor
xorl
mov
fists
sbb
pushf
add
scas
jno
pop
int3
mov
xchg
xor
or
clc
push
sub
pop
mov
nop
scas
xchg
jecxz
jns
and
add
jno
loopne
pop
jno
cli
dec
inc
mov
dec
mov
int3
cmp
inc
outsl
cmp
cld
fnstenv
lock
mov
xor
popa
int3
decb
push
xor
push
and
cmpsb
inc
and
jns
je
jbe
imul
out
xor
add
xchg
or
cld
cltd
stc
and
dec
inc
or
sub
cmp
mov
outsb
xchg
shlb
movsl
mov
lahf
jl
arpl
xor
fdivl
add
push
frstor
inc
dec
pop
cmp
mov
lods
cmp
bound
leave
xchg
fstpl
and
push
rcrl
inc
and
mov
lahf
icebp
cmp
cmp
jp
jg
push
int3
jnp
adc
inc
xor
outsl
shl
and
movsl
aad
fnstenv
sub
movsl
mov
xchg
adc
jb
lds
sub
pop
call
add
ret
cmp
fsts
cmp
inc
or
pop
divl
mov
sbb
push
in
mov
fcom
sarb
mov
xor
movsb
mov
adc
lcall
adc
sahf
shl
mov
pushf
sub
pop
subps
xor
sbb
int
hlt
dec
mov
cwtl
jg
iret
dec
sbb
sbb
mov
lea
test
jg
rclb
shl
ss
cmp
inc
jmp
adc
push
stos
push
scas
subl
pop
push
sbb
int3
xchg
repz
test
std
ret
push
outsb
push
lret
popf
mov
mov
icebp
out
cmp
xor
rcrl
cmc
xor
cmp
pop
inc
addb
lds
sbb
add
mov
jecxz
fisttpll
dec
inc
push
fs
mov
in
cmp
jecxz
jl
add
cs
fldcw
cmp
adcl
inc
jmp
adc
popa
jl
mov
scas
fildll
pop
jle
mov
fsubrl
lret
adc
add
xor
imul
push
and
adc
mov
mov
add
stos
mov
cmp
jecxz
in
inc
dec
mov
mov
sbb
jae
fxch
add
in
add
jno
mov
mov
lcall
add
mov
xor
test
or
xor
mov
jnp
orb
or
loope
ljmp
xor
stos
leave
pop
add
orb
rorl
andb
lods
inc
lods
mov
sbbb
in
insb
insl
and
push
sub
arpl
xlat
jg
sti
mov
cmpsb
out
rorb
mov
testl
push
popa
lods
mov
loopne
jns
jo
inc
push
pop
mov
push
repnz
jecxz
ljmp
enter
push
sbb
push
stc
pop
cwtl
xchg
ss
lock
lcall
lds
xchg
shll
test
mov
scas
pop
adc
or
push
fnstsw
pop
mov
dec
ret
cmp
xor
insl
leave
shl
xchg
or
mov
xor
and
adc
sub
addb
stos
imul
cmp
loopne
pop
test
lret
shll
jne
cmp
fst
shl
pop
dec
aam
jl
loop
lds
repnz
notb
inc
cmp
fcmovb
inc
bound
mov
and
in
pop
add
bound
push
cmp
lcall
lret
insb
sahf
pop
int3
xor
adc
stc
das
or
mov
jge
add
add
cmp
shr
cmp
mov
rcrb
into
add
or
pop
loopne
or
mov
xor
sar
push
icebp
pop
sub
lret
dec
outsb
adc
out
les
pop
xchg
cmpsl
cmpsb
pop
xchg
push
out
pop
int
xchg
or
testb
popf
test
xchg
loopne
pop
or
xor
push
xor
xor
in
ret
arpl
adcb
inc
lret
popa
testb
std
inc
add
cmp
cmp
sbb
jge
add
lea
testl
stos
and
mov
dec
add
sbb
repnz
pop
test
xor
pop
icebp
cmpsb
es
dec
push
adc
xchg
jne
push
incb
push
movsb
outsl
mov
out
xor
jmp
aas
stos
mov
sbb
test
inc
mov
xor
cmp
roll
xor
addr16
cltd
fwait
jnp
int3
fnsave
pop
in
mov
and
jne
or
add
cld
mov
sbb
stos
cmp
jmp
stc
test
loope
loope
jno
push
cmp
xchg
cmp
mov
negb
mul
and
inc
dec
push
fadds
in
add
scas
xchg
dec
pop
xor
mov
rcrb
adc
outsb
test
pop
sahf
cmp
sarl
stc
sub
out
jecxz
pop
ds
movsl
lods
dec
test
pop
popf
loopne
flds
jecxz
out
or
mov
int3
shlb
pop
ds
lds
add
cwtl
fistps
sub
lds
lret
push
out
lock
mov
fildl
ss
inc
leave
and
shll
dec
jne
adc
push
sub
push
cmp
aaa
pop
outsb
stc
mov
adc
fs
nop
fisttps
xchg
cmc
es
fisttpll
cmp
inc
les
fwait
imull
cmpb
and
jbe
mov
mov
jae
mov
mov
dec
cmp
push
pop
jae
xchg
and
fwait
mov
fnstcw
shrl
sub
dec
fistpll
adc
inc
push
ret
int3
pop
lret
sub
mov
mov
and
in
in
int3
int3
rorl
adc
popf
xor
fsub
dec
xchg
mov
shll
cmp
mov
data16
test
cmp
jne
inc
push
jo
add
mov
sahf
pop
fcoml
dec
mov
mov
xlat
xchg
pop
mov
sub
xorl
daa
pop
popf
pop
xor
mov
scas
adc
mov
xchg
cwtl
loop
adc
adc
test
jne
lods
and
mov
dec
clc
into
mov
or
adc
aaa
jb
in
lea
push
shll
call
or
shrl
insl
cltd
pop
ficoms
fwait
or
stos
mov
fisubrs
push
mov
dec
test
push
mov
cmp
hlt
int3
mov
test
nop
outsl
push
punpcklwd
aad
xorb
arpl
and
cmpsl
aad
add
les
mov
adc
xor
adc
push
add
sub
mov
lcall
and
adc
pop
xchg
clc
sbb
popa
add
scas
dec
jg
daa
pop
mov
aad
leave
mov
jae
mov
aad
outsb
das
jnp
jl
xor
lds
cmpsl
mov
pop
test
loop
lret
addr16
stc
cmp
mov
movsb
mov
or
popf
repz
shlb
jge
pop
sahf
xchg
cmp
lahf
mov
iret
mov
out
inc
mov
int3
add
les
add
leave
rcrb
push
mov
and
outsb
dec
inc
arpl
pusha
sbb
and
mov
jmp
loope
scas
popa
xlat
popf
push
pop
mov
add
inc
mov
aaa
mov
lock
jg
jno
inc
mov
lods
add
es
je
jl
push
leave
iret
add
inc
inc
out
lret
sti
icebp
cmp
adc
cwtl
fstl
shll
loop
cmp
call
and
xlat
sbb
jmp
sbb
les
jl
sbb
fisubs
pop
sbb
aaa
cmp
idiv
cmc
mov
shrl
mov
pop
clc
jae
push
fcmovne
mov
mov
inc
scas
daa
hlt
cmp
insb
out
push
pop
jae
sahf
in
xchg
and
sub
imul
xor
xchg
mov
arpl
inc
jg
mov
cltd
mov
xchg
mov
and
add
pop
hlt
aas
jl
ja
in
jns
xchg
fsts
ljmp
in
adc
add
push
fmull
jne
inc
call
sti
pop
jae
and
inc
rorb
lods
out
iret
mov
jp
out
and
pop
shrb
out
mov
lret
fsubrs
stos
or
aas
push
cwtl
shlb
or
push
mov
sarl
push
cmp
int3
jmp
loopne
es
aaa
and
pushf
sub
outsl
lcall
iret
inc
test
mov
cmp
aam
jbe
push
orb
mov
repnz
adc
pop
clc
dec
mov
push
lods
test
ret
cmp
repnz
inc
shrb
and
aas
push
add
or
mov
xor
sahf
outsl
mov
pusha
xchg
mov
add
jge
dec
pusha
outsl
lock
mov
mov
adc
jecxz
dec
add
ss
mov
sbb
out
test
mov
daa
inc
mov
push
out
xlat
aad
jl
push
inc
out
pop
mov
movsl
jnp
fcompl
ficompl
rclb
push
mov
mov
and
mov
mov
jecxz
sar
adc
jne
jne
sbbl
bound
cmp
mov
and
lods
stos
sbb
cmp
jmp
cmp
adc
lods
add
lahf
sub
adc
pop
mov
adc
inc
bound
pushf
jae
add
add
lcall
cmp
mov
dec
xor
fdivl
mov
test
ret
xor
iret
sbb
incb
fs
imul
jge
mov
or
mov
fidivs
cmp
scas
jge
lcall
jge
shll
pop
sub
cmp
inc
lock
lahf
pop
sbb
push
sub
jg
push
mov
stos
mov
cltd
push
adc
pop
ds
lahf
cmpb
pop
dec
inc
inc
sub
xchg
stos
imul
xchg
je
xor
iret
adc
out
std
scas
inc
and
lcall
dec
push
out
inc
pop
push
push
filds
or
movsb
aaa
dec
sarl
lahf
dec
add
jp
adcb
and
sahf
out
daa
rcrb
xchg
jno
xchg
mov
xchg
call
push
lcall
mov
adc
nop
add
iret
loopne
jle
ss
xor
push
mov
popa
cli
pop
cmp
leave
jbe
sti
arpl
ja
adc
imul
xchg
lock
jbe
cmpsl
sbbl
add
pop
roll
bound
sbb
jl
push
shl
in
pop
aam
xor
pusha
cs
push
mov
js
shlb
mov
pusha
jne
lcall
movsl
out
add
negl
scas
or
dec
jle
xor
and
or
in
adc
aaa
mov
ss
out
cmp
les
xchg
xchg
fwait
jge
adc
mov
fucom
and
idivl
xrelease
xchg
stos
jbe
and
jge
mov
add
sub
repnz
setg
mov
cltd
rorb
pand
xchg
pop
push
pop
out
jno
stos
jne
and
std
pop
push
iret
scas
repz
nop
xchg
cmpxchg
rclb
outsb
cmp
jo
jne
lret
subl
inc
ret
sbb
xor
dec
jno
push
pusha
or
add
imul
outsl
test
mov
and
enter
sbb
mov
sti
pushf
gs
sbb
sbb
std
jne
xchg
xchg
and
pop
sbb
daa
adc
jb
scas
or
or
fwait
or
test
stos
fcmovnb
jmp
subb
jp
push
into
or
es
call
loope
pop
fcmovbe
xor
push
sbb
cli
mov
repz
test
sbb
loopew
ficomps
pop
mov
push
inc
dec
sbb
jb
xlat
jg
adc
les
xchg
push
mov
test
sahf
mov
and
pusha
dec
sahf
pop
stos
and
mov
test
dec
pop
dec
dec
jne
movl
adc
mov
pop
dec
mov
jle
xor
jne
inc
jnp
in
cwtl
sti
cmp
pusha
mov
scas
movsb
ds
adc
jl
cmp
jmp
dec
test
and
cmp
xor
lds
out
rcr
pusha
dec
rcrb
lret
js
sbb
push
jnp
test
int3
aad
scas
xor
mov
jl
add
pop
mov
fnstcw
imul
stc
xchg
pop
or
or
jle
adcl
outsb
lea
or
mov
inc
sbb
xor
jno
jbe
out
into
sub
js
sbb
jo
cmp
jl
mov
stc
cwtl
adc
cwtl
cmc
cmpsb
scas
add
push
lret
loope
or
xorb
mov
inc
pop
add
mov
mov
loope
shll
mov
insb
loop
cmp
dec
mov
das
hlt
in
sub
fiadds
ljmp
adc
ficoms
push
add
xchg
andb
scas
arpl
ljmp
popa
pushf
push
xor
inc
stos
movsl
int
test
push
loope
xchg
inc
dec
mov
cld
cli
insb
lods
cmp
inc
bound
sahf
fwait
cmp
mov
mov
cld
dec
push
inc
add
and
inc
mov
lods
adc
push
xchg
xor
in
mov
filds
andl
mov
mov
call
pmulhw
movsl
out
repnz
mov
inc
cmp
pushf
jb
loope
push
es
inc
inc
aad
cmpsb
ficoml
sbb
cmp
outsb
jno
xor
pop
jnp
mov
sbb
insl
mov
mov
or
push
jno
push
dec
mov
movsl
pop
test
sbbb
adc
mov
cmp
cmp
repnz
pop
jb
jns
mov
fiadds
mov
push
cld
adc
push
stos
and
mov
fsub
inc
call
jns
or
jl
rcll
out
fsubrl
pop
iret
repz
mov
mov
mov
add
mov
mov
dec
rclb
jl
idivl
jnp
popa
testl
push
sbb
cmp
sbb
imul
lods
cwtl
push
xchg
push
and
shrb
test
lods
js
mov
push
xchg
fidivl
sbb
ds
leave
sbb
push
inc
sbb
lods
mov
lock
xchg
pop
lahf
leave
jno
icebp
fsubrs
inc
cmc
sbb
arpl
mov
mov
dec
aaa
jle
test
mov
push
cld
xchg
adc
ja
mov
inc
mov
popl
roll
adc
adc
cmp
loop
push
xor
sub
mov
pop
or
dec
outsl
std
test
ret
roll
icebp
xchg
sbbl
aam
lods
sub
xchg
mov
cmc
std
ljmp
filds
outsb
mov
dec
cmc
mov
mov
mov
or
cmp
dec
sub
clc
sbb
pop
fs
repnz
dec
add
repz
test
mov
test
dec
stos
cmpsl
std
fdivr
test
jg
push
int
or
xchg
leave
dec
stos
daa
jl
xchg
popa
in
loop
xchg
jo
lret
rcll
jmp
cli
int
imul
sub
sub
nop
xor
sub
xor
adc
cmc
stos
int
mov
loopne
aas
fiaddl
loope
xor
mov
js
push
lds
lds
and
sub
xchg
fldcw
gs
inc
pushf
dec
out
jne
mov
jle
mov
cmpsb
lods
mov
fstl
pusha
into
pusha
push
push
mov
push
jle
pusha
add
loopne
xor
add
imul
add
xor
negl
inc
dec
jne
and
imul
push
cld
mov
scas
cmpsl
out
add
inc
sub
scas
dec
fneni(8087
mov
sub
loop
and
push
cmp
push
and
push
and
cmpsb
fcmovu
sub
or
jge
jno
data16
sbb
loopne
fs
dec
addr16
movsl
lods
jnp
push
jl
mov
pop
add
jl
popl
lret
or
mov
dec
pop
fisubl
add
psubusw
and
aam
dec
ljmp
dec
add
fildl
xor
es
in
aas
sbb
pop
xor
pop
ljmp
mov
fbld
push
or
into
out
loope
mov
xchg
xor
and
cmp
mov
sbb
fstpt
xchg
mov
adc
fdivp
std
xchg
hlt
andb
sbb
in
bound
xchg
mov
addr16
mov
xchg
mov
inc
push
stc
cmp
jbe
hlt
cmp
into
jns
je
xor
frstor
jno
stc
daa
inc
mov
mov
pop
insb
andl
dec
inc
rcll
movsb
cld
sub
mov
fcmovb
or
mov
dec
out
lds
push
xor
cmp
in
xor
sub
in
out
jnp
repz
cmp
cmp
and
faddl
xchg
jge
mov
sti
dec
xchg
les
xor
fistpl
test
xor
jmp
xchg
std
bound
into
ljmp
cmp
and
push
adc
rclb
cmp
loope
in
jg
adc
mov
mov
mov
daa
fnclex
imul
pop
sub
adc
movl
mov
cmp
xchg
bound
inc
test
mov
shl
daa
pop
inc
stos
jp
add
decb
addr16
push
pop
jg
aaa
mov
dec
mov
jbe
and
addr16
mov
push
adc
jbe
mov
pop
push
jns
sbb
push
aam
pusha
push
inc
inc
mov
cli
push
aas
inc
daa
fwait
dec
pop
jp
fcom
and
lds
mov
in
sbb
test
pop
pop
jge
es
popf
push
pop
sbb
adc
loop
adcb
push
adc
jmp
outsb
xchg
cs
xchg
xor
ds
scas
aam
and
mov
fidivrs
sbb
xor
cmpsl
xchg
or
int
dec
je
in
arpl
mov
mov
in
mov
aas
push
push
adc
push
addr16
push
mov
int
sub
ret
or
push
frstor
pop
push
push
pop
push
cmp
mul
and
repz
xchg
fcoml
pop
divb
fisubrs
insb
and
pop
or
and
stos
fdivrp
lret
sar
lret
mov
in
sti
negl
xchg
fcomp
adc
fs
fs
fidivrl
cli
mov
or
cmp
adc
cmp
pushf
pop
mov
faddl
lret
or
sub
dec
mov
out
fcmove
xchg
imul
stc
cmp
inc
movb
adc
pop
sub
cs
jns
in
mov
cmc
mov
gs
jns
adc
movsb
pushf
mov
cltd
and
pop
inc
fs
out
inc
and
lret
xor
jb
xchg
vxorpd
inc
dec
popf
jne
stos
bound
std
leave
mov
cmp
dec
inc
std
fistpl
push
mov
pusha
test
jl
and
xlat
out
lahf
daa
lea
mov
or
xchg
cmpsb
xchg
repz
push
ret
ret
adc
scas
fmulp
sbb
sub
and
cmp
pop
and
ds
cmpsl
bound
iret
sbb
repz
out
shrb
arpl
mov
js
mov
shll
mov
or
push
repnz
arpl
push
inc
out
or
xor
xor
jl
mov
jae
or
push
xchg
sbb
xchg
xchg
sbb
mov
lahf
inc
jge
filds
inc
mov
jecxz
outsl
push
addr16
pop
imul
jne
sub
adc
mov
rcl
and
xor
sbb
lcall
outsb
jmp
outsl
pop
and
sahf
hlt
add
push
pop
aaa
push
sub
fldt
fsts
addl
pop
cmpsb
and
out
mov
test
xchg
mov
out
sbb
ljmp
outsl
bndldx
lret
ret
repz
shll
es
and
inc
or
or
into
adc
mov
mov
and
pop
add
rclb
in
enter
lcall
dec
inc
sarl
jb
jle
leave
aaa
push
adc
nop
pop
cltd
or
bound
and
and
pop
scas
fwait
movb
mov
movsb
or
icebp
xor
lret
inc
aam
mov
gs
adc
and
xor
je
into
push
daa
clc
bound
mov
push
push
jns
daa
mov
lahf
or
fxam
ficompl
mov
mov
mov
lret
sub
das
addr16
sbb
lcall
fidivrs
inc
das
cmp
pop
lds
nop
push
in
and
lret
jg
sahf
dec
or
jno
and
mov
jmp
test
mov
mov
and
xchg
push
sub
lods
mov
mul
ret
and
xor
dec
out
stos
dec
push
sub
inc
inc
imul
mov
jmp
cld
or
mov
testb
add
pop
pop
push
jae
test
xchg
jb
mov
add
jg
add
mov
popa
pop
shr
test
fisubrl
inc
sub
cmp
lahf
in
or
repz
push
and
in
mov
bound
mov
ja
fldl
sub
mov
fs
jle
aam
xchg
cwtl
adc
in
pushf
inc
popa
inc
push
xchg
das
aam
adc
inc
push
sub
loop
test
leave
clc
or
xor
jne
popa
ljmp
cltd
sub
es
sbb
jle
cmp
dec
out
push
popa
sub
inc
mov
xchg
xchg
mov
adc
adc
add
je
mov
pop
mov
sarb
test
mov
sbb
std
inc
out
jnp
and
push
pop
push
jecxz
shr
in
ret
daa
cli
outsb
push
gs
out
stc
mov
pop
sub
push
frstor
test
es
sahf
out
xor
test
fxch
add
int3
test
enter
mov
inc
aad
sbb
adc
in
or
call
pop
in
push
pushf
leave
inc
cmp
mov
xchg
mov
lds
lods
mov
xchg
fdiv
xchg
inc
or
xchg
mov
mov
push
fs
inc
push
push
jg
out
sbb
dec
aad
mov
dec
fdivrl
aaa
dec
dec
stos
lret
jp
pop
aam
dec
xor
push
inc
dec
shlb
cli
jecxz
leave
ljmp
das
hlt
out
mov
fwait
rcl
inc
jb
or
iret
ret
sub
mov
mov
pop
or
insb
fldcw
scas
lret
cmpsb
inc
loope
lfs
out
jae
test
imul
outsb
xor
pop
cmc
out
out
cs
push
mov
loopne
cmpsb
push
adc
mov
pop
and
int
sub
loop
sahf
in
or
loope
xchg
outsb
mov
jns
pop
pop
xor
mov
cld
paddw
push
mov
imul
mov
sahf
mov
loopne
les
icebp
cmp
mov
push
dec
jne
mov
fnstenv
retw
inc
shrl
mov
aam
test
jmp
fsubl
shll
scas
or
cld
test
daa
movsb
xchg
xchg
sub
sub
push
mov
fiadds
aaa
push
not
popa
jbe
xor
mov
cmc
fbld
out
add
dec
sub
pop
jg
and
or
mov
dec
cmpl
mov
sub
or
in
push
dec
or
inc
insl
imul
outsb
push
stos
test
aad
add
dec
xchg
inc
xlat
es
in
push
js
into
les
sub
dec
les
out
lahf
jmp
mov
in
popf
mov
pop
xor
adc
pop
cmp
mov
xchg
inc
cmc
test
xchg
stos
mov
pop
ds
popf
or
push
and
dec
inc
aam
pop
or
add
clc
jno
add
mov
out
lcall
loop
arpl
push
stos
push
xchg
inc
jb
das
push
adc
mov
fistps
mov
push
jne
nop
inc
mov
mov
ljmp
popa
xchg
aaa
dec
aas
xlat
sti
push
loopne
into
std
jne
arpl
xchg
fs
jl
les
pop
mov
popa
dec
sbb
xchg
push
sbb
mov
push
ss
lea
pop
add
mov
icebp
mov
rolb
lret
sti
leave
and
xchg
insl
mov
enter
stos
test
fsubrl
js
cmc
fs
sti
pushf
and
dec
lds
in
inc
mov
repnz
test
sbb
sahf
push
ret
fsub
loope,pt
outsb
lahf
pop
jo
add
fidivrs
add
fisttps
or
mov
cld
roll
loop
inc
mov
cmp
stos
ljmp
xchg
loopne
dec
fs
pop
jp
loopne
pop
cmp
inc
ljmp
xchg
popa
push
jno
push
cmp
in
fdivr
sub
sahf
inc
mov
cmp
push
les
sbb
outsb
pop
add
mov
adc
orps
xor
dec
sub
inc
dec
loopne
xchg
xor
nop
mov
out
mov
fldl
sbb
jbe
push
jbe
fldl
push
sub
mov
cs
lds
popf
test
add
jge
cmpsb
push
jmp
icebp
sub
push
aam
mov
mov
mov
sub
or
jl
enter
jno
pop
mov
push
and
sub
incl
fcoml
xor
adc
or
in
mov
and
and
ret
xor
inc
push
xor
outsl
test
testl
sbb
out
clc
shll
jmp
testb
dec
push
cli
inc
mov
jnp
mov
or
aas
or
es
push
jge
push
popa
mov
xadd
xchg
shll
dec
mov
mov
xor
xchg
cs
xchg
lock
div
sbbb
xor
pop
push
insb
mov
or
scas
in
sub
mov
popa
fstpl
aas
jns
mov
jo
push
and
dec
push
xchg
fstpt
fisttps
xor
add
int3
xchg
mov
xchg
cmp
addr16
inc
cmp
lret
shl
adc
pop
push
jns
pushf
xor
mov
inc
int3
test
clc
pop
jp
xor
adcl
mov
mov
jmp
pop
and
mov
leave
out
adc
daa
jb
je
add
arpl
out
lcall
dec
push
xlat
in
test
and
jp
mov
in
in
lcall
inc
das
add
push
push
xchg
mov
or
adc
xor
and
loopne
lahf
daa
hlt
push
jle
shrl
scas
test
jns
xor
test
cwtl
jns
mov
mov
mov
ss
fiadds
ljmp
pop
cmp
xchg
es
lret
inc
dec
in
cmp
xchg
xor
jmp
add
cli
dec
mov
jns
fisttpll
pop
outsl
push
out
dec
fnstcw
adc
mov
jmp
outsb
ficompl
add
push
loopne
xor
cs
outsl
xor
in
scas
or
mov
sub
xor
ficoms
nop
shlb
nop
xchg
aaa
popa
pusha
and
gs
scas
ss
pop
js
ss
mov
pop
sbb
insb
xchg
jae
jl
daa
push
mov
js
mov
iret
scas
xor
xchg
mov
cmc
or
repz
cmp
addr16
or
pop
sti
je
adc
dec
mov
mov
insl
imul
cmpsb
xchg
ja
mov
scas
loopne
enter
loope
pop
jbe
inc
mov
les
sti
imul
shlb
pop
xor
ds
jmp
cwtl
fwait
push
std
clc
call
rcll
std
pushf
ret
mov
jmp
loope
sub
add
in
push
out
inc
mov
xchg
fidivs
ficoml
xor
imulb
jnp
pop
and
sub
mov
cmp
aam
ds
dec
xchg
out
jmp
sbb
mov
pop
repz
aas
inc
xor
and
inc
xchg
pop
and
jp
rcrb
mov
cld
js
daa
cs
fdiv
push
push
jae
pop
jns
xchg
pop
mov
es
jno
adc
sub
jmp
sub
inc
jl
jmp
imul
jmp
das
lea
frstor
insl
add
xchg
lcall
xor
xchg
sub
imul
adcb
setbe
xor
mov
aam
pop
mov
cmpb
dec
xor
jb
mov
testl
into
mov
xlat
pop
into
imul
pop
xor
pop
sbb
pop
shl
sub
jmp
push
scas
push
inc
jecxz
ret
inc
repz
lods
leave
ret
push
jbe
cmpsb
ja
shr
stos
enter
lret
mov
enter
lret
mov
xchg
mov
sbb
mov
cmp
jnp
leave
xor
call
jnp
sub
push
ret
and
push
gs
xchg
aam
pop
xor
idivb
or
push
push
lds
mov
out
ljmp
add
dec
jl
jb
das
cmp
int3
xor
push
cmpsl
sub
dec
jp
leave
loopne
shll
in
loope
jae
pop
pusha
jecxz
mov
imul
sub
test
pop
xchg
and
inc
add
out
iret
pop
sbb
xchg
adc
in
cmp
xchg
xchg
xor
out
adc
push
xor
movsb
movsl
or
test
sub
mov
xor
jle
xlat
sub
test
sub
imul
sti
loop
nop
cmpsl
out
clc
stos
ficomps
sbbb
fcmovbe
jmp
push
xor
push
incl
aad
cld
jecxz
out
call
inc
test
push
and
pop
lcall
nop
and
mov
loop
mov
fs
lret
xor
adc
pop
mov
fwait
out
cmp
dec
xor
addr16
mov
cmp
inc
xor
inc
jns
lock
int3
ljmp
sub
jns
pop
fistl
fiadds
xlat
xchg
push
cmp
pop
and
xchg
test
mov
mov
and
push
pop
xchg
mov
int3
out
psubusb
pop
sub
outsb
sub
pop
pop
cmp
sub
sub
xor
and
out
imul
mov
jnp
inc
pop
push
pop
mov
and
out
imul
push
popa
jno
mov
imul
pop
inc
fbstp
lcall
inc
xchg
pop
sub
mov
scas
push
jno
push
or
call
xchg
insl
and
int
add
jl
inc
pop
gs
pop
sbb
mov
aam
test
inc
test
ss
orb
mov
cmc
adc
fistpl
push
bound
mov
sub
repnz
ror
cmp
push
pop
and
stc
jmp
sti
rcr
cmp
subl
jns
push
or
and
and
insl
inc
arpl
in
mov
push
not
or
insb
and
xchg
lock
xchg
sub
mov
push
data16
fsincos
ror
adc
std
push
seto
into
movsl
mov
push
adc
out
or
mov
pop
test
out
repnz
add
ficoms
jns
mov
sub
pop
push
mov
decl
pusha
das
push
stc
mov
addr16
inc
xor
jp
loope
cmpsl
aad
or
mov
xor
xor
decl
cwtl
imul
rcl
xor
in
dec
test
mov
push
xchg
scas
scas
lds
lods
add
lahf
pop
lret
push
dec
iret
lods
arpl
push
mov
inc
sub
es
jbe
hlt
lock
or
roll
xchg
jbe
out
jl
or
jge
pop
add
and
ja
pop
dec
lcall
mov
roll
or
cmpsb
push
loopne
fsubrs
lahf
call
jnp
push
push
mov
pop
dec
popf
cmp
into
ss
std
shrb
pop
in
iret
sbb
and
addl
lret
in
jbe
iret
das
pop
in
pop
fmull
or
or
sub
push
pop
jno
ja
push
pop
mov
lret
rcr
stc
mov
mov
jge
mov
cmp
or
or
xor
aaa
inc
loopne
adc
out
mov
movsb
adc
fmuls
dec
sahf
mov
rcrb
dec
fnstcw
outsl
shll
inc
pop
subb
fucomp
call
pop
push
adc
cmp
push
add
xchg
inc
test
pop
out
xor
add
sub
push
push
repz
mov
cs
es
and
and
and
jbe
xor
mov
adc
das
dec
adc
aad
test
mov
push
jg
daa
icebp
fcoms
sbb
pushf
gs
push
test
mov
adc
ret
mov
add
jno
sub
dec
call
stos
xlat
lcall
dec
sub
pop
gs
or
jge
jnp
push
scas
mov
push
inc
and
jecxz
das
addl
dec
pushf
mov
mov
ja
add
outsl
js
mov
loope
xchg
jns
mov
aam
xchg
jle
imul
sarb
push
inc
jmp
bound
fstps
cmp
lcall
sub
sbb
loopne
out
mov
push
rcr
not
fcmovne
jl
mov
negb
sub
pop
push
imul
cli
pop
inc
push
les
adc
and
push
xlat
mov
mov
pop
xchg
add
lds
clc
dec
lahf
xor
cmp
mov
mov
sbb
dec
mov
adc
fnstsw
fs
jno
in
addl
lock
scas
cli
jmp
outsb
popf
fidivrs
sub
add
cltd
xchg
std
and
in
or
fbld
dec
aas
lahf
repnz
lods
add
and
mov
pop
aas
add
and
fnstsw
repz
jle
fists
pop
inc
test
add
pop
mov
dec
aaa
sarl
jno
out
jae
aaa
adc
jnp
in
pushf
cmc
cmp
and
sbb
xchg
bound
cld
xchg
mov
orl
push
iret
fcmovnu
and
push
xchg
enter
adc
lcall
mov
adc
mov
stc
cmp
inc
pop
lds
push
fisubrs
sahf
fst
sub
enter
mov
in
aas
loope
imul
fimuls
cmp
mov
lods
loopne
pushf
mov
jae
xorl
sbb
jae
mov
jp
test
cmpsb
pop
xor
cmp
hlt
and
cmp
ds
sbb
call
push
pop
roll
test
enter
popl
out
cmp
cmc
and
mov
sub
mov
fs
int
pop
hlt
xchg
subl
or
cmp
jmp
cmc
sbb
bound
add
push
mov
stc
in
mov
pop
test
push
ret
adc
rorl
call
mov
into
pop
mov
xchg
stos
and
cmp
lods
add
fistpl
test
je
popa
enter
rdtsc
lods
cmpsb
fcmovnbe
repnz
inc
push
sbb
daa
jne
cmp
daa
imul
cmp
xchg
jecxz
cwtl
mov
lahf
es
inc
and
lahf
mov
inc
lea
cmp
adc
decb
jns
icebp
rolb
insl
xchg
lret
sarb
addr16
jb
in
scas
inc
movsl
cmpsb
shr
icebp
inc
xchg
xchg
mov
repz
fbstp
gs
lcall
mov
in
popa
pusha
lret
cmp
aad
ja
cmpl
cli
mov
mov
repz
popf
std
lods
jb
int3
mov
add
mov
leave
loope
mov
jg
mov
popa
adc
bound
jl
xchg
jg
popa
dec
lock
ljmp
add
popa
mov
dec
cwtl
fiaddl
lds
mov
sub
daa
in
pop
cmp
push
and
icebp
daa
adc
cmp
sbb
or
lret
outsl
push
nop
sub
pop
ss
addr16
scas
xlat
mov
cmp
decb
rol
xchg
jmp
jg
gs
sarb
insl
loopne
sub
sub
jmp
leave
imul
js
xor
ret
inc
cmp
fstpt
das
enter
jne
push
pop
faddl
mov
std
stc
repnz
xor
insl
cmp
movsl
into
mov
jecxz
sti
jp
cmp
andnps
adcl
lods
mov
popf
pop
push
sbb
pop
xchg
jecxz
xchg
cmp
and
xor
dec
sahf
jnp
push
inc
gs
sbb
jmp
sarl
adc
cltd
arpl
sahf
cvtps2pd
pop
stos
js
rorl
psubq
shlb
enter
jmp
push
add
mov
and
xor
cmp
mov
dec
pusha
imul
adc
sub
in
sub
lods
mov
pop
ljmp
lcall
jl
in
fidivrs
xor
mov
xchg
out
pop
fnstsw
dec
in
jmp
inc
lahf
vpaddusb
mov
test
insl
jle
mov
cltd
test
hlt
in
sub
divl
ret
ret
cmp
xlat
jne
lret
add
mov
push
hlt
cmpsb
into
lock
int
fidivs
xchg
cmp
stos
fs
xchg
fcoml
or
or
or
dec
inc
das
dec
insl
sub
jp
in
inc
into
mov
push
push
and
dec
int
in
adc
xchg
mov
xchg
sub
popf
pop
push
enter
pop
lock
faddp
outsl
sbbb
hlt
ja
and
fwait
sahf
cltd
add
and
hlt
test
cmp
mov
push
cmp
xchg
into
jg
daa
xchg
clc
test
daa
out
add
inc
or
lods
inc
pop
xor
push
enter
jmp
and
or
daa
xor
fdivr
push
cli
dec
fldcw
cmp
fisttpl
or
pushf
jge
push
test
dec
cmp
jge
fstl
or
xchg
adc
xchg
into
mov
adc
mov
aad
mov
loop
fldenv
lds
mov
and
jo
hlt
push
mov
cld
shrb
push
icebp
xor
lods
cmp
xchg
scas
stos
mov
lds
jne
fidivrs
gs
sbb
hlt
cmp
mov
stc
mov
test
cmc
mov
jg
push
lcall
fisttpll
pushf
mov
shl
pusha
mov
jg
jecxz
mov
sbb
adc
popf
fidivs
push
jo
push
mov
cli
push
sarl
mov
stos
sbb
popa
stc
push
js
sub
int
fisubl
mov
xchg
pop
xchg
pop
cltd
adc
mov
xor
push
cmpsl
sarb
je
or
fs
pusha
ss
clc
mov
and
push
and
cmpsb
cmpsl
faddl
jge
mov
xchg
cmpsl
push
xor
call
cs
enter
int
cmp
loop
mov
xor
mov
sbb
jg
push
push
push
jl
call
sub
or
sbb
fs
jge
xor
add
sub
mov
insl
lods
fistpll
das
daa
iret
pushf
or
test
mov
addl
push
cmpsl
mov
mov
ret
movsl
or
arpl
xor
cltd
xchg
lret
popf
or
int
mov
mov
pop
cmp
jmp
scas
adc
jle
fldcw
sar
lret
mov
lock
push
push
and
jle
lcall
adc
int
inc
outsl
jbe
mov
adc
push
cmp
lods
xor
shl
mov
sbb
enter
push
filds
pop
mov
jne
xor
arpl
xor
fucomi
cmp
mov
faddp
mov
in
lret
sbb
cmp
jecxz
faddl
shll
mov
or
leave
mov
cmp
fxch
xchg
aam
sbb
test
or
pop
jg
lahf
push
test
popf
xchg
scas
les
dec
push
inc
lods
push
cmc
std
adc
add
mov
aam
mov
sub
repz
sbb
icebp
mov
jnp
xor
add
and
je
xchg
pop
aad
outsl
arpl
sbb
mov
out
adc
repz
adc
xor
mov
aam
push
out
jg
out
mov
pop
dec
sarl
pop
sbb
loop
cs
hlt
mov
aaa
popf
sub
mov
cmp
imul
xchg
dec
call
leave
mov
xor
cmp
pop
ja
popf
xlat
mov
ljmp
or
xchg
in
cmpsl
sahf
mov
enter
inc
sahf
jo
push
aaa
mov
adc
es
mov
xor
out
loopne
sub
rclb
insl
lea
aas
inc
fidivl
dec
and
movsl
out
jns
dec
push
and
sub
add
mov
fninit
sbb
pop
dec
jb
inc
ja
les
cmpsb
mov
pusha
adc
insb
out
adc
pop
insb
push
sub
out
xchg
ljmp
or
mov
cmp
push
ss
lods
imul
push
dec
and
repz
mov
mov
lcall
je
xorb
jno
push
es
lcall
push
aad
stos
iret
mov
test
push
xor
jp
out
mov
mov
cmp
arpl
jle
add
and
xchg
jge
dec
popf
jbe
push
and
cmp
test
imul
cmp
sbb
hlt
dec
dec
inc
je
xchg
mov
adc
cmpb
mov
sub
push
pop
sarl
hlt
popa
das
inc
lcall
ret
stc
insb
inc
sub
repz
ss
imul
aad
out
adc
mov
dec
mov
fcmove
cmp
mov
loope
inc
inc
jle
inc
cmp
movsl
shll
fsubrl
ficompl
jns
inc
pop
xor
ret
and
sbb
xchg
sub
pop
cli
jo
inc
mov
lods
fadd
cli
call
stc
dec
loop
xor
out
mov
popa
pusha
fnsetpm(287
cmp
and
cmp
icebp
stc
lahf
sbbl
and
clc
orl
jge
mov
inc
or
fwait
test
xor
dec
neg
enter
das
mov
xchg
stc
shll
mov
mov
mov
jge
das
mov
lods
aam
mov
pusha
out
jle
xor
subl
fld
push
mov
stos
int
and
sbbl
icebp
add
jae
out
cmc
push
jle
jo
fs
or
pop
jo
pop
push
aas
inc
dec
mov
or
test
pop
mov
pop
adc
int3
cli
jg
gs
scas
adc
sub
int3
repz
out
sbb
lret
aad
mov
dec
cli
loope
faddl
jns
pop
leave
pop
and
mov
cmpsb
xor
push
fisttpl
into
dec
jns
mov
icebp
cld
push
stc
rcrl
jns
out
das
sub
adc
das
mov
cmp
jl
fld
in
lret
mov
mov
daa
lods
push
add
sahf
in
pushf
hlt
xchg
ret
sub
pusha
push
rorl
arpl
xor
cmpsb
ljmp
rol
push
scas
out
and
rep
xor
sar
pop
lret
arpl
call
gs
mov
lods
out
int3
xchg
jno
fsubr
xorb
in
xchg
mov
jl
movsl
sbb
call
in
test
dec
sub
movsl
outsl
jl
lcall
outsb
faddp
add
push
adc
push
in
test
add
sub
pop
stc
inc
mov
xlat
push
adcl
and
lea
and
inc
imul
cld
xor
jno
and
pop
mov
dec
movsb
sbb
dec
ret
popf
mull
jo
pop
mov
push
adc
pushf
fs
xchg
insl
negl
xor
pop
inc
sbb
xor
jle
xchg
hlt
jg
popa
adc
cmpsb
mov
sub
dec
out
xor
pusha
fcoms
mov
stos
dec
cs
sarl
loope
xchg
cmpsb
fildll
insl
and
sbb
xlat
dec
xchg
inc
out
enter
sti
mov
inc
in
mov
or
mov
in
mov
mov
mov
or
les
dec
sahf
in
add
fidivrl
es
negb
dec
xor
add
xchg
sbb
cmpsb
and
scas
fisttps
push
xor
xor
lds
popa
xchg
cmp
test
push
movsl
cwtl
mov
cmp
in
cmp
mov
sbb
cli
shrl
pop
std
fs
push
dec
mov
paddusw
lods
mov
push
cld
test
ficompl
xor
or
lods
shrl
out
mov
add
or
inc
icebp
jle
xor
mov
test
lds
lahf
cmp
sbbl
sub
dec
outsl
push
gs
loope
sub
nop
inc
xchg
fsubr
xchg
dec
mov
arpl
es
push
push
mov
gs
aaa
add
lret
addb
push
pop
dec
and
push
aaa
and
adc
or
sub
mov
mov
sbb
mov
loope
xchg
rolb
cwtl
dec
inc
adc
lret
push
jae
cmp
clc
or
mov
mov
push
xchg
and
cwtl
inc
jg
xchg
push
push
or
mov
mov
aam
shl
xchg
xor
jns
xlat
fwait
xchg
out
add
mov
dec
ljmp
dec
mov
xor
iret
outsl
rorb
mov
mov
lods
fiaddl
xchg
pop
fistps
arpl
sbb
aad
sti
push
adc
pop
jl
aam
or
subl
push
xor
lret
out
jo
iret
cmp
mov
loop
cltd
mov
push
sub
js
cmp
adc
daa
mov
pop
mov
leave
enter
ror
mov
mov
jne
add
adc
cmp
insl
idivb
push
push
mov
sbb
sbb
xor
pop
mov
jmp
add
mov
imul
das
mov
xor
pop
and
xchg
jmp
dec
loopne
mov
sbb
aad
xor
xchg
jne
push
sub
mov
cmp
push
dec
jo
icebp
rcrl
dec
arpl
ljmp
jb
add
mov
sub
and
pop
dec
or
inc
repz
adc
push
jnp
xchg
call
xchg
or
push
sub
popf
mov
sub
hlt
or
xchg
and
push
sbb
outsl
sub
test
adc
sub
jmp
ss
insl
or
xchg
push
in
mov
imul
pop
mov
xor
mov
cs
dec
adc
lods
jnp
lock
mov
andl
mov
jmp
push
xor
popf
xor
test
jl
jo
mov
mov
add
jo
dec
test
into
mov
push
pushf
mov
inc
repnz
mov
aad
addr16
pop
incb
mov
lods
sub
rorl
sub
hlt
mov
mov
fisubs
dec
data16
dec
or
xlat
xchg
mov
inc
and
pop
clc
jg
aas
pop
in
and
rorl
sbb
leave
cmp
fcmovnbe
ja
clc
mov
sbb
int
sbb
pop
into
ss
addb
call
xor
and
ret
cmc
xor
mov
mov
adc
pop
bound
jmp
lret
lea
dec
jmp
push
out
mov
out
ss
sbb
xchg
mov
test
div
pop
dec
jnp
into
loope
pop
xchg
ljmp
cmpsl
sbb
xlat
imul
adc
les
jo
popa
mov
fbstp
jmp
sbb
xlat
pop
sbb
cmpb
jns
mov
xor
push
rcr
inc
bound
fsubrs
mov
dec
adcl
xor
popf
iret
xchg
int3
xchg
sarl
push
sub
ds
cmpsl
insl
fnsave
ffree
pop
jmp
data16
enter
js
fisttps
mov
dec
xchg
push
movsl
cmp
aam
insb
ss
dec
pop
inc
popaw
dec
mov
test
add
inc
mov
sub
push
push
dec
dec
xchg
aad
sub
mov
jmp
pop
nop
sti
xchg
add
jp
hlt
sbb
in
jecxz
dec
inc
lret
hlt
push
push
mov
and
push
fwait
test
pop
ret
cld
add
aas
sbb
in
inc
idivl
dec
lret
and
cmc
popf
mov
in
loope
std
lods
add
mov
cmp
sbb
sti
dec
jl
xor
and
out
pop
pushf
ja
push
test
mov
stos
pop
out
mov
pop
pop
out
aad
lret
adc
adc
push
or
sub
xor
je
inc
mov
les
sbb
jb
mov
mov
pop
notb
popf
or
push
ficoms
xchg
out
add
into
pop
sbb
ret
dec
in
add
mov
pop
test
or
pop
dec
cld
mov
mov
sbb
pusha
mov
negb
inc
dec
sti
mov
dec
xchg
xchg
or
jae
mov
xor
or
int
push
pop
loop
or
lret
loop
jg
out
pop
adc
xchg
fiadds
and
in
shlb
sbbl
cltd
sarl
loopne
mov
xor
ret
mov
ror
pop
les
mov
jb
outsb
cmp
adc
jbe
pusha
jbe
inc
bswap
sub
push
mov
nop
push
mov
iret
inc
xor
push
int
pop
dec
sub
stos
in
movsb
int
ljmp
mov
jp
mov
and
xor
and
sub
insw
push
adc
sbb
jl
dec
fdiv
mov
mov
push
inc
sbb
out
mov
mov
jle
scas
jne
sbbl
dec
inc
mov
outsl
dec
xor
roll
xor
push
mov
nop
pop
js
fneni(8087
mov
jge
push
xlat
xchg
cwtl
pushf
sub
aad
sbb
mov
xlat
rcrl
ljmp
iret
xlat
arpl
xchg
fcompl
out
out
cmp
sub
mov
push
stc
xchg
bound
push
in
mov
movsb
stos
adc
pop
sbb
nop
inc
cmpsb
out
cld
pop
inc
testl
mov
mov
mov
out
and
lods
divb
mov
xchg
ds
scas
mov
xchg
hlt
sbb
sub
lret
outsl
int3
mov
inc
mov
add
or
les
mov
jne
nop
ss
ret
test
divb
jmp
fisubs
outsl
mov
arpl
lods
stc
leave
jb
imul
push
pop
fists
lods
push
aas
adc
popa
sub
pop
lcall
test
aas
dec
mov
fnstenv
jge
dec
cmp
pusha
movsl
repnz
lds
addl
in
lret
jmp
es
jmp
inc
pushf
pop
mov
rorl
imull
push
pop
js
jo
ss
mov
and
mov
mov
aam
shrb
nop
add
ja
imul
lret
inc
fwait
ret
stos
or
pop
cmp
pushf
sbb
incb
in
push
bound
jae
rcll
in
icebp
sub
jle
scas
dec
inc
sbb
push
xchg
aad
mov
int
out
inc
xchg
outsb
movsb
dec
jp
mov
inc
mov
outsb
bound
sti
mov
cs
fs
std
mov
bound
lock
movsb
leave
push
mov
xchg
xchg
push
jle
imul
pop
mov
and
bound
sbb
sub
xor
outsb
int3
inc
movsl
fisttps
lods
lcall
dec
out
aaa
xchg
jne
test
loopne
cli
xchg
movsb
cmp
es
add
dec
dec
aad
adc
cld
pop
pusha
jp
cwtl
sub
inc
insl
xchg
sbbb
jg
cmpl
xor
or
jge
iret
pop
jb
daa
mov
not
or
add
or
inc
cld
dec
xchg
add
repnz
or
mov
sub
jl
pusha
leave
xor
daa
cs
inc
xor
adc
cwtl
aas
lods
xchg
lods
fwait
mov
xchg
adc
rcll
mov
jge
test
dec
xchg
jbe
mov
insb
pop
pop
inc
and
mov
inc
push
adc
mov
gs
mov
inc
inc
pusha
mov
or
hlt
and
fldenv
jnp
test
repz
cmpsl
push
ret
sub
dec
repnz
pop
sbb
fsubrs
scas
cld
shrl
sbbb
aad
and
les
jp
jmp
scas
or
pusha
out
sub
xchg
cmp
jns
inc
xor
scas
cmp
ret
icebp
arpl
ss
jmp
aaa
and
aad
dec
leave
push
inc
sub
sub
jmp
insl
xchg
rcrb
aaa
sbb
push
xchg
lods
sbb
pop
dec
ret
cmp
or
mov
test
les
loop
cmp
dec
aad
xor
jg
aad
mov
pusha
jae
fldcw
test
popf
dec
push
fwait
stc
and
and
sub
adc
xor
out
lods
js
js
sbb
adc
push
loopne
mov
les
dec
dec
cs
lods
popa
jbe
fistpl
icebp
mov
pop
add
loopne
jp
imul
pop
mov
bnd
les
adc
imul
shl
dec
mov
enter
xchg
pop
xchg
mov
fwait
adc
dec
xchg
xchg
sub
mov
icebp
adc
aam
pop
dec
xor
insb
push
insl
mov
xchg
xor
pusha
lret
jno
cli
shll
ja
add
add
push
dec
and
jo
push
xchg
ljmp
ljmp
dec
gs
sbb
shlb
or
mov
data16
push
or
push
int3
pop
ret
imul
dec
fcompl
mov
stc
xchg
stos
jbe
cmpsl
sbb
cld
xlat
loopne
add
scas
stos
push
jg
push
push
shlb
mov
loope
pop
repnz
inc
icebp
dec
ja
in
xchg
fcoms
push
jle
add
xchg
xchg
scas
scas
out
adc
or
push
add
jp
test
inc
lds
and
and
cmp
jecxz
cltd
xchg
mov
sub
adc
cmp
jns
adc
mov
push
inc
cmp
or
ror
mov
cmpsl
adc
add
rclb
lret
insb
jae
push
mov
dec
aad
addr16
loop
scas
data16
push
es
daa
pop
xchg
add
push
jle,pn
mov
jnp
outsl
sbb
mov
cmp
jmp
sahf
bound
xchg
jle
lea
jae
data16
lcall
je
enter
jg
xor
xor
aaa
inc
push
ss
int3
mov
repz
adc
ss
aas
in
mov
imul
sub
mov
add
or
mov
sarl
mov
mov
scas
insl
cmp
or
and
mov
pop
mov
cltd
fbstp
repnz
jae
test
xor
cmp
adc
cltd
lods
pop
jno
jmp
sub
pop
mov
nop
sti
shrb
cmp
loop
repz
cmpsl
inc
adc
inc
pushl
pusha
fcoms
ja
pushf
addr16
icebp
shl
lret
fimuls
push
mull
jecxz
inc
ret
push
out
imul
notb
pop
les
movsb
sbb
xchg
inc
inc
stos
sahf
out
std
dec
mov
jb
mov
fldenv
mov
xchg
mov
mov
bound
mov
sbb
cld
add
mov
mov
movsl
mov
ljmp
jle
scas
adc
mov
cmp
fcoml
inc
lods
pop
aad
push
repnz
inc
lahf
xchg
and
add
leave
imul
andb
addr16
insb
mov
movsl
test
sbb
push
push
leave
xorb
movsl
fsubrs
lcall
fdiv
js
and
jae
cmp
push
ljmp
push
incl
dec
fistl
cmp
jnp
mov
adc
mov
mov
sbb
pop
fidivrl
add
addr16
mov
xor
ficoms
pop
clc
inc
stos
inc
or
icebp
shl
sahf
mov
mov
sbbb
mov
sbb
push
in
cld
mov
sti
xlat
iret
mov
add
lds
movl
xor
cmpsb
stos
fidivrs
arpl
cmp
adc
mov
lds
int
cmp
xchg
test
test
mov
clc
lea
sarl
mov
lcall
ret
aas
mov
sub
jmp
xchg
movsb
push
orl
xor
fldt
sbb
inc
mov
inc
popf
inc
pop
or
push
mov
sub
add
loope
repz
out
les
mov
std
test
stc
int
int
aad
cli
xor
shll
mov
shlb
mov
sub
fisubrs
mov
sbb
jecxz
lods
pop
out
xchg
aaa
pop
shll
icebp
adc
push
mov
jmp
push
lea
mov
lahf
jg
sbb
add
in
or
sahf
cmp
cmpsb
push
mov
popa
add
lea
movsl
add
insl
cmc
into
fdivs
dec
jecxz
or
sub
xchg
or
xor
out
xchg
inc
jl
push
jns
pop
inc
and
push
imul
inc
aam
sahf
mov
ja
shll
mov
mov
imull
lods
dec
ret
xorl
aad
icebp
xor
out
xor
add
inc
xchg
inc
movsb
mov
jbe
aas
push
sbb
in
fmull
fistpll
xchg
or
out
scas
xor
loopne
xchg
inc
in
xchg
arpl
xor
mov
hlt
sub
and
push
lods
loop
cltd
fwait
leave
das
idivl
add
scas
sbb
sub
sub
mov
into
xchg
incb
jo
in
xchg
ret
decl
mov
dec
imul
bound
dec
aam
sbb
xor
inc
inc
imulb
loopne
cmp
out
mov
inc
or
xorb
adc
pop
inc
js
jecxz
out
rol
dec
and
inc
or
fidivl
stc
mov
mov
push
stos
ret
xchg
loop
inc
inc
mov
leave
ljmp
jns
push
adc
lcall
fyl2xp1
fdivrl
iret
jne
xchg
sbb
scas
mov
or
mov
sub
adc
sti
fs
mov
mov
jg
iret
leave
aam
and
mov
dec
sbb
pusha
sti
call
dec
sub
jae
das
dec
mov
push
ret
pop
ret
inc
xor
aaa
int
xchg
sbb
xchg
pop
xchg
stos
dec
mov
xor
and
incb
sbb
cltd
add
lds
stos
dec
mov
or
adc
mov
xor
fdivr
movsb
jp
dec
dec
pop
sub
icebp
cmp
insl
dec
xorl
negb
psubsw
add
insb
add
ja
orl
mov
and
push
ds
and
jns
pop
sub
ret
ljmp
push
pop
jecxz
add
mov
xchg
sub
add
dec
jg
daa
pushf
jns
cld
cltd
pop
fnstcw
lea
add
and
mov
dec
ret
push
sub
and
push
negb
testb
in
mov
xor
push
sbb
fdiv
pop
dec
rcl
fdivrp
xor
dec
sarb
cmp
mov
les
adc
xorl
lods
adc
int3
add
mov
in
dec
add
sbb
imul
stos
mov
rolb
jge
mov
movsb
mov
dec
mov
jbe
out
test
loope
xchg
mov
cmpsl
mov
rcr
dec
rcll
ret
inc
lods
xchg
xlat
push
xchg
mov
imul
stos
scas
add
mov
test
push
shrl
notl
pop
or
mov
lcall
rcl
xchg
cmpsb
jmp
cs
xor
ret
pusha
jne
call
ror
xchg
mov
jnp
int3
nop
jp
jnp
aaa
pop
les
dec
ds
mov
xchg
lock
outsb
xlat
xchg
call
push
popf
jmp
or
jl
cwtl
sub
jge
xlat
sahf
les
imul
dec
scas
inc
inc
inc
ret
pop
add
mov
roll
jl
inc
adc
sti
stc
insb
in
mov
clc
dec
sbb
dec
push
jbe
insl
inc
push
ja
sub
movsl
daa
sub
lret
xorb
outsl
jne
loope
sub
mov
js
dec
xchg
pop
enter
pop
push
cwtl
out
adc
cmp
out
mov
lret
cmc
lret
popa
popa
iret
mov
jg
sbb
fstpt
or
pusha
cmpsl
ret
cs
aas
loope
nop
mov
outsb
add
xor
subb
mov
xchg
repnz
xor
call
xchg
in
jb
cmc
lret
pop
std
insb
mov
movsl
xor
in
repz
stos
neg
push
out
xchg
icebp
stos
and
testb
jo
adcl
scas
mov
sbb
push
add
imul
not
add
in
or
shll
cmp
pop
aaa
clc
and
rcrl
mov
fisttpll
cs
adc
push
sti
xchg
cmp
xor
dec
jg
decb
in
clc
arpl
or
adc
je
push
mov
mov
jp
pushl
jb
jl
push
pushf
insb
shrl
and
add
pop
inc
pop
mov
mov
fwait
and
loopne
or
fdivrl
add
lahf
pop
jae
jecxz
jmp
jne
sub
jae
lahf
xor
jne
add
daa
push
cmpsb
mov
movsl
xchg
xor
sbb
mov
stc
sub
pop
jo
or
cmp
rol
push
xor
pop
push
cwtl
mov
jne
cmp
shr
subb
insb
cmpsl
add
int3
iret
js
outsb
das
hlt
jns
adc
imul
fmuls
out
ds
and
push
pop
ret
cltd
daa
int3
pop
addb
jmp
push
ret
cwtl
inc
sub
dec
out
push
stos
popf
lods
push
jno
sub
push
cltd
test
ljmp
scas
xchg
or
push
mov
fisttpll
adc
aad
lods
fcomps
adc
arpl
test
mov
jle
popa
add
aaa
mov
xchg
imul
les
pop
stos
cmp
push
scas
dec
xchg
pushf
and
lods
shrl
adc
insl
out
and
push
push
mov
fiaddl
xchg
repnz
mov
sub
cmc
cmp
pop
jnp
dec
cmp
mov
into
push
adc
jmp
into
jno
mov
rclb
xchg
push
imul
add
sub
cmp
sub
xchg
aas
pushf
add
subb
mov
xchg
fcoml
repnz
outsl
loope
ds
std
inc
lea
mov
inc
xchg
adc
call
ss
dec
pop
jmp
pop
fadd
add
pop
in
mov
dec
pop
push
jg
pop
and
imul
mov
mov
xor
sub
ss
scas
sbb
sub
cmpsl
push
lcall
dec
adc
pushf
das
pop
mov
notb
stos
or
jecxz
out
repnz
lods
insl
sar
sbb
jae
int3
mov
inc
leave
jno
push
clc
and
push
jae
nop
mov
loopne
mov
ds
xor
sbb
in
xor
icebp
hlt
mov
mov
and
cwtl
mov
movsb
imul
stc
in
aaa
cmp
push
mov
movsb
adc
mov
aad
in
inc
std
mov
bound
mov
push
mov
mov
mov
dec
and
jnp
movsb
pop
adc
fstps
sub
mov
js
fmuls
cmc
fs
or
mov
les
add
or
adc
dec
dec
jns
xchg
pop
test
daa
xchg
mov
insb
push
xchg
lock
loope
jl
push
fistl
fidivl
ljmp
add
sub
lret
movsb
in
adc
adc
cltd
in
sbb
jge
sub
lret
push
setb
xor
pop
pop
cmp
orl
cwtl
xor
in
pop
loopne
cmc
ljmp
fmul
jle
testl
push
jae
add
sti
out
addr16
mov
xor
cmovge
xchg
gs
add
jp
mov
mov
sti
adc
loopne
pushf
push
sub
dec
jmp
adc
mov
test
dec
mov
inc
or
lods
xor
jmp
and
repz
xchg
testb
fldl
jg
pop
jno,pt
jae
loopne
or
adc
je
pop
lods
ja
das
popf
sarb
dec
jmp
mov
repz
mov
mov
sub
roll
jne
push
sbb
stc
movsb
sub
bound
in
adc
sbbl
ljmp
jbe
adc
movsl
mov
mov
inc
pop
in
imul
scas
push
nop
push
popa
dec
out
js
jno
clc
aas
cmpsl
arpl
nop
xchg
mov
pop
dec
addr16
mov
lahf
ficompl
dec
ss
shll
scas
xchg
xchg
dec
push
xlat
jae
fs
or
outsl
nop
xchg
or
nop
repz
dec
dec
js
js
push
incb
sub
xor
mov
aam
mov
mov
push
cmp
sbb
movsl
cld
ror
pop
inc
xchg
lcall
sbb
mov
stos
mov
adc
into
and
lcall
push
pop
addl
aad
into
adc
push
movsl
pop
test
ret
mov
push
and
mov
ret
push
hlt
insl
call
scas
mov
mov
out
cmp
push
and
popa
pop
out
mov
ja
and
push
pusha
push
push
push
mov
fiadds
es
in
fs
mov
adc
mov
adc
movsl
add
and
pop
cli
dec
je
pop
sahf
adc
in
cmpsb
jecxz
and
inc
leave
dec
lods
out
dec
jp
jns
mov
ss
cmc
adc
dec
xchg
mov
fldenv
pushf
push
push
sti
pop
sub
and
fimuls
ja
xchg
mov
cmp
push
push
lcall
cmpsl
popa
add
mov
xor
mov
in
and
mov
lock
arpl
inc
cltd
mov
imul
sub
imul
pop
xor
mov
sub
sar
sub
mov
add
or
and
push
in
aam
push
push
jne
lea
idivl
in
cmp
pop
inc
inc
dec
sbb
dec
adc
ds
sub
cmp
jbe
push
movsb
jmp
jl
ja
and
mov
sbb
dec
insb
inc
adc
data16
mov
inc
or
xor
cvttps2pi
mov
sbb
xchg
push
test
lock
popf
jne
xchg
pop
pop
mov
nop
dec
dec
arpl
sti
or
lahf
dec
lods
adc
pop
testl
push
aad
sbb
testb
and
out
jg
sarl
pop
rcl
movsb
out
std
out
out
jno
inc
inc
mov
sub
and
ljmp
vminps
mov
mov
out
or
xchg
push
adc
mov
xor
xchg
sub
loopne
insb
shl
lret
cmpsb
sbb
fistpl
enter
aas
mov
orb
icebp
adc
dec
push
adc
or
addr16
stos
xor
ss
adc
jge
push
popa
dec
sbb
mov
or
ficomps
loope
incb
lock
ret
aas
xor
cmp
pusha
adc
cmpsl
dec
xchg
and
ret
cs
and
jns
cmp
cmp
scas
je
push
cmpsl
addr16
shrb
out
fdivrp
mov
inc
sbb
xchg
stos
cmpsl
fsubr
movsl
dec
xor
push
add
push
jne
stos
addr16
std
push
cs
xchg
imul
pop
daa
jae
jl
pop
mov
lea
jecxz
adc
fstpt
lret
sahf
mov
jp
xor
push
imul
pop
jbe
stc
jle
add
lods
arpl
dec
mov
dec
jns
adc
and
add
push
xor
xchg
arpl
fdiv
pop
in
fnstsw
sarb
fwait
test
dec
repz
dec
jbe
sbb
mov
lahf
outsl
cmp
rolb
in
pop
inc
enter
lea
push
rcrl
mov
rcll
mov
in
inc
push
mov
stos
sahf
push
xchg
pop
jg
in
pop
imul
adc
jmp
js
or
push
pop
mov
mov
mov
sub
aam
loopne
rorb
movsb
inc
cmp
enter
pusha
push
out
cmp
jp
into
sbb
fiadds
loop
mov
sub
outsb
mov
pop
outsb
push
outsl
jo
fwait
mov
push
mov
sub
sahf
aad
jno
out
jo
or
ret
in
add
xchg
cmp
mov
iret
fldl
xor
xchg
scas
xchg
sub
pop
test
insb
lods
inc
push
jmp
cli
or
inc
cmp
dec
jp
jp
xchg
mov
jns
fdiv
cld
rcl
xor
icebp
mov
test
call
sbb
lods
sti
and
rclb
sbb
mov
adc
push
jl
inc
inc
push
push
push
and
arpl
out
dec
dec
in
inc
mov
mov
ret
xchg
aaa
fisttpl
cmpsl
arpl
aaa
jnp
mov
push
js
xor
and
xchg
mov
push
clc
xchg
xchg
test
aaa
rolb
cmp
xchg
test
test
scas
cmp
adc
mov
push
pop
pop
movsl
adc
fidivrs
loope
fsubrl
inc
test
lock
orl
ficoms
cmc
pop
ljmp
ret
dec
lods
xchg
cld
lds
sbb
or
jle
cmpl
mov
pop
mov
out
pop
mov
stc
scas
and
inc
mov
rclb
cmp
fmull
inc
in
push
test
out
push
sub
js
sbb
das
inc
ret
pop
jo
jp
es
or
adc
fmuls
or
decb
movsl
xor
fimull
fidivrl
mov
mov
mov
mov
mov
and
mov
cmp
out
inc
dec
sahf
cmc
add
dec
fdivl
jmp
aad
push
fistpll
testb
pop
sub
movsb
loope
push
xrelease
mov
dec
sbb
ret
mov
and
ret
xor
lds
xor
notl
addr16
repnz
jmp
add
cmp
cmp
adc
push
jmp
pop
jae
sub
or
and
bound
inc
pusha
sarl
cli
sub
sbb
mov
pop
jl
cs
sbb
mov
xorb
and
cli
call
or
jge
cld
cli
add
mov
fwait
push
dec
sbb
scas
jne
int
sahf
int
aas
or
and
jns
pop
add
mov
adc
loope
lahf
jae
ljmp
pop
and
add
add
jo
lcall
into
lret
rorl
test
sbb
push
scas
popa
jo
cli
mov
into
fdivrs
xchg
bound
push
xchg
addr16
xchg
or
pop
inc
dec
add
push
inc
xor
sbb
hlt
movsl
xor
cli
mov
jbe
mov
mov
iret
ret
jecxz
scas
lock
sarl
cmp
mov
loopne
sti
jg
or
add
pop
add
dec
cmp
push
or
stc
lea
inc
das
adc
fldenv
imul
stos
out
cli
test
or
adc
mov
push
mov
lock
out
ljmp
and
in
into
xchg
mov
sub
es
xlat
outsb
dec
inc
in
dec
adc
test
and
repnz
and
repnz
out
bound
xchg
loop
bound
jno
cmp
sub
dec
jae
pusha
nop
xor
out
mov
push
mov
jne
call
das
pop
das
jl
xchg
push
ds
bnd
std
cs
bound
out
mov
sbb
jle
push
sbb
popa
nop
insb
xchg
mov
pop
movsl
aas
adc
fstp
sub
fwait
sub
mov
add
insb
aas
pop
call
inc
dec
mov
inc
adc
mov
mov
push
pop
sbb
xchg
push
pop
mov
or
inc
popf
xor
sub
adc
jo
cmpsb
mov
adc
xchg
stos
pop
push
test
aad
or
push
sub
jge
add
addr16
or
and
les
repnz
dec
mov
scas
mov
ja
sti
shrl
add
jnp
pop
addr16
call
ljmp
and
int
lret
and
rorb
jnp
popa
fcom
into
inc
cmp
imul
xor
clc
lret
mov
push
scas
loopne
xchg
pop
pop
repnz
scas
push
xchg
cmp
dec
addl
jb
les
popf
fs
add
lcall
stos
xor
out
xchg
cltd
adc
cmp
jne
inc
mov
mov
test
add
out
xchg
xchg
push
fnstenv
cltd
xchg
xor
movsl
aad
xor
cmp
mov
jo
or
dec
or
mov
mov
or
imul
fisttps
jmp
jmp
or
repnz
mov
cmp
push
lea
or
pop
dec
loop
or
mov
addr16
pop
inc
aaa
stos
jne
repz
sbb
cmpsl
hlt
jg
and
addr16
inc
mov
mov
cs
add
mov
ja
jns
jge
pop
dec
sbb
scas
mov
cli
push
enter
or
inc
adc
es
cltd
dec
inc
aam
add
mull
fs
dec
add
nop
in
lret
xchg
scas
aad
mov
xchg
sub
xchg
jp
outsb
mov
cmpsl
sbb
iret
push
les
decb
and
mov
rcr
lea
pop
js
data16
lret
dec
xor
pop
and
sub
xchg
mov
or
xchg
inc
pushf
push
adc
mov
xchg
mov
or
stos
inc
pop
mov
inc
bound
pop
cmp
sahf
sub
icebp
mov
out
loope
cmp
ja
lret
push
loop
dec
pushf
cwtl
push
cmp
xchg
leave
pop
cmp
movsb
iret
stos
add
cmp
pop
lcall
add
clc
jmp
mov
sub
push
sub
mov
lock
sub
sub
dec
clc
jns
enter
adc
pop
int3
lret
cmp
xchg
enter
sbb
sbb
mov
roll
add
sti
push
adc
add
mov
adc
frstor
in
xor
imul
mov
add
mov
mov
aad
jb
into
or
jo
fidivrs
cmp
and
push
or
pop
mov
out
arpl
lret
xchg
push
arpl
inc
xchg
test
add
lods
xchg
pop
jb
cmp
es
adc
into
pop
adc
notb
bound
xor
pusha
lods
pushf
push
push
sbb
cmp
dec
lods
sti
movsb
adc
cmp
scas
adc
test
out
in
lods
dec
sbb
scas
cmp
scas
subb
ljmp
inc
sbb
ljmp
and
test
and
aaa
aam
ret
inc
xchg
movsl
cmc
repz
in
out
adc
fisubrl
test
js
pop
xor
orl
push
dec
adc
push
mov
stos
mov
cli
mov
and
jae
insl
mov
testb
sub
fdiv
rcrl
adc
mov
pushf
dec
in
push
sub
jb
imul
push
adc
or
mov
push
xchg
ss
xor
inc
pop
dec
aas
lock
cwtl
sub
gs
or
lret
mov
popf
hlt
and
iret
aam
mov
cs
cmc
pop
xchg
movsl
pop
push
sub
in
movsl
sbb
rorb
je
rorl
dec
pop
adc
test
sub
jg
into
test
xchg
pusha
fmuls
stos
adc
lcall
sbb
cmp
sbb
outsl
ljmp
sub
sub
enter
testb
cld
js
fcmovu
rorl
jo
sub
xor
fs
lds
push
nop
cs
icebp
xchg
les
add
inc
jg
pop
mov
mov
and
push
or
cmpsb
sbbl
or
call
push
or
sbb
or
sbb
aas
sub
inc
and
dec
mov
ds
xchg
arpl
inc
aam
push
cwtl
mov
or
rcl
cmp
jno
shlb
jnp
aas
test
push
icebp
pop
dec
mov
mov
mov
push
dec
es
adc
jl
scas
out
add
jbe
xor
enter
lea
in
push
xchg
push
or
add
icebp
push
pop
mov
in
call
or
inc
sub
test
test
cmp
mov
jecxz
jae
jg
fwait
dec
subl
shl
pop
mov
push
in
fdivrs
xchg
outsl
xor
lahf
int
fdivrl
and
xor
std
stc
in
popa
cltd
jl
addr16
stc
repnz
adc
movd
or
pusha
or
and
sarb
cld
sbb
mov
int3
mov
fnstenv
sbbb
imul
roll
movsb
jg
sub
hlt
sbb
loope
rorb
dec
and
sub
pop
cmp
cmc
pop
scas
scas
xor
test
cs
cmpsl
loope
or
out
aam
adc
repnz
mov
hlt
testl
sub
je
add
es
lahf
repnz
mov
lds
jecxz
arpl
ret
enter
mov
jmp
xor
mov
cs
sbb
ret
clc
mov
inc
fildl
int
fbstp
mov
cmp
fdivrs
mov
pop
and
xor
fnstsw
inc
test
inc
aaa
jnp
sub
jns
cmp
loop
movsb
sahf
test
stc
lods
pop
push
lds
int
lock
mov
stos
rcl
mov
adc
arpl
andb
pop
lock
push
push
jb
add
icebp
ljmp
lahf
scas
mov
inc
ja
pop
ror
inc
in
sub
jle
cli
sub
adc
repz
inc
sub
jge
mov
xor
fnstsw
clts
add
or
xor
jae
cmp
arpl
mov
mov
push
sbb
mov
out
pop
hlt
push
mulb
in
pop
jge
cmp
pushf
ljmp
and
mov
clc
and
outsl
movsb
xor
test
jo
nop
or
fsubr
fisubrl
negb
inc
or
and
push
lcall
scas
mov
clc
in
and
lea
dec
out
pusha
add
mov
ficoms
fldl
scas
pop
pushl
jno
sbb
mov
mov
andl
loopne
imul
insb
pop
xor
inc
incl
scas
dec
jle
push
jle
xor
push
mov
inc
sub
cwtl
lods
jge
loope
popa
lods
mov
sbb
popf
popf
and
cmp
lcall
pop
mov
dec
xchg
push
lds
popf
flds
mov
loop
mov
test
nop
mov
mov
sbb
ljmp
out
lds
pop
mov
fisttps
adc
das
ror
ss
jne
push
jle
insl
lcall
ds
jo
pusha
jecxz
pop
lcall
insl
fcoml
ret
cmpsl
push
mov
aas
adc
repnz
in
cmpsl
mov
pop
mov
out
outsl
pop
iret
push
mov
jnp
lret
xchg
inc
add
dec
in
jp
sbb
and
ret
dec
mov
out
femms
mov
ret
sbb
sub
dec
pop
mov
mov
aas
sbb
mov
and
outsb
arpl
test
shll
jnp
jne
stc
sbb
adc
dec
cmpsb
ja
movsb
inc
aam
orb
sub
sbb
sbb
mov
insl
call
mov
lea
cmp
xchg
popa
icebp
adc
hlt
outsl
xor
cmp
sub
roll
pop
pop
xor
cli
sub
scas
mov
stos
or
jmp
sbb
stos
mov
mov
sub
sbb
jbe
mov
or
test
std
pop
not
scas
push
mov
cltd
test
xchg
adc
lcall
cmp
mov
je
pop
mov
mov
sbb
nop
sub
jl
cmpsb
adc
jbe
mov
pushf
push
int
inc
mov
dec
cli
jecxz
inc
cmp
pop
mov
mov
stc
jo
mov
or
or
sti
push
cmc
rcll
and
xor
pop
lret
add
inc
js
jmp
outsl
sahf
pop
cmp
loop
icebp
push
dec
sbb
push
inc
stos
jecxz
mov
divl
loopne
jmp
mov
into
mov
popa
mov
test
lea
loope
push
test
test
xor
pop
dec
mov
mov
aaa
cmpsl
daa
pop
xchg
xor
xor
lods
ret
dec
sub
imull
aam
inc
lods
repnz
cmpsl
shl
push
arpl
mov
pushf
pusha
vmwrite
std
shl
js
inc
mov
mov
push
add
xlat
adc
cvtps2pi
clc
push
cmpsl
sub
sti
les
stos
test
inc
lds
das
cmp
jle
pop
aam
push
mov
pop
lea
jno,pt
fucomi
pop
mov
sbb
test
cld
popf
arpl
ret
pushf
gs
shl
jmp
pop
mov
push
inc
mov
adc
mov
jl
pop
into
imul
jne
fwait
jg
outsl
dec
push
cltd
out
ja
jns
add
cli
out
push
mov
cltd
aam
push
call
aaa
add
mov
jo
negb
sbb
andl
sub
cmp
and
aas
xor
or
ret
and
gs
adc
dec
fwait
das
out
movb
push
lock
mov
fdivrl
xor
aam
mov
and
fildl
jmp
or
mov
daa
jecxz,pt
out
and
mov
mov
loope
mov
ds
outsb
mov
and
test
cmp
addr16
shl
in
adc
popa
push
adc
arpl
pushf
push
fsubrl
call
push
push
sahf
and
shrl
xchg
mov
xlat
add
push
stc
rorl
fsubrl
mov
out
je
js
push
or
mov
ffreep
test
outsb
mov
add
sbbl
adc
dec
mov
mov
or
cmpsb
cmp
loop
cmp
in
and
cwtl
js
xor
pop
add
push
and
jl
int
insb
mov
pop
push
xchg
xchg
pop
add
mov
and
fcmovne
add
test
and
jae
call
aam
cltd
in
mov
outsb
popa
jl
pop
popa
movsb
push
fdivr
js
test
aaa
movsl
packuswb
push
add
into
lahf
insb
fwait
mov
rorl
or
push
cmpsb
push
and
ljmp
test
jns
rcrb
cwtd
hlt
andb
mov
fwait
cmp
cs
jg
jae
inc
mov
push
movsb
cmpsl
pop
jecxz
jno
sub
rep
pushf
add
push
xchg
mov
enter
les
test
or
imul
mov
jmp
pop
daa
sub
inc
mov
add
mov
test
arpl
sub
lret
xchg
adc
je
aam
sbb
or
inc
inc
push
aaa
adc
fdivrs
jmp
and
ret
outsl
sub
add
mov
push
push
notb
sahf
fsts
sbb
popf
and
jge
push
out
jge
jne
sub
int3
test
mov
iret
mov
into
xchg
sbb
cmp
cwtl
mov
add
mov
dec
pusha
push
rolb
jle
add
out
rcll
mov
dec
in
and
sbb
inc
out
or
repnz
adc
mov
dec
and
aam
pop
daa
jle
stos
pop
xor
and
testb
into
inc
rclb
sahf
push
push
mov
sbb
ljmp
stos
jno
in
stos
ret
data16
mov
mov
or
std
cltd
dec
pop
fwait
aaa
fsubl
fmull
aam
inc
in
sub
adc
sti
push
pop
fwait
and
add
pusha
popa
mov
dec
jo
xor
lods
sbb
mov
cmpb
test
xchg
jno
cmpsb
lods
xchg
jae
mov
jl
roll
mov
inc
push
jg
mov
cmp
jg
fs
in
ret
jb
mov
das
push
adc
mov
in
lods
lds
cmp
and
test
sbb
pushl
roll
insl
lods
push
lea
mov
mov
les
sub
and
in
push
jle
mov
dec
andl
inc
out
xchg
dec
int3
jmp
jo
outsl
inc
es
stc
xchg
inc
cmpsl
or
push
outsl
test
xlat
xor
pushf
stos
inc
cmp
mov
mov
lahf
fnsave
lock
cmp
mov
outsb
sub
sbb
mov
xchg
aaa
ljmp
jb
mov
push
movsl
scas
jmp
scas
ja
es
and
lds
test
in
sti
imul
cltd
inc
fstpl
inc
xor
rorl
aaa
arpl
ret
cs
fadds
popf
push
sbb
shll
jg
cmp
icebp
mov
and
or
push
cltd
cmp
xor
movsb
out
xchg
adc
fstpt
fwait
rorb
test
pusha
add
orb
sbb
into
lcall
enter
mov
push
mov
cmc
pop
pop
push
imul
shrl
and
inc
add
out
dec
pop
mov
mov
sarl
jmp
pop
sub
imul
imul
lret
and
popa
movsl
pop
xchg
out
xchg
sarb
xchg
dec
adc
inc
addb
mov
add
lock
add
ficoms
push
js
mov
xor
fnsave
inc
cmpsw
xchg
mov
xor
nop
imul
ret
mov
outsl
fwait
push
lea
pop
out
push
cmp
insb
pop
scas
test
push
cld
pop
enter
xor
xchg
sbb
add
pop
cltd
movsb
popf
xchg
sub
icebp
mov
pushf
lahf
sub
fs
nop
jb
pop
and
cmp
inc
jg
push
mov
insb
in
stos
stc
jmp
mov
dec
jmp
sub
aas
mov
xchg
call
jns
pop
adc
xorb
or
int
fists
mov
orl
loopne
push
pop
jbe
cmp
enter
push
imul
and
and
repz
dec
pop
dec
mov
add
mov
aas
adc
addr16
scas
inc
cmpsb
pop
xor
cmp
call
jg
iret
repnz
push
data16
fisttpl
out
push
dec
pop
sub
mov
into
jge
adc
jle
mov
popf
leave
imul
sbb
mov
or
push
push
loope
or
mov
fwait
test
sbb
mov
aaa
incb
and
inc
adc
xchg
adc
fs
or
cmpb
pop
fstps
int3
push
fdivr
and
out
xor
pop
lret
add
cs
out
aam
jp
jns
lret
popa
sub
mov
jne
insl
xor
mov
data16
jg
loope
pop
pushf
jns
scas
jl
mov
jp
or
cmp
sbb
int3
sbb
cmpsl
pop
sub
sub
add
enter
movsl
and
test
gs
or
fucomi
out
and
enter
ds
out
add
into
cmpsb
leave
mov
lods
xor
cmp
mov
test
adc
xchg
fcom
xchg
push
movsl
sahf
xlat
push
cs
sbb
xor
add
adcl
sub
sub
loopne
imul
aas
ds
sub
cld
xchg
int
pusha
movsb
es
test
and
mov
mov
lods
or
mov
lret
std
xor
stos
test
xor
int
and
mov
jl
inc
imul
js
cli
and
call
adc
mov
inc
incl
loopne
xchg
jl
and
imul
jge
push
and
fldz
jp
jno
add
and
cmp
push
sbb
xlat
jnp
push
pusha
fbld
arpl
jnp
shrb
movsb
pop
mov
lea
cmc
pop
mov
mov
andb
aam
out
cmp
fmul
cmp
cltd
pop
jp
xor
incl
popf
add
push
dec
fwait
pop
xchg
cli
fidivs
push
or
ja
gs
sub
mov
and
repnz
jae
dec
dec
jg
inc
xor
icebp
add
mov
sbb
insl
xchg
mov
xorb
jne
scas
push
and
aas
lret
push
mov
push
fwait
lock
das
loopne
push
fdivrl
out
ret
push
pop
xchg
or
out
fstpt
ret
imul
iret
add
lods
ss
icebp
jg
out
push
and
sub
fidivrl
inc
dec
lea
dec
jmp
sbb
test
fdiv
test
cmpsb
bnd
mov
xchg
mov
pop
loop,pt
mov
out
fdivrl
adc
jno
out
xor
psubw
pop
push
das
imul
pop
in
ficompl
rclb
xor
mov
js
mov
fcompp
adc
in
je
sbb
out
outsb
scas
mov
sub
dec
out
gs
mov
mov
les
pop
xchg
decl
sub
mov
jle
mov
jg
pop
arpl
scas
stc
sbb
fistpl
sub
mov
add
inc
dec
cld
js
fdivs
imul
pop
outsb
aaa
cmc
leave
mov
mov
add
jmp
out
adc
xchg
bound
sbb
jnp
push
push
inc
js
in
mov
sbbb
jbe
int3
sbb
cmp
testl
jns
pop
or
addr16
iret
popa
ljmp
jp
int
push
ss
in
cmp
imul
arpl
test
sub
push
mov
add
icebp
std
gs
dec
pop
dec
mov
jns
stc
lcall
mov
dec
xchg
push
jl
fwait
pop
int3
sub
cmp
fsubr
out
jl
cwtl
mov
xchg
mov
xchg
std
fbstp
ss
sub
sbb
icebp
mov
cmc
mov
addb
and
cmp
pop
sbb
es
mov
cmpsl
cmp
shlb
pushf
jge
cmp
adcb
xor
jns
andl
cmp
and
mov
sub
das
aas
mov
push
data16
aad
aad
or
jle
xor
sahf
push
mov
scas
frstor
test
movsb
pop
or
inc
xchg
dec
pushf
jg
xchg
data16
xor
lcall
xor
inc
xchg
repz
mov
xchg
fstpl
int
in
jno
jo
icebp
arpl
sbb
mov
sub
int
orb
js
pop
or
sbb
data16
dec
inc
enter
xchg
add
repz
fstl
mov
adc
pushf
test
sahf
xchg
cs
ret
enter
cwtl
out
jp
sbb
push
add
lret
fsubr
cwtl
mov
bound
mulb
mov
lret
lds
int
mov
cs
iret
cwtl
pop
ret
cltd
mov
pushf
aam
dec
cmp
cltd
das
call
fists
dec
out
pop
sti
loopne
add
push
xchg
je
pop
pop
push
pop
sbb
es
jp
xchg
mov
test
int3
push
cmpsl
or
hlt
cwtl
dec
xchg
fucom
jnp
sbb
ja
rcl
cmp
mov
jg
push
or
or
sub
out
cmp
jno
test
push
les
xchg
mov
or
aas
stc
fists
push
lods
push
sbbb
mov
cmp
out
push
dec
sub
mov
fwait
sbb
push
ds
add
adc
lret
into
mov
in
in
dec
push
outsl
inc
ljmp
push
jb
adc
mov
add
imul
or
fidivs
mov
sbb
mov
and
int
clc
cmp
pop
sub
in
outsl
test
add
lret
adc
dec
mov
sbb
cmpsl
mov
and
sbb
mov
mov
sbb
fdivp
mov
inc
nop
add
sbb
push
test
fcoml
repnz
mov
aaa
aas
xor
sti
push
pop
repz
and
inc
push
das
cmp
push
add
gs
inc
scas
test
in
negl
cmp
pop
cs
cli
jo
insl
int3
xor
flds
out
pop
mov
jnp
or
loop
sbb
leave
aaa
dec
xor
rcrb
xchg
cmpsl
fwait
loopne
pop
ds
xchg
jae
pop
or
cmpsl
push
cmp
int3
in
pop
pop
fstpt
loope
mov
adc
xor
add
mov
cld
or
lods
add
add
popf
std
push
imul
lcall
in
ss
mov
or
insb
in
xorl
sti
fisubl
andl
scas
ss
int
add
cmp
jmp
lret
sub
mov
inc
movsb
sti
mov
lret
lods
mov
sbb
fwait
in
dec
add
cmc
ret
mov
lahf
fisubrs
adc
ljmp
test
lcall
dec
mov
cmpsb
ret
mov
pusha
inc
repnz
push
cmp
mov
pop
out
addr16
inc
mov
adc
mov
add
sahf
mov
xlat
test
aas
lret
pop
jge
ss
pop
in
sub
cld
lcall
xchg
mov
push
cmp
push
jmp
add
mov
loopne
pushf
in
lret
add
jae
push
out
lea
loop
push
into
andl
repz
xor
popa
lods
and
lds
sahf
shll
xchg
dec
cmpsl
mov
mov
stos
nop
pop
aam
and
and
jl
dec
push
fildl
dec
cmp
or
lret
imulb
mov
push
or
mov
xor
or
and
out
outsl
adc
jns
ss
cmp
push
sbb
call
push
cmc
js
sub
pop
xlat
icebp
xchg
adc
cmpsb
cltd
imul
mov
adc
mull
cld
and
out
mov
mov
sbb
push
push
imul
lock
test
jge,pn
cmc
cmp
dec
lods
pop
icebp
pop
int
sahf
int
or
jbe
jmp
pop
jmp
dec
sti
jnp
push
sbb
loop
mov
mov
jno
add
loope
hlt
and
pop
jae
aas
mov
loopne
rcll
cmp
cmp
mov
lahf
cmp
pushf
sbb
cld
dec
shll
mov
std
aam
stc
addr16
ror
dec
lds
and
or
aaa
push
inc
dec
inc
into
adc
push
jae
cmp
inc
cli
orb
inc
inc
mov
adc
rcrb
daa
xchg
push
sbb
out
roll
sbb
pop
fscale
lock
mov
outsb
and
icebp
mov
pop
loop
mov
push
scas
mov
shll
adc
xchg
icebp
lds
sub
xchg
imul
and
mov
dec
in
sub
mov
insb
jno
adc
les
xchg
rcll
pop
call
mov
call
sti
loope
jns
movsb
repz
mov
hlt
clc
mov
cmp
xchg
push
sbbb
add
int
pop
sar
cmp
dec
ret
jmp
adc
in
inc
shll
imul
and
out
in
addr16
mov
adc
pop
ja
cs
out
and
push
dec
in
sbb
in
out
push
xor
cmp
mov
push
lods
ret
scas
cld
mov
adc
or
test
inc
cmp
lcall
scas
sbb
scas
mov
xor
stos
inc
or
aas
test
mov
push
push
lret
iret
mov
cmp
rclb
add
sbb
sub
mov
pop
xchg
icebp
lret
inc
dec
aad
mov
jbe
add
addr16
and
mov
and
and
xchg
cmp
cmp
pop
mov
and
fwait
mov
push
jbe
or
sahf
nop
pop
adc
ja
mul
lretw
and
out
cmp
testb
inc
mov
sub
outsb
cmp
mov
scas
mov
pop
xchg
fists
bound
sahf
and
cli
push
mov
and
scas
dec
loop
xlat
imul
scas
add
sbb
mov
xorl
inc
pop
fabs
mov
clc
leave
jge
xchg
rorb
test
loope
cmp
xchg
mov
lahf
cmc
xor
mov
add
add
jo
lcall
fisttpll
fbld
orl
cmpsb
or
mov
adc
lock
lds
mov
mov
mov
sahf
or
insl
bound
xchg
xchg
popa
lret
in
ja
mov
shll
in
lcall
leave
inc
shr
les
xorl
mov
jbe
jb
cmp
aad
stos
jne
repz
mov
call
test
cmpsb
mov
jl
sbb
fsts
jp
push
lcall
push
sub
push
or
push
mov
out
insl
out
faddp
add
jg
fwait
mov
push
popa
jno
mov
push
dec
dec
adc
cmpsb
inc
mov
ret
sahf
push
addr16
ljmp
mov
mov
xor
xchg
fst
rclb
dec
ret
stos
in
sbb
and
add
rolb
adc
cmp
add
stc
xor
push
adc
push
adc
sbb
and
sbb
or
adc
jne
test
ljmp
shlb
ret
std
int3
or
pop
mov
xlat
fsubrs
scas
jmp
rcll
imul
dec
add
and
ret
push
xchg
es
jne
andb
pop
jae
jns
jmp
sub
mov
iret
adc
mov
ret
jnp
in
enter
cmp
mov
cs
or
cwtl
adc
push
enter
adc
test
sbb
mov
js
test
fisttpl
loop
shll
lret
adc
jae
push
jl
cmp
and
insb
cmpsb
shll
sbbl
adc
popf
imul
icebp
mov
or
jl
pusha
fcom
nop
mov
adc
jge
jle
push
add
jno
mov
or
lock
adc
lret
outsl
loopnew
xor
call
pop
mov
lahf
inc
cmp
ret
imul
orb
insb
sub
ds
mov
and
ret
icebp
aad
je
imul
stc
dec
mov
add
mov
je
jecxz
push
adc
arpl
dec
pushf
das
iret
pop
add
inc
sbb
xor
ret
lds
push
mov
jg
pop
fwait
mov
dec
and
lds
xchg
xor
fldcw
mov
in
fwait
cmp
inc
dec
mov
cltd
or
movsb
outsl
jp
pop
cltd
push
push
xor
push
xchg
cmp
cmp
test
mov
orl
and
sbb
es
xchg
divl
imul
sub
gs
cs
loop
rorb
and
je
mov
mov
and
int
mov
lds
aam
push
inc
adcb
in
lahf
loop
push
mov
inc
out
movsl
sbb
popa
mov
jno
cmpsb
pusha
push
addr16
int
stos
push
jmp
stc
loop
js
cld
jbe
mov
push
pop
les
sub
push
xchg
or
popf
push
cmp
mov
jno
sahf
lret
mov
sub
and
mov
xlat
es
inc
outsb
lcall
out
and
jae
cs
mov
jp
mov
xchg
mov
fsub
fbld
cmp
mov
cmp
jb
cld
sahf
xor
andl
inc
adc
mov
dec
jecxz
call
adc
scas
lds
or
repz
fists
sbb
mov
jge
push
cmp
adc
or
add
cwtl
mov
adc
mov
dec
pushf
jae
cs
fbld
mov
xchg
je
leave
sbb
dec
pusha
xor
mov
sub
jmp
jle
retw
xor
add
outsb
stos
orl
and
movsb
or
push
aam
xchg
fbld
loop
jae
enter
pop
popf
adc
mov
sahf
xor
sbb
jg
scas
xchg
repnz
scas
dec
and
inc
les
jmp
int3
add
pop
inc
mov
lahf
cmp
push
push
jae
jmp
cld
and
sti
push
pop
and
loopne
pop
mov
cwtl
or
push
ret
pop
insl
sub
mov
push
mov
inc
out
jmp
sahf
cmp
pop
mov
repz
js
jle
shll
push
xchg
clc
xchg
or
loopne
ret
lods
imul
jmp
pop
sbb
sbb
xor
dec
in
in
mov
sbb
dec
or
push
xlat
pop
cmp
les
fwait
add
mov
and
gs
mov
fs
dec
pop
cs
test
lock
sarl
rcrl
loop
push
push
xchg
rcrb
popf
fadds
int3
and
inc
mov
pop
rcll
loop
pop
rcrb
lods
stc
pusha
sub
ljmp
outsl
jo
mov
outsb
das
xor
popf
je
jae
cld
push
sarb
add
push
into
les
push
sbb
push
inc
xor
sub
xchg
lcall
mov
adc
shll
add
jb
dec
outsb
repz
cli
pop
aas
add
dec
gs
aam
sub
stos
and
or
repnz
jnp
lods
adc
xchg
cmp
mov
test
push
mov
mov
push
lock
fidivrl
call
addr16
les
subb
fwait
xchg
cmpb
movl
mov
pop
mov
movsb
mov
push
in
cmp
sub
dec
gs
mov
or
mov
pop
mov
sub
adc
lea
lods
fistpl
dec
xlat
add
inc
cld
xor
lahf
pop
cmpb
mov
add
je
in
xchg
inc
inc
enter
rcl
iret
mov
push
pop
xchg
divl
sbb
aaa
pop
pop
pop
jl
jg
push
push
mov
jnp
pop
mov
xor
add
mov
adc
je
add
insl
cwtl
dec
sub
aad
out
and
pop
add
jg
add
xchg
pop
scas
int
mov
dec
test
add
sub
icebp
lods
enter
pushf
test
test
das
adc
les
repz
std
mov
mov
push
pushf
inc
or
data16
lods
popf
popa
dec
rcrb
mov
sub
mov
dec
das
in
inc
jmp
mov
xchg
jne
inc
add
xchg
adc
scas
cld
jo
jg
movsb
dec
lods
jb
mov
jo
pop
jmp
andb
mov
pushf
mov
imul
pop
xchg
mov
imul
movsl
xor
shl
arpl
and
xlat
xchg
mov
inc
roll
cltd
std
dec
or
out
les
cmpsl
jbe
sbbb
push
mov
pop
dec
mov
mov
pushf
adc
cmpsb
sbb
popa
xchg
movsl
inc
pop
jge
outsb
mov
sti
cli
movsb
mov
mov
test
push
cltd
gs
xchg
mov
pop
or
mov
xchg
jp
es
loopne
xor
or
pushf
sbb
mov
rolb
pop
repnz
sbb
and
mov
call
dec
or
ret
mov
mov
pop
push
js
xor
js
and
and
les
test
in
push
idivb
outsb
sub
aas
and
sub
shrb
out
fdivrl
stos
and
divb
sub
mov
pusha
mov
push
jno
je
movsb
mov
pop
lret
gs
aam
dec
arpl
lcall
inc
mov
jmp
bound
popf
inc
fisubrl
pushf
push
pop
gs
sbb
in
stos
mul
sbb
xor
imul
cmpsb
dec
aad
xchg
hlt
lahf
cmp
pop
dec
inc
adcb
jae
mov
scas
sbb
or
sbb
jle
sub
pop
cmpsb
jge
cmp
add
dec
iret
push
lret
and
bound
popf
flds
fsubrl
imul
sub
lods
sbb
out
or
fadd
jp
inc
pushf
and
data16
leave
shrb
push
mov
jno
aad
push
lock
ss
add
adc
dec
jp
shll
mov
xchg
into
dec
or
push
imul
stos
lahf
pusha
dec
or
inc
push
mov
outsb
jae
mov
xchg
xchg
fistl
lea
lahf
mov
fbstp
mov
loopne
scas
mov
test
insl
jmp
roll
mov
int
add
add
js
pop
mov
arpl
imul
xchg
jnp
cmp
jp
cmp
in
and
sub
call
nop
add
xchg
and
dec
push
inc
aam
rcrl
nop
sub
mov
insl
jg
xchg
mov
es
cmp
aam
ret
jge
mov
out
int
clc
mov
pop
call
out
and
shlb
out
repnz
and
sub
loop
inc
nop
icebp
std
and
jp
fisttps
xchg
inc
sub
call
das
xchg
loopne
divl
loopne
sar
in
mov
enter
je
jge
lret
dec
mov
cmp
dec
pop
push
and
pop
stos
xlat
lods
popa
test
test
add
mov
mov
sarb
test
push
xchg
push
add
mov
outsb
mov
pop
in
lret
pop
cmc
xor
xchg
push
into
cwtl
daa
out
and
cmpsb
push
and
and
and
or
cmp
adc
mov
fcmovu
or
inc
lret
mov
lock
or
xchg
push
mov
xor
cmpsl
jbe
int3
adc
fisubrs
mov
into
mov
sub
or
cld
js
sbbl
inc
out
jge
jb
shrl
enter
adc
sub
outsb
jne
adc
mov
stos
test
pop
sarb
faddp
lcall
pop
pop
aaa
repnz
and
out
scas
or
notl
lret
rcll
loope
shr
and
ja
fsubs
push
ss
sarl
imul
mov
cmp
mov
add
jns
enter
aaa
mov
mov
xchg
int3
sub
stos
xchg
push
lds
dec
mov
mov
ret
jnp
stos
dec
movsb
add
sar
stos
sbb
jnp
jne
lods
stos
lahf
ficoms
pusha
sysret
adc
mov
dec
or
mov
rolb
fdiv
popa
jnp
loop
out
cmp
sahf
mov
cmp
pushl
or
stos
sub
mov
mov
push
push
call
loop
out
push
jmp
loope
jno
dec
or
mov
dec
js
arpl
lock
jbe
push
sbb
mov
jae
dec
pop
cmp
data16
and
dec
mov
scas
aam
movsb
dec
out
cmpsb
addr16
in
leave
mov
out
les
inc
sarl
data16
xor
lea
dec
lcall
shr
ljmp
insl
sub
les
mov
cli
jge
pusha
in
xchg
test
pop
mov
xchg
fstl
jo
mov
mov
pop
repnz
loop
out
dec
push
ljmp
movsb
xchg
fwait
and
push
pop
cmpsb
imul
in
sub
adc
jb
xchg
xchg
mov
mov
ret
xchg
popa
sbb
xchg
leave
jl
and
ss
dec
insb
xchg
sahf
mul
stos
and
mov
cmpsl
xorl
xor
jg
fiadds
dec
insb
inc
mov
stc
push
ljmp
popa
push
cs
es
sahf
mov
mov
test
out
mov
jb
lock
std
add
ljmp
test
lods
daa
popf
pop
stos
and
ljmp
out
cld
push
xchg
loope
xchg
jae
imul
pop
cmp
aad
subb
addr16
addr16
lds
arpl
cwtl
adc
sub
jmp
insl
xor
outsb
jae
je
mov
xor
aaa
or
mov
test
cmp
push
mov
inc
fiaddl
inc
icebp
or
mov
fisttps
jge
mov
popa
lea
xorl
shrb
dec
mov
and
inc
cli
push
mov
mov
xor
xchg
in
lret
jno
inc
subl
dec
mov
inc
xor
mov
push
xor
and
adc
roll
pop
mov
xorb
inc
cmc
pop
push
rcrl
jbe
aad
adc
cmp
add
xchg
in
xor
cltd
nop
cwtl
push
out
or
cld
imul
jp
mov
mov
and
mov
fnstenv
fs
out
cmp
mov
mov
fistl
stos
dec
mov
jmp
push
imul
sbb
out
call
dec
call
xor
xchg
pop
sub
mov
jle
xchg
cld
arpl
jp
push
mov
fs
out
mov
frstor
addl
pop
xchg
dec
mov
pop
mov
mov
adc
or
or
mov
fstpt
jge
mov
inc
jns
cld
jo
jbe
bound
js
jne
loopne
cmc
lret
stos
jns
jle
sub
addb
lret
sbb
push
dec
cmp
push
loop
ljmp
icebp
jno
fildll
stos
cld
test
scas
leave
mov
or
mov
mov
sbbl
jb
shlb
pop
or
adc
int3
test
dec
add
scas
sub
jne
cmp
fcom
dec
int
xorb
add
jle
sbb
mov
comiss
add
adc
les
nop
xchg
fistpl
dec
fisttps
pop
scas
jo
repnz
fbld
and
inc
movsb
push
cli
and
push
dec
out
push
add
and
fcomp
adc
push
fisubrs
shll
and
shrl
addr16
push
mov
das
xchg
test
inc
jne
out
push
adc
jmp
pop
fsubrl
mov
xchg
xchg
testl
outsb
jg
mov
addr16
fwait
sub
xor
je
jne
in
clc
adc
rolb
gs
mov
cld
lods
jmp
scas
push
pop
jns
or
outsb
test
fnstcw
subl
sub
fisubs
inc
lods
arpl
sbb
mov
fldcw
jmp
inc
cli
jmp
mov
insb
jae
pusha
dec
sub
push
mov
hlt
add
fld
insb
pop
pop
sahf
mov
push
jmp
mov
pusha
js
push
sarl
mov
fildll
cmp
mov
mov
fistl
mov
cli
mov
les
push
mov
lods
push
jl
js
pop
cli
mov
mov
rcll
inc
test
repz
in
mov
xchg
out
js
jb
mov
je
incb
jbe
inc
jns
sub
fmull
cltd
pop
and
add
sub
mov
in
jge
mov
imul
jmp
sub
enter
scas
pop
xor
and
sbb
push
dec
xchg
pop
dec
and
fadds
stos
ss
inc
and
pop
lcall
lret
lahf
jb
aad
int
addr16
dec
mov
imul
pop
mov
adcb
hlt
jne
sub
bound
lock
jno
lcall
ljmp
push
icebp
dec
in
pusha
dec
icebp
mov
in
leave
and
xchg
xor
pushf
out
ds
and
in
push
xchg
jecxz
or
adc
arpl
add
xchg
sub
stc
icebp
sbb
pushf
jne
sbb
pop
mov
pop
xor
inc
xchg
xor
mov
inc
jecxz
pop
and
outsb
mov
repz
push
int
pop
mov
imul
stos
adc
sbb
xor
sub
push
inc
pop
pop
mov
add
inc
ret
ja
dec
aad
adc
stos
mov
leave
sbb
cmp
shlb
cmc
clc
mov
aaa
lret
test
maxps
mov
pop
enter
jp
jnp
das
cltd
sbb
test
je
pop
icebp
stos
mov
adc
xor
into
mov
jmp
js
pushf
insl
and
in
ficoml
cmpsb
mulb
xlat
push
jle
data16
pop
or
movsl
lret
xorb
or
sub
cwtl
gs
or
test
int
cld
push
add
ja
mov
jp
xchg
mov
jg
cs
lods
add
lock
fstpl
aas
add
pop
je
fwait
sbb
mov
push
fldt
lcall
js
mov
inc
and
mov
mov
ret
lods
fmuls
mov
jb
and
insl
and
mov
aaa
inc
sbbl
and
fnstsw
xchg
or
stc
jmp
mov
popf
xchg
lret
pop
sbb
lret
add
cmp
lcall
mov
es
orb
outsl
nop
add
mov
into
gs
mov
lods
pop
cmc
out
xor
mov
popf
sbbb
icebp
stc
pop
scas
xchg
pop
mov
xchg
outsb
push
enter
jne
cmc
repz
sti
or
jno
sbb
cld
data16
fnstcw
sbb
ss
in
inc
mov
stos
xor
jae
mov
push
ret
out
pop
sbb
xchg
pop
cmp
adc
mov
in
lds
arpl
cmpsl
and
xchg
add
out
imul
andl
int3
sbb
mov
inc
sub
push
imul
jl
mov
inc
pop
cmp
cmp
ss
repz
test
dec
pop
jns
andb
into
insl
out
std
adc
in
shrl
mull
xor
ret
scas
push
and
add
mov
jb
outsb
sbb
push
cmp
cwtl
mov
adc
inc
ret
ja
mov
adc
cmpb
adc
fxch
push
imull
mov
jbe
push
sbb
out
pop
mov
daa
mov
add
and
mov
daa
fdivl
xchg
mov
imul
mov
popf
dec
push
mov
into
jne
xor
and
int
mov
cltd
pop
repz
cmp
dec
mov
push
or
cmp
dec
insl
sub
cmpsb
insl
cmp
cmc
inc
mov
fstpl
xchg
cmpl
hlt
jno
push
iret
add
sbb
subl
mov
push
lds
cltd
movsl
pop
xchg
add
imul
and
pushf
pop
outsl
mov
and
pusha
or
in
fs
mov
fs
ss
aas
gs
push
frstor
mov
movsl
add
fcoml
add
jmp
mov
pop
jne
call
mov
pusha
inc
imul
in
push
push
andl
shrb
fstl
das
mov
sbb
mov
inc
mov
xor
pop
cmc
and
adc
stc
enter
fisttpll
push
loop
loop
adc
test
sub
and
orl
cmp
dec
fs
pop
fstps
aad
test
mov
pushf
aad
stc
mov
xchg
or
add
xchg
jo
mov
lret
push
mov
sti
mov
std
rcrb
rcr
xor
and
push
fsubrl
cwtl
lock
data16
or
insl
je
cs
cmp
mov
jnp
pop
lahf
mov
fidivs
push
cmpb
lea
jae
aam
xchg
or
mov
imul
push
in
repz
push
sbb
sub
lods
dec
rolb
jg
test
jo
fnsave
mov
lcall
aad
fcmovne
aas
popf
pushf
loopne
subl
and
hlt
xorb
popl
push
inc
je
jns
and
inc
pop
inc
in
jl
cmpsb
test
fwait
mov
sbb
fidivs
rcrb
dec
pop
xchg
das
mov
leave
or
adc
xchg
cwtl
leave
cmp
pop
inc
outsb
cwtl
adc
fisttpll
pop
int
in
gs
dec
test
cmp
bound
sbb
pop
sbb
xor
and
fcoms
pop
sbbb
cmp
loope
incl
lahf
inc
pusha
sbb
arpl
sbb
jge
scas
or
lock
jge
scas
arpl
fcmovnb
or
push
out
jo
cld
push
jl
repz
mov
clc
adc
cwtl
add
data16
movsl
les
in
incl
cmp
std
mov
xor
and
cmp
pop
adcl
pop
jne
dec
bsr
stos
addr16
shll
mov
scas
inc
mov
or
pop
sub
lret
out
cmp
sub
leave
xchg
push
cld
gs
sbb
cld
mov
arpl
inc
stos
adcb
sub
mov
cmpsl
sub
test
pop
ljmp
mov
mov
pop
popa
shr
out
mov
or
es
insl
call
pop
or
rcrb
insb
inc
stos
outsb
jle
dec
popf
push
aas
mov
lret
push
iret
push
pushf
jmp
mov
bound
xor
loopne
jmp
mov
into
sarl
xchg
faddp
aas
iret
push
dec
jne
push
ret
inc
pop
push
cs
rol
stc
divb
test
in
inc
xchg
shl
push
outsl
addr16
jmp
mov
sti
orb
and
mov
jbe
inc
pushl
mov
test
aas
or
ret
xchg
int
sbb
inc
loop
jbe
inc
test
lods
test
xor
in
ja
jl
cs
mov
stos
repz
lods
loope
or
pop
lcall
ret
xchg
mov
cmpsb
jnp
xorb
in
lahf
inc
cmp
js
loope
cli
fidivs
push
idivl
or
adc
push
lods
nop
jns
jle
adc
sub
dec
js
out
mov
jmp
je
sub
xor
push
popa
mov
push
int3
ficompl
insb
cmp
pop
pop
sbbb
push
ret
aad
mov
pop
xlat
push
add
sbb
daa
insb
rol
xchg
in
push
jmp
mov
js
or
jnp
jns
mov
mov
xchg
dec
adc
pop
jns
repz
mov
inc
les
fildll
test
inc
in
in
ss
aaa
aaa
xor
imul
inc
mov
popa
insl
xor
int3
inc
pop
bound
jecxz
jge
aas
lcall
or
ret
sub
pop
dec
in
xlat
or
dec
in
insb
popf
out
cs
sub
jp
dec
xchg
xchg
mov
sub
loopne
cmc
push
mov
mov
sbb
and
lods
loop
add
pop
ficomps
fninit
xor
aas
clc
push
mov
mov
mov
or
mov
sarl
mov
mulb
mov
jmp
dec
scas
lds
in
outsb
jge
or
dec
mov
sub
mov
mov
lret
aaa
sub
pmaddwd
dec
aas
popf
cmpsb
lds
insl
mov
push
jnp
shrb
hlt
xchg
icebp
or
sub
xchg
push
mov
mov
lcall
and
loopne
out
iret
xor
push
jo
das
data16
mov
push
mov
adc
xchg
cmp
lods
mov
dec
pop
ljmp
ljmp
inc
sti
sbb
adc
imul
xchg
cmp
jge
jae
mov
pop
adc
pusha
xor
jg
sti
ds
mov
fsubrp
cmp
pop
mov
insb
mov
lea
sbb
mov
scas
xor
out
jge
lock
xchg
and
jne
mov
cmpsb
pop
xchg
lea
adc
imul
xchg
lea
add
cld
fbld
mov
scas
sub
sahf
xchg
xchg
xchg
dec
add
mov
dec
sbb
sub
sti
sub
jne
imul
or
sbb
fildll
mov
cwtl
push
inc
mov
out
jp
test
sbb
jmp
jmp
adc
mov
test
jecxz
and
and
ljmp
mov
out
daa
cs
dec
mov
or
cmp
mov
push
mov
lods
inc
mov
jecxz
mov
push
push
mov
mov
mov
mov
in
inc
adc
and
sub
push
xor
jae
sub
xor
mov
lock
add
clc
cmp
sub
scas
push
mov
je
aaa
adc
test
or
fs
lods
cwtl
and
popa
icebp
data16
hlt
jae
subb
fcmovnbe
pop
add
dec
xchg
dec
mov
pop
loope
xorl
inc
push
add
mov
outsb
scas
into
jg
scas
shlb
daa
sbb
addb
arpl
scas
cwtl
leave
out
scas
es
xor
fcmovbe
mov
fimull
pop
repz
jno
dec
inc
rol
outsb
mov
repnz
enter
in
flds
dec
movsb
fistpll
xlat
xchg
cmpsl
rcll
mov
and
or
scas
mov
fisubrl
jp
pop
and
test
mov
nop
iret
xchg
push
push
nop
or
push
and
cmp
cmp
iret
mov
in
sbb
pop
adc
sbb
pop
mov
push
xchg
sub
mov
out
popf
stos
loope
insl
lods
cmpsb
mov
mov
loopne
addb
and
xor
pop
dec
jb
and
cli
sub
or
movsl
into
pop
adc
cs
mov
sbb
fistpl
hlt
imulb
dec
sbb
cs
out
inc
mov
fldcw
adc
inc
push
lcall
cmp
sub
xchg
sbb
fiadds
stos
out
mov
out
sbb
scas
cmp
add
add
shrb
adc
div
xchg
push
lret
leave
xchg
movsb
lods
push
sub
fimull
cmc
test
scas
cmp
xchg
adc
cld
mov
pop
cltd
or
dec
push
and
push
repz
mov
xlat
xor
xor
push
ds
outsl
stos
pop
add
jbe
xchg
and
mov
nop
cmc
mov
faddp
sub
dec
iret
dec
inc
into
lods
inc
push
ds
lcall
mov
out
inc
rorl
add
xchg
or
test
pop
push
cmc
xor
adc
iret
lods
ret
xchg
aas
out
fucomi
adc
cmpsl
hlt
ret
mov
push
std
inc
imul
jo
movl
mov
jb
jg
sub
jb
xchg
sbb
or
jge
retw
hlt
out
mov
cmpsb
testb
test
dec
xchg
call
dec
push
or
xlat
je
into
sub
jnp
inc
jo
sbb
mov
sbb
sbb
pop
xchg
in
cmp
cmp
mov
pop
data16
sbb
sub
in
cld
int
in
mov
inc
pop
cmp
mov
dec
jne
mov
push
mov
push
xor
xor
int3
jp
cmp
aad
aaa
mov
out
cmp
iret
mov
cmp
add
sub
lock
xchg
cmc
push
mov
lock
mov
andb
and
hlt
int3
testb
xchg
and
mov
dec
or
xlat
dec
lods
out
and
sti
dec
xorb
fistpll
mov
int
xlat
mov
xchg
rolb
dec
bound
xchg
rcrb
pusha
int
or
test
push
cmp
mov
add
and
or
cli
cmp
or
js
pop
loope
jg
andb
jne
aad
push
dec
pop
fistps
xchg
mov
cli
sub
scas
or
cmpb
adc
cmpl
cmpb
jne
test
ljmp
sarb
mov
stc
adc
dec
push
outsl
outsb
pop
movsb
scas
xchg
add
imulb
jle
pop
mov
orl
pushf
sub
and
shlb
fidivl
xlat
lahf
cmp
sbb
pop
test
and
stos
push
mov
movsb
aas
pop
cs
clc
cmp
insl
out
mov
fisubrl
xchg
movsl
mov
mov
mov
jae
int
cli
and
push
outsl
add
xchg
lahf
insl
leave
cmp
lcall
fdivrp
dec
mov
cmpsb
inc
dec
xchg
fstps
sbb
daa
sbb
cmp
ret
add
mulb
mov
add
insb
lret
mov
jno
mov
mov
xchg
jno
push
add
and
test
ljmp
mov
notl
movsl
lahf
xor
jbe
jnp
int3
movsl
push
test
fldenv
cmpsb
mov
pop
xor
in
and
data16
mov
lods
mov
fidivs
fwait
cmp
in
xor
push
add
cmp
sub
cmpsb
jmp
mov
mov
jmp
shl
jnp
mov
xchg
sbb
lret
xchg
pop
lcall
arpl
aam
cmpsl
insb
lcall
mov
ss
xchg
popa
adc
fwait
test
mov
dec
push
adc
fstps
mov
and
stc
scas
hlt
outsb
nop
or
shll
mov
popf
inc
add
outsb
pop
pop
scas
pop
cmp
ficoml
popf
fwait
in
or
jno
fs
xchg
mov
pop
lods
or
mov
and
into
hlt
jne
ja
or
adc
jp
xchg
adc
inc
and
std
mov
rorl
lfs
pop
sbb
pop
insb
mov
or
xchg
int3
mov
bound
arpl
les
data16
sarb
leave
into
pop
lods
aas
cmp
in
testl
adc
push
xchg
daa
lds
cmp
loop
mov
add
call
lods
popf
stos
mov
xchg
sub
icebp
jae
sahf
scas
shll
jmp
hlt
sbb
ljmp
xor
push
cmpsb
imul
mov
clc
inc
push
adc
jae
movsl
pop
xchg
add
mov
adc
movsl
mov
cmp
loopne
push
mov
add
dec
sarl
push
mov
stc
sbb
xchg
mov
iret
fisttpll
fidivrl
xchg
aam
push
mov
aaa
scas
add
scas
idivl
popa
cs
and
adc
mov
or
mov
addb
adc
test
add
dec
in
cld
sahf
lret
addr16
and
and
ljmp
add
or
sbb
pop
scas
rorl
sub
popf
mov
mov
mov
push
fidivl
movl
sub
inc
or
cmpsb
std
hlt
repz
mov
push
add
sbb
xor
dec
loopne
inc
dec
xor
push
inc
roll
inc
and
pushf
fwait
into
push
cltd
ds
mov
clc
xchg
xor
adcl
push
and
je
flds
xlat
cmp
mov
out
imull
jno
ret
push
xor
mov
add
dec
mov
orb
test
js
mov
mov
add
pop
nop
push
andb
mov
stc
or
dec
aam
adc
cltd
jmp
mov
lods
jb
inc
sub
in
clc
mov
or
ret
aaa
adc
das
inc
pop
jo
sbb
mov
in
data16
mov
sahf
js
movd
lret
mov
adc
mov
and
dec
mov
repnz
jge
sbb
mov
and
stc
xlat
nop
xorb
cmpsb
lret
fdivs
sub
dec
paddb
out
imul
enter
push
test
pop
addb
jp
lret
mov
mov
xchg
sub
int
dec
cmp
sub
cmp
inc
fstps
in
push
cwtl
inc
jae
outsb
fiadds
call
lods
and
popa
test
inc
iret
push
or
sub
jg
scas
dec
sbb
lcall
popf
addl
cltd
push
cmpsb
out
out
push
mov
outsl
jbe
sub
pusha
jle
mov
lea
dec
mov
mov
and
cmc
sbb
loope
cmp
jbe
jle
and
mov
cmp
xchg
sbb
rclb
setb
xor
repz
cmp
pop
jb
mov
ja
adc
sbb
dec
dec
jbe
addr16
sbb
shll
xchg
sbb
les
sti
lret
es
in
addl
rclw
test
les
sub
nop
lret
cmpsb
fildl
movsl
aas
ret
pop
les
pop
inc
std
jl
pop
lock
sarl
sub
jecxz
xchg
int
pusha
imul
or
pushf
daa
out
loop
push
es
jmp
dec
sbb
in
shr
enter
jae
adc
push
and
mov
mov
jecxz
subb
les
adc
pop
ficoms
xor
iret
push
jmp
iret
stos
pusha
fldenv
or
pop
dec
sbb
push
cmpsl
xchg
in
inc
xor
mov
mov
clc
dec
into
mov
mov
xor
inc
repnz
lcall
sbbb
gs
dec
cld
xchg
andl
into
adc
dec
inc
pop
pop
icebp
jmp
inc
sub
das
int
push
fcmovu
addr16
push
loop
sbb
cmp
movsl
out
daa
sub
arpl
cltd
jmp
push
loop
out
pop
scas
lea
inc
int3
and
cmc
hlt
dec
nop
shrb
ss
into
dec
and
popf
fucomp
shll
cmp
fwait
sub
mov
xchg
fwait
int3
cli
ret
dec
and
sub
icebp
pop
outsb
xchg
mov
pushf
pop
push
ror
mov
xchg
and
cmp
mov
sti
pop
js
cltd
and
mov
sub
xor
ds
rcl
dec
fnstsw
sub
cltd
mov
lcall
dec
mov
cld
mov
xchg
int
push
xor
negb
jno
push
add
xor
pop
cmp
adc
loopne
pop
lcall
and
jne
or
test
cmpsl
jo
stc
pusha
cs
fwait
pushf
negb
movsl
negl
push
insb
dec
pop
fsubl
lea
cmp
dec
aaa
pop
add
enter
sub
mov
or
mov
scas
cwtl
cmp
fidivrl
and
cmpl
jbe
out
and
mov
pushf
xchg
in
decl
and
inc
inc
daa
mov
jne
dec
adc
test
testb
into
test
jnp
nop
adc
in
inc
fistpl
pop
and
push
test
dec
or
ror
shll
test
jg
cmpsl
scas
sbb
xor
in
push
dec
lock
lea
outsb
and
xchg
or
sbb
inc
fs
out
lea
xor
loope
or
lock
cmp
pop
or
adc
inc
test
out
fwait
pusha
int
sbb
repnz
xor
in
sub
mov
iret
aaa
cld
adc
push
bound
sbb
test
inc
jle
lea
and
outsl
aaa
mov
pop
out
inc
jmp
xchg
pop
scas
xchg
adcb
ss
notl
in
les
lods
xor
js
xchg
mov
mov
rcrb
sub
scas
sti
rcrb
rcrb
push
mov
orb
arpl
pop
inc
cwtl
pop
je
sbb
filds
sub
xlat
ljmp
fstl
add
scas
fdivrs
cmpsb
push
les
mov
ds
ds
xchg
cmpsb
xchg
fsubs
xchg
leave
mov
lds
xchg
jmp
push
mov
adc
mov
int
clc
mov
inc
dec
stc
addr16
mov
jmp
or
dec
xlat
mov
aam
cmp
pop
dec
inc
pop
repnz
mov
dec
and
fisubrl
inc
jmp
pop
sub
xchg
es
pop
mov
mov
push
jae
pop
hlt
cmp
mov
sbb
test
jbe
nop
jp
add
adc
scas
popa
inc
popf
jle
out
jp
rclb
in
add
loopne
mov
sub
mov
xor
jmp
sarl
fimuls
fistl
sbb
xor
dec
lahf
nop
adc
icebp
mov
cmp
nop
rclb
mov
js
stc
mov
sbb
xchg
test
adc
dec
fsincos
cmp
dec
popf
mov
int
and
inc
movb
sub
stos
inc
xor
inc
lods
cmpl
or
out
push
push
mov
mov
mov
sub
jecxz
cli
and
loopne,pn
cmp
cmp
ljmp
mov
daa
and
pop
jno
mov
shrl
and
in
cld
aas
adc
sarb
out
jb
sbb
push
adc
subb
enter
fidivrl
scas
test
movsb
aaa
mov
jp
ljmp
xor
push
jae
fnstenv
imul
enter
mov
ja
jle
out
das
aam
or
add
push
enter
fisttpll
icebp
mov
pop
sbb
jp
add
ret
mov
sbb
jecxz
xchg
lods
push
outsb
addr16
in
sub
jle
xlat
outsb
push
cmpsb
dec
cmp
pop
pop
aas
out
subl
sbb
pop
mov
popa
jno
subl
xchg
cmp
pop
std
pop
jne
shll
cli
pushf
jo
je
insl
jae
repnz
sahf
xchg
dec
andb
movl
das
movsl
dec
sub
cmp
dec
out
add
jl
push
ljmp
in
cwtl
jle
mov
push
or
pusha
or
inc
in
xlat
stos
test
mov
scas
jo
imul
cmp
gs
jle
mov
adc
fwait
lea
fstps
mov
test
fsubrs
xchg
jmp
dec
and
ss
lcall
pop
scas
sbb
fs
cmp
sarl
dec
sti
nop
jae
mov
mov
cs
and
lods
fdivl
out
adc
fdivr
adc
xorb
mov
pop
mull
and
test
dec
daa
xor
xchg
push
dec
sub
in
push
gs
push
push
leave
test
xchg
jecxz
push
sti
sbb
or
test
mov
cli
mov
sub
sbb
ljmp
pop
inc
aam
jno
xchg
inc
out
or
cmp
cld
lds
jmp
icebp
pop
lea
sub
lcall
faddp
sub
jp
push
scas
adc
lods
and
or
insl
repz
popfw
xor
add
aas
sub
inc
push
adc
lock
jne
enter
xchg
add
shlb
negl
pop
pop
pop
sub
in
dec
and
sbb
pop
xchg
push
sbb
adcb
mov
mov
push
pop
mov
lods
pop
repnz
fnstcw
push
xchg
inc
mov
fwait
and
jmp
adc
cld
mov
ds
cs
les
xchg
mov
lods
movsb
xchg
sar
add
andb
or
jb
loopne
and
roll
mov
adc
aam
pop
in
pusha
sbb
ficoml
imul
into
cmp
idivl
mov
rcr
or
push
adc
je
mov
call
push
out
test
fdivp
inc
ja
add
das
sub
sbb
mov
call
dec
out
shl
mov
sbb
add
dec
sub
and
dec
mov
mov
push
push
and
pushf
fnsetpm(287
les
ret
mov
scas
jle
push
pop
dec
ret
fisttpll
popf
arpl
adc
dec
sub
dec
mov
test
mov
or
shrl
sub
jg
dec
mov
lds
inc
xor
push
sub
fwait
xchg
bound
and
mov
add
lods
jne
sub
out
mov
inc
lds
int
xchg
icebp
std
mov
movsl
and
jbe
cld
pusha
mov
and
test
adc
and
jge
pop
push
fiaddl
adc
inc
push
jo
testb
adc
into
data16
int
push
mov
xchg
xor
mov
xchg
imul
cmp
xchg
shrl
gs
adc
jg
pop
jae
pop
fildll
jge
clc
test
push
popf
repnz
in
out
mov
cli
dec
ds
mov
shr
pop
outsl
xchg
out
aaa
inc
and
xchg
mov
push
insl
mov
xchg
xor
int3
jle
ja
xor
pop
jg
arpl
fisttps
mov
lret
je,pn
bound
jo
les
fsubr
in
repz
push
jmp
data16
or
sti
push
icebp
lcall
pop
and
call
xor
push
hlt
pop
call
push
das
negb
mov
add
push
pop
outsl
icebp
stos
fstl
pop
jae
test
out
and
gs
lahf
xchg
or
sarl
sbb
ret
inc
or
jae
addr16
daa
add
dec
cli
jmp
adc
push
rorb
jns
movsl
divl
sub
lock
xor
jmp
in
jne
inc
lea
nop
mov
xor
adc
and
test
add
pusha
pop
iret
test
and
int
pop
lahf
popf
mov
add
adc
hlt
push
repnz
push
es
enter
pop
test
mov
dec
mov
add
push
aad
adc
pop
jbe
les
les
rcll
inc
ficoms
insb
data16
sti
cmp
sbb
test
jbe
dec
sbb
jo
js
jno
inc
mov
fcomip
mov
ljmp
mov
mov
mov
aaa
cld
mov
and
daa
aaa
lcall
pop
xorl
jnp
pop
push
cmp
and
mov
xchg
sub
movl
and
outsl
in
jnp
mov
sbb
ret
push
mov
jp
xor
sbb
push
in
mov
in
push
mov
inc
inc
test
jb
rorl
adc
sub
adc
cmpsb
arpl
mov
es
mov
push
frstor
repnz
pop
or
jecxz
lret
xor
lahf
cmp
icebp
repnz
sar
std
cmpsl
mov
loope
cmp
xchg
jecxz
add
mov
aam
ljmp
cmp
mov
pop
push
inc
in
sbbb
lahf
jmp
addr16
jp
fldl
rcll
lds
decl
fcmovnu
cmpsb
loop
subps
lcall
arpl
push
lods
aam
les
and
lods
xor
fistpl
out
in
or
push
mov
adc
cltd
test
xchg
aad
int3
mov
out
push
xor
or
and
mov
cwtl
in
aaa
mov
je
ss
pop
sbb
sbb
sbb
and
std
int
in
shlb
sbbl
lret
lahf
sbb
mov
xor
out
les
call
add
cmpsl
xchg
fwait
lods
mov
test
mov
in
popf
inc
mov
dec
pop
and
outsb
fimuls
clc
ss
xor
imul
jle
cmp
adc
gs
mov
push
outsb
mov
xchg
icebp
stos
push
xor
rorb
xchg
mov
push
cltd
pop
decl
out
cmp
nop
stos
cmp
inc
xor
sbb
sbb
mov
jp
stos
sbb
inc
mov
sub
add
adc
ja
mov
sub
xchg
xchg
dec
call
stos
push
xorl
mov
in
xchg
xor
mov
arpl
pop
inc
mov
xchg
mov
and
call
xor
rolb
cmp
xor
push
xchg
rcrb
xchg
adc
js
xchg
sbbl
mov
inc
inc
stos
das
mov
cwtl
xor
lret
sarb
dec
outsb
pop
pop
xchg
arpl
push
sbb
stos
insb
cmp
dec
cmpsb
jp
pop
sub
cwtl
lret
cltd
bound
and
fisubrl
dec
lods
dec
pop
mov
dec
out
pop
and
emms
in
gs
pop
gs
fiadds
gs
nop
cli
pop
dec
push
enter
cmp
jmp
jae
dec
cltd
pop
mov
stos
les
or
push
mov
mov
popf
adc
repz
and
cwtl
std
push
sbb
fcompl
mov
inc
mov
fdivrl
xor
jb
iret
cmp
incl
test
and
aad
roll
movsb
fldl
jae
add
inc
cmp
jle
cmp
or
mov
fs
dec
push
nop
or
xor
test
imul
aas
mov
dec
ds
sahf
sub
into
cwtd
lea
mov
lods
mov
pmaxub
subb
sbb
fs
mov
imul
ret
testb
shl
cwtl
or
or
stos
ds
loopne
out
je
and
insb
outsl
mov
and
mov
je
fcmove
and
xchg
subb
rcrb
mov
loopne
jg
fwait
stos
ds
mov
sub
pushf
imul
js
jbe
lret
adc
inc
imul
sbb
int3
scas
jl
int3
mov
addr16
and
add
xchg
xor
mov
jecxz
push
cmp
lock
ja
repnz
jge
jp
nop
out
mov
and
test
mov
rclb
inc
ds
adc
dec
pop
pop
xchg
and
cmp
test
fbstp
cmp
arpl
das
mov
fs
push
test
cmp
pushf
mov
inc
sbb
in
inc
fs
fiaddl
cmp
test
shr
insl
sub
jne
pop
or
rorb
imul
fwait
push
out
and
addb
out
fcoms
mov
and
les
xor
jmp
bound
loop
clc
jns
ja
xor
dec
sbb
pop
insl
push
push
mov
adc
addl
addb
push
lods
add
call
nop
xor
push
mov
icebp
inc
outsl
mov
push
out
jmp
mov
mov
shll
jb
das
nop
mov
das
fnstsw
pop
arpl
les
inc
lds
in
mov
adc
add
xchg
in
lods
popa
mov
and
bound
sbb
or
nop
cwtl
das
ret
das
or
mov
inc
out
push
jns
loope
inc
decb
xor
jb
xor
nop
push
mov
roll
lahf
or
rclb
jb
xchg
adc
popa
jecxz
adc
bound
xchg
das
ficoms
cmp
cwtl
xor
int3
mov
les
mov
and
mov
out
cmp
leave
xchg
lcall
jno
sbb
lret
enter
out
mov
iret
ss
pop
jp
mov
add
ss
shl
iret
or
lahf
scas
hlt
xchg
int3
add
notl
sub
lret
xor
mov
mov
xchg
jle
cmp
jge
dec
stos
jns
cmp
sub
lret
and
or
add
dec
insb
mov
mov
pop
dec
pop
repz
sub
mov
lret
xchg
hlt
jae
fldl
dec
test
adc
cmp
xchg
fadd
mov
mov
xchg
jle
pop
cmp
imul
fwait
add
dec
or
fcmovb
cmc
lahf
test
cmp
daa
push
mov
test
cld
push
fdivrl
ret
pop
xor
pop
jmp
fmull
or
add
outsb
jbe
cmp
pop
mov
sbb
stos
xchg
imul
call
arpl
jl
nop
js
std
pop
repz
addl
mov
aas
push
dec
sub
cmp
into
ds
sbbb
xor
mov
mov
test
mov
push
cwtl
cld
xor
out
mov
es
inc
push
and
mov
cmp
inc
mov
add
out
sub
daa
ret
out
mov
lea
ds
pop
jbe
in
fcmovne
cmp
inc
mov
mull
out
das
mov
cmp
test
f2xm1
or
stos
mov
outsb
cmp
pushf
xchg
push
mov
lock
scas
scas
mov
inc
pop
mov
mov
mov
notl
test
pop
out
imul
pop
mov
hlt
inc
cmpsb
cmp
lcall
call
mov
adc
hlt
inc
out
pop
lcall
test
or
jmp
fs
jl
cltd
shll
in
add
aad
dec
cmc
sub
mov
push
popf
jo
scas
imul
mov
adc
fildll
das
sub
rorl
loopne
push
addb
enter
jg
mov
mov
ljmp
sbb
jnp
or
mov
pop
xchg
pop
mov
mov
bound
and
iret
int3
fisttps
icebp
sahf
lea
mov
in
pop
sub
sbb
test
sbb
cmpsb
jg
fcomi
inc
sbb
loop
sub
call
inc
ss
or
pushl
rclb
inc
jle
mov
adc
arpl
push
ficoml
hlt
cli
imul
arpl
dec
xchg
sti
or
clc
pop
xchg
ja
lahf
aad
inc
daa
mov
aam
fcoms
outsl
and
xchg
leave
out
push
imul
cmp
popf
mov
stos
js
stc
add
cmp
mov
scas
sbb
inc
aam
rcrl
adc
lods
dec
xor
inc
sbb
push
lahf
inc
ja,pt
data16
mov
adc
ret
into
cmp
cmpsb
hlt
cmp
and
jp
xor
mov
xchg
inc
subl
test
aam
jge
imul
dec
popaw
ja
sub
fsts
lock
call
or
cmc
dec
or
sub
popa
jmp
mov
lret
mov
adc
mov
jo
mov
sub
adc
cmovae
enter
test
testl
int
xchg
stos
fidivrs
fwait
sahf
mov
inc
lds
loope
or
insl
dec
mov
mov
cld
sbb
shr
adc
pop
jl
xchg
push
mov
pushf
lret
lods
pushf
sbbl
leave
jle
mov
adc
out
cmpsl
divl
imul
pop
frstor
lret
jno
jp
cs
fldl
gs
jne
push
jo
dec
and
sti
add
lds
mov
mov
dec
add
dec
pop
mov
mov
lods
in
sub
sub
das
enter
cmp
pop
jp
xchg
int3
lahf
cmp
inc
mov
pop
notl
je
pop
movsl
andl
in
mov
imul
mov
push
pushfw
loopne
or
and
rcrb
out
sti
push
xchg
je
lcall
and
cld
lds
cli
mov
push
mov
pop
sub
out
dec
sbb
cmp
push
aam
xor
lock
data16
lret
cld
lret
mov
and
cmp
daa
jnp
mov
scas
mov
mov
mov
xchg
lock
push
cmp
and
pop
sub
insb
js
repz
sarb
lock
ja
or
jle
mov
loope
sbb
adc
in
into
jmp
test
out
inc
stc
jl
sbb
clc
mov
repnz
out
and
mov
bound
mov
aas
int3
pop
dec
xor
mov
daa
sub
dec
adc
out
aam
arpl
scas
les
dec
cmp
ljmp
iret
sub
test
pop
mov
sub
fcomps
mov
pop
pushf
addr16
lods
lods
popa
mov
faddp
shlb
fsubrl
push
cmp
xor
insb
pop
int3
aaa
push
es
mov
cld
pop
lock
int3
push
dec
cmp
stc
fxch
outsl
inc
add
mov
or
mov
paddsw
mov
pop
outsb
xor
movsb
dec
nop
repz
push
push
pop
jp
mul
pushf
mov
nop
in
sbb
repz
and
inc
popf
pop
cmpsl
loopnew
lahf
imul
xchg
cwtl
shrb
mov
sbb
movb
jns
xor
xchg
push
testl
mov
push
mov
jp
jecxz
pop
xchg
fbstp
mov
inc
xchg
std
outsl
pop
data16
gs
mov
and
ret
inc
scas
rolb
repz
inc
rorb
imul
movsb
push
out
cmp
out
femms
add
push
movsb
dec
push
js
or
out
outsb
pop
arpl
in
and
cmp
cmp
out
mov
mov
lock
cmp
je
aad
and
cmc
mov
sbb
fimull
cli
cmp
pop
jmp
mov
mov
je
mov
and
addr16
stos
pop
mov
in
pusha
pop
jg
loope
repnz
sub
lahf
xlat
ret
jg
adc
inc
fdivr
jb
push
add
cmp
sbb
jno
loope
cmpsb
ret
pop
jle
add
pop
jl
push
or
adc
jae
call
jnp
pop
mov
mov
jne
and
insl
hlt
and
jbe
gs
in
xchg
push
and
lea
dec
fmull
push
ljmp
mov
loope
jmp
pop
lock
mov
addr16
in
xor
insb
lea
mov
lods
sbb
test
fmuls
enter
pop
out
hlt
push
fwait
data16
xchg
xor
popa
fldl
mov
dec
inc
cmp
or
mov
cmp
push
stos
pop
outsb
xchg
pop
ds
scas
xchg
sub
jns
orl
ret
push
mov
or
xor
add
loope
loop,pt
out
mov
cwtl
xchg
mov
push
mov
cmpsb
jno
lret
inc
cwtl
enter
repz
fwait
xchg
es
inc
push
push
jnp
mov
aad
loope
mov
and
in
add
mov
or
pminsw
or
adc
mov
aas
test
xchg
adc
mov
loop
mov
dec
xchg
mov
andl
shrl
loop
push
adc
sbb
push
fs
negl
stos
mov
ret
dec
jge
in
std
push
xchg
outsb
inc
adc
outsb
out
idivl
adc
test
fs
fisubl
ret
cmpsl
dec
add
les
cmpsl
imul
sbb
sti
pop
and
lret
mov
rcrl
je
nop
add
mov
leave
out
push
push
inc
jnp
jnp
cwtl
jne
jge
test
loope
mov
cs
repnz
xchg
aam
stos
sbb
cwtl
es
jmp
xchg
iret
jno
cs
dec
int3
mov
nop
cmc
jno
cltd
addb
mov
sub
jno
out
cmpsl
xchg
lret
sbb
orb
mov
push
xor
ret
jae
xor
adc
negb
sub
sub
cmp
mov
fwait
in
mov
notl
jne
sbbl
fidivrl
pop
mov
fldt
and
xchg
dec
sub
cli
lcall
adc
cltd
sbb
inc
adc
and
mov
mov
jno
loopne
cs
mov
adc
xor
je
mov
or
dec
lahf
inc
insl
xor
js
in
test
out
cltd
sub
call
dec
std
arpl
mov
or
ret
mov
mov
dec
shl
jo
xchg
adc
push
ljmp
cmc
cmp
outsl
cld
sub
push
xchg
stc
dec
sub
imul
clc
jp
add
nop
loopne
push
mov
jp
and
mov
jae
jl
cli
dec
lea
and
adc
movsl
ffreep
pop
mov
lahf
pop
push
sub
xchg
or
lret
insb
push
add
repnz
das
movsl
ljmp
lea
fsubrl
jns
fsub
sbb
jl
mov
lea
adc
sbb
cli
pop
mov
push
icebp
int3
adc
pop
and
xor
lret
rclb
dec
or
addr16
sti
stos
sub
sahf
mov
push
jp
das
bound
lods
jae
add
fistpl
dec
and
and
fiaddl
scas
fildll
loopne
aad
test
adc
movsb
mov
and
pop
sbb
or
xlat
stos
pop
in
push
pusha
dec
add
or
inc
mov
xchg
push
push
aas
xchg
mov
cmc
in
mov
xchg
hlt
xchg
mov
aad
cmp
pop
loopne
mov
repz
xchg
add
pusha
xchg
jp
int3
in
int
dec
iret
nop
ja
adcb
repnz
shrb
pop
call
adc
fnstenv
cmpsb
xor
and
mov
mov
jge
es
xchg
mov
imul
outsb
mov
push
repnz
test
xchg
sbb
cltd
jb
fs
mov
in
pop
clc
ds
aam
mov
jne
loop
xor
inc
mov
cld
daa
jge
adc
inc
inc
test
push
dec
and
std
fdivs
mov
cltd
mov
xor
xchg
pop
sbb
mov
pop
push
add
stc
scas
imul
adc
testl
test
lds
mov
push
test
stos
push
bound
addl
mov
jge
mov
fimuls
scas
push
pushf
pop
mov
aaa
cmpsb
push
cltd
cld
mov
push
nop
subl
jo
add
jb
pushl
popf
rcrl
loop
sub
std
es
add
adcb
mov
out
movsl
cmpsl
inc
icebp
call
mov
repnz
mov
sti
mov
push
out
sub
stos
xor
inc
pop
jae
sub
jno
fsubs
fnsave
inc
sbb
mov
fists
xchg
xchg
mov
cmp
jne
cmp
in
xchg
add
sbb
xor
lea
gs
mov
std
loopne
lret
mov
ljmp
dec
je
lahf
iret
jecxz
rorl
data16
aad
mov
add
stc
mov
pusha
dec
loop
lret
sub
jmp
sub
pop
cmpsl
and
lea
nop
in
ss
mov
scas
in
push
repnz
and
leave
push
sbb
sub
in
mov
repnz
push
pop
mov
xchg
aad
ja
mov
call
mull
and
insb
or
sbb
sti
inc
xchg
fidivs
cmp
xchg
xor
mov
xchg
jmp
add
cwtl
mov
xchg
insb
je
fnstsw
mov
xlat
out
pushf
jno
xchg
jnp
cmp
xor
and
test
xchg
jae
mov
cs
ss
mov
dec
call
ficomps
out
xchg
loop
in
dec
xor
push
lods
pop
js
or
test
cld
mov
imull
in
jne
mov
stos
sbb
mov
in
mov
dec
cmpsl
and
lds
out
pop
xchg
xchg
jg
ss
xchg
mov
jmp
in
inc
aas
xlat
cmpl
nop
push
loope
inc
aam
xchg
adc
sahf
inc
dec
inc
mov
outsb
and
cs
jns
sbb
xor
inc
shll
add
stos
je
and
fstps
cltd
scas
lds
push
mov
imul
test
pop
fnstcw
mov
xchg
xchg
clc
aam
dec
data16
clc
es
outsb
adc
adc
inc
ret
cmp
outsb
xor
repnz
pop
aaa
and
mov
inc
in
cwtl
cld
into
and
pop
out
xor
es
xchg
negb
pop
aam
add
cmp
cmp
pop
pop
mov
fcmovnb
mov
popa
insl
repz
ljmp
loope
mov
cmc
xchg
test
cli
dec
jo
mov
adc
xchg
mov
jns
in
add
out
cmc
xchg
insb
sbb
push
imul
aaa
mov
insb
adc
ss
push
adc
xor
shll
add
fmull
js
addr16
ljmp
clc
xor
mov
js
and
outsb
adc
ja
insl
test
fdivrs
xchg
jbe
mov
dec
sbb
inc
mov
gs
testl
rcrl
insb
xlat
sbb
cmp
imul
pop
testl
and
mov
enter
jl
jge
mov
data16
dec
push
xor
push
push
or
js
popa
leave
or
xchg
sbb
int
dec
popf
push
and
add
arpl
nop
insb
pop
f2xm1
int
inc
fs
or
mov
outsb
out
jecxz
hlt
cmpl
sti
jmp
insl
popf
jne
mov
cli
loop
mov
in
mov
xchg
in
movsl
adc
loopne
mov
dec
jp
mov
xlat
outsl
sbb
jbe
ror
test
ret
pop
xchg
bnd
pop
push
push
lcall
jge
pop
out
sti
ret
dec
fildll
mov
inc
push
add
mov
std
dec
jnp
mov
fcomp
jge
lret
push
call
mov
mov
pushf
and
xchg
sub
arpl
std
mov
stc
rclb
cmp
or
shr
mov
ljmp
and
mov
mul
xlat
and
xchg
fisubrl
clc
ficompl
adc
out
jnp
inc
inc
movsb
mov
sbb
xchg
inc
pop
mov
inc
rcll
aas
lea
rorb
add
aad
je
ss
mov
ss
aad
fldt
and
jecxz
push
test
or
mov
fmuls
aam
jmp
pop
popa
jle
sub
xor
jbe
and
lods
pop
dec
movb
sbbl
mov
mov
fldl
jb
je
jb
aam
icebp
jmp
pop
or
inc
cmpsb
loop
cs
and
lods
mov
push
insl
sti
movsl
xor
out
mov
inc
stos
enter
fistl
filds
cltd
pop
aaa
adc
dec
inc
sti
lock
dec
pop
cld
mov
ret
mov
sub
ljmp
dec
add
jns
cmp
mov
jne
adc
stos
add
dec
les
dec
idivl
out
cmp
pop
mov
and
cmp
ja
ja
cmp
xchg
jg
out
loopne
cltd
sub
dec
pusha
fucomp
mov
sbb
jbe
sub
sub
mov
std
int
xchg
into
mov
out
mov
push
clc
cmp
adc
nop
rcll
mov
cmpb
fstps
lahf
loope
fdivs
and
pusha
hlt
das
loope
das
mov
or
pop
mov
shrb
push
xchg
push
mov
jmp
fwait
mov
inc
mov
jno
fnstsw
xor
movups
pop
xor
fcmovu
lock
sar
xchg
sub
push
and
jbe
imul
push
push
xorl
lds
sub
test
dec
lcall
push
fcmovnbe
cmp
jnp
dec
hlt
test
cli
push
and
jnp
xorl
inc
or
push
add
push
inc
adc
mov
xor
std
sub
loop
add
mov
and
mov
and
add
dec
sbb
enter
add
adc
movsl
jp
mov
aad
jno
int
xchg
lret
or
lret
popf
jae
xor
jae
btr
pop
sub
aam
dec
jmp
cmc
pop
sbb
and
mov
leave
mov
or
ret
ret
mov
cmp
iret
outsb
insb
out
addb
lods
add
clc
loopne
ds
lock
xchg
sbb
xor
push
lret
fwait
mov
mov
cmp
pusha
dec
lock
pop
lds
xchg
notb
mov
outsl
xor
cld
repz
lock
mov
dec
fs
neg
push
cmpsl
cmpsb
pop
lret
dec
gs
in
das
xor
cltd
aad
pop
lds
pop
data16
cmpl
add
sub
xor
faddp
jmp
jp
int
mov
pop
inc
adc
shlb
adc
mov
sbb
inc
jnp
test
loopne
jno
sub
xchg
push
and
sbb
pop
movsl
sbb
sahf
inc
and
mov
loopne
and
cmp
test
arpl
mov
jno
push
push
mov
loopne
ljmp
push
scas
jle
dec
fs
in
sub
lcall
mov
imul
xor
sarl
mov
xor
fidivl
push
ss
inc
fiaddl
popa
adc
pop
jle
xchg
testl
pop
jle
in
popa
ds
es
loopne
subl
lcall
ja
jle
movsl
insb
mov
xor
xchg
pop
and
pop
xchg
lods
js
sbb
xorl
test
lds
repz
rorb
mov
aad
mov
mov
push
out
fwait
lock
jmp
push
outsl
repnz
dec
push
imul
aad
nop
xchg
nop
fildll
mov
dec
push
pop
loop
jmp
lcall
stc
pop
mov
lret
repz
lret
jmp
mov
or
ret
jp
ss
cmp
cmpsb
add
push
xor
fildll
imul
js
lret
stos
mov
repz
mov
jnp
pop
les
mov
sub
add
xchg
mov
adc
mov
xor
int3
cmpsl
and
rorb
push
or
adc
jp
and
shufps
int3
push
bound
nop
push
aad
popa
pusha
insl
test
lret
jmp
clc
les
xchg
mov
jmp
pop
add
jecxz
mov
adc
pop
sahf
inc
test
shll
out
sbb
xor
scas
dec
std
lea
push
sbb
jp
fstl
leave
add
je
negl
mov
pop
int3
in
dec
jmp
ds
in
pop
out
es
cltd
in
lods
test
mov
mov
scas
add
shll
or
jge
mov
jg
add
xchg
subb
or
mov
sub
push
cmp
or
and
fcompl
push
outsl
dec
jae
push
into
sbb
cmp
dec
lcall
sbb
xchg
jecxz
inc
aad
rcl
sub
nop
cltd
mov
in
cld
push
mov
pop
or
pop
or
cmp
sub
mov
stos
jae
xchg
insb
addb
jns
mov
jmp
loop
sbb
mov
xchg
adc
pop
call
and
mov
sbbl
sbb
leave
pop
sbb
popf
mov
call
xchg
and
repz
test
inc
arpl
repnz
sub
lea
fwait
cmc
jmp
xor
js
add
add
inc
fiadds
push
push
sub
mov
out
xor
popf
fnstenv
loop
into
inc
fst
xchg
add
xor
or
les
stos
jno
fsubs
out
and
push
pop
je
dec
push
jo
jo
js
pop
stos
jbe,pn
sahf
ficoms
sub
cld
pop
pop
cmp
sub
mov
iret
jo
pop
pushf
and
xchg
mov
stc
mov
aad
xor
imul
push
test
aam
push
test
xchg
add
cli
fstl
inc
mov
cld
jo
outsl
outsl
xor
aam
pop
movsb
rolb
cld
je
inc
mov
ret
xchg
notl
mov
clc
in
cmc
mov
xorl
out
sbb
add
hlt
test
and
xor
sub
repz
fwait
xchg
and
lea
xchg
sbbb
ret
cwtl
icebp
out
xorl
jg
aam
stc
inc
outsl
or
repnz
fsts
shr
push
aaa
add
jmp
push
xchg
lret
pop
or
dec
jo
js
adc
inc
or
jecxz
cwtl
pop
int3
outsb
icebp
jno
sbb
repz
xchg
jecxz
clc
movsl
mov
fiadds
pop
leave
or
jb
mov
shll
pop
imul
out
insl
mov
xlat
lcall
adc
cmpxchg8b
adc
movsl
out
pop
or
imul
aam
adc
or
ds
sti
cmc
mov
fs
jbe
jns
or
mov
jge
popa
sub
stos
xor
cs
fisttps
test
push
mov
scas
imul
scas
mov
movsb
xor
test
jmp
sbb
cmpb
push
lds
dec
dec
jmp
xchg
call
fmuls
mov
mov
divl
mov
out
xchg
pop
in
adc
add
clc
cmp
cmp
mov
rolb
xchg
mov
pop
mov
jo
and
ja
iret
inc
mov
add
insl
dec
jge
sti
aas
cmp
outsl
jo
add
xor
addr16
subl
mov
loop
mov
ss
aad
popf
lret
jns
sub
test
dec
or
ror
icebp
int
pop
dec
xchg
push
je
sahf
outsl
sub
mov
insb
jle
stc
mov
sub
pop
and
jecxz
pusha
or
out
iret
jge
jnp
subb
scas
shrl
sbb
jns
int3
out
dec
in
dec
insb
mov
sti
daa
jp
mov
dec
fwait
es
adc
dec
pop
insl
push
jbe
out
dec
adc
insl
dec
dec
enter
mov
add
test
pop
add
in
lret
pusha
push
out
int
and
mov
scas
add
icebp
sbb
adc
mov
popf
fdivrs
out
sti
add
sub
xor
sbbb
aaa
jnp
pushf
jne
adc
jl
cmp
scas
daa
push
cmpsl
xor
sub
dec
dec
shlb
xor
add
or
add
mov
push
test
in
jg
jp
popf
push
dec
jl
loop
rorb
xor
jnp
loopne
jns
in
or
mov
pop
int3
out
adc
mov
test
pop
cwtl
lret
lods
movsb
mov
aad
xchg
mov
push
gs
xor
pop
pushf
lods
orb
outsb
cmp
pop
test
std
iret
jle
and
pop
or
cmp
push
stc
test
push
fsubrs
xor
sahf
addr16
out
pop
lret
lahf
ss
fs
or
movsb
push
push
xchg
push
pop
xor
jp
decb
ljmp
ret
adcl
inc
sub
pusha
outsl
xchg
pop
rcrl
mov
inc
jge
lock
les
mov
pop
addb
lret
pop
jo
xlat
mov
sti
decl
stc
sbb
flds
mov
sub
sbb
lcall
xchg
pop
loopne
int3
fdivl
cmc
insb
mov
mov
cmc
cs
and
stos
sub
jae
dec
push
pushf
sbb
cmp
movb
push
loop
arpl
sbb
lods
inc
sti
rcrl
or
fldenv
rclb
push
fs
les
mov
mov
jge
in
cmp
push
hlt
fcmovbe
outsl
xchg
call
push
outsb
inc
mov
fs
nop
js
jne
push
xor
imul
dec
cmp
daa
and
xchg
scas
pop
cld
stos
adc
negl
popa
mov
cld
aam
sub
xchg
daa
xor
adc
repnz
mov
lret
adc
lret
mov
inc
bound
mov
pop
add
add
test
decl
ret
imul
inc
clc
cmp
adc
mov
clc
push
sti
int
les
cmpsl
ja
jo
mov
cmp
adc
sahf
shll
popa
jge
dec
aas
pusha
pop
mov
loop
adc
push
pop
das
addr16
cmp
out
xchg
out
xchg
movsb
fisubl
imul
andl
xor
add
sbb
dec
jb
lock
scas
jns
mov
sbb
xchg
cld
andl
inc
cs
pop
or
adc
xchg
push
ds
and
jno
jg
push
mov
dec
pop
mov
or
adcb
xchg
hlt
in
dec
adc
sahf
dec
daa
imulb
add
or
mov
movsl
lock
ljmp
aas
or
jmp
push
scas
nop
xor
xor
leave
icebp
mov
sub
out
es
and
inc
pop
cmp
cli
sbb
inc
mov
mov
mov
nop
dec
ds
add
xchg
enter
fisttpl
push
sub
or
push
sub
inc
popa
in
xchg
sbb
inc
xor
sbb
jp
add
addr16
cwtl
jge
out
aas
xchg
dec
nop
lret
push
add
xchg
fisubrs
xchg
ret
test
aaa
je
inc
add
inc
popa
incb
ljmp
call
sub
rep
jne
push
ja
xchg
cmp
xchg
in
and
sbb
cmp
xor
imul
movsl
mov
mov
and
nop
xor
pop
pop
or
mov
ja
int3
popa
or
loopne
call
and
jmp
or
pop
push
push
inc
ljmp
adc
packssdw
sahf
enter
filds
inc
aam
mov
jp
fstpl
repnz
mov
lds
movsb
rep
dec
cmc
daa
pusha
inc
fistpl
dec
and
stos
enter
sbb
lds
and
add
add
mov
adc
loop
add
xchg
jg
ss
stc
cmp
mov
push
cltd
jno
pop
loope
mov
fs
out
neg
or
adcl
imulb
bound
push
loope
nopl
adc
mov
in
jle
insb
imul
xchg
test
jg
jg
jnp
cld
int3
adc
lret
sbb
or
lret
mov
adc
ss
dec
adc
bound
add
into
out
pop
jns
scas
mov
lcall
ss
imul
xchg
dec
dec
std
addb
lea
mov
cwtl
cmp
xor
lods
aaa
test
push
enter
cmc
jno
fldl
mov
jae
sbb
es
pop
mov
sbb
sbb
sub
add
inc
das
pusha
jb
lahf
repnz
jge
mov
mov
gs
sarl
mov
nop
sti
adc
jb
mov
push
xchg
rorb
mov
idivb
icebp
mov
dec
popf
jnp
jae
add
test
sub
int3
add
je
inc
or
je
xchg
pop
xor
adc
sub
sbb
or
inc
sbb
mov
stos
xorb
aam
adc
xor
hlt
in
subb
adc
jns
pop
js
jns
icebp
fnsave
paddsw
or
push
push
adcb
fldt
les
inc
out
jl
mov
sub
out
mov
cld
dec
out
dec
xor
rclb
jbe
rcll
inc
ret
mov
hlt
aaa
push
sbb
mov
pusha
sub
pop
lods
mov
stos
sub
test
or
add
jle
imul
shlb
hlt
outsb
pushf
es
movsl
jne
mov
arpl
inc
mov
in
xor
ss
sahf
repz
test
xchg
pop
bound
mov
cwtl
mov
dec
and
inc
rcpps
fdivrl
mov
adc
aam
xor
cmpsb
mov
pusha
outsl
mov
jae
pop
xor
lock
cmp
mov
dec
pusha
push
movsb
xor
stos
mov
dec
shl
jle
xchg
in
xchg
sbb
xor
hlt
add
jp
sub
iret
inc
inc
ds
out
xor
mov
push
test
dec
aad
sbbl
adc
aam
inc
fsub
clc
and
jmp
pop
mov
dec
imul
jnp
orb
divl
jno
ret
adc
dec
scas
push
cmpsb
and
int3
xor
inc
ds
add
cs
fldl
sub
sahf
cmpsb
cltd
cmc
pop
lods
out
rorl
mov
or
xor
xchg
adc
mov
mov
test
test
inc
mov
int
push
jg
mov
bound
and
push
ds
jb
mov
bound
jnp
aad
js
jae
cmp
test
add
inc
test
iret
jg
mov
cmpsl
repz
add
inc
je
mov
cmp
add
lock
lods
mov
sti
jl
loop
in
fadd
addr16
in
add
cli
jmp
test
sub
sbb
into
nop
js
mov
popf
cmc
dec
dec
sti
cld
adc
adc
and
dec
pop
lcall
rcl
sbb
pop
call
cmp
xchg
pop
mov
jns
push
in
pop
adc
pop
cmp
dec
inc
fwait
aam
push
aas
fsubs
xor
pushf
mov
fs
adc
insb
ror
pop
xchg
push
mov
es
mov
push
inc
jns
insl
int
hlt
jb
inc
outsl
or
inc
cmp
enter
repnz
mov
inc
dec
fdiv
shl
fidivs
pop
jg
push
pop
gs
jl
gs
sti
and
xor
xchg
in
mov
or
pusha
or
pop
add
imul
je
or
or
xchg
js
movsl
cmp
sbb
push
and
mov
jp
add
sub
cmp
aas
insb
insl
lahf
ret
ret
mov
cltd
bndldx
jno
mov
cmp
mov
in
sub
fwait
xchg
dec
adcl
inc
nop
dec
test
mov
iret
add
pop
jne
mov
mov
add
and
inc
stc
stos
jl
je
xchg
or
mov
lcall
dec
cmp
lea
jnp
lods
sbb
sub
hlt
mov
cmpsb
sub
cmp
add
adc
popa
subb
push
add
movsl
jg
push
mov
call
xlat
sbb
xor
mov
outsl
push
jle
pop
xchg
or
setl
xchg
arpl
mov
or
mov
test
sub
js
popa
push
mov
mov
sub
int
cld
mov
push
lods
sbb
std
xchg
jp
push
js
push
pop
sti
sbb
dec
ffreep
fwait
ljmp
push
les
imul
pop
out
enter
mov
mov
outsl
sub
mov
fadd
cmpsl
loop
cmpsb
and
mov
pop
adc
movsl
out
nop
dec
cmpsb
popa
xor
xchg
aaa
fstl
aad
and
aas
sti
loopne
dec
repnz
jno
xlat
fdivrs
mov
jo
jecxz
mov
ss
and
pop
jne
popf
aas
jns
out
dec
repnz
pshufw
cmpsb
mov
mov
push
popa
xchg
or
cmp
jnp
fldl
cmp
mov
jl
adc
lahf
data16
dec
mov
sub
jle
lods
popa
sub
stc
and
mov
mov
mov
push
loopne
cmp
scas
add
dec
lcall
fistpl
sbb
pusha
and
in
ss
mov
jbe
cmp
and
in
subl
out
mov
loope
jnp
push
push
sub
push
jns
inc
mov
fs
xlat
andb
ljmp
dec
stos
sbb
push
hlt
aad
jp
xchg
cld
icebp
popf
imul
out
inc
pop
stos
lahf
inc
jb
gs
mov
movsb
int
icebp
das
jmp
fs
mov
jmp
xor
or
cmpsl
scas
insl
inc
lret
xor
xlat
push
lea
in
jns
jbe
mov
sbbb
pop
ljmp
jle
shll
in
push
out
pop
push
add
jno
cmp
adc
mov
inc
in
and
pop
loop
push
xor
cmp
fstps
cmpsb
mov
push
add
jge
cmp
xor
sbb
mov
hlt
enter
test
orb
enter
stos
ds
jge
into
ret
pop
fcoms
add
pop
adc
xor
or
push
dec
mov
fld1
leave
cmpsl
stos
and
loope
es
movsl
fnstcw
repz
or
cld
jb
rcl
repnz
pushl
mov
push
hlt
xchg
jle
int3
fimuls
insb
inc
xor
xchg
xchg
lahf
mov
jns
loop
and
cmp
jle
xor
jecxz
or
add
fldt
sub
iret
test
xchg
mov
cli
sahf
adc
push
stos
mov
mov
dec
xchg
and
mov
pusha
les
dec
pop
adc
push
cs
xchg
aam
outsl
cmp
les
adc
jb
sbb
cmpb
rcrb
fcomip
adc
mov
mov
xor
jp
imul
mov
mov
mov
cmc
inc
daa
jb
push
cmc
and
bound
in
fdivrp
xchg
add
or
data16
or
loop
inc
lret
sbb
repnz
push
enter
dec
loop
sbb
or
or
add
pop
mov
xorb
ffree
dec
push
lea
pop
mov
jecxz
pop
popf
pop
or
pop
mov
xchg
test
jp
jg
sbb
mov
pop
enter
popa
outsb
pusha
add
insl
xlat
xor
rorl
and
xor
push
pop
push
add
adc
and
inc
sbb
xor
mov
add
dec
push
addl
int3
cmp
mov
mov
xor
or
mov
shlb
xchg
gs
outsl
jp
mov
sub
inc
dec
invd
lar
sub
pop
cmp
push
test
test
arpl
mov
adcb
sar
xchg
movsb
pop
jl
sbb
dec
push
jo
stos
daa
icebp
sbb
xor
push
pop
int3
inc
xchg
xchg
dec
in
dec
faddl
add
mov
xchg
inc
jnp
push
neg
push
shrb
mov
aad
or
push
xor
mov
xchg
pop
push
mov
lock
mov
jle
scas
xchg
pusha
shll
pop
jnp
jp
stc
xchg
inc
mov
mov
into
popf
xor
fwait
testb
adc
inc
inc
and
out
or
std
or
xchg
enter
pop
or
ficompl
sbb
add
jge
les
mov
lods
lcall
imul
test
or
add
out
insb
push
mov
repz
fstl
or
add
sbb
or
jno
jmp
cwtl
daa
je
or
or
lret
fdivrs
jae
ljmp
xchg
test
aaa
andl
cwtl
mov
push
inc
push
lods
fdivs
lds
cltd
mov
inc
movsl
sub
lahf
push
and
std
or
ss
sub
jge
or
dec
mov
mov
adc
lahf
test
jmp
cmpb
jecxz
jnp
jnp
or
test
cmpsl
mov
mov
das
and
jl
xor
ficoml
fldcw
xchg
dec
rcr
pop
popa
push
push
dec
lock
xchg
pop
sbb
dec
dec
and
inc
sbb
mov
cmp
int3
jbe
sar
push
test
pop
cmpsl
imul
lods
mov
jp
inc
mov
insl
arpl
mov
stos
imul
mov
jno
xlat
mov
adc
mov
jle
in
jl
push
insb
clc
mov
mov
scas
pop
sti
stos
dec
fadd
lidtl
rclb
jns
int3
imul
jno
aaa
inc
pop
insl
scas
cmc
pop
push
mov
mov
js
sbb
bound
mov
lods
xchg
pop
add
movsb
mov
or
cmp
ss
mov
scas
fcmovnb
xor
or
ret
and
push
sub
movsl
sub
xchg
imul
iret
add
lods
lds
lahf
dec
out
sub
scas
gs
and
std
push
fsubrl
mov
cmp
cmp
and
sbb
dec
jg
stc
lret
out
fimull
sbb
or
xchg
fbstp
movsl
jno
xor
mov
sub
insl
fs
or
adc
enter
pushl
xor
push
push
fcmovbe
xchg
into
movsb
push
ficoml
mov
cmpsb
call
clc
cmp
aas
xor
push
int
clc
pushf
inc
insb
inc
insl
outsb
loopne
stos
xor
mov
aaa
cwtl
add
repnz
push
ret
sub
add
xchg
push
nop
mov
adc
sbb
outsl
dec
scas
test
repz
cmc
inc
dec
mov
rcl
xchg
dec
adc
out
rorl
push
push
aas
sbb
push
fs
out
dec
pop
mov
clc
mov
data16
rclb
jl
es
xchg
pop
push
inc
lods
and
inc
or
cs
mov
addr16
sub
xor
cltd
mov
sbb
test
pop
xchg
ret
mov
xor
add
sub
mov
adc
push
out
jb
es
xlat
sub
scas
test
sub
les
cmp
mov
test
push
xor
pop
adc
fcmovu
xor
adc
arpl
flds
push
xchg
movsl
adc
dec
fmul
push
out
imul
mov
in
mov
pushf
jbe
or
test
int
push
push
inc
mov
pop
in
sti
mov
and
xorb
lret
fidivl
mov
ss
xchg
sub
add
xchg
add
push
mov
xlat
mov
test
cmpsl
mov
xchg
add
and
inc
adc
or
popf
popa
cli
hlt
in
cld
jns
test
sbb
mov
sub
mull
xchg
call
cmc
je
mov
sub
fxch
icebp
addr16
in
and
xchg
adc
mov
sub
mov
test
leave
mov
adc
scas
orl
nop
lret
or
push
leave
dec
inc
mov
enter
cltd
push
shll
mov
xor
js
ret
das
push
cmpsb
mov
sbb
xorl
add
push
andl
cmp
fisttpll
rorl
jo
lret
mov
adc
jp
pop
clc
rcll
stos
push
aad
movsb
xchg
lock
mov
adc
push
or
add
loope
sbbl
jge
andl
pop
jmp
out
movl
sti
pop
sahf
aas
jmp
xchg
dec
bound
insl
test
inc
ret
jno
add
push
xor
xor
xchg
fcompl
mov
xchg
aad
pop
out
sbb
or
pushf
movsl
inc
test
push
inc
subl
das
cmp
or
mov
insl
movsl
mov
sub
sub
fstpt
add
out
pop
mov
jae
add
mov
sub
jmp
jno
xchg
scas
cmp
ss
sub
cmpsb
jne
jnp
outsb
aam
fildl
aas
aad
stos
mov
mov
sahf
xor
pop
mov
push
sbb
movsl
push
dec
cld
out
shrl
cltd
mov
loop
mov
mov
mov
xor
xor
stc
cwtl
sbb
xchg
imul
sbb
or
out
adc
insb
xor
inc
fcmovu
fcoml
enter
pushf
inc
adc
bnd
mov
jg
ret
dec
jg
xchg
cmpsl
jns
test
cmpb
scas
push
jge
aas
dec
push
and
jns
or
clc
sbb
aam
jnp
pusha
mov
push
mov
jecxz
insb
or
inc
les
shl
adc
roll
insb
dec
data16
pop
addr16
outsl
or
pushf
movl
fsub
addr16
adc
jb
ret
sbb
out
mov
and
or
std
test
int
push
outsl
mov
jno
jb
imul
push
jne
pop
sbb
push
adc
push
call
shlb
mov
mov
in
cld
pop
mov
into
jns
imul
test
pop
mov
in
ficomps
arpl
sub
cmpsl
faddp
jecxz
xchg
movsb
xchg
in
sub
cwtl
stc
cs
jae
or
dec
xchg
and
xchg
test
push
mov
pushf
add
xlat
sub
seta
sub
stc
mov
fldl
jmp
mov
jns
popa
sub
imul
pop
push
popa
mov
jne
push
and
add
insb
call
repnz
push
jl
add
pushf
out
shll
aam
leave
pop
inc
imull
ror
loope
inc
push
cmp
or
test
or
mov
dec
jns
push
js
leave
lods
dec
pop
lock
scas
loopne
dec
jns
mov
xor
xor
sbb
out
push
cs
push
pop
or
add
mov
cmp
pop
aad
int
adc
rorb
ds
mov
push
imul
and
jl
ret
mov
lcall
add
jnp
roll
push
shlb
je
push
arpl
cmp
dec
pop
das
jns
sub
scas
je
mov
adc
dec
jns
adc
inc
push
sub
add
stos
jge
adc
jnp
push
xchg
inc
or
jo
mov
in
inc
dec
enter
inc
mov
lahf
es
add
lods
aad
loope
imul
ljmp
aaa
test
outsb
push
in
es
popa
xor
in
push
push
out
rcrb
adc
pop
pop
push
cmc
insb
repz
movsb
jmp
fs
push
jl
arpl
imul
xchg
inc
int
pop
flds
mov
push
rcll
adc
pop
inc
mov
movsl
mov
xchg
in
test
or
aas
mov
or
popa
shl
add
xchg
cmp
icebp
mov
lods
arpl
mov
jp
push
test
outsb
sti
scas
xor
imul
int
dec
sbb
and
sbb
inc
push
cmp
int3
pushf
adc
push
xchg
push
cmpsb
test
scas
mov
test
stos
pop
push
flds
xor
pop
or
pop
loop
add
negl
movsl
out
ljmp
cli
adc
setno
outsl
jnp
add
adc
mov
xchg
ret
decl
imul
dec
rcll
ljmp
outsl
push
xchg
xor
testl
push
fldcw
adc
gs
fdivrs
repnz
fstps
push
add
xchg
inc
cmp
mov
push
mov
dec
rorb
xchg
jl
mov
xchg
xchg
mov
mov
ror
test
mov
enter
lahf
je
not
mov
je
cwtl
xchg
cmp
fbld
aaa
bound
cmp
fs
push
je
out
test
sbb
pop
cmpsl
mov
jae
ret
aas
mov
push
lods
cmc
dec
xor
adc
mov
in
or
rclb
mov
add
cld
sbb
mov
mov
sub
outsl
nop
shrl
xchg
es
mov
shlb
loopne
pop
adcb
mov
xlat
out
in
daa
cmp
adc
aas
adc
jle
add
fildll
jbe
xlat
inc
imul
into
cld
mov
cld
in
aas
fadd
push
icebp
fsubl
cmpsb
out
sahf
pop
lock
add
add
adc
les
pop
roll
adcl
or
ds
lahf
sbb
loopne
in
push
movb
in
pop
and
dec
fidivrs
ficoms
into
js
mov
pop
stos
cmc
mov
push
or
push
int3
mov
push
push
cmc
inc
push
es
cld
mov
test
fbld
push
xorl
cwtl
and
mov
fsubl
mov
mov
mov
add
scas
test
xor
and
jp
and
fidivrs
clc
sti
test
push
fsubs
mov
fsts
pop
push
pop
in
ds
aas
cmp
pop
rdmsr
mov
inc
lods
push
stos
andl
or
in
sub
fwait
jg,pt
scas
mov
in
mov
mov
lret
mov
jecxz
pop
aad
stos
mov
jmp
in
mov
ret
out
push
and
dec
mov
je
iret
pop
repz
repz
popf
mov
inc
dec
sub
push
or
fisttpl
popf
push
push
fadds
jns
cmpsl
in
push
fisttps
sahf
sahf
in
out
hlt
test
xor
push
jp
insb
inc
pop
das
repnz
outsl
jge
push
mov
pop
outsl
cmp
add
test
insl
lret
cld
adc
outsb
out
xor
inc
pushf
aam
sub
cmc
push
sub
sbb
add
fdivp
push
xor
xchg
shlb
stos
add
popf
lahf
and
icebp
fidivs
test
jbe
dec
pusha
dec
loop
sub
xor
inc
pushf
in
mov
out
insl
sahf
push
les
loop
xchg
shll
xchg
imulb
movsb
lret
mov
push
sbb
call
clc
iret
andb
repz
add
and
cwtl
mov
jmp
aam
jecxz
loopne
movsl
xchg
push
mov
mov
icebp
push
xor
push
test
pop
pop
data16
leave
out
rcrb
or
mov
cmp
bound
xor
xor
adc
lods
pop
in
lahf
fldt
bound
add
sub
inc
cmp
push
scas
jnp
bound
pop
jle
jno
lcallw
jg
mov
mov
loopne
ljmp
les
mov
gs
mov
loope
push
imul
adc
shrb
push
and
cmp
es
sub
ljmp
push
ja
movsb
xor
push
out
or
popf
adc
stos
call
or
xor
dec
roll
sub
jge
xor
test
mov
cmp
notl
xchg
adc
das
adc
mov
xor
cmp
sti
arpl
stos
mov
inc
test
mov
addr16
dec
inc
pop
adc
test
call
dec
mov
sub
push
lahf
mov
inc
lock
mov
mov
xchg
dec
or
inc
or
dec
cmp
pop
jbe
xor
pop
loopne
sub
pop
in
test
push
jbe
xor
pushf
fwait
and
in
jle
sbb
stos
push
xchg
adc
ret
jmp
aas
sub
loope
repnz
ret
test
flds
add
or
mov
cmp
daa
sbb
ds
sub
out
mov
lret
mov
sarl
adc
insb
aam
xchg
jne
xor
test
jae
jg
mov
shl
lcall
pop
call
mov
dec
cmp
jo
add
loop
jg
dec
xchg
fucomi
insb
push
push
mov
push
adc
arpl
clc
mov
outsl
dec
or
mull
jmp
pop
jmp
inc
fiaddl
adc
pop
or
jb
cltd
xor
pop
in
lahf
out
sbbl
pop
and
jne
cltd
scas
shlb
loope
cmpsl
lcall
mov
xchg
sahf
mov
loop
mov
fwait
add
xchg
xchg
sub
aaa
xor
stos
xor
pop
int
or
jno
cmpsl
mov
enter
daa
stc
and
or
cltd
scas
cmp
add
mov
enter
pop
pop
pop
fbld
mov
cltd
stos
fnsave
jbe
or
mov
mov
arpl
mov
jo
mov
sub
mov
push
mov
adc
fldt
out
dec
or
mov
les
inc
loopne
fcomi
repz
cmpsb
xor
insw
sbbb
leave
xchg
inc
push
jle
mov
push
cmpl
dec
cs
pop
jbe
loope
sbb
jl
or
cmp
push
push
data16
ret
mov
test
jbe
rcrb
inc
aam
push
repnz
lods
notb
aam
lret
stc
mov
insl
inc
jp
mov
es
fldl2e
xchg
sbb
loop
iret
jge
cmc
and
and
aad
out
rclb
xor
dec
mov
dec
lret
sub
insb
push
xor
insl
pusha
fwait
lods
adc
mov
mov
cld
cmp
mov
cld
fdivrs
mov
mov
and
int
ret
rclb
xor
lods
test
pusha
mov
inc
fildl
out
push
xchg
jmp
mov
dec
jbe
jne
dec
jnp
add
aad
lahf
push
xor
xchg
lds
aas
inc
cmp
push
and
aad
movsb
pop
addl
xor
aas
adc
mov
or
pop
cmp
jno
and
rorb
sub
push
roll
mov
cltd
idiv
sti
addr16
test
shl
icebp
inc
sbb
and
arpl
loope
das
iret
movsl
push
mov
add
push
xchg
mov
fisttps
mov
or
jmp
mov
sbb
fwait
push
iret
push
enter
into
dec
cld
lcall
addr16
and
imul
dec
or
and
xchg
cmp
sarb
push
adc
mov
cwtl
and
pop
jl
clc
imul
push
sbb
in
xchg
sbb
jno
mov
dec
mov
cmpb
xchg
mov
pop
or
sub
mov
pop
je
push
sbb
jl
cmp
pushf
loope
ljmp
lods
xor
pop
or
and
xchg
cmp
int3
pop
mov
popa
pop
out
pushf
push
movsl
and
lahf
fildll
push
iret
pop
mov
out
rorb
ret
cwtl
jo
xlat
push
inc
repnz
in
mov
data16
lock
out
popa
jl
mov
notl
dec
sbb
in
insl
sub
addr16
cld
jb
fdivl
out
sub
cmp
fnsave
push
gs
mov
add
in
pop
in
pusha
insb
xchg
sahf
cmpsb
adc
and
mov
test
idivl
jbe
pop
pop
push
add
lret
jb
cmp
shr
jle
push
roll
cmpsl
in
aad
mov
fadd
int3
lock
jg
mov
call
or
jle
leave
arpl
or
fisttpl
out
xchg
loope
lea
mov
xchg
add
orl
jo
cmp
dec
cwtl
scas
cmc
out
fcompl
push
jbe
scas
mov
bound
test
mov
cmpsl
in
sub
inc
jno
adc
lret
popf
cwtl
jb
inc
push
mov
scas
imul
xor
rclb
pop
sbb
cmp
xlat
out
and
pop
push
pop
aam
fnstcw
inc
sub
push
insb
pop
prefetcht1
push
decb
addr16
xlat
mov
stc
inc
push
ror
ljmp
pop
xor
out
int3
movsb
push
rorl
fisttps
les
xlat
mov
push
cmp
repnz
mov
cmp
fwait
sub
mov
lret
lret
pusha
popf
loope
add
iret
xchg
pusha
ljmp
ret
into
stc
aaa
sbbb
lret
in
sub
mov
mov
test
cmp
push
sbb
dec
add
push
pusha
xor
mov
mov
sarb
cwtl
imul
cmp
cmpsl
push
push
rol
jecxz
cwtl
sbb
push
xchg
cmp
cli
push
fisttps
dec
pop
push
and
cmp
fwait
movsb
rorl
sub
sub
orb
sub
push
sysexit
es
lds
jae
pop
jae
movsb
test
cmp
in
or
int3
sub
add
cmp
jl
out
cld
mov
sub
sub
push
inc
daa
lcall
sub
cs
mov
lcall
jbe
in
dec
mov
add
insl
rorb
nop
or
adc
loope
stos
jno
or
jo
aaa
mov
dec
add
sbb
cli
and
cmpsb
sbb
es
rcrb
cmpsb
test
pop
nop
das
inc
jne
add
arpl
addb
mov
dec
std
or
inc
jne
inc
adc
and
lcall
pop
pop
imul
inc
mov
add
cmp
and
pop
pop
int3
jp
jns
push
cli
cmp
repz
adc
adc
cli
shl
mov
nop
rcr
or
and
mov
es
cmp
bnd
add
jae
lods
mov
lret
push
std
mov
out
lahf
shl
sub
sub
sub
mov
jl
push
insl
mov
lds
scas
push
jno
test
or
std
fnstenv
das
test
mov
rolb
adc
sub
jno
bound
sub
popa
and
sar
and
ficomps
inc
lret
mov
sbb
movsb
fsubrs
dec
in
dec
push
jo
sub
mov
fstpt
imul
out
inc
testb
xor
enter
lds
mov
jne
adc
mov
lods
lea
mov
lea
push
pop
mov
jle
dec
shrl
inc
mov
and
dec
lods
test
sarb
fdivl
jns
pop
lret
insl
icebp
and
popa
jns
fsubl
cmp
dec
iret
cs
negb
pop
xor
test
ss
mov
push
mov
idivb
icebp
dec
push
adc
add
pop
inc
bound
js
jns
push
out
pop
out
xchg
lea
push
ficompl
imul
in
clc
and
shl
push
cmp
sub
push
aad
push
ja
dec
jb
hlt
push
fs
mov
mov
jo
mov
xor
dec
push
mov
lock
push
mov
movsl
push
outsb
repz
push
pop
mov
push
inc
xchg
cmp
lods
adc
into
sbb
xor
outsb
add
nop
insl
xchg
sbb
inc
stc
in
xchg
xor
repnz
jae
adc
cltd
daa
add
push
inc
push
and
loopne
clc
mov
call
mov
lea
mov
xchg
inc
out
mov
cmc
hlt
push
js
add
and
cmp
dec
outsb
push
lods
dec
data16
or
sub
nop
stos
push
mov
cmp
cmp
mov
enter
daa
push
xor
ja
jmp
mov
sarl
push
sti
cli
fistps
shlb
cmp
xchg
scas
loop
cmp
mov
push
out
cmp
loope
test
ficoml
dec
dec
stos
decb
in
lds
lcall
data16
cs
jl
je
or
mov
lods
dec
cmp
into
loope
xchg
fs
loopne
jmp
test
rolw
fbstp
repnz
push
mov
test
fstl
mov
adc
shll
push
jge
push
inc
ret
dec
cli
call
xor
xchg
fadds
mov
cs
mov
pop
and
pushf
out
bound
sub
or
andb
sub
call
fnsave
add
inc
and
adc
arpl
sub
ss
xor
dec
mov
cltd
cmp
inc
adc
aam
pop
xchg
cmpsl
in
inc
pop
adc
dec
xchg
push
dec
lock
gs
scas
push
add
in
aas
int
inc
movsl
jns
pusha
fidivrs
dec
lea
dec
mov
scas
sub
out
xchg
lret
cmpsl
shr
test
data16
es
inc
lock
mov
pop
mov
push
cld
sub
out
xchg
imul
and
leave
dec
cmpsb
push
jae
icebp
or
roll
xor
call
push
outsl
scas
cld
movsb
adc
xor
lea
cmp
cmp
inc
xor
adc
test
rclb
mov
pop
sbb
in
and
cmp
rorb
aad
scas
or
lods
cmp
xor
dec
sub
mov
mov
add
jb
shll
das
out
push
and
lods
jbe
adc
mov
imul
xlat
adc
cmp
fbld
popf
ss
repz
nop
arpl
sti
jecxz
mov
sub
pop
outsb
mov
cmpsb
cmp
and
adc
mov
cmp
adc
out
scas
fisubl
ljmp
inc
cmp
or
or
cmp
fstp
jbe
pop
adc
roll
shrb
adc
or
es
pop
scas
les
outsb
mov
mov
add
shll
fcoms
lods
popf
mull
pop
aas
xor
mov
je
pop
sbb
mov
xchg
pop
mov
in
dec
dec
sub
lret
mov
sbb
xchg
jp
jg
fisubrs
pushl
pop
icebp
add
mull
push
xchg
xchg
mov
push
pop
aaa
out
mov
xor
xor
incb
push
or
pop
and
push
xchg
stc
xor
stos
push
cmpsl
adc
jnp
pop
pop
cmpxchg
enter
movsl
inc
adc
popa
sbb
js
sbb
xlat
jg
loop
dec
adc
xchg
or
sub
ljmp
cmp
dec
hlt
fcoml
test
or
inc
and
incb
sarb
divb
xchg
fsubrl
xchg
ja
mov
nop
js
cs
xchg
arpl
js
sub
bound
adc
push
add
sbb
pop
imul
or
pop
in
mov
push
shrb
sub
dec
sub
dec
mov
push
lea
enter
lldt
adc
int
jl
pop
push
push
jo
sub
inc
arpl
dec
jl
lret
aad
pop
mov
push
ror
dec
add
outsb
movsl
xchg
push
movsl
imul
mov
mov
mov
pop
jb
inc
fwait
testb
es
pusha
and
dec
int
int3
dec
pop
sub
jb
xor
mov
into
fwait
xor
stc
push
out
scas
and
insl
sti
push
jl
adc
lss
xchg
jg
jecxz
fists
xchg
jno
in
std
cmp
enter
jnp
jno
jo
cmp
or
cmp
gs
addl
adc
mov
leave
daa
fldt
push
or
mov
js
mov
mov
xchg
mov
or
stos
aad
out
incb
aad
into
test
adc
ret
push
lods
in
sarb
pop
test
lahf
push
xor
xchg
out
and
lret
fwait
push
and
insb
loope
shlb
lret
xor
and
xchg
hlt
xor
mov
cwtl
mov
mov
fs
mov
pmaxsw
fwait
lea
inc
inc
or
xor
cmpsl
fs
adc
mov
push
sbb
adc
xchg
inc
adc
shr
jle
sti
movsl
lea
sti
rolb
or
push
cltd
jge
xor
imul
test
dec
dec
jmp
adc
jp
test
subb
mov
cmp
mov
stos
add
inc
adcl
add
and
in
and
inc
insb
mov
jb
loope
mov
cmp
test
dec
cli
add
addr16
push
repz
push
mov
push
sub
xor
pop
mov
jmp
or
movsb
inc
lret
enter
addl
push
adc
push
lret
in
sub
cmp
xchg
aas
sub
sub
repz
jmp
pusha
dec
adc
ds
repnz
xor
and
pop
enter
mov
add
xchg
sub
rclb
xchg
js
repz
or
sahf
fs
es
push
xchg
mov
inc
repnz
repz
pop
xchg
in
jne
fisubl
imul
je
clc
aad
dec
sahf
sahf
icebp
fs
xchg
pop
adc
mov
xchg
lods
or
lcall
ss
aam
int
out
decl
pop
das
sti
ja
xchg
hlt
or
out
adc
aam
dec
hlt
and
pop
xor
je
ret
jp
cmp
mov
sbb
xor
mov
mov
add
mov
shrb
mov
cmp
sbbb
ret
xchg
fxch
mov
push
push
xchg
inc
adc
cld
aas
mov
rcl
xor
lock
push
sbb
adc
xchg
cmp
mov
addr16
and
lret
lcall
xor
mov
cmp
js
shll
xchg
cmc
movhps
test
dec
fwait
scas
mov
int
xchg
mov
imul
mov
testl
xor
add
jmp
mov
ror
adc
cmc
orb
aas
pop
shl
sub
scas
loope
mov
fsqrt
loop
enter
dec
mov
in
dec
fs
imul
outsb
cmp
rcll
cmp
pop
dec
sbb
cmp
lods
adc
jl
xchg
or
neg
inc
cmp
mov
mov
pushf
lret
push
jmp
pop
inc
cmpsl
xor
fdivrl
fists
sar
and
or
mov
cmp
fdivrl
mov
cmp
sbb
lahf
or
scas
enter
repnz
inc
dec
adc
dec
rclb
add
jne
mov
dec
call
adc
sbb
pop
stos
or
iret
movsl
mov
jle
bound
loop
lret
shlb
or
jl
jmp
xchg
dec
scas
imull
xchg
or
paddusw
adc
outsb
rclw
pushf
and
aad
iret
mov
fmuls
inc
and
and
mov
inc
nop
dec
ds
dec
lods
cmp
ret
sub
test
jb
add
xchg
cmp
out
fisubl
cmp
dec
cs
js
cli
and
inc
sub
imul
mov
cwtl
dec
fs
mov
sbb
stos
sub
test
mov
sbb
push
sahf
loopne
sub
and
mov
fldl
loopne
subl
cmpsl
xor
pop
mov
xchg
lds
cmp
sbb
inc
repz
pop
lret
cmp
lds
mov
cwtl
popf
fcmovnbe
mov
cwtl
pushf
aam
push
jbe
imul
out
pusha
lods
xor
sbb
push
add
ljmp
pop
push
jae
push
ret
imul
fmuls
xchg
aam
sbb
lds
push
xor
xchg
std
or
mov
shlb
xchg
cmp
enter
sub
ficoml
sahf
outsl
mov
push
ljmp
in
xlat
add
add
vunpcklpd
fwait
mov
test
or
gs
push
aaa
cmp
rcl
jbe
stc
cmp
test
mov
inc
push
test
roll
gs
je
pop
outsb
adc
loopne
jmp
mov
aaa
popa
add
aam
push
scas
sbb
fistpl
mov
cli
lret
mov
sub
jle
pop
cld
xor
xchg
mov
inc
pop
les
mov
repz
jae
pop
in
xchg
mov
dec
mov
bnd
or
sub
sbb
shr
jge
push
sahf
mov
std
sbb
xchg
xchg
flds
cmp
jp
js
sub
fidivs
or
inc
in
inc
in
and
outsl
lahf
and
adc
mov
cmp
mov
mov
mov
std
xchg
adcb
mov
mov
lods
add
jbe,pt
adc
mov
adc
add
out
cli
and
xchg
or
inc
mov
sub
dec
lret
sbb
call
sub
jle
rcrb
dec
mov
pop
adc
jmp
adc
pop
popa
loop
les
insl
cmp
sub
pop
xchg
movsb
aaa
scas
cmp
movsl
mov
rcl
das
push
dec
in
add
mov
cli
xchg
insb
subb
jmp
fs
push
mov
stos
adcb
xchg
ss
jle
es
xlat
shlb
mov
jo
mov
mov
xchg
es
aaa
fst
in
xchg
jmp
xor
rol
push
adc
stc
xor
pop
adc
mov
push
daa
add
out
pop
push
scas
std
mov
lret
xlat
lret
fdiv
outsl
imul
fimull
adc
dec
insl
or
fdivs
inc
in
sbb
push
cld
das
sahf
icebp
cli
xor
ret
outsl
das
sbb
stc
shll
les
xchg
roll
fisubrl
iret
sub
sub
mov
aas
andl
pop
add
out
sbb
or
rol
sub
push
adc
sbb
inc
rcll
jno
lds
mov
and
mov
pop
dec
out
and
sub
movsb
or
mov
test
into
out
leave
cmp
ret
js
dec
push
lds
xchg
int
sti
leave
add
cmp
aaa
lock
rol
mov
imul
fxch
out
imul
icebp
iret
mov
push
xchg
pusha
out
xchg
dec
jne
fidivl
mov
pop
adc
and
stc
inc
adc
sub
xchg
stos
ds
fsts
fmull
and
or
or
movsl
inc
ret
jbe
pop
in
lods
insb
push
jg
inc
mov
adc
pop
gs
fsin
cmp
stos
insb
jmp
push
push
mov
jmp
pop
ficompl
dec
ds
les
inc
leave
cmpsl
add
js
mov
or
sub
mov
mov
movsl
xchg
push
inc
cmpsb
mov
xchg
push
lret
and
ja
lret
sub
sub
lcall
rcl
sub
push
xor
jbe
iret
inc
shrb
das
lods
dec
mov
cmp
push
enter
mov
in
push
and
es
mov
mov
into
cmpsl
pop
cmp
in
int
mov
or
cmp
mov
nop
dec
sbb
lock
push
mov
hlt
mov
mov
add
dec
adc
adc
mov
pop
hlt
cmc
add
inc
call
jbe
xchg
adc
outsb
je
mov
jo,pt
add
jo
sbbl
rol
adc
notb
xlat
fisttpll
mov
repz
in
inc
js
mov
mov
ret
add
mov
aas
add
out
loope
daa
sbb
push
cmp
xchg
jbe
sbb
mov
enter
test
sbb
sar
or
loopne
out
push
dec
mov
cmp
adc
and
xchg
xchg
add
pop
mov
icebp
call
cmpsb
mov
in
inc
addr16
shll
cld
iret
add
in
xor
add
arpl
dec
pop
inc
out
insb
sub
dec
and
shl
lods
out
pop
or
test
cmc
aam
and
jge
mov
std
mov
mov
test
xchg
jne
in
cmp
cmc
xor
pop
jno
ja
dec
add
sbb
insl
imul
test
adc
dec
xchg
lods
fsub
movsl
mov
xchg
pop
fs
ret
mov
jns
stos
outsl
out
pop
mov
lds
clc
cs
xchg
fxam
mov
popl
cli
rcll
sub
jae
push
pop
adc
out
mov
jne
adc
mov
xor
push
lock
hlt
fcmovnb
out
cli
mov
scas
or
insl
mov
mov
scas
mov
inc
push
jmp
dec
jecxz
pushf
ja
sbb
and
lcall
fsubr
dec
aaa
add
outsb
sbb
aam
jecxz
pop
std
lret
mov
movsb
or
adc
cmp
in
jno
loope
stos
out
sar
push
addb
rorb
inc
and
sub
test
jp
sub
sub
xor
fdiv
jg
in
jmp
pop
dec
jp
adc
xchg
inc
arpl
insb
mov
add
adc
cld
roll
inc
pop
xchg
test
or
sarl
cmp
ret
sbb
popf
inc
imul
gs
cmp
mov
lcall
pop
dec
dec
sbb
pop
sub
cltd
test
ret
or
stos
pop
lcall
inc
or
ljmp
incb
sub
insb
sbb
adc
or
push
inc
imul
cmp
xchg
jp
jns
push
mov
jnp
pushf
sbb
dec
into
sub
xlat
jo
mov
ret
inc
flds
adc
adc
inc
outsl
push
pop
sbb
or
fcomps
mov
dec
and
ficompl
mov
cmp
lds
ret
addr16
in
mov
lods
fs
fwait
test
lods
cltd
into
ss
mov
cmp
out
dec
mov
mov
in
inc
mov
pop
les
jp
sub
test
test
inc
xlat
leave
fldt
mov
daa
int
and
test
fsts
sbb
scas
jnp
jne
insb
inc
xor
out
test
mov
mov
dec
mov
xlat
xchg
paddsw
mov
xor
loopne
in
subl
pushf
clc
shl
gs
sub
jo
jp
pushf
sbb
pop
dec
je
mov
hlt
mov
int3
aad
stos
push
cmp
sub
lock
inc
rcrb
mov
shlb
test
mov
stc
fsin
dec
jbe
dec
jae
cs
int
lds
xchg
lahf
sub
stos
adc
adcb
inc
cld
cmp
pop
xor
pop
sub
mov
or
pop
fisubrs
lret
call
lock
call
mov
push
int
jno
outsl
fcomip
mov
rorb
add
jnp
in
mov
mov
sbb
pop
aaa
mov
aaa
sub
shrl
loopne
ret
daa
repnz
es
push
fcomp
dec
mov
es
push
xor
es
sbb
lds
mov
enter
pop
out
mov
loopne
pop
es
or
inc
imul
pusha
mov
lret
sub
mov
loopne
std
test
cmp
mov
shrl
pop
popa
mov
repz
lods
enter
inc
jg
repz
data16
xchg
cmpb
leave
and
mov
inc
xor
fcomi
ja
dec
icebp
in
into
test
andb
out
pop
inc
dec
mull
xchg
xchg
dec
leave
stos
push
xor
sub
sarl
or
mov
js
push
stos
daa
xchg
lea
adc
adc
push
xchg
cmp
jmp
mov
lods
and
insb
mov
jge
mov
dec
shrl
and
mov
pop
mov
xor
fs
mov
or
lret
push
ret
adc
jae
pop
mov
inc
jge
js
fs
fiaddl
sub
rcll
shl
fdivrp
sub
rorb
sbb
add
jns
lods
cltd
dec
fld
rcr
pop
ret
mov
inc
adc
mov
push
mov
cwtl
jae
mov
xchg
imul
mov
push
aaa
fildl
ds
sahf
jno
bound
scas
pop
loopne
mov
push
imul
dec
mov
fst
push
scas
stos
pop
cmovns
test
ror
nop
sbb
xchg
fs
mov
aam
push
in
pop
and
push
push
push
fnsave
mov
inc
jbe
inc
lea
not
sbb
add
movsb
xchg
loop
xchg
dec
ret
jp
sbb
push
jbe
sub
push
icebp
imul
loop
ret
xlat
or
fneni(8087
sbb
push
mov
dec
sbb
mov
jo
and
inc
loop
js
aaa
lods
es
jmp
lahf
jge
add
bound
out
cwtl
lcall
cmpsl
xor
mov
xchg
gs
add
outsb
das
push
inc
sub
push
inc
int3
in
shrl
push
out
lcall
lret
js
movsl
out
pop
rcll
gs
call
cmp
inc
push
dec
cmp
xchg
and
cmp
inc
inc
es
jbe
hlt
or
lcall
dec
fwait
sbb
xchg
mov
nop
pop
dec
xlat
inc
jge
mov
cmpsb
fwait
es
fadds
and
adc
xor
repnz
aad
pop
mov
adc
test
push
inc
iret
pop
cmp
push
mov
rorb
jb
jns
lods
cmp
movsl
inc
mov
mov
add
add
les
cmp
cmp
std
lea
mov
adc
inc
ficoml
movsb
lods
jb
cmp
sub
aad
mov
in
cmpsl
mov
sbb
mov
pop
dec
or
call
mov
add
test
in
repz
movsl
mov
mov
adcb
fs
adc
subb
int
insl
and
daa
nop
pop
or
add
aam
mov
icebp
dec
std
fnsave
inc
add
mov
push
jmp
stos
dec
dec
mov
in
das
push
sub
pop
out
jge
rclb
dec
cwtl
pop
movsb
sbb
add
xchg
movsb
js
dec
insl
sti
cmp
std
pusha
adc
and
lods
ret
shll
arpl
lcall
ljmp
xchg
lds
sbb
loopne
repnz
mov
jne
cmp
add
lods
jae
cmp
pusha
outsl
mov
dec
fstps
ror
cwtl
loopne
aad
jne,pt
cmpb
nop
pop
jp
inc
mov
leave
sub
sbb
add
sub
call
xor
in
rol
adc
jno
push
inc
inc
inc
mov
mov
or
stos
mov
incb
movsb
icebp
lock
sub
add
je
sbb
std
ret
sbb
movsl
jmp
dec
fisubrs
cmp
notb
shll
xor
imul
aam
pop
push
fwait
int3
jmp
cmp
inc
inc
jg
inc
mov
xchg
icebp
dec
cmpl
outsl
cmp
out
sbb
mov
sub
pop
adc
cmp
sub
lea
add
add
xchg
push
movsl
ficomps
ret
inc
loope
aas
sbb
xor
leave
sbb
jle
inc
hlt
mov
adc
sub
insb
add
imul
inc
out
repz
outsb
fnstcw
sahf
aaa
adc
add
sub
xchg
or
pushf
lcall
cmp
push
pop
jns
out
or
out
ret
lods
mov
addr16
ficomps
lret
repnz
lcall
jp
jno
xor
lea
cld
ret
pop
fnstenv
scas
jns
repnz
xchg
lock
adc
sub
pop
ja
hlt
sub
dec
insl
cmp
aas
xor
inc
jle
adc
dec
dec
inc
push
insb
jecxz
mov
and
or
jl
jmp
popf
out
xor
or
push
pop
pop
roll
or
adc
daa
xor
jbe
lods
into
test
mov
mov
test
dec
or
and
fidivs
test
mov
loope
sbb
sbb
and
add
sbb
pop
outsl
dec
sub
sub
xchg
mov
nop
push
sti
pop
std
xchg
add
push
dec
mov
xchg
scas
mov
arpl
push
imul
push
jp
jne
cs
push
js
or
call
shl
out
jp
scas
loop
cmp
jns
sbb
push
mov
push
pop
jns
push
xchg
into
mov
mov
sbb
push
inc
cld
into
mov
push
cmpsl
and
imul
mov
jns
add
shll
dec
iret
jecxz
negl
loopne
mov
call
fidivrl
pop
jo
test
inc
stos
add
push
push
icebp
mov
mov
cli
shlb
shll
fs
add
fnsave
popf
lock
pop
and
jne
movsl
sub
mov
divb
mov
cmpsb
dec
or
jnp
loop
and
cmp
stc
dec
dec
dec
cmp
lods
add
stos
add
xchg
sbb
or
pop
movsb
stos
push
add
sub
adc
les
scas
sub
insl
push
dec
movsb
in
lock
inc
jmp
pop
js
data16
les
mov
dec
inc
lret
loope
mov
rol
hlt
lret
and
xchg
inc
ss
mov
cmp
mov
jge
mov
fiadds
gs
iret
push
inc
fdivl
fcomps
mov
in
jno
push
add
es
lock
xor
xor
xor
xchg
mov
mov
mov
je
adc
cmpsl
push
or
es
insb
ffree
aam
jns
jnp
mov
mov
rol
jle
decb
sbb
pop
jns
xchg
jo
in
mov
or
xor
out
xor
mov
loopne
adcb
pop
jae
ret
xor
xchg
sub
mov
fwait
loopne
sbb
cmp
int3
mov
and
xor
or
pop
insb
push
xor
adc
cltd
fcoml
add
mov
loopne
popaw
mov
stos
testl
arpl
xorb
lock
cmp
add
stos
ret
xchg
push
mov
int
fisttps
nop
jae
jle
push
mov
xor
and
loop
xchg
xchg
pusha
cmp
int
add
adc
jl
les
or
cmp
testb
clc
or
imul
add
cmp
inc
lods
push
mov
xlat
mov
and
stc
mov
mov
mov
cwtl
mov
xchg
loopne
icebp
fdivrl
xchg
icebp
mov
push
push
out
mov
fcoml
xchg
mov
addr16
pusha
push
push
jg
arpl
out
sbb
mov
mov
jae
jns
adc
nop
mov
lcall
pop
mov
or
outsl
jp
lret
imul
test
xlat
adc
sahf
cmp
cmp
lret
fimuls
jae
sub
movsl
add
movsb
mov
push
icebp
aas
out
sbb
outsb
pop
in
stc
pusha
and
or
repnz
stos
shrl
push
add
iret
and
cmp
subl
mov
push
or
lcall
adc
loopne
leave
jae
push
xor
lret
add
xor
mov
adc
outsl
addl
jno
pop
pop
shlb
das
ljmp
mov
pop
mov
mov
testl
push
sbb
pop
fdivs
pop
jno
add
adc
jnp
out
adc
xchg
pushf
mov
sub
inc
mov
dec
lcall
std
pop
test
pushf
lret
ljmp
aam
cmp
orb
push
clc
dec
or
out
insb
in
outsb
xchg
ljmp
mov
mov
ret
mov
shlb
dec
jg
addr16
aas
fmuls
mov
popf
outsl
push
or
pop
push
mov
bsf
mov
div
test
loop
lods
jno
in
mov
push
add
dec
stos
cld
cmp
mov
jbe
in
test
shl
arpl
xchg
cmp
roll
sbb
js
cs
iret
or
daa
dec
jecxz
mov
iret
arpl
mov
mov
jbe
jge
mov
scas
mov
xchg
fwait
xlat
dec
mov
mov
int3
adc
xchg
sbb
lret
andl
sbb
xchg
push
and
mov
mov
sub
mov
insb
clc
xchg
add
mov
cli
js
mov
out
cmpb
jmp
xorb
jb
dec
jb
mov
xchg
mov
aam
inc
dec
out
stos
jnp
jge
les
adc
test
fmul
fiaddl
fsqrt
cwtl
pop
mov
repnz
push
jp
inc
mulps
mov
ja
es
inc
jl
jne
cwtl
push
test
xchg
push
add
dec
js
inc
xor
into
jmp
adc
pcmpeqd
or
outsb
mov
and
repnz
cmpsb
insl
sahf
ss
call
sub
sub
hlt
add
mov
cmp
push
pop
fwait
jp
test
or
mov
sub
inc
repnz
pop
sbb
pop
add
or
cld
test
dec
fildll
jmp
out
push
pop
outsb
xchg
das
fildl
xchg
xchg
mov
in
xor
sbb
jecxz
mov
or
or
jb
in
scas
je
mov
into
lods
dec
int3
jns
pop
dec
jp,pt
xchg
fdivrs
mov
outsl
inc
or
inc
int3
sub
lret
or
fcmovb
inc
mov
lods
add
fucom
mov
arpl
test
cli
inc
pop
jge
mov
lods
outsl
cltd
repz
inc
repnz
add
or
jge
divl
pop
xchg
xchg
pop
imul
adc
scas
sbb
nop
jp
das
lret
push
mov
mov
jne
pop
rolb
lahf
popa
scas
push
insb
jle
fs
xchg
mov
pop
xchg
dec
imul
mov
push
insl
ror
dec
scas
mov
inc
testl
xor
lea
pusha
cmp
jge
push
imul
call
jno
xchg
mov
shll
mov
imul
push
nop
cld
xlat
push
mov
pop
jae
pop
sbb
fcmovbe
jbe
ss
push
mov
jp
sub
adc
pop
loopne
popf
xor
fisttps
repnz
outsb
test
sub
icebp
cmp
lods
retw
mov
les
aaa
mov
jne
jne
and
push
faddp
mov
out
dec
pop
mov
fs
das
fistpll
sbb
cmp
ret
int3
jmp
adc
loop
push
in
popa
es
inc
dec
push
jns
lcall
imul
out
mov
clc
std
in
jp
mov
test
ffree
cmp
lret
icebp
aaa
dec
sub
sub
lock
add
jp
std
mov
cmpsb
mov
movl
cmp
cmp
or
sbb
sub
mov
or
mov
jle
out
cmp
iret
mov
jnp
testl
lahf
ljmp
mov
add
mov
enter
adc
ljmp
ficoml
ss
ja
push
sbb
aam
xchg
mov
dec
push
push
fs
es
mov
stos
jl
jecxz
xor
xor
jl
jge
push
insb
lods
jbe
pop
cmp
imul
add
sar
sbb
hlt
loop
aas
movsb
add
jns
insb
scas
push
lahf
in
mov
mov
fstpl
pop
jo
das
push
mov
fimuls
sub
mov
mov
sub
pop
in
mov
scas
inc
mov
lret
fdivs
shrl
imul
sub
dec
cmpsl
or
xchg
adc
sbb
jl
into
inc
int3
jae
in
lods
daa
sub
push
jp
loopne
fdivs
push
adc
xor
inc
inc
push
xor
gs
fdivs
xchg
pushf
mov
and
out
daa
sub
and
xor
mov
or
shll
cmpb
loop
mov
ret
xor
cmpsb
sub
mov
hlt
jge
scas
xchg
loope
inc
mov
cmp
pop
xor
jl
push
outsl
setg
es
mov
xor
movsl
fs
mov
rorl
std
fsubl
jle
aam
xchg
pop
jnp
xor
jne
enter
jno
pusha
jo
xchg
shl
cmp
in
insl
lret
inc
lods
mov
xor
loope
enter
pop
psllw
pusha
sbb
cmpsl
pop
mov
adc
outsl
rcrb
cmp
mov
sarb
dec
xchg
outsl
das
adc
je
fstps
in
inc
mov
push
lock
xor
sub
jne
lea
sarb
inc
mov
mov
mov
sbb
aam
outsl
sub
push
dec
call
xor
cmp
add
out
pop
inc
fcoms
mov
mov
fiaddl
cmc
je
jg
push
out
shr
push
jb
mov
push
es
add
mov
jge
jp
pusha
nop
sub
sub
into
ficoml
mov
mov
ljmp
dec
dec
addr16
repnz
inc
lret
sahf
sub
sbb
ficoms
mov
xor
popf
aaa
and
xor
or
push
mov
mov
and
dec
andl
dec
xchg
pop
mov
pushf
outsb
scas
mov
aaa
inc
lcall
test
fbld
out
subb
add
ds
and
test
clc
sub
or
aas
lods
imul
mov
push
push
or
cltd
push
xor
mov
cld
push
loop
testl
push
cmp
jae
sub
inc
add
dec
adc
sahf
addb
inc
lret
pop
ja
xor
decl
adc
mov
sub
push
jbe
pop
shlb
pop
mov
jo
movsb
mov
xchg
or
sub
jo
mov
pusha
ror
sahf
in
hlt
in
jp
cmp
mov
jnp
pusha
fistpll
filds
clc
xor
pop
ja
sub
mov
in
inc
mov
sbb
cmc
pop
mov
pop
inc
xor
xor
stos
aam
mov
lods
mulb
fmul
mov
cmp
mov
mov
and
outsb
int
pop
jmp
dec
xchg
add
jb
xchg
sub
cmpsl
daa
iret
inc
cs
popf
lahf
add
ret
push
dec
xor
sbb
mov
push
sti
xchg
sub
mov
mov
cmc
daa
dec
test
xchg
es
call
mov
or
mov
mov
mov
dec
adc
add
dec
into
mov
aam
jmp
test
cli
dec
jb
and
bnd
cmp
test
and
push
mov
leave
add
and
adc
jmp
push
pop
cmp
jmp
push
jae
mov
stc
roll
and
hlt
ret
ret
aad
mov
lods
fcmovnbe
scas
outsb
xor
add
pop
dec
adc
dec
fistps
pusha
push
and
push
rolb
inc
pop
fisubrs
or
lahf
je
mov
addb
adc
xchg
jle
cwtl
xlat
fsts
in
pop
xchg
test
sbb
push
scas
and
stos
jmp
or
outsl
ret
shll
jo
or
mov
icebp
mov
jns
out
cmp
in
mov
ja
push
arpl
mov
mov
scas
shlb
xlat
out
push
rolb
mov
lods
dec
push
sub
xor
mov
xor
lret
inc
adc
loopne
or
mov
ljmp
push
test
push
sub
cmp
jo
add
dec
das
or
sub
out
inc
xor
push
xor
xchg
les
jmp
std
cmp
pop
push
sbb
push
mov
push
leave
mov
jo
cmp
aaa
repz
and
adc
dec
es
pop
mov
enter
fs
pop
fbstp
jne
and
stos
dec
outsb
dec
cld
mov
mov
scas
int3
imul
fwait
cmpsl
cld
and
test
lret
mov
cmp
insb
adc
enter
sahf
icebp
jmp
aam
fildll
cli
cmp
xchg
adc
mov
or
pop
fstl
xchg
or
cmp
orl
xchg
daa
negb
xor
sub
push
fisttpl
lcall
add
dec
dec
fists
insl
lds
mov
mov
mov
lret
inc
pop
sbb
xchg
pop
jmp
cmp
inc
push
rcrb
stc
cmp
jp
fwait
xor
push
insl
or
push
inc
cmp
jb
nop
pushf
push
xchg
hlt
into
inc
cmp
aas
jmp
sbb
dec
out
pop
insl
inc
dec
fwait
xchg
lret
into
lock
testl
call
sbb
mov
sbb
bound
lcall
shll
adc
xor
int
mov
pop
bound
xor
fwait
mov
daa
jae
mov
gs
pop
repnz
jae
mov
pop
dec
mov
jb
push
mov
inc
mov
dec
mov
rcrb
out
lock
push
std
add
jno
or
js
jne
or
mov
loop
add
repnz
add
cmc
add
fmull
adc
xchg
out
jns
pop
cmp
addr16
repz
int3
ss
scas
inc
ja
add
and
mov
mov
pop
ret
sbb
xor
sub
sub
in
jb
lcall
push
aam
sub
pop
mov
inc
movsb
and
repnz
mov
sub
mov
add
jbe
stc
test
xlat
adc
inc
call
or
push
dec
lds
rorb
mov
in
push
aad
arpl
and
fcmovne
add
jno
add
lods
iret
scas
mov
mov
and
cmp
inc
sub
push
das
hlt
rcpps
decl
ljmp
and
jle
loopne
and
inc
lcall
hlt
lret
popf
mov
dec
sub
pop
out
mov
push
test
jg
insb
cltd
sbb
mov
xor
mov
aad
or
sbb
xchg
in
mov
in
xor
lods
mov
dec
jecxz
leave
jge
aam
sub
call
int
sub
sbb
jb
in
jnp
mov
push
adc
fs
in
dec
ljmp
cmp
push
lret
mov
aam
lea
jns
xor
in
sub
xchg
rolb
inc
lds
pop
and
add
jge
into
sub
add
in
adc
push
mov
add
push
fdivrl
mov
ffree
rol
movsl
sub
mov
jne
pushf
jno
adc
lahf
inc
inc
push
add
cs
push
daa
push
in
xchg
sbb
sbb
iret
in
adc
popl
ret
cwtl
inc
sub
ljmp
pop
cld
sub
lahf
and
lcall
insl
mov
fst
or
subb
jno
les
cmp
scas
push
add
and
mov
cltd
fs
gs
nop
mov
lcallw
gs
imull
dec
and
out
pusha
bound
lahf
xor
cmpsl
jp
push
jno
xchg
and
sbb
je
push
push
dec
mov
shrb
cmp
adc
push
cmp
aam
es
add
aaa
ds
aad
xchg
sub
insb
mov
lods
lods
testl
addr16
scas
inc
insb
cmc
pop
mov
push
daa
fsubrs
mov
sarl
sbb
in
add
cmp
cltd
add
push
dec
negl
int
sbb
dec
adc
fadds
adc
and
fbld
cmp
jbe
rcrl
cmp
arpl
dec
mov
sub
jge
sub
jo
inc
add
push
push
push
orb
and
inc
mov
leave
cld
inc
lock
xchg
mov
jne
inc
and
pop
hlt
sbbl
push
enter
pop
push
out
push
pop
ljmp
outsb
sbb
outsb
xchg
pop
mov
sahf
xor
lea
sbb
je
dec
sub
adc
inc
in
xor
dec
mov
icebp
in
iret
adc
in
pop
jmp
xchg
or
sarl
arpl
mull
xchg
sub
mov
movsl
in
pop
or
lods
cmp
dec
inc
adc
outsb
fldt
or
mov
adc
pushf
adc
jecxz
stos
fiaddl
push
jo
loopne
mov
fs
scas
push
add
sbb
sbb
xchg
shll
mov
sti
add
cmp
js
inc
and
fadd
mov
aam
push
iret
dec
push
imul
cmp
aas
push
scas
mov
mov
andl
ljmp
add
mov
jae
jl
pushf
xchg
dec
mov
jmp
dec
imul
xchg
jl
xor
mov
fldl
sub
mov
sub
mov
xchg
int
sub
mov
cmp
sahf
daa
mov
lret
hlt
cmp
sti
add
clc
mov
negb
out
and
fadds
inc
xchg
sbbb
add
xchg
adc
insb
or
outsb
xor
mov
add
push
scas
adc
out
xor
pop
xchg
jg
inc
imul
sub
pop
stos
mov
adc
mov
popl
sub
cmpsl
fwait
jbe
pop
mov
inc
fidivrs
push
test
cmpsl
fnstcw
or
lret
jns
cmpsl
movsl
aaa
xor
inc
lock
lret
mov
jns
push
push
call
mov
adc
and
stos
mov
mov
pop
or
mov
add
stos
rcr
loope
or
xchg
sbb
adc
dec
clc
push
mov
cmpsb
or
outsl
jo
sbb
ljmp
pushf
fadd
lahf
hlt
mov
lds
mov
cwtl
daa
jae
pop
je
push
aaa
and
lret
test
xchg
add
jmp
jno
jmp
adc
mov
jl
mov
stc
sahf
out
es
loope
xor
loop
or
dec
cmp
inc
fcompl
dec
or
mov
dec
fistpll
push
clc
and
or
roll
sub
cmp
inc
sub
outsl
cwtl
lock
pushf
jbe
xlat
cmp
mov
mov
adc
cmp
lods
add
dec
std
xor
xchg
clc
mov
mov
fldt
out
scas
dec
test
add
test
push
lahf
cld
cmp
arpl
in
push
cltd
push
popf
addr16
xlat
repnz
xchg
xor
mov
lahf
jo
enter
xchg
cmpsb
jecxz
scas
repnz
push
das
sub
ja
ds
sub
or
add
inc
jmp
inc
sbb
mov
shrl
orb
movsl
adc
movsl
in
daa
adc
sbb
es
add
fadds
xchg
movsl
hlt
sbb
xor
xchg
ss
insl
test
popf
adc
xor
imul
jp
aam
sbb
add
or
push
daa
ja
mov
adc
fnstsw
fidivl
ljmp
adc
clc
aaa
std
inc
push
jp
adc
mov
insb
jno
and
adc
flds
fsubrs
mov
mov
inc
test
insl
imul
ret
pop
lret
dec
inc
test
pop
sbb
es
push
or
mov
xchg
ja
js
fcomp
rcll
int3
mov
xchg
fimuls
test
add
inc
add
pop
sbb
jmp
ret
test
mov
add
ja
mov
pop
push
loop
mov
xchg
mov
cld
cmp
out
xor
sub
adc
push
scas
sbb
add
rolb
pop
push
dec
mov
ljmp
jl
pusha
mov
mov
fstl
adc
es
or
cltd
aam
repz
sbb
fisubl
or
dec
add
mov
subl
push
mov
ljmp
ja
and
popf
cli
dec
cwtl
jp
push
and
or
and
std
sbb
bound
notb
inc
xor
mov
sub
rol
ljmp
pop
pop
jbe
mov
mov
sahf
push
jmp
xchg
jbe
sub
push
in
jg
sbb
sub
sbb
sub
and
wbinvd
mov
ljmpw
mov
xchg
outsb
sub
jmp
pusha
sub
and
sub
xor
xchg
adc
in
shrb
mov
out
xchg
sar
and
jl
sbb
and
and
jae
stc
shlb
dec
adc
out
lcall
shrl
mov
dec
imul
jae
movsb
hlt
gs
add
lahf
lock
jmp
xor
dec
scas
pusha
loopne
add
sti
mov
push
addb
inc
push
jne
or
jg
test
loopne
pop
andl
and
push
inc
jl
add
mov
adc
sbb
lock
in
and
xchg
mov
int3
int3
pop
imul
add
fwait
out
lret
idiv
mov
adc
roll
es
lea
pop
sarl
xchg
mov
andl
xchg
cmp
iret
imul
add
push
leave
add
in
sub
ds
xchg
sbb
xor
inc
popa
push
fstl
mov
xor
mov
out
dec
loop
std
push
adc
mov
mov
push
aad
push
xchg
cmpl
add
stos
push
int3
ficompl
daa
mov
adc
dec
aaa
cmp
cmp
mov
ret
xor
xlat
test
nop
fwait
sahf
pop
pop
sub
xchg
aaa
aad
jns
lods
es
xchg
lea
push
rdtsc
dec
out
sbb
jl
movl
mov
sbb
adc
cmp
inc
mov
mov
jne
add
mov
imul
imul
test
sbb
pop
movsl
sub
add
js
xchg
xchg
jmp
iret
enter
pop
pop
cltd
fisttpll
and
push
ret
test
mov
dec
inc
push
and
add
jns
dec
xchg
mov
xor
mov
cmp
fmuls
lret
mov
lret
xchg
fildll
mov
les
mov
dec
xchg
cltd
xchg
repnz
mov
pop
ret
push
fsts
shlb
fisubrs
sbb
push
xchg
pop
or
imul
mov
add
in
mov
ds
and
ds
or
adc
imul
add
inc
adc
inc
mov
xor
subl
sub
inc
lea
add
xor
pop
dec
aas
inc
dec
out
out
xor
les
in
dec
mov
out
shrb
add
jmp
mov
push
leave
sbb
add
jne
movl
mov
adc
ret
in
push
jbe
aaa
aaa
mov
lcall
and
jecxz
sub
in
outsl
fldenv
jae
add
xchg
sbb
iret
mov
sbb
test
xor
fstl
jmp
fidivl
es
add
inc
or
push
inc
gs
xor
sub
scas
test
popa
push
dec
inc
aas
push
cmpsl
sub
push
cmpl
jge
bound
xor
mov
xchg
test
aas
out
push
or
movsb
and
sbbb
or
std
push
lods
lcall
mov
lea
and
imul
adc
add
mov
sti
lea
mov
inc
fwait
aaa
adc
mov
lock
in
test
jns
mov
mov
sbb
out
insl
add
aaa
sarb
out
std
adcl
mov
inc
insb
imul
mov
adc
sbb
and
pop
jmp
int3
out
or
loopne
in
cmp
icebp
mov
ret
test
ds
data16
mov
in
lea
test
ja
xchg
test
add
push
xchg
dec
in
cli
pop
fists
in
test
or
adc
fisubrs
int3
mov
daa
inc
jno
out
sub
pushf
out
movsl
nop
test
notl
add
out
push
push
jae
mov
mov
jmp
xchg
loopne
lcall
fst
cmc
inc
shrb
push
sbb
rorb
mov
pusha
hlt
mov
scas
lahf
mov
test
stos
add
insb
repnz
fwait
cmp
xchg
sbb
aam
push
and
or
xchg
xchg
jge
jns
add
mov
jbe
out
clc
mov
scas
inc
jl
or
in
mov
push
fsubs
push
mov
rcl
sub
jbe
mov
dec
imul
loope
sbb
mov
in
js
adc
mov
xchg
xchg
pop
es
shl
out
cltd
dec
push
sub
out
cmc
mov
mov
sub
movsl
aam
bound
add
fidivrs
or
sbb
xor
int
push
int3
mov
ret
fidivs
or
push
mov
cmp
mov
sbb
cmp
cmp
jo
insb
andb
add
arpl
push
sbb
rclb
or
in
enter
into
in
push
jns
and
daa
sub
stos
jnp
js
jle
sbbb
mov
loop
out
addb
ficoms
loop
sbb
sub
divl
mov
mov
in
xor
ficomps
cltd
notb
dec
cmp
cmp
push
and
adc
push
push
sbb
xchg
divl
xor
cmp
fucomip
add
xchg
sahf
xor
cmp
xchg
call
jne
pop
xchg
movsb
cmpsb
sarl
or
bound
call
gs
mov
dec
js
arpl
mov
and
dec
insl
imul
scas
cmpsl
addr16
iret
and
jnp
mov
bound
jle
push
outsl
xchg
out
aaa
xchg
mov
aaa
add
daa
jmp
pop
lea
lods
inc
and
data16
lcall
cltd
std
daa
cld
stos
xchg
icebp
mov
adc
add
test
inc
xchg
adc
movl
add
imul
aaa
push
mov
push
hlt
nop
dec
jmp
jo
out
ret
sbb
dec
loop
aam
cmp
jl
fs
test
roll
mov
sbb
sbb
or
call
jmp
xor
insb
mov
jns
not
insb
xchg
test
adc
dec
rorl
out
push
lret
rcrb
or
dec
mov
jae
xchg
loope
push
fsubr
lahf
fsubrl
test
sub
test
mov
stos
jno
test
dec
sub
or
dec
mov
jne
mov
jecxz
push
lods
cmpsl
jns
std
jne
push
in
lret
dec
lret
jae
leave
jp
cmp
fadds
or
and
inc
xor
fiadds
leave
push
mov
cli
sub
sub
pop
arpl
xchg
pop
ja
ss
push
mov
push
and
mov
loope
cld
sarl
and
sahf
jmp
push
xor
xor
push
nop
or
dec
pushf
add
gs
mov
arpl
push
sub
push
mov
js
mov
sub
repz
cltd
fs
jge
lock
and
cmpsl
mov
mov
in
jb
ja
xlat
jg
jle
pop
lahf
cltd
mov
jns
outsb
and
or
jmp
inc
pushf
xor
pop
nop
bound
popl
into
leave
daa
fcmovnbe
cmpb
pop
jne
mov
add
sbb
std
adc
insb
adc
imul
int
outsl
leave
sub
loop
pop
or
xchg
jle
inc
ret
das
inc
popl
cmp
cwtl
shlb
and
in
xchg
icebp
xlat
push
jae
imul
push
xchg
ja
imul
mov
cmp
xor
jp
mov
push
xchg
or
ret
xor
rcrb
xor
and
imul
push
mov
push
xor
das
adc
xchg
and
pop
cmp
fwait
mov
sti
sub
arpl
lods
popa
sub
jge
xchg
scas
inc
sub
cs
push
lcall
push
mov
xor
mov
inc
cld
mov
mov
arpl
mov
popf
out
cmpsl
jp
adc
mov
aam
mov
lea
mov
or
mov
push
and
add
pop
mov
mov
data16
dec
inc
or
ret
stos
lock
lods
xrelease
bound
aas
lods
mov
popa
in
adc
push
dec
in
inc
repz
sub
hlt
push
in
inc
insl
mov
dec
stos
mov
sub
repz
add
jns
sub
jg
frstor
out
aaa
sar
ljmp
sub
jg
comiss
stos
outsb
jae
inc
ret
jno
arpl
icebp
jns
sbb
cmp
mov
outsl
nop
orl
loop
lock
or
scas
cmc
mov
in
shll
cmp
test
add
mov
imul
jp
orb
jl
push
andb
push
cmp
mov
loop
fwait
jbe
iret
data16
jmp
pop
pop
adc
sahf
jmp
xor
fildll
rorb
daa
mov
and
je
add
pop
mov
loop
mov
jg
fstps
jle
and
fisttps
nop
stc
pop
stc
ljmp
lcall
sub
test
add
jno
clc
xlat
mov
cmp
stos
mov
inc
sti
xchg
inc
and
xchg
sbb
das
sbbl
or
cmp
sahf
es
inc
cltd
jg
hlt
loopne
or
out
sbbb
sub
frndint
xor
inc
mov
pop
and
cli
push
push
xchg
sbb
lds
faddl
inc
and
mov
fucomip
in
cmp
xchg
int
jnp
mov
or
mov
sti
xlat
push
test
adc
jg
into
imul
cmp
ljmp
lock
daa
jbe
int3
sub
jmp
aad
jae
stc
jo
xchg
out
mov
rcll
jge
mov
pop
es
lds
fbld
jae
mov
jle
add
fs
pop
mov
imul
ss
mov
add
movsl
ljmp
enter
loop
lock
or
and
dec
push
mov
or
cmpsl
or
adc
push
pop
pop
pop
int
and
dec
imul
push
pop
rcrb
sub
cmp
lahf
sti
aad
faddp
mov
test
mov
clc
and
lods
insl
or
stc
insl
sti
mov
pop
dec
addb
dec
gs
xorb
outsb
cmp
lods
inc
inc
mov
dec
test
and
mov
lds
lods
push
dec
pop
cmp
mov
mov
pop
pop
es
lcall
cmp
jno
lock
in
fmull
arpl
mov
jno
push
pop
pop
add
mov
xlat
dec
pop
sti
lds
movsb
imull
inc
fistpll
or
popa
cwtl
gs
nop
inc
cmp
lods
sbb
add
leave
mov
test
jg
push
xor
pop
insl
mov
mov
je
fstp
add
arpl
lea
adc
call
repz
add
dec
test
xchg
stos
cltd
jb
aam
push
std
cli
popf
out
mov
add
mov
jp
aam
adc
mov
mov
test
pop
push
fwait
inc
pop
sub
mov
mov
das
es
mov
adc
cmp
aad
cltd
ds
or
mov
push
andb
push
clc
addr16
or
leave
leave
shrl
out
lret
les
cmp
pop
mov
pop
fmuls
pslld
inc
pop
push
insl
sbb
scas
sub
cmc
or
push
and
cmp
aam
lock
stc
sbb
int3
aaa
pop
jo
shll
cli
adc
je
and
add
les
out
sbb
adc
clc
fistpll
popf
out
mov
mov
rcll
popf
mov
aam
jo
cmp
sbb
mov
das
mulb
mov
jmp
dec
ret
sub
shr
dec
in
push
jmp
in
gs
adc
and
clc
sbb
and
mov
inc
lret
cmp
mov
ret
out
bound
iret
scas
sbb
push
mov
lds
js
cli
add
pop
movsl
testb
sbb
roll
out
push
mov
in
jne
push
pop
sub
std
inc
and
repnz
and
adc
enter
jns
mov
xchg
movsb
lret
or
adcb
sbb
pop
out
lods
or
pop
popf
mov
push
mov
lcall
jle
jg
sbb
mov
push
mov
sbb
hlt
jbe
xor
xchg
push
jb
pop
push
mov
or
incb
std
mov
pop
pop
popf
stos
mov
js
cmp
lret
cmp
add
pop
icebp
push
pop
mov
in
cmpsb
lods
nop
or
mov
rclb
push
rorb
adc
cld
ret
fwait
ret
mov
int
gs
sti
lock
sbb
jns
pop
ret
xor
add
adc
div
sbb
jmp
repnz
loop
mov
sti
out
fisttpll
int
aam
or
pop
mov
cli
and
cmpsb
adc
dec
mov
cmpsb
pop
aas
ss
gs
icebp
lods
imul
faddl
nop
das
jnp
xchg
mov
push
lds
je
mov
pop
jns
fsub
lods
adcb
data16
cmp
jae
movsb
xchg
cmpsl
pop
inc
sbb
lret
mov
pop
jmp
pop
aaa
lea
pop
cmpsb
add
cwtl
mov
outsb
subb
mov
pop
popf
stos
pop
scas
cltd
mov
mov
lcall
arpl
push
jnp
jge
in
xlat
sub
subl
pusha
dec
or
aad
scas
and
push
mov
jne
popa
pop
fs
les
movsb
cmp
lods
ret
mov
mov
adc
mov
out
xlat
aad
mov
cltd
inc
loopne
push
int3
mul
ds
test
jecxz
jecxz
adc
cmp
xor
push
push
clc
pop
aam
xor
notb
clc
sbb
outsl
sub
jg
nop
sbb
int3
or
loop
jmp
sub
lcall
inc
gs
pop
cmp
adc
xor
and
enter
add
cld
arpl
pop
sub
ja
xor
cmpsl
and
sub
shlb
out
hlt
mov
dec
sub
xor
mov
data16
push
jb
insb
fisttps
xlat
orl
in
nop
ja
cmp
add
outsl
sub
xchg
mov
les
fdivrl
gs
int
lods
sbb
stos
andl
xchg
inc
add
out
mov
imul
xchg
mov
gs
int3
aas
inc
jp
fstpt
bound
ds
sub
iret
sbb
mov
lret
xor
test
push
ret
outsb
xchg
mov
in
cmp
test
shll
lods
mov
ljmp
mov
js
sbb
pop
sbb
add
push
dec
sub
mov
xor
fsubl
in
push
nop
or
push
shrl
fstl
and
or
cmp
jb
inc
test
fcoml
scas
pop
mov
in
jbe
pop
outsb
xlat
xchg
jbe
push
add
sbb
ds
sbb
mov
outsb
enter
push
jge
stos
sub
jo
add
mov
lcall
push
in
lcall
mov
stos
mov
push
inc
pop
andb
cltd
xor
dec
push
xchg
mov
bound
mov
mov
lods
xchg
push
mov
and
jg
dec
dec
xchg
xchg
mov
pop
xor
stos
cmp
jecxz
ret
std
jne
insl
insl
ret
dec
xor
leave
andb
xchg
sbb
mov
inc
pop
mov
xchg
cltd
sarb
outsl
mov
jl
sub
cwtl
lret
aam
mov
stc
add
insb
push
adc
mov
xor
cmpsb
cli
shl
mov
test
jbe
add
aas
das
out
out
adc
mov
pop
and
cmp
ret
jp
mov
sbb
jo
adc
lcall
insb
push
movl
mov
sub
jp
lcall
cwtl
sub
xchg
call
push
ss
cmp
orb
loopne
mov
dec
mov
mov
int3
jle
fwait
and
push
add
ds
pop
push
popf
xchg
mov
fistl
pop
test
xchg
inc
cmp
jp
cmp
adc
jcxz
mov
rclb
sbb
je
and
add
pop
aaa
jecxz
sub
mov
dec
out
push
cld
and
xor
xchg
and
popa
test
imul
sbb
dec
ja
sub
fnsave
xchg
repz
movsl
clc
xor
mov
jp
cld
in
or
mov
es
mov
cmp
lahf
mov
scas
aad
cmpsl
mov
jge
and
sbb
lock
gs
in
cmpsb
mov
leave
inc
fwait
dec
icebp
jno
stos
and
cld
jb
sub
in
popa
mov
loopne
mov
int
aaa
aaa
pop
mov
sub
sub
dec
out
push
popa
lods
push
cmc
fdivl
js
sbb
in
pop
add
xchg
mov
pusha
cwtl
sahf
std
fadds
test
rolb
sti
cs
in
in
lret
int3
mov
inc
push
sub
data16
scas
push
cmp
pop
in
test
pushf
mov
or
cld
cmp
cwtl
cmpsb
push
adc
pop
mov
jo
jge
and
icebp
sbb
das
dec
jb
test
lcall
addr16
js
or
mov
mov
adc
int3
cwtl
sahf
aas
push
aas
mov
jne
inc
inc
in
or
mov
adc
push
mov
pop
incl
imul
add
mov
subb
sub
xchg
adc
movsb
xchg
orl
sub
or
repz
pop
mov
sub
hlt
rcrl
int
adc
jl
imul
xor
fiadds
les
push
rcr
imul
outsb
pushf
inc
daa
int
fbstp
dec
cli
or
in
and
les
scas
imull
lahf
cmpsl
sbb
lods
or
scas
and
outsl
clc
dec
mov
in
mov
sub
mov
jp
gs
test
stos
inc
pop
pop
cli
adc
orb
dec
std
fnstenv
jle
call
mov
push
je
fnsave
cld
and
loopne
mov
inc
push
sub
jge
dec
cmp
fists
das
add
inc
loop
mov
mov
mov
popa
adc
jp
mov
mov
insb
sti
rcll
mov
or
in
cmp
andb
mov
push
push
inc
sbb
inc
jge
test
hlt
cmp
mov
ds
aad
sahf
jg
push
cmp
hlt
mov
js
cmc
shrb
and
loopne
cmp
push
fstpt
pop
dec
add
and
cli
fwait
add
mov
adc
data16
test
std
stos
sbb
and
out
push
shrl
nop
mov
in
sbb
imul
cltd
sub
popa
jnp
sbb
xchg
jmp
into
les
loopne
dec
cmc
popa
gs
into
xor
mov
std
les
stc
sbb
movsb
sbb
ljmp
dec
lret
push
or
pop
imul
data16
push
sbb
xchg
outsb
std
lahf
push
cmp
stc
or
leave
inc
mov
adc
inc
out
lds
scas
inc
enter
popf
mov
das
lret
mov
lahf
cltd
pop
mov
test
xchg
cmp
pop
ret
in
and
cli
fists
call
xchg
xchg
out
mov
xchg
into
push
jg
daa
out
lock
sub
sbb
cmp
pop
pop
dec
push
mov
out
and
sarl
mov
sahf
cmpb
shlb
jl
data16
lds
mov
cmp
test
arpl
sbb
cmp
int
add
cli
sti
ss
mov
xorb
xor
loop
inc
outsb
and
mov
test
aaa
cmp
mov
in
mov
lcall
shrl
cmpsl
scas
mov
cld
sub
xchg
frstor
rclb
push
and
cmpsb
insb
inc
scas
jmp
and
test
cwtl
sbb
aad
and
mov
cld
cwtl
mov
nop
pop
add
into
or
int3
cmp
in
ss
jmp
cmpsl
ret
cmp
dec
flds
xlat
fdivl
addr16
out
fcmovu
xchg
data16
sub
fsubrl
and
repz
loopne
dec
push
mov
jge
jbe
lea
sub
andl
xchg
jl
mov
repnz
mov
xchg
shr
in
push
daa
out
lock
insb
push
icebp
dec
loopne
cmpsl
ret
out
idivl
stos
xor
adc
out
push
dec
cmp
sti
aaa
pop
jp
movsl
ljmp
icebp
fwait
out
enter
sbbl
mov
jno
mov
push
push
lods
cmp
jb
mulb
or
mov
push
mov
dec
cmp
test
sahf
jge
fiadds
sub
mov
and
or
loope
ret
mov
daa
and
inc
les
iret
push
mov
dec
push
fcompl
pop
daa
idivb
pushf
mov
or
fwait
push
add
shr
sbb
push
ret
les
sub
pop
stos
ds
movsl
xor
ja,pt
andl
dec
mov
xchg
aam
dec
xor
jle
lds
nop
sbb
sbb
rclb
test
hlt
outsl
mov
add
out
inc
jne
lret
aaa
ds
or
lahf
inc
sti
gs
hlt
cmp
xlat
aaa
lcall
sub
imul
daa
fdivs
xchg
cmp
outsl
cwtl
mov
ret
push
aad
add
pop
in
shrl
test
mov
mov
call
addr16
ds
lcall
sbb
ja
loope
aaa
addr16
fsubl
int
add
push
add
nop
loop
gs
mov
int
pop
pop
fdivs
adcl
inc
mov
jmp
loopne
sahf
std
movsl
js
adc
sbb
mov
cmp
xchg
fwait
sbb
sti
imul
adc
jns
inc
xchg
jge
adc
add
aas
imul
inc
fcoms
inc
sub
int
out
in
cld
aam
jnp
lock
mov
push
stos
sub
test
mov
push
jnp
push
push
cwtl
mov
xchg
mov
pop
fsubrs
in
filds
pop
mov
and
mov
je
dec
imul
jmp
mov
sbb
pop
out
inc
sbb
push
lds
fcoms
push
or
int3
insb
and
and
test
stos
inc
subb
push
or
jle
and
lcall
lahf
or
clc
dec
adc
jno
xchg
sbb
mov
ret
jne
aaa
jne
sub
push
or
xchg
scas
xchg
daa
lcall
iret
jo
jns
shll
adc
cmp
pop
jno
cmpsl
cmp
icebp
or
pop
inc
lds
cld
f2xm1
movsb
in
sti
or
sub
or
movsb
cmp
pop
inc
cmp
dec
lcall
xchg
jmp
repnz
cmp
cmc
outsb
jge
jb
fmuls
jbe
ja
add
arpl
outsb
push
xchg
or
adc
pop
bound
jno
outsb
ds
and
push
ds
outsl
lods
cmp
das
push
push
sti
push
movsl
fisubrs
pop
xor
dec
push
imul
test
fs
sub
insl
fisttpl
or
stc
add
or
dec
in
mov
mov
add
xor
cs
enter
inc
fwait
test
xor
inc
pushl
dec
pop
jg
xchg
mov
shlb
cmp
std
out
cmp
icebp
enter
popa
loope
sbb
in
gs
std
repnz
and
mov
clc
mov
aad
popl
jl
add
dec
repnz
sahf
in
pop
ret
je
inc
mov
mov
add
mov
cmp
add
fnsave
mov
inc
sbbl
sub
jecxz
mov
pop
or
xchg
jae
repz
mov
mov
outsl
xor
add
test
cmp
xchg
jno
into
addb
fwait
div
mov
rolb
out
stos
push
jge
ds
cmp
aad
lret
pop
icebp
cwtl
and
pop
inc
addl
fidivrs
mov
out
rep
sbb
add
fsubp
xchg
dec
pop
pop
incl
test
xor
sbb
xchg
scas
add
ficomps
mov
dec
repz
adc
mov
jge
jp
or
and
jmp
flds
push
inc
jbe
cs
mov
outsb
xor
jne
xchg
call
jg
je
lea
dec
fs
jb
dec
xchg
jge
sub
push
xor
xchg
sub
adc
shl
mov
das
mov
mov
pop
hlt
sahf
mov
hlt
nop
ljmp
add
dec
xor
out
jp
lcall
insb
aas
jnp
or
aad
jns
push
inc
loop
aam
dec
mov
adc
jno
dec
fwait
cmp
add
xchg
mov
cmp
pop
and
xchg
ss
xor
mov
pop
mov
mov
push
into
add
mov
cmp
test
sub
shr
outsb
stc
hlt
test
mov
jnp
jg
push
xchg
cs
cmp
and
pusha
aam
jo
cmp
fs
xchg
add
out
xor
lock
ss
adc
inc
add
cli
loopne
out
inc
push
andb
in
fildl
pop
mov
mov
or
pop
mov
xor
jle
test
cmp
and
hlt
outsl
mov
cmp
cltd
mov
add
mov
loope
iret
xchg
dec
add
pop
ja
faddl
cltd
dec
pop
in
mov
add
mov
test
loope
lahf
outsl
jnp
mov
sbb
jmp
je
jb
or
inc
dec
add
jge
daa
xchg
stos
int
int
sub
jae
std
adc
pop
ds
ret
stos
cmp
push
and
cmpsb
test
xlat
addr16
addr16
movsl
push
sbb
sub
vcvtps2dq
mov
sub
fcmovnbe
enter
notl
je
xchg
outsb
push
cltd
xlat
xorl
cmp
adc
mov
std
repz
sbb
or
in
mov
repnz
out
in
sarl
cmp
inc
mov
addr16
jge
stc
lods
shl
jo
sbb
pop
push
fildll
or
push
sub
std
scas
dec
fdivs
sub
mov
imul
and
and
or
inc
mov
cwtl
xor
push
rclb
je
call
fisubs
iret
xchg
xchg
fdivrl
test
and
cmp
jmp
push
mov
inc
jmp
mull
jmp
data16
mov
jmp
aad
ret
mov
addr16
inc
pop
pop
xchg
sar
cs
ss
aad
jle
xor
repz
js
stos
les
imul
aas
dec
fsubs
pop
mov
add
incb
test
adc
jo
dec
repz
outsl
or
jno
add
loop
xor
dec
pshufw
pop
jge
xor
sbb
test
adc
int
mov
in
mov
icebp
xchg
jp
cmp
mov
mov
ss
push
mov
sub
sbb
mov
popa
jmp
or
add
xor
aad
enter
pop
js
addr16
xchg
sbb
das
xchg
inc
ja
icebp
sahf
stos
loope
fdivp
dec
arpl
or
imul
or
fsub
jae
leave
ficompl
nop
inc
jecxz
into
dec
cmp
cltd
insb
pop
and
inc
stc
add
and
loop
or
and
jge
adc
fwait
xchg
sbb
lahf
mov
cmp
in
xchg
test
gs
push
mov
push
cwtl
fst
jns
inc
pop
push
fs
lods
sbb
adc
and
cmc
xchg
cmc
jmp
pop
mov
lods
fs
push
fs
insb
cmp
xchg
dec
stos
test
mov
adc
stc
lret
sub
shll
cli
pusha
push
shr
push
out
test
loop
push
jecxz
movsl
pusha
sub
xchg
xorl
std
stc
fcmovb
aas
or
rcl
and
mov
ds
and
lods
cwtl
mov
aaa
mov
inc
int
aaa
lds
sub
mov
jg
sub
aaa
clc
into
mov
sub
out
out
ljmp
shlb
leave
push
in
xchg
fisubs
lds
mov
mov
xlat
sbb
rol
test
push
icebp
jbe
movsb
lods
jl
or
cmp
adc
sbb
and
out
xchg
data16
cmp
sub
test
pushf
jno
push
out
push
inc
lret
adc
ret
gs
push
mov
or
notb
jl
lret
jmp
aam
push
add
mov
leave
lds
addr16
fcompl
cltd
pop
popa
and
xchg
mov
rcrb
fisttpll
mov
and
mov
dec
pop
roll
mov
jns
xorb
cmp
ss
rclb
xor
lods
daa
dec
cmpsb
adc
sbb
mov
sbb
sub
std
mov
fstp
mov
stos
jb
mov
or
pop
nop
pop
repnz
jecxz
movnti
jmp
mov
mov
jle
shrb
ljmp
hlt
fbld
cmpl
aam
lret
or
jns
pop
das
shr
add
test
and
jl
mov
push
outsl
push
mov
adc
insl
lds
adcl
scas
mov
mov
shrb
lret
and
pushf
cmp
or
aam
mov
and
jns
icebp
pop
mov
add
add
or
call
add
cmp
clc
stc
add
or
int
sbb
andb
pop
shlb
xchg
es
xchg
not
xor
lock
add
mov
xor
mov
retw
add
sbb
sub
cmp
clc
adc
mov
mov
push
jle
pop
xor
xor
cmpb
jae
daa
add
dec
stos
stos
push
leave
mov
sub
sbb
test
jg
repnz
sbb
sbb
push
shrb
mov
push
dec
xlat
fdivr
ljmp
sbb
mov
or
aad
push
cld
mov
fcomps
in
adc
push
xchg
cs
lock
call
push
jmp
icebp
sbb
movsl
sti
inc
and
das
ja
mov
add
inc
dec
adc
sbb
cmp
push
shlb
dec
add
mov
sub
mov
mov
jb
dec
stos
dec
imul
dec
std
in
mov
or
push
test
jnp
movb
loope
pop
ss
lahf
aaa
test
xor
mov
dec
mov
sub
and
stc
imul
fdivs
or
cmpsb
test
jge
add
in
sar
jne
imul
mov
sub
sub
add
out
jno
dec
ja
rcr
dec
sahf
push
mov
mov
sarb
lahf
shrl
push
out
push
scas
xlat
bnd
fwait
sbb
int3
xlat
adc
mov
mov
and
repnz
jecxz
sti
aas
pop
rcrb
mov
mov
enter
lds
lods
addr16
aaa
xor
pop
mov
loope
adc
xorl
imul
adc
inc
cmpsl
sub
stc
cmpsl
std
ficompl
mov
pushf
addr16
mov
push
in
inc
loop
pop
outsl
out
pop
iret
ljmp
ds
sub
add
popf
and
push
frstor
adc
sub
mov
inc
push
loop
test
inc
flds
jecxz
stos
outsb
lcall
stos
stos
outsb
outsb
iret
adc
mov
sahf
inc
push
cmp
sti
lods
loope
and
add
xchg
xchg
pop
xchg
mov
mov
push
dec
stos
mov
nop
xchg
cmpb
ja
cmpsl
aad
sbb
sub
dec
mov
dec
pop
xchg
sbb
mov
cld
add
test
xorb
roll
lcall
imul
je
xchg
int
stos
div
xchg
ljmp
pop
fidivrs
cmp
fidivl
xor
subb
add
cmp
fs
icebp
not
cs
pusha
insl
push
mov
movsl
pop
mov
hlt
sub
popa
push
xchg
sahf
bound
jg
icebp
adc
stos
jge
mov
mov
cmp
popa
mov
xor
inc
or
js
jb
add
adc
fnstsw
enter
adc
pop
in
aam
inc
mov
cmp
loope
dec
mov
in
inc
mov
xor
or
push
sbb
mov
ljmp
imul
jo
or
inc
fs
shlb
shrl
mov
test
rcrl
add
dec
pop
vmovss
adc
cmpsb
int3
inc
mov
push
daa
jnp
scas
mov
cmp
mov
adc
jne
stos
clc
ret
ja
lods
add
test
fwait
inc
mov
rcrb
inc
cmpsb
popf
stc
outsl
mov
sub
outsb
inc
inc
mov
sbb
pop
test
enter
xchg
pop
outsb
mov
cltd
dec
cmp
dec
dec
xchg
pop
jo
jg
sub
adc
js
in
les
sti
add
pop
dec
push
mov
fldz
lock
sarl
cmpsl
loope
aam
cltd
cmp
out
pop
inc
in
xlat
sarb
loopne
add
sub
push
aaa
insl
pop
leave
daa
cmpsb
fidivrl
orps
pop
mov
shrl
xor
jmp
testb
jne
pop
push
inc
jg
aad
mov
vpshaw
outsl
xor
dec
sti
mov
mov
out
std
cwtl
add
push
jp
pop
mov
lret
xchg
sbb
psubw
jge
xchg
orb
shll
movsl
mov
std
sahf
and
ret
je
outsl
jl
addr16
sbb
int
mov
jl
xchg
lret
mov
sbb
insb
sub
cmp
mov
cmp
mov
adc
loop
jecxz
insl
cmc
repz
mov
addr16
popf
dec
push
lret
repnz
dec
jno
imul
aad
fisubs
jge
pop
xchg
fdivs
rolb
dec
sbb
push
movsl
ja
in
mov
jmp
enter
cltd
mov
in
es
mov
pop
inc
sub
imul
mov
fdivs
bound
out
addr16
or
jno
inc
nop
mov
xor
xor
call
out
jb
mov
mov
outsb
scas
dec
andb
push
inc
rcrl
data16
add
pop
push
fldt
sub
jo
test
outsb
lret
push
mov
adc
xchg
add
or
jmp
cmp
pop
and
enter
into
loope
mov
in
or
xchg
clc
sbb
sbb
inc
sarl
scas
adc
js
jle
andb
mov
into
cmp
jnp
xor
testl
mov
test
roll
inc
inc
mov
ss
sbb
insb
or
ss
loop
adc
mov
dec
jns
ss
cmp
mov
push
cmp
nop
push
je
xor
shlb
in
dec
jns
push
stos
std
insl
sub
pop
adc
push
and
sub
enter
fdivrl
push
cmp
mov
xor
or
jbe
jl
mov
xor
ret
sub
cs
xor
hlt
push
popa
sbb
mov
daa
sbbb
inc
xor
adc
xor
js
test
fisubrs
mov
inc
inc
inc
xchg
xchg
data16
into
mov
aam
pop
pop
iret
in
rcrl
push
adc
mov
mov
test
xchg
and
inc
mov
daa
out
stos
pop
pop
pop
bound
outsl
and
je
xor
mov
fstpt
out
test
shrb
jb
adc
test
pop
outsl
add
sub
add
xchg
push
mov
cmp
mov
jp
shl
sub
push
adc
mov
or
adc
mov
sar
xchg
mov
and
cmp
pushf
xchg
xor
pop
jge
iret
adc
dec
mov
or
daa
cmp
sub
and
repz
mov
aam
xchg
call
cmp
inc
fs
push
dec
fs
dec
xor
std
sub
xchg
mov
mov
insl
outsb
xchg
sub
in
xchg
adc
call
add
pop
ljmp
cmp
sbb
leave
and
and
mov
add
xor
sbb
push
mov
inc
mov
cmp
aam
push
cltd
push
mov
or
xor
mov
mov
mov
fsubs
or
mov
jb
fiaddl
sub
mov
inc
iret
outsb
adc
loopne
or
lods
push
repz
nop
int3
fistpl
add
movsl
sbb
test
lret
inc
pop
shlb
clc
mov
mov
jge
jae
cmp
addr16
lea
iret
sbb
sub
xchg
jb
and
mov
cmp
lret
shlb
rolb
je
hlt
pop
inc
out
test
aam
dec
aas
or
pop
pop
fistpl
mov
aaa
loope
xchg
adc
out
adcb
inc
imul
scas
popf
mov
sar
dec
imul
xchg
dec
fnstcw
sbb
xchg
pop
aas
add
sub
cltd
sub
cmp
mov
cmove
sub
sahf
and
rcrl
cmpsl
pop
ret
mov
and
push
outsb
out
mov
mov
out
sub
jne
cwtl
outsb
push
repnz
dec
mov
and
popa
jo
push
fbld
ret
sbb
scas
mov
into
add
and
fnstenv
dec
or
inc
mov
dec
addr16
add
orl
fbld
jg
sub
and
arpl
adc
dec
inc
inc
or
sub
outsl
cmp
push
mov
in
cmp
jno
shl
xchg
push
cmp
sbb
in
dec
int
orb
pop
imul
icebp
loop
lahf
pop
fistl
loope
clc
dec
movsb
aam
fsubrs
insb
popa
push
aad
popa
inc
mov
sub
pop
scas
popf
cltd
pop
jno
repz
int3
in
scas
mov
push
push
fldt
inc
in
mov
std
add
ds
addl
loope
push
mov
std
movsb
ljmp
pop
outsl
mov
pusha
dec
and
aaa
aaa
mov
xor
mov
add
pop
scas
inc
dec
rorb
test
lea
stc
fisubrs
out
xchg
pusha
pop
cmp
pushf
icebp
jmp
popf
js
lock
imul
in
daa
push
std
dec
adc
or
lret
scas
fldt
repz
int3
movsb
pop
and
movsb
fs
inc
loop
xlat
and
cmp
or
dec
data16
cmp
repnz
in
aaa
pop
loop
cmpb
and
ja
dec
mov
push
mov
leave
je
and
mov
es
mov
outsb
out
loope
hlt
cmpsb
out
lods
jl
cmpsl
push
xor
inc
lds
jnp
jbe
push
lret
mov
aas
idivb
fsts
mov
out
das
add
dec
out
call
add
les
adc
and
scas
mov
test
or
fisttps
add
mov
movsl
dec
xor
jb
ja
xor
int
fmull
je
aaa
pop
cmp
mov
in
sbb
imul
adc
es
mov
aaa
cld
mov
pop
push
dec
and
sbb
stos
pop
push
popa
or
lcall
jns
sub
imul
xor
xchg
push
mov
addb
mov
insl
sti
inc
push
test
or
lds
mov
cltd
movsl
add
fidivl
jae
cmpsl
jb
dec
and
push
cs
mov
dec
push
ja
in
xor
dec
decl
es
jnp
ss
das
scas
mov
test
loop
jb
ljmp
mov
mov
sbb
adc
mov
adc
mov
in
mov
fstpl
ficompl
jmp
sub
divb
xchg
aad
loopne
bound
rcll
sahf
sbb
add
or
lock
xor
mov
ret
cmp
lcall
jle
movsl
mov
sarl
daa
xor
xlat
lds
or
push
and
pop
and
mov
out
jmp
jl
adc
ret
sbb
mov
push
mov
into
pop
imul
scas
mov
loope
ret
sti
iret
xchg
cmpsw
js
mov
lods
cltd
fucomi
int
sbbl
clc
arpl
inc
fnstcw
sbb
popf
lock
jnp
ss
cmp
imul
lods
sub
mov
movsb
rorl
in
cs
adc
addb
mov
in
dec
lock
sbb
and
fdivr
pop
adcl
add
push
popa
xlat
stos
mov
dec
pop
cmp
sti
daa
xor
or
int
aas
add
sbb
push
adc
mov
sub
ret
and
or
das
ja
mov
cmc
sti
pop
xchg
pop
jbe
add
jns
stos
fxch
inc
es
repz
leave
mov
inc
outsb
adc
fstpt
pop
gs
shl
daa
icebp
insl
lea
sbb
push
sub
pop
xchg
mov
xor
inc
nop
loope
in
mov
pusha
mov
jns
pop
hlt
pushf
and
in
ljmp
inc
sub
shl
push
leave
lods
jns
pop
jmp
and
xchg
pop
mov
cmp
or
imulb
pop
daa
mov
xchg
xlat
pop
and
lods
xor
jl
rcrl
lea
xchg
sbb
lock
sbb
test
mov
sarl
push
add
rcrb
inc
sti
dec
push
push
lcall
fcoms
notl
mov
ss
and
call
repz
and
push
adc
inc
push
xchg
push
push
mov
popa
fstl
sarl
pop
shr
out
rcl
jge
ljmp
jno
or
insb
out
push
mov
push
mov
and
pop
or
push
in
ds
popf
push
pop
sti
mov
add
cmp
pop
sub
push
stos
inc
push
jno
xor
pop
andl
mov
ja
pop
loopne
lods
sarb
daa
lods
ficoms
adc
into
nop
hlt
movb
cmpsl
mov
loope
cmp
in
insl
jmp
add
pop
push
ret
cmp
ret
cs
addr16
sub
or
xchg
into
adc
and
nop
and
leave
xlat
sarl
scas
mov
scas
dec
xchg
in
jle
std
and
rcll
or
adc
cld
iret
pop
fs
ret
sbb
xor
cmp
xchg
jo
add
sbb
jge
cmp
mov
or
icebp
cmpsl
push
mov
arpl
pop
iret
pop
int3
ret
or
adc
xchg
mov
loope
out
sbb
ret
shlb
out
jmp
int3
gs
bound
adc
dec
pushf
scas
icebp
mov
adc
ficomps
jb
cmp
jecxz
mov
sbb
call
mov
and
xor
pop
mov
sbb
mov
mov
lock
shlb
push
mov
jp
aad
cmpsl
imul
movb
fs
rol
cmp
mov
cs
mov
inc
cmpsb
dec
and
mov
vphadduwd
mov
add
pop
dec
in
shll
outsl
fsubrs
lds
cs
bound
pop
pushf
insl
cmpb
pop
shlb
push
lock
popa
pop
adcl
mov
push
pushl
lds
lds
icebp
out
ffree
cwtl
stos
cli
add
addl
rolb
xchg
in
aaa
adc
add
jle
adc
inc
xor
mov
sahf
add
cli
sti
enter
cmp
xchg
mov
sti
jp
mov
jnp
outsl
dec
push
hlt
mov
les
pop
rorb
dec
push
setl
cld
push
pop
jp
stos
dec
xchg
inc
sbb
loope
push
mov
shrb
cld
and
jp
lods
xlat
push
and
adc
ret
call
jnp
mov
cmp
mov
sahf
pop
and
jl
mov
iret
push
mov
fildl
cltd
lds
jo
xlat
push
cmp
gs
cmp
adc
push
lret
adc
ds
mov
xchg
jmp
cmp
pop
cltd
cmpsl
push
adc
push
xor
pop
lods
cmpsl
leave
ja
and
mov
gs
in
pop
fldcw
push
sbb
sete
fsubl
dec
ret
cwtl
and
xor
mov
mov
lret
add
int3
mov
inc
arpl
jne
bound
fbstp
stos
push
cmpsb
jmp
push
test
jbe
mov
jg
wrmsr
roll
inc
xchg
and
fmul
pusha
and
jbe
adc
jl
push
popa
xchg
loopne
popf
dec
rorl
mov
mov
mov
xchg
and
xchg
loopne
push
and
les
push
es
xchg
pop
and
adc
rcrb
cmpb
jecxz
insl
adc
xor
imul
jnp
jns
hlt
sub
xlat
rcrb
jle
jmp
pushf
push
aad
sub
in
jmp
loope
xchg
cmpsb
fdiv
imul
push
mov
loopne
xlat
insb
or
imul
add
xor
dec
and
repz
and
sarb
mov
lock
xchg
cmc
cmpsb
sbb
mov
pop
mov
out
cltd
jg
cmpsl
daa
xchg
jecxz
movsl
mov
lcall
enter
pmuludq
push
pop
sbb
sti
iret
mov
enter
sub
inc
xor
addr16
mov
pop
jl
adc
pop
fisubs
lods
xor
popf
bound
xchg
cs
shrl
pop
sub
outsb
sahf
lds
add
xor
cmc
mov
stos
andb
push
cmpsb
push
mov
ljmp
sub
jne
negl
cmp
fisttps
movsl
js
push
cmpb
lods
mov
sub
sbb
or
out
cli
sbbb
fistpll
pop
in
cli
out
imul
shll
inc
pop
fstl
push
fcoms
mov
adc
fbstp
enter
push
dec
add
pop
push
mov
xor
jmp
insl
mov
daa
add
mov
lret
inc
push
js
adc
inc
jns
insl
inc
loope
bound
fcompp
pop
scas
fdiv
push
adc
or
dec
pop
cmpsl
ror
push
mov
mov
sti
in
daa
xchg
jg
xchg
push
push
or
xor
adc
inc
sub
lds
and
popf
pop
xlat
xor
xor
inc
or
jg,pt
mov
mov
cmp
add
or
outsl
inc
and
mov
xchg
sti
fcoms
and
lods
.byte
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
movzwl
call
fstps
or
jbe
in
add
push
dec
dec
outsl
jl
pop
or
add
mov
mov
mov
jmp
cwtl
icebp
push
inc
sub
scas
dec
fsub
mov
cld
xchg
jno
call
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
pop
add
mov
add
mov
mov
mov
sub
and
add
add
sub
jne
mov
jmp
pop
shlb
int3
adc
mov
dec
adcb
test
aad
das
push
flds
adc
push
mov
pushfw
loop
push
xor
inc
dec
mov
inc
adcb
push
xlat
add
inc
dec
fs
add
adc
inc
test
cltd
push
gs
iret
out
int
arpl
enter
cli
stos
jle
dec
iret
mov
ret
dec
dec
fldl2t
out
push
clc
inc
sbb
dec
movsl
fs
test
leave
dec
or
ds
dec
pop
cmp
add
inc
dec
inc
pop
dec
fnstcw
fdivr
repnz
aad
hlt
xor
lock
lods
pop
mov
movsl
aaa
sbb
inc
dec
pop
repz
mov
mov
cli
sub
dec
mov
or
outsb
cmpl
mov
into
stc
je
jp
in
ret
into
inc
aam
andl
in
jno
mov
std
ret
dec
sarb
outsl
lret
pop
leave
outsb
add
cmp
shlb
cmc
lods
mov
enter
inc
shr
mov
and
movsl
sbbl
jg
jge
sub
add
loope
add
dec
mov
gs
je
dec
es
mov
xchg
inc
testb
sub
xchg
loopne
ret
cli
scas
add
cltd
shrl
repnz
inc
fwait
jo
push
push
jl
sub
enter
push
mov
ljmp
inc
or
popa
mov
into
jmpw
sub
jl
jle
xchg
mov
mov
adc
xchg
cmp
xchg
in
movsb
add
inc
loope
sub
add
fs
jle
test
add
loop
int3
add
fs
in
add
leave
mov
in
das
je
loop
push
daa
outsl
roll
cmp
in
xchg
sub
rolb
xlat
les
cmp
insb
test
jnp
mov
dec
adc
call
ffree
mov
je
sub
add
dec
mov
xchg
cmpl
adc
adc
mov
inc
mov
or
cmp
les
mov
xor
roll
cmp
jb
xor
add
pop
mov
insl
test
adc
std
js
hlt
adc
jo
cld
jnp
shrl
daa
mov
lret
fwait
lret
int
xor
mov
popa
shll
inc
mov
into
mov
add
cs
adc
mov
mov
pop
lret
sbb
adc
mov
mov
test
pop
add
lea
push
inc
mov
pop
cmp
cmpsl
jle
mov
mov
push
sub
cs
mov
cs
lgs
lock
mov
fwait
mov
xchg
inc
mov
sub
mov
sti
sbbw
inc
shrb
mov
cltd
sbb
xor
es
pop
or
adc
xor
dec
sbb
mov
cs
ja
xor
insl
scas
aam
daa
adc
xor
aad
daa
xor
xor
mov
cs
mov
add
xchg
pop
xor
sahf
mov
cs
mov
xor
inc
mov
mov
daa
xor
xor
mov
xor
daa
mov
int3
mov
inc
inc
inc
mov
mov
inc
mov
mov
dec
mov
xchg
addb
dec
mov
mov
aam
daa
xor
cmpb
mov
es
mov
jg
mov
dec
jp
mov
arpl
push
shrb
daa
das
mov
js
mov
imul
das
inc
inc
inc
mov
mov
daa
mov
jp
mov
jp
xchg
aam
daa
xor
aam
daa
xor
and
daa
mov
repnz
jnp
xor
int3
mov
inc
jbe
mov
mov
ss
cs
adc
mov
mov
push
xor
xor
xor
daa
not
cs
mov
cs
mov
jp
push
movsl
jp
scas
dec
mov
mov
push
mov
lods
mov
or
test
mov
xor
shr
inc
mov
lods
mov
or
test
mov
mov
pop
sti
shr
fs
call
push
pop
adc
movl
lods
mov
or
test
add
lret
fdivr
dec
ss
leave
sti
pop
sti
cmp
mov
cmp
mov
or
bound
not
dec
lods
mov
or
test
cmpsl
sbb
sub
mov
sti
cmp
mov
cmp
mov
or
bound
cmc
aad
lods
mov
or
test
cmpsl
sbb
fisttpl
lds
daa
mov
dec
cmp
das
sub
inc
mov
cs
call
push
pop
adc
movl
stos
mov
cmpsl
leave
xorl
add
fs
fildl
lds
daa
mov
aad
cmpb
and
sub
and
xor
je
inc
data16
shlb
mov
dec
and
bound
xor
faddl
mov
subl
je
daa
mov
cs
push
xor
es
mov
xor
dec
mov
mov
jbe
xor
mov
cs
mov
je
mov
cs
mov
xor
daa
iret
push
jb
aaa
jge
mov
mov
xchg
iret
add
cld
push
aad
mov
lret
xor
daa
sti
mov
jbe
mov
js
push
insl
aas
adc
mov
imul
adc
dec
add
dec
shl
mov
xchg
inc
inc
sbb
fcmovu
add
fs
inc
int3
inc
sbb
lds
xor
call
ljmp
gs
cmpb
outsb
xor
daa
mov
cs
mov
cs
mov
cs
mov
cs
mov
cs
mov
cs
mov
sbb
mov
dec
cmp
mov
out
inc
mov
cs
mov
cs
mov
cs
mov
cs
mov
cs
mov
stos
mov
mov
cs
mov
cs
mov
cs
mov
leave
jb
pop
xchg
push
lea
lret
dec
push
mov
cmp
mov
mov
leave
inc
inc
push
lcall
sub
bound
and
add
sti
cmp
or
notl
xor
cmp
loopne
adc
jmp
test
jecxz
dec
dec
and
imul
sbb
cld
arpl
movsl
sti
jnp
icebp
pop
sub
int
add
add
adc
cmpsl
jnp
mov
or
mov
mov
cmp
xor
shl
test
fcomps
xor
mov
mov
jae
inc
arpl
mov
jl
push
fcoml
scas
jns
out
cld
daa
mov
and
jo
ret
lret
pop
popa
cmpsb
je
or
ja
mov
xor
sub
cmpsl
or
and
shl
aam
xchg
cvtps2pi
and
in
outsb
mov
pop
cmp
xor
ja
xchg
in
dec
inc
test
inc
sbb
popa
cli
cltd
adc
frstor
aas
ret
dec
add
cs
lcall
cvtps2pi
popa
lods
push
adc
dec
mov
xchg
sub
mov
and
imul
xor
data16
add
int
out
imul
pop
aad
ret
or
aad
xchg
sbb
mov
pop
cmp
dec
sub
or
push
movsl
lock
adcb
ficomps
add
imul
dec
fistpl
mov
or
and
xchg
andb
fs
ror
mov
mov
lock
enter
add
jle
in
hlt
loopne
mov
lods
ror
test
aas
sub
addr16
aaa
ja
pop
dec
fsub
adc
adc
icebp
fidivs
testl
daa
out
push
fidivrl
xor
mov
push
xchg
mov
mov
out
es
jnp
cmp
xor
cmp
mov
cwtl
aam
incb
inc
je
imul
stos
or
rorl
sub
push
jle
lds
mov
mov
cmc
push
insb
mov
pusha
or
push
dec
adc
rcl
call
and
xor
mov
sbb
out
xor
cltd
in
cld
les
jecxz
mov
or
jp
lahf
in
mov
cli
push
jge
cmp
daa
adc
icebp
cmp
out
and
lahf
adc
stos
stc
xchg
fisubrl
mov
inc
stos
je
xor
push
jb
lods
std
cmpsl
clc
aas
or
add
or
cmp
cltd
cmc
movsb
test
cmpsl
out
dec
add
add
add
or
add
adc
mov
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
mov
add
mov
add
lea
add
lea
add
lea
add
lea
add
lea
add
add
add
add
jbe
jo
xor
cs
insb
add
imul
insb
add
gs
xor
fs
insb
add
insl
arpl
xor
fs
insb
add
jb
imul
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
add
add
add
add
add
add
add
addb
add
mov
add
add
lea
add
lea
add
add
gs
imul
inc
gs
arpl
popa
jo
add
add
imul
jae
js
add
inc
gs
imul
outsl
outsb
dec
outsb
outsw
inc
add
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
add
add
add
add
add
add
add
and
add
add
add
add
and
add
add
add
add
adc
add
add
add
add
add
adc
add
add
or
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
movb
lods
xchg
add
call
popf
add
fcmove
add
sahf
push
add
mov
add
std
sti
add
xchg
dec
add
cwtl
push
add
clc
repnz
mov
dec
add
mov
add
test
dec
add
scas
pop
add
ret
test
idiv
std
add
incb
outsb
fnsave
mov
lahf
xchg
pop
xchg
dec
add
mov
jo
pop
aam
add
incl
incl
hlt
cld
cld
add
xchg
dec
add
lods
pop
add
mov
addb
int
add
popl
sub
add
cld
stc
add
cmpl
pushf
xor
add
stc
repz
mov
pop
add
mov
std
add
test
in
mov
xchg
sub
adc
pop
add
cli
cld
add
idiv
add
mov
add
scas
pop
add
xchg
cmp
xchg
mov
add
lock
add
leave
mov
add
stc
hlt
add
xchg
daa
add
lahf
aas
add
stc
cld
add
idiv
add
movsl
dec
add
in
add
fmulp
add
leave
mov
add
out
out
adc
add
lcall
out
hlt
add
cltd
xor
lret
mov
add
jo
add
fsubp
add
fsubp
add
imul
mov
jge
push
addr16
add
fmulp
add
loope
add
lret
mov
add
into
rolb
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
or
add
adc
add
pop
pop
add
sub
cmp
cmp
inc
inc
inc
add
push
add
pop
add
add
js
test
xchg
add
stos
stos
add
rcl
rolb
fiadds
jmp
jmp
clc
clc
clc
add
sti
incl
movsb
mov
rolb
lret
add
add
add
add
jl
add
fwait
add
add
add
add
add
incl
dec
dec
incl
insb
insb
incl
nop
nop
incl
mov
incl
add
add
push
pop
add
sub
xor
add
inc
flds
add
add
incl
insb
popf
incl
nop
mov
add
add
aas
pop
add
push
jl
add
add
jle
add
xchg
flds
add
incl
dec
ret
insb
into
incl
nop
add
add
pop
pop
add
jl
add
fwait
fwait
add
mov
flds
add
lock
incl
dec
incl
insb
incl
nop
incl
mov
incl
add
sub
add
add
jl
add
fwait
imul
add
xchg
add
lock
add
mov
dec
inc
add
add
jmp
add
ds
add
add
jl
add
fwait
xor
add
inc
add
lock
add
insl
add
test
insb
lcall
add
add
add
add
jl
add
fwait
add
add
add
add
add
and
and
dec
decl
insb
ljmp
call
add
add
push
pop
add
sub
xor
add
inc
flds
add
add
insl
jmp
test
dec
add
call
add
add
aas
pop
add
push
jl
add
add
jle
add
xchg
flds
add
jmp
ret
add
ljmp
call
add
add
pop
pop
add
jl
add
fwait
fwait
add
mov
flds
add
lock
jmp
add
add
add
bound
add
add
inc
inc
popa
pop
add
push
pop
pop
push
add
add
add
add
pop
add
pop
pop
pop
pop
push
add
add
add
push
push
push
push
push
push
push
push
push
push
push
push
add
add
inc
inc
inc
dec
dec
dec
dec
cs
dec
dec
dec
add
xor
cmp
cmp
ds
inc
inc
inc
add
sub
xor
xor
xor
add
sbb
and
and
add
sbb
push
add
add
add
and
push
add
add
sbb
sbb
pop
sbb
add
add
adc
adc
push
pop
sbb
adc
sbb
add
or
push
or
or
or
push
add
sldt
add
pop
pop
push
add
add
add
add
add
add
add
add
add
add
add
add
aas
add
clc
pop
add
lock
loopne
add
rolb
add
add
add
add
add
add
add
add
add
add
add
sldt
cld
aas
add
sub
add
adc
add
and
add
add
and
add
add
inc
add
add
sahf
cmp
sahf
cmp
cwtl
jp
mov
fmulp
stc
hlt
stc
hlt
push
icebp
mov
add
add
push
fcmove
decl
addr16
decl
addr16
push
fcmove
pushl
add
add
push
fcmove
call
jo
call
fsubp
call
fsubp
decl
imul
repnz
mov
add
add
mov
out
repnz
call
jne
decl
lcall
out
hlt
decl
cltd
xor
adc
push
fcmove
cli
out
out
shlb
add
movsb
xchg
stc
hlt
call
xchg
daa
call
lahf
aas
push
stc
cld
jmp
sti
lcall
movsl
dec
decl
pushf
xor
call
in
in
fmulp
mov
add
add
add
add
test
in
mov
xchg
sub
adc
pop
push
cli
cld
in
idiv
pushl
mov
ljmp
scas
pop
call
xchg
cmp
xchg
mov
stc
lock
std
mov
cld
stc
lcall
cmpl
pushf
xor
incl
jl
ljmp
incl
jl
aaa
mov
pop
jmp
mov
std
mov
add
add
add
add
lcall
xchg
dec
jmp
lods
pop
pushl
mov
cmp
int
decl
mov
pushl
mov
push
sbb
ds
mov
add
add
add
add
push
fcmove
push
cld
cld
push
fcmove
mov
add
add
add
add
lcall
xchg
dec
call
mov
jo
pop
aam
std
std
ljmp
mov
cmp
dec
mov
add
add
add
add
call
test
dec
jmp
scas
pop
aas
ret
test
idiv
std
cli
ljmp
mov
inc
ret
cmp
pop
test
mov
add
add
add
add
mov
std
sti
push
fcmove
call
xchg
dec
jmp
cwtl
push
jmp
clc
repnz
aas
mov
dec
lcall
xchg
dec
push
fcmove
std
sti
dec
mov
incl
add
add
add
add
mov
inc
mov
push
call
push
fcmove
lcall
sahf
push
lcall
sahf
push
push
fcmove
push
call
popf
inc
mov
mov
jns
les
push
call
push
call
xchg
inc
lods
xchg
mov
add
add
lods
xchg
mov
lods
xchg
inc
lods
xchg
inc
lods
xchg
mov
add
add
aas
add
clc
pop
add
lock
loopne
add
rolb
add
add
add
add
add
add
add
add
add
sldt
cld
aas
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
test
mov
add
push
add
addb
call
test
aam
les
mov
movsb
pop
add
add
fsubrl
shlb
add
mov
add
call
les
and
lods
add
insb
add
les
nop
mov
dec
add
add
aam
add
enter
in
add
insb
add
pushf
add
adcb
js
pop
movsb
add
add
les
sub
pushf
add
js
mov
lods
xchg
add
aam
add
lods
add
addb
les
and
mov
add
int3
mov
sub
mov
in
add
hlt
hlt
add
je
fdivl
add
shlb
les
add
mov
pusha
add
mov
nop
add
mov
add
test
add
rol
add
push
add
mov
loopne
add
rolb
js
enter
js
and
enter
mov
sub
test
in
loopne
add
fadd
add
shrb
add
call
js
and
mov
add
int3
add
loopne
add
int3
pushf
add
js
int3
mov
fadds
loopne
fadds
adc
mov
add
enter
loopne
add
fdivrs
add
call
rolb
clc
hlt
hlt
add
rclb
cmp
test
clc
loopne
add
lock
cmp
add
incl
add
cmp
cmp
add
add
push
insl
insl
push
cmp
cmp
push
outsb
outsb
outsb
je
cmp
inc
push
push
dec
imul
add
add
xor
adc
insl
sbb
add
fs
cmp
insl
insl
cmp
add
inc
xor
push
dec
dec
dec
dec
pop
push
or
insl
sbb
je
pop
insb
or
pop
pop
pop
pop
push
pop
imul
pop
cmp
push
pop
insl
sub
outsl
inc
outsb
outsb
outsb
outsb
inc
sbb
insl
je
add
add
push
pop
inc
imul
incl
pusha
jb
pop
insl
push
aaa
add
push
insl
insl
push
ss
and
outsl
incl
and
imul
cmp
aaa
push
insl
add
and
pop
aas
incl
pop
pop
or
insl
insl
aaa
inc
insb
inc
push
pusha
xor
aas
aas
and
and
pusha
push
insl
pop
add
add
add
add
add
and
sub
aas
sub
push
sub
je
add
add
add
je
and
push
sub
aas
or
sub
insl
outsb
aaa
add
add
add
inc
outsb
xor
pop
sub
ljmp
or
sub
outsb
inc
add
add
add
outsb
das
pop
push
pop
pop
pop
pop
pop
pop
inc
inc
inc
inc
dec
pop
pop
pop
pop
pop
pop
jne
outsb
sbb
add
add
pop
sbb
pushl
pop
pop
inc
add
add
inc
ljmp
call
das
insb
jmp
add
add
sbb
decl
or
call
add
add
cmp
xor
sbb
syscall
pushl
gs
add
add
adc
cmp
adc
dec
dec
dec
dec
and
cmp
sub
cmp
adc
add
add
push
sbb
xor
dec
es
ljmp
xor
dec
xor
sbb
jmp
add
add
pop
cmp
adc
sub
cmp
pop
pop
dec
jb
or
pop
jmp
add
add
pushl
sbb
sub
push
adc
pop
dec
pusha
dec
sbb
je
incl
add
add
aaa
je
lcall
cmp
ds
jmp
sub
sbb
ljmp
inc
push
push
push
lcall
dec
jne
pop
es
dec
sbb
pushl
aaa
push
add
inc
ljmp
and
ljmp
aaa
add
aaa
inc
cmp
add
incl
add
inc
outsb
call
ljmp
add
outsb
ljmp
add
add
addr16
add
cld
aas
push
ud0
loopne
inc
add
incl
add
incb
add
add
jg
add
aas
clc
add
pop
clc
add
pop
lock
add
pavgb
add
loopne
add
loopne
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
clc
add
pop
incl
add
inc
add
push
ud0
clc
pop
cld
aas
ljmp
add
add
add
add
add
add
and
add
add
adcb
add
adcl
ret
out
mov
push
andb
add
mov
dec
push
ret
xchg
push
stc
jecxz
clc
loope
jmp
ret
ret
out
scas
js
push
mov
lods
mov
stc
fcmovnb
cld
bnd
std
div
cld
icebp
out
cli
in
jbe
lods
jbe
adc
mov
mov
cld
loopne
jmp
out
mov
xlat
int
cli
lock
cld
loopne
cld
jmp
lds
mov
scas
jns
adc
xchg
push
out
lret
scas
cld
fadd
sti
out
call
lret
ret
leave
sar
leave
sar
lret
ret
lret
test
rcr
sar
out
ret
nop
push
adc
add
add
xchg
jno
out
int
cld
faddp
jmp
sar
pop
mov
jmp
movsb
push
fcom
xlat
fcom
xlat
fcom
xlat
call
lcall
mov
ja
jmp
sar
std
loop
push
fmul
inc
xchg
outsb
lahf
les
lods
std
call
int
cmp
pushl
cmp
loopne
loopne
loopne
sub
jl
and
pop
call
fld
std
in
in
xlat
inc
xchg
imul
add
add
mov
fdivr
mul
incl
jmp
lods
push
ljmp
mov
call
jmp
out
ljmp
mov
mov
pop
lods
incl
gs
clc
in
jmp
fidivrs
xor
add
add
mov
sti
jmp
stc
jecxz
ljmp
jnp
pop
stos
pushw
lds
jmp
icebp
icebp
push
repnz
repnz
lock
mov
xchg
incl
lcall
mov
stc
jecxz
cld
in
loopne
shrl
add
mov
mov
jmp
movsb
pop
pushl
xchg
jmp
jmp
rolb
sti
sti
sti
sti
sti
stc
stc
stc
jmp
mov
xchg
pushl
int3
cltd
decl
mov
jmp
out
out
fadd
inc
xchg
jb
fidivrs
sar
hlt
ljmp
mov
mov
das
int3
cltd
lcall
lret
and
mov
jmp
mov
xchg
lcall
xchg
call
stos
cmp
xchg
ljmp
mov
int
std
jmp
fidivl
add
int
xchg
fcmovnb
sti
in
decl
scas
insb
incl
cmpsl
lcall
xchg
lcall
int3
xchg
lcall
int
lcall
les
lcall
mov
lcall
int3
cwtl
lcall
mov
sbb
mov
sti
out
push
fmul
dec
popf
jns
fidivrs
xlat
fcmovbe
sar
mov
lcall
into
lcall
rcrb
lcall
mov
push
rcrl
call
rcrb
ss
ljmp
std
jmp
fdivrl
add
shlb
mov
call
scas
push
call
iret
pushf
call
rcrl
call
shll
lcall
ret
call
aad
call
aam
call
mov
cmp
lods
lcall
scas
push
cmpsb
mov
in
sarb
aaa
fnstcw
loopne
mul
into
lcall
ljmp
incl
scas
call
aam
call
aad
call
xlat
cmpsl
lcall
lret
xchg
lcall
les
call
xlat
cmpsl
call
cmpsb
call
aam
jmp
test
jmp
addr16
loope
cld
bnd
jg
add
add
lods
fdivr
cmc
in
call
into
mov
and
lods
lcall
aad
call
aad
call
xlat
cmpsl
decl
fldcw
lcall
int
lcall
xchg
decl
scas
decl
fldcw
call
cmpsl
jmp
shll
in
aam
imul
jmp
enter
add
add
lahf
jl
jmp
imul
jl
xchg
das
scas
je
cmp
cmp
sub
test
sub
test
push
rclb
push
rclb
and
jnp
sub
test
sub
cmp
mov
cmp
scas
ja
popf
mov
lock
in
xlat
ret
dec
lahf
jl
fdivs
fdivr
cld
out
stos
mov
cmc
std
std
std
dec
stos
cld
out
clc
jmp
test
fnstcw
push
in
mov
cmc
cmc
std
std
std
call
in
in
jnp
jnp
cmc
in
call
mov
add
fdivrs
in
aam
fcmovnu
iret
push
hlt
hlt
std
std
std
jge
enter
mov
in
aam
call
mov
out
add
add
mov
call
leave
stos
ljmp
pushl
popf
jmp
xchg
jmp
jmp
xchg
jmp
xchg
jmp
xchg
jmp
xchg
decl
test
ljmp
shll
call
fisubrl
call
call
mov
testb
add
shlb
jmp
mov
push
lcall
stos
decl
loopne
incl
loope
incl
loop
incl
jecxz
call
enter
out
std
sti
ljmp
sar
aad
incl
loop
decl
loope
call
scas
call
test
jmp
mov
call
mov
incl
add
add
mov
jmp
lds
lcall
enter
fbstp
incl
loop
incl
in
incl
in
call
lret
jmp
fidivl
incl
mov
jmp
in
call
lret
xchg
ljmp
lahf
dec
jmp
les
dec
mov
incl
add
add
mov
push
ljmp
inc
mov
jae
pop
lret
xchg
call
fisubrl
incl
in
call
lret
out
std
sti
call
lret
fnstenv
call
jl
sar
dec
aad
jmp
mov
pop
pushl
jmp
dec
mov
incl
add
add
mov
stc
out
in
ljmp
call
test
cmp
fsubrs
adc
popf
decl
aam
incl
out
decl
xlat
pushl
lret
cmp
xchg
call
insb
call
mov
mov
fidivrl
add
mov
mov
in
ret
mov
test
nop
lcall
leave
fwait
push
std
incl
leave
decl
mov
or
lret
pushl
jecxz
lcall
lret
bound
js
in
ret
std
cli
cld
stc
cld
clc
sti
idiv
imul
in
faddp
mov
mov
add
mov
mov
pusha
out
ret
lahf
out
loop
out
jmp
ret
pushl
mov
lcall
int3
mov
incl
out
call
mov
pushl
ret
std
std
cld
cld
cli
clc
ljmp
test
mov
add
add
mov
jo
lret
cld
cli
stc
cld
clc
cmc
dec
mov
cmp
fsubrs
incl
jle
fnstenv
hlt
cld
cli
cmc
jmp
lret
shlb
jno
int3
test
mov
jmp
out
call
mov
pushl
gs
mov
cld
sti
jmp
lret
lret
jae
add
add
movsl
test
in
fld
push
loopne
stc
lock
aam
lahf
lcall
add
aad
mov
stc
icebp
in
call
mov
jo
add
add
shrb
fadd
mov
fidivrl
add
clc
pop
push
ud0
loopne
incl
add
incl
add
incb
add
add
aas
cld
add
aas
clc
add
pop
clc
add
pop
lock
add
pavgb
add
loopne
add
loopne
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
paddd
add
rolb
jmp
pop
clc
pop
cld
aas
ljmp
add
add
add
add
add
add
and
add
add
andb
add
jns
xor
mov
mov
ja
sahf
scas
js
sub
add
add
js
mov
addr16
mov
jmp
int
call
stos
mov
mov
je
jp
jb
or
add
add
adcl
mov
lods
cli
loop
call
clc
loopne
jmp
lds
std
mov
push
int
jl
cmp
add
add
xchg
insb
cmc
jecxz
cltd
in
lods
std
fnstcw
cld
fnstcw
cld
fnstcw
push
aad
fidivs
gs
scas
jp
jns
add
add
adcb
movsb
jle
out
leave
stos
sti
fnstcw
cld
fadd
std
in
loopne
cld
cli
sti
stc
std
ljmp
cld
fnstcw
jmp
mov
int3
sahf
js
mov
push
sahf
scas
jns
add
add
add
pop
mov
mov
sti
hlt
shll
cld
fidivrl
sti
cmc
repnz
in
ljmp
fstp
fdivr
out
out
in
std
hlt
lock
jmp
cld
fnstcw
push
xlat
sar
lods
mov
mov
push
popf
mov
push
add
add
add
mov
fistpll
mov
std
ffreep
push
repnz
xlat
fcos
fcmovbe
fcos
aad
call
aad
fcmovnbe
fcos
fcmovnbe
fcos
out
push
out
jecxz
std
jecxz
std
ffreep
push
fmulp
fidivl
pop
sahf
mov
push
pop
mov
mov
mov
in
loopne
sti
repz
pop
cwtl
movsb
pop
jmp
xlat
fdivr
loopne
fdivr
aad
call
aad
jmp
fcomp
jmp
fcomp
cmp
ret
cld
repz
in
std
loop
clc
in
fnstsw
pop
lahf
mov
push
add
add
add
cwtl
sti
stc
fnstcw
in
loop
sar
pusha
mov
lcall
popf
dec
pushl
addr16
fcmovu
jmp
fcmovu
fdivr
fcomp
fdivr
in
loopne
in
loopne
xor
dec
ljmp
call
in
loopne
out
clc
out
fnstsw
pop
mov
add
add
mov
icebp
not
mov
in
loop
fsub
leave
call
call
popf
dec
jmp
mov
incl
cmp
call
fdivrp
ljmp
cmp
lcall
pushf
dec
lcall
jno
jecxz
into
jmp
iret
push
out
call
mov
in
mov
add
add
stos
xchg
hlt
aad
ljmp
push
stos
call
dec
jmp
xchg
call
fwait
cmp
jmp
jmp
in
jmp
in
push
out
push
out
aas
mov
mov
and
dec
jmp
outsb
jmp
loop
jmp
push
dec
mov
pop
cmp
add
add
cltd
je
out
iret
mov
std
jecxz
call
sar
pop
lods
imul
xor
lahf
pushl
nop
pushl
in
out
push
in
out
ljmp
push
jmp
push
jmp
pushl
mov
nop
aas
xchg
jmp
pushf
dec
ljmp
jne
cmc
out
call
fdivr
ljmp
mov
test
rclb
clc
sti
jmp
int
jmp
insb
mov
lcall
mov
pushl
nop
ljmp
mov
xor
repnz
cld
repnz
push
lock
out
lock
repnz
repnz
xor
mov
cmp
cwtl
incl
cltd
lcall
mov
lcall
dec
jge
jg
jmp
jmp
sar
cli
call
cmpsl
repnz
add
add
mov
fadd
in
ljmp
daa
sahf
dec
jmp
mov
pushl
xchg
ljmp
nop
jmp
lds
xor
cli
cld
cli
cld
push
div
push
div
clc
std
clc
std
pushl
mov
mov
and
mov
inc
into
lahf
decl
lahf
lcall
mov
ljmp
push
jmp
jmp
ljmp
iret
movsl
or
mov
fwait
jbe
out
sarb
jmp
aad
int
mov
cmp
lods
pushw
xchg
ljmp
leave
xchg
jmp
lcall
nop
lcall
mov
xor
mov
std
cld
cld
cld
cld
cld
pushl
mov
lcall
nop
jmp
leave
xchg
decl
decl
lahf
call
test
pop
call
aam
jmp
xlat
std
call
mov
xchg
ret
sub
mov
int
jmp
sar
jmp
fcos
bound
push
ljmp
les
jmp
leave
xchg
lcall
leave
xchg
call
enter
ret
pushl
mov
xchg
lcall
enter
into
pushf
call
scas
cmp
nop
call
mov
jae
jmp
jmp
sar
xlat
mov
fld
xchg
insb
and
add
add
sahf
jnp
repnz
cld
std
out
jmp
aad
mov
mov
js
ds
mov
lcall
xchg
lcall
xchg
lcall
lret
xchg
call
xchg
pushl
lds
pushl
mov
xchg
lcall
int3
cwtl
lcall
int3
xchg
lcall
lret
inc
aam
lcall
mov
adc
dec
int3
lods
jmp
xlat
std
jmp
mov
xchg
ret
and
mov
sar
jmp
sar
pop
cmpsl
arpl
sbb
fwait
pushl
shlb
lcall
int3
xchg
lcall
int
lcall
int
call
int
pushl
ret
mov
ljmp
rolb
sbb
lcall
int3
xchg
jmp
into
pushf
decl
scas
incl
sahf
call
test
pushl
outsb
jmp
aad
jmp
clc
in
call
mov
fld
xchg
insl
sbb
add
add
mov
ret
jmp
mov
mov
cmp
aam
jmp
int3
cwtl
lcall
into
lcall
rcrb
pushl
lds
ljmp
mov
adc
pushf
call
rcrl
call
iret
popf
call
cltd
pushl
shll
adc
mov
test
jmp
fcos
ljmp
imul
add
add
xchg
outsb
add
sti
in
in
jmp
sar
cmpsw
lcall
stos
popa
incl
mov
lcall
iret
pushf
call
iret
fwait
call
rcrb
call
rcrl
ljmp
nop
decl
rcrb
call
shlb
lcall
stos
pushl
int
lcall
test
pushl
outsb
jmp
in
mul
iret
std
shrb
add
enter
ljmp
in
fcmove
lods
pushl
dec
lcall
mov
mov
sub
mov
call
rcrl
call
mov
decl
aam
ljmp
xchg
ljmp
enter
aad
call
aam
call
aam
call
aam
call
mov
jmp
cmpsb
cmp
stos
call
mov
incl
push
jmp
iret
mov
out
fdivrp
cld
jmp
test
das
shrb
sar
in
std
jecxz
call
cmpsb
pop
pushl
int3
cltd
incl
mov
pop
shll
call
mov
call
aad
call
cmpsb
decl
movsl
ljmp
xchg
jmp
lret
or
cmpsl
call
xlat
test
adc
cmpsl
call
cmpsb
call
aad
call
aam
lcall
aam
ljmp
stos
lcall
mov
sub
xchg
jmp
xlat
out
repz
test
test
add
add
mov
fcos
push
loope
std
fadd
call
pop
call
mov
decl
mov
sub
test
call
aam
call
aad
call
cmpsb
call
fsubrs
incl
fsubrs
jmp
lret
xchg
incl
fldcw
decl
fldcw
call
xlat
test
adc
cmpsb
call
aam
lcall
test
shlb
jmp
popa
fmul
push
jecxz
stc
out
call
mov
rolb
add
add
mov
mov
push
loope
fcmovnb
cmpsb
jmp
fwait
dec
call
mov
mov
pop
aad
decl
shll
decl
cmpsb
decl
xlat
cmpsl
decl
fisubrl
incl
fisubrl
jmp
lret
xchg
incl
fldt
pop
fldt
or
test
decl
movsl
call
xlat
movsl
lcall
cmpsb
decl
mov
dec
jmp
lret
push
in
cld
jmp
jmp
lods
ljmp
add
shrl
sar
push
loope
cld
out
ljmp
stos
popa
ljmp
into
pushf
incl
mov
fsubrs
lcall
fldcw
lcall
cmpsb
lcall
xlat
cmpsl
lcall
xlat
test
pushl
ret
mov
sbb
jmp
jmp
jecxz
pushl
mov
call
fnsave
lcall
fdivl
lcall
lcall
fldcw
lcall
leave
xchg
cmp
mov
jmp
out
loop
icebp
fcmovne
icebp
shrl
add
fnstsw
cld
push
in
repz
lcall
test
cwtl
jmp
sahf
jmp
lret
cwtl
jmp
lret
daa
lret
daa
lret
daa
lret
daa
lret
daa
lret
sub
mov
sub
xchg
incl
cltd
ljmp
int3
lcall
lret
cwtl
jmp
lret
cwtl
decl
xchg
jmp
lret
cwtl
jmp
shlb
jmp
shlb
jmp
shlb
jmp
shlb
jmp
xchg
jmp
xchg
pushl
test
lcall
repz
mul
xlat
stc
fdivs
add
mov
mov
std
lock
push
out
in
int
mov
std
std
cli
sti
out
repnz
mov
shll
cli
in
fidivrs
jg
shrb
std
icebp
in
push
in
fidivrl
lret
cld
std
idiv
pushl
mov
stos
stc
lock
cld
icebp
jecxz
out
mov
iret
cmpsl
xchg
mov
pop
cmc
out
sti
push
out
std
icebp
in
mov
jge
jecxz
fdivrp
jmp
div
call
lret
daa
popf
dec
fidivrl
ljmp
fcmovne
out
aad
xchg
pop
xlat
mov
mov
out
loopne
push
ljmp
scas
cmp
inc
hlt
call
decl
fldcw
ljmp
cmpsb
pop
pushl
ljmp
mul
hlt
fstpt
add
shrb
out
clc
in
push
fmulp
jmp
in
hlt
call
loopne
incl
fldcw
decl
rcrb
call
in
stc
out
push
in
loopne
aam
movsl
mov
aam
lahf
int
imul
stc
lock
aad
incl
cmp
int
decl
movsl
decl
cmpsb
decl
cmpsl
decl
test
decl
stos
decl
lods
decl
lods
decl
lods
incl
lods
decl
xchg
stc
std
mov
out
incl
fldt
decl
loope
decl
mov
push
aad
jmp
mov
call
fcmove
sti
repnz
out
loopne
aam
mov
add
shrb
sti
icebp
push
aad
incl
lods
decl
iret
cltd
decl
incl
fbstp
incl
loope
incl
loope
incl
loope
incl
loop
incl
loop
incl
loop
lcall
shll
fdivr
repz
mov
incl
mov
incl
loope
decl
rcrl
call
fcmovb
std
cmc
cli
hlt
call
in
out
mov
sti
repnz
fadd
jmp
movsl
push
call
ret
test
sbb
scas
call
loopne
decl
loop
incl
jecxz
incl
mov
incl
mov
incl
in
incl
jecxz
jmp
shrl
out
cld
cli
pushl
in
incl
fnsave
add
mov
decl
in
call
in
lcall
fsubrl
jmp
mov
lret
std
cmc
cli
cmc
jmp
in
mov
jmp
clc
repnz
sti
repz
in
fildll
dec
lcall
popa
call
xchg
adc
mov
decl
mov
or
mov
incl
sar
in
incl
in
incl
in
jmp
shrl
cld
call
stc
repz
fcos
pop
loopne
incl
loopne
incl
in
lcall
call
leave
ljmp
out
ljmp
loop
jmp
stos
lcall
lds
jmp
push
jmp
mov
stc
lock
cld
idiv
sti
div
jmp
aam
incl
add
add
lds
sti
idiv
sti
out
fcmovb
call
scas
xchg
jp
pusha
mov
push
call
leave
nop
call
aad
decl
fidivs
incl
in
incl
in
incl
in
jmp
aam
call
hlt
call
incl
loopne
incl
out
jmp
ljmp
pop
ljmp
pop
aam
incl
test
lods
push
cmp
pop
incl
mov
push
std
sti
idiv
sti
div
scas
hlt
aam
sahf
sahf
clc
repz
cld
idiv
push
out
push
int
fbstp
decl
pusha
ljmp
scas
push
sbb
shll
decl
in
incl
out
jmp
aad
stc
std
dec
clc
repnz
xlat
incl
loop
incl
jecxz
call
call
sar
jno
aad
mov
enter
xchg
ljmp
scas
imul
mov
jmp
mov
push
iret
mov
cld
clc
cld
clc
push
call
mov
add
mov
scas
fdivr
repz
cld
cli
push
jmp
not
push
mov
mov
mov
insb
lcall
rorl
or
lods
jmp
cld
stc
lcall
in
incl
loop
incl
out
call
call
into
call
mov
jmp
mov
jp
idivb
push
out
cld
cli
std
sti
clc
push
icebp
in
fcmovnb
lods
leave
iret
test
add
shll
scas
repnz
fdivr
cmc
lock
clc
std
cli
cld
out
call
dec
movsl
jns
jp
ljmp
mov
call
xchg
ljmp
repz
push
in
fdivr
add
ret
in
incl
out
call
out
ljmp
loope
lcall
int
jmp
mov
incl
movsl
jnp
hlt
les
cld
cli
cld
cli
idiv
sti
div
cmc
clc
repz
mov
xchg
and
add
add
movsb
xchg
push
aam
mov
xchg
in
mov
repz
in
stc
cmc
cmc
std
sti
cli
std
sti
repz
out
mov
mov
stos
outsb
call
roll
add
out
incl
out
decl
pop
test
inc
fwait
imul
mov
repnz
std
std
cli
clc
sti
div
hlt
repnz
jecxz
lds
mov
mov
push
shrl
add
rcrb
in
int3
rcl
repz
push
jecxz
jmp
mov
mov
pmaxub
decl
mov
sbb
mov
mov
jnp
repz
std
cld
cli
stc
push
out
out
ljmp
test
mov
add
les
mov
clc
repnz
std
cld
cld
div
in
mov
jl
push
sbb
shlb
lcall
rorb
out
mov
stc
std
cld
sti
hlt
call
scas
lret
cmpsb
xchg
pop
ret
movsb
lea
leave
mov
cli
div
clc
std
jmp
fwait
popa
decl
outsl
decl
lcall
ret
test
std
std
clc
repz
cmpsb
mov
add
add
popf
xchg
stos
xchg
xchg
repnz
jmp
cld
sti
std
jmp
shlb
rcll
mov
cld
sti
cli
cld
out
into
loopne
stos
xchg
jb
movsl
mov
lret
scas
cltd
cmp
lds
sti
cli
div
stc
in
scas
mov
lds
mov
std
sti
clc
hlt
cld
call
add
add
mov
sbb
int
mov
cld
stc
idiv
jmp
mov
lret
scas
xchg
push
in
mov
cmpsl
repnz
push
iret
call
mov
adc
add
add
push
ud0
add
jmp
pop
incl
add
inc
add
incl
add
incl
add
incb
add
add
cld
add
aas
incl
add
clc
add
aas
incl
add
lock
ud0
add
lock
ud0
add
loopne
add
incl
add
rolb
add
add
incl
add
incl
add
incl
add
add
add
incl
add
add
add
incb
add
add
add
add
add
jg
add
add
add
aas
add
cld
add
add
aas
add
clc
add
add
aas
add
clc
add
add
pop
add
clc
add
add
pop
add
clc
add
add
pop
add
lock
add
sldt
lock
add
sldt
lock
add
sldt
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
lock
add
sldt
cld
add
add
aas
add
inc
add
add
add
clc
add
pop
incl
add
incb
add
add
incl
add
incl
add
inc
add
incl
add
jmp
ud0
add
push
ud0
add
clc
pop
incl
add
and
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
mov
add
add
add
mov
and
mov
in
lods
mov
sub
mov
or
adc
out
aas
cmpsb
sub
inc
sbb
ret
insb
sub
aaa
sub
adc
pop
aad
cli
push
jmp
movsb
push
mov
mov
clc
pop
cmp
fcmovne
imul
ret
jb
push
adc
fidivrs
inc
push
inc
addr16
dec
aaa
push
leave
test
jb
mov
cmpsl
dec
dec
ret
daa
and
xchg
mov
movsl
bound
lcall
cmp
xorb
loope
sub
mov
jbe
jno
xor
dec
pop
stos
pop
mov
add
outsl
lock
in
js
push
bound
xchg
test
adc
lds
add
or
inc
test
jmp
icebp
sub
icebp
adc
xchg
xchg
adc
scas
jecxz
aad
cli
adc
shufps
cltd
cmp
pop
cmpsl
push
adc
mov
and
inc
ss
sbb
daa
addr16
push
inc
ffreep
jecxz
popf
sbb
lds
sub
enter
mov
xor
in
xlat
rcrb
mov
mov
cmp
loop
inc
lret
mov
sub
fdivs
fs
andb
arpl
xchg
sbb
mov
bound
lods
mov
outsl
pop
push
repz
pop
ljmp
daa
dec
inc
mov
dec
lcall
scas
push
add
mov
jbe
mov
popf
sbb
sahf
inc
cmc
neg
stc
sub
in
mov
dec
inc
je
jo
or
sub
mul
stc
mov
xlat
dec
push
test
sti
lea
mov
push
movsb
mul
shl
scas
xchg
sbb
aam
aam
sbb
addr16
in
pop
out
xor
xor
sub
icebp
dec
add
dec
lahf
cld
out
jo
push
lahf
out
fmulp
jns
and
mov
call
dec
xor
and
lock
scas
push
cs
add
sub
test
andl
mov
jecxz
cmp
dec
dec
inc
rcrb
clc
xchg
data16
in
daa
adc
popa
pop
cltd
jbe
std
ds
mov
aad
clc
ret
cmp
ljmp
divl
mov
jecxz
inc
mov
push
pop
pushl
std
mov
xor
xchg
pop
mov
xor
popl
cltd
shll
dec
adc
sub
cmp
jl
lcall
mov
push
pop
fwait
mov
jno
pop
incb
inc
mov
leave
dec
pop
cmp
and
sub
cwtl
xor
rep
mov
push
and
mov
aad
in
dec
jecxz
or
das
out
fstpt
out
lods
fcmovb
movsl
dec
clc
fptan
mov
or
cmpsl
mov
insl
pop
std
inc
xor
mov
ds
push
mov
dec
mov
ja
jmp
and
ss
stos
inc
add
mov
scas
jo
jo
aad
pop
push
jmp
mov
jb
xor
dec
cmpsl
xor
enter
add
es
xchg
into
ret
test
les
jge
imul
aad
adc
test
jl
out
push
cld
push
inc
sbb
mov
jb
sub
cmp
adc
xchg
sbb
bound
pusha
adc
xor
je
lret
out
sahf
hlt
roll
cs
cmp
sbb
mov
outsb
inc
scas
xchg
shlb
push
mov
test
or
fsubrl
mov
pop
cmpsb
mov
sbb
into
xchg
sub
xchg
pop
cmpsl
ret
in
mov
into
mov
add
int
cmpsl
mov
data16
data16
jecxz
ror
adc
xor
xor
lock
push
mov
xlat
jl
jl
push
fs
sahf
fisttpll
iret
out
lcall
hlt
pop
ds
in
sub
icebp
pop
bound
jg
add
mov
and
jnp
and
jne
clc
pop
lcall
mov
cld
ficoms
jae
push
add
mov
arpl
jo
imul
call
rcr
sbb
and
in
mov
sub
outsb
jg
stos
mov
mov
jge
push
enter
test
dec
cmp
and
push
outsl
lds
push
lods
loopne
jno
mov
andb
jae
ffreep
in
and
repz
fs
mov
sbb
jns
adc
bound
daa
in
adc
outsl
push
cmp
fisubrs
jns
sahf
testb
sti
andb
je
dec
test
fucomi
insb
pop
adc
push
fwait
or
stos
ja
clc
sbb
imul
and
int3
mov
nop
addb
cmp
das
push
cmpsb
fwait
out
or
xchg
cmovns
dec
std
mov
es
mov
dec
iret
aam
jb
and
dec
rcll
in
and
jb
loope
test
pop
enter
out
rorl
insl
xor
fcomi
mov
ljmp
dec
addl
inc
int
jle
repnz
leave
mov
xlat
ss
sbb
dec
mov
mov
or
adc
rcrl
cmc
and
cmp
in
adc
sbb
aaa
data16
out
in
mov
movsb
dec
insl
rcl
popf
xchg
xchg
rcl
pushf
jo
orb
lock
mov
sub
pop
xchg
adc
in
mov
xor
cmc
mov
mov
data16
dec
mov
add
int3
xor
and
aad
push
cs
cwtl
xchg
push
lahf
outsb
lock
inc
xor
cwtl
inc
add
pop
mov
stos
mov
out
push
xchg
ss
pop
pop
inc
mov
push
repnz
aaa
je
and
add
test
mov
stc
or
cmc
push
sbb
cmp
aaa
cmpsl
stc
mov
iret
adc
hlt
mov
cmp
xchg
inc
dec
lahf
and
aas
aaa
cmpsb
jl
xchg
cltd
sbb
ret
arpl
jp
jne
test
in
test
fwait
mov
add
dec
ds
pushf
movsb
jno
mov
test
mov
push
iret
std
mov
out
pop
mov
mov
pop
decl
xorl
ds
jne
jg
sub
or
xchg
xor
mul
int3
mov
dec
mov
lret
dec
out
cli
xchg
inc
jecxz
mov
mov
daa
nop
test
je
sbb
ret
pop
mov
sbb
mov
sub
stos
xchg
xor
mov
dec
push
sub
pushf
test
jp
dec
inc
push
das
mov
cmp
cli
bnd
fstpl
fidivs
xor
sbb
call
sbb
push
xor
test
pop
mov
jp
out
pop
iret
dec
arpl
or
add
stos
or
xor
lret
and
and
out
mov
mov
cmpb
cmpsl
fwait
mov
sbb
sbb
les
cmp
fcom
enter
push
repz
inc
mov
inc
push
xor
int3
push
popa
or
inc
out
mov
mov
push
loopne
push
xor
sahf
nop
sysret
push
mov
jp
xor
or
in
stc
mov
mov
inc
and
xor
out
ficoml
push
ljmp
mov
xchg
mov
mov
andb
lcall
out
sub
out
iret
and
jo
mov
xorl
fisubrs
pop
int
xlat
negl
jb
jecxz
fucomp
fwait
lahf
pop
or
ret
and
mov
sbb
int3
aaa
fldt
stos
sbb
jb
leave
pop
xchg
jb
push
cli
pop
sub
dec
out
cwtl
cmp
andb
je
imul
cmp
jo
cmpsb
popf
lret
cmove
jg
fsubl
sbb
jo
sub
sbb
inc
push
leave
movsb
cmpsl
cltd
push
test
pop
mov
pop
loopne
push
add
addr16
jbe
mov
ja
sub
ret
mov
pop
shl
adc
pop
fcoml
int3
inc
pop
push
sub
push
nop
xchg
shlb
push
int
scas
sahf
pushf
sbb
ret
loopne
push
jae
dec
xchg
movsl
fnstsw
inc
inc
xchg
aaa
dec
cmp
xchg
mov
cwtl
push
sbb
out
jae
leave
out
xchg
push
pop
aad
mov
sub
inc
aaa
adc
inc
fmulp
add
jne
cmp
pop
and
sti
jae
xor
jb
and
fildll
mul
mov
xor
and
xchg
cli
ss
stc
mov
daa
sub
adc
xor
int3
push
arpl
out
aad
and
clc
push
cltd
xchg
hlt
bound
int3
mov
ret
xchg
jg
popa
push
stos
jb
mov
pop
decb
jecxz
dec
pushf
subl
fsubr
pop
out
arpl
outsl
sbb
lahf
bound
adc
mov
jnp
pop
or
push
jp
xor
es
lcall
pushf
sbb
mov
pop
jle
cmpsb
rcrb
sbb
dec
lret
pop
negb
inc
sbb
xor
in
test
inc
and
repnz
dec
insl
and
std
pop
push
ficomps
into
addr16
inc
xor
xor
pusha
fst
in
cld
jecxz
jl
rcrl
popf
ret
in
mov
mov
cli
rorb
add
lea
sub
insb
add
cltd
dec
clc
sub
jae
push
enter
in
cmp
daa
inc
arpl
mov
ds
inc
js
cli
scas
or
sbbb
cmp
mov
ret
mov
or
call
test
and
pop
add
scas
xor
push
fdivp
test
jbe
cmp
shll
jge
dec
aas
sbb
testb
mov
enter
aad
cmp
sar
dec
cmp
mov
stos
daa
cmpsb
and
cmp
scas
and
cmp
loope
jo
xchg
push
xchg
lods
bound
adc
sbb
push
dec
jge
sarl
outsb
xchg
xor
lods
mov
add
gs
movb
mov
test
leave
ret
pop
mov
shrl
pop
outsb
movsl
inc
xchg
mov
jno
les
fcmovnb
push
leave
push
push
pop
mov
idivl
fsub
ror
cmp
inc
dec
in
add
adc
rcll
daa
mov
cltd
clc
jo
sbb
fidivs
cli
push
and
sub
push
push
push
sbb
or
xor
stc
mov
repnz
test
notl
leave
int
arpl
in
stos
sub
lcall
into
cmp
mov
sar
jo
mov
mov
jo
jle
xchg
int3
lret
outsb
inc
lods
iret
andb
iret
out
jo
jbe
mov
mov
fmull
dec
xor
push
scas
mov
mov
mov
cmpsl
jp
jne
inc
and
pop
dec
incl
dec
pop
fidivs
out
shll
pushf
outsb
adc
dec
inc
addr16
jns
outsl
aas
lock
addl
pushf
and
dec
cld
push
out
ss
or
adc
mov
mov
cli
cs
mov
ja
adc
ja
or
xor
mov
sub
std
fildll
in
xchg
test
xor
or
xchg
mov
rolb
lea
test
cmp
sbb
pop
or
inc
mov
pop
loopne
shrb
cwtl
ficompl
mov
sub
and
int
pop
les
cmpsb
jne
adc
sahf
loop
scas
in
pop
mov
sarl
in
pop
loop
and
cmp
pushf
repnz
push
jg
popw
or
add
dec
popf
push
jp
inc
jg
cmp
inc
inc
pop
cmpsb
mov
maxps
jp
jmp
negb
shl
leave
xchg
rorb
scas
jae
lret
pop
aas
mov
lret
les
ss
aaa
insb
pop
lock
sub
movsl
mov
mov
enter
adc
adc
inc
inc
xlat
enter
cs
jg
mov
or
dec
hlt
cmc
adc
sar
xor
into
xor
mov
mov
mov
pop
xchg
mov
mov
out
clc
jo
xor
fcomip
pop
call
sahf
imul
into
addr16
inc
pop
or
outsb
push
adc
andl
inc
imull
jmp
rcrb
js
bound
xor
add
mov
xchg
dec
mov
lea
and
jle
and
fsubs
movsl
mov
jecxz
mov
rorl
xchg
repz
es
push
add
cmpl
les
scas
test
int
sub
jo
idivl
cmp
xchg
cltd
cmp
xor
pop
aas
das
mov
addps
inc
and
lds
pushf
cmp
out
test
aas
push
cmpl
imul
lods
push
cld
jo
mov
mov
jo
arpl
pop
jno
pop
in
pop
or
or
mov
cwtl
bound
xchg
sub
mov
xchg
outsl
es
movsl
out
sbb
pop
scas
insb
mov
or
push
enter
aad
sahf
in
inc
sbb
int
das
jmp
jbe
rcrl
lret
gs
pop
rolb
popa
adc
popf
rclb
sbb
pushf
push
xchg
push
xchg
shrb
pop
and
or
cld
hlt
jecxz
int3
cli
sahf
push
or
js
lcall
mov
in
push
int3
roll
and
int3
in
lcall
xor
xor
test
mov
gs
incb
mov
loop
mov
cmp
cwtl
icebp
cwtl
pop
cmp
xlat
cmpsl
call
jae
lods
pop
inc
shll
adc
jb
nop
push
add
orl
pop
outsl
test
lock
sbb
jb
sbb
adc
mov
cmp
and
jle
inc
and
inc
push
jno
jl
and
and
cmpsb
mov
mov
mov
push
test
stos
pop
push
cld
ret
imul
addr16
xlat
mov
cli
and
test
cld
pop
cmp
stos
insb
jl
dec
sbb
mov
jge
push
movsl
dec
fcoms
mov
sti
popf
add
inc
lret
mov
sar
rolb
inc
push
es
inc
cmp
jge
xchg
lret
sar
push
imul
ja
rclb
push
xchg
add
add
aad
andb
cmp
cmc
push
aaa
dec
aam
repz
call
dec
stos
and
pop
scas
imul
inc
in
push
ret
out
dec
xor
jae
xlat
jle
push
jno
jge
rcrb
imul
in
ret
iret
xchg
inc
dec
out
push
fcomi
cmpsb
mov
imul
aad
mov
sbbb
jb
dec
mov
outsl
sbb
negb
inc
addr16
add
in
shll
mov
scas
mov
imul
dec
test
jae,pt
or
iret
je
fimuls
ret
pop
stc
pushf
sbb
es
jl
lds
xchg
aas
push
dec
sbb
cltd
sub
test
inc
ficoms
test
xor
stc
mov
cmp
outsl
es
pushf
push
loop
movq
iret
rclb
data16
aaa
pop
jle
fwait
inc
adc
movsb
jle
mov
imul
inc
add
clc
ss
pop
add
xchg
negl
lret
imul
pop
pop
jb
sub
pop
inc
add
add
bound
or
xchg
jmp
sti
cmp
lcall
cmpsb
sub
mov
shlb
loopne
cmpsl
stos
cmp
jp
pop
sub
xchg
push
cltd
mov
movsl
mov
xchg
out
sub
and
test
sbb
add
xchg
mov
and
shll
addl
cmp
add
push
jle
cmp
and
mov
jge
mov
pusha
jmp
dec
dec
xchg
dec
mov
jnp
je
dec
js
int3
lods
bound
lds
xchg
dec
adc
pusha
mov
aam
jns
mov
mov
add
mov
in
or
mov
clc
test
pop
lcall
push
fs
js
cmp
mov
add
out
imul
add
xchg
bound
mov
inc
arpl
push
jle
mov
dec
adc
mov
xchg
cmpl
push
jecxz
sbb
inc
inc
bound
jae
addb
js
xchg
popa
daa
mov
scas
and
sbb
sub
loop
adc
mov
dec
bound
js
pop
sti
push
mov
scas
mov
sbb
bound
mov
js
dec
cmp
mov
fimuls
je
adc
lret
adc
inc
addr16
adc
aad
add
push
dec
bnd
imul
sub
and
test
hlt
in
jb
pusha
fisubs
xor
sub
add
aaa
add
subl
mov
addb
cmp
lahf
mov
jb
popf
mov
xchg
nop
addl
pop
ds
mov
stos
pop
cmpsb
aam
jecxz
sbb
pushf
mov
jo
sub
adc
insl
push
das
hlt
pop
mov
mov
adc
mov
push
repnz
push
add
pop
stos
mov
movsl
stc
sub
xor
je
cli
sarb
int
dec
push
mov
inc
pusha
and
orl
jecxz
xor
xchg
pop
ret
std
ror
sbb
xor
push
mov
inc
adc
ss
mov
mov
imul
mov
and
mov
fbld
in
mov
mov
push
pop
enter
or
test
movsl
inc
iret
insb
test
cli
push
cli
cli
or
jnp
ds
adc
sbb
movsb
jb
jp
enter
sub
aam
push
popa
xchg
fs
mov
cmc
je
mov
jmp
daa
mov
pop
sbb
inc
push
push
sbb
push
jns
cmpsb
mov
jns
test
mov
dec
sub
dec
mov
xchg
repnz
sbb
dec
xlat
fimull
orl
ja
lds
outsb
outsb
sbb
push
adc
scas
jnp
movsb
test
fimull
inc
or
inc
cld
inc
ljmp
adc
repz
and
xorb
fs
mov
and
adc
add
lock
xor
movsl
pop
outsb
shrb
cmp
shl
pusha
jmp
sub
adc
cmp
call
jl
fdiv
or
nop
jb
repnz
sbb
adc
mov
jmp
test
cli
push
ret
mov
sarl
push
push
hlt
stc
push
sbb
dec
and
push
cmp
dec
sub
push
push
push
int3
dec
push
cmp
jo
scas
pushf
adc
or
gs
imul
xchg
fstl
add
sub
mov
xlat
fdivs
and
jb
pop
jmp
xlat
pop
ret
xchg
mov
mov
test
jae
jmp
out
push
mov
pop
xchg
fadds
adc
ret
push
or
test
mov
inc
mov
xor
push
jae
stc
fcmovb
and
add
pop
ljmp
xor
arpl
adc
push
or
inc
outsl
or
or
mov
enter
or
add
push
xlat
jp
cmp
scas
rcrl
les
scas
xchg
xchg
or
xchg
stos
cltd
pop
andb
or
pushf
and
arpl
adc
mov
xor
push
lods
dec
and
and
pop
fwait
div
incb
push
pop
jl
mov
roll
imul
mov
out
loopne
pusha
or
imul
mov
jp
lds
inc
fimuls
xchg
testl
int
push
cmp
mov
pop
rolb
xor
mov
shlb
insb
dec
movsb
sbb
out
stc
aas
or
bound
push
in
mov
dec
sub
jne
jp
jecxz
fmul
xchg
cs
cltd
jnp
decb
insb
stos
fisttpl
xchg
mov
int
mov
dec
cli
outsl
inc
stc
rol
ret
lods
or
ss
jae
xchg
test
xor
out
adc
mov
movb
mov
mov
int3
aas
mov
repnz
sti
stos
out
lret
mov
or
fs
loope
sbb
in
sbb
ds
sbb
push
pop
es
outsb
in
subl
fcoms
cmp
das
notb
imul
and
push
iret
or
ja
dec
inc
sbb
dec
jns
pop
shll
dec
xor
mov
or
or
sarb
mov
cmp
fs
push
into
jle
cmp
push
dec
addl
scas
fsubs
push
jb
movsb
dec
popa
call
ss
rorb
mov
fwait
inc
mov
adc
pop
fyl2x
push
xor
add
neg
ret
pop
pop
xchg
lahf
sbb
addr16
dec
pop
xchg
pusha
and
flds
inc
xchg
jno
inc
fstp
fwait
push
sub
fidivrl
adc
push
lds
std
mov
add
sub
clc
or
sub
loop
push
sahf
iret
insb
clc
ljmp
and
insb
pop
push
loopne
push
call
mov
in
push
pop
cmc
movsb
push
and
sahf
in
bound
inc
or
dec
jbe
push
dec
add
inc
dec
inc
fcoms
fistps
test
jbe
and
push
pop
repnz
clc
inc
push
pop
insb
hlt
pusha
ja
pop
mov
dec
icebp
pop
jns
dec
cmp
mov
decb
stos
pop
mov
cmp
pop
stc
mov
fiaddl
or
lods
insb
inc
lahf
and
subl
xlat
jmp
and
inc
hlt
enter
in
loop
xlat
and
inc
inc
inc
test
xchg
stos
xchg
push
mov
inc
adc
push
dec
jbe
mov
jecxz
jnp
push
rcll
fistpl
lcall
jl
hlt
test
dec
in
and
pop
or
sahf
sub
xor
mov
xchg
ret
jge
int3
test
das
sub
push
das
or
out
push
js
mov
loop
int
loop
pop
push
js
fistps
shll
inc
adc
inc
xor
cld
fisubs
fucomip
push
lret
adc
jecxz
sub
jo
scas
mov
in
or
mov
xchg
xchg
pop
daa
add
push
mov
test
in
pop
mov
and
add
loope,pn
scas
push
and
sbb
cmp
repz
pop
jne
pop
cmpsl
push
mov
cmpsl
push
push
sub
rcl
xchg
mov
inc
mov
jmp
mov
xor
inc
jg
cmpsb
mov
mov
rcll
inc
addr16
xor
sub
fisubs
pop
outsl
inc
pusha
aaa
dec
xchg
int3
stc
mov
inc
mov
popf
pop
push
arpl
and
roll
cmpsl
inc
loopne
cmp
scas
xchg
in
xlat
mov
int
test
jbe
push
jmp
mov
loope
sub
fisubrs
sub
and
cmpb
pop
adc
mov
jmp
pushf
fdivl
xor
pop
enter
inc
adc
xor
xlat
pop
mov
icebp
aam
test
add
aam
imull
ljmp
test
pop
or
popf
shll
test
cwtl
mov
inc
or
jp
scas
jmp
sub
push
outsl
inc
mov
pop
or
fildl
inc
jns
fiaddl
pop
ret
movsl
out
or
add
and
mov
ljmp
add
icebp
insl
in
dec
dec
fdivrl
push
enter
mov
cmp
cmp
pop
xchg
xor
cmp
js
fists
stc
jecxz
fidivl
inc
shll
jns
add
lahf
jp
xchg
mov
mov
jnp
adc
dec
mov
into
push
jmp
xchg
lods
jno
scas
mov
loop
movsb
and
pop
clc
dec
mov
fsubl
dec
ret
sub
aaa
fimull
inc
dec
jg
cmp
and
cmp
inc
mov
repz
inc
inc
pop
pop
mov
out
fwait
sub
jno
fwait
dec
mov
pop
mov
gs
cmpsl
ja,pt
mov
jne
fmull
iret
incl
xchg
sbb
rolb
aaa
gs
stos
ret
scas
lock
or
cmp
aam
dec
and
outsb
shr
add
pop
push
testl
dec
test
repz
push
mov
and
mov
sub
cmp
testb
adc
or
in
pop
mov
cmc
mov
out
push
outsb
and
xor
dec
inc
xchg
pop
push
sub
pop
mov
dec
or
pusha
mov
arpl
bound
fsubrs
pop
xor
pop
icebp
outsb
movsl
lret
dec
sti
jo
add
cmp
cmpb
insb
fstl
jo
aaa
or
sub
xor
sbb
popf
xor
jae
sub
sti
stc
pop
and
fmul
inc
fisubl
stc
lea
pusha
cmp
movsl
mov
mov
invd
push
fsubs
push
inc
pop
lds
fwait
aas
jb
push
jae
jle
pop
aad
push
xchg
arpl
cli
inc
cmpb
leave
mov
push
and
and
ss
jg
mov
lods
jo
lds
les
or
mull
imul
pop
or
dec
xor
and
inc
xchg
jge
cmpb
repz
push
xchg
shll
xor
xor
je
div
mov
sarl
je
mov
and
test
scas
in
cmp
cmp
cmpsb
cmp
xchg
mov
fwait
mov
sbb
lcall
mov
jnp
fildl
bound
sub
mov
lods
pop
push
sbb
mov
cmpsl
das
inc
sti
lret
lret
scas
push
aaa
popa
jnp
addr16
mov
adc
es
push
mov
into
mov
sbb
dec
mov
bound
sbb
enter
lret
shlb
gs
loopne
pop
cmp
int3
rclb
dec
push
dec
in
jne
cmp
jne
mov
xor
xchg
adc
fistl
push
push
incb
popf
jp
fwait
orl
in
add
out
aaa
and
push
shll
scas
xchg
loopne
scas
ret
in
orb
fisttpll
jg
cmp
ss
jl
sub
sub
call
inc
enter
jmp
sbb
aam
xchg
jno
mov
into
jecxz
cs
loop
test
mov
jno
mov
ds
jmp
or
scas
cld
jge
pushf
xchg
outsl
orl
call
loop
sti
adc
push
mov
jl
adc
sub
push
data16
xor
mov
cs
shrl
gs
mov
test
stc
or
pop
insl
call
test
sub
mov
int3
xchg
jg
or
aad
cld
sbb
dec
cmp
pop
sbb
rolb
jmp
xchg
inc
pop
push
aad
in
mov
or
or
fildl
sahf
pop
lods
aad
pop
je
les
stos
cmp
or
ret
sbb
inc
mov
pusha
jle
or
lcall
xchg
mov
jns
mov
stos
push
xchg
mov
fnsave
jno
push
mov
mov
push
fwait
lret
sbb
das
loop
jno
lret
jae
ret
mov
add
movsl
mov
inc
pusha
fst
or
sbb
xor
cwtl
sbb
in
inc
and
jo
and
jb
dec
push
jmp
hlt
test
inc
aad
mov
jne
xchg
push
cmpl
sbb
scas
cld
xor
cmp
stos
mov
sbb
icebp
mov
ret
or
adc
test
cmpsb
filds
sub
fadds
push
addl
lds
ret
sbb
popf
add
adc
xchg
loop
dec
aas
imul
call
mov
stos
xchg
pop
fwait
and
and
pop
enter
cwtl
rolb
repz
fldcw
pop
xor
mov
cmpsb
sbb
shlb
fs
and
and
outsl
ret
mov
push
cld
sti
bound
sub
and
fyl2x
lahf
sbb
pop
and
cmpsl
popa
out
add
divb
push
push
mov
out
insb
mov
mov
add
fidivrl
lods
fwait
inc
adcb
push
insb
jl
decl
pop
jne
stos
shlb
xchg
call
mov
adc
inc
jge
daa
lds
lahf
add
nop
pop
mov
sub
push
pop
in
lds
dec
pcmpeqw
das
fmull
daa
xchg
movsb
push
and
loopne
scas
fisubrs
jae
cmp
cs
gs
ljmp
jmp
add
shlb
jne
lret
mov
jno
cltd
add
jnp
xchg
sbb
pushf
mov
call
add
test
out
gs
neg
sub
icebp
lods
repz
adc
mov
push
imul
jnp
mov
jnp
rcll
lea
cmpsb
jmp
outsl
mov
or
jns
push
mov
mov
cmp
in
shl
ret
cld
stos
int
dec
stos
or
mov
mov
sbb
aaa
mov
pop
sbb
enter
mov
fdivrs
out
cld
mov
test
sub
xor
aam
push
xor
jmp
or
int3
push
loope
pusha
lahf
mov
jnp
sub
scas
sub
inc
mov
ret
mov
sbb
mov
push
loop
xchg
xor
jbe
xchg
test
popa
mov
mov
adc
add
xor
popa
pop
out
mov
test
xchg
jl
cmpsb
push
movsb
jne
arpl
sub
pop
popa
lods
dec
ds
mov
sub
aam
add
ss
pop
and
pusha
mov
jecxz
or
jg
pop
cwtl
ds
inc
mov
ficompl
sub
cmp
cltd
xchg
xchg
fdivl
add
jnp
add
push
fstpt
cmp
cld
push
cld
adc
roll
hlt
pop
jnp
mov
loopne
push
push
jg
pop
adc
mov
stos
ss
xor
cmp
push
jne
or
and
pusha
cmp
cmpsl
add
cld
pop
int3
loop
xor
sub
outsl
mov
jg
test
and
ret
cmp
or
sar
popf
int
inc
xchg
in
mov
xchg
loope
fdivs
das
rolb
inc
sbb
sub
mov
enter
sbb
pop
xor
cltd
outsl
xchg
lret
fstl
les
pop
in
xor
rcll
pop
out
inc
fadds
jnp
enter
or
cmc
sbb
mov
add
lret
sub
push
xlat
xchg
sub
in
pop
mov
test
adc
jb
fistpl
sarb
or
add
daa
rcll
xchg
lahf
test
jmp
adc
or
mov
test
bound
in
adc
cli
dec
mov
aam
jl
es
mov
mov
insl
push
mov
mov
mov
sub
icebp
or
jns
clc
jmp
andl
jno
inc
jp
in
pop
push
mov
out
not
aam
stos
inc
cmp
pop
std
das
mov
push
xchg
fldcw
push
lcall
adc
clc
mov
outsb
pop
pop
in
push
in
fwait
mov
mov
insb
popf
cltd
mov
dec
dec
addr16
ss
cmp
fsubl
nop
mov
push
pop
pop
fsubrl
lds
mov
in
in
into
or
jmp
cmp
dec
fimull
ds
dec
xchg
out
scas
test
call
push
stos
hlt
repz
cli
add
mov
dec
cmp
addr16
mov
cs
xchg
xchg
out
pop
jo
sub
into
mov
inc
sbb
inc
rcl
and
cmp
mov
xor
xchg
mov
sub
repz
push
sub
push
addr16
arpl
dec
mov
pop
xor
adc
lret
aad
push
ja
sub
dec
sbb
push
jne
add
sub
sti
inc
jae
xchg
or
xlat
and
mov
adc
in
imul
fwait
insl
push
mov
dec
fildll
fdivrl
in
mov
loop
sub
stos
pop
jnp
sub
xor
inc
pop
sbb
add
std
pop
cmpsl
in
fwait
dec
xchg
mov
dec
sbb
hlt
leave
sub
lock
scas
mov
mov
adc
mov
mov
ret
and
les
sbb
dec
addr16
stos
call
cmpb
lcall
aaa
ljmp
outsb
aam
push
std
pop
les
or
cld
popa
fistpll
push
sbb
in
enter
xchg
shll
push
inc
outsl
fsubr
ljmp
mov
or
fsubrs
mov
rcrl
imul
int3
jo
mov
mov
outsl
rorl
jbe
out
dec
stos
sbb
je
lahf
mov
or
popa
in
xchg
or
rol
vandps
mov
lds
push
adc
loop
lods
mov
push
frstor
fsubrs
int3
lret
neg
jle
and
or
int3
push
jo
mov
fcoms
sub
ficompl
pop
scas
dec
xchg
test
cs
cli
push
push
push
xor
pop
cmp
push
pop
out
lock
stos
sbb
ds
rcl
adc
clc
lods
xor
mov
xorb
shl
cld
add
dec
and
and
es
sub
mov
js
mov
imul
ss
adc
jno
push
sub
ss
mov
sbb
jle
gs
xchg
sti
pop
mov
and
mov
movsl
popf
mov
popa
int3
sahf
flds
mov
in
pop
lahf
stos
in
fdivl
cmp
inc
lahf
mov
jno
dec
mov
ret
xchg
pusha
adc
arpl
sbb
mov
dec
aad
dec
clc
in
jns
adc
loop
test
mov
test
adc
ror
imul
pop
and
or
scas
push
pop
or
mov
outsb
ljmp
test
xor
dec
mov
mov
mov
jno
pusha
inc
xchg
jge
leave
pop
mov
mov
lock
ss
adc
cltd
pop
pushf
js
adc
je
dec
push
mov
neg
cmp
fisttpl
sbb
popf
out
mov
sub
pop
jae
sbb
adc
pop
or
sbb
mov
and
roll
adc
or
push
mov
mov
fwait
or
xor
jp
ljmp
push
pop
sbb
loope
ja
data16
jmp
mov
push
push
push
cmp
pop
in
stos
stos
cmpsb
movsb
test
daa
mov
ss
adc
adc
sbb
out
pop
adcb
shrb
scas
push
movsb
sub
das
pop
scas
pop
xchg
popa
adc
imul
sbb
rorl
addr16
out
add
add
mov
adc
inc
xor
out
mov
jbe
xor
fwait
std
gs
inc
push
ficomps
inc
imul
xor
pop
cmp
mov
sub
mov
xchg
jbe
dec
xlat
ss
or
inc
je
pop
stos
pop
add
das
jb
jmp
add
or
inc
xchg
fcomps
ret
xlat
sbb
sbb
into
adc
cmp
out
xor
xor
enter
dec
adc
pushf
shlb
xchg
add
or
xlat
call
clc
ret
dec
mov
mov
mov
pop
push
mov
popa
push
call
cmpsb
xchg
fdivrp
test
rcr
and
call
mov
jp
mov
aam
inc
mov
lock
notl
mov
rol
jae
movsl
xor
and
out
sbb
xor
cli
subl
mov
dec
faddl
jnp
imul
fsubs
pop
or
imul
inc
test
inc
test
test
and
fiadds
pop
cli
pop
aaa
jp
and
ret
dec
sbb
and
dec
cmpsl
push
adc
ljmp
lahf
hlt
in
pushf
in
je
loope
sub
inc
inc
xor
mov
xchg
lahf
adc
and
xchg
fisubrl
out
push
mov
bound
xchg
inc
in
movsl
shlb
repnz
mov
push
incl
push
sub
iret
es
adc
mov
sahf
xor
sbb
sub
adc
jno
loopne
jns
jle
cmp
es
sub
cmp
fstps
sbb
andl
sahf
jns
mov
scas
shll
and
dec
adc
outsb
out
jge
adc
jns
add
lret
pop
outsl
ljmp
sahf
test
dec
out
out
cmp
pop
push
jae
scas
daa
xor
not
dec
repz
test
test
xchg
mov
and
jg
push
hlt
aam
arpl
mov
roll
xor
mov
rcrb
pop
out
ror
mov
dec
mov
inc
in
jmp
or
jl
mov
or
in
fbld
out
pusha
lret
ret
in
mov
mov
cmpsl
mov
xlat
hlt
outsb
mov
mov
add
jb
daa
addb
jae
testl
orb
pop
js
fcomp
mov
scas
mov
push
or
iret
icebp
jecxz
lds
add
lret
rcrb
test
inc
loopne
xor
jg
cmpsb
adc
popa
ds
push
aaa
lahf
subl
xchg
pop
mov
pop
dec
mov
rcrb
cmp
or
xchg
stos
loopne
mov
shlb
js
loopne
stos
xchg
stos
jl
and
out
int3
int
pop
jl
lcall
jnp
aam
jbe
ret
adc
jmp
mov
loopne
push
pusha
mov
es
inc
leave
sub
call
nop
mov
cltd
sahf
push
push
push
mov
jp
pop
aad
and
cmp
xor
adc
cmp
dec
push
das
xor
pop
and
xchg
jo
push
jne
and
add
adc
inc
out
hlt
push
iret
test
add
cwtl
stc
and
fs
mov
dec
pop
imul
test
sub
mov
xor
adc
lods
movsb
nop
lods
jmp
gs
xchg
sbbb
cld
sub
stc
push
into
loopne
movsl
sbb
mov
mov
mov
fnsave
test
mov
notb
loopne
pusha
lcall
ret
sbb
sbbb
sahf
bound
fisubs
and
dec
in
mov
push
mov
mov
inc
and
ficoml
lods
lods
jnp
or
mov
lcall
movsl
push
inc
jae
cltd
fucomi
mov
push
jl
xorl
push
jle
or
push
les
push
stos
add
clc
jecxz
fs
push
sbb
int3
push
es
movsl
and
sub
xchg
hlt
sbb
icebp
push
mov
pop
adc
repz
mov
cli
mov
sahf
mov
xchg
jge
stc
and
scas
sbb
test
jge
mov
scas
cltd
sub
aad
out
test
out
ds
sbb
jge
xchg
dec
jno
mov
cltd
or
ret
and
andl
sub
push
andl
das
xor
lahf
loope,pn
add
jp
mov
rolb
mov
jecxz
lds
jmp
add
rcrb
shrb
dec
cmp
test
lock
xchg
jp
subb
jge
hlt
mov
jl
stos
jb
or
mov
push
or
movsl
push
or
test
pop
and
or
pop
mov
mov
push
sbb
adc
pushw
push
jmp
cmp
in
mov
gs
pop
leave
xor
js
add
xor
leave
jle
sub
pop
xchg
push
out
fstps
dec
jge
icebp
adc
push
aad
cmp
jmp
fidivrs
insl
lea
hlt
popf
jecxz
jo
jp
or
pop
hlt
cld
fwait
sub
incb
cltd
push
pop
or
in
jg
pop
in
mov
fcmovne
or
pop
in
lahf
out
jg
push
add
stos
mov
and
add
loopne
push
repnz
in
outsb
and
movb
or
fiaddl
insb
or
fwait
fs
sbb
and
lret
scas
inc
sbb
add
push
mov
in
push
mov
jnp
xor
xor
mov
js
cmp
mov
lahf
and
adc
mov
movsl
xchg
bound
jmp
sub
in
sbb
cmp
mov
mov
xchg
lods
xor
inc
out
popf
adc
imul
jecxz
aaa
je
rcl
jp
pop
push
jp
fnstsw
imul
jno
sub
mov
int3
lcall
sbb
int
ss
jnp
and
arpl
xchg
xchg
cwtl
stos
fisubl
pop
pop
cmpl
out
pushf
mov
mov
daa
dec
cmp
dec
add
lds
jae
ret
push
outsb
lea
stos
aas
insb
loope
loope
dec
test
adc
dec
pop
mov
mov
hlt
es
fwait
mov
sbb
push
pop
repz
dec
jmp
mov
cli
bnd
push
xchg
sbb
stos
lods
fstpt
jno
insl
insl
inc
cmp
push
pop
xchg
push
jae
sbb
js
push
sbb
cmp
jmp
popf
xlat
sbb
test
push
inc
pop
lret
mov
in
adc
adc
xchg
push
mov
mov
addr16
maskmovq
divl
stos
sahf
loope
or
sub
pop
or
in
mov
jg
push
stc
and
shlb
in
jmp
push
pop
lds
jmp
inc
and
in
jg
scas
adc
xchg
sub
bound
pop
shlb
push
sbb
ljmp
aam
ss
mov
and
lret
int
jg
lahf
rsm
test
mov
popa
divb
jecxz
mov
ds
cli
cld
jecxz
cmp
push
stos
jbe
ljmp
and
mov
inc
pop
pop
push
bound
and
add
pop
outsl
arpl
or
mov
pop
or
inc
sbb
in
pushf
test
loope
ds
xchg
sbb
jge
out
dec
nop
xchg
scas
sbb
ljmp
stos
iret
dec
adc
pop
fiaddl
add
or
aas
adc
xchg
sbb
mov
adc
cwtl
daa
icebp
int3
mov
test
pusha
cmp
cmp
leave
stos
add
xchg
pop
test
fcompl
adc
adc
das
jecxz
sub
lahf
or
ja
cmp
pop
dec
push
lods
mov
cmp
adc
rorl
int
bound
dec
cli
and
aam
xor
xchg
dec
sbb
xor
pop
mov
inc
jle
mov
out
loope
cwtl
xchg
xor
subb
imul
xchg
arpl
shrl
dec
lcall
cmpsl
jno
loop
stos
insb
ss
movl
mov
mov
dec
jnp
push
das
cmp
orb
aas
adc
rclb
lods
jno
enter
jge
pop
and
pop
insl
push
xchg
jp
cmpsb
in
pop
or
cmpsl
popa
sti
jns
popf
fimuls
pop
mov
stc
xchg
push
inc
adc
sub
popa
sbb
popf
mov
les
cmpsl
xlat
adc
adc
lods
ret
iret
shll
add
add
popf
call
jg
nop
xchg
pop
xlat
cmp
push
rorb
fldcw
call
cmp
in
jns
fwait
xchg
mov
lret
push
ja
dec
push
test
repnz
jge
inc
lahf
pop
cmc
push
insl
test
mov
jnp
popa
pop
out
push
pop
iret
cwtl
push
ss
push
cmp
mov
mov
adc
pop
or
imul
fisttpl
jp
nop
sbbl
jmp
sub
push
mov
mov
repz
insb
aas
inc
int3
add
test
mov
movsl
shll
xchg
pop
adc
and
dec
cltd
adc
mov
sub
insb
pop
addr16
inc
xor
pop
dec
lods
mov
enter
mov
push
dec
imul
pop
mov
repz
mov
inc
mov
out
jbe
pop
int3
lods
movb
std
or
xor
insl
movsb
add
mov
ss
sub
ss
adc
add
int3
add
xor
cmp
push
dec
xchg
cwtl
cltd
dec
or
imul
loop
mov
lahf
addr16
add
cltd
sub
mov
std
dec
fcmovbe
jge
dec
mov
in
mov
mov
or
frstor
sub
mov
jae
lea
sub
xor
mov
bound
lock
cmc
das
into
xor
jae
xor
push
imul
pop
xor
rcrl
xchg
addl
jbe
jno
lret
mov
scas
popa
mov
iret
rolb
sub
xor
mov
jae
loop
js
cmc
push
jge
out
stos
pop
popa
test
push
adc
dec
sub
push
stos
hlt
incl
and
sarb
jno
sbb
cs
fstps
xor
shlb
int3
clc
hlt
or
inc
daa
mov
test
fdivp
repnz
jmp
pop
add
adc
push
outsl
rorl
hlt
lods
lock
pop
mov
iret
sahf
dec
gs
ret
xor
mov
test
into
add
jecxz
insl
popf
inc
xchg
movsb
jae
inc
push
pusha
adc
insb
aad
push
mov
lahf
jge
fdiv
jmp
xchg
pop
mov
jae
push
mov
repnz
mov
arpl
iret
cltd
orb
mov
jae
ja
ja
outsb
dec
and
subl
xchg
push
cltd
mov
rcrl
cs
dec
push
and
xorl
ljmp
adc
inc
lods
clc
xor
loopne
jnp
dec
add
push
mov
xchg
fsubr
pop
aad
xchg
fldcw
cmp
bound
fmul
loope
cli
imull
xchg
fcmovu
xor
sub
repz
xchg
scas
inc
or
sbbb
jmp
fstpt
arpl
push
sbb
je
andb
test
xor
sub
leave
jns
and
lods
pop
rolb
ficoml
xor
mov
pusha
sar
cmp
dec
call
test
das
xor
dec
jle
addr16
mov
inc
jae
call
xchg
dec
mov
addr16
xor
stos
imul
xchg
mov
xchg
repnz
xchg
mov
lock
jg
daa
or
mov
sbb
cmp
int
jne
in
push
test
rcrl
data16
dec
cmp
pushf
dec
inc
adc
rol
pop
lahf
and
and
cmp
es
dec
out
add
in
in
and
stos
inc
mov
shlb
sahf
or
mov
jge
or
pop
xchg
mov
push
fmuls
pop
mov
cmp
push
mov
push
mov
stc
inc
mulb
xchg
movsl
clc
movsb
dec
dec
bnd
xchg
add
outsl
sbb
adc
pop
mov
test
fmull
ds
dec
lods
out
add
xchg
mov
pop
xchg
stc
mov
test
fmuls
leave
movsl
enter
std
mov
lds
or
clc
xlat
stos
mov
mov
pushf
dec
add
cltd
cwtl
dec
mov
sub
bound
ja
mov
call
in
inc
enter
mov
fcmovne
popf
add
mov
fwait
xchg
or
outsl
iret
pop
cmpl
xor
ret
mov
pop
js
push
xor
call
mov
inc
cmp
inc
cvtps2pd
rorb
or
push
jbe
pop
stos
mov
xchg
or
xchg
cld
xor
push
lds
loope
jno
sub
xchg
int
jo
mov
push
adc
inc
pushf
push
xchg
jno
lcall
pop
insb
sub
mov
es
test
ljmp
mov
loope
stos
add
cmpsb
cmp
shl
dec
mov
loope
je
add
inc
loop
mov
mov
jnp
pop
mov
inc
popf
fwait
mov
dec
iret
arpl
repz
jno
adcb
adc
inc
add
aam
add
aam
insb
lahf
outsl
xchg
scas
pushf
movsl
xlat
out
aas
testl
inc
repz
mov
dec
addl
jle
insb
fsubl
pop
jg
add
mov
cltd
cld
and
js
imull
pop
hlt
xor
pop
xlat
or
mov
fistpl
lcall
push
xchg
mov
loopne
out
loopne
scas
dec
adc
pop
aas
or
imull
icebp
cmpsl
add
cld
xor
stc
cmpsl
outsb
mov
gs
scas
sub
sub
push
jg
sub
scas
addr16
xchg
insb
mov
cmp
and
adc
jne
hlt
dec
scas
loopne
out
lea
lds
add
sub
xor
push
sub
lahf
hlt
pop
sbb
mov
cltd
repz
movsb
jbe
jmp
mov
dec
push
ljmp
sbbb
fdivrp
lahf
lea
xchg
dec
enter
shr
bswap
cmp
rcl
or
mov
fdivrp
daa
push
inc
pushf
xchg
jb
leave
xchg
or
push
cmp
sarb
iret
jb
cwtl
idiv
daa
fcmovu
mov
scas
pushf
daa
inc
push
or
mov
pop
jno
lods
xchg
stos
or
movsl
imul
ds
add
cmpl
dec
test
push
xorl
mov
jbe
jb
std
or
fisttpll
xchg
test
popl
sbb
mov
mov
imul
push
leave
int
into
iret
add
xchg
mov
push
inc
lods
mov
xor
mov
jmp
push
fst
push
fiadds
aam
sub
or
lds
mov
stc
lods
frstor
mov
subl
mov
in
lcall
xlat
mov
aas
aaa
je
inc
jg
ret
ljmp
out
dec
xor
and
or
in
cli
dec
mov
adc
jo
clc
leave
mov
test
sahf
mov
mov
cmc
sub
sbb
xor
sub
fadds
inc
addr16
dec
fcomps
aad
fildll
cmc
push
mov
sbb
and
in
jbe
cmc
repz
les
pop
pop
sbb
leave
inc
cmp
mov
jae
adc
jge
enter
adc
sub
lret
rcll
xchg
outsl
cmp
scas
mov
fstl
mov
mov
inc
loope
adc
mov
sbb
mov
pop
sbb
inc
sub
das
xor
sbb
adc
pop
sbb
xchg
push
adc
xchg
repnz
dec
cmp
dec
nop
insl
pop
aas
mov
xor
icebp
in
aaa
mov
mov
cmpsl
and
inc
inc
jbe
mov
bound
and
out
dec
loop
lcall
je
adc
cmc
cmp
repnz
dec
decl
xlat
sub
cs
add
dec
sub
rclb
push
sbb
and
js
mov
and
loopne
mov
inc
cmp
test
fidivs
or
xlat
mov
aam
je
pusha
add
loop
or
inc
loope
dec
lods
push
inc
les
mov
in
jnp
jo
pop
cmp
cmp
adc
add
mov
xchg
adcl
loop
pop
sti
xlat
enter
add
push
mov
mov
jnp
push
ds
pop
mov
ja
or
mov
adc
push
subl
test
sub
ja,pn
add
in
or
xor
dec
in
rorl
mov
test
jmp
jle
pop
xor
insl
push
sbb
scas
stc
pmuludq
dec
cmpsl
jno
jnp
push
cmp
in
jecxz
dec
fwait
andl
lcall
in
mov
mov
aas
lret
xor
call
cmp
pusha
mulps
leave
sti
sub
cmpsl
or
dec
arpl
test
insb
and
ret
mov
or
jmp
stc
lock
hlt
idivl
out
adcb
fstl
movsb
sbb
xchg
jbe
mov
outsb
icebp
sarb
push
pop
xor
jmp
xor
push
and
rolb
daa
ret
loop
imul
xor
subl
jp
adc
pusha
rep
fistps
cld
push
inc
adc
std
repnz
cmp
ss
mov
inc
lods
push
adc
popf
outsl
mov
sub
sbb
dec
fcompl
int
mov
inc
mov
xchg
sarl
shlb
fs
xor
ja
mov
sbb
wrmsr
and
and
or
xor
xor
sbb
pop
xchg
dec
mov
ja
xchg
das
mov
or
or
inc
bound
or
xchg
xor
or
jge
ljmp
and
push
add
jns
rcrl
or
je
adc
adc
movsb
cmp
stc
repz
in
je
insb
mov
add
imul
icebp
std
lods
jg
add
icebp
push
lods
pop
push
shl
mov
cmp
in
lcall
and
sbb
or
pop
push
into
aas
cmp
inc
jecxz
loopne
test
loopne
inc
fstps
cmp
sub
rol
or
cmc
xchg
test
loop
rolb
mov
fcompl
and
mov
ljmp
xchg
pop
insl
repz
mov
ffree
cmp
data16
jae
push
nop
outsl
pushf
loopne
mov
fwait
mov
imul
or
push
in
call
js
cmc
jae
movsb
and
andl
mov
cmp
sub
into
pop
jno
dec
mov
push
call
push
and
dec
and
lret
hlt
or
or
add
push
mov
cmpsl
sub
inc
int
jnp
mov
scas
mov
sbb
paddw
ret
push
das
mov
shll
jae
loop
mov
sub
jo
cmp
mov
data16
xor
sbbb
cmc
cmp
mov
icebp
sub
sbb
ds
ja
int
push
lods
xchg
ljmp
fildll
bnd
mov
ficoms
xor
lods
scas
xchg
mov
ss
mov
movsb
dec
push
sub
aas
xor
pop
sub
and
sbb
mov
es
leave
subb
adc
inc
fidivrl
mov
mov
cmc
sbb
push
and
stc
xor
loopne
sbb
test
inc
ficoms
call
or
bound
xchg
sbbb
nop
pop
cltd
or
testl
cmpsb
aaa
rolb
les
aaa
pop
push
cltd
pusha
pop
inc
lea
adc
push
orl
adc
sti
pushf
adc
jb
lods
rcll
sub
xlat
mov
inc
sbb
pop
out
mov
inc
repz
mov
jmp
call
loopne
sub
imulb
das
xchg
jge
ret
test
stos
xor
arpl
cmp
and
outsl
sbb
out
push
xor
imul
fisttpl
sbb
iret
or
and
xlat
xchg
std
jb
mov
pop
push
dec
xor
adc
and
add
jge
xchg
ret
test
cmp
inc
into
mov
pop
clc
arpl
sub
pop
push
inc
xorl
xor
adc
pop
jp
stos
dec
fsubp
push
push
std
fcoml
imul
cmp
push
push
aam
xlat
mov
mov
mov
inc
sub
out
pop
add
sti
outsl
bound
test
int
icebp
lret
jbe
ret
lret
fsubs
sbb
sarl
sub
out
mov
stc
daa
lahf
rcrb
jae
bnd
shlb
pop
mov
and
hlt
loop
lahf
mov
fcomi
subl
sbb
xor
mov
pop
rcll
frstor
fcmovbe
popa
mov
pop
les
add
repz
pop
mov
mov
inc
push
out
cmpsb
jmp
mov
int
and
lods
dec
mov
dec
insb
stc
cwtl
pop
xlat
mov
xor
bound
jl
push
lcall
dec
ja
mov
xorl
mov
fmuls
adc
es
mov
cmp
pop
lcall
sbb
and
mov
les
iret
pop
lret
mov
inc
push
ds
lds
aam
pusha
jno
push
pop
and
dec
call
movsl
pop
jp
and
insl
jne
cld
sub
or
mov
push
mov
test
insb
mov
aaa
xchg
inc
mov
in
gs
inc
cmp
xor
dec
dec
pop
lock
inc
jae
outsb
mov
dec
aam
movsb
aam
push
inc
ret
sbb
stos
clc
add
adc
test
xchg
push
mov
dec
sbb
cmp
pop
sub
cmpsb
jmp
xchg
aad
es
dec
imul
sbb
icebp
lret
movsb
cmp
cmpsl
sub
enter
inc
sbb
sbb
xchg
bound
imul
mov
iret
lret
fimull
pusha
mov
push
ds
cmp
ljmp
lock
pop
into
mov
stc
in
mov
insb
jbe
mov
jbe
mov
jecxz
test
in
push
scas
fnstcw
jl
sub
js
shrl
lock
in
sbb
icebp
pop
fmul
mov
pop
mov
mov
pop
imull
mov
loopne
mov
fldt
psllq
xor
xor
pushf
sub
shrb
push
push
cmpsl
or
mov
adc
xlat
adc
mov
mov
aad
cwtl
push
rorb
sub
sub
inc
nop
adc
sahf
xchg
sub
in
mov
arpl
fnsave
inc
pushf
add
dec
inc
adc
dec
push
sub
dec
xchg
into
in
or
sub
mov
adc
imul
push
dec
mov
pop
jge
lret
scas
pop
jecxz
loopne
dec
test
mov
fcom
sbb
push
jae
jnp
sbbb
gs
lods
adc
add
push
pop
mov
ja
jp
mov
sub
mov
std
mov
inc
scas
cli
lds
adc
cwtl
sbb
movaps
ja
mov
and
push
rcll
mov
rorb
or
sahf
scas
add
push
ljmp
dec
xor
lret
outsl
out
lret
call
mov
out
lcall
inc
inc
fsts
cs
cmp
shr
or
mov
push
aam
iret
cs
fisttpll
and
and
loop
push
lahf
sbb
mov
pop
loop
add
or
pop
inc
sbb
mov
dec
pop
mov
cmp
dec
outsb
push
push
into
add
cltd
incb
pop
pushf
arpl
push
push
shll
lods
xchg
mov
or
jl
test
xchg
mov
lret
std
sarb
repnz
arpl
dec
insb
subl
ljmp
cmp
sbb
pop
xchg
push
mov
shlb
jb
ljmp
bound
mov
dec
dec
push
sub
push
insl
es
or
call
outsl
cltd
pop
pop
or
cwtl
pop
in
jne
out
lcall
sti
push
inc
jmp
stos
out
lods
sbb
lods
pop
das
stos
fmuls
push
dec
stc
cmpsb
mov
rep
sub
ss
js
push
mov
out
dec
loop
out
repnz
mov
repz
mov
inc
int
ret
lods
cwtl
std
lahf
adc
in
movsl
mov
ret
sti
adc
xor
leave
xor
dec
mov
jnp
in
sti
lretw
sub
inc
fmul
in
sub
stc
add
jb
lret
ret
sarb
stos
loopne
jl
loopne
mov
push
add
and
cmp
jmp
push
push
jle
stos
scas
dec
les
adc
xchg
push
dec
loope
or
pop
pushf
mov
jg
loop
jb
arpl
data16
or
test
push
jl
loop
arpl
mov
push
cmp
inc
or
fs
push
movsl
jle
cmc
int
cli
cmp
insb
sti
adc
fucomp
and
jnp
mov
and
ljmp
pop
sbb
add
and
insb
or
cmp
mov
clc
cld
rorb
lret
call
int3
inc
sti
ret
inc
pop
jae
and
cmp
jge
mov
and
gs
fmuls
out
fwait
mov
repz
mov
mov
dec
into
enter
or
jp
test
loopne
xchg
xchg
sbbb
xchg
repnz
mov
fdivrp
daa
adcb
xor
mov
mov
adc
push
loopne
daa
push
pop
test
add
jb
negl
jge
bound
cmpsb
mov
icebp
push
lret
mov
mov
lret
jno
into
sub
sar
clc
sub
leave
lods
testl
and
adc
cmc
repz
daa
dec
cmp
in
push
jbe
cmp
adc
jmp
jns
enter
lahf
cld
xchg
push
xor
sub
xchg
loop
and
push
jne
adc
pop
hlt
daa
fmuls
pop
imul
out
mov
js
inc
mov
push
dec
inc
adc
cld
cmpsb
fwait
xchg
xchg
sbb
and
push
fildl
mov
sbb
icebp
add
or
mov
push
xchg
jmp
and
repz
and
out
jae
push
rcrl
loopne
fs
inc
lcall
rolb
and
insl
stos
pop
cli
mov
bound
sub
sub
stc
cmp
sbb
pusha
sub
add
std
fisubrl
popf
jae
and
mov
jbe
xchg
pop
xchg
xchg
dec
adc
cmp
lret
and
fsubrl
dec
into
dec
int
push
xchg
lret
scas
nop
or
dec
rorb
insb
ficoml
test
test
jbe
dec
in
pop
lods
pop
mov
dec
jecxz
pop
mulb
sahf
lea
adc
push
jmp
pop
jo
mov
popa
call
call
insb
sbb
jno
popf
xor
ret
shr
mov
cmp
enter
push
pop
das
mov
lods
hlt
inc
stos
and
fisttps
es
lea
ss
jbe
push
push
popa
sub
test
sub
mov
pop
dec
inc
jae
dec
mov
mov
inc
lock
ret
insl
xlat
rorl
outsb
sarl
shl
pop
call
scas
xchg
xor
jle
stc
xor
push
sbb
push
popf
movsl
sub
call
mov
or
pushf
or
xor
mov
sbb
insl
movl
fisubl
arpl
inc
dec
add
mov
jl
out
icebp
sub
add
les
xchg
xchg
add
movsb
or
jmp
or
mov
outsb
xor
jnp
or
inc
mov
loopne
xchg
jnp
cmp
xchg
ljmp
in
jge
xchg
aas
inc
es
shlb
loope
lcall
push
xor
jmp
add
sbb
mov
inc
pusha
sti
pop
test
adc
dec
in
shll
cmp
add
mov
mov
mov
cmpsb
cmc
cltd
test
cmc
in
std
jmp
dec
mov
out
sbb
aas
push
lds
fs
out
int3
or
mov
leave
sbb
xchg
cmc
int3
mov
lds
and
jge
repnz
jns
push
stos
push
jo
push
cmp
outsl
mov
sbb
xor
enter
jae
mov
cmp
mov
scas
pop
inc
test
call
pop
into
arpl
inc
pushf
daa
into
out
nop
rorb
movsb
and
lret
ret
push
mov
addr16
addl
cld
out
dec
cmp
iret
add
inc
xchg
aad
mov
mov
rcr
cmc
or
fcom
add
xor
pushf
cs
sub
mov
test
lret
testl
inc
xor
dec
push
push
testl
iret
pop
shll
jns
loopne
push
cs
test
sahf
rorl
lret
clc
filds
sbb
push
adc
scas
mov
mov
adc
pop
jmp
push
imul
repz
inc
push
sar
insb
movsl
lcall
outsb
jne
mov
dec
or
mov
mov
mov
push
inc
lahf
push
pusha
loopne
mov
add
cmpsl
pop
loope
jns
add
jp
popa
stc
xchg
jl
sub
test
and
pop
mov
sub
frstor
push
icebp
and
movsl
enter
fmull
add
jge
push
push
inc
loopne
sahf
pop
fiaddl
sub
xchg
mov
std
jnp
mov
in
xor
pop
adc
les
or
sub
ret
test
call
inc
dec
outsl
pusha
pop
cmpsb
cs
mov
jp,pt
idivl
arpl
mov
dec
ds
dec
aam
insl
add
mov
push
inc
mov
in
imulb
sub
sbb
jg
test
dec
mov
inc
imul
fisubrs
cmp
ret
bound
add
in
pop
xor
mov
andl
loop
mov
stc
and
mov
and
sbb
push
adc
lcall
repnz
cmc
xchg
mov
repz
mov
inc
bnd
jns
push
in
xor
in
cmpsl
push
dec
nop
das
ret
aad
or
imul
sahf
jae
add
push
fwait
cmp
push
in
ss
adc
sub
aaa
das
jle
dec
mov
dec
inc
mov
pop
dec
call
lahf
jp
push
or
dec
loop
dec
enter
or
je
in
outsb
ds
pextrw
push
mov
pop
push
mov
add
add
in
idiv
add
and
nop
sub
xchg
xor
xchg
jecxz
pop
pop
add
jg
xchg
in
call
jbe
lock
aad
mov
mov
fidivrl
inc
cmp
leave
cmp
ja
cmpsl
inc
les
or
push
sahf
out
mov
sub
notb
imul
xor
add
cmp
dec
mov
in
xchg
sub
jo
push
popa
dec
jl
push
out
mov
mov
fisubrs
adc
out
mov
loope
push
mov
dec
cwtl
inc
mov
cs
sbb
xchg
xor
mov
sub
les
ja
push
icebp
aad
popf
sarl
mov
pop
test
data16
mov
fldcw
stc
mov
insl
jmp
add
out
aas
adc
mov
or
hlt
mov
push
cli
shl
scas
movsb
push
decl
push
mov
jne
xor
shr
or
sbb
push
and
pop
fidivrl
bswap
lcall
pop
sub
jle
cmp
mov
aad
fimuls
inc
addl
into
cmp
or
add
inc
test
xchg
int
notb
inc
sbb
adc
mov
pop
or
xchg
xchg
fldl
in
push
mov
mov
sub
lea
push
mov
and
push
ret
mov
or
push
icebp
xor
xor
or
xchg
or
jo
mov
and
out
divps
aas
jno
jge
stos
ja
xchg
popa
mov
aam
insb
or
mov
movsl
pop
jne
pop
fcmovnb
mov
fimull
pop
jg
push
mov
mov
inc
out
or
mov
and
ljmp
inc
rclb
pop
das
mov
jns
sbb
dec
cmpsl
cltd
pop
out
clc
or
jge
xor
leave
ss
cmp
es
xchg
iret
add
pop
adc
dec
leave
pop
scas
jmp
rcl
dec
adc
dec
cmp
mov
jge
cmp
xor
xchg
mov
xor
frstor
popf
xchg
mov
fldenv
mov
cmp
cmp
mov
int
ljmp
jmp
lods
dec
repnz
jbe
push
lret
dec
and
aas
sbb
loope
jno
jp
ficompl
sub
iret
dec
pusha
roll
sbb
inc
shll
popa
outsl
pop
push
cld
dec
pusha
lock
jbe
or
jae
insl
push
repnz
jle
divb
dec
bswap
dec
je
mov
push
or
in
adc
pop
out
xor
out
mov
push
jo
bound
jbe
add
push
mov
stos
lods
pop
sahf
dec
pop
in
int
or
or
adc
mov
jp
cwtl
test
push
dec
push
imul
jp
in
xlat
adc
lret
cmpsl
addr16
jae
xchg
xchg
fistps
and
sarl
iret
mov
pusha
jle
mov
jno
add
add
mov
fmul
jl
outsl
outsl
mov
addr16
sbb
negl
lea
xchg
pop
fdivr
mov
inc
fwait
cmp
add
mov
out
nop
and
fsubrs
add
rcrl
lret
jmp
jp
iret
out
mov
inc
aaa
cld
iret
add
or
in
mov
ret
outsb
mov
out
xor
jne
rcrl
ds
rcll
cmpsl
or
pop
and
xor
xchg
xchg
lret
jg
mov
add
pop
faddl
gs
cmp
outsb
iret
jmp
pushf
sub
fstps
mov
jb
les
and
lds
and
pop
es
incb
enter
add
ret
aas
cltd
xor
imul
scas
ss
push
xlat
stos
mull
adc
pushf
fwait
sahf
sub
or
pusha
mov
test
cmp
negl
push
xchg
fistl
imul
adc
int
mov
cmpsl
pop
mov
lea
or
adc
lahf
dec
pushf
nop
inc
arpl
fisubl
sub
sbbb
lret
loope
iret
lods
mov
test
fbld
sub
outsb
mov
test
sarl
xchg
or
lock
cmpsl
mov
add
xor
push
mov
sahf
push
int
mov
sub
fwait
lods
mov
jmp
mov
repz
stc
mov
fsub
adc
jle
pop
or
xor
pop
push
inc
or
and
or
lahf
xor
xchg
arpl
cs
add
hlt
and
enter
or
or
adc
and
and
xorb
sub
mov
xor
enter
or
lea
xor
cmp
and
es
xchg
ret
mov
scas
add
dec
mov
pop
and
dec
mov
pop
inc
mov
xabort
cmp
inc
cmp
xor
sbb
shr
xchg
ja
ret
mov
mov
or
push
add
sub
test
fsubs
or
add
aad
inc
mov
or
imul
enter
mov
int
ljmp
notl
push
mov
cmp
sarb
cmp
rolb
sti
cwtl
mov
add
inc
jo
hlt
pop
stc
jg
and
fadds
cwtl
lahf
push
pop
push
roll
xor
fsts
pop
sub
nop
and
fdivrs
sub
popf
mov
movsl
nop
inc
mov
ja
or
xchg
icebp
mov
fstl
sub
icebp
or
mov
movsl
test
scas
ds
cltd
ds
movsl
mov
cltd
std
mov
lahf
aas
ljmp
push
jl
sbb
test
or
ret
inc
movsl
jns
nop
faddp
loopne
lret
out
mov
xchg
sub
dec
xchg
push
mov
int
daa
xchg
push
loop
or
jg
cwtl
scas
jns
push
mov
hlt
cmp
and
test
ret
sti
push
add
cmpsb
xchg
fisubrs
pop
push
cwtl
aam
and
stos
push
adc
xchg
jmp
pop
mov
pop
enter
pusha
idivb
outsb
inc
or
hlt
mov
iret
ss
jp
daa
in
les
in
jo
add
mov
hlt
leave
lods
in
les
jbe
pop
mov
cmp
into
push
mov
cld
pop
lea
nop
fbld
mov
iret
jnp
insb
push
add
ds
dec
cmp
pop
shr
xchg
into
repz
push
and
daa
sti
inc
mov
or
cmc
mov
mov
mov
das
mulb
jns
push
inc
mov
push
test
push
jg
mov
lea
sahf
stos
enter
test
xor
stos
pop
mov
outsl
xor
jge
cwtl
jb
icebp
mov
cmp
enter
lods
inc
fidivs
in
std
xchg
fs
mov
rorb
dec
add
push
pop
jnp
mov
out
test
push
xor
push
dec
xchg
je
adc
sti
lret
insl
nop
in
add
jb
sub
push
xchg
adc
lds
je
mov
cmp
das
sbb
xor
in
rorb
mov
movsl
pushf
in
sbb
test
inc
xor
shll
popa
cmp
fs
les
outsb
repz
push
mov
or
mov
pop
dec
cmp
xchg
xor
jne
outsl
dec
addr16
out
cltd
fcomp
sub
xor
adc
aaa
cmp
pop
push
adc
insb
or
mov
testb
mov
mov
cmp
mov
or
mov
push
sti
cwtl
xor
fwait
icebp
stos
shll
out
mov
pop
inc
pop
dec
and
gs
cli
lods
xor
lods
pusha
or
jl
adc
mov
shlb
mov
mov
mov
ret
je
lea
xchg
iretw
inc
xorb
addb
mov
rolb
out
cmpl
sbb
bound
pop
roll
xor
mov
mov
pop
xor
sbb
mov
cld
cmp
inc
inc
daa
insb
cmp
cld
addr16
xchg
sbb
outsb
ja
lds
fs
jne
or
push
jbe
mov
or
add
xor
and
mov
xchg
adc
add
inc
mov
jmp
daa
fcmovu
add
or
sub
pop
adc
mov
sbb
cwtl
int
xchg
inc
cwtl
jmp
jmp
push
add
cmp
mov
pusha
push
ja
jge
fdivl
xor
sti
inc
inc
add
rcr
cld
jne
sbb
mov
movsl
and
in
push
outsb
rcrl
enter
jge
out
orl
adc
ficoms
roll
scas
xchg
jmp
pop
pop
pop
cmp
cmpsl
inc
sub
mov
cwtl
xor
and
jnp
repz
insl
sbbb
in
in
mov
sbb
rclb
shr
jae
insb
dec
jnp
xchg
fisubrl
xor
js
and
sbb
mov
or
ret
jmp
and
jb
testl
inc
movl
mov
push
cs
rcrl
xorl
aam
pop
ja
pop
inc
shrl
call
out
arpl
pop
outsl
lret
test
int
push
popa
mov
sbb
push
push
and
xchg
loopne
icebp
out
adc
test
pop
cmp
jne
dec
jns
dec
pusha
pop
addl
dec
mov
movsb
pop
das
fsubl
lcall
jns
aad
fiaddl
into
je
nop
cmp
jge
lds
sub
movsb
call
xor
outsl
mov
lahf
xchg
in
cmp
fisubs
or
fwait
aas
push
add
adc
shrl
cmp
jns
cltd
push
xor
stos
in
add
je
sbb
fnstcw
lods
imul
adc
mov
dec
loope
dec
shll
push
imul
jno
push
lret
xchg
adc
xor
cmpsl
mov
xor
push
lds
lock
popa
cmc
jecxz
leave
adc
imul
push
repnz
mov
bound
cmc
dec
inc
pop
mov
jno
insl
mov
insl
mov
cltd
xchg
stos
enter
outsl
mov
fiadds
leave
call
jle
je
push
mov
out
jbe
enter
inc
push
sub
jecxz
stos
sub
repz
test
mov
sub
dec
arpl
sahf
pop
xchg
fs
add
mov
pop
lret
inc
mov
sti
out
out
inc
add
mov
pop
inc
sbb
pop
push
push
cmp
ret
ss
inc
mov
add
hlt
xor
mov
jge
sbb
jo
xor
push
aaa
ss
fcomps
sbb
aad
sub
insl
sub
push
push
dec
js
sub
adc
je
call
nop
test
sub
mov
push
mov
les
lds
fs
jb
push
cmp
pop
pop
add
push
lret
jp
add
push
mov
xlat
push
cmp
and
mov
in
stc
sti
ss
mov
movsl
mov
loop
dec
dec
ds
or
es
lods
xchg
imul
and
add
cmpsb
shrb
cli
lods
andl
sbb
sbb
fwait
mov
jnp
stos
mov
mov
sub
daa
mov
inc
pop
mov
push
mov
fnstsw
imul
sub
into
mov
push
xlat
fistps
stc
out
iret
push
mov
dec
mov
sbb
fdivrs
int3
xchg
test
fsubrs
and
mov
data16
adc
dec
push
fcmovbe
push
pop
std
pop
fidivs
jl
shll
xchg
inc
cmp
or
rcl
sbb
push
lcall
test
inc
add
movsl
adc
pop
inc
lea
int
sub
or
data16
jo
dec
pop
inc
hlt
or
inc
pop
mov
push
ret
pop
ret
lret
orb
push
or
add
jb
xchg
sarl
sbb
repnz
push
stos
jne
and
ret
lret
lcall
ret
jp
les
sub
out
add
inc
mov
cld
or
push
and
pop
test
pushf
sub
jno
xor
xchg
mov
push
mov
bound
mov
inc
cmpsl
rcl
and
or
push
stos
test
lods
or
es
dec
push
in
pop
jmp
push
addr16
or
sub
dec
adc
push
ret
shrb
inc
lods
in
xchg
mov
inc
sub
pop
cmp
rolb
je
popa
sub
adc
cmp
mov
push
dec
cmp
jo
fwait
sbb
xlat
xchg
mov
xchg
ss
and
lods
push
dec
inc
es
xchg
inc
clc
sub
dec
xor
leave
jge
nop
pop
aad
shlb
testb
fmull
cltd
or
mov
gs
cmpsb
sti
cmp
push
jne
xor
sti
call
dec
lahf
pop
test
movsb
push
inc
cmc
dec
mov
mov
pop
nop
es
push
sub
jae
and
test
shlb
xlat
cmp
ljmp
pop
and
aaa
mov
jb
adc
mov
pop
leave
push
and
ljmp
add
test
dec
xor
in
cmp
dec
ret
je
pop
mov
fdivs
jge
mov
mov
std
pop
frstor
insl
aad
fs
es
dec
mov
outsb
dec
sti
dec
ss
fldz
cld
xor
clc
loopne
imul
addr16
in
push
std
xchg
ljmp
xchg
mov
fsubrs
or
scas
out
dec
mov
call
cmpsl
adc
mov
lcall
sub
adc
dec
cld
lahf
clc
mov
loope
sub
push
std
or
enter
and
mov
pop
pusha
jecxz
inc
pop
pop
ret
push
and
ss
popa
mov
out
mov
mov
mov
sarl
xchg
push
jge
lret
xor
andl
and
push
ljmp
ret
call
fstl
and
call
sub
pop
aaa
aad
push
cwtl
cltd
pop
lods
sub
push
mov
outsl
negb
sub
jbe
out
maskmovq
mull
dec
outsb
sarb
mov
popf
out
sbb
mov
or
test
pop
and
sbb
lret
cmp
subb
or
arpl
push
xchg
out
lret
inc
xor
shl
arpl
mov
ret
arpl
jecxz
xor
pop
mov
sub
xchg
mov
jnp
xor
mov
inc
cmp
mov
imulb
sar
jge
lea
jp,pt
fcompl
jne
cmpsb
pop
or
jge
or
push
outsb
push
jne
sub
sub
xchg
pop
ss
pusha
sahf
shr
sahf
pushf
jb
sbb
dec
jnp
inc
cmp
sub
push
hlt
das
dec
sbb
mov
pop
inc
stos
test
mov
jnp
pop
push
rcr
ret
js
mov
pop
mov
pusha
lock
xchg
sub
aam
add
fistpll
or
inc
push
jbe
in
sbbl
dec
loop
aad
mov
ret
sahf
push
fneni(8087
sbb
mov
je
pop
mov
jo
hlt
popa
and
mov
in
or
mov
sub
fsts
scas
mov
or
outsl
in
jecxz
xchg
lret
sbb
loop
pop
call
test
mov
sbb
arpl
ljmp
insl
sbb
pop
xchg
cmpsb
xchg
addl
xchg
mov
insb
mov
dec
in
pop
sub
aas
sub
xlat
jns
mov
leave
adc
and
popa
pushf
mov
insl
mov
movsl
nop
ja
cmp
test
fiadds
jecxz
iret
roll
jnp
mov
jp
shll
jns
sti
outsl
ljmp
mov
ret
sub
jb
jbe
daa
mov
outsb
mov
sub
jecxz
fcoml
loope
xchg
and
jecxz
push
pushw
dec
pop
pop
xchg
push
mov
mov
dec
lahf
movq
inc
ss
jmp
sarl
fsubrs
jns
and
fdivrs
cltd
in
test
jo
ret
xchg
incb
out
mov
scas
push
or
icebp
loope
xchg
xor
mov
dec
mov
imull
jecxz
aad
mov
fxch
int3
aaa
lods
or
xchg
ljmp
cmpl
les
sub
adc
addb
inc
in
cmpsl
aam
ds
cmp
ja
push
jp
add
out
or
shrb
sahf
and
pusha
setne
mov
cmp
icebp
das
and
popa
and
fsts
lods
push
inc
test
in
mov
mov
cwtl
fistl
or
push
stos
pop
sbb
ja
adc
daa
loop
or
lahf
mov
fisubrs
xor
jns
sahf
xchg
cmpsb
ret
es
je
fs
stos
mov
cmp
mov
ljmp
lahf
popf
ds
das
xchg
or
sub
mov
sbb
aaa
cld
dec
or
jecxz
jg
xchg
mov
stc
jge
lds
cld
jns
adc
aas
mov
and
adc
aaa
sub
imul
mov
ficoms
sbb
or
mov
mov
je
xlat
cmp
pop
imul
xchg
enter
enter
shll
sub
dec
jo
inc
int
cmc
pushf
sbb
pop
xor
cmp
std
push
mov
ret
xor
mov
imul
cwtl
jnp
pop
data16
mov
aaa
addr16
jnp
push
and
mov
jbe
xchg
push
add
sarb
adc
clc
and
cmp
movsl
or
nop
hlt
jne
sub
jle
dec
xorb
outsb
stos
push
js
dec
fiadds
jbe
or
cs
aam
aaa
dec
inc
dec
orb
ret
and
sub
push
pop
adc
sbb
and
out
lock
jmp
movaps
int3
or
das
fadd
int
imul
cmp
mov
fisttpll
mov
add
pop
inc
out
mov
daa
bound
loop
fcmovnbe
insb
adc
sub
test
push
bound
xchg
pop
lret
je
lret
das
int3
fbstp
jge
jb
dec
xchg
out
sbb
or
nop
inc
lock
test
xchg
sbb
shll
stos
push
scas
outsb
pop
popf
arpl
inc
jmp
adc
xchg
mov
pop
cmpl
xchg
lcall
in
adc
jg
xorw
clc
pushf
mov
std
xchg
jns
test
scas
pushf
inc
cmc
adcb
dec
cld
push
test
inc
dec
insb
inc
pop
pusha
cmp
mov
lret
out
xor
pop
out
scas
je
nop
cmpsb
bound
xchg
add
pusha
pop
mov
fldt
std
sarl
sbb
xchg
push
pop
jns
sub
repnz
out
loopne
cwtl
scas
xchg
test
mov
push
mov
fucomp
es
push
in
cmp
ds
xchg
int
pop
cmpsl
inc
sbb
test
mov
es
aas
cmc
mov
mov
sbb
in
stos
dec
mov
imul
or
cld
sbb
fwait
sti
mov
sbb
loope
jb
xchg
xor
xchg
mov
shl
mov
stos
dec
xchg
leave
sub
filds
pop
mov
pop
fwait
sbb
aad
xchg
pop
jp,pn
lcall
lds
icebp
jne
pcmpeqb
jl
das
call
push
mov
push
sub
stos
aam
jb
lods
popa
sub
rolb
daa
sbb
sub
sarl
jae
outsl
shlb
cwtl
add
outsb
scas
aad
inc
filds
rol
repnz
inc
xchg
sub
inc
data16
cmp
xlat
orl
sbb
nop
mov
inc
rcll
mov
push
mov
ds
and
rcrb
add
dec
xchg
rcll
hlt
rcrl
sub
orb
mov
pop
mov
lahf
arpl
jae
mov
mov
sbb
mov
inc
ret
sub
cmp
cmp
jl
mov
dec
rorl
sub
notb
add
sbb
xor
mov
aaa
nop
loopne
in
sahf
xchg
pop
dec
int3
cmpb
jno
ljmp
add
push
stc
sbb
imul
icebp
mov
lcall
sahf
add
rcll
adc
stos
stos
dec
lds
cmp
inc
mov
in
push
push
sbb
push
sub
xchg
mov
sarl
mov
lods
icebp
outsl
jecxz
xchg
sbb
lods
lods
dec
jl
cmpsb
aad
and
iret
testl
fwait
mov
jp
mov
push
cmpsl
cmpb
sub
popf
stos
insb
test
or
ret
loop
adc
scas
ss
inc
mov
movsl
sbb
in
rolb
mov
dec
imul
out
sbb
jecxz
lahf
push
mov
dec
adcb
in
mov
pushf
pop
jns
mov
and
sub
jo
cmp
and
inc
sub
cmp
fs
mov
cmp
clc
aas
sub
push
imul
imul
xchg
add
rcl
adc
frstor
mov
or
arpl
out
stos
in
sbb
std
leave
shl
addr16
push
add
cwtl
decb
inc
js
push
insb
push
mov
and
adc
jno
xchg
movsb
inc
lcall
cltd
fnstenv
jg
movsb
and
dec
cmp
xor
arpl
fnstcw
add
cmp
in
xchg
bswap
hlt
inc
xchg
mov
mov
add
ds
into
mov
shll
lods
xchg
inc
jge
je
pushf
pop
andb
cmpsb
push
insb
jge
mov
ret
cmp
mov
dec
xlat
mov
sbb
inc
call
push
cmp
movsl
and
pop
sub
neg
xchg
js
pop
add
mov
inc
adc
jecxz
icebp
das
and
and
mov
fdivr
xchg
int
lret
mov
add
leave
enter
scas
xchg
xlat
mov
mov
pop
or
jecxz
sbb
inc
mov
sarb
pop
push
mov
incb
cmp
inc
add
mov
loopne
shl
sub
nop
in
sarb
cli
and
fnstsw
push
mov
mov
inc
movl
out
mov
xchg
aaa
repnz
pop
sub
loop
cs
outsb
lds
sub
xor
jae
arpl
jecxz
insl
sbb
andl
mov
scas
out
xor
pop
xchg
pop
mov
mov
xlat
mov
aaa
mov
add
mov
add
mov
mov
push
add
jge
jo
nop
xchg
jecxz
bnd
lcall
inc
pusha
and
fs
sahf
lcall
pop
repnz
sub
sub
pop
fcoml
cltd
clc
cltd
fidivrs
push
sar
bound
adcl
jg
dec
gs
dec
inc
inc
xchg
jae
and
std
sahf
jle
adc
xchg
push
push
enter
pop
ret
and
mov
int
aad
inc
subb
mov
aaa
sub
push
call
push
ljmp
das
and
fsubs
and
mov
xlat
jae
mov
mov
xor
loopne
stos
call
test
imul
jmp
xor
xchg
and
jnp
fnstcw
and
xchg
xchg
mov
xchg
jg
jge
cmp
dec
push
lret
adc
push
xor
adc
in
test
xlat
xor
jbe
popa
aam
and
mov
dec
dec
lds
mov
lahf
dec
mov
testb
es
pop
xchg
inc
xchg
and
into
pop
fiadds
jo
sub
add
lods
push
pop
in
push
push
subb
in
clc
mov
in
inc
fisubs
loope
mov
jbe
cmpsl
addb
or
sahf
pop
cmp
xchg
xor
mov
cmpsl
fidivrs
or
adc
call
das
aad
fcomps
add
shr
jp
aad
sub
dec
pop
loop
es
sbb
in
ret
test
cmp
jne
sbb
ret
and
jg
jmp
ljmp
fdivl
push
and
mov
lahf
add
das
out
pop
rolb
dec
sub
outsl
xor
push
or
cmpl
in
dec
mov
xchg
mov
test
jge
test
pop
xchg
sbb
inc
push
fdivrs
hlt
sbb
mov
outsb
pop
pop
xor
ret
shl
add
add
and
adc
inc
lret
adc
cmp
in
pop
xchg
jl
mov
cmpsl
cli
outsb
ljmp
iret
outsb
lcall
enter
sti
sarl
popa
out
dec
jnp
cmp
out
jnp
js
xor
in
loop
das
clc
dec
jo
jecxz
inc
mov
inc
adc
xchg
leave
lods
or
iret
xor
mov
outsb
cwtl
or
subl
push
pop
and
lock
mov
cmpsl
push
inc
addb
jno
pop
pop
jle
dec
adc
icebp
fbstp
aam
call
inc
and
addps
cld
out
ret
les
jnp
inc
lods
mov
leave
stc
mov
scas
mov
mov
inc
movsl
sub
sbb
push
mov
les
aad
sbb
cmpb
shl
push
hlt
dec
jae
xchg
sbb
sub
push
add
das
fisubrs
adc
push
ss
or
sub
andb
and
inc
pop
mov
jl
sbb
arpl
incb
mov
mov
xchg
out
adc
or
push
adc
mov
int3
xor
push
and
push
shll
mov
shlb
push
push
sub
ds
ret
mov
nop
lds
mov
pop
lea
cmc
repnz
addr16
outsl
cmp
sti
push
fimull
mov
jmp
sub
mov
shl
mov
pop
mov
enter
dec
int3
xor
movsl
xor
inc
jae
mov
dec
les
aad
inc
lods
fscale
into
lret
inc
lahf
xlat
ficomps
sub
ret
sbb
dec
icebp
inc
mov
mov
sbb
stos
and
int3
sti
pop
iret
out
sbb
cli
les
mov
iret
dec
dec
fildl
int
adc
loop
lds
imul
ja
lea
fstpt
lret
push
loopne
mov
lock
add
push
scas
pop
sbb
sbbb
lods
bnd
xor
sub
jo
orl
dec
imul
mov
push
dec
shr
movsb
push
stos
sahf
dec
movsl
mov
pushf
add
sarl
das
sub
add
xchg
jae
rcll
xchg
adc
xchg
clc
cmp
mov
inc
sarl
inc
mov
inc
add
cmpsb
test
sub
sbb
int
add
jbe
movsl
pop
pop
mov
push
push
push
int
fwait
jne
icebp
ret
mov
aam
and
orb
mov
pusha
es
sti
ret
leave
jns
outsl
push
clc
loopne
in
cmpsl
or
int3
cmp
and
lods
aas
jb
lods
shrb
cs
scas
daa
sub
add
jbe
adc
mov
aad
mov
sahf
sbb
shlb
arpl
lret
cmp
jge
fisubs
ds
pop
mov
mov
lcall
mov
cmp
dec
leave
push
hlt
notl
roll
loop
outsb
push
sub
jge
mov
push
and
arpl
add
mov
pop
fwait
mov
sbb
jae
inc
rcl
inc
mov
lret
fs
and
in
or
test
push
jmp
cwtl
cmp
cmp
ja
lea
push
xchg
fldenv
and
inc
xorb
fsub
or
inc
fimull
aas
sbb
or
sub
sbb
sub
shll
aas
jg
xchg
jle
loop
test
into
sub
popa
mov
ljmp
mov
mov
xlat
dec
jno
sub
push
stc
lods
jp
testb
std
mov
and
dec
out
mov
cmp
mov
mov
mov
jge
ret
out
icebp
clc
jbe
int3
dec
imul
or
xor
mov
mov
push
pop
into
mov
imul
negb
push
inc
int
jb
adc
jmp
jnp
and
sbb
pop
pop
jmp
ljmp
lcall
fucom
call
and
lret
stos
pop
pop
jmp
rcl
adc
andl
or
rorb
or
mov
ja,pt
pop
add
push
mov
and
adc
inc
stc
std
mov
jg
repz
leave
or
cmp
repz
fwait
push
dec
xor
lret
mov
ja
jo
dec
int
jnp,pt
push
jg
pop
mov
mov
mov
popf
arpl
mov
cmova
in
xlat
icebp
xchg
xchg
dec
test
xor
out
fstpl
mov
in
repnz
clc
aas
out
jo
cmp
mov
add
adc
inc
mov
jnp
mov
push
jp
lods
test
sbb
xchg
inc
stc
mov
cli
movsb
add
test
mov
xchg
outsb
andb
outsl
add
cs
jp
and
cmp
lods
sti
sbb
mov
cmp
mov
fwait
jns
adc
or
loop
leave
stos
ficoml
nop
mov
jge
pop
cmp
lret
jp
test
xchg
hlt
sub
jnp
cmp
aaa
inc
icebp
aam
sub
es
arpl
or
mov
xchg
cmc
repnz
xchg
jp
mov
adc
pop
inc
push
fcomps
jno
pop
xlat
xor
push
lods
lret
mov
xor
cmp
in
iret
in
jno
push
adc
cmpsb
clc
nop
xchg
pop
jnp
adc
add
cmp
cmp
mov
idivb
xsha256
cmpsb
xlat
adc
pop
xchg
cmc
popf
jmp
clc
push
daa
xrelease
push
movsb
hlt
adc
sbb
pop
mov
adcb
lods
push
repnz
cmp
cld
push
lods
xor
adc
xchg
sbb
hlt
es
sub
xor
lret
cmp
xchg
int3
or
mov
and
outsl
punpcklbw
cmpsl
mov
jp
sub
jg
pop
out
push
mov
int3
mov
xor
add
jg
mov
xor
leave
shl
jmp
adcl
aad
bound
jmp
dec
xor
adc
lea
mov
mov
inc
inc
mov
push
stos
sub
subb
dec
pop
sbb
jns
ret
test
add
enter
aam
stos
jmp
nop
int
testl
mov
push
and
jecxz
stos
cmp
mov
push
sub
dec
lret
int3
push
test
rep
adc
inc
div
add
xchg
nop
idiv
pop
mov
jl
nop
cmpsl
fst
shlb
lret
mov
pop
adc
jne
dec
sub
mov
push
mov
xchg
push
add
aaa
imul
fwait
pop
je
popf
or
push
lcall
mov
jns
roll
dec
mov
and
ss
mov
adc
mov
jno
and
xlat
cs
sbb
popf
test
call
push
jmp
push
pop
aad
mov
gs
ret
stos
nop
dec
dec
add
push
aad
dec
lahf
jnp
in
push
arpl
imul
sbb
xor
mov
fs
rcll
mov
jecxz
adc
mov
inc
inc
xor
shll
jl
stc
add
dec
int
add
push
xchg
xchg
fisubrs
sbb
faddl
xchg
inc
xor
mov
push
rclb
mov
sbb
xchg
outsl
ja
cli
sub
mov
xor
jge
pop
test
aas
testb
frstor
cmp
cmpsb
push
push
jo
pushl
lods
inc
aas
xor
mov
in
mov
mul
pop
lods
inc
or
adc
pop
mov
popl
in
aaa
out
jmp
stos
mov
hlt
clc
xor
mov
int
mov
mov
mov
cmp
scas
clc
pop
fs
cmpsl
mov
adc
pop
jo
jo
cmpsl
pop
pop
nop
mov
jae
inc
sbb
cld
cwtl
dec
ret
test
mov
loopne
dec
jle
jmp
aas
cvtps2pi
push
inc
push
xor
add
mov
sbb
jns
into
fisttps
iret
lea
jge
popa
loopne
dec
fcompl
mov
into
xchg
lret
clc
cmc
mov
fxtract
push
dec
lret
jo
pop
clc
jl
sti
or
inc
fdivr
pop
fldenv
fisubs
aas
out
mov
cmp
cli
aam
fsubs
rcll
xor
sbb
inc
sbb
xchg
ss
cmpb
imul
pop
jb
pop
int
and
sbb
out
out
push
adc
mov
and
jno
fimull
and
mov
cmp
sbb
addr16
hlt
in
pop
dec
adc
xchg
sub
lahf
pusha
sahf
int
mov
sti
fbld
out
add
xlat
call
lods
test
sbb
or
in
sbb
cmpsb
out
movsb
ficoml
push
lods
xor
dec
jns
movsl
inc
or
xchg
or
icebp
xor
mov
test
add
lea
movsl
mov
inc
dec
cmp
or
dec
sub
dec
add
xchg
cmp
or
add
aas
and
dec
pop
mov
in
insl
dec
mov
add
lock
outsb
and
jl
cli
jmp
mov
jns
outsb
leave
sub
mov
mov
jo
rcr
and
push
pop
cmp
scas
scas
or
push
popa
emms
push
movsb
inc
sub
lret
xor
lds
pushf
pop
daa
cmc
rcll
icebp
or
mov
cmp
xlat
addl
add
gs
jg
out
pop
adc
into
cmc
inc
xchg
mov
cmp
add
fs
in
and
mov
push
mov
jl
aam
arpl
mov
mov
and
push
outsb
jg
movsb
pop
call
cltd
int
pop
flds
xor
jmp
push
adc
testl
xchg
sbb
fldenv
and
into
lcall
push
mov
insb
jno
push
mov
insb
call
mov
pusha
xor
loope
mov
jb
scas
adc
mov
cmp
push
imul
dec
xchg
or
repnz
inc
push
jb
or
mov
in
dec
mov
mov
sbb
or
bound
ss
jb
xchg
les
and
fs
stos
popa
sub
ja
jecxz
mov
insb
les
push
test
andl
push
scas
xor
mov
cltd
dec
in
and
push
dec
mov
and
mov
scas
cli
idivb
int3
push
and
data16
fiaddl
flds
xor
sbb
call
pop
pop
sbb
lret
mov
icebp
dec
pop
popf
shlb
popf
jge
test
into
div
mov
cwtl
or
out
and
pop
xchg
andl
js
mov
jge
cmp
jge
aad
pop
add
sub
sbb
int
je
bound
and
mov
dec
insl
pop
fdivp
loopne
ds
imul
mov
add
jg
pop
out
mov
jge
mov
out
clc
mov
shll
adc
lret
and
push
fisubs
repz
cmp
cmpsb
mov
lods
pusha
mov
cmp
mov
hlt
inc
jo
xchg
dec
dec
or
cs
lds
pop
push
xor
out
push
add
cmp
mov
pop
test
xor
pop
jae
dec
inc
push
push
in
cmp
inc
fs
pop
shrl
lahf
leave
and
ret
push
lahf
cmpsb
dec
mov
cmp
pop
sub
and
mov
xchg
test
mov
mov
xchg
pop
mov
out
nop
in
outsb
mov
pushf
jp
push
in
lret
rcrl
add
mov
dec
adc
iret
dec
dec
ficoms
or
enter
add
inc
enter
inc
mov
push
inc
dec
mov
xor
sub
or
fisubs
jl
cli
mov
dec
mov
repz
fwait
ja
test
out
loopne
mov
add
fidivrl
inc
push
fnstcw
movsl
mov
movsl
pop
pop
ret
cmp
sbb
andl
pop
jnp
ds
sarl
and
fisubrs
shr
inc
mov
mov
adc
mov
mov
dec
or
mov
mov
dec
mov
icebp
bound
mov
xor
add
fsubrp
lss
mov
pop
roll
cwtl
aas
gs
push
sub
pop
adc
lret
mov
push
xchg
pop
ja
adc
sahf
push
fdivr
lret
cmp
mov
inc
rclb
lods
jne
mov
push
call
pop
push
in
or
lret
cmpl
jle
jl
dec
mov
insb
gs
cmpsb
int
lock
hlt
lahf
jecxz
or
shl
add
inc
lods
ljmp
dec
or
cwtl
pop
frstor
inc
ljmp
xor
or
jge
lcall
into
lcall
test
mov
xchg
jp
push
fwait
lods
out
add
push
into
pushl
pop
pop
mov
in
push
and
bswap
enter
xchg
outsb
xchg
cmpsb
inc
mov
out
fisttpl
je
neg
rorb
pop
xor
pop
stc
decb
push
pop
insl
fldt
inc
lea
rolb
fucomp
or
cmpl
jl
push
mov
adc
cmp
daa
push
sbb
inc
cmpsl
or
mov
push
sbb
arpl
arpl
and
inc
mov
iret
ficoml
or
xchg
mov
mov
ja
test
push
lcall
jbe
xchg
and
fnstenv
test
dec
sbb
ds
dec
mov
ja
fcoml
xor
imul
mov
roll
lea
sub
and
inc
ficoml
cli
scas
pop
mov
fisubs
push
mov
mov
push
or
out
mov
push
cmc
dec
push
testl
lea
inc
dec
mov
popa
mov
cli
stos
dec
add
aas
arpl
pop
add
sbb
dec
dec
xlat
ret
or
push
lret
cmp
adc
leave
jns
xor
sbb
xchg
loope
sbb
out
ret
cmp
mov
push
push
push
push
sub
inc
push
jmp
mov
sbb
push
mov
adc
jns
lea
ficoml
fisubrl
cltd
lahf
cltd
in
mov
mov
inc
outsb
push
pop
jns
insl
fchs
pusha
repnz
mov
inc
mov
dec
repz
leave
lahf
mov
clc
aas
xchg
dec
or
int
add
jbe
adc
xor
outsb
jge
sbb
push
stc
xchg
fldl
sbb
xor
movsl
xchg
lret
jno
mov
nop
aaa
lret
pop
mov
xorb
add
push
repz
js
mov
jge
int
lds
push
sub
das
sbb
mov
sbb
mov
std
jle
sub
fnstenv
jns
sbb
pop
lds
cwtl
and
inc
outsl
scas
cs
test
pop
inc
mov
hlt
outsb
dec
ficompl
push
inc
jmp
mov
cmp
int3
lcall
fs
cld
mov
jecxz
movb
adc
jp
jno
jmp
mov
xadd
arpl
pop
leave
add
jl
shlb
test
cs
loopne
mov
loopne
pop
mov
add
ss
mov
dec
mov
pushf
fidivrs
jecxz
fbstp
scas
cmpsb
call
push
shll
inc
sbb
or
push
pop
sbb
scas
pop
pushf
mov
xor
sarb
lea
popa
xchg
or
ret
jle
ret
sub
jecxz
mov
pop
or
lahf
incl
dec
shlb
daa
jno
cld
jbe
fucomp
xor
pop
testb
fs
fcos
add
sbb
out
xor
bound
fucomi
ret
dec
inc
divl
nop
popa
icebp
mov
repz
lock
jns
lea
add
sarl
push
dec
mov
aad
mov
movsb
or
leave
aam
xchg
arpl
cmpsb
test
mov
sub
test
cmpsl
jo
pop
xchg
lea
and
roll
clc
mov
jnp
subl
mov
push
lcall
cs
popf
or
imul
bound
dec
stos
xor
outsb
jp
fidivrl
in
push
jno
sub
jg
and
or
fimuls
sbb
imul
fidivrs
fldcw
mov
fwait
mov
int
test
int
lahf
and
add
add
dec
stc
ret
cmp
adcl
adc
lret
stos
pop
pop
or
rcrb
sahf
add
insl
jns
add
pop
pop
pop
out
inc
mov
inc
sbb
xlat
cld
test
fsubrs
pop
mov
inc
cmp
aas
fdivs
in
mov
imul
or
pop
ret
push
pushf
movsl
add
lods
push
push
mov
sarb
and
pop
lock
mov
lret
xchg
cmp
mov
fisttpll
aad
fstp
jae
shlb
insl
mov
pusha
cmc
mov
cli
cwtl
lea
ds
sbb
subl
cmp
adc
mov
jge
idiv
mov
mov
add
sbbb
jl
push
imul
mov
in
pop
sahf
add
push
mov
xor
push
loopne
into
jno
rcrl
nop
jl
inc
jmp
add
pop
add
dec
sbb
xchg
in
pop
repnz
xor
insb
pop
scas
pop
sbb
xor
mov
cmp
lret
orl
add
ja
add
adc
stos
dec
adc
mov
lahf
xchg
add
sahf
lock
inc
js
dec
inc
add
dec
cmpsl
push
xchg
std
xchg
out
inc
pop
inc
out
xor
mov
mov
mov
movl
movsl
xchg
cmp
das
pop
push
sbb
sbb
push
sahf
int
push
adc
andl
push
dec
mov
adc
mov
hlt
pop
adc
stc
test
aaa
stos
sahf
stc
int3
imul
sub
dec
loope
xchg
scas
popf
imul
and
ret
cmp
sbbl
xchg
addr16
repz
push
test
ljmp
repnz
push
ja
scas
cs
sbbl
movsb
sti
add
sbb
or
mov
jae
sbb
add
add
xchg
inc
movsb
gs
fldl
pushf
rcrb
cmc
fmul
dec
imul
addl
cmpsb
mov
sarl
sub
gs
ja
jnp
mov
sub
bts
sub
xor
add
pop
fs
test
mov
xor
xchg
sbb
stos
pop
sbb
jo
les
inc
loopne
je
jg
or
jge
push
pop
fwait
mov
dec
sub
stos
dec
arpl
loop
fwait
lock
cmp
sub
fwait
push
sti
dec
sbb
out
sbb
or
xor
js
addb
adc
add
cld
inc
pop
jl,pt
imul
clc
das
ret
xlat
shlb
and
jbe
jle
pop
inc
stos
mov
pop
mov
stc
or
hlt
add
push
imul
and
push
jae
xor
sahf
mov
inc
jbe
data16
fwait
inc
and
inc
mov
add
jo
mov
iret
out
lret
loop
jb
lods
sub
pop
hlt
mov
adc
or
out
fwait
stc
clc
sub
cmp
sub
fstl
mov
jns
xchg
jp
and
mov
jp
sub
movsl
movsb
pop
add
or
scas
mov
in
add
mov
and
loope
jbe
pop
xor
out
imull
out
pop
adc
sti
sub
xchg
test
jecxz
sbb
mov
mov
mov
push
jp
mov
les
stos
fildl
leave
aaa
xchg
jnp
mov
nop
sbb
outsb
pop
adc
xor
or
clc
decb
fistpl
lcall
cmp
cmp
outsb
gs
hlt
jmp
cmpsb
call
inc
dec
ret
xor
lock
inc
inc
xchg
in
and
jp
fsubs
add
or
push
mov
sub
test
lock
cmp
popf
jecxz
cli
rclb
call
sub
lea
pop
ret
inc
xchg
inc
xor
dec
adc
rcrl
xor
scas
flds
mov
and
sahf
sbb
ret
mov
cmp
mov
out
sarl
and
cmc
pop
lock
sbb
movsl
mov
int3
pop
push
pop
enter
xor
sbb
outsl
mov
and
cmc
repnz
imul
lcall
jne
add
mov
movd
xchg
loop
mov
jbe
pop
inc
lret
fbld
rolb
push
xor
adc
push
mov
repz
aad
lret
sbb
rcrb
mov
xchg
inc
xor
sti
xchg
call
loop
jne
sub
adc
popa
ljmp
xchg
imulb
xor
aad
incl
mov
addl
pop
cmp
jae
mov
mov
outsb
dec
and
dec
adc
lcall
sub
lcall
aad
lea
in
roll
add
pop
xor
shll
adc
stos
pusha
mov
and
scas
aaa
jl
iret
dec
cltd
gs
out
mov
or
in
pop
mov
jp
inc
cmpsl
aaa
cld
xchg
in
repz
cmc
movsl
daa
mov
arpl
dec
aam
aad
ljmp
adc
jnp
inc
cmp
mov
xchg
enter
unpcklps
int
das
push
fstpl
mov
push
aaa
aad
and
lea
or
cmpb
movsb
sbb
test
sbb
fwait
js
fs
daa
cli
enter
ljmp
pop
fidivs
nop
mov
in
out
ja
ret
jb
rcr
sub
fisttps
add
ja
enter
push
xchg
popa
or
pop
xchg
add
jl
sbb
sbb
loop
jl
nop
xchg
js
out
xor
mov
add
lahf
pop
popa
xchg
ljmp
scas
push
sbb
pop
sahf
xlat
outsb
push
in
mov
mov
in
sbb
int3
lods
pop
mov
add
std
xchg
pop
inc
dec
pop
cli
adc
les
popa
in
out
push
adc
testb
cmp
sbb
add
mov
push
daa
cltd
cwtl
xchg
pop
popa
push
call
jns
push
cmp
ret
inc
test
dec
sub
stos
cmp
sbb
iret
popf
mov
jge
xchg
push
add
mov
pop
jb
xor
shlb
sub
shlb
cmp
idivb
loopne
rorl
mov
jne
leave
repnz
andb
and
decb
iret
leave
lods
xor
mov
subl
pop
push
out
and
jge
pushf
xchg
test
fistpll
lcall
fwait
mov
pop
out
insl
arpl
mov
out
loope
in
mov
lods
loope
mov
in
or
xchg
mov
xchg
lods
pop
lods
lods
aam
sti
add
aaa
and
push
add
dec
test
and
push
cld
in
repz
or
testl
lret
movsb
adc
in
xchg
fst
or
sahf
pop
pop
inc
add
int3
pop
add
out
daa
outsb
push
add
sub
test
rcr
outsb
xchg
lret
push
adc
dec
cmp
std
sbb
cmp
cltd
push
xor
outsb
gs
ljmp
and
mov
jl
jge
rolb
pusha
xchg
cld
addr16
movl
lods
fstpt
popa
push
cmpsl
dec
js
sbb
arpl
or
sbbl
divb
dec
ja
dec
mov
ja
cmp
sub
jecxz
je
rcr
rol
test
and
and
xchg
push
fsubs
call
adc
mov
pop
imul
mov
sahf
les
dec
mov
lods
mov
mov
or
fsubp
inc
jo
mov
and
stos
jge
add
aam
in
movsb
out
fwait
cmp
adc
push
int3
xchg
movsl
clc
filds
cmp
leave
outsb
push
movl
push
in
scas
jecxz
jge
push
ret
add
divb
fs
dec
icebp
lret
sahf
in
inc
sti
mov
int
push
dec
ret
adc
stos
pop
stc
and
push
xor
ficompl
and
push
fdivr
or
ret
int3
push
movl
push
push
cmc
xchg
adc
nop
imul
push
fwait
inc
xchg
sbb
insb
fists
jne
jmp
outsl
not
xrelease
push
lret
and
hlt
aas
gs
mov
scas
cmc
cwtl
mov
dec
push
mov
loopne
test
daa
adc
lahf
in
mov
sti
or
pop
inc
orb
xchg
cmpsb
cmp
fidivs
mov
scas
fs
dec
cmp
add
push
pusha
mov
xor
push
into
add
xor
push
xchg
and
mov
pushf
mov
and
push
std
cmp
cmpsb
adc
xchg
dec
nop
mov
push
pop
insl
pop
aam
scas
dec
inc
mov
stos
loopne,pn
cs
xor
jp
lret
lahf
or
loope
mov
cmpsb
in
fidivl
or
stos
aaa
mov
fimull
ds
mov
add
jb
dec
add
pop
inc
and
xchg
sub
in
fwait
data16
out
roll
int
cwtl
pop
ds
xor
pop
inc
mov
in
mov
loopne
dec
rcrl
pop
fistl
dec
xchg
js
test
in
fnstcw
sbb
sub
ret
rorb
or
mov
mov
mov
mov
sbb
loope
mov
repnz
add
push
orb
push
ss
fldt
mov
inc
mov
iret
enter
sbb
loope
adc
or
in
imull
loop
fs
xor
movsb
jp
sbb
in
xorl
lcall
add
xor
call
or
mov
out
sub
imul
fmull
adc
push
add
push
rcrl
add
xchg
jmp
test
mov
ljmp
xchg
fiaddl
nop
adc
dec
sti
movsb
lds
pop
rolb
ja
mov
sbb
ret
addr16
jecxz
loope
sbb
jp
pusha
gs
cmp
xchg
lret
in
and
dec
mov
enter
mov
pop
mov
cmp
dec
sbb
jmp
push
std
inc
adc
ss
sti
pop
into
push
mov
into
insb
jnp
cld
repz
pop
andl
adc
pop
mov
iret
fcmovne
mov
into
aaa
pushf
mov
mov
fnclex
outsl
mov
mov
stos
or
cmp
mov
cltd
inc
jl
cmp
jbe
gs
xor
push
call
in
sbb
nop
jmp
popa
sbb
fs
cmp
sahf
inc
enter
mov
sbb
dec
stos
push
or
xchg
cmp
mov
or
pop
test
mov
clc
aaa
movl
es
cli
nop
mov
scas
das
ljmp
insl
mov
cmp
loopne
call
inc
jnp
jmp
cmc
xchg
daa
xor
loop
sbb
push
aaa
and
add
mov
or
lock
and
xchg
lds
icebp
jp
mov
adc
mov
out
jae
lock
inc
jne
ja
mov
in
inc
mov
cwtl
sbbl
repnz
inc
jge
and
push
out
push
push
subb
pop
out
cmpsl
fildll
call
push
dec
shll
cmp
dec
repnz
adc
add
xor
enter
inc
xlat
sahf
out
xchg
mov
and
mov
xchg
jecxz
scas
add
fbstp
dec
and
cld
push
dec
out
adc
xchg
scas
fsubr
jnp
or
addr16
xchg
jmp
das
stc
sbb
push
cmp
std
jae
fiadds
and
iret
ficompl
insb
or
xchg
call
enter
leave
je
fildl
add
imul
test
sub
pop
iret
dec
rorl
pop
push
pop
cwtl
xchg
fwait
daa
ds
adc
add
movb
sbbb
sbb
pusha
add
pop
cli
jo
call
or
push
cli
bound
cwtl
fnstcw
hlt
mov
mov
sub
cmp
test
adc
lret
sbb
pop
mov
out
ljmp
shll
mov
xor
decb
int3
inc
pusha
leave
test
scas
jmp
push
xchg
lods
je
imul
mov
jecxz
jmp
xlat
ret
cs
cwtl
repnz
pop
stos
cmp
mov
lea
in
xlat
adc
orb
jecxz
imul
mov
cmp
cmp
xchg
mov
sbb
mov
out
ja
sbb
loopne
jl
rcrb
inc
stos
xor
pop
arpl
mov
sub
ror
int3
xchg
popa
cmp
repnz
cmp
rorl
jnp
stos
test
test
push
int3
stos
aaa
sahf
or
add
xchg
cmpsl
push
mov
daa
add
jbe
push
push
shlb
push
ror
mov
fcmovu
movsb
push
and
adc
cmpsl
push
pop
lods
insl
push
mov
jecxz
mov
stc
push
lock
ret
and
adc
int
add
jg
inc
adc
mov
in
inc
xchg
cmp
push
shrb
imul
fistl
jle
pop
and
dec
xor
push
js
add
ljmp
out
test
dec
xchg
dec
lcall
hlt
cmp
dec
jnp
push
scas
or
jo
jo
push
lret
adc
pop
mov
jno
imul
int3
loope
in
mov
xchg
in
daa
xchg
dec
cmp
push
std
fxch
cmp
xchg
pop
dec
int
xchg
out
pop
fcoml
enter
testl
sub
insb
imul
push
ss
clc
test
sub
mov
sub
xchg
mov
pop
xlat
dec
mov
inc
in
sub
or
jecxz
jmp
mov
xor
fwait
arpl
mov
movsb
jae
jle
je
sub
jg
xchg
loop
push
pop
xchg
mov
stos
push
mov
in
cmc
add
mov
mov
inc
adc
inc
outsb
lods
pushf
sub
int3
fidivl
dec
add
lock
mov
dec
dec
xchg
add
testl
cmp
test
cwtl
icebp
push
push
inc
insb
push
push
xor
addr16
icebp
es
movl
hlt
push
leave
mov
insb
push
pop
incb
adc
cld
cs
or
xchg
mov
out
stos
or
pop
mov
mov
call
enter
pop
fimull
inc
xor
aad
insl
push
dec
dec
sub
rcrl
aaa
sti
js
sbb
xor
pop
mov
mov
addr16
scas
mov
mov
xor
fbstp
decl
fisubrs
inc
jnp
or
xchg
jp
mov
xchg
in
or
fsts
outsl
inc
cli
gs
push
stc
mov
out
jnp
mov
pop
xchg
mov
add
xchg
jmp
rorb
int
mul
insl
loopne
lcall
push
stos
rolb
pop
lret
inc
movsl
or
hlt
dec
mov
or
js
hlt
sbb
dec
ja
lods
adc
pop
mov
repz
arpl
iret
dec
sti
push
add
jp
clc
mov
or
xchg
push
add
mov
std
scas
mov
jg
in
and
jne
or
push
dec
lock
mov
jmp
into
xor
inc
jmp
xchg
std
jp
repz
mov
mov
lret
pop
push
lcall
aam
mov
xor
xchg
psubsb
push
xchg
lea
jns
je
stos
pop
push
leave
lahf
bnd
adc
push
inc
ror
and
jmp
pop
inc
mov
bound
cmc
jnp
mov
push
mov
xlat
ret
fldcw
mov
jg
mov
shl
pushf
pop
insl
xorl
ret
pushf
in
int
adc
push
xchg
scas
stos
fisttps
fisttpl
sub
cltd
aam
leave
aad
and
jg
fdiv
es
arpl
or
inc
pop
stos
lahf
mov
cs
decb
scas
sbb
sub
lds
data16
xchg
mov
cltd
sahf
push
les
cmp
mov
repz
int3
and
mov
sarb
dec
pop
adc
ljmp
mov
mov
push
mov
test
loope
lret
outsb
icebp
push
imul
xor
inc
xchg
repnz
xchg
lret
xor
cli
stos
pop
rcll
inc
xchg
call
div
mov
and
push
cmp
repnz
cli
fdivr
jno
sti
jg
nop
inc
push
bndldx
sub
add
insb
jne
sub
leave
insl
jne
aas
dec
jp
cmp
and
es
mov
subl
mov
aas
push
sti
mov
cmpsb
adc
add
scas
aaa
inc
scas
cs
jg
int3
lahf
testb
out
mov
xlat
or
inc
mov
movsl
adc
inc
xchg
adc
add
pop
and
loope
jns
test
push
cmp
js
lret
shlb
mov
push
enter
fdivl
cmpsl
cld
inc
test
inc
lock
jp
icebp
xor
inc
cvtdq2ps
pop
push
push
fdivrs
scas
add
cmp
mov
and
repz
pop
aas
xchg
hlt
inc
sbb
subl
pop
lods
imul
dec
inc
lea
sub
insl
out
add
repz
ss
jmp
fldenv
lds
lahf
in
lea
jns
push
sbb
mov
popf
int
scas
test
jmp
ds
xor
mov
imul
scas
out
fidivs
icebp
insb
popa
xor
and
adc
je
rol
mov
int
pushl
int3
mov
inc
std
fwait
ljmp
ljmp
sbb
cmpsb
xor
popf
nop
fwait
and
call
jg
pop
jo
mov
mov
or
add
xchg
and
cmp
jo
adc
fidivrl
scas
popf
andb
mov
les
sbb
pop
mov
loope
into
dec
mov
mov
and
bound
insb
xchg
push
test
in
mov
push
mov
add
out
js
or
mov
mov
xlat
shlb
jp
hlt
push
leave
aad
mov
jnp
lods
mov
fld
inc
fldln2
dec
por
mov
repz
mov
mov
mov
outsb
push
sub
push
jge
test
xchg
cmp
mov
sub
lahf
xchg
enter
sub
mov
mov
iret
das
cltd
mov
xor
jp
jecxz
mov
and
aaa
repz
sarb
push
fildl
fsts
push
inc
xor
cmp
lods
stc
jb
pop
or
or
mov
pop
or
inc
bound
mul
in
stos
mov
add
jp
cmp
inc
lret
mov
mov
lcall
loop
mov
imul
incl
cmc
int
in
cld
lret
jb
movsb
test
lods
sti
adc
iret
push
or
and
or
or
jl
bound
lods
addb
sahf
dec
ja
cmc
cmpsl
scas
mov
push
nop
hlt
aam
movsl
add
add
shlb
lret
pusha
out
negb
aas
dec
add
test
outsb
xchg
repz
xchg
adc
or
clc
adc
cmp
or
or
or
push
cltd
icebp
push
dec
adc
xchg
repnz
out
and
inc
cmp
in
pop
adc
loop
mov
insl
inc
dec
fcoml
lock
pushl
out
rclb
test
xor
lret
out
mov
lret
pop
jb
xchg
sbb
jae
mov
stos
adc
push
sti
testl
inc
push
dec
push
lcall
cmp
cltd
addr16
mov
call
adc
push
mov
mov
mov
sub
repnz
cmp
and
aaa
pop
and
out
mov
sbb
or
cltd
insb
pop
addb
mov
scas
cmp
fcomip
xchg
sti
loope
test
subb
jns
or
cmpsb
inc
mov
pop
xchg
dec
push
loop
aas
add
add
inc
loope
stc
cltd
pop
adc
outsl
cmp
xchg
hlt
sub
push
sub
test
push
sub
xchg
push
pop
mov
inc
adc
lods
orb
or
movsb
pop
mov
jb
ret
jno
gs
incl
cmc
mul
call
lret
loope
repz
lods
mov
es
loope
xchg
or
jae
call
or
inc
push
fcomip
jns
dec
push
mov
lahf
stos
jns
shlb
fiaddl
adc
jbe
imul
adc
cmp
ljmp
xor
sbbl
in
cltd
test
ret
sahf
jo
cmp
mov
std
mov
aas
lret
xchg
lea
xor
pop
xchg
aaa
mov
mov
inc
xor
mov
mov
adc
jmp
adc
loopne
push
xor
fdivrl
cmp
jne
lahf
sbb
pushf
sahf
sti
push
push
cmp
pop
fistpll
mov
inc
dec
aam
mov
repz
jo
jbe
push
inc
mov
lret
jecxz
pop
mov
push
ss
ret
sub
out
es
pushf
push
sbb
loope
orb
push
mov
test
ret
cmp
mov
pop
dec
xorb
jecxz
fwait
and
mov
daa
mov
push
push
icebp
loop
mov
lock
es
shll
xchg
std
movsb
clc
mov
or
pusha
fnstenv
test
jl
or
sub
xchg
clc
das
andb
and
clc
aam
jg
subl
mov
adc
mov
cmp
xchg
imul
xor
flds
adc
and
mov
das
aam
ret
cmpsb
inc
jg
cs
sti
cmp
mov
int3
je
jno
adc
mov
sub
js
mov
dec
inc
repnz
mov
dec
pushf
sbb
lahf
repnz
xchg
int3
std
in
inc
add
dec
mov
test
divl
stc
icebp
mov
or
pop
mov
dec
fldt
mov
shll
test
jg
insl
mov
pop
jg
and
or
sub
fldenv
mov
inc
inc
xchg
inc
xor
repnz
fsubrl
sbb
xchg
dec
push
jb
jb
shl
es
sub
es
xchg
cmp
scas
in
mov
or
cltd
jbe
test
xchg
or
dec
mov
int3
inc
gs
repz
loopne
stos
test
fwait
mov
sti
jb
clc
inc
call
pusha
jl
inc
mov
in
fwait
adc
cmc
push
ret
or
dec
mov
mov
cmpsl
sbb
fadd
mov
cmc
cmp
es
iret
cltd
js
xor
jp
sbb
cmp
lds
and
nop
not
pop
mov
pop
lds
dec
adc
ret
test
stc
dec
sub
shll
jns
inc
mov
and
lcall
jne
out
fsub
and
cmp
movsl
aam
rcrl
in
ja
out
lahf
push
and
xchg
sub
dec
lock
mov
imulb
mov
stc
and
leave
daa
xor
add
push
movsl
mov
push
fs
fcoml
jo
pop
divl
daa
push
nop
std
test
jnp
lock
stos
imul
xchg
subl
mov
in
push
dec
scas
push
mov
arpl
es
xchg
xchg
adc
pslld
imul
cmp
mov
xor
xchg
mov
fisubl
xchg
imul
jl
cmp
imul
sbb
addr16
adc
call
xor
insb
mov
dec
fisttpl
daa
cmp
push
inc
jge
rcrl
movsb
mov
or
jae
repz
movsl
mov
mov
popa
adc
lahf
out
pop
in
sti
je
push
dec
es
lock
push
into
pop
mov
lods
or
pop
inc
inc
cmp
sahf
add
add
pop
pop
cltd
push
xchg
repnz
subb
fsubs
dec
mov
cwtl
fcmovb
mov
xor
scas
cmp
rcll
ljmp
jae
add
out
ret
lret
pop
lret
cs
push
and
stos
in
jmp
mov
pop
push
pop
loop
mov
test
cwtl
lcall
sbb
sahf
shl
clc
nop
jnp
fisubs
clc
hlt
test
dec
and
or
pop
data16
mov
or
orl
dec
jnp
call
imul
jno
sbb
xor
cmp
or
dec
fs
jne
or
aas
inc
push
int3
repz
aaa
mov
xchg
sub
or
sti
test
insb
jl
jge
pop
test
pop
mov
fs
hlt
or
adc
nop
inc
cmp
sub
cmpsl
push
test
and
and
mov
push
jmp
lods
jp
mov
clc
mov
addr16
call
ds
mov
je
fs
xchg
adc
push
ljmp
cmp
inc
jns
dec
cli
cmp
cmp
fwait
or
addr16
rolb
xchg
int3
fs
push
sbb
mov
sub
add
mov
xor
adc
or
lock
push
jbe
insl
mov
sbb
jecxz
adc
and
fisubs
jle
or
adc
outsb
jns
mov
add
imul
mull
hlt
xchg
mov
ffree
push
push
or
inc
divl
xchg
fbstp
mov
divb
sarb
mull
dec
dec
stc
loopne
pop
push
mov
cmp
xchg
mov
outsb
lret
pop
jnp
mov
aas
cld
inc
or
test
loopne
mov
fcmovne
pop
arpl
push
popa
mov
xlat
jbe
fidivrs
fstp
sahf
pop
add
call
lahf
hlt
inc
push
jg
mov
mov
xlat
js
lods
cli
add
inc
cmp
out
nop
mov
icebp
mov
add
mov
inc
fbld
sti
xchg
jge
loopne
ss
push
call
das
dec
imul
ficompl
sub
addr16
aas
mov
dec
test
mov
and
sbb
cs
adc
sub
jb
mov
ja
mov
jbe
push
push
add
cwtl
or
inc
incb
outsl
jmp
xlat
mov
std
sarb
call
or
inc
in
outsl
jns
les
or
divl
xchg
daa
pop
aaa
jl
push
push
daa
xchg
lods
cmp
sahf
mov
cmp
movsb
cli
imul
or
adc
popf
add
push
daa
test
jecxz
xor
adc
mov
mov
jge
pop
les
es
popa
movsl
inc
addr16
mov
repz
dec
movsl
test
lods
fiaddl
fcmovu
pop
pop
push
push
pushl
mov
add
out
out
mov
loope
add
xchg
scas
in
inc
ret
inc
xor
aam
pop
lret
jmp
inc
insb
ljmp
sbb
xchg
popl
inc
lahf
test
xor
mov
pushf
mov
mov
sub
int
mov
jg
jb
movsb
and
jg
pop
lea
jo
cmpsl
pop
inc
jnp
jecxz
jle
aas
and
jbe
jmp
popa
loope
je
popf
and
es
shlb
inc
shrb
adc
cmp
notb
shll
sub
aam
sub
dec
dec
pop
je
lret
and
lds
inc
inc
pusha
jno
test
movb
lods
leave
stc
cmp
fstsw
stc
cltd
pop
mov
pop
nopl
cmp
or
movsl
lcall
jb
jnp
xchg
in
repnz
ljmp
xchg
ss
or
es
sub
dec
repz
mov
cmp
pop
and
inc
mov
ficoms
loope
inc
push
inc
cltd
lret
fcmovb
pusha
loope
sarb
mov
es
push
addr16
std
jns
sub
jo
leave
push
add
int
mov
xlat
mov
push
pop
jle
pop
push
test
add
ljmp
adc
ljmp
or
enter
scas
call
iret
inc
sub
out
addr16
je
add
push
sbb
repz
iret
loopne
test
daa
mov
mov
fists
pushf
movsl
jne
xorb
push
cld
sbb
jnp
cli
xor
sub
dec
stos
jp
cltd
inc
jno
imul
out
and
repz
out
jp
jle
sbb
scas
and
pop
movsb
fstpt
inc
ret
das
jns
leave
adc
cmp
decl
hlt
aas
jl
push
daa
cmp
dec
int
sbb
add
outsl
jle
mov
sbbb
mov
cmpsb
ret
xchg
test
cs
ss
dec
fdivl
shl
arpl
inc
mov
push
push
fistpl
scas
out
or
je
lret
aad
js
push
jne
and
add
mov
movsl
mov
mov
mov
add
nop
cli
push
sbb
sbb
les
stc
js
sub
mov
fwait
arpl
int
cmp
ret
cmp
push
jae
fistpl
mov
mov
xrelease
jle
and
js
fucom
imul
jo
jge
xchg
fdivrs
sbb
sbb
xor
fildll
mov
cli
stc
jmp
aaa
mov
test
push
fldcw
mov
int3
push
xor
loopne
xor
aaa
mov
int3
stc
pop
out
xlat
dec
fadds
rorl
mov
repnz
gs
dec
inc
lods
or
mov
xchg
sbb
bound
fmul
scas
mov
xchg
loop
dec
and
pop
xor
in
mov
std
sub
mov
cwtl
cmc
dec
fwait
dec
push
push
mov
jecxz
inc
mov
int
ss
cmp
cmpsl
push
call
ja
inc
orl
cmp
sub
in
mov
lea
mov
and
sbb
leave
mov
stc
scas
inc
adc
test
ficoml
xor
inc
ss
hlt
inc
xchg
std
and
push
dec
mov
loopne
pushf
mov
or
push
cmp
inc
fistpll
mov
sbb
push
addr16
int
imulb
or
sub
mov
push
push
movsb
insl
pop
add
inc
bound
mov
xor
aas
sub
push
xchg
sbb
icebp
mov
jg
pop
dec
sbb
movsl
adc
stos
mov
pop
fistpll
out
mov
adc
adcb
les
inc
outsb
jbe
scas
dec
mov
daa
sub
jno
and
cmc
incb
or
lea
cmp
or
mov
cltd
adc
imul
jle
push
out
shlb
sub
dec
test
nop
ret
dec
cmc
lcall
mov
int
push
inc
mov
sahf
outsb
test
clc
cmp
cmp
and
or
add
and
xorl
mov
lods
pop
imul
lods
inc
ret
and
jno
pop
sub
cld
jbe
mov
jle
xorl
mov
in
mov
or
mov
inc
repnz
sub
or
lret
fimuls
imul
xchg
dec
jo
repz
lahf
incl
mull
loope
push
stos
sub
sahf
pop
cmpsl
mov
subl
in
jmp
inc
stc
mov
iret
pop
lret
mov
clc
into
jae
mov
sarl
rcl
pop
mov
jge
inc
cld
outsl
lock
or
or
jle
sub
fcomps
adc
cmp
add
cmc
hlt
icebp
inc
dec
push
and
jge
jae
fisttpl
fiaddl
jne
xchg
pushf
xchg
inc
mov
xor
cmp
xchg
fwait
pushf
cwtl
int
and
add
mov
push
iret
adc
inc
mov
test
cmp
stc
and
push
movsl
jg
cltd
ja
push
icebp
jle
out
xchg
leave
add
xchg
mov
lock
mov
jno
fcomp
jb
lock
jo
mov
stos
lods
xchg
mov
lcall
movsl
xor
mov
push
out
jae
dec
repnz
pop
adc
cmp
adc
jae
mov
or
push
inc
mov
cmovae
push
in
aas
adc
inc
outsl
rcr
out
mov
ror
dec
fisubl
and
lock
sub
mov
test
pop
in
adc
inc
cwtl
outsb
loop
mov
pand
cmp
xchg
add
sahf
sarl
ljmp
add
mov
lods
andl
call
sub
mov
leave
push
scas
and
inc
mov
loopne
and
sbb
jg
mov
mov
xchg
mov
call
push
sbb
scas
call
lahf
inc
pop
test
mov
pop
sub
aam
inc
pop
or
xor
lret
aas
enter
nop
sbb
pushw
xor
lods
mov
jmp
outsl
mov
mov
pusha
out
add
in
subb
daa
mov
push
or
rcll
test
add
sub
push
lcall
loopne
test
ficompl
test
mov
test
pushf
in
daa
sbb
or
cwtl
jae
test
add
pusha
cmp
xchg
repnz
fldl
aaa
mov
xchg
test
dec
ret
jge
jb
cmp
mov
neg
xchg
mov
pop
and
or
sub
dec
dec
std
icebp
stos
pop
das
shlb
rolb
sub
fsubrp
xchg
clc
lock
ds
mov
js
and
loopne
jb
fstl
in
sub
int
out
stos
js
mov
dec
leave
sbb
pop
iret
popl
pop
cmp
repnz
movsl
iret
cmpsl
fsubr
lret
pop
inc
adc
pop
fldcw
mov
out
into
popf
pop
dec
imul
cmp
cmp
cmc
mull
cmpl
je
sbb
sbb
aad
adc
sub
lret
lods
mov
mov
lea
jns
scas
pushf
xchg
lret
jo
xorb
inc
mov
out
cmp
mov
cmp
and
mov
or
movsl
pop
inc
adc
pop
lock
rcl
cmp
adc
call
aam
mov
imul
jb
pop
adc
add
sub
scas
loopne
lcall
jecxz
fsubp
xchg
aas
decl
pop
mov
imul
and
stc
cltd
fisttpll
xchg
imul
repz
dec
inc
test
icebp
adc
imul
or
xor
adc
add
in
add
inc
leave
jp
or
mov
std
test
popf
sbb
xlat
andl
pop
out
fwait
leave
cwtl
adc
or
and
mov
not
jl
adc
icebp
gs
test
test
cmp
xor
jno
pop
or
bound
push
cs
mull
scas
in
push
pop
add
mov
push
sub
pcmpgtd
lods
mov
xchg
mov
out
in
mov
and
stc
enter
push
shlb
xor
push
jge
xchg
addb
sub
mov
push
ljmp
mov
or
roll
ficomps
dec
shlb
dec
jb
ret
test
cs
sub
mov
push
and
stos
xchg
or
or
pushf
inc
or
push
lret
cmp
ret
fucomip
out
or
or
les
push
ret
sbb
bound
pushf
mov
and
add
or
mov
xchg
pop
aad
cmpsb
jb
pushf
hlt
xlat
adc
sar
cmp
lret
xchg
inc
sbb
cmpsb
jnp
jns
aas
mov
test
insb
inc
sahf
jmp
loope
in
cs
push
xor
lahf
sbb
hlt
cmp
in
addl
scas
cmp
cmp
and
andb
or
outsl
xor
sub
jns
mov
mov
add
sbb
sub
in
lcall
mov
and
sbb
push
dec
push
mov
in
fucomip
cmpsb
loop
popf
cmpl
add
sub
xor
push
js
negl
xchg
shlb
ficompl
xchg
popf
aam
movsb
cmp
jmp
in
push
and
jnp
stos
xchg
xlat
pop
cmc
push
jecxz
mov
xor
and
pop
push
pop
aad
dec
std
inc
jl
sub
sub
cmp
shrb
pop
mov
pop
stc
jg
xlat
push
mov
mov
mov
inc
mov
sub
push
in
pop
sub
cmp
fwait
pop
lock
loopne
push
or
pushf
popa
push
js
test
xlat
jno
out
mov
mov
icebp
push
push
dec
pop
test
int3
repnz
dec
rclb
xchg
xorb
pop
jno
push
fcompl
mov
loope
and
cmp
jp
push
cmp
loope
loope
or
test
dec
iret
mov
jae
daa
insb
inc
dec
lret
jne
jmp
jp
pushf
or
and
dec
or
popaw
pop
insl
xchg
sti
push
test
sti
out
jg
sub
mov
sbb
xlat
pop
add
nop
cmp
dec
mov
lds
sbb
out
andb
test
sub
push
fsubs
in
sub
cld
icebp
scas
jg
hlt
jo
add
loopne
ret
lock
or
push
xor
sub
cltd
cmp
pop
jmp
adc
add
out
insb
movsb
loopne
push
and
popl
out
ljmp
movsl
ret
repnz
outsl
fucomp
pop
rcrl
xor
push
mov
aam
jns
stc
push
into
inc
sbb
fildll
mov
loop
movsl
push
insb
and
jp
adc
push
lahf
push
dec
or
mov
pop
mov
xor
imul
lods
jns
jbe
js
icebp
jge
mov
adc
cli
daa
fstpl
movsl
fmulp
pop
loope
push
pop
jnp
push
fnsave
leave
inc
jmp
pop
stc
pop
fsubs
lret
les
push
stc
xor
pop
je
jg
or
dec
in
pop
pop
sub
mov
sbb
and
push
je
adc
mov
clc
gs
ret
repnz
and
add
mov
repnz
push
cmp
fs
and
shrb
jno
xchg
insb
ret
xchg
ds
mov
adc
cwtl
mull
push
and
arpl
enter
xchg
dec
or
pusha
pop
cld
and
or
aaa
pop
je
stos
and
jg
lret
lcall
cltd
push
pop
or
scas
add
mov
insb
insl
xor
or
mov
lods
scas
int
fidivs
rolb
xchg
jmp
stos
inc
cs
roll
fucomip
sahf
and
cmpsb
pop
sbb
fldenv
loop
xor
ljmp
sub
add
mulb
and
fistps
jmp
shl
std
xchg
adc
std
test
push
sbb
loope
jl
fistpll
std
imul
js
gs
jle
mov
pusha
pop
outsb
push
clc
pop
sub
aas
loop
fwait
idiv
rcll
int
je
mov
mov
cmp
pop
jo
js
cs
sbb
cwtl
jnp
adcl
out
out
das
mov
add
and
add
xchg
test
setle
pop
mov
jnp
mov
dec
inc
jmp
dec
adc
out
sbb
adc
loop
rcrb
adc
dec
aas
je
mov
lock
pop
inc
mov
push
outsl
and
push
jbe
adc
pop
clc
xchg
bound
pop
cmc
dec
test
sahf
xlat
cmpsl
pop
test
sbb
mov
xor
les
adc
imul
popa
imul
push
push
mov
and
or
cmpsb
ficomps
subb
pop
inc
or
bound
mov
out
std
jns
je
sub
in
ljmp
outsl
sbb
push
jne
fldcw
nop
add
adc
sub
inc
xchg
ljmp
adc
outsl
push
dec
sub
xor
movsl
cmpsl
into
sar
mov
repnz
arpl
mov
and
ss
sub
lret
hlt
leave
fadds
dec
inc
movsb
add
icebp
stos
arpl
inc
inc
lea
insl
or
mov
addl
jmp
mov
or
sub
pop
loope
mov
in
xchg
inc
sub
pop
ja
std
loope
popf
sub
or
mov
xor
jnp
xchg
jns
sub
mov
xlat
xlat
push
aad
sti
out
scas
fidivs
xchg
fbld
insl
mov
cltd
jl
loopw
adc
sbb
repz
insb
jp
jns
xor
test
mov
in
insb
hlt
mov
push
mov
pop
mov
aad
int3
jne
cmpsb
insl
push
push
jno
in
dec
push
cmp
push
dec
pushf
call
pop
andl
mov
mov
mov
stos
or
lods
mov
add
push
lret
jp
jmp
fisubs
je
inc
das
mov
xlat
sbb
sbb
adc
shll
pop
addr16
sub
mov
dec
jg
loop
mov
push
pop
xor
enter
pop
push
cwtl
jl
in
aas
divb
pop
icebp
dec
add
mov
mov
jae
sub
in
adc
sub
xchg
mov
mov
fldcw
sbb
sbb
out
jle
pusha
fiaddl
ret
xchg
sarb
es
mov
pop
enter
pop
cmc
stos
das
std
mov
mov
into
mov
movsb
dec
fiadds
mov
into
jbe
sarb
xchg
sti
cmp
jbe
xor
add
lds
shll
or
add
dec
pop
mov
inc
dec
xor
in
popa
clc
inc
or
add
jg
sarl
js
jne
inc
cmp
jb
ret
lods
cmp
mov
call
ja
mov
mov
dec
cld
shlb
aam
in
jb
xorl
xchg
mov
pop
pop
pop
jge
push
inc
or
push
pop
adc
mov
lea
mulb
push
popa
jns
shl
stos
mov
lods
push
dec
into
jne
cltd
jns
fbstp
or
xor
lahf
ja
imul
ss
jo
shlb
cld
add
xchg
pop
ss
sete
int3
pop
ret
pop
inc
scas
push
aas
mov
mov
fisttps
pushf
fdivl
mov
adc
les
jne
and
inc
cwtl
dec
lods
push
iret
ss
sub
aas
xchg
xlat
scas
jo
mov
mov
arpl
inc
and
lods
mov
or
inc
scas
mov
repz
mov
icebp
in
lock
movb
push
iret
dec
and
repnz
lods
cwtl
out
xchg
sarl
pushf
cmp
das
and
push
outsb
cmc
iret
xor
or
jp
mov
sti
push
cmp
in
cmpsl
adc
in
sbb
or
push
dec
push
lds
std
add
dec
push
sbbb
push
adc
cs
push
imul
loopne,pt
cmpsl
or
jmp
iret
lea
xchg
pushl
push
into
es
fadds
cmp
and
push
fstps
mov
xchg
jae
xchg
shl
movb
out
ror
pushf
inc
out
mov
jl
je
push
inc
jb
mov
dec
jp
mov
pop
adc
bound
pop
fnstenv
sbb
enter
out
cld
push
jl
jns
in
sbb
pushf
push
out
cwtl
mov
mov
jb
xor
pop
mov
dec
sub
inc
fwait
add
xor
ds
pop
cmp
pop
adc
ficoms
bound
into
push
int3
cli
test
aam
dec
dec
xor
pusha
sbb
ret
lock
mov
mov
adc
les
jb
and
test
bound
mov
std
dec
mov
test
ficoms
or
cwtl
mov
push
iret
inc
jae
and
loopne
pushf
and
notl
ljmp
dec
ja
sbb
pop
stc
dec
test
outsb
add
dec
aas
cmp
sti
fisubl
pop
sti
inc
outsb
pop
popf
sub
shll
nop
lds
and
jo
jl
jecxz
fistpll
lods
mov
fcmovnu
pop
xchg
addb
dec
clc
and
sbb
cwtl
dec
add
mov
into
fwait
push
aaa
and
or
jo
xchg
lret
pop
ljmp
mov
ret
pop
sbb
push
inc
push
jmp
aam
cltd
pop
sub
mov
and
jno
mov
cli
rorl
xor
xchg
cmpsb
cmc
das
cmp
jmp
into
cs
xor
jo
mov
popa
dec
stc
addl
mov
mov
repz
sbb
dec
jmp
insb
xchg
xchg
iret
bnd
js
cmp
fsubs
push
and
lods
mov
insl
pop
lahf
dec
xor
cmp
lds
ljmp
dec
cmp
leave
test
xlat
mov
mov
test
hlt
xor
pop
stos
fsubl
add
push
xor
movsl
cwtl
push
aaa
jg
sub
inc
out
add
adc
fsubrs
jl
inc
sbb
push
adc
cltd
xchg
sub
mov
xchg
sub
mov
ljmp
in
in
xor
cs
aaa
sub
mov
int3
dec
jmp
pushf
add
dec
stos
push
stc
xor
loope
daa
sahf
jns
lds
mov
arpl
test
cmp
in
or
mov
shl
in
mov
xchg
pusha
and
pop
aam
mov
mov
int
mov
fcoml
into
pop
leave
and
fmul
push
and
dec
mov
adc
jae
into
movb
push
jbe
cmp
pusha
jecxz
out
sahf
xchg
wbinvd
xchg
pop
xchg
inc
mov
pop
xor
add
mov
cmp
rorl
test
rol
lock
sub
mov
int3
jmp
push
push
pop
jge
aas
add
cli
shl
sub
pop
mov
mov
inc
inc
daa
pusha
jno
xchg
xchg
pushf
push
dec
jae
push
and
xchg
mov
push
mov
cli
xchg
addb
imul
sbb
mov
jle
hlt
xor
stos
clc
mov
mov
sub
adc
sarl
std
stos
shrl
mov
dec
inc
mov
popl
jp
ljmp
inc
je
js
push
lret
bound
mov
sub
aad
mov
or
push
stc
pop
mov
add
movsl
mov
in
xor
xor
addb
pop
push
push
mov
adc
mov
dec
ljmp
pop
shll
cli
jns
dec
lcall
fbstp
jno
push
xor
cmp
inc
addr16
daa
mov
pop
pop
mov
bound
push
push
add
mov
es
and
push
cwtl
movsb
int3
dec
loopne
xchg
fwait
push
rcr
adc
mov
in
add
shlb
aam
xchg
xchg
fs
sbb
mov
xorl
repnz
fwait
js
jmp
movsl
push
orl
pop
stos
pop
jo
cmp
aam
out
rcr
xchg
inc
js
iret
sbb
mov
sbbl
test
xlat
push
test
popa
stos
mov
cmp
push
mov
sub
pusha
mov
xchg
and
jno
pop
jne
stos
pop
out
add
scas
std
add
sub
and
add
movsb
loopne
sbb
jmp
imul
jbe
sbb
inc
les
stc
dec
pop
fnstenv
dec
or
xchg
dec
out
mov
lods
add
or
das
faddl
sub
cmp
sahf
jmp
mov
dec
pop
pop
sar
mov
fidivs
add
addr16
bound
jmp
test
gs
dec
jo
sub
inc
push
orl
sub
xchg
mov
jno
pop
push
mov
and
mov
pop
nop
outsb
stos
and
pusha
movl
adc
add
xor
sarb
outsb
xlat
or
or
outsl
push
movb
jns
fsubrs
pop
sub
int3
add
cwtl
test
and
mov
xchg
pushf
pop
push
push
fisttpl
push
dec
shll
pop
outsl
add
lret
fistps
pop
add
stos
jge
jge
or
out
ss
cmp
fcoms
adc
lods
subl
aam
mov
movl
cltd
sbb
ret
pop
idivl
mov
lea
pusha
pop
enter
clc
mov
inc
mov
jl
out
xchg
lret
sahf
stos
jp
test
sahf
mov
adc
incb
and
int3
pop
cmc
dec
dec
scas
lea
lds
and
cmpsb
sub
out
adc
fadds
shlb
pushf
ds
mov
cld
in
lret
scas
std
aaa
add
push
cmp
mov
test
xor
jle
mov
push
shrb
movsl
and
dec
les
rclb
imul
mov
mov
loop,pn
mov
shrl
adc
mov
sar
je
and
jg
loopne
dec
xchg
aam
dec
pop
add
add
pop
nop
stc
outsl
shlb
adc
xchg
push
push
mov
jno
adc
mov
out
dec
lret
mov
cbtw
adc
xlat
lods
scas
loop
aaa
ret
and
sub
clc
mov
out
stos
test
out
jns
sub
test
sub
dec
adc
aaa
push
iret
stc
jg
cmp
xchg
jg
inc
xor
dec
int3
mov
add
jne
ret
iret
fmuls
mov
cwtl
mov
xor
sysret
xchg
shlb
shrd
enter
push
fstl
cli
call
addr16
mov
cltd
dec
pop
add
sbb
rorl
push
inc
mov
cld
adc
in
cmc
xor
push
cltd
aaa
imul
bound
adc
mov
mov
sub
aas
or
push
push
sub
ljmp
sub
pop
sbb
adc
insl
push
jbe
fisubrs
jnp
and
mov
add
aaa
cmp
push
jbe
and
cmp
ror
adc
sbb
cmp
movsb
outsb
vmovntpd
cli
sbb
jmp
adc
pop
jne
fisttps
sub
adc
push
movsl
mov
ja
cwtl
shll
outsb
jge
dec
test
mov
test
mov
mov
ficoms
int
out
xchg
adc
pusha
mov
add
dec
mov
adcl
popa
mov
xor
mov
gs
les
cmpsl
jo
shlb
sbb
aaa
inc
adc
inc
mov
mov
xchg
xor
and
jne
xchg
decb
cld
outsl
adc
gs
inc
xor
xchg
add
adc
lret
lret
notb
pop
pop
push
push
or
ret
inc
jo
sbb
xor
icebp
push
xchg
out
inc
mov
mov
cmp
loope
pop
jle
nop
add
dec
dec
jnp
add
test
aas
jae
or
andb
call
cmpsl
orb
lret
add
fucomip
xor
sahf
jp
es
jmp
leave
jo
cmc
inc
es
adc
lds
iret
xor
jecxz
aam
dec
xchg
xchg
inc
sbbl
fs
jne
scas
outsb
stos
push
iret
into
lret
inc
testb
cmpb
pushl
or
mov
pushf
stos
iret
ret
adc
sub
rcrb
mov
fsubs
scas
cmp
add
test
push
cmp
loop
cmpb
or
bound
repnz
push
adc
adc
mulb
or
mov
imul
loop
jecxz
push
movsb
mov
out
leave
mov
iret
in
je
mov
mov
aam
test
pop
mov
and
sub
cmp
leave
dec
je
dec
in
out
addr16
arpl
insl
fcom
insb
inc
jnp
cmp
or
xadd
push
push
dec
jp
sbb
xor
cmp
or
cwtl
xchg
cmc
sbb
xchg
sarb
mov
ljmp
rcl
pop
in
shll
mov
mov
ljmp
jmp
xor
jo
rcll
in
inc
inc
stos
dec
icebp
xchg
xor
insb
mov
sbb
jecxz
mov
and
or
aas
jbe,pn
ffree
sbb
cmp
int
xchg
pop
push
cli
hlt
mov
in
sub
ficompl
mov
divb
sti
test
aaa
mov
std
push
jns
rol
inc
sub
scas
les
stos
xchg
out
inc
jecxz
ret
std
pop
sub
lods
aad
fisubs
stc
jo
cld
push
clc
or
popf
cmpsb
out
fsubl
pop
hlt
out
inc
mov
adcb
or
aad
xor
dec
mov
cltd
pushf
fwait
imul
int3
pusha
and
xchg
test
mov
shl
mov
mov
adc
pop
mov
lods
mov
loop
fidivs
lds
divl
push
mov
ficoms
aam
push
movsl
mov
adc
sub
ret
mov
mov
sbb
xor
inc
xlat
adc
pop
jg
add
inc
lods
stos
lret
xor
xchg
cld
sbb
dec
push
testl
inc
push
fdivrp
or
xor
pop
popl
lahf
mov
or
adc
dec
in
scas
popf
cmp
jae
cmp
fmulp
aaa
or
clc
movsb
je
test
sbbb
jg
lret
dec
not
fs
cld
jle
cltd
int3
mov
mov
cmpsl
mov
loop
adc
add
jb
decl
mov
imul
push
stc
dec
xchg
lock
jg
adc
cmp
mov
mov
outsl
mov
in
jbe
out
into
or
sbb
cmc
xchg
insl
inc
jge
sti
cmp
or
in
sbb
in
int3
testl
test
mov
xor
inc
mov
pop
jp
mov
inc
jns
in
leave
int
inc
mov
aad
jl
mov
in
int
js
bound
jns
rcl
mov
inc
mov
mov
out
adc
repnz
cmpsb
fstl
scas
xchg
stos
cld
enter
stos
je
xchg
test
push
dec
push
test
lods
mov
and
dec
or
pop
fwait
aad
pushf
outsl
cmpsb
ret
push
pop
mov
lret
sub
adc
mov
inc
inc
cwtl
outsl
mov
xchg
jbe
mov
and
clc
xchg
ljmpw
cmp
popf
sub
xor
daa
pop
test
loope
call
mov
sbb
ret
mov
or
jns
push
dec
popa
adc
out
sbb
fs
into
imul
sub
out
insl
outsb
addr16
pop
clc
test
push
repz
mov
lods
xchg
stos
jp
imul
outsl
add
addr16
insl
int3
mov
push
or
cmp
mov
popf
loop
fstpl
shlb
mov
lock
jbe
jmp
notl
sbbl
push
orl
lds
adc
cwtl
sahf
mov
mov
mov
add
mov
js
dec
nop
rolb
lods
pop
add
test
imul
cwtl
out
aam
mov
int
xchg
dec
filds
jb
imulb
and
nop
dec
popf
fsubrl
sbb
push
dec
sbb
or
iret
mov
ljmp
js
hlt
loop
aad
cld
inc
pop
ret
insl
andb
sar
addr16
mov
ret
sub
lds
cmp
mov
xchg
cld
data16
adc
xlat
ds
pushf
icebp
mov
movsl
push
mov
in
enter
pop
xor
jp
icebp
dec
xchg
popf
and
mull
mov
std
jge
sbb
inc
xchg
cltd
mov
test
sbb
scas
xlat
or
roll
sub
fdivrl
nop
subl
sbb
sbbl
pop
insb
cmpb
fmul
adc
jbe
jle
add
sbb
insl
mov
mov
fiaddl
cs
and
mov
in
enter
push
mov
cmpsl
enter
mov
addr16
xchg
inc
jp
mov
add
gs
lock
int
call
addb
sbb
scas
lahf
sahf
repz
dec
sbb
mov
andb
pop
mov
sbb
mov
pop
pop
and
xchg
das
adc
icebp
gs
or
xchg
adc
push
xchg
xor
ret
add
xchg
xchg
add
pop
stc
mov
lcall
dec
in
fisubs
pusha
aas
popf
gs
mov
cmp
cmp
enter
mov
leave
jl
pop
xor
inc
loope
cmpl
pop
xchg
ds
imul
in
jmp
xchg
ljmp
imull
jecxz
das
adc
and
mov
inc
es
in
mov
mov
lahf
call
dec
cmp
sub
lcall
and
into
rep
fdivs
sbb
int3
fcoms
data16
and
fabs
mov
push
mov
add
jl
fidivs
fldt
jb,pn
and
call
ljmp
ret
sbb
nop
lds
mov
jg
lods
stc
xchg
sub
push
cltd
mov
add
movsl
adc
out
dec
cmp
push
scas
xchg
xor
repnz
out
mov
sub
jo
ret
mov
adc
popa
pusha
sbb
sbb
xchg
dec
popl
insl
xor
ja
arpl
notb
mov
insb
fisubrs
add
int3
subb
ret
inc
hlt
loop
jge
sar
push
jmp
fdivrs
addr16
jns
dec
test
aas
insb
adc
push
fbld
pop
stos
nop
cs
mov
popf
stos
lea
cmpsb
mov
dec
int
or
loopne
push
jp
inc
ret
and
pop
pusha
xchg
push
add
je
adcb
sarl
je
jg
cltd
pushf
add
lds
jae
test
ds
mov
and
lods
roll
sub
xor
sbb
adc
movsb
test
xor
dec
mov
fdivrl
ja
je
xchg
and
xchg
sbb
div
push
insl
out
jns
std
add
adc
inc
daa
jg
fidivl
and
mov
cmp
push
ds
mov
loop
pop
xchg
sbb
jbe
out
rorb
ss
sbbb
movsl
ret
adc
mov
add
out
xorb
cld
frstor
sbbl
cmp
jle
lcall
sub
shll
enter
ret
xor
push
xor
inc
into
scas
test
sub
or
adc
divl
sbb
mov
nop
or
mov
aam
stc
add
sub
push
loope
imul
jp
filds
and
jno
mov
aaa
mov
movsl
movsb
inc
sub
daa
xchg
ja
push
popf
jle
sub
lds
xchg
ret
mov
in
xor
aas
cmp
xor
in
xor
mov
add
push
int3
mov
xchg
add
add
aas
popf
stc
fmull
jmp
xor
fwait
or
fs
xor
push
rcll
push
adc
mov
idiv
xchg
push
out
fdivrp
xor
aam
push
or
or
and
pop
mov
adc
adc
add
ficoml
dec
add
or
inc
icebp
push
pop
mov
xor
mov
cs
push
mov
add
ja
push
mov
and
xchg
int3
jmp
fs
scas
out
mov
and
out
pop
inc
jl
inc
enter
ljmp
std
ret
fstpl
adc
es
jmp
loope
int3
push
and
mov
push
adc
std
ss
bound
inc
lea
adc
push
xchg
roll
xor
cmp
fmulp
or
inc
loope
fldt
and
loope
or
loopne
jle
push
jmp
adc
mov
or
in
xchg
fwait
stos
dec
mov
pop
pop
and
jo
imul
std
js
pop
sub
rclb
hlt
pop
outsb
in
stc
iret
ja
int3
mov
outsl
jnp
imul
lahf
pop
cmpsl
xchg
in
popf
cmpsb
mov
cs
mov
dec
ficoml
lcall
fimull
cmp
and
js
push
cmp
addr16
lock
movsl
scas
cmp
mov
add
fisttpl
push
xor
lret
xchg
push
std
add
out
mov
stos
add
push
ja
inc
test
fisttpll
fdivrs
jl
cld
mov
nop
xor
mov
fmul
adc
jne
fcoms
outsl
cmp
insl
out
mov
mov
mov
push
bound
mov
push
or
mov
pop
jl
sub
cmc
or
stos
in
inc
test
jbe
and
jbe
mov
cmpsb
sub
popl
push
lods
in
stc
push
subl
pop
pop
mov
pop
and
cli
pop
push
hlt
push
movsb
push
jle
sti
lcall
sub
test
and
mov
jmp
rcl
cmpl
js
das
out
pop
xlat
call
mov
imul
jmp
adc
test
add
add
imul
aam
push
xchg
mov
es
divl
sub
popf
loopne
mov
xor
add
mov
cwtl
jecxz
xchg
push
add
jbe
mov
enter
pop
xorl
cmp
movsb
insb
outsl
out
ret
pop
mov
lcall
xorl
sub
xor
xor
repz
rcll
mov
dec
mov
and
lods
cld
mov
mov
imulb
aas
mov
fcoml
inc
inc
lahf
or
mov
push
das
sub
ja
mov
fimull
and
clc
movb
subb
mov
pop
lock
mov
mov
jmp
cmpsl
imul
hlt
push
loopne
add
int3
fadds
cwtl
pop
xchg
movsb
mov
fcmovnbe
push
add
popa
inc
sub
int3
pop
inc
sbb
ja
xchg
lcall
stc
lea
stc
pop
negl
imul
mov
pop
cmc
xchg
in
push
inc
int3
data16
jl
cwtl
in
mov
sub
mov
sub
sub
test
mov
shlb
sub
xor
jg
fcomip
add
sbb
gs
fstps
hlt
jge
xchg
jnp
int
divb
cli
jnp
lods
and
pop
jmp
and
cmpb
loope
pop
adc
insb
js
mov
jno
out
xchg
xchg
fstl
test
int
sbb
roll
cld
popf
jmp
lret
dec
xchg
mov
rolb
fdecstp
or
jno
leave
stos
inc
adc
mov
mov
cltd
add
or
rorl
cmpsl
insb
cs
mov
mov
iret
xchg
mov
in
or
mov
pushf
mov
sbb
mov
daa
jbe
push
xchg
inc
insl
std
mov
adc
push
adc
clc
add
int
pop
cld
mov
pop
mov
pop
xor
cmp
adcl
pusha
dec
push
pop
mov
rclb
pop
imul
fidivrs
inc
xchg
pop
sbb
jp
pusha
inc
and
mov
add
add
xor
xchg
dec
add
daa
mov
pop
mov
pop
out
icebp
test
stc
push
fs
ja
repnz
cmp
idiv
jecxz
mov
out
addr16
inc
pop
sbb
adc
inc
cld
pusha
test
jae
xchg
enter
fs
xor
in
sub
leave
dec
cmpsl
sub
sub
cwtl
sbb
lcall
mov
sbb
and
xchg
push
jg
std
insb
add
inc
adcl
int3
pop
aad
movsb
test
mov
xchg
mov
into
sbb
std
mov
adc
pop
dec
lods
jp
sahf
xor
cmpsb
cmp
pop
sbb
jmp
xchg
je
das
jp
repnz
adc
sti
mov
jg
aam
sbb
in
ljmp
lret
out
mov
jnp
xchg
pop
push
mov
sarb
xor
xor
int
push
fs
fbld
ja
in
test
mov
inc
and
out
sbb
sub
mov
mov
orl
in
in
lret
out
inc
pusha
mov
mov
xor
adc
mov
and
xchg
jle
andb
pop
lret
cmp
push
in
lcall
insl
outsl
fstpl
iret
data16
push
outsl
sub
clc
cltd
inc
lds
inc
shll
addb
pop
push
pop
cmpsl
loope
cltd
fnstenv
lahf
push
daa
sbb
cli
mov
xchg
outsl
bound
lock
fmull
pop
cmp
adc
repnz
mov
test
clc
shll
xchg
jno
out
sbb
mov
mov
pop
dec
out
jg
test
xchg
mov
enter
out
roll
jns
out
mov
dec
js
jb
add
dec
adc
popa
dec
cmp
movsl
xor
mov
xlat
into
push
js
lret
jnp
and
mov
pop
gs
mov
jno
pop
hlt
sbb
mull
cmp
int3
loop
xor
incb
rcrb
jg
adcb
movsb
or
xor
push
rcrl
adc
pop
xchg
aas
pop
inc
les
leave
mov
push
mov
sbb
pop
aam
jae
sub
movsb
stos
fimuls
xchg
push
or
lds
fcmove
aaa
jmp
int
push
loope
shll
ljmp
xor
push
leave
lods
loope
xchg
fisubrl
sar
adc
push
xor
or
inc
jne
cmp
lods
cmp
dec
or
dec
js
pop
pop
outsl
sub
and
scas
mov
test
aam
sbb
sbb
sbb
pop
pop
leave
popa
cmp
pusha
pop
ret
pop
mov
les
and
rcrl
loop
imul
test
sbbl
loope
xor
inc
jnp
dec
push
adc
cwtl
mov
jo
mov
mov
jl
add
mov
adc
icebp
push
push
aas
subb
test
repnz
in
mov
lods
insl
dec
dec
aaa
shlb
out
lret
out
push
or
sub
js
movsl
push
xchg
push
jle
aam
adc
lds
out
mov
push
cmpsb
pusha
xchg
or
std
inc
push
mov
jmp
push
sbb
popf
xchg
fstpl
lock
int
test
pushf
arpl
and
and
sub
ljmpw
mov
adc
pop
sbb
jg
movsb
mov
or
mov
cmp
into
mov
sub
popa
das
clc
aaa
clc
inc
pop
push
ds
rcl
cmp
into
repz
inc
lea
cmp
inc
mov
lock
mov
aas
imul
lahf
jle
or
and
push
sub
sarb
pop
icebp
int
adc
aaa
and
mov
jmp
inc
jp
shlb
test
stos
xor
icebp
imul
add
ret
imul
test
std
imul
fwait
xchg
flds
pop
repnz
pop
adc
loopne
push
mov
pop
jae
xchg
sbb
sub
aaa
daa
fisubl
push
xlat
fnstenv
add
fs
pushf
cmp
insb
mov
jne
dec
jl
push
mov
shll
push
adcb
rclb
das
push
fisubl
lea
jbe
fnstcw
xchg
roll
fwait
test
xchg
push
adc
push
add
sub
push
mov
data16
or
pushf
add
jne
cs
add
inc
push
repnz
mov
or
out
xor
les
in
xorb
mov
call
mov
divb
jbe
pop
jmp
mov
leave
xor
adc
inc
lods
imul
arpl
rcrb
push
fidivs
mov
aad
xor
repz
decl
adc
call
xor
xchg
xor
sbb
imulb
jmp
pushf
mov
mov
pop
out
cld
mov
in
cli
xor
push
imul
adc
xor
mov
mov
mov
in
arpl
ljmp
test
mov
dec
clc
mov
idivl
repnz
enter
pop
cmp
test
mov
push
repnz
cmpl
lods
int3
mov
loop
imul
push
ret
adc
enter
out
mov
xor
push
int
adc
daa
aaa
cmp
dec
xor
jns
push
inc
sub
or
jnp
jb
jle
mov
inc
outsl
into
push
pop
orl
jecxz
fldt
rcl
add
test
in
fbstp
and
xchg
cmp
xchg
gs
fs
sub
adc
leave
jne
push
jl
add
xchg
inc
mov
sbb
pop
or
bound
mov
push
pop
sub
sub
lods
lcall
xchg
jecxz
clc
cli
inc
inc
cld
mov
ficoml
pop
pop
das
sbb
pushf
iret
push
or
mov
into
fs
rcr
inc
jg
fmul
xchg
sahf
cltd
and
pop
cwtl
xor
or
sbb
outsl
mov
gs
sub
inc
push
mov
roll
in
stos
add
fbstp
jne
repnz
sbb
cwtl
mov
cli
pusha
gs
aas
clc
mov
addr16
cmp
inc
xor
fwait
xchg
push
push
movsb
ja
sarb
icebp
mov
aas
outsl
les
imul
mov
sub
dec
dec
test
mov
adc
addl
or
loop
pushf
xchg
xchg
mov
loope
movsl
add
and
jno
mov
xchg
inc
out
shll
pop
jp
into
out
mov
jo
inc
cmc
insb
sub
orb
sub
adc
xchg
iret
movsb
shll
fisttpl
je
cmpw
enter
aas
adc
ja
sub
add
add
out
lds
cwtl
mov
cmp
daa
shlb
out
push
fnstsw
cmp
movhps
insl
add
dec
insl
arpl
mov
adc
xor
das
js
pop
mov
lret
ja
out
flds
inc
sbb
lods
jge
pop
mov
xorl
and
fldcw
stc
mov
in
lahf
mov
subb
add
sub
sbb
fwait
mov
stos
fsts
rorb
adc
in
cmp
sbb
adc
mov
into
cld
pop
ja
or
mov
rcr
stos
pop
jmp
push
outsb
js
and
inc
dec
ja
sub
push
xchg
sub
and
sub
fs
enter
mov
sub
dec
mov
jbe
das
testl
and
pop
jp
icebp
pop
aam
xchg
cmp
xchg
inc
push
scas
push
gs
cli
sbb
mov
mov
roll
push
pop
xor
push
pop
adc
out
sahf
shl
dec
push
scas
scas
test
in
sub
jnp
push
dec
dec
and
xlat
fbld
jmp
pop
mov
inc
push
outsl
and
sub
pop
popf
ret
shr
jg
jns
loope
add
pusha
sub
pop
add
lret
mov
fimull
pop
xchg
sbb
in
js
mov
jns
mov
lock
mov
enter
inc
jmp
enter
sbbl
add
stc
cmpl
stos
es
xchg
push
loopne
lret
or
push
cmpsb
jno
pop
sub
add
sbb
clc
test
push
mov
popf
cli
pop
jno
aaa
repz
dec
push
pop
sub
vorps
sub
mov
mov
aam
lret
in
fdivr
jecxz
jne
dec
inc
push
stos
shll
outsb
inc
add
sti
call
stc
mov
fisubrl
xchg
jg
and
lcall
jns
sub
rcr
fcomip
mov
movsb
inc
jl
pop
push
mov
cmp
jle
imul
pop
mov
inc
xchg
cmp
adc
push
dec
xor
imul
imul
xchg
lods
js
add
xor
mov
xor
xchg
lahf
mov
imul
shll
filds
xor
cmp
inc
sub
ds
iret
int
shrl
jno
mov
cmp
mov
push
lret
or
pop
lahf
jmp
in
in
movsl
fs
dec
jmp
adc
repnz
enter
push
mov
es
xor
mov
arpl
out
adc
fmuls
mov
aam
dec
cmp
adc
outsb
jns
jp
dec
stos
lods
dec
incb
fldcw
push
das
sbb
cli
xchg
ret
cmp
push
pop
pop
arpl
xchg
mov
mov
test
adc
rclb
sbb
ja
inc
fistps
push
enter
sub
mov
imul
push
nop
sar
inc
push
sub
sub
fidivl
mov
jmp
nop
movsb
lret
insl
aas
pushf
inc
dec
or
pop
lcall
push
dec
fsubrl
push
mov
pusha
sbb
pop
and
imull
enter
sub
mov
ss
sbbl
mov
push
repz
or
or
mov
sbb
jmp
xchg
add
adc
movsl
push
aad
pop
and
mov
scas
xchg
jmp
ja
xchg
push
movsb
mov
inc
rcrb
push
cmp
jl
jecxz
cld
mov
in
mov
call
sbb
test
rorb
pop
mov
jmp
cmpsb
mov
push
jns
xor
test
jno
push
aam
pop
ret
je
inc
cmp
or
ret
out
popf
add
adc
jae
loope
add
clc
lret
push
lret
xchg
int3
cmp
mov
add
ret
repnz
out
mov
repnz
pop
int3
loopne
push
test
pminsw
inc
dec
xchg
stos
and
sub
and
cmp
int3
lock
push
jmp
xchg
nop
dec
add
jp
mov
xchg
adcb
sbb
jg
mov
push
push
cmp
dec
sti
pop
push
fldt
movsl
lahf
data16
inc
xchg
pop
fcmovnb
inc
jge
mov
mull
fdivrl
inc
sbb
sub
mov
dec
int3
loope
mov
into
lea
adc
and
shlb
cmpsl
pop
pop
cs
ljmp
inc
jno
sbb
jo
adc
out
das
xchg
setno
push
xchg
mov
and
sbb
push
in
lods
or
lock
jge
fcom
mov
push
gs
jl
xor
enter
fsubrs
xchg
cwtl
and
shl
insb
add
add
fnsave
push
mov
adc
and
rclb
push
out
in
jp
sti
ljmp
or
pop
dec
mov
mov
into
jg
ja
fcoms
flds
test
movsb
mov
cmc
mov
movsb
addl
sbb
cmp
jno
in
ljmp
ret
adc
and
push
daa
mov
dec
cld
xchg
xor
in
incl
lods
xchg
fbstp
ret
or
inc
push
jo
pop
push
outsb
push
pop
fsubrs
sbb
jecxz
in
sarl
mov
and
cltd
clc
add
mov
imul
xchg
fldenv
sti
adc
push
addr16
push
jmp
rol
cs
ljmp
les
test
js
mov
xchg
shr
test
repnz
mov
xchg
adc
insl
dec
mov
add
jns
sbb
push
iret
mov
mov
xor
pop
inc
lods
cmpsl
jecxz
out
or
ja
add
ds
arpl
popa
rolb
mov
mov
popf
rcl
aas
loope
mov
mov
jbe
sub
mov
mov
pop
cmc
add
fnstenvs
add
and
aam
lcall
jle
push
fwait
xor
ds
cmpsl
inc
cwtl
mov
jbe
roll
mov
xlat
out
mov
sbb
jg
push
mov
call
sub
les
test
sti
xchg
sub
fwait
dec
add
mov
stos
inc
lock
loope
lock
lock
aaa
sti
gs
idivl
imul
shl
mov
xchg
bound
je
push
test
mov
loop
imul
or
shrb
add
push
jno
mov
sub
movsb
out
fldl
xor
sbb
jbe
orl
int3
frstor
aam
dec
pop
shll
push
push
bswap
mov
insb
test
repz
jo
sbb
mov
mov
jb
xorl
in
shrl
lock
jecxz
pop
or
movsl
jns
add
sahf
pop
xchg
jo
pop
lock
fwait
in
add
sbb
fcmovnbe
inc
lds
sbb
in
pop
lds
sti
sbbb
and
enter
das
fnstenv
sbb
sub
cltd
rcl
in
fbld
imul
pop
jae
inc
mov
sbb
push
cld
push
nop
pop
sbb
mov
add
sahf
dec
dec
out
jne
inc
add
mov
mov
jl
test
cwtl
addl
and
jbe
outsl
popa
je
mov
fcomip
xchg
sar
rcll
inc
scas
dec
or
repnz
and
gs
int3
or
lds
test
and
aam
ret
and
mov
xor
pop
cld
test
sub
dec
aaa
dec
dec
sub
pop
xor
repnz
xchg
pop
stos
and
jle
add
ds
cmp
jl
adc
daa
mov
pop
fs
mov
cmpsb
adc
mov
and
fsts
cmc
xor
push
xlat
cmp
lahf
xchg
shrl
or
mov
ficompl
std
sub
sbb
or
adc
lods
lcall
jne
mov
scas
aaa
or
and
nop
mov
cs
daa
fwait
xor
mov
sahf
push
jo
pop
int
ja
cltd
mov
test
inc
popf
in
cmp
push
imul
fmull
xor
test
leave
add
fmul
int
gs
pop
and
fs
and
fdivrs
mov
aaa
or
sahf
repz
and
aas
or
sbb
cmpsl
fcompl
out
mov
std
std
mov
dec
or
inc
pop
ret
mov
in
cs
scas
dec
outsb
jle
pop
test
inc
andb
cmp
xor
mov
xchg
cld
xor
pop
adcb
mull
adc
push
daa
int3
pop
inc
enter
aam
push
mov
mov
cmp
fld
rolb
test
adc
xor
test
sub
pop
arpl
stos
scas
pop
sbb
xor
pop
mov
pop
shlb
mov
adc
pop
mov
arpl
dec
ljmp
cmpsl
mov
adc
mov
pop
shll
scas
lea
inc
mov
sti
sub
pushl
cmp
sub
xor
jmp
cmp
imul
cli
mov
aad
jb
pop
mov
das
push
mov
inc
and
lods
cmp
xchg
mov
ret
push
and
jp
sbb
mov
xchg
jg
cmpb
pop
gs
mov
aas
cld
adc
or
fcoms
mull
int
adcb
lahf
es
pop
aam
dec
ljmp
daa
addb
mov
mov
scas
and
stos
pop
push
jle
loopne
sarl
or
in
and
xchg
sub
rcr
lahf
xchg
cmp
xor
mov
sub
ljmp
or
mov
sbb
out
push
xchg
mov
pusha
ljmp
lcall
jmp
into
pop
mov
adc
outsl
scas
pop
mov
mov
jl
or
imul
arpl
aas
loope
mov
mov
repnz
pushf
ret
sbb
out
fnsave
cmp
leave
sub
insb
nop
mov
scas
lock
adc
arpl
pop
popa
pop
jmp
mov
xchg
jnp
mov
adc
scas
ss
cmp
mov
push
mov
std
cmp
sbbb
sbb
or
sub
in
pop
or
fidivrs
pop
mov
add
shl
and
bound
lret
jns
cmp
push
ret
sarb
fdivrs
testl
rclb
inc
mov
inc
enter
outsb
dec
lcall
mov
xor
mov
xchg
jmp
pop
mov
pusha
mov
in
lods
push
in
sbb
mov
cmpsb
jnp
pop
fldl
cmp
sbb
lds
imul
fs
je
ljmp
dec
test
insb
lahf
daa
ss
ficoms
orl
jle
dec
dec
mov
sbb
and
jmp
jnp
sbb
nop
push
into
fstl
lret
mov
or
mov
std
gs
xchg
mov
inc
dec
stc
xor
or
adc
std
mov
sub
add
loopne
push
popa
cmp
and
mov
sub
imul
jno
insb
xchg
sub
lods
daa
sbb
inc
push
jmp
mov
mov
mov
pop
dec
jmp
clc
inc
scas
inc
mov
cmpsb
shlb
rorb
mov
fs
mov
jge
pop
mov
xchg
in
cmp
inc
enter
dec
add
mov
inc
outsl
xor
sub
mov
out
in
inc
sub
lock
mov
roll
cmp
sbb
sbb
enter
sub
das
sub
fwait
add
push
loop
out
outsl
ja
sub
mov
outsb
adc
dec
cli
push
cmpsl
arpl
mov
mov
iret
adc
cmp
dec
popf
icebp
cmp
adc
fisubrl
ds
push
adc
rcrb
or
std
popf
les
xor
sub
mov
jne
push
dec
adc
xchg
push
loope
pop
mov
add
int
adc
scas
sarl
cmc
subl
scas
hlt
and
and
xor
ret
pop
ret
addl
cld
xchg
idivl
mov
in
fisttpl
xor
pop
push
and
dec
test
sbb
fwait
pop
sub
cmpsl
leave
jb
rcrb
test
popa
add
and
cwtl
push
add
and
push
inc
es
jge
pop
scas
and
push
stc
adc
dec
inc
loopne
xchg
push
mov
cmp
cmpps
push
mov
cmp
arpl
xchg
cs
cwtl
jns
jns
cmp
lea
cmp
mov
push
mov
xchg
sbbl
and
insb
jns
je
push
mov
rclb
sbb
ja
and
xor
ds
loope
cmpsl
push
negb
mov
les
inc
dec
mov
cs
pop
inc
push
std
test
push
cld
cmpsl
mov
andb
adc
rorl
xchg
pop
bnd
mov
ljmp
xor
push
push
lahf
test
lret
ss
imul
push
clc
pop
mov
pop
mov
pusha
in
push
mov
out
xorb
mov
out
mov
mov
shll
inc
mov
jecxz
push
and
xor
or
xor
in
lahf
xchg
enter
inc
popf
cmp
mov
push
cmp
je
push
cwtl
sbb
out
dec
mov
rcrl
imul
lret
fdivrs
add
fimuls
push
mov
jl
lea
adc
les
flds
jo
ja
inc
jns
adcb
fsub
dec
xchg
lret
call
fimuls
inc
add
ja
xchg
add
loope
into
rol
ficomps
inc
dec
subl
into
popa
mov
or
jl
or
mulb
addr16
insl
push
iret
cwtl
sub
sbb
push
jbe
and
pop
fndisi(8087
ja
dec
xlat
xor
and
jnp
inc
dec
je
push
ficomps
inc
xchg
out
cmp
in
and
add
notb
loope
jge
xchg
dec
dec
cmpl
mov
cmp
jnp
xor
shl
loope
adc
push
rol
mov
and
mov
mov
pop
scas
mov
fcomps
add
pop
jmp
dec
test
pop
popa
outsl
pusha
lds
leave
std
sub
add
sub
ret
xchg
stc
cld
clc
push
or
int
lret
cmp
adc
sub
adc
frstor
popf
jmp
pop
xchg
mov
lods
in
pop
mov
sbb
pusha
and
mov
inc
ffreep
sbb
mov
and
push
test
andl
xchg
test
aas
mov
xchg
xor
out
sbb
data16
pop
enter
in
sub
sahf
pop
mov
test
cmpsb
push
dec
enter
aaa
lcall
aaa
imul
pop
mov
pop
mov
jmp
xor
clc
test
cltd
mov
mov
call
xchg
cmp
or
jp
mov
fwait
add
and
enter
stc
aas
or
lods
movsb
subb
lea
test
fisubs
jg
jb
ja
lahf
fstl
dec
add
push
in
jp
and
lret
sub
fstpl
call
daa
in
push
into
add
jb
pop
lock
mov
adc
lret
or
outsl
mov
lods
lahf
dec
lret
xor
sub
test
or
cld
in
insl
hlt
pop
loop
mov
movsb
daa
jl
ljmpw
or
pop
shlb
and
bound
adc
add
xchg
lahf
int3
sub
jb
ljmp
jo
cmp
jns
sbb
pop
push
pop
hlt
iret
dec
lods
sub
sbbl
jg
sbb
pop
push
in
mov
sbb
pusha
and
jb
out
mov
xchg
push
popf
outsb
cs
jmp
xchg
push
dec
aaa
enter
lcall
or
xchg
mov
mov
sbb
jecxz
sbb
or
or
out
orb
adc
sbb
sub
lret
inc
and
das
pop
sub
inc
jno
dec
ret
pop
mov
cwtl
xchg
inc
pop
dec
pop
insb
loop
ja
pop
cli
leave
shl
sbb
mov
pop
or
add
push
push
lds
push
rcl
mov
push
sub
push
jle
add
sub
add
setb
scas
inc
pusha
mov
test
rorl
leave
scas
sub
xor
cmp
xlat
pop
xor
jo
ja
loope
mov
xlat
mov
stc
push
fidivs
add
ja
mov
fs
mov
les
pop
adc
xor
inc
out
sti
inc
mov
mov
mov
xlat
mov
sub
jbe
divb
cs
into
jge
hlt
pusha
dec
adc
arpl
cmp
mov
push
mov
mov
dec
hlt
mov
sbb
leave
adc
and
fptan
cwtl
sbbl
int
mov
jae
mov
inc
xchg
and
sbb
xlat
sbb
push
push
ss
out
jo
imul
dec
add
in
int
mov
mov
mov
sub
inc
cmp
and
cmp
mov
push
push
cmp
and
lret
lods
lods
shlb
push
sub
imul
ret
out
mov
inc
scas
jle
cli
jae
pop
fwait
jae
fistpll
jns
pop
sbb
aam
mov
pop
sub
rcl
shlb
movsl
mov
mov
stos
pop
sub
pop
ficoms
sbb
lea
mov
lods
push
out
push
aas
fadd
lods
mov
inc
xor
add
jp
inc
call
sub
xchg
imul
inc
push
xorb
scas
mov
mov
stos
adc
ss
push
aam
jnp
jo
mov
push
stos
ret
xor
or
enter
in
lods
or
and
mov
insl
pushf
xchg
pop
jo
lret
jae
dec
popa
imul
jo
scas
ja
jne
sub
mov
pop
xchg
adc
imull
divl
and
push
cltd
dec
aad
mov
mov
sub
xchg
xchg
push
in
sub
ret
cltd
xlat
test
inc
mov
xor
arpl
adc
dec
jecxz
xchg
mov
and
or
or
jo
js
iret
fldl
cld
fnstcw
cmp
cmp
push
pop
cltd
icebp
xor
dec
xchg
xchg
stos
xor
xchg
xchg
test
sbb
mov
pushw
stc
lret
les
test
pop
jecxz
sbb
inc
adc
xchg
fs
dec
je
mov
pop
repnz
dec
stos
xchg
or
mov
fs
imul
push
scas
push
mov
adc
jb
jle
roll
lods
sbb
inc
mov
adc
cld
xchg
mov
mov
cmp
push
inc
jo
std
nop
loopne
iret
out
adc
xorb
nop
ja
nop
decl
inc
fs
adc
mov
adc
call
lahf
jge
inc
adc
dec
push
sbb
dec
or
iret
and
mov
scas
jle
clc
xlat
daa
dec
mov
xchg
and
fsts
or
push
cli
mov
xor
mov
stos
sti
lock
sti
popa
lret
jnp
xchg
pusha
jmp
in
mov
cmp
jmp
fstpt
jecxz
sbb
pop
jne
je
dec
sahf
sahf
cs
dec
movsl
jmp
lcall
outsb
dec
pop
scas
xor
add
leave
icebp
cmp
stos
insb
clc
loop
xor
inc
mov
push
ds
ret
std
ds
fsubr
jle
sti
mov
pop
dec
out
iret
cmovbe
fstps
jl
lea
into
mov
popf
jp
shlb
mov
je
dec
xchg
cli
ja
insb
sbb
and
stc
add
mov
sub
and
mov
dec
or
dec
sbb
ljmp
daa
push
lret
push
mov
aad
lock
fcmovnu
cltd
xor
and
mov
inc
lods
xchg
xchg
add
lods
jle
cltd
and
adc
loopne
in
cmp
sbb
mov
and
jle
arpl
mov
mov
sbb
or
lds
movsb
dec
fisttpl
lds
add
pop
jge
or
popa
xor
sub
in
aas
lods
aas
std
arpl
jns
sub
es
dec
rcrb
aam
jle
and
xchg
jl
adc
nop
sbb
in
test
lea
ret
inc
sub
mov
or
or
cltd
divps
jne
out
fcomps
lea
sbb
jbe
adc
popf
js
incb
xlat
loope
xchg
push
cmc
inc
cli
jne
aam
add
lods
pusha
sti
fmull
adcb
pop
or
or
stos
jae
pop
in
adc
add
mov
enter
in
jge
loope
dec
movsl
push
out
icebp
inc
out
mov
in
push
xchg
out
mov
fwait
sub
fnstenv
jns
outsl
es
pop
sahf
and
xchg
adc
gs
mov
out
sbb
dec
add
les
data16
add
scas
movsl
repz
or
mov
xlat
lcall
orl
push
xchg
outsb
dec
insb
jmp
imul
jp
out
sub
scas
xchg
and
sub
or
ficompl
loopne
je
addl
scas
lods
int
sub
shll
rcll
adc
divl
mov
adc
movsl
pop
shlb
in
stc
inc
aad
cmpsl
xor
xor
xchg
sub
jo
outsb
sarb
lds
mov
lods
nop
push
adc
inc
test
repnz
and
pop
fidivrs
stos
cmpsb
lret
jno
jmp
and
and
adc
in
cmpsb
hlt
js
lret
jl
shrl
pop
sbb
adc
add
cli
sub
movsl
dec
jecxz
add
push
pop
mov
xor
adc
ja
xor
hlt
or
jno
or
insb
iret
lret
cmc
and
xor
and
dec
pop
sahf
test
sub
imul
jae
sahf
jp
pop
mov
adc
mov
jns
div
mov
jne
pop
and
lods
mul
push
data16
pop
ret
xlat
insl
out
xlat
leave
cmp
insl
adc
fidivrl
fsubrs
out
stc
xor
jns
adcb
inc
jge
insb
inc
jns
lret
jae
inc
mov
mov
xchg
fwait
movsl
xor
sub
lret
xchg
mov
lea
mov
stc
ljmp
inc
or
cmp
jle
cwtl
outsl
inc
test
xchg
loope
je
aam
xchg
daa
dec
enter
aad
popa
lret
mov
jno
jmp
mov
movsb
cmpsl
dec
or
mov
add
psubusb
popa
push
add
test
loopne
dec
dec
or
test
shrl
loopne
test
jl
js
pop
and
adc
inc
frstor
and
inc
jg
or
jbe
lahf
fcomp
fildll
jns
je
inc
out
sbb
push
stc
push
xor
or
inc
push
jne
mov
fincstp
add
adc
cmp
cmpsl
mov
addr16
sub
iret
mov
mov
sub
testl
ds
xchg
mov
pop
or
std
inc
faddl
mov
push
jno
and
sub
test
xchg
xchg
or
es
cmpsb
testl
xchg
sub
negl
sub
and
daa
ficompl
pushf
lret
rorb
and
test
and
dec
push
xlat
rcr
sub
pop
pusha
pusha
repz
out
and
cmp
shlb
or
subb
nop
sahf
pop
out
out
cmp
mul
xchg
insb
mov
mov
xchg
adc
cmp
ja
sbb
mov
jo
leave
cs
jg
cs
pop
into
aas
ds
test
call
aad
and
bnd
aaa
test
pop
and
add
add
jb
sbb
fsub
pushl
out
cmp
sbb
mov
push
aad
inc
scas
ret
arpl
insl
out
push
scas
cltd
cwtl
ret
fdivrp
cs
cld
xchg
out
xor
jl
adc
and
xchg
insb
or
mov
jnp
fcoms
dec
inc
xor
inc
cmp
inc
or
lcall
stc
cltd
cmc
add
cli
adc
decb
push
jns
add
leave
aam
cli
std
rolb
cwtl
and
or
in
data16
cmp
cmp
cmp
leave
test
rol
cmovs
loope
xchg
outsb
pop
push
xor
popa
rorl
mov
lcall
dec
ss
stc
add
sbb
rorl
push
repz
mov
jecxz
ss
cs
pop
dec
pop
fstps
lahf
cli
add
add
jg
js
or
cvtps2pd
mov
add
lods
push
and
les
sub
andb
jmp
xor
fwait
or
xchg
dec
jbe
out
popf
jl
mov
loope
stos
mov
jg
sbb
xchg
out
gs
adcl
and
pmullw
fcomps
lea
or
shll
dec
sub
aas
ja
roll
shl
sahf
ret
inc
mov
enter
jo
push
push
in
iret
popa
pushf
out
xchg
sahf
cwtl
int3
clc
adc
sub
mov
mov
dec
push
aaa
inc
jmp
ljmp
ret
out
cwtl
loop
aas
xor
push
lds
sbb
dec
imul
out
mov
pop
repnz
pop
int3
in
out
sbb
push
or
insl
mov
mov
xchg
jns
sub
jmp
sahf
pop
xor
xchg
add
mov
jmp
call
arpl
enter
and
popa
xchg
dec
push
scas
stos
jns
inc
test
dec
inc
push
add
ss
dec
mov
cmp
in
mov
mov
pop
sbb
adc
adc
lock
mov
test
repz
cmpsb
xor
xchg
out
sub
lock
sbb
icebp
mov
push
fidivs
leave
ror
push
and
pop
push
jmp
cmp
aam
mov
mov
adc
test
fidivl
rcrl
pop
xchg
sub
fildl
sti
in
in
lcall
fwait
push
rcr
pop
lds
inc
sti
add
or
add
sbb
push
add
mov
sub
jae
int
mov
sbb
add
cs
mov
cmp
jg
sarl
sbb
sahf
xor
inc
adc
mov
cwtl
mov
pop
sti
pop
int3
mov
outsl
out
mov
cmp
repz
int3
pop
dec
out
push
pop
inc
nop
dec
xor
stos
imul
test
mov
push
jp
mov
mov
inc
fcmovb
iret
jg
jne
sahf
sbb
addb
stos
adc
mov
mov
mov
push
stos
dec
jo
popf
mov
gs
gs
xchg
jb
mov
sub
xchg
pop
sbb
mov
jmp
push
aad
xchg
das
in
push
or
aad
ret
idivb
lret
adc
int
imul
jle
std
jo
jecxz
sbb
jge
lahf
mov
mov
ljmp
inc
in
inc
and
aad
iret
fdivr
orl
mov
dec
xchg
mov
popa
push
cmpsl
icebp
aaa
xchg
push
push
jns
insl
jmp
cmp
cmpsl
aam
add
mov
push
and
jge
nop
adc
fmul
aas
jg
clc
mov
jl
testb
les
lds
mov
pop
mov
dec
lds
jl
xor
add
daa
cmp
call
loopne
in
aad
cmp
stos
shll
fwait
ljmp
jae
outsl
mov
sbb
lock
xor
repz
cmp
xor
xlat
iret
mov
fisttpl
in
movsb
lea
je
lods
push
jne
mov
xlat
out
sub
lcall
or
and
test
fistpl
or
add
sbb
fwait
dec
jae
fiadds
xor
and
push
adc
testb
or
sbb
sbb
push
xchg
or
lods
jae
inc
dec
daa
cmp
fucom
sbb
test
das
and
or
js
cmp
call
addb
xor
mov
pop
mov
xchg
pop
or
std
xchg
sbb
xchg
movsl
pop
mov
add
dec
or
jo
pop
add
adc
call
hlt
or
mov
arpl
jne
fsubs
out
roll
les
or
jecxz
jle
cli
sbb
push
cltd
sub
loopne
mov
out
jnp
cmpxchg8b
jae
sbb
aaa
sub
lahf
into
test
imulb
mov
aas
out
add
pusha
scas
cmp
mov
ror
mov
dec
je
mov
cli
lret
fcmovu
dec
jb
push
fmul
push
je
jecxz
in
pop
mov
cmp
dec
add
insb
or
xor
xor
in
lcall
sahf
stos
jge,pt
mov
sub
addr16
push
xchg
jnp
mov
inc
mov
outsb
pusha
xor
shl
inc
lods
jns
stos
and
insl
or
pop
push
lds
movsl
orl
out
mov
out
std
call
xor
mov
xor
sub
lea
or
mov
mov
and
outsl
repnz
cwtl
sbb
std
insb
aam
jge
movsb
jno
icebp
scas
pop
mov
imul
outsb
push
jo
sbb
push
loop
ja
xor
lcall
add
in
fwait
sti
inc
test
mov
cmp
ss
rcrb
mov
lcall
jge
test
bound
sbb
lea
jl
xchg
orb
or
adc
push
das
mov
stos
add
add
out
dec
jle
inc
jae
push
loop
repnz
mov
negl
inc
clc
fsubl
sub
jecxz
out
pop
int3
push
lret
jne
sahf
xor
pop
inc
lods
aas
aam
cmp
data16
or
xor
lahf
add
lret
add
sar
pop
outsb
inc
in
push
cmp
jae
push
sub
pop
xor
testb
movsb
loop
dec
subb
addr16
mov
inc
dec
icebp
pop
pop
test
sub
into
add
xchg
mov
mov
roll
dec
call
and
out
jnp
push
push
scas
out
fld
imul
jecxz
and
rcll
mov
lea
clc
adc
rorb
in
cmp
mull
or
sub
scas
mov
adc
cmc
jns
sti
push
mov
inc
mov
mov
jbe
mov
inc
roll
shrb
adc
dec
push
iret
mov
cmpsl
fiadds
lret
xchg
mov
ror
das
push
test
xchg
inc
mov
mov
clc
and
lahf
or
add
icebp
hlt
movsl
rcll
pop
sbb
rolb
jbe
mov
push
mov
lret
int
cmp
std
dec
push
cli
jecxz
add
add
out
lahf
add
shl
iret
ret
fsubr
ror
mov
lea
in
rcrl
pop
inc
jbe
jge
pop
imul
cld
int3
xor
adcb
cmc
cli
fidivrl
xor
mov
lret
cmp
fwait
dec
jbe
insl
pop
jmp
cmp
loop
pop
pop
or
adcl
icebp
or
dec
or
add
les
iret
fdivr
mov
and
aas
orl
push
insl
cs
pop
lea
push
ss
or
shll
xchg
push
lret
ret
mov
push
negl
jp
adc
inc
push
sbb
mov
ret
lret
sbb
ja
adc
gs
mov
stos
aam
or
leave
sub
sarb
xchg
cwtl
cwtl
lods
cmp
jl
addl
nop
test
es
jl
int
or
mov
pop
add
pop
jmp
jnp
out
fiaddl
cmp
movsb
ja
mov
pop
rcrb
sbb
add
pushf
ret
mov
mov
push
nop
scas
in
inc
aaa
shlb
or
or
lret
jp
xor
jns
jge
mov
fisubs
mov
mov
inc
outsl
rorl
add
or
add
inc
mov
das
fisttpll
push
pop
adc
xor
push
push
nop
dec
in
inc
dec
sbb
cmpsl
lds
mov
mov
cli
jb
and
faddl
test
cmp
mov
xor
add
cmp
xchg
imul
mov
fs
mov
cmpsl
dec
and
ja
sarb
mov
shlb
movsb
inc
test
frstor
sub
cmpsl
dec
lods
dec
xchg
jno
push
test
pop
xchg
call
pop
out
sbb
jp
push
aaa
cmpsb
lret
xchg
inc
push
inc
bound
inc
in
jbe
insl
sub
lahf
mov
incl
stc
cmp
fsubrs
cmp
rcrb
xchg
sub
imul
fidivs
cmp
jmp
in
ljmp
xchg
rorl
fdivs
sbb
or
rcl
and
pop
dec
int
insl
jl
or
icebp
popa
inc
aas
je
push
add
scas
cmp
cmp
adcb
loopne
rorl
push
mov
scas
call
fwait
pop
insb
out
lds
aam
dec
pusha
xchg
stos
ret
cmp
fstpl
ja
pushl
test
scas
lcall
xchg
pushf
add
stc
mov
je
inc
push
xchg
xchg
dec
aas
aam
daa
aam
ds
jo
pop
repz
or
jae
jle
sub
xor
arpl
repz
mov
inc
cwtl
pop
or
mov
mov
xchg
push
cmc
sub
and
jl
dec
aad
bnd
andl
daa
pop
mov
dec
mov
sub
repz
inc
fimuls
lods
xchg
aaa
and
inc
fucom
repz
out
clc
in
push
push
in
mov
out
sti
xor
pushf
mov
add
add
test
add
mov
punpckhbw
jae
out
movsb
mov
push
dec
sub
js
sahf
shlb
repz
mov
jle
daa
cwtl
adc
xchg
fmull
mov
jnp
mov
fldl
enter
sbb
xchg
xor
fwait
cld
shlb
mov
mov
xor
dec
push
stos
lcall
loope
imul
lock
lret
ss
repz
das
testl
or
fcom
adcb
out
pop
xchg
cmpsb
jo
stos
sar
pop
pop
daa
es
jne
push
adc
adc
jecxz
loop
lret
dec
lahf
mov
mov
sbb
int3
mov
sbb
jae
mov
pop
daa
sbb
mov
out
xor
sbb
daa
cltd
or
add
inc
sub
hlt
push
aad
mov
out
shl
daa
popf
test
insl
adc
subl
int
pop
outsb
or
add
xor
lds
test
nop
jmp
test
cltd
das
sti
inc
shll
mov
and
and
shrb
movsl
sbb
test
mov
pop
notb
mov
mov
xchg
movsbl
inc
push
out
sub
mov
lds
sbb
jle
aas
fstl
fwait
sub
fs
or
mov
aas
popf
mov
fwait
hlt
es
mov
cmp
mov
inc
pop
mov
inc
xchg
xchg
sbb
cs
dec
test
push
xor
mov
in
pop
jo
mov
cmp
lods
push
insb
inc
divb
fcmovne
mov
pop
fwait
movsl
jnp
in
inc
and
sarl
push
adc
lahf
bound
rorl
stos
out
jo
shr
pop
inc
xor
hlt
leave
fwait
jg
inc
lods
sbb
inc
and
mov
addr16
xchg
cwtl
mov
in
cmp
rorb
outsb
pop
repnz
push
mov
loop
push
fstpt
scas
lds
outsl
mov
lcall
hlt
dec
xchg
pop
or
xor
paddusw
xor
dec
mov
call
cwtl
cmp
rclb
cmp
movsb
jle
jbe
inc
mov
adc
xchg
xchg
sub
lahf
daa
mov
sbb
scas
test
sub
push
lret
stc
sub
test
orl
jmp
or
xchg
sub
ljmp
jp,pn
xor
aaa
sbb
jb
sbb
in
ret
imul
mov
mov
fdivrs
fistpl
in
fiadds
cmpsl
imul
mov
pop
aam
push
stos
addr16
push
dec
push
into
push
fmull
addr16
call
xchg
push
cld
jle
enter
xchg
aam
pop
sub
sti
sbb
xor
dec
or
jmp
popf
dec
inc
call
jnp
mov
dec
or
mov
or
mov
jmp
inc
out
and
and
ret
out
pop
daa
and
inc
inc
cmc
adc
mov
adc
pop
or
push
lods
scas
loopne
cmc
push
push
mov
xor
or
inc
fs
test
inc
scas
sbb
pop
xor
rorl
mov
aam
cmpsl
mov
pop
inc
ss
lods
dec
icebp
and
xchg
xchg
push
incl
and
xchg
fnstenv
sti
xchg
pop
bound
out
addr16
inc
dec
push
jge
movsb
push
filds
insb
fninit
or
and
lock
mov
pop
mov
scas
je
mov
sarl
aas
mov
and
cmp
popf
outsb
inc
sub
fidivl
cmp
lds
jo
enter
fmul
fwait
cmpl
mov
mov
stc
repnz
lret
loopne
mov
ds
dec
fistpll
and
lock
pop
ret
mov
lret
out
and
mov
add
test
adc
and
add
jmp
aam
jmp
lods
jl
insl
mov
mov
cmp
add
mov
xchg
daa
clc
enter
cmpsl
movsb
fucomp
addr16
popa
test
stos
dec
mov
rcl
dec
inc
in
jp
mov
adc
dec
adc
imul
je
in
inc
jle
xchg
decb
je
mov
push
adc
pop
aaa
jmp
or
cld
and
pop
jnp
fildl
pop
lods
xor
and
hlt
iret
mov
xchg
jns
mov
jle
xchg
mov
mov
pop
movq
sub
leave
stos
jo
andl
adc
aas
fildl
loopne
dec
cmovle
pop
add
lea
es
cs
dec
xor
jecxz
and
pop
rcrb
adc
scas
cs
rorl
int
les
xchg
sub
xchg
dec
and
fwait
cmc
shrl
add
arpl
je
jb
mov
subl
mov
lcall
adc
insl
cmpsb
test
sahf
subl
shll
rclb
or
cmpsl
mov
mov
fs
fiadds
mov
push
inc
add
lods
xchg
jnp
dec
mov
lds
jmp
pop
aaa
scas
or
fwait
mov
sub
jnp
cmp
fmuls
ljmp
ret
or
push
in
jge
mov
int
adc
fcomps
int
inc
jle
xchg
pop
mov
inc
dec
push
shr
or
and
fldt
cmpsb
aad
gs
cmc
ds
or
xor
out
stc
cmp
scas
mov
inc
out
test
lea
fdivrs
outsl
jg
in
xchg
bndldx
movsb
icebp
or
and
xor
hlt
adc
add
loopne
pop
in
and
or
inc
dec
lea
xchg
jb
cmp
aas
imull
mov
movsl
ljmp
out
fistl
cld
sbb
fucomip
xor
add
sbb
push
xor
aam
int3
jmp
loopne
cmp
pop
pop
js,pt
scas
rcl
adc
bound
sub
shll
push
sub
pop
clc
and
pop
push
fdivrp
xor
jbe
js
movsl
adc
and
mov
dec
lock
iret
pop
aaa
mov
stos
push
add
data16
sub
test
and
int
scas
std
aam
mov
ds
outsb
rolb
jg
icebp
mov
jle
cmpsl
dec
mov
push
mov
outsl
insl
in
cs
fmuls
fcomps
loope
stos
call
lea
repz
cmpsb
push
mov
sbb
stos
and
hlt
in
bound
add
js
cmc
shll
add
jge
pop
jns
fs
mov
sbb
mov
iret
push
add
ds
push
iret
test
mov
pop
test
pop
daa
not
daa
mov
adc
stc
sub
mov
add
push
leave
push
movsb
xor
push
mov
arpl
dec
insb
sbb
les
jb
mov
sti
pop
inc
into
add
mov
mov
push
and
pop
mov
jnp
nop
testl
aas
mov
and
mov
into
mov
int3
rcr
mov
lock
aas
jmp
mulb
jge
sub
scas
adc
push
dec
insb
sbb
sub
or
cli
xor
ja
popf
or
pop
stos
loope
dec
into
es
inc
add
hlt
fisttpl
dec
and
mov
ljmp
and
imul
hlt
jl
push
fs
add
mov
dec
data16
shrb
dec
out
dec
jmp
in
or
add
orl
in
pop
push
dec
and
scas
lods
push
jne
mov
sub
jp
stos
mov
and
inc
pop
jg
dec
in
loop
jno
aaa
outsl
mov
xor
xchg
sub
popf
add
shll
pushf
repnz
pusha
dec
and
or
and
jne
notl
jns
fsts
pop
lea
pop
aas
jne
jp
pop
iret
xor
lods
stc
in
pop
mov
andb
pop
cmp
adc
mov
sub
xor
hlt
xchg
jne
mov
testb
mov
adc
pop
mov
xchg
pop
ds
neg
sarb
cmp
inc
inc
jae
or
dec
in
mov
push
je
jns
lahf
out
movsl
xchg
dec
les
adc
in
sbb
out
jns
cmp
je
dec
insb
xchg
or
add
jp
imul
pop
sub
cmp
xchg
mov
sub
push
aas
dec
iret
adc
or
xchg
mov
mov
mov
lock
push
aam
subb
mov
shrb
ss
stc
adc
jmp
xlat
xlat
mov
sbb
ja
jmp
push
mov
cmp
xor
cmpsl
fsubrl
pop
je
lret
pusha
loop
sbb
jecxz
mov
mov
adc
ja
mov
sub
mov
mov
jl
jg
push
pop
pop
into
lea
sbb
jl
mov
xor
dec
loope
xchg
mov
cld
cld
fstp
jno
fcmovb
pop
push
fcompl
jb
insb
pop
mov
mov
fcmovnbe
rorl
cmc
mov
xchg
popf
in
xchg
in
int
negl
xchg
dec
push
pop
test
add
aam
decb
fs
pop
mov
jae
stos
mov
loope
loop
inc
insb
xchg
mov
sbb
clc
xor
shr
xchg
imul
inc
xor
lcall
xchg
add
sbbl
movsl
and
mov
pop
pop
inc
add
cld
push
out
test
sub
push
sub
mov
lahf
mov
sahf
mov
xor
mov
jle
jp
jo
pushf
cmpsl
adc
sub
xlat
stc
rcrb
sbb
sub
icebp
insl
adc
sub
push
fwait
xchg
push
and
ja
stos
sub
dec
jnp
cmpsb
mov
pop
cmpsl
sub
hlt
mov
adc
ja
mov
mov
push
sub
jae
and
mov
shl
insb
sbb
lock
repz
mov
cmc
enter
push
fwait
mov
fs
mov
xchg
ljmp
out
fldl
outsb
adc
data16
adc
push
cmpsb
bound
push
cmp
or
std
mov
mov
lret
sti
xlat
pop
xchg
cmc
pop
or
jmp
ret
dec
lea
daa
mov
pop
iret
sbb
ror
mov
clc
icebp
data16
pop
push
pop
xchg
icebp
iret
ret
nop
mov
scas
rorb
sbb
cli
dec
mov
daa
jmp
push
mov
pop
pop
addl
add
sbb
push
dec
mov
pop
adcb
cs
push
sbb
hlt
ja
cs
xor
dec
mov
xchg
inc
mov
xlat
decb
ficompl
shlb
sbb
cwtl
push
stc
xchg
pop
out
test
push
enter
xchg
aas
cld
scas
pop
push
mov
mov
mov
jge
xlat
data16
adc
cld
xlat
aaa
jmp
ljmp
adc
adc
jae
orl
or
inc
jbe
fs
aam
nop
test
sti
or
jns
fldcw
out
inc
cmp
shrb
out
jno
inc
pusha
and
int3
and
sbb
movaps
mov
add
mov
addr16
or
push
mov
lea
mov
mov
addr16
cmp
jb
xchg
cld
scas
cld
mov
mov
adc
das
push
push
loop
imul
aas
mov
xlat
push
stos
add
mov
inc
psraw
adc
xor
dec
dec
xchg
cmpsb
jmp
or
pop
xchg
leave
mov
dec
push
sti
xchg
add
pusha
mov
pop
cld
mov
push
adc
inc
icebp
sub
xchg
ret
inc
mov
daa
jl
fstps
inc
vpsubb
lcall
ficoml
mov
cmpsb
dec
ja
inc
scas
loopne
adc
inc
in
xchg
fsubr
sbb
adc
cmp
aaa
or
and
push
pop
repnz
mov
mov
in
add
xchg
mov
xchg
ss
lcall
xchg
not
inc
sub
mov
push
ret
and
ss
or
ret
test
or
xorb
push
and
jo
sbb
xchg
inc
dec
inc
mov
pop
aas
jg
lock
cmpsl
popa
sbb
dec
adc
xor
sbb
mov
mov
js
add
mov
test
add
les
or
or
int
pop
ja
dec
lock
adc
xchg
cltd
das
xor
shll
jnp
mov
sbb
aam
aam
dec
and
mov
inc
int3
int3
pusha
xlat
sub
or
gs
cmpsb
sbb
pop
jle
push
adc
outsb
jp
mov
rorb
adc
push
je
and
movsl
fs
and
insb
fistpl
std
repnz
faddl
sbb
mov
push
sahf
cltd
mov
jl
adc
inc
inc
ret
inc
lret
scas
push
xchg
in
dec
in
ret
push
jae
add
pushf
mov
cli
outsl
je
notl
movl
cmp
stos
dec
xor
leave
mov
jbe
movl
inc
es
sahf
popf
lcall
sbb
xchg
nop
mov
and
popl
aas
xorl
and
dec
fcoml
xor
push
xor
shll
scas
xchg
jp
addl
pop
lea
fs
out
aad
test
sbb
cmp
out
push
lret
mov
ljmp
sarl
ret
adc
sti
ljmp
jo
jmp
loope
movl
xchg
jne
dec
pusha
mov
jns
ja
sarl
or
dec
clc
fstpt
ret
insl
mov
cmp
in
data16
mov
iret
imul
insl
jmp
mov
out
mov
test
ret
jg
and
popf
sbb
mov
mov
or
jae
sub
das
fisubrs
xchg
or
fstpl
in
clc
mov
fistpl
mov
loope
mov
ja,pn
mov
daa
push
popa
mov
cmpsl
pushf
fildl
dec
jecxz
shll
dec
ret
push
mov
aaa
push
xchg
stos
cwtl
in
mov
addr16
mov
inc
push
dec
cmp
pop
inc
xor
push
xor
xor
mov
sub
or
pop
and
ss
mov
test
popa
cli
cmp
adc
int
dec
pop
scas
add
xchg
xor
adc
dec
cmc
push
and
test
rorl
ss
or
addb
jns
rolb
cmp
or
iret
lods
xchg
fcomi
mov
jecxz
shll
hlt
xor
jg
xchg
xchg
jbe
cmp
pop
xchg
push
add
or
fbstp
xor
cmpsl
fsubrp
je
pop
or
push
jmp
jae
mov
mov
test
pop
aam
pop
stos
add
xchg
jge
dec
stos
cwtl
and
sub
scas
xchg
lock
out
sub
pop
sub
fnsave
pop
fists
fs
pop
mov
repnz
mov
movsl
movsl
or
mov
out
shrl
pop
inc
jecxz
push
roll
xor
sarl
adc
and
int3
ljmp
je
adc
fsubl
into
mov
push
mov
and
imul
loope
out
lret
daa
lret
outsb
mov
dec
jmp
inc
ss
xchg
jae
int
jp
pop
cld
cmp
pushf
mov
ficomps
aam
pop
cltd
sahf
cltd
sti
mov
in
dec
aas
and
jge
int3
into
idivb
dec
pop
adc
xchg
pop
into
imul
clc
add
imul
enter
add
fs
repnz
inc
cmp
test
mov
sbb
popl
xlat
js
outsl
stos
lret
jae
xor
and
out
dec
dec
sub
fists
cmp
pushf
pop
lds
xchg
nop
es
push
in
ret
ds
das
jg
outsl
je
hlt
aas
fcompp
jb
fiaddl
add
stc
push
pop
mov
jle
js
mov
or
sub
cs
adc
dec
outsl
ja
mov
and
daa
fists
pop
aaa
lahf
out
lock
mov
add
cltd
movsl
addr16
icebp
mov
cmp
in
sub
rclb
pushl
push
mov
insl
ds
push
fnsave
push
mov
sbb
inc
push
fs
or
cmp
mov
les
and
or
loopne
int
xor
push
out
adc
popf
cld
mov
push
test
int
addr16
fsubrs
outsl
bound
clc
movsb
cs
cmp
hlt
into
in
and
xchg
push
add
int
jb
ja
mov
add
push
jns
shll
inc
xchg
fidivl
lock
outsb
xchg
call
pop
ja
inc
dec
mov
mov
leave
iret
out
fsubrs
out
jae
push
outsb
or
jecxz
jnp
pop
ja
fsubrl
push
inc
adc
jbe
xchg
clc
mulb
data16
mov
cmp
stos
incb
imul
in
push
add
or
mov
ljmp
add
out
add
mov
mov
jae
inc
and
xchg
jbe
cmovnp
fmuls
adc
pop
and
xchg
les
je
movsl
jo
sbb
sub
and
int
xor
sbb
outsl
int
mov
xchg
xor
div
gs
mov
pusha
jmp
imul
sbb
aam
mov
pop
mov
stc
push
movsl
inc
cmp
loopne
aad
mov
inc
push
xchg
roll
test
cmp
cltd
push
int3
fadds
mov
mov
sbb
sbb
xchg
xor
pop
cs
pop
int3
jmp
repz
inc
mov
mov
gs
lcall
xchg
jecxz
cmc
js
xor
sbb
mov
sbb
cmp
out
adc
jg
les
dec
xchg
cmp
shl
cmp
pop
into
and
cmp
and
and
and
scas
cmp
adc
jp
and
lea
lret
ss
int3
xchg
popa
leave
hlt
xchg
leave
js
fimull
sub
js
out
push
clc
dec
aas
scas
push
pop
push
iret
sub
dec
jmp
movsl
shl
lock
mov
aas
mov
xor
xor
fsubrs
ljmp
outsb
imul
adc
jmp
xchg
inc
jmp
ficompl
and
xchg
pop
cmp
outsb
push
movsb
xor
jl
sbb
or
dec
cmp
aas
out
push
pop
arpl
xor
test
xchg
ds
push
cmp
repz
loop
lret
push
js
inc
pop
in
lret
fucomi
insb
lcall
cmp
push
mov
mov
mov
fistps
mov
dec
mov
xor
cltd
sahf
es
add
lret
addb
inc
and
xor
call
mov
out
ds
adcb
jae
lahf
dec
lret
cltd
aad
mov
push
jne
lds
les
jns
arpl
jp
movsl
xchg
mov
mov
sahf
mov
sub
imul
push
inc
dec
jno
push
mov
out
inc
lea
jo
cmp
pop
in
jle
mov
cmp
mov
call
notl
adc
notl
loopne
and
stos
jne
sbb
xchg
subb
out
and
push
into
les
fnstcw
mov
aaa
sti
fidivl
pop
inc
outsl
fsubrl
add
ss
mov
into
cmp
pop
loopne
mov
dec
pop
inc
and
pop
test
jecxz
adc
icebp
cmp
ja
jp
ss
test
push
out
adc
gs
repz
jae
sub
lret
aaa
jg
out
push
out
call
and
popa
add
int
mov
mov
pusha
mov
add
les
mov
mov
xchg
add
mov
jbe
jns
dec
js
xchg
imul
cli
mov
jnp
aad
or
pop
mov
sbb
pop
and
leave
repnz
adc
gs
leave
outsl
rclb
or
pop
repnz
xchg
mov
dec
cs
mov
mov
lret
inc
jp
xchg
jmp
mov
stc
add
or
dec
pop
icebp
nop
jns
movsb
mov
inc
cmc
sbb
arpl
stos
scas
jmp
xlat
sbb
pause
pop
xor
mov
cmpsb
pusha
cli
out
inc
push
mov
xchg
sarl
mov
pushf
pop
cmp
xor
inc
fwait
push
pop
and
addr16
fsubrl
xchg
adc
xchg
xchg
sbb
test
mov
xchg
mov
sarl
ret
cmp
sub
fs
ljmp
testb
mov
lret
in
stos
adc
ret
mov
ss
mov
daa
test
ljmp
jo
push
cmp
pop
sub
insl
lods
and
mov
pop
ds
test
das
nop
sarl
pop
sub
popl
push
and
bsf
das
push
or
adc
nop
imul
roll
arpl
lea
sti
faddp
rcrl
cmp
sbb
out
adc
cs
mov
xchg
cwtl
lods
jbe
push
add
cmp
jb
mov
mov
lret
lahf
fdivrp
jecxz
stos
pushf
mov
lret
jecxz
scas
movsb
add
in
sbb
push
pop
shrb
jge
mov
add
inc
out
gs
mov
inc
jge
mov
xchg
pop
ja
or
shl
mov
sahf
inc
pop
mov
jnp
call
movsl
jne
call
lahf
mov
insb
insb
mov
repnz
sub
hlt
jne
mov
lds
jecxz
jb
and
sub
xchg
xchg
mov
jecxz
insl
ja
dec
mov
mov
or
les
dec
pop
in
push
adc
add
dec
or
pop
sub
push
mov
nop
adc
or
pop
mov
dec
mov
sub
shld
adc
fldcw
ljmp
movsl
insb
shl
jmp
mov
xchg
loopne
out
sub
movsb
jne
mov
sahf
aam
sub
sub
mov
lock
movsl
mov
sub
push
sbb
bnd
cmp
scas
psubusw
test
and
mov
test
mov
xchg
lds
add
pushf
or
cmpsb
xor
mov
stos
push
iret
leave
fwait
ret
insb
repnz
jnp
in
pop
xchg
push
cmp
sbb
jns
nop
test
lock
repz
jns
cmpsl
icebp
add
lret
stc
mov
inc
push
and
fidivl
nop
push
mov
push
xor
lods
lods
movsb
or
iret
clc
iret
jl
call
and
pop
sbb
or
std
mov
fldl
xchg
js
xor
pop
out
mov
das
ja
dec
mov
mov
jnp
pop
adc
lcall
fstpt
mov
sbb
sub
dec
scas
mov
stc
aas
mov
jnp
dec
mov
xor
ret
and
ret
lock
xorb
lret
jnp
xor
jp
adc
or
into
jl
mov
mov
fisubs
mov
lret
pop
sbb
les
jbe
cld
mov
iret
sub
and
std
push
push
xor
xor
mov
ret
call
fucomp
addl
lcall
ds
pusha
sub
je
jl
imul
aaa
je
jecxz
add
or
or
sub
out
jb
sar
out
push
lea
addr16
and
dec
adc
xor
mov
imul
divl
test
cs
pop
sbb
mov
call
cs
mov
sub
xor
fsubp
addr16
cmp
cwtl
fwait
cmp
popf
adc
fldenv
addr16
loopne
push
mov
and
dec
mov
push
dec
mov
cld
daa
jae
adc
movsl
sbb
rol
inc
xor
rorb
jmp
jnp
push
jp
mov
inc
pushf
xor
and
sbbb
dec
hlt
push
push
cmp
aaa
imul
or
aad
push
cmp
mov
sbb
aam
in
in
lds
test
push
pop
mov
xchg
jecxz
and
inc
and
jnp
jecxz
aam
inc
mov
cmp
push
rep
mov
add
in
ljmp
cli
popa
push
push
push
add
inc
lods
jns
popf
rorl
push
clc
mov
hlt
xchg
out
insb
sbb
mov
or
shll
int3
mov
rcll
sbb
and
or
faddl
pop
loopne
cmp
lret
js
fisttps
dec
sbb
pop
pop
add
push
sbb
sahf
push
cmp
icebp
or
push
push
popa
pop
mov
cltd
or
and
jp
andl
and
rcll
jp
in
test
lods
aas
pop
clc
test
xor
mov
sbb
push
lcall
xlat
mov
mov
mov
pop
pop
inc
ret
mov
stos
mov
jmp
push
mov
push
shll
das
push
test
outsb
notb
mov
push
inc
inc
fistpll
iret
cmp
lea
int3
adc
xchg
aas
sbb
dec
loope
xor
dec
stos
and
sti
push
sbb
out
push
inc
dec
sub
std
cmc
sbb
xchg
pop
into
sti
push
fimull
dec
int3
mov
loopne
in
cmp
cmp
sbb
adc
icebp
insl
dec
jge
or
adcb
or
stos
popa
stos
cmpl
dec
mov
jg
xchg
clc
lds
outsb
repz
push
push
lcall
aas
adc
ds
bswap
push
rclb
fdiv
lret
xchg
out
call
mov
pop
test
jno
cmp
jns
ficoms
mov
add
sbb
mov
sbb
neg
pop
add
dec
sub
sub
dec
leave
lret
in
setb
fdivl
adc
push
mov
ja
ss
pop
push
xor
mov
out
ret
fistps
popf
fistpll
stos
sbb
or
movsb
aad
mov
xchg
xchg
push
or
lcall
jns
cmp
xor
jl
xchg
push
jb
jb
movsl
jno
or
add
nop
push
cltd
lods
test
lret
jne
sti
lock
pop
inc
mov
lods
imul
aaa
pop
rorl
leave
rclb
push
mov
or
sti
imul
add
ficompl
and
jns
insb
lock
popa
and
mov
pop
pop
inc
shll
and
adc
push
frstor
cli
xchg
mov
in
shl
xchg
mov
outsb
or
lock
push
push
mov
popa
xchg
pop
sbb
jp
movsl
mov
dec
inc
add
adc
mov
jne
shlb
lock
fwait
in
xrelease
push
xlat
sbb
xchg
in
ja
add
adc
out
dec
pusha
add
pop
fcomi
xchg
cmp
xor
aaa
jbe
push
loop
push
hlt
add
daa
sbb
lret
push
mov
enter
lods
push
fiaddl
push
mov
out
mov
sarl
test
ret
sbb
cmp
jge
fwait
push
data16
jnp
lea
cltd
int3
clc
imul
cmp
add
mov
and
add
sub
lcall
push
orb
fsub
jg
enter
sysexit
popf
fidivrs
pop
pop
push
mov
ret
xchg
sub
jecxz
outsl
scas
xor
xor
pop
adc
je
loope
subl
dec
cmp
fstp
pop
test
fmuls
push
pop
je
sbb
arpl
pop
stos
add
outsl
aas
call
dec
fmulp
dec
sub
xchg
popf
mov
pop
cmp
shlb
stos
shlb
outsl
in
dec
in
movb
mov
xor
lcall
iret
push
mov
test
jl
jns
xor
sti
xor
xor
imul
jns
ljmp
or
add
scas
das
xchg
xor
mov
cmp
cltd
or
push
or
bound
repz
out
inc
loopne
andl
dec
std
cmpsl
adc
pop
mov
fidivrl
pop
dec
icebp
shrl
lret
je
mov
shll
mov
mov
clc
add
inc
call
mov
addr16
mov
dec
insb
mov
mov
aaa
imul
test
sbb
pop
pop
int
mov
dec
sub
jns
mov
imulb
mov
and
dec
aad
imul
xor
jmp
ret
pop
adc
push
and
mov
call
sub
adc
data16
inc
out
or
dec
aam
push
jmp
lcall
pop
nop
sub
sub
pop
xor
testb
adc
and
jp
jno
cmpsl
das
inc
sub
sbb
out
out
loopne
fdivp
in
xchg
cmp
xchg
fadd
adc
fwait
or
sub
mov
inc
mov
adc
xor
int3
cltd
dec
push
lock
clc
imul
sti
enter
and
mov
outsl
push
pop
mov
mov
cmpsb
fistps
into
mov
insl
push
cmp
add
je
and
mov
dec
fistps
out
xlat
in
fistpl
lcall
pushf
loopne
add
shll
repnz
test
std
iret
inc
mov
jp
xor
adc
lret
sub
push
pop
divb
jns
push
popf
ret
add
inc
mov
loopne
std
out
popf
out
lods
inc
jbe
and
shlb
jno
movsb
stc
or
repnz
pusha
push
xor
adc
scas
cmp
adc
test
loope
in
int3
lahf
scas
imul
xchg
pop
jnp
add
shl
fadds
andb
sbb
stos
mov
sbb
inc
fucomp
imul
fwait
cmp
xchg
insb
repnz
loopnew
dec
cld
or
and
sbb
test
and
dec
jmp
cs
sahf
mov
aas
sbb
clc
cwtl
add
into
fsub
push
adc
loop
fwait
sbb
add
data16
jp
std
jnp
idivl
push
push
xchg
cmc
sub
pop
dec
inc
ja
push
loope
mov
mov
and
adc
cmp
or
iret
fnsave
sti
push
fdivrl
out
cli
and
push
popa
pop
divb
and
int
and
mov
push
pop
adc
inc
push
lahf
xchg
imul
dec
test
inc
adc
test
sub
ljmp
aas
dec
inc
fistps
and
stos
mov
push
les
les
or
jnp
js
cmp
sbb
out
scas
nop
sahf
push
mov
cs
rcrb
or
xchg
push
dec
mull
cmp
or
or
inc
popf
in
out
and
clc
inc
loopne
pop
mov
jae
imul
lods
adc
repnz
test
mov
pop
xor
mov
push
cld
iret
js
sbb
lds
fmulp
jbe
pop
jbe
int3
je
out
add
hlt
cmp
cmc
mov
std
gs
leave
inc
out
mov
popa
and
subl
fsub
mov
nop
shrb
cli
sub
out
jns
jnp
aas
dec
nop
aas
subb
sbb
int
mov
rcrb
cmp
adc
mov
iret
rolb
jl
mov
and
sbb
and
lods
push
sbb
fistl
or
sbb
stc
out
sub
and
test
mov
aad
jb
aas
xchg
mov
xlat
xchg
addr16
push
mov
roll
push
jnp
scas
and
jg
shll
push
cmp
pop
add
jp
dec
mov
mov
decl
or
mov
sub
testl
sahf
dec
sbb
sahf
fwait
sub
testl
inc
imul
sub
xor
cld
add
or
mov
sbbl
xor
ljmp
into
out
xchg
shr
lret
xchg
mov
iret
lock
adc
jns
sbb
mov
pop
pop
adc
jb
fisubs
mov
lahf
shll
jo
jbe
mov
shrb
adc
cmp
inc
sahf
arpl
dec
cmp
aad
ret
testb
stos
mov
jecxz
cmp
ds
addr16
rep
ret
ret
and
aam
pusha
cld
movsl
or
xor
aaa
cmp
orl
test
cmpsl
sbb
imul
cmpb
movsl
cmovs
ljmp
inc
jae
scas
stos
fiadds
fs
int
pop
loope
bound
inc
cmp
cmp
es
mov
mov
mov
cmp
xchg
movsb
outsb
int3
bound
mov
out
hlt
xchg
stos
sbb
shll
fcmovb
push
enter
pop
iret
mov
xor
push
jge
imul
ljmp
pop
or
xor
adc
aaa
mov
les
out
lea
push
cmp
jb
xlat
popa
ds
fadd
test
xor
out
call
ljmp
pop
dec
aad
or
sbb
into
lea
out
fists
movsl
cmp
mov
fcmove
cmp
dec
movsb
sbb
lret
nop
mov
enter
add
imul
cmpsl
popa
dec
lock
outsb
test
add
call
push
popf
daa
scas
sub
and
sbb
in
jle
add
push
xor
xchg
scas
ret
in
sub
in
dec
sbb
mov
cmp
rcl
sbb
xorb
mov
jae
mov
fiadds
pop
sahf
mov
mov
xchg
xchg
sub
sbb
or
les
arpl
push
xchg
imul
dec
xor
adc
stc
int3
cmp
cmp
mov
lods
sub
aad
clc
fwait
push
les
push
cmpsb
mov
xchg
xor
call
push
dec
push
jbe
inc
add
add
icebp
mov
fimull
mov
sbb
dec
shlb
cmp
xor
mov
sub
sub
lods
cmp
lea
add
sub
mov
frstor
push
imul
xlat
mov
imul
sbb
testl
mov
or
rolb
les
in
and
dec
in
xor
cmpb
inc
jg
test
dec
jge
insb
fcoml
xor
sub
cmpsb
jb
jl
imul
jae
jae
in
jp
add
in
jge
add
aas
sarb
push
pop
loop
out
popa
fcoms
fldenv
sub
daa
pop
mov
outsl
mov
xchg
and
push
or
dec
jnp
jns
and
pop
add
iret
push
inc
mov
or
cmp
and
jmp
sahf
shrb
xchg
cmp
xchg
mov
ljmp
ja
inc
mov
inc
in
arpl
je
aad
mov
mov
ja
outsl
sub
cli
push
push
mov
stos
int
js
push
sbb
ret
sub
loop
cwtl
and
jl
inc
aas
xlat
les
cmp
cmp
mov
pop
cmp
xor
sbb
fisttps
and
scas
jns
xchg
dec
std
or
adc
or
mov
jbe
jl,pn
lds
mov
push
imul
xchg
push
mov
fistpl
lods
push
sbbl
call
mov
xor
mov
fucomip
je
dec
sbb
mov
fwait
out
popf
pop
in
mov
leave
mov
mul
out
xchg
imul
push
cmpsl
flds
and
push
jp
or
test
out
lret
push
fists
rcll
or
adc
sti
repz
pop
sbb
data16
mov
std
mov
mov
rorb
rcrl
fisubs
in
fimull
out
in
pop
pop
ret
lods
dec
test
jo
add
aad
mov
mov
mov
adc
or
push
pop
pop
jo
ret
mov
sub
xchg
mov
ret
xchg
sbb
push
idivl
mov
dec
mov
jnp
jle
movsb
pop
sarl
int
into
jle
inc
jns
push
push
xor
repz
xchg
mov
cmp
adc
sbb
mov
push
cld
push
repz
xlat
and
lods
push
fcoml
push
in
jbe
call
inc
loopne
push
test
mov
xchg
push
aam
jecxz
xor
jmp
outsb
inc
inc
sbb
pop
icebp
cmp
movsl
arpl
sbb
imul
aam
aas
fcoml
inc
jle
add
mov
scas
jecxz
inc
adc
jne
mov
inc
cwtl
dec
push
in
jns
pop
sub
inc
cwtl
loope
sahf
shlb
cmp
add
ss
add
into
inc
sub
movsl
js
xchg
xchg
insl
xchg
divl
inc
lret
dec
push
sbb
add
inc
outsb
adc
call
repnz
out
out
mov
pop
aad
push
mov
pop
sbb
push
in
xchg
push
outsl
mov
test
cmp
shl
fisubs
aas
pop
rclb
cmpsl
add
mov
imul
cltd
mov
leave
inc
in
cs
mov
ss
bnd
cmp
inc
cmp
and
leave
sub
mov
cwtl
xor
xor
in
out
sbb
mov
jns
arpl
repz
sub
ja
cmpsb
dec
push
fwait
movsb
daa
mov
add
cmp
and
test
push
push
and
out
mov
fdivrs
ficoml
lea
dec
movsl
fs
pushw
gs
fcoms
mov
xor
sbb
gs
jge
xor
jmp
in
xor
mov
in
or
sbb
dec
dec
sub
mov
jmp
mov
pusha
and
fistpl
ret
lahf
jle
fiaddl
mov
dec
stos
fwait
scas
xchg
sub
xchg
inc
adc
dec
repz
mov
xchg
dec
cmp
lock
push
adc
fldcw
dec
repnz
push
pop
test
dec
movsb
or
movsb
hlt
adc
fs
push
shll
dec
pop
lret
adc
and
or
and
or
cld
push
mov
ss
and
and
gs
enter
push
pop
js
inc
jne
stos
les
imul
add
add
ljmp
arpl
ret
loope
fmul
cs
mov
cmp
jnp
xchg
stc
lds
mov
lods
addr16
in
fs
cmp
ret
fsubrs
push
inc
inc
ret
out
pushf
add
fisttps
mov
add
jno
dec
cltd
notb
adc
psadbw
push
jne
xor
loope
lock
sub
or
int
dec
push
xchg
mov
and
xchg
or
jb
imul
jecxz
jo
aas
roll
pop
mov
sbb
lahf
xchg
push
cmp
scas
insl
mov
sub
icebp
pushf
sub
hlt
pop
pop
jnp
cmc
sub
mov
mov
out
jbe
les
test
out
test
fidivrl
ljmp
inc
jmp
hlt
pop
and
mov
inc
dec
cltd
out
sub
loope
and
loopne
jmp
repnz
cld
repnz
repnz
cmc
leave
inc
push
inc
out
outsb
jmp
add
inc
or
push
xor
movsl
cmpsl
enter
or
xlat
dec
in
out
gs
xchg
outsl
aad
aad
sub
loopne
mov
int3
cmp
scas
loopne
test
mov
inc
xor
xchg
jp
in
jnp
xorb
stc
hlt
test
lret
or
jno
ljmp
sub
inc
std
mov
imul
sbb
or
cmp
sbb
jno
lret
xor
imul
sbb
cmpsl
add
adc
adcb
mov
testl
loop
xor
imul
mov
xchg
sub
sahf
iret
ljmp
in
xchg
or
jae
and
inc
lret
lds
and
stos
cmp
lods
out
mov
lock
xor
adc
iret
push
xor
pop
ds
loope
mov
lea
jp
jns
jge
push
or
xor
addr16
stos
enter
sub
aam
push
mov
cmp
mov
ficompl
cmp
push
xlat
sub
imul
jae
jbe
jmp
push
test
mov
inc
xchg
xor
push
push
pop
sbb
cli
sarl
loop
fimull
lea
jae
mov
into
jb
cmp
cmp
pop
movsb
jnp
push
adc
push
enter
stos
std
loope
cmp
int3
push
js
pop
jo
jle
jo
or
arpl
clc
cld
sbb
push
mov
dec
xchg
jge
mov
jg
sub
cs
mov
ja
ds
jbe
jge
repnz
rcrl
inc
dec
fisubrl
lahf
pop
xchg
jecxz
pop
dec
loopne
rclb
iret
sub
shll
add
clc
dec
jne
testl
or
jl
xlat
pop
in
aad
ds
cmp
lret
faddl
jnp
mov
sar
sahf
stos
data16
cmp
in
pusha
loope
addr16
popf
mulb
add
ret
ds
push
inc
sub
pop
mov
cmpsb
jle
jno
and
testl
lds
ja
fldt
dec
aas
inc
mov
loop
jno
loope
sbb
je
xor
mov
in
in
sahf
pop
in
loopne
icebp
mov
mov
in
xchg
jecxz
push
push
movl
or
rclb
cmp
xor
cmpsb
or
out
jmp
repnz
xchg
sarl
xor
mull
stos
into
mov
and
adc
outsb
xchg
cmpsb
ror
cmp
xchg
sbb
fnstcw
adc
mov
outsl
dec
cmp
mov
sarb
push
outsl
inc
mov
mov
mov
inc
repz
lods
out
pop
dec
loop
ss
sub
or
jno
mov
testl
stc
ja
and
out
pop
sub
lods
fs
outsl
cltd
lcall
xor
jmp
pop
and
loopne
xor
push
rcrl
push
add
adcb
ret
cmpsl
out
ror
aam
rorb
inc
and
sub
and
mov
nop
mov
dec
jno
nop
pop
lahf
daa
mov
sbbb
xor
mov
gs
call
icebp
pusha
aas
jg
out
sub
mov
rorl
dec
xchg
jb
aas
xchg
sub
xor
pop
xchg
fnstcw
inc
lcall
xor
add
sub
or
push
js
clc
inc
add
ret
inc
jb
jmp
std
jns
fcomp
icebp
xor
adc
sar
push
outsl
aad
dec
mov
cmp
aam
shl
sub
push
pop
test
xchg
adc
ss
push
je
rcrb
addr16
nop
cli
pop
cmpsb
shrb
jl
shlb
push
xchg
xor
fisubl
stos
lahf
ds
mov
fwait
lods
es
ret
dec
daa
pop
mov
icebp
imul
pop
sbb
cmpsl
or
nop
dec
mov
scas
inc
das
fs
aam
test
jbe
xor
cwtl
sbb
cwtl
inc
mov
xchg
out
cmp
js
aad
addr16
jp
jle
les
in
repz
xor
aaa
les
and
xchg
xlat
shrl
lds
lds
inc
out
and
das
sbb
loope
xchg
and
mov
imul
dec
jge
loop
dec
nop
test
and
sti
mov
insb
mov
dec
mov
cmpsl
idivb
mov
xor
or
and
inc
lret
outsb
mov
mov
mov
test
iret
xlat
or
add
je
add
in
inc
ja
pop
adc
push
pop
lret
notb
hlt
js
dec
xchg
stos
push
fwait
loope
push
push
and
mov
es
outsl
pop
adc
add
gs
rorl
imul
fldl
push
ficompl
int
movsb
xlat
xlat
dec
popf
xchg
pop
shr
adc
orl
mov
arpl
repnz
add
mov
add
fcomps
ljmp
js
lds
ds
mov
or
divb
sbb
ss
sbb
add
imul
fisttpl
loopne
negl
mov
les
jne
add
fnstsw
pop
gs
mov
in
jns
jnp
pop
inc
mov
xor
adc
mov
adc
mov
xchg
nop
push
shrl
mov
push
inc
mov
push
cmp
xlat
or
sti
nop
xor
push
pop
pop
mov
push
and
jo
bound
arpl
icebp
ja
out
lret
clc
stos
add
mov
loope
fmuls
dec
loopne
fucomp
out
jecxz
std
mov
sub
jae
imul
dec
mov
aaa
mov
xchg
cmp
sub
lahf
push
notb
jo
out
cmp
rol
cwtl
dec
mov
lcall
pop
lock
mov
dec
mov
pop
inc
test
jge
out
mov
mov
mov
xchg
sub
ret
neg
je
and
dec
dec
xor
sub
mov
in
cmp
sub
pushf
push
cmp
enter
push
lahf
jle
icebp
dec
fisubrs
cmc
jnp
xor
cld
fadds
push
cmp
mov
inc
push
mov
div
sahf
test
push
and
insl
pop
push
test
lods
orl
aam
jno
imul
es
repnz
xor
jns
lock
mov
rclb
mov
lds
sub
inc
fnstcw
xchg
push
add
daa
sub
pop
jne
mov
adc
loope
aam
xchg
mov
das
sub
mov
movsb
mov
out
pusha
pop
aad
popf
xchg
jl
sub
mov
lea
fmull
sub
pop
loop
lods
mov
fstl
pop
cwtl
inc
outsl
scas
xlat
fidivrs
cmp
inc
xlat
les
dec
pop
stc
dec
cmp
mov
out
and
lret
push
inc
sbb
mov
test
rorl
jle
lods
movsb
mov
bound
test
int
mov
mov
add
xor
insl
xor
mov
pop
inc
bound
push
or
cmc
xor
fstps
jl
test
repnz
cmp
jle
mov
repnz
or
jne
call
push
imul
sub
in
jae
lahf
lret
or
ret
pop
ja
jae
test
pushf
xor
imul
scas
push
aad
lea
cmp
dec
mov
fmuls
add
es
popa
add
sbbb
jne
test
fsub
pushf
iret
push
bound
shll
test
popf
test
adc
testl
dec
sti
push
sub
cmc
inc
inc
push
cmp
jo
pop
inc
sbb
jns
cmp
add
outsb
mov
into
adc
lds
leave
adc
sbb
movsb
int
arpl
rcrl
cli
lret
lea
and
call
mov
movsb
arpl
movsl
ds
arpl
cld
and
sbb
pop
pusha
dec
repnz
xor
and
cmp
push
lcall
movsl
lods
adc
cmp
inc
das
test
fstpt
adc
inc
inc
sbb
lahf
mov
adc
cmpsb
push
cli
mov
mov
xchg
loopne
adc
push
adc
add
mov
dec
pushf
jnp
in
jle
outsb
add
add
ja
mov
aam
pop
xchg
andl
nop
cmpb
out
bound
movsb
stc
stos
sub
and
lods
mov
pop
stos
nop
and
pop
xchg
outsl
in
loopne
popf
mov
out
insb
sub
inc
sahf
dec
mov
sub
mov
aad
or
lods
insl
dec
addr16
fsts
rolb
fiadds
mov
pop
loopne
jnp
scas
ret
paddsb
cmp
sub
fdivrl
mov
mov
cli
bound
jl
adc
js
or
test
je
dec
cltd
movsb
iret
shl
sbb
clc
leave
mov
and
nop
orl
repz
add
lret
pop
adc
push
jb
fisubl
out
mov
js
add
dec
dec
and
iret
dec
lods
xchg
and
mov
pop
out
fimull
cmp
outsl
dec
push
xchg
and
sbb
lcall
dec
mov
fmull
push
and
xchg
pop
outsl
test
shlb
xchg
jb
inc
push
push
pusha
ljmp
jecxz
shlb
mov
inc
in
shll
inc
cmp
sahf
add
cmc
icebp
and
iret
cmp
lods
cmp
std
insb
inc
sub
add
push
fs
aad
ret
pusha
xor
dec
movsb
jns
cmpsl
adc
xor
push
rcrb
sahf
inc
jg
lcall
sbb
xor
jae
xchg
jecxz
add
cs
xchg
stc
mov
mov
mov
xchg
xchg
add
cltd
cmc
push
jne
pop
dec
ret
cmpsb
cmpsl
xchg
sahf
in
out
test
and
notb
cmp
cmp
pop
push
mov
add
inc
mov
icebp
dec
ja
push
aam
int
add
cmc
cmp
add
mov
mov
mov
cmp
lret
sbb
fmull
mov
adc
popa
xchg
dec
or
outsl
cmp
das
dec
jp
test
or
sbb
mov
inc
xor
inc
ja
inc
fxch
icebp
push
mov
sbb
inc
lds
pop
adc
scas
loopne
push
push
dec
cwtl
fcmovu
idivb
jecxz
cmp
lcall
sub
popa
sub
fwait
cmp
adcl
mov
dec
shll
loop
sbb
push
push
cltd
fs
mov
outsb
js
or
mov
mov
scas
cwtl
test
andl
inc
push
dec
std
push
pop
jmp
ret
std
jo
adc
insb
mov
jmp
divb
pop
aas
push
mov
jmp
movsb
dec
sbb
mov
int3
testl
dec
out
fcmovnb
jmp
jp
jb
test
jle
mov
mov
lock
pop
jnp
outsl
or
adc
pushl
cmc
ret
dec
cld
movsl
add
inc
jno
mov
loop
out
testb
sub
or
xchg
or
movsb
mov
mov
scas
mov
mov
dec
jno
cmp
push
sbb
xor
sarb
pop
test
push
lret
adc
pop
mov
stos
cltd
mov
cmp
loopne
cmpb
das
xchg
push
fwait
dec
movsb
push
into
jno
mov
xchg
insl
int3
adc
sbbl
mov
jbe
lock
pop
pusha
stos
and
cli
dec
inc
xchg
pusha
mov
xlat
stc
cmpsb
clc
test
addr16
fildll
jmp
add
pop
lcall
sub
lcall
sub
dec
aad
inc
bound
add
cmpsl
imul
shll
aas
xor
lret
xor
pop
movsb
cld
push
xchg
shlb
mov
adc
xchg
jp
imul
xchg
pop
xor
add
loope
or
in
fistpll
xchg
cltd
jae
cmpsl
in
adc
repz
adc
pop
cmp
mov
pop
adc
add
sahf
imul
and
ret
rcll
pushf
lods
jnp
test
mov
pusha
aas
mov
test
imul
sub
or
ss
into
or
xchg
and
hlt
aam
lret
aaa
push
ds
je
and
cs
cmpsl
in
int
inc
cmp
shlb
adcl
jb
fcmovb
mov
mov
out
mov
out
inc
push
pop
xor
movsb
mov
cltd
pusha
pusha
add
enter
adc
cld
daa
dec
sub
jnp
in
idiv
ljmp
idivl
rcll
stos
cmpsl
test
push
repz
adcb
std
fdivrp
xor
fistl
fisubrs
scas
lods
jns
lahf
mov
push
push
jne
loopne
sub
dec
std
adcb
inc
xchg
mov
push
adc
sarl
mov
std
shll
js
aas
dec
lea
sub
rclb
sbb
inc
push
inc
les
lcall
pop
xchg
ja
cmp
cmc
call
out
gs
and
push
sbb
iret
jmp
mov
std
ljmp
scas
test
pop
or
js
insb
xchg
cmpsl
mov
mov
ret
iret
bound
xlat
push
scas
sti
jnp
jbe
lret
dec
mov
push
push
mov
lsl
in
pop
sti
xchg
shll
lock
popf
cmp
mov
mov
mov
mov
scas
xchg
inc
and
stos
push
cmp
pop
pop
lret
je
mov
jge
jle
imul
scas
jp
subb
sub
aam
mov
xor
setne
sbb
add
adc
xchg
adc
addl
mov
test
pop
test
cmpsb
cmp
leave
adc
fwait
sub
pusha
lock
addr16
loopne
sbb
jne
aas
out
ret
lods
sahf
xchg
lret
mov
xor
lods
ja
hlt
xchg
mov
scas
stos
fs
lock
push
pop
mov
mov
pop
rcll
fbstp
filds
push
push
add
fsts
outsl
outsb
gs
lods
and
dec
sahf
pushf
in
cmpsb
sub
loopne
addr16
out
in
mov
push
test
inc
and
and
scas
ret
cmpsl
nop
into
fdivs
mov
loope
test
aas
aaa
popf
andl
scas
in
push
sti
mov
pop
mov
cmpsb
or
das
sbb
mov
rcrl
cmp
icebp
push
cmc
stc
pushf
or
push
movsl
cld
scas
sbb
ljmp
dec
lods
incl
dec
fisubs
out
jge
mov
test
jge,pn
inc
pop
jne
jg
xchg
inc
add
dec
jl
sar
int
test
sti
out
jmp
dec
notb
dec
mov
mov
jo
inc
jecxz
jbe
push
cmp
jl
leave
pop
lret
mov
ficoml
dec
pop
lret
sub
sub
cmpb
sbb
fisubl
lahf
pop
push
xor
jg
in
fsubrl
int
test
dec
pop
clc
pop
clc
xchg
test
fwait
cmp
jp
sub
sub
xor
in
cmp
pop
adc
lds
lret
shlb
mov
bound
psubq
xchg
xorl
xchg
jge
out
xchg
push
cmp
add
leave
push
mov
jecxz
mov
rcrb
add
in
rorl
jl
mov
jnp
imul
pand
jne
mov
lods
xchg
mull
sub
cmp
jns
push
fldz
push
or
subl
mov
test
jmp
xlat
adc
sub
pushl
subb
sub
or
lods
mov
mov
ret
mov
mov
repnz
out
mov
shll
cmp
cmp
int
xor
cli
sbb
mov
mov
pop
aam
xchg
hlt
jne
lret
inc
inc
stc
movsb
mov
js
call
scas
jb
inc
rcll
cmpsl
sbb
jmp
aam
fcom
fldenv
push
pop
push
and
xor
push
sahf
loopne
xor
jne
jg
pusha
mov
fcmovu
daa
pop
out
push
jns
push
inc
or
fmuls
adc
cmovs
mov
pushf
popf
mov
sbb
dec
adc
dec
adc
mov
lock
jb
mov
adc
mov
enter
pop
aaa
xor
and
push
popa
xchg
mov
xchg
outsb
cmp
push
or
and
test
xchg
mov
inc
imul
mov
add
clc
adc
cs
and
jg
xchg
jmp
push
stos
adc
popf
mov
sub
jo
sbb
adc
jmp
mov
lock
dec
push
add
les
and
loopne
dec
pop
cmp
dec
push
or
mov
and
fucom
or
daa
inc
call
xor
push
add
adc
ror
dec
dec
sub
iret
in
mov
push
inc
sbb
mov
sub
pop
cmp
lock
dec
icebp
ret
xchg
bound
loope
test
sbb
out
or
lahf
int3
or
andb
inc
loopne
aad
dec
and
pop
cmp
cmp
push
mov
pop
icebp
in
fnstsw
inc
insb
cmp
mov
jb
cmp
sbb
pop
aas
add
xor
mov
roll
aad
and
in
repnz
test
jae
mov
sub
jno
ds
call
cmpb
out
lods
inc
add
mov
cltd
popf
mov
in
idivl
clc
inc
call
out
xchg
inc
cs
jbe
call
xchg
pop
adc
mov
mov
jbe
daa
ja
jmp
jl
movsl
imul
call
popf
pop
and
gs
or
add
out
mov
mov
movsl
lods
pop
scas
outsb
lods
js
push
mov
sbb
jle
xchg
subb
pop
js
sbbl
mov
xor
sub
aas
into
or
add
pop
jl
lahf
fmul
add
xchg
js
call
int3
lahf
inc
in
fs
and
xchg
ljmp
dec
or
scas
cwtl
ret
daa
xchg
xchg
setns
mov
push
jne
pop
inc
cli
xchg
aaa
add
xlat
in
aam
jne
mov
mov
push
lcall
or
inc
push
scas
in
jmp
xor
adc
pop
test
movsb
xchg
sbb
push
jnp
mov
dec
mov
mov
scas
pop
lods
xchg
push
push
jge
push
insl
mov
or
nop
jle
and
insb
sub
repnz
and
sub
pop
pusha
pop
add
dec
sahf
mov
cmp
cli
dec
negb
mov
inc
and
xor
mov
cmp
nop
movsb
pop
jmp
pop
inc
rcr
mov
adc
adc
mov
mov
dec
xchg
imul
bound
hlt
cmp
scas
in
bound
test
loop
push
gs
insb
in
pop
out
add
push
cmp
fs
loope
roll
sbb
pop
inc
or
clc
sbb
push
xchg
mov
mov
or
loope
call
mov
inc
fidivrl
out
push
les
fprem1
pop
lret
pop
out
jb
inc
jmp
pop
inc
int3
fst
gs
aaa
sbb
push
lret
mov
fs
arpl
mov
or
test
fs
arpl
mov
jne
addl
push
loopne
xchg
sbb
jp
push
stc
enter
jmp
call
jns
lahf
jnp
imul
popf
cwtl
jno
sarb
in
sub
dec
test
stos
das
dec
dec
cmp
xchg
fwait
movb
add
and
sub
int3
movsl
aad
lcall
dec
daa
mov
mov
cs
out
or
into
pop
inc
mov
es
fs
out
pop
fwait
cmp
mov
aas
pop
jp
insl
push
jns
in
mov
pusha
fdiv
or
rol
jge
outsb
gs
xor
push
jno
fldenv
jno
mov
push
dec
xchg
mov
mov
test
aas
loopne
xor
pusha
cmp
fsts
imull
sbb
adc
in
jge
pop
cmpsb
mov
pop
pop
std
or
xor
mov
out
mov
popa
cli
dec
sub
addb
cmp
mov
xor
jmp
pop
fcmovne
mov
mov
leave
mov
jns
fdivs
lock
xor
inc
sbb
es
out
jns
int3
nop
mov
sub
jns
push
push
pop
pop
call
sti
dec
loopne
jne
test
mov
stos
cwtl
or
xchg
push
icebp
in
xchg
xor
fnstcw
in
push
pop
out
adc
pop
xchg
adc
mov
js
arpl
shlb
jle
dec
loope
neg
loop
inc
aad
jmp
lods
xchg
fidivl
mov
outsb
cmp
pop
jo
call
dec
push
pop
lods
pop
mov
push
fadds
push
cld
push
jecxz
cmp
xlat
data16
pop
pop
pop
je
dec
adc
and
sub
shll
or
fs
xor
hlt
jo
int
and
lods
repz
enter
xlat
ja
push
mov
fcompl
or
out
mov
sub
mov
sub
sub
sub
pusha
insl
test
out
sbb
mov
mov
lret
jmp
jg
mov
fnsave
cmp
or
inc
adcl
xchg
fidivl
mov
cmp
cmp
xor
pop
sbb
mov
adc
inc
jmp
sbb
daa
xchg
or
sbb
adc
jmp
jae
push
fistps
mov
or
jle
add
push
repnz
jno
int
out
popf
cmp
mov
xchg
push
mov
jno
incl
movsb
inc
adc
testb
sub
push
subl
scas
in
int
stc
imul
push
lds
jno
mov
js
cs
fs
cmp
pop
mov
bound
shll
lods
xchg
add
sbb
in
pop
test
or
insl
sub
sbb
cmp
ret
dec
adc
es
xchg
stos
scas
push
sti
test
mov
sbb
icebp
vunpcklps
lret
mov
push
xchg
sarl
lock
pop
jecxz
arpl
sbbl
cmp
cwtl
ds
lahf
je
push
stos
out
imul
enter
or
cmc
aas
sahf
jl
sub
lcall
stos
adcl
mov
xchg
jns
stos
lds
and
push
out
sarl
or
cmp
rcll
int
movsb
cmp
mov
or
test
xor
mov
cmp
lret
std
out
cs
jecxz
mov
xor
out
or
pop
stc
jbe
movsb
add
in
cmp
push
outsl
ret
insl
imul
jns
dec
xlat
rorl
out
mov
int
jno
nop
mov
ret
pop
out
cli
iret
jo
movsl
add
lea
jmp
adc
jecxz
outsb
insl
gs
mov
mov
xor
and
pop
andb
hlt
jnp
pop
and
inc
or
clc
pop
jle
popf
cmc
sub
mov
mov
add
fwait
mov
dec
sbb
add
ficompl
subb
jo
movsb
xor
mov
adc
mulb
dec
andb
enter
fcmovb
and
scas
adc
adc
push
jbe
xor
push
jl
pop
ret
add
scas
mov
out
gs
mov
sbbb
inc
gs
daa
out
ljmp
sbb
mov
jle
lahf
push
out
lret
movsb
fsub
and
ljmp
xlat
cmpsb
icebp
jne
push
jmp
xchg
sub
ffree
add
cmpsb
inc
loope,pn
jg
add
jecxz
addr16
mov
repnz
mov
jl
pop
mov
adc
cmpsl
test
adc
jl
imul
mov
fmuls
popa
and
pop
mov
sub
add
loopne
push
jbe
jmp
cmp
es
mov
pop
lea
dec
sub
lods
cmpb
sbb
push
sbb
out
dec
les
xor
imul
scas
dec
push
ss
lcall
jno
shrl
loopne
int
mov
mov
mov
push
xchg
pusha
mov
mov
adc
jmp
in
cmpsl
cmpl
cmp
das
fs
cs
dec
push
insl
in
cmpsl
and
gs
enter
pop
add
jl
push
incb
push
xchg
jp
rorl
pop
mov
mov
iret
sbb
xchg
cld
loope
into
pop
je
adc
or
mov
insb
in
mov
push
imul
test
je
aad
fwait
or
cmpsl
push
mov
jns
fwait
hlt
jl
add
jns
pop
sbb
cltd
out
loop
mov
cmpsl
cmp
or
pop
test
movsl
cwtl
xchg
adc
mov
add
pop
mov
jnp
sbb
add
scas
inc
mov
xchg
sub
insb
and
pop
and
xor
les
ds
icebp
mov
jns
xor
pushf
inc
aad
xlat
mov
mov
adc
shrl
sarb
fmull
xchg
clc
adc
jge
loope
addr16
shll
aaa
mov
cmp
test
jmp
sahf
ret
aas
fwait
push
shlb
call
cld
cmp
jnp
lcall
push
cld
sbb
or
int
sub
mov
sbb
xchg
dec
add
cmp
lcall
jp
jae
es
xor
cmp
sbb
jbe
fcoms
jle
test
inc
shl
sub
lcall
push
pop
out
jmp
inc
xor
xchg
ljmp
into
and
jns
jl
leave
test
cld
lret
xor
arpl
xlat
mov
xor
dec
add
aas
in
push
inc
aas
mov
push
rsqrtps
test
sarb
inc
scas
in
lods
nop
mov
pop
ss
jl
lcall
je
lods
enter
inc
int3
dec
xor
jg
push
push
dec
and
xchg
cmp
fwait
lret
mov
aas
enter
arpl
mov
fistpll
inc
ret
cmp
popf
sbb
adc
jns
mov
pop
cld
insl
lods
rcl
jle
es
or
pop
orl
enter
inc
stos
mov
popa
xchg
push
xor
ds
add
cltd
loope
sbb
in
jg
xlat
xor
adc
imul
out
cmp
out
repnz
cmpsl
or
xchg
mov
adc
xchg
dec
lods
pop
jne
rolb
aaa
and
in
repnz
lcall
pop
cld
xor
cltd
push
push
jp
mov
ss
and
lret
loop
ret
jo
popl
jl
fwait
out
pusha
ficomps
das
cmp
cwtl
das
adc
sbb
les
je
mov
or
adc
fadds
sahf
add
jbe
mov
cmp
fstps
jg
cmp
mov
xor
ret
andb
cmp
int3
mov
es
dec
mov
dec
sti
pusha
outsl
mov
push
lcall
loope
mov
jae
in
sub
in
fsub
jp
jnp
lods
shll
sbb
addl
insl
jns
mov
cmp
fbstp
mov
push
mov
out
pop
mov
xor
xchg
push
icebp
mov
xchg
inc
xchg
mov
stos
xchg
cmpsb
pop
idivl
pop
daa
lods
inc
xchg
out
push
movsb
fs
fsubl
jnp
xor
dec
fwait
xchg
push
and
jp
bnd
pusha
jo
mov
inc
loopne
sbb
and
shlb
loop
mov
adc
push
mov
or
push
in
adc
cmp
aam
cli
in
mov
inc
lds
push
push
sub
pop
nop
std
jo
enter
push
fwait
mull
rol
xchg
push
ss
and
xchg
xchg
dec
js
cltd
jg
mov
pop
push
inc
scas
fistpll
fadds
fisubs
loop
in
rcrb
jbe
dec
inc
and
orb
movsb
cmpsb
int
adc
sti
incl
mov
not
adc
popa
sub
jp
xchg
stc
push
lcall
scas
mov
std
std
dec
loope
xor
mov
mov
inc
pop
add
inc
jp
stos
mov
aaa
pop
adc
movsl
into
jbe
mov
mov
in
xor
sbb
ss
cltd
sub
mov
push
int3
setl
mov
jecxz
ficompl
inc
stos
mov
inc
xor
cmpsb
nop
dec
push
jmp
jge
push
lret
mov
cmp
mov
and
stos
dec
add
aam
pop
aam
pop
std
leave
xchg
mov
dec
inc
dec
shl
sub
jne
ror
in
mov
fucom
push
dec
cmpsb
pop
push
jecxz
xor
jmp
pop
out
mov
and
pop
cwtl
mov
sbb
jae
pop
push
mov
inc
enter
inc
out
push
data16
aaa
pop
js
or
fnstcw
mov
test
cwtl
inc
bound
les
je
adc
jnp
push
dec
fldenv
loop
pop
pop
mov
bound
adc
sarb
rcr
loop
lret
or
cmp
add
adc
jo
mov
mov
rolb
or
or
inc
xorb
imul
lock
data16
gs
sbb
in
mov
xchg
lahf
daa
loop
or
inc
pop
mov
arpl
aam
cmp
dec
js
xlat
pop
testb
cmp
xlat
mov
cmp
out
cwtl
stc
insb
in
daa
scas
push
mov
gs
push
mov
sbbl
cli
insl
bound
orb
in
xchg
in
mov
ja
jg
cli
shlb
lock
int
jnp
jno
sti
mov
faddl
jb
pop
pop
mov
lock
fnstsw
xchg
fldt
jg
scas
sbb
ja
adc
std
in
movsb
fldenv
fucomp
in
jecxz
jns
push
xor
inc
xor
mov
xchg
cmp
hlt
or
scas
cld
out
enter
push
loopne
adc
add
repz
loope
adc
pusha
add
and
jl
mov
adc
fmull
mov
insl
inc
dec
dec
cmp
add
mov
adc
lret
lods
add
cmc
outsb
mov
and
mov
push
mov
add
lds
add
sbb
addr16
push
mov
xchg
mov
xchg
pop
xchg
je
ds
sahf
data16
sti
mov
pop
out
cmp
push
pop
jmp
mull
cli
dec
mov
divb
or
xor
or
dec
xor
dec
fucomi
sar
scas
push
xor
adc
add
js
dec
pop
in
mov
add
push
daa
subl
inc
mov
in
cmp
test
aad
outsl
stos
das
les
push
mov
icebp
adc
or
mov
test
dec
xchg
or
shr
pop
and
ss
les
add
xchg
xor
repnz
inc
mov
mov
and
call
leave
mov
mov
jae
mov
sbb
das
xchg
jne
push
sahf
iret
dec
std
and
and
sti
insl
data16
pusha
cmp
popa
jae
dec
xor
leave
aaa
pop
test
roll
add
jp
fcoml
cmp
add
les
fistps
les
or
or
jg
pop
dec
dec
and
aas
cmp
jno
in
mov
xchg
loop
repnz
call
cmp
movsb
sbb
aas
cli
dec
fwait
jne
and
inc
roll
ret
shlb
pop
out
mov
push
test
xlat
es
iret
xchg
mov
arpl
outsl
hlt
cmp
pop
outsb
mov
pop
xchg
mov
popa
xor
pop
inc
fs
rol
jns
push
and
pusha
mov
cltd
enter
cmp
push
lea
jo
mov
pop
jns
inc
out
stc
sub
lods
mov
sbb
jg
stos
scas
das
mov
aad
out
dec
fs
push
fstl
xchg
fbstp
out
xchg
in
xchg
jb
cld
daa
leave
loopne
adcb
sarb
push
pop
jmp
shr
sbb
add
lcall
xchg
jmp
jl
out
addr16
loope
mov
lcall
adc
movl
mov
les
sbb
insl
or
adc
dec
xchg
or
lods
cmpb
mov
pop
xlat
adc
mov
popa
push
inc
pop
rep
arpl
in
rcrl
push
mov
mov
out
aaa
cmc
pop
out
or
cmpsb
jge
nop
fstpl
xor
push
notl
add
repnz
int
in
cli
fsubr
ficoms
outsl
mov
sahf
filds
aaa
testl
and
xchg
stos
dec
sub
mov
pushf
mov
iret
cmpsb
pop
outsb
jg
icebp
test
pop
shl
push
shl
je
gs
sub
sub
dec
dec
or
pop
cmp
mov
jp
inc
call
je
jecxz
push
fisttps
popf
pop
jno
mov
sbb
mov
and
mov
iret
cltd
xor
pop
xor
movsl
push
mov
add
divb
xchg
adc
pop
xchg
or
xor
inc
mov
sub
test
dec
jae
ds
cmpsb
cmpsl
sahf
push
push
mov
rcr
lret
nop
shr
cmp
inc
jp
and
adc
loope,pn
stc
dec
lods
jecxz
shrb
in
arpl
sbb
push
gs
shrb
js
mov
mov
jmp
adc
and
mov
adc
dec
rcl
gs
out
out
sti
cmp
adc
out
pop
or
orb
imul
push
insl
mov
and
les
jp
mov
mov
repz
mov
push
xchg
pusha
add
mov
call
pop
dec
mov
cmpsl
cmpsb
lea
xor
movsb
negl
lea
out
xor
mov
je
je
mov
xchg
popa
add
inc
lahf
sbb
sub
jle
jb
mov
jle
gs
js
pop
js
jae
popf
aaa
popf
xor
xchg
add
leave
add
orl
pusha
sbbb
push
cs
jo
inc
dec
out
shll
mov
insl
push
inc
jae
ss
and
dec
add
xor
pusha
jle
cmp
iret
sbb
stos
out
inc
xchg
mov
or
push
jp
xor
xor
fbld
sbb
lret
bound
pop
push
mov
mov
lret
ret
test
pop
mov
cmp
cli
xor
jo
mov
cmc
push
push
add
xchg
xchg
repz
xchg
mul
lcall
inc
jbe
ja
dec
pusha
mov
and
xorl
pop
inc
ja
aam
enter
stc
xchg
addr16
into
call
divb
lock
popa
ss
mov
and
lock
hlt
fsubl
jge
cmpsl
inc
rcll
test
gs
nop
les
cmp
mov
imul
jmp
out
test
xor
and
mov
jle
imul
sahf
lahf
sub
popf
loopne
jp
insl
aaa
ljmp
mov
popa
mov
sub
jnp
icebp
sbb
and
push
sub
orl
ret
inc
adc
pop
xchg
sbb
mov
imul
mov
andl
pop
lods
in
loopne
rorl
pop
insb
adc
cwtl
in
xchg
mov
xchg
jle
sbb
push
xchg
fsub
and
lret
insb
into
dec
add
sbb
ljmp
cmp
mov
jmp
data16
clc
mov
xor
inc
add
push
fiaddl
mov
sbb
cwtl
leave
pop
pop
or
ret
idivl
outsb
cli
sbb
jnp
cld
or
push
mov
stc
ret
jle
push
push
cmp
loope
clc
mov
cmp
mov
xor
fadds
mov
fwait
and
mov
sub
mov
lret
stos
inc
nop
and
call
arpl
sub
jle
sti
sbb
test
outsb
push
adc
pop
repnz
push
lock
fdivrs
xor
into
dec
push
hlt
gs
jecxz
jg
movb
imul
push
inc
xchg
sbb
dec
lret
stc
sub
mov
and
mov
cld
addr16
loop
popf
sub
bound
add
ja
scas
cmp
vmread
scas
xchg
in
xor
les
cmp
cli
clc
clc
out
xchg
mov
arpl
lds
shll
fnsave
lods
pop
add
leave
gs
sahf
push
test
lret
ss
mov
ror
inc
ret
das
cmp
sbb
push
shll
adc
rcrl
pop
je
cmpsb
pop
sbb
leave
xlat
cmpsb
adc
pop
cld
inc
push
rcrl
mov
rolb
cmpsl
mov
and
adc
mov
lahf
and
loopne
lcall
cmp
push
popf
sbb
cmp
ss
insb
or
or
or
mov
inc
int3
mov
int3
lds
ss
add
mov
push
xchg
daa
cmc
xchg
repnz
out
mov
jmp
outsl
stc
mov
dec
lds
cmpsb
jns
dec
adc
cltd
test
into
ret
inc
mov
cmpb
push
je
lock
test
pop
cltd
pop
inc
adcl
xchg
enter
xor
sbb
xor
fstl
insl
sbb
lods
cmpl
and
mov
fs
push
sbb
imul
ds
sbb
addr16
cmp
or
popf
mov
les
jae
rol
adc
cltd
push
jg
dec
pushf
insl
in
fwait
and
adcb
outsl
mov
xlat
mov
cmpsl
pop
sbb
mov
adc
adc
scas
jl
pop
fs
cmp
push
into
xor
loop
dec
jne
cmp
rcrb
mov
mov
inc
push
aaa
jo
dec
mov
and
nop
push
push
cmp
aas
cmpsl
enter
lods
push
jno
lds
data16
cs
pop
out
adc
xchg
push
lods
push
in
cwtl
push
les
mov
cmp
fimuls
mov
je
cmp
pop
int
lcall
aaa
mov
push
cmp
jno
clc
scas
and
jnp
pop
mov
mov
rorl
xchg
test
or
scas
sbb
push
scas
scas
scas
les
imul
xor
inc
lods
mov
jbe
xor
rsqrtps
rorl
inc
inc
dec
jp
add
jo
lock
pusha
cltd
inc
inc
out
lcall
and
movsl
push
mov
mov
call
movsb
pop
rcr
jae
test
sbb
roll
imul
fs
aam
call
inc
in
pop
scas
fdivl
testl
mov
ret
nopl
in
add
adc
mov
in
mov
dec
mov
mov
sub
or
aad
sbb
stos
popl
ja
sahf
add
xchg
cmpsb
sub
bound
jns
mov
movsb
movsl
sub
jbe
push
cmpsb
mov
add
and
std
inc
call
adc
mov
mov
fistpl
shll
jns
mov
xor
in
ljmp
and
pushf
sub
mov
int
fwait
je
inc
lahf
add
mov
movsl
mov
dec
addr16
xchg
inc
jle
mov
lds
jb
xchg
dec
stc
lock
push
fmuls
fiaddl
push
aad
rol
pop
mov
jp
dec
jbe
int3
adc
xor
sub
lret
lret
adc
pop
ljmp
mov
fiaddl
test
jnp
outsl
clc
ss
call
mov
outsb
popf
xlat
subl
xor
add
loope
adc
adc
sbb
pushf
adc
or
icebp
push
ret
movsl
mov
mov
sub
xchg
dec
filds
sub
jmp
push
xchg
xlat
push
mov
rorl
data16
rcll
mov
js
cwtl
je
inc
inc
mov
pop
adc
dec
lret
push
outsb
dec
insb
dec
mov
not
in
enter
cmp
lcall
adc
inc
je
cmp
mov
cs
sbb
cmp
jp
lret
aaa
out
inc
ret
and
push
pop
sbb
push
mov
or
push
jae
dec
mov
mov
fldl
sbb
cwtl
pushl
xchg
xlat
aam
out
jmp
nop
popf
dec
sbb
mov
ret
adc
mov
sbb
ficoml
push
hlt
xor
xor
xchg
mov
pop
pop
cmpsb
pop
cltd
scas
mov
in
pushf
jg
jb
and
sub
jmp
xchg
xor
mov
ja
jns
sbb
or
enter
lret
int3
repz
sub
shll
jb
cld
mov
mov
sub
pusha
mov
push
push
clc
pop
mov
leave
inc
lea
es
or
mov
repnz
shl
in
notb
sub
mov
fmull
and
sub
test
pop
jecxz
jb
loope
jbe
jnp
push
ja
sbb
and
mov
sbb
incl
stos
negb
or
loopne
pop
lods
call
mov
jbe
repnz
unpckhps
arpl
mov
pop
mov
push
pop
aaa
cmp
lds
sbb
jle
cmpsb
movsb
sbb
rcl
fs
rolb
pop
jge
fwait
mov
mov
arpl
sub
loope
fcmovb
ret
mov
cmc
das
add
lahf
data16
xchg
dec
xchg
push
ljmp
pop
jnp
push
mov
movups
adc
sub
sbb
shrb
popa
gs
xchg
pop
pop
hlt
jo
dec
push
stos
jmp
sbb
and
ret
pushf
addr16
in
mov
add
dec
cs
sub
fldt
sub
stos
or
xlat
repnz
fwait
push
mov
xchg
adc
dec
cmpsl
xor
pushf
cmp
enter
xchg
jae
das
shr
popa
xor
cwtl
jmp
xor
test
mov
push
into
lret
jno
adc
gs
imul
cmpsl
inc
rclb
xchg
data16
and
dec
sbb
movsb
faddp
add
xlat
jle
push
cmp
xchg
adc
or
xor
xchg
cmpsb
dec
aaa
out
jmp
xchg
pop
sbb
mov
imul
ds
lcall
mov
mov
nop
jmp
push
pushf
fs
lcall
xchg
sahf
push
inc
or
fstpt
cld
xlat
fwait
es
push
pop
pop
xchg
mov
or
aas
cld
cmpsl
insl
push
or
sbb
out
in
push
setns
xchg
mov
decl
or
ja
inc
lret
fnsave
mov
sub
lock
stos
test
in
or
stos
pop
sbb
testb
mov
inc
filds
cli
js
out
sub
test
fists
bound
inc
push
sti
mov
adc
cmp
inc
push
or
push
push
pop
inc
ret
fadds
pminub
cmp
mov
xchg
pop
xchg
cwtl
mov
repnz
xor
in
int
add
imul
mov
cld
dec
fwait
in
icebp
jns
leave
mov
mov
mov
mov
gs
cmp
call
test
std
xor
sbb
adc
cmp
or
ljmp
pop
dec
es
push
sahf
jo
inc
movsl
sub
dec
inc
cmpb
daa
dec
xchg
cmp
shrb
sub
fnsave
clc
cli
mov
sub
pop
aam
ss
testl
or
lcall
push
imul
lds
xchg
fs
aaa
xor
loop
or
ljmp
jnp
cmpsl
mov
push
dec
push
xchg
xchg
fimuls
dec
sub
push
aam
cmp
xchg
jge
mov
adc
cmp
jnp
repz
mov
test
pop
inc
rcr
inc
adc
inc
push
jns
xchg
call
cwtl
in
mov
repnz
jl
fwait
cld
xchg
lcall
test
pop
xor
jbe
call
pop
push
xor
call
outsl
mov
mov
ret
popf
out
imul
ret
adcb
hlt
ret
insb
push
jbe
or
cmp
dec
test
in
add
sub
nop
mov
fidivl
jb
ds
test
mov
ljmp
mov
dec
fsub
jb
aas
dec
aaa
pop
ja
mov
cmp
fsubl
scas
fldpi
jbe
push
out
out
ds
pop
nop
jne
aam
clc
adc
outsl
lret
xchg
cmpsb
daa
test
pop
sbb
add
mov
jnp
lods
test
mov
loope
mov
mulb
xorb
dec
shr
push
pop
inc
movsl
cmp
das
rcr
and
jge
mov
gs
icebp
push
xchg
xor
rcrb
xor
xchg
hlt
mov
pop
push
imul
push
add
rcll
cmp
dec
and
adc
mov
jb
xchg
mov
or
sub
push
inc
jne
imul
mov
jb
lret
jb
test
jmp
adc
push
jp
cmp
fwait
mov
dec
mov
sbb
jo
pop
or
xchg
jo
jb
or
push
pop
dec
fdivl
mov
addr16
mov
mov
fs
or
jp
mov
aas
inc
lcall
xchg
into
in
or
mov
dec
jne
add
es
cmpsl
shlb
pop
lcall
mov
sbb
cmp
stc
and
int3
or
imul
push
sahf
clc
je
cmp
shrb
inc
lods
mov
into
test
jmp
or
dec
pushf
xchg
mov
jo
movsl
stos
mov
pop
dec
mov
fldenv
fadds
jp
pop
iret
push
pop
adc
mov
jg
dec
out
and
bound
in
inc
loope
cs
mov
clc
ficomps
inc
mov
dec
cmp
and
mov
pop
or
into
adc
mov
ljmp
clc
mov
scas
ja
push
xchg
xor
leave
fcompl
pop
adc
xor
cmpsb
je
add
fs
dec
xchg
cli
cmc
mov
shlb
cmp
pushf
or
bound
mov
cli
cmpsb
sarl
mov
pop
jo
stos
test
aaa
mov
jmp
mov
pushf
and
adc
xchg
add
mov
lret
or
xchg
sub
sub
mov
xchg
sub
scas
pop
dec
out
or
lea
jg
popa
jmp
mov
addr16
das
testl
push
or
cli
iret
imul
fincstp
test
jne
and
dec
inc
mov
test
pop
ret
shlb
sub
sub
mov
sbb
jg
lahf
fists
lds
add
ffree
mov
pop
mov
in
xchg
push
lret
shrb
scas
cmpb
lds
sub
dec
sarb
or
outsb
push
xchg
push
mov
cmc
arpl
popa
or
pop
xchg
es
or
jae
lahf
aam
and
xchg
pop
sub
test
jbe
mov
sub
lret
push
mov
push
int
pop
getsec
mov
mov
lds
xchg
jp
mov
arpl
pop
pop
or
mov
in
adc
jnp
into
outsl
mov
sub
xlat
or
outsl
rcrl
inc
ret
xchg
and
ficoml
add
push
addr16
bswap
push
sbb
addr16
xlat
inc
gs
jno
push
shrb
pop
in
sub
xor
mov
test
mov
pop
pop
cs
pop
leave
xchg
aam
sahf
or
mov
lds
sub
dec
test
imul
cwtl
sub
jbe
loopne
lock
push
stc
sub
shll
leave
out
repnz
outsb
stos
fwait
repz
fmul
pusha
fbld
loopne
cmp
nop
sbb
nop
xor
jnp
in
cmp
sbb
ljmp
mov
popa
clc
pop
xchg
mov
mov
cmp
cmpl
cmpsb
aaa
mov
xchg
dec
shlb
ljmp
repz
fists
push
and
aaa
ss
push
cs
mov
inc
jmp
insb
mov
test
stc
mov
insl
push
shlb
cmp
aaa
or
lret
adc
adc
cmp
mov
pusha
in
fwait
stos
xor
and
xchg
jno
jns
into
arpl
add
jbe
test
aas
ljmp
fldcw
or
jne
fldcw
and
lret
loop
test
cmp
dec
pop
outsl
fdivrp
cwtl
mov
xor
jae
and
cli
fimull
push
ret
jne
idivl
lcall
mov
shlb
push
push
fwait
lahf
notb
pop
repnz
mov
sub
gs
lcall
hlt
mov
pop
out
jecxz
lahf
or
int
push
test
pushf
mov
fwait
add
dec
call
addb
pop
mov
cmpsb
adcl
inc
jmp
jo
adc
lock
out
jle
loope
or
add
xor
cmpsb
mov
insl
inc
push
pop
lds
cmp
pop
xchg
es
mov
cli
add
push
dec
pop
and
rcll
add
fldcw
enter
mov
xchg
mov
fdiv
mov
icebp
ficoms
sub
and
pop
jmp
nop
cltd
test
test
test
inc
pop
test
xchg
cmpsb
jns
cli
cmc
aaa
arpl
push
lret
loop
jb
lret
dec
jbe
push
hlt
pop
sbbl
push
lahf
pop
pop
das
sbb
adc
mov
out
sbb
ffreep
adc
les
movb
negb
icebp
iret
cmpsl
std
mov
xchg
sub
push
dec
add
cmp
push
fbstp
iret
cs
aaa
sti
cmp
jle
popf
cmp
pop
lret
in
clc
out
int
and
cmp
xchg
pusha
xchg
fisubrl
bound
cmp
repnz
lds
add
out
ret
jecxz
sbb
mov
in
pop
xor
sub
scas
daa
sbb
in
jb
js
mov
push
ret
mov
pop
lds
aaa
std
pop
lods
mov
test
mov
shll
rcll
xchg
rorb
sbb
pop
out
pop
int
jae
add
out
pop
lds
je
loopne
inc
inc
sub
rcl
sbb
popf
mov
mov
mov
lahf
pop
cltd
in
sbb
jbe
and
add
jno
sti
clc
test
ret
cwtl
adc
leave
xor
in
mov
dec
or
xchg
and
cwtl
jne
subl
jbe
inc
jecxz
in
out
pop
cmp
push
pop
test
roll
test
push
dec
fsts
in
cmovno
roll
std
cmp
sub
fsubrl
cs
rolb
xor
sbb
ret
cmp
adc
int3
stos
mov
mov
dec
mov
ljmp
mov
cmc
test
mov
mov
adc
shl
rolb
inc
rcrb
pop
mov
fs
repz
in
movsl
sbb
insl
push
lea
mov
mov
jb
push
in
or
dec
rcr
rorl
std
rolb
daa
jp
and
repnz
jl
aam
mov
or
out
stos
mov
in
pop
dec
add
aad
jbe
out
jns
or
mov
adc
movsb
cmp
repz
sbb
sbb
faddl
stc
jecxz
je
inc
or
inc
xor
les
cld
roll
sub
adc
imul
pop
pusha
sbb
or
pop
in
jecxz
scas
cmp
jns
loope
popa
mov
mov
inc
cmpsb
into
xor
enter
std
cltd
mov
adc
xorb
lahf
sub
in
repz
xchg
test
iret
pop
inc
std
mov
push
cltd
ljmp
and
add
push
add
lret
in
ret
push
mov
pop
ds
cmp
sbb
xchg
jge
jl
pop
xchg
pop
lcall
das
add
test
dec
ficomps
leave
nop
idivl
xchg
out
test
sub
sub
xchg
les
mov
adc
mov
adc
adc
dec
dec
sbb
pushf
inc
add
movl
cli
mov
hlt
dec
mov
mov
lods
sub
aam
cmp
dec
or
test
lock
shlb
sbb
popa
shlb
mov
cmp
inc
lahf
cltd
cmp
out
loop
out
push
sub
icebp
stos
fmuls
and
adc
nop
out
xlat
cmpsb
hlt
and
mov
jg
cmp
jle
add
push
lock
fdivrl
sbb
or
cltd
gs
push
inc
rcrb
repnz
add
push
or
nop
shrl
xlat
stos
mov
pop
mov
nop
repnz
lcall
add
lret
popl
dec
xchg
cmpsl
mov
xchg
addb
push
cltd
fwait
pop
inc
jnp
add
dec
mov
xlat
add
sbb
sub
and
std
and
dec
sub
das
cmc
sarl
es
inc
and
or
and
test
xor
fidivrl
sub
dec
adc
aaa
sub
icebp
lods
push
out
cli
jo
imul
cmpsl
inc
lds
cmpsb
jno
push
jb
outsl
movsb
lahf
lock
sti
out
lss
pop
sbb
fldcw
dec
push
mov
inc
push
add
push
fbstp
cmp
sub
repz
das
bound
lret
cli
fsubl
data16
aam
push
xchg
scas
lock
das
in
mov
in
cmp
dec
or
push
insb
sub
ljmp
jl
mov
out
scas
and
fs
ret
mov
lods
mov
pushf
dec
repnz
icebp
mov
pop
cld
es
mov
icebp
fldl
mov
jge
mov
jle
shll
sti
stos
push
add
xchg
mov
in
mov
push
ret
sub
dec
push
xor
call
testl
push
add
pop
out
jns
lods
pop
xchg
adc
xchg
dec
pop
mov
add
inc
pop
insl
inc
loope
popf
ret
rcll
aas
test
out
call
mov
adc
fcoms
in
pop
lds
hlt
lahf
enter
mov
xchg
not
xor
outsb
enter
jns
pop
jbe
cmc
jp
orb
sbb
ljmp
dec
or
mov
sbb
stos
dec
popf
adc
outsl
out
repz
imul
fildll
and
xor
bnd
lea
pop
xor
cwtl
pusha
push
dec
rorl
pop
sub
stc
lds
mov
xor
shrl
jecxz
adc
xchg
xchg
xlat
fildll
lcall
call
push
and
fiadds
xchg
bound
xchg
mov
mov
shr
jb
jae
sub
cmc
clc
cmp
gs
stos
dec
shll
iret
jle
xor
and
pop
loopne
int
cmovge
loop
sahf
lods
inc
inc
jge
insl
insb
ja
loop
push
enter
sub
and
add
pop
inc
cmp
sahf
jmp
push
shr
push
aad
faddl
in
jne
cs
das
mov
lds
mov
pop
std
into
sub
clc
mov
popa
and
out
fsubrs
out
sub
jno
lcall
dec
movsl
fwait
push
xor
pop
insl
call
jecxz
mov
subl
cmpsb
mov
loopne
ljmp
pop
or
jno
xchg
dec
pop
js
dec
sbb
leave
ret
aas
leave
mov
xchg
mov
inc
dec
dec
or
addr16
mov
xchg
lret
adc
hlt
jge
and
popf
xlat
push
or
or
or
cmpsb
mov
sub
xor
ja
mov
jbe
adc
arpl
and
test
push
jmp
pop
fnstsw
inc
adc
cs
int
lea
sbb
jns
push
lret
aas
enter
mov
sub
mov
imul
idivb
rclb
add
pop
idivl
xchg
in
jg
lcall
cmp
inc
bswap
inc
pop
pop
mov
mov
jmp
outsl
pop
adc
mov
shlb
jecxz
fcoms
sub
jo
push
cmpsl
jb
repz
mov
sahf
jge
div
cmp
jbe
cmp
mov
pop
fcomp
or
negb
pop
sub
pop
fwait
lods
outsl
sbbl
sarb
xchg
arpl
cwtl
imul
adc
test
sbb
mov
pushf
push
fnstenv
inc
add
cwtl
lret
cmpsl
bound
out
jo
rol
and
adc
cmp
push
ror
out
out
lcall
push
add
jnp
add
xchg
xchg
and
jge
movsb
sbb
jmp
lcall
movsb
vmread
in
jne
rolb
pusha
jmp
dec
inc
movsb
mov
sbb
mov
adc
xchg
roll
sub
jne
in
xchg
js
add
iret
sbb
mov
stos
stos
jo
push
loopne
aam
jg
in
cmpsb
xor
mov
mov
dec
and
jnp
sti
leave
jmp
xor
mov
in
addb
cmp
jno
gs
inc
and
jmp
adc
sub
testb
push
push
add
dec
repz
push
xor
xlat
adcb
nop
out
inc
xor
pop
stos
push
mov
push
push
aas
xchg
push
push
inc
mov
rcrl
pop
inc
mov
pop
mov
mov
jae
sub
mov
dec
xor
popf
fwait
mov
lahf
adc
adc
sbb
jnp
or
xchg
adc
cmp
ror
push
stc
out
dec
xor
cmpsb
lahf
pop
outsl
mov
mov
js
out
push
test
cmp
ret
sbb
into
mov
je
mov
addr16
xchg
pop
adc
pusha
mov
dec
lret
add
jle
jns
or
les
out
imul
pop
xchg
cmc
pushf
sub
sbb
mov
or
inc
lahf
mov
add
test
push
and
jns
imul
daa
pop
mov
inc
add
push
mov
ss
pop
int3
dec
movsb
enter
pop
sbb
xchg
adcb
call
das
aaa
adc
pushf
test
rorl
mov
pop
div
mov
lahf
xor
adc
popf
bound
jmp
bound
mov
loope
jl
outsb
test
mov
dec
cmp
subl
push
cwtl
jmp
in
xchg
cmp
push
scas
inc
shlb
jno
fmull
jns
sub
test
jne
add
pop
movl
xor
loop
xor
les
mov
cltd
xchg
sub
push
repnz
mov
fwait
xlat
lret
aam
mov
dec
fisttpll
sub
lds
inc
xchg
push
or
test
sahf
cmpsl
push
push
or
push
cmp
lods
in
inc
pushf
adc
cmpb
ficomps
lret
movsl
clc
pop
xor
addl
jne
push
int3
fbstp
xchg
cli
inc
mov
clc
mov
xlat
xchg
fstpl
loop
jns
mov
test
mov
sub
pop
cwtl
pusha
fistps
mov
insl
out
pop
jns
les
js
in
and
jae
icebp
rclb
loopne
jae
sub
les
popa
fdivrl
inc
js
leave
es
cmpsb
push
push
mov
pop
mov
icebp
push
sahf
mov
jg
loopne
push
push
out
cmp
shll
pop
push
adc
decl
sub
adc
mov
xor
jecxz
jecxz
lods
flds
pop
xchg
movsb
mov
jo
das
dec
fcomp
push
jge
inc
dec
in
fmull
push
push
jp
lods
js
jle
mov
in
push
push
les
push
mov
fcoms
mov
jnp
mov
and
adc
adc
lods
cwtl
push
negl
xor
mov
jns
stos
xor
cld
dec
sbb
push
pop
imul
test
ds
add
fnsave
imul
push
popa
mov
cli
push
jge
popf
enter
sub
jo
or
icebp
jae
sbb
das
cmp
jo
loope
rcrb
orb
or
push
int
sub
in
movsl
lcall
jb
aam
xor
cmp
pushf
fxch
adc
faddl
inc
dec
jne
inc
bound
test
jne
pop
cs
mov
test
xchg
test
add
sahf
ss
mov
into
dec
pop
imul
mov
fwait
addr16
daa
xchg
or
clc
xchg
arpl
lret
push
mov
pop
addl
outsb
sub
lret
jbe
cmpsb
or
movzbl
pop
insb
repnz
dec
fcoms
pop
mov
fidivrl
mov
ret
sbb
cmpsl
cli
addr16
jo
xlat
insl
and
lret
push
rcr
inc
minps
in
pminub
add
or
pop
in
mov
ret
pop
mov
pop
cmpsl
lea
cmp
lcall
mov
cmp
cmc
hlt
arpl
pop
in
add
insl
jg
popf
add
das
enter
addr16
xchg
pop
inc
lcall
jle
imulb
inc
aad
mov
enter
mov
add
repz
adc
or
mov
push
adc
sub
xchg
loop
fs
mov
stos
aam
sbb
xchg
and
fdivl
icebp
fs
xor
sub
mull
aas
test
fcoml
sub
imul
sub
ja
cltd
or
psubb
stos
cmp
setne
jecxz
pop
mov
inc
pushf
stos
fistl
cs
push
adc
in
and
je
mov
dec
and
leave
repnz
mov
or
inc
and
mov
inc
push
dec
dec
test
mov
lret
jmp
jno
jns
inc
or
inc
xor
xchg
in
add
or
mov
mov
arpl
jle
jno
mov
sbb
out
out
mov
and
popa
ret
icebp
mov
dec
adc
mov
pop
jg
xchg
push
adcb
stc
dec
out
pushf
lds
js
xchg
mov
push
aaa
in
lods
scas
cmp
push
pop
add
xchg
xchg
pop
add
in
arpl
and
push
jno
mov
xchg
fmuls
popf
aam
scas
pop
movsl
cmp
rcrl
loopnew
repz
xor
adcl
jp
pop
in
sbb
lret
add
pop
mov
mov
lds
in
xchg
mov
inc
test
dec
or
sahf
mov
lret
imul
cmp
fstps
jmp
outsl
or
cmp
add
and
push
mov
sbb
scas
out
or
in
inc
mov
ret
xchg
adc
cmp
push
movsl
sub
xchg
adc
pop
add
jb
lcall
or
nop
lods
or
mov
dec
jmp
out
mov
fsubl
je
daa
lds
jmp
adc
or
dec
loop
inc
jge
adc
repz
push
push
les
mov
cmp
push
or
cmc
test
out
mov
ja
inc
call
jp
into
cmp
fidivrl
and
jae
mov
push
mov
adc
imul
sbb
cmovbe
out
insb
out
icebp
sar
xor
pushf
sbb
or
lock
pop
fistpll
lock
xorl
dec
in
into
inc
xchg
repnz
jne
push
jg
xchg
cmpsl
ljmp
xchg
lret
xorb
xor
data16
es
jno
mov
into
jb
add
shlb
or
mov
mov
jmp
cmp
idiv
and
popa
repnz
test
add
lds
xor
dec
push
mov
nop
lea
rolb
daa
loop
add
ds
mov
cltd
adc
adc
dec
adc
dec
cld
adc
xor
cmc
add
xchg
dec
push
into
sub
or
ds
lcall
adc
dec
add
sti
inc
push
xor
sbb
inc
jmp
push
xor
je
mov
leave
inc
in
adc
iret
fldcw
cmp
add
xor
dec
mov
ffree
sbb
ss
shl
sbbb
cmc
imul
nop
jb
cld
sbb
mov
jle
pop
sbb
pusha
arpl
in
int3
xchg
mov
sbb
iret
icebp
in
sbb
add
aas
pop
sub
loop
add
cmp
sti
sbb
push
jl
fsts
sbb
add
shlb
test
std
adc
dec
fiaddl
pushf
in
sub
inc
sbb
jge
loope
clc
xor
outsb
arpl
xchg
retw
inc
cmp
andl
jb
push
cmp
stos
mov
sti
sbb
adc
dec
jmp
fwait
inc
popf
mov
and
add
mov
mov
push
shr
bound
jle,pt
fistpl
xor
mov
out
das
or
pop
push
ret
cmp
daa
sti
mul
imul
and
adc
sbb
inc
jae
or
xchg
hlt
cmp
mov
fdiv
ror
arpl
mov
lds
mov
adc
jle
outsb
xor
mov
push
pop
mov
push
jae
pop
mov
out
mov
jg
mov
test
lcall
mov
stc
xchg
mov
push
pop
adc
xchg
hlt
insl
dec
fdivrs
xor
arpl
xor
ss
pop
out
xchg
jle
sub
icebp
stos
dec
add
xchg
push
jno
jnp
add
jmp
insl
out
and
insb
pop
or
nop
shrl
fldenv
inc
fs
out
jb
arpl
mov
scas
push
adc
stc
insl
push
xor
aaa
add
imul
sbb
fcoms
or
loope
push
jg
and
lahf
sbb
add
xor
ljmp
imulb
push
in
fucomi
and
jae
mov
aam
out
xorl
push
and
repnz
out
xor
jae
ss
std
mov
sahf
in
xor
jle
cmc
out
jge
jg
stc
iret
xor
mov
test
and
or
and
enter
sbb
jge
pop
or
lea
cmpsl
lock
mov
and
dec
pop
rcrl
in
pop
or
outsb
or
in
call
pop
mov
dec
lock
dec
dec
adc
lahf
popa
sahf
pop
cmp
jbe
ljmp
cwtl
fstpt
push
shrl
xchg
mov
test
add
pushf
xchg
mov
push
fnstcw
mov
orl
pop
xchg
mov
xor
out
cs
sbb
and
jmp
jo
leave
jp
idivb
mov
push
imul
add
add
pushf
mov
dec
push
lds
ss
out
call
push
or
add
sub
scas
mov
jmp
test
jecxz
mov
jle
dec
jp
dec
mov
jo
adc
bound
cmp
shll
sbb
push
mov
icebp
es
inc
jno
or
fcoms
fstl
pop
xchg
mov
sub
adc
push
mov
xchg
fidivl
jo
mov
pushf
jae
cmp
cli
dec
fbstp
arpl
dec
jp
pop
ret
sub
ds
sbb
pop
lods
das
xorb
cmp
sbb
mov
addl
scas
addl
in
xor
call
test
xor
sbb
xor
or
xor
and
pushf
xor
mov
andb
shlb
jnp
xchg
inc
xchg
push
mov
and
cmp
or
imul
jns
gs
push
roll
dec
mov
js
rorl
rclb
aaa
paddusw
sub
dec
cmp
out
inc
pop
movsl
sub
jecxz
into
out
mov
pop
cmpxchg
mov
stc
dec
pop
je
dec
fiaddl
or
fidivrl
es
jne
xor
xchg
inc
pop
mov
push
mov
in
adc
jl
xchg
and
cmpsl
std
imul
dec
jne
mov
lods
dec
and
inc
lret
mov
popf
push
fsin
lea
dec
rclb
xchg
cmc
jbe
lahf
das
xor
mov
in
add
xchg
jns
adc
icebp
mov
or
aam
mov
lcall
fsubl
data16
xor
mov
dec
xor
pop
into
cmp
lret
jge
rclb
push
xchg
in
adc
adc
movsl
fimuls
xchg
jne
test
sub
mov
inc
popa
sti
hlt
xor
je
mov
cmpl
inc
cmp
add
mov
push
push
mov
push
sahf
and
shrl
jl
mov
and
push
loopne
fnstcw
out
imul
xor
inc
adc
std
pop
mov
cwtl
lock
cld
mov
push
xor
cli
fists
mov
sub
movsl
pop
add
ja
lret
push
and
cmp
jmp
jns
loopne
inc
sbb
push
jg
add
sub
mov
sub
add
rcr
cld
sarb
push
pop
imul
mov
cmp
int
add
push
jno
into
enter
and
jns
insb
adc
xchg
fs
mov
jmp
or
cwtl
xor
scas
fs
es
pop
fdivrl
and
outsl
cmc
ss
pop
repnz
xchg
push
rclb
mov
mov
dec
cmp
fstpt
jo
scas
push
sbb
aad
push
lds
test
adc
and
adc
cli
clc
in
or
mov
out
loop
popf
and
ret
or
mov
pop
cltd
add
lods
xor
jl
pop
inc
jp
sub
shll
sub
mov
or
mov
xor
mov
icebp
call
daa
inc
pop
mov
and
push
mov
mov
and
mov
rcrb
xchg
push
adc
mov
adc
loopne
mov
push
mov
sub
fstpt
mov
icebp
fisttps
and
push
in
jp
mov
xlat
out
test
sub
negl
les
sbb
add
daa
pop
fisubrs
push
sub
stos
mov
mov
push
aas
stos
mov
icebp
cmp
jmp
shl
mov
jno
mov
mov
dec
push
jmp
arpl
jge
and
sbb
add
pushf
sbb
sbb
aaa
mov
popf
cli
jbe
mov
mov
pop
notl
dec
dec
or
lock
jmp
pop
jg
cmp
and
icebp
push
outsb
mov
adc
scas
or
bound
stos
lea
movsb
adc
mov
fdivr
call
in
mov
mov
std
add
inc
fxch
aas
xor
inc
xchg
sub
sti
dec
inc
cld
xor
out
push
out
xor
repnz
or
testl
mov
lea
popf
jns
sbb
and
add
inc
ds
int
inc
cmp
pop
fldt
loop
sbb
and
dec
cmp
inc
sbb
or
mov
mov
fst
iret
ds
and
mov
sbbl
daa
bound
ret
xlat
repnz
dec
dec
popf
push
cmpsl
jp
lods
cmp
inc
jecxz
xor
testb
dec
scas
aad
insl
scas
enter
out
aaa
daa
mov
inc
daa
add
cmp
xchg
jmp
repnz
sbb
ds
pop
mov
in
add
mov
and
push
fpatan
pand
in
lods
mov
js
pushl
jmp
adc
inc
orb
movsl
pop
adc
dec
mov
inc
lret
fs
pop
fdivrl
cmp
aad
or
mov
movb
cltd
adc
sbb
cmc
xor
aad
xchg
leave
scas
inc
hlt
lea
xor
insl
pop
mov
adc
stc
push
std
pop
sub
mov
inc
iret
jnp
pop
shr
dec
sub
or
cmp
out
jnp
cltd
lret
mov
out
cmp
outsl
outsl
jne
jmp
ja
dec
xlat
rclb
mov
nop
and
sti
or
insl
fldenv
lcall
cwtl
adc
into
adc
aas
aaa
incb
int3
pop
push
loope
add
mov
jle
dec
and
out
sub
popa
pushf
cs
push
adc
hlt
push
jp
mov
gs
fcomip
sbb
movsl
das
addb
int
je
jnp
aas
mov
fucom
pop
imul
lret
scas
mov
pop
sahf
ret
pushl
jge
les
add
xchg
sbb
mov
aam
test
push
add
sarl
cmp
inc
test
mov
loop
pop
dec
pop
dec
rclb
xor
ret
pop
sbb
lods
mov
jb
or
int3
pushf
push
cltd
leave
sub
dec
in
pushf
and
pop
xchg
sbb
pop
cwtl
daa
out
cmp
stos
mov
fcmovne
cmp
jns
xchg
and
lods
or
or
and
mov
mov
fldenv
stos
or
mov
mov
leave
lahf
icebp
fidivs
ja
sub
in
fwait
out
loop
sbb
jge
sub
jge
repnz
dec
dec
or
mov
cltd
movsb
inc
or
scas
and
adc
movsb
fistps
sub
std
mov
pop
sub
cmp
insl
push
hlt
xor
jl
hlt
lds
mov
mov
mov
clc
mov
mov
fbstp
xor
mov
jecxz
xor
jge
and
loopne
popa
push
push
outsl
daa
faddl
xchg
xlat
push
lods
jb
arpl
bound
in
jecxz
jmp
shlb
inc
cmpb
sti
add
xor
dec
push
icebp
cmpsl
cmovnp
stos
loopne
jl
xchg
mov
in
icebp
mov
fistpl
mov
lea
push
ljmp
xchg
sbb
lods
fneni(8087
sub
add
or
in
and
mov
pop
enter
pop
push
push
faddl
cmp
inc
pop
xchg
scas
iret
mov
insb
into
inc
ljmp
and
mov
sub
inc
cmpsb
sub
jno
adc
jmp
sub
cmp
test
paddusb
and
movsb
adc
pop
xchg
adc
mov
lcall
insl
push
movsl
nop
mov
outsl
or
insl
enter
in
movsl
jmp
and
push
xchg
xor
gs
addr16
jp
fsubrl
and
adc
push
xor
stos
or
mov
mov
pop
ds
pop
scas
repnz
cmp
rol
sub
andl
inc
sahf
jmp
repz
mov
xor
push
push
cmpb
push
lods
in
adc
xor
ret
mov
in
sbb
ds
adcb
dec
push
dec
in
sub
xor
or
mov
push
mov
in
aad
ljmp
jmp
jg
out
lea
jle
cmpsb
fdivrs
dec
orb
jle
pop
test
xor
add
pop
adc
xchg
pop
insl
ret
loope
mov
icebp
mov
adcb
or
cmp
out
mov
adc
aam
mov
adc
xchg
inc
pushf
lods
movsl
and
mov
inc
ja
jb
jb
arpl
lds
out
in
movsb
loop
in
add
push
pop
out
pop
ljmp
lds
adc
jg
test
fldl
mov
std
imulb
scas
sbb
xchg
xor
mov
sbb
sarb
in
insl
test
pop
pop
inc
ret
jns
push
push
lret
cwtl
push
adc
loopne
or
sub
pop
call
sbb
in
mov
add
xlat
pop
pop
xchg
loopne
gs
je
in
xor
mov
daa
inc
and
ja
rclb
adc
mov
mov
lods
dec
xchg
loope
ja
sbb
inc
ja
cmp
xchg
pop
mov
ret
pop
sti
sbb
repnz
add
jge
mov
mov
movsb
in
hlt
sahf
ljmp
pusha
pusha
add
imul
xlat
mov
cmp
pop
js
jmp
mov
xchg
sahf
or
stc
movl
into
xor
and
xor
adc
sbb
test
mov
aam
push
add
jb
push
test
sbbl
jbe
das
adc
ja
jae
mov
and
mov
addr16
push
imul
push
int
cltd
pop
clc
mov
mov
inc
xchg
adc
vpackssdw
mov
shrl
sbb
xor
xchg
and
out
in
xchg
int3
mov
mov
mull
addr16
div
std
nop
and
aam
dec
mov
lods
jecxz
cmp
pmuludq
pop
testl
xchg
ss
dec
mov
mov
and
outsl
out
jbe
inc
cmp
insb
jecxz
js
sub
aas
lahf
out
iret
dec
mov
push
ljmp
sub
xor
push
rorl
or
ss
jecxz
jmp
xor
sbb
andb
pop
mov
push
adc
cmpsb
jg
push
in
add
xorl
and
or
mov
js
xchg
arpl
sti
add
incb
scas
push
dec
outsb
and
int
fsubp
daa
int
sarb
push
cs
roll
and
addb
repnz
jmp
enter
adc
in
je
mov
flds
dec
addr16
mov
mov
dec
sahf
push
insb
popa
xchg
frstor
xor
lds
scas
sbb
je
adc
cmpsl
iret
and
cmp
mov
dec
rcll
aad
lret
mov
pop
mov
or
rorb
mov
leave
fldln2
and
icebp
pop
lds
loopne
aaa
pusha
imul
popa
xor
sub
orb
in
movsb
add
repnz
jecxz
mov
mov
sbb
push
enter
adc
or
xchg
test
jmp
lods
xchg
lcall
add
sahf
loop
sbb
popa
inc
xor
ds
or
inc
call
sbb
out
cmp
inc
lcall
repz
push
pop
scas
xor
jle
fildll
movsl
cmp
pop
popa
xchg
std
repz
out
jae
xchg
cmp
lods
xchg
pop
pop
inc
movsl
ficoms
jmp
in
cli
call
out
cmpsb
push
pop
fldcw
fcompl
decb
in
sbbl
test
fnsave
cmpsl
addr16
out
jo
add
jns
aad
scas
sbb
stc
mov
mov
mov
xor
aam
sti
jmp
mov
jmp
mov
xchg
mov
sub
mov
add
jo
cmp
and
mov
sarl
pop
mov
out
add
mov
ret
add
sahf
pop
pop
xchg
lcall
dec
mov
xchg
sbb
gs
adc
xchg
mov
inc
pop
jl
mov
mov
imul
mov
xor
arpl
pop
mov
jmp
xlat
jecxz
add
scas
sbb
pop
in
jbe
xor
out
out
je
sub
in
into
int
ja
push
icebp
fistpll
popf
push
sbb
and
jp
jmp
dec
out
jle
icebp
inc
jno
cmp
cwtl
add
nop
arpl
and
mov
subb
mov
add
push
stc
and
push
xchg
push
sarb
stc
nop
lds
test
xchg
ret
cmc
js
lods
cwtl
loopne
add
lahf
scas
xor
jne
fnstcw
dec
lods
lahf
idiv
cltd
mov
xchg
sbb
mov
push
addr16
fstpt
push
ss
dec
cmp
adc
jp
adc
inc
lea
test
sub
andl
popf
cmpsb
or
and
scas
pop
mov
daa
outsl
clc
xchg
lcall
cmp
sbb
out
jb
inc
leave
scas
and
jle
fstpl
clc
pop
in
imul
rcl
repz
cld
dec
sbb
and
cltd
xchg
loop
lahf
sti
enter
mov
mov
xchg
pop
mov
loopne
repnz
les
mov
cltd
mov
jbe
rolb
push
and
adcl
pop
mov
sbb
outsl
inc
ret
mov
push
mov
mov
xor
fisttps
pop
lods
loopne
inc
cmp
pop
adc
fidivl
cld
xor
insl
mov
hlt
sub
sti
or
ret
loop
aaa
xchg
insl
mov
std
movsl
mulb
fistpl
ret
ss
cmp
nop
adc
mov
adc
mov
jmp
mov
jns
pop
cmp
cmpsl
lock
cmpb
xor
fstpl
mov
inc
adc
xchg
adc
int3
push
rolb
add
inc
mov
repz
loopne
cmp
lcall
or
cwtl
les
or
sbb
pop
or
add
mov
popf
xchg
aas
mov
cld
gs
jb
lods
iret
cltd
and
jg
xor
inc
sbb
aaa
mov
mov
jle
stc
sbb
pop
xor
sahf
rcrl
fistl
arpl
pop
sbb
add
in
cltd
mov
mov
outsl
insl
inc
mov
scas
stos
dec
xor
lret
cmpsb
lds
mov
out
pushf
adc
test
push
cmpsl
fadds
mov
arpl
inc
adc
test
cmpsb
aam
lcall
fcmovbe
sub
cmp
adc
mov
jg
sbbl
clc
repz
divl
cmpsl
testb
mov
push
call
adc
adc
test
aad
sbb
je
popa
pop
adc
jns
js
nop
jecxz
push
adc
outsl
pop
decb
shlb
scas
movsl
shrb
shl
ljmp
dec
push
mov
push
add
xchg
rcr
adc
add
sub
or
xchg
adc
add
insl
test
jb
jmp
push
mov
jle
int3
pop
dec
fdivp
js
push
sub
adc
js
lds
fnstsw
and
or
out
cmc
out
sub
inc
fsubs
push
aaa
and
sahf
rclb
push
inc
xchg
outsl
shll
call
pop
jp
xor
mov
out
outsb
scas
scas
lods
in
inc
test
jb
rolb
cld
cltd
sub
sbb
icebp
sub
push
cmp
test
filds
mov
inc
loop
test
and
adc
lds
imul
adc
xor
or
mov
ficompl
xchg
stc
jns
push
sub
xchg
dec
lds
adc
cmp
mov
lods
pop
mov
jno
lcall
sarl
push
in
cwtl
mov
mov
popa
jnp
es
repnz
lret
repz
push
sbb
mov
ret
rcrb
and
scas
scas
aaa
xchg
inc
jns
ja
cmp
jl
mov
sti
movsb
dec
and
fwait
push
stos
mov
mov
xorl
pop
and
sub
adc
shll
adc
in
adc
outsb
cmp
fs
test
in
imul
loopne
pop
xchg
rolb
mov
insb
cmpsl
faddl
mov
xchg
test
fnstsw
sub
data16
int3
insl
push
inc
stos
cwtl
pop
pushf
xor
movsb
pop
je
lret
bound
bnd
push
adc
pop
sbb
out
in
movsl
addr16
adcb
sub
jp
movsl
xor
mov
sub
lods
push
mov
iret
pushf
arpl
cmp
notl
lods
cs
add
out
shlb
insb
inc
pushf
sarb
fisttpl
rol
pop
insl
cmpxchg
xchg
mov
ficoml
mov
js
je
hlt
in
push
cli
jo
loopne
icebp
pop
pop
fcmove
ljmp
jb
and
aad
test
inc
or
jg
insb
adc
aas
enter
fisttpl
mov
pop
loop
xor
imull
sbb
sub
dec
adc
dec
popf
rorb
test
sub
pop
cmp
shl
je
aaa
mov
lcall
lods
repz
outsl
jl
nop
dec
test
or
adc
fcoml
es
decb
sub
cmp
xchg
lcall
call
dec
mov
fwait
out
xchg
push
dec
sub
sbb
adc
push
in
or
inc
push
in
and
or
sbb
cmp
mov
lds
and
push
mov
das
mov
mov
fstpt
mov
jle
ret
lods
mov
add
inc
mov
lret
push
mov
pop
lret
mov
lret
addr16
lcall
inc
dec
adc
push
rclb
xlat
loop
push
xor
cmp
jmp
mov
addr16
fcmovne
sahf
push
or
rolb
pushf
inc
fs
lock
add
add
fdivrl
cwtl
mov
bound
nop
aad
cmp
sub
das
xlat
outsl
imul
mov
push
sbb
gs
add
and
aas
add
sbb
pop
popf
imul
test
insb
inc
sub
fstpl
push
call
or
mov
ret
loop
add
mov
icebp
jg
mov
push
cs
mov
subb
shlb
add
pop
or
jno
xor
push
cmp
in
ret
int3
gs
xchg
mov
pop
or
or
inc
pop
mov
mov
add
ret
xchg
inc
mov
push
ja
xchg
mov
xchg
test
int3
inc
add
inc
add
popf
pop
aam
leave
push
inc
imul
sub
xchg
dec
cld
pop
mov
cmc
xchg
sbb
ja
jecxz
out
or
or
cld
sbb
mov
sub
out
adc
fwait
sub
dec
inc
xchg
sbbb
xchg
lahf
dec
add
stos
nop
mov
mov
sbb
cmpsb
inc
push
stos
outsb
fisubrl
fmuls
ja
test
sub
in
push
xor
aas
ja
dec
enter
fistpll
mov
adc
mov
mov
out
jns
dec
loop
adc
fildl
and
sarl
push
loopne
negb
inc
mov
mov
int3
xor
stos
push
insb
in
jge
mov
mov
push
fstpt
mov
xchg
dec
ret
pop
xlat
rorb
aas
cmp
add
add
and
sbb
inc
insb
dec
popf
call
ja
xchg
mov
into
cwtl
and
jecxz
gs
pop
call
loope
add
inc
das
push
psadbw
lock
sub
out
mov
jmp
push
lret
cmpsb
int
aaa
loop
adcl
inc
subb
pop
push
out
sub
insb
mov
push
xor
notb
pop
insb
adc
scas
push
push
jp
and
loope
push
push
out
push
push
repnz
xor
jp
out
inc
sti
jge
pop
push
scas
or
lock
js
shlb
gs
fildll
jb
imul
xor
mov
out
add
loopne
pusha
out
cs
push
aaa
xchg
or
repz
ret
popaw
testl
and
daa
mov
dec
and
cmpsb
fs
inc
ret
inc
lock
xor
out
pop
repnz
mov
cld
inc
pop
mov
fsubp
call
ret
lock
and
out
xlat
rcrb
mov
lods
bound
sub
scas
ja
add
push
add
fucomi
mov
fs
notb
xchg
jo
mov
or
cmp
cmp
jo
outsb
fdivs
jmp
or
mov
cltd
mov
push
sbb
rolb
jl
push
stos
xor
jbe
lods
insl
lds
imul
cli
sub
ds
mov
aam
and
ret
test
inc
fistps
dec
xor
mov
xlat
adcb
orb
push
pop
pop
das
jno
testl
ret
daa
aam
jecxz
mov
scas
mov
push
sbb
add
mov
divb
popf
xor
movsl
loop
or
xchg
data16
add
cmp
nop
ds
sti
pop
cltd
xchg
xchg
push
shll
ret
sbb
aam
arpl
adc
stos
mov
adcb
inc
dec
push
jbe
pop
push
pop
stos
cwtl
mov
jecxz
aad
cmp
fildl
xlat
dec
lods
arpl
xlat
xchg
outsl
adc
jae
fildl
sub
sti
outsb
cmp
push
mov
cmp
in
ret
cmpsl
dec
push
lea
mull
dec
mov
fidivs
mov
leave
cmp
push
inc
push
and
pop
outsb
jne
or
jmp
popa
mov
sarb
ret
xor
pusha
iret
push
stos
jg
in
mov
aam
and
fldenv
nop
lahf
je
cmp
dec
pop
subl
xchg
sub
test
or
xchg
pushf
add
adc
adc
jmp
pop
scas
out
xor
or
and
rcll
and
push
je
pop
pop
sbb
mov
inc
or
jecxz
jb
jnp
ret
fiadds
arpl
mov
fwait
out
in
movsl
cmpl
push
mov
push
rcrl
lahf
out
and
ljmp
cmpsb
aaa
xlat
loopne
xchg
sahf
cs
dec
xor
cmpb
lods
xchg
daa
stos
mov
loop
or
add
xor
jbe
loopne
lods
popw
ljmp
or
cmpsl
shll
je
jge
or
sbb
fs
mov
lock
xchg
pop
cmpsb
out
xchg
insl
fwait
les
jp
lods
fcmovbe
lcall
fwait
dec
pop
lret
sbb
sub
xchg
outsl
or
hlt
push
adcb
jecxz
fistpll
add
lods
and
out
mov
sbb
adc
mov
scas
shlb
lds
cld
mov
or
push
test
inc
mov
jg
pusha
sub
mov
ja
nop
test
xchg
movsl
movsb
pop
and
add
ljmp
pop
aas
loopne
mov
pop
lods
or
test
push
cld
jo
loopne
add
cmp
cmp
clc
push
push
jg
out
mov
scas
pop
pop
sbb
aam
mov
dec
in
mov
cmc
xchg
or
frstor
inc
push
xor
clc
inc
xchg
imul
xor
addl
inc
push
push
clc
or
or
sub
sub
add
mov
adc
rol
mov
or
bound
shr
shlb
pop
sub
leave
lcall
and
mov
dec
imul
and
jae
test
or
idivl
cmp
lock
and
into
cmp
pop
sahf
dec
int3
add
test
mov
js
cmpsb
pusha
or
sbb
sbb
jae
adc
sti
popa
or
pop
add
hlt
js
cmc
repz
jne
int3
les
pop
mov
addr16
add
aas
dec
sub
xlat
xchg
mov
fiaddl
jp
xor
xchg
js
and
dec
rcrb
pop
outsl
pop
mov
push
xchg
mov
test
test
push
push
stc
xchg
push
mov
out
pop
or
aad
scas
sahf
loope
push
cltd
addr16
push
addr16
dec
pop
mov
pop
pop
int
in
dec
lret
ds
insb
fwait
out
lea
ds
testl
outsb
cmpsl
mov
dec
mov
ljmp
shlb
jae
popf
in
sti
sbb
hlt
cwtl
pusha
popf
xor
xchg
sti
movsl
or
and
or
jae
ds
mov
mov
sub
inc
xor
mov
cmc
jbe
xchg
icebp
inc
sbb
adc
notb
mov
push
mov
add
push
popf
or
pop
jnp
cmp
push
cmp
popa
add
test
lods
dec
and
xchg
cmpsl
mov
mov
inc
push
std
dec
je
decl
jg
mov
mov
sbb
pushf
mov
leave
outsb
aaa
xchg
dec
popa
mov
and
inc
addr16
div
stc
aaa
ror
frstor
negb
inc
mov
out
sahf
sbbb
mov
jbe
push
test
push
inc
push
imul
xor
sub
aaa
loopne
leave
out
jp
cld
add
adc
ljmp
sub
fiaddl
leave
and
adc
dec
pop
imul
dec
xor
pop
sbb
nop
popa
push
adc
or
dec
jb
jmp
in
xchg
or
std
push
lret
mov
inc
cmp
dec
add
das
inc
mov
lcall
std
lret
je
dec
sti
push
loop
aad
add
pop
sbb
adc
adc
cmpsb
xchg
inc
push
push
or
push
leave
pushf
sub
pop
and
out
adc
lods
loop
icebp
pusha
je
and
subb
mov
xchg
sbb
lods
fildll
ret
leave
dec
enter
shr
scas
xchg
ror
adc
add
pop
jmp
js
mov
aaa
test
cmp
push
mov
add
dec
lods
jle
jg
xchg
rcrl
push
addl
inc
loope
lds
cmc
js
inc
adc
jl
pop
loope
divl
ljmp
lahf
mov
sbb
in
daa
inc
jne
mov
jns
js
mov
pop
mov
fisttps
ja
lds
cmp
daa
test
mov
inc
mov
clc
ret
sub
pop
pop
mov
inc
outsb
sub
shll
imul
into
inc
and
iret
incb
aam
out
bound
int3
add
addr16
xlat
jg
xor
xlat
inc
mov
ss
pop
mov
pushf
int3
cmp
cwtl
add
inc
xchg
outsl
xlat
adc
test
pop
call
fiaddl
pop
push
fsubs
pop
dec
out
jecxz
fimull
ret
pop
ret
cmp
add
inc
fstps
push
pop
mov
fwait
inc
mov
or
and
lock
add
jb
xorl
cmp
out
out
adc
push
idivl
lea
pusha
loop
inc
test
pusha
mov
and
lea
call
xor
shlb
sarl
cmp
xchg
in
or
movsb
out
or
xor
xor
xchg
gs
push
mov
inc
ror
sub
orl
setnp
jmp
dec
sub
add
jae
mov
add
inc
das
mov
dec
clc
iret
lcall
in
mov
push
adc
repz
adc
addl
xor
mov
daa
into
mov
cwtl
push
or
and
mov
lret
xor
inc
or
jae
mov
jl
jge
negl
iret
daa
aas
mov
jb
or
int
mov
sub
out
and
jns
mov
pop
gs
shll
int
mov
or
rcrl
mov
ds
push
inc
icebp
pop
pop
rcl
mov
mov
xchg
dec
in
les
faddl
pop
aad
push
popf
cmpsl
mov
adc
jae
test
sbbl
sbb
ret
sbb
xor
dec
sbbb
gs
rorl
push
cmp
mov
in
shl
mov
or
push
rep
cmc
xorb
in
lds
call
jo
data16
in
lret
inc
mov
lahf
jp
loopne
in
lea
adc
lret
push
and
jle
fadds
dec
cs
movsl
shll
mov
dec
push
mov
sar
out
fsts
shr
and
fstpt
sbb
xor
out
xor
cmp
push
outsb
insb
pushf
cmp
xchg
aam
ds
popf
ljmp
popa
push
dec
jl,pt
inc
sub
lret
pop
jbe
mov
aas
fnsave
shl
mov
out
dec
jb
dec
inc
xor
mov
divb
push
mov
arpl
hlt
mov
and
fnstsw
sub
and
cmp
xchg
shlb
fidivs
jae
mov
add
jns
add
cmp
arpl
cs
sbb
sub
mov
or
mov
nop
mov
fdivrs
shr
das
sbb
mov
mov
mov
sahf
mov
jno
addr16
inc
xor
jne
pop
jns
stos
push
fwait
or
leave
cmp
lods
push
cmp
xchg
mov
mov
cmc
push
dec
pop
out
loop
stc
cwtl
nop
cmpsb
mov
jecxz
inc
clc
dec
lret
cmp
lea
dec
jmp
push
daa
outsl
movsl
rcll
xchg
repz
add
push
cmpsl
or
jle
shlb
or
in
cmp
adc
nop
out
divb
xor
ss
cs
ret
cltd
dec
ficoms
stc
test
rclb
outsb
sti
lret
pop
fwait
lret
mov
sti
cmc
data16
rcrb
cmpsl
mov
push
sbbb
pcmpgtb
shrb
inc
aas
repnz
jb
sub
sub
cltd
mov
jle
xlat
subl
shl
fiaddl
nop
dec
clc
xchg
test
fcmovne
jnp
inc
in
mov
sub
pushf
arpl
mov
cs
cli
cmc
cld
fidivl
mov
pop
daa
popf
add
arpl
inc
das
add
icebp
aad
dec
jb
pop
xor
inc
xor
sub
movb
inc
lahf
out
movsb
ss
scas
pop
pop
push
pop
cld
ja
push
ljmp
into
mov
add
cmp
jl
ljmp
jns
inc
mov
dec
rcll
out
inc
aaa
insl
dec
popa
push
repz
dec
pusha
out
push
push
sub
cmp
jmp
iret
dec
aad
sti
xchg
mov
mov
mov
pusha
enter
pop
sub
jb
cmp
adc
xor
gs
inc
inc
xchg
lret
mov
sbb
aam
lea
movsl
dec
stc
cld
jecxz
jecxz
xchg
pusha
adc
sahf
lea
out
cli
in
dec
add
ja
xchg
fsts
pushf
sub
push
and
mov
cmpl
sub
cmp
jle
sbb
test
cmpsb
sbb
inc
or
xlat
ficompl
adc
bound
adc
clc
pop
outsb
cltd
and
sub
subb
cmp
push
test
mov
mov
aam
mov
fimuls
out
pop
in
mov
xchg
das
loopne
enter
inc
and
test
lds
test
adc
jge
stos
dec
ret
pop
xchg
xchg
jne
mov
sbb
in
mov
out
sbb
mov
xchg
xchg
and
dec
sbb
insl
rclb
stos
jbe
jmp
cmp
icebp
xchg
scas
dec
test
cmpsb
test
or
xchg
clc
cmp
jo
outsb
push
popf
mov
mov
stc
push
int3
or
push
inc
out
xor
xchg
rol
adc
test
cmpsl
push
lcall
imul
in
dec
push
mov
inc
mov
inc
int
cmp
stos
pop
mov
mov
cmp
push
shlb
scas
into
sti
xchg
or
or
out
in
sub
jmp
cmpl
lahf
mov
popf
dec
push
imul
sbb
repz
jbe
cmp
cs
lods
cmpsl
testl
test
bound
pop
repnz
es
shrb
sbb
sbb
add
ds
add
jmp
push
sub
clc
rcr
xor
lret
fwait
dec
add
aad
xlat
pop
cmp
xchg
adc
je
cmpsb
jns
and
mov
add
cwtl
xchg
xor
clc
gs
cli
sub
push
and
push
out
dec
dec
adc
sti
xchg
data16
jl
fucomp
rcrb
loop
cmp
lods
jnp
je
test
pop
sbb
dec
sti
xchg
rorl
lcall
pop
fistl
and
sub
aad
cld
pop
xor
xor
hlt
int
mov
pop
jmp
dec
mov
jns
scas
mov
lahf
outsl
push
insl
push
fdivrl
and
ss
decl
insl
or
mov
cmp
xor
jbe
or
sbb
sub
clc
rorb
notl
pushf
jns
xchg
in
jmp
jle
test
sub
ss
jg
push
mov
mov
rolb
mov
mov
test
popa
daa
call
sbb
or
pop
xor
pop
test
sbbl
es
jns
insl
test
jl
outsb
inc
scas
mov
pop
divl
mov
sub
test
outsb
notl
sbb
xor
pop
mov
int
xchg
xchg
adc
mov
jl
jmp
sub
dec
xchg
jbe
dec
loopne
std
test
push
dec
imul
and
sub
inc
imul
std
inc
call
and
popf
jecxz
lea
jnp
out
out
adc
mov
mov
repz
je
movsl
push
out
and
imul
push
into
lods
jg
pushf
cmp
iret
fadds
pushf
sbb
test
cli
adc
addl
icebp
ja
or
xor
dec
pop
scas
cwtl
sub
or
mov
insl
popf
push
jb
loop
mov
faddp
lods
es
xchg
mov
std
mov
xchg
xor
call
mov
cmp
shlb
lret
inc
int3
and
popa
mov
dec
int3
xor
out
sbb
lods
or
sub
cmp
xchg
dec
ljmp
inc
mov
pop
fsubrs
push
popa
testl
inc
xor
into
pop
lahf
mov
inc
push
scas
cmp
mov
fs
mul
mov
lock
std
pop
add
fldl
movsb
xlat
sbb
lcall
xchg
fsubrp
xchg
or
push
test
lods
aas
and
test
dec
sub
jns
and
mov
mov
mov
add
xchg
mov
imul
adcb
jbe
adc
out
adc
arpl
fcompl
clc
loop
pop
jmp
push
xor
pop
imul
add
mov
cmpsb
xchg
sub
pop
in
aas
mov
pop
repz
xchg
cs
ljmp
aam
or
mov
sti
mov
pusha
lods
iret
cmpsl
out
adc
add
sbb
rcrl
sub
stos
xor
pop
mov
inc
or
scas
xchg
out
mov
xor
cmp
cmp
push
outsl
inc
lcall
in
lock
xchg
cmp
es
add
lcall
imul
pop
jecxz
cmc
sub
inc
arpl
icebp
insl
shrb
pop
xchg
into
pushl
mov
test
adc
popa
jne
cmc
lret
and
cmpsb
pop
cld
pop
stos
enter
notb
xchg
cltd
jnp
fs
push
stos
inc
xchg
inc
subl
and
jg
je
roll
enter
in
faddp
and
inc
shl
inc
xchg
in
in
ljmp
mov
mov
cmpsb
push
pop
insl
cwtl
adc
enter
adc
or
aam
and
ja
loopne
lock
outsl
out
test
pushf
ss
cmc
sbb
xchg
lret
jp
test
push
push
dec
and
fimull
push
xor
adc
insl
jnp
xchg
mov
mov
je
inc
adcb
pushf
pop
in
shlb
xchg
mov
pusha
outsl
mov
int
dec
ljmp
call
sub
xchg
call
dec
inc
call
xchg
adc
inc
pop
mov
mov
and
inc
mov
cmp
cmp
push
loope
imul
add
mov
dec
repnz
pop
popa
fidivl
aaa
or
mov
into
call
dec
aaa
and
test
in
xchg
xor
loop
xlat
mov
or
xchg
mov
mov
sub
xor
lods
cwtl
xor
jp
and
jno
movsb
jno
xor
pop
push
ss
fstpl
aaa
jae
shl
mov
mov
fs
enter
cmp
gs
mov
adc
mov
stos
hlt
movsb
mov
push
inc
xorl
sbb
xchg
or
or
popf
cmp
and
fadd
cld
cmp
jge
jecxz
aaa
mov
adc
mov
mov
inc
pop
movsb
std
sbb
add
sub
pop
repnz
jne
in
mov
rclb
fldenv
and
pop
aaa
jecxz
mov
sahf
rclb
push
adc
push
daa
ljmp
add
pop
lret
sbb
sbb
outsl
in
cwtl
movsb
std
add
mov
cmp
xchg
mov
je
repnz
mov
or
mov
hlt
fildll
pop
lret
cltd
mov
xchg
adc
jnp
mov
repnz
sub
adc
push
jl
lret
push
sbb
lods
adc
jbe
aad
sbb
cmp
out
cmp
adc
repz
int3
mov
test
jg
jg
push
push
fstps
pusha
mov
aad
push
movsl
mov
aad
pop
aas
cli
lea
or
daa
sarb
inc
mov
jge
out
inc
test
jne
jmp
mov
mov
xchg
cmpsb
ror
aad
dec
ss
xchg
xor
add
jns
cs
push
sahf
xlat
das
xchg
mov
shl
push
jo
push
cmp
pop
scas
nop
pop
shlb
fcmovne
in
mov
xor
loopne
xchg
pop
mov
push
xchg
dec
faddl
aas
pop
jo
outsl
cmpb
cmp
xchg
shld
and
adc
std
mov
lea
adc
in
fs
mov
pop
cmp
test
rcrl
ss
popa
push
cmc
out
sarb
push
rorl
mov
mov
mov
cwtl
xchg
lea
popf
dec
pushf
dec
jnp
mov
push
inc
mov
pushf
shl
or
incb
push
jnp
dec
in
jmp
ja
cmpsb
sub
sbb
pop
xchg
lods
jecxz
xor
sub
push
mov
pop
mov
js
xchg
ja
addl
sub
cwtl
lock
pop
fwait
adc
mov
rol
pop
pop
daa
les
cmc
cltd
cli
dec
notl
mov
inc
add
xchg
repnz
out
or
gs
icebp
mov
jo
or
sti
jne
pop
out
jne
popf
mov
and
pushaw
loopne
divb
add
rcr
pushf
dec
cltd
rorl
jp
es
jb
setne
repnz
pop
add
sub
cmp
fwait
mov
jb
iret
and
xchg
cli
imul
pop
popa
xchg
pushf
adc
shlb
or
and
testb
adc
enter
adc
cmp
jmp
mov
mov
shl
int
and
divb
in
xorl
xchg
mov
lret
mov
push
addb
inc
scas
int3
jle
and
mov
stc
addr16
cmp
xor
sub
pop
xorl
mov
out
dec
out
mov
cs
rolb
push
enterw
jb
jno
stos
jge
imul
dec
or
or
add
and
imul
inc
sahf
in
mov
rolb
sub
test
sub
cli
ficoml
push
daa
or
and
dec
sub
push
in
jle
inc
gs
sub
aad
push
cs
sbb
sbb
push
sahf
inc
out
stos
call
outsl
dec
dec
push
cmp
stos
popa
and
sub
sbb
loope
aaa
jns
push
jp
adc
int3
add
sbb
xchg
mov
sub
sub
dec
out
std
add
lahf
xchg
clc
movsl
loope
xchg
cltd
hlt
sbb
mov
add
popf
js
repz
loopne
movsb
fwait
imul
and
mov
cld
xchg
add
clc
sahf
jecxz
xor
jmp
fwait
stos
fs
push
sahf
cmp
mov
jg
data16
pop
out
icebp
loopne
mov
cmpsl
sbb
dec
adc
stos
xor
xchg
push
jb
add
mov
adc
sub
inc
inc
inc
pop
fidivrl
out
jg
filds
aas
jmp
aaa
xchg
pop
adc
cmpsb
pop
adc
xchg
outsl
cld
push
inc
stc
and
inc
mov
jbe
dec
adc
mov
hlt
jmp
jb
call
mov
mov
shll
xchg
mov
scas
mov
add
ja
aas
sub
js
inc
icebp
int3
sbb
xchg
or
in
mov
int3
mov
add
dec
push
test
les
je
test
push
add
inc
sub
and
xchg
fwait
rorb
test
out
sub
nop
ds
mov
int
mov
test
mov
call
lret
or
mov
inc
aad
mov
or
mov
jne
jge
in
jns
enter
outsl
stos
cmp
fdivs
pop
in
push
pop
ret
add
loop
add
mov
fistps
jl
out
in
into
mov
sti
push
jmp
and
mov
shr
stc
loopne
jg
ss
je
inc
cmc
push
xchg
loop
mov
sbb
fs
mov
repz
call
outsb
mov
js
pop
sub
jns
push
leave
out
fdivp
test
or
js
imul
ds
xor
inc
pop
xchg
imul
out
dec
sbb
adc
stos
push
testl
dec
xor
mov
xchg
orl
inc
outsl
insl
ljmp
push
mov
sub
and
popf
lret
xchg
and
xchg
hlt
sbb
xchg
sub
xchg
inc
icebp
test
sbb
loopne
fcomi
sarl
add
ror
dec
fcomi
adc
mov
loop
mov
sbb
ds
or
cld
das
ret
ret
lret
bound
jge
loope
pop
insl
das
mov
sti
fiadds
adc
jnp
xchg
cwtl
mov
xchg
dec
xchg
jo
int3
cmp
call
sahf
dec
cmp
inc
faddp
inc
xchg
lock
hlt
xchg
xchg
fbld
hlt
push
adc
ja
pop
sahf
push
adc
adc
outsl
push
pop
es
mov
jle
shl
pop
insb
addr16
leave
imul
mov
mov
movntq
jp
inc
rcll
insb
cmp
add
aas
cmpsb
xchg
or
add
inc
jb
stos
stc
cwtl
add
scas
pop
int
mov
jge
std
sahf
stos
push
in
mov
jo
das
clc
cmpsb
icebp
inc
sbb
pop
test
mov
lods
aaa
int
or
add
std
bound
push
jmp
sarb
adc
cwtl
cli
pop
or
xchg
dec
add
mov
fwait
loop
jge
and
icebp
mov
fadd
sub
repz
mov
add
pop
xchg
push
push
arpl
outsl
jecxz
push
inc
das
dec
pop
inc
test
inc
js
and
or
xor
shrb
mov
xor
or
out
and
xchg
xor
rcr
loopne
mov
push
xor
dec
fdivp
fsubrs
out
mov
das
jne
cmp
xchg
jg
adc
mulb
cmp
out
gs
lea
push
test
cmc
cmp
adc
mov
aaa
cmc
pop
pop
and
add
aaa
pop
dec
subb
lods
or
inc
inc
and
push
cwtl
mov
out
adc
pop
ss
mov
mov
mov
mov
adc
mov
dec
aas
scas
data16
inc
lock
adc
out
jg
add
addr16
mov
push
mov
leave
inc
mov
add
aaa
out
jbe
push
test
add
test
mov
std
sub
imul
xorl
fisubrs
outsl
ret
aas
fs
push
jno
out
and
js
loope
push
out
dec
pop
sbbb
lea
jp
imul
xchg
or
in
repnz
dec
bswap
jno
jns
notl
jle
pop
dec
shl
xchg
lock
es
popa
scas
loope
mov
cmp
cmp
mov
sbb
test
repz
jno
jnp
xchg
inc
pusha
mov
aaa
insb
mov
fbld
arpl
mov
sbb
jp
dec
inc
dec
mov
cmpsb
shll
lret
xorl
fisubrs
dec
movsl
ja
pop
int
push
inc
lds
cmpsb
enter
sbb
mov
sbb
test
fldcw
dec
nop
jns
repnz
fbstp
dec
adcb
mov
jbe
adc
dec
push
xchg
push
out
sbb
sub
xor
pop
xor
rcll
pop
lods
int3
mov
xchg
jmp
jp
rorl
pushf
mov
xor
cmpsl
loop
xor
daa
fidivs
out
lret
sbb
insb
jge
shrb
mov
mov
mov
xchg
aad
mov
mov
nop
push
fldl
and
scas
das
ror
mov
xchg
notb
loope
mov
movlhps
xor
ja
or
dec
dec
daa
push
ljmp
dec
lret
mov
jl
adc
into
xlat
and
add
test
addr16
shrl
fstl
arpl
hlt
and
adc
and
adc
xchg
add
xor
icebp
pop
xchg
mov
jne
js
mov
shlb
mov
test
xor
test
mov
cwtl
lahf
push
iret
cmpsb
fsubl
ja
mov
dec
dec
ljmp
insl
loopne
test
sbb
dec
stc
push
leave
ljmp
notb
and
fdivrs
inc
mov
test
xchg
cmp
out
cmp
push
inc
push
pop
neg
insb
push
movsb
add
outsl
arpl
test
push
aas
pop
cld
out
jno
out
into
push
loop
inc
xchg
and
sub
mov
mov
insl
fwait
jp
or
aam
andl
adc
jne
ret
fistl
dec
fisttps
std
inc
mov
fisttps
jns
adc
pop
jp
int
sbb
mov
xor
out
stos
pop
inc
insb
and
lcall
ror
icebp
stc
lahf
fucomip
xor
daa
cli
mov
and
adc
rcr
jae
and
dec
popa
push
fxch
adc
clc
add
fsts
lcall
pop
out
sub
sbb
hlt
sbb
fs
jl
xchg
lea
dec
out
aam
mov
lret
dec
jbe
or
jns
mov
cmc
jmp
mov
push
je
sbbl
xor
sub
cmp
jno
xchg
test
jmp
xor
int
rclb
cmpsb
push
pushf
call
sti
bnd
sub
adc
loop
stos
outsl
pop
cmc
loope
ror
fst
sub
hlt
sbb
test
sub
cmp
negb
mov
and
in
xchg
ljmp
movsl
movsl
ja
fnstenv
jb
mov
xchg
lea
xor
mov
dec
sub
xchg
test
inc
fisttpl
dec
out
pusha
mov
mov
push
mov
sub
sbb
jl
dec
ds
lds
fdivrl
stc
xchg
pop
inc
mov
sub
dec
fs
aam
lds
cmp
mov
add
es
outsl
xchg
inc
mov
sub
jbe
add
fdivrl
xor
jo
xor
sub
xchg
in
sbb
xchg
fcmovnb
push
cwtl
push
sbb
jg
xor
aam
push
inc
ficoms
inc
inc
jg
daa
dec
nop
push
xchg
stc
cmp
xchg
dec
loopne
je
fmull
mov
or
shl
adcl
inc
test
xchg
lock
addr16
cltd
data16
cmp
int3
xor
sbb
cwtl
cmp
aam
dec
insl
fcomp
shrl
cmpsl
lret
outsb
daa
mov
sbb
sbb
or
icebp
gs
xchg
jmp
push
cld
out
and
xor
mov
cli
out
loop
cmpsl
mov
into
shl
je
mov
lcall
add
add
xchg
jne
and
ret
dec
add
mov
outsb
or
orb
adc
xchg
ss
xor
dec
outsl
loopne
repz
mov
inc
test
cmp
or
pushf
lock
fistl
addl
sbb
xchg
jmp
into
xchg
push
sbb
lods
sub
pop
xchg
adc
or
pop
in
or
aaa
adc
jno
push
notb
dec
shrb
mov
movsl
andb
pop
leave
out
cld
jo
inc
or
adc
or
les
call
jbe
jmp
sbb
call
adc
jae
cmc
pop
outsb
push
test
or
into
pop
and
fwait
sti
sub
ljmp
jl
add
mov
push
mov
sarl
add
mov
scas
mov
or
nop
sub
dec
loop
repz
dec
mov
ljmp
scas
jmp
inc
loop
push
test
bound
pop
aaa
les
mov
js
rcrb
jns
sub
xor
push
sbb
out
pop
jo
mov
cmp
push
pop
push
mov
pop
push
add
pop
rorl
movsb
enter
push
clc
xor
mov
and
and
hlt
das
xchg
in
mov
xchg
cmp
inc
pop
and
in
cli
push
and
inc
das
fistps
mov
jecxz
ds
sub
repnz
adc
xchg
in
aas
adc
mov
daa
cmpsl
push
sbb
and
and
pop
jae
imul
mov
push
xor
or
push
nop
out
jo
mov
ds
pop
shlb
cmp
insb
push
dec
jbe
push
jbe
or
pop
push
iret
loope
fistpll
lods
rcrb
jae
inc
xchg
mov
lods
sub
fimuls
popf
adc
inc
jae
call
test
daa
mov
shlb
aaa
lock
cmp
ds
fistl
xlat
push
aam
add
push
push
stc
pop
sub
int
fmul
cmpl
and
sbb
cltd
mov
outsl
xchg
inc
mov
sbb
pop
add
pop
jg
stos
mov
cmp
sub
outsl
mov
inc
test
add
out
pop
lret
jno
cmp
fisubrs
cmp
out
aad
std
mov
mov
dec
pop
mov
add
and
movsb
mov
pop
dec
mov
inc
mov
push
inc
cmc
mov
fbstp
test
pop
aam
sti
dec
push
fwait
lret
jle
mov
int
aas
mov
popa
orl
adc
shll
std
scas
imul
push
xchg
stos
push
mov
adc
sarb
sbbb
mov
scas
movsl
push
or
mov
into
call
int3
xchg
in
test
push
and
sbb
cmp
xor
mov
jp
orb
sbb
or
call
test
mov
mov
imul
fbld
sub
mov
push
mov
mov
rol
mov
das
adc
mov
pop
loope
mov
out
mov
stc
jae
xor
xlat
shlb
pop
adc
inc
xchg
lahf
popa
sub
xchg
push
stc
sbb
cmp
xor
jge
test
mov
or
test
add
push
and
push
cmp
call
cmp
insb
into
ret
ret
push
mov
popa
sub
out
cmp
ret
mov
out
out
in
idiv
test
icebp
dec
ja
shl
fmull
cli
addl
enter
in
cmp
shr
leave
rcl
jne
ljmp
cmp
scas
add
push
hlt
sbb
jecxz
or
xor
fisttps
fidivl
daa
jne
push
inc
cmp
call
testl
inc
mov
dec
jp
lods
dec
push
mov
pop
shr
jnp
shrb
pop
dec
mov
pop
sahf
xor
mov
and
int3
pop
or
scas
popf
pop
pop
push
jecxz
or
stos
add
pop
add
xor
inc
aad
mov
dec
xchg
sbb
mov
pushf
jno
jmp
in
aad
cmp
jno
in
cld
icebp
inc
outsl
into
loopne
mov
xor
lahf
dec
sbbl
and
mov
cmpsl
mov
mov
adc
mov
xchg
iret
mov
cmpsl
sub
stc
mov
mov
jg
imull
mov
or
das
push
dec
outsb
into
ret
loope
std
call
pop
ret
gs
fsubrl
sti
or
inc
in
fisttpl
mov
mov
add
pop
pusha
pop
push
mov
mov
divb
pop
mov
xadd
or
jnp
movsl
nop
cmp
and
icebp
bnd
popa
popa
cld
dec
mov
jle
movsl
sub
sti
insl
and
sbb
lret
mov
inc
shlb
outsb
ljmp
test
inc
push
int
fiaddl
loope
lock
adc
int
mov
add
dec
inc
mov
or
push
inc
ficoml
pop
sub
out
std
js
idiv
adc
push
mov
cmp
loope
shll
push
clc
cmp
mov
in
xor
dec
ret
icebp
and
sbb
sbbb
ss
idiv
pop
mov
push
mov
cmp
mov
sub
mov
or
ss
mov
jp
push
fxch
jecxz
fldl
test
adc
and
jnp
jbe
mov
test
push
test
pop
jl
lds
ret
xor
inc
and
or
pop
je
gs
sub
sti
mov
cld
and
imul
cmp
pop
and
pop
jo
cmp
xchg
cmp
cmp
sub
mov
jne
es
imul
or
ret
daa
js
pop
aaa
ljmp
lcall
add
imul
daa
mov
mov
push
push
repz
pushf
mov
sti
fstps
stos
and
jecxz
cs
in
fldl
xor
xchg
in
jl
push
add
mov
dec
dec
fistl
int
xchg
add
mov
and
mov
sbb
cmp
cltd
sbb
pop
jnp
pop
pop
scas
dec
pop
jb
cmp
jns
or
mov
insb
int3
dec
es
mov
cltd
cmp
inc
lahf
int
fs
popa
pop
test
jp
pop
mov
or
cwtl
pop
roll
addl
cmpl
out
lret
jmp
xor
call
sub
adc
out
mov
popf
sbb
mov
das
in
push
inc
mov
sarl
inc
out
add
sub
out
sub
adc
addb
out
push
fwait
outsl
sbb
test
fmulp
sbb
add
sbb
fwait
call
repz
xor
jmp
mov
inc
push
in
aad
scas
mov
jg
shlb
or
pop
sub
jb
gs
cld
insl
sbb
jno
dec
and
mull
fcomi
cwtl
mov
jns
jge
adc
add
mov
sub
movsb
dec
int3
cld
or
js
push
insl
popa
mov
test
inc
mov
dec
xor
jmp
into
loope
inc
scas
iret
sub
add
fs
cmpsb
cmpsb
mov
cli
lea
dec
pop
call
sbb
push
push
push
cvtps2pd
lcall
cmp
xchg
jg
pop
sbb
xchg
loopne
or
mov
cmc
popa
sub
les
lret
jmp
sbb
cmp
inc
insl
pop
add
bound
push
dec
pop
push
nop
mov
xchg
push
and
cmp
mov
out
into
push
popf
add
in
lea
mov
sbb
pop
mov
sbb
mov
mov
pop
sbb
mov
aad
mov
push
loop
sbb
sub
nop
aad
mov
xchg
dec
lods
jge
jp
cmp
pop
or
push
push
inc
cmp
push
add
xchg
test
push
fs
popa
and
into
ja
ljmp
jbe
addl
iret
jnp
mov
sbb
fs
jb
dec
mov
stc
sub
mov
push
jp
mov
or
ret
adc
scas
inc
stc
inc
les
adc
mov
out
iret
movsl
int
push
rcr
es
or
jb
vmovq
or
shrl
pop
mov
pop
popf
jge
jo
addr16
xor
sbb
cwtl
sbb
sbb
outsb
imul
xchg
test
pop
test
roll
sbb
into
jo
push
add
mov
or
fsubs
imul
mov
subb
cmp
es
sti
push
ret
aas
xchg
aas
dec
jo
pop
leave
adcb
cmp
cltd
data16
inc
pop
ljmp
mov
outsb
pushf
int3
ljmp
xchg
call
push
jns
mov
mov
mov
inc
cmc
mov
in
cmp
mov
jp
pop
addl
adc
xor
mov
sub
inc
fildl
enter
lods
xchg
ss
jnp
ja
hlt
jp
test
xchg
cli
cmpl
ret
outsl
mov
adc
pushf
mov
aas
dec
iret
jmp
adc
nop
fisubs
ficompl
pop
push
sub
mov
cmpsb
insb
jmp
jle
cmp
xchg
in
add
lock
je
test
outsl
lds
mov
pop
data16
add
movsb
test
imulb
xorb
add
inc
inc
xchg
or
rcl
rclb
mov
sbb
sbb
cs
xor
testb
imulb
xor
mov
and
cld
push
dec
pop
fimuls
iret
mov
cpuid
xlat
aaa
aas
movsb
orb
push
fcmovbe
xchg
jno
into
cwtl
pop
leave
repnz
xchg
andb
stc
mov
lret
dec
mov
inc
mull
inc
fbstp
in
bound
inc
inc
negb
pop
mov
push
jp
scas
push
sub
lock
sub
shrb
push
in
and
cmp
sub
arpl
inc
push
xchg
sbb
xor
ror
cmp
push
rolw
dec
insl
ds
mov
lret
scas
or
mov
movsl
mov
add
lcall
cmovge
jge
push
sbb
cmp
and
adc
hlt
lods
loope
lds
aas
fisttps
in
pop
push
jge
data16
movsl
mov
inc
cmp
sbb
adcb
fists
rcr
lcall
in
lods
or
test
icebp
ja
sub
adcl
pop
fwait
jno
jmp
adc
repnz
test
fdivrs
popf
fstpl
push
int3
in
push
mov
je
aas
in
jg
cwtl
ds
push
iret
adc
xor
push
sub
xchg
pop
mov
jb
std
mov
mov
repnz
lcall
inc
rcrl
arpl
ss
mov
repz
adc
test
outsl
or
xchg
mov
imul
ret
mov
push
out
enter
popf
cmpsb
cltd
in
addl
in
sub
call
push
xchg
xor
sti
xor
cmp
shl
push
cmp
mov
int
and
repnz
jns
sub
adc
jns
inc
or
pusha
pop
jns
test
jbe
fnstenv
and
popa
fildl
push
rorl
push
das
insb
adc
mov
out
mov
adc
sbb
pushf
mov
clc
xor
out
loop
lods
aad
push
dec
divl
cs
fsubrl
and
sbb
mov
xor
add
add
add
push
and
jl
aaa
or
cmp
cmpb
inc
xchg
int3
cld
cmpsb
test
data16
pop
inc
xchg
mov
push
inc
cli
loopne
cmc
lods
jecxz
cli
cmp
mov
lret
cmp
mov
inc
ficomps
mov
xchg
push
data16
push
dec
addr16
or
sbbl
movhps
lods
insl
and
sub
cmp
int
lods
jo
popa
adc
fists
hlt
lea
neg
popa
pop
xchg
je
pop
xchg
cmp
gs
sbb
lock
mov
xor
je
pop
mov
cmp
call
sbb
push
test
xchg
cmpsl
das
outsb
push
inc
pop
rcll
sub
inc
orl
dec
imul
xchg
xorl
pop
jp
and
and
push
outsl
adc
jl
and
fs
out
push
push
popf
jmp
cmp
or
lahf
aad
test
test
mov
pushf
and
adc
ja
sub
lret
outsl
fdivl
movsl
je
shlb
cltd
mov
adc
cs
ljmp
xor
dec
arpl
and
cmc
and
sarb
and
inc
movsl
pop
push
pop
fwait
fnstsw
push
sti
icebp
cmpsl
xor
loop
test
dec
xchg
fsubrp
jo
sbb
dec
cmpsb
ret
dec
xchg
loop
ret
or
mov
loope
cmp
cmp
aaa
xchg
mov
xchg
push
jle
jns
adc
sahf
sbb
sub
xchg
repz
js
shll
xchg
into
mov
outsb
mov
jl
jecxz
mov
dec
pop
jp
mov
test
push
loop
inc
jmp
mov
sti
lods
mov
ret
push
push
test
aam
inc
sub
adc
mov
fisttpll
lret
mov
dec
lea
xchg
add
jbe
jae
mov
lcall
inc
push
mov
xchg
popf
cmc
inc
pushf
jnp
lods
jmp
or
adc
fwait
dec
inc
pop
sarl
iret
inc
cltd
cld
xor
adc
mov
jae
or
mov
sub
jb
sbb
push
andl
push
mov
fmuls
and
mov
pusha
xor
mov
pop
cmc
jle
cmp
ja
cs
sbb
mov
pop
pusha
mov
pop
lods
dec
je
jno
in
pop
dec
fwait
js
xchg
jae
fwait
push
iret
mov
jmp
cmc
in
cmpsl
iret
fs
sbb
ret
test
dec
stos
sub
lea
repz
stc
jnp
iret
jo
fisubs
adc
pop
pusha
int3
arpl
inc
fcmovnb
mov
mov
jl
iret
push
sub
or
mov
sbb
jns
push
push
mov
pusha
aas
mov
jae
out
sbb
out
clc
dec
movsb
aad
lods
inc
mov
cmpsl
inc
subl
pop
dec
lods
mov
test
jno
cmp
inc
iret
test
xor
es
pop
js
pop
iret
lret
cltd
lock
ret
cmp
repnz
cwtl
adc
pop
xchg
lock
xor
sbb
les
cmp
and
popa
push
scas
mov
mov
xchg
fidivrl
test
mov
or
pop
mov
sbb
sbb
pop
or
cmp
lahf
cmpsl
lahf
popa
sbb
xchg
js
and
or
inc
sbb
cltd
push
jb
adc
nop
scas
shl
lods
inc
and
add
inc
jg
js
cmp
jne
mov
inc
fmull
dec
rclb
mov
in
aad
insl
adc
int3
popa
rclb
sbb
ret
dec
mov
mov
call
sub
or
push
mov
addr16
out
popf
jmp
fcomps
adc
pop
adc
pop
pop
jecxz
call
fcoml
xor
pop
pop
mov
cld
outsl
mov
mov
push
pop
addr16
dec
ret
sub
and
ds
outsl
imul
xchg
mov
inc
jl
jne
sbb
inc
inc
adc
scas
mov
pop
addr16
ficompl
pop
into
sar
mov
ljmp
push
sbb
rcr
and
orl
cli
or
cmp
pop
xorb
mov
cmpsb
jnp
sbb
cmp
out
mov
cltd
faddl
cmpsb
push
or
movsb
movsl
outsl
dec
mov
push
push
sub
test
inc
jg
pop
out
rcll
aaa
insl
and
dec
data16
adc
xor
inc
daa
inc
and
jne
and
mov
push
pop
xor
test
scas
dec
int3
mov
in
test
adc
jmp
cld
add
divl
jo
imul
bound
xor
pop
in
lcall
outsl
dec
stc
mov
test
stc
xor
std
outsl
xchg
and
out
lahf
cmpsb
or
loop
sub
xor
sbb
insl
xchg
jae
sar
mov
sti
dec
jg
ds
jp
imul
test
dec
flds
cmc
ror
push
push
pop
pop
movsl
jp
adc
jne
sub
fldlg2
je
sub
adc
sti
lods
inc
nop
pop
dec
das
out
mov
sbb
xor
pushf
dec
sbb
gs
xor
inc
add
adc
push
rorb
repz
popf
cmp
mov
sbbl
sub
xchg
sbb
je
jecxz
cltd
dec
push
xlat
xchg
or
and
je
jge
lcall
or
in
xchg
and
mov
lods
push
push
push
jnp
lods
xchg
roll
or
and
push
aam
lds
mov
mov
les
cmp
fcoml
xlat
pop
ret
daa
mov
pop
push
jp
sub
sbb
xchg
cmpsb
pop
ret
sub
in
out
push
push
je
push
in
push
imul
lret
das
xchg
push
sub
mov
scas
or
push
inc
mov
mov
jae
dec
xchg
int3
adc
ret
insl
sub
ja
sub
push
xor
scas
or
fstps
mov
and
xchg
xor
fs
mov
jbe
arpl
mov
sbb
pop
leave
xor
test
stc
loope
push
pop
lock
in
fimull
mov
dec
les
adc
cmc
xchg
cmc
pop
or
add
xchg
xchg
test
dec
push
pop
mov
das
addr16
dec
push
xchg
jmp
mov
in
add
loop
jl
flds
stos
xchg
repnz
movsb
sbb
jl
push
mov
jbe
dec
icebp
call
clc
out
enter
lea
inc
jbe
fsubrs
shlb
stos
push
mov
and
aad
mov
imul
xchg
or
cwtl
cmp
xchg
or
jge
cmpb
inc
push
mov
jbe
stc
sub
pop
out
dec
and
test
and
xor
mov
fwait
inc
std
push
sbb
dec
fdivrl
cmc
cmp
cli
notl
push
jp
mov
inc
sub
fimuls
push
adc
int3
mov
dec
cmpsl
jb
daa
aam
cmc
jp
hlt
aad
sbb
cmp
sub
mov
in
sub
gs
popa
out
jae
data16
es
das
cld
push
mov
push
enter
test
jnp
mov
or
or
ret
xor
mov
rcrb
lods
loope
jbe
xor
mov
ljmp
fidivs
inc
fs
outsl
jbe
loope
push
lea
pop
es
cmp
cltd
lahf
cmpsl
imul
jne
push
jo
loopne
or
fadds
pop
cmp
out
mov
jg
mov
cmp
xchg
add
push
sbb
bound
cmp
rolb
jae
mov
jae
mov
jno
mov
aas
mov
aad
cmp
popa
mov
xor
jl
or
push
jae
test
add
aad
sbb
test
in
mov
mov
fisubs
mov
lock
add
dec
fnsave
cwtl
xchg
addr16
and
push
xchg
push
mov
fdivrl
adc
stc
movsb
fsubs
ja
subb
inc
cli
xchg
sar
mov
sub
adc
ret
jo
xchg
or
pop
scas
insb
add
or
sarb
cmp
push
xchg
ljmp
out
icebp
idivb
pop
outsl
pop
popa
sub
cmp
imul
xor
sarl
sub
daa
stos
pop
jbe
xor
or
ret
jnp
stos
or
adc
cmp
xorb
aad
sti
aad
cmp
push
test
pop
sub
fldl
pop
repnz
adc
fs
idivl
or
fcoml
mov
push
sbb
gs
ds
and
addb
das
popf
loopne
cmpsl
push
and
add
mov
notl
cmp
adc
pop
xlat
mov
sbb
add
ficoms
mov
xchg
mov
sbb
outsb
jmp
cmp
jg
mov
dec
sbb
mov
sub
stc
xchg
adc
jg
out
sti
pop
daa
xchg
mov
ss
jmp
arpl
aas
aaa
push
or
mov
dec
imul
cmp
inc
jmp
pop
pop
xchg
push
arpl
jmp
test
push
jnp
add
in
dec
fbld
jno
ucomiss
pop
fdivs
mov
mov
cmpsb
loope
popf
cli
pusha
xor
das
lods
stc
inc
repnz
mov
sahf
inc
lds
jge
int3
jge
push
cmp
sbb
lret
adcl
dec
cli
and
push
aaa
mov
and
es
dec
stos
sub
mov
push
xchg
jmp
test
es
mov
call
pop
push
scas
lret
inc
in
pushf
pop
mov
jae
imulb
inc
push
std
and
xchg
lahf
gs
cltd
adc
dec
cld
in
sub
movsl
mov
or
mov
xchg
mov
lahf
cld
in
xchg
add
lock
dec
and
nop
pop
imul
mov
inc
test
jne
and
lds
data16
sti
aam
mov
add
cmpsl
adc
pop
lods
xchg
outsl
cmp
jno
in
in
sbb
push
bound
jbe
sbb
cli
mov
mov
jbe
mov
adc
xor
popf
mov
xlat
inc
fs
fidivl
or
xor
xor
cmp
daa
mov
pop
pop
mov
loop
shlb
lcall
dec
inc
mov
sbb
lret
inc
cltd
xor
shl
popa
addr16
pop
push
cli
and
test
pop
xchg
inc
movsl
movsb
pop
in
gs
scas
jae
ds
jnp
mov
ja
fisttps
dec
push
stc
out
and
ss
clc
add
in
mov
movsb
mov
aaa
adc
add
shlb
sbb
lods
jecxz
hlt
shrb
sub
shlb
xchg
push
inc
jae
dec
pop
mov
add
in
hlt
pop
sub
in
xor
bound
je
sub
jle
xchg
aad
xchg
or
dec
inc
mov
call
push
aad
cmp
cld
pop
or
or
out
in
push
jne
xor
inc
sar
push
or
loopne
add
ss
std
jg
in
mov
pop
jmp
aaa
in
out
loop
dec
mov
roll
hlt
xlat
mov
sarl
pop
dec
cltd
decb
fldenv
call
movsl
daa
or
ret
lcall
xor
xor
mov
jb
cmp
lret
dec
sbb
pop
cld
or
inc
inc
fs
daa
inc
je
js
sub
inc
adc
scas
or
fsubl
movsb
leave
xchg
out
enter
and
hlt
scas
inc
or
fistl
rolb
int
cmc
scas
out
cmp
aaa
cli
neg
jge
pusha
bound
loope
das
mov
push
fbld
gs
inc
cmc
cwtl
xchg
sub
fstp
pop
scas
test
push
inc
dec
fs
sbb
fsubrs
pop
rcrl
push
imul
fsubrs
sarl
mov
cmpsb
inc
dec
int3
shr
xor
fisubrs
test
cs
sbb
mov
xor
scas
aad
cltd
in
lea
mov
movsl
negl
mov
add
aam
cmp
in
dec
pop
fisubrl
rorl
notb
cmpsl
pop
sub
mov
addr16
push
and
cmpb
sahf
dec
push
cli
ss
jb
lods
pusha
jbe
imulb
or
jns
flds
and
inc
mov
fimuls
and
bound
fs
ljmp
mov
loop
push
shlb
popf
xchg
sub
cmp
mov
bnd
push
data16
or
add
mov
inc
imul
dec
and
insb
xchg
xor
and
in
leave
mov
js
push
and
add
sbb
jae
mov
notl
cwtl
cmp
push
add
gs
mov
daa
inc
mov
cmp
int
jmp
hlt
fs
pop
jmp
shr
popa
and
out
into
std
insb
addb
pop
mov
jl
in
and
dec
or
add
push
stc
mov
or
mov
popf
and
mov
and
or
sbbl
dec
jns
in
mov
sahf
js
mov
lret
scas
xor
lock
arpl
sarl
in
inc
rcrl
xchg
cmpl
jecxz
pop
in
stos
scas
test
sbb
cmp
or
mov
jbe
xor
and
and
xchg
pop
pop
xchg
and
dec
lret
daa
out
sbb
in
iret
nop
xor
dec
ret
sarb
cmp
loope
mov
cmp
fs
clc
mov
out
jno
cmp
imul
sbb
jne
xor
jecxz
out
xchg
push
aas
dec
pop
daa
test
or
xlat
cmp
sub
xchg
cmp
je
in
les
popf
add
jae
jbe
xchg
jno
push
mov
mov
and
scas
add
into
cmp
fwait
arpl
mov
jge
jno
jecxz
lock
lret
xchg
out
pop
lret
sbb
in
out
mov
mov
mov
push
cmpsl
nop
adc
nop
add
pushf
lcall
inc
and
loop
add
inc
dec
clts
popf
stos
fsubs
aaa
pop
push
jge
add
lods
lea
mov
adc
fucomi
cli
imul
stc
xchg
jl
pushf
lahf
lret
lods
push
hlt
mov
adcl
mov
popf
cli
imul
pop
fxch
lods
lcall
cmc
in
dec
lret
xchg
or
pop
nop
cmpsb
and
xlat
add
aad
cmpsl
sbb
ret
lods
call
jns
push
lods
jg
fidivs
sub
adc
adc
push
cmp
dec
out
notb
ja
dec
pop
je
lock
scas
insb
ret
push
adc
mov
xchg
xchg
popa
push
jb
pop
xlat
out
and
sbb
lods
into
xor
push
neg
out
lea
jecxz
cmc
sbb
adc
dec
out
xchg
mov
jg
icebp
sbb
sub
jge
test
adc
stc
and
pop
outsl
cmc
enter
inc
adc
mov
inc
xor
add
mov
mul
mov
dec
fists
xchg
push
adc
sbb
in
mov
or
pop
mov
or
mov
cmc
outsb
push
ffree
leave
or
pop
cmc
in
xchg
fmuls
jecxz
mov
out
adc
les
cmp
adc
sti
pop
sub
aaa
mov
stos
dec
out
mov
dec
nop
jp
js
jg
shlb
jns
and
sbb
cli
xchg
lcall
cmp
inc
into
int3
movsl
mov
cmp
std
fdivrs
rorb
inc
ds
shll
jnp
and
sub
cmp
push
mov
outsl
hlt
dec
test
xchg
jge
je
sub
add
stos
sbb
std
xor
mov
sahf
lret
lods
mov
aad
test
xchg
dec
es
enter
ljmp
arpl
cmp
pop
das
xchg
inc
jle
loopne
movsl
ja
pusha
cmpsb
jae
jnp
cmp
inc
ret
mov
and
xor
pop
push
sti
out
sub
lcall
sti
pusha
cmp
or
mov
or
hlt
test
stos
sub
jnp
das
faddp
xchg
pop
pop
jae
add
sub
in
xchg
xlat
jl
pop
outsb
xchg
xor
cmpsb
ljmp
cs
mov
inc
mov
or
mov
push
jle
inc
lahf
fsubs
cmp
sbb
stos
push
ret
int3
cmp
lds
pushf
jb
jecxz
push
scas
out
je
cmp
mov
cmp
fists
add
movsb
add
sarb
ffreep
test
repz
dec
sub
stc
cmc
shrb
mov
mov
or
push
out
mov
mov
mov
add
inc
or
jmp
adc
shll
push
dec
fistl
and
add
cmpsl
leave
jg
loope
or
loope
or
or
xchg
sub
sub
and
test
iret
stos
inc
push
push
mov
sbb
pushf
imul
insb
pop
cmp
dec
jno
jns
inc
xor
inc
cmp
xor
ret
shlb
lods
lcall
in
push
pop
xor
jp
mov
test
dec
cmpsb
xchg
repz
fcmove
bound
ret
adcl
cmpsb
imul
dec
lahf
dec
cwtl
or
test
pop
fdivrl
outsb
sub
sarb
push
lods
insb
scas
gs
and
js
mov
imul
or
stc
pop
jb
decb
in
sbb
adc
test
jae
jecxz
sbb
xor
inc
adc
insb
mov
sub
xchg
mov
fmul
test
mov
aam
sub
pushf
out
cmpsb
adc
xchg
fdivrs
add
fmul
pop
add
outsb
cmpsb
push
ljmp
bnd
pop
fstl
mov
pop
enter
cmc
std
pop
sbb
js
sub
outsl
popf
in
mov
cmpsl
pop
push
push
mov
outsw
pop
cmpsb
xor
fdivr
out
dec
sub
cmp
fstpl
push
mov
lock
mov
or
mov
aaa
sub
xor
test
cmpsb
xor
adc
xchg
adc
mov
cltd
xchg
stos
pop
and
jae
mov
insl
inc
mov
adc
pop
xlat
push
int3
and
and
sbbl
movsb
xchg
mov
add
jne
xchg
xor
dec
outsl
scas
test
and
popf
sbb
int3
lods
cmp
dec
or
xlat
js
pop
out
fwait
test
movl
xor
inc
pop
mov
cli
out
sarb
mov
lcall
js
lock
je
bound
mov
sbb
mov
mov
mov
adc
sbb
cmp
or
je
or
pop
adc
clc
cmpsl
xchg
imul
divl
pop
pop
out
mov
ret
or
hlt
ljmp
test
xchg
shl
test
stc
lret
xor
punpckldq
jns
mov
shl
sub
imul
aas
in
test
fucom
imul
sbbb
rcrb
dec
sub
adc
add
cmp
cmp
insl
enter
add
lock
or
in
insl
add
xor
xor
adc
repnz
call
cmp
shll
inc
cwtl
pop
jo
mov
pushf
sbb
and
into
cmp
xor
out
cwtl
out
arpl
push
cmpsl
pop
hlt
dec
push
adc
dec
or
jb
inc
cmpsl
jnp
je
stc
sbb
push
adc
jne
or
inc
adc
adc
fldenv
scas
orl
outsl
inc
inc
mov
push
sub
int
mov
mov
outsb
hlt
mov
push
loope
mov
push
xor
xlat
mov
add
mov
sbb
lods
add
outsb
sub
cltd
fdivl
add
stos
loopne
xorb
xor
and
or
shl
sti
or
xchg
or
sbb
dec
inc
cmp
rcrl
movsl
xchg
xchg
lea
in
leave
imul
sub
fisttpl
clc
jnp
adc
data16
mov
mov
in
cmpsl
sub
jecxz
add
outsl
dec
xchg
adc
in
int3
rol
xor
addr16
mov
in
aad
icebp
sbb
pop
push
dec
cmpsl
cmpsl
pop
sbb
in
sbb
jne
mov
cwtl
sbb
ret
inc
xor
pop
pop
xchg
mov
xchg
sub
xchg
pop
xchg
enter
cltd
repnz
scas
mov
leave
mov
lods
jp
xchg
stos
mov
push
adc
cmpsb
lret
push
push
in
imul
lock
hlt
jecxz
mov
iret
xlat
jp
out
dec
loope
jp
fists
add
imul
movsb
cmp
repnz
addb
sbb
cmp
sub
mov
fs
mov
inc
pop
jmp
loopne
pusha
mov
push
jle
movsl
pop
into
fcomi
neg
dec
les
mov
js
adc
out
cwtl
movsl
pop
lods
mov
test
inc
sbb
fcmovne
xor
fimuls
inc
dec
movsb
cmc
mov
dec
and
pop
jmp
lret
push
loop
adc
aas
adc
dec
les
in
repnz
cmc
out
leave
je
cli
sub
jge
ja
xchg
and
popa
jmp
insb
incl
aad
das
les
les
inc
fstps
dec
icebp
mov
dec
mov
jg
pop
mov
fs
jmp
loopne
xchg
outsl
fildll
jge
jb
iret
out
mov
clc
xchg
sub
sbb
lsl
test
stos
sbb
int3
mov
pop
inc
out
orw
xor
add
fbstp
adc
dec
xor
mov
pop
dec
outsb
ret
sbb
int3
gs
mov
and
mov
mov
mov
inc
cmpsb
mov
fisubl
sbb
subl
lock
jmp
and
sbb
push
aad
pop
or
bound
pop
lods
dec
ljmp
xchg
xor
dec
push
jnp
out
pop
gs
arpl
and
cld
xchg
or
mov
sbbl
mov
pushl
adc
enter
lods
push
ror
scas
mov
rcl
cld
and
xchg
pop
js
or
fs
js
pop
call
pop
test
mov
mov
mov
pop
clc
mov
daa
movsb
lods
sbb
inc
and
outsb
movsl
mov
sbb
stos
in
xor
pop
shr
xchg
aaa
jl
in
xlat
icebp
insb
ss
lods
pop
inc
fcmovbe
leave
cmp
mov
jle
sub
xchg
enter
aas
mov
jno
mov
jb
push
dec
call
out
idivb
fistl
into
sarl
mov
push
ret
jmp
xorb
sub
dec
arpl
call
pushl
stc
mov
cmc
adc
jo
jecxz
stos
lods
sbb
or
lods
out
call
sub
in
mov
stos
lret
sbb
jg
add
dec
or
lcall
mov
rcrl
sub
outsb
xchg
jnp
mov
ds
cmpl
jmp
sub
outsl
dec
mov
insl
sbb
push
lret
dec
roll
add
out
popf
push
out
leave
xor
les
cli
cmp
mov
rorl
cwtl
sti
into
insb
and
jno
mov
xchg
mov
ficoms
fucomi
xor
or
dec
mov
cmp
insb
or
push
sub
mov
call
fs
cmp
push
sub
lcall
sti
stc
movsl
popa
test
ret
sbb
dec
and
aam
lcall
cli
and
mov
lods
push
daa
mov
fsubr
inc
or
sub
stos
adcl
adc
mov
pop
cmp
sahf
and
enter
daa
sbb
xor
rorl
imul
mov
rcrl
xor
push
das
pushf
fstl
push
cwtl
mov
mov
imul
mov
mov
jl
adcb
dec
ret
xchg
pop
shll
enter
jne
popf
or
fldt
push
nop
sahf
insl
and
pop
popa
shr
mov
shll
or
imul
movsb
outsl
mov
aam
test
dec
fdivl
fsubl
mov
addr16
fs
pusha
xchg
cmp
mov
aaa
cmp
jne
clc
mulb
add
push
push
idivb
arpl
dec
inc
mov
ds
dec
add
mov
andb
es
pop
push
mov
and
lods
ret
neg
dec
ds
lcall
jae
test
rcll
sub
lds
pushf
jnp
jle
push
into
ss
sbb
repnz
pop
jmp
scas
jnp
sbb
adc
sbb
mov
push
inc
sahf
cmc
dec
inc
mov
pusha
mov
out
or
xchg
jg
call
in
es
add
jg
lahf
cmp
add
inc
out
lock
jns
lods
push
cmpsb
ja
add
cs
sbb
sahf
pop
cmc
and
and
cmp
push
dec
sbb
out
and
jns
xor
mov
mov
push
adc
sbb
fildl
sarl
cli
sbb
push
popa
dec
clc
test
push
xor
es
dec
data16
mov
sub
insl
gs
push
cmpsl
xchg
and
mov
and
mov
jmp
jmp
cwtl
fsubrp
jo
xor
xchg
imulb
ficoml
rorb
lods
sub
push
movsl
ja
and
cld
sub
je
popf
cmp
pop
into
popf
dec
push
shll
jo
insb
push
dec
cwtl
mov
pop
repz
out
dec
cmpsl
cmp
shll
xor
lahf
mov
test
and
dec
jmp
jecxz
mov
or
xchg
jns
mov
jae
cwtl
pop
mov
addr16
or
fwait
mov
inc
int
and
js
jns
lret
dec
cwtl
in
push
test
jne
mov
dec
das
cli
mov
mov
movsl
xchg
mov
inc
lods
outsl
and
fstl
pushf
mov
or
xchg
shrl
mov
adc
mov
jmp
test
into
pop
sub
dec
adc
lahf
nop
dec
mov
mov
int3
fildll
sahf
sub
ljmp
or
or
popf
mov
lret
or
add
gs
icebp
loope
or
mov
inc
js,pn
mov
jno
ret
mov
adc
dec
lds
imul
push
inc
add
sbb
pusha
pop
adc
shll
jmp
inc
call
dec
mov
pop
or
test
rcl
xchg
pop
rol
xchg
out
data16
lods
fisubs
mov
mov
pop
mov
xor
stos
xlat
adc
jae
jge
or
lds
cmp
scas
mov
imull
xor
shll
xor
inc
cli
lods
movsb
cli
push
mov
mov
faddp
lret
testb
adc
ja
ffree
pop
mov
and
push
adc
push
dec
cmp
add
or
sahf
fs
bound
and
push
and
pop
sbb
popf
insl
adcl
les
dec
in
inc
adc
push
test
fcoml
push
fidivrs
xchg
or
mov
xor
pop
push
mov
cs
sbb
fdivrs
popa
xlat
xchg
jb
mov
nop
fidivrl
jae
lock
or
data16
adc
mov
rolb
jnp
pop
and
in
push
add
nop
cltd
imul
push
pop
das
jne
pop
ret
adc
lds
mov
testl
ds
sahf
das
repz
clc
sub
mov
mov
sub
leave
mov
inc
loopne
xor
es
push
hlt
fidivs
push
mov
call
xchg
leave
in
sbb
mov
cmpl
push
loope
jb
dec
aad
insl
call
and
jge
mov
cmp
dec
push
sbb
movsl
or
dec
shl
test
dec
mov
adc
ds
repnz
sar
sub
mov
sbb
cmp
push
and
push
fwait
push
test
sti
aaa
xor
pushf
dec
mov
lea
mov
xor
cmp
add
fiaddl
pop
insl
stc
fdivs
pop
cmp
jp
sbb
lods
test
xchg
add
inc
add
test
and
and
in
pushf
mov
pop
xor
inc
fsubs
pop
stos
repz
imul
add
test
clc
add
loope
test
and
xchg
sub
dec
ror
mov
ss
jg
out
mov
adc
push
popf
lock
sbbb
push
inc
in
imul
pop
add
jp
dec
aas
or
into
jnp
xlat
pop
je
mov
negb
into
push
in
stos
stc
cmp
loope
pop
stos
sbb
ja
pushf
pop
push
jp
rclb
in
sub
outsb
and
daa
fwait
jbe
lret
inc
in
jle
loopne
mov
push
call
in
dec
test
repz
sub
cmpsb
xor
push
imul
je
pushf
je
int3
sub
sub
gs
movsl
push
dec
flds
push
or
mov
jmp
aas
sahf
std
in
sub
test
sahf
or
and
or
xor
repnz
loop
int3
push
pop
jg
push
mov
outsb
pop
lret
movsl
jmp
bound
sbb
or
lods
dec
jecxz
xor
mov
xor
xor
fcoms
fdivrl
cmp
inc
xchg
inc
inc
dec
ds
out
cmp
shll
adc
mov
and
bound
test
mov
icebp
and
es
push
popa
or
adc
out
out
mov
aas
gs
pop
inc
dec
bnd
add
cmp
xor
push
neg
lea
xor
pop
icebp
mov
xor
dec
lahf
jo
xlat
aad
testb
jl
loop
sub
repnz
js
pop
add
aaa
leave
mov
fs
mov
faddl
inc
jne
imul
aam
jne
cmc
mov
loop
loope
mov
push
mov
adc
mov
test
mov
mov
in
hlt
or
push
add
pop
sub
repnz
in
std
pushf
mov
inc
push
sbb
sbb
sub
test
sbb
cmp
loopne
or
or
inc
dec
inc
loopne
dec
pop
push
add
faddp
scas
mov
sub
gs
pop
cmpl
js
mov
dec
add
inc
pop
aam
aas
or
ret
pop
out
mov
pop
jl
mov
push
enter
dec
in
pop
inc
sbb
mov
jge
dec
pop
addb
test
movsb
inc
pusha
jg
std
sub
jmp
jae
ror
cmovp
jl
jns
addr16
mov
call
xchg
push
push
popa
mov
sub
aaa
sub
aaa
loop
ret
cmp
loop
push
faddl
adc
cltd
fnclex
mov
scas
imul
decb
or
dec
fldenv
shll
mov
bound
xor
mov
jo
fisttpl
mov
lret
ds
adc
xor
mov
shrl
mov
rolb
xlat
dec
jle
test
add
scas
or
ds
fstpl
xchg
ret
clc
pop
sbb
push
inc
jmp
mov
ljmp
inc
inc
rclb
cmp
in
cltd
ror
or
pop
xor
and
and
or
ret
cwtl
nop
mov
mov
push
rcl
jg
arpl
dec
push
inc
cwtl
sub
xor
popf
jge
mul
add
ret
xor
jmp
and
cmp
sbb
leave
stc
inc
ficoms
insl
repz
xchg
xchg
jp
shlb
imul
shlb
test
adc
fwait
push
cli
dec
out
or
mov
daa
inc
cmp
jo
mov
or
and
movsb
push
aam
call
add
inc
das
adc
mov
leave
inc
fwait
sti
push
add
ja
xchg
lods
sub
pop
add
adc
test
jg
sahf
lahf
mov
in
push
inc
pop
push
outsl
jl
je
addr16
lods
jmp
lea
xor
xchg
dec
cmp
rcrl
sbb
int
mov
adc
jp
add
test
sahf
icebp
in
inc
dec
rol
push
jmp
dec
jo
out
mov
outsb
push
movsb
std
fucomip
mov
add
push
enter
mov
mov
add
pop
fcmove
mov
call
shl
mov
fdivs
pop
sub
jo
mov
test
push
movsl
mov
mov
stos
jo
pop
iret
cmpsb
sub
jns
clc
mov
adc
out
cli
dec
icebp
outsl
mov
mov
dec
cmp
outsl
or
enter
mov
fnsave
lret
loopne
add
sbb
in
mov
mov
js
sti
inc
or
pop
cmpsl
in
cmp
cmc
inc
cltd
mov
sarl
movsb
sti
mov
sbb
pop
sub
xor
mov
push
sbb
ret
add
mov
rorb
es
jnp
cmp
inc
mov
or
pop
jns
and
dec
cs
cmp
outsb
inc
icebp
mov
lds
in
jae
ds
or
out
push
movsb
mov
mov
and
gs
dec
xchg
insl
aad
xchg
inc
and
mov
cs
fs
xchg
inc
loopne
mov
xor
adc
test
es
add
mov
mov
mov
jl
xor
jmp
sub
iret
cmp
xor
mov
jne
sbb
xchg
scas
mov
jne
lahf
repz
repnz
and
push
pop
pop
xchg
cmpsl
cmp
jge
cli
loopne
pop
cmp
xor
iret
pushf
repnz
lea
jle
scas
inc
xchg
movsb
fsts
dec
push
xchg
and
repz
das
sbb
add
ja
outsl
xor
out
push
dec
ds
lods
ss
adc
repz
cmp
sarl
xor
xor
sahf
push
cmp
jl
mov
add
out
ffree
mov
xorb
xchg
leave
mov
dec
mov
xor
push
fs
call
sahf
aad
addr16
pop
dec
add
dec
push
push
push
sbb
add
mov
dec
or
push
inc
push
mov
cmpsl
in
test
adc
icebp
cmp
outsb
inc
cmp
pop
jb
add
lds
pushl
jnp
inc
pop
out
inc
adc
in
fwait
cmp
lret
mov
xor
nop
rcrb
jg
call
lea
imul
loope
mov
sub
shlb
lret
inc
pusha
xor
jne
lahf
or
fsubs
push
jl
mov
push
cmp
jg
or
push
jnp
inc
and
sahf
loopne
and
jae
inc
push
movsb
mov
add
ljmp
mov
daa
cmc
mov
shr
and
add
and
sahf
sbb
outsl
pop
inc
fsubrs
loopne
xor
fxtract
push
mov
push
add
xchg
jo
iret
sub
rcrl
and
pop
push
jmp
and
movsl
add
xor
arpl
or
nop
mov
subl
mov
cli
fsubr
push
xchg
pop
test
adc
call
inc
fimull
sub
dec
addr16
outsb
ljmp
add
adc
mov
mov
lret
pop
ljmp
pop
push
sub
cmp
test
cli
js
xchg
scas
pop
je
in
jae
xchg
stc
mov
leave
dec
pop
push
cs
adc
adcl
cmp
mov
jno
dec
test
imul
push
aas
push
push
addr16
or
sbb
add
adc
sbb
or
and
xor
lahf
push
movsl
sub
lcall
dec
pusha
pop
les
sub
mov
xchg
or
jbe
push
push
add
sbb
mov
dec
jnp
add
add
jnp
sahf
cmp
mov
nop
inc
shrl
lods
push
int
xor
jnp
dec
rcll
adc
add
dec
lahf
mov
dec
xor
aad
jne
adc
xlat
push
push
or
cmp
pop
ss
jge
pop
and
jmp
jns
inc
nop
jns
push
popa
cs
mov
xchg
cmp
and
xorl
ss
fstps
fisttps
xor
xor
or
add
xor
in
sub
call
add
mul
adc
inc
adc
aad
inc
fxch
sbb
xor
sbb
or
inc
xchg
lea
jne
gs
cli
add
test
js
xor
std
sarl
into
js
pop
dec
enter
inc
adc
out
and
pop
nop
in
stos
xor
xor
or
popf
push
mov
cmp
push
mov
hlt
pop
nop
mov
bound
loope
lahf
out
inc
ret
fcoms
jo
mov
mov
aam
aam
in
jg
gs
add
aam
jg
adc
popa
mov
push
push
inc
movsl
js
in
insl
fmull
mov
rclb
sub
popa
outsl
loope
xor
test
aad
ljmp
fimuls
dec
or
dec
xlat
test
sbb
addr16
stos
cmp
lods
adc
mov
mov
movl
inc
shl
lock
xor
push
push
mov
mov
ret
inc
ds
and
in
mov
xchg
je
jno
insl
mov
das
mov
lahf
aam
lahf
loop
xor
xor
inc
movl
jae
scas
jb
mov
subb
rolb
cs
cmp
inc
dec
in
inc
xchg
xchg
mov
popf
push
xchg
and
xchg
xor
lahf
jmp
ss
popf
jns
es
int
jae
push
lret
mov
aas
clc
or
add
dec
lods
cmp
push
sub
mov
dec
leave
sbb
enter
push
lock
mov
mov
cmc
std
sbb
in
hlt
imul
jno
in
rcrb
inc
test
in
or
xchg
dec
movsb
sbb
int
sarl
jnp
rcll
cli
sahf
push
jle
in
mov
fldl
mov
icebp
lcall
mov
xor
xor
incl
mov
sub
cmp
scas
aam
mov
movsb
mov
sub
sub
mov
ret
xchg
pop
mov
xchg
rorl
dec
loopne
inc
add
add
pop
insb
lret
outsl
test
dec
inc
xchg
and
je
cltd
push
in
xor
dec
outsl
or
jg
or
and
ficompl
femms
in
sbb
sbb
rcll
cmpsb
decl
insb
out
jae
adc
xchg
jp
xchg
pop
jo
bnd
sbb
inc
lods
out
xor
cmc
ret
lahf
jp
das
mov
push
dec
rcrb
sub
into
xor
sbb
out
xchg
pop
xchg
xor
push
fld
push
test
push
aad
jmp
fdivl
cmp
mov
std
scas
arpl
ret
jmp
idivb
xor
push
pop
test
jp
push
in
stos
fnstsw
loopne
mov
or
inc
out
xor
inc
andl
pop
icebp
mov
inc
jae
mov
push
add
rolb
dec
inc
shlb
orb
cmp
jge
enter
out
xlat
mov
popf
lock
cld
mov
cmp
stos
cmp
dec
icebp
mov
scas
add
pushf
jl
jne
dec
pop
cwtl
incl
push
rol
arpl
sub
xor
and
and
push
inc
sti
mov
jge
mov
ja
xchg
mov
int3
push
jl
xchg
sbb
xchg
fildll
pusha
pusha
cld
fld
push
sub
outsl
imul
jecxz
popf
mov
pop
sbb
inc
xchg
iret
inc
sbb
sbb
out
leave
lock
test
cmp
lret
je
adc
out
addl
push
xor
mov
mov
popa
jmp
scas
and
sbb
adc
je
insb
jg
xor
dec
fbstp
bound
mov
inc
fbstp
pop
jo
inc
aas
jecxz
hlt
and
outsl
mov
mov
and
mov
testb
cmc
xchg
loop
cli
popa
ret
xchg
mov
cmp
int
add
mov
xchg
mov
cmp
orl
cs
push
adc
aam
popa
and
addl
pop
lret
jno
sub
jecxz
lahf
inc
movsb
mov
icebp
lret
cltd
call
cwtl
jae
add
flds
das
push
adc
sub
cs
sub
shll
xchg
cmpsb
mov
icebp
lea
xlat
test
jnp
jae
lret
loop
in
xlat
test
lahf
fsubrs
and
jnp
and
stc
sbb
data16
mov
jmp
insb
mov
cmc
jo
mov
sti
sbb
jecxz
lahf
dec
sub
mov
xlat
fs
lahf
fnstenv
inc
push
pop
cli
cmpsl
sbb
sbb
and
push
mov
lahf
jp
sbb
cmpsb
or
ror
jg
je
xchg
mov
popa
mov
hlt
xchg
push
dec
push
movsl
and
insb
dec
mov
lret
push
adc
cmp
int
xchg
mov
data16
push
add
shll
mov
out
fnstenv
or
mov
int3
dec
push
xchg
rcr
add
ja
dec
push
bound
xchg
push
dec
dec
out
or
pusha
sub
adc
mov
lock
dec
lock
mov
cmp
push
push
repnz
sub
push
dec
xor
adc
pop
jmp
test
out
adc
lret
mov
cmp
sahf
push
sahf
fcomps
jg
mov
push
adc
mov
test
dec
pop
int3
mov
fidivl
andl
and
sahf
adc
inc
mov
jmp
cmp
mov
mov
xchg
jbe
mov
iret
je
test
fimull
mov
jg
push
xchg
jge
or
mov
push
je
cmp
xchg
jns
add
repz
hlt
or
or
sahf
mov
std
loop
dec
or
add
lock
cmp
sbb
shl
fbld
out
dec
sarl
pop
sbb
arpl
repz
jmp
cmpb
leave
or
push
int
fmuls
sub
scas
push
orl
leave
mov
aad
cmc
mov
or
andl
mov
shll
insl
call
cwtl
pusha
add
xor
and
jae
push
fdivrp
jg
lods
aad
test
pop
hlt
mov
pusha
sub
xor
aad
adc
iret
cmp
jo
iret
push
movsl
das
xchg
rclb
rorl
icebp
pop
jg
cmp
cld
imul
pop
mov
aad
popf
les
or
test
cmpsl
jecxz
pop
sbb
mov
cmc
cli
subl
incb
sbb
js
idiv
or
pop
jp
lahf
loopne
or
dec
lods
aam
sub
repz
or
push
push
shll
fcoms
jp
push
test
mov
mov
out
and
fs
cmpsb
xchg
fsts
jb
mov
jnp
std
outsl
bound
in
mov
xchg
inc
sub
xchg
movsl
shr
push
inc
and
pop
sbb
lds
mov
jbe
xchg
fldenv
icebp
movsl
mov
push
xchg
xchg
mov
lea
pop
lods
push
add
or
cld
fisubrs
add
test
push
fdivrl
xor
lcall
mov
hlt
stos
xor
adc
mov
inc
and
mov
lods
aad
sbb
int3
sarb
cmpsl
ss
nop
sahf
fisttpll
icebp
leave
ja
xchg
inc
push
imul
inc
mov
fimull
inc
in
adc
push
jb
data16
jecxz
dec
or
fisubs
sbb
lods
repz
dec
gs
ljmp
out
add
lock
push
push
in
scas
testb
dec
mov
adcl
pop
ja
xor
jb
lcall
shlb
inc
jne
sbbl
mov
shll
pop
js
adc
inc
fidivs
adc
or
outsb
xchg
loopne
and
cmpsb
mov
mov
ficoms
outsl
jno
add
sub
dec
mov
fcompl
sub
jne
mov
fs
mov
mov
pop
push
or
dec
inc
and
les
inc
sbb
call
sub
and
sub
jle
sub
mov
scas
fmuls
or
sbb
xchg
jb
xchg
adc
pop
and
outsl
mov
xor
mov
sbb
stos
sub
pop
or
mov
shll
icebp
xor
scas
ss
pop
pop
in
dec
movups
inc
cmpsl
in
push
xchg
inc
in
xor
subl
mov
enter
inc
lahf
mov
or
jl
and
cmp
cli
cmp
or
test
jl
xor
test
xor
cmp
or
lds
mov
test
mov
sub
dec
shrb
mov
mov
flds
outsl
insb
dec
xorl
or
xor
sbb
add
sub
push
call
mov
popf
mov
pop
cmp
loopne
push
jo
mov
sub
imul
jnp
dec
lcall
jle
push
inc
pop
iret
cld
repz
lcall
shll
in
pushf
mov
outsb
adc
ret
shr
in
dec
out
mov
xchg
fsubs
push
into
dec
out
sarb
dec
dec
pop
add
xlat
inc
adc
mov
push
popf
cwtl
pop
mov
incb
stc
std
xchg
scas
and
jbe
and
outsb
push
shll
pop
jle
jge
or
mov
inc
and
mov
inc
loop
lahf
cli
out
cmpsl
pop
clc
xchg
rolb
push
mov
in
and
sbb
and
sbb
out
add
mov
or
pop
in
lods
out
cmp
into
into
js
mov
test
enter
pop
rcr
sub
out
roll
fistpl
pop
in
orb
loope
pop
int
xlat
roll
out
push
lock
inc
lea
adc
dec
sub
push
mov
orl
xchg
das
scas
imulb
scas
pop
andb
lods
fmulp
fcomps
or
xchg
out
pusha
inc
jp
incb
insl
mov
push
arpl
xor
cwtl
clc
cs
hlt
test
jbe
clc
xchg
add
cmpsb
lock
jecxz
loopne
inc
rorb
sbb
push
mov
push
or
jg
cmc
lret
mov
loope
rcll
push
jg
cmpsb
popa
pop
fst
lret
mov
stos
rcrb
pusha
data16
inc
push
push
std
idivb
pop
adc
sbb
sub
test
sub
mov
ret
inc
cmpsb
add
jae
add
clc
adc
pop
push
sbb
enter
cwtl
push
out
fcmove
test
repnz
xor
xchg
sbb
shll
push
or
adc
mov
adc
fst
jmp
js
push
cmp
sbb
loopne
int
adc
movsl
adc
inc
push
insb
mov
test
inc
sub
add
cs
xchg
nop
cmp
js
inc
pop
popf
pushf
sub
dec
hlt
lret
add
adc
sti
or
test
mov
ss
clc
dec
xor
adc
fstl
mov
mov
in
scas
sbb
inc
cmp
and
mov
lahf
mov
cli
push
leave
fisubs
cmp
int3
scas
arpl
and
imul
stc
fmull
pop
ss
inc
jbe
mov
or
dec
je
mov
movsb
push
fisubl
fadds
and
lret
inc
pusha
xchg
out
int3
and
popa
inc
into
ficoms
xchg
add
mov
out
iret
inc
rcrl
test
dec
xchg
xchg
add
sub
gs
sub
stc
jge
push
je
fsubrp
mov
lods
push
test
cmp
pop
adc
jo
dec
cmp
xchg
cmp
mov
mov
stc
setp
fwait
mov
fiadds
jmp
sub
into
data16
imul
mov
inc
test
cli
sbb
inc
aaa
jge
dec
je
insb
inc
mov
mov
inc
mov
dec
xor
cmp
imul
arpl
les
lret
and
cli
loop
inc
inc
push
inc
or
rcr
test
lret
add
fdivr
xor
bound
aaa
cmc
dec
sarb
sbb
lock
je
cmp
cld
les
std
or
leave
stos
ror
movsb
pop
cvtdq2ps
popl
enter
sbb
mov
or
fcmovnbe
in
mov
lret
out
cmp
pop
outsb
jg
cmpsl
cmpsb
pop
or
cltd
inc
ret
adc
dec
mov
jecxz
pushf
xchg
pop
add
or
lods
mov
int3
fwait
mov
xor
cmc
push
negl
cmc
fwait
repz
mov
mov
outsl
fucomip
out
push
stos
test
xchg
incl
inc
xchg
shll
and
aad
aas
jle
loope
pop
je
repz
in
add
stc
les
xchg
adc
xor
movsb
in
ficompl
push
stc
sub
popf
cwtl
aad
dec
sub
mov
inc
enter
sbb
adc
mov
lods
adc
inc
stos
dec
cmp
sub
add
add
pop
loopnew
pop
jbe
xchg
push
lods
push
cltd
stos
mov
sti
jne
rol
xorb
mov
je
es
fsubrl
test
lahf
xchg
jbe,pn
test
orb
inc
cmp
test
pop
xchg
cli
outsb
sub
or
mov
and
jnp
data16
or
cmp
dec
jns
jmp
cmp
sbb
cmc
ss
in
mov
pop
lock
add
neg
outsb
sbb
mov
dec
mov
subl
pop
cmp
ds
adc
cmp
mov
aas
call
push
test
lret
ljmp
int3
cmp
xchg
fmuls
fstps
pop
repnz
int
fcompl
in
mov
mov
sti
cmp
add
add
mov
mov
movsl
fsts
jl
sub
in
out
push
cltd
add
aas
arpl
rcll
push
stos
jb
xchg
cmp
sub
mov
mov
sub
out
push
jno
mov
xlat
mov
mulb
test
pop
cmpsl
and
xor
popf
mov
cwtl
xchg
insb
lods
pop
push
pop
add
and
push
fucom
dec
js
xchg
sub
and
mov
xchg
ffreep
pop
cmp
jmp
stc
scas
mov
sbbl
icebp
xchg
pusha
movsl
mov
mov
sarb
int3
fisubrl
sbb
lds
les
xchg
in
ja
mov
xchg
pop
dec
jmp
jg
lahf
push
adcl
xchg
xchg
pushf
inc
pop
jno
xchg
fsubrs
into
out
mov
int
jae
sub
xor
jecxz
sbb
adc
inc
jp
cmp
jge
jb
sub
mov
call
cmp
clc
cmp
sbb
ss
xor
mov
or
add
lret
inc
xor
mov
cmpsb
and
outsl
xchg
idivl
xor
xor
lods
adc
gs
pop
call
outsl
jbe
lods
dec
sbb
inc
hlt
sbb
fldt
out
ja
push
pop
subl
out
sub
xchg
mov
add
mov
iret
scas
add
repz
daa
xor
in
dec
sbb
sbb
fucomp
hlt
mov
call
pop
jnp
aas
and
out
es
ret
outsb
std
xchg
addl
jmp
cli
shll
pop
push
xchg
loopne
addb
stc
push
dec
xor
pop
jae
push
push
push
shlb
xchg
mov
xchg
jbe
sbb
mov
in
jge
xchg
sti
mov
stc
push
xor
mov
ja
cmpsb
cmp
fsubs
mov
shrb
pop
mov
dec
and
cmp
inc
xchg
and
or
mov
out
shlb
es
dec
sbb
lcall
mov
sti
cmp
in
mov
insb
cmp
jne
cmp
aad
pushf
dec
fsubrl
xchg
jnp
inc
xchg
daa
mov
jecxz
cmpsb
movsl
xchg
dec
jl
ss
jge
enter
jno
mov
dec
lods
call
call
out
int3
fisubrs
movsb
mov
icebp
stos
stos
cmp
rcr
decl
inc
sarb
mov
push
and
dec
dec
jg
or
push
daa
out
add
mov
push
je
movsb
das
sarb
mov
pop
add
jmp
stos
popf
fadds
jb
idiv
imulb
movsl
pop
rorl
mov
inc
insb
xor
sti
mov
cmp
mov
pop
fwait
pop
fistps
mov
mov
lahf
and
mov
stc
jp
cmp
shlb
xchg
fsubs
jb
mov
mov
add
xor
lock
mov
sbb
popf
and
pop
mov
mov
dec
lods
sub
inc
ret
inc
orl
dec
imul
pushl
push
aas
std
add
sbb
cs
jg
cmp
aam
in
addr16
repnz
add
xchg
sbb
xlat
xor
sub
lods
movsl
loop
std
jecxz
xor
test
pusha
cmpsb
push
adcl
dec
cwtl
mov
cmp
rcrl
cmp
lea
repnz
push
xor
popl
jb
jb
mov
popa
mov
out
or
shlb
cltd
xor
nop
inc
mov
mov
cmpsb
insb
shrl
xchg
pop
out
and
sti
stc
int
xor
ret
xor
cmp
cmpb
jl
lahf
add
mov
inc
daa
pop
mov
imul
and
lret
nop
pop
add
ss
repz
dec
sub
xor
arpl
sbb
push
test
ljmp
mov
jb
pop
pusha
or
aas
push
aas
int
xchg
lcall
pop
dec
cli
sti
sbb
push
xchg
jae
xchg
xor
jb
inc
movsl
incl
sub
sub
mov
and
mov
or
test
cltd
mov
inc
mov
sbb
or
mov
jo
mov
xorl
cltd
movsb
pop
mov
cmpsl
aas
jnp
jl
arpl
mov
and
adc
test
inc
insl
inc
les
in
dec
adc
cmpsb
in
sbb
mov
rclb
jns
fdivrl
add
lahf
xlat
mov
mov
mov
push
pusha
dec
xchg
mov
sahf
mov
mov
mov
pop
jb
movsb
inc
repz
jno
gs
xchg
lcall
in
ds
mov
movsl
aam
mov
xchg
in
dec
sub
cltd
mov
ljmp
lods
jl
mov
sbb
dec
cmp
sbb
stos
in
or
pop
fs
jns
cltd
cmpsb
add
or
sbb
pusha
rorl
inc
dec
rcll
cmpsl
push
push
mov
adc
fdivs
stc
pop
mov
add
loope,pn
stc
and
dec
mov
jns
xor
push
idivl
push
sarl
enter
fistps
je
lock
nop
pop
jl
nop
dec
inc
dec
lret
test
push
imul
xor
push
movntq
inc
lcall
jnp
in
or
bound
fistpll
adc
mov
jge
sub
in
sarb
pop
dec
push
clc
sbb
xor
roll
mov
in
fidivrl
lahf
aas
aaa
push
lock
std
repnz
dec
outsl
xchg
pop
add
xchg
lods
data16
cltd
sub
push
pop
xor
pop
popa
dec
xchg
es
sbb
mov
mov
mulb
lods
les
les
lock
lret
mov
cmp
fwait
aas
stc
add
and
push
sbb
stos
xchg
movsl
or
daa
pusha
adc
mov
mov
sti
sub
pop
adc
ljmp
pop
fistpll
addr16
dec
lahf
jo
mov
cmpsb
mov
test
out
mov
fcomps
imul
sti
repz
test
mov
shl
push
push
add
mov
cmp
xorl
iret
lret
divb
jae
xor
pop
jb
xor
out
jmp
pushf
or
sub
jno
inc
mov
idiv
pop
inc
mov
shlb
sbb
or
sbb
scas
fiadds
jns
xor
pusha
lock
aaa
ljmp
jns
fisttps
jmp
pop
sbb
in
and
ss
dec
out
sub
cmpsl
or
sahf
sbb
adc
shl
xchg
sub
mov
jnp
fisttpll
push
popa
dec
add
cmp
mov
mov
sbb
add
xchg
jo
mov
pop
inc
icebp
jl
std
push
out
data16
inc
inc
gs
add
aas
fistl
aad
mov
inc
sarb
push
rorb
in
xor
or
inc
inc
xchg
xchg
mov
in
into
pusha
push
leave
cmp
cltd
add
push
inc
and
and
arpl
jno
or
pusha
int
fcoml
aam
nop
outsl
fsubs
jp
cmp
push
loopne
in
dec
popf
jb
lods
ffree
jae
jb
jnp
popf
shl
mov
dec
iret
cmp
les
xor
push
and
jmp
adc
fnsave
xor
ds
jae
dec
xor
daa
fcmovb
repnz
jno
leave
std
mov
pop
pop
jge
je
xchg
js
mov
xchg
inc
fs
push
clc
sbb
mov
lods
fadds
fmuls
mov
call
add
push
neg
xchg
xchg
dec
jle
and
jecxz
push
lock
fdivs
xor
mov
stos
add
cmp
in
mov
negb
stos
cmp
insl
addb
nop
ds
add
push
mov
sub
push
pop
dec
fistpll
mov
out
sbb
pop
adc
sahf
out
cmp
lret
xlat
ds
popa
cmpsb
and
stos
fnsave
xchg
pop
and
lret
jb
push
cmp
jae
sbb
lock
js
mov
js
mov
xor
jnp
test
sub
mov
and
lds
cmp
mov
pop
sbb
icebp
js
fs
mov
loope
ret
or
xchg
out
jp
out
mov
fnop
mov
sub
mov
mov
insl
jge
xchg
mov
movsb
pop
add
mov
adc
adc
push
mov
cwtl
and
or
dec
movsb
pushf
lds
jo
flds
lods
xor
pop
and
xor
std
stos
lahf
inc
pop
in
repz
stos
icebp
pop
adc
mov
jp
std
cs
push
pop
js
aad
push
lods
xor
jecxz
xchg
mov
cmpb
sbb
mov
and
fisubs
xorl
push
lods
lret
xor
or
lock
jbe
lods
xchg
ss
shr
push
call
dec
mov
mov
mov
nop
shll
lahf
lds
ljmp
add
inc
push
pushf
pop
jae
mov
push
movsl
sahf
loopne
mov
pop
dec
mov
stc
ret
push
push
dec
push
in
lret
in
faddp
lret
xchg
dec
mov
mov
lods
jmp
and
adc
test
push
jge
mov
movsb
xchg
addb
add
xchg
mov
cs
movb
or
sti
push
shll
xor
cmp
lea
jmp
push
fisubrl
mov
in
dec
mov
in
mov
sbb
loope
push
dec
sbb
loopne
xchg
nop
xchg
hlt
ret
adc
lret
and
mov
mov
int
inc
daa
lcall
sbb
sahf
add
push
mov
bound
leave
shlb
ret
and
sarb
xchg
push
inc
int3
inc
cli
push
xlat
stos
sbb
lret
sbb
push
xlat
icebp
push
xchg
jno
inc
mov
jnp
fbld
ret
mov
add
loope
aad
mov
dec
aaa
jecxz
int3
sbb
not
mov
or
mov
dec
sbb
jle
mov
lret
daa
mov
pop
inc
int3
int
add
imul
xchg
lahf
vpmuludq
mov
jo
push
aam
mov
and
iret
clc
mov
dec
xchg
rcl
out
xchg
pusha
pop
xor
cmp
xlat
fdivr
in
pop
rcr
xchg
out
adc
xor
or
and
out
push
and
and
mov
adc
aad
sbb
push
dec
imul
mov
bound
incb
mov
fs
sbb
lcall
jo
shl
push
mov
aam
inc
mov
inc
or
pop
testl
fstl
movsl
inc
pop
pop
lcall
daa
adc
adc
test
enter
popf
adc
inc
xor
cmp
xchg
hlt
mov
roll
dec
push
push
mov
in
icebp
stc
and
add
stos
out
inc
jmp
cld
clc
cli
cmc
pop
arpl
sbb
inc
in
inc
pop
aaa
sahf
pop
and
add
sbbb
fistpl
mov
jecxz
in
mov
shrl
frstor
adc
lahf
add
mov
popa
jbe
inc
sbb
add
inc
jno
add
jb
adc
daa
rcll
xor
mov
test
leave
sub
jmp
loopne
rcll
jno
jecxz
loop
push
push
mov
adc
jo
mov
lcall
lock
es
mov
std
gs
mov
xor
mov
out
dec
nop
adc
mov
add
outsl
into
pusha
cmp
pop
ds
sub
hlt
pop
lods
sub
jle
mov
jno
sti
into
jl,pt
divl
outsb
in
repnz
or
pop
inc
mov
mov
cmp
lea
aad
movsl
jge
dec
fcmovne
xlat
jb
adc
mov
mov
sbb
pop
loope
push
sarl
loop
scas
daa
scas
xchg
insb
mov
pop
mov
subb
test
pop
xor
or
push
inc
es
mov
mov
into
icebp
dec
cmc
sbb
aam
push
and
mov
mov
ljmp
cltd
jnp
and
call
scas
movsl
mov
sbb
pop
out
stos
mov
out
movsl
maxps
ret
add
push
insl
into
aam
cltd
daa
or
adc
sbb
xor
mov
pop
negl
lcall
sti
and
jo
or
or
cwtl
out
daa
inc
mov
xor
dec
hlt
movsl
repz
jmp
test
adc
lahf
popa
jae
jno
pop
dec
xchg
mov
lds
je
and
xchg
sub
jno
sub
sti
fprem
push
fwait
iret
mov
xchg
aad
jp
icebp
jns
push
pop
adc
fisubrl
and
je
repnz
pop
lock
loop
xchg
mov
fs
ret
es
lcall
inc
daa
icebp
das
xchg
into
test
mov
push
mov
cmpsb
sbb
or
push
addr16
pop
lods
mov
shl
frstor
xchg
lea
subb
mov
lret
popa
pushf
pop
mov
xor
lcall
or
xchg
mov
test
into
and
daa
mov
subb
add
repz
xchg
and
call
jle
inc
push
popa
or
inc
std
inc
les
cld
nop
mov
js
into
cmp
lret
adc
sub
sbb
add
dec
ret
fisttpl
pop
data16
mov
jg
cmp
mov
repnz
lahf
mov
cmp
push
or
ds
jae
cltd
sahf
dec
xchg
sub
and
leave
mov
sti
into
cmp
idivb
inc
xchg
shll
rclb
add
mov
es
call
xor
sahf
add
sub
inc
mov
jecxz
cmp
inc
lahf
jb
icebp
xor
add
in
inc
outsl
fs
int
cmc
mov
pop
dec
dec
je
sbb
pop
mov
mov
push
pop
push
mov
pop
inc
xor
adc
push
add
mov
sub
ss
fisubs
adc
imul
ljmp
inc
imul
mov
loopne
push
inc
ljmp
cmp
xchg
imul
stc
jns
pop
std
mov
mov
cmp
gs
push
rcll
stos
xchg
mov
and
and
std
lcall
mov
aam
xchg
cmp
shrl
dec
adc
orb
arpl
aas
sbb
jle
roll
rorb
into
mov
sahf
leave
adc
and
jno,pn
and
loope
and
lcall
and
or
out
add
jecxz
data16
int3
repnz
adc
and
jecxz
into
shrl
or
mov
out
lock
lods
lds
push
jge
mov
pop
inc
lret
pop
fistpl
icebp
pop
sub
mov
mov
mov
xchg
jo
aaa
and
ret
pusha
outsw
fsubl
mov
pop
jle
lds
jecxz
fisttpl
sub
popf
xor
pop
xchg
push
adc
push
test
jge
int
pusha
sub
sarl
shll
imul
dec
add
inc
sub
mov
dec
xor
push
rcrb
adc
lea
ljmp
push
into
sbb
jb
insb
scas
push
lods
jnp
fdivl
bound
inc
cmp
faddp
xor
sarb
adc
mov
in
mov
cmpsb
stos
cmpb
subl
mov
dec
lods
stos
jg
mov
mov
pop
dec
push
xchg
cli
je
push
mov
testb
fbstp
mov
mov
addb
in
mov
je
xor
enter
xchg
xor
ret
pop
iret
aam
fcoml
dec
enter
mov
cmp
or
fwait
push
stos
xchg
pop
mov
add
cmp
shlb
mov
jle
fstpl
mov
add
sbbl
stos
add
stos
push
sub
ljmp
inc
push
and
andl
push
xchg
jp
add
int
les
popa
ret
xchg
adc
fistl
int
cmp
cmp
imul
pop
dec
xor
clc
addr16
mov
insb
mov
sbb
dec
lock
int
daa
addb
adc
repnz
lret
mov
cmp
lret
push
fwait
pop
mov
push
mov
pop
addb
outsl
into
pop
inc
dec
or
jl
std
mov
enter
sub
movsb
cmpl
sub
out
inc
xor
sbb
or
mov
cld
mov
pop
mulb
sub
and
hlt
sbb
out
cmp
jne
popa
nop
mov
imul
and
add
popa
mov
testl
scas
adc
or
mov
call
xor
pcmpeqw
mov
aad
cs
jns
rol
push
repz
add
mov
xor
test
cld
adc
jle,pt
das
in
out
sbb
sbb
pop
xchg
outsl
insb
cmp
ret
stc
pushf
cmp
fistps
mov
mov
pop
jle
or
in
arpl
sbb
xor
inc
or
ds
or
xor
stos
lcall
rcrb
popa
rolb
fsubrl
lods
int
mov
sbb
lret
notl
cmp
sti
inc
pop
outsl
aam
sub
jecxz
mov
pop
xchg
cltd
adc
lock
push
andb
or
loope
or
pop
imul
mov
and
rcr
enter
sub
xor
mov
iret
and
hlt
dec
pop
push
aad
call
add
popa
mov
int
fldl
jecxz
cmpsl
cmpl
call
push
lock
ds
fcoms
arpl
jne
je
jge
scas
hlt
xchg
mov
popf
sti
inc
push
jl
test
xchg
push
dec
insl
loop
ret
mov
xor
pusha
pop
pop
cmc
jne
test
lret
push
push
lods
cmpsl
sub
fists
xchg
xchg
aaa
sub
cmp
push
xor
dec
and
sub
outsb
sbb
loopne
or
fs
shrl
daa
mov
sbb
mov
sbb
das
cmp
stos
mov
xor
push
insl
jmp
pop
mov
orb
mov
arpl
daa
rcl
sub
iret
push
xchg
xor
stos
adcl
push
xor
data16
fldl
test
aaa
pusha
sbb
pop
sub
dec
mov
out
push
cmpsl
xorl
sbb
stos
arpl
cmp
mov
ljmp
and
xor
out
es
and
jmp
lods
inc
push
idivb
jl
pop
cmc
xor
cld
jge
dec
jecxz
imul
jb
and
mov
ds
mov
push
adc
xchg
pushf
sbb
pop
les
int3
cmpsb
jbe
int
loopne
dec
idivl
les
fidivl
int
add
sub
push
rep
xchg
outsl
mov
cmp
imulb
adc
shrl
fs
and
inc
push
mov
sub
call
hlt
fxch
or
nop
dec
inc
inc
lcall
cs
dec
ret
hlt
xchg
inc
cmpl
negb
push
adc
pusha
or
adc
or
and
jb
imul
scas
stc
mov
mov
add
add
mov
stc
or
inc
je
push
mov
sbb
lret
sub
dec
mov
dec
inc
xlat
mov
addl
xlat
stc
arpl
pushf
out
or
aad
jge
and
mov
movsb
in
arpl
popf
mov
mov
in
pop
subl
stos
sub
push
sub
out
xchg
jecxz
lahf
adc
icebp
sbb
sub
push
push
in
outsb
adc
add
mov
in
jecxz
push
sbb
mov
adc
in
and
jns
cmpsb
and
cmpb
mov
loopne
stos
mov
mov
in
jl
inc
mov
jmp
ret
add
dec
faddl
cmp
lods
push
adc
cmp
cmpsb
sub
aam
xchg
or
or
out
ficompl
mov
sub
mov
arpl
jns
adc
pop
jnp
dec
ficomps
bound
adc
sub
stc
movsl
cmpsb
lea
xchg
jle
dec
addr16
ds
xor
movsl
lahf
bswap
shlb
fs
fmuls
lods
pop
dec
imul
fildll
inc
jns
dec
fwait
test
cmp
lock
adc
aad
mov
imul
mov
adc
repnz
jp
dec
dec
push
stc
decb
fnstcw
movsb
imul
push
pop
shrl
mov
mov
insl
addr16
push
aam
insl
dec
adc
xor
and
cmpsl
lcall
cwtl
cmpsl
mov
fsts
mov
jp
mov
sub
jmp
xchg
call
xchg
mov
fsubr
xor
mov
test
pop
sub
mov
add
mov
mov
aaa
cltd
int3
mov
nop
ret
mov
xor
in
call
sbb
add
les
push
cmp
xor
lret
inc
mov
fnstsw
dec
dec
dec
sub
addr16
mov
fnstsw
xor
scas
pop
lods
ret
jbe
pop
cmp
sbb
add
mov
xchg
int
push
dec
in
sub
std
adc
push
lds
add
test
fldcw
addb
push
out
popa
into
repnz
in
out
ljmp
or
sbb
lods
push
push
mov
xor
iret
divl
add
mov
mov
mov
mov
cmp
test
push
into
push
stc
repz
push
jge
sbbl
aas
ja
add
mov
fidivrs
movsl
mov
movsb
test
mov
cli
cmp
sbb
pop
outsl
das
cmpsb
test
test
pop
and
sub
punpckhwd
mov
adc
in
push
outsl
pop
out
arpl
sub
dec
fimuls
push
sbb
in
loope
cmp
pop
cwtl
add
ds
lahf
rclb
dec
ds
xchg
sbb
test
imull
nop
cmp
hlt
cmp
jno
dec
test
mov
out
iret
jg
mov
dec
icebp
rorb
arpl
pop
sub
cmpl
popa
cmp
imul
adc
lret
mov
xchg
inc
adc
inc
add
pop
cmp
mov
test
test
mov
cmpsb
fwait
inc
fnstsw
sub
lock
xor
loopne
bound
lods
lods
push
pop
inc
outsb
jmp
xor
ds
sbb
push
pop
adc
mov
scas
ret
imul
adcl
icebp
aaa
jmp
pop
call
adc
fs
xor
sbb
sub
add
fistps
sti
fimuls
daa
mov
pushf
mov
mov
mov
mov
pop
push
adc
cmp
clc
mov
cmp
mov
mov
mov
sbb
adc
jecxz
aaa
fsubrs
mov
daa
push
fsubs
mov
mov
cmpsl
lret
ret
cmp
push
in
test
je
mov
push
outsb
push
inc
adc
sbb
cs
and
fbld
inc
call
sti
lea
mov
imul
das
lock
cwtl
xor
pop
sti
rcrb
mov
fidivrl
and
inc
cmp
sub
out
aad
dec
mov
mov
into
lret
fcompl
pushf
imul
inc
push
aaa
mov
nop
or
ss
roll
gs
sub
pop
add
fnsave
pop
lds
inc
push
movsl
add
repz
sahf
int
cmp
movsl
mov
push
mov
and
pop
or
mov
adc
push
insb
push
test
pop
add
scas
dec
aaa
adc
sbb
push
jne
cmp
add
push
push
mov
sarl
stc
lods
xchg
addl
test
out
jg
mov
inc
push
sub
dec
inc
ja
cmp
lods
fiaddl
nop
mov
push
adc
and
je
push
jl
int3
adc
test
xchg
xchg
push
and
push
push
rcr
mov
cltd
pop
hlt
xorl
mov
mov
jae
stos
adc
mov
pusha
jnp
arpl
andl
out
in
jo
mov
dec
data16
jmp
cltd
sti
loop
movsb
xchg
ret
ljmp
cs
mov
add
orl
aad
push
cltd
sub
sbb
imul
jmp
mov
pop
gs
jecxz
pop
xchg
xchg
aam
jg
mov
mov
or
push
xor
cmc
fnsave
push
scas
aas
sub
and
stc
inc
ljmp
das
and
loope
inc
scas
dec
adc
push
mov
mov
prefetch
sub
out
arpl
popa
cmc
adc
in
rcll
push
int
insl
cltd
mov
cmpsb
add
push
outsb
pusha
jp
notb
add
rclb
xchg
enter
mov
adc
pop
mov
cmp
adc
lcall
sbb
stc
lods
jbe
xchg
cltd
push
adc
push
scas
cmpsb
lock
test
xor
outsl
out
add
ficomps
or
in
iret
fistps
movsl
bound
mov
pushf
jecxz
cmp
in
sub
loopew
imul
ljmp
idiv
push
jl
clc
sbb
lods
enter
mov
in
imul
lret
imul
adc
lds
cltd
lock
push
mov
jb
ficoms
push
xchg
xchg
dec
test
lods
mull
or
ja
aas
loopne
mov
pop
mov
and
lock
pushf
cmp
push
std
pushf
sub
pop
sub
rcrl
lods
test
adc
bound
jmp
mov
nop
mov
rclb
pop
pop
call
shlb
je
movsb
jg
fpatan
xchg
xchg
mov
cmpsl
cmp
and
es
popa
pop
push
test
sub
pusha
mov
pusha
andb
sti
add
mov
je
sbb
sti
nop
es
and
inc
cmp
mov
stos
pop
cmpsl
sub
and
repz
adc
sbb
jae
pop
lock
jmp
call
xchg
aas
mov
dec
add
jg
sbbb
js
jae
enter
dec
in
int
outsb
mov
movb
das
jbe
inc
ret
dec
jecxz
push
addb
cmp
push
xchg
adc
fwait
or
and
jg
fwait
subb
pop
out
test
stc
add
cmp
and
movsl
sbb
sbb
fcmovbe
sub
sub
repnz
pop
adc
xor
mov
dec
orb
inc
inc
in
mov
stc
popa
movsb
and
xchg
aam
leave
and
mov
inc
adc
add
mov
lcall
or
cmp
pop
adc
sbb
mov
ja
mov
call
xchg
xchg
leave
jmp
popa
mov
mov
paddsb
jl
dec
push
jmp
rolb
movsl
push
in
mov
imul
or
push
xchg
cld
lret
sbb
push
and
cli
dec
incb
adc
inc
lret
lods
test
mov
loopne
and
mov
pushl
testb
mov
out
mov
dec
xchg
mov
and
iret
cltd
sub
mov
outsb
push
lods
movsb
mov
inc
aam
call
or
sbb
mov
lret
inc
ficomps
sbb
dec
jnp
cmp
adc
js
pop
sbb
ret
cmp
add
xor
cld
mov
mov
popf
mov
lret
arpl
push
pushf
add
hlt
dec
dec
pop
sbbl
pop
xor
stos
inc
out
add
xchg
inc
cli
out
adc
stos
push
dec
or
or
frstor
push
ss
sub
lea
popf
xchg
int
in
sti
mov
gs
adc
in
cltd
xlat
mov
in
int
arpl
mov
les
pop
pop
leave
das
aas
dec
rorl
and
pop
rorb
mov
test
xchg
aaa
inc
xlat
aaa
or
adc
das
bound
mull
sub
ret
mov
lcall
insl
cmp
movb
xchg
lock
lret
outsl
xchg
jo
jp,pn
in
xchg
sbb
mov
xchg
sub
or
lock
iret
dec
sbb
xchg
hlt
mov
xlat
lods
and
cmc
sbb
and
inc
sbb
js
adc
dec
mov
gs
cmp
repz
fistl
loope
push
inc
jbe
jmp
ss
popf
lds
sbb
mov
lret
pop
jge
push
push
insb
mov
pop
xchg
sub
andb
mov
sub
js
loopne
sti
cmpsl
push
mov
push
imul
test
pop
inc
mov
pop
lcallw
pop
in
cld
dec
xchg
xchg
sbb
int
data16
test
inc
outsl
mov
sbb
xchg
popa
xchg
push
mov
out
and
es
pushf
pop
mov
and
mov
imul
mov
jecxz
fsts
mov
mov
push
fdivs
inc
ds
ds
movsl
mov
xor
push
mov
imul
clc
jne
shll
mov
std
sbb
mov
fs
inc
or
enter
mov
xchg
sbb
insl
mov
idivl
dec
das
pop
mov
xchg
xchg
imul
mov
fmull
add
fistps
mov
sti
fucom
mov
push
jge
loope
mov
call
pop
sbb
cmp
stc
js
test
mov
mov
das
add
out
outsb
call
jnp
aas
pop
push
add
mov
stc
mov
add
push
fimull
xor
add
xchg
or
aaa
fdivrp
adc
mov
add
cmp
jmp
ret
rolb
xchg
mov
inc
out
jno
sub
test
dec
mov
jno
cld
pop
fwait
and
inc
mov
inc
mov
out
clc
call
test
sahf
es
popf
loopne
and
flds
push
adc
push
ljmp
das
arpl
mov
cwtl
or
stc
fbstp
mov
dec
push
ret
shll
dec
push
daa
out
outsl
call
out
sub
loope
mov
idivl
test
mov
pop
adc
aam
ss
dec
dec
mov
outsl
xchg
insl
into
cli
mov
cmp
movsb
xchg
test
sahf
cmc
into
xchg
rclb
hlt
cmp
lods
xchg
mov
lods
jno
fldln2
lods
test
dec
aaa
stos
jl
xchg
mov
xchg
pusha
adc
pushf
stos
popf
cld
cwtl
add
cmp
inc
stos
pop
stos
mov
adc
add
dec
xchg
pop
dec
xchg
imul
pop
or
sub
jp
mov
mov
lods
cmp
dec
ja
adc
daa
out
das
addb
gs
jmp
aaa
or
enter
xchg
hlt
inc
repnz
test
jp
push
push
call
mov
jle
cmpsb
jmp
sbb
aas
fwait
movsb
gs
push
or
pop
pop
movl
mov
imul
jno
les
push
mov
jnp
mov
test
xchg
mov
mov
mov
movsb
aas
xorb
repz
ljmp
lods
add
enter
pop
mov
lock
dec
and
dec
dec
ss
push
lcall
lods
negb
ror
lcall
and
dec
inc
jg
push
pop
loope
frstor
test
mov
jge
pop
js
sbb
dec
cltd
xchg
mov
rcll
push
idiv
shlb
and
outsb
js
pop
jb
jns
push
xor
xchg
sti
or
xchg
les
xor
notb
enter
xchg
push
dec
dec
push
inc
xor
xchg
cmp
xlat
out
insl
lods
fadds
mov
scas
xor
insb
outsb
jmp
jnp
cmp
aad
cld
punpckhdq
mov
incb
inc
addl
repz
lahf
xor
lds
pop
sbb
jg
popf
and
or
lds
sahf
cs
shr
mov
leave
inc
add
test
leave
and
insl
dec
cmovbe
test
jns
test
adc
imul
jl
pop
fimull
sub
int3
stos
jecxz
jp
inc
ret
cli
hlt
cmp
jle
mov
dec
or
imul
aaa
notb
sbb
out
lea
push
in
fisubrs
mov
test
dec
lret
popf
mulb
test
sub
adc
xchg
inc
mov
sub
hlt
jo
push
jae
xchg
mov
aas
sbb
imul
rcr
dec
fcmove
lods
lds
addr16
sub
sub
mov
jae
jae
insb
ja
imul
cs
into
loope
cmc
pop
adc
loope
hlt
pop
lds
subl
repz
into
mov
pushf
roll
movsb
out
pop
inc
fwait
mov
cmc
sbb
out
imul
in
lods
jbe
cmpsb
fisttpl
andl
xchg
icebp
js
adc
sbb
clc
add
in
sbb
sub
xchg
or
adc
sti
cwtl
dec
addr16
xor
sbb
push
xor
ja
mov
rcrb
push
out
jle
add
add
sbb
sti
jge
loope
mov
fwait
movsl
jp
stos
push
jmp
push
mov
scas
push
scas
mov
testb
in
and
mov
jmp
mov
cwtl
sub
jae
adcl
jp
sub
mov
popa
cmpsb
xchg
cli
adc
dec
insl
int
int3
aam
cmp
inc
jnp
sbb
int3
dec
jo
and
jo
aaa
imul
cmpsb
mov
sub
pop
mov
mov
stc
in
xor
sarb
pop
push
jno
jae
test
push
dec
outsb
add
into
jmp
inc
aaa
jle
aad
jl
shl
push
inc
pop
sub
mov
hlt
int
sub
fists
fbld
mov
mov
pop
sub
cli
pop
clc
push
cs
jp
inc
aaa
popf
xchg
mov
dec
movl
mov
sbb
pop
push
sub
test
sahf
into
in
aaa
pop
fwait
clc
mov
gs
mov
stos
testb
stos
rcll
dec
pop
pop
jl
mov
test
cmpsb
pop
fsubrs
fimull
add
jbe
jno
rclb
test
jl
in
cld
es
xchg
inc
pop
repnz
sbb
das
adc
pop
scas
add
mov
sbb
mov
aas
sbb
addr16
mov
jp
add
pop
adc
loop
hlt
orb
cmp
hlt
scas
ja
sub
jmp
movsl
add
xchg
dec
sti
sahf
jecxz
mov
pushf
dec
jo
idivl
sbb
pop
inc
mov
in
pop
xlat
inc
test
jp
fdivs
push
bts
xor
fidivrl
rcl
cld
mov
pop
inc
clc
ret
pop
fwait
pushf
test
cmp
fucomp
adc
inc
ret
loop
xor
jle
outsl
clc
and
or
dec
xchg
sarl
loop
mov
mov
mov
das
dec
or
xor
jmp
xor
data16
or
pop
arpl
mov
cmpsl
add
pop
pop
cmpsb
lods
jno
in
sbb
fidivrl
call
or
push
jle
loope
fistl
sbb
cmp
roll
fsubs
xchg
int
fldcw
pop
pop
jp
out
sub
add
jnp
adc
dec
hlt
or
fcmovnbe
lods
fsts
mov
loope
das
inc
pop
or
test
ret
rcrb
lahf
add
push
int
xor
dec
data16
pop
cmp
nop
xchg
clc
mov
in
cmpsb
repz
jno
push
insl
loopne
and
stos
jge
lcall
jl
ljmp
popf
adc
or
adc
sbb
adc
addb
fs
and
push
cltd
push
lods
xorl
lods
xor
or
mov
adc
push
inc
sub
mov
test
or
fsubrl
jge
lods
fwait
add
push
lahf
or
or
js
pop
xor
test
mov
test
fisubl
add
pop
mov
scas
push
dec
in
mov
sbb
mov
xchg
ds
icebp
add
je
push
shlb
xchg
xor
repz
repnz
lret
dec
scas
adc
xchg
ret
xchg
je
adc
gs
loop
cmp
inc
mov
mov
aaa
xor
popa
sar
icebp
lret
lahf
fwait
inc
mov
and
shll
and
aaa
jge
cmpsl
push
dec
call
ljmp
add
or
cltd
push
not
sbb
lcall
add
test
xchg
ja
loopne
cwtl
mov
loope
iret
insb
dec
imul
out
int3
fisttps
adc
mov
xchg
pop
les
pop
ljmp
sub
dec
fcoml
pop
xchg
dec
add
adc
xor
fisttpl
rcll
cmp
in
mov
pop
js
fisttpll
or
jl
mov
or
cmp
add
outsl
xchg
add
scas
sbb
addr16
shll
add
push
test
out
movsb
cltd
clc
inc
mov
mov
subl
clc
push
rol
mov
rolb
cmp
lds
sahf
inc
ret
loop
push
js
inc
push
test
push
jge
push
jl
lea
loopne
sbb
push
dec
fiaddl
into
add
pop
cmp
rolb
pushf
into
hlt
divl
repz
nop
andb
push
lcall
stos
ljmp
and
push
cmp
hlt
cmp
add
push
fisttps
mov
fdivrl
in
pop
push
jge,pn
mov
lods
std
aaa
loop
movsb
dec
mull
xorl
xchg
int
cli
aad
or
loope
int
sub
xor
pop
push
jg
test
mov
xor
repnz
lahf
push
outsb
dec
push
repz
arpl
mov
sahf
add
cmp
adc
adcl
stc
stos
xlat
mov
sahf
xor
add
or
push
cmpsb
xor
call
sub
pusha
mov
mov
xchg
mov
int
or
aaa
pop
mov
xchg
push
jns
push
adc
and
jl
mov
jae
add
mov
inc
arpl
enter
test
cwtl
mov
mov
js
sbb
push
fimuls
jge
xor
in
add
adc
insb
xchg
mov
aam
mov
xor
or
ret
inc
xor
push
enter
mov
push
jp
addr16
pop
sbb
sbb
cs
cmp
cmp
ljmp
xor
adc
lret
adc
lods
aas
cmp
call
inc
outsb
data16
jb
movl
mov
pop
sbb
or
inc
adc
sbb
jnp
add
rorl
in
hlt
mov
mov
not
shlb
xchg
sbb
xchg
js
cmc
outsb
mov
loope
dec
and
xchg
mov
in
dec
popa
cltd
mov
pop
jno
and
sbb
scas
inc
mov
adc
test
mov
or
cs
jnp
adc
push
mov
cmp
jns
jecxz
js
mov
out
cmp
push
dec
inc
arpl
pop
push
das
loope
rcl
push
scas
orl
mov
iret
nop
mov
pop
nop
je
pop
jbe
ds
sub
cmp
dec
fbstp
add
int3
in
and
into
add
loope
jecxz
add
cli
inc
mov
mov
mov
rol
fimuls
cmc
xchg
adc
test
xor
dec
mov
lcall
mov
rorb
inc
jp
push
mov
jmp
idivb
cltd
int3
pop
sbb
stc
mov
testl
lds
outsl
xor
lcall
addr16
sbb
out
mov
add
stos
xchg
push
lret
aaa
icebp
insl
xor
shr
push
or
cmpsb
add
iret
inc
in
pop
xchg
xchg
push
push
js
roll
enter
mov
mov
push
sbb
or
hlt
mov
lock
pusha
xchg
mov
stc
popf
jbe
stc
cmp
cmp
xchg
repnz
push
add
cmp
dec
xor
add
jae
pusha
mov
and
and
mov
sti
test
mov
push
jl
pushf
mov
pop
movsl
inc
push
jg
mov
mov
cld
dec
jecxz
gs
xchg
roll
les
push
fimull
mov
add
push
addl
mov
ljmp
fs
xor
mov
arpl
xchg
and
das
jne
inc
lret
mov
pop
mov
xchg
push
jnp
mov
mov
add
sbb
adc
popf
push
insl
ljmp
daa
test
notl
jnp
sbb
mov
int
leave
stos
add
cmp
notl
add
cmp
lods
sbb
insb
shlb
hlt
xchg
dec
gs
scas
in
inc
outsl
inc
or
incb
pop
lds
jmp
cltd
dec
addb
jns
push
lahf
inc
jae
mov
daa
xchg
les
stos
inc
pop
cwtl
out
and
lret
and
ds
pop
shlb
cld
lcall
sbb
test
sbb
fwait
incb
outsl
inc
push
mov
out
shlb
daa
divb
ret
add
add
mov
iret
or
insl
stos
dec
mov
dec
adc
inc
das
xor
cmpl
inc
mov
aaa
dec
fwait
jg
inc
std
movsl
xchg
sub
cltd
lea
jle
mov
sub
std
test
dec
mov
pop
mov
xchg
std
push
aaa
hlt
cmp
les
or
test
jecxz
jns
sarl
or
lea
lods
scas
adc
ss
mov
inc
movsl
test
aam
in
push
sub
ud1
adc
sub
lods
cmc
loopne
cli
imul
aaa
test
inc
jg
inc
mov
mull
sahf
outsl
mov
imul
sub
test
sbb
lret
imul
jno
mov
mov
out
sub
daa
cmpsl
or
fsubl
movsl
xchg
push
mov
mov
lock
adc
xrelease
and
test
pusha
mov
es
fiaddl
lock
leave
mov
mov
and
repnz
cmp
inc
mov
aam
adc
pop
repnz
std
mov
pusha
dec
out
mov
mov
in
jmp
mov
addl
xchg
popa
movsb
xor
iret
xchg
inc
push
mov
jmp
xor
push
pop
mov
mov
out
lret
aad
fadd
and
push
mov
aas
call
bound
dec
mov
out
fistpl
or
stos
outsl
pavgw
sub
add
aaa
dec
cmpsb
cmp
xchg
add
push
and
es
scas
bound
nop
lock
nop
rorb
adc
popa
mov
sbb
dec
sahf
pop
inc
mov
adc
cltd
pop
sbb
xlat
push
into
lret
insb
xchg
lods
aam
push
inc
std
insl
mov
nop
loope
xor
sbb
mov
cmp
or
xchg
xor
test
jle
mov
and
sub
sarl
add
and
or
test
test
scas
xchg
cmpb
adc
daa
sub
das
ds
push
hlt
push
imul
jg
xchg
cwtl
pop
pusha
and
outsb
leave
int3
adc
mov
hlt
mov
push
mov
jg
nop
in
icebp
movsb
sbbb
data16
mov
movsl
mov
fldcw
dec
mov
test
imul
ficompl
in
popf
push
lret
sahf
pop
lcall
sbb
lds
cli
or
xchg
push
xorl
pop
popa
pop
int
xor
jl
adc
cmp
fiadds
in
popl
leave
nop
stos
pop
mov
mov
mov
fmulp
leave
pusha
daa
xchg
xchg
push
cs
dec
jmp
lahf
jl
pop
adc
ds
fistpll
cltd
inc
loope
or
testl
xchg
cmp
fs
and
xor
scas
sub
jbe,pn
cmp
mov
mov
cmp
bswap
fcmovnb
and
xchg
and
mov
ds
addr16
xchg
cmpsl
or
fiaddl
cmp
adc
xchg
mov
gs
js
ficomps
enter
adcb
stc
push
repnz
sti
cmpl
jmp
filds
pop
or
ret
lcall
fsts
sbb
mov
jb
arpl
or
dec
dec
sbb
hlt
ja
aaa
nop
inc
jnp
push
repz
in
loopne
xchg
push
sbb
imul
rcrb
ja
jo
jb
ret
lret
add
sub
inc
or
test
sub
mov
jae
xchg
movsl
fistpl
jnp
mov
cs
cld
inc
adc
jno
adc
mov
dec
jns
pop
ljmp
rcrb
cmp
loopne
cmp
sbbb
xor
lods
mov
xchg
pop
clc
shrb
push
xchg
push
cltd
mov
mov
loopne
dec
cmpsb
sub
orl
and
inc
mov
stos
dec
fs
scas
rorb
pop
loopne
icebp
pop
movsb
mov
jne
stc
pop
sbb
iret
pop
mov
dec
mov
addr16
sahf
lock
int3
and
je
sub
es
and
cmp
adcl
data16
popf
outsl
testl
dec
mov
mov
jno
leave
and
inc
sub
and
and
in
arpl
out
ss
out
xor
out
das
cmpsl
sbbb
lea
lods
adc
outsb
lea
clc
mov
fld
lahf
movsb
mov
lea
dec
inc
nop
out
popa
pop
push
rcrb
mov
mov
dec
addr16
aas
dec
xchg
push
sbb
mov
adc
sub
add
ficompl
xor
pop
lds
pushf
rolb
enter
lret
xchg
pop
lret
push
cmp
pop
mov
push
xor
push
adc
ljmp
scas
out
jg
jae
or
lods
popf
and
cmc
fbld
mov
call
mov
sbb
je
cmpsb
pop
mov
pop
and
cmpsb
pusha
push
mov
inc
sub
dec
mov
cmpsl
adc
repnz
pop
ja
addr16
push
int
sub
jle
mov
dec
cmp
pop
icebp
shll
adc
or
mov
loope
push
mov
das
jmp
je
int
mov
pop
inc
int
or
inc
push
aaa
xor
iret
or
rol
sti
cwtl
push
add
bound
es
or
inc
sub
aam
mov
jmp
adc
dec
mov
out
pop
mov
push
push
sub
push
test
hlt
adc
sub
or
mov
pop
int3
ljmp
mov
mov
ljmp
inc
testl
xchg
ja
push
test
std
not
pushf
xchg
ja
mov
rcrb
out
xor
clc
jb
push
int
inc
sub
xor
popf
in
xchg
pop
outsl
lods
push
loope
xchg
mov
stos
shr
dec
mov
and
xchg
and
dec
aam
data16
incl
xchg
push
mov
push
das
cmp
push
test
popf
hlt
xor
or
inc
add
mov
mov
mov
xor
negl
mov
and
pop
repz
pushf
add
sti
push
adc
adc
jo
pop
sbbl
sbb
mov
pop
adc
and
cmp
cmp
mov
add
bound
xchg
jmp
pop
mov
lods
jns
paddd
in
mov
xchg
cld
jecxz
xchg
cmp
sub
call
sbb
mov
cmp
push
add
bound
dec
fnstsw
jns
pop
sub
dec
cld
sbb
sbb
ss
mov
xor
mov
sbb
rclb
loopne
int
pop
nop
pop
inc
jbe
clc
inc
pop
sbbl
mov
lcall
scas
xlat
aas
pushf
adc
lds
into
mov
lret
jne
fnstsw
idivl
movsb
xchg
andb
push
icebp
scas
inc
fwait
repz
inc
mov
ret
pop
xchg
mov
decl
out
mov
clc
repnz
push
aam
clc
daa
aas
push
scas
sbb
sub
jmp
stos
out
adcb
and
popf
out
loop
jae
pusha
outsl
loope
or
jae
mov
fistpl
rcrl
fs
xor
addr16
inc
movsl
pop
aaa
rcr
popf
in
jne
outsl
fidivl
mov
ja
mov
dec
xchg
lahf
call
xor
sbb
lock
cmp
and
cmp
add
xchg
mov
pop
ja
es
scas
pop
jge
mov
pop
aam
out
in
popa
sbb
test
rorb
adc
fnstsw
jmp
fisubrs
testl
push
iret
or
das
in
ret
out
pop
sub
fcmovbe
insl
addb
ret
popa
ds
mov
inc
dec
xlat
jl
mov
dec
cmp
jnp
jp
xchg
mov
andb
dec
out
lret
movsl
pushf
mov
inc
test
lret
xlat
cmpsb
call
cwtl
cmpsb
stc
inc
push
ja
shlb
xor
and
add
orl
cwtl
cmp
leave
lock
jmp
or
rcll
push
lods
mov
xor
adc
data16
lret
mov
cmp
imul
in
inc
js
nop
adc
test
cmp
arpl
outsb
dec
lods
mov
mov
fidivrs
fdivs
cmp
jae
cmp
cmp
negl
sti
sti
call
adcb
aad
enter
aam
loop
add
pop
fbld
pop
sub
ds
jmp
movsl
dec
pop
push
adc
icebp
sahf
xchg
popf
stos
xchg
mov
push
lret
movsl
fistl
outsb
iret
ljmp
and
mov
hlt
aaa
and
pushf
mov
push
mov
cld
or
mov
leave
idivl
je
rorb
roll
cmp
or
sub
es
inc
jnp
push
push
pushl
or
lock
mov
adc
and
jg
xchg
mov
add
lret
mov
loopne
cmp
lea
imulb
xchg
insl
pop
mov
push
pushf
ss
sahf
sub
scas
adc
scas
ds
adc
inc
test
inc
das
aad
jecxz
lods
xor
inc
mov
jns
sti
xorl
stos
int
mov
sbb
out
jmp
dec
out
lea
pop
mov
push
add
add
sub
pushf
shll
dec
xor
pop
clc
dec
dec
lcall
clc
in
pop
or
lds
mov
and
jmp
ret
addr16
push
lock
mov
lods
dec
sub
cli
aas
push
and
push
fiadds
dec
cld
fsubl
iret
negl
xchg
das
jl
xchg
shl
jge
xchg
outsb
sbb
fisttpl
and
inc
and
xlat
push
jmp
stc
mov
movb
cmp
loope
stc
xor
jno
sbb
inc
sbb
fdivs
out
mov
shlb
test
jmp
jg
movsl
stos
mov
cwtl
cld
xor
cmc
mov
loop
loop
adcl
jl
push
inc
cmp
rolb
addr16
jmp
cld
xchg
lds
mov
xor
sub
xchg
lret
pop
sub
jno
jle
inc
std
xor
mov
ds
out
push
xor
and
adc
cwtl
outsb
xlat
cmp
push
pop
std
arpl
push
int3
add
shrl
cwtl
sbb
and
clc
sahf
and
mov
decl
push
das
cltd
and
jno
xchg
int3
loopne
pop
cs
cmp
rolb
cs
xor
and
scas
clc
xchg
jp
mov
inc
dec
mov
lret
test
test
lahf
adc
jno
test
test
mov
insb
outsl
mov
jg
scas
jbe
movsb
mov
imul
enter
sub
enter
cld
cmp
cmp
mov
jg
push
push
mov
lock
add
cmp
sbb
int
clc
dec
or
mov
mov
push
into
and
jne
fdivr
mov
or
push
inc
enter
add
sahf
psubd
mov
pop
sub
push
mov
pop
sarw
lods
or
out
adc
dec
mov
mov
mov
lret
popf
das
pushf
dec
popa
flds
mov
push
rcrb
cmpsl
push
aaa
jne
or
jmp
cmp
gs
mov
fistps
rclb
aad
adc
mov
push
movsl
jne
mov
sub
sub
push
jge
scas
cmp
imul
dec
iret
iret
testb
sbb
and
lret
and
sub
push
aaa
and
sarb
dec
int
xchg
loope
mov
sub
das
out
add
out
xchg
or
sub
cwtl
out
add
leave
fbstp
pop
xor
lcall
or
in
inc
adc
push
mov
push
mov
ljmp
xor
call
out
mov
mov
pop
mov
jnp
sub
test
mov
add
ja
pop
xchg
cmp
pop
xlat
fidivs
sbb
push
push
ds
jge
dec
inc
mov
and
mov
xchg
aaa
inc
aaa
sbb
xor
cs
jge
mov
cld
out
xchg
out
daa
out
jg
insb
pop
adc
shlb
es
fs
pop
or
or
cwtl
push
xor
lret
sbb
icebp
sbb
clc
dec
test
lea
les
scas
xchg
jp
and
and
fists
xchg
ss
clc
mov
cld
push
testb
cmp
mov
jmp
mov
cmc
push
push
push
clc
jns
inc
jge
leave
stos
aam
sub
fldl
aas
adc
mov
imul
cmpsb
into
pop
lret
ds
adc
mov
pop
outsb
iret
and
mov
add
xor
pusha
pop
movb
lock
fs
lods
xor
insb
sub
popf
fisubs
mov
stc
fnsave
in
std
iret
sub
test
sub
and
outsb
ljmp
int3
or
cmpsb
dec
adc
loop
mov
scas
and
push
dec
push
push
out
je
add
sbbl
fcomps
dec
in
imull
pop
imul
sbb
subl
sarl
and
dec
stc
lahf
sbb
ficompl
std
lock
sahf
lock
lcall
xorb
inc
jg
adcb
push
fwait
les
lods
lock
pop
ljmp
xchg
aam
sbb
add
lret
xor
iret
movsb
push
push
pusha
int
jo
and
adc
inc
stos
scas
sub
pop
mov
push
xchg
fs
jecxz
bound
ja
cmpsb
aas
xor
add
inc
iret
inc
inc
out
cs
mov
lret
mov
dec
rolb
push
scas
or
or
imul
xor
stos
xchg
ffree
je
lcall
xchg
push
movsb
lret
pusha
adc
cmpsl
test
insb
movsl
aad
xchg
lcall
jne
and
jnp
out
ja
popa
test
lret
insb
int
sub
pop
ljmp
jle
in
adcb
mov
sub
pop
fcmovb
inc
mov
xchg
ljmpw
cld
aaa
orb
fmull
popf
lds
push
mov
ss
popa
xchg
inc
adcl
jno
lock
cltd
mov
adc
xor
dec
cmp
sub
stos
pop
rcrb
lret
movsl
adc
sub
sbb
addr16
dec
push
fnstcw
out
jle
pop
add
aaa
dec
adc
popf
jmp
lods
sbb
mov
adc
xchg
ljmp
leave
outsl
sti
cmpsl
push
repnz
pop
std
fistps
movb
and
nop
add
and
cmp
loop
dec
push
in
xchg
lret
jo
lahf
xchg
lock
iret
in
inc
bnd
xchg
in
adc
xor
push
pop
xorl
lret
dec
xchg
rcrb
or
jns
pop
pop
mov
adc
aam
in
out
bound
out
out
sub
push
in
pop
cmp
sarb
mov
fcoms
in
daa
push
inc
add
mov
lahf
addl
mov
imul
movsl
xlat
mov
roll
adc
sub
or
or
or
inc
or
dec
das
xchg
cmp
hlt
and
mov
bound
mov
or
lret
fwait
lds
pop
sbb
movsl
stos
xor
pop
aas
cmp
or
divb
stos
and
iret
xlat
loopne
sbb
aaa
call
int3
nop
mov
jl
pop
dec
mov
jl
mov
and
push
inc
inc
add
add
mov
push
stc
cmp
cmp
mov
jecxz
pop
or
imul
lahf
mov
jmp
push
mov
loop
ret
push
outsl
shll
dec
out
fsubl
out
add
pusha
imul
pop
jle
jp
subl
les
test
dec
arpl
lds
lret
push
daa
movsb
pop
jae
jg
repz
dec
ret
mov
mov
js
mov
sti
mov
mov
lea
test
fistps
jo
aaa
imul
adc
and
into
jg
sbb
push
add
subl
fs
push
push
jb
jmp
lret
nop
pop
cmp
xchg
fs
sbb
cli
dec
push
ss
jns
cmc
mov
inc
adc
jge
cmpb
mov
add
jle
lret
or
insb
cs
sub
ljmp
inc
sahf
sub
sbb
lahf
xlat
jae
dec
cltd
add
imul
imul
mov
jae
pop
pop
lods
xchg
xchg
sub
mov
sub
push
push
and
xchg
aas
fs
jo
out
popa
pop
add
or
insb
rcrl
out
mov
sub
or
das
shll
out
lret
sbb
outsl
dec
inc
push
jge
cmpsb
mov
aaa
and
aas
mov
es
sbb
or
or
dec
cmp
or
out
jae
xor
lock
and
ds
sub
xlat
incb
push
js
jle
popa
enter
mov
test
lcall
jnp
sbb
mov
cmp
test
popa
inc
pop
push
call
sbb
push
jns
pop
push
sbb
mov
in
cmp
je
pop
out
cmpsb
sub
push
mov
repz
test
cld
dec
jl
stos
icebp
and
cltd
pop
sub
xchg
loop
inc
popf
in
sar
or
cmc
cli
sbb
cwtl
add
call
and
xlat
scas
xor
testb
push
int
data16
lret
rcll
pusha
sahf
dec
xchg
int3
test
cwtl
jbe
fs
dec
mov
mov
jmp
cwtl
cmp
out
scas
and
mov
addr16
mov
xchg
insl
pop
jecxz
testb
mov
sti
cli
mov
xchg
pop
xchg
sub
adc
and
insb
cs
dec
or
fsubrl
mov
xchg
les
addl
jne
pusha
xor
adc
mov
ret
mov
lcall
arpl
pusha
loop
mov
scas
pop
or
lret
adc
loop
int
jle
push
in
mov
loope
xchg
das
mov
inc
rcrl
pusha
mov
jno
insl
push
dec
mov
xchg
lcall
jo
fucomip
subl
lcall
mov
xor
jmp
mov
jecxz
xor
mov
fcmovb
call
sub
xchg
xchg
pop
je
insl
inc
adc
int3
jbe
ljmp
xor
pop
test
or
push
cmpsb
mov
cwtl
jmp
out
popf
cmpsl
iret
cmp
xor
stos
movsb
sbb
cmp
mov
adc
mov
mov
push
aam
dec
xchg
jns
sub
sbb
pop
mov
mov
mov
mov
fisttps
stos
sub
out
mov
jns
and
push
in
xchg
mov
add
inc
push
mov
ss
mov
inc
lock
roll
ljmp
pop
inc
mov
repnz
cs
xchg
addr16
lcall
pop
in
push
or
aam
imul
adc
shlb
mov
aad
dec
cmp
sti
mov
or
shll
lock
sbb
push
mov
add
xor
push
mov
shlb
jne
xlat
lds
mov
pop
rcll
mov
jns
pop
and
mov
sub
lahf
fimull
push
mov
mov
fildl
or
fidivrs
mov
out
xchg
in
out
in
push
jb
jns
into
fcom
push
mov
mov
xchg
xchg
inc
sub
ficomps
xchg
or
aad
adcl
lret
cltd
mov
mov
adc
or
outsb
cmpsl
mov
pop
cmp
xchg
mov
jae
inc
inc
ljmp
or
popa
shrb
hlt
and
ror
gs
xchg
jl
pop
pop
popa
xchg
mov
clc
sarl
xor
mov
aaa
dec
clc
jno
pop
dec
into
in
mov
loopne
xlat
repnz
orl
xor
fisubrl
sbb
icebp
in
and
in
xchg
inc
dec
idivl
and
addb
push
cmc
jb
xor
xchg
nop
sbb
push
scas
outsb
pop
sbb
dec
lcall
icebp
enter
cli
mov
loopne
adc
push
sbb
in
pusha
or
mov
or
repnz
lea
cwtl
clc
xor
loop
add
mov
push
fistpll
sub
imul
lock
push
or
stos
iret
les
shll
stc
push
mov
lret
daa
xor
or
icebp
icebp
shl
test
pop
fists
jmp
clc
int3
sub
mov
jb
adc
push
push
movsb
cli
jle
xchg
lods
lods
aad
jae
jae
jno
cmpsl
in
or
jnp
jo
stc
xchg
imul
andl
xchg
and
insl
imul
cmpsl
xchg
mov
int3
push
jnp
std
add
mov
call
push
sbb
cwtl
xor
dec
adc
sbb
repz
pusha
xchg
hlt
pop
mov
push
inc
aas
in
js
cmpsb
inc
js
in
dec
cmp
icebp
insb
mov
inc
add
scas
subb
mov
pop
pop
scas
add
jg
sbb
mov
mov
cmp
jns
js
repnz
ret
pop
fwait
and
sub
mov
sti
add
mov
leave
sbb
test
pop
push
pop
sbb
push
push
cli
stos
movsb
push
pop
xchg
jecxz
push
xor
popa
lods
aas
movsl
jns
movl
or
jbe
lods
pop
in
gs
sbb
dec
call
xchg
xchg
and
cmc
repnz
dec
js
xor
sbb
mov
jecxz
pop
xlat
ret
push
add
inc
les
stc
leave
push
jnp
repz
jb
lea
in
dec
rcrl
loope
xor
pop
jbe
sbb
movsl
jecxz
push
cmp
pusha
xchg
test
inc
into
divl
push
dec
dec
cmpl
sahf
pop
inc
mov
push
push
mov
xor
je
pop
outsl
push
mov
jg
lods
dec
gs
xchg
pop
jno
inc
and
and
mov
adc
scas
stos
mov
loope
nop
addr16
jne
sub
cmpb
adc
mov
inc
xchg
push
cmp
sahf
mov
mov
and
xchg
xchg
fildl
test
push
inc
dec
js
ret
dec
iret
out
in
add
jl
cmp
inc
sub
mov
jae
pop
andb
mov
loop
push
fdiv
dec
daa
and
dec
mov
scas
push
jno
cmp
inc
test
or
aas
lcall
xor
mov
dec
punpcklwd
sub
das
cmp
sbb
mov
ss
xchg
repz
cwtl
pop
fldt
sbb
mov
aad
or
add
jecxz
inc
outsl
mov
fists
jmp
stos
or
xchg
sbb
mov
add
mov
cltd
dec
add
lcall
push
pusha
jl
fistl
ret
sub
push
ja
dec
int
push
mov
loope
pop
jecxz
sub
ds
cwtl
add
sub
gs
sbb
ja,pt
xchg
inc
lahf
cmp
push
and
pusha
pop
loope
pop
mov
jp
fldcw
jg
xor
in
in
jmp
sub
fisttpl
push
pop
xor
aad
call
imul
xchg
cmp
xor
xchg
pop
fwait
in
call
mov
in
xor
inc
gs
sbb
mov
sub
into
or
test
sub
sub
popa
mov
sbb
push
fisttpll
ffreep
xchg
mov
cltd
icebp
jp
sbb
jl
js
ficompl
loop
rolb
cmpsb
ret
movsl
cwtl
jmp
sbb
push
data16
sub
movsb
dec
mov
addr16
mov
cmc
cltd
push
push
lods
inc
pop
dec
xchg
shrl
push
mov
jae
stos
push
push
roll
mov
test
aad
jle
adc
and
adc
fimull
fcmovnb
icebp
mov
mov
jae
pop
and
dec
jecxz
jl
inc
out
je
out
pop
push
sti
adc
daa
int3
aad
aam
clc
pop
out
mov
adc
mov
mov
cmc
xlat
sbb
loop
fwait
pop
insl
bsr
push
icebp
pop
cld
jle
call
flds
inc
jl
add
dec
dec
out
xorb
imul
or
leave
lock
mov
adcl
mov
jne,pt
rorb
push
cmpsb
xchg
sub
loop
loopne
sti
xchg
enter
aad
popf
mov
xor
push
std
popa
push
mov
js
sbb
mov
push
fcmovnb
les
push
pop
push
out
pushf
mov
mov
mov
jns
repz
add
clc
pop
xlat
mov
mov
mov
insl
add
shlb
mull
loopne
pop
addr16
in
pop
pushf
lret
xor
push
pop
sahf
jp,pt
inc
inc
pop
lods
jle
nop
adc
inc
dec
pop
in
jb
xchg
fmull
pop
mov
cmpsl
loopne
sbb
fmulp
push
enter
in
xor
push
push
sub
mov
sbb
cmc
repnz
push
cld
pop
pop
es
adc
ss
pop
rcrb
ret
cld
pop
mov
lds
divl
test
add
js
jg
icebp
loop
pop
mov
imul
sbb
sbb
stos
and
cmp
lods
and
jg
mov
lock
dec
push
out
add
shll
mov
repz
pusha
bound
sbb
and
xchg
test
ljmp
and
jle
loop
mov
in
jmp
movsl
xor
mov
mov
sbb
pop
and
stos
fildl
mov
jge
pop
fldl
movsl
or
pop
fwait
sub
mov
lea
adc
stc
ljmp
popa
xchg
sub
jmp
xchg
sahf
sbb
ds
aas
mov
cmp
shlb
enter
mov
fldt
mov
or
adc
jge
shr
cmpsl
pop
fsubrl
jle
cli
lock
bound
movsl
xchg
les
into
push
sbb
cli
mov
inc
cmp
les
jbe
xchg
push
pop
les
xchg
xchg
les
std
cmp
jbe
mov
xor
xlat
stos
jb
lahf
or
cmc
jbe
fstpl
fsts
jns
push
sub
fucom
pop
xor
decl
push
sar
xchg
pop
pop
mov
sub
aaa
pop
add
stc
push
testb
pop
out
and
lods
data16
lcall
xorl
cltd
int3
xor
out
addb
xchg
mov
cs
mov
jmp
ret
xchg
jge
aam
mov
daa
dec
lock
jmp
push
dec
or
bsr
outsb
lahf
pusha
add
dec
imul
in
pop
mov
jb
cmovge
ljmp
int
jmp
push
mov
mov
lret
mov
outsb
and
push
mov
daa
mov
int3
jne
sub
adc
add
add
pop
add
ljmp
jp
jmp
jp
fnstsw
neg
in
enter
in
push
add
xchg
mov
mov
jne
xchg
mov
sub
xchg
cmc
pslld
push
mov
ret
dec
test
je
push
jecxz
dec
add
roll
cltd
call
xchg
addr16
sbb
jb
je
loop
pop
pop
push
data16
repz
sub
andl
cld
out
stos
test
stos
lcall
in
cs
lahf
cmp
dec
sbb
mov
dec
jne
xor
push
dec
outsl
mov
inc
adc
subb
pop
lcall
adc
push
in
pushf
ds
add
ljmp
jle
lret
fists
mov
aad
dec
push
pop
xlat
fs
xor
and
cwtl
daa
jb
mov
pop
push
push
aam
nop
icebp
scas
jae
outsb
loopne
xchg
enter
jb
xchg
dec
xchg
xor
cld
imul
lds
das
test
ret
ss
test
xor
sbb
jno
lret
out
pushf
and
jo
mov
ljmp
pop
pop
cmp
mov
mov
daa
push
lahf
outsl
div
rolb
repz
inc
js
pop
mov
fistpl
mov
rcl
addr16
push
ja
pop
loop
inc
mov
jb
pop
ja
call
adc
cmp
xchg
jl
push
jne
arpl
cmp
xchg
cmpsl
loope
dec
sti
cmp
cmpb
adc
sub
adc
cmc
dec
not
fcmovnu
js
add
push
js
pop
sti
bndstx
sub
outsb
jne
cmovg
movsb
repz
repnz
shrb
cmp
movb
pop
out
mov
push
mov
stos
enter
or
inc
and
ds
std
lahf
jno
mov
je
push
arpl
bnd
xchg
fdivp
ja
stos
jmp
in
lea
adc
jge
test
xchg
pusha
inc
jle
fisubs
xchg
shll
xchg
push
fidivs
decl
or
movsl
test
fisubl
imul
xchg
mov
mov
stos
jmp
repnz
inc
push
jae
lcall
mov
dec
subl
xorl
lcall
cld
clc
movsl
rorb
std
push
stos
ljmp
fwait
idivb
xor
stos
jne
arpl
outsl
scas
stos
icebp
out
push
xchg
pop
xchg
iret
pop
rorl
and
scas
gs
sub
leave
movsl
call
call
pop
mov
adc
mov
icebp
fs
mov
add
lea
sub
pushf
pusha
js
inc
jle
pop
xchg
xchg
jle
out
fistpl
mov
outsb
mov
sbb
pop
mov
jecxz
inc
dec
in
adc
ds
adc
mov
in
mov
jns
push
sub
sub
add
inc
les
fcmovbe
jp
repz
dec
movsb
and
ret
call
dec
ds
pop
sub
jae
icebp
loop,pt
or
jno
loopne
repz
outsb
rdpmc
mov
jae
cli
sub
pusha
nop
cwtl
arpl
fistpll
xorb
dec
ja
repz
lods
mov
cmc
cmp
cmp
cmp
dec
sub
mov
sbb
mov
and
mov
jmp
stos
pop
jecxz
pop
pop
cltd
cmpb
out
jg
dec
int3
xlat
sub
hlt
idivl
cmpsb
pop
jl
jbe
pop
fnsave
or
insb
or
es
mov
movsl
add
xchg
out
jae
stc
int
add
sub
dec
adc
and
sbb
mov
scas
lret
test
sbb
inc
mov
adc
repz
repz
jge
and
stos
push
ret
fbstp
mov
and
in
xor
push
out
mov
cmp
addr16
cld
push
and
pusha
cmc
imul
or
stos
loop
xlat
scas
mov
add
mov
adc
mov
sub
jge
ficomps
and
mov
test
mov
jl
shrl
stc
cmp
pop
shll
icebp
test
dec
lods
rclb
mov
stos
mov
push
arpl
xchg
adc
or
pushf
scas
cmpsb
rdtsc
mov
mov
sbb
cltd
add
and
adc
je
sbb
hlt
add
inc
mov
cmc
and
sub
in
xlat
and
jge
not
push
dec
jo
xor
adc
or
lret
fistps
xchg
sti
data16
jecxz
aam
jo
test
test
lods
push
lock
scas
xchg
push
movsl
dec
dec
dec
test
and
mov
hlt
inc
rcrl
dec
adc
pushf
popa
mov
and
int
imul
repz
fimull
mov
nop
hlt
mov
jbe
lahf
pop
jp
cld
xlat
dec
andb
pop
dec
inc
int3
outsl
xchg
insb
add
daa
cmc
and
cmp
or
cmc
cmp
in
outsb
lret
mov
pop
dec
and
sbb
xor
inc
jae
mov
add
data16
paddw
testl
pop
loope
movsb
xor
xor
out
in
dec
mov
jne
ret
push
adc
faddl
aas
mov
scas
cld
and
mov
outsl
cmp
std
mov
sbb
fwait
jo
xor
movsl
mov
fdivl
inc
into
sbb
sub
fnsave
or
inc
inc
out
cmp
push
inc
xchg
add
xchg
call
push
movsl
cmc
jmp
jnp
adc
jle
push
nop
enter
daa
jne
xor
cmp
cmp
andb
xchg
fisubl
pop
call
sar
out
cltd
xchg
adc
sbb
cltd
andl
jb
or
adcb
mov
adc
out
push
das
push
in
and
scas
add
stc
cmpsb
loope
push
testb
pusha
mov
jmp
inc
push
xor
into
cmp
test
loop
jb
mov
mov
or
fs
fs
pop
pop
push
and
loop
clc
jno
mov
xor
or
rolb
and
xor
cmpsl
test
rcrb
or
mov
xor
rolb
add
data16
movsb
push
imul
sub
testb
fiaddl
pop
int3
das
mov
scas
nop
inc
addr16
inc
out
push
cmc
xchg
sar
in
ret
cmp
mov
push
pop
and
mov
in
icebp
xor
cmpsb
inc
dec
addr16
std
test
sub
sbb
aam
inc
add
fwait
mov
mov
or
stos
jno
mov
adc
dec
dec
shrl
push
lret
stos
cmc
mov
or
fneni(8087
test
cmp
push
fmul
in
addr16
push
je
push
jmp
inc
fsubrl
and
repnz
bound
enter
test
xchg
mov
mov
xlat
mov
hlt
imulb
xor
sbb
sti
or
in
sbb
inc
stos
pusha
je
xchg
push
add
fdivrl
pop
jge
xchg
xchg
cmp
shll
popa
jns
mov
jns
xchg
sub
push
add
sub
test
cwtl
in
adc
adc
int
sbb
in
into
push
sbb
and
ret
test
cmp
cs
cli
jo
pop
add
mov
stc
or
call
out
jns
inc
dec
mov
and
ret
rcrl
loope
ja
cmp
ja
or
mov
cwtl
push
fcomps
dec
mov
lret
and
jmp
cmc
in
mov
mov
sbb
and
dec
and
lea
call
jo
ja
mov
cmp
and
sub
test
cmpsl
out
insb
repnz
mov
xchg
aad
add
daa
dec
into
data16
cmp
dec
sbb
sub
xor
aas
arpl
xor
out
pop
into
add
sbb
movsb
push
sub
mov
lods
mov
pop
push
mov
loopne
push
cmpsl
in
mov
xchg
cmp
test
dec
decl
fwait
aaa
and
adc
jbe
inc
int3
lea
test
or
xor
jmp
stos
or
jp
pop
xor
lret
lock
insb
rol
push
lcall
imul
or
inc
in
cld
mov
add
ret
sub
popa
adc
leave
mov
imul
divb
pop
xchg
jne
xor
inc
jle
out
push
cltd
ret
push
int
ja
mov
mov
aad
hlt
push
jge
scas
repnz
sub
push
jns
inc
xchg
xor
les
xchg
roll
lock
daa
cmpsl
imul
or
std
jae
push
pop
push
lcall
add
repnz
divl
out
cmp
sbb
data16
jno
jge
dec
lds
or
imulb
dec
repz
in
repnz
mov
xor
sub
mov
mov
dec
out
dec
add
push
insb
in
and
scas
and
dec
mov
mov
mov
inc
cld
jmp
mov
inc
xlat
icebp
jp
add
push
xchg
pop
lods
lea
cwtl
sti
push
out
lods
mov
or
cld
outsl
mov
vmovmskps
sbb
aad
mov
sbb
ds
dec
xor
test
mov
aad
fiadds
insl
fnstsw
cmp
jb
jno
cmc
jno
or
fsubl
fwait
xchg
xchg
mov
mov
sbb
imul
adc
mov
insl
in
xchg
setp
insb
push
mov
pusha
rcrl
cmp
loop
jb
mov
cmpsl
lods
pop
hlt
pop
es
inc
mov
lock
pop
outsl
popf
mov
mov
lock
orl
sbbb
xlat
outsb
enter
push
leave
pop
mov
mov
push
and
in
sbb
push
mov
mov
stc
es
stos
lea
jp
iret
pushf
jnp
gs
lods
sbb
popf
pop
xlat
xchg
roll
imul
test
lods
mov
and
lea
es
add
bound
sub
aad
bound
inc
aas
int
das
test
addr16
xchg
dec
lea
push
aaa
push
lods
test
int
push
sub
fwait
jecxz
movq
cmp
pop
outsl
movq
lods
and
shll
xorl
mov
sahf
and
aas
push
mov
jl
popa
and
xchg
mov
dec
jmp
sahf
xchg
jb
jge
iret
test
call
dec
pop
test
outsl
bnd
push
or
jle
fcmovnu
pushf
add
inc
push
mov
orb
ds
ja
mov
mov
imul
fs
mov
pop
sbb
fwait
jge
gs
and
xlat
cltd
pop
fdiv
mov
or
jns
aad
xor
iret
imul
cmpsb
add
stc
mov
mov
dec
call
add
sub
jp
mov
jg
fsubrl
pushl
jecxz
adc
xchg
adc
leave
pop
pop
xlat
jns
outsb
arpl
movsl
data16
pop
or
add
out
mov
into
push
and
rolb
add
fbstp
xor
jne
shll
test
pushf
divl
inc
jl
sub
pop
cli
loop
cmpsb
out
mov
push
lret
xor
pop
iret
cmp
jmp
cld
nop
xor
dec
insl
cmpsb
adc
mov
jbe
xchg
dec
insl
mov
fs
cmp
xchg
mov
data16
mov
pushf
dec
sub
ljmp
repnz
pop
xchg
int
push
dec
inc
mov
xchg
shl
scas
xchg
push
lods
and
dec
imul
ljmp
dec
or
sbb
jge
in
push
aaa
and
mov
sub
sarb
mov
sbb
sti
cmp
je
mov
cmpb
test
out
xor
in
lods
fs
mov
xchg
dec
icebp
ror
orl
ficompl
pop
cmp
sbb
dec
adc
cmpsb
pop
mov
sbb
and
and
sti
sbb
jb
loope
sub
mov
jmp
push
mov
ss
cmpsl
or
enter
in
out
mov
enter
xor
mov
daa
mov
test
das
movb
cld
fbstp
add
pushf
push
mov
sub
subl
in
mov
fnsave
lods
dec
xchg
push
into
addr16
dec
lcall
or
and
xor
ficoml
cmp
aaa
mov
lock
add
aad
leave
pushf
loop
ret
fdiv
lods
pop
fdiv
loope
mov
push
cmpl
test
adc
and
sub
inc
mov
lcall
addr16
jb
mov
test
push
mov
mov
dec
pop
adc
bound
or
jg
popa
inc
mov
inc
inc
lcall
into
addr16
ror
sub
xchg
call
and
jno
push
cmpsb
repz
mov
movsl
fwait
inc
push
ret
leave
add
xchg
or
mov
out
popa
cli
gs
test
mov
dec
xor
rcrb
cmp
mov
push
out
in
jno
or
ljmp
push
add
cs
pushaw
jecxz
in
xchg
int
xchg
cmpsb
cltd
out
pop
adc
sarl
sbb
cmp
ds
xchg
ja
xor
sbb
xchg
out
xor
xor
testl
ret
push
dec
push
test
insl
popf
into
insb
mov
lret
dec
cmp
pop
jbe
fwait
lock
mov
add
sbb
and
dec
and
rcrb
ja
lret
rolb
in
push
add
fildl
sub
repz
push
loope
fists
jae
in
sub
xlat
mov
mov
repz
add
mov
pop
in
jns
inc
mov
jno
pop
cmc
mov
xchg
push
lcall
mov
outsl
aaa
jge
and
int3
cmc
mov
jo
imulb
mov
cmc
aam
adc
inc
sahf
sub
xchg
ja
jne
ret
push
imull
lds
mov
movsl
push
mov
cltd
adc
pop
shl
ljmp
xchg
xor
sbb
mov
pop
faddl
cltd
inc
cltd
ds
jb
jle
dec
push
ret
add
mov
cmp
aaa
add
andl
inc
aaa
es
int3
insl
push
jae
fidivl
mov
xor
push
xchg
leave
mov
inc
mov
movsb
cmp
int3
adc
sahf
icebp
mov
push
sbb
dec
add
or
shlb
shll
scas
push
psraw
inc
aaa
push
sbb
dec
fmul
sub
jae
sbb
decl
fidivrs
push
test
adc
inc
mov
in
lret
filds
jmp
or
addr16
mov
jmp
leave
imull
inc
bound
ret
push
ds
xchg
push
and
mov
nop
sbb
mov
mov
mov
rclb
ljmp
enter
cmp
add
sarb
ret
adc
xor
nop
xor
movsl
add
ds
mov
roll
aaa
popf
das
push
ss
dec
dec
leave
imul
aas
leave
arpl
mov
jecxz
mov
jne
sub
push
mov
sbbb
imul
gs
testb
mov
cmpsb
rcll
movsl
jmp
push
xchg
pop
mov
ja
stos
push
lods
push
int3
adc
mov
or
cmp
aaa
dec
xor
das
adc
das
sub
fidivrl
jns
xchg
sub
repnz
js
lret
aad
test
lods
outsb
ja
push
jmp
inc
xor
cltd
iret
int3
imul
lahf
mov
xor
push
nop
cmpsb
andb
cwtl
pop
push
shr
cltd
outsb
or
fsub
cwtl
add
stc
xor
je
icebp
xchg
and
pop
push
pop
mov
sbb
loope
mov
dec
pop
shlb
or
dec
sbb
inc
loop
jp
xor
mov
lret
fsubrs
sbb
outsl
jo
loop
sbb
push
outsl
xchg
jge
cltd
bound
sbbl
stc
or
xchg
lock
aad
xchg
movsb
shrl
mov
xorl
pop
mov
scas
ret
and
outsb
pop
enter
sti
dec
orl
aam
dec
aad
orl
in
push
movaps
enter
sub
sub
lret
jns
mov
push
jmp
mov
push
jnp
shrl
mov
push
mov
jge
mov
jl
xchg
mov
xorb
and
jo
lods
or
pop
std
push
mov
dec
sbb
loopne
push
aam
xchg
pop
mov
shll
bound
and
hlt
mov
sete
ljmp
inc
adc
addr16
sbb
incl
les
push
pop
push
sbb
mov
aaa
adc
cli
or
jno
jp
dec
add
js
sub
mov
aam
mov
sbb
inc
rorl
fdivs
jecxz
out
arpl
fsubl
ja
adc
pop
jae
inc
sarb
or
pop
adc
in
cmp
xorb
xor
xchg
cmp
push
sbb
mov
dec
mov
inc
xchg
pop
dec
cli
insl
std
cmp
mov
pop
push
dec
inc
xchg
jp
mov
and
mov
fucompp
and
les
push
jb
fcmovb
jge
pop
and
mov
les
test
adc
out
leave
jmp
jmp
sahf
dec
mov
jmp
push
xor
sub
rep
popa
js
lock
add
xchg
test
icebp
and
mov
mov
call
inc
mov
push
mov
push
push
test
jmp
push
negb
pop
sahf
mov
jg
scas
pop
xor
mov
cmp
pop
pop
push
xchg
xchg
mov
pop
dec
sbb
out
out
dec
push
xchg
lods
xlat
mov
hlt
dec
ret
out
out
dec
imul
pop
pop
fadds
jo
pop
adc
out
std
ror
jo
nop
mov
sbb
ja
push
dec
pusha
cli
mov
pop
lock
add
inc
and
daa
adc
in
or
adc
daa
scas
pop
sbb
stc
shr
xor
jl
ljmp
cmp
mov
lods
pop
inc
mov
in
aad
add
and
sbb
ljmp
or
es
roll
adc
ja
out
dec
adc
xor
enter
add
into
mulb
pop
roll
bound
push
pop
sbb
adc
sbb
mov
mov
xchg
ja
jb
adc
or
sahf
lods
data16
pop
sbbl
popa
pop
movsl
int
enter
pop
repnz
adc
imul
lock
xchg
mov
and
xor
sbb
cld
imul
pop
push
cwtl
or
cmp
adc
or
mov
cld
ret
sbb
add
adc
adc
jo
mov
pop
loope
mov
sub
gs
add
xchg
mov
mov
mov
xchg
bnd
xchg
dec
das
enter
pushf
das
sbb
imul
xchg
mov
outsl
pop
fdiv
sub
gs
sbb
xorl
lods
shrb
mov
jo
and
pushf
sub
int
mov
pop
cmc
test
aad
cmp
pushf
inc
mov
push
pop
sub
inc
or
aas
jne
cmp
fisttps
add
and
add
frstor
fisttpl
sbb
rclb
mov
std
into
xor
daa
mov
lds
testb
inc
imull
mov
pop
cld
xor
add
fwait
les
mov
insl
mov
cmc
or
iret
fldcw
push
data16
rcl
repz
pop
sarb
xchg
sub
inc
fildll
dec
gs
cwtl
and
mov
rcrl
pop
das
mov
movb
mov
pop
ja
push
jns
hlt
mov
mov
jnp
mov
xchg
push
aam
loop
dec
sbb
loopne
ds
mov
mov
sub
mov
lahf
push
imull
xor
pushf
xchg
hlt
pop
xchg
mov
sbb
jno
loopne
stos
ds
repnz
inc
add
mov
lods
popw
cmp
dec
xchg
sarl
test
push
std
test
lret
xor
mov
inc
divb
cmp
adc
and
mov
inc
mov
cmpl
jb
pop
mov
jo
jb
out
xchg
pop
es
pop
add
xchg
aam
shll
push
int
outsl
dec
mov
mov
sbb
push
xchg
xchg
mov
cmpsb
in
add
add
scas
push
iret
xchg
jnp
loopne
mov
fsin
filds
mov
sti
imul
sti
outsb
cmp
arpl
js
jbe
pop
and
stc
int
cmp
lods
xor
or
rorl
lock
ljmp
jp
sbb
cmp
incl
push
gs
xor
test
push
pop
xor
jns
shrb
inc
repz
mov
mov
out
jae
in
inc
jecxz
xor
fists
gs
lods
into
xlat
rorb
add
push
outsb
jp
jno
push
xor
add
push
xchg
mov
cmp
sarl
aaa
sub
adc
es
call
in
leave
dec
pop
xchg
divl
jmp
push
aam
or
das
sbb
dec
adc
cmp
jl
data16
js
test
lcall
mov
out
sbb
or
pop
xor
cmp
push
push
int
aam
out
iret
jp
pop
outsl
and
sub
out
pop
aas
push
mov
sbb
out
test
xor
or
fildll
jno
jp
add
cwtl
jmp
jb
push
xchg
and
sar
out
out
gs
add
insb
mov
in
bound
mov
mov
push
jns
jnp
insb
in
mov
lock
push
cmp
adc
iret
inc
fsubl
xchg
xchg
xchg
je
into
jmp
unpckhps
pusha
sub
int
fwait
jo
fadds
lcall
andl
pop
inc
movl
lret
sbb
lea
int3
jo
loopne
add
mov
rcrb
mov
rclb
or
ds
aam
cmp
std
mov
inc
sub
or
test
out
adc
nop
hlt
ja
push
and
pop
xor
xor
jge
mov
aas
dec
jbe
adc
fdivrp
jecxz
sub
rcrl
mov
cmp
scas
ja
pop
mov
jno
test
xor
mov
loope
jns
das
out
ret
pop
icebp
inc
sbbb
adc
pop
pop
lahf
roll
push
push
aad
add
and
or
popa
out
imulb
das
jle
icebp
push
push
cmc
mov
jb
adcb
xor
das
ret
ret
mov
xchg
fnstenv
ja
and
shlb
add
les
mov
push
ret
decb
insl
lock
dec
notb
shl
inc
add
movsb
adc
mov
mov
fisttpll
mov
add
jbe
bound
mov
sahf
aas
mov
mov
inc
aad
cld
sbb
and
adc
rcrb
jb
test
lods
pop
lahf
cltd
pop
jbe
mov
test
data16
loop
inc
adc
cmp
test
push
fcompl
adc
dec
ljmp
adc
jle
jb
adc
xor
push
test
stos
sub
out
adc
dec
insl
repnz
fsubl
std
mov
mov
dec
shrl
push
mov
pop
cmp
sub
lds
dec
clc
sub
push
insb
inc
cmp
xor
loop
mov
fistps
rorl
aaa
dec
or
je
add
movsl
push
sub
ret
sub
xor
xchg
mov
aaa
cmp
enter
mov
xor
arpl
test
jmp
into
inc
gs
loop
sub
idivb
cmp
sbb
jle
sti
fsubl
jp
fmul
je
xor
push
and
shlb
cmp
cmpl
and
pop
jns
adc
jbe
jecxz
xchg
call
test
out
adc
push
sub
jbe
and
loop
dec
and
shr
push
xor
ror
lds
stc
repnz
xchg
or
es
sbb
addr16
insl
xor
inc
cmp
push
jle
inc
or
nop
pop
pop
aad
xchg
fcmovbe
std
stc
pop
add
mov
addb
fnstenv
cmp
scas
push
pop
aam
into
and
pop
sbb
mov
sahf
add
call
imul
leave
xchg
imul
pop
xor
xchg
dec
loope
dec
dec
inc
or
inc
mov
rclb
inc
or
add
xor
cwtl
jecxz
cs
js
mov
cmp
aaa
push
inc
jmp
mov
push
push
dec
lret
syscall
mov
jmp
jo
or
sti
sbb
scas
in
push
sub
or
in
pop
movsl
fimuls
lds
iret
xor
xor
or
in
shrb
push
call
mov
cmp
adc
sbb
cs
lret
iret
aaa
sbb
arpl
movsl
jbe
jl
xchg
jo
pop
push
enter
enter
jae
ss
xchg
pusha
inc
imulb
out
mov
mov
adc
jl
call
repz
jle
push
mov
std
jo
cmp
cwtl
pushf
dec
fsubl
push
dec
xor
mov
clc
frstor
inc
lods
add
scas
lret
jmp
add
add
jl
xor
mov
dec
xchg
mov
mov
jl
lret
or
in
inc
cmp
in
into
xchg
pop
lret
jnp
mov
repnz
or
jg
xchg
rcrb
and
pop
or
and
int
mov
clc
jnp
arpl
xchg
add
sbb
jecxz
jle
and
cmp
mov
mov
add
mov
push
pop
cli
xlat
cmp
jp
push
add
mov
test
mov
daa
gs
flds
or
call
insb
jne
adc
jb
xor
pop
push
ljmp
mov
cld
into
femms
mov
push
cmc
cld
mov
outsb
mov
fidivrl
shl
loopne
es
sub
movlps
das
aas
outsl
icebp
adc
sub
xor
xchg
fwait
je
lods
lds
sar
lret
inc
jmp
cli
pushf
insl
pusha
or
xorb
int
xchg
add
sub
jg
hlt
stos
test
jmp
out
lock
loope
inc
cwtl
sub
das
out
pop
sahf
ror
mov
les
and
ljmp
jp
in
xlat
cmpsb
movsl
popf
pop
mov
repnz
pop
mov
mov
mov
xchg
or
mov
xor
adc
imul
pop
subl
inc
inc
push
dec
cmp
and
jno
movsl
adc
jg
sbb
adc
pop
idivl
std
xchg
ds
hlt
fnstenv
ds
das
xchg
mov
mov
pop
aam
bound
bound
mov
rclb
mov
test
push
dec
out
pop
leave
shlb
out
cs
lcall
ljmp
dec
dec
xor
faddl
sbb
jae
stos
and
mov
leave
jo
data16
jp
pushf
jne
fwait
jmp
inc
mov
pop
in
dec
jne
sub
inc
mov
cmc
cmp
jle
push
mov
ficoml
cmpsl
or
adc
pop
movsb
xor
mov
or
sbb
out
inc
sbb
pop
sub
jg
inc
pop
out
js
push
push
cs
jl
push
ret
out
or
stos
xor
sahf
mov
or
ret
cld
push
pop
inc
cwtl
sub
lock
sub
jge
nop
enter
mov
loope
push
js
bound
push
andb
sbb
mov
stos
movsb
fimull
popa
inc
arpl
out
xchg
or
cs
adc
dec
mov
dec
cld
out
mov
insl
addb
push
aam
aad
mov
cmpsb
sahf
mov
into
imul
insl
push
mov
out
fldenv
adc
addl
pop
ss
sbb
mov
add
pop
jbe
lock
js
rclb
sub
ljmp
addr16
add
in
daa
mov
push
xchg
push
adc
pop
sub
or
sti
dec
leave
arpl
adc
mov
shll
popa
push
or
push
loopne
cmpsb
test
iret
xor
push
int3
lret
or
dec
cmp
jnp
loopne
imul
adc
pop
insb
aas
or
xchg
xor
dec
add
popf
sahf
sti
pop
arpl
es
sbb
pop
jbe
inc
jae
out
adc
jns
arpl
mov
jo
jg
repnz
and
icebp
dec
adc
pop
add
add
rcrl
addl
ljmp
cmpsl
jecxz
fcoml
lock
sub
fwait
cmp
or
mov
fidivl
xor
test
jne
adc
push
adc
fnstsw
cmp
ret
loopne
jp
repz
sbb
pop
lcall
pop
dec
jnp
adc
leave
subl
loope
push
or
push
repz
push
sbb
xchg
xor
aam
in
push
mov
add
loopne
adcb
sub
mov
int
gs
aad
shrl
jno
push
subl
cmp
pop
daa
std
clc
sahf
in
outsl
jge
inc
icebp
jle
mov
or
mov
mov
adc
xchg
xchg
outsl
sbb
dec
fldcw
jmp
stos
xchg
push
test
jg
imul
or
inc
sbb
inc
leave
mov
cmp
iret
out
xchg
xchg
jae
arpl
in
and
mov
cmp
jge
fldl
sub
inc
mov
mov
stos
add
das
pop
out
aaa
ds
adc
outsb
mov
data16
in
popa
cmovl
sti
movsb
cltd
leave
clc
lods
std
rcrl
cltd
aad
sbb
jg
jae
or
lret
mov
and
fiadds
imulb
push
shlb
cs
xlat
xor
subb
je
lds
mov
out
ficompl
fisttpl
out
sbb
cmp
mov
add
jo
mov
loopne
xchg
pushf
out
xchg
cs
decl
not
loope
pop
out
inc
aam
lea
dec
test
push
and
in
or
pop
jle
mov
cld
insb
lock
popf
lret
pusha
mov
xor
cmp
add
or
xchg
movl
inc
hlt
aam
cld
data16
xchg
int
fidivl
jp
testl
inc
xor
mov
sbb
dec
sarb
adc
mov
ficoms
mov
ret
in
sub
je
xor
sbb
dec
xchg
shrb
cmp
fstpl
sub
and
fs
insb
sub
ss
dec
leave
fildl
xor
add
cmc
sti
lea
flds
fnsave
hlt
cmc
and
cmp
out
mov
ret
mov
xor
idivl
clc
roll
movb
aaa
and
inc
xor
mov
test
sub
xor
sub
sbb
imul
addr16
lcall
in
push
lret
mov
enter
cmpsb
jo
cmpb
daa
js
jbe
addr16
inc
mov
inc
inc
add
aad
mov
jns
sub
faddl
jle
and
pop
jae
inc
jbe
pusha
sarb
popf
inc
sub
mov
fdivrs
adc
xchg
xchg
sahf
add
nop
push
and
mov
fdivs
jl
ret
sub
push
push
mov
jmp
jg
cmc
rclb
and
adcb
cmp
mov
push
rorb
mov
mov
lret
sbb
sbb
lahf
push
xchg
cmp
mov
insl
aas
test
fcmovne
xor
mov
add
sbb
push
cmpsb
movsb
dec
jg
sub
xchg
push
ret
sub
add
jbe
and
pop
test
mov
cli
push
cmp
sbb
or
add
aaa
in
ljmp
cmp
mov
add
sbb
adc
loop
fstpt
add
mov
add
push
dec
adc
push
inc
dec
leave
mov
lret
xor
sbb
iret
cmpsb
jecxz
mov
idivb
sub
and
mov
outsb
ficoms
rcr
sbb
mov
sar
fidivs
xorl
sub
sub
adc
push
mov
xchg
imul
ja
jo
mov
xor
inc
in
ret
lahf
or
scas
test
fucomp
data16
ja
sbb
xchg
cmp
or
sbb
and
aaa
push
insb
pop
mov
ficompl
mov
fistpll
inc
stc
mov
lcall
clc
pushl
sub
sub
mov
adc
icebp
into
inc
lods
sub
xor
pop
inc
sar
fmull
sub
mov
pop
pusha
sbb
lahf
cmc
pop
aad
lea
and
je
sbb
sub
mov
xor
xor
enter
mov
mov
push
or
mov
shl
out
insb
pusha
xchg
xchg
pop
or
mov
clc
adc
mov
lods
sub
jbe
xor
loope
adc
enter
fwait
jle
shll
cltd
daa
pop
repz
outsl
dec
jmp
movsb
movsb
pop
cmp
ss
fisttpl
jns
xor
inc
and
subl
test
fldl
call
jbe
sub
cmp
mov
add
or
xor
es
lret
cld
jmp
sbb
fdivs
in
xor
jo
push
bnd
jg
cmpsb
jno
out
dec
popa
xor
popa
adc
call
jne
fadd
push
inc
push
xchg
pop
psubq
sbb
das
jg
scas
mov
ret
mov
leave
arpl
xchg
push
sbb
setnp
mov
inc
mov
cmp
testb
xor
mov
scas
enter
xchg
xor
hlt
loopne
test
push
imul
out
cmp
imul
push
push
in
stc
dec
lcall
cmp
pushl
jp
xor
out
or
xchg
leave
repz
ja
mov
xchg
gs
dec
adc
mov
xchg
mov
pop
out
push
xchg
ljmp
addr16
mov
add
sub
fisubl
cmpsl
lahf
leave
clc
fsubs
mov
cmp
jo
les
popf
xchg
sbb
out
scas
jmp
mov
aam
js
push
push
out
push
cli
push
jb
mul
inc
insl
push
fcmovu
bound
push
aad
jmp
jmp
test
aad
dec
mov
bound
add
xor
mov
imul
test
addr16
fwait
or
enter
data16
cld
pusha
sahf
adc
rcrl
std
test
and
lock
sub
sbb
pop
mov
lods
cmp
insl
adc
adc
jns
out
cmp
jecxz
shrl
fwait
pop
mov
aad
out
xor
pop
lret
lahf
es
dec
mov
jge
cmp
pop
fstpl
inc
dec
push
xrelease
fimuls
pushf
sub
jl
mov
mov
push
push
push
ja
mov
or
and
les
sub
xor
in
loop
and
mov
testl
das
rcrb
adc
push
xor
es
test
xor
sbb
test
sub
jmp
das
sbb
pop
outsl
fldenv
add
cmp
add
shl
push
rorl
mov
mov
cwtl
bnd
bound
ficomps
push
js
in
dec
iret
inc
push
add
sbb
test
push
sbb
push
lret
aam
lds
outsb
adc
clc
or
pushf
scas
mov
insb
adc
jns
aaa
pushf
cld
in
push
jb
jg
popf
ret
xchg
inc
adc
insb
fdiv
add
mov
xorl
dec
push
pop
cmp
mov
sbb
xchg
xor
and
inc
mov
jbe
inc
jmp
repz
repnz
jge
in
mov
out
icebp
stc
arpl
mov
fwait
mov
fs
mov
dec
pop
out
leave
ror
sbb
icebp
or
lcall
xchg
cmp
bound
xor
dec
mov
scas
lods
pop
mov
aas
rcl
jge
xor
rcrl
mov
ficomps
test
imul
aam
ss
mov
out
push
add
xchg
or
out
outsl
ret
xor
in
faddl
pop
int3
dec
insl
into
dec
and
into
add
into
xchg
and
fcompl
in
xor
mov
or
out
lock
mov
adc
jnp
dec
lea
sbb
gs
dec
jecxz
enter
jae
xor
sbb
inc
jmp
dec
int3
push
push
ds
mov
and
mov
stc
mov
xor
push
arpl
push
adc
or
not
xchg
ds
pop
inc
mov
xchg
xchg
push
fcmovu
pop
jb
add
imul
push
adc
inc
adc
out
pop
jns
sbb
fnstenv
mov
mov
adc
adc
sahf
jo
test
ja
mov
ja
xchg
mov
adc
mov
outsb
fcomi
and
fadd
xor
mov
ja
int3
jg
lahf
popa
pop
test
jo
daa
jno
scas
dec
mov
test
cmp
push
out
dec
imul
jb
inc
inc
cmp
push
xlat
cltd
shrl
loopne
dec
xchg
stos
insb
xor
and
lret
sbb
imul
cmp
sbb
pop
cmpsl
lahf
aas
les
popf
pop
sti
push
data16
cmp
xchg
addl
or
aas
adc
sub
or
divl
push
out
ljmp
xor
icebp
xor
imul
push
mov
out
enter
jmp
jno
dec
rcrb
cli
repnz
icebp
mov
in
sti
xor
add
and
adc
add
loopne
enter
rorb
cmp
rcrl
add
xlat
stc
out
mov
andb
test
cli
sbb
lds
jg
jo
cmp
jl
add
and
loop
insl
jl
inc
sub
jne
jns
inc
insl
xchg
in
repnz
jae
dec
rcll
mov
ret
orl
push
jb
lds
repnz
adc
rcl
cmp
jb
shrb
mov
cmpsl
loopne
sbb
in
test
jg
ds
or
dec
cltd
mov
fisttpll
cmpsl
cmovb
hlt
cmpl
mov
inc
push
adc
addr16
sbb
push
sub
add
push
jne
xor
lods
jp
push
push
add
ljmp
fs
inc
adc
mov
mov
cmp
popf
orl
pop
lret
gs
cmp
fs
movsl
int
pop
or
addb
aam
cmp
cwtl
lods
popf
ffree
sub
and
and
cmp
rcrl
add
clc
sarl
rol
lods
sti
pushf
lret
mov
mov
mov
and
idivl
pop
daa
lods
push
add
pop
jo
or
aas
xor
fwait
push
fldenv
cmpsl
std
or
xchg
and
xor
aam
pop
sti
cmpsl
scas
xchg
push
push
mov
push
fsubrs
mov
cmpsb
add
sub
sub
js
push
mov
and
imul
outsl
xor
push
les
mov
xchg
jle
sub
add
add
div
sub
lcall
jp
and
push
faddp
ficoml
fwait
add
push
rclb
cmp
add
rcrl
push
shrl
push
push
cmp
xor
mov
movsb
and
xchg
cwtl
mov
sub
mov
loopne
rorl
or
adc
imul
mov
sbb
sbb
dec
xor
test
daa
aas
adc
cli
int3
popf
aam
sti
mov
jecxz
dec
daa
cs
into
fnstcw
mov
push
xchg
push
lret
test
scas
js
mov
lds
and
insl
inc
inc
shrb
sbb
loopne
rolb
test
mov
popf
aas
jge
sbb
dec
mov
loope
sbb
call
lahf
and
add
dec
jl
push
fs
cmp
fnstenv
stos
push
xor
add
push
xchg
mov
push
add
sbb
aas
insb
jbe
or
mov
and
adc
in
repz
xchg
icebp
mov
push
out
aaa
pop
xor
jnp
xor
aas
inc
or
andb
sbb
sbb
sub
aaa
int
cmp
mov
sbb
cmpsl
lahf
mov
clc
and
cli
push
lcall
pop
loope
out
mov
pusha
sub
cmp
jne
or
movsb
sub
xchg
shlb
aas
or
push
jnp
xchg
push
hlt
int
dec
shrl
bound
sub
cmp
ja
push
ja
bt
mov
out
aas
mov
sub
xor
xor
sbb
jge
sub
cltd
jge
xor
and
pop
pop
mov
sbb
dec
pusha
pop
xchg
shl
cmp
sbb
ret
mov
mov
and
ret
jno
in
adc
int3
dec
in
repz
or
xlat
pusha
cmp
jae
aaa
jo
imul
inc
adc
insl
testb
mov
inc
repz
or
xchg
aam
pop
arpl
js
outsl
mov
or
mov
outsl
jmp
add
push
aaa
xchg
aam
dec
arpl
jnp
ljmp
pop
loope
fwait
and
pusha
xor
mov
and
add
push
dec
lret
imul
or
enter
lret
xchg
jle
ss
push
testb
xor
stc
mov
sub
push
add
stos
push
push
sub
sub
pop
and
lock
daa
mov
xor
int
inc
out
in
imul
fmul
icebp
mov
mov
ljmp
xor
cmc
imul
pop
into
sti
cmp
push
xor
addl
xchg
sbb
pop
mov
cmpsl
mov
dec
jne
stos
popa
es
mov
loope
mov
inc
call
ss
pop
mov
lods
fcoms
inc
mov
mov
std
xchg
fmulp
cld
insb
push
add
lret
mov
sub
ja
pop
and
mov
fld
sub
sbb
jmp
add
xchg
test
add
shrb
sbb
clc
dec
lahf
ja
lods
dec
mov
insl
jmp
cmpsb
sub
std
pop
lret
jb
aas
cmp
arpl
xor
aaa
es
sub
push
dec
push
cwtl
xor
mov
aas
stos
aam
sub
cmp
jbe
sub
notb
fldenv
notb
mov
add
hlt
leave
jbe
cmp
nop/reserved
xchg
test
insl
xor
mov
mov
sbb
dec
stc
fcomi
loope
xchg
cld
mov
stos
adc
pop
mov
pushf
or
imul
insl
mov
xchg
mov
xor
jns
dec
into
or
adc
loope
andnps
cmp
mov
cmpsb
xchg
cmp
xchg
add
stc
mov
mov
mov
mov
xor
pop
cmpsl
dec
mov
data16
das
fstpl
call
sub
mov
fstpl
or
call
cmp
xor
and
jl
movswl
sarb
sub
mov
lahf
sbb
into
lock
jmp
imul
cmp
mov
mov
adc
mov
loop
mov
out
ds
pop
adc
pop
ss
stos
or
dec
mov
mov
pushf
jmp
fs
xchg
push
xor
call
jo
and
jno
cmc
sub
aas
test
sbb
mov
insb
scas
cli
ds
aad
lods
mov
sub
lcall
aas
mov
sti
mov
inc
mov
enter
inc
sub
or
and
ret
outsl
insb
dec
repnz
iret
rorl
fcoms
call
aam
sbbb
adc
cmc
scas
jne
xchg
repz
cmp
or
call
add
fsubrl
adc
add
hlt
or
inc
dec
xchg
mov
or
dec
xor
xchg
testb
pop
shlb
in
cltd
scas
sbb
rol
or
fildll
xor
xchg
in
add
jl
std
or
adc
and
sbb
adc
lret
adc
insb
pop
aas
lods
es
fisubrl
mov
xor
or
jns
push
sub
and
mov
cmpsl
cmp
daa
and
xor
outsb
sub
cmp
xchg
test
loope
pop
std
jmp
loope
or
push
push
fs
fs
loop
push
test
mov
test
jb
subb
bound
out
dec
pop
sar
out
sub
and
and
inc
mov
add
out
xchg
pop
popf
mov
sbb
loopne
pop
push
into
lea
jo
xor
pop
aad
ret
scas
pop
and
sbb
sbbb
repz
imul
inc
pop
xor
out
ljmp
imul
fs
pushf
or
aam
movsl
mov
sub
stos
insl
inc
mov
arpl
pop
jecxz
mov
jno
lret
xor
rorl
dec
stos
fsubrl
mov
cmp
rcrb
out
out
and
xchg
and
aam
pop
fdivr
ds
sub
stos
mov
movsb
xchg
xchg
mov
push
inc
popa
test
sub
mov
and
push
test
jp
out
pushl
mov
int
repz
icebp
fisttpl
inc
mov
sub
call
mov
fstpt
cwtl
ja
xchg
in
icebp
mov
push
mov
loop
scas
sahf
pop
jbe
loop
dec
dec
rcpps
mov
ss
xor
sub
cmp
lret
in
jb
sarb
shlb
jl
jle,pt
aam
cmpsl
add
lahf
fcom
iret
lret
dec
lea
mov
leave
mov
mov
lret
mov
out
sub
mov
data16
adc
inc
in
dec
jmp
and
jno
xor
inc
lahf
ret
dec
xor
repz
mov
jmp
adc
sub
aad
out
xchg
cs
jo
das
rcr
pop
or
cmpsb
rcr
dec
sub
add
cmp
stos
push
cmp
add
or
ja
call
and
sbb
loopne
bound
mov
stos
ljmp
push
push
lret
daa
leave
adc
mov
push
subb
adc
outsb
sbb
mov
lods
in
mull
cwtl
fs
mov
mov
and
sbb
mov
sub
push
mov
push
mov
mov
lods
out
adc
cmp
sbbb
sbb
aas
xlat
sarl
xchg
xor
push
push
in
insb
pop
push
push
cmpsl
out
mov
icebp
mov
push
ljmp
xchg
out
aaa
sbb
lret
xlat
jp
sahf
push
ja
jmp
subw
lock
loopne
andb
aas
lds
stos
aam
xchg
orb
lods
arpl
mov
sbb
test
cmp
stos
or
lock
aam
pop
testb
pop
imul
cwtl
mov
pop
dec
repz
xor
mov
cltd
sbb
stos
shrb
stc
jg
fwait
in
in
aaa
and
sbb
dec
dec
shl
cmp
fisttpll
lds
pop
inc
xor
pop
mov
cmc
pop
mov
loop
lock
mov
mov
fimull
jb
and
inc
mov
and
jno
not
jge
out
push
add
jnp
cmc
test
mov
pop
js
xchg
lcall
idivb
and
lods
adc
subb
inc
jle
adc
dec
and
scas
arpl
cs
xor
mov
mov
out
fistpl
xchg
gs
jno
add
push
mov
push
sub
push
ja
pusha
mov
in
out
mov
pop
in
bound
push
xchg
or
lea
popf
jnp
dec
aad
mov
push
adc
orl
stos
xlat
jne
cmp
and
xchg
cmovl
or
insl
shrb
mov
js
mov
and
adc
jmp
mov
xchg
push
neg
cmp
xchg
adc
xchg
jge
mov
sbb
xchg
xor
call
outsb
xor
mulps
cli
pusha
dec
popf
cmp
outsb
mov
rclb
sbb
add
call
or
jmp
push
or
scas
jno
xchg
jp
out
int
icebp
pop
sub
je
inc
and
cmp
out
cli
les
hlt
cmpsl
fisttps
js
lfs
and
sbb
push
mov
pusha
repz
xchg
mov
fisubrl
mov
orb
adcb
stc
mov
movsb
sbb
xor
lods
push
dec
dec
add
mov
not
mov
repz
inc
xchg
sub
jg
mov
lock
mov
gs
cld
or
pop
jbe
sub
mov
xchg
aad
push
push
cmp
jns,pt
aas
repz
ret
jbe
cmp
adc
ret
pop
fistps
pop
test
fwait
jb
shlb
lods
shll
scas
mov
sub
bound
outsb
ficoml
cmpsl
jmp
daa
sbbb
sbb
xchg
pushw
in
aas
out
cmpsl
pushf
ds
jmp
inc
cmp
imul
push
jle
mov
repnz
insb
pop
in
sahf
lods
or
cwtl
lds
imul
daa
xor
dec
pushf
shlb
cmp
adc
mov
fucom
outsl
test
pop
cld
mov
dec
cltd
sti
mov
or
sub
push
cli
or
mov
jg
sub
xor
and
xlat
ds
mov
adcl
cs
movsb
push
cmp
inc
adc
and
dec
push
lods
fildll
fmul
fs
sarl
rorb
out
ja
js
outsl
cmc
out
loope
mov
mov
repnz
test
stc
sub
adc
xor
sub
mov
cmp
es
sub
lahf
and
mov
mov
cmp
ja
jae
jp
add
pop
call
popa
adc
dec
xor
cmc
imul
loope
xchg
jg
inc
xor
inc
cmp
out
or
mov
in
xchg
push
xchg
sub
hlt
dec
xchg
scas
and
mov
repnz
jp
mov
sbb
adc
adc
in
andl
pop
sub
jae
add
xchg
xor
mull
aas
in
shl
fldl
or
addr16
cld
cmpsl
pop
mov
icebp
stos
pop
std
push
das
cli
xchg
xchg
arpl
shll
mov
xorb
add
push
aad
add
jo
outsl
pop
out
mov
cmpsb
repnz
mov
mov
addr16
loopne
inc
sbb
outsl
xor
fidivrs
dec
jl
out
mov
pop
stos
sbb
dec
stc
roll
lods
jmp
data16
inc
push
test
enter
scas
mov
jmp
pop
rclb
and
pop
mov
in
and
mov
sbb
push
hlt
stos
pop
push
xlat
jge
orb
lods
fsubrl
cld
or
addr16
or
bswap
sahf
jb
xchg
insb
loope
adc
and
rorl
xchg
jmp
push
gs
xor
add
loopne
inc
push
mov
push
aaa
sub
aaa
inc
ret
xor
or
or
mov
cmp
dec
fsubrl
lahf
add
cmp
xchg
ficoml
inc
lret
sahf
sbb
loopne
fs
sbb
outsb
xchg
mov
xchg
shlb
pop
push
jle
scas
fimuls
clc
mov
add
aaa
sbb
sbb
mov
mov
inc
push
icebp
cld
loopne
pushf
fcoms
add
loope
call
inc
scas
jnp
nop
jmp
jbe
ljmp
pushf
xchg
pop
xchg
aad
and
dec
pop
xchg
mov
mov
cmp
pop
lret
insb
jge
push
lret
mov
stc
scas
ret
push
add
fnstsw
out
lods
inc
mov
jnp
mov
push
jne
pop
inc
lret
adc
adc
mov
and
push
sbb
shll
sub
sbb
ja
ds
das
cltd
pop
arpl
mov
mov
xor
imul
mov
je
xchg
filds
cmp
jnp
jle
adc
xchg
test
fidivrl
sub
sub
or
mov
popa
mov
inc
or
jno
mov
popa
lret
or
pusha
lods
lahf
movsl
ret
mov
pusha
sbb
js
mov
xor
xchg
mov
shl
sub
ja
outsb
pop
mov
hlt
push
addr16
and
jne
adc
ljmp
pop
pop
mov
xchg
enter
inc
leave
ret
cmp
std
fmull
test
add
aam
stc
jecxz
dec
cmp
fmull
lahf
add
cmpsl
int
pop
inc
or
iret
bound
inc
mov
sub
pop
and
jmp
fs
cmpsl
push
mov
les
je
mov
int
int3
inc
lahf
push
je
stos
test
mov
sub
mov
sub
xchg
lret
jle
inc
frstor
jae
sysexit
mov
and
pop
nop
fiadds
and
mov
repnz
fsubrs
pop
or
cmpsl
sbb
cmpb
xchg
cmpsb
cli
inc
outsb
lahf
jnp
mov
loopne
and
pop
rcll
mov
ds
xlat
sbb
and
mov
and
jmp
jnp
std
xor
lea
sub
xor
shlb
inc
sub
pop
fisttpl
and
xor
push
pushf
jl
fs
cli
sbb
push
test
repnz
mov
callw
inc
jg
fcomps
jae
or
insb
out
into
out
adc
push
push
mov
arpl
pop
dec
je
fs
and
sbbb
xor
push
enter
scas
inc
or
mov
test
lret
in
or
pushf
pusha
dec
lret
cmp
mov
cmp
addl
aam
imull
or
xor
adc
dec
sahf
push
jns
mov
imul
mov
jecxz
subb
fcomp
test
mov
insb
push
xchg
addr16
sub
lea
inc
or
sub
mov
cmc
xor
adc
js
pop
adcl
iret
xchg
pop
les
rcl
push
test
mov
cmp
hlt
push
mov
clc
iret
and
test
pop
sarl
pop
jne
push
push
adc
cmp
mov
dec
ficoms
mov
push
jecxz
jbe
and
cmpsb
loop
fistl
push
xchg
push
out
popf
loopne
and
es
mov
mov
ret
scas
into
ja
lods
lock
stc
std
test
or
popa
call
sub
xchg
imul
or
imul
push
inc
repnz
push
dec
inc
shlb
xor
je
icebp
sahf
loopne
xor
mov
jns
pop
mov
push
sbb
cmc
test
fwait
pop
jns
es
les
xchg
cltd
repnz
hlt
sbb
cmp
pop
mov
rclb
ja
outsl
int3
pusha
rcll
shr
inc
xor
insl
popf
sbb
je
mov
int3
or
out
popa
jl
pop
dec
cmp
incl
pop
sub
lahf
pop
xor
pop
lahf
hlt
xchg
jbe
inc
adc
or
pusha
les
push
push
add
dec
cmp
and
flds
sub
das
jb
pop
dec
pop
dec
out
jno
xchg
enter
push
dec
ret
rcrb
movsb
sub
lea
lret
dec
or
inc
sub
push
sbb
pop
adc
into
loopne
inc
outsl
add
fimull
aaa
lret
sub
sbbl
dec
or
dec
inc
xchg
bound
lret
jbe
cmc
in
add
xorb
pop
lods
inc
shlb
or
dec
lods
mov
push
dec
sbb
push
push
jmp
test
out
loope
xor
pop
xchg
mov
sti
sbb
loop
cmp
jg
mov
mov
pushf
mov
pop
add
enter
data16
ljmp
xor
mov
out
dec
ffree
lods
ret
push
inc
inc
mov
adc
inc
dec
bound
push
xor
sbb
outsb
fdivrl
jl
cmc
push
mov
fcoml
xchg
popa
cli
sub
adc
push
push
ja
cmc
mov
nop
sbb
mov
lods
js
pop
divb
roll
inc
stos
dec
cwtl
ss
xor
int3
mov
sar
notl
add
lds
aas
dec
ja
pop
mov
lcall
adc
aaa
push
loop
push
outsb
std
out
aam
out
xor
mov
imul
push
mov
icebp
mov
test
iret
into
sarb
out
sbb
fmul
jae
jge
int3
push
sub
repz
inc
sbb
sub
aaa
mov
cli
jle
add
jno
es
pop
imulb
jge
stc
mov
fwait
push
cmp
jle
bound
push
xchg
fdivrs
push
std
xchg
mov
lock
dec
aaa
mov
mov
mov
jecxz
pop
pop
andb
shll
pop
ja
sbb
fwait
scas
xchg
outsb
cmpsb
data16
test
push
adc
ret
sub
xlat
and
dec
inc
insl
iret
insl
xchg
or
xor
aas
mov
xor
out
fnsave
ffree
push
sbb
in
mov
lods
jle
mov
mov
loopne
and
dec
jb
push
xchg
test
xor
or
scas
loopne
sub
repnz
sbb
ds
imul
cwtl
ss
mov
mulb
repz
jnp
xchg
js
and
popa
mov
into
mov
test
xor
jne
cmpsb
inc
jne
testb
jnp
pop
mov
vpcomq
loopne
mov
aas
adc
pop
mov
movl
repnz
jno
sahf
scas
mov
mov
xor
xor
jb
imul
fwait
cltd
or
enter
mov
lods
test
or
xchg
xor
mov
mov
or
leave
jnp
inc
cmpsb
cmpsl
push
push
mov
pop
push
mov
negl
mov
aad
test
mov
fsubrs
xchg
filds
cmpsb
xor
cld
inc
pop
mov
jnp
imul
and
test
rcrl
sbb
rcll
xor
xor
add
jno
icebp
mov
fildl
mov
cmp
test
sbb
fiadds
frstor
mov
inc
je
sub
daa
stos
fld
je
daa
andl
add
inc
and
mov
mov
sub
rol
push
add
int3
loopne
jl
inc
les
call
es
adc
xchg
jne
adc
sbbl
in
notl
clc
cmp
ret
ja
and
call
jo
and
mov
push
mov
ds
dec
fwait
adc
test
xchg
ja
inc
adc
out
sbb
pushf
mov
mov
adc
mov
inc
xor
negl
add
and
adc
insl
nop
xchg
rorl
std
mov
ret
out
pop
mov
cmp
out
shll
mov
cmpsb
inc
sub
inc
jmp
je
xchg
add
mov
subl
inc
mov
xor
jecxz
xor
je
sti
add
inc
and
aad
jne
inc
mov
mov
outsl
inc
pop
rcll
push
xor
cmp
aad
xchg
add
pushf
xchg
mov
mov
rcl
mov
or
lods
ja
push
xchg
push
push
mov
leave
jb
ds
imul
ds
outsl
hlt
mov
aas
jo
mov
loopne
mov
fcomps
pop
and
cs
stc
sub
or
fistpl
outsl
mov
cmp
scas
push
pop
cli
fistpll
subb
mov
outsl
xor
popa
fbld
pop
jl
add
sbb
add
enter
in
push
gs
into
out
xlat
and
pusha
and
pushl
xchg
xlat
mov
insb
das
cs
imul
cmpsl
mov
mov
jg
fsubrs
xchg
out
ss
js
dec
in
mov
mov
or
lock
mov
pop
clc
mov
or
hlt
mov
nop
jmp
movsl
jle
in
add
push
adc
imul
pop
cwtl
imul
push
loopne
pmuludq
pop
leave
mov
or
push
fildll
mov
xchg
sahf
push
shrl
push
or
push
enter
mov
stos
aad
pop
push
push
mov
outsb
adc
addr16
fwait
mov
push
mov
adc
inc
cmc
or
xor
popa
push
out
mov
in
push
jbe
in
movsl
push
xchg
xor
inc
mov
ja
mov
add
xor
fiaddl
loop
dec
dec
sub
inc
in
pop
lcall
leave
scas
pop
iret
loop
xchg
int
ds
mov
cmp
jg
add
outsl
repz
and
iret
lret
imul
jo
or
and
mov
xchg
outsb
test
sbb
pusha
inc
loope
pop
fdivrl
shr
mov
insb
mov
adc
cli
aad
dec
inc
or
dec
sbb
inc
addl
repnz
les
pop
pop
ja
lock
and
roll
push
push
movl
add
add
inc
movsl
shlb
test
pop
repnz
inc
ss
jecxz
movsl
sub
je
push
mov
dec
xorl
push
insb
dec
cmp
adc
inc
loopne
xchg
jo
sbb
dec
aaa
mov
jle
in
imul
icebp
cmp
inc
insb
dec
dec
fsubrs
out
mov
mov
popa
sarb
jge
adc
popf
iret
movsb
and
mov
mov
inc
cltd
sbb
ss
xchg
aam
mov
shll
mov
stos
adc
jo
sar
bound
lock
outsl
sarb
cs
fildll
jo
push
mov
sbb
mov
cmp
sub
js
insl
push
pop
xchg
das
pop
jae
add
cs
push
call
cmpsl
in
push
out
cli
xor
rcll
movsb
mov
lret
test
iret
and
cltd
jbe
in
sbb
out
mov
cmp
jg
or
push
or
shl
add
imulb
xor
call
inc
sub
mov
loopne
mov
into
lock
mov
popf
in
mov
orb
clc
cwtl
xchg
mov
add
and
mov
outsl
arpl
mov
je
repz
or
es
fnstenv
and
jbe
jl
cmc
cmpsb
dec
pop
sbb
rorl
pop
mov
jno
loop
xchg
jl
push
jb
jb
pop
fisubrl
popf
xchg
leave
and
adc
bnd
incl
and
stos
inc
std
pusha
int
movsl
cmp
dec
cs
test
mov
push
test
movsl
fbld
mov
hlt
test
icebp
jbe
inc
pop
sbb
clc
mov
aam
dec
cld
aad
mov
cs
test
push
adc
push
popf
int3
lret
rorb
popl
movsb
jge
jecxz
aam
xchg
sbb
xchg
subb
out
push
jl
mov
movsl
or
shlb
les
and
cmp
inc
pop
nop
dec
mov
and
mov
shlb
rcrl
rcr
mov
adc
mov
test
push
cmc
jns
std
xchg
stc
mov
push
ljmp
and
iret
cmc
scas
or
jl
pop
daa
pop
cld
popa
inc
bound
call
add
lahf
loop
jg
in
and
xchg
pop
out
test
cmp
cmp
inc
jp
adc
xchg
daa
add
cmc
jns
mov
fwait
jmp
or
dec
int3
out
xlat
adc
fsubl
and
xor
mov
rolb
pop
cwtl
repnz
jp
pop
fsubl
stos
fwait
jne
push
pop
push
xchg
jge
dec
int3
jge
jle
mov
jge
daa
lahf
xchg
cmp
cmpb
jbe
inc
mov
dec
xchg
mov
push
push
pop
mov
sti
cmp
mov
lods
dec
mov
inc
mov
inc
add
bound
inc
pop
adc
sbbb
jne
ret
aas
dec
jne
and
fisttpll
in
add
jo
inc
inc
pop
inc
pop
out
xchg
pusha
icebp
pop
xor
out
out
xchg
jo
mov
sub
jbe
loop
pop
mov
xchg
push
sbb
dec
jecxz
cmp
mov
in
popf
inc
push
push
movsl
inc
stc
mov
aam
repz
in
cltd
roll
lret
fildll
rcll
aaa
adc
hlt
mov
pop
xchg
sbb
sub
test
int3
push
outsb
push
adc
pusha
mov
rolb
sub
js
icebp
mov
dec
or
fstps
mov
cmp
xor
inc
arpl
mov
jp
jb
adc
popf
add
dec
movsb
push
cmp
mov
mov
xchg
in
loopne
inc
dec
jno
movsb
in
es
fisttps
jae
xchg
jno
cmp
popa
mov
in
push
jae
mov
lods
call
sub
mov
fwait
inc
pop
comiss
xor
pop
ss
mov
mov
sahf
xchg
or
push
or
loopne
ret
xor
push
cld
out
imul
cmp
xor
xchg
jecxz
cmc
pop
fildl
insl
or
jnp
adcb
repz
ss
dec
aad
in
push
push
sbb
daa
push
idivl
xchg
cmp
sbb
mov
xchg
jnp
sub
or
pushf
jle
jne
int
adc
sbb
loop
mov
shll
jbe
mov
xchg
xchg
pop
xchg
pop
mov
xor
out
sub
xchg
pop
or
mov
adc
pop
jno
orb
or
mov
test
push
jnp
pop
aas
addr16
cmpb
subl
das
lds
fimuls
jae
lea
jb
add
mov
cmp
in
movsl
push
xchg
ret
addr16
insb
mov
inc
ficomps
push
mov
out
push
xor
outsb
sub
stos
lock
ds
test
add
fwait
adc
lds
sbb
cltd
cmp
xchg
lea
in
js
sbb
push
repz
fnsave
test
mov
arpl
dec
data16
pop
data16
outsl
mov
sbb
sub
out
inc
jno
imulb
inc
sub
out
lret
or
xchg
jbe
fnsave
pusha
mov
xchg
dec
test
fwait
xor
sahf
sbb
xchg
push
scas
or
mov
js
lods
repnz
adc
jge
jns
mov
das
sti
sbb
lret
les
mov
adc
dec
dec
adcl
scas
mov
es
fisubl
adc
mov
mov
sbb
js
dec
loope
push
test
ds
xor
sub
lret
jge
or
push
dec
lahf
outsb
hlt
icebp
test
fnstenv
sub
mov
test
aad
mov
push
dec
cwtl
and
and
add
in
pop
inc
push
inc
outsl
push
jecxz
popf
xchg
cwtl
lock
or
push
dec
mov
dec
xchg
mov
ret
push
loop
loopne
add
insb
movl
mov
xchg
js
js
dec
dec
sarb
fs
mov
cmp
jmp
mov
inc
lds
push
cmp
in
inc
jle
cli
sar
cmp
fstps
js
sbb
xchg
pop
repz
push
cltd
loope
stos
push
enter
dec
outsb
lcall
mov
lds
filds
in
enter
mov
imul
xchg
mov
add
repz
inc
inc
xchg
inc
cmp
push
inc
or
xchg
into
cmp
hlt
sub
xor
pusha
mov
push
in
pop
mov
out
fists
or
dec
pop
lock
adc
dec
int
mov
lcall
pop
inc
pushf
pop
dec
adc
mov
repz
leave
jmp
ljmp
test
clc
lds
lahf
mov
xchg
inc
push
xchg
mov
lods
mov
or
fwait
cld
scas
mov
xchg
lcall
fldenv
in
cmp
inc
inc
ljmp
mov
inc
sbb
push
mov
add
mov
mov
or
orb
dec
loope
stc
pop
mov
jbe
jo
pop
jg
ds
inc
adc
sub
loop
and
in
cltd
push
outsl
add
stos
out
push
jb
sbb
mov
lea
cltd
xchg
and
mov
add
arpl
jmp
div
scas
loope
nop
aas
sbb
out
leave
jns
cmp
push
int
add
popa
outsb
add
push
ficoml
mov
test
mov
adc
mov
pop
mov
aas
dec
loope
icebp
and
sub
lods
out
add
adc
loop
es
push
fiaddl
andl
out
adc
xchg
mov
pop
jmp
clc
fs
jg
and
or
out
sarb
and
popf
in
mov
mov
in
aas
or
movsb
lahf
xchg
sbb
xchg
adc
outsb
adc
int
cmp
jp
rorb
std
outsl
or
xchg
jmp
push
and
xor
xchg
mov
cltd
cmp
push
jle
icebp
pop
lds
sub
pop
push
sub
lods
add
hlt
testb
gs
push
out
push
adc
negl
lret
std
cmp
adc
pop
bound
out
out
push
mov
sbb
xchg
aam
sbb
jmp
lcall
sub
mov
adc
mov
mov
bound
lret
aas
or
cmpsl
mov
test
adc
mov
mov
dec
inc
jle
icebp
stos
jno
pop
inc
ret
rcr
sbb
sbb
lret
cli
pop
add
cmc
fcmovnu
xor
js
ds
xor
mov
xchg
lods
cmp
pop
sub
jns
std
das
lea
xchg
into
adc
xchg
sar
mov
sbb
js
mov
push
xchg
dec
jl
pushf
mov
test
cmp
fildl
push
mov
repz
xchg
movsl
sbb
mov
ds
cmp
mov
outsb
int3
xchg
outsl
repnz
movsb
inc
in
fucomi
adc
repz
xchg
push
inc
aam
add
out
sub
in
lock
gs
inc
pop
xchg
xorl
aam
xor
jne
mov
cmp
cmp
push
outsl
jg
idivl
sbb
and
xor
pop
movsl
jecxz
mov
adc
mov
jb
icebp
cmpsl
punpckldq
add
mov
les
mov
lods
out
pop
sahf
add
xchg
in
xchg
scas
xorl
rcl
dec
inc
push
aad
push
jbe
pushf
dec
lret
int
fmul
xor
std
outsl
pop
std
push
cmc
adc
jp
cmp
pop
mov
and
iret
scas
fisubrs
aad
mov
dec
mov
sarl
insl
out
movsbl
inc
sbb
repnz
movsl
in
and
inc
mov
out
add
add
rcll
mov
dec
out
es
push
fistl
arpl
nop
data16
add
mov
mov
and
aas
xchg
scas
gs
int3
jl
cmp
sbb
mov
inc
push
insb
sbb
xchg
hlt
push
or
mov
imul
add
adc
pushf
js
dec
lcall
cmpsl
mov
cmp
xchg
mov
fwait
or
cld
lea
stos
mov
inc
orb
decl
ja
inc
mov
and
lcall
push
add
inc
daa
push
mov
mov
cmp
mov
lds
lock
push
push
popa
dec
inc
fcmovb
mov
iret
lea
ss
enter
xor
pop
jo
cld
inc
jg
lds
xlat
mov
add
filds
nop
lret
mov
jmp
jecxz
fstpt
movsl
push
add
xchg
dec
jle
cmp
cmp
mov
sti
mov
inc
dec
sub
jo
frstor
adc
sbb
mov
mov
mov
bound
fadd
sub
js
mov
lcall
or
xor
push
cmp
mov
push
or
mov
jge
mov
xchg
pop
xor
lods
arpl
sbb
add
ljmp
xchg
mov
dec
xchg
je
mov
add
test
and
pop
dec
cmpsb
imul
shll
mov
iret
and
fnsave
and
mov
xchg
pop
mov
mov
dec
pop
mov
cld
sahf
adc
dec
jp
and
out
dec
xor
xchg
push
add
push
sbb
sub
cltd
loope
int
xor
int
add
cmc
jecxz
mov
pop
inc
mov
push
fdivs
add
mov
adc
jg
push
dec
int3
inc
icebp
dec
dec
lahf
pop
push
test
cwtl
adc
ret
int3
das
shll
cmc
inc
xor
jp
mov
icebp
jecxz
xor
cld
mov
mov
in
rcll
cmpsl
dec
dec
sbb
call
pop
in
daa
dec
testb
pop
call
lods
sub
addr16
fscale
inc
push
mov
insb
sbb
xchg
add
push
pop
jg
xlat
dec
jno
cmp
jecxz
mov
loopne
jb
mov
jmp
arpl
inc
push
xchg
mov
xchg
jecxz
sbb
xor
fwait
lods
add
pop
mov
xchg
div
fnstsw
jmp
jno
stc
add
pop
xor
xor
mov
pop
arpl
mov
sub
movl
in
mov
mov
ret
adc
xchg
pop
mov
adc
jnp
and
mov
arpl
xchg
cwtl
icebp
mov
or
js
cmc
daa
mov
test
les
outsb
inc
scas
push
adc
push
mulb
insb
fmuls
lock
shr
sbb
xor
imulb
jmp
mov
fwait
lock
add
dec
sub
jbe
repz
xor
in
push
jg
fldt
jl
cmp
xchg
movsl
das
adc
mov
orb
lds
into
jl
pushf
xchg
scas
dec
aas
inc
js
ficoms
adc
loop
sub
xchg
jecxz
pop
mov
mov
repz
sub
dec
pop
inc
in
shlb
sti
push
push
pop
or
scas
pop
xor
aaa
mov
sarl
pop
aam
mov
rcrb
and
imul
cmp
aad
xchg
sbb
test
sahf
mov
xchg
lods
xchg
cwtl
pop
ljmp
stos
shl
lcall
lahf
mov
cwtl
add
stc
cmp
jmp
mov
into
int
in
mov
mov
push
lods
jb
sbb
and
xor
shll
lea
lea
adc
cmp
mov
fs
adc
addr16
lods
and
in
pop
cmpsl
sub
mov
sbb
mov
push
sbb
stc
dec
jne
fcomp
xchg
in
cmp
pop
repz
lock
xchg
shl
lods
sbb
paddb
sub
sbb
dec
out
xchg
orl
and
inc
or
pop
adc
rorb
in
adc
subb
jle
pop
sahf
aaa
cmpsb
dec
push
outsl
or
fstp
leave
hlt
jp
jo
sub
and
jp
cmc
jb
xor
cmpsl
jbe
hlt
inc
sbb
cltd
and
aaa
jmp
mov
push
psubq
lret
mov
mov
xchg
lahf
push
sbb
xchg
jl
and
dec
xor
xchg
or
jmp
mov
icebp
ds
xor
jp
jp
sahf
loope
jae
xor
dec
ds
sub
mov
shl
movsl
popf
mov
je
fstl
icebp
aad
xor
cmp
movsl
in
mov
mov
and
xchg
sub
jbe
lret
mov
sbb
mov
adc
jb
mov
and
ss
push
xchg
fwait
lea
imul
cmc
xchg
or
sbb
cmp
sahf
aaa
data16
movsb
shr
xchg
js
mov
outsl
outsb
jae
ja
add
jge
push
and
jno
sarl
lods
pop
xor
pop
sbb
aas
hlt
cmp
pop
jb
loope
mov
jae
mov
hlt
mov
pop
sarl
jge
sub
adc
in
mov
cmc
subl
push
fidivs
and
jmp
mov
inc
jnp
dec
mov
repz
je
inc
mov
pop
mov
mov
push
ret
nop
pop
daa
adc
cs
mov
adc
loopne
add
cmp
push
dec
sub
push
fdivrs
dec
sarl
cmp
pop
js
mov
jle
xchg
or
outsb
les
adc
sbb
xchg
mov
and
mov
mov
and
fstpl
push
sub
leave
int3
pop
jg
push
push
push
rol
not
and
sub
dec
dec
and
and
shrb
pusha
mov
sbb
dec
fisubs
push
jns
pusha
ljmp
enter
pop
stc
jbe
bound
push
movl
and
pop
inc
jb
aad
inc
pop
jle
or
xchg
mov
cmp
cltd
fsubrs
pop
cltd
jno
outsl
push
and
clc
sub
in
in
push
cmp
mov
xlat
fstpt
mov
mov
rorb
sub
in
jmp
insl
lods
setno
pop
push
shlb
into
push
imul
insb
jg
mov
cli
dec
cltd
dec
sbb
jo
mov
push
mov
lock
xchg
mov
xchg
cmpsl
mov
sbb
mov
sti
mov
sti
dec
sbb
push
mov
movsl
mov
lea
lcall
inc
pop
hlt
xor
idivl
sbb
dec
lret
loope
out
lret
mov
xor
sbb
pop
jge
hlt
add
ret
bound
sub
les
divps
jp
aaa
adc
cltd
orb
add
arpl
cmp
mov
je
mov
sti
js
or
les
add
aad
mov
cmpsl
push
dec
aam
inc
sub
mov
mov
cltd
mov
insl
push
cs
divb
jne
sbb
lret
adc
mov
xorl
aam
push
mov
pop
mov
mov
hlt
push
je
adc
leave
imul
fmul
sub
cmpsl
add
bound
xor
adc
xor
pop
add
mov
arpl
add
mulb
cmpb
inc
dec
pop
mov
adc
rolb
into
add
or
or
jb
inc
es
stos
test
aad
add
xor
push
cli
push
xor
adcb
inc
icebp
mov
pop
mov
xchg
fisubs
mov
dec
test
pop
fimull
push
movsl
xchg
in
push
lahf
lcall
stos
xor
call
adc
cmpsb
push
pop
divl
scas
dec
in
out
mov
jge
cmp
ds
cmp
scas
and
cwtl
cmp
mov
jle
mov
js
add
jno
loop
fucomip
xchg
pop
jns
inc
incl
xchg
mov
cmp
mov
je
xchg
jnp
cmc
mov
push
out
inc
add
aam
insb
dec
pusha
xor
push
sahf
inc
rorb
aas
cld
cltd
loopne
xchg
xchg
and
ffree
xor
sbb
fcomps
mov
mov
call
call
mov
cmp
shr
nop
lods
push
lcall
or
gs
lods
add
inc
std
mov
out
sub
mov
jbe
dec
je
mov
push
ja
rorl
insb
xor
mov
in
cld
mov
sub
xor
mov
movsb
dec
fadds
cmpsl
push
cmp
add
fucompp
jge
cli
inc
push
pop
or
xor
mov
jb
adc
sbb
push
sarl
dec
jno
pop
loope
mov
jle
pop
add
repz
daa
cld
add
xchg
js
inc
jecxz
mov
insb
xchg
xchg
jb
sahf
xchg
adc
inc
dec
mov
and
push
push
push
xchg
jns
and
xor
test
outsb
dec
hlt
loopne
outsl
pusha
pop
and
pop
dec
sbb
out
pop
insl
mov
push
subl
inc
dec
test
sbb
mov
sub
pop
leave
push
test
cvtdq2ps
and
mov
movb
jae
popf
movsl
mov
cmp
cmp
aad
cmp
pop
fwait
cmpsb
bound
cmc
dec
sarl
shrb
aad
and
jge
xchg
js
add
push
push
js
roll
stos
shlb
fdivrl
and
dec
jnp
pop
enter
rorb
sub
and
xor
fmul
mov
filds
cld
add
cwtl
mov
or
sbb
sbb
aam
xor
repnz
cmpsb
or
inc
repnz
int
cmp
and
adcb
out
mov
sub
pushf
jne,pn
adc
insb
and
mov
aas
sub
sbb
minps
jbe
dec
dec
aam
jne
sbb
xor
sbb
xchg
xchg
cmp
jbe
adc
test
outsl
inc
repz
mov
repz
jae
loopne
inc
daa
mov
pop
push
imul
ficoms
or
jbe
xor
jae
test
nop
movsl
fisubs
call
jle
push
mov
inc
add
dec
dec
push
mov
test
dec
ret
loop
gs
lods
loope
xor
lock
cmp
pop
pushf
frstor
mov
icebp
mov
data16
and
inc
mov
pop
out
jne
imul
or
xchg
dec
push
inc
mov
cltd
jge
into
negb
cmc
pop
rorl
jp
js
fwait
in
je
imul
cld
nop
adcl
xchg
je
fnstenv
mov
fidivrl
lret
aad
arpl
pop
inc
enter
push
cmp
push
add
movsb
adc
pop
adc
in
inc
jns
pop
mov
mov
fisubs
imul
fmul
orb
and
test
jge
pop
ja
add
xor
test
xor
insl
cmp
inc
xchg
mov
cli
xor
fiaddl
mov
shll
push
stc
out
es
pop
push
imul
xchg
rolb
lds
aaa
xchg
ss
aas
jb
or
daa
into
dec
fdivrs
xchg
aaa
or
adc
sbb
int3
push
cmpsb
cwtl
test
jae
push
cmp
mov
data16
mov
add
pop
sub
loop
sbb
mov
dec
dec
mov
notb
adc
and
push
mov
jno
scas
shr
adc
out
shl
push
push
in
jne
rorb
aam
rcl
and
adc
aad
cld
dec
mov
jns
sbb
nop
mov
mov
movsb
lcall
mov
arpl
sti
push
dec
dec
gs
xor
out
pop
mulb
push
nop
loop
xchg
adc
xor
aaa
add
add
divps
fcoms
scas
call
mov
mov
sbb
fildl
adc
mov
adc
fisttps
jnp
sbb
or
add
mov
and
jae
sub
mov
cmp
jecxz
lret
add
mov
cltd
adc
xchg
mov
ret
mov
sub
mov
outsl
sbb
rorl
cs
mov
ret
in
cmc
pop
mov
shrl
adc
cmp
dec
pop
push
push
scas
insl
adc
inc
xchg
mov
aas
fcoms
dec
sbb
sub
push
fwait
clc
sub
add
cmp
jae
in
xor
mov
lret
ja
scas
xchg
or
xchg
mov
es
fldl
scas
lret
ret
dec
pusha
dec
lahf
adc
pop
lret
aam
mov
jno
fwait
rorl
jge
sub
outsl
data16
mov
fdivrs
push
in
addb
movsb
adc
mov
or
test
into
mov
stc
mov
sub
adc
xchg
lcall
cltd
jae
cli
sti
sbb
loope
test
jno
shrl
mov
ljmp
adc
roll
and
mov
loopne
sub
ror
movsb
xchg
cmp
xor
movsl
ret
cmpsb
fs
mov
std
ja
fnstsw
lcall
cmp
inc
sbbb
iret
arpl
imul
push
daa
lret
aad
pop
lahf
roll
lods
xchg
loope
mov
adc
fcomip
mov
jno
icebp
mov
xchg
xchg
pop
pop
lea
ret
sti
lahf
push
push
jmp
sub
js
push
iret
pop
mov
fwait
jle
and
loop
outsl
dec
in
lods
pop
aad
pop
sub
cmc
les
cltd
leave
inc
daa
aaa
clc
gs
jb
or
push
cmpb
insl
out
out
bound
mov
addl
jmp
in
fdiv
push
subb
mov
sbb
push
xchg
ficompl
mov
iret
out
es
ret
jp
sub
data16
insb
xchg
pop
pop
sbb
std
sbb
out
cmp
adc
jo
push
roll
inc
xlat
or
cmpb
jmp
imul
fildll
pop
add
out
leave
mov
aam
mov
pop
aad
daa
sbb
xchg
sub
lock
cmc
enter
pop
outsb
inc
pop
jno
sbb
xchg
leave
and
mov
lret
mov
rcrl
fisubrl
aad
cwtl
aas
xchg
or
or
lret
pop
xor
mov
pop
mov
jle
dec
mov
insl
fldl
inc
or
ja
inc
dec
mov
leave
aaa
les
or
sub
imul
cmp
jmp
mov
add
in
sub
jns
add
insl
push
mov
mov
mov
mov
jg
rcr
push
stc
and
add
insl
push
lret
mov
cmp
mov
outsl
pop
push
das
imul
out
pop
jg
adc
xor
fimull
cmp
outsb
cmp
jnp
loop
and
and
jp
pushf
lret
test
pushf
inc
popf
int
pop
in
mov
int3
xchg
push
inc
fs
inc
sub
ss
fdivl
jne
aas
testl
push
or
test
fildl
popf
mov
xchg
ret
jmp
pop
mov
push
cli
out
sti
mov
loopne
sarb
movsl
sahf
das
fdivr
add
mov
test
xchg
inc
cwtl
scas
rcrl
mov
pop
cmp
scas
pop
pushf
adc
lds
xor
outsb
mov
lock
dec
jl
imul
incb
sbb
dec
jno
leave
in
push
cmpsb
ljmp
in
rcll
in
in
subb
test
test
jg
shl
data16
adc
sub
in
cmp
push
jle
test
mov
push
in
xlat
sbb
popf
or
mov
stc
cltd
flds
gs
mov
sub
out
jns
sarb
jno
in
push
cmp
insb
lods
add
dec
ficomps
negb
ror
imulb
jg
lret
sahf
repnz
fstl
jns
pop
daa
jp
leave
pop
or
add
ror
dec
mov
mov
dec
cmp
mov
int3
iret
inc
push
cmp
lret
clc
jecxz
cmp
dec
dec
ss
mov
in
pop
adc
adc
je
xchg
sti
mov
cmp
gs
roll
fcomps
lcall
dec
inc
push
push
pop
or
push
adc
into
mov
and
sub
aaa
mov
mov
fimuls
push
mov
inc
iret
jae
xor
mov
nop
xchg
sahf
push
pop
jg
loop
jecxz
pop
mov
stos
test
xor
add
inc
sti
adc
scas
pop
test
jge
fidivrl
adc
jg
leave
push
fwait
les
sti
ja
in
jge
in
xor
cmp
inc
insl
jbe
std
mov
ljmp
or
jmp
xor
inc
push
mov
dec
mov
hlt
fs
adc
push
and
xchg
pushf
ljmp
fidivrl
sti
stos
in
test
lret
fwait
out
cmp
cmpsl
mov
out
lea
push
pop
pop
xchg
movsl
inc
push
xchg
in
je
out
inc
movsb
sbb
cmp
add
in
fsubp
add
cld
jecxz
push
subl
mov
shrb
adc
ss
or
sbb
lahf
mov
rorl
lahf
stos
fistps
dec
lcall
and
repz
pop
and
mov
fcoms
gs
in
addr16
xchg
mov
movsl
mov
add
addb
stos
inc
push
iret
fcom
lcall
js
insb
ljmp
xchg
sbb
add
xor
mov
mov
push
ret
jne
popf
or
jmp
test
xor
mov
pop
or
sbb
push
icebp
adc
cmp
ror
push
lret
out
push
cmc
scas
fwait
mov
fnstcw
adc
add
orl
das
mov
mov
dec
push
inc
push
cli
jmp
insb
cmpsb
ja
jl
pusha
push
in
jnp
shrb
mov
je
and
ja
into
jmp
mov
and
jp
cmpsb
iret
xchg
loopne
jae
adc
jp
pop
or
mov
mov
ljmp
xchg
xchg
stos
xor
push
or
les
mov
jp
jbe
jno
aas
imul
pop
mov
inc
or
movsl
call
loop
adc
pop
loope
cmp
scas
sub
sub
je
push
paddsw
xor
push
sar
jg
clc
sub
cwtl
loope
dec
sti
mov
das
pop
mov
mov
mov
les
loopne
jnp
mov
add
or
pop
out
movsb
sbb
sub
cltd
js
fadd
inc
pop
ss
push
mov
xchg
ja
dec
repnz
ljmp
rcll
mov
pop
in
xchg
mov
sbb
mov
pop
jge
ja
stos
mov
xchg
call
in
rorb
push
fdivr
or
mov
push
sbb
sub
jp
inc
mov
jmp
clc
pop
inc
sbb
sbb
add
mov
xchg
inc
mov
cmp
sub
out
adc
ficoms
mov
xor
mov
adc
push
popf
out
int
mov
mov
ljmp
je
ljmp
je
in
sbb
dec
out
andb
jmp
stc
fwait
ret
ss
clc
lds
jge
cmp
cwtl
mov
jno
mov
cs
out
popf
cmp
pushf
std
pop
ret
cmc
xchg
sbb
and
mov
mov
imul
fnstsw
add
mov
movsb
add
and
aas
outsb
sahf
xchg
lea
inc
and
arpl
out
jno
and
mov
xchg
shrb
mov
popf
repnz
dec
lock
adc
aas
lcall
int3
data16
je
xor
cld
icebp
pop
push
jno
xor
loop
mov
out
cmc
xor
repnz
and
cwtl
ja
adc
call
scas
in
test
or
push
or
xlat
mov
scas
shlb
fstps
inc
xchg
push
mov
fildl
ljmp
mov
xchg
cltd
inc
or
ret
ja
inc
add
addl
mov
lret
movb
int3
jae
ud2
mov
scas
out
fidivrs
in
mov
hlt
clc
jecxz
outsb
insb
cs
xlat
push
sarl
xor
popf
js
mov
xchg
pop
outsb
dec
push
add
push
pop
cli
mov
jl
aam
inc
jg
push
mull
push
stos
xchg
arpl
into
mov
cwtl
sub
les
jbe
cmp
mov
push
push
movsl
and
and
in
mov
inc
mov
addr16
cmpsl
push
das
mov
sbb
lret
ljmp
cli
loop
mov
or
sub
fsts
cwtl
mov
dec
scas
int
push
mov
movb
call
into
mov
ljmp
pop
jne
pop
inc
cmpsb
sti
outsl
pop
pop
ret
dec
je
push
xchg
push
add
or
inc
pop
pop
or
mov
gs
imul
mov
push
lods
push
jb
fstl
addr16
lods
sahf
sbb
pop
mov
fstpl
sbb
cmp
lret
stc
cmc
sbb
sub
push
addr16
test
out
scas
ljmp
into
das
dec
daa
xor
test
dec
movsl
or
jbe
mov
imul
rcll
pop
pop
mov
mov
cmp
or
jnp
int
in
aas
jne
inc
pop
dec
adc
cmp
lods
mov
popf
mov
cmp
pop
sahf
xchg
jns
and
cmc
sbb
sarl
mov
mov
pop
and
pop
ja
xchg
lahf
pop
rcrb
push
mov
stos
push
jae
push
and
mov
push
mov
cmp
hlt
sti
inc
mov
pop
or
or
jns
jg
mov
xor
stos
inc
jno
sbb
mov
adcl
mov
add
jp
iret
sub
hlt
jp
and
int3
or
aaa
cmpsl
cmp
popa
daa
je
enter
loop
push
add
adc
clc
sub
mov
out
xor
mov
fidivl
fwait
das
and
add
dec
lods
sbbb
stc
pop
push
testb
mov
popa
test
andl
lods
and
sub
mov
icebp
stos
in
movsb
pop
mov
mov
ret
mov
adc
mov
lods
add
jnp
pop
sub
sub
sbb
scas
cmp
fidivs
or
incb
mov
push
mov
inc
cmpsb
test
xorb
xchg
pop
pushf
jle
clc
sbb
ja
std
xchg
lods
gs
sbb
push
jg
inc
outsb
or
les
in
orb
xor
add
das
dec
popl
std
negb
shrl
shll
mov
push
jecxz,pn
inc
mov
daa
js
in
aaa
xchg
lret
xor
jns
loope
cwtl
mov
loope
repz
cmpsb
push
mov
lods
xchg
dec
jne
divb
or
shrl
imul
mov
mov
dec
inc
adc
jmp
imul
int
movsl
push
cmp
rcrl
outsb
xor
inc
bound
inc
mov
mov
insb
jl
enter
inc
sti
das
inc
lahf
rcrb
mov
divl
mov
dec
cwtl
mov
stc
stc
loopne
cld
and
jg
into
jle
and
std
jmp
int3
int3
push
shll
orl
cld
in
fisttpl
cmp
xor
jns
mov
jnp
mov
stc
fidivrl
jbe
mov
xor
pop
in
mov
mov
ss
jp
shrb
ja
and
mov
inc
hlt
push
subb
mov
int
shr
xor
daa
xor
and
or
add
xchg
and
jae
cmp
cmp
test
push
adc
in
sbb
dec
dec
hlt
mov
mov
bound
cmp
ficoms
pusha
cmpsl
xchg
out
lods
je
jmp
xchg
xchg
cltd
mov
xlat
adc
mov
jo
xchg
test
ret
jo
loop
fists
out
inc
xchg
jge
mov
or
bound
cld
pop
sub
inc
ret
cmpsb
stos
inc
test
orl
cmp
call
inc
pop
int
dec
stc
push
mov
xor
mov
cltd
out
aaa
aam
pop
cwtl
into
mov
cmpsl
shlb
scas
mov
sahf
ljmp
jns
xchg
adc
add
dec
pusha
pop
cli
movsl
push
les
mov
popa
sbb
sbb
jecxz
or
dec
inc
les
call
lcall
shll
aam
inc
in
leave
add
lahf
mov
mov
fsubl
pop
jnp
ficompl
repnz
mov
inc
push
lods
test
jg
cmc
mov
cmp
or
or
add
lea
jle
cmc
mov
adcl
data16
jl
push
push
test
cwtl
les
jo
sbb
jg
fimull
hlt
movsl
adc
int
xchg
jbe
sbb
in
lret
adc
push
dec
sbb
and
xchg
cmp
loopne
das
fidivl
lret
loope
cmpsb
in
lret
pop
cmp
mov
inc
in
sub
mov
sbb
push
ret
xor
addr16
std
xchg
dec
mov
mov
sub
out
xchg
cmp
sbb
icebp
jnp
dec
dec
fldenv
lds
in
hlt
push
push
cmp
pop
mov
les
xchg
aad
pop
adc
mov
cmp
push
mov
push
xchg
mov
adc
aaa
andb
xchg
fs
dec
out
xchg
mov
popf
lods
das
cmpb
push
testb
pop
test
popf
inc
stos
mov
lock
int3
or
push
mov
mov
mov
lret
pop
shlb
jg
sbb
out
sbbl
xor
movsb
mov
adc
scas
adc
push
cmpsl
imul
repnz
ret
jae
clc
jle
es
gs
movsl
adc
pop
xor
or
outsb
sbb
push
add
lods
jmp
scas
fucomp
cmp
fadd
xchg
popl
pop
rep
mov
outsl
cs
dec
inc
dec
sbb
jmp
in
push
push
push
adc
or
sarl
ds
dec
cmp
inc
les
push
push
icebp
jp
sub
mov
pop
fistpl
dec
shlb
mov
mov
inc
inc
dec
jns
add
pop
cmpsl
sbb
jb
mov
mov
int3
xor
push
into
negl
xchg
adc
pop
jle
fsubl
push
inc
lds
jmp
adc
add
add
lock
divl
lds
or
jns
cmp
scas
fildl
lea
add
arpl
xchg
test
outsl
in
fldcw
push
add
jl
stos
test
sub
sub
push
jnp
add
in
mov
outsl
ret
pop
xchg
cmp
sbb
dec
add
add
sub
or
xor
jp
jle
loopne
add
into
sub
lds
jge
fsubrp
loope
cli
jnp
jae
xchg
xchg
jge
push
mov
fildl
icebp
outsl
loopne
and
shlb
das
pusha
scas
push
clc
hlt
data16
inc
jl
add
dec
cmp
cmp
mov
or
js
int3
inc
cld
gs
jp
or
into
js
fs
xchg
pop
mov
inc
test
repnz
out
sub
ds
addr16
pop
mov
mov
or
sub
divb
in
fmul
jge
bound
roll
movsl
dec
pop
gs
dec
sti
xlat
pop
or
adc
rol
jbe
ja
js
stc
leave
roll
decl
mov
lock
add
sub
dec
jle
push
ret
xchg
insb
rcl
into
sbb
mov
je
int
dec
mov
addr16
sbb
mov
mov
pop
test
pop
in
cwtl
cmp
addr16
add
lea
sahf
fstl
mov
addr16
mov
dec
filds
sbb
lcall
clc
cmp
mov
ret
iret
scas
cs
les
pop
mov
scas
add
mov
mov
or
pusha
sti
lret
mov
push
test
out
or
add
popf
sbbb
and
mov
stos
sbb
push
sbb
popa
cmpsb
cmc
sbb
addr16
pop
inc
ss
push
scas
xor
jb
dec
jno
sbb
shr
xchg
loop
sub
jnp
inc
cmpsl
ret
stos
xor
mov
or
pop
pop
xchg
inc
sbb
shrl
aam
xor
popa
out
cltd
adc
or
jg
add
push
inc
negb
repz
jb
addl
pop
stos
ffree
mov
mov
sub
sbb
bound
dec
cmp
je
mov
mov
xor
outsl
xorl
dec
fucomp
pusha
jmp
jnp
and
jns
repnz
xor
dec
pop
xlat
adc
push
movsb
push
adc
arpl
pop
lock
insl
add
push
mov
pop
ss
push
xchg
mov
popf
icebp
or
cmp
and
add
cmp
add
dec
stos
xchg
popa
sbb
outsl
inc
inc
pop
push
add
pop
imul
mov
jnp
test
or
and
jle
data16
sub
popa
ljmp
loope
cli
push
in
mov
or
cmp
insl
test
clc
insl
test
sub
push
or
pusha
test
sub
pop
repnz
lods
aaa
in
add
dec
jecxz
and
idivl
sub
sti
inc
mov
aad
add
out
cmp
push
mov
xor
es
popa
data16
nop
push
test
imul
inc
shll
bound
and
push
rolb
add
mov
fcoms
scas
pop
cwtl
mov
or
popa
sub
loope
and
popf
mov
idiv
jg
pop
cltd
sbb
or
jle
daa
add
jns
pop
hlt
mov
mov
jmp
mov
fsubr
movsb
call
stos
push
adc
xchg
aad
repnz
jno
mov
sub
mov
dec
pushw
repz
lock
cmpb
int3
cwtl
mov
fcoml
dec
jmp
cwtl
mov
inc
and
adc
xor
mov
push
mov
scas
inc
mul
arpl
out
out
insl
xor
iret
inc
inc
inc
add
adc
shlb
js
pop
movsl
jns
cld
mov
jle
pusha
testb
movaps
pop
lods
stos
push
repz
xchg
jecxz
sbb
push
loope
lock
xchg
cmovp
jle
and
adcl
fwait
xchg
ljmp
divl
stos
enter
in
rcll
addr16
dec
xchg
xchg
mov
adc
mov
hlt
movsl
mov
pop
int
and
pop
hlt
xor
and
cmp
outsb
jo
nop
sti
repnz
daa
mov
rcll
mov
int
test
shrb
push
pop
sbb
dec
xor
out
sbbb
enter
or
push
aam
inc
dec
adc
es
lea
loop
test
mov
mov
roll
nop
dec
or
js
fstl
inc
xchg
jmp
push
jnp
xlat
addr16
rolb
icebp
call
inc
loop
lcall
gs
das
jne
xchg
sbb
cwtl
lods
insl
adc
in
mov
ja
sbb
pop
nop
and
outsl
cmpsb
and
jle
testl
ss
dec
mull
jecxz
xor
lock
rcl
rcrl
aaa
jo
shlb
cwtl
lds
xor
sbb
mov
push
aas
enter
xorb
adc
cwtl
adc
mov
mov
push
shrl
or
or
jne
lret
or
dec
jae
fisubrs
mov
inc
jmp
and
into
cmp
and
test
add
push
xchg
xchg
lret
push
stos
cmp
test
lock
dec
cmp
sbb
je
loopne
inc
ret
sbb
arpl
dec
cmp
rorb
xchg
push
add
mov
adc
xchg
sub
pusha
int
push
stos
test
imul
test
or
jo
xchg
push
out
fs
pop
mov
sbb
stos
test
add
pushf
sub
xchg
divb
dec
fnsave
mov
popa
clc
pop
sbb
in
repnz
cmp
scas
jns
inc
and
test
inc
in
loopne
jle
xor
jne
iret
xor
add
xchg
jne
inc
clc
or
xlat
jp
addb
jmp
in
and
push
mov
adc
stos
mov
or
pop
out
in
out
pop
pushf
push
mov
jo
mov
in
pop
std
sub
mov
out
test
jg
jo
jb
mov
lea
mov
icebp
inc
xor
pop
imul
fstpt
mov
icebp
loopne
mov
and
imul
insl
fcmovnbe
add
das
adc
cmp
mov
scas
in
adc
xlat
gs
lods
outsl
jmp
popf
pop
cmpsl
out
mov
pop
fimull
insb
mov
shr
jp
aad
sbb
scas
enter
xchg
xor
lcall
jmp
sub
adc
lret
jno
jnp
jbe
dec
cmp
cmp
fucompp
push
shlb
jne
inc
pop
clc
fcmovu
and
push
jbe
jno
mov
and
shlb
sti
push
dec
pop
ljmp
jmp
mov
mov
dec
or
in
jg
xor
xchg
hlt
pop
sub
arpl
adc
push
arpl
leave
cmp
movsb
mull
dec
xlat
cmp
sub
cmp
jo
imul
xor
push
or
ret
mov
adc
inc
jno
scas
xor
inc
loope
fcoml
xor
jmp
mov
in
insb
sbb
fisttpl
ja
pop
jmp
fs
test
test
insb
mov
xor
jl
out
xor
push
pop
xor
inc
rorl
xchg
out
js
push
js
repz
fstpl
daa
jle
mov
jno
test
xchg
popf
push
pop
sub
js
test
sbb
pop
bound
movl
jae
add
mov
or
xchg
cmpsb
insb
jp
and
add
add
stc
imul
repnz
cmpsl
rolb
xor
dec
dec
jno
imul
sbb
or
sbb
pop
inc
sub
mov
fcomps
push
pop
mov
into
adc
or
push
mov
shl
cmp
cwtl
xchg
fnstcw
lods
inc
das
xchg
bound
jne
loope
sbb
pop
push
clc
jecxz
cld
pop
inc
sahf
daa
addr16
stos
jo
pop
pop
adc
push
lcall
mov
xchg
mov
add
sbb
stos
add
adc
inc
cs
cmp
xchg
push
shrl
dec
or
jae
dec
insl
mov
inc
ja
popf
lahf
insl
test
pop
mov
test
in
lods
push
mov
in
stc
adc
add
cli
rcrb
icebp
pop
lahf
or
leave
and
das
cltd
sub
outsb
adc
popa
scas
in
mov
pop
xor
add
test
aas
jns
pop
mov
cmp
sarl
mov
jae
mov
cs
out
rol
in
ffreep
push
daa
jnp
lahf
fs
insb
jg
mov
adc
test
or
sbb
inc
push
jecxz
lods
dec
xchg
out
mov
mov
pop
sub
cmpl
insb
fcoms
adc
cmp
or
aaa
jb
aaa
mov
sub
xchg
imul
pop
dec
arpl
popa
mov
lcall
xlat
out
cmp
lret
pop
repnz
or
out
push
roll
inc
scas
push
cmp
cmovle
mov
xchg
sub
psllq
sub
pop
cmp
call
stos
xchg
xor
mov
popa
enter
gs
jnp
dec
lods
scas
xchg
add
lret
push
cmp
loopne
in
add
adc
daa
sbb
jl
push
push
sti
pushf
daa
cmp
fs
repz
fs
xorb
fdivl
in
pop
xor
inc
dec
inc
sbb
dec
mov
push
cwtl
pushf
loopne
sub
sbb
pop
lods
sub
add
lock
cltd
out
insb
cld
pop
add
add
mov
dec
xor
xor
mov
lea
inc
stos
and
jecxz
je
or
leave
in
xchg
add
movsb
cmp
jecxz
jae
inc
icebp
add
fistl
iret
js
sbb
mov
lret
or
jbe
rcrb
insl
jle
push
sti
sub
xchg
cld
push
sahf
pop
mov
cwtl
jno
leave
jbe
rep
xchg
add
fmul
out
jns
pop
mov
aam
inc
mov
adc
cmpl
pop
test
mov
ljmp
lea
or
sub
roll
insb
adc
and
repz
push
mov
je
lahf
arpl
adc
mov
inc
repnz
cs
lret
cs
ds
push
adc
repz
mov
stos
fidivl
cld
vmovapd
popa
lcall
mov
xorl
or
dec
push
clc
mov
and
cmp
pop
in
adc
shr
sbb
push
xor
sub
sub
pop
in
scas
insb
fmull
pop
xor
.byte
mov
loop
