xor
clc
xor
stc
cmp
xorl
movb
xor
bt
test
xor
test
call
pusha
mov
mov
call
call
pushf
movl
jmp
call
jmp
pushf
pushl
lea
call
clc
pushf
cmpb
pushl
pushf
jmp
movsbl
mov
call
movb
xchg
mov
pushl
ret
add
setp
mov
mov
call
push
pushl
nop
pop
movzbw
mov
pop
pop
call
lea
bswap
pushl
mov
not
jmp
std
add
xchg
push
and
movsl
sti
shll
int
or
push
pusha
daa
dec
push
ffreep
test
movsl
dec
push
js
mov
jne
adc
cltd
pusha
xor
in
mov
movsl
mov
pop
clc
cmp
and
push
adc
adc
lock
cld
mov
frstor
dec
cmp
cmp
and
pop
xor
inc
pop
inc
add
loopne
jp
fucom
add
push
pushf
mov
dec
add
decb
xchg
loop
popa
loop
dec
aam
lcall
inc
pushl
pushf
push
movb
pushl
ret
xchg
pusha
pushl
call
call
pusha
pushf
popl
mov
xorl
call
cltd
and
xchg
push
and
xchg
loop
mov
lods
stos
fmull
adc
loop
mov
inc
movsb
mov
push
jb
push
jns
jecxz
push
adc
mov
je
dec
and
and
dec
mov
cmp
adc
in
inc
inc
minps
sub
dec
sub
dec
loopne
lahf
sbb
mov
cmpsb
fdivs
test
pushl
mov
pushl
mov
pushl
ret
pusha
movl
mov
mov
pushf
pushf
lea
jmp
push
lea
mov
mov
pushf
setb
not
mov
mov
call
lea
push
pushl
xchg
pushl
push
mov
pushl
ret
mov
and
testl
lods
repnz
sahf
mov
jp
mov
data16
or
lret
scas
cmp
or
test
aad
scas
mov
jnp
add
add
jmp
or
lods
pusha
cs
ljmp
dec
jns
out
cmp
add
dec
rorb
push
add
je
mov
and
and
in
outsl
mov
sbb
jae
mov
or
or
dec
call
mov
fisubl
mov
jmp
negb
mov
mov
and
arpl
ret
popa
pop
push
and
adc
sbb
push
in
mov
xor
das
pop
and
lcall
xor
sbb
mov
test
sub
push
aad
xchg
pop
nop
sbb
sbb
ja
fdivs
mov
or
jecxz
or
push
aaa
push
test
stc
wbinvd
jl
sbb
insl
pop
or
lds
sub
shll
pop
jg
arpl
pop
fdivs
cltd
out
jne
adc
outsl
clc
iret
push
sti
jp
je
adc
xor
loope
out
inc
sub
dec
xor
mov
adcb
jle
pop
pop
popa
adc
jl
jo
js
pop
inc
cmp
and
jo
pop
xor
or
and
fadds
adc
mov
rcrl
mov
ret
in
shlb
and
leave
stc
aam
cmp
mov
lods
jnp
insb
test
jmp
xor
hlt
fnstsw
dec
push
adc
cltd
xchg
mov
movsb
xchg
test
mov
nop
xlat
js
clc
add
jge
xchg
cmpsl
pop
push
movl
pushf
pushl
jmp
xchg
movb
pushl
ret
mov
call
jmp
call
lea
lea
jge
pushf
mov
push
pusha
movl
mov
pushf
pushf
pushl
jmp
pusha
movb
xchg
not
movzbw
movsbl
mov
call
call
das
repz
push
and
sub
dec
push
sbb
push
insb
repz
idivl
pop
pop
lds
leave
shr
nop
in
mov
lods
lahf
je,pn
xlat
mov
mov
mov
cld
jmp
out
out
adcb
fs
out
cli
cmp
inc
cmpsl
rorl
roll
outsb
push
push
cmpsb
and
inc
je
mov
in
leave
mov
sub
leave
xchg
xchg
and
ljmp
cmc
clc
xor
stc
clc
xor
bt
xorl
stc
xor
cmc
xor
push
stc
xor
movl
pushl
popf
mov
pushl
ret
mov
pusha
jmp
push
pusha
xchg
pushf
pushf
call
push
pushl
lea
jmp
mov
lea
jg
push
mov
jmp
fs
mov
out
fcmovnbe
xchg
fisubl
mov
imul
in
pop
dec
out
mov
scas
fadd
mov
cld
mov
ljmp
sub
xor
lcall
jmp
adc
fnstenv
mov
lods
jns
mov
rcrb
mov
imul
dec
adc
enter
inc
cmp
or
dec
cs
rclb
jae
dec
pop
xor
add
and
push
mov
sub
mov
sub
pop
cltd
or
enter
aaa
decl
subb
into
in
ss
daa
adcb
aaa
lea
hlt
push
aaa
adc
pop
popf
pop
adc
icebp
xchg
test
add
clc
push
pop
pop
popa
fcompl
inc
mov
dec
int
lahf
sar
stos
push
xchg
sub
mov
out
movsb
jle
inc
enter
xchg
mov
in
pop
mov
int
movsl
or
push
insb
xor
xor
cmp
cmpb
cmpsl
stc
and
adc
mov
hlt
adc
loopne
scas
jle
inc
pop
adc
in
pusha
xchg
inc
xchg
fsincos
mov
scas
stc
pop
adc
push
cmp
lahf
dec
daa
adc
insl
inc
insb
aas
push
sti
test
mov
in
mov
in
lret
ljmp
push
inc
xlat
les
not
mov
shl
into
push
mul
scas
std
cli
mov
fnsave
dec
jae
jns
jmp
lea
call
pusha
mov
movl
pushl
movb
pusha
movl
pushf
pushf
push
lea
jmp
movsbl
setns
mov
push
mov
push
lea
push
jmp
not
mov
push
mov
call
call
movsbw
movsbw
movzbl
nop
bswap
pushf
mov
pop
pop
call
not
movsbw
jmp
pusha
pushf
mov
not
mov
bswap
lea
call
out
sbbb
test
cmpl
cmp
je
mov
shl
mov
mov
mov
hlt
movsl
jb
icebp
aad
xchg
add
lcall
xlat
xchg
inc
cld
test
jge
fisttpll
xchg
test
repz
aaa
clc
lea
pop
lret
jmp
mov
add
mov
orb
bound
dec
or
adc
imulb
jle
cmc
ljmp
popa
dec
sub
push
mov
and
fwait
cmp
lcall
push
push
pusha
jmp
rep
movsbw
call
xor
cmc
pusha
xorl
pushf
xor
movw
xor
pusha
pushf
xor
jmp
jmp
push
push
jmp
lea
je
sete
lea
not
mov
pusha
call
jmp
xor
movb
pushl
popf
pushf
pushl
ret
pushf
movb
jmp
jmp
mov
lea
call
push
lea
pusha
mov
jmp
lea
mov
call
lea
pushf
pushl
call
pushf
jmp
jmp
call
call
movw
movl
jmp
mov
movl
push
lea
jmp
fwait
push
stos
cltd
push
and
lds
push
pop
int3
out
jae
mov
int
inc
adc
inc
int3
mov
repz
frstor
and
jae
lret
inc
bound
lds
cmp
sub
dec
pop
mov
fildl
inc
arpl
imul
add
ds
repnz
jae
cmp
mov
add
dec
pop
ds
hlt
cmpsl
mov
push
mov
out
jae
xor
or
popf
mov
jnp
jo
xchg
add
in
mov
hlt
mov
mov
ds
xchg
xor
add
hlt
imul
aas
adc
xchg
cwtl
dec
shr
xchg
jnp
ds
or
adc
dec
xor
jl
inc
jmp
insb
and
in
push
xchg
movw
pushl
ret
pushl
popf
movb
pushl
ret
pusha
mov
mov
push
mov
push
lea
jo
pushf
push
mov
mov
call
out
and
cwtl
push
and
in
mov
xchg
cmp
cmovno
adc
lahf
jne
jb
cmp
jns
dec
daa
inc
xor
inc
mov
push
pop
push
icebp
cmp
jl
inc
adc
dec
mov
pop
mov
push
adc
fnstcw
gs
loope
push
ss
xor
xor
xor
mov
xchg
shlb
sub
clc
ds
xor
out
pushf
in
pop
iret
xlat
xchg
mov
pop
rcll
cli
movsb
leave
xchg
lcall
movsl
mov
js
jle
aad
movsb
ret
outsl
pusha
nop
jmp
pusha
jmp
inc
mov
push
and
repnz
mov
jg
fmuls
negb
mov
adc
outsl
test
add
adc
outsb
xor
arpl
inc
aaa
inc
cmc
cltd
push
or
sub
subl
mov
xchg
cmc
lods
loopne
fisttps
mov
lahf
dec
dec
dec
sbb
mov
fldl
scas
inc
sub
or
addr16
ret
in
mov
pop
shlb
subl
mov
mov
hlt
pushf
aad
mov
pushf
xor
xchg
loopne
mov
hlt
scas
jae
push
add
movsl
and
ds
ficoms
push
mov
call
sub
ret
sbb
or
cmp
cmp
mov
in
lret
loop
rorl
and
push
aas
pop
adc
jns
insl
mov
cmp
mov
andl
inc
out
push
mov
lret
sub
outsb
js
stos
test
jns
aaa
dec
in
jle
mov
mov
adc
or
or
jns
jno
cmc
or
out
aam
inc
mov
std
mov
push
lock
push
inc
in
add
insl
inc
test
jl
in
stos
leave
mov
jecxz
pop
test
push
adc
iret
mov
enter
clc
xchg
les
cmp
loope
lea
mov
call
call
cmp
pop
push
add
xor
popf
push
and
pushf
loop
scas
test
clc
addr16
test
lods
inc
sub
jb
sahf
jmp
in
mov
mov
dec
mov
in
inc
repz
popa
push
inc
int3
stos
mov
xorl
sbb
add
rcll
cs
lret
fmuls
movsl
cmp
pop
sub
out
push
inc
loope
pushf
loope
jp
orl
lds
pop
icebp
and
mov
data16
push
pop
sub
dec
cmp
fs
fwait
push
ljmp
outsb
sarb
lods
dec
pop
sbb
mov
popa
pop
dec
fldenv
lods
dec
xlat
and
dec
xor
mov
in
imul
mov
jmp
sahf
scas
mov
xor
mov
fnsave
or
and
dec
pop
and
or
mov
rol
or
je
pushf
pusha
pushf
mov
call
pop
mov
movsbw
mov
movsbl
pop
lea
not
not
mov
setae
not
movzbw
mov
pushf
push
pushf
pushf
pushl
ret
data16
daa
pushf
push
and
inc
jo
and
xor
sub
cmp
hlt
fstpl
lds
imul
cld
and
in
inc
testl
sar
jnp
inc
push
imul
dec
push
jns
sbb
sbb
pushf
push
and
je,pn
jo
cmp
jb
and
xor
push
push
cmc
cmc
fs
sub
mov
fcoml
decb
out
dec
outsb
fisttpl
stos
test
jecxz
mov
mov
fwait
enter
insb
jg
movsl
bound
mov
cmpsl
and
xlat
mov
push
shlb
pop
mov
pop
aaa
lret
adc
push
cli
xlat
mov
or
jb
je
jp
push
insb
cmc
jne
cs
shl
scas
out
add
daa
sbb
fsubs
sarb
mov
dec
xchg
jle
push
test
shlb
gs
jnp
mov
cmp
adcb
insl
aas
scas
jae
scas
xchg
sahf
xchg
mov
mov
scas
ljmp
add
sub
loop
xor
push
je
add
out
leave
out
imul
push
add
push
and
daa
popa
sbb
movsb
int
push
lcall
xchg
or
push
push
rclb
aad
push
iret
lea
mov
pushf
lea
movb
movb
xchg
mov
movb
pushl
ret
pushf
mov
nop
push
xchg
lea
pushf
pop
mov
call
lea
push
pushf
lea
jp
xchg
pushf
pushf
pushl
ret
cmp
xor
clc
bt
xor
pushl
xor
bt
xor
cmc
push
xorl
cmp
xor
cmc
test
xor
bt
xor
pusha
pushl
popf
pushf
pushf
pushl
ret
push
mov
jmp
mov
and
push
pop
jne
dec
inc
xor
and
add
adc
mov
das
nop
cmpsl
icebp
fwait
mov
lret
in
mov
pop
lahf
and
out
aaa
mov
add
sahf
ds
fimull
mov
inc
adc
mov
in
scas
outsb
add
push
mov
int3
add
mov
nop
in
lds
adc
pusha
addr16
es
cmp
dec
dec
sbb
movsl
es
lock
jmp
scas
pushf
jmp
sbb
ret
adcl
xchg
mov
stos
mov
pusha
aad
stc
lea
fimuls
sbb
xchg
clc
or
outsl
sub
mov
in
cmpsb
imul
xchg
push
into
jecxz
loop
popf
daa
pop
or
les
in
shl
pushf
fldl
mov
cltd
out
sarb
and
fwait
cld
pusha
jmp
mov
mov
mov
pusha
jmp
lea
call
rdtsc
mov
not
push
mov
pop
lea
bswap
pushf
pop
mov
jmp
movzbw
movsbw
movsbw
mov
call
mov
movsbw
mov
mov
pushl
jmp
xor
clc
xor
stc
xor
call
pusha
mov
jmp
push
pushf
popl
cmp
xor
cmp
jmp
jmp
pushf
movw
xchg
movb
pushf
pushf
mov
pushl
ret
ror
xchg
mov
bt
rcr
mov
pop
lea
clc
call
movb
mov
jmp
movsl
in
pop
adcb
pop
jno
jne
or
pop
insl
xor
loopne
movsl
aaa
pop
mov
subl
pop
push
mov
test
dec
push
rcll
add
ss
adc
sbb
out
imul
fidivrl
pushl
or
jge
inc
pop
sbb
push
dec
xor
dec
cli
dec
lretw
sbb
insl
xchg
xor
add
dec
adc
dec
mov
pop
xchg
mov
fsubl
jo
xlat
pusha
in
mov
aaa
jge
popa
adc
jmp
dec
dec
cmp
mov
sbb
lock
je
xor
pop
leave
sbb
das
movsb
add
push
mov
xchg
mov
inc
sub
pop
mov
fnstenv
lds
cmp
aas
mov
jae
adc
inc
sarl
inc
sub
mov
ret
lea
fnsave
outsl
decl
add
mov
movw
pushf
call
jmp
movl
pushf
mov
mov
call
pushf
jmp
pusha
lea
call
lea
jle
push
pushf
lea
pushf
jmp
pushf
movl
jmp
pushf
call
pushf
pushl
mov
movl
push
push
movb
lea
jmp
setg
nop
movzbw
pop
call
movl
mov
pushf
mov
pushf
movl
jmp
xchg
pushl
pushf
mov
pushl
ret
jmp
cltd
nop
arpl
cmpsb
fsubrs
fsubrl
push
fwait
push
adc
inc
sbb
dec
dec
pop
jno
push
cmp
mov
and
adc
xchg
xchg
sti
add
clc
and
cmp
dec
out
or
in
adc
iret
pop
popf
pop
add
xchg
mov
stos
aam
in
xchg
mov
daa
xchg
and
or
adc
add
negb
movsb
test
adc
lock
in
int3
lods
add
scas
test
xchg
iret
lock
dec
sti
nop
mov
test
mov
pushf
xor
movb
xor
jmp
inc
dec
mov
sbb
push
sub
mov
pop
sub
popf
iret
leave
push
out
mov
jl
lods
inc
jecxz
xchg
ljmp
test
xlat
sub
data16
sbb
xor
adc
push
mov
inc
mov
fwait
loope
or
test
mov
mov
in
in
push
pop
cli
mov
xor
popa
fnstsw
sbb
shll
and
adc
je
or
decl
scas
add
xorl
pushf
xor
stc
cmc
xor
test
bt
pushl
popf
mov
pushl
ret
xor
and
xchg
mov
xchg
int
adc
mov
sti
push
xchg
js,pt
test
xchg
sbb
cmp
dec
ds
cwtl
adc
push
sahf
push
dec
pop
lods
cmp
shlb
in
mov
leave
stos
cmpsl
dec
jle
iret
out
and
pop
or
mov
cltd
xchg
add
negl
leave
test
push
adc
mov
dec
pop
ja
aad
insb
mov
add
shrl
cs
push
pop
out
ja
pop
push
fstl
subl
pusha
test
push
mov
and
mov
jnp
xor
out
mov
mov
loopne
dec
push
mov
push
sarl
xchg
cmpb
dec
sbb
scas
mov
mov
cmpsl
xor
daa
add
jns
push
cmc
ret
xchg
mov
xlat
stos
mov
popa
mov
xor
push
aam
pop
add
leave
push
push
pop
jnp
mov
sbb
and
jb
mov
push
sub
add
mov
lea
js
pusha
pushf
mov
lea
pusha
pushf
xchg
pushf
mov
movb
pushl
ret
pushf
mov
lea
lea
pushf
lea
lea
call
lea
pushf
movb
call
lods
pop
lret
and
mov
xor
cmpsb
adc
xor
out
ljmp
mov
aas
movsb
insl
in
push
sbb
and
xor
jg
xchg
fcmovnbe
push
ss
loopne
int3
movsb
in
jno
sub
mov
iret
int3
jne
and
adc
push
sub
or
jno
enter
cmp
gs
mov
or
push
jmp
jns
pushf
movl
call
sub
repnz
stc
dec
jg
sbb
pop
adc
push
push
les
dec
and
pop
jle
xchg
popa
test
es
inc
and
iret
or
xchg
mov
hlt
adcb
and
adc
or
jl
je
pop
cmc
push
fsubl
dec
pop
hlt
mov
int
out
cltd
jmp
mov
int
fnsave
jae
repz
xchg
xor
cld
or
xchg
lock
outsb
pop
adc
jmp
insb
sub
sbb
hlt
dec
sahf
xchg
dec
pusha
stc
into
aaa
mov
adc
push
cltd
pop
inc
rolb
fstl
add
ds
stos
aas
cmpsl
out
mov
sbb
sub
mov
and
mov
sbb
mov
int3
aam
mov
ret
in
mov
pop
nop
lock
mov
mov
out
lods
int3
mov
xlat
mov
mov
aam
push
xchg
hlt
sarl
sti
insl
les
je
and
mov
fcompl
mov
psubd
je
sbb
je
or
adc
add
rorl
push
pushf
add
lea
mov
movb
pushf
pushf
lea
call
bswap
mov
jmp
movsbw
movzbw
stos
rcr
pushf
sub
or
btr
xor
mov
xor
cmc
or
mov
xor
or
stc
mov
dec
mov
clc
add
mov
lea
jp
pusha
pusha
mov
movw
jmp
jmp
dec
sub
out
pusha
jmp
xor
test
movb
xor
clc
xor
clc
mov
xorl
movb
xor
cmp
pusha
xor
jmp
shll
push
lea
call
mov
seto
not
nop
movzbw
bswap
pop
pushf
xchg
movb
mov
call
push
pusha
xchg
lea
jle
pushf
mov
call
movl
call
pusha
pushl
pushf
pushl
movl
jmp
pusha
call
nop
lea
mov
pusha
jmp
mov
movl
jmp
xchg
jp
pushf
mov
movzbw
not
seto
pusha
mov
lea
jne
pushf
push
pusha
mov
mov
lea
jmp
mov
call
sbb
push
push
and
outsl
add
sbb
xor
lods
into
mov
imul
xchg
out
adc
fimuls
mov
into
push
sbb
ja
xchg
push
inc
andb
loope
rcll
pop
push
xchg
movsl
test
mov
xchg
into
cmp
xchg
js
cmp
xor
or
inc
aam
sarl
push
jmp
jmp
movl
movl
movl
pusha
lea
jmp
pushf
mov
call
call
pushf
mov
pushl
mov
push
mov
pushl
pushf
movb
lea
jmp
rcrl
push
and
dec
rcr
xchg
or
sub
sarb
out
enter
fildll
xchg
push
push
sbb
daa
adc
mov
adc
ja
push
xor
insl
nop
add
popa
roll
jnp
lods
nop
shrb
nop
inc
das
mov
pop
xor
out
ja
je
fsubrl
xlat
adc
mov
scas
cltd
fadds
mov
xor
jmp
mov
jl
test
cwtl
fs
xchg
nop
rorb
add
loop
dec
mov
ds
inc
shrb
xor
mov
stc
mov
inc
add
cwtl
mov
fcompl
sbb
dec
mov
dec
and
fmull
sub
ds
and
es
push
jno
fstps
in
movsl
fists
push
loope
push
and
fistpl
push
lahf
cmp
and
and
roll
pop
daa
jne
popa
arpl
fs
cltd
sti
lods
inc
shrb
mov
cmp
add
in
inc
icebp
punpckhdq
inc
jne
ss
dec
idivb
push
jb
jl
out
inc
dec
push
mov
pop
scas
mulb
and
and
lods
jb
movsl
mov
jecxz
or
xchg
mov
and
cs
lods
sbb
cmp
jg,pt
call
lds
insb
sub
fsubrl
repnz
fs
mov
cmp
or
xor
test
es
push
aaa
add
rorb
imul
pushf
add
rcrb
movsl
jmp
add
sub
movl
out
ror
jno
jae
enter
popa
adc
push
fldenv
jmp
aad
pop
xchg
and
pop
cmp
sub
jl
cwtl
mov
loope
mov
stc
pop
loop
push
nop
les
hlt
mov
cmc
mov
mov
pusha
dec
sub
mov
js
adc
movsl
mov
negl
mov
ficoms
pop
sbb
sahf
movb
pushf
movb
jmp
jmp
pop
jmp
mov
jmp
movl
pushf
pushf
pusha
movb
lea
jmp
cwtl
and
mov
hlt
fs
push
insb
into
lods
push
lock
iret
xchg
outsl
or
out
pop
test
les
lret
clc
cli
mov
pop
ss
fldl
cmp
das
pop
loope
clc
lcall
dec
cmpsl
jmp
pop
imul
call
movsb
fdivrs
cmp
outsb
add
sbb
shrl
add
out
out
push
lea
push
mov
xchg
pusha
mov
pushf
pushl
ret
popf
cmpsb
mov
bt
xor
stc
xor
cmc
pushl
popf
push
pushl
ret
imul
push
jo
inc
push
push
push
add
push
jo
arpl
and
aam
cmp
inc
push
jae
jnp
int3
or
inc
jo
lret
mov
fs
lahf
aam
sbb
popa
cmp
lods
bound
out
fistpl
jmp
arpl
xchg
ljmp
mov
incl
sbb
rolb
adc
and
inc
add
xchg
fiaddl
pop
test
inc
sub
popa
pop
jo
inc
push
xor
jae
cmp
fcomp
lods
stos
sbb
movsl
jb
negb
adc
ja
xor
into
or
mov
rclb
jbe
push
inc
loope
int3
mov
mov
mov
pop
daa
repnz
stc
xlat
movsl
or
pop
xor
fxtract
insl
mov
sar
push
repnz
push
mov
or
bound
movsb
scas
mov
mov
lret
imul
sbb
rcll
push
jne
clc
shrl
jae
xchg
pop
outsl
xchg
sbb
inc
and
femms
inc
add
jne
mov
inc
push
lret
addr16
xadd
stc
cmpsl
sbb
push
pop
cli
mov
in
mov
in
sub
es
fisubs
shrb
add
mov
adc
data16
stc
cltd
fcoms
ror
repnz
pop
mov
enter
jecxz
mov
push
mov
and
punpcklwd
stc
fdivs
pop
in
or
inc
daa
add
call
movb
pusha
mov
pushl
push
call
movl
mov
jmp
movswl
movsbw
bswap
movsbw
mov
call
jmp
push
pushf
setle
mov
call
mov
pushf
xchg
movb
push
pushf
pushl
ret
xor
pushl
jmp
jmp
mov
mov
pushl
call
push
lea
je
not
mov
mov
pushf
movsbl
push
movl
setae
movswl
call
push
mov
movb
call
lea
mov
jmp
jmp
lea
pushf
movb
xchg
pushl
pushl
ret
pushl
xchg
call
pushf
mov
lea
jmp
xor
push
mov
and
adc
addr16
mov
inc
cwtl
xchg
cmp
push
or
push
das
push
lods
lahf
pop
adcl
mov
aad
mov
pop
and
ja
jno
or
mov
inc
xchg
out
cwtl
push
jb
movsb
aas
ja
pop
nop
loope
subb
loope
sub
imul
mov
mov
jmp
mov
cwtl
aas
shlb
imul
movsb
ss
nop
into
dec
push
fnsave
pushf
adc
sbb
mov
iret
loope
loop
stos
cld
add
xchg
mov
sub
mov
repnz
test
repnz
jns
test
call
xchg
pushl
push
push
movw
pushl
ret
jmp
jmp
pusha
call
pusha
pushf
pushf
mov
mov
movw
pushf
lea
jmp
sub
and
inc
cmovne
jne
xor
clc
push
lea
sarb
sub
fistl
rorl
dec
andl
jp
mov
dec
lock
inc
es
push
inc
lea
leave
pop
jbe
jb
push
je
mov
push
lahf
mov
add
push
in
inc
and
movsl
mov
jmp
popf
ficomps
xor
mov
test
mov
incb
mov
mov
or
fmull
push
and
jne
jge
jne
dec
addr16
cmpl
popf
ficomps
mov
test
push
test
call
test
in
je
pushf
rolb
xchg
cmpl
sub
mov
fisubs
out
fstps
sar
pop
cltd
and
push
jl
push
sbb
sbb
dec
or
adc
or
inc
sub
mov
out
push
or
pop
shll
dec
frstor
jmp
test
xor
idivb
sub
xor
out
lock
scas
rcrb
mov
push
xchg
sahf
lock
xchg
pop
in
add
imul
mov
add
dec
adc
mov
sahf
icebp
cs
ret
mov
mov
int3
orl
cld
cs
rcr
sub
mov
in
jbe
mov
xchg
fisttpll
jne
fnstcw
lahf
fwait
jmp
popf
jl
rorl
les
push
or
jb
xchg
push
and
add
dec
add
jg
dec
pop
xchg
in
cltd
mov
inc
and
mov
mov
jmp
lahf
pushl
mov
mov
pusha
mov
jmp
lea
jp
pusha
lea
lea
jnp
pushf
xchg
pushf
pushl
pushl
ret
jmp
lea
jmp
pushf
lea
pushf
pushl
pushf
mov
xchg
pushl
movw
pushl
mov
pushl
ret
scas
out
mov
and
inc
or
into
test
scas
rcl
lahf
cs
test
xchg
mov
dec
or
adc
pusha
push
cmpb
in
dec
js
cmp
test
aad
push
sbb
mov
scas
mov
mov
adc
inc
ficoml
jmp
lods
cld
mov
movd
aas
imul
jnp
adc
push
sub
jno
jno
andb
pop
nop
pushf
jmp
pusha
mov
pushf
movl
call
mov
pushf
xchg
lea
jg
pushf
xchg
movzbw
mov
jmp
xchg
push
pushl
ret
dec
arpl
adc
dec
sub
adc
es
cwtl
inc
dec
sub
test
fisubs
ficompl
loope
js
adc
xchg
es
xchg
ret
mov
mov
xor
int
push
add
ja
call
std
stos
push
add
cmpsb
clc
adc
std
out
xchg
lods
ret
ljmp
inc
mov
sub
ds
inc
lock
sub
mov
push
bound
jb
xchg
leave
loop
adc
out
adc
cmc
popa
mov
ror
xchg
xchg
xor
cmpsl
jb
fistpl
pop
sub
adc
sbb
mov
leave
xchg
fdivrl
iret
scas
out
mov
mov
jl
sti
pop
add
or
loop
into
mov
sub
inc
int
inc
add
dec
cmpsl
bound
or
jge
dec
mov
and
and
push
int
movsb
pop
enter
pop
xchg
idivl
jmp
dec
sub
xorb
fistps
cmp
sbb
pop
pop
cmp
push
jb
sbb
orl
iret
mov
and
mov
std
sub
dec
sub
mov
sar
sbb
pop
push
lods
jae
push
fst
xchg
fstpt
mov
call
stc
mov
mov
or
inc
xor
jae
ret
enter
mov
cltd
sbb
push
fdiv
and
inc
test
mov
mov
or
stc
and
in
pusha
test
int
scas
rcll
aas
sub
sub
les
add
inc
lods
xorb
sub
sbb
into
imul
loope
push
call
and
sbb
sbb
test
cs
mov
in
ljmp
cld
fwait
mov
mov
pushf
pushf
popl
test
xorl
pusha
pushl
xor
test
xor
pushf
xor
pushf
xor
test
xor
cmc
xor
test
cmc
xor
cmp
mov
pushl
popf
movb
movb
pushl
ret
xchg
push
pushf
pushl
ret
jmp
movb
movb
movl
pusha
call
push
push
clc
pusha
cmpw
jmp
movl
lea
jp
pusha
mov
pusha
lea
mov
jmp
daa
fnstsw
out
mov
rcll
fstp
stos
pop
sub
rcll
mov
xchg
mov
add
cltd
jle
cmp
mov
outsb
or
dec
jle
fisubrs
jmp
sbb
popf
inc
mov
push
dec
dec
cmpsl
dec
xchg
jno
dec
sbb
add
xchg
and
mov
lock
mov
int
cmpsl
call
leave
movl
jae
jno
pusha
xor
clc
scas
sbb
mov
or
ret
add
and
dec
push
xor
xchg
mov
xorl
xchg
mov
lea
cld
test
inc
cmp
test
in
mov
mov
in
lods
cli
test
bnd
sbb
xor
decb
add
addl
cmp
dec
call
xchg
jmp
mov
mov
jmp
pushf
mov
bswap
mov
pushf
mov
call
jmp
pusha
call
pusha
call
mov
call
movzbl
pushf
mov
pushf
pusha
xchg
push
mov
xchg
mov
jmp
adc
mov
xor
lods
fstl
add
lock
add
push
cs
add
das
repz
cmp
mov
into
dec
mov
adc
loope
fldl
sbb
fwait
pop
jecxz
jnp
sahf
sub
test
push
jl
cmp
add
mov
cmp
rcrl
add
push
aas
fxtract
rcll
leave
mov
das
test
pop
inc
data16
or
dec
gs
sub
sbb
xchg
adc
and
ss
pop
pop
xchg
lahf
cmp
outsl
ss
lods
xor
dec
cmpsl
iret
mov
xchg
fnstenv
mov
scas
stos
stc
mov
rcr
xor
jo
mov
das
sbb
jmp
pop
fcom
popa
out
cmpl
pop
das
push
testl
inc
sub
leave
in
out
mov
call
enter
or
mov
into
nop
cmp
aad
mov
xor
xchg
adc
xchg
push
ss
inc
inc
sbb
movsl
or
and
out
ds
gs
cltd
mov
leave
sahf
int3
shll
cmp
out
ficomps
mov
stos
jo
fs
dec
aas
pop
and
call
call
mov
lea
not
pushf
mov
pushf
call
xorl
call
pusha
nop
call
sub
and
adc
sbb
lods
bound
add
in
cmp
test
xor
jno
inc
pop
jne
push
pop
jne
pop
daa
push
cmp
xchg
jp
out
loope
nop
add
mov
loope
inc
enter
stos
fstpt
pop
jg
sub
or
daa
dec
sub
bound
mov
jmp
push
and
xchg
sarl
pop
sar
fdivs
jno
push
push
push
lods
sahf
movsl
pop
jge
hlt
cmp
mov
mov
mov
and
addr16
loopne
in
mov
dec
sub
add
hlt
pop
inc
jg
int3
xchg
scas
cwtl
mov
rcll
test
ljmp
int3
repz
sbb
or
mov
sbb
adc
loopne
pop
in
push
cmp
in
mov
int
jae
sbb
ljmp
sub
xchg
jge
pusha
xor
in
cmpsl
mov
mov
es
inc
mov
icebp
fistpll
pop
cmp
pop
and
loope
cmp
ficoml
mov
mov
mov
sub
or
mov
push
movsb
in
cmp
ds
pop
adc
inc
or
jle
ret
push
inc
imul
pop
pop
xlat
jmp
sti
and
daa
in
aam
gs
in
and
fs
and
mov
mov
mul
pop
addr16
pop
mov
or
cwtl
dec
inc
lea
rcrl
ret
xchg
xchg
lock
fs
out
lods
sbb
jmp
pop
mov
lret
fistpl
xor
and
call
pop
add
lods
xor
insl
fs
les
shrb
jns
pusha
xchg
cld
movsb
or
sbb
pushf
adc
into
xchg
cmp
or
sti
and
sbb
out
push
test
pop
popf
add
mov
push
pop
loope
push
aam
cld
jmp
pushf
pop
das
enter
cmp
cmp
sub
pop
pop
pop
ds
aaa
cmpsb
imul
repnz
cmp
push
mov
lods
icebp
stos
mov
inc
lds
stc
mov
adc
jbe
jmp
pop
dec
sbb
mov
rorb
mov
enter
sub
dec
jg
in
repnz
mov
xor
pop
sbb
into
clc
ljmp
clc
dec
dec
mov
jae
fisubs
inc
jnp
addr16
repnz
mov
jle
xor
mov
test
outsl
or
mov
sub
jno
mov
xor
les
jnp
pop
repnz
adc
shrl
popf
pop
push
subl
mov
in
jmp
xlat
dec
pop
ljmp
adc
mov
and
or
mov
testl
jle
pop
stc
lahf
pop
popa
daa
popf
inc
call
cli
push
pop
ficoms
lods
or
pop
and
jle
fs
and
mov
iret
xchg
stc
cmc
fisubs
push
pop
aam
arpl
std
outsb
sub
mov
pop
rcrl
push
mov
mov
cmp
ja
cli
cwtl
cli
mov
loope
or
mov
sub
push
pushf
pop
push
ret
add
sbb
push
add
mov
sub
dec
or
aas
jb
and
and
fs
fwait
in
xchg
push
sub
mov
ja
inc
mov
js
insb
das
jo
push
jecxz
xor
push
xor
pusha
pushf
mov
movsbl
mov
movb
movb
lea
jb
mov
push
mov
pushf
movb
lea
jmp
xor
movb
xor
clc
xor
bt
stc
xor
clc
call
movl
xchg
movb
pushl
ret
pushf
call
mov
movsbw
pushl
jmp
loopne
cmp
add
dec
aam
addr16
popf
popa
jbe
das
outsl
dec
add
dec
dec
jmp
das
inc
sub
adc
push
push
test
out
dec
out
imul
sbb
xor
movl
pop
xor
and
ret
pop
jmp
lahf
push
jns
or
repz
mov
iret
lock
jae
ret
lret
cmpsl
adc
add
and
addr16
pop
movsb
cmp
mov
prefetchwt1
dec
fld1
aas
dec
insl
or
cmp
dec
scas
sti
ss
imul
xchg
imul
mov
xchg
in
fmul
icebp
mov
es
movsl
shrl
mov
shll
jne
negl
push
mov
ds
lahf
std
mov
std
dec
inc
bound
sbb
loopne
pop
xor
adc
aaa
loopne
jae
cmp
xchg
mov
xchg
adc
sbb
sahf
cs
push
adc
lahf
lcall
lods
leave
lods
push
je
mov
outsb
dec
sub
shrl
xor
ret
lods
lock
xchg
insl
mov
sub
lock
dec
mov
mov
repz
dec
outsl
cltd
mov
imul
stc
mov
jecxz
and
popf
push
ss
xor
xlat
add
ss
outsb
add
cs
ja
mov
ret
jns
repnz
fcmovnb
pop
fists
mov
stc
pushf
das
and
mov
jne
mov
push
sub
jp
mov
xchg
aam
les
adc
movl
push
call
movl
call
not
setne
mov
jmp
lea
cmp
xor
pop
push
dec
pop
add
lret
xchg
stos
fwait
notb
jb
jnp
xlat
push
jae
xor
outsb
mov
sub
mov
mov
out
popa
outsb
mov
push
dec
inc
mov
iret
jae
mov
mov
test
subl
jg
insb
xchg
push
mov
test
fisttps
jb
dec
lret
fdiv
and
xor
add
movsb
cli
call
add
sbbl
mov
pop
xchg
lahf
sahf
ljmp
xchg
jb
add
dec
add
mov
or
add
xchg
pusha
mov
pushl
mov
pushl
ret
xchg
mov
call
jmp
nop
push
pushl
push
xchg
pushf
mov
lea
ja
lea
push
mov
pusha
mov
pusha
jmp
inc
shr
enter
sub
call
movb
setno
lea
mov
push
lea
pushf
call
pop
mov
pusha
push
jmp
movsbw
sete
jmp
jmp
pushf
pusha
call
call
pusha
bswap
jmp
xchg
pushf
movb
movb
movb
pushl
ret
lea
jb
push
movl
call
mov
pushl
push
jmp
jmp
ja
xor
cmp
sbb
stos
xor
imul
adc
iret
sub
frstor
andb
pop
push
lcall
ds
insb
mov
adc
xlat
lret
mov
dec
push
lret
cmp
jae
jge
sub
adc
and
jns
and
xor
push
mov
pop
mov
xor
pop
stos
call
std
aam
cmpsb
push
and
mov
cmp
push
pop
stos
iret
clc
mul
cmp
cmp
jmp
jp
and
adc
jns
cld
ret
push
push
test
movsb
mov
sub
int3
jb
cmc
ret
mov
shlb
xchg
shrd
into
scas
out
aad
jp
sbb
mov
cmp
mov
mov
push
sbb
movsl
push
and
sahf
in
orb
dec
ret
out
leave
movsl
or
aad
jp
jle
xchg
dec
mov
and
jge
imul
xlat
adc
imul
sahf
lods
outsl
or
inc
roll
imul
xor
insl
cmp
fsubl
sub
or
gs
movb
mov
pop
leave
mov
pushf
mov
adc
scas
pusha
test
xor
mov
mov
mov
xchg
idiv
mov
pop
test
sbb
in
adc
dec
jae
xchg
aad
fs
adc
fidivl
out
pop
fisubl
jmp
sub
mov
cmpsb
out
pushf
dec
fldt
jp
or
mov
nop
daa
mov
cld
cmc
pop
aaa
aaa
add
cmc
shrb
xchg
movsbw
bswap
movzbw
mov
call
call
pop
jne
movsb
push
and
aam
pop
xchg
decb
add
mov
push
dec
inc
or
jge
sub
add
outsb
adc
sbb
mov
leave
loop
shr
jge
nop
shll
stos
addr16
jne
inc
out
bound
mov
in
ror
daa
call
or
pop
lcall
add
scas
fs
adc
cmp
lret
dec
xor
lea
inc
fs
sbb
outsl
sbb
add
aas
hlt
and
movl
mov
sub
outsb
push
dec
loopne
data16
mov
and
pusha
inc
and
jle
xchg
mov
test
push
sub
pop
ss
inc
add
dec
jbe
and
cmp
adc
loop
fsubr
aaa
sti
add
jmp
pushf
pushf
nop
jmp
pusha
pushf
nop
pushl
xchg
pushf
movzbl
mov
mov
call
jmp
pushf
lea
jmp
xchg
push
pushl
pushl
ret
call
push
lea
je
not
inc
pushf
lea
mov
pusha
mov
push
movb
inc
jmp
xlat
and
push
and
mov
mov
ss
sub
faddp
imul
gs
test
loope
imul
mov
cmpsl
stc
jecxz
test
pop
inc
aam
mul
sub
mov
iret
into
xchg
pop
xchg
push
data16
jge
imul
popa
les
inc
js
jb
mov
sbb
xor
cmp
push
sbb
ret
pop
dec
fiaddl
arpl
fsts
add
push
fidivrs
sbb
pop
mov
mov
bound
pop
popf
loope
mov
test
js
int
iret
dec
mov
mov
punpcklwd
fbstp
mov
push
adc
or
pop
mov
mov
mov
mov
inc
les
lds
mov
iret
pusha
mov
push
pushf
mov
pushf
pushl
ret
fcomip
add
dec
jg
adc
cmp
sahf
and
cmp
outsl
inc
sub
push
add
js
inc
sub
test
lods
jp
or
movups
jae
in
inc
mov
lods
xor
pop
cmp
ret
mov
out
gs
mov
pushf
mov
shlb
mov
or
dec
mov
call
notb
insb
jae
pop
dec
and
mov
aaa
push
adc
dec
adc
cmp
dec
sbb
mov
sub
aam
into
loope
scas
sub
xor
xchg
xchg
in
inc
or
fbld
inc
cli
repnz
and
push
xor
add
dec
sbb
cmp
repz
pop
or
xor
mov
ljmp
jne
aas
rorb
mov
mov
sbb
int
adcb
aad
in
pop
mov
std
sbb
inc
addr16
push
inc
loopne
ja
pop
or
loope
out
lahf
xor
ret
sbb
sub
cmc
adc
into
mov
and
ret
sub
mov
lret
jb
lods
push
pop
lret
mov
pop
sbb
test
mov
jbe
fsts
scas
out
sbbb
fwait
mov
mov
out
popa
mov
cli
outsl
mov
test
fwait
sti
shr
ljmp
jmp
clc
ja
orb
inc
data16
je
dec
sti
outsb
adc
sbb
jnp
or
movsl
iret
xchg
xchg
lret
lods
testb
loope
dec
pop
movsl
out
stos
rcl
xchg
mov
cmpsb
ljmp
add
mov
lods
inc
mov
xchg
lods
push
add
sub
test
and
xchg
mov
sbb
inc
add
xor
dec
fcmovu
xchg
mov
inc
lods
les
sub
sbb
jno
hlt
or
in
inc
repz
lahf
into
test
rolb
push
scas
test
xchg
scas
fcoml
cmpb
inc
xchg
xchg
insb
pop
mov
dec
dec
js,pt
mov
aaa
ret
aad
out
add
das
pop
sub
outsl
movsb
loopne
inc
outsb
cmp
in
push
mov
loopne
jbe
adc
rorb
jo
cwtl
clc
mov
adc
sbb
loopne
mov
je
sti
ret
in
stos
call
pushl
inc
push
xchg
sbb
sub
subb
push
and
fstps
test
int3
mov
dec
testb
xor
push
cmp
jmp
dec
popf
decl
xchg
xchg
jmp
mov
jg
jmp
push
std
scas
mov
fcomi
ss
mov
adc
mov
in
mov
loopne
jle
imul
push
pop
mov
cld
dec
jle
xor
inc
and
cmpsb
or
pop
xchg
les
xor
xchg
jl
add
pop
fisubs
pusha
mov
jae
ror
xor
sbb
lods
bound
test
add
push
cmc
test
pop
jg
cmp
xchg
push
gs
cmp
fnstenv
sub
xlat
xor
jmp
add
cmpsl
adc
cmp
into
iret
xchg
fisubs
and
adc
sbb
jl
xchg
xchg
mov
xor
lods
repz
icebp
les
or
mov
push
dec
dec
mov
je
sub
andb
mov
fdivrl
in
jns
and
sbb
in
int
sub
xor
pushl
xor
pusha
push
xor
pushf
clc
xorl
push
xor
call
pop
not
mov
call
jmp
movw
lea
call
push
call
pusha
movl
pushf
pushf
movb
pusha
movl
pushf
pushf
lea
jmp
mov
jmp
xorl
bt
call
call
bt
xor
cmc
cmc
xor
pusha
call
pushf
pushf
popl
jmp
popf
xchg
lods
push
and
or
pop
inc
imul
das
or
push
xchg
fidivrs
sub
cmp
je
cmp
push
mov
jb
lret
cmpsl
mov
shl
in
dec
addr16
stos
and
inc
cmp
testb
cmpb
add
cmp
dec
push
jl
into
jnp
rcr
out
mov
orl
inc
push
mov
mov
rclb
cwtl
cmp
cmp
and
decl
js
jle
repz
orl
xchg
fptan
outsb
aaa
pop
enter
pushf
mov
mov
movzbw
bswap
bswap
mov
pushl
lea
jmp
call
push
pushf
pushf
call
pusha
xchg
push
lea
jbe
pusha
mov
setge
mov
movzbw
pop
mov
pushl
pushl
call
call
cmp
add
pusha
mov
pushf
pop
bswap
mov
movsbw
movsbw
not
lea
pushf
movb
lea
call
not
jmp
pushf
pushf
popl
test
xor
stc
xor
stc
push
xor
stc
cmp
xor
stc
xorl
cmc
xor
jmp
movw
pushf
jmp
cmp
rcll
clc
mov
xchg
cmp
mov
mov
mov
jl
ficompl
insl
xchg
movsl
repz
mov
pop
mov
fistl
adc
mov
sahf
xchg
cmp
mov
and
aas
jno
adc
ret
jns
sbb
fisubs
mov
fidivl
ja
mov
mov
xchg
add
mov
bound
jle
push
test
mov
fs
shrb
nop
es
xchg
pop
loope
sbb
stos
pop
int3
fidivs
xchg
rcl
inc
bound
ficoms
jl
popa
jle
jmp
pop
xor
xor
out
outsb
lock
inc
out
cltd
repz
mov
mov
ja
test
mov
pop
push
cmpsl
sub
ds
xor
enter
fldenv
jmp
inc
push
in
mov
rcrl
ss
dec
dec
sub
dec
cmp
jne
xchg
in
jecxz
lea
jmp
push
mov
pushl
pushl
mov
push
lea
call
call
call
pusha
movw
pushf
xchg
jmp
pusha
pushl
nop
jmp
pushl
popf
push
mov
pushl
ret
jmp
xchg
bswap
push
mov
movb
call
mov
pushf
push
pushf
pushl
ret
pushf
lea
mov
pushf
movw
lea
mov
pushf
jmp
mov
push
mov
movl
call
movw
mov
lea
jmp
lea
push
mov
xchg
mov
pushl
ret
pushf
movl
movb
call
mov
lea
mov
jmp
call
je
mov
and
aam
aam
mov
mov
adc
inc
fwait
sub
jge
sub
outsb
stos
push
push
inc
pop
enter
or
push
test
adcl
adc
mov
and
jl
jg
mov
imull
cmp
and
pop
adc
pushf
outsl
dec
arpl
push
xor
pop
cmpb
mov
hlt
scas
mov
xchg
test
mov
pop
mov
in
push
xchg
jmp
arpl
add
lock
push
push
and
test
xor
xchg
test
inc
jno,pt
stos
sub
iret
scas
imul
push
das
jne
arpl
and
sub
notl
repz
cmp
outsb
orl
jp
pop
dec
cmpsb
xchg
pushf
mov
mov
std
mov
stc
push
dec
pop
xchg
outsb
mov
add
je
jae
cmp
testl
fmull
adc
call
lea
call
mov
movb
movl
mov
movl
pusha
jmp
jmp
jmp
push
xchg
push
push
pushl
ret
xor
movb
call
mov
call
push
pushl
xchg
push
movzbw
push
pop
mov
pushf
pushf
call
pushf
popl
jmp
mov
movzbw
not
mov
jmp
mov
movw
pushf
mov
push
lea
jmp
jmp
lock
inc
cmc
in
mov
popa
daa
js
test
mov
add
add
add
jp
sub
jb
mov
rcrl
mov
lahf
add
mov
mov
fidivrs
aaa
jne
inc
nop
stos
fcmovne
lahf
xor
addr16
and
mov
inc
nop
mov
mov
clc
mov
mov
sub
jne
aas
jl
ror
sti
aad
jmp
pop
mov
cmovg
bound
dec
xchg
in
adc
and
addr16
push
push
jne
mov
push
mov
xor
movsb
imul
dec
adc
movsl
jp
lds
mov
mov
icebp
stos
pop
test
ret
incb
mov
call
mov
adc
xchg
xor
pop
push
iret
inc
fwait
jl
fmull
pop
jnp
and
adc
inc
and
pop
jp
data16
jo
pop
sbb
or
dec
aaa
sahf
and
mov
sub
and
movb
cld
retw
mov
sbb
inc
push
adc
sbb
cmp
sbb
insl
adc
and
fldl
lcall
pop
repz
mov
push
jnp
jnp
push
cmp
dec
cmp
outsl
dec
outsl
ret
jb
sub
fs
or
inc
and
sub
inc
adc
cmp
and
adc
mov
pop
mov
inc
repz
std
xchg
mov
out
faddl
fsubl
nop
int3
std
and
xlat
mov
cmpsl
in
mov
enter
lea
xlat
aam
icebp
insl
pop
test
fnstsw
hlt
mov
iret
xchg
xchg
aam
in
subb
sbb
adcb
outsl
jb
imul
and
jne
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
shr
add
add
xchg
push
pushf
jmp
pusha
jmp
lea
ja
pusha
pusha
pushf
lea
jmp
dec
xchg
dec
xchg
inc
and
rcl
out
int
cltd
repz
jg
add
cmc
dec
fidivrs
nop
jl
iret
fcomi
inc
lcall
sub
cmp
cmpb
pop
jns
adc
pop
pop
adc
adc
adc
out
ljmp
jecxz
mov
jecxz
inc
call
sub
fdivs
sahf
icebp
stos
mov
adcl
mov
pop
push
lea
call
push
pushl
push
movb
mov
push
pushf
lea
jmp
mov
movb
lea
je
lahf
lahf
bswap
lea
pusha
lea
call
pusha
jmp
movl
lea
jne
setae
mov
push
mov
shl
setle
ror
not
xor
cmp
sete
xor
mov
and
mov
shl
rcr
mov
xor
clc
movzbl
mov
sar
not
mov
cmc
shl
mov
cmp
mov
shld
bsr
lea
cmc
sub
cmc
bswap
mov
bt
lea
shr
mov
rcr
bswap
sub
pop
and
shl
rcl
shrd
das
mov
pushf
shl
jmp
jecxz
cmp
pop
adc
cmp
pcmpgtw
dec
cmp
or
push
xor
dec
lret
lahf
sub
and
rcr
mov
or
or
and
adc
dec
and
mov
test
xchg
filds
push
and
loop
mov
fimull
mov
cmp
and
movb
lods
test
not
test
pushf
xor
stc
sub
clc
not
clc
test
call
movsbl
mov
pusha
call
cmpsl
jge
xchg
inc
and
fdivl
clc
xchg
mov
scas
call
gs
cs
mov
rcll
movb
arpl
aaa
leave
fucom
inc
out
daa
mov
add
rorb
outsl
jae
pop
pop
cmp
push
sub
push
xor
mov
pop
rclb
lock
add
dec
fnsave
sbb
xlat
pop
shrd
mov
cli
mov
test
shrb
loop
scas
aam
and
and
jae
bt
call
sbb
lea
jno
pusha
lea
push
lea
jmp
lea
shr
jmp
fs
mov
div
lcall
mov
shl
out
sub
or
pop
out
xchg
add
mov
xchg
and
jno
lret
aaa
add
xchg
add
lods
mov
mov
xchg
nop
pop
das
nop
pop
js
jmp
ljmp
jecxz
pop
or
adc
pop
je
jl
je
insb
add
mov
pop
incb
push
adc
pushf
lea
pushf
mov
call
fisubl
sti
xchg
inc
and
cmp
jmp
cmpsl
int
icebp
xchg
push
mov
lret
xchg
das
in
adc
rolb
sbb
cmp
aaa
mov
sar
dec
or
in
xor
xor
popf
sub
mov
mov
call
add
les
leave
mov
in
pop
xchg
adc
mov
rolb
das
inc
push
sub
push
sarl
xchg
xchg
orl
sarb
bound
scas
lds
out
out
xchg
mov
mov
pusha
jb
mov
cmpsb
neg
test
lcall
data16
dec
cs
jo
pusha
cs
pop
les
ja
adc
imul
rorl
test
sbb
cmp
cmp
inc
out
mov
mov
or
mov
rolb
push
out
outsl
add
dec
stc
aam
xor
in
sub
dec
mov
mov
icebp
pushf
in
gs
mov
jle
jbe
push
cmp
sbb
test
das
cmc
sub
push
daa
jns
push
sar
ficompl
adc
jae
lahf
mov
in
jecxz
mov
xchg
mov
mov
and
outsl
mov
jns
pop
pop
ret
pop
sbb
in
push
scas
ds
and
cmpsb
pop
dec
or
ret
out
js
stos
inc
sti
lahf
add
in
or
mov
sub
push
jp
cmp
or
sub
outsl
es
add
pop
push
adc
rcr
test
adc
pop
jl
lock
and
pop
addl
dec
repz
mov
int
sbbl
fistpl
fbstp
xchg
cmp
pop
jecxz
pop
ljmp
jne
push
lcall
cltd
adc
mov
jmp
xchg
bound
xchg
or
sub
push
mov
mov
lea
fisttps
pop
mov
es
adc
cmp
xchg
repz
xchg
mov
in
mov
sub
jno
dec
insl
icebp
sub
shld
add
call
mov
movb
movw
pushf
movl
lea
jmp
stc
cmp
call
pop
jno
fwait
inc
and
faddp
mov
testb
adc
testb
bound
push
mov
pop
inc
ret
or
or
add
cmc
xchg
mov
movsl
sti
rcrl
nop
ds
fstpt
sub
add
lcall
mov
test
jmp
fiadds
xchg
pop
xor
dec
push
stc
mov
dec
mov
pushf
lea
jmp
pushl
popl
mov
pushl
pushl
ret
daa
push
std
lcall
jae
addr16
pop
dec
sbb
popa
adc
jmp
mov
adc
xor
pop
lea
mov
xchg
add
or
push
test
sbb
movsl
push
sbb
cmpsb
fiaddl
dec
or
inc
in
jbe
sub
push
jp
in
xlat
mov
mov
clc
mov
rol
cwtl
fisttpl
pop
hlt
test
inc
shrl
and
scas
les
rol
mov
sahf
inc
jne
out
ss
inc
imul
aam
xchg
cli
push
or
mov
es
xor
lcall
imul
lea
lahf
inc
adc
test
mov
cmp
cmpsb
fdivp
push
xchg
pushf
dec
xor
ret
in
hlt
fdivrs
or
add
pop
push
and
or
or
lock
push
sbb
jns
pop
pop
push
das
pop
imul
jne
fcmovnu
subb
or
dec
enter
sbb
mov
and
add
cmp
mov
fbstp
push
movsb
jns
ja
inc
loope
inc
aam
cltd
clc
aad
pop
sbb
xchg
mov
outsb
or
gs
cmp
je
pop
or
dec
cmp
dec
out
daa
push
xchg
adc
sub
call
cmc
mov
inc
aam
mov
stos
int3
mov
mov
jne
popf
adc
sub
test
push
adc
cwtl
mov
mov
mov
jae
out
iret
test
lret
jbe
movsb
mov
push
fstpl
and
enter
cwtl
mov
aas
call
outsl
stc
pushf
in
dec
fadd
aad
fstl
jbe
roll
push
mov
push
or
sbbl
pop
pop
mov
inc
xor
inc
push
sub
pop
cmp
cltd
ds
lret
mov
jmp
inc
sub
iret
inc
push
lahf
add
sbb
imull
sbb
scas
fadds
mov
cld
es
pusha
hlt
inc
push
inc
les
xor
adc
sbb
or
cli
and
lret
int
data16
add
push
pop
into
mov
das
das
mov
cmp
mov
inc
and
inc
mov
fistps
jb
xor
jnp
aaa
sub
into
adc
inc
push
popf
leave
jae
dec
mov
mov
cmp
shlb
adc
inc
xorb
mov
lds
sub
les
rorl
cs
fistpl
jg
and
icebp
mov
je
leave
mov
inc
add
cli
sub
sub
das
adc
ss
mov
xor
pop
push
jg
scas
fdiv
xlat
dec
sub
mov
fcmovnbe
push
test
lea
gs
push
shl
movsb
lock
insb
insb
test
in
add
cltd
fs
mov
pop
fwait
adc
stc
mov
adc
cli
inc
cmp
or
in
hlt
and
jmp
inc
mov
mov
lcall
pop
out
out
fcmovbe
add
inc
pop
lods
jmp
in
fiadds
mov
mov
movsb
lret
repnz
popa
jne
icebp
out
lods
inc
jecxz
stos
pop
sub
pushf
ret
xchg
nop
addr16
inc
cmc
jg
dec
test
fisttpll
into
popa
and
ffree
jl
xlat
xchg
jle
sub
mov
xor
cli
gs
sbb
je
data16
js
push
loopne
adc
test
push
and
divl
jg
not
enter
test
pop
inc
xor
aam
and
testl
insb
repz
add
xlat
dec
or
or
imul
push
push
sub
pop
mov
leave
push
clc
push
inc
mov
sbb
push
push
rclb
mov
cld
iret
call
scas
loope
repz
jno
arpl
inc
stc
lds
inc
mov
jnp
sub
mov
fucompp
jmp
es
out
faddl
jo
loop,pt
neg
push
adc
push
add
lahf
xchg
cs
mov
out
flds
mov
push
mov
or
dec
aas
movsl
sbb
cmp
jae
inc
jl
xlat
jle
pop
jae
jge
adc
adc
cli
fisubrs
jmp
pop
or
push
lea
fldenv
adc
mov
dec
negb
adc
or
sbb
int3
jmp
fnsave
ficoms
and
imul
jp
lret
push
leave
mov
jne
xor
adc
dec
lock
pop
adc
pushf
in
jae
sub
mov
jns
push
pop
or
aaa
mov
shll
sbb
iret
jb
and
xchg
fistpll
dec
fs
cwtl
cmp
sub
dec
sub
jp
testb
sub
sahf
push
mov
adc
cmp
inc
and
aam
stc
sbb
mov
xchg
dec
lahf
pushf
jmp
nop
mov
data16
in
mov
gs
mov
or
push
mov
sub
iret
xchg
fwait
cmp
je
cld
shrb
mov
xchg
lret
mov
dec
push
jle
jns
sbb
jb
xor
xchg
pushf
aas
sub
fwait
jbe
ficomps
cld
mov
mov
xor
das
sarb
inc
int3
test
and
aam
cmp
or
xchg
jbe
shrl
add
jne
fdivrs
int3
loop
loope
add
or
push
push
lcall
sarb
aaa
mov
repz
dec
xchg
adc
jnp
mov
push
outsb
clc
je
aas
aaa
lret
into
inc
push
or
call
enter
in
jmp
add
adc
jo
stc
insl
inc
or
pop
inc
popa
inc
jecxz
jo
sub
pop
leave
pop
testb
fsubrp
insb
scas
or
fwait
rorl
and
adc
cmpl
lahf
push
mov
loop
xchg
idivb
mov
sarl
aaa
xor
inc
scas
ss
rol
adc
fistpl
pop
std
sub
jl
jno
test
mov
outsb
jg
and
mov
cli
imul
xchg
and
lcall
cs
rcll
repz
lret
jns
or
inc
out
pushf
adc
lret
data16
cmpsl
paddw
scas
shrl
mov
mov
loop
mov
or
inc
ficompl
dec
cmpsl
bnd
into
jo
and
sbb
cmp
test
lods
lds
adc
loope
and
mov
fiadds
out
ds
pop
jp
xor
mov
mov
sbb
and
test
popf
cmp
sbb
mov
and
negl
insl
popl
jno
out
mov
mov
sbb
mov
mov
fsubp
mov
and
call
cmp
push
lret
mov
add
mov
cmp
shlb
dec
mov
xchg
push
jmp
mov
jo
xor
push
mov
cmp
mov
cmp
aas
lcall
mov
scas
sub
add
and
or
lods
push
and
in
jbe
stos
push
gs
mov
shr
popa
daa
jo
icebp
dec
lret
push
inc
out
or
jle
das
adc
xor
dec
daa
push
push
pop
sbb
rcll
push
cmp
sbbb
mov
push
rcrl
int
rclb
jo
mov
sub
jmp
jns
xlat
aas
cmp
imul
call
pop
gs
mov
sti
jmp
pop
cmp
scas
sti
add
add
ss
cmp
or
out
jge
pop
pushf
cmp
adc
cmc
icebp
shrl
push
inc
inc
pop
sub
pop
xor
pop
in
xchg
push
push
gs
jle
sti
sub
into
xchg
scas
pusha
fistps
cmpsl
popa
scas
push
enter
push
pop
xchg
movsl
jmp
hlt
cmc
cmc
fildl
dec
adc
mov
lods
daa
daa
cmp
dec
xor
inc
jo
loop
sub
pop
mov
xlat
call
cli
lea
scas
adc
shll
xor
dec
cwtl
add
fstp
lods
and
psubsw
dec
sbb
mov
sub
inc
pop
pop
fs
mov
lret
dec
fcoml
cmp
xor
addr16
aaa
mov
mov
sub
inc
jmp
hlt
pop
aam
je
leave
sti
pop
iret
pushf
jb
push
out
imul
stos
cld
push
jmp
mov
ret
out
mov
out
add
rolb
repnz
cld
cmp
xchg
pop
push
jo
jl
sub
cmpsl
sbb
dec
xchg
pop
mov
ljmp
gs
sbb
push
jno
lret
mov
push
ret
pop
add
sti
cmp
sbb
or
sar
lods
stc
mov
dec
out
ja
push
dec
and
pop
inc
aad
orb
ret
jnp
and
movsl
add
cmp
test
jns
pushf
xor
sub
in
pop
xchg
push
loope
pop
leave
mov
decb
in
inc
cmp
adc
pop
fsubr
ja
mov
lds
dec
mov
push
add
mov
outsl
pop
cmp
jnp
mov
les
cmp
and
adc
pop
stos
cld
add
fisubl
inc
lods
insl
adc
jg
loop
sbb
xorl
scas
xorb
lock
out
adc
lods
push
push
lds
ret
adc
mov
scas
lds
loop
enter
insl
cld
call
pushf
jbe
mov
pop
xor
outsb
pop
jecxz
mov
in
lcall
sub
or
adc
loop
push
in
push
js
inc
shlb
xchg
mov
cwtl
movsb
das
mov
jp
pop
fldt
push
cmp
inc
add
push
pop
int
scas
popf
cli
mov
arpl
mov
xor
rorl
mov
or
mov
in
out
jne
sarl
ss
sar
subb
xchg
lea
adc
adc
dec
dec
mov
push
jbe
push
icebp
stos
dec
lods
push
dec
adc
xor
repz
mov
xor
out
push
fsubrs
mov
mov
pusha
cmpsb
jg
lret
dec
cmp
fwait
adc
lods
scas
push
mov
mov
mov
sub
daa
inc
sbb
sub
mov
sub
pop
fpatan
js
sub
pop
xchg
xor
stc
orb
pop
cltd
cmp
frstor
push
sub
into
dec
rclb
jne
je
xchg
xchg
arpl
jg
jo
inc
dec
pushf
insl
and
lock
cld
call
add
cltd
cmpsb
loop
cmp
stos
fisttpll
fwait
pop
jb
hlt
int3
xchg
xlat
inc
pop
push
aas
mov
hlt
stc
add
and
sbb
mov
dec
aaa
in
sbb
inc
xchg
movsbl
cli
lods
mov
cltd
xlat
enter
outsl
and
daa
lea
dec
test
adc
xchg
stos
jmp
jge
xchg
pop
fcmovb
lock
jg
xorl
adc
in
fs
push
mov
push
sbbl
popf
push
cli
setb
movsb
mov
mov
xor
mov
mov
testb
cmp
lock
popa
dec
adc
fdivr
call
scas
mov
movb
pusha
add
mov
out
mov
bound
shll
sub
push
cmp
psadbw
dec
stc
pop
ficompl
inc
cmc
inc
push
inc
sub
jmp
jnp
aad
aaa
xchg
in
rclb
mov
test
ss
shll
dec
xchg
and
clc
cld
inc
mov
push
inc
das
dec
inc
xlat
inc
sbb
xor
leave
push
stos
mov
push
xor
inc
adc
enter
mov
cs
and
mov
cmp
jg
xchg
push
in
dec
add
popa
loopne
mov
andl
pop
jle
inc
enter
sahf
pop
cmc
xor
imul
pop
sbb
dec
cmpl
xchg
dec
and
ja
pop
lahf
les
adc
cmp
mov
xchg
and
shll
scas
pop
xchg
inc
cli
fisubl
call
pushl
and
je
and
les
mov
std
or
pop
push
xchg
pop
ss
mov
lcall
sbb
xor
adc
push
les
je
and
sbb
test
out
das
pop
ss
cmp
loopne
pop
or
sub
xor
js
mov
movsl
or
lret
popf
orb
popa
cmpsl
push
lret
stos
mov
mov
jl
push
or
in
inc
or
cmp
push
scas
xchg
mov
push
arpl
mov
in
insl
mov
xchg
sub
xchg
jl
mov
shl
test
cwtl
sti
daa
and
xchg
pop
rcrb
and
push
sub
sub
sbb
and
dec
cld
or
cmp
lods
lods
mov
js
sti
or
in
lods
les
cmpsl
into
ljmp
icebp
das
rolb
fnstcw
js
loop
push
inc
mov
jle
ret
lock
dec
int3
jae
dec
mov
popf
mov
lea
popf
jl,pt
out
mov
add
imul
lods
nop
mov
push
shlb
push
xor
popa
in
xor
or
adc
pop
mov
push
stos
sbb
jb
cs
in
mov
pushf
rorb
push
sbb
hlt
sub
je
push
jb
push
push
dec
jae
fidivl
xlat
xlat
aas
jne
bound
mov
loop
stos
dec
add
adc
ret
mov
outsb
ret
ds
adc
adcl
je
and
jb
cmp
and
xor
sbb
mov
cmp
jp
sub
push
mov
mov
dec
filds
stos
and
jl
fisubrl
sarl
dec
sti
pop
sub
jns
bound
lret
daa
add
jmp
mov
and
ret
aad
inc
dec
adc
aaa
jge
pusha
bound
aam
clc
jno
add
insb
aas
dec
xchg
enter
les
icebp
arpl
sub
in
sbb
mov
es
divl
push
pop
jp
mov
push
aas
inc
popa
xchg
iret
leave
in
call
mov
pop
push
loopne
xor
out
mov
fidivrl
push
arpl
cmp
jae
pushf
movsl
cmp
jne
mov
adc
enter
cs
and
rcr
push
adc
adc
gs
pop
insb
cmp
sbb
mov
cmp
mov
jbe
das
rorl
dec
jo
test
dec
shll
sar
mov
repz
xor
scas
lods
and
add
mov
jne
xchg
scas
pusha
xchg
out
jl
xor
test
dec
pushf
or
xchg
and
inc
leave
inc
arpl
imul
pop
or
movsb
fwait
push
aaa
inc
int3
mov
xorb
fmulp
ficompl
push
mov
addr16
xor
mov
mov
js
fnstenv
add
mov
jmp
push
sub
aas
movsl
inc
push
mov
mov
scas
mov
sbb
repz
mov
enter
jnp
in
xor
dec
adc
cli
push
or
xchg
ds
stos
push
jne
push
fstps
nop
xchg
mov
mov
fdivs
loop
or
iret
fldl
test
test
xor
sbb
je
ja
jo
adc
xchg
int
mov
sahf
mov
xchg
sub
mov
jge
sbb
ds
aam
xor
lcall
cmp
repnz
ret
subb
fisubrl
mov
aaa
mov
push
xlat
test
lret
cld
and
inc
mov
cli
inc
mov
or
push
outsl
cmp
push
nop
pusha
shll
pop
int
jl
pop
lds
repz
pop
jg
mov
cmpsl
jp
sub
cld
inc
cwtl
addl
in
mov
sbb
icebp
cmpsb
lods
xchg
add
add
in
cmc
dec
xchg
jg
int3
mov
mov
cmpsb
jnp
push
insl
inc
test
xchg
pop
mov
mov
jb
mov
addr16
dec
scas
xchg
mov
or
push
into
cmpsb
clc
fistpl
es
insl
and
sub
popf
decb
add
std
gs
in
mov
test
push
cli
sti
into
xchg
ficompl
sbb
xlat
in
repz
push
cmp
int
jae
xchg
xchg
mov
sub
pop
testb
jne
jnp
xlat
popa
mov
test
xor
fmul
cltd
push
in
and
adc
mov
cmp
dec
lea
fstpt
xchg
popf
mull
mov
in
leave
pushf
xchg
xor
push
imul
shrl
loop
lea
mov
xor
cmpsb
nop
push
add
sub
push
adc
xor
lods
in
ret
mov
repnz
or
shl
pop
adc
xchg
mov
lock
sub
negb
xchg
jg
inc
xchg
shlb
push
pop
mov
xchg
fs
cltd
jle
add
jp
and
cmp
scas
in
in
adc
jae
jb
push
sbb
push
sub
les
mov
xchg
divb
fwait
int3
add
popa
es
out
xor
ljmp
xorl
hlt
or
mov
ljmp
leave
stos
pop
mov
cmpsl
and
add
inc
and
mov
mov
test
pop
sahf
mov
sbb
mov
icebp
sub
jbe
into
dec
fsubl
jb
scas
jo
sub
out
shl
and
stc
xchg
jnp
cmp
outsb
loopne
jp
cwtl
rolb
mov
push
sub
sub
xchg
sbb
call
stc
mov
pop
mov
jp
mov
inc
in
jnp
cld
fnstenv
rorl
jmp
xchg
inc
aas
add
cltd
ljmp
in
sbb
test
push
mov
fwait
movsb
pop
lods
or
nop
push
sub
push
lock
lret
daa
push
cmp
and
push
cwtl
out
fsubr
pop
ds
ffreep
sub
push
icebp
shl
inc
shl
outsb
frstor
aam
pop
sbb
cld
dec
icebp
cli
lds
push
mov
movsb
test
sti
icebp
push
pop
enter
adc
ret
jg
xchg
arpl
cmc
nop
dec
stc
cmp
jbe
and
mov
adc
shl
jmp
xchg
cmp
sbb
cmp
adc
cwtl
imul
arpl
js
dec
lcall
adc
lahf
arpl
lds
sub
lret
aam
ds
pop
mov
mov
aam
adc
fmull
loope
mov
jg
aas
and
mov
fstpl
mov
loope
subb
insb
aad
test
inc
push
enter
add
and
or
sub
mov
test
mov
push
dec
sbb
push
pop
sub
lahf
adc
stos
xor
lods
dec
fiadds
push
mov
cli
ss
loope
xor
jge
adc
addr16
mov
xchg
jle
jne
fcmovnb
xor
int
xchg
int
dec
adc
lcall
cli
ja
test
and
icebp
push
mov
sbb
xchg
and
inc
mov
push
cmc
mov
inc
scas
fadds
scas
inc
and
in
cmp
xchg
mov
pop
test
aad
sub
jbe
or
adc
scas
fidivs
fwait
push
test
mov
test
fcoml
push
pop
push
xchg
inc
mov
cmp
out
addr16
cmp
ret
xor
push
add
in
imul
jl
xchg
pop
aad
jmp
push
jno
in
adc
cmc
pop
lds
push
in
lea
jae
pop
out
jg
ficoml
jle
and
scas
clc
adc
adc
aaa
cmc
or
mov
xchg
jmp
xchg
popf
adc
andl
push
jge
test
ret
inc
stc
mov
cmp
sbb
push
dec
ret
je
int3
cmp
ret
or
adc
jbe
test
loopne
xchg
xor
test
sbb
mov
xchg
out
loope
and
les
jb
rcll
stos
dec
jo
and
ss
cmp
fsubl
jnp
mov
inc
sbb
jecxz
push
or
dec
test
xlat
mov
pop
dec
adc
dec
inc
mov
sbb
fcomp
inc
in
outsb
inc
xchg
sarb
pop
adc
mov
pop
mov
dec
push
sub
xchg
mov
mov
adc
scas
lods
mov
stos
insb
xor
jb
and
add
push
test
nop
sub
inc
call
push
push
mov
add
cmp
push
inc
icebp
jmp
mov
test
push
mov
jge
xchg
sbb
les
je
dec
insb
testb
jno
cmp
mov
fdivrs
cs
rcll
std
push
push
cli
ja
mov
adc
jbe
test
cmp
subl
loop
pop
data16
ss
es
test
xor
loopne
push
cmp
add
mov
shl
ret
jns
rorl
lock
xchg
fcmovu
push
pop
je
sbbl
cltd
lret
xor
popa
pop
inc
xor
adc
lcall
mov
xchg
sub
xchg
inc
test
repnz
fldcw
push
lods
dec
hlt
mov
cmpb
inc
fcompl
test
insl
jle
xchg
push
jle
sbb
fldl
pop
push
into
es
outsb
inc
pop
pop
mov
test
sbb
repnz
lods
inc
xchg
enter
fwait
push
in
hlt
cmp
into
mov
push
dec
fildll
pop
cmpsl
xchg
into
leave
repz
sbb
push
jnp
xchg
mov
add
subb
rcl
pop
fsubrp
fisubrs
fildl
or
ret
push
ret
cmp
or
stc
or
push
adc
jns
xchg
iret
mov
cmp
pop
imull
ja
cmpsb
pop
ret
dec
stos
and
jb
sbb
jge
mov
adc
pushf
movsl
in
es
or
adc
add
cmp
push
lahf
sub
cltd
pop
in
sub
in
xor
movsl
sahf
mov
mov
jg
ja
dec
nop
mov
repz
and
dec
ret
mov
xchg
xchg
ds
add
js
push
xchg
or
call
and
cmpsb
test
inc
popa
sbbb
jb
jmp
jge
or
xchg
sahf
mov
jecxz
imul
cmp
xchg
cmpsb
rorb
cmp
outsb
dec
xlat
stos
sub
inc
inc
push
push
mov
cmpsl
lcall
or
xor
mov
call
int
or
bound
xor
dec
or
jns
popa
cli
cld
inc
aaa
in
in
repnz
aas
jl
inc
dec
leave
mov
dec
insb
jmp
in
xchg
sbb
shrl
daa
pop
mov
out
mov
stos
dec
enter
les
xchg
cmp
sub
bound
sub
inc
mov
std
adc
add
mov
dec
push
xchg
test
mov
movsl
push
insb
stc
push
into
lock
pushf
add
jae
rcll
or
push
add
jnp
cmpsl
cmp
xchg
inc
inc
sbbl
pop
iret
fs
shll
mov
fdivl
mov
lods
decl
bnd
push
aas
test
push
xchg
jne
gs
dec
cmp
arpl
inc
xchg
stos
movsb
mov
push
fcompl
inc
sbb
aas
lods
or
sbbl
dec
sbb
test
out
dec
pop
dec
or
push
cli
push
cmp
jae
push
or
jmp
and
out
negb
fs
in
xor
dec
lea
and
fdecstp
pop
test
sahf
sbb
int3
cmpsb
out
pop
cwtl
outsl
loope
push
insl
stc
pop
or
mov
adc
add
push
mov
mov
xor
mov
aaa
push
add
xchg
xor
or
adc
push
add
xor
jnp
mov
or
imul
dec
pop
hlt
and
test
mov
test
inc
push
pushf
into
clc
cmp
cmp
pop
add
icebp
pop
mov
imul
es
dec
xor
ds
add
fildl
fadds
popa
stos
inc
shrl
lock
shlb
repnz
or
xor
rcll
sahf
xor
ret
or
movups
or
add
stos
mov
dec
lret
fisubs
lods
xchg
testb
pop
xor
dec
ror
lahf
test
stc
xchg
mov
push
scas
nop
adc
inc
sti
xacquire
aam
mov
jae
push
cmp
mov
shl
nop
in
iret
cmp
mov
dec
sti
push
sbbl
cltd
pop
sub
mov
lock
cmpl
popl
add
and
xchg
stos
jne
out
pop
sbb
cli
xchg
into
xchg
movl
pop
out
ljmp
loop
js
leave
push
movb
repz
xchg
sbb
sbb
or
sub
dec
rclb
shl
push
das
xchg
cmp
arpl
sub
sub
fimull
orl
and
and
and
je
dec
andb
add
xor
scas
out
mov
xor
mov
cwtl
jo
xchg
xchg
stos
mov
and
or
enter
and
pop
jl
mov
push
sbb
repz
pop
push
out
cmp
jl
loope
push
cmp
lret
das
lds
jne
jg
pop
sub
jle
and
ret
xlat
adc
dec
or
daa
mov
ror
add
sbb
das
imul
stos
pop
enter
mull
lds
mov
lds
les
es
sub
int
aam
xchg
adc
jmp
xchg
adc
cmc
shl
hlt
enter
xchg
mov
pop
dec
xchg
pop
or
iret
cld
jp
rcr
scas
and
mov
xchg
sbb
xchg
dec
push
dec
pop
cs
fidivs
fadds
aam
loope
xor
stos
cmpsl
lods
xchg
xchg
push
rcr
mov
in
cmpb
pop
movsl
pop
sub
je
rol
adc
in
or
mov
pop
sub
cli
pop
dec
mov
outsl
cmp
push
and
ljmp
mov
movsl
xor
sbb
lahf
popa
repnz
mov
int3
fistpll
pop
push
jb
or
mov
mov
pop
xor
xchg
in
mov
mov
sarb
mov
icebp
imul
sbb
push
push
in
test
cmp
and
xchg
jp
es
inc
ss
push
xchg
stos
and
jne
cmp
jns
mov
cmpl
pop
dec
jecxz
and
push
push
sbb
stos
sub
lock
shrl
mov
lcall
in
je
adc
jnp
int3
fstl
xor
or
iret
es
push
jns
ljmp
inc
dec
pop
stos
adc
pop
mov
xchg
ret
jo
shl
out
and
gs
push
enter
stos
mov
push
xor
jp
faddl
or
mov
out
pop
les
lods
sub
aaa
out
in
xchg
dec
mov
sbb
in
gs
inc
scas
xchg
das
int3
sar
jp
repz
dec
push
popf
repnz
gs
aas
sbb
movsl
push
jge
lds
pop
out
mov
push
lods
inc
cwtl
fsubr
cmpsb
xchg
shr
xor
mov
sub
xchg
ja
gs
loop
out
cmp
fstpt
xchg
fcomps
xor
dec
jmp
popf
mov
fisubrs
jns
sbb
jle
lock
mov
mov
aaa
ds
cmp
sbb
xchg
icebp
push
pushf
cmp
frstor
and
mov
cmp
pop
incb
movsb
aas
mov
mov
pop
outsl
xchg
sub
dec
push
in
cs
aas
lods
push
insb
stc
inc
sbb
sarb
icebp
push
mov
pop
adc
enter
pusha
test
and
neg
sahf
inc
int3
inc
test
cs
and
mov
jge
dec
dec
nop
push
pop
mov
mov
sbb
mov
in
stc
mov
cmp
in
nop
insl
aas
or
aas
stos
or
lods
inc
aam
lret
dec
fwait
mov
cwtl
test
mov
inc
out
sbb
ja
push
adc
add
sbb
loop
js
add
sub
stos
imull
shrb
xchg
mov
mov
outsb
mov
insb
push
sbb
cli
fcmovb
jns
fbld
fisttpll
push
cli
sbb
je
or
or
push
ljmp
jecxz
ficompl
mov
clc
mov
push
fistps
lea
xor
out
sub
data16
cmp
inc
dec
mov
pushf
dec
xchg
bnd
inc
or
loopne
mov
sbb
aas
cmp
das
rcll
cs
adc
adcb
test
das
leave
dec
xchg
aad
push
insl
sbb
xor
je
clc
pushf
mov
xchg
js
ret
xchg
popa
into
push
enter
das
int
pushf
test
test
cs
cld
cmp
mov
das
push
push
mov
cmpsb
inc
cld
aas
xchg
cwtl
push
into
cmp
cmpsb
adc
jl
xchg
mov
daa
inc
adc
cwtl
add
loopne
or
imul
out
adc
pushf
sbbl
mov
and
addl
lahf
sub
add
jg
adc
mov
adc
int
add
pop
mov
mov
inc
push
xor
mov
fcoml
int
cmpsb
sub
pop
xchg
adc
jle
into
inc
jg
xlat
daa
aas
enter
xor
icebp
mov
jns
push
cmpb
mov
in
inc
mov
xchg
add
jecxz
mov
repz
repz
jne
dec
mov
in
shll
out
sarl
adc
sbb
cmc
nop
mov
dec
mov
jl
add
roll
add
pop
ja
stc
mov
shlb
test
stos
imull
mov
push
adc
dec
lock
test
clc
out
mov
inc
fisttps
out
inc
dec
or
cwtl
jne
sub
bound
and
into
xchg
inc
pop
pop
insb
sub
pop
xor
sbb
adc
cli
mov
lods
inc
sbbb
call
testl
loope
aas
fnstenv
imul
adc
shll
jno
or
jns
xlat
mov
dec
jp,pt
sub
addr16
in
pop
cmc
xchg
in
jecxz
icebp
mov
dec
sub
test
shl
pop
loopne
pop
nop
inc
push
leave
cmc
rorb
lods
test
pop
mov
jecxz
mov
jecxz
sbb
push
sbb
jl
hlt
lcall
insl
aad
lods
jne
sub
adc
xchg
ret
and
mov
dec
mov
loope
dec
inc
push
xor
xchg
add
arpl
scas
fstl
cmpsb
sub
cmp
mov
ror
ss
pop
adc
js
loope
push
out
xor
fisubl
ljmp
mov
pop
mov
jge
fldcw
fstp
xchg
leave
lds
mov
fists
cs
xchg
loope
mov
es
mov
adc
xor
sti
push
jns
fistpll
add
mov
rol
mov
scas
popf
add
jg
enter
cmp
sub
fstl
idivl
outsb
adc
int3
adc
imul
add
dec
dec
dec
and
dec
pop
es
or
cmp
or
je
and
or
je
inc
jp
aad
jae
test
xor
mov
outsl
adc
fwait
gs
lods
sbbl
mov
ljmp
fildll
or
popa
inc
xchg
fwait
jbe
mov
addr16
and
or
xchg
enter
dec
jno
out
test
xor
dec
lods
testb
mov
in
mov
sub
adc
dec
sar
mov
jp
rclb
adc
daa
dec
fldcw
pop
leave
test
inc
insb
test
pop
aam
and
add
movsb
jle
add
jns
mov
fidivl
sub
mov
ret
jecxz
mov
pop
je
pop
dec
push
popf
ja
lcall
pop
mov
pop
aaa
mov
adc
mov
shlb
ljmp
cmpsl
push
loop
add
in
ja
adc
lahf
aas
adc
fsubrl
inc
sbb
inc
loopne
leave
lods
dec
mov
fs
cld
mov
daa
cvtpi2ps
lea
cmp
nop
fldenv
mov
mov
add
adc
jle
cli
pop
js
xchg
jecxz
repnz
inc
mov
push
xchg
add
mov
outsl
jno
aas
xor
adc
popa
inc
popl
xor
mov
push
mov
cmc
cmp
inc
inc
inc
fsubrl
mov
ja
aam
mov
dec
add
add
rorb
jmp
cmp
rorl
movsb
ret
add
mov
adc
stos
stc
mov
dec
push
push
cwtl
lret
js
adc
aad
pop
rolb
jno
fs
lea
dec
int3
and
push
pop
add
sub
push
add
call
sub
ljmp
push
jge
xor
jo
in
fs
push
arpl
lret
push
and
mov
fucomi
jb
sub
scas
xchg
inc
xchg
or
and
outsl
or
movsb
push
lret
stos
push
sbbb
lds
xchg
movb
nop
incl
rol
xchg
dec
push
andl
mov
xor
cli
pop
push
movsb
rcll
imul
and
or
or
jmp
dec
sbb
fmuls
inc
add
int3
fldenv
jnp
mov
dec
adc
arpl
push
dec
ds
inc
xchg
push
daa
shrb
stos
jmp
int3
push
and
pop
sti
dec
xchg
loope
pop
adc
pushf
cmc
rolb
push
ret
les
jnp
jmp
cs
push
push
sub
cltd
mov
pop
xchg
cmp
sbb
sbb
xchg
int3
add
xchg
adc
or
cvttps2pi
pop
lret
popa
addr16
mov
cmpsb
jb
lods
sub
icebp
add
inc
xor
xchg
adc
xchg
xor
outsl
scas
gs
inc
loopne
loopne
pop
mov
jae
push
sub
pavgb
jo
push
ljmp
jno
cmovo
cmp
rcrb
pop
sbb
mov
mov
popa
mov
in
popf
es
and
sub
out
js
test
movsb
inc
cli
sahf
shrl
mov
cld
outsl
jne
div
and
or
or
leave
cmp
pop
int
test
xor
test
loop
lahf
or
lcall
push
sbb
sbb
fmul
pop
pushf
adc
daa
scas
pop
in
dec
push
fdivl
cs
sbb
testl
or
inc
clc
jg
jecxz
sti
mov
ss
dec
movsb
out
inc
out
xchg
inc
and
mov
sbb
pop
loope
ss
pop
dec
lods
cs
pop
jo
sbbl
mov
add
pop
outsb
frstor
mov
xor
dec
movsl
dec
pop
cmpsl
xchg
cli
xchg
add
mov
cmpsl
jmp
pop
push
in
jb
cmp
pop
sub
das
outsb
in
xchg
mov
and
sub
add
fcomp
mov
fdivs
aam
pop
add
push
out
scas
outsl
xorl
adc
or
push
xchg
push
repnz
lcall
fs
cmp
xchg
in
clc
test
imul
shrb
inc
mov
sti
popl
fst
in
ljmp
add
inc
fdivl
jo
loopne
sbb
ljmp
mov
pop
in
orb
push
movsb
push
and
test
popf
sub
and
mov
add
cwtl
loope
mov
les
cwtl
decb
rorl
hlt
test
add
dec
mov
insl
dec
cmp
push
loopne
arpl
movsl
push
lock
cmp
enter
enter
mov
pop
push
and
fcmovne
push
mov
or
mov
inc
mov
ds
cs
pop
dec
adc
sbb
addr16
mov
inc
or
and
cld
push
in
pop
lret
push
pop
ret
sbb
jmp
add
mov
mov
mov
or
sub
xorl
xor
push
fmuls
stc
xlat
data16
and
popf
aad
arpl
mov
sub
cmp
repnz
add
daa
inc
aaa
or
fwait
xchg
popf
pop
ficoms
xchg
fcoml
fwait
mov
cli
jge
clc
jg
adc
push
xor
jmp
lods
inc
fldl
cmp
mov
mov
pop
lret
inc
sbb
rcrb
xor
stos
sti
cmp
outsb
and
inc
jle
mov
lds
movsl
push
pop
or
sti
pop
insb
inc
mov
jo
cmpb
inc
jnp
push
sbb
cmpsl
popw
arpl
scas
scas
ss
ret
hlt
outsb
or
cli
add
cmpsb
loope
mov
cli
rcll
jb
sahf
adc
cli
stos
jnp
mov
sahf
mov
jno
shlb
dec
mov
push
push
cmp
dec
lahf
ja
enter
pop
mov
pushf
test
pop
xchg
hlt
dec
sub
mov
inc
insl
push
jmp
jae
clc
push
cmc
push
in
out
mov
dec
and
adc
add
pop
stc
jb
mov
shrw
xchg
les
mov
sbb
loop
or
lret
push
shr
in
dec
cmpsl
jns
insb
mov
cmpsl
mov
popf
adc
out
jge
add
pop
cmp
das
sub
pushf
aad
movsb
outsb
adc
outsl
xchg
out
sbb
lock
stos
ficoml
lods
push
jge
lret
stos
cmp
mov
mov
jne
cmpb
push
jg
jne
js
ss
cmp
cs
vmread
cmp
cmpsb
push
cltd
xchg
hlt
jae
test
xchg
ret
dec
in
push
push
cmpsb
pop
movsb
inc
sahf
aam
mov
aaa
fwait
ret
cs
cmp
xlat
subb
repz
inc
icebp
movsl
pusha
jno
outsb
add
pop
movsl
dec
sahf
fmuls
icebp
push
cmp
in
push
insl
jl
int
rolb
inc
lea
mov
fildl
es
loope
pop
scas
xor
btc
or
test
nop
push
xchg
orb
aad
repnz
jnp
movsb
cmpsb
or
adcb
and
and
ss
mov
stos
lds
xchg
repnz
sbb
rcrb
sub
push
mov
adc
xor
shll
jnp
push
push
xchg
inc
sbbb
shlb
daa
mov
out
adc
dec
subl
clc
mov
mov
add
lock
loop
test
mov
les
mov
imul
inc
push
push
mov
je
sub
push
out
lea
xchg
mov
jmp
pop
imul
lods
lret
inc
ljmp
adc
jg
lds
addb
add
push
add
mov
rolb
lret
jne
sbb
movsb
xchg
sbbl
jl
mov
es
jno
test
pop
mov
push
rcrb
inc
sbb
std
jo
mov
push
sbb
imulb
xor
jmp
cmp
ds
sbb
cmp
shl
xchg
icebp
in
inc
cltd
dec
mov
ds
jge
sti
mov
aas
call
jbe
jb
mov
lods
jbe
cwtl
cmpsb
add
add
xor
or
test
mov
xchg
clc
nop
mov
sub
xchg
pop
mov
loopne
jg
sub
das
je
mov
ret
push
add
sub
inc
orb
lret
xor
mov
inc
adc
test
clc
mov
daa
push
pop
sbb
subl
inc
js
ss
add
push
outsb
fimuls
pop
sub
add
inc
dec
and
into
adc
cltd
ljmp
in
gs
sahf
and
cld
aaa
fistpll
push
lods
push
pusha
insb
das
ss
pop
mov
cmpsl
dec
mov
in
mov
push
imul
ds
notb
xchg
jbe
addr16
cmp
and
clc
mov
fsts
mov
fnstenv
adc
ss
push
leave
mov
pop
add
in
mov
aad
movb
adc
gs
mov
jle
or
enter
jle
xchg
je
lret
adc
mov
arpl
imul
pop
and
inc
fsubrl
out
jp
inc
icebp
jb
outsl
sbb
mov
xchg
out
in
stos
mov
cmpsl
inc
fimuls
nop
mov
xchg
divl
mov
xchg
and
xchg
dec
mov
and
lret
movl
dec
sbb
or
fdivrs
inc
aaa
int
add
fnstenv
ret
sar
mov
push
mov
mov
sub
push
mov
xchg
imul
imul
jo
sarb
iret
jns
mov
fsub
xchg
adc
or
jnp
sub
sbb
xchg
add
xchg
call
and
and
aad
cmp
testb
dec
leave
mov
sub
and
dec
rorl
and
inc
mov
dec
rcl
sub
pushf
push
pop
nop
push
adc
das
fbstp
fcompl
xorb
sbb
fcoml
push
adc
int
lahf
push
fwait
in
sti
push
push
push
lock
stos
jecxz
pop
jmp
loopne
std
leave
pop
rorl
inc
popf
mov
dec
push
push
pop
cmp
int3
and
sarb
fsub
pop
loopne
mov
and
dec
dec
jne
sbb
fiadds
pop
xchg
test
push
xorl
ljmp
add
imul
popf
sub
or
cmpsb
and
xorl
sbb
pop
inc
es
cmp
jmp
lret
cmp
in
pop
jb
mov
mov
sub
cwtl
push
push
enter
insl
adc
lods
repnz
fildl
inc
adc
adc
dec
sbb
and
pop
mov
xor
subl
paddw
inc
cmp
jb
mov
pause
es
mov
in
or
cmp
cmp
mov
inc
filds
xlat
jg
shlb
cmp
push
les
pop
push
in
mov
popa
imul
push
dec
xchg
xchg
test
fidivrs
addb
mov
loop
into
jecxz
stc
fidivrl
push
and
adc
enter
sahf
lahf
cmp
jne
mov
sub
mov
push
jge
aad
stos
cmp
out
jb
mov
imul
or
popa
dec
subl
jns
rcrl
cmpsb
cwtl
mov
jmp
clc
sbb
shl
enter
addb
repz
jo
fxtract
dec
and
add
push
sbb
out
inc
sub
aaa
and
cmc
cli
mov
cmpsb
sub
and
sub
cwtl
stc
dec
stos
lcall
mov
adc
in
cmp
aas
daa
jecxz
xchg
rcl
pop
or
iret
in
movsb
arpl
xchg
sub
pop
dec
adcb
ret
sub
int3
sbb
inc
outsl
mov
loop
clc
cmpsl
mov
mov
loopne
stc
mov
pop
adc
jnp
repz
mov
push
sbb
xor
jb
into
inc
lahf
dec
xorl
sbbl
mov
lcall
gs
push
and
stc
sbb
sub
cmp
xor
enter
adc
xor
jns
push
loope
das
pop
cmovne
mov
xor
mov
push
shld
sbb
mov
sbb
push
cmp
xchg
rorb
jecxz
mov
push
xlat
dec
cmc
fs
pop
je
fidivs
cltd
cmpsl
movsl
std
idivl
xor
xchg
jmp
shrb
test
xchg
lea
negb
call
icebp
mov
sbb
jl
push
outsb
fwait
shll
js
mov
data16
aas
dec
or
cmp
icebp
aam
or
std
cmp
sbb
fdivl
in
stos
jne
in
inc
mov
pop
sbb
mov
test
cmpsb
xlat
jg
mov
mov
xchg
sbb
push
out
sbb
in
pop
sti
and
or
or
pop
in
ret
sti
ss
ret
insb
push
outsb
pusha
dec
scas
enter
jae
stos
mov
int
dec
jle
out
lea
sub
push
ja
jno
xorb
sahf
sahf
xchg
loopne
test
dec
bound
and
xchg
mov
dec
jp
cld
sbb
pop
pop
movsbl
mov
add
daa
xchg
addb
adc
daa
push
jne
fdivrl
fstps
mov
pushf
xor
pop
cmp
or
std
cmp
adc
mov
in
ljmp
lods
test
jae
lock
bound
aad
add
dec
les
jg
add
leave
loopne
push
lods
imul
testb
lahf
mov
imul
fnstsw
and
dec
inc
jl
xchg
jmp
cwtl
jl
push
rorb
push
stos
dec
jp
std
pop
or
jb
cli
int
imul
xchg
or
jne
jns
test
cwtl
sbb
or
add
int
adc
or
dec
or
push
or
and
ljmp
cmpl
cmpsb
ficoms
fprem
icebp
jle
cli
lock
sbb
hlt
loopne
outsb
hlt
ljmp
test
insb
pop
mov
ret
xchg
lcall
lret
inc
or
stos
add
push
iret
es
flds
fdivrl
mov
aaa
orl
adc
sbbl
ds
jge
sub
dec
nop
mov
sub
cli
mov
fistpl
test
jl
jns
loopne
fisubrs
rol
cmp
or
dec
jp
pop
rclb
out
pop
mov
push
xchg
dec
push
push
pop
sub
xor
push
and
sbb
mov
fimuls
or
xor
shrl
fmul
or
lahf
add
xor
or
push
jmp
aaa
adc
pop
addr16
fstpl
inc
jp
ds
loopne
test
into
in
and
rcrl
cld
mov
hlt
dec
jg
movsb
pop
insb
sbb
lea
cmc
jo
mov
pushl
movsb
pop
test
adc
push
inc
lcall
xor
insb
sarl
adc
jb
add
cmp
into
xchg
push
pop
mov
sbb
push
xor
enter
fidivrl
fstps
sub
push
fs
cmp
add
mov
pushf
pop
mov
push
inc
mov
cmp
mov
rcll
lds
sub
sub
sbb
mov
data16
xor
call
jb
sub
int
inc
das
jbe
xor
adc
add
mov
sub
outsb
and
cmp
xor
cs
mov
out
shlw
icebp
ljmp
mov
mov
cmpsl
jne
mov
jnp
outsl
call
mov
xchg
mov
jg
clc
cli
into
leave
movsb
cltd
sbb
pop
test
in
inc
shrl
or
adc
and
mov
xchg
jmp
inc
ficoms
mov
add
in
adc
sbb
adc
xchg
scas
ljmp
sub
test
or
es
loop
sub
in
adc
mov
aad
mov
mov
mull
rol
rcll
dec
stos
sbb
fldcw
xor
je
enter
xor
ja
inc
insb
rcrl
push
jge
and
jae
movsl
jp
pop
mov
xchg
xchg
jns
sbb
cltd
adc
clc
jle
adc
xchg
adc
or
or
and
pop
push
push
mov
and
fisttpll
jmp
sub
pop
or
shl
pop
mov
out
jmp
jle
rorl
test
cmp
adc
xchg
imul
dec
scas
inc
fstp
les
inc
sbbl
movsb
shll
inc
jbe
mov
xchg
lods
sti
insb
in
mov
push
movsl
inc
repnz
push
add
mov
mov
jo
jnp
mov
int
sbb
hlt
fwait
cltd
fdivrl
push
int3
pop
pusha
add
les
xchg
dec
sub
or
sbb
nop
rorl
imul
mov
lods
adc
mov
sbb
or
adc
sti
xor
push
jmpw
addr16
sbb
or
cmp
or
loope
jl
jo
mov
stos
es
mov
pop
or
fisubl
mov
or
jge
add
xchg
fdivs
bound
gs
jecxz
or
in
fisubrl
sbb
xchg
cmp
rcrb
push
js
in
ret
pop
xor
mov
psrad
cmp
lahf
xor
mov
fcomps
ror
insl
arpl
mov
push
lcall
test
cmc
js
fdivs
push
fnstcw
testl
xchg
adc
aam
into
xchg
ljmp
cmp
mov
mov
inc
pusha
daa
daa
popa
das
fwait
lods
cmpb
aam
adc
sbb
fucomip
jmp
out
je
mov
fsts
orl
mov
dec
fs
dec
loopne
sar
setae
scas
xor
pop
mov
nop
sbb
or
iret
add
mov
mov
sbb
clc
and
mov
cmp
mov
mov
sub
xchg
dec
sahf
push
sbb
push
cmp
leave
movaps
js
xchg
fwait
divb
cmc
sbbl
lods
scas
adc
inc
jno
push
inc
xchg
add
in
insb
test
stos
sarb
pop
xchg
sti
jl
cmp
lahf
addl
outsl
repnz
jl
call
cli
pop
and
push
dec
xor
dec
roll
jle
mov
cmpsb
scas
loop
lret
sub
mov
loope
pop
fdivrl
nop
dec
xlat
mov
hlt
popa
jecxz
loope
mov
sub
mov
repz
fdivrl
cmpsl
or
idivb
aad
or
lock
mov
add
int3
bound
or
out
rep
push
bound
inc
mov
mov
jns
bound
push
mov
xor
adc
aas
and
dec
jl
sbbl
fstpl
jne
int3
andps
xchg
jno
or
loopne
push
lcall
jg
mov
xchg
js
ss
imull
push
stc
in
add
aaa
xchg
jnp
lock
pop
insl
adc
adc
mov
mov
mov
lea
jl
mov
mov
movsl
scas
rolb
rcl
mov
rcrl
xor
adc
xor
sbb
xchg
scas
dec
dec
inc
lcall
fst
pushf
ljmp
mov
xlat
push
sahf
adc
sub
push
sub
inc
or
and
inc
ja
sub
sub
lock
jb
pop
lea
jae
xorb
es
push
bound
xor
out
aam
jo
push
mov
jno
popa
sbb
xchg
or
push
mov
ss
pusha
bound
mov
daa
push
push
ljmp
out
mov
xor
push
ja
repz
je
lcall
std
pop
mov
add
cmc
mov
insl
mov
fcomip
jno
pop
lods
xor
jl
push
adcb
mov
sbb
test
aad
es
xchg
push
jmp
jecxz
xchg
xchg
xchg
push
dec
xchg
or
and
clc
in
xor
add
xor
popf
adc
addl
jb
and
adc
cmp
xchg
mov
shll
mov
out
pop
push
dec
xor
jecxz
sarl
das
sub
pop
movsb
sahf
fists
jge
in
xor
pushf
lds
arpl
ds
outsl
aas
push
dec
pop
in
mov
or
dec
adc
cli
xor
dec
mov
add
std
sub
notl
dec
dec
xlat
mov
mov
std
push
bound
je
lods
add
sub
adc
add
roll
xor
sti
je
cmp
jecxz
dec
and
mov
ret
daa
imul
mov
stc
in
lahf
sbb
and
je
ret
pushf
jl
pop
inc
fnsave
lds
jmp
inc
push
add
cltd
add
addr16
or
cmp
push
mov
jl
push
in
jo
mov
cmpsb
mov
jmp
loop
rcrb
inc
lods
enter
dec
loopne
in
mov
daa
test
shr
sub
outsl
pop
mov
es
or
dec
xchg
xor
mov
jmp
or
inc
inc
int3
jmp
scas
lods
bound
fs
mov
pop
daa
out
inc
xchg
or
lods
sub
adc
xorl
mov
pop
subl
sbb
mov
mov
ja
out
insl
mov
xor
sbb
xchg
adc
sbb
lahf
lds
fstps
pop
scas
add
jae
test
xor
fisttpl
jecxz
mov
movl
shl
imul
mov
and
mov
push
cld
shr
std
xchg
xchg
divl
aaa
imul
cli
pushf
sbb
push
mov
fwait
jbe
loope
push
lea
add
add
push
fstpl
hlt
push
mov
push
mov
cwtl
jmp
adc
and
pop
jecxz
add
sti
enter
jge
arpl
mull
testb
mov
jne
push
pop
jl
hlt
into
jg
pop
or
and
mov
sbb
aad
outsl
sub
mov
mov
or
mov
xchg
es
incl
mov
ret
orb
push
movsl
daa
mov
lods
and
cltd
jle
cmp
enter
insb
jg
subb
dec
icebp
loopne
jecxz
dec
aas
fdivs
cmp
pop
cmpsl
in
or
inc
push
push
sub
fidivrl
aad
nop
or
mov
test
scas
and
in
inc
pop
jmp
stos
sbb
fisttpll
sarl
fwait
jl
xchg
in
in
cmpsb
dec
loopne
rcrl
popa
out
and
jnp
ds
add
sbb
inc
fcomps
daa
add
movl
into
sahf
cmp
inc
jo
jecxz
cmpsl
sbb
sahf
ljmp
jo
pop
fcomip
jmp
andb
mov
repz
das
fmulp
add
add
sub
imull
mov
icebp
outsb
mov
out
popl
push
or
cmp
insb
mov
scas
pop
and
xlat
push
cmpsb
sub
or
pop
push
dec
push
out
dec
icebp
push
or
xorb
jb
jge
cmp
push
jne
jns
stc
xor
into
test
gs
dec
stc
mov
repnz
addr16
out
lcall
ljmp
scas
dec
das
aad
dec
out
jbe
sub
mov
stc
mov
add
mov
mov
push
divl
jno
icebp
popf
out
push
push
add
xchg
dec
add
mov
push
xor
inc
js
mov
stos
push
cmp
clc
in
mov
cmp
sub
jecxz
and
pop
dec
repnz
int
mov
in
test
xor
and
rcrb
loope
addr16
mov
mov
aam
mov
pop
icebp
nop
call
jbe
daa
push
aad
push
aad
scas
sub
outsb
lods
mov
repz
out
movsb
popf
test
std
mov
and
inc
xor
mov
add
jg
pop
xchg
cmp
out
in
sub
jg
popf
sbb
jg
fadd
adc
out
jae
mov
cmc
adc
sub
xor
shlb
leave
lods
add
lods
sub
mov
adc
dec
jg
push
adc
mov
mov
fwait
adc
ss
mov
rclb
addr16
dec
sbb
orl
lods
js
insb
andl
sbb
jmp
inc
test
inc
jbe
and
cmp
push
out
lock
mov
pop
fidivs
mov
repz
pusha
pop
fbld
mov
push
dec
pusha
lret
jbe
pop
gs
jns
les
sub
lods
dec
jbe
stos
out
mov
jo
and
stos
movb
mov
js
loop
jl
push
push
xchg
mov
das
push
pop
mov
aad
stos
sbb
add
xor
mov
jns
out
fstpl
jo
mov
shr
jae
add
cs
test
mov
stos
xchg
xchg
push
incl
ret
mov
cs
in
xchg
loop
lahf
imul
into
daa
pop
stos
ds
in
pop
inc
push
mov
aas
pop
mov
sub
rclb
mov
sub
ror
mov
fildll
pop
aad
sbb
lcall
adc
jp
xchg
leave
xchg
push
mov
lcall
dec
fstps
test
xchg
or
fst
fnstcw
fbstp
outsb
push
rcrb
and
into
jnp
icebp
repnz
pop
push
mov
mov
pop
cmp
jecxz
jp
inc
dec
inc
loopne
lahf
in
cltd
popf
addr16
mov
pusha
add
testl
loop
xchg
aam
xchg
sbb
notb
and
in
cmpsb
shrb
ret
adcl
insb
sti
es
add
xchg
xlat
enter
lahf
mov
imul
sbb
adc
insl
stos
pop
mov
push
xor
cwtl
dec
mov
jmp
mov
mov
xchg
xor
repz
mov
sbb
dec
loopne
pop
xor
lcall
or
test
cmp
jo
insl
push
neg
lret
dec
out
adc
lea
jle
cld
inc
adc
push
cmc
sub
sub
push
pop
lahf
adc
jl
inc
cli
cld
mov
scas
inc
push
pop
jmp
or
notb
cmp
pop
cmp
je
sbb
xor
jno
in
gs
lcall
or
ret
fucomip
jl
js
inc
jecxz
push
cmp
dec
int3
mov
fs
setl
sub
add
ror
sub
lds
in
invd
inc
xor
add
or
push
test
jne
aam
dec
xor
outsl
inc
loopne
fadd
xchg
jl
loopne
jns
lret
in
xchg
push
daa
mov
dec
loopne
adc
ja
popf
cmpsl
xchg
rorl
lret
xchg
push
lds
stos
mov
lahf
jbe
and
es
out
push
andl
rcl
outsb
fimuls
das
xor
ljmp
cmpsb
fsubp
ja
jl
leave
test
adc
icebp
inc
sub
stc
pop
jno
push
ljmp
loop
testb
xchg
nop
sti
and
gs
loopne
imul
loop
or
shll
and
mov
clc
loope
mov
push
aaa
cmc
xchg
loope
cmpsl
xchg
jge
pushf
push
add
and
imul
push
fmull
bound
or
fxsave
aam
fisubrl
sbb
std
push
pushf
mov
sbb
mov
call
aam
mov
call
mov
jo
mov
in
push
pop
faddp
ds
xlat
ss
into
push
pop
fldl2t
pop
bound
mov
sbb
bound
fstl
ja
mov
aas
cmc
ret
sahf
cmp
adc
loope
mov
xchg
lcall
fistpl
ljmp
lahf
loope
hlt
loop
test
into
sub
mov
adc
outsl
and
xor
rcl
pop
ret
sub
cmp
pusha
inc
andl
dec
sub
popf
xchg
call
adcb
push
sub
clc
or
shlb
gs
pop
arpl
and
dec
and
or
xorl
xchg
test
xor
and
mov
or
rcr
shl
test
mov
movzbw
movzbw
mov
bsf
adc
bswap
add
cmp
call
lods
test
inc
and
bound
cmp
jb
sbb
xchg
out
push
js
jns
sub
mov
lret
mov
xlat
xor
enter
lods
sti
mov
cmc
mov
pop
gs
jo
out
mov
xchg
dec
xor
ret
inc
jns
jmp
lcall
mov
add
sbb
xchg
mov
mov
stos
cmc
xchg
aad
int
cltd
inc
ss
mov
pop
stos
push
push
mov
mov
mov
shl
lea
call
adc
sub
jne
mov
sub
pop
pop
ret
add
push
gs
gs
popa
insb
jne
inc
js
add
inc
inc
and
dec
adc
daa
mov
pop
and
notb
adc
movsb
pop
jecxz
int
loopne
fiadds
mov
or
mov
jmp
cld
push
nop
clc
and
push
es
in
add
out
lea
mov
sub
cmp
adc
call
push
push
dec
inc
dec
xor
cs
insb
add
nop
xchg
push
add
and
incl
and
cmpsb
fdivrl
pushf
sarb
mov
lods
data16
adc
clc
xor
mov
popf
nop
sbb
daa
adc
lahf
dec
xchg
inc
fwait
out
pusha
dec
lock
xchg
pop
push
out
in
xchg
jle
sbb
cltd
push
sbb
pushf
in
repnz
incl
mov
shrb
push
pusha
xchg
adc
iret
cld
or
jmp
sbb
mov
dec
xchg
inc
inc
and
pop
insl
and
or
xor
xor
sbbl
ret
dec
clc
dec
fidivrs
add
lret
jbe
push
cmp
xchg
loopne
mov
lret
jge
jecxz
jae
adc
push
cwtl
outsb
fsubl
xchg
inc
mov
mov
arpl
xor
lds
push
push
or
xchg
in
mov
stos
aam
test
int3
lahf
shl
pop
mov
fadds
pushf
call
lea
je
call
sub
neg
sub
add
xor
test
mov
shl
sar
sub
shr
mov
push
mov
clc
repnz
pushl
call
cmc
bsf
xor
pusha
pusha
pushf
xchg
mov
pushf
seta
mov
mov
mov
pop
movsbw
bswap
mov
movsbl
call
aaa
lea
inc
and
cmp
xor
imul
sub
mov
fisttps
repz
test
mov
lods
mov
push
icebp
mov
xchg
xchg
clc
inc
dec
mov
out
mov
pop
mov
sqrtps
in
or
jp
addr16
mov
les
push
cld
add
jecxz
jecxz
jecxz
mov
mov
mov
jecxz
test
pusha
pushf
xchg
pushf
lea
jae
pusha
cwtl
lea
bswap
xchg
setne
mov
mov
lahf
mov
pushf
movsbl
bswap
call
xlat
insl
mov
inc
and
inc
and
data16
sub
push
push
xor
in
sub
loopne
jne
push
ja
mov
call
outsl
inc
lahf
aam
adcb
xchg
aad
fists
cli
lret
test
jne
jp
clc
in
subl
mov
sub
mov
pop
or
test
ja
iret
xchg
std
mov
pop
in
lret
lahf
jo
xor
mov
push
push
add
push
pop
add
sbb
push
mov
jle
jns
mov
add
add
call
add
push
imul
outsl
dec
jne
je
inc
jns
add
and
loopne
test
lock
pusha
les
hlt
xchg
push
test
adc
insl
pop
jne
stos
jp
lret
icebp
fdiv
cltd
lock
loop
pusha
jne
ja
jo
ds
mov
jmp
imul
lock
pushf
pop
mov
xchg
dec
adc
in
jge
cmpsl
or
in
or
jle
xchg
cs
push
imul
aam
negl
and
bt
test
call
pop
je
inc
inc
and
xlat
mov
popf
out
cmp
ret
cmp
mov
mov
adcb
inc
push
pop
cmp
ljmp
stos
lahf
xchg
mov
data16
dec
xor
pop
jbe
int
test
sub
pop
aas
xchg
roll
push
jl
lods
lods
mov
test
subl
scas
lahf
cmpl
xorl
add
movb
mov
jmp
adc
mov
push
pushl
pushl
ret
int3
push
lea
and
dec
push
xor
pcmpgtw
inc
xor
xchg
jmp
jge
xchg
add
mov
fsubrl
inc
xchg
cmpsl
cmp
repnz
jo
push
and
and
jmp
inc
aam
dec
adc
fildll
xchg
mov
cs
jne
pop
or
or
out
lret
rcll
sbb
sbb
push
movsb
adc
and
insb
ret
js
cmpsl
and
mov
into
cmc
add
add
rorl
cmp
push
add
nop
flds
lea
jle
pusha
pushf
xchg
mov
mov
pushl
call
pusha
mov
not
pushl
push
mov
jmp
not
jmp
mov
jmp
out
cmpsb
push
inc
inc
and
test
lea
movsl
jmp
lret
cltd
mov
adc
cmp
arpl
mov
cltd
push
mov
ret
xchg
ljmp
push
sub
mov
inc
xor
data16
sahf
shll
lock
mov
sub
ficoml
xchg
outsl
hlt
ljmp
fs
inc
pop
and
lods
dec
nop
imul
mov
mov
mov
or
fistpll
lret
aas
jmp
dec
xchg
dec
inc
inc
and
add
push
sub
add
or
dec
add
xchg
jge
push
sbb
shrb
lcall
fwait
dec
jae
std
cmpb
fucomi
out
into
test
cmp
jp
adc
pop
or
dec
inc
cmp
daa
jne
out
adc
daa
push
mov
push
jb,pn
pop
mov
xchg
cmp
into
icebp
fmulp
or
jae
pop
sbb
push
add
pusha
sub
jmp
add
push
pushf
lea
jmp
sub
and
mov
call
sti
dec
lds
cmp
jne
pop
in
mov
nop
or
pop
sub
pmuludq
sub
xor
mov
push
hlt
adc
dec
adc
sbb
add
call
adc
inc
pop
pop
or
inc
addr16
cmp
hlt
imul
outsl
ret
xchg
imul
mov
push
lea
je
seta
lea
push
lea
call
call
mov
and
mov
ror
mov
fisubl
mov
xlat
cmp
inc
into
jae
xor
pop
sbb
ljmp
icebp
inc
dec
fdivl
sub
mov
rcrb
loop
sahf
dec
icebp
popf
or
pop
xor
sub
jnp
fsts
cld
inc
subb
push
and
add
insb
ja
dec
sbb
dec
int
xchg
icebp
xchg
lods
inc
pushf
lea
pusha
jmp
jmp
mov
btc
mov
call
es
fmull
and
and
jbe
bound
cmp
cmp
dec
push
mov
pop
out
test
stos
cmpsb
rorb
dec
fists
std
mov
adc
stos
jp
or
daa
or
cmp
xchg
xchg
pop
aas
mov
lret
andb
fsts
test
dec
cmp
add
sbb
pop
out
cmove
jl
jne
fldt
inc
leave
mov
pop
movl
call
mov
lea
call
cmp
add
neg
pop
push
sar
mov
pushf
mov
stc
clc
pusha
cmp
pushf
push
call
enter
inc
and
xchg
lock
int3
mov
lods
out
subb
cmp
es
nop
mov
fdivr
pop
push
inc
dec
mov
cmp
popa
dec
divb
add
fadd
imul
lahf
sti
add
xchg
jp
inc
sbb
sti
insb
orb
addl
test
jmp
cmpsl
push
lahf
cmp
sbb
inc
mov
mov
pusha
mov
fldl
ret
lods
xchg
das
jno
and
lea
jb
stc
stc
cmp
btc
mov
cmc
add
btr
not
mov
stc
clc
pusha
mov
shr
jmp
mov
push
adc
push
sub
or
pusha
dec
daa
outsb
sub
push
ret
push
inc
mov
jmp
fistl
enter
test
pop
sbb
add
notb
or
lcall
mov
mov
xlat
and
mov
pop
pop
jbe
ret
inc
and
data16
inc
es
or
mov
adc
scas
mov
mov
pop
and
dec
add
rclb
inc
inc
das
mov
dec
jo
pop
jl
mov
adc
repnz
push
rcll
pop
pop
cmp
aas
mov
cmc
filds
or
bnd
cmp
outsb
push
xchg
clc
daa
outsl
mov
mov
iret
leave
inc
nop
mov
sbb
jae
inc
or
inc
insb
shll
sub
mov
rclb
fs
pushf
lea
jb
push
xor
call
mov
lea
pusha
lods
cmp
push
call
lea
jne
lahf
setae
mov
call
lea
pushf
call
pushl
lea
call
shrd
add
rol
adc
not
neg
pop
not
pop
pushf
push
cmc
test
cmp
call
jmp
jmp
pushl
jmp
sub
neg
lea
bt
bt
sub
jmp
bt
pushf
add
pushf
pushf
lea
jns
pushf
lea
call
addr16
and
and
js
insb
and
dec
push
sub
pop
sub
nop
addr16
and
repnz
mov
mov
or
addr16
jecxz
jae
pop
pop
sub
inc
inc
clc
popf
jae
pushf
add
aam
sbb
jg
fldt
xchg
int3
cwtl
or
xchg
or
pop
js
fsub
adc
sub
ss
aaa
into
sub
fs
xchg
fdivrl
ljmp
mov
lods
loop
cli
loope
sbb
xchg
movsl
sbb
in
mov
jnp
inc
and
pop
cmp
cmp
sbb
outsb
dec
ror
inc
add
lret
pop
or
aam
pop
xchg
mov
pop
pushf
xorl
jl
mov
sbb
cwtl
ret
mov
loop
jno
xchg
pop
stos
mov
mov
and
sub
pop
pop
pop
sbb
sub
push
stc
das
ret
aam
sbb
sub
sbb
inc
and
icebp
mov
cmpsl
cltd
shll
ret
gs
sbb
je
jg
clc
int
adc
adc
xchg
dec
ss
dec
cmp
xor
and
push
inc
add
out
mov
add
movsl
test
pop
bt
cmp
clc
repnz
pusha
call
btc
pop
shl
pusha
rcl
mov
pusha
setge
shld
test
mov
sbb
mov
aam
bsr
shrd
mov
cwtl
mov
movw
call
call
jmp
or
je
outsb
pop
data16
je
pop
je,pt
cmp
mov
pop
loope
mov
aad
jmp
mov
cmp
in
fisubrl
adc
int3
mov
dec
dec
push
xorl
jge
das
mov
decl
rcrb
xchg
push
scas
outsl
lods
cmpsb
or
pushf
add
aas
aaa
lods
xor
imull
pusha
or
push
aas
push
sbb
push
push
sbb
jmp
push
pop
mov
mov
push
mov
jmp
lea
jae
cmp
cmp
test
sub
not
pushf
pop
lea
call
testl
scas
lods
repnz
hlt
mov
shlb
xchg
aas
xorb
ljmp
mov
push
mov
std
daa
pop
push
jg
cmp
or
push
inc
stos
fcmovbe
sub
or
fimuls
stos
mov
lds
mov
int3
shr
movsb
or
lcall
and
inc
btc
mov
call
pop
jno
dec
inc
and
lret
mov
test
mov
inc
out
xor
xchg
jl
push
bound
mov
mov
cwtl
xchg
mov
test
dec
or
mov
mov
std
orl
repnz
mov
pop
imul
pushf
fcmovnbe
mov
push
mov
je
std
stos
mov
bound
cmpsb
in
sahf
lret
mov
cld
mov
sti
mov
push
std
shlb
pop
pop
pop
and
dec
inc
and
addr16
add
jg
sqrtps
loope
inc
insb
int3
add
adc
mov
ja
mull
mov
test
xchg
sub
and
lock
outsb
nop
ljmp
sahf
and
cli
pop
nop
js
aam
add
sbb
out
mov
push
lods
mov
sub
adc
gs
xor
dec
sbb
lahf
ret
fidivl
push
add
lods
dec
inc
and
fsubl
shlb
inc
inc
add
mov
loop
and
test
das
mov
adcb
jne
add
and
ret
cltd
aaa
lods
cmp
pcmpgtw
adc
xchg
lds
loop
sarb
mov
xlat
nop
cmp
mov
adcl
stc
movb
pushf
cmp
call
movl
mov
pushl
popl
pushl
pushl
ret
sub
test
shl
test
jmp
stc
cmp
mov
pushf
pushl
pushf
lea
ja
lea
call
movw
jmp
rol
not
btc
rcr
push
dec
mov
aad
aas
daa
rcl
sub
ror
push
cwtl
push
pusha
mov
or
aam
mov
bsr
mov
cmc
cmp
cmc
test
pushf
pushl
pusha
movb
lea
je
btc
btr
shr
mov
pushf
add
ror
mov
mov
test
clc
test
pushf
push
mov
pushf
lea
je
and
mov
btr
bswap
add
sbb
jmp
pusha
lea
jb
push
cmpb
mov
mov
call
push
movb
jmp
mov
mov
lea
jnp
push
push
lea
jb
bsr
aam
cmp
jmp
addr16
and
lcall
aam
clc
hlt
std
xchg
and
add
mov
aas
jbe
sub
xlat
aaa
mov
mov
adc
popf
pop
sbb
push
or
mov
insl
idivl
repnz
idivb
cld
ret
mov
sub
dec
push
push
rcrl
clc
inc
les
mov
or
outsb
jge
bound
xor
jecxz
fwait
shr
mov
inc
and
push
dec
lea
jne
rol
sub
cmp
bsf
pushf
mov
pushl
pushf
and
add
push
pushl
mov
movw
clc
push
jmp
cmp
ret
test
jmp
fwait
stc
mov
ds
jbe
xchg
pop
sub
lds
stos
adc
and
ljmp
xchg
rol
push
fmull
insl
sub
sub
int3
enter
aas
xorb
repz
sub
js
out
push
jmp
mov
ss
adc
pop
pop
sub
les
jnp
jle
sbb
ljmp
in
arpl
pop
push
xor
dec
inc
out
adc
jo
test
stc
not
clc
test
cmc
xor
call
push
call
jne
jmp
bswap
mov
pushf
call
pusha
bswap
bswap
xchg
lea
mov
xchg
mov
push
lahf
mov
pushl
lea
mov
mov
pushf
lea
call
clc
pusha
pushl
stc
cmp
push
sbb
push
bt
cmc
lea
pushl
mov
bsr
or
cmc
shr
mov
pushf
xadd
clc
lea
shr
call
add
push
pusha
pushf
movb
lea
jmp
shr
mov
call
bt
cmp
pusha
jmp
jmp
sub
cmc
not
pushf
sub
cmp
bt
call
jmp
mov
and
arpl
push
inc
sub
das
popa
das
push
sbb
cmp
inc
hlt
mov
mov
lret
jmp
push
popa
repnz
jl
test
in
add
cmp
scas
inc
insl
adc
cmp
ds
push
add
mov
enter
shlb
mov
mov
jecxz
insb
out
addb
mov
mov
push
cmp
movb
cmc
and
cmc
cmp
pushf
add
lea
jmp
call
cmpsb
adc
add
add
add
add
add
scas
and
add
add
addb
add
adc
add
inc
adc
add
add
loop
adc
add
int
add
aam
add
ds
add
je
add
add
add
ret
mov
xchg
adc
sets
jbe
movzbw
push
lahf
not
mov
lea
jmp
test
pushf
movzwl
bsr
neg
sar
pop
mov
cmp
add
bt
mov
cmp
cmc
test
call
pushf
pusha
call
add
adc
inc
and
dec
adc
sub
add
jle
jp
inc
adc
lret
adcl
out
and
fwait
jnp
dec
jle
mov
pop
mov
mov
lds
xchg
pop
repz
enter
and
jnp
and
dec
jge
outsl
xchg
push
xor
inc
cmp
add
cmp
xchg
mov
mov
sarb
mov
mov
xchg
inc
into
xchg
out
or
inc
push
inc
push
dec
xor
cs
insb
add
and
adc
sbbb
or
xor
or
jno
xchg
dec
movsl
enter
cmpb
xlat
mov
mov
mov
and
add
dec
pop
loopne
and
sbb
mov
mov
pushf
fbld
aam
push
jbe
and
and
cmp
dec
and
sbb
outsl
xchg
and
jns
sbb
jno
lcall
cmpl
dec
stc
or
arpl
add
roll
or
fstl
pop
insb
std
mov
scas
jmp
mov
dec
sub
loopne
lret
xor
mov
es
jo
sub
cwtl
rcll
pop
cmp
rcll
or
jns
add
and
mov
loope
mov
xchg
sbbb
jne
and
nop
lret
mov
mov
push
dec
sub
popa
dec
daa
js
xchg
xor
test
into
mov
repz
repnz
mul
jno
jns
in
xor
inc
sarb
in
pop
xchg
sbb
xchg
jle
xchg
mov
fwait
nop
out
ret
in
jmp
pushf
cmpsl
cmp
add
daa
je
bswap
lea
mov
call
pusha
lea
jne
xchg
setge
pop
call
cmp
fs
js,pn
or
mov
jo
jmp
sbb
mov
in
lret
movsl
ret
mov
test
pop
jmp
jl
dec
cltd
pop
std
xor
repz
xchg
xor
fistl
cltd
jns
jno
adc
in
mov
aad
mov
scas
xchg
enter
lods
mov
leave
xchg
ficompl
fidivrs
lock
and
jmp
sbb
jecxz
shl
rcrl
mov
pop
ljmp
dec
repz
shll
push
push
push
push
movb
movl
push
pusha
push
lea
jmp
stc
clc
stc
shl
pushf
call
mov
pushf
push
pushl
push
lea
jmp
pushl
popl
jmp
pusha
movb
lea
je
push
or
call
setno
movsbw
mov
cmc
clc
cmpb
pusha
pushl
call
jg
movsl
jnp
and
mov
call
or
shlb
mov
xchg
test
int3
adc
sub
push
inc
cmp
imul
call
arpl
dec
cli
or
xor
xchg
dec
in
and
flds
xlat
xor
xchg
push
dec
mov
stc
xor
sar
cld
iret
int3
mov
scas
in
fcoml
test
push
mov
inc
and
push
or
push
cmp
push
sub
and
mov
inc
repnz
lock
sbb
xchg
push
out
ds
shl
sbb
insl
icebp
call
lock
idivl
push
sbb
or
xchg
fbstp
xlat
mov
inc
aam
dec
aam
test
push
shrb
sahf
xchg
repnz
or
rcrl
jp
and
idivl
or
je
or
loope
fmull
cwtl
loopne
jno
jno
push
pop
inc
dec
xor
sbb
sub
cwtl
push
lahf
cld
inc
int
std
sbb
shll
sub
movb
call
mov
cmp
dec
sub
or
lahf
stos
xorl
and
mov
in
sbb
sbb
movsl
dec
push
les
stos
fdivp
jnp
mov
ja
pop
adc
imul
add
jge
es
jmp
cmpsb
loope
or
sbbb
xchg
cmp
arpl
sub
mov
inc
sbb
je
test
adc
push
and
adc
or
sub
push
push
dec
or
and
add
push
or
dec
fsubr
pop
push
push
add
jns
and
xchg
repnz
mov
fcompl
sub
aam
inc
iret
jns
bound
or
sarl
xor
xlat
adc
xor
les
lcall
push
mov
xor
subb
dec
cmpsl
mov
jb
stc
test
out
jge
add
add
sbb
sub
push
jg
pop
inc
xor
lods
iret
mov
cmp
and
inc
pop
add
cmp
jb
inc
cmp
add
mov
ret
jbe
mov
std
mov
gs
js
pop
sub
outsl
pop
xchg
push
stc
mov
jo
adc
jnp
sbb
mov
vpunpckldq
xchg
push
mov
inc
push
test
hlt
cmp
stos
cmp
inc
call
push
sub
xor
xor
andps
inc
adc
jmp
sti
gs
and
mov
fs
ja
pushf
pushf
lea
jmp
pop
cmpsl
jp
inc
and
and
inc
es
adc
jbe
push
sbb
das
and
in
aas
test
ret
mov
and
js
sbb
aas
sub
cwtl
cmp
cmp
call
sub
popf
aad
shll
fmul
stos
repz
cltd
in
les
mov
ja
pop
js
test
pop
push
inc
push
add
outsb
add
or
adc
xchg
into
adc
fdivp
add
inc
and
add
add
loope
out
incb
clc
inc
pushf
mov
push
dec
and
bound
dec
cmpb
ret
in
in
aam
aad
adc
int3
pop
push
jae
pop
das
xchg
ljmp
std
scas
sahf
mov
push
inc
push
sbb
sbb
in
dec
loope
aaa
push
dec
mov
popf
jg
and
imul
jge
xor
insb
adc
cmpsb
sarl
out
mov
xlat
fimuls
push
mov
lods
sbbb
pop
add
or
insl
jg
pop
cwtl
jb
fmuls
aas
sbb
int
cmpsl
sbb
cmc
xchg
fdivrl
rolb
cmpsb
xlat
test
rolb
loopne
lock
lret
push
lcall
std
mov
stc
bt
xor
clc
cmp
push
repnz
call
mov
sar
mov
stc
add
shr
lea
add
call
pushl
lea
je
add
cmp
aad
xor
btr
bswap
aas
bt
mov
sar
ror
mov
adc
shl
pusha
shr
shr
shr
jmp
pushf
movl
pusha
pusha
jmp
pushl
mov
lea
jae
push
lea
jmp
je
xor
and
pop
dec
and
add
dec
or
dec
sbb
xor
lahf
sub
sub
lods
jmp
dec
out
and
pop
sub
and
test
sahf
and
loopne
movsl
pop
push
or
inc
fdivrl
sub
sbb
and
arpl
inc
or
dec
cmp
xchg
les
aam
inc
and
xchg
roll
lret
sbb
xor
ja
push
mov
fistpll
repnz
xchg
cmpsl
call
stos
mov
sahf
nop
inc
repz
call
lcall
add
lock
jle
cmc
jb
out
pop
std
orl
mov
sbb
or
out
add
add
pop
es
inc
cmp
in
sub
mov
add
lcall
popf
out
icebp
mov
lahf
jmp
xor
pop
cmp
push
cmp
and
orl
adc
fstp
mov
scas
jmp
int
cmp
shrl
xchg
add
xchg
inc
rcr
mov
push
into
enter
testl
ds
movsl
nop
in
sub
or
clc
int3
jnp
adc
insb
arpl
ja
dec
sub
adc
lcall
jge
mov
add
add
not
mov
jmp
fiaddl
jl
and
sahf
int3
into
mov
enter
in
ljmp
push
pop
aas
insb
int
cmp
fwait
mov
fsubrp
out
into
xor
inc
sahf
sbb
std
fwait
mov
push
mov
cli
mov
xchg
addr16
sbb
addr16
std
push
dec
out
in
jp
inc
insl
lahf
lock
mov
pusha
loopne
jle
add
inc
bnd
inc
pop
sub
add
cli
inc
mov
or
gs
pop
cli
mov
and
out
push
sbb
stc
fdivrs
call
scas
xor
jl
and
mov
mov
popf
xchg
jmp
xor
inc
cld
dec
outsl
dec
cmp
pop
les
xor
popa
push
adc
cs
aaa
adc
jge
rol
into
push
ja
std
inc
in
inc
inc
mov
stos
fs
in
sub
add
dec
cmp
pusha
sub
dec
adc
insb
push
pusha
arpl
sti
js
mov
xchg
dec
and
inc
and
fdivs
movsb
lret
cmp
mov
mov
cld
mov
pop
xchg
add
out
cli
test
sub
imulb
adc
data16
aaa
js
sub
mov
jo
or
jae
jmp
sbb
push
stc
cld
mov
movsl
in
lcall
negl
xchg
push
mov
jno
push
cmp
jmp
mov
movb
jmp
stc
mov
sub
mov
stc
shr
pusha
push
pushl
call
add
pushf
test
cmc
movzwl
pushf
mov
stc
push
stc
add
push
call
pusha
lea
jne
cwtl
sub
push
setb
btr
mov
sub
or
xor
inc
and
add
shr
shl
mov
test
bt
stc
test
pusha
call
call
stos
mov
lea
jmp
adc
and
adc
cmp
jno
sbb
mov
aad
test
mov
push
jb
and
jns
jg
xorl
xor
and
lds
xor
or
push
lds
sub
lcall
inc
fcoms
cli
mov
inc
add
sbb
adc
jno
jg
imul
and
xor
inc
xor
xchg
enter
lea
mov
lea
call
clc
test
push
pusha
cmc
cmc
stc
mov
cmp
test
cmp
pushf
lea
jb
shl
mov
pushf
push
mov
cmc
pusha
mov
shl
push
call
movb
pusha
pushf
imul
jmp
mov
call
es
ss
inc
and
adc
and
cmp
adc
add
loopne
mov
cmp
pop
push
addr16
or
repnz
sahf
pop
dec
inc
pop
mov
pop
enter
mov
rorl
js
mov
loope
jb
mov
out
push
cmpl
mov
test
testb
or
sbb
mov
sbb
mov
mov
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
fsubrl
popa
inc
and
adc
and
pop
insl
adc
stos
push
lock
sbb
out
aaa
xchg
pop
nop
push
or
js
movsl
sahf
mov
inc
or
mov
into
mov
and
das
cmp
mov
mov
les
aaa
clc
or
les
pop
or
mov
jbe
sub
nop
das
mov
mov
scas
cmp
jg
jbe
mov
jg
pop
das
fistpll
pop
xor
mov
cmp
data16
insl
and
cmp
je
pusha
sbb
ja
jnp
sbb
push
dec
test
add
test
xchg
adc
push
mov
cmp
add
clc
movzwl
add
shld
mov
cmc
bt
test
add
test
bt
pusha
movl
mov
pusha
test
call
mov
aad
inc
and
popf
fwait
in
test
mov
mov
ss
fists
test
inc
cli
and
pop
push
lods
jl
addb
das
bound
xor
inc
bound
clc
test
je
jge
mov
jo
iret
xor
lcall
mov
aad
scas
jecxz
call
mov
adc
jle
push
sbb
add
pop
push
jae
xor
and
xlat
popf
clc
mov
lea
jb
shld
shld
test
cmp
pushf
lahf
mov
movsbw
mov
call
pusha
pushf
pushf
lea
jb
btr
btr
cmc
movzbl
push
shr
jmp
movsbw
bswap
setb
lahf
mov
lea
pusha
jmp
push
lea
je
clc
clc
cmp
call
mov
push
mov
xchg
mov
lea
xchg
pushf
push
mov
lahf
pusha
movzbw
lea
movb
call
les
addr16
and
mov
lret
test
lock
xor
testb
jp
jp
dec
lea
arpl
test
lock
fadd
int
test
je
dec
sahf
inc
sbb
lcall
iret
call
les
js
push
sub
insl
add
jl
push
and
adc
sbb
sbb
or
imul
jns
pushf
mov
pusha
pusha
lea
call
push
xor
mov
jmp
movl
pushf
movb
mov
call
mov
and
push
js
jo
sbb
je
jl
jl
pop
int3
outsl
push
cvtdq2ps
stc
jecxz
in
mov
add
je
gs
cs
lock
cmpsl
cmpsb
repnz
dec
arpl
andl
stos
ds
stos
in
call
stos
out
mov
jmp
adc
xor
jp
xor
pusha
and
dec
loopne
lods
sbb
lds
add
test
add
add
gs
or
not
xor
sub
not
sub
mov
pop
ret
call
fs
cs
cmp
lods
adc
mov
mov
outsb
outsl
ss
orl
incb
and
mov
insl
cmovnp
mov
fistl
and
sub
std
lahf
pop
and
inc
loopne
adcl
and
ret
xchg
add
inc
mov
mov
xchg
pop
add
out
movsb
adc
lock
dec
out
iret
ret
push
cmp
nop
or
push
adc
push
cld
cmp
daa
jae
jb
push
or
lds
shrb
push
popa
jno
into
cmp
ret
imul
jmp
jmp
sub
clc
cmp
call
mov
cmp
call
or
pcmpgtb
adc
inc
adc
sbb
push
pop
pushw
frstor
lahf
mov
lods
gs
data16
arpl
lods
arpl
cmp
loope
add
stos
inc
or
popf
cmp
inc
sbb
jno
jns
ds
scas
sub
iret
mov
ljmp
mov
popf
jecxz
repz
leave
mov
test
js
dec
fcmovu
xchg
enter
mov
adc
jge
and
mov
ljmp
inc
push
icebp
push
pushl
cmpsb
pop
jl
mov
jg
pmaxub
push
xor
mov
data16
jg
outsb
and
add
xor
imul
cmp
pushl
lea
jne
bt
or
btc
mov
and
inc
sar
jmp
pop
fldl
imul
dec
pop
xor
and
jl,pn
cmp
es
mov
es
insl
subl
push
jo
pushf
or
cmp
dec
fsts
mov
and
hlt
pushf
clc
xchg
cmp
sub
hlt
jl,pn
add
jb
xchg
xor
and
shlb
in
pop
cmp
mov
es
jmp
stos
pushf
movb
lea
jmp
lea
jae
pushf
lea
mov
pushf
jmp
mov
call
pusha
push
push
mov
pusha
movb
mov
lea
jmp
mov
movw
mov
push
lea
jmp
sub
bsr
bswap
shl
add
add
add
rcr
jmp
call
setg
bswap
not
mov
jmp
clc
add
pusha
jmp
bound
dec
and
push
es
or
and
pop
daa
sub
xor
mov
dec
data16
sbb
repnz
mov
add
jge
sbb
mov
or
mov
xchg
push
mov
in
dec
imul
ror
jbe
popf
pop
pop
sbb
jo
mov
mov
mov
roll
push
or
rcr
inc
sahf
push
and
or
pop
add
insl
outsl
cmp
xchg
mov
shlb
lods
out
nop
and
mov
dec
push
add
repz
pop
or
lret
mov
ret
adc
mov
ljmp
sbb
jb
xor
xor
push
jo
xor
mov
adc
int3
mov
movb
stos
rcll
jae
sub
je
pop
sub
imul
mov
insl
sarl
btc
mov
shr
neg
add
mov
mov
clc
pusha
pusha
push
test
call
inc
fiadds
imul
fildl
mov
js
dec
push
inc
or
mov
inc
pop
xor
data16
jle
bound
inc
repz
jl
jo
fmulp
dec
pop
fmulp
arpl
inc
in
fistl
mov
loopne
les
std
mov
adc
jae
adc
and
mov
xchg
pop
adc
jecxz
fwait
testl
xor
dec
cmp
imul
inc
rolb
je
and
fwait
mov
std
addr16
mov
jge
dec
adc
sbb
xchg
pop
mov
scas
cld
push
and
and
outsl
jne
or
xchg
jo
xchg
xlat
xor
or
dec
out
fisttpl
dec
test
sbb
int3
lcall
lods
xor
aam
mov
lret
mov
out
inc
fwait
cmpsl
arpl
pop
adc
jns
jge
mov
adc
mov
scas
cmp
push
mov
mov
xor
lea
call
lahf
adc
sahf
rcr
sub
jne
mov
pop
rol
pop
pop
ret
push
push
clc
sub
pushf
pusha
mov
mov
movsbw
call
xchg
push
scas
stc
idivl
fcomip
cmpsl
xchg
xchg
icebp
mov
imul
lahf
or
push
xor
fistps
adc
add
pop
pop
das
cmp
jbe
add
adc
push
mov
inc
popl
inc
jecxz
jp
xorl
xchg
movsb
fcomi
rorb
scas
fcoml
pushf
shll
mov
dec
add
cmp
push
push
test
pushf
push
lea
jne
pusha
jmp
cmp
pushf
call
stc
clc
mov
jmp
jmp
inc
sti
outsl
inc
and
adc
and
add
jle
jb
sub
mov
xchg
insb
in
sarb
hlt
popf
outsl
ds
cwtl
daa
adc
pop
push
mov
adc
mov
push
sub
mov
push
xor
cli
cmp
push
loop
push
jmp
in
cmpl
mov
lret
dec
add
mov
das
lea
add
movzbw
xchg
bswap
setb
jmp
test
shl
clc
cmc
push
mov
cmc
push
cmp
jmp
push
mov
jnp
adc
addr16
cmp
lea
lds
movsl
ror
adc
or
push
jns
outsb
clc
lret
pop
ret
pop
imul
pop
jne
loop
add
add
cwtl
in
adc
shlb
or
jb
sub
push
std
fnstsw
in
aad
push
dec
dec
inc
or
mov
add
mov
add
rcr
mov
cmc
push
cmp
and
cmc
pushf
stc
test
add
mov
lea
jmp
lea
jne
aam
shr
sub
cmc
btc
shl
mov
call
jmp
lahf
lea
call
ret
outsb
inc
and
mov
in
xchg
scas
leave
lahf
mov
movsb
xor
es
negl
aam
xor
cmpsl
adc
lods
and
arpl
or
shrb
imul
movsb
or
mov
es
mov
push
leave
inc
lock
mov
repz
and
or
xchg
xchg
test
stos
int
rcr
test
into
subl
push
mov
add
out
lcall
add
pushf
mov
call
call
test
add
lahf
bswap
lahf
lea
jmp
stc
clc
add
jg
sub
bt
xor
push
cmp
not
jmp
add
dec
outsl
arpl
inc
jb
add
test
cmc
sub
pusha
bt
cmp
pushf
lea
ja
call
jmp
jmp
sbb
shrl
fistpl
cmpsl
and
jne
movsl
push
outsl
and
pop
bnd
outsl
adc
cmp
xchg
loope
stos
jl
mov
aam
rcll
and
inc
push
pop
icebp
cmp
movsl
cld
imul
or
shrb
sbb
cmp
test
hlt
in
pop
or
cmp
mov
roll
cmp
stos
xlat
movsl
icebp
in
push
jmp
push
push
inc
push
xor
cs
insb
add
std
mov
add
and
pushf
lea
jmp
inc
call
mov
pushf
push
mov
mov
lea
jmp
pushf
sub
lahf
mov
cwtl
mov
lea
jmp
mov
movb
mov
jmp
jmp
btr
rcl
mov
cmp
cmp
cmpb
jmp
push
call
jae
add
call
jb
mov
shl
lea
call
add
pop
ret
pusha
lea
jns
push
lea
je
cmc
push
movb
clc
or
call
jb
push
adc
dec
pop
jne
gs
add
pop
sub
xor
out
daa
dec
decl
shrl
fildll
jns
sbb
pop
sub
scas
xor
jne
mov
outsl
sbb
push
lods
shlb
jns
dec
test
aad
mov
imul
aam
in
push
add
xor
sub
push
sub
aam
pop
out
adc
adc
aad
stc
mov
lods
fucomip
out
xlat
mov
mov
mov
push
aam
sar
or
iret
adc
inc
jne
ds
push
push
fs
jbe
icebp
aad
loope
mov
int3
sub
out
int
add
pop
cmp
sub
in
pushf
jecxz
add
mov
cltd
out
jge
sub
push
add
mov
call
add
pop
ret
pop
jno
adc
mov
iret
mov
out
popf
xlat
dec
mov
cmpsl
les
inc
iret
lahf
xor
add
sub
pusha
jnp
int3
int3
and
mov
pop
xchg
jl
push
das
push
mov
xchg
data16
inc
push
daa
inc
repnz
mov
ret
ja
sbb
and
xchg
outsl
xlat
fadds
sub
rcrl
fdiv
or
mov
vpunpcklwd
insb
popa
imul
pop
or
inc
mov
jg
inc
add
cmp
sahf
shrb
xor
or
sbb
inc
and
mov
mov
xchg
lret
sub
test
sti
outsl
xorb
pushf
mov
xchg
mov
mov
in
xorb
xor
fisttps
jne
das
es
sbb
add
loop
fdivr
mov
aaa
imul
dec
lret
aaa
sbb
int
stos
insl
pop
cmp
dec
mov
cmp
movsb
push
fs
mov
mov
pusha
xchg
je
stos
lods
int3
fnstsw
repnz
lods
xchg
mov
cmp
inc
inc
sbb
cmpsb
scas
pop
adc
inc
cmp
sub
outsb
cmp
push
cmp
mov
test
dec
je
sti
icebp
fwait
in
in
push
in
pop
jno
mov
xchg
mov
lods
fildl
pop
daa
jbe
and
insl
inc
out
add
push
jge
fdiv
int
jge
loopne
stos
mov
scas
xchg
jge
into
jns
xchg
pop
jbe
mov
in
sub
jp
mov
mov
in
mov
sbb
cld
or
xlat
call
sub
add
loopne
pop
sub
or
out
jnp
lock
dec
xchg
movsb
sub
push
inc
add
adc
inc
and
cmp
test
movb
pushf
mov
pushf
mov
pushf
lea
jmp
cmpb
adc
std
mov
mov
sarl
lds
mov
addr16
push
loop
daa
xor
mov
add
mov
int3
sti
xchg
mov
cmpsl
sarl
cli
jle
sub
imul
inc
mov
pop
push
add
jecxz
ret
mov
jmp
xchg
cmp
dec
or
mov
add
outsl
jo
jb
jns
push
add
aas
arpl
add
push
and
movb
pusha
lea
jb
cwtl
jmp
mov
jmp
pushf
movb
lea
jae
rcl
aad
pop
cmp
rcl
rol
shl
pop
bsr
lea
sbb
shrd
mov
lahf
cmp
jmp
pop
jbe
pop
inc
and
lods
jecxz
movsl
rorl
lods
mov
jp
mov
mov
out
sub
mov
add
scas
icebp
dec
inc
insl
clc
das
xchg
pop
out
clc
fcmovnbe
outsb
cltd
cmp
xchg
daa
xchg
jecxz
pop
nop
fwait
and
adc
into
cltd
mov
push
pushf
int
xor
jecxz
stos
and
add
and
inc
push
das
jg
sbb
dec
pop
and
jo
inc
adc
cpuid
push
and
pop
repz
lock
std
std
andb
push
insb
adc
mov
mov
sub
mov
pop
lret
ss
outsb
outsl
pop
sub
jno
dec
inc
mulb
aam
push
movl
cwtl
xchg
testl
icebp
adc
inc
negb
inc
stos
xchg
push
add
enter
ror
sub
faddl
fs
je
push
lea
jmp
lea
je
clc
pushf
test
sub
call
arpl
fs
xor
cs
insb
add
and
jge
jno
cmp
arpl
push
pop
daa
jge
mov
xor
push
and
jnp
push
mov
lahf
add
es
cmp
mov
sbb
in
out
dec
cmpsl
rorb
dec
pop
xor
mov
mov
leave
inc
xchg
push
add
and
add
jl
inc
xchg
mov
fwait
sub
lods
jnp
mov
inc
add
jns
fs
sub
scas
mov
pushf
sti
push
rcll
sub
mov
sti
cmp
adcb
mov
and
lock
pushf
bnd
test
inc
ficoms
pop
cwtl
lods
xchg
push
in
dec
xlat
cmpw
xlat
testl
or
and
mov
dec
mov
ds
hlt
in
sti
test
test
mov
sti
push
lods
mov
stc
cmp
cmpl
push
cmp
jge
clc
add
pushf
pushf
call
mov
pushf
lea
jmp
mov
mov
pushl
ret
pusha
lea
je
push
aaa
shr
setae
xor
jmp
pushf
rep
lea
lea
mov
call
adc
xor
and
call
lcall
mov
mov
ljmp
push
bound
mov
jno
fwait
je
out
iret
lahf
in
mov
adc
out
lds
sbb
and
and
pop
jmp
lea
mov
loop
inc
adc
jno
push
rcrl
int3
xchg
cmp
std
lea
dec
and
mov
jb
xchg
inc
stc
pop
test
sub
or
xchg
orl
test
inc
das
mov
subl
lret
popf
neg
je
sbb
mov
repz
movsb
adc
and
pushf
mov
mov
in
test
dec
push
ret
jbe
std
mov
je
repz
fbstp
add
imul
insl
push
cmp
pop
mov
and
mov
mov
repz
inc
arpl
and
daa
fcoms
xlat
xor
xchg
xchg
test
hlt
mov
fsubr
xchg
fbld
cltd
inc
out
jns
js
dec
xchg
sbb
mov
jmp
jecxz
lret
mov
dec
xor
push
mov
xchg
mov
xlat
xor
inc
cmp
cmp
dec
arpl
sbb
popa
es
and
mov
int3
in
mov
mov
int3
cmpsl
mov
enter
push
xchg
inc
in
fmull
inc
ja
orb
inc
or
dec
cmpsl
pop
add
pop
jae
outsb
or
sbb
je
pop
add
jo
lcall
insl
cmpsl
call
mov
call
jmp
lea
dec
bt
add
bsf
mov
shr
mov
add
mov
call
push
jmp
push
cmp
pusha
lea
ja
pushf
mov
lea
jmp
pusha
mov
jge
cmp
das
imul
fdivl
mov
movsb
dec
add
lahf
lahf
shl
xchg
mov
jnp
jmp
and
popa
ret
movsl
cmp
sarb
rorb
push
sbb
jne
arpl
jo
push
jno
daa
dec
fmulp
test
mov
loop
aas
mov
pop
mov
jmp
xchg
mov
mov
mov
mov
scas
fsubrl
cmp
inc
and
insb
cmp
cmp
inc
add
adc
adc
xchg
sarb
mov
sub
mov
mov
xchg
mov
out
push
jbe
or
sbb
std
mov
loope
adc
aam
or
adc
jae
sub
cmpsl
pop
sbb
inc
addr16
imul
dec
pop
cmp
sub
ja
call
sbb
pop
jne
scas
sbb
xchg
testb
mov
xor
mov
mov
sbb
fsubs
mov
sbb
sbb
lds
push
cmpps
xor
push
add
xor
cwtl
arpl
jp
mov
sbb
xchg
pop
test
adc
adc
popf
mov
addl
mov
sub
leave
xchg
mov
and
jb
pusha
xor
pusha
push
test
movb
call
fcoms
call
sbb
adc
push
jo
dec
stc
aam
lahf
sub
shlb
jecxz
scas
xor
int
in
mov
xchg
fwait
leave
ret
cmp
inc
and
repz
sti
lret
dec
pushf
dec
sub
outsl
xchg
inc
mov
in
jns
jae
pushf
fistl
xchg
dec
imul
test
imul
push
push
pop
inc
cmp
clc
mov
pop
and
lods
dec
push
lret
add
ret
cmp
cmp
mov
or
adc
dec
repz
xchg
mov
jbe
js
sbb
mov
ljmp
mov
jge
icebp
mov
mov
pushf
aad
les
aas
scas
xlat
loopne
xlat
pop
outsl
cmc
or
xor
inc
adc
push
dec
add
ficompl
pushf
enter
in
ret
ficoml
ret
shrl
pop
push
lods
xlat
xchg
popa
pusha
not
mov
pushf
movb
pushf
jmp
cmc
stc
pusha
sub
clc
xor
cmc
cmc
pushf
not
cmc
bt
mov
test
mov
push
jmp
movzbw
push
call
imul
jmp
dec
cmpl
jl
adc
dec
push
push
jbe
or
test
pop
es
std
scas
jnp
lods
filds
pop
enter
or
sbb
cmp
insl
insb
sbb
out
sbb
int
mov
add
les
out
lea
addr16
sbb
cmpsb
outsl
xchg
loope
mov
dec
sub
jecxz
shl
notl
inc
loopne
cmp
bound
int
pop
inc
and
jl
sbb
sbb
push
sbb
lods
into
xchg
jl
cmp
inc
xchg
out
mov
dec
lock
imul
fs
cmp
orl
xchg
mov
xchg
psubb
lods
and
out
lods
adc
cmp
push
sub
dec
arpl
out
es
ret
cmp
jg
push
adc
push
ss
rolb
filds
mov
mov
lcall
push
aas
clc
add
bswap
pusha
pop
pushf
mov
pusha
push
pushl
ret
push
nop
push
inc
and
fnsave
std
xchg
xchg
jo
push
push
push
mov
cmpl
movsl
aas
ja
popa
pop
or
outsb
xchg
add
sahf
add
adc
js
or
mov
jo
addr16
mov
shlb
dec
add
int3
mov
jecxz
fdivs
cmp
lods
jp
ljmp
inc
cld
mov
cs
sbb
std
outsb
stc
adc
aam
dec
xchg
nopl
lcall
mov
mov
fcoml
mov
aaa
xchg
adc
loope
push
js
imul
jge
add
orb
sub
push
js
movsl
cmp
and
outsb
and
sbb
cmpsb
xchg
fwait
fs
fidivl
sub
push
add
lock
pop
push
pop
imul
mov
mov
or
inc
sub
or
or
mov
add
cmp
jmp
jmp
lea
call
push
lea
jb
stc
shl
movzbl
jmp
lea
jae
clc
cwtl
rol
pop
aaa
sbb
pop
rol
aas
not
shl
mov
btc
cmp
pushf
push
movsbw
mov
pusha
lea
jb
rcr
stc
add
daa
cmp
mov
cwtl
mov
pusha
lea
jb
inc
movzbw
aaa
mov
cmc
clc
stc
cmc
sub
not
call
push
pusha
call
pushl
pushl
movl
mov
mov
pusha
lea
jmp
pusha
pushl
call
dec
add
sbb
and
mov
cmpsl
jmp
movl
dec
adc
mov
icebp
imul
mov
addr16
mov
pop
cmp
pop
insl
negl
xor
inc
mov
leave
daa
or
sti
xor
add
mov
push
fsts
mov
lods
stos
ljmp
sbb
jno
mov
ret
les
mov
push
pushf
pushf
lea
jmp
jmp
call
mov
pushl
pushl
mov
push
lea
jmp
xchg
mov
movw
mov
pusha
pusha
pushf
bswap
rep
pushf
push
not
mov
not
jmp
cmp
sbb
inc
and
pop
sub
ds
adc
pop
push
insb
and
push
jge
pop
sbb
leave
sub
and
shll
jge
mov
mov
ficomps
aam
out
mov
and
add
addr16
push
or
in
scas
fisubrs
pop
add
or
dec
push
add
pop
adc
gs
jno
inc
aad
cmp
cmc
popf
sub
add
hlt
and
pop
mov
push
mov
ret
sbb
add
mov
leave
mov
lret
mov
mov
iret
outsl
and
jmp
je
jb
gs
jb
arpl
jb
inc
add
shr
adc
stc
add
call
sbb
and
pop
cs
dec
push
cmp
push
pop
adc
dec
jns
addr16
sub
into
jg
jmp
dec
daa
pop
mov
lcall
dec
and
jne
sahf
xor
dec
lea
adc
lock
adcl
popf
sbb
adc
inc
daa
mov
sbb
xchg
mov
pop
jecxz
mov
rcrl
pop
mull
divb
add
lds
mov
inc
adc
cs
out
mov
iret
movsb
jecxz
lret
in
ss
cmp
sub
mov
loopne
and
push
add
jne
add
mov
lcall
clc
mov
jnp
or
lea
incw
shlb
mov
push
add
ud2
fwait
adc
sbb
lcall
int3
outsl
testb
pop
das
jo
leave
mov
mov
int
movsl
sarb
jb
mov
inc
cmp
and
call
call
ds
in
inc
and
mov
xchg
notl
mov
lods
or
repz
mov
cmp
pop
xor
je
and
and
scas
mov
je
enter
push
jl
xchg
idivl
mov
sbbb
pop
xchg
xor
pop
fldt
xor
jle
sti
cld
pushf
pop
cmp
inc
outsb
sub
xor
push
clc
gs
inc
and
and
je
test
cmp
cmp
bt
sub
jo
test
test
cmp
cmp
call
repz
push
push
inc
sub
adc
fisttpl
jno
pop
nop
adc
rorl
iret
iret
clc
push
mov
mov
mov
data16
popf
pushf
fidivs
mov
rcrl
jge
mov
add
add
pusha
sub
aas
sbb
shlb
xchg
aad
cltd
ret
in
int3
arpl
jecxz
inc
add
pop
and
movb
push
movb
pushf
lea
jmp
dec
xchg
dec
add
ja
jno
sub
push
jge
pop
paddd
inc
ja
dec
je
jne
mov
in
popa
inc
mov
add
popf
sbb
pop
out
cmp
xchg
ret
decl
lods
scas
sbb
xor
sbbb
outsl
into
cwtl
xlat
outsl
dec
mov
mov
inc
jge
add
aaa
mov
hlt
cmpsb
push
jecxz
inc
push
jbe
xchg
lret
xlat
movsb
iret
jae
std
lods
iret
sbb
inc
gs
jmp
pushl
push
lea
jne
movzbl
js
mov
sub
bt
add
mov
not
ror
xor
add
pusha
shr
cmp
shr
mov
push
clc
stc
mov
test
pushl
pushf
movl
mov
lea
je
stc
sub
stc
cmp
pushf
pusha
lea
ja
pusha
call
call
adc
jmp
mov
jo
mov
mov
pushf
lea
jb
and
sub
jmp
push
jmp
pusha
call
cmp
jmp
lea
ja
pusha
movl
jmp
ret
pop
inc
and
mov
xchg
leave
out
cld
fistps
dec
jge
fists
movsb
adc
dec
cmp
out
fbld
rcrl
pop
dec
sub
pop
subl
lcall
mov
adc
xchg
inc
jb
cmpl
xor
lods
std
mov
mov
xchg
fidivs
jge
leave
scas
loop
dec
pop
pusha
movb
movw
movb
pushl
ret
test
test
cmp
pushl
movb
push
lea
jae
call
mov
insl
push
inc
and
or
aam
test
pop
or
mov
out
sbb
mov
push
pop
dec
adc
adc
add
jns
jne
inc
ss
xor
push
mov
sub
push
inc
out
subl
lcall
push
pushf
lea
jmp
ljmp
mov
in
hlt
ljmp
push
jge
test
jo
repnz
sub
or
pop
sbb
js
and
sub
inc
inc
lcall
mov
mov
mov
std
sub
cli
inc
fldenv
push
js
jno
ret
adc
jne
push
movsb
sub
sahf
sti
jnp
push
pop
xor
dec
add
adc
or
fnstsw
pushf
lea
pushf
movb
lea
call
test
jne
cmc
mov
jmp
orb
sub
pop
inc
ja
arpl
jg
cwtl
daa
shl
mov
fsubrs
cld
xchg
loopne
sub
mov
lahf
scas
mov
std
popa
hlt
ret
arpl
mov
fcomps
jg
jmp
or
mov
nop
or
repz
or
or
and
es
idivl
arpl
fsts
sbb
mov
lahf
mov
fcmovnbe
fbstp
xchg
push
scas
rorl
push
add
jmp
add
and
jnp
outsl
insl
add
dec
cmovne
or
jge
out
and
test
and
jno
aad
cmpsl
mov
repz
cmpsb
movsb
out
push
out
hlt
mov
pop
stos
sarb
gs
sbb
sbb
lcall
push
sbb
jno
cmp
cs
fstps
or
xor
je
lea
je
pushf
pusha
mov
pushf
lea
jmp
push
clc
cmp
pushf
sbb
pusha
lea
pushf
pushf
pushf
lea
jmp
lret
ret
inc
and
dec
and
inc
sub
imul
mov
sbb
insl
fldpi
inc
cmpsb
mov
repnz
xchg
lods
ret
addr16
adc
push
jle
sub
repz
mov
addr16
imul
xchg
loope
mov
sbb
xchg
shll
popa
cwtl
pop
ljmp
ds
mov
jne
jge
imul
lods
das
loope
jns
fnsave
je
add
pop
and
push
mov
lea
jmp
pushl
popl
bt
bt
cmp
jmp
call
jmp
movb
imul
test
jmp
movl
push
jmp
pushf
call
or
or
and
sub
pop
push
aaa
push
sbb
jge
mov
lret
and
sbb
xor
jge
outsb
pop
dec
cmp
mov
push
in
imul
adc
gs
icebp
cmp
mov
adc
or
mov
sbb
stc
pop
pshufw
sub
push
jge
pop
sbb
insl
jle
fwait
sbb
sti
cmpsb
test
xchg
test
jmp
pushf
sub
jnp
stc
cmp
pusha
jmp
mov
not
jmp
jne
xor
inc
and
test
xchg
stc
xchg
push
imul
cltd
in
pop
sar
cld
mov
andl
mov
shll
loope
mov
cltd
mov
inc
and
mov
mov
fildll
or
fmuls
and
lock
stos
sti
out
scas
mov
mov
and
in
lds
in
dec
push
and
or
xchg
jge
adc
rolb
push
inc
notl
iret
or
sub
fst
popf
ret
jle
xchg
adc
pusha
gs
not
pop
push
pushf
pushl
ret
lea
call
pushf
pushl
movb
mov
pusha
lea
jmp
pop
jecxz
or
and
or
inc
or
sbb
fs
insb
movsl
lods
jl
mov
out
sbb
inc
xor
mov
pop
push
jbe
cld
xorb
repnz
dec
outsl
xchg
lods
sub
pop
push
data16
pusha
repz
idiv
outsb
int
mov
and
rcrl
push
sub
lods
loopne
sbb
cmp
add
shl
mov
jmp
mulb
sarb
popa
rorb
lea
ja
pusha
lea
jmp
pushf
add
call
adc
ljmp
mov
cmpsb
fsub
shl
movsb
cmpsb
rorb
int
in
sub
stos
scas
call
adc
sub
adc
mov
or
cmpsb
jl
and
mov
jg
inc
in
dec
adc
leave
ljmp
sub
je
and
data16
fdivs
cmp
movsb
add
insl
dec
gs
jne
dec
xor
add
lea
cmpb
lea
jne
jne
shl
movzbw
shld
xor
xor
inc
bsr
clc
dec
mov
rol
rcl
add
inc
jmp
add
inc
jb
popa
je
inc
imul
imul
jb
insl
inc
add
push
mov
inc
and
push
jo,pt
dec
push
cmp
pop
push
push
sub
jmp
jle
and
inc
aam
dec
adc
mov
sbb
inc
dec
sub
inc
ja
inc
cld
push
test
insb
mov
cwtl
mov
cmp
adc
push
rcl
adc
adc
aaa
pusha
outsl
sbb
and
ficomps
jp
xchg
and
jae
pop
cmp
cmpsl
fcom
nop
aam
clc
lahf
enter
cld
push
mov
iret
ss
push
cmovae
insl
adc
pop
sbb
ja
cmp
dec
out
or
popf
sub
imul
lea
or
cmp
xor
pop
adc
push
daa
jnp
add
lcall
aam
cmp
pop
adcl
out
cwtl
xchg
aaa
xor
int
cmp
dec
insb
cmp
sbb
jb
dec
mov
push
jecxz
adcl
and
orb
add
fs
jb
clc
shl
sar
shl
movzbl
stc
shr
btc
rcl
bt
imul
or
lea
pushf
mov
xor
shld
push
shrd
mov
sar
mov
cmc
pusha
pusha
cmp
push
call
lea
jb
or
cmp
push
pushf
pushf
pushf
mov
pusha
pushl
lea
jb
rol
mov
jmp
pop
loope
push
inc
and
adc
xor
sub
pusha
dec
xor
mov
jae
icebp
addr16
inc
add
enter
mov
mov
fsubr
mov
and
test
lock
lahf
mov
pop
jno
cmp
scas
scas
out
pop
loopne
scas
je
inc
lret
mov
inc
movsl
icebp
pop
hlt
push
push
jmp
and
fsubs
lcall
in
pop
xchg
std
pop
cmp
aam
mov
mov
shl
shr
shld
mov
clc
pusha
shld
mov
test
cmc
cmp
shl
mov
shl
sar
rcl
shl
sub
jmp
daa
mov
inc
and
cld
xchg
mov
out
lock
xchg
shrb
pushf
out
es
pop
jno
lret
loop
xchg
mov
lret
push
lahf
leave
cwtl
sub
mov
dec
adc
jo
adc
mov
lea
mov
inc
loope
dec
arpl
mov
lea
stc
mov
pop
daa
mov
push
adc
cmp
adc
dec
xor
jns
inc
push
jne
pop
nop
xor
out
out
cli
lds
pusha
adc
cmp
push
dec
mov
ret
inc
fsubl
add
into
fldenv
or
movsl
pop
rcll
xchg
dec
iret
aas
lods
clc
addb
cmpnleps
add
push
xor
mov
stos
daa
cld
pop
adc
cwtl
sbb
cmp
pushf
sarl
mov
pop
pop
xchg
dec
stos
jbe
dec
rolb
mov
fnsetpm(287
pusha
push
out
aad
fildll
xor
dec
and
mov
outsl
test
sbb
push
dec
or
inc
shrl
xchg
jg
add
gs
loopne
imul
shll
mov
push
in
adc
neg
push
mov
xor
push
stos
out
xchg
pop
sahf
cli
sub
jge
jne
mov
adc
xor
dec
jns
jge
imul
mov
mov
mov
xchg
out
lds
int3
pusha
call
and
mov
xor
mov
pop
mov
jne
inc
call
pushl
aam
sbb
mov
leave
stc
out
inc
fwait
pop
xor
insl
mov
rorb
xchg
push
pop
cmp
adc
mov
jne
add
shlb
insl
push
sub
arpl
xchg
repz
bound
sub
pop
rclb
scas
movsb
mov
mov
sahf
pop
push
movsl
je
add
jbe
xchg
pop
xor
das
or
xchg
ljmp
push
dec
std
xchg
mov
mov
mov
sarl
nop
and
ficomps
push
cmc
clc
lcall
js
ds
fildl
test
lcall
cmpb
pusha
jecxz
sbb
add
stc
inc
std
imul
add
mov
jns
jecxz
sub
jmp
popf
data16
inc
jb
mov
mov
inc
pop
mov
xor
cmp
mov
iret
push
imul
into
repnz
mov
ret
xchg
mov
pop
stc
outsl
fbstp
inc
add
mov
repnz
inc
xchg
adcb
adc
adc
mov
mov
inc
shll
and
sahf
pop
cld
push
lret
mov
out
xor
cmpsl
hlt
cmp
lret
fcoms
cmp
lahf
sub
in
js
or
sub
das
ljmp
lods
dec
push
sub
mov
and
mov
xor
cmpb
pop
insb
mov
aam
jns
subb
xor
jns
push
decl
scas
loop
mov
repz
jns
jo
in
sbb
xchg
and
mov
and
sti
and
inc
out
add
lods
push
sub
xor
mov
cmpsb
jp
inc
out
test
jne
adc
cmp
ret
or
aad
mov
cltd
out
sbb
jg
sub
rcll
pop
push
push
sub
clc
movsb
pusha
clc
xchg
dec
loope
enter
jbe
shlb
add
xor
movsb
idivb
outsb
cs
xchg
fdiv
daa
in
lret
xor
sbb
pop
lahf
jnp
or
push
jae
mov
inc
and
test
xor
sub
loop
insl
mov
sbb
movsb
stos
fbld
jns
and
jne
out
out
ficompl
add
insl
pop
xchg
add
mov
lods
mov
rcrb
test
fdivrl
daa
lret
jns
daa
data16
fucomi
add
div
lret
lret
mov
or
or
popf
ja
cmp
into
add
mov
and
daa
adc
lret
xchg
jbe
fwait
repnz
jo
testl
and
filds
lock
or
ss
negl
insl
mov
fwait
or
shrl
out
sbb
adc
cmp
mov
push
mov
out
gs
aam
in
arpl
mov
std
sbb
aaa
sbbl
aaa
out
sahf
push
iret
jmp
addb
mov
xchg
lret
sub
and
inc
dec
fdivrs
insb
out
int3
ljmp
push
fsubl
push
loop
jmp
lret
test
in
lods
mov
enter
mov
sarl
repnz
inc
ror
cs
ljmp
cmp
push
cmp
mov
repnz
loope
fs
xor
cs
push
xlat
xor
mov
sbb
pop
mov
es
push
inc
sti
rorl
add
xor
mov
cmp
dec
pop
das
mov
sub
lcall
sub
adc
jge
sti
nop
push
add
bound
pop
xor
mov
pop
add
movsl
xchg
cmp
cmpsb
into
sub
das
push
test
ficompl
dec
or
mov
dec
int
pop
shrb
nop
repnz
sub
adc
xor
lret
arpl
inc
ret
mov
sub
lret
add
jno
sub
in
pop
stos
jae
sbb
out
aad
subb
inc
pop
test
sub
insb
jg
insl
mov
push
aam
and
push
clc
or
add
adc
aaa
cld
insb
out
push
jge
add
jl
mov
test
mov
into
cmp
mov
pop
xchg
push
lea
std
mov
push
mov
sahf
pushf
cwtl
iret
insl
xchg
xchg
cwtl
jp
lds
insl
inc
cmp
adc
imul
jae
bound
xchg
xor
jmp
mov
popf
ss
js
jmp
jp
inc
push
cld
sahf
into
push
push
dec
pop
push
mov
cmp
sbb
fwait
mov
in
pop
push
cli
fidivl
push
lock
sub
pop
sub
push
mov
mov
inc
int
jmp
into
dec
xchg
repnz
sub
movsl
cmp
fwait
mov
fildl
stc
xlat
loopne
test
outsl
dec
rolb
mov
mov
pop
mov
cld
cmc
stos
js
and
pop
enter
fdivrl
pop
rcl
jne
mov
das
xchg
aaa
mov
mov
filds
bound
cwtl
adc
cmpl
pushf
dec
and
arpl
fs
fstl
xor
or
sti
out
inc
add
xorb
mov
push
adc
sbb
aaa
xchg
mov
movsl
cmp
in
fldt
dec
es
repnz
jle
test
sbb
cmovg
movsb
inc
adc
rcll
dec
sbb
mov
inc
mov
out
out
out
adc
mov
cmpsl
fucomp
fidivrl
add
or
enter
sbb
test
movsl
push
jg
out
xchg
andw
ja
and
adc
push
icebp
push
mov
js
xorl
inc
jmp
ret
and
repnz
lods
lahf
jle
and
xchg
fldenv
inc
addr16
and
xor
sub
xchg
sbbl
adc
inc
or
sub
je
aaa
repnz
mov
push
aas
inc
pop
int
jp
or
enter
ds
cmp
lods
jg
sarl
arpl
add
xor
add
mov
jmp
dec
ret
push
sbb
add
push
xor
pop
in
adc
aas
outsl
je
add
addr16
aad
ds
stos
shll
pop
sub
xor
pusha
xlat
jo
out
add
xlat
xor
inc
ss
stos
cld
es
sbb
jne
or
movsb
iret
mov
aad
jnp
out
adc
add
sbb
xchg
insb
shl
sbb
jnp
data16
repz
push
loope
pop
xor
pop
xchg
or
jmp
fwait
push
testl
popf
pop
add
arpl
das
ja
xor
shll
push
sub
lcall
pop
sbb
push
test
mov
sbb
jnp
jl
movsb
add
and
outsb
cwtl
adc
mov
out
in
and
inc
push
cmp
dec
out
pop
mov
stc
fidivrl
adc
dec
sbb
stc
sub
mov
mov
adc
je
jl
das
pop
cmp
push
cmp
nop
pop
lret
movsl
jnp
ds
mov
sahf
popf
or
in
pop
mov
fidivrl
mov
bound
and
cmp
fisubs
xor
arpl
dec
sbb
xor
addr16
aam
xor
jmp
xchg
dec
idivb
cld
enter
insl
js
mov
sahf
inc
xchg
mov
dec
adc
inc
push
xor
mov
sub
sbb
adc
mov
and
sub
jge
popa
pop
loop
mov
in
push
xor
mov
mov
inc
stos
jle
aaa
mov
das
test
xchg
dec
notl
ret
in
jae
pop
mov
dec
dec
rcrl
or
fisubs
pusha
popa
mov
adc
mov
sub
lahf
fwait
mov
xchg
jns
sbb
push
in
fldt
out
lods
xor
loope
dec
pop
sahf
and
pop
sbb
inc
and
jns
xchg
push
loope
cltd
push
jge
imul
clc
ja
in
mov
jmp
lea
sub
pusha
ret
push
adc
fisttpl
shll
movb
js
out
pop
dec
mov
outsl
push
mov
shl
inc
sbb
shl
sub
jo
inc
ret
adc
push
mov
or
cmp
or
push
sbb
clc
pop
jle
ret
mov
dec
jne
test
dec
inc
adc
mov
addl
fistps
iret
mov
js
sub
leave
jbe
sti
jae
or
call
add
imul
test
xor
push
jne
jns
jecxz
pop
pop
push
add
out
lret
adc
xchg
push
sub
xchg
push
xchg
xchg
rorl
jg
clc
loop
out
push
mov
popf
cmp
cmp
lret
cmp
mov
pop
rorl
add
push
dec
sbb
jl
push
fs
or
leave
mov
pop
push
and
repz
notl
out
std
popf
mov
rcl
pop
push
pusha
mov
aam
mov
call
call
pop
jbe
add
in
sub
mov
cmpsb
test
push
fidivrl
into
jp
aas
iret
pop
lds
lahf
add
jnp
pusha
dec
js
sbb
xchg
stc
or
push
aad
fldt
insl
std
repnz
sub
ret
pop
and
popa
enter
hlt
push
out
out
push
cmp
sbb
push
jno
movsb
push
pop
xchg
out
pop
lds
xchg
shll
call
iret
sbb
pop
test
xor
outsl
adc
dec
jp
xchg
dec
dec
pop
movl
xchg
pusha
mov
cwtl
es
xchg
mov
sub
mov
jb
test
add
cld
pop
aas
xchg
push
loop
push
sbb
xchg
mov
mov
dec
nop
stc
push
cmp
mov
or
insb
jb
in
xor
inc
mov
roll
mov
pop
lock
lahf
and
add
cmp
loopne
mov
scas
sarb
adc
in
scas
movsl
aad
ror
daa
sbb
or
cmp
mov
int
mov
mov
ret
or
mov
decw
dec
test
mov
imul
push
push
aam
cltd
cli
and
out
sarb
add
icebp
loopne
fwait
pushf
clc
lcall
xor
shl
xor
insb
and
mov
add
imull
pop
into
pop
dec
xor
rcl
jbe
mov
ja
ret
mov
notb
push
add
stc
and
cltd
fsubs
fldt
js
adc
in
jo
dec
push
sub
sub
fisubrl
inc
lahf
jae
inc
mov
dec
shrb
ljmp
call
fidivrl
lret
xchg
jmp
push
dec
sub
xchg
cltd
inc
dec
dec
loop
xchg
xor
sub
lcall
popf
dec
cli
nop
inc
pop
mov
cmpsl
cmp
xlat
hlt
pushf
imul
sahf
cli
pop
fldt
sbb
mov
add
lock
mov
pop
in
push
or
testl
or
add
lds
add
popf
push
test
test
mov
jbe
ror
or
imul
std
push
sbb
dec
jnp
lds
push
push
push
call
sbb
cmp
icebp
jp
insb
xchg
test
out
ljmp
enter
cmp
dec
fisubrs
shrl
adc
mov
inc
xlat
push
mov
or
stos
nop
ja
cmp
jno
sti
xchg
xor
mov
out
xor
popa
cmovg
leave
dec
cwtl
int3
or
push
and
sbb
push
push
repz
stos
cli
orb
lock
outsb
add
jle
out
outsl
sahf
xchg
data16
cltd
stos
ss
fsubs
cmc
js
aas
jge
mov
xor
xchg
mov
movsl
xor
xchg
scas
fistl
lods
sbb
gs
sub
scas
fmuls
stc
sbb
dec
inc
mov
aas
in
add
jo
int
sbb
mov
out
sbb
inc
fcmovnu
jno
lret
or
sarb
lret
aad
loope
and
xor
mov
leave
sbb
mov
mov
push
sub
xor
nop
repnz
nop
cmpb
xchg
rcrb
out
inc
pop
mov
adc
jge
std
add
out
cmc
arpl
incb
popf
lock
cmp
frstor
cmc
add
pop
mov
shlb
cmpsl
stos
or
loop
lds
fsubl
push
fwait
mov
insl
rcrl
test
sbb
fstl
jno
xor
std
insb
pop
mov
push
ja
mov
aad
push
daa
mov
or
and
jle
pop
mov
int
jo
adc
adc
cmp
push
pop
push
mov
jmp
mov
loop
xor
pusha
or
mov
jae
mov
adc
and
fstpl
ja
stc
sbb
jmp
xchg
jne
loopne
mov
ljmp
mov
dec
sbb
fs
stc
adc
push
sub
shll
jne
add
hlt
mov
xchg
cltd
popa
popa
push
pop
adcl
repnz
int
flds
cmc
mov
dec
das
fs
pop
in
fsubs
lds
mov
mov
sarl
aad
and
scas
in
es
fistps
shlb
sub
fsubr
test
jne
negb
test
aas
mov
inc
sub
mov
mov
jp
mov
pop
ss
mul
add
xor
cmp
fldenv
in
mov
and
aas
popa
outsl
filds
pop
sahf
lret
shll
xchg
jp
xlat
cltd
insb
xor
ret
adcl
mov
mov
dec
clc
les
repnz
pop
jnp
je
add
push
push
inc
dec
jp
ja
add
dec
sbb
mov
mov
adc
push
scas
dec
int3
icebp
les
ds
xor
out
fisttpll
add
or
cmp
leave
cmc
jo,pn
mov
cmpsl
add
or
lret
int
push
push
push
int3
loopne
cld
pushf
add
inc
fnstsw
mov
ret
cmp
push
push
stos
stos
mov
mov
pop
dec
lahf
and
outsb
jl
push
pushl
adc
insl
stc
xchg
repnz
sub
lods
push
ret
and
daa
mov
sub
jnp
test
rol
or
xor
lds
ja
mov
push
mov
and
dec
xchg
sub
test
xor
jp
xorb
xor
dec
cmc
scas
adc
in
jmp
sub
mov
ja
jb
pop
cmpsb
sub
outsl
sub
mov
lods
out
xlat
mov
inc
add
ss
cmpsb
cmpsl
testl
repz
pop
pop
jae
cmp
incl
pop
or
inc
dec
lods
sbb
jp
add
jecxz
rorb
pop
insb
icebp
cmp
adc
xchg
lods
adc
cwtl
fs
pusha
in
andb
xchg
cli
cmp
repnz
inc
jo
dec
insb
mov
movsb
rcrb
sub
pop
xchg
xlat
loop
aaa
xchg
sahf
lcall
jp
mov
pop
je
xchg
ficoms
fs
push
mulb
movsb
fcomip
loopne
call
xchg
mov
xchg
mov
rclb
xchg
sahf
shl
in
clc
out
shlb
cmp
add
cmp
insl
add
rolb
fsts
mov
mov
outsl
fsubs
orl
popf
loop
jl
inc
push
push
and
int
mov
int
xchg
push
pop
pop
cmp
sbbb
mov
jecxz
rcll
call
mov
pop
or
push
dec
sub
lret
cmp
dec
mov
sub
imul
xchg
lods
cmp
pop
jo
scas
popf
call
insb
push
jle
dec
inc
adc
emms
push
jne
test
jb
xor
cmp
int
insb
push
sbb
push
adc
bound
or
sar
jg
fistl
popa
ret
xor
fsub
sbb
stos
cmc
lret
xor
int3
push
cmc
mov
iret
mov
lds
fbstp
bound
icebp
fwait
stos
stc
sbb
das
add
sbb
out
cmp
inc
imul
mov
adc
xor
mov
je
cwtl
in
pop
fwait
nop
xorl
mov
movsl
divl
xor
push
lss
ja
cwtl
sub
or
int3
lret
je
js
popl
or
sarl
xlat
outsb
lret
xchg
push
xor
aam
loope
push
loop
sub
lea
std
es
movsb
xchg
push
mov
and
addb
shlb
dec
jnp
jg
adc
jbe
popa
mov
inc
in
and
int
or
jne
dec
dec
in
out
dec
pusha
and
popa
int3
popf
mov
push
mov
jb
fcompl
lods
in
test
xchg
pushf
cli
cmp
addr16
mov
pusha
mov
sbb
xchg
jg
sub
xorb
jle
sub
sub
mov
mov
and
adc
xchg
add
stos
stos
gs
rcll
xorl
jle
xor
pop
mov
stc
add
adc
inc
add
mov
mov
sarb
jmp
pusha
and
xchg
sbb
rep
mov
mov
sarb
cs
mov
lahf
hlt
sub
loopne
and
mov
sub
push
dec
test
loopne
jl
push
dec
mov
insl
mov
or
scas
movsl
dec
push
je
icebp
bound
or
lea
aaa
mov
mov
stos
clc
insb
ret
mov
lds
xor
xchg
daa
xchg
xor
mov
mov
pop
repnz
xor
jno
inc
fisubrs
push
in
inc
jmp
and
xlat
inc
in
daa
bound
jnp
mov
adc
sahf
mov
mov
pop
inc
mov
jle
dec
sahf
lds
xchg
push
outsl
inc
mov
stos
xchg
fcmovu
orb
fldenv
mov
flds
push
mov
test
xor
push
std
push
js
mov
es
mov
cli
pop
fnstenv
adc
mov
sbb
sbb
mov
pop
inc
mov
and
aas
cmpsb
cltd
imul
mov
rolb
xchg
mov
cmp
mov
bswap
es
push
sbb
sub
bound
insb
inc
loop
add
add
mov
les
out
sub
inc
or
xor
mov
daa
xchg
cs
dec
insb
movsl
in
push
adc
and
pop
inc
in
stos
cltd
jecxz
cltd
or
jbe
jae
jbe
ret
or
xor
push
and
out
test
adc
pop
xor
iret
loop
out
movsb
push
push
cld
int3
mov
ljmp
mov
jmp
test
add
adc
and
inc
loopne
hlt
or
pop
or
mov
pop
aam
push
and
aad
daa
inc
dec
fldt
clc
movsb
mov
dec
mov
fsub
rclb
lahf
aam
cmp
mov
test
sti
lds
lods
js
mov
imul
add
std
fwait
mov
adc
cs
xchg
gs
arpl
push
cmp
cmp
push
scas
pop
movb
fs
and
ljmp
hlt
cltd
cmpsl
inc
sub
ret
sub
push
repz
push
repnz
inc
adc
rcrl
jae
int3
and
add
mov
jl
das
push
cltd
in
fistl
popa
mov
inc
jb
xor
je
stc
or
xor
jle
xchg
das
mov
lds
orl
fdivr
jmp
push
leave
jns
aaa
and
test
outsl
fstps
inc
sarl
pop
inc
js
or
les
jecxz
pop
insb
xor
cmpsl
mov
add
jbe
ret
popa
mov
jbe
mov
imul
adc
mov
jmp
jp
jne
pop
pusha
xchg
pop
je
add
cli
test
sub
mov
dec
xchg
pop
push
xor
call
nop
aam
and
std
cs
stc
int
ja
cmp
pop
dec
and
inc
test
jo
in
push
ljmp
jae
mov
xchg
add
pop
fcomi
add
push
aad
ja
mov
jnp
sub
jmp
adc
mov
enter
outsb
mov
out
int3
test
xor
mov
dec
jle
adc
dec
lock
shlb
and
xlat
es
int
idiv
stc
int3
push
stos
add
popa
sbb
jle
sbb
enter
repz
mov
and
sub
cli
inc
jnp
jno
jg
mov
push
or
cmp
xlat
jmp
push
xor
icebp
int
test
xorb
sbb
jbe
scas
xor
dec
outsb
fucomi
dec
or
xor
aaa
pop
cmp
mov
sbb
pushl
jg
sarb
and
lret
mov
push
addr16
and
xchg
or
mov
inc
inc
pop
subb
pop
sbb
outsb
lea
lods
cld
andl
jp
mov
and
dec
xchg
mov
xchg
call
and
lds
add
dec
dec
jmp
std
loopne
imulb
adc
pop
pop
aam
testl
cmpsl
push
push
pop
fstps
lahf
cwtl
dec
inc
ret
sahf
in
ja
popf
test
push
aam
xchg
xchg
sub
lock
mov
into
insl
jnp
pop
jge
movl
mov
adc
inc
pop
sbb
jmp
dec
in
lahf
fxch
pop
push
mulb
jle
mov
popf
adc
mov
mov
gs
or
lods
mov
inc
lret
sti
movsl
insl
mov
mov
cld
popl
pop
xlat
ja
imull
and
mov
cld
inc
addr16
pop
mov
aam
ret
mov
loop
inc
movsb
mov
loop
push
into
adc
enter
dec
aas
jg
jge
push
sub
cmc
mov
dec
flds
lock
ficoml
arpl
xor
add
xchg
scas
cltd
iret
ficoms
push
jmp
in
ret
je
or
call
in
sub
push
inc
hlt
pop
add
loope
inc
shr
push
push
xabort
cmp
loope,pn
sbb
mov
or
rcrb
out
cmpsl
roll
jle
movsb
and
sub
jbe
mov
lret
test
pop
xor
cmpsl
fidivl
test
daa
jge
pop
bound
scas
call
cmpsb
mov
fs
std
inc
and
insb
pop
movsb
scas
pop
and
mov
lods
movsl
inc
lea
inc
jl
or
xchg
push
popa
sbb
pop
rcr
and
mov
jo
pusha
mov
xor
sbb
dec
test
sub
mov
sbb
cmpb
divl
aas
sub
jmp
lcall
outsl
xchg
and
das
leave
lods
cwtl
dec
into
in
pushf
and
lahf
cmp
fbld
aam
dec
or
cld
mov
cltd
inc
imul
jnp
mov
ret
jbe
sti
mov
inc
mov
int3
insb
iret
mov
sbb
dec
dec
push
push
push
sbb
sub
push
pop
sahf
mov
insl
cmc
lcall
popa
jle
ret
mov
sub
imul
rdmsr
data16
mov
or
jno
xor
dec
cmp
add
mov
mov
pop
xchg
xchg
js
fcmovnb
jl
mov
jae
jg
push
mov
mov
pop
out
dec
xlat
push
dec
mov
inc
aad
sbb
stos
mov
mov
sti
jle
sarl
iret
xor
xor
mov
inc
addl
push
xchg
int3
movsl
adc
imulb
sbb
mov
fistpll
sub
xchg
push
testl
fiadds
cmp
jbe
outsb
add
xchg
clc
pop
pushf
xchg
mov
pop
push
mov
adc
bound
push
jp
cmpl
adc
test
daa
mov
push
xchg
out
out
loope
imul
stc
inc
cmp
jo
mov
or
cli
cmp
lock
and
sub
push
out
or
loope
jl
sub
pop
mov
xor
push
repz
xchg
rorl
cmp
test
outsb
mov
fidivrs
lcall
int3
xchg
loop
test
or
insb
nop
jmp
sbb
mov
dec
stos
dec
push
push
push
out
movsb
lods
ss
hlt
test
enter
dec
xor
dec
mov
push
dec
fimull
std
sbb
pusha
sbb
faddl
insl
dec
pop
sbb
jge
xchg
mov
out
ret
icebp
mov
pop
jmp
xchg
in
push
enter
std
mov
sbb
leave
in
out
xorl
push
cmp
cmpl
ficoml
or
test
cmp
mov
jb
lret
lds
push
jae
cmp
xchg
inc
xchg
rolb
lock
loope
lret
inc
or
insl
scas
loop
push
jp
or
mov
sbb
adc
push
xchg
fnsave
jmp
add
xor
sti
aaa
sub
pop
outsb
mov
testl
in
mov
lcall
xor
or
dec
and
xchg
fs
jl
sbb
outsl
out
mov
jno
xor
cli
pop
push
mov
add
pop
add
loop
xchg
push
and
test
stos
out
pop
pop
sbb
jnp
les
cmc
in
jl
cmpsb
cmpsl
loope
fcmovbe
test
mov
dec
rcll
es
into
movhps
mov
sub
pusha
movsl
out
test
mov
rorl
mov
xor
or
cmp
rol
subb
adc
add
cltd
icebp
les
sti
inc
lret
loopne
aam
test
faddl
or
pop
jbe
cwtl
dec
xchg
pextrw
mov
sbb
dec
stos
jge
in
cmpsl
js
loop
scas
int
test
pushf
stos
inc
arpl
loop
ret
mov
push
jnp
loop
sub
xchg
loop
orb
push
fprem1
test
and
push
loope
scas
cli
mov
stos
inc
outsl
mov
xlat
xor
add
and
push
dec
je
mov
jle
inc
jmp
and
movsl
adc
movsl
sahf
dec
lcall
fimuls
sbb
sub
test
mov
add
xor
in
rcrl
xor
outsl
icebp
fnstsw
jge
lcall
cmpsb
sub
aad
outsl
repz
movsb
std
xchg
pop
loope
mov
call
imul
dec
lods
and
pop
inc
mov
adc
scas
and
cs
sahf
das
inc
ret
hlt
adc
add
arpl
lcall
or
pop
push
cmp
hlt
fsubl
imul
push
jle
push
or
je
fstpt
mov
lcall
enter
add
xchg
push
push
ret
push
fsts
jge
inc
lret
and
pop
insb
js
ja
cmp
cmpsl
testb
outsl
dec
lods
mov
push
lcall
dec
push
mov
mov
xlat
leave
xor
bound
cwtl
dec
loop
adc
mov
sub
ljmp
mov
mov
in
dec
add
mov
loopne
mov
xchg
sub
stc
push
sti
mov
sarl
cmp
pop
sahf
push
xor
divb
sbb
pop
repnz
fwait
dec
mov
into
out
hlt
fsts
xchg
jp
mov
test
fs
pop
in
popa
ja
lret
add
xor
mov
sbbb
leave
dec
mov
mov
cmpsb
jae
add
mov
not
rol
xchg
test
shll
inc
repnz
and
mov
ja
jae
mov
jb
add
decb
jb
ror
dec
cs
inc
pop
pop
fisubl
mov
pushf
call
jg
decl
arpl
sahf
or
movsl
jbe
jle
fdivr
mov
stos
sbb
adc
add
cltd
sub
inc
or
mov
mov
popf
lods
push
mov
pop
add
aas
dec
pop
dec
gs
adc
pop
dec
pop
cmc
inc
mov
jl
mov
jp
mov
cwtl
pusha
pop
outsb
mov
mov
movsb
and
aaa
jmp
mov
outsl
and
js
out
lds
xchg
bound
jno
mov
scas
mov
xlat
jge
bound
pop
mov
fmull
dec
mov
fsubl
or
add
sbb
adc
fwait
xchg
pop
add
inc
mov
mov
insb
popa
mov
in
test
add
push
ds
inc
cmp
and
add
mov
ja
and
jns
add
fbld
mov
popa
or
ret
mov
fldl
mov
idivl
mov
test
dec
outsl
cmp
pause
mov
pop
add
xor
dec
cli
and
scas
ja
sarl
enter
das
dec
popf
dec
mov
jmp
mov
sub
push
insl
push
iret
stos
out
ss
xor
cld
lods
xchg
sbb
and
pop
inc
test
repz
mov
jg
dec
shll
lods
xchg
ja
dec
dec
outsl
scas
mov
ficompl
test
jae
push
inc
xchg
push
pop
rolb
add
jae
add
into
pop
xor
arpl
aad
push
lret
mov
rol
in
dec
push
fs
xchg
push
or
cmp
enter
sub
es
pop
inc
sbb
loope
mov
mov
fs
sub
xor
dec
adc
dec
orb
add
cltd
mov
adc
jl
mov
loope
or
out
outsl
cmp
lret
idivl
iret
pop
dec
sahf
ds
mov
push
sahf
inc
or
push
out
hlt
pop
lods
xor
in
sub
mov
jmp
mov
test
sbb
or
pop
pop
push
sbb
ja
in
hlt
mov
pop
push
stos
or
pop
mov
iret
ss
jno
pop
mov
aaa
sbb
and
stos
bound
inc
fldenv
push
mov
dec
pop
xorb
in
mov
xchg
inc
int3
adc
dec
cwtl
cmpsb
mov
sub
mov
push
mulb
sub
imul
add
inc
push
popa
sbb
stos
cmpsl
insl
jb
arpl
cld
add
cmp
inc
aam
clc
les
dec
xchg
roll
xor
jae
jle
and
ljmp
adc
popa
add
leave
lcall
adc
popa
sbb
mov
scas
dec
ret
pop
sub
cmp
call
pop
mov
pop
mov
js
push
push
es
scas
mov
push
shlb
int3
imul
jbe
dec
push
sub
in
pop
xchg
and
jo
mov
push
mov
inc
pop
jg
ret
mov
fists
scas
clc
mov
fs
cmp
adc
push
out
xor
add
test
mov
hlt
mov
add
int3
lahf
xor
inc
adc
in
mov
incl
add
sbbl
or
movsb
lock
cmp
stos
adc
out
fucomip
cmp
sti
js
dec
sub
cwtl
out
divps
push
and
cmp
cwtl
ret
push
fistps
and
adc
scas
pop
xor
pusha
and
xor
fnstcw
inc
cltd
mov
inc
jmp
aad
mov
sub
movsb
div
xor
mov
xchg
mov
test
sbb
lea
jmp
push
push
dec
mov
ja
add
pop
xchg
test
add
test
add
cld
mov
cmp
fcomi
and
loope
in
mov
mov
cli
mov
pusha
test
scas
fisubl
mull
mov
sahf
cmp
insl
inc
or
jbe
mov
jnp
mov
cmp
push
mov
pop
sub
mov
pop
mov
mov
sahf
int3
sub
ja
xor
push
loop
bnd
clc
dec
cmp
push
cmp
cmp
cli
je
ja
mov
jo,pn
int
in
mov
mov
test
jnp
sub
xchg
je
sahf
fucomi
fstpt
in
sarb
lock
inc
mov
adc
xorl
mov
je
push
add
mov
fnstcw
in
add
push
mov
lods
dec
leave
js
or
sbbb
pop
hlt
sub
add
jl
sbb
add
std
jno
ss
das
test
jns
sti
shrl
aaa
outsl
loop
jle
popa
jl
mov
lahf
outsb
jge
cmpsb
cltd
fucomi
xchg
jae
jle
add
or
add
insb
jp
mov
repnz
pop
cmp
popf
test
push
je
out
sub
sub
mov
dec
repnz
fnstenv
xchg
sub
mov
int
ret
or
ja
xor
xor
xchg
mov
pop
sub
sub
and
sbb
mov
add
lock
fistpl
adc
negl
adc
idiv
sarb
inc
dec
pop
mov
fsubr
lea
mov
add
cmp
cli
out
mov
aam
bound
lret
xchg
xor
mov
or
adc
and
dec
adc
push
ret
fmul
addb
je
lea
cmp
adcb
insb
adc
ja
cmp
xchg
ror
adc
cmp
push
jp
mov
or
lret
aam
inc
xor
push
insl
in
push
dec
les
and
out
lret
inc
repz
sub
xchg
xchg
push
jbe
add
lret
add
outsb
ss
cmp
icebp
je
js
cli
ss
dec
adc
pop
push
fcomp
into
gs
subb
mov
arpl
in
and
ljmp
lds
aaa
mov
mov
xchg
rol
xchg
movsb
mov
dec
fwait
out
inc
mov
mov
mov
add
inc
popf
lock
jmp
push
xlat
mov
stos
or
sar
rol
daa
mov
cs
mov
cmpsb
call
xlat
and
and
dec
in
mov
adc
cmp
stos
xchg
rcll
aas
call
and
xlat
mov
and
lods
xchg
xor
ret
nop
mov
pop
dec
leave
stc
mov
adc
push
xor
sbb
xor
xchg
shl
jo
add
mov
xor
inc
outsb
loop
rcr
inc
test
mulw
inc
aad
sub
mov
fdivrs
aad
mov
dec
cli
data16
sbb
mov
xchg
lods
dec
sub
pop
out
les
imul
xchg
enter
xchg
sub
repnz
pop
inc
outsl
mov
cwtl
mov
and
jmp
xchg
in
lahf
mov
adc
aas
gs
pop
mov
or
cmc
daa
and
push
call
shll
mov
jae
fcoml
mov
jl
pop
mov
inc
cmp
dec
xor
mov
orl
loopne
xchg
movsl
lds
xor
insb
sub
push
and
bound
scas
or
addr16
punpckldq
jne
inc
pop
sbb
fwait
adc
pop
adc
mov
mov
add
cmp
push
xchg
mov
pushf
out
xor
enter
aas
and
sub
fisubrl
arpl
xor
test
fdivr
data16
shr
insl
xchg
movsl
xor
mov
lods
jno
push
imul
mov
push
dec
xchg
jbe
loope
cmp
lods
and
mov
out
in
sub
jae
lret
push
adc
cwtl
or
xchg
xchg
lods
sbb
push
jne
push
fs
gs
jo
push
insl
or
jp
dec
xchg
imul
jnp
jle
lods
lea
out
push
clc
inc
imul
imul
xchg
or
dec
lahf
mov
movsb
bound
mov
cmp
cmpsl
jecxz
fstpl
repnz
clc
dec
and
dec
push
jb
and
ret
xor
mov
xchg
add
inc
inc
sbb
mov
std
mov
sbb
test
fs
iret
xor
xchg
faddl
daa
push
dec
in
repz
fwait
shll
dec
jo
data16
popf
cmpsl
dec
inc
mov
jno
shrl
jg
icebp
sub
aas
hlt
dec
pushf
cmp
daa
add
jmp
mov
mov
jecxz
adc
imul
add
mov
sbb
clc
push
test
dec
rorb
sbb
movb
mov
testl
pop
mov
push
push
jo
out
andb
test
andb
push
xor
popa
push
sbb
add
rcpps
mov
cmp
jle
scas
jb
rolb
and
shl
adc
movsl
mov
dec
sahf
pop
nop
sarl
xchg
arpl
push
xor
aaa
dec
ret
leave
test
mov
and
mov
add
das
or
xchg
ror
jge
adc
mov
loop
lret
dec
lahf
andl
cld
mov
aam
pop
pop
adc
push
xchg
dec
jp
jo
movsb
fcoml
scas
jbe
aam
or
in
lea
stos
xchg
insb
jmp
js
push
push
jge
add
out
mov
mov
sub
je
outsb
and
fcmove
cmp
cmc
jno,pn
imul
add
pop
dec
mov
cltd
pop
push
bound
rorl
shrb
sub
ret
or
pop
cmpsl
cmpsb
adc
xchg
arpl
xor
rcr
repz
push
mov
xchg
push
pop
add
or
aam
jbe
xchg
hlt
inc
ror
insl
lret
ds
das
add
lret
leave
lea
loopne
adc
imul
jmp
hlt
push
inc
jmp
or
subb
cmpsl
xchg
jmp
or
or
ret
loopne
mov
mov
sbb
jg
mov
inc
mov
push
xchg
jnp
loope
mov
and
mov
lds
push
movsb
arpl
lods
or
lcall
cmp
adc
xor
loope
jno
lds
adc
lods
sbbl
popf
xchg
jp
cmpsl
push
dec
cmp
sbb
and
cs
add
stos
mov
repnz
les
mov
adc
cmpsl
mov
cltd
sub
cwtl
jge
cli
lods
xchg
add
cld
out
nop
lds
mov
jne
mov
aam
or
mov
mov
mov
cmp
mov
test
xor
pop
insb
or
mov
xchg
sub
jle
std
cmp
mov
push
ret
push
and
fwait
adcb
push
movsb
or
inc
mov
push
add
imul
ljmp
imul
and
jmp
lahf
js
add
out
shrl
daa
pushf
sbb
nop
sti
sbb
lcall
cmpsb
adc
sbb
and
ret
scas
pusha
scas
dec
jp
frstor
ja
or
cmp
hlt
lret
sub
shl
popa
rorl
in
pop
popa
sbb
fsubl
adcb
cmp
sub
loope
jae
add
mov
rcrb
nop
jnp
adc
sub
dec
xor
xchg
xchg
jbe,pt
imul
shrl
jae
testl
test
mov
hlt
notb
inc
popf
xor
scas
arpl
aad
xchg
rorb
fbld
ja
cld
cld
cmp
ljmp
or
cld
sbb
cmp
push
insl
sbb
and
jg
xor
mov
scas
pop
pushf
push
xchg
lea
cmpsl
mov
fsts
out
pop
pop
rcrb
fadd
sbb
mov
scas
jo
js
mov
shll
dec
movsl
cmp
sti
sub
jae
or
add
leave
sti
or
enter
sub
adc
xchg
je
fdivrl
ljmp
test
das
xor
mov
insb
inc
aaa
jmp
mov
or
jmp
std
mov
or
cwtl
inc
mov
push
mov
sbb
mov
mov
das
mov
iret
cmpsb
inc
xchg
inc
pop
repz
negb
test
les
inc
fnsave
pushl
push
jae
sahf
in
mov
mov
orl
pushf
mov
iret
test
inc
hlt
fnsave
fisttpl
popa
sbb
xor
dec
hlt
fisttps
iret
loope
inc
jnp
lret
lcall
in
mov
xchg
inc
shrl
test
xchg
push
lods
cmp
mov
push
cmp
into
xchg
or
imul
dec
add
pop
in
je
mov
fildl
stc
testb
js
add
push
or
mov
fdivrs
or
shl
shlb
add
sbb
xchg
mov
inc
xor
enter
xchg
dec
jbe
xor
cltd
cltd
je
dec
and
aad
inc
hlt
bound
popf
inc
aam
inc
icebp
cmp
out
hlt
or
rorb
mov
jg
fsubs
rcll
push
or
popa
or
xchg
cli
jne
in
repnz
cmp
xchg
push
int3
mov
dec
push
test
mov
jecxz
mov
daa
gs
fwait
xchg
xor
xchg
jo
xor
loop
aaa
mov
js
fisubs
inc
pop
mov
xchg
test
testl
fld
or
xchg
js
shrl
xchg
xchg
enter
mull
jne
loope
rcll
mov
sub
add
mov
cmp
inc
mov
hlt
jge
paddsw
scas
mov
stos
mov
cmp
loopne
mov
or
fucom
pop
mov
push
sbb
insb
inc
cmp
cmp
xlat
ret
bound
push
xor
xor
xchg
mov
cmp
mov
testb
xchg
add
mov
lret
dec
sbb
jl
mov
inc
mov
sahf
aas
cmp
inc
addr16
and
mov
adc
xlat
jl
and
xchg
lock
mov
cmp
add
fsub
push
fst
push
dec
inc
lea
add
jmp
and
mov
inc
xchg
sbb
mov
sbb
pop
sahf
aam
or
adc
jnp
lret
mov
mov
adc
push
orb
pop
rcr
sbb
mull
lds
in
gs
ljmp
push
inc
adc
adc
and
mov
stc
scas
jnp
fdivp
ret
add
mov
xchg
rcrl
push
iret
jmp
mov
add
inc
lcall
shll
inc
leave
and
xchg
jae
push
fwait
xchg
flds
mov
stc
xchg
mov
icebp
mov
sahf
mov
xchg
je
mov
push
hlt
stos
cli
cmp
std
cltd
mov
push
push
fsubl
outsb
stos
pushf
mov
sbb
mov
movsb
mov
jmp
sbb
jns
jmp
xchg
inc
sbb
dec
mov
or
dec
jp
xor
ds
adc
daa
inc
add
inc
xor
sub
pop
inc
push
inc
dec
dec
sahf
pop
adc
fidivrl
push
ds
dec
lds
movl
xor
inc
std
xlat
adc
subb
xlat
pop
outsb
dec
jp
mov
adc
xchg
jne
xchg
dec
lock
lods
ljmp
jb
bsr
push
mov
add
pop
hlt
in
dec
mov
sub
sub
fucom
dec
repnz
in
mov
fldenv
cmpsb
aaa
test
jmp
jno
ficomps
bound
lret
imul
adcl
xchg
enter
dec
imull
int3
dec
inc
jno
mov
loop
inc
lds
push
or
adcb
xor
jmp
aad
int3
cmp
mov
into
pop
sahf
add
fldt
jae
jne
clc
adc
jns
fcom
int3
cltd
pop
dec
jnp
ret
adc
imul
das
sahf
jbe
test
pop
int3
add
add
clc
lahf
inc
lret
xchg
cmp
mov
les
aaa
scas
mov
xor
std
pushf
icebp
mov
fsubrl
out
pushf
mov
test
mov
jl
lcall
outsl
ror
inc
xchg
lds
jo
daa
xor
stos
lret
mull
loopne
rol
xchg
mov
cltd
fucomip
aad
sub
inc
outsl
inc
sbb
stos
sub
adc
cmc
jl
push
xlat
inc
push
and
shlb
jbe
xchg
jle
ret
out
inc
stos
lods
mov
pop
jo
sbb
or
stc
or
cmp
mov
xor
arpl
mov
loopne
and
sub
test
fs
movsb
sbbl
push
dec
loopne
out
cmpsb
sbb
mov
push
gs
dec
cmc
xchg
add
inc
or
or
mov
sbbb
sbb
sub
mov
arpl
pop
loop
xor
int3
jns
jns
pushw
xor
and
pop
cmpsl
jnp,pt
stc
nop
std
out
xor
faddp
cmpsb
mov
jo
jge
lret
sbbl
or
int3
sub
mov
leave
cmp
repz
and
cs
outsl
cld
cltd
out
xor
lds
mov
test
popa
dec
add
add
jmp
icebp
xor
pop
sub
sbb
inc
xchg
aaa
js
xchg
stc
dec
mov
mov
sbb
shll
in
mov
xchg
ret
mov
sub
sub
out
data16
test
jne
mov
cmp
imul
adc
xchg
jmp
cwtl
mov
lahf
push
ret
pop
inc
xor
movsb
pop
adc
or
adc
inc
mov
out
lret
fidivrs
sbb
imul
jbe
sarl
pop
fs
mov
cwtl
push
sbb
xchg
mov
sub
sti
xchg
cwtl
shl
stos
movsb
sub
shl
in
or
int3
call
outsl
fadds
xchg
mov
fidivrs
pop
xchg
pushf
jnp
inc
xchg
mov
call
lahf
es
dec
xchg
in
or
inc
and
sub
aam
nop
popf
fsubrl
out
and
inc
shlb
pop
and
scas
lods
push
lret
mov
jecxz
pop
mov
scas
mov
jo
dec
mov
mulb
mov
sub
sub
mov
shrl
jb
mov
mov
sbb
mov
int3
pop
aad
loopne
adc
test
lods
icebp
add
mov
cmp
mov
fucom
jnp
outsb
lret
sbbl
aam
or
ja
jns
mov
sahf
pop
mov
or
cmpb
jns
xchg
sub
adc
sbbl
mov
push
pop
data16
stc
pop
leave
push
loop
stos
test
xchg
adc
enter
cmpsl
lods
add
gs
jne
negl
dec
sub
dec
ficomps
pop
pop
mov
aad
xchg
test
loopne
sbbb
out
leave
loope
loope
pop
out
pop
jmp
mov
mov
iret
mov
ljmp
insl
jmp
je
mov
insl
jmp
mov
jae
sbb
jmp
xor
cld
nop
out
push
jnp
xor
fadd
divps
adc
pushf
sub
push
outsl
clc
sbb
addb
je
hlt
dec
xchg
inc
mov
jg
lea
nop
inc
push
fmul
pop
fidivrs
sbb
jae
xchg
and
or
sub
std
adc
and
dec
cli
repz
inc
adc
adc
dec
cmp
inc
mov
adc
iret
add
mov
add
pop
leave
mov
nop
jnp
xchg
push
push
andb
loop
pop
cmp
hlt
clc
inc
pusha
push
mov
pop
mov
out
in
xor
fldenv
inc
jle
cmc
stc
data16
es
push
pusha
divb
sahf
int
outsl
xor
pop
and
push
mov
xor
out
inc
clc
xor
arpl
insb
test
inc
add
pushf
movsb
fbld
jge
mov
pop
testb
dec
adc
cmp
stos
lea
lds
test
pop
popa
push
xor
xor
subl
and
test
or
sbb
mov
sub
pushf
pushf
jbe
dec
rorl
jg
int3
dec
jne
sbb
pop
jnp
jp
ret
mov
subb
jecxz
into
mov
popf
push
jg
or
mov
fiaddl
fwait
test
push
cmc
cs
repnz
arpl
js
icebp
inc
imul
mov
lea
sbb
je
add
sub
int
test
push
lock
push
and
xlat
inc
lcall
das
orl
in
mov
lea
sbb
or
dec
mov
subb
fistps
mov
or
mov
mov
out
sbb
in
neg
pop
jo
jecxz
test
xchg
sub
scas
fs
push
aas
cltd
cli
and
pop
mov
xchg
loopne
fiadds
mov
xchg
xor
push
outsb
add
stos
fldt
inc
sbb
fmull
rcll
adc
or
das
cmp
fdivs
sub
dec
lock
xchg
rorb
imul
movsl
psllq
cmp
lods
rolb
cmp
inc
sbb
loop
mov
mov
ret
push
aas
adc
outsb
iret
push
mov
test
outsb
mov
xor
pop
dec
push
mov
xchg
mov
push
pusha
pop
jge
adc
push
xchg
adc
movsb
mov
add
pop
nop
mov
iret
jb
fcmovnu
ss
clc
out
pop
jg
test
out
xchg
or
enter
cmpsb
es
lods
outsl
movsl
mov
out
shll
sub
pop
icebp
shrb
orb
cltd
push
rorb
add
pop
js
lods
outsl
lret
dec
mov
xor
jmp
jae
out
xchg
in
push
or
and
lcall
std
mov
cltd
or
mov
mov
call
sub
jnp
mov
xchg
push
inc
in
sub
inc
packssdw
pop
out
ficoms
sub
scas
inc
or
idivl
js
sti
les
push
add
inc
jno
mov
popf
mov
je
cwtl
stos
mov
lcall
ror
punpcklwd
mov
mov
std
outsl
icebp
fistpl
aad
mov
jge
inc
mov
xchg
in
lahf
sbb
mull
enter
push
mov
jle
xor
addr16
mov
add
rcl
add
sahf
ss
repz
cmpsb
outsl
xchg
sub
addr16
movsl
jnp
sbb
or
sub
mov
push
jmp
add
int
cli
hlt
cmp
or
stos
or
in
std
out
leave
js,pn
sub
cld
xor
cmp
lds
inc
ljmp
movsb
cwtl
inc
cld
xchg
shlb
mov
push
sti
add
scas
push
daa
mov
xchg
jbe
ret
aaa
arpl
jge
sarb
cmpsl
hlt
lahf
xor
sahf
adc
dec
insl
mov
insl
mov
loop
dec
sbb
cmp
lods
mov
lcall
loop
loopne
fstl
enter
andb
ret
arpl
add
or
test
mov
rol
iret
lds
ja
imul
pop
adc
leave
std
add
aaa
mov
xchg
and
pop
fnstsw
aas
mov
roll
xchg
xor
and
jnp
mov
ss
mov
cwtl
in
adc
dec
ja
jg
sbb
push
mov
push
inc
imul
cld
arpl
pop
fwait
inc
je
sbb
fst
xchg
mov
loopne
dec
test
cmpsl
sub
popa
ret
std
mov
mov
movsb
test
adc
xchg
jno
inc
popa
pop
adcb
inc
stos
push
dec
outsl
outsb
sbb
in
or
shlb
xchg
push
outsl
out
or
outsb
mov
mov
mov
mov
divb
adc
mov
lock
cmp
jae
mov
xor
mov
loop
in
jnp
pop
daa
xchg
iret
push
mov
dec
xchg
in
jecxz
cld
inc
jb
adc
scas
push
lret
movsl
and
sub
jl
and
cmpsb
shlb
sahf
mov
add
loope
cwtl
or
aad
in
adc
nop
fstpl
stos
xlat
or
leave
cmpsb
sbb
lods
lret
sbb
out
stos
test
hlt
push
or
or
push
or
xor
sub
fldl
push
pusha
lret
test
xchg
mov
cmp
pop
dec
insb
out
mov
rclb
mov
xchg
fidivrs
cmpsl
lea
inc
mov
mov
cli
in
and
mov
add
jne
loope
xchg
jmp
mov
outsb
push
or
sbbb
int
in
lret
lret
push
fcompl
xchg
inc
push
xchg
adc
sbb
js
into
cmp
cwtl
les
jo
push
push
fcoml
and
loopne
pop
push
sti
sbb
repz
shll
or
add
leave
scas
pop
push
shrl
out
pop
push
inc
das
mov
push
shlb
xor
ret
mov
adc
cmp
insb
mov
push
mov
repnz
bound
inc
lods
stos
aam
add
jmp
jp
loopne
or
mov
push
xchg
add
mov
xchg
or
addb
jecxz
pop
mov
inc
lret
xor
adc
jb
movsl
xchg
mov
mov
push
mov
sbb
shlb
xor
out
addl
push
lock
shrb
jnp
stos
jecxz
xchg
cmc
call
sub
dec
in
lock
jnp
sbb
mov
push
dec
int
pop
add
jo
test
es
pop
push
ds
xchg
inc
pop
mov
push
mov
sbb
shrl
pusha
imul
cmp
aaa
stos
add
pop
jmp
mov
movsl
sbb
jl
test
push
xchg
imul
faddl
adc
mov
les
push
ret
mov
add
out
sahf
in
cli
scas
daa
jge
pusha
xchg
pop
xchg
mov
cli
test
mov
lods
inc
inc
mov
shr
mov
loopne
sub
test
loopne
adc
sbb
call
cmc
gs
or
aaa
movb
cli
fwait
mov
cwtl
dec
shrb
and
mov
aaa
sti
ss
jno
pop
lret
xor
cmp
mov
stos
enter
cs
cltd
sub
xorb
addr16
cmp
test
jb
or
aam
mov
out
jl
mov
push
test
mov
push
mov
clc
xchg
push
rorl
mov
mov
jne
xchg
sbb
dec
lret
sti
stos
gs
ret
sti
jns
std
xor
and
mov
popa
mov
mov
int
lret
out
int3
lea
or
pop
jne
mov
mov
cli
aad
inc
and
hlt
dec
xor
ljmp
mov
mov
cmp
inc
mov
es
cmp
incb
rcl
cmpsl
jl
cmp
jne
jg
repnz
xor
stc
push
push
pop
xchg
fmuls
mov
out
pop
decb
sahf
jge
inc
mov
pop
pop
add
cmp
mov
sbb
pop
adc
mov
out
out
jo
adc
test
cmp
stc
dec
xchg
xor
xchg
shrl
and
ret
sub
push
pop
and
icebp
in
icebp
mov
ficompl
pop
dec
push
and
jl
dec
cld
ljmp
pop
aaa
outsl
aas
cli
adc
pop
aaa
fdivrs
mov
addr16
shl
cmpl
sub
test
mov
in
xchg
ss
lret
dec
or
icebp
dec
pop
mov
jecxz
mov
lods
test
cmpl
frstor
lods
sub
shrb
jne
lods
ds
xchg
sbb
popa
in
test
pushf
mov
jge,pn
pushf
cwtl
call
inc
add
test
mov
bound
inc
inc
jg
hlt
lds
arpl
push
xor
cmpsl
dec
mov
push
mov
add
popf
lcall
pop
lods
leave
cwtl
mov
mov
faddl
adc
mov
into
mov
stos
pop
cwtl
bound
iret
xor
lods
sub
mov
add
pop
push
adc
add
push
sbb
outsl
outsb
adc
jns
push
popl
inc
subb
jp
cmp
jno
inc
jne
lock
xlat
pop
jne
punpckhdq
or
mov
push
stos
cltd
mov
sbb
ds
xchg
test
sub
pop
gs
mov
dec
jo
push
sub
xchg
mov
rorl
loope
in
sbb
insl
mov
cmp
pop
in
or
mov
in
fildl
sub
sub
aad
jae
loop
mov
push
pop
aam
cld
xor
out
repz
clc
popa
ds
addr16
pop
inc
or
dec
cmp
adc
push
adc
aad
insb
ds
lods
repz
fldcw
inc
dec
dec
inc
fadd
movd
sub
es
in
and
lods
sbb
or
sub
pop
sbb
cmp
cmp
aas
lcall
push
mov
outsl
or
jo
inc
jg
dec
int3
mov
gs
out
sbb
test
cmp
push
sbb
add
int3
mov
xchg
call
sub
insl
or
mov
loopne
addl
cwtl
push
xor
fcmovb
pushl
lods
sbb
int
data16
xor
cmc
sbb
or
or
mov
notb
adc
jmp
popa
aaa
xchg
inc
leave
inc
in
pop
lcall
adc
adc
cli
pop
andl
sub
and
or
clc
jl
xlat
lods
je
and
fstl
mov
cmp
out
mov
filds
sbb
mov
cmp
adc
fwait
push
fiaddl
mov
cwtl
insl
arpl
nop
sbb
inc
std
xchg
gs
mov
decl
mov
pop
mov
push
fcmovnu
or
loope
fwait
mov
js
jge
rcl
and
out
bound
xchg
push
jmp
xchg
iret
dec
inc
lds
ret
ljmp
test
pop
pop
mov
stos
imul
adc
mov
mov
inc
push
mov
inc
mov
cmp
rorl
rcl
test
jno
mov
fisubrs
lock
repnz
pushf
loop
sbb
push
xlat
xor
xor
insb
or
dec
es
lcall
xor
aam
push
mov
aas
jge
iret
sbb
push
movsb
repz
mov
mov
fcoms
test
int3
mov
adc
cli
xchg
nop
fildll
sbb
pop
xchg
outsb
loopne
pushf
ret
fwait
add
mov
daa
les
add
xchg
das
pusha
push
pop
adc
push
xchg
inc
push
std
push
ficomps
adc
movsl
mov
pop
out
push
enter
pop
cmp
fsubrl
shll
pushf
xor
adc
outsb
add
enter
sbb
out
fwait
mov
lock
mov
mov
cmp
mul
out
lods
xor
jge
adc
xor
inc
cmpsb
push
loopne
cmp
shlb
mov
aad
stos
xor
cmp
bnd
leave
inc
inc
mov
aaa
in
sub
inc
pop
lahf
cmpsb
mov
addr16
pop
pop
mov
das
fwait
adc
in
jle
mov
aam
pop
add
in
loop
movsl
jl
inc
pop
dec
pop
pushf
push
sbb
sti
xchg
mov
shr
out
popf
ret
mov
and
lock
int
push
popf
sub
pushf
std
jmp
jmp
xchg
cmc
mov
mov
xchg
fmul
xchg
shll
push
push
dec
out
aam
cli
lods
aas
bound
adc
dec
cmp
lcall
dec
jp
sub
hlt
xchg
xchg
push
scas
ds
jge,pt
sbb
fyl2xp1
outsb
xorb
in
adc
mov
dec
dec
rdpmc
es
cmpl
xor
push
ja
out
andl
pop
jecxz
cmc
xor
lcall
xor
sbb
clc
data16
add
pop
mov
push
inc
xlat
test
mov
jp
and
test
jo
jp
lea
cmpsl
sbb
cmp
testb
mov
in
fnstsw
shl
lea
in
xchg
jbe
popa
dec
pop
mov
stc
inc
mov
iret
hlt
into
adc
outsb
clc
push
add
add
xchg
jbe
popa
xor
pushf
shlb
lods
cmp
mov
inc
cld
out
mov
das
test
repz
inc
clc
fdivrp
loope
xchg
xor
fiadds
pop
movsb
mov
lret
mov
inc
xor
adc
fstpl
lods
mov
pusha
fildll
shlb
push
stos
xor
stos
fwait
adc
repz
icebp
fcoms
movb
popf
pop
sub
test
enter
clc
inc
push
mov
ret
repz
add
push
insb
ficomps
or
pop
and
push
pop
and
icebp
sbb
fidivl
xor
loope
dec
cmp
cmp
filds
sub
or
mov
imul
xchg
jns
pop
mov
iret
gs
insl
popf
roll
ja
inc
cmp
enter
pop
cmp
sub
in
pushf
pop
push
leave
mov
lahf
sub
mov
scas
sbb
in
inc
sbb
mov
insl
cmc
add
insb
movsl
pop
push
mov
jne
ficompl
add
mov
pop
imul
repz
fwait
insl
jmp
cli
andl
push
idivb
jp
cld
mov
cs
pop
stc
push
dec
ss
inc
pop
out
dec
cs
ficoms
dec
xlat
pop
cmp
data16
rcr
fidivrs
jns
cltd
ss
cmpsb
sahf
and
mov
inc
add
add
outsl
ja
pop
xor
ret
and
pop
xchg
push
add
cld
stos
or
fcmovne
nop
mov
pop
test
push
aas
sbb
inc
push
lcall
xchg
adc
mov
cli
stos
mov
push
int
or
push
ficompl
pminsw
sub
lea
testl
ret
adc
fwait
nop
aad
mov
out
xchg
jns
jne
jnp
cs
sub
sbb
pop
jle
adc
xchg
sbb
mov
cltd
sub
xchg
mov
inc
shll
fcmovnbe
in
loope
arpl
lods
jl
aaa
sbb
cli
mov
mov
and
lock
lds
mov
outsb
push
incb
cmp
jne
adc
or
out
int
cmpsb
fbstp
adc
dec
xlat
movsb
dec
mov
shll
add
pop
cmc
push
jne
insb
shrb
rcr
xchg
jno
repz
lret
mov
or
jl
jo
dec
imul
lods
jecxz
sti
push
push
cmp
jb
pmuludq
or
jp
fdivl
dec
stos
lock
pop
mov
int3
sub
rolb
clc
arpl
dec
data16
sub
ds
push
xchg
push
jo
sub
test
sbb
aam
je
lahf
xchg
xor
or
ret
loope
mov
mov
lea
dec
xchg
das
lretw
adc
mov
outsl
mov
in
mov
xchg
pop
icebp
mov
jns
lret
sbb
mov
or
outsb
add
push
test
push
sub
movsl
or
aas
out
lahf
decl
pop
popf
fstpl
call
mov
in
add
fwait
dec
xchg
inc
xchg
cmp
mov
adc
ja
cmp
push
paddw
pop
das
mov
inc
scas
icebp
fistpll
pop
aas
sbb
in
jecxz
neg
in
jae
movsb
pop
inc
push
adc
jno,pt
xchg
xbegin
mov
add
dec
inc
mov
or
les
pop
call
es
imul
xchg
jp
dec
dec
jb
shll
pop
mov
mov
inc
and
mov
in
xor
add
mov
stc
xchg
mov
or
movsl
mov
aaa
jle
add
imul
int3
dec
sub
xchg
xchg
std
mov
es
mov
shlb
or
jle
and
enter
sub
cs
inc
loope
fwait
and
test
pop
dec
add
jl
jne
mov
jae
sahf
int3
out
sbb
push
das
stc
stos
pop
and
sub
test
iret
mov
std
inc
int
dec
or
aam
sub
test
stc
push
xchg
ret
jmp
test
dec
and
sbb
add
xchg
adcb
mov
cwtl
mov
inc
mov
sti
xchg
out
stc
dec
shlb
mov
rorl
fcmovne
cwtl
add
mov
push
nop
sub
insb
icebp
lahf
movsb
inc
insb
test
mov
loope
out
cmp
imul
lods
pop
adc
das
les
inc
sub
clc
cs
sbb
push
sbb
jo
sub
mov
jge
loopne
cmp
insl
xchg
ror
mov
sub
adc
test
je
stc
dec
sub
inc
testb
ds
in
dec
and
stos
push
xchg
or
aad
lahf
incl
icebp
scas
shll
and
jne
test
addr16
outsb
outsl
mov
push
ss
les
roll
aaa
mov
daa
test
mov
gs
inc
or
outsb
mov
fstpl
rorb
cmp
cmpsb
sbb
sub
vcvtsi2sd
jl
jmp
mov
out
cmp
fisttps
mov
sbb
cld
push
add
push
hlt
pop
inc
or
cmp
cltd
test
dec
cmp
xor
and
negl
inc
ret
ja
adc
and
fstp
in
add
mov
out
or
xchg
dec
push
icebp
pop
in
jl
enter
rclb
cltd
shrl
or
sbb
fstps
jno
inc
aas
and
mov
aad
mov
test
lcall
lods
scas
out
ljmp
xchg
into
cli
loope
pop
dec
mov
pop
sub
cmp
add
ljmp
xchg
mov
mov
push
out
pop
adc
loop
sub
mov
jne
sub
ja
inc
pop
inc
stos
outsl
mov
xor
mov
add
bound
repnz
jp
push
mov
xor
ret
aas
and
lods
mul
mov
adc
fidivl
insl
dec
daa
mov
xchg
push
outsb
pushl
fbstp
sarb
adc
add
fdiv
div
ret
jl
sub
xor
push
fcmovu
icebp
aad
addr16
jmp
pop
cmp
inc
push
xlat
xchg
mov
call
mov
sub
push
xor
movsb
xchg
stos
jmp
jno
pop
dec
sbb
gs
arpl
push
add
outsl
xchg
jle
add
ljmp
mov
jge
mov
add
call
fs
stc
or
sahf
out
mov
fcoml
sub
aaa
xor
nop
in
scas
ret
pop
pop
mov
loope
push
xchg
pop
jns
inc
push
and
adc
dec
pop
jne
mov
dec
pop
test
icebp
push
sbb
lods
xlat
arpl
pop
jo
jl
dec
dec
stc
fsub
into
add
mov
jo
mov
mov
cs
cmp
enter
fiaddl
xor
scas
shrb
loope
gs
and
sbb
test
notl
addl
aad
cli
mov
jae
add
xlat
sub
cs
mov
and
pushf
lret
xchg
sbb
sahf
jmp
lret
popf
cmp
or
into
and
arpl
push
in
add
pop
cli
push
xchg
mov
dec
or
xchg
push
cmp
imull
jmp
and
icebp
sub
xor
push
adc
aam
pop
adc
movl
fs
movsl
sarl
aad
sbb
test
lahf
pop
jo
pushf
pop
aam
jns
insl
push
scas
arpl
into
roll
xchg
inc
pop
cli
xor
mov
rorb
or
add
fcmovu
push
aad
add
add
jno
mov
or
inc
and
mov
sahf
int3
pop
pop
int
add
sub
xchg
push
aaa
in
adc
add
imul
jns
rcll
inc
stos
mov
sbb
shlb
or
mov
xor
stc
loopne
adc
pop
cli
xchg
ss
and
xchg
popf
push
repz
adc
mov
and
push
cmpsl
shl
mov
lea
outsl
cli
sub
mov
sarb
push
sbb
out
cltd
pusha
push
mov
jl
mov
pop
and
lretw
leave
data16
outsb
jmp
mov
jb
pop
add
cli
mov
mov
adcl
inc
xchg
aam
movsb
xchg
jo
lcall
push
popa
enter
mov
pushf
arpl
mov
cmp
mov
mov
inc
jns
jmp
addr16
movsb
push
sbb
add
ja
and
test
inc
pop
or
dec
dec
push
mov
mov
or
xchg
push
lds
stos
aas
adc
and
mov
pop
jp
add
insl
inc
adc
cmp
push
inc
cmpb
int
fwait
sub
addl
inc
jbe
and
jl
pushf
xor
aam
or
insl
xchg
mov
movl
into
push
adcl
aaa
add
mov
ja
rolb
in
es
je
pop
xor
dec
push
ja
xor
or
mov
lock
sti
adc
test
push
or
lock
cmp
inc
aad
inc
imul
mov
dec
adc
push
shrl
repz
mov
imul
pop
nop
fadds
inc
es
jg
xchg
incl
aaa
mov
pop
mov
orl
cmp
stc
cltd
in
mov
movsl
in
xchg
or
push
shll
mov
sub
bound
inc
sub
mov
xchg
jb
mov
dec
ja
push
xlat
mov
fcomip
push
inc
push
xor
xchg
pop
mov
mov
sbb
dec
jbe
push
jge
mov
stos
lret
int
fldt
test
icebp
rclb
jne
sbb
out
cwtl
mov
xchg
and
dec
sahf
pop
rcrl
inc
xchg
lods
pushf
imul
scas
push
add
and
mov
jmp
or
adc
test
xlat
out
cld
cmp
shlb
dec
jno
enter
push
fidivs
mov
in
int
add
repz
inc
loopne
mov
xor
iret
sbb
fnstcw
inc
xchg
mov
movsl
or
ret
or
popa
inc
mov
push
cld
push
sub
mov
xchg
adc
adc
sub
push
mov
pop
mov
xor
inc
movsb
sbb
mov
and
dec
pop
movsb
mov
aad
shl
loop
gs
loopne
adc
push
je
fdivrp
pop
in
loope
loop
ret
sbb
das
cmpsb
sbb
pop
mov
cmc
mov
call
fidivrl
nop
cs
adc
push
addl
ret
cwtl
in
roll
iret
xor
add
pushf
cltd
pop
lret
fabs
mov
sub
mov
out
cs
sub
xchg
cmpsb
idivb
sub
fsubs
test
repnz
mov
cltd
push
sub
adcl
inc
inc
xchg
shrl
mov
ret
lea
jmp
repnz
out
push
sbb
int3
inc
rcr
adc
fsubs
psubusw
lods
out
outsb
add
push
bound
and
xchg
jne
loope
push
ret
test
cmp
push
sub
xchg
lea
sub
xchg
adc
fistps
jnp
mov
adc
lods
adc
test
lret
xchg
mov
aad
enter
adc
cwtl
xchg
jecxz
mov
les
notl
enter
jns
pop
mov
add
in
mov
jnp
adc
pop
sub
stos
stc
fdivrl
sarl
xchg
call
xor
xchg
mov
push
lock
jno
pop
push
pop
test
stos
das
mov
mov
filds
inc
xor
data16
insb
test
sub
pop
int3
pushf
aas
in
out
int3
stc
mov
sbb
push
xor
shll
in
cmc
iret
fs
adc
sti
adc
fldenv
or
shll
adc
sbb
insl
xor
mov
test
mov
add
mov
cmp
jae
pusha
sbb
jp
adc
mov
insb
int
fwait
rorl
movsb
loopne
xchg
inc
ss
aam
std
fistpl
inc
pop
push
add
outsl
cld
cmc
stos
mov
mov
dec
incl
cmp
add
xchg
mov
inc
or
sbb
xchg
lss
mov
dec
arpl
cs
scas
xor
xchg
cld
adcl
or
in
ss
sbb
cmp
xor
rolb
mov
int3
aaa
popf
adc
into
popf
xorb
es
and
xor
sbb
mov
gs
xchg
xor
shll
test
dec
pop
jle
roll
test
movsl
dec
xor
je
rcrb
insl
loope
cs
inc
adc
pop
aam
ds
pop
or
push
idivl
sbb
add
adc
push
cli
pop
dec
les
lea
add
inc
out
test
dec
cs
push
add
jl
mov
jnp
dec
mov
pushf
sbb
fs
mov
sbb
jnp
inc
cmp
mov
sbb
lret
cmc
jae
adcl
push
test
mov
adc
cmp
inc
iret
cmp
xor
add
push
xor
and
int
faddl
aas
adc
test
ljmp
add
hlt
dec
push
roll
decl
jne
ret
bound
push
jae
je
ds
cmpb
inc
jp
pusha
adc
test
dec
jmp
adc
loope
lds
clc
shlb
add
pop
ret
push
dec
cmp
or
lahf
sub
stc
mov
addr16
jnp
cwtl
add
add
inc
and
cmpl
xchg
adcl
mov
je
or
xchg
int
pop
scas
sbb
ds
shll
enter
or
inc
pusha
xorl
or
std
nop
inc
les
mov
call
fmul
dec
cmp
inc
adcb
dec
and
jge
or
or
ds
jle
popa
jno
add
std
cltd
or
mov
aaa
lds
movd
jp
sub
dec
mov
mov
mov
pop
jecxz
push
sbb
or
lahf
fwait
push
cmp
xchg
dec
jae
mov
cltd
dec
outsb
push
icebp
pop
cmp
movsb
sub
dec
jg
jg
out
add
add
int3
loop
add
addr16
sbb
loopne
inc
mov
faddp
xor
in
cmpsl
adc
nop
inc
daa
sub
jecxz
mov
add
icebp
cli
mov
call
inc
jbe
sbb
push
gs
push
pop
or
jmp
add
or
jne
push
mov
adc
adc
loope
pop
adc
addr16
pop
scas
jg
adc
jp
roll
stos
pop
cli
mov
in
in
jecxz
roll
repz
lcall
js
or
sbb
add
sub
les
cs
mov
xor
mov
mov
inc
lcall
addr16
add
iret
lcall
push
imul
mov
arpl
mov
xchg
rolb
inc
jmp
jmp
push
add
std
mov
xor
sbb
aad
sbb
aaa
shlb
dec
repz
loopne
fldt
and
mov
and
imul
rclb
inc
sbb
aas
scas
adc
push
fdivp
es
in
movsb
jns
xor
jle
cmp
push
addl
mov
pop
push
in
lock
leave
push
adc
cwtl
and
mov
cmp
xor
aaa
jae
lods
push
push
cmp
sub
std
add
mov
jle
mov
test
cmp
sub
and
mov
test
jl
cmp
aad
mov
ja
jbe
das
cmp
inc
mov
sub
pop
cwtl
test
outsb
mov
cmp
cld
insl
cld
stos
sub
and
js
jg
adc
xchg
fmulp
inc
and
inc
dec
daa
mov
xchg
or
pop
xchg
adc
jbe
adc
mov
or
pop
repnz
enter
adc
adcb
adc
mov
in
mov
int3
jns
and
fcoml
xor
add
mov
movsl
pushl
pop
add
push
repz
leave
sbb
js
xchg
and
dec
jae
add
sub
imul
cs
push
sbbb
add
dec
mov
inc
mov
jns
inc
mov
pop
pop
insl
lret
pop
or
pop
dec
sub
lds
test
enter
sbb
imul
jg
xor
lods
je
mov
out
repnz
in
push
cmp
jnp
jl
aad
mov
inc
fnstsw
mov
movb
cmp
jne
dec
insb
fdivrs
inc
cmp
jnp
insl
lock
jecxz
sbb
mov
push
fldl
in
rclb
fistl
das
xchg
sub
pop
mov
push
inc
sti
mov
ja
sbb
add
cmp
and
push
sbb
enter
and
mov
push
ret
in
xor
fwait
notl
push
sub
mov
int3
addr16
dec
jns
incl
xchg
pop
cmpsl
jmp
nop
int
repz
stos
sbb
int3
jo
jp
imul
mov
pop
mov
mov
mov
xchg
test
inc
push
xchg
pop
outsl
and
sub
lret
adc
or
cwtl
ret
xchg
cmpsl
mov
adc
imul
icebp
push
test
sbb
fiadds
pop
cltd
roll
fs
cld
jmp
mov
push
lea
insl
mov
sub
xlat
aas
ret
xchg
fists
dec
jne
jge
in
movsb
hlt
mov
nop
aam
lds
leave
pop
pop
ds
ss
lods
mov
add
or
int3
lcall
mul
ja
inc
xor
push
push
mov
push
dec
mov
mov
jbe
sub
sub
inc
cli
or
sbb
jle
xor
fisubl
and
hlt
adc
mov
dec
xchg
ret
mov
xlat
jge
in
mov
movsl
sbb
xor
dec
repnz
sti
outsl
outsb
and
and
or
ds
incb
enter
sub
lcall
pusha
imul
in
adc
mov
repnz
dec
jae
or
xchg
stc
or
lahf
lret
shlb
aad
adc
jl
movsb
add
cmp
call
xchg
mov
lahf
mov
xchg
jb
ja
insl
jge
cmp
mov
mov
push
sub
jecxz
dec
lahf
cmp
or
rcl
xchg
xor
filds
sarb
aas
je
mov
test
adc
xchg
add
lods
mov
jns
push
inc
add
jnp
dec
fadds
ret
call
and
mov
in
xor
or
jl
push
mov
pushf
insb
fs
cli
jb
mov
mov
aam
mov
mov
dec
std
jle
mov
movsl
lea
jno
mov
sahf
adc
mov
or
push
cmp
fcmovb
and
adc
mov
xor
les
out
dec
ss
sub
add
sub
fwait
push
lods
or
lcall
addr16
int
je
xor
clc
dec
int3
out
fisttpl
jecxz
inc
bnd
push
pop
fisubrs
insb
pop
lock
fidivrl
pop
leave
jmp
clc
test
mov
or
orb
or
pop
push
mov
cmp
mov
pop
bound
mov
push
loope
jle
jmp
mov
sti
inc
push
jg
jnp
in
daa
jl
add
loop
stc
jns
sbb
mov
pusha
adc
and
adc
addr16
iret
lds
iret
testb
inc
shlb
adc
push
mov
adc
lcall
add
xor
scas
sbb
cs
adc
push
arpl
mov
aas
mov
mov
lods
push
xchg
mov
pop
js
push
jmp
js
and
popf
out
inc
bound
aas
mov
jle
cmp
jl
xor
mov
icebp
ds
jecxz
dec
hlt
test
flds
pop
aaa
loop
movsb
cli
cmp
out
jne
test
sahf
push
andl
push
dec
hlt
loope
xchg
sbb
imul
rolb
shl
xlat
xchg
xor
sub
pop
outsl
mov
lock
and
movsb
rol
pop
nop
stos
pop
or
xchg
mov
and
adc
loopne
mov
sbbl
ljmp
and
lods
cs
dec
ja
cmp
repz
cmpsb
imul
lods
sahf
stos
bound
lds
repnz
and
cmp
inc
xchg
in
aad
daa
pushf
jne
std
push
and
add
scas
scas
xorb
insb
ja
fsubrs
mov
andb
aam
or
xchg
xchg
outsl
adcl
out
arpl
cmp
adc
inc
cli
pop
push
loopne
pop
cmp
int
mov
xor
or
pushf
shrl
dec
out
inc
or
adc
sbb
sahf
add
and
dec
in
scas
data16
test
ret
jne
inc
dec
js
ds
sti
scas
in
and
push
mov
aam
bound
aam
mov
or
std
repnz
xchg
out
jmp
xchg
or
test
sub
inc
loope
int
ja
call
imul
mov
popf
pcmpeqb
dec
iret
jge
cmp
sbb
sbb
xchg
and
les
mov
adc
clc
mov
aad
outsb
dec
shll
fsubrs
lcall
add
pop
movsl
loope
clc
cmpsb
add
or
pop
mov
imul
dec
repz
roll
mov
xor
call
lret
push
sub
jbe
loope
stos
pop
mov
mov
dec
js
dec
xlat
aaa
loopne
divl
imul
mov
mov
mov
mull
cmp
movsl
out
popa
cmpsb
movsb
mov
lret
arpl
ds
dec
mov
repnz
insb
mov
push
fsubl
cltd
push
movb
mov
pop
pop
mov
xor
jbe
loope
xchg
incl
pushf
mov
je
xor
pop
sub
cmpsb
fldenv
xchg
adc
cmp
dec
push
rcr
cltd
mov
xchg
lcall
and
aam
cmp
pmaxub
dec
repz
adc
jns
jb
mov
inc
jae
adc
jp
and
ret
dec
jle
aas
fildl
scas
mov
add
in
daa
rclb
insb
adc
dec
xchg
arpl
out
cmp
lds
das
lcall
jno
adc
mov
xchg
mov
imul
add
sub
loop
sbb
in
add
push
insb
pop
adc
or
stos
jg
dec
data16
sub
fwait
xor
lods
stos
mov
dec
push
inc
xor
inc
leave
dec
cmp
sbb
roll
loopne
jge
hlt
mov
mov
sbb
sbb
fs
pop
pop
or
and
fwait
dec
das
fs
jle
add
mov
xlat
xchg
sub
in
mov
sub
jmp
sbb
cmp
lock
sahf
pop
cmp
lds
movsb
cmc
aam
mov
ficoms
pop
iret
aaa
xchg
fmuls
inc
ficomps
lahf
ret
stos
fcompl
mov
idivl
adc
sbb
pop
jb,pn
sbb
cwtl
fisttpl
mov
inc
jbe
stos
icebp
loop
jbe
mov
addr16
mov
lea
incl
add
orb
fcompl
push
jmp
cmpsb
imul
xchg
mov
push
push
push
adc
popf
inc
pushf
mov
pop
pop
inc
pop
push
loop
pop
mov
ljmp
hlt
cmpsl
dec
mov
mov
sarl
mov
jecxz
dec
arpl
mov
adc
es
push
mov
push
nop
imul
sbb
mov
into
mov
xor
fstpt
xchg
fwait
jl
test
adc
cld
pop
sbb
mov
add
enter
push
xchg
or
and
mov
cmp
lea
pop
bound
call
sub
ret
jbe
xor
jne
dec
xor
pop
pushf
repz
std
pop
push
mov
mov
lret
ds
pop
pop
test
xchg
dec
xchg
std
jbe
mov
jmp
sbb
lea
xchg
xor
rcll
xor
fs
cmp
jno
jge
or
jp
adc
into
push
pop
mov
dec
inc
insb
add
aad
shrb
or
and
xorl
sbb
insl
rcll
mov
fs
jle
inc
push
pop
mov
push
dec
aaa
push
push
inc
inc
mov
loop
rcrb
jns
pop
push
xor
or
jl
imul
xchg
jmpw
jl
jmp
ficoms
or
dec
jp
sbb
pop
notb
lret
sbb
mov
pop
mov
and
jo
icebp
scas
fucomip
adcl
sti
in
inc
gs
fiadds
fdivl
cmc
xchg
lods
lods
sbb
out
and
cld
push
xchg
push
push
fwait
repz
shl
repnz
xchg
jnp
lret
icebp
arpl
mov
cmp
mov
pop
roll
jl
xchg
jle
std
mov
aam
stos
push
js
addr16
stc
pop
aam
pop
subb
mov
into
pusha
jb
popf
loop
sarl
cli
adc
out
addb
push
and
je
or
pushf
xor
iret
repnz
dec
lods
xor
push
pop
popf
sbb
cmp
sahf
aad
and
cmp
sub
jbe
adc
mov
loop
inc
or
xchg
dec
jp
xchg
mov
push
dec
jo
xor
fucomip
push
or
rcll
rcl
call
sub
out
or
in
xchg
mov
outsb
xchg
sub
rol
and
out
in
xlat
sbb
adc
cmc
cmp
dec
aad
mov
aad
popa
dec
pop
lods
loope
jb
add
add
ljmp
mov
notb
andb
fs
inc
fs
mov
fcmovbe
shlb
pusha
push
add
sahf
cmpsb
popf
mov
out
add
inc
call
xchg
scas
cmpl
jmp
xchg
das
dec
bound
sub
pop
and
sub
xor
and
mov
hlt
cs
pop
xor
cmp
fildl
xchg
call
jmp
adc
arpl
sub
std
or
pop
pop
ret
aaa
repnz
rolb
push
lahf
ss
out
imul
sub
mov
flds
adc
dec
xchg
adc
fs
mov
cltd
or
out
dec
call
rcl
test
cli
movsb
cmpsl
out
sahf
mov
push
loope
shrw
test
cwtl
addr16
testb
sub
xchg
mov
jnp
stos
dec
imul
inc
testb
fistpll
xchg
nop
in
or
xor
jg
bound
aam
mov
sub
mov
iret
daa
iret
sub
ds
clc
test
insl
sub
lods
lret
testb
in
jle
les
in
sub
cwtl
pusha
shll
icebp
pushf
pop
adc
jg
sub
fcmovbe
sub
cmp
pop
mov
pop
out
cmp
inc
arpl
cmp
out
mov
stos
cmp
jno
mov
imul
mov
stos
das
adc
sub
idivb
add
mov
jno
aam
push
jb
aas
loopne
sub
idiv
ss
jmp
pop
popf
add
jne
push
into
lods
fmulp
inc
testb
nop
loopne
fwait
sub
add
cwtl
inc
add
dec
outsl
repz
je
adc
es
hlt
shll
bound
xor
sub
dec
inc
int
repnz
mov
cmp
cmpsb
test
stos
jno
pop
movb
fcoml
shl
daa
inc
push
xor
sbb
ret
xor
cmpl
andb
or
jo
mov
cwtl
scas
mov
pushf
pop
pop
add
cmpl
iret
fs
xchg
push
and
dec
out
jae
movsl
loope
xchg
lods
dec
inc
xor
int3
enter
in
push
aas
xchg
pushf
lahf
xor
pop
aad
cltd
insl
movsb
add
mov
push
rorl
mov
jns
cmp
adcl
add
les
ljmp
pop
fwait
sub
mov
sbb
jae
iret
jmp
fidivrs
cmpsb
in
shlb
mov
je
mov
addr16
aas
jl
insl
xchg
xchg
jns
cwtl
cmc
addr16
sbb
sbb
push
adc
aam
outsl
dec
push
cli
mov
jecxz
test
mov
sub
lods
jmp
fucomp
aas
arpl
pop
adc
call
movsb
into
es
push
adc
ret
xor
or
pop
aaa
sub
loopne
stos
xchg
pushf
cmp
and
xchg
je
js
jge
or
adc
mov
cmp
insb
cld
dec
fwait
mov
push
mov
insl
rcrb
enter
cli
mov
pop
ss
das
mov
lcall
and
and
roll
inc
push
pop
in
or
scas
imul
dec
xchg
dec
xchg
jmp
mov
push
mov
dec
addl
jp
push
aad
cmp
int
popf
scas
push
adc
sbb
clc
push
orl
test
lods
andl
xchg
mov
or
movsl
scas
and
sub
sbb
mov
lret
add
adc
testb
jbe
popf
imul
test
stos
dec
cli
test
dec
loope
icebp
fistpll
ret
mov
dec
xchg
ja
aam
xor
mov
out
jbe
and
mov
aam
jne
leave
inc
subb
pop
push
shrl
adc
sarb
sub
push
sub
dec
imul
lea
shl
push
cmp
scas
ja
mov
sbb
dec
cmp
imul
cli
mov
jl
mov
pop
mov
mov
jecxz
cli
xchg
mov
xor
and
mov
xchg
data16
mov
imul
sarb
insb
xor
sbb
xor
cld
xchg
xor
dec
adc
mov
int
icebp
ret
pushf
xchg
outsl
out
out
mov
lods
xchg
sbb
aam
fsubrs
ljmp
ficoml
cmpsb
adc
dec
mov
jecxz
das
sub
and
mov
rcrb
scas
rcl
push
pop
xchg
out
push
ss
xor
push
push
push
jns
sub
inc
push
enter
sub
add
outsb
insl
push
in
adc
mov
daa
mov
pop
rorl
iret
push
mov
repz
push
cltd
or
cmp
inc
xchg
popf
jecxz
dec
jns
rcr
fwait
ret
jbe
outsb
or
mov
gs
mov
ficoml
or
stos
imul
sub
push
mov
jnp
ja
in
imul
aaa
jmp
jb
int
ds
jge
and
mov
dec
in
mov
cmpsl
pushf
fisubs
inc
xor
push
out
test
push
scas
mov
enter
lods
shrb
mov
mov
jecxz
cltd
hlt
stc
mov
dec
rcrb
xchg
mov
pop
scas
adc
out
mov
or
ds
fxch
out
jae
push
mov
push
pop
add
out
jle
jno
andb
mov
xor
pop
repz
scas
jbe
loope
xchg
out
and
mov
repnz
and
and
sub
dec
ds
fsubs
jbe
add
mov
test
mov
jae
and
mov
dec
dec
movl
add
js
aas
popf
out
insb
clc
repz
repnz
xor
dec
out
and
adc
ss
mov
pop
mov
mov
fimuls
inc
xchg
jbe
and
and
cwtl
mov
lret
mov
out
mov
xchg
sahf
mov
fdivrs
adc
dec
ret
sbb
or
scas
add
out
push
rolb
jb
in
push
add
inc
fldenv
ss
mov
push
loop
jno
cwtl
pop
push
in
rcrl
shll
jbe
lret
add
aaa
cmp
mov
push
pop
push
ljmp
jns
cmp
add
and
jle
in
xchg
faddl
add
aad
testl
stos
fiaddl
aam
popf
lea
lods
orb
jo
call
aad
pop
push
adc
sete
into
push
push
aas
xchg
or
push
rcr
iret
ret
xchg
jg
lcall
ficomps
adc
int
mov
lea
cmp
jp
pop
dec
pmaxsw
mov
lock
aas
cmp
xchg
sarl
pop
fdivrl
push
fbstp
or
into
shrl
cmc
inc
add
push
xchg
es
mov
push
cwtl
addr16
ds
int3
cmp
xchg
loopne
inc
mov
cmpsb
pop
push
push
jle
out
loop
and
cld
or
in
dec
fs
jle
jb
das
pop
xchg
pusha
mov
push
stos
js
int3
and
pop
js
loopne
mov
adc
jno
scas
adcb
cmp
fnsave
mov
xchg
and
pop
mov
inc
pop
pop
push
movl
mov
js
push
xor
jbe
mov
jmp
dec
inc
mov
mov
and
stos
or
sbb
cmpsb
test
inc
aam
addr16
dec
jae
pop
imulb
out
push
xor
xchg
aas
daa
bound
push
cmpsl
xor
jecxz
in
jae
lds
mov
in
push
jnp
fwait
xchg
mov
out
mov
ret
adc
mov
add
dec
in
jg
stos
leave
add
xchg
and
jno
jno
jns
mov
jecxz
cltd
mov
fmul
rol
adc
cli
imul
ds
repnz
jo
adc
addr16
lret
mov
loope
pop
jle
sub
push
mov
push
jle
in
arpl
sub
outsl
cmp
sub
xor
shrl
jp
push
pop
scas
mov
cmp
into
dec
mov
enter
in
xchg
mov
and
out
push
outsl
xlat
movsb
cmc
das
je
jle
pop
gs
push
mov
inc
js
sub
or
add
ss
fisubs
test
rolb
sbb
mov
ss
and
jne
push
and
daa
arpl
sbb
xchg
add
outsb
imul
pop
rorb
adc
lcall
sbb
inc
push
xor
add
add
dec
mov
push
xor
inc
xchg
sbb
and
rol
ficoms
int3
xchg
xor
jns
or
mov
int3
movsl
xor
mov
fldl2e
xor
sbb
ja
jo
fidivrs
addr16
sbb
and
ss
adc
cmp
jnp,pn
push
ret
mov
fsubrl
cmp
shrb
mov
insl
pop
xchg
addl
dec
xchg
jl
mov
xor
rclb
mov
cmpsb
add
dec
push
cld
xchg
hlt
xor
sbb
leave
subl
jp
movsl
and
xorb
ret
jge
and
jno
push
cmc
mov
xchg
daa
in
adc
cmpb
xchg
push
ss
add
stos
mov
xchg
mov
mov
jle
flds
inc
test
sbb
rorb
pop
loopne
xchg
or
cmp
pop
fldt
adc
scas
in
dec
andb
or
pop
in
mov
sbb
outsl
sbb
push
push
shl
or
minps
inc
pop
and
jmp
in
mov
jl
mov
das
insb
loop
mov
dec
push
rcll
test
rolb
jno
js
icebp
out
xchg
sub
popa
jp
int3
pop
stos
sub
push
loope
aam
cmc
xchg
or
nop
popf
fcmovb
cld
push
inc
push
call
or
stos
push
jae
cmp
xchg
repz
jg
ret
push
ret
insl
dec
xorl
push
mov
je
enter
push
and
jbe
push
insb
adc
clc
xor
add
cmp
int
mov
and
ret
ficoml
ja
iret
aas
mov
add
daa
xchg
shll
pop
iret
jl
and
cmpsb
lods
mov
and
push
dec
outsb
push
shlb
adc
movsl
push
test
ret
sti
inc
lret
cmpb
rolb
mov
bnd
inc
cmp
sbb
lods
jb
push
pop
ficoml
std
lock
int
icebp
ljmp
mov
iret
mov
jne
bound
xlat
dec
push
cmp
jp
xor
pushf
inc
xorl
jle
push
les
es
loope
gs
sbb
loope
push
sbb
pop
pusha
or
inc
js
push
popa
sti
sub
and
xor
jp
mov
fnstsw
filds
xchg
add
push
add
adc
dec
icebp
ljmp
cld
push
test
and
or
lret
es
sub
xchg
call
sub
push
mov
dec
adc
loop
js
adc
cmc
aad
sub
xchg
sti
adc
out
pop
lods
cmovne
popa
push
cmpsl
dec
xchg
mov
xchg
outsb
es
clc
cmp
jne
adc
mov
jp
push
sbbl
dec
adcb
fbld
pop
cmp
lcall
pop
pusha
shrb
stc
xchg
inc
dec
shll
add
jg
mull
iret
shll
or
xchg
call
cmp
sti
adc
pop
push
xor
stc
and
cmp
outsl
and
in
outsb
and
mov
imul
dec
outsl
sbb
mov
int
fwait
push
out
bound
sub
lds
inc
sbb
ss
sbb
test
in
ja
mul
das
jns
scas
push
mov
jae
dec
add
jle
fsub
mov
mov
mov
mov
imul
dec
xchg
aam
add
rolb
and
or
mov
lret
inc
movsl
adc
loop
scas
jo
push
push
js
test
stos
push
dec
fildl
movsl
les
mov
dec
lods
ds
sbb
mov
mov
dec
mov
ficomps
in
test
daa
mov
push
mov
push
mov
mov
inc
jg
xchg
sahf
jo
inc
into
mov
ret
mov
cmp
inc
jns
inc
fistps
shll
add
fbld
mov
pop
lds
je
xchg
mov
stos
push
mov
std
mov
pop
push
nop
add
push
lahf
lea
jmp
aas
loop
mov
pop
fidivrl
dec
dec
loop
fsub
lods
jnp
inc
xor
js
in
aad
imul
pop
int
jecxz,pn
mov
or
cmpl
xchg
arpl
fildll
movsb
pop
loopne
pop
pop
int3
mov
xor
cld
sub
sbb
cmp
xchg
xchg
dec
mov
pop
inc
adc
rcrl
ror
arpl
mov
mov
jle
insb
sbb
imul
cltd
fisubl
je
addr16
popf
orl
out
pop
dec
data16
sbb
inc
je
push
jmp
mov
sarb
adc
in
inc
cwtl
sbb
jp
sbb
lds
add
stc
scas
sti
and
imul
cs
jmp
pop
inc
fsts
inc
js
cld
or
stc
pop
add
push
clc
insl
sbb
and
mov
iret
cmc
mov
lahf
push
sahf
dec
mov
iret
cmpsb
and
flds
fistpl
jp
and
mov
push
dec
nop
sbb
hlt
stos
mov
imul
inc
test
adc
sub
mov
cs
ja
and
mov
xchg
mov
lds
and
loopew
sbb
jne
xchg
nop
inc
push
imulb
pop
das
lret
and
dec
les
or
lahf
pop
inc
cmpb
jo
sahf
xchg
std
inc
or
mov
popf
push
testl
mov
push
mov
jg
fdiv
sbb
popf
es
add
sbb
imull
mov
pushf
cmpl
push
repz
lock
sar
push
dec
inc
iret
pop
dec
pop
mov
mov
inc
fiaddl
cli
xor
mov
stos
jbe
ja
test
lcall
outsb
into
mov
add
in
out
or
push
cld
xchg
sub
sarl
jbe
inc
jg
sbb
addb
lret
jecxz
shll
or
ret
pop
adc
pop
lcall
adc
dec
push
cltd
iret
lods
test
mov
aaa
dec
and
add
jge
scas
data16
das
cmpsl
or
mov
sbb
dec
xor
cmp
roll
clc
add
xor
mov
jmp
push
repz
dec
aam
int3
testb
jns
pop
shl
movsb
push
aas
inc
mov
rolb
cmp
mov
mov
jle
loop
lcall
lods
cltd
cmp
aam
imul
jns
xor
mov
repnz
dec
cmpsb
jne
or
das
sub
fldl2t
lcall
outsb
lods
loop
ret
jnp
fldcw
test
scas
xor
pop
inc
or
es
jl
cs
in
movsl
bound
nop
fwait
insb
das
add
jl
sbb
fdivrs
push
mov
sbb
jae
popf
scas
test
fdivr
adc
xchg
lods
mov
push
in
add
pop
mov
rorb
cs
adc
das
xor
pop
testl
or
jmp
mov
sub
movsb
or
add
dec
aad
test
std
jnp
xlat
mov
pop
sbb
daa
add
push
cmp
dec
out
lock
and
je
push
mov
aam
dec
xlat
dec
std
lds
popf
jg
mov
pop
dec
ljmp
pushf
ss
inc
jecxz
mov
sbb
ss
mov
roll
fisttpll
js
outsl
adc
int3
testl
pop
negl
inc
or
xchg
into
sbb
ja
cmpl
and
sub
ja
imul
bound
jnp
lea
fcomi
mov
test
inc
scas
jne
sbb
sbb
es
mov
inc
in
pop
cmpsl
inc
xchg
dec
insb
imul
inc
iret
test
fwait
inc
push
jae
in
in
lea
sbb
movsl
xchg
sbb
std
and
orb
jl
rolb
sbb
cld
sbb
stos
sahf
repz
scas
decl
outsl
mov
clc
out
inc
jp
filds
xchg
cmp
in
ret
jb
js
inc
insb
mov
and
fstpl
fmull
stos
mov
aad
arpl
out
dec
pop
xor
and
fmuls
xchg
jb
xor
je
stos
cwtl
xor
xor
jae
mov
and
gs
push
sub
stos
mov
jecxz
pop
inc
inc
mov
adc
mov
or
lcall
out
mov
arpl
dec
je
insl
mov
add
add
shlb
pop
mov
fidivs
xchg
pop
pop
push
inc
or
dec
dec
sub
push
mov
inc
out
addl
push
mov
dec
das
push
or
fistps
xor
outsb
jb
fisubrl
and
shll
andps
push
lcall
add
or
jmp
pop
fcoms
inc
xor
js
pusha
inc
rcrb
outsb
jmp
dec
pusha
dec
shll
mov
shrl
imul
or
std
inc
stc
int
jmp
mov
inc
leave
rclb
stos
pop
scas
sub
xor
lret
in
jge
fisubrs
mov
lods
fisubs
xchg
or
call
cmp
pop
or
insb
inc
jnp
cmp
mov
dec
inc
ret
rcr
into
outsl
and
xor
aaa
aam
jecxz
cmp
mov
pop
jbe
repnz
sub
mov
rorb
lahf
insb
divl
and
pop
inc
lret
out
adc
pop
scas
in
add
outsb
mov
test
push
cmp
idivb
gs
out
test
push
das
mov
inc
push
adc
cmp
dec
sub
push
sbb
pop
mov
ss
push
mov
es
lock
clc
aad
inc
mov
int3
cmp
adc
ret
jno,pt
aaa
or
hlt
xchg
jnp
inc
jae
data16
mov
inc
add
jns
xchg
jp
jmp
lds
dec
mov
bound
dec
sub
adc
aad
inc
cmp
lods
fistpll
out
ljmp
push
or
loope
fadd
out
jbe
imul
negl
fimuls
repnz
addr16
pop
push
cmp
jnp
inc
jge,pn
movsl
mov
or
int
in
rolb
lds
inc
sub
int
rcrl
push
cmp
ret
popf
mov
and
mov
repz
inc
sbb
rol
pop
push
cld
mov
pop
fsubrl
xchg
out
xchg
hlt
pop
push
cmc
add
bound
scas
dec
jecxz
sub
out
add
lcall
out
into
jmp
push
push
shlb
jl
jmp
add
imul
lret
xchg
fcoml
inc
scas
jp
mov
dec
rcrl
sub
xchg
clc
daa
mov
insb
inc
and
push
jmp
aad
fstpl
cli
test
jl
je
mov
push
mov
bound
inc
std
xor
xchg
mov
cmp
push
jb
test
idiv
sbb
scas
push
dec
adc
test
shr
xchg
push
jle
test
ljmp
out
test
test
jbe
loop
ja
je
push
adc
div
dec
ljmp
sbb
lahf
fs
jle
pop
dec
mov
dec
inc
or
loope
fwait
push
ss
dec
or
push
add
jle
and
cmp
iret
pop
cmp
sub
and
lret
cmp
jns
inc
enter
push
imul
mov
data16
insl
add
fbstp
fbstp
clc
cli
arpl
adc
xor
mov
add
dec
xor
xor
sbb
and
test
repz
mov
aam
movsl
nop
mov
aad
leave
mov
jle
jmp
mov
test
loope
push
mov
lock
in
cmp
push
imul
and
or
jmp
sbb
adc
sti
popa
cmp
movl
dec
jle
jg
mov
cmpsb
out
xor
bound
jl
mov
mov
mov
out
or
jl
lods
push
pop
test
jmp
call
and
movsl
cmp
lock
scas
imul
push
das
xchg
xor
sahf
adc
mov
mov
dec
dec
cmpsl
cwtl
and
in
lds
in
das
sahf
or
je
jmp
sbb
or
xor
mov
jmp
jl
xor
fwait
push
jmp
or
or
jnp
mov
mov
or
dec
xchg
es
push
test
adc
lds
lret
adc
in
addb
sub
push
jbe
xchg
xchg
int
jae
stos
test
stos
adc
nop
out
test
add
jne
cmp
je
fwait
jnp
push
icebp
les
stos
pusha
lock
incl
lret
in
in
adc
sub
mov
cmpsl
scas
jne
cmp
push
sub
rcrb
pop
push
push
sbb
cmp
dec
and
sub
pop
sbb
or
inc
fidivrl
and
mov
arpl
cmp
push
into
stos
mov
xorl
push
shll
push
mov
jmp
mov
sbb
dec
pop
mov
and
mov
inc
subl
mov
test
test
xchg
or
cmc
mov
in
mov
xchg
jp
jnp
or
int
add
and
and
sub
sbb
sub
testb
pop
push
stc
dec
ficoml
ret
outsb
repnz
xor
std
or
mov
push
jno
dec
inc
int
aad
mov
dec
and
imulb
and
into
bound
bound
lods
aaa
mov
out
or
divl
insb
mov
imulb
scas
je
pop
xchg
aas
call
mov
cmp
call
icebp
cmc
sub
push
inc
js
xchg
sub
movsb
subb
adc
sub
sti
push
cltd
arpl
movsb
popa
test
in
and
adc
cmp
out
xor
addr16
push
notl
inc
sahf
cld
mov
add
jns
mov
or
dec
xlat
rclb
ffree
popf
sub
fcompl
push
les
adc
into
into
push
stc
ret
jl
and
cmp
popa
and
cmpsl
inc
push
paddusw
push
fldl
inc
cmp
pop
or
test
mov
xorb
lock
fmull
dec
xor
jae
cmp
mov
imul
and
sbb
sub
xor
jb
dec
mov
inc
js
cmpsl
mov
adc
push
int
jae
test
dec
je
adc
jl
xchg
sub
jecxz
add
in
outsl
into
and
dec
and
lds
cmp
adc
sub
mov
cs
fisubrl
outsb
add
iret
fdivrl
pop
flds
jb
push
nop
xor
dec
roll
or
and
sbb
divl
inc
add
sti
fs
or
clc
cli
dec
and
cmp
icebp
cmp
popa
jmp
bound
aaa
cli
lds
lcall
ds
loopne
mov
or
shll
inc
adc
xchg
in
outsb
movsl
bound
ja
rcl
pop
imul
xlat
adc
cli
push
sbb
loopne
pop
xchg
mov
and
enter
jmp
fsubrl
arpl
call
sbb
cmc
in
outsb
jge
mov
out
and
mov
sbb
xchg
xchg
mov
daa
in
dec
mov
xor
outsl
out
test
mov
sbb
movsl
clc
xor
pop
push
cltd
and
loop
popa
xor
mov
incl
or
icebp
aaa
cmp
rcll
xor
inc
stos
sbb
sbb
dec
imul
fisubl
repz
movsl
imul
or
out
mov
test
mov
mov
sub
subl
in
cmp
stos
sub
rcl
mov
push
movsl
mov
sahf
leave
dec
les
cmpsb
dec
pop
rcl
push
sub
lods
xchg
adc
push
call
mov
add
push
outsl
cltd
test
add
loop
lds
adc
daa
mov
enter
and
jnp
xchg
test
gs
and
dec
std
inc
and
ss
aas
incb
push
xor
push
xor
test
dec
mov
out
or
xlat
jle
pop
jmp
jae
fwait
jle
aam
stos
push
xor
add
push
or
shlb
es
push
pop
sub
pop
arpl
or
xchg
inc
pop
mov
push
push
mov
and
sbb
mov
cwtl
pop
je
add
push
or
repnz
push
mov
sub
mov
scas
add
insl
lods
mov
negb
decb
rorl
xor
sbb
xchg
repnz
push
jge
sbb
aad
jecxz
sahf
sbb
iret
ja
pop
mov
daa
mov
fwait
mov
loopne
mov
aad
pop
and
mov
or
sub
adc
sbb
lock
inc
test
stos
insb
pop
sbb
xchg
sub
xchg
push
jae
push
hlt
push
mov
imul
orb
incl
xchg
mov
lea
xor
pop
and
in
mov
fistpl
insb
scas
inc
pusha
in
dec
jp
sbb
lock
mov
mov
sbb
push
repz
mov
add
sbb
test
adc
mov
adcl
jge
jecxz
cwtl
xchg
xchg
hlt
test
sbb
mov
add
pusha
pop
inc
and
imul
sbb
insl
dec
cli
push
jo
pop
sbb
xchg
in
or
jne
xor
lahf
or
add
cmp
lea
pop
lcall
shlb
scas
xchg
dec
mov
test
ret
sbb
rclb
dec
sti
xchg
cmp
xor
mov
lahf
fisubrl
mov
sbb
or
jecxz
int
mov
and
xchg
pushf
mov
into
js
pop
repnz
scas
shlb
js
mov
push
rol
arpl
fnsetpm(287
mov
imull
adc
lcall
decb
adcb
loopne
cmpsb
scas
or
jecxz
scas
push
out
mov
imul
xchg
mov
daa
cwtl
cmpsl
mov
scas
ds
xor
xchg
jmp
xchg
push
adc
std
push
jl
rcr
fnstenv
lcall
iret
xor
dec
xchg
xchg
test
popf
adc
cmp
pushf
cmc
xor
add
sub
mov
out
mov
fistl
push
ffreep
cmp
outsb
fcmovu
sbb
and
pop
mov
xchg
lock
int
mov
int3
inc
jno
test
out
push
je
cld
int
icebp
push
data16
sub
std
mov
jecxz
xrelease
pop
mov
xchg
xchg
aas
fisttps
add
jmp
lret
cltd
mov
ret
dec
jo
lahf
sbb
loope
sbb
data16
pop
pop
movsb
pop
cli
add
pop
sarb
fdivs
fcomps
cmp
xchg
popf
add
lds
cld
stos
in
cmp
push
mov
mov
cmpsb
inc
repnz
mov
xor
arpl
loop
sbb
sub
cmpsl
repnz
pop
out
adc
sbb
dec
add
repnz
mov
into
leave
sbb
pop
mov
inc
fdivrs
test
lods
inc
cmp
xor
in
jecxz
roll
add
push
cmp
sarl
fwait
les
lret
lea
gs
xor
inc
fsubrs
adc
out
pop
daa
out
sarb
pop
fstpt
pop
pop
popa
mov
addl
sbb
add
jns
sbb
or
push
fmull
test
fmuls
adc
jmp
xor
cs
inc
loopne
sub
or
pop
cwtl
call
mov
loopne
push
dec
adc
stos
enter
dec
loopne
stc
sbb
inc
cmpsl
mov
mov
cmp
pop
add
jae
loopne
daa
ja
mov
xchg
ljmp
mov
in
std
lret
inc
mov
push
ljmp
sub
addb
scas
jmp
inc
lea
setle
out
xchg
sbb
sub
push
inc
arpl
inc
test
insb
xchg
mov
in
jne
les
out
in
aas
dec
cmp
pusha
adc
outsl
dec
mov
int3
cmp
insl
jnp
popf
aaa
lods
leave
and
shrb
ret
sarl
cli
pop
adcb
int3
ja
outsl
pop
int3
add
sub
xor
mov
movsb
imul
cmp
popa
mov
push
push
cltd
pop
mov
jns
cmc
dec
mov
ljmp
movsb
lcall
mov
add
lret
xlat
cmp
add
fcomps
pop
call
sbbb
fcom
lods
adc
xor
and
add
cli
mov
sub
shll
sar
mov
sub
shlb
aaa
imul
jg
inc
rorb
nop
mov
inc
dec
sbb
and
or
test
and
pop
mov
loope
hlt
cmp
mov
ss
lret
adc
mulb
arpl
xchg
or
jmp
inc
mov
cmp
fnsave
aam
sti
add
xchg
cmpsb
loope
sbb
sub
push
enter
loope
cltd
jo
mov
sub
cli
mov
xchg
jg
jb
leave
mov
xchg
sub
cmp
lret
pop
sub
scas
adc
cmp
mov
aas
xchg
sbb
stc
jmp
shll
push
loopne
mov
jb
idivb
out
add
cmp
adc
lods
lea
pop
lret
std
jo
push
jmp
fildll
push
fcmovnbe
mov
js
jecxz
out
mov
pop
jns
add
sub
push
adc
mulb
xchg
lds
sbb
jl
cli
mov
push
lods
fsubrl
fisttps
test
pop
jns
xchg
sub
inc
mov
sub
push
hlt
adcl
sub
out
mov
or
xchg
cwtl
fsubr
loope
cld
or
jg
mov
inc
and
or
bound
mov
mov
movsl
jge
pop
mov
dec
or
ret
jns
push
rolb
lahf
cli
pop
add
cmc
or
mov
xor
test
jne
add
je
test
xchg
mov
xlat
mov
mov
adc
repz
rcrb
mov
je
fidivrl
rcl
cmp
xor
test
pop
inc
sub
add
in
clc
leave
std
push
adc
movsl
repz
pop
and
out
push
stc
stos
add
jle
push
mov
mov
call
push
sahf
push
insl
mul
or
adc
push
lret
add
push
sbb
xchg
dec
add
cmp
cwtl
xchg
popf
sub
aam
lret
sub
dec
push
sbb
cmpsb
movsl
insl
push
dec
or
adc
cmpsb
fistps
insl
mov
popf
cmc
sarl
add
out
popf
mov
sbb
fwait
mov
cli
int
mov
aad
xchg
xsha1
cmpsb
out
sbb
sub
and
je
stc
or
sbb
sti
fadds
aad
lock
add
je
adc
inc
out
mov
outsl
out
ss
pop
dec
xlat
sub
scas
sbb
or
xor
movl
adc
ret
and
loop
pushf
add
mov
jmp
push
mov
cli
in
cmp
stc
mov
adc
fadds
cwtl
mov
inc
dec
scas
fbstp
pop
stos
xor
mov
cli
rorl
ret
cmp
insl
add
adc
out
xchg
lea
mov
sub
cmp
aad
test
cld
into
aad
fimuls
mov
fists
jae
add
pop
lea
outsl
push
xchg
test
mov
xor
fcmovnbe
imul
repnz
pop
ret
gs
enter
and
and
jecxz
outsl
pop
imul
jo
pop
inc
addl
jle
fsub
mov
dec
add
and
or
fistpl
xor
test
loope
inc
dec
aad
insb
xor
ja
jge
inc
idiv
cs
jns
xlat
fstl
xchg
push
cmc
pop
sbb
iret
add
cli
xchg
lcall
mov
inc
xor
and
dec
push
xchg
aad
fsts
enter
xor
shlb
bound
shll
subl
mov
movsb
rol
sub
movsl
rclb
lret
cmpsb
mov
cwtl
jmp
add
xor
add
lods
outsl
xor
push
or
xchg
out
or
mov
xchg
lock
int
je
es
lods
push
xchg
rcr
add
mov
cli
les
pop
sahf
jb
pop
xchg
in
mov
daa
fsubr
mov
and
sarb
pop
sbb
iret
adc
mov
data16
mov
rclb
cld
or
push
and
popf
inc
fcmove
popf
das
imul
popf
outsb
xchg
jecxz
daa
imull
and
mov
mov
jo
out
enter
mov
shrb
testl
jae
add
fsub
push
repnz
jns
bts
daa
and
sub
insb
dec
lods
xchg
rorl
sahf
jbe
repnz
ficomps
xchg
lcall
push
dec
mov
and
daa
ss
aas
sbb
sub
add
lret
mov
lock
mov
xchg
jns
fiaddl
loope
sar
jmp
cli
jbe
clc
int
nop
cmp
xchg
cmp
stos
and
fimull
cld
sbb
mov
push
mov
movsl
test
pop
sti
pop
push
subb
addl
popa
fwait
and
mov
pushf
add
mov
mov
addl
test
add
mov
cmpsb
into
shr
cs
insl
push
jno
cmp
test
lcall
push
cmp
aam
add
jnp
insb
jae
and
popa
stc
jns
scas
call
shlb
lret
in
pushf
xor
popa
cld
dec
pop
jns
out
jecxz
xchg
mov
in
jbe
mov
cmp
je
frstpm(287
or
out
daa
call
mov
imul
je
clc
fcompl
inc
orl
jecxz
jno
push
repnz
xor
adc
cmpsb
ret
jp
mov
adc
les
pop
rorb
push
ret
adc
push
cltd
cmp
es
stos
sbb
pop
insl
cli
dec
mov
lock
addr16
cmpsb
sbb
mov
or
inc
add
xchg
test
fisttpl
and
jmp
or
data16
cmpw
mov
xchg
xchg
leave
dec
leave
sbb
add
out
push
fnstsw
daa
xchg
jbe
lods
and
mov
iret
cld
mov
into
iret
add
lock
adc
xor
add
in
xor
xor
push
stos
mov
pop
and
and
mov
jmp
pop
sub
fcom
mov
mov
dec
movsb
fs
mov
sarb
push
leave
pop
or
sbb
pop
mov
fidivrl
repz
push
outsb
and
cmc
push
lock
dec
stc
sti
and
into
adcb
cmp
add
hlt
and
movsb
dec
xor
sub
mov
fdivl
adc
sahf
xchg
mov
and
ljmp
sbb
fwait
mov
nop
xor
int
xor
xor
ret
ja
cmpl
call
clc
pushf
loope
cmpsl
cmp
js
rolb
int3
lahf
or
out
adc
lds
jecxz
sub
push
dec
leave
out
xor
and
adc
inc
jne
adc
sub
call
pop
add
mov
inc
int3
xor
inc
sub
aas
jge
sahf
lret
mov
out
push
das
movsb
sub
loop
xchg
inc
in
enter
in
jle
inc
test
ret
xor
sbb
pop
mov
fs
loope
loope
jno
ffreep
add
adc
dec
lret
mov
mov
mov
push
popf
xchg
mov
rorb
sub
jp
imul
and
lods
inc
push
mov
add
scas
arpl
lock
dec
mov
push
andb
sbb
fstpt
push
xchg
mov
push
xor
dec
push
or
push
jmp
dec
cmp
add
sub
mov
jle
cltd
out
xor
lods
and
lcall
or
xor
push
mov
sahf
cwtl
and
inc
mov
dec
arpl
outsl
mov
jge
push
rcr
adc
add
dec
sbb
mov
enter
sahf
stc
mov
decl
icebp
cmc
inc
sbb
punpckldq
lods
fs
and
fists
nop
dec
and
lods
stc
jge
cmp
popa
inc
adc
adc
out
pushf
ret
fwait
test
inc
sbb
lret
aaa
notl
movsl
mov
and
scas
out
pop
xor
jecxz
iret
xor
add
sahf
aaa
jno
das
cmovs
mov
mov
mov
add
xchg
sbb
mov
outsl
mov
mov
nop
or
test
hlt
xor
pop
xchg
inc
addl
stos
xchg
mov
or
loope
test
stos
ljmp
lahf
movsl
dec
enter
jmp
push
mov
cmp
enter
nop
faddp
push
inc
lods
lret
xor
popa
ljmp
mov
stc
stos
divl
xor
popf
push
mov
call
cmp
hlt
jb
mov
inc
xchg
jmp
mov
ja
test
popf
test
or
movsl
jbe
rclb
push
sub
pop
les
sbb
imul
fxsave
fwait
mov
and
enter
pop
stos
icebp
aam
inc
fisttpl
lcallw
test
sub
int
int
cmp
dec
test
test
mov
iret
arpl
inc
inc
and
jne
pop
int
adcl
sbb
pushf
xchg
imul
jmp
ret
sbb
dec
mov
adc
imul
scas
or
adc
or
cmp
xchg
pop
popa
shlb
xor
loopne
test
scas
lea
push
out
inc
nop
ss
mov
scas
pop
or
fstps
popf
lea
movsb
xchg
inc
adc
mov
rorb
dec
popf
test
test
push
fstps
fidivrs
divb
push
cmpsl
jle
add
push
adc
or
fildl
ja
push
out
inc
out
int3
std
dec
jmp
clc
fs
pop
ret
outsl
es
sti
jmp
ret
nop
mov
or
cmpsb
hlt
enter
push
push
in
dec
pop
out
gs
mov
mov
js
xchg
repnz
add
out
sbb
es
test
and
negl
add
daa
repnz
pop
mov
push
cmp
inc
adc
repz
subb
push
les
cmp
ja
jnp
test
sub
cli
orl
sub
mov
std
bound
je
mov
or
dec
movsb
jge
add
xchg
jno
and
movsl
and
testl
test
pop
aad
mov
ja
pop
lret
daa
or
push
mov
push
and
jmp
sbb
mov
std
cld
adc
and
pop
mov
negl
inc
mov
out
outsb
ds
adc
test
ret
push
into
int
lahf
cmp
xor
dec
add
mov
shll
jmp
push
pusha
das
stos
xchg
sub
fildl
pusha
adc
or
movsb
or
neg
dec
pop
stos
in
sahf
sbb
loop
je
shll
cld
sub
mov
sahf
testb
test
dec
outsl
inc
mov
sub
or
mov
movsl
adc
gs
fiadds
jnp
pop
int
mov
xlat
xchg
push
std
pop
loop
sarl
daa
add
outsb
mov
cmc
movsb
sub
dec
fcomps
or
stc
jo
push
jnp
fistl
pop
pusha
or
xor
into
jbe
xor
not
jae
fisttpll
ljmp
insb
dec
or
push
mov
fwait
enter
jne
in
movsb
dec
dec
mov
mov
xor
ds
jecxz
je
and
dec
stos
cmp
xchg
fisttps
aam
xor
dec
mov
fwait
jp
pop
mov
int
mov
aas
mov
daa
fisttps
mov
xor
mov
fwait
push
arpl
jbe
or
push
sbb
hlt
push
pop
cmpsl
jge
lret
cmp
dec
into
ficompl
les
jle
scas
xchg
jb
lcall
mov
pop
mov
add
mov
mov
dec
mov
jle
pop
xor
leave
shlb
ror
lods
test
pop
xchg
pop
icebp
aad
outsb
test
or
icebp
xor
sbb
jp
movsb
push
leave
jge
out
incl
movsl
xor
pushf
cmp
mov
cwtl
and
xchg
inc
and
imul
lds
cltd
sbb
push
mov
imul
dec
sbb
push
add
insl
xchg
push
pop
mov
and
call
test
outsl
outsl
mov
push
xchg
pop
jae
clc
out
sbb
lods
icebp
adc
cmp
adc
lock
pop
mov
aaa
and
int
mov
cmp
into
cmp
or
scas
data16
pushf
fmuls
push
adc
outsl
cmp
rcl
push
repz
or
cmp
inc
sti
and
cmpsl
pushf
aam
repz
or
xlat
dec
rcl
jns
adc
mov
xor
mov
add
in
sub
mov
add
fiadds
movsl
xor
ljmp
cmp
pop
mov
sub
stos
inc
repnz
cvtps2pd
fiaddl
jmp
mov
in
jecxz
rcrl
pop
xchg
jbe
std
idivb
jle,pt
sub
in
pop
xor
or
imul
xchg
dec
pop
dec
call
out
xor
in
cltd
iret
cmp
or
pop
popa
addr16
ret
imull
add
and
dec
lock
mov
fwait
imul
jmp
mov
xor
rclb
mov
pop
cli
pop
lea
mov
cld
scas
mov
cmc
push
xorb
fstpt
out
jmp
jmp
lods
and
cmp
pop
outsb
fwait
sarb
inc
aad
pop
mov
pop
xchg
pop
dec
mov
xchg
inc
pop
inc
add
clc
mov
pop
pop
jecxz
inc
inc
mov
lret
cmp
dec
cmp
outsb
or
inc
ljmp
jle
push
jl
insl
or
xlat
lret
sbb
mov
and
jle
cmp
loopne
lods
or
jge
jnp
popf
test
dec
cmc
out
bound
aaa
mov
cltd
popf
and
insl
xor
pop
adc
loopne
xchg
and
pop
push
or
ljmp
push
or
mov
lret
mov
push
xchg
pusha
cld
ja
cld
mov
out
adc
cmc
into
xchg
dec
mulb
aas
mull
sahf
cmp
test
divb
pop
scas
xor
cltd
pop
mov
or
fildll
push
sbbb
insl
jns
int
mov
addr16
add
dec
insb
pop
mov
mov
sub
jle
faddl
xchg
ja
inc
lods
mov
adc
mov
aas
push
clc
loope
test
cmc
mov
stos
imul
lcall
mov
rorb
cmp
jne
bound
addl
test
lods
sub
inc
sbb
mov
dec
ja
stos
stc
es
scas
jle
dec
sub
pop
mov
fs
mov
cmpb
subb
fistpl
pop
mov
or
add
bound
dec
mov
pop
push
push
int
add
jmp
sub
pop
movsb
fisubrs
mov
cld
sub
icebp
cmpsb
out
adc
mov
inc
mov
ja
xor
hlt
adc
jbe
xchg
sub
inc
daa
es
mov
nop
push
pop
jb
and
shlb
loopne
in
pop
jge
fadds
pushf
dec
xlat
std
inc
je
out
jl
dec
das
mov
out
mov
stc
xor
dec
push
xchg
jmp
pop
add
jbe
into
or
into
das
or
cmp
push
enter
cld
or
cwtl
mov
repz
mov
fwait
adc
cmp
and
mov
out
xor
sub
add
stos
hlt
ret
out
mov
int3
jae
stos
cwtl
jmp
cmp
mov
push
jmp
dec
rcr
mov
aad
mov
inc
lret
sahf
push
arpl
mov
jecxz
pop
rorb
enter
inc
push
testl
and
out
rol
addr16
adc
cmp
adc
mov
ds
pop
adc
fmull
decl
jecxz
push
mov
iret
cs
imulb
mov
roll
stos
notb
adc
pop
fldcw
sbb
mov
addr16
cmpsb
arpl
adc
mov
pushf
inc
rorl
or
jb
jo
in
pop
jo
xchg
pop
adc
jne
cmp
mov
adc
or
jae
mov
adc
jae
mov
lret
cmp
push
orl
add
mov
out
jl
jb
cmp
js
pushf
pop
test
test
jp
mov
sub
insl
or
dec
mov
jb
sbb
ret
xchg
cli
sbb
fwait
xchg
and
insl
push
jne
add
dec
cmp
mov
push
adc
dec
rorl
push
lret
adc
push
mov
mov
or
or
cli
sbb
test
cmp
sahf
and
arpl
lock
clc
mov
sti
xchg
xlat
int3
push
popf
sbbb
sahf
jp
cli
mov
loope
or
push
inc
xchg
dec
mov
outsl
bound
jno
dec
sub
or
ret
fldl
sbb
mov
fistpl
add
mov
fsubs
sbb
inc
adc
rcr
xor
mov
cmp
xchg
lret
or
das
mov
addr16
in
fdivs
push
and
int3
mov
jge
popf
out
arpl
jb
hlt
push
pop
sbb
sbb
pop
cmc
daa
xchg
or
test
pop
std
and
and
arpl
sub
jg
ds
mov
or
cli
xor
and
shrb
std
movd
push
pop
inc
fmulp
jae
mov
idivb
inc
cld
test
mov
sbb
in
jp
add
sbb
inc
pushf
push
jo
movb
test
mov
fs
mov
icebp
js
sbb
les
mov
inc
pop
in
fs
add
and
into
bound
aas
nop
cmp
mov
sub
cli
inc
jl
mov
arpl
shll
stos
mov
inc
lahf
out
sub
push
adc
jno
mov
jl
hlt
push
js
sbb
pop
sbb
imul
cmp
mov
sbb
adc
adc
push
mov
mov
repnz
inc
sub
inc
push
loop
bound
into
mov
shrb
mov
dec
cmpsl
hlt
data16
push
test
sub
dec
adc
dec
jge
pop
jae
mov
cli
cmpsl
in
jne
int3
aaa
jno
sbb
fnstenv
dec
fwait
test
sbb
sti
or
int
mov
xlat
mov
add
sbb
or
and
es
mov
inc
ljmp
cmp
into
sub
sub
clc
lods
into
add
pop
adc
dec
inc
push
mov
dec
aam
or
add
pop
sar
lods
add
sbb
sarb
jne
mov
xor
pop
pop
jne
aam
push
lods
or
mov
add
sti
adc
inc
inc
lahf
fcoms
cmp
inc
fsubrp
inc
pop
repnz
xchg
add
int3
lock
xor
sahf
mov
or
jg
repnz
lods
filds
mov
stos
pop
repz
lret
shl
sbb
mov
xchg
dec
cmp
jb
pop
inc
inc
jle
add
pop
aas
mov
gs
fcmovne
fdivl
dec
mov
lds
imul
sub
movsb
and
and
dec
je
sti
addps
movsl
add
rcl
call
jb
or
inc
dec
pop
cs
enter
xchg
sbb
js
iret
inc
jp
jecxz
sub
roll
lock
inc
pop
add
sarb
aad
jl
sub
pop
ret
movl
cmpsl
jp
sub
xchg
sbb
xchg
pop
imulb
xor
movsb
push
gs
sbb
cmp
lahf
mov
repz
cld
pop
ss
mov
inc
movsl
out
cmp
int3
sahf
push
in
pop
cld
dec
inc
inc
arpl
mov
pop
test
xor
lds
lret
push
stos
nop
adcl
mov
imul
or
das
mov
lcall
mov
outsb
mov
adc
pop
test
or
stc
push
popa
out
mov
ds
es
scas
mov
and
je
repz
add
cmpsl
loop
inc
mov
cwtl
adc
pop
lret
jnp
clc
pop
movsl
lahf
pop
adc
xchg
add
xchg
sbb
out
push
loope
daa
imul
and
pusha
bswap
sbb
popa
add
xchg
test
fistps
ret
xor
push
dec
jae
mov
std
call
int
inc
inc
call
test
and
fisubrs
xor
and
int
je
dec
imulb
mov
xlat
inc
test
xchg
dec
push
dec
inc
push
inc
aaa
jecxz
pop
leave
mov
bound
and
mov
pop
sbb
xchg
cmpsl
xchg
or
pop
cmpsl
and
int3
cmpsl
cli
dec
jg
andl
je
mov
jns
jns
mov
pop
imulb
aam
mov
outsl
cmpsl
xor
clc
ja
into
lds
stos
stos
ljmp
daa
std
mov
adcb
inc
and
adc
sbb
jmp
leave
call
hlt
orb
sbb
push
pop
std
subb
cmpb
fcomps
in
das
xor
imul
iret
insl
inc
mov
and
pop
in
fnstsw
push
clc
mov
stos
or
cld
mov
inc
js
jmp
rclb
add
mov
mov
push
sbb
push
cmp
icebp
imul
mov
sbb
mov
in
sub
pop
pop
arpl
clc
xor
mov
sub
cmc
mov
push
mov
add
xchg
std
pop
mov
xchg
in
or
fdivr
fstpl
dec
pop
cmp
in
sub
into
push
mov
mov
push
lret
pop
and
icebp
xchg
sahf
ja
dec
popf
loope
stos
cwtl
push
add
frstor
fptan
in
push
mov
arpl
aaa
pusha
ljmp
pop
dec
jb
in
mov
movsb
xor
mov
cld
xor
jp
push
xor
repz
mov
pop
or
pop
popl
movsl
and
in
and
pop
adc
addl
cmp
mov
and
fistps
add
sub
xchg
push
push
add
cli
inc
cmp
xchg
stc
sub
lcall
inc
sti
aas
cwtl
imul
dec
jg
dec
in
dec
hlt
cmp
and
mov
pop
push
jle
repnz
mov
pusha
dec
jbe
push
xor
shlb
fs
pop
ret
xor
pop
cmc
cmp
daa
pop
adc
aaa
cmp
mov
outsb
movsb
or
and
adc
push
hlt
push
mov
cs
aas
sbbb
pop
fsubrs
sbb
cltd
cmpsw
cmp
arpl
fmuls
push
lret
in
cltd
adc
sbb
mov
push
arpl
sarl
cmp
mov
cmp
into
or
add
pop
push
jmp
adc
outsb
jp
mov
enter
std
outsb
sub
jne
in
in
lret
cmpsb
dec
mov
jnp
insb
pop
std
fimull
add
pop
fisubrl
loop
stc
aam
push
sahf
and
or
cmpsb
and
sarb
ljmp
xor
rorb
out
mov
ja
and
out
push
bound
inc
addr16
xchg
jo
pop
jne
mov
pop
in
jbe
cwtl
pop
mov
fs
std
jmp
fldlg2
das
push
mov
jecxz
mov
mov
ljmp
std
adc
push
jae
adc
lcall
add
jp
pop
adc
imul
and
jg
mov
or
in
sbb
cld
sub
lds
sub
mov
cmpsl
pop
jne
add
je
icebp
sub
jns
ret
arpl
cs
bound
mov
push
mov
sbb
fidivs
out
or
leave
icebp
es
test
ret
push
jbe
mov
cli
je
lods
ja
sub
sbb
and
xchg
jl
icebp
mov
adc
cmp
in
push
sub
add
stos
add
fidivl
xchg
adc
out
adc
iret
cld
pop
dec
cmp
mov
pusha
push
xor
or
imul
mov
in
sub
jg
dec
popf
fwait
adc
inc
bnd
inc
mov
lahf
pushf
fidivrl
jg
mov
out
mov
bnd
push
test
mov
in
add
push
stos
add
dec
ljmp
cli
xchg
cmc
xor
pop
cmp
repnz
pop
jle
daa
adc
pop
jns
adc
or
push
enter
ja
ds
jp
xor
push
imul
stos
testb
inc
inc
loopne
jno
mov
jp
mov
dec
and
je
inc
sbb
ss
lret
cld
cltd
inc
cmp
push
mov
sub
popf
sub
sti
mov
scas
and
cmp
dec
outsl
popa
leave
jnp
lahf
push
push
cli
das
test
repz
les
sub
popf
cmpsl
sub
into
mov
jecxz
rol
inc
mov
and
mov
ror
pop
in
pop
adc
jb
add
xchg
lcall
ret
fcoms
mov
ss
xchg
hlt
cmp
pop
test
ret
icebp
xchg
pusha
cwtl
sbb
leave
add
aam
push
and
and
stos
mov
std
push
mov
adcb
pusha
push
idivl
xchg
xor
add
inc
outsb
outsl
push
int3
or
sti
xchg
shrl
rcl
mov
icebp
es
aas
addr16
mov
mov
push
fidivrl
mov
xlat
or
add
dec
jle,pt
inc
jbe
jo
arpl
in
sbb
lret
dec
cmova
mov
ret
pop
insl
xor
pop
test
push
test
fdivp
xchg
pop
cli
cwtl
jns
fisttpll
inc
mov
gs
pop
roll
jecxz
clc
bnd
xchg
sahf
gs
lods
aaa
aaa
add
jbe,pt
push
sahf
fcoml
add
jge
fisttps
dec
iret
and
sub
lock
cmp
popa
mov
sbbl
dec
sub
cmp
fs
dec
bound
imul
dec
mov
adc
idiv
test
or
jecxz
out
mov
int
sub
cmc
lods
xchg
sbb
clc
xchg
mov
pop
or
iret
add
pop
jno
idivl
pushw
loope
jne
or
mov
add
scas
scas
cmp
popa
out
inc
imul
mov
out
test
xchg
scas
xchg
sub
sub
xchg
push
nop
int
mov
in
test
add
pop
mov
test
clc
sub
inc
sbbb
ret
shll
xchg
inc
aaa
mov
jne
mov
cld
dec
dec
dec
jb
clc
mov
mov
out
les
inc
adc
daa
test
and
xchg
in
fnstsw
mov
xchg
imulb
dec
jl
aaa
movsb
mov
mov
gs
pop
das
dec
jl
dec
xchg
push
xchg
pop
ret
iret
in
jo
xchg
add
sahf
mov
jge
adc
cmpl
add
jl
nop
xchg
pop
adc
outsl
nop
aas
in
neg
es
dec
fucomp
cmp
mov
inc
icebp
cmp
addl
push
cmp
pusha
imul
movsb
sub
jl
outsb
popa
clc
add
out
nop
fs
das
scas
xchg
xlat
es
inc
aad
xchg
cs
jecxz
adc
xlat
mov
push
jae
adc
imul
icebp
hlt
icebp
xor
test
xor
xor
push
sub
lret
sbb
pop
test
testl
aam
movsl
clc
out
xchg
mov
jne
sbb
xor
sbb
test
sub
pop
xor
xchg
jle
pop
pop
iret
fwait
imul
push
lea
shr
push
out
mov
mov
xor
mov
xchg
popf
and
cli
and
ljmp
aam
cmc
imul
out
test
push
in
cmp
pop
test
add
dec
std
notl
xlat
fisubl
aaa
add
or
add
xchg
pop
adc
push
cmp
out
cld
or
es
jno
arpl
stos
pop
mov
enter
mov
fldenv
cmc
out
add
rcl
pop
ret
and
in
icebp
mov
shl
imul
cltd
call
sbb
ss
xor
sub
sti
xchg
mov
or
ljmp
adc
dec
out
xor
aas
jbe
push
mov
sbb
mov
rolb
xor
add
ficomps
jp
ret
cwtl
jne
call
repnz
roll
cmp
xchg
or
out
jg
out
subl
aam
jl
dec
pushf
mov
sub
xchg
jae
cmc
dec
dec
mov
stc
leave
push
xchg
push
arpl
dec
push
pop
test
jns
mov
mov
test
and
add
cld
addb
push
shll
popa
mov
fwait
jmp
ja
and
and
sub
outsl
pop
dec
push
sbb
addr16
adc
adc
stc
pop
xchg
or
je
xchg
mov
mov
xor
fisttpll
stos
xchg
jmp
faddl
inc
push
les
fwait
repnz
sahf
sti
fisubl
xchg
dec
lea
sub
push
mov
test
and
push
mov
jae
cld
adcb
sbb
mov
repnz
push
mov
sbb
add
adc
cmp
sbb
test
add
sbb
shlb
sbb
jge
sub
mov
addr16
add
cmp
stos
mov
cmpb
daa
das
push
mov
pop
sbb
and
dec
or
inc
ret
xor
cs
fnstcw
lds
inc
or
addr16
pop
lods
imul
jo
lret
bound
mov
dec
and
cmp
mov
xor
int3
push
push
sbb
fnstcw
xchg
xor
pop
mov
js
out
cmp
imul
add
imul
sbb
icebp
sub
pusha
xchg
ja
sbbl
dec
push
jns
and
addr16
movsl
bound
or
rcr
fwait
jle
mov
and
cmp
mov
popa
sbb
fdivl
mov
sub
dec
or
fsub
popa
lds
ljmp
leave
insl
add
iret
imul
lods
inc
cmpsb
xor
imul
sbb
out
push
and
rorl
sub
xor
pop
jecxz
jge
rcrl
lret
inc
into
ret
dec
lods
mov
data16
in
das
dec
dec
fildl
pusha
cld
out
icebp
jle
loope
jb
lcall
mov
jns
mov
sbb
lret
jmp
push
jmp
jne
add
jl
int
cmc
push
cli
and
movb
loope
loope
arpl
xchg
mov
dec
scas
jno
adc
cmpsl
dec
fldt
stos
shrb
pushf
call
repz
dec
sti
icebp
add
push
inc
lods
push
jns
loopne
scas
loope
sub
icebp
repz
jns
or
out
pop
int
lcall
leave
and
sub
push
in
and
loop
bound
ror
or
inc
outsl
roll
pop
mov
jb
loopne
push
sbb
lahf
xor
imul
imul
iret
cmc
cs
fcoms
add
out
jmp
dec
lods
mov
je
jne
nop
sub
cld
mov
arpl
nop
dec
push
je
pop
inc
push
scas
xchg
dec
les
cmpsl
jb
cmc
xchg
mov
aad
icebp
cmp
mov
cmp
insl
xor
cmp
rorl
stos
scas
aaa
frstor
push
ret
push
mov
cltd
sbb
sbb
xchg
cmc
aaa
dec
cli
negl
das
sbb
xchg
pop
mov
dec
int3
cmp
jp
inc
test
mov
mov
lahf
cltd
mov
mov
inc
sub
cmpsl
jae
std
pop
sti
dec
mov
lahf
jae
cmc
or
pop
jecxz
add
sub
xchg
js
inc
or
ja
jb
shll
pop
loop
mov
dec
push
sub
mov
pop
jecxz
or
jecxz
cmp
jmp
fimull
jl,pn
je
push
std
jae
sub
sbbl
push
sti
out
ss
add
add
outsl
dec
inc
pop
pop
xlat
push
mov
shrb
out
cmp
xchg
outsl
push
outsb
daa
dec
cwtl
and
cltd
jmp
cli
imul
into
test
mov
xorl
cld
negb
push
rclb
cmp
cmp
jmp
jo
push
insb
js
outsb
cmp
pop
jbe
dec
lods
inc
dec
movsl
or
sub
mov
xor
hlt
xchg
orb
and
mov
test
cmp
les
mov
xor
xchg
stos
jl
xchg
mov
add
out
cmp
sub
add
push
mov
lahf
iret
xchg
outsl
adc
cs
cwtl
lock
dec
int3
int
call
add
nop
rol
jnp
cmp
dec
jo
push
xchg
popl
and
sub
fisttpl
js
into
cmpsl
mov
repnz
jmp
fs
aam
xor
roll
jnp
jl
mov
push
out
inc
aam
hlt
jno
jmp
sti
pop
mov
loope
icebp
inc
xchg
push
fcomps
popa
popa
push
repnz
and
dec
sti
cmp
ljmp
ljmp
out
aaa
xchg
cmc
cmc
mov
fwait
loop
pusha
inc
outsl
xlat
lods
push
inc
dec
mov
shrb
stc
push
fwait
push
stos
dec
jmp
loopne
pushw
push
lcall
and
inc
je
cmp
push
cmpsl
or
push
and
fstpl
mov
add
loop
inc
ja
xchg
inc
cmp
jmp
scas
and
xor
stos
pop
sbb
jne
sub
cwtl
pop
jne
and
mov
sti
ja
xchg
aad
scas
jb
mov
push
call
push
orl
lret
es
idivb
cmpsl
cmp
nop
jg
stc
or
mov
jmp
in
sbb
lahf
ljmp
mov
mov
and
and
cmp
jb
scas
icebp
xchg
scas
aad
enter
ficomps
jns
fcom
inc
mov
sub
jmp
ret
mov
push
dec
sub
xor
test
stos
push
movsl
outsb
or
jnp
jnp
adc
std
add
aaa
add
in
jl
scas
and
xor
adc
testb
dec
add
adc
xorb
dec
ret
ficoms
shlb
jns
fwait
or
pop
xlat
notb
sub
jae
lret
fdivrl
or
enter
mov
fbld
push
cwtl
aad
push
xor
cwtl
sti
mov
lds
popa
mov
jbe,pn
int3
pushf
negl
cld
push
testl
and
pop
and
mov
aad
mov
push
adc
adc
pop
cmp
sbb
mov
and
or
pop
aad
loopne
into
fwait
js
cmp
test
ret
xor
add
lods
stos
lods
xor
fnstsw
mov
insl
fwait
xchg
cmc
out
cmp
test
pop
int3
popa
sbb
mov
leave
lds
inc
fs
insb
popa
subb
cmpsb
cmp
shlb
test
push
popf
cmp
sub
decl
or
test
je
xchg
xchg
cltd
bound
add
inc
arpl
and
lods
mov
dec
mov
push
jbe
aaa
pop
sti
mov
cmovnp
test
aam
mov
sub
sbb
dec
ja
sti
mov
pop
pop
popa
fmuls
cmpsl
pop
sbb
sti
inc
xchg
inc
ja
xor
jb
test
add
mov
fmul
jl
xor
pushf
nop
loop
jno
fldcw
sbb
push
jl
mov
lea
mov
pop
movsl
notb
and
jecxz
hlt
lcall
mov
and
jmp
les
mov
sub
es
jecxz
je
cmp
es
lods
or
andb
or
icebp
cmpsb
pop
cmp
xchg
lret
xchg
pop
stos
sbb
or
dec
arpl
add
cmc
lahf
dec
stc
data16
iret
pop
mov
sub
fbstp
subl
iret
pop
xor
xor
or
push
push
in
xor
jb
push
popf
imul
push
ljmp
mov
xlat
clc
sti
fbld
lcall
enter
add
iret
stc
popl
inc
scas
insb
xor
in
mov
test
sarb
add
push
push
or
daa
jb
pop
pop
inc
mov
mov
in
repz
out
rol
outsb
pop
xor
push
arpl
cmp
pop
fucom
jno
sbbb
xchg
xchg
pop
int
sysret
lock
xchg
jmp
shr
les
push
inc
push
sub
insb
inc
test
and
pop
out
xor
dec
test
icebp
push
shll
es
cmp
sbb
xchg
xlat
push
scas
fsts
je
add
std
cmp
test
sbb
jbe
dec
movsb
pop
push
or
int3
lahf
pop
mov
fimull
sbb
dec
mov
mov
sub
push
aam
rcr
xchg
inc
out
push
cmc
pop
aaa
push
out
cwtl
cmp
loopne
fsts
fucom
enter
mov
into
jecxz
das
push
xchg
sbb
adc
repz
or
xorl
sti
adc
stos
imul
sbb
jecxz
cld
iret
insb
and
mov
mov
jle,pn
insb
pop
pop
sub
cli
mov
popa
iret
daa
imul
aas
cwtl
xor
sbb
jo
in
lods
decb
cmpl
pop
aam
lahf
pop
jl
movsb
mov
jecxz
dec
outsb
das
push
sarl
push
fcmovu
adc
js
adc
dec
mov
mov
das
lcall
shll
jo
mov
ss
imul
pop
loope
fdivp
pushl
cmc
cld
divl
sub
cltd
sar
inc
cmpsb
movsb
mov
aad
ljmp
jecxz
inc
jmp
ljmp
mov
stc
mov
dec
das
and
or
add
mov
movsl
add
pop
xor
sub
insb
call
rcll
jle
sub
loope
jl
dec
out
les
dec
adc
fwait
stos
sub
cli
push
mov
xchg
add
insb
jns
or
rorb
xor
sbb
jmp
ffree
mov
repz
orb
movsl
inc
xchg
mov
out
std
fidivs
idivl
out
dec
xchg
jmp
jp
or
cmp
mov
dec
jns
inc
fdivr
sti
xor
pop
pop
add
pusha
imul
dec
repz
sti
fsubl
inc
xor
addb
mov
pop
mov
ja
les
pop
jnp
add
mov
in
sbb
leave
cltd
aad
add
mov
mov
in
or
inc
jge
lret
shlb
jne
xchg
fldl
pop
cltd
leave
cmp
or
repz
or
jmp
into
xor
jg
inc
pop
in
adcb
or
pop
pop
int3
jl
fwait
push
mov
and
pop
fiaddl
pop
add
mov
lds
je
mov
adc
jp
xchg
ret
iret
mov
adc
inc
lods
mov
sub
cmp
jl
test
push
scas
in
imul
inc
inc
scas
in
movsb
or
mov
push
enter
sub
je
xchg
sub
push
repnz
ret
imul
jmp
hlt
push
lret
shll
imul
shrb
inc
mov
ret
mov
cmp
scas
les
and
loope
mov
push
pop
hlt
nop
test
pop
mov
pop
dec
sahf
shll
filds
fsubrs
lea
jns
add
adc
push
outsb
cmp
jnp
cltd
ret
out
adc
rcll
cs
mov
das
sbb
and
mov
cmpsb
rcl
mov
jle
andl
cmp
xchg
leave
fmull
mov
inc
jg
movsb
sub
dec
and
outsb
mov
insl
push
fisubs
push
lds
push
test
inc
lods
sbb
push
mov
mov
in
fstp
aam
mov
xor
cli
and
gs
sub
popa
pop
xor
shll
sbb
inc
lret
jo
repz
lock
dec
add
sub
jne
ljmp
test
xor
aad
out
cmpsb
fwait
mov
fsub
push
rcrl
aad
pop
sti
test
cli
lret
lcall
dec
sar
xor
add
mov
pop
pop
xor
dec
sar
mov
js
cmpb
icebp
in
aaa
fwait
xor
xchg
cmp
mov
or
mov
or
mov
pop
das
loop
adc
lock
repnz
inc
dec
and
cmpsb
sbb
sbb
fisttpl
int3
sub
dec
push
xchg
jecxz
pop
cmp
lret
cmp
add
pop
cmc
ja
into
mov
bswap
mov
push
test
sbb
jle
mov
and
test
xchg
ljmp
xchg
and
adc
inc
mov
js
jae
pop
lds
sti
stos
dec
fwait
rcr
lret
jp
dec
jp
sub
pop
rcrl
movsb
ret
js
push
push
mov
in
test
fcompl
bound
sahf
cwtl
je
xor
mov
mov
adc
ljmp
or
pop
fmulp
xchg
adc
fisttpll
fnstsw
fiaddl
sub
mov
out
and
repz
push
lods
rol
dec
das
jle
mov
sbb
sbb
cmpsb
mov
push
lahf
xor
mov
fdivrs
cmpxchg
test
rorl
popa
std
mov
cmp
jb
sub
pop
inc
addr16
push
push
cmpsl
cmpsb
and
xchg
nop
jb
mov
jne
add
inc
push
jecxz
xor
mov
or
xlat
pop
out
pop
xor
loope
mov
cmp
lea
ds
push
fists
movsb
lahf
mov
xorl
jo
sti
push
jbe
push
and
shlb
cmpsl
sbb
xor
jmp
in
fadd
stc
cwtl
push
cmc
sub
mov
push
popl
mov
jne
lret
aaa
fisubrs
xor
ljmp
frstor
pop
in
adc
ja
addr16
mov
sbb
push
test
mov
jo
or
call
cmova
cmp
jbe
in
addb
add
sbb
sub
mov
pop
test
mov
push
mov
dec
mov
stc
push
idivb
aas
in
xchg
pminsw
shrb
xchg
push
dec
adc
jo
ja
xchg
jae
pushf
adc
sbb
add
jns
stos
adc
loope
pop
dec
lods
cltd
rclb
imul
mov
pop
xchg
outsl
cmp
sub
or
mov
mov
ss
jae
and
xchg
mov
sub
adc
xlat
idivb
es
mov
fistps
jb
repnz
bnd
dec
sbb
adc
sub
inc
add
test
jg
xor
push
jnp
outsl
or
loope
stc
fs
fwait
adc
mov
stos
sti
sub
cli
scas
sub
div
data16
notb
shll
daa
mov
rcrb
push
cs
xlat
ja
dec
jecxz
xchg
cmc
adc
decl
testl
pop
lods
push
mov
lds
pop
imul
test
outsb
jg
mov
pop
sub
loopne
rcl
fxch
mov
push
or
cltd
ljmp
lcall
push
cmp
lods
sbb
adc
inc
lret
lds
mov
inc
lds
inc
sbb
sbb
jl
mov
xor
or
ja
mov
testl
jp
ret
mov
cmpsl
outsl
xor
jo
jo
addr16
pop
inc
sarb
and
push
js
xor
fldcw
loope
cmc
imul
and
and
out
xchg
push
ficoms
and
mov
icebp
jae
lret
sbb
dec
call
int3
xchg
int
push
inc
mov
and
into
and
iret
addb
add
cld
xchg
pop
lock
lock
test
mov
push
and
sub
shlb
addr16
orb
mov
pop
cmp
in
add
out
aam
adcb
add
mov
add
js
fs
mov
cmpsl
ljmp
adc
stc
push
icebp
jecxz
imul
shll
lahf
cmc
jae
jnp
packssdw
mov
dec
push
mov
sbb
xchg
mov
mov
ljmp
xchg
add
sub
aaa
mov
xchg
aad
push
neg
xor
cmp
mov
add
pop
mov
xchg
cmc
mov
mov
xchg
xchg
add
mov
dec
outsl
rol
jne
sub
push
shlb
pop
dec
ljmp
std
fstl
repnz
sbb
je
and
pop
in
test
xchg
test
pop
inc
sbb
sti
addr16
push
inc
adc
int
sub
xchg
pop
inc
xchg
loope
lds
in
imulb
loopne
std
addr16
cld
arpl
outsb
mov
mov
sbb
js
sarl
dec
xchg
lret
inc
sub
mov
push
mov
outsb
loope
sbb
pop
call
dec
mov
stos
sbb
ds
jge
inc
pop
push
sahf
push
cmp
pop
push
mov
fildll
cmp
push
xor
cmp
leave
rorl
mov
out
repz
jae
jp
jecxz
stos
mov
lds
mov
scas
in
outsl
or
es
divl
idivl
adc
les
aam
jp
adc
mov
out
adc
pop
push
sbb
adc
movb
ja
mov
outsl
dec
add
fstp
push
aam
lret
cmp
scas
jmp
ds
jg
imul
and
adc
add
repz
inc
jp
pop
pop
dec
xchg
adc
insl
jmp
cmp
je
pusha
jns
mov
jne
std
int
imul
xor
sub
or
inc
sbb
popf
filds
cli
sub
pusha
mov
pop
or
ret
and
pop
je
out
adc
sub
jl
aaa
iret
out
mov
jnp
or
in
movsl
pop
test
jb
popf
int
sub
xchg
mov
sahf
aam
mov
jp
imul
jmp
mov
aad
hlt
xor
and
in
push
fstps
imul
lock
rcrb
fsubrs
pop
das
sbb
cmp
ja
adc
jl
sbb
nop
fnsave
cmp
pop
notl
adc
jbe
lock
jmp
out
gs
idivb
sub
addr16
pusha
mov
cmp
adc
or
shrl
jno
push
xorb
pop
xor
cmp
lds
call
lea
xor
or
les
push
lret
les
aaa
dec
or
mov
bound
fisubrs
aad
xor
loopne
lret
sub
adc
imul
enter
lods
jp
or
scas
rclb
andb
or
fldl
sub
notb
push
popf
ret
mov
loopne
stos
jo
cwtl
lods
sub
inc
testb
xchg
call
insl
aad
addr16
out
inc
test
scas
add
sbb
jb
das
jp
mov
inc
push
popa
movsl
dec
mov
dec
mov
xchg
sub
shrb
mov
xorb
jecxz
pop
testb
les
es
dec
sbb
lcall
mov
cmp
add
sub
in
mov
pusha
lret
jecxz
mov
call
xor
addb
insl
sbb
loopne
jbe
mov
mov
stc
ljmp
push
stos
out
fildll
dec
stc
cli
lods
push
mov
sbb
pop
aad
sub
mov
mov
shrb
xlat
xorb
pop
and
jbe
shlb
push
test
repnz
roll
pop
cmp
jbe
out
bnd
or
inc
je,pn
push
loop
adc
dec
aad
jne
adc
push
shlb
pop
in
int
sbb
lret
outsb
mov
mov
sahf
push
inc
and
sbb
cmpsl
subl
pop
daa
mov
insb
fsubrl
inc
xorb
mov
mov
cwtl
add
fisubrl
jp
clc
xchg
adc
pop
ret
adc
xor
repnz
call
ds
dec
dec
jne
sub
outsb
cmp
daa
jno
ja
add
mov
mov
shll
xor
inc
rol
push
cmpsb
or
xor
add
and
and
iret
xor
add
inc
pop
sub
sbb
inc
fdivs
sbbb
cmc
xorl
mov
add
es
ret
sbb
sub
movsl
lock
ljmp
shl
movsw
outsl
sbb
pop
nop
xor
cmpsl
add
cmp
daa
cmp
xchg
dec
sub
mov
sbb
push
xchg
sbb
test
orb
es
jno
clc
fldt
negl
cmp
inc
or
jb
repnz
mov
xor
arpl
ret
mov
lcall
jl
mov
mov
fisubrl
mov
xchg
push
aad
or
add
sub
pop
aad
in
jbe
int
aam
cmp
xor
jle
jg
jge
xchg
faddl
testb
and
arpl
mov
loope
jle
ret
divl
cmp
fcmovnb
out
loope
xchg
dec
bound
cmp
xchg
adc
stc
jae
sbb
adc
inc
inc
mov
loope
mov
xor
repnz
mov
adc
add
scas
cmp
sbb
push
into
cld
bound
inc
adc
xchg
cmp
or
into
dec
insl
call
xor
mov
mov
mov
cmpsb
ljmp
xor
inc
xchg
inc
or
push
sbb
fsubl
mov
bound
and
out
pop
push
dec
and
inc
xchg
jl
mov
or
rclb
outsl
lods
test
jl
fwait
in
jae
jnp
sti
cmp
push
mov
scas
xor
arpl
xchg
out
pusha
fsubp
mov
or
std
push
cld
in
lods
loop
into
out
mov
mov
iret
popf
pop
cmp
pop
cmp
scas
mov
lret
das
rorb
imul
fs
in
andl
xchg
test
lea
lods
cmp
dec
or
mov
pop
popf
les
hlt
mov
mov
jno
adc
mov
pop
sti
ficompl
cltd
repz
sub
mov
mov
das
lret
adc
dec
jne
or
dec
xchg
jg
int3
xlat
pop
clc
inc
loope
jmp
int3
neg
sub
mov
push
cmc
xorl
fisubrs
aas
sbb
add
xlat
or
repz
inc
adc
out
adc
push
insb
xchg
in
dec
cmpl
fwait
or
aad
in
mov
lret
mov
fcmovb
add
mov
into
mov
aas
sub
xchg
or
cmp
add
in
sbb
shlb
or
scas
icebp
jmp
inc
mov
mov
or
or
pop
mov
cmpb
jg
adc
push
cli
add
lds
dec
cmpsl
imulb
lcall
loopne
rorl
pop
xchg
pop
cltd
jecxz
outsb
sbb
fwait
push
mov
enter
inc
movnti
cmp
loop
jl
mov
cs
nop
icebp
mov
mov
iret
cld
push
imul
or
icebp
fwait
int3
sti
in
leave
scas
cli
inc
out
cs
add
lret
enter
adc
xchg
aas
sbb
je
mov
mov
nop
pop
or
lcall
push
xchg
iret
jl
add
xchg
adc
fs
out
mov
or
leave
das
jecxz
clc
pop
jmp
test
hlt
ret
test
or
test
imul
addb
outsb
mov
inc
sub
roll
lock
mov
or
addr16
lea
xchg
mov
cmp
xchg
outsl
insl
shll
outsl
and
mov
and
inc
cli
fnstenv
adc
in
pop
test
xchg
cmpsl
aam
test
and
pop
xchg
scas
std
pop
sti
dec
addr16
xchg
sldt
sbb
dec
orb
bnd
mov
or
jno
aaa
je
push
jb
repz
loopne
in
popa
cmpsl
push
adc
lds
loop
dec
in
add
movsb
iret
jmp
stos
adc
imul
cmpb
xchg
jne
dec
repz
rcl
mov
cmc
pop
loopne
imul
js
aaa
and
xchg
or
xchg
cmovb
adc
xchg
std
insl
add
pushf
mov
push
int
andb
jnp
fwait
stc
lea
push
mov
adc
idivb
push
and
and
xchg
jecxz
pop
scas
sbb
jle
out
or
call
push
xor
inc
push
mov
pop
ss
adc
fadds
iret
cmp
popf
aaa
push
outsl
arpl
push
fiaddl
iret
inc
jb
and
sub
inc
mov
dec
clc
add
out
inc
jnp
inc
mov
movsb
cli
imul
pusha
pop
mov
xor
fisttpll
icebp
jb
mov
jno
xor
push
mov
nop
inc
ja
adc
addb
fldcw
cltd
stos
fs
test
repnz
pop
cli
fisubl
adc
stc
insb
dec
adc
es
jge
and
fwait
rolb
fdecstp
inc
jmp
xor
stos
mov
stos
push
pop
js
in
jge
pushf
dec
mov
sub
inc
add
sti
xchg
test
push
sub
cmp
popa
fidivl
out
repz
ds
jns
add
data16
roll
ss
std
inc
lret
sbb
decb
sub
jns
addb
mov
jp
test
jnp
mov
and
dec
pop
int3
fsubrl
xchg
mov
sbb
daa
fistpl
pop
adc
and
jg
dec
nop
xchg
mov
stc
lea
mov
insl
pop
jl
dec
sbb
jo
ljmp
adcl
cld
cmpsl
xor
jo
clc
sbb
pop
call
push
cmp
rcr
ror
and
add
dec
mov
pop
enter
lea
mov
pop
push
jle
in
mov
or
jle
sub
inc
dec
jge
lret
fcompl
sti
int3
addb
push
mov
adc
fdivp
mov
mov
mov
hlt
cmp
push
cwtl
dec
pop
jno
mov
mov
xor
dec
outsl
jne
pop
sbb
ds
in
xchg
cltd
sub
adc
dec
pop
jnp
int
in
pushl
inc
push
mov
xchg
jge
cmp
addl
or
pop
stos
cmp
nop
subb
pop
xor
incl
pop
sbb
test
enter
or
push
lcall
les
inc
add
inc
addb
dec
ja
mov
aam
mov
js
push
dec
stc
bound
xchg
mov
inc
in
xchg
sahf
addb
jns
dec
push
dec
lcall
sti
xchg
lds
cmp
add
repnz
mov
jns
mov
push
mov
sub
xchg
lret
xchg
xchg
sbb
push
xor
push
cld
in
scas
mov
jbe
mov
mov
psllw
mov
icebp
push
aas
add
push
inc
or
inc
out
sub
dec
dec
adc
rcrb
mov
incb
mov
mov
xchg
jg
inc
rolb
loopne
inc
ficoml
xor
mov
in
stos
push
mov
xor
int3
test
jmp
arpl
dec
xchg
pop
xor
mov
scas
inc
push
pop
cltd
loopne
imul
out
fistl
sbb
dec
insb
popa
push
mov
nop
pop
xchg
stc
xchg
sbb
jp
or
mov
jb
push
pushf
lds
push
xchg
pushf
test
imul
aaa
inc
repz
je
xchg
fisttpl
jg
hlt
mov
repz
clc
int
inc
push
pushf
fwait
lea
and
add
jb
adc
mov
add
loope
or
test
inc
cmp
jne
adc
outsb
fcoms
cmp
pop
hlt
xchg
push
test
incb
push
sbb
repnz
sahf
pushf
add
add
test
jecxz
xor
out
aad
cwtl
dec
push
icebp
xor
xchg
aaa
dec
inc
idiv
cltd
pop
mov
enter
mov
mov
adc
pushf
sbb
daa
jmp
lds
sub
sub
mov
int
pop
mov
mov
adc
out
xchg
and
lret
or
maskmovq
divl
add
lds
push
out
sub
pop
pushf
lods
xor
ret
or
pop
lea
pop
in
mov
jp
xor
push
iret
sahf
insl
insb
pop
cwtl
fdivl
push
push
jmp
inc
insl
js
mov
in
sub
push
aad
inc
sub
lret
sbb
loopne
inc
push
cmpsb
pop
arpl
movsb
cmp
out
jae
int3
fmul
mov
pop
lahf
test
sbb
pop
add
xchg
xchg
cwtl
and
dec
cmp
pop
push
push
xor
in
mov
sahf
adc
sbb
jns
in
inc
inc
mov
pop
xlat
cmp
loop
mov
pop
jl
and
das
je
std
notl
mov
jp
and
int
ret
test
pop
imul
loopne
movsl
dec
jp
jb
orl
inc
sub
mov
inc
and
aaa
xchg
insl
insb
decb
movsb
jns
out
aam
dec
das
ret
rcrb
inc
sbb
mov
out
inc
int3
loopne
or
bound
cmp
movsl
cld
or
xchg
lcall
mov
sub
mov
into
pushf
rcl
mov
cld
or
add
lods
or
push
jg
or
mov
mov
aam
clc
mov
mov
add
xchg
mov
cmpl
xor
test
ret
ret
mov
stc
in
mov
test
sarl
out
daa
dec
xor
mov
xor
sahf
adc
and
jnp
lea
jne
mov
lahf
and
fs
test
jnp
pop
ja
ret
fdivrl
nop
mov
orb
int
sbb
xchg
pop
inc
je
and
cmp
jae
add
shrb
pop
mov
push
rorb
hlt
iret
xchg
xchg
mov
fwait
inc
fadds
fistps
mov
fwait
mov
jl
jne
cmp
dec
mov
std
push
ret
xchg
lds
push
cld
dec
pop
and
inc
aaa
mov
imul
push
mov
xchg
fiaddl
inc
negl
push
add
push
pop
fs
sub
pop
std
ljmp
push
mov
cli
into
fdivs
mov
adcl
nop
mov
lds
cmp
arpl
ja
fnstcw
xchg
add
js
js
jecxz
adc
loop
xchg
mov
out
xchg
cmp
pushf
test
push
xchg
cmp
pop
mov
pusha
mov
lcall
in
xchg
jbe
addr16
sbb
mov
aas
mov
cmpsb
rol
cmpsb
mov
and
mov
stc
xlat
mov
loop
test
add
int3
data16
int
push
jb
scas
jle
lret
dec
pop
jmp
bound
push
adc
mov
push
ljmp
imul
arpl
push
push
lods
add
call
dec
repnz
or
xchg
xchg
mov
imul
inc
add
sub
popl
into
sbb
pop
xchg
lock
ret
mov
into
jg
mov
xchg
data16
js
pushf
pop
add
cmp
sub
in
ret
pop
push
fdivr
shlb
mov
mov
adc
mov
stos
popf
adc
fisubl
loop
hlt
int
push
imulb
in
pop
xor
push
push
in
jns
stos
adc
jl
xlat
push
and
fisubrs
test
inc
das
sarl
push
gs
cmpsb
add
in
inc
icebp
pop
mov
lods
push
daa
stos
js
enter
and
aad
rcrl
mov
pushf
add
ja
cltd
out
dec
rol
mov
dec
dec
and
out
in
sub
lret
mov
out
jle
mov
pop
jae
jnp
fcoml
jo
pop
cmpsb
or
fisttps
and
add
and
ja
loope
in
mov
repz
mov
jle
mov
sub
jbe
mov
pop
rcll
xor
and
jg
xchg
lods
imul
xor
aad
clc
je
and
test
neg
sbb
insb
ret
mov
mov
pop
cs
out
insl
insb
in
les
dec
mov
add
pushf
cmpsl
inc
loop
push
add
or
je
ror
out
int
xor
sbb
mov
icebp
xchg
xchg
jno
pop
lods
jne
loop
stos
jo
test
lcall
lock
movd
mov
lds
test
push
test
test
sarb
pop
cs
mov
push
sbb
add
stos
test
mov
in
test
dec
dec
std
lds
push
push
jns
jb
popa
jo
in
add
ficomps
faddl
push
sbb
sub
scas
fs
xchg
xor
mov
sub
cmp
add
js
sbb
and
xchg
cmc
xchg
inc
adc
sbb
pop
imul
cwtl
fnstsw
adc
popa
imul
pop
push
and
jle
dec
xchg
clc
or
fiaddl
xchg
adcl
cmp
mov
test
bound
adc
xchg
pop
dec
mov
mov
andl
pop
int
repz
jne
divps
inc
jnp
or
jnp
jle
inc
inc
xchg
mov
push
xchg
ret
std
or
loop
shll
dec
push
add
aas
adc
pop
ds
or
ja
in
test
das
loope
mov
out
enter
popa
lea
pop
lret
sbb
push
nop
out
fsubs
cmp
scas
test
std
loopne
int
pop
mov
push
mov
popf
mov
xchg
mov
dec
and
aam
insl
cmp
or
imul
mov
jecxz
cwtl
adc
sub
jnp
push
mov
imul
loope
mov
and
xor
and
push
testl
pop
popf
lahf
fidivrl
sub
mov
push
sub
jl
std
xchg
gs
push
dec
inc
pop
pop
and
mov
gs
ss
imul
mov
rcl
sub
out
jae
pop
push
sbb
mov
and
popf
movsl
stos
dec
mov
fnstsw
mov
sub
add
andl
sub
mov
aas
sbb
jmp
mov
loopne
enter
stos
test
rol
stc
inc
or
daa
fdivr
in
pop
popf
outsl
jo
cmpsl
mov
mov
cmp
push
cli
in
mov
hlt
lds
outsb
dec
jnp
rorl
mov
aaa
fadds
ret
cmpsl
xchg
loop
bound
fisubl
sub
in
aad
out
ljmp
jmp
adc
into
and
pop
in
push
push
add
rclb
xchg
lock
lret
out
sub
mov
enter
testl
mov
push
mov
iret
popa
andl
lds
mov
cli
or
andb
sub
jns
stos
sub
sahf
push
stc
mov
gs
out
in
mov
repnz
push
je
stc
ds
mov
pop
pop
ret
xor
xorb
inc
cld
push
mov
pushf
pop
filds
push
sub
cmp
inc
pop
add
adc
stos
jecxz
lea
and
cmp
shrl
sub
add
mov
jbe
adc
cs
mov
cmpsl
mov
leave
shl
outsl
cmp
cmp
mov
mov
js
pop
imul
mov
call
push
pop
xchg
sub
js
enter
add
out
ss
cwtl
add
daa
mov
cmp
stc
adc
add
pop
sbb
mov
pushl
in
pop
dec
mov
outsb
mov
xor
cli
stos
nop
mov
cltd
xor
aad
iret
push
mov
rol
jae
cld
outsl
std
mov
loopne
jmp
aas
xchg
shlb
mov
push
jae
mov
mov
mov
push
aaa
add
out
repnz
dec
push
in
xchg
inc
int
shr
jno
inc
rcll
into
in
ljmp
dec
pop
shll
mov
iret
push
pop
loop
aaa
movsl
icebp
mov
sbb
enter
ret
addr16
cmpsl
or
lret
xor
push
inc
inc
cltd
xlat
push
shl
cli
iret
data16
cmpsl
loopne
jne
repnz
repz
pop
imul
jg
push
movsl
mov
mov
xor
popa
mov
or
ja
aam
das
iret
out
adc
outsb
popa
aas
inc
xchg
aaa
adc
xor
xchg
js
ret
arpl
add
mov
mov
gs
adc
cld
mov
repz
pop
cs
jle
and
test
mov
sar
push
jmp
push
mov
es
pusha
add
sarl
sbb
loop
mov
repz
mov
movsb
pop
mov
and
mov
lock
int3
mov
sarl
int
push
daa
sbb
dec
pop
mov
mov
jg
add
or
lea
xchg
jns
mov
addr16
add
mov
mov
mov
mov
push
lahf
mov
push
test
inc
sbb
iret
cmc
and
xor
mov
mov
cld
mov
lahf
leave
push
daa
in
mov
js
stc
jmp
rcr
pop
jae
lahf
adc
std
std
sbb
sbb
mov
jb
and
sbb
adc
das
dec
inc
mov
cmp
jle
xchg
and
stos
mov
sub
int
pusha
sbb
sub
xchg
jge
outsb
enter
insl
in
dec
loope
in
xchg
sub
and
cmpsb
lahf
or
outsb
jo
mov
jae
pop
adc
sahf
xor
fnstenv
call
xchg
testl
mov
nop
jb
sbb
xchg
push
and
dec
cs
xlat
mov
dec
sti
push
xor
push
mov
lret
scas
add
addr16
push
pop
mov
xor
lret
inc
and
mov
jecxz
fisttps
push
cmp
int
and
enter
xchg
icebp
sbb
scas
dec
push
ja
mov
push
ficomps
fcoml
sbb
dec
or
lods
fwait
mov
push
jmp
dec
xchg
loop
outsb
mov
rcrb
loope
inc
gs
xor
arpl
mov
outsl
and
out
push
cmc
jmp
or
cmp
sbb
fnsave
or
mov
lods
ljmp
and
push
pop
scas
and
and
and
mov
pop
int
dec
sbb
pmuludq
fcoml
xchg
pop
std
push
pop
add
xlat
dec
xchg
or
add
xchg
push
scas
ffreep
push
jecxz
mov
push
dec
test
mov
pop
mov
pop
call
jecxz
dec
dec
mov
jnp
cmp
imul
pop
movsb
xor
cmp
push
std
mov
push
adc
shll
jbe
sub
sub
inc
popa
and
shr
popl
add
jb
cmp
mov
inc
dec
fwait
xor
cmp
mov
divl
add
inc
or
push
rcrb
cmp
popa
insb
imul
jne
nop
jg
scas
sqrtps
dec
mov
jns
jno
in
xchg
mov
push
sbb
mov
cmp
mov
pop
or
mov
fistps
sub
jns
pop
pushf
mov
sub
and
fsubrl
dec
pusha
out
cmpsl
cmp
leave
imul
xchg
push
pop
xchg
or
fsubrl
add
sbb
test
das
ret
sahf
rcrb
pop
push
adc
mov
cli
pop
in
mov
aam
jo
sbb
addb
pop
fidivl
dec
arpl
ret
xchg
adc
xchg
lock
cmp
pop
mov
lods
lods
int
sti
fisubs
xor
pop
outsl
mov
pop
loope
sbb
mov
das
adc
pop
nop
loopne
clc
mov
repz
pop
dec
repz
scas
pop
pop
xchg
nop
ret
cwtl
in
pusha
dec
pop
mov
xor
insl
fwait
mov
pop
inc
mov
mov
out
mov
dec
cwtl
bound
mov
xor
sbb
jne
add
in
repz
adc
mov
repz
fnstcw
adc
xchg
xor
sbb
push
xchg
scas
jmp
adc
jl
lret
mov
paddusw
cmp
rcll
ficomps
xchg
hlt
or
sbb
pop
aad
add
aaa
push
sbb
or
xor
dec
add
fwait
xchg
orb
movsb
cmp
jae
inc
mov
in
xchg
mov
ret
mov
lret
pop
mov
cmpl
shl
fcmovnbe
inc
cmp
xchg
jl
dec
xlat
xorb
aam
fwait
cld
lods
jns
sbb
pop
je
mov
add
xchg
and
pop
add
call
call
fwait
std
aas
mov
pop
ss
inc
mov
mov
sub
pusha
jle
ja
xor
mov
sub
xchg
mov
ja
jl
jne
fidivl
leave
xlat
addr16
or
xor
push
lock
bound
in
xor
test
popf
pop
int3
es
out
inc
add
hlt
push
sbb
xor
push
pop
enter
fdivrl
lds
jmp
pop
fs
out
ds
stc
pop
sub
add
aad
mov
jmp
add
jb
cmp
inc
dec
sti
inc
mov
xor
or
repz
mov
jno
pop
xor
sbb
loop
jmp
fmuls
mov
pusha
sahf
adc
xchg
cmc
repz
inc
repnz
lea
fisubl
lahf
fildll
and
pop
lcall
cmc
shll
mov
lea
dec
int3
dec
jp
test
mov
jbe
daa
fiaddl
je
jnp
imul
scas
insl
cwtl
cmp
add
add
ss
pop
mov
xchg
mov
push
loopne
inc
mov
loopne
shll
aas
divb
adc
pusha
mov
addr16
pop
cmp
pop
in
popf
xchg
xchg
icebp
mov
int3
loope
outsb
cs
and
mov
mov
stc
sbb
lock
cmp
sbb
icebp
jno
push
sub
dec
sbb
lahf
lock
fdivl
sub
inc
sub
fincstp
fadds
sub
repz
xchg
mov
dec
sti
and
push
xchg
sub
les
mov
xchg
movsl
movsb
repz
loope
sti
xor
clc
je
insl
jge
or
or
sub
and
inc
ljmp
popa
cmp
sub
mov
ret
lret
jns
orl
in
fistpll
hlt
ret
mov
fndisi(8087
mov
add
xor
sub
sbb
sahf
xchg
mov
push
mov
add
stos
out
jp
add
mov
test
cmp
scas
aam
sar
sub
out
icebp
test
cmp
or
int3
xor
xor
out
jo
mov
adc
pop
psrld
andl
add
inc
mov
sbb
repnz
in
pop
out
clc
insb
jo
pop
and
mov
iret
fdivl
xchg
rorl
das
mov
xchg
mov
xchg
iret
cs
sbbb
pop
sub
popf
je
dec
xchg
push
stos
pop
rcr
dec
cs
imul
sbb
pusha
clc
cmp
jo
and
fldl
nop
push
inc
or
xlat
and
jb
mov
gs
jae
push
in
dec
lods
or
push
or
cmpsb
adc
pop
shr
mov
dec
jo
mov
out
cmp
movsl
push
cltd
lds
cmp
adc
xor
int3
mov
out
jl,pn
ret
imul
xchg
test
cmp
mov
xor
arpl
push
push
out
bound
lret
cltd
stos
cli
mov
sbb
pop
cwtl
push
mov
adc
pop
add
add
push
test
mov
loopne
push
int3
aaa
adc
scas
test
sbb
dec
stc
dec
ljmp
lret
loop
daa
nop
jge
jle
lods
mov
dec
popa
cmp
xor
cld
xchg
arpl
inc
cmp
dec
repnz
dec
xchg
adcl
mov
sbb
scas
adc
and
or
fxch
adc
or
add
cmpb
inc
xor
cs
arpl
out
mov
fldenv
in
decl
scas
push
insl
ljmp
cmp
push
xchg
enter
cmpl
mov
test
scas
lret
xor
dec
fdivs
out
xchg
push
cwtl
popa
adc
int3
xchg
sub
mov
fwait
inc
mov
in
jl
sbb
fistl
dec
lock
jg
clc
es
cmp
mov
dec
das
and
ds
bound
cmc
sarl
jp
mov
jecxz
ss
or
jo
mov
jge
pusha
jb
out
jno
jge
hlt
mov
iret
es
int3
add
mov
push
sbb
ror
push
xor
sahf
push
adc
xchg
inc
hlt
lcall
outsb
xchg
fwait
ja
mov
and
xor
sub
or
lea
cltd
inc
hlt
inc
fldcw
stos
jb
xorl
lret
mov
and
imul
aam
int3
inc
xchg
jg
jns
cmovs
push
sub
add
lock
jecxz
fstl
jae
cmp
xchg
mov
scas
je
mov
jp
add
add
pop
ret
inc
test
adc
in
addr16
repnz
jbe
jno
lods
mov
in
idivl
fcompl
sbb
mov
clc
sahf
int3
fisttps
test
push
cmpsl
cltd
pop
cmc
jmp
dec
insl
or
xchg
sbb
int3
data16
add
cmp
stos
pop
inc
sbb
adc
jb
mov
add
xchg
in
adc
add
cmp
push
mov
pusha
xor
sbb
adcl
mov
add
lods
jae
push
ret
pop
andb
shrb
or
incl
fsts
mov
mov
jb
push
lds
mov
and
rclb
filds
fs
mov
inc
mov
xorb
stos
movsb
cld
fcoml
insl
gs
outsl
imul
lahf
dec
gs
xchg
cld
xor
stc
imul
data16
sbb
outsl
fwait
and
push
arpl
add
pand
fcmovnbe
jne
pop
pop
mov
ljmp
in
test
xchg
xor
insb
mov
lret
dec
int
out
mov
mov
xlat
sahf
mov
or
mov
fdivrp
dec
cmp
pop
add
fdivrl
clc
dec
jno
fildl
bound
mov
in
sbb
shrb
ds
cli
jmp
in
lock
xchg
ja
punpcklbw
push
or
push
lods
repnz
mov
out
mov
mov
cmpsl
enter
pop
rep
push
push
pusha
fsts
mov
ffree
cmpsl
sub
rorb
push
icebp
in
adc
jb
push
add
into
and
popf
pop
fxch
and
scas
fsubl
push
dec
jnp
cmp
add
mov
testb
pop
jns
cltd
jp
mov
std
loopne
jae
addr16
arpl
sbb
sbb
push
mov
push
ss
push
in
popa
mov
adc
jno
dec
cli
jg
aam
aas
inc
push
lds
or
aad
lcall
sub
xchg
insb
fbstp
jmp
mov
sub
mov
movsl
out
mov
je
in
stc
or
sbb
call
fcoml
xor
lods
shrl
jg
cltd
in
lea
subl
dec
push
jae
pop
jmp
mov
gs
lahf
les
rcrb
xchg
push
popf
into
out
sbb
shll
or
cmp
pop
fsubrl
cltd
das
outsb
sbb
insl
mull
pusha
ret
mov
mov
aam
lret
jp
mov
aas
pop
test
cmp
loope
jnp
jge
int3
dec
add
or
lods
ror
cmc
lahf
or
cli
mov
jp
pop
push
sbb
in
xchg
dec
test
pop
or
lea
test
pop
jae
jno
aad
and
mov
cmp
mov
testl
lret
or
mov
ret
imul
mov
pop
cld
or
xor
pminsw
aad
aaa
push
gs
jbe
loopne
cmp
xor
pop
sbb
mov
add
les
jb
test
dec
sub
pop
push
adc
xlat
fsub
loop
ret
add
inc
xor
dec
xchg
mov
jb
fcomip
jp
outsb
pushf
xchg
sub
stc
lahf
cltd
ljmp
test
ss
and
movsb
fdivl
add
sub
sbb
xchg
adc
dec
js
sbb
and
cmp
lea
xor
scas
insb
cltd
ficoms
shr
popa
sbb
pop
push
out
add
hlt
iret
leave
loopne
push
es
dec
lea
mov
sub
xor
and
xor
pop
adc
xor
lret
cmp
dec
paddusb
xchg
sbb
gs
loopne
mov
mov
lea
aaa
test
jle
add
sub
leave
jl
and
xor
adc
std
cmp
mov
lahf
mov
lods
jae
cltd
push
shrb
cmpsl
or
in
jno
test
ss
mov
sub
add
roll
in
into
jbe
adcl
in
cltd
mov
ljmp
fldcw
inc
push
lock
scas
das
shll
vrsqrtss
hlt
sbb
aad
xchg
mov
inc
and
insb
mov
mov
dec
sub
push
mov
les
int3
int
mov
mov
test
out
imul
push
mov
mov
daa
and
xchg
out
bound
mov
or
add
ljmp
add
stc
mov
sbb
lcall
sarb
gs
mov
dec
sub
or
mov
nop
xchg
pop
test
scas
mov
fisubrs
xchg
in
popa
repz
sub
inc
mov
push
in
fwait
arpl
pop
rclb
xorl
insb
insb
aam
cld
lods
pop
mov
xor
icebp
insl
flds
cmp
shlb
nop
xlat
fwait
xlat
pushf
xor
jo
cli
addr16
xor
hlt
out
js
pop
inc
pop
add
fmulp
loope
daa
mov
pop
mov
add
insb
call
jp
jns
out
ret
mov
daa
push
fildll
jnp
and
jge
sti
cmp
xlat
imul
loopne
pop
mov
or
sbb
in
dec
and
inc
or
lea
sti
sub
ljmp
pop
mov
daa
stos
int
aad
sub
xlat
outsb
es
mov
rcll
sbb
mov
int3
pushl
jae
lahf
fiaddl
pop
lods
dec
rclb
cmp
mov
mov
push
lods
push
sub
ret
and
jo
sub
jb
pop
push
addr16
std
push
std
xchg
adc
inc
push
fisttpl
mov
dec
mov
mov
push
mov
out
dec
and
or
cs
bound
test
and
inc
push
jl
xchg
xor
leave
cmp
stos
xchg
aad
and
pop
daa
jp
jb
jbe
cltd
sbb
push
daa
fs
lret
das
or
cmp
jns
push
in
repnz
push
data16
lods
mov
mov
aaa
jle
pop
data16
bound
test
loopne
clc
inc
xchg
add
or
jae
stos
sbb
arpl
popf
scas
mov
inc
inc
int3
jge
popa
adc
fiadds
cmp
dec
adc
aaa
push
pushl
sub
jae
mov
jns
xchg
inc
xchg
jae
mov
cmp
in
inc
push
sbb
jns
mov
xor
push
inc
or
sub
push
mov
test
mov
pop
adc
int
inc
sub
mov
in
mov
cmc
stc
mov
mov
or
stc
lret
scas
scas
xchg
lods
xchg
inc
shlb
push
fucom
or
pushl
js
pop
jne
lea
dec
loope
repz
incl
nop
add
adc
test
xadd
jne
shlb
push
mov
divb
pop
ja
out
out
adc
stos
pop
lcall
mov
cmp
or
insb
jp
lea
ret
push
dec
sub
sbb
pop
mov
sbb
inc
scas
and
xchg
idivl
pop
sahf
arpl
jae
xchg
test
aas
out
cmp
add
mov
stos
ret
push
aas
mov
in
push
clc
jmp
cmp
in
pop
test
nop
shrb
jbe
test
pop
cltd
inc
cmp
cmp
pusha
add
lock
insl
mov
sbb
int3
pop
pushl
inc
sbb
lods
mov
out
loopne
cltd
aad
sub
je
addr16
mov
add
lods
pop
mov
inc
mov
sbb
movb
cmp
sbb
lea
incl
inc
dec
loopne
into
out
pop
mov
fldl
mov
inc
int3
and
sub
das
movsb
adc
pop
dec
fwait
xchg
outsb
push
out
mov
hlt
inc
sbb
jl
lds
cli
lea
inc
lret
xor
lods
inc
enter
mov
pop
rorb
jo
jge
mov
adc
out
jmp
add
arpl
sub
stos
adc
jb
xor
or
rorl
and
dec
data16
testl
xchg
and
jg
jg
out
sub
iret
fidivrl
hlt
mov
cmpsb
or
stos
xchg
dec
bound
or
dec
pop
adc
pop
pop
lahf
fldl2t
jb
addr16
arpl
xor
shl
notb
fistl
mul
xlat
repnz
adc
popf
and
das
sbb
es
and
jne
lret
insl
lret
dec
add
lret
pop
push
cmp
addb
inc
in
sbb
lret
add
push
jmp
ss
stos
cli
inc
pusha
jae
jmp
negl
fstps
cwtl
jb
xor
pop
add
cld
nop
xor
nop
ds
pop
cli
addr16
fnstenv
cs
cmpsb
loopne
movsl
pop
mov
in
rcrb
imul
vunpcklps
jecxz
fnstenv
jl
xor
lea
les
mov
aas
lahf
pushf
pop
popa
or
cld
add
lods
inc
sbb
sub
subl
dec
lss
movsl
push
xchg
xor
imul
and
fisubs
loopne
pop
fsubs
out
out
push
jbe
adcl
sti
pop
fmuls
fldcw
mov
mov
inc
sbb
sbb
xchg
jmp
push
cs
bnd
mov
hlt
in
pop
cmpb
cmpsl
dec
ss
or
in
in
dec
stos
imul
mov
cmp
loopne
sub
mov
fcoms
adc
popf
xchg
bound
jp
dec
add
movsb
push
adc
in
sbb
push
scas
dec
xchg
aas
cli
fisubrl
outsl
out
mov
jbe
and
xor
divb
fstps
xchg
pop
push
aas
and
inc
fs
sbb
scas
dec
and
and
cmpsb
movsl
ss
mov
mov
jno
and
shrl
rcrl
mov
cmp
dec
lock
dec
adc
cmp
xchg
mov
cli
xchg
je
mov
jo
push
mov
stos
sub
sbb
or
xor
jecxz
pop
arpl
sahf
mov
push
lock
pop
jg
inc
ds
mov
xorb
cmp
push
stc
push
arpl
iret
mov
push
pop
imul
data16
mov
sbb
incl
mov
outsb
cmpsl
fsub
shl
enter
jge
jb
loop
sbb
jmp
adc
into
push
aad
mov
xchg
into
test
inc
mov
loope
mov
mov
rcll
daa
arpl
movsl
xchg
leave
jo
cmc
into
cmp
mov
lret
jge
movsb
mov
das
call
movsb
ljmp
jno
mov
int
pushf
or
dec
popf
icebp
pop
or
and
and
xor
inc
test
fcoml
dec
and
js
mov
push
push
out
pushf
test
outsb
rcrb
jle
mov
mov
xor
sub
dec
add
pop
cli
dec
or
dec
inc
and
pop
cmpsb
ja
in
lret
sbb
jge
in
lahf
divl
xlat
lods
jg
gs
push
cmp
push
les
jg
jle
sub
cld
popf
cmp
push
lcall
jmp
xchg
rorl
push
mov
outsb
xlat
jl
pop
hlt
fsub
pushf
dec
enter
dec
mov
jl
adc
inc
out
jns
mov
aam
pop
xchg
mov
bound
cmp
mov
jnp
lahf
xchg
pop
mov
jmp
jne
sbb
xchg
sbb
popa
ja
jle
test
cmpsb
dec
push
lahf
ds
sub
insb
xchg
jno
pop
mov
xchg
imulb
dec
mov
mov
sub
mov
cld
push
jle
daa
and
popa
ret
dec
xchg
int
data16
cmp
inc
cmpb
pop
bound
insl
lcall
push
cmp
scas
ret
cmpsl
scas
mov
mov
clc
xor
iret
je
cld
cmp
mov
fnstenv
mov
rorb
ss
pop
les
in
dec
or
in
movsb
mov
in
inc
in
fdivrs
dec
clc
scas
inc
mov
mov
rcl
test
test
jp
mov
push
push
fucomi
loop
xchg
cwtl
cmp
mov
or
adc
aam
or
pushf
hlt
popa
fcoml
int
outsl
mov
mov
adc
ja
add
push
adc
xor
mov
xchg
sub
and
cmp
xorb
loop
mov
mov
adc
jo
cmp
outsb
mov
inc
test
sbb
sub
mov
test
lea
fwait
out
sahf
adc
aad
out
pop
pushl
in
push
mov
loope
jno
add
es
and
adc
mov
inc
jle
js
add
or
movsb
xor
push
jg
and
andl
ret
add
inc
adc
scas
es
fimuls
ret
or
pop
jb
fs
mov
pop
das
dec
jecxz
jg
outsb
mov
lods
ss
in
mov
ss
jns
out
jecxz
fnstsw
lea
pushf
lret
jle
stos
add
mov
push
xlat
divl
mov
mov
int3
cmp
pop
hlt
filds
mov
cmpl
or
loop
popa
std
push
lret
les
rcll
jl
mov
mov
lahf
xchg
outsb
cmp
or
pushl
and
jge
inc
jns
mov
jb
cmp
add
xlat
scas
sbb
pop
dec
inc
sub
stos
lock
xchg
pop
push
sbb
sub
shll
shll
cmc
xchg
sub
mov
sub
push
loope
fnstsw
xor
ss
popa
icebp
lret
xchg
aad
xchg
jg
push
mov
jg
push
dec
cmp
icebp
push
sbb
xchg
jecxz
push
cs
loopne
fistl
popa
fs
mov
cwtl
fadds
mov
pop
push
xor
dec
push
inc
adc
fstl
scas
mov
out
mov
push
adc
fisttpl
mov
pop
out
pop
pop
in
iret
js
or
cltd
pop
mov
fld
jle
lds
fs
push
or
outsl
orb
cmp
mov
data16
add
mov
mov
adc
mov
stos
jle
inc
insl
xchg
insb
jae
notl
daa
pop
mov
shr
jecxz
or
dec
mov
int3
mov
pop
fnstenv
push
bound
inc
push
cmpsl
jge
leave
or
sub
lcall
xor
lahf
dec
or
aaa
sub
inc
mov
pop
loopne
call
clc
push
xor
pop
sbb
loope
xchg
push
orb
inc
lahf
enter
in
bound
push
cmp
mul
inc
pop
rcr
call
into
jg
loop
and
loopne
nop
mov
inc
inc
inc
js
cli
dec
add
out
mov
mov
arpl
mov
xlat
mov
inc
call
xchg
xor
test
in
lahf
mov
jmp
jmp
sti
or
int
mov
lds
or
jns
cmp
fwait
sbb
lock
adc
testl
fistpl
roll
sbbb
sti
mov
std
std
xchg
jnp
adc
xchg
aas
lock
mov
stos
jmp
adc
sub
xchg
lods
xlat
sbb
arpl
and
sub
sub
add
test
icebp
mov
popf
test
iret
xor
add
push
insb
xchg
mov
ret
dec
idiv
cld
jnp
mov
pop
cli
js
sarb
ja
mov
inc
ret
add
jp
andl
jg
add
movsb
inc
add
sbb
ljmp
sbbl
xchg
xchg
mov
adc
pop
jae
pop
daa
fldl
adc
sub
sub
das
leave
pop
sbb
jbe
inc
jns
push
ret
loopne
add
or
pop
into
dec
stos
and
fisubrs
inc
xor
aad
xchg
cli
pop
dec
int
hlt
fmuls
int3
sub
cmp
inc
push
out
lret
xchg
xor
xor
and
and
aam
test
mov
pop
aas
jae
imul
fwait
enter
adc
lea
jle
ss
out
dec
mov
iret
inc
pop
inc
popf
push
ja
or
inc
repz
push
dec
adc
fiaddl
xor
jmp
lds
mov
adc
inc
push
adc
mov
inc
les
xchg
stc
add
cmpsl
mov
lds
or
push
mov
rorb
mov
sbb
loop
sbb
je
js
out
aaa
lret
inc
adc
out
push
add
pop
inc
jns
cwtl
jmp
les
mov
mov
pop
sti
and
jne
cmp
sbb
push
adc
xor
rcrb
cmpsl
adc
sbb
and
cmp
addr16
int3
jmp
std
jbe
mov
lret
xchg
scas
stos
in
or
pcmpeqb
fdivl
cmp
push
ja
dec
hlt
xchg
and
pop
negb
lahf
xor
or
loop
dec
mov
mov
push
int
rolb
add
jecxz
shll
out
pop
xorb
fwait
mov
push
test
xchg
sbb
sbb
and
cmpsl
fstpt
insb
popa
mov
lahf
push
fwait
adc
inc
inc
out
xchg
hlt
mov
divb
mov
pop
outsb
sub
insl
or
pop
das
xor
ret
mov
shrb
stos
shlb
pop
test
sbb
inc
dec
add
gs
push
cs
addb
lahf
jl
mov
out
push
scas
or
lea
gs
outsb
ss
pop
inc
das
jb
add
pop
call
fwait
int
or
inc
icebp
mov
dec
or
fisttpll
xor
pop
mov
ds
das
and
subl
mov
data16
pusha
jno
mov
inc
mov
cwtl
mov
lret
iret
test
dec
pop
jg
add
hlt
jns
into
pop
fildl
in
adc
add
pop
pop
sub
idivb
int
imul
arpl
mov
pusha
imul
mov
lahf
cmp
cmp
daa
int3
cmpsl
adc
addr16
adc
xchg
xchg
jmp
loop
stos
mov
flds
sbb
inc
mov
daa
loop
adc
jmp
mov
imul
jl
dec
xor
iret
dec
ret
push
mov
dec
add
jge
or
jmp
push
xor
decb
loope
inc
jb,pt
mov
mov
aaa
xchg
mov
nop
testl
dec
popa
movsl
and
shll
mov
into
mov
insl
outsl
mov
and
push
mov
ret
mov
out
push
aaa
sbb
loopne
aaa
mov
mov
sub
mov
pop
je
nop
loope
xor
shlb
pop
lock
add
ret
cmp
and
insl
pop
fdivrs
push
mov
xchg
push
xor
mov
add
xor
cmp
subb
ret
and
or
jg
decl
movsb
movsl
add
xchg
cmp
cmp
repnz
pop
adc
lock
call
or
sbb
add
cwtl
aaa
repz
cmp
shrb
sbb
and
xor
dec
das
dec
ss
ja
inc
cltd
aas
mov
xor
loopne
mov
inc
xchg
mov
cmp
add
out
mov
clc
lahf
sbb
mov
and
cltd
dec
jle
inc
mov
scas
or
adc
aaa
mov
testb
sti
loop
xor
clc
mov
lahf
dec
pop
sahf
ss
loopne
ret
push
pop
cmpsl
cmpsl
or
jne,pn
out
fdivrl
popf
push
dec
sub
fcomps
sbb
imul
add
loope
add
and
lock
shlb
xchg
push
mov
mov
insb
xor
jp
insl
fwait
gs
mov
mov
and
pop
ljmp
add
gs
or
mov
and
push
iret
inc
stc
mov
insl
mov
outsl
sbb
mov
push
and
push
mov
mov
fisttps
push
addr16
push
mov
dec
xchg
adc
mov
loop
insl
or
xchg
dec
hlt
xchg
ret
into
inc
xchg
rcl
icebp
div
mov
and
inc
adc
push
add
or
fbstp
xor
mov
popf
pop
leave
test
or
or
lahf
cmp
jns
out
aaa
xchg
cmc
out
test
or
mov
push
imul
push
pop
jno
aaa
outsb
inc
or
enter
xor
fwait
cmp
test
xchg
aaa
out
pop
stos
ja
mov
adc
cmp
pushl
movsb
and
mov
out
pop
xor
push
dec
rcrl
pushf
pop
sub
jno
inc
and
lret
mov
push
push
mov
mov
fdivs
cmp
sbb
mov
push
out
xchg
imul
jns
pop
mov
and
fistl
mov
cld
fisubrl
mov
mov
mov
mov
or
roll
cmc
mov
mov
setl
inc
repnz
mov
cmp
int
out
das
pop
outsb
arpl
add
stc
dec
jne
mov
inc
push
sub
iret
mov
mov
inc
int3
push
lahf
mov
push
fiaddl
dec
sub
pop
sbb
in
xor
push
loopne
mov
mov
lahf
jge
jle
push
pop
outsb
sbb
jle
popf
push
out
out
jecxz
pusha
add
jbe
add
jp
pop
data16
mov
shll
enter
inc
js
mov
cmc
jnp
fadd
mov
mov
inc
pushf
je
push
cmp
outsl
inc
inc
sub
adc
rorl
cmp
sub
and
or
clc
cmp
jl
and
sar
inc
loope,pt
mov
fimull
lock
nop
xor
mov
clc
out
fnsave
add
cli
inc
pushf
les
push
aaa
lcall
xchg
out
cmp
or
inc
aad
pushf
and
add
leave
mov
icebp
jb
pop
xchg
mov
mov
jecxz
mov
decw
loope
push
inc
jg
mov
lret
inc
mov
sub
insl
xor
in
ror
sub
jl
sahf
lods
aam
dec
sahf
scas
pop
cmc
pop
cmp
js
lods
and
sub
cmp
ja
push
jnp
push
aaa
enter
jbe
movsl
std
shlb
js
xchg
scas
pop
in
jge
popf
aad
fildl
xchg
sahf
sub
pop
pop
mov
lahf
rolb
outsb
or
dec
jmp
leave
mov
dec
jae
inc
or
scas
fidivrs
mov
pop
pop
or
int3
sbb
xor
ret
push
xchg
mov
loop
lods
adc
mov
xchg
in
jae
push
push
fistpl
daa
push
repnz
stos
cld
push
ret
dec
push
cmp
fsubrs
adc
dec
mov
xorl
mov
and
mov
cmp
or
aad
shll
xor
std
pmuludq
mov
cltd
imul
sbb
test
adcb
fldl2t
jns
int3
xor
repnz
cld
andb
scas
faddp
addr16
jge
add
movsl
add
pop
into
cmp
inc
inc
std
xchg
clc
iret
or
xor
inc
sti
or
sbb
popf
hlt
xchg
or
push
fimull
outsl
movsb
push
fs
adc
es
pop
movsl
outsb
loope
xor
mov
jne
xlat
daa
push
mov
inc
add
shrb
shr
cmp
or
testl
inc
adc
icebp
inc
or
pushf
push
dec
add
mov
lahf
popa
dec
xchg
fninit
pop
sub
cmp
popf
scas
push
push
aad
mov
add
and
adc
mov
cmp
jnp
int
pop
jge
ret
mov
inc
jno
xor
jae
out
inc
fidivrs
aaa
aam
imul
push
and
push
mov
sub
dec
js
aam
mov
icebp
stos
insl
mov
xor
push
dec
ds
inc
fs
adcl
mov
dec
adc
iret
xchg
cwtl
and
add
add
aas
ds
sub
pop
push
lcall
cmp
push
push
jmp
mov
into
pop
sub
adc
mov
add
pop
inc
dec
aad
dec
shll
pop
dec
push
test
jnp
xor
in
xchg
jmp
jns
out
lods
mov
or
movsl
push
mov
gs
xor
je
inc
outsl
xchg
mov
cmp
mov
aam
sub
dec
outsl
fdivrl
mov
dec
push
and
xor
js
push
out
leave
mov
sbb
jb
mov
leave
rcrl
inc
les
mov
xchg
addr16
push
inc
xchg
rcrl
dec
push
push
jle
ret
add
pop
add
fs
and
mov
ret
cmp
insb
imul
lret
xchg
mov
mov
out
and
lock
test
pop
loop
imul
out
add
es
and
loop
loop
je
inc
movsb
fmull
stos
push
or
jmp
and
vmread
orb
jmp
pop
adc
jbe
rclb
int3
int3
aas
push
mov
shlb
inc
sbb
ret
dec
xor
xchg
lret
daa
cli
sahf
and
cmp
mov
push
add
sbb
cmpsb
iret
xchg
xor
jae
xchg
in
mov
push
fcmovnu
dec
scas
jno
scas
sbb
xchg
aaa
xchg
and
jle
sub
stos
sbb
int
test
dec
sub
mov
mov
aad
hlt
pushf
addr16
push
jp
mov
call
add
stc
jp
sbb
je
test
les
inc
jg
imul
adc
lock
dec
dec
cltd
ljmp
jmp
xor
jbe
ss
inc
cs
pop
add
inc
lret
aas
dec
cmpsl
movsl
add
arpl
add
jo
cmpb
repnz
aam
cli
addr16
adc
mov
push
mov
fildll
lret
dec
jbe
ds
xchg
into
dec
rcr
mov
dec
and
inc
push
fmull
aad
rcrb
mov
rorb
xor
adc
lahf
and
and
inc
jp
pop
aaa
cmpsb
std
cmpsl
jg
aad
adc
sbbb
push
mov
adc
out
push
mov
jle
sub
jo
call
pop
movsl
lods
xchg
stc
xchg
dec
dec
push
mov
and
dec
push
xor
dec
repz
lds
lea
mov
es
int3
das
mov
adc
icebp
add
sub
xor
inc
jbe
cmp
in
xor
nop
sbb
xor
pop
clc
mov
lock
jae
pop
mov
push
scas
leave
mov
call
mov
mov
push
mov
and
jg
push
les
repz
frstor
pop
adc
cmpsb
pop
movsb
lcall
xchg
in
xor
sbb
sahf
inc
sbb
dec
or
lock
jnp
in
int3
ja
icebp
aas
pop
push
adc
scas
fxch
sub
mov
mov
mov
mov
fcmovnu
idiv
test
or
shrl
and
inc
sub
sub
hlt
xor
or
mov
jecxz
inc
lds
int3
xor
push
hlt
pop
mov
or
adc
xlat
cli
rorb
push
adc
mov
or
sbb
fidivrs
shrl
sbb
loopne
push
sbb
or
jl
xor
jg
ljmp
cmp
xlat
leave
jno
fcmovb
scas
jge
mov
pop
dec
add
shll
rorl
jne
repz
outsl
add
sbb
rcll
xor
pop
leave
std
sub
out
stc
cltd
into
scas
cmp
sub
ret
adc
jbe
fcompl
jge
dec
cwtl
lods
in
push
fld1
pop
arpl
sub
incb
cmpsl
push
mov
cwtl
jb
std
scas
cmp
add
inc
mov
xor
adc
cmp
loopne
sbb
js
jmp
insl
pop
mov
sub
cltd
add
into
es
jno
pop
sbb
int3
mov
cmp
adc
shlb
mov
jne
pop
stos
fxch
xchg
cmp
dec
sub
pusha
js
jno
mov
and
imul
aaa
mov
dec
loopne
sub
ret
pop
pop
cmp
push
push
fs
dec
out
lock
imul
adc
test
jle
in
or
dec
es
lea
fcoms
les
addl
jne
inc
aad
xor
ret
cmp
mov
jg
jb
inc
push
scas
js
add
or
jle
repnz
in
mov
fidivrl
stc
out
mov
mov
inc
icebp
aam
pop
jo
dec
aaa
test
into
pop
cltd
sbb
jmp
mov
rcr
push
test
int3
xor
pop
cmpsl
hlt
repz
stos
dec
jnp
fcoms
popa
adc
add
jo
fmull
sti
std
iret
lret
push
pop
xor
test
vmovshdup
inc
ja
mov
cs
xor
jg
xlat
test
xchg
jne
inc
adc
movsl
mov
rorl
rcpps
xor
pop
sub
cmp
xchg
xor
add
mov
cmp
test
cmc
xchg
test
loop
cmp
push
xchg
int3
adc
repz
loop
cmp
sbb
and
insl
stos
adc
adc
xor
and
setbe
xor
mov
call
mov
cli
addr16
push
jnp
xchg
cli
or
xlat
and
in
or
mov
inc
add
mov
arpl
loope
lea
movsb
sbb
icebp
fwait
jle
sti
or
ret
mov
cmc
adc
mov
pop
pop
nop
data16
cmc
sub
mov
fcoms
xor
sti
cmp
mov
adc
cli
imul
push
jle
mov
sub
xor
neg
subl
orl
inc
and
lret
jp
inc
or
mov
das
mov
mov
pushf
xchg
mov
mov
mov
int3
int3
popf
pop
jne
notl
popa
push
jmpw
adc
lahf
cmp
jbe
lods
add
or
in
pushf
xor
lret
add
rcrl
outsb
mov
and
mov
mov
fs
mov
repz
shrl
lahf
lock
dec
nop
adc
sbb
loopne
cmp
mov
decb
pop
das
lret
xchg
out
orb
call
cmpsb
adc
cmp
lods
jmp
hlt
rorl
pop
adc
stos
xchg
mov
jg
or
mov
push
cmpl
lea
or
fsts
push
xor
lods
push
cmp
cmp
jecxz
mov
lret
aam
push
loopne
stc
and
andb
push
es
jns
add
dec
lods
sbb
push
pop
addr16
sbb
push
sti
fwait
sbb
or
movsb
jg
cmp
push
ljmp
mov
sahf
push
cmp
sub
mov
and
incb
dec
and
popa
inc
sbb
adc
dec
popa
adc
popa
jne
mov
outsb
or
ss
data16
movb
dec
mov
ret
into
mov
xchg
adc
sbb
push
and
mov
pop
fcmovnbe
lods
adc
fcompl
fcmove
mov
cmc
sub
cmp
push
into
incb
pushf
imul
pushf
leave
adc
movsb
mov
stos
dec
lcall
add
out
and
out
rorl
or
outsb
stos
sub
mov
xor
pop
mov
inc
call
aaa
and
cmp
rolb
lds
add
inc
lds
mov
cli
jno
lcall
out
stos
mov
pop
push
xor
int3
movsl
js
sahf
aad
ljmp
mov
iret
xor
dec
push
lods
or
or
jmp
fwait
push
xchg
and
mov
mov
pop
lds
jne
adc
push
test
push
pop
ja
testl
fwait
pusha
fmuls
push
push
enter
cmpsl
mov
loopne
adc
sub
arpl
cmp
and
mov
push
mov
add
xchg
or
adc
pop
hlt
jne
mov
sbb
lods
outsb
cld
int
ret
lret
sti
clc
cld
sahf
inc
xchg
and
and
push
mov
repnz
xchg
aas
xor
pop
push
mov
stos
mov
repnz
pushf
pop
leave
bound
cmpsl
frndint
inc
mov
mov
sub
push
inc
in
mov
ficompl
ja
pop
ds
imul
jl
push
sahf
xchg
pop
divl
fwait
pop
jae
int
fistpll
mov
aad
sbb
inc
adc
imul
insb
jo
test
sbb
dec
dec
adc
xchg
add
icebp
faddp
loopne
shrl
adc
pop
mov
xchg
addr16
cmp
push
or
push
int3
fstl
test
mov
jb
lods
or
and
movsl
pop
push
mov
jo
cmp
inc
sub
shlb
clc
std
cltd
call
mov
adc
repz
repnz
jge
pop
andl
js
mov
das
fsubl
mov
dec
in
push
es
int
xchg
scas
cmpb
xchg
or
fld
mov
sbb
add
call
andl
adc
pop
jmp
int
push
popa
add
mov
cmp
in
mov
jmp
adc
iret
ret
inc
inc
movsb
xor
dec
mov
filds
imul
and
mov
sbb
daa
rcll
aas
dec
pop
inc
xor
cmp
sbb
or
jmp
outsl
imul
mov
dec
jge
sahf
mov
outsb
cmpsb
and
cmpsb
pop
lock
data16
iret
sbb
xchg
and
push
push
fisubs
aas
fcoml
in
add
jle
cmpsl
mov
popa
cmpb
ljmp
push
add
bound
mov
xor
sub
cltd
testb
jecxz
nop
orb
js
xorl
and
cmpsb
enter
imul
lret
out
lcall
sub
dec
pop
into
icebp
scas
or
mov
repnz
cmpb
scas
push
stos
clc
mov
ret
cld
mov
idivl
dec
scas
jo
adc
out
xor
push
mov
cmpsb
or
sub
sbb
testb
gs
jo
mov
add
insl
rclb
mov
push
arpl
cmc
cmp
adc
data16
inc
sarl
rcl
enter
and
adc
dec
and
sarl
repz
mov
mov
outsl
in
pop
std
pop
xchg
dec
push
fbld
push
addr16
int3
push
cmp
mov
in
enter
shrl
mull
add
fcompl
iret
orb
add
loop
fs
inc
cmp
mov
jae
ret
ds
aam
pop
fisubrs
arpl
ja
inc
xchg
out
out
ret
mov
xorl
mov
xor
and
xchg
jnp
mov
aad
jge
or
jl
add
mov
dec
orl
mov
mov
mov
xchg
lods
jmp
sub
stc
sbb
lcall
mov
mov
ret
pop
mov
int3
cmpsl
xchg
outsl
adc
jge
in
add
stc
ja
mov
or
fmulp
add
lahf
repnz
shlb
jno
das
mul
jb
cltd
inc
outsb
in
xor
cmp
cwtl
dec
and
fimuls
sub
lds
mov
icebp
mov
fdivrl
adc
push
cmpsb
outsb
shrb
mov
adc
xchg
out
and
inc
jp
mov
call
add
fsubs
int3
pop
popa
inc
jae
mov
pop
cmpsb
jae
push
lcall
sahf
test
imul
inc
leave
cwtl
adc
or
out
mov
fmul
cmp
shll
test
mov
sti
sbb
fldt
shll
lods
shlb
adc
sub
sub
dec
cmpsl
adc
jnp
lock
pop
sub
sbb
pop
insl
adc
pop
es
pop
nop
and
jae
addr16
fbld
imul
sarl
inc
mov
cmp
xor
push
push
and
xchg
out
repz
loope
addl
ret
fsub
jno
ret
sbb
in
jmp
mov
dec
imul
cltd
xor
lods
push
jecxz
dec
ret
pop
les
mov
xchg
sbb
inc
pop
and
cs
cmp
cwtl
xor
stos
sub
mov
bound
mov
xor
pusha
leave
test
mov
and
jae
dec
sbb
je
shrl
sahf
stos
out
lea
lahf
dec
imul
pop
lret
mov
je
inc
sbb
insb
xchg
jo
imul
inc
inc
jl
and
outsl
pop
xchg
and
mov
jo
pop
or
lcall
ss
push
mov
or
roll
sbb
mov
js
sbbb
mov
or
cwtl
jl
mov
add
insl
std
jno
xor
cwtl
cli
or
cld
mov
js
dec
mov
xchg
xchg
mov
in
cmp
adcl
in
dec
dec
sbbl
test
mov
stos
mov
in
popf
mov
cld
insl
dec
ds
xchg
icebp
xor
popa
pusha
adc
sub
clc
mov
scas
push
shlb
es
sub
push
xlat
add
pop
movsb
jnp
lds
scas
and
inc
lret
jbe
sarl
inc
mov
aam
rclb
lds
xchg
in
das
xchg
out
insl
subl
mov
je
imul
out
cmp
jg
les
loop
cmp
add
adc
loope
sub
jle
mov
cli
push
icebp
jmp
lods
sbb
xchg
xor
or
js
lret
mov
mov
xor
ss
pop
dec
mov
and
out
sahf
mov
adc
es
testb
je
cmp
sti
pop
int
stc
out
test
mov
or
inc
jae
cs
dec
jo
cwtl
pop
mov
jl
jp
leave
imul
or
sbbb
add
movsb
in
mov
arpl
mov
pop
mov
mov
clc
adc
xchg
cmpsb
cmpsb
push
sub
std
push
inc
or
mov
out
lea
lret
lret
es
xchg
sbb
outsb
push
scas
mov
push
out
clc
repz
outsb
mov
cmp
inc
dec
sub
scas
sahf
fcmovbe
xlat
lret
in
sub
xchg
ficompl
daa
std
mov
fldcw
or
jns
mov
dec
cmp
repz
mov
mov
push
in
shlb
outsl
dec
shrb
lret
xchg
ss
andb
add
arpl
orl
sbbb
mov
cld
dec
adc
and
cmp
push
rcrl
into
fidivl
cld
push
mov
mov
mov
fisttpl
call
mov
and
adc
xchg
add
push
adc
inc
inc
dec
je
das
cmc
pop
leave
inc
cmp
popf
inc
pusha
shr
jo
sbb
mov
add
sbb
mov
and
cmc
loopne
xchg
sub
and
inc
nop
std
cld
dec
cmpsl
ret
fldenv
or
fdivs
loop
outsl
dec
xchg
dec
enter
fadd
in
add
cmp
jne
jl
mov
cmp
xchg
cmp
int
in
mov
sub
mov
call
sub
lret
jge
jnp
mov
insb
mov
sar
das
aas
add
lea
ljmp
pop
and
insb
and
and
pop
adc
xchg
push
xchg
cmp
push
cmp
je
xchg
mov
flds
jbe
out
push
aaa
add
and
adc
jle
push
or
sarl
jnp
pop
fistl
cmpsb
mov
push
hlt
mov
cmp
lea
cli
lcall
stc
jbe
aad
lcall
xchg
packuswb
stc
dec
sarl
inc
test
add
fadds
mov
loopne
sbb
mov
or
sbb
or
je
popa
mov
push
pop
stc
aaa
jle
dec
sbb
js
cmp
stos
outsl
rclb
mov
fnsave
cld
xor
inc
add
hlt
out
enter
les
sahf
fsubs
sub
sbbb
xchg
or
gs
arpl
add
mov
push
dec
jo
jecxz
inc
rolb
pop
and
mov
pop
repz
stos
sbb
rclb
cmp
mov
pusha
fwait
jp
fmul
loope
sbb
xchg
fisttps
in
mov
and
and
fs
inc
divl
inc
shlb
int3
insb
dec
bound
ljmp
lods
mov
push
fwait
lcall
sarb
or
jns
xchg
arpl
or
pop
outsl
loope
cs
cwtl
sub
cmp
call
js
sbb
or
cmc
inc
loope
popa
sbb
inc
pop
xchg
mov
pushf
test
jo
dec
push
adc
pop
lock
sbb
leave
add
mov
jns
in
jp
mov
xchg
pushf
iret
pusha
add
sbb
icebp
jmp
push
xchg
aas
jecxz
cmp
xlat
push
loop
push
nop
push
xchg
push
mov
faddl
or
mov
mov
in
adc
and
popf
xor
xchg
sbb
dec
adc
mov
out
pop
cmp
or
mov
inc
mov
push
pushf
scas
jnp
push
cmp
fstpl
adc
rclb
push
rorl
test
jns
hlt
mov
movsl
repnz
dec
jb
cmp
inc
and
sub
jge
pop
pop
test
cltd
lahf
pop
into
cmp
or
pusha
xor
pop
test
rcrl
jae
and
add
icebp
jecxz
cmp
in
jne
sbb
xchg
fsubrl
movsb
push
jge
test
imul
mov
add
mov
lock
mov
inc
xlat
mov
lret
dec
and
cmpsl
pop
xor
jp
jns
fstps
out
clc
inc
mov
cmp
pop
test
out
inc
frstor
fsubr
scas
icebp
repnz
scas
jmp
aad
cmp
subb
jno
repz
or
mov
out
inc
mov
cmp
push
cmp
dec
and
loope
add
inc
sub
and
add
ljmp
and
sub
inc
xor
push
push
lock
lods
push
jp
push
pop
sub
sub
sub
lods
mov
xchg
jmp
pop
xchg
or
in
enter
clc
sub
xor
fstpt
repz
dec
imul
in
pop
insl
aam
sub
or
test
dec
popf
sub
lods
test
mov
scas
es
xor
xchg
fcomp
shll
dec
adc
add
mov
xchg
push
xchg
xor
xchg
mov
and
and
dec
out
xor
mov
test
mov
test
iret
push
push
xchg
add
adc
sub
ret
dec
push
test
or
pop
and
jge
xor
sub
clc
xor
and
dec
mov
into
cs
cmpsl
out
xchg
movl
add
enter
mov
mov
push
push
popf
mov
mov
repz
or
stos
in
push
mov
mov
pop
ja
subb
xor
xchg
into
lcall
and
mov
jns
sbb
add
out
ret
xchg
jns
je
inc
int
dec
shlb
push
data16
push
add
xchg
or
loop
jp
fcomi
mov
bound
js
lods
adc
fnstsw
push
cmp
or
jns
push
fisubrl
cmp
mov
xor
and
cwtl
mov
cmp
cld
cli
or
add
and
xchg
sar
push
dec
and
in
or
dec
es
push
sbb
add
xor
insl
ja
push
push
pop
insl
stos
mov
test
frstor
divb
out
loop
bound
pusha
dec
add
outsl
and
and
sub
xor
je
mov
mov
fwait
sbb
push
sbb
cld
aam
jg
gs
mov
std
jns
pop
cmp
mov
xchg
push
sub
mov
scas
mov
fs
mov
fbld
jnp
cmp
add
aam
int3
lock
jecxz
inc
stos
cmp
pop
test
or
xchg
adc
bound
xchg
and
jl
mov
jo
push
arpl
enter
and
sarl
stc
pop
in
and
cltd
or
fildl
xor
fwait
push
pop
jo
rcrb
xchg
aaa
pusha
in
gs
push
les
fstl
inc
mov
scas
cmp
mov
ljmp
cmpsb
insl
ja
adc
jno
fnsave
dec
jecxz
jbe
mov
inc
or
lea
pop
lret
mov
in
gs
and
ss
and
loopne
xor
cmp
adc
mov
imul
mov
and
sub
dec
jo
xor
data16
inc
fidivl
into
pop
mov
and
or
notl
lea
arpl
xor
cmp
pusha
stos
ret
mov
and
cmp
mov
sahf
jno
cmpsb
insl
adc
insl
mov
fisubl
sbb
es
in
test
adc
dec
add
lret
add
adc
push
sbb
pop
jne
push
aas
jle
out
gs
xor
mov
shlb
dec
movsb
pushf
pop
jo
shll
mov
test
mov
scas
faddl
xchg
xor
xorl
cli
jg
loop
inc
popa
inc
loopne
cmp
xor
sbb
lcall
daa
mov
fcompl
das
push
dec
movb
adc
xchg
or
lret
xchg
lock
pushf
outsb
cmpsb
mov
mov
out
jns
xchg
push
hlt
lcall
pop
mov
pop
cltd
mov
jmp
and
popa
es
inc
mov
dec
inc
push
pop
mov
mov
sub
add
xor
into
ret
fstpl
push
cld
pmaxsw
add
mov
sbb
sbb
mov
xorl
cmc
sbb
sub
ljmp
push
push
dec
inc
adc
iret
es
shrl
leave
or
aam
cltd
cs
sbb
pop
dec
cmpl
notb
xchg
pop
adc
dec
cmp
adc
into
sahf
repz
mov
roll
xchg
out
pop
jne
jp
cmp
outsb
pop
aam
pusha
push
pop
ret
pop
pop
pop
jmp
mov
mov
pop
mov
xor
or
adc
add
int
mov
and
pop
mov
adc
push
pop
jno
pop
lods
loopne
sbb
fdivr
pop
xchg
and
mov
mov
mov
ret
mov
icebp
pop
int
arpl
mov
mov
ds
outsl
sti
imul
in
xor
lock
xchg
imul
mov
lret
imul
test
imul
xchg
jle
lods
insb
inc
fdivl
daa
xlat
xor
add
sbb
ret
stos
push
popa
and
push
enter
push
cmp
and
push
and
outsl
xchg
inc
adc
push
sbb
cmpl
or
inc
xor
cmpsb
dec
imul
mov
insl
add
and
mov
mov
xchg
pop
xchg
mov
xor
mov
enter
cli
mov
arpl
mov
movsb
mov
dec
mov
iret
push
mov
jne
push
push
inc
loopne
flds
pop
jno
pop
insl
popl
repnz
dec
mov
jmp
mov
jmp
pop
aad
scas
icebp
adcb
addr16
pop
pop
mov
push
mov
sub
rcrl
shrl
fcmovb
iret
sbb
sbb
test
jb
movsl
pop
fisttpl
clc
sub
add
add
pop
ss
xor
notl
add
test
add
icebp
bound
sbb
test
xlat
inc
dec
test
stos
inc
aas
pop
inc
inc
xchg
stos
outsl
pop
lods
cmp
pop
xchg
cmp
mov
movsb
aam
lahf
enter
or
icebp
dec
inc
jle
push
fwait
jle
das
or
xor
fwait
mov
push
fwait
es
mov
xor
and
mov
push
lahf
add
push
inc
test
test
test
test
sbbb
shlb
js
aaa
les
push
push
dec
jb
lods
xor
push
inc
mov
jp
inc
push
cmc
imul
mov
ds
jmp
dec
xchg
js
dec
sbb
int3
es
sbb
mov
psllw
stc
cld
dec
std
in
fidivs
dec
cmc
test
pop
or
or
pop
fiadds
inc
inc
mov
ret
jp
ss
push
imul
adc
lret
jnp
cmp
jle
into
js
movsl
fs
pop
es
pushf
popa
call
xlat
inc
dec
inc
jg
shrl
push
rcl
test
jo
or
rorb
outsl
push
add
sub
xchg
cmp
jae
jge
inc
movb
outsl
jle
insb
scas
pop
das
xchg
scas
sbb
out
mov
inc
rorl
adc
xor
adc
push
aaa
jo
movsl
nop
icebp
pop
movsl
inc
rcrb
andl
cmp
jae
jp
mov
inc
jecxz
out
daa
pop
pusha
cld
push
jne
dec
sahf
sbb
push
xor
les
mov
in
adc
lods
sub
js
dec
jb
inc
pop
mov
mov
data16
sbb
mov
xchg
mov
stos
mov
sar
dec
and
add
inc
ret
into
xchg
imul
jge
ret
xchg
and
xchg
jnp
inc
js
in
push
jbe
negl
push
pop
mov
sub
mov
dec
mov
pushf
mov
sbb
cmpsb
decb
mov
or
lds
add
cli
popf
mov
sar
popf
and
jnp
pop
fsub
movsb
xchg
mov
fmull
fidivrl
test
xchg
cld
outsb
pushf
push
jbe
fdivrl
add
mov
push
cs
xchg
sub
mov
pusha
sub
std
lea
sahf
test
jbe
sub
push
dec
and
lea
sub
and
push
fidivrl
cmp
scas
add
fisubs
jo
outsb
cmp
into
and
lret
imul
mov
lea
or
int3
inc
jecxz
loopne
lods
pop
insl
mov
push
ret
out
neg
or
in
xor
push
jp
sub
out
pop
sub
dec
jl
jl
push
sub
xchg
xchg
xchg
sub
cld
jo
adc
aaa
dec
push
push
test
in
xchg
mov
imul
ror
push
ret
jecxz
sub
adc
dec
jg
pextrw
mov
xor
rclb
and
lahf
daa
sbb
jbe
imul
xchg
arpl
shlb
xor
mov
sbb
inc
out
stos
setbe
shrb
fbld
dec
mov
xchg
je
push
xchg
push
sbb
and
icebp
jmp
insb
jmp
add
push
sbb
xchg
daa
add
xor
xor
mov
out
mov
lock
jmp
or
cmovb
test
outsl
dec
popf
adc
xchg
mov
mov
add
in
adc
xchg
aaa
lcall
cmpsl
xchg
scas
push
xchg
add
push
insb
adc
cmp
or
dec
or
mov
jnp
aad
mov
call
sub
cltd
adc
and
push
test
sub
push
nop
in
xor
pop
pop
cmpl
addr16
pop
cmp
jns
in
xchg
dec
inc
adc
xor
cltd
ljmp
sub
push
mov
or
sub
dec
out
adc
xor
aad
and
mov
jmp
cli
sub
jnp
mull
daa
push
dec
mov
popf
xlat
insl
iret
pop
inc
mov
cmp
je
mov
dec
adc
mov
jge
pop
popa
add
mov
rcr
scas
aam
insl
xchg
lahf
lods
scas
xchg
enter
shll
adc
inc
loope
or
stc
pop
clc
lret
jp
dec
sbb
push
mov
ret
repz
popf
int3
mov
dec
stos
cmp
sub
sti
adc
sub
data16
stos
sti
hlt
xor
out
dec
cmpsl
outsl
repnz
outsl
negb
and
pop
je
sbb
int3
lcall
jcxz
dec
jmp
fwait
pop
add
sub
loope
mov
popa
hlt
adc
push
cmp
add
xchg
cltd
incl
and
mov
leave
pop
cmc
pusha
sbb
fsubrp
sub
dec
aam
mov
cwtl
repz
mov
push
jne
lods
das
outsb
mov
xchg
xchg
sub
stc
fnsave
pop
movsb
xchg
inc
pop
out
sub
aad
mov
pusha
jae
inc
sahf
fistl
or
clc
push
pop
jle
jno
xchg
mov
and
arpl
xor
dec
pop
fisttps
sti
repz
test
mov
sahf
mov
add
inc
test
fadd
or
mov
xor
jge
ljmp
cmc
inc
bound
subl
and
push
test
notb
enter
imul
dec
pop
sbb
mov
adc
push
pop
adc
cld
lret
xor
arpl
out
fdivl
ss
dec
pop
mov
ret
out
pop
add
jb
mov
mov
lret
dec
push
ss
pop
pop
sbb
hlt
clc
jge
loope
test
aaa
sub
and
dec
addl
xor
mov
rorb
jmp
jg
cwtl
pop
inc
pop
lcall
das
dec
jge
pop
push
call
mov
fidivs
and
dec
movsl
dec
push
inc
jne
arpl
ss
xor
bound
rdtsc
cmp
adc
ret
ljmp
imul
mov
jo,pt
pop
mov
faddp
jno
in
lcall
fs
mov
pmovmskb
mov
push
inc
std
je
call
mov
gs
test
addr16
xor
in
xor
cmp
bound
and
mov
rol
push
fwait
lret
std
adc
lds
int3
dec
mov
sub
lahf
sub
inc
push
ret
xchg
sahf
es
lret
lock
xor
insl
fcmovnu
cmp
sub
xchg
adc
mov
dec
inc
mov
movsb
inc
cmpsl
mov
ficoms
mov
dec
call
popa
movsl
push
xor
xor
loope
add
pop
jmp
push
test
loope
in
cmpb
stc
sbb
cmp
ljmp
data16
dec
or
das
fmull
cmc
loopne
mov
or
inc
bound
fsts
jg
jecxz
sub
mov
mov
insb
dec
aam
mov
ret
add
mov
repz
andb
js
shll
fbstp
dec
inc
sahf
xchg
or
in
sbb
jmp
out
inc
jge
mov
gs
sbb
jmp
outsl
subb
scas
outsb
icebp
jo
mov
or
lods
pop
cmpsl
dec
pop
roll
gs
push
lret
pop
sub
xor
xlat
pop
jle
call
shl
or
andl
xor
lahf
les
push
rorb
lcall
mov
arpl
jae
jecxz
data16
scas
out
test
aaa
dec
cwtl
stc
repz
or
loop
push
adc
pop
mov
mov
scas
sbb
jnp
out
jns
mov
inc
fbstp
mov
sbb
sar
mov
xor
arpl
push
out
jmpw
fcompl
fimull
popa
cmp
iret
inc
cmp
or
push
cltd
push
addr16
and
mov
fisttpl
mov
lret
cmp
mov
cmp
ret
repz
cld
int
sub
mov
mov
cmp
std
fldcw
lahf
xchg
dec
jp
xor
xchg
or
fyl2x
xchg
movsl
fbld
mov
call
push
out
cmp
outsb
sbb
bound
arpl
xchg
push
ss
jg
lods
and
sub
xchg
jecxz
xor
sahf
jl
pushf
xor
xlat
mov
cmpsb
jbe
mov
push
mov
rcll
repnz
mov
mov
cltd
xchg
call
mov
pop
and
scas
test
add
cmp
lods
sbb
scas
cmp
xchg
jp
or
clc
mov
jmp
xor
jle
in
dec
xor
adc
add
jbe
adc
jo
imul
gs
or
jle
hlt
mov
jo
or
adc
mov
cli
mov
xor
and
mov
loop
movsb
adc
and
filds
mov
adc
xlat
mov
shrb
xor
add
mov
sbb
lock
aam
sub
scas
out
bound
aad
daa
jbe
inc
pop
xchg
shll
mov
pop
lea
in
aad
or
mov
dec
dec
mov
out
rclb
in
roll
lods
ss
xor
mov
es
cmpsl
jno
in
rcr
popf
inc
mov
int3
jp
mov
xchg
cs
cmc
call
sbb
mov
in
scas
dec
outsb
cld
cmp
mov
xor
arpl
loop
dec
iret
add
cli
or
fldt
pop
adc
je
mov
test
int3
mov
push
jecxz
adc
jecxz
pop
xor
sub
mov
jecxz
xchg
or
movsb
or
cwtl
mov
jecxz
mov
mov
pop
fnsave
mov
push
aam
test
and
in
push
repz
in
push
inc
sub
mov
stc
arpl
xchg
add
cld
mov
shl
rcrb
jnp
xor
shl
ja
jmp
dec
and
sub
into
repz
xor
and
add
jg
insb
xor
jmp
dec
cmpsb
divl
pop
sbb
fcomp
inc
sub
pmaddwd
pop
jl
pop
xchg
out
shrb
ljmp
sbb
enter
mov
ljmp
loope
or
dec
jnp
inc
mov
stos
aam
js
xchg
mov
sbb
fbstp
repnz
lahf
dec
cmpsl
loope
push
pop
out
mov
jno
cmpsb
outsb
push
in
insb
cs
mov
addr16
out
dec
sahf
jl
jle
aaa
lods
sub
icebp
lock
mov
lahf
insb
jp
cltd
fldenv
sub
fidivs
das
mov
add
pop
jl
cmp
ja
dec
outsl
int3
mov
stos
shlb
daa
cmc
and
bnd
gs
lret
sti
shrb
mov
mov
ret
fs
xchg
mov
mov
stos
adc
test
shll
mov
adc
push
mov
mov
dec
mov
adc
xor
shlb
mov
cltd
mov
addb
adc
adc
xchg
push
maskmovq
mull
rolb
stos
inc
aas
imul
std
jae
sti
fwait
xor
mov
mov
int3
repz
pop
mov
cmp
xor
mov
jg
sahf
aas
sub
add
dec
or
in
mov
pop
or
dec
jnp
sub
aaa
and
shrl
and
shll
fistpl
loopne
insl
cmp
and
mov
xor
or
xchg
adc
jge
mov
inc
loope
cwtl
xor
psllw
push
fstpl
aas
pop
jl
shl
daa
or
out
data16
outsb
push
push
mov
pop
test
jmp
fucomp
or
add
aas
cmp
push
jne
xchg
sbb
push
fmull
icebp
inc
divb
dec
jb
aaa
in
mov
pop
xchg
dec
adc
shlb
in
pop
imul
add
mov
test
add
insl
cmpsb
mov
inc
cmpps
cmp
add
pop
test
xor
leave
or
pop
add
push
xchg
sub
add
xor
arpl
mov
daa
loopne
ds
outsb
clc
cmp
call
mov
push
jle
mov
fldt
pop
imul
aaa
lock
xor
xchg
lcall
mov
ljmp
adc
add
ret
sub
mov
jmp
daa
imul
cltd
mov
das
jbe
out
mov
aam
movsb
cld
aad
dec
andb
inc
jns
inc
lods
int
cmp
std
adc
repz
xchg
xchg
subb
fstpt
aas
fldenv
stos
popa
mov
dec
ja
cmp
jno
mov
sub
das
sbb
loopne
filds
push
inc
out
pop
mov
jb
push
push
addr16
bound
sti
aaa
xor
adc
pop
pop
mov
ret
daa
or
and
and
push
shl
addb
push
call
sbb
push
sbb
xchg
subl
jg
test
xor
and
pop
xor
cld
jge
popa
jo
adc
fisubs
dec
push
rclb
aam
and
into
imul
sbb
pusha
hlt
aaa
out
xor
insb
imul
pop
mov
nop
fcmovnbe
ljmp
add
jecxz
dec
and
mov
xchg
fidivrl
adc
xor
in
or
shll
lods
jne
cmpsl
cmp
movsl
subl
lret
jmp
jp
cwtl
cmp
mov
addl
imul
paddd
pop
sub
jbe
insb
push
out
pop
cmpsb
cs
inc
outsl
shl
loopne
daa
mov
pop
test
ficomps
adc
jge
in
push
jno
inc
xchg
jne
mov
push
sbb
scas
icebp
jnp
push
shlb
and
inc
mov
xchg
test
mov
jbe
in
nop
das
cmpsl
ja
fidivl
push
jnp
sbb
adc
mov
or
lods
pop
test
int
fisubrl
ret
call
test
pop
xor
and
add
bound
int
aad
pop
test
cmpsl
rcll
sbb
add
jg
stc
xchg
addr16
scas
add
hlt
aad
lods
mov
push
outsl
repz
cld
pushf
loop
dec
aam
loope
into
pop
dec
aam
cmpsl
mov
popl
xchg
push
xchg
pop
test
mov
xchg
mov
xchg
add
lock
lds
outsb
pop
adc
fwait
push
xchg
call
xchg
mov
mov
sbb
pop
jb
setge
shlb
lods
in
lds
lahf
cmp
adc
movsb
enter
cwtl
mov
mull
imul
popa
int
addb
or
stc
cmpsl
adc
xchg
and
xchg
xchg
das
movsb
cmp
aaa
xchg
call
push
push
std
ficoms
mov
xor
and
push
jb
movsb
mov
out
orl
sahf
fwait
xchg
in
fsincos
ret
or
jne
xchg
das
or
or
mov
or
or
adc
pop
movsl
or
dec
inc
and
mov
inc
pop
push
sub
ja
cli
sti
push
sbb
cmc
mov
out
ja
fs
and
stos
loope
ret
xchg
xlat
pop
mov
and
es
push
cli
ja
pop
mov
cmpsl
xchg
sub
stos
adcb
into
jae
repnz
pop
xor
loope
push
insb
mov
dec
push
cmp
cmpsb
sbb
push
and
dec
sbb
loop
push
out
add
mov
xor
push
mov
cli
cmpsb
mov
dec
test
or
cs
ss
sbb
fwait
adc
adc
jb
add
popf
bound
insb
dec
gs
leave
test
adc
push
fimull
mov
fnsave
enter
push
lret
push
popa
dec
jl
dec
lods
add
xchg
inc
std
inc
cmp
pop
inc
mov
and
loopne
or
and
xor
ret
push
jb
fcoml
xor
aad
xor
mov
mov
cs
jg
push
int
xchg
and
lods
mov
mov
dec
sbb
popf
cld
rcll
addr16
dec
xor
xor
inc
fsubl
lods
mov
inc
bound
push
pop
xchg
pusha
mov
movsl
sti
push
xchg
sub
xchg
aas
xor
mov
pop
insb
iret
and
add
mov
mov
lret
aad
sub
leave
sarl
std
mov
test
adc
jle
pop
adc
lcall
cmpsb
inc
xor
inc
jns
lods
push
nop
stc
popa
ret
lea
cli
xor
or
jb
or
into
testl
sti
lcall
cmpsl
iret
inc
mov
mov
loop
sub
movsb
pop
and
add
or
je
mov
jecxz
push
cmpsl
fs
arpl
fs
push
sub
sub
sub
add
cli
add
loopne
jbe
mov
push
in
bound
mov
shl
call
popa
xchg
mov
cmp
rcrl
push
mov
popf
jge
faddp
ds
jecxz
xor
ss
xchg
sbb
popf
je
cltd
std
fwait
adc
jl
scas
add
push
out
push
sbb
ret
cmpsb
jb
daa
testb
inc
cld
mov
adc
and
pop
adc
push
adcl
fmulp
add
mov
pop
jne
dec
aad
insl
adc
adc
lcall
pop
jae
add
mov
mov
pop
dec
mov
jp
and
inc
or
pop
filds
aam
jl
push
push
mov
ret
fwait
bound
pop
test
dec
inc
fildl
adc
cmovns
sub
js
jg
sbb
outsl
pop
cmp
pusha
inc
sub
push
inc
cmp
repz
cs
outsl
rcll
mov
adc
pop
lret
lods
jle
test
js
int3
popf
test
inc
push
scas
sbb
clc
mov
jl
fists
lea
inc
xchg
sarl
pop
fdiv
mov
or
ret
fidivs
scas
pop
rcrb
fs
xor
sbb
jnp
xor
push
int3
add
push
dec
jmp
and
in
sahf
leave
xchg
decl
stos
jp
test
add
push
loope
cmp
in
rcll
cmpsb
or
es
dec
pop
jge
mov
mov
ja
idivb
lret
outsb
in
xchg
xlat
cmp
inc
stc
sbb
out
aaa
leave
xor
cmp
repz
enter
lahf
rcrb
std
pop
sbb
and
hlt
and
sti
pop
xor
or
mov
xor
xor
stc
push
mov
insb
mov
mov
dec
ja
cmp
mov
insb
sbb
xchg
data16
and
les
test
loopne
in
add
lods
outsb
xchg
push
or
dec
test
daa
jns
or
pushf
pusha
mov
mov
xchg
daa
ljmp
jno
dec
rorl
push
pop
and
sbb
mov
add
and
mov
mov
sbbl
js
jb
pop
sbb
pop
out
dec
data16
test
jbe
shl
mov
push
ret
test
pop
and
pop
add
pop
mov
stos
stos
test
rcl
xor
xchg
or
mov
jecxz
jae
lret
mov
loopne
fisubrl
mov
lcall
or
int3
test
mov
inc
cmpsl
sub
aas
xchg
cmp
insl
or
enter
push
xor
dec
inc
xor
lea
xor
cmp
lods
and
pop
sbb
ja
nop
cs
fwait
xor
mov
mov
outsl
sub
call
scas
mov
mov
das
pop
into
lods
inc
push
xor
jns
or
mov
xchg
sti
inc
out
push
cmpsl
pop
imul
shll
ds
and
out
or
and
push
jne
bnd
fidivs
xchg
andl
inc
mov
or
adc
push
out
ss
or
sarb
fwait
insl
outsl
movsb
push
mov
mov
rol
sub
lea
cmpsl
ss
inc
movsl
cli
adc
and
push
sbb
pop
xchg
jmp
shrb
push
fs
cld
and
inc
inc
jge
fadd
in
mov
push
xchg
data16
add
sub
sbb
adc
out
iret
xchg
int3
and
xchg
in
xor
fcompl
sbb
in
push
xlat
mov
sub
cltd
jl
cs
inc
lods
cmp
jle
mov
sbb
not
push
xchg
mov
push
xor
jmp
dec
push
sub
andb
pop
push
xchg
sub
stos
pop
movsb
mov
repnz
push
out
pop
mov
sbb
hlt
clts
lahf
scas
jnp
sbb
xchg
mov
inc
dec
test
fdivl
adc
arpl
xor
jne
mov
jecxz
sbb
mov
lods
add
push
stos
jmp
jecxz
shll
and
fmuls
imull
insb
xor
fwait
xchg
mov
push
xor
cmp
cwtl
fildll
leave
dec
loope
xchg
lahf
in
jbe
movsb
sbbb
jle
jle
push
dec
ret
fsubs
add
xchg
mov
inc
add
mov
sti
outsl
stos
cld
lcall
lret
mov
sbb
mov
lret
outsb
knotw
pop
movsl
jl
add
and
cmpsb
push
xor
xchg
shlb
cld
repz
dec
cmpsl
push
fwait
jmp
lods
sbb
cmp
dec
jle
fistpl
xchg
hlt
sbb
sub
imul
repz
push
and
add
mov
movl
push
aaa
jb
mov
adc
or
loop
repnz
iret
mov
in
sbb
je
jl
jmp
insb
xchg
fstpl
push
and
sub
mov
or
xchg
ret
push
lock
inc
pop
sbb
ss
jg
ret
divl
scas
inc
testb
test
jmp
out
mov
jmp
andb
jae
sub
inc
aaa
push
and
cmpsl
pushf
mov
push
xor
and
pop
pop
jno
push
push
jmp
enter
ss
int3
lds
mov
call
cmovbe
adc
xchg
push
jl
or
into
push
pop
or
scas
cmc
inc
mov
sbb
int3
and
inc
sti
mov
lock
je
xor
mov
sbbl
test
ret
mov
or
mov
sahf
cwtl
stos
nop
push
or
stos
push
imul
lods
icebp
lcall
xor
js
mov
call
mov
popf
cmpsb
cwtl
add
fstps
loopne
dec
sti
paddq
leave
movsl
push
adc
cs
cld
mov
pusha
mov
addl
pop
cmc
or
jne
and
push
nop
push
inc
in
sub
out
mov
insl
mov
pop
enter
jns
sub
adc
iret
pop
dec
or
adc
inc
pop
or
negl
pop
lahf
outsl
daa
mov
in
ljmp
outsl
aam
mov
jecxz
out
mov
nop
aaa
ret
call
jns
cmc
pop
push
jae
daa
and
or
or
mov
jne
cs
push
or
dec
pop
adc
sbb
pop
sbb
add
ljmp
mov
jp
jle
mov
xchg
mov
pop
stc
xor
fwait
test
arpl
pop
daa
mov
inc
lret
add
sub
enter
test
sub
stc
xor
mov
mov
mov
insb
jl
loop
cmp
je
mov
or
sbb
xor
mov
push
pop
fisttpll
jne
clc
mov
add
mov
mov
pop
and
mov
or
iret
sub
inc
mov
ret
das
fcoml
cmpsl
lods
aad
dec
adc
in
and
adc
andl
lret
ret
push
jnp
scas
leave
adc
sub
pushf
sbb
jb
test
sbbb
sub
xor
js
stc
ja
and
push
out
xchg
outsb
push
cltd
mov
dec
fidivrs
fildl
jge
pop
into
arpl
lret
push
das
or
jmp
cli
sub
add
stc
sbb
cld
mov
inc
imul
xchg
adc
clc
inc
pop
je
nop
repnz
push
xchg
es
push
mov
inc
push
mov
fcoms
jno
je
add
lock
test
imul
xchg
dec
lds
dec
dec
notl
add
and
lret
pop
rol
in
cmp
ret
adc
push
sti
leave
cmp
lods
aas
shrl
xor
out
push
hlt
scas
movsb
repnz
cmp
xchg
mov
stc
sbb
in
rdmsr
out
sbb
dec
cmovg
daa
js
in
scas
dec
adc
cld
jp
push
inc
jne
and
lcall
fwait
push
mov
movsb
and
push
enter
in
mov
fbstp
adc
inc
hlt
int
js
jge
int
push
dec
gs
cs
adc
int
lods
test
or
inc
add
add
adc
dec
fidivl
and
sarl
jg
fstpt
mov
xor
inc
pushf
mov
pop
into
shll
pop
cltd
fdivrs
subb
sbb
and
xor
adc
stc
jp
ds
cmp
icebp
dec
jecxz
mov
cmpsb
in
repz
in
pushf
pop
mov
into
xchg
pop
fnsave
dec
xchg
adc
scas
push
jne
cmc
and
dec
daa
add
jo
sti
mov
xchg
fdivrl
cmp
jo
push
pop
test
lds
out
or
xlat
push
shlb
jb
je
jno
add
and
cmc
adc
xchg
ret
or
loop
pop
outsl
push
inc
lahf
or
pop
dec
jno
jnp
push
push
mov
jg
mov
dec
loopne
mov
repz
jg
jl
ss
cmp
pop
xchg
cld
push
in
xor
rorl
xorb
test
or
shrl
mov
outsl
dec
mov
or
push
and
push
mov
nop
add
pop
sub
lock
sti
mull
mov
and
xor
lods
sbb
dec
xchg
aaa
push
rorl
addl
es
jge
xor
xchg
and
xlat
les
das
loop
jo
std
test
jbe
or
shr
cmpsl
loop
int3
dec
adc
adc
shlb
sub
mov
shll
cs
cltd
mov
adc
inc
fbstp
xor
test
and
cmp
mov
incb
push
lea
xor
and
call
cmpl
lret
sbb
adc
and
cmpsl
mov
or
mov
push
mov
sbb
loop
and
test
fistps
sub
in
jge
imul
xchg
fiaddl
repnz
popa
jns
add
lods
lea
into
outsl
lock
jecxz
adc
repz
roll
sbb
fcmovne
pop
and
jbe
inc
adc
int
ja
mov
jnp
aaa
pop
push
xor
inc
andb
xor
adc
adc
add
dec
mov
xchg
stos
jg,pn
fwait
push
jmp
push
loop
cld
sub
xchg
cmc
push
xor
test
fdivrp
fdivl
pushf
mov
stos
pop
pop
ret
hlt
ds
push
and
ds
sub
pop
push
xor
mov
dec
cmp
dec
sub
dec
iret
or
mov
fwait
in
and
add
fstps
imul
cmp
test
ret
or
cmp
lods
imul
sub
jecxz
pop
addr16
pop
mov
fildll
cs
jo
push
push
jge
and
roll
scas
aaa
mov
push
xchg
sbb
jp
mov
pop
inc
add
xor
jle
mov
sar
dec
dec
sbbl
or
pop
xor
bound
jg
push
scas
xor
push
cwtl
xchg
adc
aam
dec
out
ret
arpl
cmp
ljmp
scas
mov
xchg
repz
test
sahf
clc
adcl
mov
lods
mov
pop
les
pcmpgtw
insl
and
add
dec
xor
lcall
adc
ret
xor
aad
sub
fs
ficompl
andl
jmp
ja
test
mov
aaa
sub
js
and
push
jp
cmpb
out
in
and
in
push
lea
sbb
clc
scas
test
ds
sarb
lods
loopne
mov
subb
rorb
lfs
out
inc
pop
xchg
xchg
sbbl
push
cmp
ret
gs
testl
das
push
xor
in
jmp
inc
mov
in
push
inc
mov
in
jno
lods
fbstp
popa
and
movsb
push
jb
loopne
adc
std
dec
loopne
push
sbb
rcr
adc
push
das
adc
sub
pop
push
fnstcw
xchg
push
mov
arpl
push
cmp
dec
push
into
enter
inc
sahf
mov
mov
loop
nop
outsb
shll
test
jns
repnz
or
fisubs
pop
jbe
sbb
xor
and
in
mov
enter
add
in
repnz
imul
or
dec
movsl
shl
lcall
rcll
jo
adcl
mov
mov
fwait
aam
repnz
ss
jo
rclb
cld
dec
ljmp
add
cmp
sub
fwait
adc
xlat
pusha
lcall
jns
mov
and
push
aad
cmp
fisubl
jbe
leave
stc
cmp
xor
jge
add
adc
out
jl
pop
and
xor
dec
mov
test
push
insb
sbb
pop
test
pusha
ja
sub
fwait
ret
mov
mov
mov
sbb
call
movsb
ja
mov
pop
lods
jmp
xchg
sub
dec
subl
jne
inc
rorl
sbb
jno
sub
int3
xor
in
sbb
movsl
loop
pop
test
sub
sub
int3
stc
pop
inc
pushl
push
and
inc
adc
dec
add
or
lea
jb
xlat
dec
stos
lcall
gs
pop
mov
pop
and
lea
notb
push
pushf
mov
sub
movsl
cmpsl
dec
inc
imul
xchg
sbb
inc
imul
jns
sar
sbb
in
rol
cmp
xor
pop
push
jmp
outsl
push
scas
mov
add
or
xchg
add
lock
xor
sub
hlt
mov
bound
sbb
mov
lahf
into
or
dec
adc
test
inc
loopne
ds
push
hlt
arpl
fistps
nop
aam
stos
jo
mov
push
and
adc
sbb
shll
push
repnz
sub
aam
pop
mov
dec
adc
subb
pop
test
xor
or
lods
test
dec
and
xorl
mov
inc
add
cmp
xchg
push
cmp
cs
shrl
sbb
lret
into
cmp
sub
jnp
cmp
mov
decb
and
leave
inc
or
cli
inc
jg
push
fs
pop
or
dec
adc
mov
cmp
nop
add
jl
dec
aad
push
ret
out
in
movntq
out
add
leave
das
js
push
jge
outsb
mov
mov
sub
ljmp
add
mov
sbb
rorb
cmpsl
adc
jg
test
pop
into
test
mov
data16
enter
cmpsl
pop
scas
ret
mov
movsl
test
cmpsb
lods
in
sbb
ljmp
sarl
call
je
mov
setge
and
cmp
in
add
fisubl
dec
ds
test
cli
ficoms
mov
outsl
subl
filds
outsb
cltd
pop
xchg
fists
push
bound
dec
pop
mov
pop
mov
enter
push
mov
cli
jns
jae
jo
ljmp
imul
lahf
xchg
jecxz
gs
or
fnsave
outsl
ljmp
pop
inc
pop
das
scas
test
in
add
add
mov
xchg
add
jb
rclb
push
lcall
inc
je
int
inc
push
cmp
cld
scas
iret
pop
sbb
hlt
and
out
jns
leave
adc
mov
pop
push
push
pop
rorl
mov
xor
and
ja
push
out
sub
rorl
push
mov
adc
jmp
pop
pop
pop
mov
fsubl
inc
bound
cmc
sub
std
es
clc
jmp
cld
or
add
add
mov
lcall
mov
fisubl
movsb
int3
push
sbbb
sahf
jge
push
jno
ljmp
loope
fbld
push
push
sub
shr
inc
lahf
cmc
sub
dec
or
xchg
xor
cltd
aaa
sub
out
lret
inc
mov
loope
aam
xor
mov
adc
pmullw
mov
popa
insb
jge
mov
adcl
ret
xor
pushf
lcall
out
repnz
mov
mov
in
cmp
jl
xchg
pop
outsl
aaa
shll
jo
mov
test
shll
add
addl
push
jge
or
adc
das
leave
test
aam
repz
adc
ret
jno
lahf
es
adcb
and
jno
add
mov
int
adc
cmp
mov
loopne
popf
sub
push
jb
mov
sub
dec
add
loopne
sbb
sub
repnz
inc
fdivl
xlat
xchg
inc
hlt
movsb
sti
popaw
fld
mov
mov
xor
movsb
hlt
in
loop
fwait
adc
xchg
call
add
mov
mov
lods
lcall
mov
mov
scas
cmc
and
adc
fwait
test
cmp
xchg
add
xor
push
mov
bound
mov
mov
mov
cmp
daa
jnp
xor
out
in
xor
js
pop
mov
fldcw
mov
cmpsl
ds
mov
mov
jae
pushl
ljmp
or
mov
fstpt
xlat
incl
mov
mov
icebp
push
in
pop
pavgw
mov
fbstp
test
jg
xor
ja
pop
ja
pop
data16
out
dec
enter
sub
mov
cmp
test
pop
sar
arpl
and
dec
outsb
pop
xor
push
fisttps
jmp
lock
mov
ja
mov
xor
ljmp
cmp
pop
jae
inc
dec
and
jp
leave
pop
lcall
or
push
enter
pop
movsl
out
into
add
mov
scas
mov
or
and
sub
jno
arpl
ss
xor
adc
mov
xchg
ds
mov
ljmp
inc
inc
and
jl
jb
mov
adc
fldt
mov
ret
pusha
pop
push
push
cltd
adc
in
int
mov
and
jns
dec
mov
push
movsl
mov
pop
test
lahf
in
mov
xchg
inc
lea
xor
add
fs
mov
add
push
mov
jl
jo
es
fdivs
addr16
xchg
int
xor
cmp
lcall
test
xchg
mov
xchg
cmp
and
mov
in
add
cmp
daa
push
adc
hlt
movsl
sub
aaa
iret
shr
sbb
je
out
sbb
fildl
and
push
lcall
push
mov
inc
pop
jbe
fstpl
push
out
mov
or
call
cmpps
sbb
out
xchg
mov
push
movsl
pushf
pslld
xor
jecxz
rcll
in
cltd
xor
mov
push
or
test
or
dec
jnp
sub
push
or
inc
movsl
sbb
push
mov
lods
adc
icebp
dec
mov
pusha
cmp
add
xchg
mov
rcr
xchg
pop
xchg
jl
sub
ljmp
jb
pop
test
nop
or
subb
fimuls
xchg
cmovle
pop
enter
dec
xor
xor
cmp
mov
cli
repz
xor
lods
or
fstpt
popl
jmp
pop
mov
dec
in
lock
cmpsl
mov
cmp
add
cmp
mov
leave
lcall
push
insb
sbb
cmpsl
mov
xor
out
test
pop
mov
in
pop
je
sub
inc
xchg
dec
jae
mov
out
lcall
adc
pop
add
cs
mov
sar
pop
cmc
pop
cmpsl
iret
mov
ret
add
ficoms
cmpsb
movb
inc
xor
xor
int
daa
cwtl
lret
dec
out
or
sub
jge
scas
push
xchg
mov
jl
xchg
in
xor
adc
pop
js
pusha
sub
pop
mov
out
sahf
repnz
dec
mov
in
inc
stc
adc
gs
push
dec
xchg
xor
into
lcall
scas
and
std
add
fcom
mov
pop
out
adc
jge
rclb
enter
adc
cmp
pop
mov
or
fcom
lcall
pop
test
enter
mov
push
sbb
lea
lock
jb
cmp
mov
inc
xchg
cmpsb
mov
scas
add
inc
stos
xor
fsts
faddp
add
imul
andl
std
fs
mov
xor
cmpsl
and
push
lret
ret
fcoml
adc
fs
pop
cmp
out
inc
fdivp
or
out
movsl
jmp
or
loop
push
and
ret
and
dec
push
test
cmp
rcll
shlb
push
gs
jp
mov
hlt
arpl
sub
scas
adc
shlb
jl
xchg
sahf
and
push
popf
repnz
int
in
addb
push
push
mov
jno
sub
pushf
shll
enter
dec
shl
insb
das
pop
in
xor
jge
push
orb
scas
cmp
mov
ror
xchg
cmp
dec
cltd
hlt
outsl
adc
push
imul
cmpsl
pushf
test
adc
or
in
les
xorl
pop
dec
aaa
xor
jb
sub
add
arpl
mov
sbb
jno
jg
imul
outsb
lret
scas
mov
stc
mov
push
xchg
mul
or
sub
cmpxchg
cmp
les
loope
inc
test
inc
inc
into
add
hlt
inc
or
mov
nop
push
mov
xchg
shl
jae
adcl
inc
ljmp
je
movl
addr16
sbb
xchg
lahf
mov
fistpll
dec
outsl
sub
mov
in
ss
ror
ret
data16
js
jle
cmp
jmp
out
out
push
adc
mov
aaa
add
je
outsb
jb
mov
adc
mov
ljmp
jle
ror
xchg
inc
sub
jae
gs
pop
fisttpl
into
xor
mov
cmp
xchg
xor
call
repz
and
ret
stc
cmp
push
push
loopne
dec
jg
jnp
push
xor
xchg
mov
sbb
xor
jae
arpl
shlb
orl
add
jns
cmp
jmp
ss
in
loop
mov
pop
shrl
jg
add
push
mov
in
sbb
and
arpl
test
mov
das
pop
lds
mov
int3
xchg
adc
add
je
data16
push
out
sub
cmpsl
xchg
mov
dec
ds
into
movsb
outsb
jle
mov
sub
mov
insl
adc
jnp
lret
or
sar
movsb
xchg
mov
pop
push
jb
mov
lods
loopne
inc
inc
mov
adcb
mov
and
xchg
lret
jbe
xchg
xor
xchg
pop
fldt
xchg
mov
dec
fwait
lock
add
in
sub
pop
push
testl
std
stos
xchg
sbb
jge
ficoms
pop
scas
sub
rol
sbb
pop
cli
or
mov
push
scas
push
in
fwait
mov
sbb
cwtl
xchg
lods
inc
inc
dec
daa
jno
sub
push
sbbl
or
mov
out
xlat
or
xorb
push
and
scas
lcall
pop
fisubl
and
pusha
fildll
ja
sub
cmp
jb
andl
outsb
cmp
fildl
pop
shrb
jg
xchg
xchg
dec
jnp
adc
je
jo
ret
xor
sbb
and
push
or
cmc
mov
cmp
sbb
jle
loop
sti
bound
cmc
ret
xor
imul
pop
sub
push
sub
lods
mov
pop
and
mov
cmp
cs
xchg
jbe
inc
xor
xchg
xor
inc
cltd
push
dec
and
push
push
mov
pop
and
int3
dec
push
sarl
push
fiadds
icebp
int
out
and
inc
adcb
cmp
mov
out
mov
or
and
inc
xor
mov
insl
cmp
pop
shl
xor
addr16
cmp
fbld
insl
fs
cmp
mov
push
out
dec
lods
mov
jecxz
in
sub
scas
cli
or
outsb
push
aas
lret
or
sub
adc
jns
outsb
cld
xchg
and
mov
jmp
decb
jg
movsl
sbb
or
subl
jno
jne
cld
in
jle
dec
fnstcw
js
cli
fldl
outsl
into
ret
scas
test
mov
popf
daa
daa
adc
and
push
ja
pop
xlat
jmp
fcoms
and
jb
je
add
dec
jecxz
enter
adcl
imul
jle
mov
in
adc
pop
cltd
xorl
roll
push
inc
outsl
dec
push
cmp
in
jg
mov
sbb
dec
jnp
inc
push
push
and
dec
sbb
cli
fisubl
cltd
notb
out
movsl
mulb
das
inc
sub
out
hlt
adc
icebp
add
ret
sub
pop
arpl
test
jecxz
adc
popa
mov
dec
lret
scas
lods
aad
js
insb
in
push
xchg
loop
out
mov
jnp
jmp
insl
lcall
test
xchg
aad
mov
ljmp
subb
shl
mov
mov
mov
rolb
push
out
jns
jmp
xchg
lods
inc
dec
ret
mov
inc
xor
lret
mov
push
outsl
adc
sbb
push
adc
arpl
mov
cmp
xchg
cmpb
push
sbb
mov
mov
cmp
scas
stc
push
dec
cmpsb
lret
sbb
dec
adc
add
test
adc
lret
insl
daa
push
xlat
insl
pop
les
sbb
int3
jnp
std
xchg
aas
fcmovnu
adc
test
sti
insl
dec
stos
cmc
or
cmpsl
shl
add
xor
push
dec
push
inc
rclb
inc
adc
pop
cmp
and
decl
out
or
push
cmp
inc
xchg
in
xchg
lcall
in
mov
push
dec
leavew
push
cltd
faddl
dec
pop
scas
call
fmulp
arpl
push
inc
push
mov
bound
cmc
aas
cs
paddd
insb
testl
jnp
bound
in
pop
mov
aas
popa
sbb
adc
dec
fcoml
cs
jbe
add
lock
sti
inc
mov
xchg
les
and
fsubl
loope
daa
pop
cmp
loopne
xor
nop
pop
loop
loopne
cmp
mov
pusha
or
je
cmp
add
mov
cmp
out
pop
cmp
push
test
mul
and
sub
mov
les
imul
and
test
cmp
pop
mov
add
rolb
ud0
scas
scas
daa
mov
repz
or
loopne
adcb
addl
icebp
pop
fwait
mov
and
or
dec
xor
int3
fwait
xlat
pop
sub
test
mov
pop
cmp
stos
cmp
push
or
insl
jno
dec
adc
or
repz
pop
popa
jne
cwtl
loop
jle
add
fidivrl
pop
and
cwtl
int3
push
push
mov
mov
xchg
call
sub
inc
dec
les
jg
ljmp
xchg
push
xchg
jns
mov
push
nop
lods
mov
sbb
sub
mov
cmp
pop
repz
je
xchg
fcmovbe
or
inc
jb
dec
outsb
les
sub
inc
dec
xor
sub
pop
jae
ss
sub
jp
sar
mov
push
sbb
xor
mov
push
xchg
push
ret
cmp
add
sbb
push
cmp
sbb
pop
jl
mov
mov
out
divl
imul
loop
aas
mov
cmp
addb
fldenv
in
add
imulb
outsb
cld
push
imul
xlat
sar
jo
mov
jae
add
imull
lock
cmp
dec
rol
mov
add
dec
mov
fnstcw
pop
ffree
cmp
mov
rcr
cmp
sub
in
pop
scas
and
adc
xor
adc
xchg
loope
xor
push
and
loope
les
nop
ret
test
pop
dec
jmp
ja
mov
popl
and
cmp
xchg
xor
push
cmpsl
cltd
push
lret
jb
cmpsb
jg
ret
adc
arpl
iret
scas
incb
mov
push
sub
xchg
fisubrl
mov
pop
inc
test
mov
cmp
add
test
shlb
cld
xor
incb
in
loope
ret
out
mov
bound
mov
push
inc
push
add
dec
in
mov
divb
lea
lret
fidivs
stc
pushf
testl
cmpsl
pop
push
pop
sub
jbe
xor
pop
sub
lods
inc
jg
lahf
mov
jne
scas
jmp
es
add
xor
and
push
jp
pop
jmp
sub
in
and
sbb
push
popf
sub
and
sbb
push
xor
rcrl
out
aam
fdivr
push
or
push
push
jecxz
dec
mov
js
insl
push
mov
popf
sbb
jmp
insl
inc
fwait
lahf
inc
fbld
in
push
sahf
sub
in
mov
movsb
pop
ret
and
cmp
stos
mov
repnz
stos
jg
xchg
pop
xchg
pop
rcll
mov
jne
test
les
jno
cmpsl
xchg
mov
jl
jle
and
add
push
seta
insb
bound
mov
push
push
push
mov
les
push
jg
outsb
inc
push
cmc
sbb
inc
mov
jae
xchg
push
out
lods
fstp
inc
cmp
sbb
adc
dec
xchg
popa
or
or
loope
call
int
pop
jnp
lahf
movsb
lods
imul
sbb
xor
arpl
repz
subb
arpl
sub
aas
int
sub
xor
xchg
out
push
cli
repz
js
idivl
inc
or
mov
mov
push
lock
loop
bound
dec
sarl
and
jne
push
adcb
out
mov
mov
out
cmpsl
jecxz
les
cli
pop
hlt
or
adc
in
xchg
adc
add
clc
xchg
push
gs
loope
mov
loop
lods
sub
lret
aad
rclb
sbb
ret
xor
fimull
xchg
fmul
mov
insb
inc
inc
adc
and
cmpsl
xor
xchg
pop
push
inc
ljmp
lret
push
ljmp
cmp
push
push
loope
jge
fiadds
lcall
jo
cmp
cmp
daa
fists
cmp
jo
or
or
cli
push
mov
mov
add
out
sub
cmp
ror
mov
ret
lea
xchg
add
sbb
orl
incb
ret
outsb
ljmp
rorl
ja
icebp
sarl
or
test
mov
shlb
push
movsb
sbb
stos
imul
cmpsl
je
dec
fmulp
lock
in
insl
pop
cli
sub
inc
iret
outsl
fidivrl
or
pop
pushf
out
mov
dec
push
js
mov
push
adc
sub
push
fsubrs
cmovle
and
loopne
cmp
xchg
std
loope
and
lock
jge
lea
xor
add
loopne
jbe
scas
out
xchg
movsl
and
int3
cld
in
mov
fisubrs
insb
mov
in
inc
mov
shlb
out
xor
imul
push
push
outsl
sbb
out
stc
mov
xor
sub
and
aas
jmp
mov
pop
mov
push
pop
add
adc
mov
jo
inc
xchg
xchg
fwait
adc
xor
mov
pushf
sbb
adc
jb
js
push
shlb
enter
in
sub
mov
lret
push
js
addl
gs
or
pop
ficoms
push
pushf
add
fidivrs
fwait
inc
fnclex
out
lods
and
ljmp
roll
push
mov
test
xor
fs
mov
call
push
pop
dec
mov
lds
repz
imul
mov
repnz
or
rcrb
sbb
aaa
or
lret
cmp
insl
js
fsubrl
pop
gs
pop
jnp
mov
lret
pushf
jns
dec
stos
imul
jl
mov
cmc
mov
xchg
and
and
jecxz
jg
out
push
inc
push
dec
jp
or
fildl
xor
lcall
dec
repnz
mov
movsl
adc
push
or
adcb
lcall
sti
cmp
test
pushf
cmp
push
pop
jae
popa
stos
outsb
mov
fidivrl
cmp
mov
jae
xchg
pop
call
mov
lods
sti
mov
push
or
xor
jo
icebp
lods
fs
jle
fdivrs
test
xchg
jb
xor
jle
sbb
xor
div
push
jae
daa
pushf
popf
fsubrl
mov
jp
addr16
xor
xor
fwait
movsb
mov
jae
sahf
daa
mov
rclb
adc
imul
jmp
test
cli
jo
or
mov
bound
xor
lds
and
mov
sub
xor
pop
push
cmp
popa
dec
xor
push
mov
adc
mov
mov
add
outsb
add
decb
mov
jno
mov
int
jmp
out
cwtl
mov
ss
adc
stos
mov
sbb
mov
clc
popa
push
add
mov
sbb
rclb
add
mov
jg
jp
loop
je
ljmp
inc
adc
aad
pop
stos
movsb
cmp
and
pop
push
mov
jo
enter
mov
fimull
shrb
xchg
negb
insb
sub
inc
imulb
and
mov
mov
mov
inc
cld
xchg
push
cli
sarl
and
mov
pextrw
cs
pop
int
leave
adc
gs
arpl
andl
pop
mov
lcall
daa
or
push
or
xor
mov
ret
dec
loop
ja
lds
mov
xor
inc
call
add
lods
add
aam
push
out
fiaddl
cwtl
push
stos
xor
fildll
push
push
imul
cmp
dec
cmp
jmp
push
add
and
xchg
ror
push
aaa
inc
test
inc
jnp
in
mov
sub
mov
mov
jns
inc
push
jge
or
cltd
adc
adc
into
pop
out
push
sbb
outsb
pop
inc
xorl
cmc
aas
xchg
add
jp
out
pop
lcall
dec
gs
sbb
sub
mov
popa
sti
push
mov
out
inc
pop
ret
sub
pop
in
push
in
and
jmp
iret
add
ficompl
and
movsb
mov
test
jne
lock
sti
xchg
pop
cli
mov
movl
imul
mov
xchg
scas
mull
call
mov
loopne
push
dec
or
mov
mov
adc
xor
inc
add
addb
cmp
pop
negb
xchg
sub
out
sub
icebp
aaa
cld
mov
cmc
es
lods
xchg
inc
pushl
ljmp
hlt
sbb
xorb
sub
aas
adc
mov
sbb
xor
adc
or
sbb
adc
sub
dec
pop
rcr
and
xor
lods
movsl
sti
test
or
or
dec
xchg
jg
jg
idivb
xlat
mov
lcall
or
rcrb
dec
xchg
jns
adc
or
lcall
insb
je
dec
loope
out
dec
data16
dec
jle
push
xor
pop
jp
ja
ljmp
cwtl
imul
mov
xchg
push
add
je
adc
pusha
jnp
sub
push
cmp
sarb
xor
lea
outsl
xor
xor
out
aam
repnz
hlt
inc
inc
cmp
clc
add
sbb
push
cmpsl
sub
inc
fstl
xorl
sub
mov
fwait
add
cld
push
sbb
mov
lret
xor
cmp
jbe
inc
cmp
movsb
pop
adc
loope
ret
add
vmovshdup
pop
sub
addr16
adc
psubsw
fwait
xchg
pop
sbb
pop
sbb
fsubl
ss
jnp
push
nop
sub
cmpsl
js
and
inc
pop
cli
xchg
lcall
adc
sub
jge
pushf
add
push
cmp
cmc
cmc
jne
or
cltd
and
or
lret
sub
mov
add
sub
lea
mov
pop
test
lea
and
push
jg
dec
lds
and
lds
xchg
out
movsb
dec
dec
or
das
pop
roll
incb
jb
and
and
js
lock
shl
out
aaa
sub
imul
sbb
adc
roll
jmp
icebp
test
gs
pop
jb
mov
loopne
insl
and
mov
or
jb
stos
dec
sub
or
adc
in
ret
out
lret
sbb
cwtl
outsb
pop
ds
add
ret
dec
pop
pop
les
clc
jno
pop
lock
insl
jne
ret
lret
mov
icebp
data16
outsb
and
xor
movsl
popf
cld
outsl
and
out
push
mov
ds
push
dec
lea
sbb
dec
mov
mov
mov
xchg
dec
pop
clc
out
and
jb
das
cli
fbstp
lret
sub
xor
jl
insb
fcoms
pusha
push
je
add
hlt
cli
jnp
stos
insl
pop
sub
ret
jecxz
or
push
std
rdmsr
dec
shl
jp
push
pop
aad
jecxz
out
cmp
push
push
ficoms
sbb
lods
push
dec
fcmovnbe
pop
mov
inc
inc
bound
adc
fcmovne
clc
mov
jle
flds
cmp
dec
pop
push
xchg
mov
iret
adc
jp
mov
test
or
sub
push
pop
pop
mov
movsb
push
sarb
mov
dec
xchg
add
divb
xchg
popa
push
mov
test
xchg
cmp
and
xchg
mov
in
aam
aas
lret
cmp
daa
aas
pusha
dec
mov
fdivs
inc
repz
dec
pusha
mov
lea
fisubl
cmpsl
xor
add
rolb
jbe
in
jg
pop
dec
jle
repnz
cmpl
pop
aam
movl
cmc
movsl
mov
and
out
mov
mov
outsl
cmp
in
out
inc
push
push
sbb
call
adc
pop
dec
inc
push
jmp
mov
fstps
pop
leave
xchg
pop
shl
or
jp
enter
add
fstps
mov
sbb
lods
adc
ss
sbb
aad
sbb
ds
ret
cmp
pusha
sub
jecxz,pn
int
xchg
cld
sub
test
inc
int3
push
pop
divl
es
ret
fdivrl
outsb
cmp
cmp
std
fnstsw
dec
mov
lret
and
jbe
orl
xchg
pop
das
lods
int3
dec
pop
pushf
lret
push
les
mov
mov
pop
js
pop
push
cmpsl
adc
xchg
and
push
aaa
cmp
in
or
and
test
mov
insb
sub
call
jo
cmp
test
out
rolb
dec
lds
jbe
cmp
cmpl
das
sti
adc
daa
inc
push
push
decl
cs
fldcw
fs
pop
int
ds
jno
and
push
cmp
lock
out
xor
pusha
sbbb
cmp
jp
int3
push
sub
aas
sahf
or
push
out
add
mov
in
xchg
scas
xor
sub
in
or
insl
sbb
int
daa
test
in
icebp
push
jno
push
pop
ret
in
inc
and
push
outsb
or
push
jno
call
sbb
xchg
sub
lds
nop
sub
mov
cmp
mov
js
mov
xchg
lret
jns
mov
dec
and
push
sbb
sahf
sti
push
orb
dec
mov
dec
and
mov
and
jb
lret
subl
push
add
andl
insl
mov
ret
clc
aas
subl
sbb
mov
out
dec
std
ficomps
daa
adc
adc
push
dec
mulb
sahf
xchg
call
ljmp
pop
repnz
cmp
fwait
in
daa
mov
sbb
mul
ret
aam
push
ret
pop
stos
sahf
outsl
xchg
movsl
xor
push
mov
pop
sbb
cmp
std
fcos
je
ret
shr
sub
sbb
leave
fldenv
xchg
data16
and
test
test
in
fcom
popa
lcall
push
das
add
push
les
jne
in
fbstp
mov
xchg
jo
adc
xchg
ret
and
mov
mov
iret
aam
mov
sbb
inc
lret
push
stos
mov
ret
adc
mov
sti
jp
and
in
dec
pop
pop
and
iret
stc
xchg
jl
xchg
mov
mov
data16
stos
mov
dec
mov
jae
push
lods
fcmovu
inc
cld
cmp
cmp
jp
movsl
cltd
or
insb
imul
sti
addr16
inc
aad
and
mov
loopne
xchg
aad
les
cmpsl
rcll
outsb
fmull
repnz
and
lea
and
push
lret
push
cld
xchg
fxch
cwtl
xchg
out
es
ja
lds
adc
cltd
jmp
in
mov
pop
jg
addr16
xor
pop
daa
cmp
enter
jnp
dec
adc
xlat
clc
jge
into
xchg
inc
inc
jg
pop
repz
loopne
push
sbb
or
mov
mov
add
adc
sti
or
cmpsl
inc
xchg
lret
imul
sub
push
sti
in
sahf
ss
fildll
mov
xor
test
xchg
lahf
pop
jmp
pop
adc
clc
lds
or
rcrl
mov
gs
lret
jle
aas
mov
pop
pusha
ret
clc
adc
adc
cmp
pop
xchg
xchg
into
push
mov
rorb
add
cmc
pop
cmp
jnp
rcrl
xchg
in
xor
cmpsb
inc
clc
fwait
dec
cmpsl
fdivrs
ss
and
pop
insl
leave
rol
cmp
xor
adc
je
jb
addl
xchg
lret
mov
lea
and
inc
je
lods
adc
stc
lock
aaa
lock
je
pop
mov
rolb
dec
js
mov
lea
sbb
ss
push
xor
lods
pop
push
xor
sbb
je
in
dec
jbe
or
inc
cmp
lahf
push
insb
or
and
fwait
add
aad
cli
sbb
imul
js
mov
jae
daa
or
cltd
mov
mov
js
mov
mov
sbb
shlb
test
leave
mov
fwait
test
xor
leave
int
jno
xchg
in
push
out
sbb
push
enter
lods
xor
fdivs
jae
xchg
mov
or
jae
rcrb
je
dec
inc
cmc
dec
pop
fsubrl
push
adc
cmpsl
jns
jns
dec
xor
inc
xor
push
xchg
mov
jnp
mov
mov
divb
push
adc
xlat
dec
daa
out
pop
mov
mov
lea
or
mov
popf
nop
adc
test
fcomi
iret
mov
sub
hlt
xor
shll
push
stc
or
or
sub
xor
sbb
xchg
push
sub
or
dec
xor
xor
fcom
lods
jle
pop
push
pop
scas
test
xor
adc
addr16
mov
sbb
mov
fstps
xchg
cmp
std
add
add
test
scas
ret
sub
sbb
or
fildll
mov
or
dec
shl
orl
movsl
sbb
dec
jno
mov
pushf
in
lea
mov
les
push
xchg
jns
jb
xchg
jb
stos
dec
fsubl
add
mov
cmc
icebp
shlb
ret
pop
push
jo
loopne
dec
xchg
movsb
insb
sahf
jmp
add
lock
xchg
mov
adc
ss
or
cmp
out
sub
repnz
add
cmp
lahf
inc
adc
inc
inc
dec
faddl
ret
rorb
xchg
inc
inc
mov
leave
inc
sbb
push
or
lods
cld
fnstenv
or
imul
jnp
out
push
cwtl
and
insl
mov
xchg
pop
dec
pop
aad
mov
or
movsl
loop
ret
add
push
outsb
test
cmp
je
jp
xchg
mov
popa
and
mov
out
incl
xlat
gs
jns
dec
xchg
push
lret
inc
shll
fadd
ljmp
jo
jne
inc
adc
sub
test
jns
adc
nop
pop
repz
repz
je
pop
add
dec
jle
jo
out
jmp
add
movsb
scas
mov
push
inc
adc
imul
mov
xchg
mov
mov
push
jl
adc
test
lret
sti
fwait
hlt
call
sub
lea
cmp
dec
cld
repz
push
push
dec
loope
xor
ljmp
adc
icebp
adc
push
sarl
pushf
out
test
lret
or
inc
lret
lea
loopne
out
push
or
stos
sti
mov
mov
cmp
mov
sub
loopne
ss
mov
fidivrl
xor
mov
repz
mov
ljmp
push
ficoms
ret
jo
lcall
fdivrl
ret
loopne
loopne
mov
lahf
jb
sbb
inc
xor
inc
mov
aam
push
mov
lcall
dec
testl
call
cmc
jp
mov
pop
cltd
aaa
out
pop
fistl
mov
loopne
jno
lods
adc
push
sbb
das
into
cmp
sbb
mov
jp
int3
ja
xchg
movsl
outsl
xchg
nop
xchg
mov
mov
xor
mov
aas
fwait
loopne
adc
mov
xor
js
rclb
jp
lods
fisubl
dec
xchg
cmpsl
mov
add
icebp
and
out
sbb
add
adc
mov
daa
jl
add
push
xchg
fcmove
test
push
jmp
outsb
outsl
pop
add
sbb
xchg
cli
inc
push
sbb
lods
mov
clc
clc
push
pop
inc
movsl
nop
sbb
vmwrite
ljmp
xorl
cmp
in
mov
inc
andb
inc
xchg
stos
fistpl
sbb
test
out
gs
push
aaa
je
jno
std
mov
bound
pop
cmp
js
aam
sub
or
lret
mov
lods
add
push
push
jl
push
sti
push
ret
mov
je
sbb
imul
fucom
dec
je
loop
and
jge
push
add
pop
adc
cmpsb
sar
add
jg
jp
mov
nop
outsl
int
push
mov
enter
popa
andl
leave
xchg
stc
mov
out
push
inc
cmp
test
and
pushf
xchg
arpl
aaa
xor
cmp
push
xchg
inc
adc
fcoms
push
and
movsb
icebp
les
mov
iret
addr16
stc
fistps
sbb
or
inc
pop
or
sbb
xchg
or
jp
shll
negb
mov
andl
icebp
imul
sub
mov
xor
push
jae
mov
xchg
iret
jbe
or
mov
or
out
ja
mov
loop
push
pop
or
je
popa
pop
xchg
lret
and
leave
push
dec
jo
pop
pop
sbb
cmp
mov
fsubs
and
or
shll
sub
in
jb
in
mov
xlat
xor
xchg
pushf
push
or
pop
jbe
mov
lods
imul
add
pop
imul
xchg
movsb
lods
cmp
cmp
mov
jo
jns
aam
repz
pushf
popa
sub
sub
xchg
push
loopne
ljmp
cli
jge
xchg
les
pop
in
inc
addr16
fstpl
in
mov
jns
ror
pop
add
js
cmp
mov
leave
enter
jns
push
lcall
out
test
inc
iret
cmc
into
xchg
fists
mov
in
in
scas
out
orb
cmp
push
dec
loope
sbb
cmp
jno
gs
xchg
or
pushf
nop
lret
cmp
adc
push
inc
mov
dec
push
dec
fs
lahf
xor
pop
sbb
push
add
lret
xor
cli
fnstsw
daa
out
sub
imul
rcrb
sub
push
ret
adc
iret
and
jecxz
mov
inc
ljmp
add
mov
mov
into
popa
sub
sbb
imul
in
aam
lock
xchg
cli
xlat
xchg
cmp
dec
test
fldenv
call
mov
adc
xchg
jl
dec
pop
jbe
sub
popf
jno
mov
adc
jb
push
jecxz
les
jecxz
sbb
push
inc
out
int3
mov
imul
and
cmp
test
jo
jmp
out
int
inc
mov
fisubs
ret
mov
lods
jmp
inc
adc
loop
mov
andl
xor
int3
mov
inc
mov
addb
out
push
jl
adc
push
xchg
push
push
cli
cmp
fisubl
adc
cs
cltd
mov
mov
adc
mov
jb
rcr
aas
leave
dec
cmp
pusha
sbb
test
mov
addb
jno
push
imul
in
repz
jb
enter
test
enter
sub
inc
mov
dec
jge
cs
subl
test
mov
sbb
lcall
fsubrl
cltd
leave
mov
mov
and
sbb
cld
jae
sti
dec
or
xor
in
jo
or
pop
cld
jmp
outsb
out
mov
mov
negb
sub
xchg
pop
stos
aam
jge
push
cmp
and
leave
test
lret
xor
xchg
push
cmpsl
inc
mov
jb
loope
call
mov
xor
inc
sbb
and
lret
lock
sub
out
hlt
jge
sbb
sbb
out
sbb
addr16
mov
int3
xlat
pop
out
loop
mov
imul
lahf
adcl
ljmp
push
mov
or
inc
add
scas
fldt
movsl
add
sbb
ret
adc
fs
test
mov
xchg
xchg
and
push
pop
jns
dec
js
pop
cmp
or
pop
inc
cltd
jg
fbstp
pop
xor
dec
push
emms
adc
jb
mov
xchg
mov
inc
shl
jmp
mov
gs
iret
popa
xchg
rorl
xor
mov
sub
jge
dec
jns
xchg
decl
pop
andl
dec
jl
cmc
lahf
out
sbb
jb
and
sub
lret
inc
pop
rcll
orl
scas
pop
lret
gs
add
mov
mov
les
mov
test
xchg
dec
adc
jnp,pt
iret
inc
cmp
pushf
pushf
mov
mov
sub
loope
fwait
inc
pop
mov
cmpsl
lcall
aad
lock
push
call
jecxz
leave
gs
rcrb
push
lret
shll
xchg
lea
add
fstp
nop
dec
cmpsl
int3
lea
xor
jl
xor
dec
push
and
movsb
and
inc
insb
xor
les
insl
daa
outsb
mov
push
inc
jmp
ret
jbe
push
add
xchg
mov
mov
scas
cmp
jecxz
movsb
pop
divb
scas
add
lock
cld
cmp
push
push
jecxz
repnz
dec
mov
or
cmp
xor
cmp
int3
hlt
lock
xchg
adc
ret
push
rcrb
popa
push
leave
jbe
add
movsb
jg
sub
dec
iret
and
dec
sub
clc
add
push
jl
sbb
sub
mov
ret
push
jecxz
daa
out
imul
shl
xor
rolb
imul
cmp
push
movsb
mov
adc
jno
mov
stos
lcall
fistpl
cmpsb
jne
or
add
xlat
cmp
pop
xchg
mov
testb
xchg
les
add
jae
in
and
mov
mov
mov
jne
cwtl
ret
icebp
sbbb
dec
xlat
mov
mov
lret
jae
or
push
push
xchg
adcb
pop
push
dec
subl
xor
sub
dec
pushf
das
shll
lds
lods
jg
dec
cmp
sub
mov
mov
jbe
neg
scas
ret
inc
inc
mov
mov
mov
sub
mov
sub
outsl
and
cmpsl
push
sbb
mov
pop
test
fists
xor
jb
sbb
and
pop
push
cmp
fcoms
dec
ds
daa
mov
jg
jl
xchg
repnz
js
mov
cli
xchg
push
inc
fwait
subb
dec
inc
pop
sub
mov
jmp
sbb
int
xchg
jns
inc
jl
jae
pop
mov
pusha
and
cmp
mov
mov
fistl
pop
mov
push
roll
cwtl
ljmp
dec
andb
sbb
push
sahf
pop
shr
cwtl
clc
jmp
test
sbb
push
cmp
add
sub
andb
shll
popf
push
adc
mov
cmpsl
icebp
outsb
decb
xchg
andl
push
push
fsubl
movsl
push
std
das
dec
repz
movsb
pushf
cmpsb
inc
push
in
sbb
jge
mov
pop
fmuls
in
cmpl
dec
pop
aam
pop
pop
imul
sub
push
or
stos
lods
sbb
aaa
and
inc
sarl
mov
fildl
cld
stc
mov
rol
out
mov
insb
or
in
push
jecxz
dec
je
in
or
and
mov
xchg
dec
inc
xchg
push
ss
hlt
xchg
push
sub
pop
mov
rclb
das
cmp
mov
insl
push
sub
pop
lahf
fstps
aam
add
bound
cwtl
cmpsl
lods
lods
test
bound
and
cmp
rcrb
add
clc
int3
out
fwait
jbe
clc
add
imul
aaa
int3
mov
inc
mov
ljmp
mov
leave
mov
xchg
mov
lahf
add
add
push
into
movsb
push
bound
in
add
push
adc
out
jecxz
outsb
cmp
cmp
int
xchg
push
out
pop
jmp
xor
pop
aam
mov
ja
aam
pop
fbld
or
stos
aaa
push
xor
sahf
or
push
int3
mov
push
and
xchg
push
pop
pop
daa
stos
movsb
mov
mov
cmp
out
push
fsubrp
notl
sub
xor
icebp
outsl
cmpsl
xchg
inc
dec
inc
nop
xorb
sbb
test
imul
push
cmpsl
jg
stos
aam
jmp
scas
push
mov
inc
test
sub
pop
iret
inc
in
push
std
adc
jmp
adc
jae
iret
push
cmp
fmull
sbbl
jg
adc
subb
mov
pop
mov
push
into
push
scas
mov
xor
out
aas
js
mov
cli
pop
out
arpl
enter
mov
jmp
lcall
testl
jnp
mov
lods
rep
inc
fistl
dec
xor
movsb
dec
rorl
loop
bswap
push
cmp
or
mov
push
pushf
lods
loop
jp
jl
xchg
push
mov
xchg
inc
adc
popf
push
cmp
test
js
lock
sbb
fcmovnbe
and
dec
sub
aas
negb
outsb
pop
dec
jge
into
xchg
mov
fldcw
fwait
mov
addr16
lods
fistps
jnp
mov
scas
pushf
jle
lods
jle
sti
mov
movsl
lret
add
jmp
fs
jns
and
xchg
ret
adc
ss
xchg
pop
sub
jmp
mov
imul
add
outsb
lret
sub
add
add
subb
lcall
ja
push
je
xor
fwait
ljmp
mov
xchg
lea
movsl
cmp
xorb
call
movsl
jg
xchg
add
push
mov
pop
adcb
test
sub
insl
adc
inc
or
fwait
xchg
and
adc
sbb
ret
or
in
xlat
push
cld
jb
das
or
mov
cmp
inc
xor
int3
clc
arpl
mov
sub
dec
jg
les
mov
repz
mov
inc
mov
cwtl
int3
rclb
fisttpll
lods
clc
push
or
clc
aas
jb
incl
repz
mov
lret
jae
xchg
lcall
addr16
popf
call
or
sub
lds
in
dec
es
mov
ss
cmp
ret
mov
dec
cmp
mov
or
cmp
inc
sarb
and
mov
mov
ss
mov
loope
push
xchg
jns
sbb
lods
pop
mov
js
aas
pop
push
mov
inc
jle
outsb
mov
ja
aam
jb
mov
or
push
push
mov
cmp
dec
out
dec
dec
addr16
jp
fs
shlb
cmpsb
mov
das
ja
and
dec
jmp
popa
ret
insb
push
and
rcrb
xchg
std
add
inc
icebp
sub
pop
ljmp
popf
leave
inc
aas
sbb
dec
out
add
insl
or
mov
jne
pop
xchg
aam
push
cmp
test
mov
fdivrs
xchg
mov
jecxz
lds
inc
adc
mov
and
adc
and
jmp
scas
cmp
mov
jnp
iret
cmp
iret
jp
insl
repnz
add
sub
mov
push
cmp
jo
in
roll
js
cmc
and
xor
sbb
mov
add
and
add
dec
and
js
int3
sbb
adc
dec
cmp
scas
push
test
sbb
out
xor
aam
cmp
mov
mov
sti
jae
fsub
jge
fisttps
inc
add
ss
jns
movsl
xchg
std
mov
data16
add
sbbl
or
pop
sbb
inc
inc
popa
hlt
int3
mov
lock
xlat
pop
mov
neg
inc
ret
movsb
dec
iret
in
and
stc
nopl
js
jnp
inc
loope
mov
cmp
jo
cmp
popa
negb
imul
call
int
mov
mov
jo
pusha
sbb
mov
pop
leave
xor
and
cwtl
mov
mov
sbb
ja
cltd
test
rcrb
repnz
adc
insb
mov
mov
scas
lahf
push
rorl
fwait
and
xlat
mov
fwait
outsb
incl
jno
inc
pop
add
lds
lret
push
sti
fmull
shll
mov
cmc
mov
push
dec
sbb
test
dec
and
rcll
and
xor
cltd
das
add
push
fnsave
push
jle
pop
cmp
mov
test
cmp
int
sbb
push
xchg
ret
push
es
lods
loop
out
test
pop
xchg
mov
nop
test
sub
pop
icebp
push
and
push
jg
ret
xlat
loope
xor
cmp
xchg
mov
enter
es
popf
push
js
repz
push
push
or
jns
out
call
repz
in
addl
lds
or
test
xchg
enter
sysexit
mov
add
insb
adc
out
mulb
shlb
add
leave
xor
in
repnz
rcrb
mov
mov
int
clc
pop
outsl
cli
xlat
cmp
dec
pushf
xchg
outsb
push
xchg
push
outsl
mov
outsl
mov
or
cmp
adc
push
into
mov
leave
mov
fpatan
mov
ret
pop
test
mov
adc
push
popf
sub
ja
xor
pop
mov
mov
mov
mov
dec
mov
leave
sub
bound
cmp
adc
lock
sbb
pop
cmpsl
fimuls
sarl
inc
stos
mov
sahf
adc
jo
test
adc
jmp
shrl
shrb
stc
pop
push
jns
gs
cmp
scas
scas
cwtl
leave
pop
shll
push
cmp
stos
inc
inc
andl
movsb
push
call
sbb
cmovns
xor
inc
notb
incl
sub
loope
imul
fldl
cmp
dec
adc
popl
btr
or
cmc
notb
jnp
mov
xchg
push
mov
sbb
in
movsl
or
sub
or
cmpsl
adc
inc
subl
inc
fstl
add
movsl
outsl
ds
jne
add
dec
and
xor
jecxz
testl
mov
hlt
or
cmp
mov
scas
adc
enter
aaa
cmpsb
fwait
pop
fcmovb
enter
lea
arpl
sbb
fcoml
sub
xchg
xchg
aaa
xchg
out
mov
jb
lea
push
insb
add
cmovp
aaa
xor
jle
jo
xchg
outsl
xchg
mov
adc
sub
daa
scas
mov
jbe
xchg
and
jmp
repz
dec
sbb
addl
sarb
icebp
sub
mov
dec
cmpsb
fidivl
mov
jecxz
daa
std
jecxz
mov
xor
into
loop
jns
mov
sbb
pop
pop
sbb
xchg
mov
addl
test
js
nop
and
adc
add
xor
test
adc
jg
or
ja
testb
dec
mov
sbbb
std
and
sbb
push
repz
or
pusha
xor
add
sbb
xchg
insb
popf
cltd
mov
mov
sahf
ds
mov
mull
inc
push
adc
ja
mov
gs
test
add
dec
pop
into
out
mov
nop
repz
mov
mov
cltd
cmp
pop
sbb
icebp
pop
cmp
push
dec
cld
mov
xor
and
sub
pop
fs
mov
inc
jns
clc
aad
mov
repnz
adc
fwait
gs
cmpl
ja
inc
pop
inc
pop
sub
aam
popf
dec
fiaddl
cmp
or
mov
dec
fildl
jg
sarl
jl
shr
add
cwtl
test
jno
sbbb
pop
aaa
xchg
outsb
movsb
ja
es
test
mov
pop
xor
cmc
sti
bound
je
mov
push
rcll
mov
mov
aam
call
push
push
cmpb
xor
adc
mov
mov
cmpsb
inc
mov
dec
and
test
adc
xor
mov
in
ficompl
pop
shrb
push
dec
dec
lds
xor
lcall
mov
orb
sahf
inc
lret
lds
mov
mov
inc
sub
inc
orb
mov
mov
test
loopne
push
js
xorb
inc
in
add
inc
push
pop
mov
inc
icebp
push
sbb
out
outsb
outsl
or
movsl
lods
insl
ljmp
add
mov
shl
xlat
out
lahf
out
jns
mov
xor
leave
sub
jo
mov
cmpsb
mov
mov
les
dec
repnz
rcrl
cmp
xchg
scas
out
or
cmp
cmp
scas
push
xchg
arpl
sub
clc
push
out
gs
jle
cs
sarb
movsl
push
sub
cmp
fcoml
mov
pusha
js
cmp
xor
repz
mov
test
push
mov
mov
stc
icebp
lock
adc
and
jno
lea
mull
sti
sub
adc
mov
xchg
and
popf
cmp
clc
inc
iret
out
push
adc
inc
mov
lret
inc
xchg
roll
xchg
inc
inc
push
test
xchg
jecxz
dec
inc
mov
inc
sub
mov
fcmovbe
mov
addb
sub
int3
inc
pushf
mov
dec
iret
dec
jno
add
sub
dec
mov
lahf
ja
iret
lcall
cmp
int
inc
jmp
adc
and
sti
mov
pop
xor
sub
scas
or
dec
jle
in
dec
adc
dec
subl
icebp
aas
leave
inc
push
fldl
cmpsl
int3
insb
cltd
xchg
mov
lods
mov
enter
or
out
cwtl
movzbl
out
insl
icebp
icebp
mov
xchg
xor
pop
mov
sbb
aad
bound
lcall
test
into
mov
dec
test
adc
aam
xchg
and
add
xchg
dec
mov
mov
and
cmp
int3
cld
ss
out
mov
pop
sbb
lods
adc
adc
addr16
in
notl
add
imul
mov
lds
add
ljmp
mov
in
pop
inc
ja
fwait
xor
fimull
sbb
pop
fldcw
fwait
arpl
sub
push
mov
scas
xchg
jge
or
ret
push
jle
mov
adc
mov
out
push
shll
jle
orb
daa
je
fstpt
push
jae
dec
imul
sub
cmp
jo
push
sbb
shr
and
xchg
mov
xor
and
outsl
add
mov
xlat
pop
cmp
sbb
mov
popl
mov
stos
cmp
scas
xor
movsl
or
shlb
push
scas
mov
mov
out
lahf
testb
das
in
insl
xchg
pushf
cmc
orl
xorb
xchg
push
push
and
xchg
xor
sbb
movsb
scas
push
cwtl
mov
cmp
adc
gs
jge
inc
cmp
push
int
and
andl
xchg
data16
clc
xchg
or
lcall
mov
test
xor
mov
ja
rcr
lret
aaa
pop
pop
js
stc
mov
ljmp
lock
test
sub
mov
pop
adc
mov
shrl
shr
sbb
daa
jo
push
cmp
testb
cvttps2pi
fwait
popf
or
scas
mov
stos
adc
lea
and
and
sbb
cwtl
insl
inc
inc
out
fdivs
pop
sub
into
mov
push
out
jecxz
cltd
mov
xchg
ja
outsl
inc
push
fdivrl
scas
and
add
xor
cmp
andl
inc
hlt
jg
sbb
xchg
mov
pop
imul
add
fisubs
popa
pop
bound
inc
data16
addr16
mov
outsb
inc
jbe
mov
sub
shl
push
sarl
sbb
test
add
inc
fistl
xor
fldt
push
sbb
insl
pop
test
mov
in
and
sub
dec
sbb
sbb
loop
sbb
mov
insl
pusha
movsb
cwtl
sbb
fisubl
fidivrl
jl
jp
xor
adc
fsubl
movsl
ja
mov
xchg
movsb
cmc
xchg
orl
jne
and
jp
jns
pop
imul
repnz
ljmp
mov
jecxz,pn
ret
and
mov
call
repz
push
test
xor
mov
sbb
mov
jge
fisubl
or
adc
mov
xchg
jno
fwait
test
push
push
les
cmpsb
or
pusha
inc
iret
dec
jle
in
pop
sbb
incb
jecxz
into
test
mov
mov
clc
loop
scas
scas
in
mov
inc
push
jecxz
pusha
popa
cmp
adc
scas
sub
jbe
jne
fsubs
js
cli
ss
pop
inc
out
pushf
test
lock
sahf
and
or
mov
stos
xchg
mov
or
push
mov
fnstsw
add
lods
push
mov
insb
lret
lahf
jnp
popf
stos
jmp
cmp
sbb
lods
sti
fdivrp
mov
je
dec
notl
mov
lret
sub
rdmsr
inc
adc
stc
xchg
cmp
cmp
inc
sub
nop
inc
cmc
pop
pop
sahf
hlt
mov
sahf
inc
out
enter
mov
sahf
shrb
lret
xorl
push
test
add
rol
scas
xor
cwtl
fbstp
aam
xor
or
hlt
in
cmp
in
rcrb
jnp
cmp
jno
pop
call
mov
and
enter
inc
sbb
stos
jns
sbb
and
jo
jl
hlt
repnz
inc
mov
jle
arpl
xchg
push
scas
aad
out
adc
jb
jns
mov
shrl
push
pop
dec
pop
cmp
or
test
loop
scas
daa
addr16
pop
xor
mov
lods
mov
cmp
jnp
lret
and
std
je
clc
in
fadd
insl
popa
pop
movsb
push
int3
ret
popf
jo
adc
dec
imulb
jp
push
mov
lds
loop
lds
les
cmp
shrl
pushf
cmc
test
jle
dec
outsl
fistps
sbb
les
iret
gs
nop
cmc
clc
mov
sub
sarl
add
pop
dec
icebp
mov
std
outsb
jp
pop
mov
cs
pshufw
push
cmpsb
dec
cmp
and
dec
loop
add
out
into
addr16
movsb
sti
dec
cld
out
lcall
push
loopne
cltd
loopne
lcall
push
mov
in
cli
cmp
xchg
mov
dec
pop
mov
mov
cmpsl
pop
adcb
dec
sub
dec
pop
scas
loopne
out
pop
jnp
mov
mov
jg
cli
lcall
mov
insl
add
and
sti
mov
out
mov
je
lret
jmp
adc
cmp
ljmp
mov
insb
lahf
imul
int3
sub
fwait
test
imul
push
addr16
pop
mov
or
mov
pop
add
fadd
jge
xchg
xchg
inc
xchg
fcoms
inc
mov
aad
mov
lock
mov
mov
sbb
and
xchg
shll
stos
outsb
xchg
lret
fdivrl
push
sub
xchg
cli
lds
push
lods
jns
punpckhdq
pop
adc
adc
loopne
xor
pop
jo
xor
sub
and
add
sbb
pop
xchg
cs
dec
insl
inc
popa
sbb
mov
xchg
dec
ret
clc
sahf
cmpsl
mov
sbb
and
jp
in
movsb
fsubrl
bound
pop
cmpsb
movsl
sti
int
dec
mov
pop
addr16
pusha
iret
pusha
int
or
pop
int
movsl
adc
jg
sahf
loopne
js
pusha
or
adc
out
pop
mov
mov
popa
int3
xchg
shl
pushf
adc
fsubrs
dec
jnp
push
cli
gs
dec
imul
push
cmpsl
xchg
cmp
daa
dec
mov
rolb
and
mov
les
and
jmp
and
outsb
jns
mov
add
xchg
fchs
sbb
jl
stos
mov
leave
add
ja
push
les
xchg
dec
or
xlat
pop
mov
pop
xchg
dec
xor
daa
jmp
add
add
sub
sbbb
pop
mov
std
pop
cltd
int
push
sub
add
push
xor
stos
xchg
icebp
mov
jbe
popl
data16
cmpsl
fwait
add
cmp
and
lret
or
jno
sub
mulb
les
jle
inc
add
stos
or
push
pop
loopne
mov
addr16
cmp
loope
mov
loopne
jle
sbb
mov
lods
lcall
jp
stos
add
pop
jbe
xlat
inc
sbb
fucomi
jl
fnstcw
popf
divl
mov
mov
aas
add
lds
add
push
cmp
cmpsl
push
lds
jne
mov
out
cmp
leave
adc
push
cmpsl
out
pop
mov
into
aad
xchg
inc
je
call
cmp
jecxz
lods
lret
cltd
mov
and
jbe
jmp
jp
inc
pusha
movsl
ret
mov
dec
adc
dec
stc
ss
pop
inc
in
inc
push
bound
xchg
mov
test
scas
ds
mov
add
jnp
xchg
loopne
sbb
lods
subb
push
mov
xchg
add
cmc
ljmp
mov
testb
inc
jecxz
xchg
push
sbb
inc
and
or
pop
lds
push
inc
dec
fmuls
shll
lret
sbb
mov
icebp
imul
xor
cmp
dec
mov
push
mov
or
out
pop
pop
push
jl
dec
sbb
sbb
cmp
loope
hlt
inc
add
int3
cmpsl
in
sub
test
pop
scas
push
jmp
and
inc
cmpsb
push
lret
insb
xchg
stos
pop
out
clc
shr
mov
jle
mov
xlat
movsl
adc
sahf
mov
and
nop
lods
cmp
sub
dec
sbb
push
push
mov
call
hlt
sbb
inc
int
adc
or
sbb
aam
insb
roll
stos
push
loop
cmp
scas
inc
sbb
out
cli
xor
and
push
leave
iret
mov
outsb
and
movsb
mov
shrl
xchg
xchg
bound
arpl
or
jge
clc
mov
leave
push
jge
or
imul
push
ljmp
out
lea
inc
push
stc
adc
daa
repz
pop
popa
pop
neg
fsin
ja
out
inc
test
add
mov
daa
out
in
repnz
add
mov
mov
popa
sub
test
and
adc
sub
push
mov
pop
scas
loope
mov
shlb
push
sub
xchg
adc
das
push
daa
or
lock
mov
imul
mov
je
xchg
sbb
aad
mov
stos
in
fwait
mov
shl
subb
lea
std
test
inc
lock
xchg
fnstcw
in
jns
outsb
add
cmp
ljmp
test
and
push
addl
fdivr
push
xor
nop
sub
cmp
enter
dec
cmp
cmp
cmp
cmpsb
cmpb
fsubs
call
test
dec
pop
lcall
popf
ret
sahf
test
aaa
mov
nop
cmc
popf
lahf
arpl
mov
lcall
sub
sbb
mov
mov
xchg
out
ja
out
inc
jb
nopl
jmp
pop
sbb
outsl
arpl
pop
mov
add
call
test
jl
pop
popf
popf
ret
ret
xor
rcrl
rclb
jecxz
outsl
and
gs
lock
xor
nop
xor
sub
fidivrs
push
xor
dec
add
out
fwait
push
rorb
xor
xchg
call
fdivl
xchg
in
xchg
imul
loope
dec
cld
inc
jmp
out
xor
lock
cltd
add
lock
cmp
ret
sub
stc
pop
or
leave
mov
aas
ja
cmc
sub
ss
jne
sahf
xchg
and
cmp
cmp
jno
aad
or
cmc
jne
push
mov
shrl
mov
hlt
mov
mov
jge
rol
sbbl
sub
jbe
mov
das
shl
jae
aas
jbe
test
adc
aas
and
mov
adc
mov
mov
and
sbb
popf
int
inc
insb
push
lcall
or
sbb
clc
push
push
fnstsw
and
xchg
xor
shrl
ljmp
stos
or
notb
xor
fwait
jo
fsubs
dec
mov
ljmp
xor
lret
xchg
dec
mov
push
cmpsb
sbb
jnp
pop
adc
mov
repz
inc
sbb
cmpsb
xchg
jbe
sub
pop
mov
jbe
sbb
xor
sti
mov
inc
in
bound
ss
jmp
insb
fsubrl
mov
sub
rorb
ljmp
mov
out
adc
jmp
or
out
xchg
mov
andl
adc
xchg
inc
mov
dec
daa
lds
icebp
jle
out
adc
adcb
mov
adc
test
adcb
xor
bound
or
test
pop
sysenter
jns
lods
div
outsb
push
je
loopne
jmp
add
loop
mov
sahf
xorl
lret
or
sub
imul
push
mov
fmuls
pop
inc
pop
jb
jmp
ljmp
clc
scas
dec
pusha
add
mov
xor
pop
aam
fnstcw
repz
nop
inc
dec
cmp
int
jbe
fucomip
in
sub
lods
inc
xor
dec
adc
push
sub
cmp
jecxz
clc
jmp
dec
test
pushf
pop
mov
arpl
jge
scas
lahf
xchg
movsl
addl
outsl
outsl
mov
orl
mov
sbb
inc
dec
mov
out
push
ja
test
repnz
mov
test
xor
inc
sbb
mov
mov
faddl
inc
adc
mov
icebp
mov
jae
mov
push
adc
dec
addr16
rcrb
mov
mov
dec
xchg
add
jae
into
rcll
push
pop
les
pop
gs
nop
enter
sti
mov
push
and
ret
aad
fs
sub
testl
call
out
sub
xchg
xchg
fcmovne
inc
xlat
mov
loope
push
rcrl
out
or
mov
inc
int3
aad
clc
mov
inc
mov
dec
add
out
or
int
jnp
inc
das
pop
sti
xor
add
adc
int
lret
test
pushf
lds
jg
mov
pop
xor
les
nop
out
push
inc
or
outsl
fisubs
popa
aam
ror
cmpsl
mov
mov
push
mov
xchg
jnp
mov
cmp
outsb
mov
xor
pushf
inc
xchg
mov
or
pop
lods
lcall
mov
bound
sub
repnz
lods
int
ret
cmp
pop
xchg
pop
cmp
aaa
push
icebp
adc
mov
fs
mov
testl
mov
addr16
ret
pop
xchg
and
ljmp
mov
bound
adc
push
mov
imul
js
adc
pop
imul
lods
xchg
pop
mov
icebp
aad
decl
repnz
es
pop
inc
dec
andb
sbb
push
xchg
push
xchg
lds
xchg
or
jg
mov
mov
cmp
clc
inc
in
fwait
jecxz
aad
fisubs
sahf
xchg
adc
cwtl
ltr
push
aaa
insl
add
popf
stos
xchg
jae
xchg
outsl
push
push
inc
adc
jo
xor
cmp
sbb
stc
jbe
inc
test
dec
adc
lods
and
js
out
pop
mov
xchg
push
lcall
pop
jns
push
inc
cld
push
fs
cmpsb
bound
sbb
outsb
fcoml
daa
mov
mov
jmp
xchg
dec
out
mov
lods
mov
push
int3
and
cmc
push
cmc
mov
cmp
pop
jecxz
jns
xor
cmp
sahf
fs
adc
mov
scas
pusha
push
mov
lods
xchg
repz
push
cmp
cmp
jnp
test
std
xor
insl
test
loope
jns
mov
jge
cmc
js
push
mov
pop
jo
daa
sti
subl
xchg
ljmp
out
or
push
out
pop
repnz
mov
push
repz
mov
rcll
xlat
rcl
mov
inc
jbe
add
or
jno
dec
inc
pop
jmp
jecxz
pushf
enter
xchg
fwait
jecxz
or
and
in
test
movsb
fisubrs
out
lcall
mov
jb
arpl
mov
cltd
inc
sbb
lret
mov
out
cmp
jb
js
ja
fcompp
ljmp
adc
and
cwtl
or
jae
jl
jno
cmpsl
ja
js
fiaddl
loop
and
je
negb
sbb
mov
pop
pop
xchg
aas
jmp
lret
xor
sub
ret
xor
lods
xchg
std
iret
pop
adc
outsb
inc
lock
pop
test
and
mov
adc
stos
aaa
aaa
mov
int
mov
inc
fisubrs
scas
add
push
xchg
xchg
jp
insl
lret
mov
cs
lret
negb
fs
mov
push
xor
ret
pushl
data16
ret
daa
gs
imul
rcrl
addr16
mov
fcoms
mov
push
out
inc
stc
test
dec
rclb
add
outsl
xor
cld
push
mov
fdivs
cmpsb
mov
popf
fbld
fucomp
jg
xchg
or
jge
or
cmc
add
xor
jne
out
mov
test
out
xor
dec
jno
out
xchg
mov
mov
ja
icebp
lcall
filds
lahf
sub
shll
int
orb
adc
ror
das
repnz
mov
mov
ret
popa
ret
mov
stos
push
test
sub
add
inc
shlb
icebp
mov
arpl
cmp
xor
outsb
inc
inc
xchg
jae
xchg
frstor
mov
or
inc
ret
mov
jle
sahf
decb
das
push
sbb
fldln2
jmp
rcrl
repnz
in
hlt
xor
mov
mov
adc
das
mov
cmp
xor
inc
shl
leave
enter
cmp
mov
movsb
aad
inc
stos
ret
cltd
shlb
lods
out
ret
dec
xchg
add
sub
cwtl
nop
out
hlt
jg
mov
repnz
loopne
mov
adc
push
cmp
or
pcmpgtw
adc
fwait
dec
lock
pop
adc
popa
jo
lcall
mov
popa
pop
ds
repnz
divb
xchg
push
or
in
sahf
jle
xchg
xchg
sti
imul
pusha
fistps
stos
arpl
incb
xor
cmp
arpl
xchg
das
ljmp
sub
pop
fists
sub
sti
test
fidivrs
xor
fldcw
mov
or
cmp
daa
jno
stc
arpl
dec
lret
cmp
jo
mov
adc
xchg
stos
xchg
popa
mov
xchg
adc
iret
push
mov
jecxz
out
or
loop
adc
in
gs
mov
das
movsb
test
hlt
hlt
cmpb
repnz
das
into
stos
addr16
je
or
xlat
shld
or
add
jecxz
imul
pop
je
mov
insb
pop
lods
mov
pop
into
stos
or
xchg
sub
popf
shr
fsubrl
int
in
xor
push
dec
mov
movsl
imul
loopne
jns
adc
mov
cld
inc
adc
shl
or
pop
ret
jmp
iret
rcrl
cmc
pop
mov
cmp
pop
addr16
mov
sbb
js
aam
inc
ja
cmpsl
pop
aaa
dec
mov
pop
sbb
push
xchg
aam
mov
in
dec
scas
popf
lock
and
mov
out
std
and
sbb
popa
cmp
jb
xor
push
push
loope
pop
xchg
inc
mov
xchg
pop
jmp
xchg
and
mov
push
test
je
lea
mov
loopne
shr
lock
mov
sbb
dec
cmp
bnd
shlb
inc
add
jo
sub
in
pop
call
push
cmpsl
xor
adc
mull
fstl
jg
inc
ja
ret
mov
inc
inc
repnz
inc
sbbl
adc
mov
les
cmp
sbb
scas
or
sti
inc
pavgw
rcr
pop
mov
mull
stos
xchg
sarl
aaa
adc
mov
sbb
cli
lods
mov
repz
xorl
in
push
push
adc
fbld
adc
ret
cmp
pop
add
fmul
xor
mov
ss
mov
jl
xchg
lret
inc
repnz
cmpsl
inc
push
add
repz
sbb
ljmp
sti
mov
jg
sti
mov
rcll
push
fs
mov
cmpsb
adc
inc
xchg
pop
enter
mov
dec
les
add
scas
test
aaa
stos
mov
scas
imul
push
dec
or
mov
andl
push
cld
cmp
add
lahf
scas
pusha
jle
aam
js
dec
ss
icebp
mov
mov
mov
push
aad
cmp
dec
in
dec
and
push
aas
aas
fdivl
adc
mov
jb
mov
mov
ficoms
cmp
pop
test
shrb
out
mov
add
lock
sub
bound
sbb
fsts
test
int
test
mov
test
mov
loop
sahf
js
sbb
cmp
mov
mov
sahf
mov
roll
jge
pop
adc
xor
push
lret
enter
adc
das
mov
mov
ret
dec
push
sar
jae
push
jne
inc
fimuls
xor
mov
fucom
movhps
inc
and
cmpsl
mov
out
outsb
add
jecxz
pop
mov
jne
jl
xor
adcl
repnz
imul
push
pusha
test
lods
daa
imul
mov
aas
ljmp
push
popl
es
dec
repnz
xor
dec
movsl
stc
out
jle
mov
sahf
sbb
mov
loop
fsts
sbb
push
jmp
int3
jno
jae
lea
fs
mov
cwtl
scas
mov
xor
cli
xor
sbb
lods
jle
iret
sbb
dec
in
xchg
stos
ficomps
pop
push
jbe
mov
pop
and
cmovbe
dec
jp
push
aaa
jnp
jmp
dec
leave
das
xchg
pop
xlat
gs
mov
incb
lea
xchg
ret
jb
push
ss
mov
fistpl
mov
ret
push
repz
lds
shrl
cmp
sbb
call
popf
xchg
mov
and
mov
mov
das
cs
mov
popf
stos
dec
jg
xchg
shrl
adc
nop
or
into
mov
cwtl
adc
ss
movsl
imul
jp
cmc
idiv
lods
repnz
or
lock
and
and
xchg
fwait
out
adc
and
out
ja
pop
push
outsl
js
mul
sub
cmp
stc
int
jb
xor
xchg
pop
into
push
or
mov
mov
pusha
aaa
pop
in
nop
leave
out
cltd
and
xchg
pushf
out
and
ljmp
pop
fmuls
and
or
notb
jns
fisubrl
fstpl
lret
out
imul
mov
pop
outsb
int3
pop
fdivrl
mov
mov
inc
xor
fwait
pop
mov
inc
pop
int3
ficompl
nop
jo
dec
xorl
push
mov
cmp
xor
aad
ret
pop
push
pop
inc
loope
xchg
mov
out
or
xchg
add
jbe
or
mov
or
mov
aad
dec
adc
das
adc
mov
pop
dec
incl
jmp
mov
aam
sub
ljmp
fnstcw
jmp
adc
cmp
mov
cmp
data16
sbb
pop
push
push
sbbb
movsb
jne
imul
rcll
rcl
jae
arpl
jle
ja
imul
insb
dec
jg
or
outsl
rcrl
std
stos
rolb
cmp
jle
sbbb
orb
xchg
jnp
adc
and
mov
pop
cltd
add
int
mov
ret
inc
enter
and
xor
jmp
inc
cmpsb
inc
loop
push
push
lcall
repnz
jp
jne
mov
test
and
push
adc
in
push
jle
mov
cmpsb
cmp
pop
aad
cmp
lds
lret
push
shl
jne
faddl
fwait
dec
repnz
or
xchg
xor
cmp
push
in
inc
cld
pop
aaa
inc
or
cs
insl
es
mov
xor
lea
imul
cwtl
movsl
ret
scas
mov
push
lret
dec
lea
cmp
loop
sbb
dec
cmp
jb
fsubs
cld
cld
popa
pop
push
add
insb
pop
xor
xchg
cmpsl
and
sub
add
jno
sbb
sbb
mov
in
daa
pop
rcr
incl
push
lahf
loope
lds
sahf
or
inc
dec
xor
pop
push
sbb
inc
je
shrl
arpl
movsb
xor
fisttpl
rcrl
inc
stos
imul
loope
push
pop
inc
sub
xchg
or
sarb
mov
clc
in
jb
loope
xor
inc
cmp
jns
fidivl
call
push
and
push
xchg
xor
pop
aad
addr16
stc
js
mov
pop
sahf
xchg
pop
mov
xor
cltd
into
adc
dec
xor
jne
sub
pushf
push
mov
aaa
jge
outsl
in
inc
push
daa
clts
xchg
mov
jmp
mov
mov
mov
fwait
cmc
loop
jmp
pop
lret
or
mov
adc
mov
mov
xor
mov
xchg
add
xor
mov
setg
xchg
mov
dec
sti
mov
cmp
push
filds
das
pop
xor
test
adc
popl
loope
and
das
lcall
sub
lcall
adc
or
jl
cmp
inc
xchg
cld
inc
mov
mov
in
adc
mov
mov
jmp
xchg
push
shrb
lahf
cmp
adc
add
jl,pn
jae
dec
movsl
and
out
imul
test
xchg
repnz
add
ss
mov
sbb
ret
lret
test
adc
and
or
pop
pop
mov
scas
adc
xor
cmp
cmpsb
lea
repz
jecxz
es
in
cmp
sbb
cmp
idivb
adc
or
pusha
ret
test
pop
enter
xlat
in
adc
lahf
enter
sub
jno
imul
sub
aam
loopne
add
sbb
add
pop
add
xor
dec
and
fstps
cmpsl
xchg
add
xchg
js
ja
aaa
repz
sbb
in
mov
pop
or
cmp
cmpl
imul
jmp
sbb
xor
lea
adc
sub
or
xor
pop
or
push
mov
roll
xchg
vsqrtpd
mov
imul
and
test
btr
xor
sub
jg
pop
cmc
mov
imul
ficoml
or
lods
sbbb
mov
or
and
test
sub
mov
inc
imul
cmp
int3
cmp
mov
out
into
sbb
xor
arpl
or
lcall
push
adc
jp
pop
dec
mov
out
and
negl
jp
mov
mov
and
fs
cs
mov
mov
pushf
sbb
fnstcw
adc
lds
mov
pop
rcrl
sub
cld
mov
mov
sub
mov
in
hlt
stc
inc
scas
sub
push
insl
ja
dec
aad
push
adc
test
sub
pop
fbld
xor
shrl
fisttps
aam
jno
fidivrl
jge
adc
mov
adc
orl
outsb
push
sbb
push
push
inc
insl
jge
fistps
mov
fdivrs
dec
daa
pop
push
mov
sbb
int3
push
je
pop
pop
push
cli
pop
push
outsl
and
and
or
nop
lahf
pop
psubd
pop
push
push
sahf
mov
mov
mov
out
mov
daa
inc
stos
sub
clc
out
cmp
stos
mov
sbb
in
sbb
pop
cmpsb
push
js
dec
push
mov
out
or
cmp
hlt
int
cmp
outsb
adc
stos
addb
iret
sub
insb
lcall
cmc
mov
lods
inc
sub
test
jno
enter
insl
mov
mov
xor
cmc
push
movsb
jns
pushf
enter
sub
push
add
push
sub
movsb
dec
xor
push
pop
jp
cmp
adc
jno
and
ss
cmp
inc
inc
sbb
inc
mov
ret
ja
insb
xchg
pop
insl
repz
xor
addr16
loope
inc
inc
iret
and
adc
push
jle
cmp
mov
pop
arpl
jne
shll
into
js
push
lcall
or
jmp
or
and
js
pop
fldenv
and
out
inc
enter
push
xchg
shlb
inc
fdivr
fstps
adc
push
xchg
test
fldcw
push
rcrl
sub
sub
cmp
outsl
xor
jo
cmp
cmc
push
js
filds
mov
dec
pop
lea
mov
decl
push
jg
into
sahf
xchg
outsl
cmpsb
fists
xor
push
sbb
xchg
jns
mov
insl
adc
push
test
je
sub
pop
negb
inc
pop
fldln2
scas
out
lret
and
mov
pop
lret
out
mov
and
dec
outsb
repz
sub
adc
sub
cmp
aaa
add
cmp
stos
and
xchg
push
dec
sbb
jno
ss
push
stos
int3
cmp
add
repnz
stos
fdivl
adc
push
jl
adc
cmp
dec
gs
lods
mov
das
inc
sbb
push
call
clc
adc
fdivl
imul
out
xchg
push
repnz
inc
lods
pop
iret
pop
push
stc
dec
cmpsl
out
cmp
add
ror
popa
dec
push
cld
fmul
sub
mov
jle
and
in
add
or
nop
push
mov
std
mov
inc
mov
push
xor
pop
push
popl
fs
outsl
xchg
movsb
sahf
inc
imul
cmp
xchg
adc
pop
mov
mull
add
sarl
push
aas
sub
dec
faddl
out
test
mov
xlat
in
negl
in
or
and
sbb
sbb
sahf
ss
and
sahf
movsb
jnp
mov
push
push
int3
inc
inc
xchg
or
cmp
jbe
out
repnz
adc
loopne
sbb
cmpsb
jbe
aam
ds
aam
popa
fnstsw
mov
lods
or
insl
pusha
adc
loopne
cld
dec
dec
adc
outsl
shll
cwtl
sti
into
adc
add
rcl
mov
sub
lret
adc
mov
clc
adc
imul
xchg
loop
test
or
xchg
push
in
adc
std
outsb
jmp
push
popf
pop
lock
fildll
push
mov
push
dec
fidivl
repz
ret
add
jecxz
push
xor
push
mov
int
push
or
loopne
or
dec
cmp
mov
inc
jo
add
mov
cmp
sbb
cltd
out
stc
int3
int
out
jbe
lret
cmpsb
cmp
jo
std
mov
in
pop
xchg
int
fstpt
cmp
icebp
inc
sbbl
mov
and
mov
add
adc
in
sub
mov
mov
daa
inc
nop
and
ficompl
adc
fs
adc
clc
das
mov
aas
hlt
jg
adc
pop
mov
mov
inc
arpl
add
in
lds
stc
jp
cltd
scas
inc
adc
jb
or
xor
xor
movsb
dec
pop
sbb
aas
cld
mov
addr16
push
cmc
push
outsl
sbb
mov
addb
call
and
sahf
es
js
and
pop
sub
dec
xor
enter
ret
clc
xchg
push
push
lods
jo
mov
mov
inc
inc
cmpsl
adc
mov
inc
xchg
shl
sub
jae
dec
lods
or
and
fsubs
sbb
fisttpl
loop
sub
inc
push
jmp
pop
outsl
push
mov
sbb
jne
push
cmpsb
ss
dec
enter
dec
mov
mov
outsb
into
jmp
aad
lock
mov
xor
push
or
push
sbb
leave
xlat
mul
inc
jne
imul
fstpl
or
mov
faddl
lret
xchg
lods
aam
xor
rorl
ja
mov
pop
inc
das
out
cmp
fdivrl
cmp
jmp
push
mov
pop
nop
dec
mov
lret
jle
fisubl
fwait
jge
imul
jbe
pop
inc
lahf
and
stos
sub
sub
test
sub
cmc
xlat
add
pop
push
cmc
addl
pop
daa
add
ds
xchg
or
pop
push
leave
aaa
out
jmp
xor
sbb
xor
pop
cmp
jp
int3
loope
jecxz
imulb
aas
jo
fisubs
daa
xchg
scas
ja
mov
jnp
lret
cmc
repz
xor
mov
jg
aam
fldt
and
inc
pop
jl
test
imul
fwait
xor
rcrb
sahf
pop
adc
sbb
inc
cli
push
xor
es
sbb
cmp
arpl
sub
mov
push
movsl
xor
or
sub
cmp
fldl
push
mov
inc
xor
das
add
test
shlb
in
jbe
leave
clc
sahf
out
mov
inc
adc
sahf
sahf
sbb
fisttpl
js
test
push
sub
push
sub
sbb
pop
icebp
mov
sub
dec
fcmovu
fnstsw
les
dec
out
xor
popf
in
imul
es
xor
fwait
arpl
lock
or
cmpsb
idivb
cwtl
mov
jge
out
jmp
dec
dec
push
test
lahf
fs
dec
call
sbb
adc
pop
and
mov
outsl
loopne
aad
lods
mov
push
leave
js
popl
rcrb
aaa
push
sahf
mov
pop
std
in
xchg
or
ret
xor
in
enter
push
mov
lock
out
pop
in
xchg
lcall
add
jge
sbb
cmp
sbb
ljmp
add
lods
test
in
mov
add
popa
pop
jle
sub
mov
dec
lods
pop
ljmp
sbb
mov
jge
lret
jmp
aam
lock
or
cmp
mov
ror
inc
arpl
xchg
test
sbb
ja
xchg
and
mov
mov
xchg
idivb
or
out
mov
jo
andb
mov
lods
push
test
adc
lret
or
push
pop
fiaddl
pop
mov
sub
andb
push
mov
mov
je
and
pop
out
push
orb
sub
push
jge
jnp
nop
aas
into
stos
jmp
lock
int
jmp
sarl
dec
or
pop
cmp
mov
pcmpeqw
cmp
pop
xchg
cmpb
ja
rcl
pop
pop
jmp
out
mov
ja
jbe
mov
push
jp
leave
icebp
divl
sbb
dec
jmp
pop
push
js
fsubrl
imul
jne
dec
dec
cmpsl
jne
push
in
jl
jno
loope
loopne
fistpl
adc
pop
xchg
mov
icebp
sbb
ficompl
adc
pushf
push
push
rorl
push
mov
lds
sar
nop
rclb
adc
mov
or
jl
jnp
xor
andb
sub
mov
stc
out
cmp
test
out
ret
or
push
mov
mov
mov
lahf
xchg
and
add
push
aaa
dec
lahf
mov
scas
sbb
cmpsl
sub
add
mov
lock
popf
dec
and
adc
jecxz
jmp
rorb
sahf
mov
pop
hlt
repz
sbb
sbb
mov
in
push
mov
xchg
sub
popa
xlat
ret
movsb
loope
mov
and
xlat
jge
jge
mov
repz
in
mov
and
dec
in
imulb
fmulp
push
repnz
rcrb
push
repz
sbb
inc
das
movsb
int3
sbb
pop
sub
sbb
add
dec
scas
or
inc
cs
sbb
pusha
add
xor
mov
inc
sbb
mov
mov
push
scas
mov
lret
adc
shll
pushf
fmuls
sbb
lods
repz
in
xorb
je
and
or
insb
add
cs
jmp
movsb
push
cmpsb
lcall
mov
and
adc
inc
ret
sub
xchg
sarl
lret
mov
lret
ret
push
sti
or
mov
les
xor
popa
daa
inc
js
add
dec
adc
pop
out
mov
mov
fsubrs
stos
jae
push
out
jle
or
mov
xchg
sub
aam
dec
pop
xor
mov
rcrl
outsb
mov
outsb
mov
in
fisttpl
xor
pusha
inc
sub
and
cmc
mov
in
sub
jno
outsl
xor
fstpl
or
add
ror
jle
ret
repz
xor
jbe
push
inc
popf
push
xlat
sbb
ds
cli
mov
cwtl
and
dec
mov
jecxz
aaa
mov
xlat
out
xchg
adc
test
lcall
inc
sahf
loopne
mov
mov
cs
push
fstpl
stos
hlt
jmp
ja
cltd
mov
mov
ret
mov
dec
sub
outsb
into
xor
jg
mov
nop
mov
aaa
call
movsb
mov
or
scas
popf
repnz
xor
and
fcoml
inc
jb
push
xor
or
dec
cmpsl
cmp
xchg
xchg
add
cltd
xchg
shl
les
pop
rol
jo
add
xchg
jo
or
add
enter
call
lds
pushf
sub
fistps
out
bound
filds
aad
addr16
sbb
das
inc
sbb
rcrb
inc
mov
je
and
or
shl
ror
loopne
adc
insb
xchg
mov
push
ret
push
mov
mov
or
add
lcall
jb
xor
push
bound
sub
imul
xor
rolb
popf
pop
cld
push
jmp
cmp
mov
enter
rcrb
test
hlt
aam
push
push
adc
cmpsb
negb
icebp
sub
adc
lea
mov
pop
dec
out
shl
dec
in
jns
pop
lods
add
mov
lock
nopl
add
xchg
sub
test
not
cmp
lret
xor
ret
sbb
in
xchg
icebp
loop
outsl
iret
loope
add
out
or
mov
int
sbb
shl
aam
jmp
xor
repz
or
jl
mov
ss
mov
or
in
xorl
sub
je
mov
cmpsb
lahf
jecxz
and
mov
imul
xchg
mov
mov
out
testl
lcall
dec
jb
cmp
aam
outsb
sbb
inc
dec
cmc
cltd
data16
push
dec
xlat
lock
inc
ds
xchg
inc
or
sub
jecxz
dec
adc
ljmp
and
cmp
cmpsb
lods
xor
stc
push
loope
movsl
or
mov
jae
lods
adc
xor
mov
push
push
inc
fiadds
dec
xchg
dec
fistpll
xchg
mov
jle
jmp
sbb
stos
jge
aad
xor
mov
fwait
xchg
adc
mov
fcmovne
repnz
mov
fisubl
push
jo
fnstsw
mov
lods
scas
lret
or
insb
out
int3
push
push
pop
jle
dec
pop
inc
bound
cli
call
mov
sub
out
mov
mov
mov
outsl
cmp
out
dec
mov
movsl
sbb
push
push
fcoml
xchg
mov
cmpb
cmc
push
or
loop
cmp
shlb
stos
insb
shlb
dec
lds
push
fdivs
inc
push
jns
sub
sub
xchg
sbb
rorb
sub
dec
push
aas
adc
sar
jns
mov
and
push
out
int3
adc
cs
lock
loope
iret
push
jl
shll
and
inc
jb
bound
popl
adc
ja
pop
dec
sbb
sub
loopne
push
ss
add
sbb
cmp
shrb
fs
pop
mov
xchg
ret
xor
sub
sahf
scas
lcall
xor
pop
in
mov
gs
mov
mov
mov
cmpb
jae
sti
shl
mov
shlb
stc
jne
in
daa
mov
pop
inc
testb
or
stos
sbb
testb
xor
iret
push
out
lcall
fwait
jae
or
test
ss
dec
test
aaa
imul
cmp
aas
and
dec
jmp
daa
in
out
mov
adcl
movsb
or
ja
fwait
sub
pop
xchg
addr16
mov
mov
mov
mov
popf
fimull
or
outsb
nop
and
cmc
out
xchg
lcall
daa
cmp
dec
and
loopne
stos
push
xor
push
push
push
fcoml
xor
int3
enter
out
sub
pop
cmp
inc
fcoml
jb
neg
and
sahf
movsb
xchg
aam
or
in
ds
xchg
in
hlt
xor
adc
scas
mov
jmp
jecxz
lret
mov
add
loop
iret
inc
loop
inc
mov
push
insl
mov
pop
outsl
jmp
mov
pop
cwtl
xchg
cli
dec
insb
adcb
or
cmp
popf
adc
in
inc
xorl
je
out
xlat
outsl
mov
scas
fwait
les
int
push
cmp
dec
mov
add
arpl
xlat
daa
icebp
add
xchg
cs
add
lcall
pushf
test
and
pop
or
loopne
cmp
sub
lret
cmp
div
loopne
adc
imul
sub
dec
das
adc
jg
cmc
mov
lock
lret
sub
fildll
pop
inc
push
lea
dec
ja
mov
xor
mov
mov
xchg
cmpsl
cmp
clc
xchg
push
insl
push
daa
rcrb
xchg
ja
and
lods
scas
mov
or
shrl
add
aad
sbb
stos
loopne
ja
bound
jno
xor
std
add
icebp
das
xchg
and
or
mov
rolb
stos
stc
adc
cmpsb
dec
out
scas
mov
stos
sbb
xchg
dec
jle
movsb
mov
inc
shrb
xor
sbb
sbb
dec
das
dec
insl
hlt
arpl
loopne
fistpll
mov
sbb
popa
push
dec
jb
enter
cmp
in
xchg
inc
push
and
enter
scas
mov
mov
cmp
push
repnz
and
stos
mov
or
dec
sub
cmpsl
popl
outsb
dec
in
out
mov
push
icebp
jmp
fiadds
dec
int
xchg
xchg
mov
into
push
push
arpl
mov
sbb
ret
sbb
sti
in
inc
jbe
pop
fs
add
push
pop
adc
pop
jp
stos
fmulp
repnz
xchg
scas
mov
int3
inc
adcb
mov
pop
stos
jmp
xchg
jmp
sarb
fstps
mov
fidivrl
or
fwait
out
test
dec
dec
xchg
push
add
mov
iret
push
add
add
lcall
xor
and
push
fnstcw
push
fcompl
cli
add
mov
mov
fs
cmp
push
mul
enter
iret
push
sahf
mov
outsl
mov
and
in
cmc
shl
std
cmp
push
js
daa
add
jg
repz
std
pop
sar
ss
jae
test
cs
sub
subl
xlat
push
sbbl
mov
loope
lea
rcrb
in
aas
inc
jns
xor
cli
pop
std
and
iret
popa
rclb
sahf
mov
adc
outsl
cmp
ljmp
hlt
out
aam
jae
testb
push
repnz
movsl
push
mov
pop
add
xor
lea
add
push
cwtl
cmc
adc
loope
ljmp
push
jmp
add
out
xlat
mov
and
jo
and
fidivrs
stc
cmp
popf
xchg
adc
std
sti
es
imul
mov
popa
lret
mov
fdivrl
inc
pop
in
mov
jns
jl
dec
outsb
jge
je
imulb
xchg
adc
pop
mov
fst
dec
xor
mov
push
inc
mov
sub
mov
xor
xchg
popf
mov
xor
popa
mov
hlt
hlt
cmc
lcall
xchg
stos
xchg
cs
mov
inc
push
fisttps
aam
fstpl
loopne
jmp
hlt
and
xchg
mov
mov
popf
jo
ret
push
dec
push
mov
shrl
out
idiv
je
adc
insl
mov
cmp
test
sbb
mov
push
and
sbb
ja
lea
sbb
mov
jge
jl
jle
mov
shrl
jbe
int3
xor
stc
jecxz
test
xor
aam
cs
and
mov
neg
fwait
testb
jg
xchg
leave
shll
popa
aad
ret
jg
fwait
int
sahf
movsl
lods
rorb
cmp
add
sub
sbb
je
push
enter
lahf
xor
call
pusha
imulb
and
mov
fstpt
mov
cmp
sub
xor
pop
adc
lahf
xor
dec
lods
or
fsubs
bound
shrl
xchg
or
jg
mov
adc
iret
les
xchg
xor
pop
rcl
xor
cltd
lock
test
xor
mov
mov
mov
and
lds
jnp
imul
pop
cmp
enter
rcr
imul
iret
push
push
out
rorb
adc
or
outsl
pusha
loop
xor
push
mov
fcmovnb
jne
xor
gs
mov
daa
add
enter
cmp
xchg
mov
mov
add
xchg
int3
clc
adc
inc
cltd
sbb
jecxz
pop
xor
push
stos
cmp
jge
cmpsl
xchg
xchg
and
testb
xchg
xchg
jne
jne
sbb
in
stos
mov
stos
jo
cwtl
pop
or
push
mov
in
mov
adc
sbb
pop
and
int
inc
ret
push
mov
pop
pop
push
pop
xchg
jo
mov
mov
push
push
adcl
xchg
fsubs
jle
sbb
mov
xlat
xchg
or
dec
pop
jle
fmul
push
cmc
lods
cwtl
stos
dec
in
dec
dec
data16
ljmp
xor
jg
retw
and
ljmp
cmc
stos
mov
xor
sbb
and
sti
insb
idiv
bound
pop
push
xor
mov
adc
add
cld
es
xor
ss
or
adcb
cmp
lahf
test
sbb
daa
add
cli
adc
jo
cs
dec
int
filds
jge
mov
lret
shr
in
jo
xor
inc
dec
icebp
lds
out
fwait
cmpsl
js
mov
mov
repnz
cli
adc
xchg
sahf
and
pop
repnz
mov
lahf
jmp
leave
rorl
aaa
add
mov
cmpsl
loopne
les
pop
pop
inc
roll
mov
jl
insb
xchg
dec
sti
inc
and
and
icebp
pop
imul
outsb
negl
pop
jmp
or
xlat
lods
and
pop
push
dec
movsb
sbb
or
cld
into
and
inc
adc
in
xchg
sub
shll
push
mov
mov
scas
pop
adc
adc
nop
xor
jg
xor
fistps
fsubrl
jmp
mov
mov
lret
or
adcb
cmpsb
pop
mov
lods
lods
mov
decl
test
das
leave
push
dec
or
jnp
mov
xor
add
adc
dec
in
lret
pop
test
cs
sbb
cmpsb
and
adc
mov
fucom
push
cwtl
inc
xchg
xlat
into
dec
hlt
iret
dec
not
xchg
pop
cmpsl
int
into
lret
icebp
push
add
aaa
pop
movsb
jmp
int
cmp
sub
jle
das
ja
aam
xchg
pusha
push
jmp
mov
mov
sbb
dec
xor
xchg
jb,pn
shlb
xor
adc
and
das
push
int3
icebp
pop
jge
xchg
mov
sbb
mov
jl
std
mov
enter
xchg
js
jmp
inc
arpl
lahf
mov
clc
mov
add
pop
mov
mov
and
xchg
push
mov
into
sub
int3
sub
rolb
push
sub
push
out
xor
pop
orb
popf
into
mov
inc
add
dec
xchg
scas
int
push
lock
ja
sbb
xor
int3
pop
lcall
clc
outsl
mov
stos
lahf
push
pushf
mov
inc
aad
bound
imul
movsl
lcall
add
ftst
xchg
ja
roll
fadd
pop
in
jl
dec
sbb
insl
enter
mov
cmp
pushf
jl
jb
hlt
lea
jb
lahf
int
jnp
cmc
addb
sarl
push
out
xor
ret
adc
sub
sbb
aam
mov
pop
inc
pop
shlb
les
dec
cmc
push
mov
or
dec
push
and
pop
mov
cmp
in
mov
inc
lods
cmpsb
sub
cld
sub
cmpsb
fldl
das
loop
lods
dec
xchg
push
jnp
push
jge
pop
sub
mov
lahf
leave
push
enter
add
xor
sar
jae
mov
rorl
push
xchg
or
imul
sbb
mov
mov
fs
add
xor
lds
mov
mov
ds
in
out
jp
push
ss
sbb
stos
jne
aad
pusha
jnp
jl
push
rcr
iret
xchg
and
int3
mov
pusha
xor
mov
adc
movsl
cmp
into
pop
shl
popa
aam
add
adc
push
pop
cmc
gs
cmpsl
mov
push
xor
pop
ret
sbb
mov
std
sub
fcomps
pop
pop
mov
out
pop
in
in
dec
loopne
fcomip
insw
inc
jle
cmp
xor
jg
cmpl
cmp
loope
lods
fstl
mov
sub
xchg
xor
ljmp
pop
inc
out
addb
mov
mov
dec
cmp
mov
add
xor
icebp
adc
push
jg
nop
sub
ret
stos
les
in
sti
es
fdivl
test
gs
scas
in
jge
out
iret
push
mov
jbe
ljmp
push
loop
push
sahf
jno
test
pushf
aad
xor
dec
inc
xor
pop
inc
push
adc
mov
loopne
aam
push
ljmp
jge
mov
pop
push
jns
jmp
pushf
adc
por
loope
icebp
test
ljmp
out
arpl
addr16
cmpsl
std
cmp
pop
inc
out
mov
out
sti
xchg
dec
sbb
add
mov
xor
or
lcall
ljmp
cmp
pop
xchg
shrl
jg
test
and
lret
fwait
icebp
cmp
sbb
sub
fcoml
test
ret
cltd
imul
gs
pop
addr16
jns
cmp
addr16
rcrl
pop
mov
test
sbb
subb
cmp
dec
push
inc
out
and
jle
add
stos
sub
icebp
nop
rcr
sub
aam
xchg
test
or
ficoms
add
dec
outsl
mov
push
pop
xchg
out
push
pop
and
fisttpl
scas
dec
dec
mov
rcl
enter
aaa
mov
test
dec
adc
jmp
mov
or
adc
xchg
and
mov
ffreep
jp
sbb
popf
and
cli
stos
ror
scas
aam
sub
rclb
mov
inc
cltd
test
js
sub
test
push
lods
push
bound
sub
scas
lret
mov
sub
mov
repz
mull
sti
lds
stos
jmp
pop
in
add
xor
imul
in
test
inc
pusha
push
or
fwait
sahf
pop
pop
in
test
pop
xchg
ss
fs
jmp
sahf
hlt
xor
jecxz
sbb
stos
aaa
daa
mov
imul
das
shll
rol
or
pushf
je
xchg
out
adc
mov
xor
inc
sbb
dec
or
out
repnz
push
or
dec
jns
mov
xor
inc
das
adc
into
push
hlt
xchg
inc
xchg
out
stc
fsts
sbb
fstl
jo
roll
adc
stos
adc
mov
xor
jo
adc
mov
dec
rclb
xchg
rol
jns
xor
add
sub
xor
js
lcall
inc
es
lock
dec
sti
scas
adc
ja
fildll
mov
dec
push
dec
sbb
push
dec
mov
or
test
out
xchg
pop
sub
int3
pushf
cli
fsubl
hlt
xchg
mov
pop
scas
jmp
jp
bound
add
dec
repz
mov
lcall
inc
mov
loopne
mov
mov
pop
ljmp
testb
add
inc
dec
jne
push
repz
repz
sahf
cmp
je
push
xlat
adc
dec
mov
ss
xor
fs
and
and
dec
stos
sbb
xchg
cmpsl
inc
insl
loope
mov
lret
repnz
xchg
decb
test
mov
push
jo
xchg
jo,pn
arpl
jb
xchg
sahf
lahf
lods
mov
cmpsl
push
mov
inc
mov
jb
scas
push
push
lahf
ja
rolb
orl
cmc
inc
rolb
aaa
add
cmp
cli
loope
jp
pop
repz
repnz
rcrl
or
ret
mov
sbb
jbe
hlt
jmp
cs
and
dec
cmp
daa
hlt
cs
stos
outsl
insl
mov
clc
je
or
shlb
inc
xor
xorb
pop
xchg
out
jno
push
cmc
or
jg
pop
movsb
jnp
test
repnz
xchg
inc
test
rcrb
or
jb
ficoml
pop
xchg
cld
sahf
push
pop
mov
insl
inc
pop
sbb
adc
movsb
push
aas
and
push
iret
pop
xor
mov
test
test
cmp
jecxz
loopne
out
mov
cwtl
fisubrs
xchg
jae
push
scas
add
js
test
dec
inc
xchg
lock
push
sub
push
test
push
stc
xor
sub
out
movsb
xor
ds
add
sub
add
out
sub
push
cs
adc
or
outsb
fwait
pushf
shll
cmc
mov
xor
adc
movsl
add
aaa
je
push
push
call
push
stos
mov
clc
push
and
xchg
mov
std
fnstsw
insl
stos
dec
inc
dec
pop
dec
jg
popa
sbb
lret
mov
push
jle
mov
dec
or
stc
repnz
mov
pop
mov
out
inc
daa
rcrb
test
iret
test
lea
add
xlat
xchg
rcrb
adc
fcoms
push
lock
and
mov
mov
out
adc
rcr
mov
aad
mov
icebp
sarb
jb
mov
dec
sub
dec
fsincos
lock
add
test
cli
arpl
les
fisttpll
clc
test
loopne
adc
aad
pop
dec
or
xor
imul
pop
cmc
in
xchg
outsb
or
and
and
daa
cmp
hlt
dec
mov
dec
loop
mov
pop
stos
and
and
ds
mov
cmpsl
fistpll
pop
mov
mov
sub
movsl
pop
aaa
bound
js
adc
ds
xlat
dec
fildll
ds
shlb
mov
push
jecxz
jnp
jnp
cmpsb
mov
cmp
addr16
add
inc
rcrb
stos
mov
int3
inc
popf
add
fbld
mov
mov
xlat
push
xchg
xchg
cmp
xchg
jl
out
xchg
int3
fcos
gs
sbb
sbb
push
ret
mov
ret
enter
pop
dec
inc
out
sti
or
cld
or
sahf
or
iret
sarl
jl
in
sbb
push
fwait
dec
out
mov
mov
sbb
mov
mov
pop
inc
iret
in
xchg
and
stos
lods
mov
lds
ficoml
pushf
cwtl
or
arpl
mov
es
pop
xchg
push
cmp
cmp
into
sbb
push
mov
lds
pop
xchg
ret
and
and
insl
inc
adc
xchg
xchg
push
addr16
out
das
lcall
icebp
cmp
mov
mov
xor
test
mov
pop
mov
xor
mov
rol
adc
pushf
insl
ret
sahf
mov
inc
mov
jg
or
lret
adc
adc
sbb
xchg
mov
cwtl
or
push
ja
outsb
test
mov
int
and
pop
dec
mov
mov
insb
loop
or
xor
inc
out
push
push
addr16
mov
aas
insl
inc
jne
ss
jno
ds
push
pop
lods
sub
insl
lods
mov
xchg
dec
stos
mov
xor
insb
push
xor
xor
andb
test
xor
ja
loope
frstor
das
xor
mov
sub
imul
push
subl
fnstcw
adc
nop
push
movsb
aaa
adc
lods
push
xchg
add
je
pop
push
popf
mov
std
xchg
mov
lcall
imul
mov
dec
dec
sbb
rcll
cmp
imul
cmp
movsb
imul
push
ljmp
imul
adc
push
pop
idivb
shlb
cs
add
fstpl
subl
adc
scas
stos
ret
or
loope
push
ret
xor
rcrb
jb
jmp
fildl
aas
sub
jg
pop
mov
popf
or
movsl
mov
sub
ss
sti
or
fs
or
pop
mov
pop
xchg
push
fnsave
cmp
shrb
rcl
pop
mov
inc
or
stc
jb
jno
fldl
mov
popl
cld
inc
cmp
addr16
mov
decb
mov
mov
mov
sahf
aad
sbb
xor
dec
ret
cmp
add
mov
filds
fmul
xchg
inc
xor
add
insb
insb
add
pop
loop
and
jecxz
scas
insb
sbb
adc
js
test
int3
dec
mov
pop
add
xor
cmp
jb
mov
cmp
add
adc
cwtl
sarl
dec
loopne
in
jae
sti
dec
rcl
subb
js
push
repnz
add
pop
rclb
fisttpll
ja
mov
lahf
lods
cmpsl
gs
pop
pop
sub
dec
rcl
mov
dec
cwtl
sub
dec
cli
bound
push
popa
movsb
inc
xor
mov
adc
or
sbb
test
mov
movsl
push
sti
hlt
or
cli
sub
xor
pop
iret
sbb
jno
push
adc
shlb
incl
dec
and
jmp
gs
mov
xchg
ret
test
xor
mov
xchg
loope
outsb
adc
std
cmp
ret
mov
int3
bound
loopne
loop
rolb
test
shrl
dec
pop
test
mov
push
out
test
daa
or
dec
cmc
adc
loop
adc
jb
inc
add
mov
lods
data16
cmp
cmpsl
cs
ss
es
popa
mov
cmp
les
fimull
int3
sbbb
dec
cwtl
cmp
sarb
lcall
mov
or
test
test
jecxz
mov
in
sub
sub
xchg
std
dec
test
inc
cmp
dec
mov
je
pop
pop
jns
push
push
loopne
lods
push
leave
xchg
xor
sbb
or
out
cmpsl
adc
cmp
loope
scas
pop
test
pushf
mov
aas
out
cmc
sub
shlb
movsl
cli
and
push
lret
xor
or
push
out
aaa
arpl
aam
adc
outsl
jns
and
loop
jle
xorl
push
adc
jmp
inc
and
fistps
nop
cmp
stc
xchg
cmp
out
and
push
outsl
inc
xor
pop
lock
pop
loope
and
je
mov
xor
cwtl
icebp
and
mov
data16
clc
or
std
adc
push
inc
xchg
inc
or
xor
aad
sbb
jne
jae
loopne
cli
jle
push
or
popf
mov
pushf
loopne
sbb
je
sub
fnstsw
and
mov
dec
cmpsb
push
rclb
add
js
imul
ja
cmp
mov
popa
pop
fwait
inc
pop
lods
xor
ljmp
pop
or
push
frstpm(287
push
inc
test
fmul
mov
dec
lretw
inc
cmpsl
stos
aaa
jp
sbb
jae
enter
lock
lcall
xor
push
cmpsl
out
xor
jo
popa
xor
or
int3
fildll
fcoms
dec
cs
and
or
mov
addr16
sbb
cmp
or
test
mov
cmp
imul
cwtl
cmp
bound
rolb
repz
je
mov
js
fnstsw
pusha
jg
lret
inc
cltd
dec
sub
cmpsb
in
cwtl
daa
in
and
test
xchg
inc
outsb
push
pop
ret
pushf
popa
mov
iret
mov
in
test
stos
adc
nop
xchg
jge
mov
in
fistps
jbe
mov
dec
jmp
scas
in
push
jne
xchg
aam
mov
cmpsl
mov
cld
loop
popf
jmp
aam
inc
inc
xchg
adc
sub
jecxz
pushf
dec
pop
imul
and
push
stc
dec
inc
pop
pusha
daa
mov
clc
adc
test
je
fstpt
cltd
test
mov
mov
test
repz
out
rol
jno
in
jae
int
std
movsl
or
gs
mov
dec
jp
imul
and
jg
xor
andnps
xor
pop
push
pop
mov
xor
jl
outsb
outsb
mov
insl
scas
pop
pop
jno
push
les
scas
cmp
mov
das
and
fimuls
out
xlat
jg
leave
call
ret
add
ja
sbb
lahf
pushl
lods
repnz
adc
jmp
adc
jmp
push
sub
repz
cmp
negl
push
out
daa
in
out
and
cli
lea
loope
insl
inc
repnz
xchg
xor
js
mov
and
push
ret
jg
cli
xchg
mov
sti
xor
dec
xor
xchg
xlat
cli
leave
mul
sarb
xchg
cltd
mov
hlt
das
movsl
ret
push
sbb
sbb
push
mov
into
decl
pop
loop
sahf
insb
popa
mov
mov
out
out
push
push
mov
cmp
movsb
inc
stos
jo
cld
push
shlb
aaa
sub
inc
jbe
outsl
cmp
xor
xchg
xor
xchg
push
pop
ja
jl,pt
mov
mov
fstpl
ljmp
test
lods
jo
sub
push
call
jnp
outsb
mov
aam
imul
hlt
add
push
sub
repnz
adc
mov
sbb
inc
scas
addr16
and
sahf
sub
cltd
add
sub
push
cli
loop
sarb
aaa
shrl
iret
push
rcr
aaa
cltd
in
ljmp
arpl
pop
add
mov
adc
decl
nop
js
jl
into
nop
push
dec
gs
fcoms
cmpb
mov
cmp
jg
and
lret
fisttpl
and
mov
xor
clc
push
inc
movl
pop
xchg
push
bound
or
outsb
insl
call
lret
push
int3
test
jecxz
test
aad
or
test
rorb
movsl
jge
adc
jo
pop
fidivrs
cmp
daa
movb
sub
les
aas
add
sbb
popa
fwait
push
fbld
rcll
pop
fistps
mov
outsl
xchg
lods
mov
fsubl
rcr
sbb
jbe
sbb
and
lea
jno
shl
subl
mov
ja
test
dec
inc
mov
push
imul
push
pop
xlat
mov
movsl
fdivrs
aaa
add
pop
inc
xchg
pop
pop
aaa
inc
inc
pop
loope
gs
shr
xor
subb
fistl
cmp
fdivrp
imul
in
push
xlat
movsb
cmp
addr16
cmpsb
mov
cltd
inc
imul
xchg
mov
pop
push
inc
scas
jp
jmp
repnz
or
pop
test
sub
gs
addr16
adc
dec
dec
cmc
sub
mov
adc
lock
cmpsl
or
in
jne
jae
movsb
sbb
shlb
pop
nop
rol
or
ret
es
jg,pt
in
test
and
addb
inc
in
push
test
mov
pop
out
and
decb
adcl
fcoml
frstor
in
cmp
outsb
cmc
or
scas
add
int
fcomps
pop
dec
ljmp
decl
loop
jae
add
push
xchg
mov
push
iret
jb
cmp
rolb
subb
test
jle
xor
mov
movsl
shrl
push
mov
add
test
push
lret
arpl
cmpsl
jo
lcall
dec
xlat
ret
dec
mov
or
pusha
inc
add
test
push
int3
pop
std
mov
mov
shrl
cmpsb
and
and
add
out
inc
add
imul
pop
cmp
daa
cld
setg
adc
jg
sarl
outsb
push
inc
rolb
or
fdivs
int3
sbb
je
mov
stos
adc
mov
mov
test
or
xchg
mov
scas
pushf
jl
test
adc
fsubs
and
cmp
in
xlat
adc
dec
pushf
jne
addb
or
iret
enter
inc
add
mov
stos
mov
push
fiaddl
popf
mov
cltd
mov
add
xchg
andb
mov
arpl
xor
add
int
insb
shrl
jmp
push
push
push
lods
dec
rep
xchg
int3
mov
add
shrl
cmp
cld
and
fbld
add
rorl
sub
sub
dec
or
in
cmp
in
je
push
pop
adc
dec
pop
push
test
mov
popa
hlt
or
xor
push
das
add
nop
inc
jae
pop
sub
pop
mov
aaa
lock
mov
cmp
xchg
js
pop
push
pop
in
mulb
add
lahf
call
pop
lds
pushf
mov
jecxz
jge
clc
js
out
dec
push
repz
jns
test
ss
dec
xor
adc
andl
xor
adc
push
sbb
testl
sub
andl
dec
fisubs
dec
adc
fstpl
mov
in
out
sub
out
imul
inc
fstl
pop
mov
jno
inc
mov
idivl
mov
aaa
aam
push
hlt
cmpsl
dec
xor
incb
xchg
push
shl
xchg
or
mov
sbb
xor
hlt
iret
mov
add
add
iret
sbb
ficompl
loop
sarl
scas
data16
jg
outsb
push
xchg
add
int
jb
mov
sub
das
in
aam
xchg
cmp
pop
fnstcw
inc
out
cld
cmpsb
add
add
mov
cmpsl
adc
les
dec
jle
fadd
fildll
inc
pop
fwait
sti
jecxz
or
ss
and
data16
sbb
mov
sbb
cmp
inc
lods
xor
nop
mov
shrl
adcb
fsubs
inc
lahf
cwtl
push
outsb
mov
sar
not
xchg
jg
and
dec
xchg
push
stc
pusha
ljmp
sarb
loope
push
dec
mov
push
mov
adc
int
push
adc
lret
and
sbb
mov
mov
insb
push
dec
shr
push
xor
sbb
mov
mov
mov
outsb
mov
inc
out
mov
push
loop
cmpsl
push
inc
jmp
into
mov
mov
mov
rcrb
stos
jmp
or
jle
sbb
mov
sti
bnd
fcoml
or
jmp
mov
scas
divl
hlt
jns
popa
not
into
xor
pop
xchg
pop
push
movsb
dec
mov
js
xor
mov
mov
popa
inc
lds
daa
dec
inc
sbb
jecxz
xor
sbb
fs
es
mov
rclb
mov
pusha
push
std
cmpsb
faddl
push
sub
xchg
jbe
test
fbld
cmpsl
sub
pop
add
pop
mov
arpl
xchg
jp
mov
sub
jbe
inc
jmp
add
xchg
xchg
sahf
scas
add
cmp
pop
mov
inc
mov
fadd
xchg
jle
ja
sub
hlt
repnz
mov
es
fdiv
arpl
sbb
outsl
sub
outsl
adc
and
xchg
daa
shlb
out
cld
inc
inc
lods
adc
xor
cwtl
in
mov
pop
or
pop
or
lea
cmpl
in
mov
fsubrs
mov
std
push
lcall
jnp
ss
push
call
sbb
fwait
ja
popa
repnz
cmp
aas
cmpsl
inc
jmp
jno
pop
and
mov
jle
fisubs
int
aam
test
fwait
int
das
in
into
xor
and
cltd
repz
aaa
jmp
insb
es
jge
gs
pop
rcr
shlb
push
push
cmpl
sub
outsb
popf
xchg
pop
es
sub
mov
mov
mov
lahf
nop
xchg
das
inc
ljmp
xor
ja
bound
pop
sub
cmp
les
dec
jno
test
gs
rcrb
pop
enter
inc
adc
dec
or
fs
ljmp
jp
dec
ja
mov
shlb
loop
add
xchg
je
fstps
lods
je,pn
nop
push
add
fildl
insb
jge
icebp
fwait
ret
roll
mov
cmc
fldt
cld
adc
arpl
test
cmp
fisttps
mov
aaa
stc
sbb
pop
push
ja
jle
cli
xchg
out
stos
jge
adc
adc
push
mov
mov
clc
test
imul
jne
sbb
scas
in
aam
cmp
mov
mov
pop
sbb
insl
ljmp
pop
div
cmpsb
mov
nop
bound
mov
or
sahf
pop
add
sahf
xor
mov
cli
sbb
sarl
lods
cwtl
sub
jp
jecxz
daa
negl
xchg
rclb
inc
in
out
je
mov
hlt
cmc
push
jecxz
add
dec
scas
in
and
mov
lock
xor
inc
mov
sbb
adc
xchg
nop
jns
xor
pusha
push
cmp
out
cmpsl
xchg
gs
scas
jb
test
cltd
lea
outsb
sbb
mov
xchg
gs
jno
push
xor
cmp
sahf
xor
sbbb
sbb
cmpsl
push
inc
jge
cmp
int
cmp
xchg
and
push
aad
pusha
imul
sub
or
cli
mov
push
and
insb
jno
push
or
andl
out
lret
scas
cmp
pop
ja
dec
out
xchg
pop
adc
jb
adc
pusha
mov
cmp
test
sub
shrl
loope
add
loop
sti
inc
loope
mov
mov
movsl
std
pop
xchg
xor
add
cld
pop
addr16
jmp
imul
inc
pusha
adc
inc
js
shlb
ficomps
push
cmp
sbbl
ljmp
std
sti
scas
shrb
and
inc
or
daa
jmp
adc
enter
repz
pop
cmc
ffree
sahf
jmp
in
xor
cmp
out
xchg
add
push
outsl
aad
imul
push
gs
lret
push
pushf
mov
pop
into
pop
fs
sbb
pop
mov
shrl
sbb
fnstsw
loope
cmp
ds
xorl
pop
push
movsl
jmp
jl
loopne
addr16
stos
push
jmp
push
and
add
sub
or
bsr
call
gs
xchg
ret
and
adc
inc
aas
test
sbb
and
mov
mov
daa
dec
jno
ds
xor
test
xchg
adc
mov
cli
add
pop
xor
adc
out
add
adc
push
xor
cwtl
mov
xorb
nop
ja
or
xchg
cmc
and
lret
ret
scas
int
pop
mov
mov
test
shll
test
add
imul
test
enter
sub
xchg
hlt
cmpsb
shll
or
mov
popf
lea
pusha
sbb
test
sub
insl
cs
fs
lret
cmp
in
shl
adc
icebp
jb
add
jl
adc
ljmp
mov
adc
dec
cmp
xchg
imul
add
lret
adc
mov
mov
dec
rcrb
mov
daa
dec
or
jmp
mov
push
lcall
dec
iret
or
add
lret
push
mov
fisubrs
pop
mov
or
into
lea
in
inc
ljmp
aaa
jne
pusha
mov
out
packssdw
insl
out
xlat
mov
push
jne
push
daa
es
xchg
pop
cmp
jbe
dec
jl
cld
orl
inc
mov
setle
int
es
test
mov
xchg
fwait
dec
mov
add
or
lret
xchg
inc
mov
sbb
jl
push
xlat
and
int
inc
dec
sbb
inc
add
push
leave
dec
adc
dec
cmp
mov
or
imul
and
out
dec
int3
xor
inc
push
add
inc
dec
mov
adc
out
aas
cmp
jmp
cltd
xor
or
roll
push
jecxz
adc
mov
cmpsl
testb
pushf
or
inc
mov
cld
sbb
scas
out
sbb
mov
cmp
xchg
jge
xor
lea
jno
clc
jne
lahf
ret
mov
xchg
icebp
pop
mov
cmc
dec
add
mov
xchg
add
cwtl
idiv
lcall
insb
mov
repz
mov
jmp
xchg
in
into
xchg
loope
add
add
lods
mov
pop
jmp
pop
testl
dec
js
aaa
dec
xchg
inc
pop
inc
pushf
mov
fcomps
insb
or
out
mov
nop
fsub
lock
jle
test
mov
ret
mov
push
mov
push
push
xchg
xchg
inc
js
cmpsl
scas
push
inc
in
push
xchg
lcall
rep
xor
loop
movsb
jns
sub
xchg
jb
daa
push
aam
mov
xor
mov
call
pop
das
in
dec
aaa
fmulp
aaa
cmc
lea
cmp
push
xor
in
xor
hlt
jo
or
fwait
aas
mov
stos
pop
int3
jmp
lds
insb
insb
nop
cltd
mov
js
rorb
jb
bound
pop
sub
xor
sbb
push
lock
mov
mov
popf
sbbl
sbb
inc
push
pop
ret
xchg
mov
rcrb
clc
jl
jle
mov
icebp
push
jle
js
sbb
inc
push
std
outsb
aad
pop
mov
das
lods
das
jae
push
mov
pop
push
mov
or
mov
inc
and
int
ret
mov
notl
arpl
adc
add
inc
test
xchg
adc
xchg
mov
push
adc
hlt
xchg
mov
ficoml
sarb
xchg
cltd
imul
inc
lds
lret
into
mov
sbb
add
dec
repz
sub
aaa
aam
cmpl
int3
xor
xor
in
xor
xchg
mov
cmp
iret
xor
andl
out
add
icebp
repnz
sbb
mov
rcl
lcall
mov
negl
lcall
mov
mov
loope
and
mov
shlb
lock
cmc
inc
sub
negb
cmc
sub
sahf
dec
in
inc
mov
xor
cmp
jae
sub
test
addr16
clc
or
mov
out
orb
jbe
bound
loop
and
js
cmpsl
pop
subps
jge
loop
push
out
int3
push
cmpsb
stc
popa
inc
adc
cmp
mov
cmc
or
je
clc
push
and
fisubl
addr16
sbb
dec
test
mov
mov
xchg
cmp
int
test
popa
mov
and
push
in
outsb
xchg
test
push
dec
shll
mov
int3
arpl
rcll
pop
enter
cmp
pop
dec
mov
inc
jmp
test
icebp
jnp
lcall
lock
jecxz
cld
clc
mov
xchg
aam
std
ret
inc
sub
pop
add
dec
adc
cltd
cvtdq2ps
and
pop
cmp
mov
xchg
or
pop
cli
add
sbb
clc
mov
scas
mov
xor
js
jecxz
scas
and
xor
icebp
pop
dec
xchg
idivb
push
cmpsb
jg
cwtl
cmpsb
xchg
adc
mov
andl
cmp
xor
mov
jmp
xchg
cwtl
adc
notl
mul
cmp
rorl
mov
rorb
test
push
adc
push
stos
dec
repz
mov
mov
mov
mov
into
xchg
push
xlat
pop
int
lcall
add
mulb
dec
pop
pop
es
mov
or
jbe
mov
dec
pop
out
subb
movsl
dec
sbb
fistl
ljmp
les
movsl
lret
jge
test
popf
scas
js
add
es
jmp
xchg
scas
push
push
push
sbb
jo
and
cmp
inc
inc
jmp
popf
test
fistpl
add
or
dec
shrb
ja
stc
cltd
gs
call
nop
cltd
jp
mov
sub
mov
fsubrp
add
lea
push
in
pop
mov
in
mov
aad
popf
or
ret
sbb
pop
popa
or
mov
cmpsb
push
ret
out
jl
and
test
xor
jne
fnstcw
jbe
popa
icebp
bound
sub
jl
add
je
ljmp
jle
jb
fwait
sbb
mov
dec
mov
pushf
sbb
and
mov
pop
mov
jno
cmp
stos
bnd
adc
cmc
xor
mov
in
sti
call
xor
jecxz,pt
std
ja
cmp
sub
inc
lret
test
pop
dec
fld1
shl
cmp
gs
sbb
adc
xchg
push
mov
sub
cmp
jp
insl
jecxz
and
pop
stc
add
push
fst
jge
popf
inc
cmp
imul
pop
rolb
in
adc
mov
jle
mov
push
test
pop
adc
shlb
cs
imul
cwtl
rcrl
sub
or
add
shlb
lcall
xchg
adc
pop
sbb
mov
and
sub
jge
adc
mov
aam
cmp
scas
mov
test
and
cmp
ja
aaa
lahf
mov
cmpl
dec
pop
push
fdivrl
jg
jle
cmp
inc
outsb
sub
ret
cmp
cmp
icebp
sbb
fdivs
les
adc
xchg
std
in
xchg
into
movsb
out
fimuls
xchg
pop
mov
jle
jl
lods
jo
lea
addl
inc
andl
adc
cmp
sub
loopne
jl
std
pop
xlat
cltd
add
inc
sbb
push
mov
cmp
cld
sbb
loope
jo
xlat
mov
mov
pop
aad
outsl
cltd
adc
ljmp
das
leave
lds
adc
in
inc
mov
int3
fsubrs
xchg
fcmovu
add
push
sbb
xorb
mov
jecxz
or
add
jge
fnsave
sub
repz
cmpl
dec
in
xor
or
test
jle
push
in
cld
cwtl
movsl
sbb
mov
sahf
sbb
and
jnp
inc
addr16
daa
or
test
mov
pop
sub
sub
lods
imulb
jae
or
xor
add
inc
add
nop
fistps
jae
cmp
les
pop
mov
in
cld
dec
pop
lahf
push
inc
or
xchg
sbb
rorb
xchg
out
inc
incb
or
adc
pop
mov
std
ljmp
xchg
mov
adc
notl
pop
dec
addr16
dec
xor
add
mov
xor
loop
inc
addb
test
dec
xchg
mov
pushf
insb
inc
mov
addr16
and
and
push
loop
das
sub
sbb
mov
adcl
jnp
std
mov
ret
sbb
mov
aam
adcl
test
cs
cmc
orb
push
mov
jnp
dec
dec
enter
ja
jge
ja
xchg
dec
sbb
shll
mov
mov
sub
adc
adc
mov
jae
pusha
or
leave
les
jbe
loop
lods
fiadds
in
cmp
imul
xor
sub
xor
jnp
and
mov
xchg
scas
and
dec
aaa
and
xor
out
pop
and
inc
pop
or
loope
xor
out
mov
pop
int
inc
adcb
loop
and
js
int
cmpsb
mov
sbb
adc
stc
xor
ror
xchg
ljmp
into
into
in
xchg
scas
int
sbb
es
insl
int
push
imul
in
fwait
xlat
cmp
mov
pop
mov
daa
cmp
int
mov
jb
popa
or
lods
movsb
mov
sbb
xor
nop
test
pusha
and
xchg
mov
iret
enter
xchg
dec
and
inc
push
mov
popf
mov
add
fucomip
repnz
dec
sub
outsl
inc
mov
mov
addr16
pop
ret
and
mov
das
mov
push
test
jmp
xchg
lea
adc
int
adc
out
cmp
add
out
push
gs
shll
adc
pop
incl
imul
cmpsb
ret
add
ret
jnp
dec
push
mov
int3
dec
mov
cmc
lahf
mov
xchg
rcrb
cmp
xchg
aam
push
push
stos
or
jp
scas
jno
jnp
mov
mov
sub
stos
mov
add
pushl
jbe
gs
testb
inc
jle
dec
outsl
mov
mov
jp
pushf
pusha
pusha
mov
mov
repnz
pop
sub
sub
xchg
adcb
hlt
jg
pushf
je
clc
jo
mov
mov
xchg
inc
addb
xor
inc
sti
inc
or
xchg
pop
std
jb
inc
mov
es
xchg
and
popa
pop
outsb
xor
lahf
cmp
cmc
pushf
lds
push
gs
and
xor
mov
lcall
lcall
xor
sbb
and
xor
rolb
rol
clc
push
mov
test
shrl
push
mov
iret
imul
loopne
lds
fwait
push
xchg
stc
lods
dec
ja
imul
xchg
dec
movsl
lods
jl
mov
pop
aam
gs
sahf
stos
clc
add
shrb
jbe
into
das
aam
fs
pop
pop
mov
mov
push
ret
dec
leave
aas
sbb
and
jl
sub
sti
pop
cs
or
fmul
nop
into
jp
push
jb
icebp
xor
xor
test
jb
cmp
call
dec
adc
sbb
mov
mov
push
push
in
pushf
enter
lahf
fs
imul
mov
shlb
dec
rorb
xor
pop
ret
adc
je
in
je
push
jnp
mov
adc
repnz
std
loop
pusha
inc
lahf
cltd
or
repz
mov
sahf
pop
add
cmc
adc
pop
pop
aam
mov
icebp
push
fsts
push
cli
mov
mov
cmpsl
add
imul
notl
sbb
and
shl
ret
mov
nop
shlb
sub
pop
inc
push
push
dec
mov
ret
dec
ret
fistpll
js
repnz
pop
cmpsb
push
sub
shrl
aad
mov
dec
insb
push
xchg
scas
and
ds
pop
movsb
inc
clc
cpuid
xor
hlt
inc
cwtl
mov
mov
pop
jne
mov
or
dec
push
aaa
add
lds
addb
sub
dec
push
sbb
sbb
cmpsb
jnp
push
add
pop
outsl
loop
fstl
iret
cwtl
mov
int
and
cmp
mov
inc
fdivs
rcll
push
lcall
push
fstps
pop
mov
inc
sbb
and
pop
cltd
and
adc
push
push
pop
xor
add
or
sbb
mov
ficoml
cmp
pop
pop
mov
test
jo
repnz
xor
repz
rcl
push
lds
lods
pop
iret
shlb
fs
outsl
add
jp
hlt
loope
into
jmp
gs
cmpsl
jge
sbb
mov
add
fiaddl
fcmovne
lret
popf
iret
add
es
bound
push
dec
jmp
int
pushf
stc
pushf
repz
cmp
push
jle
pop
lret
adcb
xchg
je
aaa
jae
es
mov
mov
xchg
or
fistl
int
mov
ljmp
jl
bound
call
ja
fmulp
fistps
daa
ret
inc
and
add
or
xlat
inc
leave
sbb
add
outsb
adc
loop
push
xchg
jecxz
inc
lret
ret
les
into
mov
and
bound
dec
add
sbb
push
mov
push
push
lret
dec
or
and
xchg
aad
mov
and
out
test
mov
leave
js
xor
push
addr16
mov
adcl
mov
repz
cmc
insb
and
es
xchg
and
out
cli
and
xchg
mov
mov
bound
mov
stc
lds
mov
stos
les
fistps
mov
icebp
xchg
lea
or
sarl
sbb
sbb
ja
clc
sbb
aas
cmp
push
bound
cmp
dec
icebp
push
push
fucomi
push
das
sub
or
or
add
or
pop
rcll
pop
inc
push
xor
inc
push
jo
mov
jmp
movsl
add
pop
cmp
push
xchg
std
sub
pop
out
push
xor
inc
int
or
push
nop
inc
xlat
loopne
mov
imul
cmpsl
rcr
fs
push
jmp
notb
or
mov
jo
mov
pop
push
icebp
push
xchg
pinsrw
sbb
lods
stc
jp
xchg
sbb
in
hlt
sbb
jecxz
jp
push
sub
jae
test
jmp
rcrb
leave
scas
adc
xchg
jnp
lahf
gs
mov
shrb
add
testl
int3
mov
imul
jg
in
es
repnz
pop
enter
in
fcoml
pop
xchg
cmp
add
sbb
aam
les
and
stc
aam
inc
dec
or
xor
cmp
add
or
inc
sbb
cs
pop
inc
mov
mov
push
lret
adc
ret
or
and
mov
in
dec
and
cld
push
ljmp
cmp
aad
push
inc
sub
cmp
das
or
lods
add
jg
xlat
dec
adc
lahf
mov
rcl
pusha
mov
out
lock
movsb
mov
mov
or
daa
cmpsb
insl
cmp
pop
sbb
push
stos
mov
test
and
dec
dec
repz
pop
lods
dec
je
mov
test
jb
in
les
cs
pop
fs
add
lods
mov
xor
lods
js
insl
xchg
in
mov
out
ret
sub
jmp
aaa
outsl
push
mov
pop
or
dec
cmp
loopne
bound
popf
test
ds
mov
insb
mov
cltd
cmp
mov
js
mov
push
push
push
sub
mov
pop
rorl
lds
push
jle
nop
sahf
sub
insb
or
jno
mov
outsl
mov
lock
decl
pop
addr16
sub
fidivrl
sarb
fcoms
fwait
daa
popf
add
pushf
jb
imul
pop
iret
mov
xchg
into
dec
ja
mov
stos
in
dec
cmp
lea
mov
mov
xchg
lahf
movsl
push
sahf
mov
sbb
push
xor
push
and
and
and
push
faddl
mov
and
mov
inc
add
push
xchg
mov
push
sahf
std
mov
jne
or
add
ss
or
mov
pop
arpl
addr16
mov
jns
in
adc
cmc
pop
iret
int3
and
mov
and
or
sub
adc
jl
jne
rcrl
scas
pop
cwtl
mov
repz
aaa
mov
test
es
push
sub
jmp
dec
gs
ja
fistps
jle
xor
std
sti
shrl
ljmp
mov
sbb
mov
sub
out
ja
lods
cmpsl
inc
push
into
out
cltd
add
in
mov
add
add
pop
or
xor
in
or
out
xor
aaa
or
cwtl
lea
aas
jae
adc
icebp
dec
sti
jge
mov
les
inc
sbb
daa
aam
ret
push
or
sbb
mov
out
pop
repz
aas
lret
and
xchg
mov
dec
push
testl
stc
popa
imul
repnz
and
mov
jo
dec
nop
push
test
hlt
inc
push
pop
dec
sub
sbbl
je
sub
add
or
aaa
inc
data16
mov
ret
test
nop
dec
and
lret
dec
cltd
push
cmp
mov
mov
ret
lods
sbb
or
mov
adc
pcmpgtd
popf
mov
pop
test
and
out
aas
dec
pusha
repz
mov
imul
pop
mov
ss
jg
mov
outsb
mov
pop
out
dec
xchg
fcmovnbe
add
aas
aaa
stc
insb
in
rol
clc
mov
fldt
lea
or
in
jno
mov
inc
in
in
push
imul
cmpsb
imul
mov
push
pop
inc
js
mov
push
mov
jle
add
enter
sbb
push
clc
sti
jbe
mov
or
jne
add
lea
and
push
mov
lret
or
inc
push
ficoml
out
mov
push
mov
xchg
lock
sub
jns
ja
shl
imul
dec
cmp
pop
loope
sahf
adc
push
lods
sbb
lock
add
sbbl
sub
jge
pushf
push
mov
fistl
inc
pop
aaa
shl
icebp
xchg
mov
inc
dec
push
sbb
test
dec
jle
xlat
bound
dec
adc
scas
dec
cmp
sbb
mov
sub
pop
mov
mov
aam
loopne
iret
mov
enter
cld
cmpsb
shrb
fwait
imull
mov
adc
xor
and
mov
shlb
arpl
sarl
mov
dec
push
cld
dec
popf
pop
mov
insl
test
les
pop
movsl
mov
cli
add
addl
int3
jl
stc
imul
in
addr16
dec
aad
push
in
or
pop
sbb
xorl
xlat
jg
add
mov
cmp
push
pop
sahf
sbb
cmp
loopne
inc
jmp
mov
mov
lret
push
test
jecxz
subb
jb
std
push
push
std
sbb
dec
cmp
sbb
mov
cmp
repnz
sub
add
rolb
xchg
insl
xor
pop
leave
out
mov
pop
push
cmp
ja
loope
jp
mov
sbb
xchg
add
cmp
sub
leave
out
jecxz
cmp
out
stos
inc
adc
imulb
sub
cltd
push
jl
ss
xchg
add
sub
sub
sbb
lahf
jbe
inc
and
push
mov
mov
shll
jecxz
pop
inc
push
cmp
add
fisubl
mov
push
out
aam
sahf
cli
cmpsl
cs
push
mov
stos
test
or
pushf
mov
push
div
fnsave
pop
sub
mov
cmc
push
cmc
ret
or
in
mov
sahf
xchg
aas
mov
shl
xor
push
mov
addr16
push
lods
pop
adc
iret
pop
push
out
xlat
or
xor
jl
mov
roll
scas
imul
dec
lock
ret
pop
jmp
inc
mov
lea
popl
das
cmp
dec
push
mov
jmp
fildl
inc
fcmovb
lcall
sub
xchg
or
ss
popf
adc
in
iret
call
jmp
inc
jns
shlb
test
insb
dec
mov
pop
xchg
icebp
test
popa
jne
pop
repz
cs
sbb
sub
scas
mov
enter
adc
pop
std
je
in
or
lods
jle
es
sub
sub
jae
gs
or
dec
pop
push
dec
rclb
jbe
inc
outsb
jp
mov
xlat
pop
xchg
sub
fcmovne
jmp
jl
xchg
lods
nop
mov
out
pop
sbb
lcall
xor
xchg
and
add
jbe
cmc
mov
cs
add
movsb
push
in
add
add
inc
inc
pop
test
pop
int3
push
fs
lret
fs
test
pop
nop
test
int
jo
addr16
lret
rcr
pop
aaa
jo
pusha
pop
mov
popa
ja
int
jbe
mov
jl
and
scas
inc
xor
mov
and
add
fsubrl
inc
pushf
lret
lock
push
bnd
jb
xchg
push
mov
stos
scas
xor
sub
rorl
fcoms
test
cmp
lock
cli
mov
loope,pt
mov
push
rcrb
cmpsl
fildl
mov
pop
sti
fs
arpl
lahf
mov
div
in
orb
hlt
push
int3
pop
shl
pop
adc
dec
mov
push
es
pop
cmpb
sub
sub
sbb
pop
gs
data16
mov
movsl
mov
loopne
mov
pop
inc
sub
arpl
inc
bound
cmp
push
jno
fcmovbe
test
jnp
sub
inc
mov
mov
outsb
pusha
pop
js
adc
in
cmp
xor
sbb
jne
call
sbb
jl
pop
lods
mov
xor
and
push
mov
daa
das
or
repnz
ljmp
push
xchg
mov
sub
add
inc
data16
mov
inc
push
pop
mov
cs
fisubs
pop
push
fmul
xchg
mov
ss
inc
ret
adc
lahf
dec
lret
add
nop
cli
out
jno
or
add
adc
push
jnp
or
mov
fnstcw
inc
jp
sub
and
adc
sbb
inc
mov
xor
cwtl
mov
mov
fbstp
sub
adc
and
out
mov
mov
dec
or
xor
and
int3
push
jnp
punpcklbw
aaa
cmp
das
ficompl
in
int3
fiaddl
sbb
popa
cmp
pop
sub
xor
shrb
dec
mov
bound
pusha
cmp
lcall
lods
ret
dec
or
mov
movsb
icebp
aad
xor
push
adc
testl
repz
mov
icebp
mov
dec
daa
pop
repz
repnz
mov
ss
les
es
sti
xor
push
mov
ljmp
fwait
cwtl
jmp
cmp
enter
pop
imul
mov
lock
or
jmp
and
das
pushf
lea
jecxz
xor
mov
leave
in
stos
scas
in
pop
jge
jg
mov
outsl
fisubrl
mov
jns
sbb
sub
cmpsl
scas
cmp
cmpsb
mov
insb
stos
daa
pop
pop
jp
std
pop
repnz
mov
fstpl
xor
xor
outsb
dec
mov
aaa
xor
addr16
fdivl
push
sahf
pop
popa
pushf
or
addb
in
mov
sub
and
xchg
mov
stos
xchg
jns
push
push
stc
daa
popa
repnz
gs
insl
std
jg
adc
cmpsb
dec
jmp
stos
mov
cltd
cmpsl
loope
xchg
sub
jb
cltd
mov
and
push
into
jo
mov
jne
adc
jbe
push
sbb
daa
and
cmp
subl
fidivrs
stos
mov
arpl
push
sti
mov
lcall
push
sbb
stc
mov
mov
xor
mov
xchg
outsl
cmp
aas
dec
sbb
pop
sbb
adc
mov
shl
jns
sub
rol
inc
mov
aam
leave
push
lret
xchg
repz
and
sbb
pop
push
sbb
inc
popf
sbbb
dec
lock
out
nop
out
jo
jle
adc
push
adc
and
mov
outsl
notl
mov
mov
cmp
pushf
xchg
cmpsb
shl
imul
mov
xor
mov
mov
jbe
xchg
sub
dec
jl
cwtl
dec
movsl
add
fiaddl
push
pop
cs
das
imul
stc
out
fucomp
xchg
push
cmp
mov
push
int
fisttpll
sub
dec
insb
pop
rolb
movsb
lcall
fwait
lods
adc
xor
xor
icebp
cmpsb
push
insl
pop
push
call
ret
pop
movsl
popf
das
fadd
cs
xlat
inc
pop
jmp
hlt
jecxz
int
inc
inc
mov
cmp
pushf
insl
loope
jne
adc
jp
leave
rcl
add
fisttpl
and
dec
xor
dec
mov
fwait
pop
mov
ret
sub
in
cs
push
popa
sbb
aaa
lea
jge
and
test
xchg
add
inc
mov
bnd
push
xchg
adc
and
xor
inc
mov
dec
xor
mov
pop
imul
mov
repnz
popa
xor
cwtl
fstps
sub
dec
sti
arpl
mov
cmp
addl
nop
mov
mov
mov
mov
pop
cmp
jmp
sub
mov
push
in
jmp
stc
cmpsl
xchg
or
dec
sub
fcoml
sub
mov
xchg
lods
lahf
clc
push
es
cmp
push
mov
dec
sbb
jb
jmp
aaa
call
shr
inc
or
xor
bound
test
cmp
cmp
adc
rorl
xchg
push
mov
fmuls
push
inc
and
and
daa
ret
ss
aas
je
sbb
das
lods
popf
shrl
outsl
push
int
leave
loope
sbb
or
outsl
adc
cmp
insb
es
aad
bound
fwait
dec
out
loop
add
push
mov
mov
add
mov
xor
dec
aaa
mov
pop
xchg
lret
dec
ss
mov
jg
rep
inc
popa
pop
or
cwtl
jle
push
pop
pop
xchg
stos
mov
and
jecxz
fwait
dec
lret
adc
lds
fiadds
xchg
stc
xor
popf
xchg
je
cmpsb
ss
xlat
push
movsb
pop
push
cmp
jge
cld
cs
pop
xor
out
je
out
dec
out
data16
ljmp
sub
mov
in
stos
js
adc
popf
add
int
js
adc
pop
out
add
call
iret
push
sub
mov
lcall
sub
mov
bound
mov
aad
mov
cmp
pop
lock
xor
jecxz
and
push
in
sbb
mov
push
inc
adc
add
xlat
xchg
lcall
jle
repnz
xor
and
nop
adc
cmpsl
stos
and
mov
lahf
or
xchg
cwtl
scas
xchg
adc
je
in
aas
dec
and
mov
je
add
lods
mov
repnz
lret
jno
push
push
pop
icebp
fildl
xchg
or
xchg
push
pop
roll
ret
push
pop
fadds
fidivl
xor
insl
inc
push
aam
addr16
in
cmc
mov
shlb
test
adc
add
sbb
out
rcll
push
aas
push
add
hlt
pop
push
ret
inc
aam
ficoml
mov
add
ret
mov
loope
rcrb
push
ficoms
in
sub
stos
sahf
xor
push
icebp
in
ljmp
xor
rcll
test
ret
cmc
out
and
aaa
gs
in
sbb
xchg
mov
pusha
sub
bound
jo
sub
lods
xchg
es
or
sub
shl
xchg
xchg
pushf
pop
rcrl
int
loope
xchg
xchg
mov
jle
fwait
int
jno
outsb
imul
mov
jb
clc
stos
cld
adc
fcomps
loope
xchg
lods
daa
mov
sub
cld
inc
int3
enter
mov
pop
loop
popa
sbbl
adc
inc
in
out
fcmovnb
leave
xorl
add
jo
dec
movsb
jecxz
inc
fldenv
dec
sub
or
loope
aas
mov
pop
pop
sub
inc
ret
hlt
inc
jle
and
xchg
lods
int
jmp
dec
and
stos
dec
mov
pop
jno
sahf
sbb
mov
jbe
add
mov
enter
pushf
lea
push
leave
inc
scas
mov
sub
inc
xor
enter
sahf
inc
cmp
fcmove
clc
out
sub
sbb
pop
insl
lds
push
cli
movsb
das
push
loopne
sbb
adc
xor
sub
lret
stc
mov
mov
fcoml
imul
loopne
sti
cmp
cmp
sub
inc
stos
pop
repz
fstl
inc
sub
aaa
je
xor
mov
adc
pusha
mov
mov
xchg
in
cli
jecxz
xor
sub
test
psrad
movsb
and
push
mov
mov
rcll
aad
fldenv
pop
inc
jnp
rcrb
adc
mov
je
outsl
stos
lds
fbstp
and
mov
pop
inc
mov
add
or
ret
stos
and
enter
daa
dec
repz
jge
repnz
iret
adcl
xorb
and
stos
in
add
xor
test
push
push
lret
xchg
cmp
js
inc
fs
leave
push
pusha
cli
or
pop
roll
inc
enter
mov
xchg
lret
lock
sub
out
push
aad
sbb
jge
sub
fstpt
icebp
pushf
shlb
mov
loop
add
dec
mov
cmpsl
xchg
push
test
rcrl
lcall
and
fimuls
or
mov
icebp
cli
pusha
les
jg
ret
icebp
sti
cmpsl
lret
jbe
cld
mov
pop
cmpl
roll
jb
and
dec
pusha
adc
mov
in
mov
pop
jg
sub
add
adc
neg
fmull
or
shl
xchg
dec
cltd
sub
push
jecxz
xor
or
and
int
and
sahf
cli
or
xor
int3
xor
mov
lock
pop
or
mov
pop
fsubs
mov
mov
call
push
ret
test
mov
call
mov
out
scas
adc
jne
ljmp
loop
movsl
add
adc
push
sahf
mov
xchg
es
dec
testb
pop
or
and
xor
test
mov
pop
fwait
sti
xchg
adc
dec
shll
daa
rorl
dec
mov
testb
inc
jge
add
fidivrs
add
testl
xchg
pushf
mov
and
jns
add
lret
fsts
fs
and
sub
jl
test
sbb
imul
mov
pusha
movsb
aad
cmp
sti
cmp
in
cmpsl
popa
mov
rol
xchg
stc
incl
in
insb
xor
ret
test
adc
daa
xchg
imul
xor
popf
jecxz
jo
movsl
cmp
jb
xchg
inc
iret
imul
fs
sbb
pop
aaa
sahf
mov
lcall
xchg
pop
pop
lock
mov
xor
xor
push
rcrb
pop
test
add
cmp
rorb
xchg
mov
dec
out
pop
rcrb
imul
lcall
push
adc
repnz
lret
cmp
cmpsl
and
mov
orb
xchg
mov
inc
and
stos
pop
in
mov
jg
add
sub
mov
jp
mov
mov
ja
jecxz
mov
add
push
push
mov
call
cltd
mov
and
into
dec
test
stos
add
dec
mov
push
lds
mov
enter
pop
lock
les
push
inc
in
pop
xchg
or
xor
add
imul
push
xchg
test
mov
rol
out
outsb
mov
jnp
jo
imul
xchg
outsb
mov
pop
sti
mov
and
cmc
mov
lods
mov
inc
dec
adc
pop
mov
js
mov
push
push
test
mov
in
jne
cmp
sbb
xchg
or
ja
sahf
fnstsw
jb
lahf
xchg
mov
cmp
int3
pop
out
loope
pop
or
add
inc
stc
pop
jne
mov
xor
add
fimull
int
xor
in
mov
stos
scas
cmpsl
or
movsl
inc
cltd
xchg
mov
xor
je
gs
sub
cmp
out
into
jne
or
cmpsb
test
mov
and
jns
cltd
xchg
and
rcrl
movsl
ljmp
and
fcmovne
frstor
test
jb
mov
imul
dec
loop
fstpl
sti
and
pusha
popa
fs
orb
pushf
iret
add
cmp
jl
xchg
and
xchg
shrl
push
scas
cmp
fcomip
lods
shll
pop
xorl
dec
mov
leave
mov
orl
fwait
out
enter
dec
out
and
mov
lock
movsl
ss
in
out
call
dec
or
iretw
sub
aas
mov
xor
jns
ret
lcall
and
adc
push
pop
loop
adc
mov
mov
mov
dec
dec
mov
cmpsl
push
addb
dec
stos
dec
jbe
xchg
adc
sbb
jb
jne
pop
lahf
sub
xchg
xchg
dec
aad
aad
xchg
jns
rorb
dec
scas
hlt
mov
in
push
sbb
inc
mov
add
or
push
mov
mov
mov
iret
ja
lar
mov
pop
dec
add
pop
outsl
adc
add
push
xchg
lods
ret
or
imul
inc
jns
lcall
pusha
adc
stc
iret
fiadds
or
add
sub
cmpsb
xlat
sbb
adc
jne
push
mov
mov
mov
inc
sbb
and
dec
jmp
adc
add
jo
scas
movsb
lods
inc
xor
inc
inc
mov
pop
mov
repz
insl
fcmovb
push
out
mov
in
cld
repz
mov
inc
ljmp
inc
jbe
push
adc
out
xor
xor
stc
scas
lock
jg
popf
fs
push
stos
xchg
out
inc
jmp
jl
mov
xor
sbb
leave
inc
xchg
pop
sbb
jp
in
das
jae
push
arpl
cmp
jge
lock
es
jl
mov
add
adcl
pop
cmp
in
jmp
shrl
arpl
aas
daa
mov
data16
or
daa
cmp
mov
in
jnp
push
sbb
push
or
or
or
je
pop
sbb
fdivl
xchg
shll
sahf
lret
mov
movsb
jp
jae
jecxz
shrl
fists
stc
imul
pop
mov
or
lock
fldl
and
xchg
clc
xchg
imul
sub
mov
xor
scas
popf
jbe
mov
mov
shlb
roll
sahf
jne
add
xor
in
negb
pop
in
lret
add
fwait
mov
push
icebp
xor
or
jmp
in
nopl
cmpb
mov
mov
adc
mov
inc
jp
out
push
xchg
mov
aad
jg
or
adc
and
in
lea
push
gs
imul
mov
imulb
sti
mov
dec
mov
mov
and
jnp
fildl
and
lea
push
dec
mov
mov
stc
or
fwait
inc
arpl
inc
movsl
sub
out
cmp
dec
addr16
jmp
mov
sbb
pusha
mov
mov
xchg
mov
sahf
add
inc
or
fsubrp
sub
mov
dec
jl
dec
in
insb
test
mov
les
and
mov
shll
clc
rolb
mov
cmp
jo
sbb
hlt
dec
mov
pop
dec
ss
cwtl
pop
scas
stos
push
inc
and
cmpl
ss
imull
mov
pop
mov
adc
ret
adc
mov
mov
stos
sbb
lods
xor
and
ja
jae
repnz
out
in
cmp
inc
loopne
cmp
push
or
stos
adc
arpl
movsb
xchg
lds
jl
xchg
movsl
jg
xchg
data16
cli
aas
jmp
mov
pushf
jo
incl
out
stc
cmpsb
shlb
lock
aas
incb
mov
stc
mov
lds
sub
xchg
lds
js
jbe
in
shlb
mov
sbbb
fdivl
call
mov
shrb
sbbb
mov
jb
dec
push
shll
add
scas
xor
push
repnz
sbb
mov
or
int
xor
sub
enter
sbb
mov
roll
jmp
pop
lahf
ljmp
mov
out
out
rorb
sbb
movhps
rorb
mov
setne
sub
andl
and
add
cmpsl
jo
fwait
xorl
inc
push
mov
sarl
jnp
in
fistpl
inc
jmp
add
inc
add
sub
test
cmp
cmp
ret
mov
mov
add
xchg
or
mov
sub
rcr
cmp
pop
cmp
popf
pop
imulb
lahf
or
dec
ds
cmc
rep
ljmp
nop
xor
push
test
pop
dec
add
js
mov
xor
xchg
stos
fidivl
mov
cmp
stos
ja
cmc
pusha
scas
cmpsl
push
mov
sbb
and
popf
into
cmpsb
push
test
stos
cmp
push
lret
aas
clc
lds
sub
mov
and
xchg
push
lret
outsb
hlt
movsb
gs
xlat
fstps
jno
sbb
add
daa
repnz
fwait
pop
sub
icebp
repnz
and
flds
sbb
pushf
cs
fstps
push
repnz
hlt
jns
push
mov
push
xchg
add
ljmp
or
xchg
insb
stc
pusha
shlb
lret
and
push
fsubrp
insl
pop
sahf
or
sti
das
cmp
adc
mov
sahf
lds
push
test
sarl
sets
xchg
jb
cmp
xchg
lahf
lret
pop
push
mov
xchg
flds
mov
out
inc
je
or
cmp
jecxz
lret
xchg
scas
mov
push
xchg
mov
jno
xor
cwtl
mov
imul
sbb
decl
test
push
icebp
mov
lret
pop
dec
pop
shrl
inc
xchg
cmp
push
pop
scas
jo
mov
jnp
repz
add
stos
or
pop
mov
popa
mov
cs
or
mov
pop
xlat
mov
sbb
fisubrs
push
mov
bound
fsubrp
fwait
push
dec
es
aam
cmp
and
cmpl
inc
rcrb
pop
jl
sbb
ret
adc
fmull
xchg
push
pop
scas
cmp
mov
in
jnp
cmc
testb
xchg
pop
xorl
xchg
sbbl
push
into
jmp
mov
fidivrl
push
xchg
sbb
fidivrl
test
push
mov
seto
daa
xlat
hlt
daa
decb
hlt
lea
xor
iret
inc
mov
popa
mov
inc
xchg
leave
mov
mov
mov
mov
clc
icebp
testl
test
fcomip
aam
rcrl
popa
mov
int
ja
roll
cwtl
js
mov
clc
dec
xchg
sub
dec
nop
outsb
repz
pop
or
fisttps
repz
ret
and
add
push
sbb
mov
and
insl
xchg
es
and
xchg
lret
in
cmp
mov
ret
mov
sub
jnp
jbe
lret
pushf
sbb
imul
jae
bound
pop
repnz
out
adc
les
jle
popf
call
nop
movsl
add
mov
orb
dec
js
jae
stc
mov
lea
and
mov
in
inc
jg
enter
push
add
das
xchg
adc
jbe
sbb
scas
sahf
gs
push
fdivrl
lea
jle
aad
aad
movsb
cli
mov
sub
ret
pop
xchg
es
repnz
out
sub
xchg
movl
sub
lcall
add
sarl
pop
aas
ljmp
std
rcl
or
xchg
aad
xorl
mov
xor
lcall
jg
cmp
and
pusha
adc
je
mov
loop
dec
dec
add
loopne
cmp
frstor
xlat
fdiv
mov
inc
add
test
mov
fs
sti
mov
jns
cmp
stc
xorps
enter
movsl
out
out
loopne
jle
ffreep
push
push
push
sti
sub
mov
jbe
sub
xchg
xor
stos
das
cmpsl
jle
test
adcl
add
xchg
dec
push
repnz
jge
pop
or
fldenv
xchg
je
xchg
imul
add
idivl
inc
jnp
in
outsl
dec
scas
movsl
or
jle
shl
fnsave
loop
maskmovq
notl
mov
loop
xor
dec
add
in
in
jle
ds
inc
jle
xor
mov
pop
sbb
push
xchg
xchg
imul
push
cmp
pusha
and
pop
jo
push
bound
adc
xchg
inc
mov
scas
pop
inc
inc
lahf
or
cltd
cld
mov
xor
mov
out
sbb
xor
dec
mull
and
sbb
jae
scas
dec
xorl
adc
fstpl
sahf
outsb
push
movl
lahf
test
xchg
mov
pushf
pop
cld
mov
xchg
dec
popf
xchg
xor
pop
repnz
pop
push
push
xchg
movsb
in
sbb
lods
mov
pop
xchg
inc
fimuls
stos
jp
mov
stos
mov
push
out
sub
ljmp
test
jp
scas
aam
xor
cmp
xor
and
jnp
movsl
jle
dec
lock
in
lcall
pop
lods
inc
push
popa
movsb
fistl
scas
out
pop
daa
in
mov
insb
jne
lcall
push
lret
sub
mov
int3
mov
xlat
sbbb
mov
push
stc
or
push
lret
mov
test
fwait
push
xchg
lret
adc
inc
sub
and
enter
push
mov
and
aas
xchg
mov
mov
add
ljmp
js
test
lods
or
xchg
add
fcoml
sahf
sub
cs
pop
imul
pushf
dec
stos
dec
pusha
inc
outsl
lahf
cwtl
sub
into
popa
inc
fldt
or
fimuls
push
push
rcr
ljmp
jp
out
pop
add
repz
lock
pop
stos
gs
pop
cmpsb
jns
inc
and
sbb
aaa
mov
loope
inc
xor
sti
call
jmp
inc
mov
dec
data16
xchg
xchg
xor
pop
mov
fs
mov
sub
mov
shl
lea
fcomps
inc
xor
repz
mov
pop
jnp
rcll
mov
jno
sbb
int
or
inc
scas
mov
xchg
das
and
push
fld
int3
std
fcmovu
xor
rcr
inc
pop
dec
and
xlat
dec
out
or
mov
insl
addr16
sar
jns
fcoms
nop
mov
shrl
negb
dec
dec
popf
xchg
lret
dec
out
xchg
loop
cld
pop
push
in
enter
push
mov
test
ret
cmc
xchg
lods
pop
adc
mov
jbe
sbb
pop
cmpsl
cmpsb
sub
cmpsb
ljmp
cmp
and
dec
cs
sub
xlat
iret
mov
lcall
popf
sub
dec
and
dec
cmpl
pushf
xchg
push
stc
or
push
jle
cmp
xchg
xchg
sbb
or
jo
out
cmpb
dec
out
jg
mov
aaa
jb
les
fistl
xchg
test
je
cmc
sbb
stos
lcall
mov
cmp
or
mov
pushf
push
imul
sar
mov
adc
cmc
cmc
push
mov
icebp
dec
fistpll
push
pop
jmp
inc
lods
cmpb
xchg
rorb
pop
rolb
xor
mov
xchg
cli
push
cmp
jae
push
mov
xor
movsl
fcomp
imul
test
sbb
rorb
sbb
stos
pop
rcrb
push
mov
cs
or
mov
pop
mov
mov
bound
adc
sub
stc
in
pop
aaa
jmp
xchg
pop
loop
pop
mov
and
mov
dec
in
cmp
daa
lods
and
cmpl
out
lea
mov
data16
add
pusha
inc
out
push
mov
cmp
fldln2
mov
jg
cmp
test
xor
dec
push
ljmp
adc
mov
and
movsb
cmp
out
xchg
cmpsl
fisubl
add
adc
mov
lret
aaa
jno,pt
and
out
addr16
jmp
shll
mov
pop
push
lods
hlt
push
mov
jmp
mov
and
sbbl
pop
pop
sub
adc
adc
js
scas
dec
inc
mov
and
mov
cwtl
xor
pop
fdivr
mov
fists
popf
fcompl
dec
fcmovb
adc
shr
imul
adc
lret
fnstsw
test
test
cmp
lea
int
jge
aad
jg
xor
mov
lods
cltd
sbb
arpl
mov
fs
cmp
aaa
paddsb
negb
pop
rol
ret
jmp
js
mov
int
and
aas
mov
push
hlt
imul
shll
push
popa
call
stos
pop
dec
test
jnp
cs
dec
aad
or
jl
xchg
jmp
xchg
adcb
add
jo
dec
fwait
mov
add
mov
iret
sbb
lret
or
jmp
out
jg
jp
mov
repnz
jno
clc
cs
das
xor
pop
jae
and
jmp
arpl
mov
mov
addr16
adc
lea
cwtl
push
mov
in
xor
call
pop
mov
ljmp
or
xchg
rclb
js
popl
cmpsb
in
or
clc
loope
pop
in
aam
adc
outsb
bnd
mov
push
pop
lret
xchg
cltd
or
xchg
xchg
jl
mov
cli
ret
fldpi
stos
outsb
mov
pop
and
fsubrs
dec
in
mov
pop
lea
sub
cmpsb
loope
pop
or
into
fld
fildll
jg
shrl
sub
loopne
testb
sub
out
cmp
cmpsb
inc
cmp
fstps
or
xchg
inc
mov
jg
movsb
icebp
or
sbb
jns
addr16
out
mov
jle
or
or
popf
clc
mov
aaa
add
std
pushw
lret
jle
dec
dec
xor
mov
ja
out
jmp
pop
adc
adc
rcll
int
pop
fistl
aas
mov
add
adc
push
jns
sbb
push
ss
mov
loopne
mov
outsb
sbb
cs
orb
sarb
lods
jl
lods
jmp
loopne
pop
inc
mov
fiaddl
mov
bound
rorb
loope
xchg
sbb
pop
push
cmpsl
sbb
mov
mov
rorb
testl
outsb
mov
imull
pop
sti
aas
xchg
cmpsl
js
or
pop
scas
inc
or
cmc
outsb
lahf
push
cmp
or
xor
xchg
ficomps
xchg
test
aad
xchg
pop
adc
mov
lahf
pop
or
imul
sbb
add
mov
movl
cmp
fistpl
and
les
icebp
outsb
fsubrl
push
mov
or
or
dec
mov
repnz
add
xchg
sbb
rcrl
and
in
and
aam
ret
clc
mov
lret
mov
sub
sub
insl
add
fdivrp
dec
into
jae
mov
lods
mov
fwait
dec
pusha
xchg
in
inc
into
outsl
les
popf
mov
test
shr
sbb
es
cmp
xor
adc
cs
jp
push
aaa
in
loopne
push
jns
inc
int3
push
ljmp
push
lcall
cmp
push
lret
lret
mov
popa
jne
loope
stos
cmp
mov
add
fists
aas
aaa
gs
lcall
iret
and
std
imul
fwait
stos
fdivr
dec
pop
out
dec
clc
out
xor
fisttpl
mov
sahf
je
sarl
insw
or
movsb
cmp
xchg
ds
inc
pop
je
jo
imul
loopne
loope
inc
jae
inc
dec
jb
rorl
lret
mov
lods
fisubs
out
rorl
insl
fisttpl
mov
adc
repz
fisttpll
inc
mov
sbb
fmulp
fldenv
das
push
dec
inc
lods
adc
add
in
stos
jmp
xchg
and
sub
xchg
jmp
xlat
outsl
adc
sbb
insb
sbbb
jmp
pop
rol
ljmp
es
pop
sbb
mov
xchg
mov
insb
call
popa
subb
scas
arpl
cmpsl
xchg
fdivr
xor
add
sbb
movsl
int
dec
pop
inc
mov
xor
lret
jge
adc
mov
and
iret
mov
mov
int3
inc
ds
sbb
mov
cld
mov
fnstcw
sahf
adc
adc
pop
jp
iret
movsb
jo
inc
add
or
lock
loopne
out
cmovo
stc
xchg
repnz
jb
movntps
cmp
mov
int3
scas
sub
cmc
gs
cmp
cmp
jmp
and
mov
aad
movsb
dec
push
push
scas
dec
dec
xchg
push
and
leave
or
cmp
push
enter
jne
dec
jge
das
aad
ss
cmp
je
cmp
cmp
cmp
xchg
jecxz,pn
add
bound
in
pop
into
pop
imul
incb
addr16
xor
int
xor
jecxz
mulb
data16
popf
push
movsl
cli
mov
xor
scas
mov
mov
hlt
inc
or
movsl
test
cltd
pop
mov
aam
dec
mov
add
mov
pop
add
sub
pop
ret
pop
or
cwtl
ja
bound
push
jecxz
push
sub
push
lret
xor
mov
mov
sbb
jb
cwtl
jb
idivl
mov
jae
sbb
xor
pop
xchg
fistl
out
sbb
imul
pop
xchg
sub
pop
push
mov
ret
adc
test
push
push
mov
pop
test
or
xlat
je
in
and
lods
scas
sub
jo
lods
pop
mov
les
loop
pop
test
xchg
or
xchg
fsts
inc
call
clc
sub
inc
ja
lahf
in
lea
add
movsl
xchg
jecxz
inc
inc
mov
pop
loope
mov
xor
fucomp
out
cmpsb
out
jne
xor
popa
mov
mov
jb
jmp
mov
int3
in
arpl
mov
loopne
cltd
xchg
sbb
rcl
cld
and
out
xchg
not
les
push
cltd
bound
xor
loope
jae
cmp
lds
imul
mov
repnz
icebp
adc
daa
rorl
sub
mov
imull
mov
stos
jnp
sub
jae
sbb
popf
mov
push
inc
dec
pop
cmovg
jo
xlat
outsb
cmpsl
xor
dec
jbe
mov
js
lea
outsb
movsl
fsts
movsl
pop
stos
pushl
imul
insb
jne
dec
nop
dec
push
call
sti
add
hlt
loop
pop
mov
call
lods
xchg
adc
addb
push
popf
scas
jo
sbb
out
mov
ficoms
lea
sub
xchg
or
fsubr
sbb
jnp
ss
lds
dec
pusha
stc
leave
aam
bound
or
aaa
jo
xlat
sbb
aad
adc
or
cltd
push
inc
xchg
xor
pop
jl
daa
mov
icebp
sub
or
imul
jge
mov
ret
lock
test
xchg
imul
pusha
jns
iret
out
add
subb
leave
sub
mov
adc
inc
in
xchg
cmpsl
cmpsl
pop
sub
mov
leave
push
movsl
stos
cmp
mov
pop
popf
ljmp
outsl
dec
jge
ret
jbe
sub
aam
rcll
mov
add
mov
shll
xchg
sub
scas
in
dec
dec
cltd
cwtl
xchg
mov
leave
jo
fwait
outsl
js
lcall
xchg
cwtl
sbb
pusha
cmp
je
pop
and
call
fildll
shrl
xor
nop
cmc
aas
dec
aas
pop
int3
and
inc
cmp
xchg
and
mov
popf
dec
aam
sub
mov
ja
push
mov
mov
cmp
ficoms
add
test
add
out
mov
mov
cmp
jp
std
outsb
aas
scas
mov
ds
pusha
jno
push
jge
test
sub
pusha
mov
mov
movsl
jle
imul
cmp
add
insl
into
jge
push
pop
cmp
xchg
and
jno
jg
clc
sub
lret
out
dec
push
aam
lods
cmpsb
xchg
push
push
adc
aaa
jne
push
cli
les
lret
fs
fmuls
and
in
int3
xchg
popf
fimull
idivb
mov
mov
into
mov
jb
jo
inc
xcrypt-ctr
cmpsl
pop
mov
dec
sub
ficoms
les
jmp
xor
ds
fcmovnb
pop
addr16
sub
push
sar
out
push
test
or
jecxz
xchg
cltd
ret
aas
je
out
push
inc
mov
lods
mov
fwait
mulb
leave
cmp
mov
ja
pop
jae
loopne
fsubrl
xchg
cmpsl
push
mov
in
sbb
sbb
repnz
and
lahf
mov
pop
in
jmp
dec
cmp
pop
sub
and
fimull
pop
lret
push
mov
dec
subl
jmp
in
call
outsl
push
cmpsb
mov
xor
inc
sub
sti
sub
sub
lahf
sbb
fidivs
loopne
stos
jb
pop
cli
bound
mov
cmpsb
enter
scas
stos
fiaddl
mov
mov
xchg
push
popf
adc
dec
jl
sub
pop
fsubp
push
or
test
inc
test
jmp
dec
add
scas
lods
jp
cld
adc
or
bound
mov
cmp
dec
or
push
stos
mov
out
xchg
je
sub
jb
pop
xchg
rcll
pop
inc
aaa
cmp
lds
popw
pop
testb
xlat
cmp
mov
mov
xchg
or
cwtl
scas
icebp
xchg
sub
add
into
dec
test
mov
dec
pop
push
jle
lods
enter
cwtl
cmp
xchg
lock
shl
into
popa
cmp
pushf
mov
inc
outsl
mov
std
test
or
ja
out
in
fisubrl
sahf
xchg
dec
mov
cmpsl
cli
test
jecxz
repnz
push
ss
fisttpl
cmp
and
test
lret
push
push
insb
cmp
jae
inc
sahf
in
cmc
mov
stc
loopne
popa
stos
lods
dec
push
fs
loope
sbb
lret
xor
xor
mov
lcall
aad
xchg
pop
and
push
out
insl
mov
cmp
inc
cmp
negb
cmp
xchg
jae
cmpsl
xchg
xor
cmp
mov
lds
mov
mov
sbb
or
cld
mov
shl
popa
rcrb
add
cmp
aaa
mov
aaa
mov
sub
xchg
hlt
out
or
adc
and
in
dec
mov
jp
sub
cmc
xor
dec
xchg
cs
lds
xchg
inc
xor
sub
scas
filds
inc
test
aad
push
out
inc
icebp
inc
lea
dec
imul
test
test
divl
add
inc
cli
into
enter
int
std
push
js
fimull
mov
fcom
iret
insl
mov
jno
mov
pop
or
inc
test
out
jo
adc
test
ds
scas
mov
aad
std
mov
push
popf
add
sbb
ret
jl
sub
adc
loopne
add
or
stc
pop
sbb
cltd
cmp
xlat
inc
push
lret
inc
or
jb
lods
loop
shll
inc
insl
pop
or
lea
cmpb
cld
push
scas
jle
fmull
lds
js
pop
push
mov
sahf
roll
inc
mov
inc
xchg
hlt
into
sub
mov
and
xor
mov
int3
or
or
and
mov
clc
in
xchg
ret
les
cmpsl
xchg
xor
stos
jl
scas
addr16
out
mov
or
jb
sub
xchg
cmp
or
sbb
xchg
jnp
cmp
cmc
and
xor
addr16
xchg
jne
jns
fstpt
mov
mov
mov
mov
fstpl
aaa
sub
fnstsw
mov
jg
mov
cmp
aaa
outsl
loop
out
jne
cltd
inc
xchg
mov
cmp
mov
movsl
clc
sbb
mov
push
mov
sub
cmp
and
jmp
push
pop
adcl
test
cmp
push
inc
dec
sbb
inc
test
adc
push
stos
xchg
outsb
adc
test
dec
inc
xchg
adc
push
adc
sbb
addl
mov
cmc
in
loope
aam
into
in
aam
sarb
mov
dec
inc
and
xchg
ret
shl
sahf
loopne
dec
in
or
jge
mov
icebp
add
movsl
out
mov
xlat
aam
ret
dec
xor
fldt
push
fistpl
shll
push
jl
andl
mov
sub
icebp
mov
loope
fld
repnz
data16
xor
or
adc
sbb
cmc
pop
leave
cmp
lret
fbstp
sub
mov
xor
in
or
dec
mov
ds
out
stos
mov
pusha
sub
pop
inc
fistl
push
dec
shrb
je
cmp
jmp
cmpsb
mov
or
mov
pop
cmpsb
sbb
mov
add
adc
mov
xchg
loop
addr16
dec
inc
xor
mov
popa
mov
push
movsl
aad
loop
test
enter
fisubl
mov
xchg
popa
or
xor
jle
ss
sbb
mov
ret
ret
or
jmp
cmp
mov
and
outsl
dec
mov
fnstsw
push
adc
pop
xor
and
jnp
lret
nop
sbb
cmpsl
sbbb
inc
push
movb
jb
fs
imulb
push
arpl
adc
dec
lds
insl
add
fistpl
ret
orl
mov
sbb
fsubrl
xchg
aas
xor
xchg
dec
aaa
mov
jle
jge
imul
into
mov
addr16
add
xor
mov
mov
fsts
jno
in
add
mov
push
adc
pop
inc
jp
jmp
cmp
push
push
dec
into
int3
dec
adc
or
xor
shrb
jle
pushf
cmpsb
cmpsb
loopne
adc
test
test
pop
or
repz
cmp
inc
dec
jecxz
or
inc
aad
mov
stos
popf
js
mov
sub
push
sub
push
sbbl
xor
mov
ljmp
xor
dec
push
mov
movsl
jmp
pop
or
shrb
pop
rolb
test
xor
inc
mov
insl
leave
shll
xor
push
hlt
aad
shrl
add
push
inc
lret
aam
mov
inc
pusha
and
jp
or
xor
or
stc
mov
dec
aam
and
add
insb
jo
and
add
or
add
add
jecxz
or
inc
pop
pop
imul
aad
jo
imul
xor
stos
out
ljmp
loopne
sbb
inc
xchg
mov
push
push
push
sti
icebp
mov
and
add
and
into
push
adcl
or
cmp
aaa
decb
into
sub
out
xchg
fnstsw
sbb
arpl
fmuls
insb
mov
arpl
or
std
mov
fidivs
jecxz
xlat
sub
lret
rorb
std
push
outsl
sahf
add
push
mov
mov
sarb
inc
fwait
or
test
test
mov
mov
xor
cmp
cmc
lcall
insb
orb
out
mov
aaa
lods
sbbb
inc
xchg
jle
in
adc
addb
mov
hlt
cmp
lds
jecxz
in
dec
sub
mov
cltd
push
mov
pop
and
gs
loope
faddp
iret
sar
test
in
dec
mov
adc
mov
pop
fs
xchg
or
push
repnz
orl
mov
pop
fwait
mov
insl
xchg
push
jp
mov
sbb
out
push
and
sub
mov
frstor
cmp
in
mov
xchg
adc
in
adc
mov
cwtl
test
xchg
out
sbb
nop
lods
mov
mov
mov
dec
loop
mov
add
movsl
jge
jle
out
xlat
add
or
fimull
xchg
push
push
and
jns
cmpsl
push
pop
mov
adc
or
jo
lcall
addr16
stos
mov
adc
cmp
mov
lret
xor
xchg
stc
inc
mov
pushf
jg
pop
lahf
push
cwtl
pop
mov
shlb
mov
sub
sub
loope
jl
icebp
or
jae
xchg
je
xor
mov
into
loope
mov
mov
adc
mov
xchg
sbbb
test
andl
neg
shl
dec
ret
jg
sti
repnz
dec
mov
mov
jo
clc
ja
mov
ret
lret
loop
addr16
or
shll
jge
cli
mov
pop
xor
shll
in
inc
sub
cld
ds
sub
lret
push
jae
adc
leave
inc
or
shrb
testl
lea
cmp
xlat
fstps
das
pop
shr
int
mov
je
sub
or
jne
je
pop
jle
xor
push
out
hlt
mov
jl
and
mov
mov
cmp
jno
rcr
jnp
mov
mov
sbb
mov
fisttps
dec
hlt
addr16
dec
and
lods
test
fs
loope
adc
dec
fidivrl
add
or
push
mov
lock
cmp
jle
imul
stos
clc
popf
inc
add
es
cltd
stos
or
sbb
or
mov
imull
sti
push
insb
and
mov
repz
cmpsb
push
lods
in
add
fbld
orl
jle
cmp
ret
pop
adc
lods
insb
shlb
cmp
ljmp
sub
outsb
testb
jl
std
xchg
inc
or
sub
in
cmpsl
jl
jl
xor
jecxz
sbb
loopne
pop
sarl
or
mov
mov
dec
sub
lret
add
xchg
push
jne
inc
adc
jb
je
pusha
jnp
loop
jae
fwait
cmp
adc
cmp
fidivl
lahf
js
lret
mov
xchg
sub
mov
mov
push
neg
movsl
pop
cmpsl
mov
jg
pop
fimull
rorb
cmp
cmc
movsl
or
or
xor
out
mov
mov
icebp
out
sbb
fcompl
sbb
mov
fwait
mov
data16
les
xor
and
push
xchg
mov
es
into
mov
cwtl
addb
leave
ss
fstpt
cmp
inc
arpl
rcr
das
int
insb
xorb
dec
inc
fwait
or
push
jp
mov
sub
sbb
add
inc
xor
daa
xor
pop
pop
mov
xor
and
mov
insl
ret
mov
jbe
dec
loope
aad
mov
inc
sti
shr
adc
jne
jbe
mov
pop
jge
mov
out
add
iret
jecxz
icebp
mov
repz
push
or
or
sahf
je
jmp
cmp
mov
clc
push
mov
fs
lds
rcrb
cmp
xchg
sbb
mov
xchg
clc
xchg
pushf
cltd
out
sahf
lods
ss
pop
loop
mov
push
jg
and
jecxz
pop
mov
aas
test
in
stos
xor
hlt
mov
sti
outsl
mov
fdivrp
test
loope
or
sub
call
dec
cmp
outsb
or
clc
sbb
lcall
jl
in
xor
inc
sahf
dec
les
mov
std
aam
push
lahf
das
sbb
ret
pop
or
xchg
jmp
or
sub
adc
pop
jb
cmpsl
inc
xchg
sub
and
sbb
sbb
in
push
cmp
cwtl
ds
stos
fisttpl
jo
cmpb
mov
in
mov
outsb
push
testb
jecxz
cs
sbb
clc
mov
sbb
loope
push
cmpsl
or
fs
imul
aad
shlb
cwtl
or
addr16
aaa
gs
test
sbb
push
loopne
push
xchg
add
test
imul
jge
xchg
test
mov
test
out
lret
in
fbstp
pop
xor
cmpsb
inc
mov
xor
sub
nop
pop
xchg
int3
pop
mov
inc
mov
sbb
je
aas
cmp
sti
and
ss
aaa
pop
pop
mov
adc
iret
jge
mov
in
dec
xor
mov
adc
bound
cmp
xor
fdivl
cpuid
cmp
jl
shll
push
cmp
sbb
in
push
xchg
insl
cmp
mov
push
mov
xor
mov
sub
xor
xor
pusha
cmp
inc
adc
aas
mov
push
jbe
aas
push
mov
push
int
hlt
fwait
push
push
fwait
ret
xchg
push
mov
shlb
test
dec
mov
in
sti
jg
xchg
int
pop
xchg
push
dec
mov
out
xchg
jae
mov
scas
mov
sub
lea
shl
je
div
push
lea
leave
iret
xor
jb
xchg
cmpsl
imul
and
lock
pop
xor
and
push
and
outsb
xchg
arpl
mov
add
mov
sbb
pushl
out
pusha
and
mov
in
dec
cmp
leave
push
mov
add
out
out
ljmp
cltd
dec
xchg
add
out
cli
mov
fwait
out
inc
or
jle
push
or
pusha
pop
lcall
aad
dec
sub
jg
clc
or
inc
bound
adc
lods
sub
push
mov
inc
fdiv
ja
and
dec
ret
jecxz
repnz
loope
in
test
and
gs
arpl
cmp
cld
stos
testb
sahf
sbb
push
push
shl
call
add
movl
xor
pop
inc
mov
dec
pop
lret
dec
mov
adc
sbb
xor
mov
leave
and
jno
fimull
jnp
cwtl
sub
out
iret
std
rcll
fcoml
inc
jle
pop
jo
fwait
mov
mov
sub
and
adc
push
and
dec
repz
xchg
imul
in
inc
cmp
out
sub
ret
shl
out
pop
add
iret
bound
mulps
jne
loope
lcall
xlat
mov
in
lds
js
fstps
mov
pop
dec
fs
jo
push
repnz
mov
cmp
push
leave
push
mov
xchg
insl
jo
xchg
and
jge
mov
call
push
out
ljmp
ja
ss
outsb
jle
sub
sbb
aaa
mov
sub
mov
loopne
lahf
loop
repnz
cld
adc
xchg
out
or
dec
adc
sbb
mov
lahf
and
bound
in
cmp
clc
push
fs
or
jp
call
jmp
popa
repz
icebp
fcoml
sbb
sbb
sbb
mov
cmp
sbb
int3
lcall
sub
and
inc
add
jns
inc
inc
faddp
cmova
ficoml
shl
insl
js
mov
cmp
shrl
enter
cmp
pop
repz
xchg
in
iret
popa
popf
jo
sub
sub
cld
mov
sahf
xor
mov
int
adc
mov
or
pop
aam
mov
inc
rorl
push
inc
in
stos
cmp
leave
jmp
lcall
subl
out
mov
mov
dec
rcll
pop
jne
inc
cmp
sbb
mov
dec
cmpsl
mov
jnp
arpl
jbe
pop
dec
or
mov
sbbl
int3
mov
loopne
sbb
icebp
pop
jo
les
sbb
mov
dec
jns
xchg
pop
sub
mov
sub
push
adc
fucomi
in
dec
cmpsl
iret
adc
pop
lods
shll
ss
jae
adc
lods
ljmp
cltd
sub
addr16
pusha
sub
push
int3
scas
dec
jmp
incb
nop
push
idiv
pop
dec
cmc
add
ljmp
pop
arpl
enter
outsl
cld
adc
jl
cmpsl
in
adcl
xor
mov
xlat
push
or
sub
outsl
push
call
inc
lock
mov
call
scas
mov
ljmp
and
push
add
loop
scas
lds
in
cwtl
jne
hlt
movsl
sub
inc
push
adc
js
mov
aad
or
jno
dec
repnz
sbb
pop
adcl
insl
adc
out
xchg
mov
repz
push
in
mov
ljmp
aas
aas
or
rcrl
jns
jnp
sub
mov
mov
mov
insb
sbb
add
in
into
leave
cmpsl
xlat
bound
cld
lret
xchg
jecxz
sbb
jmp
add
int
inc
dec
scas
pop
dec
int3
cli
pop
bound
adc
scas
xor
inc
sbb
outsb
cld
aaa
xchg
in
mov
loope
mov
lea
xchg
ficoms
addb
mov
fldl
aad
sub
xchg
xor
jno
inc
mov
mov
push
bound
xchg
adc
lock
pop
sub
push
cvtdq2ps
call
shll
adc
insl
cmp
out
push
xor
aaa
bound
aas
lret
mov
fcoms
hlt
daa
xorb
adc
not
es
icebp
icebp
cwtl
test
xor
rcrl
dec
out
push
cltd
loope
cmp
mov
cmp
cmp
add
and
iret
add
jo
jnp
mov
icebp
inc
addb
add
or
cmp
sahf
sub
movsb
jae
inc
fsubr
popa
call
mov
adc
mov
call
adcb
stos
add
cld
stc
add
movsb
mov
jmp
fdivrs
mov
jns
test
cmp
xchg
inc
sbb
fmull
xor
xor
arpl
ret
xchg
rcrb
lea
aad
xorl
push
or
hlt
cmpsl
push
push
adc
insb
add
in
dec
and
and
cmp
mov
into
insl
sub
loopne
dec
cmp
data16
pop
dec
popa
cld
stos
lret
ja
mov
outsl
jecxz
mov
mov
dec
sbb
shlb
mov
js
lret
pop
xor
or
repnz
fisubs
dec
loope
pop
out
fidivrs
inc
mov
cmpsl
out
insl
out
and
xlat
sub
xchg
mov
jnp
xor
mov
jge
pop
out
das
mov
idivb
and
lds
std
cmpsl
pop
rorb
stos
insb
or
xor
ja
fbstp
cmp
jl
cld
mov
out
out
sub
in
jmp
leave
mov
pusha
out
mov
fwait
ss
nop
mov
jp
fidivrs
xor
popf
inc
mov
push
cmp
data16
notb
push
mov
ja
mov
xor
ljmp
lods
sub
fs
stos
xchg
adc
jae
shr
pop
jl
cmp
addr16
cmpsb
icebp
fucomp
mov
xchg
into
mov
lods
in
adc
xchg
into
sub
in
lock
jb
push
hlt
pop
stos
add
xor
push
pop
loop
dec
add
xor
xor
mov
stc
xlat
push
lcall
popf
sub
sub
xchg
mov
and
pop
dec
movsb
imul
adc
add
in
mov
dec
sbb
sub
jmp
pop
jle
cmpsl
fwait
stos
fcmovb
xchg
push
dec
xor
leave
insl
push
sub
pop
or
inc
fcompl
or
push
sarl
dec
jbe
inc
push
and
adc
pusha
cltd
popa
mov
cmp
psubsb
outsb
or
mov
int3
das
loope
mov
and
inc
sbb
or
inc
inc
iret
daa
lea
sub
jo
out
cmpsl
sbb
push
xor
xor
leave
inc
xchg
test
inc
pop
hlt
pop
testl
js
jge
aam
mov
aam
mov
sub
push
mov
cmpsb
and
shrb
mov
adc
mov
scas
inc
cmpsl
inc
out
and
sub
cmp
jne
xlat
bound
and
insl
and
or
pop
lods
inc
mov
mov
cmpsl
fwait
out
icebp
add
mov
leave
cmp
push
popa
adc
cmp
mov
and
stos
ljmp
xor
rol
jb
dec
xor
xor
sbb
arpl
jne
mov
out
or
lds
loopne
sbb
xchg
loope
inc
pop
fisttpll
mov
push
mov
data16
pop
inc
dec
cmp
ja
or
cmc
pop
imul
or
outsl
sbb
addb
loop
and
rcl
lea
xchg
sbb
inc
mov
mov
ss
or
dec
dec
mov
cmp
sub
or
pushf
sub
ljmp
push
xchg
test
mov
jb
fs
loopne
xor
pop
test
outsl
push
in
loopne
mov
flds
cmp
in
sahf
data16
pop
insl
mov
mov
mov
cwtl
mov
add
outsb
mov
hlt
dec
jmp
int3
test
or
lods
adc
scas
adc
mov
mov
pop
jne
jno
outsb
push
jno
fwait
les
xlat
inc
fildll
mov
xchg
xchg
sub
adc
repnz
loop
mov
jg
addb
stc
xchg
add
mov
mov
dec
xor
add
lods
and
cmpsb
cmp
or
outsb
pop
cmpsl
clc
sbb
lods
sbb
push
loop
mov
pop
scas
insl
mov
inc
sahf
daa
and
lds
in
pop
ficompl
pop
dec
jp
jnp
bound
or
xor
or
sbb
in
outsl
rcrb
fimuls
mov
dec
mov
adc
mov
iret
or
leave
aas
insl
jae
mov
xchg
lock
pop
lea
jl
cmp
scas
inc
add
xor
mov
mov
xchg
sbb
nop
mov
xor
ret
repz
hlt
outsl
pushf
sbb
sbb
inc
roll
ja
pop
dec
mov
fisubl
mov
movsb
push
fcoml
je
scas
lds
cmc
dec
ss
incl
dec
mov
icebp
sub
pop
or
popa
inc
loopne
lahf
mov
mov
ret
test
std
mov
rcrb
add
jne
insb
cltd
rorl
arpl
mov
inc
popa
iret
mov
sub
pushf
leave
adc
jl
das
or
mov
in
je
inc
sbb
jo
xchg
xlat
out
jno
test
mov
xchg
inc
mov
movsb
add
stos
mov
jg
sahf
push
jnp
sbb
push
scas
jecxz
shll
insb
push
call
lea
or
dec
push
mov
pop
test
pop
adc
add
decb
ss
icebp
movsl
cld
or
ljmp
outsl
dec
cmp
dec
scas
and
xor
sub
xchg
es
sub
mov
xor
ss
ss
mov
jl
jp
inc
push
lock
jbe
iret
xor
imul
repz
push
mov
jg
pop
jg
pop
inc
ret
xchg
lods
push
or
nop
mov
sbb
sub
push
dec
decl
mov
xor
cwtl
mov
rolb
dec
arpl
jno
fnstenv
pop
pusha
inc
dec
push
test
add
daa
ret
jns
push
dec
add
in
nop
xor
fisubs
inc
ss
xor
int
cwtl
icebp
popf
push
ret
pushf
push
test
or
in
sbb
and
mov
out
sti
push
pushf
xchg
outsl
lret
xchg
inc
test
or
mov
rcrl
fildl
xchg
push
pop
mov
incb
xor
mov
lcall
bound
mov
sahf
push
rcrb
shr
mov
divl
nop
adc
daa
xchg
mov
and
inc
jns
or
out
mov
js
adc
loopne
sbb
insl
cmp
pop
add
stos
arpl
addl
sub
or
cmpsl
and
mov
mov
push
aad
jmp
push
or
sbb
test
mov
loop
xchg
xor
mov
pop
outsl
aaa
sbb
mov
pop
sbb
data16
loopne
and
dec
std
imul
negb
adc
cwtl
add
jo
insb
testb
push
adc
sbb
cmc
sub
push
mov
call
aad
sub
push
movsl
xchg
cld
aad
mov
mulb
pop
ficomps
adc
lds
pop
inc
mov
loope
pop
pop
mov
cmpsb
push
and
adc
xchg
push
sti
ficompl
mov
std
insb
xor
mov
adc
in
or
sti
hlt
fwait
hlt
dec
add
jae
pop
or
stc
adc
jle
dec
lcall
sub
stc
pop
ja
in
fidivrs
cs
push
mov
adc
mov
in
dec
mov
mov
pop
push
gs
cltd
inc
cmp
sti
imul
insl
int3
aad
xchg
inc
lds
mov
lahf
data16
jg
xchg
loop
inc
out
jbe
cmp
sbb
loope
jo
aam
andl
xchg
sbb
xchg
loope
es
add
pop
fisttpll
jge
cmpsl
xchg
mov
add
and
fsubl
xchg
dec
push
int
in
repz
xor
lret
test
popf
pushf
cmpsb
stc
cwtl
aas
lret
bound
push
sbb
ret
ret
sub
addl
shrl
lock
xor
push
lods
popf
pop
adc
or
jle
mov
sub
in
out
or
mov
loop
lds
add
sbb
xchg
pop
jle
rcrb
cmpsl
mov
hlt
sti
xor
xor
jmp
out
test
adc
push
and
jbe
mov
or
xchg
adc
xor
pusha
lods
in
dec
pop
das
xor
or
cmp
dec
dec
or
inc
xor
lahf
xchg
sarl
lock
imul
pusha
xchg
and
inc
ljmp
es
jl
mov
mov
jg
mov
xor
pushf
mov
inc
and
xor
das
popa
dec
andps
gs
jp
adc
pop
inc
xchg
lods
clc
jbe
jmp
push
mov
adc
lcall
in
in
and
loope
mov
adc
int3
sub
test
push
test
pop
jne
push
fcoms
xchg
add
push
xchg
and
shll
enter
jo
xor
jb
mov
lret
push
test
cwtl
jb
sbb
or
fnstcw
xchg
jl
or
data16
loopne
cld
cmpsl
pop
ret
aad
nop
aas
xlat
inc
je
inc
and
sbb
sarb
mov
sbb
clc
mov
jo
push
dec
cmc
stos
or
mov
pop
jne
je
push
jp
or
xor
lcall
mov
rcl
popa
std
adc
push
out
or
addl
dec
loope
mov
arpl
jl
shll
push
jb
mov
loopne
int
or
jb
inc
sbb
sbb
scas
inc
cli
pop
aas
fs
fdivrs
cmc
jmp
fdivp
inc
dec
mov
cmc
sbb
test
pop
adc
std
mov
sub
fsubs
cmpsb
imul
mov
pusha
sub
jne
pop
sub
sbb
ret
shll
int3
jmp
sbb
fmull
pop
pop
xchg
and
in
mov
cwtl
inc
pop
push
ret
mov
fmull
mov
inc
stc
jno
cmp
jb
movsl
lods
mov
sbb
sub
aas
sbb
sub
inc
out
xchg
mov
dec
jbe
mov
jae
xchg
dec
ret
fsub
rorb
lcall
movsb
xlat
testl
and
jl
loop
jl
xchg
sub
test
xor
sub
add
push
mov
pop
jb
inc
inc
js
pop
xchg
jne
or
add
stc
xchg
scas
int
test
xchg
push
out
ljmp
out
mov
or
pop
inc
sub
xchg
adc
out
inc
xlat
gs
dec
xchg
add
call
or
std
mov
xchg
dec
loope
add
sub
outsl
addr16
ficoms
aaa
cld
rclb
clc
popf
mov
in
or
sarl
mov
dec
inc
pop
insb
bound
jg
mov
dec
push
in
adc
cmpsb
push
pushf
std
cltd
ret
mov
cmpsl
add
sub
fsubl
inc
push
movsb
mov
inc
cld
push
add
popf
dec
cli
sarl
xor
dec
mov
jo
mov
or
int3
mov
roll
iret
hlt
jno
push
std
cmc
cmp
cmp
pushf
sbb
push
adc
lcall
or
aaa
inc
das
stos
das
inc
xlat
mov
pushf
aam
push
int3
mov
push
aaa
cmpsl
mov
sbb
filds
adc
dec
pop
or
xor
lods
and
xor
pop
stos
jae
rorl
fwait
movl
stos
adc
mulps
mov
or
cld
lock
xchg
push
leave
xchg
popa
in
addr16
or
sbb
adc
fdivl
clc
in
dec
stos
jae
jecxz
xchg
add
int
jns
inc
icebp
repnz
jnp
mov
movsl
push
mov
mov
pop
sti
mov
fidivrs
add
push
clc
sub
lcall
inc
sahf
or
or
add
cmp
or
cmpsb
or
into
sub
inc
mov
fcompl
cmp
jne
push
sar
clc
test
mov
fs
addr16
ret
sbb
sub
addr16
adcl
sbb
pop
sbb
test
lds
movsb
mov
jb
and
ljmp
scas
mov
mov
push
push
xchg
rcrl
in
mov
mov
and
and
mov
insb
mov
jge
jle
jmp
mov
mov
jmp
loop
add
add
xchg
ficoml
pop
xchg
cmp
push
adcb
repz
lds
dec
lcall
sub
mov
inc
gs
inc
xchg
aaa
pop
xor
xor
out
pop
lds
aaa
cmp
jge
pop
repnz
cmpsb
lods
sub
add
movsb
and
xchg
and
pop
add
les
mov
add
aas
imul
roll
sbb
and
rolb
leave
mov
inc
sbb
pop
mov
movsl
fmull
pushf
pop
xor
xchg
xchg
push
loopne
xor
dec
jbe
ret
out
jmp
inc
xchg
push
and
pop
test
push
subl
test
loop
cld
or
cmp
mov
and
in
or
mov
cmp
pop
in
pop
push
sub
mov
loope
mov
repz
insb
cmp
rcl
fisubrl
movsb
mov
mov
or
shlb
repz
les
jo
shlb
das
cmp
hlt
clc
or
xor
dec
xor
jge
sti
dec
xor
ret
xor
fsub
mov
lds
add
stos
gs
cmp
cmp
sbb
xlat
fldl2e
push
orl
add
push
data16
andb
add
data16
fisubrl
jg
sub
xor
decb
loopne
shll
push
std
add
testl
pusha
or
jb
daa
sti
mov
add
mov
sub
push
inc
sub
sbb
icebp
dec
dec
xchg
imul
hlt
pop
cmp
dec
adc
or
xchg
or
sub
shrb
adc
jmp
sbb
lods
jl
jle
icebp
sarb
test
pop
fwait
mov
xor
jmp
xchg
aad
int3
push
cs
push
mov
test
mov
das
cli
sbb
rcrl
leave
fwait
aam
inc
push
xorl
cmp
pop
mov
out
cmpl
mov
cltd
mov
int3
mov
aad
fisttps
arpl
push
xor
subl
fnstenv
faddp
sub
insb
cmpsl
and
shrb
std
or
sbb
add
xlat
inc
lock
in
xor
pushf
call
fiaddl
dec
movsb
aad
mov
mov
xchg
lea
pop
lcall
jl
or
fdivs
insb
adc
pop
push
pop
imul
imul
mov
ret
jecxz
inc
pop
mov
xchg
and
add
sti
lods
addr16
xor
xchg
aaa
inc
sub
pop
inc
lock
xchg
pop
push
xor
mov
cmc
and
and
popa
adc
rcr
jg
sub
daa
adc
add
sbb
jge
jge
adc
cmp
movsl
icebp
loope
fidivs
mov
test
mov
xorb
push
dec
je
popf
sbb
out
fcompl
arpl
pop
fisubs
push
int3
pop
in
popl
jo
mov
aas
xlat
dec
test
lea
in
pop
sub
movsb
data16
push
xchg
shr
dec
mov
in
fs
mov
mov
mov
fdivrl
cmpsl
orb
scas
shrl
jnp
cmpb
pop
inc
sahf
mov
imul
fld
dec
push
sub
adc
and
jecxz
imul
test
lock
jae
iret
aad
and
xchg
call
aad
adc
imul
popa
mov
jno
xchg
dec
dec
mulb
mov
mov
lret
scas
stos
insl
rcr
sbbb
lods
inc
lret
loope
sub
sti
out
nop
mov
xchg
xchg
or
icebp
cmp
fistps
jg
inc
in
rcrb
pop
arpl
or
lods
or
in
pop
push
jle
pusha
adc
cli
ljmp
imul
out
mov
minps
movsl
aas
ficoms
je
mov
and
jmp
cmp
lret
inc
leave
pusha
push
or
scas
ds
and
ror
lods
jne
cs
or
sub
ror
in
jecxz
mov
aam
ret
push
ret
pop
ret
jmp
sti
sub
add
jmp
int
test
mov
cmp
movsb
mov
dec
test
or
xor
adc
and
in
cmp
clc
lcall
mov
sahf
fimull
bound
dec
repnz
insb
arpl
mov
ja
pop
xlat
test
xor
mov
popa
into
and
mov
mov
add
push
sbb
mov
lret
sub
pop
jg
in
rorl
cmp
sarl
sub
jle
add
mov
push
xor
aaa
dec
call
rcl
inc
push
or
xor
out
sar
fs
int3
ret
lods
sbb
mov
out
rclb
aaa
aad
cmpsb
inc
scas
lret
js
lret
cmp
mov
lds
mov
hlt
jmp
dec
in
js
test
lret
insl
pop
pop
push
xor
mov
mov
into
pop
and
jae
stos
mov
loope
cmpsb
nop
sti
cmp
mov
out
cmp
push
pusha
test
ret
xchg
pushf
adc
das
mov
cmp
xor
fmul
adc
xchg
pop
in
mov
lcall
mov
pop
das
jo
lods
jno
fcoms
cli
icebp
jns
movsl
or
xor
lods
mov
fstl
xchg
int
dec
or
xor
test
fcomps
cmp
mov
mov
call
cmp
insl
rolb
mov
jae
jns
filds
lock
lret
in
stos
mov
repnz
into
pop
pop
xchg
mov
jp
fiaddl
filds
fldcw
insl
xchg
bound
pushf
dec
cmp
cmp
jmp
push
insb
mov
jg
or
push
xor
add
mov
pop
pop
sti
mov
out
xchg
out
shlb
add
lret
push
fucomp
insl
inc
leave
jl
jae
push
cs
aaa
and
stos
fxch
lods
push
jno
jmp
pop
pop
sbb
aaa
adc
sar
cwtl
outsl
mov
int3
xchg
xchg
or
adc
out
std
and
mov
adc
sbb
dec
aaa
cwtl
orb
jg
mov
inc
mov
int3
inc
pop
rcrl
stos
xchg
inc
jnp
shlb
push
outsl
jo
jge
cmp
mov
loopne
data16
sub
add
icebp
bound
ljmp
jns
sbb
outsb
ficoms
cvtpi2ps
xor
mov
xor
add
js
pop
push
sub
jb
je
in
cwtl
outsl
addr16
stos
insb
cli
and
mov
jl
and
ret
mov
add
pop
mov
lret
cmp
fdivl
push
xor
adc
fwait
es
inc
mov
cmp
lahf
pop
and
push
lcall
and
lds
sub
lods
test
cwtl
in
ljmp
mov
dec
testb
insb
add
adc
outsl
sub
aas
dec
adc
and
inc
cmp
nop
cld
scas
push
imul
ret
sbb
ficompl
arpl
cmc
mov
cwtl
int3
lock
fstl
mov
pop
push
cmpb
xchg
sub
mov
pop
or
mov
jmp
dec
idiv
stc
cmp
testb
mov
push
xor
shr
jae
jns
sub
lret
inc
or
sub
pop
mov
xor
jno
inc
sbb
cs
or
and
call
loop
imul
out
add
out
adc
cli
scas
fst
out
pop
mov
fsts
sub
outsb
insl
adc
cltd
repz
push
flds
jns
hlt
xor
clc
dec
subl
stos
sub
pop
notl
cmp
test
std
jo
push
sar
dec
sub
cmpsb
or
jno
loop
loope
or
js
xchg
sub
ljmp
sub
std
jne
jbe
jl
fsubr
out
mov
sahf
push
adc
jnp
inc
pop
pop
mov
jbe
or
pop
lds
mov
jl
xchg
stc
push
aad
fistpll
outsb
popf
xorb
pop
or
test
sbb
aaa
push
fcomps
cmpl
hlt
fnstenv
push
ss
dec
lahf
mov
cmp
or
push
inc
push
xchg
jp
js
pop
popf
push
inc
jno
xor
pop
lods
lret
cmp
pushf
jecxz
jno
lods
sub
lcall
adc
dec
enter
cltd
mov
lret
subl
rcrb
sarl
dec
add
xchg
add
stos
lahf
xor
test
xor
pushf
lods
sbb
cmp
sbb
inc
cs
fcmovbe
lcall
sbb
push
and
insb
test
int3
sub
pop
test
sub
and
mov
add
mov
orb
pop
data16
add
int3
sub
lahf
lds
cli
mov
ss
add
imul
pop
jno
mov
sbb
jmp
push
and
icebp
adc
movsb
outsl
xchg
mov
pop
jge
scas
mov
mov
jns
xchg
pop
ja
shlb
sub
movsb
stos
fldcw
mov
imul
jmp
dec
and
adc
jno
ret
push
add
sbb
loopne
push
xchg
lret
mov
aas
or
cmp
jg
fcmovu
jl
cmp
jnp
in
stos
xchg
xor
lgs
add
jnp
nop
test
jmp
aad
pop
mov
repz
ds
lea
mov
xchg
jbe
jno
out
loope
lods
jl
sub
adc
cwtl
cmp
cmp
sub
push
jb
xchg
ja
push
leave
adc
jg
cmp
test
mov
cmp
mov
int
pop
sub
or
xchg
inc
push
jmp
mov
cmc
inc
or
iret
clc
test
adcl
mov
daa
shrl
pop
mov
test
insl
addb
and
mov
cmp
mov
push
into
dec
mov
dec
cmp
in
negb
sub
mov
mov
push
and
jne
aam
iret
rdmsr
leave
xor
js
adc
dec
fs
rorb
xchg
mov
cmpsb
pop
add
jg
fs
lods
adc
mov
push
insb
adc
mov
xchg
jbe
mov
pop
jo
ljmp
and
pushf
lahf
sub
lods
dec
add
inc
jbe
fisttpl
and
mov
dec
or
lea
outsl
out
jmp
dec
leave
movsl
mov
iret
jge
adc
lds
mov
sbb
pop
push
ror
push
dec
jmp
push
aam
cmp
fsubs
xchg
sub
lock
fstpl
mov
ja
mov
popa
adc
mov
add
inc
iret
out
das
rolb
aaa
fwait
jl
stc
arpl
adcb
cmp
push
push
popa
add
inc
push
fsubr
mov
es
iret
jo
idivl
in
sbb
push
dec
push
pop
inc
cwtl
outsl
inc
sahf
inc
call
jo
mov
add
mov
aad
mov
mov
xchg
insb
cmp
out
js
fucomip
pop
sbb
and
mov
cmp
int
lods
add
cmp
xor
dec
cmp
push
add
mov
fmull
popf
leave
mov
pop
das
xor
imul
xor
test
cli
int
push
mov
or
test
jge
fsubrp
mov
xchg
and
pop
xchg
push
pushf
neg
mov
fdivr
aad
data16
cmp
fcmove
jnp
into
daa
sbb
loop
mov
and
push
jecxz
leave
sahf
sub
addr16
repz
adc
xchg
stos
subl
dec
imul
scas
pop
sub
icebp
add
sbbb
nop
jno
mov
testl
pushf
lret
fs
and
andb
cmc
aas
lahf
dec
lods
cwtl
xchg
mov
mov
mov
add
shrl
mov
fdiv
lock
movsl
adc
jle
testb
in
popa
cmp
aas
sarb
add
je
cld
in
aam
repnz
inc
xchg
xor
inc
fnstsw
xor
in
enter
or
cltd
dec
enter
sub
idivl
aaa
cmovg
sub
pop
popf
cmp
pop
mov
movsb
push
fcmovnu
xchg
mov
ficomps
out
mov
stos
and
add
stos
mov
repz
sbb
mov
mov
nop
add
push
sbb
xor
push
iret
test
add
cwtl
push
aad
cmp
jp
jl
xor
movsl
inc
ds
je
xor
aad
xchg
and
jecxz
call
idivl
xor
sub
or
push
stc
fidivrl
ret
fcomi
andl
dec
in
stos
adc
addr16
cld
rclb
addr16
cli
inc
lds
clc
mov
pop
stos
popf
push
jno
mov
jle
repz
jb
jne
lcall
push
loope
cmp
add
dec
stos
mov
stos
hlt
add
mov
xor
into
and
mov
mov
cli
mov
movsl
pop
shrb
cs
imul
push
mov
push
outsb
in
insb
inc
mov
aas
mov
incl
mov
emms
lcall
mov
int
xorl
push
in
dec
ret
int3
jmp
adc
test
icebp
cmp
or
sbb
repz
ret
push
mov
adc
mov
push
xchg
jle
loop
inc
pushf
mov
sbb
fwait
jb
enter
xor
push
xlat
sbb
fwait
in
jno
cwtl
xor
xor
add
sub
cmpsb
dec
pop
in
pop
adc
rorb
loop
jae
pushaw
es
idivl
fcmove
sbb
pusha
xlat
jb
cmpsl
js
jmp
arpl
fistpl
cmc
cmpsl
cwtl
test
jae
xor
xchg
leave
ljmp
gs
shrl
push
push
movsb
int3
movsl
or
scas
push
ret
xor
mov
add
and
xor
stc
lods
mov
das
push
push
sbb
xlat
iret
sub
ljmp
ds
daa
int3
sbb
cwtl
jl
pop
dec
ljmp
mov
loope
sarb
dec
mov
leave
or
add
fiaddl
mov
aam
jl
sub
mov
push
dec
lods
adc
adc
insb
xor
pop
push
jl
test
call
jno
xor
fwait
lock
subb
xchg
jmp
and
mov
push
scas
dec
jo
ret
add
dec
jns
jae
mov
adc
pop
sub
arpl
std
mov
in
testl
cmpsb
sbb
insb
loop
stos
mov
mov
rcrl
xor
xchg
inc
mov
dec
dec
sbb
sbb
addb
inc
aad
xchg
inc
cld
nop
ss
xchg
insb
test
jns
lcall
movsl
jne
jnp
dec
sbb
mov
cmp
ret
jg
push
jmp
mov
jmp
mov
mov
pop
sarl
jne
aaa
repnz
outsl
sub
push
or
or
sahf
xchg
jnp
out
pop
xchg
mov
insl
pop
mov
iret
mov
mov
rcrl
or
ja
scas
push
push
fiadds
or
lret
gs
jge
and
lds
push
mov
mov
mov
lods
enter
mov
dec
repz
jle
ja
and
dec
lods
xchg
inc
xchg
lret
mov
test
jbe
les
fisubrl
push
mov
jnp
ret
cmp
and
inc
pop
fadds
cmpsl
cwtl
mov
imul
jae
inc
pop
mov
test
add
cmp
adc
popa
inc
jmp
fistl
add
aam
xchg
inc
xchg
and
cld
outsl
sbb
mov
push
dec
inc
mov
fcomps
xchg
aad
call
test
mov
fwait
mov
rcr
dec
jns
icebp
aas
or
dec
and
xor
cld
dec
cmp
scas
arpl
movsb
enter
add
aam
in
lahf
inc
aad
mov
mov
int3
jo
sub
scas
les
sub
pop
push
or
lret
jno
fmull
cld
subl
lret
push
lret
mov
xor
lea
dec
lea
js
popf
jae
jle
jle
jae
cmc
int3
mov
add
mov
push
imul
insb
add
pop
dec
cwtl
ljmp
imul
ljmp
pop
and
movl
and
jge
out
push
insl
js
pop
jno
ret
aad
sti
add
in
mov
movsb
lahf
add
xorb
or
pop
arpl
adc
dec
inc
inc
adc
sbb
sbb
jp
jne
add
adc
xlat
out
jp
arpl
push
mov
add
bound
fdiv
arpl
mov
cs
dec
data16
sbb
mov
mov
push
cwtl
js
imul
xchg
das
sub
and
jae
mov
inc
aaa
fildl
scas
lods
cwtl
lds
sti
cmpsl
insb
loope
mov
jns
and
lods
outsb
ror
pop
dec
outsl
cmp
rol
lret
roll
scas
bound
in
cmp
mov
les
sub
push
into
ja
inc
mov
push
add
inc
in
in
loop
out
jle
orb
cld
jns
lcall
outsb
dec
cmp
clc
jle
or
mov
in
push
mov
fmuls
mov
call
bound
movsl
ret
jge
in
cmpb
mov
add
das
jae
inc
daa
popf
sbb
out
lahf
ja
cmp
xor
or
add
ret
mov
jmp
ret
xchg
sub
jmp
and
mov
jae
sub
xchg
and
sbb
lea
cmp
pop
pop
mov
adc
pop
out
sub
xchg
jne
mov
xchg
mov
out
cli
movntq
scas
pop
dec
push
out
imul
fwait
pop
push
in
arpl
repz
mov
pop
and
cmc
fistpl
ror
jbe
or
mov
imul
enter
call
dec
xchg
mov
push
inc
outsb
incl
jno
aaa
mov
and
mov
push
andl
rcll
or
cmp
arpl
gs
mov
aad
fsts
test
fsubrl
div
ret
jmp
nop
ljmp
movsl
movb
clc
push
sub
push
pop
insl
pop
pop
push
movsl
mov
rcr
loope
repz
adc
cmpsl
imul
ja
xor
sub
add
mov
clc
and
jge
xchg
jb
dec
pop
add
cmp
fldenv
mov
loope
mov
mov
scas
loopne
and
cmp
mov
push
add
xchg
outsb
jne
xchg
data16
xchg
fnstenv
cmp
jp
and
repz
xchg
or
aaa
mov
sarb
shlb
jmp
stos
mov
imul
cmp
xorl
outsb
and
push
pop
mov
test
in
rclb
dec
mov
test
mov
mov
mov
ljmp
push
add
inc
lods
inc
shll
add
nop
sub
adc
jg
sbb
fcomi
add
jmp
lock
imul
xchg
jge
or
out
scas
mov
sub
sub
fs
testl
mov
pop
sbb
outsl
subl
xor
xorl
clc
cmp
sti
dec
imul
dec
popf
adc
push
sub
jecxz
sub
daa
xchg
lock
mov
addr16
std
mov
jnp
in
pop
cmpsb
sbb
aam
inc
inc
mov
mov
scas
mov
cmp
mov
mov
xchg
shlb
insl
mov
push
or
or
sar
add
pop
xor
push
fiaddl
inc
xor
xchg
jg
test
int
out
stos
dec
mov
inc
repnz
ljmp
xchg
add
mov
les
mov
fisubl
jno
add
inc
jg
sub
call
adc
dec
mov
add
inc
test
jge
stos
or
cli
cs
sbb
fcompl
or
jmp
dec
mov
mov
mov
unpcklps
jecxz
push
pop
test
xchg
cmpsl
addr16
xchg
repnz
inc
mov
loop
jb
push
cld
loope
decb
movb
cmpsb
xor
loop
jns
shrb
adc
fcomip
andl
sub
outsl
es
or
jecxz
pushf
xchg
cmc
xorl
push
sarl
add
mov
pop
stc
cmp
mov
sbb
hlt
in
push
je
test
cltd
sti
jno
faddl
cmpsb
mov
cmp
cmc
sbb
das
cs
dec
divb
addr16
adc
ficoml
rcll
cmpsl
mov
and
inc
push
dec
into
in
push
mov
loopne
push
in
cltd
push
jle
ds
outsl
test
or
popa
add
jae
push
adc
inc
fcmovnbe
pop
rcrb
fstpt
push
stos
xor
ja
dec
cmp
inc
push
lock
cltd
pop
push
mov
pop
jns
stos
mov
mov
das
mov
dec
cld
imul
jno
mov
popa
adc
cmp
xchg
call
iret
sub
mov
call
dec
lods
jg
lahf
ja
inc
add
xor
push
aaa
mov
pop
loope
leave
inc
enter
jg
out
sarl
dec
jns
shrb
xchg
loope
push
outsl
call
out
and
jno
inc
jmp
jecxz
adc
lods
mov
loopne
push
dec
or
xor
mov
xchg
popf
dec
mov
cmp
and
orl
push
mov
outsl
insb
fcoms
xchg
rcr
lcall
sti
dec
cwtl
pop
rorl
xchg
sub
in
into
or
or
cltd
stc
mov
sub
mov
fadd
ret
pop
std
mov
jle
fldl
adc
xor
jge,pt
loopne
sub
pop
mov
mov
test
imul
dec
mov
adc
jmp
and
ds
xlat
fnstenv
sahf
adc
push
movsl
mov
imulb
or
mov
insb
daa
ss
jb
stc
add
mov
xor
xor
push
test
push
cmp
cmp
sbb
pusha
push
mov
gs
push
cmp
xor
gs
ret
arpl
enter
mov
inc
lea
cmp
or
dec
mov
xchg
jb
and
jb
adc
add
test
adc
xchg
jl
push
or
fwait
arpl
sub
popa
xor
inc
ret
imul
or
cwtl
adc
shl
lds
cmpsb
cmpb
xor
lahf
pop
pop
and
jns
loope
jnp
sbb
add
pop
orl
leave
xchg
jns
repnz
fidivl
cmp
mov
rcr
repz
repnz
sub
pop
or
xor
mov
pop
fsubrl
adc
jno
jbe
pop
hlt
fsts
push
lret
mov
xor
das
ss
mov
xchg
and
jecxz
mov
sbb
inc
push
std
in
jle
xor
xor
stos
jl
int
daa
lahf
ret
xor
outsb
or
xor
and
movsb
pop
hlt
cmp
xor
in
pop
iret
in
sbb
adcb
sbb
push
adc
fnstenv
add
push
shl
xor
xchg
mov
sub
jns
jo
or
sbb
pop
mov
icebp
lcall
movsl
rcll
inc
pop
out
mov
pop
jp
cltd
je
sbb
shl
cltd
dec
xor
pop
adc
adc
arpl
addb
cmp
mov
sbb
sub
jmp
adc
sarb
mov
ret
mull
pop
adc
sarl
mov
push
xor
jne
adc
out
sub
sbbl
addr16
pop
xor
lock
sub
popf
mov
cmp
test
adc
xor
mov
mov
pop
andl
xor
xchg
movsb
out
std
ljmp
mov
jl
add
or
mov
dec
jge
mov
mov
test
inc
int
jnp
adc
ljmp
inc
sub
and
push
push
dec
icebp
ret
sub
pusha
cmc
rolb
jno
jp
mov
mov
xchg
adc
hlt
dec
dec
addb
inc
jmp
mov
hlt
ja
test
add
add
mov
fisttpl
int
cmp
fstps
jmp
dec
jge
sbb
ljmp
dec
repz
adc
pop
inc
pop
inc
pop
mov
outsb
and
mov
test
fcos
add
sub
xor
add
dec
bound
mov
dec
push
ret
dec
dec
mov
ja
ret
xor
inc
add
insl
xor
cmpsb
scas
lret
lods
xlat
jp
or
rolb
adc
loope
cmp
lret
cmp
dec
cmc
pop
mov
sbb
ljmp
shl
int
and
pop
cmp
dec
sub
mov
mov
push
mull
jmp
test
mov
hlt
dec
jmp
add
jp
push
subl
mov
cmp
hlt
and
or
aas
or
test
dec
mov
cwtl
xor
inc
xor
push
jg
pop
and
jl
loopne
insl
sbb
and
adc
stc
ffreep
in
jmp
push
xlat
jo
xor
sbbb
pop
loopne
out
add
xchg
inc
xchg
cmp
lods
dec
mov
and
push
ja
repnz
cmp
movl
cli
xor
mov
cld
out
mov
push
lcall
aas
sub
mov
adc
jnp
stos
data16
int3
sbb
aam
mov
xchg
adc
orb
inc
xor
aad
or
lret
dec
jecxz
scas
imul
mov
arpl
push
xor
xor
je
jae
cwtl
enter
inc
dec
fldt
push
push
pop
push
adc
lock
arpl
sub
mov
and
cld
xchg
jge
xchg
cld
push
in
aam
cmpsb
or
aaa
rcrb
pop
sahf
push
mov
loope
pusha
mov
ds
push
dec
fcoms
pop
out
add
aam
rcl
ret
ljmp
add
pop
mov
out
dec
out
push
outsb
jecxz
adc
cmp
mov
xor
popa
inc
fs
sarb
icebp
rcl
mov
mul
pop
addr16
push
mov
lcall
cmp
or
xor
adc
fisttpl
jg
es
mov
add
gs
clc
lret
insl
push
test
imull
xor
mov
negb
or
push
pop
mov
add
push
lcall
cmp
sarb
sub
pusha
add
mov
add
mov
insb
push
jle
mov
mov
or
in
lahf
inc
xchg
push
xor
iret
int3
xor
cmp
push
lret
xor
icebp
lea
pushf
mov
jno
fcompl
pusha
ds
or
push
or
in
jbe
mov
mov
sbb
call
inc
std
shlb
push
sbb
movsl
cmp
cmpsb
in
movsl
in
int
es
in
fadd
sub
xchg
in
xchg
sub
lahf
dec
pop
sahf
pop
jne
es
pop
xor
jae
stc
cmp
int
add
shll
test
cmpsb
in
iret
fisubl
mov
arpl
shlb
sti
insl
insb
popa
mov
sub
cwtl
push
jbe
lahf
in
xor
test
scas
sub
pusha
jno
pop
bound
ja
mov
bound
add
sub
out
sbb
das
popa
mov
mov
in
or
loopne
scas
mov
adc
enter
mov
sbb
clc
cmpsl
mov
adc
lret
cld
es
cmpsl
aam
jno
nop
xchg
inc
and
lods
ss
or
icebp
mov
push
mov
loope
pop
or
mov
fcoms
arpl
call
and
call
mov
mov
sbb
or
data16
sbb
pop
push
mov
xchg
adc
scas
repz
push
lods
and
mov
xchg
ja
sub
jnp
enter
xor
frstor
push
cltd
and
loopne
pusha
pop
sub
xchg
pop
and
jnp
push
rolb
push
dec
pop
push
jo
das
shrl
push
inc
or
bound
lds
nop
test
pop
inc
pop
mov
jno
outsl
das
dec
dec
insb
xchg
sbb
in
out
jge
es
sbb
cmpsb
push
sub
cmc
inc
pop
into
jns
lret
jbe
pop
xchg
sub
mov
and
aad
cmpsl
jmp
insb
mov
sbb
in
mov
imul
and
inc
hlt
stos
in
mov
lcall
mov
icebp
mov
sub
jp
sbb
addr16
and
test
mov
in
sbbl
dec
push
aam
aam
push
push
cmp
fs
cmp
mov
mov
dec
sub
lret
cmp
cli
sti
mov
or
in
and
pop
cmp
stos
mov
lahf
shlb
xchg
mov
lock
ss
jns
xor
inc
mov
test
test
jle
cmpsb
lcall
xchg
inc
movsb
mov
std
and
jo
in
pushf
cltd
cmp
adc
lahf
pop
gs
cltd
sbb
mov
jae
sbb
mov
push
add
leave
repz
ret
jae
cltd
or
imul
push
insl
mov
aam
cwtl
mov
fbld
and
popa
test
sbb
push
rclb
mov
push
mul
lret
xor
imul
mov
cmpl
mov
push
pop
mov
cli
int3
lahf
mov
sbbl
pop
pushf
mov
pop
mov
cltd
jl,pn
iret
in
gs
or
int3
sbb
jae
mov
pop
arpl
mov
mov
pop
adc
cmp
loope
sub
and
imul
pop
mov
call
popf
cmpsb
ja
fstl
fwait
cmp
shlb
mov
sbb
jnp
lret
xchg
icebp
mov
dec
repz
leave
movsb
add
aaa
mov
pop
leave
out
push
sbb
or
xlat
xchg
int3
sub
sbb
xor
leave
mov
aad
mov
inc
loope
jge
and
xor
je
mov
scas
orb
jb
lcall
lock
ss
imul
push
scas
ss
mov
sti
jne
cmpsl
push
inc
push
lahf
lea
jnp
fmuls
pop
xorb
and
lock
inc
dec
popf
mov
jp
rorb
aam
jge
pop
and
pop
call
xchg
aam
jo
sbbl
or
lods
inc
dec
xchg
outsl
sub
adc
mov
addr16
cmp
lcall
xchg
repnz
push
and
mov
dec
sbb
cmp
cmc
rorb
inc
push
mull
fucomp
pop
adc
mov
nop
mov
push
dec
into
addl
mov
xchg
out
paddq
or
call
add
xor
out
out
mov
not
out
sub
repz
rcl
pop
adc
insb
sbb
sarb
bound
stos
ljmp
ds
stos
sar
dec
clc
pop
push
push
pop
xor
cmpsb
lahf
add
sub
sub
push
add
cmp
push
jmp
pop
ret
push
dec
mov
fs
cmp
les
sti
jmp
mov
cmpsl
add
cltd
jecxz
cmc
and
jne
in
push
adc
jno
cld
in
sahf
imul
push
adc
dec
lcall
mov
xor
xorl
sbb
icebp
dec
enter
jl
lret
imul
icebp
ja
dec
imull
sti
and
pop
inc
inc
jmp
mov
jbe
mov
push
mov
sbb
lcall
test
fisttps
sub
push
int3
and
movsl
out
mov
dec
fsubs
dec
cmc
popa
hlt
jnp
clc
mov
push
or
pop
ds
and
lods
sbb
leave
mov
mov
mov
pop
inc
push
pop
arpl
jne
add
arpl
adc
add
sahf
mov
xor
cmp
into
inc
scas
fdivrl
jl
xchg
sarb
std
or
xor
inc
fadd
jg
mov
movsb
and
mov
adc
or
push
inc
cwtl
push
fisttpl
mov
add
ret
adc
jmp
lcall
cmp
aad
cmp
push
imulb
mov
popa
add
and
rcr
mov
int3
pop
lock
rclb
repz
mov
test
push
cwtl
fdiv
stos
lods
or
cmp
out
int3
iret
jbe
sub
xor
and
leave
imul
mov
mov
xchg
pop
lods
lods
dec
mov
enter
push
pop
xchg
int3
and
xchg
ret
out
xchg
mov
cmp
mov
nop
sbb
test
push
jbe
jae
jne
scas
jl
dec
jp
mov
adc
pusha
in
lods
call
sbb
jl
les
xchg
and
icebp
xor
mov
fcoms
pop
jae
jle
pop
mov
cld
push
lahf
repnz
pop
add
hlt
inc
enter
rcrb
xchg
repz
inc
negb
inc
fidivl
movsl
frstor
cmp
xchg
nop
or
cli
xchg
movsl
adc
fs
jno
push
fldcw
ss
dec
jnp
sahf
rcrb
comiss
sub
cmpsw
notl
imul
mov
ja
lcall
or
mov
nop
jnp
div
dec
in
in
sti
mov
cmp
jecxz
xlat
xchg
jnp
mov
hlt
ja
scas
dec
loop
push
cmc
jbe
movsb
loopne
stc
mov
ret
js
add
inc
out
jge
out
je
and
sbb
jp
sbb
leave
je
cli
lods
rcrb
sbb
fwait
push
in
inc
lret
sbb
imul
orb
pushf
mov
mov
push
pushf
inc
lods
xadd
std
ret
imul
outsb
sti
xchg
mov
push
cld
sub
bound
jge
inc
mov
dec
dec
data16
push
stos
cs
cld
test
js
push
inc
std
cwtl
push
stos
fisttpll
cmpl
xchg
rol
imul
or
aam
stos
mov
sbb
insl
pop
sbb
dec
mov
arpl
cli
fdivs
nop
fnstcw
stos
aaa
test
aam
xor
shrb
sti
push
cmpl
icebp
push
cmc
cli
mov
or
and
pop
push
and
popf
ret
cltd
mov
pop
fnsave
dec
bound
cwtl
and
cmpsl
arpl
fistps
jecxz
add
cld
jb
or
adc
mov
call
jge
sbb
inc
leave
inc
daa
or
mov
mov
popa
shrl
adc
adc
and
inc
jecxz
dec
js
mov
daa
movsl
les
mov
xorb
push
loope
lds
mov
in
test
loopne
dec
jo
xorb
jno
mov
es
jnp
dec
fwait
cltd
and
sbb
or
jmp
gs
inc
push
dec
subb
pushw
mov
xor
xor
fdivl
jl
add
and
popa
fadds
dec
jmp
mov
cs
sub
xchg
jmp
jmp
cli
ds
pop
xor
pop
jae
call
clc
aam
rcrb
adcl
insb
mov
inc
inc
mov
cltd
loop
xchg
inc
sub
mov
xchg
cltd
aad
sbb
lcall
femms
or
mov
lret
into
sbb
inc
ret
sub
xor
jge
mov
mov
out
mov
push
outsl
jae
and
jnp
cmp
repz
loopne
add
aas
push
sarb
into
dec
mov
and
stc
ficoml
rcll
mov
dec
or
mov
add
imul
fadds
pop
mov
in
push
inc
insl
pop
add
ss
sbb
enter
or
stos
sub
pushl
aad
and
push
es
imulb
or
mov
call
mov
cmpb
push
lods
cld
popf
xchg
cld
cmp
dec
mov
mov
cmp
adc
int3
addr16
in
clc
push
xor
adc
add
fwait
mov
pop
dec
jle
fadds
test
jb
mov
inc
lds
es
mov
and
xchg
xor
sub
adc
mov
ret
mov
imul
cmp
aaa
cmp
rcr
stos
ret
xchg
push
mov
mov
repnz
adc
pop
decl
leave
and
aam
je
push
int3
jb
mov
push
mov
into
mov
out
cs
sbb
sub
fs
pop
cs
pop
subl
jmp
or
mov
stos
test
cmp
cwtl
pop
cmp
cmc
into
mov
call
add
fildl
dec
dec
add
sub
mov
adc
adc
cmp
in
or
mov
int3
movsl
and
xor
push
xchg
adc
and
add
popf
mov
fstl
push
cmp
adc
xchg
call
bound
jns
push
fs
mov
loop
inc
or
mov
push
into
mov
xor
push
add
arpl
xor
scas
jge
pop
daa
xchg
insl
mov
test
mov
dec
lods
xor
cltd
jmp
jnp
xchg
cmp
out
and
or
mov
inc
or
mov
sub
pop
arpl
jmp
adc
lds
lods
and
mov
sub
jo
inc
loope
es
mov
xchg
mov
and
mov
pop
and
pop
pop
push
push
in
push
ja
shr
mov
mov
xor
xchg
sub
push
cmpsl
inc
push
daa
mov
adc
push
sbb
shll
leave
in
pop
dec
and
mov
jno
jg
mov
adc
sbb
or
inc
outsb
xchg
jp
cmpsl
or
lea
les
inc
push
xchg
sahf
add
icebp
repz
inc
push
cld
or
sbb
cmp
cmp
loopne
sub
adc
imull
mov
repnz
mov
inc
cmp
ja
push
dec
push
mov
pop
xchg
adc
repnz
mov
fsubl
dec
into
jp
mov
mov
popa
lcall
mov
jl
pop
mov
orl
and
ss
xchg
jge
notl
xlat
or
adc
movsl
push
cmp
fs
mov
jmp
imul
in
sahf
mov
mov
xor
inc
inc
jmp
mov
insb
pusha
mov
loop
stc
mov
daa
sti
sub
notb
stos
loopne
xor
jp
inc
xchg
cli
push
xor
in
xchg
mov
push
jge
inc
pop
nop
xor
mov
outsl
pushf
lds
or
in
or
outsl
jp
loopne
fs
sahf
xchg
add
jge
adc
aas
mov
sbb
and
outsl
cmp
xor
xchg
mov
clc
pop
cmp
sbb
cmpsb
jle
dec
movsb
test
scas
mov
mov
test
xchg
push
sbb
ja
cs
inc
lahf
out
imulb
mov
mov
add
xchg
mov
and
adc
fcomi
es
xchg
out
fldpi
xor
push
xor
ret
out
inc
jnp
pushf
jno
lahf
fnstcw
mov
ret
ljmp
scas
xor
jo
pop
or
or
xchg
xor
stc
lock
mov
and
push
lcall
push
push
push
notb
icebp
out
pusha
lds
push
daa
add
adc
push
dec
mov
add
ss
xor
jmp
push
lds
cltd
movsl
cs
loop
jecxz
add
jg
push
or
pop
pop
lock
push
cs
mov
mov
sbb
mov
movntq
shrb
xchg
push
lds
inc
pop
jmp
inc
inc
push
cltd
out
testb
insb
std
lods
cli
fadds
and
nop
cmp
fs
sub
gs
fsts
mov
xor
push
jge
out
cmp
insl
ret
and
cmpsl
adc
jno
cmpl
xchg
out
stc
pop
and
adc
nop
stc
pop
rcr
mov
mov
test
cld
pop
mov
insl
sub
inc
adc
or
insl
lock
movsl
lods
mov
mov
int
sbbl
cwtl
dec
rcrb
subb
aam
mov
outsl
add
sub
inc
loop
popf
cmpsl
filds
insl
inc
inc
jle
clc
pop
jle
mov
loop
popa
xchg
sahf
mov
sub
xchg
cmp
mov
repnz
roll
adc
push
nop
pushf
fisubs
movsb
and
add
mov
mov
in
cmp
jle
mov
bound
jge
out
sub
outsl
repz
add
add
and
cwtl
or
negl
ss
fs
dec
push
inc
sbb
insb
fsubs
dec
dec
leave
mov
push
push
sbb
rol
aas
ret
add
arpl
ret
ljmp
jg
scas
insl
and
mov
lock
loop
test
sub
stc
jno
cmp
loop
fnstsw
rcrl
dec
mov
int3
mov
lods
mov
adc
mov
test
cmpsl
cltd
xor
sbbb
mov
mov
jnp
cmp
mov
pop
mov
lods
roll
stos
aas
dec
enter
orb
mov
sahf
mov
cmp
sahf
test
mov
arpl
out
pop
adcb
add
les
push
mov
sbb
ljmp
pop
xor
rol
mov
out
jl
ret
cltd
sub
sbb
push
out
push
lds
adc
lret
repnz
push
jge
dec
add
cmp
pop
add
inc
mov
fcmovne
repnz
in
pop
jge
out
or
inc
dec
data16
cmp
jmp
fdivrs
xchg
add
popf
xchg
lahf
cwtd
loope
cmpsl
lret
stc
sub
lahf
movsl
xor
lock
lcall
add
out
add
stos
das
mov
mov
outsl
mov
fnstenv
xor
xchg
cmp
jnp
data16
lahf
mov
js
mov
repz
pop
jle
jle
push
dec
int3
nop
xchg
push
mov
inc
mov
incl
cmp
adc
lahf
imull
mov
cwtl
bound
and
in
gs
jecxz
lds
daa
shlb
aas
mov
repz
cmpb
test
sbb
add
xchg
xchg
movsb
iret
adc
jle
jge
mov
fs
sbb
mov
inc
lods
fs
testl
or
cltd
and
and
loopne
push
in
push
jecxz
pop
jl
or
add
adc
mov
pop
ja
and
mov
or
jns
mov
div
xor
push
mov
pop
pop
fimuls
loope
sbb
ret
sti
xchg
pop
cmp
movsl
cmp
test
pop
and
push
mov
pop
jns
test
in
and
out
jno
icebp
inc
push
ret
ljmp
and
mov
repnz
xor
sbb
out
pop
push
out
arpl
sti
shr
sbb
pushf
add
nop
jns
insl
mov
popf
mov
xlat
rclb
xorl
and
mov
rorl
out
xor
iret
jmp
fs
in
call
scas
mov
jecxz
loopne
jge
loope
in
int
loope
xor
jbe
jno
lods
in
xchg
mov
out
insl
sahf
lahf
or
test
pusha
dec
dec
popa
ficoml
xchg
push
push
cmpl
mov
aas
jge
pop
loope
pop
mov
rclb
xchg
xchg
fidivl
sbb
fwait
dec
mov
test
loop
mov
mov
jmp
mov
in
pop
faddl
xchg
lret
jnp
mov
mulb
sub
popa
lock
mov
sti
jge
mov
mov
ja
fimull
int
or
movsb
outsl
or
fidivl
mov
dec
and
scas
mov
push
sub
popa
test
faddl
mov
mov
pop
jecxz
push
pop
xchg
rclb
int
or
fstpl
jmp
dec
sarl
mov
aas
push
mov
jle
popf
wbinvd
inc
or
in
rcll
cmp
lds
xchg
mov
push
sbb
or
jne
add
lods
iret
ja
cmc
je
add
std
mov
pop
iret
fwait
aam
das
adc
and
in
stos
ret
fs
jl
add
xor
lcall
les
les
adc
ljmp
dec
xchg
js
mov
out
bsr
or
or
icebp
roll
out
cltd
ja
jne
lret
movsb
push
aam
fwait
sub
sbb
push
xchg
je
cmp
and
xchg
mov
repz
leave
ret
lcall
test
xor
cmovp
repnz
pusha
mov
mov
fildl
je
aad
lret
and
cmp
add
jmp
cmc
mov
lock
subb
out
icebp
mov
notb
ret
lcall
test
xlat
int3
sbb
roll
fdiv
push
mov
leave
cmp
mov
out
rol
pop
xchg
hlt
xchg
push
inc
repnz
mov
xor
dec
inc
popa
jns
mov
data16
xchg
mov
movsb
pop
fmull
cmpsl
icebp
aas
andb
insl
gs
jnp
inc
jno
lea
hlt
mov
mov
rolb
mov
add
mov
pop
lods
adc
inc
mov
cmp
mov
xchg
push
or
cmp
mov
lret
mov
imul
mov
inc
inc
mov
cli
rorb
jno
push
dec
dec
lcall
xor
push
jne
xchg
aaa
dec
sahf
push
pop
mov
out
dec
adc
fnstsw
xchg
aam
sbb
lcall
mov
xlat
movsb
je
test
enter
or
and
dec
add
push
jns
and
jge
rol
idivl
out
dec
rolb
mov
mov
adc
fsubrp
dec
fs
push
xchg
inc
mov
or
and
pushf
lods
pusha
lods
out
test
cmpsl
andl
out
addr16
mov
xchg
inc
jmp
sub
add
subl
adc
dec
jnp
and
cmc
dec
mov
popf
lods
ljmp
or
xor
xchg
pop
mov
jbe
jecxz
mov
sub
das
sub
and
push
mov
mov
arpl
aas
lret
fcmove
cmp
adc
das
out
jmp
add
xchg
push
sub
imul
ja
pop
loopne
lret
dec
sti
decb
stc
mov
lods
hlt
sbb
dec
mov
jg
les
ja
stos
pop
pop
subl
sub
rclb
dec
icebp
adc
movsb
push
aas
add
xorl
test
das
pop
mov
insb
xlat
dec
mov
bound
xor
push
cmp
pop
pop
or
xor
lret
push
sbb
or
cmp
sbb
cli
mov
or
pop
cmp
jno
ljmp
mov
in
and
das
addr16
jb
adc
mov
inc
cmp
and
or
pop
or
popa
shr
push
out
loop
ss
fndisi(8087
push
mov
pop
fs
jecxz
lds
popa
mov
mov
js
cmp
imul
psrad
mov
data16
cmpb
sbb
adc
addr16
xor
les
hlt
push
fwait
xor
sub
or
sub
jae
outsb
or
add
push
out
jno
mov
and
pop
js
in
jbe
pop
xorl
jnp
in
ss
xor
or
outsl
repz
aad
aas
mov
sbb
xchg
dec
mov
int
push
push
xchg
popa
into
mov
sbb
jne
stos
mov
fchs
and
out
add
sbb
cmp
pop
imul
and
scas
add
bound
xor
shrb
jno
and
sti
add
inc
mov
jnp
or
or
mov
dec
lahf
in
and
mov
jl
mov
dec
pop
xchg
movsb
data16
sub
push
testb
push
mov
xchg
inc
arpl
mov
adc
adc
mov
add
gs
push
popf
and
test
mov
das
fwait
jp
lods
mov
sahf
pop
push
je
call
mov
mov
mov
dec
mov
jge
popf
cwtl
push
mov
outsl
gs
test
push
mov
mov
or
test
jno
or
and
arpl
cmpsl
push
push
pop
mov
add
pop
fbstp
popf
pop
cmpb
jge
test
out
push
xor
in
push
clc
dec
arpl
dec
mov
stos
mov
or
aaa
es
jmp
inc
or
inc
xor
jnp
cmp
popf
into
arpl
out
sub
es
inc
mov
fstps
xor
sbb
jo
ficomps
and
test
cmp
and
mov
add
sub
mov
stos
aam
imul
sbb
sahf
pop
lea
xchg
fdivs
lret
fwait
scas
sub
fisubl
push
call
dec
jg
add
sub
pop
aaa
jb
and
mov
or
sub
ror
jne
cld
lret
push
inc
insl
pop
mov
ss
adc
out
das
xlat
sub
jbe
out
adc
int
shrl
addl
js
mov
cmp
outsl
or
jnp
lods
call
sbb
add
dec
test
sub
lea
pop
es
fisttps
hlt
dec
sub
jp
or
mov
aas
into
imull
mov
ja
das
test
dec
insb
fwait
inc
inc
mov
addb
hlt
xor
cvtdq2ps
push
les
clc
rcll
out
pusha
or
lcall
push
xor
clc
sbb
jmp
ljmp
or
aaa
xor
dec
inc
addr16
pop
inc
jmp
icebp
fst
inc
dec
xorb
insl
cmp
add
iret
ds
jns
pop
into
pop
mov
push
call
dec
test
mov
dec
stos
jno
mov
ss
and
mov
and
nop
xor
push
je
mov
test
and
test
insb
mov
push
push
push
insl
je
jo
sub
mov
add
mov
jmp
rcrl
xchg
pop
lret
pop
ss
adcb
and
sub
inc
xchg
call
xchg
mov
movsl
push
sbb
pop
lods
xchg
iret
sbb
aas
xor
sub
dec
out
cmc
lods
loop
popf
inc
inc
inc
push
push
movsb
xchg
pop
push
icebp
nop
loope
in
mov
test
decl
into
pop
or
aad
mov
cmp
and
mov
aam
sub
jb
das
lods
xor
in
pop
sbb
loop
mov
repnz
fnstcw
push
fsqrt
loopne
test
dec
mov
dec
sbb
cltd
push
loope
adc
mov
out
sub
mov
subl
dec
stos
or
mov
dec
sbbb
cmp
fadd
insb
adc
lds
insl
xchg
cmp
das
mov
adc
movsb
cs
addb
mov
dec
cmp
mov
or
push
pusha
mov
pop
xor
cmpsl
insl
jbe
test
fwait
or
or
fs
fistps
int
into
outsb
mov
mov
out
xchg
xchg
call
dec
jl
sbb
mov
lcall
inc
sbb
adc
sbb
or
push
lcall
jnp
test
mov
mov
jbe
pusha
repz
xchg
mov
sub
jecxz
push
fsubr
sub
addr16
into
scas
push
pop
outsl
mov
mov
hlt
loope
call
jbe
push
mov
dec
lret
or
cmp
inc
fiaddl
cli
jb
jae
popf
std
mov
inc
xchg
jle
pop
and
xlat
sub
xchg
xchg
js
leave
cmpsl
fabs
cmp
sub
mov
jne
imul
mov
mov
lock
test
mov
xor
push
test
pop
iret
mov
orl
mov
mov
js
decl
mov
and
jno
dec
or
jle
dec
stos
int3
ret
xor
pop
mov
sub
xchg
pop
lea
mov
popa
fisubl
into
lahf
xchg
inc
sbb
inc
push
dec
push
outsl
pop
push
pop
add
outsl
pop
xrelease
inc
xchg
push
inc
lahf
sti
mov
into
xchg
ljmp
pop
arpl
out
mov
hlt
idivl
inc
or
cmp
jg
dec
mov
mov
xchg
pop
cmp
rolb
lcall
jg
sti
repz
jmp
test
repz
lods
add
int3
inc
outsb
mov
dec
push
cmp
xchg
mov
cmp
movsb
and
addb
arpl
scas
call
lock
adc
mov
push
scas
push
mov
inc
icebp
dec
movsb
adc
into
inc
push
cmpsb
push
cmovs
jmp
sbb
nop
pop
mov
jo,pt
add
cmp
dec
jg
repz
jle
cmpsb
mov
fistpll
pop
pop
inc
test
lods
jb
pop
into
shrl
rcl
cld
pusha
in
pop
jno
inc
lods
test
pop
inc
cld
and
je
lods
xchg
push
andl
lea
call
sub
movsb
mov
sbb
fs
xchg
aaa
inc
jne
loop
mov
out
sbb
js
fistpll
xchg
in
rcrb
aas
jecxz
fwait
stc
mov
xchg
fwait
sbb
cmp
adc
mov
pop
in
popa
or
ror
into
sbb
sub
jg
fsubs
cmpl
pushw
or
movsl
push
sbb
shll
jo
add
pop
test
sub
cmp
sbb
push
fidivs
mov
js
cmp
adc
out
in
movsl
stos
xlat
sub
rolb
jle
mov
pop
jg
daa
push
jae
sti
jne
jb
push
mov
xor
lods
adc
idivb
popa
push
dec
jg
pop
imul
sarl
mov
pop
xor
inc
subb
daa
je
out
pop
sbb
popf
ja
das
cmp
push
cmpsb
cmpsb
vshufps
sbb
dec
addb
add
add
test
fidivrs
mov
mov
addr16
sbb
or
je
lds
pop
add
xor
sub
push
jns
test
sti
inc
imul
sub
in
push
aas
sub
ret
inc
or
adc
aaa
test
aam
test
push
scas
test
outsl
dec
mov
outsl
and
div
adc
push
or
sub
arpl
imul
ljmp
dec
lds
shl
pop
sub
mulb
add
sbb
leave
loop
decb
lods
cmp
dec
loope
out
lea
lcall
dec
sbb
pop
cli
add
sub
aaa
cmp
mov
xchg
adc
inc
sub
pop
inc
xchg
lret
adc
sbb
adc
ljmp
arpl
mov
cmp
dec
lcall
pop
cli
leave
clc
sbbl
repz
adc
popa
xor
ds
xor
sub
sub
movsl
xchg
and
mov
sbb
adc
jne
fiaddl
enter
mov
out
in
bound
push
mov
jmp
or
fildll
cmp
xlat
push
pop
jmp
cmp
xchg
dec
or
fisttpll
push
add
dec
mov
dec
ds
std
sub
inc
std
jle
push
xchg
mov
mulb
int
mov
test
decl
jb
jl
dec
jmp
cli
cmp
enter
jge
and
adc
or
sub
inc
add
add
add
adc
outsl
xchg
push
cmp
mov
lret
mov
js
in
jno
adc
push
cld
sub
hlt
push
mov
mov
stc
les
popa
je
adc
push
dec
leave
aam
add
cmp
mov
pop
mov
or
sarl
fisubrl
arpl
es
out
lock
mov
test
sti
scas
pusha
push
cmpsl
or
std
pop
mov
xor
cmpsb
lret
jecxz
dec
icebp
out
mov
cmp
push
sub
cmc
lcall
inc
inc
or
or
xor
mov
xor
in
adc
cmp
idiv
inc
stos
nop
iret
int
push
lcall
or
sbb
mov
mov
sbb
push
jbe
popa
cmpsl
xchg
aas
pop
and
inc
cmp
aas
shl
cltd
loope
push
in
sbb
test
sahf
xchg
mov
ret
in
dec
in
jne
push
pop
sub
cmp
adc
lock
jge
xor
push
es
adc
sub
cmpsl
dec
aaa
jno
cmpsb
adcb
add
inc
neg
pop
out
jbe
push
test
sub
jns
gs
pop
pop
inc
es
mov
arpl
add
inc
outsl
pop
lds
repz
insb
cmp
loope
add
mov
rcrb
rolb
jecxz
cmp
xlat
test
sub
mov
das
leave
scas
movswl
mov
mov
cmpsb
jmp
mov
sbb
lods
insl
arpl
push
push
jae
inc
cmp
in
ljmp
leave
fnstcw
push
addr16
inc
leave
aam
stos
daa
xchg
ret
rcrl
sub
cmp
in
test
cwtl
adcl
clc
mov
and
mov
es
test
aas
push
xchg
xor
inc
iret
dec
adc
xor
inc
test
pushf
test
jno
xchg
mov
imul
pop
lea
mov
pushf
dec
negl
test
and
jae
loopne
sbbl
bound
lods
mov
rol
cli
jp
dec
outsb
add
cmp
pop
stc
xchg
test
lcall
sbb
cmp
push
in
or
pop
mov
fstpt
xchg
in
lret
aaa
push
dec
sarl
adc
cmp
movsl
fcos
xor
add
cli
shl
adc
or
dec
xchg
pop
lret
push
aas
mov
adc
test
and
mov
in
adc
xchg
push
mov
push
mov
jb
xchg
xor
sub
or
fwait
jg
fstl
push
repnz
hlt
aas
inc
out
enter
or
mov
adc
mov
aam
ljmp
test
mov
rcrl
dec
ror
leave
cmc
push
mov
lea
push
pop
jb
sbb
leave
cmp
insl
pusha
xchg
push
movl
dec
jae
jno
ljmp
cmp
test
mov
jns
push
arpl
fdivl
insl
mov
dec
fcoml
sub
push
inc
dec
out
mov
or
inc
in
in
adc
stc
mov
into
sbb
push
add
or
addl
in
les
pushf
push
sbb
mov
or
pop
out
imul
add
pop
mov
sti
stc
jb
xchg
add
ror
dec
sahf
adcl
cmpsb
in
cld
stos
jg
add
push
push
jbe
jae
and
insb
lds
mov
icebp
jns
imul
and
imul
xchg
subl
sub
dec
dec
call
ljmp
sub
pop
aam
sub
push
mov
add
mov
std
bnd
das
sub
std
pop
fdivrs
das
and
clc
push
and
jp
sarl
adcb
ds
imul
push
nopl
std
ja
jmp
repnz
pop
dec
mov
insb
adc
movsl
sub
lods
sbb
jo
pop
sub
insl
sbb
out
dec
xor
std
notl
push
pop
stos
cmp
push
pop
ss
into
aam
push
push
sbb
scas
mov
sub
pusha
movsb
sub
cltd
repnz
ret
dec
add
jae
aad
mov
pop
and
mov
push
push
out
mov
cmp
and
mov
call
xchg
aas
arpl
mov
sbb
loop
gs
jmp
pop
adcl
bound
repnz
xchg
xor
add
ja
push
push
insl
sbb
adc
cltd
data16
movsb
mov
xor
cmp
cmp
mov
aas
ja
mov
stos
das
orb
mov
jne
push
sbb
imul
cmpl
pusha
dec
scas
je
mov
insb
or
es
shr
enter
mov
push
loop
pushf
adc
insl
ljmp
jb
xor
scas
test
jmp
inc
jns
in
jecxz
adcb
inc
mov
adc
or
and
jnp
cmp
cmp
fnstsw
xchg
stos
notb
jns
and
add
movsl
lcall
js
or
add
sbb
jle
mov
imul
scas
roll
adc
movsb
fldcw
enter
add
jns
movsb
cmc
jnp
pop
imul
movaps
xchg
movsl
xchg
pop
cld
dec
dec
cmp
test
xor
jp
inc
sbb
xchg
jnp
add
jo
mov
inc
fidivs
ss
sbb
dec
sti
sbb
mov
hlt
jle
lret
jbe
das
andl
sbbl
and
jle
in
xchg
push
repz
mov
cmpsl
mov
inc
aad
cmp
xorb
mov
test
dec
out
and
mov
pop
xchg
sub
or
adc
das
pop
inc
jmp
adc
mov
cmpsl
push
and
dec
dec
repnz
xorl
lahf
cmpsb
pop
mov
subb
test
mov
rorb
add
out
inc
fucom
stc
shl
jecxz
xorl
pop
xlat
call
sarb
nop
rcr
sbb
clc
mov
aam
push
or
xor
out
mov
cwtl
mov
dec
push
dec
or
cmc
xor
cli
and
nop
iret
call
xchg
jno
jecxz
fstpt
sbb
shrl
dec
push
outsl
jbe
inc
test
dec
push
inc
sbb
adc
lock
inc
popf
jle
out
xor
pop
sbb
xchg
mov
mov
mov
mov
xchg
test
int
cmp
js
mov
dec
int3
sbb
mov
or
insl
daa
test
add
movsl
push
je
pop
psrlw
cli
das
pop
xor
jp
sbb
push
stc
lret
in
bound
stos
out
adc
mov
mov
add
xchg
inc
mov
inc
mov
pop
jne
daa
outsb
subb
cmp
in
mov
jb
call
inc
or
ljmp
dec
aas
loope
push
sti
adc
mov
lahf
addb
pop
ret
decl
xor
xchg
and
call
pop
ret
outsl
cs
sti
cmp
or
push
daa
pushf
xor
xor
loope
cwtl
xchg
inc
inc
mov
ret
or
pop
nop
insl
repz
add
pop
xchg
mov
push
xor
jge
jecxz
lock
xor
pusha
je
mov
scas
icebp
jle
dec
mov
cwtd
push
pop
sbb
xor
rcrb
loope
pushf
adc
leave
aam
adc
push
loope
dec
or
jle
mov
cmpsl
add
lret
cmpsl
mov
jno
adc
add
faddp
les
decl
enter
xchg
mov
mov
out
push
push
imul
mov
mov
cld
mov
pop
dec
and
pushf
add
jo
mov
iret
jl
adc
sub
push
lcall
lea
inc
adc
iret
push
adc
jecxz
mov
in
iret
or
repnz
lods
adc
rcll
aad
pusha
push
xchg
push
insl
mov
add
mov
data16
divb
out
dec
movsb
or
bound
rcrl
mov
ljmp
lret
nop
out
sub
jno
sbb
into
sahf
jl
fstpl
mov
adc
mov
pop
or
inc
out
loopne
je
insb
pop
jp
cmp
push
or
push
mov
xchg
test
out
out
rorl
add
jbe
sti
xor
add
dec
xlat
jmp
andl
lcall
mov
inc
or
sub
cmp
xchg
and
ss
and
out
xchg
jmp
popf
xchg
not
clc
in
fs
sub
xor
lahf
movsl
aad
xor
lret
in
loopne
in
jnp
jge
notl
imul
cli
inc
lods
add
dec
mov
adc
xchg
in
push
mov
jne
xchg
stos
arpl
xor
outsb
jbe
leave
sbb
push
or
jbe
xlat
popa
mov
mov
mov
fwait
pop
jg
testl
js
mov
loop
xor
pop
add
xor
sbb
aam
sarl
movsb
aad
mov
sbb
roll
fadd
dec
mov
out
pop
andb
jns
lret
adc
adc
rolb
ss
push
fcmove
pop
and
das
or
jne
sbb
fst
and
in
push
negl
roll
test
pop
sbb
das
lock
lock
push
dec
sahf
add
mov
mov
fwait
push
mov
jo
cmp
or
inc
adc
push
adc
addl
out
mov
mov
sub
jbe
fidivs
stc
cmp
ficoms
andb
or
mov
nop
and
sbb
js
push
shl
es
dec
out
push
cld
xchg
mov
jne
test
push
popf
cmp
push
inc
push
sub
jne
cmpsb
addb
push
loop
or
jle
lahf
jo
xor
inc
cld
fs
cwtl
enter
push
data16
xor
push
out
pop
repz
inc
movsl
pop
dec
sbb
lahf
mov
fmuls
inc
mov
js
inc
and
mov
jmp
sub
mov
in
push
lods
push
aam
popa
dec
sbb
gs
loop
cmc
add
shrb
aad
mov
jb
push
pop
adc
and
or
pop
xchg
mov
dec
rcrl
pop
and
lahf
aaa
jbe
sub
pop
push
xlat
mov
and
sub
imul
mov
adc
in
mov
add
jne
das
cld
mov
sbb
lcall
outsb
dec
inc
in
mov
je
pop
lock
jno
xchg
fcmovne
test
rcr
mov
pop
aad
mov
gs
push
movsl
enter
jae
mov
push
leave
sbb
adc
popl
test
pop
sbb
sbb
inc
xchg
std
into
loope
test
or
add
clc
or
jg
mov
inc
in
mov
lods
lret
push
inc
push
cld
lea
jbe
push
mov
sbbb
pop
jle
mov
mov
adc
push
inc
xlat
xchg
gs
lock
mov
xor
popf
xchg
add
pop
cwtl
push
in
aam
mov
out
vmovaps
ficoml
lods
mov
sbb
fisubrs
push
xchg
xchg
rcrw
add
xchg
sti
movsb
xchg
nop
cmc
and
mov
dec
es
stc
add
push
imul
pop
jb
inc
adc
int
cmpsb
inc
and
lods
fldenv
ja
lods
movb
loopne
icebp
aaa
rcr
pop
addr16
mov
jmp
sti
fidivrl
mov
pop
fdivs
and
mov
push
out
xor
divl
popa
cwtl
ror
pop
fdivrl
les
jno
adc
jno
adc
popa
fmuls
sbb
jl
add
jns
adcl
push
mulb
fwait
aaa
or
shl
pop
movsb
stos
and
leave
shll
cli
in
mov
xchg
push
jl
outsl
aas
inc
insl
imul
push
and
addr16
fnstenv
ror
sub
lock
xchg
fndisi(8087
inc
cmpsb
adc
push
daa
shll
dec
adc
rcll
push
ret
push
cmc
gs
pop
add
cmp
pop
leave
inc
mov
xchg
in
xlat
jmp
adc
fsubs
stos
mov
mov
aas
and
stc
imul
jno
adc
mov
fs
mov
daa
testb
insb
or
or
ljmp
clc
jle
inc
pop
push
cmp
lock
mov
xchg
adc
test
mov
xor
sub
cmp
stc
pushf
jbe
dec
push
sub
mov
ss
into
negl
outsb
in
sti
push
jl
cli
call
popf
jnp
je
fsubp
push
add
inc
mov
jnp
sub
xlat
inc
nop
inc
or
shlb
iret
push
jno
pop
insl
int
jbe
mov
lret
adc
xchg
mov
icebp
fldt
and
lods
dec
push
hlt
cmp
dec
test
push
hlt
divb
adc
fstl
xor
sbb
sarb
scas
mov
fmull
mov
mov
pop
mov
dec
jbe
rcrb
pop
add
test
out
sbb
iret
ret
loop
mov
sarl
sub
push
lock
imul
mov
gs
xchg
push
push
adc
xor
out
dec
mov
movb
pop
xchg
mov
aaa
adc
ds
cld
cwtl
iret
xlat
mov
fucomip
sbb
pushf
leave
cwtl
std
cli
push
or
xchg
push
ficomps
std
sbb
cltd
adcb
arpl
or
mov
and
jg
and
enter
mov
xor
lret
xor
xorl
adc
mov
jmp
pop
inc
sbb
in
jmp
or
cmp
repnz
ret
xor
add
add
jmp
jns
jg
xor
out
sbb
push
inc
nop
or
or
mov
and
fildll
push
mov
mov
inc
cmpsb
ret
daa
xorl
lea
std
mov
aad
or
adc
jp
pop
ret
icebp
jbe
cmp
fisubrs
dec
cmpsl
push
insl
sub
test
mov
lods
dec
inc
outsl
jl
xchg
inc
aad
pop
aam
shr
mov
popa
test
inc
xchg
mov
jge
jns
mov
pop
sbb
lea
xor
xchg
testb
and
inc
fists
addb
push
rolb
and
xor
test
xor
cwtl
mov
jne
sbb
jge
and
mov
and
sarl
mov
and
stos
negb
rcr
imul
icebp
movl
add
aas
loop
sub
jecxz
dec
pop
je
adc
mov
ja
js
imul
push
or
orl
jbe
pop
dec
push
adc
jae
mov
adc
pop
xor
dec
cmp
xchg
in
jmp
popf
dec
or
rcrb
pop
sbb
cmpsl
pop
test
jne
pop
in
jle
lahf
push
out
jle
mov
push
sbb
aam
sbb
jp
mov
lret
pushf
popa
xor
lret
not
pop
in
cld
subl
add
xchg
jno
or
mov
pop
pusha
adc
ljmp
fldcw
push
adc
cmp
cmc
sub
mov
adc
outsb
mov
popf
pop
pop
sub
sbb
xchg
xor
insl
sub
mov
je
in
push
scas
xchg
jmp
clc
inc
xor
add
ret
or
dec
outsl
jle
popl
fs
sbb
cmp
call
mov
push
dec
dec
fbld
lahf
std
js
loope
icebp
out
out
push
les
loop
mov
mov
in
mov
add
sub
sbbl
sbb
std
mov
sbb
ljmp
jbe
lret
das
jl
popa
and
mov
mov
xlat
popf
and
roll
and
sbb
pop
xchg
addl
call
push
loope
popf
dec
mov
fidivs
dec
and
addr16
adc
mov
mov
adc
divb
jl
cmp
and
loop
xchg
mov
pop
shrl
xchg
stc
mov
ror
mov
jmp
and
negb
mov
and
push
inc
lahf
cs
jne
pop
cmpb
push
xlat
push
pop
lret
add
add
jne
add
pop
test
jp
shll
dec
test
aas
and
mov
add
fdivl
fwait
iret
orb
xor
lods
out
xor
ja
xor
divb
lret
cmp
cmc
das
pop
bound
and
sbb
in
mov
dec
jecxz
cmp
cmp
and
push
pop
movsl
push
lret
cmc
lds
or
sbb
dec
dec
dec
inc
cmp
pop
push
mov
inc
lcall
orl
or
cmp
dec
fbstp
fstps
mov
inc
cwtl
jecxz
pop
cld
inc
push
sub
lods
push
cmp
mov
addb
mov
mov
mov
push
cmc
mov
jp
jne
jg
inc
dec
dec
out
mov
aas
imul
in
push
add
jge
sti
xor
fcoms
inc
pop
xor
int3
cmpsb
bound
push
nop
loop
cltd
mov
out
push
stos
push
aad
outsb
in
or
xchg
sahf
jne
stos
cmp
push
sbb
rorb
mov
divb
out
push
mov
movsl
mov
sbb
call
xchg
aas
mov
popf
scas
add
inc
ret
repnz
mov
xchg
jns
cmp
jmp
xor
outsb
jg
cltd
dec
test
data16
and
stos
mov
lods
addr16
mov
cmc
mov
mov
inc
mov
in
xchg
mov
sub
inc
inc
leave
dec
mov
mov
mov
movsb
adc
loopne
jo
jne
bound
fwait
jp
mov
insl
xchg
jl
adc
xchg
jecxz
jns
jmp
xchg
in
insb
cwtl
pusha
gs
push
dec
scas
sbb
nop
push
inc
fstpl
aas
add
fsubl
nop
push
ss
jb
mov
xchg
sbb
dec
sub
mov
push
fcomi
stos
fildll
and
push
add
pop
lret
repz
daa
sub
pusha
lods
sbb
dec
ret
arpl
fs
push
xor
inc
pop
pop
ret
mov
xchg
or
orb
dec
xor
test
inc
or
cmp
cmp
imul
ja
test
call
insl
test
mov
ljmp
sbb
xor
jmp
sub
mov
out
insb
imul
loop
and
nop
cwtl
dec
in
add
int
cld
fcoms
xchg
cmpsb
lea
mov
into
mov
push
adcl
sbb
repz
jbe
add
push
adc
ja
xchg
lret
pop
lret
int3
mov
pop
xor
pop
sub
into
adc
int3
testl
push
pop
dec
jno
stc
adc
push
dec
cmp
sub
fistpll
xor
enter
jo
sub
rcl
xchg
dec
lret
pop
xor
mov
or
rolb
mov
dec
mov
xchg
add
imul
pop
xchg
loopne
data16
mov
femms
mov
arpl
add
push
mov
mov
loopne
rcrb
das
mov
in
sahf
imul
fs
daa
xchg
xor
scas
mov
int3
xor
fldcw
sbb
pop
je
std
mov
push
sub
int3
js
push
aam
pop
pop
inc
pop
inc
into
jns
cmpsb
dec
lods
repz
mov
cmp
stos
mov
iret
clc
rcrl
mov
data16
jge
loopne
dec
mov
in
xchg
rcrl
icebp
hlt
scas
jp
xchg
jmp
mov
cltd
add
sbbb
je
sbb
cmp
add
nop
aaa
ret
jo
into
movsl
dec
xchg
dec
sysret
mov
es
pop
out
lahf
std
int
cmp
xchg
std
push
lahf
cmpsl
dec
xchg
jp
mov
ret
daa
push
xor
les
pop
xlat
ja
lret
mov
xor
fisubs
sub
mov
push
leave
iret
test
push
push
cmp
cmp
jmp
pop
rcrb
mov
mov
xchg
mov
bound
frstor
loopne
pop
addr16
mov
sub
mov
inc
xchg
imul
das
sbb
cmp
or
pop
mov
aad
data16
pushf
adc
adc
cmpsb
and
and
ss
cmp
dec
sbb
xor
scas
adc
divl
mov
xchg
mov
cmp
push
aad
pop
fstpt
fwait
and
lahf
xor
sbb
pop
int
sbbl
cmpsb
sub
dec
mov
cltd
dec
mov
fwait
mov
movsl
xor
sub
mul
cmpsb
cmp
or
daa
dec
int3
or
daa
pop
mov
fs
stc
loope
xchg
fsubrl
pop
jecxz
data16
dec
jmp
js
adc
cmc
or
js
dec
testb
clc
fimull
sub
out
cltd
ja
in
sbb
cmp
jecxz
in
xchg
pop
and
addr16
pop
or
xchg
push
add
mov
addb
mov
popa
or
jp
pop
jecxz
loopne
push
cs
jge
adc
movb
lods
movsb
dec
add
adc
mov
data16
dec
add
pop
jge
adc
data16
lds
in
test
sub
lock
icebp
lds
test
add
pop
mov
popf
test
push
pop
lds
loope
test
jp
orb
mov
rclb
leave
add
and
mov
inc
dec
and
mov
daa
xchg
out
jnp
push
insb
lret
xchg
add
push
clc
rolb
subl
mov
mov
and
mov
sar
mov
dec
enter
lods
stos
sbb
enter
mov
cld
jecxz
jp
scas
mov
mov
shll
iret
bound
insl
add
add
shll
push
mov
ret
or
xchg
fcmovb
sahf
push
pop
lahf
pusha
adc
in
jmp
subb
cmpsb
mov
cwtl
dec
push
nop
and
mov
frstor
adc
outsl
es
mov
aad
mov
jge
inc
shlb
lcall
jne
cmp
push
stc
sbb
pop
imul
xor
ljmp
xor
mov
cmp
ljmp
jnp
xorl
dec
shr
out
repz
xor
xor
mov
test
lods
push
popf
cmp
enter
lahf
xchg
cmp
repz
adcb
outsb
xchg
cmpsl
and
into
pop
jns
push
sti
pop
inc
push
jns
or
mov
cmp
push
rcll
xchg
out
dec
push
imul
xchg
arpl
sub
sbb
outsb
out
mov
daa
test
push
xchg
add
ss
mov
ds
mov
jns
cmc
push
notl
cmp
ror
popa
orl
sbb
inc
mov
pusha
inc
pushf
or
fsubr
ret
inc
cltd
scas
iret
pop
test
xchg
pop
xor
jge
out
popa
jno
mov
loope
pop
mov
into
mov
or
cs
sub
cwtl
ret
xchg
loop,pn
add
lret
pop
int3
cld
int
dec
sub
and
pop
cmp
mov
mov
jmp
mov
inc
lods
enter
dec
pushf
popa
jb
and
xchg
outsb
or
fcomps
fs
pop
and
outsl
sahf
push
inc
das
mov
fmulp
xchg
pushf
add
js
cmp
imul
sub
ffreep
sbb
cmp
cmp
or
sub
lret
or
jmp
or
loopne
dec
cmp
icebp
mov
or
mov
lea
adcb
add
lahf
adc
das
adc
les
lea
sti
cmp
stos
adc
aam
and
mov
pop
xchg
jg
int
loopne
aaa
insb
sbb
push
daa
cltd
mov
ljmp
mov
dec
cmpsb
pop
das
call
add
cmpb
add
pop
aas
cmpsb
js
mov
daa
xchg
std
ret
popf
push
scas
mov
mov
das
hlt
mov
aam
mov
shlb
xchg
inc
push
or
ret
pop
jl
icebp
xorb
push
xchg
add
cmpsb
test
ret
mov
cmp
sarl
pusha
outsb
ljmp
cwtl
adc
dec
add
sahf
pop
adc
fstp
rcr
addl
andb
mov
ror
mov
dec
push
leave
in
mov
enter
adc
jnp
mov
mov
or
dec
gs
or
jmp
paddsb
pop
leave
das
xor
lcall
pop
aaa
popa
jg
mov
sub
out
jbe
adc
xchg
add
mov
xchg
inc
sub
lcall
pusha
mov
xchg
sbb
mov
sbb
xor
push
aam
add
jno
ret
jmp
push
adc
adc
repnz
pop
xchg
pushf
or
popf
scas
mov
daa
adc
xchg
ja
popa
xor
mov
mov
in
ja
icebp
notb
dec
and
es
inc
insl
outsl
lods
fdivp
fsubl
es
addr16
pop
test
test
out
pop
mov
mov
jecxz
lret
popl
std
push
xchg
mov
jecxz
mov
jae
push
fstpt
into
xor
test
xchg
add
pop
test
es
es
xchg
daa
test
and
test
addr16
mov
jno
repz
jnp
in
or
and
orl
push
push
insb
and
iret
jne
mov
pushf
enter
add
xor
xor
fnstsw
or
aaa
mov
sbb
xchg
insl
cmp
inc
xchg
xchg
leave
outsl
push
aaa
ljmp
sahf
out
add
fstl
les
mov
sbb
sub
shrl
inc
push
cmp
jge
inc
es
imulb
shl
out
jmp
pop
jnp
mov
popa
je
cmp
cmp
pop
mov
jl
into
and
push
mov
sbb
mov
xor
es
jp
popa
mov
xchg
mulb
and
mov
int
pop
push
pop
push
test
mov
into
mov
pop
jno
and
jae
lcall
cs
push
lahf
pushf
out
in
fsubs
cmp
mulb
pusha
std
les
jl
fldenv
es
in
xlat
out
xchg
xchg
cwtl
cli
loopne
and
xchg
in
jecxz
xchg
imul
popl
mov
rorl
test
push
pop
lcall
mov
insl
pop
dec
push
dec
inc
add
fcomi
jp
pusha
bnd
lret
rcr
sbb
push
sbb
aaa
fildl
mov
movsb
jge
inc
dec
cmp
cld
ds
loop
enter
pop
dec
push
cmp
arpl
out
cmp
adc
sub
loop
mov
mov
in
cltd
stc
loop
xchg
in
sbb
ficoms
mov
dec
mov
cmp
push
jb
jmp
repz
mov
push
repz
push
dec
push
iret
jle
ret
repnz
sbb
lcall
mov
xchg
push
stos
ret
dec
movsl
daa
mov
clc
fwait
pop
adc
pop
mov
pop
and
adc
xchg
ficompl
nop
jge
dec
out
enter
imul
mov
js
ljmp
or
and
and
cmp
and
ljmp
push
sbb
mov
sub
cmp
lods
xchg
or
in
xor
iret
test
les
mov
cltd
mov
xor
add
lock
inc
or
ficompl
pop
jo
cmp
add
jae
out
and
xlat
cltd
test
popf
mov
mov
outsl
lods
repnz
in
outsb
inc
and
outsl
movsl
xor
pop
dec
or
cmpsl
sbb
and
fbstp
in
and
aad
rol
std
icebp
or
adc
std
pop
adc
movsb
mov
and
out
cmp
fsts
sub
xor
out
pusha
dec
push
std
sbb
jge
jno
pushw
int3
fisubs
xchg
push
mov
dec
mov
jecxz
dec
jge
cltd
and
xchg
inc
sub
inc
dec
mov
jnp
mov
leave
and
push
fists
adc
movsl
mov
sbb
cs
mov
xlat
adc
mov
pop
iret
sub
mov
call
cli
mov
dec
pop
dec
mov
push
push
mov
cmc
subl
mov
inc
sbb
dec
ds
adc
inc
repnz
jl
shlb
pop
sub
mov
cli
cs
pop
addr16
pop
sti
adc
pop
lock
pop
insl
scas
shlb
addr16
push
mov
loopne
je
adc
mov
scas
or
int
jg
movsl
daa
rdtsc
mov
sub
loope
aaa
xchg
xchg
push
repz
jg
loope
fnstsw
into
rol
and
imul
push
imul
and
cmpl
jl
mov
in
test
cmpb
daa
movsb
jge,pt
out
adc
das
dec
lret
xorl
or
push
into
inc
push
dec
orb
out
lock
hlt
cmpb
inc
inc
mov
inc
icebp
add
cld
jecxz
cli
xchg
clc
nop
xchg
pop
shlb
fcos
shrb
mov
add
out
sub
je
cli
or
jbe
aas
fstpl
add
inc
adc
aam
dec
sti
shl
pop
cmpsl
aas
fldenv
mov
lret
in
fadds
aam
mov
jle
inc
sbb
in
sbb
call
insb
xchg
inc
pop
lock
mov
sub
cli
jnp
sbb
mov
add
push
push
cltd
adc
std
aas
fwait
jae
mov
iret
dec
pop
xchg
xchg
adc
mov
xchg
mov
daa
out
ljmp
inc
ds
jae
int3
scas
push
xchg
mov
pop
test
ret
fstl
lods
loopne
pushf
icebp
or
mov
add
cmpsl
in
insb
jecxz
adc
sahf
and
pop
pop
clc
pop
gs
repnz
loope
push
and
cld
mov
daa
inc
nop
or
iret
in
push
das
cmp
dec
inc
frstor
and
pop
ds
cmp
insl
es
xchg
xor
in
paddq
mov
pop
aam
cmp
sti
inc
mov
ljmp
xchg
idivb
insl
test
jmp
rcl
mov
or
rolb
bound
nop
or
into
jl
test
loope
cmpsb
mov
sub
and
xchg
cld
js
push
jae
inc
imulb
cmpsl
cmc
mulb
in
push
inc
dec
pop
in
add
xchg
jl
je
add
daa
stos
mov
sbb
mov
fdivl
jle
jbe
xchg
adc
add
cwtl
test
or
sti
cmp
ret
fsts
clc
and
dec
pop
repz
gs
int
adc
jg
mov
dec
mov
addl
loopne
mov
cmp
mov
or
movsl
loop
mov
push
mov
dec
sbb
inc
fsubrs
xor
dec
lcall
pop
push
adc
xchg
pop
xchg
cmp
in
dec
fsubr
test
divl
loope
jb
dec
mov
and
es
dec
jne
loop
dec
and
mov
ss
repnz
jmp
jp
scas
sbb
iret
dec
jbe
inc
mov
and
pop
je
lds
inc
cmp
pop
pop
les
mov
mov
cmp
add
jmp
popa
or
mov
pop
into
cmp
xlat
ja
ficoms
adc
jae
int3
and
cmc
or
sbb
pop
jbe
mov
mov
outsb
imul
sti
into
xchg
push
jle
lds
pop
addb
mov
scas
sbb
lds
outsl
dec
inc
hlt
popa
or
call
sti
in
pop
or
mov
leave
imul
adc
adc
mov
cmp
test
and
inc
call
call
push
sti
pushf
arpl
cmc
cmc
cwtl
stos
ss
pop
sub
pop
sub
push
add
mov
jo
sub
iret
jo
fnstcw
push
sub
and
movsl
fsub
push
shlb
mov
loop
loope
les
add
or
cltd
lock
cmpsl
setnp
out
repz
stos
or
bndldx
push
inc
imul
gs
cmp
and
mov
cmp
popf
sbbb
outsl
cmp
push
jb
xchg
call
xchg
scas
add
insl
dec
cld
jmp
add
inc
popf
add
es
add
imul
mov
sub
xchg
mov
cmp
inc
psrld
mov
hlt
in
fimull
imul
mov
xchg
adc
out
pop
test
out
mov
add
jno
std
cmpsl
xchg
fstl
mov
pop
adc
pop
fucom
cmp
mov
fildl
sahf
sub
mov
push
xchg
fsubl
imul
das
or
aam
adc
leave
xor
xlat
inc
call
fnstsw
lahf
imul
shlb
inc
add
or
dec
nop
sbb
hlt
push
cltd
rclb
cmp
movsb
in
mov
adcl
ss
stos
push
and
dec
cmpsb
sbb
add
iret
lock
shll
jmp
jle
lock
fldenv
jo
cwtl
xchg
shrb
loope
hlt
imul
mov
aaa
sti
mov
sub
mov
mov
orb
pop
fcmovb
in
fidivl
stc
xor
nop
mov
dec
outsb
add
pop
push
jmp
in
cltd
lods
pop
inc
mov
loope
mov
sar
movsb
fadd
adc
rolb
and
mov
rolb
mov
jg
add
dec
dec
lret
adc
fadds
je
pop
movsl
scas
leave
pop
sahf
mov
nop
stos
cltd
push
jb
aas
mov
mov
add
add
sahf
sub
xchg
adc
shll
dec
into
jp
and
dec
imul
xchg
sbb
aad
adc
jo
sbb
or
push
adc
cmc
test
nop
inc
push
cwtl
ljmp
pop
loope
popa
dec
dec
xchg
pop
mov
pop
lods
clc
sub
push
adc
test
dec
add
das
xor
mov
cmp
cmp
rcpps
or
aas
scas
data16
sbb
scas
loopne
push
shll
mov
adc
out
andb
andb
xchg
aaa
cs
jmp
loope
decl
or
sub
adc
fsubr
adc
dec
jecxz
adcb
outsl
sub
xchg
arpl
inc
cmpsb
push
mov
pusha
push
mov
je
mov
cwtl
or
adc
out
xchg
mov
inc
lret
std
push
icebp
inc
pop
bound
jnp
inc
pushf
shll
inc
mov
add
ds
mov
push
push
dec
inc
aaa
inc
pop
cmp
sub
push
in
jnp
fwait
sbb
scas
test
pop
mov
mov
lea
cwtl
sti
mov
mov
insl
loop
jge
rorl
pop
adc
popf
jne
fisttpl
xor
add
fsts
rolb
ror
das
sub
push
adc
cmp
mov
decb
iret
mov
and
xchg
push
movsb
ficomps
xchg
sbb
ret
push
cmc
pop
insb
sub
sub
hlt
ljmp
jecxz
inc
insl
adc
outsb
jae
out
fwait
or
mov
or
push
aam
jo
lahf
outsb
inc
push
outsb
xchg
out
jns
add
loop
data16
add
mov
loopne
sub
push
lret
mov
cld
lea
xchg
rcr
mov
sbb
mov
mov
test
cld
fistl
or
outsl
ljmp
adc
sbb
and
clc
sub
mov
push
cmp
mov
push
fcoms
jge
cmp
mov
pushf
mov
mov
bound
mov
push
ret
jmp
or
pushf
cli
xor
or
push
pop
mov
or
mov
and
sub
fistpl
pop
gs
jl
std
cs
subl
mov
push
in
adc
bound
pop
lds
mov
ljmp
jle
aad
das
jmp
xor
mov
pushf
and
xchg
clc
arpl
xchg
sbb
sbb
out
sub
jbe
dec
sbb
jnp
pop
fdivrl
aas
cmc
jns
mov
mov
mov
sub
mov
test
out
fidivs
addr16
in
xor
adc
mov
add
out
js
adc
or
jl
test
sub
mov
pop
inc
loop
aad
sub
add
mov
inc
in
mov
push
sbb
pop
pushf
insb
femms
test
mov
notb
or
pusha
xchg
shl
popf
jp
xchg
cmp
rep
mov
jns
ja
scas
mov
xor
negb
lahf
jle
mov
test
pushl
imul
clc
pop
inc
xchg
stos
shl
sbb
call
xchg
ds
lret
mov
add
cmp
cmp
adc
push
mov
es
adcl
xor
fmul
loope
jmp
lds
inc
mov
sub
xchg
imul
mov
pop
add
inc
call
sub
leave
es
and
jge
cmpl
sub
dec
loop
sub
cmp
ljmp
mov
ficomps
test
mov
cwtl
cmp
mov
jmp
into
pop
adc
cld
test
cmp
pop
pop
pop
jge
shl
mov
fadd
dec
jno
sbb
mov
dec
in
add
subb
addr16
pop
cld
mov
inc
lcall
sbbl
rcrl
xchg
jmp
jnp
lret
and
xor
mov
mov
cli
orb
cmpsl
mov
xor
mov
xchg
inc
dec
in
ffreep
rcl
lahf
pusha
outsb
jb
and
int
push
dec
adc
push
movsl
pop
adc
call
aam
fimull
fidivrl
test
les
jmp
dec
cld
jno
fwait
rcrb
lods
in
mov
cmp
push
xchg
mov
inc
mov
fcoml
mov
les
call
and
inc
push
mov
mov
dec
add
shll
push
mov
adc
xlat
iret
call
pop
add
lds
pushf
stos
pusha
or
sahf
or
adc
lea
std
and
es
addb
lock
jge
sbb
addl
scas
scas
sbb
mov
mov
xlat
daa
imul
jmp
rcll
std
mov
rcrl
jmp
inc
inc
in
call
and
ret
dec
in
add
or
add
sbb
in
and
lods
mov
mov
inc
sbb
push
adcb
pusha
imul
mov
pop
in
add
insb
and
push
xor
bound
mov
lret
sub
xorl
ret
inc
push
jbe
loope
cmp
rorb
scas
adc
gs
cmp
dec
dec
mov
dec
ljmp
arpl
sti
iret
mov
push
cli
jle
les
enter
sbb
andl
jb
repz
ret
sti
mov
mov
outsl
dec
push
cli
test
push
push
or
in
inc
sahf
and
adc
inc
dec
je
jne
test
pop
mov
sub
lret
movsl
rcrl
mov
imul
mov
jo
lcall
sbb
call
mov
movlhps
outsl
rclb
xchg
pop
lret
cmp
inc
aad
jbe
sbb
mov
lahf
dec
test
popf
and
mov
mov
lahf
sti
daa
rcrl
jno
sub
movsb
enter
ljmp
lods
call
ss
pop
gs
xlat
cld
mov
dec
xchg
or
rol
mov
daa
cmpsl
xor
les
addr16
call
loopne
cmpsl
or
jnp
aam
and
dec
xchg
push
and
jle
xchg
das
mov
loop
push
jnp
jmp
pop
add
mov
adc
iret
mov
in
ss
pop
xchg
and
mov
stos
fs
adc
xor
fmull
sahf
in
cmp
mov
inc
push
cmp
rclb
lret
ja
mov
clc
xchg
int3
rolb
pop
aam
jb
sbb
push
repz
mov
add
xchg
push
gs
xor
xor
mov
mov
mov
inc
scas
and
idivl
sub
roll
dec
xlat
jmp
or
pop
sahf
fcomp
scas
mov
repz
push
popa
aaa
or
stos
div
cmpsl
mov
mov
lahf
jb
dec
popf
aam
xor
adc
push
sbb
xchg
arpl
cltd
outsb
mov
aas
inc
cmp
inc
or
lret
int
add
dec
xor
or
loop
fucomip
sahf
adc
mov
aam
aad
add
shll
sub
cmp
dec
jnp
test
dec
es
fimuls
pop
sub
js
aaa
cmp
pop
outsb
loope
cli
xor
pop
lcall
lds
out
mov
pop
mov
inc
add
mov
cmp
dec
aam
jne
jns
bound
dec
mov
test
xchg
lds
pop
and
and
pop
loop
cmp
aad
mov
cwtl
xor
aas
cmc
test
push
shlb
fdiv
cwtl
fdivl
ljmp
out
cwtl
and
fstl
pop
mov
xchg
xchg
sahf
cmp
imul
pushf
pop
pop
ja
clc
outsl
cmpsl
pop
imul
jae
mov
cmc
cld
insb
mull
push
fneni(8087
xor
mov
sbb
rolb
or
and
and
cmp
cmp
mov
inc
lcall
loope
aaa
inc
sbb
iret
and
xchg
and
sub
xorb
inc
mov
inc
test
push
das
fisubrl
pop
lahf
adc
dec
xchg
pop
call
cmp
in
adc
mov
inc
adc
fucom
xor
mov
mov
mov
jo
jl
push
stos
int3
mov
mov
adc
xor
add
mov
lds
push
push
jmp
sahf
orb
popa
jge
arpl
add
je
imul
pop
cmp
jg
push
push
pop
loop
loopne
fdivrs
jp
fisttps
dec
lea
stc
aam
mov
test
fisttpll
in
jle
push
mov
adc
xlat
ss
pcmpgtw
in
sbb
cmp
xchg
sub
jb
pop
arpl
repz
xor
repz
sub
push
pop
es
cmp
data16
das
dec
jns
lods
cwtl
inc
data16
cltd
push
imul
std
and
sbb
mov
pop
pushf
in
dec
inc
inc
leave
jnp
add
popf
out
movsb
add
dec
dec
pop
or
push
cmp
fadd
cmp
push
movsb
das
fs
shl
and
xchg
addr16
or
jmp
jecxz
and
jbe
mov
inc
dec
ret
out
fs
dec
mov
push
jae
jmp
xchg
pop
lret
xor
xorb
aaa
pop
push
mov
test
and
out
mov
xlat
into
out
mov
dec
and
push
outsl
int3
xor
jp
out
pop
out
cmpsb
fwait
jp
mov
jp
mov
scas
push
push
mov
fnstsw
push
xor
pop
stos
int3
icebp
sub
jo
xor
fs
je
or
jbe
sbb
xchg
das
test
cltd
cmp
xchg
pusha
lea
and
js
hlt
push
push
dec
test
inc
hlt
addr16
mov
mov
es
imul
sub
clc
cmp
push
adcb
mov
imul
inc
cmp
pop
scas
lea
rolb
cmp
imul
push
aad
xor
rolb
pop
and
movsl
jnp
in
cmp
ljmp
sbb
mov
jns
test
inc
insl
gs
xor
xchg
cmpsb
add
ret
or
push
mov
mov
divb
movsb
xchg
neg
mov
std
cltd
repz
rcrb
lret
jnp
cmp
test
xor
inc
jo
xchg
rcl
daa
push
mov
fisttpll
pop
or
inc
test
push
and
push
data16
lret
loope
mov
lods
inc
data16
rcr
xchg
int3
sti
push
fstpt
mov
pop
mov
cmp
fwait
or
and
mov
sub
das
test
pop
adc
js
shll
add
stos
push
bswap
call
sub
dec
dec
ljmp
push
jecxz
nop
mov
cmp
icebp
push
push
enter
sub
adc
hlt
sub
lret
fisttpl
jns
out
popf
mov
mov
fisubs
ja
sub
adc
movsl
jle
add
mov
jne
pop
adc
pop
xchg
shrb
sub
jbe
popa
push
inc
and
fisubrs
mov
fdivl
outsb
movsb
add
lods
leave
sbb
aad
push
movsl
pop
pop
and
xchg
sbb
adc
pop
pop
inc
jbe
xchg
lods
lods
push
shll
outsl
pop
pop
out
into
xor
xor
mov
dec
ret
mov
imul
jecxz
faddp
loop
jns,pt
push
and
movsb
lods
in
aam
mov
sbb
fldt
fucomp
das
out
stc
pop
fadd
mov
aas
adc
icebp
add
jl
pop
roll
repz
cmpsl
dec
inc
test
mov
dec
xchg
adc
sub
rclb
fnstenv
insl
mov
xchg
xor
cli
fwait
dec
fwait
call
mov
mov
mov
outsl
fwait
gs
xor
cmp
mov
mov
jb
cmpsl
mov
test
cmpsl
aas
ret
or
dec
imul
and
xchg
idivb
jo
cmp
bound
push
fisubl
pop
adc
mov
aas
push
and
es
fwait
sets
out
or
sub
add
and
jg
shl
popf
inc
imull
scas
movsb
loopne
lds
in
jae
add
adc
jge
iret
popa
and
mov
repz
add
insb
mov
mov
call
jne
test
out
lret
mov
nop
rorl
push
pop
aad
stc
or
imul
fdivp
jmp
pop
push
jo
pop
push
es
sub
jnp
push
sti
pop
dec
frstor
or
fbstp
cmp
cld
sub
xor
addb
arpl
push
inc
jno
adc
add
add
inc
call
stos
jg
sbb
andl
jae
xlat
push
jmp
jl
inc
das
ret
pop
cmpsl
lret
std
movsb
jl
cltd
dec
adc
add
sbb
cltd
xchg
jg
das
mov
or
mov
dec
pop
push
jge
stc
in
fdivp
pop
mov
fnstcw
scas
inc
mov
aam
mov
aam
sti
xchg
inc
push
scas
sbb
popa
testl
mov
leave
fidivrs
lcall
add
mov
imul
pop
jns
fisttpll
call
movaps
dec
push
inc
or
jb
cld
shlb
push
jns
jecxz
lret
insb
xchg
or
popa
inc
test
push
divb
sbb
jnp
lds
push
adc
scas
xor
mov
push
sbb
daa
xor
push
enter
mov
insb
test
mov
and
leave
outsl
add
mov
sahf
jecxz
fistps
dec
push
xor
push
and
xchg
lcall
notb
dec
add
stos
or
hlt
fists
xchg
loope
and
mov
xchg
push
mov
mov
mov
stc
ja
and
cmp
lret
sub
aam
incl
fwait
or
sahf
push
cld
ja
mov
loop
dec
xor
hlt
std
test
shrb
mov
pop
rcr
ljmp
ds
cmp
add
jp
icebp
cmp
cmc
mov
sahf
or
fdivl
add
jmp
lock
pop
xchg
repz
jbe
dec
adc
and
addr16
or
in
loopne
lcall
cli
test
push
daa
cs
popf
jp
xor
and
mov
cmp
push
push
jmp
jl
dec
mov
stos
lods
cmp
xor
aaa
xchg
and
pushf
or
mov
sub
add
jae
sbb
push
das
sub
sbb
rorl
je
in
clc
fistps
stc
xchg
fcmovnu
xchg
ss
push
mov
in
in
xor
and
aaa
dec
rcr
lds
mov
outsb
mov
sbb
jge
jns
push
mov
inc
lcall
lcall
int
jmp
cmpsl
jo
mov
mov
hlt
les
daa
sbb
in
nop
sub
ljmp
mov
cmpl
negl
lcall
stos
dec
adc
aam
int3
mov
and
add
ret
dec
iret
sub
ret
mov
nop
sub
pop
psraw
rorb
fstl
mov
mov
shll
fs
repz
mov
dec
adc
push
xchg
jg
pop
pop
testb
mov
jmp
xor
xchg
dec
mov
dec
inc
push
lock
xor
test
inc
std
lods
jp
sahf
xor
adc
insb
adc
and
inc
out
cld
mov
loope
lods
adc
enter
mov
scas
pop
mov
xor
cmp
mov
jp
das
xchg
mov
mov
xchg
cs
stos
push
clc
inc
cmp
push
lea
pop
rorb
sbb
and
cs
sti
inc
mov
inc
lock
pusha
or
lret
adc
add
mov
or
repz
nop
bound
push
outsl
adc
lods
push
adcb
cmp
cmp
cmp
add
jg
xor
dec
or
mov
imul
ja
mov
jge
loop
mov
cli
and
mov
es
xor
bound
std
jno
popf
mov
fdivrl
int3
mov
sti
stos
sub
js
push
popf
push
and
and
imulb
cli
loop
stc
icebp
mov
push
popa
data16
iret
xchg
xchg
ljmp
jge
add
jmp
xchg
push
mov
ret
cwtl
xchg
sub
bound
mov
sub
lods
aas
cmp
movups
aad
pushf
add
rcrb
icebp
into
addb
nop
fistps
sub
mov
sub
or
cmp
adc
mov
adc
les
or
dec
bound
sbbl
arpl
clc
xchg
out
cmpsl
shr
jmp
mov
out
inc
dec
fistps
push
in
mov
sbb
js,pn
stos
pushf
into
jl
daa
lods
fbld
mov
mov
in
mov
xchg
int3
outsl
int
xchg
xchg
pop
rcrl
lahf
test
dec
mov
mov
addr16
in
inc
xchg
mov
in
cmp
daa
es
ret
idivb
cmpsb
cmpsb
addl
dec
mov
gs
cwtl
aas
lahf
inc
push
das
clc
lods
add
xchg
outsb
and
in
push
or
pmaxsw
mov
repnz
test
mov
jne
imul
jecxz
out
aam
lods
sub
sbb
lahf
je
and
adc
mov
test
cwtl
andb
mov
rorl
repnz
nop
and
mov
push
or
mov
lret
rcrl
fsubrs
in
test
xlat
or
sub
outsl
je
pop
int3
popa
pop
pop
xchg
adcb
lods
adc
daa
pop
enter
jg
aaa
dec
fsubrp
shlb
in
cmp
sub
or
js
xor
or
cmpsb
vpmulhw
das
dec
inc
xchg
inc
sub
les
inc
push
pushf
mov
mov
pop
mov
popf
testb
cwtl
fwait
push
lahf
mov
mov
sbb
push
jae
popf
fbld
mov
pop
stos
pusha
mov
sub
dec
jns
popf
cmc
and
cld
and
and
push
rcll
outsb
nop
pop
movsl
xchg
push
pop
ja
clc
mov
pop
pop
push
jge
sub
std
push
xor
adc
fmuls
add
sbb
cli
lods
mov
dec
mov
add
mov
pop
pop
fwait
mov
push
fwait
popa
sbb
mov
insl
in
mov
sbb
mov
dec
push
stos
shl
jb
pop
stc
xor
and
popa
arpl
sub
call
les
stos
mov
pop
push
jno
shrb
out
je
inc
aad
into
popa
test
daa
push
push
sub
scas
mov
fwait
jae
pushw
rorb
xchg
leave
scas
sub
push
jmp
iret
addb
pop
lahf
mov
out
in
leave
pop
int3
scas
fisttps
fld
sub
fidivl
in
das
aaa
cltd
decb
imul
mov
repnz
mov
cmpb
pop
fcmovb
add
push
scas
stos
lret
movsl
scas
pushf
not
pop
cmp
mov
daa
fildl
lds
or
xchg
xchg
xorb
mov
push
jmp
rclb
testb
lds
add
jns
in
test
dec
rorl
cmpsl
pop
push
dec
ljmp
aad
imul
xchg
mov
mov
xchg
bound
or
jne
jb
arpl
popf
and
sbb
scas
roll
mov
imul
sbb
xchg
es
fisttps
and
mov
dec
push
ljmp
and
or
push
or
xor
xchg
in
sarl
pop
sub
xor
sti
inc
in
inc
jmp
int3
shll
lods
jge
jb
push
jle
dec
cmp
outsb
rcll
loop
xchg
ret
add
out
aaa
sbb
pop
lods
or
mov
lds
xlat
dec
xchg
das
pop
cmp
dec
ficoms
pop
add
cmpsw
lods
lahf
and
mov
aad
jecxz
lcall
std
jns
dec
gs
lcall
pop
mov
mov
in
push
inc
js
testl
push
repz
jecxz
jae
cmpb
mov
push
and
shrb
sbb
call
push
int3
jp
mov
lds
jg
push
out
push
movsb
imul
andl
mov
loop
repnz
in
stc
mov
aaa
mov
std
push
xorl
push
ljmp
int
xor
sub
mov
inc
cmp
and
add
jne
pop
pop
test
cmpsb
xchg
push
push
xchg
mov
lret
jno
inc
jge
lea
inc
sub
sub
sahf
jp
push
push
inc
sbb
mov
jno
ss
leave
cltd
in
xor
fwait
mov
xchg
popf
adc
bound
lret
fistps
cmc
loope
fwait
push
sbb
andb
sub
cld
pop
pop
aas
or
xor
ret
cmc
into
out
add
lcall
and
enter
inc
mov
pop
movl
repz
xor
shrl
js
pop
xor
sub
ss
jmp
imul
xor
mov
inc
sbbl
sbb
sub
pop
xchg
jb
loop
ficoms
or
cmp
mov
pop
in
lahf
gs
push
cmpsb
push
imul
jl
mov
stc
jns
outsl
mov
ss
inc
movsl
mov
jg
je
push
ror
xlat
rorl
dec
sbb
xor
out
dec
in
dec
pushf
or
outsl
rcr
into
jg
imul
fistpl
stos
mov
fmuls
inc
mov
mov
sub
insl
aaa
mov
push
or
ret
decb
fcmovnbe
iret
jp
lds
or
bound
mov
mov
adc
gs
sbb
in
cli
and
jno
repz
push
subb
verw
rolb
fsubrs
xchg
mov
xchg
test
jge
inc
gs
fcom
jecxz
xchg
addb
lea
mov
cmp
cmp
sbb
dec
cwtl
dec
inc
jl
push
clc
add
into
inc
inc
lcall
nop
mov
pop
xor
aad
dec
cmc
push
mov
repnz
out
fbld
inc
hlt
jge
inc
lea
ljmp
dec
push
rorb
scas
imul
xchg
inc
push
xchg
jae
sahf
clc
inc
stos
bound
out
and
test
aaa
pop
push
and
in
jge
aas
adcl
cmp
cmp
aaa
cmpsb
loop
xor
imul
jns
hlt
mov
sarl
inc
clc
dec
inc
jb
lcall
add
outsl
mov
fdivl
aas
int
lret
stos
push
in
sub
push
and
and
adc
sbb
xorb
fstpl
rolb
sbb
push
xchg
loopne
pavgw
int
pop
xor
ficomps
mov
in
inc
hlt
sub
and
shl
out
inc
sbb
out
imul
aas
jns
cwtl
in
or
add
hlt
daa
ljmp
fimuls
and
mov
aaa
sub
fsubrs
xlat
sbb
aaa
shll
mov
xchg
jmpw
sahf
adc
in
dec
jbe
inc
add
stc
test
mov
cmpsb
in
xchg
mov
fsub
add
or
ret
mov
sbb
clc
lret
lock
lock
dec
ds
test
fdivrs
adc
mov
cmp
mov
mov
and
lcall
shll
xchg
jecxz
mov
cmp
pop
je
jge
sub
and
pop
stos
shr
jns
idiv
test
mov
and
cmp
js
cmp
dec
ret
dec
dec
paddb
aas
push
mov
call
xchg
aaa
repnz
incb
fcoml
push
add
xlat
scas
jnp
lcall
mov
or
jbe
jbe
xor
test
jns
mov
cmp
imulb
lock
addr16
add
test
lret
into
mov
scas
mov
daa
and
movsb
push
push
lahf
mov
mov
xchg
mov
jg
fsubl
pop
adc
outsb
aad
xchg
aad
fmulp
je
jmp
add
cmc
lcall
jo
test
mov
or
xor
adc
add
xchg
and
pop
movsl
jb
pop
movsb
jo
test
lret
ds
xchg
lock
push
mov
and
aad
mov
imul
xchg
pusha
cmc
arpl
aad
push
sahf
fs
push
inc
fsubp
mov
rcrb
cmpsb
push
inc
cli
test
das
sub
pop
xchg
pop
or
in
xor
mov
and
out
sahf
ljmp
or
test
mov
in
scas
addl
jb
loopne
pop
andl
test
cltd
ficompl
add
sub
shrl
xor
iret
mov
inc
or
cltd
mov
fisttpl
xchg
lods
test
pop
add
cmc
repz
loop
movsl
xchg
int
in
xor
cmpsl
cmp
das
loop
orb
stos
ret
fstps
and
xchg
stos
lods
pop
lock
aas
and
or
xchg
ret
imul
mov
lahf
scas
mov
lret
jno
inc
mov
imul
jae
pop
mov
push
movsl
mov
lret
jbe
stos
nop
pop
stos
clc
mov
jnp
int
loope
mov
mov
push
aaa
out
imul
mov
push
outsl
or
or
mov
xchg
push
lods
xor
call
enter
lfs
movsl
mov
xchg
lock
add
mov
xorl
push
cmpsb
dec
stos
clc
dec
dec
scas
xchg
push
insl
lea
jo
inc
xchg
mov
sbb
fs
jno
jnp
or
and
mov
jno
and
mov
cld
pop
stos
test
out
int
mov
push
or
inc
test
jne
xorl
jne
jnp
or
out
cmc
cmp
push
aaa
nop
cld
outsb
fmul
dec
les
pop
push
dec
inc
cwtl
adcb
push
add
fstpl
aas
sti
inc
cmp
xor
je
movsl
adc
jl
jns
or
xchg
or
jno
lret
scas
shrl
cmpsb
jmp
mov
inc
testb
testb
fdivl
mov
pop
or
adc
cmp
mov
in
shrb
fisttps
pop
sub
dec
pop
sub
shlb
push
cmpb
pop
mov
xlat
or
ret
push
loopne
in
rcrl
int
jb
push
inc
std
and
fnstcw
xlat
pop
sub
push
jb
out
push
xchg
inc
ss
pusha
mov
pop
aaa
dec
loope
and
xor
push
mov
out
inc
and
mov
sub
mov
pusha
fwait
mov
and
inc
xchg
out
out
adc
add
jmp
mov
stos
cmc
inc
in
mov
push
adc
test
scas
test
je
inc
cmp
pushf
lea
data16
lret
inc
sbb
ljmp
test
pop
add
ret
inc
out
push
or
push
ljmp
jo
xchg
int3
ss
out
add
popa
xor
xchg
xor
sub
and
inc
stos
repz
scas
adc
ror
inc
jl
shr
popa
mov
lods
lret
add
xor
imul
mov
dec
ret
pop
popa
dec
dec
nop
pop
cmp
jno
sbb
sub
lahf
sbb
xrelease
pop
scas
fs
lahf
sbbb
inc
addr16
or
xchg
mov
outsl
pop
sub
cmpsb
jnp
repz
insl
outsb
add
testl
fidivrl
sbb
cmc
int
cmpsl
jae
sbb
lods
jg
stc
add
pop
and
inc
dec
push
dec
jmp
adc
cltd
or
int
adc
mov
movsl
and
ret
ds
pop
jl
outsb
lea
jge
sahf
and
fcompl
push
rol
adc
push
ja
xchg
jnp
mov
fdiv
cmp
sub
sub
sbb
scas
sbb
sbb
in
inc
fxch
call
stos
imul
fcomps
leave
jne
adc
cmp
sub
imul
xchg
mov
add
adcb
dec
scas
pop
jne
loopne
jge
enter
pushf
jle
push
inc
aaa
xor
and
lods
adcb
fsub
adc
jnp
cmpsb
and
and
or
add
inc
inc
iret
mov
insl
bound
inc
in
shr
jle
cmpl
js
cltd
pushf
sbb
dec
jl
notl
pop
sub
adcb
cltd
jp
out
das
push
in
mov
adcl
int
and
nop
cmpsl
inc
mov
fld
push
cmpsl
and
jns
dec
mov
insb
push
in
mov
mov
sahf
in
jmp
mov
jmp
ss
cmp
pop
lea
ficoms
mov
pop
xor
call
mov
push
inc
mov
movb
cmpsb
sahf
mov
cltd
nop
push
cmp
push
loop
xor
imul
dec
fidivrs
sbb
ficoml
int
pushf
inc
xor
lret
adc
test
and
pop
cmp
jg
cld
out
mov
inc
repnz
adc
sub
inc
inc
mov
mov
dec
into
punpcklbw
sarb
mov
out
dec
adc
or
push
ret
or
xor
xchg
call
lods
push
ljmp
movsl
pop
into
fwait
dec
out
in
lods
push
push
mov
push
mov
cmp
mov
pushf
pushl
sbb
ljmp
cmp
into
fstpt
sahf
ljmp
sub
push
jbe
test
jle
shll
cmp
lcall
dec
jae
mov
jle
inc
inc
repnz
inc
bound
push
sarl
mov
adc
sbb
hlt
test
push
int
mov
imul
mov
out
cwtl
sbb
mov
jle
enter
cld
or
mov
jecxz
mov
divb
add
mov
dec
or
inc
cmc
mov
dec
cmc
es
pusha
adc
xor
fstp
testb
pop
pushf
bswap
bound
out
jecxz
jno
pop
jo
rolb
dec
popf
lahf
fsubp
push
cs
pop
daa
jge
loop
sub
mov
dec
lock
sar
jmp
add
paddq
pushf
add
lret
xchg
jp
and
lds
dec
jb
movsb
mov
fimuls
pop
sbb
adc
mov
outsb
push
mov
insl
push
add
jg
mov
std
loop
sub
repnz
cmp
dec
cld
das
shr
lods
cmpsl
pop
daa
add
pop
xor
mov
inc
xor
movl
mov
cmp
pop
lret
lods
pop
test
or
sub
mov
icebp
nop
stos
push
pushf
add
iret
js
sub
cmp
jb
adc
pop
int3
cmc
cld
dec
out
dec
sbb
pop
sbb
push
push
sarb
mov
aaa
fmull
dec
or
popa
test
dec
adc
lret
dec
out
in
mov
dec
xor
xor
lods
out
sbbb
aam
inc
in
or
out
jne
add
dec
pop
push
ret
mov
daa
xchg
inc
jbe
xor
sub
lret
push
cmp
shlb
add
movsb
dec
lods
cli
push
push
negl
movsl
mov
push
sti
xchg
ja
icebp
loopne
xchg
out
rorl
int3
inc
out
xor
bound
add
jle
call
lret
mov
xchg
xchg
cmp
popa
xlat
sbb
in
pop
fdivp
mov
gs
test
mov
xlat
push
and
push
leave
lods
shll
or
call
pop
gs
hlt
insl
add
xchg
out
cmpl
xchg
lods
sub
outsl
and
sbb
inc
add
scas
enter
mov
insb
mov
int
cmpsl
pop
cwtl
push
sbb
pop
pop
inc
mov
mov
fsubrl
repnz
mov
adc
push
push
insb
jae
aaa
or
das
adc
pop
sub
ret
jb
pop
fs
scas
adc
cmp
das
adc
cwtl
cld
xor
sub
xchg
test
mov
aad
shlb
sbb
repnz
fnstenv
pop
or
add
cltd
cltd
inc
cmp
dec
neg
or
push
add
push
inc
inc
xchg
xor
adc
add
sbb
lret
orl
lock
ret
xchg
test
in
adcb
and
in
in
pop
push
inc
mov
shrl
cmp
fisubs
fidivrs
ds
and
daa
lret
mov
lods
or
mov
cld
rclb
adc
mov
test
and
mov
outsb
inc
sub
into
lods
out
inc
mov
shrl
push
xchg
sarl
sbb
fsubs
xchg
jnp
out
xorl
lret
std
adc
dec
packsswb
jmp
push
ret
imul
ss
mov
lahf
jge
scas
addl
bound
decb
movsb
frstpm(287
jbe
and
mov
ss
or
cmp
push
jno
jge
je
mov
pop
adc
pop
test
jno
imul
xlat
pop
and
insb
sbb
outsl
push
mov
xor
mov
jno
rcr
mov
icebp
add
mov
sbb
in
call
cmp
hlt
and
in
xor
dec
push
or
xor
add
cli
cmpb
shrl
sub
sti
xchg
or
mov
addr16
aaa
mov
dec
out
sahf
dec
insl
jmp
pop
xchg
mov
stos
mov
out
cwtl
xlat
loope
xchg
inc
movb
aad
inc
xchg
js
cltd
inc
adcl
push
hlt
mov
clc
lret
dec
cltd
repz
mov
ret
fldl
mov
sub
or
sub
pop
jne
sbb
out
into
mov
mov
inc
fs
je
loop
sub
push
jnp
ret
push
cmpsb
pop
jne
shrl
jmp
inc
int
fsubl
idivl
movsl
cld
jno
pop
jmp
sub
lds
mov
fimuls
subl
or
inc
bound
sbb
lret
and
jbe
dec
orb
jo
into
test
xor
mov
mov
sub
and
mov
inc
imul
jecxz
cwtl
das
outsl
subl
add
xchg
leave
int
jle
jne
mov
and
sub
rcr
jb
sbb
int
mov
popa
jns
jae
bound
cmpsb
ret
xchg
adc
mov
jle
int
nop
and
and
mov
jnp
pushf
adc
ret
push
inc
xor
loope
das
in
push
cmp
push
mov
push
ljmp
pop
xchg
int
inc
mov
in
scas
mov
mov
xchg
or
dec
xchg
dec
rolb
in
les
stos
imul
or
aam
das
or
or
stos
rclb
int
xchg
push
aaa
mov
and
leave
pop
lea
orb
mov
xor
inc
dec
pop
mov
sahf
iret
mov
loopne
fnsave
ret
scas
mov
fwait
movsb
outsb
punpcklbw
inc
mov
rcr
and
popa
push
push
loop
xor
or
or
sahf
das
aad
clc
mov
stc
in
sti
les
scas
add
fildll
mov
mov
loop
int
jnp
jno
ret
std
lock
xor
and
movsl
sub
icebp
jns
rcll
das
xchg
mov
pop
fcom
out
or
sub
addr16
sbb
pop
mov
xor
lcall
loope
in
jle
das
testl
mov
pop
out
gs
push
out
js
mov
adc
xor
out
lahf
test
cli
cs
mov
sbb
lock
ljmp
jno
lock
sbb
jb
cwtl
ret
jmp
fsubrp
push
and
sbb
and
cld
push
loope
pop
jb
cmpsl
insb
fwait
and
xor
sub
inc
ret
mov
xchg
fsubrl
mov
xor
aaa
sbb
fsubl
ss
sub
mov
jp
lds
push
jne
mov
subl
int
repz
xchg
rorb
cmpsl
cmp
lock
scas
or
cmp
xchg
sbb
cmp
jb
cmpsl
mov
loope
icebp
shufps
fidivrl
lock
imul
cmp
mov
mov
sbb
dec
dec
aad
or
push
sbb
and
test
dec
add
jno
cltd
inc
jbe
pop
in
pop
mov
push
test
jno
cltd
mov
sub
mov
push
mov
fwait
mov
jecxz
movsb
mov
adc
xchg
rcrb
mov
fidivs
or
cmpsl
addb
loop
popf
inc
pop
sub
jmp
in
mov
xchg
call
jno
ljmp
movsb
daa
mov
aas
in
xor
test
aad
stc
sbb
std
es
dec
pop
sbb
adc
inc
std
jecxz
ja
sbb
rcl
dec
add
es
leave
pop
es
pop
and
out
daa
insl
add
lret
mov
xor
loope
cmp
ret
lret
sub
sbb
sbb
movsb
rcll
daa
hlt
push
jbe
clc
gs
fldcw
xchg
dec
rclb
mov
fildll
cmpsl
aam
test
jmp
jmp
jae
xor
jg
mov
cmpsb
or
lcall
test
cmp
pop
les
pop
in
cmpsl
dec
out
pop
push
clc
sbb
pushf
jne
mov
jmp
sbb
sub
dec
fninit
sub
mov
sbb
jne
cmpsb
pop
ss
dec
fstps
jmp
cmp
arpl
xor
cmpsb
addr16
push
ficoml
inc
scas
cli
dec
mov
push
movsb
xchg
out
inc
testl
mov
loope
mov
add
push
repz
add
xor
push
fcmovb
sbb
sbb
dec
xchg
lahf
jo
pushw
sbb
lods
insl
loop
pusha
insl
lret
sbb
and
and
sub
fst
jecxz
shlb
mov
dec
sub
sbb
mov
inc
imul
out
pop
xor
test
aaa
mov
int3
mov
add
cmp
les
lods
scas
cmp
pop
leave
jae
xchg
bound
or
ret
mov
pop
outsl
push
mov
stc
pop
cmp
movsl
cmc
test
test
aam
addl
int3
push
scas
pop
jecxz
fnstenvs
stc
inc
mov
cmpsb
mov
xchg
and
sub
sbb
out
and
lock
jge
arpl
or
imul
mov
in
jns
xor
mov
iret
mov
je
cmp
out
scas
stos
adc
xor
jp
gs
icebp
stos
insb
je
mov
add
sti
imul
mov
lock
mov
ja
cmp
cmc
mov
std
sbb
sbb
add
xchg
push
loope
mov
jmp
divl
cmp
daa
adc
lods
add
jno
jo
popl
aad
xor
push
jne
xchg
in
mov
or
sahf
scas
xchg
cmp
mov
lods
xor
out
std
mov
mov
inc
jmp
std
enter
cmp
aaa
out
jle
inc
dec
jo
push
jl
pop
or
push
push
jns
sub
inc
insl
push
cs
and
out
lods
and
xorl
dec
test
fldl
inc
dec
cmpsl
sub
aas
or
shrb
scas
ret
stos
mov
call
addr16
jg
negl
int
push
loope
mov
rclb
add
dec
iret
sub
pop
repz
dec
mov
mov
test
enter
and
mov
aam
mov
rcrb
hlt
cld
loope
fwait
call
xor
cmp
xor
mov
test
int3
rorl
or
je
fwait
xchg
push
push
push
and
adc
sahf
sbbl
out
cli
outsl
ds
push
hlt
pop
popf
scas
inc
sub
cmc
je
jnp
cmpsb
dec
jge
inc
mov
and
jmp
push
inc
fiadds
cmc
rorl
insb
rclb
das
das
xchg
clc
bound
mov
pop
xchg
sti
jge
loope
push
lret
add
imul
test
pop
nop
dec
gs
mov
push
jg
fldl2t
xchg
adc
sahf
adc
push
and
scas
pusha
out
dec
ds
adc
cmpb
adc
pop
mov
add
repnz
jmp
gs
sahf
mov
sub
cmp
jge
jecxz
mov
divb
popa
sbb
stos
loopne
dec
or
and
cmpsb
out
xchg
add
add
ss
or
sub
add
fistpl
scas
mov
insb
nop
data16
pop
fwait
xchg
xchg
inc
stos
sub
push
inc
and
mov
xchg
dec
or
ret
dec
icebp
shlb
jp
aaa
rorb
jmp
jne
outsb
js
add
jo
jge
dec
popa
enter
repz
jns
or
add
int
stc
std
clc
xor
cmpsb
inc
mulb
out
iret
mov
popa
adcl
imul
or
inc
mov
lahf
stos
out
sbb
mov
inc
push
push
inc
mov
sub
cmpsl
push
mov
mov
and
sub
dec
inc
xchg
adc
mov
jmp
ljmp
insl
xor
add
pop
sbb
insb
pop
fstps
fisttpl
fadd
mov
xchg
push
aam
mov
adc
mov
push
cltd
or
div
pop
pop
cs
imul
dec
xor
sbb
lret
ret
or
mov
xor
jbe
mov
cmp
ret
negl
insb
scas
adc
inc
add
xor
pop
push
inc
ret
inc
lret
and
sub
div
lods
pop
xor
icebp
adc
pop
dec
mov
xchg
dec
jp
les
mov
xchg
cmp
push
mov
outsb
js
inc
and
push
sbb
xchg
mov
cmp
push
pushl
push
jne
cmp
adc
rcrb
arpl
mov
and
cmp
inc
jno
inc
scas
xchg
mov
sub
lds
in
jmp
mov
jmp
es
addr16
cwtl
dec
pop
inc
ljmp
mov
cmp
arpl
ret
and
into
pop
cli
arpl
mov
sbb
jp
mov
push
pushf
mov
mov
stc
push
scas
in
sbb
int3
sbb
or
out
sub
ljmp
lods
mov
xchg
adc
jl
sub
repz
or
mov
dec
imul
ss
inc
pop
push
and
xchg
test
lret
mov
jns
pushf
add
inc
aas
enter
arpl
push
or
out
mov
xor
pop
scas
adc
clc
adc
mov
idivl
adc
lret
insl
cmp
test
je
cmpxchg
or
jecxz
dec
jb
lret
les
dec
test
sbb
cli
push
test
cwtl
in
pop
sbb
adc
test
jmp
jae
out
cmp
adc
js,pn
cli
iret
xor
lahf
xchg
and
mov
cmp
xchg
cli
jecxz
inc
mov
dec
or
or
ss
inc
fidivrs
test
fadds
leave
jne
jmp
sub
xor
hlt
pop
es
push
add
dec
xchg
out
pop
test
cmp
scas
aam
pop
les
inc
sub
mov
and
inc
hlt
in
pop
pushf
lock
and
dec
mov
pop
push
popf
addr16
pop
filds
call
gs
scas
pop
xchg
dec
jbe
outsb
mov
fbld
pop
ficompl
push
clc
mov
stos
pop
in
test
leave
sub
xchg
sbb
xchg
mov
jmp
add
scas
sbb
roll
in
sarb
push
mov
xor
insl
jmp
cbtw
in
adc
and
int
xchg
sub
cmp
pop
insb
iret
jmp
mull
adc
push
xchg
inc
pop
testb
sub
in
cmp
iret
push
push
cmc
mov
in
loope
imul
push
push
inc
add
ja
pusha
dec
loopne
xchg
popa
aad
xor
xchg
and
lret
imul
ss
inc
cltd
mov
inc
lret
cmc
sbb
movb
sub
pop
lds
mov
aaa
testb
jbe
mov
sub
shll
rcrl
xor
fildll
cmc
ja
mov
mov
insb
pop
fstpt
out
orl
xchg
imul
jnp
push
cmp
xchg
mov
push
repz
cmp
mov
lds
sbb
mov
jo
cs
add
jmp
inc
dec
inc
pop
add
aam
inc
leave
dec
out
cmp
mov
insb
adc
push
ret
and
test
xchg
leave
adc
adc
movsl
or
dec
clc
pop
and
jne
int3
lods
or
sbb
or
inc
lock
enter
test
mov
mov
cli
jno
mov
adc
jbe
mov
dec
sbb
test
pop
cmp
cmpsb
push
dec
xchg
fiaddl
icebp
inc
aad
into
pop
xchg
and
cli
loop
dec
pop
dec
and
inc
andb
add
out
js
push
xchg
lods
shlb
fstl
dec
jbe
imul
sub
or
and
icebp
lods
les
mov
sbb
xlat
test
into
mov
icebp
mov
jns
lahf
test
mov
in
clc
mov
adc
sub
and
xor
out
inc
push
repnz
aaa
sar
inc
aas
xor
adc
leave
add
mov
rcrl
and
add
daa
sbb
sbb
xor
mov
push
popl
and
or
scas
out
mov
and
xchg
rol
adc
xor
mov
fnsave
mov
push
insl
popf
insl
cmp
js
in
aas
int
push
sub
and
cmp
and
mov
xor
lcall
in
add
inc
pop
movsb
inc
xchg
stos
jns
fwait
in
orl
jle
jmp
adc
mov
aaa
cmp
outsl
cmp
pop
jae
cmc
add
les
je
bound
xchg
mov
fidivrl
cld
mov
bound
or
push
call
icebp
decl
popa
cmp
pop
push
or
inc
imul
lret
sbbb
push
mov
test
xor
jb
fdivr
push
lock
fxch
aaa
scas
loopne
lods
xorb
hlt
ret
push
cltd
mov
int
sbb
mov
and
cmpsb
out
and
xchg
jmp
sahf
pop
fs
out
and
sahf
out
shl
and
mov
xchg
fwait
es
add
cwtl
pop
mov
std
sub
cmc
xorb
clc
adc
sub
into
mov
mov
lcall
mov
jne
push
imul
scas
jno
ds
sub
sub
or
repnz
divl
cmc
push
pusha
mov
andb
xchg
rorb
jbe
hlt
int
lcall
stos
jecxz
and
mov
jge
loope
fimuls
in
in
sub
mov
sub
and
ficompl
dec
pop
inc
sub
or
xor
xlat
nop
test
adc
jbe
jne
xor
mov
lret
out
xor
sub
xor
sbb
mov
mov
ljmp
mov
arpl
xchg
movsb
jmp
lret
push
repz
add
sbb
push
rcrl
cmc
jge
add
cmp
xor
leave
and
mov
pop
dec
pop
jge
cmovl
adc
fistpll
je
outsl
shlb
int
std
in
data16
sbb
test
iret
stc
insl
pop
mov
pop
add
sub
xchg
mov
sub
cmp
int
inc
push
repz
xlat
sub
and
jle
jg
frstor
lods
sti
and
out
xor
movsl
jns
insl
in
shrb
xor
sub
inc
lods
or
lret
pop
sub
mov
in
pop
pop
lods
scas
xchg
faddl
jnp
jnp
push
mov
mov
leave
test
cmp
ret
enter
cmp
sahf
or
fldt
adcb
or
fidivrl
sbb
test
ja
dec
push
dec
mov
xchg
inc
xor
test
pop
cltd
enter
add
ret
pop
das
arpl
sbb
shll
loop
int
lods
pop
pushf
aas
adc
xchg
mov
xor
mov
push
pop
mov
adc
iret
push
cmp
imul
jmp
add
into
jecxz
dec
or
push
loopne
faddl
mov
imul
in
push
add
dec
mov
or
jne
xorl
jle
and
popa
popl
cwtl
shr
jbe
dec
out
jb
inc
adc
adc
push
xor
out
lcall
es
fs
pop
icebp
bound
fsubrs
push
out
repz
fwait
sub
test
scas
jle
fcom
inc
fildl
decl
mov
sbb
mov
xorl
or
rsqrtps
xchg
in
ficoml
adc
dec
jne
mov
xchg
jge
pop
mov
inc
leave
jo
adc
lcall
fwait
sbb
outsb
stc
mov
aaa
mov
pop
loope
xchg
and
xor
mov
into
jae
fisttpl
aad
sub
xor
xchg
imul
mov
xor
sbb
mov
xlat
cs
movsb
xorb
sbb
dec
jo
popa
std
or
cmp
cmpsl
or
into
sbb
std
bound
or
leave
jns
in
mov
fcmovnbe
cld
mov
or
lret
daa
inc
and
icebp
in
xchg
punpckhbw
lods
mov
sub
xchg
mov
jecxz
or
jg
mov
cmpsb
mov
jecxz
hlt
mov
push
ret
mov
sub
jno
mov
xor
and
es
mov
or
mov
pop
jg
adc
mov
mov
rorb
pop
jg
push
inc
icebp
inc
lock
and
jg
dec
cmp
and
xchg
repnz
mov
xor
xor
into
insl
xchg
dec
mov
lahf
sbb
pop
out
das
sub
jl
ljmp
cwtl
and
ljmp
aaa
push
push
in
pushf
lods
dec
fdiv
xchg
xchg
and
push
shlb
mov
repz
cmp
xchg
stc
push
sub
xchg
loop
xchg
ljmp
not
pop
mov
adc
lock
xchg
mov
inc
sbb
ret
dec
push
scas
cmp
mov
cmpsb
and
lods
gs
and
mov
test
lret
adc
testb
mov
and
les
and
dec
mov
nop
in
cmpsl
adc
mov
gs
pushf
scas
clc
in
ja
data16
imul
movsb
mov
dec
xor
subb
int3
aaa
cmpsb
cli
dec
popa
fldcw
inc
and
sbb
and
popf
sti
iret
mov
stos
scas
out
divb
je
dec
pop
sahf
push
jg
lret
mov
xor
xor
pop
pop
stc
mov
loop
sbb
shrl
mov
pop
arpl
sub
ret
sub
xor
fiaddl
popl
cwtl
xchg
fwait
jmp
sbb
orl
mov
add
ja
fwait
scas
push
shll
mov
inc
sub
sub
push
jge
in
aad
push
add
popa
dec
stos
lds
xchg
xchg
cmp
xor
lods
xchg
jae
sub
cmp
arpl
mov
push
int
inc
jno
cmp
lret
mov
push
jo
out
stos
cltd
cmp
addr16
xor
fcmovb
xchg
cli
mov
fdivrl
lods
imul
call
fldl
dec
cmpsb
jp
cld
cs
dec
jo
aad
add
add
jmp
inc
pop
add
sbb
inc
pop
jg
or
cwtl
in
fisttpl
jo
mov
popa
sbb
dec
lret
imul
out
sbb
jge
js
xchg
es
pop
jp
in
insl
push
dec
mov
push
in
cmp
sbb
out
and
inc
mov
ss
movsl
loopne
mov
cmpb
push
hlt
loopne
push
mov
xchg
or
lret
mov
je
xchg
test
push
add
xchg
jle
rol
gs
jge
dec
pusha
lds
ret
push
ret
mulb
push
inc
in
aaa
sub
test
mov
pop
add
add
popa
mov
popf
es
shll
aas
loopne
push
lcall
xchg
inc
inc
sbb
out
out
sbb
xchg
push
mov
jge
sti
pop
push
xlat
sub
arpl
imul
sub
idivb
arpl
fbld
add
jnp
rolb
push
xchg
xchg
repz
andl
sbb
xor
testb
int3
mov
or
into
sahf
mov
roll
pop
adc
out
cli
repnz
dec
inc
dec
mov
clc
lret
in
jl
inc
test
and
xchg
and
imul
mov
inc
jmp
jmp
repz
test
or
fidivl
add
dec
jge
decl
test
cld
dec
inc
sahf
sahf
sti
mov
push
push
cmp
pushf
cwtl
and
out
pop
ss
in
int
xchg
jne
lods
jmp
gs
inc
mov
clc
cmp
inc
lea
sbb
xlat
push
or
push
cs
scas
or
in
rorl
cs
lcall
out
out
jbe
jbe
js
int3
fbstp
jns
sub
pusha
loopne
out
pop
jecxz
nop
sub
pop
out
jae
loopne
inc
push
mov
scas
xchg
jno
mov
sbbl
sbb
mov
shrb
inc
pusha
or
les
mov
int
cli
jle
in
fcoml
and
adc
popf
les
inc
ds
dec
lea
cmp
stc
dec
pop
lds
inc
cmpsl
jnp
insl
pop
bnd
mov
es
gs
mov
push
fisttpll
fwait
repz
jp
outsb
pop
nop
loop
outsl
cmpsl
stos
test
enter
mov
pop
in
jbe
mov
les
jb
call
and
out
pop
push
mov
inc
addr16
adc
icebp
fldl
cltd
adc
neg
dec
out
dec
adc
cmp
rorl
fs
repz
pop
jle
test
dec
lea
repnz
pop
add
shl
negb
sbb
jmp
dec
xor
mov
sbb
xor
repz
int3
mov
rolb
addr16
pop
or
lock
cs
mov
jecxz
clc
dec
jle
inc
cli
cwtl
movsl
dec
int3
sahf
push
pushf
testb
pop
mov
cmp
adc
test
negb
push
mov
inc
add
jbe
push
xor
mov
nop
cli
pop
mov
or
push
sbb
aaa
mov
dec
in
inc
sub
mov
pushw
push
mov
cli
mov
adc
dec
or
scas
ret
lock
in
pop
test
std
out
call
stc
cmp
xor
sahf
stc
xor
mov
nop
push
pop
loopne
ret
push
test
push
or
mov
and
mov
jb
xlat
dec
cmp
ljmp
dec
adc
push
lahf
loope
addr16
lods
push
inc
faddl
add
add
dec
push
cmpsb
dec
fcmovnbe
sub
and
aaa
int3
push
fiaddl
cld
popf
push
pop
xor
repnz
dec
lods
xchg
ds
xor
je
adc
sub
imul
clc
cmpsb
data16
adc
jb
aad
ret
push
sbb
out
xchg
add
lahf
inc
jecxz
ja
or
fwait
xchg
stc
repnz
jmp
idiv
lahf
and
mov
cmpsl
mov
inc
push
push
aad
jl
mov
fucomp
or
jb
dec
pop
jns
movsl
add
xor
or
rcll
dec
pop
cmp
cmp
and
xchg
and
outsl
sbb
gs
pop
ret
jbe
jnp
out
stos
jae
push
dec
inc
add
pop
xchg
mov
test
pushf
addr16
push
jge
jmp
testl
mov
call
push
push
shr
mov
cltd
scas
fcomps
jns
mov
xchg
out
sbb
insb
push
pop
sbb
rcrb
arpl
pusha
dec
imul
push
add
xor
ljmp
repnz
push
push
mov
das
adc
stos
nop
and
cmpsl
dec
mov
mov
xchg
enter
xor
shlb
cmp
xchg
lcall
mov
js
jge
arpl
faddl
icebp
push
cmc
aad
les
and
pop
xchg
imul
loope
jne
mov
sub
xor
std
idivb
pusha
and
fstpl
xor
inc
into
xlat
sahf
sbb
pushf
rcrb
pop
jp
jae
arpl
repz
pop
cld
jbe
imul
mov
xor
push
outsb
aas
and
and
pop
jne
outsl
lock
lcall
pop
dec
pop
cli
int
sub
bound
inc
stos
adc
sti
enter
xchg
mov
pop
arpl
xlat
aas
push
stos
mov
mov
inc
inc
add
repz
popf
xor
movsl
adc
push
cmp
inc
pop
inc
sti
and
mov
push
lcall
and
pusha
cmp
mov
sub
mov
aas
inc
mov
fcoml
inc
or
lcall
mov
scas
inc
xchg
jle
int3
stos
jbe
dec
hlt
or
lods
sub
lret
or
cmpsl
push
pop
cmpsl
aam
cmp
hlt
mov
dec
xor
mov
idivl
adc
inc
test
xor
cmpsb
jecxz
test
bound
adc
mov
jp
fs
xor
mov
and
mov
int
lock
pushf
lcall
or
push
es
push
xchg
and
sub
jb
sub
sbb
call
pop
lcall
ss
push
rorl
ljmp
clc
push
repnz
push
adc
or
or
mov
fpatan
cltd
or
in
sub
imul
les
xchg
pop
fists
xor
loop
test
push
dec
inc
jle
inc
cmp
addr16
int
stos
movsb
sbb
xchg
dec
icebp
jle
jmp
and
xor
js
and
bnd
adc
inc
pop
cmp
adc
or
pusha
aad
dec
in
jg
mov
cmp
sub
loopne
xchg
call
packsswb
popf
jge
rorb
sbb
je
dec
divl
hlt
shl
push
and
xchg
in
loope
xchg
aam
jno
test
mov
les
test
outsl
jb
cmp
je
ret
xchg
push
dec
pop
repnz
int3
mov
ret
in
aaa
mov
sbb
or
dec
sbb
cmp
ficompl
mov
clc
ss
test
ja
inc
test
cmp
dec
inc
stc
push
cltd
cmpsl
xchg
fadds
push
cmp
fs
ds
dec
or
cwtl
xchg
mov
push
jbe
jb
adc
push
mov
fcomps
fxtract
push
mov
mov
leave
aad
pushf
scas
xchg
mov
xchg
sub
jge
mov
xor
mov
test
mov
mov
test
sbb
mov
movsl
mov
faddl
dec
mov
sub
lds
inc
ds
ja
xor
jb
sahf
or
rolb
movsl
cmovl
fildll
xchg
nop
xor
mov
inc
out
popa
xchg
cmpsb
mov
mov
stos
push
pand
shlb
jno
movsl
fs
lea
imul
jns
or
notb
pop
stc
dec
stos
leave
add
shlb
test
das
mov
dec
rorl
cs
int
das
mov
pop
fldz
jecxz
mov
ret
mov
clc
inc
cmp
test
xor
mov
loope
xchg
pop
add
stc
les
cmp
inc
outsb
cld
mov
or
inc
aam
sub
mov
in
lcall
inc
rcrl
push
gs
xchg
leave
pop
mov
rcr
sub
dec
mov
mov
daa
adc
mov
mov
dec
imul
mov
lcall
add
push
shll
push
aad
dec
lahf
mov
push
aam
scas
jne
iret
adc
jg
in
in
std
adcb
out
dec
pop
dec
add
lods
test
dec
pusha
mov
add
pop
ja
bswap
dec
ret
sahf
jl
sub
sub
mov
sbb
sub
insl
mulb
and
mov
cmp
and
iret
movsl
iret
xchg
daa
test
mov
and
and
out
and
push
shll
jbe
in
jmp
lods
xor
cld
gs
xlat
mov
ds
sub
daa
sbb
cmp
inc
movsb
lret
inc
dec
push
lret
add
inc
jg
xchg
sbb
mov
jecxz
lds
xor
pop
ret
xor
sbb
push
sub
aam
xchg
pop
dec
adc
mov
or
pusha
aad
dec
daa
sbb
pop
pop
mov
imulb
push
es
fs
pop
dec
inc
push
ds
aad
mov
and
and
push
stos
push
idiv
call
mov
jle
popa
push
dec
jge
xchg
imul
rorb
mov
pop
xchg
jecxz
sarl
mov
adc
out
mov
imul
jecxz
push
and
inc
dec
pop
mov
jns
fs
rcrl
adc
arpl
lods
das
test
xor
mov
mov
fcomps
repnz
mov
shlb
loopne
clc
repnz
int
mov
flds
mov
pop
push
cltd
movsb
cltd
ljmp
sbb
xlat
cmp
outsl
and
int3
rcll
sar
sub
rorl
fwait
stos
test
xor
adc
sarl
add
mov
xchg
jne
pushl
lock
scas
shlb
jmp
cmp
cmpsb
sbb
xchg
mov
pop
fcomps
int3
pop
sar
push
in
cs
sbb
and
add
int3
jns
fbstp
ret
cmpsb
lock
cli
lcall
jp
inc
shlb
xchg
sbb
dec
inc
fwait
cmpsl
lcall
das
pop
xchg
or
cmp
mov
push
push
lods
dec
in
sbb
xlat
fadd
fiaddl
or
lret
sbb
dec
mov
fsubrs
jo
pop
pop
sti
lret
mov
int
out
xor
xchg
aas
jno
stos
jl
mov
ret
dec
fwait
cmpsl
leave
sub
fisttpl
shrb
mov
rcrb
sti
and
push
xchg
arpl
sub
jl
jmp
sbb
mov
inc
mov
inc
mov
shll
jmp
push
pop
aas
addr16
fbstp
dec
dec
insl
jle
mov
push
xor
adc
push
push
enter
leave
je
mov
stc
cmp
stos
push
add
in
adc
std
lahf
pop
data16
lock
daa
inc
leave
pop
cld
out
scas
mul
or
mov
hlt
mov
aam
mov
xor
addr16
mov
mov
and
xchg
adc
dec
mov
jae
aam
cmc
sub
and
push
jbe
pop
jecxz
pop
hlt
and
lods
sbb
jo
cld
or
out
push
cmpsb
in
jle
call
lods
pop
popa
cmp
sahf
in
in
in
shll
ficoml
mov
mov
pop
add
push
jb
push
pop
fs
hlt
divb
cmp
fcom
mov
xor
jge
stos
mov
mov
inc
loop
mov
jb
loop
stc
jne
mov
dec
lods
outsb
enter
xor
lret
jno
mov
adc
leave
adc
and
mov
inc
repz
mov
aam
push
fcompl
push
xchg
test
jle
inc
faddp
adc
cmp
ret
and
lret
adc
in
add
dec
mov
and
dec
add
cli
lds
xor
aad
fninit
lret
sbb
xchg
push
jp
inc
or
adc
aad
push
aas
jne
rcrb
lods
daa
rcrb
lea
cmp
popa
shll
sti
mov
jno
mov
rorl
xor
mov
shrl
bound
rcll
jge
dec
imul
rorb
sbbl
popf
mov
push
mov
cli
cmp
js
push
mov
jge
imulb
dec
xor
pop
insb
mov
dec
mov
inc
mov
jmp
cmpb
test
adc
dec
sbb
push
sub
fldt
hlt
je
movsl
mov
xchg
xorl
mov
rorb
sub
mov
imul
lcall
in
add
xor
arpl
and
insb
pushf
jmp
mov
xor
xchg
stos
xchg
fidivl
adc
push
dec
cmpxchg
dec
jmp
xchg
cld
out
loopne
ficomps
in
fptan
pop
push
test
clc
add
mov
shrl
sbb
mov
filds
data16
fisubs
mov
loope
push
jp
int
and
into
insb
jae
je
push
or
dec
pop
sub
jno
call
popa
inc
std
inc
repnz
notb
nop
pop
mov
pusha
leave
addr16
dec
ljmp
js
test
orl
jmp
sub
add
add
push
push
imul
leave
fldt
scas
xchg
sbb
arpl
icebp
pop
ja
dec
or
je
sti
pop
or
pusha
outsl
push
inc
loop
data16
xor
dec
jl
out
int3
repz
adc
pusha
push
or
paddsb
pop
sbbb
sub
addr16
test
push
push
xchg
push
out
test
xorl
sbb
pop
dec
push
mov
call
aaa
add
push
scas
popl
imul
adc
xor
mov
inc
xor
mov
cmpsb
in
imul
push
xor
jp
adc
in
sbb
fcoms
aas
jg
cmp
add
flds
aad
or
xor
fstpt
sub
mov
cmp
stos
and
lret
or
das
cmp
pop
xchg
test
cltd
mov
addb
push
int
cli
jge
adc
repnz
fsubs
push
mov
pusha
xchg
jne
outsb
dec
roll
add
mov
sbb
negb
scas
cmc
mov
pop
fnstsw
arpl
mov
push
cmc
push
sbb
aas
mov
imul
jg
pusha
jmp
pop
cmp
sar
ror
sti
inc
int
jl
mov
js
out
addr16
out
adc
pop
out
mov
add
mov
push
aam
fs
cmp
sti
cli
pop
rcll
adc
ret
mov
adc
repnz
cmp
add
inc
and
je
or
fdivrs
bnd
fucomi
fs
cmp
movsl
sbb
mov
and
test
aas
dec
ret
xchg
pop
dec
out
pop
pop
xchg
lea
ja
imul
mov
pop
cmp
rclb
in
loopne
sbbl
sub
mov
leave
cmp
aaa
pop
cmp
faddp
mov
test
jmp
push
fcoms
push
fcoml
and
dec
push
jecxz
aam
mov
xor
sbb
push
pcmpeqw
mov
gs
push
insb
mov
je
addl
cmp
nop
mov
push
pop
pop
dec
popa
out
or
xchg
in
push
movsl
mov
int
jb
insb
push
fdivr
inc
mov
jae
test
or
mov
dec
push
sbb
xor
adc
xchg
cli
stos
dec
loope
or
jbe
cli
imull
jp
or
push
pusha
fstpt
sbb
lret
add
xchg
pop
pop
fsubs
imul
inc
ja
dec
cld
shll
adc
cmpsl
sub
sbb
mov
das
js
stos
pop
gs
insb
pop
sbb
sbb
cltd
mov
cltd
stos
aas
cltd
jnp
jmp
push
pop
movsl
xchg
mov
xchg
jg
mov
out
enter
cld
jl
jmp
test
cmp
pop
sub
pop
push
or
stos
fcoml
jle
out
call
mov
dec
punpckhbw
insb
out
ror
mov
inc
setnp
adc
push
jno
ljmp
mov
and
xchg
icebp
cmp
ja
js
mov
lret
arpl
movsl
test
xor
out
aas
jg
ja
mov
pmulhw
shlb
hlt
mov
inc
das
addr16
xchg
ds
pop
andl
mov
adcl
iret
xchg
jl
jmp
push
mov
popf
or
inc
jecxz
fsincos
mov
adc
mov
mov
pop
jmp
in
outsb
push
xchg
inc
fimuls
mov
je
gs
xor
mov
jbe
fnstsw
das
into
dec
and
and
jmp
mov
xor
sarb
ret
or
and
inc
je
dec
xchg
dec
or
jmp
xchg
sti
pusha
or
mov
rol
xchg
cwtl
into
out
cs
push
push
push
jg
bndldx
jnp
lds
jbe
mov
fcoml
js
call
xor
aad
mov
imul
ret
push
jbe
neg
push
sahf
movsl
inc
movsb
aas
jg
xchg
cmp
aaa
mov
fs
cmc
pusha
sbb
pop
pop
xor
push
xchg
dec
or
sub
mov
enter
mov
cmp
cwtl
mov
jb
sbb
xor
pop
jmp
fisubrl
incb
sarl
cmp
dec
mov
daa
cmp
out
loop
lea
pop
or
daa
mov
mov
mov
sub
test
in
sbbl
jp
popf
or
or
jl
or
mov
ja
mov
jo
fwait
and
or
ret
les
stos
lods
cmpsb
in
popa
sbb
out
and
adc
inc
pop
fdivr
rcrb
mov
push
push
in
pop
xchg
fstl
dec
xchg
xchg
pop
mov
das
sbb
xor
adc
dec
mov
ljmp
mov
jae
xor
pop
arpl
dec
mov
lret
pop
movsl
stos
add
aaa
cmp
push
lret
bound
cmp
daa
sbb
push
jne
lods
xchg
shrl
xlat
jnp
pop
cmc
pusha
xor
mov
sbb
sbb
mov
mov
out
inc
loopne
sub
repz
inc
and
mov
xlat
cmc
out
sbb
sub
call
xor
in
and
lahf
in
sbb
dec
xor
pop
mov
xchg
mov
and
int3
pop
inc
out
push
adc
push
sbb
cmc
aad
bound
push
lods
imulb
hlt
out
push
imull
dec
xor
adcb
cmp
sub
call
sbb
push
lret
ret
or
imul
sub
jnp
mov
push
orl
outsl
cmpsb
shll
mov
inc
add
push
fstl
lret
pop
dec
icebp
push
inc
or
jae
add
dec
sub
aas
cmp
jmp
inc
push
and
xlat
stc
fcoms
sbbb
into
or
notb
stos
dec
cmp
dec
sbb
mov
xchg
xor
out
jbe
or
negb
or
addr16
dec
jp
out
pop
das
and
jp
mov
ljmp
inc
daa
shlb
inc
lock
dec
mov
adc
push
loopne
mov
mov
dec
inc
jl
lods
sbb
cltd
cmpsb
dec
mov
rorb
and
mov
jo
jo
mov
and
sbb
mov
cltd
ljmp
add
mov
sub
ds
fdivl
xor
and
adc
cs
fbld
jb
repnz
ret
cmpsl
subl
movsl
adcb
cmp
and
lods
jmp
in
jne
loope
mov
pop
sbb
or
sub
fstpt
pop
loope
into
xor
sbb
cli
cmp
lea
or
fcmovnbe
lret
hlt
pop
mov
popf
or
adc
cltd
bound
xchg
pop
add
mov
xor
push
and
out
aas
jg
xchg
xchg
clc
pushf
and
push
or
push
and
cwtl
adc
stos
insb
inc
push
mov
push
cwtl
rcll
lods
pop
popl
hlt
mov
mov
loopne
stc
lods
xchg
mov
popf
mov
dec
ret
inc
and
cmp
jnp
cli
imul
sub
mov
adc
int
push
and
jge
push
fsub
aas
dec
push
dec
daa
in
cmp
adc
mov
das
cmp
ret
dec
sub
cwtl
aad
pop
iret
cmp
add
or
in
imul
dec
pushf
or
lea
jne
pushf
psubsb
int3
scas
mov
mov
inc
add
jmp
add
daa
xor
inc
mov
or
out
add
cmp
movsb
test
mov
mov
xchg
mov
mov
dec
xchg
adc
jae
mov
add
xor
fadds
and
loop
aas
out
sbb
mov
lahf
aam
out
addr16
lahf
pop
mov
das
hlt
mov
test
xor
lods
loop
bound
ficoms
cltd
cmpsb
inc
js
cld
cli
or
sub
pop
stos
xor
call
cmp
adc
push
ret
in
out
stc
pop
pop
cmp
lcall
std
pop
and
sarb
cld
icebp
divb
dec
into
pop
mov
ficoml
test
test
mov
xor
test
stc
push
subb
xor
jns
push
int
cwtl
mov
inc
pop
and
or
jns
push
xor
cmp
xchg
je
mov
mov
mov
and
bound
mov
aaa
cmp
ficoml
out
aas
inc
loope
xchg
mov
push
push
jmp
js
adc
lcall
mov
fildl
inc
mov
cld
mov
aam
xor
push
mov
inc
dec
adc
adc
shl
fnstcw
test
and
dec
inc
je
pusha
je
out
xlat
jns
sub
in
pop
clc
sti
sub
dec
pushf
loop
inc
dec
fstp
popa
repz
jb
popf
loope
cmpsl
jno,pn
xchg
xchg
sbb
push
sub
add
inc
dec
lods
xchg
xchg
mov
testl
fs
lods
pop
mov
mov
clc
jle
dec
mov
add
aad
sbb
pusha
xchg
inc
stos
out
jbe
dec
jl
mov
xor
lods
addr16
jnp
xchg
xchg
inc
mov
sub
out
or
mov
sub
xchg
loop
test
xchg
loop
pushf
cmp
stos
xor
mov
shrb
cmp
stos
mov
pushf
loope
mov
lahf
in
lahf
mov
push
insb
insb
mov
daa
adc
cmpsl
test
cmc
push
cs
dec
sub
pop
es
jecxz
mov
pop
daa
nop
js
xor
sub
movsl
xor
add
xchg
loop
in
cmpl
push
xchg
div
and
mov
loop
fwait
lret
sub
dec
jecxz
ret
xchg
inc
mov
sub
fwait
pop
cmp
jne
mov
stc
cmc
lods
mov
cs
push
jp
jne
push
filds
scas
push
pop
mov
mov
addl
ljmp
jecxz
push
push
rolb
push
movsl
xchg
insb
je
xchg
mov
mov
or
insl
jl
mov
div
jae
out
push
cmpsb
xchg
push
stos
add
or
pop
loope
fdivs
int3
fisttpll
fistps
mov
sbb
cltd
ret
pop
rclb
adc
jae
xor
sub
and
in
cmp
push
cld
arpl
loop
jmp
dec
shlb
or
sbb
cli
lret
movsb
adc
dec
test
pop
xor
mov
fiadds
or
stos
xor
xor
dec
push
add
xchg
stos
subl
or
inc
jno
clc
jge
push
sub
dec
cmp
cmc
push
or
mov
ror
mov
mov
stc
inc
and
jp
test
movsl
movsb
orl
and
scas
pusha
or
pop
xor
outsb
push
imul
sbb
jp
stos
insb
scas
add
sbb
jg
loop
rcr
iret
xor
or
cmpsl
lods
xor
lock
jg
inc
out
bound
pop
lea
call
jp
cli
aaa
and
inc
xor
pop
jns
stos
divb
in
mov
iret
and
fwait
push
sahf
jnp
arpl
loope
loop
shll
pop
sub
or
xchg
leave
das
sbb
adc
mov
sub
xchg
lods
gs
adc
sub
orl
adc
pop
dec
add
cwtl
push
dec
xor
aaa
outsl
insb
pushf
cwtl
cs
les
ja
sbb
push
test
cltd
fdivs
ss
cld
add
into
and
scas
or
cmc
popf
push
outsb
in
ljmp
std
or
adc
mov
ret
imul
push
or
aad
in
xchg
add
pop
mov
stos
xchg
mov
loope
mov
dec
pop
insb
mov
mov
xor
cmp
sub
push
imul
pop
je
push
test
jno
stos
sub
std
jecxz
sarb
xchg
mov
jb
int3
dec
stos
inc
pop
pop
add
xchg
rcl
icebp
cli
sub
mov
pop
insb
dec
shr
and
mov
push
sti
sbb
scas
gs
mov
int3
aam
sbb
mov
mov
pop
xchg
jbe
sbb
inc
inc
jle
iret
pop
xchg
dec
add
dec
sbb
inc
push
xor
mov
imul
pop
mov
pop
lahf
xchg
cmp
imul
push
push
imul
rol
fists
movsb
nop
ret
xchg
or
pushl
aas
jmp
push
adcl
inc
push
add
jno
sbb
and
sub
loope
cld
loopne
pop
mov
and
pop
add
aad
test
rolb
mov
add
aas
popf
xchg
daa
into
dec
test
cwtl
lea
iret
mov
pop
daa
call
or
vmread
loop
je
call
and
fmuls
push
data16
push
push
xchg
mov
cmc
xchg
push
into
fisttps
rolb
pop
dec
das
sahf
mov
sbb
fisttpl
cmpsl
loop
dec
jl
enter
mov
mov
mov
outsl
adc
fcmovnbe
mov
in
faddl
ffreep
push
jmp
push
mov
gs
dec
mov
cmp
ja,pn
and
hlt
repz
mov
ja
jg
add
ja
clc
sub
and
stos
xor
and
jno
pop
pop
adc
sub
into
mov
pushf
scas
icebp
mov
xchg
push
test
out
repz
mov
mov
mov
cmp
popa
xlat
mov
shrb
xor
or
sti
inc
push
js
jo
imul
cmp
enter
mov
into
in
xchg
test
pop
loopne
ja
or
xor
dec
mov
add
xchg
sarl
add
lcall
mov
movsl
sub
lahf
mov
les
mov
sub
jnp
adc
or
mov
in
adc
xchg
and
xchg
fstps
jecxz
das
into
xchg
push
lds
jno
xorb
scas
sub
fidivrs
and
test
mov
xor
jle
call
cmp
cmpsl
or
lret
cmpsl
in
sbb
cli
push
jg
mov
loope
sub
pop
and
or
aam
faddl
adc
loope
mov
push
insl
inc
xor
lock
shll
push
enter
nop
xor
lahf
daa
repnz
xchg
dec
mov
and
jecxz
xor
cmpsb
lret
sub
sub
or
cmp
mov
push
mov
cs
dec
dec
inc
jge
jns
sub
cmp
call
fists
mov
mov
mov
rclb
adc
addr16
cltd
jo
or
data16
xchg
fldenv
adcl
sbb
mov
sbb
cli
popf
push
mov
cld
decl
adc
gs
adc
hlt
jecxz
mov
xlat
xchg
inc
mov
int
loop
cmp
jge
loopne
ss
sar
xchg
shll
pop
add
ror
jb
icebp
jle
xlat
sbb
testb
cmp
cmp
jnp
push
jns,pn
fldl
mov
cmpsl
fcompl
ret
dec
cmpsb
jg
je
daa
dec
les
ja
or
das
cmp
inc
jb
jecxz
add
popf
sub
ds
push
fildll
dec
lret
in
stos
jo
cmp
aad
xor
rorl
test
popf
cwtl
mov
xor
jg
dec
ljmp
mov
inc
mov
xchg
movsb
popa
mov
in
push
adc
aas
mov
and
add
in
cld
xchg
test
add
in
jge
lods
adc
add
mov
test
fisttpl
sbb
jl
add
jecxz
loopne
sub
xchg
mov
mov
orb
dec
push
pop
jae
and
fiaddl
das
ds
push
out
dec
sbbl
push
mov
adc
test
push
cli
cld
out
cli
sbb
cmp
clc
lock
pop
stos
dec
push
push
movsl
fcomps
cmp
int3
mov
movsl
lahf
inc
inc
in
jge
jno
popa
push
sbb
addb
cwtl
and
popa
leave
insl
sub
sbb
mov
cmp
out
sub
popa
movsl
jecxz
rolb
loopne
or
sub
lds
rolb
lea
popl
adc
aas
mov
fbstp
out
rcrl
lds
gs
mov
add
push
sbb
sub
mov
jno
movsb
jne
out
add
add
sbb
pop
daa
roll
jge
xchg
popf
std
mov
inc
sbb
mov
fidivrl
dec
cs
cli
outsl
ret
mov
fcmovb
xor
push
add
sti
xchg
pop
dec
pop
into
in
sub
shlb
sbb
fadds
and
dec
icebp
cld
sahf
aam
pop
push
sbb
pop
leave
sbb
sub
sar
jmp
cmp
jno
mov
int
dec
call
mul
adc
xchg
adc
pop
sub
mov
push
inc
xorb
das
xchg
enter
xchg
adc
gs
dec
je
mov
cmp
jnp
pop
add
xlat
into
dec
xchg
loop
sub
enter
push
int
repz
mov
push
fsubs
fdivl
lahf
lds
or
and
jb
ljmp
dec
cmp
popa
push
mov
incb
iret
push
negb
pop
or
sti
in
fisubl
mov
outsl
out
fsub
jge
sbb
out
fsubrl
mov
jl
loop
cmc
jge
jno
pop
xor
fnstenv
lahf
out
mov
pop
std
xor
and
mov
sti
popa
ds
ror
inc
std
dec
xchg
clc
cmc
scas
mov
imul
xchg
inc
jmp
daa
movsl
push
sbb
lret
test
inc
mov
cmp
das
dec
test
popa
out
faddl
test
jo
jne
push
xor
mov
mov
xchg
xchg
mov
movsl
and
fwait
les
or
divl
out
adc
scas
pop
lock
lahf
fimuls
enter
or
fs
jle
lahf
or
dec
movsl
aam
cli
jecxz
aas
push
inc
or
fstpt
in
pushf
push
test
in
repnz
cmpsl
pop
mov
xlat
adc
pop
mov
sbb
ja
fbstp
das
jecxz
jecxz
mov
mov
cmp
push
test
lahf
rolb
xor
cmc
inc
pop
jmp
lcall
jnp
xor
cmpsb
and
cmpsb
fdiv
sub
in
cmpsl
and
outsb
andl
xor
lods
lods
mov
out
cmp
mov
mov
xchg
ja
ljmp
or
imul
test
inc
push
xor
mov
rcrb
cmpsb
bound
std
or
xchg
in
jmp
cmc
push
adc
ret
in
pop
mov
std
jnp
test
pop
push
fwait
jge
add
inc
adc
in
and
jp
mov
adc
shll
mov
add
or
xchg
cmp
or
insl
dec
popa
popf
cltd
cli
fldl
sbb
in
fisttpll
into
cmp
mov
sub
lcall
xor
push
push
inc
rclb
sbb
in
ja
orb
ljmp
repnz
call
lahf
xchg
icebp
inc
xchg
inc
sbb
divl
cmovo
rcrl
insb
dec
jns
jae
jbe
jg
xchg
jbe
test
and
sbb
ror
sub
pop
loopne
sahf
mov
adc
out
stos
push
sti
dec
inc
xor
xor
inc
pop
dec
fnstenv
jl
or
push
sbb
pop
jbe
cli
pop
xchg
ljmp
imul
mov
out
jl
loopne
mov
dec
or
adc
lcall
adc
shrl
push
sti
and
cld
or
mov
mov
adc
sbb
shrl
jb
movsl
mov
jbe
lods
dec
xor
push
xchg
call
jae
xchg
mov
or
cld
js
and
and
pop
adc
adc
fucomp
sarb
and
xor
or
mov
daa
xchg
out
push
aas
out
enter
lea
mov
mov
adc
out
push
mov
std
mov
imul
inc
mov
js
das
or
clc
xor
hlt
ss
inc
adc
push
ss
jb
push
je
repz
pop
in
fisubrl
ja
cmp
outsb
inc
jns
decl
jb
fdiv
add
cltd
shl
loopne
cwtl
cs
flds
lahf
pop
pop
sahf
add
popa
ljmp
dec
cld
cs
lds
inc
int3
pop
push
sbb
sbb
sub
mov
clc
out
pop
and
mov
imul
sbb
popf
and
pushfw
add
xchg
push
cmpsb
inc
leave
xlat
xor
lahf
faddp
xchg
jl
xchg
imul
rorl
call
call
call
pop
xchg
cmp
dec
pop
in
mov
and
div
imul
fldenv
and
mov
loop
pop
pop
mull
rcrl
icebp
ret
loope
sbb
push
push
push
scas
lock
xchg
imul
xchg
xor
mov
cmp
sub
cmp
aas
cmp
shr
and
pop
sbb
test
sub
inc
mov
push
mov
add
fwait
sbb
int3
xchg
call
fstl
xor
sbbl
enter
scas
jbe
fcomps
rcll
mov
mov
jno
adc
push
mov
ljmp
cli
jnp
inc
add
jae
dec
bound
daa
push
jb
movsb
cmp
stos
xor
xchg
xchg
dec
dec
push
bnd
jg
sub
or
test
iret
xchg
iret
stc
adc
and
movsb
test
cltd
or
arpl
out
aad
scas
fistpl
lea
and
stc
test
fnsave
fcomps
les
sub
icebp
leave
mov
cmpsb
pop
dec
mov
rcll
dec
xor
mov
or
lods
js
mov
sbb
fisttps
adc
stc
hlt
cmp
sbbl
leave
mov
xchg
movsb
dec
mov
flds
lea
pop
sbb
rorb
stos
pop
push
xor
mov
push
sbb
shlb
mov
lods
inc
hlt
insl
shll
call
dec
outsb
imul
or
pop
jge
test
ret
adc
adc
std
jp
call
mov
or
adc
rorl
mov
or
or
sub
call
mov
ret
jge
pop
mov
and
in
mov
out
xchg
mov
jl
mov
sbb
xchg
test
cwtl
testl
xchg
lahf
insl
imulb
push
pusha
dec
or
or
adcl
push
xchg
cld
call
push
bound
inc
cltd
lods
mov
mov
add
dec
dec
or
int3
push
jbe
out
and
movsl
stc
hlt
sbb
aas
jne
add
out
adc
rcrl
pop
fimull
rolb
inc
into
xor
decl
sub
fs
fisttpll
jp
dec
insb
in
fidivrs
push
out
scas
sub
pop
in
sbb
pop
stos
out
mov
sbb
enter
mov
arpl
xchg
dec
and
lret
data16
xchg
cmp
mov
dec
jnp
fidivrl
pusha
lock
jbe
insl
fldenv
sub
pop
xchg
xor
daa
loop
jecxz
sub
jecxz
push
ja
push
adc
push
sahf
add
mov
fchs
fstl
add
fs
js
xchg
or
std
fwait
sbb
fs
pop
sub
or
dec
jle
addb
orl
ss
dec
mov
imul
mov
icebp
popa
mov
sti
pop
dec
xchg
pop
mov
imul
dec
push
shr
sbb
test
push
inc
scas
adc
xchg
jmp
or
push
ficompl
xchg
push
pop
imul
jne
push
jge
loopne
icebp
in
dec
jo
jo
mov
lds
jmp
shl
jg
es
mov
repnz
loop
mov
fwait
lret
cwtl
and
cli
or
add
loope
xchg
lahf
inc
pop
cwtl
mov
pop
dec
mov
pop
add
pop
sbb
inc
fs
cmc
out
movb
jae
jge
cmpsl
push
add
mov
push
sbbl
faddl
les
int3
andb
dec
lds
cli
mov
les
and
lock
rorb
adc
sub
call
insb
dec
jge
push
shrb
popf
mov
mov
lret
or
sahf
std
mov
xchg
lods
out
and
xlat
in
sbb
pop
sub
pop
xchg
xor
fdivs
jle
mov
orb
aas
and
or
mov
pop
mov
data16
fsubr
lcall
cmp
ret
adc
out
test
jns
loop
mov
mov
or
dec
sbb
sbb
imul
xlat
add
data16
push
enter
movsl
pop
add
pop
sahf
jo
into
out
aas
fisubrs
test
or
popf
enter
ret
pop
movsl
decb
mov
mov
sbb
pop
and
dec
mov
mov
inc
mov
xchg
add
mov
iret
out
dec
push
mov
lds
pop
adc
hlt
or
js
xor
jnp
push
lret
xorl
fistpl
push
add
inc
daa
clc
repz
mov
in
and
or
lret
jp
cmp
std
enter
cmpsb
js
lock
cwtl
jne
cmp
push
dec
xchg
mov
decb
dec
add
mov
stos
inc
js
push
sub
rcr
or
mov
xlat
xchg
mov
loopne
pop
cmc
jbe
jo
in
or
gs
jp
push
xchg
aas
sbb
dec
aam
loop
insb
cmp
shll
add
jg
and
orb
aaa
pop
repnz
fnstcw
pop
add
mov
call
inc
dec
adc
aaa
cmp
loop
js
inc
and
fs
mov
add
jae
ret
and
insl
aaa
cmp
inc
xor
add
adcl
mov
xchg
mov
lahf
sbb
xor
fs
out
cmp
lret
in
js
out
filds
mov
adc
push
adc
sbb
jg
stc
loop
cmpsl
mov
dec
jbe,pt
aad
pop
sti
adc
icebp
sub
lock
adc
sahf
pop
into
outsl
xlat
fcomi
dec
mov
jmp
sti
test
or
push
push
jg
or
pop
cwtl
test
sub
stos
cs
dec
rorl
xchg
dec
push
add
popf
movsl
inc
sahf
sub
lret
in
test
xor
cmp
imul
insb
stc
ds
outsl
fdivrl
aaa
mov
inc
scas
ja
pusha
popf
push
xchg
jle
xchg
jb
lock
xor
mov
loope
mov
nop
cmpsl
or
inc
mov
insl
inc
sub
fs
xor
mov
adc
sbb
out
pusha
jl
pop
imul
xchg
bnd
enter
arpl
stc
xchg
fstp
mov
fchs
ret
mov
jmp
xor
orb
fucomp
hlt
pop
addb
push
jne
pop
mov
mov
jae
in
add
pusha
mov
gs
jle
inc
mov
pop
jne
in
daa
sbb
dec
rorl
jno
or
ret
lahf
mov
out
mulb
addl
cmp
add
imul
loope
mov
cld
sub
jg
mov
sbbb
test
pop
cmp
rcrl
test
jae
rclb
mov
pop
cmp
add
push
inc
cmc
std
data16
dec
mov
add
sbb
rorl
push
aas
sub
xor
imul
ja
xor
sbb
add
ljmp
adc
sub
ljmp
aaa
rclb
mov
pop
lods
inc
jmp
in
push
dec
mov
sti
pushf
js
jo
push
lret
leave
push
cmp
pop
aad
ss
insl
adc
adc
popw
fldenv
sbb
test
jmp
rolb
xchg
xchg
sub
push
mov
sbb
add
scas
cmp
in
sub
bnd
xchg
iret
cmc
dec
ds
nop
test
stc
mov
mov
jns
loopne
xchg
xchg
xchg
and
cmpsb
push
cmpsl
pop
pop
or
es
loop
jg
sbb
subb
sbb
insb
in
push
sub
imul
push
ss
sti
imul
loop
iret
outsl
sub
mov
adc
cmc
cmc
xor
push
mov
aaa
inc
xchg
test
nop
xor
inc
js
popa
dec
pop
sub
popa
cmp
aaa
lahf
out
nop
pop
push
fmull
aaa
xlat
lds
jbe
or
cmpsl
imull
aaa
push
add
in
shlb
arpl
movsl
or
xor
or
cmp
jecxz
out
dec
dec
inc
xor
adc
fidivrl
push
or
das
mov
jmp
sub
sbb
pop
insb
nop
fldenv
pop
icebp
scas
sbb
sbb
fisttpll
push
mov
mov
push
loopne
movsb
add
fsubrl
sub
pop
and
mov
dec
jbe
add
or
push
adc
sbb
jle
or
out
int
push
sbb
dec
mov
sub
inc
dec
and
aad
and
adc
outsb
leave
fcompl
stos
arpl
fwait
je
cmpl
inc
mov
out
loope
sti
sub
js
pop
repz
cli
daa
mov
lret
xchg
flds
imul
outsb
dec
clc
in
and
push
dec
xchg
inc
sti
or
adc
outsb
dec
scas
and
psllq
jge
aaa
scas
arpl
jae
lret
xor
pop
or
adc
push
mov
cmp
sub
inc
dec
sbb
scas
pop
and
and
fstpt
pop
and
push
mov
fsts
iret
test
imul
adc
call
mov
lock
mov
pop
mov
leave
mov
inc
push
mov
cmp
popl
sahf
inc
fwait
xchg
popa
xchg
xchg
mov
xor
cmp
rol
fcomip
mov
mov
sbb
fwait
out
mov
leave
je
shrb
jecxz
lock
cmp
mov
add
loop
popa
add
xor
xlat
jp
inc
fcoml
or
lods
add
pop
push
jns
loopne
lods
jno
sub
mov
adc
push
fisubrs
push
cmp
repnz
jo
clc
inc
mov
mov
movsl
mov
shll
sbb
pushf
divb
mov
or
jns
shl
cmp
es
jp
xchg
xchg
pop
scas
mov
out
and
or
in
or
cli
sub
push
push
push
roll
mov
popw
cmp
fs
push
out
mov
sbbb
lods
mov
sub
mov
mull
popf
in
sti
ss
jns
std
popf
js
dec
call
add
aad
mov
mov
pop
dec
push
scas
in
pop
lods
sbb
outsl
sub
mov
xlat
mov
lods
test
les
lret
leave
fxch
cld
test
pusha
mov
adc
adc
sub
jae
loopne
stos
les
cmp
pop
and
ja
jnp
icebp
mov
aad
loope
aam
sub
sbbl
sbb
mov
fcoms
or
mov
jmp
mov
or
pop
sbb
icebp
stos
int3
push
xchg
mov
cmpsb
popa
mov
loop
xchg
pxor
push
je
mov
imul
xor
sub
mov
cltd
mov
push
movsl
repnz
ja
test
cmp
dec
rorl
mov
xchg
adc
fistl
mov
jp
and
nop
shll
or
inc
movsl
cmove
pop
mov
cltd
add
push
scas
adc
inc
xor
add
scas
dec
and
stos
dec
out
stos
sub
add
ret
cmc
xor
scas
sbb
subl
in
xchg
add
rorb
les
mov
jmp
in
xchg
fs
or
scas
and
mov
ret
inc
mov
rcll
jge
adc
testl
jge
or
ret
pop
ret
ret
push
dec
jb
scas
pop
out
sbb
lods
jnp
ss
jno
stos
lock
lods
lds
leave
scas
dec
loopne
sbb
mov
jb
lcall
dec
xlat
jg
push
dec
cmpsl
mov
mov
dec
mov
fists
dec
pop
cmpsl
les
push
or
push
sarl
mov
ljmp
cwtl
push
sbb
aad
cld
mov
lods
inc
rcrl
sbb
mov
and
fcoml
cmpsl
cmp
mov
jmp
repnz
and
data16
push
nop
dec
adc
ffree
dec
inc
into
adc
jmp
das
into
mov
xchg
sbb
rolb
push
insb
fistl
push
je
jmp
fdivrl
mov
movsb
push
cmp
mov
pushf
aas
mov
stos
inc
push
out
scas
add
xor
fistpll
les
xchg
mov
or
push
rolb
loope
and
mov
xor
lcall
nop
adc
mov
aad
mov
adc
lds
and
rcll
cs
out
andb
push
adc
push
or
les
ret
lcall
and
or
pop
push
mov
subl
scas
mov
cmpsb
push
xor
cmp
cmp
ja
xchg
or
mov
ja
pop
loope
lea
xchg
jl
mov
repnz
nop
xchg
adc
mov
sbb
cmp
ja
adc
xor
lds
jnp
cld
ret
jge
push
mov
rolb
inc
int3
dec
fidivrs
xor
jns
cld
pushf
sbb
out
enter
or
js
push
into
mov
testb
repnz
hlt
arpl
insl
sbb
js
mov
idivb
and
scas
adc
jle
int3
adc
in
lret
fcomps
movb
jl
stos
push
aad
pop
fldt
fnstcw
or
nop
mov
push
jmp
mov
out
jno
pop
add
mov
int
mov
xlat
and
in
add
adc
cmp
xor
push
add
adc
push
xor
lret
cmp
jnp
push
enter
mov
ret
push
mov
jbe
outsb
out
fwait
scas
inc
mov
fisubrs
scas
add
mov
mov
mov
out
cltd
jecxz
sub
hlt
das
add
pop
das
js
pop
mov
or
ds
jecxz
rcrb
pushf
push
pop
add
int3
clc
addl
push
imul
sbb
inc
out
mov
pop
xchg
outsb
cmp
in
fdivrs
mov
hlt
xor
or
add
add
les
adcl
inc
fmuls
fists
clc
mov
clc
mov
je
jge
adc
pop
fists
mov
dec
adc
lds
pushf
fcom
sbb
mov
in
fildl
dec
xorb
repnz
sbb
sahf
sbb
inc
lcall
scas
push
dec
jle
cmpl
mov
mov
mov
lahf
outsb
shl
nop
add
outsb
movsl
int3
jo
jecxz
out
lahf
outsl
pushf
or
mov
or
shlb
mov
cmp
movsb
sbb
add
sub
and
lret
xchg
mov
aaa
cmpsb
lods
mov
fsts
loopne
add
add
jae
in
icebp
add
sub
xchg
shrb
lods
inc
scas
push
xchg
out
push
jle
sbb
lea
lret
ret
es
bswap
push
cld
mov
das
mov
lcall
insl
dec
popf
xchg
lret
mov
lock
cmc
enter
jae
shl
sbb
xchg
ljmp
lret
push
pop
jbe
lds
sub
imul
cltd
add
or
dec
mov
mov
xor
inc
mov
arpl
push
stos
popf
jmp
sbb
dec
xor
pushf
nop
push
xor
and
pop
or
outsb
cmc
inc
jno
dec
aas
push
test
fistpll
add
rorl
mov
inc
adc
mov
js
xor
pmuludq
mov
pushf
pop
push
dec
popa
push
mov
and
cmp
add
mov
sti
dec
andl
mov
and
xchg
pop
scas
outsb
aaa
dec
dec
pop
push
jl
dec
pushf
pushf
sti
sub
in
mov
inc
arpl
xlat
repz
xchg
jne
adc
or
int
fs
jg
push
jl
push
sub
pop
outsl
jle
add
sbb
or
push
mov
push
fdivl
test
clc
je
ret
and
aad
std
push
iret
pop
add
mov
repz
repz
xor
inc
inc
sub
sbb
and
jbe
clc
sbb
roll
or
mul
fstps
jne
lds
add
je
or
push
add
daa
and
add
rcrl
adc
add
fldt
jp
fwait
mov
out
push
cmpsl
sub
lret
push
and
in
aas
cmp
add
inc
subl
cltd
movsb
sub
mov
ljmp
fildll
push
arpl
cmc
cmp
adc
aaa
cmp
jecxz
fstpl
pop
add
cmp
add
or
mov
shll
jmp
jne
xchg
lods
jne
fiaddl
inc
loop
into
mov
push
sbb
adc
mov
and
xchg
mov
sub
xchg
push
in
cwtl
pop
clc
sbb
leave
add
daa
sahf
sahf
mov
sti
pop
stc
mov
sbbb
stos
hlt
fwait
mov
push
std
adc
push
and
int
cmp
add
out
xor
addl
test
xchg
sub
sub
cld
faddl
sub
fdivl
dec
dec
shrb
pop
cmp
aaa
std
mov
and
xor
test
lret
mov
sbb
sub
xchg
ljmp
cmova
push
dec
imul
cli
mov
push
rolb
test
adc
enter
cltd
sar
in
sti
mov
mov
sbb
dec
jns
cmp
dec
popf
insl
push
insb
fwait
test
inc
out
adc
ds
or
mov
mov
mov
shr
lahf
pop
and
sti
sbb
andl
insb
mov
je
fs
js
jb
mov
iret
and
adc
mov
cmp
mov
movb
add
jle
cmp
sti
dec
lret
xchg
inc
clc
xor
or
sbb
imul
scas
adc
mov
inc
out
pop
lret
and
in
jne
lahf
iret
dec
jecxz
mov
outsl
push
push
jecxz
adc
mov
or
mov
pusha
xchg
sarb
shll
mov
test
push
or
inc
fwait
pop
lods
fbstp
jle
lods
pop
imulb
push
int
daa
shlb
inc
adc
aaa
iret
mov
jnp
sbb
fcmovne
inc
aad
lea
test
mov
and
cmp
xchg
adcl
lret
sbb
lock
ss
mov
not
and
imul
fwait
pop
outsb
or
std
andl
mov
pop
pop
or
repnz
add
sahf
inc
lea
jle
cmp
cmp
ficoml
enter
mov
dec
add
mov
std
mul
inc
and
icebp
mov
pop
xor
inc
jbe
stc
sbb
out
push
or
mov
jge
xchg
addr16
lret
loopne
shl
stc
and
sub
xor
mov
idivb
shlb
out
sbb
test
mov
insl
mov
jmp
mov
inc
fstps
mov
push
jno
mov
mov
and
mov
lret
ljmp
fcomps
adc
imul
xor
lcall
dec
add
jae
mov
fbstp
leave
lret
xchg
lods
add
cmpsb
pop
mov
jns
inc
cli
shl
and
xor
das
sub
daa
lret
lcall
insb
scas
jno
in
mov
mov
push
jns
push
jno
jnp
mov
xchg
adc
add
in
ljmp
mov
or
aaa
enter
fisttps
xlat
rcl
inc
adc
xor
popf
lcall
xorb
xor
jl
sahf
cwtl
sbb
push
sarl
fsts
iret
stc
lahf
leave
cmp
les
xchg
ja
mov
jnp
rol
stos
fcmovnu
rcll
andl
std
popa
addr16
sbbl
jo
call
aas
sub
lock
xor
test
inc
aam
rcll
and
divb
dec
lea
mov
in
or
insl
push
sub
fldl
pop
aaa
idivl
pusha
shrb
sti
cmp
leave
and
add
pop
dec
sub
lods
add
push
adc
stc
mov
outsl
std
cld
or
out
pop
outsb
fs
pop
std
mov
retw
sti
dec
cmp
shl
cmp
les
jno
imul
push
sub
mov
mov
insb
mov
add
insb
imul
pop
push
sub
rcrl
vpavgw
mov
adc
popf
dec
sub
push
shlb
gs
aaa
sbb
insl
test
mov
cs
dec
mov
in
pusha
in
inc
push
cmp
cs
ljmp
aaa
lret
sbb
fsubl
push
lret
cmpsl
fcomi
jo
sub
push
sbbl
loopne
aad
mov
test
jl
imul
dec
add
jl
dec
jno
cwtl
daa
lret
aad
dec
cmp
add
xchg
add
jecxz
ficoml
push
mov
insl
xchg
or
test
jne
inc
xchg
aas
call
pop
sti
jbe
dec
adc
out
xchg
sub
rcr
adc
sub
imul
pop
xor
cmp
insl
fbstp
pop
sti
filds
sbb
lock
jg
pop
pop
xchg
lret
cmp
push
mov
fs
outsl
fsubl
pop
ret
mov
es
jmp
sub
fsubrs
and
pop
sahf
aaa
sbb
jo
dec
inc
ret
xor
jmp
imul
fidivrs
push
push
cmp
popa
jge
xor
test
mov
xchg
push
das
push
leave
imul
pop
inc
push
dec
lods
push
dec
inc
cmc
rcrb
inc
jge
sub
jge
sahf
xor
mov
in
pop
popf
sub
mov
mov
fstp
mov
sbb
mov
cmp
mov
adc
mov
shrb
movsl
aam
and
mov
sub
out
jge
dec
loopne
or
arpl
inc
xchg
pop
negl
sub
mov
mov
add
or
dec
jmp
shlb
or
xor
cmp
mov
xchg
jp
push
inc
cmpsb
pop
pusha
and
ret
aad
outsl
adc
mov
xchg
add
push
jecxz
les
or
jmp
inc
aas
pop
mov
imulb
negl
mov
xor
sub
aas
icebp
pop
jmp
mov
dec
addl
std
mov
push
xor
lcall
pop
push
aas
mov
cmp
cmp
pop
int
jnp
aaa
loope
dec
adc
cmp
sub
push
push
mov
add
std
in
hlt
fnstenv
call
add
lcall
dec
stos
and
repz
aas
leave
adc
outsb
or
dec
inc
pop
sub
cmp
and
aas
ss
lea
and
jmp
or
mov
leave
jo
add
in
sub
add
sub
fdivrl
out
and
sbb
push
stc
aas
and
loopew
cmpsl
dec
adc
sahf
scas
mov
stos
popl
dec
cmpl
jg
dec
xchg
dec
inc
adc
in
jbe
dec
mov
sbbb
cwtl
stc
mov
xchg
in
adc
shl
sbb
ret
push
jmp
jb
push
xor
fs
bound
dec
enter
test
in
call
mov
lahf
xchg
daa
dec
push
into
adc
addr16
ds
inc
ja
jno
aas
and
jno
jnp
mov
and
dec
and
mov
in
sub
negb
fstpl
mov
ret
lret
out
fcomp
cmp
mov
mov
les
cmp
shll
popf
ja
clc
data16
lahf
fldcw
sub
xor
inc
cld
cmp
outsb
cs
leave
xchg
je
rdpmc
push
xchg
adc
call
not
mov
dec
or
pop
call
repz
test
xchg
xchg
xchg
js
sbb
mov
add
and
push
out
lds
test
dec
shrl
test
mov
mov
xchg
hlt
call
aam
cmpsb
iret
xor
add
push
mov
gs
push
adc
addr16
and
pop
int3
add
jle
mov
outsb
dec
jnp
mov
adc
mov
insl
or
cld
push
inc
jle
pop
clc
shrl
mov
xchg
ret
push
mov
aaa
inc
imul
or
ret
data16
stc
cmp
jo
sbb
shl
push
xor
mov
inc
or
mov
dec
sbb
push
jb
sbb
sbb
out
out
dec
fildll
add
ja
ja
insb
mov
pop
subb
push
scas
pusha
outsb
xchg
loop
mov
mov
xor
xor
gs
ret
or
stos
dec
sti
fisubrl
inc
imul
cmp
cmp
mov
mov
push
adc
add
sub
sbb
push
repnz
cli
imul
aam
mov
popa
loopne
adc
sbb
mov
dec
scas
rorl
pop
pop
xor
pop
bnd
dec
dec
mov
pop
xchg
adc
pop
and
outsb
dec
les
push
jne
inc
mov
stc
xor
popf
xor
scas
fucomip
mov
addr16
ficomps
addb
lcall
pop
push
mulb
jmp
repz
cmp
enter
out
push
xor
sub
and
and
jo
jnp
mov
mov
jo
repnz
mov
rsm
mov
sbb
fidivs
cmpsl
out
sub
mov
cmp
leave
inc
fwait
push
lods
jmp
xor
int3
push
cmpsb
pop
lea
imul
inc
stos
cmc
mov
pop
mov
adc
mov
or
sahf
mov
icebp
mov
imul
xor
popa
enter
sbb
sub
cmp
rcrb
rorb
aaa
adc
andl
cmpsl
push
ds
jp
push
mov
popa
mov
lock
dec
lds
or
pop
aad
icebp
add
rorl
add
in
push
hlt
and
lods
ja
out
lds
pop
adc
leave
inc
jl
mov
int3
jp
push
inc
loopne
sub
jae
icebp
inc
rorb
loopne
inc
imul
and
ja
push
mov
rdmsr
out
add
ret
sti
scas
insb
in
or
dec
dec
pop
bound
lret
rorb
je
mov
jmp
dec
lock
jge
mov
roll
fmul
int
lcall
dec
insl
xor
inc
xor
add
mov
lcall
cmp
ljmp
add
and
test
or
lahf
pop
mov
sub
sub
leave
outsb
sbb
testl
fimuls
outsl
jg
cs
jbe
mov
cmp
sar
dec
sti
out
addr16
dec
push
in
xor
jecxz
adc
dec
adc
inc
cmp
mov
adc
movsb
mov
cli
sbb
xor
out
roll
lds
and
pop
fldcw
addb
jo
or
mov
ss
testb
icebp
mov
jl
mov
inc
push
lret
mov
ss
stc
dec
sbb
mov
mov
adc
lcall
adc
leave
xor
ja
in
xchg
mov
cmpsb
xor
cmp
das
push
shlb
add
das
inc
inc
xor
stos
cmp
movb
push
cs
xor
out
dec
inc
int
ror
mov
jmp
outsb
insb
xor
push
lret
adc
jmp
xchg
lcall
and
scas
lods
mov
and
sbb
mov
ljmp
xchg
out
dec
push
arpl
add
pop
es
sbb
inc
dec
push
std
mov
out
inc
jge
cmpsl
or
or
repz
ret
ror
sub
sub
dec
xor
dec
cmc
lret
adc
jae
jne
inc
movsl
cmp
jecxz
mov
dec
fnstsw
testl
push
xor
out
push
dec
xor
ffree
pop
push
cmp
and
mov
dec
sti
pop
cld
nop
sbb
in
shrl
inc
gs
jg
fsubrs
xlat
push
test
push
pusha
fsubrs
sbb
fists
dec
sbb
psrlw
adc
push
fnstcw
pop
xchg
in
cmpsl
mov
cli
push
js
and
mov
push
and
dec
cld
ja
inc
out
pop
add
or
pushf
xchg
mov
and
fwait
dec
xor
out
mov
lcall
cmc
or
mov
outsb
or
loopne
pop
push
push
and
adc
mov
ret
sub
hlt
push
jae
rorb
outsl
mov
loopne
inc
into
add
inc
sti
inc
push
test
fnclex
popl
mov
mov
xor
cld
xorb
mov
fstps
test
cwtl
inc
or
inc
cmp
or
jle
cmc
leave
lea
dec
in
mov
mov
jo
add
sub
adc
pop
pop
insl
push
jle
shlb
xchg
inc
dec
imul
jno
mov
cmp
mov
cmc
pop
mov
fnstsw
jmp
mov
add
lret
loope
dec
inc
jb
inc
sbb
rorl
mov
outsl
iret
xchg
mov
mov
pop
arpl
mov
pop
mov
jmp
fdivrl
out
das
push
jge
inc
dec
add
sub
pop
sub
clc
ljmp
inc
flds
in
add
add
lock
movsb
xchg
fwait
xor
les
std
in
sub
ss
push
pop
mov
sub
dec
add
push
fldcw
lds
repnz
or
mov
loopne
cmp
add
mov
or
jmp
push
sub
jne
scas
add
add
out
lods
fs
out
mov
aas
lcall
test
xor
fists
mov
mov
cmp
jmp
fldl
push
ja
leave
test
sti
push
mov
scas
mov
and
pop
sbb
push
fldt
out
mov
pop
ds
jmp
popa
iret
xchg
xchg
dec
fcoms
xlat
or
sar
mov
icebp
in
push
push
sbb
jecxz
mov
xchg
add
pop
js
mov
mov
mov
outsb
mov
shrb
dec
mov
inc
ds
lret
repz
push
lds
cmp
loopne
lahf
jecxz
int3
or
out
daa
sbb
pushw
repnz
sbbb
aam
mov
daa
sub
stos
out
lcall
jg
sbb
xchg
aad
or
scas
stos
mov
clc
ret
inc
repz
loope
seto
cmp
push
mov
test
adc
mov
aaa
stos
pop
divl
sub
or
inc
push
hlt
lret
pop
call
mov
add
shr
sbb
out
dec
add
mov
mov
int3
fadds
inc
scas
pop
into
jnp
mov
dec
gs
lock
outsl
and
push
or
int
and
imull
pop
jle
mov
push
xor
xchg
xchg
sbb
push
add
jle
push
je
jno
shl
jbe
sub
out
dec
cmc
sbb
pop
jo
in
push
mov
mov
popf
mov
mov
gs
shr
hlt
inc
cmpsb
repnz
movsl
push
ljmp
sub
jne
lahf
pop
push
test
xor
aaa
fs
aad
bound
and
lods
loope
and
mov
pop
mov
inc
pop
add
jp
stos
cmpsb
punpckldq
inc
rclb
cmp
inc
sbb
jg
mov
and
dec
jecxz
adc
in
cmp
xchg
adc
mov
push
jp
push
xchg
outsl
pusha
out
xchg
xor
adc
lods
dec
ss
in
movsl
in
shrl
scas
call
cld
mov
xchg
dec
jns
push
fisubrl
lods
jb
dec
in
xchg
xorl
xor
stos
icebp
pop
shl
xor
js
fimuls
xchg
sbb
ljmp
mov
dec
add
cltd
movsb
iret
or
icebp
xchg
aaa
fwait
js
pop
mov
ds
lret
mov
and
adc
aaa
cmp
lret
push
in
push
mov
lods
test
xchg
sub
lods
int3
dec
sub
daa
xchg
jmp
lea
lahf
inc
outsb
push
dec
sahf
xchg
out
outsl
cmpb
fiaddl
cwtl
pop
ficoms
sbb
les
es
cli
mov
mov
ror
push
add
or
les
enter
in
mov
mov
popf
sahf
ja
shl
enter
jecxz
pop
aam
bound
lcall
add
mov
inc
popf
jg
push
cmpb
cmpsl
push
cmp
inc
push
test
fs
add
sub
icebp
sub
and
lods
pusha
test
hlt
nop
push
sbb
cld
out
insl
ja
clc
lcall
add
push
packsswb
daa
push
iret
and
loope
and
loop
jb
mov
mov
rolb
add
xor
or
xor
test
je
stos
icebp
insl
mov
pop
jmp
popf
hlt
and
jb
pusha
pop
inc
test
popf
push
add
dec
cld
xchg
mov
stc
or
dec
insb
cmp
add
lret
arpl
push
enter
and
add
sbb
push
adc
xchg
arpl
dec
lret
inc
mov
es
pop
lret
add
pushf
inc
adc
mov
or
mov
test
push
and
test
std
rcrb
xor
adc
cld
pop
sbb
or
mov
sub
and
mov
mov
pop
ds
cmp
loopne
imul
xor
in
sub
arpl
add
mov
filds
test
mov
mov
sarl
cmpsl
loopne
cmp
sub
or
fld
mov
daa
push
incb
xor
test
or
cmpsb
pop
mov
pop
stc
nop
sub
push
in
sbb
mov
fs
outsb
out
callw
xchg
adc
sahf
jl
in
pop
push
xor
pop
sbb
fst
mov
inc
cmp
mov
xor
adc
xor
hlt
shll
or
sub
and
dec
sub
push
add
and
arpl
testl
test
push
adcl
mov
jg
pop
icebp
mov
iret
xorb
stc
xorl
mov
or
mov
adc
and
into
xchg
insl
testl
push
int3
leave
adc
pop
scas
add
push
inc
adc
push
add
dec
sbb
sub
or
imul
fnstsw
data16
sub
dec
cmp
pop
lret
jp
push
xor
cltd
test
lock
xchg
sub
sbb
cwtl
or
shr
scas
idiv
push
out
or
sahf
mov
notb
loop
fcoml
adcl
adcl
adc
mov
jmp
mov
shlb
jle
cli
aaa
stc
sbb
sbb
cmp
xchg
ret
cs
stos
repz
cmp
jb
stc
enter
ja
cmc
sti
adc
dec
mov
dec
mov
inc
adc
mov
mov
or
pop
mov
cmpl
ss
cmp
pop
mov
jno
roll
out
and
or
sub
movsb
pop
jne
and
imul
int3
push
push
gs
jbe
xor
bound
test
enter
mov
lea
sbb
jle
add
loop
out
insb
mov
push
sbbl
sbb
dec
arpl
sti
aam
out
adc
divb
rcl
adc
jns
hlt
mov
cwtl
jge
push
jnp
adc
cmp
faddl
pop
and
repz
dec
sub
mov
shrb
and
dec
inc
int
push
stc
test
xor
pop
mov
xchg
lock
push
jne
out
int3
lds
out
mov
pusha
add
cs
aas
iret
jne
adc
mov
ficoms
fidivl
subw
jno
jl
stos
xor
lahf
test
aam
adc
jae
inc
shlb
xor
mov
cmp
add
mov
jns
leave
in
fdiv
jbe
sub
dec
dec
cltd
aam
dec
mov
mov
ret
mov
sub
sbb
mov
adc
push
loopne
pop
in
je
loop
cmc
and
xor
dec
push
stc
cmp
insb
aaa
test
loopne
sbb
sub
lods
in
fnstcw
mulb
dec
test
push
movsl
push
andl
loop,pt
xor
in
and
orb
lods
add
jnp
add
fiadds
int
mov
jmp
clc
mov
repnz
push
loope
test
fistps
xor
in
pop
aad
loope
jge
mov
insb
jo
fstl
adc
adc
inc
cmpsb
neg
imul
or
sahf
mov
mov
push
add
inc
iret
dec
leave
pop
fcompl
outsl
mov
pop
rorb
xchg
xchg
imul
jo
stos
lret
or
bswap
fs
test
insl
stos
mov
push
mov
out
sub
mov
iret
pop
insl
or
test
mov
outsl
cwtl
lods
and
or
mov
or
test
lahf
out
test
dec
cmpb
lret
lods
push
jno
jb
inc
lret
dec
rol
dec
dec
pop
divl
outsb
loope
mov
push
jecxz
push
repz
fsubl
mov
addr16
and
dec
loopne
aas
loop
adc
popf
addb
push
pop
or
loopne
sub
jmp
insb
and
ficompl
lahf
sub
xchg
push
jl
pop
add
mov
mov
jmp
and
daa
xchg
lea
or
mov
jne
hlt
xchg
or
fs
pop
out
lods
lcall
adc
cmp
pop
cmp
pop
imul
cld
bound
mov
mov
filds
add
mov
inc
fidivrs
xchg
in
pop
cmpsl
sub
scas
sub
push
sar
sti
bound
dec
add
dec
xor
out
movsb
xlat
inc
stos
mov
std
push
les
adcl
and
dec
data16
fcoml
les
cwtl
jns
jl
jle
xchg
jbe
daa
rclb
mov
push
push
cmpsb
andb
sbb
sub
mov
call
inc
mov
fs
jecxz
pop
ss
and
outsb
adc
cmp
jne
xchg
lret
dec
mov
push
inc
loope
xor
sub
fldcw
loopne
lea
push
inc
fcomps
lods
rcl
orl
xchg
mov
icebp
fidivrs
xor
jl
in
outsb
les
push
mov
jb
imul
inc
mov
push
cld
shll
testl
push
imul
jae
lcall
cli
sub
push
push
xchg
or
adc
sub
enter
and
in
lahf
sub
pop
ret
pop
arpl
sahf
or
push
push
movsb
sub
outsb
adc
aad
jno
push
fimull
mov
cmc
data16
loope
loopne
aaa
mov
jle
fmull
mov
int
scas
cmpl
data16
push
mov
dec
dec
fs
cmpsl
sub
in
mov
lahf
dec
fwait
mov
xor
jno
mov
aaa
rclb
in
lds
filds
icebp
sbb
fistpll
mov
xor
jbe
jb
out
mov
in
mov
in
les
data16
jnp
in
sbb
sub
mov
outsl
pop
adcl
shr
cld
aaa
cmp
in
mov
in
xor
jno
sbb
lahf
scas
xor
sbb
mov
push
xchg
cmpsl
mov
xlat
shl
dec
cwtl
ja
adc
ja
sbb
hlt
mov
dec
hlt
scas
movb
jnp
scas
push
shlb
pushf
inc
pop
push
test
fs
idivl
mov
jae
dec
insl
cli
adc
push
std
xchg
mov
fldl
arpl
mov
sbb
test
shr
xchg
pop
mov
mov
xor
pop
and
push
sbb
mov
cmp
test
decb
das
leave
inc
jns
sbb
jp
fnstenv
push
mov
jne
jo
fwait
mov
movsl
test
sbb
mov
out
mov
push
add
push
test
jmp
lcall
jno
loop
xchg
popa
testl
dec
pop
mov
into
enter
jnp
xlat
jne
pop
scas
arpl
mov
jge
sbb
popf
addb
pusha
xlat
call
mov
cmp
xor
mov
sub
repz
adc
push
pcmpeqd
das
pop
mov
jg
and
jg
jmp
outsb
lcall
mov
movsb
sub
mov
xor
inc
xchg
das
cwtl
sbb
pushf
rorb
fistpl
lahf
sti
xchg
call
popl
dec
xchg
fwait
call
push
je
push
mov
pop
jno
call
ljmp
xor
sbb
hlt
sbb
inc
sbb
or
lods
outsb
dec
loopne
mov
or
fnstcw
jl
ss
xor
in
sbb
pop
dec
ja
adc
jne
or
jp
in
or
and
mov
test
popf
iret
insb
arpl
or
popa
jecxz
ja
insl
jb
shrb
sub
insl
fisubs
int3
jmp
jbe
call
mov
ds
fnstsw
imul
mov
add
add
push
es
or
or
jg
pop
add
lea
xor
push
xor
xchg
insl
dec
dec
cmp
fidivl
leave
mov
popf
in
xchg
add
lock
faddl
sub
lods
xchg
jae
lahf
lods
imul
mov
sbb
jmp
inc
inc
jg
in
sbb
test
or
fisttpl
and
rolb
fcoml
test
jb
cld
xor
test
mov
or
mov
fdiv
xchg
ret
inc
mov
stc
mov
int
cmpl
push
les
xor
cmp
xchg
jge
imul
lret
xchg
popaw
adc
test
add
cmp
mov
xchg
push
sbb
fistpll
addb
fistl
mov
out
lcall
cmc
push
pop
xchg
mov
add
in
jge
xorl
outsl
lds
mov
mov
in
cmp
je
cli
test
xlat
out
pop
mov
xor
subl
mov
lret
mov
scas
mov
imul
dec
pop
pop
ret
pop
jo
mov
adc
cs
adcl
sub
xchg
lcall
adc
insl
imul
dec
das
scas
pop
xlat
sarb
add
mov
mov
jns
add
pop
sbb
adc
adc
lds
insl
aad
ds
insl
adc
shrb
insb
cs
and
fwait
or
dec
cmp
ficomps
loop
dec
sub
imul
pop
test
lock
jp
es
sub
roll
fisubs
mov
mov
aas
dec
cmp
sbb
inc
cmc
cmc
int
lods
inc
ss
outsb
pusha
pop
pop
push
in
inc
pop
iret
mov
cwtl
or
adc
inc
leave
adc
mov
and
stos
mov
add
movsb
lock
push
push
inc
cmp
adc
or
mov
mov
notl
lret
aam
mov
hlt
pop
dec
xor
push
ds
shlb
scas
loope
mov
outsb
inc
insl
sub
mov
pop
mov
pop
mov
shrl
pop
mov
cld
daa
inc
pop
jns
pop
xor
fptan
clc
in
mov
push
hlt
fstpt
add
or
or
push
mov
mov
or
push
pop
lret
push
sbb
jge
push
adc
xchg
imul
jns
mov
pushf
jecxz
icebp
data16
data16
or
in
mov
rolb
xor
test
mov
and
mov
cwtl
mov
sbb
or
dec
xor
push
out
lcall
jecxz
mov
jl
jl
mov
ljmp
sub
push
jecxz
fwait
arpl
setnp
andb
fwait
rcr
add
nop
outsl
jae
enter
aad
pop
dec
adc
dec
rol
out
outsb
repnz
sti
call
xorb
or
pop
int3
push
shl
loopne
popf
sbb
xor
mov
lret
or
test
in
jno
cmp
xorl
pushl
or
fistps
and
bnd
lret
sub
xor
lret
clc
insl
dec
cmp
movsl
add
shl
loope
call
iret
jne
mov
sbb
inc
fldl
mov
adc
lcall
aad
xlat
jns
movsb
popf
cmpsb
enter
jnp
mov
cld
imul
and
mov
int3
inc
xchg
add
mov
stos
lds
inc
ret
mov
xor
orb
and
add
loop
mov
push
push
mov
fisubrl
cs
ds
dec
mull
call
lret
push
loop
add
pop
mov
ret
mov
inc
out
mov
pop
into
cmpsb
add
inc
mov
cmpsl
ja
lods
aaa
mov
dec
pusha
push
into
sub
or
adc
add
add
dec
enter
enter
bound
xchg
shlb
or
inc
xor
fsubs
popa
mov
mov
arpl
mov
sahf
adc
push
mov
mov
jbe
or
mov
push
fs
int
movl
lock
xchg
movsl
icebp
movsb
inc
pop
insl
xchg
fstpl
cltd
hlt
cltd
pop
mov
fimull
inc
scas
mov
jae
sub
xor
or
mov
je
repz
js
sbb
add
test
pop
jge
push
and
data16
cmp
jne
mull
jmp
mov
sbb
pushw
mov
adc
movl
xchg
push
push
lods
sbb
imull
pushf
mov
jo
test
test
jns
and
adc
mov
push
stos
ja
rcrb
jb
xlat
adc
inc
mulb
push
jecxz
daa
xchg
lods
loope
stos
cmp
enter
push
sbb
bound
lock
punpckldq
jnp
lds
dec
xor
adc
cwtl
and
xor
enter
lock
mov
movsl
in
cmc
sahf
adcl
cmp
mov
into
out
outsb
popf
dec
bound
es
and
fcmovu
je
mov
sbb
mov
and
xchg
mov
and
fsincos
adcb
sbb
or
imul
inc
clc
xchg
sub
sbb
jae
dec
movsl
xchg
push
out
in
push
lock
aas
mov
inc
ret
or
pop
mov
sarb
nop
push
jae
outsb
jmp
sub
dec
inc
add
daa
cmpsl
lods
cmp
mov
enter
lods
jo
jnp
add
push
dec
dec
push
and
out
inc
mov
fadd
pop
addb
dec
jnp
out
or
cmp
movsl
rorl
fwait
rorb
popa
mov
in
cmp
nop
jp
mov
xlat
sub
cmp
xchg
cmpsb
jae
mov
mov
sbb
inc
shll
and
pusha
divl
sub
mov
ljmp
pop
xchg
push
out
inc
dec
outsl
and
inc
xor
inc
cmp
gs
leave
add
dec
sbbb
inc
repnz
mov
stos
negb
adc
popa
stos
and
jno
hlt
dec
movsl
mov
lcall
dec
movsb
jb
jne
lret
fistl
push
and
xor
mov
or
add
pop
addb
lret
inc
cmpsl
fcomip
arpl
adc
and
or
jae
cmpsl
inc
mov
cmp
les
pop
xchg
imul
fmulp
lret
or
and
push
inc
cltd
aam
out
jmp
mov
push
and
div
or
or
lods
call
loop
adc
popa
lahf
ret
test
lods
loope
pop
pop
es
lcall
nop
xchg
lret
cmpsb
mov
inc
cmpsl
aaa
lods
test
mov
fs
add
fildl
add
out
add
cli
and
push
int3
push
mov
lcall
fldl
mov
iret
cmp
fiaddl
frstor
dec
inc
hlt
sub
mov
push
out
mov
add
cmc
jae
mov
mov
lods
push
inc
mov
into
pop
lret
fstpt
jge
mov
cs
push
into
jae
mov
xchg
addr16
pop
aam
xchg
sub
mov
and
mov
cmpsl
out
cmp
sbb
cmp
loop
lock
add
sbb
sub
jb
lret
shlb
ds
ror
adc
or
pop
pop
ja
loopne
stos
scas
adc
inc
push
cmp
pop
arpl
pop
pop
mov
pop
push
shl
sbb
arpl
xor
call
mov
pop
data16
sub
or
jg
adc
cmp
scas
test
pop
add
add
fcomi
pop
or
int3
push
fwait
dec
jns
pusha
fiaddl
adc
pusha
test
rcrb
adc
mov
js
jae
xchg
movsb
pop
cmp
dec
jg
sub
pop
in
out
loope
jnp
mul
mov
ucomiss
pop
dec
jge
push
and
mov
cmp
cmpsb
mov
rclb
loope
shr
das
jp
aam
fsubrs
imull
int3
sbb
fadds
insb
sub
and
sahf
pop
pop
adc
dec
dec
sub
int
scas
loop
cmpsb
add
mov
in
and
xchg
popf
inc
andl
repnz
mov
jp
out
out
jno
test
mov
jne
mov
rcll
mov
cld
addb
add
mov
lret
popw
mov
ret
mov
mov
popf
pushf
sbb
xor
cltd
arpl
push
call
mov
xchg
rorb
stos
orb
cs
push
mov
shr
out
hlt
scas
dec
mov
or
xchg
adc
xchg
push
cld
xchg
sbb
xchg
std
xor
and
imul
ljmp
mov
lods
mov
mov
cltd
arpl
mov
cmp
and
adc
xor
mov
add
ret
sbb
or
adc
dec
inc
pusha
daa
fmuls
mul
test
mov
adc
xor
lahf
pusha
hlt
add
cmp
mov
cld
jbe
jns,pt
pop
dec
mov
add
xchg
aas
pop
jo
xchg
leave
movsb
cltd
lret
pop
and
jbe
push
xchg
jb
or
pop
pop
jg
cwtl
rorl
push
fnsave
sbb
sub
pop
sub
imul
bound
jb
lcall
push
push
sti
loope
out
push
sbb
jae
and
fcompl
add
test
push
push
jl
stos
aam
clc
jl
notb
insl
nop
xchg
dec
mov
rcrl
pusha
orl
add
bnd
andl
leave
and
and
xchg
addb
subb
xchg
out
xchg
idivb
in
inc
shll
adc
push
jns
mov
pop
jle
jge
push
nop
cmp
lret
pop
jae
cwtl
mov
and
dec
mov
sti
loop
ljmp
daa
mov
cmpsb
scas
push
cmp
adc
dec
and
rcll
mov
scas
int
loope
add
cs
push
rcrl
xor
xlat
imul
cmpsl
or
cmp
adc
iret
pop
dec
repnz
in
pop
sar
jo
stc
mov
addr16
inc
cmp
jg
mov
dec
ret
mov
mov
dec
mov
lods
jp
xor
jle
jl
mov
mov
pushf
test
inc
mov
std
mov
cmp
arpl
dec
inc
pop
push
nop
jle
hlt
add
rcr
imul
pop
mov
inc
jnp
cltd
xor
push
mov
mov
call
jnp
movsb
jne
jmp
inc
inc
mov
pop
push
xor
xchg
jg
dec
xchg
push
inc
fcom
enter
adc
aam
and
jb
mov
int3
fs
pusha
not
shll
scas
xchg
add
xadd
inc
shlb
dec
and
dec
lods
xor
test
pop
scas
cltd
dec
stos
in
sbb
aam
imul
xchg
lea
clc
inc
xor
and
sub
icebp
lds
pushf
mov
das
xchg
adc
jb
push
mov
adc
bound
ret
std
sbb
mov
add
rcrl
xchg
adc
loopne
sub
es
mov
es
xor
push
mov
sbb
clc
pop
js
jae
push
not
xor
insl
cld
sbb
pop
aam
jmp
lods
mov
sub
fbstp
cmp
ljmp
xchg
mov
push
push
add
imul
pop
xchg
int
js
jnp
cmovge
sbb
mov
inc
mov
nop
cmp
rcrb
into
stc
decl
mov
orl
mov
adcl
fists
inc
push
add
mov
popa
add
and
jbe
add
idivb
sbb
xchg
dec
or
jae
stos
mov
cmp
push
sbb
imul
dec
into
mov
dec
or
cs
leave
aam
rclb
int3
or
xor
lea
mov
sahf
jl
mov
popf
lret
popa
addb
hlt
sub
mov
jmp
dec
loopne
ss
loopne
test
add
mov
push
jae
popa
pop
push
cmp
fnstsw
loope
roll
dec
xchg
aas
inc
ja
in
xchg
dec
adc
mov
pop
jb
ljmp
sub
cmp
pop
dec
movsb
jbe
sub
cltd
shlb
sub
cmpsl
not
adc
or
sub
test
push
dec
xchg
push
xorb
jno
imul
xchg
aas
jns
jbe
or
ljmp
sbb
xor
shrl
jl
in
xlat
decl
rol
in
popa
lcall
xchg
sbbb
and
pushf
movsl
int3
mov
xor
jl
jecxz
cltd
cmp
dec
jae
adc
cmp
cmp
flds
and
pop
jl
push
mov
lret
cltd
push
sbb
xchg
ror
cwtl
andl
incl
fdivl
mov
mov
insl
rcrb
fists
into
addr16
cmp
sarb
mov
jg
xor
inc
and
push
adc
inc
sahf
es
mov
roll
add
mov
sbb
outsl
cmp
xor
in
aad
or
sbb
bound
or
test
add
adc
or
cmp
xchg
or
into
and
push
mov
call
sub
or
aaa
leave
nop
or
mov
cmpsl
imul
mov
js
icebp
dec
adc
sub
xchg
aam
in
shr
sbb
push
movsb
and
xlat
movsb
xchg
sti
outsb
mov
add
andb
push
jle
add
jbe
out
iret
and
jae
pop
ljmp
xor
and
adc
jns
jmp
lds
pop
or
mull
xchg
mov
pop
inc
cmc
loop
or
pop
ret
xor
xchg
sub
xor
fdivs
stos
jb
and
push
add
add
xor
and
inc
dec
fsubs
xchg
jg
and
mov
rclb
aam
cmpsl
mov
jecxz
cmp
mov
sub
sub
mov
pop
lock
gs
push
xchg
out
aaa
jns
rorl
or
cwtl
cs
stc
test
and
fs
add
push
inc
imul
mov
clc
nop
repz
and
inc
or
aas
adc
ret
mov
hlt
aas
pop
popa
inc
insl
aam
lahf
lret
mov
fs
pop
cmp
popf
pushf
add
insb
and
enter
xchg
pop
add
out
std
in
xchg
push
loopne
aaa
pop
inc
insb
push
hlt
cwtl
jg
push
ss
int3
test
ret
fistps
jl
lods
push
notb
fnstenv
dec
ficoms
xor
cmp
add
icebp
cmc
divl
cld
mov
mov
jmp
sub
lods
shlb
ja
insb
fsubrs
outsl
test
sub
push
std
in
xor
outsb
test
pop
mov
or
loope
enter
pop
cmpsb
adc
mov
cli
pop
cld
sbb
xor
bound
or
or
leave
mov
xchg
lcall
imul
inc
jo
scas
stos
repz
sbb
mov
dec
popa
nop
in
mov
mov
subb
or
outsl
addb
or
incl
pushl
testl
sar
loope
je
aad
scas
add
push
mov
fwait
adc
add
daa
xchg
loop
jne
xchg
pop
mov
sub
mov
push
mov
roll
out
fninit
ret
arpl
test
test
add
inc
test
push
scas
dec
push
dec
push
mov
push
xchg
cmp
lret
fcoml
cs
ljmp
push
xchg
out
fidivl
loop
stos
nop
jns
pop
ljmp
mov
dec
daa
into
nop
adc
mov
fwait
pop
mov
mov
push
adc
or
lcall
bswap
and
adc
into
cmp
jb
hlt
add
inc
cmovs
xchg
sbb
test
mov
cld
into
aas
xor
out
and
fsubrl
and
inc
lret
mov
cli
mov
test
gs
and
aas
rcll
xchg
xchg
adc
setnp
es
jle
and
lods
ds
cwtl
call
or
ljmp
push
ret
subl
xor
test
xchg
jp
mov
xchg
mov
insl
push
pop
xor
repz
mov
xorb
xchg
cwtl
inc
outsl
out
daa
out
mov
pop
lds
lea
cmp
iret
mov
out
push
cld
fcoms
push
test
dec
jbe
test
mov
push
cmpsl
leave
sti
aad
rcl
xor
push
fldcw
in
jge
fsub
mov
inc
mov
adc
mov
push
push
sbb
push
mov
fisubrl
adc
mov
js
pop
sbb
add
sbb
lods
andl
jnp
push
sub
inc
faddl
fstps
frstor
rolb
push
mov
repnz
mov
jae
add
xchg
jge
mov
pop
loope
fucomi
add
push
jns
inc
es
not
in
rcrl
xchg
cmp
inc
dec
lahf
or
ss
enter
sub
ret
sub
inc
rorb
enter
mov
cld
and
cmc
pop
mov
aam
mov
xlat
mov
shrl
fnstsw
jno
pop
movups
ja
mov
enter
addr16
xchg
mov
icebp
cmc
ds
mov
sbb
push
jl
push
or
pushf
add
dec
shrb
sahf
out
pop
ja
ret
fwait
adc
pop
loop
and
pop
xchg
rcll
jmp
jbe
test
sti
stos
mov
inc
das
fdivs
test
or
inc
sbb
mov
sar
push
cli
enter
mov
pop
pop
ja
in
inc
push
das
or
add
jp
xchg
stos
cmc
iret
enter
insl
pushf
call
scas
test
in
stc
out
les
movswl
sbb
insl
jae
inc
or
add
adc
jle
or
or
and
dec
dec
adc
loopne
pusha
int
push
rcrl
dec
inc
mov
inc
mov
sub
sbb
mov
adc
jae
adc
rclb
add
xchg
es
ljmp
xor
das
cld
sbb
outsb
addr16
pop
pop
sti
outsl
add
xchg
nop
xor
mov
test
mov
mov
push
and
ret
inc
imull
dec
sbb
in
mov
sub
mov
outsl
mov
adc
sbb
loope
stos
mov
add
mov
mov
xor
cs
rcll
add
cmpsl
xor
jbe
sbb
adc
push
dec
aam
pop
cmc
test
fcoml
xchg
fidivrs
lret
dec
les
pop
xor
cwtl
test
xchg
sub
das
je
notb
or
cmpsl
push
test
js
arpl
push
in
push
aam
xchg
add
push
xchg
and
mov
jo
mov
cmc
bound
hlt
pop
xor
xor
push
inc
fs
in
mov
or
popa
xchg
mov
andl
scas
in
push
in
mov
mov
rcrl
aas
fwait
jmp
mov
and
fcmovnb
ret
adc
cmp
jbe
xor
mov
sub
mov
ds
or
loope
jb
popf
fwait
push
jmp
je
stos
stos
jnp
xor
aam
out
loop
pop
pop
ljmp
or
call
push
test
mov
scas
inc
ret
dec
or
xchg
js
sbb
adc
mov
rorb
pop
adc
leave
sub
pop
int3
mov
aam
std
testl
enter
addr16
inc
adc
push
mov
loopne
imul
push
stos
jp
je
and
or
mov
das
cmp
or
and
insb
repz
clc
lret
lahf
arpl
insb
add
cli
push
ds
mov
xchg
dec
sbb
cmp
mov
ret
sti
daa
or
and
mov
arpl
xchg
inc
repz
stos
repz
insb
ja
push
das
ds
ljmp
cmpsl
push
sbb
es
and
nop
frstpm(287
sar
pusha
mov
push
pop
das
xchg
sub
pop
fbld
ds
cld
sbb
and
pop
xchg
cmp
loop
jb
inc
mov
add
jecxz
add
push
adc
mov
insb
ds
mov
cmp
sbbl
in
inc
mov
adc
add
fsubrl
adc
and
popa
fstl
jmp
nop
dec
xchg
test
mov
mov
insl
mov
stos
xor
in
insb
cmp
mov
push
xchg
inc
jle
jbe
inc
xor
movsb
fs
loope
repnz
cs
pop
or
outsb
sarb
call
add
ja
test
stc
dec
pop
sub
jle
xor
xchg
jns
jns,pt
dec
adc
test
nop
jne
xchg
sub
mov
test
mov
cmpsl
push
mov
pop
push
mov
subl
and
push
sbb
inc
out
mov
orb
xchg
adcb
mov
and
addr16
jb
add
shr
imul
adc
arpl
jo
mov
mov
sub
mov
cltd
mov
int3
repnz
jns
xchg
hlt
pushf
or
pushf
sarl
pop
je
inc
es
int
scas
dec
xchg
rolb
inc
gs
and
add
sahf
push
in
adc
cmp
mov
arpl
ljmp
add
out
or
or
push
push
mov
add
jmp
loopne
jo
aam
mov
sbb
test
mov
jle
push
lods
nop
cmpb
xor
inc
and
mov
sti
outsl
cmpb
pop
and
push
jbe
inc
mov
mov
mov
out
cmp
mov
cmp
pop
mov
rcr
subb
add
cs
mov
or
xchg
gs
mov
frstpm(287
jae
mov
rorb
ja
adc
cwtl
lahf
in
xor
std
cmpsb
popf
fucom
out
rcr
test
incb
movsb
ret
adc
arpl
scas
dec
cmp
xor
popa
js
fld
das
cmp
int3
cltd
pop
mov
popf
jecxz
cmpsb
inc
and
lods
push
rcl
out
cmpsl
jl
xor
and
and
daa
cmp
cld
fcmovnu
add
add
cmpsl
push
in
xchg
mov
ret
sbb
ds
pushf
mov
arpl
popf
mov
or
call
shrb
xchg
imul
call
shrl
mov
pop
rolb
mov
xor
and
not
fcompl
mov
decb
sar
xchg
stos
enter
idiv
and
loope
jge
loopne
fcoml
insl
out
dec
pop
mov
cmp
int3
adc
clc
btc
pop
fcmove
pop
dec
cmp
in
sub
pop
add
aas
fs
fisttpl
add
pop
or
test
cmp
cmp
je
sub
push
xorl
xchg
mov
mov
mov
inc
pop
add
outsl
cwtl
jne
jb
push
xchg
in
in
pop
je
pop
xorl
and
sbb
sar
xor
xchg
nop
int3
jo
mov
insl
jne
mov
mov
test
stc
std
or
stos
and
outsb
xor
sbbl
push
cltd
dec
ljmp
cmp
data16
loopne
into
shll
int
cwtl
mov
in
setae
psubusw
into
inc
lods
cmpsl
xchg
or
mov
inc
push
inc
test
lods
inc
dec
xlat
clc
xchg
xchg
push
mov
je
mov
mov
icebp
jp
jo
fbld
inc
sub
dec
les
call
test
clc
jnp
push
pop
fsubr
pminub
dec
shrl
jne
out
or
stos
bound
pop
jp
aad
adc
mov
sub
sub
pop
and
lock
aad
sub
int
shld
adc
adc
rep
std
repz
or
lods
ds
mov
adc
xchg
inc
adc
xchg
imul
adc
dec
push
adc
jae
adcl
cmp
mov
or
push
dec
xchg
mov
mov
iret
fbstp
lock
int
inc
mov
sbb
out
add
push
fcoms
xchg
add
scas
or
push
xchg
push
ret
push
jl
dec
pop
pop
mov
cmp
inc
nop
or
fcomi
jbe
jns
sub
and
pusha
lea
add
pop
sbb
mov
out
push
sub
mov
push
lcall
scas
outsl
xor
cmp
js
sub
stos
xchg
mov
xor
add
sahf
and
cmc
test
fcmovnu
adc
add
mov
dec
imul
and
loope
jns
ror
dec
add
and
lahf
ljmp
sbb
jp
fucomip
cltd
enter
fyl2xp1
sub
jns
xor
mov
sbb
sub
mov
dec
and
imulb
mov
add
dec
or
adc
xchg
rol
jecxz
mov
pushf
pop
dec
pop
ret
out
push
scas
nop
mov
repnz
es
sub
add
or
xchg
push
mov
add
pusha
sub
inc
pop
inc
add
enter
push
int3
iret
cmp
out
sub
push
add
imul
mov
jle
xchg
push
jb
inc
addb
mov
mov
lret
ljmp
out
push
adc
cmp
xor
lods
ss
and
mov
xorl
pop
xor
idivl
pusha
xchg
sub
inc
lods
mov
stos
mov
movsb
xor
outsl
dec
outsb
leave
cmpsb
mov
push
rcr
fwait
outsl
jbe
xor
pop
decl
arpl
push
test
fs
cmp
sbb
ret
repnz
xchg
lahf
mov
lcall
xchg
pop
push
inc
pop
inc
add
das
mov
pop
jns
lcall
mov
es
mov
insl
std
adc
or
inc
in
sbb
imul
ret
lahf
or
outsb
leave
enter
ljmp
insb
inc
and
aas
adc
jge
ss
mul
movsl
mov
negb
push
fs
daa
dec
movsl
popa
mov
push
xchg
pusha
xchg
aas
adc
mov
xor
sub
sahf
xor
xchg
in
mov
call
lea
mov
mov
mov
jns
jle
cltd
mov
xor
pop
jns
xchg
mov
dec
jne
les
pop
push
pop
dec
enter
push
mov
es
pushf
bound
add
popa
inc
inc
sub
sbb
outsl
or
cmc
in
xor
push
testb
jecxz
xor
dec
push
clc
into
arpl
jbe
call
xor
lods
outsb
imul
dec
out
out
inc
or
xchg
pop
sub
test
test
xor
mov
out
inc
or
or
gs
mov
imul
jns
test
aam
daa
ret
mov
xchg
mov
sbb
xchg
xchg
test
or
insb
jl
jbe
jb
cmp
fcompl
iret
jl
cmc
add
inc
mov
mov
imulb
sub
inc
mov
mov
and
es
repnz
push
nop
and
movsb
mov
arpl
loope
loopne
lea
mov
xchg
mov
jecxz
sub
pop
jb
out
push
movups
jmp
add
jmp
jno
inc
dec
insw
xor
and
data16
in
jb
inc
cwtl
jbe
mov
xor
shll
insb
mov
mov
add
cmpsb
pushf
dec
enter
ret
mov
jge
mov
jbe
fmull
or
mov
in
ja
mov
ret
pusha
inc
push
cmp
call
outsb
xchg
mov
pusha
ror
inc
add
sbb
add
fimuls
enter
jne
adc
and
pop
add
xchg
and
push
jb
lds
lahf
sub
movl
cmp
sahf
fdivl
and
mov
out
int
push
xor
clc
iret
mov
jge
fildl
data16
loop
test
xor
push
dec
loop
xchg
jp
das
mov
fs
dec
mov
dec
and
das
repz
fildl
iret
rcl
or
mov
repz
pop
cmp
pusha
push
lret
inc
sub
aaa
add
cld
mov
insl
punpckldq
daa
outsb
je
pop
xor
call
fsubrl
jns
rcrb
jp
pop
mov
and
lods
dec
mov
movsb
dec
adc
mov
jecxz
dec
ret
test
cmc
das
push
pusha
sub
ss
jae
shl
lods
push
push
and
adc
out
or
inc
and
out
nop
shl
push
sbb
push
jle
mov
sub
fs
fistl
iret
and
cmp
cmpsl
es
add
mov
out
fisubrs
sti
adc
jae
inc
inc
int
add
js
sbb
mov
aas
mov
iret
fnsave
les
enter
scas
mov
and
dec
jecxz
and
xor
pop
mov
xchg
mov
xchg
push
dec
cli
roll
out
ds
loop
jge
mov
mov
xor
adc
pop
or
mov
in
mov
xchg
lock
test
push
adc
pop
out
push
lods
adc
jge
scas
xchg
xor
and
push
scas
jo
lret
pop
outsl
sbb
lcall
and
sbb
rcll
inc
xchg
in
test
std
imull
jns
js
xchg
xchg
mov
bound
add
sbb
sahf
lahf
or
iret
adc
shr
cs
into
push
scas
or
ljmp
out
test
les
push
sti
arpl
and
ret
test
add
ret
jb
and
push
push
xor
push
inc
sub
iret
notb
add
xchg
pop
dec
testl
je
shll
inc
adc
fidivrl
dec
in
scas
test
fdivrs
mov
adc
pop
mov
dec
iret
ja
xchg
push
mov
pop
adc
adc
inc
dec
mov
in
xchg
inc
sti
out
pop
xor
hlt
flds
push
cwtl
in
std
jg
cld
lock
pusha
sub
sar
mov
fs
jmp
loope
test
fsubrp
addl
test
sub
in
dec
jae
mov
lock
nop
sbb
push
aas
push
xor
loop
popl
pop
test
push
mov
and
rolb
test
xor
or
aam
mov
sbb
fadds
test
cli
ficoms
pop
pop
insl
push
ffreep
and
adc
jg
jno
hlt
xchg
push
loope
cmp
les
add
ret
out
fistpll
shrb
insb
movsl
xchg
cs
add
lods
add
adc
and
mov
sbb
pop
mov
inc
xlat
in
movsb
push
je
rcrb
nop
push
mov
call
orb
fldt
lret
in
xchg
ret
dec
adc
jmp
sub
jmp
push
mov
or
imul
out
rorl
cli
movb
inc
loopne
mov
sub
in
stos
adc
popl
mov
xchg
cmpl
sub
push
bswap
jno
in
adcl
decb
sti
xor
mov
cmc
outsl
loop
sub
pop
call
cld
pop
xor
repnz
xchg
nop
or
mov
outsl
loope
sahf
xor
ret
jne
ret
std
cld
in
loopne
and
xchg
stos
push
dec
mov
lock
mov
xor
fdivl
pop
or
in
dec
leave
push
stos
stos
push
out
mov
jno
gs
mov
repz
inc
mov
add
push
mov
movsb
jae
push
pop
in
xor
stos
sahf
pop
pop
sub
stos
cwtl
and
jo,pt
inc
test
mov
js
or
xchg
inc
xchg
ret
inc
outsl
subb
movsb
call
add
adc
xchg
pop
mov
cmp
dec
fisubrs
cmpsb
pop
aaa
cltd
test
gs
ljmp
xchg
je
inc
add
mov
adc
jl
ss
jno
inc
test
jb
cli
dec
and
jae
mov
dec
pop
lods
loope
inc
iret
andb
sbb
in
jge
dec
jle
adc
sahf
xchg
hlt
inc
aaa
lret
xchg
lcall
frstor
int3
insb
mov
sbb
fiaddl
jge
js
sub
mov
aaa
std
cmpsl
add
out
test
sbb
mov
scas
ficoms
outsb
lret
mulb
orl
nop
lcall
out
xorl
leave
pop
xchg
and
js
xchg
mov
rep
in
subb
xor
jge
lea
xlat
sbb
xchg
and
int3
loop
adc
xor
add
arpl
push
cld
dec
or
popf
shl
popf
xchg
mov
loopne
leave
mov
and
repnz
or
jno,pn
in
outsl
xor
adc
movsl
out
sbb
push
adc
inc
pop
es
pop
hlt
push
shl
popf
ret
pop
test
adc
pushf
cli
adc
push
call
int
push
aaa
jbe
jb
pop
mov
xor
into
cld
inc
sti
or
cmp
push
add
inc
and
mov
jmp
adc
add
adc
das
dec
push
fdivrs
test
imul
in
jecxz
insl
test
ret
xor
movsb
xchg
iret
out
out
movsb
jp
dec
outsb
and
cwtl
out
in
out
add
or
imul
sahf
les
add
loope
and
lods
xchg
sub
cmc
or
fs
data16
add
subb
xchg
les
aas
imul
mov
fisubs
xchg
pop
mov
aad
xor
xchg
dec
repnz
or
out
push
je
push
and
insl
pop
icebp
mov
ja
int
jge
es
mov
outsb
cmp
pop
jmp
push
jl
pop
daa
lret
pop
jp
adc
sbb
cmp
cmpsl
inc
mov
pop
xchg
jo
add
push
jg
fnstcw
xor
mov
jmp
xchg
push
adc
push
inc
adc
jecxz
xlat
cli
lds
jne
jnp
lods
pop
mov
and
stos
test
push
repz
sub
jp
fcomip
sub
mov
sbb
insl
mov
rcrl
cmpl
ret
popa
xor
sub
stos
pop
fiadds
mov
mov
xor
inc
in
jmp
movl
enter
aas
and
jns
iret
mov
add
jb
lds
xlat
and
pop
das
enter
lock
sti
out
test
aaa
push
sub
lret
pop
insb
mov
inc
cmpsb
addr16
mov
push
xor
dec
inc
jne
mov
ret
add
rclb
test
push
test
popf
pop
jns
outsl
jae
popf
adc
jecxz
stos
cli
add
clc
mov
add
push
scas
mov
lret
cmpsb
loopne
test
jo
mov
adc
adc
jge
insb
bound
push
sarb
inc
cld
movsb
or
jnp
out
sbb
and
fisttps
aas
sub
fldcw
in
fidivl
lds
cmp
inc
popa
ret
in
adc
gs
loopne
adc
pop
aam
inc
call
mov
decb
int3
mov
stos
add
xchg
repnz
mov
and
ljmp
mov
push
stc
mov
adc
xchg
jp
cld
jo
jge
xchg
adc
pop
andl
stc
add
in
push
mov
or
and
lods
scas
nop
in
add
in
pop
push
and
mov
cmp
sbbl
jbe
ret
and
in
cmp
dec
mov
xchg
addr16
cmp
es
adc
stos
fcomps
dec
loope
sbb
jmp
xlat
movsl
push
mov
push
or
clc
pop
cmpsl
ljmp
out
jp
sub
add
pushf
xor
pop
pop
dec
inc
xor
in
mov
push
mov
in
sub
movb
icebp
ljmp
add
ja
in
fimuls
rol
rcr
push
mov
repnz
ja
call
mov
hlt
bswap
aas
cs
rorb
xchg
cwtl
xchg
xchg
das
and
ljmp
filds
xlat
fildl
add
cwtl
cs
shrb
mov
adc
enter
lock
repnz
scas
add
or
jmp
xor
out
xchg
adc
adc
addl
ljmp
orl
push
movsb
add
inc
adcb
push
lcall
repz
and
mov
adc
jns
or
int3
lods
mov
ss
mov
fisubs
sbb
dec
jno
sub
add
mov
mov
leave
mov
pop
cld
dec
loopne
les
inc
movsl
out
xchg
adc
adc
jle
jb
repnz
dec
jp
ja
mov
es
movsl
xchg
xlat
mov
mov
repnz
cmpsb
or
nop
iret
gs
daa
fwait
jl
add
icebp
add
dec
int3
out
or
mov
fbstp
mov
into
sti
cmp
xor
adc
cmpsl
push
or
mov
cmp
adc
sub
roll
push
mov
mov
and
push
sub
lds
cld
cltd
sub
bndstx
and
dec
shrl
adc
dec
stos
arpl
xlat
jge
cmp
lods
fcoml
fs
inc
in
push
outsl
jno
add
roll
cmpsb
adc
cmp
jbe
out
cld
mov
test
mov
lock
andb
mov
jbe
cmp
push
sub
mov
push
jns
fnstenv
or
popf
push
enter
cmp
cmpsb
in
push
stc
dec
cmp
outsl
lock
and
push
add
neg
push
push
push
mov
call
and
xor
pop
inc
jnp
sub
add
pop
mov
xchg
mov
lock
and
cli
orb
sbb
inc
imul
inc
xchg
popf
jg
pop
out
mov
mov
sbb
dec
das
aaa
cmp
aad
cld
inc
std
fmulp
imul
incl
dec
ss
inc
cld
in
test
mov
and
ss
or
add
fbld
and
je
mov
mov
lret
jecxz
ja
cmp
push
jnp
sub
movsb
cmc
cmp
daa
adc
ret
pop
inc
mov
push
xchg
mov
mov
add
sbb
dec
pusha
jp
negb
mov
push
jecxz
and
mov
push
movsl
scas
scas
dec
test
pop
pop
cltd
loop
cmp
shll
xchg
add
adc
jo
stc
xor
adc
dec
xchg
insb
and
xlat
aad
cmp
add
sbb
scas
stos
sbb
xor
push
xchg
ret
push
pop
fsubl
cmp
or
mov
mov
out
mov
push
push
popa
scas
clc
jns
inc
sahf
jo
jo
xor
cmp
test
into
out
xchg
jmp
out
push
lahf
dec
insb
cmp
pop
ja
loopne
negb
stc
rclb
inc
mov
sub
shl
ljmp
inc
divb
test
mov
jne
and
sbb
js
lods
adc
call
mov
ja
mov
outsl
or
xlat
call
add
xchg
add
jb
cld
lcall
shl
rcll
push
push
ja
jnp
push
out
adc
cmc
mov
xor
dec
mov
push
dec
sti
stos
arpl
xchg
in
lea
mov
outsb
es
adc
in
iret
cmp
aad
sub
sub
call
dec
add
add
fwait
push
pop
or
enter
pusha
std
jmp
fistps
lahf
ljmp
cld
mov
sbb
xor
jno
pop
jae
xchg
push
out
ret
jl
inc
ds
or
xor
cmc
jb
inc
enter
sbbb
sti
xor
daa
xor
subl
mov
dec
pop
jbe
addr16
push
lea
cmpsl
jb
aad
mov
mov
lahf
xor
popf
pop
shl
mov
ljmp
test
iret
arpl
fcomps
loopne
or
dec
jl
adc
cmc
fcomp
lcall
xchg
mov
xchg
mov
addr16
outsb
adc
xor
jbe
mov
push
insl
std
lret
and
fcomip
in
loop
out
mov
loop
pop
mov
cmpb
mov
mov
nop
dec
pop
ljmp
xchg
cmp
add
bound
sbb
push
push
cmpsl
jbe
leave
push
jg
fadds
push
sbb
mov
lods
mov
sarl
div
inc
repnz
jns
push
incl
aad
sbb
fwait
pop
fmull
lea
or
pop
mov
sbb
enter
xchg
fnclex
lcall
mov
adc
jp
jmp
jnp
xlat
lds
jge
lcall
popl
mov
cmc
push
aam
divl
mov
test
xchg
in
insl
ret
xor
xchg
mov
pop
test
rcr
cmp
lea
xchg
inc
bound
idivb
cmp
cmc
sub
popf
xchg
je
push
sub
inc
add
addr16
ss
sarb
aaa
fucomp
cmpsl
addr16
in
push
add
push
fnsave
scas
and
in
and
push
push
and
test
shr
out
push
jle
mulb
dec
xchg
push
mov
add
and
sub
cmp
movsb
dec
xchg
fidivl
in
rorb
sub
push
stc
movsl
iret
inc
mov
push
xchg
lcall
cltd
cmp
dec
orb
jle
es
pop
cmp
addr16
xchg
dec
add
lds
loopw
mov
xor
jbe
ficomps
push
pop
imul
sub
push
repz
mov
jle
cmpsl
mov
shrl
cwtl
repz
inc
in
or
int
mov
cmp
test
xchg
sbb
fidivl
mov
mov
cmp
mov
push
addr16
xlat
fcmovb
sbb
rclb
loopne
sbb
jnp
lock
pop
push
cld
inc
and
jnp
pop
in
xor
pop
lds
fisubl
add
jge
shrl
hlt
inc
test
mov
push
pop
xchg
ljmp
loopne
je
lret
pop
add
pop
inc
fcmovu
jb
jne
insl
test
mov
cmc
xchg
mov
repnz
jge
fnstsw
fsubrs
jno
call
jge
jmp
sbb
orb
pop
imul
arpl
cltd
sub
inc
mov
add
ret
jno
ss
repz
int
sti
loop
dec
xchg
gs
pusha
add
cmp
sub
dec
xchg
repz
je
push
pop
xchg
inc
pushf
cmp
das
out
or
mov
pop
mov
push
enter
cld
cld
test
adc
lret
inc
gs
sub
pop
push
inc
sub
adc
mov
ljmp
mov
je
pop
xchg
sbb
in
xchg
pop
test
stos
or
sub
cmp
lods
int
out
rclb
rol
outsl
inc
lcall
mov
dec
aaa
rcr
add
lret
mov
sahf
or
lea
repnz
jno
add
xadd
jp
fildll
pop
fwait
adc
out
repz
add
fucomip
adc
movsl
cmp
test
bswap
enter
out
lea
in
or
fidivrl
test
ss
or
dec
push
sub
ret
test
dec
jp
mov
outsl
jl
xchg
mov
lods
shll
lahf
adc
mov
dec
rolb
mov
jne
jmp
sbb
push
cmp
xchg
add
mov
sbb
mov
mov
and
jae
clc
std
or
repz
xchg
ds
ret
adc
loopne
lea
pop
arpl
int3
xchg
add
push
popa
push
mov
mov
rcrl
addr16
cmp
int3
inc
sub
fs
dec
push
pop
add
jbe
test
pop
lahf
int3
fwait
xor
insl
call
clc
outsb
pop
nop
iret
mov
into
pop
in
mov
xchg
cmc
jp
shr
sbb
mov
mov
int3
or
xchg
addr16
and
jg
scas
out
test
insl
outsb
sub
enter
dec
insl
xchg
test
jne
mov
add
push
adc
sbb
push
dec
add
lock
sarl
sub
pop
adc
lds
mov
addr16
outsb
and
xchg
addr16
dec
movsl
out
mov
es
xchg
inc
jae
ret
mov
icebp
cmpsb
mov
cwtl
adc
cmp
into
push
adc
shrb
pop
shll
test
andps
rclb
mov
aad
jno
xor
insb
mov
imul
shl
sbb
clc
data16
je
cmpb
test
enter
dec
scas
pop
pop
sbb
push
test
cli
dec
imul
ret
inc
outsl
xchg
mov
fwait
dec
pop
jae
xchg
fwait
sub
rol
fwait
xchg
in
data16
scas
add
in
jbe
imul
mov
xchg
pushl
in
shrl
in
js
mov
sti
scas
imul
cmp
out
mov
das
cmpsl
scas
in
mov
dec
scas
mov
mov
jns
es
push
jmp
mov
push
push
and
lock
pop
sbb
fisubl
mov
mov
je
inc
add
mov
add
push
xor
xchg
call
push
jge
push
mov
leave
push
mov
mov
lcall
dec
add
jecxz
push
lret
scas
inc
mov
cmp
fldenv
repnz
mov
dec
mov
cmp
or
in
inc
in
push
cmp
bnd
sbb
inc
mov
es
cld
mov
add
mov
jae
testl
filds
negb
xor
and
mov
push
add
mov
cltd
pop
jne
in
mov
mov
stos
xor
cmp
push
test
sub
out
dec
and
sbb
cmp
das
xchg
or
xor
shlb
mov
pop
bnd
push
lcallw
arpl
loop
roll
push
push
jae
dec
xor
stos
jo
cs
fnstenv
enter
sahf
divb
ja
or
mov
sti
in
les
dec
stos
add
jl
add
and
arpl
push
andb
imul
mov
lock
add
in
addb
insl
or
ret
aad
out
cmp
jmp
inc
sub
nop
xor
fld
dec
outsl
notl
xor
pop
dec
add
mov
push
or
ret
jne
out
insl
or
std
xchg
arpl
add
sbb
stos
lods
mov
test
mov
fsubrs
fwait
loope
adc
loop
daa
out
popf
sbb
call
insb
insb
push
aad
push
loope
cmpsb
pop
jb
mov
cs
xchg
rcrb
shll
fdivl
xor
cmp
sub
scas
cmp
xchg
cmp
addb
adc
jmp
push
lahf
fadd
out
nop
pop
adc
jnp
mov
pop
shr
ret
aas
push
sub
push
stos
mov
push
dec
popf
pop
xchg
cmp
pop
shlb
sub
test
icebp
dec
jns
inc
adc
mov
sti
xchg
push
cmpsb
xchg
test
cld
sbb
sub
ljmp
imul
mov
sbb
jnp
xlat
mov
hlt
cli
push
insl
jecxz
jl
xchg
insb
pop
mov
inc
ljmp
xchg
jnp
fistpl
aas
or
test
sahf
inc
pop
add
out
loope
dec
cld
mov
cmc
aas
movsl
mov
mov
mov
mov
push
je
cmp
jnp
leave
pop
loopne
dec
pop
ljmp
inc
sbb
int
cwtl
xorl
lods
sbb
scas
outsb
je
into
xlat
mov
imul
out
and
adc
cmpsl
mov
and
cli
je
jge
mov
je
stos
push
ds
in
das
xor
or
fsubl
pop
xor
and
filds
clc
loope
lds
mov
enter
and
repnz
add
lea
in
and
cmp
repnz
push
ds
jmp
cs
out
orl
pushf
lods
jae
stos
xor
push
pop
jge
ljmp
sub
adc
pusha
clc
jno
mov
outsl
shrl
jmp
lahf
aad
fadd
mov
and
cmc
inc
jns
sub
and
movsl
lcall
xchg
cltd
loope
lret
aas
shrb
pop
or
push
shll
dec
mov
stos
imul
pop
mov
shrb
icebp
scas
mov
and
mov
mov
lret
mov
subl
and
jb
in
push
xchg
pop
roll
fwait
xchg
lds
test
and
cmpsb
xchg
mov
xchg
xor
fldt
xchg
push
int3
push
aam
insb
aas
sub
mov
cmc
lods
enter
lcall
dec
fists
inc
mov
or
dec
dec
int3
xor
push
popa
mov
mov
hlt
sbb
or
sbb
iret
and
rcll
sub
mov
xor
dec
cli
pop
dec
jne
sbb
fidivs
movzbl
and
xlat
add
mov
je
push
je
inc
and
cwtl
in
xlat
or
leave
mov
scas
pushf
jns
iret
sub
jbe
push
adc
xchg
xor
pop
jo
sbb
iret
add
stos
dec
jecxz
out
mov
shr
jb
dec
jb
mov
dec
fucomp
add
sbb
add
or
jo
dec
enter
cmp
punpckhbw
add
and
xchg
jo
test
test
inc
mov
inc
jp
xor
ljmp
in
mov
push
cmp
xchg
jnp
push
pop
jg
adc
mov
imul
jno
into
pushf
adc
xchg
pushf
xor
ja
add
sbb
pop
sarl
push
addr16
arpl
cmpsb
add
sub
in
icebp
mov
mov
ds
jae
push
fmull
es
xlat
jmp
mov
pop
sub
push
sub
xchg
xchg
clc
lock
or
cltd
notl
or
jnp
pop
lcall
ja
movsb
test
adc
and
inc
shlb
adc
push
sahf
iret
push
pushf
imul
fistpll
mov
repz
mov
aam
mov
inc
cli
cmp
add
pop
daa
push
sub
add
push
stc
mov
xor
lret
pop
cmp
cld
xchg
or
lret
out
mov
cmp
fstl
fs
xor
push
in
xor
ret
jno
cmp
dec
mov
addl
add
loope
mov
push
pop
and
dec
sbb
mov
lcall
pop
sbb
mov
out
lods
add
sbbl
arpl
dec
sti
arpl
jbe
outsl
test
jge
add
pop
aas
inc
popa
outsl
jne,pn
xor
roll
dec
mov
and
xor
dec
cld
mov
mov
imul
mov
outsl
jne
cmpsl
fdivrl
loope
repnz
xchg
push
pop
mov
mov
mov
in
arpl
imul
add
push
mov
insb
jo
inc
push
ljmp
aas
aam
out
repnz
ret
dec
xchg
outsb
cmc
loopne
jmp
cmc
mov
ret
push
mov
cmpsl
inc
test
inc
mov
cmp
xchg
cld
scas
lahf
cld
insb
mov
pushf
inc
xchg
int3
test
xor
cli
lds
xchg
sub
mov
movsl
loope
out
jmp
lock
pop
loop
rclb
sahf
in
dec
pop
mov
jo
shr
cld
add
mov
push
ljmp
sbb
push
aas
in
dec
pop
add
orb
or
pop
sbb
push
push
add
push
fs
sahf
ja
into
out
daa
sub
xor
insl
xor
or
and
aas
sub
inc
push
pop
jbe
mov
mov
mov
xor
adc
jmp
in
sarl
popf
push
popa
sbb
lea
je
xchg
pop
bound
int
call
mov
sahf
lcall
movsl
stos
dec
sarb
mov
addl
repz
push
mov
adc
sub
adc
mov
sub
out
das
pop
adc
psubq
data16
sub
mov
jb
je
mov
adc
cmc
stos
dec
push
stc
dec
cmp
jl
iret
test
ljmp
jl
inc
mov
or
addr16
and
xchg
mov
add
insl
repz
jno
sbb
inc
push
ret
pop
fwait
scas
in
outsl
and
cli
cmp
mov
cmpsl
stos
sub
test
mov
adc
mov
int
inc
out
jne
and
aas
adc
notl
ja
inc
xchg
out
idivl
jne
leave
cmp
addl
sbb
dec
pop
sbb
test
sbb
pusha
stos
outsb
sarb
daa
daa
into
cld
pop
daa
mov
jp
adc
lods
mov
mov
mov
insb
mov
and
add
cmpsb
mov
cmp
arpl
loop
xor
popa
jne
sub
mov
push
sbb
lock
xor
adc
aam
rorl
or
jp
adc
mov
cmc
add
cld
imul
cmpsb
scas
out
jle
push
je
test
jo
push
inc
je
dec
cmpsl
mov
jno
inc
pop
pop
inc
popf
es
movsl
loop
mov
aas
ret
xor
sbb
mov
fs
andl
js
mov
jle
mov
ret
addl
cltd
xchg
cld
pop
push
pop
lcall
xor
mov
dec
repnz
jno
gs
aam
dec
adc
inc
out
out
sbb
and
jle
and
cmp
mov
in
fiaddl
pop
js
enter
test
inc
subl
pop
jecxz
push
mov
mulb
cmpsl
dec
xchg
pop
mov
mov
movsl
cmpsb
or
xchg
stos
mov
orb
or
xchg
adc
pop
andb
sbb
pop
movsl
add
cmp
inc
loopne
cwtl
sbb
clc
ss
nop/reserved
rol
mov
andl
jmp
xchg
outsb
rolb
push
loopne
inc
data16
mov
and
rcll
add
or
xor
xor
or
inc
pop
test
icebp
push
fsts
test
insb
sub
mov
push
dec
je
dec
xchg
ret
push
insl
or
mov
or
pop
mov
mov
inc
mov
aad
testl
notb
data16
lahf
xor
scas
or
test
aas
xor
sar
in
leave
mov
adc
mov
ret
repnz
xor
test
fiadds
leave
dec
mov
sub
mov
dec
je
loope
inc
fs
aaa
lahf
add
cmp
aam
movl
ss
aad
pop
mov
dec
inc
scas
lcall
xor
mov
aam
loopne
ror
mov
bound
dec
lods
xchg
bound
into
sbb
out
test
push
int
shll
dec
rolb
xor
rcrl
mov
push
mov
shrl
cmp
insb
das
lahf
and
dec
push
mov
sbb
mov
and
loopne
pop
aaa
mov
push
mov
sub
ds
xorb
dec
push
cmp
inc
inc
sub
fucom
pop
imul
std
sbb
popa
jns
xchg
inc
mov
push
pop
movsl
adc
jne
cmpsl
fwait
inc
xchg
push
mov
cltd
pusha
inc
ficoms
out
cmc
pop
movl
and
aad
mov
sbb
rcrl
mov
mov
ljmp
out
fistps
push
movsl
pop
add
imul
xlat
aaa
lret
je
mov
mov
dec
addl
sbb
int
and
xchg
sub
out
fmul
mov
fisttpl
arpl
lea
or
fistpll
push
inc
loopne
xor
inc
mov
vpsrad
mov
ja
icebp
dec
mov
xchg
dec
inc
adc
popf
cmc
into
sti
adc
jo
jns
sbbl
nop
in
mov
and
sbb
xor
push
cltd
inc
das
incb
in
xchg
xchg
sbb
cld
sbb
dec
xchg
xor
adc
push
jb
push
lcall
cmp
fwait
rorl
rcrl
pop
add
lock
popa
ror
inc
add
pop
mov
mov
cmp
xchg
mov
clc
mov
es
push
add
or
add
cmp
stos
stos
push
jmp
std
jns
cld
movsl
sbb
add
stos
xchg
lods
cmp
or
sbb
nop
into
fst
out
pop
test
enter
or
dec
mov
out
stc
test
imul
and
cmp
fisttps
push
jbe
xchg
cmc
xor
test
in
imul
cli
inc
inc
cld
inc
push
int3
inc
es
push
mov
pop
adc
loop
lahf
cld
or
jns
fsubp
pop
ljmp
test
mov
or
test
repnz
mov
inc
in
dec
sub
mov
out
fwait
mov
aas
mov
jl
lock
jns,pt
xchg
dec
adc
jmp
pop
arpl
dec
mov
inc
sub
mov
pop
dec
push
fcompl
xchg
dec
push
push
fdivrl
jno
xchg
outsl
mov
add
add
leave
mov
std
or
push
lcall
adc
inc
sbb
movl
int3
mov
lret
adc
adcb
pop
jle,pn
cld
cwtl
pop
mov
pop
test
or
sahf
mov
dec
mov
out
jge
jmp
mov
push
dec
out
mov
sbb
push
outsb
xchg
test
and
or
orl
mov
mov
mov
test
ja
adc
fsubrs
lods
and
dec
and
rolb
xor
test
pop
in
pusha
add
movsb
clc
jae
pop
and
in
jmp
cmp
mov
cmp
fadds
mov
mov
orb
cltd
and
nop
ss
dec
cmc
mov
shl
lock
sbb
dec
pusha
cmp
imul
rcll
je
push
mov
pop
cmp
and
test
clc
xlat
ficoml
sbb
incl
mov
pop
aaa
push
lcall
sub
and
xor
pushf
pop
mov
aaa
inc
jno
push
jne
sbb
fsubs
push
pop
mov
std
adc
mov
dec
inc
std
cmp
mov
pop
sti
pop
aad
push
xor
add
cmc
dec
scas
sbb
ds
int
movsb
cs
dec
loopne
push
sub
adcl
dec
jp
pop
lahf
and
cmp
add
ret
movsb
cmp
sbbl
lcall
xchg
stos
lea
sub
adc
fs
xchg
jns
imul
pusha
mov
fmul
adc
and
and
mov
add
cltd
fidivrs
das
in
cmc
push
push
jbe
mov
mov
icebp
test
inc
lcall
add
popf
lahf
inc
xchg
mov
movsb
inc
jno
xchg
popf
xchg
jnp
or
scas
jge
xchg
add
inc
inc
inc
xor
mov
jo
leave
jnp
mov
movsb
imul
cmc
dec
mov
sub
out
jp
inc
or
cmp
xchg
in
push
outsl
in
xchg
push
add
pop
mov
fcom
rcrb
int3
insb
out
xchg
sub
inc
mov
xchg
pop
jle
or
ja
shrl
negb
mov
sub
cwtl
jecxz
mov
jnp
or
mov
loop
jbe
inc
or
mov
push
fs
jne
add
ljmp
in
repnz
ret
cmp
call
lahf
or
mov
aas
sub
popl
xlat
mov
or
sbb
sub
xor
or
jl
loopne
outsl
int3
insl
stos
sbb
cltd
cmp
sahf
pusha
cld
pushf
movsl
arpl
mov
lock
push
mov
mov
repnz
sub
mov
sbbb
adc
icebp
ja
repnz
adc
js
cwtl
aam
cmpsl
pushf
pop
xchg
lds
sahf
gs
jne
out
jne
adc
int3
repz
jnp
or
jae
sbb
in
and
sub
push
ret
mov
into
imul
cmp
lock
dec
jge
sbb
imul
loope
adc
mov
dec
mov
divb
data16
mov
adc
fcompl
test
outsb
cmp
mov
push
mov
sbb
jle
call
insb
imul
or
cmp
inc
mov
adc
lret
lcall
cmp
mov
fwait
or
dec
adc
inc
jb
inc
sahf
test
andb
sub
in
dec
jbe
movsl
nop
je
dec
pusha
shll
pop
mov
sarl
repnz
lret
outsb
push
fwait
aaa
inc
mov
je
mov
and
fstps
or
push
pop
lret
cli
dec
lea
orb
hlt
fstpt
stos
push
outsb
xor
sub
int
jecxz
mov
inc
loope
dec
jns
cmpb
cmp
dec
mov
mov
dec
int3
out
or
xor
in
xchg
pop
add
ret
ret
mov
and
ljmp
mov
xor
lahf
inc
cmp
scas
imul
and
xchg
test
cmp
cwtl
mov
mov
dec
stos
xor
mov
loop
xorl
cmp
cs
jg
mov
mov
or
mov
outsl
fiadds
xor
sub
or
call
fistpll
es
mul
sub
hlt
loop
popf
cmpsb
dec
rcll
std
in
mov
or
adcb
cltd
dec
mov
dec
push
insl
inc
cmovns
sub
mov
push
mov
std
and
insl
cli
xor
mov
outsb
imul
pushf
std
jp
mov
jae
adc
dec
leave
insl
sbb
stos
and
pop
push
jmp
dec
mov
mov
sbb
push
div
pop
lock
push
mov
pushf
movsb
lods
push
adc
fxch
jg
mov
insb
int
add
ror
cmc
shlb
rclb
push
mov
rcr
enter
mov
and
adc
imul
lods
push
cmp
or
arpl
pop
fcomps
add
mov
and
mov
mov
push
add
in
sbb
xchg
fdiv
aam
xchg
push
add
push
or
lds
sub
jp
les
xchg
or
data16
push
add
rcrb
or
push
mov
jae
inc
enter
or
aam
gs
mov
jmp
repnz
push
xor
in
mov
pop
push
pop
shrl
xchg
jns
pop
push
push
and
sbb
testl
sbb
xor
adc
lock
or
jnp,pn
out
adc
pop
jo
insb
adc
xor
xchg
xchg
hlt
fdiv
push
es
fnstcw
aam
testl
inc
nop
pop
or
add
mov
add
imul
fnstcw
add
mov
leave
lods
mov
add
in
rcrb
add
xchg
jmp
shr
add
jecxz
or
ss
xchg
xchg
push
mov
push
sbb
mov
adc
pushf
test
xor
sub
xchg
mov
gs
cmp
loopne
sbb
xchg
xchg
subb
cmp
ljmp
adc
cmp
push
cmp
push
rcll
insl
dec
sbb
jl
out
xor
mov
fwait
aas
mov
push
cltd
lcall
popf
das
loope
sub
popa
xchg
das
lcall
out
cli
mov
mov
cmpsl
fadd
cmpsb
dec
cmp
pop
repnz
movsl
jno
sbb
cld
mov
push
pop
dec
or
xor
and
pop
ret
call
in
cmp
mov
ret
mov
int3
aaa
and
pop
push
fucomp
pop
lcall
cwtl
jmp
test
mov
cmp
fistl
xor
or
mov
mov
out
dec
ljmp
arpl
inc
and
pop
or
xchg
xor
sbb
cmp
jmp
dec
push
xor
nop
xchg
xchg
popl
test
add
out
lahf
stos
pop
push
inc
cltd
icebp
cmp
imul
mov
mov
fsub
mov
or
dec
mov
lret
adc
pop
sbbl
add
es
jl,pt
mov
xor
cmc
inc
xchg
adc
mov
mov
lahf
fwait
xor
adc
cmp
fadds
dec
and
arpl
loopne
mull
mov
lods
adcl
sahf
mov
movsl
icebp
pop
dec
jae
test
and
adc
mov
fistpl
or
loopne
xchg
cs
and
stos
fcmovbe
aas
out
xor
push
adc
pop
movsl
aaa
add
insl
aam
dec
mov
and
pop
lea
jb
arpl
add
cmpsl
mov
mov
mov
dec
lahf
add
mov
cmpsb
mov
inc
fs
push
sub
xor
mov
mov
adc
inc
and
stos
mov
in
sbb
pop
nop
int3
adc
bound
je
mov
pop
sahf
jo
clc
into
test
shlb
pop
insl
imull
pop
and
repz
outsb
xchg
and
addl
or
pop
jmp
popl
fstpt
jne
out
cwtl
dec
pop
pop
es
stos
push
aaa
and
xchg
and
test
test
cli
rol
clc
jae
cs
in
fldcw
sbb
stc
pop
fisttpll
xchg
dec
dec
inc
iret
xchg
shll
daa
lods
decb
ret
jle
xchg
fs
les
xlat
xor
ds
mov
fwait
sbbb
cmc
scas
in
loop
adc
mov
mov
out
lock
adc
mov
add
sub
inc
movsb
outsl
cwtl
sbb
jp
xchg
add
rclb
jns
mov
int
pop
xchg
add
pushl
arpl
into
lods
out
lods
push
mov
adc
fmull
imul
pusha
call
daa
mov
stc
mov
push
setno
pop
sbb
jg
cmp
movsb
sub
imul
enter
dec
dec
mov
jmp
or
mov
lock
and
fisttpll
arpl
xor
imul
dec
dec
outsb
lret
jnp
stos
pop
xor
mov
mov
ja
sbb
push
hlt
inc
push
cmp
bound
push
or
divl
push
push
mov
pop
jmp
sbb
jb
or
push
lods
fnsave
jp
int
dec
aam
imul
inc
xchg
lods
je
or
mov
lret
jge
movsb
adc
nop
push
setno
out
dec
std
sbbb
mov
jmp
xchg
fs
js
ja
in
pop
stos
pop
sbb
pop
mov
xor
out
pop
out
jnp
daa
mov
adc
jno
inc
sub
jns
insl
outsl
iret
in
mov
inc
jno
jmp
test
sahf
popa
cmp
fwait
outsl
fists
fildl
mov
imul
xlat
shlb
mov
fcom
iret
das
scas
mov
mov
jns
cmpsb
dec
inc
xchg
xchg
cltd
or
push
sbb
mov
add
inc
push
test
cmp
adc
clc
dec
ret
pop
xor
sub
jne
addr16
rol
mov
lahf
iret
xor
jno
lea
insb
jne
scas
add
stos
jae
movsl
inc
push
or
inc
testl
lods
push
xorl
cmp
jb
sub
imull
jo
cmc
imul
ret
sti
fmuls
idiv
vpsraw
mov
lret
or
jp
inc
stos
push
fmuls
mov
aad
inc
add
ja
lds
sbb
das
std
inc
pop
jge
xchg
movsl
xor
inc
sub
es
int
xchg
xchg
mov
in
pop
xchg
xor
xchg
test
add
into
mov
ja
cli
dec
xchg
out
dec
add
inc
adc
adc
fdivr
std
xlat
mov
push
movsl
gs
mov
push
std
add
push
mov
idivl
cmp
test
out
mov
ljmp
ds
fcompl
jne
fucomi
cwtl
jle
mov
fisttpll
sti
xchg
xchg
jp
icebp
rcrb
inc
test
ret
xor
popa
shr
xor
hlt
inc
lods
stos
xor
add
dec
xor
and
in
cmc
dec
stos
pop
xor
sbb
mov
mov
outsl
jno
dec
fstpl
dec
push
mov
jl
mov
cwtl
popf
movsl
in
fwait
jbe
cli
cmp
jmp
insb
push
xchg
lods
sbbl
sub
fwait
xor
fbstp
mov
mov
sub
cmpsb
pop
dec
or
sbb
cld
sti
nop
mov
xor
add
sub
ror
add
mov
push
out
xchg
and
dec
xchg
aad
mov
iret
outsb
clc
mov
cmpsl
xor
negb
mov
fidivl
test
cmpsl
lret
test
fnstcw
addr16
test
aam
mov
push
adc
imul
pop
or
insb
add
adc
jge
pop
cmp
mov
pop
mov
ficoml
push
pop
xchg
rcll
aaa
testl
fldt
stc
fdivrs
jmp
pusha
cmpps
pusha
mov
xor
push
or
add
inc
sub
gs
les
cltd
mov
nop
sub
add
decb
fadd
stc
imull
cwtl
fimull
cmpsl
fwait
xor
movl
pop
sub
scas
xchg
retw
add
test
fnstsw
mov
popf
lds
mov
dec
mov
scas
mov
sti
sbb
jbe
popf
cmp
push
push
in
mov
sub
ret
push
pop
adc
push
push
mov
je
sbb
jae
jbe
sti
sub
xchg
std
xchg
out
mov
pextrw
test
repnz
aas
cli
shl
pop
mov
push
inc
jae
mov
pop
dec
jl
mov
mov
jns
mov
dec
aam
pushf
sbb
imul
jle
add
add
add
mov
add
push
pop
adc
cwtl
adc
clc
mov
pop
jne
mov
movsb
pop
pop
adc
sub
dec
outsb
jae
repnz
xchg
cltd
push
lret
das
mov
in
dec
repz
out
lock
xor
stc
xor
pop
jbe
mov
pop
js
scas
daa
push
sti
push
fisubrl
lods
jae
orb
push
cmpl
das
push
pop
lock
and
add
sbb
lock
xor
ret
aam
xor
out
push
dec
xchg
test
xor
repnz
aam
jmp
xchg
dec
test
ficompl
leave
bound
jbe
inc
lret
cmp
sub
int3
stos
xchg
xlat
push
testl
shr
lds
inc
sbb
pop
xchg
sbb
mov
in
jl
and
push
cmp
fsubl
adc
mov
test
int
push
shrb
sbb
mov
sbb
inc
out
xchg
imul
in
out
dec
push
mov
cltd
inc
repz
ja
mov
pusha
imul
lea
popa
int3
jbe
jne
mov
push
lret
jae
inc
adc
sbb
mov
xor
sti
or
cmp
repnz
shll
movsl
xchg
and
xchg
pop
and
jmp
pop
frstor
out
je
shlb
cmpsl
std
dec
push
popf
jbe
aam
stos
scas
andps
mov
push
jne
loope
pop
add
mov
loop
cmp
add
incl
sbb
or
je
fstpt
jb
pop
mov
mov
inc
add
in
mov
out
stos
cmp
jne
or
mov
outsb
dec
fists
jle
les
lock
fscale
mov
rclb
aaa
inc
adc
jl
add
pop
adc
movsb
cmp
std
jo
push
dec
jg
mov
nop
push
inc
add
lock
add
pop
add
mov
ss
aad
and
cmpsb
jp
push
sbb
loope
dec
mov
cmc
or
sub
test
movsb
adc
dec
or
push
aad
insb
jmp
popf
pusha
popa
push
das
push
int
or
and
lret
int3
in
adc
imul
inc
arpl
outsl
bound
outsl
cmp
dec
pop
push
test
call
sarb
outsb
mov
lret
mov
cmp
push
and
xchg
xchg
adc
jecxz
mov
lea
cmp
test
sbb
test
ljmp
inc
cmp
adc
mov
outsl
push
xchg
addr16
sub
adc
bound
mov
int3
or
rorl
add
pop
xor
push
cmpsb
sub
aad
or
jo
inc
xor
cmp
jge
xchg
cmp
cmp
mov
loop
out
imul
or
in
mov
movsl
inc
fimull
sbb
stos
pop
fwait
rcrb
mov
or
mov
lret
out
cmp
fscale
inc
cli
or
cmpsb
in
push
stos
sub
add
mov
add
dec
sbb
mov
out
and
movsb
mov
push
mov
xor
leave
loop
sub
cmp
cltd
jo
dec
add
mov
xor
cld
mov
cmp
lcall
cmp
insl
pop
cmp
lods
inc
addr16
xor
loopne
mov
loope
aaa
clc
aas
mov
sahf
test
or
push
les
pop
std
nop
push
dec
jmp
sbb
lret
or
inc
cmp
mov
ret
sub
hlt
aaa
hlt
cli
mov
and
mov
movsbl
push
in
popl
pop
add
push
cmp
inc
inc
rcr
mov
jbe
out
cmpsb
or
pop
fxch
sub
xchg
or
test
jge
out
aaa
lods
clc
ljmp
lods
std
fbstp
xchg
iret
or
sub
mov
in
adc
jb
fistpl
std
xchg
push
xchg
add
mov
lods
push
out
jnp
sbb
xchg
mov
mov
lds
or
push
out
mov
stc
or
mov
addl
cli
sub
xor
adc
add
push
push
aas
jns
push
xchg
repz
out
cmpsb
pop
sub
mov
sub
mov
push
dec
mull
aad
lock
and
mov
aad
rcrl
lcall
aad
push
jb
sub
icebp
xor
cmpsl
ljmp
fadd
mov
out
jle
fisubrl
ja
sub
cmp
jmp
xor
sarb
rorb
push
sub
push
xor
push
lahf
mov
sbb
outsl
negb
mov
push
mov
mov
repnz
mov
sub
lahf
mov
ljmp
out
adc
sub
xor
push
fstps
dec
sub
imul
ss
lds
xchg
dec
lcall
inc
add
inc
scas
test
mov
subps
jae
stos
shll
in
arpl
cmp
xchg
cmp
scas
push
dec
hlt
jne
add
test
mov
dec
shl
loop
in
in
out
xchg
push
mov
mov
xchg
addr16
les
add
push
in
fldt
jecxz
dec
cs
inc
loop
sarl
xor
jb
bound
fdivs
jg
jb
lcall
test
icebp
push
inc
movsb
xchg
xchg
mov
jge
icebp
jns
and
push
test
mov
pop
lret
sub
imul
cmp
xor
mov
pop
inc
insb
insl
fsubl
and
imul
repnz
icebp
sbb
imul
pop
xor
mov
jmp
cmp
push
mov
mov
xchg
call
stc
repnz
jmp
jb
out
ret
outsb
pusha
pop
inc
and
mov
sub
loope
sub
mov
jns
dec
xchg
in
mov
jg
and
out
mov
addl
xchg
bt
sbb
fimuls
push
ja
dec
lret
or
fiadds
dec
andb
ret
pushf
xchg
jae
testb
sti
inc
xchg
sub
fld
dec
jo
sbb
inc
movsb
cs
or
xor
in
ret
cmpb
mov
pop
inc
xchg
test
inc
movsl
mov
or
pop
mov
mov
out
rep
add
jnp
aaa
push
or
mov
adc
jno
jl
movsb
aaa
or
adc
fldz
sbb
push
fwait
mov
in
mov
pop
dec
hlt
cmp
dec
adc
sbb
rcrl
jle
mov
bound
xchg
push
mov
push
mov
cltd
ret
mov
call
jnp
lahf
push
mov
dec
add
mov
repnz
lahf
imul
out
in
int3
adc
popa
or
add
test
adc
lret
cs
push
add
sbb
xchg
cmc
imul
cmp
adc
inc
xchg
pop
jbe
popa
sbb
dec
shrl
or
rorl
or
pop
or
and
mov
xchg
out
shlb
fiadds
iret
dec
movsb
aaa
into
push
sub
cs
fnstcw
sbbb
push
aam
jns
jae
pusha
orl
lea
add
adc
aam
xchg
aas
mov
call
cmp
outsl
test
push
mov
push
mov
sub
cli
dec
andl
fstps
sbb
fstl
pop
mov
mov
out
jnp
sbb
add
mov
mull
jmp
pop
adc
scas
sbb
hlt
outsl
sbb
setl
out
xchg
mov
in
mov
add
add
xchg
push
and
sti
xor
mov
insl
pop
xchg
fsubrs
mov
hlt
into
cltd
shld
mov
pop
or
jb
aad
cmc
xchg
movsb
jb
jl
dec
add
in
mov
mov
mov
add
js
stc
add
inc
fsts
cmp
aad
mov
push
cmp
cltd
cmp
hlt
popf
push
mov
fcompl
xor
adc
mov
pop
cmp
and
mov
cmp
dec
fistl
jle
jnp
mov
pop
dec
ja
xor
mov
push
mov
mov
xchg
xor
loope
addr16
pop
fstpl
sub
in
lds
cmpb
adc
dec
add
mov
dec
negl
xchg
push
ss
xor
fmuls
aas
ret
outsl
mov
add
cmpsl
sbb
out
imul
mov
sbb
pop
cmp
sub
jae
mov
cmp
push
dec
lock
adc
and
xor
sti
into
clc
aam
clc
adc
fcompl
cltd
xchg
pop
push
sarb
movsl
outsb
or
lock
mov
adc
adc
fs
lods
gs
call
cltd
xor
push
jecxz
or
mov
jg
mov
mov
sarb
inc
cli
mov
inc
test
cld
aam
push
repnz
push
fs
jns
lcall
or
cmc
pop
aad
in
xor
fmuls
sbb
stos
jecxz
xchg
mov
push
mov
imul
movsb
movsb
roll
push
mov
mov
scas
bswap
fmul
iret
mov
xor
insb
clc
sub
movsl
cmp
pushf
popf
lret
and
test
dec
and
lods
andl
mov
xor
xor
fstp
push
fisttps
jle
xchg
enter
pop
push
pop
int3
add
xor
std
jmp
test
cli
mov
popa
test
adc
rcl
ja
test
xor
call
aaa
cmp
adc
daa
push
push
jne
push
nop
push
jl
mov
xorb
jbe
jbe
call
add
adc
lret
xchg
pop
xchg
jne
push
loope
push
je
scas
lock
dec
addr16
or
pop
popf
adc
icebp
aaa
jbe
test
lea
lahf
cmpsl
in
shrb
fcompl
pop
or
int
push
je
pop
dec
scas
adcl
cmp
outsb
pop
pop
push
repnz
pop
push
push
popa
dec
mov
xchg
loope
and
in
lahf
cld
sub
add
insb
xchg
dec
loop
lcall
jo
insb
fdivp
push
out
mov
xchg
ljmp
inc
push
and
cmc
rorb
aam
mov
mov
shr
cwtl
dec
cwtl
loop
pop
rclb
into
aam
mov
xor
jge
push
and
aad
mov
jbe
out
inc
jns
cmpsl
sahf
xor
sahf
popf
dec
sbb
push
jle
jg
add
mov
rcll
jecxz
pop
jae
idiv
lcall
fnstenv
popa
sub
jp
or
into
lea
std
popf
dec
adcb
adc
add
mov
inc
dec
mov
xchg
cs
repnz
ljmp
aad
lahf
test
hlt
outsl
xor
push
mov
fstl
xchg
insb
lds
ss
mov
push
jne
fs
scas
sbb
jns
dec
mov
mov
push
mov
js
jne
cwtl
pop
ja
cmp
mov
lods
or
rcrb
pusha
dec
mov
xchg
sbb
add
test
pop
inc
jmp
jle
sub
dec
cmc
jns
sbb
or
adcb
orb
jno
mov
sub
add
dec
test
out
enter
xchg
fsts
lods
scas
lods
lret
jmp
loopne
jo
out
dec
aas
xor
pop
stos
cld
add
dec
inc
adc
sbb
mov
jecxz
mov
sub
adc
or
cmpsb
and
jbe
aad
dec
jo
idivb
mov
data16
fcmovne
inc
negb
popf
test
add
or
pusha
fs
mov
fdivs
les
popf
add
pusha
sbb
pop
fsubp
xor
dec
inc
xchg
ja
jecxz
jo
jle
das
gs
das
push
shll
dec
loopne
cmp
mov
add
mov
das
push
int
lods
nop
sub
inc
mov
insl
jg
lods
xlat
mov
mov
in
movsl
lods
iret
sub
into
xchg
pusha
shl
xorb
mov
imul
idiv
popa
jecxz
dec
cmpsl
sub
mov
lret
orl
jbe
movsb
adc
mov
test
jmp
cmp
xorb
lods
stos
idivb
mov
cltd
jmp
clc
aad
push
call
test
lahf
dec
mov
push
popa
mov
mov
mov
lods
push
mov
testb
push
mov
fs
mov
inc
and
int
cmp
dec
aam
ss
popf
gs
pop
sub
push
cmp
add
je
outsl
mov
dec
jmp
pop
pop
out
sub
jo
mov
data16
jae
pop
jp
push
fists
cmpsb
and
lcall
into
and
lods
cmp
xchg
mov
dec
mov
mov
iret
in
xchg
xor
or
rorb
mov
rcr
imul
xor
imul
mov
fmull
lods
pop
cltd
dec
mov
rorl
add
dec
push
bswap
add
inc
and
sbb
mov
xchg
mov
xchg
pushf
insb
jns
jecxz
push
inc
dec
jg
xchg
sub
sysenter
out
movsb
sbb
loop
sarb
inc
push
rol
lods
pop
cli
adc
scas
popa
inc
andl
in
repz
dec
adc
mov
jmp
mov
jno
mov
jmp
cmp
les
ret
sbb
data16
rcl
out
imul
sarl
sahf
sbb
xchg
movsl
or
das
ret
dec
cmpsl
iret
aaa
pop
sbb
mov
sarb
jge
jg
lods
push
arpl
in
orl
outsb
mov
leave
jl
or
sub
scas
push
or
jmp
scas
daa
mov
ds
pop
or
mov
or
fwait
adc
rcll
jl
pop
xchg
movsl
dec
push
add
push
fbld
cs
repz
adc
push
arpl
bnd
into
enter
inc
sbb
test
gs
xlat
sbb
sbb
imul
dec
xor
subl
add
push
push
rolb
push
fisttps
jmp
jl
hlt
out
push
mov
lahf
jae
dec
and
or
pop
scas
rorb
lds
dec
fbld
or
pop
jno
sbb
mov
mov
cmpl
push
jl
adc
pop
xchg
pmulhuw
push
dec
mov
pop
cmc
mov
mov
inc
filds
or
and
or
adc
cmp
inc
fs
aas
imul
fwait
outsl
mov
mov
test
decb
sbb
ret
jnp
js
push
fists
lods
push
cld
stos
enter
adc
mov
pop
cmpsl
mov
lock
xchg
cmp
or
mov
loop
mov
push
fbstp
xchg
bound
mov
mov
cs
repnz
decl
xchg
adc
pop
mov
push
add
jle
mov
dec
call
jnp
add
mov
or
rcrb
js
insb
push
cmp
xchg
movsl
sbb
mov
cs
push
loopne
and
lods
add
fsubrs
mov
mov
data16
clc
push
mov
push
lcall
daa
gs
push
pushf
lds
xchg
inc
add
cltd
jl
loope
mov
push
test
mov
out
adc
jecxz
sbb
fs
inc
rorl
dec
leave
pop
pop
out
pop
cs
pop
pop
neg
push
sbb
sbb
sbb
icebp
sti
pop
xchg
enter
ja
mov
in
xchg
inc
or
insl
ljmp
aaa
cmp
add
test
fcmovnb
rorb
and
jge
frstor
call
push
jns
dec
stos
shl
xsha1
cmpsb
or
jmp
int
sub
inc
testb
inc
jmp
lock
orb
adc
adc
xor
insl
cmp
xchg
push
dec
xor
fisubs
fildll
xchg
mov
jl
mov
ds
pop
push
mov
fistps
test
pop
mov
in
cmp
std
test
in
xchg
jne
sub
push
push
ljmp
in
lods
or
shlb
das
sub
mov
push
scas
pushf
or
push
xchg
in
xchg
out
leave
iret
imul
jmp
cld
xor
xor
dec
push
push
xchg
pop
repz
jae
je
shr
pop
stc
xor
add
mull
xor
lcall
sub
test
addb
xor
leave
mov
mov
pop
mov
jg
insl
mov
or
sbb
inc
loop
cmpsl
sbb
and
mov
mov
adc
xchg
or
cltd
xor
jbe
dec
dec
sub
movsb
aas
jle
cmpsl
adc
or
mov
dec
pop
shl
jae
adc
punpckhwd
in
xchg
jne
mov
xor
xchg
popa
daa
sub
ss
mov
cwtl
jl
lods
cmpsb
in
or
sbb
add
jl
movsb
mov
mov
or
orb
in
addr16
mov
cltd
sarb
xchg
aaa
cmp
ficoml
stos
pop
mov
mov
sahf
push
scas
aam
out
daa
adc
xchg
test
xchg
hlt
fbld
add
int
xchg
xlat
fistpll
je
idivb
hlt
jecxz
inc
mov
rorb
jnp,pt
or
ss
pop
insl
lock
gs
test
jg
jmp
jl
mov
dec
sub
sti
sbb
and
int3
or
jo
add
or
outsl
outsl
push
jae
insb
jecxz
daa
stos
cmp
mov
sub
loopne
addb
cld
mov
dec
hlt
repnz
repz
jne
bound
decb
xor
xlat
arpl
or
mov
or
mov
dec
clc
scas
mov
out
lahf
cwtl
lea
jne
ja
jecxz
pop
ja
gs
not
out
pop
sub
loope
scas
in
insl
sbb
lea
push
sub
sub
fldl
mov
sbb
rorl
sub
mov
sub
mov
cmp
push
sbb
push
daa
fcomp
iret
adc
jo
ljmp
cmp
lods
dec
testb
aam
scas
mov
fildl
fdivs
inc
dec
in
sbb
mov
add
sbb
icebp
lods
stos
xchg
xchg
pop
lahf
xor
fisubl
adc
pop
jno
xor
cmpsb
outsb
push
scas
into
mov
enter
push
movsl
xor
mov
adc
das
sub
mov
imul
aaa
rcrl
ja
fwait
sub
xchg
mov
mov
sbb
pop
aaa
jns
out
inc
cmpsl
xor
mov
mov
sub
sbbl
decb
outsl
arpl
addr16
xor
sub
adc
adc
cwtl
scas
test
pop
lcall
mov
movsl
jae
cli
cmp
mov
shl
push
pop
mov
jo
adc
or
mov
dec
xchg
sbb
sbb
rcrl
mov
jle
es
adc
cmp
push
fisubs
out
repnz
movsl
mov
int3
cltd
jle
push
pop
push
add
mov
cmp
adc
into
inc
jne
mov
jns
mov
and
ja
mov
pop
sbb
mov
pushl
int
mov
push
lods
mov
mov
or
add
xor
add
insl
mov
out
or
jbe
jae
test
addl
int3
mov
sub
daa
jns
das
pop
dec
mov
sahf
and
and
sbb
mov
cs
add
or
lret
mov
into
ret
push
sbb
push
jae
sbb
addr16
mov
shr
xor
pop
mov
mov
sbb
sbb
aaa
jg
ret
popf
insb
xor
lods
jl
mov
cmp
movsb
lds
mov
dec
push
xor
cmp
mov
mov
xor
cs
test
push
fildll
cmc
adc
mov
mov
ds
je
xor
stos
mov
push
loopne
out
sub
mov
push
jg
in
out
mov
ss
in
jns
push
stos
dec
cld
adc
xchg
xor
pusha
das
in
addl
xchg
divps
push
jge
stos
mov
stos
dec
mov
cli
std
inc
and
shrb
mov
scas
lea
lods
xchg
mov
mov
movsl
sub
jl
add
pop
sbb
and
adc
in
sub
mov
cmp
das
ss
or
outsb
mov
mov
xor
inc
pop
les
bound
mov
stos
ss
adc
cwtl
or
jbe
xor
orb
test
xchg
mov
jle
sar
cmp
push
icebp
stos
mov
fdivr
popa
ss
shl
and
cltd
call
or
push
loope
das
xor
cmpsb
sub
pushf
cltd
mov
cli
sub
das
mov
sbb
or
scas
jle
nop
jmp
movsb
test
add
rcll
sub
mov
es
adc
pop
insb
loopne,pn
jp
sbb
lret
inc
push
and
scas
faddl
cli
jmp
jl
and
sbb
leave
rcrl
sub
unpckhps
cmp
clc
lret
pop
addr16
jle
and
pop
test
test
or
rcll
or
xchg
hlt
mov
inc
test
scas
inc
in
pusha
es
or
and
cmp
and
push
mov
aaa
dec
lret
ja
sar
or
cmpsl
lahf
ds
out
add
sbb
cmpsb
push
out
push
in
ljmp
dec
xlat
cmp
mov
cmp
psubq
jge
mov
iret
stos
xchg
ret
jl
outsl
es
daa
mov
mov
das
mov
or
dec
mov
inc
cmp
mov
push
loop
imul
outsl
aad
arpl
or
sub
dec
and
repnz
jbe
test
je
rcrl
jp
scas
jnp
dec
xchg
push
mov
sub
outsb
cltd
dec
xchg
mull
jb
jo
cmc
add
mov
jno
outsb
clc
jnp
mov
push
sub
aaa
jns
loopne
push
in
sub
mov
lods
sub
dec
fldt
pop
mov
sbb
aas
js
push
je
and
mov
int3
ja
ficoml
insb
test
scas
nop
inc
cmp
sbb
and
mov
lahf
jbe
xchg
lret
lea
cmp
lcall
out
jo
or
loope
mull
push
dec
sub
pop
fs
je
arpl
fwait
lcall
pop
mov
xchg
mov
lods
pop
out
and
and
xchg
xchg
test
cld
pop
inc
pop
out
mov
sub
aad
movsb
cmp
xchg
in
dec
and
call
cltd
data16
fistps
mov
xor
cli
popa
xor
xchg
jecxz
dec
repnz
jo
jo
es
xor
sbb
xor
mov
popf
sub
inc
sub
cmp
loop
nop
xor
es
fadds
sti
std
and
inc
ret
std
or
sbb
jo
pusha
push
sahf
lcall
movsl
jg
pop
repnz
stos
in
mov
sbb
in
inc
imul
das
test
and
push
pop
test
push
sbb
test
cwtl
push
in
dec
push
fsubs
mov
out
xor
and
push
lds
push
popaw
mov
pop
daa
mov
lea
add
cli
insb
ljmp
jg
ret
sbb
test
xor
sub
or
push
ja
inc
fldenv
dec
cltd
into
mov
mov
or
cmp
daa
popa
mov
ret
insl
mov
or
sahf
rcl
stos
out
out
ret
xchg
push
xor
add
mov
insb
jmp
mov
inc
xchg
cmp
xchg
cmpsl
pop
ret
mov
fcmovb
addr16
lahf
sahf
sub
jg
gs
cbtw
mov
push
xchg
dec
lock
ljmp
jae
lret
jne
xchg
add
sub
adc
cmpb
add
xchg
dec
enter
mov
mov
fiaddl
jmp
mov
mov
insl
mov
lret
cmp
jo
mov
sbb
mov
lea
pushf
movsl
mov
and
lods
popf
adc
jle
and
neg
bound
lea
scas
push
push
jge
sbb
std
mov
cld
cwtl
jo
fsub
mov
jecxz
sub
add
fs
adc
mov
xchg
jae
xchg
lret
mov
outsl
sbb
outsl
cmpsb
jecxz
pop
cli
and
shll
lods
push
mov
sub
dec
cmpsl
mov
pop
sbb
jb
dec
mov
sbb
xor
cli
add
or
xor
mov
enter
orl
adc
outsl
mov
sti
adc
cwtl
lods
lock
or
cmpl
out
dec
in
cmc
dec
inc
jne
dec
push
fcoms
outsb
jmp
pop
adc
call
fcomp
cs
jne
push
inc
imul
push
sbb
scas
fcmovb
movsb
adcl
cmp
inc
decb
cmc
addr16
sarl
out
js
imul
cli
jbe
and
out
mov
enter
pop
cmp
push
movsb
popa
push
fidivl
lahf
lea
sbb
pop
shl
push
xor
mov
pop
add
psubsw
lret
int3
sub
inc
push
leave
cwtl
mov
jae
sub
sub
jp
pop
adc
jb
inc
mov
mov
push
mov
aam
dec
mov
add
mov
inc
dec
mov
movsl
xor
bound
adc
mov
insl
mov
cmp
decl
jns
xchg
mov
xchg
loope
imul
imul
in
outsl
mov
popf
mov
or
mov
sbb
inc
mov
push
pop
lods
sub
mov
out
or
outsb
ffree
mov
xor
stos
loope
cmp
outsb
insb
add
cmp
add
mov
out
aam
mov
lods
loopne
movsb
mov
aam
mov
mov
mov
and
dec
xchg
cwtl
ja
sub
jno
mov
inc
test
fdivr
scas
sar
into
test
insl
mov
sbb
pop
mov
pop
ljmp
ficoms
adc
insb
sahf
jbe
mov
sahf
cmpsl
mov
loop
insb
adc
ficoms
cmp
mov
out
mov
ret
jbe
aas
popa
sti
pop
add
pop
aas
dec
es
fcmovb
mov
jae
pop
sbb
mov
mov
inc
inc
popf
mov
lods
adc
lods
dec
adc
es
mov
and
sub
test
inc
mov
or
mov
dec
mov
push
enter
out
pop
in
hlt
lock
mov
into
sbb
out
das
lcall
adc
mov
inc
jbe
dec
jbe
rcrb
popl
fiaddl
test
aad
jns
shll
pop
jns
addr16
mov
or
out
xorb
xchg
ss
adc
in
fwait
mov
xchg
in
and
je
lods
dec
std
aas
jmp
js
call
rclb
lret
fstpl
or
fs
add
pop
xchg
mov
orl
push
add
inc
les
cmp
jbe
imul
sub
xor
cmp
shll
mov
lock
xlat
daa
dec
int
jl
adc
test
xor
add
aas
ds
or
push
mov
lahf
jne
jl
adc
sub
push
jp
dec
popf
pop
neg
dec
jge
jg
das
sarb
adc
jle
aas
shl
loop
sbb
pop
xchg
ss
aaa
pop
dec
and
mov
mov
fildl
enter
cmpsb
movsb
inc
inc
lcall
add
das
pop
jns
mov
adc
mov
add
loopne
js
loop
jae
mov
push
pop
xchg
cld
mov
dec
ds
aam
xor
mov
arpl
roll
push
pop
add
scas
loopne
enter
call
scas
inc
cmc
mov
mov
cmpb
pop
cmp
push
cmp
cwtl
ljmp
inc
aaa
xchg
fldenv
xor
push
gs
mov
pop
dec
sbb
or
in
pop
push
movsl
mov
jo
mov
xchg
dec
inc
pop
aaa
pop
popa
movsb
mov
outsl
xor
sub
jle
out
in
ja
or
pop
imul
cmp
shlb
repnz
scas
pop
pop
sarl
gs
xchg
lcall
sbb
icebp
jecxz
dec
sub
in
fidivl
call
aaa
mov
cltd
sub
xor
adcb
mov
stos
loopne,pn
rorl
jne
test
outsl
xchg
xor
hlt
adc
push
addl
or
inc
xchg
xchg
daa
sbb
lea
movsb
inc
lret
outsb
mov
push
xor
mov
inc
xor
scas
push
outsl
pop
jl
stos
push
add
sbb
push
arpl
push
and
repz
jae
test
xchg
pop
scas
notb
xor
mov
jg
testl
dec
adc
mov
or
push
xchg
es
fists
pushl
shrl
jae
lret
in
adc
sbb
outsb
fstl
insl
loopne
mov
in
cmpsl
popa
xlat
out
dec
lret
cltd
mov
or
iret
das
lcall
call
mov
xor
scas
loopne
mov
into
icebp
pop
sbb
inc
xchg
sub
cmp
jb
fs
or
mov
lods
lods
fdiv
fwait
sub
shrl
insb
popf
addr16
xchg
jmp
jecxz
ret
mov
nop
mov
jo
xchg
std
movl
push
in
int
cmp
cli
push
xchg
mov
imul
lods
stc
popa
jmp
xchg
enter
arpl
stos
data16
push
mov
mov
or
ret
adc
push
aaa
and
xchg
push
nop
pop
out
cltd
xchg
in
test
fstp
repz
sbb
push
ljmp
shll
or
int
jp
data16
lret
lock
mov
jb
inc
mov
in
test
push
dec
xchg
pop
pop
mov
les
int3
insl
inc
out
cmpsb
mov
int
lahf
dec
push
jbe
mov
in
cs
mov
movsl
lods
jge
adc
dec
push
int
es
cmp
das
mov
test
movsl
clc
fcmovnu
pusha
or
sub
pop
lcall
jecxz
enter
fnstsw
into
push
add
pop
enter
jnp
in
lret
movsl
lods
loope
adc
scas
adcb
ljmp
add
mov
sbb
add
sub
orb
jns
mov
hlt
and
andb
insl
clc
pop
dec
imul
loope
mov
push
insb
aas
and
cmpsb
paddsw
cmpl
shll
adc
jecxz
jp
xchg
sahf
shrb
repz
insb
aas
repnz
mov
sub
jle
add
iret
or
cwtl
xchg
es
xchg
stc
cmp
test
mov
in
pushf
shlb
xor
xor
adc
shlb
inc
push
cmc
mov
lea
popf
or
cltd
cmp
neg
or
xchg
cli
inc
jo
xchg
adc
loope
roll
xor
test
stc
jo
aaa
adc
xchg
fisubs
pop
insl
ja
mov
push
jbe
fcmovbe
xchg
cmpsl
dec
xor
cmpsl
into
and
mov
fmuls
mov
xor
je
mov
ss
jle
fstpl
push
jbe
cs
xor
lds
aam
movsl
rorb
sbb
jl
int3
push
mov
mov
nop
add
iret
inc
ja
add
fsubl
jmp
movsb
jbe
inc
in
incl
cmp
cwtl
incl
add
shlb
lds
adc
leave
in
fcmovnb
arpl
aam
in
inc
pop
or
int3
repnz
pusha
mov
cld
das
and
xchg
sbb
dec
cli
add
rcl
cmpsb
mov
pop
repz
mov
push
sub
imul
fistpll
mov
dec
aam
and
loopne
fldcw
adc
jmp
inc
jbe
push
adc
notl
stc
jno
or
loopne
lea
push
cmp
aad
lods
lds
xchg
adcb
enter
arpl
jns
pop
repz
outsl
pop
jp
repz
push
lock
mov
hlt
lea
clc
push
pushf
sbbb
and
lock
and
jnp
rolb
stos
js
mov
jno
push
mov
aas
dec
stc
push
imul
nop
adc
and
or
fnsaves
ret
sub
int
adc
lds
or
fcmovu
bound
push
push
cli
dec
leave
jp
in
scas
jge
stos
xor
pop
sbb
xchg
popf
cmc
enter
dec
inc
mov
sub
dec
push
xchg
enter
adc
dec
hlt
icebp
sahf
mov
push
fsubrp
or
xorl
lret
xchg
imul
or
jmp
sbb
je
and
dec
out
in
inc
das
push
mov
pop
pop
sbbl
ret
outsb
mov
cmp
sbb
inc
xchg
lock
cmpsl
mov
sbb
mov
sbb
lods
dec
push
subl
mov
jge
inc
xor
inc
sti
gs
xchg
stos
mov
addr16
subb
push
add
xchg
mov
xor
sub
int3
mov
lock
insl
lods
inc
dec
and
jne
fsubs
in
int3
stc
sub
lahf
sbb
frstor
repnz
mov
add
stc
cmpsl
and
jl
int
cs
rcrb
adc
sbb
fs
cltd
xchg
or
adc
xchg
push
out
lods
sub
ja
xchg
es
sub
cs
repz
mov
sub
and
popf
rolb
js
repz
gs
mov
push
lret
dec
mov
add
fwait
out
mov
and
inc
dec
mov
inc
push
jnp
int
ret
dec
lds
mov
idivl
lods
push
xor
mov
jae
cmp
xor
jle
jge
pop
movsb
jg
std
test
adc
push
jecxz
bound
imul
mov
scas
xor
cwtl
mov
mov
stc
push
push
xchg
mov
mov
popf
jl
cltd
mov
iret
add
pop
enter
hlt
fidivl
push
std
lock
inc
jle
pop
cs
push
in
cld
testl
int3
xor
lret
jbe
out
pop
dec
or
xchg
add
and
fmuls
push
adc
push
out
dec
xchg
inc
sbb
xchg
int3
add
pusha
dec
movsb
mov
xchg
sti
insb
mov
or
imul
cmp
popa
iret
out
imul
or
das
ja
pusha
mov
add
adc
xlat
idivb
stos
or
push
fwait
and
lea
or
pop
mov
out
mov
sbbl
movsl
lock
mov
push
add
jge
out
mov
mov
and
stos
sub
fwait
push
nop
jp
sahf
pop
fimull
hlt
mov
repnz
test
pop
cmp
cmc
mov
cmp
mov
xorl
lret
shl
push
nop
cwtl
out
jge
clc
mov
and
data16
mov
orl
movq
lods
jp
movsb
cmp
inc
dec
inc
or
pushf
test
test
and
enter
pop
adc
cmp
pop
sub
fst
add
jb
and
lret
pop
mov
inc
loopne
sbb
mov
ss
loope
jg
xor
ja
lods
or
out
push
xor
lsl
bound
fdivrl
mov
adcl
mov
imul
out
xor
mov
mov
mov
inc
push
jne
inc
lods
mov
xchg
loope
das
lds
aad
pop
or
int3
popf
sbb
lds
out
xor
mov
divl
cmp
mov
xlat
add
imull
or
inc
in
xor
sub
sbbb
test
dec
cmpsl
cmpb
movsl
jno
stos
cmp
rcll
aas
es
cs
jae
xor
mov
cmpb
stos
adc
xchg
pop
mov
inc
add
dec
fstpl
or
lret
lahf
mov
faddl
mov
add
cmp
ret
cmpsl
sub
xchg
movsb
inc
dec
mov
jb
imul
test
jp
mov
loop
xchg
xor
xor
xchg
mov
in
cli
and
pusha
pop
inc
pop
cmp
xlat
pop
fisubrs
jmp
ljmp
orb
imul
fwait
sbb
push
mov
in
leave
aaa
test
jl
cmpsb
mov
mov
adc
out
cltd
dec
and
add
jne
mov
add
adc
xor
scas
jmp
sub
mov
and
inc
xor
lea
pop
cmp
xlat
push
pushf
ss
push
sarb
in
nop
dec
and
xchg
call
adc
dec
mov
divl
sub
repnz
mov
lock
cmpsb
sbb
sub
push
mov
fidivl
cmp
lcall
push
movsb
or
cmpsl
lods
push
push
outsb
mov
push
imul
into
jmp
mov
out
push
dec
mov
cltd
push
mov
or
xchg
int
push
xor
mov
rolb
push
mov
lahf
stos
ss
dec
enter
andl
cmpsb
lret
push
jecxz
insl
js
pop
jge
cmp
mov
add
loope
in
or
scas
daa
mov
call
push
loopne
popa
enter
mov
das
enter
adc
pop
xlat
loop
jle
loope
mov
inc
push
subb
in
lret
sarl
cld
jp
dec
sub
insb
lahf
subb
insb
cmp
mov
sti
jecxz
dec
inc
jecxz
adc
adc
fmull
adc
in
mov
pop
ficoms
inc
insl
cmpsl
add
arpl
dec
sbb
dec
xlat
mov
mov
fmull
xchg
fsubrl
fwait
mov
jno
ja
mov
jmp
mov
jl
push
xor
sahf
repz
jb
pop
ret
xchg
xchg
dec
ljmp
mov
fidivrl
jnp
aas
sub
mov
movsl
mov
inc
call
xor
sub
sbb
dec
stos
imul
mov
push
mov
adc
je
fndisi(8087
inc
shrb
mov
mov
pushf
xchg
aam
mov
xchg
mov
lods
pop
and
inc
add
xchg
js
jns
xchg
test
aam
push
ja
fbstp
mov
mov
lea
pop
daa
mov
cli
popf
std
dec
repnz
cmp
pop
addb
fiaddl
pop
arpl
sbb
sub
jecxz
cmpsb
push
mov
adc
xchg
shll
pop
pop
cmp
inc
call
xor
dec
lds
loope
mov
push
xor
jge
cmp
add
push
out
xlat
inc
fdivl
mov
icebp
jb
dec
test
mov
and
fisttpll
loope
inc
stc
outsl
sub
and
mov
and
xor
pushf
mov
dec
sbb
shlb
std
fwait
xchg
xchg
lods
call
mov
xor
fwait
push
int3
or
inc
shlb
bnd
pop
imul
mov
push
rclb
adc
jl
lods
add
loopne
rol
aas
cmc
jno
fnstenv
loop
loope
repz
fs
sbbb
jae
sub
push
test
adcl
cmc
aad
jmp
pop
inc
sbb
daa
mov
xor
lcall
mov
adc
inc
mov
jno
mov
inc
cmp
and
xor
dec
popf
fcomps
mov
jno
ss
mov
pushf
aad
pop
inc
sbb
lock
imul
popa
cmp
cs
cwtl
xor
xor
jb
dec
inc
stos
notl
adc
adc
shl
loopne
imul
cmp
daa
clc
stc
add
lahf
jge
cmp
mov
arpl
sarl
aaa
std
loopne
or
insb
mov
pop
or
cwtl
mov
imul
cmc
test
mov
jmp
pop
lods
jae
test
insb
sti
leave
popf
sub
or
push
aaa
jle
mov
cmp
in
inc
jmp
push
mov
inc
jg
cwtl
addl
cmp
mov
addr16
mov
mov
xchg
mov
or
scas
testb
push
sbb
mov
jno
jp
lcall
leave
pop
enter
lock
mov
pop
iret
sub
dec
push
cld
std
jo
fs
xchg
ljmp
mov
or
ss
pop
mov
ficoms
test
enter
adc
jmp
dec
in
pop
jl
call
jmp
popf
xchg
xchg
jb
inc
push
pop
lcall
stos
inc
cmp
outsl
mov
int3
fidivs
cmp
jae
dec
orl
mov
cld
negb
add
cs
imull
stos
jo
inc
clc
int
scas
xchg
sbb
stc
and
push
and
sub
mov
stc
sub
sbb
loope
lods
js
or
xchg
and
pop
xor
dec
push
lret
xor
int
je
cld
outsl
stos
dec
pusha
and
movl
adc
popf
int3
cltd
rcll
mov
jl
pop
sarb
cmpsl
push
xlat
fldt
sbb
xor
daa
dec
jae
push
repz
ficoml
movsb
xchg
jnp
dec
pop
sbb
mov
ss
loopne
test
fidivl
mull
xchg
andb
xlat
jbe,pt
mov
stos
jns
adc
xchg
sbb
popa
sub
push
sarl
fisttpl
aaa
pop
mov
jle
lods
xchg
xchg
das
add
lahf
aam
idivl
icebp
adc
mulb
sub
push
mov
iret
mov
sbb
dec
mov
aas
add
inc
push
ds
lods
xchg
mov
jae
mov
adc
adc
sbb
xchg
jle
dec
fwait
mov
faddl
jb
xor
lret
sub
and
negl
jecxz
jle
adc
in
cmc
cmp
and
push
movsb
daa
cmp
cwtl
sti
and
xchg
mov
jecxz
jnp
adc
push
push
sbb
mov
push
test
sbb
pop
icebp
sub
xchg
fmull
hlt
cmp
orl
lahf
das
stos
lods
xchg
test
and
pushf
or
inc
and
std
test
test
cmp
mov
cmpsl
adc
jae
pop
flds
and
mov
fistpl
fcomip
out
adc
lods
and
fidivrs
xchg
mov
das
jae
roll
xchg
cmpsl
jmp
dec
test
movsb
xchg
int
inc
mov
aaa
mov
stc
xlat
inc
out
mov
and
aam
int
lods
mov
fsubrl
cltd
mov
inc
and
add
int
mov
jae
dec
sub
jecxz
jbe
adc
outsl
call
xchg
aad
xlat
je
adc
adc
add
mov
pop
inc
mov
inc
inc
push
test
orb
sbb
mov
movsb
mov
lods
insb
and
cmp
and
mov
cmc
out
and
sub
cli
and
insl
cmpb
sbb
testl
les
stos
int
jb
mov
arpl
mov
add
xor
fbld
lods
fcoms
mul
fsts
imul
imull
stos
fdivrs
lcall
adc
sarl
out
lret
or
sbb
inc
pop
call
lret
pop
in
jb
fisttpl
cwtl
icebp
mov
cwtl
and
xlat
mov
cmpsl
icebp
lcall
cmp
xchg
fscale
into
pop
aam
cmp
lea
mov
cmpsl
bound
jl
xlat
mov
imul
dec
xor
pop
and
stos
lcall
movsl
sub
test
sti
hlt
sbb
xor
or
in
or
xchg
lcall
jb
pop
lahf
std
sbb
pop
rclb
in
cltd
shll
and
scas
movsl
stos
inc
clc
pop
std
outsl
scas
hlt
stos
or
pop
xor
dec
mov
jb
push
scas
pusha
mov
mov
dec
mov
cmp
push
pushf
bound
cmp
stos
and
dec
jmp
icebp
rcrl
push
push
push
jnp
and
inc
mov
add
push
adc
xor
in
mov
out
jg
push
push
sub
lea
movsl
imul
mov
lcall
adc
ds
out
xchg
lods
push
mov
xchg
scas
in
mov
repnz
out
push
pushf
fnstsw
shl
adc
jp
jge
push
out
and
and
out
stos
xlat
bound
jno
mov
jbe
push
push
push
repnz
ja
cltd
je
push
xchg
or
xchg
push
sbb
push
xor
into
xchg
or
cmpsl
and
pop
pop
ds
xor
sub
movsl
insl
gs
mov
out
xor
hlt
out
xor
inc
mov
inc
and
or
fsubr
and
mov
push
out
fdivrl
rolb
push
jb
jb
push
test
pushf
movl
popa
push
mov
mov
pop
push
jbe
jae
divb
in
js
sub
pop
ljmp
and
je
out
test
jns
nop
pop
adc
adc
jae
popa
or
xchg
xor
jmp
rclb
xchg
jae
cwtl
sub
adc
mov
inc
outsb
popf
iret
jmp
inc
cmc
aad
inc
adc
lock
xchg
ljmp
out
jae
sbb
add
lahf
xchg
sbb
stos
call
jle
std
cmpl
xchg
or
and
mov
push
repz
imul
xchg
fisubrs
mov
sbb
cwtl
fcmovb
cmpsb
jbe
outsb
je
cs
mov
aaa
pop
dec
clc
cmpsl
push
xor
in
ja
sahf
shlb
mov
push
push
in
jmp
xchg
clc
mov
je
cli
xchg
mov
cmp
inc
inc
mov
sub
in
mov
inc
loop
roll
jae
lcall
mov
out
dec
cmp
mov
mov
imulb
mov
clc
cmp
adc
cmp
jo
xor
pop
sbb
shll
cmp
aam
sub
fstpl
in
push
or
dec
push
sahf
ret
cmp
xor
rorb
outsl
loopne
lods
push
cmp
add
inc
das
xor
fs
dec
add
xor
iret
inc
addr16
sub
rcrb
clc
xchg
cmp
jbe
call
ficoml
dec
add
push
cli
adc
lret
dec
xchg
and
stos
dec
add
shl
push
insb
incl
and
cmp
mov
mov
call
sub
std
cmpsl
dec
pusha
dec
jmp
adc
insb
int3
xor
mov
imul
sub
push
scas
in
inc
xchg
xchg
jb
dec
mov
in
mov
mov
jbe
xchg
testb
pusha
rol
pop
and
adc
xor
call
rorb
or
pop
cmc
aad
leave
mov
inc
push
inc
or
push
cmc
and
jnp
sbb
loop
es
push
push
push
rorb
mov
sbb
cmp
xor
rol
call
and
es
gs
roll
push
and
jbe
jbe
scas
mov
scas
jg
loope
data16
cwtl
mov
and
dec
push
jle
xchg
loopne
jo
dec
lea
in
pop
add
adc
pop
outsb
xchg
loopne
jb
leave
das
movsb
sub
add
in
add
adc
shll
cs
sarl
mov
or
push
or
xchg
sbbb
notl
jns
ds
pop
sbbb
sahf
enter
setne
outsb
mov
or
ret
xlat
cld
in
xchg
mov
cmp
lds
ret
mov
movsb
mov
pusha
add
push
outsl
mov
stos
dec
in
push
les
inc
sbb
lcall
popf
cli
loope
cmp
jmp
orl
lahf
sahf
jmp
scas
iret
jns
mov
ljmp
add
dec
jmp
jmp
jne
ljmp
push
sbb
jmp
lret
xchg
dec
cmpb
lds
test
imul
std
and
aad
test
shrb
sub
das
test
jne
adc
shrl
lret
in
adc
mov
cmp
pusha
sar
fcomps
xorl
add
pop
jl
nop
out
adc
sahf
add
lock
pop
sub
xlat
or
xorl
xchg
das
je
iret
fwait
jmp
out
std
xor
ja
mov
mov
mov
out
xlat
cltd
pop
pusha
sub
dec
shrl
test
inc
popf
aam
jge
jo
adc
xchg
xchg
outsl
adc
xor
fimull
mov
push
jecxz
push
push
mov
pop
push
sahf
fcomip
aas
test
mov
cmp
adc
pop
data16
dec
jp
stc
mov
and
push
daa
fmul
mov
iret
jg
pop
sbb
sbb
pusha
shrl
inc
outsb
pop
les
adc
cmpb
dec
stos
inc
icebp
or
or
mov
daa
fistl
out
dec
sbb
aam
fistps
pop
inc
outsb
mov
or
test
push
outsb
lds
cmp
subb
or
lret
mov
jnp
push
push
fimull
lret
je
and
xor
pop
into
sbb
lds
jmp
and
xor
jne
cmp
shrl
and
cmp
movsb
lds
dec
xchg
mov
fdivs
push
mov
sbb
inc
scas
jns
std
pop
dec
daa
ljmp
aam
jmp
sbbl
roll
xor
xchg
adc
inc
and
loop
loopne
push
xor
ss
mov
sahf
dec
xor
mov
push
or
ljmp
aaa
pop
xchg
xor
push
push
push
imul
scas
or
pop
sub
repz
orps
mov
dec
aam
pop
jnp
pop
dec
sahf
dec
repz
xor
fstpl
stc
aad
imul
in
in
push
xchg
int3
cmp
inc
lea
popf
adcl
dec
cmp
cmp
lods
cmp
scas
test
pop
daa
pop
dec
adc
jno
and
or
and
sbb
fildl
sarb
inc
jae
les
div
mov
mov
mov
loop
push
mov
lds
inc
jl
jmp
jg
fstl
pop
mov
mov
sti
out
adcl
and
xor
push
es
nop
mov
xchg
imul
jl
lods
push
mov
jp
popa
in
cmpsb
loop
jnp
fs
pop
je
ret
lds
addr16
push
mov
scas
xor
shlb
ss
inc
lret
dec
pop
dec
lods
adc
fistpll
je
in
mov
xchg
mov
sub
cltd
mov
pushf
cmpsl
sub
lahf
push
lods
call
xor
dec
dec
popf
and
lods
mov
ficoml
pop
xchg
lahf
xor
xchg
xchg
addr16
inc
cmp
nop
data16
xor
sbb
pusha
mov
nop
xchg
mov
lods
jecxz
sbb
lea
sbb
xor
aam
bound
cld
sub
subl
std
and
mov
ja
cld
jmp
test
stc
mov
xor
dec
xor
mov
das
es
sarl
les
test
sub
sahf
popf
adc
xor
icebp
shlb
ficoms
or
in
push
xor
xchg
jl
movsl
addr16
stc
pop
jae
shrb
jmp
hlt
ljmp
xchg
xor
jecxz
and
mov
loope
rorl
inc
je
mov
enter
xor
inc
cmc
xchg
cmp
mov
push
clts
in
fcmovnu
pop
cs
sbb
sub
push
inc
jmp
fdivrs
rol
add
add
test
ja
push
mov
inc
mov
pop
mov
in
in
mov
sbb
dec
add
inc
mov
lods
jge
adc
int3
pop
or
add
add
pop
enter
fs
mov
mov
fsts
gs
pop
aas
mov
les
or
aas
push
test
push
pop
pop
push
and
mov
jbe
call
fcmovu
mov
jae
sbb
xorb
adc
or
flds
add
popf
pusha
lock
cmp
inc
iret
xchg
aad
testl
xor
mov
jb
clc
stc
scas
pop
negb
mov
sub
push
pop
sub
dec
mov
push
mov
push
arpl
stos
insl
test
mov
mov
and
loope
adc
stos
idivb
out
inc
mov
mov
popa
cmp
sub
mov
ja
andb
cmpsl
push
xchg
and
push
ja
push
dec
dec
pop
pop
enter
filds
sahf
lahf
pop
jno
xchg
xchg
push
stc
jbe
xor
fisubs
movsb
cmp
sahf
pop
pusha
mov
outsb
xchg
mov
arpl
sub
dec
out
cmp
xchg
jb
mov
add
xchg
ret
loopne
cmc
xor
ds
flds
enter
scas
scas
je
add
sub
outsb
aas
add
andb
jg
addr16
in
fadds
inc
pmuludq
stos
cmpsb
adcb
pop
stos
mov
ja
mov
inc
push
outsl
popf
jae
int3
in
inc
adc
adc
add
push
mov
outsl
dec
mov
sub
ljmp
dec
dec
xor
divl
xchg
push
mov
mov
bndldx
in
adc
push
in
xor
or
dec
pop
sub
mov
loope
int3
enter
subb
pop
fmulp
xchg
xor
cmp
dec
cld
daa
adc
pop
lock
lret
shrb
cmpsl
sub
lods
cmpsb
mov
push
xchg
jmp
jg
cmp
cmp
sub
jecxz
jns
enter
nop
adc
xchg
aam
xchg
pop
js
ss
js
hlt
cmp
mov
cmp
mov
inc
push
sarl
cs
aad
arpl
les
xlat
loope
jecxz
xor
fldenv
mov
pop
jl
jbe
fadds
insl
xlat
ret
cmpsb
jmp
adc
js
add
pop
dec
inc
mov
popf
xchg
xorl
icebp
pop
lods
mov
mov
out
cmpl
divb
sti
popa
dec
stos
adc
hlt
sub
pop
jbe
and
ljmp
cld
or
push
fbstp
mov
jnp
repnz
ss
out
in
push
lret
stos
jmp
sbb
mul
dec
cmp
mov
add
mov
fstpt
mov
fimuls
dec
or
cld
mov
int
test
xchg
pop
adcb
rcrl
inc
mov
fidivl
push
negl
mov
imul
xor
dec
push
and
xchg
push
clc
int3
clc
dec
movsb
aaa
cmp
iret
mov
test
sub
pusha
xor
add
or
lods
cmp
and
popf
repz
sbb
jnp
stos
fstl
in
cli
push
das
dec
mov
inc
imul
pop
mov
xchg
mov
pop
jge
xlat
scas
inc
jbe
js
popa
fadd
xor
push
mov
scas
sbb
dec
rorl
mov
pop
sbb
adc
pop
outsl
js
popf
mov
sub
shlb
addr16
xlat
add
mov
shlb
mov
push
out
rolb
stos
movsl
into
popa
xchg
in
and
add
mov
in
jmp
mov
sbb
aad
xlat
push
push
insl
scas
fs
lods
mov
pop
gs
movsl
stos
jns
out
cwtl
sbb
rcl
je
ficomps
test
fcmovbe
mov
xchg
xchg
pop
sub
sbb
fisttpll
pop
dec
rcll
les
cmc
shl
sub
jmp
pop
and
pop
mov
jmp
adc
lock
sbb
in
jg
sbb
and
fisubl
inc
loop
xorl
ds
and
pop
jge
push
xchg
aas
cmp
push
and
dec
jno
ja
fstpl
pop
or
inc
mov
imul
lret
lea
and
sbb
shl
xchg
dec
and
inc
cwtl
adc
les
jb
push
mov
inc
or
mov
lods
sbb
add
jmp
jbe
jl
rcrl
xchg
adc
adc
or
xchg
roll
mov
mov
hlt
cmp
xchg
test
xchg
loop
bound
mov
daa
or
loope
es
and
lahf
push
or
adc
or
xchg
push
shlb
jp
pushl
jnp
ret
jb
adc
insl
xchg
pushl
hlt
aad
shlb
push
add
add
jge
ja
repnz
mov
rcrl
sarl
in
sbb
es
or
imul
stos
dec
cli
enter
cli
mov
or
shl
imul
inc
pop
adc
lods
fwait
leave
out
or
jl
lods
xor
mov
jo
or
les
sti
andl
push
dec
push
imul
mov
insb
cli
jno
mov
ss
mov
mov
add
push
and
dec
xorl
mov
cwtl
pop
daa
xor
rorb
das
test
lea
mov
ret
aas
mov
int
out
jbe
orl
fcompl
pop
jnp
mov
mov
add
test
mov
mov
es
inc
out
pop
in
push
mov
sbb
mov
pushl
lahf
push
dec
lret
repz
enter
xor
rcrl
jge
enter
sbb
add
shlb
jecxz
sahf
fdiv
call
mov
mov
cmp
lret
add
outsb
mov
pop
mov
mov
iret
mov
mov
jns
adc
pop
adc
imul
cmp
mov
scas
shlb
or
clc
lret
jle
pop
push
add
adc
out
movsb
jecxz
in
sub
jne
scas
jmp
mov
ret
lcall
sbb
xchg
rolb
xchg
cmp
push
mov
lods
cmp
icebp
cld
xor
loopne
setg
sub
rolb
in
out
in
mov
test
movsb
inc
inc
scas
outsb
popa
shrb
rorb
xor
pop
jo
fcompl
and
iret
nop
or
call
jp
xchg
push
shlb
cmp
outsb
fstpt
incb
mov
rolb
dec
test
pop
shlb
pop
out
push
push
pop
rcr
ret
mov
ret
scas
sahf
cmpsl
push
mul
cmp
mov
adc
inc
mov
adc
and
xor
andb
mov
or
fwait
mov
into
xchg
xorb
aas
dec
adc
cltd
pop
mov
dec
cmp
pop
xor
mov
aaa
dec
mov
rolb
inc
push
in
aam
pop
sarb
xchg
jae
testb
lock
adc
or
dec
sbb
jne
mov
xlat
jmp
sbb
cwtl
mov
xchg
fwait
shll
cmpsl
fldcw
xchg
ret
imul
mov
jmp
bound
insb
popa
push
cmp
sub
add
jbe
div
mov
insl
cmc
pop
pop
or
push
cmp
ss
aad
popf
mov
out
mov
int3
in
cli
mov
filds
mov
daa
inc
dec
sbb
add
shl
pop
pusha
mov
push
out
inc
repz
adc
dec
or
mov
arpl
aad
mov
xchg
rolb
stos
scas
pusha
mov
sbb
mov
out
std
or
adc
ret
bound
fsubr
out
xchg
lcall
inc
subl
xchg
pop
adc
fstp
xorb
movsl
and
loope
orl
clc
popf
sbb
scas
pop
mov
mov
sub
lods
mov
sbb
ret
cmp
jns
data16
gs
test
adc
cmp
and
mov
in
sub
inc
mov
adc
scas
nop
mov
fcmovnb
fistpll
fwait
out
jg
sub
push
pusha
sbb
jns
jae
cmp
in
jbe
fcom
out
popf
popw
out
inc
cwtl
lods
cmp
sub
sbb
mov
and
shrl
lcall
push
dec
mov
je
or
xor
adc
rcrb
dec
rcll
xchg
cmpsb
xor
pushf
scas
repnz
rclb
mov
pop
dec
xchg
bound
pusha
pop
xor
mov
xchg
sub
lea
dec
js
xor
pop
push
mov
mov
js
fildl
mov
jb
cmc
xchg
sub
push
mov
repz
das
sbb
lock
inc
inc
shl
jae
out
pushf
push
shl
mov
nop
adc
or
ret
xchg
xchg
cli
push
jo
xor
mov
rolb
cwtl
rcll
xor
insl
addl
add
pop
rorl
add
inc
xor
insl
dec
push
push
add
int
divb
fadds
push
and
sahf
fnstsw
shlb
lret
arpl
or
push
ficompl
loopne
outsb
and
xchg
push
imul
fstl
jne
dec
inc
call
fs
jmp
repz
mov
adc
mov
xor
xchg
je
mov
gs
mov
stos
sub
bsf
cltd
push
xor
shll
add
xchg
pop
imulb
fsubp
rcrl
inc
and
in
mov
repnz
rcrb
sbb
sarb
sbb
mov
mov
test
test
xor
cmp
jae
and
ret
pop
movsb
int
xor
in
jecxz
test
mov
sub
cmp
push
rcl
int
out
mov
cwtl
icebp
pop
lea
cwtl
inc
cmp
mov
pop
cmc
shlb
jne
or
push
fwait
xor
mov
add
jecxz
mov
mov
and
pop
inc
iret
jnp
mov
aaa
cld
call
mov
daa
xor
add
push
test
aam
xchg
cli
jg
inc
cmc
divb
sbb
mov
ret
ss
pop
mov
cld
push
pop
dec
add
insb
sub
shll
mov
dec
push
test
lret
scas
sbb
in
test
lea
test
pop
xor
bound
ljmp
mov
inc
jecxz
sbb
xchg
pop
sbb
mov
fs
jo
mov
add
dec
clc
fnsave
push
jle
add
pop
stos
test
pushf
push
xor
testb
push
out
pop
sbb
xchg
scas
pop
add
mov
inc
push
cli
adc
int
mov
mov
adc
fcompl
sbb
mov
inc
cmc
nop
sub
popa
outsb
mov
mov
inc
mov
out
mov
dec
sti
insb
mov
adc
outsl
pop
inc
stos
aad
mov
cmc
and
popa
push
push
cld
loop
inc
stos
out
ljmp
aaa
inc
mov
xchg
movsl
stos
lods
inc
imul
addr16
addr16
enter
push
adc
xchg
ret
mov
pop
or
leave
xor
dec
fisubs
stos
jbe
xchg
jg
pop
add
mov
fsubl
int3
movsl
push
lods
mov
in
mov
dec
mov
sub
mov
pop
pop
in
cmp
daa
push
sub
adc
fcomps
add
mov
pusha
in
fwait
sub
pop
sbb
mov
mov
out
push
out
pushf
mov
mov
mov
in
cltd
add
xchg
aaa
mov
add
test
inc
push
shrb
stos
or
pusha
jae
stc
mov
add
xchg
sbb
es
ja
inc
inc
out
call
xchg
js
movsl
daa
popf
ja
sbb
dec
or
repz
mov
or
mov
lret
popf
test
push
dec
aad
jl
sbb
mov
shlb
cmp
lea
dec
jbe
loop
mov
pop
sbb
inc
add
cld
jae
fisubs
mov
xor
jne
cltd
mov
jg
ds
test
pop
rcrb
stos
arpl
adc
add
cwtl
insl
inc
cmp
js
lahf
pop
push
in
jg
or
mov
mov
mov
mov
adc
movsb
jg
sbb
rcl
lahf
cmc
xor
jg
pop
push
hlt
push
push
test
xor
push
jle
scas
jp
pop
xchg
mov
or
cmp
mov
cmc
shr
inc
add
xor
cmp
testb
push
ds
jecxz
mov
pop
pop
js
xlat
sarb
mov
mov
pusha
pop
test
and
mov
jnp
mov
in
pop
aam
and
pop
mov
addr16
stos
adc
cmc
xchg
pop
int
xor
cmp
push
cmp
jg
in
inc
xchg
call
adc
sub
or
psrad
gs
xchg
inc
mov
stos
lahf
lret
scas
cld
adc
ds
jae
sub
popl
xchg
mov
xor
add
push
xchg
xlat
movsl
icebp
dec
icebp
decb
xchg
sub
cmp
sub
pop
loopne
das
jbe
iret
push
orb
sbb
int3
adc
shll
push
cmp
xorb
leave
or
ja
or
iret
pusha
xor
inc
lret
xor
xchg
int3
push
fiadds
clc
out
cs
pop
test
mov
jp
sub
bound
dec
pushf
test
test
xlat
dec
inc
lea
sub
jmp
inc
push
loopne
psrlq
pop
mov
push
mov
retw
dec
out
jecxz
sbb
dec
repnz
mov
mov
enter
popa
xchg
sbb
jo
xor
jmp
loope
lock
cmp
mov
add
xchg
je
push
jp
lods
xor
pusha
subb
mov
clc
xlat
adc
push
mov
movsl
nop
decb
cmp
or
in
sub
daa
popf
leave
aad
subb
xor
bound
insb
mov
mov
mov
repz
popa
mov
cmp
inc
cld
jo
enter
mov
adc
leave
jl
add
push
dec
inc
xchg
mov
test
pop
push
aad
dec
cmp
test
pop
cmp
mov
lret
fimull
data16
shll
ret
int
icebp
js
cmp
in
or
ss
arpl
insl
jae
loope
fidivl
fbstp
loop
cltd
lods
sub
cmp
cli
arpl
push
pop
or
add
pop
in
dec
shll
cmc
inc
cltd
jmp
lahf
and
jp
shlb
arpl
push
and
mov
scas
sbb
sbb
mov
jecxz
or
xchg
out
pop
into
call
push
sub
and
dec
xor
out
pop
dec
or
shrb
pop
xchg
into
cld
fmuls
or
jg
pop
mov
xchg
outsl
xor
mov
scas
aad
pop
mov
add
stos
js
rcr
pop
test
add
dec
fisubrs
mov
add
add
fwait
add
xchg
push
add
pushf
fcoml
add
rclb
loop
ret
pushf
mov
push
push
gs
cwtl
cmp
popf
ja
mov
pop
in
sbb
mov
cmc
and
adc
push
mov
jp
cmp
inc
leave
jae
stos
es
jnp
xchg
pop
insb
mov
adc
in
pusha
ss
pop
pop
jmp
test
lcall
clc
lret
jl
push
repnz
es
jl
and
lods
ficoms
mov
xchg
xchg
cmpl
mov
jns
hlt
or
fists
dec
stc
cmp
enter
jecxz
add
icebp
fildl
sarl
test
bound
xchg
pop
les
cli
scas
inc
jo
jae
mov
cld
pop
mov
pop
aad
dec
jle
cs
std
orl
jp
mov
popa
imul
jnp
sub
sub
dec
jae
cmp
rorb
pop
mov
clc
scas
xchg
das
shrl
push
inc
pop
pop
je
loope
int3
lahf
mov
push
mov
int3
aad
jecxz
gs
push
cwtl
loope
mov
gs
daa
pop
mov
push
mov
mul
and
push
sub
ja
jmp
into
out
jns
jne
and
int
push
in
fcoml
dec
cli
pop
scas
sub
int
sub
das
addr16
jge
enter
fcmovnbe
mov
push
das
inc
xchg
jmp
push
push
mov
in
out
push
dec
mov
shlb
push
addr16
hlt
lret
outsb
adc
mov
fildll
mov
adc
loopne
mov
inc
orl
out
sarb
pusha
pop
and
in
push
push
enter
dec
and
ss
cmp
ret
mov
xchg
xchg
push
push
sbb
add
data16
add
mov
addl
loope
pop
out
cmpsb
jae
jecxz
test
inc
push
std
jno
jnp
sub
xor
jnp
adc
mov
jnp
and
inc
sub
pop
out
xchg
lea
jno
lods
loope
sbb
cltd
cli
xor
movsb
cmpsb
add
pop
insb
sbb
leave
push
mov
mov
dec
push
out
popf
shlb
add
dec
push
sahf
mov
out
cmp
iret
movsl
dec
and
rolb
sub
test
mov
or
mov
mov
add
out
out
cmp
insl
mov
mov
in
imul
das
lahf
mov
push
jae
add
adc
dec
in
xchg
cmp
xchg
sbb
sub
sub
out
pop
pop
adc
out
adc
xchg
fucomi
adc
shll
xor
add
adc
movsb
out
mov
adc
jp
pop
mov
movsl
frstor
sub
mov
mov
in
aam
rorl
stos
arpl
addr16
lcall
lret
push
fdivrl
xor
int3
mov
cmp
adc
xlat
sbb
stos
vandps
jns
mov
insl
adc
jg
nop
xor
and
shr
mov
roll
lret
sbb
in
jo
lds
or
popa
scas
sub
xor
pop
loop
mov
hlt
sub
mov
aaa
movsb
pop
jmp
ds
fists
das
popf
ja
lea
popa
mov
inc
and
sbb
stos
orl
xor
pop
pop
inc
in
out
push
adc
ret
jae
ja
pop
dec
inc
subb
dec
lock
in
push
cmp
mov
inc
subb
jp
aas
sub
xor
inc
inc
cmp
mov
push
or
imul
fildll
pop
pop
js
adc
cmp
jo
mov
push
inc
mov
sub
jecxz
inc
scas
jns
mov
cmpsb
push
pop
xchg
xchg
pop
xor
subb
cld
lcall
outsl
int3
pop
nop
testb
mov
sub
jns
inc
das
popf
jno
aaa
test
into
xor
scas
int
adc
fdivrs
sti
or
jmp
ret
into
sbb
jns
sub
or
fwait
imul
xor
jno
das
cmpl
repz
sub
mov
mov
or
inc
or
mov
daa
push
sbb
in
add
or
mov
xor
push
and
cmp
sbb
or
out
in
cmp
fcmovnu
lock
dec
sub
insb
jbe
mov
mov
or
pop
imul
mov
popa
add
xor
mov
movsl
inc
pop
dec
pop
mul
cmp
sub
ja
lds
sub
and
shlb
fnstcw
sbb
jne
rolb
pushf
push
cmp
push
mov
and
jns
jbe
jge
sbbb
jp
dec
ficompl
mov
in
inc
mov
cltd
xchg
mov
mov
jno
cmp
cli
xor
xchg
lea
adc
mov
mov
lahf
push
js
mov
pop
call
cltd
int3
dec
ds
dec
ja
decl
mov
test
movsb
cmp
xor
stos
push
xchg
and
jbe
cwtl
inc
xchg
mov
lods
xchg
lea
sub
mov
lret
das
jne
pop
push
lahf
and
cmp
push
xchg
and
mov
adc
push
jecxz
add
sbb
fs
clc
add
mov
je
xchg
ljmpw
fbld
mov
jecxz
imulb
neg
pop
cmp
fldt
gs
and
imul
and
movsl
stos
aam
sahf
push
jbe
sahf
push
xchg
lret
push
sbb
comiss
insb
xchg
lahf
in
subl
int3
jnp
push
jo
and
stos
fwait
dec
aad
adc
lods
and
fistps
call
xor
ret
dec
or
xchg
lret
in
add
xchg
cmpsl
pop
jbe
and
ret
rorb
dec
std
xor
movsb
inc
loopne
mov
inc
adc
gs
stc
cmc
pushf
insb
in
mov
sub
dec
in
enter
mov
repz
xor
lahf
mov
and
mov
flds
cmp
outsb
cmp
movsl
movl
dec
xor
adc
sub
stos
loope
push
inc
xor
stc
mov
testb
outsl
jne
pop
push
lahf
outsl
or
lock
pop
ljmp
out
xor
jno
rorl
push
lock
ljmp
xor
pop
test
dec
fneni(8087
or
adc
push
inc
mov
pusha
cmpsl
sarl
shlb
nop
sbb
cmp
add
std
mov
pop
dec
xor
lea
gs
cmp
mov
pusha
je
leave
mov
or
into
ja
out
mov
add
pop
inc
dec
test
ja
outsb
jmp
adc
or
in
jmp
sbb
push
xor
cltd
insb
mov
mov
shl
fdivrl
xchg
andl
popf
pushf
lods
jb
and
dec
pop
test
pop
ret
scas
aam
or
push
cmp
add
push
jle
insb
sub
ret
dec
test
repz
cltd
mov
jg
dec
and
mov
mov
out
pop
sub
lret
add
lret
inc
mov
mov
xor
adc
adc
jno
adc
push
lea
stos
sub
push
bswap
fsubr
xchg
andb
lcall
mov
sbb
push
scas
ljmp
or
pop
imul
mov
sub
fucomi
sub
sbb
ljmp
mov
test
ja
jl
std
xchg
loopne
ss
cmp
cmc
mov
in
mov
outsl
pop
add
cmp
cli
repnz
fwait
xchg
dec
dec
les
iret
sub
cltd
jns
cmpsb
pop
sbb
jmp
inc
xor
mov
cmp
mov
mov
push
cltd
in
or
imul
cli
inc
divb
xchg
stc
pop
pop
pop
stos
js
mov
std
fimull
add
orb
jb
inc
aam
push
mov
cmpsb
sbb
out
sbb
sarl
test
push
invd
cld
and
xor
ret
stos
xchg
mov
movsb
mov
inc
ss
lcall
inc
push
mov
xorl
fsts
cmpl
das
inc
je
or
or
jno
rorb
scas
cmpsb
hlt
sub
and
cmpl
jns
sbb
or
rcl
shll
mov
loope
repnz
lock
push
xchg
div
in
sub
or
or
in
pop
lret
lret
and
cmp
cmp
insb
add
mov
sub
push
pop
mov
sub
pushf
sub
daa
mov
lock
movsl
sub
or
fsubl
out
aad
mov
and
popa
cwtl
repnz
out
add
cmp
xor
fnsave
dec
loope
jbe
inc
pop
out
sub
jecxz
adc
in
fsubrl
sahf
movsl
dec
and
dec
lret
inc
mov
and
sub
shrl
push
dec
ret
bound
ljmp
push
mov
dec
mov
and
nop
xor
imul
push
pusha
pminub
nop
jns
dec
in
cld
loope
jno
testb
iret
cli
int
dec
sub
fisubrl
subb
jns,pt
repnz
dec
cmovge
roll
lea
out
add
ja
out
xor
push
inc
aam
rorb
out
mov
mov
lret
rorb
add
rcrb
pop
testl
cmp
lods
push
mov
xchg
pop
mov
mov
loope
push
push
mov
sub
jmp
cmpsl
aaa
sbb
psadbw
out
pop
jle
in
icebp
lcall
inc
mov
mov
xchg
in
popa
pop
rorb
cmp
cld
int
imul
sub
jno
rcrl
mov
sub
pop
cmp
clc
iret
jns
fisttps
shlb
aad
ret
test
cmp
frstor
lret
hlt
arpl
gs
fsub
adc
daa
loop
cltd
mov
push
mov
or
jle
sbb
in
inc
das
cwtl
or
ror
adc
and
adc
lcall
and
push
pushf
inc
leave
adc
jp
mov
cmc
cmp
cmpsl
inc
pop
pop
lods
push
dec
test
test
push
loope
pop
mov
insb
and
out
mov
and
ss
sbb
cwtl
adc
addl
mov
xor
cmpsb
sti
or
and
fidivrs
pop
ret
xor
call
shlb
or
jmp
scas
test
out
shrl
add
jl
fst
push
lods
addr16
mov
in
adc
and
outsb
mov
enter
mov
std
or
mov
dec
daa
stc
xlat
jae
jl
jge
gs
pop
sub
sbb
ret
add
mov
xchg
out
imul
xchg
fsubp
insb
loope
mov
pop
add
mov
movsl
lds
pop
sbb
addr16
aad
mov
mov
repz
mov
iret
int
mov
push
filds
fimuls
add
out
jl
stc
pusha
pop
popa
aas
mov
inc
cmp
mov
or
int3
jnp
mov
mov
ja
add
push
inc
js
push
jge
xchg
sbb
xchg
dec
jnp
popf
mov
sbb
loop
jl
mov
jmp
bound
add
out
pop
jnp
mov
dec
outsb
repnz
jo
push
xorb
out
in
inc
add
into
dec
fstl
lret
xor
sub
shr
fstpl
mov
aam
cltd
icebp
mov
xchg
dec
sub
mov
js
mov
push
dec
cmp
xor
add
mov
jl
sub
cmp
sahf
jno
pop
sbb
or
hlt
push
aas
jmp
je
pop
stc
into
aad
jecxz
lea
pop
insb
pop
or
hlt
movsl
scas
aam
lods
es
pushf
cmp
add
pusha
leave
add
call
aas
pop
push
and
in
sbbl
mov
dec
inc
popf
out
lock
hlt
dec
pop
sub
inc
out
test
mov
ljmp
push
sarb
adc
lods
je
sub
hlt
outsb
into
mov
cwtl
insl
sbb
popa
mov
xor
gs
lcall
data16
mov
xchg
xchg
in
std
mov
cmc
adc
xorl
andl
das
sbb
lods
ss
mov
add
daa
and
inc
adc
mov
dec
mov
push
rcrl
xor
inc
in
rclb
enter
sub
add
divb
inc
bound
jno
pop
push
rcrb
adc
or
adc
sub
aad
out
mov
popa
das
stos
adc
xor
fcmovnb
sub
adc
mov
xor
jp
mov
outsl
jo
test
push
ds
sti
cmpsl
xor
cltd
mov
test
jo
imul
inc
dec
sub
mov
gs
inc
jg
lock
ds
aam
repnz
test
test
pop
pop
test
ljmp
cmp
les
inc
pop
popf
scas
sbb
adc
nop
mov
mov
pop
push
incb
cmpsl
in
mov
imull
js
add
xor
xchg
push
jl
cwtl
mov
and
dec
xchg
scas
lods
pushf
bound
ja
add
sti
in
sbb
mov
and
jl
mov
scas
fdivs
stos
push
adc
lcall
imul
lret
or
cmpsl
xchg
ds
xor
sahf
test
xchg
aaa
sbb
insb
sub
or
sbb
add
dec
mov
and
mov
movsl
push
add
inc
xor
mov
movsl
daa
xchg
mov
test
xor
sbb
gs
fistps
andl
gs
push
dec
repz
sub
loop
push
sub
in
cmp
pop
mov
out
ds
xor
sbb
inc
fisubrs
or
imul
mov
mov
test
ret
xchg
ret
mov
iret
cmp
and
enter
mov
lret
add
cld
add
aaa
add
mov
jl
cmp
cmp
push
pushf
sub
or
subl
mov
cmp
in
enter
pusha
jle
dec
arpl
xchg
adc
mov
push
pop
push
lret
data16
test
loope
xor
jbe
push
mov
inc
add
push
hlt
stc
or
jmp
fistpl
dec
std
push
mov
jp
cmpsl
xorl
sub
jns
aas
cmp
dec
xchg
jo
sub
mov
mov
add
rcrb
sub
sahf
xor
pop
add
loop
push
shll
xor
mov
pop
and
add
jne
push
jl
ficoml
add
test
pop
and
xlat
mov
aas
xchg
iret
mov
cmp
mov
lods
std
aaa
inc
and
cltd
inc
cltd
ja
mov
fisubrl
jmp
sbb
test
lds
lret
sub
mov
js
clc
out
xor
lahf
out
inc
cmpsb
clc
adc
fst
xor
dec
inc
fcmovnu
loop
jae
insb
inc
scas
ss
dec
clc
lahf
xor
pop
xchg
mov
iretw
and
fiadds
xchg
fldl
ds
cli
jnp
ds
push
pop
mov
adc
and
xchg
repnz
push
mov
data16
lds
add
mov
cmpsb
adc
dec
outsb
cli
push
sbbl
out
cmp
push
adc
repz
adc
enter
sub
sbb
xchg
jl
lds
movsl
mov
xchg
out
popa
cld
popf
cmpsb
pop
das
addr16
mov
cs
sbb
mov
or
jmp
popa
aam
fsubrl
xchg
pop
pushf
into
jno
out
sub
and
sub
fcoml
sbb
inc
jno
das
cmp
jmp
cmp
pusha
sbb
pusha
loope
sbb
sbb
push
subps
inc
mov
int
repnz
mov
push
xchg
pop
call
mov
test
cmp
adc
mov
pop
ret
xor
mov
mov
test
pop
movsl
cmp
sbb
sbb
mov
dec
push
ucomiss
lcall
loope
xor
sti
fisttpl
vunpckhpd
inc
ret
gs
add
movsl
lcall
testl
jge
cmp
outsb
add
leave
inc
sbb
sub
xchg
xchg
lret
add
pop
sar
adc
jmp
leave
xchg
into
adc
rcll
or
xchg
xchg
mov
std
pop
adc
or
bound
ljmp
xchg
mov
xor
les
mov
dec
imul
cmp
push
loope
lods
ffree
leave
or
mov
xchg
xor
movsl
mov
das
scas
out
ja
mov
rorb
adcl
cli
mulb
imul
pop
pop
leave
je
sahf
scas
xlat
mov
ror
xor
testl
jne
repz
lock
xchg
fwait
jge
int
aad
movsl
cs
jmp
jnp
or
int3
adc
mov
shll
filds
stos
int3
xchg
mov
stos
ret
xchg
es
push
adc
sbb
jmp
iret
nop
jl
out
aam
in
jnp
add
daa
into
jmp
stc
data16
je
aad
adcl
sub
test
out
sbb
shufps
inc
pop
push
fstpt
aam
repnz
aam
shll
in
push
loope
pop
je
sub
js
iret
jl
pop
push
inc
pop
jnp
in
pop
orb
dec
scas
dec
sahf
je
rolb
rcrb
jae
push
sbb
cmp
sbb
sbb
fs
sbbb
pop
aam
orb
jmp
and
addb
or
dec
push
cmp
rorb
cli
pop
sarl
xchg
or
aam
or
cmpsb
and
movsl
cmp
call
ss
addb
sbb
and
jbe
lret
sub
cwtl
fldenv
sbb
lret
bswap
rcrb
inc
out
and
cwtl
movsb
xorb
sahf
flds
push
add
push
gs
mov
rcr
cmp
mov
orb
mov
add
adc
inc
insb
shrl
push
dec
cmp
jnp
pop
mov
fisubl
loopne
enter
cld
pop
cwtl
xor
lock
or
push
outsb
cmpsl
out
pop
lret
xchg
out
pop
xlat
les
push
or
jge
test
cmp
lcall
pop
add
add
rorb
fisttps
mov
sub
lock
pop
outsl
test
in
rclb
cmp
mov
lock
jp
cwtl
cmp
and
cld
xchg
adc
jecxz
jae
sahf
out
sbb
out
mov
ret
into
pop
jb
loope
sbb
in
rep
popf
call
push
fidivs
pusha
leave
push
and
ret
lods
movsl
xor
sti
push
into
inc
addr16
imul
push
and
jle
arpl
pop
repnz
sub
sub
loope
test
cmc
xor
jns
push
rorl
enter
repnz
insb
jno
jae
or
pop
push
out
sbb
and
mov
leave
scas
out
fcom
shll
inc
push
mov
loopne
jbe
addr16
iret
add
and
cmp
in
inc
mov
cmpl
fnstsw
jns
pop
cmp
dec
les
cmp
repnz
stc
xor
sub
lock
cwtl
aas
fwait
pop
jbe
in
adc
inc
and
push
fs
outsb
add
ss
into
xchg
sti
stos
addl
mov
mov
cmp
mov
lds
clc
leave
lea
xchg
fwait
testb
dec
jg
cmp
sub
mov
mov
sub
lock
pop
std
popa
sbb
movntq
xor
nop
pop
fistpl
mov
mov
mov
lods
sbb
inc
aad
jo
mov
dec
imul
mov
push
add
out
cmp
mov
js
fbld
cmc
pusha
adc
xchg
outsl
stos
inc
invd
add
imul
arpl
sbbl
pop
mov
mov
flds
mov
adc
data16
mov
outsl
adc
push
xor
xchg
mov
ficomps
imul
std
movsl
sub
mov
cmp
cmp
jnp
xchg
fimuls
jl
push
ret
sbb
mov
inc
dec
in
rcll
push
call
rcl
outsb
inc
mov
xchg
jno
cld
jg
push
cmp
test
cmp
pop
stc
iret
pushf
xchg
mov
addr16
cmc
jl
inc
out
inc
push
out
cmp
lcall
movsb
adc
sti
jo
fbstp
shlb
xchg
call
sbb
test
sahf
push
imul
mov
jnp
sahf
push
test
pop
aad
ss
mov
push
add
cmp
inc
jbe
daa
or
nop
aaa
aas
xchg
and
loope
icebp
bound
in
rclb
lock
rorl
lret
scas
pop
pop
adc
push
adc
insb
sub
dec
movsl
adc
iret
jno
repz
mov
cmpsb
xchg
iret
test
out
insb
jbe
push
adc
jno
push
mov
push
pushf
cmpb
xchg
ss
mov
sbb
test
pop
mov
out
imul
and
xor
mov
popa
pop
inc
sysenter
and
push
fsubs
xor
fnstsw
pop
lods
adc
sub
pop
adc
xor
jmp
out
push
adc
lods
fisubs
mov
insb
aam
loope
xchg
cwtl
pop
ficomps
xchg
loopne
insb
fs
outsb
test
imul
pop
dec
push
push
movsl
rol
jmp
nop
aad
enter
lret
pop
in
in
ret
mov
shr
ja
adc
test
fdiv
popl
aad
aam
cmc
in
cli
push
cmp
cmp
mov
jl,pn
mov
mov
repnz
jns
in
dec
and
push
clc
lahf
outsb
adc
adc
cld
cltd
jp
adc
pop
push
loope
or
xchg
mov
xor
add
cmp
sub
out
test
or
and
in
mov
xchg
icebp
ja
loop
leave
dec
adc
add
lock
sbb
lods
dec
mov
popf
mov
inc
xor
inc
sbb
imul
mov
in
and
sbb
push
gs
ljmp
andb
in
fldt
and
push
and
xor
addr16
xor
aas
test
lret
push
jp
or
lock
hlt
dec
lds
push
lods
out
xor
xor
adc
sbb
mov
add
lret
addr16
pop
or
push
and
jae
jnp
mov
xchg
push
fld
popf
pop
lds
xor
fistpl
aam
jbe
addl
cmp
sbb
pop
popa
pop
cmpb
jge
and
pushf
pop
sub
mov
outsl
subb
fistpll
cs
push
pop
cmp
out
jbe
xchg
jne
stc
fstpt
loop
ljmp
cmc
mov
xor
xor
push
jb
cmp
out
jbe
cmp
push
push
mov
jp
cmp
xor
add
jns
ja
fcoms
jns
xchg
imul
jge
jb
lods
jecxz
bswap
out
jl
ficoml
mov
push
adc
stos
lcall
add
push
ss
cwtl
sbb
mov
insl
cltd
icebp
aaa
or
sti
or
into
lock
bound
fwait
cwtl
in
push
je
sub
pop
mov
addl
push
cmp
and
mov
fsubs
dec
pop
jg
inc
or
aaa
test
stc
jne
jl
jg
jns
lret
lret
inc
cwtl
arpl
loope
pop
cmp
sub
mov
clc
stos
bound
adc
mov
xchg
into
adc
cs
cmpsl
pop
lods
cmp
cli
sub
dec
sbb
mov
adc
mov
rorl
add
push
shrl
mov
lcall
sub
lahf
add
flds
adc
sti
xchg
xchg
mov
lock
notb
pop
pop
push
sti
mov
pop
ja
sub
das
mov
mov
daa
btr
data16
cs
outsl
cld
ficompl
jbe
xchg
orb
inc
loope
or
cmpb
test
shl
or
push
pop
cmp
add
add
adc
sbb
dec
push
mov
mov
test
hlt
test
sbb
je
or
push
les
inc
repz
sbb
dec
sub
rcl
stos
test
repz
cmpl
push
mov
orb
lret
addl
fistpl
cmp
ss
cltd
jmp
leave
cld
cmp
sarl
sub
out
cmp
lds
loop
packsswb
mov
test
in
les
enter
pop
clc
add
stos
push
enter
mov
push
incl
shlb
cmp
mov
cmp
fcompl
into
cmpb
lock
inc
xor
pop
xor
dec
cs
push
ljmp
test
xlat
mov
dec
aas
ret
push
sti
push
mov
adc
in
and
into
popl
int3
xchg
bound
dec
cmp
fists
mov
jns
xorb
std
aam
add
fisubrl
jb
add
aaa
cld
outsb
push
adc
xchg
cwtl
or
cmp
pop
xor
xor
or
in
xchg
lcall
jae
dec
or
pop
mov
stos
cmp
fcomps
in
dec
push
dec
and
xchg
jb
jge
imulb
mov
icebp
out
push
popa
dec
sahf
adc
popa
add
pop
pop
cmpsb
adc
pop
dec
sti
adcl
xorl
test
sbb
icebp
adc
jnp
repz
and
adc
ljmp
push
push
stos
jno
icebp
aad
mov
ret
cmp
dec
mov
xor
add
pop
push
jmp
pushf
inc
int
adc
inc
push
test
lods
mov
and
je
sar
adc
ret
mov
pop
int3
into
stc
ds
movb
insl
icebp
orl
popa
jo
mov
leave
ret
fmull
hlt
jmp
xchg
or
add
movsl
rol
in
xor
pop
mov
shlb
cmpsl
push
cmpsl
popf
cmp
xchg
mov
cmp
daa
inc
jle
and
fimuls
test
add
mov
repnz
fadd
pop
pop
out
and
popa
lods
cld
xor
xlat
mov
adc
rcll
fisubrs
cmp
hlt
ja
inc
das
ficomps
sub
out
dec
aaa
dec
mov
lret
sbb
sub
int3
dec
cmp
lock
daa
loop
sub
aaa
cmpsb
stos
mov
fiaddl
xchg
or
jge
xchg
cmpsb
sahf
packssdw
mov
adc
int3
out
jnp
pop
into
mov
jmp
push
fbld
inc
movsb
int
pop
adc
pop
pop
and
idivb
into
push
push
movsb
testl
jo
xor
and
xor
or
pop
mov
into
xorb
daa
lods
lock
stc
push
sbb
lock
fidivrs
ret
cmp
xchg
popa
and
mov
lea
test
pop
push
jge
pop
sub
mov
std
pop
shrl
lahf
inc
sbb
xorl
into
mov
lcall
adc
xor
fbstp
and
and
mov
rcrl
mov
fsubrs
test
pop
pop
inc
scas
ret
cmp
ds
roll
inc
rclb
divb
adc
and
adc
adc
hlt
or
mov
inc
sub
or
mov
add
dec
push
adc
pop
mov
out
inc
cltd
mov
push
push
mov
lcall
jae
sbb
add
inc
add
aas
hlt
lahf
and
adc
or
mov
add
test
in
fldl
or
sbb
jb
outsl
push
dec
outsb
inc
ljmp
jmp
adc
ret
dec
add
lret
mov
mov
and
cmp
jo
mov
dec
stos
or
mov
fistps
adc
sbb
add
push
inc
loop
cltd
loope
fisubs
push
cld
xchg
out
aas
mov
cli
in
and
ss
push
filds
fcomi
or
mov
dec
out
adc
lds
inc
shll
sub
stos
push
adc
push
mov
inc
movb
test
gs
add
adc
fstpl
sti
dec
in
mov
dec
push
sti
adc
jecxz
jmp
xlat
out
push
fimuls
out
fcompl
repnz
xchg
lock
push
jnp
mov
dec
mov
clc
or
popf
xor
inc
adc
cmp
jne
xchg
or
xchg
mov
daa
push
rcr
test
adc
out
pushl
dec
pop
aas
pop
add
popa
and
test
xlat
pop
inc
iret
ljmp
call
fwait
push
popa
inc
inc
fistpll
aaa
fisttpll
cmp
ret
push
mov
jo
pop
data16
lahf
adc
fldcw
loopne
add
stos
fistpl
sub
add
push
inc
in
in
sub
loope
fcmovb
mov
inc
pop
add
mov
mov
sahf
sub
mov
pxor
int3
dec
fucom
pop
ja
addr16
mov
jns
fcompl
dec
stos
js
ja
fmul
jl
or
or
xchg
std
ss
repz
dec
sbb
jg
lods
gs
das
push
daa
cmp
jp
ds
inc
fsubl
pop
and
mov
jnp
rcll
leave
cwtl
mov
aaa
and
lock
aaa
js
packssdw
sahf
pusha
jne
dec
push
and
mov
add
push
pop
je
daa
aam
lods
aam
xor
in
push
push
cmp
jecxz
mov
aaa
pop
push
lods
sti
mov
xor
pop
mov
out
jmp
ret
repz
dec
jle
je
sbb
or
push
out
cmpsl
push
popa
sarl
mov
cmp
gs
stos
xchg
faddl
pusha
push
in
add
or
imul
jmp
mov
aaa
stos
outsb
add
mov
pop
test
punpckldq
jg
add
push
pop
xorb
mov
dec
pop
add
inc
leave
dec
mov
push
dec
pop
ret
push
lea
adcl
mov
leave
test
cmp
add
loop
lret
aam
mov
or
imul
mov
jo
popa
dec
mov
jno
loope
dec
or
enter
dec
sbb
dec
and
cltd
mov
mov
jge
int3
iret
popa
imul
mov
add
jp
push
call
mov
mov
gs
sbb
and
mov
call
cltd
out
dec
or
pop
fisubrs
jl
or
ret
or
xor
push
insl
cmp
bound
pop
fidivrs
imul
or
in
aas
inc
cld
fstpt
jl
cmp
adc
xor
push
popf
push
jecxz
adc
xchg
mov
roll
inc
mov
cmp
js
mov
int3
adc
dec
es
adc
fadd
ret
loopne
imul
dec
jae
jmp
cmp
xor
fs
xchg
testl
pop
jmp
and
jno
es
jns
jge
es
xor
sbb
div
sub
loopne
and
sub
jo
fmulp
xchg
xlat
xchg
sub
and
test
push
dec
sub
fiaddl
add
je
aad
inc
cmp
and
data16
xor
or
dec
data16
shlb
ficompl
adc
add
nop
insl
cmp
mul
and
scas
inc
cli
pop
insl
test
pop
ja
or
xor
test
clc
lcall
cwtl
loopne
mov
ret
mov
xor
mov
cmpb
iret
addr16
lods
lock
adc
mov
xor
lcall
xor
add
adc
outsb
das
hlt
pop
jmp
cltd
cs
daa
std
out
pop
push
xchg
ret
mov
aad
mov
gs
mov
aad
fs
loop
and
lea
pop
movsl
push
mov
clc
in
out
lea
jae
add
fldl
dec
cmp
popf
xchg
add
pusha
mov
inc
cmp
mov
mov
adc
inc
push
jae
imul
push
mov
mov
divb
push
dec
or
add
jp
mov
xchg
in
mov
lock
dec
push
add
cmp
jmp
ficoml
cmp
lcall
ret
inc
pop
fdivs
and
int3
cmpsb
neg
or
push
aad
das
mov
mov
iret
cmp
pop
cmpsb
cmp
xchg
sbb
add
xor
lods
loope
fists
ret
jno
insb
invd
sti
mov
mov
jae
jae
push
add
lock
dec
fwait
lahf
jp
inc
sbb
bound
pop
ret
daa
scas
or
add
inc
dec
mov
adcb
xchg
cli
dec
cmc
push
lret
jge
ret
fbld
xchg
lret
mov
xor
mov
jae
sar
sahf
mov
push
lock
ja
subb
cmp
mov
xchg
cmp
outsl
adc
clc
xchg
sahf
das
in
lret
push
push
jge
add
in
sbb
add
dec
dec
aam
sarb
pop
add
out
pop
add
pusha
fsub
dec
mov
jnp
lea
sub
and
sub
push
pop
sbb
sub
cld
imul
loope
addr16
loop
roll
sbb
adc
fs
mov
cmpsb
ss
cmpb
lret
sbb
lret
lea
xor
pop
push
ljmp
add
outsb
enter
mov
pop
js
out
pop
cwtl
xchg
mov
inc
jbe
inc
push
sbb
mov
mov
in
cli
fldt
test
bound
lret
repnz
cmp
jle
mov
and
sarl
or
bound
xchg
sub
test
mov
add
cli
dec
jne
jns
outsl
or
cmp
fadds
stos
xor
mov
jae
lea
push
sub
orl
mov
neg
ret
lcall
push
out
pop
arpl
push
mov
mov
mov
dec
mov
push
cltd
scas
cmp
dec
enter
mov
arpl
inc
insb
das
aas
lods
xchg
mov
adcb
lods
fwait
sahf
cmp
aaa
fs
push
sub
repz
push
data16
ss
out
ret
mov
pop
sub
mov
mov
sbb
in
jno
sub
aam
mov
out
sub
xor
hlt
adc
cmp
ja
cmc
xchg
movsl
sbb
rcll
add
in
pop
orb
rorb
je
xor
fcom
cmpsl
xchg
test
fdivrs
xor
mov
sbb
mov
loop
mov
mov
test
aas
gs
clc
addl
movsb
out
ret
jne
nop
mov
mov
fs
cmp
cwtl
in
test
scas
nop
xchg
lods
jecxz
out
popf
ds
fdivrs
add
adc
out
add
pop
xlat
aam
xorb
movsb
jns
clc
jnp
sbb
popf
ret
dec
outsb
cmp
testl
jl
scas
imul
xchg
add
and
ret
adc
shrb
xchg
aas
cmp
cmp
loop
test
mov
hlt
ret
xchg
loop
pop
gs
aad
cmpsl
push
loopne
mov
xchg
sub
xor
xchg
add
icebp
sbb
sub
adcl
push
test
mov
mov
push
lcall
mov
stos
xor
std
cwtl
and
push
dec
ret
mov
pop
stc
xchg
or
adc
push
outsl
divl
xchg
inc
xchg
add
cmp
pop
dec
mov
sub
aad
mov
push
sbb
pop
add
push
shrl
jecxz
insl
xchg
pop
jge
sbb
pop
fistpl
int
pop
push
add
dec
test
testl
ja
and
inc
ret
push
outsl
push
repz
mov
loop
movsl
cmp
cmp
xchg
imul
mov
iret
cmc
adc
sbb
in
lods
jle
sbb
das
pop
mov
nop
loope
loope
cltd
push
cmc
pop
pop
pusha
daa
xchg
mov
lds
add
sysenter
xchg
lahf
das
or
adc
add
jg
push
pop
jmp
aas
iret
jl
sbb
xchg
push
imul
xor
xchg
push
inc
cmp
popf
adc
or
lds
rorb
daa
mov
aam
hlt
outsb
aas
mov
call
cwtl
cmp
mov
test
popf
jo
sub
sbb
insb
cmp
sbbl
push
pop
xchg
dec
inc
pop
cmp
cwtl
jl
insb
lcall
jbe
xor
push
test
pop
inc
fxch
pop
sbb
mov
iret
or
sbb
mov
mov
scas
fst
ds
and
lock
lods
mov
cmc
sar
in
imul
enter
or
aas
push
dec
clc
dec
in
xor
test
push
ljmp
mov
iret
icebp
add
insl
push
push
pop
call
loopne
xchg
inc
jb
jmp
mov
roll
aam
loope
js
pop
sbb
sub
incb
std
lret
cmpsl
xchg
or
scas
push
add
ss
sub
pop
daa
shr
jp
mov
fnstsw
add
hlt
int3
xchg
add
xchg
out
sbb
inc
add
mov
cmp
inc
aam
loop
cmpsl
in
jge
add
rolb
jle
pop
inc
leave
jmp
movsl
daa
test
inc
cmpsl
xchg
loopne
add
in
xchg
jp
lock
cmpsl
pop
jne,pt
add
mov
test
aam
and
insb
data16
push
inc
push
mov
rdpmc
fwait
mov
sub
inc
lods
andb
dec
insl
or
push
and
nop
push
leave
dec
popf
cmp
cmp
xor
mov
inc
pop
adc
sbb
sbb
int
getsec
dec
data16
mov
jns
cltd
inc
inc
xchg
roll
mov
xchg
fmul
outsb
mov
repz
loopne
shrb
xchg
loope
dec
pusha
or
cmp
sbb
dec
outsl
in
leave
insl
iret
and
add
xchg
lea
dec
fstpl
dec
fdivrs
out
mov
aaa
push
jbe
or
test
enter
addb
mov
leave
dec
jo
sub
cld
cmp
xchg
add
mov
sub
fs
push
and
subl
daa
bound
gs
sub
lret
stc
nop
xchg
xchg
push
adcb
inc
ljmp
pushf
pop
rcrl
lea
out
cld
pop
push
fcompl
shll
push
sbb
xor
movsb
ret
jno
subl
sub
arpl
cmp
insl
call
test
jecxz
inc
dec
repnz
and
mov
hlt
cmpsb
mov
arpl
insb
test
cmp
lret
cmp
cwtl
mov
inc
mov
loop
and
test
test
cmp
add
aad
sub
sbb
jp
scas
mov
jl
repnz
fmul
push
adc
mov
push
lds
cmpsb
cmp
dec
popa
int3
scas
xor
push
jl
nop
mov
rcrb
mov
sti
inc
adc
in
je
cli
js
cmpsl
fistps
xchg
and
fdivrs
mov
iret
stc
sub
fsubp
jl
xchg
push
jp
subb
push
push
pop
xor
pop
mov
inc
push
aad
inc
push
test
dec
xor
pop
mov
test
mov
fldt
jle
inc
pop
add
es
push
jmp
out
shr
mov
cmc
xlat
push
fwait
and
pop
insl
jmp
repz
data16
cmp
or
cmp
sub
testl
cmp
divb
xor
in
ljmp
mov
fdivr
outsb
scas
data16
fcomps
sbb
fwait
mov
dec
lods
clc
pop
sub
mov
in
lahf
ret
push
mov
clc
lds
mov
dec
jmp
int
loope
sub
dec
or
clc
pusha
pusha
pop
fldcw
push
mov
pop
mov
aas
call
mov
mov
sbb
call
aam
mov
aam
fs
mov
out
repz
lret
cs
adc
test
enter
call
adc
adc
inc
into
aad
or
pop
sub
adc
das
ret
iret
and
pop
fsubrs
insl
loopne
pop
sbb
jno
pop
int
and
mov
or
test
insb
orl
bound
cmp
test
pop
loope
adc
sub
mov
dec
xor
insb
push
iret
jge
adc
pop
adc
sub
int3
push
adc
jae
cmp
pop
in
loope
add
sbb
aaa
sbb
inc
xchg
ret
sahf
pop
adc
out
enter
mov
sahf
nop
jo
adc
test
jae
add
mov
test
add
jbe
jmp
addr16
scas
dec
mov
mov
jno
mov
into
sbb
mov
lea
rorl
and
and
push
mov
stos
fndisi(8087
mov
insl
stos
dec
inc
inc
lret
aam
add
divl
jmp
mov
lret
and
mov
and
gs
xchg
mov
lahf
inc
sbb
push
xor
cmpsl
sbb
stos
out
jo
lds
faddp
cmp
fcoml
scas
loope
jmp
jp
les
adc
sub
push
leave
ja
or
mov
sub
sub
lods
mov
sahf
loopne
int
push
sub
and
andb
sbb
xchg
insl
addl
sub
mov
pop
ds
sub
popf
or
cld
mov
cld
xor
dec
outsb
dec
and
sub
cvtps2pi
xchg
cmp
inc
dec
rolb
int3
mov
cmpsb
cltd
fsubrl
sahf
or
movsl
fldcw
pop
push
andl
add
outsb
stc
xchg
ljmp
jae
ret
jbe
cmp
xchg
mov
mov
test
stc
ljmp
stos
pop
or
in
jb
and
mov
cmp
mov
or
adc
insb
stos
adcb
xor
sahf
and
mov
std
js
add
xor
cld
lret
xlat
bound
iret
imul
fmul
push
pop
ffree
int3
or
inc
dec
pushf
jmp
mov
aad
inc
cmpsl
ja
into
pusha
pop
jp
add
pop
xchg
sbb
cmpl
je
dec
cmpsl
fildl
mov
cmovp
xchg
test
repz
stos
or
popa
inc
sub
scas
inc
push
push
lret
xor
add
pop
std
inc
cmc
adc
mov
lods
add
fmull
push
fistpll
jp
mov
jmp
or
push
in
xor
push
jns
mov
in
xor
adc
shrl
pop
pop
pop
pop
cli
idivb
add
push
dec
mov
dec
or
push
ja
jns
movb
mov
fwait
icebp
push
in
jbe
fsubrl
and
lcall
std
shlb
mov
ds
lods
xor
bound
jne
and
xchg
ret
xlat
pusha
adc
inc
fcmovu
cmp
cmp
std
ljmp
adc
andb
js
std
rorb
je
mov
cmpsb
xor
jp
lods
rclb
cs
pop
cmp
ret
cmc
scas
sbb
mov
inc
add
mov
push
pushf
jbe
lds
outsb
cmc
inc
loop
andl
shrl
xlat
xor
call
addr16
shll
or
das
lcall
aad
mov
xchg
movsb
hlt
jns
fs
xchg
adc
js
clc
adc
cs
ds
vaddpd
pop
dec
aas
cld
or
inc
js
mov
cmp
add
pop
cmpl
pop
xchg
pusha
sti
dec
out
arpl
bound
scas
xchg
fdivr
and
mov
cld
fwait
pop
fisttpll
dec
aas
loop
xor
popa
jns
cmp
inc
xchg
and
push
into
les
add
adc
out
pusha
sbb
decb
sub
loopne
cmp
cltd
or
dec
fdivr
jle
repz
scas
lds
jmp
aad
mov
mov
add
cld
es
insl
pop
and
xchg
or
out
clc
add
sub
push
and
pop
outsl
cmp
gs
cmp
lock
mov
dec
cli
ljmp
or
sub
ret
mov
outsl
shl
push
xchg
sub
shll
pop
cmpsl
or
dec
xor
mov
aaa
jle
and
shrb
push
xor
xchg
in
rclb
cmp
lds
shrb
push
insl
movsl
lahf
or
xor
aas
lock
mov
sub
sarl
lcall
inc
pop
ds
fistps
push
mov
leave
and
fstpl
notb
shll
insb
jecxz
jmp
daa
cmc
loop
dec
sbb
mov
mov
out
jmp
fmul
or
movl
je
inc
dec
std
ljmp
xor
fcmove
fadds
rcrb
sub
sub
pop
sub
xor
sbbl
aam
shll
pop
xor
daa
orl
icebp
fdivrp
adc
addb
outsl
cs
loop
add
xchg
or
push
das
cmc
es
adc
dec
out
popa
xor
dec
enter
add
sub
push
orb
xchg
leave
sbb
xor
inc
cmp
enter
jbe
and
xor
repnz
out
scas
shl
inc
push
ret
dec
and
cmpsl
int
fs
mov
data16
pop
sar
clc
sti
pop
pop
cmpsb
sub
mov
cmpsb
stos
cwtl
nop
je
add
mov
aam
stos
leave
inc
dec
jo
or
sbb
repz
sub
loop
outsb
out
nop
mov
sub
jp
mov
mov
flds
push
sbb
je
push
push
mov
aaa
dec
dec
sbbb
xlat
push
xor
outsl
leave
push
cmc
lcall
xlat
dec
sub
jo
mov
call
in
lret
inc
sub
scas
and
cmp
pop
push
and
xchg
cwtl
add
and
popa
push
sbb
and
and
insb
lods
pop
add
xor
call
lahf
sbb
mov
jne
pop
add
test
stc
js
jl
xchg
or
enter
pop
cli
in
rcr
lods
lret
or
test
popf
add
shrb
xchg
inc
xchg
xor
mov
fldenv
into
jecxz
push
push
daa
sub
xchg
push
sub
push
xor
push
rcrb
cmpsb
ss
inc
xchg
movsb
int
jecxz
xchg
cmc
loope
sub
mov
in
inc
push
or
repnz
aaa
mov
ja
or
mov
fs
movsl
push
xchg
mov
lock
adc
shlb
mov
jb
insb
xlat
in
pop
leave
aam
dec
repz
pop
pop
or
xlat
stc
rclb
arpl
addr16
sti
out
mov
out
or
int3
xor
subb
lret
add
imul
xchg
mov
je
cmpsb
stos
jb
pusha
cmc
pop
cli
addr16
mov
xor
das
and
sbb
dec
xlat
fisubs
push
scas
pop
int
sbb
inc
hlt
mov
in
pop
dec
mov
xor
shlb
jp
jae
add
out
sub
pushl
or
sar
jmp
mov
and
mov
fldenv
into
cmp
jecxz
and
sbb
pop
sbb
loopne
xchg
mov
repnz
mov
ss
popf
loopne
add
dec
insb
jbe
push
popa
mov
loope
sti
not
sbb
addr16
test
push
mov
mov
out
sti
mov
sub
enter
xchg
jbe
cmpsl
imul
lods
add
mov
cmp
mov
test
dec
push
mov
cmp
nop
mov
sbb
pop
or
ret
mov
and
jmp
or
xchg
loope
out
mov
cltd
jp
push
mulb
lea
jns
mov
leave
add
mov
xchg
in
add
inc
push
xor
xchg
xchg
jecxz
lret
rcrl
fwait
js
sarl
fistpl
pop
xchg
inc
insl
aad
pop
stos
or
fimull
add
sbb
dec
stc
cmp
inc
jne
mov
mov
cmp
mov
mov
cwtl
cmp
lock
cmp
insl
lods
fcompl
cmc
sbb
rorl
adc
std
inc
aad
and
sbb
dec
lret
push
hlt
daa
mov
push
pushf
or
xchg
nop
sub
inc
test
or
imul
ficomps
dec
add
xchg
sbb
and
cmp
ds
cmp
mov
xchg
mov
mov
xchg
sub
shrd
dec
lea
adc
push
push
or
arpl
sbb
xchg
insl
lds
cmpsb
repz
call
lock
clc
dec
lret
pusha
or
add
push
daa
push
fists
iret
subl
mov
or
mov
iret
stc
les
jb,pn
mov
and
sbb
pop
mov
pop
or
stos
rcrl
xlat
enter
popa
push
mov
mov
ljmp
clc
mov
dec
push
add
add
sub
dec
imul
dec
stc
clc
push
popf
sbb
xor
pop
dec
or
out
dec
push
push
ret
shrb
lahf
push
imul
jl
stos
cmp
cli
cs
lods
rorl
lods
sub
fidivrl
jmp
bound
ret
xor
sub
imul
mov
sbb
lahf
or
gs
sub
pop
mov
aas
mov
repnz
test
inc
gs
imul
data16
out
xor
sbb
lods
in
dec
jmp
inc
mov
cmc
cltd
add
js
lods
das
push
pop
xchg
imul
mov
xor
addr16
lahf
xor
pop
lcall
repnz
inc
mov
push
in
adc
dec
push
pop
lods
jle
dec
mov
scas
mov
loop
inc
in
sub
andl
shll
ss
sbb
stos
mov
fsubr
shll
cmpsb
cs
push
or
cmp
push
pop
mov
xor
mov
jmp
cmpsb
xchg
pop
pop
lds
add
lods
data16
addl
mov
push
lret
jmp
or
jns
lods
pop
pop
lahf
mov
xorl
cmp
and
test
push
pop
sbb
aaa
into
adcb
cmp
test
jl
inc
cli
repnz
mov
jno
popa
or
in
neg
out
sahf
mov
lock
ret
xchg
or
lret
popa
jge
mov
xchg
mov
push
popa
imul
cmc
adc
cmp
cmc
sub
out
xchg
repnz
inc
lret
aas
inc
roll
cli
repnz
lods
mov
mov
fisttps
aad
mov
push
mov
adc
dec
sub
mov
pop
pop
loope
jb
gs
in
js
daa
xchg
out
jb
std
sub
repnz
decb
ljmp
mov
jle
loopne
outsb
jp
or
mov
sti
mov
sbb
imul
std
incl
pop
int
lret
gs
je
in
enter
ds
aas
inc
mov
sbb
mov
mov
jbe
xchg
jne
loop
data16
jnp
les
xor
add
xor
test
mov
dec
cmc
outsl
test
inc
push
dec
pop
cmpsb
fstpl
xchg
arpl
ret
ficompl
pop
loop
mov
xor
aas
pop
mov
lock
leave
dec
push
lret
or
mov
leave
and
shrb
ss
xlat
pop
dec
lock
add
aas
xor
mov
sbb
outsl
cmp
adc
iret
inc
pop
sbb
push
mov
dec
or
notl
xor
or
xchg
add
in
mov
and
clc
mov
dec
lahf
jne
mov
loop
push
sbb
mov
insl
idiv
dec
push
daa
fldenv
call
xchg
lret
cs
pop
mov
test
push
cmpsb
and
mov
clc
arpl
sub
dec
pop
inc
sbb
sbb
mov
pushf
xor
adc
mov
dec
std
imul
and
cmpl
mov
imul
fidivrs
dec
insl
andb
into
mov
pop
adc
mov
scas
pop
mov
popa
xchg
flds
outsb
push
mov
leave
mov
push
divb
mov
daa
insb
pop
inc
push
icebp
adc
adc
loopne
adc
mov
or
xlat
mov
mov
mov
mov
push
shll
xchg
imul
stos
pop
faddl
xor
xor
inc
dec
mov
mov
mov
mov
das
jmp
or
adc
pop
sbb
daa
sbb
inc
fadd
adc
rep
xorl
ret
mov
cmc
or
xorl
xor
dec
jb
icebp
je
dec
mov
pop
mov
sbb
nop
and
fistl
loope
xchg
decl
push
mov
and
inc
imul
and
test
lret
xor
fnstsw
sub
cmpsb
fsubrs
rcrb
test
inc
sub
and
and
xor
cwtl
mov
jnp
int3
sub
cmp
xchg
add
pop
xchg
push
popf
inc
xor
pop
sar
adc
cmp
mov
cmp
xor
and
push
scas
cmpsb
hlt
or
pop
fsub
jo
fcomps
mov
sub
lahf
fidivl
std
sbb
push
repz
bound
loopne
mov
and
jb
cmpsl
icebp
mov
clc
rorl
dec
les
xchg
mov
aad
mov
movsl
stos
mov
push
sbb
jge
pop
push
xchg
jns
fcoms
xchg
fdivp
aad
stc
pop
mov
jae
cmp
scas
fs
cltd
popf
adcl
or
lods
rep
dec
push
movsb
mov
arpl
jmp
mov
mov
stos
insl
arpl
mov
add
out
adc
add
ret
cmp
xchg
pop
enter
and
insl
sbb
jp
arpl
idivl
aad
cmp
scas
sub
xor
insl
inc
cmp
add
xchg
leave
push
cltd
push
adc
inc
outsl
enter
outsl
jno
cld
ss
psrld
mov
stos
jae
pop
xchg
xor
add
mov
das
lret
xchg
mov
movsb
test
sarb
or
sub
int
stos
mov
pop
mov
xor
mov
cltd
add
mov
cmp
pop
cmp
hlt
scas
xor
inc
xor
push
jns
sarl
pop
jecxz
pop
and
lods
mov
mov
rolb
es
mov
mov
rcl
sbb
mov
jae
xor
push
fsubrs
inc
mov
mov
push
gs
jae
add
cmpsb
cmpsl
jb
out
jne
bound
push
js
stc
inc
and
imul
mov
sbb
jp
fsubrl
jmp
adc
cli
mov
movsl
add
adc
repnz
leave
add
cld
and
sti
imul
fidivrl
std
movswl
jmp
out
xlat
daa
cmp
jae
sbb
inc
sub
arpl
sbb
xor
or
inc
popf
adc
cmp
pop
push
ljmp
out
fisubrs
sahf
outsl
scas
inc
sti
xor
jb
jl
sti
mul
scas
adc
sti
loop
test
arpl
and
sub
lods
add
dec
movsl
inc
or
into
fistpl
test
push
or
popa
sub
out
inc
sbb
cmp
dec
stos
xchg
sub
lahf
xchg
aaa
loop
xchg
and
dec
aam
aam
jmp
sbb
push
and
decb
jns
rcrl
sbb
push
and
dec
cmpsl
test
sub
stc
xchg
sarl
clc
pop
adc
sub
push
leave
push
xor
push
sbb
out
stc
push
lock
mov
sahf
and
pop
sbb
inc
movsl
jo
and
push
jmp
pop
lcall
add
fmull
shll
lret
xchg
pop
mov
in
fiaddl
rcll
add
pop
clc
dec
push
insl
rol
ljmp
add
leave
repnz
mov
in
stos
addr16
in
add
mov
andl
sub
and
lcall
mov
xlat
jae
fnsave
loop,pt
or
ret
jno
outsl
xchg
fs
lock
mov
sub
and
das
lahf
lods
je
in
sub
clc
xor
daa
push
pop
push
or
movsl
sahf
dec
push
sub
rclb
or
mov
or
cmc
js
lcall
lock
push
nop
pushf
getsec
loopne
loop
pop
add
xor
cmp
jnp
xor
test
add
mov
mov
ljmp
cmpsb
insl
outsl
jge
and
stos
xchg
aas
sbb
cld
lcall
shlb
repnz
fsubrp
lock
orl
push
mov
inc
pusha
mov
dec
and
push
orl
cs
scas
or
mov
mov
sbb
das
jno
xlat
adc
mov
int3
pop
lds
notb
sbb
fmuls
add
fnstcw
icebp
xchg
mov
aaa
frstor
sarl
cmpsb
imul
ffree
inc
or
outsl
sub
hlt
xchg
imul
decb
sbb
cmp
xor
push
cmpsb
push
xchg
inc
push
fldl
jecxz
ret
jle
repnz
es
jbe
dec
push
cltd
leave
and
pop
push
pop
push
xchg
scas
push
push
adc
xchg
cmpsl
imul
dec
incl
filds
sub
adc
and
popf
ret
jns
adcb
fdivrs
mov
or
stos
call
push
jb
insl
lods
mov
insb
rcrb
dec
xchg
push
outsb
mov
or
bound
or
imul
inc
test
int3
pop
xchg
incl
cld
imul
stc
xor
inc
mov
mov
mov
xchg
fs
mov
test
inc
inc
loopne
ja
xchg
je
add
icebp
adc
aaa
jns
xchg
imul
mov
fbld
dec
jmp
jae
popa
mov
pop
sbb
push
nop
mov
push
mov
xor
shl
arpl
fadds
mov
loop
dec
loop
insl
cmp
pop
fidivs
outsb
cli
add
test
lret
xchg
xor
sbbb
lods
addb
cltd
jmp
xchg
jo
or
int3
xchg
movsb
fs
jmp
repz
mov
std
jno
xchg
out
hlt
sahf
cltd
mov
stos
jo
into
jecxz
jle
xchg
dec
dec
dec
movsl
ljmp
test
push
jmp
jp
pop
pop
dec
out
pop
orb
outsb
xchg
dec
rorb
retw
sub
or
mov
ljmpw
push
xchg
or
into
sahf
dec
clc
sbb
into
cmpsl
test
inc
out
fwait
mov
mov
pop
in
push
cs
xlat
dec
icebp
pavgb
inc
test
inc
adc
testb
nop
and
test
popf
lcall
movsl
xchg
sbb
xor
out
addr16
dec
scas
call
mov
inc
pop
xlat
sbb
les
pop
pushf
push
xchg
xor
jnp
mulb
push
bound
mov
xorl
sbb
movsb
jmp
add
addb
mov
popa
or
sbb
out
mov
push
jle
pop
movsb
orl
cmp
fcmovbe
cwtl
loope
mov
cmpsb
ret
bound
lcall
outsb
iret
mov
cli
push
ss
enter
xchg
push
jmp
mov
into
inc
arpl
jge
std
fimuls
pop
cwtl
xor
loope
arpl
adc
sbb
ljmp
xlat
mov
adc
jb
imul
lea
in
or
outsl
popa
lods
or
fadds
mov
jo
gs
insl
inc
andb
nop
popa
insb
int3
mov
movsl
popf
cmpsl
outsb
add
out
sar
xor
out
adc
loope
dec
sbb
push
addr16
sbb
in
inc
es
shlb
push
data16
shr
and
inc
add
pop
aad
addb
in
leave
addr16
sbb
loope
movsb
cmp
mov
jns
leave
iret
pop
sbb
mov
dec
iret
fadd
cmp
push
inc
push
ret
xchg
mov
mull
sbb
test
push
ljmp
or
adc
jo
ja
xor
leave
cld
insl
imul
jnp
sbb
add
loop
scas
push
adc
lahf
pop
sbb
fwait
jo
movsb
cmp
xchg
mov
mov
rclb
fs
pop
int3
dec
dec
ret
push
sub
pop
push
bound
arpl
dec
mov
add
dec
es
cs
adc
rorl
dec
out
fidivs
mov
fidivs
mov
xchg
dec
mov
jp
scas
xor
pop
mov
jecxz
xor
mov
nop
imul
dec
mov
stos
roll
jge
inc
jnp
jmp
push
rorl
and
dec
mov
pop
inc
jb
mov
cs
add
sbb
data16
das
cwtl
pop
repnz
cmp
jmp
jp
cmp
xchg
out
cmp
xor
ljmp
repz
pop
add
test
mov
out
fidivs
jns
xchg
mov
dec
jbe
fldt
mov
and
dec
and
dec
mov
leave
hlt
into
clc
mov
lods
pop
sbb
lret
cmp
cmpsb
mov
or
pop
rcll
pop
insl
inc
call
sbb
dec
cltd
jecxz
mov
inc
inc
jb
mov
rcll
jg
call
and
pop
mov
jmp
jnp
push
jg
or
iret
mov
adc
jns
loopne
pop
mov
fstl
stos
push
xchg
cmp
xor
sbb
xchg
cmp
mov
sahf
xor
sub
iret
pop
sub
jbe
jo
jmp
adc
inc
push
lahf
pusha
or
inc
xchg
shll
movsl
call
mov
dec
xchg
xchg
fcmovu
ror
popa
in
iret
pop
divl
dec
mov
inc
fimuls
pop
add
jge
insb
adc
sub
sbb
pop
push
out
mov
testl
push
std
dec
xchg
ljmp
xchg
and
pushf
into
pop
bound
jns
pop
mov
pusha
adc
out
aaa
inc
sbb
fxch
shl
gs
in
xchg
insl
ds
mov
out
adc
insb
xor
push
adc
sbb
cld
pushf
mov
jne
xlat
ja
enter
repnz
inc
mov
lock
fidivrl
ror
inc
jl
xchg
pop
mov
dec
enter
jmp
roll
sahf
ss
rol
mov
stc
or
add
inc
fstl
inc
loope
loopne
cmp
mov
and
in
and
mov
in
or
popf
mov
inc
out
and
ficoms
push
inc
jg
mov
mov
xchg
xor
or
popa
outsb
xchg
jbe
les
mov
sub
test
xchg
pusha
push
inc
dec
gs
xor
in
mov
pop
addl
in
dec
test
adc
scas
ds
or
dec
sub
xlat
dec
pop
sub
sahf
into
and
je
xor
icebp
xor
mov
and
shr
in
pcmpgtb
or
les
or
repnz
data16
ljmp
push
aad
push
xchg
clc
out
adc
test
lock
xchg
and
add
cmp
mov
aas
inc
mov
fnsave
mov
cmp
stos
push
jns
popl
sbb
data16
outsb
fnstsw
arpl
mov
push
add
or
inc
sub
jb
mov
stc
adc
jg
ja
repz
leave
ja
lods
fdivl
xchg
or
mov
decl
mov
add
dec
test
adc
cld
pop
push
je
mov
mov
push
jl
clc
xchg
sub
in
mov
jp
dec
aas
sahf
mov
test
mov
gs
xchg
out
outsb
push
mov
cmp
insb
data16
ja
sub
gs
xor
imul
mov
xor
adc
adc
dec
scas
and
aad
bound
jo
lcall
out
sbb
js
mov
icebp
adc
mov
mov
aaa
push
or
dec
nop
stos
popa
pop
lcall
mov
dec
cli
xchg
popf
int
jg
sbbl
in
loope
xchg
mov
and
push
dec
les
rcrl
insb
int
jl
cmp
inc
push
dec
sub
adc
sahf
cs
and
fstpl
icebp
jle
into
mov
lods
addr16
lcall
dec
inc
cmc
cmp
xor
aam
bound
dec
es
into
mov
out
jle
in
js
mov
fisubl
repnz
lods
mov
inc
je
divl
inc
in
mov
hlt
shll
ret
mov
test
data16
ja
dec
dec
pusha
or
and
hlt
sbb
nop
xor
xchg
jg
subl
and
and
lret
in
loop
in
in
adc
push
sbb
mov
dec
insb
outsl
jb
ss
add
cld
sub
shl
cmp
xor
or
mov
ret
push
insb
push
push
rcrb
inc
jae
xor
ret
fwait
jno
jecxz
adc
cmp
pop
hlt
fidivl
cmp
mov
jp
cmpsl
mov
out
add
mov
fnstcw
cmp
sar
and
add
adc
dec
cmp
jb
stos
mov
aaa
ficoms
les
fwait
jbe
jno
les
cmpsb
mov
ret
sbb
test
push
bound
or
daa
xorb
xchg
inc
pop
sbb
out
loopne
pop
lea
mov
imul
add
lret
nop
arpl
sbb
sbb
int3
inc
adc
and
aad
cmp
dec
lahf
pop
jno
aad
sbb
add
nop
and
mov
aam
add
pop
or
adc
xchg
sbb
inc
mov
in
add
sub
notb
sub
dec
fldenv
imul
and
lret
cmp
lea
pop
ret
mov
adc
popa
and
sbb
xchg
insb
insb
int3
adc
icebp
push
xor
nop
js
push
rclb
add
scas
inc
sub
or
ret
sbb
lds
sub
cwtl
jge
dec
add
push
in
mov
xor
les
xor
gs
nop
insb
aad
jno
jno
pop
pop
pop
mov
lcall
mov
and
jg
mov
loopne
in
stos
test
fsts
ss
fstl
pop
jmp
ret
fnstcw
sub
in
cmp
outsl
cmpsb
jle
aaa
xchg
in
jmp
jnp
jnp
mov
in
mov
push
lea
fisubrs
icebp
adc
imul
jo
rcrl
leave
sti
cmpsb
push
or
sub
orl
lods
hlt
imul
cld
in
stc
pop
mov
lret
sub
je
std
repz
mov
pop
sub
cmp
decb
xchg
dec
xor
loopne
mov
roll
jnp
xchg
sub
push
sub
in
subl
jmp
push
ror
xchg
mov
xchg
push
fiadds
push
dec
movsl
lods
sti
test
pop
testl
clc
fcom
pop
sbb
cmp
pop
jmp
adc
notb
insl
hlt
cld
scas
dec
mov
call
xchg
jmp
fcoml
pop
dec
jl
cmp
ds
push
sbb
shl
jl
xor
sub
lds
sub
xchg
xchg
dec
dec
add
ja
sub
stos
jle
sarb
loopne
bsr
or
lea
xor
xor
cmp
out
rclb
xor
pop
fmuls
aad
xor
test
pop
xor
push
mov
mov
daa
xor
stc
in
inc
or
mov
xchg
sub
in
pop
jnp
sarl
sbb
push
mov
test
or
dec
sub
dec
jns
lret
pusha
decb
adc
inc
inc
push
mov
dec
and
add
xchg
or
jno
push
xchg
je
gs
mov
je
inc
faddl
xor
ljmp
out
sub
inc
lret
subl
xlat
push
mov
int
fnsave
test
mov
xor
sub
dec
pusha
ss
push
mov
or
test
adc
stos
jp
mov
jne
mov
fistps
mov
mov
test
mov
cmc
and
sbb
jecxz
fildl
adc
gs
inc
shrl
inc
in
mov
mov
sbb
add
add
cmpsl
call
cmpl
pop
mov
repnz
mov
loop
stos
push
push
lcall
jne
or
sub
es
mov
in
out
pushf
pop
cmp
mov
ret
arpl
jns
dec
fistpll
sub
icebp
cmpl
sarl
nop
jnp
inc
dec
shl
sub
ret
das
fdivrs
fwait
mov
fmulp
inc
shrb
dec
dec
push
es
mov
aaa
cmp
push
std
scas
mov
xor
xchg
out
out
lock
ret
lcall
xchg
iret
adc
cltd
outsl
cmp
or
leave
lds
pop
cwtl
clc
imul
into
fs
cltd
adc
xchg
mov
cmp
mov
push
mov
inc
imul
pop
mov
xor
mov
sti
push
mov
mov
add
xchg
stos
sbb
dec
ret
out
xor
loope
and
or
lds
repz
lods
mov
es
dec
insb
sub
out
imul
xor
loop
push
inc
int3
cmc
jg
push
aad
xchg
stos
mov
sub
mov
pop
repz
cli
add
push
xchg
icebp
mov
push
mov
push
out
je
add
cmp
mov
jne
pushf
daa
outsb
imul
jb
out
inc
mov
imul
jmp
lods
loopne
cmp
xchg
negb
es
gs
cld
pop
sbb
and
xchg
xchg
mov
dec
push
test
test
push
test
push
fnstenv
pop
mov
sti
ret
add
inc
rorl
shrl
sahf
pop
push
call
xor
mov
dec
cld
std
mov
idiv
push
xchg
xor
mov
inc
jnp
inc
sarb
or
xchg
fstl
cmc
push
addr16
push
filds
pop
test
xchg
adc
sub
push
push
sbb
lods
bound
fisubrl
outsl
scas
or
shrb
pop
jnp
repnz
jmp
dec
nop
mov
nop
out
push
xor
lret
push
add
test
cmp
mov
les
jmp
adc
in
mov
pusha
mov
sete
aad
cltd
mov
mov
out
push
sub
movsl
fwait
shrb
mov
subl
test
cmpb
les
icebp
push
sbb
frstor
sub
inc
jmp
lea
pop
jecxz
jbe
xor
cmpsb
fisttps
xchg
push
aad
cmp
pop
sbb
jb
push
jmp
mov
xchg
jo
scas
in
cmp
sbb
pushf
fisubrl
mov
int3
rorl
jnp
push
jg
ret
and
add
orb
and
or
test
in
cltd
mov
inc
loop
pop
push
fs
jo
and
in
inc
jge
aam
sbb
xor
mov
lret
add
in
mov
dec
sub
popa
jl
vpunpckldq
mov
fidivs
sbb
in
test
jae
rorl
icebp
lahf
mov
push
ljmp
xor
mov
cld
lods
jno
push
inc
test
xor
shll
add
aaa
loopne
shld
jg
mov
into
xor
insl
mov
pushl
cli
cmpsl
mov
xchg
inc
call
mov
pop
mov
push
mov
mov
adc
adc
push
loop
dec
dec
fmuls
cmpsl
movsb
ret
jnp
jecxz
ret
xlat
dec
and
pop
jl
pop
push
jge
ss
adc
stc
cmp
das
inc
and
ljmp
and
and
xor
mov
sub
aaa
mov
adc
sbb
pop
fildll
in
add
xchg
ljmp
add
jge
push
mov
std
lds
pop
mov
out
lds
xchg
pop
sbb
stos
hlt
add
jge
lds
or
daa
arpl
sbb
push
mov
shlb
lret
mov
lcall
test
cwtl
cmp
and
aas
mov
lods
push
sahf
lods
shl
fcmovne
adc
mov
mov
push
call
lcall
rorb
pop
push
jne
jbe
or
pxor
outsl
mov
cmc
cli
pop
adc
psrad
xchg
jae
out
lcall
cltd
jmp
inc
cmp
notb
jge
or
clc
xor
or
rorb
inc
data16
adc
sbb
adc
pop
das
loopne
mov
leave
sbb
add
and
inc
fwait
shlb
fidivs
shr
insb
push
pusha
mov
rclb
shlb
test
inc
out
push
bound
dec
and
in
mov
cmp
inc
xchg
cs
mov
jo
jle
pop
fnstsw
aas
mov
fwait
mov
inc
mov
jne
mov
mov
push
lahf
jle
lcall
mov
jns
sti
dec
sbb
and
std
mov
jecxz
imul
scas
popa
mov
outsl
mov
rorb
xchg
sbb
xor
fisttps
xchg
mov
and
aad
sub
sub
sub
mov
shll
jg
and
aas
sub
xchg
push
cmp
mov
test
out
sub
jp
insb
sbb
nop
insb
aam
sbb
jnp
test
jae
out
dec
and
inc
pop
ret
aam
jb
dec
aaa
pop
cld
out
pop
mov
push
dec
dec
push
and
cmp
xchg
cmp
dec
repz
cmpsl
fstps
jmp
jge
push
test
jp
arpl
hlt
scas
mov
out
push
fsubr
adc
xorb
mov
cmpsl
pop
push
sub
cmpsl
jns
shll
mov
cli
lods
sub
jl
fmul
lsl
xor
inc
ljmp
rorb
addl
sub
faddl
pop
cmp
xchg
jb
mov
push
jae
inc
mulb
sbb
add
cmpsl
mov
fists
or
das
leave
jle
fs
aas
pop
fisttps
outsl
mov
pop
jnp
jno
lds
xchg
dec
xchg
adc
dec
dec
add
cmc
rcrb
into
popf
fucomip
faddl
inc
mov
mov
xchg
mov
jmp
stc
lds
jge
call
std
sub
hlt
arpl
xchg
adc
call
xlat
cmpsl
jbe
call
pop
cli
arpl
orl
clc
pop
sbb
xchg
push
insl
aas
inc
jns
jp
fdivrs
mov
out
dec
std
cmp
jnp
mov
add
clc
out
fnstenv
test
out
cmpsb
in
js
sub
test
rcrb
mov
iret
stos
mov
cmpsb
das
ja
cmpsb
fsubrs
xor
sbb
push
loop
outsb
inc
lds
faddl
push
pop
movsb
xlat
imul
and
xor
loop
stos
cld
data16
xchg
test
sarb
mov
jae
fidivrl
fldl
xlat
pushf
cmp
push
push
pextrw
data16
sbb
aam
jbe
cmpsl
imul
out
xchg
adc
sub
dec
in
add
shll
and
das
jl
incl
mov
repnz
push
repz
out
xor
mov
xlat
pop
in
cmpsb
or
popa
mov
js
jg
sbb
push
jmp
xor
inc
addl
test
inc
lea
or
inc
xor
and
dec
cltd
cli
mov
imul
dec
dec
push
loop
mov
je
jle
cmp
mov
inc
dec
in
lods
into
daa
dec
xchg
js
push
xor
repnz
pop
sbb
movsb
inc
hlt
push
dec
adc
cmp
fbld
das
outsb
sub
roll
cmp
and
clc
jbe
add
mov
out
outsl
ret
testl
enter
inc
pop
hlt
or
daa
fidivs
ss
mov
enter
fistl
push
pop
inc
stos
jbe
xchg
dec
xchg
inc
push
fs
adc
lcall
pop
fs
mov
adc
cli
dec
cmovle
jp
movb
sub
pop
arpl
andb
aam
jne
movsb
jge
and
jae
cli
hlt
push
cmpsb
add
pusha
jnp
pop
into
push
insl
mov
sbb
xchg
push
repnz
push
sub
jle
out
xchg
pop
mov
cmp
cmp
inc
inc
and
loope
add
cmp
pop
dec
jecxz
add
cmp
fcmovnb
push
lock
adc
mov
cltd
mov
xchg
or
or
jg
mov
mov
sub
push
cs
or
xorl
mov
jne
jecxz
cwtl
adc
lds
jbe
fistl
scas
jno
mov
data16
sbb
push
push
mov
mov
mov
adc
add
mov
int3
pop
pop
push
and
jno
xor
or
pop
and
shll
out
pop
inc
scas
xor
xchg
or
ds
stos
orb
out
sbb
fdivs
sub
lret
lea
mov
out
lahf
test
cmp
xchg
and
dec
lods
and
pop
and
ljmp
add
and
jmp
test
mov
fstsw
pushf
mov
xor
xor
jmp
test
test
iret
jp
repz
div
imul
movb
leave
pop
insb
mov
gs
inc
jmp
fists
mov
inc
xor
push
push
xchg
out
or
mov
add
adc
stos
pushf
xchg
push
ds
xor
pop
adc
clc
jmp
xchg
insl
test
inc
mov
clc
in
push
pop
xor
and
cmp
pop
push
bound
test
jo
pop
push
or
inc
pop
imul
mov
scas
sbb
pop
cmpsb
aas
mov
out
dec
fmulp
xor
xchg
cmp
push
xchg
sbb
lea
xchg
movsl
dec
push
lods
icebp
movsl
ret
or
out
stos
xchg
lds
xchg
pop
jae
mov
xchg
jecxz
cmpl
push
mov
imul
push
xor
sti
dec
std
pushf
data16
or
in
movsb
jmp
call
insb
imul
push
adc
push
and
mov
sti
mov
into
dec
lods
dec
popf
mov
xchg
xor
sub
cwtl
push
pop
dec
loopne
cmpsl
mov
mov
aas
cld
and
test
sub
push
out
shl
sub
and
push
out
subl
rep
mov
fdivr
inc
add
jne
xor
test
sbb
push
ffreep
out
jns
enter
mov
loope
lcall
lcall
pop
sub
mov
xorb
xchg
test
jle
push
xchg
push
or
and
stos
mov
shrb
xchg
outsb
push
sbb
mov
add
movsl
push
push
hlt
mov
clc
fadds
xchg
data16
lcall
mov
xor
xchg
cmp
adc
mov
inc
sti
sub
ss
fxch
sub
decb
cwtl
pop
hlt
mov
jmp
dec
je
xchg
or
jl
mov
out
inc
and
add
cmpsb
pop
ljmp
pop
fs
add
xor
jbe
scas
enter
ds
mov
adc
jns
cmpsb
adc
punpckhwd
int
push
lea
push
mov
insl
std
adc
pop
aad
rcrl
out
add
and
fistpl
pop
cwtl
sbbl
ror
cmp
mov
jbe
pop
es
addl
sbb
mov
adc
stc
add
mov
je
mov
xor
test
movsb
mov
pop
and
xor
xor
in
call
idivb
ss
ret
mov
imul
add
fcoml
loop
lock
ljmp
sub
mov
jle
leave
inc
clc
cli
xchg
fmul
mov
cld
cmp
push
test
ret
inc
dec
std
lcall
xorl
test
mov
sbb
shll
xor
cli
and
std
pop
pop
movsb
add
test
jge
and
add
adc
jno
les
shll
inc
add
dec
std
jo
iret
mov
lret
cmpsb
into
sbb
outsl
cmp
subl
dec
cltd
dec
lods
or
sub
movsl
adc
int
add
cmpsl
sahf
cmp
fdivrl
adc
mov
pop
cmp
icebp
mov
loope
and
mov
jb
ljmp
xchg
push
imul
sub
push
adc
add
xchg
outsb
add
mov
repz
movsb
cwtl
xor
jae
cmp
or
sub
cmp
and
mov
cmp
jmp
sarb
dec
pop
xchg
fcmovnu
dec
push
insb
rcll
popf
add
xchg
inc
adc
sub
mov
rcll
dec
popa
and
mov
xor
rclb
int3
pop
push
sub
ljmp
jle,pn
adc
sub
cli
cmp
pop
push
inc
sbb
gs
add
xchg
add
rcl
pop
push
push
dec
jno
sbb
arpl
pop
mov
jl
mov
cmp
rorl
sbb
into
enter
mov
sbb
dec
inc
arpl
push
mov
icebp
cmpsb
push
sarl
inc
add
add
adc
in
or
dec
jns
push
sub
dec
scas
inc
cmp
sub
add
mov
pop
out
xchg
popf
adc
pop
es
ret
cmp
pushf
mov
sbb
pushf
dec
cmp
popf
jno
ljmp
sti
call
mov
in
pop
fwait
mov
mov
les
imul
and
clc
dec
fs
mov
jb
pop
add
pop
inc
jae
jl
iret
das
jns
cmp
sub
lret
inc
and
pop
add
push
flds
adc
sbb
or
and
sbb
arpl
enter
mov
adc
adcl
xchg
nop
out
ja
dec
push
xchg
inc
repnz
call
jge
mov
jp
fs
mull
push
pushf
nop
scas
fcoml
jo
hlt
jge
popf
xor
xchg
lea
loope
mov
stos
cli
les
insl
jae
xlat
imul
bound
and
pop
stos
dec
push
jmp
enter
lss
mov
jns
jg
and
jo
inc
sbb
lahf
lcall
sub
icebp
loop
xchg
sub
or
fld
inc
mov
pop
pop
mov
pushf
jle
ficompl
jp
ja
sub
xchg
outsb
mov
mov
cmp
clc
dec
mov
xchg
dec
add
clc
jae
mov
out
sahf
cmc
fisubl
aas
push
mov
mov
mov
call
mov
dec
push
jmp
jmp
xor
mov
divl
aas
xchg
and
out
fcompl
sarb
fldln2
jge
pop
movsl
fnstsw
sbb
mov
sub
pushf
cmp
mov
test
mov
repnz
scas
and
mov
push
sub
mov
into
or
dec
and
pop
xor
jp
out
outsb
cs
cmp
stos
xlat
cmp
nop
out
and
xor
call
dec
mov
movsl
jg
add
dec
sub
push
xchg
mov
orb
stos
rol
jnp
xor
mov
fstl
mov
ljmp
add
cmc
cmp
jb
pop
add
lds
add
cld
inc
daa
xlat
fstps
inc
cmpsb
scas
shll
test
lods
bound
cli
xor
dec
push
push
movsb
cmp
sarb
das
xor
cmpsl
pop
adc
bound
xor
jno
ja
idiv
inc
movsl
in
adc
daa
das
push
cli
out
out
sbb
mov
mov
xchg
out
push
or
push
das
xchg
cmp
imul
std
ja
add
loopne
sbb
jl
sub
xchg
mov
cs
mov
outsl
leave
outsb
add
gs
cltd
mov
xor
or
test
mov
shrl
push
mov
sub
rorb
dec
les
or
push
sbb
xchg
mov
or
lahf
loope
in
fwait
or
pop
mov
push
out
out
lods
sub
pop
pop
jge
or
jmp
add
ljmp
and
shlb
test
aam
mov
lds
xchg
fcom
jecxz
out
repnz
std
sbb
repz
out
out
nop
dec
dec
in
sti
cli
pop
movsb
push
xchg
js
pop
mov
lea
jbe
xchg
ds
add
pop
pop
mov
dec
in
mov
push
int
cld
push
mov
mov
mov
push
and
mov
and
xchg
inc
cmpsl
mov
cmp
loop
pop
out
jge
arpl
mov
sub
jl
jnp
xorl
mov
std
imul
xchg
test
movsl
fwait
enter
adc
cmpsb
mov
sub
in
ljmp
fiadds
enter
mov
or
ret
xor
jb
out
into
mov
fstps
pusha
xchg
popa
std
idivb
sbb
stos
dec
jp
in
shl
shll
mov
rcr
aad
cmpsb
inc
scas
pushf
mov
pop
jno
jle
sub
ret
aam
daa
pop
bextr
int
ds
push
sti
insl
pusha
fadds
xchg
out
cli
fucom
pop
imul
les
sub
sbb
scas
jne
mov
sbb
ja
dec
lea
cmp
andb
inc
push
add
loopne
sub
arpl
mov
mov
mov
lret
jle
jbe
loopne
ja
aas
arpl
das
ja
xor
or
mov
adc
sub
pop
stc
jl
xor
cmp
cltd
rcrl
xchg
xchg
cmp
fcmovb
mov
and
clc
mov
int
mov
sbb
xor
push
mov
pop
test
ficoms
mov
mov
test
or
popa
pop
pop
xlat
jg
xchg
cmpsb
les
sbb
adc
or
inc
and
hlt
xchg
pop
mov
scas
ja
icebp
shrb
jno
xchg
inc
inc
lods
es
jge
dec
roll
dec
sub
pusha
in
std
leave
aas
dec
jge
andl
add
mov
pop
sbb
xchg
adc
inc
inc
push
jno
xor
mov
nop
shrb
pop
in
sbb
xchg
addr16
int3
outsb
mov
inc
and
outsb
popa
out
jl
das
and
cmp
out
push
sbb
call
xor
stos
lahf
stos
xor
and
test
int3
and
inc
in
push
xor
lea
mov
push
lret
mov
push
clc
clc
sub
mov
mov
xchg
xor
std
sub
sbb
cli
jle
in
adc
lods
faddp
cli
mov
lcall
or
cmp
mov
in
mov
push
inc
or
sub
fnstenv
sub
push
das
jne
mov
mov
cmp
adc
mov
or
cmp
mov
js
pop
rorl
sbb
lcall
push
mov
movsl
std
xlat
mov
push
outsl
mov
or
les
out
and
sbb
or
shll
xchg
xchg
pop
ret
jp
and
in
movsb
mov
cmp
jmp
addr16
mov
pop
sub
call
mov
fucomip
or
push
cmp
ret
les
mov
xchg
dec
shll
jnp
stc
sub
jmp
jmp
dec
push
jns
andb
mov
js
test
movsl
cmp
add
or
inc
out
fldcw
cmp
push
testb
sbb
ret
stc
inc
cmpsl
mov
imul
adc
outsb
mov
lahf
cmp
nop
push
in
dec
fcmove
push
and
push
adc
rcrb
js
sahf
inc
leave
and
movsb
mov
sub
xchg
adc
jno
movb
inc
repnz
or
lret
cwtl
aas
idiv
ret
popf
jns
nop
sbb
push
cs
cmp
pop
shlb
cld
lock
sub
sbb
sub
pop
xor
imul
rorl
jae
cltd
in
cmp
out
inc
out
scas
lea
pop
cli
sti
push
mov
daa
or
mov
pop
roll
stc
cmpsb
dec
cmpsl
and
adc
cmp
dec
ror
lea
es
test
fwait
lds
inc
adc
mov
jge
decb
add
stos
pop
sbb
and
and
sti
aad
ret
mov
sbb
fwait
inc
jle
dec
mov
and
dec
and
jl
fimull
in
out
repz
mov
insl
insl
mov
inc
sub
dec
and
fisttps
xchg
sub
ror
out
dec
xor
ss
insl
pop
pop
cwtl
test
adc
xchg
gs
cld
scas
mov
test
xor
lods
inc
xorb
add
sbb
jnp
add
sbb
shlb
popa
or
push
and
mov
repnz
in
fisubs
cmpsb
out
lods
sub
ljmp
es
mov
js
add
in
rcrb
shrb
push
mov
lock
in
pop
pop
fstpt
pop
mov
mov
outsb
stos
lock
mov
xor
fisubrs
pop
or
xchg
and
ffree
cld
int
enter
out
jmp
jmp
push
ss
rcrb
sbbb
push
test
push
pop
pop
lea
pop
cmp
shlb
jmp
mov
sbb
sub
and
jge
outsl
lods
nop
pushf
and
sub
and
mov
mov
xor
pop
dec
aam
push
mov
shr
and
sub
xchg
mov
fsubl
and
adc
aas
pushfw
outsl
jne
mov
push
dec
int
loopne
mov
out
jecxz
pop
lock
movsl
rclb
movsl
mov
sbb
inc
andl
andb
int3
adc
and
mov
mov
lahf
mov
fnstsw
xchg
imul
enter
cwtl
and
lea
lea
xorb
adcb
lcall
outsb
mov
shlb
inc
les
hlt
xchg
sub
mov
or
enter
inc
pushf
sahf
pop
push
xor
jecxz
jo
lcall
pop
xchg
mov
pop
lods
es
sub
sbb
outsb
push
mov
inc
add
jbe
aad
pop
push
ret
or
movsl
sbb
push
push
dec
xchg
fmull
push
jno
dec
sub
mulps
sbb
sbb
xchg
mov
mov
lret
mov
jecxz
sub
mov
scas
leave
xor
inc
fs
and
pop
mov
call
ds
mov
mov
iret
push
jl
mov
push
insl
scas
aad
cmp
out
repz
sbb
clc
movsb
scas
jp
lock
nop
inc
int3
scas
fistps
push
fnstcw
inc
fldenv
inc
push
out
popw
add
pushf
mov
data16
lret
jnp
rol
pop
ljmp
test
mov
mov
cmp
mov
lret
lock
mov
xchg
mov
rorl
adc
mov
jns
in
ret
cli
add
pop
test
add
enter
inc
stc
sbb
and
mull
adc
js
inc
movsb
int
adc
adc
xorl
stc
sbb
enter
mov
sti
mov
xor
ds
fists
std
out
cmpsb
je
inc
shll
cmc
icebp
popf
jge
into
xchg
pop
mov
je
jg
or
adc
or
lea
mov
insl
addr16
into
sti
enter
ja
push
cmp
lods
push
in
popf
cli
xorl
int
mov
test
sub
adc
mov
jmp
inc
les
es
sub
cmp
lcall
pushf
xchg
xor
or
cmp
or
shlb
mov
cwtl
dec
sbb
jne
dec
repnz
pop
outsb
pop
or
and
sti
cli
cmp
cmp
sub
out
adc
imul
lahf
popa
cmp
outsb
ja
xchg
daa
inc
outsb
mov
movsl
mov
ss
inc
lods
mov
and
jb
sbb
xlat
lock
mov
shrb
mov
mov
out
out
fmull
dec
push
lods
movsl
add
cmpsb
insb
push
leave
cltd
and
movsl
sahf
xchg
loop
push
cmp
xor
call
or
xor
pop
insl
pushf
mov
loop
and
mov
repnz
pop
sbb
aad
mov
push
mov
jne
lret
aad
ret
jne
rcll
ret
dec
shrl
add
adc
inc
xchg
inc
shll
cmp
mov
pop
rcr
movsb
mov
xchg
je
xor
pop
jne
cmp
push
jo
push
loope
push
aas
out
ret
mov
int3
mov
and
or
adcl
and
dec
cmc
dec
mov
fiaddl
mov
cwtl
mov
mov
sbb
and
cs
test
ficompl
popa
ss
lret
pop
in
pop
push
mov
sub
fucomi
pop
push
mov
jo
pusha
out
sub
pop
lahf
ret
imul
or
call
movsb
mov
push
jne
xchg
sub
cmp
loopne
cmpsb
mov
sub
arpl
ret
fisubs
pop
jp
inc
out
enter
jge
dec
cmp
dec
mov
mov
push
mov
sub
popf
xor
jl
inc
and
aam
pop
out
not
roll
out
xchg
sarb
popf
jo
sti
xchg
rcll
push
jecxz
in
pop
lds
xchg
push
inc
sub
out
push
clc
dec
popw
pop
int
pop
clc
sahf
mov
sbb
pop
insl
scas
or
cltd
sbb
shrl
repz
ljmp
test
mov
and
mov
addb
testl
pusha
lock
pop
adc
sub
mov
cmpsl
int3
pop
xchg
es
imul
xor
dec
adc
je
loopne
fidivrs
mov
shl
inc
stc
push
adc
add
mov
adc
pop
jbe
add
testb
or
imul
or
mov
insb
pop
movsb
push
std
inc
ja
scas
into
in
dec
add
popa
adc
lcall
jmp
adc
enter
out
xchg
movsb
iret
fwait
andb
ljmp
mov
or
inc
in
fs
jge
mov
mov
xchg
jnp
movsl
pop
dec
out
loope
mov
xchg
inc
mov
orb
or
push
jns
sbb
rcrl
push
mov
outsl
pop
or
mov
xlat
sbb
andl
mov
lds
push
xchg
xchg
xor
cmpsb
fiadds
mov
cmp
pop
xor
sbb
movl
nop
cmp
cmpsl
mov
repnz
lock
ss
outsb
xchg
xchg
push
xchg
flds
mov
mov
xchg
mov
sbb
push
and
mov
cmp
or
stos
das
or
pop
xor
lret
mov
inc
sbbl
fnstenv
imul
xchg
jns
sbb
dec
xor
adcl
mov
iret
jne
push
lock
idivb
mov
insl
jo
hlt
daa
dec
lea
mov
mov
je
jae
stc
pop
je
pop
jne
dec
jb
rol
xor
in
dec
dec
or
or
sub
cld
ficompl
mov
test
imul
lods
sbb
shll
shrb
jbe
stos
gs
fmull
adc
dec
in
cltd
ret
push
jecxz
xor
push
icebp
decl
popa
mov
and
out
pop
add
adcl
pop
enter
mov
icebp
test
cmp
lods
mov
mov
sub
mov
inc
and
hlt
and
sti
xor
aad
pusha
subb
into
inc
sti
int3
jbe
jg
je
mov
or
mov
sahf
mov
mov
xchg
xchg
std
mov
dec
fisubs
sbb
stos
xchg
add
or
dec
popl
sbb
rorb
dec
xor
fs
mov
mov
lret
and
insl
insb
and
xchg
push
addr16
das
inc
gs
or
testl
scas
mov
cmc
mov
popa
cli
pop
mov
or
enter
mov
roll
out
xor
scas
sub
dec
scas
or
adc
jp
and
pusha
mov
push
insl
mov
pop
push
and
es
out
adc
pop
movsb
jae
push
add
mov
xor
xor
mov
mov
bnd
pushf
pop
sbb
add
sub
jne
outsl
push
js
test
insl
jl
fsubs
adc
ficoml
adc
push
decl
out
sbb
adc
xor
sahf
gs
mov
ret
mov
leave
sub
lahf
lcall
jecxz
cwtl
fldt
aaa
xchg
aad
push
sub
and
and
pop
add
cmp
mov
sti
jne
jno
push
lods
shrb
in
test
arpl
fsubrs
gs
sbb
jb
aas
mov
stos
inc
inc
add
push
repnz
leave
mov
cmp
and
or
in
xor
mov
mov
test
addr16
jns
jecxz
pushf
cmp
pop
sar
sti
stc
in
lods
push
pop
inc
leave
mov
inc
xchg
mov
or
xor
fsts
pop
sub
repnz
jecxz
addb
stc
es
mov
fdivl
into
mov
pop
mov
fiadds
fcmovb
or
and
xor
repz
stos
loop
movsl
lret
jbe
lret
sub
add
sbb
loopne
pop
add
mov
mov
outsl
movsl
ljmp
fcomp
sub
push
adc
xor
cwtl
push
cmc
gs
or
mov
jp
xchg
data16
adc
lea
add
sub
and
inc
or
dec
icebp
pop
insl
mov
pop
jmp
xchg
dec
mov
pop
dec
sbb
mov
push
js
idivl
sbbb
out
pop
fcmovnu
jb
mov
jbe
cmp
and
shll
jp
aas
xor
cmpb
nop
mov
or
adc
lods
adc
loopne
pop
out
divl
dec
mov
xchg
pop
sti
adc
shlb
and
inc
iret
pop
in
mov
addr16
in
inc
or
push
fisttpl
stos
jle
mov
jns
adc
mov
hlt
or
aas
mov
sbb
dec
or
hlt
in
jbe
mov
push
sub
push
push
lret
icebp
xchg
lock
es
pushf
out
cmp
pusha
mov
addr16
inc
adc
mov
ljmp
daa
mov
bound
aam
xlat
xor
xor
test
pop
add
mov
jl
xchg
jg,pn
or
js
out
ljmp
lret
pop
sub
nop
aad
lea
mov
cmp
xchg
adc
aas
pusha
fadd
data16
cmp
rorl
and
sahf
loop
lcall
negb
in
push
pop
ja
inc
arpl
imul
js
fwait
ret
and
imul
stos
xchg
loopne
out
inc
ljmp
xor
cmpsb
and
ljmp
int
or
addr16
push
adc
in
push
sub
mov
aas
fdivl
jge
call
jmp
dec
push
jbe
imul
nop
cmpsl
dec
loop
cs
mov
stc
mov
test
push
add
test
imul
push
inc
jbe
bound
jg
mov
sarb
int
sub
data16
jmp
clc
ficoml
dec
push
mov
ljmp
push
mov
iret
mov
ret
mov
idiv
scas
into
xchg
test
mov
inc
dec
in
in
cmp
dec
les
in
or
mov
lcall
movsl
pusha
insl
sahf
fwait
repz
cmpl
mov
push
push
sub
int
sub
mov
jge
fnstsw
cli
mov
call
test
in
adc
popf
jle
clc
jbe
cmpsb
aaa
in
mov
dec
lods
inc
mov
pop
scas
fcomps
stos
sar
dec
xor
xorb
in
lock
jo
cmp
sarl
in
push
lock
or
popa
std
push
loope
cwtl
dec
xor
fisttpll
sahf
outsb
jp
les
lret
sbb
pop
mov
sbb
adc
mov
adc
pop
jnp
adc
addl
mov
mov
jno
adc
push
sarl
sbb
mov
sbb
ljmp
push
int
movsl
rcrb
push
mov
sbb
push
adc
test
pushf
mov
adc
and
addr16
loopne
fnstenv
das
sahf
push
push
jns
xchg
addb
jmp
cs
scas
xchg
sarb
xor
fisubrl
adcb
popf
in
sub
mov
in
cmp
loop
out
mov
stos
stc
xor
lahf
xchg
js
dec
shlb
lock
aas
filds
sbb
pop
enter
push
int3
and
xor
mov
ror
jecxz
pop
lss
or
xchg
jbe
sbb
outsb
cwtl
shr
push
and
mov
or
in
insl
pop
cltd
mov
fisubrl
xchg
jmp
in
sbb
jp
lcall
push
xchg
or
lret
lret
cmc
sahf
dec
mov
sub
out
push
mov
subb
and
aaa
dec
mov
fcompl
scas
int3
pushf
or
int
pop
adc
or
fstps
icebp
mov
into
mov
fisubrs
mov
shll
and
loopne
sti
scas
pop
int
iret
push
jmp
xor
subb
lea
adc
ds
pop
cmp
mov
orl
std
xlat
cmp
fcompl
jae,pn
adc
insb
rol
push
stos
aam
sbb
pop
jo
ljmp
in
in
leave
out
xor
addb
std
in
push
sub
xor
mov
cmpsb
xchg
test
hlt
lret
int3
push
cld
xor
push
aam
add
xchg
inc
fmull
xchg
pop
imul
movsb
cmp
push
push
fiadds
mov
xor
out
loope
mov
outsl
sbbl
mov
bound
jle
fstpt
scas
xchg
xor
push
into
inc
and
mov
xchg
adc
ret
push
cwtl
into
cli
stos
fcoms
je
inc
lods
cli
pushf
jg
dec
pop
add
and
mov
cmp
or
rcr
cmpb
gs
les
xchg
fstpl
inc
scas
stos
stos
jmp
int
dec
jbe
loope
lret
fldenv
xor
jg
lret
pop
and
dec
pop
mov
mov
and
push
test
std
dec
sahf
xchg
xor
out
dec
into
mov
xor
cmp
jmp
mov
ret
test
in
pop
jo
push
jle
repz
mov
inc
cld
mov
fwait
sub
pop
movsl
add
ja
mov
jns
out
pusha
jns
mov
filds
add
repz
mov
test
out
clc
push
adc
movsl
jmp
icebp
xor
add
rorb
mov
movsb
pop
mov
daa
jno
dec
sahf
ja
xchg
fucomip
pop
sub
mov
jp
and
mov
loop
push
mov
orl
test
sahf
enter
cvtps2pi
inc
cmp
dec
lock
and
mov
inc
sub
mov
xchg
fstps
mov
adc
int3
pop
mov
js
sahf
leave
jno
test
or
in
into
fdivl
lods
aas
and
push
leave
mov
in
jnp
inc
pushf
mov
inc
aad
rorl
sbbb
popf
nop
cmp
mov
xchg
imul
jmp
test
or
pop
xchg
test
dec
or
mov
adc
leave
in
mov
clc
lcall
scas
or
add
dec
jbe
out
std
lret
mov
aas
xchg
cmpsb
sbb
mov
ja
and
cmp
fucom
cmp
cmp
hlt
or
cld
xchg
flds
repnz
repnz
cmp
pop
dec
push
or
sahf
out
pop
sub
xorb
xchg
les
insb
sti
nop
sbb
pop
lds
jl
xchg
or
loop
mov
lods
pop
cmpb
lcall
outsb
jg
mov
dec
inc
pop
jle
push
in
insl
mov
testl
rclb
rcrb
in
push
fimuls
int
mov
popl
mov
nop
out
nop
les
in
cmp
sahf
push
push
in
aad
mov
into
ds
rcrl
pop
xchg
test
or
fsubl
jb
pop
adc
push
rcrb
int
pop
fisttpll
mov
sub
xchg
xchg
pop
movsb
mov
mov
xor
inc
adc
inc
xchg
popa
insb
mov
ljmp
shrb
daa
cmc
ret
imul
cmp
add
jne
rcrb
xlat
inc
xor
andb
into
int3
jno
adc
movsl
mov
outsb
pushf
and
dec
sub
aad
in
sub
jmp
loope
aad
loopne
mov
jge
dec
mov
pop
mov
fidivl
cmp
push
loopne
cmp
sahf
xchg
shlb
add
out
clc
call
daa
jne
fildll
and
aad
mov
push
int
adc
mov
pop
sbb
inc
xchg
sub
mov
xor
and
cmp
jg
iret
adc
shlb
icebp
add
pop
lahf
fdivp
icebp
repz
mov
in
bnd
mov
push
aam
add
fisttps
movsl
out
xchg
mov
icebp
pusha
mov
pop
mov
dec
xchg
pushf
int3
push
dec
mov
mov
ds
scas
or
pushf
add
cmpsl
xlat
insb
xchg
or
outsb
cmp
lahf
mov
pop
outsb
mov
shll
fcomps
dec
dec
jae
loop
xor
push
ss
sub
lcall
jne
and
xchg
jo
lods
and
test
or
cmp
sub
stc
stos
aam
xchg
negb
adc
mov
pop
fistps
fiaddl
mov
popa
mov
xor
repnz
cld
mov
mov
mov
call
out
fcomps
cmp
cmp
push
lahf
jmp
and
push
loopne
jo
mov
adc
les
sbb
xor
subb
lahf
push
hlt
pop
mov
idivl
lcall
loopne
movsb
adc
push
cwtl
lret
lret
push
jae
pop
jl
in
xor
leave
xor
les
cmp
and
loope
xor
and
xchg
out
adc
add
jne
fdivrs
inc
adc
shll
push
xor
adc
jge
test
xchg
in
adc
addr16
adc
subl
bound
notl
xor
mov
stos
jbe
xchg
pop
xchg
daa
or
inc
or
aas
outsl
testl
lcall
cmpsb
call
int3
push
imul
iret
add
test
xchg
lcall
clc
stc
fcomp
aad
sub
cwtl
stos
inc
add
movsl
in
inc
sbb
pop
mov
outsl
ljmp
jb
mov
pop
gs
mov
jnp
mov
rcrl
aam
insb
ret
mov
xlat
leave
pop
outsl
cli
popa
lret
mov
int
cmpb
mov
fcomi
imulb
aas
fildl
xor
jg
orb
push
push
xor
inc
fimuls
fstps
jecxz
daa
xchg
push
sahf
gs
jnp
inc
or
add
pop
add
push
mov
mov
int
push
xchg
stos
aam
sti
cmc
mov
icebp
push
xchg
enter
scas
idivb
inc
pop
fsubr
inc
jmp
sub
in
xchg
inc
or
add
lret
dec
push
testl
lretw
mov
push
mov
cmp
loopne
fisttpll
lret
ret
roll
loop
sahf
int
pop
inc
lock
test
push
sbbb
pusha
les
inc
loop
xor
mov
add
pop
add
pop
push
jne
js
push
out
out
push
sbb
push
scas
fwait
dec
sahf
inc
cli
dec
inc
pushf
add
dec
mov
cmp
xchg
sahf
inc
testl
movsl
fiaddl
cltd
sbb
dec
or
movsb
out
ret
push
xchg
and
jge
adc
aam
push
push
sbb
inc
inc
fldcw
and
mov
add
and
push
lahf
mov
push
lret
xor
rcrb
inc
jp
lret
fwait
out
jl
stc
into
sahf
out
dec
rep
dec
sbb
xor
icebp
xchg
add
repnz
scas
dec
dec
test
mov
cmp
mov
sbb
push
xchg
push
cmp
in
insb
insl
mov
sbb
jp
movsl
add
inc
jl
add
sub
adc
jmp
mov
push
lods
adc
inc
inc
jmp
out
mov
adc
mov
add
leave
or
mov
or
in
cmp
fwait
nop
xchg
je
cmp
into
leave
cmp
cli
sbb
and
repnz
push
jmp
sbb
add
fistpll
jno
or
into
in
xor
ljmp
fadds
and
bound
das
lahf
xor
jnp
jle
jp
movsl
pop
pop
aaa
ljmp
addr16
fucomi
ljmp
shll
sahf
lods
xchg
in
jmp
xor
adc
js
bound
fimuls
mov
ret
in
adcb
lret
push
popa
mov
fsubrs
push
mov
and
mov
push
lret
pop
gs
sbb
adc
test
add
mov
es
repnz
cltd
jmp
xor
and
lods
mov
inc
mov
inc
ret
inc
loope
insb
or
andl
push
sbb
mov
jmp
push
fldcw
dec
out
aam
jecxz
insl
add
cmp
cltd
push
jmp
mov
pop
or
fisttps
les
rdpmc
adc
xchg
lea
sarb
movsb
ret
or
loopne
xor
cld
rcr
push
nop
pop
jge
lret
add
mov
mov
fldenv
bound
pop
cmc
xor
add
rclb
and
pushf
inc
std
int
pop
jg
ljmp
test
mov
nop
push
and
adc
sub
movsl
pushw
out
mov
sub
cmp
jno
out
pop
jecxz
test
mov
push
les
mov
insl
inc
mov
mov
pop
sub
or
adc
mov
mov
mov
push
jge
xor
sub
mov
push
mov
add
clc
push
ret
pop
lods
lea
add
xor
sbb
pop
mov
xor
lds
shlb
xchg
push
and
shrb
sub
sbb
lcall
insb
das
shr
in
scas
sbb
mov
dec
push
in
ret
mov
mov
int
out
movsb
mov
mov
inc
jg
mov
lcall
int
and
adc
cmp
inc
dec
push
xchg
daa
mov
adc
or
sbb
mov
loope
add
jp
fstp
lock
int
shlb
aad
pop
aad
xchg
stc
movsl
movsl
pusha
in
push
pop
xorb
sbb
mov
xor
jg
xchg
loopne
mov
mov
in
and
orl
mov
push
inc
xor
pop
or
adc
gs
add
add
or
or
adc
xor
jp
pusha
xchg
aas
sub
scas
repz
movsb
add
into
pop
sub
repnz
xchg
inc
in
sub
rcrl
dec
adc
scas
mov
inc
pop
inc
fimull
fadd
adc
aaa
jecxz
pop
adc
mov
data16
inc
xchg
mov
ror
adc
mov
js
sti
jo
or
subb
xchg
into
ficompl
mov
das
int3
nop
push
stos
mov
dec
fcomps
jnp
mov
or
jns
xchg
add
fwait
xorb
pop
xchg
mulb
insb
popa
pop
test
jmp
out
push
jmp
imul
out
sbb
test
ret
ds
sbb
outsl
push
sbb
daa
pop
dec
inc
stc
outsl
test
jmp
das
call
lods
lods
xorl
lea
jp
sbb
dec
dec
dec
mov
int3
js
andl
aas
hlt
dec
leave
aam
jns
push
dec
shlb
repnz
or
mov
and
push
data16
icebp
cld
out
mov
cmpsl
rcrl
push
inc
xchg
jmp
cld
loop
ja
jbe
aam
pushf
cmpsb
dec
sti
and
adc
xchg
nop
testb
and
pop
cmp
hlt
addr16
repnz
aam
mov
or
xchg
lcall
lods
scas
ljmp
xchg
lods
icebp
pop
in
ss
sbb
jbe
bound
mov
ss
ret
sub
fmuls
fwait
mov
shrl
mov
int
pushf
insb
mov
fmull
ret
fildl
and
pop
pushf
lret
enter
call
call
jge
xchg
sti
push
lcall
sbb
lods
or
shl
jge
lret
fld
mov
icebp
cltd
decl
cmp
xchg
adc
ret
cmpsb
fs
aas
leave
shlb
bound
xchg
movsl
ret
adc
stos
idiv
mov
enter
xchg
ficoms
in
pop
xor
aam
mov
data16
pop
push
pop
jae
xchg
mov
cwtl
mov
cltd
mov
repz
inc
fs
mov
and
xchg
jle
insl
lret
cwtl
xchg
ss
xor
sbb
rcll
mov
xlat
aaa
scas
and
cmp
leave
nop
xchg
or
jno
shr
test
pop
das
iret
sub
daa
dec
mov
mov
nop
and
mov
xchg
cmpsb
cwtl
subl
imul
cs
jo
add
mov
and
fistl
jb
inc
jp
cli
xchg
lods
jg
add
lret
push
jp,pn
pop
and
or
mov
mov
jle
inc
jmp
mov
adc
stos
imul
stc
inc
out
mov
out
jecxz
jg
mov
push
lret
pop
sbbb
and
nop
or
xor
jo
mov
xchg
and
mov
jle
adc
jnp
xchg
mov
lahf
std
jae
fisubrs
add
orb
enter
xchg
push
xchg
in
xor
lea
mov
sub
cmpl
cmp
dec
sbb
or
xor
and
cmp
cmp
mov
inc
sti
add
cmp
out
bound
xchg
dec
pop
xor
pop
lods
xchg
test
pop
mov
xor
push
sbb
orb
testb
fsubs
cltd
into
lret
ja
outsb
testb
or
push
das
data16
loop
or
bound
jp
inc
mov
arpl
pop
pop
insl
hlt
xchg
mov
lock
aam
push
pop
test
cwtl
faddl
cld
and
mov
dec
dec
not
sbb
popf
out
inc
jb
push
and
rcrb
mov
jl
leave
jne
repnz
lock
lods
dec
xchg
xchg
fisubrs
imul
stos
adc
or
dec
inc
fidivl
inc
arpl
out
mov
or
hlt
mov
push
lods
repnz
popa
fsubrs
shlb
shrb
xlat
mov
push
out
sbb
dec
test
cld
jp
sahf
mov
mov
mov
std
mov
adc
jbe
xchg
fdivs
insl
mov
jl
push
nop
dec
cmpsb
lods
pop
lock
mov
xchg
inc
jge
xchg
test
out
ljmp
aas
add
inc
dec
push
dec
negl
icebp
testl
push
ss
push
jne
popa
jge
or
xchg
mov
scas
pushf
mov
mov
inc
cmpsl
loopne
cs
rolb
mov
aas
inc
loopne
jmp
mov
stos
rorb
cs
subb
inc
test
shrl
fbstp
fdivrl
jo
jo
repz
sub
ss
ficoms
adc
mov
call
jno
fsts
test
outsb
xorl
inc
enter
inc
jp
mov
jbe
das
gs
in
movb
shll
xor
or
or
and
or
mov
fcmovb
aam
sbb
lea
mov
lret
sbb
pusha
push
iret
dec
mov
push
inc
in
lahf
sub
mov
fcompl
lods
and
ret
pop
in
cs
fdivrl
imull
mov
and
jns
data16
xchg
xchg
scas
and
mov
in
lahf
mov
fisubrl
cmc
cmpsb
testb
hlt
push
jp
dec
pop
xor
mov
pop
das
jns
popa
sub
into
lds
ret
mov
ds
cmp
sbb
jmp
enter
aam
xchg
jns
lcall
and
out
popf
shl
mov
stos
cmp
mov
sbb
sub
add
pushf
pusha
cmp
jg
cmp
dec
shll
int
dec
inc
sbb
addr16
stos
movsb
pop
fld
dec
pop
inc
mov
and
pop
jl
cmp
clc
push
fs
arpl
sete
add
in
popa
and
nop
xchg
pop
ret
dec
out
add
lret
push
xor
data16
pop
jbe
inc
out
sbb
mov
push
xlat
inc
cmp
jne
pusha
addr16
loope
fistpll
lahf
popa
xor
push
pop
xlat
aad
jp
mov
stos
lret
insl
cli
xchg
fstp
mov
mov
mov
lds
sub
and
outsl
pop
cwtl
icebp
sub
fidivs
mov
inc
push
xorb
test
jnp
jmp
inc
lret
lahf
test
arpl
data16
insl
out
pop
dec
xor
and
jb
or
cmp
jecxz
inc
xchg
fidivrs
cmc
subl
lret
mov
cli
jge
push
leave
jl
xchg
xchg
mov
mov
jl
push
aam
lcall
rcrb
mov
ljmp
pop
xchg
xchg
arpl
mov
scas
inc
fstpl
and
lods
mov
sti
pop
nop
das
das
rcl
xchg
iret
dec
sbb
aad
daa
enter
or
sbb
cwtl
adc
mov
sahf
add
pop
sbb
pop
adc
mov
int3
xor
imul
lea
mov
cmpsl
rcrb
popl
lea
sbb
repnz
push
test
push
repnz
push
repnz
xor
xlat
lcall
mov
stc
xchg
call
inc
inc
int3
mov
enter
xor
adc
mov
pop
mov
mov
test
testl
and
xor
cli
lods
xchg
dec
dec
xchg
cmpsb
pushf
or
or
ss
std
ret
mov
shll
mov
pushf
cmp
pop
testb
hlt
adc
dec
stos
rorl
xchg
jmp
dec
jle
xchg
push
sub
int
pop
fbld
cld
loope
scas
pop
inc
test
loope
pop
add
testl
mov
add
in
lahf
mov
in
mov
lret
lahf
mov
mov
pop
cltd
xchg
cwtl
add
scas
les
cmp
fsubr
lret
clc
adc
cmp
mov
stc
loope
and
cld
jl
sbb
push
or
jmp
aaa
andl
inc
sub
adc
push
push
mov
cmp
add
aam
shll
inc
stc
mov
fidivrl
cmp
adcl
ja
ds
into
mov
loopne
sub
lock
shrl
xchg
icebp
dec
hlt
dec
cwtl
lock
popa
pop
loope
or
or
outsl
pop
jl
pop
les
insl
lret
enter
adc
dec
xor
pop
xchg
aaa
rorl
out
cmp
ss
es
add
sub
sub
fiadds
sbb
jp
cli
jge
pop
insb
popf
xchg
xor
cld
les
fadd
cmp
adc
jecxz
mov
outsl
add
movb
mov
pop
cmp
cmp
sbb
scas
inc
call
pop
or
pop
adc
cmp
push
dec
jno
push
es
inc
sub
iret
xlat
xchg
cwtl
jno
or
jg
aad
sub
jno
lods
jle
dec
imul
xchg
push
dec
sbb
fidivl
insb
cmp
push
adc
mov
popa
inc
icebp
scas
pop
pop
fstpt
sbb
xchg
push
sub
jno
les
xor
adc
jbe
and
sbb
jnp
dec
loope
cmp
adc
inc
pop
popa
xchg
aad
jp
pop
dec
ja
addl
hlt
or
and
cmpsb
add
pushf
push
mov
or
fwait
push
pop
lahf
lret
dec
sbb
mov
rorb
js
out
adc
cmp
imul
pop
sub
xor
shll
adc
adc
inc
mov
incl
mov
lods
and
movb
pop
fnstsw
hlt
dec
aad
std
or
inc
cmp
cltd
loope
lea
cmp
fnstenv
ds
inc
aas
jmp
and
push
mov
aas
incb
lcall
neg
aas
push
outsb
inc
and
inc
mov
add
pop
xchg
lcall
adcl
sub
lea
loop
sbb
xor
rol
imul
cltd
hlt
out
adc
xchg
lahf
inc
add
dec
add
js
and
aaa
or
cmp
or
sub
push
cmp
push
out
cmp
imul
jl
mov
push
pop
aam
jp
mov
leave
inc
or
mov
xchg
cltd
lret
inc
push
jo
mov
add
pop
sbb
jb
repnz
xchg
adc
or
and
imul
leave
push
push
cmc
jae
ss
sbbl
push
adc
stos
ja
movsb
push
add
push
adc
mov
std
pusha
ss
xor
dec
lret
in
add
daa
imul
push
and
or
outsb
mov
push
testb
pushf
sub
test
sbb
sub
or
and
fists
cltd
mov
outsb
imul
xchg
jle
mov
fdivrp
add
shrb
cli
ret
int
lret
add
aam
ljmp
sbb
dec
scas
jns
lock
pop
lret
mov
mov
mov
push
or
addb
inc
fdivp
push
adc
mov
xchg
and
lret
mov
out
cwtl
mov
sbb
imul
ljmp
push
xchg
mov
movsl
fsubrl
add
sbb
pop
mov
daa
dec
cmp
repnz
lods
pop
jp
ljmp
mov
jne
push
push
cmp
push
stos
xorb
xorb
scas
sub
incl
ret
xor
inc
dec
xor
mov
push
mov
aam
or
mov
movsl
mov
adc
stos
jno
sub
mov
sbb
mov
or
mov
or
popa
inc
lea
inc
in
sbb
mov
je,pt
lret
and
push
loopne
xchg
dec
and
pop
cmpsl
xlat
out
push
adc
push
dec
das
in
mov
sti
adc
mov
scas
pop
xor
dec
pop
jno
out
adc
cld
in
sub
mov
adc
sbb
test
frstor
std
or
cmc
mov
mov
mov
repnz
pop
aaa
pop
pushf
mov
cmp
ret
sub
mov
into
cmpsl
rorb
ret
int3
aas
in
lock
sbb
and
vunpckhps
cmpsl
outsb
mov
lahf
les
jne
test
leave
mov
mov
and
sbb
addb
test
adc
jg
and
in
jmp
sub
push
dec
cmp
dec
sub
sub
std
xchg
cs
sbb
mov
imul
mov
out
dec
daa
inc
pop
pop
pop
ds
call
sub
xchg
add
in
sub
bound
adc
inc
stos
cmp
in
push
mov
add
cs
stos
arpl
gs
loopne
inc
jl
leave
fcom
adc
stc
mov
push
test
mov
lods
ret
test
test
clc
or
sub
dec
xchg
jg
sbb
adc
pop
dec
add
jl
xlat
fst
mov
pop
mov
mov
lret
ja
lcall
aas
xchg
pushf
hlt
xchg
roll
dec
xchg
rclb
test
fsubs
mov
int
dec
outsb
ds
jp
push
sbb
and
sbb
xchg
jno
loopne
jno
or
push
loop
fnstsw
cmp
into
or
gs
scas
rolb
fadds
mull
dec
mov
popa
sub
xchg
adc
dec
inc
cmp
push
mov
in
fstps
push
icebp
pop
sarl
xor
dec
fcmovbe
dec
inc
adcb
and
mov
mov
ss
mov
push
test
iret
data16
jbe
adc
pop
push
loopne
scas
pop
mov
mov
xchg
xor
pusha
dec
in
dec
call
sub
push
rorl
push
lock
pop
xchg
mov
repnz
mov
mov
notrack
mov
pop
int3
sti
or
scas
cmpsl
icebp
pop
sarl
xchg
clc
pop
xchg
mov
pop
jl
sbb
xor
jnp
hlt
fldenv
add
push
sahf
inc
fldenv
cmp
sti
repnz
std
fistl
push
push
repnz
add
cmp
mov
or
call
xlat
pop
out
cmp
scas
ljmp
rcrb
push
dec
pop
in
xchg
aam
or
jns
adc
cs
dec
xor
or
jnp
jnp
add
pop
loope
int
and
out
and
dec
gs
pop
jg
repz
pop
aaa
jns
sub
pop
nop
mov
lret
shll
clc
or
iret
jbe
imull
pop
cmp
dec
xchg
jae
pop
adc
rorb
out
add
outsb
mov
inc
xchg
xor
mov
mov
in
mov
jns
inc
call
mov
cmpsb
outsl
push
sbb
pushf
popa
pop
jo
pop
lret
push
gs
lods
pop
fdivs
xchg
sub
nop
sub
mov
stos
aad
dec
adc
addr16
loopne
jae
adc
add
xor
mov
outsb
mov
jno
std
cmc
adc
fistpl
or
test
sbb
mov
idiv
xor
add
inc
and
loopne
lahf
jg
lds
dec
push
fmul
add
aad
xor
outsb
mov
jo
insb
sbb
dec
push
pop
pop
jp
mov
pop
iret
jmp
stos
popf
push
gs
popf
in
cmp
cmp
test
add
loopne
pop
mov
push
aad
into
mov
sub
sbb
inc
xor
xchg
add
sbb
js
push
add
dec
arpl
aaa
xchg
rorl
fistpl
les
std
dec
inc
repnz
outsb
les
and
mov
or
xchg
mov
mov
lcall
orl
outsb
cli
stos
inc
je
xor
and
jbe
jecxz
aas
add
xchg
push
and
xor
push
jle
les
fdivs
daa
ja
or
sub
add
jne
lods
mov
lret
ret
popa
out
dec
test
jnp
leave
daa
imul
fmuls
out
jmp
lret
insl
fs
jl
push
or
add
movsl
andl
add
mov
js
xor
stc
push
mov
sbb
push
shlb
daa
int3
cmp
ficompl
jbe
ret
pusha
fsubl
repz
pop
aas
xlat
push
rolb
into
inc
jb
std
cmp
aaa
jne
daa
mov
enter
test
daa
ds
rcrl
jb
lock
add
add
cmpsl
mov
ds
and
imul
call
cmp
and
rolb
sti
int3
mov
jmp
pop
dec
fistpll
or
scas
jmp
bound
fcmove
xchg
addb
rcrl
and
pop
ljmp
xchg
test
jp
ljmp
aaa
into
mov
or
pop
push
aaa
fisubrl
add
out
sbb
and
mov
stc
lea
addr16
ss
add
dec
aas
dec
cmp
or
push
mov
inc
movsb
shlb
cmp
mov
mov
ret
bound
or
lcall
sub
pop
lret
xchg
icebp
push
cmp
or
orb
mov
jne
jo
lock
inc
jae
push
mov
adc
jp
pop
rcrl
nop
out
nop
pop
cmp
xchg
jle
ljmp
mov
dec
cmc
jle
xchg
je
inc
lret
inc
mov
and
fcomps
inc
add
aam
pop
mov
ds
inc
jg
xor
fcoml
movsb
cmc
sbb
and
cmp
sub
and
cmp
push
sbb
lcall
dec
dec
test
mov
lret
fdivs
add
inc
fwait
test
add
insl
cmp
sar
das
xchg
mov
inc
incl
mov
addr16
adc
out
push
lcall
cli
mov
bnd
sahf
je
insb
inc
addr16
pop
ja
scas
xchg
push
adc
mov
pushf
mov
mov
mov
ljmp
inc
popa
stos
insl
lea
dec
fisubs
gs
dec
sub
dec
mov
outsl
adc
ficomps
daa
inc
inc
idiv
pop
lahf
push
inc
xchg
pop
popa
cmp
push
jl
dec
fnstcw
sbb
mov
sub
dec
out
jp
jl
pop
push
push
and
add
cmp
mov
arpl
sub
mov
inc
neg
out
ficoml
int3
pop
and
aas
mov
push
mov
inc
push
lret
or
ret
addr16
sbbl
push
outsl
mov
sbb
jge
mov
arpl
mov
dec
fnsave
and
sub
adc
jo
ret
aad
mov
jg
gs
jo
les
mov
adc
cmpsl
sbb
insl
movsl
outsl
or
adc
push
andl
pop
and
test
dec
pusha
push
int
mov
test
pop
filds
mov
cmp
lds
arpl
add
and
push
jmp
jle
pop
and
and
add
aaa
ret
sbb
rcrl
jmp
push
cmp
mov
mov
jmp
cltd
cmpsl
fwait
mov
dec
lock
sbb
es
movsb
sbb
icebp
aaa
divl
leave
xor
lock
push
mov
push
sub
jns
loop
daa
sub
loopne
push
xchg
popl
dec
mov
clc
pop
jno
das
mov
inc
mov
jne
sbb
test
movsb
sbb
sbb
mov
or
add
popf
adc
pop
push
dec
adc
mov
inc
loope
mov
push
loopne
lret
and
push
testl
adc
test
into
into
cmp
xor
cmp
lods
sahf
mov
mov
xlat
cmp
jmp
and
mov
pop
inc
xor
fiaddl
mov
push
xor
push
icebp
js
icebp
inc
sti
inc
inc
adc
imul
fwait
push
xchg
add
push
adc
movsb
or
mov
pop
or
push
aaa
jno
push
jecxz
push
dec
aad
int3
scas
sbb
or
iret
push
leave
adc
ss
std
cli
gs
test
xorl
ret
sub
push
cmp
and
cmp
dec
arpl
frstors
push
jecxz
jae
jns
jnp
jb
in
xchg
fdivr
mov
push
lcall
sbb
fistl
cld
jnp
or
inc
stos
shr
adc
cld
inc
lods
inc
jp
scas
shrd
add
nop
pusha
xchg
out
sbb
lret
dec
sub
call
xor
and
jo
scas
fdivl
add
bound
pop
and
push
into
push
jl
ja
mov
je
mov
ret
xchg
sbb
gs
sbbl
inc
dec
cmp
sbb
lods
xor
addb
mov
into
mov
iret
addr16
and
push
mov
sub
push
fsubr
mov
loope
mov
mov
push
and
push
in
inc
in
out
mov
jmp
xchg
sarb
add
cmp
add
cmc
pop
cmp
loopne
cbtw
inc
cmpsb
adcb
inc
pop
dec
cwtl
inc
stc
fcmovbe
mov
xor
jno
cli
sbb
jmp
test
mov
adc
aam
cmp
and
cmpsl
es
insb
adc
jbe
hlt
stc
clc
push
dec
push
fwait
jmp
out
stos
es
xchg
xor
imul
add
sub
push
jbe
mov
sbb
fwait
repz
push
cs
add
dec
sarl
mov
divl
xchg
sbb
pop
adc
push
fnstenv
jp
add
jmp
nop
push
lds
add
or
jae
push
test
jge
pop
test
imul
pop
fst
sahf
push
addr16
xchg
dec
sar
inc
cmp
add
pop
les
int3
mov
ljmp
cmp
shl
adc
or
pop
je
cmpsb
push
or
sarl
jge
inc
sbb
lea
das
shll
push
pop
movsl
in
lods
int
lea
jle
mov
imull
dec
jp
mov
scas
add
pop
mov
lcall
xchg
sbb
sub
jle
sub
push
popf
fstl
push
inc
shll
add
test
loopne
sbb
jg
shrl
movsl
es
mov
scas
jmp
mov
outsl
mov
mov
mov
inc
sbb
adc
jno
mov
das
jl
pop
cmp
rcrb
adc
push
push
ret
in
pushf
jbe
pop
sub
mov
cmpsl
or
lret
fstpl
cmc
clc
popf
adc
aaa
stos
pop
sub
and
jb
adc
inc
pop
in
pop
sbb
xchg
jne
cwtl
pop
push
push
adc
jle
push
mov
inc
in
fldt
xchg
ja
les
xchg
push
jge
pop
inc
cmovae
push
xor
out
jno
or
adc
or
mov
or
pop
add
pushf
mov
mul
ds
xchg
fwait
cmovo
in
sub
int3
mov
add
gs
adc
adc
pop
arpl
movsl
aad
cmp
push
xor
xchg
mov
test
adc
cmpsl
inc
insb
lahf
ds
outsl
aad
repz
inc
sub
xor
mov
clc
add
movsb
jnp
or
nop
adc
mov
jmp
push
cmp
in
imul
cmpsb
xchg
push
fwait
shll
stc
mov
fisttpll
adcl
ja
mov
jae
daa
aam
fcmovnbe
in
cli
or
and
pusha
xchg
fstl
movsb
dec
cs
imul
push
cli
adc
repnz
mov
push
dec
or
mov
mov
xchg
push
mov
icebp
and
jb
fimuls
xchg
int3
or
adc
jmp
cmpsw
inc
dec
stos
inc
sbb
pop
mov
mov
fucomp
xlat
sbb
cli
sub
rorb
sub
mov
fld
and
das
daa
int3
out
mov
inc
xchg
jmp
pop
out
mov
jno
adc
xchg
dec
fisttpll
out
outsb
xor
or
fbld
jecxz
out
dec
addr16
ss
inc
xor
dec
ljmp
lods
mov
add
push
nop
and
adc
xor
mov
and
and
or
outsb
sub
subb
rcr
push
adc
jne
idivl
cmpl
loope
ds
out
jno
cld
mov
lahf
repnz
cwtl
push
cltd
push
scas
fsubr
hlt
cmp
cmp
out
scas
pop
or
push
or
pop
pushaw
jbe
xchg
pop
je
push
mov
mov
xchg
scas
and
cmpsl
dec
jecxz
insb
push
mov
and
mov
imul
call
stos
mov
lcall
push
jge
repz
mov
lds
aas
js
xlat
bnd
jae
pop
jp
or
sub
xor
inc
movsl
jle
xor
dec
ja
dec
and
or
sarl
sub
or
sbb
dec
add
in
repz
and
sub
xor
xor
ficoml
cs
pusha
lcall
jge
imul
popf
outsl
stos
dec
jg
mov
addr16
mov
in
cmp
xor
adc
ss
mov
mov
knotb
cmp
jge
cs
out
sbb
pop
jl
cld
mov
pop
imul
jno
mov
in
pop
fs
sub
pop
lock
mov
and
and
inc
xor
inc
aam
xchg
pop
js
out
aaa
and
idivl
shrl
out
scas
rclb
mov
movsb
fwait
addr16
jmp
xchg
or
cmpl
scas
and
data16
push
jl
xor
scas
xor
vfrczss
jno
leave
int3
call
add
pop
outsb
sti
icebp
inc
cltd
sub
fisubrs
orb
insl
xor
ret
roll
add
repnz
sbbb
sub
mov
dec
adc
rcll
fsubs
cmp
xor
mov
call
lret
lcall
add
xchg
cmpsb
or
inc
in
add
sbb
stc
mov
outsb
popa
mov
or
xor
mov
mov
inc
xor
adc
cmp
jne
or
sti
imul
out
xorb
pop
mov
pop
arpl
jae
cli
mov
cmp
mov
sbb
dec
sub
sbb
popa
out
or
popf
enter
mov
add
inc
stos
jle
push
bound
hlt
call
xchg
fadds
out
xor
repnz
push
fs
xchg
jle
shlb
imul
sub
popf
xchg
mov
xlat
roll
mov
nop
sub
testb
sub
insl
rorb
aam
insl
aam
test
cmpsl
dec
push
dec
inc
ss
cmp
orl
xchg
shll
lods
int
jmp
jge
scas
das
fidivrs
sub
pusha
push
sarb
mov
popa
push
xor
and
xor
push
scas
mov
pushf
cmpsl
jle
jne
cmpsb
add
push
pop
int
js
les
inc
xchg
je
adc
add
sbb
mov
xchg
ljmp
cld
dec
cmp
xchg
std
ret
aaa
push
repnz
pop
fs
in
fistpll
cli
in
lods
add
fisubs
mov
mov
aas
scas
lcall
jbe
jo
mov
in
ret
cmpl
jb
xlat
test
pop
mov
sbb
ja
and
or
cltd
arpl
mov
dec
out
aaa
sub
aam
push
popa
and
call
stos
mov
das
pop
and
dec
das
or
lods
stc
pushf
xorl
xor
daa
mov
xchg
lods
pushf
push
repz
inc
inc
mulb
test
outsl
lret
or
hlt
cmpsl
pop
fisttpll
push
jl
shlb
subl
ds
insb
mov
mov
add
push
adc
mov
pop
pop
mov
pop
ljmp
xchg
mov
testl
sub
out
call
sbb
fs
cmp
xor
pop
inc
mov
inc
scas
fidivrs
aad
addr16
add
daa
sub
cwtl
ret
xor
daa
xchg
jecxz
inc
mov
adc
xchg
ret
enter
mov
dec
mov
and
mov
mov
mov
xchg
push
lahf
loopne
push
mov
adc
or
sub
repz
mov
iret
and
ds
inc
mov
add
sub
cmp
or
imul
cmpl
nop
into
mov
mov
int
or
mov
mov
xchg
shl
xchg
xchg
inc
add
popf
xlat
sub
add
xor
or
out
out
aam
add
mov
aas
xchg
push
or
iret
mov
jle
ffree
movsl
rcr
fsubs
push
out
cmp
inc
das
andl
repnz
add
dec
xchg
aad
pop
movsl
fldenv
add
sub
mov
push
push
push
insl
cs
adc
daa
jecxz
mov
gs
pop
iret
nop
icebp
jno
sbb
xchg
pop
lret
adc
push
sbb
mov
das
xchg
fisubrl
test
inc
fs
arpl
repz
cli
lret
cmp
fists
cld
fadd
pop
mov
bound
call
inc
scas
and
dec
jo,pn
call
jle
stc
imul
add
popa
into
insl
jle
mov
repnz
movswl
pop
push
arpl
jne
negl
or
pop
inc
pop
cmp
sbb
fwait
mov
imul
repz
sub
jo
and
pop
cmpsb
xchg
test
cmp
mov
mov
sbb
sbbl
xor
jb
adc
ljmp
fstps
int
js
aam
loop
inc
stos
gs
lock
dec
pop
scas
xor
adc
cld
lea
push
sbb
inc
push
nop
aas
jb
cltd
mov
inc
arpl
push
pop
stc
lret
mov
js
lret
sub
xor
fisttpl
mov
xchg
sbb
pop
scas
lret
int3
or
xchg
stc
ds
dec
aam
ss
mov
imul
pop
dec
out
push
sbb
adc
movsl
sahf
pop
jbe
in
sub
xchg
sbb
jnp
aad
lret
jno
sub
je
outsl
mov
or
rorl
mov
jl
outsl
mov
pop
inc
fbld
aaa
jl
push
xchg
jno
in
and
jne
leave
xchg
sub
pop
dec
or
push
loope
mov
inc
pop
sub
mov
sbb
jecxz
mov
sub
mov
dec
loop
push
jl
pop
in
mov
adcb
mov
fcmovnu
lret
sbb
push
imul
sbb
dec
sbb
mov
sub
xchg
leave
pop
out
int
sub
cltd
sbb
dec
push
mov
push
daa
xor
pop
fldl
sub
popa
push
fwait
in
aad
and
inc
fnsave
mov
scas
ss
cmpsb
and
out
sbb
loop
mov
mov
mov
test
dec
cltd
in
mov
dec
dec
aas
shl
ss
repz
out
mov
xor
imul
inc
add
fisubl
dec
pop
ficompl
fs
ret
fldcw
mov
loope
xchg
add
cmp
fs
xchg
sub
jbe
push
cld
jge
jle
in
xor
sbb
lods
xor
pusha
into
sarl
xchg
data16
or
in
lea
add
ss
jmp
cwtl
gs
mov
loope
lods
dec
jo
inc
movsb
mov
or
stos
push
cmp
xchg
das
push
dec
outsl
jecxz
sub
gs
dec
fisubs
inc
mov
or
inc
jle
sub
test
sti
mov
das
or
cmpsl
imul
mov
add
das
or
adc
or
adc
push
roll
cs
jnp
inc
jg
push
outsl
cmp
aam
rcll
jb
dec
ret
fadd
sub
sarl
clc
mov
jg
adcl
xor
imul
xchg
dec
sbb
mov
xor
out
imul
ja
push
mov
es
mov
aaa
sarb
std
pop
insb
lret
pop
xor
cmpsl
gs
push
pop
jl
je
test
lahf
mov
movsl
sarb
fistpl
xor
sbb
pusha
push
adc
movsb
mov
fsubrl
sub
fwait
push
dec
jnp
mov
cmp
lret
and
leave
jmp
mov
in
mov
push
or
aad
dec
les
shlb
or
fimuls
les
pop
mov
push
xlat
mov
xor
iret
and
rclb
test
test
xchg
mov
xchg
cs
lret
lea
xchg
jbe
movsl
ret
aas
jmp
int3
sbb
xchg
out
push
jno
pusha
or
inc
push
sub
roll
jo
scas
jge
je
pusha
aam
xor
add
lods
popa
xor
nop
pop
xchg
push
dec
mov
sub
insb
sbb
lcall
fnsave
xchg
or
add
pop
jo
repnz
jo
mov
and
xor
fmul
scas
shll
add
add
sbb
ljmp
inc
repz
and
push
sti
popa
push
jmp
movsl
sbb
xor
lds
cmp
mov
jg
mov
sahf
mov
push
jmp
xor
mov
data16
sub
pop
call
mov
mov
stos
sub
sbb
mov
sti
inc
xchg
cld
cmc
jns
mov
ficoml
jp
mov
popf
xlat
movsb
lret
mov
push
pusha
jnp
cmp
push
cld
pop
cwtl
sbb
inc
aaa
push
push
outsb
insl
xchg
mov
jo
pop
push
int
lret
dec
out
inc
test
cmp
cmpsl
jg
jle
pop
imul
fdivs
in
jg
adc
xchg
insb
mov
sub
and
cs
sbb
add
repnz
or
outsb
iret
fdivl
adc
out
adc
je
sbb
loopne
add
mov
mov
sarl
lock
fldl
ret
mov
stc
cmp
mov
sub
xor
adc
cmp
inc
into
sub
ss
add
jb
mov
insb
ret
mov
frstor
out
orl
or
xchg
stos
popa
out
adc
xor
repz
dec
add
pop
in
inc
mov
movsl
aad
in
sbb
ljmp
jbe
iret
popf
mov
mov
mov
sahf
test
jne
test
dec
xor
jle
push
mov
dec
lret
pop
xchg
sbb
xor
cmpsl
jbe
pop
push
cltd
out
add
xor
xor
xchg
sti
sbb
mov
nop
enter
outsl
rcrb
add
pop
add
cmpsb
dec
mov
adc
mov
push
test
sbb
ja
insl
and
insl
and
insb
dec
mov
jle
adc
test
xor
into
xchg
lea
push
xchg
lret
pop
adc
mov
and
mov
repnz
xor
insl
daa
data16
hlt
xor
add
mov
in
jns
sub
push
cmp
jne
int
cltd
popa
jl
dec
jns
jmp
ss
mov
add
cmp
cmpsb
cmpsl
daa
jo
call
ret
add
cmp
pop
mov
outsb
cmp
pusha
repz
data16
mov
cmpsl
mov
lods
and
adcb
insl
in
aam
call
or
cs
clc
cli
lret
mov
rcr
into
or
xchg
push
jl
push
push
pop
xor
xchg
sbb
in
mov
push
add
jge
cld
inc
leave
adc
rcrb
xor
pushf
cmp
daa
jl
mov
and
push
mov
and
dec
in
or
jecxz
outsb
out
adc
sbb
mov
popa
sub
mov
in
rcrb
rolb
fs
add
mov
aas
rclb
jmp
fsubl
jp
push
pop
sbb
int
in
jae
jo
push
addr16
xchg
add
sub
inc
nop
mov
nop
stos
adc
cwtl
loopne
jbe
loopne
sub
call
sbb
push
fmull
mov
jae
jmp
enter
in
adc
inc
in
pushf
std
dec
lret
add
imul
xchg
std
js
xchg
pushf
stos
push
fwait
aad
sub
daa
push
jno
test
sbb
stc
orl
adc
add
add
push
data16
xor
iret
xor
notb
sub
jp
aas
cmp
cmc
sbb
fists
mov
xlat
stos
std
mov
jnp
imul
out
cmp
push
mov
push
psubsb
fmulp
push
mov
fsts
pop
adc
xchg
aas
movsb
adc
aaa
lods
xchg
jb
lahf
cmp
add
flds
les
add
sbb
xchg
add
jns
fidivl
shrb
and
jmp
xor
push
lea
roll
test
mov
cltd
fcmovb
xor
mov
test
jmp
xchg
outsl
xor
jle
ja
es
int3
or
out
fildll
test
xchg
cltd
jmp
sub
lods
icebp
mov
popa
adc
sti
je
cmp
sub
mov
test
or
mov
jmp
ret
roll
xchg
mov
pop
inc
push
bound
mov
push
xor
jbe
xor
or
cmp
pop
push
mov
outsb
repz
push
out
xor
popf
or
xor
pushf
xor
pop
bnd
insl
imul
in
arpl
add
imul
sahf
and
push
cmp
lahf
inc
pop
loop
fdivl
mov
cmp
call
push
pushf
flds
movsb
in
mov
jae
inc
jp
xchg
je
test
daa
push
stos
stc
pop
sub
cli
xchg
aaa
add
fidivrs
mov
es
dec
insl
mov
fdivs
inc
lcall
lea
cmp
movsb
lock
jne
cmp
icebp
cmp
mov
jo
insl
push
inc
imul
or
jae
fisubrs
add
mov
sbb
mov
fldt
xor
js
and
inc
cltd
inc
sti
pushf
jmp
push
das
mov
cmp
inc
setne
push
pop
movl
jne
test
stc
js
push
mov
jns
fstps
add
outsb
sub
push
out
adc
sbb
pop
or
loop
add
hlt
mov
push
push
inc
aaa
inc
int
xchg
inc
sub
sbb
lcall
xchg
lret
setne
or
add
or
adc
je
sbb
mov
jecxz
fldt
add
add
flds
orb
xlat
mov
cmp
inc
xchg
imul
inc
hlt
dec
dec
imul
das
add
xlat
icebp
pop
mov
arpl
sbbb
je
push
cwtl
fmul
sbb
sbb
dec
ja
in
cli
jb
and
je
sbb
shrl
hlt
dec
test
or
xor
push
xchg
loopne
sbb
mov
dec
dec
nop
or
adc
mov
xlat
adc
ror
mov
test
mov
inc
fdivs
cld
jo
addr16
xor
out
in
or
gs
notb
fs
std
dec
in
xor
xchg
addb
mov
data16
out
pop
mov
pop
xchg
test
xor
imul
push
inc
sbb
sahf
mov
daa
mul
mov
orb
fs
mov
or
mov
sahf
call
adc
dec
mov
sbb
pop
loope
mov
pminsw
enter
jle
or
push
cmpsl
shll
pop
cwtl
bound
fisttpll
mov
cli
xor
lds
add
or
add
pushf
cmpsb
or
jge
mov
imul
cmpsb
es
sub
adc
testl
xor
notl
aaa
outsl
push
inc
rcl
mov
ljmp
and
fldcw
pushf
push
inc
sbb
int3
aaa
in
mov
mov
mov
fildll
sub
mov
sub
adc
lea
xor
cmp
adc
or
push
pop
jnp
jmp
testl
cmpsl
dec
fsubrl
aaa
and
in
sub
sbb
dec
lock
dec
loop
call
addr16
jmp
out
cwtl
lock
cmp
imul
sub
sahf
scas
sbb
mov
in
xchg
mov
mull
dec
in
je
pusha
cmp
int
mov
adc
inc
xchg
in
aaa
loop
mov
adc
bound
pop
inc
repnz
pushf
clflush
inc
mov
and
div
adc
stc
add
jp
and
test
pop
out
or
retw
fsubrs
out
mov
fcoml
mov
imul
subl
sbb
push
jb
jmp
jl
sbb
les
inc
stos
movsb
movsb
xor
das
out
mov
jecxz
mov
call
cld
jl
sub
add
or
jne
clc
stc
xor
call
inc
imul
xor
mov
pusha
push
mov
add
mov
enter
sub
push
mov
sbb
inc
pop
push
jno
ret
hlt
cwtl
jb
imul
push
pop
scas
adc
xchg
rorl
xor
xor
movsb
es
push
js
stc
push
in
pop
cmp
jo
scas
add
cs
push
and
push
and
xor
mov
enter
mov
sub
or
ljmp
das
sub
stos
into
mov
into
push
and
pop
enter
fnstenv
jns
mov
pop
push
outsl
movsb
pop
mov
mov
roll
pop
sbb
mov
loope
dec
mov
rcl
pop
fimull
mov
fldl2e
std
xchg
xchg
jmp
pop
pop
mov
rolb
jb
outsb
cmp
mov
arpl
shrl
dec
ficoms
mov
push
lds
or
cmp
stc
dec
das
adcl
iret
xor
insl
int
adc
or
xchg
jns
rclb
lds
mov
pop
sbb
popa
sub
div
push
xor
out
fisubs
sti
test
ss
out
inc
call
idivb
sahf
pop
push
popa
repz
jns
out
mov
mov
jns
add
sbb
cltd
movsl
pop
cmp
xchg
in
dec
fucomi
sub
xor
mov
movsl
inc
je
out
fldenv
dec
leave
mov
ficompl
lahf
mov
ret
add
inc
cltd
mov
nop
xchg
sub
lods
jno
ret
push
mov
jmp
nop
cmpsl
sahf
testw
pop
push
and
fcoms
loop
mov
push
mov
or
fldcw
and
sub
push
sub
ljmp
lods
insb
pusha
inc
jns
arpl
add
mov
sub
pop
add
adc
aam
sbb
loope
push
fnstcw
rcll
cmp
mov
xorb
loopne
xlat
xchg
xchg
call
cmp
lret
dec
test
das
pop
jle
xchg
lock
mov
mov
cmp
add
icebp
or
inc
cwtl
mov
repnz
fnsave
cvtps2pd
sbb
or
shlb
dec
mov
add
add
data16
xor
xchg
rcl
jge
and
add
les
jl
cmp
outsl
pop
mov
mov
sub
adc
stos
ret
filds
arpl
push
aaa
lcall
xchg
test
jecxz
stos
repnz
pop
pop
mov
cmp
in
pushf
andl
mov
mov
fldt
repnz
cmpsb
mov
imul
test
frstor
fisttpll
sbb
inc
push
aas
mov
xor
imul
cli
loopne
scas
or
xchg
jl
popf
jb
movsl
sub
or
sbb
push
ret
cwtl
sub
push
pop
or
inc
cmp
mov
mov
xchg
shl
cmp
jp
addl
sub
pop
or
out
ret
push
adc
dec
push
cltd
imul
or
push
and
sbbb
fdivrl
xchg
outsl
dec
jne
fidivs
mov
aas
dec
cld
inc
lds
movl
orl
jge
sar
jecxz
adc
push
and
jne
mov
fsubrs
xorb
scas
and
cmpb
in
cmp
push
xorl
mov
jo
or
pop
push
outsb
popa
pop
das
dec
lods
and
pop
sbb
mov
fisubrs
xor
inc
sbb
mov
clc
bound
jo
push
mov
out
xchg
or
and
lods
xchg
add
push
enter
scas
int
clc
jl
adc
mov
push
mov
pop
mov
adc
aas
outsb
fnstsw
pop
mov
cmp
mov
shrb
ss
push
pushf
test
inc
lahf
mov
ficoms
icebp
out
adc
lcall
nop
arpl
mov
test
lahf
stos
push
adc
cmp
add
in
push
aaa
cmp
cmp
lahf
xor
testb
cli
sbb
imul
lock
dec
add
neg
cmp
mov
mov
jb
push
bound
iret
xchg
out
dec
loope
adc
in
mov
mov
cli
jae
jle
adc
cld
sbb
cmpsl
xorb
xlat
outsb
mov
cmpsl
addr16
dec
push
push
and
push
adc
rcr
pop
dec
adc
pop
xlat
outsl
out
sbb
jle
hlt
fdivp
sub
cmpsl
and
decb
or
roll
mov
repnz
jne
jmp
dec
mov
js
mov
test
xchg
mov
ror
xor
push
mov
add
mov
mov
inc
stos
xor
sub
in
pop
adc
xchg
cmp
push
mov
hlt
xchg
sub
lea
or
clc
mov
cli
mov
or
mov
mov
fisubs
push
incb
std
push
pop
mov
stc
push
rolb
mov
adc
stc
daa
pop
adc
cli
mov
daa
mov
repz
test
lahf
or
cmp
out
enter
and
imul
cld
mov
xor
inc
dec
lcall
call
inc
mov
push
dec
mov
into
scas
ljmp
shrl
mov
push
cmp
pop
das
cwtl
sub
mov
out
push
out
sbb
jmp
push
jp
xchg
addr16
out
push
fistpl
sti
cmp
inc
sbb
leave
inc
scas
push
int3
mov
and
xor
jmp
stc
scas
ror
cmc
jne
add
pushf
pop
push
xchg
mov
aam
ficompl
and
inc
aaa
imul
and
mov
adc
or
or
fbld
gs
mov
dec
sbb
xchg
mov
stos
imul
jecxz
xor
and
in
inc
sbb
jmp
add
jno
adc
adc
in
jmp
outsb
mov
pop
imul
fdivrs
pop
or
xchg
lods
mov
pop
in
test
andb
pop
mov
mov
scas
pop
sub
add
ficomps
jmp
push
pop
push
inc
addl
das
jns
mov
decl
and
mov
pop
dec
scas
sub
sub
inc
icebp
xchg
jns
jbe
cmp
ds
cmc
lds
mov
shrb
add
xor
sub
gs
popl
cmp
inc
mov
movsl
sbb
loopne
cmc
and
dec
sub
rcrl
xchg
lods
sub
test
fdivs
and
pop
js
inc
inc
lods
cmp
fs
xchg
push
pop
clc
push
jb
mov
sbb
lods
loope
out
scas
or
and
imul
dec
out
in
cmpsb
inc
sbb
clc
test
movsb
out
ja
pop
lock
shll
inc
dec
movsl
xchg
call
in
ljmp
push
xor
scas
sbb
cmp
aad
jmp
inc
lret
pop
icebp
inc
lahf
mov
nop
and
mov
ss
add
mov
insb
mov
jge
or
or
add
push
adc
aaa
and
adc
or
scas
and
lods
in
inc
inc
mov
push
js
adc
notb
std
insb
mov
push
in
leave
xlat
out
cmp
icebp
lds
jmp
mov
pop
xor
les
dec
ror
cmp
pop
mov
xor
ljmp
mov
ret
pop
in
xchg
add
xor
push
lods
inc
cmpsb
in
xabort
shrb
push
nop
xlat
lret
movlhps
sub
and
cmp
cmpsb
cmp
je
pop
mov
mov
sub
test
jb
test
jle
push
idivl
lea
adc
aad
lret
mov
xchg
push
fistl
xchg
dec
cmp
in
sbb
popa
sbbl
pop
daa
push
xchg
pop
iret
lods
rol
pushf
mov
fs
jne
mov
scas
fistps
cmp
lds
xor
jo
pop
scas
popa
punpcklbw
aaa
and
cli
dec
les
or
data16
ja
xchg
or
mov
imul
shld
sbb
sub
fimull
push
sahf
jb
dec
inc
or
and
js
pop
or
jne
out
or
cmpsl
fisubrl
adc
push
stos
insl
insl
mov
lret
into
pop
iret
aas
sub
pop
or
decl
cwtl
dec
xor
mov
insl
call
pop
sbb
xor
cmp
sub
test
add
xchg
sbb
daa
cmpl
stos
xor
adc
out
xor
xor
or
sub
jae
cmpsb
sbb
mov
fld1
dec
cmp
xor
pop
fwait
or
out
call
sbb
dec
pop
dec
push
sbb
call
push
xor
push
xor
pop
pusha
mov
xor
adc
mov
out
nop
jmp
sbb
mov
mov
xlat
popl
push
imul
xchg
xchg
push
pop
faddp
stos
popa
adc
addr16
mov
fldcw
xchg
nop
inc
data16
lock
test
sbb
mov
inc
loopne
rorb
pusha
hlt
cld
pop
gs
mov
mov
cmp
aam
adc
fdivs
mov
jp
or
mov
adc
mov
push
xlat
aas
and
cmp
fistpl
ds
jns
imul
adc
mov
jecxz
loop
mov
mov
xchg
jecxz
push
out
and
ret
aam
adc
pop
xlat
insb
fcompl
sub
inc
or
insl
leave
mov
pushf
pop
inc
push
cs
aaa
push
repz
lret
fstl
push
mov
scas
int3
jmp
pop
jae
push
jns
dec
ret
fisubl
jno
sarb
hlt
mov
cmpb
movsb
fisubrs
jne
aam
mov
cmpsl
stc
int3
or
or
sub
out
pop
in
mov
jnp
or
out
and
filds
fwait
aam
inc
out
int
cltd
push
pop
pop
roll
loope
rol
mov
mov
dec
sbb
inc
insl
mov
mov
sub
ds
push
mov
imul
jnp
push
or
jmp
out
jge
jg
sti
cmp
mov
jns
sbb
out
and
and
xchg
leave
or
cmp
popf
ss
or
cmp
lods
cmp
and
and
into
stos
lock
outsl
fildll
orl
shll
stos
das
subb
insb
in
sub
mov
cmp
cmp
add
inc
xor
repz
cmp
add
cmp
test
aad
pusha
cmp
lret
popa
enter
and
dec
or
cmp
inc
fcoml
sub
sahf
arpl
mov
sbb
xchg
outsl
pop
adc
mov
fsubl
aas
out
cmc
push
dec
jp
jmp
xchg
and
movsl
mov
pop
add
sub
mov
xchg
pop
add
mov
push
imul
adc
test
repnz
rorl
sbb
adc
ljmp
jno
ret
inc
popf
push
dec
pusha
sub
push
outsl
in
pop
dec
mov
pop
je
arpl
test
jnp
neg
xor
lds
jae
push
jmp
aas
je
repz
fistps
push
aad
out
icebp
or
inc
inc
xchg
pop
mov
jl
sub
dec
int3
jle
or
repnz
and
popa
pushf
popf
lahf
enter
scas
sbb
fs
hlt
inc
cs
xchg
jle
mov
inc
inc
lret
scas
outsl
add
xor
negl
ret
sti
xor
repz
addb
roll
jmp
cmp
int3
rclb
loopne
stos
push
jl
fsubs
add
sub
mov
and
fsubrl
mov
xchg
into
shll
mov
jne
int
sbb
pop
or
into
xchg
arpl
std
iret
lock
cmc
mov
int
dec
lds
testl
lahf
sbb
xor
xor
jno
out
fdivp
je
pushf
test
sbb
and
sti
rcll
push
in
xchg
repz
daa
cs
jne
divl
jl
aas
xor
lahf
roll
out
je
sti
sub
mov
andl
sar
cmp
stos
shrl
jne
and
and
inc
fcmovnbe
test
fnstsw
inc
mov
cmp
daa
out
sub
sbb
adc
aas
jge
fidivrs
repnz
popf
ficoms
pop
cmpsb
mov
xlat
or
add
sbb
incb
fnstsw
jno
into
xchg
dec
fsubrs
add
mov
data16
mov
xchg
out
clc
jge
ja
pop
inc
cmp
cwtl
add
jp
xlat
pop
push
mov
sbb
outsl
imul
cltd
shrl
les
pop
loop
jnp
dec
pop
lea
ficomps
jne
or
lock
aad
repnz
inc
dec
inc
mov
cmpsl
jno
jge
test
shlb
sbb
mov
mov
dec
mov
out
cmp
xor
mov
xor
fwait
out
add
inc
repnz
test
sbb
iret
jns
lret
daa
hlt
add
out
aam
jecxz
jecxz
push
sbb
xor
pop
scas
jne
mov
rclb
test
adc
mov
push
imul
pushf
es
jb
movsl
xor
pop
cs
mov
not
ja
push
cs
mov
adc
orl
int
inc
jo
inc
sub
sbb
pushf
jp
repz
sarl
ds
rcrl
sbb
adc
push
movsl
push
xchg
add
icebp
loopne
cmc
mov
jmp
cld
push
xchg
ret
insb
call
std
rcl
rcl
fcoms
incb
ja
cmpb
xorl
jno
xchg
lock
or
aad
mov
mov
dec
dec
push
imul
inc
xor
adc
pop
in
xor
mov
shl
cmp
adc
xchg
sub
mov
dec
pop
or
pop
int3
lcall
aas
add
sub
lsl
adc
outsl
negb
pop
or
repz
inc
inc
loopne
sub
dec
jo
push
adc
divb
push
push
mov
sub
leave
pushf
lret
mov
jb
fstl
inc
ss
and
sbb
cmc
adc
add
sbb
in
shll
ret
rcll
into
jo
and
call
imul
ret
mov
cmpsb
rorb
cmp
mov
ss
sub
ret
sbb
ucomiss
aas
dec
ret
jecxz
sub
pop
and
adc
stos
push
adc
xor
pop
shrl
loopne
je
adc
push
mov
jmp
test
ret
aad
pushf
jne
fwait
mov
rol
stos
push
sbb
pop
aad
push
jl
pop
mov
inc
push
xor
mov
aaa
and
test
pop
stos
fucomi
xor
ljmp
repnz
repnz
hlt
aad
push
nop
jbe
and
mov
dec
jno
add
inc
xchg
push
pop
or
pop
enter
sbb
fcmovb
clc
or
mov
mov
cmp
sbb
and
or
fidivrl
sbb
push
cs
dec
int
adc
enter
ljmp
in
push
dec
xor
rcrl
rcl
push
mov
subl
nop
test
negb
xchg
movsl
jp
adcb
pop
lods
inc
outsl
rolb
push
out
dec
mov
add
push
xchg
dec
mov
cmp
lods
mov
push
and
dec
jmp
mov
fmuls
sbb
dec
sub
adc
popa
mov
jns
and
cwtl
or
fwait
js
xor
mov
and
ret
or
popa
cwtl
std
jmp
sbbb
aam
fwait
mov
jl
daa
mov
aas
inc
rorb
sub
sti
mov
xor
ret
sbb
and
xor
insb
xchg
xchg
inc
cmp
push
push
dec
mov
lcall
push
jns
jecxz
mov
fmuls
jge
inc
add
dec
adcb
push
aas
shrb
lcall
and
cmc
pop
and
lods
jbe
pusha
cmc
mov
iret
dec
xor
nop
ds
cmp
jns
pop
aad
add
mov
adc
fistl
sub
in
push
sbb
jnp
adc
push
and
pop
push
and
pop
sbb
aas
in
adcl
cld
aam
jae
adc
and
push
mov
cmp
movsl
push
roll
js
lcall
lret
sbb
xor
push
fisttpll
sub
sbb
scas
shlb
test
or
shl
sbb
testb
adc
add
movsl
and
loopne
jle
aad
jae
xchg
mov
lds
cmpb
adc
sub
inc
out
fimull
fistpl
mov
pop
push
mov
test
lret
xor
adc
xlat
shlb
xor
addr16
fdiv
dec
lods
fdiv
test
xor
xchg
push
mov
rcrl
clc
imul
add
jns
mov
lahf
loope
bound
mov
je
pop
lret
cltd
push
mov
jmp
gs
test
popa
xor
fwait
inc
testb
and
shlb
pusha
cmp
cmpsb
in
mov
and
push
pop
daa
adcl
dec
loopne
pop
stos
mov
scas
insl
jmp
inc
mov
call
fldcw
notb
sahf
sub
jmp
sbb
inc
clc
pop
lock
pusha
xchg
enter
mov
sub
fdivrs
cli
and
mov
movl
mov
jecxz
mov
pop
sub
dec
and
xchg
pushw
pusha
out
fstps
or
dec
pop
push
movsl
xlat
and
and
push
sahf
jp
clc
cltd
cmp
sub
fsubp
loope
add
adc
jae
xor
xor
mov
into
fdivs
pop
enter
into
mov
sbb
add
test
ja
movsl
inc
dec
pop
test
rclb
and
xor
fcmovnb
int3
out
adc
dec
movsl
int3
icebp
inc
sarb
or
xor
push
mov
rcrl
xchg
mov
sbb
xor
pop
push
loop
mov
mov
test
mov
hlt
out
dec
xor
ja
filds
inc
or
iret
sub
clc
mov
and
adc
cmp
jecxz,pt
int3
test
lods
sub
movsl
sbb
icebp
xor
rcrl
or
std
mov
fcoms
aas
adcb
mov
adc
and
xor
cmpsb
mov
jo
int3
cmpsb
ficomps
or
pushl
mov
inc
cmp
add
inc
ficoms
sub
call
outsl
hlt
cmp
xchg
adc
ror
sub
ljmp
lds
push
sti
mov
pop
loop
xor
adc
or
aam
shlb
jg
sahf
mov
pop
sbb
repz
icebp
shlb
popf
xor
mov
fwait
sub
xchg
hlt
xchg
adc
das
mov
xchg
dec
sbb
add
xor
jns
fs
or
xor
inc
push
ss
adc
cmp
insb
jne
push
mov
mov
test
aam
inc
rcll
pop
mov
xchg
imul
repnz
jp
jne
movsl
jne
or
ds
imul
mov
push
mov
push
sbb
xor
sub
dec
popa
std
sub
xor
pop
rorl
mov
and
sbbb
adc
jno
add
lret
inc
repnz
scas
call
mov
hlt
nop
inc
inc
inc
xchg
mov
in
idiv
sbb
fnstcw
xlat
subl
cmc
jp
inc
data16
shlb
xor
pop
insl
mov
loope
push
fscale
or
mov
cmp
inc
imul
call
mov
pop
imul
inc
cmp
push
iret
jns
lods
hlt
jmp
dec
addl
and
push
outsl
popf
neg
add
dec
ljmp
mov
jae
xor
mov
jbe
inc
int
int3
popa
pop
jecxz
jb
adc
lea
repnz
xchg
fildll
mov
add
decb
sti
imul
mov
movsb
and
push
repz
insb
or
push
or
sbb
or
and
push
movsl
cmp
ss
lea
testl
lods
movsl
ret
cmp
mov
imul
inc
cmpsl
push
pop
loopne,pt
jno
popa
mov
ret
sbbl
mov
pop
imul
inc
sbb
movsb
lret
out
mov
aas
or
out
mov
jle
jne
add
xor
out
sbb
adc
xchg
insb
cwtl
aad
cltd
mov
fsubrs
sub
rorb
push
dec
dec
test
insb
das
sub
lods
mov
or
test
ret
xchg
jns
repnz
fwait
popf
nop
dec
mov
in
mov
jnp
cmp
dec
jae
pop
out
pop
nop
fwait
std
int3
jp
gs
out
adc
pop
jmp
cmpsb
and
jle
in
sti
jne
scas
mov
mov
bound
addr16
gs
mov
and
sub
mov
adc
das
add
and
call
cmc
inc
je
ret
and
jl
imul
in
sti
lcall
fcompl
sti
js
pop
je
in
sbb
inc
and
int
les
lds
loope
push
inc
jns
inc
dec
das
add
test
lods
xor
inc
xor
push
or
inc
data16
imul
mov
pop
daa
cmp
and
sbb
bnd
dec
dec
sbb
sub
in
repnz
adc
push
movsl
cs
mov
adc
or
dec
into
daa
ss
xor
jp
out
setns
xor
push
pop
or
lds
jmp
pop
cmpb
cmp
cmp
ja
lea
iret
aam
ret
cmp
pop
jle
iret
mov
mov
cs
rolb
sub
jmp
imull
mov
out
adc
test
pop
out
test
xor
test
frstor
dec
pop
es
std
movsl
lahf
rolb
stc
lahf
adc
dec
push
cmpb
ds
xor
sbb
fildl
jmp
idivl
pop
sub
cmp
jne
cmp
ret
xor
cmp
daa
js
mov
insb
jle
mov
mov
push
stos
popa
dec
xchg
push
mov
fisubrl
mov
pop
dec
imul
testb
sub
sub
scas
mov
enter
addr16
test
movsl
xor
xorl
cmp
sub
aaa
mov
pop
adc
jbe
mov
cwtl
repz
xor
fsts
push
call
divb
pushf
arpl
push
movsb
mov
mov
mov
add
mov
adc
cwtl
jns
clc
mov
push
mov
clc
sbbl
jns
test
pop
hlt
les
lods
in
out
add
ss
arpl
shll
das
stos
inc
mov
repz
insb
sahf
mulb
or
cs
push
add
push
test
cmp
aas
clc
inc
sub
popa
cmpsb
fiadds
push
pop
repnz
xor
dec
jl
mov
dec
fwait
jp
inc
mov
xor
seto
repz
pusha
or
test
and
mov
outsb
xor
and
in
mov
es
sti
push
adc
es
jg
jns
movsl
and
push
ss
mov
xor
mov
sub
cmp
xor
inc
or
out
dec
enter
lea
ljmp
pop
push
arpl
inc
dec
mov
nop
shll
cwtl
test
mov
push
dec
lahf
stc
imul
sti
mov
mov
jge
stc
addr16
scas
dec
mov
nop
push
jmp
nopl
mov
mov
mov
lods
pop
jmp
das
out
jle
cmpsl
or
fcomp
shl
sti
jns
xor
fnstenv
inc
ljmp
mov
dec
or
sub
lret
movsl
fdivr
lods
push
mov
shl
scas
push
ret
push
fldcw
adc
sbb
sub
sbb
inc
mov
cmp
fcompl
mov
mov
mov
xchg
jo
jno
clc
stos
cmp
pop
inc
inc
add
push
lret
divl
rorl
iret
clc
stc
inc
fiaddl
xchg
xchg
movsb
mov
cmp
lret
daa
jp
imul
adc
jmp
ss
fdivrp
ffree
add
aam
mov
xchg
jbe
iret
sub
fidivrl
pop
mov
je
pushf
cmp
push
out
ss
push
data16
mov
jmp
mov
iret
and
jl
scas
mov
fdivrp
fdiv
inc
in
mov
mov
cmp
jp
ds
in
cmpsl
mulb
in
fmuls
xor
pop
mov
dec
jge
push
add
xchg
lahf
push
xchg
xlat
mov
xor
xor
adc
inc
clc
gs
cmp
inc
jae
cmp
add
add
mov
lods
fdivrs
and
sub
add
cmpsb
popf
push
sbb
xorb
cwtl
mov
sub
jns
aad
add
fcompl
add
pop
xchg
push
adc
mov
pop
xor
xor
mov
pop
not
in
cmp
arpl
shlb
outsl
lds
or
xor
push
imul
mov
mov
inc
cs
xchg
dec
push
cmp
and
fwait
jmp
jne
xchg
jo
inc
lret
bound
inc
fstpt
jl
cmp
fimull
fwait
jle
popf
test
cmp
sub
rcl
js
in
test
in
ja
int3
xchg
dec
push
inc
adc
js
lods
aas
cmp
mov
pop
or
repz
in
mov
out
mov
inc
pop
imul
mov
mov
shlb
in
aas
mov
or
scas
dec
dec
mov
pop
push
fcompl
shrl
push
std
int
int3
and
sub
outsl
cwtl
push
cmpsl
sahf
lea
jns
loope
in
cli
push
cmp
mov
popa
les
into
xor
add
loop
inc
sub
popl
mov
push
testb
sub
pop
jbe
popf
push
dec
jg
out
scas
fcmovnb
xor
scas
mov
shll
jns
jo
push
jmp
cltd
jae
fisubrs
adc
pop
push
sbb
xchg
adc
lods
popa
out
insl
cmp
iret
push
dec
mov
mov
cmpsb
or
push
outsb
dec
xor
lcall
add
popf
js
dec
sbb
outsb
add
test
cmp
cmc
pusha
dec
or
and
cmc
mov
cltd
insl
fists
push
or
cmp
pop
adc
les
pop
sbb
rcr
pop
jp
push
mov
or
ljmp
fisttps
incb
aam
sbb
mov
or
outsb
loopne
outsl
pop
cmp
in
mov
sahf
adc
jp
pop
add
sbb
add
sbb
add
pushf
mov
pop
pop
dec
loope
xchg
inc
sub
enter
lds
mov
pop
outsl
jae
test
cwtl
adc
adc
stos
and
je
and
sub
mov
stc
addr16
add
or
int3
push
lock
jns
mov
scas
out
bound
jns
mov
sbb
pop
into
pop
sub
add
test
inc
call
cmp
xchg
pop
fisttps
cmc
sbb
cmp
push
mov
or
sbb
decl
xchg
pop
mov
jae
push
push
and
cmpsb
imul
movsb
vmwrite
aad
clc
jmp
push
inc
adc
lret
push
push
add
cmpsb
sahf
sub
mov
dec
hlt
in
adc
dec
push
xchg
sub
int3
dec
mov
dec
dec
in
popa
mov
mov
and
iret
scas
outsb
xor
out
std
shr
mov
cs
sub
aaa
mov
out
or
push
ret
ficompl
add
jmp
imul
sub
pushf
push
xorb
in
mov
pop
jo
das
mov
pusha
clc
jmp
rcrl
rcrb
sbb
repz
outsb
inc
int3
cwtl
aad
dec
xchg
ds
test
add
cmp
adc
push
cmp
xchg
fiadds
pop
aas
push
imul
sbbb
add
popa
imul
jbe
stos
addb
loopne
push
ds
mov
in
and
arpl
notb
pop
out
mov
cmp
test
out
jmp
in
icebp
pop
or
xchg
repz
pop
out
repz
adc
push
out
ret
or
xchg
mov
or
sbb
out
sub
int3
outsb
xor
mov
mov
push
lds
pop
or
movb
jge
sbb
out
xchg
push
sti
lcall
fists
and
sbb
or
pushw
sbb
jae
lods
es
mov
cli
insb
clc
cmp
lock
arpl
dec
cmp
push
adc
call
or
loope
int3
mov
jb
cmp
jbe
inc
mov
cmp
inc
lret
imul
inc
push
mov
fdivs
loop
and
insl
iret
add
fcomps
mov
pop
outsb
cwtl
fs
jg
iret
lods
popa
popf
sub
arpl
inc
jo
sub
mov
pop
xchg
outsl
repz
ret
mov
or
push
aaa
mov
pop
pop
leave
xchg
sub
fildll
mov
fwait
and
jno
sahf
addr16
lcall
and
sti
pushf
repz
xchg
mov
divb
popa
jns
sbb
repz
lods
jecxz
pop
dec
pop
mov
xchg
or
and
push
sbb
lcall
jo
iret
dec
arpl
jle
jg
inc
xor
sahf
jg
scas
fwait
iret
push
mov
sbb
jae
pop
mov
fisttps
sbb
stos
jle
repnz
fsubrs
aas
and
inc
xchg
xchg
jecxz
insl
mov
sub
jle
ret
repnz
push
add
aas
es
pop
sbb
add
ret
mov
test
out
outsl
bound
ljmp
push
cmpsb
nop
or
mov
inc
mov
nop
in
aad
scas
cs
mov
or
mov
cmp
clc
les
mov
clc
rclb
rorl
js
sar
sbb
jnp
adc
cmpsl
jno
push
aaa
cmpsl
or
daa
mov
jns
rcll
sbb
fisttpll
cmp
cltd
mov
jge
xor
cmp
dec
negb
test
cmp
in
xor
cmp
gs
or
movsl
ret
push
inc
dec
int
ror
jae
ljmp
icebp
mov
imul
pop
cli
mov
pop
or
pop
add
and
lahf
shlb
cmp
lods
cmpsb
xor
js
xchg
cmp
inc
fcmovu
add
sbb
subl
jns
or
pop
fwait
icebp
sub
lods
add
loopne
push
imul
sub
les
cmpsl
dec
jno
push
jecxz
xchg
into
rcr
mov
pop
outsl
arpl
inc
pusha
rcl
cld
xchg
or
mov
es
outsl
cmpsb
gs
dec
pusha
sbb
mov
fisttpl
xchg
jb
add
mov
and
and
jnp
inc
mov
cltd
push
sbb
test
lcall
add
rcll
inc
inc
push
in
fs
jb
stos
mov
fst
sarl
popa
push
ja
clc
subb
cld
and
adc
hlt
push
push
dec
sahf
fisttpll
add
nop
lods
data16
xchg
xor
pusha
fsubl
dec
test
xchg
fwait
cmp
and
xchg
leave
xchg
out
push
xchg
stos
or
and
jo
ljmp
xor
mov
or
mov
ret
daa
cmp
lret
pop
adc
xchg
jmp
adc
adcb
mov
test
mov
push
in
push
sbb
mov
cmpl
fldcw
rclb
in
adc
call
rcr
cmp
ret
addr16
fistps
lret
dec
xchg
fisubs
popf
fnstcw
into
mov
shll
pop
jp
xchg
jnp
icebp
ds
cld
lret
mov
enter
fld
fsub
lret
into
pop
psubusw
pop
pop
fisttpll
clc
and
mov
addr16
mov
cltd
imul
push
xchg
inc
xlat
mov
jle
push
sbb
dec
movsl
jge
insl
out
sti
mov
sbb
fdivs
cltd
bound
shrl
and
push
sahf
jg
jp
std
jns
sahf
mov
mov
leave
mov
pop
xchg
pop
sbb
mov
out
pop
mov
rclb
or
xchg
push
ss
fdivrl
dec
sub
loop
insl
in
mov
or
rclb
sub
nop
or
add
ret
cmpl
fstpt
popf
xchg
repz
cmpsb
fadds
nop
mov
aad
loop
or
out
stos
dec
push
sub
mov
test
cld
ret
inc
leave
cld
or
scas
mov
les
jecxz
idivb
xor
cmpsl
jg
loope
add
dec
cs
jmp
es
adc
add
enter
pusha
jns
nop
inc
loope
inc
mov
je
mov
mov
iret
add
add
pop
push
outsl
sahf
cli
stos
jmp
jle
stos
or
stc
test
mov
push
jge
aas
jb
mov
mov
imul
call
sbb
in
jnp
adc
push
push
push
mov
adc
fs
xchg
data16
xor
mov
mov
inc
adc
aas
les
cltd
push
cli
and
pop
test
jbe
ss
int
stos
sub
imul
fldl
addb
pusha
int3
mov
xlat
xor
or
ror
push
pop
outsl
push
in
add
in
sub
sahf
sub
jae
int
sahf
xchg
push
aas
stc
xor
pop
stc
xor
push
cs
movsb
cmp
and
and
loope
cli
fdivr
xchg
add
cmpsb
pop
test
lock
movsb
dec
ficoml
pop
jb
cmc
adcl
xor
cmpsb
dec
call
les
dec
add
mov
push
or
fidivrl
subl
cs
jae
push
add
mov
test
das
sub
mov
ds
sbb
push
hlt
sub
loopne
xor
cmp
test
shlb
sbb
or
aaa
dec
jb
sbb
pop
adc
test
loopne
sbbl
aas
ds
xchg
adc
jecxz
ret
in
jns,pt
cmp
shrb
out
jmp
out
movsl
jb
and
lock
outsl
lds
mov
aad
notb
adc
scas
xor
subb
lock
add
pop
adc
rorb
xchg
and
cmpsl
mov
pop
push
mov
pop
stos
mov
loop
push
or
mov
mov
or
inc
mov
lds
orb
and
inc
int3
cmp
movsl
mov
scas
push
fcmovu
shlb
xor
sub
test
addr16
cmpsb
gs
ret
lea
sub
xchg
jae
int3
mov
cmp
xor
push
mov
pop
ficompl
fbld
inc
add
or
mov
add
mov
leave
lock
mov
les
push
fmulp
mov
push
cmovp
mov
scas
scas
shlb
dec
cli
adc
in
and
popf
mov
add
sub
adc
and
or
push
pushf
adc
mov
push
iret
dec
cmp
push
aam
out
lcall
repnz
pusha
enter
mov
out
aaa
sub
mov
mov
dec
mov
mov
sahf
xor
jns
inc
jl
or
cmp
cmp
push
pop
scas
cmp
push
mov
movsl
arpl
sub
jmp
iret
roll
mov
mov
loopne
inc
enter
add
sub
sbb
loop
add
jbe
mov
ss
cmp
jb
repz
push
mov
push
pushf
sarb
fdivl
test
jl
cmp
push
lds
jo
xchg
push
rcll
cltd
cmpsl
push
dec
cmp
xor
bts
bswap
xchg
negb
cmp
xchg
enter
mov
jp
jb
push
daa
pop
pop
int
addr16
pop
test
inc
aam
pop
fdivrs
lea
inc
pop
ljmp
inc
xor
mov
mov
pop
sub
lret
out
push
rolb
loop
adc
les
and
cmp
rcll
mov
cmpsb
scas
iret
ret
outsb
ret
jo
pop
ret
mov
imulb
fadd
push
cmp
and
test
sbb
mov
rcrb
sub
decl
xor
jg
push
xor
cmp
mov
xchg
ljmp
mov
or
insl
inc
push
pop
cmc
jl
in
xchg
ja
js
mov
popf
xchg
cvtps2pi
insl
jae
lret
xlat
fwait
cmp
aaa
sub
or
imul
cmp
bound
pop
push
adc
inc
dec
rorl
nop
dec
mov
repnz
ret
outsl
imul
or
mov
sbb
sbb
push
sub
sub
js
fimull
dec
sub
xor
or
scas
out
xchg
xor
dec
or
sbb
sti
insb
in
lock
fwait
adc
lock
shll
ret
movsb
mov
push
mov
pop
adcl
jle
xor
push
sahf
xchg
call
push
add
into
adc
insb
pop
xlat
xor
xchg
test
mov
outsb
add
inc
mov
lret
loop
pop
into
into
cs
js,pt
pop
pop
subb
mov
mov
jno
clc
sbb
outsb
xchg
xor
imul
in
inc
mov
xchg
gs
loope
xchg
dec
daa
cmpsl
sub
dec
pop
pop
xor
insl
jg
sub
inc
mov
fdivr
mov
clc
cmp
outsl
fdivl
inc
lock
leave
or
and
sti
out
fmul
jl
or
in
mov
jp
mov
push
in
xchg
out
fldenv
push
jns
sub
mov
fidivl
pop
push
dec
mov
xchg
jmp
or
notl
flds
adc
jae
fdivr
sbb
in
fstps
push
mov
adc
or
aas
out
scas
push
pop
xchg
popa
sub
add
push
inc
cmc
pop
jle
es
push
pop
test
stos
mov
mov
mov
mov
pop
mov
test
lahf
daa
dec
inc
enter
xchg
fsubrl
daa
icebp
push
cwtl
sub
out
out
mov
adc
cld
arpl
popl
sub
or
jle
jecxz
lahf
pushf
jl
test
sub
sub
inc
ja
scas
mov
inc
shr
pop
imul
sub
lea
xor
mov
push
sub
repnz
xlat
ret
je
imul
push
jb
cmp
jg
push
in
orl
scas
icebp
out
aam
sub
test
int
pop
add
xor
dec
jecxz
adc
pop
arpl
out
sti
jp
add
jnp
shll
inc
imul
ljmp
repz
cmp
sub
mov
sbb
mov
ficoms
ss
outsl
les
pop
and
jecxz
dec
mov
push
int3
cltd
cli
push
xor
xchg
xorl
sub
push
xor
inc
mov
pop
sub
and
jno
mov
push
lcall
mov
hlt
roll
pop
lahf
add
xchg
push
mov
loop
lahf
in
sti
xchg
repnz
push
mov
xor
jecxz
push
jg
sbb
enter
cmp
push
les
test
push
std
jb
add
or
int3
insl
out
call
adc
inc
lret
ljmp
mov
je
fidivrl
lret
bound
jg
movb
jae
ret
push
lods
std
imul
dec
lcall
pop
push
mov
pop
aam
xchg
push
lret
in
adcb
scas
push
loope
in
das
mov
xchg
call
mov
and
sub
sub
testl
pushf
xor
sub
mov
subb
adc
inc
mov
dec
adc
xchg
js
push
fnstcw
adc
ljmp
dec
xor
sbb
andb
outsb
insb
push
leave
mov
pop
and
pop
test
bound
pop
sbb
jl
fimull
jle
das
or
sub
cli
cmpsl
je
out
cld
cld
pusha
pop
jo
int3
dec
mov
jmp
out
pop
lret
nop
dec
cmp
stos
cmpsl
je
dec
rcrl
xor
cmp
imul
inc
fmul
lods
enter
jmp
and
movsl
cwtl
cmp
pop
xchg
lret
fwait
mov
rcl
inc
orb
mov
mov
jns,pn
xchg
push
or
jge
push
cmp
or
jb
shlb
cmp
pop
and
mov
mov
mov
sbb
cmp
inc
adc
arpl
adc
cli
andb
mov
and
out
sub
aaa
popa
pop
jno
dec
sti
adc
jns
mov
lcall
into
or
dec
ljmp
hlt
pop
shlb
insb
add
push
cs
leave
or
and
rclb
out
push
adc
cltd
mov
jbe
jo
scas
lods
jg
test
cmp
out
clc
es
mov
sbb
sti
shlb
testl
incl
add
xor
repnz
mov
in
into
push
inc
out
pop
mov
cwtl
test
enter
lret
movsl
stos
xchg
xchg
pop
or
clc
and
mov
pop
test
mov
ds
jae
imul
out
std
clc
inc
jmp
pop
test
mov
scas
test
out
ret
ljmp
mov
aam
push
lcall
and
jge
jecxz
fsubl
inc
ret
and
lret
dec
sbb
and
push
jmp
stos
ja
cmp
aad
xchg
and
pop
into
push
dec
mov
popf
sub
or
cmp
and
fldt
add
and
ds
bndstx
jno
pusha
xor
in
ljmp
inc
leave
ret
and
dec
xchg
and
pop
mov
mulb
sbb
mov
std
mov
inc
add
sub
loop
insl
sbb
jno
jmp
xchg
lds
les
sbb
je
cmovnp
cwtl
out
jns
outsb
adc
adc
mov
pop
dec
scas
xorl
and
pop
rcrb
out
sub
inc
mov
lahf
mov
loop
sti
mov
dec
lret
mov
sub
jg
movsb
jge
xchg
and
add
fwait
or
jb
shrl
jmp
sbb
mov
test
dec
test
add
imull
cmpsw
jno
dec
test
test
sti
jno
lods
test
sarl
jmp
test
dec
xor
xchg
cmp
sbb
andb
add
out
out
loopne
or
jnp
fimull
add
sub
sbb
pop
addr16
call
sub
fs
mov
mov
inc
sbb
xchg
xchg
push
sahf
jo
inc
xchg
mov
mov
sbb
xor
pop
ret
push
lcall
cmp
inc
test
push
pop
jbe
jae
add
sbb
nop
inc
outsl
xchg
fbstp
sarl
xchg
mov
test
adcb
sbb
outsl
icebp
xor
jmp
push
arpl
stc
jle
aad
push
fisubrs
pop
scas
loopne
adc
cmp
jl
pop
in
mov
stc
ss
out
shll
mov
mov
cmc
in
std
popa
sarb
sbb
fnsave
scas
notb
pop
sbb
test
or
xchg
or
push
and
pushf
add
sub
xchg
push
shlb
test
movl
xchg
xchg
das
adc
shll
jg
mov
jmp
fsts
xchg
push
add
cwtl
lret
or
repz
or
or
nop
mov
adc
decb
and
jl
scas
cli
add
mov
mov
or
rcrl
fst
mov
and
jne
push
lahf
dec
pop
sbb
pop
adc
repnz
push
in
mov
and
cmp
icebp
insl
cs
sub
jp
clc
lea
outsb
popf
dec
mov
enter
sahf
mov
mov
sbb
lcall
outsl
mov
dec
test
lock
out
xchg
add
sub
mov
hlt
push
inc
in
aas
sbb
or
inc
mov
cmpsb
mov
jb
scas
hlt
add
jnp
jbe
cmp
push
bound
lods
jg
aam
add
push
fstps
xor
mov
lock
pop
aas
push
xchg
dec
xorb
fs
popf
aad
and
pop
mov
adc
inc
rcr
je
repz
xor
xchg
jmp
fbld
pushf
xchg
pop
ljmp
push
ja
clc
jmp
xchg
dec
clc
test
lds
loope
jg
jp
stc
aad
dec
fidivrl
fcmovnb
sbb
inc
in
int
lahf
imul
pop
push
cld
jg
sbb
or
sub
sub
movb
scas
push
cmp
mov
and
jns
shlb
mov
repnz
push
push
fidivrs
insl
jge
fdivrl
mov
aaa
test
adc
push
xchg
bound
aam
in
jle
mov
imul
jbe
stos
hlt
cwtl
mov
and
fnstsw
call
inc
jb
adc
cs
popa
mov
jns
insl
dec
dec
orl
xchg
dec
inc
jp
adc
xchg
lret
int
ret
loopne
cltd
vmovntps
data16
fdivrl
movsb
mov
mov
shlb
xorps
and
nop
daa
pop
ret
bound
push
arpl
inc
adc
cli
mov
inc
sbb
jg
cld
fsubs
imul
and
jne
arpl
pop
adc
mov
stos
into
add
mov
push
loopne
push
pop
mov
inc
pop
rol
inc
popa
add
push
outsb
jb
dec
sub
std
or
mov
mov
lds
jge
mov
sub
inc
icebp
mov
inc
xchg
and
sbb
xor
in
pop
sbb
cmp
call
ja
xchg
sbb
or
sub
mov
in
jno
ja
pop
mov
fildl
out
mov
mov
mov
pop
add
ss
mov
ja
pop
dec
rorl
push
cmpsl
jns
call
or
adc
mov
mov
and
popf
fwait
test
add
push
fidivrs
pop
hlt
adc
ffree
int3
mov
inc
fmull
mov
outsl
sub
push
fdiv
cmpsl
inc
lea
sarl
cmp
out
call
jbe
jmp
nop
cmp
mov
push
cltd
xchg
add
or
fnsave
mov
pusha
jo
adc
xchg
xchg
pop
xchg
fisubl
into
mov
fisttpl
addr16
jge
jae
xor
sub
test
pop
out
fcoms
dec
sub
and
mov
cmp
adc
dec
pusha
popa
or
test
movsl
sub
add
fistps
aaa
fst
add
in
or
mov
lahf
sub
in
adc
pause
adc
mov
pop
movsl
test
in
daa
dec
pop
add
and
adc
loopne
sbb
aad
jl
dec
mov
lahf
in
add
inc
pop
or
fimull
cli
mov
dec
mov
add
inc
iret
push
rcl
cmp
in
push
jecxz
ljmp
mov
jne
arpl
and
jae
fisttps
jns
pop
int
mov
jno
jmp
xor
bound
sahf
fstps
sbb
xor
inc
add
sub
sbb
jnp
inc
fcompl
push
shrb
dec
ja
cli
cmc
mov
or
cli
mov
fnstenv
fisubl
aas
xor
stc
mov
lods
push
cs
and
xchg
mov
or
sub
int3
sub
sbb
push
fimull
lds
fwait
xor
cmpsb
out
dec
mov
xlat
pop
or
inc
jnp
in
test
in
imul
roll
je
xor
dec
mov
shll
aas
out
push
int3
lods
push
repz
dec
mov
lcall
xor
sub
pushf
pop
xchg
and
cmp
fwait
movsl
fimull
mov
pop
xlat
or
neg
xchg
jmp
lea
daa
pop
sar
xlat
ljmp
mov
xchg
sar
shll
sbb
das
pop
and
dec
and
outsl
jmp
dec
enter
xchg
mov
push
shll
pop
add
nop
cli
mov
mov
bound
call
insl
jl
cmp
std
outsb
mov
mov
fmulp
dec
mov
loopne
pop
push
scas
cmp
lods
ljmp
aaa
outsl
cmc
push
mov
cmpsb
mov
pop
cmp
mov
movsb
shl
add
jne
leave
scas
mov
ds
sub
pushf
lods
xor
hlt
dec
mov
incl
mov
sbb
test
sbb
jno
pop
shlb
and
leave
inc
cmpsb
xchg
daa
int3
or
sbb
jge
cmpsb
das
mov
divb
xor
cmp
in
mov
mov
dec
xorl
pop
in
xor
lods
add
inc
movsb
or
dec
loopne
decl
sub
cmp
mov
inc
iret
sub
js
lret
adcb
fucomp
andl
xor
cs
push
push
push
fs
dec
cmpl
jmp
mov
insb
ret
roll
cmp
das
push
testl
scas
dec
dec
aad
or
adc
jnp
inc
icebp
lea
cmp
outsb
ud0
xlat
aas
add
shll
add
clc
les
in
push
sub
bound
mov
fcomps
out
cwtl
stos
push
mov
movsl
or
sbb
pushf
jecxz
clc
push
add
xchg
nop
imul
jbe
data16
or
and
cmp
mov
fidivs
stc
push
mull
imul
test
es
jmp
lock
jne
ret
sub
aaa
cmpsb
lret
pop
cmpsb
push
pop
jg
jns
das
lret
cmp
push
pusha
insl
out
xchg
mov
mov
mov
and
test
xchg
popf
mov
rcl
pop
push
nop
pop
dec
ret
jns
jae
add
mov
mov
mov
push
in
mov
inc
fdivp
inc
adcb
ljmp
cmp
arpl
cli
rcrl
xchg
inc
sbb
mov
pop
out
daa
ljmp
jb
ljmp
and
xchg
pusha
mov
test
popf
or
outsl
pop
cmp
push
mov
lcall
gs
dec
mov
notl
sahf
aaa
cmp
sti
je
dec
push
xorl
lods
ss
fs
jle
popl
stos
xor
pusha
iret
xor
sbb
xorb
test
jl
add
cmp
sbb
pop
adc
push
and
push
pop
std
cld
add
lcall
jecxz
jne
nop
jnp
jb
and
pushl
out
leave
adc
mov
and
xor
xor
xor
sbb
and
xor
bound
cmpsl
adc
adc
enter
and
push
push
fsubs
imul
inc
mov
push
scas
mov
sahf
lds
gs
xchg
testb
push
sbb
fst
dec
roll
aaa
insl
jmp
dec
push
out
cld
adc
das
mov
repz
cmp
xchg
test
mov
cmp
in
cmpl
inc
xchg
leave
or
adc
inc
cmp
and
ficompl
adc
jnp
mov
pop
repnz
ds
in
bnd
xchg
inc
jbe
in
orl
movb
dec
dec
pusha
xchg
cmpsl
ror
aam
and
es
add
inc
pop
dec
jnp
mov
rorl
into
dec
movsl
aas
shll
dec
fs
aas
rorl
ror
mov
add
mov
dec
shlb
data16
mov
clc
aaa
rcrl
loop
repnz
fwait
inc
mov
or
fmul
cltd
xchg
gs
jo
nop
lcall
test
cmp
scas
clc
leave
push
push
cmp
js
and
and
cmp
and
mov
stos
cmc
es
sbb
and
and
mov
in
mov
pop
repz
inc
add
sahf
lds
loope
fs
insl
and
push
faddl
jb
out
sahf
aam
ficomps
scas
push
dec
or
fstl
mov
sbb
mov
jl
iret
mov
rcl
mov
test
hlt
mov
in
adc
sbb
mov
inc
outsl
pop
jbe
imul
xor
xor
neg
cltd
mov
data16
xchg
pop
loop
imul
pop
mov
mov
std
jmp
es
testl
dec
mov
in
in
ja
mov
mov
rorl
test
pusha
add
je
add
push
cmp
addr16
adcl
das
inc
iret
fwait
lahf
stc
sbb
lret
rcrl
iret
xchg
sub
movsl
mov
pop
jl
stos
sti
pop
fadds
mov
loope
sbb
xor
int
cmp
mov
push
test
int
mov
cwtl
imul
mov
mov
outsb
mov
adc
cld
dec
jg
dec
and
scas
pop
mov
and
xchg
pop
rcll
and
cmp
test
sub
pop
leave
fcomps
cmc
movsb
jecxz
mov
ret
out
inc
push
pop
out
jns
xchg
pop
jo
inc
mov
icebp
out
pop
fsubs
sub
jmp
orb
aam
lcall
mov
sti
je
jnp
push
push
jno
inc
or
jb
loope
mov
adc
call
push
mov
popf
adc
test
jbe
movsb
pop
aam
xchg
fs
inc
pop
push
test
sub
fdivs
test
push
mov
ret
icebp
pusha
icebp
cmpsl
adc
adc
sbb
es
fidivrs
mov
in
dec
mov
and
xor
jecxz
cmp
jg
std
mov
sbb
xchg
iret
push
xlat
shrb
aas
test
fstl
or
and
cli
mov
xchg
shrl
xor
sarl
dec
nop
clc
adc
js
push
mov
sahf
or
pop
fsubs
mov
jne
push
addb
sahf
mov
mov
fists
ret
arpl
add
out
mov
inc
adc
mov
pop
clc
push
into
sbb
mov
neg
cs
fiaddl
xor
mov
jns
and
push
dec
lods
cmpsb
push
jbe
or
in
or
sti
out
aam
sub
fwait
mov
pop
xchg
decl
mov
fmull
xor
mov
shr
popa
xor
roll
dec
mov
add
and
cmp
xchg
pop
imul
xchg
hlt
lahf
aad
js
or
xchg
mov
cmp
std
mov
xlat
mov
in
sahf
xor
or
mov
pop
dec
mov
jno
push
ret
mov
cmp
je
jns
lcall
mov
add
imul
or
dec
icebp
int
sbb
inc
cmp
out
jg
rol
mov
mov
lods
imul
fcomps
lock
sar
loop
xor
ret
les
dec
mov
fwait
jno
enter
iret
sub
inc
in
test
mov
jge
push
sub
dec
lahf
pop
sub
sbbl
dec
loop
rolb
push
mov
add
push
sbb
and
jae
sub
sahf
cmp
sub
jp
add
shl
aad
jbe
lea
sub
push
cmp
lods
mov
jae
mov
dec
addb
jecxz
xor
es
sub
cmpsb
sub
push
xchg
cwtl
jns
out
popf
clc
dec
mov
sbb
push
aam
mov
sbb
test
mov
sub
neg
inc
xchg
push
pop
ja
or
les
mov
pop
ja
mov
cmpsl
cwtl
xchg
lahf
leave
ja
cmpsl
mov
push
pop
mov
mov
xchg
push
jbe
mov
leave
sub
cli
xor
push
or
jo
popf
cli
int
jnp
push
repz
iret
sub
test
js
aaa
pushf
mov
pop
scas
and
push
add
lods
and
cld
cmp
sub
sub
fldt
enter
adc
loope
jae
fninit
sahf
xor
xchg
in
fistpll
mov
lret
fs
push
arpl
mov
jle
sub
repz
fists
cmp
rclb
icebp
in
in
xchg
mov
xor
lods
inc
push
arpl
and
push
ret
jbe
mov
jl
jnp
subl
inc
int
adc
xor
and
push
cwtl
or
and
sub
mov
jne
insl
xchg
add
fcomi
mov
rorl
pop
jg
dec
sbb
dec
mov
and
cld
jae
movsb
popa
mov
xchg
pop
cmp
imul
adc
repz
shll
fistps
jg
xchg
imul
mov
or
fistpll
add
lock
jmp
mov
frstor
jmp
idivl
in
or
stos
in
pop
dec
test
add
sbb
push
je
and
push
inc
dec
and
sti
or
fiaddl
xchg
pop
shl
mov
pop
insb
mov
add
lods
push
sbb
inc
push
xchg
push
repnz
xchg
inc
mov
cmp
push
shlb
loope
mov
out
add
jg
dec
scas
xchg
icebp
cli
pop
aas
imulb
not
roll
inc
lret
push
ret
outsb
lcall
std
mov
imul
and
js
mov
and
imulb
imul
mov
dec
mov
js
push
iret
lret
shl
arpl
xor
push
fstpl
decb
jmp
sub
mov
add
sbb
mov
out
rcl
lcall
in
mov
xchg
int3
pop
addb
cwtl
fldt
sub
or
adc
je
sti
lods
pop
or
inc
cmp
xchg
push
jb
icebp
push
cmpsl
test
push
iret
out
lods
pop
xor
jmp
in
mov
in
mov
cmp
cmp
xor
out
insl
arpl
ljmp
xor
cli
push
push
xor
imulb
or
jmp
xchg
xchg
fidivs
in
loop
orl
mov
addr16
xchg
lahf
repnz
xchg
xor
cmp
sub
push
dec
mov
xor
sbb
inc
pop
scas
jge
lods
testb
out
jl
aas
roll
scas
jmp
mov
roll
outsb
psraw
lds
cmp
cs
adc
int
std
jecxz
enter
mov
shlb
lods
pop
pop
xor
clc
ret
decb
ret
test
shll
mov
or
mov
add
stos
sbb
insl
and
mov
cmp
das
cmpsl
fmull
lahf
mov
jecxz
iret
xchg
adc
mov
dec
mov
mov
leave
fldenv
imul
icebp
rep
mov
loope
or
gs
or
loopne
pop
sbb
leave
out
ja
mov
xchg
ret
xlat
adc
sbb
test
out
jle
push
loope
subb
add
and
std
lock
mov
stc
mull
or
mov
cmp
push
pop
test
cwtl
sbb
push
sub
cmc
int3
fwait
sub
pop
sub
inc
andb
cmp
and
sahf
push
push
movsl
or
add
pop
movsl
inc
fistps
mov
add
push
mov
mov
sbb
lahf
jbe
sbb
stos
add
cmc
adc
inc
dec
pop
or
adc
and
mov
cmpb
add
cmp
stc
clc
out
scas
jmp
push
push
push
cmp
mov
add
or
lock
test
pop
fists
decb
outsl
dec
insl
fwait
int
jg
mov
arpl
cmpb
fstp
dec
push
dec
cltd
sahf
adc
outsb
xchg
push
jae
repnz
or
mov
mov
push
shll
sahf
int3
jle
pop
fimull
popa
add
out
xchg
sahf
lds
push
or
adc
ss
push
fsubl
mov
xchg
cmp
push
xlat
les
mov
mov
lods
scas
mov
lea
leave
pop
inc
test
adcl
sub
mov
ret
xchg
jecxz
int
add
mov
sbb
insb
or
fidivrs
iret
in
or
mov
inc
inc
jo
pop
xor
inc
dec
cld
mov
inc
into
in
or
lret
rcrb
mov
add
faddl
in
out
xchg
xor
adc
mov
mov
push
fcoms
stos
in
lret
idiv
mov
lods
addr16
dec
or
adc
stos
popf
xchg
mov
inc
test
aas
lret
push
dec
xchg
add
cmc
inc
jl
stc
sbbl
pop
push
inc
inc
test
test
sarl
xlat
sub
jl
jbe
push
xchg
mov
and
or
hlt
add
ja
call
xchg
nop
inc
lods
mov
push
cld
cmp
insb
ret
push
mov
roll
xchg
movsb
push
stos
std
pusha
and
ja
fistps
jecxz
outsb
jo
push
xor
add
movsl
mov
adc
fldl
into
or
fsubl
add
jns
or
je
ret
fisttpl
test
adc
aas
dec
fstl
xchg
add
pop
enter
popa
mov
pop
stos
in
popf
imul
ja
inc
ficoml
divl
cmp
adc
or
jns
std
sbb
mov
inc
mov
scas
mov
pop
cwtl
push
imul
jmp
insl
inc
adc
sbb
ficoml
fwait
push
adcb
pop
add
xor
mov
out
sub
les
pop
andb
pop
push
cmp
lidtl
mov
std
push
aad
lods
sub
lods
sbb
pop
xor
jge
sbb
and
xor
cwtl
daa
mov
sti
or
sti
mov
mov
xchg
push
fcomps
repz
out
adc
cmp
xor
xor
popa
jmp
mov
fwait
sbb
cmp
jecxz
fs
push
push
aad
pushf
insl
sbb
sub
fcom
jecxz
shll
insb
jecxz
in
mov
pop
or
lret
fs
rorl
ds
enter
adc
jns
and
push
pop
popa
sbb
jo
add
mov
mov
out
or
mov
sub
or
mov
data16
test
lock
mov
or
add
sbb
jmp
out
xor
cmpsb
inc
imul
xchg
lahf
inc
mov
rolb
jne
pushf
out
xchg
lcall
hlt
insl
rcrb
adc
sbb
and
fwait
adc
fistpll
adc
mov
dec
fidivrl
push
lods
inc
call
arpl
call
adc
jb
xchg
push
sahf
adc
testl
mov
aam
aaa
loop
xchg
imull
adc
push
jl
les
cmp
mov
mov
xor
add
jl
stos
les
out
scas
push
and
or
pop
and
push
xchg
mov
pusha
stos
gs
shll
fs
jg
insl
fcmove
lods
cmp
iret
clc
js
loope
xchg
mov
fstpl
inc
push
sbb
cmp
push
cs
lahf
jno
jns
ja
outsb
adc
mov
repz
sub
xor
cmp
lret
jnp
jnp
pop
int
out
aas
mov
mov
sbb
mov
gs
mov
pusha
cwtl
jle
gs
xor
mov
sbb
mov
ss
test
aad
push
cmp
xor
inc
lret
jb
in
faddl
dec
scas
inc
cli
jle
stos
mov
ds
dec
push
pop
pop
pushf
add
push
mov
pop
sub
ds
ja
pop
cld
and
jb
mov
sbb
ds
jbe
jge
rorl
loopne
pop
jmp
pop
mov
xlat
shrl
xchg
lcall
int
push
pop
call
aas
rorb
sbb
xlat
ds
push
imul
hlt
jecxz
xchg
inc
lock
or
push
sbb
sub
jecxz
clc
shll
adc
out
jbe
cltd
fiadds
lods
inc
push
lret
sahf
ficoms
mov
in
fcom
ret
xchg
push
add
inc
icebp
shrb
pop
imul
scas
or
out
inc
test
ja
cwtl
mov
jg
fstpl
decb
jle
rep
scas
clc
inc
xchg
cmp
or
enter
pop
daa
loope
lret
sub
jns
out
mov
sbb
lods
stos
sbb
scas
test
and
and
inc
inc
ret
outsb
jb
arpl
cwtl
add
arpl
jnp
jno
mov
fmulp
hlt
sub
mov
mov
dec
add
xchg
aam
pop
rorb
mov
rorl
mov
fmull
push
adc
fisubrs
push
inc
stos
lds
cmc
lret
cs
xor
fdivl
xor
push
xchg
push
pop
scas
mov
clc
roll
sub
out
and
mov
mov
jecxz
push
fdivrl
rol
cmp
mov
xor
cmp
setl
dec
int
xchg
mov
scas
mov
jle
sub
sub
adc
push
xor
jl
push
mov
insb
scas
dec
xor
and
scas
bnd
test
inc
dec
inc
in
scas
popf
ret
orl
lea
jg
sub
ret
mov
adc
pop
lret
and
adc
shll
incb
mov
dec
call
test
ficoms
ljmp
icebp
push
aam
xorb
pop
sarb
enter
push
stos
xchg
xchg
push
push
mov
add
xchg
mov
adc
adcl
mov
test
test
insl
xor
sub
jb
jge
repnz
and
negb
mov
into
into
int3
xor
dec
or
mov
ret
inc
inc
mov
repnz
daa
and
aad
mov
jp
mov
stos
dec
ja
adc
cmp
fs
add
pop
jecxz
sub
icebp
lahf
in
cmp
push
insl
in
cwtl
jmp
xor
adc
orb
scas
cmpsl
xor
pop
jecxz
dec
pop
inc
rcl
imull
arpl
lret
xchg
rcr
pop
incb
sub
popa
jmp
fisubs
in
xor
insb
pop
in
xchg
pushf
out
test
add
aaa
cltd
mov
inc
or
pushf
or
xlat
push
sti
lds
xchg
push
pop
jp
out
nop
pop
xchg
pop
jno
cld
and
add
fdivl
icebp
jbe
mov
test
cwtl
mov
xor
cmp
mov
sbb
sbb
push
jae
mov
test
jle
sub
push
test
fimull
loop
cmp
dec
pop
add
xor
fimuls
call
xchg
fbstp
andl
cli
or
nop
sub
cli
push
imul
add
call
inc
outsb
jl
sbb
mov
add
scas
jb
sub
in
sbb
push
loopne
stos
cmc
mov
adc
cmp
fcoml
int3
ret
lahf
adc
push
xor
cmp
jns
aaa
ffreep
push
clc
cltd
or
in
cmp
jl
mov
dec
fdivrs
mov
out
loope
mov
mov
adc
cmpsl
mov
and
mov
test
rcl
xlat
adc
inc
cmp
repz
inc
and
add
or
rolb
and
xor
pop
dec
xor
adc
sbbl
mov
xchg
ljmp
push
mov
sbb
pop
rorl
push
fisttpl
loopne
fbstp
mov
push
decl
outsb
or
mov
jb
mov
lock
mov
mov
int
pop
lock
mov
iret
sbb
lods
xor
push
dec
mov
jl
cmp
shll
sahf
movsl
ds
ret
mov
bnd
sub
push
mov
stos
lea
scas
or
push
sub
fdivr
push
cmp
into
mov
or
jb
imul
xchg
mov
clc
sub
mov
bound
dec
mov
dec
iret
mov
mov
jne
hlt
cmova
pop
ret
jle
pop
in
out
add
fisttpll
outsb
nop
sub
pop
lods
jns
add
pop
retw
insb
mov
sub
stos
mov
jbe
mov
mov
cmp
push
jmp
adc
cmpsl
push
dec
std
lock
inc
xor
ljmp
adc
test
mov
js
pop
cs
cmp
xor
sub
xor
dec
xchg
in
sbb
dec
pop
and
repnz
addr16
loope
roll
adc
cmp
jmp
push
stos
jmp
jmp
sub
call
cmp
test
or
nop
sub
mov
stos
sbb
das
iret
mov
cmp
mov
push
jmp
mov
fildl
dec
adc
loope
ret
sarl
rcrb
pop
inc
sbb
or
pop
test
ds
leave
push
cmp
es
hlt
mov
mov
sub
xor
ret
xchg
cltd
sbb
pop
iret
jle
ret
dec
adc
and
inc
mov
inc
cmp
xchg
jecxz
inc
xchg
incb
stos
pop
mov
inc
fcmovbe
pop
out
dec
fcmovne
movsl
mov
popf
rorb
mov
test
jl
dec
push
cli
roll
stc
icebp
fistpl
scas
out
stos
cmp
mov
pop
dec
inc
fwait
out
push
lods
sub
and
mov
aam
or
mov
clc
call
dec
aad
notb
xor
out
and
loope
mov
or
sub
in
jmp
pop
sbb
mov
sub
dec
bound
pop
cmp
jbe
movsl
sub
push
dec
in
jbe
lcall
adc
cmp
or
inc
adc
test
adc
xchg
jg
fcmovb
cltd
sub
xor
mov
loope
adcl
mov
sarb
test
xchg
xchg
dec
sbb
idivl
aam
pop
push
pop
jle
xor
dec
mull
outsl
es
adc
out
outsl
sub
lea
xchg
cld
sahf
sbb
jae
adc
fistl
jo
test
addr16
xor
test
jb
jo
pop
fs
jnp
fmull
adc
in
inc
mov
sbb
fsubr
lret
jle
mov
jb
in
mov
add
fistpll
cmc
pop
test
outsl
inc
nop
movsb
inc
movl
loope
cltd
std
add
adc
js
sbb
hlt
sub
ss
add
pop
movsb
stc
int3
mov
cltd
sbb
sub
cmp
adc
fistpl
insl
mov
ret
adc
sbb
xchg
les
lcall
cmp
in
aam
scas
and
xor
cmp
jle
push
fdivrs
add
xor
scas
add
jnp
icebp
outsb
frstor
mov
leave
mov
mov
push
fldcw
mov
cmp
fs
gs
notb
lret
mov
imul
sbb
or
fildl
popf
mov
scas
mov
shrl
cwtl
pop
inc
jecxz
xchg
mov
xchg
lods
leave
stos
sahf
sub
mov
push
pop
sub
or
adc
inc
pop
repnz
pop
jne
leave
imul
out
pop
xor
std
xor
sub
scas
sbb
sub
xchg
cmp
fcoml
loope
or
mov
xor
xlat
and
lea
cs
or
xchg
xor
mov
xor
mov
push
and
pop
sbb
ja
lret
add
stc
test
adc
dec
popf
sbb
imul
inc
adc
cmc
pop
lret
pop
scas
jbe
jno
call
mov
and
int3
mov
pop
xchg
push
filds
or
addb
cs
shrb
and
jg
mov
mov
lahf
inc
into
popa
cmp
int
and
add
fucomip
mov
sbb
cmc
out
stc
mov
or
xchg
or
call
ds
nop
adc
xchg
add
mov
das
pop
test
test
inc
inc
sub
fnstenv
xchg
dec
adc
jp
stc
jno
push
ja
cmpsb
bound
xchg
lret
and
inc
mov
sbb
mov
add
fcompl
xor
sbb
sti
mov
pop
scas
js
lahf
fs
mov
jb
xor
test
mov
sbb
cmp
pop
idivb
stos
mov
pop
xor
or
insl
jb
pop
jp
sub
xchg
mov
sbb
mov
push
push
sbb
or
movzwl
or
pop
ss
rolb
pushf
aad
dec
adc
in
fcoms
mov
in
fdivrl
xor
cmp
lea
pop
adc
and
in
sbb
cmpsb
imul
push
fisttps
in
fdiv
jno
imul
fcomp
pop
cli
xorb
and
xchg
and
pop
adc
test
and
jecxz
in
fnsave
pop
xchg
sbb
and
xor
cmpsl
dec
mov
call
dec
fcomps
adc
xor
pop
lret
inc
popf
sub
push
sub
in
mov
testl
inc
call
jnp
add
push
xor
cli
hlt
cld
jecxz
jb
push
ja
xor
jp
mov
shr
mov
addr16
pop
inc
cli
das
loope
outsb
testl
dec
mov
pop
or
aas
hlt
lods
add
mov
xchg
jne
and
icebp
push
repz
jns
adc
xor
test
mov
test
lock
jb
lret
in
mov
xor
jmp
xor
jle
push
mov
jmp
xchg
stos
ljmp
cmpsb
adc
call
rcll
sbb
sbb
mov
add
adcb
add
add
cmp
jne
xchg
jae
push
adcl
int3
xor
cmp
add
je
inc
add
mov
loop
xchg
dec
adc
nop
sub
lcall
das
xchg
and
mov
mov
daa
sub
add
outsl
das
sti
cmc
xchg
notl
push
mov
sub
push
not
leave
das
inc
pop
divb
mov
push
ja
cld
or
aaa
push
and
sub
inc
xlat
xchg
mov
movaps
jmp
scas
sar
int
cmp
int3
inc
and
pop
mov
test
sbb
push
hlt
mov
and
hlt
xor
jnp
adc
not
loop
cld
lret
shll
push
rcrb
mov
ss
dec
inc
aaa
sub
xchg
aas
xchg
shrb
mov
sbb
js
popa
wbinvd
pop
bound
popa
inc
jns
xor
push
xchg
sub
dec
movsl
aas
cli
insl
icebp
jmp
jl
stc
jl
push
into
test
push
popf
stos
jnp
sub
leave
mov
xor
bound
pusha
push
pop
push
fdivs
aad
dec
pop
loop
lcall
aas
xor
sbb
pop
push
jo
push
push
xor
mov
xchg
dec
adc
hlt
adc
inc
fildl
insb
sub
hlt
xchg
aad
mov
pop
jecxz
jb
sbb
stos
inc
sub
pop
pop
sub
pop
jl
jae
and
xchg
sbb
jae
jnp
inc
cmp
mov
stos
out
aas
lcall
jecxz
insb
pop
loopne
cmc
fwait
int3
xchg
mov
fldz
mov
lock
fstpl
add
mov
jns
ret
lods
pop
mov
adc
xchg
testb
mov
popa
loope
shrb
or
add
dec
dec
ret
adc
cmc
mov
sbb
pop
into
dec
fcoml
mov
aaa
dec
xor
fistl
aam
sti
in
das
loope
and
sub
push
mov
adc
sbb
dec
adc
jae
das
ja
sub
sbb
cmp
inc
add
out
sahf
pushf
pop
mov
sahf
jp
mov
loopne
sbb
lods
sbb
daa
mov
int
pop
or
cmp
fucom
or
pop
std
mov
xor
mov
and
ds
xlat
imul
mov
jnp
mov
and
sbb
das
mov
inc
or
faddp
lods
int3
and
mov
lds
lds
mov
repnz
mov
iret
mov
iret
rcll
or
jne
test
xchg
sub
jo
xchg
mov
cwtl
jno
ret
icebp
adc
xlat
pusha
lret
sbb
test
cwtl
rorl
daa
ss
pop
in
pop
repz
out
int3
mov
sahf
cmp
jecxz
push
push
aam
or
inc
and
rcl
rorl
jl
xor
mov
mov
sti
mov
xchg
jbe
arpl
das
rorl
and
js
clc
jo
andb
cltd
arpl
int
dec
loop
out
shl
or
mov
in
das
mov
and
cmp
pop
pop
aad
imul
jo
dec
and
loopne
or
or
xchg
pop
mov
mull
xchg
out
fsubl
mov
js
test
dec
push
sbb
sbb
push
insb
push
inc
aam
sub
dec
or
push
je
and
adc
or
lock
push
or
xor
rcll
cmpsl
std
jnp
repnz
inc
mov
stos
insb
mov
loopne
test
dec
jnp
ds
jle
pushf
iret
loopne
fnstenv
adc
popa
xor
out
dec
sub
into
sub
fs
cmp
jne
incl
repz
sub
cmp
fnsave
scas
scas
stc
outsl
pusha
push
inc
loop
iret
xchg
push
arpl
mov
and
jne
data16
ret
test
inc
fildl
hlt
pop
ljmp
out
mov
arpl
or
outsb
pop
xlat
jmp
mov
sbbb
pop
inc
pushf
sub
cwtl
cltd
xor
je
divb
aad
dec
out
mov
cld
sub
mov
loope
sub
mov
inc
insb
fcmovnbe
ficoms
push
mov
mov
add
pop
and
clc
or
daa
add
fbstp
pop
cltd
repnz
or
jnp
push
bound
mov
and
out
ds
xchg
pop
imul
inc
bound
jns
ror
dec
pop
pusha
mov
mov
daa
imul
cmp
std
sbb
jne,pn
inc
lea
dec
std
push
movsl
into
mov
sarl
in
mov
neg
jb
lods
mov
out
fs
popf
mov
inc
mov
test
pop
pop
cs
inc
int3
sbb
cmp
addr16
lea
mov
dec
mov
pop
xchg
pop
mov
outsl
scas
jo
inc
aam
jle
xor
push
mov
ret
fwait
jnp
pop
sub
sub
and
popa
mov
lods
daa
jbe
lret
mov
test
imul
cmpsl
push
dec
cmp
dec
scas
scas
lea
and
ds
in
xlat
pushf
shrl
sbb
nop
pop
ret
xchg
pop
int3
test
leave
cwtl
aam
lods
andb
jo
add
xor
inc
mov
dec
outsb
inc
sahf
or
xchg
iret
xor
int3
xchg
push
shlb
push
scas
imul
jbe
sub
into
and
add
das
iret
dec
jmp
pop
adc
mov
shll
flds
sub
ret
push
mov
xchg
add
cmp
movsl
mov
push
mov
sbb
test
jns
xchg
push
daa
ljmp
std
rep
popa
aad
inc
fadd
and
mov
mov
in
fistpl
dec
mov
loopne
mov
in
ss
jne
jns
xor
push
fs
adc
push
push
cli
dec
sbb
lret
lret
cmp
shlb
imul
in
outsb
shrb
mov
adc
sub
icebp
ja
jnp
gs
adc
into
jo
xchg
addr16
mov
jge
dec
adc
out
push
jnp
pop
shl
clc
mov
xor
hlt
mov
iret
cmp
xchg
add
mov
mov
stc
cmp
test
ss
push
inc
mov
mov
fstps
inc
jle
stc
lds
mov
and
daa
cmpsl
orl
dec
cmpsl
adc
arpl
test
lods
or
push
test
cs
imul
decl
aad
dec
scas
or
jp
stos
adc
sub
test
jecxz
lock
jbe
rolb
and
cmp
fs
or
es
je
sbb
cs
and
jae
bound
adc
add
cmp
dec
out
notl
jb
xor
sub
jo
sbb
cltd
fs
pushf
and
scas
push
pop
mov
enter
ret
sub
les
mov
mov
pop
pop
xchg
xor
mov
fs
mov
push
push
sarl
dec
mov
mov
jecxz
pop
in
loop
adc
flds
mov
and
dec
inc
and
xchg
xor
xchg
je
inc
int
pop
scas
cmp
lret
hlt
jnp
jmp
adc
leave
add
stc
aad
mov
xchg
out
arpl
xor
and
icebp
rolb
or
jle
scas
and
inc
adc
pop
sub
push
add
lock
ds
push
ljmp
aam
inc
lcall
add
in
out
lret
mov
xchg
test
sub
addr16
incb
in
les
pop
sbb
mov
xor
or
jbe
push
xor
inc
push
cltd
rolb
xor
rcrb
mov
rolb
and
pop
lcall
cs
pop
mov
dec
dec
adc
sub
jle
pushf
or
mov
sti
fcomps
mov
push
cwtl
hlt
inc
lock
sub
push
push
andl
jle
scas
fnstsw
mov
popf
test
sbb
cmpsl
test
push
in
decl
in
mov
adc
add
pinsrw
sbb
adc
scas
xor
insl
aas
jle
in
lahf
cmp
sub
hlt
in
jns
jl
nop
lods
ret
imul
cmp
mov
dec
xchg
dec
filds
pop
popf
pop
icebp
rcll
inc
xor
and
cmpsl
int
aad
insl
mov
iret
in
add
push
lgs
or
test
stos
cmpsl
or
pop
stos
xor
ds
xor
ficomps
pop
sbb
aaa
mov
mov
aam
lods
sbb
cld
pusha
mov
xchg
fstp
lret
fucomp
xorb
adc
xchg
or
add
mov
xchg
jp
push
enter
or
leave
fyl2xp1
pop
sub
mov
xchg
lods
push
test
jnp
icebp
cwtl
push
sbb
and
repnz
dec
jae
mov
outsb
sbb
inc
in
xchg
cmovg
or
fisttpl
bound
rcl
jle
cmp
push
dec
jmp
lds
ja
lahf
adc
arpl
or
jne
imul
testb
cmp
mov
aam
loop
loop
mov
xlat
stos
cmc
inc
lock
fidivrl
out
sub
mov
ja
push
xlat
mov
jg
out
mov
xchg
push
jb
jb
clc
inc
adc
leave
mov
xchg
jge
pop
mov
shr
int3
sahf
dec
sub
in
js
iretw
xchg
outsl
cmp
cwtl
add
jmp
fsincos
std
mov
pusha
test
int3
mov
mov
pop
cs
adc
xor
push
outsb
cmp
mov
pop
jno
incl
jp
mov
inc
dec
jns
hlt
jbe
stos
jno
daa
mov
cmp
push
xchg
addr16
sbb
sti
xchg
fstl
iret
outsb
aas
loop
subb
inc
shl
mov
in
push
movsl
pop
cli
ja
loop
xor
push
paddw
scas
imul
fwait
es
sub
xchg
mov
les
outsb
or
dec
pusha
dec
imul
call
xchg
push
movsl
das
jb
int3
int3
cmpsb
inc
push
sbbl
insl
add
cmc
xchg
jns
lds
cs
icebp
es
mov
or
sbb
into
aaa
xchg
sbb
les
lahf
sub
xchg
std
pop
rolb
rcll
cltd
loopne
mov
arpl
ss
ds
mov
or
fmull
adc
inc
mov
jne
js
push
mov
dec
pop
jmp
out
pushf
rcll
mov
mov
fwait
arpl
sub
mov
xlat
insl
out
ret
xor
movsb
mov
loopne
pop
stc
push
pop
ljmp
jne
dec
xchg
xchg
pusha
notb
jp
or
xchg
pop
inc
jne
js
push
sbb
inc
mov
add
divl
icebp
in
xor
and
or
aaa
and
dec
xchg
sbb
adc
ret
lret
lds
in
lcall
push
pushf
shl
push
inc
push
or
shlb
mov
dec
add
lods
aaa
icebp
call
jecxz
bound
dec
imul
int3
jmp
leave
fdivrl
loopne
pop
jae
test
inc
mov
mov
dec
ret
mov
inc
or
inc
add
mov
scas
cld
jmp
xor
gs
inc
clc
mov
sbb
and
pop
add
in
dec
sbbb
in
mov
lcall
mov
cltd
jl
mov
test
imul
sbb
pop
jl
pop
out
popf
inc
mov
iret
dec
fsub
aam
sub
out
fldt
outsb
cld
jnp
popa
jnp
xor
pop
dec
xchg
adc
xor
fnstsw
and
movsl
xor
mov
rcr
mov
lock
aas
lods
push
clc
lds
test
cli
sbb
jp
pop
fdivl
cmp
test
push
int
ficoms
sbb
loope
mov
rorl
mov
xchg
push
ret
add
jg
or
orb
cs
ficoms
cmp
push
aam
xchg
in
push
push
adc
and
cmp
pop
sub
jg
and
dec
or
cmp
leave
and
clc
or
sub
testl
mov
xchg
cmp
ja
fdivrs
in
mov
inc
aas
rcll
inc
icebp
jg
inc
jecxz
notl
push
icebp
jo
das
mov
sub
adc
cmc
cltd
repz
jecxz
jb
movsb
push
sbb
adcl
jle
aam
mov
ret
mov
sar
cmp
lods
cmp
sarl
cmp
xor
jns
pushf
dec
xchg
push
out
test
add
test
sub
pop
hlt
movsb
dec
cmp
dec
ds
fs
add
mov
loop
pop
jle
fistpl
cs
add
arpl
aam
test
outsb
lds
sub
and
cmpsl
sbb
add
xor
aad
ficoms
xchg
mov
cld
into
int
cmp
pop
mov
jne
ret
inc
mov
test
stos
fwait
popf
je
sub
cmc
mov
push
enter
push
fisubrs
adc
nop
adc
stos
std
pop
jge
subb
nop
sbb
sub
out
xlat
lahf
fadd
jne
aad
sbb
lahf
xchg
fstp
inc
xlat
pusha
mov
mov
xor
lret
aaa
xchg
aad
jns
push
pop
daa
xchg
ret
ds
dec
testl
repnz
mov
inc
pop
adc
jno
ror
in
gs
mov
testl
out
cmp
pushf
insb
push
mov
insb
fistl
outsb
mov
and
lea
lods
mov
mov
outsb
int
xchg
data16
into
cld
nop
dec
or
ficompl
xchg
push
out
jg
fwait
xchg
fucom
or
sub
mov
jp
das
and
or
mov
mov
fs
xchg
scas
fistps
xchg
clc
mov
ret
jae
scas
popa
movb
add
inc
ret
lret
clc
lret
and
cmp
jmp
sbb
cmp
add
fstps
stc
fisttpl
fsub
cmp
in
pop
mov
cmp
pop
in
cli
in
mov
fwait
lea
test
xor
dec
cwtl
loope
sbb
ret
subb
inc
pusha
adc
clc
ljmp
hlt
jmp
mov
jle
cli
scas
add
mov
fsub
lods
adc
addr16
mov
mov
cmp
subl
mov
and
leave
pop
stos
fbld
dec
mov
fldt
inc
xchg
jae
push
cmc
mov
xchg
clc
out
mov
fwait
rorl
repnz
sub
xchg
clc
outsl
cld
icebp
mov
sbb
outsb
jl,pn
jecxz
fstpl
mov
mov
lret
xor
movsl
xchg
mov
xchg
mov
jbe
mov
or
pop
loopne
bound
mov
popa
inc
mov
jae
dec
std
rcrb
dec
xor
mov
push
cmp
push
sbb
xor
xchg
mov
daa
sahf
pop
sbbb
aad
xor
add
movsl
cmpsb
sub
mov
add
xchg
ret
xchg
adc
and
lret
out
and
cltd
in
mov
xor
shr
cmpl
es
mov
jbe
mov
xchg
stos
pop
fs
lret
cmp
cmpsb
adc
stc
push
fsub
sbb
loop
rorb
or
ds
ficoml
lahf
cmp
negl
push
sti
mov
jge
testl
lcall
aad
xor
jp
je
inc
outsb
test
aad
int
mov
push
test
mov
pop
xlat
pop
hlt
daa
pop
xor
xor
or
pusha
push
out
inc
test
test
negl
push
pop
sbb
rclb
outsl
xor
mov
mov
jge
pop
pop
stos
bound
rclb
sbb
ror
cmc
ds
sub
push
lock
mov
das
jge
jp
lret
cmp
insl
insb
pushf
data16
ljmp
imul
cs
sarb
inc
pusha
cmp
aaa
cmp
adc
xchg
insl
push
mov
jnp
or
mov
in
sbb
dec
mov
jne
pushf
inc
sub
xor
dec
mov
inc
mov
mov
pop
mov
xchg
push
push
addr16
test
inc
fwait
xchg
call
or
je
mov
in
icebp
shll
rol
out
std
mov
movsl
push
enter
inc
in
sti
push
mov
shlb
testl
and
push
shlb
xchg
adc
enter
ja
dec
and
fildl
jo
cli
lods
cli
xchg
out
mov
pop
xchg
cmpsl
sbb
or
cmpsb
push
lcall
lods
cmp
pop
es
movsb
arpl
jl
add
xlat
test
rorb
leave
fst
or
or
mov
popa
dec
hlt
mov
and
fldt
sub
adc
xchg
addl
call
jns
or
pop
mov
cld
fwait
sbb
outsb
andl
push
loopne
les
cld
pop
cmc
aad
gs
push
nop
pushf
mov
stc
mov
dec
sarb
mov
lahf
std
xlat
aad
js
mov
xor
repz
mov
sub
lahf
push
movhps
add
pop
mov
sbb
test
lds
cld
xor
js
push
fbld
dec
insb
jbe
in
push
sti
popf
sbb
cmp
pop
mov
sub
lock
push
loope
dec
or
iret
and
mov
adc
das
mov
xchg
jmp
xor
rcrb
xchg
ret
in
out
pushf
shrb
addb
sub
lods
push
out
fiadds
jle
lahf
cmpsb
incl
mov
pushf
jg
xor
cmp
xchg
lods
pop
sub
inc
mov
xor
sbb
mov
in
je
and
push
filds
ds
mov
xchg
push
std
and
dec
jmp
out
loopne
mov
orb
mov
cmp
or
mov
lahf
add
nop
in
mov
out
add
pop
jmp
in
or
mov
adc
stos
or
icebp
dec
ds
and
loope
insl
pop
shll
pop
xchg
outsb
pusha
es
je
outsl
mov
fiaddl
outsb
sbb
mov
jp
fs
sub
addr16
or
bound
dec
push
add
pop
dec
shlb
mov
dec
insb
or
push
dec
lds
mov
arpl
cmp
and
in
jge
fistl
lods
sbb
or
cmp
repz
test
cmp
push
fs
adc
mov
sarl
sbb
lds
gs
jl
call
mov
lods
mov
sbb
mov
sbb
ficoms
insb
mov
movsb
mov
lods
rcll
xchg
dec
loopne
wrmsr
bound
in
mov
outsb
enter
cli
cltd
mov
or
dec
mov
fisttpl
or
stos
adc
sbb
testl
xor
and
xchg
adc
out
out
push
mov
adc
and
xchg
cmpsl
or
xlat
adc
mov
fwait
mov
or
jmp
adc
bound
into
test
lret
jp
sbb
add
push
sti
int3
nop
ja
pop
test
mov
ljmp
in
sbb
sub
arpl
mov
mov
scas
aas
in
cld
orl
int3
mov
jbe
fimull
xchg
ret
mov
xchg
cmc
cld
movsl
ljmp
jecxz
pop
or
xchg
das
inc
push
mov
mov
mov
dec
dec
into
mov
data16
gs
xchg
jp
push
mov
or
push
inc
push
ja
sbb
xor
xchg
ljmp
lret
gs
mov
hlt
mov
xlat
cltd
or
aam
mov
cwtl
adc
cld
inc
jg
push
cld
sub
jae
repz
loope
dec
into
les
sbb
adc
lea
push
jmp
and
loope
and
push
inc
mov
mov
push
icebp
pushf
jns
js
lcall
sbb
fcos
shl
jne
lock
sub
fmul
pop
pop
sub
pop
dec
add
imul
insb
cmp
and
mov
push
add
daa
mov
shll
or
mov
xor
int3
jns
cmp
inc
sbb
jecxz
push
sub
mov
test
lock
dec
daa
inc
insl
cmp
adc
pusha
mov
pop
in
fstpl
mov
aam
sbb
sub
test
movsl
ljmp
dec
int3
imul
push
jo
add
imul
in
jmp
les
mov
dec
mov
xor
repz
push
mov
add
mov
fbstp
imul
negl
mov
lods
push
test
jno
aad
add
movl
push
inc
mov
mov
dec
cmpsb
cmp
dec
xchg
xor
clc
sti
negl
dec
xlat
outsl
fnsave
cltd
pop
jge
pop
imul
cmp
xchg
mov
pop
cmpsb
mov
xchg
xorb
inc
mov
and
out
adc
imul
inc
stos
stc
aas
cmc
stos
insb
and
aaa
mov
xchg
sub
xchg
fldenv
sahf
xchg
xlat
aaa
mov
xlat
in
adc
adc
jg
mov
call
cltd
in
sbb
repnz
sbbl
lret
movsl
xchg
dec
push
test
sub
shlb
push
daa
sbb
sbb
sbb
mov
push
ret
clc
in
or
daa
fabs
dec
inc
dec
negb
sub
jae
ljmp
mov
add
add
jl
push
add
xchg
mov
cli
xor
inc
inc
push
xor
pop
test
ja
jge
cli
sub
add
sub
dec
push
lahf
mov
add
mov
push
fdivl
ss
lahf
add
inc
and
or
pop
ljmp
iret
scas
pop
sub
cmpb
jecxz
mov
xchg
dec
cmp
lock
clc
dec
add
jne
xchg
inc
jno
mov
cmp
sub
ret
fucomp
pop
mulb
add
in
jmp
lahf
mov
cmp
arpl
fistps
lret
cs
cs
orb
mov
mov
pop
add
fprem1
xchg
cmpsb
adc
fiadds
mov
test
fnstcw
test
ss
cmp
gs
jecxz
mov
or
lods
test
aad
cmp
mov
lret
movsb
mov
bound
lcall
or
rcrl
sbb
push
scas
push
fsubs
icebp
nop
or
bnd
lret
push
inc
fidivl
lret
jge
pop
pop
rcrl
cmpl
or
test
push
add
inc
mov
call
jae
clc
rclb
jne
shll
sub
ret
push
imulb
les
mov
mov
mov
mov
add
mov
int3
mov
jp
inc
jbe
test
les
movl
loop
inc
mov
sub
pop
insb
scas
jae
repz
jno
cmp
in
addl
mov
andl
xchg
jmp
jge
aam
fiaddl
and
inc
xchg
adc
hlt
idivl
repz
cwtl
dec
inc
mov
loopne
xchg
je
xor
sbb
cmpsb
sbb
push
pop
mov
icebp
push
and
xchg
arpl
in
sbb
test
dec
jo
push
xchg
add
stos
xchg
int
cmpb
lahf
mov
mov
dec
jnp
mov
lahf
add
aam
adc
inc
mov
fisttpll
jae
xor
xchg
push
jge
pop
pop
mov
mov
out
out
mov
add
out
cwtl
xchg
inc
cmc
mull
cmp
mov
pop
cmp
aas
pop
mov
pop
cmpsb
js
lret
popf
cmp
push
repz
cwtl
push
ret
stos
and
ret
mov
mov
pop
imul
into
jb
lods
das
scas
nop
jle
push
out
mov
xchg
adc
cmp
in
icebp
clc
cmp
int
push
mov
jno
rcll
push
movsl
repz
mov
lret
mov
adc
inc
sub
aad
dec
shlb
ljmp
adc
pop
js
sub
in
cltd
bound
les
jg
add
lods
inc
jns
test
pop
xchg
jp
movsl
mov
mov
dec
out
sbb
mov
aam
data16
sub
sti
in
sarl
push
movsl
dec
and
repz
stos
not
cltd
shrb
add
inc
aaa
cli
dec
mov
xchg
mov
and
push
xor
add
sbb
sbb
pushf
inc
nop
jecxz
dec
push
xchg
pop
leave
mov
lret
scas
pop
addb
push
add
dec
jmp
repz
flds
pop
xchg
push
mov
rcrl
dec
add
lcall
ret
jbe
out
stos
js
xchg
push
dec
outsb
push
pop
dec
fs
xchg
rclb
stos
adc
xlat
mov
cmp
sub
int3
inc
mov
test
push
push
fimuls
mov
pop
sbb
notb
int
int3
pop
shll
test
inc
mov
pop
jg
xor
test
push
dec
cltd
mov
fisttpl
hlt
sbb
xchg
ds
push
sub
fldl
xchg
imul
lds
jbe
test
stos
push
mov
mov
mov
clc
inc
inc
shrl
mov
cmp
add
jl
xchg
pop
jecxz
xlat
jnp
xchg
sti
and
sub
lahf
mov
jg
adc
sti
iret
push
push
sub
jns
and
jnp,pn
stc
push
or
cmp
mov
push
xor
sub
arpl
inc
enter
repnz
scas
cs
push
int3
lods
dec
negb
ss
out
mov
sbb
mov
cltd
or
clc
aaa
push
jnp
push
in
sbb
pop
mov
jno
in
mov
jp
out
mov
rorl
std
std
ljmp
or
or
icebp
cmpsb
xor
lahf
sbb
jo
js
dec
xchg
cmp
lret
inc
mov
push
jo
shrb
push
lock
pop
dec
enter
andb
stos
mov
mov
movsl
cmp
shl
or
fistpl
inc
mov
stos
out
int
push
imul
cli
enter
lds
call
lods
bound
je
imul
dec
andb
roll
cld
and
sbb
cwtl
adc
data16
gs
push
jno
lods
les
movsl
fbstp
or
out
mov
pop
lret
popa
dec
xchg
daa
fimuls
insb
ds
inc
out
or
xchg
mov
popf
es
or
xchg
leave
stos
pop
inc
inc
ja,pt
inc
pop
pop
xchg
jb
stos
mov
shl
in
lea
push
push
mov
add
lcall
mov
pop
cmpsb
outsl
jno
je
or
and
xchg
repnz
cmp
subl
mov
jge
xor
filds
dec
add
subb
sub
lcall
jmp
xor
pop
dec
xor
int
and
rorl
xor
cmp
mov
ja
sbb
into
cmp
in
aam
jae
cmp
stc
mov
aas
xchg
dec
mov
lret
mov
bound
cmp
pop
mov
in
jle
repz
pop
dec
les
sbb
pop
filds
scas
jmp
aas
cmp
dec
popf
ja
shll
cmp
les
xor
cmpsl
rorb
pushf
mov
xor
scas
mov
lret
ficomps
bound
lret
mov
mov
lods
mov
push
pushf
test
xchg
cmpsl
ljmp
xchg
push
fwait
push
adc
cmp
nop
push
jne
es
adcb
adc
inc
les
dec
add
faddl
mov
dec
pop
das
xchg
cld
xor
movsb
pop
pop
jecxz
fs
mov
and
cld
mov
adc
pop
add
push
in
lret
in
pop
xchg
inc
lds
repz
loop
ja
rcrb
les
pop
xor
xchg
sbb
mov
jns
sahf
jae
aam
mov
in
xchg
fnstenv
cwtl
fucom
jecxz
mov
fldenv
xor
insb
sbb
cmp
mov
mov
and
and
pop
out
ja
aas
rolb
or
dec
sub
incl
fmuls
hlt
push
lcall
loopne
das
pop
int3
sar
mov
mov
jno
rorb
js
rcrb
out
cmp
or
push
hlt
jns
dec
in
adc
shll
loope
pop
sub
std
push
pop
popf
jne
pop
sarl
sbb
lds
gs
push
and
jmp
pcmpgtb
jle
and
addr16
adc
cmp
ljmp
in
andl
ljmp
shlb
xor
in
and
ret
mov
push
xlat
ficompl
js
test
repz
cli
flds
jae
int
push
or
xor
and
repnz
mov
push
mul
shll
rcrb
adc
pushf
movsb
repnz
inc
daa
push
mov
push
add
push
fdivr
mov
sbb
or
xor
loop
adcl
adc
icebp
add
out
and
add
push
add
scas
inc
cld
pop
je
clc
sub
xchg
xchg
push
xchg
cs
clc
xchg
mov
or
out
aad
cmp
pop
or
mov
sbb
mov
mul
dec
jl
cmp
sub
out
cmc
pop
hlt
ss
jge
lcall
fwait
imul
cmpsl
inc
sbb
ret
adc
dec
cmpsl
je
mov
lahf
sbb
add
sti
pushf
dec
push
loop
or
sub
das
insb
jo
dec
fbld
js
iret
notl
les
jmp
mov
fldt
repz
arpl
xchg
repnz
in
dec
test
pop
sub
xchg
hlt
insl
inc
fsubs
fs
into
ret
add
stos
loope
in
in
data16
jbe
ret
mov
dec
ret
pop
cmp
inc
mov
dec
sbb
roll
sub
push
es
loopne
and
test
cmp
xor
push
cmc
into
push
adc
xor
inc
mov
jmp
hlt
xchg
scas
xor
lret
sbb
mov
jp,pn
pusha
mov
rorl
cmp
sbb
in
inc
mov
inc
push
inc
movsb
rorl
cmp
paddd
in
lahf
shrb
xor
loope
lahf
pushf
scas
jmp
jno
dec
frstor
push
mov
add
clc
pop
loopne
rolb
std
sbb
mov
popa
testb
add
insb
xchg
cmp
push
cwtl
push
sbb
test
fcoml
imul
mov
inc
popl
dec
scas
push
lahf
sti
push
add
push
or
adc
repnz
inc
loop
or
insb
mov
jp
sub
sub
xlat
insl
xor
dec
push
mov
dec
ss
pusha
cmpsl
add
xor
movsl
cmp
jge
push
out
cmp
or
push
mov
push
leave
ficomps
fstpl
jp
push
jbe
push
ficomps
adc
loop
out
xchg
rol
loope
xchg
inc
fisubl
fldenv
mov
fsubr
inc
daa
mov
jecxz
scas
addr16
ficoms
mov
xchg
mov
mov
adc
xchg
sbb
imul
push
sbb
pop
mov
cld
jmp
test
pop
ds
dec
jnp
fcmovnbe
xorl
mov
jnp
sbb
int3
lcall
fildll
inc
sbb
adc
and
enter
ret
das
mov
leave
fsubrs
test
int
scas
xchg
ss
pop
or
and
movl
addr16
sub
mov
inc
sbb
jg
and
inc
popf
ret
repz
adc
or
cmp
or
lea
dec
lret
mov
lret
adc
mov
js,pn
pop
push
stos
fsub
in
inc
and
mov
lret
sub
sarl
ljmp
or
xchg
cmpsb
add
outsl
stc
cltd
add
xchg
lret
movb
lods
arpl
xchg
loopne
inc
jne
es
pop
or
popf
cmp
nop
push
stos
les
xchg
sbb
leave
les
jmp
push
mov
lret
insb
pop
push
lock
imul
cltd
push
stc
into
push
in
jns
jo
push
test
push
enter
out
xor
xor
shr
mov
add
loopne
rorb
inc
sub
mov
mov
jl
jmp
xor
cmp
jl
fnstenv
ds
in
add
shlb
aam
push
lods
inc
add
fdivrl
mov
cmpsl
fstl
cmp
imul
outsb
leave
and
mov
xor
or
outsb
mov
mov
andl
mov
loopew
in
std
insb
pop
insb
test
enter
sarb
jl
cld
mov
aaa
cmpsb
mov
das
imul
sbb
sahf
aad
cmc
inc
sub
lea
aaa
jns
inc
test
cmc
mov
sarl
in
xchg
or
insl
jle
xorl
or
cld
jae
or
jle
push
sahf
inc
sarl
xchg
mov
outsb
int
rorl
xor
imul
stos
sub
jno
stc
stos
lret
push
cmp
lds
es
cmp
jecxz
mov
stos
shr
or
jb
stos
xor
inc
inc
das
jmp
in
stc
adc
cmp
dec
movsb
outsl
sub
xor
sbbl
push
sbb
rol
add
push
clc
insl
adc
inc
loope
into
push
or
jbe
scas
jge
adc
lods
outsl
sarb
add
test
mov
test
and
pop
mov
xor
loope
cmp
push
fmuls
cmpsl
push
cmpsl
push
rorl
outsl
sbb
dec
dec
mov
adc
je
xor
mov
cmp
fisubl
roll
aam
sbb
outsl
push
pop
mov
mov
in
jns
cs
cld
repnz
outsb
int3
call
sub
cmc
and
in
arpl
cld
push
mov
mov
imulb
adc
flds
cli
mov
jle
jbe
mov
test
dec
jecxz
mov
dec
repnz
out
dec
xor
jb
loopne
sub
les
xchg
cmpsb
scas
mov
mov
sub
and
jnp
test
sahf
push
insb
mov
adcb
shlb
rcr
or
cmp
mov
and
adc
fs
sbb
jb
lret
inc
cmpsb
loopne
shrl
sbb
add
flds
jge
xchg
insl
fists
xchg
mov
es
push
sbb
push
inc
std
cmp
test
rorl
pop
jbe
and
lret
or
mov
mov
or
push
mov
add
push
mov
gs
sbb
out
and
out
in
push
jae
dec
mov
cmp
dec
inc
xor
jge
data16
ret
xchg
jecxz
dec
mov
into
sbb
jl
adc
inc
inc
aad
out
test
mov
test
repz
cwtl
pop
cmp
sti
jo
sahf
repnz
clc
lds
movsb
xor
jg
sub
xor
dec
mov
adc
inc
shrb
imul
or
out
push
jne
int
js
ss
fcoms
mov
xchg
add
mov
xor
loopne
dec
loope
xor
adc
pushf
and
xchg
ja
orb
jg
cmp
movb
std
mov
mov
push
cmp
cli
and
int
out
xor
leave
inc
sbbb
lds
cmpsl
jnp
cs
adcb
jmp
xlat
test
test
xor
dec
in
je
inc
jns
mov
pusha
xor
sub
inc
add
pop
push
jno
out
dec
ds
xor
les
push
call
add
movsl
adc
cmp
out
push
adc
mov
lret
repnz
fistpll
insl
mov
or
mov
std
lods
out
ficomps
mov
cmpsb
js
out
or
aas
in
sub
sub
mov
pop
sbb
repnz
mov
into
jmp
jbe
es
jne
les
je
call
mov
jle
popf
cmp
push
inc
jbe
fimull
push
mov
jle
mov
jns
mov
int
cmp
negl
mov
add
pop
flds
mov
mov
enter
push
mov
xchg
fiadds
leave
mov
jecxz
idivl
xchg
xor
fsubl
rcrb
lcall
jo
leave
jno
in
lods
popa
push
rcrl
ret
lcall
mov
jo
cwtl
lret
adc
mov
xchg
pop
push
jno
dec
push
add
loopne
mov
nop
mov
loope
leave
out
adc
pop
fldenv
xor
sbb
fiadds
sub
bound
sub
push
push
cmpl
adc
pushf
test
xchg
mov
adc
mov
js
cmpl
cli
scas
xor
lea
cwtl
bound
test
add
cmp
lret
fsubrp
loope
sahf
mov
mov
sbb
out
sbb
das
leave
inc
in
dec
mov
mov
jle
out
scas
xor
mov
push
jb
mov
cmp
sub
xchg
sbb
xchg
aas
jl
pop
jle
cmp
in
push
dec
push
inc
dec
sub
inc
inc
mov
or
adc
push
and
xor
imul
fbld
es
enter
cmp
dec
pushf
xor
scas
jp
or
cmp
lods
mov
dec
int
pop
or
push
push
mov
das
mov
fwait
lret
bound
jmp
mov
mov
roll
cld
cmp
mov
or
es
test
mov
push
andb
cltd
shl
xor
cmp
bound
adc
lcall
or
mov
push
xor
adc
fwait
sbb
add
jbe
dec
hlt
sub
jle
cmpsl
pop
lds
mov
out
aam
nop
fsts
xor
aad
movsb
leave
pop
fwait
into
cmpb
jle
ljmp
es
das
lahf
mov
xchg
test
scas
jg
iret
jne
xchg
mov
fsubs
adc
adc
push
and
test
das
clc
push
shr
pop
scas
loopne
jmp
mov
adc
lods
or
pusha
stos
xchg
inc
sbb
push
addl
lea
fmulp
cmp
test
push
loop
sbb
pusha
pushf
sub
xchg
xorb
pusha
lret
ret
outsl
dec
push
inc
sbb
jnp
cld
push
mov
xor
test
jge
and
shl
das
out
test
add
iret
dec
sbb
loope
daa
and
jg
inc
mov
inc
jne
inc
add
xlat
aaa
repnz
sub
xchg
mov
cmp
aad
inc
mov
jns
push
adc
cmp
dec
xchg
add
leave
mov
xchg
xor
es
pop
jae
in
mov
sbb
ret
or
mov
in
rol
adc
fwait
mov
inc
and
test
xchg
jno
add
andb
out
pop
sub
fnsave
sti
mov
std
fsubr
adc
mov
pop
lea
outsb
xchg
repnz
in
cli
xchg
stc
cmpsb
push
xchg
xor
fs
and
je
push
dec
and
dec
push
in
mov
into
mov
mov
hlt
push
ret
add
insl
mov
out
outsb
xor
rcl
rcll
mov
sbb
fst
cld
xchg
aaa
push
sbb
adc
cld
mov
push
fs
adc
dec
nop
clc
cld
repz
or
incl
xor
out
mov
lret
bound
sbb
test
pop
or
pop
mov
test
add
fldt
imul
int
stos
cmp
inc
in
pop
popf
enter
push
add
pop
dec
nop
or
jmp
mov
cmpsb
in
es
fs
and
inc
inc
jmp
pop
lea
inc
jge
popf
imul
cmp
fistpl
mov
fistps
pop
hlt
xor
sub
jle
ds
mov
jbe
inc
fs
xor
and
ljmp
push
insl
loop
sahf
sbb
aaa
mov
cltd
clc
add
cs
or
sub
orb
jecxz
insb
out
icebp
hlt
std
iret
es
in
sub
mov
push
jecxz
inc
lods
call
lret
leave
xor
push
fnstsw
lock
and
orl
pusha
xchg
push
in
push
dec
jl
arpl
sbb
push
fsubs
loopne
cmp
inc
mov
stos
xchg
pop
pop
xchg
cmp
add
jp
pop
push
jge
loop
mov
cs
mov
mov
and
insb
ljmp
push
imul
testb
push
pushf
push
aas
xor
in
and
adc
bound
mull
sbb
mov
popf
mov
jnp
fs
stc
mov
js
test
roll
repz
popa
sbb
xlat
imul
mov
stos
inc
arpl
loopne
jmp
je
lock
sub
push
stc
sbb
cmp
aas
pop
add
ret
loope
mov
fwait
mov
and
pop
ja
mov
fiadds
mov
jne
fdivrl
xchg
adc
push
ss
aaa
clc
fisttps
pusha
mov
dec
fiadds
mov
dec
jmp
xor
lret
cmc
sbb
xchg
js
cli
pop
out
xchg
xor
aas
fucompp
adc
arpl
or
int
ret
sahf
fists
loopne
or
and
or
sub
jns
mov
mov
dec
sbb
mov
dec
outsl
xor
adc
sti
movsl
add
inc
in
and
lret
xor
pop
sub
out
jecxz
xchg
xor
mov
fstl
lcall
inc
pusha
dec
and
push
sub
and
mov
in
inc
insl
or
aaa
jne
call
mov
in
leave
inc
shlb
cmpsb
dec
js
insl
or
stc
das
lahf
out
pushf
in
repz
adc
mov
gs
std
out
lret
adc
and
and
mov
sbb
rorb
lret
add
int3
loope
jg
out
adc
sub
push
psubsw
inc
shlb
mov
je
sti
xor
test
or
sbb
push
or
xchg
mov
outsw
inc
sbb
dec
add
iret
or
mov
insb
sub
fwait
leave
lcall
lods
shlb
add
and
mov
call
shrb
sahf
call
movsl
and
xchg
or
rcrl
inc
pop
sub
and
adc
mov
add
je
nop
lret
inc
mov
push
sarl
loopne
out
push
sub
ljmp
and
movsl
test
dec
in
roll
push
sub
popa
dec
xchg
fsub
jle
xor
or
cmp
jmp
xor
push
cmpl
mov
jmp
clc
out
sbb
fnstenv
mov
add
in
mov
je
lods
xchg
repz
in
cmp
int3
mov
pop
loopne
fwait
jmp
addr16
les
mov
sub
push
mov
repz
add
adc
jecxz
fisttps
mov
stc
jnp
xchg
xorl
pop
sbb
push
mov
xchg
sbb
xadd
jae
mov
mov
add
sahf
inc
xlat
loop
mov
gs
mov
sbb
mov
cwtl
pop
test
mov
shrl
dec
inc
adc
sbb
je
in
sub
idivb
mov
fwait
lahf
push
xchg
cmp
pusha
popa
sbb
lods
pop
jbe
and
cli
mov
sbb
shll
pop
add
inc
cs
adc
fists
and
cmc
call
mov
repnz
jg
into
xchg
cmp
cmp
in
sub
js
mov
es
adc
sbb
fistps
jmp
jmp
jl
insb
cmpl
daa
cmpsl
push
test
pop
ret
aaa
aam
fimuls
push
or
sub
lods
jnp
aas
test
cmp
fmull
xchg
mov
xchg
add
push
in
and
mov
adc
sbb
fldt
inc
cmp
scas
or
mov
push
xchg
push
cmpsl
loopew
jecxz
inc
stos
mov
dec
adc
lret
or
pop
push
loopne
inc
inc
and
divb
pop
push
jmp
and
pusha
in
jecxz
fstps
cmpsb
mov
lods
test
stos
add
dec
ss
xor
ss
adc
lea
loope
stc
jo
sbb
jnp
loopne
fs
or
bound
dec
rcl
outsl
fidivrs
outsl
inc
xchg
xchg
and
xchg
mov
lods
aad
aam
dec
fwait
inc
lea
addr16
shl
repnz
popf
lret
lahf
adc
lods
cli
cld
clc
out
xchg
xchg
cmp
adc
ss
repz
out
sbb
or
stc
mov
add
cmpsl
jl
or
dec
push
repz
cmpsb
dec
or
movsl
lcall
iret
sti
xchg
ss
fmuls
cmpsb
aad
je
inc
out
scas
push
movsl
adc
jl
or
push
sbb
fadds
jb
cmc
es
jmp
jge
add
fcmovb
out
std
adc
dec
inc
add
mov
sahf
movsl
xor
jle
jge
rcll
mov
pop
std
inc
in
pop
test
sbb
ss
insb
lods
or
dec
inc
push
cmp
mov
stc
bound
mov
jmp
addr16
and
mov
fistpll
push
mulps
mov
mov
enter
or
dec
ja
mov
sahf
mov
and
scas
rolb
je
mov
insb
sbb
sbb
out
add
sbb
pop
add
pop
insl
fucomip
jae
jmp
repz
pusha
inc
mov
jg
test
cmp
out
rolb
out
pop
cmp
fsubr
push
cmp
cltd
fdiv
dec
inc
mov
jge
pop
xchg
and
popa
jo
repz
shl
pusha
imul
into
mov
lea
in
les
loope
xor
adc
mov
je
pusha
pop
mov
mov
cmpsb
xchg
fistps
imul
aas
aam
sbb
bound
mov
test
mov
and
icebp
xchg
mov
movsb
sbb
outsb
out
lods
testb
jns
inc
mov
xchg
sbbb
lock
or
inc
sbb
les
and
ja
add
popf
mov
nop
fucomp
ja
int3
jl
dec
add
popa
adc
and
mov
cmp
add
push
add
jp
mov
sbb
mov
mov
aam
mov
sub
push
jns
and
clc
pusha
pop
rorl
repnz
add
ficoms
fs
xchg
dec
push
and
imul
push
lea
jle
mov
enter
out
sbb
ljmp
repnz
icebp
test
test
aad
add
jle
add
dec
and
push
sbb
cmpsl
add
dec
sub
cmp
add
icebp
ljmp
sbb
mov
cmpsl
jle
je
movsb
and
cli
fcoms
lods
loopne
cmp
idivl
addl
and
sti
inc
insb
pop
adc
mov
or
nop
in
roll
push
push
inc
test
xchg
daa
fcmovnu
lock
pop
imul
inc
int
push
jns
outsl
push
cld
out
mov
or
repnz
jp
mov
adc
inc
and
xchg
cmp
sbb
mov
push
mov
inc
adc
arpl
and
fnstcw
push
cmp
push
cwtl
pusha
xchg
xchg
hlt
inc
sbb
dec
incb
pop
or
int
sahf
sub
inc
jb
xchg
push
mov
clc
imul
jmp
push
inc
popa
ret
out
mov
jns
push
fcomp
push
mov
xor
mov
mov
or
das
addr16
addr16
scas
fiadds
mov
je
push
decb
mov
or
pop
orl
push
and
lret
bound
fwait
xor
out
mov
lods
adc
fyl2x
js
enter
daa
push
xor
push
int
pop
fdivrp
jb
mov
or
mov
in
lcall
mov
sub
ds
enter
stc
cmc
adc
ret
push
mov
mov
pop
movsl
sub
sbb
or
push
mov
mov
aad
xor
dec
mov
inc
push
and
ret
mov
mov
rorb
scas
lcall
imul
mov
add
popf
scas
jecxz
ret
movsl
jl
push
pusha
push
xor
push
ss
mov
icebp
cmp
pop
stos
call
js
out
lock
in
cld
icebp
sbb
ljmp
xchg
and
out
testb
mov
push
jb
fistl
les
sbb
jne
pop
push
cmpsb
loop
xchg
scas
in
cld
insb
mov
into
pop
shl
faddl
pop
lds
int
and
mov
push
jo
cmpsl
stos
ss
sub
sub
xchg
and
repnz
mov
mov
cbtw
adc
sbb
cmpsb
adc
jecxz
xchg
ret
mulb
dec
sarl
jmp
shll
mov
sub
dec
xor
push
sub
sti
cli
inc
test
ret
cmp
fnsave
push
or
mov
add
cmp
xchg
mov
scas
xchg
add
into
ss
xchg
arpl
mov
mov
shll
push
cmp
xor
sub
out
mov
enter
icebp
int3
pusha
jae
test
mov
add
push
arpl
jbe
movsb
cwtl
pop
and
push
aad
add
test
pop
sbb
dec
divb
loope
sub
popf
pop
jmp
xor
dec
sarl
mov
push
cmp
jge
mov
insb
or
repz
loope
add
push
stos
jmp
addr16
cli
out
xor
fwait
or
stc
and
inc
ret
gs
jns
repz
mov
aas
fstpt
mov
inc
xor
inc
pop
push
std
jne
pop
mov
jmp
int3
jbe
mov
fadds
testl
mov
into
imul
out
test
inc
out
sbb
sub
lods
inc
sbb
xor
inc
ja,pt
setl
in
xchg
fiaddl
rorb
push
and
xchg
inc
aaa
or
add
arpl
push
or
cs
nop
push
ds
int3
imul
test
inc
push
push
push
in
fstp
push
jle
jecxz
add
mov
push
je
jbe
sub
scas
ljmp
movsl
jecxz,pt
xor
mov
xchg
xchg
xchg
leave
rcl
add
test
lods
stc
aam
sti
inc
push
inc
xchg
shl
cmp
lods
push
jbe
pop
aam
dec
add
in
adc
movl
lret
in
test
push
jae
enter
sbb
or
mov
ss
xor
sbb
test
lds
rcll
pavgw
jmp
pop
xchg
dec
and
int3
mov
js
dec
arpl
jle
inc
nop
dec
jno
outsb
xchg
mov
pop
sbb
xor
jbe
xor
adc
mov
mov
jae
aas
pop
jmp
cmp
sbb
mov
inc
stos
jl
and
mov
xlat
add
or
push
ficoml
mov
mov
mov
or
sbb
push
aas
sbb
xlat
push
push
aad
rcrl
nop
rcll
xchg
lahf
xchg
mov
imulb
sbbb
out
cltd
jle
or
and
xchg
stos
ret
pop
aad
arpl
mov
lret
add
pop
inc
or
fdivrp
inc
inc
xchg
pop
bound
xor
jl
push
mov
lcall
shlb
int
lds
sbb
push
push
outsl
push
xor
and
jo
add
bound
cmp
bound
imul
stc
mov
xchg
sti
scas
insb
inc
xchg
sbb
int
cmpb
push
ret
out
push
cs
mov
dec
iret
xlat
subl
clc
out
in
lret
mov
testb
scas
insl
mov
mov
movl
mov
xchg
ret
dec
add
inc
xchg
in
sbb
jl
jo
pop
push
mull
pop
pushf
aam
pop
mov
cmp
in
mov
sbb
xchg
mov
mov
arpl
scas
fcompl
push
lret
inc
jnp
scas
fst
sub
in
loopne
jg
cs
loopne
shll
lcall
sub
and
add
arpl
loop
xor
out
icebp
imul
popf
ss
and
ja
mov
push
insb
inc
inc
sub
mov
pusha
pop
sub
xchg
mov
xor
mov
adc
pop
jmp
or
adc
pop
fisttpl
push
xor
pop
push
cmp
adc
jnp
push
addr16
ss
mov
stos
imul
adc
shr
mov
sarb
lcall
mov
shlb
or
adc
mov
adc
cli
test
stc
sub
mov
ffree
iret
mov
stc
dec
sbb
lret
dec
rorl
outsb
mov
pop
pop
pop
out
and
xor
ja
pushf
lds
mov
push
stos
rorb
ret
mov
pop
inc
push
fsubs
xchg
or
push
push
stos
mov
pusha
rolb
xchg
add
add
cmpsl
ds
pop
and
dec
lcall
cmpsb
mov
adc
test
out
out
data16
cmp
shlb
inc
faddl
pusha
je
scas
ficompl
out
mov
cld
mov
mov
lea
outsl
dec
fistl
xor
push
rcll
std
enter
enter
push
jecxz
out
adc
xchg
stc
add
sub
mov
les
xchg
push
mov
insl
loopne
scas
fcoml
push
cli
mov
xor
cmpsl
cli
lds
out
out
cld
inc
dec
lea
lods
rorb
cmp
push
pop
pop
ret
lret
pushf
cmp
mov
sub
je
ss
pusha
daa
into
fistl
adc
aad
ds
xor
mov
mov
xchg
sbb
incb
enter
out
pop
cmp
lock
cmp
pushf
or
test
out
jp
cmp
push
fldl
cmp
fxch
es
in
repz
sbb
lods
adc
movsb
std
dec
imul
mov
sbb
adc
mov
sub
add
fwait
out
cmp
lea
sub
sbb
mov
in
lahf
cmp
pop
add
mov
mov
sub
mov
loope
push
mov
add
pop
mov
and
out
fcomip
jne
aas
jnp
mov
dec
jmp
jae
aaa
ret
into
pop
mov
jge
and
or
mov
lret
inc
and
test
sub
dec
int3
jg
imul
jae
aam
scas
cmpsl
sub
int3
push
pop
lea
inc
push
sti
inc
ljmp
test
jbe
into
xchg
or
test
lods
scas
pop
jb
in
mov
dec
mov
sbb
and
mov
gs
jbe
aam
push
imul
lods
xchg
pop
sbb
xchg
inc
fs
mov
icebp
push
pop
xor
stos
dec
jl
pop
cmp
insb
mov
lock
add
jmp
fcompl
clc
push
js
adc
jecxz
sbbl
cld
nop
scas
or
xor
cmpsb
in
outsb
cmp
repnz
mov
mov
dec
sbb
mov
cmp
ds
jb
jmp
in
out
fs
pop
into
push
aad
and
adc
cmp
inc
jecxz
add
or
xchg
sbb
mov
jae
repz
xor
adc
lods
xor
fidivs
das
loopne
or
xlat
sbb
int
mov
sub
push
aas
rcll
in
lcall
mov
xchg
mov
test
daa
fmul
fidivl
jbe
xchg
cmp
mov
out
jo
mov
xchg
add
addl
push
dec
cld
dec
pop
repnz
cmpb
fistps
lahf
pop
dec
dec
cmp
jg
rolb
pop
mov
add
sub
test
in
adcl
inc
or
cmc
lods
pop
jne
xchg
popa
int
rclb
dec
stos
in
inc
clc
xchg
or
std
and
pop
imul
scas
data16
pop
imul
dec
in
addr16
push
jno
pushf
repnz
sub
xchg
pop
mov
aam
js
mov
test
lods
or
add
mov
in
push
mov
jecxz
fs
leave
inc
cmp
ret
adcb
xor
or
test
xor
out
gs
mov
jo
jmp
sbb
mov
mov
hlt
in
sub
push
cmpsl
adcl
adc
roll
and
sahf
mov
lret
mov
adc
sbb
add
jnp
mov
push
xchg
push
ret
pop
imul
xchg
repz
push
jecxz
xor
adc
or
cmp
in
mov
pop
movsb
mov
nop
mov
xchg
push
ja
pop
xchg
pushf
shl
mov
pop
mov
add
aaa
pushf
sbb
les
pop
jns
cmp
xchg
loopne
pop
ds
mov
in
mov
adc
out
popa
mov
cmp
insb
adc
int3
xor
cmpsb
or
inc
mov
jno
mov
xchg
es
cmp
or
data16
daa
sti
inc
or
sub
and
sbb
std
in
xchg
loopne
aas
dec
and
push
imul
lcall
sub
scas
and
adcl
pop
shr
lds
mov
mov
repnz
sub
bound
inc
inc
out
mov
mov
pop
jo
jmp
push
adc
stc
xor
out
in
inc
rolb
in
fisubl
dec
subl
sbbb
aam
test
jle
out
jno
adc
jae
popf
mov
arpl
sub
or
mov
pop
dec
lds
and
dec
mov
inc
imul
cmpb
mov
inc
add
jne
xor
cmp
jmp
mov
xor
mov
push
cmpsl
add
cld
xchg
adc
jo
cmp
lahf
bound
adc
addr16
and
ja
gs
mov
call
dec
and
dec
cmpsl
jb
push
cmpsl
or
sarl
sbb
pop
test
jb
adcb
or
mov
xor
imul
lahf
sbb
mov
dec
mov
out
mov
das
xchg
push
iret
test
lret
popa
icebp
push
ficoml
repnz
xchg
push
xor
xor
nop
jp
aam
lret
mov
loopne
lods
aaa
pop
jns
jo
fisttpll
pop
dec
adc
in
in
dec
jp
jecxz,pt
adc
lods
pop
pop
sbb
imul
mov
aas
addr16
xchg
jbe
mov
push
cmpsb
xor
dec
out
test
push
pushf
mov
out
pop
cmp
sbb
subb
out
pusha
stc
lret
imul
inc
adc
aas
pop
repnz
push
divb
inc
push
adc
shll
cmc
and
subl
fstpl
mov
cmp
in
cmp
lret
inc
push
jbe
add
js
dec
inc
adc
sti
mov
or
arpl
inc
popa
xlat
push
xchg
pop
pusha
aam
mov
mov
or
inc
xchg
xlat
inc
jmp
pop
add
shll
push
sub
push
cmpsl
jbe
xchg
mov
mov
push
xchg
mov
adc
out
jo
lea
xchg
push
cli
or
sbb
ret
inc
test
pop
adcl
or
xchg
dec
out
sbb
fmull
jno
sub
jmp
mov
jl
ret
push
lret
mov
stos
xlat
imul
or
decb
addr16
xchg
lret
fwait
call
sbb
jns
push
jns
sets
push
or
mov
ljmp
mov
rcll
adc
lcall
leave
int
sub
hlt
fs
pop
sarl
test
mov
cmp
mov
jnp
push
cmp
pop
pop
stos
add
mov
fidivrs
in
and
push
loope
pop
movsl
bound
fildl
mov
cmc
enter
ds
push
add
mov
leave
aaa
pop
cmp
sub
sbb
inc
sbb
std
inc
push
mov
sbb
aam
xchg
and
mov
push
push
mov
mov
xchg
adc
xchg
xchg
sbb
xchg
pop
jb
dec
loope
pop
loopne
mov
movsb
pop
loope
fsts
stc
sahf
hlt
adc
popa
mov
or
das
lret
mov
pop
inc
andb
fsubrs
cmp
jnp
repz
test
push
adc
gs
dec
xlat
cld
in
lock
pop
lahf
mov
out
cmp
inc
imul
and
xor
fwait
sbb
das
icebp
xor
into
and
sbb
jmp
cmp
repz
int
lods
idiv
add
in
xchg
jecxz
mov
std
cli
dec
into
inc
cmp
cmp
sbb
and
fdivr
pop
jne
cmc
sbb
dec
xor
mov
fbld
ret
sub
out
mov
sbb
scas
mov
lods
xchg
mov
mov
adc
jo
and
sti
pop
lcall
icebp
divl
push
aas
or
fisubs
and
push
mov
pop
jno
mov
aas
xchg
sbb
orb
pop
and
arpl
push
lret
push
jmp
jo
inc
xor
pop
push
pop
sub
adc
sub
xor
mov
lcall
jns
mov
sbb
ret
mov
les
xor
negl
push
xor
fs
enter
lock
push
repz
pop
xchg
inc
scas
addr16
and
ds
out
inc
mov
inc
lods
test
jecxz
je
into
int
shl
mov
add
jb
push
adc
test
sahf
je
scas
es
aam
stos
daa
fwait
clc
leave
adc
mov
cld
pop
push
add
in
mov
outsl
sti
loop
add
xlat
sub
outsl
pop
cli
fcmovb
mov
jmp
xchg
inc
jo
les
xor
and
nop
pextrw
mov
xchg
cmp
and
cmpsb
dec
cwtl
push
add
test
mov
pushf
aaa
push
fcomps
pushl
pop
jnp
adc
jb
popf
bound
mov
push
call
pop
hlt
mov
mov
cmpsb
ss
pop
jo
mov
xchg
leave
outsl
popa
sbbb
push
popf
inc
inc
inc
jmp
mov
adc
push
mov
pusha
pavgw
cs
xlat
aad
imul
adc
add
fnstcw
add
mov
call
cmpsb
xlat
cwtl
push
xor
xchg
aad
jecxz
ljmp
adc
les
pop
out
mov
and
add
xor
pop
sarl
xlat
mov
push
les
sahf
orl
inc
addb
daa
xchg
cltd
stos
ror
lret
xor
lret
inc
pushf
fadds
mov
test
in
jl
jle
push
outsl
mov
jg
mov
sub
inc
xor
movsl
imul
jb
aas
pop
les
push
loope
dec
fucomip
enter
xchg
cmp
dec
fildll
and
js
xchg
push
repz
push
int
pushf
mov
test
xchg
das
sub
push
mov
adc
xor
movsb
ret
ret
fists
int
pop
ret
ret
and
rcrb
add
mov
cmp
and
mov
dec
pusha
leave
adc
pop
mov
ja
inc
pop
adc
stos
stc
popa
test
cmp
mov
aam
fistl
pop
sti
add
fcmovne
sahf
cmp
shlb
lahf
in
pop
rcpps
jp
sbb
pop
or
mov
test
mov
aad
repz
dec
sbb
ss
out
push
jne
in
fnstenv
daa
push
add
testb
mov
call
sbb
push
mov
xchg
outsb
mov
xchg
xchg
pop
mov
sub
dec
sbb
lret
inc
mov
or
xor
nop
pop
and
stc
testl
les
aaa
lods
jp
rorl
ret
mov
push
and
add
xorb
mov
mov
daa
cmp
jge
je
add
in
out
in
jmp
add
fs
cmp
cmp
jp
shrl
jmp
movsb
mov
dec
lods
bound
push
mov
loopne
sbb
in
test
icebp
scas
fwait
xchg
popf
lea
push
xor
ret
mov
mov
xor
ss
fiadds
pop
sub
fwait
mov
stos
loope
shrb
gs
cwtl
fs
popf
leave
idivl
mov
jnp
sub
mov
les
push
enter
or
jg
adc
pop
xor
rol
test
sub
inc
sub
lret
adc
jbe
push
clc
daa
mov
dec
or
jg
push
aaa
jnp
in
fs
inc
pop
arpl
lahf
lea
fmull
sbb
loopne
inc
pop
push
cmp
cmpsb
in
xor
jnp
lea
sarb
sbb
inc
mov
pop
push
nop
repz
cmpsb
xchg
mov
pushf
sub
xor
dec
std
mov
aaa
mov
vmovhpd
orb
loope
daa
sbb
dec
and
xchg
out
mov
add
or
in
xchg
addr16
sbb
or
lret
jbe
xchg
scas
mov
mov
cmp
and
inc
cmpsb
fcmovne
jbe
mul
int
cli
mov
jge
out
cld
sub
mov
pop
in
cmp
dec
pop
nop
adc
or
mov
jp
mov
mov
xor
or
pusha
js
idivl
in
in
mov
inc
pop
in
dec
mov
xor
pop
cmp
sub
cmova
xlat
clc
fsubl
dec
int
stos
mov
cltd
ljmp
inc
push
cmp
lods
mov
jbe
push
popa
sbb
or
dec
pop
xchg
cmp
sbb
scas
inc
jmp
cmpsl
jne
cmp
imul
or
shrl
jl
mov
xchg
ljmp
call
jae
push
and
gs
fistpll
ss
movsb
push
repz
dec
dec
or
lahf
sbb
ja
mov
xchg
dec
or
pop
add
or
sbb
inc
je
xor
push
adc
xchg
dec
or
mov
outsl
inc
mov
lods
pushf
movsl
pop
pop
ljmp
outsb
aas
sbb
int3
das
je
mov
pop
lret
adc
cld
andl
xadd
aad
fs
push
fwait
cmp
cld
clc
xchg
mov
mov
mov
out
and
cmp
enter
sbbl
in
adc
xchg
or
mov
int
dec
cmp
jo
inc
pop
out
mov
push
ret
sbbl
jno
cmpsb
insb
jle
mov
mov
cmp
iret
dec
in
lahf
adc
jnp
xchg
xchg
cmp
rorb
jl
sub
mov
stc
aad
mov
lret
into
int
mov
popa
sbb
call
in
or
sub
mov
mov
jmp
mov
mov
sub
mul
loop
fsubl
sub
or
cmp
in
inc
je
repnz
popf
cltd
mov
xchg
mov
jae
test
test
dec
jmp
pop
pop
jb
inc
push
fdivl
xor
dec
pop
fldenv
addr16
jnp
inc
mov
cmpsb
stos
mov
stc
inc
scas
xor
outsb
stos
sti
jae
xor
dec
pusha
movsl
mov
inc
je
dec
insl
cmpl
gs
pop
dec
aas
xchg
arpl
sub
mov
inc
adc
adc
and
int
dec
popf
sbb
mov
dec
and
jnp
aad
lds
je
push
imulb
add
dec
adc
pop
push
pop
clc
mov
sub
fdiv
adc
into
cld
xchg
pop
ret
scas
fmul
jns
xor
and
daa
pop
in
and
push
out
sub
clc
rorb
mov
lret
in
or
sbb
and
pop
filds
call
push
sub
out
jne
mov
or
cmp
adc
jne
jge
xchg
sbb
stc
jp
mov
aas
popf
data16
jns
inc
inc
cs
add
shlb
roll
push
aad
jae
ds
sbb
sbb
and
cmp
lcall
pop
mov
xchg
sahf
pop
mov
outsb
push
jbe
data16
into
les
jmp
loop
cmc
jp
arpl
fwait
cli
js
jmp
jne
add
mov
imul
mov
rcl
filds
add
jl
loopne
scas
mov
and
enter
inc
sub
add
sbb
aam
adc
inc
inc
push
cmp
ret
enter
js
and
andl
scas
push
sbb
dec
xor
mov
shr
cmpsb
xchg
mov
test
inc
sarl
out
aam
mov
out
pop
test
xor
lcall
push
nop
insb
mov
in
das
fisubrs
outsb
cmp
cltd
adc
push
pushf
ficomps
pusha
outsb
sti
mov
inc
mov
push
jp
xchg
cmp
jns
cmc
mov
ss
sti
loope
xor
iret
call
jb
mov
pop
mov
push
jp
addr16
fptan
daa
movsb
mov
adc
dec
jecxz
or
push
dec
cld
aaa
sub
addr16
or
mov
outsl
lcall
or
shlb
outsb
mov
nop
mov
pop
in
aad
xchg
imul
scas
push
mov
xchg
add
dec
inc
fsubl
je
add
lods
pop
stos
sahf
fcomp
and
xchg
mov
sbb
push
cs
into
dec
rorl
loop
push
xchg
outsb
mov
sub
outsl
dec
roll
pusha
push
jp
mull
xchg
int
mov
fwait
inc
jg
push
pushf
pop
je
or
mov
fdivrs
sbb
add
and
push
mov
pop
pop
gs
fbstp
inc
dec
fisttpll
add
sbb
je
scas
pop
cli
cs
mov
pusha
cmp
mov
mov
push
lahf
inc
inc
orl
es
mov
cmpsl
scas
lods
mov
cmp
jns
cltd
push
inc
xchg
into
cmpsl
xchg
movsb
xchg
add
nop
hlt
pushf
ficomps
mov
mov
jecxz
clc
xchg
test
and
into
jle
push
fadd
push
mov
mov
push
iret
xchg
es
sub
xchg
sahf
and
test
cmp
pop
push
mov
lcall
incb
inc
mov
inc
sub
push
push
fwait
adc
adc
lods
push
shrb
fmuls
push
xorb
xchg
lret
addr16
jns
addl
clc
je
addr16
push
adc
aad
popl
add
ret
lea
lea
xor
in
arpl
sbb
inc
dec
push
dec
call
jno
mov
pusha
daa
inc
xchg
xor
jl
rcrb
fiadds
leave
into
addr16
ljmp
das
mov
mov
lahf
dec
sub
push
push
xor
xchg
mov
lods
fdivrs
xchg
sbb
or
adc
add
mov
dec
mov
jbe
repz
mov
ret
cmpsb
addr16
test
fbstp
push
inc
ss
fisubrl
mov
push
cmovs
jg
ds
movsl
es
fadd
arpl
fldenv
sahf
cmp
stos
lods
sarl
and
stc
jp
clc
sahf
dec
aad
dec
pop
sbb
kmovw
jge
jne
pop
jge
mov
dec
xor
clc
decl
mov
cmp
mov
xchg
lock
out
in
in
inc
xor
sarl
cmp
inc
lock
mov
ret
mov
out
xchg
rcl
jg
gs
cmp
les
orb
into
or
jmp
and
pop
fwait
ds
xor
mov
lds
lret
sahf
nop
lcall
cmp
pop
pop
adc
sub
sbb
inc
cli
inc
insl
sub
pop
negl
push
jle
mov
push
fldl
mov
clc
adc
dec
leave
sub
sub
push
push
pop
mov
daa
adc
push
es
in
or
sub
subl
xor
pusha
out
mov
rcll
out
popa
ret
and
add
out
xor
mov
mov
sarl
lds
mov
in
enter
into
sbb
stos
mov
mov
lahf
mov
movsb
lret
lret
ret
dec
pop
shl
mov
add
rorl
dec
mov
push
inc
shlb
lea
insb
adc
popa
fst
scas
xor
loop
imul
hlt
add
fiadds
xor
fsubs
movsl
xchg
pushf
ja
sahf
je
repz
mov
fimuls
jnp
inc
add
adc
sbb
dec
dec
pushf
fwait
rcrl
rcll
xchg
push
into
xchg
mov
xchg
filds
loopne
dec
fldt
push
and
xchg
sbb
in
adc
jnp
mov
dec
pop
jo
push
jo,pn
mov
lods
aaa
imul
jb
push
lret
cwtl
mov
fildll
mov
jecxz
movsb
mov
adc
pusha
jnp
adc
mov
flds
imul
imul
rcl
fists
fadds
sub
and
inc
pusha
jae
insl
xchg
sti
sub
nop
scas
add
mov
sahf
sbb
mov
and
rcrl
call
daa
std
mov
sub
pop
xchg
sub
aas
sbb
outsl
xor
adc
cli
adc
rcr
or
mov
xchg
wbinvd
cmp
ljmp
jmp
daa
cli
cmp
xchg
push
mov
mov
cmp
gs
xchg
sub
jno
iret
insl
pinsrw
and
cmp
push
in
in
cld
ret
dec
out
imul
add
lods
scas
jne
mov
mov
mov
adc
inc
outsb
mov
addl
cmp
mov
cmp
fldcw
test
sbb
repnz
mov
sub
fdivs
adc
jno
push
push
xor
mov
loopne
push
rclb
mov
xor
mov
cwtl
lahf
pop
push
mov
mov
push
lods
test
rorl
mov
movsl
or
scas
mov
sub
jnp
cmpsl
mov
mov
sub
rcll
mov
sub
loope
jno
inc
je
pushf
sub
fcmovnu
xorl
test
cmp
into
cmp
daa
jns
push
iret
movsl
scas
cmp
shl
movsl
sbb
pop
mov
bound
push
outsl
lds
out
sbb
jecxz
mov
in
movsb
outsl
inc
shrb
xchg
daa
xchg
pop
or
shlb
or
inc
adc
test
push
add
inc
js
push
leave
adc
or
push
fistpll
icebp
dec
scas
into
push
cmpb
and
jne
dec
mov
pop
push
push
stc
jns
fdivp
mov
adc
test
adc
cmp
mov
add
faddl
mov
adc
adc
inc
aam
pop
cmp
and
push
dec
nop
cli
pushf
mov
inc
push
and
imull
push
lcall
push
push
ret
mov
adc
sti
lods
pop
cmp
dec
rcr
xor
adcb
inc
arpl
xchg
pop
and
or
jb
mov
cmp
or
jbe
lret
les
in
loop
jecxz
jp
test
neg
xchg
in
pop
mov
or
mov
fwait
ljmp
movhps
jge
mov
ljmp
fwait
sahf
lods
dec
push
dec
push
sbb
mov
adc
sti
sbb
mov
inc
fwait
daa
pop
repnz
mov
mov
mov
scas
sbb
test
cmp
mov
gs
cmp
ljmp
jne
mov
popf
xor
clc
inc
cmp
faddl
pusha
dec
out
icebp
xchg
xor
pop
cmpb
add
push
jb
adc
pop
icebp
mov
or
cmp
push
dec
dec
inc
je
sub
pushf
lcall
add
mov
jnp
mov
xchg
pop
jle
jne
push
ret
je
into
jbe
push
stc
fistpll
add
cmp
out
jne
fidivs
sub
fcoml
repz
lcall
addr16
scas
stos
mov
dec
inc
cli
jmp
jnp
inc
rolb
insb
mov
and
sti
fisttps
sub
pusha
stos
shlb
arpl
sbb
dec
jb
sbb
push
xchg
arpl
scas
fcompl
in
mov
pop
or
inc
mov
or
insb
mov
pop
arpl
or
fldcw
adc
bnd
mov
out
cld
or
sbb
sbb
mov
pop
jp
stc
mov
mov
xchg
adc
mov
pop
addr16
or
push
jns
fwait
adc
subb
xchg
inc
jne
in
dec
push
add
inc
xor
jmp
mov
mov
js
leave
test
pushl
outsl
jmp
dec
pop
fisttpl
or
jecxz,pn
sbb
push
ljmp
cwtl
jmp
outsl
mov
xchg
or
xchg
cltd
icebp
movsl
popa
arpl
add
add
repz
mov
push
mov
subb
mov
mov
loope
pop
cmpsl
sub
adc
loopne
into
sti
push
and
jecxz
andl
lahf
jmp
int
and
stos
mov
stc
add
fiadds
dec
inc
fiaddl
push
mov
nop
mov
xchg
or
fs
mov
lret
and
push
xor
jge
dec
lret
and
xor
lret
cmpsl
mov
test
in
sbb
mov
shl
jmp
inc
mov
out
jno
dec
test
push
es
in
mov
icebp
pop
jl
scas
loope
jbe
sub
test
std
and
lret
outsl
adc
out
icebp
mov
aas
xor
into
dec
in
xlat
sbb
in
dec
aas
or
mov
mov
pop
push
and
jne
stos
cltd
fwait
in
cwtl
popf
cmp
or
mov
stos
push
lahf
loopne
popa
push
and
ret
fucomp
lret
xorb
jns
in
outsb
sti
mov
std
push
sub
adc
out
add
fiaddl
popf
xor
mov
aaa
add
out
sub
push
mov
test
adc
rolb
dec
xchg
sbb
mov
loopne
cmp
mov
pop
lret
xlat
loopne
jge
xchg
in
mov
and
fisttpl
jo
xchg
sti
lods
imul
enter
inc
lods
test
sbb
cmp
dec
nop
nop
lock
icebp
es
cmpsl
test
dec
pop
xchg
xchg
pop
lret
jp
xchg
pusha
jmp
add
lea
int
loopne
ficompl
out
faddl
pusha
push
dec
pop
jmp
je
pop
rcll
pop
mov
imul
test
aaa
scas
sub
lea
push
outsl
in
jae
test
shlb
push
sbb
jecxz
pop
lods
jmp
adc
das
or
dec
pop
cs
push
xchg
loopne
inc
in
mov
add
in
sbb
sub
cltd
mov
loop
nop
aas
cltd
pop
xor
or
adc
arpl
cs
jmp
fld
pop
stc
or
push
inc
iret
adcb
leave
jmp
inc
xor
lds
cli
movups
lea
ja
iret
sbb
mov
mov
mov
and
jb
bound
or
add
lahf
insb
pop
and
jns
rol
xor
push
pop
mov
sahf
gs
lods
fsubs
stos
mov
xor
out
add
sti
mov
mov
xchg
and
or
popf
push
bound
push
js
adc
and
cltd
movsb
lea
and
xchg
outsl
popf
into
xor
popf
cmp
mov
ds
or
arpl
push
sarb
mov
mov
and
jmp
insb
add
test
xchg
fnstsw
cld
sar
mov
cmc
inc
mov
dec
enter
xchg
fistl
dec
stos
sbb
add
mov
mov
loop
add
cmp
or
sub
xchg
fdivrs
jp
mov
daa
test
pop
sub
push
cwtl
int3
dec
cmc
dec
cmpb
push
shlb
cmp
xchg
test
idivb
cmp
pop
sbb
aad
push
addr16
sar
push
and
or
rorl
sub
xor
in
vxorps
mov
sub
fstpl
stos
mov
ror
xlat
sbb
dec
orb
repz
sub
ja
adc
test
lret
lea
leave
add
mov
pop
cmpsb
testl
mov
pop
or
fs
lods
cmp
or
jmp
ja
aaa
int3
cmpsb
loope
in
rclb
mov
or
adc
stos
push
sbb
out
data16
mov
mov
mov
xchg
lcall
cmp
cmp
inc
inc
push
leave
sbb
pop
hlt
shlb
and
xchg
bound
sub
mov
pusha
sbb
jg
push
lock
cmpb
push
adc
push
add
mov
mov
mov
mov
mov
ja
jne
push
outsl
repnz
repz
stos
fwait
es
lret
push
pop
mov
inc
lea
gs
adc
adc
loope
or
test
dec
out
mov
dec
movsl
daa
and
clc
stos
add
or
mov
mov
inc
dec
dec
lds
mov
daa
shll
div
stc
lret
fildll
mov
pop
cs
jge
in
mov
mov
push
in
daa
dec
push
subl
sub
aas
inc
daa
xchg
imul
call
inc
mov
push
ret
jne
mov
mov
mov
pushf
les
pusha
cli
ja
cmp
mov
pop
in
dec
out
imul
add
mov
jmp
pop
mov
pop
cmp
leave
imull
movsb
fistpll
clc
xchg
nop
testl
imulb
mov
xor
pushf
pop
mov
jecxz
jbe
add
or
cmp
push
lds
xor
xchg
dec
sbb
fbld
ror
cmp
outsb
push
test
popa
movsb
test
xchg
cmp
mov
jbe
inc
dec
mov
test
icebp
xor
pop
movsb
cmp
jnp
shll
enter
leave
xchg
loope
xchg
and
stos
jmp
jb
shrl
ljmp
out
and
cmp
loope
imul
push
clc
adc
lret
dec
push
andb
or
cs
pop
mov
fldpi
xchg
adc
lods
adc
mov
test
or
jge
jne
lret
push
pop
inc
outsl
jne
loop
xchg
mov
ret
aam
lods
mov
mov
add
lret
mov
ljmp
mov
push
dec
push
dec
xchg
cmp
movsb
dec
ss
jp
movsl
xlat
xchg
mov
jle
adc
lret
cli
shrl
jns
xchg
mov
sbb
shll
adc
scas
push
lds
std
enter
inc
cld
mov
add
dec
mov
push
nop
ja
fdivs
sub
add
das
test
ljmp
inc
add
test
jne
leave
cltd
mov
cld
and
pop
out
push
aam
shrb
and
mov
cli
inc
dec
sar
outsb
dec
es
mov
jne
movups
lcall
add
push
mov
out
mov
jbe
dec
push
pop
push
sbb
sbb
sbbl
sub
xchg
xchg
clc
mov
aam
jbe
mov
das
pop
xchg
pcmpgtb
mov
int3
fsubs
xor
adc
pop
xor
xchg
lcall
xlat
wbinvd
nop
sbb
shl
xlat
sub
dec
adc
das
fidivrs
mov
call
ret
pop
push
shl
jmp
or
push
mov
xor
aaa
inc
shrl
pop
insl
fstpt
or
jp
dec
icebp
adc
arpl
cmc
cltd
call
in
adc
jb
xchg
insl
test
or
push
pop
testb
and
repz
movsb
pop
ljmp
sub
mov
mov
pop
mov
push
sbb
pop
cmp
orb
div
sti
loopne
mov
or
or
stc
into
mov
cltd
push
add
sbb
out
push
lock
pop
lcall
lods
arpl
test
icebp
or
and
mov
jnp
or
sbb
es
cmp
imul
xor
lahf
sahf
popf
xor
adc
lahf
mov
sahf
loope
jne
fxtract
std
mov
sbb
adc
jp
out
mov
hlt
and
lods
xor
push
mov
lcall
rorb
adc
or
ds
cmp
or
sbbb
cmc
fadds
jmp
mov
pop
stos
lods
sbb
xchg
mov
icebp
xchg
out
mov
sbb
adc
jo
jge
stc
push
jmp
into
fwait
bound
xor
loopne
xchg
mov
movsl
divb
test
mov
add
or
mov
fwait
test
outsb
and
mov
mov
sahf
adc
jl
add
loopne
bound
fbstp
xchg
out
mov
pop
xor
not
or
lea
mov
ret
push
adc
jge
pop
pop
incb
sub
adc
stc
add
mov
xchg
mov
popf
mov
adc
xchg
out
or
push
inc
cwtl
sti
hlt
jb
leave
mov
nop
sub
in
add
xchg
inc
scas
or
ss
sbbl
pop
jnp
jmp
loope
nop
xchg
arpl
mov
les
pop
jmp
je
enter
mov
and
pop
nop
or
inc
into
ret
xchg
jge
jmp
enter
mov
test
in
inc
mov
xchg
outsb
std
sbb
dec
shrl
add
testb
or
mov
movsb
pop
push
mov
dec
xchg
mov
fcompl
fsubs
cli
adc
and
cld
sub
outsb
test
pcmpeqb
out
sub
mov
imul
popa
stc
arpl
add
les
jne
test
sbb
insl
aas
stos
fidivs
fsubrl
mov
dec
shlb
lock
mov
fldt
mov
pusha
icebp
xchg
lahf
jne
arpl
xchg
lods
jnp
roll
cld
ds
leave
inc
divl
in
sti
and
pop
lahf
inc
mov
cmp
ret
xchg
push
mov
dec
popa
mov
lret
cld
xor
cmp
pop
adc
jns
loope
in
enter
pushf
push
orl
divb
js
ja
call
fidivl
in
stc
inc
and
mov
dec
or
cmp
sub
pop
xlat
rcrb
fcompl
inc
pop
pop
pop
daa
aam
mov
call
aam
pusha
mov
jne
lock
fsubrs
xchg
ficoml
and
fldenv
inc
push
loope
iret
nop
inc
jae
xchg
aas
popl
sar
mov
cs
rolb
in
pushf
ljmp
stc
mov
or
stos
push
shrl
ja
jb
cwtl
xor
sbb
dec
jmp
mov
clc
call
sub
inc
pop
iret
cmp
arpl
sti
sbb
scas
adc
xor
inc
or
fstp
div
push
and
cmp
aad
lret
sbb
jg
lods
mov
fs
push
mov
add
xchg
dec
pop
dec
jmp
jl
ret
sbbb
lret
movl
das
or
les
fistpl
arpl
cmp
pop
fldenv
cmp
pop
mov
dec
sahf
stos
arpl
mov
pusha
mov
xor
xchg
or
les
jmp
mov
sarb
xor
cmc
ja
fmull
mov
je
mov
and
js
pop
xchg
jb
and
push
out
loopne
push
xor
in
loope
and
es
xchg
imull
lods
pop
jb
push
mov
sbb
in
cmp
and
fmull
push
lea
or
jne
mov
daa
jl
add
mov
sub
imul
andb
loopne
push
data16
pop
dec
gs
int3
faddl
xchg
inc
aas
add
ret
cmp
or
or
jae
or
xchg
push
jno
or
out
add
in
stos
lahf
cli
xor
xchg
mov
dec
rorb
or
jp
jge
pop
clc
cmpsb
mov
cmp
inc
mov
outsl
popaw
cmp
sbb
nop
outsl
jecxz
rorb
iret
dec
dec
movsl
pop
ret
mov
fisttpll
daa
push
lock
nop
enter
outsb
jmp
jae
cmp
imul
add
xor
int3
fstps
jo
ds
stos
inc
iret
cmpsb
mov
mov
pop
xchg
daa
pop
and
movsb
fld
in
and
adc
lea
cwtl
sbb
movsl
jne
push
xor
and
cmpsb
das
mov
jle
dec
xor
in
sub
inc
lods
jmp
push
push
fidivrs
sbb
xchg
orl
std
cmp
mov
lret
jbe
sub
in
jecxz
jne
push
xchg
ret
mov
adc
test
mov
or
int3
sub
ljmp
mov
mov
push
cmpsb
popf
stos
dec
push
jle
fcom
push
jp
test
or
jge
ret
lret
push
lock
push
pop
mov
dec
adc
xor
frstor
clc
loopne
movsb
lret
test
pop
outsb
xchg
mov
div
mov
jge
mov
lret
adc
mov
ja
cmpb
les
dec
mov
xchg
jmp
or
shrl
nop
out
rorl
ret
lret
inc
test
and
xor
jne
jge
mov
ret
lods
les
lock
xlat
dec
fmul
popf
daa
out
test
pop
outsl
inc
push
cmp
fnstsw
sbb
or
inc
jns
out
stc
lods
sbb
sarb
les
jne
ss
push
loopne
push
adc
mov
xor
jle
add
fs
xor
mov
sub
mov
js
mov
out
jo
loope
mov
xor
clc
cld
out
or
jp
sub
stos
push
xor
xchg
sbb
sbb
jmp
mov
jp
fnstsw
xor
sub
mov
adc
rolb
inc
fdivrs
xchg
lret
je
pop
push
dec
insl
shl
test
inc
repz
das
mov
test
cli
scas
repnz
pop
cli
xchg
mov
stc
cli
cmp
scas
int
dec
inc
cltd
jns
mov
cwtl
add
fstl
test
push
add
aaa
jg
fcmovbe
dec
int3
xchg
and
jge
ja
push
xchg
dec
mov
mov
lret
aaa
and
or
pop
jae
in
xchg
lret
fdivrl
cmp
xchg
mov
mov
nop
out
testb
repz
popf
pop
adc
xor
bound
stc
inc
and
es
loop
mov
xorb
pop
jae
bnd
negb
cmp
lods
mov
xchg
mov
sub
adc
and
std
jl
and
aad
push
mov
int
xor
fwait
js
in
adcb
popa
cmp
out
adc
add
arpl
imul
cwtl
lods
mov
adc
imul
cmp
push
bnd
adcl
ss
and
sub
scas
gs
hlt
lods
jg
hlt
leave
pop
daa
addr16
dec
lea
out
jle
decb
sahf
add
mov
fs
pop
sub
shrl
push
int3
mov
add
xchg
push
pop
outsb
adc
mov
jbe
xchg
adc
movsb
fcom
test
push
movsl
push
xchg
sub
sub
jl
sub
jp
xor
and
push
push
mov
push
cmp
xchg
dec
dec
stc
inc
jle
pop
sub
mov
sub
xchg
dec
jb
push
mov
std
xchg
sub
xor
mov
ja
sub
test
repnz
push
daa
test
jbe
andb
jl
push
fs
jnp
ret
mov
fstpt
data16
jl
jecxz
and
inc
sub
popa
jb
cmpsb
cld
sti
std
cltd
and
hlt
jo
adc
scas
sub
xor
push
cmpsl
and
test
pcmpeqw
adc
mov
scas
aad
sbb
je
sbb
mov
inc
sbb
sbb
sub
out
mov
push
mov
push
mov
mov
mov
dec
repnz
push
scas
mov
cwtl
out
adc
lock
mov
push
dec
add
fsubs
sarl
pop
xchg
lret
aas
nop
jo
icebp
jl
xorl
and
jle
repz
xchg
push
lcall
dec
adcl
cmp
push
adcl
jmp
decl
sbb
fsub
xor
fnsave
xor
inc
mov
fdivl
mov
iret
les
jp
adc
dec
dec
push
repz
ror
jmp
mov
push
cmpsl
int
inc
mov
pop
clc
int
imul
cs
xor
andl
or
repz
and
pop
mov
pop
push
stos
shrb
mov
or
outsl
xlat
xchg
aas
pop
dec
pop
in
daa
cmpsl
or
frstor
cs
cmpl
or
int
cld
push
mov
cmp
clc
cltd
cmp
roll
inc
out
push
hlt
adc
and
add
xor
and
movl
sbb
or
mov
cld
sub
jmp
xorb
pop
pop
mov
push
out
dec
dec
bound
fwait
stos
pop
dec
mov
js
cld
dec
int
stc
in
ret
jne
inc
pop
daa
out
dec
push
loopne
lods
aad
sub
bound
adc
pop
bound
nop
mov
pusha
xchg
push
mov
adc
imul
xchg
xor
movsl
lret
xor
xor
sbb
ficoms
mov
orl
out
push
inc
in
rolb
xchg
ret
dec
lock
lods
sbb
push
std
add
push
sub
mov
dec
pop
jne
pusha
pop
xor
jbe
xchg
push
sbb
adc
mulb
stos
add
jmp
andb
hlt
cmp
aad
loop
inc
xor
cwtl
mov
jle
xchg
ds
xchg
mov
cmp
ss
jno
pop
push
jno
stos
or
mov
pop
pop
testl
sbb
js
or
dec
out
cmp
hlt
dec
sub
cmp
insb
and
dec
imul
jle
call
cmc
div
pop
adc
stos
insl
imul
mov
enter
or
loop
pop
loope
dec
adcb
stc
pushf
rorb
aam
test
ds
mov
fdivs
and
dec
cltd
ljmp
cld
xchg
xor
cmp
stc
ss
cld
inc
sub
test
cs
ret
jecxz
mov
pop
adc
test
clc
scas
lcall
inc
mov
call
insl
xor
xchg
cmp
inc
movsb
pop
fcompl
addr16
jbe
std
mov
jns
adc
aas
rol
rolb
jl
xlat
movsl
adc
xor
in
jl
mov
cmpsl
pop
pusha
jp
clc
les
push
into
add
cmp
push
add
xchg
inc
cmpsb
stc
cs
jle
cmp
mov
sub
push
pop
icebp
test
shlb
in
add
inc
jmp
je
add
frndint
stos
xor
lcall
sbbl
aas
inc
imul
popf
cmp
fidivs
dec
stos
fisubrl
inc
or
aaa
pop
mov
cltd
sub
jle
inc
xor
das
ficomps
rcrb
aas
lcall
jb
ja
dec
push
jmp
xchg
jle
popa
jne
xor
jo
shlb
inc
xor
fisubrs
mov
movsl
shlb
popf
sub
sbb
ret
out
bound
in
test
inc
repnz
flds
dec
stc
cmp
mov
das
inc
insl
sub
iret
clc
xchg
rclb
lock
das
test
sub
fcomps
stos
clc
xorb
pop
adc
test
jl
sub
shrb
ret
gs
sahf
dec
jle
movsb
add
fdivl
dec
push
inc
xchg
cltd
xchg
lahf
aam
add
mov
shr
iret
cmpsb
xor
ljmp
icebp
outsl
adc
jmp
mov
cmpb
xchg
roll
add
ss
in
cmp
icebp
inc
dec
sbbl
adc
jne
cmc
lods
push
lret
jmp
shll
push
lds
daa
push
repz
sar
pop
in
push
testl
dec
call
mov
cwtl
xlat
sahf
cwtl
imul
mov
test
and
dec
dec
notb
adcl
dec
push
je
mov
lods
clc
popf
jae
push
inc
mov
out
test
push
shlb
es
mov
and
jno
inc
jmp
jnp
jbe
mov
mov
dec
inc
xor
popf
out
sbb
in
sti
pop
dec
icebp
jnp
insb
pop
int3
ja
loop
stos
popf
xor
negl
push
outsl
jo
xor
bound
pop
xor
aas
lcall
popl
lds
sbb
xor
push
mov
hlt
xchg
gs
loop
std
nop
adc
loopne
mov
les
xor
pop
push
movsb
call
sub
push
add
lret
xchg
dec
test
sbb
ret
pushf
mov
sbb
jp
pusha
xchg
pushf
sub
jbe
out
inc
cmp
hlt
loopne
fstps
mov
pusha
pop
pop
xchg
inc
sub
es
push
dec
inc
cmpsl
mov
mov
bound
pop
popf
jge
jecxz
daa
fbld
adc
xlat
adc
adc
cld
add
and
data16
mov
shlb
xchg
mov
out
ds
or
std
addb
fstp
push
adc
test
aas
aad
pop
or
push
divb
mov
xor
shll
lcall
dec
pushf
cld
insb
mov
ds
sub
das
dec
out
and
iret
dec
fsubr
jmp
cmc
insl
leave
shll
sub
jp
fldl
pop
mov
pop
inc
push
cmpsl
pop
fsubs
mov
cmpsb
mov
movsb
aam
cmp
jno
cmp
dec
inc
dec
leave
addl
pushf
iret
aas
rcl
xor
fsubrs
pop
in
push
adc
fsqrt
push
mov
dec
add
cmp
dec
dec
fs
js
fsts
rcr
mov
js
out
add
xor
test
ss
lods
adc
daa
daa
negl
sub
stos
pusha
outsl
loop
std
ret
mov
sub
aaa
aas
adc
xchg
pop
sub
mull
add
or
clc
pop
cld
mov
mov
lret
nop
out
pop
fisubrs
push
iret
cmc
mov
jns
lahf
test
pop
cs
or
gs
adc
mov
dec
aam
xor
div
lods
adc
lds
lahf
xchg
xchg
outsb
out
add
cmpsb
push
jbe
into
je
mov
out
fcoms
add
xor
ret
sbb
adc
out
jmp
xor
sahf
cld
add
sti
sahf
das
mov
aaa
adc
mov
cmpsl
test
sbbb
in
std
popa
xor
addr16
lahf
jge
adc
push
es
fcompl
jb,pn
ffree
enter
jmp
mov
shrb
mov
sbb
fmull
lret
mov
pop
fisubrl
ret
cli
ret
xchg
inc
mov
sti
or
inc
jmp
xor
mov
fsubs
sar
or
pusha
dec
jmp
std
adcb
lahf
sbb
and
pushf
sbb
dec
jp
test
jg
inc
jno
push
dec
mov
stos
fdivl
cmpl
inc
and
es
xor
adc
xor
adc
punpcklbw
dec
fdivl
sbb
mov
pop
fsts
push
adc
dec
dec
pop
sbb
sbb
and
or
mov
call
xchg
movsl
xchg
pop
negb
sub
sbb
stc
js
fistps
lods
mov
adc
das
stc
jecxz
adc
sbb
shr
add
or
and
shl
popa
sbb
xchg
loope
divb
popf
stos
xchg
jns
aad
les
xchg
ljmp
jmp
sahf
and
fcmovnu
punpcklwd
push
xchg
jl
adc
ss
out
pop
sub
pop
pop
stos
rorl
push
sahf
aas
sbb
mov
nop
inc
xor
ljmp
cmp
lcall
shr
popa
sub
push
mov
mov
lahf
xchg
xchg
push
addr16
loopne
movsb
jl
loop
in
dec
sbb
in
fnstcw
iret
dec
mov
outsl
add
loop
cwtl
movsl
push
loopne
test
pushl
test
cmc
insl
aaa
nop
mov
nop
or
adc
xor
mov
xchg
outsb
inc
jmp
cmp
fcmovnb
movb
mov
and
hlt
sahf
fimuls
mov
out
jmp
xor
inc
mov
adc
push
ljmp
cmpl
rorb
popa
addl
popf
fwait
pop
push
sbb
inc
push
jae
mov
or
lret
push
mov
xor
in
aam
or
or
pop
dec
das
rcr
pushf
adc
jo
testb
mov
fidivl
mov
cmpsl
adc
jecxz
inc
movsb
mov
add
cltd
jns
addl
mov
aam
pop
scas
sbb
stos
in
fsts
sub
leave
push
pop
iret
rcr
ret
jl
stc
test
mov
fwait
lret
xor
mov
push
xchg
dec
cmpsl
sti
pop
lcall
adc
mov
mov
scas
ret
mov
jp
jecxz
sub
incl
sub
pop
sub
insb
popf
cmp
xor
and
xor
leave
sbb
push
ret
mov
cmpsl
sbbl
and
cmp
mov
add
push
dec
jle
and
xor
imulb
pushf
cmpsb
cmp
mov
repnz
cmpsl
pusha
out
fisttpl
daa
mov
push
and
or
or
dec
xchg
insl
sbb
mov
loopne
push
movsb
jnp
sbb
pop
fcomps
add
sbb
into
xor
and
adc
push
pop
clc
mov
pop
std
xor
pushf
es
lret
mov
pop
add
enter
mov
push
xchg
push
sub
push
test
cli
dec
into
fisttpl
push
pop
inc
call
lods
inc
dec
movsb
sbb
mov
mov
push
orb
pop
ljmp
mov
xchg
lea
repnz
cltd
dec
jae
es
in
cmp
sub
sahf
mov
out
mov
bound
xor
pushf
jb
pop
shrb
fnstcw
push
data16
pop
push
fwait
daa
mov
push
and
cmpsl
fmull
xchg
inc
pop
add
imul
lret
xorb
inc
pop
push
sub
imul
jnp
cmpsb
sbb
gs
loopne
or
mov
cmp
sbb
enter
inc
adc
mov
mov
push
ljmp
jp
mov
xchg
int
or
dec
sub
add
inc
inc
sub
cmp
xchg
in
enter
mov
scas
lret
nop
jle
jge
add
dec
mov
test
repnz
lahf
outsb
mov
ds
jl
popf
xlat
wrmsr
cld
jns
les
push
imul
jecxz
lret
aam
lahf
adc
push
lcall
jae
in
sti
xor
jne
push
into
push
sub
xchg
xchg
jo
mov
mov
movsb
push
movsl
xor
or
fldl
popf
sbb
js
imul
shrl
ljmp
aam
sub
sub
cmpsl
shlb
mov
int3
jg
enter
lods
fsub
xchg
add
adc
test
and
pushf
fimuls
ds
aad
stc
popa
and
stos
fsubrs
and
inc
push
sbb
adc
jp
xchg
adc
pop
push
sbb
sti
cmp
push
outsl
adc
enter
push
sarl
jae
sub
cld
adc
into
stos
mov
xchg
cmp
xor
xchg
add
lods
cwtl
jle
cltd
mov
jle
pop
insl
push
jecxz
pushf
das
outsb
mov
mov
sbb
out
loop
sub
rclb
fisttps
push
mov
lods
lahf
fdivrs
jnp
popa
or
jnp
jl
pop
clc
roll
jle
pop
add
xchg
xchg
aam
pop
and
rcl
pop
cltd
incb
bound
push
lahf
shrl
cltd
jp
pop
jecxz
movsl
pop
arpl
add
and
ds
in
test
adc
inc
inc
xchg
cli
loopne
lcall
lahf
xchg
rcrl
aaa
insb
mov
addr16
jmp
push
pusha
test
xchg
lods
fxch
aas
jb
rcrb
push
mov
sbbl
add
nop
sbbb
push
inc
fildll
and
mov
fwait
push
jp
jb
ret
xchg
mov
bound
xchg
push
mov
sub
lahf
pop
outsb
lea
das
outsb
jo
pop
fsub
test
mov
add
loop
dec
pushf
aas
cmp
cmp
negl
jmp
lahf
nop
sbb
out
and
sbb
leave
lahf
fldl
sub
out
mov
shrl
xabort
adcb
push
cmp
or
jbe
mov
andl
xor
cld
jl
jecxz
adc
popl
or
sub
in
and
sub
popa
mov
jnp
add
int
cmp
sbb
lods
sbb
jg
out
sahf
in
pop
mov
movl
test
inc
sub
into
sbb
jnp
pop
mov
jecxz
das
mov
stc
gs
xlat
enter
pop
xor
ljmp
push
setg
mov
jno
inc
repz
loop
testb
inc
dec
xchg
jnp
adc
lret
out
and
add
in
outsl
cmp
imul
je
push
pop
xchg
sbb
jae
inc
mov
adc
inc
inc
jl
andnps
add
jnp
int
mov
or
add
dec
xchg
cmc
outsb
shrl
mov
adc
scas
sub
inc
ljmp
cld
jle
mov
pop
es
das
adc
push
dec
mov
mov
int3
inc
in
iret
inc
sub
mov
push
jb
outsl
xchg
pop
sbb
dec
jge
pop
and
je
inc
mov
loop
add
sahf
in
fsubs
or
cmp
repz
dec
arpl
outsb
mov
adcb
rcr
cmp
repnz
call
pop
data16
mov
cmpsb
call
out
lret
mov
sub
mov
cli
scas
add
push
sub
adc
xchg
jp
mov
xchg
rcll
add
fcompl
pushl
push
daa
mov
and
mov
aam
lds
cmpsb
fcmovnu
decl
cs
lods
pop
dec
test
xor
fcoms
mov
arpl
or
xlat
jns
scas
test
xor
repnz
dec
shlb
ss
cmpsl
or
push
jbe
mov
divl
pop
hlt
push
ror
xchg
push
mov
in
inc
icebp
inc
sahf
mov
mov
sub
cmc
xor
push
xchg
test
test
lahf
push
bound
jbe
push
pop
jecxz
dec
outsb
incl
lcall
inc
xor
mov
pop
test
outsb
dec
adc
bound
cmpsl
dec
fmull
cmp
int
lods
xor
cmpsb
pop
cmp
cwtl
sbb
loope
repnz
pushf
ds
movsb
out
mov
pop
aaa
pushf
and
decl
and
or
and
ljmp
ret
push
and
and
push
push
testl
arpl
sub
cmp
mov
fwait
mov
inc
aas
test
and
call
push
lahf
aas
push
out
cld
shll
test
aaa
jae
pop
add
jns
dec
pop
pop
clc
xchg
adc
jnp
scas
sbb
xchg
xor
dec
adc
mov
push
dec
out
fsts
dec
push
into
jnp
sub
inc
mov
or
insl
or
jo
push
sub
and
mov
std
push
fstps
into
lods
imul
xchg
call
adc
inc
dec
cld
fldl
fs
dec
leave
lret
dec
nop
test
or
scas
cs
scas
adc
negl
mov
jg
out
cmp
cmp
pushf
xor
jmp
daa
inc
mov
flds
mov
inc
mov
xor
push
mov
cmpsb
test
dec
adc
fldenv
push
cmp
fldenv
mov
push
shrl
cmpsb
sub
jmp
mov
rcll
outsb
repz
adc
sub
or
in
lcall
add
lods
rorb
jg
movl
add
pop
mov
movsl
test
mov
mulb
movsl
mov
push
jg
sub
jmp
test
xchg
xor
and
js
xor
data16
mov
cmp
jge
lds
jae
add
movsl
jp
sahf
test
sbb
mov
cmpsl
jmp
jne
sarb
dec
jbe
dec
xchg
clc
jp
fisubl
mov
call
push
mov
out
das
cmpsb
lcall
scas
mov
or
mov
sbb
iret
arpl
idivl
into
lcall
fucomip
push
xor
cwtl
test
mov
jl
subb
sbb
jecxz
in
imul
mov
xchg
iret
xor
pushw
jo
inc
shrb
and
cs
popf
add
stos
mov
xor
mov
loope
push
shlb
lret
movl
sarl
mov
inc
pop
lds
adc
fisttpll
and
sub
or
cld
mov
xchg
loope
je
leave
push
push
sbb
mov
dec
sarb
jp
push
orb
mov
scas
fistps
xor
out
inc
and
inc
add
fdiv
and
push
jle
xor
jecxz
inc
icebp
stos
xor
dec
sbb
jae
push
pop
sub
push
pop
por
ja
add
imul
clc
jbe
aas
adc
inc
in
outsb
push
adc
mov
sti
daa
xchg
jge
push
rcrb
mov
in
mov
lcall
shl
push
cmp
cwtl
mov
jmp
out
lret
mov
out
cmp
mov
hlt
sti
imul
push
inc
jo
aas
fisttpl
mov
test
cmpsb
mov
xchg
fcoml
dec
sbb
xor
adc
mov
mov
repz
adc
jne
lcall
out
cs
sbb
xlat
arpl
mov
inc
push
mov
jp
push
add
dec
add
mov
cmpsb
sub
cmp
popa
orb
mov
inc
setb
jecxz
inc
jle
xchg
popa
andl
imul
lahf
mov
dec
or
mov
icebp
mov
mov
xchg
push
out
pop
and
push
and
xor
loopne
cmpsb
aaa
mov
cmp
in
scas
cmp
adc
pop
in
xor
aas
pop
adc
jecxz
jb
sbb
lret
xor
repnz
inc
sti
xchg
cmp
push
cmc
mov
mov
jecxz
xlat
dec
icebp
das
push
stos
jecxz
push
and
cld
sbb
das
jne
sub
dec
ret
movl
cmp
insl
stc
inc
xchg
test
lods
test
cmc
shr
das
push
and
cli
hlt
test
sbb
sub
lock
xchg
push
push
cld
sbb
cmpsl
arpl
jl
pop
fstpl
inc
jg
pop
mov
jns
ret
dec
std
xchg
test
ror
popf
dec
andl
mov
in
int
xor
sub
dec
loopne
inc
js
mov
adc
xchg
sbb
movsl
loop
roll
lret
push
lods
loope
dec
jb
mov
mov
xor
int3
dec
cli
pop
fs
xor
fadd
jne
mov
sbb
ss
out
xor
jne
jge
aad
xchg
mov
in
pop
sub
aad
imull
aam
cmp
ret
aaa
sub
jmp
pop
in
mov
in
push
push
outsl
sbb
push
inc
out
adc
ret
mov
dec
cmpl
js
push
movsl
cwtl
cmc
fs
bound
icebp
fwait
sbb
popf
adc
xchg
enter
test
and
push
fdivs
pushf
add
aas
sub
sub
dec
lods
dec
sahf
xlat
adc
mov
cld
dec
pop
jmp
loope
or
jbe
inc
cmp
jg
sub
push
aas
shll
xor
pop
sti
cli
data16
push
fwait
push
or
sub
test
js
jge
in
out
push
int3
fwait
inc
fs
jne
jns
dec
add
aas
or
lcall
in
sub
in
movsl
mov
out
mov
pop
push
ret
inc
aad
fisubrl
lock
mov
sbb
sub
subl
xor
mov
mov
add
out
dec
std
sti
sti
es
push
fcmovb
iret
movsl
mov
push
std
dec
mov
out
dec
jge
gs
push
adc
xor
mov
sub
loopne
cmc
dec
sub
add
pop
outsl
aas
lods
inc
idiv
sti
insb
jmp
and
xor
in
ljmp
hlt
mov
sbb
xor
imul
jo
adc
pop
push
xor
cmp
inc
out
jg
cmp
insl
outsb
xchg
movsb
and
xchg
sahf
add
dec
inc
jl
cli
jno
sub
repnz
stos
out
mov
cwtl
jno
addl
push
lea
mov
adc
mov
cld
adc
cmp
mov
pusha
inc
push
ret
add
mov
and
push
adc
testb
mov
mov
out
fldenv
mov
pop
sarl
xor
fs
lret
int3
jb
cltd
push
fwait
jbe
nop
push
mov
dec
ss
fs
cmp
mov
nop
cmp
mov
out
popa
bnd
hlt
popf
fbld
negl
push
jle
xchg
lcall
or
mov
xchg
jmp
xchg
mov
pop
fs
stos
dec
jl
mov
xchg
mov
dec
aam
aas
jecxz
cmp
fs
call
mov
jb
add
lds
out
push
loope
adc
or
mov
pop
cmp
insb
and
mov
mov
mov
dec
sbb
dec
ja
adc
cld
sbb
pop
les
pop
orb
jl
jnp
test
push
push
hlt
mov
enter
xor
sub
out
mov
das
sar
sub
jp
test
outsb
and
neg
ja
sbb
aaa
lret
out
loope
out
out
pusha
clc
xor
je
std
rol
inc
xchg
in
addl
xor
cwtl
cwtl
pop
testl
repz
mov
sbb
faddl
hlt
movl
sbb
sub
insl
int3
xor
dec
lcall
sub
mov
fwait
inc
and
inc
sbb
mov
enter
sbb
add
leave
mov
mov
lock
aad
shrl
shll
inc
cltd
sbb
xor
rcll
adc
adc
push
cli
xor
nop
pop
ljmp
dec
mov
mov
xlat
insb
push
adc
pop
int3
xchg
loopne
hlt
xor
cmp
or
pop
notb
mov
out
mov
adc
sahf
loope,pn
mov
enter
jno
in
dec
insb
mov
cmpsb
jo
mov
mov
ret
push
sbb
les
add
and
lret
push
pop
cmc
test
faddl
xchg
pop
cmpsb
sub
fstpl
ficoml
fnsetpm(287
jg
loop
dec
imul
jmp
mov
gs
push
enter
inc
fs
adc
pop
inc
xchg
sbb
push
add
cmp
xor
or
jecxz
adc
in
test
pop
mov
movsb
pop
fidivl
jo
push
sub
dec
mov
jle
lret
xchg
sub
cmp
dec
test
flds
mov
scas
cmp
push
jg
scas
pop
and
addr16
and
push
inc
jge
js
pop
xlat
shll
call
out
cmp
push
and
and
add
xchg
scas
stc
push
es
popf
and
inc
mov
push
ja
cld
lahf
xchg
ret
test
int
jp
roll
insb
mov
add
xchg
cmp
outsb
insb
test
clc
and
dec
nop
push
jg
xchg
test
popf
enter
leave
mov
jno
lcall
hlt
rorl
fnstcw
cmp
xchg
and
push
mov
clc
and
sub
xchg
jg
mov
xchg
ror
int
aam
pop
test
mov
push
pop
daa
xor
and
dec
adc
call
ds
cmpsl
test
in
add
sub
mov
cltd
mov
pop
call
inc
mov
jg
nop
push
xor
sbb
ljmp
incb
decl
push
hlt
aad
enter
mov
loope
test
mov
jg
jbe
jo
jns
xchg
and
jg
insb
push
inc
mov
cmp
mov
mov
test
std
ret
add
xchg
mov
ret
aam
push
xor
scas
lock
and
daa
repnz
aaa
inc
xor
jns
es
xlat
in
and
push
pusha
add
jb
mov
rep
push
ljmp
roll
push
xor
dec
or
xchg
pop
loop
pop
jp
sbbl
mov
sarl
adc
or
jb
aas
lret
scas
xor
fucom
fstps
inc
add
pop
into
sbb
test
and
sub
andb
inc
add
adc
adc
mov
popa
xor
cmpsl
dec
imull
pop
out
mov
arpl
adc
in
jmp
lods
mov
and
jae
push
push
adc
lahf
sbb
cmp
jo
cwtl
pushl
pusha
filds
inc
sti
cmpsb
call
add
andb
pop
xchg
jb
adc
cmpl
shlb
fstpt
outsl
cmpsb
adc
loop
test
xor
add
cs
push
aam
scas
mov
sub
and
insl
pushf
in
daa
add
push
in
and
xchg
aad
sub
and
xchg
shlb
xchg
fs
xor
jns
mov
loop
je
lds
push
lcall
xlat
popf
pop
pop
mov
sbb
lahf
dec
mov
outsl
dec
cmp
mov
mov
mov
hlt
mov
imulb
push
push
or
pop
xchg
out
enter
xchg
push
mov
testb
dec
pop
jl
adc
dec
mov
mov
std
sbb
jb
in
ret
inc
adc
dec
in
push
xor
mov
xor
ret
daa
jbe
fwait
adc
sbb
into
pop
jecxz
pop
mov
dec
out
jne
imul
into
push
into
leave
and
call
xor
or
cmpsb
repz
rclb
xchg
cmp
icebp
loop
pop
jg
sub
mov
xor
rclb
sbb
or
lods
stos
idiv
movsl
push
fadds
out
push
test
les
cmp
inc
dec
loop
cmp
xor
add
into
sti
sub
pushf
pop
cmpb
into
xchg
or
xor
in
clc
test
aaa
out
int3
fistpl
sarl
stc
scas
call
cmp
lea
dec
cmp
cltd
sbb
sbb
pop
sub
push
outsl
sbb
mov
dec
pop
mov
inc
ss
push
cmp
popf
ljmp
push
xchg
aas
jae
pop
jmp
fstps
sbb
inc
imul
inc
add
inc
xchg
dec
lahf
xor
or
jbe
jae
insl
inc
cmc
dec
xchg
jbe
daa
cmp
pusha
ds
loopne
xchg
mov
push
ret
inc
push
cmpxchg
sub
in
xchg
add
nop
hlt
sbb
adc
lods
jne
jmp
repnz
sbb
fnstsw
xchg
push
ds
push
fwait
mov
mov
pop
scas
std
hlt
jge
and
sub
and
xor
sub
insb
iret
fs
pusha
or
test
mov
je
dec
arpl
cltd
sub
rcl
out
sbb
mov
pop
js
cltd
int
je
inc
icebp
dec
or
jae
jecxz
lea
cwtl
mov
cmp
or
mov
xchg
add
dec
push
inc
aam
xchg
mov
jnp
mov
cld
in
mov
mov
test
cltd
mov
inc
aam
repnz
nop
pop
sub
dec
sub
loop
sti
stos
test
shll
xor
sbb
cltd
test
clc
pusha
jmp
scas
cmc
pushf
data16
push
dec
mov
and
push
mov
inc
dec
rcl
push
adc
push
outsb
add
adc
fdivl
mov
inc
xchg
pusha
push
test
dec
ret
call
mov
jbe
scas
cmpsl
adc
mov
cmp
push
sub
xchg
out
bound
mov
jp
out
push
add
pop
push
sub
or
ss
mov
jne
cli
daa
inc
sub
jl
fidivrs
push
je
dec
psrld
addl
inc
mov
stos
ljmp
mov
xlat
mov
mov
sbb
imulb
cmpsl
popa
jg
jno
and
and
or
hlt
jecxz
mov
aad
sub
out
outsl
pusha
out
paddsw
in
cmp
orb
push
or
das
cltd
mov
mov
add
cmp
stos
inc
dec
jbe
xchg
or
xchg
sahf
cmp
insb
lahf
push
das
mov
pop
pusha
pop
adc
dec
xor
cs
pop
inc
aas
fcoms
test
mov
js
cld
sbb
adc
pusha
add
pop
ret
les
mov
std
js
mov
xchg
adc
jecxz
cmp
nop
aaa
jp
cs
sbb
subb
add
ss
inc
movsb
jg
fdivl
cld
in
cmc
sti
mov
mov
mov
mov
jmp
push
dec
cwtl
scas
pop
std
fisttpll
jl
rorb
aas
cmp
into
sbb
mov
ret
push
mov
mov
push
inc
ljmp
dec
and
outsb
pop
enter
nop
into
sub
test
int
and
xchg
cmc
scas
lock
andb
and
and
aad
cld
xchg
adc
aam
mov
int
and
nop
inc
fdivrl
test
adc
es
mov
fnstsw
add
dec
pusha
pop
pop
or
loop
or
rcl
mov
mov
ret
popf
push
push
unpcklps
movsb
lcall
dec
icebp
inc
cmp
jno
and
add
xlat
stos
cmpsb
insb
out
mov
cld
add
ret
xlat
ficomps
jmp
push
jmp
add
aad
in
or
cli
mov
xchg
and
in
stos
dec
adc
stos
push
je
push
mov
mov
push
imul
or
xchg
or
std
in
push
pop
loope
push
cmp
sbbl
repz
pop
aad
xchg
cltd
pop
addl
and
fidivl
mov
xor
sbb
mov
cmp
mov
and
test
fwait
pushf
in
fs
ljmp
and
push
jp
les
and
mov
lock
iret
outsb
jne
xchg
and
and
movsl
dec
imul
cmp
cmp
dec
or
xlat
stc
hlt
cmpsl
testl
xchg
jg
adc
mov
lret
out
xchg
dec
popa
xchg
pop
mov
shll
push
and
stc
lret
push
jae
rcl
stos
ljmp
loopne
pop
rcr
fidivrl
int
xor
sbb
subps
stc
je
or
repnz
sbb
mov
xchg
aad
cmp
mov
aaa
les
cmp
and
cmpl
push
adc
pop
push
es
lret
movsl
xor
pop
aam
test
cmp
inc
or
jecxz
inc
lods
add
inc
sub
pushf
inc
cmp
out
jl
sbb
test
outsb
mov
push
xor
in
push
ret
adc
mov
mov
add
pop
mov
mov
lods
ret
ret
fwait
aas
jne
nop
aam
je
adc
sahf
sarl
sahf
push
sbb
loop
pop
fidivl
bound
sbb
xchg
out
cmpsl
jmp
movsb
push
scas
js
roll
mov
test
sbb
xor
jb
arpl
push
ret
and
jb
and
and
fdivl
cmp
mov
xor
inc
or
push
in
lea
flds
mov
xchg
mov
jb
push
sti
sahf
dec
idivb
cmp
rcll
nop
mov
dec
xorl
jge
cwtl
jmp
loop
adc
sarl
mov
icebp
inc
sbb
imul
out
adc
cmovle
add
pop
xchg
popa
push
add
loope
xor
cmp
sbb
ret
popa
nop
movsl
jge
jbe
add
cmp
xchg
jg
outsb
test
mov
int3
mov
add
jmp
in
ret
mov
push
fildl
xchg
movsl
xchg
dec
jo
mov
xor
mov
imulb
hlt
mov
sti
xlat
lahf
lahf
sub
call
mov
pop
inc
pop
xchg
stos
loopne
clc
xchg
ljmp
cmpsb
gs
sti
outsb
adc
sub
push
cmp
fcomi
cmp
sbb
cmpsb
lcall
fiaddl
sub
and
out
popf
sti
insb
add
leave
into
cmp
adc
mov
ja
or
aad
xlat
sar
imul
cmp
xchg
jmp
mov
popf
pop
push
xor
rcll
dec
and
add
leave
aad
cld
mov
adc
inc
mov
xchg
or
in
lds
ds
push
fidivl
incl
mov
clc
jmp
or
clc
popl
clc
and
insl
mov
lods
jmp
or
fildl
icebp
sub
mov
cmpsb
jae
mov
sbbb
xor
push
lret
fdivrp
mov
push
xor
cmp
cmp
sbb
push
sbb
pop
mov
jns
mov
cli
jbe
mov
push
mov
call
test
mov
test
jp
rep
popa
mov
mov
stos
and
jl
adc
insb
jb
jl
and
inc
xlat
mov
sbb
push
sahf
out
lret
jno
inc
mov
cmp
mov
sub
xchg
jbe
cmp
jno
call
in
les
mov
mov
cmp
movl
out
into
fisubs
pop
xchg
hlt
ds
jb
scas
cmp
shrl
sbb
jo
adc
sbbb
cmpsl
je
mov
xor
fstp
leave
dec
dec
daa
add
mov
jge
sbb
cmc
mov
xor
and
rolb
sbb
ss
or
inc
adc
jnp
leave
rcrb
lret
dec
mov
pop
enter
leave
pusha
out
cmp
call
js
adc
in
sbb
pusha
adc
sbb
mov
mov
lods
cld
loop
das
lret
rcrb
loop
out
push
push
enter
sbb
and
rcrb
dec
stc
jne
and
adc
lock
push
pop
mov
push
jle
adc
xor
nop
hlt
pop
hlt
adc
shlb
push
dec
shlb
out
xor
mov
lahf
sub
inc
roll
xor
inc
leave
or
xchg
push
in
lds
movsb
fildll
std
inc
enter
pop
pop
xchg
sahf
inc
or
dec
xchg
sbb
dec
fiadds
xchg
jp
insl
sbb
push
fidivrl
jl
or
rol
daa
ret
cmpsl
xchg
cmp
cmp
pop
xor
gs
fidivs
lahf
cmp
lret
fbstp
in
cmp
or
mov
push
std
jle
cltd
mov
dec
shrb
push
scas
dec
sbb
out
popa
or
inc
dec
cmp
or
push
jae
rol
xor
mov
mov
je
ret
ffreep
insb
inc
in
xor
adc
and
push
arpl
add
cmp
sti
pop
shll
out
in
sahf
sbb
outsb
sbb
test
add
es
stos
xchg
jl
fnop
or
push
fistl
data16
lret
pop
cmp
push
or
sbbl
fs
add
pause
push
lcall
addr16
ljmp
xchg
jge
xor
lock
mov
push
int
pop
push
inc
mov
enter
inc
into
mov
inc
out
jbe
mov
cmp
dec
and
cs
jno
dec
lea
ret
and
jb
cmp
jbe
xor
mov
inc
pop
adc
jb
pop
std
jb
xorl
das
or
aas
xchg
xchg
jo
leave
enter
fldenv
outsb
cs
push
repz
xor
fildl
shll
adc
sub
movsl
xor
dec
xor
mov
push
pop
aam
rcrl
or
dec
cltd
aas
stos
es
test
fcoms
or
jmp
rcrb
aaa
ret
jae
fists
mov
mov
cmpsb
ret
xor
pushf
out
cmp
and
fsub
ss
cmp
ja
dec
dec
push
xor
repnz
adc
lahf
add
xor
jbe
mov
movsl
shr
adc
pop
lea
sbb
in
data16
jbe
dec
call
adc
jo
dec
arpl
movsl
mov
loopne
ljmp
dec
imul
mov
or
mov
arpl
lret
sub
mov
fnstenv
xor
mov
inc
sub
push
mov
mov
add
inc
into
leave
cmpsb
test
jo
pop
sub
mov
mov
inc
cltd
inc
cld
bound
sub
add
aad
pop
jae
fistpll
jecxz
mov
pop
loop
mov
sti
daa
cs
xchg
out
lds
or
mov
in
lret
and
popa
sbb
or
fnstcw
cmp
mov
xor
repz
insb
mov
out
xchg
cmpl
dec
push
shrl
fimuls
cmc
movsl
and
mov
insl
mov
test
push
scas
push
cmc
adc
xchg
jbe
orl
shrl
push
mov
sbb
push
int3
dec
test
std
movsl
jmp
mov
mov
out
and
cmpsl
std
dec
jns
mov
pop
push
incb
and
add
imul
test
stos
jne
bound
imul
push
fcomp
outsb
fcmovne
andb
movsb
inc
cmc
add
aaa
xor
loopne
aas
cmovl
lods
fsubl
fidivrs
xchg
outsl
push
orl
aas
notb
xchg
push
sarb
xor
fnsave
mov
or
push
rcr
jae
xchg
xchg
in
add
fwait
bound
or
daa
test
scas
cmp
iret
and
cmc
movsb
xchg
test
std
into
cmpsb
mov
ret
cs
shlb
adc
data16
rcrb
pop
sbb
cli
repnz
test
xor
jecxz
sub
xchg
sub
je
mov
cmpsl
icebp
jae
std
insl
in
push
loop
xchg
mov
adc
mov
int3
push
pop
test
pop
lret
loopne
pop
fisttpll
push
arpl
sti
and
add
pushf
push
xchg
adc
pushf
cmc
mov
mov
sarl
jno
mov
bound
push
scas
insl
push
pop
xchg
shl
sub
addr16
cmp
or
jae
xchg
std
loopne
inc
or
rorb
jmp
cld
mov
mov
lcall
adc
mov
divb
cmc
idivl
add
ds
adc
cmp
fs
sarb
push
mov
xor
insb
push
das
lods
xlat
mov
adc
cmpsl
mov
lret
push
dec
ret
cwtl
stc
lret
cmc
sbb
add
scas
out
mov
and
inc
pop
ret
ret
adc
mov
cmp
aam
sub
and
xchg
push
mov
jb
and
hlt
cwtl
xchg
sbb
dec
jne
sahf
aas
dec
jns
xchg
lock
mov
dec
mov
add
and
or
movsl
adc
sbb
mov
test
cwtl
fwait
pop
out
add
icebp
push
int
xchg
icebp
aad
pushf
or
ret
xor
adc
pop
aaa
into
pop
lret
cmp
rolb
adc
shlb
mov
sarb
mov
incb
outsb
negb
insl
ret
pop
sub
dec
add
fists
jp
push
pop
fdivr
xchg
and
fildl
and
iret
nop
pop
or
mov
cmp
mov
mov
in
xlat
shlb
xchg
mov
stos
clc
jne
imul
std
lret
or
jno,pt
jbe
lock
out
adc
mov
sti
lcall
dec
ljmp
aad
add
sub
xor
inc
sbb
insl
jge
and
or
dec
jle
xor
and
cmp
das
sarb
out
or
cld
fldcw
xor
sub
or
jno
outsl
push
push
dec
stos
dec
test
xor
adc
dec
mov
sub
es
sub
pavgb
leave
cmp
xchg
insl
or
stos
lret
rclb
movsb
push
pop
push
scas
into
cld
mov
popf
push
out
iret
mov
shlb
dec
mov
lret
pop
loopne
push
lods
stc
out
sub
fsubr
stos
and
dec
mov
jae
mov
lret
jo
push
cltd
push
je
pop
jo
push
aaa
jp
loopne
outsb
cmpsb
int3
adc
aas
sbb
pop
mov
sbb
imul
loope
inc
nop
push
inc
fsubrp
mov
cmpsl
test
stc
nop
pop
inc
xor
jnp
sbb
repz
subl
mov
mov
push
js
xor
mov
add
add
jnp
ret
inc
fcoml
in
and
sarb
lds
test
adc
dec
popa
lcall
and
cmc
cs
mov
ret
jno
dec
mov
int3
add
pop
inc
int3
add
mov
sahf
stos
add
subb
imul
das
cmp
movl
adc
adc
dec
test
js
adc
pop
enter
mov
cltd
divl
mov
pop
aad
loop
mov
cmpsl
inc
ret
mov
sti
imul
movsl
test
push
mov
orb
arpl
out
and
jo
push
xchg
cmp
add
cltd
add
sahf
stos
cmpl
add
sbb
pop
mov
ficoml
repz
and
ljmp
outsl
pop
pop
inc
xlat
jae
fdiv
push
ret
mov
fwait
inc
mov
xorl
and
out
sbb
adc
sbb
imul
pop
pop
frstor
push
jae
sub
push
cmp
pop
aam
je
or
sbb
call
mov
pop
mov
mov
movsl
jb,pn
adc
nop
push
cmp
mov
xchg
mov
or
xor
movsb
mov
clc
call
dec
das
divb
in
mov
fwait
jle
sbb
lahf
push
jg
leave
movsb
mov
std
sub
loope
jecxz
mov
push
dec
xlat
push
adc
push
xor
push
ficoms
test
incb
leave
pop
sub
mov
out
fmul
ret
aaa
fistpll
adc
clc
xor
shlb
xchg
mov
inc
insl
sub
sub
pop
arpl
inc
cmp
dec
leave
mov
sarl
outsl
lahf
sub
scas
sub
arpl
cmp
cmp
or
in
inc
dec
pop
les
mov
sub
pop
xor
or
mov
fistpll
xchg
inc
stos
xor
js
out
sbb
sub
dec
push
pusha
sub
dec
das
mov
push
inc
push
fmull
push
cmp
lock
popa
pop
mov
dec
mov
mov
push
idiv
rcrl
stc
push
and
adc
sahf
dec
daa
popa
xlat
sbb
nop
inc
imul
jg
xchg
xor
sbb
movsl
inc
cmc
xor
dec
pusha
and
mov
cmp
jo
lret
adc
inc
jb
mov
inc
push
jle
xchg
mov
cmp
cmp
lcall
dec
fistps
repnz
shll
xchg
cmpsb
popf
lret
fildl
out
fisttpll
out
nop
push
or
popf
xor
rolb
dec
fldcw
aad
bound
and
fadds
pop
mov
idiv
push
dec
hlt
xor
xchg
fisttps
xchg
cmp
mov
andb
push
mov
int3
out
ja
mov
pop
into
mov
or
pop
scas
pop
in
jbe
fmulp
mov
enter
mov
popf
mov
shlb
test
out
inc
and
add
je
mov
int
or
fmuls
xchg
xchg
ljmp
sub
mov
sti
adc
pop
xor
mov
roll
and
gs
adcb
inc
xchg
or
push
lret
cmc
dec
adcl
mov
jnp
add
adc
push
lock
pusha
push
push
push
lcall
jle
sbb
add
js
data16
inc
adc
xorb
fwait
adc
mov
enter
pop
enter
insb
adc
out
rcl
cmpsb
fwait
dec
cwtl
push
xor
pop
fwait
arpl
sub
and
push
sub
repz
insb
adc
sti
in
repz
fidivrl
arpl
inc
leave
shrb
cs
lock
jne
call
adc
sahf
cmp
sbbl
int3
mov
inc
jge
cmp
outsl
movsl
jle
mov
test
sti
fistps
out
mov
jno
pushf
leave
popf
ja
dec
insl
xlat
rcl
bound
aam
sbb
sti
mov
adc
jp
ja
sub
push
lods
jno
dec
mov
jb
les
cmpsb
cmp
add
lret
add
pop
std
in
loopne
notl
xor
nop
ret
or
lods
xor
sbb
and
fs
mov
test
xor
cmc
ret
pop
ljmp
leave
mov
loope
sti
dec
add
mull
pusha
inc
or
cmpsl
mov
mov
loop
imul
xor
mov
cmp
cmp
cmpsb
idivb
lea
and
mov
scas
add
lea
pop
inc
scas
lock
xlat
cmp
lcall
and
popl
push
mov
jg
call
sub
int3
xor
cmp
clc
adc
push
xchg
inc
jle
and
in
aad
mov
or
xchg
mov
addr16
adc
lds
cs
add
roll
add
outsl
sub
fisubrs
and
adc
dec
call
iret
frstor
inc
lds
mov
xlat
call
adc
jnp
iret
test
xor
into
subb
inc
mov
mov
sbb
pop
jmp
add
loopne
loop
jle
ja
xor
push
lods
dec
sahf
bound
cltd
adc
loopne
hlt
xchg
pop
push
pop
push
int
jle
lds
aas
pop
xor
lahf
dec
ficoml
enter
inc
les
movsl
push
cmp
rorb
mov
and
mov
adc
dec
sub
mov
lea
adc
shrl
add
stos
push
jl
xchg
push
jge
dec
mov
push
jnp
ja
inc
adc
in
mov
and
inc
adc
cld
xor
jns
inc
cld
adc
movsb
scas
popa
sub
xor
jne
jo
stos
outsl
fnstsw
dec
data16
or
loope
nop
clc
fcompl
pop
inc
xor
rcr
jg
inc
icebp
andl
sarb
or
xor
enter
in
aad
subb
loope
lds
fcoml
xor
xchg
stos
adc
das
out
out
cmp
mov
push
icebp
xor
cmp
rorb
pop
mov
sahf
int3
daa
repnz
adc
cmovo
dec
addr16
aas
rol
fisttpl
mov
lahf
aas
lods
push
inc
mov
adc
cmpsl
cmp
hlt
ret
pop
jmp
inc
inc
stc
repnz
adc
adc
jle
aas
lret
add
fwait
loope
push
je
mov
popa
jns
test
jg
aad
daa
frstor
outsl
pop
inc
repz
sub
fdivrs
test
or
mov
push
and
in
mov
push
pop
mov
push
mov
push
cs
xchg
cmp
push
jno
loop
pop
mov
stos
lea
cmp
into
push
ja
xchg
cmpsl
adc
lods
fsubrl
mov
sbb
in
fbld
test
mov
out
inc
mov
decb
adc
pop
push
jnp
bound
popf
push
adc
mov
add
cmp
xor
push
pop
test
repnz
gs
add
jo
fistl
ror
test
cli
cmp
cltd
dec
mov
rorl
in
cs
mov
movsl
cwtl
pop
in
dec
inc
pop
pusha
push
fsubl
call
add
pop
sbbl
sub
lret
mov
jmp
dec
repz
cld
adc
lret
dec
call
fsubp
ss
test
pop
mov
xlat
adc
pop
sbb
pushf
repnz
cmp
ffree
xchg
mov
pop
mov
mov
pop
jae
test
test
enter
pop
inc
stos
or
mov
cs
jg
lock
inc
aad
imul
add
pop
test
dec
dec
rorl
adc
scas
mov
mov
gs
inc
loope
pop
movsb
push
int
sbb
ss
int3
imull
movsb
aaa
mov
jp
repz
insb
insl
ss
adc
test
and
call
cltd
or
iret
xchg
shl
shrb
rorl
mov
push
xchg
sbb
movsl
mov
pop
sub
mov
push
inc
stos
xchg
roll
dec
mov
test
rcll
mov
test
mov
test
outsl
test
push
cmp
aam
fisubrl
mov
mov
test
jnp
iret
cmc
pop
push
pop
jge
pushf
aam
aas
mov
push
sbb
adc
js
pop
imul
pop
xorb
pushf
adc
pop
adc
adc
cmp
or
jns
in
mov
and
ficomps
popf
or
repz
adc
shl
pop
ljmp
enter
pop
cmpsb
dec
dec
adc
pop
inc
ret
sbb
lcall
cmp
adc
loopne
xchg
add
and
loope
cmpsl
insb
mov
jns
adc
roll
pop
pop
les
js
pop
cmp
jno
jg
jno
outsl
fisttpll
aad
icebp
xchg
andl
mov
dec
or
mov
add
rorl
push
mov
rolb
mov
xlat
sub
sub
inc
mov
sbb
popf
dec
or
jo
insl
push
shll
in
lcall
sarb
lret
jno
jnp
test
or
pushf
lock
bound
dec
shll
jge
stos
adc
xchg
add
push
xchg
popa
jmp
sar
push
repz
add
lret
rcll
lea
push
or
adc
cmp
fcmovne
sbb
jbe
add
inc
and
xchg
push
fsubl
aas
inc
sbb
imull
or
xor
jne
repnz
dec
mov
sti
push
pop
mov
cs
aaa
dec
idiv
stos
dec
cmp
pushf
cmp
std
adc
pusha
adc
ds
adc
test
cmp
jno
cmp
in
xor
xor
mov
call
xor
adc
mov
push
adc
mov
mov
out
lods
sbb
mov
rolb
pop
idivb
mov
lea
adc
popf
jns
popa
mov
xchg
mov
fstps
ss
xor
push
loop
mov
jg
xlat
and
aam
pop
ret
jb
push
lods
arpl
push
cli
mov
sbb
sbb
out
sub
lcall
ds
loopne
cmp
test
jg
out
jg
inc
cmpsl
fcoms
pop
cmp
iret
sahf
jo
call
pusha
rcrb
decl
ror
cld
cltd
add
bound
sub
lods
in
adc
push
and
cmpb
pop
mov
cmp
mov
dec
popa
setbe
mov
cmp
ljmp
insb
xchg
sahf
out
popf
add
mov
imul
in
fldl
outsl
int3
test
sbb
daa
push
inc
mov
adc
jno
push
movsl
out
dec
xor
rolb
adc
loope
js
or
out
aad
aad
sub
dec
aaa
in
in
scas
fs
ljmp
mov
jp
or
dec
inc
adc
cmp
mov
add
inc
lds
mov
iret
test
mov
adc
jns
xchg
dec
repnz
loop
into
and
lret
and
test
push
xchg
cmp
add
into
inc
les
dec
sub
dec
daa
and
scas
cld
cmp
dec
cmp
cmpsb
sub
jle
mov
pop
pop
ss
xor
in
push
int
rclb
inc
xchg
sbb
pop
in
jae
mov
pop
sbb
sub
add
jmp
jbe
shrb
xchg
pop
aaa
or
sub
mov
pusha
fnstenv
lds
mov
mov
hlt
stos
ds
stc
jo
mov
pop
cmc
insb
push
sub
xor
pop
enter
in
jp
push
bound
xchg
push
push
ror
notb
fwait
popf
loop
aad
lea
add
xlat
les
inc
loopne
mov
mov
push
mov
lret
insl
push
sbb
or
sub
jmp
mov
jmp
cmp
repnz
cmp
dec
sti
cwtl
fisttpll
add
jmp
pop
movsl
fmul
inc
adc
std
pop
popa
flds
push
call
test
idivb
mov
and
inc
inc
cmovne
movsb
cs
sub
ret
dec
cmp
rcl
xchg
add
rolb
mov
jecxz
mov
and
push
mov
movsb
fnstsw
xor
add
xchg
leave
bound
rolb
jo
loopne
scas
aad
mov
or
inc
cltd
add
inc
jb
pop
sub
daa
jmp
sbb
stos
stos
pop
xor
sbb
scas
stos
out
mov
cmp
inc
pop
dec
inc
loope
jo
inc
and
pop
out
dec
pop
push
jge
xchg
adc
aaa
test
addl
mov
mov
inc
rorl
xor
cmp
or
xchg
mov
jp
push
jle
pop
jg
add
leave
daa
pushl
dec
jecxz
or
call
dec
gs
jl
push
addr16
or
mov
cmp
addr16
xor
push
loopne
leave
cmpsl
pop
fcomps
cmp
cmp
notb
mov
jns
call
or
rclb
jmp
movsb
arpl
xor
call
cmc
mov
shll
daa
iret
and
movsl
lods
xorb
jp
rcrl
adc
jb
loopne
add
aas
jl
jno
dec
sbb
mov
nop
je
add
or
push
pop
xor
sbb
mov
mov
inc
out
jb
xchg
inc
cmp
add
stos
movsb
mov
jecxz
orl
jno
nop
and
pushf
xor
push
out
les
lret
dec
cmc
or
jns
push
aas
mov
mov
stc
adc
pop
dec
add
bound
fildll
mov
ljmp
xchg
push
out
sbb
cmpsw
movsb
in
pop
int3
shll
inc
and
pop
mov
push
loopne
jmp
add
mov
hlt
daa
dec
and
mov
dec
pop
xchg
dec
lods
inc
enter
adc
std
jbe
outsl
mov
mov
push
and
sub
cmp
jnp
repz
push
or
aaa
faddl
add
imul
lea
leave
pop
addr16
push
shld
in
neg
ljmp
leave
std
jae
inc
add
push
jb
xor
cmpsl
sub
cwtl
inc
or
mov
aam
in
iret
iret
out
jns
jnp
push
mov
cmp
loopne
xlat
hlt
fisttpl
iret
cmpsb
sarb
ljmp
mov
pop
nop
sti
pop
out
cmc
sbb
in
mov
push
int3
movsb
jl
shrl
mov
jecxz
lea
call
scas
xchg
sub
mov
mov
in
sbbb
xor
mov
aas
outsl
xor
pop
lret
xchg
inc
mov
fcmovbe
inc
jg
test
mov
dec
popf
sbb
aas
mov
inc
call
mov
sbb
sub
shrd
je
cli
cmp
xor
mov
negb
and
testb
or
test
sbb
dec
notrack
mov
mov
xadd
repz
xchg
pop
and
insb
adc
jno
mov
mov
pop
aam
sar
cltd
shr
mov
dec
xlat
lahf
or
psraw
imul
outsb
dec
add
movsl
inc
xchg
sbb
aas
adc
ljmp
xor
shll
iret
cltd
mov
fs
jp
cld
dec
pop
dec
es
add
or
dec
stos
aad
xchg
sub
dec
mov
sarb
push
insl
out
xchg
push
scas
push
fdiv
inc
repz
pop
xor
dec
cmp
movsl
shlb
sar
push
sub
test
pop
sub
mov
mov
mov
stc
fdivs
push
pushf
dec
sub
addr16
add
push
out
inc
mov
inc
stos
les
jno
or
jmp
adc
arpl
outsl
and
in
xor
jns
ss
in
pop
mov
xchg
enter
mov
sub
pop
bound
stc
repz
mov
jbe
clc
pop
pop
mov
or
mov
pop
sub
add
xlat
push
js
pop
push
cmpsb
add
aam
and
jbe
in
mov
mov
sub
pop
fldl
imulb
fadds
outsl
pop
in
pop
adcl
repnz
pop
and
fistl
in
xor
fs
es
stos
xor
or
xor
jne
xor
dec
or
lret
mov
cmpsl
xor
inc
jae
nop
mov
jo
mov
xchg
mov
xchg
mov
lret
jne
jns
push
scas
addr16
push
sub
out
push
mov
leave
dec
testl
inc
mov
movb
pushl
push
xchg
jecxz
xor
sbb
or
sbb
aaa
in
xor
add
jo
jo
fildll
push
mov
lock
ret
and
dec
dec
xchg
mov
inc
mov
in
pop
shlb
test
mov
imul
lahf
mov
pop
ljmp
pop
pop
jl
mov
xchg
push
sub
xchg
add
out
call
int3
cmc
mov
cld
mov
lods
arpl
jecxz
mov
lahf
xchg
fwait
xchg
cld
jne
lock
ret
loop
insb
aam
mov
std
rcl
pop
inc
pop
out
test
sub
stos
jmp
add
sahf
jb
sbb
sbb
jns
mov
aaa
mov
call
pop
ret
xor
stos
push
sbb
int3
fwait
mov
out
inc
adc
push
insb
jbe,pt
data16
mov
mov
xor
pusha
sti
nop
lds
xor
popf
sbb
xchg
jae
bound
subl
fdivp
add
in
les
xor
or
mov
test
sar
cmp
dec
sbb
cmp
call
dec
mov
push
negl
ja
mov
jbe
push
cmpsb
call
push
fmull
dec
pop
mov
loope
push
gs
adc
push
push
fnstcw
and
mov
lcall
pusha
xor
lea
sbb
or
in
push
pop
sahf
mov
and
mov
jg
sbb
in
decl
mov
dec
loope
stos
mov
stos
bts
lcall
jns
inc
sbb
test
inc
push
jb
jg
lds
adc
add
and
mov
dec
mov
pop
add
mov
popf
ja
cmp
and
test
test
mov
push
inc
dec
jns
int3
outsl
adc
fnstcw
or
ljmp
mov
jg
cmpsb
dec
xchg
fcmovb
sbb
ret
or
bound
add
aas
fsubl
cmp
sbb
scas
mov
leave
pop
pop
bound
stc
cld
mov
mov
jl
fcmovbe
dec
push
repnz
mov
jmp
shl
shl
mov
xchg
adc
or
push
test
cmp
scas
int3
dec
outsl
mov
shlb
lods
xchg
rorl
test
push
shrl
popf
pop
test
std
int
cmp
leave
iret
imul
lds
xchg
ljmp
and
xor
testl
cmpsb
inc
jo
or
cmp
iret
pop
sbb
push
cltd
xchg
mov
mov
xor
push
jp
add
xor
pop
xchg
jecxz
xlat
repz
pop
sbb
xchg
mov
insl
push
sub
mov
sub
pand
enter
je
jg
ret
mov
add
rorb
frstor
sub
jo
int
in
push
cmp
test
add
lahf
and
imulb
fstl
inc
push
or
cwtl
push
sub
sbb
pop
test
dec
lahf
inc
popf
in
orl
lea
jecxz
jp
daa
cmc
lods
xchg
or
ljmp
cmpsl
loop
inc
add
aaa
bound
hlt
sbb
mov
jg
mov
ljmp
nop
scas
push
stc
xchg
cwtl
data16
pop
arpl
inc
mov
jne
mov
or
test
das
cmc
xchg
cmp
and
or
pop
or
mov
es
loope
pop
cmp
mov
adc
sub
mov
jp
movsb
or
stc
cmp
int3
cltd
xchg
sti
stos
out
pop
mov
mov
or
and
in
jb
or
rcrl
aad
lds
bound
adc
cmp
shrb
xchg
gs
cmp
ja
in
stos
xchg
xchg
aas
sti
aaa
subb
or
fadds
sbb
push
dec
mov
pop
in
pop
xlat
push
xor
fndisi(8087
adc
out
shlb
cmp
loope
mov
rcrb
xor
loopne
jl
cmp
inc
daa
fsincos
mov
pop
repnz
shlb
int
adc
insb
jnp
pop
icebp
test
int3
sahf
rcrb
push
inc
jg
adc
inc
sahf
jbe
pop
push
andl
pop
arpl
jp
dec
add
sbb
int
adc
jns
xor
mov
in
inc
fmuls
movsl
fnstenv
cmc
jnp
add
pop
cltd
xchg
cmpsb
mov
test
xor
fidivs
xchg
ja
mov
mov
mov
jmp
cld
mov
jb
sahf
mov
cwtl
fnstenv
pushf
les
or
scas
pop
movsb
pop
int3
jp
shr
cmp
jp
int3
mov
lods
adc
inc
mov
iret
arpl
shl
or
xchg
add
mov
cmpsl
aam
jnp
int
jmp
mov
fdivs
jae
inc
sub
mov
and
xor
add
and
fisttpl
mov
pushf
mov
jbe
cli
jnp
test
ret
push
sbb
fisttpl
xchg
mov
aaa
sub
jp
mov
jns
jno
ret
xchg
xor
ficoml
leave
ret
cmpl
mov
loopne
loopne
movsl
sub
dec
jle
test
sub
push
call
add
rclb
cmpsb
jno
pop
push
mov
sub
sub
cld
aas
pop
lret
in
movb
cwtl
js
std
ficoms
addr16
mov
xchg
inc
lahf
out
ja
iret
aaa
aaa
in
jno
sbb
pop
test
mov
push
push
inc
dec
loopne
mov
xchg
pop
jp
dec
mov
stos
adc
clc
cmp
sbb
pusha
xorb
xor
out
fsubrs
ss
cmp
daa
mov
sahf
test
sbb
sub
aas
adc
pop
sub
in
loop
test
leave
ret
mov
xchg
shll
js
mov
pushf
int
xor
pop
imul
push
xor
dec
dec
gs
xor
bound
mov
push
mov
xor
imul
ljmp
sti
push
sbb
or
subps
cmp
jge
inc
jns
dec
imul
loopne
dec
subl
cmpsb
push
shrl
pop
mov
xchg
mov
rcll
movsl
les
pop
cwtl
dec
sbb
jp
jae
shl
mov
jns
clc
pop
push
xchg
shrb
negl
adc
mov
cmpl
cmp
xchg
ss
aad
test
mov
push
clc
mov
addb
stc
add
or
push
popf
xor
into
ret
mov
movsl
scas
ret
addb
rol
push
sub
or
stc
rolb
js
ret
add
inc
pop
pop
and
add
dec
jmp
data16
cmpsl
stos
and
std
mov
xchg
cmpl
scas
arpl
push
push
outsl
mov
addr16
fimuls
sbb
dec
ret
mov
or
mov
mov
jp
int3
int
rorl
leave
lods
ret
sar
dec
mov
pop
mov
jmp
sbb
cmp
insb
mov
cwtl
out
daa
aas
push
sahf
scas
bound
das
cmpsl
test
ret
mov
and
pop
lods
out
cmp
sbb
sbb
xchg
lods
lret
ja
sarb
mov
sbbl
ja
insb
and
jmp
dec
ja
pop
in
int3
test
jg
les
aad
pop
gs
push
and
fidivrs
xorl
fwait
or
pop
sub
inc
shlb
cmp
out
outsl
adc
testl
adc
push
rcl
pop
movsl
out
nop
fnstcw
or
fnclex
leave
dec
dec
push
sbb
xchg
xor
inc
dec
lret
mov
int
dec
les
mov
sbb
ljmp
lcall
ds
mov
mov
xchg
fmuls
mov
cltd
cmpsb
push
or
bound
insl
arpl
imul
sub
pop
mov
jmp
push
jo
adc
nop
mov
pop
dec
jp
mov
push
push
or
or
loop
nop
je
lock
xchg
adc
xchg
inc
cmp
mov
xchg
push
loopne
add
int3
mov
mov
mov
sub
out
dec
int
jmp
push
daa
jb
stos
inc
js
push
mov
cmp
jno
frstor
xchg
sub
je
mov
jmp
adc
test
inc
ret
jg
loop
dec
push
jl
dec
cmp
dec
test
and
push
sub
xchg
and
pop
xchg
inc
sub
frstor
insb
addl
movsb
mov
adc
rorb
xor
dec
ljmp
adc
mov
cmp
pusha
fs
adc
sub
jnp
test
rclb
inc
jle
mov
xlat
dec
sbb
push
mov
outsl
pop
and
std
jns
insl
cld
xorl
stos
in
mov
movsl
mov
call
sub
popf
out
cmpxchg
sbb
fbld
adc
xchg
iret
sbb
mov
int
test
inc
flds
cmpb
mov
out
or
movsb
pop
lcall
sub
fmul
subb
mov
ret
cmc
mov
sbb
pop
mov
dec
xchg
sub
shrl
fsubrl
and
mov
andl
cltd
xor
push
fcoml
jecxz
push
jl
adc
or
pop
and
and
pop
pop
add
pop
pop
mov
mov
shrl
aas
xor
adc
lahf
pop
rorl
lds
sbb
push
enter
inc
add
pop
xor
cmp
push
mov
cmpsl
fprem1
lahf
in
loopne
pop
mov
dec
fs
xchg
adc
mov
ds
push
mov
pop
aaa
into
mov
out
add
fdivrl
push
fstps
shl
xor
sub
int
fmuls
or
aad
mov
outsl
sbb
xchg
mov
std
pusha
sub
lea
gs
and
mov
mov
shrl
orl
lods
popf
push
adc
clc
jbe
or
inc
movd
and
movsb
add
in
std
fdivs
repnz
adc
pushf
mov
jl
mov
mov
ja
cwtl
inc
mov
shlb
and
jp
pop
inc
sti
sbb
hlt
je,pt
outsl
jns
gs
sbb
ret
int3
xchg
ljmp
iret
fistpll
and
push
mov
cmpsl
pop
ret
pop
imul
xor
jae
iret
aam
mov
cli
stos
inc
add
movsb
imul
cmp
inc
cmp
into
test
dec
ss
iret
sub
sub
mov
dec
xor
jb
xchg
xlat
insl
add
sahf
test
out
addr16
insl
movsl
adc
das
add
es
push
cmp
and
insb
jae
sub
aaa
cmc
das
lea
dec
or
inc
nop
mov
iret
jle
xchg
mull
ffree
popa
push
inc
xor
push
ds
ja
push
jb
aas
push
xor
clc
movsl
cmp
jo
mull
cmp
dec
cmpsb
xor
test
lods
aas
cmp
les
movsl
idivl
sbb
jl
add
data16
inc
insb
loope
jns
fadds
das
or
or
mov
and
jno
lea
mov
ljmp
xchg
ret
out
push
insl
sub
push
rcr
inc
pop
cmpsb
repnz
fistpl
arpl
sub
cmp
test
sub
mov
or
dec
icebp
jg
rcll
iret
gs
es
jno
test
movsl
push
mov
popa
push
cld
scas
inc
add
sbb
popa
mov
inc
shlb
push
xor
aad
or
test
lds
inc
push
push
mov
xchg
jge
push
dec
incl
cld
mov
dec
mov
lret
je
repz
into
jns
leave
add
rcl
adc
aaa
clc
inc
test
lock
enter
push
cmp
push
dec
push
pushf
add
pop
std
sbbb
or
clc
cli
iret
fisubs
xchg
fwait
idivl
sahf
adcl
or
imul
ds
ljmp
pop
enter
add
outsl
iret
loopne
popa
pusha
cmc
and
out
daa
arpl
movsl
cmp
pop
popf
enter
sbb
scas
push
lahf
jl
jge
pop
sahf
push
ss
pop
jecxz
jmp
xor
xor
arpl
loope
sbb
or
shlb
inc
dec
sub
int3
cltd
lcall
bound
enter
popa
xor
movsb
mov
std
cmp
push
notb
mov
and
pop
daa
js
xor
and
pop
xorl
or
enter
push
aas
xchg
push
inc
mov
scas
ds
pop
inc
sbb
int
ficompl
insb
xchg
jmp
sub
movsb
out
sub
xchg
jle
sub
mov
jg
insb
rcrb
mov
test
sub
ljmp
inc
jne
cmp
ss
cs
rcl
nop
dec
cs
pop
sahf
mov
rep
leave
pop
mov
xor
pop
mov
dec
imul
stos
or
insb
ds
pop
jle
jl
xchg
scas
shll
lret
xchg
dec
or
xchg
dec
aaa
jle
xlat
inc
fdivs
das
nop
rcll
loop
insb
sahf
and
pop
jo
inc
cld
in
sub
gs
xor
sub
xchg
lahf
fs
pop
fcomps
or
push
add
fs
int
jno
test
lret
jne
pop
imul
aas
in
xor
in
icebp
sti
loope
int
rorl
inc
pop
es
jns
movsb
subl
pop
pop
jge,pt
sub
push
sbb
neg
adc
xchg
jl
int3
dec
xor
adc
add
inc
push
rcll
pop
sub
jbe
mov
cmpb
mov
mov
lret
mov
in
hlt
pop
dec
push
in
pop
pusha
test
mov
jge,pn
out
imul
aam
mov
cld
fiaddl
push
mov
dec
fstl
jne
ficomps
and
cmp
jne
pop
sub
mov
mov
push
out
shrb
das
je
ret
inc
adc
push
xchg
jne
mov
subl
insb
xchg
nop
outsb
sbb
inc
jg
or
xor
inc
popa
sti
mulb
push
addb
aam
adc
dec
test
jo
sub
pusha
xchg
inc
xchg
cmpb
pusha
lret
adc
insb
jl
sub
std
pop
sub
xor
sub
pushf
fcoms
orb
sub
out
jnp
xchg
mov
loopne
pusha
sub
sub
addl
pop
cli
test
and
xchg
mov
xchg
insl
add
fimull
test
jl
mov
dec
mov
enter
aas
cmp
inc
xlat
lret
jae
test
inc
mov
mov
jae
pop
imul
push
stc
cmpsb
in
ds
dec
movl
pop
std
loopne
cs
push
xchg
mov
into
rclb
jno
pushf
mov
push
adc
dec
xchg
xor
sbb
jnp
popl
cmp
je
je
mov
or
mov
lods
cmpsl
outsb
das
inc
dec
jns
loope
cmp
dec
mov
xchg
sti
and
fldl
sub
lahf
dec
fidivs
push
sbb
jmp
xlat
pop
test
or
xor
xor
in
dec
fidivrs
dec
cmpb
insl
push
cmp
lret
push
jb
out
xchg
mov
cwtl
repnz
xchg
mov
mov
ret
inc
je
xor
std
mov
hlt
pop
sbb
jge
sahf
out
fs
aam
bound
fwait
shlb
movsb
jl
jne
sub
movsl
add
cli
jecxz
movl
xchg
rorl
sbb
repz
mov
jne
subb
jge
sub
adc
adc
shlb
insb
pop
jle
mov
call
call
pop
mov
mov
xor
or
scas
das
and
ljmp
dec
cmpsl
push
sbb
fld
pcmpeqb
add
lret
arpl
in
repnz
decb
dec
enter
shll
hlt
xchg
test
jp
and
lret
or
out
fcomps
iret
jp
inc
enter
cmp
lock
add
jp
pop
mov
pusha
or
adc
ja
ret
scas
mov
roll
or
and
sbb
mov
xchg
xor
dec
jl
jo
pop
and
in
add
std
mov
scas
insl
pop
fwait
dec
inc
inc
lock
sub
je
lea
sub
sbb
cltd
mov
repnz
mov
mov
cwtl
cmp
sub
push
add
sub
mov
loop
push
jg
idivb
in
iret
add
push
push
inc
xchg
cmp
jne
rcrl
sub
in
mov
pop
lahf
ficoms
cli
mov
addr16
pusha
adc
push
push
notl
jae
jnp
push
push
mov
add
inc
dec
inc
pop
add
xchg
sbb
push
ss
xchg
xlat
je
ljmp
mov
out
mov
xor
xor
push
mov
sbb
into
outsb
movsl
cmc
and
mov
push
cmpsb
andl
sbb
cmp
xor
mov
dec
movsb
sub
push
and
mov
sbb
addr16
inc
dec
jg
mov
jmp
add
fwait
inc
adc
cmpsb
pop
mov
mov
push
xor
andb
and
fucomp
push
mov
add
stc
inc
sahf
ja
sbb
cmp
aaa
or
cmp
in
xchg
in
ds
lret
jae
insb
imul
mov
inc
popa
cmp
lcall
mov
fisttps
cmc
cltd
mov
das
arpl
adc
sub
movsl
adc
inc
aas
int
nop
push
jecxz
jmp
xchg
mov
push
insb
ja
popf
add
and
jl
pop
bound
add
xchg
into
mov
lock
xor
pop
or
mov
mov
rclb
add
out
push
jo
lea
stos
aad
push
mov
ljmp
jle
out
add
jmp
roll
xchg
int3
dec
pop
add
ret
scas
addr16
sbb
or
out
dec
es
pop
pop
filds
cmpsb
cmp
lods
dec
inc
adc
mov
cmp
nop
repnz
push
ss
fists
sub
pop
pop
sbb
xor
sbb
push
lods
into
int
mov
xorl
test
xchg
mov
jae
xor
enter
enter
sbb
imul
xor
and
push
push
xchg
pop
push
je
pop
pusha
insb
sub
push
mov
adc
test
sbb
test
and
shl
dec
lahf
mov
mov
mov
out
mov
test
push
mov
insl
fs
mov
sbb
jne
icebp
out
inc
dec
test
mov
mov
pop
and
insl
jle
sbb
mov
call
out
arpl
shl
pop
or
xor
cmpsl
mov
jae
movsb
push
test
xchg
cltd
scas
mov
movsl
cmpsl
fucom
cmpsl
pop
adc
lods
pop
call
or
xor
and
into
adc
rorl
xor
fimuls
ret
mov
addb
loopne
sbb
fistpl
xchg
imul
cld
fnsetpm(287
repz
imul
sbb
xor
inc
adc
fs
inc
jb
fidivrs
xchg
fisubrs
lea
stos
decl
popf
mov
add
push
mov
int
mov
mov
pushf
lea
test
das
insb
dec
mov
add
mov
into
lret
mov
movsl
int3
or
data16
les
int
mov
leave
jl
movsl
sub
push
inc
mov
xor
mov
xchg
mov
or
stos
mov
jl
cmpsb
jne
icebp
xor
data16
test
mov
xchg
out
popa
pop
and
popa
into
popa
imul
jl
mov
movsb
sti
fldl
out
aam
out
dec
imul
in
mov
movb
or
in
cli
pop
mov
bound
push
inc
mov
stos
and
clc
xor
lds
test
xlat
sub
out
and
push
js
inc
sub
je
aas
or
ljmp
and
pusha
dec
lcall
adc
jmp
sub
push
mov
rep
fistpl
imul
mov
mov
and
mov
cmp
cwtl
lea
cmp
cld
test
jg
jl
lret
push
fildl
int
jno
sub
das
mov
lahf
mov
or
sub
leave
enter
and
mov
mov
js
add
pusha
outsb
into
sbb
jl
cmp
pusha
push
and
divl
push
in
inc
fwait
out
scas
mov
cmpsb
adc
xchg
shr
adc
popa
or
or
adcb
jecxz
out
push
cmp
mov
popf
dec
testl
jge
repz
push
jge
mov
mov
dec
sbb
dec
in
stos
test
imul
fcomps
xlat
pop
xorb
pop
pop
jle
mov
ficoml
inc
das
push
std
outsl
sbb
adc
add
out
sbb
movsl
test
xlat
jle
out
fcoms
scas
mov
stc
jo
lods
test
jmp
or
adc
out
xor
and
test
outsb
pushf
repz
scas
lret
int3
cmc
testb
es
lods
push
scas
lock
sub
and
pop
cmp
js
in
roll
in
push
lret
xor
pop
stc
push
sub
sbb
loope
aad
sarb
out
adc
inc
xlat
pop
pop
or
push
xor
xchg
subb
fabs
addr16
mov
pop
mov
sbb
push
and
in
imul
jl
xchg
jb
pop
mov
inc
push
outsl
cmp
scas
mov
inc
pop
pop
push
mov
adc
nop
int
jo
add
adc
sets
or
outsl
es
fiadds
ret
xchg
inc
test
jb
cmp
fnsetpm(287
inc
pop
and
negb
sbbb
xor
ret
gs
mov
pushf
jle
js
push
push
or
dec
enter
leave
enter
pushf
adc
cmp
sub
pop
cmpsl
ret
jbe
sub
or
lcall
jne
icebp
push
stos
sub
sar
jg
jae
test
mov
sub
cmp
inc
jmp
or
push
addb
lea
sbb
jb
idiv
clc
inc
or
aam
xchg
shll
cmp
mov
idiv
and
test
jns
imul
xor
out
sbb
mov
fidivrs
mov
icebp
mov
jo
test
cs
rcrb
sub
pop
dec
sub
nop
popf
hlt
and
sbb
addr16
stc
jg
mov
mov
sbb
pop
adc
hlt
fs
pop
repz
push
xchg
xchg
xchg
push
inc
lods
out
out
in
lret
xchg
scas
xor
add
mov
sub
sbbb
jle
cltd
or
adc
into
cmpsb
push
inc
sti
sub
fwait
sub
adc
xchg
cld
pop
xor
adc
jne
shrb
adc
sub
std
enter
jg
cld
popa
repz
sbbl
arpl
les
jne
push
pop
jae
rol
push
jmp
out
pop
add
push
cmp
jno
roll
mov
xchg
push
decl
gs
add
cmp
jle
or
mov
add
movsb
scas
subb
out
fidivrs
clc
lcall
subb
cmpsb
mov
fbstp
vcvtpd2dq
sbb
xchg
insl
jb
or
cmp
out
lods
pop
add
movsl
sub
jge
int3
mov
push
pusha
outsb
mov
inc
xlat
pop
inc
imul
cmp
repnz
cmp
sbb
xchg
mov
fists
cmp
mov
in
imul
inc
and
push
jg
popw
add
or
jecxz
push
adc
add
jg
push
push
out
lds
add
rorl
lcall
dec
push
sub
sub
rorb
and
xor
xchg
dec
jmp
ficompl
test
cmpsb
xchg
mov
push
shl
test
sbb
pop
fnstcw
out
dec
pop
xchg
pop
ss
mov
aad
sub
mov
sbb
bound
mov
fstps
je
add
les
cltd
inc
mov
pushf
add
mov
or
dec
mov
sub
ret
or
sub
and
aad
jmp
jns
stc
xor
testb
addr16
jno
adc
inc
in
cmc
push
pop
inc
dec
out
dec
adc
cmp
shrb
jle
lret
mov
in
data16
cmc
sbb
mov
mov
ret
movsl
mov
mov
jle
xchg
xor
icebp
in
adc
pop
add
inc
pop
inc
pop
lock
inc
insb
insb
subl
stos
jbe
cmp
lods
mov
call
test
int3
and
mov
cs
out
fistps
fcomp
notb
rcrl
ja
loopne
xchg
fs
and
mov
jge
pop
xchg
rol
and
or
add
popa
xor
lahf
js
sbb
lods
push
stc
insb
sti
push
je
dec
adc
imul
inc
xchg
mov
xchg
push
push
ret
xchg
rcr
fsubrs
or
loop
out
or
jge
mov
adc
loope
sbb
js
push
jb
ret
in
push
cltd
addr16
pop
push
lods
pop
cld
and
jae
es
roll
dec
int
decb
xchg
lahf
cmp
shl
cmp
inc
out
adc
inc
cld
lods
mov
mov
pop
iret
shl
cltd
imul
rclb
idiv
xchg
stos
arpl
sbb
jl
mov
mov
aaa
test
xchg
cld
cmc
ficoml
jae
xor
push
loop
pop
out
pusha
push
mov
test
in
jno
sbb
mov
cmc
scas
mov
lock
shlb
in
imul
push
jp
movsb
aas
or
notb
jo
or
movsl
xchg
daa
stos
ljmp
sub
pusha
lahf
cmpsl
andnps
scas
aad
mov
inc
mov
hlt
mov
adc
in
movsl
mov
sti
stos
cli
nop
aas
sbb
fldl
dec
add
stos
jnp
in
sbb
mov
cmp
shll
inc
test
call
push
add
add
pop
and
xchg
add
dec
dec
mov
mov
fs
int
fcompl
fistpl
ds
dec
sbb
add
les
mov
iret
test
sbb
je
push
and
lods
das
ds
push
clc
mov
add
fcmovu
sti
pop
enter
jo
subb
fcomp
test
dec
cmpsl
adc
adc
loope
stc
xchg
pop
and
shll
in
xchg
out
push
sub
sbbb
popa
mov
sub
push
ficoms
jmp
pop
addr16
lcall
daa
sub
inc
fldl
mov
setb
jnp
cmp
inc
add
loopne
out
push
lret
loopne
adc
mov
imul
addr16
add
lret
mov
out
or
orl
nop
mov
sarl
mov
and
in
pop
mov
add
jo
pusha
pop
cmp
movhps
aas
push
rclb
jle
cmpsl
add
out
stc
xchg
fcoms
cld
stos
inc
enter
ljmp
jecxz
in
push
mov
cmpsl
shrl
mov
std
cmpsb
or
mov
arpl
out
sub
mov
lret
shlb
mov
mov
repnz
cmp
or
xchg
sbb
imul
fadd
stc
mov
iret
push
mov
js
mov
aas
adc
cmpsb
adc
inc
fidivl
inc
fsubl
out
loop
out
std
dec
inc
lret
into
sbb
jecxz
scas
leave
adc
inc
test
mov
dec
dec
js
ds
mov
lahf
in
sbb
sub
sahf
insb
mov
loopne
or
jp
roll
cwtl
sbb
xor
xor
lahf
mov
aad
stos
adc
pop
sahf
push
sbb
sub
pop
push
jmp
mov
cmpsl
dec
adc
cmove
inc
gs
ss
hlt
mov
js
js
test
popa
insl
movsl
out
mov
hlt
dec
cmp
xchg
cmpsb
jns
int3
lds
and
arpl
loope
imul
aad
aaa
inc
add
in
xorl
cwtl
cmp
outsb
jne
inc
cmp
mov
inc
xchg
loope
ds
mov
call
mov
mov
xor
jg
push
adc
in
mov
std
test
scas
pop
mov
or
or
fsub
das
test
mov
push
sub
imul
fimull
mov
xchg
mov
xor
dec
movsl
imul
bound
xchg
jecxz
xchg
cwtl
int
imul
scas
jne
push
imul
pop
daa
mov
adc
ret
dec
jno
or
jns
or
sti
xchg
or
leave
sub
scas
lahf
notl
dec
add
sub
test
sub
jp
lahf
lods
in
pop
dec
mov
lret
bound
cmp
push
and
pop
adc
in
mov
ds
arpl
adc
mov
mov
ret
in
jns
push
push
and
pop
shlb
cmp
mov
int
jns
fldl
cmpsb
or
and
outsl
inc
test
dec
cli
lret
pop
das
je
stc
xor
push
sti
incl
stos
inc
enter
or
mov
testb
pop
xchg
adc
inc
imul
jno
insl
stc
lock
jle
add
ret
mov
add
jbe
push
pop
fists
lahf
sbb
push
inc
sub
stos
in
ret
xlat
mov
repz
outsl
xor
sub
subb
fisttpll
mov
mov
call
mov
pop
adc
add
mov
mov
sub
popl
in
push
lret
and
aaa
mov
cmp
ljmp
rorl
push
rcl
repnz
movsb
sarb
and
aaa
fwait
push
mov
pop
fstl
lock
int3
jns
push
test
pop
popf
sub
mov
jns
stos
jns
jb
shlb
mov
ret
rol
adc
pop
cs
mov
daa
scas
sub
xchg
jne
not
xorb
ljmp
je
pop
and
mov
dec
pop
cli
into
pop
jecxz
dec
adc
fadd
and
xchg
jbe
lcall
mov
rcrb
aaa
lea
fs
aam
sub
out
mov
arpl
adc
dec
out
rorb
cmp
jae
dec
push
push
mulpd
data16
mov
jmp
out
jb
popf
decb
and
dec
lret
mov
xchg
out
test
sahf
jnp
test
repz
arpl
dec
xchg
push
mov
jb
jns
jae
mov
xchg
mov
aad
inc
push
and
loop
stc
in
fisubs
call
inc
jno
xor
adc
jmp
enter
cmp
sub
pop
repz
out
jnp
and
into
jmp
dec
mov
sbb
ja
in
mov
mov
aas
jb
pop
loop
xchg
aaa
adc
ljmp
test
rorl
lret
xchg
arpl
popa
push
out
ret
sub
popf
jne
adc
adc
or
arpl
sbb
pusha
mov
pop
xchg
es
sub
popf
inc
adc
push
push
mov
rcll
push
xor
repnz
adc
mov
push
loope
popf
xor
jecxz
inc
xchg
xorb
loopne
ljmp
std
jle,pn
mov
mov
or
sub
sub
in
dec
icebp
aaa
mov
jne
mov
out
adc
adc
cmpsl
cmp
int3
mov
aas
mov
jg
mov
lret
pop
adc
xchg
movsb
sbb
fsubs
fimuls
add
mov
scas
mov
mov
sbb
je
push
shl
adc
fs
xchg
std
cmpb
movsb
cmp
ror
sbb
cmpb
add
les
fldcw
mov
sti
outsl
cli
cmc
test
inc
add
iret
xchg
mov
fwait
negb
mov
movsb
test
inc
mov
leave
mov
dec
add
push
jae
gs
lcall
jae
add
shr
adc
and
xchg
aaa
aam
sub
dec
popf
cmp
rorl
aad
and
mov
sbb
sub
jnp
mov
xorb
cld
jne
mov
mov
orl
out
aad
pop
lcall
rcrl
outsb
inc
hlt
dec
xchg
adc
stos
jl
cli
sub
popa
sub
enter
mov
xchg
sar
rorb
stos
imul
cmp
adc
mov
mov
sub
neg
js
push
pop
cmp
nop
gs
test
repnz
les
adc
cmp
jno
iret
subl
ja
es
pop
ja
jb
int3
das
or
scas
outsb
jge
in
mov
sbb
adc
pop
push
mov
sub
out
paddsw
fcmovnu
xchg
inc
cmp
aas
cmp
rcr
adc
icebp
dec
jo
fbstp
jp
push
das
popf
push
push
jo
push
std
inc
jl
pop
addr16
xchg
popa
pusha
or
xchg
mov
int
add
xchg
jb
mov
add
inc
jne
mov
jle
divl
pop
movsl
stos
pop
es
ret
mov
mov
aad
mov
lea
lahf
insl
xor
je
repnz
aaa
insl
mov
test
sbb
xor
or
cltd
inc
add
je
sub
mov
addr16
sub
jecxz
hlt
dec
sbb
pop
enter
insl
cwtl
pushf
gs
mov
test
cmp
clc
push
in
repnz
test
xchg
insl
out
dec
pop
dec
enter
or
lahf
push
lahf
out
adc
fidivrs
pop
mov
les
pop
mov
jne,pt
fnstenv
cld
adc
cmpb
pop
in
dec
mov
pop
scas
sub
leave
jmp
fisubs
xchg
pop
mov
sub
jmp
into
repz
out
lea
incl
ret
repz
in
dec
mov
and
push
orb
cmp
lea
in
mov
jb
cmc
stc
jle
mov
and
aam
inc
xor
mov
into
dec
or
movsl
pop
int3
arpl
lret
mov
sarb
mov
push
push
jmp
data16
sti
ljmp
push
in
push
xor
inc
mov
pop
jl
out
aaa
data16
dec
fwait
aad
nop
and
mov
test
mov
jae
ljmp
push
inc
test
test
mov
in
cmp
addl
cli
push
xorl
hlt
adc
inc
aam
daa
jne
mov
fwait
in
inc
sbb
out
push
xchg
pop
cmp
into
jl
push
ljmp
and
push
sub
adc
sub
cmp
ss
jle
push
mov
dec
pop
xchg
out
aaa
sub
ja
pop
push
fwait
add
sbb
pop
movsl
popf
xchg
adc
xchg
mov
push
movsb
inc
adc
push
push
fimuls
cmp
inc
mov
adc
adc
mov
jns
sbbb
stc
fcomps
imul
mov
mov
adc
cli
cmp
sub
xor
sarb
mov
fwait
mov
pop
packssdw
cmp
xchg
mov
pop
frstor
mov
add
setl
test
push
test
jg
xor
push
push
jno
loope
xor
mov
rolb
js
subl
pop
aam
out
out
es
lret
and
jo
pop
loopne
sub
enter
jnp
jno
pop
out
jns
xchg
jb
nop
mov
test
pop
enter
jnp
arpl
sbb
imul
push
divb
out
ror
xor
jno
gs
and
add
shll
inc
int
xor
dec
sub
enter
jnp
pop
push
in
sub
pcmpeqb
stc
mov
mov
lret
pop
jno
jae
adc
repz
shr
andl
jne
xor
inc
ljmp
rcll
push
add
fidivrl
iret
inc
test
jmp
addr16
fidivrl
lock
dec
mov
lods
xchg
pop
jecxz
loop
sub
lcall
pop
rolb
popa
mov
flds
popa
jae
cmp
mov
mov
enter
or
add
adc
inc
mov
enter
push
or
data16
add
xor
and
loop
push
xor
inc
lcall
imul
leave
and
mov
sub
fisttpl
clc
adc
mov
sub
xor
mov
push
jecxz
or
mov
icebp
ds
jge
sub
in
js
lods
add
mov
jmp
fcmovbe
push
test
xor
cmp
push
adc
rcl
out
xor
shrl
jne
push
subl
or
dec
mov
mov
or
jne
addl
lahf
push
add
sub
sub
add
aam
imul
mov
nop
inc
add
stc
aaa
fbstp
mov
inc
push
lds
sbb
mov
push
mov
nop
and
neg
ror
mov
mov
mov
movsb
inc
or
pop
aad
int
xorb
jns
shrb
shrl
inc
and
xchg
inc
mov
mov
in
arpl
hlt
iret
int
mov
fwait
adc
ffree
addr16
loope
jne
test
jp
ds
shll
out
and
in
cmp
inc
mov
int3
lods
test
fisubl
fsubrl
adc
pop
ss
fmuls
mov
test
mov
ljmp
jg
push
or
mov
js
sbb
shlb
mov
sub
push
mov
aad
pop
push
loope
xor
popf
loop
add
and
test
sub
repz
jge
adc
and
adc
pop
daa
push
mov
mov
and
pusha
subl
cs
rcrb
dec
cs
jo
pop
sti
daa
lock
push
jno
mov
sbb
hlt
fs
xchg
ljmp
movb
mov
push
das
pop
xor
ret
loopne
out
in
out
adcb
daa
mov
ret
inc
rol
test
repz
lods
xchg
aad
sbb
aam
jae
js
or
rcl
pop
rcr
xchg
xchg
dec
or
addr16
xchg
aas
arpl
sub
jle
inc
cmp
std
jo
mov
xchg
dec
imul
or
pop
mov
testb
stc
add
sahf
loop
popf
orl
jmp
xchg
pop
lock
and
ret
inc
pusha
mov
loop
ret
sub
shrb
inc
popf
fcompl
push
jecxz
push
cmc
aas
sub
hlt
dec
daa
mov
sub
inc
pop
push
sbb
or
xchg
dec
aam
inc
cld
icebp
sbb
in
push
bound
daa
clc
xlat
sbb
outsl
mov
cmp
mov
stc
test
push
mov
popa
scas
mov
sub
jnp
inc
fadd
dec
dec
and
clc
std
or
pop
outsb
mov
mov
sub
cmp
aaa
aas
rcll
inc
in
js
iret
inc
xchg
push
mov
fimull
xlat
pushf
lcall
test
jg
mov
loopne
inc
and
cli
xor
push
add
stos
ror
xor
scas
jae
mov
ficompl
and
pop
sub
inc
repz
pusha
mov
sub
sbb
test
push
dec
stos
aas
push
xchg
lods
imul
push
sahf
in
and
dec
js
push
jmp
push
push
lock
std
add
push
out
jae
pop
fidivl
test
nop
hlt
out
push
addr16
pop
incb
push
mov
frstor
jno
and
sub
test
xor
insb
xchg
scas
xchg
cmpsb
stos
jmp
dec
mov
fstps
push
das
sahf
cltd
add
leave
mov
in
arpl
inc
out
jbe
inc
jg
lcall
xchg
aas
inc
loopne
add
in
ret
mov
jecxz
xor
sar
push
and
cmp
cld
lret
jecxz
repnz
call
sbb
mov
or
or
outsl
dec
inc
sub
popa
hlt
shlb
pop
lret
sbb
addr16
inc
test
inc
movsb
mov
add
and
cmp
int
mov
mov
jbe
icebp
inc
push
dec
jp
rorb
shrb
sbb
inc
jecxz
inc
enter
imulb
mov
faddl
push
outsl
and
and
adc
xor
add
hlt
and
sub
and
clc
push
leave
cmc
jb
scas
mov
cltd
inc
add
and
sahf
icebp
inc
mov
or
cmp
push
fnstcw
pop
xchg
out
cmpsb
das
clc
int3
or
add
push
into
xor
mov
or
test
inc
jns
pop
dec
ret
push
cld
add
lods
push
bound
inc
int
cwtl
cld
jmp
notl
daa
mov
fs
or
mov
sbbl
dec
bound
scas
rorl
ds
dec
push
scas
or
xchg
shll
sti
jb
sub
gs
fisubl
popf
aaa
rol
xlat
ret
scas
scas
call
cmp
mov
enter
jns
adc
mov
jp
adc
jmp
insb
and
sub
push
cli
push
push
jae
popa
mov
or
sbb
mov
addr16
lods
mov
jae
pop
pop
xchg
loopne
popfw
cli
cmp
xor
outsb
bound
push
aaa
xchg
xchg
dec
jbe
cmp
push
pop
cmp
cmc
or
mov
pop
cmpsb
xchg
pop
xchg
pop
sub
jno
mov
mov
mov
sbb
mov
jnp
or
dec
pop
xor
mov
push
mov
fwait
cld
std
xchg
ja
pop
cmp
andb
ja
jbe
cmp
int3
jle
push
cmc
fisubrl
pop
mov
mov
mov
frstor
cwtl
hlt
cmpsb
adc
ljmp
xchg
dec
add
and
cmp
sbb
xor
pusha
test
cmp
iret
aam
call
movsb
in
in
mov
push
leave
mov
adc
mov
and
idivl
jmp
pop
mov
mov
xor
leave
outsb
xor
mov
call
mov
cld
dec
inc
shlb
cmc
sub
push
fyl2x
and
sub
xchg
push
cld
dec
dec
lcall
push
gs
cwtd
jle
and
mov
in
or
ja
mov
popa
ja
add
test
inc
jbe
push
sbb
insb
call
fsubr
mov
addr16
pusha
mov
pop
and
xchg
fiaddl
mov
dec
and
jb
nop
mov
xchg
nop
ret
jns
mov
add
pcmpeqb
outsb
adc
or
sbb
gs
mov
stos
insl
popf
int3
int3
sub
jne
fs
imul
fstps
mov
mov
aad
inc
push
pop
pop
push
sbb
cwtl
loope
stos
loop
sub
jae
xchg
mov
sbb
test
push
in
leave
mov
xchg
bound
loope
mov
imul
sbb
outsb
sbb
pop
mov
or
push
jmp
pop
test
negb
and
jnp
mov
es
ja
sbb
jl
mov
jge
inc
insl
cmp
lret
std
nop
dec
adc
fneni(8087
mov
mov
test
and
jp
dec
cmp
mov
xor
lret
rcll
sbb
xchg
in
push
mov
push
sub
fildll
sub
data16
into
add
ret
xchg
adc
js
mov
sarb
xchg
sbb
jg
jge
call
hlt
jno
sbb
xchg
push
jl
dec
shlb
aaa
xchg
sub
and
inc
je
inc
or
push
mov
jle
jnp
fsubr
movsb
std
jns
pusha
mov
and
jg
and
scas
popa
les
inc
mov
jecxz
movsl
lock
xor
sbb
mov
mov
push
aad
xor
inc
xor
mov
out
cwtl
rcll
es
mov
dec
xchg
inc
or
pop
ds
jp
mov
ds
lods
xchg
jnp
xchg
jns
js
cwtl
pushf
call
sub
xor
call
outsl
lahf
sbb
jg
dec
mov
inc
mov
ja
rcll
ja
or
cmpsb
insl
push
imul
mov
sub
mov
outsl
or
divb
xor
jl
test
xchg
enter
dec
adc
pop
popf
aam
xchg
cltd
popa
cmp
dec
push
xor
sbb
jp
and
and
adc
push
add
mov
xchg
and
in
sbb
dec
sbb
popa
aad
mov
scas
mov
dec
cmp
int3
stc
sbb
add
in
iret
repnz
outsl
stos
cli
sarb
lods
aad
jmp
test
mov
leave
rcrb
stc
and
enter
pop
lret
mov
outsl
pusha
leave
adc
push
xor
sub
std
mov
cmpsl
rcrl
rol
enter
clc
lcall
iret
xor
mov
and
into
mov
xor
insl
mov
lret
and
xorl
push
xchg
pusha
hlt
mov
adc
je
adc
add
lret
popa
mov
enter
xor
fisttpll
sub
push
push
xchg
mov
mov
sbb
shlb
sub
loope
mov
pop
out
loop
dec
ficompl
inc
daa
gs
jmp
cwtl
add
les
aad
xor
scas
sub
and
pusha
push
pop
jno
jg
xchg
mov
nop
xor
enter
dec
lcall
mov
in
cwtl
pop
adc
pop
push
into
pusha
fdivl
cli
ret
pop
mov
pop
sub
mov
mov
sub
sbb
ss
pop
dec
cmp
push
mov
stos
jl
adc
inc
pop
dec
fimull
hlt
movsb
dec
ffreep
sub
cmpsl
pop
stc
mov
or
rcr
lcall
mov
jmp
fimull
mov
push
cmp
mov
xchg
je
jle
in
insl
lea
push
lds
lods
push
pop
insl
sub
lret
mov
jno
sub
pop
cwtl
dec
adc
addl
les
lock
sbb
nop
or
das
sub
push
push
xchg
pushf
push
cld
popf
cli
sub
jns
lahf
mov
mov
push
cltd
jg
sub
flds
repz
jb
test
lret
mov
xchg
cld
mov
bound
dec
sbb
sbb
movsb
jge
daa
ja
fldenv
add
cmp
dec
dec
mov
inc
adc
pop
mov
aaa
cmp
mov
cmp
aam
sbb
mov
sub
pop
sub
inc
adc
sbb
cli
stos
out
shlb
xor
mov
add
clc
cli
push
xor
xchg
adc
int
cmp
cmp
test
dec
js
push
inc
movsl
push
adc
dec
aad
push
sub
std
insl
into
mov
dec
sub
jmp
movsb
out
push
sbb
cmp
subl
mov
fimuls
push
adc
aam
fbstp
jns
mov
jmp
mov
addr16
inc
xchg
arpl
add
rorb
dec
test
push
mov
shll
outsl
popa
mov
pop
cmpsl
push
push
inc
aad
jns
cli
xchg
adc
repz
mov
mov
add
inc
push
and
dec
mov
nop
scas
push
repz
push
loope
pop
test
pop
pop
shl
icebp
mov
push
es
cs
jg
sbb
add
dec
cmp
adc
cmp
mov
push
leave
subb
cmpsl
or
sbb
les
cmc
pushf
xchg
in
lods
test
clc
in
xor
mov
fbld
sbb
cld
jl
and
dec
popa
nop
xchg
or
xlat
dec
jmp
rclb
rcrb
int
push
adc
inc
sbb
sarb
movsl
and
jg
xor
insb
cmp
dec
lods
arpl
mov
cmp
lds
ja
jge
mov
popf
jmp
xchg
jae
les
cmc
pop
pop
sub
push
cwtl
xor
in
pushf
les
dec
lret
cmpb
pop
xchg
push
mov
jg
pop
gs
roll
leave
aad
lret
stos
and
sbbb
ja
inc
movsb
or
push
adc
jb
ds
or
dec
sbb
or
push
pop
addr16
loopne
cmp
jg
pop
xor
push
pop
sub
daa
and
rcrl
stos
rcrb
push
jb
incb
cmp
sbb
lcall
jb
lret
xor
mov
sub
dec
mov
pop
sub
es
ss
sbb
es
rcrb
testl
loopne
jae
jns
sub
stos
cmpsl
push
dec
pop
jb
push
adc
push
push
scas
push
jae
mov
xorb
dec
rcrb
or
push
filds
js
movsb
jmp
push
popa
mov
mov
clc
jg
adc
mov
xor
or
cs
sub
and
in
stos
cs
pushf
push
ret
jns
into
and
pushl
popf
adc
sub
lea
stos
adc
aaa
push
adc
movd
sbb
into
std
out
add
orl
jbe
pop
aas
xor
scas
or
push
add
push
dec
outsb
push
xchg
and
sbbb
sub
loopne
ds
leave
fisttpll
fiaddl
ljmp
sbb
xchg
cmp
pop
cmpb
int3
fisubrl
adc
jg
loope
push
cld
dec
mov
ljmp
push
mov
stc
push
and
arpl
cmpsb
jge
add
push
daa
movl
ss
sar
inc
inc
out
popa
sub
push
sub
movsl
pop
or
fisubs
cmp
stos
out
sbb
cmpsb
insb
je
or
aam
in
lea
inc
nop
cmp
test
clc
insb
nop
shlb
inc
cltd
andl
dec
insl
adc
call
bound
dec
pop
inc
mov
pop
jo
cwtl
divb
xchg
lahf
jp
add
sarl
cmp
jno
test
mov
mov
outsl
mov
add
fcmovnbe
into
mov
out
push
ret
std
outsb
or
mov
int3
sar
mov
loopne
imul
mov
jb
out
mov
or
ja
je
add
pop
int
dec
xchg
xchg
pop
lret
xor
mov
outsl
mov
gs
insl
cmp
fdivl
xchg
movsb
pop
aas
dec
sahf
scas
sub
in
inc
mov
sub
cmpsb
fists
pop
push
cmp
lcall
jle
pop
push
pushf
mov
jnp
add
js
fidivl
adcb
push
fnstenv
loope
gs
lds
movsl
popa
pop
jmp
ljmp
jecxz
test
cmp
lahf
and
rcll
dec
std
adc
push
jle
loope
dec
mov
inc
daa
inc
cmc
mov
jecxz
and
inc
mov
jae
pop
sbb
cwtl
or
fldcw
mov
add
lock
mov
sahf
or
jp
aas
and
call
inc
xchg
fs
xchg
subl
dec
inc
inc
or
pop
xchg
inc
lret
out
xor
je
mov
mov
jecxz
lea
dec
fcmovu
je
outsb
xorb
cmp
outsb
mov
pop
sub
mov
fs
sbb
or
cmpsl
int
hlt
flds
jge
repnz
cld
cmp
stos
xchg
cmp
mov
dec
fcmovne
or
jbe
sbb
mov
xchg
add
ljmp
sti
shrb
cmp
scas
xchg
clc
dec
aam
push
jb
ret
cwtl
mov
out
stos
rcrl
sbb
and
adc
sbb
das
int
fwait
or
ja
xor
fdivl
add
mov
add
mov
and
mov
jmp
daa
inc
insb
popa
cmp
xor
mov
orb
inc
jno
pop
sub
gs
aas
leave
add
clc
jmp
or
scas
lret
or
lds
cmp
or
xchg
aas
shlb
stc
andl
hlt
sbb
mov
fidivs
sub
loopne
and
mov
push
divl
std
and
add
lods
inc
jne
mov
or
pop
stos
xchg
iret
mov
clc
mov
xchg
inc
fcoml
dec
les
push
int
lods
push
push
mov
pop
dec
sub
gs
pop
xchg
jecxz
std
nop
lods
push
test
nop
lods
lret
dec
mov
std
jnp
dec
mov
xor
into
pushf
mov
adc
lret
dec
push
call
push
xchg
popl
lods
jg
mov
dec
rclb
inc
sbb
push
sbb
mov
cmp
fwait
es
bound
sbb
push
mov
test
pop
mov
mov
fidivs
or
arpl
add
lds
test
shll
adc
xchg
movsl
fmull
pop
insb
mov
inc
inc
bnd
add
lahf
jo
les
cmc
aaa
sbb
mov
cmpb
xor
add
push
aam
adc
or
pop
cmpl
cmp
ret
cmp
cmp
inc
out
dec
sub
cmc
es
in
cmp
loop
and
cmc
mov
in
jb
jl
stos
lret
lods
mov
push
sbb
pop
push
repz
lods
lret
mov
rcrl
in
pop
cmp
xor
test
jmp
popa
mov
xor
xor
cmc
and
pop
gs
pop
mov
mov
ljmp
sti
sarl
jmp
int3
into
sahf
out
repnz
popf
mov
and
dec
sbb
out
cmovbe
fbstp
fistpl
leave
fstl
sbb
outsb
gs
mov
hlt
arpl
rep
mov
mov
cmpl
sbb
loop
jp
leave
inc
and
mov
cmp
fisubrs
or
nop
pop
pushf
mov
dec
movsb
das
cltd
sbb
pushf
mov
fmul
add
mov
lret
ret
sbb
dec
call
stos
and
or
jae
mov
xor
add
lds
or
stos
mov
insl
repnz
jno
lods
dec
mov
add
fcompl
dec
mov
jae
add
cli
jno
adc
fwait
test
fstpl
mov
xor
or
fyl2xp1
jg
pusha
mov
inc
pop
outsb
sub
cmc
sti
mov
mov
or
sbb
stos
gs
mov
dec
jo
mov
cli
jb
dec
fwait
sti
mov
movsl
mov
loop
jp
xor
lods
sub
imul
sub
mov
xor
incb
pop
jl
lods
pop
cmp
fwait
xor
xorb
mov
iret
and
stc
jbe
outsl
xchg
jmp
mov
xchg
sub
dec
mov
lods
adc
jecxz
mov
mov
cltd
mov
scas
push
lahf
iret
or
or
adc
adc
mov
aad
jne
cmpb
test
clc
outsb
imul
pop
mov
cmpsb
pop
xchg
ret
mov
movsl
and
push
mov
sbb
jno
inc
dec
gs
adc
stc
adc
sbb
imul
cmp
mov
mov
push
call
mov
xor
pop
xchg
pop
push
lds
mov
rcrb
testb
add
mov
out
cltd
or
sub
out
pop
pop
dec
and
popf
cmpsl
jl
push
daa
bound
cmovp
add
sbb
int
lock
push
xchg
adc
xchg
adcl
out
sbb
cmc
mov
stos
imul
lods
pop
scas
adc
jb
cltd
mov
fwait
testb
mov
sbb
into
ret
das
popa
lods
fstl
loope
in
lds
clc
loopne
lahf
fdivs
pop
xchg
pop
pop
jno
lods
xchg
xchg
dec
js
cwtl
jb
and
aam
aad
push
jae
mov
loop
adc
test
ja
js
je
je
dec
shlb
dec
aam
and
xchg
cmp
pop
loope
inc
sub
lcall
mov
out
es
aas
adc
adc
ror
or
int
xorl
loope
inc
mov
shll
stc
lock
iret
jmp
or
mov
das
arpl
movsb
mov
dec
cli
add
test
jecxz
fcmovne
and
jns
xor
push
inc
cmp
dec
mov
xor
mov
ss
lea
cmp
inc
loope
addr16
jl
jle
jns
enter
adcl
lds
jae
mov
pop
fildll
ljmp
pushl
mov
pop
daa
aam
fwait
js
cmc
pushf
mov
push
cmp
in
xchg
nop
jns
sbb
leave
daa
in
cwtl
insb
inc
in
mov
dec
shrb
pushf
dec
std
imul
xchg
fwait
sti
lret
push
imul
or
arpl
or
cmp
inc
lds
clc
sub
push
or
jmp
jle
jp
jp
lods
jnp
adc
lret
jno
sub
dec
cmp
mov
dec
push
popa
dec
ja
lret
aaa
mov
cmpsl
data16
add
js
stos
adc
cmp
stc
xor
mov
and
icebp
pop
nop
mov
mov
aad
push
or
pop
jecxz
fildl
inc
outsl
mov
xchg
mov
push
mov
jnp
pop
inc
xchg
inc
call
fcmovnbe
push
call
cmp
rorl
adc
hlt
mov
mov
das
inc
mov
xchg
pop
mov
pop
nop
mov
fwait
cmc
mov
bound
es
pop
adcl
dec
sub
push
loopne
xchg
cmpsb
add
test
push
repz
sti
cwtl
sbb
call
scas
mov
out
push
rcrl
mov
add
fwait
testb
loope
mov
movsb
mov
adc
sub
and
stc
outsb
dec
push
push
cmp
cmp
adc
test
add
mov
icebp
js
ret
cmpsb
adc
sbbb
andb
stc
pop
insl
loop
stc
or
fdiv
mov
ja
and
cmp
gs
jno
cmpsl
repz
loope
movsb
mov
push
lods
sahf
mov
inc
mov
out
movsb
addr16
movsb
je
sbb
sub
jns
mov
arpl
dec
test
iret
out
sub
pop
mov
xor
inc
cwtl
shlb
fstpl
je
enter
sbb
out
sahf
jle
xbegin
cmp
dec
push
arpl
xor
fldt
popf
mov
add
cmp
mov
mov
mov
dec
mov
jl
xor
add
inc
pop
inc
in
xor
out
leave
fwait
xchg
push
mov
xor
xchg
mov
movsl
mov
aam
sar
mov
push
enter
xchg
push
rcl
push
sti
lcall
push
into
xchg
mov
mov
lahf
cli
mov
out
clc
les
fneni(8087
stos
jg
xlat
pop
rcrl
push
dec
mov
jmp
mov
filds
fadds
pop
repz
lods
xor
pop
xchg
xchg
push
mulb
popf
fidivrl
push
mov
pop
sub
jns
mov
jnp
or
pop
cmpsb
ret
sbb
and
xor
inc
dec
sub
fidivrs
sbb
inc
xor
push
decl
nopl
cltd
loop
loop
xor
xchg
lea
fcompl
mov
das
loope
jl
push
shrb
daa
pop
push
out
jmp
lods
js
mov
lea
pop
lea
loope
push
cmp
dec
dec
jge
shrl
add
jmp
pushf
add
fwait
mov
lea
aam
sub
adc
bswap
or
in
ret
scas
loopne
out
lods
mov
add
jecxz
filds
mov
push
pushf
ret
xchg
lret
daa
jne
jb
fistpll
xchg
pop
xchg
rcl
sbb
pushf
gs
sbb
mov
inc
pop
lret
sub
aam
aaa
cmpsb
xchg
popf
xchg
pop
or
int3
push
jbe
lahf
pop
mov
imul
pop
inc
mov
cmp
fstp
cmp
subb
jae
mov
xor
push
pop
cli
shlb
movsb
imul
sbb
dec
sub
loop
inc
cmpsb
xchg
lcall
jb
adc
jnp
ret
mov
inc
adc
inc
mov
xchg
cmp
cmpsb
jne
movsl
outsl
fidivrl
enter
pop
pusha
xor
into
cltd
xor
xchg
jle
mov
icebp
mov
cmc
icebp
mov
or
fsubs
cmc
pop
pop
test
inc
bound
ss
pop
mov
mov
enter
mov
and
sbb
repz
jae
cld
jge
dec
mov
daa
push
pop
out
inc
mov
and
cmp
or
xchg
popa
in
cmpsb
cmpsl
lret
push
jo
pop
movsb
sub
lds
loopne
xor
enter
push
mov
cltd
orl
mov
imul
ficompl
sbbl
add
clc
test
xor
jo
inc
rolb
xor
pusha
leave
dec
xchg
lret
adc
xchg
stos
iret
mov
mov
push
xor
adc
jp
push
sbb
bound
cmpsb
lock
test
adc
and
scas
sbb
enter
or
daa
and
xor
xchg
pushf
xor
inc
mov
push
push
mov
inc
fst
in
sbb
fnstenv
jmp
sbb
shlb
add
xchg
pop
ljmp
sbb
fildll
add
enter
sbb
push
lahf
sbb
pushf
push
stc
pop
dec
and
cs
push
cs
add
mov
inc
mov
mov
sbb
pop
fisubl
jl
movsl
faddl
lcall
dec
push
and
js
aad
sub
sbb
mov
stos
fs
jg
pop
sub
pusha
cmp
stc
xchg
div
inc
inc
movsl
add
pop
push
lret
add
sbbb
push
pop
mov
decl
ss
fcmovnu
mov
inc
xor
dec
pop
pop
sub
vmovddup
cmpsb
mov
sahf
cmpsb
xchg
mov
call
test
adc
push
pop
aad
mov
xchg
pop
adc
jecxz
out
ss
aaa
test
outsb
rol
and
mov
outsb
lret
push
pusha
jns
sub
mov
mov
dec
incl
movsl
sbb
inc
add
fistps
sti
popf
adcl
hlt
lods
add
les
jno
fs
enter
in
inc
adc
or
dec
cmp
push
pop
mov
mov
mov
cwtl
push
std
push
lds
push
mov
pop
sub
rorb
mov
xchg
mov
stos
jo
in
push
andb
mov
sub
sub
and
xor
cmpsb
mov
pop
int3
pop
add
pusha
pop
push
out
leave
lds
fdivrs
subl
lea
sub
mov
or
sahf
and
xchg
inc
das
sub
xchg
fisubs
adc
mov
stos
stos
mov
cmp
es
pushf
cwtl
inc
jne
inc
andb
movsb
cli
push
in
popf
mov
adcl
out
or
arpl
pushf
icebp
add
repz
push
mov
xorb
aam
aaa
and
int3
xchg
test
mov
in
ds
cmpb
fs
inc
mov
push
sub
adcl
lcall
push
mov
xor
jb
scas
xchg
lock
mov
lcall
mov
sub
insb
mov
mov
aad
int
cmpsl
push
xchg
dec
add
shll
dec
push
dec
scas
je
stos
call
subl
ss
out
mov
mov
in
xor
jns
inc
jbe
imul
ffree
or
clc
jmp
xchg
aas
rolb
in
jg
leave
or
fs
push
sub
or
xor
or
adc
sub
xor
jne
shll
icebp
call
push
sahf
xor
es
or
pop
das
sub
dec
push
mov
andl
das
or
fstpl
cld
jle
call
in
mov
xchg
clc
sub
push
add
stos
xor
popf
mov
sti
adc
adc
add
adc
push
push
pop
gs
lock
mov
jb
inc
gs
mov
repnz
addr16
into
aam
and
jns
mov
leave
xlat
ret
divl
jo
add
cltd
mov
imul
lods
testb
leave
adc
outsb
xchg
insb
fmuls
sbb
xor
and
add
js
add
mov
dec
sbb
xor
push
sbb
lahf
cs
mov
mov
fiaddl
xchg
adc
dec
cwtl
xor
test
push
rorb
loope
dec
mov
rcr
movsl
scas
mov
xchg
invd
lret
sbb
xor
ja
dec
ss
subl
adc
inc
mov
scas
filds
mov
repnz
sbb
jo
es
sbb
sub
mov
in
mov
adc
in
daa
int3
inc
push
adc
bound
std
insl
push
data16
iret
dec
or
fwait
rep
push
mov
inc
stos
lret
cmp
or
dec
mov
dec
mov
movzwl
xchg
stc
pop
mov
decb
or
int3
rcrb
lahf
sub
adc
jg
decb
fisubs
pop
push
inc
lcall
jge
jmp
aas
gs
pop
shr
lcall
sub
inc
mov
push
mov
shlb
cmp
call
lock
pushf
jns
mov
in
sti
sbb
fildl
fimull
jmp
and
fcom
mov
repnz
mov
data16
cmp
jno
xchg
jg
sbb
pop
mov
jnp
out
dec
ret
mov
cwtl
test
push
mov
rcll
or
stos
pop
arpl
lcall
push
mov
mov
jo
insl
nop
jl
cwtl
out
mov
fst
leave
orl
cmp
jg
mov
jmp
mov
pop
es
sbb
sub
mov
mov
add
jmp
fs
out
or
stos
xor
leave
sbb
insl
fisttpl
xor
pop
dec
pop
out
cmp
out
or
out
rolb
movsl
in
pusha
notb
mov
stos
scas
xchg
xchg
sbb
and
das
pop
adc
sbb
xchg
repnz
frstor
jnp
bound
xchg
das
out
inc
mov
xor
mov
mov
into
pop
mov
mov
notb
xor
push
lods
ljmp
mov
push
outsb
push
fs
adc
xor
aas
gs
bound
pop
pop
inc
cmpxchg
negb
insb
and
mov
movsb
sbb
dec
xchg
insb
dec
push
inc
inc
jecxz
movsl
xchg
push
inc
fdivr
frstor
mov
lods
xchg
pop
fimuls
les
cmp
in
push
push
xor
jecxz
xsave
movsl
mov
mov
jo
fbld
out
nop
xlat
mov
jle
dec
test
cmp
or
dec
push
enter
pop
and
mov
xor
add
ljmp
flds
cs
jmp
or
lret
int3
clc
shll
push
xchg
lods
in
pop
inc
add
andb
sbb
pusha
xor
jg
mov
xor
pop
jo
cmp
jle
xor
sbb
dec
sub
jb
sahf
push
mov
aas
iret
gs
decb
cmp
movsl
aaa
xor
jns
rolb
sub
xchg
jb
sub
fwait
rolb
popf
and
test
in
outsl
sti
into
sub
xchg
addr16
sarl
dec
hlt
pop
add
and
jp
mov
inc
sbb
fsubrs
adc
daa
mov
shrl
arpl
jns
fldenv
sbb
pcmpeqd
mov
push
popa
lret
scas
int3
inc
in
les
pop
pop
cmp
pop
dec
xor
mov
xchg
fisttpll
int
mov
mov
jl
push
cmpsl
aad
adc
or
imul
int3
cs
mov
fidivs
nop
cmp
in
jmp
mov
call
cmc
fidivl
lods
testb
inc
inc
inc
aaa
push
fidivl
add
jne
jp
in
lds
in
cmp
das
fistps
rcrb
xchg
scas
fisubrs
adc
jle
shrb
or
pop
mov
push
adc
sbb
fdivrp
dec
addb
pop
out
test
cltd
jnp
sub
stos
mov
sbb
cmc
daa
loope
adc
imul
xchg
fdivl
mov
mov
pusha
mov
mov
es
notl
pusha
pop
cmp
setp
mov
stc
jb
movsb
lods
and
or
xor
scas
push
movsb
lcall
jnp
jecxz
dec
sbb
push
push
repz
fsubrl
aaa
loope
clc
ja
popf
xor
aad
test
adc
fistpl
fsubl
cwtl
stc
sbb
xor
insb
loopne
roll
xchg
sahf
pop
sbb
ret
sbb
add
aad
stos
cs
not
lahf
xchg
jp
xchg
insl
mov
pop
pop
xor
incl
mov
cmc
call
pop
sub
jnp
adc
jle
outsb
dec
jecxz
jmp
xor
loope
insl
insl
stc
lret
shrl
shl
hlt
test
hlt
call
movsb
sarb
aaa
int3
mov
xor
push
outsl
dec
jmp
scas
shll
scas
mov
sbb
adc
inc
xchg
es
mov
or
xor
lret
jge
pop
cli
je
lahf
push
push
pushf
pop
dec
add
jae
or
sbb
popf
inc
data16
fsubs
mov
sub
cmp
lcall
imul
cmp
cld
movl
xchg
scas
push
inc
pop
mov
jle
adc
ret
mov
hlt
mov
cmp
dec
jl
in
xchg
pop
inc
test
pop
gs
pushf
push
jmp
xlat
mov
rcl
mov
call
into
dec
outsl
or
sbb
jmp
adc
clc
mov
lds
xchg
sbb
lods
out
jnp
ret
push
mov
fildl
lds
mov
or
movsb
int
pushf
cmp
mov
fdivl
das
mov
dec
scas
cmp
inc
icebp
mov
sub
ja
inc
pop
rol
push
inc
cli
addr16
mov
pop
add
xchg
ret
jbe
test
ss
movsb
push
fld
insl
sahf
popf
cli
lods
dec
sbb
pusha
test
mov
fbstp
mov
and
aaa
in
xchg
cmp
lds
ss
sub
lret
pushf
arpl
fnsave
and
fidivrs
lea
cmp
imul
xchg
popf
push
jnp
shl
enter
cmp
lods
push
orb
sbb
push
adc
mov
imul
repnz
imul
sarb
push
inc
sbb
aaa
std
sbb
rcrl
divl
xor
pusha
out
jl
in
data16
fs
add
dec
or
sub
and
inc
rcl
fiadds
mov
sub
mov
push
in
xlat
sub
xchg
jge
push
out
arpl
lods
sti
test
jae
mov
dec
mov
dec
sbb
popa
or
fdivl
aas
mov
and
clc
call
std
lods
enter
mov
ret
mov
jns
movsl
xor
je
notb
push
cs
adc
xor
sbb
stc
in
mov
jae
mov
leave
imul
daa
outsl
aas
stc
inc
xchg
mov
data16
pop
inc
dec
js
insl
jo
mov
pop
scas
add
rcrl
xchg
mov
nop
ss
and
or
pop
je
xchg
data16
sarl
js
fimuls
dec
loopne
dec
adc
ljmp
mov
out
outsb
sti
repz
sbb
imul
sti
mulb
and
xchg
xchg
adc
mov
aad
lret
xchg
cmpsl
scas
jbe
xchg
imull
sub
loop
and
lcall
sar
shlb
addl
aad
enter
dec
sarl
out
pop
mov
leave
mov
adc
shrl
insb
addr16
jo
xchg
test
je
and
xor
adc
pusha
push
xlat
ret
cli
outsl
sub
adc
sub
je
cmp
xor
push
inc
inc
push
addr16
mov
mov
in
pop
push
cmp
mov
mov
pop
sbb
push
push
pop
lcall
sbb
push
sbb
or
pop
or
je
cmp
stc
repnz
mov
imul
popfw
outsb
lock
pushw
fcmovb
aaa
mov
mov
xchg
adc
in
mov
pop
sbb
dec
push
or
outsl
mov
xor
and
push
xor
cmp
adc
jne
inc
push
or
jb
into
adc
pusha
imul
or
lahf
lock
addr16
sbbb
insb
mov
cld
ret
mov
push
int3
or
imul
add
cmp
sbb
cli
lds
inc
les
fsubl
mov
in
repz
xchg
push
loope
aaa
bound
lahf
out
sub
or
pop
decl
outsb
ret
lcall
loope
loop
cwtl
push
sahf
xlat
insl
out
inc
out
fwait
jp
sti
pushf
inc
orl
or
pop
xchg
push
jo
push
aaa
dec
fimull
outsl
inc
lcall
icebp
mov
or
jl
inc
ret
outsl
aad
ja
xlat
rcrl
in
mov
ud0
jge
or
fwait
cmpsl
push
out
test
out
add
in
insl
mov
inc
jbe
and
mov
movsb
pop
std
jge
xchg
movsl
pushf
sbb
pusha
xchg
in
and
fimull
leave
dec
out
mov
jbe
imul
sub
mov
lret
fdivs
push
gs
lods
add
xor
gs
mov
je
mov
in
jge
xchg
outsb
pop
std
pop
test
inc
loope
subb
adc
mov
mov
enter
inc
and
sub
fcom
sahf
sub
mov
lods
sub
push
fmull
pop
fcom
mov
mov
mov
push
push
inc
subb
pop
fwait
out
cmp
les
mov
xchg
and
cmp
jbe
sbbb
sarl
push
push
rclb
insl
cmp
mov
aam
jecxz
test
mov
cwtl
jnp
sbb
pop
std
add
jp
lods
mov
lods
cmc
inc
add
in
fimull
daa
pop
dec
xor
out
inc
push
dec
xchg
pop
mov
and
iret
jno
inc
imul
mov
test
and
jns
lods
xlat
test
in
daa
jbe
notb
or
sbb
or
cmpsl
jecxz
lods
in
and
mov
push
fs
inc
mov
add
inc
mov
scas
icebp
imul
and
xor
or
mov
push
loope
int
pop
pop
out
jle
sub
jmp
imul
mov
mov
jns
cltd
lcall
and
sbbl
imul
int3
fstpt
push
mov
leave
cmp
lock
cs
push
clc
cld
ljmp
mov
and
test
adc
adc
mov
inc
out
daa
loopne
xchg
or
ffree
sub
push
push
int
push
xor
movsl
dec
dec
clc
fsubs
adc
mov
xchg
inc
mov
jmp
outsl
test
and
xchg
mov
icebp
ja
xchg
jb
dec
mov
fistpl
pushf
jne
ret
pop
loope
jmp
mov
cwtl
mov
push
ja,pt
adc
xor
pop
or
scas
push
enter
pop
mov
cmovg
aas
cmp
or
inc
negl
mov
mov
or
cmp
or
shlb
insl
xlat
ss
aaa
shll
push
pop
addr16
sub
mov
ds
out
pop
dec
call
repnz
dec
mov
and
pop
mov
fisttpll
cmp
idivl
xchg
add
cmp
lds
pop
sbbl
adc
mov
je
fs
mov
dec
cmc
sbb
push
sub
jmp
push
mov
stos
fstl
cmp
and
mov
xor
rclb
das
scas
sarl
insl
sbb
inc
xchg
sbb
sti
mov
addl
inc
jmp
inc
dec
xchg
aaa
xchg
cld
xchg
pusha
pop
out
dec
mov
mov
scas
cmc
rorl
jl
shlb
scas
push
popf
dec
push
iret
in
jl
dec
adc
cmp
lods
repnz
dec
mov
test
mov
mov
adc
jecxz
xchg
sbb
cmp
jg
aas
mov
push
inc
in
js
mov
mov
mov
cmpsb
sub
mov
xor
loop
xchg
or
add
lret
xor
pop
mov
pop
test
push
ljmp
out
inc
xchg
movsb
inc
lret
insl
sbb
and
scas
jmp
sub
jecxz
das
push
cmp
jns
push
xor
ret
lock
cli
mov
mov
and
push
pop
sahf
fs
push
jbe
sub
fimuls
cltd
pusha
xchg
mov
cmp
cmp
inc
cmp
cwtl
in
insl
test
mov
mov
popa
out
fucom
xor
pop
addr16
jmp
jmp
lods
in
jle
fnstsw
sahf
cmpsl
test
test
mov
mov
mov
lods
sub
js
fadd
in
cld
xchg
stc
movsb
fwait
dec
aaa
adc
pop
daa
andb
pop
int
mov
out
lret
sub
loope
xchg
push
loopne
movsl
dec
push
pop
jmp
fstp
dec
movsl
lahf
adc
outsb
pop
xor
or
sti
push
jle
pop
addr16
clc
sbb
fndisi(8087
outsb
imul
stos
lahf
pop
mov
js
jle
lds
push
push
icebp
arpl
imul
ss
std
cmpsb
pop
fisubrl
cmpsb
jmp
and
jecxz
inc
pop
ja
fimull
mov
jmp
jecxz
ljmp
sbb
incl
pop
loopne
push
sub
ljmp
mov
sar
hlt
adc
fmuls
imul
clc
xchg
lock
and
cld
out
fstl
fstl
cwtl
lds
mov
cmp
into
or
mov
pusha
aaa
lret
adcl
dec
in
pop
pushw
dec
sahf
repnz
je
dec
sub
xor
push
leave
std
imul
cmp
inc
mov
push
cs
sbb
bound
xchg
mov
ja
cmp
cmpl
jb
jmp
inc
push
lock
popf
test
jecxz
dec
inc
inc
xor
dec
push
sbb
push
push
cmp
sub
loop
pop
daa
inc
cpuid
mov
outsl
inc
rcll
xchg
or
cwtl
xchg
fnstenv
daa
ja
sbb
mov
fsts
test
mov
sbbb
mov
in
jge
cmp
outsb
xchg
cmp
gs
sub
and
leave
cmp
pop
out
js
outsb
ljmp
and
popa
scas
mov
das
and
xchg
mov
ret
or
imul
and
pushf
xchg
mov
pop
js
fwait
in
imul
and
icebp
sub
clc
sub
lret
stos
into
out
hlt
jecxz
loopne
popa
repnz
sbb
cmp
lcall
roll
sar
lock
hlt
inc
mov
push
add
jno
jg
mov
test
push
idiv
orl
sub
int3
jge
add
cmpsl
jns
sbb
out
cmpsb
xor
xchg
cmp
sub
idiv
push
in
das
into
jg
pop
push
adcl
ret
movsb
or
or
out
sub
inc
mov
test
sbb
cs
stc
shrb
jbe
jno
test
addr16
loop
out
adcl
sahf
rcrb
call
sbb
aaa
out
or
pop
inc
fcomps
xor
fnstsw
mov
push
mov
mov
lock
stos
xor
data16
add
jns
stc
loope
mov
lods
sar
xchg
add
mov
flds
repnz
lds
out
lcall
inc
notl
hlt
fsubl
in
dec
xchg
les
jns
icebp
inc
fildl
xchg
cli
add
xchg
or
and
xchg
jo
pop
imul
cltd
loopne
push
stos
add
ljmp
nop
mov
call
mov
xor
inc
and
mov
sbb
cmc
mov
aad
arpl
pop
shll
ss
pop
shll
neg
lea
push
xchg
inc
xor
out
mov
popf
pop
aas
out
push
hlt
pop
idiv
in
adc
cmpsl
lahf
sub
call
cmpsl
adc
jp
and
loope
xchg
ljmp
sub
insl
xchg
jmp
cli
test
lods
in
shlb
out
popa
xchg
lods
or
lret
stos
jecxz
jl
adc
mov
xor
ja
sub
push
xorl
cli
cmpsw
arpl
inc
jo
les
dec
enter
hlt
addr16
inc
movsl
push
in
lret
push
or
test
mov
pop
pusha
cwtl
cmp
lock
scas
xchg
sbb
repz
inc
jle
mov
ret
push
add
bound
xchg
add
or
repz
xchg
xchg
fwait
and
fldt
pop
pop
pop
pop
sub
xchg
jmp
and
jbe
dec
clc
inc
jbe
shl
jb
push
jge
ss
shlb
jge
mov
faddl
add
sbb
sub
decb
dec
mov
and
call
or
sarb
orl
or
out
pop
ret
adc
adc
shl
mov
pop
test
jge
scas
scas
iret
dec
push
xchg
in
sahf
arpl
addb
cmp
jo
xchg
mov
push
jge
popf
imul
sarb
cwtl
pop
dec
dec
xchg
clc
adc
fs
xor
inc
out
lods
aaa
cmp
sbb
xchg
ret
mov
sbb
sbb
vpxor
pushf
nop
jl
leave
xchg
xor
ret
cld
loope
dec
fadd
add
mov
dec
ja
adcb
mov
cmc
dec
cmc
enter
pop
jle
int
test
in
lret
mov
cmpsb
int3
iret
fsubl
leave
jae
lds
xor
mov
in
out
xor
rclb
inc
cmp
fs
adc
negb
push
inc
rorl
repnz
jg
outsl
and
movl
and
mov
bound
jle
pop
mov
sti
test
xchg
ss
pop
mov
repz
sub
push
stc
repz
lcall
add
pop
add
push
test
mov
insb
pop
lock
jae
mov
adc
addl
add
jae
push
or
mov
andb
or
mov
jae
movsb
xchg
and
sbb
pop
out
xlat
fidivrl
aam
pop
jmp
xchg
jl
pushf
adc
int3
mov
push
pop
dec
and
lods
test
and
je
inc
sub
test
jnp
je
mov
adc
push
jb
insl
neg
cli
into
inc
loopne
fdivl
xor
cmp
cmovne
push
sbb
shrb
push
jecxz
in
ja
in
xor
ret
fiaddl
popa
xor
pop
add
repz
sub
jl
cmp
stos
sbb
mov
and
add
mov
cmp
and
cmp
subb
loop
sbb
fistps
adcb
clc
add
push
push
mov
fstpt
inc
js
xor
outsl
ret
xchg
lret
mov
sub
loope
rolb
aaa
pushf
mov
jg
mov
daa
idiv
fmuls
adc
std
xchg
dec
pusha
ljmp
ret
negl
mov
into
std
mov
test
test
or
popf
add
scas
inc
mov
imulb
faddl
out
jnp
jno
mov
fstpl
popf
dec
ret
ret
push
dec
mov
dec
adc
jae
popf
fldt
sahf
popa
std
mov
or
aam
or
and
push
mov
inc
imul
dec
imull
lahf
sbb
or
and
inc
adc
fimuls
sub
dec
lds
divb
movsl
shlb
inc
xchg
aaa
fidivl
das
sub
xchg
jbe
mov
and
mov
dec
dec
add
in
ljmp
xlat
dec
sbb
sbb
mov
adc
clc
iret
imul
cmp
lods
fmulp
sbb
imul
xor
gs
mov
fwait
mov
jo,pt
out
ljmp
arpl
pmuludq
scas
pop
orb
xchg
and
stos
cwtl
jb
inc
mov
pop
ja
xor
incb
sarb
jle
lock
xor
mov
fs
jns
shl
pop
cs
sub
das
dec
stc
xchg
popf
and
push
stos
fdivrl
scas
ss
repnz
mov
leave
rcr
ljmp
into
add
cld
jp
cmp
stos
xor
push
xchg
clc
mov
cld
sbb
icebp
aam
add
sub
cwtl
push
andl
push
mov
lods
or
mov
add
mov
xchg
nop
mov
aam
add
mov
cwtl
jb
test
xor
push
pop
pop
ja
xor
cmc
sahf
add
push
mov
mov
test
push
into
inc
scas
stos
inc
nop
ret
or
pop
call
fs
adc
sbb
shrb
mov
fwait
out
dec
test
sub
stc
lds
cmp
gs
or
pop
sahf
mov
and
int
xchg
xchg
shll
adc
xchg
or
test
push
mov
aad
mov
std
mov
mov
mov
inc
rcl
mov
out
jnp
aad
or
daa
pop
mov
xor
cmp
pop
cwtl
mov
jle
stos
stc
mov
adc
or
push
pop
jecxz
fnstsw
jle
ss
scas
fsts
dec
push
scas
jb
ss
sbb
decb
push
fnstcw
and
xor
mov
cs
out
adc
jne
outsb
jns
and
pop
sbb
gs
fcmovb
cli
out
jns
leave
hlt
adc
imul
out
push
xor
stos
test
adc
xor
bound
jb
es
and
sbb
gs
rorl
pushf
push
hlt
lods
sbb
sbb
mov
in
test
mov
shlb
ret
cmp
test
add
dec
mov
clc
mov
enter
imul
or
in
leave
imul
shll
mov
outsb
neg
push
inc
test
and
push
sub
push
mov
mov
jmp
sbbl
mov
xchg
cmp
pop
lds
cmp
mulb
mov
test
loopne
mov
mull
xor
stos
insl
sti
cmp
dec
add
xlat
mov
js
mov
xor
adc
xor
in
hlt
lret
xchg
sub
mov
movsl
arpl
inc
cld
xchg
mov
sub
fnstcw
pushf
and
ds
and
movsl
and
xchg
jmp
bound
sbb
mov
mov
mov
outsb
out
shrl
adc
lock
cmpsb
xchg
and
pop
cmpsb
into
mov
mov
out
or
stos
pop
mov
cli
stc
xchg
cmpsb
xchg
adc
rcl
shlb
add
pop
sub
push
adc
fldl
int
test
lds
aas
out
cmpsb
lret
mov
xchg
jg
sbb
out
jo
xorb
insl
mov
out
mov
adc
sbb
in
adc
jp
fisubl
neg
lret
or
inc
xor
dec
and
dec
cli
dec
dec
sbb
decl
flds
xchg
sbb
pop
test
push
cmc
push
mov
pop
cs
inc
mov
roll
stos
imul
adc
fs
xor
add
test
icebp
int
sub
jg
inc
push
inc
lock
lock
mov
inc
cmc
popf
and
cli
aas
jbe
scas
cmc
incl
sbb
in
mov
mov
or
dec
and
test
xchg
icebp
cmc
imulb
or
pop
mov
inc
cmp
cmp
scas
out
aam
dec
pop
lret
mov
mov
push
je
test
ror
ja
daa
or
jns
sub
adc
fwait
jmp
stc
push
xor
add
call
mov
inc
addr16
pop
lret
mov
fsubl
jae
icebp
and
cs
inc
push
cmpsb
mov
and
rorb
cmpsl
cmpsb
lret
rcl
mov
add
cltd
xchg
lea
mov
fdivrs
ljmp
scas
pusha
xlat
xchg
adc
lahf
fbld
repnz
fiadds
jecxz
ficomps
outsb
cmpsb
call
xchg
cwtl
lret
push
mov
cmpsl
adc
andb
dec
in
push
ljmp
test
mov
movsb
iret
rolb
sbb
fstpt
aad
mov
popa
stos
and
call
cmp
push
lock
or
outsl
scas
mov
lods
xor
rorl
mov
mov
popf
xchg
fisttpl
push
int
mov
mov
testb
mov
inc
sbb
push
int3
and
mov
mov
and
cmpsl
fdiv
adc
cmpsl
fs
outsb
cmp
adc
inc
fincstp
push
repnz
xchg
or
dec
cmp
mov
cmp
lcall
cmc
cmc
hlt
xchg
scas
xchg
test
xchg
add
add
jnp
js
lahf
mov
dec
xor
jmp
icebp
pushf
push
popa
mov
aas
addr16
mov
mov
dec
into
cmp
lods
mov
pop
hlt
pop
dec
jae
mov
add
mov
iret
dec
jae
rcll
sub
mov
and
mov
jae
insl
cmp
pop
push
imul
add
lahf
pop
mov
lods
out
fwait
imul
add
rclb
pusha
cmp
sbb
aam
xor
push
and
lock
stos
andl
enter
outsb
mov
mov
xchg
adc
pushf
mov
xlat
mov
xchg
sbb
into
out
fistpl
dec
pusha
shl
mov
add
fisttpl
into
jmp
push
sbb
scas
or
int3
loop
je
push
jns
push
fildl
iret
sub
fwait
leave
or
icebp
and
push
or
sub
xchg
inc
mov
enter
shlb
and
inc
sub
xor
lods
movsb
mov
cmp
hlt
inc
in
mov
out
rorl
or
sub
push
mov
loopne
fwait
cltd
jae
adc
push
pop
cwtl
mov
mov
inc
nop
hlt
repz
cmp
in
push
dec
and
jns
xchg
repz
inc
mov
or
mov
cli
sbb
pop
ret
ret
insb
aam
xlat
mov
das
in
jb
add
int
in
mov
std
lods
xchg
dec
imul
lods
push
and
push
mov
sub
and
and
jae
mov
cmc
into
test
cmpsl
sub
mov
mov
push
leave
ss
push
push
push
arpl
stc
xor
xlat
out
test
shl
push
jae
incl
cwtl
mov
lods
push
pop
push
stos
xchg
mov
bound
aad
inc
xor
into
iret
testb
adcb
sbb
lds
arpl
jle
add
jo
jo
add
aam
sbb
mov
mov
xchg
inc
fistl
das
xor
jmp
sub
inc
shl
jb
dec
or
xchg
enter
nop
dec
adc
loope
clc
mov
dec
lock
cmpsl
dec
mov
in
scas
add
ret
repnz
frstor
movsb
popf
push
pop
repz
vmovlpd
mov
pop
sbb
adc
mov
mov
cmc
mov
add
dec
mov
mov
inc
or
filds
push
fs
aam
add
jbe
sti
jle
aad
js
and
sbb
les
int
adc
testl
mov
pushf
pop
xlat
psubb
stos
add
cs
jp
fwait
mov
int3
loopne
push
xchg
insb
ja
js
sbb
jbe
sub
daa
scas
mull
add
imull
xor
cmp
roll
pushf
xor
sti
and
lahf
mov
cmc
jae
and
lods
xchg
jne
ja
push
stos
cli
lods
lahf
aam
add
rclb
jge
lods
out
loopne
bound
cmp
cmp
push
sub
push
sub
out
push
jnp
fdivrl
mov
xor
imul
lcall
inc
negl
shl
stc
out
dec
inc
or
pushf
and
lahf
popf
jo
hlt
out
lret
adc
sbbl
jmp
push
mov
insb
xchg
jno
xlat
pop
lahf
push
inc
sarb
fs
cmp
pop
popf
gs
pop
xor
hlt
sub
loopne
mull
pop
fsubs
dec
fs
pop
arpl
outsl
out
das
addb
in
jmp
jge
ljmp
add
sub
cmp
or
push
fwait
ljmp
sbb
comiss
xor
push
sub
lods
sub
mov
test
push
cmp
outsb
pop
pop
or
jae
incb
dec
xlat
pop
dec
push
loope
pop
call
mov
add
pop
inc
mov
pop
nop
xchg
aaa
jnp
repz
pop
nop
sti
mov
mov
inc
mov
cwtl
cltd
lcall
pop
daa
or
jmp
dec
sar
sub
adc
ss
cmp
cli
cmpsb
lods
cmp
jl
jge
int3
out
aad
jae
inc
mov
pusha
mov
sub
xor
ds
dec
cwtl
push
outsb
pop
sub
push
inc
dec
or
push
idivb
pop
mov
imull
jno
lcall
js
ds
adc
jnp
pop
bound
dec
sub
pop
outsb
dec
push
gs
je
jno
dec
std
lods
mov
fisttpll
jne
mov
dec
mov
push
mov
and
inc
in
jne
mov
push
xor
scas
lea
pushf
mov
push
ss
fiaddl
mov
out
fnstsw
mov
popf
leave
sarl
add
aad
pop
pop
fldlg2
push
daa
pop
xchg
add
inc
cli
or
lret
daa
dec
push
cmp
inc
sbb
or
cmp
inc
stos
xchg
and
fs
lods
jae
cmpsl
pop
stos
dec
xchg
jl
pushf
inc
sbb
out
jns
lock
mov
sbb
jns
stos
imul
sub
imul
mov
imul
div
sbb
cmp
sarb
popf
ljmp
adc
lock
jno
cli
sbb
sbbb
cmp
adc
and
jmp
gs
add
jge
aas
loope
cs
dec
mov
sub
fwait
mov
nop
push
pushf
fidivrs
push
sub
shrb
repnz
pop
insb
adcb
pop
mov
jae
aam
push
psrad
fmuls
fwait
les
or
and
in
aam
das
xor
add
dec
cmp
ficoms
push
adc
mov
jnp
sub
xor
add
shrl
push
inc
outsl
pop
mov
push
insl
fstps
orb
pusha
stc
lret
sahf
imulb
inc
test
ror
icebp
aad
xlat
test
pop
push
ds
rclb
sbb
dec
adc
lahf
cli
push
insl
push
mov
sti
adc
mov
int
xchg
pop
or
cmp
arpl
xor
mov
faddl
sbb
lods
mov
jg
xchg
pop
repz
dec
mov
ljmp
pushf
xor
outsl
xchg
lret
jo
pop
mov
test
add
leave
pop
sbb
lret
mov
fstps
ja
mov
mov
sbb
mov
mov
in
leave
shrl
add
outsl
mov
movsl
daa
add
jle
jp
sahf
in
inc
jle
inc
jae
ret
imul
adc
imul
and
jecxz
xor
adc
jo
mov
cli
in
sbb
sub
dec
dec
clc
sbb
mov
in
or
add
sbb
std
ret
sub
sbb
fnstsw
dec
fistl
jecxz
cmc
and
push
psrlw
cmp
ss
cltd
push
adc
lock
xor
ror
xchg
mov
xor
or
inc
aaa
out
iret
f2xm1
bound
cli
dec
out
test
cwtl
and
adc
inc
adc
add
rcrb
loopne
fiaddl
das
or
nop
mov
dec
xor
movsb
jns
scas
cwtl
lods
insb
or
lock
aad
jo
popf
flds
sub
loopne
pop
int
jg
add
in
inc
int3
dec
aam
or
xchg
loope
jg
dec
dec
subl
loope
ljmp
clc
mov
ret
testb
and
jecxz
jno
and
ss
sbb
loopne
xor
fsubl
fdivl
arpl
mov
daa
or
cs
sarl
cltd
mov
fwait
pop
in
sti
movsb
and
or
cmp
inc
mov
cmp
in
xor
in
stc
hlt
xchg
dec
pop
pushf
jmp
insl
lock
sar
xchg
popf
test
es
mov
sub
pop
and
mov
out
cwtl
scas
mov
out
sbb
mov
inc
xor
pop
icebp
les
cwtl
fstpt
dec
dec
or
mov
jp
ds
hlt
js
xor
xor
sahf
cld
jl
ret
sub
sti
cmp
fdivrp
adc
sub
dec
lret
adc
les
enter
dec
jns
jns
scas
mov
add
rolb
adc
movsbl
dec
shrb
fistpll
std
sub
ficoms
cmpsb
mov
js,pn
push
adc
outsb
jae
and
xchg
or
in
push
iret
or
aam
fisttpl
insb
sbb
enter
frstor
xchg
ds
subb
push
pusha
cld
pop
arpl
or
pop
or
jae
cs
or
push
cmp
icebp
mov
lret
mov
insb
jge
jmp
sbbb
dec
jne
loope
gs
popa
jne
push
lock
ja
test
in
loop
sub
insb
es
push
jmp
cmc
pop
cld
lods
sbb
aam
push
xor
push
adc
lock
mov
mov
outsb
int3
test
fnsave
push
faddp
scas
repz
lret
addr16
or
cmp
stc
test
idiv
cmp
addr16
adc
push
jnp
xor
dec
aam
call
movsl
imul
inc
mov
xchg
mov
xchg
test
mov
out
jmp
push
or
icebp
ljmp
push
adc
repnz
jbe
das
dec
sub
mov
mov
push
cmc
pop
adc
fidivrl
inc
xor
xor
mov
adc
test
sahf
mov
xchg
outsb
dec
rcr
pusha
in
push
inc
mov
rcrb
imul
cmpsl
cs
xchg
jg
int
adc
in
mov
int3
inc
ret
sbbl
push
xchg
jmp
mov
cmp
enter
pop
mov
mov
jae
mov
push
mov
inc
xchg
xor
data16
cmc
in
test
jmp
or
js
mov
dec
in
rolb
fisubrl
push
push
lret
xor
iret
xchg
es
shl
pushf
lcall
xchg
xor
or
dec
xchg
movsb
and
xchg
lea
imull
into
mov
xchg
sbb
ja
add
or
pop
out
inc
jle
add
or
aas
add
scas
sub
lods
in
cmpb
imul
xchg
lret
fisttpll
sbb
lcall
popf
imul
lret
pop
subl
or
mov
push
lods
sbb
mov
subl
mov
xorb
pop
jno
andb
mov
mov
adc
sub
bound
scas
mov
int
addr16
leave
nop
cmp
xchg
jmp
or
cmp
mov
test
inc
xchg
xchg
add
pop
fiadds
sub
mov
lock
mov
orb
mov
ficompl
dec
mov
or
inc
inc
jg
mov
aas
fwait
pushf
out
out
idivb
dec
sahf
test
ret
lret
lret
sub
in
sbb
lods
shrl
subb
jg
cwtl
mov
xor
nop
cltd
add
dec
add
mov
call
pop
popf
lods
fcomi
or
pop
fidivrs
mov
adc
lods
jae
xor
jne
jmp
xchg
mov
jne,pn
mov
ja
fwait
ljmp
adc
lock
movsb
and
jecxz
sub
cmpsl
ds
das
pop
inc
mov
mov
orl
mov
scas
xor
pop
dec
subb
sub
lods
dec
adc
cmp
sub
hlt
mov
add
fwait
xchg
jg
mov
cmp
pandn
call
or
icebp
std
out
mov
shl
sub
push
mov
mov
inc
subb
lea
fwait
push
or
inc
mov
in
cmpb
add
xchg
cmp
rolb
sbb
imul
ljmp
iret
lret
mov
xchg
fdiv
xlat
filds
fsubrl
xchg
dec
lods
inc
pop
push
das
add
ljmp
sbb
notb
inc
aaa
std
out
popa
push
adc
adc
inc
mov
xchg
in
mov
jno
jne
sub
mov
cwtl
dec
cli
mov
fdivrl
popf
push
cmpsl
xor
mov
xchg
dec
inc
push
cli
es
sahf
jnp
inc
popa
fistpl
out
sub
leave
mov
popf
subb
fisttpll
daa
popf
inc
cmpb
push
clc
lret
outsl
mov
cmp
dec
mov
mov
sbb
lods
testb
xor
mov
dec
pop
xor
es
dec
mov
sahf
repz
jecxz
aas
roll
out
mov
dec
fs
or
xor
lcall
in
hlt
scas
xor
xor
ljmp
fwait
push
ret
pop
addr16
ja
mov
loope
sbb
stos
pop
adc
sbbb
mov
packssdw
push
jge
lahf
cmpb
aaa
movsl
push
cld
mov
xchg
cmp
xor
push
mov
jle
incl
and
inc
dec
int3
jnp
movsb
push
or
cmp
testb
pop
stc
and
pop
pop
xlat
test
xor
or
fs
rorb
sti
sub
stc
inc
jl
aaa
popf
sbb
into
daa
pop
push
push
sahf
neg
dec
in
loope
xchg
mov
push
mov
fistpll
in
cmpsb
inc
dec
add
lcall
jecxz
sub
call
outsb
test
cmp
sbb
xlat
xchg
sbb
fdivs
xchg
popa
or
jo
ror
jne
pop
pop
mov
xchg
shl
pop
out
push
das
shr
inc
and
and
mov
jmp
xchg
sub
lret
int3
clc
mov
je
mov
pop
jl
rcll
into
mov
sbb
push
movsl
popf
notb
pop
jnp
cmc
xchg
and
jae
mov
movsl
pop
cli
and
jbe
and
jns
jne
fstl
xchg
fdivs
xchg
ja
cmp
jb
icebp
scas
jl
mov
cmc
and
lret
jecxz
pcmpgtw
dec
aas
xor
cmpsb
daa
xchg
movsb
pop
inc
lods
imul
cwtl
mov
xchg
push
adc
into
pushf
aad
or
dec
stos
xchg
ljmp
jp
inc
adc
sbb
jo
scas
xlat
int3
and
pop
cmp
jmp
lcall
movsl
je
cmp
test
adc
cltd
add
scas
ljmp
mov
inc
repz
shll
rcr
xorb
int3
insb
or
lret
fidivrs
fwait
mov
push
icebp
int3
cwtl
repnz
adcb
fwait
mov
push
or
je
insl
fs
cmc
mov
fdivrp
test
xchg
iret
jae,pt
cmp
cli
insl
sub
movsl
loope
dec
cli
imul
aas
inc
inc
gs
aad
les
shrb
add
testb
movb
sub
daa
dec
mov
mov
dec
test
pushf
pop
int3
rcrl
sbb
loopne
add
shll
dec
stc
mov
fcomps
ret
pusha
enter
loopne
mov
das
or
jp
shll
sbb
dec
xlat
jge
cwtl
lock
repnz
out
shrl
lahf
stos
push
push
sti
or
mov
movsb
loopne
cmpsl
hlt
rol
es
sbb
shll
fwait
out
xor
repnz
add
dec
add
mov
je
sub
pop
out
push
adc
and
leave
mov
add
int3
lock
and
jae
pop
shll
leave
jle
iret
mov
inc
push
jp
in
dec
xchg
pop
les
leave
lods
dec
andl
pop
movsl
ficomps
addb
or
jl
pop
sbbb
inc
dec
jecxz
hlt
xchg
pop
or
or
pop
mov
cmc
sarb
mov
mov
sti
pop
repnz
lahf
cmp
mov
xorb
orl
add
mov
sbbb
xlat
inc
insb
jno
sub
lret
lret
lahf
sub
aaa
dec
pop
shlb
sbb
cmp
shrb
out
aad
jb
inc
xchg
nop
xchg
test
and
or
inc
stc
jmp
lds
xor
cld
frstor
sbb
mov
dec
outsl
xchg
stos
sbb
xchg
out
inc
out
push
pop
out
xlat
ds
in
push
out
dec
and
fs
pextrw
jns
push
mov
mov
imul
jnp,pn
pop
jl
sar
pop
jge
cmp
mov
enter
push
jle
daa
pop
push
pop
sub
fsts
jbe
repz
ja
push
xchg
sbb
lods
out
sbb
cmpsl
sbb
into
fwait
into
pop
fstl
jns
call
and
out
mov
dec
jmp
cli
push
and
mov
cli
lods
pop
lcall
jbe
jns
lods
lds
pop
pop
inc
mov
lock
or
leave
mov
lahf
fsubr
pop
dec
dec
push
jb
out
mov
rorl
outsl
mov
push
adc
pop
mov
fstpt
mov
push
int3
fdivrl
in
lahf
popf
test
sub
pop
pop
pop
inc
mov
mov
ret
cmpsw
insl
leave
xlat
mov
scas
sbb
insl
sti
push
jo
sbb
jmp
cmc
hlt
mov
mov
push
popa
loope
mov
adc
insl
push
xchg
call
jle
inc
repnz
push
xor
int
mov
inc
add
xchg
or
lcall
add
sub
lcall
imul
das
jb
test
out
scas
in
aas
scas
pop
outsl
and
rol
lds
aaa
mov
cmp
add
pop
push
cwtl
insl
adc
dec
inc
xor
cmpsb
mov
arpl
and
addr16
dec
adc
lahf
bound
jp
movsl
pop
inc
gs
mov
loope
and
sbb
je
lcall
fsts
mov
mov
imul
and
popf
daa
scas
lcall
pop
stc
push
xchg
xor
add
add
rorb
xor
rclb
imul
cltd
or
xor
int
push
or
xchg
mov
jg
push
pop
mov
imul
cs
movsb
or
daa
mov
fsubs
pop
sbb
ss
fsubl
in
adc
add
int3
push
fadds
mov
xchg
bound
call
add
jecxz
je
cltd
ret
das
in
sub
je
add
arpl
in
mov
inc
mov
int3
pusha
fs
jg
or
push
aam
and
mov
or
lods
cltd
imul
xchg
cltd
xchg
sub
les
stos
jae
xchg
push
repnz
ficoml
test
mov
fidivs
mov
xor
stos
jo
cld
adc
pop
push
jmp
popa
mov
lock
popf
pusha
add
imul
test
jecxz
cs
lods
add
cmpsb
movsb
scas
mov
loop
loop
insb
addl
pushl
and
sub
cmpsb
enter
enter
mov
cmc
or
aaa
adc
inc
cmp
lcall
bound
loop
cmp
sub
cmpsl
std
xchg
in
gs
sbb
outsl
lea
fnsave
fwait
sbb
cmpsl
cmp
call
hlt
add
xchg
outsl
xchg
push
stos
cmp
pop
roll
lea
aad
imul
pusha
and
push
mov
movsl
cs
jne
and
mov
mov
arpl
adc
jns
outsl
mull
pusha
rcll
pop
cmp
inc
out
xor
cmp
dec
mov
lret
sarl
sbb
cld
call
cmp
sbb
fwait
xchg
inc
loopne
jecxz
inc
push
lods
repz
xchg
sti
pop
cld
cltd
cwtl
daa
test
mov
ja
jmp
jmp
in
repnz
xorb
push
push
mov
leave
or
stos
add
mov
addb
in
and
mov
stos
cmp
xchg
dec
xor
fisubrl
pop
and
push
imul
and
add
xchg
pop
mov
xchg
rclb
xor
cmc
mov
pop
xor
lret
push
xchg
mov
mov
mov
ret
inc
mov
sbb
sbb
faddl
lahf
idivl
imul
fdivrl
and
lahf
movsl
ret
xor
or
jbe
scas
sub
cld
popa
icebp
call
sbb
test
and
pop
repnz
addr16
sbb
in
inc
cwtl
in
bound
pop
call
mov
mov
fiadds
adc
scas
adc
xor
xchg
xchg
xor
mov
or
xchg
add
lock
scas
sti
jl
jmp
inc
je
mov
pop
fildl
mov
jb
dec
sub
je
push
jle
hlt
ljmp
into
jo
jnp
lock
enter
push
jg
bound
pushl
outsb
or
mov
fmulp
pop
dec
xchg
mov
jl
and
xchg
nop
pop
add
add
mov
and
call
cmp
dec
cmp
push
frstor
int
push
inc
outsl
dec
repz
mov
or
or
shl
jbe
mov
cmp
cmp
aaa
fldenv
push
jg
pop
inc
and
sub
dec
add
out
dec
pop
pop
call
push
pop
lea
jmp
inc
cli
cld
xchg
call
addr16
pop
and
sbb
mov
adc
mov
ljmp
pushf
ret
in
dec
arpl
dec
pop
xor
addl
mov
js
lret
mov
out
xchg
loop
xor
mov
rcrl
psubsb
cwtl
xchg
xor
push
push
inc
cmp
leave
adc
cmp
pop
movsb
pop
dec
in
and
sbbb
cltd
mov
cmp
inc
dec
ret
rorl
jae
call
into
inc
mov
sub
mov
push
mov
loopne
dec
ss
loope
data16
push
jg
call
and
pop
push
out
add
adc
cmp
es
mov
cs
scas
out
inc
xor
lea
push
sbb
adc
addl
mov
mov
lock
mov
cmpsl
jmp
out
xchg
lea
mov
imul
xchg
fcomp
mov
jbe
xor
shr
mov
push
inc
sti
into
clc
jae
adc
cmc
mov
mov
movsbl
sbb
and
cltd
fwait
adc
fst
xchg
lahf
dec
sbb
aam
pop
bound
jb
repz
loope
andb
popf
dec
movl
pop
push
ljmp
loopne
mov
push
adc
sub
mov
movsb
in
lods
aam
testb
bound
sbb
and
cmp
cmp
fs
mov
cs
bnd
xchg
xor
lahf
lcall
cs
test
inc
add
in
popf
or
sub
adc
stos
and
jl
shl
jg
mov
decb
push
or
stc
jge
sub
pop
inc
cli
scas
dec
adc
inc
xor
jne
pop
lock
xor
cltd
push
imul
into
or
repz
test
xor
jbe
fcmovne
cs
xchg
repnz
adc
add
cmpsl
xchg
sbbb
scas
push
cmp
fstpt
xchg
mov
dec
lods
mov
jge
in
mov
mov
sub
cwtl
or
fisubrl
lods
int3
jo
out
mov
jb
pushl
cmp
xor
or
int
adc
insb
cmp
in
arpl
fisttpl
fwait
outsb
push
inc
xchg
mov
pop
mov
jns
lds
pop
add
mov
dec
rcll
nop
jecxz
pop
add
jp
lahf
bound
shr
pop
iret
mov
int
test
cmpsl
lods
sbb
push
sbb
dec
push
imul
mov
fcompl
popa
sti
push
sbb
jmp
sub
mov
je
lahf
jno
sarl
adc
les
mov
push
je
mov
ret
mov
dec
ja
mov
xor
xor
mov
movsb
sbb
sbb
push
orl
pusha
jecxz
cld
adc
add
mov
adc
sub
push
test
cli
aam
test
jge
pop
adcl
js
ret
rcll
imul
mov
frstor
imul
call
xchg
add
cmc
das
bound
and
mov
das
fstl
adcb
mov
lret
inc
jg
jle
jmp
push
aas
aaa
dec
les
data16
rcrb
mov
sbbb
or
push
adc
repnz
inc
or
imul
inc
or
fsubrs
pushf
fbstp
daa
lock
mov
jno
add
xor
enter
jns
test
adc
mov
mov
push
sbb
int
cmp
mov
cmp
adc
aas
xor
xor
mov
inc
out
xchg
les
mov
mov
fisubrl
jmp
lret
push
inc
clc
lds
clc
mov
pop
adc
shlb
dec
cmc
mov
std
inc
clc
lahf
adc
ja
pop
or
and
sub
mov
jnp
test
or
sarl
pop
pop
imul
gs
in
and
pop
stos
cmp
lcall
dec
std
inc
les
cld
enter
mov
imul
mov
mov
out
push
das
mov
inc
popf
mov
and
push
dec
xor
adc
push
test
popa
ja
pop
test
data16
push
stos
and
je
ss
cli
shr
jg,pn
cmp
inc
sbb
lods
pop
neg
loope
and
pop
lret
mov
push
add
inc
frstor
movsb
xor
xlat
insl
xor
push
inc
mov
pop
mov
mov
lcall
dec
imul
inc
repz
push
inc
sahf
xlat
push
push
stc
rorb
jb
into
xchg
dec
sbb
cs
rcll
sbb
enter
mov
iret
in
and
inc
dec
mov
mov
addr16
mov
mov
inc
pop
pop
and
subb
je
dec
movsb
rcrb
sub
sub
insl
cltd
cmp
and
pop
icebp
pop
cmp
and
dec
addb
out
outsb
pop
fnstenv
mov
int3
pusha
imul
sbb
sti
jl
sbb
jns
sub
jnp
scas
jae
sbb
push
dec
jle
fcmovnu
movl
mov
pop
or
lret
push
adc
add
xchg
mov
cmp
rolb
jb
je
jne
mov
jg
jb
ljmp
mov
inc
fistpl
cs
mov
jns
mov
xchg
ret
push
out
jns
leave
out
sub
push
lea
cwtl
xor
jne
add
mov
and
mov
repz
sahf
into
and
and
nop
div
push
popa
add
call
or
jb
push
cmp
mov
int3
mov
lods
sbb
test
push
stos
xchg
repnz
mov
push
jbe
push
negl
dec
mov
stos
jge
add
inc
adc
out
xor
inc
fsub
je
aam
push
cwtl
add
pushf
and
pop
push
sbb
stc
cmpsl
pop
dec
sub
or
pop
xor
mov
cmp
icebp
pop
sub
push
inc
sub
nop
mov
sub
xchg
xchg
adc
push
stos
mov
pop
das
test
in
cmp
push
xor
fsubs
push
std
jb
jge
lahf
and
and
insb
push
rolb
sbb
insl
outsb
xor
pop
clc
outsb
mov
pop
jg
test
arpl
jnp
jl
pop
jae
shlb
fcomp
pop
cli
mov
mov
jne
call
xchg
ja
xchg
inc
decl
clc
xchg
inc
adc
pop
out
lods
stc
imul
cmpsl
mov
aam
jne
pop
and
dec
inc
xchg
int
loope
andl
nop
inc
sbb
scas
push
jns
psubd
inc
mov
sti
add
pop
sbb
in
iret
outsb
les
and
aaa
mov
btc
je
into
addr16
pop
sub
out
mull
scas
inc
scas
into
dec
out
lret
cmp
add
sbb
iret
jmp
cmp
lret
cmp
push
orb
jle
js
mov
sub
sbb
xchg
adc
imul
jmp
fwait
sub
sub
xor
cmp
mov
jae
mov
stos
fiaddl
xor
lahf
lea
push
mov
std
dec
cmp
call
in
push
xor
lods
and
out
fdivl
aam
xchg
insl
add
sub
mov
sbb
cmc
sub
mov
pop
int3
shlb
and
pop
daa
xchg
test
mov
mov
cmp
jmp
subb
repz
add
out
mov
jle
fistps
mov
sbb
pusha
cltd
scas
sti
ja,pt
adc
movsb
mov
push
loop
pop
xlat
and
mov
mov
sbb
repz
pop
mov
or
push
or
adc
test
repz
pop
cmc
jecxz
mov
jmp
dec
stc
cmp
roll
pop
cwtl
out
das
sbb
ja
adc
outsl
sub
jecxz
loopne
mov
andw
int3
stos
ss
and
subb
or
add
mov
sbb
xchg
jl
fsubrl
sbb
add
cli
iret
inc
mov
jecxz
mov
and
xorl
mov
sub
pop
add
fcmove
pop
pop
addl
inc
jo
jle
mov
lods
stos
jo
and
jle
mov
mov
loope
shll
or
push
mov
in
push
call
cli
xor
adc
jge
inc
add
push
dec
push
lock
push
in
in
cs
mov
fnstcw
jbe
and
imul
andl
push
iret
inc
xor
das
aaa
dec
cmp
sub
mov
lods
ja
lret
xor
test
lods
mov
mov
inc
cmp
mov
fmuls
dec
lds
mov
mov
ljmp
dec
cli
add
ret
loop
lret
dec
inc
enter
jne
in
out
ret
jle
push
pop
sbb
outsb
and
inc
insl
add
jno
pop
adc
xor
mov
pop
in
dec
dec
imul
data16
jecxz
aas
cli
lret
push
xchg
push
lods
out
xor
add
or
in
or
sbb
popf
lock
pop
lret
xchg
xlat
add
fcmovb
push
pop
and
fadd
popa
ficoml
add
xor
sub
xchg
ficoml
loop
movsb
sbb
aas
ljmp
into
fmuls
push
cld
mov
aaa
adc
and
and
jo
pop
jno
leave
cs
nop
or
jge
enter
aas
iret
inc
dec
mov
jo
lcall
add
cmc
scas
mov
rcrb
ljmp
out
aam
nop
push
push
xor
fldcw
adc
stc
lret
es
xorb
sarb
xchg
xor
pop
fs
sahf
pop
xchg
xchg
sub
fistps
pop
lret
ja
insb
jl
aam
or
cltd
pusha
fnstcw
pusha
pop
addb
int3
dec
push
in
push
mov
pop
dec
aas
xor
pop
inc
cli
test
and
xchg
in
sub
jmp
ds
and
add
ret
jae
stos
fmuls
pushf
push
xchg
stos
xchg
adc
dec
sbb
imull
mov
jmp
push
and
inc
ljmp
inc
mov
in
dec
mov
mov
repz
xor
ss
movsb
or
mov
adc
mov
jb
xchg
sbb
and
sbb
out
int3
ret
repz
out
lock
jo
ret
imul
jno
icebp
push
jno
mov
sbb
push
xor
mov
mov
aam
lods
subb
cmp
scas
popa
mov
cmpsl
rcrb
sti
pop
imul
pop
xchg
ffreep
pop
lahf
fldenv
xlat
jnp
mov
pop
jne
or
sar
dec
push
inc
dec
add
cmp
sbb
jne
push
mov
mov
ljmp
std
fisttpl
sub
in
push
not
inc
adc
dec
push
or
les
push
and
sub
mov
sbb
pop
mov
push
mov
rorb
leave
cmp
push
aas
mov
mov
sbb
aaa
out
xor
into
xchg
sub
mov
push
pop
inc
mov
pop
cwtl
bnd
sgdtl
testb
orl
insb
mov
mov
jmp
outsb
xchg
mov
ficoml
rcrb
test
in
xor
jg
popa
test
adc
xlat
mov
or
xchg
fldl
inc
pop
dec
ja
pushf
pop
lods
daa
and
push
insl
popa
inc
jle
add
or
into
cmpb
insl
cmp
mov
lds
loop
in
xchg
jge
fmuls
insl
xor
aas
imul
or
mov
jae
fcoml
cmp
pop
scas
cmp
xchg
arpl
ss
xor
xchg
pop
mov
stos
inc
pop
mov
xchg
jmp
pop
ja
xchg
jb
ret
mov
repz
mov
loop
push
xchg
jmp
add
cmp
testl
call
and
xchg
mov
jl
jmp
fldcw
xor
adc
xchg
daa
ljmp
scas
les
xlat
loope
sti
inc
pop
mov
adc
lock
sub
lods
rorb
adc
push
ret
nop
cmc
jecxz
sub
mov
fcmovb
sbb
or
fildl
mov
mov
or
add
in
adc
int3
mov
inc
sbb
jb
push
loope
push
push
in
add
cli
arpl
inc
cli
lock
fdivrs
lods
sbb
and
rolb
aam
pop
flds
enter
cs
jecxz
add
jecxz
in
in
mov
push
xor
sbb
pop
xor
cwtl
xor
dec
imul
cmp
shlb
add
xchg
out
push
rolb
cmp
dec
jge
sbb
cmp
inc
mov
test
xchg
mov
dec
or
add
imul
enter
xor
add
addb
pushf
out
sbb
das
mov
imul
cmp
jo
and
pop
or
cmpsb
loopne
inc
xor
mov
into
cld
orb
imul
rorb
mov
sbb
sub
xchg
sbbl
adc
ss
mov
pusha
int3
push
pushw
push
rorl
sbb
incl
ljmp
mov
out
daa
cmp
fsts
xchg
adc
shl
fildl
push
push
out
dec
adc
push
adc
dec
push
sub
dec
jns,pn
pcmpeqd
imul
int
mov
into
push
aas
sbb
testb
test
icebp
or
icebp
movsb
in
out
pop
mov
jae
sub
cmp
adc
push
or
roll
fsubrp
stos
sbb
in
pop
pop
jo
outsb
clc
imul
or
pop
cld
test
ficomps
sub
xchg
or
push
or
rsqrtps
ret
aaa
push
ret
je
out
in
test
dec
mov
nop
loope
cmp
call
dec
xchg
addr16
dec
stos
adcb
fsubl
popa
sub
andl
push
ljmp
shr
test
imul
cmp
adc
sti
mov
mov
insl
add
cltd
cld
imul
aaa
lret
es
inc
push
xchg
add
pop
enter
notb
fisttpl
popf
xlat
or
pop
pusha
aad
and
ret
sarl
stos
sbb
or
lret
popf
xchg
mov
and
pop
fildll
icebp
push
mov
leave
adc
sbb
cmp
pop
pusha
or
aas
mov
inc
adc
xor
dec
dec
mov
out
jle
add
inc
xlat
std
sbb
lds
mov
fnstcw
lret
fwait
dec
hlt
movsl
insb
ljmp
xchg
jo
sub
pushf
sub
xchg
mov
gs
jo
mov
scas
jo
ljmp
push
rcrl
pop
inc
test
loope
pop
mov
jmp
dec
mov
outsb
fnstenv
mov
imul
mov
lret
push
cmpsl
lret
in
pop
xor
or
push
sahf
jl
orl
or
aam
inc
mov
adc
cli
mov
repnz
lahf
mov
xchg
dec
pop
adc
inc
sahf
enter
xchg
into
rcll
fcmove
and
cmp
add
into
mov
sarb
mov
dec
nop
int3
daa
adc
and
sbb
mov
push
ret
mov
call
bound
sbb
jno
or
lret
inc
xchg
push
cmc
sub
sahf
xchg
mov
ret
pop
cmp
cli
loopne
push
insb
stc
fidivrs
jbe
jecxz
and
cmc
int3
mov
cmp
out
adc
test
xchg
mov
sub
ljmp
mov
std
ret
lds
out
mov
jp
fs
jmp
test
jo
cli
shrb
and
cmp
lahf
in
and
leave
je
sahf
rcrl
cs
mov
ljmp
mov
ret
fs
aas
jecxz
es
filds
push
shrl
adc
jbe
mov
xchg
dec
jae
inc
insb
out
pop
lds
mov
dec
cmpsl
cmp
call
push
test
push
repnz
loopne
and
gs
lcall
sub
mov
scas
leave
push
pop
add
pop
jl
mov
cmpsl
cmp
gs
popa
sbb
push
jge
repnz
fnstsw
sbb
not
cwtl
xor
pop
sbb
call
and
subl
mov
inc
add
inc
push
lret
sbb
dec
hlt
jo
shll
fistl
cmp
lock
mov
testb
rclb
inc
jg
stos
mov
fistl
lods
mov
addr16
pop
sub
inc
aad
xor
es
adc
mov
sub
adc
popa
loope
inc
insl
jp
roll
dec
addr16
outsb
ljmp
mov
enter
lea
dec
cmp
enter
call
mov
pop
mov
loope
and
hlt
subl
aam
lea
lds
mulb
or
inc
cmpsl
or
in
mov
sbb
xor
movsb
stos
sub
shl
addr16
pop
push
aas
cmp
in
jmp
outsl
inc
mov
and
adcb
mov
xor
mov
pop
or
test
sahf
sub
std
inc
mov
sub
stos
or
xor
adc
int3
mov
lret
adc
push
stos
xor
jno
and
ret
scas
repnz
pop
xchg
xor
bnd
lock
pushf
mov
scas
xlat
lret
loope
sbb
jg
jae
jecxz
mov
inc
cli
dec
mov
cld
pop
call
cmp
pop
aad
push
inc
and
add
jbe
push
sub
mov
or
cmpsb
xor
and
cmc
andb
fsqrt
xchg
popf
mov
out
sub
inc
addr16
clc
bound
into
movsb
jle
mov
sahf
aas
pop
nop
jp
push
xor
loopne
aad
dec
fidivs
and
adc
push
out
test
push
aad
mov
pop
lds
frstor
push
pop
inc
das
mov
sbb
movsl
pop
sti
dec
mov
loop
adc
add
or
mov
loopne
ljmp
pop
fistps
and
cmp
sub
mov
add
je
notb
std
inc
push
and
push
jb
mov
enter
pushf
inc
stos
lahf
mov
mov
das
xor
leave
loopne
xor
out
cmp
outsl
lahf
pop
add
call
push
push
out
movsl
or
imul
jge
mov
inc
mov
in
adc
mov
mov
fld
jge
add
fisttpll
cltd
lock
fisttpll
cmp
sti
mov
in
and
cmp
dec
fs
repz
push
jp
hlt
adc
sarl
lods
inc
insb
mov
push
mov
outsb
sti
sub
dec
cmpsb
mov
mov
add
faddp
clc
xor
jl
push
aas
sub
das
pop
mov
push
inc
push
jne
push
adc
push
ret
pop
jne
stos
pop
and
jle
adc
pop
push
es
jno
dec
xor
stos
int3
sbbl
dec
ret
mov
fisttpll
hlt
imul
mov
pop
js
int3
xor
or
mov
fadds
in
inc
push
gs
repnz
pop
push
and
stos
cli
mov
call
pop
or
inc
aas
cmp
test
cwtl
add
es
into
ljmp
jnp
lahf
out
mov
out
push
out
push
cmpsl
dec
xor
setnp
aam
pop
push
out
test
jecxz
mov
and
jl
push
mov
lock
ftst
gs
in
and
sub
fcoms
mov
fcoms
lahf
jl
mov
aas
sbb
cld
mov
xor
data16
imul
mov
std
xchg
sub
fmuls
or
jnp
adcl
es
icebp
fstps
pusha
imull
xchg
fbstp
jl
lcall
es
mov
bound
pop
in
mov
bound
inc
cli
pop
push
push
test
cwtl
dec
fdivs
mov
dec
mov
cmp
imul
sbbl
test
xlat
xchg
dec
aaa
mov
sbbl
je
pop
and
adc
jno
pop
xchg
mov
mov
and
and
sub
cmc
call
shrl
iret
or
fildll
int3
jecxz
call
cmpsl
xor
lret
xchg
jmp
jo
dec
inc
mov
lods
in
push
push
mov
lret
push
inc
adc
fimull
adc
sbb
push
sbb
jp
arpl
and
rolb
lahf
cmp
and
dec
pop
inc
cmp
notl
mov
inc
pop
cld
mov
sbb
fwait
jbe
outsb
mov
push
push
mov
xchg
mov
aam
add
add
aas
pop
ror
sbb
roll
jp
jne
xchg
mov
or
cmp
insl
fs
fisubrs
sub
in
xor
xchg
mov
push
in
in
jno
sub
clc
inc
dec
iret
mov
or
lret
adc
test
sub
pop
addb
bound
pmullw
jo
jge
loope
sub
mov
jle
xor
adc
stc
xor
cmp
xchg
cmp
xor
jge
jl
pop
dec
jnp
aad
or
pop
std
sub
inc
out
xor
lds
into
or
push
push
push
in
cltd
rorb
std
mov
jg
fiadds
xchg
mov
mov
dec
loopne
scas
shl
adcl
hlt
sahf
mov
dec
inc
mov
inc
mov
mov
pop
pop
adc
bound
sarl
negl
mov
dec
push
mov
add
orl
test
mov
xor
fiadds
ret
xchg
push
mov
out
in
dec
mov
lea
clc
test
cmp
mov
scas
lods
sub
sti
xor
insl
cmp
ret
pop
outsl
lods
popa
stos
push
add
and
es
out
xchg
mov
leave
jg
jbe
flds
push
scas
outsl
adc
xchg
dec
aaa
mov
jge
divb
add
test
loop
hlt
inc
add
pop
lea
outsb
mov
shl
int3
lea
ficompl
lods
shl
test
mov
insl
push
decl
jne
pop
inc
xchg
aaa
jl
xchg
jo
out
lock
xor
loop
into
and
push
add
adc
mov
testl
dec
mov
jne
sbb
jecxz
xchg
addr16
outsb
ficompl
mov
stos
fisttpl
or
pop
test
mov
ret
movsb
mov
scas
sbb
lea
inc
pop
sub
mov
jae
in
adc
mov
lret
jnp
fcoml
cwtl
push
xorb
cmpsb
dec
fisubs
fsubs
add
out
cltd
into
jecxz
mov
cmp
sbb
shlb
cmp
xchg
cmpl
xor
ficompl
clc
sub
push
jmp
sahf
bnd
pop
sbb
cmp
cmc
jge
repz
mov
enter
jmp
icebp
std
mov
xchg
fcompl
test
cmp
ret
ret
and
adc
xor
mov
cmp
and
sub
in
mov
rol
inc
shrl
add
loop
sti
adc
and
dec
sub
out
call
in
rolb
pop
test
in
xor
ljmp
add
push
adc
and
daa
int
mov
leave
fsubs
stc
inc
or
mov
rcll
mov
and
loopne
imul
jb
mov
leave
xchg
ret
in
pop
push
push
testb
pusha
stc
mov
cmp
or
aaa
inc
rolb
pusha
inc
mov
outsb
dec
js
xlat
or
orl
inc
push
sbb
adc
pandn
mov
addr16
jmp
lds
or
or
insb
int3
aam
jae
xlat
pop
xchg
addl
sbb
out
mov
mov
cs
and
push
push
repz
sub
orl
mov
xor
xor
sbb
ror
inc
pop
out
out
outsb
jmp
xor
cli
dec
loope
push
je
imul
jbe
pop
mov
add
and
std
rclb
inc
add
adc
cmpsb
je
ret
popf
sbb
mov
loope
pushfw
nop
add
dec
add
jle
das
out
sbb
pop
xchg
cmp
inc
cmc
jae
sub
xor
mov
shlb
jl
scas
out
ret
inc
sub
lods
mov
adc
das
dec
sbb
leave
out
out
pop
cmp
pop
mov
inc
repz
sub
jns
pushf
lea
rcrl
push
xchg
adcb
lret
in
mov
jp
inc
cltd
jl
push
sahf
sub
dec
and
int3
cmp
push
test
testl
mov
out
out
shr
mov
jmp
repz
dec
loop
imul
lock
data16
sbb
mov
aam
test
lods
mov
mov
sbb
enter
xchg
sub
les
stc
xchg
sub
fdivr
rolb
enter
pusha
sbb
pop
mov
insl
sbb
push
push
cmp
pop
sti
ret
std
dec
add
aas
mov
mov
in
xchg
push
int3
in
push
mov
dec
insb
ljmp
jl
add
fwait
pop
push
leave
xchg
mov
pop
icebp
fcmovnb
lahf
movsb
add
jmp
jb
xlat
icebp
xorb
stc
adc
add
dec
mov
outsl
cwtl
out
pop
add
lcall
iret
add
dec
mov
fists
fsubs
das
fdivl
sbbl
xorb
repnz
insl
cmp
das
mov
and
add
stos
sub
test
jge
cmp
div
in
dec
movsb
adc
mov
out
movsb
jmp
cli
mov
xchg
add
insl
mov
jne
stos
mov
adc
jmp
cltd
sti
push
push
lcall
mov
sbb
push
xor
roll
cmpsb
add
outsl
out
lock
imul
call
jbe
icebp
rorb
fidivrl
out
mov
faddl
pop
sub
and
push
jge
push
dec
icebp
jmp
in
pop
cmp
jmp
xor
in
cmp
cmp
add
dec
daa
das
rolb
cmpsb
sub
xchg
aad
mov
add
or
bound
xchg
mov
mov
lea
cmp
dec
sbb
enter
jno
pop
inc
mov
jae
pop
leave
mov
and
jo
and
aas
mov
in
push
data16
adc
mov
dec
cmp
xlat
pop
cmpsb
jl
std
fisubrl
mov
orl
xchg
ja
into
jns
cmp
je
jns
mov
pusha
and
ja
jp
add
aad
inc
icebp
push
dec
lret
fldcw
cs
addr16
cmp
shlb
in
push
xlat
add
shrl
xorl
pop
sbb
jecxz
add
test
mov
imul
pusha
jp
stos
and
sbb
push
pushw
andb
rolb
push
iret
adc
movsl
cmpsl
hlt
dec
outsb
cmp
push
xchg
sbb
mov
incl
pop
sbb
andb
mov
and
push
or
sub
jmp
push
aaa
subb
insb
xchg
xor
pushf
mov
in
xchg
je
mov
mov
push
pop
fnstsw
xchg
jge
xchg
jge
jbe
dec
push
shlb
repnz
cmpsl
mov
sbb
push
imulb
jae
das
sarb
int3
inc
push
les
mov
cltd
mov
add
pop
pop
pop
mov
out
lock
jl
jmp
inc
push
xchg
bound
aaa
push
xor
dec
in
ret
pop
mov
adc
dec
popa
daa
addr16
call
pop
out
sub
ret
sub
adc
xchg
ficomps
xchg
xor
out
xchg
out
sub
dec
jb
adc
aam
aad
cmc
pop
scas
and
add
jmp
shrb
lea
pop
pop
xchg
sub
ljmp
pop
iret
jmp
cmp
daa
lea
test
clc
fmuls
es
sub
outsl
mov
mov
push
in
push
mov
std
adc
mov
stos
inc
out
rcrl
hlt
fisubrl
inc
and
adc
lahf
or
stos
mov
adcb
mov
cmc
jne
aad
enter
scas
inc
aaa
add
in
lahf
mov
std
stos
dec
push
cmp
push
jnp
dec
mov
in
movsl
loope
jg
sub
lods
inc
loope
test
pop
push
cltd
sbb
jne
jb
pop
clc
add
bound
nop
xor
cld
pop
adc
mov
fisubrs
jnp
cltd
lahf
and
into
movsl
sub
test
jne
sub
iret
mov
loop
add
in
jns
mov
sbb
pop
stc
cmp
sbb
cmp
lret
and
aam
xor
mov
movsl
push
mov
ret
shl
push
jge
push
and
jns
js
add
or
pusha
pop
push
inc
or
mov
mov
push
das
ljmp
dec
mov
push
jb
mov
in
jnp
and
lahf
sbb
out
testb
inc
ljmp
sbb
loope
push
push
inc
pop
add
movsl
add
jae
fisubrs
jo
loope
mov
sbbb
insl
inc
add
fs
sub
dec
imul
stc
mov
test
outsl
dec
repz
or
jnp
mov
cmpsl
repnz
js
mov
sbb
pop
sbb
cmpsl
xchg
sbb
insb
test
add
push
outsb
cmpsl
into
xchg
mull
sarb
mov
jo
addr16
leave
dec
inc
nop
jmp
ret
cmpsb
cltd
mov
adc
testl
repz
outsl
aaa
adc
shlb
js
ss
outsl
bound
loop
cmpsb
sub
dec
pop
test
insl
outsb
lds
out
sbb
cli
out
fdivrs
loop
in
loope
dec
dec
sub
dec
fucomi
fidivrs
fcoms
cmp
out
cmp
fistpl
leave
icebp
ljmp
or
scas
mov
scas
and
fld
pop
mov
jne
and
cmp
add
int3
aaa
mov
xchg
sar
iret
lods
inc
push
mov
out
bound
dec
xchg
mov
pop
lret
scas
nop
push
outsb
scas
lea
cltd
repz
mov
lcall
pmovmskb
pop
std
cmp
pop
xlat
or
add
pop
iret
or
cmp
sub
fnstenv
mov
pusha
das
push
mov
cmp
jae
push
test
daa
cltd
adc
jae
movsb
les
cwtl
inc
insb
clc
or
xor
nop
mov
dec
mov
daa
xor
pop
push
push
and
popf
mov
sub
mov
add
repnz
icebp
mov
aam
aam
add
lods
sti
fmuls
push
pop
jno
jg
pop
inc
int3
inc
pop
out
test
std
inc
jge
lods
ljmp
loope
outsb
push
or
sub
pop
in
and
cmp
test
and
adc
repnz
push
imul
mov
mov
add
cmpsl
mov
add
sti
mov
rcr
aad
outsb
cmp
xchg
cmp
adc
xor
paddq
rcrl
inc
pop
mov
je
jb
stc
pushf
mov
xchg
scas
mov
jo
mov
jmp
adc
sbb
repz
out
dec
mov
mov
inc
fs
insb
orb
pusha
pop
jmp
dec
xchg
xchg
cltd
push
mov
in
test
pop
hlt
aad
subl
cmpsb
movb
push
inc
add
shlb
xor
inc
sub
js
xchg
ss
xlat
icebp
xchg
cli
aaa
call
adc
ja
adc
mov
or
popa
adc
shll
aas
enter
cmp
mov
mov
mov
adc
aaa
mov
jecxz
dec
rclb
xchg
ss
shrb
int3
dec
xchg
jb
jae
daa
mov
xchg
cmp
dec
je
mov
gs
or
mov
cmp
pop
jge
es
push
pop
lds
popf
sarb
outsb
sbb
test
mov
test
pop
dec
lahf
add
jns
insl
int3
mov
testb
shll
push
es
ja
dec
lcall
xor
test
xchg
jbe
pop
sub
nop
xlat
mov
lods
adc
mov
adc
movb
ss
dec
ret
and
aad
jl
cmp
xchg
stc
adc
adcl
sub
fnstenv
fnsave
jle
jae
cmp
push
mov
rolb
leave
pusha
repz
push
pop
es
pop
jge
push
clc
push
daa
out
repz
pop
ret
add
fildll
mov
aaa
lcall
mov
dec
push
inc
push
mov
cmp
push
stc
cmp
aas
pop
rcrl
inc
fstps
jecxz
jns
fbstp
int
shrb
fstpt
sti
push
mov
push
out
dec
xchg
outsl
cmp
or
cmpsl
fsubs
cmpsl
or
loopnew
pop
sbb
lahf
lret
pop
dec
aam
aad
loope
mov
out
outsl
mov
cmpb
sub
scas
mov
addr16
insl
cmp
inc
dec
xchg
xor
out
adc
out
xchg
rcl
ret
inc
or
push
xor
sub
or
and
xchg
test
add
push
ret
test
lods
push
sti
sub
and
push
and
aas
daa
test
enter
mov
stos
mov
lods
xor
imul
call
fcoms
push
adc
outsl
jo
out
lret
enter
stos
add
in
jge
jnp
mov
or
sbb
aas
mov
cmpl
mov
lds
sub
fidivrl
add
push
push
lret
out
dec
sbb
pop
mov
lds
cld
cmc
enter
lds
in
and
jg
xchg
shrb
lds
xor
and
adc
xchg
in
cltd
cmp
fcmovnb
cmp
lock
js
test
sub
mov
xlat
xchg
jno
jmp
add
and
outsl
pop
roll
hlt
fsubs
mov
add
or
inc
out
aas
fwait
addr16
ret
mov
rorb
cs
outsl
mov
add
and
in
xchg
nop
les
sub
mov
sub
adc
addps
pushf
out
ss
iret
out
and
mov
pop
xchg
fwait
pavgb
lahf
add
mov
arpl
cmp
frstor
xor
addr16
add
dec
stos
stos
inc
or
fwait
dec
and
in
add
shlb
pop
sbb
xchg
pop
addr16
insb
sub
ret
dec
jmp
test
inc
mov
mov
mov
cwtl
filds
int3
iret
add
pop
inc
fnsave
test
aaa
lret
mov
scas
les
xor
mov
add
add
xchg
mov
dec
adc
fldl
push
shrb
int
out
enter
mov
push
les
loopne
mov
dec
leave
inc
arpl
jp
clc
cmp
sub
stos
xor
inc
out
ss
inc
push
jo
loope
dec
push
cli
adc
push
ljmp
mov
dec
test
add
sbbl
sub
cmp
gs
fstpt
add
jle
movsb
mov
sub
inc
push
out
insl
sub
or
push
or
rcll
icebp
add
scas
xor
fcoms
adcb
jp
jno
imulb
jecxz
or
xor
lock
mov
mov
ljmp
cmovo
push
ret
repz
mov
and
sbbl
ljmp
xor
or
cmpsl
repnz
fwait
push
pop
scas
fs
inc
push
pop
mov
mov
lea
lods
pushf
or
sub
enter
xor
xlat
pop
or
enter
xorb
arpl
roll
enter
xchg
sti
push
aaa
push
sbb
ret
inc
mov
mov
call
aam
lret
in
and
pushf
pop
push
adc
lock
dec
xchg
pop
push
jmp
mov
pop
sbb
mov
jmp
sub
or
xor
mov
js
sub
ret
push
je
repnz
mov
push
lret
push
lcall
xchg
out
icebp
inc
fldenv
dec
push
shl
shlb
inc
jp
mov
stos
xor
in
xchg
ljmp
inc
bound
dec
sub
mov
test
sarb
sbb
pop
cmpsb
or
jp
dec
out
jl
daa
push
cmpsl
jnp
or
pop
adc
sub
jg
jle
jnp
push
lret
test
cli
and
xchg
outsb
adc
mov
js
repz
xor
and
xchg
popf
pusha
stc
shr
push
pop
loop
mov
scas
inc
fcompl
shrb
xor
nop
data16
test
sub
pop
call
outsb
sub
jmp
inc
arpl
faddl
pop
je
in
sbb
call
cwtl
inc
aam
xchg
fcompl
and
fs
aam
mov
sub
jbe
rcl
aas
shl
fcompl
lret
jmp
jo
lods
inc
inc
push
cmc
sbb
push
add
xchg
push
imul
mov
mov
xchg
mov
dec
and
cmp
inc
nop
icebp
cmp
fimuls
in
sbb
outsb
pmaxub
pop
and
jno
repnz
fs
jbe
cmp
std
clc
mov
adc
pop
repnz
aad
fwait
sub
repnz
inc
jnp
fnstsw
fistpl
xor
dec
pop
daa
loope
test
icebp
jns
lret
loop
xor
aas
ud0
sbb
lcall
add
ret
dec
xchg
inc
adc
add
pop
int3
fcompl
test
dec
pop
mov
fiaddl
pop
scas
cs
loop
dec
xchg
movsl
dec
adc
lret
std
sar
push
mov
fmuls
cmpsb
jns
daa
test
dec
fisubrs
pop
jecxz
jp
mov
inc
lret
mov
jl
jbe
jle
sbb
mov
jmp
dec
xchg
pop
xchg
call
leave
mov
hlt
jns
mov
and
xchg
dec
jno
stos
clc
mov
repz
fwait
outsb
test
fisubrl
push
and
shll
arpl
adc
xchg
arpl
xchg
jle
pop
es
xchg
movsb
push
insl
jb
ss
mov
lret
jns
cwtl
mov
jmp
cmc
or
adc
jb
movb
jecxz
data16
xchg
ret
addr16
add
test
or
mov
mov
mov
jnp
ja
inc
insl
iret
test
sub
jmp
in
dec
ficoml
jge
push
call
fs
out
js
pop
mov
xor
leave
hlt
inc
xchg
in
ja
add
sbb
sub
int
mov
sub
cmpsl
mov
out
call
mov
adc
fmul
dec
inc
stos
xchg
xor
iret
in
fisttpl
mov
push
jmp
rolb
cmp
ret
rclb
aaa
leave
add
call
fsts
out
mov
jmp
gs
mov
jb
scas
test
rcr
pusha
rclb
test
cmp
popf
lds
push
sbb
push
push
pop
loope
test
pop
mov
sbb
js
xor
cli
cmp
stos
mov
mov
jae
outsl
mov
fstpl
pop
rorb
and
repnz
popa
jp
mov
je
xchg
pushf
rcr
mov
push
icebp
sahf
xchg
mov
mov
fdivp
clc
imul
mov
xor
jg
lret
jg
jbe
je
dec
sahf
inc
mov
cmpl
icebp
dec
adcb
scas
xor
jns
enter
imul
js
ret
sub
push
rorl
in
es
sbb
shll
pop
test
rorl
sub
les
xchg
sahf
xchg
outsb
jbe
xor
mov
leave
xor
xchg
dec
stos
outsb
sub
add
cmp
lods
jp
jg
aad
cmp
les
fstp
scas
icebp
or
ret
xor
adc
fs
cwtl
or
mov
and
popl
push
xor
jo
out
push
mov
pushf
pop
sbb
fadds
inc
lret
add
sahf
mov
push
dec
test
add
sub
fidivrs
pop
cmpsb
pop
mov
insl
cmpsb
xchg
xchg
push
adc
outsl
ss
mov
push
lock
fwait
loope
mov
or
sub
gs
and
outsb
xchg
popf
aad
pop
stos
inc
inc
nop
mov
lods
aas
xor
mov
cmp
pusha
sub
rorl
add
pushf
fisttps
scas
fiaddl
xchg
mov
lahf
adc
or
les
push
xor
hlt
in
lods
fisubrl
or
mov
pop
notl
jmp
xchg
jmp
jns
jae
mov
pop
pop
sbb
inc
sub
add
push
iret
std
popa
push
sub
or
mull
pop
xchg
ret
pop
ss
popf
scas
add
mov
dec
push
daa
out
jle
pop
shll
arpl
mov
mov
dec
mov
push
or
fdivs
lods
loop
pushf
repz
sbb
sbb
mov
push
loope
in
jbe
unpckhps
jle
mov
lods
int
sbb
inc
sbb
push
xchg
mov
cmc
cmpsl
or
push
es
xor
jno
jl
dec
sub
mov
enter
cmp
lds
mov
fldcw
mov
push
test
push
out
das
jnp
adc
xchg
jmp
mov
sbb
lret
out
lret
adc
into
imul
shrl
sar
or
adc
rcrb
lock
iret
cmp
inc
sbb
add
push
into
dec
icebp
ja
pop
mov
test
ljmp
pop
std
test
adc
inc
lds
int3
int
mov
cmp
paddb
idivb
mov
ja
dec
cmpsl
add
jo
ret
in
icebp
pusha
push
dec
mov
shl
mov
add
cmp
push
and
push
aas
push
daa
xor
ss
mov
add
or
das
dec
push
mov
lock
dec
push
jo
mov
ret
adc
cwtl
jp
pop
shrb
mov
push
dec
jl
or
xchg
xor
fsubl
inc
fisttpll
aas
mov
mov
cltd
test
xchg
mov
bound
test
or
cmpsl
cmp
out
xchg
dec
xchg
sub
mov
ss
into
shl
cltd
int3
dec
outsl
pusha
sbb
testl
ljmp
dec
bound
je
push
sahf
fs
xchg
jecxz
movsl
stos
ljmp
insl
push
mov
subb
fs
popa
dec
inc
rcrl
xchg
inc
sbb
mov
add
call
mov
xchg
lcall
fwait
mov
or
outsb
adc
data16
lcall
idiv
mov
xchg
adc
mov
pop
bound
stos
jno
cmp
mov
push
andl
push
jmp
cmp
push
sub
xchg
and
andl
int
push
jns
out
mov
rcr
mov
or
pop
fmuls
loop
loope
mov
out
decl
jae
inc
xchg
in
mov
mov
cwtl
das
std
das
icebp
jle
mov
idiv
add
pushf
lahf
adc
into
ja
out
xor
inc
mov
pop
mov
jnp
mov
sub
lds
push
outsl
jecxz
mov
stos
lock
into
in
add
imul
xchg
imul
mov
aaa
lock
mov
sbb
out
or
vpunpcklbw
cli
cmc
jmp
push
shlb
std
andb
movsl
fsubl
leave
stc
jns
xchg
lock
sbb
xchg
mov
push
jl
sub
lret
jmp
xchg
daa
push
aad
xchg
inc
sbbb
jns
rorl
enter
inc
sbbb
cltd
sbbb
inc
xor
xchg
mov
sbb
aaa
les
mov
fcmovne
mov
mov
mov
mov
js
stos
je
loop
inc
fidivrs
cmp
pop
je
jnp
stos
and
aaa
cld
dec
dec
sub
jecxz
inc
push
inc
push
fildl
pop
sub
dec
jmp
lret
jne,pt
cltd
pop
scas
pop
popf
aam
mov
mov
movb
aas
sahf
mov
sbbb
loopne
movsb
cld
fstl
adc
roll
pop
or
ret
ret
cmp
stc
dec
pusha
insl
or
xlat
jmp
xor
out
add
xor
gs
push
lods
cmpsb
movsl
nop
mov
rol
movsl
adc
or
xchg
mov
add
loop
mov
out
sbb
or
arpl
rorb
outsb
ljmp
mov
stos
pop
mov
mov
lods
imul
pusha
mov
or
fdivrl
fisubrs
outsl
pop
fs
addb
mov
xchg
fcoml
daa
pop
push
xchg
dec
dec
orb
fstpl
sub
cmp
sub
aaa
mov
push
cmp
int
xchg
dec
scas
inc
mov
mov
adc
jge
cmpb
xchg
pop
stc
test
mov
out
cmc
inc
enter
ss
iret
jg
adc
loopne
ja
mov
dec
addr16
js
mov
add
dec
jl
pop
xchg
inc
cmp
mov
push
das
mov
dec
dec
push
and
fs
xchg
push
pusha
lcall
aad
mov
mov
push
ror
push
mov
dec
les
adc
add
dec
pop
inc
leave
or
cli
mov
or
jno
sbb
xlat
sub
js
rclb
cmp
push
push
andb
dec
mov
sbb
pop
mov
xchg
or
insl
and
cmpsb
lret
or
mov
stos
push
je
jne
lret
sbb
loope
adc
mov
xchg
xchg
xchg
pusha
inc
or
add
jp
or
cmp
pushf
jb
mov
dec
inc
mov
gs
pop
iret
outsb
mov
lds
push
jbe
cltd
sub
mov
jnp
cmp
pop
mov
test
enter
fidivrl
addb
ja
xchg
xchg
cs
xlat
lret
shll
jno
cmc
and
in
movsb
enter
mov
and
cmp
push
lcall
sbb
mov
test
push
sub
js
daa
out
std
push
sub
je
je
cmpsb
add
mov
jbe
in
lods
cmp
test
rcrb
ja
sub
pop
andl
add
mov
pop
adc
cmp
push
pop
xor
jns
je
lret
push
das
or
push
cltd
mov
xchg
test
inc
ja
test
dec
mov
mov
lret
xchg
rorl
pop
mov
pop
mov
in
push
test
dec
popf
shlb
push
dec
adc
inc
xchg
in
jns
mov
gs
mov
test
fisttpll
jo
push
add
and
and
push
sub
adc
test
jle
sbb
sub
mov
in
adc
test
dec
pop
adc
iret
mov
inc
xchg
cltd
sub
mov
rcl
mov
sahf
lahf
int3
shrl
fmull
iret
push
cmp
stos
cwtl
or
cmp
ret
adc
insl
out
aaa
cmp
add
push
js
pop
push
out
outsl
imul
pop
icebp
jmp
pushf
push
fst
xchg
cmp
fadds
dec
ds
mov
adc
inc
jns
dec
shlb
cwtl
je
push
dec
push
adc
lret
sub
adc
pop
and
out
int3
test
jp
aaa
sub
push
sbb
sub
jle
push
loop
pop
aam
ds
insl
cmc
hlt
enter
rolb
test
jl
adc
pslld
dec
ja
pop
cmp
add
loop
loop
jne
mov
mov
ret
fcoml
dec
mov
jecxz
xchg
mov
lret
xchg
loop
fnstcw
je
add
lods
jne
insl
out
fisubrs
pusha
pop
jmp
inc
mov
add
adc
lcall
add
push
ds
add
lret
imul
xchg
or
pop
cld
mov
repnz
mov
pop
xor
outsb
add
or
push
ja
stos
int3
sbbl
xor
xchg
mov
outsb
cmp
aad
je
pop
jne
fstpt
lods
ja
fistpl
lock
imulb
into
inc
add
sub
sbb
pop
mov
in
mov
addl
jo
ss
out
stos
es
stos
lea
adc
pop
jmp
daa
pop
mov
add
stos
repz
mov
jp
dec
fsts
iret
out
add
jne
xchg
mov
sbb
movsl
cli
mov
fisubl
andb
xchg
lcall
or
shll
xchg
pop
xchg
rcrb
inc
jp
mov
das
rcrb
pop
cli
jmp
jbe
adcl
jle
dec
sbb
test
cwtl
jb
jnp
daa
stos
inc
repz
sbb
addr16
add
jecxz
mov
int
hlt
imul
fistl
loopne
sti
inc
jno
aas
sub
dec
test
fsubrl
pushf
cltd
adc
lods
fnstcw
cld
mov
les
sbb
xor
push
push
dec
xchg
test
insb
repz
stos
cwtl
test
into
mov
mov
sub
sub
xchg
jae
pusha
adc
icebp
xchg
pushf
rep
fwait
sub
stos
xchg
popf
lret
inc
pop
in
mov
jbe
xchg
fiaddl
negl
cmp
je
sti
jle
xchg
bnd
mov
pop
mov
outsl
push
dec
enter
and
loop
sub
sbb
mov
sbb
sub
aaa
dec
sub
test
xor
lret
fcoml
jl
repnz
cmpsb
pop
loope
xchg
cmpsl
rsqrtps
cmpsl
jae
inc
in
loopne
rcr
faddp
push
in
int
or
insb
mov
xchg
cmc
iret
add
mov
es
xchg
push
rcrb
rcr
out
pop
inc
cmc
mov
sub
inc
pop
push
mov
mov
in
inc
lret
cmp
mov
fwait
xchg
mov
loope
cmp
push
in
xchg
andb
out
push
xchg
or
fistl
mov
inc
add
mov
call
jae
xor
iret
ljmp
cli
push
rcl
shl
test
push
or
inc
scas
mov
dec
idivb
shlb
mov
jbe
sbb
jbe
xchg
aam
and
inc
arpl
jno
mov
xchg
xchg
and
test
xor
arpl
cli
push
pop
or
adc
mov
pop
dec
call
sbb
popa
xor
je
mov
ret
pop
or
or
lahf
cs
dec
loope
in
stos
out
dec
sbb
mov
test
in
jae
arpl
nop
pop
imul
push
mov
fcoms
dec
jbe
and
jne
sbb
movsb
ficoml
test
pop
inc
or
loopne
and
lret
mov
pop
in
mov
sbb
mov
dec
repz
adc
stos
out
push
dec
xlat
lods
mov
je
mov
pop
mov
bound
loope
sbb
sub
rorl
fcomps
push
adc
mov
jae
out
inc
fnstenv
jle
fdivrs
inc
adc
outsb
mov
xchg
das
lods
scas
subl
incb
andb
jl
ss
vmovsd
roll
xlat
jl
dec
loopne
fs
aas
inc
repz
in
jmp
jbe
scas
mov
lea
adc
arpl
gs
pop
inc
ljmp
jge
into
es
cmpsb
sahf
cli
loopne
pop
adc
add
and
adc
sub
mov
scas
sbb
mov
dec
subb
push
fiaddl
and
dec
inc
mov
xor
loopne
pop
or
sbb
inc
in
adc
inc
xor
mov
aam
lock
movsl
jo
ja
mov
dec
fbstp
jns
mov
add
sti
mov
shlb
pop
out
std
dec
arpl
cmp
insl
jo,pt
sub
out
sarb
xchg
pop
sbb
cmpsb
fidivrs
lret
dec
pop
pop
sti
push
jecxz
mov
mov
or
mov
pop
vmovupd
int3
and
jno
cmpsl
adc
or
rorl
dec
scas
mov
pusha
insl
movsb
cmpsl
pop
fdivs
push
imul
sub
pusha
mov
and
lret
push
nop
loop
sub
xchg
mov
mov
call
xor
cs
xchg
mov
jge
jno
lcall
xchg
xchg
pusha
fcoml
mov
call
mov
testl
insb
mov
jl
jmp
repnz
rorl
mov
cmp
xchg
inc
cmp
in
cmc
fdivrs
mov
xchg
dec
mov
sbb
dec
lret
and
dec
mov
int
in
or
push
jb
mov
mov
or
pop
fsts
fimuls
stos
lret
cli
jae
je
add
xlat
movsl
lldt
int3
divl
sti
pop
sub
hlt
mov
pop
xorb
mov
pmaddwd
cld
int
pop
js
add
pop
sub
in
jecxz
xchg
std
pop
fs
pop
sub
je
mov
mov
inc
pop
insb
adc
sti
frstor
xor
enter
mov
push
cmp
ss
xor
jge
push
push
stc
cmpsl
inc
and
rcr
sub
mov
scas
mov
jl
and
fcompl
mov
out
mov
fbstp
jns
sub
or
jne
popf
call
mov
stos
xor
xchg
outsb
hlt
jge
int3
jns
cmova
fstpt
and
dec
pop
sub
in
fwait
test
ds
mov
dec
cmp
repnz
xchg
stos
adc
arpl
pop
xchg
dec
movsb
daa
xor
mov
les
orl
stos
dec
insb
daa
push
int
mov
pop
mov
jnp
ja
xlat
adc
pmulhw
test
add
sbb
sbb
cmp
outsb
lret
inc
cmpsb
dec
mov
enter
mov
sbb
out
ja
loope
push
mov
enter
test
les
adc
into
cli
mov
negb
popa
in
inc
fldenv
xor
adc
jns
daa
add
jnp
jo
mov
loope
jns
push
jp
sbb
add
cmpsb
push
loopne
sub
mov
mov
fwait
fstl
push
adc
insl
rcr
insb
lcall
aam
rcl
push
adc
out
adc
orl
cmp
mov
enter
imul
mov
mov
sub
int
push
or
and
dec
iret
jae
lea
test
push
call
fwait
mov
repnz
sbb
mov
gs
in
dec
cmpsb
xchg
ja
rclb
pop
out
dec
and
mov
add
out
xor
pop
mov
xor
into
outsl
inc
movb
mov
xchg
scas
dec
push
sub
adcb
adc
insb
call
pop
mov
stc
mov
adc
ds
out
out
pop
xrelease
mov
loopne
cmpsb
cmpsb
repnz
push
mov
mov
mov
xlat
insl
xchg
stos
xchg
mov
dec
inc
cmpsl
lods
fsubrs
enter
adc
fwait
add
adc
loope
ds
ljmp
cmp
shl
mov
add
push
scas
xchg
mov
out
movsl
sbb
adc
fstl
aas
jmp
mov
add
dec
push
adc
push
mov
xorl
loope
jmp
xchg
outsl
cld
jge
arpl
pop
pop
pop
mov
shrl
add
daa
mov
xchg
jo
mov
enter
push
mov
nop
clc
add
inc
push
icebp
cli
int3
in
fbstp
test
pop
cmp
iret
fwait
jle
gs
mov
movsl
pop
nop
mov
dec
rcr
jbe
sbb
adc
adc
push
loop
add
and
add
cmp
inc
insb
mov
mov
jns
push
rcll
or
loop
cli
sti
out
scas
jmp
pushf
roll
vunpcklps
ret
dec
xor
cmpb
inc
jmp
lods
jb
mov
push
out
jge
mov
mov
jbe
adc
fcompl
mov
xchg
push
into
hlt
xchg
or
inc
popa
iret
jns
je
into
or
xor
fnstenv
cmp
imul
cmc
mov
jo
decl
mov
in
jbe
or
testb
push
arpl
iret
push
cmpb
mov
ret
inc
pop
ret
sti
adc
and
int
js
cltd
mov
dec
sub
xor
sub
rolb
dec
push
cli
inc
cmpl
add
xor
pop
bound
xchg
xchg
pop
jno
and
mov
decl
ret
cs
sub
inc
ljmp
push
repz
andl
movsb
mov
xor
int
adc
lods
mov
and
pop
xchg
clc
scas
hlt
out
sub
inc
dec
mov
aaa
out
xorl
imul
ret
std
bound
add
inc
out
mov
cmpsl
sahf
in
push
push
push
std
jmp
sbbb
int
out
hlt
sahf
gs
data16
rcll
push
in
mov
sub
mov
jmp
shr
lahf
scas
les
hlt
cs
sahf
nop
pop
aad
add
push
outsb
xor
jl
mov
push
pushf
mov
push
push
scas
push
loope
pushf
aaa
clc
sbb
mov
and
push
fildl
mov
cld
inc
lods
shlb
push
cli
sub
dec
push
sub
lock
fistps
daa
into
push
imul
xchg
mov
sbb
in
pop
adc
addr16
mov
jbe
stos
stos
subb
orl
and
sub
add
push
dec
sbb
xor
into
test
inc
inc
cmp
iret
push
cmpl
and
int
jnp
in
pop
jp
ret
out
ds
fwait
add
mov
test
xchg
xor
repnz
push
xchg
rol
flds
push
and
stc
xchg
aaa
push
jl
popa
sti
arpl
sbb
aas
xchg
pop
xor
lret
les
inc
sti
mov
push
adc
fwait
shll
divb
mov
xchg
mov
leave
push
cmp
iret
mov
cmpsl
adc
fwait
sub
pop
rcrl
jne
xor
ss
scas
jle
inc
aam
mov
adc
insl
cmp
sub
dec
mov
add
orb
mov
insb
fists
dec
inc
mov
add
sbb
jbe
lods
xor
popf
mov
mov
stos
push
sbb
fsubrl
add
lds
fcoml
scas
mov
out
adcb
fisttps
aad
gs
mov
cmp
adc
sub
lret
mov
negl
out
mov
or
dec
out
xchg
mov
cltd
dec
rcl
movsl
sub
pushf
lods
mov
cmpsb
xchg
lcall
xor
dec
call
cmpl
or
ret
xor
cmp
adc
jns
inc
out
xlat
imul
cs
add
insl
jns
xorb
push
dec
xor
lock
pop
push
stos
insl
les
inc
decb
adc
scas
andl
pusha
jge
outsb
jp
jge
jnp
xchg
xchg
push
or
repnz
repz
fucomi
xor
ret
sarb
mov
call
movsb
dec
pop
mov
push
sbb
and
scas
dec
sub
roll
push
int
in
cs
test
int
int
cmp
fisubrl
inc
jge
cmp
pop
push
fidivs
repnz
lods
sbb
fmull
test
or
ficomps
sbb
aad
jb
mov
jp
jns
xor
stos
xlat
push
pop
movsb
inc
sbb
aad
repz
xchg
sbb
nop
add
dec
and
enter
mov
mov
lds
cmc
push
les
imul
popf
jge,pn
xchg
sub
fisttps
or
stc
das
pop
les
push
es
test
xorb
in
mov
mov
jo
cmpsl
into
push
cld
imul
insl
adc
adc
push
jl
in
gs
div
pop
or
andl
inc
stc
jmp
les
xor
jecxz
add
sub
mov
out
cmp
lock
fcomps
mov
dec
ja
xchg
std
data16
pop
jecxz
dec
rcrl
xchg
push
scas
iret
aad
mov
mov
js
pop
adc
add
mov
push
push
xchg
xor
repz
add
ret
fdivs
lahf
add
inc
mov
push
adc
add
or
jb
jp
sahf
je
add
dec
ret
or
cmp
push
push
insb
xchg
lods
bound
sbb
stos
sbb
inc
inc
addr16
addr16
push
jp
gs
inc
mov
negb
movl
cmp
mov
jne
adc
xorb
jg
aad
cmp
mov
bound
stos
ljmp
xchg
loopne
and
std
xchg
outsb
icebp
mov
pop
je
roll
and
push
fisttpl
mov
ret
aad
xchg
xchg
push
or
out
jl
add
dec
adc
arpl
fs
sbb
xchg
xchg
xchg
inc
and
je
push
adc
add
push
iret
xchg
mov
addr16
adc
jg
and
adc
cld
and
or
subb
inc
cli
xor
mov
dec
or
mov
lret
adc
sbb
cmc
mov
push
rorl
mov
in
out
add
imul
rcr
movsl
insl
or
pop
add
adc
xchg
cmp
repz
out
enter
jmp
add
ss
out
jnp
ds
lock
imul
mov
lods
aaa
mov
xchg
dec
inc
xchg
mov
stc
gs
dec
stos
pop
mov
push
gs
movsb
rorl
inc
mov
inc
imul
jmp
outsl
cmc
push
je
cmp
bound
jnp
push
scas
hlt
add
xchg
shlb
cs
test
addr16
xchg
mov
addr16
and
dec
pop
inc
sbb
adc
xchg
leave
gs
adc
stos
test
adc
test
daa
inc
or
dec
add
sub
and
cmc
mov
insb
sti
mov
xchg
mov
inc
lret
pop
sarb
add
in
or
xchg
dec
or
pop
dec
xor
adc
fcmovnbe
addr16
pop
mov
push
enter
pop
or
push
cmpsl
inc
jbe
out
mov
pop
shr
pop
pop
ret
xchg
and
ficomps
fldenv
ja
adc
arpl
sub
dec
icebp
adc
iret
pop
sbb
emms
cli
ljmp
test
push
sbb
xchg
pop
add
push
aad
inc
int3
inc
cli
xlat
cmp
dec
jae
mov
sub
add
push
cmp
aam
pop
push
faddl
cmc
mov
rorb
cmpsl
dec
cmp
sbb
mov
inc
cmp
or
and
es
out
sbb
sbb
sti
iret
icebp
xchg
dec
loop
mov
aad
push
adc
addr16
add
rcrb
std
xor
aaa
sarb
inc
pop
gs
aaa
mov
push
xchg
mov
and
or
pop
xlat
jge
and
pop
dec
or
xchg
rcr
stos
mov
fsubp
mov
push
jecxz
sarb
mov
leave
std
cmp
or
bnd
xchg
pushf
and
in
aaa
mov
test
or
jecxz
in
lea
xor
ja
xchg
adc
push
pop
or
xor
xchg
scas
xor
push
inc
gs
addl
sbb
inc
mov
push
arpl
cld
lods
cmp
mov
sub
xchg
jae
xor
iret
int3
xor
psubb
sub
jmp
mov
xor
dec
shufps
jl
cmp
and
fwait
xchg
dec
mov
cmovno
cmp
bt
push
xchg
in
dec
mov
sub
adc
sbb
call
jbe
lret
insl
adc
popf
imul
cmc
add
mov
jle
mov
xor
xchg
insl
push
pop
scas
les
in
pop
sbb
inc
inc
insb
dec
rep
jbe
cmp
lcall
add
sbbl
push
hlt
int
mov
call
sub
int3
cmp
test
les
test
movsb
fnstenv
sub
push
aad
lcall
sub
pop
cld
in
pop
pop
addr16
lret
xor
jno
daa
xrelease
leave
mov
cmpsb
inc
mov
inc
inc
xlat
cmpsb
mov
loop
mov
or
push
cwtl
fnstcw
jbe
movsl
shll
inc
sub
sbb
lret
std
mov
dec
les
out
mov
push
outsb
fnstcw
xchg
mov
sbb
xor
push
gs
xchg
push
out
test
fldcw
inc
mov
daa
mov
push
add
ror
lock
das
mov
and
and
sbb
push
inc
xchg
mov
cli
sbb
out
lods
dec
cmp
mov
mov
jmp
pop
pcmpeqw
ficoms
add
inc
daa
and
bound
enter
imul
mov
xchg
dec
xor
stc
mov
int
jl
push
adc
dec
and
sub
push
dec
and
sbb
xchg
js
pop
rep
cmp
imul
fsubl
mov
xchg
jecxz
push
push
jae
clc
movsl
pop
icebp
and
cmp
in
jmp
lret
lret
inc
mov
ret
lods
shlb
testb
subl
movsl
shll
int
sub
push
lock
jns
sub
pop
cli
sub
jae
mov
shr
rcr
scas
fadds
xlat
enter
pop
add
leave
add
imul
mov
into
insb
inc
pop
out
push
jle
pusha
or
inc
je
pop
fsub
ret
jno
or
pop
inc
inc
test
sub
in
xor
xchg
test
movsb
pop
in
sub
dec
ret
sbb
lret
fdivr
es
lods
je
hlt
shll
adc
icebp
mov
lahf
mov
int
fldl
subl
loope
and
fidivrs
mov
xchg
insb
mov
and
loop
out
add
stc
andl
vandps
push
leave
mov
sbb
fwait
jmp
xorl
sub
daa
imul
aam
int3
and
dec
mov
xorb
mov
mov
mov
xchg
and
dec
movsl
pop
xchg
or
adcl
pop
test
adc
clc
movntq
out
cmp
notl
mov
cwtl
ds
fdivr
jl
mov
xchg
and
insb
and
or
adc
xchg
cltd
mov
rol
xchg
and
hlt
movsb
mov
sbbb
repnz
xchg
test
mov
mov
fdiv
daa
inc
das
cmp
scas
in
stos
cmp
pop
jg
mov
sub
fwait
sub
pop
dec
into
add
shrl
push
xchg
lds
sub
sub
iret
jo
add
push
enter
ss
cmpsl
push
mov
or
xchg
or
xor
jmp
jp
outsb
dec
lret
adc
mov
cltd
dec
je
daa
scas
and
pop
lret
call
test
pop
cwtl
ljmp
stc
lock
insb
pop
imul
in
sub
mov
ds
ss
push
bnd
adc
sbb
loopne
pushf
jl
lds
mov
insb
fcmove
test
xor
mov
mov
mov
inc
lcall
aaa
jns
and
xchg
ret
call
xchg
add
mov
xchg
je
or
stc
mov
add
lret
sub
scas
mov
push
dec
inc
mov
jecxz
sbb
out
push
rclb
and
ja
dec
mov
jge
shrb
fs
and
add
dec
ljmp
xlat
sub
dec
sbb
out
cmpl
mov
fcoml
or
jno
adc
scas
and
push
adc
or
icebp
lock
xor
cmp
pusha
enter
push
pop
dec
push
inc
or
in
pop
pop
scas
in
std
fwait
scas
sbb
pop
insl
jae
cld
call
stc
and
nop
rcrb
pcmpeqb
push
mov
imul
aas
sbb
stos
push
pop
dec
sbb
jbe
cmpsb
outsl
mov
and
je
cli
in
cwtl
sbb
sub
scas
add
div
sarb
fyl2x
dec
in
mov
push
pop
insb
fcmovb
sub
scas
fistl
or
mov
mov
lods
xorb
clc
mov
lahf
and
mov
rcrl
sub
jae
push
ffree
and
inc
mov
mov
or
ds
loop
dec
sti
mov
sbb
add
in
cmp
rcrl
xor
fnsave
lret
js
scas
inc
int3
xchg
jl
add
aam
mov
lods
lods
mov
inc
scas
out
scas
pop
jb
sbb
shll
xchg
cmp
mov
das
or
pushf
insl
cwtl
dec
sbb
fidivrs
push
hlt
nop
scas
inc
jb
sahf
push
xor
popf
outsl
xchg
mov
loop
and
xor
movsl
add
jb
xor
stos
and
dec
into
mov
adc
scas
insb
orl
mov
faddl
rcll
shr
test
jmp
lea
stos
xor
inc
pop
rolb
sbb
mov
xchg
mov
push
out
pop
xchg
xorb
mov
gs
cmp
fwait
loopne
and
lods
add
je
les
xchg
jb
je
xor
pop
jmp
inc
sub
adc
or
sbb
aas
clc
adc
inc
pushf
mov
pushf
and
xchg
repz
inc
mov
imul
pop
ljmp
push
fs
adc
imul
lret
in
in
add
cli
push
push
fisttps
adc
ret
dec
mov
addb
fdivl
jo
sub
jno
cmpb
paddusb
loop
and
insl
lea
ret
fmull
mov
ds
and
push
rol
fwait
shrl
cmp
pop
mov
hlt
aas
bound
xchg
adc
xchg
mov
stos
int
or
movsl
jnp
inc
in
aas
cld
jns
imul
rorb
enter
push
aad
cld
outsb
aaa
adc
xchg
les
popa
ljmp
aam
jge
inc
rcrb
insl
sahf
push
pop
rcl
js
jo
adc
fcmove
pop
test
fwait
adc
fadds
sub
cmpl
xor
icebp
mov
out
mov
jecxz
mov
pop
push
sbb
mov
outsb
adc
mov
popa
leave
aaa
and
lret
jmp
lcall
nop
mov
mov
jle
rorb
in
ss
and
inc
testl
add
bound
in
fmuls
arpl
jo
sti
cli
orb
mov
sahf
fsubrs
xchg
xor
and
ret
xchg
test
icebp
mov
icebp
cmpsb
cmp
cwtl
ficomps
repnz
sti
out
lea
cmp
in
in
shrl
add
in
adc
mov
inc
cmp
mov
in
repnz
push
pop
lods
fstpt
lock
shld
mov
js
dec
adc
lds
icebp
mov
pop
mov
fidivrl
cmpsl
adc
fcoms
sbb
jl
mov
icebp
push
mov
jns
add
inc
enter
jecxz
xchg
test
stos
pop
jo
mov
jecxz
imul
inc
daa
lea
in
mov
fisubl
decl
pusha
cli
jnp
jne
pop
jnp
jns
stc
mov
aas
scas
cli
mov
xor
lds
popa
fxch
push
shr
cmpsl
adc
mov
xchg
mov
das
pop
dec
pop
shl
add
pop
cmp
adc
testb
pop
sub
enter
loop
cmp
sub
jl
cmpsl
cmp
inc
addr16
out
mov
sbb
sbb
cli
rol
lahf
pop
adc
out
add
aam
sbb
xchg
imul
idivb
xor
mov
push
sbb
mov
imul
shl
into
mov
scas
and
mov
mov
and
cmp
data16
inc
pop
or
sbb
rorl
das
shrb
adc
test
std
ljmp
cmp
or
jmp
dec
push
fistpll
sub
push
adcl
jno
mov
jbe
lret
push
jmp
adc
lds
out
push
pop
inc
jns
ficoml
jp
ret
stc
andb
loop
pop
and
in
sub
in
pusha
lods
lods
fsubrl
fsubs
cld
add
dec
dec
mov
xchg
xchg
adc
mov
jge
movsl
leave
jo
test
fs
dec
cmpsb
loop
pop
xchg
ds
lahf
and
popl
sbb
popf
nop
ret
add
jl
mov
outsl
xchg
mov
sbb
je
xor
andl
jle
aad
les
arpl
aas
lcall
mov
cmp
outsl
jo
imul
and
insl
popf
insb
in
adc
out
pop
daa
xor
jg
inc
incb
add
mov
lret
dec
mov
push
push
je
cmp
std
adc
inc
mov
add
out
in
push
cltd
in
test
lret
outsl
fwait
shll
rcll
jnp
dec
pusha
mov
adc
mov
dec
es
mov
rcll
adc
cmpsb
cmp
jbe
fstl
std
dec
gs
jle
neg
push
rclb
stos
fdivrs
sub
popa
xchg
rorb
inc
xor
stos
rol
mov
mov
xchg
push
mov
mov
inc
test
ja
xchg
sub
jge
add
mov
lret
hlt
and
ret
jl
push
sti
adc
or
mov
call
call
ljmp
cmp
xchg
loop
hlt
rcll
scas
mov
shr
ret
sbb
jp
mov
outsb
mov
push
xor
mov
and
idivl
push
inc
inc
push
and
fs
testb
adc
cmp
push
jle
movsb
inc
or
mov
jl
cmp
push
push
mov
sbb
outsl
mov
dec
xchg
lds
shlb
lods
mov
pop
inc
les
jle
adc
cmpsl
pop
mov
jg
sub
addl
pop
or
push
sbb
xlat
bound
dec
iret
movsb
sub
fs
nop
pop
insb
cltd
inc
adc
cmp
cs
imul
cmc
out
ja
icebp
xchg
ret
leave
cmp
imul
xor
xor
cmp
hlt
xchg
sub
or
inc
mov
add
add
test
pusha
jl
cmp
mov
xchg
pop
dec
jmp
or
test
inc
cmp
mov
loopne
stos
lock
out
pop
pop
clc
mov
or
sub
les
imul
push
out
push
push
sub
shl
push
call
and
dec
pop
pop
push
call
mov
push
cmp
mov
paddsb
lock
int
sti
dec
sub
dec
cmpsb
mov
ja
stos
dec
in
adc
cli
cmp
inc
mov
push
pop
enter
inc
mov
mov
fadd
aaa
dec
sti
faddl
sbb
pusha
push
scas
fs
and
in
add
incb
sub
popa
cmp
xchg
lods
add
fiaddl
or
mov
or
dec
test
lfs
jnp
pop
mov
cli
hlt
sbbl
arpl
test
notb
fsub
pop
pop
xlat
pop
push
lcall
std
dec
fwait
stos
cmpsb
dec
out
add
mov
aam
btr
fdivrl
cwtl
ljmp
je
push
subb
lock
fwait
pusha
les
test
xor
cmp
sub
xor
loope
hlt
sub
sti
arpl
cmp
testb
sbb
ds
test
jl
and
iret
jmp
idivl
lea
shlb
mov
xor
inc
sub
inc
mov
jae
js
xchg
out
pushf
add
xor
shll
loopne
out
ja
mov
stc
add
pop
add
cmp
mov
mov
xchg
out
push
std
xchg
in
dec
lea
adc
sbb
xorl
jle
out
bound
scas
cmpsl
mov
pop
xchg
aam
push
sub
pop
push
test
repz
adc
mov
push
xor
jg
bound
data16
add
negb
stc
test
sahf
add
ds
es
xchg
testl
packuswb
jb
daa
mov
or
mul
push
cmpsl
sbb
psubw
call
xchg
adc
dec
insl
fsubrs
add
enter
xor
sbb
fwait
and
test
pop
pop
cmp
cmc
test
in
ret
mov
add
mov
mov
push
cld
adc
add
stos
adc
shl
xchg
fisttpl
jb
lret
or
vpor
data16
mov
dec
icebp
jns
cwtl
lret
movsl
add
bound
adc
push
ljmp
xchg
fs
xor
ficomps
adc
rcrb
bound
sub
fisubs
jbe
aad
add
xor
popf
addr16
push
dec
lea
jbe
sub
sbb
bound
mov
mov
loop
push
cmp
jo
lods
decl
cmc
test
leave
lret
pusha
nop
dec
imul
clc
shl
neg
xor
jmp
jl
lahf
sub
xchg
sub
movsb
fucomip
pop
test
outsl
out
xchg
xchg
leave
test
jnp
jo
pop
int
sbb
enter
push
movb
cmpb
sub
leave
mull
in
inc
rclb
and
cwtl
imul
movl
sbb
xor
lods
ror
outsb
loop
sbb
lea
mov
aas
fsubrl
int3
cld
scas
int
mov
iret
fst
inc
push
andb
jbe
test
xchg
sti
pop
dec
inc
icebp
mov
ljmp
inc
jno
decb
xor
test
xorl
iret
fwait
arpl
movsl
mov
gs
pop
inc
rcrb
lret
xchg
call
push
fsubrp
cs
sbb
lahf
push
push
repnz
testl
xor
inc
mov
mov
imul
adc
stc
dec
add
and
scas
jmp
inc
push
adc
dec
xchg
repz
add
test
int3
jns
in
xor
pusha
or
jmp
insl
xlat
pop
inc
mov
jb
rcr
rol
adc
pop
sub
mov
jecxz
mov
push
jmp
jb
push
cmpsb
sahf
mov
out
jns
lret
jno
mov
sbb
mov
insb
ja
outsl
or
dec
cmpsb
add
sub
inc
in
mov
or
jno
cmc
test
out
andb
pop
sti
mov
fistps
stc
ja
cmp
cmc
fstps
rcrb
stc
mov
xchg
pop
xlat
imul
pop
mov
pop
shl
fcmovu
test
push
call
mov
xor
sti
xchg
push
daa
jge
cmpsl
rcll
nop
into
inc
inc
fnstsw
loop
out
pop
xchg
ret
ja
aad
sbb
sbb
or
xor
repz
inc
rcll
mov
dec
cmp
rcrb
shrb
daa
in
in
push
mov
arpl
xchg
out
loopne
add
cmp
dec
rclb
movsb
lret
ja
sbb
and
sub
xchg
add
or
ret
in
shll
decb
int3
daa
mov
cmp
push
cmpsb
imul
push
clc
jg
adc
cmpb
push
loop
xchg
push
jns
shl
jb
xor
lcall
sar
adc
daa
insl
cmp
imul
pusha
shll
test
xor
push
mov
xchg
rol
dec
int
repz
int
sbb
lret
das
xor
sub
test
out
nop
jnp
add
cmp
stos
pop
jnp
dec
call
jnp
jmp
dec
dec
xor
and
mov
add
cmp
fsub
or
sarl
lret
sbb
arpl
lods
pop
repz
add
xchg
dec
out
xor
test
sbb
lods
mov
imul
cwtl
mov
lret
or
or
ret
call
bound
mov
imul
mov
ret
and
dec
repnz
out
movl
push
jecxz
movsb
jns
or
inc
repz
push
popf
testb
cmp
xchg
rclb
cwtl
sub
xorb
ret
insl
mov
inc
jns
mov
pop
sbbb
imul
add
ficomps
mov
mov
loop
add
hlt
push
sbb
out
add
add
das
lcall
or
shlb
insl
cs
push
jp
loopne
data16
dec
dec
inc
mov
mov
add
inc
in
pop
cmpsb
add
xchg
js
lret
jmp
fbld
cld
lret
pop
cmpl
mov
mov
push
int
cmp
xlat
ljmp
outsb
je
scas
loop
je
insl
cmp
jo
push
mov
scas
sub
xchg
pop
insl
jns
xchg
data16
fsubl
push
test
ret
stc
cmp
and
mov
pop
frstor
push
fsts
mov
lock
jb
imul
movsl
test
mov
pop
scas
jmp
cs
push
adc
xor
divb
hlt
cmovae
sbb
cli
outsb
popa
fisubrl
lods
xor
fwait
inc
xor
stos
and
mov
sbb
outsl
in
xchg
mov
mov
movsb
fisttps
sub
adc
sub
popa
out
lods
sbb
scas
adc
lods
fisubs
orb
pushf
aas
pop
ret
lea
push
sbb
cld
mov
cli
or
in
xor
dec
or
xor
aas
dec
enter
add
lret
insl
mov
jnp
jno
mov
sub
mov
xor
push
in
adc
dec
pop
push
test
aaa
clc
fstp
and
inc
jne
jge
lret
loop
and
dec
cld
mov
mov
in
ss
xor
cmp
xchg
mov
push
jbe
mov
daa
mov
fimuls
sti
dec
adc
arpl
fs
outsb
mov
xchg
hlt
mul
cmp
or
jno
cmp
dec
sbbb
jae
mov
jae
out
test
fs
jmp
ljmp
xlat
mov
push
cwtl
pop
add
pop
mov
into
movsb
rclb
insb
xchg
or
in
std
sbb
jno
mov
into
sar
loope
jb
inc
and
int
inc
xchg
ret
dec
ss
push
sahf
test
and
dec
pop
dec
inc
fistpll
fpatan
in
movl
imul
fistps
cmp
lods
lea
pop
push
out
dec
sub
dec
inc
mov
add
pop
pusha
and
loop
gs
cwtl
fstpl
mov
pop
ja
sbb
fwait
out
pop
mov
stos
cmpsl
mov
pop
xlat
adc
cs
cmp
mov
sbbl
sti
adc
inc
mov
mov
fwait
push
mov
dec
das
mov
mov
frstor
insl
mov
popa
sbb
mov
outsb
xchg
cmpsb
or
push
cli
cmc
mov
rcr
outsl
or
or
cmp
pusha
jno
dec
cmp
mov
mov
pop
inc
push
xor
je
ret
mov
loop
out
sub
push
jnp
in
add
cmp
movsb
xchg
dec
pop
sub
js
in
mov
stc
out
adc
and
push
jmp
xlat
adc
jbe
mov
mov
into
cmpsl
sbb
aas
test
jbe
pop
enter
add
mov
xlat
dec
loop
ret
pop
dec
inc
inc
test
mov
push
jle
add
data16
adc
sbb
fdivl
jle
sarb
insl
push
pop
mov
jno
rolb
and
stc
jmp
xchg
aam
inc
sub
lds
scas
les
push
out
cli
int
xchg
jmp
fcompl
fldcw
jo
and
push
popa
and
in
dec
adc
or
pop
pop
xchg
xchg
ds
pop
aas
fcoml
movsl
js
dec
cmp
mov
pop
and
adc
nop
inc
cmp
sbb
aaa
adc
mov
fstpt
cmp
orl
mov
sbb
mov
adc
test
lahf
sub
sub
mov
mov
movb
mov
push
adc
in
fwait
lods
popf
aam
addr16
addb
in
jg
inc
sub
mov
out
cltd
add
inc
imul
jo
pop
cwtl
mov
fsubrs
dec
push
in
andb
andl
je
pop
adc
mov
dec
ss
daa
movsb
push
pop
notb
cmp
mov
loopne
shrb
and
sbb
push
adc
ds
jno
jp
fmuls
mov
jo
jp
movsl
in
lods
mov
pop
sub
xlat
fsubl
enter
cmc
dec
adc
push
insb
mov
sub
or
sub
jbe
hlt
push
popf
cmp
mov
cli
sahf
push
sub
enter
push
sbb
lret
sahf
jp
and
std
sbb
xorb
sbbl
loope
out
mov
cmovo
or
xchg
push
lods
imul
dec
pop
add
cli
fidivl
sbb
sub
push
int3
test
out
dec
adc
jne
and
fstl
addr16
adc
cld
fmulp
sub
pushf
stc
sbb
jnp
adc
dec
dec
add
fistpl
call
xchg
pop
leave
jle
mov
xchg
push
jmp
push
outsl
cmovge
inc
pop
sub
mov
jnp
aam
mov
cmp
andl
sbb
pop
lahf
jmp
dec
cmpsb
loopne
stos
pop
mov
ret
loop
lcall
fcoml
pop
dec
add
cwtl
pop
mov
jb
mov
outsl
lds
jle
fwait
pop
fsubl
shlb
call
ficomps
push
push
ret
cwtl
and
jecxz
repz
xor
or
in
jno
xor
mov
aas
xchg
xor
sub
lods
in
and
push
mov
pop
test
pop
mov
inc
dec
mov
pop
incb
add
mov
lods
mov
dec
sub
in
gs
fistpll
movsl
pop
pop
and
in
sub
mov
push
cltd
pop
loop
rorl
into
inc
fisubl
adc
adc
xchg
roll
cmp
aam
dec
cwtl
pop
shlb
or
inc
adc
call
or
mov
hlt
mov
and
sbb
ret
push
xorps
jge
mov
rolb
dec
push
mov
iret
lods
mov
cli
xchg
fdiv
jno
jo
lods
out
and
pop
push
jp
fldenv
mov
loop
pop
js
dec
rcl
or
dec
aad
cmp
addr16
lahf
mov
xor
sub
adc
and
cmc
out
fisubl
mov
cmp
das
sbb
insb
adc
or
mov
or
sbb
and
sub
jne
ja
lock
cmp
cwtl
sub
sub
jge
mov
mov
pop
hlt
cmp
xor
stc
sahf
lret
nop
jne
jge
fsubrl
mov
pop
je
stos
xchg
inc
jno
pop
out
mov
dec
mul
testl
in
dec
mov
rcll
sbb
xchg
ret
dec
je,pt
bound
and
test
test
jns
sti
cmc
stos
stc
cli
push
ds
push
mov
pop
movsl
mov
sbb
inc
lret
fadds
pop
mov
pop
aaa
pop
jno
dec
pop
cli
adc
lds
sub
movsb
cmpsb
fs
xchg
dec
pop
mov
jecxz
cmp
subb
int3
mov
mov
add
dec
push
dec
enter
dec
or
je
mov
ret
out
dec
mov
sub
mov
push
ret
adc
xor
mov
lahf
pusha
sub
pop
mov
outsb
aas
pop
and
sarl
and
pop
jne
out
sarb
dec
xchg
outsl
data16
shl
loopw
sbb
inc
lds
fimuls
clc
push
lret
sarl
cmp
mov
jne
mov
stos
push
add
out
xor
push
or
jmp
aad
push
dec
stos
lret
ret
insl
jmp
insl
shll
jmp
les
fidivl
lahf
outsl
cmpsl
mov
nop
and
or
jb
and
ljmp
repz
ja
add
popa
mov
mov
jl
repnz
adc
ret
or
jbe
in
lret
jmp
imul
pop
lret
pop
ja
gs
and
pop
sahf
push
jo
mov
iret
add
notl
mov
cmpsb
and
dec
and
int3
jecxz
push
stos
cmc
push
and
push
pop
test
pop
scas
dec
xchg
rcrb
push
inc
xchg
rcl
loope
fs
nop
jmp
mov
addr16
loopne
push
jne
mov
cmpsl
sub
test
adc
movsb
jge
and
cmp
cmc
movsl
int3
cld
xor
pcmpeqb
lret
push
popf
sub
add
ja
sub
fidivrl
sbb
hlt
pop
jp
ja
add
cmc
xor
sbb
sub
mov
jmp
pop
mov
jl
dec
sub
cmp
xchg
xchg
insb
dec
fdivr
jecxz
mov
sub
mov
pop
loop
and
pop
sub
cli
cs
push
xchg
imul
dec
rorl
sub
idivl
jmp
mov
rclb
mov
bound
repz
clc
push
mov
pmaxub
dec
cmp
mov
rorb
movsb
jecxz
sub
je
cld
dec
test
push
xor
sub
pop
xchg
jl
add
cmp
dec
mov
test
js
stos
sub
pop
icebp
lea
cs
add
xchg
pop
or
mov
push
in
fstpt
mov
cld
popa
and
ret
in
or
mov
dec
mov
xchg
cmpsl
and
push
cmp
xchg
dec
aad
insl
mov
cwtl
xchg
popa
adc
sub
sub
ds
pop
xlat
repnz
adc
pop
loope
sti
roll
mov
mov
addr16
shll
jl
mov
and
je
xlat
dec
jmp
hlt
dec
jle
push
cmp
mov
xchg
inc
dec
mov
inc
push
dec
imul
lds
jbe
out
and
cmp
xchg
mov
xchg
pop
sub
sub
fcoml
add
dec
push
cmpsb
jne
jne
xchg
stos
ficoms
sub
enter
push
xchg
imul
xchg
mov
imul
mov
mov
hlt
xor
dec
dec
or
push
xchg
lret
mov
add
mov
sub
mov
fldl
mov
cmp
lret
push
rclb
mov
loopne
test
mov
fnstsw
push
fwait
xor
mov
xchg
dec
sarl
loopne
xchg
pop
push
loop
aam
xchg
mov
fcoml
packuswb
inc
movsb
mov
pusha
sbb
out
mov
ja
clc
aam
int
inc
cmpsl
mov
xchg
jp
and
mov
push
dec
scas
call
pop
add
orl
scas
imul
pushf
mov
clc
test
xor
jge
push
mov
pop
sub
mov
rolb
dec
cli
nop
pop
test
sub
mov
push
jge
mov
sub
jns
adc
ljmp
pop
sub
dec
sub
push
cmc
pop
clc
sbbb
push
add
loopne
add
icebp
movsb
dec
adc
push
mov
outsl
cwtl
cmp
sub
or
imulb
repz
sub
jae
mov
orb
iret
add
pop
imul
add
xchg
iret
das
in
test
dec
roll
repz
mov
clc
idivb
out
adc
adc
daa
add
sbb
xor
cmp
shl
lcall
cmpsl
lods
sub
cs
cmpsb
test
jne
imul
jle
cmp
shll
cmc
fsts
fcmovnu
cmc
mul
xchg
cltd
aad
sub
dec
sti
loope
cmp
mov
stc
jmp
movsb
mov
xchg
cmovae
aad
push
sub
sbb
aam
loope
cmpsl
subl
push
dec
or
lcall
cltd
push
and
fiadds
jb
int
sbb
and
pop
dec
sub
pop
cmp
addl
mov
mov
aas
ljmp
adc
cwtl
jbe
ficoml
call
jnp
mov
or
loope
sbb
pop
xchg
test
cmc
cmp
dec
jnp
jmp
testl
int3
jno
iret
jns
in
shrl
repz
dec
fsubrl
jo
imul
xor
fisubl
call
in
insb
xchg
fldl
pushf
add
shlb
es
popa
mov
imul
xor
cmp
testb
les
orb
mov
xchg
xor
xor
int3
mov
adc
and
bound
out
inc
lods
push
rcll
aaa
jg
testb
or
or
cmc
insb
cwtl
sub
jb
and
data16
fistpll
shrb
jmp
pop
imulb
sub
mov
or
sbb
stos
popf
xlat
aad
sbb
adc
scas
ds
or
popa
cmp
xchg
mov
test
and
inc
outsb
jl
mov
push
in
and
pop
ja
addr16
mov
and
sbb
std
inc
push
dec
cmpsb
jecxz
sbb
bswap
cmpsb
fwait
jecxz
mov
es
sbb
cmpsl
cmc
or
xorb
cmpsl
or
mov
adc
clc
mov
or
xchg
into
adc
mov
fwait
and
fbstp
movsl
sbb
xchg
jg
lods
jns
dec
insb
cmpsb
lock
xchg
cmp
add
ja
arpl
lret
sahf
sti
test
jle
push
int3
ret
cwtl
pop
xchg
mov
imul
aam
sbb
out
pop
into
push
dec
jae
pshufw
push
push
jmp
shl
push
mov
test
cmp
aam
mov
xchg
mov
fs
movl
adc
inc
mov
pop
mov
test
add
add
idiv
cmc
push
cmp
add
xchg
sbb
jb
dec
mov
cmp
lods
jb
decl
and
sub
cwtl
inc
int
data16
filds
popa
inc
repz
lods
add
fdivrl
inc
pusha
out
mov
sbb
jbe
or
adc
and
add
pop
ljmp
push
dec
add
fsubrs
mov
jo
fisttpl
xor
inc
ret
fidivrl
sbb
jne
cmp
adcb
xchg
insb
sbb
dec
lret
sahf
pop
mov
ret
add
rorl
int3
push
fistpl
rcrb
mov
xlat
ljmp
mov
mov
xor
push
cmp
and
push
xor
out
jbe
sub
mov
movsl
xchg
sbb
iret
inc
into
mov
sbb
std
clc
sub
jmp
adc
adc
fiadds
jne
sbb
pop
shrb
cmc
pop
lea
or
or
mov
lock
int3
sbb
jo
sub
inc
cs
movsl
insl
jg
int3
popf
xor
adc
cltd
sub
add
pushf
pop
loop
lea
enter
sub
packuswb
mov
shll
daa
dec
jo
int3
and
js
jmp
fdivrl
lahf
add
cmp
lea
iret
push
test
sub
mov
and
loope
xchg
rcll
inc
pop
outsb
mov
adc
mov
test
loopne
mov
and
daa
aam
pop
addr16
jo
imul
test
xor
ss
lods
lea
ja
xor
push
sbb
ret
adc
loop
out
xor
std
sbb
or
xchg
dec
inc
stos
push
in
bound
mov
lcall
leave
mov
pop
pop
xchg
mov
xor
lods
insb
shrb
jecxz
lcallw
shr
std
repz
lds
div
mov
ja
je
fnsave
cmpsb
jb
mov
ss
cmp
dec
xor
sub
lds
cs
shlb
mov
sbb
hlt
cmp
sbb
pop
inc
inc
mov
cld
in
xchg
push
jbe
out
daa
cmp
ja
mov
ss
dec
hlt
pop
cli
loopne
xor
xor
cmp
mov
out
sbb
in
jmp
mov
push
mov
jle
pusha
mov
in
mov
xchg
scas
ja
adc
gs
dec
aas
sbb
dec
xor
subb
pop
inc
enter
cs
gs
dec
push
sub
sub
cmpsb
mov
test
call
or
ret
push
cmp
test
push
xor
jno
lret
les
ror
loopne
pop
rolb
es
mov
pop
jno
jl
rcl
sub
inc
pushf
adc
jo
jmp
jae
jle
fmulp
xlat
and
sbb
dec
pop
ret
sbb
mov
cltd
mov
ja
xchg
sahf
pop
loop
pusha
push
aam
mov
add
scas
xor
fs
daa
mov
xor
insb
hlt
mov
lods
cmp
testl
mov
lcall
mov
dec
lret
push
xchg
mov
in
mov
mov
cltd
xchg
fstl
jo
outsb
orl
push
mov
cmpsl
pop
push
adc
mov
push
cmc
out
cmpsl
mov
int3
dec
cwtl
sarb
dec
lcall
loop
fwait
inc
lcall
loopne
sbb
inc
xchg
rcrb
iret
sbb
dec
mov
push
std
jae
iret
add
data16
mov
std
pop
add
scas
cltd
add
into
or
jg
int3
jnp
lock
xchg
jo
mov
mov
cwtl
mov
addr16
vcmpsd
imul
scas
lcall
das
inc
aaa
neg
mov
popa
out
mov
inc
dec
adc
xor
mov
jge
pusha
jno
add
pop
jno
xchg
jge
out
repnz
lret
sub
iret
sbb
int3
je
mov
cmp
lret
and
popf
and
xor
test
lret
call
inc
lods
jnp
mov
popf
aad
push
adc
xchg
mov
xchg
xchg
test
and
xchg
mov
xchg
adc
mov
in
aam
mov
in
or
dec
cld
and
jae
addr16
inc
int
movzbl
dec
push
sbb
mov
dec
int3
push
mov
cwtl
sub
cmp
mov
adc
repz
jnp
cltd
dec
push
push
test
stc
pop
jns
aaa
add
in
jnp
testl
outsb
mov
mov
pop
push
fdivr
dec
and
pop
push
sbb
push
push
cmp
ror
add
push
aas
outsb
scas
loope
pop
cmp
shlb
int
out
sbb
shrb
into
adc
inc
jecxz
and
xlat
inc
call
lock
mov
push
mov
dec
mov
loop
cmp
dec
std
mov
xchg
mov
lret
lods
push
mov
xor
cld
mov
out
sub
icebp
mov
stos
or
popf
js
and
ret
adcl
xchg
loop
pop
and
add
xor
arpl
mov
adc
mov
mov
jne
cmp
push
jecxz
cmp
dec
sbb
dec
xor
sbb
cmp
int
jmp
out
mov
fbld
xor
mov
cmpsb
ds
cwtl
aad
lret
loope
xchg
mov
lods
shrl
jo
sarl
int
mov
mov
push
sbb
fs
add
lahf
outsl
in
inc
mov
push
xor
sub
mov
stos
jae
jne
jmp
ljmp
addr16
std
shlb
adc
hlt
popf
popa
stc
stos
jl
xor
push
lock
test
lret
sub
popa
rep
sti
inc
push
mov
adc
rorl
or
imul
rolb
sbbb
inc
jne
call
push
stos
xchg
fildll
clc
pop
inc
push
into
imul
mov
jecxz
jbe
in
dec
pop
xchg
mov
fucom
pop
int
rorb
and
in
std
xor
test
push
pop
mov
jg
mov
popa
and
insl
push
xchg
sahf
dec
fidivs
fsts
pop
call
xor
je
adc
mov
js
sbb
daa
das
pop
mov
call
adc
add
dec
sub
pop
mov
xor
lret
popa
xor
jno
xor
subl
adc
mov
ret
add
push
lret
pusha
or
ljmp
cmp
lea
xchg
mov
cld
mov
imul
sub
arpl
push
gs
jbe
lds
xchg
push
push
xchg
cmp
cmp
push
mov
mov
fwait
nop
mov
dec
dec
dec
fcompl
ret
shrb
mov
cltd
pop
mov
sub
adc
xchg
fs
fdivrs
fs
sub
dec
mov
dec
mov
les
stos
cmp
insl
ss
or
out
dec
leave
push
das
xchg
rorl
adc
mov
subl
outsb
add
sahf
out
xor
mov
pop
into
push
es
jmp
pop
sahf
jl
rcll
gs
xchg
pop
sbb
inc
sub
mov
ss
jp
mov
cwtl
andb
loop
push
imul
dec
incb
pop
cmp
cmp
or
lods
push
scas
jno
lods
rcrb
aam
sahf
movsb
rorb
push
clc
push
xchg
jns
clc
and
rclb
test
test
xor
fucomp
ds
and
bound
mov
add
int
mov
lahf
popa
cld
repnz
inc
adc
jle
sub
icebp
add
mov
rorl
fadd
add
sub
mov
jbe
sbb
adc
ja
lds
in
stos
push
int
xor
int
and
mov
push
push
mov
jbe
aaa
lods
inc
pop
xchg
scas
fisubl
je
in
xor
divl
frstor
or
cwtl
dec
and
jne
add
mov
dec
ficomps
and
clc
xchg
sahf
addr16
out
and
mov
pop
loope
in
xchg
xchg
das
adc
jmp
imul
pop
adc
sarb
cltd
int3
sub
rcrl
xor
inc
cmovo
fnsave
rcll
adc
ds
das
bound
popl
sub
push
sar
js
jno
cmp
js
test
inc
cmp
cs
add
jbe
xor
mov
int
and
or
add
outsb
rcrl
push
dec
sub
jmp
stos
jne
hlt
xchg
mov
shrb
or
rcl
test
mov
mov
cmp
xor
aad
xchg
mov
cltd
je
mov
and
inc
shll
push
push
popf
cmp
mov
idivl
lods
cltd
repnz
jb
push
jno
mov
pop
xchg
cmp
ret
inc
sub
lret
mov
ss
xchg
in
in
shrb
push
iret
loope
ljmp
test
mov
mov
cmp
lds
mov
lret
das
push
fisubrs
lahf
push
ss
push
pop
cmp
sub
mov
jp
mov
mov
lods
sub
pop
or
xchg
arpl
popa
enter
pop
mov
pop
inc
testl
lea
push
jl
or
jmp
pusha
cmp
adc
push
lods
lea
mov
cmpsb
fsubl
sbb
mov
popa
jbe
mov
je
adc
sbb
dec
xor
xor
push
popf
js
pop
jnp
xor
insl
test
inc
add
xchg
mov
adc
out
dec
inc
lcall
mov
scas
cld
ljmp
inc
cmp
iret
inc
inc
lea
and
push
in
pop
inc
ret
out
dec
mov
mov
mov
fs
xchg
fwait
scas
dec
ss
adc
enter
inc
or
nop
inc
xchg
or
cmpsb
mov
pop
fsub
sar
rclb
test
dec
outsb
in
xchg
lcall
lret
jno
mov
mov
xchg
fists
into
out
sub
cmc
pushf
push
push
sbb
or
inc
mov
sbb
out
lds
sbb
mov
add
xchg
inc
scas
or
mov
cmp
mov
iret
mov
sahf
rclb
lods
push
test
xor
sub
xchg
cmp
xchg
dec
sti
test
fistpl
stos
popf
aas
and
mov
pusha
outsl
inc
sahf
mov
fmul
mov
les
cmp
add
inc
leave
or
mov
xor
add
jle
jg
pop
adc
mov
outsl
cwtl
mov
cmp
pop
push
push
shll
mov
cmp
repz
les
dec
stos
xor
gs
in
mov
lea
out
push
push
pop
aad
shrl
xchg
cmc
lret
dec
jmp
cmpsl
mov
xchg
mov
cmp
movsl
loopne
or
loope
mov
mov
addb
int3
loop
pop
popa
mov
test
cmpsb
incl
push
cmc
fwait
js
mov
data16
jne
orb
inc
inc
lds
mov
test
dec
sbbl
mov
cs
mov
mov
mov
nop
pop
add
jg
xor
imul
cpuid
iret
or
mov
pop
rorl
xlat
test
cmp
inc
pop
sbb
sbb
and
nop
push
stc
dec
fisttpll
dec
hlt
push
test
ss
add
dec
pop
das
mov
test
xor
sahf
das
xchg
ret
mov
mull
add
push
aam
push
mov
xor
arpl
push
cmpsb
loop
cltd
lds
shll
dec
ja
int3
icebp
cmc
and
and
mov
lret
rol
mov
jae
or
inc
push
pop
push
ret
flds
lea
fstps
insl
push
sbb
mov
pop
jg
and
test
sbb
cmp
adc
bound
fwait
xchg
cmp
push
dec
xor
cli
inc
mov
lock
xchg
dec
sub
sub
lods
dec
or
mov
fsts
ret
test
ror
pop
adc
loop
or
insb
les
ficoms
ljmp
mov
push
push
shll
dec
repnz
mov
xchg
stos
fdivrs
scas
insb
lock
out
aad
ds
int
mov
cwtl
mov
aas
fcomps
xchg
lahf
clc
and
push
jnp
sbb
mov
es
aaa
cmp
jg
xchg
test
jp
inc
push
aas
add
fstp
stos
push
fbld
fdivs
ret
cltd
pushf
ja
arpl
dec
cmc
es
inc
rcr
pop
mov
jnp
popf
mov
int3
pop
jno
mov
xchg
addr16
pop
cmp
push
rcrb
mov
lahf
sub
pop
out
nop
lahf
and
sti
adc
in
adc
int3
movb
sbb
inc
lock
nop
and
mov
enter
sub
mov
pop
lea
push
push
mov
mov
lods
out
adc
sub
mov
mov
ret
mov
dec
cmp
mov
push
adc
aaa
xchg
out
leave
std
push
adc
pop
push
adc
sti
iret
and
enter
adc
sub
addr16
in
pushf
imul
jo
push
jo
subb
xchg
into
mov
add
fld
add
jle
cmpsb
cs
cmpsl
push
jg
adc
hlt
inc
dec
fildl
test
pop
sub
xor
xor
pop
loopne
mov
sahf
or
pop
idivb
mov
push
push
push
imull
pop
xor
sub
xchg
or
leave
jl
outsl
into
cwtl
push
ljmp
dec
xor
xor
jne
add
jnp
lods
dec
enter
lods
out
cmc
cmp
push
push
mov
sbb
mov
insb
stos
test
rol
add
and
lret
pop
xor
imul
loopne
nop
xlat
int
fnstsw
cli
push
jbe
add
jne
xchg
xchg
stc
jle
xchg
rcll
cli
inc
or
stos
mov
stos
sbb
pop
stc
mov
push
aas
inc
jae
insl
xor
push
popa
icebp
jae
jmp
inc
outsl
dec
dec
sub
mov
push
xchg
sarl
scas
ja
adc
inc
mov
push
push
ja
mov
int
popa
xlat
mov
hlt
negb
xor
jnp
pusha
test
push
faddl
in
cmp
jge
sub
mov
fwait
push
es
adc
test
test
aas
faddl
push
ret
scas
mov
lret
adc
jno
ja
push
xor
jp
adc
fbstp
lock
add
stos
adc
mov
sti
shlb
pop
jbe
imul
add
pop
imul
rorb
arpl
inc
es
outsb
add
outsb
push
cmp
test
cmp
push
js
cmpsl
fcoml
sbb
mov
xchg
xor
mov
mov
dec
scas
inc
jge
pop
push
pop
inc
xchg
mov
inc
sbb
xchg
outsb
and
push
outsb
jns
cwtl
cmp
test
mov
adc
pop
filds
mov
mov
mov
push
shll
push
ret
cmp
and
stos
in
pop
add
insb
jmp
add
test
fsubs
jo
ljmp
pop
and
pop
enter
adc
scas
call
push
mov
xor
fwait
pop
mov
cmpsl
jmp
fldcw
rcrl
arpl
pop
mov
ljmp
fisubrl
push
dec
push
in
cli
pop
stos
mov
xchg
stos
add
arpl
addb
mov
push
mov
mov
push
xchg
mov
cmpsb
sahf
popl
mov
ret
pop
fiaddl
add
cmp
mov
cltd
xchg
mov
xchg
pop
bound
adc
xchg
dec
lcall
xor
and
fwait
pop
jmp
add
jecxz
push
cmp
call
pushf
dec
in
inc
cmp
cli
jmp
sub
fdivrl
push
dec
pop
mov
scas
adc
loope
ljmp
ja
add
jnp
adc
aas
stc
test
into
cmpb
and
and
jne
sbb
aam
xchg
stc
pop
inc
xor
mov
popa
clc
mov
pop
jnp
stos
cmp
js
mov
push
mov
daa
jnp
inc
lret
or
push
pop
add
std
cmp
mov
das
andb
hlt
enterw
mov
adc
mov
aad
adc
cld
into
in
or
cli
jb
outsl
lret
jo
xor
mov
mov
cmc
aas
jecxz
std
popa
dec
jne
out
sbb
notl
test
sti
sbb
add
mov
aam
lret
enter
jbe
pop
test
sub
and
das
push
pop
fwait
push
mov
repz
lea
es
adc
cwtl
and
mov
shrl
ss
mov
movsl
jb
pop
inc
sbb
sub
lods
insl
mov
repnz
mov
addr16
push
xor
popa
pushf
xor
mov
adc
ss
inc
or
add
push
and
push
adc
push
ret
or
pop
jns
mov
stos
movsl
xchg
or
les
mov
adc
jo
fdivrl
xor
xor
push
mov
mov
pusha
inc
loope
inc
mov
xchg
test
lods
pushf
fcom
push
cmpsb
pop
ss
hlt
inc
loopne
push
frstor
xchg
addr16
outsb
seto
fstpt
out
lock
jae
xchg
ret
mov
sbb
stos
bsr
inc
sbb
arpl
push
mov
frstor
add
inc
fmul
mov
dec
xchg
adc
dec
mov
dec
insl
cli
jb
dec
cli
and
adc
sti
das
into
mov
add
mov
pop
cmpsb
cmpsl
in
add
stos
jo
or
xchg
ret
ret
lcall
data16
mov
js
jbe
clc
fisubrs
hlt
int
pop
inc
pop
xchg
inc
neg
bound
adc
lock
jmp
xchg
scas
jge
mov
sub
add
sbb
test
mov
sub
in
mov
sub
mov
push
mov
call
jb
mov
icebp
repz
rcrl
fiadds
nop
fistl
aam
inc
sbb
bound
popa
outsb
loop
inc
fildl
xchg
sbb
lods
xchg
pop
aad
aam
mov
int
xchg
jns
mov
fnstenv
ret
lret
popf
jnp
faddl
mov
mov
vmread
push
sbb
data16
and
jmp
mov
test
xor
outsl
cwtl
adc
mov
and
or
lcall
popa
push
xor
mov
pop
adc
pop
inc
dec
fs
xchg
push
movsl
xchg
sub
push
in
sbb
mov
test
icebp
pop
sub
lahf
jmp
mov
andl
sbb
ret
sub
out
pushl
or
je
and
cld
js
jae
in
aaa
aad
aas
push
cmp
insl
mov
cmpsb
and
cmc
sub
push
repz
jle
xchg
jo
cmp
call
out
mov
jp
pop
push
into
jge
xor
adc
mov
mov
addr16
addr16
addb
ret
and
movsl
ret
adc
cmc
push
cmp
int
pop
orb
mov
fildll
sub
hlt
int
mov
adcl
fidivs
xor
fistpll
insb
pop
lods
mov
fwait
mov
mov
mov
mov
scas
push
call
out
jnp
and
add
out
fstps
lret
mov
fstpt
stos
cmp
out
insb
xchg
rcll
sub
xor
mov
adc
js
inc
repnz
mov
push
stc
push
scas
mov
jmp
dec
arpl
out
mov
add
cmpsl
jmp
ja
in
jo
or
jae
or
and
ret
jnp
or
sub
repnz
mov
or
loop
hlt
cmpsb
inc
int3
dec
xchg
jl
scas
bound
jmp
bound
inc
jge
pushl
inc
outsl
mov
dec
int3
int
inc
pop
inc
xchg
or
lods
mov
pop
dec
test
dec
out
adc
into
in
popf
scas
ljmp
add
or
enter
stos
mov
pop
push
enter
jecxz
stos
mull
ret
roll
repnz
adc
lds
push
push
leave
rcll
jecxz
rorl
in
rcrl
xor
les
in
mov
ret
sti
shrl
pop
dec
sub
js
pop
jns
mov
add
rcrb
cmc
add
xorl
add
pop
xor
jmp
jp
and
cmp
aaa
adc
out
xchg
mov
push
aas
xor
push
lods
sub
adc
ror
int
dec
int
cmc
and
scas
push
mov
aas
inc
push
ss
and
xor
dec
repnz
hlt
insb
stos
sub
inc
lret
sbb
mov
test
inc
mov
inc
outsb
aam
dec
jg
shll
adc
je
mov
sti
mov
out
leave
scas
ret
call
mov
aaa
enter
push
mov
ds
sbb
pop
lds
mov
and
inc
cltd
enter
mov
lea
fstpl
insb
mov
imul
xlat
pop
leave
ss
mov
mov
arpl
aaa
sti
cmp
mov
mov
je
ficoms
xor
sbb
inc
jge
test
adc
push
and
xchg
ret
jbe
pop
xor
sbb
fprem
cwtl
add
test
and
sub
aad
loope
sub
push
das
je
rolb
inc
cmpsb
addr16
mov
int3
mov
out
xor
enter
mov
lahf
mov
mov
sbb
sbb
clc
outsl
iret
push
out
stc
call
repnz
mov
mov
rolb
cmp
dec
aaa
int
pusha
mov
mov
mov
dec
sbb
push
fwait
mov
mov
aaa
jnp
in
ja
movb
aad
idivb
dec
dec
fs
hlt
loop
insl
hlt
or
mov
aaa
out
leave
jb
out
jbe
mov
sub
push
mov
mov
aaa
adc
hlt
pop
dec
xchg
xor
je
out
dec
adc
mov
mov
and
add
adc
lods
adc
xchg
sarl
das
ret
nop
mov
rcll
adc
daa
cmp
adc
jp
or
bound
fidivl
inc
inc
jle
ds
int3
cmpsl
inc
call
cs
loopne
mov
dec
xchg
jl
xor
lods
test
xor
xchg
jmp
inc
inc
jg
xchg
mov
ja
negl
dec
lahf
mov
lods
nop
pop
sub
jns
mov
adc
fcomip
dec
or
ret
mov
and
pop
jae
fstps
cwtl
push
sbb
adcl
xor
inc
dec
test
pusha
clc
pop
mov
push
add
out
sbb
scas
out
inc
popf
es
mov
push
repnz
fwait
mov
loopne
loope
jg
xchg
jae
test
add
or
loopne
scas
mov
fstl
imul
arpl
loopne
add
sbb
sti
mov
adc
out
jp
pop
fwait
inc
inc
or
mov
enter
rclb
in
jne
jmp
idivb
loope
xor
pop
sbb
aaa
inc
ret
cmpsb
xchg
sub
xor
or
mov
dec
add
aam
dec
inc
lods
aas
push
stos
in
push
insl
dec
push
push
add
nop
rcll
mov
push
lock
sub
in
ficomps
popa
seto
ljmp
popf
sub
lods
push
xor
js
shr
mov
mov
mov
scas
mov
sbb
jb
movsb
xchg
adc
xor
movsl
out
dec
outsb
jp
icebp
cmpsb
cmp
popf
enter
sub
or
mull
add
jmp
mov
lea
in
sub
out
adc
repz
and
dec
loopne
xchg
xchg
cmp
insl
in
pop
fs
out
mov
or
add
dec
std
jnp
ja
lcall
mov
outsb
repnz
pop
pusha
iret
loopne
arpl
fstl
imul
dec
push
insb
cmp
cmp
or
inc
push
out
jge
dec
imul
dec
pusha
push
push
push
xor
fiadds
dec
mov
aaa
push
enter
jne
imul
mov
mov
sti
sahf
fwait
xlat
lods
loopne
cmp
outsb
pushf
scas
ss
pop
jnp
pusha
clc
movsb
fwait
int3
push
in
and
xlat
aam
es
out
add
add
movsb
sbb
jmp
iret
and
dec
stc
add
adc
pop
mov
sti
cmp
adc
cmpb
scas
and
push
xor
lock
cmp
xchg
pop
fcomps
outsl
testb
mov
test
cwtl
leave
inc
lods
push
add
xor
flds
cmpsb
sti
adc
fildll
dec
pop
push
push
inc
sub
ss
mov
test
or
lods
aas
pop
sub
enter
jle
lods
inc
mov
jmp
dec
or
aad
jp
adc
push
or
cs
clc
fwait
sahf
test
xlat
or
sub
fiadds
addr16
adc
jge
pop
lret
cmc
mov
dec
and
shrb
aas
pop
jbe
add
sbb
icebp
out
leave
scas
adcl
outsb
xchg
or
ds
adc
lds
cmp
stc
shl
lret
xchg
mov
adc
js
sbb
addr16
fst
or
js
call
jle
jbe
inc
stos
pop
push
bound
out
lret
or
test
fsubrs
jmp
ret
stos
or
xchg
iret
std
add
leave
fs
inc
cmp
inc
loope
cltd
cmp
push
sbb
cli
jnp
outsl
fwait
mov
inc
sbbl
lret
cmp
jnp
mov
adc
arpl
pushf
sahf
pop
mov
mov
mull
sub
shlb
js
pop
xor
lea
push
cmp
loop
cmp
nop
sub
xchg
mov
test
arpl
lea
mov
xchg
loopne
jl
jl
cmp
add
jmp
cli
xchg
push
outsl
movsl
clc
pusha
addb
push
ss
into
mov
xor
and
sbb
mov
mov
mov
adc
push
out
cmc
cmp
das
pop
push
add
aam
ret
jle
xor
movb
adc
dec
addr16
cs
xlat
adc
pushf
imul
adc
xchg
cwtl
out
arpl
leave
xchg
add
push
xor
enter
sarl
insb
inc
out
aas
pop
sti
fdivrl
pusha
scas
lahf
mov
jmp
neg
sbb
notl
and
mov
or
mov
popf
mov
cli
and
movsb
xchg
mov
mov
outsb
dec
repnz
mov
add
xchg
push
add
test
mov
mov
jne
cmc
push
scas
add
loope
call
mov
sti
xorb
inc
jle
fdivs
jmp
into
insl
pop
mov
lods
loop
xor
fbstp
mov
push
xlat
mov
aam
inc
ds
mov
inc
fnstenv
in
push
and
sbb
sub
movb
not
int
cltd
scas
lahf
je
inc
cmc
lock
pop
sbb
scas
push
movsb
into
test
jns
sbbl
mov
test
test
aaa
loopne
dec
dec
jae,pt
xchg
cmp
fs
sbb
cwtl
out
jne
push
pusha
sbb
out
fbstp
xor
xchg
cli
std
sbb
std
mov
adc
je
fmuls
cmpsl
push
mov
push
cmp
out
dec
add
jle
jns
lods
jge
shll
mov
or
sarb
lods
es
insl
cwtl
xor
sahf
mov
jl
xchg
loop
insl
inc
stc
add
push
cmp
nop
jl
popf
cmp
in
and
out
jge
iret
adc
mov
pop
push
insb
clc
ljmp
adc
lods
adc
mov
mov
sub
or
iret
dec
pusha
add
push
xor
xor
sub
ret
xor
sti
mov
rorb
jae
xchg
cmpsl
dec
test
or
bound
out
pop
mov
add
xor
mov
sub
aaa
loopne
rclb
sbb
xor
clc
xchg
mov
fsubrs
mov
loopne
mov
jns
stos
lret
inc
mov
aaa
and
mov
push
fcoml
and
outsl
cmp
enter
es
iret
sub
shl
cmp
add
dec
sbb
in
cmp
es
lock
cwtl
rcrb
sub
add
adc
push
push
pop
mov
test
gs
inc
cmpb
sub
nop
in
imul
sbb
outsb
xchg
jno
jle
in
in
jae
test
shrb
cli
sub
mov
jae
jmp
repz
xchg
cmp
xchg
or
sub
mov
dec
adc
mov
das
fdivs
push
xor
adc
sbb
insb
subl
ss
jl
mov
xorb
add
out
shlb
lea
lret
call
js
sbb
lods
popa
rclb
iret
out
jmp
fs
pop
jle
loope
dec
out
cmpsb
rcll
cmp
rol
sub
mov
mov
scas
jecxz
sahf
mov
call
and
iret
sub
popf
jmp
pop
fcomps
mov
mov
adc
addr16
sub
or
inc
mov
bound
dec
fs
out
scas
mov
push
add
insl
leave
jl
shrl
xlat
aam
fwait
rcrl
cmp
jno
jmp
and
pop
dec
in
mov
stos
sub
mov
mov
mov
adc
and
repz
in
adc
mov
out
lods
cli
aad
cmp
hlt
cmp
sub
sbb
mov
loope
std
sahf
inc
inc
mov
dec
ds
cltd
xchg
leave
mov
sbb
aam
xchg
sbb
aam
mov
inc
xchg
lock
cmp
jl
inc
out
cmpsb
iret
and
pop
lcall
loopne
cmp
xlat
adc
sub
mov
sti
add
jne
xor
iret
addr16
pop
xchg
imul
cmp
adc
mov
sbb
mov
jns
pop
shll
jmp
ds
movsb
arpl
mov
rol
addr16
fistl
popa
lock
cmpsl
out
fcoms
dec
lea
into
in
pop
cmc
sahf
retw
mov
aad
jmp
lcall
out
xor
or
mov
add
cmp
push
mov
cli
scas
rcl
jbe
scas
jecxz
pop
jo
inc
ret
test
inc
jl
movsl
sarl
sub
push
ret
imul
fs
inc
loopne
rorb
fistpll
jl
mov
orb
mov
inc
sub
push
mov
lahf
sbb
mov
xchg
and
xchg
pushf
jle
mov
mov
pop
clc
sub
adc
xchg
pop
arpl
je
mov
sub
sub
stos
xor
std
dec
imul
inc
xchg
repz
sahf
lcall
push
repz
xchg
fiaddl
imul
sbb
adc
stc
xchg
rcll
bound
fs
adc
or
mov
mov
mov
cmp
mov
sbbl
xor
dec
lret
movsb
imul
xchg
mov
dec
rol
inc
cli
movsb
mov
and
idivb
fisttps
mov
lods
loop
dec
xor
das
mov
jae
jp
push
fs
loopne
les
clc
xchg
xchg
out
sub
inc
rcll
sub
dec
mov
push
dec
ss
sbb
fistl
cld
xor
add
daa
call
ljmp
arpl
repnz
dec
mov
cmp
stos
cld
js
xchg
outsl
icebp
add
inc
pusha
xchg
and
push
jae
out
and
int3
and
jmp
push
xchg
xor
repz
dec
sbb
jae
popa
lcall
inc
cwtl
cld
xchg
xor
jecxz,pn
inc
jno
out
push
popl
fsubr
divl
cmp
or
sbb
mov
xchg
xchg
sub
pop
ret
sub
jmp
pop
out
arpl
cmp
pop
out
cs
minps
inc
call
mov
je
pop
js
xor
jnp
dec
fbstp
les
sub
cmp
xchg
dec
push
jecxz
jp
sbbb
cmp
and
std
popf
xchg
icebp
xor
jge
fdivrl
mov
stc
and
mov
repnz
dec
push
push
jo
adcl
or
cld
add
and
imul
or
out
xchg
adc
je
dec
stos
shlb
mov
pop
lcall
push
cmp
imul
cmp
enter
lods
dec
jecxz
dec
mov
cmp
pop
jg
roll
out
ds
scas
pop
pusha
push
into
lret
leave
sub
mov
inc
js
lods
mov
sbb
leave
test
mov
pop
xchg
push
sub
xchg
pop
mov
inc
and
pop
arpl
stc
ret
push
jl
push
pop
in
mov
adc
inc
mov
add
pop
in
inc
jp
not
in
pop
inc
jne
jo
fwait
scas
and
hlt
lods
ss
cmp
shll
lock
cltd
fwait
imul
mov
fwait
fldl
inc
popf
popa
negb
repnz
xchg
push
mov
sbb
mov
jae
out
insb
cltd
push
jbe
enter
aas
pop
push
fsubrl
daa
push
pop
pushf
xchg
cmp
std
scas
daa
ret
xor
pop
leave
adc
in
int
int3
mov
jns
js
jae
xchg
mov
popf
push
fisubl
xchg
xlat
imul
imul
dec
loope
cmp
mov
and
mov
loope
mov
imul
orb
xchg
sbb
addr16
aam
rcl
adc
fnsave
out
mov
pusha
notl
lds
jno
jne
fildll
xor
aad
test
xlat
aam
add
mov
insl
mov
jb
pop
or
int3
out
rep
jb
aaa
rcr
pop
sub
cli
jl
in
cltd
popa
mov
jp
imull
mov
fldenv
mov
pop
aad
xchg
dec
or
les
inc
lea
mov
shrb
divl
popa
cmp
dec
movsl
sbb
lods
jae
dec
add
insl
push
out
mov
and
pop
cmc
xchg
jecxz
mov
inc
push
mov
dec
pushf
pushf
adc
clc
xor
shll
xchg
outsl
cs
test
mov
cmc
jbe
add
xchg
dec
insl
mov
xlat
push
pop
lcall
cs
inc
loop
lret
push
imul
lods
in
int
lock
int3
dec
push
pop
loopne
hlt
movsb
adc
addr16
pop
pushf
leave
clc
mov
jle
or
sarl
scas
push
and
addr16
mov
popf
pop
pusha
cmp
in
xchg
mov
leave
push
cmp
pop
jge
lods
xlat
incb
adc
pop
shrb
dec
cmpsb
movsb
das
aam
jg
les
shr
cld
sub
or
outsb
cli
add
js
pop
and
mov
sahf
jmp
push
loop
jg
or
fwait
mov
enter
dec
cs
push
adc
jno
cmpsl
jecxz
mov
xchg
inc
and
lret
and
sub
mov
fcmovu
and
jne
push
pop
sti
mov
push
pop
mov
cmp
and
adc
outsl
gs
add
mov
xor
mov
inc
or
lods
rcll
and
inc
inc
rcll
sub
add
je
mov
pop
pop
int
rclb
loop
jno
loope
sub
lea
or
lock
das
xor
xchg
out
sarl
mov
lds
sbbb
pop
pusha
jns
push
imul
cwtl
stos
in
mov
jnp
lock
stos
ret
stos
adc
mov
jae
adc
jno
out
inc
rcrb
jg
and
jne
shll
test
out
andb
mov
out
movsb
mov
xchg
mov
sbb
jne
adc
and
das
mov
push
insl
addb
lds
pop
dec
pop
or
pop
mov
sub
lods
sarl
mov
push
pop
jg
pop
orb
fidivrs
push
mov
out
in
pop
dec
lock
and
outsb
mov
pop
add
das
loope
add
adc
sbb
adc
imul
aad
cmc
daa
push
fdivr
push
xor
jno
std
dec
mov
outsb
jle
ljmp
fnstsw
lahf
mov
insb
aam
test
xor
cmp
movsb
pop
test
inc
gs
popa
fdivs
jmp
ss
ljmp
inc
sub
roll
xor
and
bound
ret
add
adc
ret
test
scas
xchg
inc
inc
mov
jl
push
je
int3
lock
add
lahf
cmp
ret
sub
xor
mov
and
xor
mov
mov
cld
lahf
iret
shlb
int
sbb
cmp
mov
adc
sub
sub
icebp
je
xor
filds
sub
push
xor
dec
lock
jne
cwtl
and
sbb
and
or
shl
popf
push
aas
mov
in
and
xor
popa
sbb
rcrl
cmp
bound
aam
adc
outsb
jge
sbb
dec
aas
cld
sub
xor
mov
je
mov
xchg
test
xor
lods
pop
sub
adc
cmpsb
stos
sub
add
movl
out
push
test
in
scas
mov
lret
mov
test
jge
stc
lret
stos
daa
enter
jns
into
in
nop
das
mov
leave
sub
fsubrs
xlat
fcomps
mov
hlt
sub
xor
mov
cs
aas
mov
jmp
jge
hlt
adc
dec
mov
sbb
lods
lahf
add
je
jno
mov
push
jns
cmc
mov
imul
lods
test
jp
shll
ds
mov
das
xor
mov
adc
inc
adc
adc
add
iret
mov
gs
leave
push
test
jbe
pop
hlt
xor
scas
dec
fwait
jb
aas
std
mov
jae
pop
dec
fwait
loop
stos
repnz
pop
nop
push
lea
pop
cmpsb
add
arpl
pop
int
mov
out
jno
out
lock
mov
jb
out
or
lea
mov
popa
inc
push
nop
dec
sbb
js
sub
ret
es
add
ljmp
jmp
cmp
jle
popa
mov
mov
and
stc
sub
lret
inc
mov
inc
inc
int
mov
add
movsl
pop
adc
test
push
sbb
fs
cwtl
repz
daa
leave
stos
ja
neg
add
icebp
mov
mov
pop
lock
cli
xor
or
les
and
dec
cmp
sub
and
pushw
inc
dec
jo
jno
popf
roll
shrb
das
jecxz
leave
pop
xlat
loopne
mov
mov
inc
iret
push
popf
cmp
repnz
out
jecxz
mov
xchg
ljmp
inc
inc
pop
xchg
icebp
ret
jb
std
xchg
loop
mov
out
jne
inc
sbb
or
arpl
sub
push
mov
loop
test
in
lea
cmp
sub
scas
loope
dec
cld
loopne
pop
test
out
jae
add
mov
or
pop
mov
imul
cmpsl
mov
inc
mov
out
bound
lret
mov
xor
aas
cmp
lahf
dec
jns
xchg
push
int
jmp
push
aaa
mov
jb
push
xchg
add
pop
cmp
mov
xchg
pop
mov
loopne
pusha
ljmp
aad
out
cltd
call
iret
add
aaa
mov
mov
pop
mov
push
sub
into
fcomi
cmc
cmp
mov
add
jb
push
stos
scas
jge
or
out
stc
imulb
movsl
jg
dec
clc
adc
xchg
adc
or
cwtl
cli
loop
out
xor
je
push
or
into
insb
stos
hlt
push
sbb
xchg
stos
lods
mov
insl
test
jne
jg
push
xchg
popf
xor
daa
repz
lods
fisubrl
lods
push
orl
xchg
xchg
cmpsl
clc
test
fwait
push
ret
push
add
add
mov
popf
testb
fnsave
jle
cmc
pop
sahf
stos
pop
jo
shlb
jecxz
je
sbb
mov
pop
call
dec
dec
loopne
sbb
or
jbe
movsl
or
pop
popf
and
popf
and
and
ret
push
daa
in
insb
adc
rcll
xchg
stc
loope
divb
fstl
scas
sahf
xchg
inc
cs
clc
hlt
sbb
dec
daa
xor
cmc
popf
imul
or
leave
sbb
fmuls
inc
add
cs
jle
stc
test
test
divl
xchg
ja
loopne
mov
ret
pop
insb
push
pop
xchg
inc
mov
ja
dec
pop
xlat
imul
sbb
xchg
and
imul
shll
add
es
lock
daa
test
dec
je
movsl
inc
xchg
bound
jp
mov
mov
out
ror
popa
ljmp
cmpsl
fstpt
mov
fcoms
frstor
xchg
icebp
jge
sub
rcl
dec
xor
into
scas
or
pop
gs
push
sahf
gs
cld
scas
movsl
jnp
daa
push
pop
pushf
sbb
test
int3
in
jg
push
sti
and
add
sbb
push
call
push
mov
mov
adc
inc
in
jp
scas
cmp
iret
mov
in
jne
shlb
cmc
pop
pop
push
gs
sub
orl
xor
or
pop
movsl
sarb
xchg
dec
and
jp
shl
jmp
pop
sub
dec
pop
es
inc
test
int3
or
js
add
loopne
enter
add
cs
dec
xchg
xor
addr16
sub
mov
fwait
lods
mov
aam
adc
jge
pop
nop
aas
repnz
mov
adc
push
mov
push
or
pop
mov
xorl
leave
or
mov
mov
or
psubsb
mov
divb
cmpsl
sti
jo
scas
mov
cltd
outsb
push
js
icebp
xchg
lock
out
xchg
and
stos
jl
mov
js
mov
sbb
jle
sbb
stos
push
gs
xor
bound
orl
icebp
in
ret
pop
dec
mov
mov
mov
adcb
push
cli
mov
out
es
andl
jg
repnz
popa
pop
mov
rcr
dec
cmp
shlb
js
movsl
clc
dec
mov
or
jno
inc
dec
ds
mov
imul
cmp
outsl
loopne
adc
fcmovnb
cwtl
imul
cmpsb
cmpsl
out
stos
mov
test
cmp
mov
xor
pop
test
or
dec
lret
rcrl
dec
stc
ljmp
xorb
out
sbb
out
hlt
mov
lret
out
xchg
aad
inc
mov
gs
cwtl
xor
lret
iret
fdivrl
nop
into
jne
bound
xchg
fidivrs
mov
flds
cmp
pop
into
loopne
cmp
mov
repnz
lret
add
out
cmp
jae
push
les
mov
imul
lods
cld
mov
push
push
jno
inc
adc
lock
testl
inc
scas
negb
dec
dec
sbb
push
arpl
fwait
push
addr16
xchg
mov
js
inc
fsubp
aad
or
and
pop
adc
push
and
add
sbb
xlat
xchg
mov
cli
test
and
adc
xor
movsb
lahf
mov
insl
sub
or
xor
dec
jl
popf
or
mov
inc
xchg
das
mov
lds
inc
sbb
sub
shrl
or
outsb
xchg
or
fdivrl
mov
mov
stos
mov
jbe
mov
aas
jo
mov
jmp
std
arpl
pop
jno
pop
jge
test
mov
jns
mov
cmp
dec
mov
repz
jg
jp
out
aas
cmp
xchg
jae
loop
aad
jp
dec
repnz
mov
into
hlt
xchg
pop
decl
in
in
push
enter
xchg
out
lods
fdiv
paddw
or
xchg
xor
xor
cmp
js
sbb
test
dec
int3
pop
test
xchg
fidivs
dec
cmp
add
cmp
mov
mov
loopne
xor
sub
stos
push
jne
and
xor
sub
sarb
rolb
xchg
add
ret
test
ffree
popf
dec
sub
ja
cmpsl
sbb
cli
lock
or
pop
out
stos
push
jbe
jbe
cmpsl
jae
add
dec
add
fdivrl
cmp
inc
mov
mov
ds
push
mov
push
mov
adc
sbb
sub
mov
sub
popa
pop
or
pop
ret
dec
inc
push
sbb
xchg
out
sbb
ret
mov
push
cmp
fcmovnbe
jle
xchg
mov
push
push
mov
push
or
stos
mov
mov
mov
sbb
xchg
xchg
push
mov
mov
fisubl
fnstcw
mov
int3
pop
cli
fucomip
and
sub
sub
out
sub
aas
cmp
xor
mov
std
pop
sub
in
ret
std
sahf
mov
rorb
lahf
and
push
sbb
xor
pushf
dec
xor
addr16
inc
mov
pop
xchg
push
or
aad
mov
and
jnp
iret
ss
out
stos
or
cmpsl
sbb
mov
cmp
insl
outsl
fimuls
or
mov
sar
xor
mov
icebp
mov
daa
stos
fcoms
and
xchg
fdivr
mov
jno
shrl
inc
dec
shll
inc
nop
pop
lods
outsl
adc
fstp
int
adc
adc
mov
imul
lahf
aas
or
addr16
adc
call
clc
pushf
jp
in
push
xchg
inc
fsubl
add
cmpl
mov
push
inc
popf
mov
fs
mov
inc
jae
roll
sbb
ret
rcrl
shrl
sbb
lock
jne
and
jl
ljmp
push
add
push
jmp
test
movsb
cmpb
inc
mov
int
jmp
mov
push
xor
scas
and
mov
pushf
push
js
addr16
mov
xchg
out
jmp
shll
cltd
popa
mov
and
cmp
push
pop
popf
in
imul
iret
push
mov
js
aad
das
adc
xchg
enter
popf
inc
pop
addr16
fdiv
call
loope
addb
mov
sub
ja
lret
adc
notb
test
jge
mov
ss
lds
stos
xchg
mov
mov
inc
mov
push
pop
mov
test
jae
sti
sub
cwtl
dec
enter
cmp
add
pop
add
test
jo
insl
adc
imul
jle
sbb
pushf
jo
imul
adc
or
xchg
xor
cmp
pop
xchg
ljmp
dec
inc
bound
pusha
jp
cmpl
ja
push
pop
fdivp
xchg
nop
ds
dec
mov
push
ss
scas
add
out
dec
fwait
rcll
out
dec
jns
add
and
decl
les
jp
and
iretw
xchg
int
pop
and
lods
leave
pop
push
and
dec
ret
jl
test
aaa
loopne
sub
jns
add
mov
outsb
mov
mov
dec
push
cmp
sub
jmp
mov
and
mov
mov
xlat
and
fnstcw
popfw
leave
cltd
cmp
mov
gs
or
cmpsb
mov
pop
cld
adc
push
pop
or
dec
jle
jbe
sub
push
or
xchg
xor
fstpl
pop
adc
popf
xor
andl
pop
iret
push
sti
into
jle
xor
orb
cwtl
inc
push
add
sar
shrl
dec
sbb
int3
rclb
sub
shlb
scas
xchg
das
sub
mov
dec
rclb
js
ja
jg
xchg
add
mov
push
pop
jle
xor
imul
inc
jae
lock
cmp
sarl
mov
mov
push
out
mov
test
lds
fwait
outsb
cmpsb
insl
push
mov
and
in
pop
ds
sub
repz
pop
lea
jns
mov
imul
sub
mov
sbb
push
dec
in
pop
cli
adcb
xchg
mov
cmpsb
mov
cltd
lahf
sub
hlt
rcrb
in
pop
or
inc
aad
cmc
or
mov
mov
sub
negl
cmp
add
fdivrs
mov
fnstsw
xchg
nop
add
sbb
cmpsl
jl
inc
js
pop
mov
sub
test
idiv
pop
je
and
mov
or
pop
xchg
repz
mov
pop
push
test
adc
in
shlb
out
mov
cli
out
pop
jae
js
sbb
loopne
lcall
xor
movsl
lods
scas
sbb
sub
lds
shll
icebp
ret
ja
addr16
mov
mov
mov
adc
xchg
and
xor
mov
push
add
lds
imul
mov
bound
and
inc
pop
ret
fldt
outsb
mov
push
cld
mov
shlb
movsl
lahf
xchg
jmp
add
fucom
js
insl
ja
or
in
pop
dec
or
jge
pop
push
sbb
cmpsb
movsb
imul
xchg
push
nop
xchg
mov
xor
hlt
pushf
cmpb
loope
adc
push
popa
sub
call
ret
icebp
xor
test
jmp
rcrb
mov
jge
clc
cmp
push
add
outsl
into
xlat
jecxz
sti
lret
lds
mov
not
out
pushf
mov
jnp
call
int
pusha
and
js
cltd
inc
cmp
cld
insl
into
je
arpl
cwtl
mov
mov
xor
jno
lds
sbb
into
xor
xor
test
std
mov
push
je
jp
test
add
std
xor
lods
pushf
addr16
and
ja
cmp
xor
cmp
scas
dec
mov
fsubrl
dec
scas
xor
push
and
lcall
jge
std
out
xchg
and
cwtl
jne
mov
xchg
mov
add
jmp
out
out
or
fwait
mov
xor
inc
mov
push
cmp
call
xor
mov
and
lahf
je
mov
cmc
xchg
adc
jae
adc
jno
test
popa
jo
xchg
push
and
stc
lahf
cltd
inc
das
test
cmp
int
ljmp
lahf
and
adc
js
pop
cs
test
dec
xorl
lahf
bound
mov
ret
into
sbb
push
out
iret
out
add
enter
movsb
loop
sbbb
ja
cmp
push
rcll
adcb
jae
pop
mov
sub
jae
xchg
mov
stos
pop
ret
adc
fsub
cmp
loopne
cmp
fstpl
add
xor
push
or
pop
pop
add
jg
in
jb
cmp
scas
dec
mov
pop
fdivrs
mov
cmp
xchg
ja
int
mov
mov
and
lahf
int3
push
outsb
dec
xchg
pop
outsb
inc
cmp
in
ja
mov
hlt
or
add
cmp
shl
in
xchg
lea
notb
or
rcll
sbb
test
jae
lock
out
inc
in
mov
lret
test
je
push
scas
xchg
shlb
xchg
pop
out
add
sarb
sub
cltd
repnz
in
aas
aas
mov
icebp
icebp
mov
gs
xchg
inc
cs
xlat
dec
mov
jae
pop
dec
addl
les
mov
fisubs
notb
notl
fwait
adc
jb
pusha
and
out
xchg
jle
mov
pop
cmp
mov
sbb
push
out
inc
insl
call
stc
pop
hlt
dec
outsb
repnz
and
int3
sub
lds
and
inc
mov
daa
fcmove
push
jle
pop
inc
outsl
aam
scas
jbe
adc
and
data16
in
addb
xor
xor
push
cmpsl
rorb
test
sub
xchg
sub
out
mov
fwait
andl
int3
mov
xchg
or
xor
addr16
xchg
mov
rorb
stos
sahf
jmp
aam
mov
and
mov
popa
loope
push
add
out
dec
dec
leave
lods
loopne
ficomps
leave
repnz
jp
aam
out
out
lds
adc
cmpsb
or
sbb
add
pop
mov
jbe
jbe
or
int3
xor
notb
xchg
push
nop
js
dec
fiadds
jmp
cmp
pop
cmp
in
sub
add
xchg
lods
lock
icebp
inc
sub
int3
popf
shrb
fsubrs
jnp
movsl
hlt
int3
je
xor
mov
stos
mov
shll
jp
aas
push
loop
push
les
jo
ficoms
test
aaa
fwait
out
idivl
xchg
xchg
fmul
decl
in
cmp
dec
mov
pop
sub
enter
mov
and
push
xchg
pop
arpl
lret
stc
fmull
jo
pop
fwait
sub
je
sbb
xor
dec
dec
dec
cmp
hlt
pop
insb
mov
mov
xor
in
jae
jl
rcll
cmp
movsb
fnstcw
mov
outsl
xchg
or
les
lahf
mov
xchg
xchg
dec
add
xchg
sbb
or
push
pop
leave
movsl
xchg
fildl
sbb
pop
test
mov
sub
aaa
and
dec
dec
inc
mov
in
jno
add
inc
mov
imul
iret
adc
loopne
imul
push
fbstp
pop
jae
ss
push
pop
fbstp
jmp
or
xchg
fimull
push
jno
adc
js
inc
push
jmp
sub
push
pushl
rclb
sbb
dec
je
pop
jnp
jb
and
inc
gs
or
out
fistl
fbld
test
adc
mov
mov
enter
sbb
aad
dec
xchg
scas
jecxz
test
mov
push
sahf
rcrb
imul
xor
in
bound
outsb
imul
mov
into
lahf
cmp
mov
push
les
mov
mov
lds
loopne
repnz
insl
or
pusha
jge
jp
xchg
test
xchg
xchg
imul
push
mul
dec
adc
sub
dec
cmpsb
fsub
fs
mov
sub
xor
fimuls
dec
pop
mov
movsb
dec
cld
adc
bnd
lock
jmp
xchg
push
jl
std
add
fsubrl
mov
jo
and
in
jg
and
sub
push
cmp
pop
andl
jmp
aas
push
mov
fsubs
int
out
push
push
call
adc
sub
push
mov
in
add
mov
ret
cmp
sbb
xchg
jnp
call
arpl
jecxz
push
push
jae
scas
inc
enter
xlat
jecxz
lods
jmp
ret
out
mov
or
sub
je
mov
cli
inc
jge
das
popa
xchg
and
lret
insl
mov
shll
out
pop
mov
push
scas
or
inc
call
dec
mov
xchg
sarb
push
fcomps
cmp
es
ljmp
sti
inc
call
cmpb
jecxz
ficoms
icebp
cmp
jl
les
cmp
sarl
movsb
mov
test
or
lahf
int
mov
pop
add
and
aam
sbb
pop
insl
and
pusha
xchg
lods
adc
aad
xor
out
int
sub
pop
aad
push
push
sub
out
dec
outsl
jnp
add
add
cmp
fisubs
and
insl
pop
xchg
in
cmp
and
adcl
add
sbb
jno
pop
mov
iret
xchg
jecxz
cmp
decb
sub
test
dec
cld
rcrl
mov
cmpsl
rcl
xchg
mov
adc
stos
fs
inc
jge
and
cwtl
add
arpl
xlat
repnz
mov
sti
jne
sbb
int
shrb
dec
mov
cmp
mov
push
jmp
dec
mov
lret
or
out
jge
push
xchg
lods
add
das
addb
lret
add
ja
hlt
aas
sbb
mov
lret
ss
lods
sahf
test
fwait
in
inc
mov
sbb
adc
hlt
push
addb
jno
in
adc
sbb
in
inc
jbe
iret
mov
mov
mov
lds
in
enter
in
jbe
ret
aaa
jno
or
xchg
xchg
and
out
xchg
dec
orb
dec
hlt
cld
adc
es
popa
pushf
jp
cwtl
pop
mov
sbbl
mov
and
mov
ror
fiadds
or
aas
add
xchg
lahf
xchg
inc
push
sti
mov
add
roll
sbb
cmpsl
das
add
adc
and
mov
inc
pop
adc
out
negl
xchg
enter
std
add
rcll
add
insl
jae
mov
jecxz
pop
mov
stos
je
xchg
mov
add
repz
out
sbb
pop
aas
adc
std
jmp
jecxz
jg
add
xchg
and
xchg
call
xchg
cmp
mov
ss
push
lahf
loopne
push
das
cmc
out
bound
outsl
in
push
sbb
sbb
jmp
cmc
enter
mov
mov
adc
xor
out
push
testl
rolb
fidivrs
in
xchg
outsb
mov
imul
movsl
pushf
dec
adc
outsl
cmp
push
pushf
sbb
mov
mov
xlat
aas
out
mov
jo
enter
icebp
xor
sub
ja
sub
cld
es
insb
pushf
push
lock
add
lret
loop
adc
aam
push
shlb
push
or
inc
push
roll
mov
xor
pop
sbb
scas
inc
or
xor
pop
hlt
mov
mov
jmp
and
clc
movsb
jp
int3
jmp
popa
lea
or
push
inc
and
arpl
je
xchg
mov
adc
movl
mov
loopne
testb
jbe
bound
dec
xchg
mov
push
aas
jmp
movsb
lea
mov
lea
mov
jbe
rcrb
rolb
xchg
inc
fidivrs
std
and
add
inc
mov
push
outsl
lcall
out
adc
add
jl
mov
mov
aaa
in
nop
cmp
sbb
lea
test
pop
es
lret
push
hlt
add
mov
rorl
sub
xlat
mov
sti
daa
xor
push
jle
sahf
cs
add
xorl
sub
in
xor
push
rdtsc
sub
cmc
push
mov
lods
or
push
aad
hlt
mov
adc
add
sub
loop
shrb
inc
mov
shll
inc
in
imul
mov
int3
fisubrl
or
out
gs
jnp
iret
rorl
sbb
cs
xor
push
cltd
mov
or
xor
xchg
and
aaa
fildll
stos
loopne
xchg
aam
or
lcall
cmc
stc
es
or
pop
xchg
ficoml
lahf
xor
pop
scas
sub
popf
mov
dec
mov
inc
add
ret
mov
push
mov
push
pop
outsb
lea
rol
pop
or
sub
fstl
insl
std
iret
ljmp
xor
cs
pop
xor
dec
addr16
fiaddl
inc
rorl
pop
fcoms
mov
sub
add
fadds
xchg
imul
mov
mov
adc
leave
addr16
fsubrl
or
call
mov
aad
push
or
mov
xchg
loope
mov
pushf
jmp
movsb
bnd
push
or
stc
insl
add
arpl
mov
mov
push
fmuls
cwtl
adc
jno
imul
push
sbb
iret
out
ret
jg
sbb
sub
inc
stc
cwtl
ret
mov
add
add
out
mov
add
mov
cmp
sub
popf
sbb
xchg
cs
push
adc
sbb
cmp
jg
jns
idivl
jp
push
lret
sub
insl
lods
pop
lret
lahf
inc
mov
lock
ret
ljmp
ds
mov
sub
stos
xor
iret
xchg
imul
or
mov
mov
add
mov
addr16
sub
mov
mov
sub
dec
dec
dec
stos
clc
mov
add
xor
add
sub
lods
ds
ljmp
mov
movsl
dec
sarl
adc
add
icebp
fs
jb
mov
pop
enter
insb
rolb
mov
xchg
ret
jmp
sbb
sub
cmpsl
mov
icebp
loopne
arpl
sbb
out
push
and
xor
xchg
push
mov
cli
adc
lea
push
lds
pop
dec
bound
cmpsb
inc
das
cmp
dec
in
sbb
nop
jmp
jo
dec
ja
mov
fimuls
das
call
lods
outsl
aam
test
dec
lods
inc
insl
test
cld
and
add
scas
movsl
insl
mov
xchg
sti
mov
std
inc
sbb
or
cvttps2pi
negb
shlb
enter
or
pushf
mov
pop
int
ljmp
les
sbb
sub
dec
xchg
stos
inc
cld
xchg
xchg
lods
jecxz
push
sub
test
test
imull
adc
jecxz
xor
jecxz
xchg
pop
arpl
cmc
xchg
loopne
push
or
pop
cli
xchg
aaa
call
jmp
in
in
aad
mov
sbbl
or
push
repnz
gs
lods
icebp
gs
ret
je
dec
fstpl
loop
sub
popf
mov
dec
fcompl
lcall
pop
jl
mov
xchg
not
add
ret
inc
and
rcrl
ror
xor
movsl
mov
pop
lock
adc
jge
icebp
xchg
imul
cmp
stos
dec
ds
push
xchg
xor
dec
decb
push
cld
lds
inc
mov
mov
mov
sbb
mov
adc
ja
pop
lret
shll
fadd
fistps
cld
jbe
and
xchg
adc
mov
mov
repnz
int3
adc
add
adc
fmull
insl
adc
dec
or
shrl
sub
lahf
dec
es
jmp
int3
loope
and
add
mov
xchg
into
loopne
jl
add
sbb
or
insl
clc
ss
xchg
xchg
in
mov
xchg
inc
push
push
inc
cmp
lods
mov
xor
orb
out
dec
adc
push
fcoms
in
ret
and
stos
cmpsl
test
pop
daa
not
lea
xchg
push
jae
xchg
pop
jo
dec
inc
cmpsb
dec
dec
repnz
es
icebp
loop
movsb
nop
pop
lds
clc
xor
inc
fldcw
fstpt
insl
loopne
shrl
xchg
inc
sub
jg
push
jg
stos
rolb
int
pop
xchg
jnp
jle
out
stos
jnp
adc
popl
cmp
popa
es
dec
les
jbe
xor
mov
cmpsl
and
dec
lea
lret
adc
lods
adc
pop
loope
xchg
sahf
cwtl
or
scas
std
adc
push
inc
inc
in
ds
mov
inc
pushl
enter
xor
jge
in
stc
out
rorb
jo
cmpsl
fxch
mov
aam
jb
or
hlt
pop
jo
jmp
fwait
stc
inc
xlat
jae
sub
cmp
push
xor
pop
lds
sbb
cwtl
iret
popa
pushf
cmpsl
and
fists
mov
mov
pop
call
xor
jge
add
aas
enter
test
or
mov
xchg
repnz
adc
out
mov
in
cmp
cmc
jbe
and
int
xlat
mov
je
pop
add
push
shrl
test
lods
dec
sbb
inc
push
aam
pop
mov
and
js
outsb
mov
mov
dec
xchg
imulb
jnp
push
xor
cmpl
lret
scas
call
push
out
pop
mov
mov
movsb
test
cmp
in
mov
jmp
xlat
cmp
pop
push
push
dec
mov
leave
xlat
aad
jae
xchg
inc
and
movsb
sar
lahf
js
and
or
dec
mov
sbb
sub
or
sub
xlat
sub
fnstcw
inc
pop
pop
adc
out
mov
xchg
cmp
xchg
cmpsb
mov
push
in
movsl
pop
js
sbb
pop
dec
mov
popf
and
sbb
inc
jmp
and
js
adc
dec
cltd
aad
jno
lcall
push
jle
push
sahf
xchg
loopne
or
ss
push
das
aad
iret
mov
loop
mov
rcrb
negb
push
aaa
inc
push
inc
arpl
clc
mov
jbe
mov
call
mov
or
lcall
popa
xchg
mov
imul
cmp
imul
jmp
data16
mov
inc
jmp
cltd
in
or
cmp
rol
cli
aam
xor
lea
xor
popf
rolb
jb
mov
mov
push
pusha
xor
jp
movsb
push
mov
and
fwait
imul
rol
push
jo
pusha
sub
lods
insb
arpl
add
xchg
mov
and
dec
push
popa
mov
jno
cli
rorl
cmc
jae
ljmp
inc
sub
sbb
hlt
push
xchg
popf
and
ficomps
inc
xor
xchg
and
in
xchg
clc
loopne
push
sbb
mov
lods
push
lret
outsb
fdiv
andl
mov
iret
jmp
or
int
jle
ret
mov
inc
dec
mov
aaa
jo
enter
cmp
xor
pushf
ret
popa
add
cwtl
inc
jle
or
call
dec
out
xor
jecxz
cmp
sbb
add
inc
jmp
cmp
daa
movsb
jne
lcall
popa
push
pop
mov
cmp
out
push
addr16
jl
pop
sub
lidtl
inc
mov
je
sbb
inc
add
jns
add
cmp
cltd
mov
pop
sub
xchg
adc
dec
push
xorl
jo
jns
cmp
push
movsb
call
xchg
lret
sbb
xor
out
mov
jae
or
fcoms
movsl
jns
push
bound
xor
and
xchg
sub
aad
int
mov
and
cmp
cmp
jnp
pushf
or
cmpps
xchg
cs
into
or
daa
sbb
roll
or
dec
repnz
lahf
js,pn
push
xchg
imul
outsb
leave
sub
sbb
mov
outsl
mov
pop
int
mov
pushf
loop
dec
adc
arpl
adc
scas
sbb
push
js
inc
or
adc
adc
xor
pop
out
clc
cwtl
sahf
fidivs
mov
xchg
pop
nop
lods
xor
in
inc
sub
out
xor
xor
movsl
and
bound
fs
bnd
lahf
das
sub
imul
ret
jno
aas
mov
ficomps
jecxz
jmp
inc
stos
push
cmpsl
addr16
or
add
aaa
sbb
scas
out
fsts
ja
add
lea
xchg
je
adc
or
mov
nop
scas
sub
jle
cmpsl
dec
pop
adc
cmp
mov
add
aad
stc
roll
mov
push
or
out
push
adc
jp
test
xchg
cmp
or
mov
movsl
mov
pushl
aam
dec
lret
mov
in
push
imul
inc
cli
and
push
push
rcrb
dec
pop
push
mov
jmp
sub
or
mov
in
jg
mov
push
inc
mov
push
cmp
lds
sbb
mov
pusha
cmp
xchg
out
inc
icebp
inc
mov
test
sbb
lds
loope
loopne
cmp
pop
loop
or
dec
cmc
add
stc
inc
sbb
sbb
daa
outsl
fisubl
mov
scas
dec
xchg
mov
jge
lds
xchg
stc
mov
fstl
call
pop
push
cmp
and
mov
xor
pop
jno
and
pop
addr16
out
mov
adc
mov
cli
push
xchg
ret
addr16
int
jle
pop
mov
movsb
mov
adc
std
mov
jl
test
ljmp
jns
or
xlat
cs
gs
je
xor
jbe
fistpl
sahf
jae
loope
cs
and
mov
stos
xchg
lahf
call
pop
sub
add
add
ss
xor
sbb
inc
jb
pop
mov
jb
xchg
pop
loopne
xchg
jecxz
mov
cmp
push
mov
cmc
mov
or
inc
scas
and
outsb
test
mov
test
mov
sub
lods
mov
out
stos
xchg
out
add
and
std
cmp
ret
test
cmpsl
and
in
dec
or
inc
cmpsb
addr16
in
push
jb
and
or
sbb
pop
sbb
ss
jne
mov
xorb
sbbl
adc
cwtd
je
test
mov
inc
dec
push
cmp
lcall
fcoms
sbb
in
xor
inc
and
outsb
inc
add
movsl
dec
je
stc
lods
or
aas
xchg
out
sahf
decl
inc
mov
fmuls
cmpsb
icebp
add
xchg
filds
adc
insb
dec
testl
pushf
or
shll
in
lea
mov
adc
loopne
push
mov
hlt
in
rcrl
in
fnstenv
aad
mov
insl
and
push
test
inc
push
shl
clc
outsb
mov
daa
rcr
mov
or
jecxz
outsl
aam
ljmp
cmpsb
sbb
decb
imul
lahf
stos
lods
lock
subl
inc
xchg
loope
push
fwait
xlat
adc
out
js
ljmp
jo
inc
push
lret
adc
jl
adc
cs
enter
lahf
std
test
mov
push
adc
std
insl
arpl
fwait
rorb
jae
lock
pusha
cmp
mov
in
fmull
jo
outsl
inc
xor
in
sbb
cwtl
push
into
rcl
cmpsb
xchg
sbb
sub
sub
mov
fsubl
cwtl
test
outsl
je
and
xor
ds
push
jge
rcl
push
aas
stc
cmpb
pushf
xchg
mov
dec
shll
jne
xor
pushf
pushf
ror
cmc
pop
je
pushf
xor
adc
mov
ljmp
push
jge
pop
sbbb
outsb
mull
add
mov
adc
cmp
lods
pusha
cmc
cmp
pusha
adc
mov
mov
fidivs
inc
jo
xchg
data16
push
call
push
sub
xor
xor
rcrb
outsl
sbb
sub
call
ja
sahf
les
cmc
mov
cmp
fdivrl
fistps
xchg
out
push
inc
add
mov
jo
push
or
jnp
mov
xchg
rolb
cmp
movb
mov
xor
out
pop
dec
xchg
or
enter
js
movsb
add
cmp
or
dec
jne
dec
fcomip
add
pushf
cld
pop
push
mov
das
mov
test
mov
pop
jg
adc
stc
cmp
test
dec
movsl
subl
inc
sub
into
xcrypt-ecb
cmpsl
or
out
sub
mov
roll
shr
xor
gs
cmp
xchg
push
out
xor
fidivrl
movsb
aam
xor
pushf
cmc
icebp
push
lods
dec
ret
movsb
je
ja
adc
daa
inc
int3
inc
popf
xlat
jno
insl
incb
add
aam
out
adc
or
adc
sbb
bound
aaa
stc
out
mov
cld
dec
shlb
mov
and
lret
or
test
mov
loope
mov
cmpsb
les
jne
cmpsl
pop
inc
sbb
add
jg
pop
adc
mov
call
out
pop
or
out
test
push
cmp
or
cmp
mov
cmpsb
icebp
sti
push
les
cmp
inc
mov
scas
mov
pop
mov
mov
cmpsb
lods
adcb
lret
adc
inc
ret
add
ret
icebp
mov
jl
xchg
imul
and
mov
xlat
push
mov
mov
aaa
je
mov
testb
test
scas
and
idivb
and
mov
test
xchg
loope
and
lods
scas
pushf
dec
stos
out
cmp
es
jb
sub
xchg
sub
mov
push
in
add
push
xor
lock
sub
jns
mov
xorb
ds
or
sbb
cli
pop
aam
jae
andl
rclb
pop
test
enter
ss
out
xchg
out
das
xchg
shr
mov
pop
sbb
sbbl
out
sub
cmc
rol
stos
inc
sub
sbb
mov
cmc
push
cmp
cld
sub
dec
xlat
inc
pop
add
jecxz
mov
fdivr
mov
cltd
daa
mov
pop
sub
inc
addb
xor
into
pop
popaw
cmp
xor
pop
pop
xchg
sbb
stos
test
mov
flds
iret
pusha
dec
dec
jg
sarl
mov
lock
shll
je
mov
fidivrs
mov
jnp
inc
dec
sbb
mov
cwtl
sub
jle
addl
sub
stos
xor
jmp
mov
pop
dec
js
lret
mov
lahf
sub
mov
add
or
stc
leave
jo
bound
jbe
jl
mov
lea
pop
cmpsl
das
dec
cmp
in
enter
ljmp
mov
stos
adc
je
xchg
loope
fmuls
fstps
sahf
imul
imul
mov
in
inc
mov
mov
inc
jmp
jp
add
mov
loopne
in
mov
movsb
rcl
sbb
pop
fisubrs
ds
or
sbb
mov
or
mov
mov
mov
jl
mov
xlat
jnp
mov
mov
in
jne
bound
sti
push
test
sar
lret
cmc
int3
rclb
int
pop
aas
insb
jmp
insl
mov
inc
stc
xchg
fstl
jne
add
or
stc
sub
outsb
mov
fstp
repz
sbb
mov
int
mov
jae
push
add
data16
jb
xchg
jns
dec
push
jmp
aaa
inc
inc
fldl
sub
or
or
push
pop
mov
ret
jle
test
cmp
cmp
fcompl
inc
ss
sbb
mov
imul
dec
lods
loop
xor
sub
dec
jecxz
out
scas
xor
dec
js
dec
enter
mov
clc
push
fidivs
push
or
in
popa
ljmp
xor
lcall
int3
loopne
xlat
adc
mov
repz
adc
popf
or
pop
dec
scas
jbe,pn
pusha
data16
imul
es
ja
lods
outsb
sbb
std
push
out
cmp
sahf
cmp
hlt
dec
cs
call
xor
xor
mov
and
cmp
das
incl
sub
sahf
mov
sub
xor
imul
aaa
or
push
shlb
mov
adcl
sbb
subl
xchg
add
shrb
out
das
leave
add
jb
sahf
test
lcall
mov
mov
popf
xor
cmpsb
push
js
cltd
scas
movsb
mov
nop
sub
sub
enter
mov
adc
dec
jp
sub
repnz
mov
push
in
outsl
sahf
repz
mov
cld
stc
mov
mov
xchg
mov
cwtl
dec
rorl
sub
cmp
cmp
out
xchg
aaa
xchg
stc
sbb
arpl
scas
or
and
ljmp
jg
inc
mov
or
and
cmp
and
dec
sti
or
sbb
stos
out
lds
mov
dec
pushf
out
inc
mov
enter
mov
cmpl
test
sub
es
mov
fstpl
jmp
ret
push
insb
repnz
cmp
loope
outsb
push
lahf
out
ret
les
mov
xor
dec
das
es
jge
add
sub
xchg
pop
shlb
pusha
jmp
idivl
mov
cmp
rcl
shr
fldt
and
insl
xor
or
cmpsb
int
mov
and
cmp
inc
cmp
sbb
xor
insb
je
and
ret
leave
jnp
jmp
add
mov
mov
and
in
xor
cmp
push
aaa
jno
jg
jns
xchg
imul
dec
out
jp
testb
pop
push
fbld
sbb
xchg
xorl
neg
out
test
or
loopne
add
fcomps
cmp
and
push
sub
cmp
push
cli
xor
adc
adc
adc
adc
jmp
imul
call
jo
test
pop
imul
xlat
push
or
pop
push
jge
mov
ret
push
and
lea
movl
push
or
inc
repz
xor
out
jae
sahf
mov
cmpsb
sbbb
inc
sub
pop
arpl
cmp
jmp
xor
jle
add
push
mov
push
fisttpl
subl
inc
mov
push
fimuls
pop
flds
pop
pop
pop
addr16
xchg
insl
aam
pop
adc
pushf
imul
xchg
inc
es
mov
mov
pop
cmp
xchg
sbb
imul
sub
sbb
pop
add
cmp
ret
cmpsb
inc
fidivs
aas
sti
or
insb
in
inc
inc
xchg
test
xchg
and
jb
mov
ljmp
jge
xchg
sub
xchg
out
adc
ret
data16
add
mov
fimull
addb
cmp
ficoms
or
push
or
scas
jle
mov
lret
sub
jne
mov
pop
mov
mov
cmc
adc
push
dec
insb
xlat
xchg
mov
jae
jp
xchg
clc
pop
fisttps
orb
insl
add
mov
fs
xlat
test
mov
scas
pusha
incb
testb
nop
inc
dec
hlt
mov
or
cmpsl
mov
int3
mov
inc
scas
pop
addr16
pop
push
dec
lret
pop
fnstenv
jg
inc
pop
testb
ljmp
cmp
pop
jae
cmp
ss
cld
push
adc
adc
jno
out
mov
aas
pop
push
sbb
inc
add
push
pop
outsl
test
scas
push
xchg
mov
fwait
dec
sti
add
enter
mov
pop
mov
in
mov
mov
and
xchg
testb
mov
dec
add
mov
fdivs
jb
push
xchg
clc
mov
icebp
xchg
pop
jne
jl
push
dec
push
aaa
mov
insl
shlb
repz
mov
pop
xchg
jne
pop
sbb
mov
movsl
loop
jle
mov
mov
sub
popa
es
pop
out
cmpsb
pop
lods
into
ret
rcrb
adc
push
inc
fcompl
cmp
inc
mov
push
push
or
xchg
sub
push
mov
push
adc
cld
sbbl
pop
and
mov
test
imul
jmp
fs
adc
sub
dec
fwait
mov
and
dec
enter
sub
push
lret
sarb
lahf
je
daa
shlb
stc
or
cmp
icebp
fidivrl
mov
movsb
mov
cwtl
push
xor
sbb
fiadds
scas
xchg
mov
in
enter
xor
aaa
mov
inc
cmp
mov
push
xor
xchg
pop
mov
ljmp
mov
cmp
imul
sbb
js
jbe
sbb
xchg
xchg
jp
movsl
jb
dec
loope
jle
fdivl
loopne
sbb
xor
out
int
mov
cmpsl
pop
mov
adc
call
or
aam
push
push
je
jns
cmpsl
pop
movsl
sbb
dec
sub
lret
or
cld
fstl
xchg
cmpb
jno
pop
rol
and
mov
movsl
ljmp
sbb
mul
bound
js
fwait
leave
push
fucomp
fmulp
and
add
aas
int3
lcall
sub
repnz
cmpsb
mov
sbb
daa
jns
push
mov
dec
popf
mov
jno
dec
mov
jae
and
jle
es
test
dec
imul
pop
sbb
enter
loopne
arpl
iret
inc
aam
xor
out
push
add
sub
lea
and
sbb
adc
mov
out
jbe
popf
lahf
aad
inc
push
mov
pop
cmp
dec
xchg
dec
rol
push
cwtl
in
fiadds
in
sub
in
xchg
mov
iret
sub
xchg
mov
jmp
xor
cmp
xchg
in
and
jb
lret
pop
into
or
pusha
sub
jno
rorb
iret
mov
test
in
push
out
jae
inc
inc
gs
cltd
int
loope
sub
mov
mov
inc
test
inc
mov
fstl
and
pusha
mov
ja
dec
dec
mov
arpl
ds
or
roll
and
sub
mov
sahf
add
and
lret
ret
imul
mov
adc
mov
lods
sbb
aam
cmp
push
in
in
iret
pop
dec
sbb
imul
push
sub
loop
popl
mov
mov
das
mov
inc
int
incb
dec
insl
pop
ja
push
mov
hlt
bound
dec
mov
sub
sub
push
out
push
jbe
jne
xor
aas
insl
adc
push
sub
mov
in
pop
add
jecxz
pop
mov
cmp
cmc
mov
pop
out
popf
jns
hlt
subb
cmp
rorl
mov
add
jmp
adc
mov
adc
mov
xchg
sub
sbb
gs
into
mov
aad
xchg
sub
cmpsl
and
mov
dec
lret
sub
pop
arpl
push
les
fmul
dec
inc
xchg
out
test
mov
fdivl
sbb
imul
adc
in
cmc
pop
jp
bound
out
add
imul
push
dec
pusha
adc
insb
jo
cmp
outsb
and
xchg
push
cmp
and
test
aas
imul
out
pop
mov
add
jg
add
ljmp
daa
ljmp
gs
rcrl
ret
cmp
and
push
lods
addb
adc
out
push
inc
sub
lock
pop
xchg
xchg
inc
xchg
out
xchg
rcr
add
and
data16
and
xchg
jnp
add
rcll
aaa
test
adc
mov
mov
jl
inc
pusha
in
pushf
xchg
sub
xchg
mov
pop
cmpsl
out
push
mov
pop
sub
or
leave
pop
pop
xchg
pushf
push
pop
test
inc
and
cmc
push
push
mov
add
sub
decl
push
daa
sbb
stos
mov
or
sub
loope
shlb
stos
jmp
jbe
mov
out
jnp
xchg
lods
ss
xchg
cmc
pop
cmp
in
pop
cmp
xchg
xor
mov
adc
xchg
ret
stos
pop
jnp
js
out
cmpsl
mov
add
shl
popa
mov
stc
ret
leave
jns
lock
scas
cmp
push
mov
inc
mov
fiaddl
cld
mov
and
out
sub
dec
dec
mov
jae
jecxz
movsb
pop
pop
xor
pop
mov
push
or
push
xor
stc
xor
mov
in
dec
xor
adcb
xchg
movsl
popf
and
mov
inc
dec
mov
sbb
inc
insl
dec
and
sarl
and
ds
pop
gs
add
push
dec
push
loop
inc
jp
cs
push
lea
in
push
lcall
addl
xchg
scas
repnz
std
cmpsl
fwait
pop
aas
pop
rolb
xchg
mov
jns
js
mov
mov
repnz
hlt
jb
push
sahf
and
mov
xchg
sub
inc
inc
in
repz
repz
or
lahf
popa
scas
gs
cmp
adc
xor
push
cmp
aad
push
aaa
gs
add
sbb
xchg
dec
or
mov
nop
rcr
pop
mov
sub
sbb
cmpsl
daa
rcrl
iret
dec
aas
jl
sub
adc
cmpxchg
jne
xor
jp
pushf
ret
lcall
inc
adc
mov
rolb
flds
idiv
cwtl
jmp
mov
repnz
mov
push
xchg
aad
in
outsl
insl
push
out
lock
lock
sub
aad
dec
adc
ret
out
movsl
or
call
test
stos
push
pop
fildl
push
lods
sbb
outsl
inc
nop
add
inc
sbb
add
push
push
int3
adc
ret
orb
mov
shrb
aaa
lods
mov
into
test
subb
pop
inc
repz
pushl
inc
mov
push
ficomps
push
lock
xchg
fldl
jp
pusha
jge
ficoms
mov
push
dec
or
lret
mov
sbb
mov
xchg
push
lahf
pop
adc
shlb
or
cwtl
add
call
ret
rorb
mov
sub
cmp
and
loope
fimull
xchg
je
mov
sbb
xchg
xchg
insb
push
in
inc
xchg
nop
imul
cmpsb
jmp
imul
sahf
mov
dec
sbb
cmp
jns
out
cmpsb
into
dec
hlt
push
nop
enter
inc
cmp
cmp
arpl
mov
outsl
loop
add
adc
stos
aam
insb
cmc
rorl
lcall
insl
mull
push
pop
and
jge
or
pop
shrb
inc
hlt
nop
push
pop
pushf
inc
mull
xchg
mov
ss
sub
mov
int
xchg
aad
and
stos
les
fnsave
xchg
loop
fdivrs
andl
mov
lret
jnp
test
les
decb
pop
sbb
rcrl
fs
in
mov
jl
movhps
call
dec
jp
xor
jne
ret
rcrl
push
pop
sub
iret
pop
sbb
lcall
add
fisubs
out
out
add
sub
iret
cmp
shlb
xchg
test
pop
lods
mov
scas
insl
sti
push
push
push
bound
sbb
xchg
sub
fstl
imul
int
lret
ror
testl
jmp
jle
es
pop
xor
cmp
xchg
out
call
bound
aas
xchg
cli
sbb
jne
cmpsl
shr
add
xorl
inc
push
jbe
mov
mov
pop
xchg
mov
stc
test
test
mov
adc
xchg
hlt
stos
mov
dec
add
insl
test
sub
pop
xchg
in
mov
sbb
pop
xchg
mov
movsb
mov
sub
loop
xchg
cld
pop
adc
jmp
sub
ret
lock
sbb
sub
xchg
jbe
rcl
adc
jno
jmp
rorb
jns
test
mov
sbb
jecxz
das
and
subb
ficoms
popl
mov
fldl2e
cld
inc
pop
and
cmp
mov
sahf
fs
out
jne
add
aaa
outsl
mov
inc
mov
psllw
cmp
mov
in
dec
sub
fbstp
xchg
mov
mov
mov
ljmp
ss
ss
aaa
mov
sbb
inc
cmp
je
and
leave
pop
leave
mov
cmpsb
xchg
lret
dec
mov
les
iret
hlt
sbb
xchg
fcoms
orb
cmp
push
push
adc
ficoms
cmp
xchg
fwait
jb
sub
inc
xor
or
aam
dec
out
loop
add
mov
rcrb
mov
scas
ss
sbb
add
mov
loop
cli
fstpl
xor
cmp
jbe
xor
test
loop
ret
mov
or
cmp
rclb
dec
imull
dec
inc
lret
pop
mov
int
fisubs
xchg
pop
sbb
sub
inc
mov
push
mov
out
sahf
inc
xor
xor
dec
jne
sub
pop
fs
leave
pop
mov
xchg
sbb
mov
insb
mov
decb
add
push
or
ljmp
mov
lret
nop
call
mov
daa
jge
mov
xchg
mov
stc
gs
or
aaa
std
sbb
mov
pushf
rcl
jecxz
mov
sub
jb
push
xchg
push
jg
jp
hlt
xor
js
mov
mov
push
cmpsl
push
fsubp
add
xor
xorb
js
ss
add
push
out
or
loop
jb
lret
lret
pop
in
repz
inc
sub
inc
nop
es
call
sbb
cmp
popf
stc
adc
dec
imul
sub
into
test
and
dec
cwtl
aam
and
dec
adc
pushf
rorb
or
xor
cmp
inc
icebp
or
mov
shlb
pop
rcll
xchg
jbe
mov
fstpl
mov
jno
addl
pop
scas
mov
or
cmp
cmp
subb
icebp
or
mov
mov
adc
xchg
add
loopne
in
jne
ret
pop
or
addb
dec
and
sbb
pop
ret
jg
sbb
dec
repnz
pop
sbb
add
repz
into
hlt
jecxz
and
nop
pop
jbe
imul
fdivrs
pop
cmp
es
arpl
mov
push
ds
sbbb
insb
push
xchg
mov
ljmp
jmp
inc
and
xor
je
cmp
std
add
cltd
fnsave
push
push
inc
cmp
lret
inc
dec
stos
and
jmp
imul
mov
das
jne
cmp
mov
pop
xlat
cmpsb
imul
int3
push
xchg
fs
jne
out
mov
adc
xchg
testl
jno
out
add
loopne
addr16
pusha
pop
fwait
outsb
jne
dec
xor
in
adc
or
mov
mov
ret
xchg
dec
loop
sbb
dec
lds
lock
ja
icebp
inc
outsb
cmc
xchg
movsb
rcrb
add
push
mov
or
pop
loop
xor
addr16
dec
ja
rcrb
xchg
clc
sti
sub
out
and
test
inc
ja
leave
aas
and
dec
decb
ret
loop
xchg
jp
and
mov
fstps
data16
insb
add
icebp
mov
call
nop
and
lods
in
xor
jb
out
popa
sub
data16
sbb
xchg
jbe
popf
int
dec
sbb
ss
gs
mov
xchg
int3
xchg
inc
ss
mov
lock
daa
lds
add
inc
cmp
xchg
data16
mov
sub
cmp
dec
std
push
jl
lcall
test
xchg
push
sub
sahf
add
js
popa
dec
imul
xchg
lods
xor
outsb
add
into
and
gs
pop
pop
push
mov
adc
inc
ret
popa
lock
jle
aaa
popf
jae
out
lods
inc
mov
mov
imul
js
stc
shr
lret
sub
in
mov
int3
or
ds
sub
popf
cmp
push
dec
faddl
rol
pop
pusha
div
xchg
mov
mov
or
push
jns
dec
cltd
in
mov
mov
mov
adc
ja
jb
mov
fsts
add
sbb
icebp
inc
scas
aad
pop
adc
push
sbb
fldl
outsb
add
fs
mov
test
lcall
ljmp
stos
xor
inc
push
ds
cmpsl
inc
push
and
xchg
push
jg
call
es
out
jl
adc
inc
jl
fldcw
cs
cld
mov
pop
and
stos
aaa
add
loope
mov
inc
test
jle
jmp
repz
xlat
and
loope
stos
test
sbb
cmp
lds
test
loop
outsb
sub
pop
mov
sti
lods
mov
in
sub
adc
aaa
ljmp
cmp
lcall
jo
cli
test
jl
inc
mov
daa
js
icebp
mov
xchg
jae
xchg
lret
adc
sub
pop
popa
movups
popa
mov
xchg
scas
mov
iret
imul
das
or
mov
aad
insl
mov
jp
cli
mov
icebp
out
sti
lcall
cwtl
jo
shr
add
in
into
push
lock
pop
iret
inc
ss
or
in
in
mov
sub
cwtl
mov
mov
insl
out
std
add
pop
cltd
rorb
dec
mov
dec
mov
lock
cmp
xchg
xchg
jbe
imul
add
inc
fldt
int
mov
push
adc
in
addr16
lods
pop
rcll
je
sub
dec
fists
std
mov
pop
aas
js
dec
mov
stc
das
shrl
rcrl
ljmp
loope
rorl
adc
iret
and
and
cmp
sub
adc
push
pop
pop
repz
repnz
popa
pop
loopne
daa
mov
inc
mov
pop
dec
outsb
and
imull
shrb
std
jp
movsb
dec
jp
stc
jns
dec
int3
mov
add
stos
arpl
pop
das
fisubrs
or
les
push
add
pop
fiaddl
xor
mov
ret
mov
push
lock
sub
outsl
jg
cmp
lret
scas
loop
cs
fstps
mov
lahf
fwait
lcall
dec
mov
call
add
repz
mov
shlb
mov
int3
push
push
popf
jge
add
mov
lcall
enter
adc
sub
mov
out
sub
daa
fmull
addr16
ret
xchg
jb
mov
lods
jle
add
aam
adc
sti
add
pop
dec
cmpsl
movsb
scas
into
arpl
sbb
or
stc
mov
pop
add
lds
ljmp
ja
xor
pushf
out
stc
lea
mov
mov
jb
or
je
gs
mov
sub
les
insb
fimuls
and
cmp
add
cwtl
mov
orb
popf
fwait
jbe
into
testl
mov
dec
mov
cld
lds
inc
aad
jp
sub
in
jmp
cmc
cmpsb
mov
fsubrs
mov
call
outsb
mov
jo
or
aad
leave
ss
push
add
mov
mov
std
addl
xor
push
or
mov
adc
fildll
mov
cwtl
int
pop
push
sbbb
sbb
cmp
adc
mov
mov
jge
int3
call
push
cltd
pop
xchg
cmp
clc
sbb
cmpsb
es
std
inc
jns
mov
movsb
or
rcr
lods
aas
cmp
dec
stc
mov
xchg
mov
push
sbb
and
sahf
mov
mov
iret
xor
inc
jnp
xor
popa
xchg
shll
aad
nop
dec
fnsave
mov
out
out
outsb
inc
ja
nop
push
mov
add
cld
cmp
repz
jmp
sbb
xorb
sbb
enter
shrw
test
pushf
call
repz
push
and
or
mov
xchg
xchg
jno
mov
xchg
adc
out
pop
sti
sbb
enter
idivb
pop
adc
xor
cwtd
in
fiaddl
xchg
movsl
test
es
mov
mov
arpl
lods
xorl
xchg
in
lock
les
mov
pop
out
aad
mov
dec
xchg
test
push
jp
sub
mov
shl
push
repnz
sbb
pop
add
cmp
sub
gs
inc
pusha
cmp
mov
cmpl
popa
iret
push
xchg
das
aas
jnp
fwait
ds
enter
xor
mov
mov
test
leave
and
sbb
add
sub
xchg
cmp
dec
cmp
sti
or
popf
adc
and
pushl
testb
inc
add
imul
mov
sub
inc
test
inc
pop
movsl
mov
or
mov
dec
mov
jae
mov
popa
mov
and
xchg
aas
mov
mov
aad
stos
lcall
and
out
xor
test
lret
dec
popa
out
ftst
mov
fwait
mul
je
jge
fildll
jle
inc
xlat
scas
popf
cmp
movd
test
mov
and
test
enter
faddl
jns
push
ljmp
inc
sbb
sub
lcall
aas
cmp
loopne
adc
jge
add
mov
and
icebp
cli
fs
xor
sbb
movsl
js
frndint
push
shll
aad
sbb
mov
sbb
sti
cmc
sahf
add
and
sbb
test
mov
inc
hlt
xor
lods
jecxz
push
adc
sbb
push
cmp
xor
test
ds
test
scas
in
sbb
adc
out
jb
stos
imul
mov
sahf
or
ds
ret
push
add
dec
cld
add
or
outsl
iret
jecxz
or
push
sub
xchg
xor
outsb
dec
push
or
in
lcall
out
lret
cmp
lea
rol
cwtl
xor
mov
jg
pusha
js
pop
adc
fmul
xchg
imul
test
cmovnp
add
lock
call
cli
das
jmp
fdivrp
out
or
insl
pop
mov
in
sti
pop
fisubl
cwtl
cmpsb
jae
fisubs
adc
in
sbb
pop
dec
mov
jae
mov
xchg
push
shll
mov
mov
cltd
lock
sbb
nop
repnz
xor
pop
cltd
and
sahf
sub
push
out
stos
frstor
inc
stos
and
push
imul
or
in
or
inc
imul
xchg
clc
pop
xchg
mov
lcall
outsl
fdivrl
mov
mov
bound
xor
jl
inc
mov
mov
popf
xchg
lret
stc
pop
push
iret
pop
out
call
out
ds
ss
insl
mov
mov
or
xor
pop
sbb
movsl
mov
mov
jge
dec
popf
insl
push
mov
aas
sub
int
out
or
xchg
push
push
lds
mov
xor
adc
nop
mov
and
popa
ljmp
sti
fldl
or
mov
xchg
jb
rorb
testb
arpl
xor
dec
push
int3
ljmp
mov
insb
add
mov
mov
in
dec
in
clc
ret
scas
imul
movsl
shll
jg
idiv
sbb
and
jle
ret
outsb
mov
outsl
or
pop
insl
fnstsw
cmp
in
outsb
mov
mov
mov
dec
push
test
popf
lods
loope
outsb
sub
mov
pop
mov
sbb
test
jmp
pop
je
into
jecxz
dec
adc
sbb
inc
ja
inc
out
arpl
cmp
mov
mov
pop
sarb
inc
pop
or
mov
sub
push
in
movsl
mov
cmp
xchg
fisubrl
lcall
push
jp
addr16
lret
or
lds
mov
sahf
pop
and
movb
push
push
inc
lret
aad
andb
andb
mov
loope
inc
mov
enter
sub
and
into
xchg
mov
mov
aam
ss
aad
push
sbb
mov
aad
ret
jmp
cmpsl
and
loop
mov
jge
into
std
fisubl
and
sbb
fidivl
mov
inc
mull
dec
cmpsb
test
jl
sbb
popa
dec
lds
fmull
pop
inc
cltd
dec
pop
subb
xchg
sbb
jl
arpl
int
xchg
add
subl
or
mov
call
push
decb
ljmp
cli
scas
push
fildl
pop
gs
and
xchg
inc
inc
xchg
push
call
dec
cmp
sub
outsl
gs
adc
pop
stos
test
mov
fcmovu
shl
push
out
cmpsl
mov
int
sub
ret
xchg
mov
pop
push
xor
pop
mov
sahf
xor
pop
xchg
repz
mov
mov
iret
mov
xchg
movsb
pop
cmp
inc
dec
cltd
mov
dec
inc
movsl
sub
out
xor
repnz
xchg
addr16
mov
xor
add
int3
inc
xor
pop
cmp
sbb
mov
sarl
lods
lahf
outsb
insb
in
fldl
bound
js
shlb
out
inc
mov
xchg
fdivr
mov
mov
cmpsb
movsb
in
aaa
add
dec
pop
lret
pop
stos
scas
call
ret
out
add
mov
add
add
test
mov
std
pop
push
fiaddl
push
sbb
cmpsl
inc
sbb
add
xchg
insl
jp
cmp
mov
movb
stc
xchg
pop
je
or
jbe
sbbb
mov
lea
push
add
or
cmp
fmuls
mov
cli
loop
jbe
cmpsl
sbb
test
out
daa
addb
insl
pop
xor
shll
adc
mov
mov
mov
or
inc
xchg
inc
in
arpl
jb
leave
adc
cmc
scas
mov
mov
jp
mov
push
xorl
imul
repz
xchg
out
jo
cltd
pop
cmp
mov
movsl
jae,pt
dec
or
ror
vandps
jecxz
and
js
repnz
pusha
in
ss
push
add
inc
xchg
bound
push
fdivrl
pop
cmp
fcomi
mov
sub
fwait
sub
push
jnp
inc
test
adc
clc
mov
sub
sub
aas
scas
les
test
enter
sahf
in
cmp
out
sub
mov
xor
sahf
or
sbb
adc
testb
adc
call
arpl
notl
cld
xor
cmpsb
inc
hlt
xor
insb
test
jnp
outsl
fs
push
and
imul
sub
jmp
in
aas
xorb
ljmp
ja
xor
mov
movsl
movsl
push
xor
lahf
clc
or
mov
mov
cmc
inc
and
es
add
loop
ljmp
cmp
cmp
sahf
and
out
cli
adcb
sub
jmp
jg
mov
test
call
fldl
cmp
adcb
loop
clc
sbb
dec
mov
int3
jne
movsl
sub
rorb
nop
dec
shrb
pop
in
icebp
or
movsb
lea
cmp
lahf
fcoml
mov
pop
aas
stos
jbe
fstp
xchg
iret
cmpb
pusha
fcomps
shlb
jmp
cmp
mov
sub
inc
ret
mov
adc
cwtl
pop
xchg
aas
jb
imul
cmpsb
cwtl
push
xor
sbb
cmp
mov
orl
sbb
inc
shll
mov
inc
dec
jl
lods
mov
jmp
jmp
xchg
cli
daa
jbe
cmp
xchg
xor
test
in
lret
loop
pmuludq
jo
in
int
lock
mov
jne
jne
sbb
and
xchg
shrl
cmc
jge
jae
out
jg
cmpsl
mov
mov
sub
xor
push
jno
add
xor
idiv
outsb
sub
dec
mov
ds
popa
mov
stos
sbb
push
dec
test
dec
cwtl
dec
les
and
pop
sahf
mov
nop
into
and
inc
mov
not
xchg
pop
add
cmpsl
lret
mov
rorl
mov
paddb
push
push
cmp
jbe
cmp
mov
jl
sti
shrl
ret
pop
or
inc
cli
jmp
mov
test
nop
lods
or
add
daa
pop
push
xchg
xlat
pop
test
push
pop
xor
in
inc
cmpsb
fidivrl
mov
rol
mov
loopne
inc
nop
xor
mov
lret
sbb
add
lea
xchg
out
or
imulb
arpl
fldl
int
xchg
out
out
and
pop
add
rcrb
movsb
lret
mov
push
insl
in
xchg
or
loope
jne
pop
stos
sbb
test
into
cltd
mov
pop
lret
cmp
jge
orb
test
cmp
push
add
jle
int3
leave
mov
and
mov
mov
pushf
stc
scas
inc
lods
cwtl
insb
and
int3
fwait
bound
add
dec
jnp
xchg
lcall
cld
or
imull
mov
add
lods
cmc
cmpsb
and
inc
iret
jbe
and
add
fs
adc
dec
add
call
fwait
pop
test
mov
push
movsl
jae
sub
ljmp
xor
ss
push
aas
loop
xor
shrl
xor
fsts
jmp
cmp
mov
lret
adc
or
in
das
jb
mov
mov
arpl
fwait
jecxz
in
mov
mov
imul
call
lock
clc
incb
mov
dec
jge
xchg
mov
xchg
mov
or
in
xchg
mov
movsb
pop
xlat
or
dec
mov
xor
aad
xchg
ds
add
lret
xchg
movsb
cld
inc
lods
inc
and
jno
loopne
shrb
sub
xorb
stc
mov
inc
pop
dec
push
push
insl
push
xor
mov
jnp
cmp
xor
add
dec
aam
cmc
stos
inc
mov
loope
inc
and
mov
aam
arpl
in
and
sub
sub
jmp
pop
jae
leave
mov
pop
xchg
inc
fs
jne
sub
push
lods
nop
sahf
jg
mov
add
inc
dec
cltd
dec
lods
jo
cmpb
scas
sti
push
loopne
outsl
sahf
leave
sub
inc
sbb
add
in
stc
int3
cmp
add
xchg
fsts
inc
push
int3
enter
fiaddl
loopne
adc
pop
xchg
and
xchg
add
subb
pop
jne
mov
and
enter
mov
psubd
lock
add
lahf
push
aad
out
add
fwait
std
bnd
ret
sbb
daa
dec
sahf
insb
scas
xor
gs
out
adc
mov
movsb
dec
pop
outsb
adc
ja
out
ret
test
jmp
mov
push
hlt
cmpsb
aam
int3
stos
subl
sub
pop
push
or
shl
pop
or
fstpt
fadds
inc
add
cmp
lea
xor
adc
add
scas
or
pop
cmp
int3
outsb
jl
test
pop
sahf
cwtl
adcl
mov
cmp
ss
scas
out
popa
lea
lds
push
xchg
jecxz
mov
jae
pop
leave
je
outsb
enter
stos
out
mov
frstor
dec
int3
jb
jb
test
jecxz
inc
push
dec
das
push
mov
enter
inc
or
aad
add
jno
repz
and
fwait
cld
ljmp
int
scas
aaa
aas
addr16
adc
fwait
mov
inc
out
sub
cmp
insb
adc
mov
sub
jmp
fisubl
push
scas
imulb
insl
pop
mov
inc
lods
jns
aad
push
or
sti
mov
js
insl
mov
jg
into
mov
pop
or
cltd
xchg
push
cmpb
jnp
lock
mov
jl
jae
out
in
mov
cmp
dec
sti
pop
sbb
dec
add
sub
jle
xor
dec
sbb
add
mov
cmp
jmp
and
mov
lea
push
push
lods
dec
inc
xor
ret
movsb
xor
push
xor
outsb
cmp
mov
xchg
lcall
sub
jle
dec
xchg
mov
or
sbb
movsb
pop
mov
enter
into
and
loop
ljmp
in
lea
dec
mov
repnz
int
mov
cs
rolb
jnp
mov
insl
and
fs
lahf
add
push
push
mov
rcrl
test
inc
sbb
xor
sub
or
xchg
pop
pop
mov
jg
iret
mov
lods
cli
repnz
push
sahf
push
mov
aam
insb
test
mov
mov
inc
jg
in
sub
imul
movsb
mov
fldcw
mov
sub
insb
or
sbb
in
jmp
mov
test
sub
pop
adc
inc
movsl
rorb
mov
xchg
loope
aam
es
jp
and
and
jl
test
mov
iret
push
mov
cmc
in
cmpb
movsl
stos
mov
shrb
pop
lods
mov
inc
jae
and
or
push
ss
in
sub
in
push
push
addr16
xor
lods
jg
pop
xchg
pop
movsl
adc
jle
mov
cmc
push
ret
bnd
stos
gs
sarb
ds
push
dec
cli
cmp
dec
pop
sahf
aas
jns
mov
cmp
out
addr16
mov
jb
sub
push
js
mov
pop
push
mov
or
cmp
scas
xchg
inc
push
xchg
std
pop
mov
enter
dec
nop
xchg
out
xor
jne
xchg
cmp
pusha
mov
fldt
pop
adc
fwait
subb
rcrl
inc
leave
push
lock
sbb
sbb
loopne
cmc
mov
and
mov
mov
jl
nop
or
test
mov
hlt
cmc
pop
add
cmp
or
mov
dec
or
and
cmp
fldcw
sti
in
imul
dec
pop
add
push
dec
dec
repnz
xor
icebp
fldl
int
pop
dec
lss
rcl
inc
es
dec
les
mov
and
mov
mov
sub
lods
dec
sub
inc
and
movsl
or
cmp
icebp
leave
jnp
pop
push
sbb
pop
adc
mov
lea
push
push
push
call
cmpsl
incl
clc
cld
outsb
inc
mov
sbb
stos
add
in
xor
inc
sbbb
into
scas
mov
xor
adc
movsb
lahf
fwait
movsl
lret
or
loop
sti
std
dec
cmpsl
add
jl
cmpsl
test
fcomps
ss
repz
fisttpl
add
out
sub
lods
stos
fistpll
jo
dec
negl
lods
aam
pushf
adc
xor
lds
ss
lods
push
ljmp
shll
mov
jle
faddl
lock
sub
add
push
inc
in
imul
hlt
jge
dec
push
sbb
xor
mov
lcall
dec
fmulp
and
mov
dec
xor
xchg
jle
adc
ja
push
hlt
mov
test
mov
ja
sbb
and
popa
sub
pop
out
xchg
xchg
pop
ja
jnp
gs
sub
pop
scas
add
adc
dec
fidivrl
sti
push
push
mov
call
dec
mov
jo
mov
aas
dec
fcmove
dec
adc
mov
loope
mov
roll
sub
jne
push
ss
divl
ret
mov
xor
cmp
test
pop
loop
test
add
in
xchg
inc
push
fidivs
shlb
ja
in
cmp
xchg
push
mov
sub
xchg
xchg
sbb
fldcw
sub
adc
sub
sti
xlat
dec
stc
cmpsl
pop
sub
lds
mov
outsb
sbb
cmpb
cwtl
movsb
cmpsb
cs
shr
jmp
dec
inc
movsl
sarb
insb
mov
out
pushf
jmp
lods
test
sbb
jne
jne
push
dec
dec
aas
bound
cli
inc
push
cmp
inc
fmull
clc
or
out
sti
movb
test
sbb
jp
ret
mov
roll
push
or
and
dec
rorb
push
ljmp
loopne
push
cmp
mov
dec
xor
mov
inc
cld
ret
cmp
push
les
lahf
sti
jnp
fdivs
or
lahf
ret
sbbl
mov
mov
jnp
dec
mov
mov
mov
notl
pushf
or
testb
cmp
test
cmp
push
adc
lret
inc
lea
mov
jne
inc
xchg
jnp
add
arpl
cmp
icebp
mov
inc
shl
les
lret
pushf
lret
lods
arpl
mov
popa
add
in
and
sbb
pushf
or
push
fisubrl
pusha
fwait
outsl
and
aaa
cmp
inc
mov
rcrb
pusha
ljmp
cmp
lock
push
icebp
cvtps2pd
lahf
int
add
cwtl
imul
mov
hlt
jbe
into
jmp
movsb
mov
ds
or
lods
sbb
sub
mov
sub
mov
and
testl
je
rolb
adc
cmp
adc
sub
inc
pushf
outsb
mov
imul
xor
fwait
dec
fcmovu
fldenv
fistpll
or
icebp
push
mov
push
in
sub
or
mov
adc
dec
loopne
adc
imul
jns
nop
push
lahf
je
push
xor
jnp
lods
pop
test
into
roll
test
cmpsl
bound
xor
push
es
mov
insl
cmp
mov
pop
rolb
adc
cmp
push
cmpsb
xchg
and
mov
sbb
bound
aas
sub
dec
std
sub
paddsw
jb
das
mov
loope
dec
cltd
and
push
mov
pop
in
jo
push
leave
leave
mov
cmp
push
inc
mov
orb
addr16
add
inc
outsl
bt
mov
sbb
mov
and
out
ret
cmpsb
adc
aas
repz
fldl
jmp
xor
lods
add
clc
dec
cwtl
sub
cmpsl
pusha
sbb
cmp
pop
out
or
jmp
mov
stos
cmp
xchg
mov
movsl
dec
mov
mov
add
pop
cmc
xchg
mov
and
xor
jns
mov
or
push
flds
push
test
imul
orb
andb
orl
nop
icebp
sub
idivl
mov
repnz
fisttpl
jmp
bound
mov
ss
xchg
imulb
rorl
movsb
fdivr
test
dec
loope
rol
sahf
add
push
mov
mov
push
xor
lock
pop
lock
xchg
pop
hlt
mov
push
pop
cs
movsl
pop
and
fbstp
ret
les
adc
gs
cld
hlt
cmp
loope
inc
clc
cli
loope
pushw
push
push
addr16
in
dec
les
movsl
je
sub
aam
cld
jae
repz
inc
std
adc
add
cs
out
fucomip
push
and
inc
add
aaa
mov
dec
sbb
cmp
scas
out
add
push
cltd
lods
push
add
icebp
cwtl
insb
pop
daa
mov
jnp
mov
test
sub
loop
fnstsw
ret
das
xchg
xchg
mov
dec
inc
cmp
je
xor
add
push
in
push
ljmp
sub
or
xor
pop
xchg
dec
test
bound
aad
dec
cmc
leave
mov
popf
lret
sbb
fisubrl
gs
pop
fisubs
in
push
movsl
loop
and
add
mov
adc
sub
lds
cli
and
lods
and
mov
dec
mov
sbb
lea
shrb
push
xor
mov
in
cmpsl
cwtl
push
cmpsl
mov
js
ss
ffreep
ss
xchg
jecxz
mov
sub
mov
sub
adc
shr
scas
mov
in
les
add
push
pop
das
adc
push
inc
out
sub
jle
pop
xchg
in
mov
jl
dec
sub
shlb
lock
fisubrs
ret
xor
jge
sub
mov
stc
sahf
cmp
mov
pop
mov
fimuls
cmp
je
shll
xlat
jle
xchg
int
or
pop
pushf
mov
xchg
xchg
sar
es
sub
pop
dec
je
adc
data16
in
push
pop
jb
adc
mov
add
dec
add
push
addr16
hlt
jns
sar
and
jl
add
stos
sub
std
sahf
repnz
cmpl
in
xor
pop
push
fistpl
push
xor
cmp
ss
jae
dec
inc
subl
sbb
rcrb
daa
sbb
mov
pusha
mov
dec
ret
adc
push
shll
pop
dec
ljmp
pop
cld
into
loop
mov
test
dec
mov
aad
add
cmc
aas
cmp
sti
mov
mov
dec
push
les
push
ds
sbbl
pusha
jb
aam
clc
in
sbb
pushf
dec
ja
xchg
repnz
jp
fwait
push
imulb
subl
lahf
loopne
jl
inc
fs
xor
lahf
pop
out
test
jno
sub
jae
lret
adc
xchg
test
push
pop
xor
aam
call
cmp
inc
pop
sbb
dec
mov
sbb
push
mov
cld
cld
aaa
ljmp
lods
popf
jae
push
jo
sub
cmpsb
outsl
insl
add
pop
out
insb
jbe
int3
ja
rcrb
mov
pop
std
xchg
xor
push
dec
adc
imul
or
cltd
popa
cmc
js
divb
imul
mov
sbbb
jbe
jns
push
adc
mov
data16
xor
gs
jb
data16
imul
idiv
cld
in
out
push
out
insb
mov
fimull
ret
xchg
mov
in
or
xchg
gs
enter
lock
xchg
movsl
or
push
xor
push
je
stos
inc
int
jnp
adc
push
lea
adc
xchg
test
jb
stc
popf
jnp
mov
xchg
js
fwait
mov
pushf
fildll
data16
xor
mov
add
enter
lret
xchg
xchg
mov
ds
test
inc
ret
sub
jae
xor
jecxz
loop
shll
mov
pop
les
add
pop
jo
add
lahf
adc
in
add
mov
jns
cwtl
mov
pop
stos
out
push
data16
and
mov
xchg
frstor
fmuls
xadd
xor
adc
stos
lret
insl
out
mov
data16
inc
mov
or
push
aam
jle
mov
ja
test
adc
iret
add
push
insl
xorb
adc
aas
mov
fwait
and
divl
mov
mov
jg
add
fmull
bound
js
pop
push
jle
out
pushf
jle
in
ljmp
dec
call
insl
scas
inc
test
cmpsb
and
xchg
das
inc
add
std
pop
xlat
data16
std
mov
fs
popa
divb
adc
loop
xchg
fwait
inc
addb
es
and
or
inc
add
or
pop
or
lcall
add
gs
pop
pop
cmp
enter
add
or
pop
xchg
lods
leave
std
insl
xorb
inc
fcompp
xchg
fsubrl
pop
jno
dec
cmp
out
mov
fcoms
inc
sysenter
cwtl
xchg
or
cmp
add
popf
jb
sbb
fs
int3
inc
lcall
outsb
loopne
loopne
das
cmc
jo
int
outsl
call
pop
andl
push
cld
aam
jp
lret
mov
mov
xchg
add
out
mov
imul
imul
imul
je
repz
data16
pop
imul
sbb
lods
jge
pop
add
lahf
jb
pop
add
ljmp
cmovno
mov
ficompl
sahf
inc
push
xor
in
movsb
in
or
enter
ljmp
fucom
and
xchg
xor
adc
push
add
add
pop
push
and
test
pushf
jnp
inc
shlb
xchg
pop
fisttpll
pop
pop
cmp
loopw
pushf
mov
frstor
and
sbb
xor
add
icebp
mov
int
mull
pushf
fnop
jo
mov
xchg
pushf
hlt
mov
mov
mov
xchg
push
sbb
jns
push
pop
aam
insb
js
jb
test
jecxz
imul
mov
loope
mov
inc
in
mov
jg
jno
xchg
xor
aam
xchg
xchg
sti
cs
xor
jg
xchg
ret
push
mov
orl
loopne
mov
daa
pop
jmp
rorl
xchg
xchg
xchg
inc
xchg
sub
adc
push
or
imul
icebp
movsl
fildl
popa
mov
inc
in
addl
repz
gs
test
es
push
push
lea
shrb
jp
int
xchg
fmull
pop
divl
outsl
or
pop
aad
mov
scas
fsub
mov
xchg
and
push
addr16
jne
push
mov
push
imul
ljmp
dec
push
inc
or
lret
or
rorl
aas
addr16
outsb
or
adc
sahf
enter
shll
cltd
inc
sub
out
pop
sti
xor
aaa
mov
ljmp
inc
inc
pop
outsb
pop
popa
lcall
in
xchg
or
movsl
fs
jl
loopne
push
subl
in
out
jne
push
xor
outsl
int3
push
inc
mov
jb
adc
int3
test
clc
stos
insl
and
dec
cmp
sarb
sbb
pop
iret
jne
clc
mov
repz
je
mov
sbb
pop
lret
lds
stc
cmpsl
adc
mov
or
fldcw
mov
add
movsb
jle
push
ret
adc
cli
inc
push
xchg
icebp
adc
fxch
leave
or
fildll
add
scas
push
push
les
arpl
mov
cmp
clc
jg
and
in
in
lock
lock
mov
sbb
repnz
fmuls
adc
push
add
mov
adc
jb
push
fistl
mov
push
mov
movsl
jle
xor
mov
pop
inc
pop
sbb
and
jl
and
and
pop
je
das
mov
test
fwait
sub
test
mov
cmp
dec
daa
outsb
popa
in
fwait
sbb
outsl
pop
push
jmp
sub
add
and
pop
aam
outsb
fwait
aad
sahf
sub
push
imul
lods
imul
jno
in
out
mov
and
inc
jle
push
sbb
outsl
addr16
push
scas
aaa
cmpsb
les
inc
xchg
mov
sbb
adc
dec
in
cmp
cmp
mov
push
mov
jge
dec
pop
ret
inc
pop
stos
or
xor
xchg
mov
int3
jmp
jmp
lds
and
sbb
cmp
popa
sbb
int3
mov
jbe
shlb
add
push
push
mov
push
cmp
imul
aas
inc
aaa
arpl
and
jns
in
jo
ror
jge
int
mov
push
sbb
iret
mov
insb
out
fdivl
xchg
in
in
xor
cmp
ja
mov
scas
outsl
in
sbb
xor
in
pushfw
subl
out
dec
scas
push
inc
or
pop
and
mov
in
aaa
mov
int3
push
js
lcall
shl
fs
push
das
addr16
dec
add
cmc
inc
pop
std
push
sbb
pop
loop
mov
inc
in
cmpsl
sub
or
xchg
rcrl
adc
cltd
inc
push
adc
mov
mov
sub
mov
leave
mov
fldenv
xlat
mov
in
sbb
cmp
lret
add
iret
js,pn
push
lock
fcompl
push
test
push
push
mov
repz
mov
aad
bound
lahf
test
adc
mov
xlat
push
mov
fsubs
call
mov
rcr
pushf
icebp
sub
push
pop
loope
mov
jmp
test
mov
mov
dec
cmc
mov
scas
jge
lret
out
jp
lret
dec
repz
in
pop
cmp
imul
jmp
mov
mov
pop
mov
cmc
sub
fdivrl
fwait
sarb
pop
fcmovnbe
pop
mov
mov
mov
shll
lods
lea
push
xchg
mov
add
jle
int
iret
leave
adc
into
sub
jge
int3
and
imul
push
and
cmpsl
xchg
adc
push
inc
sub
xor
ffreep
mov
xchg
je
mov
rcrl
cmp
test
pop
movsb
jnp
scas
shrl
cmp
xchg
cltd
sbb
arpl
jmp
push
out
adc
imul
mov
fs
mov
and
ret
pushf
mov
jp
dec
mov
lods
lds
loope
push
pop
dec
jbe
insl
cmp
xchg
add
xchg
sub
repz
loope
nop
sub
xor
stos
std
sarl
and
mov
lcall
loop
push
add
movsb
xchg
fsubrp
inc
or
push
sbb
xchg
add
pop
mov
sbb
insb
repnz
lahf
sbb
cmp
push
out
mov
dec
cmpsl
out
int
inc
lcall
mov
movb
mov
lods
stos
addr16
fdivrl
sbb
test
arpl
jo
cli
aas
and
sbb
jle
idivl
dec
or
jbe
pop
push
testb
sub
ss
popa
fadd
int3
xchg
hlt
mov
stos
jne
sbb
cmp
pop
mov
divb
or
inc
cmp
add
inc
adc
into
in
daa
leave
mov
lods
stos
adcb
imul
outsl
xlat
jae
in
hlt
orb
std
ror
xchg
shr
dec
and
xchg
inc
mov
fnsetpm(287
addr16
push
ffreep
sbb
mov
cmc
daa
out
sbb
das
loop
sub
jmp
jb
aam
int
popa
cmp
and
push
pop
pusha
into
test
mov
lcall
xchg
inc
add
pop
fimull
and
in
push
and
in
scas
xchg
push
in
repnz
jb
dec
loope
jmp
in
add
cli
or
mov
adc
xchg
cmp
pushf
add
inc
aad
imul
popf
or
sbb
push
lret
cmpsl
scas
out
or
inc
loopne
enter
test
fcoms
stos
les
je
cmp
mov
mov
pop
stos
add
pop
fwait
in
inc
test
stos
inc
ds
shlb
mov
icebp
jle
xchg
mov
ret
in
xchg
popf
sbb
sub
and
sbb
add
sub
mov
rorl
lahf
mov
pusha
mov
movsb
ret
rcll
fsubl
sbb
mov
out
cmp
sub
adc
push
sub
and
cltd
push
movsl
mov
push
dec
rcrl
mov
ja
mov
pop
xor
sub
inc
push
xor
push
jmp
mov
fcoms
mov
cs
nop
test
loope
fdivs
divl
pop
ret
mov
mov
mov
xor
scas
jp
mov
xor
std
mov
gs
push
cli
push
rcrb
gs
notl
add
jne
mov
lcall
pop
push
jmp
lods
jecxz
or
sub
je
pop
jnp
cmpsb
jnp
jne
imul
push
push
add
xchg
add
push
inc
out
adc
dec
loope
mov
lds
or
movl
push
add
iret
cli
mov
jnp
popf
xchg
les
fnstenv
push
fucomip
lahf
jae
dec
xor
jge
jae
arpl
imul
sub
popf
loop
mov
jmp
aas
fdivp
xchg
es
movsb
movsb
and
imul
pop
loope
test
lock
mov
sub
std
cmp
push
inc
jnp
std
aad
xor
outsl
pop
loop
xchg
pop
xchg
and
stos
out
cmpl
les
dec
cwtl
xchg
and
lahf
ljmp
jl
stc
and
add
inc
cwtl
or
mov
jecxz
cmp
std
jg
adc
adc
repnz
adc
pop
mov
xchg
pop
loopne
sub
lods
test
hlt
xchg
shl
and
mov
int
jmp
add
mov
xchg
inc
push
fimull
repnz
rcl
ss
pusha
cmp
sbb
ret
xchg
mov
inc
insl
out
adc
enter
clc
jo
jge
mov
test
dec
bound
push
adc
xor
xor
fbstp
mov
aam
jae
push
mov
dec
ss
mov
iret
cmc
jb
sbb
pop
subl
int3
notl
mov
dec
add
sbb
shr
aad
xchg
xchg
mov
out
repnz
pop
roll
outsb
jecxz
xchg
in
inc
loop
inc
mov
jge
ret
sub
scas
adc
shlb
push
adc
sub
dec
sub
pop
cmpsl
push
dec
or
mov
iret
mov
mov
inc
shlb
sbb
out
pop
js
mov
and
dec
jne
les
jge
in
pop
sarb
mov
sbb
jb
enter
or
xor
cwtl
push
xchg
cmp
ljmp
pop
push
inc
stos
or
mov
sub
pop
xlat
js
or
mov
cld
push
inc
mov
stc
mov
aas
aas
cmp
std
in
mov
pop
xlat
nopl
fcoml
popa
cmp
sbb
icebp
out
int
cmpsb
testl
adc
test
fisubrl
and
jecxz
cld
xorl
fcmovnbe
sub
sub
push
mov
xor
fs
shrl
pop
push
cld
out
outsl
push
jbe
and
sbb
jle
xchg
cmpsl
out
sarb
and
xchg
mov
pop
divb
mov
adc
out
int3
dec
fiaddl
push
mov
rorb
lock
leave
dec
jmp
in
std
repz
repnz
jmp
jp
cs
inc
xchg
push
rclb
ss
dec
adc
loopne
sahf
adc
xchg
pop
lea
stos
dec
dec
iret
neg
cmpsl
mov
lods
cwtl
aad
cwtl
fisttps
mov
inc
or
inc
mov
and
sarl
clc
add
xor
mov
mov
pop
and
jmp
push
add
xor
add
fnsave
icebp
and
adc
inc
ret
sub
dec
ror
daa
xor
aas
pop
jno
outsl
xor
pop
mov
push
xor
jl
aas
fwait
mov
dec
dec
sbb
out
pop
xchg
mov
jl
adc
enter
out
sub
push
shlb
cmp
fnstcw
ds
clc
or
mov
mov
lret
xor
daa
and
std
xor
adc
cld
jecxz
lret
sub
inc
lret
adc
and
sbb
cli
aas
mov
int
sbb
int
les
mov
out
pop
sti
cmc
out
mov
sti
xchg
xchg
adc
lret
xor
inc
xchg
xor
test
cmp
imul
or
divb
fcmovbe
pop
cmpsb
cmpsl
stc
xor
mov
fidivrs
xor
and
test
push
scas
inc
xchg
mov
dec
dec
scas
orb
fnstcw
bound
pusha
leave
jbe
inc
xchg
sbb
xor
icebp
or
push
rol
shlb
notl
imul
push
cli
or
ljmp
sbb
sub
in
push
mov
sub
inc
inc
movsl
shll
clc
and
int3
or
inc
shrl
pop
enter
divl
add
lea
xchg
rcrb
and
movsl
push
ret
sub
push
push
fisubl
ret
pop
mov
cli
lds
xor
shr
mov
push
mov
xchg
cs
sbb
inc
jmp
push
push
or
pop
add
mov
dec
out
adc
push
cmp
mov
in
xor
cmp
mov
jl
adc
cltd
imul
popf
cmp
xor
jle
clc
scas
out
test
push
push
cmp
pushf
push
pusha
stos
pop
mov
cld
shl
add
daa
push
push
inc
xchg
pop
addr16
cli
test
imul
pop
inc
inc
outsl
mov
sti
cmp
push
mov
xchg
insl
es
xor
xchg
cmp
cwtl
lods
sbb
loopne
popf
aas
or
mov
xchg
sbb
inc
bound
std
pop
mov
cs
jp
push
mov
lea
aad
imul
repz
into
xchg
loop
sub
cmpsb
test
hlt
mov
mov
scas
xchg
shll
adc
push
jae
nop
fxch
es
repz
cmp
push
shrb
xchg
jp
mov
xchg
fildl
mov
js
in
sbb
fstpl
mov
leave
add
push
dec
and
dec
cmp
aam
add
mov
pushf
rorb
int
icebp
clc
mov
jecxz
dec
loop
and
out
lcall
es
jno
cld
jbe
leave
scas
jl
popf
repz
and
ret
je
sub
mov
adc
sbb
dec
aaa
loope
ret
add
xchg
andb
sbb
addl
or
mov
xor
jmp
sub
dec
adc
xor
jle
loope
loop
push
fwait
mov
outsl
inc
imul
cwtl
mov
pop
mov
push
shrl
cs
repz
and
inc
addr16
vaddsubpd
mov
xchg
loop
cltd
fwait
icebp
or
xchg
xor
stc
lds
shr
movsl
pop
test
or
fldl2t
xchg
xchg
je
shrb
cwtl
mov
sbb
dec
js
xchg
dec
repnz
sbb
dec
mov
lock
adcl
lock
mov
lods
imul
rorw
inc
sti
add
cltd
sub
xchg
mov
push
push
loop
add
shll
clc
sti
addb
push
cmpsb
hlt
adc
push
sbb
mov
test
dec
pop
mov
mov
jno
cwtl
mov
sahf
push
popf
in
mov
cmp
jmp
shl
sub
mov
int3
pop
sub
into
jge
adc
bound
pop
lcall
push
mov
shrl
dec
mov
cwtl
push
outsl
arpl
cmp
mov
xor
jmp
mov
xor
into
lods
js
rorb
jp
nop
jne
xchg
or
jnp
mov
in
inc
inc
addr16
mov
pop
in
jmp
lods
lcall
jae
jns
dec
into
and
adc
add
iret
and
dec
xchg
mov
xor
pusha
cs
shll
pop
xchg
rorb
lock
push
stos
int
inc
sti
lods
pop
xor
in
mov
sbb
in
or
out
xor
xor
shlb
xchg
xor
pop
jg
dec
pusha
sub
mov
cwtl
mov
movsl
clc
pop
sarl
out
pop
jmp
enter
xor
push
int3
fs
js
mov
sub
loop
adc
std
loopne
pop
movsl
cmp
mov
push
jns
push
xchg
push
stos
push
xchg
xor
xlat
or
xchg
and
cmp
stos
mov
sbbb
push
mov
fbld
jmp
lock
xchg
mov
les
andb
adc
mov
int
mov
les
mov
cmp
xchg
xchg
xchg
push
sbb
sahf
cltd
ret
imul
pop
lods
dec
sub
shl
inc
push
inc
adc
test
sub
xchg
in
or
movsb
jo
cltd
imul
out
push
lcall
xlat
or
add
cmp
lods
pushf
push
xor
pop
stos
loope
jae
repnz
daa
fiadds
pop
sub
sti
mov
cmp
fisubs
or
in
jae
sub
xorl
mov
mov
popa
push
ljmp
mov
movsb
xchg
sbb
aam
push
cmp
movsl
add
jl
ja
xchg
dec
out
or
inc
ds
sahf
dec
into
notl
push
ret
or
imul
fs
fcoml
and
fadd
sub
mov
in
jns
popa
sbbb
sub
cs
pop
test
addr16
daa
adc
cmpsb
add
push
nop
clc
test
cmpsb
adc
cli
push
cmp
mov
ret
mov
out
pop
sub
inc
xchg
or
rclb
adc
repnz
jae
jnp
stos
mov
sub
sti
mov
into
jg
sbb
lock
into
daa
inc
push
mov
lea
push
pushf
fwait
stos
sub
jp
xor
add
sbb
lock
mov
xor
leave
inc
cmp
sti
or
add
add
mov
int
hlt
mov
lock
inc
push
cmovne
sbb
push
push
cmp
fmuls
xchg
xchg
inc
mov
inc
sbb
add
inc
jns
test
cmc
loopne
push
in
push
lds
push
adc
pusha
jg
cwtl
sbbl
mov
ds
adc
and
push
inc
and
test
rorl
xchg
mov
xchg
and
pushf
incl
dec
mov
aam
inc
cmp
inc
xchg
sarb
mov
fdivrs
xor
or
mov
dec
out
push
insl
in
incl
lea
mov
xor
bound
pop
jnp
sub
ret
push
jns
lahf
mov
or
push
or
mov
pop
adc
mov
mov
cli
jmp
lret
mov
stc
aaa
adcb
jno
daa
aas
pop
mov
scas
mov
mov
out
rolb
adc
fcmovbe
fs
mov
push
ds
cs
into
jp
jb
lret
pop
sub
xlat
or
adc
mov
call
ja
jne
cmp
cmp
pushf
sbb
adc
fmuls
lods
sub
jbe
mov
inc
test
loopne
out
cmpsb
inc
gs
cmp
xor
xchg
out
sub
rclb
test
cmpsl
lahf
pop
es
movsl
outsb
test
cmp
push
lock
out
mov
rcrl
negb
mov
sub
in
jnp
push
mov
cwtl
cmp
jl
dec
test
ds
ret
movsb
int
or
mov
mov
sbbl
loop
cmp
lods
adc
notl
jns
push
test
addr16
xlat
dec
mov
mov
or
or
mov
cltd
mov
test
lods
pop
xor
cmp
mov
mov
cmp
scas
xchg
jecxz
fbld
popf
rcll
jecxz
mov
add
cmpsl
sub
ljmp
in
lcall
call
insl
inc
lea
jb
flds
ds
je
scas
lea
sub
imul
and
cmpsl
hlt
nop
leave
pop
pop
lds
jnp
pushfw
sbb
sbb
std
lcall
sti
push
mov
adc
popf
insl
mov
jmp
or
daa
mov
jg
mov
xchg
in
rol
sub
insb
mov
xchg
idiv
adc
pop
adc
add
xchg
ljmp
pop
push
push
sahf
mull
lock
fnstsw
cs
roll
scas
jg
ror
pop
rorb
test
mov
popa
xchg
sub
mov
pop
in
sub
data16
mov
xchg
inc
cwtl
cwtl
sbb
out
ds
and
loop
sub
ds
cmpsl
cmc
cmp
insb
push
xchg
cmp
sbb
fcmovbe
cwtl
repz
jge
xchg
sub
lods
and
out
sahf
sbbl
cmp
lahf
add
pop
rcl
fistps
dec
fwait
bound
pop
inc
adc
jo
and
stos
jge
mov
push
out
iret
in
js
cmp
cmpsb
mov
push
sahf
stc
mov
inc
popfw
push
dec
cmp
ret
jbe
mull
cwtl
sbb
push
mov
inc
jg
test
pop
pop
sbb
add
adc
jge
ds
roll
ja
out
cmp
stos
xlat
mov
adc
and
fists
mov
lods
mov
xor
test
out
mov
in
sub
mov
mov
mov
pushf
xchg
cmp
mov
inc
repnz
into
fmul
shrl
add
test
sahf
jmp
outsb
xor
xchg
and
xchg
scas
stos
mov
pop
xorb
loopne
adc
adc
xchg
mov
pop
mov
and
fbstp
xor
pop
jo
pop
pop
stos
repnz
cmp
test
iret
test
repnz
inc
inc
sub
lods
dec
shll
jecxz
pop
mov
dec
fisubrl
jl
inc
sub
mov
inc
and
push
mov
ret
mov
sub
pop
addb
mov
in
mov
pop
mov
mov
mov
mov
jne
gs
push
popa
jo
pop
push
aam
sub
xor
cwtl
mov
test
xchg
adc
dec
fadd
out
inc
mov
adc
pop
mov
inc
js
jle
mov
mov
mov
push
cmp
out
sub
fistpll
adc
lahf
lods
pusha
mov
jno
add
cmp
sti
dec
mov
push
cmp
cmp
pop
jp
movsl
fistps
lods
pop
outsl
pop
fdiv
xlat
mov
mov
sbb
cs
pop
or
ss
insl
sbb
add
ret
dec
lds
or
or
pop
mov
jl
mov
lret
mov
sub
pop
mov
jmp
hlt
pop
pop
jge
inc
pusha
or
sub
aas
ds
inc
std
orb
jo
push
rcl
and
push
xor
das
inc
add
inc
lock
lahf
dec
loopne
jmp
and
mov
daa
sbb
andb
idivl
cwtl
int3
add
inc
pusha
pop
js
xor
out
in
test
je
cmp
jl
mov
rcr
lret
in
jge
xchg
mov
cld
adc
nop
ficomps
xor
mov
fbstp
push
ss
in
dec
aam
arpl
shlb
mov
ljmp
inc
and
bound
roll
orl
aad
cmp
rcr
in
dec
add
outsb
hlt
stos
and
out
test
sbb
mov
mov
adc
xor
inc
mov
add
cmp
mov
mov
stc
lahf
ficomps
cmp
mov
in
xor
aad
enter
cmp
fs
sbb
jge
xorb
lods
jne
inc
outsl
daa
xor
jg
mov
popf
sahf
jle
out
push
xchg
cwtl
mov
in
into
inc
mov
sub
mov
loope
xchg
lret
sub
bound
dec
scas
icebp
sub
push
or
test
fwait
mov
je
mov
mulb
xor
clc
pushf
popl
call
mov
cwtl
int3
xlat
mov
adc
arpl
ja
inc
mov
lcall
xor
stos
inc
cwtl
cmp
xor
ljmp
xor
dec
mov
push
push
mov
cmpsb
jo
cmp
clc
cmp
sbb
pop
ss
std
movb
pushf
or
cmc
adc
aad
mov
pop
or
aaa
pop
int
sti
rcrb
inc
and
mov
mov
ja
mov
push
and
cmp
ret
cmp
mov
dec
stos
mov
sub
adc
ljmp
int3
sub
cmp
or
mov
pop
les
sahf
icebp
xchg
mov
adc
mov
movsl
pop
mov
jp
in
push
push
andl
lret
packsswb
popf
cmpsb
outsb
jbe
out
xchg
xchg
pop
cmp
lods
jp
es
inc
and
lret
sbb
out
add
xchg
testl
ss
push
and
add
lock
mov
sbb
mov
aaa
stos
pop
or
xchg
cwtl
xchg
xor
cmpb
inc
daa
mov
rcrl
pop
jo
mov
or
cmp
sbb
cwtl
sbb
push
mov
mov
push
cmp
dec
dec
add
sub
or
xor
bound
pop
jno
or
adc
or
enter
bound
lea
mul
pop
jp
inc
mov
scas
sbb
or
jge
shlb
sub
loope
mov
cmp
inc
hlt
lods
and
aad
loopne
inc
mov
xchg
lret
inc
loop
in
insl
mov
loopne
cli
push
push
dec
arpl
mov
leave
adc
repnz
stos
loop
or
in
inc
cmp
bound
mov
lods
ss
std
mov
test
cli
cmpsb
loop
or
pusha
jae
loop
or
test
sbbl
leave
push
pop
cmp
inc
pop
mov
mov
inc
pop
subb
rcrl
lods
test
clc
fs
insl
push
jecxz
lock
dec
lods
push
push
xchg
pop
and
loope
test
inc
pop
fwait
loopne
fdivrl
leave
xor
add
mov
dec
ja
push
dec
lock
lret
inc
and
imul
aam
pop
rorl
enter
cmpsl
pop
shlb
sahf
cmp
jne
pop
stos
pop
in
or
nop
hlt
imul
pusha
and
and
cmp
sahf
scas
insl
xor
pop
mov
adc
cmp
xchg
enter
mov
sbb
lock
sub
pop
ja
loop
fsubrl
add
in
and
jbe
mov
mov
dec
inc
cmpsb
cwtl
push
mov
lcall
ret
push
dec
aas
sub
fwait
jl
int3
mov
fwait
mov
jns
mov
fwait
and
xchg
sub
mov
mov
int3
xor
cmp
stos
imul
or
insl
lds
dec
add
mov
mov
xchg
xor
rcll
hlt
out
pop
and
inc
xchg
xchg
scas
ret
je
arpl
stos
push
rol
push
bound
mov
mov
jmp
push
sbb
insl
sub
adc
pop
out
jbe
jnp
or
out
sbb
dec
and
stos
dec
jg
std
sbb
mov
mulb
cmp
pop
int
ret
push
lods
lahf
push
adc
addr16
in
call
lea
jbe
aam
push
lods
pop
cmc
adc
push
enter
ss
test
inc
rcrl
mov
in
pop
add
ljmp
xchg
inc
inc
jp
ljmp
dec
fucomp
stos
test
mov
clc
xor
subb
xor
jb
mov
adc
inc
lret
mov
pop
jp
cli
cmp
inc
scas
jnp
xchg
lea
rcrl
leave
mov
cli
sub
xchg
pushf
lods
flds
push
sbb
bound
xor
jmp
into
loope
test
mov
cmp
mov
add
lods
cwtl
or
roll
int
and
out
imulb
je
mov
dec
aaa
popf
add
dec
fcmove
adcl
jle
xor
adc
in
mov
outsl
ja
push
sub
jne
push
pop
aam
cmp
cs
aaa
data16
adc
in
mov
hlt
mov
les
inc
sub
cmpl
add
mov
movsl
mov
sub
out
and
clc
jno
or
mov
lea
loop
push
sahf
pop
push
dec
rolb
inc
repnz
cltd
inc
push
cmp
dec
push
jno
dec
mov
shl
lods
xchg
adc
ds
sbb
imul
addr16
sti
sub
aaa
xchg
and
stos
ficoml
fnsave
inc
addb
xchg
mov
stc
dec
sub
sti
cmpsb
xor
pushf
mov
test
imul
mov
cmp
pop
lea
movsl
sub
dec
int3
mov
jp
out
jmp
popf
pop
jnp
inc
aam
scas
or
mov
cli
std
std
data16
jp
aas
lods
jb
xchg
add
addr16
xchg
in
ljmp
int3
sbb
mov
scas
out
inc
push
popa
ss
icebp
out
mov
loope
mov
or
adc
jecxz
in
or
or
mov
push
nop
int
mov
cmpl
icebp
and
jmp
xchg
cmp
or
jno
fiaddl
in
scas
mov
es
or
sbb
sti
mov
dec
sti
testb
lds
cmpsl
mov
dec
sbb
push
jmp
dec
adc
sub
mov
push
pusha
cmpl
dec
insl
test
add
xchg
sbb
mov
fdivrp
xor
mov
push
adc
int3
mov
idivl
movsb
aam
imul
lods
and
sbb
mov
lret
add
jmp
push
bound
test
mov
sub
fisubl
lods
imul
ljmp
mov
pusha
push
sarl
sub
ljmp
gs
push
pop
test
outsb
push
xchg
xchg
test
fbstp
mov
jmp
addr16
mov
and
nop
int3
mov
iret
jmp
add
push
jle
inc
sar
mov
add
jge
xchg
mov
cmpsl
dec
mov
push
dec
pop
sahf
pushf
mov
cmp
and
scas
push
pop
fiaddl
les
pop
fdivrs
stc
jnp
sub
xor
pop
repz
insb
lret
dec
lret
pop
jne
mov
int
pop
call
scas
and
hlt
and
adcb
lods
loope
lret
fidivs
into
dec
push
or
dec
loopne
nop
out
loopne
gs
out
fisubrl
cmp
out
adc
mov
imul
xchg
test
pop
or
leave
fsubs
scas
shll
or
out
aaa
sub
add
add
mov
arpl
andb
jp
movsb
add
cmpsb
adc
pop
mov
or
xchg
aas
aam
pop
aas
ret
push
and
les
test
call
test
fcoml
adc
add
fwait
pop
fbld
push
xor
std
xchg
out
xor
fisttpl
add
pop
xor
pop
add
pop
mov
fmull
pop
push
mov
mov
test
cmp
cli
adc
sbb
xchg
out
test
push
dec
xchg
mov
cld
insl
jl
testb
cmpl
sbb
and
jp
and
jmp
mov
pop
cmp
ja
sti
cli
xor
cld
sub
js
adc
ja
popa
in
lock
push
cmp
cmp
add
sti
cwtl
sub
inc
xchg
xchg
cmp
bound
addr16
mov
jmp
cmp
shlb
and
mov
sbb
loope
pop
sahf
xor
mov
xor
icebp
push
loope
in
push
jmp
shlb
push
jecxz
std
dec
sub
pop
xchg
scas
test
xchg
add
cmp
mov
pop
and
pushl
pusha
int
xlat
dec
push
jbe
push
outsb
xor
mov
push
cltd
push
data16
xchg
xchg
icebp
and
cli
loope
or
and
movsb
popl
mov
ret
rcll
mov
lock
push
mov
leave
add
scas
adc
jnp
inc
mov
mov
mov
and
cld
fisttpl
mov
cmp
test
sub
jo
xchg
or
pop
sahf
xor
std
clc
inc
or
fcoml
in
pop
stos
loope
mov
dec
adc
scas
insb
pop
cli
adc
sub
add
cmp
push
sub
mov
mov
stos
js
lret
out
repnz
add
hlt
and
inc
xchg
and
mov
adc
add
not
ret
sub
in
sub
mov
cmpsl
fs
adc
aam
ljmp
cmp
rcll
jns
xor
cmp
outsb
sub
and
mov
jno
lcall
jae
mov
nop
mov
inc
xchg
push
xor
and
xor
repz
or
out
dec
cmp
lret
fsubr
mov
lret
sbb
adc
push
and
fstpt
mov
push
mov
cltd
mov
out
mov
sbb
roll
mov
xchg
and
dec
sbb
pusha
mov
adc
pop
push
jb
pop
pop
call
xchg
mov
add
gs
jne
out
rcl
imul
pop
sbb
and
aam
inc
data16
or
in
mov
scas
cmpsb
fldl
xchg
clc
orb
inc
dec
cwtl
mov
jecxz
lods
gs
add
xchg
scas
add
enter
push
stos
les
jno
data16
mul
lret
ss
out
sub
pop
sub
jns
sti
inc
inc
dec
sti
lahf
push
mov
scas
leave
in
mov
push
mov
aam
sbb
pop
cmp
mov
pop
xor
repnz
inc
jmp
inc
cmp
bound
out
hlt
mov
mov
clc
cmpl
mov
ds
shll
adc
xchg
fdivs
ret
cmp
cld
mov
cmp
out
inc
push
fmulp
xlat
and
mov
andb
fdivs
sub
or
push
jns
test
jo
addr16
stos
sub
mov
xor
push
es
insb
and
mov
inc
mov
cmpsl
movsb
imul
fldcw
cmpsl
mov
idiv
xchg
mov
arpl
hlt
test
push
std
jle
fsubrl
fstps
in
pop
pop
stos
add
xor
ret
jbe
lahf
push
scas
and
mov
sbb
push
gs
xchg
icebp
mov
cmp
xchg
std
inc
pop
loope
loopne
cs
pop
mov
aad
lahf
xchg
popa
xor
cmp
shlb
mov
push
je
lret
lea
outsb
aas
add
and
pop
inc
pop
xchg
mov
mov
and
jb
xor
jecxz
cli
jae
pop
mull
lahf
cld
xor
in
in
scas
stos
push
add
aas
pop
int3
mov
shl
xor
out
push
mov
negl
into
subl
mov
adc
adc
push
lods
mov
sub
sti
shll
out
push
scas
outsl
fs
add
mov
scas
jbe
jnp
dec
cmp
push
or
inc
faddp
adc
jno
jns
repz
insw
push
sbb
stos
call
add
es
pop
jne
in
inc
push
arpl
scas
movsl
or
popf
sub
xchg
adc
sub
lock
push
mov
shrl
push
les
pusha
fisttps
lret
fimull
lods
fistl
push
es
xor
ljmp
lahf
xchg
jo
inc
xchg
add
repz
in
loopne
jbe
cmp
popl
incl
nop
xor
or
cld
mov
cmp
and
pop
cmp
cmpsb
mov
sahf
jl
cmovae
adc
xchg
clc
into
mov
jne
aas
xchg
cmp
test
ret
adc
fiaddl
es
enter
cs
xchg
insb
movsl
lcall
out
jb
push
xchg
popf
fwait
ljmp
stc
test
aam
mov
test
jb
notb
dec
ljmp
ja
sub
das
lcall
adcl
inc
jae
and
and
pusha
push
stos
pusha
fwait
adc
push
jle
cld
push
popf
dec
dec
pop
sub
mov
pop
jne
lahf
xchg
inc
mov
cld
adc
mov
cmc
pop
mov
sbb
lret
dec
js
out
sub
adc
xchg
sar
mov
add
dec
adc
adc
add
aas
enter
ds
es
xchg
std
sbb
aas
insl
sbb
cmpl
push
mov
pushf
test
mov
push
push
daa
xchg
mov
out
and
jne
cli
daa
push
pusha
lds
sbb
insb
sbb
addr16
and
les
cmp
jnp
mov
lock
aam
mov
cmp
movsl
mov
mov
dec
inc
sbb
lds
data16
sub
iret
rorl
mov
push
mov
fstps
rcrl
stc
loopne
incb
pop
fldenv
movb
mov
mov
xchg
pop
cli
add
pushf
or
imul
icebp
andl
stc
outsb
pop
cmp
mov
xchg
lahf
mov
mov
inc
cwtl
decl
jno
and
xor
sbb
xchg
cs
rcrl
aam
lock
xor
test
inc
add
cs
stc
jnp
dec
inc
jle
out
jl
stos
lods
rclb
mov
test
les
je
jg
stos
leave
test
adc
into
scas
sahf
insb
shr
mov
adc
dec
xchg
adc
dec
scas
dec
push
xorb
push
ja
fmuls
and
and
mov
leave
shl
xor
cmp
bound
inc
sbbl
adc
pop
cmp
sub
add
movsl
imul
test
rorb
pop
sarl
xor
mov
in
add
lea
icebp
mov
jno
ret
inc
add
gs
pop
mov
fiaddl
jb
dec
stc
incl
fwait
ds
pop
push
js
xchg
push
fwait
fs
lcall
aaa
daa
shrl
addr16
dec
test
mov
adc
scas
mov
cmp
ret
addl
les
rcr
jns
add
mov
icebp
jmp
xchg
shrb
imul
ss
insb
cmpl
aaa
arpl
incl
inc
push
xor
lcall
cmp
mov
imul
xor
pop
dec
xor
stos
xchg
sbb
stos
bound
mov
js
in
pusha
jp
mov
mov
cltd
push
adc
push
arpl
jbe
push
out
pop
inc
jp
push
mov
cmc
cmc
mov
lahf
cmp
loopne
loope
and
push
cmp
xchg
test
cmp
adc
xor
push
test
adc
xchg
std
stos
fdivrs
fadds
cs
cmpsb
call
lahf
mov
dec
xchg
loop
cmpsl
rcrb
inc
ljmp
mov
adc
addr16
add
push
scas
out
les
fisubl
mov
je
push
lods
xor
and
out
mov
inc
out
mov
lea
mov
daa
add
add
cmpsl
dec
push
mov
nop
jl
outsb
push
mov
pop
xor
ret
jno
dec
cmp
fwait
je
jno
cmp
xor
sbb
daa
les
jl
loop
and
cltd
fsts
xor
imull
out
idivb
fildl
mov
cmp
pop
or
mov
or
sar
imul
inc
xchg
cltd
les
push
lret
cmp
rcl
fcomps
xor
lock
lcall
stos
popa
movsl
mov
int
inc
adc
popa
jo
add
jne
fstps
dec
in
jo
sub
xor
aas
cmp
cmp
xor
xor
jne
fdivl
divb
sbb
out
testb
out
xchg
hlt
out
dec
xchg
subl
ja
push
xor
std
ljmp
xor
push
add
adc
xchg
sahf
jmp
icebp
mov
aas
shll
and
pop
jb
xor
xor
mov
inc
out
push
push
dec
cmc
enter
push
or
pop
movsl
sub
movsl
push
mov
fistps
adc
les
cmpb
or
sub
cmp
rcl
mov
xor
idiv
jae
lock
adc
or
inc
and
inc
jnp
data16
inc
cmp
jl
sbb
sbb
adc
and
orl
insl
cmp
jo
test
mov
cwtl
pop
and
sbb
into
idivl
loope
call
mulb
aad
into
inc
inc
shll
je
dec
insl
dec
stos
ja
loop
adc
jmp
sub
inc
sub
in
dec
cmp
xchg
mov
imul
inc
in
pusha
fldenv
call
aas
hlt
fsubrs
cmp
das
subb
or
push
inc
push
sub
inc
mov
xchg
mov
js
hlt
sbb
xchg
int
nop
xchg
in
pop
pop
repz
stos
push
mov
mov
xchg
cmp
adc
ja
push
add
jmp
mov
enter
pop
xchg
mov
inc
jmp
inc
add
jg
dec
orb
dec
sbb
movsl
push
sbb
out
jb
in
pop
xchg
jo
mov
mov
push
cmp
cmc
lods
outsb
inc
mov
add
in
roll
xchg
in
in
arpl
loope
in
push
xchg
lret
inc
adc
test
aas
pop
dec
adc
cli
adc
out
jno
xor
nop
rcrl
inc
in
fcmovne
dec
iret
movsl
in
pop
mov
jmp
pushf
clc
subl
mov
mov
aam
in
push
daa
arpl
inc
shlb
dec
lea
scas
cwtl
movsl
pop
cmc
notrack
cmp
lea
fwait
mov
test
dec
push
xchg
mov
push
mov
testl
mov
pop
in
mov
test
out
add
push
mov
xor
jle
adc
test
push
test
in
popf
test
push
scas
add
add
mov
push
or
fwait
cmp
mov
push
inc
xadd
pop
mov
xrstor
orl
out
mov
mov
pop
mov
std
sub
xor
sbb
pop
rol
je
test
mov
jle
inc
in
loopne
xorb
scas
gs
or
mov
sub
insb
xor
test
mov
lahf
dec
xor
push
clc
js
inc
ljmp
cmc
das
or
shll
xchg
lret
mov
das
cmp
cmp
ficoms
lods
jmp
test
mov
outsb
mov
scas
sti
movsb
xor
lods
sbb
xchg
sar
sbb
popf
sbb
insl
mov
mov
jle
ficoms
xchg
cwtl
pop
xor
sub
bound
lret
and
jns
mov
dec
fisubl
cmp
push
out
sbb
lods
cwtl
mov
xchg
dec
fisubrs
dec
mov
or
and
mov
in
iret
sbb
in
cltd
fimuls
idivl
fistpl
icebp
pop
fs
sbb
inc
inc
adc
sarb
fxsave
jmp
mov
mov
fld1
sbb
mov
lds
int
adc
mov
cmpl
data16
inc
cs
imul
xchg
imul
mov
sbb
aam
push
test
mov
pop
push
mov
inc
mov
pop
xlat
add
cmpsb
xchg
into
or
adc
fcomi
adc
ja
ret
nop
lods
push
fwait
mov
xor
adc
pop
iret
mov
dec
pop
testl
aas
rcrb
push
movswl
xor
mov
mov
jae
mov
cmp
mov
adc
cmp
pop
inc
jg
fucom
sahf
movsb
hlt
dec
xchg
insl
gs
pop
push
popa
add
add
mov
cli
xor
ljmp
decl
dec
push
sub
pop
or
aas
test
push
mov
and
adc
xchg
push
data16
movsb
cmpsl
scas
fstpl
aad
ljmp
pop
daa
push
ljmp
data16
xchg
icebp
js
addr16
das
or
xchg
cmp
fisubrs
js
dec
dec
fsubrp
inc
mov
jg
mov
mov
es
fwait
jns
inc
lret
sub
insl
in
clc
call
clc
pusha
hlt
push
adc
xor
adc
movsl
pop
mov
js
or
and
xchg
mov
and
pop
xchg
inc
mov
xchg
mov
divb
icebp
rolb
dec
cmc
ss
adc
std
pushf
pop
repz
rclb
and
lret
cmp
out
decb
cltd
icebp
jle
lret
dec
andl
pop
sbb
sahf
mov
and
rol
lds
mov
jb
sbb
cld
or
lods
rcr
xor
in
xchg
inc
int3
pop
stos
out
xchg
js
inc
dec
cmpsl
roll
adc
int3
fsub
test
ds
or
xchg
in
pop
sub
dec
das
sarb
insl
ds
das
lods
fsubrs
mov
mov
repnz
loopne
test
jl
pop
sbb
push
add
cwtl
outsl
rcr
ret
sbb
int3
cmpsl
mov
call
cmpsb
or
push
stos
lret
popa
add
test
mov
jl
sbb
inc
ficoms
scas
dec
inc
mov
ja
mov
sbb
and
loop
les
rorl
xor
pop
test
pop
cld
lret
push
and
lds
lahf
imul
jb
inc
mov
aas
pushf
mov
fsts
scas
sbb
push
sbb
inc
shrl
fidivs
in
pop
cwtl
adc
scas
aad
jp
outsb
psllw
iret
or
sbb
jno
fstpt
push
push
scas
test
mov
rolb
orb
scas
cmp
or
jns
out
lods
or
sub
pop
cli
xchg
call
les
rclb
jo
sbb
nop
add
add
insb
jl
sbbb
movsb
imul
xor
out
in
mov
pop
aas
aaa
cmp
orl
push
mov
stos
xor
popa
push
test
dec
std
dec
inc
mov
sub
jle
jns
dec
mov
mov
cmpsb
mov
and
mov
xor
jl
cmpsl
test
movsb
mov
adc
pusha
cmp
xchg
lock
loop
pop
inc
pop
add
pop
and
push
int
out
imul
fucompp
lds
popa
sub
dec
xor
mov
test
out
sahf
inc
xchg
add
push
inc
divl
fwait
sub
repz
lret
inc
dec
orb
and
jb
jge
ljmp
push
inc
push
pop
clc
sub
mov
mov
int3
xchg
lods
insl
cld
dec
aas
repz
fmull
push
cmc
adc
inc
sbb
dec
dec
adcl
add
or
push
push
pop
cmc
in
aam
repnz
int3
cld
out
popa
lcall
arpl
psubsw
ljmp
dec
fisubs
push
sub
in
mov
mov
adc
sbb
sub
xchg
insl
adc
cmp
loop
inc
push
cmp
sbb
fidivs
cmp
xchg
pop
dec
cmp
or
or
jnp
outsl
mov
ds
test
cmp
mov
je
ret
popa
movsb
or
movsb
mov
pop
xchg
flds
mov
jae
xchg
mov
cmp
loope
fadds
lds
repnz
cmpsl
adc
and
jne
aam
addr16
mov
inc
lcall
adc
iret
jo
mov
pop
adc
cli
jns
push
arpl
mov
xchg
and
js
fidivrl
mov
out
push
hlt
lods
add
push
std
jns
mov
movsl
push
push
jmp
outsb
imul
cld
jns
sti
add
cmpsl
adc
leave
jl
jg
mov
inc
sub
decl
mov
adc
daa
adc
xor
lds
js
cld
or
mov
movsl
mov
jl
stc
loopne
jo
jns
fadds
push
gs
scas
xor
lcall
pop
lret
mov
pop
dec
pop
es
dec
repz
or
jne
iretw
adc
popa
es
mov
out
xchg
cs
jno
mov
fcoms
scas
fisubrl
mov
cmp
mov
pop
aam
imul
int3
lret
inc
cmp
jo
loop
sub
push
xchg
int3
sub
incb
loope
jmp
jnp
xchg
dec
jae
dec
push
xchg
hlt
fisubs
gs
lcall
pop
mov
adc
and
in
xor
out
addr16
xchg
dec
inc
sub
leave
mov
test
aad
add
sbb
je
jle
cmp
aaa
ljmp
subb
sbb
push
pop
nop
sub
scas
xchg
rcrb
ret
int3
add
mov
push
movl
and
popf
out
out
dec
mov
dec
mov
pop
popf
xchg
out
shrb
inc
rcrb
add
inc
pop
cmc
mov
js
mov
add
fnsave
cmp
paddw
into
mov
dec
aaa
shrl
aam
js
lds
push
cmpsb
adc
ret
rolb
daa
add
mov
fdecstp
stos
fsubs
loopne
add
inc
adc
not
adc
lahf
or
adc
adc
xorb
xchg
adc
and
sub
call
xor
icebp
lods
dec
rclb
cmp
mov
loop
xor
xchg
sbb
sti
rorl
inc
mov
lock
divb
inc
ds
and
fdivr
aad
fwait
mov
filds
adc
shll
lods
leave
cltd
and
xchg
and
lcall
cld
pop
push
and
sub
add
stos
inc
mov
cmp
jb
xchg
shlb
dec
lahf
push
dec
lahf
stos
cmpsb
outsl
fwait
pop
mov
adcb
jle
lret
cld
lea
mov
mulps
xor
sub
mov
rcl
sub
jmp
pop
cmp
lret
popa
dec
jp
cmp
je
test
dec
jno
mov
lea
int
iret
loop
scas
rolb
lcall
xchg
jmp
dec
addb
sub
scas
cltd
inc
mov
cmp
jmp
and
jno
test
shlb
or
push
xor
pop
jns
imul
xor
lods
mov
aas
inc
jae
daa
and
cmp
ds
mov
test
scas
test
push
fiaddl
push
or
lret
lods
mov
jae
sbb
mov
push
sbb
add
xlat
cmp
enter
nop
inc
pop
movsl
loopne
push
loopne
fmuls
xchg
cmp
xor
int
std
jb
pop
xor
push
xlat
and
and
movsb
ljmp
lret
xor
sub
insl
outsb
rcl
sub
fcom
xor
pop
add
mov
stos
or
ljmp
mov
addb
lahf
int
or
movsb
cltd
lods
pusha
and
mov
lods
cwtl
inc
popf
or
xchg
test
stos
adc
xchg
xor
pop
pop
sub
xchg
hlt
inc
push
in
les
sub
jnp
scas
jae
inc
mov
dec
aas
dec
ss
cmp
and
sarl
mov
movsb
jp
sbb
dec
pusha
jecxz
adc
fidivrs
ljmp
mov
fwait
pop
bound
push
jae
test
fnsave
add
xor
adc
pop
xorb
scas
shlb
aas
and
lret
xchg
les
loopne
mov
push
stos
pushf
mov
dec
and
mov
daa
popw
cmp
jne
xchg
fldt
mov
adc
cmp
mov
bound
rclb
jo
mov
gs
daa
adc
ret
add
lret
cmc
repnz
xor
sub
dec
pushf
fs
sub
or
sub
imul
pushf
les
or
mov
mov
fcmovbe
or
test
shll
and
frstor
paddusb
sbb
outsl
lcall
pushf
dec
stos
pop
ret
sbb
imul
add
repnz
and
push
das
inc
jne
jmp
fwait
mov
inc
in
pop
cmp
cmp
mov
insb
fidivrl
mov
pop
rclb
push
mov
push
icebp
push
addr16
movsb
jge
xchg
in
dec
lock
cmpl
dec
mov
in
cwtl
jb
mov
aaa
xor
and
scas
mov
stc
andl
dec
xor
mov
ficoml
aad
fstpt
lea
lea
jb
cmp
mov
add
imull
rorl
push
inc
xor
stos
lock
inc
lock
or
test
mov
je
or
stos
xor
push
xchg
ds
xor
sub
inc
test
push
insb
icebp
mov
cmc
leave
adc
aaa
cmp
inc
push
cmpsl
push
pop
mov
jmp
adc
mov
xchg
rcrb
mov
push
lea
cmp
xchg
dec
jae
mov
cmpsb
dec
mov
test
xchg
insl
insl
add
xchg
out
mov
xchg
les
push
mov
xchg
mov
aas
hlt
pop
cwtl
add
flds
mov
cmp
and
lret
xchg
mov
pcmpeqw
sbb
sub
fistpl
mov
out
std
jae
jns
popa
movsl
cmp
idiv
aam
leave
inc
xchg
add
inc
sbb
pop
test
jbe
xchg
mov
jl
mov
push
int
or
popf
std
xor
push
or
je
ds
arpl
push
add
sub
adcb
lods
adc
pop
xchg
sbb
mov
es
xchg
fcomps
in
arpl
xor
aas
pop
data16
mov
xorl
in
je
xchg
mov
arpl
pop
mov
nop
xchg
pop
in
jno
aas
ffree
mov
sub
orl
outsl
add
fstl
les
inc
xor
fcom
lods
mov
cmpsl
fsubrl
ret
xchg
sub
xor
fisttps
inc
lods
sub
xchg
push
and
mov
jg
push
sbbb
mov
aaa
jge
and
fs
add
jecxz
push
shlb
push
aas
add
or
fsubs
or
jmp
xor
sub
mov
jb
mov
cmp
mov
jns
mov
into
js
fucom
int
mov
push
mov
push
dec
sub
stc
out
mov
pop
mov
stos
int
sub
push
and
jae
inc
dec
aad
clc
mov
push
enter
repz
inc
xchg
adc
repz
xor
stos
or
mov
sbb
jae
call
jge
mov
sbb
dec
push
xchg
dec
add
test
pop
cmp
sub
pop
push
xchg
fsubl
cmp
mov
adc
jmp
shrb
or
jb
insw
das
or
je
and
fmul
pop
mov
push
mov
imul
in
push
pop
mov
sub
and
ret
into
inc
aad
insb
rcrb
sbb
insl
dec
pop
fisttpll
cld
jne
pop
cltd
ss
mov
ret
push
xchg
mov
out
into
fisttpll
pop
adc
in
and
shlb
push
test
or
dec
push
lock
fstl
push
add
xorl
mov
aam
in
int3
jg
mov
shll
outsb
lds
push
pop
pop
add
mov
loop
popf
stos
fistpl
mov
push
int
imulb
ja
jl
sub
pop
or
inc
lds
adc
repz
sti
push
lcall
mov
xchg
imul
and
imul
mov
fwait
pop
lret
test
sub
orl
sbb
sahf
jmp
cld
mov
repz
inc
les
mov
insb
inc
orb
cmpsl
cmp
mov
inc
cmp
sub
cld
inc
mov
push
icebp
stos
jmp
lock
lods
jmp
loop
push
cld
xchg
out
in
daa
sbb
xchg
out
aam
xlat
sub
adc
sbbb
test
push
lods
mov
into
sti
add
pusha
and
loope
add
scas
pop
mov
loop
xchg
shrl
xchg
call
or
mov
in
cld
das
pop
and
xchg
and
cmpsl
sbb
dec
movsb
and
pop
lods
lods
mov
dec
das
xchg
aaa
and
mov
int3
jecxz
add
push
mov
xchg
jae
leave
loope
add
fisttps
sbb
jle
xor
int
and
add
sub
push
cmpsl
call
push
out
jmp
icebp
jns
movsb
ficomps
jl
movsb
sbb
push
inc
sarb
lret
mov
fidivs
push
xlat
iret
cld
into
adc
push
aam
sub
js
mov
test
addl
js
push
or
loopne
mov
add
xchg
aam
or
imul
cli
rsm
lds
lea
lds
and
pusha
pop
in
out
mov
imul
stc
imul
jle
imul
xchg
fdivrl
or
std
push
js
add
sub
pusha
stos
xor
lods
jmp
inc
add
cmp
or
xorb
scas
mov
mov
push
fstpl
sbb
in
aas
cmp
sbb
lcall
es
dec
fwait
xor
js
movsb
rcrl
cld
cltd
call
dec
add
inc
cmp
push
xchg
sahf
repnz
lds
lahf
mov
adc
adc
xor
lods
cld
jg
shl
jecxz
in
inc
pop
cmpsb
mov
adc
lods
pop
in
rorl
cmp
inc
cmp
rcrl
mov
adc
notb
loopne
pop
pop
dec
jp
test
subl
jmp
add
jecxz
push
data16
add
popa
cmp
shll
jno
xchg
loop
movsb
push
stos
repnz
adc
popf
ror
pop
imulb
pusha
push
aam
data16
jle
movb
mov
mov
mov
aad
or
stc
lcall
adc
pop
ds
sbb
clc
cmp
cmp
in
negl
inc
fisubs
xlat
mov
add
adc
call
dec
jecxz
repnz
mov
jno
std
fisttpl
out
leave
push
mov
stos
push
add
test
shrl
cmp
fildl
xchg
pop
into
mov
imul
pop
xchg
mov
sub
ret
in
aaa
push
add
push
sub
sahf
sti
sbbb
hlt
mov
jmp
mov
and
adc
push
enter
cltd
push
jle
jmp
xchg
xor
jb,pn
daa
ja
out
and
mov
into
xchg
jb
mov
leave
xor
cmpsb
test
fists
xchg
lret
inc
loope
adcb
imul
int3
and
or
sub
cmpsb
xor
dec
inc
mov
outsb
cmpsb
decl
cmpsl
ja
mov
and
dec
out
jo
leave
call
add
jns
std
fcoml
xchg
inc
xlat
icebp
ret
adc
pop
xor
out
clc
sub
out
ja
pop
test
xchg
lret
push
xchg
ljmp
jns
mov
mov
xchg
les
push
push
cmp
outsb
test
es
fnstenv
sbb
leave
mov
and
hlt
les
add
adc
pop
and
cmc
xchg
loopne
sbbb
push
pushf
das
mov
cltd
xchg
jne
filds
repnz
lock
push
adc
xor
arpl
ficomps
mov
into
fsubr
or
jecxz
dec
dec
jo
mov
movsb
jecxz
repnz
push
or
rcr
inc
lds
dec
jae
dec
into
pusha
cmp
jae
fwait
inc
cmp
in
paddb
clc
adc
and
inc
inc
mov
popf
push
mov
hlt
imul
int3
or
fldenv
nop
scas
cmpsl
xor
mov
in
arpl
fildl
mov
inc
mov
cmp
in
dec
cmpsl
dec
add
int
pusha
out
fbld
mov
test
insl
mov
mov
movsb
cmp
test
shl
pop
fnstenv
push
cli
call
pusha
dec
xchg
out
hlt
notl
orb
test
fiadds
mov
mov
and
mov
movsb
mov
push
std
xchg
aas
bound
pop
js
add
push
test
mov
cwtl
inc
mov
cltd
lret
or
mov
add
xchg
lcall
pop
adc
int3
adc
inc
mov
or
sbb
ds
add
addl
leave
idiv
cmpsb
add
and
add
cmp
ret
or
push
imul
cld
fldl
fwait
adc
xor
add
add
adc
std
das
cmpsl
jge
mov
push
scas
mov
out
mov
into
mov
and
fnstenv
iret
and
dec
outsl
test
mov
mov
popa
fistps
adc
out
mov
jae
nop
inc
mov
jb
push
es
add
enter
pop
int3
push
fisttpll
mov
gs
out
out
fisubrl
mov
jmp
inc
push
rcl
orl
xor
mov
sbb
out
repnz
pop
cmp
inc
insb
push
hlt
jmp
repz
adc
enter
xor
cmp
inc
or
adc
icebp
shll
clc
dec
fstl
cmc
add
mov
pop
sti
scas
mov
lods
jns
cwtl
jp
fisttps
dec
pop
mov
adc
sbb
sbb
loope
es
js
xchg
das
add
jne
cmp
add
leave
movsl
mov
stos
in
or
add
sub
dec
pop
rclb
or
inc
lock
dec
lahf
int
aaa
add
lahf
dec
cmpl
cmp
xchg
xor
cmp
xchg
push
add
fs
mov
push
jo
inc
dec
cli
fwait
aad
fstpt
pop
xchg
mov
mov
or
xchg
cmp
xorl
dec
jbe
popf
jns
mov
sub
add
push
shll
mov
insb
mov
dec
inc
or
ret
sub
loop
mov
insb
sub
push
sti
pusha
adc
rcr
mov
or
out
mov
shl
std
inc
jns
test
or
sbb
outsl
push
lahf
or
enter
in
add
mov
stc
pop
xor
adc
cli
mov
lcall
aad
std
hlt
aam
movsb
int3
ds
iret
jmp
push
mov
jle
xor
dec
div
int
inc
sub
add
ret
mov
sbb
call
xchg
leave
sub
icebp
icebp
ja
xchg
pop
addr16
xlat
jmp
inc
out
jno
fidivrl
or
scas
jne
gs
adc
arpl
cmp
es
push
add
mov
inc
xchg
pusha
dec
mov
rorb
pop
pop
xchg
cmpl
scas
xchg
jecxz
stos
pusha
push
pop
xor
bound
adcl
or
and
cld
scas
test
xchg
cwtl
fucom
add
dec
adc
fsts
ss
shrl
movsl
push
cltd
daa
in
insl
subb
cwtl
mov
mov
push
std
lea
bound
dec
scas
pop
or
and
xor
inc
mov
sbbb
mov
jp
cli
iret
mov
mov
mov
stc
ss
ja
fistps
lahf
js
repnz
pop
fidivl
cmp
mov
shll
xlat
lret
push
inc
dec
repnz
add
neg
fbstp
fnstcw
pop
stc
and
popf
les
sub
aas
mov
out
std
jns
mov
dec
mov
xor
mov
imul
call
xchg
mov
mov
jmp
mov
lods
es
cmp
or
sub
roll
pop
rclb
add
xor
mov
movsl
dec
inc
inc
xor
xorl
mov
and
je
cmc
dec
sbb
push
arpl
pushf
xchg
scas
push
xchg
icebp
lcall
inc
push
and
dec
mov
popf
xor
mov
pop
mov
scas
mov
mov
or
and
dec
adc
and
push
scas
cmp
push
fiaddl
jecxz
and
hlt
cmp
inc
xchg
pop
movsb
add
lcall
fwait
cld
aam
add
jp
cld
pop
jbe
jp
fisubs
in
shlb
sub
ret
enter
call
cltd
iret
xchg
push
mov
push
int3
pop
hlt
mov
add
repz
in
sbb
pop
fdivr
clc
mov
push
push
mov
out
shrb
int3
fsubl
jmp
out
jl
pop
jmp
or
mov
inc
in
mov
jnp
mov
and
sbb
cmc
mov
or
dec
mov
shrb
push
ljmp
mov
xor
sub
pop
out
pushf
xchg
push
xchg
icebp
add
xchg
sbb
mov
sub
add
or
jp
data16
sbb
xchg
sbb
dec
or
ret
xchg
add
xor
or
jb
or
stos
xor
sarb
inc
push
xchg
lock
enter
jnp
cmpsb
xor
mov
ret
gs
fnstenv
stc
sti
data16
jno
sub
jnp
mul
add
or
movsb
arpl
jge
cmp
into
adc
sub
int3
lea
add
test
push
jmp
fs
rclb
clc
ja
jmp
jecxz
rolb
test
add
jo
mov
call
jmp
add
testb
cwtl
sbb
loope
and
sbb
cmpsb
scas
mov
test
jmp
daa
rclb
pop
test
inc
sub
sbb
sbb
int
fdiv
inc
std
cmp
mov
and
sti
sti
and
insl
add
or
xor
fs
mov
or
stos
repz
jmp
outsb
arpl
adc
scas
scas
jb
pop
push
inc
add
adc
xor
mov
mov
mov
in
xchg
dec
int
dec
jmp
push
xchg
mov
lcall
mov
or
ret
or
mov
mov
call
jns
or
inc
add
push
mov
jae
mov
cld
mov
jae
push
push
push
push
ret
jb
or
lcall
pop
mov
mov
cwtl
aaa
mov
dec
imul
aad
idivb
jnp
xor
xor
daa
xchg
outsb
aam
lahf
pop
push
out
fisubrl
pop
jmp
mov
mov
jmp
aas
push
rclb
xchg
pop
and
in
mov
mov
dec
pop
dec
or
adc
out
dec
or
js
repnz
andl
test
add
mov
out
pop
int3
cmp
cmp
mov
stc
pusha
int3
ficoms
je
xlat
lock
movsb
stos
sub
or
lds
aad
inc
negb
jg
or
out
das
push
push
pop
cmpsl
mov
push
lock
outsl
lds
out
sbb
jae
dec
dec
xor
adc
sub
xchg
fbld
jmp
out
dec
mov
jg
adc
xor
xchg
popf
cltd
hlt
pop
daa
movsb
cld
xor
imull
imul
pop
mov
nop
jecxz
push
add
std
inc
inc
imul
testb
loope
adc
fwait
jge
cld
xor
mov
fadd
shlb
xchg
xchg
add
xor
mov
pop
xchg
sti
test
jle
lds
ja
fwait
sub
sbb
jne
outsb
sbb
test
in
xor
fnstenv
int
pop
jp
jns
cmc
pop
push
test
jg
and
sub
or
adc
lahf
push
sahf
lret
inc
jae
ficoml
enter
jb
bnd
xor
and
lock
mov
js
stc
stos
out
addr16
nop
push
cs
inc
fisttpll
stos
cltd
aad
pop
hlt
in
out
sahf
clc
inc
push
iret
cwtl
or
inc
pop
enter
lea
negb
je
repnz
mov
enter
stos
jae
xchg
aam
adc
aad
jp
mov
jle
push
pusha
lods
xchg
mov
aas
mov
cltd
lret
les
adc
dec
lret
lret
int
mov
jmp
push
lods
xchg
outsl
push
mov
lahf
cmp
mov
sbb
clc
fsubrl
or
sbb
daa
repz
inc
push
adc
sbbb
mov
mov
mov
dec
mov
mov
addr16
jl
cld
sbb
add
inc
mov
xchg
or
filds
shlb
pop
dec
movsl
out
aad
imul
xor
xchg
int
jle
mov
push
xchg
mov
sbb
outsb
cmp
mov
xor
imul
push
add
aam
fisttpll
ljmp
jb
mov
push
mov
data16
cmp
lea
xor
mov
sbb
bound
imul
mov
rdmsr
jl
div
push
enter
dec
stc
pop
inc
or
jb
xor
into
push
add
dec
je
fwait
and
in
cmp
pop
enter
rorl
jne
jbe
mov
or
mov
andl
std
mov
inc
pop
or
cwtl
test
and
cwtl
cwtl
jp
dec
pop
nop
icebp
sbb
inc
and
and
shr
mov
into
repnz
shll
cmpb
pop
inc
sub
rcrb
mov
mov
bound
lods
push
cmp
fwait
dec
jmp
mov
daa
shll
push
xchg
sahf
pop
inc
loopne
bound
in
push
sbb
mov
sar
scas
fmull
inc
sahf
mov
jp
and
hlt
sti
and
pop
ret
ja
lock
xchg
jno
roll
imul
in
mov
add
rcrl
cmp
mov
sbbb
shl
mov
push
dec
push
inc
inc
repz
les
ds
xor
xlat
adc
add
in
lock
in
xchg
das
movsl
arpl
add
out
adc
jns
stos
and
pop
imull
jbe
push
cmp
xchg
mov
fwait
pop
pop
je
lret
xor
fbstp
cwtl
or
leave
push
cmp
cmp
flds
push
mov
sahf
push
pop
leave
cli
fwait
xchg
clc
sbb
in
and
in
sbb
sbb
push
pop
mov
xchg
lahf
ljmp
jae
mov
out
cmpsl
frstor
pop
xor
rclb
or
cltd
xlat
sbb
mov
es
stos
stc
and
xor
add
nop
setg
insl
inc
cmpsb
adc
test
push
xor
dec
inc
mov
pop
add
sbb
push
flds
loope
shrb
arpl
pop
stc
cmp
mov
push
cld
gs
dec
inc
inc
dec
add
jne
arpl
push
cmp
push
push
mov
loopne
loopne
mov
inc
adc
mov
loop
mov
cld
imul
push
and
mov
xchg
cmc
sub
xor
sti
mov
mov
pop
int3
add
jb
mov
push
xchg
xchg
xchg
and
mov
push
lods
int3
push
inc
push
movsb
lods
push
jmp
lods
in
xchg
popf
icebp
ljmp
iret
sbb
into
adc
jecxz
push
in
in
adc
std
in
mov
frstor
fildll
je
inc
dec
mov
lret
call
arpl
mov
lcall
lock
jp
cli
inc
es
ror
stos
inc
outsb
inc
hlt
imul
push
push
xchg
sub
push
stos
popa
mov
push
or
jecxz
jb
jno
adc
addb
and
sarl
pop
aam
push
cmp
pop
xchg
ds
or
jmp
mov
loop
jbe
dec
push
cs
sti
insl
push
or
mov
xchg
test
sub
adc
fcoml
cmc
out
js
sub
sarb
js
outsb
mov
lea
lods
in
mov
pop
cmp
aaa
xchg
mov
xchg
rolb
sub
test
sub
mov
inc
add
or
push
mov
or
mov
mov
push
xor
lcall
or
push
push
xor
mov
loope
inc
roll
jo
subb
cwtl
repnz
cmpsb
mov
push
enter
push
jno
mov
and
cmp
loope
enter
dec
sbb
cmp
pop
pop
loop
fsub
fdivr
mov
jecxz
dec
nop
je
mov
por
fstps
popf
adc
xor
add
cmp
mov
sahf
adc
lea
and
movsb
test
movsb
shll
xor
shll
push
sarl
js
out
sbbb
movsl
outsb
mov
std
rcrl
call
push
xchg
xchg
data16
xchg
out
movsb
lret
pop
pop
lea
and
repz
or
or
add
adc
mov
mov
inc
push
add
pop
dec
xchg
pop
push
enter
sub
pop
dec
jge
das
mov
sub
loope
add
dec
jae
mov
or
jp
std
dec
adc
xchg
stos
dec
jge
es
or
pop
outsb
aaa
in
xchg
sub
dec
jle
movsb
pop
ds
les
pop
ljmp
add
call
sbb
xor
dec
test
repnz
jns
mov
mov
loope
enter
push
cmpsb
ret
outsl
lds
mov
mov
dec
fsubs
ret
inc
xchg
sbb
fsub
xlat
daa
scas
stos
cli
mov
adc
in
adc
mov
fmulp
xchg
push
insl
pop
xor
jg
jge
mov
inc
inc
adc
data16
add
ja
icebp
cmp
lahf
add
sarl
mov
mov
inc
mov
out
dec
lret
mov
xchg
inc
ret
test
jae
shr
mov
imul
mov
iret
shlb
pop
fldcw
lahf
jle
cmp
adc
jae
pop
jp
inc
and
mov
pop
mov
xor
add
fwait
sub
mov
and
fcmovb
pop
aas
jmp
add
mov
loope
jno
jo
push
mul
adc
icebp
out
mull
in
cmc
pop
mov
inc
outsl
cmp
cltd
addr16
jae
rcl
inc
clc
pop
lds
inc
fdiv
inc
imul
je
call
adc
add
inc
das
adc
mov
faddp
mov
aaa
lret
pop
sbb
jl
push
imul
xor
mov
orb
jmp
lahf
mov
cwtl
jnp,pn
int3
pop
fnstsw
idivl
mov
stos
add
jp
test
call
mov
pop
call
cmp
in
push
bound
mov
test
shll
cmc
jae
cmp
pusha
das
push
sbb
cwtl
cmp
fcmove
push
int3
addr16
or
rorb
mov
jno
rolb
out
push
inc
clc
ljmp
pop
and
loop
xchg
getsec
jae
aas
xchg
cmp
jle
sbb
subl
inc
cmp
mov
jmp
fcom
or
mov
sub
inc
cli
adc
push
mov
aas
jno
sbb
lods
icebp
test
fisubs
ss
std
dec
mov
nop
dec
and
ret
lret
xchg
enter
cmp
data16
sti
lret
dec
repz
pushl
or
fidivl
xchg
loop
loopne
fwait
xor
scas
test
cmpsl
mov
push
mov
mov
mov
les
xchg
lock
xor
inc
and
popf
push
push
lds
std
lret
push
or
ret
les
repnz
cmp
paddsw
jb
mov
mov
and
mov
xchg
lock
pop
mov
sbb
aam
jl
jp
pop
or
pop
and
adc
movsb
sub
mov
xchg
xor
sbb
jge
jecxz
cmp
test
mov
arpl
mov
cmp
sbb
dec
jnp
push
add
rorl
xchg
jns
sub
pop
pop
and
test
dec
pop
dec
daa
clc
mov
mov
jge
pop
push
lods
sub
clc
movsl
xchg
ljmp
push
out
add
iret
repnz
push
mov
das
mov
js
leave
ja
aad
ss
outsb
mov
mov
rcrb
pop
mov
cmp
aam
dec
mov
fistpl
subl
xchg
int3
stos
xor
out
int
cmpl
sar
push
fdiv
xor
cmp
jns
jb
sahf
inc
sub
jmp
lea
add
mov
and
add
imul
pusha
jl
and
pop
cld
sbb
inc
or
loop
jno
cmp
addr16
loopne
mov
mov
sub
pop
fs
xor
and
mov
add
incl
sub
ja
rcr
xorl
and
inc
cmp
dec
inc
pop
mov
fimull
bound
rcll
jae
cltd
mov
xor
rcll
fdivr
xor
movsb
xor
call
loop
mov
dec
mov
aam
and
std
adc
lret
inc
sub
xor
popa
mov
repnz
pushw
mov
xchg
xchg
or
lcall
push
add
loopne
in
mov
sti
movsb
sub
popf
fnsave
das
daa
pop
xchg
mov
js
test
std
push
std
and
xor
lcall
icebp
sub
mov
imul
jbe
xor
iret
or
aaa
rcr
cmp
push
sbb
lahf
adc
add
and
lods
lcall
out
leave
cli
into
lret
jb
xchg
int3
jnp
cltd
jno
mov
dec
push
fstpl
mov
jnp
xorb
pop
aad
ljmp
xchg
push
pop
fwait
cmpsl
pop
and
int
cmp
inc
cli
jle
stos
push
lds
test
push
rcrb
sub
jle
jecxz
cmp
jmp
shlb
imul
add
and
and
push
aad
movsl
jno
sbb
out
pop
pop
je
inc
test
cltd
sbb
sbb
into
xor
or
or
or
mov
insl
sub
mov
dec
hlt
int3
pop
sahf
shlb
cli
movsl
cmp
adc
inc
xlat
sbb
mov
mov
hlt
cli
pop
call
dec
mov
inc
mov
sbb
mov
lds
das
lcall
xchg
sbb
cmc
sti
and
lods
in
imul
sbb
or
cmp
pop
sub
pop
mov
inc
dec
push
cmpsl
push
fimuls
sbb
dec
lods
mov
cmc
lahf
fs
sbb
das
sbb
add
fdivs
movb
fisubrl
xor
xor
popa
cmp
mov
aam
rorl
inc
cmpl
std
out
xchg
inc
and
pusha
dec
mov
lahf
sbb
int3
aaa
imul
es
fdivrs
hlt
mov
gs
lret
repz
jecxz
inc
xchg
mov
movsl
mov
aad
repz
pop
or
pop
pop
pop
pusha
mov
dec
rcr
jbe
cmc
mov
lcall
or
int
mov
imul
mov
push
stc
fisubrs
lds
cmp
ds
inc
xchg
movsb
push
out
sub
pop
iret
lods
clc
imul
outsl
shrl
cmp
iret
in
cmp
imul
cmp
cmp
repz
scas
pop
and
dec
in
movsl
int3
mov
scas
sbb
mov
xchg
adc
cmp
jmp
dec
lret
arpl
test
dec
aas
fiadds
lea
ljmp
xchg
push
iret
mov
cmp
mov
dec
dec
and
je
mov
jle
ret
inc
in
lret
imul
ljmp
jae
mov
and
push
dec
in
test
sbb
lea
mov
or
lahf
js
cli
test
or
stos
insb
inc
xlat
negl
mov
push
sub
cmp
cmp
sbb
push
add
lods
mov
sahf
cmp
and
push
popf
xchg
gs
or
in
lods
movsb
sub
cltd
int3
das
add
xor
add
mov
and
fadds
or
std
mov
dec
jge
movb
inc
outsl
or
fs
movsl
or
arpl
jle
xchg
jno,pn
and
mov
mov
and
pushf
pusha
sbb
das
fimuls
and
pop
add
fistps
sahf
sti
ret
hlt
pop
dec
ja
cmpsl
lea
pop
rcrl
sbb
cmp
ret
xlat
pop
ret
pop
js
call
dec
and
int3
std
pop
xchg
jmp
ds
sub
pop
movb
rorb
sub
sub
int
pop
mov
mov
daa
mov
fdivrp
push
dec
push
push
call
inc
cmp
pop
ss
leave
ficomps
jle
leave
push
add
cmp
test
xor
fsts
mov
cwtl
jg
cmpsl
int
scas
adc
hlt
xchg
or
push
mov
inc
inc
imul
repnz
mov
pop
cltd
mov
inc
repz
sub
xchg
push
lea
cmp
rorl
movsl
lret
xchg
ss
sub
movsl
cmp
loope
push
out
scas
cmpsl
cmc
sbb
flds
leave
loop
lods
push
sub
inc
hlt
lds
popf
sti
push
cmpsb
push
bound
ds
idivb
and
shl
xor
jle
test
out
scas
pop
movsl
je
mov
push
xor
fisubrl
decb
lock
adc
push
mov
aad
jecxz
aaa
pop
and
mov
sti
int
nop
rclb
es
aad
int
add
icebp
pop
add
add
cmc
push
int
adc
sub
add
scas
out
aaa
or
repz
cmp
xchg
xor
inc
jecxz
ss
out
outsb
push
lea
fisubrl
icebp
addb
adc
stc
mov
ficomps
into
mov
xchg
dec
inc
adc
or
fwait
jmp
jns
mulb
or
fmul
mov
cs
mov
xchg
lret
lcall
andl
jle
push
call
xor
mov
mov
xchg
mov
dec
addps
loopne
mov
sahf
imul
add
cmpsb
popf
cwtl
jb
sbb
xchg
iret
push
cli
push
push
add
push
popa
iret
mov
idivl
lret
shrl
insb
ret
shr
sub
leave
push
lods
loop
lock
push
jle
sub
xchg
pop
fists
cmp
leave
data16
es
mov
and
out
call
rcrl
fldenv
mov
outsb
imul
dec
test
cld
add
pop
sbb
push
mov
test
std
mov
cwtl
jne
and
cmp
jmp
lcall
mov
adc
imul
or
aad
cmc
push
cltd
bound
push
fdivrl
icebp
mov
push
mov
and
fadds
inc
or
mov
push
lea
and
cmp
out
out
in
xchg
ljmp
xchg
daa
xchg
dec
sti
adc
adc
push
sub
out
inc
cwtl
add
push
fcompl
or
das
mov
mov
fidivrs
jae
sub
into
or
nop
inc
lahf
mov
in
fbstp
bound
xor
fwait
lods
xchg
xlat
jnp
add
pop
dec
fildll
jmp
shll
out
loope
mov
loopne
sub
jecxz
aaa
repz
adc
cmp
lods
es
adc
lods
fidivs
cmpl
sbb
ret
inc
adc
outsb
or
pop
jg
sbb
fcmovnu
movsl
xor
test
popl
test
jns
xlat
cmpsl
jbe
push
mov
mov
loope
aas
add
aad
xchg
cmp
mov
jae
inc
lret
dec
xor
jae
adc
jp
loope
dec
mov
gs
pop
xor
pop
lahf
lods
and
pop
rcrl
or
mov
add
pop
leave
push
rorb
mov
notl
pop
xchg
cmpsl
mov
pop
jb
mull
loop
sub
setge
sbb
dec
mov
xor
in
dec
push
jns
orl
call
cmpsl
xor
popf
xor
inc
das
pop
pusha
xor
xor
les
or
daa
or
inc
inc
adc
mov
xchg
sahf
xchg
sarb
aas
or
pop
add
jne
leave
sbbl
mov
ja
pop
dec
mov
imul
push
mov
lret
sti
add
in
cwtl
xchg
fs
mov
or
jle
push
roll
or
dec
inc
mov
xchg
outsl
pop
pop
mov
aad
mov
cmpsl
mov
ljmp
pop
xchg
inc
mov
movsb
ljmp
sbbb
push
insl
in
leave
stos
imul
jbe
cmp
cwtl
or
cld
int3
negb
int3
enter
mov
popf
cmp
inc
push
jno
pop
sbb
jo
mov
loop
cmp
enter
call
ja
jmp
or
push
insl
mov
inc
pop
inc
mov
jo
pop
clc
rol
ficomps
push
shlb
mov
inc
ret
subl
jl
mov
jecxz
add
push
mov
pushf
iret
js
popa
pop
xor
in
xchg
mov
jo
ljmp
mov
dec
out
imul
stc
lods
orl
xor
inc
insb
loopne
mov
cmp
loop
ds
movsb
xchg
fstpl
std
nop
sub
pop
cld
push
dec
xor
aad
jae
addr16
aaa
mov
aad
idivl
int3
std
fs
addr16
sti
hlt
fnstsw
lahf
push
std
scas
jp
sbb
test
lods
jp
test
mov
je
adc
inc
pop
dec
ja
sub
and
mov
jne
inc
mov
lcall
jp
jp
fistps
pushf
sbb
push
or
pop
xor
sahf
mov
ret
mov
popf
mov
test
xor
shrb
and
sbb
mov
mov
shrl
stos
movsl
jge
xchg
pushf
outsb
sbb
mov
pop
cmp
adc
push
int
xor
dec
test
or
insb
ljmp
or
cld
fisubrs
lahf
mov
es
sbb
push
sti
dec
mov
ds
xchg
cmpsb
data16
jecxz
into
inc
leave
lods
mov
test
mull
movsb
mov
fwait
xchg
lret
xor
out
insl
movsl
fstp
nop
pusha
aad
fmull
test
test
sbb
loop
arpl
out
dec
or
dec
loop
and
dec
dec
add
out
lcall
lods
mov
sub
pop
iret
in
push
cmp
addr16
scas
pop
sarl
sub
cmp
aas
stc
outsb
xchg
int
sbb
fcompl
and
dec
or
daa
cs
mov
inc
push
cmc
jae
imul
cmp
adc
sub
in
add
imul
movsb
into
das
inc
stc
aas
fwait
sbbl
bound
mov
ja
dec
aaa
lret
insb
in
jb
xor
mov
mov
imul
push
lods
addr16
lods
maskmovq
mull
pop
scas
xor
mulb
push
cmp
sub
jbe
xchg
popf
sbb
cmp
enter
jge
nop
pop
movsl
sbb
lahf
pop
jo
rcll
dec
inc
jle
xchg
aaa
mov
ficompl
into
pop
lret
sub
ja
cmp
imul
imul
xor
xor
out
xor
repnz
add
out
aaa
aad
jecxz
fs
inc
out
dec
pop
cmp
push
mov
cmpsl
cld
ret
loop
and
add
pushfw
sub
stos
push
xchg
inc
and
adc
push
and
or
sbb
mov
and
adc
inc
cmp
xchg
xor
pop
das
out
mov
jg
test
out
in
push
aas
repnz
inc
jle
iret
sub
ds
jmp
and
loopne
dec
test
mov
cld
cmp
stos
and
mov
out
cmpsb
pop
stc
leave
sub
ret
addr16
jg
sub
push
lahf
xchg
xchg
das
sub
xor
mov
int
sti
movsl
test
sub
in
fxch
ljmp
push
lods
out
test
rorl
inc
dec
xchg
lcall
xchg
gs
push
add
adc
mov
test
mov
jg
mov
or
cmp
adc
bound
push
test
cs
mov
shrb
aam
sbb
in
mov
mov
jecxz
popf
aaa
lcall
ret
and
shl
jge
out
stos
jbe
adc
test
adc
jg
inc
loope
adc
cmc
dec
xchg
adc
dec
mov
adc
dec
icebp
enter
jbe
cmp
aad
je
aas
cmp
sbb
mov
push
inc
add
inc
xor
xchg
daa
xchg
push
in
inc
cld
stos
mov
pop
nop
xchg
push
mov
mov
cmp
ss
fcmovnbe
dec
cmp
sub
std
push
mov
add
sahf
popa
loop
pop
mov
mov
or
dec
test
xlat
stos
pop
cs
sbb
xchg
push
cwtl
aas
daa
cmp
or
jo
call
jo
test
ret
mov
ljmp
repnz
in
loopne
xor
jbe
fldcw
adc
adcl
sbb
lahf
jbe
sti
adc
sbb
fs
pop
cltd
arpl
mov
sarl
dec
fnstsw
xor
push
sub
lahf
dec
xor
xor
mov
or
cmpsb
out
pop
mov
sub
aam
mov
fstpt
jp
mov
jno
xchg
test
negl
inc
push
inc
mov
bound
lds
adc
out
cmc
and
or
cli
xrelease
xchg
add
bound
dec
cwtl
leave
mov
fists
pop
fwait
dec
xor
nop
or
cli
and
xor
cs
adc
xor
call
xchg
push
lds
push
imul
sbb
int
out
jne
bound
xlat
add
jecxz
xchg
adc
sub
jg
mov
test
and
jge
sub
pop
icebp
popf
loope
cld
or
xor
add
push
jl
add
add
insb
arpl
pop
push
gs
ret
sbb
repz
mov
out
xor
xchg
lods
insb
lahf
xor
inc
fildl
pop
xor
int3
ds
jb
or
lret
shrl
dec
dec
pop
cs
pop
xchg
or
lcall
xor
gs
je
inc
das
xchg
sub
dec
pop
stos
int3
mov
ja
jp
xchg
div
mov
nop
jae
mov
mov
call
push
mov
xchg
lahf
sbb
inc
jmp
and
xchg
mov
icebp
test
xlat
mov
jb
out
pop
inc
mov
mov
jge
xor
lahf
das
movsb
xlat
and
ss
sub
jnp
xchg
enter
dec
jl
push
jp
xlat
mov
pop
xor
andb
adcb
cs
rolb
sti
inc
imul
dec
lea
fld
ds
data16
push
mov
pop
aad
daa
lret
jg
push
rol
xor
test
sarl
sbb
test
roll
mov
pop
adc
addr16
xor
pop
and
xchg
scas
jl
xchg
repz
pop
and
add
add
mov
xchg
mov
sahf
cmc
push
out
push
push
outsl
lahf
push
push
jp
pop
push
push
xchg
jne
fldenv
adc
adc
ja
rcrl
int3
inc
stos
and
mov
push
scas
ljmp
fs
addr16
dec
xchg
mov
cld
add
les
lock
popa
mov
js
aad
xchg
repz
xchg
ljmp
add
sarb
stos
xor
in
sub
lcall
clc
mov
inc
daa
fcmovb
fs
out
repz
stc
mov
ret
int3
repnz
popa
nop
adc
iret
sbb
xchg
mov
add
jns
push
lret
mov
in
repz
sti
adc
int
mov
xor
jbe
mov
jp
adc
xor
xlat
mov
imul
insl
je
adc
inc
or
xorl
loopne
je
add
sub
pop
aam
inc
gs
fcmovu
lods
sub
fisubrl
xchg
pop
data16
es
fistpl
sbb
xchg
mov
xchg
cs
xor
adc
xchg
jae
fsubrl
rcrl
jg
dec
sahf
ja
dec
outsb
mov
popa
push
inc
or
aas
test
push
lret
scas
and
sub
push
mov
scas
andb
push
sub
sahf
bound
xchg
xchg
inc
pop
adc
pop
shrb
mov
add
sbb
imul
icebp
je
inc
loope
and
adcb
xor
xor
sbb
adc
push
mov
in
leave
mov
out
jmp
or
aad
pushf
sbb
sahf
mov
mov
xor
data16
rcrb
xchg
push
and
ds
adc
jae
pop
aas
and
xor
movsb
cli
es
or
jge
xchg
stos
sbb
push
inc
sti
or
push
fwait
ss
cs
roll
jl
fiadds
int3
jo
jno
js
cmp
cwtl
mov
into
lret
repz
push
lds
je
mov
ss
js
pop
pop
adc
xchg
int
adc
push
cli
dec
clc
jnp
lret
popa
pushf
loope
and
push
push
sbb
jmp
test
data16
test
ja
push
pop
pop
paddd
mov
ljmp
gs
in
xchg
mov
lea
and
shll
jb
xchg
rdtsc
add
fstpl
sub
xchg
or
inc
xor
mov
cmpb
push
mov
xchg
icebp
mov
test
jge
mov
es
mov
jnp
mov
mov
pop
pop
mov
mov
iret
cwtl
jne
mov
sub
dec
inc
add
bound
stc
pop
ss
test
ret
or
push
pop
loop
ret
push
icebp
xlat
loopne
lea
sbb
and
faddp
pop
dec
hlt
imul
subl
dec
ja
xor
cmp
scas
inc
cli
mov
rorb
mov
pop
arpl
xlat
sarb
in
js
push
mov
sbb
scas
andb
aam
ljmp
in
xor
sbb
div
mov
mulb
aaa
cmc
lea
pop
cmp
lahf
xchg
std
mov
bound
dec
clc
sbb
jne
mov
and
or
repz
jae
decb
cmpsl
leave
out
repz
mov
gs
mov
mov
pop
cmc
adc
sbb
jmp
enter
insb
loope
inc
dec
sbb
xchg
dec
in
cmpsb
out
jo
mov
out
rcr
jnp
lahf
mov
cmp
or
sub
clc
scas
sbb
mov
jge
es
sbb
inc
or
cs
inc
xchg
aaa
pushf
loopne
pop
sbb
cwtl
mov
cmp
sti
mov
idivl
inc
push
rcll
push
ljmp
pop
cmpsl
hlt
jle
jecxz
mov
add
add
mov
mov
pop
ds
push
push
fcomps
jle
mov
loope
testb
pop
rorl
mov
inc
imul
jno
dec
cwtl
sbb
nop
xchg
push
xor
fisttpl
fcmovb
das
jmp
test
push
ds
lea
cmp
adc
jne
hlt
sbb
xchg
aas
mov
lock
xlat
int
jp
or
aam
out
mov
jl
rcl
stc
xchg
cltd
xor
adc
xlat
sbb
sub
mov
cmpsl
repz
scas
out
hlt
imul
cld
inc
aam
subb
mov
cmpb
and
inc
lods
mov
arpl
mov
adc
mov
and
add
push
imul
xchg
mov
adc
sbb
sub
and
jbe
fdivrs
int
shlb
test
ret
mov
stc
repz
subb
lock
ret
fcmovu
sub
adc
cltd
mov
imul
mov
fwait
pusha
ficoms
inc
sub
mov
sub
loope
sub
loope
adc
fldl
cltd
sub
pop
sbb
scas
xchg
pop
out
cmpsl
add
jl
inc
xor
outsl
mov
pop
pop
stos
insl
jbe
mov
test
jnp
push
mov
loope
cmpsl
cli
aad
and
pop
in
je
in
aas
mov
int
add
push
pushf
xchg
jb,pn
cld
inc
inc
shll
fdivrl
loopne
shll
loop
out
and
repz
mov
movsl
sub
cmp
movsb
and
leave
jle
push
cmp
das
imul
out
mov
mov
dec
mov
movd
ds
inc
pop
ret
and
dec
mov
sbb
mov
mov
push
dec
lcall
cmp
cmpb
pop
jb
bound
inc
int3
movsl
mov
mov
andl
add
sbb
and
outsl
movb
mov
mov
mov
mov
mov
cmp
pop
andl
cmc
negb
dec
scas
shrl
sbb
pop
xchg
jmp
idivl
sub
lds
popa
inc
fldl
jb
mov
xchg
mov
cmp
daa
jge
movsb
dec
repnz
xchg
movsb
mov
popf
mov
mov
jle
mov
jno
dec
jnp
mov
stc
cmpsl
cmp
cs
xor
sarb
mov
sub
lret
mov
fwait
xchg
hlt
lahf
mov
xchg
sub
js
inc
les
add
arpl
adcb
and
xlat
imul
inc
cwtl
rorb
mov
test
daa
pop
xchg
fists
idivb
fstps
xchg
in
sub
repz
mov
mov
xchg
in
fsts
push
fisubs
je
mov
add
mull
lock
movb
aas
push
xabort
out
pop
lret
jno
fbld
andl
or
xchg
or
test
jns
inc
repnz
mov
mov
idiv
mov
test
je
dec
test
mov
mov
cmp
inc
inc
pushf
stc
lods
sbb
push
adc
pop
add
enter
dec
push
jge
insb
xchg
in
add
pop
or
adc
cmp
mov
rol
pop
or
ljmp
fwait
mov
jp
gs
dec
mov
push
fcompl
cmp
cmc
cmp
imul
stc
bound
mov
cmp
inc
into
and
outsb
dec
enter
mov
sub
test
leave
sub
stc
je
sbb
dec
movsb
inc
inc
rep
add
cmp
add
dec
jno
sub
pop
popf
out
outsb
ror
es
mov
push
xchg
out
mov
adc
sahf
movl
rorb
popf
pushf
cmp
ss
test
loope
sbb
shll
jge
out
rcrl
lods
inc
sub
inc
mov
push
outsb
adcb
loope
test
xchg
movsl
jno
das
test
cld
sub
popf
int
fsubs
das
adc
ficoml
bound
clc
enter
loop
xchg
shlb
ljmp
rep
inc
add
popf
sbb
in
dec
sub
cmpsb
mov
sub
rorl
into
jmp
push
or
rorb
clc
cwtl
jb
xor
cmp
fnstenv
mov
xchg
jns
push
and
jne
pop
xchg
adc
pusha
jo
icebp
xchg
cmp
test
je
push
mov
rcr
sub
lcall
fidivs
mov
add
sub
jae
xor
dec
pop
sbb
pop
inc
jnp
ficompl
lcall
cmp
icebp
fstp
rorb
setg
out
rcr
sub
pop
xor
ss
cld
cmp
lea
xor
aas
pop
jmp
adc
out
aas
cmp
cmpsb
inc
mov
data16
adc
xchg
push
lds
test
xor
sub
adc
jecxz
or
rorb
xchg
or
mov
shll
into
pop
sti
fdivr
push
ljmp
fmuls
adc
push
mov
mov
insb
cli
dec
jl
int
and
and
std
inc
or
fadds
addr16
icebp
push
loope
adc
fs
shlb
push
adc
sub
pop
shll
out
mov
aam
sub
fisubs
push
dec
jb
ret
mov
addr16
inc
jge
fwait
cmpsl
sub
daa
xlat
jnp
and
les
or
pushf
and
push
sub
scas
pop
out
dec
pop
and
jge
les
xor
js
sub
pop
ds
xor
and
fisttpl
mov
jbe
and
mov
push
dec
dec
cmp
mov
push
xor
int
sbb
mov
xchg
add
pop
sbbl
xor
mov
in
movsb
gs
pop
mov
jge
jmp
stos
pop
fists
push
pop
xor
xchg
push
pop
adc
jno
xchg
mov
int
and
cmovae
inc
icebp
lret
pop
cmpsl
mov
jmp
inc
and
cmp
pop
dec
out
xchg
pop
scas
nop
fcomps
mov
cs
mov
mulb
mov
fdivrl
mov
sbb
stos
jge
lahf
sarb
add
mov
scas
call
dec
cmpsl
loope
insl
dec
xor
xchg
lock
xor
pop
lods
jae
scas
cmp
or
out
bound
mov
jne
adc
mov
out
mov
inc
xchg
xchg
mov
repnz
xchg
mov
shrb
adc
into
xchg
push
and
int3
icebp
hlt
xchg
sarb
or
mov
jne
mov
adc
lret
sahf
push
push
mov
les
sbb
add
outsl
cmp
movsl
sbb
dec
fldt
leave
mov
icebp
xor
cmpsl
pop
loopne
jne
xchg
das
insb
repz
push
mov
mov
test
sbb
rcrl
mov
into
fiaddl
sub
fisubs
sbb
and
clc
idivl
mov
cmp
popa
lods
mov
mov
fucom
popf
scas
xchg
jo
fsubl
cld
push
inc
xchg
addr16
test
cmpsb
pop
hlt
pop
cltd
lret
sbb
mov
sub
lods
out
lods
dec
fadd
cwtl
addl
cmp
mov
rcr
xorl
mov
add
in
shll
mov
insb
mov
cli
mov
jb
pop
aas
xchg
sbb
cltd
or
and
in
ds
sbb
and
lds
inc
mov
int
mov
push
pushf
jl
dec
xor
das
jg
es
cmpsb
cmp
fisubs
cli
and
pop
pop
rorb
xor
jge
paddusb
cmp
pop
xor
int3
cld
stc
mov
jecxz
sub
scas
xchg
jle
ja
sbb
jnp
in
add
repnz
enter
sbb
mov
nop
iret
xor
dec
in
outsb
imul
mov
lock
dec
pusha
fistps
pop
cmp
sti
fldl
sbb
mov
pop
add
outsl
iret
ret
mov
movsb
and
dec
sbb
xor
ret
in
jb
incl
hlt
sarl
cmp
or
sbb
lods
mov
mov
lods
push
repnz
mov
pusha
mov
repz
sbb
lea
cmp
mov
ss
pop
jp
int
mov
stos
push
inc
insl
sbb
xchg
jnp
pop
adc
jmp
adcb
repnz
adc
add
test
add
mov
test
mov
adc
jle
outsl
push
clc
fldcw
clc
mov
dec
mov
jne
in
sbb
and
imul
andb
js
pop
adc
cmpsl
scas
cmp
fsts
inc
dec
cmpsb
and
push
iret
sbb
out
iret
mov
pop
ret
pop
decb
xchg
add
mov
xchg
push
out
dec
mov
pop
repnz
stc
and
cmp
popa
shrl
jne
fldenv
lods
pop
mov
and
lcall
aam
lods
adc
sub
ljmp
jbe
xchg
push
jno
inc
fstps
cmp
fldt
mov
jg
xor
cwtl
dec
flds
dec
lds
ljmp
push
imul
xchg
and
mov
data16
mov
pop
lods
outsb
add
out
pop
pop
fstl
lea
notl
jp
sbb
or
inc
jp
xor
mov
and
xor
adc
dec
les
subb
adc
sub
fs
fdivs
loope
jg
ljmp
xchg
rorl
insl
push
ja
rcrb
jbe
fisubrs
pop
mov
arpl
push
inc
fdivrl
and
dec
movsb
and
or
push
idivl
call
sub
adc
ja
fnstenv
add
stc
fwait
pop
pusha
sub
mov
lret
xor
int3
inc
sub
ret
jb
and
gs
mov
jmp
jnp
je
lds
jo
cmp
push
in
dec
stos
push
cltd
dec
ss
pop
cld
or
push
push
fists
aas
jbe
xor
sub
add
push
jl
adc
str
cmp
or
ret
pop
mov
ret
mov
mov
fs
jo
push
xchg
pop
mov
fs
cli
adc
mov
mov
inc
in
enter
clc
nop
test
cpuid
push
sar
xchg
sub
xchg
push
cltd
mov
cmp
imul
xchg
repnz
dec
push
hlt
les
inc
fidivs
jmp
sub
or
imul
nop
loopne
xchg
dec
inc
jno
lret
inc
jbe,pt
push
stc
fwait
and
scas
leave
push
cmpsb
lcall
add
or
ss
pop
test
mov
or
movl
stos
pop
inc
jg
mov
aam
fsubrs
sbb
jns
mov
adc
push
out
adcb
loopne
pop
mov
aam
fwait
mov
les
out
sbb
shrl
loop
pop
xorb
sarl
sbb
repnz
pushf
cwtl
jae
pop
bswap
dec
lret
pop
add
cltd
aas
aas
or
dec
test
in
lret
jmp
out
mov
cmp
mov
adc
mov
mov
jmp
or
xor
shll
cmp
mov
adc
xlat
xor
jle
xchg
dec
outsb
mov
cmp
and
push
xchg
push
xchg
or
data16
out
pop
sub
imull
inc
fbld
dec
out
call
fwait
xchg
ror
mov
data16
enter
jne
das
inc
inc
sub
cli
jp
mulb
fists
jl
cmp
pop
jnp
aad
xlat
cmc
stos
subl
scas
sbb
sahf
insl
sbb
pop
stc
aad
fiaddl
xchg
sub
repnz
pop
in
sub
arpl
sub
sti
dec
pop
xor
sub
add
fdiv
fldenv
out
aad
repnz
add
xchg
add
loope
mov
divb
sub
mov
lret
cmp
icebp
jmp
decl
lret
xchg
or
xchg
lret
jle
sti
fstpl
mov
fcomps
in
add
subb
test
or
std
sub
push
pop
aam
push
fwait
imul
movsl
jg
shll
les
mov
dec
shrb
loope
shll
sub
and
pusha
xor
bound
inc
call
sub
mov
nop
mov
mov
into
push
push
or
cmpl
sbb
xor
leave
insl
jp
inc
jmp
std
arpl
sub
leave
ret
lret
fidivrs
and
les
add
mov
xor
arpl
cmp
fwait
add
outsl
insb
mov
pop
ljmp
add
dec
test
push
ret
lods
into
xor
inc
add
jo
or
push
xchg
jp
call
inc
and
jae
cmpsb
or
adc
add
std
jecxz
lods
jo
lods
addr16
int
and
xchg
iret
inc
fdivl
test
arpl
push
mov
mov
xor
sub
frstor
mov
mov
cli
stos
adc
jbe
cmp
dec
fadds
cmp
fdivl
mov
jle
or
mov
cld
ficompl
mov
insb
std
mov
and
cmpl
in
ja
or
inc
ds
jl
outsb
jmp
adc
sbb
cwtl
stc
xor
pop
pop
push
sti
shll
push
test
shrl
jle
stos
pop
jbe
cmpsl
jl
outsl
mov
cmp
outsb
push
scas
pop
fcompl
sbb
jge
dec
xchg
test
adc
xchg
xchg
inc
cmpsl
out
mov
sbb
dec
jg
jp
mov
lea
push
mov
mov
rcrb
sbb
mov
js
icebp
test
or
sbb
xor
aaa
lock
bound
cltd
jae
outsb
lds
repz
jb
mov
xchg
das
adc
addr16
and
cmp
mov
push
arpl
pop
mov
mov
test
addr16
push
or
jl
int
fs
roll
pop
sbb
fidivs
add
std
test
lods
xor
adcb
push
jge
dec
outsb
or
mov
xchg
mov
icebp
es
xchg
inc
cmp
mov
dec
adc
lahf
jno
mov
cmc
mov
xchg
arpl
xchg
imul
push
sub
mov
jecxz
xor
int3
cltd
cmc
adc
xor
mov
cmp
dec
cmp
mov
mov
or
push
push
hlt
stos
and
pop
inc
sbb
ljmp
out
ret
cli
xchg
or
jge
or
setp
popf
adc
and
rcll
mov
or
and
movsl
xchg
sbb
in
xor
insb
and
mov
and
sub
je
fsts
push
fcompl
addr16
insl
mov
negb
mov
dec
rclb
into
sbb
test
dec
outsb
repnz
daa
pop
ja
pop
mov
mov
jecxz
movsl
pop
ss
xchg
inc
insb
out
mov
mov
lods
pop
movsb
pusha
inc
sub
mov
sub
inc
out
into
popa
cmc
lret
mov
inc
pusha
addr16
sbb
jns
fiaddl
imul
xchg
call
aaa
outsl
adcb
dec
negl
outsb
or
xchg
mov
das
lahf
xchg
push
repz
aas
dec
out
and
outsb
iret
test
pushf
loop
jae
fwait
mov
ss
xchg
fadds
outsl
ss
pop
add
jge
dec
test
jecxz
fwait
stc
jp
movsb
ds
inc
or
ret
nop
jecxz
jb
inc
ror
pop
jp
iret
lret
cmp
fisubs
mov
cmp
cld
ds
add
jle
std
ret
jo
sarb
in
push
xor
loope
mov
adc
insl
leave
pop
testl
sahf
aam
es
mov
sbb
bound
mov
sbb
xchg
lods
mov
dec
pop
pop
ret
in
xchg
mov
push
lds
push
stos
cld
jecxz
into
adc
cmp
testl
lret
fdivl
daa
pop
pop
es
sti
adc
dec
xchg
ret
fbstp
mov
push
cmpl
lahf
dec
pop
inc
insl
xchg
dec
rol
mov
dec
popa
xchg
fsub
cmpsl
jnp
outsb
push
xchg
jnp
cmpsb
jecxz
insb
and
stos
xor
in
xor
addr16
ret
xchg
sbb
or
movsl
and
lcall
dec
imul
das
sub
jmp
pop
push
in
push
jns
cmp
addb
jae
faddl
jp
mov
xchg
or
ljmp
fucom
daa
movsb
xor
inc
mov
or
repnz
scas
insb
sub
mov
ljmp
dec
xor
sbb
cmp
insb
hlt
jmp
pop
dec
cmp
cmp
jl
stc
cli
push
mulb
add
out
or
gs
mov
fdivrs
xor
inc
and
cld
xchg
jno
cmp
mov
sbb
mov
leave
arpl
je
inc
cmpsl
dec
mov
push
and
lods
aam
movsb
push
dec
mov
movsb
mov
shrb
mov
push
into
stos
mov
add
inc
xchg
lahf
mov
or
test
arpl
sub
or
aas
mov
aad
lret
mov
dec
icebp
aaa
mov
pop
inc
dec
cmp
lret
inc
xor
jle
jl
mov
popf
cmp
imul
or
fldcw
aam
mov
inc
or
xchg
insb
shlb
stos
outsb
xchg
dec
fadds
xlat
jecxz
push
ds
adcb
out
das
sub
or
test
ljmp
xchg
fildll
fidivl
sbb
xor
sub
jbe
sbb
adc
call
arpl
movb
cmp
std
inc
sti
shll
inc
mov
cli
add
sub
cmp
rorb
xchg
push
and
xchg
push
bound
inc
aas
push
fdiv
arpl
test
pop
push
insb
rcrb
repz
fcmovu
or
cld
lods
sti
cmpsl
rorl
movsb
fisubrl
fadds
adc
mov
stc
pop
into
sbb
cmpsl
push
test
cwtl
jmp
cmpl
repz
fsub
ljmp
int
ds
mov
int
xchg
lret
loopne
insb
in
sbb
stos
sbb
inc
mov
xchg
jg
mov
scas
inc
imul
push
shrb
test
movsl
testb
mov
shrb
adc
or
std
xchg
pop
stc
psubd
in
leave
in
icebp
add
mov
xor
add
popf
icebp
cmc
popf
adc
mov
pop
movsl
cwtl
adc
xor
jo
push
out
cmp
cmp
sub
adc
adc
pop
out
pop
pop
xor
data16
daa
in
leave
lods
xor
shlb
mov
stos
xchg
in
sarl
add
mov
xchg
xchg
and
xchg
sysexit
dec
lds
fwait
mov
cwtl
xor
xor
nop
pushf
adc
inc
daa
idiv
dec
add
loopne
jmp
xchg
and
sar
add
dec
mov
lods
addl
out
pop
aam
pop
icebp
loop
and
adc
mov
or
fistl
lahf
icebp
mov
inc
mov
mov
mov
add
mov
fs
inc
jmp
aad
mov
aaa
nop
jg
int3
addr16
jmp
leave
and
mov
add
aad
mov
repnz
xor
or
sub
mov
dec
sbb
mov
faddp
inc
fstps
outsb
dec
or
sbb
or
push
or
rorb
xlat
xor
push
lds
and
jp
cld
andl
jnp
mov
ja
jecxz
mov
mov
out
pop
cmc
cmc
mov
bound
sub
bound
fsubs
push
ret
fiadds
push
fsubs
mov
scas
aam
push
and
xchg
test
lret
add
inc
mov
arpl
dec
lcall
cmp
sub
addr16
inc
xchg
shl
enter
stos
leave
aas
fs
mov
test
xchg
int3
mov
and
mov
cmp
clc
and
cmp
jae
push
adc
js
repz
stc
push
flds
xchg
jp
add
dec
jnp
addr16
add
test
nop
adc
and
and
mov
cmp
insb
and
xorl
out
jo
js
lods
sbb
jge
push
data16
xchg
jp
pop
je
not
or
jbe
fwait
in
stc
xor
test
outsl
inc
sub
xor
lea
push
jmp
ret
icebp
push
jb
mov
jnp
sub
leave
pop
ljmp
das
push
mov
lret
fwait
shlb
and
shrb
pushf
pop
push
xchg
lock
mov
add
xchg
pop
ljmp
loopne
out
ds
mov
jb
add
outsl
fildll
push
je
mov
mov
das
mov
jl
adc
and
das
push
xchg
mov
test
xchg
pop
int3
out
mov
cs
xor
inc
add
sbb
loopne
pusha
mov
mov
incl
xchg
test
shl
decb
std
xor
mov
cmp
jl
or
pusha
adc
jnp
adc
sbb
cwtl
in
stos
loopne
dec
xchg
push
out
ficoml
mov
add
cltd
cmp
push
leave
faddl
sbb
mov
add
jmp
adcl
xorb
jno,pt
mov
add
aaa
out
lcall
das
cmc
and
and
daa
xor
nop
test
loope
pop
xchg
mov
xor
arpl
push
mov
mov
mov
inc
dec
sbbl
mov
andb
fs
outsl
fdivr
inc
cwtl
dec
inc
xchg
andl
out
mov
leave
sarb
mov
jle
movsb
ret
hlt
or
insb
jo
add
mov
addb
push
mov
mov
jecxz
add
ss
xchg
xchg
or
cmp
mov
jg
adc
pop
mov
mov
repz
xchg
cmp
shlb
iret
and
outsl
in
or
loopne
lods
pop
rcl
sbb
sub
cmp
movsb
push
mov
push
daa
sub
std
xchg
lea
jmp
mov
cmp
lahf
jno
or
es
popa
mov
cmp
cmp
rorb
lcall
addr16
xchg
notl
imul
mov
cmp
ret
loopne
call
inc
cmp
ja
fdivrp
mov
aad
xchg
xchg
aad
push
or
mov
popa
fldenv
ljmp
add
mov
mov
or
mov
inc
inc
es
cmp
mov
fidivs
inc
repnz
enter
xchg
cmp
push
sbb
cmp
mov
and
inc
test
in
mov
ret
lods
fdivl
icebp
cs
dec
cwtl
jbe
and
xchg
mov
sub
insb
fimuls
lret
xor
sbb
pop
mov
push
movsl
je
jecxz
mov
push
mov
mov
popa
loope
mov
jle
pop
into
add
jo
xor
sbb
ljmp
shll
cwtl
adc
xor
jnp
clc
push
repnz
nop
out
aam
mov
mov
mov
and
adc
push
lock
ror
sbb
loope
jmp
xor
mov
std
stos
or
mov
jb
mov
pop
mov
xor
jmp
and
or
xchg
xchg
jb
jns
pop
movsl
and
aas
fistpll
mov
xchg
lods
xor
sbb
xchg
in
adc
adc
xchg
cmpsb
or
loopne
sbbb
cmp
xlat
insl
test
sbb
movsb
push
xor
add
movsb
sbb
mov
push
adc
mov
test
xor
stos
jbe
fldt
add
pop
dec
fildl
aam
mov
pop
xlat
cmp
inc
cs
dec
dec
jg
stos
dec
mov
xchg
mov
fwait
mov
lret
and
cwtl
pop
cltd
lcall
mov
cmp
ljmp
movsb
cmp
xchg
repz
ljmp
mov
in
insb
lret
push
push
and
or
lea
inc
add
sbb
je
fs
xlat
rcrl
add
bound
mov
repz
dec
mov
inc
pop
pop
les
pop
pop
dec
adc
clc
imul
dec
pop
cmpsb
iret
test
nop
push
int
dec
in
dec
add
stos
xorb
cli
and
imul
cmp
ss
xchg
daa
xchg
jno
or
mov
pushf
or
or
test
fsubrp
cmpl
out
jl
loop
push
mov
pusha
daa
jp
mov
push
push
aaa
xchg
ds
lret
xchg
xlat
jno
mov
rcr
aas
dec
adc
pop
cltd
xchg
arpl
cmpsb
pusha
pop
or
nop
xor
pushf
and
es
fcompl
add
pop
insb
int
shll
test
xchg
insb
and
nop
cmp
decb
mov
push
xor
lcall
sahf
testb
out
dec
daa
pusha
xchg
mov
lret
js
pop
and
aaa
dec
shr
jae
lods
pop
mov
sahf
fs
cmp
jns
test
cli
mov
sub
into
cmp
movsb
xor
pop
jnp
in
aaa
xor
add
jle
xchg
push
dec
dec
xchg
sahf
inc
sbb
xor
out
jp
xor
movsb
sub
rolb
adc
leave
ja
pop
aaa
ret
xchg
mov
ja
fwait
add
sbb
lods
popf
sub
lods
aas
popf
adc
test
sbb
add
mov
enter
mov
add
mull
xchg
mov
xchg
aas
lret
or
and
in
mov
bound
jns
sub
mov
lret
mov
inc
mov
ficomps
push
cld
sub
fwait
mov
add
test
jns
dec
lahf
ret
scas
sub
ja
add
push
inc
loopne
rclb
sub
nop
push
add
sahf
iret
sbb
push
shrb
inc
jl
pushf
std
and
stos
ret
mov
inc
mov
stos
jp
lock
daa
jnp
mov
scas
and
and
adc
test
ret
je
aam
mov
mov
daa
jns
dec
out
mov
hlt
mov
and
jns
xlat
mov
xor
out
xor
push
dec
sbb
lea
je
fists
shrb
leave
rorb
movl
dec
mov
clc
stc
das
push
xchg
add
adc
xchg
aad
enter
addr16
shrb
out
xchg
pop
xor
sub
loope
and
adc
cmpsb
cmpsl
sbb
mov
insb
outsl
fs
adc
jne
in
std
mov
mov
shlb
dec
into
test
push
jb
push
movsb
clc
mov
push
xchg
enter
hlt
fs
or
pop
cltd
jmp
pop
xor
dec
pop
push
js
outsb
loope
lds
mov
daa
mov
add
neg
xor
mov
out
mov
fwait
les
imul
es
xchg
push
push
mov
je
aas
fidivl
mov
dec
lret
push
test
push
pusha
mov
and
push
popl
add
pushw
or
std
enter
inc
mov
pop
lret
push
xchg
mov
stc
enter
sbb
out
xor
lea
jmp
pop
push
inc
push
push
push
aas
dec
in
jno
adc
outsb
xchg
push
jns
scas
inc
dec
mov
rcll
loopne
and
cmp
dec
mov
push
xchg
pop
cmc
inc
mov
insl
push
loopne
cmp
int
jne
rorb
mov
adc
or
jge
pop
lea
mulb
shll
jmp
adc
insb
jl
std
ljmp
ljmp
jo
jle
ljmp
jg
test
xor
pop
mov
jae
lea
add
xchg
or
mov
cmp
insb
pop
and
xchg
out
enter
mov
dec
mov
push
push
mov
lcall
cmc
test
adc
mov
imul
adc
or
enter
and
cwtl
jecxz
jne
cs
mov
shlb
adc
test
xor
sbb
gs
lret
add
es
jnp
add
pop
dec
out
push
or
mov
pop
and
push
cmpsb
xor
lret
push
push
cmp
and
mov
pop
ret
aaa
mov
lods
cmpsl
xchg
dec
icebp
add
sub
loopne
dec
xor
pop
enter
lret
cmp
clc
inc
xlat
pop
mov
xchg
add
popa
out
cmp
xor
sti
inc
loop
sub
xchg
cmpsb
push
sbb
jno
mov
cmp
mov
fwait
enter
jl
mov
loopne
mov
mov
lds
nop
sbb
into
dec
sub
inc
mov
arpl
push
arpl
mov
fdivs
outsb
int3
andl
sbb
popa
push
icebp
push
lahf
stos
ljmp
dec
aaa
adc
push
dec
popa
lods
mov
rorl
lock
pop
jae
push
int3
out
movsb
adc
mov
xchg
jb
out
pop
add
in
fistpl
lods
dec
pushl
loopne
enter
pop
jne
dec
pop
dec
lds
fwait
popa
or
cld
xor
test
jnp
ss
shl
jle
stos
inc
inc
stc
sub
dec
ds
sub
test
mov
cmp
test
test
mov
movsb
and
mov
and
mov
adc
lahf
jns
out
xor
cmp
pop
xor
aad
mov
xchg
mov
xchg
sub
mov
scas
into
lock
fsts
jmp
adc
dec
cli
xchg
dec
cmpb
jl
daa
pop
and
or
shrl
or
or
add
push
jle
mov
in
subl
cmp
add
inc
pop
ljmp
cli
jp
sahf
lods
dec
xor
lock
adc
jg
ljmp
cwtl
cld
lods
pop
bound
ret
adcl
jns
fcoml
dec
popf
aad
cmp
xor
xchg
rorl
sub
mov
inc
pop
pushf
rcr
mov
sbb
mov
mov
xor
mov
clc
out
xor
daa
adc
stc
call
addr16
cmc
lahf
xchg
mov
cmp
mul
push
and
pop
pusha
repnz
fs
ljmp
leave
repnz
dec
push
mov
or
xor
insl
sub
xlat
xchg
rorb
and
je
loopne
inc
aas
out
dec
into
adc
xchg
movsb
mov
notl
ficomps
push
inc
in
ljmp
test
pop
adc
ret
add
popf
aaa
pop
jb
loopne
xchg
xor
mov
jne
stc
scas
arpl
sbb
xlat
push
mov
imul
scas
in
daa
imul
in
cmc
xor
addr16
pop
cs
pop
and
pop
scas
cs
or
cli
mov
jno
loope
cld
xchg
sbb
insb
popa
mov
imul
jae
push
inc
xchg
iret
mov
mov
mov
xor
mov
lret
mov
lods
adcb
or
and
adc
mov
and
fs
bound
enter
jno
adc
dec
mov
shll
mov
ret
sbb
imul
jg
pop
pop
insl
jmp
ja
sbb
mov
sbb
pop
sub
and
fnstsw
insb
ja
or
mov
je
inc
cmc
xlat
pop
into
cmc
xchg
sahf
xchg
or
addl
lock
subl
pop
daa
inc
push
push
push
lcall
cmp
cmp
and
sbb
ss
stos
stc
or
dec
sub
jns
mov
loopne
cwtl
push
fists
adc
jg
mov
add
push
into
or
scas
mov
mov
clc
icebp
push
cltd
jne
mov
sub
fst
movsb
cs
push
xchg
fs
mov
cld
popa
and
test
test
mov
out
int3
sbb
into
sbb
xchg
stos
or
or
and
stos
fildll
lret
mov
xor
xor
aam
push
hlt
mov
jnp
mov
loopne
lock
daa
sbb
mov
popf
cmc
or
leave
stos
sbb
and
movsl
popa
pop
das
dec
sbb
dec
jmp
push
and
fsubl
daa
inc
cmp
movsb
pop
push
data16
adc
push
loop
test
sub
mov
or
xchg
outsb
inc
gs
out
adc
rorb
xor
push
push
xchg
or
test
inc
sub
inc
or
in
add
jl
repz
mov
cmpsb
loopne
xor
push
add
out
outsl
in
icebp
movsl
cltd
lret
push
dec
jb
cmc
push
mov
sbb
test
cmc
inc
mov
lcall
rorl
imul
sub
sti
js
stc
shlb
test
icebp
xchg
add
inc
jecxz
gs
test
push
push
lods
enter
or
fwait
or
inc
mov
mov
xchg
adc
or
shlb
enter
pop
pop
aad
pushf
sahf
cs
or
aad
fldt
jmp
lods
popf
in
xchg
insl
sbb
jne
adcb
fwait
adc
adc
ret
negb
lret
inc
jb
dec
lret
shrl
repz
hlt
movsb
push
lods
jnp
test
xor
sbb
dec
push
pop
mov
push
idivb
or
movsl
ja
sub
addr16
cwtl
leave
pop
xchg
cmp
jge
mov
loope
mov
adc
scas
aam
js
jno
or
aaa
pop
jmp
push
insb
test
lods
xchg
out
push
or
fidivl
lea
add
cmp
in
out
cmp
jbe
scas
mul
out
xlat
fwait
adc
mov
jmp
stc
or
fcom
sbb
jnp
stos
xor
movsb
leave
xchg
or
repnz
push
movsl
and
xor
stos
jno
mov
mov
stc
stos
test
push
xchg
jmp
out
inc
pop
jl
push
xchg
sub
cmp
mov
adcb
lret
sbb
je
je
fistps
movsb
stos
adc
xor
push
jno
push
les
dec
or
popa
loopne
popf
dec
cmp
push
mov
icebp
xchg
add
or
mov
repnz
popf
outsb
movsl
pop
movsb
cmp
sbb
sahf
in
cmpsb
push
cs
cmc
mov
imul
and
dec
dec
xor
mov
jns
mov
pop
loop
stc
xchg
lock
out
movsl
sti
add
cwtl
mov
mov
mov
inc
jmp
into
stos
lods
adc
inc
cmp
and
cmp
aam
orb
adc
shr
adc
or
push
jp
add
sbb
jbe
fcomip
push
outsb
mov
xchg
nop
jl
lcall
arpl
or
and
cmpsl
inc
es
dec
jl
imul
mov
xchg
inc
cmp
adc
mov
mov
inc
xor
dec
xchg
xchg
push
dec
push
mov
idivb
scas
mov
push
out
fsubrl
les
test
add
jae
out
nop
dec
adc
lcall
in
int
inc
cmp
daa
icebp
rorl
out
jne
mov
lods
ret
andps
mov
pop
pop
rorb
ljmp
loopne
mov
cmpsb
dec
dec
jnp
in
rolb
mov
push
jmp
jmp
sub
inc
jne
dec
jns
push
in
gs
movsl
shlb
pushf
outsb
fadd
rclb
jge
punpcklbw
lds
inc
mov
lcall
xchg
add
sub
cli
add
dec
testb
push
test
dec
mov
jnp
int
cmp
loope
gs
into
cltd
or
push
in
xchg
adc
mov
cmc
add
inc
adc
inc
adc
cmp
jg
out
aam
mov
in
pop
inc
add
orl
lcall
jmp
dec
jp
mov
stc
inc
inc
xchg
cmpsb
xor
and
fxch
xchg
in
push
mov
fcmovb
adc
cmc
fcoms
in
sbb
sbb
in
adc
sti
push
out
and
lret
fdiv
and
lret
movsb
mov
push
lgs
jge
pop
into
insb
adc
xchg
mov
mov
mov
mov
push
in
out
jmp
xchg
iret
loop
lcall
dec
dec
xchg
xchg
dec
notb
ret
int3
xor
mov
hlt
inc
fisubl
into
clc
lret
cli
loopne
mov
mov
mov
pop
lahf
cmp
dec
out
in
dec
in
das
cmp
ja
sahf
fdivrp
add
sbb
and
lcall
push
out
sbb
daa
sub
and
je
cld
pop
imulb
push
sub
imul
sbb
xchg
jp
insb
add
mov
mov
in
lea
jns
dec
adc
cmpsb
aaa
mov
popa
into
imul
sahf
pop
jmp
mov
scas
mov
rorb
sti
fs
shll
dec
dec
push
jae
cmp
andl
call
cmp
cmp
xchg
stos
clc
shrb
mov
aas
push
fildl
test
mov
mov
jge
aas
xchg
clc
xchg
sub
jo
fistps
out
popa
stos
xlat
sahf
and
lcall
adc
fwait
ror
aas
xor
pop
xchg
movsb
repz
xor
sbbb
icebp
cs
aad
insb
scas
jp
or
mov
xchg
jbe
je
or
std
cmp
out
mov
push
inc
mov
sbb
repz
jns
or
or
xchg
gs
jecxz
out
repz
add
push
ja
pushf
mov
leave
scas
xchg
lods
mov
daa
pop
mov
pop
sbb
mov
cmp
dec
ljmp
mov
and
xor
inc
les
rorb
call
pop
xor
call
sarb
jae
mov
cmpsl
fstl
push
in
sub
or
cs
sbb
lods
dec
loope
inc
cmp
xor
shrl
pop
cmc
adc
movsl
fcoms
dec
dec
fldcw
mov
xchg
loope
and
sahf
and
into
lock
cmp
sbb
push
enter
insl
push
inc
cltd
add
cmpsl
adc
mov
push
rclb
iret
fwait
mov
mov
xchg
add
push
mov
adc
or
sbb
inc
mov
jmp
add
enter
sub
push
pop
sub
out
and
pushf
adc
insb
je
clc
push
mov
dec
and
lods
add
pushl
setae
dec
mov
or
or
xor
loop
lds
or
fcoml
mov
push
iret
punpckldq
jp
or
mov
sbb
aaa
add
les
mov
in
stos
sub
add
xchg
adc
dec
je
dec
lods
in
cmp
mov
sub
aas
mov
push
push
xchg
orb
xor
out
mov
adc
mov
cs
dec
imul
push
mov
add
xchg
xorb
in
mov
das
pushf
pop
popf
test
sub
mov
or
das
bound
je
jo
stos
stc
das
out
repnz
and
or
sbb
stc
cli
fdivrs
movsl
xchg
outsb
repnz
jmp
sahf
jecxz
shll
mov
cmp
inc
mov
das
dec
in
lcall
jns
mov
scas
popl
gs
jo
mov
sbb
sbb
addr16
cmpsb
push
push
push
mov
loop
jae
lahf
into
jne
out
movsl
cmpl
out
fimull
xchg
ljmp
or
fbld
dec
cmp
cld
icebp
add
rcrl
test
add
mov
es
jns
ret
inc
daa
jns
pop
or
mov
icebp
lahf
or
pop
or
popa
jno
stc
dec
xchg
xor
mov
xor
arpl
repnz
mov
sarl
loop
dec
sbb
dec
gs
testl
lret
push
lea
sti
mov
mov
jecxz
pop
dec
cmp
cwtl
shlb
xchg
movsb
shlb
jbe
pop
cmc
sub
adc
repnz
lock
dec
insb
pop
pusha
movsl
add
sub
inc
jns
add
loopne
sbb
mov
jle
rclb
stc
data16
add
mov
lds
cmc
xchg
lret
push
sbb
pop
les
push
add
xchg
jge
mov
mov
je
repnz
test
lds
nop
iret
push
adc
jl
scas
jmp
int3
jae
arpl
data16
pop
adc
into
fucomip
mov
pop
rolb
and
sbb
adc
push
mov
sbb
push
cmpsl
loop,pt
daa
pop
pusha
pop
adc
ret
scas
clc
adc
inc
hlt
in
push
inc
dec
mov
ja
push
jl
sahf
xchg
pop
dec
iret
jbe
sbb
lea
mov
adc
push
and
pop
movsb
pop
scas
sbb
xor
lea
decl
dec
fsts
aam
mov
cmc
orb
add
push
or
test
repnz
mov
sub
inc
pop
xchg
fs
xchg
dec
inc
cwtl
ficoms
and
push
enter
ljmp
shr
mov
and
add
push
scas
hlt
add
cwtl
inc
nop
jmp
dec
sahf
mov
ljmp
jecxz
aam
jne
pop
and
in
sbb
cltd
push
xor
or
pop
dec
imul
xor
mov
push
cli
mov
in
xchg
nop
pop
adc
es
dec
xchg
cmc
sarb
cmp
lret
xor
shr
outsl
pop
js
jg
aaa
insb
testb
int3
mov
or
hlt
adc
push
jp
stos
xor
loope
jbe
hlt
xchg
lcall
dec
lret
int
mov
stos
adc
scas
out
popa
test
imul
mov
jmp
in
dec
push
push
bound
inc
mov
sti
sub
mov
jbe
fcmovnbe
outsb
xor
and
mov
mov
xchg
aad
mull
lods
mov
imul
add
popl
inc
pop
cltd
xor
add
or
inc
inc
mov
or
add
loop
fidivrs
les
imul
dec
xchg
jmp
ss
lds
fdivl
addr16
xchg
repz
lret
cmc
mov
roll
mov
out
std
bound
dec
adc
cmpsl
jae
or
mov
aaa
and
mov
test
dec
dec
push
jns
sbbb
in
lahf
adc
inc
test
jmp
bound
es
popl
sub
push
mov
mov
outsl
adc
mov
or
xchg
stc
adc
add
pop
mov
mov
addr16
push
ret
push
pop
xor
sub
push
cmpsb
push
pop
shlb
add
out
sbb
or
mul
fistps
and
add
orl
lock
dec
add
and
pop
xchg
dec
cmc
mov
jmp
mov
cs
imull
popa
mov
or
cmp
or
stos
inc
push
mov
pop
scas
sbb
add
mov
into
gs
das
xchg
ds
ss
popa
mov
dec
leave
push
mov
xchg
sarb
sbb
cmc
aas
push
sbb
outsb
test
cmp
xor
or
adcl
in
int
sahf
mov
mov
mov
outsb
cmp
xchg
cwtl
xchg
pop
mov
bound
arpl
stos
mov
dec
int3
repnz
neg
xchg
stc
out
ljmp
dec
push
inc
mov
out
imul
into
lock
adc
xchg
jb
nop
pop
scas
daa
fsubr
into
cli
pop
cmpsl
jb
shll
outsb
enter
and
pop
or
ficoml
hlt
add
ret
out
add
mov
jo
int
push
cmpsl
mov
int
xchg
sti
and
dec
mov
add
adc
fwait
jne
shlb
jns
outsl
fcom
sbb
out
sub
shll
insb
and
xchg
and
adc
les
xor
ja
loope
hlt
popf
sbb
adc
test
imul
les
adc
adc
inc
es
in
int
rcrb
sub
es
fs
fisubrs
adc
push
xchg
xor
mov
pop
sbb
pushf
pop
pop
dec
pop
dec
sub
sub
add
fdivl
jne
sbb
mov
lret
ja
popf
in
mov
cmp
xchg
mov
nop
lods
cmpsb
xor
sub
fsubl
loope
jno
inc
add
scas
hlt
mov
cmp
fdivl
mov
and
mov
jge
ljmp
mov
mov
shrb
pop
adc
adcl
xchg
xor
sbb
lret
sbb
rcrl
sub
xchg
imul
negb
hlt
out
aam
aad
loopne
inc
add
pop
int
push
loope
outsb
out
xchg
into
push
mov
mov
stos
inc
in
mov
push
je
inc
push
imul
inc
movl
call
cmc
dec
shrb
stos
pushf
test
neg
ljmp
cmpsb
dec
mov
hlt
cmp
add
and
adc
int
adcl
shll
ret
fildl
fidivs
cmc
mov
add
pusha
sbb
aad
mov
and
fstl
xchg
imul
out
into
movl
addr16
mov
out
mov
jmp
imull
stc
lret
mov
pop
cmp
cmp
lea
mov
xor
mov
mov
leave
das
xchg
mov
jae
das
xor
cmp
negl
test
ss
sbbl
pop
mov
add
enter
cmc
sbb
cmp
jno
pop
mov
jb
xchg
xchg
mov
cmp
fs
push
dec
xor
imul
inc
scas
inc
stos
jne
addb
push
or
jb
mov
mov
and
or
pop
jae
adc
in
or
cmpl
lea
inc
ja
fistpl
pop
std
inc
cmc
outsl
inc
int3
jle,pt
fucomi
xor
jmp
jg
icebp
pop
adc
icebp
leave
cwtl
sti
or
push
shl
mov
test
shrl
enter
mov
add
stos
add
test
mul
push
scas
mov
das
or
or
rclb
sub
test
and
xchg
popa
outsl
cmp
ja
xor
jnp
mov
xchg
les
pop
xlat
das
push
add
mov
add
js
aam
jmp
movsb
scas
test
mov
sbb
data16
xor
out
pushf
push
in
xlat
pop
in
push
jae
add
bnd
jecxz
test
add
out
cli
shrb
movsb
ret
sub
in
push
popf
sub
push
rcrl
jno
jne
cmpsb
mov
mov
xchg
pop
aaa
jmp
cmpsb
mov
icebp
adc
cli
xor
jb
cld
imul
in
popf
pop
bound
lock
cwtl
test
xor
popl
pop
cmp
aas
mov
pusha
cmp
psrad
int
in
pop
jle
syscall
cmp
lods
jnp
mov
lods
sbb
mov
loop
mov
and
lahf
lds
sbb
cmpsl
ret
in
lds
jecxz
pop
ljmp
test
mov
or
dec
pusha
gs
cmpb
sbb
jp
sub
insb
inc
test
ss
or
inc
daa
push
push
push
jge
jle
lret
pop
and
mov
jecxz
sahf
push
xchg
lods
jmp
pop
ret
mov
jnp
ds
sub
andl
inc
mov
push
test
out
addr16
dec
popa
in
push
or
into
roll
popa
aad
mov
and
pop
ljmp
and
push
mov
pop
dec
dec
enter
and
mov
and
inc
xorl
xor
lds
add
test
push
mov
push
das
or
xor
dec
cmpl
mov
inc
xchg
cltd
addr16
mov
sub
leave
xorb
ds
push
pop
add
cmp
cmp
hlt
bound
add
fcmovnu
shl
leave
inc
inc
incb
mov
push
arpl
pop
ja
mov
xor
dec
xor
sbb
outsb
add
cmpsl
mov
sub
fcoml
das
out
xchg
sbb
movsl
cmp
mov
add
je
fisubrl
dec
add
daa
mov
push
rorl
inc
fsubrs
jmp
loopne
xchg
push
pop
stos
cmp
adc
leave
leave
sahf
call
mov
adc
fbstp
insb
int3
hlt
and
mov
sub
jbe
enter
daa
inc
push
xor
push
es
push
cld
adcb
sbb
jb
cmp
fisubrl
mov
push
jp
cmp
lods
ds
das
jns
mov
bound
inc
xor
add
mov
mov
fnstsw
scas
sti
xorb
add
or
xor
cmpb
call
add
sbb
mov
cmp
or
les
mov
push
jmp
jp
outsl
hlt
sahf
xor
pop
mov
inc
sbb
jecxz
xor
test
adc
lret
das
popl
les
jmp
xlat
scas
data16
pop
repz
cmp
aad
lcall
inc
mov
pop
ret
xchg
lcall
pop
jne
mov
cmc
fwait
xchg
mov
pop
fiadds
push
fcomps
jo
mov
push
add
icebp
lods
xchg
inc
test
dec
data16
mov
aad
aad
inc
outsl
dec
shl
add
ret
xor
and
fiadds
hlt
test
mov
add
xor
sbbb
xchg
sbb
mov
js
jmp
sub
push
push
arpl
push
out
mov
cmp
cmc
cmpsb
roll
xor
test
adc
inc
in
mov
inc
jns
shrb
push
lahf
fbld
pop
xchg
cmc
aam
mov
and
jnp
fbstp
add
lcall
ficoml
xorb
cmpsb
ja
dec
xchg
rorl
iret
fs
arpl
xchg
int3
and
fsubs
hlt
push
mov
jl
fwait
mov
mov
and
adc
inc
or
addl
jg
movsl
add
pop
lret
or
inc
fildll
enter
sbb
xorb
adc
popf
sbbl
iret
or
jb,pn
inc
fidivs
mov
mov
dec
pop
add
fwait
inc
rclb
push
inc
or
scas
xor
sbb
pop
rcll
dec
loopne
movsl
repnz
pop
pop
dec
xchg
aaa
inc
add
inc
aad
cltd
es
sbb
stos
nop
jecxz
and
out
adc
inc
repz
repz
add
testb
lcall
ret
sbb
mov
shlb
fisttpll
std
sub
das
int
push
push
int
out
mov
enter
dec
insb
dec
push
in
xlat
inc
test
sub
sub
lods
int
popa
cltd
inc
fistpll
call
outsb
xchg
cli
mov
push
aad
push
mov
insb
jle
lret
dec
clc
out
incl
test
pop
and
scas
jb
lock
imul
or
insb
add
ljmp
mov
adc
imul
jg
jp
out
das
and
and
out
adc
add
dec
icebp
mov
push
aaa
scas
adc
mov
call
cld
pop
jmp
jne
push
xor
out
inc
adc
test
adc
adc
jne
fwait
insl
shll
imul
addr16
lods
and
frstpm(287
cmp
mov
mov
loopne
jl
mov
andb
sbb
add
divl
or
shrl
and
and
lock
lock
enter
loopne
subl
sub
popa
int
arpl
xchg
les
jmp
out
cmp
mov
nop
scas
sub
dec
into
pop
inc
pop
mov
popa
gs
mov
outsb
loopne
fyl2xp1
jg
cmp
adc
rcrb
adc
push
and
dec
cmp
xchg
call
pop
repz
stos
mov
mov
lds
pushf
mov
shll
push
std
lret
fcomip
insl
fnstcw
mov
int
imul
movsb
cmp
xchg
adc
fsubrl
cwtl
xchg
dec
mov
ds
adc
loope
fbld
sub
jno
sub
mov
push
inc
repnz
out
shlb
call
movl
jnp
loope
clc
js
mov
pop
pop
lret
rcll
outsl
stos
jae
cmc
pop
mov
cmp
adc
shlb
mov
fs
mov
push
rcrl
pop
pop
iret
pop
insl
fcoml
je
int3
or
stc
aad
testl
aaa
loope
xchg
sub
cmpsl
test
mov
movsb
mov
leave
loopne
mov
and
mov
or
les
scas
scas
out
sbb
ror
aad
xchg
ds
sbb
es
fs
mov
or
cltd
ja
push
and
fisubs
sahf
shrb
mov
rdmsr
push
push
je
stos
sti
pop
adc
xchg
dec
mov
jl
cmp
pop
sbb
and
mov
push
cld
xor
leave
fs
fiaddl
inc
push
mov
out
pop
adc
pop
movsl
stos
sbb
push
out
lods
sbb
mov
inc
aad
xorl
push
cmc
aam
shll
fcmovnbe
mov
xchg
fbstp
aam
pusha
push
inc
mov
and
imul
and
push
sbb
mov
xor
fsubrs
sarb
andl
dec
enter
aam
mov
or
outsl
lcall
xchg
jbe
scas
jmp
outsb
aad
sahf
cmp
mov
stc
pop
mov
ret
out
pop
adcb
xchg
inc
int3
cmp
imul
pop
scas
dec
adcl
fildl
repz
jbe
add
out
mov
xchg
lds
inc
jbe
or
les
mov
pop
lcall
push
je
sarl
rcl
ror
mov
inc
mov
sub
stos
jbe
mov
mov
adc
cmp
mov
and
lds
dec
mov
xchg
jae
push
sbb
std
jae
inc
in
xlat
cmc
mov
jno
insb
mov
mov
dec
jg
xchg
inc
mov
test
and
jns
push
push
outsl
xchg
cmp
jle
lds
push
outsb
or
push
add
add
out
mov
adc
add
sub
cmp
inc
imul
clc
pop
sbb
mov
jae
add
sbb
inc
xchg
rol
insb
nop
rorb
push
xor
popa
jge
sub
out
mov
mov
sahf
movsl
lret
insl
mov
std
pop
mov
movswl
pop
jb
test
jno
mov
leave
jne
popf
pop
out
je
sahf
cmp
lock
jae
cmp
adc
push
cmp
rol
push
fidivrl
jns,pn
int3
jno
sub
dec
sahf
push
push
sbb
add
out
xor
xlat
in
int
dec
xor
xchg
xchg
dec
xor
outsb
cmc
jp
and
aam
aam
push
xchg
push
pop
mov
push
mov
loopne
mov
movsb
mov
cs
and
je
xlat
out
xor
sub
lds
xor
push
jmp
xchg
jnp
add
xorl
call
cwtl
lret
sbb
xor
sbb
aaa
lret
add
adc
pop
pop
shrl
es
xchg
test
xchg
or
jle
adc
inc
mov
mov
jno
test
jbe
sbb
in
in
popa
mov
add
fbld
dec
lods
mov
out
and
push
insb
out
xchg
and
rorl
cmc
dec
push
fcomp
stos
xchg
lea
mov
aaa
sahf
lahf
cld
mov
lods
fistpll
fstps
daa
pop
push
int3
push
fidivrs
fwait
add
mov
mov
sub
xchg
add
lods
xlat
in
movsl
insb
xchg
adc
lea
je
popa
scas
sti
pop
dec
out
ret
mov
and
sub
cmp
stc
jnp
aad
gs
andl
aas
or
inc
sub
jmp
pop
push
xor
je
jle
cli
push
dec
jg
sbb
xchg
mov
test
mov
and
stos
mov
test
clc
xor
push
sarl
dec
jno
stc
lahf
fiaddl
xchg
add
jno
sub
in
push
mov
out
jp
adc
dec
imul
push
pop
adc
subl
pop
int
adc
lret
fxam
sub
sub
and
idivb
adcb
jns
call
mov
and
cmp
in
vcvtss2sd
add
cmp
pop
mov
hlt
enter
cmp
xchg
aam
lea
gs
xlat
shlb
xchg
xor
sub
addl
dec
mov
cmpsb
xchg
mov
xor
pop
movb
arpl
pop
sub
pusha
aaa
lret
and
jno
pop
adc
lcall
sbb
mov
pop
mov
cld
mov
push
movsb
push
push
das
or
mov
test
xchg
cmp
lods
mov
xchg
xchg
adc
ret
pop
dec
lock
nop
stos
pop
add
pop
inc
push
jmp
test
cmp
fstpt
dec
add
mov
push
movsl
xchg
mov
sbb
pop
lods
nop
jae
jge
out
lods
xor
out
out
aad
dec
push
inc
jl
js
dec
loop
data16
mov
inc
push
mulps
xor
cmp
xor
fbld
mov
or
dec
push
or
jo
data16
je
ret
cmc
xor
fwait
push
sub
stos
and
mov
test
push
pop
das
mov
imul
fucom
das
stc
leave
lock
aas
jg
aam
xchg
in
aaa
jge
in
xchg
rolb
adc
inc
shrl
xchg
pop
jl
dec
inc
cwtl
pusha
aas
shl
idivb
mov
pop
aad
mov
rcl
lret
inc
sub
sub
loope
mov
ret
and
adc
aaa
push
xchg
test
pop
cmp
adc
mov
je
rcl
inc
pop
pop
or
mov
cmp
sbbl
sti
lret
mov
push
daa
mov
inc
sub
pop
or
lcall
jmp
out
lret
jne
pop
and
sbb
fnstenv
pop
popf
out
rorl
dec
and
jo
pop
adc
pusha
sub
jl
icebp
nop
loopne
je
loope
outsl
ss
jae
hlt
fcomps
fistps
sbb
call
mov
out
mov
cmp
shrl
inc
fildl
fistl
movsl
dec
pop
aaa
mov
and
icebp
imul
xchg
sub
pop
in
mov
xchg
jne
sti
mov
lahf
mov
jge
jo
pop
adc
icebp
jmp
and
cmp
xor
movsb
cwtl
push
in
aas
or
add
ret
and
out
add
mov
shrl
sbb
cmpsl
dec
dec
mov
adc
mov
ja
or
jne
leave
mov
mov
js
dec
add
mov
mov
std
cltd
pusha
fmulp
cmp
sub
fs
les
adc
sbb
and
mov
and
mov
sub
int
mov
lcall
pop
mov
lret
out
call
mov
jl
shl
orb
inc
mov
jo
mov
jbe
nop
enter
test
lods
lea
aas
ret
dec
add
fnstcw
sti
repz
add
cmp
adc
mov
dec
sub
jp
cmp
test
push
cmc
dec
mov
dec
mov
push
pop
mov
bnd
in
push
push
daa
jne
mov
push
test
xchg
push
mov
mov
fisubl
lock
mov
idivb
add
push
gs
or
push
dec
sub
enter
stos
iret
int3
pushl
cmp
lock
cmpsl
pusha
sub
and
add
push
adc
arpl
xlat
pop
xor
outsb
fldenv
xchg
mov
mov
dec
xor
fs
sub
mov
jae
stc
xor
jecxz
call
adc
mov
repz
xor
cmp
fmuls
cmp
add
dec
push
or
cmc
pop
or
xchg
fsts
das
imul
mov
xchg
lods
and
adc
sbb
add
imul
repz
push
in
push
outsl
mov
mov
data16
ljmp
push
add
adc
imul
shrl
popa
icebp
out
fstl
in
rol
adc
xchg
das
test
ficompl
mov
leave
and
inc
mov
insl
add
xchg
testl
das
popl
mov
in
in
jmp
andnps
jmp
enter
add
sub
ja
mov
orb
xchg
mov
inc
dec
xlat
and
shll
loopne
cmpsl
mov
sbb
std
out
pop
mull
xchg
and
inc
pop
sub
push
inc
and
and
rcll
inc
push
xchg
mov
fldt
mov
push
sub
cmp
xor
int3
lcall
cmp
mov
pushf
sub
sub
notb
mov
dec
out
xor
add
cs
nop
imul
xor
xchg
subb
push
jns
add
adc
xchg
rorl
js
xchg
dec
shlb
stos
mov
xor
aaa
das
es
mov
mov
idivl
mov
jmp
dec
push
iret
lahf
fsts
sarb
lods
jl
xchg
in
mov
xor
leave
mov
mov
sub
jo
sarb
in
dec
dec
repz
push
xor
or
or
and
push
in
jo
xchg
fadds
jp
adc
jle
lahf
pop
mov
jns
insb
dec
loopne
in
addb
icebp
hlt
pop
mov
addl
test
repnz
clc
cmp
lds
sbb
cld
xor
inc
mov
test
xor
sub
andl
dec
cld
aam
and
dec
xorl
aam
lret
dec
hlt
pushf
lods
jno
lcall
cltd
jae
push
pop
dec
push
movsb
cmpsl
cli
adc
inc
xchg
adc
sbb
fstps
and
pand
adc
popa
sbb
clc
jle
jne
in
sbb
fcmovb
dec
iret
and
cld
pop
aam
les
fsubp
out
arpl
and
scas
jg
iret
int
xchg
repnz
fwait
scas
adc
mov
in
sbb
push
ja
push
pushf
jns
mov
pop
fisubrs
adc
jl
jnp
addr16
fmuls
sbb
jnp
not
cltd
push
push
lahf
in
test
sahf
and
mov
and
mov
hlt
adc
mov
add
adc
cmp
or
mov
in
add
mov
fnstenv
adc
cmp
mov
cld
int
adc
adc
sbb
xor
sub
mov
adc
out
rcr
and
inc
and
pop
inc
pop
xor
mov
mov
in
cmp
xchg
cmp
xor
pop
mov
jns
pop
loop
add
movsl
xchg
push
js
cmpsb
jb
pop
shrb
hlt
or
ja
pop
out
les
stc
push
mov
cmp
inc
cmp
arpl
and
test
scas
icebp
cld
out
jmp
push
imul
adc
iret
mov
adc
or
xor
pusha
cmp
sub
stc
jle
test
or
or
mov
imul
adc
push
sbb
pushf
je
jnp
stc
fcompl
cmpsb
mov
and
icebp
arpl
push
push
ja
xchg
pop
lcall
aam
xor
cmp
mov
jnp
cmp
xchg
push
stos
sub
mov
scas
cmp
sti
lods
add
xor
inc
leave
ficompl
in
cmc
xchg
pop
sbb
sub
sbb
mov
mov
rcrb
imul
pop
xlat
or
loope
mov
xor
hlt
stc
dec
mov
daa
dec
daa
test
dec
pop
je
add
cmc
cmp
neg
call
mov
not
xor
cld
mov
movsl
lods
ljmp
inc
sbb
outsl
ds
pop
jge
lea
sub
add
pop
test
add
xchg
cmp
shrb
or
or
aaa
pop
cltd
imul
push
dec
out
arpl
addb
dec
sbb
icebp
cmpsb
mov
in
push
arpl
test
dec
loopne
cmpsb
lods
add
popa
push
aam
fdivs
out
xor
mov
fldt
push
test
cld
adcb
and
gs
in
dec
xor
in
fwait
inc
push
dec
in
adc
or
jb
jne
ja
sbb
dec
rol
cmc
pop
andb
cs
inc
xchg
mov
mov
iret
sbb
pop
lcallw
push
adc
and
dec
arpl
jo
and
mov
pop
fnstsw
adc
cmp
mov
sub
push
shll
gs
daa
xor
xor
cmpsl
mov
es
mov
icebp
mov
push
out
popf
lcall
cmp
mov
adc
in
sub
test
ljmp
dec
out
adc
popa
cs
push
cmp
mov
dec
repnz
int
or
fistpll
and
jmp
and
push
xchg
incl
enter
lret
adc
sub
aaa
sbb
mov
jbe
add
testb
and
push
adc
sbb
mov
pop
insb
or
mov
or
mov
aas
pushf
push
sub
stos
shrl
xor
mov
jb
cmpsb
enter
jnp
add
adc
orl
pop
addr16
xor
out
lds
cmp
pop
cmp
dec
loope
and
cmp
pop
int3
arpl
fs
stos
and
mov
lret
sub
stos
mov
mov
data16
daa
cmp
xor
loop
into
aas
enter
cli
int3
xchg
pop
cmp
mov
jge
cmpsl
xchg
imul
cwtl
push
jle
adc
add
int3
mov
sbb
or
fcomps
dec
testb
in
add
push
in
cmp
fwait
clc
sbbb
shlb
ret
jl
decl
adc
mov
and
ficomps
repnz
dec
or
roll
cwtl
fldt
idivb
mov
cmp
stc
enter
xchg
push
add
xchg
je
movsl
addr16
or
lock
mov
sti
imul
stos
push
inc
mov
jbe
shl
sbb
pop
pop
xor
push
ret
inc
out
repz
mov
sub
mov
shlb
jl
sub
dec
jg
fsubs
cmpsb
aas
mov
dec
jno
rolb
xchg
pop
ret
frstor
xor
push
ds
aas
mov
adc
or
jae
daa
rorb
and
jae
movsb
in
les
mov
xchg
jg
pop
inc
ss
pop
cmc
add
inc
sarl
xor
ljmp
mov
sarl
jno
daa
dec
call
adc
pop
push
cmp
xlat
add
jns
outsl
repnz
aam
js
loopne
jmp
cmpsl
sub
xor
cld
sbb
enter
mov
push
sbb
and
jle
into
push
rorl
fdivrs
call
scas
stc
inc
adc
hlt
xor
add
mov
into
xchg
and
lahf
cs
xchg
mov
mov
sbb
xor
shl
fildl
push
cmp
cltd
mov
pop
pop
jmp
xchg
daa
mov
xor
push
notb
lock
outsl
or
in
jl
fildll
and
int
and
inc
xor
sub
dec
or
pop
cltd
xchg
push
push
jge
sbb
dec
cmp
jnp
sbb
or
inc
cmp
cs
lods
pop
add
sub
push
int3
stos
push
icebp
xor
fidivrs
push
mov
adc
pop
sbb
adc
out
mov
xchg
or
es
jno
mov
adc
mov
pop
loop
negb
stc
xor
into
or
mov
stc
cmpsl
out
add
xchg
ret
push
hlt
sahf
jle
jge
andb
push
insb
fsubs
decl
in
push
sbb
test
and
fstpt
pop
fmul
addr16
mov
pop
jo
scas
xor
mov
scas
rcrb
push
pop
test
mov
xor
scas
xchg
fnstsw
or
ficompl
dec
mov
ja
imul
jl
dec
push
xchg
sarb
xchg
mov
dec
dec
hlt
xchg
mul
and
out
ss
push
mov
int3
push
or
stos
das
test
mull
mov
push
popf
imul
test
mov
lock
pushf
sbb
push
xchg
movsl
testl
mov
adc
loope
inc
sbb
call
cmpsl
xchg
cmpsl
neg
or
ds
add
and
hlt
sub
jno
ret
mov
inc
cmpsb
add
fisttpl
ret
ret
adc
jb
sbb
add
les
negb
push
dec
cli
repnz
xchg
loopne
xor
pop
lret
jge
mov
out
xchg
cmp
pop
add
push
scas
js
sbb
sub
add
push
mov
das
xor
xor
movsb
in
insb
test
sub
sbb
sub
mov
mov
in
test
sarl
adc
je
std
ret
int
mov
mov
dec
fistpll
or
sub
mov
jae
mov
out
mov
push
pop
cmp
xor
into
adc
mov
in
in
scas
or
aad
mov
out
sti
into
xchg
xchg
jmp
mov
mov
pop
outsb
sti
pop
mov
imul
in
and
out
mov
push
add
sub
jecxz
dec
fldenv
and
out
loopne
orl
and
push
mov
sbb
lods
xchg
adc
add
cmp
lds
in
pop
mov
sbb
dec
stos
insb
inc
adc
sbb
pop
xor
xchg
stos
ficoml
mov
lahf
aad
jo
cmp
clc
lods
les
xchg
and
or
inc
adc
mov
mov
push
loop
dec
inc
xchg
xor
adc
xchg
int
ficompl
decb
ja
loop
adc
fiadds
xchg
dec
mov
ds
jb
popf
fnstenv
jmp
repnz
sbb
cwtl
cltd
xchg
fstpl
push
mov
out
sub
dec
jle
imul
sub
aas
adc
into
ficoml
mov
out
pop
mov
ljmp
mov
or
jge
push
int3
adc
hlt
roll
jno
mov
xchg
sysenter
ret
lret
aas
xor
adc
dec
adc
push
dec
fldt
add
leave
xor
xchg
mov
test
jmp
ret
lods
data16
xorb
xorl
fdiv
dec
dec
pop
fldcw
cmpsb
bound
aad
scas
fs
ja
rorb
pop
push
out
mov
mov
add
stos
shl
lret
inc
dec
jo
fidivl
dec
jno
std
push
xchg
nop
in
or
mov
dec
ljmp
mov
sahf
sbb
mov
mov
sub
push
pop
fs
cmp
loope
enter
push
rclb
and
loope
in
out
pop
add
mov
ljmp
inc
jb
lret
adc
mov
mov
push
imul
orl
fcmovb
xor
into
cmp
gs
roll
call
and
insb
xchg
jmp
sbb
mov
cmp
mov
xchg
adc
push
leave
pushf
rcrb
sbb
mov
aad
dec
xchg
test
daa
test
pop
and
and
pushf
je
scas
xchg
pop
jnp
daa
shl
in
mov
add
and
cmpsb
sub
sbb
push
pop
pop
push
shl
fisubl
out
jmp
and
pop
xchg
icebp
mov
pop
mov
mov
adc
xor
mov
cli
mov
mov
test
dec
or
scas
push
cmp
js
xor
stos
and
lds
jne
lods
or
xchg
pop
fldl
push
or
jecxz
pop
test
push
and
or
cmp
mov
dec
mov
xor
jl
push
or
dec
call
jmp
jg
pop
lret
rol
pop
push
rcrb
repz
roll
std
pop
xchg
dec
push
arpl
push
mov
out
sti
mov
dec
inc
ja
mov
add
repnz
inc
pop
sti
lock
stc
cs
out
jo
jns
repnz
mov
rorb
push
lahf
cltd
fnstcw
mov
xchg
sahf
shll
fst
cwtl
cli
clc
and
jo
mov
mov
or
add
mov
jb,pt
mov
push
repnz
or
and
mov
push
mov
inc
movsl
movsl
or
int3
and
jg
push
out
je
jecxz
dec
sahf
or
cmp
mov
jb
mov
movsb
mov
and
xchg
movsl
mov
lea
adc
scas
push
repnz
push
mov
sbb
pusha
mov
add
out
int
lahf
mov
aad
daa
mov
ss
aaa
sbb
scas
popa
xor
mov
fwait
ja
add
aad
sbb
pcmpeqd
js
test
cmp
pop
and
std
aaa
fstpt
fsubs
shrl
jle
lahf
adc
push
lcall
lods
dec
push
aad
stos
mov
push
push
pop
push
cmp
xchg
pushf
rcrl
pop
cmpsl
jae
icebp
insb
xorl
pop
ljmp
addr16
sbb
add
inc
scas
push
fistl
mov
fidivl
or
lret
lods
pop
lods
fwait
das
adc
push
orl
jnp
ljmp
adc
cmp
inc
rclb
int
and
nop
cmp
and
ds
int
in
jmp
push
rorb
repz
faddl
test
out
adc
fldl
imul
jne
out
dec
mov
data16
out
xor
lea
popf
cli
xchg
ljmp
lock
xor
jns
cmp
or
mov
add
xor
fildll
mov
int3
jbe
popf
shr
or
adc
in
cvtdq2ps
aaa
std
jg
fstpt
jno
cmp
je
aam
in
xchg
mul
mov
inc
add
add
cmp
mov
scas
aad
lret
loop
sbb
stos
push
out
scas
cltd
dec
mov
add
lock
popf
jo
scas
rclb
ja
rorb
cmpsb
pop
sub
stos
xor
cs
mov
inc
test
xchg
add
sbb
lods
mov
dec
inc
pop
adc
mov
sahf
cmpsl
in
daa
inc
dec
pop
push
test
call
add
arpl
aam
stos
and
cmpsl
or
es
and
jge
ds
fs
sbb
and
or
pop
inc
mov
xchg
cld
lret
ljmp
nop
mov
jnp
dec
test
data16
hlt
xchg
or
dec
sarb
lock
lcall
fmul
mov
mov
enter
sub
mov
mov
inc
jp
aad
pop
jb
push
negl
test
jns
dec
push
aad
ljmp
ret
push
sbb
mov
aas
loope
decb
adc
add
in
andb
loope
idivl
out
mov
data16
cs
xchg
mov
cld
popa
cmp
mov
pop
mov
inc
rcll
fcomps
daa
jnp
mov
and
dec
xor
cmp
push
mov
mov
push
inc
mov
ljmp
push
inc
mov
rcr
icebp
and
dec
mov
push
adc
mov
rcll
dec
jg
outsb
stos
loopne
aas
and
clc
sbb
lret
movsl
pop
negb
decb
lods
test
dec
and
cli
int3
cmc
mov
nop
out
rcrl
repz
jnp
and
mov
adc
int3
mov
sbb
shrl
daa
dec
insl
stos
sub
jp
sbb
fwait
mov
ficoms
cmp
sub
daa
in
dec
jmp
cwtl
aas
adc
imul
push
call
faddl
fs
aam
movsl
loope
clc
repnz
add
pop
loopne
cmp
inc
mov
iret
and
sbb
cmc
sbb
sahf
lods
mov
xor
mov
add
push
and
aaa
dec
test
fwait
push
push
out
mov
repz
cmp
lea
jbe
ljmp
push
sbb
cmpsl
fdivrs
js
stos
sar
mov
jbe
scas
cmpb
mov
bound
fwait
jg
cmp
insb
sbb
cmp
push
push
or
mov
jle
rorl
push
shl
in
in
loop
ret
jle
xchg
imull
jp
roll
sbb
mov
pop
sub
dec
fisttps
int3
rclb
mov
cmp
pop
mov
rcrb
mov
incb
pop
mov
jb
sbb
jb
out
push
cmp
insl
xor
xor
cmp
lcall
dec
lret
out
adc
mov
fisubl
leave
push
add
adc
jo
dec
call
pop
bound
push
pop
cmp
ss
das
lds
or
cmp
pop
jae
outsb
jl
push
push
fsubrl
scas
imul
jge
mull
enter
enter
scas
cmp
test
jge
mov
pop
xchg
dec
das
xor
rcrb
fidivrs
les
sbb
sarl
stc
jle,pn
xor
test
jns
movsb
data16
ljmp
mov
mov
ret
cmp
pop
push
pop
iret
pusha
mov
mov
and
mov
jns
dec
inc
cmp
outsl
xchg
shll
in
push
aad
push
ja
in
mov
xchg
adc
push
inc
adc
outsb
aam
sbb
mov
and
jbe
loopne
push
lock
outsb
ljmp
cmpsl
mov
mov
push
or
movsb
xchg
mov
xchg
cmpsl
mov
ja
pop
call
sbb
or
jo
cs
xor
imul
cmp
add
out
sahf
cmc
xchg
mov
outsl
jmp
dec
push
xchg
mov
lods
cmpsl
cld
stos
push
or
mov
xchg
jecxz
xchg
push
mov
mov
lret
dec
mov
sar
aad
out
in
insl
mov
in
jmp
push
gs
jle
mov
ret
fstps
js
mov
enter
call
cmpsb
sbb
mov
mov
sahf
inc
push
dec
xchg
lea
mov
nop
push
subl
test
push
clc
sbb
into
ljmp
add
clc
cmpsl
push
xlat
setns
pop
out
or
out
lds
ret
aad
xchg
push
sbb
pop
sbb
sbbb
mov
fstl
xor
int
js
mov
dec
cmp
pop
xor
ja
cmp
push
cmp
pop
dec
inc
mov
aaa
loopne
movsl
fisubrs
jno
sbb
xchg
sub
icebp
stos
das
ror
xor
repz
adc
inc
dec
pop
dec
cmp
cmp
and
scas
mov
adc
sub
movsl
fistpll
adc
push
loopne
fcmovne
shlb
stos
idiv
mov
fimull
lret
ljmp
jge
pop
sbb
pushf
aas
inc
push
popa
mov
jmp
ja
or
mov
dec
in
jmp
inc
cld
je
mov
test
dec
popw
cwtl
mov
cwtl
sbb
jmp
dec
jno
ljmp
pop
add
dec
pop
sahf
mov
out
pushf
fcoml
test
and
jae
cmpsl
jecxz
mov
pusha
fcoms
das
mov
add
imul
leave
fwait
push
call
mov
aaa
shll
dec
add
add
testl
les
je
push
pop
sbb
andb
dec
cltd
or
xchg
dec
cmp
loope
dec
arpl
lods
mov
enter
cwtl
mov
pop
nop
int3
aas
add
insb
scas
sbb
fmull
inc
push
hlt
inc
add
fimull
ret
jmp
int
inc
xchg
pushl
sbb
aas
repz
cmpsl
sbb
jno
jp
mov
mov
repnz
testl
je
and
cwtl
push
mov
jle
cld
mov
or
imul
dec
xor
mov
cmpsb
push
cltd
adc
outsl
mov
pop
inc
fmul
rorl
cld
inc
scas
mov
lea
mov
loopne
jne
cmp
adcb
mov
sub
cmp
dec
push
jno
jns
test
int3
jmp
fstpl
inc
test
mov
inc
sub
adc
cmp
adc
arpl
pop
loopne
push
push
sti
push
int3
les
pop
fs
lock
dec
and
ficomps
cwtl
data16
mov
out
xor
repnz
ss
jnp
mov
leave
pop
push
mov
push
mov
sbb
push
or
fs
and
pop
mov
lret
pop
mov
iret
mov
pop
dec
repnz
test
add
push
inc
hlt
lock
xchg
data16
ljmp
clc
cmp
enter
stc
lods
int3
lea
inc
inc
mov
aad
icebp
cmp
mov
in
and
dec
mov
pop
popa
push
aam
fdivrs
pop
mov
mov
out
pop
rcll
clc
mov
add
cmp
mov
and
dec
data16
nop
sub
jb
ds
and
in
sti
outsl
cmpb
orb
cmp
pop
pop
dec
sahf
or
sti
cwtl
aaa
rcrl
fsubrs
jge
sbb
adc
mov
push
xchg
les
adc
adc
sbb
adc
int3
pop
pusha
pushf
mov
adc
ja
adc
out
jns
push
outsl
jne
inc
sbb
test
mov
shl
ja
nop
adc
mov
je
jg
xchg
int3
cmpl
xor
mov
fcmovne
mov
cs
inc
xchg
and
pop
pop
ss
cli
inc
cmp
xor
and
cwtl
fisttps
das
andl
xor
cmpb
iret
call
ss
cmp
mov
cs
or
arpl
push
add
mov
lds
ror
ss
add
pop
push
enter
and
mov
sub
mov
bnd
rolb
inc
inc
lods
and
xchg
popf
pop
pop
rclb
inc
sbb
mov
adc
adc
inc
pop
mov
sub
pop
sub
inc
nop
test
push
loope
nop
jmp
mov
cmpsb
leave
mov
out
inc
in
faddl
jo
adc
mov
ja
sahf
sbb
mov
cld
mov
clts
and
icebp
adc
out
sbb
sub
bound
mov
sub
jno
cmp
out
xlat
mul
in
xchg
cmpsl
mov
ret
or
aad
jno
mov
pop
lds
mov
ds
xchg
sbb
fisubs
mov
cmp
orl
inc
mov
jg
push
pop
arpl
jle
xchg
inc
cltd
xchg
fimull
mov
loop
dec
lcall
jnp
push
inc
mov
jmp
ss
jnp
add
cmp
pop
fst
jo
jmp
push
add
sub
out
imul
ds
mov
fs
lret
in
ficomps
sahf
jmp
or
rcl
jns
mov
xor
dec
inc
and
je
imul
sbb
add
cmp
das
arpl
fmull
mov
movsl
dec
cmp
sbb
add
mov
xor
inc
or
lcall
cmp
lods
push
push
adc
add
and
pop
js
aas
inc
push
xor
cmp
mov
sub
aaa
gs
lods
mov
sub
xchg
pop
mov
inc
or
sub
in
add
jno
push
std
shl
movsb
les
aaa
or
mov
ss
insb
fcmovne
lods
sub
sbbb
mov
push
cmp
jo
mov
mov
and
arpl
fmuls
jae
cmp
cmpsl
addr16
jno
mull
inc
inc
push
jp
mov
insl
es
outsl
roll
js
imul
std
jbe
push
cld
test
cmp
outsl
hlt
cmp
cwtl
and
adc
or
fisubs
xchg
pop
add
movsl
ss
push
add
inc
lea
loope
or
test
lahf
imul
pusha
xchg
add
add
sbb
mov
xchg
test
lahf
adc
xchg
shll
lret
xchg
outsb
mov
cmp
sub
aaa
jnp
mov
xor
rcr
ret
sbb
shll
call
mov
into
daa
jno
sbb
ja
pop
push
ljmp
shll
sub
inc
mov
mov
pop
call
push
sbb
leave
sbb
test
push
out
cmpsl
dec
cld
lret
xor
hlt
inc
mov
movsb
adc
push
test
cmp
lods
pop
out
lret
ja
test
in
mov
ret
cld
pop
cwtl
jmp
xor
push
cld
fs
pop
pop
daa
xchg
mov
mov
mov
gs
mov
dec
sar
jno
sub
inc
fcmovu
bound
sub
jne
rol
jge
ret
mov
gs
adc
mov
jp
cmp
pop
pop
or
ja
mov
dec
jne
out
jne
iret
cmc
orb
pop
movsb
add
sbb
xor
arpl
int3
das
mov
icebp
xchg
sub
push
std
lcall
aas
xor
out
add
orb
lret
outsl
das
and
xchg
mov
popf
mov
jg
sbb
mov
ja
pop
sub
adc
pop
insl
in
push
and
int
mov
mov
inc
popf
fsubs
jecxz
or
xchg
gs
enter
lea
call
or
out
dec
mov
addr16
dec
cmp
stc
movb
jg
cmc
fwait
lods
mov
inc
cltd
jno
fnsave
jle
pop
sti
into
dec
sub
push
lret
fisttps
mov
out
rclb
mov
mov
pop
adc
fcoms
mov
and
fisttpll
adc
mov
imul
cmp
add
mov
pop
sub
cmp
testl
pushf
xor
jecxz
xchg
aad
or
lret
lahf
ficoml
insb
mov
mov
roll
jl
cmp
loopne
mov
fildll
dec
add
sbb
mov
push
out
idiv
xchg
sbb
xchg
push
aam
mov
xor
rolb
psrad
push
cmp
jnp
lcall
xor
sbb
mov
xchg
decb
sbb
jnp
xorl
call
mov
sub
cwtl
xorl
ret
imul
or
insb
push
jmp
jmp
xor
inc
pop
dec
push
sbb
inc
popa
cmp
mov
repz
cmp
adc
pop
add
in
icebp
scas
loop
mov
jg
jmp
inc
adc
cmpsl
aas
subl
ret
inc
and
adc
pop
or
inc
mov
mov
fcmovu
mov
add
inc
lods
mov
lods
mov
outsb
call
jp
ret
jp
xchg
mov
or
andl
stc
add
sub
mov
cmp
or
inc
cmp
jae
sti
aam
mov
dec
rorl
mov
xchg
inc
jge
icebp
popa
lds
xor
aam
mov
out
scas
aad
aas
je
mov
jecxz
pop
add
jb
fnstcw
imul
int
psadbw
ljmp
rcl
adc
pop
fisubs
out
test
inc
in
mov
sbb
jg
rcrb
inc
mov
in
or
repnz
xchg
mov
cmp
sahf
fucomp
fistpll
in
in
bound
sbb
adc
xchg
roll
adc
icebp
xchg
pusha
xchg
mov
mov
popf
ja
xchg
in
pop
or
and
inc
jge
ret
cmp
arpl
iret
jns
mov
ljmp
scas
cmp
inc
fdecstp
inc
pusha
inc
sub
sahf
popf
or
icebp
xchg
leave
and
push
mov
leave
xor
lock
mov
or
aaa
andb
aad
jne
and
pop
mov
xor
fstpt
jmp
addr16
out
jno
dec
or
pop
lcall
push
push
or
mov
dec
push
jl
pop
insl
or
leave
jno
xchg
push
jae
cmp
or
ja
addr16
ret
insl
int
pop
dec
inc
cmp
push
jge
dec
ljmp
adc
notl
adc
shll
inc
inc
sub
pop
adc
out
xchg
insb
adc
cmp
mov
fdivrp
add
aam
repz
cmp
push
xor
add
jmp
push
ljmp
repnz
mov
sub
pop
pop
jno
push
or
pop
mov
push
pop
mov
lock
and
inc
adc
pushf
and
test
test
cwtl
ljmp
add
gs
jne
hlt
and
mov
int
mov
pop
cmp
test
sub
jge
pop
sub
cmc
jno
das
sbb
xorb
outsl
out
mov
jg
push
stos
jno
mov
add
adc
pop
sbb
mov
imul
xchg
xchg
ret
xor
lret
fdivr
xchg
push
push
jge
int3
sarl
mov
push
outsb
cs
lcall
push
pop
push
push
cwtl
test
mov
sbb
sti
add
js
pop
mov
add
mov
mov
nop
push
sub
mov
iret
pop
or
mov
test
js
push
cmpsl
stos
pushf
push
adc
stos
jecxz
leave
mov
cltd
and
scas
add
jg
pushf
std
and
xchg
das
cmp
idivb
iret
repnz
push
loop
push
or
fsubrp
movl
outsl
sub
iret
xor
paddusw
xchg
xor
sbb
pop
out
fdivr
nop
lret
das
xor
daa
mov
addr16
je
shlb
and
push
inc
mov
aaa
test
xor
push
add
jmp
out
xor
testb
fwait
ja
in
test
push
popa
movsl
or
push
mov
call
les
adc
xchg
jno
test
ljmp
loop
icebp
dec
cs
gs
jmp
mov
jl
popa
stos
or
push
inc
mov
xorb
outsb
push
fs
sbbl
xchg
push
iret
pop
fsubp
jl
push
stc
xchg
sub
or
ljmp
inc
mov
sub
push
rolb
jge
dec
fcompl
mov
mov
addr16
inc
adc
jbe
test
cmpb
int3
jle
or
mov
sub
inc
inc
das
mov
add
jg
hlt
arpl
idivb
jmp
adcl
add
enter
mov
into
stc
dec
push
imul
popf
out
mov
cmp
sahf
cmp
clc
add
jge
adc
arpl
inc
cs
pushf
std
and
es
mov
into
and
lahf
inc
fnsave
cmpsb
adc
iret
test
aas
mov
adc
scas
mov
adc
cmpsb
mov
cli
gs
mov
xchg
pop
test
inc
xchg
lods
pop
push
or
and
mov
xchg
jbe
data16
xor
inc
sbb
mov
cmp
mov
add
xor
push
scas
clc
aad
std
and
out
fcoml
insb
push
leave
lods
add
pop
rol
cmp
shll
cmp
scas
or
inc
push
mov
sbb
ficompl
cmpsl
pop
jg
and
movsb
fsubs
ss
cmp
sub
aaa
rcl
jno
pop
leave
inc
mov
out
jnp
xor
inc
xor
add
sub
mov
mov
cmp
es
mov
mov
lcall
dec
pop
ja
test
enter
notb
pop
and
pop
sbb
scas
pop
fmul
lret
outsl
sub
xor
mov
int
xchg
sbb
cmpsl
jb
out
push
ret
lea
rcr
xchg
jnp
stos
adc
pop
xor
movsl
mov
push
sti
jmp
pop
jbe
adc
dec
or
vaddsd
loop
mov
movsl
cld
mov
xchg
xchg
js
addl
imul
cmp
xor
sbb
pusha
inc
aad
sbb
dec
dec
lcall
dec
fcomi
pop
lods
mov
pop
adcb
daa
lods
aad
jg
xor
fwait
hlt
fildl
mov
addl
pop
fwait
and
push
inc
jmp
xor
ds
pop
push
stos
test
out
bound
lcall
pop
jle
add
js
and
mov
and
gs
aam
loop
fdivl
mov
orl
add
mov
jb
sub
test
dec
in
shr
repz
mov
pop
pop
in
jg
pop
dec
lret
out
fistpl
cmp
test
pop
inc
sub
xchg
cmp
jg
in
sbb
fld
sub
jne
mov
xor
pusha
cli
xor
inc
iret
mov
sbb
pop
scas
xchg
movsb
mov
mov
leave
lcall
out
sahf
xor
sahf
sti
jns
sub
adc
or
xchg
add
dec
rorl
pop
sahf
sbb
pop
mov
push
mov
sti
push
cwtl
push
pop
and
inc
movsb
add
xchg
rorl
or
fildl
mov
stc
dec
mov
and
leave
mov
adc
cli
inc
test
stos
mov
fsubrs
out
mov
movsl
leave
adc
idivl
mov
std
pop
jno
push
leave
dec
pop
xchg
add
sub
push
pop
push
push
in
ljmp
add
pop
inc
imul
fsubrp
xlat
cmp
xlat
lcall
sub
push
adc
xchg
xor
push
test
cmp
adc
pop
push
pop
imull
xor
inc
push
cs
mov
mov
inc
sub
jmp
roll
pop
jmp
lret
arpl
aaa
add
sub
nop
sub
inc
adc
sbb
sbb
xor
jo
mov
dec
hlt
int3
loopne
inc
push
xchg
or
jnp
lea
mov
shl
xchg
mov
xchg
xor
loopne
arpl
mov
xchg
cltd
pusha
es
das
inc
aaa
cmp
gs
jnp
mov
jmp
mov
mov
xor
add
mov
pop
and
add
push
jb
jbe
cmpsl
push
xor
daa
or
out
test
jae
dec
sub
cli
cli
jbe,pn
jne
push
dec
jle
fsubs
sub
mov
mov
inc
mov
mov
ja
mov
cmp
cmpsb
dec
rcr
test
ret
cmpl
xchg
fnstcw
cmpsb
cmp
xor
sbb
imul
aas
sbb
out
int3
jmp
in
cltd
arpl
add
inc
imul
xor
sbb
loope
clc
stc
loop
push
inc
iret
add
es
in
sahf
jnp
insb
cmc
out
adc
daa
js
mov
or
repnz
pusha
sbb
pop
fldpi
and
imul
aam
pop
pop
pop
mov
lret
in
mov
and
push
scas
test
pop
out
jge
jp
xchg
lret
jo
pop
sbb
cwtl
pop
cld
inc
rol
popa
mov
stos
stos
movsb
xor
push
push
mulb
pop
mov
icebp
iret
aam
inc
stos
jecxz
jae
jle
nop
icebp
and
inc
dec
add
jns
test
or
jns
or
enter
fcoms
mov
cmc
js
scas
push
ret
gs
aam
jg
test
pop
push
jae
push
jecxz
push
loopne
mov
mov
cli
jmp
fcmovnb
mov
scas
push
mov
push
cmp
xor
ja
pop
movsl
call
cltd
daa
ss
cmp
inc
inc
clc
jle
adc
leave
xchg
sub
cmp
pop
lret
inc
push
xchg
popf
jno
pop
sub
and
xchg
in
lock
mov
call
inc
out
sub
sub
fcmovnb
or
jb
and
rcrb
mov
jecxz
shll
sbb
xorl
daa
xor
fdivrs
dec
fcmovnu
pop
insb
test
xor
mov
add
push
xchg
popa
or
inc
xchg
push
xchg
xor
and
adc
push
add
in
pop
add
xor
mov
sub
loop
push
push
aam
lahf
sbb
sahf
sbb
adc
ljmp
aaa
adc
jb
or
jae
fldpi
add
or
scas
sarb
nop
pop
data16
push
or
fs
mov
cmpsl
iret
sbb
jle
ja
mov
repz
add
testl
cmp
je
pushf
jbe
loopne
push
div
jns
loope
mov
outsb
ljmp
mov
pusha
mov
adc
jp
dec
lcall
jne
xor
push
cltd
mov
pop
dec
jle
imul
mov
mov
jbe,pt
int
mov
jnp
out
insl
push
cmp
and
pushl
jg
mov
push
out
gs
xor
xchg
and
mov
mov
mov
rorl
dec
sbb
inc
imul
jae
insl
mov
stos
leave
je
fwait
arpl
and
popf
out
lahf
cmpsl
out
out
pop
pop
arpl
cmp
sub
rcl
mov
add
imul
jp
repz
adc
sub
xchg
xor
outsl
dec
dec
sbb
adc
leave
cmc
outsb
stos
xor
cmc
pop
addl
into
dec
movsl
pop
cwtl
enter
ret
das
mov
cmp
andl
xor
mov
add
lret
mov
sbb
lods
test
das
push
push
out
dec
leave
cmp
inc
dec
add
scas
es
dec
mulb
sub
out
outsb
dec
mov
in
hlt
mov
jb
cmpsl
iret
cwtl
xchg
ss
pop
xor
or
inc
mov
je
pop
imull
insb
data16
mov
mulb
out
xchg
adc
pop
or
sahf
cltd
inc
or
push
mov
add
pop
scas
jg
lock
aas
test
js
or
pop
lock
loop
add
stos
dec
and
mov
repnz
dec
push
fdivs
cli
jns
adc
pop
adc
inc
into
pop
pop
cltd
in
sub
pop
mov
icebp
in
xchg
shrb
cld
sub
cli
cmp
shrl
popf
and
mov
aad
dec
fld
push
pop
cli
fbld
dec
push
mov
fdivrs
and
xchg
adc
dec
insl
ret
or
lds
adc
fdivrs
or
popa
fsub
adc
lock
ret
aaa
sbb
clc
sahf
xor
inc
ja
mov
sub
push
mov
jnp
ja
rorl
jnp
bound
xchg
mov
mov
repnz
inc
out
inc
inc
fcoms
out
push
ss
xor
mov
aas
add
adc
daa
cmp
hlt
add
leave
or
dec
and
cwtl
ljmp
mov
testb
fstps
in
mov
xchg
xor
clc
out
std
xchg
test
cld
sub
out
aas
push
push
jecxz
sbb
push
and
sbb
push
push
cmp
testl
sub
inc
daa
stos
xorb
aad
out
adc
adc
pushf
aas
add
jmp
xchg
std
leave
sub
dec
push
lcall
lahf
lret
test
sub
test
imul
mov
lods
loopne
xchg
bound
shll
js
jnp
push
pop
call
in
jmp
les
lock
cmpsl
pop
mov
push
jmp
movsl
xor
pusha
mov
stos
cltd
dec
sbb
or
xor
shl
mov
push
xchg
cltd
sub
xchg
fdiv
cmpsl
addb
int3
cmp
mov
mov
pop
or
mov
cwtl
cmp
xchg
cmp
mov
pop
jnp
mov
add
mov
test
jp
dec
jno
inc
inc
cs
cmpsl
hlt
ret
cmp
pop
dec
adc
sub
sub
imul
sbb
cltd
push
lcall
sbb
inc
mov
mov
xorl
inc
test
and
les
xor
jns
adc
sub
lods
nop
xchg
cmp
lret
sbb
or
cs
jg
outsb
xor
cld
les
mov
das
test
lahf
fwait
pushl
arpl
insb
or
int3
inc
mov
jne
and
cmp
stos
cmp
pop
sub
jg
lods
xor
notb
jnp
mov
in
cltd
or
sub
pop
psubd
arpl
test
jl
cmpsb
or
pop
in
cmp
sub
push
stos
pop
sahf
idivb
enter
cmp
cmc
inc
lea
fdivr
add
and
pop
mov
mov
ds
mov
or
lret
out
iret
es
out
add
mov
test
add
loope
sub
inc
arpl
xchg
inc
sbb
xlat
dec
popf
add
test
in
ljmp
or
dec
cltd
pusha
pop
js
jge
pop
outsl
push
pusha
outsl
xchg
outsb
mov
loope
push
outsl
mov
dec
pushf
lcall
popf
add
xor
cmc
aaa
testb
mov
iret
or
xchg
add
out
scas
and
in
push
pushf
sbb
pop
sahf
add
inc
ret
sub
mov
inc
pop
push
ljmp
add
enter
xchg
into
mov
cli
mov
mov
pop
ds
cmp
mov
jmp
cmc
bound
jmp
stc
lds
cmp
mov
sbb
inc
push
cmpsl
fistpll
icebp
ljmp
dec
shll
dec
push
loope
add
cld
pop
inc
dec
push
mov
inc
in
loopne
lcall
out
fisttpll
inc
sub
pop
mov
sbb
xlat
jno
lret
shll
cwtl
hlt
cmp
imul
setno
xchg
add
js
jle
cli
sbb
js
stos
jo
fnstcw
adc
or
sbb
mov
int
cmpsb
lcall
mov
out
jno
cmp
lock
push
fcoml
test
inc
lods
pop
les
mov
cmp
xchg
in
ds
rol
lret
cmp
inc
mov
sbb
mov
int3
mov
xchg
push
sbb
jo
xchg
mov
insl
inc
mov
lds
jne
cmp
nop
call
xchg
xchg
pop
vpcmpeqw
mov
inc
dec
ljmp
or
sbb
inc
or
inc
sub
pop
xchg
mov
pushf
dec
mov
dec
pop
ds
mov
xlat
insl
sub
addl
inc
pop
lret
add
sub
xchg
je
xor
sbb
lods
sahf
xor
mov
or
mov
stos
call
add
push
sub
adc
popf
push
mov
sub
out
fcompl
push
adc
pop
cmp
mov
shl
xor
ds
or
es
mov
push
in
sub
out
cli
jmp
fld
sbb
pop
mov
sub
jae
mov
push
loopne
call
icebp
adc
sub
or
or
scas
ljmp
notl
fidivrs
outsb
leave
and
mov
push
sub
jmp
sbb
jns
pop
ror
and
push
test
xchg
adc
cmpl
imul
inc
popf
aas
xor
popf
popa
aad
mov
cli
xchg
jg
daa
clc
cli
mov
lahf
dec
loopne
xchg
push
mov
ret
push
mov
inc
add
loope
pop
mov
pusha
or
inc
enter
mov
push
fidivs
lock
daa
jo
std
lock
mov
cmp
and
in
in
add
lret
mov
or
pop
mov
mov
data16
mov
ljmp
jl
xchg
inc
hlt
xchg
fisubl
mov
inc
cmp
mov
sbb
pop
push
fidivrs
jns
xchg
popf
jae
jbe
and
and
fildll
shl
call
jne
fwait
es
into
aas
mov
push
nop
bound
enter
jle
loop
pop
imull
test
jmp
dec
jae
jp
adc
sbbb
xchg
inc
out
cmc
mov
sub
mov
insl
test
ja
ja
xchg
or
cltd
mov
pop
pusha
ss
pop
int
cmp
pop
mov
shll
xorb
xor
mov
loopne
pop
dec
mov
aad
pop
icebp
daa
std
sbbb
arpl
mov
inc
int
enter
aad
inc
inc
repnz
xchg
xor
pop
jl
jmp
dec
mov
enter
inc
fadds
mov
sbb
jo
mov
imul
or
fmuls
ds
test
stos
pop
sarb
stos
push
adc
cwtl
add
dec
popa
bound
fmul
gs
sub
push
arpl
or
sub
pop
adc
scas
mov
pop
or
adc
fcmovbe
push
and
mov
sub
xor
outsb
mov
repnz
testb
addr16
jno
xor
movsb
sub
xchg
aad
push
std
mov
lea
sub
xorb
movsl
shll
fstl
jno
jae
loopne
je,pt
inc
mov
add
adc
xacquire
fistl
adc
movsb
jb
and
pop
push
mov
and
cwtl
sarl
aam
les
jne
push
push
in
movsb
repz
mov
jb
mov
push
pop
loope
int
mov
or
lea
sub
incl
xchg
stos
mov
fwait
lods
aas
inc
cltd
cmp
and
jb
daa
jl
xchg
sarl
lods
mov
das
or
pop
cwtl
cmpsb
adc
push
push
mov
push
clc
pop
adc
int
jnp
inc
jno
lods
fcompl
or
in
out
xor
jno
adc
movsb
dec
mov
lea
in
or
lret
scas
xchg
pop
xchg
mov
push
testl
jb
pop
outsb
mov
push
cld
cs
sub
or
mov
xchg
pop
rorb
mov
push
les
clc
push
fmull
pop
mulb
fstl
fwait
push
xchg
iret
dec
and
pushf
dec
mov
mov
out
mov
adc
push
ss
add
out
fisubrs
lods
add
test
push
mov
sub
inc
sbb
ljmp
iret
test
stos
push
mov
adc
add
push
enter
addr16
arpl
shll
sbb
sub
cltd
mov
lcall
loopne
jne
aad
push
mov
xor
push
ret
iret
add
dec
push
lods
inc
jae
and
aas
mov
jno
cmp
sbb
sub
mov
sti
in
shll
cmp
lcall
das
push
add
cmp
push
jmp
push
sti
push
daa
sbb
cmp
in
aad
movsb
dec
pusha
aad
loop
xchg
aad
dec
and
insl
inc
jg
xchg
jge
and
int
cmp
push
pop
mov
sahf
mov
imul
les
lods
xchg
imul
or
pop
mov
into
xor
pop
mov
jl
or
mov
mov
pop
int
mov
cmp
pop
add
ret
mov
sbbl
or
popa
mov
lret
insl
sbb
out
push
inc
es
push
cltd
mov
dec
pop
shlb
test
and
jmp
fdivs
inc
pop
les
jno
jbe
xchg
sbb
fdivl
and
pop
cmp
push
shlb
xchg
cld
std
push
push
aas
mov
mov
imul
cmpsb
push
mov
adc
sbb
fldenv
ss
mov
mov
iret
aas
test
inc
popa
or
out
test
dec
aaa
faddl
inc
aas
xorb
sub
fcompl
sub
add
mov
int
mov
mov
xor
sbb
lea
mov
jbe
cmp
push
fmuls
xchg
xorb
mov
jge
and
sub
or
or
inc
add
pop
mov
dec
pop
inc
ror
data16
and
in
lahf
dec
in
mov
ljmp
add
fldl
stos
scas
lds
jle
lds
or
cmp
pop
fistps
push
pop
outsb
sahf
dec
sub
mov
mov
inc
push
and
insl
popf
fdivl
fmul
gs
and
jle
movsl
std
loope
lret
dec
in
mov
mov
add
push
push
push
push
outsb
or
inc
fcmovnu
or
inc
ss
mov
adc
insl
es
addr16
ret
lret
cs
out
hlt
stos
arpl
fdivrs
xchg
pop
mov
sbb
fstp
rorb
mov
fs
pop
ret
sbb
negb
push
mov
movsl
or
cmpsl
pop
mov
das
sbb
mov
add
scas
jns
mov
fadd
aad
push
ljmp
mov
hlt
push
in
dec
sub
cmp
test
push
jp
outsl
or
fldl
inc
decb
dec
bound
and
mov
test
jge
mov
mov
adc
shrb
sahf
daa
push
jecxz
sbbb
jge
mov
mov
cmp
or
js
fbld
inc
xchg
mov
adc
icebp
inc
mov
loope
inc
push
shll
push
cwtl
xor
in
stos
aam
xchg
mov
in
in
fwait
lock
ss
fcmovne
cli
push
mov
popl
in
int3
adc
notb
je
xor
adc
add
sahf
inc
bound
and
push
sarb
sbb
push
xchg
adc
sub
cmp
fcoms
push
insb
jns
inc
std
add
loopne
dec
cmp
insb
in
push
mov
std
pop
pop
sub
scas
xchg
push
sub
out
ljmp
sbb
adc
xchg
xchg
inc
fst
mov
fisubl
jle
adc
sbb
aam
inc
gs
aad
loop
iret
dec
es
mov
cwtl
test
fiadds
fildl
jle
aaa
mov
pop
in
push
or
out
sub
add
jae
iret
cs
or
repnz
pop
cwtl
sub
or
shr
cmp
je
imul
js
xlat
lods
stos
pusha
pop
and
fildll
insl
icebp
into
mov
pop
cmp
and
and
push
cmpsl
js
gs
leave
sbb
cmc
outsb
add
adc
push
cmp
mov
call
xor
cmpsb
aad
mov
inc
popf
rcrb
stos
lret
pushf
gs
leave
movsb
inc
or
test
sub
imul
adc
cmp
push
aas
mov
xor
pop
test
jmp
or
mov
movsb
js
in
mov
scas
lock
push
int3
ds
shll
push
in
scas
sub
cld
mov
mov
mov
dec
shll
fs
in
inc
out
in
adc
or
jo
push
add
fwait
out
shlb
inc
push
aas
jecxz
inc
loope
mov
mov
add
cmp
lds
sub
mov
fistps
and
rep
xchg
sub
mov
adc
stc
rol
cli
out
mov
imul
and
xor
push
cmp
pop
sbb
push
out
sub
cmc
jbe
lret
xchg
cmpsl
aam
mov
inc
rcr
out
lcall
add
inc
scas
push
mov
and
jecxz
sub
mov
inc
dec
cmp
scas
sub
jnp
cmp
mov
cld
xchg
xchg
pop
mov
lret
out
in
or
subb
jns
cwtl
dec
in
push
push
or
jge
xor
xor
sub
je
mov
sar
shlb
xchg
push
arpl
stos
sbb
dec
ret
sbb
mov
mov
dec
ljmp
lea
jno
fistpll
clc
jecxz
pop
mov
or
lcall
das
add
xor
add
sahf
push
pop
mov
sub
mov
add
mov
lret
dec
mov
dec
idivb
cld
mov
add
sub
xchg
pop
or
sub
test
movb
rol
rcll
call
sub
sbb
pop
clc
imul
adc
jle
ror
mov
xor
xor
jo
fildll
adc
inc
xchg
dec
je
fucom
ss
push
in
mov
dec
xor
jp
add
sti
leave
loop
lret
test
add
mov
cmp
in
subb
aad
push
les
or
insb
ror
pop
cmp
push
rcrb
mov
mov
std
out
lret
out
shlb
push
cld
push
sbbl
dec
xchg
inc
jb
push
cmc
in
loop
mov
test
inc
repnz
and
mov
stos
pop
mov
into
ja
nop
jg
ss
scas
lahf
jo
sub
sbb
sar
das
in
push
lea
sahf
and
pop
clc
mov
push
inc
pop
bound
xlat
jp
out
pusha
or
pop
push
xor
je
xor
stos
shll
inc
dec
imull
push
repz
lods
pop
mov
adc
lods
push
nop
xor
mov
mov
and
or
add
jp
cmpsl
sbb
jg
pop
xlat
push
lea
stc
xor
xor
jp
lahf
push
xchg
adc
pushf
and
mov
dec
scas
icebp
aas
sarl
cmpsl
pop
repz
xor
add
xchg
roll
mov
push
sub
inc
mov
jmp
xchg
sbb
push
xchg
insl
aas
xor
xchg
dec
dec
mov
jge
jbe
in
push
jae
dec
int
add
mov
cmp
fadds
loop
mov
stos
out
or
ja
stos
shl
adc
dec
and
scas
icebp
pop
popf
adc
mov
test
repz
jl
mov
push
inc
pop
mov
sbb
loopne
inc
ss
dec
icebp
push
int
mov
in
ljmp
sub
aam
ja
xor
mov
mov
pop
cltd
jb
sarb
aad
mov
push
inc
stos
push
lret
lds
scas
and
ss
pop
fisubs
jmp
fstl
and
push
int3
ret
insl
shrl
sub
jl
mov
cmc
inc
jbe
mov
push
sub
out
xor
sbbl
test
aam
es
push
lods
mov
adc
pop
push
xor
test
or
cmpsb
cwtl
std
pop
xor
scas
add
cli
and
ljmp
mov
out
fwait
and
pushf
and
stc
stc
clc
imul
inc
cmp
scas
aaa
out
stc
or
ret
jmp
ljmp
shr
lods
fiadds
xchg
inc
les
and
fwait
and
inc
imul
xchg
push
int3
int3
test
mov
add
imul
dec
inc
arpl
mov
fsubrs
inc
inc
es
mov
or
addr16
or
jecxz
aam
dec
cs
pusha
sbb
cmp
mov
add
mov
divb
pusha
dec
scas
flds
lods
push
fwait
adc
movsl
add
clc
push
mov
add
aad
popf
add
push
loope
sbb
fs
push
lock
mov
ss
mov
data16
jmp
add
stos
imul
xor
pop
pop
jp
add
addl
jmp
mov
ljmp
pop
push
mov
push
ds
mov
jmp
mov
adc
mov
stc
sbb
in
pop
in
mov
pusha
jl
repnz
cs
and
sbb
sbb
mov
or
cmc
std
outsl
outsl
divl
ss
scas
outsb
lods
aaa
mov
popf
mov
sahf
cmp
ja
push
in
lcall
push
mov
ss
nop
pop
fsubrl
nop
push
ss
dec
shll
vmovq
gs
or
es
stc
scas
sub
fs
adc
and
pop
fsubrl
pop
and
push
or
rcl
lret
movsb
fldt
sbb
pop
inc
pop
or
fidivrs
pop
adc
dec
std
push
push
mov
push
int3
lds
test
xchg
fnsave
bound
insb
adcb
les
leave
xchg
imul
pop
out
fcmovnb
xchg
lea
push
rep
ljmp
insl
leave
int
ss
mov
jmp
test
pop
in
ret
ret
push
mov
clc
mov
mov
gs
scas
daa
fucomi
pusha
fidivs
notl
flds
sbb
cmp
jns
hlt
inc
in
mov
test
cs
stos
jecxz
or
mov
fnstsw
movb
std
leave
xchg
adc
pop
cmp
or
repz
inc
pop
xchg
loope
pusha
repz
pop
add
and
icebp
scas
add
leave
lock
gs
sti
mov
cmp
pusha
repnz
cmc
in
stos
mov
mov
dec
pop
dec
sti
ds
pusha
dec
pop
movsl
popa
rclb
push
fdivrl
add
dec
sbb
jmp
add
filds
xchg
js
in
mov
int3
ret
jl
fisubl
mov
cmp
mov
enter
mov
dec
test
aas
mov
lods
bound
sbb
aam
adc
cld
in
mov
mov
je
jne
mov
jl
test
mov
aaa
mov
pop
insl
dec
xchg
loop
xor
xor
add
sub
test
sti
leave
dec
lret
daa
in
jne
push
mov
mov
icebp
mov
lcall
xor
lcall
or
jecxz
jmp
inc
ret
div
call
lods
out
lret
ja
insl
data16
pop
int
fisubl
dec
andl
fs
rcl
js
push
mov
lahf
and
cmpsl
pop
cmp
cld
mov
daa
bound
in
shr
pop
nop
cmpsl
test
xor
jle
xchg
pushf
or
add
leave
ret
add
xor
out
add
mov
jb
push
das
dec
ret
hlt
cmpb
pop
out
push
inc
call
jle
ja
push
add
push
jbe
aas
stos
sbb
inc
push
and
or
mov
mov
mov
lods
and
fbld
and
sbb
jp
out
std
data16
aad
xor
das
pop
mov
stos
cmp
push
jno
in
xor
iret
mov
or
pop
lock
cmpsl
jo
or
mov
in
mov
xor
add
test
cwtl
daa
stos
clc
arpl
or
sysenter
push
addb
cmp
push
mov
inc
ja
push
and
push
orb
cmpsl
jns
aaa
mov
mov
ret
inc
mov
dec
mov
dec
mov
mov
shlb
mov
fdivrl
fildll
incl
push
push
cmp
enter
ss
idivl
popf
mov
lods
jle
mov
inc
icebp
arpl
movsl
mov
push
dec
aam
inc
scas
pop
pop
mov
jns
adc
lods
out
loope
cmp
imul
push
jno
xor
or
jo
cmp
sbb
pop
jb
xor
or
scas
in
mov
mov
jp
pop
out
test
pop
cli
sbb
inc
xor
sub
out
xchg
xchg
adc
cld
imul
aad
and
scas
and
mov
cltd
das
jl
jle
hlt
loop
mov
jge
xor
call
repz
jns
in
or
lds
sbb
imull
pop
dec
shlb
pop
std
dec
pop
int3
jno
arpl
rcrb
push
negl
pusha
jg
sub
xchg
pusha
lods
mov
dec
notb
insb
dec
ja
in
push
fldt
test
shrl
mov
sub
mov
iret
inc
cmp
jnp
jecxz
pop
or
mov
adcb
ret
dec
dec
jge
xchg
imul
movsb
cmpsb
fadds
test
jg
int
mov
cmp
sub
push
pop
mov
add
pop
jbe
insl
notb
shrl
mov
dec
stos
adc
imul
fisttpl
loopne
ret
add
fstpl
enter
push
xchg
xlat
in
jl
sub
mov
lds
les
pop
enter
sbb
sbb
aas
or
vphadddq
cmpsb
cli
sbb
inc
fdiv
adc
in
notb
jle
mov
data16
subb
call
xor
inc
mov
int3
jno
fcomp
fisttpll
jl
mov
xchg
daa
iret
push
xor
outsl
jecxz
push
mov
lea
shll
push
inc
mov
mov
test
ficoml
inc
push
out
gs
mov
int3
pop
mov
cltd
xor
adc
mov
pop
or
pop
imull
loopne
inc
or
scas
dec
sbb
xchg
out
pushf
popa
lcall
mov
mov
scas
mov
inc
or
or
lret
dec
outsb
mov
push
mov
popa
mov
or
xor
inc
addr16
xorb
xchg
and
mulb
adc
xor
mov
in
dec
sbb
andb
xchg
les
lcall
leave
mov
xor
aam
daa
dec
jbe
xorb
fucom
xor
mov
cmpsb
movsb
pop
mov
into
iret
sbb
enter
cmp
mov
loop
imul
fcompl
in
dec
enter
stos
movsb
pop
mov
and
dec
mov
mov
xor
jnp
jb
inc
cmp
adc
add
pusha
mov
cmp
and
lods
push
cld
pop
inc
jg
xor
inc
add
mov
push
call
jmp
cmc
push
jo
cld
xchg
push
xchg
out
cmp
test
jp
pop
andl
movsb
xchg
sub
cld
mov
xchg
test
nop
add
cltd
fs
sbb
pusha
cli
mov
push
out
add
jge
std
daa
mov
es
adc
cmp
sbb
adc
lcall
xchg
lea
mov
inc
mov
call
fstl
dec
cmpsb
xchg
dec
jo
add
and
bound
adc
and
xor
in
mov
pop
inc
or
es
push
or
dec
xlat
sarl
movsb
fdivl
push
and
inc
mov
int
in
inc
out
stos
inc
mov
xchg
jnp
jbe
lea
mov
out
sub
fwait
mov
add
dec
add
push
dec
sub
sub
cli
fistpl
xchg
decb
push
inc
imul
in
rol
lcall
fcmovne
shrb
outsl
shll
push
jo
mov
and
nop
pop
mov
cld
jns
pop
sub
sub
test
add
pop
cmp
test
popf
stos
sarb
sbb
add
cmp
adc
inc
sub
stc
test
lret
xchg
inc
jae
pop
mov
test
xor
or
jns
mov
pop
fildl
sahf
int
ror
mov
mov
mov
add
adc
enter
and
fimuls
xchg
vpsllw
nop
into
cltd
cmp
adc
ret
push
stos
aas
pop
adc
std
sarl
pop
cmp
add
arpl
pop
dec
lea
imul
mulb
jno
cmpsl
and
loop
aas
js
sti
ljmp
scas
inc
pop
xchg
call
out
push
scas
push
ror
inc
pop
mov
mov
popa
pop
fmull
icebp
ret
mov
cmp
repnz
or
xor
ja
jg
add
sbb
mov
movsl
sahf
ds
and
mov
ja
add
xor
adc
xor
inc
jge
aad
imul
or
or
lds
dec
loopne
inc
xor
mov
mov
adc
jnp
das
ret
and
adc
int
xor
into
je
pop
adc
inc
sub
loop
xchg
ljmp
stos
xchg
xchg
bnd
or
loop
inc
lds
icebp
loopne
adcb
jecxz
push
mov
aam
or
xor
arpl
add
and
pop
mov
call
jle
xor
lahf
push
out
shrd
push
jg
push
mov
fldenv
ss
loope
xchg
jne
dec
lods
gs
lea
adc
andl
jb
aam
cwtl
loope
sub
gs
add
push
jns
mov
mov
push
push
cmp
jle,pt
int3
lods
pushf
leave
mov
fidivs
xor
cmp
pop
je
mov
test
idivl
das
push
std
sub
inc
sbb
jno
xchg
pop
sub
xlat
fildl
ret
jg
xchg
scas
fbld
ljmp
test
pop
fadd
scas
xchg
xchg
sbb
cmc
sub
stos
cli
enter
in
jecxz
xor
sbb
rdtsc
adcl
iret
pop
mov
sbb
add
shr
outsl
sbb
mov
ficomps
in
add
adc
sub
xor
cwtl
fwait
stos
xor
inc
jb
hlt
bound
mov
push
push
inc
xor
pop
add
fs
ja
mov
inc
cmp
cs
push
lods
pop
cmp
roll
icebp
decl
movl
add
aad
pop
sub
dec
test
mov
mov
mov
mov
je
sub
pop
mov
pop
sbbb
iret
pop
jnp
lahf
mov
jb
daa
xchg
pop
sub
or
clc
sarb
addb
push
dec
addl
aam
cld
mov
cwtl
mov
mov
xlat
call
ret
out
jb
inc
lret
mov
repz
jmp
adc
lods
xor
adc
in
cld
pusha
cmp
mov
std
in
fwait
and
inc
fisubs
and
int3
dec
push
ljmp
jb
das
mov
adc
popa
popa
or
and
vcvtsd2si
sbb
push
xchg
push
icebp
sbb
or
or
insl
jnp
inc
repz
scas
std
test
mov
xchg
xchg
mov
imull
jmp
mov
aas
sub
cli
mov
inc
out
clc
cltd
xor
mov
push
jnp
testb
dec
cmp
add
lret
pop
and
bound
add
subb
dec
jg
cli
push
cli
or
lods
mov
dec
dec
jecxz
and
or
shrl
push
insb
leave
lcall
outsb
mov
cld
xor
outsb
push
dec
ss
push
mov
das
or
movsl
fldl
outsb
sbb
mov
and
pushf
adc
push
movsb
loope
out
cmp
cmp
fmul
add
ret
xor
lds
stos
mov
lods
lahf
mov
sub
movsl
hlt
fnstcw
rcrl
fcoms
aas
or
add
jmp
sahf
test
and
adc
cmp
mov
xchg
pop
inc
rclb
mov
or
add
daa
dec
in
jne
repnz
push
cmc
in
cltd
sti
mov
call
and
xor
xchg
scas
insb
push
lds
sub
dec
cltd
je
fmuls
insl
cmc
push
data16
xchg
call
test
mov
mov
cmp
sub
aas
pop
enter
stos
repnz
jns
shlb
push
push
jp
insl
jg
jne
mov
das
push
out
dec
loopne
pop
pop
cmpsb
cmpsb
inc
cwtl
lds
fnstenv
mov
ds
test
cwtl
test
pushf
mov
scas
and
scas
push
sahf
ss
call
outsb
sahf
mov
in
dec
push
test
mov
les
outsb
cmp
sbb
repz
mov
shlb
xchg
or
push
xor
scas
mov
in
mov
cmpb
add
pop
into
push
pop
cld
in
push
mov
mov
shrl
add
je
jg
sarb
int
aad
inc
ja
cmc
xchg
popf
nop
mov
pop
pushf
adc
cld
adc
cmp
sbb
adc
push
push
jp
popa
push
das
scas
sti
dec
outsb
in
out
mov
fs
xor
sbb
mov
out
jmp
repz
mov
or
adc
lahf
mov
and
sbb
sti
mov
mov
jp
cmpsl
jno
fs
or
cmp
pop
hlt
or
mov
push
sub
mov
xchg
into
mov
loop
fmul
mov
jb
xchg
sahf
and
mov
jle
stos
sub
mulb
scas
mov
pop
sub
add
insl
mov
pop
sub
out
lret
maxps
dec
mull
push
inc
dec
push
shll
test
xor
cmp
das
cmp
mov
fimull
ror
fcmovnb
fistl
leave
ss
cwtl
std
in
ds
lcall
out
popa
aaa
in
or
adc
ror
stos
sbb
and
mov
imul
mov
xchg
pop
add
es
jl
adc
jne
cwtl
mov
loopne
pushf
push
lods
fwait
push
in
adc
xchg
mov
adc
add
sub
jmp
xlat
cli
ret
mov
sbb
sub
push
test
sub
sub
mov
leave
dec
loopne
and
dec
and
cmc
adc
push
sbb
out
jae
mov
fprem1
vpcmpeqd
popf
inc
push
pop
mov
mov
push
lods
adc
jecxz
mov
test
xor
inc
mov
ds
iret
std
decb
stos
pop
das
icebp
push
mov
ja
jp
mov
sub
aas
orl
mov
jae
sub
add
or
repnz
aam
in
gs
mov
sbb
out
aad
pop
dec
dec
push
rcr
inc
mov
out
xor
mov
sbb
pop
iret
sti
xor
jb
ljmp
mov
insl
shl
jne
jne
js
stos
mov
addr16
aam
cmp
and
cmp
arpl
mov
dec
xchg
xchg
mov
dec
jbe
mov
push
shll
cmp
jmp
xchg
cmp
adc
outsb
movsl
cwtl
fwait
jo
inc
inc
mov
or
nop
mov
leave
pop
cmpsb
daa
movsb
or
sub
lods
adc
pop
mov
ljmp
inc
push
fwait
aam
loopne
xor
incb
sbb
pop
mov
bound
cmp
notb
incl
rcll
pop
or
popf
ss
xor
cmpsl
or
sbb
das
stc
mov
std
jge
in
daa
and
jb
repz
rcll
nop
push
sti
or
or
mov
andl
or
push
xlat
fs
jecxz
push
push
mov
jo
in
mov
fdivrl
push
sbb
pop
stos
test
xchg
pop
aaa
sbb
jp
and
dec
and
mov
mov
hlt
stc
cld
mov
mov
insl
push
aas
mov
sub
cs
mov
stc
aaa
ds
les
xor
push
fstpt
nop
aam
mov
jno
fadds
out
pop
pop
es
cmp
addb
jne
js
les
jb
mov
aas
fildl
test
rorb
adc
inc
fcmovnb
pop
pop
and
and
xchg
sbbl
addr16
mov
push
enter
add
mov
fstpl
lret
xor
xchg
out
sahf
dec
in
sub
adc
sbb
ror
pop
pop
inc
insb
icebp
jne
inc
add
xor
out
xchg
mov
test
xchg
cmc
imul
sbbb
sub
aaa
pop
xor
mov
xlat
push
jmp
jbe
push
inc
mov
ss
cmp
jp
cmp
mov
xchg
pop
inc
test
scas
insl
mov
ret
sub
xchg
imul
ds
mov
push
mov
lea
clc
xor
add
ret
outsb
iret
popa
inc
add
pop
ficoml
lea
sbbl
sbb
sub
cwtl
cmp
push
sub
mov
dec
repnz
xor
push
mov
mov
xchg
out
push
loopne
hlt
lock
pop
xchg
imul
dec
add
pop
pop
lret
push
scas
jl
sub
xchg
mov
idiv
dec
adc
fmull
test
dec
sub
mov
jns
aas
icebp
push
xor
call
jne
mov
cmpsl
jnp
ss
dec
aas
xor
mov
sub
das
push
dec
loop
and
cli
fwait
inc
pop
dec
and
out
mov
xchg
push
xchg
ret
lret
or
cmp
xor
inc
outsl
stc
mov
cmpsl
and
outsb
and
push
sub
push
lods
adc
xor
notb
mov
dec
mov
pop
inc
in
popa
aam
subl
les
int
push
jl
test
xchg
push
xlat
adc
dec
bound
and
push
leave
test
repz
lcall
dec
out
iret
jl
inc
movsl
dec
shll
in
rcll
mov
outsb
xor
pop
inc
test
sub
sub
gs
inc
out
or
add
insb
xchg
sub
push
cmp
cmp
inc
jne
xor
loop
incb
mov
call
jmp
adc
cmp
mov
gs
sbb
mov
sahf
push
add
push
fwait
xchg
repnz
xchg
jecxz
rorb
call
mov
pop
rcl
int
clc
mov
pop
es
lret
lcall
lods
pop
shll
ds
cmp
xchg
jo
repnz
idivb
test
sub
mov
in
cmc
loop
mov
xchg
loopne
mov
jae
xchg
lods
or
add
jbe
dec
aaa
imul
int
lahf
das
jo
adc
xorb
inc
aad
pop
jbe
ffreep
divl
mov
xor
mov
ret
add
dec
aas
imul
icebp
cmp
fistpl
fisubl
in
sbb
mov
dec
jns
dec
push
lock
and
fs
mov
and
loope
mov
aas
mov
push
push
cmp
lahf
in
inc
add
psubd
pop
push
jle
fs
or
sti
mov
out
movsb
lret
mov
loopne
sarl
push
cmpsl
jb
repz
out
loopne
push
inc
fldcw
rsm
and
xor
ljmp
into
mov
fiadds
inc
out
jecxz
adc
mov
jbe
xchg
call
mov
jle
sbb
xchg
jge
shl
cmp
pusha
jbe
sub
stos
pop
rcrl
or
cwtl
ror
xchg
xchg
inc
adc
mov
repz
sbb
cmp
loopne,pn
movsb
in
lret
xchg
xchg
lock
xor
mov
in
xchg
gs
mov
mov
test
int3
cmp
nop
xchg
lock
lods
adc
mov
clc
jno
fistpll
jne
jb
enter
pop
scas
mov
inc
fidivrl
or
sub
mov
mov
scas
lcall
fsubrl
inc
stos
dec
adc
repnz
xor
repnz
out
pop
scas
jge
mov
mov
movsl
idiv
rcr
out
cmp
cmpsb
xchg
inc
jns
jecxz
setle
pop
pop
stos
loope
sub
pop
gs
mulb
mov
subb
shrb
jg
sti
nop
ror
jnp
test
mov
aas
leave
fidivs
push
out
push
or
cmp
jg
test
sbb
jg
js
decl
add
hlt
popf
or
movsb
inc
jbe
sub
or
push
pop
xchg
dec
adc
jg
je
fsubl
xchg
dec
fs
adc
int
push
enter
cmp
ret
sub
rorb
pop
push
mov
out
outsl
pop
outsl
xchg
roll
jns
push
inc
fld
push
sahf
into
mov
cld
and
add
pop
sbb
pop
pop
sub
ljmp
scas
jne
xchg
push
ja
cltd
sub
mov
xchg
insb
lcall
jbe
cs
cmpsl
mov
pop
and
test
jle
xchg
mov
jnp
cmpsb
jge
mov
cltd
dec
cmp
outsb
in
sub
test
push
ljmp
lea
scas
mov
push
icebp
and
add
imul
aaa
pop
sbb
sub
popf
mov
jg
fs
ljmp
jo
iret
pop
mov
xor
mov
sbb
test
divb
jae
fstpl
arpl
mov
rcrb
xor
inc
jle
inc
fistps
movsl
jmp
out
jmp
jae
pop
add
fdivrp
jnp
stos
fildll
push
aad
enter
add
sub
xor
in
xchg
mov
mov
fwait
cli
xlat
push
sbb
dec
daa
gs
jmp
scas
ret
mov
rcl
and
inc
xor
fdivr
incb
ret
pop
pop
test
nop
inc
mov
hlt
cmp
xchg
sub
lret
pop
mov
scas
shlb
cli
or
lods
in
ljmp
lcall
roll
icebp
subb
in
lods
lret
jae
fistps
sub
sub
xchg
cmp
mov
push
xchg
test
sbb
sbb
add
push
sbb
jp
jo
pop
pop
dec
jbe
fistl
sbb
xchg
in
dec
adcb
testl
lahf
mov
daa
xchg
push
movsl
and
cmp
cmpsb
jp
mov
call
mov
push
es
fcomps
pop
inc
cwtl
sbb
sub
fnsave
in
rorb
xor
mov
and
xchg
mov
mov
adc
negb
fisttps
movsl
xchg
push
andb
pop
mov
xlat
and
repz
addl
cmp
dec
andb
rol
icebp
pop
popa
pusha
test
out
aam
imul
insl
std
aaa
jbe
icebp
les
sub
jge
xor
aad
shrb
shlb
imul
aam
frstor
inc
push
mov
icebp
sub
pop
inc
xchg
sar
or
jl
movlps
lret
jmp
daa
ja,pn
fildl
mov
adc
icebp
cmpsb
or
sub
dec
cmp
sub
and
ficoml
outsb
notb
jns
enter
sbb
outsl
cmp
movsl
push
cmp
mov
roll
lock
orb
int3
enter
cmpsb
fdivrs
pop
jnp
outsb
add
xor
jo
push
lock
hlt
mov
adc
stos
enter
cmp
cmp
addr16
mov
popf
in
test
sti
push
pop
enter
enter
scas
pop
scas
pop
mov
flds
cwtl
das
inc
sbb
push
push
pop
sub
mov
mov
enter
shld
ret
push
ret
in
mov
mov
dec
addr16
cmp
cmp
movsb
and
or
mov
mov
data16
rcrb
in
mov
imul
jle
fadds
fcmovbe
test
inc
sbb
fldl
das
shll
adc
scas
xor
jecxz,pn
mov
test
push
mov
push
or
and
or
adc
mov
sbb
lcall
inc
es
jae
pop
inc
shlb
or
aad
jns
jae
fsub
dec
and
mov
pop
mov
jno
ljmp
xchg
scas
lahf
sbb
sti
sbb
pop
stos
adc
cwtl
movsb
cwtl
outsb
jnp
shll
out
xor
push
and
push
cmp
xchg
or
push
jecxz
popw
aaa
add
dec
repz
lods
scas
sbbl
dec
fwait
jecxz
dec
xchg
adc
pop
add
dec
sar
lods
repnz
call
xchg
inc
adc
mov
add
pop
or
push
xchg
or
push
mov
in
in
and
adc
add
out
xlat
movsb
inc
xchg
pop
push
cmc
xchg
xchg
sub
outsl
ret
cmp
cli
iret
jae
mov
in
loop
mov
das
icebp
imul
loop
mov
mov
xchg
and
lods
dec
aas
lea
clc
test
sub
ret
jge
cmp
inc
ficoms
cld
rcll
pop
leave
test
push
aam
mov
jecxz
inc
jne
xorl
shlb
mov
mov
rcrb
mov
cmpsl
sub
sbb
ret
mov
add
outsl
mov
icebp
jae
insb
ret
push
xor
les
imull
bnd
xchg
add
imul
dec
out
mov
lahf
cwtl
les
mov
rorb
xchg
aam
mov
dec
paddsw
es
or
push
in
mov
pop
loop
pushf
cmpsl
sbb
dec
add
insb
insb
jne
lock
jb
pop
push
jl
mov
cmp
mov
sub
jno
or
es
fadds
iret
add
mov
push
shl
mov
mov
sub
repnz
daa
test
mov
mov
cmpsb
out
leave
push
dec
je
jbe
mov
scas
xor
mov
cmp
mov
adc
cwtl
mov
sahf
call
into
bound
cmc
movsl
and
dec
lds
and
mov
insb
loopne
pop
xlat
inc
ja
jg
pop
inc
repnz
and
mov
outsb
lret
cmpsl
fwait
stc
mov
xorb
inc
int
and
imul
xlat
ret
add
push
stos
ret
lods
out
mov
mov
jge
mov
jle
push
mov
bound
mull
outsl
cli
rclb
jne
cmp
mov
lahf
push
in
add
push
push
out
add
sub
aam
int
iret
xchg
xchg
stos
xchg
out
ret
icebp
xchg
mov
cmc
xchg
jg
and
sub
cmpsb
push
les
mov
sub
mov
ljmp
std
sub
xchg
pop
outsl
jmp
fnsave
xor
into
cmp
cld
ret
lcall
mov
mov
fnsave
mov
shrl
rorb
pop
or
adc
lds
add
aaa
and
xor
stc
addb
mov
lds
cli
rclb
or
add
or
xchg
sub
adc
std
punpckldq
cmp
shrb
subb
outsl
inc
xlat
gs
pop
inc
mov
bound
mov
fldl
push
sbb
push
mov
dec
pop
lods
pushf
add
push
stc
add
into
dec
pop
pop
aam
test
inc
out
mov
xchg
adc
sbb
or
sbb
and
add
dec
lahf
mov
jp
sbb
cmp
push
aam
imul
sub
test
into
sbb
ja
pop
nop
icebp
jg
pop
dec
xchg
out
movb
in
jecxz
fnstenv
cmp
and
mov
fs
mov
pop
push
gs
sub
xchg
lock
test
sub
sbb
hlt
xchg
popf
or
or
fdivs
or
jp
add
cmp
popa
outsb
dec
cmp
mov
or
pop
popf
repnz
lret
fldenv
xor
mov
adc
aam
es
fcomps
or
xchg
xor
fildl
daa
enter
repz
xor
dec
mov
inc
rorb
push
lock
test
xchg
pop
dec
in
and
addl
leave
lret
pop
sbb
pop
mov
mov
sub
xchg
jae
mov
push
lods
mov
dec
mov
test
mov
or
xchg
mov
xchg
jl
adc
fldenv
sbb
pusha
add
pop
pusha
jns
sarl
das
jno
scas
pop
addr16
in
push
cmp
aaa
pop
sub
testb
addr16
out
pushf
add
int3
in
xchg
js
mov
test
lcall
out
sub
enter
adc
mov
pop
in
negb
adc
adcb
imul
xor
leave
cmpsl
add
sbb
cltd
addr16
xchg
lea
jnp
push
lds
aaa
xchg
inc
mov
sbb
cmp
dec
ss
push
imul
ret
out
int
ljmp
mov
sub
push
lret
dec
or
ficompl
push
add
movl
into
scas
dec
addr16
mov
into
pop
mov
jns
lahf
fcomip
or
push
push
in
and
and
dec
mov
cs
mov
in
pusha
pop
and
jo
mov
scas
xchg
jecxz
jo
hlt
mov
fidivrl
lret
and
inc
imul
mov
pop
call
fwait
rorl
icebp
sub
mov
int
out
mov
jle
mov
mov
and
sub
filds
and
test
xchg
sub
cmp
mov
add
int3
or
jge
in
jg
adc
or
fidivrl
in
push
and
push
push
jl
push
rcrl
push
push
call
dec
or
mov
lock
xchg
inc
sub
daa
and
rcll
pop
push
cmp
insl
mov
dec
pop
xchg
fstpt
insb
scas
rol
pop
mov
mov
push
ror
fsubrs
xor
popa
sbb
or
lods
subl
adc
pop
out
mov
jo
ret
jb
andb
push
lcall
sub
mov
std
loopne
mov
enter
out
add
dec
xlat
icebp
cmp
pushf
or
fimull
fistl
scas
fcmove
push
inc
and
cmpsb
test
stos
pusha
aaa
adc
inc
inc
jae
out
arpl
mov
or
and
xor
popf
insl
xor
aaa
mov
fcomip
cwtl
or
xor
and
es
lea
pop
mov
xchg
xchg
loopne
popf
ret
dec
add
in
sbb
xchg
pop
ss
push
mov
std
mov
mov
and
filds
jbe
mov
pop
pop
pop
sbb
jbe
mov
adc
insb
mov
sbb
fidivs
xor
pusha
add
sti
pop
jle
mov
jp
movsl
sti
aad
and
cmp
dec
repnz
or
and
push
or
lea
or
xor
lcall
js
aas
loopne
xor
jnp
cwtl
pop
test
testb
add
adc
les
aas
pop
cmpsb
out
lods
or
stos
jmp
imul
insl
sbb
shl
idivb
sub
fcmovne
jne
insl
adc
mov
addr16
mov
or
mov
stos
aad
and
push
mov
stos
adc
adc
jb
push
sub
mov
and
jle
xor
mov
pop
lods
dec
mov
daa
mov
fcoml
mov
or
mov
pop
cmc
and
mov
push
dec
pop
lahf
or
cmp
insl
ja
adc
push
jp
das
out
pop
mov
pusha
dec
inc
jbe
test
push
enter
xchg
idivl
pop
das
adc
sbb
xor
add
ljmp
pop
cmp
pop
pop
mov
lret
in
cmp
ljmp
lds
sarl
jnp
xlat
leave
push
lea
rcll
fs
divb
adcl
mov
mov
xor
inc
mov
in
pop
adc
dec
push
mov
in
pop
dec
jg
bound
jmp
inc
movsl
mov
pop
xor
jae
iret
mov
insb
xchg
lods
add
push
mov
mov
inc
ficomps
sbb
leave
pop
or
mov
dec
cvtdq2ps
mov
mov
and
div
jb
imul
lret
gs
call
pop
xor
xchg
jbe
mov
cltd
cmp
mov
stos
imul
dec
pop
mov
loop
lods
arpl
jne
ja
or
xchg
pop
cltd
xor
stos
push
imul
push
push
popa
adc
nop
arpl
fistpll
fs
fnstcw
cltd
shll
xchg
jnp
sbb
mov
xor
imul
ret
scas
popf
push
popf
push
push
jecxz
cmp
imul
adc
adc
sub
loop
ss
in
mov
mov
and
in
xor
in
call
call
in
in
cmp
lds
jns
int
xchg
push
fldcw
pusha
les
iret
dec
dec
cmp
adc
in
aam
sti
lahf
adc
xor
pop
addr16
jmp
dec
mov
imul
lds
xor
mov
jbe
pop
push
push
bound
add
xchg
xor
mov
push
hlt
and
clc
cltd
fildll
stos
les
add
jnp
bound
push
or
nop
outsb
movb
lds
jnp
cld
or
cmp
cmc
adc
mov
mov
stos
mov
cs
rcrb
testb
cmp
xorb
js
cwtl
cmp
fcmove
movd
loope
mov
mov
les
cltd
adc
or
in
imul
dec
stos
push
stc
fisubrs
add
cltd
and
fsincos
pop
jbe
fmul
ja
cmp
leave
adc
loopne
cltd
mov
sahf
cmp
loop
xor
push
pop
repz
ds
das
jp
push
and
daa
mov
cmp
mov
dec
sub
movsl
push
sbb
into
int
pusha
adc
cld
lahf
jne
pushf
xchg
cmp
mov
push
sbb
adc
xor
sbb
mov
shll
push
enter
xor
sti
je
push
push
divl
in
aad
es
xchg
aas
pusha
mov
arpl
jle
test
adc
loopne
divb
jmp
pop
fstl
scas
cmpsl
pop
inc
adc
rorb
jle
in
cmp
push
and
pop
pop
xchg
test
negb
fnstenv
test
add
dec
mov
or
les
lds
mov
or
inc
pop
mov
clc
push
adc
in
adc
iret
sbb
in
mov
inc
sahf
xlat
mov
xchg
dec
xchg
push
cmp
xor
imul
xchg
push
sbb
iret
pop
mov
add
mov
mov
divl
out
lcall
pop
stos
cmp
fmuls
adc
dec
je
fisttpll
dec
rcll
ja
hlt
sti
add
cwtl
dec
pop
les
jbe
lods
adc
popf
pop
aad
mov
mov
iret
add
and
jp
and
in
popf
or
in
test
aad
in
fisttps
dec
mov
cmp
stos
mov
fwait
loop
push
adc
data16
in
les
and
int3
jns
sbb
jmp
xchg
mov
mov
pushf
mov
lods
jecxz
mov
sbb
pop
ljmp
call
mov
daa
dec
mov
and
push
enter
daa
in
dec
and
je
int
jno
fmuls
dec
jo
in
lcall
divb
inc
mov
loop
fldt
test
pop
scas
jle
fbld
mov
inc
nop
pop
mulb
fsubrl
push
inc
sub
pop
mov
lahf
es
sbb
fs
repnz
and
int3
lahf
popa
jo
adc
and
cs
daa
testl
lret
shlb
sub
xchg
enter
pusha
cli
dec
sub
mov
cmp
push
imul
scas
pop
push
push
cli
pusha
jns
mov
dec
in
mov
mov
cmpsb
xchg
xlat
addb
ret
leave
mov
adc
fisubrs
in
fildl
cltd
xor
enter
repz
pop
xor
cmc
jp
or
pusha
add
sub
popf
sbb
fistl
lret
out
jl
sub
pop
adc
popf
stos
shlw
ret
jmp
js
push
inc
xchg
bound
cmpsb
xchg
pop
dec
insb
inc
lock
popf
jno
out
fisttps
push
xchg
push
sbb
mov
fisttpl
pushf
dec
pop
push
stos
mov
je
cli
bound
mov
icebp
sub
jnp
push
mov
sbb
mov
shlb
push
mov
pop
cwtl
jae
in
pop
rorb
pop
fs
inc
scas
ss
es
fadd
repnz
test
sub
sbb
scas
test
popf
adc
sub
pop
call
pushf
sarb
dec
fildll
cmc
int3
mov
out
fcoml
add
out
sub
mov
out
popf
decl
inc
or
mov
inc
cwtl
insb
cwtl
dec
jmp
lcall
or
repz
xchg
dec
mov
popa
xor
push
lcall
sub
sub
xchg
mov
enter
jae
inc
je
lahf
and
fldcw
jg
jecxz
mov
or
jae
movsl
mov
xchg
inc
xchg
inc
lret
pusha
mov
mov
inc
add
sub
mov
push
aam
in
mov
adc
fnstsw
out
test
jne
xor
xchg
dec
js
daa
test
in
xchg
fistl
xlat
icebp
iret
xchg
lds
or
or
rorb
test
inc
out
lahf
outsl
and
js
mov
inc
cmp
cmp
inc
dec
mov
sub
adc
add
imul
out
cltd
and
test
jmp
adc
les
jb
cmp
jno
sbb
fdivrl
pop
lcall
enter
push
pushf
pop
lahf
imul
push
cmp
cs
jo
mov
mov
sahf
mov
adc
mulb
negb
jmp
sbb
xor
rcll
mov
inc
clc
mov
repnz
cwtl
arpl
scas
sub
std
push
xor
and
into
rcl
mov
lods
rcrl
mov
inc
sub
or
jno
dec
cs
push
popf
sbb
pop
inc
mov
mov
push
sub
in
ret
je
mov
int
stos
mov
test
sbb
mov
and
push
scas
inc
fstps
lret
fldcw
dec
rolb
adc
adc
in
or
push
sub
das
leave
clc
adc
sub
xchg
pop
sti
mov
fcom
jno
pop
add
inc
jg
mov
push
xlat
sub
pop
mov
jns
mov
jge
jmp
imul
call
xor
shrl
adc
aam
fwait
cmp
imulb
aad
mov
push
cltd
mov
adc
push
test
mov
movsl
stc
fimull
rorb
cmp
popa
jne
clc
notb
push
sub
fcoml
cmp
cmpsb
xor
ret
inc
loopne
mov
outsl
push
dec
repz
jae
jnp
cmpsl
aas
lahf
xrelease
icebp
cmpsl
dec
loope
nop
xor
loopne
scas
enter
cmp
insb
daa
inc
dec
movsb
stos
mov
in
test
outsl
add
sub
in
push
in
sub
and
out
add
clc
rorb
int3
push
inc
mov
daa
ficomps
fmul
imul
shll
pop
pop
shll
je
mov
in
pop
cmp
push
or
sub
xor
jecxz
and
xchg
fs
or
mov
std
sub
jbe
xor
out
or
pop
stos
pop
cmp
jbe
inc
push
mov
mov
pop
jle
mov
push
outsl
pop
mov
xor
dec
xchg
xor
insb
minps
cld
mov
cmpsl
test
jg
jo
outsl
repz
pop
shrl
jge
sbb
leave
cmp
inc
inc
icebp
outsl
cltd
test
or
cmp
cs
adc
sub
ss
sub
sbb
xchg
xchg
mov
data16
cmpsw
mov
fs
or
rcl
or
pushf
inc
insb
lods
addl
and
inc
lods
popa
add
push
add
pop
inc
cmp
and
test
push
mov
lret
stc
jmp
jno
or
mov
xchg
mov
and
mov
xlat
ds
and
lea
or
dec
pop
push
in
ret
mov
mov
mov
inc
shrb
nop
punpckhdq
mov
orb
sub
xchg
popa
xchg
mov
push
push
push
call
pop
sarb
mov
xchg
inc
mov
int3
into
push
pop
nop
dec
ljmp
fisubrs
lret
insl
pop
popf
add
or
aad
gs
mov
sti
push
xor
jb
xchg
gs
fs
out
call
add
xor
mov
add
lcall
dec
ret
push
sbb
jge
and
pop
das
xchg
sbb
out
and
mov
testl
mov
jge
xor
mov
sbb
aaa
loopne
in
and
or
adc
add
add
lea
or
dec
int
sarb
pop
jo
insl
fistpll
inc
inc
pop
push
lret
push
mov
or
rolb
out
xchg
sub
pusha
lods
popf
mov
shrl
ds
xchg
rcrb
ror
add
mov
into
jo
lds
and
xor
shr
fbstp
aam
or
jp
xchg
mov
dec
mov
jecxz
sahf
adc
out
fmull
out
mov
push
out
and
fistl
xchg
adc
pandn
xor
adc
lahf
mov
shll
subb
jle
mov
lret
addl
mov
andl
add
add
in
adc
lahf
or
jno
mov
jecxz
pop
out
add
lahf
pop
enter
lret
enter
mov
jg
push
popf
bound
jns
push
cli
cld
xor
repz
call
fdecstp
inc
xor
bound
addr16
shlb
jg
in
imul
jne
rcr
movsl
jle
push
add
movsl
jb
or
adc
push
cmp
xchg
sub
dec
nop
int
cmc
int
push
jg
aaa
push
xchg
add
adc
andb
leave
rcrl
arpl
xchg
mov
out
lods
mov
pop
cld
pop
add
inc
mov
fwait
pop
cltd
filds
cmp
adcl
test
cmp
subb
fstpt
dec
add
fdivrp
out
adc
pop
dec
push
int3
outsb
aaa
mov
jge
jnp
ret
aam
jge
pusha
fsubp
or
or
mov
dec
iret
ljmp
lcall
mov
sub
sub
dec
jp
xor
xor
inc
sub
lods
pop
aad
inc
gs
mov
mov
fcomi
lea
push
out
mov
sub
fs
push
and
mov
vpsubusb
cmpsb
out
fadd
movsl
mov
fcoms
push
mov
sbb
stc
aaa
nop
mov
popa
aas
mov
rolb
pusha
pop
sbb
daa
aas
addl
jl
scas
xchg
push
pushf
jno
mov
sub
pop
xor
imul
rcrb
mov
add
jnp
sub
clc
adc
xor
cmpsb
xlat
push
js
sbb
xor
mov
mov
sbb
mov
sar
int3
imull
andl
icebp
dec
adc
xchg
push
mov
fidivs
aad
ds
jp
push
jle
mov
push
rcrb
mov
fistl
inc
cltd
cmpsl
out
push
addr16
jne
cltd
xor
mov
pop
aam
int
aaa
inc
push
or
jp
cmp
inc
std
push
scas
outsb
mov
xchg
imul
imul
inc
push
enter
aaa
push
clc
in
xchg
mov
je
sub
and
mov
lods
fs
xor
cmp
outsl
jne
pop
jmp
rcrl
in
jl
in
imul
inc
aad
ss
pmovmskb
xchg
push
cs
xchg
xor
clc
push
pop
loope
fsubs
fistpll
add
xchg
add
pop
sbb
orb
mov
insl
out
ss
cmp
pop
inc
adc
cltd
neg
cmp
adc
je
cmpsl
push
lcall
and
push
ss
mov
push
inc
pop
aad
pop
adc
clc
and
mov
scas
scas
adc
mov
and
scas
mov
push
add
addr16
sub
xchg
jecxz
int
xor
mov
jecxz
ljmp
push
push
in
mov
movb
outsb
jle
and
cmp
jbe
inc
rolb
push
and
xchg
jecxz
pop
mov
mov
dec
xor
lret
jl
add
jp
cmp
dec
subb
nop
lahf
and
xchg
loopne
test
in
mov
test
sub
lret
fs
dec
push
add
add
sbb
test
addb
outsl
push
aad
mov
in
dec
mov
sarl
push
pop
push
bound
jnp
cmp
push
add
cmpb
push
or
cmp
add
loop
clc
or
sbb
clc
shll
mov
cli
lock
loop
jmp
xchg
das
mov
cmp
xor
dec
push
out
or
add
cmp
hlt
xlat
or
sbb
psrld
jbe
jg
rcrl
lahf
mov
subb
jg
out
push
pop
add
je
inc
int3
pop
and
lret
xchg
mov
sub
pop
xor
jle
mov
subb
hlt
or
fwait
arpl
mov
sub
or
dec
repnz
cli
jae
ror
sub
rcrb
mov
mov
hlt
lods
bound
mov
daa
xor
mov
lock
push
cmp
inc
push
adcl
cmp
sbb
hlt
inc
adc
repz
fmuls
in
fmul
adc
xchg
cs
iret
ret
sub
shll
inc
aas
cmpl
pop
test
dec
in
sbb
inc
fwait
daa
out
gs
repnz
add
aad
or
nop
xor
mov
add
or
andl
in
sar
adc
mov
mov
testl
xlat
dec
jmp
lret
mov
loop
inc
mov
push
dec
xchg
ljmp
cmp
lcall
clc
test
or
pop
jno
or
pop
nop
sbb
fwait
lods
outsl
lahf
xchg
push
lret
pop
fs
adc
cmpsl
pop
sub
fcoml
icebp
xchg
fcoms
jne
mov
add
insb
xor
std
jns
mov
lea
inc
sub
cwtl
mov
jbe
jecxz
mov
and
test
leave
cmp
inc
push
lcall
pop
pop
jns
push
into
rorb
sub
movsl
mov
testb
adc
emms
mov
lea
xchg
push
ret
lods
pop
xchg
adc
adc
or
mov
aad
int
fbstp
ja
sub
lwpins
jmp
imul
push
jge
mov
fcmovnu
ret
xchg
or
das
fsubl
push
inc
push
pop
out
in
cmp
mov
fistps
jge
xchg
nop
jmp
lods
mov
cld
fmul
sbb
jle
add
out
dec
pop
sbb
cmp
pop
jnp
mov
cmp
sub
out
pop
xchg
movsl
mov
out
sti
xlat
mov
push
push
push
sar
and
lret
fldl
adc
inc
int3
inc
mov
fwait
xor
ja
mull
dec
out
es
cmp
cmpb
mov
sbb
add
rolb
sbb
popf
xchg
or
in
test
mov
fisubrl
out
cli
loop
xlat
xor
cld
cld
aad
xchg
pop
cmp
sbb
cmpsb
rolb
sbb
jmp
repnz
pop
dec
clc
pop
adcl
das
fstpl
mov
xchg
ret
mov
pop
pop
push
mov
lret
hlt
sub
jp
cltd
aaa
out
incl
push
fs
aad
dec
jge
je
sub
loop
and
hlt
pop
mov
xchg
inc
mov
leave
idivl
stos
jnp
lock
lahf
roll
mov
loopne
fstpt
scas
aad
jae
idivl
jno
xor
dec
or
insb
dec
imul
adc
mov
push
mov
cmpsb
jno
add
aas
cmp
ret
in
addr16
xor
aas
jp
add
in
sub
sar
and
sbb
add
push
aas
mov
loop
rcll
ss
inc
or
inc
ljmp
mov
jne
daa
mov
in
mov
into
nop
add
jle
jp
sub
jmp
pop
cmp
ljmp
push
int
in
pop
pop
aaa
repz
pop
test
inc
sti
sbb
jb
sub
fcomps
adc
into
push
pop
push
dec
test
mov
push
lds
in
movsb
pop
push
pop
callw
mov
add
into
jno
stc
rol
shll
hlt
sbb
inc
mov
sub
addl
sbb
xchg
jae
repnz
push
cltd
movsl
xor
dec
xchg
cld
adc
cld
xchg
jb
stos
or
lea
popf
jnp
mov
xor
stos
call
aaa
and
data16
sub
xchg
hlt
add
testb
es
mov
cmp
rorb
dec
pop
xor
les
in
incb
jmp
xchg
repz
test
xchg
push
mov
mov
mov
and
ljmp
xchg
test
ret
andl
repz
mov
and
sbb
xchg
inc
xchg
push
adc
lahf
dec
ja
fs
mov
js
adc
lds
sbb
iret
mov
inc
sbb
cmp
cmp
fbstp
sub
ss
pop
clc
pop
in
aaa
sbb
bound
sbb
in
mov
adc
inc
fimull
adc
jecxz
aaa
push
mov
sub
ret
adc
xchg
sbb
decb
cmpb
xor
mov
xlat
jns,pn
add
or
cmpsb
into
jle
out
fisttpl
push
imul
pop
cmpsl
test
enter
sub
xchg
adc
lret
out
inc
mov
or
add
sbb
dec
lds
sti
mov
imul
ret
loop
mov
pop
pop
xor
inc
mov
ja
mov
fdivs
lds
iret
pop
mov
inc
ds
cmp
cltd
sbb
jg
jge
clc
enter
cmp
mov
sahf
fucomp
sti
pop
xchg
xlat
test
adc
pushf
mov
sarb
ds
pop
push
jecxz
jne
outsb
push
in
xor
andb
cmp
lret
fdivrl
in
cmp
xor
lret
sub
lea
dec
shlb
mov
rcll
mov
push
ljmp
xchg
xchg
and
add
push
jg
cld
das
ret
push
mov
push
inc
jb
pop
rolb
or
fnstcw
mov
mov
xchg
push
jne
mov
repnz
cmpl
sub
daa
push
daa
fdivrs
ficompl
mov
mov
mov
add
inc
sub
sbb
dec
jecxz
icebp
push
add
pop
out
jmp
adc
int
or
jecxz
push
jbe
mov
sbbl
cmp
mov
stos
adc
test
jb
call
xlat
mov
push
fmull
pop
xor
cmp
mov
lods
in
idiv
mov
fs
shll
popa
in
add
mov
mov
jno
add
mov
inc
stc
xchg
or
andl
shrb
dec
xor
roll
dec
test
jno
lods
shl
bound
lcall
pushfw
sbb
sbb
dec
mov
mov
jmp
cmp
aad
xor
push
mov
lods
mov
fs
in
repz
inc
fiaddl
je
sub
leave
test
pop
das
cmc
loope
jno
imul
xchg
js
enter
and
sub
dec
movb
push
pushf
sub
or
ret
sub
xchg
and
outsl
rcll
push
dec
bound
mov
or
push
in
nop
outsb
fs
sub
bound
pop
pop
daa
xchg
jae
leave
push
mov
dec
adc
mov
adc
mov
push
pop
jne
xor
out
add
cmc
in
test
sbb
aad
sbb
dec
jbe
jg
xor
mov
adc
push
fidivs
jp
cmp
dec
cltd
sti
ret
sbb
dec
aas
dec
shr
enter
mov
popa
fisubrl
inc
in
repnz
push
out
in
insl
test
push
mov
cmp
cltd
int
push
mov
or
adc
mov
loop
imul
daa
push
pop
mov
pop
cmp
insb
jbe
xchg
fcomps
addr16
dec
imul
mov
inc
dec
test
xor
je
jge
sub
xchg
jmp
es
scas
pushf
xchg
add
push
pop
mov
mov
jp
jl
jl
std
jmp
divb
mov
xor
lods
ret
pushf
jae
fimuls
pop
cwtl
jp
arpl
mov
xor
pop
pop
ss
es
and
outsb
pop
cmp
int
fmull
jl
adc
ds
out
jecxz
push
jo
rcll
pop
fcoms
std
dec
cmc
sub
jns
xchg
fiadds
repnz
mov
ud2
gs
mov
aad
or
out
push
inc
push
jl
mov
dec
or
pop
sbb
lret
xchg
fs
add
sbb
xchg
lahf
adc
sbb
sub
pop
dec
pop
xchg
pop
out
cmp
jecxz
mov
or
jns
mov
or
mov
or
mov
movsl
cmp
push
dec
inc
mov
xchg
inc
aas
jmp
pop
jns
daa
push
dec
sub
push
dec
mov
popa
and
pop
and
sbb
pusha
lods
scas
aas
dec
jae
lock
and
rcll
icebp
pop
xor
test
adc
push
clc
inc
mov
lret
pop
mov
add
cltd
insl
push
xor
js
pop
push
scas
sbb
cwtl
outsl
cli
pop
fsubrs
mov
cmp
add
mov
xchg
fs
fucomi
push
cmp
cld
mov
test
sbb
xor
sbb
sub
mov
fs
mov
mov
and
scas
cmc
mov
es
adc
sub
inc
sub
xor
in
push
sbb
out
loopne
shrl
cmpb
pop
cmp
xor
jbe
pop
or
pop
jae
sub
jp
mov
adc
xor
pop
pop
insl
jnp
jns
clc
dec
loope
int3
xor
jbe
shrb
js
dec
and
xor
je
sbb
mul
movsl
sbb
dec
enter
jne
test
ds
aaa
jl
aas
imul
xchg
and
lret
xor
shll
lea
sbb
in
out
aas
shl
sub
leave
cmp
mov
sub
push
in
popa
mov
inc
adc
mov
mov
les
inc
adc
sbb
int3
pushf
test
insl
aad
mov
sarb
mov
mov
rolb
test
jg
sbb
dec
int
xchg
in
pop
dec
xlat
or
push
clc
cli
inc
sbb
mov
xchg
dec
jmp
cmp
and
push
pop
or
dec
shlb
into
shll
dec
mov
xchg
mov
imull
push
rorl
test
cmc
aad
and
out
je
pop
mov
add
add
in
add
pop
xor
xor
jae
aad
mov
out
lahf
insl
mov
sub
ja
lods
sbb
inc
in
fs
sub
mov
adc
or
test
jle
and
divl
jns
hlt
js
mov
and
fs
cwtl
jle
xchg
bound
sbb
mov
in
mov
sahf
pop
lds
pop
int
test
lock
sbb
pop
shrl
push
decl
int
int3
lret
out
dec
lods
mov
lret
xor
addl
xchg
cltd
lds
adc
pop
lods
movsb
das
pushf
push
jnp
and
xchg
sbb
jl
enter
jo
adc
mov
dec
sub
adc
jns
loope
aaa
push
or
into
push
mov
scas
in
sub
sbb
movsl
movsb
out
jl
inc
movsl
ds
call
xchg
mov
test
dec
cmp
jle
lahf
into
lods
pop
mov
aaa
jne
and
xor
ficoms
test
pop
jns
mov
jae
stos
mov
push
xchg
je
test
push
pop
or
push
push
sldt
daa
add
jbe
xchg
ljmp
cltd
inc
or
push
imul
mov
jae
mov
scas
mov
cld
inc
jg
adc
mov
jecxz
jmp
mov
inc
les
enter
mov
push
nop
inc
sub
and
add
inc
adc
dec
jle
imul
in
jl
inc
mov
outsb
dec
ds
scas
xchg
inc
pop
push
xchg
push
cmp
xchg
add
sub
pop
inc
adc
pop
and
aad
pushf
test
inc
lret
fucomi
test
int3
movsl
jae
daa
fwait
bound
adc
in
mov
add
inc
call
sub
mov
clc
test
sbb
insl
mov
hlt
push
xchg
std
insl
xor
loop
xchg
aas
xor
insb
fcmovu
lock
pushf
jae
push
pop
add
xchg
fnsave
jl
incb
test
inc
iret
mov
adc
mov
jno
insb
jp
xor
mov
in
adc
push
pop
repnz
mov
clc
in
inc
sub
cmp
jnp
push
cmpsb
in
cmp
repz
or
enter
dec
add
scas
xchg
out
xor
movsl
fistpll
shrl
mov
jo
dec
sub
std
add
jo
pop
loope
xchg
push
adc
xor
cmpb
inc
pop
jmp
mov
mov
aas
xchg
adcl
pushf
scas
pop
push
decb
shll
mov
stos
adc
jbe
inc
in
out
pushl
jne
sbb
insb
sub
into
cmp
inc
mov
inc
push
xor
mov
fsub
sbb
js
mov
not
mov
sbb
push
mov
inc
jb
test
iret
sarl
nop
xchg
repz
mov
pop
leave
hlt
icebp
xchg
fsubrl
jg
loope
stos
jb
sarb
in
push
cli
aaa
dec
mov
push
mov
xchg
gs
jo
jnp
push
imul
xchg
sub
in
xor
test
fsts
adcb
xchg
pop
sub
aad
adc
out
lock
fisttpll
jmp
sub
sub
mov
popf
call
daa
push
insb
cs
imulb
adc
inc
pop
jo
sbb
fldenv
jge
jmp
jp
cli
xor
add
pop
jge
dec
jb
cwtl
rcrl
inc
xchg
adc
cltd
addl
jecxz
mov
cltd
mov
addr16
push
push
dec
addl
dec
popfw
gs
pop
enter
rorb
mov
or
xchg
aaa
inc
xchg
add
lea
movsl
pop
lea
sahf
and
xchg
fs
sbb
mov
clc
mov
cmp
leave
and
aad
dec
jo
mov
movl
adc
testb
cmpsb
and
mov
mov
inc
and
in
std
jg
xchg
sub
mov
out
scas
insl
aas
push
mov
mov
adc
in
popa
icebp
inc
lret
dec
dec
cltd
or
repz
or
xchg
inc
cli
cld
test
imul
aaa
inc
inc
xor
sub
repnz
ficomps
sub
out
es
lret
inc
mov
pop
or
sub
stos
jnp
fsubl
xchg
mov
jbe
cmpsl
test
int
loopne
pop
adc
fs
ja
dec
mov
xchg
scas
xchg
ret
xor
leave
stc
aad
add
xchg
cmpb
enter
ja
pop
outsb
pop
mov
loope
or
xchg
pop
push
push
loop
dec
sar
adc
and
mov
pop
pop
pop
push
cmp
lahf
mov
pop
outsb
test
xchg
lods
hlt
mov
outsb
cmpsl
inc
ss
cmp
adc
cmc
push
xlat
and
into
jns
jmp
rep
lods
mov
inc
out
mov
fldt
aad
arpl
dec
popa
movsl
sbb
pop
jge
loop
xchg
out
cli
adc
aas
clc
js
or
outsl
mov
push
subb
or
xchg
cmp
cmp
jecxz
push
in
loopne
nop
lods
in
rorl
push
xor
adc
dec
sbb
je
scas
int
repz
sub
lret
sub
mov
xchg
xchg
pop
test
inc
or
imulb
leave
jl
stos
bound
pop
sub
jmp
and
sbb
or
mov
mov
push
and
cmp
in
mov
jnp
arpl
cmpsb
mov
insb
cwtl
adc
and
orb
mov
stos
adc
out
sub
mov
sahf
hlt
mov
mov
das
lea
ret
xchg
imul
xchg
cmp
cld
aam
dec
inc
fstpl
cli
push
push
dec
inc
aam
xchg
xchg
inc
inc
pop
in
sbb
ja
dec
inc
inc
insl
scas
pusha
cmp
loope
jg
sti
sti
fnstcw
pop
out
mov
lcall
jns
shlb
stc
mov
sub
dec
mov
mov
jecxz
stos
jge
xor
aaa
add
aam
mov
adc
out
fsubrp
dec
test
arpl
scas
jmp
sahf
je
xchg
push
sub
dec
cwtl
or
andb
lock
push
mov
jg
pop
xchg
xor
xchg
or
dec
fsubs
test
xchg
out
mov
cmpb
jl
adc
mov
lds
jbe
int
aaa
scas
mov
repz
in
cmp
xchg
sub
and
les
cmp
pushl
ljmp
mov
clc
imul
xor
movsl
jno
push
sbb
pusha
cwtl
xchg
jno
jmp
sbb
adc
sub
pop
adc
jl
lahf
test
shl
fxam
cmp
add
dec
cmp
sbb
iret
cmp
cmp
push
pusha
insb
jecxz
jmp
mov
lret
or
inc
jb
std
add
mov
clc
daa
lahf
xchg
push
mov
mov
cld
scas
or
sbb
movsl
xor
pop
pop
sbb
arpl
in
fldcw
and
push
ljmp
jb
pop
pusha
add
ret
ficompl
ret
mov
jb
push
and
dec
pop
xor
je
jmp
dec
jmp
push
stos
mov
sbb
out
test
sbb
mov
xchg
push
sbb
ret
adc
adc
adc
lds
or
mov
sbb
rsqrtps
js
insl
xchg
xor
sbb
fcmovb
call
mov
xor
ds
push
test
icebp
jnp
xchg
inc
rclb
sbb
int3
into
push
push
xchg
sbb
movswl
imul
out
add
mov
pop
push
fwait
dec
loop
xor
jle
jns
pop
lcall
js
dec
insb
xchg
dec
xchg
dec
roll
clc
dec
dec
jae
push
push
sahf
mov
mov
pop
loopne
test
or
pop
sbb
movsb
cmc
push
push
inc
mov
xor
push
add
aaa
mov
inc
jbe
daa
dec
out
ja
push
jg
and
add
push
movsb
ret
pop
mov
sub
sbb
outsl
sbb
jge
or
sbb
sahf
dec
xchg
and
repz
lods
ret
push
inc
pop
mov
mull
add
fwait
sub
cwtl
and
and
rol
mov
sbbb
and
add
leave
pop
dec
pop
loope
jl
dec
xor
lret
push
aas
arpl
push
push
bound
dec
sbb
jnp
inc
loop
add
out
mov
push
addr16
pop
out
cmp
ja
inc
add
fnstcw
fs
cmp
inc
cmp
fmuls
mov
jnp
inc
or
push
jb,pt
push
rorl
jmp
addr16
outsb
pushf
sub
data16
test
fdivp
fiaddl
sbb
or
sbbb
inc
fstps
insb
xchg
movsl
addr16
jge
ret
push
jle
or
sbb
and
mov
mov
or
fnstenv
xlat
sub
pop
pushf
fwait
xchg
shr
xor
orl
pop
in
call
stc
dec
xchg
dec
sbb
loopne
xor
pop
dec
sti
pop
sub
insb
test
imul
and
inc
adc
ffreep
sub
fisubl
repnz
adc
push
es
and
xor
out
arpl
testb
mov
loop
cmp
sbb
repnz
sub
insl
sahf
icebp
lods
pushl
inc
jg
pushf
shrd
and
inc
lcall
mov
sbb
mov
shlb
sub
xor
pushf
sbb
test
imul
and
in
jle
scas
mov
jb
sbb
imul
es
js
ss
xchg
add
push
frstor
cmp
add
and
or
push
sti
push
and
push
mov
mov
inc
inc
int
and
push
jns
jle
addr16
sub
pop
and
hlt
lcall
aas
mov
in
xor
mov
les
mov
iret
dec
cmp
popf
cld
push
sahf
jmp
or
test
and
xchg
scas
push
fptan
jno
pop
sub
fs
in
pop
in
repnz
in
test
std
jg
lea
je
ret
xchg
dec
lcall
pop
sub
mov
push
int3
int
xchg
xchg
jp
cmpsb
pop
int
es
enter
scas
xchg
lahf
jnp
shl
ja
mov
arpl
mov
xchg
dec
js
xlat
jbe
sbb
mov
jge
decb
cli
popa
mov
ffree
mov
scas
movsb
lea
test
lret
cld
push
loopne
leave
and
ss
sub
xor
mov
xlat
push
sub
push
mov
pushf
sub
test
cmp
aam
add
or
push
pop
stc
or
outsb
mov
pop
lret
lock
jp
push
scas
aas
and
test
cltd
sub
outsb
dec
dec
jbe
pop
cli
mov
mov
dec
popf
mov
mov
into
sub
mov
repz
push
ja
insb
outsl
stos
push
sbb
test
mov
and
out
pop
adc
shll
push
push
mov
sub
add
sub
test
stos
js
jne
or
popa
lock
push
mov
aam
jl
mov
mov
sti
jb
sbb
nop
das
push
pop
hlt
repnz
inc
cwtl
adc
sub
icebp
pop
jg
imul
fimuls
outsl
cmp
out
xchg
inc
mov
frstor
int3
xchg
cltd
cmp
iret
pop
clc
js
xchg
pop
jns
add
dec
mov
mov
xor
pop
lahf
xor
mov
push
cmp
std
adc
out
xlat
jg
or
add
mov
dec
cmp
pop
ds
iret
push
out
repz
repnz
ljmp
pop
js
adc
pushl
adc
stc
data16
xchg
out
icebp
mov
push
inc
loopne
xor
pusha
ds
push
jg
pop
in
push
inc
add
lret
mov
cmp
xor
mov
and
lret
pop
sub
fcomps
dec
adc
icebp
add
fiadds
add
loop
rcll
pop
or
sbb
or
jnp
jbe
sbb
jl
sub
inc
or
mov
fwait
dec
jl
xchg
out
sbb
sub
lea
dec
stc
xor
shll
lret
into
mov
pop
in
mov
jae
gs
outsl
out
jg
sbb
dec
mov
mov
mov
jns
ficoms
out
cmp
pop
mov
shll
mov
xchg
mov
push
xor
shrl
lret
xor
enter
jnp,pn
inc
mov
jo
push
and
sub
pop
mov
lret
xchg
mov
push
aam
mov
or
xor
add
xlat
ficoml
push
lcall
in
mov
or
ljmp
mov
pcmpgtd
mov
rorb
clc
xchg
in
lods
or
cmp
mov
inc
mov
rol
lret
fcmovnu
xor
data16
push
sti
xor
xchg
cwtl
dec
insb
test
shll
and
decl
es
sbb
arpl
mov
test
cmp
fs
lahf
mov
pusha
in
int3
lcall
push
outsb
pop
push
pushf
sahf
fistps
mov
xchg
mov
lcall
inc
hlt
adc
mov
xor
jne
adc
idivb
out
mov
mov
mov
gs
rorl
push
idivb
mov
or
xlat
sub
data16
jle
jne
lods
test
adc
std
leave
ss
cmc
hlt
sub
xchg
mov
xchg
jg
out
movsl
dec
cmp
mov
adc
das
push
movsl
sbb
mov
or
out
bound
popa
movsb
xor
hlt
sbb
pop
jbe
dec
ret
sbb
ror
loop
jno
idivl
adc
pushf
cld
mov
pop
lock
xchg
add
jns
lahf
cmp
xchg
insl
mov
cmpsl
shll
fsts
add
stc
and
out
test
push
xchg
mov
mov
jg
mov
cs
cmpsl
shrl
inc
inc
mov
mov
lcall
ret
mov
mov
pop
mov
or
imul
mov
mov
dec
inc
pop
sti
das
push
lret
hlt
jno
ficomps
mov
xor
rcll
aas
enter
mov
and
hlt
pop
and
pusha
movsb
cwtl
or
enter
jp
and
addb
test
lods
sbb
sbb
pusha
xor
outsl
pop
outsl
pop
fisubrl
out
push
jge
push
popa
lret
in
push
leave
push
inc
cli
inc
xchg
sahf
out
fdivr
jge
pop
xor
fs
mov
mov
addr16
cltd
int3
call
dec
sarl
add
xchg
add
mov
add
adc
les
ds
cmp
push
jb
stos
fnsave
pop
mov
daa
mov
rolb
pushf
dec
dec
or
arpl
push
out
in
js
cld
cmp
mov
adc
mov
jl
mov
arpl
and
pop
push
add
mov
outsb
jno
jo
mov
cli
out
pop
jmp
aam
mov
inc
movsb
pushf
mov
xchg
sub
scas
xor
jp
fdivl
fistpll
pop
les
inc
pop
mov
push
mov
pop
and
cmpl
inc
and
sarl
jecxz
pop
jnp
mov
inc
adc
inc
mov
data16
mov
arpl
adc
mov
xor
pop
divps
es
sbb
jecxz
fdivs
mov
lcall
sub
jnp
clc
jmp
sahf
mov
inc
mov
div
in
jnp
push
stos
xor
arpl
pop
icebp
lea
outsb
aam
mov
sub
push
jle
push
cmp
push
fwait
pop
add
stos
test
aad
push
in
das
pop
hlt
gs
mov
pop
movsl
jp
cltd
lock
out
sbb
or
mov
out
leave
std
rolb
mov
jg
push
popa
neg
pop
cmp
ret
pop
add
imul
loopne
xchg
shl
hlt
insl
adc
scas
jns
aad
insl
clc
push
pxor
aas
lahf
repnz
inc
aam
pop
adc
mov
jb
add
imul
data16
fstpt
call
xchg
cmp
hlt
dec
int
mov
jno
mov
jns
daa
test
sub
ret
sub
rolb
test
jbe
leave
fwait
jecxz
push
sub
repz
outsl
bnd
dec
xchg
cs
lea
push
imul
inc
mov
pushf
out
rolb
pop
or
test
dec
or
sarl
popa
sbbl
push
adc
and
mov
cmp
test
mov
jno,pt
pop
jne
in
sub
jp
add
adc
mov
and
ret
add
jnp
dec
es
aam
xlat
clc
mov
add
or
jle
and
pop
cld
inc
pop
mov
sub
adc
dec
and
push
adc
ss
decl
test
iret
fstl
push
inc
mov
and
fldcw
pop
jo
stc
sbb
cs
pushf
inc
add
sahf
push
fidivrl
push
mov
std
test
popf
and
add
sbb
xchg
jbe
icebp
movsl
sub
pop
adc
mov
repz
lret
mov
cmp
mov
jp
lcall
sbb
push
inc
adcb
mov
or
rcr
mov
cmpsl
enter
dec
popa
test
or
cmp
fstpl
popa
stos
push
xchg
fs
adc
inc
mov
xor
xor
rcrb
jne
lret
mov
outsl
leave
shrl
jno
loope
xchg
test
shlb
mov
jne
pop
arpl
or
inc
mov
sub
or
xor
test
addb
jo
mov
jbe
inc
adc
out
or
hlt
lahf
fcoms
fadd
mov
sti
aad
cwtl
add
cmpsl
dec
jge
push
xor
mov
fs
stos
fbstp
xor
je
mov
jg
jbe
mov
sbb
mov
adc
int3
or
call
lock
xchg
mov
xor
test
add
and
cmpsb
outsb
shl
sti
or
loopne
inc
lock
ficoms
int
inc
arpl
not
iret
insb
push
push
push
popf
les
add
jne
loop
mov
or
jecxz
int
add
sti
mov
decl
dec
xchg
cwtl
into
jb
addr16
das
dec
and
mov
mov
outsl
pop
cs
mov
sti
pop
jne
shlb
in
subl
fwait
cltd
pop
les
mov
mov
inc
idiv
movb
sbb
mov
in
ret
cmpsb
cmp
scas
cmp
insl
jecxz
mov
ljmp
or
jnp
xor
aas
test
xor
pop
add
jo
cwtl
lcall
push
movsb
jl
pusha
mov
scas
sbb
test
dec
sbb
xchg
mov
inc
ds
add
into
nop
sbb
aad
cmp
and
add
add
andb
scas
sub
mov
jl
add
push
xchg
adc
repz
movaps
add
xchg
dec
xlat
lcall
add
xlat
sahf
pop
test
mov
sub
dec
repz
ret
fs
jg
sbb
pop
int3
pop
out
ja
aam
lock
jnp
cs
push
sub
adc
push
sub
mov
inc
xchg
movsl
andb
dec
lods
xor
xchg
mov
repz
dec
mov
adc
out
je
scas
push
imul
xorl
mov
fs
inc
cld
das
scas
pop
jecxz
sub
xchg
das
aad
dec
mov
mov
adc
fwait
test
pop
pop
insl
in
push
call
outsl
xchg
movsb
rcr
test
pop
cld
mov
scas
xor
sbbl
ljmp
mov
jl
xor
pop
int
insl
mov
in
cwtl
js
jno
icebp
mov
sub
les
ljmp
xor
fnstsw
sbb
out
adc
imul
push
mov
insl
jae
and
xlat
mov
mov
push
mov
ret
add
js
imul
hlt
and
aam
pop
cmp
adc
fcoms
cmp
pop
jb
cmpsb
adcl
lret
loope
push
xor
out
xor
xchg
sub
xchg
push
pop
push
cmp
xor
daa
adc
sub
pop
mov
add
out
pop
or
add
cmp
sub
inc
outsb
adc
stc
fldcw
xor
xchg
or
add
lret
stos
andb
adc
push
nop
ret
repnz
jae
outsl
jne
pop
fcoml
test
mov
mov
jns
mov
cwtl
xor
pop
add
jge
add
push
shll
sbb
shlb
jo
adc
pop
jecxz
hlt
adc
or
push
mov
xor
sbb
xchg
xchg
cli
repz
arpl
call
sub
lock
mov
lret
add
out
out
out
js
mov
fs
mov
mov
push
daa
andb
inc
repnz
sub
and
jmp
xor
xor
cmpsb
add
sub
xor
mov
adc
cmp
xor
pop
sub
sbb
cmp
das
cmp
test
imul
jmp
xchg
out
and
sub
in
xchg
das
or
and
gs
ficoml
add
sub
jmp
xor
dec
and
imul
cwtl
adc
mov
cmp
fldl
pop
push
out
cmp
cli
neg
mov
in
xchg
movsb
xchg
xchg
adc
pop
jecxz
lret
lahf
in
in
scas
add
push
fisubl
or
das
into
cmp
inc
xor
lods
lods
test
dec
popf
jns
in
push
insb
pop
cs
imul
mov
jge
loopne
dec
fdivrl
aam
mov
into
dec
add
mov
cwtl
or
push
add
aad
sub
inc
lods
mov
push
cltd
shr
jno
bound
lahf
xchg
pop
inc
lcall
rcl
insb
cmpb
pop
sub
cmpsb
cld
xchg
je
sbb
jg
dec
or
adc
cli
frstor
xchg
cmpl
pop
sub
adc
cmp
jp
test
cmp
mov
push
movsl
aaa
xchg
mov
outsl
lea
xor
adc
loopne
sti
adc
je
rorb
mov
xor
divl
stc
aaa
pushl
fadds
mov
push
adc
pop
inc
ja
xchg
sbb
std
lahf
inc
dec
jmp
or
mov
mov
adc
rol
testb
or
enter
dec
lock
in
clc
shlb
fwait
jmp
test
test
test
divl
adc
fildll
push
xor
push
js
mov
jnp
xchg
xchg
orb
sahf
cmp
ret
shrl
pop
lods
leave
out
push
pop
pop
call
aaa
popa
sub
repz
pop
loop
movsl
idiv
ja
pop
or
das
adcl
and
mov
inc
cwtl
add
sbb
scas
das
or
fdivrl
xlat
lret
dec
cld
xor
and
jcxz
push
arpl
and
inc
xchg
or
xor
jnp
push
mov
cld
xor
call
clc
xchg
in
push
cld
adcl
out
or
push
mov
xchg
lcall
pop
xchg
fs
mov
lods
mov
in
jb
js
hlt
adc
adc
lret
das
movsl
sbb
ds
repz
push
lock
mov
mov
inc
dec
shll
xchg
jle
sti
leave
cmc
cmp
jae
loopne
bound
jle
das
xor
outsl
adc
push
in
sarl
sub
jmp
pop
inc
mov
bnd
jmp
insl
aaa
push
jae
and
adc
mov
scas
or
or
xchg
mov
jb
mov
push
bsf
stc
mov
jp
iret
insb
pop
nop
and
cmp
imul
or
daa
lahf
addr16
mov
incl
and
lods
xor
idivl
jl
movntps
pop
add
cmp
xor
push
sbb
xor
stos
jmp
fs
js
cli
push
lock
push
xor
stos
inc
cmc
xchg
push
pop
pop
push
xchg
fcompl
sbb
sub
mov
repnz
iret
adcl
xchg
mov
xchg
lcall
cwtl
ja
sub
cmp
pop
and
fcomip
loope
int3
insl
cmc
loopne
clc
out
aaa
inc
sub
test
add
sbb
mov
sub
in
enter
sarb
divl
sbb
mov
xlat
pop
das
xchg
ljmp
fnsave
popf
push
adc
repnz
pop
mov
xor
imul
bound
pushf
fldenv
mov
shrl
dec
mov
in
xorb
push
jecxz
pushf
js
nop
shl
fldcw
sbb
xor
jb
fnsave
es
aad
dec
arpl
mov
mov
mov
pop
enter
andb
cli
aam
cmp
aam
cli
rolb
out
mov
fcos
push
jbe
insl
js
sub
imul
push
jne
pop
add
dec
lods
push
shlb
insl
push
lret
cmpsb
or
mov
sub
shrl
mov
xor
sahf
dec
pop
aad
jae
outsb
fnstenv
dec
dec
jae
pop
pusha
xor
mov
ja
mov
andb
xchg
into
inc
leave
mov
lds
push
pop
cmp
out
aaa
stos
inc
mul
inc
adc
xchg
pop
sub
fsts
call
xorl
or
inc
insl
dec
fcomps
pop
push
shrb
in
out
mov
cwtl
loop
push
insl
movsl
test
in
mov
inc
ret
jb
dec
mov
adc
xchg
sub
pop
cli
lcall
loopne
and
jbe
cmpb
jae
repnz
stc
mov
dec
inc
or
mov
mov
test
lods
and
and
sub
xchg
xchg
pop
mov
sbb
ret
hlt
sub
mov
in
push
cld
cmc
mull
or
ljmp
dec
sbb
xchg
stc
inc
int3
mov
cmpsl
push
xor
xor
icebp
mov
pop
pop
test
shrl
dec
sub
mov
ficoms
ret
fs
jae
lahf
and
jae
les
insl
icebp
jmp
repnz
push
adc
dec
and
test
sub
sbb
mov
ds
push
pop
or
sub
inc
cmp
adc
inc
int
xchg
mov
out
mov
fdecstp
je
scas
sbb
jmp
shll
cmpsb
mov
clc
out
xor
lock
xor
repnz
cld
lcall
movsl
inc
inc
dec
or
and
mov
lods
ja
lock
push
push
inc
push
lret
mov
mov
pusha
mov
les
jb
pop
iret
out
scas
iret
lds
cmp
push
jl
mov
call
idivl
mov
adc
add
fimull
frstor
outsb
pop
aaa
xor
pushf
out
mov
sahf
pop
movsl
insb
js
inc
mov
jbe
test
shll
xchg
adc
std
in
mov
stos
mov
or
adc
arpl
dec
mov
and
mov
cmp
push
cmp
mov
ss
pop
xor
test
cs
lods
xor
sbb
and
push
fcompl
mov
addb
ror
or
dec
push
mov
and
std
loopne
adc
stos
xchg
out
push
and
sub
cwtl
in
stos
cmp
orb
mov
xchg
lods
dec
mov
pusha
mov
aam
adc
mov
mov
icebp
shll
or
ljmp
dec
test
jg
in
das
jg
jo
in
repz
in
std
push
movsb
mov
or
lods
fiaddl
pop
mov
dec
xchg
sub
js
mov
loope
cld
mov
sub
jge
ret
sbb
xor
mov
leave
inc
out
jg
fildll
clc
dec
mov
daa
sub
cmpb
scas
pop
push
lret
sub
stos
mov
jb
sti
lock
jmp
and
ds
dec
mov
push
lea
sbb
stc
dec
lods
add
lock
cs
ror
imul
movsb
pusha
test
cmp
inc
pop
xchg
rolb
jg
nop
jle
ret
lcall
mov
sub
stc
cmp
push
clc
loopne
das
push
je
insb
hlt
add
test
push
sahf
movsb
mov
mov
sbb
push
push
push
mov
cltd
sbb
sub
xor
es
xchg
testb
out
js
xchg
adc
repnz
test
mov
jno
icebp
aas
negw
dec
and
test
fcomi
or
add
cmpsl
sub
lret
test
cmp
and
adc
aad
xchg
ffreep
gs
mov
jp
pop
lret
fxch
sub
rcr
rcrb
sbb
roll
or
jecxz
inc
aaa
iret
pop
movsl
sbb
daa
addr16
jmp
adc
scas
sub
int3
mov
sti
test
dec
int3
dec
cmp
nop
aaa
inc
mov
pop
faddp
mov
jnp
sbb
into
jle
xor
cmc
dec
outsl
adc
jmp
pop
pop
imul
xchg
xchg
lds
mov
jo
xorl
insb
dec
inc
ror
std
notl
test
or
mov
push
push
shrb
stc
xlat
mov
dec
aam
movsl
loope
rcr
xchg
scas
inc
arpl
pop
lret
cmpsl
das
sbb
xor
rclb
fldl
xchg
call
push
mov
push
loop
stos
lret
mov
mov
push
inc
jl
dec
mov
call
push
mov
and
jge
xchg
push
popf
rcrl
data16
sbb
push
sbb
push
cmp
out
xchg
mov
mov
jno
bound
push
pop
mov
aaa
not
push
popa
push
and
add
in
or
mov
aas
outsl
mov
gs
lds
fisubl
loop
clc
cmpb
icebp
xchg
jo
sahf
mov
cmovb
pop
je
cltd
imul
rcll
ret
bound
inc
or
ss
and
pop
pop
ret
aam
ljmp
je
cs
adc
sbb
pop
cld
inc
rorb
test
mov
lds
xchg
insl
lcall
les
pop
call
pop
pop
fildll
xchg
jmp
jo
jns
inc
inc
aas
inc
cmp
xchg
push
ss
cmp
pop
clc
push
cmp
inc
mov
jnp
std
and
out
sbb
jl
imul
mov
dec
es
pop
dec
loopnew
sbb
xlat
push
fimull
ss
sbb
lds
das
mov
adc
add
jne,pt
in
cwtl
outsb
scas
stos
jmp
movsb
mov
mov
jmp
cmp
push
xchg
hlt
stos
and
sahf
xor
pop
mov
fdivrl
rcl
adc
or
inc
sub
insb
popa
adc
jo
xchg
jns
adc
jb
cltd
pop
xchg
cmpsb
filds
adc
cmp
push
mov
push
imul
mov
pop
scas
sahf
mov
je
fldl
mov
movsl
sti
mov
dec
mov
xchg
lahf
out
outsb
add
jp
inc
imul
lret
pop
xchg
mov
arpl
pop
fnstcw
in
out
cltd
push
test
mov
mov
cmp
enter
add
jbe,pn
sub
push
mov
cltd
and
inc
jo
fwait
fs
imul
dec
dec
js
or
xor
mov
outsb
adc
mov
pop
or
fdivrs
outsl
jp
cmpsb
aad
sti
ret
dec
xor
mov
notb
je
sbb
inc
inc
jbe
xchg
rorl
sub
stos
mov
push
dec
and
test
jne
or
pusha
or
andb
jmp
sub
insl
push
push
jmp
push
sbb
pop
jae
stc
les
push
in
and
jb
fcmovb
data16
loope
sub
adc
lods
add
mov
add
mov
xor
and
loopne
lret
xor
insl
xchg
js
jae
pop
movsb
insb
fsubrl
push
add
repnz
inc
adc
jae
daa
push
push
mov
pop
arpl
imul
jno
cs
testl
ret
xchg
mov
leave
pop
mov
push
mov
test
fstl
pop
push
mov
insl
dec
shl
loopne
inc
xchg
mov
insl
setl
jne
cltd
sub
push
cmp
sub
add
jo
adc
inc
fnsave
rorb
test
dec
jae
out
jne
out
jns
xor
ret
test
mov
push
call
and
xor
jbe
test
add
push
icebp
adc
mov
lds
adc
fadd
sbb
xor
dec
adc
mov
jg
xchg
and
mov
fmull
mov
mov
mov
shrl
mov
daa
push
adc
xor
sub
dec
aad
sbb
xor
sub
sbb
adc
faddp
and
cmp
pop
cli
inc
cmp
ljmp
dec
sbb
pop
mov
std
and
insb
mov
or
movsl
incl
js
cltd
ljmp
mov
sets
packsswb
mov
popf
ret
add
adc
scas
add
repz
pop
pop
and
pop
call
sbb
jno
lods
aas
sbb
xor
je
outsb
test
push
xor
xor
or
jbe
fisttpll
xor
push
push
dec
xor
pop
mov
movsl
mov
jb
pop
in
aas
sub
rcr
add
jp
iret
scas
cwtl
and
js
jae
xchg
mov
iret
push
mov
xorl
pushf
mov
cmpsb
test
mov
xlat
ss
xor
or
and
mov
dec
xchg
push
mov
daa
ret
call
pop
dec
popf
mov
das
jmp
add
aas
int3
jl
stos
add
out
adc
dec
cwtl
mov
ljmp
sub
inc
in
in
adc
inc
jge
inc
rorb
adc
inc
mov
ret
iret
rol
sarb
pop
or
add
sub
loopne
aam
pop
jge
inc
cmpsb
mov
test
cmp
nop
push
mov
test
inc
xor
push
jecxz
jae
cltd
jnp
stos
push
clc
orl
sub
sbb
lods
pop
xchg
push
push
into
enter
es
loop,pn
lods
inc
xchg
pop
inc
adc
movsb
ds
adc
stc
lock
mov
push
sbb
or
repnz
stos
inc
neg
xor
push
pop
nop
shl
scas
fistps
sub
lods
adc
outsl
xchg
fadds
jae
dec
push
fnstenv
sub
sbb
jecxz
leave
sarl
das
test
sti
pushf
std
fnop
imul
pop
daa
ja
iret
mov
fdivr
fdivl
enter
inc
ja
pop
sti
data16
cmp
mov
out
pop
ds
dec
xlat
fisttpl
mov
push
scas
push
sbb
and
mov
outsl
push
mov
push
fcmove
out
and
ja
out
fcomps
icebp
fs
int
adc
cmc
fs
and
test
adc
mov
mov
lcall
cmp
cld
test
xor
pusha
lret
xor
imul
or
or
pop
adc
add
lds
jae
loope
or
and
or
aaa
daa
push
testl
loopne
shl
out
jmp
outsb
into
pop
sahf
and
mov
mov
add
clc
and
shll
cmp
add
iret
pop
xor
jae
fcmovu
dec
xchg
inc
sub
addb
mov
icebp
data16
dec
icebp
mov
popa
lock
ret
xlat
jo
enter
in
xlat
jbe
jns
inc
aad
mov
lahf
nop
push
jbe
sbb
pop
daa
ja
leave
sbb
add
mov
call
lahf
push
cmp
cmp
movsb
mov
push
fbstp
iret
and
cmp
mov
icebp
std
push
jo
sub
rclb
push
cmp
cmpsl
mov
shrl
icebp
and
scas
push
pop
aam
test
pop
xchg
dec
pop
mov
in
dec
or
popf
gs
adc
mov
sahf
insb
lds
jge,pn
sti
movsb
cltd
scas
push
std
ds
es
mull
outsl
add
ficoml
pcmpeqw
into
icebp
mov
push
lods
xor
cmp
out
mov
std
mov
fwait
push
in
mull
xor
lods
fs
pop
sbb
sub
ror
arpl
shr
fistpl
hlt
or
sahf
mov
inc
cmc
aam
movsb
test
lahf
add
lcall
out
mov
ficompl
pop
lahf
std
lahf
fcmove
mov
out
sub
sub
xor
dec
insl
sbb
dec
xor
jnp
mov
push
dec
out
xlat
es
and
mov
mov
inc
daa
inc
lods
cmpsl
in
es
add
in
and
jecxz
enter
xchg
aad
sbb
lret
mov
mov
rclb
jp
add
mov
or
cltd
dec
add
mov
sbb
mov
repnz
sub
sub
movsb
popa
cmp
fbstp
out
cld
ficompl
sub
je
mov
call
cmpsl
ja
mov
mov
popf
sbb
pushf
outsb
mov
lret
mov
movsb
outsl
rorl
sub
mov
clc
inc
mov
mov
icebp
sbb
dec
stos
aam
rol
push
sar
lock
ficompl
subb
imul
sbbb
je
js
sahf
or
and
mov
dec
fstl
jp
int
and
arpl
mull
sub
lods
roll
out
mov
adc
stos
pusha
ret
into
scas
jecxz
hlt
out
sbb
jl
outsb
push
mov
cmp
rolb
imul
rorl
push
movsb
gs
rclb
mov
aas
mov
loope
movsl
leave
pop
nop
es
add
mov
shl
out
cmpsl
cmp
xchg
dec
pushf
imul
adc
rolb
jb
test
pusha
xchg
test
std
data16
rclb
mov
pop
or
xchg
cmp
jl
arpl
add
pop
push
pop
dec
cltd
adc
adc
scas
aad
jb
jle
sar
push
and
inc
lock
aad
mov
nop
pop
ret
rcl
in
mov
imul
xor
push
jecxz
test
push
pop
movsl
int
xor
pop
int3
or
stc
jb
and
add
bound
imul
push
xor
es
sub
adc
arpl
pop
inc
xchg
popa
push
sti
in
movsl
xchg
stc
insl
xlat
push
cmpsl
insb
mov
push
and
sbb
cmp
or
ficomps
repz
push
int3
xchg
cmpsl
pop
inc
push
mov
jae
inc
idivb
xchg
in
aam
pop
lcall
cmpsb
or
xor
lods
xor
fidivl
add
pop
jne
fnstenv
pushf
or
sbb
aam
xchg
mov
pop
inc
add
test
pop
fsubrp
cli
cmp
xchg
jb
lea
outsb
icebp
push
sti
shl
dec
adc
and
sbb
mov
push
repnz
add
ret
mov
jmp
pop
out
shlb
inc
cmp
mov
sbb
or
iret
pop
daa
pop
iret
and
cmp
inc
int
mov
lahf
je
xchg
aas
pusha
mov
ret
lea
mov
dec
int3
jb
ficompl
push
and
rcr
push
pop
mul
fstpl
sub
dec
xor
mov
div
ds
add
sbb
popa
jae
jbe
mov
imul
mov
mov
je
or
insb
xor
hlt
ret
in
push
sbb
xchg
jmp
inc
dec
ret
mov
arpl
jbe
push
and
mov
mov
pop
sbb
push
loope
es
xchg
jnp
pop
jae
pop
loop
movsl
cmp
or
mov
lods
sbb
push
inc
sub
cltd
seta
mov
pop
sarl
pop
shlb
aaa
cmp
lock
add
mov
out
daa
arpl
pushf
pop
pop
or
sub
stc
aas
les
movsb
insb
jge
push
fidivrs
aad
aam
xor
enter
mov
jl
cwtl
inc
mov
dec
push
mov
sbb
nop
add
pop
sti
in
cmp
jg
jnp
icebp
add
sbbb
add
fyl2xp1
imul
pop
in
cltd
inc
xchg
mov
movq
and
sub
jg
mov
add
ror
loope
add
mov
push
or
add
popa
or
cwtl
add
push
out
mov
jecxz
cltd
sbb
and
mov
lret
lahf
and
cmp
iret
popf
callw
popf
pop
sub
jnp
cmc
test
mov
pop
cmp
sub
out
and
insb
das
xchg
scas
orl
lds
insl
pop
sub
jmp
jnp
sbb
jg
out
hlt
rclb
rorb
pop
in
in
pop
dec
enter
popa
data16
das
add
int3
sti
push
jge
push
iret
xor
add
xor
and
push
fs
and
sub
dec
sub
aam
mov
inc
dec
mov
jp
gs
rorb
jbe
stc
fwait
xchg
mov
lds
pushf
push
and
or
xchg
push
add
pop
and
mov
and
movsl
xchg
push
push
iret
stc
mulb
and
mov
test
push
cmp
mov
movsl
sbbl
repnz
sub
pop
sbb
mov
pop
adc
mov
adc
stos
outsb
dec
lock
lahf
cwtl
fs
sub
pop
sbb
aas
jp
daa
pop
ret
jb
inc
mov
ljmp
pop
pop
mov
mov
mov
lods
loop
jle
sbb
test
rorl
push
dec
pushf
xor
adc
mov
test
fsubp
or
aas
ja
sbb
imul
sbb
les
or
xchg
pop
add
cmp
push
mov
fisubrl
and
xor
ja
das
or
mov
stc
ds
xchg
sbb
mov
mov
ret
mov
fiadds
inc
aad
loop
or
cmp
scas
and
int
mov
xor
scas
push
cld
dec
rorl
shll
dec
imul
add
inc
push
xchg
rol
jnp
mov
lret
imulb
cmp
scas
inc
repnz
mov
stos
loopne
dec
pushf
lret
jp
push
pop
adc
fisttpll
mov
fsubrs
das
dec
out
pop
adcb
dec
lahf
arpl
xor
repz
fildl
ja
scas
and
in
icebp
hlt
data16
pop
ret
or
leave
mov
push
jns
mov
inc
mov
push
cmp
nop
mov
cmp
arpl
push
xor
xor
rcrl
negl
xchg
stos
pop
sbb
mov
inc
jbe
sub
jge
out
or
xchg
mov
mov
pusha
ss
in
or
mov
out
jmp
icebp
jns
lods
dec
push
sbb
hlt
xchg
fisttpl
fisubl
xchg
dec
cmp
rcl
or
int3
dec
ljmp
popa
xor
nop
dec
jne
sub
push
int3
add
or
gs
insl
xchg
push
pop
cwtl
mov
fidivrs
xchg
sbb
insb
shr
sahf
sbb
mov
mov
stos
push
cmp
cmpsb
push
push
mov
ds
cwtl
jne
data16
data16
sub
add
sub
push
insb
ret
pop
gs
aam
shlb
mov
dec
sub
test
lahf
mov
out
sar
bndldx
xchg
leave
imul
gs
icebp
mov
lret
or
out
loopne
inc
loopne
fmuls
mov
sbb
xlat
sbb
je
pushf
test
push
pop
imul
rcrb
or
ficoms
jge
xor
cltd
popa
push
div
inc
nop
mov
fcom
movsb
out
sti
pushf
dec
jmp
push
shlb
rcrb
pop
leave
test
push
add
shr
sarb
and
push
lret
xchg
cmc
lea
imul
push
ss
cmp
dec
dec
ljmp
insb
aad
out
jo
push
pop
dec
cmp
repz
repnz
push
into
dec
fstl
cmp
xor
mov
mov
dec
xchg
in
mov
in
mov
sub
mov
ja
cmp
pop
cld
push
fnsave
push
jae
mov
adc
ret
sub
add
add
loope
lret
je
pop
loop
xchg
es
jne
pop
sti
inc
jg
fldl
test
scas
nop
lods
mov
popa
fwait
sub
xor
out
and
int3
and
mov
test
iret
int3
sbb
stc
xchg
inc
push
subb
or
sub
stos
nop
lea
add
and
addr16
jmp
push
mov
and
jno
inc
sbb
int3
push
pop
ret
inc
mov
dec
jle
mov
daa
fmull
cmc
mov
outsb
mov
loopne
or
mov
dec
dec
push
jns
push
les
inc
adc
jno
xchg
addr16
cld
sahf
out
cmpsb
jno
loope
pusha
insl
mov
adc
xor
inc
and
push
sbb
xchg
scas
jmp
push
iret
inc
divl
or
adc
add
lods
movsb
mov
outsl
mov
add
dec
jp
inc
xchg
mov
mov
popa
xlat
movsl
nop
sahf
inc
inc
iret
xor
adc
movl
push
add
mov
aad
xlat
adc
xchg
lods
xchg
add
movsl
out
sahf
adc
ret
addb
ds
sbb
insl
pop
out
cmp
jle
repnz
mov
lea
popa
das
push
dec
push
and
mov
cmpsl
push
xchg
int
dec
nop
test
ret
add
xor
clc
sub
lret
cli
mov
addr16
add
incb
xchg
cmpsl
fistps
inc
dec
pop
orb
loopne
rorl
les
lock
lret
lock
sbb
orb
popa
repz
xchg
push
mov
push
xchg
pop
out
sub
cmp
test
pop
push
adc
inc
nop
test
sub
js
and
sub
rcrb
lock
mov
or
clc
mov
shr
ljmp
popa
inc
adc
pusha
loopne
rcll
scas
xchg
sub
bound
mov
imul
xor
repnz
adc
cmc
sbb
es
xor
add
pushf
pop
out
popf
fstpt
das
dec
loopne
mov
inc
sub
jo
mov
insb
fcmovnb
sub
mov
outsb
inc
inc
and
add
inc
int3
incb
fists
mov
insl
jns
adc
mov
mov
enter
and
sbb
dec
dec
add
cld
clc
add
mov
mov
mov
lock
or
cmp
cmpsl
aam
leave
xor
sbb
push
jmp
aam
imul
imul
push
leave
jae
hlt
push
adc
xchg
in
pop
xchg
jo
aam
lods
ja
mov
mov
push
fs
es
pop
jg
pop
fsubrl
adc
loope
push
pop
add
jo
cmpsl
mov
push
js
adc
mov
clc
jmp
mov
adc
xor
xchg
push
pop
jns
cwtl
push
ss
pop
sti
xor
pop
push
and
mov
jnp
popl
mov
lea
dec
lds
push
aad
or
pop
push
add
icebp
cmp
sub
adc
pop
push
inc
push
dec
mov
ret
std
and
test
mov
loopne
pop
sub
dec
pop
xor
jmp
jb
mov
call
fdivl
hlt
xor
push
imul
fstl
es
mov
mov
sbb
daa
std
ret
pusha
cwtl
fidivrl
adc
dec
int
xor
gs
cmp
inc
push
fbstp
push
dec
or
inc
jp
aad
pop
andb
aad
xchg
jmp
insl
sbb
mov
test
cmp
add
fucomip
pop
jno
cli
xchg
xchg
xchg
call
adc
adc
iret
shrl
pop
sbb
gs
ds
push
in
mov
out
mov
adc
test
dec
sub
out
lods
icebp
les
xor
dec
iret
loope
jno
outsl
aam
sub
sub
push
aas
icebp
in
rol
xor
out
rclb
stos
ret
hlt
pop
jmp
xchg
cmp
fstl
mov
rcr
jae
inc
dec
sbb
mov
adc
out
lret
sbb
jno
pusha
or
cmp
mov
inc
jb
sub
lods
push
mov
or
loopne
cli
mov
or
and
test
repnz
in
rcrb
cmp
mov
sarb
jl
test
lahf
push
aam
shrb
addl
js
ja
subb
xor
gs
jmp
xchg
iret
cmpsl
xchg
jo
jl
mov
push
adcb
cmp
jns
xor
mov
punpckldq
push
push
cmpb
sbb
mov
pop
sub
in
cmp
pusha
mov
insl
imul
nop
mov
dec
xchg
lds
pop
or
xor
aas
pop
xor
mov
mov
push
fs
cmp
ss
inc
mov
ficomps
sub
push
and
inc
out
shl
int3
cs
sti
mov
mov
mov
mov
sbb
mov
icebp
mov
cltd
and
xchg
adc
pop
es
out
mov
add
pop
lret
and
adc
leave
call
pop
push
notb
aad
xchg
jbe
xchg
cmp
shlb
xchg
sbb
and
loope
out
dec
dec
je
push
xor
popf
sub
ret
mov
mov
out
jno
sahf
xchg
outsl
dec
push
sub
add
fldcw
cltd
xor
sar
pop
je
les
jns
or
inc
iret
sub
inc
mov
pop
sbb
xor
mov
aaa
imul
out
lods
mov
mov
in
mov
add
pop
mov
mov
jmp
sbb
lret
sbb
into
dec
inc
sbb
or
rcr
add
pop
xchg
adc
rcrl
enter
pop
es
test
mov
cmp
jl
mov
sbb
jbe,pn
pop
sbb
ss
rcrb
mov
aas
sub
and
jb
enterw
stos
and
enter
xchg
test
jle
jle
fsubl
in
in
push
push
rcll
test
xchg
push
int3
out
scas
or
and
les
ja
ret
loopne
aad
test
jge
jecxz
inc
mov
mov
aam
test
in
xor
xor
movsl
push
mov
dec
test
sbb
repz
jmp
in
sub
and
insb
jp
add
inc
push
into
lret
sbb
pop
push
loope
je
sub
sub
into
cwtl
adc
pop
add
pop
cmp
dec
hlt
shl
dec
int
mov
lcall
inc
daa
mov
outsl
fisubrl
jg
and
jle
add
push
push
push
mov
sbb
rcrb
dec
xor
out
das
adc
in
sub
or
sub
lods
or
ja
add
or
inc
test
xchg
sahf
xor
sub
jbe
mov
lahf
movsb
jo
sahf
imul
je
xor
cmp
rcrl
push
mov
cmpsb
sti
mov
mov
daa
scas
xor
mov
inc
xor
int3
pusha
adc
dec
xor
add
xlat
test
mov
daa
inc
pop
cltd
stos
xchg
sub
test
repz
loope,pt
pop
dec
push
pop
mov
mov
popa
movsl
ret
sub
mov
mov
fidivl
iret
lock
stos
lods
mov
lods
int
jl
dec
sbb
ja
jcxz
test
inc
clc
mov
mov
jne
stos
cmpsl
cmp
mov
inc
dec
loop
mov
add
sub
adc
pop
mov
mov
mov
lds
cmp
out
lods
inc
pop
jno
std
jl
mov
imul
xlat
jo
adcb
ja
ret
mov
push
dec
cmp
mov
lahf
jmp
aam
shlb
pop
push
out
mov
sarl
pop
in
and
cmp
out
add
cmp
jp
or
syscall
push
and
mov
lock
loopne
xchg
dec
test
fcoms
push
ss
mov
repz
mov
pop
cmpsl
cwtl
dec
xor
xor
push
imul
icebp
dec
sbb
js
lock
lahf
mov
inc
int3
aas
pop
sub
and
test
add
mov
imul
into
push
push
and
add
and
stos
fstpl
in
mov
add
dec
dec
mov
mov
into
mov
out
push
cmpb
dec
hlt
push
sub
mov
jge
lods
clc
out
jecxz
aad
aaa
faddl
dec
or
dec
and
clc
rclb
fcom
lds
mov
xchg
adc
loope
inc
mov
insl
dec
pushf
cwtl
in
xor
push
hlt
nop
repnz
cmp
push
cwtl
imul
pushf
aaa
fcmovu
jl
jne
adc
or
daa
scas
sub
ds
jl
jg
push
mov
fnstsw
call
das
repnz
mov
into
inc
adc
and
insl
cmp
insb
pop
out
xlat
es
jmp
mov
push
out
insl
pop
add
sub
jle
adc
aam
cmp
jl
sub
fwait
in
cmp
sub
lds
icebp
and
loope
mov
out
les
ljmp
add
lret
stos
add
push
sub
pop
push
push
arpl
or
add
and
pop
loope
mov
mov
xchg
xchg
repnz
jae,pt
cmc
jns
cmp
push
fs
movsl
jecxz
sbb
mov
stos
bound
add
add
sub
aam
adc
movsl
xor
repz
inc
es
popa
xor
xor
inc
rcll
push
out
in
std
jnp
sbb
mov
dec
mov
sub
stos
dec
mov
cs
pop
int
push
andl
xchg
lret
fdivl
sbb
addr16
pop
sub
push
and
mov
and
xor
cmp
nop
out
adc
decb
in
push
pop
inc
inc
in
adc
in
fadd
sahf
sub
adc
mov
ret
inc
loopne
cvttps2pi
push
movsl
cmpl
mov
add
cld
mov
push
js
push
cmp
shll
xor
pop
pop
mov
fs
xor
imul
std
enter
mov
jmp
clc
jmp
jp
enter
cmp
nop
lret
and
or
iret
and
js
push
imul
test
mov
imul
int
int3
lods
mov
jge
ficomps
or
hlt
dec
jne
hlt
shrb
mov
mov
notl
jo
xor
mov
inc
add
mov
mov
cmp
roll
inc
push
add
pop
mov
jae
fsubrs
push
jl
pop
xchg
lods
ret
daa
ljmp
mov
or
push
scas
jg
outsl
cld
pop
pop
mov
dec
sbb
movsl
aaa
lods
jp
fs
gs
adc
aaa
mov
adc
pop
sti
es
jae
dec
imul
cmp
bnd
sbb
filds
repz
aas
leave
mov
ret
and
cmp
int
jg
pop
inc
mov
and
ljmp
sub
push
cmp
cmp
out
dec
and
shrl
push
mov
fstl
daa
or
inc
push
xor
fwait
dec
adc
movsb
mov
mov
movsl
ds
pop
out
adc
xchg
popf
sub
mov
push
and
pop
and
inc
mov
sbb
jl
mov
and
iret
insl
cli
inc
pop
scas
jle
xchg
fists
mov
rcl
jecxz
mov
repnz
push
dec
outsl
sbb
sbb
mov
xchg
cltd
cmc
aas
mov
icebp
pop
sub
jne
out
test
push
pop
ficompl
sub
lods
icebp
loope
rorb
testb
out
push
dec
cmp
outsb
enter
xchg
mov
jp
rolb
sbb
outsb
scas
enter
pop
inc
inc
adc
dec
cli
jle
in
mov
adc
loope
out
aad
and
adc
add
xor
lods
je
pop
xor
xor
jns
mov
xor
push
mov
xor
je
mov
jge
dec
mov
js
sub
xchg
and
push
mov
adc
mov
jmp
xchg
xchg
and
sub
add
sti
inc
scas
push
or
cmp
test
in
in
aas
cmp
enter
out
leave
xor
mov
inc
jmp
rcr
scas
cld
popf
or
pop
sub
xchg
std
loope
adc
jnp
mov
clc
pop
push
cmpsl
ror
and
repz
sbb
mov
jnp
push
fisttpll
testl
cltd
stos
mov
push
test
cmp
pop
gs
sbb
xchg
ss
shrb
jne
mov
xchg
movsb
inc
mov
cmp
sahf
or
pop
inc
fistpll
add
out
ss
movsl
jns
pushf
faddl
jmp
stc
insb
test
jb
insb
jle
pushf
jecxz
movsl
pusha
pop
fisttpl
cs
mov
adc
pushf
inc
push
or
jl
scas
fcomip
xchg
outsl
in
ss
dec
dec
mov
xchg
dec
jne
mov
call
mov
das
pushf
iret
lods
in
sub
cld
and
aam
inc
or
xor
sarl
je
outsl
scas
pop
mov
push
arpl
dec
popa
ret
push
pushf
movsl
ret
mov
dec
cmpsl
lods
cmovs
sub
enter
xchg
push
mov
jecxz
mov
lods
xchg
inc
loopne
out
cmc
xchg
sub
xor
pop
mov
sub
push
xor
mov
data16
int3
pop
das
ja
dec
nop
ret
fstpt
popf
jo
adc
xchg
xor
addr16
jle
cmpsb
jle
lcall
adc
mov
mov
or
popa
cli
sbb
inc
repnz
imul
movsl
push
sbb
push
ss
mov
mov
dec
mov
sbb
rcrb
sbb
loopne
inc
imul
icebp
mov
frstor
adc
ljmp
push
push
das
jns
lods
xchg
push
mov
int3
stos
repnz
hlt
jne
and
push
sub
repnz
in
lods
call
dec
cltd
pusha
lret
ret
dec
xor
jae
ds
jae
xlat
mov
or
dec
insl
call
push
arpl
insb
jl
cs
mov
lea
mov
pop
mov
int3
js
lcall
mov
adc
addr16
dec
jbe
sub
scas
and
orb
fstl
ret
push
jg
lret
jg
mov
imul
cmpsl
sbb
mov
inc
push
pop
mov
or
popa
enter
pop
sbb
gs
das
lahf
xor
xchg
stc
test
outsl
fidivrs
adc
xchg
in
rorb
xor
pop
test
xor
cs
aas
gs
daa
or
clc
jae
cmp
jg
fld1
mov
jnp
or
imul
shrb
js
int3
pop
sahf
std
jns
sahf
fisubrl
cmp
mov
dec
pop
or
or
xor
xchg
dec
in
mov
pusha
fildl
xor
adc
lret
and
jg
push
fnsave
xchg
push
xor
push
std
frstor
inc
shl
clc
loope
push
add
sbb
lock
lret
and
and
mov
lds
pop
or
pusha
xchg
xchg
mov
mov
insl
inc
iret
testb
lret
xor
dec
mov
mov
fwait
hlt
adc
out
pop
pop
adc
je
dec
mov
ret
in
sti
sbb
pop
clc
test
mov
pop
pop
and
jno
sbb
ja
repz
lcall
or
jmp
jb
or
and
xchg
jg
insb
iret
xor
hlt
or
sbb
and
add
ja
inc
sbb
or
adc
loopne
jg
aas
cmp
lret
std
mov
outsl
mov
mov
cmpsb
leave
jnp
pop
mov
lock
mov
inc
in
xchg
std
mov
jl
stos
mov
adc
mov
add
std
or
fistpll
dec
shl
adc
cmp
xor
rcr
push
enter
xor
and
rol
ss
cmp
cwtl
mov
js
jp
or
aas
fiadds
gs
imul
add
lret
or
movsb
inc
mov
mov
cmp
outsb
lea
push
push
je
jecxz
xchg
pop
out
push
test
out
lea
sahf
jmp
xchg
and
aaa
int
sti
leave
cltd
cmpsb
notb
in
lcall
push
adc
jle
xor
mov
jbe
dec
fiaddl
sub
mov
xchg
lret
xchg
pop
enter
std
or
jne
test
aad
ds
push
addl
inc
sbb
lock
push
pop
cld
mov
out
test
in
out
jmp
daa
sbb
mov
mov
cltd
js
sub
jo
dec
rol
test
and
bound
jno
hlt
repz
jbe
lods
pop
mov
push
lahf
push
sub
mulb
fwait
stos
movsb
add
and
inc
insl
add
fcoml
push
or
cmp
ja
cwtl
push
mov
xorb
xchg
cld
mov
test
data16
outsb
ss
sbb
mov
mov
xchg
jp
lods
dec
mov
add
popw
or
adc
push
adc
adc
cmp
xchg
cmpsl
push
add
fnstenv
shlb
push
xor
push
and
cli
int
push
sbb
js
push
pop
stos
sub
cmp
or
arpl
dec
jg
and
daa
push
addr16
xor
cmp
sbb
xchg
sub
lahf
jno
jecxz
mov
lock
jp
mov
adc
cltd
xchg
inc
call
adc
rclb
push
sub
ret
call
sbb
out
inc
scas
mov
dec
fnstsw
jb
inc
shr
push
sbb
cmc
jge
mull
ss
or
insl
aas
fstpt
mov
shl
js
add
and
das
cmc
lock
cmp
sub
andl
jo
ret
pop
or
xor
mov
adc
add
inc
fcompl
ja
out
pop
and
leave
mov
fstl
ja
bound
test
mov
sbb
or
dec
mov
dec
shrl
loope
ret
gs
cld
loop
nop
inc
mov
fimull
pop
adc
mov
out
fnstsw
xor
xor
dec
movsl
cli
roll
shlb
dec
fsubs
push
jnp
mov
xor
jb
mov
sbb
sahf
dec
mov
out
mov
xchg
jo
push
fwait
mov
inc
mov
fabs
sbb
sbb
inc
insl
fsubrl
fcomi
push
int
push
cltd
cmp
or
aaa
sbb
xchg
xchg
insl
in
jg
mov
pushf
xchg
dec
bound
icebp
loop
adc
imul
rorl
jg
sbb
mov
sbb
and
test
loop
and
pop
xchg
push
xchg
xchg
fsubs
mov
fmull
movb
lods
fiadds
jecxz
lcall
xor
jecxz
pop
iret
clc
pop
lods
adc
jl
push
adc
fsubrp
aas
cmpsl
xchg
outsb
mov
lds
sub
jns
jae
dec
adc
orl
pop
jp
jl
loop
cmpb
icebp
stos
jae
lea
dec
cmp
outsb
or
cli
add
popf
and
adc
into
xchg
mov
mov
ja
mov
out
lahf
xor
testl
int
loope
lahf
xchg
call
mov
jecxz
pop
int
pop
stos
push
rcll
scas
fstps
sub
cmpsl
pop
xchg
mov
pop
mov
pop
xchg
fsubrs
sub
mov
jae
prefetch
or
out
xchg
sti
and
pop
sub
lock
xchg
mov
fs
call
cmp
mov
and
popa
fidivl
pop
sbb
sar
pop
insl
rol
inc
jno
in
mov
inc
movb
pop
pop
fwait
sbb
push
cmp
jae
mov
cwtl
mov
repnz
sbb
jg
xor
call
aaa
push
stc
and
enter
iret
js
sub
ss
test
loop
xchg
aas
jg
rorb
sti
paddb
aas
ljmp
gs
jmp
pop
cmp
enter
fdiv
pop
enter
xor
mov
mov
test
cs
cmp
xchg
jecxz
andl
mov
lea
aam
stos
push
push
cmp
imul
push
push
daa
inc
adc
in
mull
jbe
fbstp
or
jbe
stos
insb
xchg
mov
pop
loope
mov
jo
ret
sub
icebp
adc
jl
mov
mov
cs
imul
jns
jecxz
push
jne
xchg
popf
xor
in
in
jb
nop
and
insl
pushf
xchg
inc
leave
out
cs
or
insl
push
jl
rol
and
pop
cmp
sub
adc
cli
inc
pop
mov
xchg
push
jae
cmp
out
mov
test
les
inc
stos
mov
xor
cmp
scas
dec
jne
add
xor
inc
insl
xchg
xchg
sub
mov
andl
or
fsub
ret
xchg
mov
in
out
sbb
mov
pop
mov
nop
pop
sub
clc
int3
ret
sbb
add
dec
dec
sbb
aam
cmp
xchg
cmp
mov
cmp
aad
mov
ljmp
mov
data16
lcall
pop
and
scas
clc
enter
jmp
adc
ja
clc
stos
lcall
ljmp
stos
push
cmp
mov
rolb
dec
in
cmpsb
in
adc
jl
xor
add
gs
les
jb
loope
mov
mov
test
inc
popa
and
push
xchg
leave
sahf
inc
mov
mov
dec
mov
dec
addr16
loop
pop
cltd
notl
ja
mov
scas
in
xchg
ds
jns
mov
repnz
push
ljmp
pop
pop
add
adc
icebp
xor
fildll
xchg
cmpsb
mov
stos
pop
movsb
cmpsl
hlt
inc
adc
pushf
cld
andb
jbe
dec
in
cmpb
fisttpll
shrb
mov
xchg
fwait
xchg
test
sbb
aaa
xchg
bound
push
jns
aas
xchg
in
jae
int3
fisubrl
inc
inc
dec
ds
inc
and
leave
sub
cli
aad
pop
pop
mov
jae
xchg
sub
rcr
movsl
xchg
dec
pop
cmp
cs
imul
push
mov
sahf
push
add
xchg
pop
test
and
sbb
mov
cmp
jge
test
sub
inc
sbb
scas
fidivs
aam
outsl
add
lcall
or
mov
outsb
xchg
add
mov
popa
jp
movsl
pusha
mov
popa
push
mov
lea
add
pop
xchg
dec
cmp
test
stos
pop
faddp
xor
or
or
inc
pop
xor
idivb
cmp
mov
hlt
sbb
fdiv
mov
mov
pop
jae
in
js
sarb
aas
inc
mov
fildll
mov
into
add
push
pop
lods
fstl
popa
inc
dec
mov
dec
pop
ficomps
mov
push
jmp
aad
xor
out
les
xchg
pop
loopne
lahf
push
ret
xor
xchg
push
ret
pusha
out
stc
daa
insb
mov
dec
cltd
jns
js
push
ret
xchg
sub
pop
cli
cmc
sub
imul
mov
inc
mov
xchg
test
push
rcr
ja
out
jge
cmovb
loopne
daa
dec
clc
mov
push
adc
sbb
dec
outsb
push
cmp
push
test
or
cltd
idivl
fsub
imul
mov
ret
test
sub
clc
ja
loopne
into
sahf
push
sbb
mov
pushf
add
fstps
cmp
jle
push
and
insb
popa
pop
adc
or
mov
scas
rcrl
cmpl
or
pop
mov
lea
das
cmp
cmpsl
mull
out
test
xchg
test
sbb
imul
movsb
xor
fxch
pop
push
faddl
and
pop
out
lods
fdivr
in
icebp
mov
ljmp
xor
adc
sbb
push
mov
sub
or
xor
pop
aad
ljmp
sub
inc
sti
fwait
adc
imul
fadd
xchg
push
sub
scas
lods
insl
out
popf
aam
pop
pop
movsl
sbb
mov
arpl
pusha
sti
cmp
mov
add
js
add
shl
test
pushf
mov
sub
insb
push
adc
xchg
sbb
lock
test
adc
stc
mov
and
dec
fwait
int3
xor
call
push
je
jge
xchg
sub
sarl
pop
ja
int3
mov
js
pop
dec
cmc
xor
fs
jl
and
xchg
ret
imul
push
cmp
in
out
and
inc
push
jnp
ret
imul
pop
sub
dec
ljmp
mov
insb
mov
mov
pop
mov
popf
daa
out
push
mov
loopne
jmp
push
lahf
jno
in
jns
push
nop
mov
popa
pop
test
add
sbb
sub
cmpl
xor
stc
fstpl
push
das
cs
shlb
adc
push
pop
push
xchg
addl
clc
or
in
pop
sub
push
fildl
push
inc
add
push
inc
sbb
ret
div
cmpsl
pusha
cmp
int
xor
cwtl
sarb
movsl
and
les
stc
das
mov
inc
mov
mov
sahf
int
jmp
dec
mov
or
popf
into
pop
out
jle
jge
inc
xchg
std
pop
aad
jnp
fs
scas
pop
stc
aaa
in
rcr
xorb
shll
pop
add
mov
fsubrp
xchg
jns
cmp
or
lcall
or
movsl
out
and
les
mov
xchg
fstpl
push
stc
push
xor
pop
daa
jmp
pop
xor
dec
pop
aas
sti
addr16
movsb
push
lret
sbb
stc
call
aas
cwtl
nop
das
lods
fcmovb
mov
xchg
sub
add
mov
xlat
aas
shlb
das
sbb
mov
cmp
lock
outsb
sti
mov
push
xchg
bound
test
ja
mov
mov
mov
xchg
int3
and
push
pop
push
xchg
data16
fsubl
lcall
movsb
and
and
or
cmpsb
mov
lret
scas
mov
das
mov
stc
push
xor
sbbl
mov
pop
cwtl
jmp
inc
push
mov
ja
inc
xor
fstpl
push
out
mov
sub
rcll
int3
stos
mov
aas
sbb
test
sarl
mov
fistps
mov
je
xchg
leave
shl
add
fnstcw
and
aad
jno
pop
out
xchg
jge
sbb
sub
dec
ds
mov
inc
mov
push
stos
push
je
cmc
jg
aam
xor
xor
xchg
lock
dec
sbb
out
xchg
je
test
dec
inc
cld
gs
add
and
push
lahf
xor
call
test
test
scas
jmp
mov
xlat
fcomip
ret
xor
cmp
leave
ja
inc
stos
jo
scas
dec
into
pusha
ja
out
cmpsb
scas
cmp
lods
mov
negl
fidivrl
jo
daa
es
push
or
mov
mov
std
jno
cmp
imul
ljmp
mov
arpl
lcall
mov
sbb
stc
std
ror
out
mov
stos
cmpsb
and
inc
mov
lahf
mov
ds
xchg
pop
add
or
sub
sahf
push
test
inc
or
jae
lods
mov
lods
fnclex
adc
movsl
imul
in
xlat
faddl
pop
mov
sahf
mov
sti
in
add
jo
inc
aad
stc
xchg
inc
add
cld
push
leave
aam
cmp
cld
mov
add
push
adc
clc
imul
push
lret
lods
xor
lods
xchg
add
mov
mov
adc
arpl
xor
out
out
inc
sarb
xchg
adc
xchg
rolb
push
out
in
pushf
imul
mov
roll
mov
mov
add
sbb
adc
push
sbb
mov
out
imulb
cmp
fdivp
pop
gs
push
int
rcrl
or
or
cs
add
fldenv
jo
cltd
push
mov
and
xor
mov
xchg
adc
or
inc
les
and
and
xlat
push
mov
sub
jno
leave
sub
cmpsb
addl
loopne
mov
aas
jecxz
cwtl
leave
dec
inc
cmp
in
add
pop
jno
mov
pop
loop
out
mov
pop
add
repnz
call
and
lcall
pusha
test
pop
pop
lcall
std
enter
out
stc
xchg
mov
sbb
add
push
lahf
sub
cmp
or
mov
loope
pop
cs
sub
push
add
mov
cmpsl
js
inc
sub
ret
push
cmpb
inc
and
jo
test
or
stos
pop
xchg
into
and
pop
aad
sbb
fidivrl
push
fisubs
pushf
out
and
btr
fsubl
mov
cld
lods
dec
mov
jmp
stc
stos
shll
or
sbbb
adc
mov
sbbb
xchg
sbb
vxorps
pushl
clc
loope
cmp
in
dec
xchg
add
inc
jle
mov
in
xchg
fadd
negb
int3
aaa
mov
or
or
and
lea
inc
clc
cmpsl
push
add
cmpsb
movb
mov
mov
xchg
sub
xchg
int
das
dec
xchg
hlt
push
xorl
cmp
in
loope
movsb
or
sub
jmp
or
lret
inc
or
xor
xlat
or
mov
add
mov
lods
ds
cmpsl
ss
inc
int3
jle
mov
imulb
icebp
mov
push
imul
mov
sbb
ljmp
in
dec
js
add
sub
adc
xchg
adc
movsb
pop
xor
sub
dec
cmp
or
add
aad
sbb
mov
leave
add
movl
addr16
popf
jo
xchg
fwait
and
push
xor
test
jo
sub
lahf
pop
sub
jbe
jnp
push
jl
testb
mov
mov
sti
mov
and
push
add
push
in
mov
adc
jg
adc
or
push
lret
mov
lret
loopne
mov
dec
push
int
iret
mulb
push
mov
stos
loopne
sbb
dec
jmp
jp
cmp
and
js
pop
adc
adc
push
xchg
std
push
cmp
mov
repz
xor
movsb
test
pop
mov
sbb
jbe
mov
rcrb
lret
or
lret
hlt
push
daa
cs
inc
sti
xor
jge
subps
pushf
xchg
out
das
test
loope
scas
fiaddl
xchg
imul
arpl
cmp
fldln2
in
cmp
es
jle
fscale
out
jb
shl
and
aad
test
psrld
mov
sbb
dec
sbb
lods
sbb
pop
sub
cmpsb
testl
jmp
stos
aad
jb
out
sub
pushf
shrl
frstor
pop
mov
ja
inc
mov
xchg
les
mov
sub
cmpsl
jge
sbb
out
dec
out
pop
or
xor
out
jmp
cmpsl
aad
mov
push
push
dec
std
fsubrp
lock
adc
testb
mov
inc
add
pusha
jnp
jno
das
xor
mov
mov
inc
fldcw
insl
push
stos
sahf
fcmovnbe
jns
mov
stos
dec
repnz
repnz
inc
cli
inc
cs
fists
xorl
lods
cwtl
inc
cli
cmp
and
out
lret
sub
ja
cltd
clc
xor
sbb
lods
in
mov
xor
xorl
add
jmp
jnp
cmp
out
sahf
mov
insb
imul
jns
aam
adc
mov
fcoml
dec
fistps
out
divl
aas
clc
les
mov
lcall
pop
popa
cli
pop
jmp
adc
or
add
push
cmp
in
xlat
fs
loopne
push
mov
or
imul
shrb
enter
mov
add
mov
loop
das
fwait
xor
popw
lods
dec
dec
dec
cmp
sub
adcl
pop
cmp
sbb
xchg
xchg
adc
jp
push
fstl
add
mov
xchg
xchg
ret
adcb
negb
jle
lea
jecxz
dec
dec
pusha
addr16
in
movmskps
sti
imul
xor
jg
add
jb
aas
jecxz
xchg
xchg
mov
cmpsl
mov
xor
mov
je
pop
cmp
xchg
shll
test
test
and
les
ret
pop
js
mov
pop
add
sbb
mov
daa
cmp
out
test
mov
inc
ror
fiadds
addb
in
leave
inc
inc
mov
push
mov
push
imul
insl
mov
cmc
add
dec
mov
stc
mov
sub
xchg
jle
je
test
add
lods
jge,pt
dec
sub
out
aad
jo
mov
mov
lds
sub
pop
push
lds
or
xchg
jl
leave
and
cltd
adc
mov
cmp
jl
jns
stos
dec
jb
in
bound
fwait
out
mov
or
sbb
push
cmp
xor
das
mov
les
and
add
ja
xorb
sti
cmp
add
adc
sbb
push
mov
or
or
addl
loope
in
xor
fstl
mov
fcom
xchg
pop
outsb
jl
test
enter
pop
inc
ror
pop
xor
enter
dec
test
mov
sti
cld
subb
in
jbe
testb
dec
mov
dec
mov
fucomp
lods
mov
dec
pop
mov
and
ljmp
mov
in
mov
das
or
jl
inc
ficoml
inc
pop
sbb
pop
add
lahf
sbb
sbb
iret
inc
fidivrs
xchg
push
jg
pop
jmp
pop
fwait
inc
and
pop
pushf
incl
repnz
adc
lret
jb
mov
xchg
mov
xchg
movsl
mov
xchg
push
lock
mov
jo
lahf
insl
dec
fwait
sub
sbb
mov
mov
mov
mov
mov
ds
adc
imull
je
push
sti
xor
fs
ret
je
xor
shrl
cmp
pop
cmp
jl
popf
pop
mov
push
xchg
ss
xchg
pop
jbe
push
stos
icebp
xor
inc
add
add
sbbb
ret
setp
mov
aad
xchg
mov
insb
cld
sbbl
test
mov
inc
bound
pop
mov
popf
fsub
loope
mov
mov
mov
or
add
xorb
cmp
sub
cmp
fiadds
fmull
add
arpl
dec
add
pop
and
loopne
xor
push
pop
cltd
fadds
pop
enter
daa
out
test
xchg
xor
jns
dec
cli
push
mov
lret
xor
and
push
jmp
push
in
test
xchg
cmpb
call
lret
hlt
sub
add
stc
rolb
pop
in
scas
mov
jl
mov
mov
bound
mov
dec
jo
lods
dec
cmp
outsb
cmpps
xor
imul
sub
arpl
das
inc
out
cwtl
std
and
testl
xchg
in
cmp
cs
cmpsb
push
jb
xchg
jl
es
inc
mov
sub
push
mov
mov
mov
pushf
aas
imul
fbld
rorb
and
xor
and
call
mov
adc
add
pop
repz
addr16
cmpsb
gs
insl
pop
adc
jge
jbe
dec
stc
adc
movsb
pop
xor
cmp
test
imul
xchg
jp
std
pop
ljmp
inc
dec
xchg
mov
loope
dec
and
and
int
add
mov
in
pop
int3
pop
mov
cmpb
adc
in
sub
inc
test
ja
jmp
loope
sbb
dec
mov
movsb
out
std
je
inc
pop
inc
ja
inc
mov
jl
fs
mov
sahf
fiaddl
push
adc
into
inc
xor
shl
insb
fwait
pop
fisttpll
jne
das
clc
sbb
sarb
lods
mov
outsl
dec
inc
rcrl
adc
jge
jg
in
lock
pushf
inc
cwtl
mov
in
jge
icebp
xchg
xchg
push
mov
add
lret
mov
push
pop
call
in
loopne
push
in
sahf
loopne
mov
adc
mov
fildll
add
cli
cmpsb
mov
jmp
push
adc
jge
decl
xchg
jbe
add
jno
and
jno
nop
push
enter
aam
jae
adc
push
pop
hlt
mov
sbb
fdivl
es
inc
push
int
mov
subb
adc
xor
xor
mov
cmpsb
push
or
stos
idivl
outsb
dec
lret
pop
ret
sub
mov
add
and
mov
pop
xorb
in
inc
fistpll
mov
fstpl
pushf
cmp
adc
inc
shl
rclb
rclb
inc
add
mov
aad
xor
xor
xchg
xchg
pop
dec
out
add
in
int3
sarb
das
push
repnz
jb
dec
clc
dec
aam
sub
popf
push
addr16
push
ljmp
sarb
dec
xor
test
div
outsb
push
out
sbb
imul
xor
mov
mov
rclb
imul
xor
jo
add
adc
icebp
mov
jle
popf
inc
in
push
or
das
push
mov
iret
imul
push
pop
loopne
fnstenv
jge
shrb
std
push
imul
or
into
mov
cmp
mov
or
repnz
cmp
adc
loopew
cmp
push
or
imul
jne
iret
push
aas
push
cs
stc
sbb
adc
push
imul
inc
and
fisubs
sub
push
sub
out
shl
out
rcl
add
push
ljmp
jecxz
sbbb
cltd
fstpt
ficoms
or
cmp
aad
fldl
mov
inc
pop
adc
push
std
pushf
pop
das
stos
lea
shrb
cwtl
pop
sbb
lock
movsb
mov
xchg
cmp
and
or
pushf
aas
insb
xchg
jb
xchg
jp
jmp
loop
jae
pop
mov
movq
pop
ja
sti
jb
repnz
mov
cmp
cmpsl
insl
mov
cmp
addr16
sarl
push
mov
mov
adc
adc
jbe
inc
inc
add
fadds
mov
call
dec
int
xchg
testl
xchg
lahf
sbb
sbb
jns
cs
loope
mov
cmpsl
mov
xor
sbb
push
sub
cmp
push
popa
popa
aad
insl
lahf
and
and
xchg
sub
fildl
scas
shl
lahf
adc
data16
and
sti
xor
out
pop
inc
pop
inc
in
xlat
sbbl
popf
fsubrp
ret
xor
sti
add
pop
cmpsl
dec
lcall
lock
es
das
jp
test
aaa
ret
cs
mov
arpl
inc
nop
and
pop
mov
cmc
call
movsb
push
rol
js
cmpsl
dec
lods
or
test
lods
popa
xchg
xchg
sub
cwtl
clc
xchg
lahf
xchg
js
push
cmp
fs
jb
xor
ret
mov
xorl
sbb
add
lea
mov
sbb
stos
inc
aaa
bound
push
lahf
cwtl
push
sahf
inc
mov
sub
pop
pop
or
ss
in
add
negl
dec
rorl
inc
stos
dec
mov
loopne
push
arpl
iret
das
adc
adc
push
bound
adc
jl
mov
adc
cmp
add
pop
and
sbb
xor
add
lahf
mov
sbb
pop
xorl
adc
jns
xchg
adc
xor
mov
out
aaa
push
mov
mov
inc
push
jl
add
loope
xchg
fs
pop
loop
jnp
cmpsb
cli
outsb
sub
je
lcall
ret
and
scas
arpl
popa
mov
movsl
xchg
dec
rorb
adc
ja
dec
or
in
rcll
jae
sub
sti
rorb
push
xchg
outsb
jne,pt
negl
or
add
mov
lcall
xchg
js
inc
js
xchg
fwait
mov
push
add
xor
inc
push
adc
icebp
lock
loopne
or
xor
imul
add
fidivrs
and
xlat
push
repnz
inc
jg
out
jae
dec
or
mov
xor
lcall
push
out
movsl
pop
aaa
dec
mov
leave
and
lcall
xchg
fidivl
xchg
out
pop
sub
push
push
mov
rcl
add
je
dec
mov
in
cmpsl
jmp
or
mov
mov
xchg
pushw
cli
mov
mov
pop
ror
int3
out
pop
sub
inc
js
aad
aas
push
dec
test
lret
and
icebp
popf
lock
mov
sbb
lds
int3
aaa
mov
push
or
sbb
inc
add
imul
sub
bound
jo
dec
mov
loope
ljmp
push
mov
sbb
cmp
nop
jge
jbe
jecxz
test
scas
cwtl
jle
icebp
xchg
rcl
pushf
sahf
push
xchg
sub
adc
es
mov
mov
insl
jp
int
push
invd
pop
mov
addr16
adc
sub
cmpl
xchg
movnti
out
lea
xor
mov
sub
sti
cmp
sti
and
test
jnp
mov
jbe
ret
stos
mov
out
loopne
adc
in
adc
ja
mov
jnp
sub
pop
hlt
jns
ljmp
mov
aaa
ljmp
lret
test
repz
sbb
nop
je
icebp
dec
shll
mov
cs
jmp
xor
mov
xchg
jge
pop
out
adc
push
imul
inc
push
sar
and
jl
or
adc
mov
aad
mov
push
and
repz
mov
cmp
in
lahf
push
xor
mov
mov
aam
shrb
movsb
push
add
xchg
mov
lock
mov
push
fmull
push
mov
inc
repnz
movsb
mov
sub
lods
push
mov
dec
jne
lret
push
cli
je
cmp
pusha
pusha
jle
movsl
loop
out
hlt
push
pop
dec
into
sub
fmuls
in
paddb
or
cli
in
nop
mov
repz
pushf
cld
jg
mov
or
xchg
pop
cltd
mov
and
iret
in
fdivl
test
sub
xor
call
xchg
sub
xchg
adc
adc
ljmp
inc
loopne
adc
mov
lret
lea
xchg
faddp
cmp
pop
aad
loopne
clc
jle
call
fimull
fdivs
enterw
hlt
je
push
es
fnstenv
push
mov
repnz
outsb
sbb
inc
xchg
retw
xchg
xchg
shrl
fdivl
inc
jge
inc
out
movsbl
cmc
sub
mov
jne
sub
das
sub
das
nop
mov
cmpsb
pusha
dec
pusha
ja
push
movsb
inc
dec
add
inc
loope
or
ljmp
in
pushf
and
test
or
cmc
fsubr
push
loope
push
sub
out
pop
xchg
bound
xor
je
adcb
neg
jbe
mov
pop
out
pop
cmpsb
fildll
out
adc
sarb
daa
insb
hlt
xchg
inc
test
push
iret
jle
int3
loopne
add
arpl
cmp
cmp
xor
jo
cmp
imul
das
incb
hlt
xor
xlat
cmp
cmpsl
pop
cmp
dec
xor
mov
loope
pop
clc
pop
rcl
mov
mov
rol
bound
js
mov
sub
outsb
inc
je
daa
add
outsb
and
shlb
fs
popa
lods
jbe
mov
push
mov
not
cmpb
jne
out
clc
insl
mov
pop
and
sbb
arpl
roll
xchg
jae
aam
and
popa
add
push
les
push
shlb
bound
sub
mov
xchg
mov
mov
xor
add
fwait
mov
mov
sub
push
jo
jecxz
mov
pushf
xchg
jnp
adc
fs
push
out
push
pop
and
mov
and
cmc
xchg
sbb
stos
add
lret
cs
insl
mov
std
loopne
repnz
in
lret
ret
lcall
mov
lock
std
cld
add
cmpsb
add
in
jo
mov
sbb
cmp
popl
pop
aas
jmp
es
fdivrs
xorps
xor
add
pop
and
or
inc
insl
roll
jg
cwtl
out
sub
sbb
add
push
mov
jg
popa
fildl
in
sti
sarl
or
in
dec
daa
pushf
fsubrs
jns
mov
pop
xor
in
mov
das
xor
xchg
idivb
mov
notb
dec
icebp
inc
out
rcr
dec
cmp
mov
negb
fsubr
sub
sbb
or
fistps
xchg
jb
das
arpl
cli
add
loop
xor
mov
or
add
sub
popa
lds
cltd
cmp
fisubs
leave
in
push
add
aaa
lea
into
and
es
test
xchg
fadds
aas
pop
push
mov
adc
fbld
imul
jae
fs
ja,pt
inc
jl
and
xchg
jle
and
mov
sahf
out
or
inc
hlt
push
jb
dec
pusha
imul
mov
or
lret
dec
insb
fcomps
cmp
leave
shlb
pop
enter
rorl
out
rcrl
sbb
and
jae
jae
pop
jno
in
loopne
jmp
xchg
pop
mov
jbe
bound
mov
in
les
cmp
enter
inc
in
popa
sti
dec
mov
pushf
adc
ds
mov
mov
in
mov
add
imul
dec
lret
xlat
mov
mov
outsl
int
jmp
cmp
pop
subl
cmpsl
shrl
nop
repnz
mov
out
pop
pop
pushf
xchg
test
cmp
pop
rorl
repnz
outsl
cmc
je
orl
in
jbe
shlb
lods
in
icebp
adc
popf
fmull
into
mov
or
xor
negl
jb
andb
imul
into
lret
int
lret
pop
add
push
cmp
cmp
nop
rol
sbb
cmp
add
scas
out
xor
icebp
sub
out
loope
sub
mov
ficomps
shrb
in
mov
push
int
push
adcl
les
dec
inc
mov
fildll
inc
out
cmpsb
add
mov
dec
mov
rclb
mov
cli
ds
out
mov
loopnew
xchg
repnz
movntps
stos
push
sub
mov
fcmove
mov
xor
push
push
mov
imul
mov
jge
dec
lock
insl
sahf
frstor
frstor
in
or
cs
and
inc
hlt
out
sbbb
fwait
push
cs
icebp
sbb
in
cmpb
adc
jmp
or
fcoml
lock
jns
cmpsl
jmp
sbb
cs
int3
mov
std
test
fcomp
jl
xchg
pop
sbb
test
sahf
loopne
scas
outsl
inc
xor
xchg
pop
jmp
negl
cmc
adc
int
in
in
mov
shrl
inc
or
xchg
mov
dec
fiaddl
xor
sbb
in
push
sahf
xor
mov
add
push
bound
push
ret
pop
mov
mov
mov
std
mov
and
xor
pop
adc
in
xchg
mov
test
cs
sbb
jb
add
je
loope
inc
jl
adc
xchg
jecxz
push
jmp
ljmp
mov
pop
lret
xor
test
adc
fdivrs
xchg
call
inc
nop
jg
mov
cmp
cs
mov
dec
mov
pop
loope
mov
push
in
movsb
sub
test
loopne
sbbb
add
xor
ja
mov
mov
loop
js
xor
add
out
xlat
mov
inc
icebp
xor
in
cld
mov
mov
dec
jnp
inc
shl
hlt
in
dec
and
mov
lods
lret
jmp
jg
push
ret
add
subb
fsubrl
in
mov
aam
dec
nop
rorl
clc
pop
sub
xor
mov
adc
dec
mov
dec
xor
jg
push
xor
or
rcrb
les
dec
fnstsw
mov
ds
pop
insb
push
cmp
loope
dec
out
sub
pop
or
inc
sbb
fldt
xchg
sbbb
adc
dec
xlat
jg
or
sbb
orb
roll
out
insb
pop
mov
ja
push
sub
stos
xchg
das
dec
mov
mov
pushf
sub
jmp
xor
dec
dec
mov
fstpt
cmp
dec
arpl
outsl
mov
leave
ss
enter
in
lods
es
inc
movsl
addr16
jg
xchg
fwait
lods
jbe
int3
jnp
stos
mov
inc
out
pop
flds
dec
add
jmp
les
notl
mov
rcl
imul
fs
jns
iret
jbe
cwtl
int3
xchg
les
pop
xchg
inc
out
mov
jmp
jb
push
in
movsb
fbstp
movsb
test
adc
push
dec
test
jmp
or
shrl
sti
jecxz
jecxz
sahf
lahf
add
cwtl
and
sub
data16
or
icebp
pop
fcoml
ljmp
js
mov
cmpsl
xor
daa
imul
mov
in
cwtl
xchg
shr
inc
in
pop
mov
cmp
push
mov
mov
sub
stc
jae
sub
ds
push
outsb
call
sbb
mov
inc
jns
ss
outsb
and
and
sbb
lret
fcmovu
jl
lds
and
xchg
dec
hlt
in
subb
pop
jp
jb
adcb
add
in
popa
cmc
and
imul
loope
cs
push
xor
xchg
inc
ror
mov
aad
pop
push
dec
sbb
lahf
inc
mov
adc
fcompl
xchg
push
push
fadds
sbb
shlb
xor
inc
jnp
xchg
shll
jmp
mov
mov
mov
xchg
aas
ret
push
pushf
inc
jbe
rcrb
dec
stc
loopne
xor
jecxz
mov
dec
push
orb
jge
les
popf
xchg
jo
and
or
mov
push
push
sti
incb
sbb
xor
clc
cs
lret
xchg
sarl
bound
xchg
mov
add
repz
outsb
sbbb
outsb
adc
out
xchg
xchg
dec
lret
pop
xchg
popa
mov
popf
fwait
mov
mov
cmp
cmc
jb
addr16
jo
xor
push
ds
gs
jb
mov
jecxz
lahf
shrl
jbe
leave
or
adc
mov
fisttps
out
add
cmpsl
push
stos
nop
mov
mov
inc
cwtl
sbb
adcb
push
xchg
cltd
roll
inc
cmp
mov
inc
lock
xchg
xor
cmc
and
xchg
rclb
daa
pop
lods
test
xlat
hlt
sub
loopne
ds
inc
and
adc
pop
pop
mov
mov
dec
mov
mov
iret
jl
out
addr16
add
in
push
andl
lods
lock
call
mov
or
mov
inc
faddl
jge
and
fsubp
rcrb
data16
jae
cmc
mov
lods
rorl
cld
mov
jg
dec
push
dec
stos
mov
add
dec
cmp
mov
ds
push
fldl
sbb
jno
jp
cmp
pushf
popl
mov
dec
cmp
dec
pop
mov
mov
fcmovu
jns
xlat
sub
xchg
xchg
pop
clc
mov
imul
add
lods
fmuls
mov
pusha
sub
adc
inc
xchg
dec
cmp
xchg
and
dec
xor
sarb
jno
ret
add
mov
xor
dec
cwtl
lods
dec
sahf
mov
dec
jae
andps
xor
cmc
shr
and
xor
mov
stc
sub
loop
shrl
into
adc
push
int3
dec
ret
sbb
iret
sbb
out
or
mov
inc
sti
xor
add
ret
cli
movsb
clc
push
inc
mov
pop
lahf
movsb
leave
adc
out
jo
xor
push
pop
dec
xchg
jnp
stc
fldt
xor
outsl
fldcw
lahf
es
cli
test
push
out
adc
and
jbe
cmp
out
sub
idiv
push
aad
mov
sti
rcll
out
and
lcall
jge
adc
mov
xor
dec
loop
and
icebp
mov
out
jmp
cmc
and
fldcw
sti
movsb
lods
jl
jns
adc
pop
dec
mov
jne
sahf
in
push
mov
inc
xchg
pushf
pop
mov
fwait
or
rcl
and
jp
test
cmp
or
sti
loopne
test
fcmovne
mov
leave
pop
mov
and
push
jo
ret
jecxz
rorl
jge
inc
sti
sub
and
test
test
add
inc
fstps
loopne
les
cmp
stc
sbb
jg
xchg
nop
mov
sub
pop
insb
in
test
test
xchg
add
hlt
xchg
mov
cmp
es
sbb
xor
inc
arpl
xchg
sbb
test
icebp
mov
jne
std
pop
ljmp
fs
adc
movsb
das
les
test
inc
dec
or
jns
nop
enter
cmpsl
push
ds
xor
mov
inc
idivb
rcll
xchg
xchg
jge
loop
cmp
fidivs
dec
mov
sbb
mov
sbb
nop
cs
sbb
testb
stos
and
jo
push
pop
jae
clc
xlat
add
mov
cmp
xchg
xchg
outsl
pop
mov
repnz
fdivs
pushl
mov
dec
xchg
jg
or
loop
push
add
xorl
pop
sbb
jno
das
xor
jmp
add
int
push
lret
in
fidivs
inc
loopne
repz
dec
insb
mov
mov
add
xchg
mov
js
sbb
sbb
jmp
lcall
xor
push
sbb
clc
xlat
icebp
fisttps
in
mov
je
mov
fdivrp
mov
nop
xor
inc
dec
scas
jno
sub
addl
xor
mov
cmp
testl
daa
cltd
sub
mov
icebp
jl
fsubrs
dec
repnz
mov
mov
movsl
lds
stos
xor
sbb
je
stos
jno
lea
cwtl
in
movsb
inc
test
lea
and
testb
std
movsb
arpl
sub
in
pop
adc
mov
adc
mov
xor
cwtl
cmc
xor
inc
push
in
lret
in
pop
jno
test
pop
mov
mov
or
ja
imul
jo
dec
and
pop
jle
sub
insl
mov
jmp
jmp
cltd
jne
movsb
xchg
scas
jge
pop
and
cs
mov
sbb
cli
push
das
int
push
lret
fcmovnu
dec
bound
dec
push
movsb
xor
sbb
xor
test
dec
jge
xor
sub
out
inc
pushf
outsl
pop
sbb
sbb
pop
int3
push
mov
das
neg
xchg
dec
test
cli
add
mov
push
subl
push
push
cmp
jle
icebp
dec
std
push
rclb
mov
add
jp
push
cli
pop
and
mov
or
lds
sbb
test
in
jecxz
jns
mov
inc
scas
and
loopne
sbb
fs
jmp
xchg
outsb
js
adc
sbb
jmp
jb
jnp
push
and
mov
outsb
fadds
cmp
mov
pop
pop
xor
movsb
pop
int
jb
out
mov
popf
movsb
inc
in
cs
lcall
sbb
lds
icebp
repz
addb
mov
dec
dec
std
xchg
pop
stc
insl
int
or
xchg
mov
mov
jmp
xlat
xchg
or
sahf
nop
movsb
std
jno
pop
mov
mov
mov
bound
xor
outsl
scas
cwtl
pop
cmp
and
in
xchg
sahf
test
or
test
gs
or
inc
adc
in
shlb
pop
mov
mov
jp
and
popf
jb
mov
test
mov
push
mov
bnd
and
jmp
cmp
test
cli
decb
mov
subb
rclb
les
pop
sbb
mov
push
mov
adc
mov
dec
imul
cmp
movsb
adc
test
cmp
fdivs
cmp
push
sbb
aad
jo
mov
shrb
ljmp
jae,pn
add
sbb
mov
adc
scas
cltd
cmp
add
imul
adc
cmpsb
andb
out
jg
cmc
and
divb
mov
imul
push
and
mov
mov
aaa
mov
pop
mov
fbstp
mov
adc
jb
inc
lret
test
fmuls
sbb
add
mov
xor
nop
lahf
cmovbe
jo
mov
ficoms
inc
xchg
inc
into
js
inc
arpl
or
push
lret
push
cld
mov
stc
dec
std
adc
dec
mov
sub
or
mov
dec
mov
jle
inc
scas
add
jnp
xor
ret
xchg
aaa
push
xor
xchg
push
pop
mov
pop
xchg
adc
dec
inc
stc
cmp
mov
outsl
lahf
mov
cmp
inc
aam
aad
scas
and
push
mov
loope
sub
leave
pop
ret
dec
adc
adc
setns
movhps
repnz
imul
add
lds
or
int3
add
fsts
aam
test
fisttpl
call
repnz
daa
mov
sbb
in
in
in
xor
fidivl
and
mov
add
jecxz
or
popa
jno
incl
test
mov
mov
negb
fisubl
push
jecxz
push
xchg
cmp
xchg
stos
inc
test
lahf
cs
loop
jle
cmp
je
xchg
int
rorl
rcr
cld
ret
pop
cmpsl
or
lahf
xor
push
mov
loopne
add
dec
jecxz
pop
adc
push
xor
fldt
outsl
and
push
xor
cmp
jge
test
jno
adc
mov
cmpsb
push
xlat
das
push
cmpsl
mov
or
ja
or
mov
adc
xlat
pushf
gs
jnp
fwait
movsl
push
pop
or
aas
fldt
negl
lret
bound
outsb
push
push
adc
test
dec
push
xor
adc
mov
push
dec
sub
test
push
sbb
stos
mov
bound
hlt
mov
es
pop
push
mull
sub
shll
fisubl
inc
mov
pop
pop
mov
out
jle
sub
call
jl
test
clc
xchg
xor
loop
imul
scas
cs
and
sbb
mov
xchg
xlat
bound
movsl
push
mov
in
lock
fldl
inc
dec
pop
lcall
lcall
inc
rolb
jge
mov
hlt
hlt
mov
pop
or
icebp
faddl
adc
cmpl
sbb
mov
or
loopne
repnz
xchg
cmp
mov
sbbl
das
in
imul
ja
sub
push
push
ds
fsubs
fwait
add
push
xchg
jo
or
pop
xchg
mov
and
nop
jnp
push
xchg
in
sub
pop
lret
adc
sbb
sub
push
inc
sarb
or
pop
fs
jmp
fdivrs
roll
cmp
mov
jne
lcall
out
inc
cmp
add
int3
pop
and
adc
dec
sbb
push
cmc
adc
sub
cld
loop
divb
add
add
push
dec
mov
xor
sbb
out
and
std
xor
push
pop
jne
jmp
push
jg
rcr
stc
fidivrs
dec
mov
jns
test
jne
sub
daa
mull
jmp
das
push
xchg
cs
rorl
jb
shlb
call
negb
int
add
push
jecxz
xchg
mov
or
test
adc
add
inc
adc
jbe
cmp
mov
flds
es
add
push
cmp
fcomi
iret
fiadds
pop
lods
mov
aas
aaa
jecxz
sub
sub
out
roll
enter
jecxz
fsubs
push
push
aam
dec
add
mov
mov
pop
aad
movups
insb
int3
add
movsl
dec
lahf
or
pop
lods
inc
stos
or
sbb
fucomi
xlat
mov
mov
jg
lret
xchg
daa
add
pop
and
ss
cmp
lea
out
sti
add
insl
insl
ficoms
push
mov
adc
pusha
stos
movsb
inc
pop
ds
lret
xchg
mov
push
je
dec
lahf
or
push
jecxz
fdivrs
dec
in
dec
into
in
push
into
movsl
fxsave
movnti
dec
adc
jle
repz
adc
test
cmpsb
mov
test
mov
lods
cmp
inc
lds
aad
inc
in
cmpsb
test
loop
push
in
pusha
ljmp
pop
mov
faddl
dec
jecxz
push
icebp
js
inc
add
mov
adc
dec
dec
jae
sbb
mov
adc
mov
and
mov
scas
out
bound
sbb
in
dec
enter
test
mov
sbb
fmuls
pop
std
mov
adc
mov
jb
fstpt
sub
push
xlat
insl
dec
jg
xchg
into
cmp
leave
jnp
push
pop
jb
cmp
cmpsb
xor
hlt
xchg
mov
jmp
movl
fcmovnu
sub
shrl
xchg
sti
test
daa
andb
ds
pop
aad
push
pop
insl
and
push
or
pop
loope
fdivs
push
push
sbb
adc
mov
mov
mov
pop
aam
aad
mov
xor
test
pop
xchg
jmp
dec
xor
sbb
xchg
jno
inc
fisubrs
mov
adc
sbb
ds
fildll
int
psrld
outsb
ljmp
cmp
insl
and
or
stc
bound
int
lret
orb
mov
lock
arpl
ret
add
std
xchg
adc
jg
cwtl
mov
xor
jo
or
mov
insb
nop
mov
jne
imul
sahf
lods
push
jnp
in
push
push
mov
pop
into
mov
push
or
mov
cvtdq2ps
sbbb
jecxz
mov
fwait
mov
leave
fstps
lcall
xor
pop
stos
pushf
into
shlb
jmp
jmp
out
pushf
jmp
std
mov
mov
rcll
mov
jecxz
xor
ss
and
rorb
mov
js
mov
jo
jp
cld
ret
iret
rorb
adc
insb
xchg
fisttpll
xor
rcrb
mov
xor
dec
xor
outsl
and
sete
pop
cmp
test
push
pop
test
inc
jae
shlb
mov
jmp
xchg
push
jbe
fiadds
imul
addl
xchg
rcrb
ret
inc
shl
mov
scas
aaa
xor
lds
out
loopne
sti
fistpl
jno
dec
neg
or
mov
ds
andb
or
popa
outsb
cmp
push
push
and
sbb
or
fwait
mov
cli
pop
pop
push
inc
mov
sbb
bound
mov
leave
or
mov
xchg
add
dec
fsubrl
pop
aad
jl
out
jo
inc
into
jb
insl
call
push
sbbl
lods
rolb
fcoms
dec
mov
mov
enter
lds
test
in
dec
pop
loopne
cs
mov
jmp
lret
cld
movsb
sub
sub
gs
int
mulb
push
add
sbb
push
ret
cli
push
decb
xchg
ret
push
cmp
das
mov
lea
test
adc
cmp
rcrb
xchg
adc
sbb
sar
enter
xchg
sbb
jmp
inc
mov
cmpsb
mov
and
add
hlt
fwait
sub
fisubl
iret
mov
sbb
dec
ljmp
sbbl
mov
mov
jnp
xor
mov
sahf
fistps
push
push
jno
ja
push
sub
daa
ret
fucomip
das
jbe
shl
fwait
lret
xor
inc
and
add
insb
lea
push
rclb
xrelease
cmpsl
sbb
lret
test
and
push
je
push
mov
fildll
mov
mov
cmp
jecxz
rolb
and
fistl
push
ss
xchg
test
inc
mov
mov
ret
sbbb
lods
int3
jp
jp
scas
dec
jno
cld
aam
ret
ret
in
inc
add
xchg
adc
push
fbstp
sbb
cmp
inc
hlt
jno
nop
in
movsl
jp
lea
and
ret
inc
imul
notl
mov
es
cmp
movsb
and
cmp
jp
jnp
pop
fs
jp
in
cmp
rcrl
rol
hlt
jnp
pop
sbb
clc
popa
jl
in
push
iret
bound
scas
jmp
cmpl
mov
scas
sbb
cmc
push
mov
inc
inc
loope
mov
insl
pushf
add
popf
test
sbb
js
leave
pop
pushf
jp
aaa
dec
mov
push
test
pop
jp
rcrb
imul
sahf
addb
nop
jmp
test
add
push
pop
pop
rolb
daa
push
sub
inc
negl
mov
and
mov
out
movsb
mov
int3
dec
pop
push
adc
and
loopne
or
xchg
in
cmpl
or
mov
dec
cmp
mov
add
mov
cmc
dec
push
cltd
xor
arpl
clc
xor
aas
xchg
stc
jmp
add
loop
jge
movsl
pusha
decl
push
sbb
lcall
inc
lcall
idivl
pop
or
and
lock
imulb
and
aam
xor
loopne
pop
inc
and
mov
test
xor
dec
lret
mov
jnp
mov
cmpsl
aam
fidivs
fcompl
popf
jp
bnd
jae
lods
or
and
jmp
push
dec
outsb
mov
jb
movsb
add
in
outsl
pop
xchg
lea
lea
jecxz
sbb
pop
shr
ja
in
imul
mov
push
mov
rclb
stos
inc
mov
divb
mov
mov
loopne
jg
ss
js
jb
and
fs
int
mov
in
pop
inc
inc
sub
mov
xchg
icebp
cmp
cs
push
and
arpl
push
fisttpl
xor
ljmp
ret
mov
popa
cmp
fists
lahf
lock
adc
orb
addb
rclb
push
xchg
nop
mov
inc
cmc
inc
popf
movsb
lods
shrb
rclb
cmpsb
xor
stos
jbe
pop
mov
stc
fs
test
les
repz
and
inc
cld
inc
das
and
int
call
cmc
rcrb
cwtl
lcall
jecxz
arpl
or
ds
cwtl
cld
or
sbb
les
cmc
cld
push
popl
jo
lods
dec
mov
adcl
cmc
mov
popf
fsubr
mov
loope
add
out
loope
adc
pop
push
test
gs
pop
and
dec
or
dec
aas
mov
push
cmpsb
sub
js
jecxz
xchg
mov
jge
and
popl
idivl
add
icebp
mov
mov
mov
push
xor
or
jnp
lods
js
stos
fst
out
pushf
xchg
das
iret
lret
je
and
stc
mov
adc
aad
cmp
or
in
mull
cmp
stos
ds
mov
sbb
movsl
or
sarl
mov
adc
and
loop
rorl
push
or
orl
adc
jb
adc
mov
push
mov
lret
je
or
pop
mov
pop
mov
arpl
rclb
mov
jno
das
out
fistpl
jb
sub
gs
cmp
hlt
pushf
inc
jb
mov
imul
mov
std
pop
xor
xor
push
outsl
les
and
push
dec
cmp
sbb
and
out
mov
out
ret
faddl
pop
add
shll
int
jbe
aas
and
clc
ss
lret
xchg
adc
lds
mov
cmp
loope
cmp
jb
inc
adc
sbb
int
or
fisubl
fsub
inc
lock
add
mov
push
ds
imull
sbb
hlt
dec
lret
shrl
push
and
jl
int
test
seta
stc
aaa
iret
insl
inc
xlat
adc
xor
cmp
jmp
sub
push
sti
dec
mov
mov
inc
jge
stos
out
jns
aam
call
pop
rcrl
dec
jmp
sub
sahf
xor
or
incl
push
or
les
push
and
pop
xor
mov
loop
arpl
push
lods
sub
mov
in
cmp
and
lret
movsb
mov
cld
nop
and
sti
imul
jmp
mov
inc
arpl
cs
cld
flds
jmp
inc
test
sbb
dec
outsl
mov
inc
mov
lahf
loopne
test
shrb
dec
xchg
or
mov
test
repnz
dec
jmp
stc
imulb
call
dec
std
test
ja
nop
gs
add
mov
push
sub
sbb
and
jmp
je
inc
adc
je
jp
rcll
adc
jge
inc
adc
mov
sti
fldl
sahf
js
jbe
xchg
ljmp
rcrb
out
test
cltd
inc
lret
test
sub
hlt
cmpsb
or
fimull
push
loopne
jae
test
bnd
jge
or
or
mov
int
sbb
dec
xchg
cltd
adcb
pop
js
sahf
pop
cmpsl
push
pop
sahf
fstpt
aam
popf
jl
and
cmp
jae
adc
xchg
das
mov
jle
ret
fs
ds
mov
inc
mov
cmp
add
adc
cmp
jnp
mov
aad
pop
push
xlat
cmp
imul
mul
cltd
mov
or
mov
test
adc
jmp
jo
dec
mov
into
adcb
cltd
sub
xchg
or
sub
inc
mov
ret
jo
jnp
cmp
jnp
xchg
movl
pop
pop
fs
cmpsl
add
je
test
mov
shl
dec
xchg
sbb
xor
mov
push
in
and
lret
adc
add
adc
dec
or
or
cmp
add
push
dec
hlt
inc
add
push
sbb
imul
repz
sub
and
push
rcr
cmpsl
orb
int
dec
xlat
push
int
or
mov
flds
jb
dec
loop,pt
xchg
mov
sbb
cmp
scas
push
idivb
loopne
test
sub
repnz
inc
fsub
lods
outsl
dec
int
das
cmp
adcl
cmp
xchg
fistps
sbb
aas
inc
xor
sahf
pop
pop
push
repnz
fldt
jno
lcall
xchg
pop
push
xor
mov
sbb
mov
add
inc
fisubl
push
ret
pop
jno
pop
or
pop
sbbl
xor
dec
push
aad
push
cwtl
mov
cmp
mov
or
adc
inc
xchg
adc
add
je
adc
in
push
mov
fstps
popf
sbbl
cld
xchg
addb
mov
push
in
divl
seto
daa
mov
dec
sub
stc
cmp
outsb
mov
pop
sahf
andl
push
dec
out
add
mov
adc
mov
jp,pt
imul
mov
dec
inc
mov
ds
pop
push
lods
js
dec
aam
xor
loop
dec
insl
ret
jge
pop
pushf
mov
xchg
inc
int3
loopne
jl
push
adc
dec
jge
jb
cmp
iret
cmc
daa
adc
pop
test
cld
sbb
repz
xlat
sub
rorl
popf
fwait
mov
mov
arpl
stos
stos
or
adc
push
jge
push
jne
mov
add
dec
in
decb
shrb
push
adc
lods
stos
or
loop
xchg
ljmp
add
mov
jl
imul
scas
or
and
lock
cmp
out
sub
jo
dec
sbbb
push
pop
mov
mov
fld
and
outsb
jl
es
inc
cmpsb
inc
or
mov
mov
pop
jl
sub
mov
scas
mov
sub
lods
mov
repz
mov
mov
fistl
fs
mov
psubusb
iret
rolb
bound
dec
pop
addb
sarb
inc
in
dec
loope
mov
add
movsb
xchg
loope
sub
sbb
fldt
push
std
pop
bnd
mov
mov
xor
xchg
fsubr
cmpsl
sbb
cli
add
xor
scas
sbb
mov
jne
pop
ret
std
pop
add
sahf
in
movsl
cld
ds
cmpsb
and
stos
lcall
dec
mov
mov
cmp
cli
repz
xchg
adc
cmp
das
pusha
adc
cmpsb
outsb
mov
imul
mov
add
aas
stc
aaa
mov
mov
fldenv
dec
add
aaa
jl
pushf
dec
add
or
nop
sbb
lcall
roll
insb
add
cmp
cltd
mov
rclb
mov
or
test
scas
sbb
cli
scas
dec
loope
repnz
jbe
cmp
outsl
adc
push
iret
xchg
test
inc
call
scas
mov
xor
jae
outsb
xor
out
enter
popa
dec
pusha
in
bound
push
stos
fs
insl
test
sbb
test
push
mov
inc
adc
or
fbstp
stos
push
clc
lds
imul
or
xor
sub
and
fwait
stos
mov
mov
int3
inc
addr16
jb
cmpsl
mov
iret
cld
mov
or
es
and
mov
or
and
mov
ds
out
pusha
mov
sbb
inc
xchg
jo
dec
sbb
cmp
push
push
or
mov
pop
scas
dec
idivl
cmpsl
mov
out
pop
mov
jbe
cmp
jg
sbb
jmp
xchg
pop
hlt
lods
in
lods
push
leave
dec
sbb
pop
jmp
lods
inc
adc
jecxz
jbe
hlt
xor
sbb
fdivl
stos
or
insl
inc
lea
stos
jecxz
xchg
adc
pushl
jg
push
scas
adc
or
lods
jbe
mov
cli
push
arpl
mov
push
fnsave
fstpl
sbb
test
ret
ret
jns
xor
pusha
lret
mov
adc
loopne
mov
lods
xchg
mov
adc
push
rcrb
adc
cmpsl
xor
sbb
fcomps
loopne
scas
shlb
lock
pop
mov
cmpsl
add
divl
xchg
push
out
dec
int3
aad
and
ljmp
mov
add
iret
into
arpl
test
rcr
sbb
movsb
orl
jle
hlt
adc
cs
sarl
std
sbb
and
cwtl
js
mov
cli
int
test
fstl
loopne
popf
imul
xchg
lahf
cltd
sar
mov
dec
sub
mov
jno
bound
cmp
fs
out
jo
icebp
ja
lods
inc
push
jae
inc
dec
mov
mov
mov
jbe
mull
aas
sahf
pop
sub
lret
scas
jle
clc
in
pop
jmp
lret
out
inc
cli
roll
jnp
jns
jns
rcrb
ss
dec
in
sbb
inc
lcall
cli
repz
xor
pop
push
push
xor
scas
push
mov
les
inc
pop
xor
icebp
pmullw
dec
push
aam
scas
sub
mov
test
mov
in
cmpsb
call
test
fucom
add
imul
test
cvtpi2ps
cltd
sbb
jg
mov
stc
shlb
scas
xor
pop
pushf
push
daa
pop
jne
pop
lock
dec
into
in
lds
movsl
out
mov
repnz
test
flds
cmp
push
or
das
pop
xor
cmp
das
std
divb
and
pushf
xchg
xor
out
and
adc
push
xor
loope
xchg
add
mov
mov
clc
push
inc
mov
jne
mov
pop
dec
sti
shrb
push
ss
xor
xchg
xchg
and
mov
push
jg
aad
outsb
cmc
or
shll
std
mov
inc
push
push
fmulp
popf
mov
xor
lret
arpl
sbb
pop
hlt
add
daa
mov
xchg
loopne
dec
inc
stos
jno
lea
lods
shl
sub
jo
out
shlb
mov
dec
cmpsl
cmpsb
xor
imul
mov
lret
shrb
inc
jp
or
daa
and
push
pop
jnp
push
stos
xchg
xlat
cmp
mov
js
fwait
aaa
xchg
jnp
ret
jb
push
fcmove
mov
pop
mov
mov
sbb
mov
jo
xor
daa
sub
mov
jle
jns
mov
dec
rolb
push
and
add
dec
mov
cmpsl
mov
repnz
dec
mov
jne
out
push
pop
xchg
mov
sub
imul
insb
pop
xor
mov
push
lods
addr16
pop
xchg
loop
repnz
shlb
cltd
pop
xor
and
jg
cmc
daa
aad
mov
daa
shrl
inc
sahf
enter
popa
test
mov
std
pop
sti
pushl
shlb
shll
in
fwait
lret
adc
xchg
and
mov
gs
sbb
jbe
fisttpl
test
push
call
lcall
xor
pushf
sub
out
out
xor
xor
iret
leave
enter
jle
dec
sbbl
sbb
add
add
adc
push
mov
loope
cmc
mov
push
outsl
mov
inc
xchg
lret
in
dec
stos
roll
push
stos
xchg
nop
inc
add
lcall
xchg
xchg
mov
pushf
mov
mov
cmpl
mov
fucomip
push
jne
jne
lock
iret
divb
sti
lds
ret
scas
and
ret
repnz
mov
ret
mov
inc
xchg
rcrb
adc
xchg
add
mov
push
shrb
loop
out
in
jmp
addl
and
lea
jns
cmp
xchg
adc
out
sbb
jmp
jmp
mov
mov
dec
ja
add
dec
and
leave
test
sahf
add
cltd
jo
adc
cmc
addr16
and
shrb
sbb
dec
out
mov
mov
ja
mov
imul
lods
xor
stos
xchg
sub
inc
scas
gs
iret
stos
daa
inc
cmp
fistl
imul
addr16
cmc
lds
test
xchg
subl
mov
mov
xchg
clc
sbb
dec
inc
add
mov
fnstenv
pop
cli
push
push
or
fstps
push
in
cmp
es
imul
ljmp
jne
enter
cmpsl
stc
int
sbbb
shll
dec
data16
and
xchg
add
orb
add
out
adc
ror
mov
mov
in
cmp
xorb
xchg
in
xor
dec
push
pop
mov
pop
aad
cli
fisttpll
xchg
fadds
js
cli
sbb
sub
inc
push
mov
lcall
js
aaa
in
push
jecxz
cbtw
push
mov
jl
imul
ljmp
xchg
and
std
jge
mov
and
sbb
cwtl
insl
adc
movsb
xchg
xor
xor
xor
les
xor
mov
test
shl
cmpsl
mov
int3
push
and
loope
aam
outsl
inc
and
adc
out
xor
sti
mov
jmp
mov
es
jnp
sarb
das
fdivs
ljmp
ljmp
outsb
loop
fstpl
mov
xlat
cmp
xchg
stos
lret
pop
adc
nop
and
sub
in
int3
jns
xor
mov
mov
call
aas
cld
dec
scas
lods
addr16
movsb
sbb
lds
scas
sub
inc
in
shll
push
nop
daa
aaa
movsl
pop
xchg
jmp
sub
aad
lods
add
mov
sarb
imul
mov
jle
inc
out
add
sahf
adc
movsl
pop
jle
push
and
push
adc
pop
sub
sbb
cmp
fsubs
sbb
cld
ss
xchg
and
cmp
or
dec
or
daa
xor
fdivrl
aas
or
rorl
mov
or
jb
mov
outsb
scas
dec
ret
xor
aas
fnclex
stos
mov
sub
lret
xor
mov
jecxz
imul
test
dec
in
adc
pop
sahf
push
mov
mov
into
mov
mov
xor
andb
lcall
repnz
jmp
jecxz
mov
sbb
dec
loopne
pop
mov
sub
dec
inc
call
mov
cmp
pop
jl
aas
jae
xor
push
xchg
cwtl
push
aas
or
stc
out
aad
popa
cmpsb
jle
push
add
cld
and
push
mov
jecxz
fsts
and
outsb
enter
adc
jae
nop
push
sub
inc
int
lock
inc
cmp
int
loop
mov
popf
cmp
cmpsl
adc
push
adc
les
sub
in
std
fistpl
sub
jecxz
dec
addb
stc
addl
ljmp
mov
and
xchg
imul
es
pop
xor
repnz
push
push
js
pop
sbb
ss
dec
push
or
test
test
lock
scas
lret
test
popa
iret
push
xchg
arpl
push
cmpb
pop
sbb
shll
or
movl
mov
repz
out
adc
sbb
test
das
cmp
mov
pop
lds
fimull
lahf
dec
mov
pop
dec
inc
adc
mov
testb
or
std
and
imul
in
imul
in
jo
pop
roll
iret
mov
or
or
mov
fildl
pop
notb
leave
push
pop
add
out
add
sbb
add
pop
scas
stos
frstor
push
div
mov
cmpb
push
call
out
aad
xchg
fsubrl
es
jo
mov
adc
out
mov
pusha
or
xchg
jp
je
or
sub
popf
push
stos
movsb
push
adc
push
jnp
mov
loope
sti
imul
mov
push
shr
mov
jl
dec
sbb
aas
call
mov
lods
mov
mov
lcall
xchg
cmp
mov
mov
mov
jl
leave
in
xchg
test
push
xchg
mov
mov
pop
mov
out
lods
lcall
imul
and
sti
mov
pushf
mov
mov
popa
call
rorl
fcomip
outsb
sbb
and
sbb
xchg
pop
es
or
sub
xchg
add
popf
cli
push
pop
xlat
jle
adc
mov
decb
xchg
mov
cmpsb
mov
add
or
push
in
in
and
es
cmc
in
pop
das
dec
add
cmpsb
pop
cmp
sub
pop
xchg
in
dec
int
sahf
xchg
dec
push
inc
in
shufps
cvtps2pd
cmc
enter
addr16
addr16
in
and
mov
or
int3
sub
dec
scas
fmul
in
mov
int
lods
inc
scas
mov
cld
je
fstl
fcompl
scas
cmp
idivb
add
add
dec
or
shlb
shlb
out
ss
cmp
mov
ret
mov
pop
ljmpw
sub
scas
adcb
cmpsb
fimuls
inc
sbb
mov
and
movsl
jo
xchg
xchg
cmp
js
outsl
cmpsb
gs
fs
pop
andl
nop
clc
inc
call
fstpl
mov
sbb
sahf
es
and
pusha
arpl
mov
inc
jns
inc
lds
stos
std
aas
or
and
imul
mov
push
dec
pop
gs
push
std
xchg
inc
sahf
pushf
pop
mov
insl
sbb
fcomps
sub
push
inc
cmpsl
sbb
lea
push
mov
jne
fdivrl
cli
or
mov
lahf
sub
inc
push
lock
adc
in
add
sub
push
hlt
je
push
je
lcall
inc
pop
fst
mov
add
shll
mov
sbb
aaa
out
in
rcrb
out
jmp
jns
sbb
js
add
ja
add
xor
fildl
jbe
andl
xchg
cld
rclb
cmpsl
dec
insb
inc
scas
aaa
sbb
xor
mov
js
sbb
test
daa
sbb
sarl
movsb
mov
cmp
mov
imul
adc
dec
mov
in
mov
in
icebp
mov
pop
sbb
push
aas
xorl
push
mov
jmp
push
mov
mov
dec
incb
das
stos
les
andl
bound
mov
adc
decl
dec
fwait
xlat
movsb
test
mov
loop
in
inc
pop
push
jg
addb
pop
mov
cs
shrb
rol
movsb
outsl
orb
xchg
xchg
jecxz
push
sub
mov
test
in
enter
cmp
lret
inc
or
lea
shll
fs
mov
in
aaa
xor
insl
incl
es
adc
test
daa
mov
xor
xchg
sahf
not
pop
or
cwtl
and
inc
test
inc
cli
inc
fxtract
inc
pop
ljmp
mov
daa
arpl
ret
bound
xchg
inc
mov
sti
mov
add
lods
push
nop
and
orl
test
cmp
rep
and
out
mov
in
popf
out
pop
movsl
mov
adc
dec
dec
adc
inc
mov
cmp
xor
mov
lret
inc
sub
pop
xchg
je
lea
sbb
mov
push
out
lock
sub
outsb
lods
dec
jbe
stos
in
loop
fisttpll
jne
xchg
in
fidivl
int3
notl
inc
xchg
andl
mov
sub
push
divl
sbb
sarb
xchg
inc
or
lds
mov
dec
and
ret
inc
sbb
das
mov
cmp
insb
xor
mov
mov
pop
daa
inc
mov
adc
xchg
mov
xor
out
loopne
out
sbb
fmull
push
inc
mov
push
cs
lcall
outsl
dec
sbb
mov
outsb
jge
mov
push
lods
push
fwait
xor
frstor
mov
inc
sbb
xor
loopne
mov
ret
mov
push
mov
insb
adc
mov
push
mov
je
push
pop
lahf
sbb
loope
sub
push
sbb
adc
pop
outsl
sbb
add
fcoml
fbld
push
dec
loop
ljmp
mov
loope
mov
mov
lret
xlat
dec
xchg
mov
jbe
repz
outsb
les
and
inc
test
xchg
xor
add
cmpsb
xor
dec
and
adc
inc
push
xlat
jl
xor
je
rcrb
adc
enter
sarb
push
mov
scas
sarb
pop
xor
cli
rcl
ljmp
ret
xor
frstor
mov
testb
xchg
out
nop
movsb
xor
sbb
or
aam
mov
lods
inc
jmp
sbb
insb
outsb
inc
mov
mov
cltd
push
nop
idiv
lret
jmp
mov
lahf
push
pop
orb
push
xchg
fucomip
lock
and
cmp
xchg
call
test
sbb
and
jae
add
lock
adc
sahf
sahf
pop
loopne
orl
int
lcall
out
adc
mov
adcl
rolb
mov
mov
sub
xchg
or
outsl
jmp
inc
test
or
sub
dec
mov
xchg
insl
inc
sbb
xor
and
jecxz
mov
fld
xorb
int3
les
jb
xchg
mov
inc
divb
je
imul
push
outsb
idivl
mov
sbb
lds
testl
push
jne
sbb
faddp
add
add
rdpmc
out
cmc
rcrb
push
fidivrl
cmp
pop
mov
shlb
sbb
mov
bound
test
popf
js
ret
int3
sbb
dec
fsin
xor
imul
sub
cmp
mov
xor
jge
mov
pop
filds
add
ljmp
iret
ret
mov
xchg
ficompl
aad
test
push
xlat
into
xchg
cli
sub
testb
xchg
jne
ljmp
jae
mov
je
lret
adc
jmp
andl
push
push
cs
push
mov
sbb
cmc
xchg
test
mov
sbb
addl
ret
lods
mov
pop
stos
stos
add
jno
xor
push
jno
in
sbb
ficomps
pop
pop
je
in
and
cmp
adc
gs
mov
loop
adc
mov
lock
add
ret
adc
iret
je
push
push
cmp
add
pop
jmp
inc
adcl
movsl
mov
pop
xor
push
ljmp
sub
push
stos
cmp
stc
xchg
rolb
fwait
push
cli
dec
fsubrl
dec
mov
jmp
dec
fs
mov
rolb
out
testl
arpl
push
dec
lock
xlat
out
cmp
cmpsl
ja
adc
test
bnd
loopne
rcll
in
pop
ret
outsb
andb
sub
sbb
pop
mov
jecxz
popf
mov
es
shrb
jnp
mov
lcall
mov
scas
or
fisubs
das
outsb
ljmp
fisttpll
leave
and
lret
pop
jo
cmpsb
and
outsb
mov
rclb
or
lods
inc
mov
pop
dec
ds
mov
push
stc
fsts
shl
inc
cmpsl
xchg
out
loope
sub
sub
sub
loopne
xchg
fxam
adc
shlb
gs
clc
mov
sbb
mov
xorb
and
cmp
xor
fimuls
lods
inc
rorb
adc
adc
jo
mov
jbe
xor
fcoms
test
lods
push
pop
or
stos
ljmp
xchg
push
fisubrs
mov
in
and
sarb
mov
or
lret
pop
push
daa
popa
jae
sar
and
lds
pop
pop
fwait
sbb
cli
cltd
outsb
ret
mov
cltd
push
xor
test
into
mov
out
mov
stos
adc
in
outsb
lahf
sub
mov
subb
dec
ljmp
adc
jb
in
dec
enter
loopne
xchg
loop
mov
roll
clc
dec
push
sub
movsl
mov
das
cmpsb
ret
dec
jns
push
sbb
cltd
std
test
pop
outsl
imull
pop
cld
xchg
adc
movsl
fnstcw
lock
mov
arpl
leave
clc
test
xchg
add
aad
pop
push
cltd
sub
mov
daa
pop
call
adc
stc
ja
rcrb
loopne
lret
popl
push
and
insl
rcrb
dec
or
xchg
lock
mov
and
lea
fwait
mov
mov
arpl
js
and
nop
sbb
iret
fisttpll
outsb
add
adc
lods
outsl
icebp
fidivrl
js
mulb
pop
ficomps
sbb
insl
sub
xorb
lret
xchg
rcrl
aaa
push
add
push
frstor
add
inc
mov
fidivrl
jg
and
addb
pusha
sub
insl
inc
xor
sub
or
pop
fs
xchg
loop
shr
lock
xchg
inc
std
push
mov
pop
loopne
jbe
or
popf
and
mov
mov
in
fldt
dec
iret
push
stos
lods
movsl
and
inc
ss
scas
jb
mov
jp
jp
inc
orl
pop
rorb
aaa
sub
or
ror
add
repnz
test
xchg
dec
pushf
pop
jns
sub
add
pop
and
jo
cmpsb
pop
aas
add
into
mov
mov
inc
mov
pop
jge
push
mov
or
pop
sbb
fbstp
stos
stos
mov
sbb
fwait
cmc
push
sub
mov
fidivl
xchg
aad
adc
inc
call
int
test
push
ss
inc
dec
pop
insl
inc
cmpsl
in
insl
pushf
xchg
pop
jp
jbe
push
test
inc
lret
ret
dec
pop
push
outsl
int3
enter
movsl
fcompl
test
ss
ja
and
frndint
test
pop
cs
adc
lcall
adc
inc
add
stos
mov
mov
or
nop
leave
mov
xor
jbe
ljmp
pop
ficoms
dec
and
cwtl
cmpsl
fldcw
movsl
lods
cmp
bound
aas
mov
lods
dec
aaa
sub
mov
scas
adc
mov
jae
jo
mov
dec
fstpl
cmp
test
lahf
pop
in
fbstp
jae
lock
jnp
ss
ja
xchg
test
dec
mov
adc
addb
add
loop
shlb
movsl
cmp
push
test
out
cmpsb
xchg
push
mov
adcl
mov
test
aas
in
scas
pop
and
mov
cmp
mov
mov
mov
jae
cld
int
fnsave
aas
in
mov
jmp
sbb
data16
dec
cwtl
jmp
sbb
add
cwtl
call
xchg
xchg
dec
loop
fstps
cmpsl
dec
sub
sbb
push
stc
out
enter
sbb
jmp
sarl
cmp
jmp
pop
lcall
lret
push
cmp
cmpsl
out
push
das
popa
pop
mov
xchg
ljmp
push
popa
cmc
inc
sti
sbb
aam
xchg
add
mov
mov
mov
je
cmpsb
push
mov
ret
sub
data16
xor
out
mov
push
cmc
pusha
xchg
xor
mov
pop
lahf
lods
mov
mov
inc
lods
sahf
or
rclb
in
sub
dec
xchg
in
adc
xchg
mov
cs
ds
xor
sub
push
push
jne
push
fistps
mov
pop
das
mov
sub
add
jmp
ja
test
add
xor
jp
xchg
cli
inc
sbb
mov
pushf
fldenv
stc
inc
cmpsl
jae
pop
ret
xlat
in
int3
stos
xlat
xor
push
ljmp
xlat
fnstsw
sub
or
xchg
push
das
repz
mov
adc
sub
sahf
push
jmp
sub
je
pop
inc
adc
dec
je
orb
sbb
or
push
in
adc
adcl
pop
leave
dec
clc
mov
sub
adc
push
cmc
mov
out
sarb
dec
movsl
scas
out
subb
cmp
xchg
jo
mov
or
pop
xchg
xchg
xor
and
adc
sahf
cld
gs
mov
jle
bound
and
gs
mov
xor
mov
pop
push
xorb
jae
add
push
pop
sub
stos
or
lret
sub
shll
or
aaa
fcmovnu
cld
loope
jmp
adc
in
loopne
scas
jno
ja
aad
std
orb
and
push
push
popf
jl
cmp
xchg
xchg
call
aas
inc
cmpsb
jbe
dec
push
or
out
lret
mov
insl
andl
inc
stos
mov
pop
leave
xchg
mov
mov
sarl
lahf
dec
xor
mov
and
add
xor
fildll
jnp
in
int
add
mov
pop
dec
insb
dec
add
sbb
arpl
in
cmpsb
ret
cwtl
xchg
inc
cmp
inc
jge
xchg
cwtl
push
sub
mov
pop
mov
insb
in
movsb
ds
dec
jns
push
sub
xor
fstl
or
ljmp
mov
hlt
xlat
xchg
leave
adc
mov
ds
adc
aaa
jns
add
xor
inc
jnp
inc
sbb
in
mov
cmpsl
mov
lds
push
cld
pop
dec
cld
inc
pop
test
into
jmp
fstpt
shll
and
out
sahf
rclb
inc
ret
xchg
out
cwtl
lock
test
sub
insb
int3
push
lea
rolb
inc
stos
iret
push
dec
add
sub
xor
in
jle
mov
addb
shlb
out
pop
iret
mov
mov
fldt
cmp
cli
xor
sub
xor
ds
mov
push
iret
in
dec
or
out
sub
add
js
cwtl
jle
push
shll
jnp
xlat
pop
jbe
push
negb
mov
das
xor
inc
xorl
lock
xor
push
scas
add
mov
in
outsl
jns
add
insl
xchg
sti
ret
and
sub
jge
cld
xchg
xor
shlb
sub
icebp
inc
mov
jae
jmp
sbb
jae
lret
sbbl
adc
xor
cmp
jl
jg
xor
cmp
shll
push
filds
xor
outsb
sbb
jge
scas
jge
cwtl
mov
mov
ret
sub
or
or
or
int
shll
and
cmp
fsubp
ret
add
in
js
mov
mov
pop
cmp
mov
or
ret
hlt
inc
or
mov
jnp
out
pop
testl
pop
fsts
mov
jns
pop
cmp
xchg
dec
pop
shrl
or
or
rclb
imul
jp
add
mov
cltd
mov
loopne
stos
shlb
es
stos
andb
push
cmc
jne
sahf
rcl
cmpsl
sub
inc
popa
xchg
add
cmp
pop
cmpsb
push
ss
push
jne
add
stos
xchg
in
jl
push
inc
out
jmp
sti
and
mov
mov
adc
cmp
mov
adc
add
xchg
ret
cmp
jo
into
fmul
inc
out
scas
rorb
es
outsb
gs
ret
or
mov
cmpsb
sub
or
scas
xchg
pop
lahf
lds
test
jb
addr16
ljmp
les
sub
lahf
lods
and
out
sub
mov
push
push
adc
insb
inc
jge
dec
sub
lock
sub
sbb
cli
mov
stos
push
cltd
cmc
sti
aaa
outsl
repnz
aaa
sarl
cmp
pushf
out
xor
xchg
xor
les
push
cld
and
dec
pop
xchg
outsl
pusha
xchg
lds
mov
aas
stos
lds
jne
outsb
in
jns
lcall
dec
rcll
push
stos
sub
nop
push
rol
push
iret
jb
shlb
mov
in
mov
jmp
fbstp
mov
add
loopne
lcall
dec
push
test
jb
test
jnp
jmp
jae
clc
es
leave
xor
push
rclb
jle
mov
shlb
roll
stc
add
in
aaa
adc
push
orb
inc
add
mov
sbb
cltd
test
leave
ds
inc
mov
into
push
popl
leave
rcrl
pushf
leave
cmp
fnstcw
mov
adc
fwait
int
sbb
pop
and
sbb
in
ja
jns
leave
dec
in
repz
lock
mov
jnp
imul
xchg
mov
mov
jmp
cmpsl
sbbb
in
out
push
inc
lds
in
into
loope
sbb
sahf
test
xor
sbb
fsts
jmp
lret
ret
sbb
sbb
mov
fsts
loop
xchg
push
test
push
sbb
daa
pusha
jae
pop
hlt
cmpsl
dec
mov
aaa
mov
dec
jp
fildll
and
adc
jnp
loop
or
xchg
add
jnp
cmpsb
and
fimuls
lods
js
jl
dec
push
fcmovnbe
popa
repnz
dec
mov
clc
int3
testb
push
dec
jle
xchg
incl
pop
pop
aad
and
add
adc
push
cmpsb
into
in
xchg
imul
push
jbe
jnp
pop
lahf
popf
inc
push
in
cmp
in
daa
mov
adc
pop
pushf
ficompl
loope
orb
inc
push
jecxz
xor
mov
jne
cmp
and
mov
mov
push
pop
add
dec
xor
es
fcmovb
mov
cwtl
das
cwtl
add
mov
mov
sbb
mov
fdivl
add
xchg
jge
jae
xor
test
outsl
jo
cmpb
push
mov
sub
lcall
aam
mov
iret
test
int
or
mov
xchg
mov
mov
sbb
insl
cltd
fstl
mov
push
sub
sbb
dec
add
and
iret
pop
cmp
adc
aad
add
ret
adc
in
or
mov
addr16
in
sbb
fs
aas
in
mov
ret
int
lcall
pop
pushf
shr
pop
pop
xor
sbb
test
shll
lahf
cs
ror
and
sbb
cmp
or
sbb
sub
cmp
mulb
repnz
fld
sub
rcll
and
ljmp
out
cmp
xor
add
sbb
dec
out
inc
lret
out
add
addl
mov
cmp
call
out
xor
jl
enter
ds
xchg
fwait
pop
pop
xchg
push
je
push
leave
popf
pusha
addr16
mov
mov
adc
sub
or
inc
into
add
mov
ljmp
ficomps
fstpl
daa
mov
in
jo
jnp
mov
lods
mov
xchg
dec
fxtract
cmp
jp
std
aad
dec
imul
in
jae
lret
or
cmp
sar
cmp
lret
pop
add
mov
cmp
std
dec
das
popa
inc
ja
ss
cmpsb
mov
push
mov
mov
repz
rorl
ss
push
notrack
lods
aas
sahf
lret
xchg
movsl
and
pop
movsb
dec
popa
mov
and
mov
bound
jecxz
out
and
mov
push
jne
adc
fisttpll
dec
sbb
in
jmp
int3
mov
stos
jno
push
mov
xor
cltd
mov
jg
push
push
dec
push
fwait
cmp
lahf
sbb
out
sbb
mov
adc
gs
scas
out
fbstp
stos
or
and
mov
pop
insl
nop
stos
adc
pop
mov
mov
stc
mov
lahf
xor
std
pusha
add
push
inc
mov
fwait
mov
sbb
dec
dec
movl
jbe
into
mov
xchg
in
xor
mov
push
push
ss
out
mov
fldcw
jmp
lcall
push
xor
mov
mov
add
xor
gs
mov
in
adc
ds
jb
push
out
int
repz
ror
stos
mov
jecxz
lcall
adc
sti
es
push
outsl
mov
sub
mov
aad
ret
pop
lds
fcoml
xlat
lods
lcall
es
aaa
jl
xor
and
jne
inc
mov
mov
ss
out
adc
test
push
mov
nop
out
imul
cmpsb
xlat
sub
lods
pop
mov
pop
cmpl
testb
or
add
mov
das
xor
xor
lret
roll
push
gs
push
jb
push
sbb
scas
les
movsl
push
int
aad
mov
lahf
pop
daa
xor
mov
int3
imul
cmpsl
jl
push
mov
pop
xchg
test
hlt
loope
dec
sub
stos
jne
sbb
inc
push
sub
pop
out
pop
scas
cmp
movsl
enter
sub
mov
sub
dec
lahf
adc
fcompl
lcall
sbb
loop
cmp
mov
mov
loopne
rol
cmc
je
aad
add
add
dec
inc
out
dec
jne
xchg
mov
pop
rcrb
push
stos
add
enter
xor
sub
xor
push
jle
sarb
pop
adc
cmp
imull
test
testl
imul
push
test
std
daa
sbb
adc
pop
lods
add
out
call
sbb
shrb
mov
mov
jnp
lods
ja
jecxz
xlat
or
int
ja
addr16
or
and
jo
dec
fdivrl
or
jle
divl
and
flds
popa
in
dec
scas
mov
and
xor
add
xchg
jns
mov
adc
cmp
push
testl
and
pop
popa
dec
scas
dec
pushf
in
mov
aas
sbb
rcrb
mov
mov
fwait
push
mov
das
in
sub
cmp
in
out
leave
arpl
fdivrs
scas
cmp
scas
add
push
sbb
fbstp
sti
cs
rol
cmpsb
stc
popf
jg
lcall
mov
aas
jmp
js
push
sti
and
testl
ljmp
pop
xor
pop
je
out
aad
fistpll
mov
outsb
shlb
pushf
lock
bound
dec
xchg
ret
jbe
adc
mov
sub
ss
adc
sti
fadds
leave
icebp
sub
outsb
aaa
xchg
leave
jle
fildll
jmp
cli
dec
popf
sbb
pop
push
fiaddl
iret
fmul
and
imulb
iret
out
cmp
mov
cltd
ja
pop
ret
push
pop
lret
fsts
jo
jb
jbe
cmp
xor
jecxz
add
iret
push
out
cld
mov
dec
cmp
mov
idiv
push
rcrb
das
mov
mov
aam
push
loopne
into
ret
xor
jns
xor
inc
int3
in
sub
insl
movsl
xor
sbb
mov
loope
jle
test
xchg
int
es
xor
in
xchg
rcr
setg
lock
jns
mov
inc
lret
addr16
repz
mov
mov
and
hlt
dec
pop
cltd
addr16
lret
xor
cmp
mov
pop
lret
pushf
sbb
push
jp
mov
lahf
pusha
scas
cmovbe
mov
push
ds
or
cmp
jmp
mov
in
enter
cmpsl
cli
sarl
testl
out
sbb
mov
repnz
mov
push
push
nop
mov
xchg
arpl
psrlq
pop
dec
pop
lret
xor
push
pop
inc
fs
fcompl
lret
mov
inc
fyl2xp1
movsb
jns
fwait
sbb
inc
in
lcall
adc
ret
lds
call
mov
test
cmp
xor
pusha
jno
mov
pop
sti
leave
or
popf
daa
xchg
loopne
test
mov
xor
sub
mull
add
pop
jecxz
out
in
cltd
gs
jge
cmp
jmp
loop
mov
mov
js
mov
sub
push
mov
mov
clc
sub
pop
and
pop
dec
mov
fisttpl
mov
fisttps
cmpsb
xor
mov
lret
xchg
push
outsl
lock
aam
in
xchg
add
mov
cld
dec
in
add
inc
in
icebp
push
add
bound
xor
stos
or
xchg
dec
mov
pop
int
icebp
ja
cmp
mov
outsl
add
push
les
push
hlt
mov
insl
adc
sbb
movsb
pop
add
dec
fildll
cmpsb
int
dec
cmc
faddl
dec
stos
add
add
push
dec
xor
nop
jne
sbb
mov
mov
aas
inc
xchg
aas
negl
mov
xchg
imul
pop
adc
mov
pop
sub
jp
and
and
inc
sbb
xor
stc
mov
dec
jns
cmc
dec
pop
mov
sahf
test
inc
sbb
push
sbbl
pop
aas
inc
jns
and
mov
imul
in
mulb
sub
gs
pop
jo
and
clc
sub
outsl
cltd
add
and
mov
mov
mov
cmc
mov
insl
mov
insl
cmp
out
jle
xchg
jl
sbb
jmp
cld
add
js
fwait
test
mov
xor
in
sub
jecxz
call
xchg
sti
or
stc
mov
lock
mov
out
xchg
sbbb
inc
scas
lret
jp
into
sahf
jecxz
jb
loope
cmp
push
popa
pushf
ljmp
cmp
rorb
xchg
sbb
dec
shll
lret
daa
sbb
push
jecxz
outsl
shll
fwait
sub
push
mov
push
in
adc
add
xchg
aas
pop
jne
push
int
pop
into
xor
stos
cmp
or
push
lret
test
sti
add
neg
pop
or
lret
mov
cmpsl
and
inc
dec
fwait
xor
ja
xchg
hlt
pop
popl
insl
divl
jbe
mov
mov
adc
jg
and
jnp
ja
mov
aas
das
mov
pop
cmp
xlat
xchg
jno
pushf
scas
add
fwait
inc
je
jae
mov
xor
notb
cmp
xchg
repz
push
pusha
fsubrl
xlat
sub
std
mov
inc
xlat
dec
cwtl
fadds
mov
mov
cmpsl
and
jae
rclb
test
xor
xchg
iret
jle
and
and
jle
pop
loopne
mov
aaa
pushf
iret
rclb
outsb
jmp
ret
sbb
rcrb
xchg
imul
push
mov
mov
div
xchg
rorb
lock
mov
loope
sti
call
mov
mov
fwait
adc
pop
inc
or
mov
out
sbb
cmp
stos
add
add
mov
aam
fnstenv
in
shll
out
stc
loop
jl
test
into
or
sbb
jl
or
sub
ret
inc
test
xchg
adc
or
stc
jbe
pop
mov
ror
push
jae
xorb
dec
fsubrl
stos
pop
test
movsb
cmp
inc
outsb
pop
movsb
add
leave
cmp
jp
push
adc
pop
test
and
jl
cmpsb
cltd
sbb
iret
mov
insl
and
mov
mov
lods
push
in
ss
pop
jge
mov
data16
sahf
add
xchg
jne
popa
cmp
stc
mov
loopne
movsl
dec
adc
pop
nop
dec
push
fcmovbe
nop
and
movl
mov
lcall
jp
out
or
fisubrs
pop
imul
addr16
mov
fsubrs
rol
or
push
dec
add
shrb
or
aam
push
scas
pusha
jbe
scas
or
push
mov
sti
xchg
jne
aas
inc
addr16
lahf
scas
mov
dec
bound
andw
mov
dec
lea
cmp
fidivl
sbb
test
shrl
out
pushf
xor
xchg
icebp
sbb
mov
pop
ret
mov
sbb
leave
xchg
mov
sub
sbb
loop
in
inc
cs
sub
aad
jo
or
push
imul
mov
dec
pop
mov
into
jno
ljmp
push
pop
mov
cmp
pop
dec
sbb
mov
sbb
and
inc
popf
in
inc
mov
or
repnz
das
mov
mov
gs
mov
insl
loope
inc
mov
bswap
loope
pusha
cmp
push
inc
xor
ret
xor
dec
ud2
push
imul
pop
mov
inc
test
movsl
das
orb
lcall
xlat
subl
ss
imul
inc
push
mov
jg
mov
pop
mov
lret
mov
add
jno
cmpb
ja
sub
movsb
out
mov
fstpt
pop
cld
mov
leave
mov
pop
and
push
adc
insl
mov
jbe
cwtl
pusha
in
ljmp
pop
pop
into
cwtl
xchg
jp
mov
jno
sbb
lret
arpl
aaa
or
jg
es
mov
push
sbb
pop
outsb
xor
and
sahf
inc
sbb
mov
sub
popa
aam
je
cltd
int
dec
testb
dec
sub
sbb
cltd
cmpsb
bound
es
sbb
xchg
ror
adc
fistpll
add
mov
ds
sub
sub
mov
decb
jnp
fcomi
or
mov
xor
mov
xchg
xor
outsb
lds
loope
loope
mov
loop
test
mov
cmp
cs
and
ss
jb
xor
mov
jl
sarl
mov
push
jg
in
cli
and
ds
mov
sbbl
inc
enter
mov
sti
jae
xor
and
pop
pop
push
adc
adc
push
xchg
loopne
aad
insl
test
mov
test
outsl
pop
out
in
aaa
nop
lret
jge
mov
cltd
lods
adc
mov
push
imul
pop
icebp
and
ret
push
cmpsl
out
jb
xchg
ja
sti
aaa
mov
in
mov
xchg
rorb
nop
dec
push
or
cmp
orl
push
jecxz
push
xchg
and
aas
push
sti
inc
shlb
cli
jecxz
ret
in
inc
or
imul
mov
test
or
xchg
dec
rclb
cmp
dec
inc
iret
add
or
aas
aaa
inc
or
jle
and
out
cmp
roll
out
dec
test
sub
inc
jmp
mov
lock
jae
in
iret
sub
xor
fildl
test
add
inc
test
mov
add
xadd
jl
test
aaa
incl
inc
mov
ret
frstor
aas
dec
outsb
fbld
xchg
leave
push
or
adc
push
xchg
andb
call
cmpsl
out
iret
mov
push
push
loopne
bound
pop
mov
out
out
roll
push
addl
add
lcall
and
addl
inc
fdivrs
out
mov
inc
cltd
sub
pop
jl
push
sbbl
loope
out
inc
ds
pop
inc
lcall
pop
push
cmp
xorb
gs
mov
pop
repz
jo
aaa
pop
pop
clc
inc
idivb
ficoms
or
push
pop
stos
xorb
adc
mov
dec
cmp
cmp
divb
inc
fdiv
pusha
ds
faddl
aaa
adc
fdivl
sub
jno
xor
xchg
xor
loop
sub
fbstp
daa
aaa
mov
lock
inc
lret
or
pshufw
sub
stos
dec
sub
and
nop
or
sub
ljmp
nop
je
cmpb
mov
mov
inc
popf
stos
cmp
and
stc
es
push
sbb
int3
stc
xchg
xlat
push
xchg
sarl
xchg
and
pop
sub
push
push
mov
clc
mov
call
mov
or
sub
push
sbbb
icebp
mov
inc
pop
movsl
cmp
addr16
movsl
and
adc
fsubr
movsb
sbb
insb
mov
mov
imul
xchg
test
es
mov
and
sbbl
call
orl
bound
add
stos
xor
xchg
into
mov
bound
cmp
push
pusha
sbb
mov
mov
dec
pop
xchg
xchg
and
mov
in
mov
sbb
pop
or
push
cs
dec
xchg
pop
inc
pushf
adc
rcrb
xchg
mov
out
stos
or
xor
loop
inc
mov
pop
aas
sbb
daa
jne
fdivs
mov
mov
jg
outsl
orb
lods
movsb
and
arpl
loopne
sarb
sbb
push
jns
dec
sarb
cmp
dec
sbb
dec
fists
pop
nop
inc
dec
inc
adc
cld
fildl
scas
xlat
in
cmc
mov
call
mov
push
mov
pop
or
insl
in
add
insb
and
push
jno
mov
ret
mov
xchg
dec
clc
jge
jne
ja
mov
out
test
and
mov
push
fmuls
rcrl
cmp
cmc
mov
mov
mov
push
jno
xchg
pusha
xchg
push
loope
push
insl
cmp
xor
repz
xchg
fstpt
xchg
fnstcw
daa
addr16
mov
cmpl
pop
clc
push
or
or
pop
jb
pusha
jno
clc
aaa
mov
ja
xchg
out
and
js
xchg
push
lret
lea
push
test
addps
push
shrl
cmp
and
push
inc
and
sbb
add
xchg
sti
jl
xor
test
ss
xlat
stos
pop
push
pop
inc
dec
xchg
pushf
inc
jns
aas
xor
add
jecxz
xchg
arpl
mov
ret
insl
pop
lret
pop
rcrl
ja
inc
inc
rolb
decl
pusha
cmpsl
repz
outsb
mov
xchg
mov
inc
inc
mov
outsl
inc
pop
inc
sub
mov
sbb
ss
push
push
pop
repz
pop
shrl
clc
and
dec
in
and
lods
sar
fs
loopne
ret
xorb
les
xlat
test
loopne
into
std
fcompl
inc
jb
data16
inc
and
sbb
push
dec
gs
mov
fwait
ss
inc
inc
imul
sbb
cmpsl
mov
jl
dec
xchg
mov
inc
enter
shr
popf
int
in
xlat
sti
sbb
jbe
fwait
cwtl
cmpsb
pushf
and
shll
sub
into
mov
pusha
ret
imul
cld
xchg
cmp
faddl
push
and
mov
pop
std
lods
xor
xor
dec
jecxz
jg
test
ds
pop
xchg
enter
ljmp
shl
xchg
mov
add
fwait
iret
adc
mov
cs
sbb
inc
lock
lds
sbb
sar
ret
xor
or
rclb
fs
mov
movsb
mov
inc
inc
das
test
pop
orl
pop
inc
cmp
movsb
adc
sub
cmp
movsb
sub
insl
incl
jne
add
pusha
jg,pn
lahf
sub
sub
jle
imul
pop
int3
jo
push
das
repnz
fdivrl
dec
cmpb
jno
int3
xchg
sub
pop
je
sbb
lret
aaa
hlt
int3
inc
add
and
sbb
lds
or
in
cmpsl
popa
std
cmp
mov
and
add
in
jno
mov
mov
xchg
xchg
xchg
sub
nop
dec
push
pop
jae
push
xor
xchg
xor
hlt
inc
sub
xchg
mov
icebp
xchg
xlat
idivl
mov
pop
sarl
inc
adcl
int
sub
add
sbb
sarl
dec
fwait
push
adc
mov
stos
add
cld
in
outsb
test
add
outsl
inc
call
xor
xchg
mov
in
ret
jmp
push
out
pop
call
sti
dec
fbstp
or
xor
fnsave
nop
push
mov
xor
and
dec
xor
jo
aam
xchg
imul
sbb
lahf
push
js
lods
adcb
jg
leave
cld
imul
out
mov
fdivr
mov
es
jnp
push
lods
inc
jnp
lods
mov
inc
int
sbb
dec
es
icebp
jnp
mov
aam
jns
ror
out
xchg
fwait
sbbb
aad
lods
dec
jb
adc
lds
xor
iret
xchg
inc
lret
gs
sbbb
rcl
push
out
insl
sub
out
es
test
aad
jnp
and
sub
test
adc
lods
fstps
adc
mov
jne
cmpsl
push
mov
xchg
push
data16
pop
dec
jnp
aaa
push
jae
iret
or
lods
push
cmc
addw
pop
xchg
push
insl
jnp
and
fidivl
gs
in
xchg
add
sahf
cmc
mov
pop
push
or
fistl
mov
divb
fsubl
pop
xchg
fninit
push
cmp
ret
in
sub
out
test
cmp
ljmp
bound
inc
cmpl
lret
pusha
xor
jle
pop
xchg
sbb
push
adc
push
add
iret
icebp
call
mov
sub
aaa
and
jno
sub
cmp
mov
icebp
mov
mov
add
inc
push
imul
rclb
sub
call
movsb
cltd
dec
xor
sbb
push
push
fwait
iret
jbe
sub
inc
mov
pop
inc
sbb
push
ret
inc
shlb
lds
pop
mov
es
leave
xor
inc
mov
pop
xchg
pop
pop
inc
imul
inc
pop
jae
loopne
adc
push
scas
mov
cltd
inc
frstor
bound
loope
pop
jae
cmp
cltd
pop
jnp
mov
xchg
in
movsb
xor
mov
scas
inc
dec
dec
lods
sub
outsl
call
je
pop
and
pxor
xchg
loopne
fcoms
or
mov
mov
mov
xchg
push
mov
and
inc
jecxz
adc
outsl
in
add
add
outsl
out
mov
sbbb
dec
pop
xor
jno
push
cli
aaa
test
dec
insb
mov
add
mov
pmaxsw
nop
into
in
cmp
sub
insl
sub
sbb
mov
add
hlt
fdivl
or
hlt
jg
xor
pop
sbb
dec
out
add
test
lods
repnz
sahf
outsb
sub
data16
jbe
pop
out
js
mov
ret
out
and
fmulp
push
xchg
xchg
out
push
xchg
jo
popf
mov
scas
rorb
out
mov
scas
cltd
xor
dec
jns
lcall
lods
lret
mov
xor
jno
in
imul
ret
or
adc
sbb
pop
add
jb
inc
or
movb
popa
jle
gs
loop
push
fxch
ja
shll
add
cwtl
xor
pop
scas
mov
mull
out
cmp
inc
setbe
mov
adc
lahf
push
ds
or
int3
xor
insl
cld
lods
ficomps
in
rol
mov
xchg
mov
cmp
ljmp
mov
orl
fucomp
mov
dec
jb
popa
std
sar
insb
test
jo
cmpsb
je
sub
or
mov
mov
iret
fwait
loop
mov
push
cmpsb
inc
mov
sub
fnsave
out
cld
filds
dec
pop
cmpb
fisubrs
rcrl
adc
or
sub
fbstp
outsl
bound
loopne
push
insl
xlat
fs
cld
jge
xchg
lods
fidivrs
push
pop
xlat
xlat
mov
xor
push
loop
and
clc
sahf
mov
call
int3
add
lods
xor
insb
xor
xchg
pop
or
jno
xor
dec
lret
xchg
inc
idivl
jbe
push
xchg
push
aas
and
mov
js
push
ret
insl
jno
das
je
sub
mov
sub
adc
mov
push
daa
fwait
mov
pop
ss
and
or
xchg
add
adc
sbb
in
cmpsb
mov
jmp
shlb
pop
aam
xor
push
xchg
cs
lcall
xchg
push
cli
pmaxub
xor
mov
loopne
xchg
jb
mov
idivb
ss
xchg
cwtl
and
and
sbb
cmp
mov
mov
push
mov
dec
jb
adc
cmp
push
sub
out
test
aaa
pop
decb
andb
push
dec
inc
incb
inc
or
test
mov
fnstsw
aaa
and
pop
jno
cltd
lds
or
add
add
dec
into
jo
cmp
jnp
popa
push
push
cwtl
cmp
lret
cmp
andl
jmp
jae
out
cmp
test
js
bound
faddl
jecxz
xor
in
and
mov
xor
xbegin
mov
into
dec
sbb
dec
pusha
ja
clc
and
or
dec
shll
mul
cwtl
push
xchg
out
ljmp
xchg
mov
jge
mov
pop
push
loope
xchg
movsb
mov
push
dec
daa
mov
mov
mov
pop
in
jb
sub
cltd
mov
mov
xorb
and
out
es
loopne
jecxz
ljmp
repnz
outsb
mov
sbb
ret
negb
xor
jle
jecxz
repz
jle
inc
cmpl
push
xchg
jp
cwtl
add
pop
mov
mulb
lods
out
jo
push
pop
mov
or
fxch
cld
shll
mov
jl
imul
xchg
xor
jg
call
dec
fiadds
lods
mov
push
add
stc
cs
stos
and
aaa
pushf
loopne
dec
test
iret
pusha
or
std
dec
cmp
dec
dec
sbb
mov
xchg
inc
and
mov
mov
cmpsl
fucom
jl
daa
lods
cmpsb
aad
sahf
add
xor
fldl
ljmp
jge
mov
mov
jnp
int
or
pop
mov
pop
fs
movsb
or
mov
jno
mov
ljmp
aaa
dec
mov
lret
dec
xor
xchg
test
adc
cmpsl
mov
dec
inc
aam
fneni(8087
inc
mov
cld
ss
out
pop
mov
mov
cli
cmp
scas
jae
out
das
push
sub
sbb
nop
pop
sti
int
adc
scas
arpl
mov
das
adc
xchg
and
pop
lcall
mov
xor
pop
xchg
mov
rcl
ds
fsubr
cwtl
cmp
fists
mov
jmp
ficompl
mov
inc
xchg
imul
js
cmpsl
fwait
xlat
loopne
ret
sbb
scas
xchg
jmp
pop
sub
sti
sub
test
jle
or
imul
inc
or
sbb
arpl
jno
mov
pop
repnz
dec
outsb
adc
jge
int3
cmpsb
lcall
ret
jecxz
rorb
test
decb
jb
leave
fstps
inc
or
xor
das
adc
in
cmp
outsl
xor
outsl
pushf
sub
jp
inc
adc
pop
fnstcw
data16
mov
outsl
hlt
push
inc
mov
clc
clc
fldenv
frstor
f2xm1
or
cmpb
push
dec
scas
and
dec
jae
aaa
push
mov
movsl
or
jno
into
sbb
das
add
add
test
mov
sahf
adc
adc
adc
add
sub
lret
in
lods
ljmp
ds
das
cmp
repz
xor
mov
xchg
add
inc
outsl
mov
mov
jmp
subl
int3
js
mov
mov
push
xchg
ror
shrb
mov
test
pop
gs
pop
ja
mov
add
in
and
idivl
les
loopne
aad
je
imul
adc
cmp
imul
sbb
out
outsb
repz
sub
cmp
das
sub
pop
sub
pop
xorl
xor
mov
fistpll
scas
push
pop
aas
sub
fldl
in
xchg
in
movsb
push
rcr
sbb
xchg
sarl
bound
stos
aam
rcrl
test
mov
scas
mov
and
jp
mov
mov
in
cmp
aas
loope
insb
jno
mov
inc
xchg
stos
xchg
arpl
mov
xorl
sbb
mov
add
xor
call
pop
sbb
mov
xor
das
std
xchg
jae
sbb
test
xor
jb
mov
lret
imul
cmp
jg
testb
lret
insl
mov
inc
loopne
cmpsl
add
jae
cmpsl
add
or
scas
fcmovbe
imul
sub
les
inc
cwtl
test
aad
adc
adc
subb
mov
xchg
dec
xchg
popf
movsl
cli
out
cmpsl
test
pop
fidivrs
mov
jnp
xchg
xchg
pusha
movsl
sub
jns
sub
dec
cwtl
mov
dec
imul
mov
aam
insl
ljmp
cltd
es
movsl
dec
jmp
insl
and
add
xor
sbb
inc
roll
cmp
sbb
xlat
adc
test
sub
repz
negb
sbb
inc
mov
and
repnz
pop
shll
inc
mov
or
pusha
push
sbb
stc
cmp
jecxz
jge
and
incl
loope
inc
es
and
cmp
orl
xor
repz
in
mov
adc
clc
into
mov
xorl
cli
jo
imul
inc
sub
xor
jmp
push
xlat
lea
cmpsl
outsl
insl
pop
fnstcw
inc
aaa
daa
subb
sbb
ret
mov
mov
aas
xlat
jnp
les
aad
jns
cmp
sti
fistps
push
cmpb
lods
pop
inc
negb
inc
jge
andb
les
test
and
std
js
popa
push
inc
lret
xor
es
stos
mov
popa
lds
or
dec
aad
pop
sub
cmpsl
xor
pop
sub
sbb
mov
xchg
movsb
loop
psubsw
cwtl
mov
cli
pop
add
mov
adc
lock
pushf
or
jns
fiaddl
sub
mov
movsb
mov
mov
mov
popf
cld
pop
loope
adc
mov
pusha
clc
mov
xchg
arpl
or
pop
xchg
xchg
int
mov
std
jns,pn
pop
insb
insl
xlat
lcall
ret
pop
aad
sub
ja
cmc
pushf
dec
lds
jno
daa
fisubrs
pop
lods
imull
outsl
insb
lahf
out
fistpl
add
loope
out
inc
mov
pop
sub
add
sub
jbe
popa
mov
push
aam
insb
sbb
repnz
mov
cmp
mov
fcomi
rcrl
lods
ss
sahf
fldl
test
sbbw
sbbl
add
jecxz
mov
enter
jmp
movsl
popf
test
div
sbbb
fiaddl
outsb
inc
jge
pop
enter
mov
adc
in
jle
cmp
stos
push
lsl
loopne
fwait
adc
xor
out
testl
clc
push
imul
sub
test
fnstenv
hlt
pop
add
cmp
insb
mov
cmpb
pop
into
mov
sarb
lret
call
inc
inc
push
jne
push
xor
mov
xchg
outsb
cmp
adc
rcl
sbb
jecxz
mov
lret
enter
cltd
inc
cli
cmp
in
subl
push
fs
xor
fwait
jmp
cwtl
data16
leave
cmp
fidivrl
in
xchg
jp
pop
mov
ret
popf
xchg
pop
mov
inc
in
lods
fldt
dec
or
fisubl
bound
xchg
mulb
and
xlat
xor
stos
push
push
and
imul
mov
fucomi
leave
cwtl
mov
dec
sbb
pop
gs
inc
push
mov
in
and
cmp
cli
shrb
and
mov
sub
add
mov
inc
divb
mov
nop
loop
cmp
sahf
daa
lods
mov
sahf
cmpsb
inc
mov
setle
lcall
xor
mov
arpl
and
sbb
mov
pop
push
es
lret
mov
xor
inc
jno
jg
pop
push
xchg
lcall
push
xchg
fisttpll
clc
and
mov
jmp
xchg
dec
std
sbb
fxch
jno
xor
in
sub
sub
jno
xchg
pop
adc
adc
push
inc
jl
mov
mov
rcrl
jmp
dec
sbb
pushf
dec
sub
dec
pushl
lret
fcoms
xchg
addr16
jnp
pop
testb
add
call
mov
pusha
dec
pop
outsl
test
pushf
in
cmovl
mov
jnp
bound
fwait
jns
jl
mov
jle
sub
xor
push
fldcw
pop
in
jbe
divb
jae
add
sub
in
pop
or
sbb
fstl
bound
pandn
ficoml
arpl
outsb
or
jb
xchg
adc
or
mov
insl
es
jbe
jo
daa
push
aas
sarl
xor
lea
mov
outsb
lods
add
mov
fsubrl
push
mov
add
adc
in
jp
mov
lea
dec
pop
ja
cmp
int
pop
xchg
adcl
dec
push
pop
pop
hlt
mov
sub
push
sub
movsb
or
mov
lret
sbb
xlat
leave
popa
cmpb
icebp
popa
xchg
mov
int
and
inc
push
xchg
leave
adc
fwait
hlt
repz
shlb
xor
shl
shll
mov
xchg
cmovae
repz
out
mov
cli
cltd
inc
out
sbb
sub
bound
mov
cmp
dec
sbb
fidivl
cmp
dec
stc
inc
cmp
bnd
sti
fcoms
mov
lods
out
ja
mov
adc
lods
cmp
inc
sahf
mov
in
out
outsb
mov
out
cmp
cmp
dec
je
sub
sahf
je
mov
lds
fildll
cmc
or
std
lods
mov
pop
imul
add
pop
iret
lret
jmp
mov
mov
and
xchg
mov
rcrl
outsb
cld
or
jbe
or
int3
scas
mov
cltd
cmp
fwait
aas
lret
clc
lods
mov
sbb
sti
xchg
test
and
data16
lds
movsl
adc
popf
fwait
lea
fadds
inc
mov
in
lods
in
fwait
sub
xor
les
cmpsl
outsl
push
mov
pusha
mov
adc
mov
lds
adc
dec
jg
shlb
aaa
leave
dec
mov
add
and
push
cld
adc
add
or
add
fwait
int
mov
repnz
or
lcall
sub
xor
mov
in
sbb
push
xor
aam
lds
jle
push
ds
push
fdivrs
dec
push
inc
jo
cs
loop
mov
mov
dec
arpl
dec
invlpg
fucomp
lcall
or
mov
cmp
inc
lock
rolb
stos
repz
push
jo
mov
and
xor
out
push
xchg
pop
mov
test
les
inc
cmp
sti
loopne
mov
cmp
jge
rcl
mov
jmp
movsl
xor
sti
aaa
cmp
push
or
jnp,pt
push
lods
inc
test
pop
neg
movsl
repnz
lea
out
faddl
daa
pop
xor
xchg
fistpl
aas
js
cmp
adc
xlat
inc
jnp
outsl
sub
jnp
and
cmp
sbb
sahf
or
cld
push
fcomps
adc
jne
fmull
ror
pop
in
add
pushf
pushl
pop
dec
idivl
sub
stos
sub
push
sbb
and
push
popf
mov
sar
ds
aas
sbb
push
je
addr16
enter
xlat
std
fdivs
inc
outsb
and
aam
enter
lcall
lret
xchg
add
call
inc
mov
mov
xchg
popa
aaa
jns
bound
jge
pop
and
add
loope
das
jl
lea
sbb
out
pop
bound
pop
jmp
and
mov
inc
mov
inc
jecxz
test
lock
mov
jnp
ss
jmp
inc
into
enter
fwait
idivb
xlat
lret
mov
pusha
xor
ljmp
and
jecxz
pop
scas
test
jmp
jg
std
and
outsl
jl
pop
dec
out
shrl
stos
jp
and
jbe
outsl
fildll
insl
xlat
xchg
push
push
xchg
adc
sub
test
or
outsl
pop
xchg
dec
cmc
and
orl
pop
inc
dec
punpcklwd
xrelease
repz
and
mov
jecxz
push
std
loop
sbb
repnz
movsl
int3
test
cmp
sarl
jp
xchg
stc
sahf
insb
ljmp
pop
in
jb
xchg
xchg
daa
xlat
jo
shr
or
mov
mov
test
sbb
lcall
ljmp
scas
mov
sbb
mov
ss
icebp
push
nop
cli
cmp
test
test
hlt
xor
icebp
lods
shl
mov
ss
mov
bound
mov
scas
jae
cmp
in
hlt
fcmovnb
outsl
jmp
fimull
mov
rcr
inc
cmp
insb
jmp
xor
int
lcall
mov
ja
test
fwait
pop
mov
cmp
rolb
into
jne
mov
inc
daa
jb
cs
shrl
test
scas
adc
sub
loopne
add
cs
sub
cmp
shll
add
imul
cmp
or
fldl
stos
enter
jl
roll
push
ret
pop
cmc
sub
lret
cmpsl
fs
loop
cmp
pop
or
or
adc
and
pop
cs
xchg
sbb
cmp
cli
sbb
nop
rcll
imul
arpl
xor
andl
call
enter
pop
ds
mov
push
inc
sbb
fidivs
in
pusha
push
xchg
jle
jp
cmpsb
pop
cltd
je
push
push
out
mov
gs
fs
lret
movsl
jge
icebp
mov
and
dec
mov
ds
fildl
inc
xchg
or
sbbb
call
cs
cltd
lret
xchg
or
loopne
scas
pop
ja
test
sbb
test
arpl
and
pcmpeqb
fisttps
jb
mov
cli
pop
int
inc
notb
cmp
imul
mov
sbbb
jns
subl
clc
aaa
dec
stos
lret
loop
xchg
xor
mov
cwtl
ljmp
jmp
lods
jle
xlat
cmpsl
mov
push
nop
inc
fcoms
jne
testb
or
test
xchg
int
mov
and
or
repnz
cwtl
aaa
pop
mov
test
or
push
test
out
in
cmp
xchg
ret
push
je
sub
mov
xchg
aad
insl
jecxz
mov
in
stc
pop
js
xchg
stc
jge
dec
cltd
pop
xchg
loopne
shrl
push
sahf
sbb
xor
popa
shl
adc
sub
mov
inc
ds
xchg
ss
lods
lods
sub
sti
in
bound
push
lock
lahf
lods
es
mov
dec
shrb
cmp
mov
lcall
push
mov
daa
adc
repnz
jo
jns
xchg
jno
adc
jo
mov
xchg
cmp
push
pop
xchg
pop
dec
aaa
loop
bound
pop
fists
out
lock
in
mov
add
rcll
aas
scas
ljmp
nop
push
into
dec
jbe
jmp
cmp
dec
jno
mov
inc
fldt
jle
mov
test
lahf
xchg
mov
adc
sub
push
ret
mov
stos
inc
pop
mov
inc
push
scas
jmp
or
mov
dec
lock
mov
push
dec
in
push
sbb
adcb
xchg
push
roll
dec
shlb
lea
ss
xlat
and
aas
fisttps
mov
enter
sbb
mov
pushf
iret
ret
mov
scas
dec
clc
fldenv
dec
dec
rorl
mov
test
mov
fsub
pop
in
int3
dec
cli
sbb
mov
pop
jl
hlt
or
and
or
int
jge
or
cmp
test
xor
je
jae
sub
sarl
fs
lret
arpl
jge
add
pop
aaa
ret
rorl
decb
xchg
jno
fbld
fdivrs
cmp
std
movsb
dec
stos
incb
lds
or
push
cmc
mov
mov
add
inc
jae
in
push
aaa
adcb
mov
lods
jecxz
test
mov
add
jbe
ds
adc
push
mov
push
cli
rcrb
lock
outsl
jnp
aaa
sub
cmpsb
inc
add
xchg
sub
and
jno
fdivrl
pop
mov
add
sub
shll
fs
jne
inc
xor
xor
xchg
cld
jb
and
cwtl
or
or
stc
sub
push
mov
testl
lret
sub
aad
addr16
sub
outsl
rcrb
push
jmp
sub
mov
cmpsb
push
mov
inc
inc
pop
mov
icebp
and
or
mov
jae
cwtl
gs
in
cvtdq2ps
mov
ja
jl
jne
mov
lea
sub
jmp
daa
mov
cmc
imul
rolb
jnp
mov
imull
jmp
and
push
lock
adc
aad
mov
loop
imul
ss
outsl
adc
sbb
jge
and
sahf
iret
loopne
test
xchg
lcall
hlt
rclb
lcall
cltd
adc
pop
popf
mov
mov
loop
pop
scas
dec
push
dec
xlat
aaa
mov
xchg
daa
jp
add
push
and
lods
loopne
test
pop
mov
cld
jns
push
xor
xchg
and
movb
std
cmp
ret
outsl
xor
pop
test
aad
jl
orl
add
dec
jo
mov
add
test
push
adc
pop
out
mov
mov
pusha
sub
and
jo
imulb
popf
pop
test
mov
push
and
adc
add
sbb
inc
sub
test
jae
inc
leave
inc
cwtl
mov
in
clc
xchg
test
fcmovnu
jb
les
cmp
jnp
js
sbb
repnz
mov
insl
outsb
fsts
inc
ljmp
js
aas
pop
cmp
add
push
stos
cmp
cwtl
dec
jp
jne
int
clc
jge
test
or
bound
mov
loope
mov
dec
push
sbb
or
jne
and
pop
xor
push
cmpsb
icebp
mov
rcr
fsubs
xchg
dec
pop
lcall
sahf
loopne
imul
xor
in
jp
test
cmc
inc
cmp
mov
mov
dec
loop
rorb
xlat
xchg
sub
addb
jle
fildl
mov
lahf
push
inc
xchg
je
xor
outsb
mov
and
ret
test
jg
sbb
pop
jecxz
in
cmc
add
int
inc
cs
out
push
div
lds
js
pop
ret
jg
pop
xor
mull
sub
mov
or
or
push
pop
xor
inc
jp
jo
out
dec
dec
cs
mov
pushf
mov
rclb
cmp
insl
jno
adc
std
fstpl
push
int3
sub
pop
test
and
ss
jle
icebp
xchg
xor
push
lcall
cmc
cmp
cwtl
inc
sbb
sbb
lret
shl
les
jp
adc
in
jp
lock
out
jae
cltd
in
inc
loop,pn
mov
sbb
movsl
jl
rcll
pusha
fiadds
repnz
test
mov
ss
or
mov
addr16
adc
or
pushf
outsl
cmp
popf
aas
sbb
mov
mov
aam
aas
fisubs
out
and
and
insb
pusha
adcl
xchg
das
mov
xchg
push
je
lret
add
adc
pusha
std
les
add
rolb
cmc
xor
icebp
push
push
mov
insl
daa
test
clc
adc
inc
loope
mov
enter
or
push
aaa
push
jnp
ss
and
out
sahf
rcll
aaa
xchg
add
ret
sub
int3
xchg
es
jb
divb
cmp
jbe
mov
out
adc
je
dec
imul
sahf
sub
sub
stos
pop
mov
es
movsb
aaa
ficomps
mulb
or
lods
fisttpll
sub
jo,pn
scas
push
xor
mov
pop
daa
insb
inc
das
xor
xchg
scas
repz
xor
daa
jmp
cmpsb
out
jp
sub
int3
or
mov
xlat
mov
cmpsb
sub
fldl
push
inc
je
dec
loope
inc
cwtl
mov
dec
jno
mov
sbb
xor
mov
cmp
or
push
enter
dec
mov
and
dec
xor
pop
lods
push
mov
idivb
mov
fistpl
ljmp
nop
adc
xlat
ljmp
xor
mov
ss
outsl
clc
mov
jbe
sub
ljmp
test
call
stc
pushf
mov
dec
lcall
or
inc
cmp
push
mov
rol
inc
stc
mov
inc
cwtl
pop
or
ficoms
shrb
cmpsl
jbe
lret
cld
lea
scas
std
pop
jge
addb
dec
xchg
in
in
xor
or
xor
add
cmpsl
add
frstor
jl
push
xchg
leave
jge
movsl
or
sarb
xchg
push
push
pop
test
lret
push
paddb
or
mov
popf
aad
jnp
mov
add
add
sahf
cmp
test
mov
add
push
imul
mov
pop
aam
cmc
decl
jmp
pushf
inc
loop
icebp
push
stc
sbb
xor
loop
arpl
dec
and
sbb
mov
das
xor
dec
outsl
sub
fwait
xchg
xchg
push
ss
int3
sbb
xchg
dec
repz
sub
out
popa
ja
xor
test
pop
xchg
mov
loopne
icebp
rorl
out
dec
push
adc
data16
imul
mov
insb
lods
and
popa
pop
pop
xchg
int3
data16
test
subl
pop
xor
out
int
jmp
fisubs
and
lods
gs
shr
mov
nop
mov
xchg
dec
sbb
adc
mov
xor
mov
xchg
dec
dec
hlt
adc
mov
add
sahf
adc
cwtl
pop
rol
sub
popa
int
jp
sarl
lods
repnz
cmp
push
loope
pusha
aad
fidivrs
icebp
xor
popf
loopne
jnp
cmp
xor
bound
ljmp
cs
sti
pop
sahf
or
cmp
push
inc
jnp
push
mov
sub
jp
fcomps
mov
pushf
in
dec
scas
mov
mov
push
cltd
les
pushf
inc
add
cwtl
test
lds
xor
cltd
sub
loop
cmpsl
adc
lods
or
fsubp
enter
mov
inc
inc
mov
or
jecxz
fs
int
add
pop
shl
out
pop
inc
fildll
nop
das
mov
lret
ret
data16
push
sbb
inc
or
push
xor
pop
cmc
jb
test
push
mov
mov
scas
jns
inc
imul
sbb
jbe
fnstcw
dec
jge
jmp
xchg
mov
push
repz
xchg
out
push
sbb
mov
adc
sbb
into
fs
in
iret
scas
nop
mov
test
int
xor
popa
lods
xchg
hlt
imul
add
or
push
xor
addr16
mov
mov
xchg
push
adc
xchg
psllq
sbb
shlb
mov
in
jmp
dec
out
mov
dec
aad
lcall
jge
adc
imul
lods
test
and
push
lret
xor
inc
push
mov
minps
push
lcall
sbb
fdivr
pop
iret
push
js
dec
jmp
mov
pop
mov
fcmovne
clc
fdivrl
scas
push
sub
lea
mov
insl
push
xchg
cmp
leave
xlat
xchg
cs
push
in
dec
out
xlat
mov
addr16
inc
sub
jl
popa
mov
add
or
push
mov
push
ret
insb
push
stos
xor
mov
cmp
push
lret
mov
jne
in
jo
aas
and
mov
in
or
sub
insl
fnstcw
bound
mov
push
loop
lods
cmpsb
add
popf
nop
inc
inc
and
icebp
std
mov
rorl
dec
scas
mov
in
negb
mov
jle
cltd
jne
inc
xchg
xchg
mov
push
lea
mov
scas
popa
loope
jle
mov
sub
aam
cs
ret
and
dec
lret
cmpsb
nop
cmp
jecxz
dec
movsb
xor
and
gs
call
sar
insb
adc
push
ret
and
push
fwait
das
xor
mov
pop
mov
fidivs
insl
rcrb
out
adc
sbb
adc
jecxz
mov
adc
outsb
sarl
lea
clc
mov
bndldx
setne
testb
pop
pop
jb
sub
sbbb
mov
jge
orb
pop
frstor
add
fcomi
or
jbe
xor
outsl
out
dec
aam
or
pop
loope
nop
lret
dec
xor
ljmp
and
mov
pop
dec
mov
les
repz
fucomp
pop
js
and
fisubrl
inc
jp
mov
insl
fdivs
mov
icebp
mov
adc
sbb
test
lds
adc
or
pushf
ds
adc
pop
sahf
push
lock
push
adc
mov
std
pushf
cmp
js
mov
cmp
mov
into
jmp
lods
inc
fwait
aam
and
pusha
arpl
push
or
sahf
ror
in
mov
mov
sbb
dec
dec
mov
je
sbb
add
jmp
jb
inc
push
pusha
sbb
push
add
int
or
push
insl
movsb
mov
sub
mov
xchg
xchg
leave
add
mov
insl
pop
xchg
insb
cmp
mov
jno
ret
mov
jns
xorb
insb
test
out
cmp
gs
xor
das
insb
jnp
fcmove
ljmp
mov
mov
sub
mov
outsl
mov
jns
das
push
cmp
jg
nop
mov
ss
iret
fstl
int
sbb
out
fwait
xor
push
push
xlat
lahf
sbb
in
jbe
rep
pushf
fstp
or
push
push
ja
divl
mov
dec
mov
insb
popa
dec
stos
sbb
xor
es
inc
fiaddl
jle
mov
loop
lods
stos
fcmovne
cmp
gs
rorl
scas
mov
fistpl
pop
xchg
xor
cmp
out
sbb
cmp
shll
shlb
xchg
and
or
jle
jmp
cld
aas
pop
push
jae
mov
addl
into
jmp
adc
fwait
push
inc
sahf
icebp
jne
mov
mov
inc
fcmovbe
cmp
int
pop
loopne
adc
and
sub
mov
popa
fisubrl
sub
push
dec
jb
call
cmp
and
orl
dec
cmpsb
aad
dec
add
ret
adc
ljmp
mov
add
cmp
push
cmp
mov
pop
nop
mov
and
sahf
xor
mov
mov
outsl
pop
mov
rcr
add
jl
clc
negb
in
pop
fcmovbe
in
aas
adc
xchg
aas
mov
mov
or
dec
mov
loopne
pop
hlt
das
rol
mov
mov
mov
cmpsl
push
shl
xchg
dec
adc
dec
mov
jo
outsl
dec
mov
push
xor
dec
dec
xor
ss
rclb
mov
inc
repz
lea
dec
or
or
fistpl
push
pop
sti
dec
lods
mov
movsl
dec
pop
jge
inc
dec
jo
lods
dec
test
mov
mov
cmp
or
ja
jmp
cltd
inc
mov
add
lret
cmp
cs
mov
push
xor
and
gs
imul
push
movsb
das
gs
jle
pop
pop
add
pop
int3
fdivp
dec
jb
cmpsl
cltd
add
imul
xchg
stc
push
jmp
sbb
pop
add
xchg
mov
aas
mov
and
sti
mul
xchg
inc
icebp
jmp
xlat
loop
inc
or
push
mov
lcall
or
mov
dec
out
dec
or
pop
sbb
cmp
adc
mov
push
sub
je
mov
sub
fwait
or
sbb
pop
lret
dec
pop
outsl
lds
cmp
repnz
jae
cmp
jb
add
add
orl
add
cwtl
cli
arpl
test
frstor
sarl
dec
ss
out
lret
loop
sti
insb
jecxz
or
lret
incb
add
pop
daa
xchg
jnp
ds
ds
inc
or
inc
scas
lretw
lock
push
inc
lret
mov
scas
bound
cmp
mov
les
lods
inc
inc
iret
mov
jmp
xor
cld
lret
enter
or
dec
adc
je
lahf
sahf
inc
leave
lods
stos
cmp
test
mov
int3
xor
pop
and
xchg
test
sbb
pusha
fists
pop
mov
pop
jle
mov
jge
push
jle
mov
mov
xchg
xchg
mov
mov
mov
push
movsl
inc
sahf
mov
mov
fldenv
dec
clc
cld
jae
call
pop
mov
or
cltd
inc
aam
add
sbb
scas
cmpsl
sub
xor
jmp
and
or
rcl
outsl
push
push
push
xchg
inc
adc
jg
jge
add
add
iret
fucomip
mov
minps
add
pop
adc
ret
and
out
mov
mov
js
pushf
fdivl
pushf
js
jl
push
push
sti
pop
ror
inc
out
jle
push
dec
or
add
lahf
gs
movsl
rolb
xor
pop
sub
xchg
lea
jnp
push
mov
sbb
sub
js
cmp
repz
dec
lods
pop
and
cltd
add
mov
jae
rcrl
int
popa
shlb
test
popa
mov
pop
xchg
out
ss
fimuls
gs
push
or
adc
stc
lods
imul
xchg
inc
pop
lods
inc
mov
mov
push
mov
and
inc
push
sbb
es
and
xor
outsb
mov
les
jo
dec
test
and
cltd
xchg
cmp
add
mov
jae
imulb
or
jge
xchg
ret
mov
movsl
aam
adc
js
daa
mov
cmp
das
movb
cmp
insb
push
into
addr16
lods
add
sarl
mov
cmp
push
pop
fstpl
inc
dec
jo
movb
pop
push
cmc
ss
aas
cwtl
push
addb
mov
out
dec
xchg
pmulhuw
enter
ret
stos
call
out
insb
mov
or
fsubrl
les
jae
out
insl
imul
lods
cmp
repz
or
xchg
movsb
mov
jae
push
lcall
inc
mov
repz
in
pop
decl
aam
adc
dec
fcmovb
int
in
imul
mov
push
daa
into
mov
mov
lock
setle
subb
andl
add
shrb
sub
push
ss
icebp
jo
icebp
dec
jmp
pusha
mov
mov
dec
pop
mov
dec
scas
add
out
mov
rol
jnp
mov
sbb
lock
lock
fadds
mov
adc
lret
not
stos
sbb
insb
mov
pop
int
movsb
stc
xchg
mov
dec
mov
cmpsl
cmpsl
fs
test
xor
shrb
push
test
sub
mov
mov
pop
out
jnp
std
popa
push
jl
add
in
mov
in
adc
mov
mov
xor
adc
mov
stos
addl
in
mov
push
aaa
lahf
jl
cmpsl
andl
mov
and
mov
cmp
push
inc
push
lods
icebp
mov
cmpsb
xchg
jge
sbb
jns
popa
sar
pushf
mov
jp
xchg
shl
rol
fpatan
lcall
inc
mov
push
call
pop
sub
lods
pop
andl
ds
mov
outsb
hlt
pop
out
or
xchg
ss
cmpsb
stos
insb
dec
aam
or
jl
xor
in
mov
mov
sub
lcall
in
dec
jae
lahf
loop
mov
sub
xor
shll
mov
call
mov
ret
push
movsb
and
add
inc
filds
xor
cmp
rorl
adc
pop
std
xlat
and
pop
jbe
repnz
and
insb
add
es
mov
les
leave
test
add
sbb
sub
addr16
data16
xchg
sbb
mov
sub
xchg
daa
lret
pusha
fcoml
xor
mov
scas
insb
inc
sbb
cmp
std
dec
add
shl
loop
test
stos
lahf
aad
addr16
outsb
cmp
adc
jb
inc
sbb
test
pop
mov
iret
jmp
out
add
xor
das
popa
jnp
pusha
ljmp
dec
or
push
and
in
fisttpll
loop
call
xchg
out
cmp
xor
mov
fdivrl
mov
mov
mov
jge
mov
or
test
stos
sbb
jne
dec
lods
mul
push
xchg
movl
sub
jne
clc
cmp
dec
hlt
sub
add
shll
cmc
fistps
mov
js
pushf
jbe
mov
dec
aad
jg
adc
cmp
mov
xor
mov
push
jno
jnp
cmpb
jge
mov
mov
push
sub
pop
pop
jbe
data16
lods
adc
fnsave
dec
xchg
daa
sbb
mov
shrl
sarl
pop
cs
xchg
jg
lret
mov
or
enter
add
mov
push
outsl
ret
sbb
jge
sbb
mov
add
jo
pop
mov
adc
icebp
inc
pop
loop
inc
sub
push
adc
pop
outsl
outsb
pop
out
mov
icebp
mov
lods
lret
mov
dec
shlb
jp
sub
xlat
inc
js
xor
push
mov
test
lahf
dec
sbb
insb
mov
cmpsl
pop
in
xlat
mov
and
outsb
sub
es
in
insl
sbb
bnd
stos
rol
jle
and
jnp,pt
cmpsb
push
scas
mul
cmp
icebp
outsl
sahf
repnz
or
outsb
js
insl
xchg
sbb
loop
and
inc
aam
mov
pushf
and
scas
pop
adc
push
mov
mov
and
xor
inc
or
scas
out
pop
aad
shll
inc
xchg
and
push
and
jg
movsl
and
mov
xor
out
inc
push
or
testb
mov
inc
clc
cmp
pop
gs
sbb
add
lcall
pop
mov
sub
push
das
cs
out
xchg
add
add
rorb
out
sub
lods
add
or
popa
dec
addl
pop
xchg
sbb
rcrb
clc
fildl
scas
sbb
jp
inc
inc
daa
test
jno
jno
xchg
mov
js
jns
lods
lcall
lahf
dec
push
addb
mov
lods
jnp
lret
dec
int
sbb
xor
mov
test
mov
mov
cmp
mov
fcomp
fbstp
jecxz
add
out
jmp
dec
roll
mov
inc
shlb
sub
loop
scas
cltd
mov
mov
mov
and
inc
mov
mov
dec
xor
mov
jne
cmp
loop
cmpsb
xor
cltd
gs
pop
pop
push
ret
xor
mov
cmp
test
xchg
aad
xor
daa
jne
pop
jg
jo
pop
xchg
dec
out
ret
popa
cmpsb
lock
nop
and
push
cmpsl
mov
jb
aaa
dec
repnz
mov
push
stos
sahf
xchg
sahf
call
pop
arpl
jb
cmpsb
jne
movsl
and
test
adc
lods
mov
xchg
scas
in
je
fnsave
enter
push
test
dec
adc
addr16
xchg
pop
inc
notb
sub
insl
rcll
test
cmp
sub
mov
xlat
sbb
sbb
cld
inc
and
mov
dec
xchg
lds
icebp
movsb
fdiv
and
inc
call
push
clc
jecxz
std
ljmp
adc
fs
incb
push
mov
cmpsl
hlt
sti
sbb
push
sarl
inc
clc
xchg
call
push
loopne
or
mov
sub
mov
dec
js
sbb
mov
adc
add
and
cmpsb
dec
cmp
jne
sbb
pop
sub
jne
lret
sub
and
or
sub
jecxz
inc
or
pushf
or
fmul
adc
push
inc
pop
lock
mov
sbb
push
and
dec
sub
push
xchg
ret
xlat
daa
and
adc
imul
or
lcall
xchg
ret
int
imul
or
fsts
popf
cmc
rcr
sub
lret
clc
test
xor
cld
and
pushl
lahf
xchg
movsb
cmp
or
rclb
jno
cmp
pop
insb
das
shrb
out
pop
inc
jle
jge
je
xor
mov
lret
mov
xchg
mov
hlt
cwtl
mov
fists
jle
int3
xor
in
aaa
mov
fisubl
push
push
outsb
push
adc
dec
insb
push
pop
pop
add
es
pop
iret
push
cmp
xor
movl
int
adc
jecxz
popa
fbld
js
sub
dec
xchg
mov
or
jmp
imul
out
jb
dec
stos
or
ret
inc
insl
xchg
sbb
cwtl
bound
mov
push
xor
mov
arpl
stc
xor
fldl
pusha
sarb
inc
and
xor
xchg
cli
mov
mov
adc
push
les
outsl
daa
dec
jge
xchg
pop
cs
repz
mov
mov
sub
shll
or
cwtl
cmpsb
cmpsl
adc
in
and
pop
loopne
sbb
mov
enter
fnsave
dec
sub
xor
in
stc
mov
adc
sarl
pop
loop
pop
ljmp
cld
pushf
fucomip
fidivs
push
push
stos
out
iret
rclb
adc
js
sti
stos
rolb
mov
xor
lds
fisttpll
stos
cmp
das
pop
dec
dec
jecxz
out
cwtl
xlat
jo
sub
mov
adc
ret
or
pusha
pop
inc
gs
push
enter
jp
rcrb
nop
and
push
int
adc
cwtl
mov
inc
add
test
jecxz
js
imul
sub
hlt
out
into
call
out
and
out
sbb
push
mov
cmpsb
adc
test
pop
and
pop
hlt
shlb
ds
pop
push
pop
mov
fidivs
scas
fisttpl
in
add
lds
jg
pop
xchg
add
jae
mov
stos
inc
mov
lods
not
mov
jbe
test
gs
fistps
loope
jns
cld
ret
testl
mov
inc
or
mov
add
dec
adc
movsb
xchg
pop
cmp
inc
stos
pusha
fdivrs
inc
in
xor
jbe
jb
or
addr16
pop
or
add
adc
lahf
movsb
sbb
push
cmpsb
jge
pop
mov
sub
dec
cmp
test
adc
gs
cwtl
lods
and
sbb
jno
cmpsl
or
adc
mov
pop
push
aas
and
add
add
out
sarl
add
in
adc
ja
shll
and
mov
cmpsb
dec
add
mov
push
sti
mov
dec
fucom
push
insb
jp
cmp
cmp
leave
fsts
cmp
push
pop
fnstcw
push
jns
insl
mov
cld
mov
ret
sbb
adc
and
inc
ret
pop
fnsave
jno
push
push
les
lret
nop
jnp
cmpl
fdivl
xchg
popa
xchg
xchg
ret
cmp
scas
outsl
xor
jge
and
es
int3
stc
insb
jl
inc
cld
jg
data16
ljmp
push
pop
clc
inc
scas
mov
insl
inc
push
or
pop
sbb
les
lret
mov
and
inc
sbb
cmp
mov
pop
mov
or
das
xchg
jp
imul
adc
or
test
xor
jns
cmpsb
jmp
xor
outsb
and
mov
call
pop
int3
pushf
add
sub
push
push
fistpll
pop
mov
add
mov
pop
cmpsl
adc
dec
pop
outsl
cs
imul
lds
xchg
fmuls
push
aaa
mov
dec
lahf
ds
sarb
cmp
addl
sar
stos
xchg
mov
sbb
push
pusha
inc
inc
mov
jo
das
outsb
push
pop
outsb
push
int3
sbb
jo
xchg
lahf
pusha
lods
ret
jne
insl
loop
mov
xlat
addb
pop
xlat
sub
mov
inc
sahf
xor
push
xor
test
xor
pop
jle
pop
ret
and
inc
mov
adc
inc
rcrb
xchg
jge
sub
pushf
jnp
jbe
mov
jg
nop
inc
pop
stc
insl
sub
mov
sub
push
icebp
pop
cmp
pop
push
movsl
xlat
jbe
jo
jo
xchg
pop
enter
and
sub
mov
adc
jle
jge
sub
mov
and
push
inc
cmp
rorb
jmp
testl
xorl
test
shrb
cltd
data16
lods
or
sub
ja
in
cli
loop
stos
cmp
pop
sbb
mov
push
jecxz
movsl
sbb
mov
lret
and
loope
sti
lcall
add
xchg
xchg
aad
jecxz
icebp
cli
adc
mov
jns
loopne
rcrl
repz
and
xchg
sub
outsb
mov
jbe
push
inc
sub
ja
push
std
mov
mov
cmpsb
out
cltd
shl
push
lock
pop
int
fiadds
aad
icebp
or
scas
jp
repnz
mov
lds
or
push
fmul
insl
jp
adc
or
cld
sub
in
mov
push
sbb
xchg
xchg
lds
inc
jb
lock
push
aaa
scas
in
js
repnz
in
jge
jl
mov
mov
jo
cmp
shrl
in
das
mov
lods
sub
push
or
out
sahf
inc
mov
test
aad
push
mov
pop
cmp
lret
mov
test
fimull
and
pop
sbb
sti
xchg
fcompl
add
rorb
xor
std
mov
inc
xchg
inc
sub
bound
or
sbb
mov
mov
xchg
jge
jle
jae
movsl
subb
mov
mov
xor
dec
jbe
int3
fistps
fs
jmp
pop
pop
mov
js
dec
pushf
movsb
or
int
lcall
test
nop
pop
repz
hlt
fists
pop
inc
dec
aas
push
fcmovu
xchg
add
sar
mov
out
sbb
jmp
and
pop
rorb
mov
mov
lds
and
mov
mov
arpl
js
imul
xlat
loop
test
dec
loopne
dec
mov
mov
nop
shrl
mov
xchg
inc
sahf
push
xchg
test
push
leave
out
fidivrs
push
add
in
imul
jno
sub
negb
mov
add
arpl
unpckhps
test
repnz
xor
repnz
orb
das
fwait
rorl
push
lret
jg
push
cmp
xor
out
in
xor
push
ljmp
dec
xor
dec
sub
movsl
add
inc
call
sbb
and
and
out
icebp
pop
pop
lods
push
cli
dec
xchg
xor
or
insb
jne
fbld
ja
loop
xor
popf
scas
pushf
scas
mov
lock
adc
push
js
je
mov
or
mov
cmp
jecxz
mov
and
jmp
ret
outsl
gs
mov
xchg
mov
lds
shlb
push
rcll
inc
es
cmp
jmp
fildl
jne
cs
and
in
addr16
add
adcb
data16
fiadds
insl
mov
dec
adc
mov
imul
sbb
jae
stos
adc
in
jg
mov
mov
es
mov
in
outsb
mov
bound
test
lcall
clc
int3
por
cli
mov
cwtl
push
testl
mov
jecxz
or
sahf
movsl
jl
jbe
dec
aam
sar
leave
inc
xor
addl
lret
loope
jge
test
repz
dec
or
icebp
pusha
push
out
and
xchg
ds
mov
cmpb
mov
aam
pop
call
cmpsl
pop
inc
jp
mov
adc
out
mov
or
aas
mov
sub
into
pop
sti
loopne
in
pushl
mov
pop
sbb
push
ss
mov
xchg
scas
sub
push
xchg
fbld
adc
pop
unpcklps
dec
pop
std
dec
sahf
cmp
jb
push
mov
and
daa
hlt
out
popf
clc
push
cmp
andb
movb
fcoms
popf
clc
ja
rorb
push
pushf
in
or
mov
es
ss
scas
out
xorl
add
xor
mov
enter
adc
xchg
in
testl
ds
mov
xor
pop
cs
repnz
inc
leave
mov
mov
and
mov
mov
bound
inc
jo
je
pop
into
cmp
add
push
sbb
pop
jo
sbb
sub
or
popa
adc
or
and
mov
movsb
sbb
jl
push
xor
add
or
sbbb
push
push
loopne
xchg
fucomip
in
or
call
mov
pop
pop
fs
cmc
push
test
std
lock
pop
dec
data16
dec
xor
js
xor
fs
data16
sub
outsl
aad
push
pop
fs
jle
ret
int
mov
inc
cltd
dec
inc
and
mov
xchg
clc
fwait
lock
popl
ds
bound
testl
and
dec
jmp
stos
jle
xchg
sbb
int3
xor
hlt
fisubs
adcb
sti
shl
cmpsl
in
xchg
pop
in
jb
or
out
insl
rclb
sub
ss
xor
xchg
xor
or
aad
repnz
gs
jns
cmp
shufps
pop
and
and
jo
cmp
sub
push
push
add
std
sti
push
fwait
mov
mov
push
mov
popa
mov
pop
rolb
and
mov
mov
sbb
xor
cmp
sbb
mov
push
addr16
and
not
jge
jbe
test
adc
cmp
jle
jnp
xor
mov
fldcw
lods
fildll
jecxz
cmp
notb
das
pop
ret
pop
inc
jb
clc
mov
add
xor
das
into
arpl
aas
push
rcrl
ret
insb
or
int3
add
dec
ljmp
imul
mov
adc
ljmp
fnstcw
dec
in
and
data16
mov
ljmp
outsb
dec
icebp
adc
test
adc
lret
mov
push
mov
into
outsl
jns
adc
xchg
rclb
xchg
xchg
outsb
or
xchg
pop
dec
sbb
int
jne
push
mov
push
cmp
sbb
dec
cmp
inc
bound
xchg
mov
xor
add
jo
jns
pop
sub
insb
lea
ss
outsb
and
ljmp
cmc
or
add
mov
push
dec
push
loop
lret
movsb
pop
ret
mov
or
sti
das
ret
enter
into
cmp
test
adc
mov
dec
mov
adc
inc
jmp
inc
ljmp
cwtl
rclb
jno
movsb
call
stos
fdiv
adc
cmp
or
aas
lock
push
aas
cmp
sub
mov
int
cmc
xor
test
mov
xchg
mov
cs
fxch
dec
insl
push
cmp
orb
dec
call
pop
lret
xor
sub
pop
ds
nop
bswap
cs
inc
mov
lahf
negl
pop
xor
adc
mov
aad
lock
cmpsl
shrb
mov
out
ljmp
orb
dec
jg
ror
test
movsb
jbe
push
push
rcrb
sub
sbb
loop
sbb
mov
and
dec
out
out
fsts
add
mov
lret
hlt
lock
fstp
stc
dec
dec
aaa
aas
aam
scas
bound
or
or
sahf
jb
addr16
out
lcall
lahf
movsl
pushf
aam
sub
cltd
push
test
gs
cs
ror
mov
ja
mov
flds
clc
jno
clc
mov
dec
js
mov
sub
inc
loop
pop
cmp
cmp
cmp
dec
fildll
in
ljmp
shlb
push
pop
inc
and
mov
jg
mov
xor
mov
aad
mov
repnz
mov
sahf
fisttpll
and
test
fidivrl
mov
xlat
jecxz
and
int
roll
pop
inc
fadd
clc
rcll
mov
sub
fcoml
jb
sub
inc
cmp
push
dec
es
sahf
testb
fldcw
mov
mov
ror
inc
lret
negb
pushf
push
add
out
icebp
test
imul
das
push
fistps
fwait
mov
dec
jne,pn
lods
cvttps2pi
stos
and
sahf
pop
rorb
nop
sub
mov
push
push
mov
fbstp
ret
push
or
repnz
or
push
or
lods
ljmp
and
mov
lahf
push
push
or
repz
cmp
in
sbb
sub
adc
mov
in
mov
pushl
ljmp
scas
in
xor
in
fcoms
ss
cmpsb
jae
inc
aaa
js
les
sub
xchg
or
popf
adc
mov
mov
or
outsl
cmc
mov
xchg
shrb
in
or
mov
psrad
out
inc
sbb
addr16
pop
jle
mov
sahf
jle
enter
xchg
mov
jmp
pop
hlt
rcrb
jbe
mov
enter
aaa
imul
ret
sub
push
and
push
movsb
hlt
nop
lods
test
loope
xor
cs
pop
xor
and
rorl
add
add
xchg
push
sub
loope
sub
and
clc
mov
push
popf
dec
incb
dec
mov
adc
sbb
int
movsl
pop
pop
push
add
mov
mov
xorb
in
fisubrl
sbb
add
stc
fs
xchg
cwtl
cmp
insb
outsb
jle
icebp
mov
imul
rcl
rcrb
xchg
test
xchg
sub
testb
repnz
dec
jmp
xor
loopne
push
fabs
cmpb
stos
adc
push
mov
mov
lcall
cmp
push
insb
jle
add
cmp
popa
xchg
mov
call
dec
mov
std
fsubl
pop
icebp
sub
in
push
test
cli
leave
cmp
loope
imul
mov
mov
xlat
in
mov
lods
das
or
inc
push
stc
and
fcom
and
not
divl
inc
add
push
sbb
push
shll
test
sbb
std
rorl
filds
or
xchg
aad
mov
or
ja
je
fs
mov
repz
cmpsb
insb
in
sbb
icebp
xchg
outsl
dec
sbb
decb
outsl
add
cmc
add
or
jg
add
out
scas
pusha
add
lods
shrl
mov
push
push
mov
adc
dec
push
test
xor
and
cmp
rolb
sbb
enter
inc
test
sub
sbb
inc
scas
add
shl
lods
int3
xchg
jg
into
fadds
daa
mov
add
adcb
push
push
ja
mov
imul
mov
push
jl
ss
jp
push
mov
aad
fwait
mov
shl
data16
insl
cli
or
sub
push
out
dec
scas
sti
jno
push
sti
mov
rcl
sbb
mov
ret
and
aas
jp
lds
xchg
xchg
inc
imul
xlat
xchg
add
int3
mov
or
xlat
mov
in
cli
lahf
mov
nop
insl
scas
lret
or
popf
xorb
js
stos
adc
mov
mov
lret
call
xor
into
xor
int3
test
push
dec
push
jae
pusha
add
mov
in
leave
add
or
scas
insb
or
push
mov
pusha
push
xlat
inc
cmpsb
pop
sbb
clc
add
ret
arpl
pusha
jmp
outsb
int3
cwtl
frstor
jmp
pop
xor
mov
and
lods
in
cmp
enter
nop
lret
js
test
sbb
xchg
jle
push
xchg
adcl
loope
movsl
in
mov
cwtl
ss
enter
and
cmp
cmp
adc
cli
mov
mov
mov
sbb
inc
movsb
scas
out
inc
xchg
and
push
jns
or
lret
pop
sbb
cmpsb
xor
mov
jmp
scas
test
adc
pop
loopne
cld
js
xchg
lods
fmul
mov
out
test
inc
sub
jge
daa
stos
das
xchg
add
push
and
adc
loope
shlb
test
adc
popa
lret
mov
outsl
int
jmp
sbb
cmp
sbb
push
stos
out
ja
rcrl
jnp
mov
lret
sub
out
loop
loopew
jbe
popl
cmp
call
ret
push
sahf
out
jge
xchg
mov
popa
lcall
mov
inc
popa
addr16
adc
sbb
inc
sub
xchg
push
gs
inc
add
loop
js
dec
pop
scas
pop
fbstp
outsb
xchg
mov
pop
sbb
ss
mov
pop
test
mulb
xor
popa
mov
arpl
cmp
cmp
mov
or
jne
mov
lret
dec
push
xchg
leave
add
push
dec
hlt
repnz
mov
sbb
insl
pushf
add
add
sbb
faddp
ss
xchg
adc
int3
int
inc
js
pop
xchg
xor
out
test
xchg
inc
or
dec
sub
js
mov
push
daa
jns
pop
in
pop
mov
imul
mov
push
mov
fsts
adc
adc
xlat
cmpsl
fsubrs
mov
jne
push
rcr
fbld
push
cltd
icebp
xchg
or
ret
and
int
fwait
in
mov
addr16
pop
cmp
sar
icebp
mov
leave
outsl
aaa
shll
fldenv
test
addb
fcoms
push
mov
mul
data16
jmp
clc
shlb
in
lods
push
cs
stos
cwtl
outsb
scas
rorb
outsb
mov
pop
mov
jp
jp
push
sbb
pop
push
mov
push
dec
insl
jg
loopne
xchg
xor
pop
aaa
das
aaa
int3
aas
sbb
aaa
int
jno
in
pushf
xchg
nop
subb
int
lds
lods
xchg
aam
mov
mov
sub
adc
ret
mov
dec
mov
push
mov
sbb
arpl
add
mov
xlat
in
mov
sub
outsb
mov
push
pop
xor
sub
xchg
push
lret
jg
mov
push
xchg
mov
in
arpl
sub
fmull
fildll
into
rclb
xor
inc
push
loope
popf
adc
fstpt
mov
inc
or
repz
mov
xor
test
pop
scas
mov
mov
out
add
call
loop
in
push
in
imul
loope
insb
sbb
insl
rorl
mov
jno
cmp
sbbl
mov
shr
pop
pop
xor
xor
lock
fstl
sbb
and
and
lods
dec
loope
xlat
add
jns
shrl
mov
icebp
popf
les
mov
pop
adc
adc
lods
pop
outsl
cli
stc
gs
sub
add
cltd
adc
scas
icebp
adc
les
pusha
mov
cmc
lret
out
mov
jns
dec
ja
enter
push
cmpsl
and
jnp
lcall
mov
std
xchg
cmc
stos
add
mov
mov
push
add
pop
cmpsb
mov
or
inc
jno
daa
popfw
arpl
sbb
cmp
and
mov
xchg
pop
jecxz
mov
mov
jmp
and
je
scas
sub
dec
inc
inc
jns
or
lret
jo
sub
xor
cwtl
fcomps
sub
push
popf
mov
mov
pop
sahf
fdivl
ds
fists
inc
and
add
pop
lods
sarl
xchg
xchg
out
push
mov
pushf
jae
popa
xchg
popa
orl
leave
lds
inc
push
nop
xor
dec
push
addr16
sub
subb
mov
mov
add
pushf
jle
mov
in
pop
jle
cmpsb
or
out
inc
or
movsl
testl
popa
fdivr
and
add
jg
xchg
test
cmp
cmp
lods
push
lds
jae
pop
push
js
movsb
mov
mov
call
mov
aaa
push
or
iret
cmp
mov
jmp
pusha
jmp
sbb
in
mov
push
push
das
das
adc
xlat
repnz
push
xchg
push
call
aas
xor
leave
xorps
insl
sub
jbe
dec
adc
xchg
movsl
fisttpll
jle,pt
push
std
cmp
dec
in
daa
out
fmuls
jge
jnp
and
and
shrb
mov
lea
out
mov
pushf
out
xor
inc
mov
jbe
out
sbb
jg
loop
mov
xchg
xchg
push
ds
pusha
shl
mov
pop
pop
sarl
lds
sbb
inc
outsl
gs
out
cwtl
inc
sub
xchg
sub
xor
rorl
mov
pop
out
jne
push
mov
mov
inc
frstor
add
cvtps2pd
push
lret
mov
fadds
nop
in
and
mov
and
cmpsb
push
mov
cmpsb
fwait
xor
and
push
pop
push
xchg
pop
ds
xchg
lock
mov
out
xor
cli
mov
loope
dec
ret
orl
adc
pop
xchg
jne
mov
dec
jnp
adc
dec
sbb
mov
cltd
outsl
and
xchg
fstpt
lods
mov
cli
dec
pop
dec
sbb
mov
jmp
lret
lcall
sub
xlat
xchg
adcb
lods
jl
mov
xor
and
xchg
lahf
pop
xchg
dec
pop
jl
jle
shrb
lret
jne
ljmp
mov
pop
aam
xchg
jle
inc
dec
daa
sti
repnz
and
test
out
adc
lea
cmc
and
push
je
sub
mov
push
jmp
popf
pop
mov
xor
rorb
pop
or
iret
jbe
and
adc
push
xchg
ds
sarb
or
mov
dec
icebp
sub
adc
into
sti
jne
outsl
jl
stc
xchg
into
insb
int
scas
jmp
jp
xorb
inc
in
lods
stos
sub
cmp
inc
inc
pop
ljmp
dec
dec
mov
or
scas
or
loope
movsl
pop
loope
push
jg
or
inc
push
cmp
and
insb
pop
push
add
out
lods
xchg
lock
dec
divl
addr16
popa
decl
mov
fs
mov
jecxz
cs
dec
rclb
xchg
dec
inc
add
push
pop
in
jecxz
xchg
lahf
hlt
push
daa
int3
fldz
xchg
insb
adc
pop
add
movsb
mov
mov
mov
jmp
xor
insl
inc
sahf
ja
and
cmpsb
test
ror
inc
pop
and
sub
cli
xlat
pop
push
test
push
popa
scas
and
push
in
in
mov
out
push
push
sbb
push
push
loop
sbb
repnz
ret
xchg
or
loopne
inc
mov
pop
sub
stos
pop
push
outsb
iret
aaa
repnz
adc
lret
ja
js
xor
bnd
pop
test
mov
loope
pushl
mov
lahf
sub
in
sub
out
gs
and
cmc
rcr
lret
test
lret
sbb
lcall
dec
test
sbb
lret
cmp
test
mov
and
rcl
jne
push
cmp
les
xor
adc
rorl
add
shl
sbb
pusha
test
mov
mov
push
push
adc
test
sub
jmp
mov
sbb
or
xchg
add
xor
daa
addb
addb
jnp
mov
add
cmp
and
adc
inc
ffree
mov
mull
jne
pop
sub
jg
dec
mov
xlat
jae
add
rol
jnp
cmp
movsb
or
lock
lods
pop
xchg
pusha
adc
jmp
les
xchg
out
jecxz
push
stc
sbb
xchg
jno
scas
movzbl
push
cltd
cs
push
or
mov
jo
jae
divb
adc
push
xchg
stc
sub
add
adc
test
add
push
int3
xor
xchg
or
inc
inc
popa
popf
jle
xor
incl
inc
xchg
cmpsb
ljmp
push
jecxz
dec
lahf
in
jg
push
and
cs
inc
stos
out
sub
mov
outsl
jne
gs
push
fwait
mov
icebp
sbb
insb
in
jns
xchg
push
sbb
mov
outsb
sub
aad
push
or
adcb
aam
in
inc
lcall
and
ja
in
fnsave
adc
mov
dec
adc
mov
and
aad
cltd
fstps
orb
inc
sbb
ficomps
cmp
movl
sub
cmp
dec
pushf
jl
insl
pop
mov
fidivrl
daa
mov
jp
lahf
push
mov
ret
mov
fstps
mov
lahf
aas
sub
outsb
shrb
int3
pop
cmpsb
and
push
into
lret
adc
sarb
mov
or
pop
xchg
inc
or
jle
int3
js
shr
out
adc
sbb
mov
dec
bound
movsb
testl
fstl
fiadds
sub
and
lahf
mov
mov
stc
jmp
movsb
pushl
cs
shrl
push
add
fwait
add
mov
rcr
cmp
icebp
int3
adc
jno
in
pop
movsl
fdivrl
push
shll
push
jmp
outsb
inc
out
pop
lock
scas
flds
sbb
repz
jo
add
jecxz
fisubrl
aas
js
pop
mov
push
and
in
inc
inc
in
sub
iret
sahf
cli
lahf
addl
popa
push
mov
iret
cmpsl
cmpsl
pusha
enter
sbb
mov
push
inc
cmp
sbb
cmp
mov
int3
dec
inc
pop
test
or
mov
xor
out
es
sbb
filds
dec
sub
and
mov
dec
call
pushf
dec
jo
in
testl
stc
push
pop
cwtl
push
in
imul
pushf
sbb
pusha
in
xchg
pop
shl
pop
aad
mov
mov
or
jbe
add
scas
inc
cmp
jb
data16
jnp
inc
dec
outsb
mov
and
xchg
nop
in
cli
push
das
gs
aad
call
cmp
sar
xor
cwtl
pop
call
mov
lret
cld
jecxz
mov
jge
das
xorl
jns
inc
sti
push
inc
pop
sub
dec
pop
lock
lds
push
pushf
int3
inc
addl
push
ret
ljmp
mov
scas
cs
movsl
xlat
xor
mov
popa
xorb
inc
dec
aaa
mov
mov
mov
jge
dec
stc
movsb
mov
adc
enter
add
adc
add
sub
rcl
aam
xor
jmp
jae
mov
jns
push
sub
jns
mov
pushf
mov
jno
pop
rcr
push
xchg
les
xor
aad
ljmp
lds
inc
fwait
mov
lds
cmp
sub
ret
xchg
pop
cld
test
push
push
xchg
movsb
jno
sbb
pop
stc
in
dec
cmpsb
pop
fcmovnu
xor
aam
out
loope
sub
adc
push
lods
rolb
lods
dec
sub
xchg
xor
fs
mov
aad
jg
mov
arpl
jle
lret
cmc
subl
andb
das
into
lret
inc
xor
push
pop
shrb
dec
jmp
jb
dec
jo
repnz
into
pop
repnz
push
stos
dec
lods
cmp
sbb
jmp
addr16
pop
or
mov
and
add
in
sbb
inc
pop
inc
aas
lcall
cld
xchg
test
sub
stos
cmc
xor
sub
lret
pop
xor
mov
mov
dec
scas
sub
cmp
pushf
shrl
fst
jg
xor
outsl
insl
mov
std
cmp
push
out
cmp
inc
das
dec
mov
test
bound
xchg
cmp
fwait
sbb
mov
adc
fidivs
sahf
mov
and
jge
pop
cli
in
adc
dec
and
jecxz
adc
out
sub
mov
cmp
fs
test
mov
mov
mov
xlat
mov
lret
outsl
adc
xchg
inc
add
push
cmp
push
lods
into
inc
push
and
in
mov
clc
in
pop
xor
out
lcall
je
sahf
iret
add
inc
stos
jmp
mov
xchg
sar
jae
sbb
add
ret
mov
dec
es
sub
out
daa
aas
cltd
insl
cmp
inc
or
popa
sbb
add
pop
jl
adc
or
rcrl
sbbb
test
loope
test
or
insb
cli
scas
xchg
dec
jp
add
add
enter
adc
dec
pop
mov
ret
lahf
nop
mov
jmp
into
push
gs
xor
add
and
sti
loopne
mov
rep
lcall
rolb
out
cmc
jecxz
and
push
mov
push
sbb
mov
xor
in
pusha
lods
iret
ss
and
cmpb
and
add
stc
push
push
ja
adc
test
xchg
xchg
ja
adc
stos
std
cmp
in
imul
mov
and
ret
xor
and
lahf
loope
gs
mov
clc
and
fcmovne
inc
out
add
jmp
loop
fstl
push
rcrb
add
in
mov
out
hlt
adc
mov
push
ret
fwait
or
mov
ret
lods
jns
outsl
shll
aas
adc
rorb
adc
cltd
imul
outsl
jmp
or
std
popf
and
inc
popa
sub
sbb
add
inc
push
xchg
std
mov
insl
mov
shlb
outsl
mov
xchg
lret
add
sbb
movsb
decl
insl
fdivl
mov
push
lds
mov
repnz
mov
pop
jbe
xor
lcall
loopne
ss
inc
into
enter
enter
int
test
push
pop
sub
je,pt
out
sbb
loopne
or
mov
dec
subb
and
mov
cmpsl
scas
lret
mov
mov
jmp
xorb
jmp
xchg
mov
mov
fwait
and
pop
js
int
sub
addl
mov
pop
mov
je
mov
lods
cmp
push
rcr
lea
pop
push
jmp
xchg
aam
xor
bound
mov
daa
movsl
jnp
outsl
or
in
ja
jb
xchg
or
pop
adc
aas
and
aas
and
inc
loope
test
popf
cmp
roll
mov
dec
adc
push
jmp
imul
fisubl
jmp
pop
jbe
es
es
enter
add
clc
xchg
lahf
dec
mov
push
int3
add
pusha
aas
lret
fistl
repz
sub
gs
shlb
sarl
outsl
xchg
cltd
mov
ljmp
lds
lds
and
jnp
sub
divb
aam
mov
push
sbb
mov
inc
and
ret
sbb
add
add
sub
xor
push
pop
in
push
mov
mov
jae
push
sbb
and
adc
inc
sub
imulb
mov
shr
cs
push
mov
inc
cli
cmp
scas
iret
iret
or
dec
cltd
mov
sub
dec
xchg
xor
roll
cmc
test
cmpsl
xor
xlat
sarl
shlb
jne
dec
stos
and
dec
push
mov
icebp
mov
ret
and
cltd
mull
jns
in
pushf
xor
mov
push
ret
xor
add
loope
xchg
mov
xchg
xchg
push
push
in
mov
sub
mov
mov
jecxz
mov
mov
xor
and
mov
sub
inc
fiadds
sub
ja
xchg
mov
cmp
lahf
cmc
push
js
sub
paddb
and
aas
xchg
cmpsl
xor
add
insb
xchg
jno
cltd
jnp
rolb
add
cmpsb
leave
shrl
push
test
dec
pop
loope
push
mov
sub
mov
jnp
mov
push
xchg
push
pop
dec
lret
lds
mov
pop
in
cli
xor
jecxz
ret
push
jle
lahf
dec
aaa
call
or
js
push
sub
cmp
xlat
adc
jle
int3
es
dec
scas
or
loop
out
and
inc
imul
test
push
in
push
mulb
jmp
or
mov
idiv
scas
mov
xchg
adcl
stc
hlt
xchg
inc
jnp
dec
dec
sbb
stos
inc
arpl
xor
insb
loope
lcall
mov
xchg
scas
cmp
mov
push
cmp
pop
je
andl
and
jbe
pavgw
mov
cmp
jo
int
cld
in
cmp
push
add
sub
ret
and
out
mov
out
pop
fmuls
sub
mov
cmp
testl
push
pop
idivb
mov
imulb
inc
fsubrl
mov
int
es
and
insl
ja
xor
imull
xchg
or
mov
sbb
sbb
xchg
jp
mulb
or
int
loope
jbe
xorb
dec
pop
or
xchg
pusha
dec
imul
mov
xchg
pop
lret
or
inc
add
repz
mov
or
mov
inc
mov
ja
pop
add
cmp
das
pop
sub
rolb
ja
sbb
mov
jp
adc
add
jbe
push
test
nop
arpl
jno
sub
lds
or
inc
xchg
lahf
adcb
out
stos
adc
fwait
pop
mov
inc
add
jmp
mov
dec
out
dec
adc
test
inc
xor
cli
in
dec
lods
push
pop
xchg
int
in
inc
and
jbe
fcomps
push
inc
inc
sarl
idivb
push
mov
sti
movntq
out
jae
out
inc
imulb
mov
test
shl
adc
test
insb
testb
test
and
mov
sbb
adc
pusha
xchg
leave
push
pop
sub
lret
or
mov
cli
cmc
pushf
jmp
and
fsts
push
jae
out
dec
cmp
bound
mov
jp
mov
xlat
pusha
cmp
popa
add
and
mov
nop
pop
es
ja
movsb
pushf
xlat
lods
jb
negb
mov
add
popf
xchg
fs
or
adc
adc
mov
dec
jmp
mov
data16
aaa
lds
adcl
lock
ror
pushf
xcrypt-ctr
cmpsl
lcall
xchg
xor
testb
outsb
jge
adc
xchg
mov
or
sub
js
push
jl
insl
pop
fisttpll
imul
xor
and
xchg
mov
sub
jg
sub
jmp
pop
sub
imul
idivb
xchg
sub
shl
push
out
inc
pop
push
add
movsl
xchg
sbb
cmpl
push
mov
ss
pop
sub
pop
mulb
ljmp
les
fs
mov
int3
add
in
xchg
push
sub
cwtl
movsl
ljmp
iret
movlps
mov
mov
sbb
inc
test
aaa
jae
ror
ds
in
push
dec
int
jge
dec
sub
sub
push
jp
mov
lds
pop
or
inc
xlat
imul
sarl
sbb
test
ss
xor
inc
in
jno
xchg
pop
sub
push
jmp
mov
lahf
and
inc
addl
cwtl
jp
or
insl
ss
imul
out
mov
shlb
lret
fcmovb
sbb
aas
sub
xor
loop
icebp
push
xor
add
sbb
nop
stos
mov
imul
inc
test
mov
sbb
mov
aad
mov
cwtl
cmp
and
xor
out
xchg
xor
aaa
aam
repnz
aam
mov
out
cli
or
cmp
mov
push
mov
mov
pop
ficompl
push
ret
scas
xor
jns
or
imul
jno
pop
fistl
dec
xchg
inc
mov
xchg
outsl
jmp
mov
dec
int3
jae
jae
lahf
jmp
insb
ljmp
add
push
push
xchg
mov
cmp
sub
pushf
mov
adc
mov
inc
xchg
mov
sub
or
inc
rclb
test
roll
loop
sbbb
cltd
push
or
jbe
push
cmp
shrl
cmp
inc
emms
lods
popl
dec
push
and
jmp
push
testb
test
je
aad
xor
mov
xor
mov
mov
mov
aaa
or
clc
xor
ss
in
call
cwtl
insb
je
adc
inc
adc
jno
or
icebp
push
out
das
fadds
jo
stc
jecxz
sbb
xchg
lcall
inc
outsb
mov
lcall
pop
in
scas
es
push
inc
adc
addr16
mov
lods
or
clc
mov
xchg
mov
dec
push
sbb
inc
stc
nop
flds
jl
stos
jge
mov
adc
sbb
cltd
push
lds
and
jae
jl
sbbl
mov
or
mov
popa
cli
je
push
icebp
subb
push
sub
leave
sbb
adcl
ds
and
ficoml
lods
cmc
or
iret
sub
imul
lods
into
lds
dec
mov
fists
fistps
sbb
sbb
das
out
shll
xchg
push
loope
stos
and
hlt
jmp
inc
dec
push
out
std
clc
or
pop
shl
sbb
jns
mov
pop
add
pop
push
ja
xchg
dec
xchg
xor
sarl
in
push
mov
dec
imul
cmp
ss
outsl
mov
rolb
ret
and
mov
in
jg
or
outsb
xor
sbb
or
push
lock
loopne
jo
or
pop
inc
fidivl
xor
inc
dec
jno
sti
xchg
ret
loop
mov
aad
mov
mov
jnp
xchg
ds
icebp
movsb
cmp
adc
jle
in
inc
adc
or
cs
outsl
rolb
leave
jecxz
sub
test
ljmp
push
mov
scas
sbb
xchg
outsb
jns
jns
movsb
shr
out
jl
test
sahf
test
rclb
jp
pop
cltd
inc
pop
pop
push
int
jg
cmpsl
xchg
mov
dec
or
xlat
cmpsl
loope
inc
dec
fsubl
cmp
adc
or
and
and
lods
in
mull
jno
pop
push
mov
adc
or
loope
cs
xor
sar
push
shrl
mov
adc
jo
pop
lret
adc
xchg
and
cltd
std
fst
fcomps
xchg
cmp
push
ret
add
aas
or
pop
sbb
jle
lods
add
sbb
into
rsqrtps
push
mov
xchg
jl
cs
shlb
data16
dec
jmp
push
imulb
cmp
push
mov
cmp
in
inc
in
inc
fldt
rcl
scas
imul
test
or
mov
cmp
jmp
call
mov
pop
mov
jecxz
insl
sbb
test
dec
daa
dec
cmc
pop
xchg
ror
f2xm1
scas
xchg
ret
inc
movsl
xchg
fcmovnb
adc
jp
das
xchg
jl
push
xchg
and
in
adc
or
mov
xchg
scas
or
fadd
inc
push
fsubs
das
loop
int3
cmc
xchg
jne
add
mov
sub
test
mov
inc
inc
mov
aaa
sbb
mov
dec
negl
in
out
in
leave
xchg
movsl
pop
and
sub
ficoms
out
je
cmpsl
cmpsl
xchg
cmp
pop
rcll
xchg
dec
jp
inc
push
or
test
bound
std
pop
outsb
in
pushl
shlb
jbe
or
pushf
jne
dec
inc
jg
in
addr16
push
mov
cld
aad
pushf
xor
mov
jmp
lods
push
xchg
inc
sbb
cli
jg
fndisi(8087
cwtl
dec
or
movsb
fs
add
mov
and
pushf
punpckldq
dec
popf
mov
aam
adc
stos
adc
mov
enter
mov
pop
and
addr16
in
icebp
lock
insb
std
mov
mov
aas
pushf
roll
adc
shrl
push
std
jge
adc
cmp
pop
pop
add
jecxz
pop
jb
push
jp
aad
dec
sub
xchg
dec
cmc
sarl
bound
inc
pop
inc
inc
jb
pop
xchg
fisubrs
lcall
test
mov
imul
add
lds
lret
bound
cltd
ret
sbb
lret
test
xor
mov
ja
imul
pop
mov
xlat
push
xor
pop
hlt
test
push
cwtl
bound
mov
xor
dec
ds
loop
push
test
out
xchg
mov
in
out
popa
or
push
sbb
pushf
arpl
ljmp
sbb
rcr
and
lahf
xchg
icebp
push
jg
push
imul
pop
outsl
js
dec
or
sub
push
push
xchg
dec
mov
cmp
fadd
inc
jae
lea
adc
add
enter
movsl
and
push
xchg
xor
cmpsl
xor
jp
push
jmp
lahf
inc
movsl
or
roll
int3
mov
add
inc
pop
sti
in
push
push
mov
jg
xchg
je
mov
inc
cmp
out
movsl
pop
and
outsl
mov
cmp
dec
imul
stos
push
fwait
jecxz
mov
sbb
ret
dec
push
or
mov
scas
inc
ret
icebp
in
mov
sub
idivb
add
jae
cmp
fstp
repz
add
popf
mov
in
repnz
shlb
lret
dec
xchg
jae
pop
or
add
jge
xorb
shll
into
adc
imul
jbe
cli
cmc
sbb
sbb
pushf
aaa
hlt
add
add
imul
pop
rcr
pop
movsl
inc
insb
je
stos
push
ja
int3
icebp
xchg
sub
in
inc
xor
push
jg
pusha
sti
jmp
or
push
xlat
leave
push
push
xor
aas
or
mov
adc
push
sub
add
das
xchg
xchg
addb
jl
rorl
in
data16
cltd
clc
orb
xchg
hlt
push
cmp
mov
xchg
ret
into
cmpl
jne
fstpt
mov
xchg
jb
rclb
xor
mov
enter
and
and
sub
jb
hlt
lock
add
loope
mov
pop
sbb
roll
shlb
sbb
lahf
les
and
or
loope
xchg
cmp
push
push
lods
push
pop
mov
sbb
out
pusha
dec
or
mov
sub
hlt
repnz
cmpsb
imul
cwtl
and
mov
adc
mov
sahf
out
cwtl
in
cld
and
scas
movsb
inc
test
scas
adc
nop
mov
mov
out
hlt
adc
cmpsb
and
mov
in
push
cmpl
popa
adc
jecxz
aam
in
out
mov
movsb
icebp
fdiv
jg
imul
dec
in
xor
loopne
xchg
sbb
repz
xor
loop
cli
add
fwait
push
sub
push
popa
out
adc
pop
mov
push
inc
adc
dec
dec
mov
sbb
iret
push
adc
mov
push
and
aas
scas
xor
jns
xor
fcomps
shl
or
pushf
and
inc
in
stos
mov
insb
movsb
sub
xor
xchg
push
loopne
push
xor
mov
fdivr
mov
repz
fcomip
std
sahf
movsl
test
in
jg
xor
cmp
mov
add
nop
push
ss
mov
fyl2xp1
push
iret
popf
xor
fwait
out
xchg
pop
jl
mov
test
adc
inc
or
xchg
stos
dec
repz
rcrl
repz
out
loop
mov
ljmp
aad
mov
pop
xor
cs
add
lea
jne
dec
jne
popa
pop
dec
cs
stos
mov
jnp
in
sahf
add
ror
xor
adc
adc
fcompl
dec
xor
fldt
sbb
rolb
ret
inc
pop
adc
add
scas
rdmsr
add
push
sub
xchg
lcall
andl
xor
mov
sub
mov
mov
xchg
lcall
push
add
mov
mov
sbb
outsl
movsl
sarl
out
cmp
xor
adc
fadds
pop
cmp
arpl
in
jg
add
xlat
add
xor
insl
xor
aaa
fwait
or
divb
pop
push
fld1
fsqrt
repnz
test
xchg
pop
mov
daa
daa
imul
int3
or
mov
leave
mov
lahf
jne
adc
or
cmpsb
xor
mov
fbld
mov
xchg
xor
daa
shll
xor
jb
sti
xchg
fs
cwtl
shl
and
int
pop
add
or
popa
pop
push
repnz
add
adc
xor
das
in
add
ror
ret
ds
xor
lahf
imul
adc
jns
sbbb
fisttpll
mov
xchg
or
insl
jp
jb
rorl
movsb
adc
ljmp
hlt
js
lea
and
lock
movsb
js
push
out
sub
outsl
mov
or
push
mov
mov
sbb
sti
cmp
clc
cltd
mov
jle
jno
add
push
push
mov
push
jmp
cmp
les
push
pop
js
andl
mov
out
push
dec
dec
or
mov
mov
cmp
bound
popf
sarl
inc
int3
out
test
test
add
xchg
mov
andb
mov
jmp
fldcw
jbe
fs
shlb
push
fidivl
aas
test
out
adc
insl
pop
xchg
adc
nop
mov
js
push
mov
xchg
cwtl
movsl
fadds
mov
nop
xor
shl
add
pop
data16
repz
push
hlt
ja
popf
or
inc
dec
loopne
rol
ret
pop
push
sbb
cld
inc
imul
movsb
pop
test
add
inc
popf
inc
mov
insb
cmp
add
push
lds
loop
and
jg
xchg
popf
int3
mov
mov
inc
repz
pop
test
js
lea
jmp
enter
pusha
push
js
dec
movsl
ja
ja
adc
rcll
lahf
add
jmp
push
insb
jbe
scas
leave
data16
mov
mov
int3
mov
jnp
sahf
sahf
shlb
mov
inc
subb
popf
jno
or
cltd
inc
ret
js
mov
jmp
imul
rorl
adc
lods
mov
sahf
in
aad
dec
pusha
sub
pop
in
sub
push
dec
js
enter
fcmovnb
arpl
add
xor
xchg
das
dec
adc
xchg
testl
dec
ret
mov
cmc
sbb
test
aad
add
adc
pusha
repnz
or
push
adc
sbb
add
loop
xor
outsl
es
or
xor
leave
fbstp
sarb
sbb
push
movsl
sbb
pop
xchg
test
or
pop
adc
into
addb
fisttpl
jno
mov
jmpw
pop
cs
dec
add
mov
pop
gs
pushf
xorl
scas
sbb
mov
jge
loope
je
pop
loopne
lods
jp
lahf
leave
lret
int
jle
shlb
dec
push
jnp
inc
cltd
dec
mov
lret
jns
xor
movl
mov
pop
cmpsb
sbb
mov
ss
dec
and
stc
mov
xchg
sti
imulb
scas
fsubrl
xchg
mov
lcall
sbb
push
dec
jmp
pop
jae
cmp
inc
add
jl
inc
sahf
jp
sti
movsb
mov
jae
out
std
fcmovnu
cmp
movsb
loopne
hlt
orl
lret
mov
pop
test
leave
mov
aad
and
mov
in
insb
testb
cld
mov
daa
push
or
push
arpl
sahf
imul
mov
ljmp
or
outsb
mov
mov
int
clc
and
and
and
fldl
xor
rcrl
iret
out
js
fwait
hlt
ret
ja
jnp
adc
dec
out
or
hlt
push
inc
cmp
out
in
cwtl
jno
mov
push
jle
sbb
outsb
fwait
mov
pop
cli
idivb
dec
in
mov
out
out
sub
movsb
jecxz
shrb
test
and
mov
xchg
add
push
imul
mov
repnz
mov
aam
xor
enter
outsb
iret
xlat
mov
mov
int
stos
addb
lret
inc
or
push
aaa
push
cmpsb
ret
jae
xor
fdivl
and
fldcw
or
pop
cwtl
daa
push
addr16
jae
adc
jb
add
sbb
sbb
test
mov
int3
imul
and
xchg
cld
fstp
dec
cmp
repz
pop
aam
leave
mov
clc
push
push
mov
or
adc
dec
or
mov
into
sub
faddl
lret
inc
ss
movsl
movsl
add
sahf
sub
adc
mov
dec
inc
jns
sbb
or
add
cmc
es
cltd
cli
pop
ja
cmpb
sub
test
dec
loopne
sub
mov
mov
fcomp
cmp
push
dec
shlb
adc
lds
test
out
pop
aaa
ss
fwait
dec
stos
test
push
mov
les
ror
push
dec
das
pop
sbb
loopne
and
pusha
movsl
jmp
fwait
orb
xor
in
lods
pushf
mov
mov
dec
fisubs
dec
pop
push
mov
xchg
mov
and
pop
mov
lahf
cmp
sub
aad
jnp
add
std
jno
into
push
cmc
push
outsl
in
cmp
pushw
ja
lret
or
lcall
or
xlat
mov
dec
push
or
les
testb
dec
xlat
pop
jb
mov
aam
bound
out
add
jno
fmuls
mov
sub
sub
mov
sbb
adc
ss
cwtl
mov
cmpsb
add
or
adc
cmp
adc
dec
inc
sub
xor
add
or
add
xor
imull
adc
inc
lock
jle
in
sbb
ficompl
aam
mov
dec
aas
imul
das
cld
subl
cs
cmp
xchg
xor
enter
add
add
popl
jp
xchg
fwait
aas
push
dec
push
js
and
mov
test
data16
push
or
mov
test
add
aaa
js
fistpl
mov
popf
in
cld
mov
icebp
imul
inc
and
or
mov
inc
dec
xor
nop
sbb
xchg
mov
sbb
or
ret
xorl
pop
push
sti
sbb
inc
outsb
data16
test
adc
jae
fwait
mov
aam
push
shll
inc
ss
jle
fcmovne
lock
sub
mov
jbe
fscale
inc
shrb
jbe
aad
mov
pop
mov
push
fdivs
inc
or
dec
inc
mov
in
adc
mov
mov
arpl
pop
pop
jg
pop
rcll
shrl
push
jg
pushf
icebp
pusha
sbb
mov
leave
xchg
daa
mov
mov
in
imul
cwtl
sbb
push
imul
fwait
sbb
xor
into
push
and
and
or
jle
in
loop
adc
std
mov
leave
xorb
call
sar
in
fcoms
jecxz
lds
shlb
sub
movntq
out
nop
cmpsb
popl
lea
mov
cmp
stos
and
jno
mov
sub
mov
fcomi
ds
test
xor
and
inc
lea
push
idiv
cld
dec
lret
inc
lahf
xchg
sub
fwait
inc
dec
jbe
xchg
adc
sbb
ret
rcrb
out
mov
xor
shlb
mov
arpl
mov
jns
call
sub
and
dec
pop
fwait
out
jnp
cmpsb
sub
mov
push
mov
rclb
mov
push
rorb
adc
jnp
mov
xchg
cmp
cli
sarl
into
sbb
fstpt
adc
aas
jp
mov
int3
or
test
in
popf
repz
dec
adc
outsl
add
test
lods
ss
pop
scas
testb
pop
pop
pop
jae
pop
inc
dec
out
sub
popf
and
cld
xchg
lahf
pop
pop
mov
push
mov
jo
adc
push
mov
ljmp
into
xor
scas
inc
lds
jnp
sti
xor
popa
adc
rcr
jno
cmp
aam
xor
adc
adc
jnp
lods
stos
dec
push
adc
xor
sarl
cltd
add
lret
inc
pop
xorb
or
sub
xor
test
and
hlt
call
mov
div
imul
push
adc
xor
shlb
xor
push
popf
pop
mov
rclb
fwait
leave
aas
pop
stos
movmskps
cmp
jns
inc
orl
int
ss
mov
out
mov
xchg
popf
cmp
or
push
xchg
mov
sub
cmp
xchg
mov
xchg
dec
inc
jg
test
cmp
int
inc
aas
notb
insb
sub
clc
pop
inc
fimuls
std
mov
cmpsl
cwtl
sbb
cmp
int
into
cld
mov
jns
push
or
addr16
or
jae
inc
call
fiadds
stos
shll
gs
push
out
xchg
pushf
adc
mov
inc
std
shll
insl
fs
add
xor
adc
inc
mov
and
or
lock
das
pop
mov
insl
jmp
cs
aam
pop
or
mov
into
pop
mov
mov
and
roll
cmp
fcmove
push
psllq
pushf
bound
inc
shl
mov
mov
outsl
test
inc
mov
pushw
test
js
scas
jmp
loop
movsb
xor
lahf
sbb
adc
add
sbb
lods
mov
pop
in
fcompl
pop
leave
subb
add
loop
mov
js
push
or
shll
adc
popa
jge
shrl
sti
mov
pop
adc
dec
js
mov
hlt
sub
movsb
es
loope
add
fisubrl
mov
jg
inc
pop
pushf
loop
lcall
xchg
add
stos
lcall
pop
lock
stc
mov
enter
ret
cmpb
mov
jae
pop
out
adc
aam
mov
dec
aam
stos
xchg
js
or
mov
dec
xchg
dec
xor
sub
ss
cmp
cmp
fistpll
inc
jge
shlb
std
int
pop
sbb
loopne
andb
pushf
mov
push
loopne,pn
jmp
pop
cmc
inc
adc
repnz
inc
xchg
repz
sub
lods
movq
jge
ja
icebp
scas
scas
lret
out
imul
mov
xor
pop
xchg
mul
imul
xor
jae
or
es
sbb
sarl
xchg
bts
pusha
adc
xor
push
dec
gs
sbb
sarl
mov
lcall
mov
add
pop
mov
or
icebp
pop
test
inc
mov
call
les
jge
mov
add
dec
mov
or
shll
adc
push
or
std
outsl
sub
out
cs
jl
movsb
jg
outsl
lock
fistpll
insb
in
call
mov
pop
jne
adc
mov
xchg
les
test
cltd
in
push
sbb
pop
and
jo
pop
test
xchg
testb
test
enter
xrstor
xor
rcll
adc
popf
test
or
insl
hlt
ficoms
ret
sub
in
inc
lods
mov
into
arpl
mov
out
inc
jge
sbb
jge
jg
jecxz
fcmovnbe
repz
or
insl
push
pop
ds
push
aas
cmp
pusha
mov
push
jg
fs
stos
fwait
push
cld
das
and
in
or
xor
mov
enter
adc
repnz
sbb
sbb
dec
and
in
push
in
jne
fcomi
mov
jge
inc
fs
mov
xor
cmp
rcrl
mov
shl
adc
test
xor
push
out
cmp
dec
push
repnz
fidivl
lahf
cmpsb
addb
add
push
dec
fs
stc
shlb
xor
lea
inc
add
inc
sub
pop
cltd
pop
add
movb
rcrl
xlat
add
fsub
aam
mov
adc
xchg
sti
icebp
ja
bound
ja
cmpsb
jg
mov
pop
ds
scas
or
cld
xchg
or
bound
repnz
sbb
les
in
mov
scas
jb
push
adcl
std
pop
jbe
push
sbb
icebp
mov
lock
and
sbb
xor
mov
inc
pop
jl
fistpl
sbb
adc
popf
mov
data16
mov
leave
jnp
cmp
je
add
push
jbe
xchg
outsl
xchg
xchg
fistpl
cmp
jmp
cmp
ss
loop
es
add
fdivs
lret
xor
movsb
out
jno
dec
sbb
mov
cmp
inc
je
aaa
jae
add
pop
pop
dec
inc
cmp
test
xchg
mov
jnp
jge
lret
std
add
xor
jmp
int3
inc
pop
shr
mov
or
mov
in
loopne
outsl
les
xor
imulb
outsl
adc
push
mov
imul
jle
fnclex
test
and
push
movsb
sbb
adc
jp
sbb
mov
sbbb
ret
not
sub
push
clc
mov
ss
scas
jae
scas
out
stc
mov
cmpsl
fnstenv
loopne
mov
sub
xor
lret
lds
jbe
jo
xchg
out
lods
sub
aad
jp
ja
adc
insl
bound
idiv
out
lret
sub
xor
ret
daa
nop
mov
jge
lods
xchg
push
addl
into
lods
push
fwait
dec
or
inc
or
xchg
scas
dec
cmc
mov
cmp
jnp
pop
cltd
cmpsb
push
xor
aas
in
pop
subb
pop
hlt
lahf
push
in
andl
test
repz
sub
icebp
addr16
pop
push
jb
cli
arpl
mov
jns
rcrb
jge
xor
cmp
hlt
push
in
sub
incb
push
mov
aaa
cwtl
push
mov
cmp
dec
mov
xchg
fsubrl
icebp
sarl
pop
add
fiaddl
jmp
mov
mov
inc
inc
enter
jb
icebp
sub
adc
js
cli
int3
add
dec
sti
cmc
daa
jne
ja
xchg
popf
or
dec
mov
xchg
popa
fidivrl
shr
cmp
out
xchg
lock
fistl
mov
insl
xchg
rcl
fnstsw
movlps
push
test
bound
cmpsl
sbb
jno
leave
ja
inc
and
aas
fimuls
lods
mov
in
cmp
ja
gs
test
stos
cmp
mov
imul
and
lcall
sahf
push
sbb
cmp
mov
outsb
pop
cmp
pushf
mov
inc
mov
jo
lcall
jne
pop
inc
in
rolb
push
out
lret
push
test
dec
cmp
push
mov
mov
stos
dec
sub
test
test
cmp
and
lea
push
dec
and
inc
cmc
push
xor
dec
sub
jle
icebp
imul
mov
ss
mov
mov
in
push
dec
mov
xchg
pavgb
inc
jno
dec
mov
aaa
xchg
and
push
das
cmp
fdivrl
jle
sub
fcoms
data16
cmc
sbb
xlat
jmp
pushf
les
push
mov
testl
push
test
orl
cmp
cmpxchg
and
cmpsl
cmpsl
sti
dec
cwtl
mov
jnp
jge
jge
cmp
daa
jl
sbb
or
dec
mov
sbb
cli
in
adc
test
or
push
jmp
aas
push
mov
fcomps
dec
or
pextrw
fs
aad
jmp
jmp
sub
popa
dec
sahf
test
push
test
idivl
mov
fs
mov
movsb
push
pop
pop
cmp
sbb
imul
inc
mov
stc
cmpsb
dec
fsubrs
or
xchg
hlt
bound
hlt
fcmovbe
test
icebp
loop
daa
adc
dec
test
test
arpl
add
fucomp
in
faddl
jp
mov
int
ja
mul
les
adc
in
dec
lcall
xor
add
scas
fistpl
imul
in
test
loope
roll
imul
movsb
push
std
push
push
lahf
shlb
cmp
dec
mov
les
das
pop
ljmp
mov
out
lock
sbb
cmp
xor
repnz
cmpsb
out
imul
iret
loop
sbb
push
cltd
cmp
je
aaa
fidivs
jecxz
outsb
scas
scas
inc
data16
mov
les
adc
mov
sbb
sub
and
rcl
fcompl
or
mov
fs
pop
out
dec
popf
divl
jmp
pop
xchg
xchg
iret
mov
jl
jmp
xor
push
stc
outsl
imul
push
lods
lods
fs
add
test
push
mov
pop
push
xchg
fstpl
dec
fsubrl
pop
and
rorb
fiadds
sbb
loop
cmp
cmc
jnp
pop
mov
std
sti
push
add
inc
aad
cmp
xchg
mov
repnz
rorl
push
fisttpl
sbb
les
xor
push
dec
add
in
idiv
add
iret
xor
fmull
push
push
inc
or
xor
jl
push
bound
sub
xchg
push
into
xorb
add
test
sub
push
push
inc
out
mov
ljmp
negl
xchg
dec
negl
enter
or
fsubrp
inc
scas
aad
dec
push
sub
add
ljmp
dec
pushf
cmp
loop
lods
jecxz
sub
adc
mov
sbb
je
stc
push
js
sahf
dec
or
mov
test
hlt
je
fwait
inc
gs
inc
lret
rcrb
or
in
jp
iret
shll
jbe
imul
jne
jne
push
ds
inc
fimuls
hlt
lea
lret
xor
inc
cmp
int
xor
mov
pop
and
outsb
nop
fidivrl
in
mov
push
mov
aaa
cmp
adc
shl
test
adc
pop
or
arpl
lods
add
inc
lock
inc
not
shll
dec
push
sahf
or
dec
mov
push
int3
pop
mov
or
adc
mov
adc
gs
cli
lods
aam
icebp
mov
or
cmpl
dec
sub
mov
push
cmpb
dec
sarb
aas
or
mov
in
sub
icebp
fwait
jge
jl
pop
adc
xlat
add
je
inc
addr16
add
addb
sbb
lahf
xlat
ret
fiadds
mov
sbb
sub
adc
lock
ja
jo
sahf
aaa
jp
cmp
jo
cmp
or
in
xchg
jae
fists
fs
inc
cwtl
out
push
mov
add
movsb
loope
push
jo
insb
jnp
add
in
das
sub
dec
inc
fnsave
cmp
cld
push
sub
gs
pop
xabort
sti
mov
out
push
push
pop
add
mov
push
movsl
aad
inc
aas
insb
mov
add
outsl
lods
xchg
scas
pop
xor
sub
daa
or
and
sbb
out
int3
mov
test
outsb
fstl
imul
filds
dec
mov
adc
inc
call
and
cmpsb
enter
in
adc
add
daa
cmp
push
sahf
sbb
sar
sub
xor
mov
imul
cmpxchg
hlt
in
std
cmc
call
das
jle
dec
push
push
sbb
jns
int3
movsl
xchg
pop
fs
loope
or
dec
loop
adc
dec
movsb
ret
sub
sahf
mov
popf
scas
xchg
cld
test
das
xchg
dec
push
pop
jg
les
jae
sub
stos
sub
adc
fcom
cs
rorl
dec
push
notb
mov
andl
insl
mov
mov
pusha
lret
cld
cmpsb
fimull
lret
add
icebp
jb
push
adc
cld
repnz
sbb
pop
es
test
roll
adc
scas
cmp
add
jl
mov
in
pop
icebp
sub
pop
xorb
push
pop
dec
les
push
add
push
dec
inc
mov
xchg
movsl
xor
jne
mov
jnp
push
jmp
mov
or
cmp
dec
in
fisttpl
xchg
iret
push
movsb
sub
cltd
popf
adc
incb
mov
sub
lcall
jo
lret
mov
sbb
xor
cmp
les
sbb
lods
enter
pop
pushf
push
nop
add
in
lret
push
call
popf
lahf
pop
push
push
push
mov
mov
and
inc
inc
dec
insb
fs
pusha
and
subb
loop
dec
xor
pushf
pop
xchg
cwtl
inc
pusha
sub
push
jp
pop
leave
jg
ret
test
jp
imul
push
and
and
in
pop
fidivrl
mov
mov
inc
dec
cs
loope
pop
jo
inc
rolb
inc
fisubrs
shll
cli
sti
inc
and
cmpsl
and
cmp
xlat
hlt
cmp
xchg
xchg
push
adc
mov
dec
mov
sbb
stos
out
enter
dec
mov
pop
push
pop
and
dec
inc
mov
mov
cmp
orl
add
pop
fwait
xchg
int
cmc
xor
mov
jns
lret
sti
add
lahf
and
aad
inc
jmp
rcrl
cwtl
test
adc
dec
xchg
frstor
jge
cmp
add
cmpsl
pusha
aas
cmpl
or
push
add
dec
mov
roll
sbb
dec
pop
daa
aad
mov
pop
pop
les
pop
sub
mov
xlat
adc
daa
xchg
dec
mov
jo
aas
mov
ja
fidivs
ja
xor
nop
cli
pusha
lock
ret
and
and
jnp
shlb
bound
scas
add
push
lock
mov
jmp
imul
hlt
fwait
mov
inc
std
test
dec
adc
mov
and
lahf
xchg
cs
outsl
cld
ret
faddl
test
pop
js
stos
pusha
scas
inc
fmul
add
or
loop
sbb
fcmovne
enter
xor
popfw
cmpsl
pop
mov
push
mov
std
stc
mov
mov
mov
push
jge
mov
or
jmp
mov
cltd
mov
stos
stos
adcl
ds
push
icebp
mov
insl
and
pop
dec
movsl
inc
pop
lahf
push
pop
pop
and
xchg
push
xor
sub
in
jg
jb
mov
out
push
mov
out
pop
cmp
arpl
add
pusha
out
add
mov
xchg
push
push
loopne
push
lds
ljmp
test
add
mov
adc
divl
mov
jne
outsl
rcrb
or
xchg
stc
inc
nop
mov
arpl
mov
pop
dec
in
incl
mov
pop
pop
frstor
add
sub
jns
int
and
imul
and
xchg
fidivl
fs
addr16
enter
arpl
xchg
xor
testl
outsl
scas
cmp
mov
and
insb
pop
ljmp
lahf
enter
pmulhuw
popf
loop
test
hlt
jmp
jnp
aaa
ja
cmc
and
les
adc
mov
inc
pop
movsb
aaa
xchg
pop
adc
enter
shll
aaa
jb
arpl
or
int3
pop
dec
repnz
fdivrl
jmp
jmp
mov
jno
sahf
or
imul
data16
jnp
mov
inc
adc
xchg
and
sbb
cmp
push
pop
jecxz
stos
inc
and
daa
daa
addl
incl
xor
mov
xor
cmpb
pushf
bound
lret
add
aas
push
xchg
lahf
inc
insb
sahf
scas
add
repnz
jecxz
das
call
cwtl
add
xlat
mov
int
roll
xchg
inc
movsl
dec
mov
xor
mov
mov
fidivrl
adc
das
repnz
and
repz
push
mov
push
mov
shlb
loopne
mov
sub
mov
dec
shrb
push
mov
ds
inc
jg
leave
stos
xor
push
cmc
cmpsl
pop
adc
mov
dec
push
sbb
dec
mov
ja
xor
iret
cltd
and
repnz
or
out
int3
lret
shll
out
ds
loop
jae
or
mov
push
sahf
push
dec
cld
rclb
stos
inc
jl
daa
incb
push
add
or
cmp
mov
out
pop
xor
mov
xchg
xchg
adc
insb
xchg
jb
mov
insl
mov
stos
xchg
sub
outsb
dec
pop
sub
repnz
jecxz
in
push
and
push
fcomi
out
and
xchg
movsl
fdivp
js
and
pop
inc
aas
rcrl
fs
rclb
mov
mov
mull
in
pop
jne
mov
push
in
fwait
mov
mov
jo
xchg
cmp
popf
push
mov
sbb
or
xchg
push
je
imulb
stc
jae
xchg
ss
add
fdivl
arpl
ret
inc
fs
cwtl
inc
pop
cli
mull
sub
aaa
mov
jl
test
dec
mov
mov
mov
pusha
mov
es
sub
pop
xor
mov
in
cmc
repz
mov
loop
jns
inc
pop
pop
aam
push
xor
and
xor
adc
mov
lods
xor
lods
ds
addr16
into
mov
movsl
xchg
les
out
je
mov
pop
fwait
or
aaa
ret
jb
je
sbb
adc
add
ja
push
sbb
sbb
lcall
mov
jbe
adc
inc
fmul
fiadds
sbbb
dec
popa
cli
pop
fwait
adc
les
mov
cwtl
jmp
sbb
out
mov
in
xor
push
mov
push
call
scas
hlt
hlt
jl
lret
andb
xchg
lods
int3
sarb
cwtl
ss
add
lods
mov
sub
lods
popa
jnp
jns
enter
xor
daa
pop
test
jbe
addr16
pushf
pop
out
lret
dec
adc
or
lret
les
mov
xchg
dec
or
popf
shr
cmp
roll
iret
in
and
shll
insl
fidivrs
ljmp
rorb
loop
push
flds
icebp
loope
scas
dec
cmc
unpckhps
lret
pop
rcl
icebp
int
sbb
stc
incb
ficompl
sub
add
insb
std
icebp
das
stc
adc
sbbb
push
imul
aas
bsr
pop
clc
xor
sbb
fdivl
jns
lds
adcb
repnz
xchg
adc
ja
push
lea
popa
repnz
aas
hlt
stc
in
dec
imul
lcall
push
mov
jp
or
mov
xchg
sahf
std
push
and
jns
cmp
xchg
ds
stc
into
movsl
cmp
dec
adc
mov
dec
pop
add
idivb
cmp
rcll
clc
int3
popa
sbb
xchg
test
mov
fsubrs
dec
fildll
jo
fwait
dec
xlat
pop
dec
push
divb
mov
pop
xchg
xchg
mov
mov
enter
cmp
sbb
add
dec
call
adc
ret
add
int3
cmpsl
jmp
jmp
push
sbb
adc
pushf
push
pop
lret
out
fstps
and
jne
add
add
cmpsb
sbb
inc
xchg
iret
sub
adc
xor
ss
mov
rorb
push
int3
xchg
mov
jns
mov
sbb
pop
mov
lahf
test
popf
fsubl
mov
cmc
mov
mov
jg
lock
movsl
jl
loope
adc
test
mov
dec
xlat
xor
jmp
push
out
shrb
add
or
add
mov
adc
shlb
mov
in
push
cmpsl
mov
clc
cmc
jl
xchg
xor
mov
jle
out
data16
mov
jmp
mov
in
sub
cmp
jg
dec
jmp
push
push
fldt
push
lea
mov
rorl
push
jle
fisttps
adc
jns
jnp
cmp
clc
sti
popa
push
jo
insl
sub
test
div
or
sub
mov
mov
shll
push
jp
fisttpll
int3
adc
test
cs
add
sbb
call
sti
push
jmp
dec
loopne
and
sub
mov
cwtl
sarb
in
out
push
fs
mov
mov
cmp
test
ljmp
pop
xlat
mov
je
xchg
pop
dec
xchg
test
inc
adc
cli
sub
mov
into
sti
in
mov
add
pop
jnp
das
fnsave
je
push
int3
subl
mov
shl
add
jp
lahf
xchg
std
cltd
rorl
mov
call
push
stos
movsl
inc
sbb
pop
data16
inc
xchg
ds
fdivl
add
leave
pop
outsl
popa
test
mov
mov
sahf
sub
inc
jecxz
adc
addr16
clc
adc
jmp
push
ret
xchg
pop
std
push
loopne
std
in
pop
xchg
pop
fs
popa
leave
xlat
cwtl
xchg
mov
mov
and
or
jecxz
pop
mov
mov
roll
bound
sub
push
sahf
pop
fldl
mov
xor
inc
mov
xor
cmpb
mov
xchg
jecxz
lret
testb
pop
outsb
repnz
ret
cli
fwait
push
mov
sarb
inc
pop
xor
jg
cmp
fwait
fwait
jae
cmp
sbb
stos
cltd
lahf
mov
fisubrs
pop
sbbb
pushf
fadd
push
xchg
sub
pop
mov
adcl
test
sub
sti
out
jp
mov
out
shrb
or
aaa
or
or
cmp
cmp
mov
and
inc
xchg
or
xor
xchg
add
int3
and
jb
popa
jmp
out
cmp
in
repz
daa
pop
idivl
jno
or
xchg
jp
fnstenv
out
sub
testb
sbb
xchg
popf
and
loope
jp
shlb
mov
jmp
jge
pop
xor
jb
pop
ja
and
lea
xorb
and
xor
dec
fwait
fwait
or
sub
unpcklps
scas
fstpt
inc
fildl
das
cmc
cmp
and
das
xchg
adc
mov
and
ret
shlb
jl
dec
add
es
and
xor
fsubrp
loopne
test
in
ds
insl
xorl
lock
dec
stc
mov
faddp
fsts
pop
sub
enter
jns
pop
insl
push
pushf
jle
adc
pop
adc
dec
shll
dec
xchg
pop
and
mov
push
add
xor
int3
insb
inc
mov
call
push
push
xor
hlt
inc
rolb
push
enter
push
push
lahf
jp
ja
or
and
jl
data16
lret
bound
in
or
xor
icebp
imul
mov
dec
add
and
test
stos
int3
jb
pop
cltd
jno
mov
mov
insb
jg
ret
jle
daa
popf
adc
out
sar
adcb
loope
movsl
mov
pop
outsw
shl
push
les
mov
out
pop
xor
test
xlat
testl
movb
loop
pop
inc
or
leave
in
movsl
xor
je
vpmaddwd
das
mov
cwtl
int
repnz
sub
mov
cmp
test
jne
mov
cmpl
mov
inc
push
cmp
push
mov
movsl
jge
push
lcall
add
mov
xor
xor
jmp
dec
push
cmpb
fiadds
adc
loop
push
cmp
in
add
scas
cmp
sub
pop
jle
push
mov
push
mov
fiaddl
sub
out
ret
aas
pop
stc
popf
movsb
sahf
or
aas
dec
inc
xor
pop
lret
movsb
test
add
sbb
dec
mov
inc
dec
rorb
jnp
xchg
xchg
and
xor
jg
decb
test
mov
cld
push
adc
mov
jp
fcoms
adc
in
sbb
cmpsb
sti
pop
dec
cwtl
mov
cmpb
call
mov
fs
es
xor
mov
adc
jno
into
addr16
mov
in
push
fsubs
and
xor
xchg
loopne
adc
nop
in
add
xchg
dec
rcll
outsl
jne
pushf
shl
es
test
xchg
fistpll
lret
aam
xor
out
loop
sbb
daa
loopne
push
sahf
and
push
xor
pop
hlt
push
lea
pop
rorb
outsb
and
add
orl
xlat
aad
jbe
test
inc
fnsave
mov
mov
dec
and
aam
insl
adc
lods
sbb
push
push
pop
adc
mov
loope
out
icebp
aas
out
test
das
daa
lods
jl
mov
xchg
sub
ror
and
inc
cmpsl
lret
sub
sub
mov
mov
in
push
sbb
sbb
xchg
mov
xor
das
js
pop
jle
or
adc
mov
movsl
int3
jp
insb
pop
cmp
pop
add
or
lret
cmp
push
xchg
and
int
loope
ljmp
fidivs
xchg
stos
sub
mov
mov
push
push
imul
jp
gs
add
jmp
std
pop
mov
lock
addl
aaa
aas
xchg
pusha
mov
lods
std
or
pop
sub
and
lds
outsb
cmp
xchg
inc
mov
mov
lahf
mov
fidivl
fnsave
cmc
adc
sbb
shrb
test
hlt
dec
jl
add
inc
add
dec
aam
push
lods
mov
jle
mov
inc
mov
enter
and
lock
stc
insl
out
inc
scas
sahf
into
push
or
call
push
out
add
mov
fmul
jnp
xchg
in
push
mov
xor
rcll
sbbb
xor
and
repz
and
inc
pop
mov
lret
fsubp
and
scas
dec
in
cmc
ljmp
nop
lods
cmp
xlat
shrb
push
enter
enter
inc
orb
clc
xlat
out
push
xchg
cmpsl
lods
mov
mov
inc
adc
adc
or
aam
enter
lret
outsl
fs
jbe
mov
scas
add
movsl
loopne
fidivrs
lock
mov
stc
cmpsl
pop
or
mov
add
cli
fmuls
xchg
sbb
fldenv
inc
cmpsl
outsl
roll
popf
or
cmova
addr16
cli
adc
ret
sbb
inc
mov
lea
jle
vprotd
cltd
add
sub
push
es
add
pop
int3
or
jns
or
imul
stc
xor
icebp
add
push
icebp
cmc
pop
jnp
adc
std
out
inc
add
mov
xchg
cli
inc
cwtl
fistl
sub
jmp
mov
loope
out
xor
ljmp
xor
imul
aaa
addr16
imul
shl
sti
sbb
mov
fimull
stc
nop
xor
pop
popf
fcoms
push
repz
dec
inc
ds
test
inc
ss
dec
jecxz
popa
leave
sbb
iret
adc
rcl
push
test
imul
and
scas
cmp
sub
dec
sub
lret
lock
mov
jae
sub
pop
mov
mov
addr16
jne
push
inc
cmp
mov
lea
or
insl
sti
popf
stc
xor
mov
xor
dec
pop
pop
loopne
add
shrl
outsl
cs
xchg
mov
cmpsl
xchg
push
xchg
test
xchg
clc
addr16
pop
outsl
xlat
pop
in
mov
pop
fmull
iret
mov
loop
cli
xchg
adc
pop
and
sub
jnp
dec
push
or
shl
jns
int
adc
cmpsl
push
cmp
push
js
in
inc
mov
push
lods
sbb
pop
inc
mov
sub
mov
popa
insl
adc
int3
add
add
jl
outsb
or
inc
ret
roll
stos
jae
loopne
pop
add
psubw
rorb
or
or
push
xchg
lret
rcrl
pushf
cli
mov
fs
or
arpl
xchg
xchg
pop
jnp
push
enter
mov
or
mov
sub
add
sbb
or
cmp
movsb
pop
ds
iret
hlt
mov
test
popf
aas
fsubl
push
sub
add
mov
cld
jae
mov
xor
out
push
push
int
out
aad
dec
pop
loop
adc
jns
addr16
pop
mov
pop
pop
inc
je
and
stos
sub
scas
test
mov
bound
and
outsb
jne
push
xchg
jno
sbb
inc
adc
pop
jp
ss
lret
test
lahf
sub
jno
xchg
fstpt
or
adc
xchg
les
adc
aas
rclb
lds
xchg
repz
lods
pop
dec
dec
jb
test
add
dec
in
sbb
xabort
mov
xor
xor
shll
jns
mov
cs
push
in
in
add
pop
je
stos
xorb
or
push
xor
js
xor
mov
adc
cltd
popf
pop
inc
inc
xchg
add
xchg
mov
leave
fsubrs
int
jl
sahf
int
les
out
movsb
mov
xchg
mov
js
pop
lods
into
leave
loop
cwtl
mov
aas
push
aam
in
std
mov
add
lock
insl
push
push
repnz
push
cmpsl
sti
adc
jp
cwtl
dec
pop
dec
decb
pop
mov
mov
stos
mov
sbb
fsubrl
and
call
inc
subps
fdivrl
les
adc
inc
leave
loopne
sets
push
sub
imul
and
popf
cmp
popf
lret
cmpsb
add
xor
dec
hlt
sti
or
movsl
fimull
xlat
lock
adc
into
cmc
clc
cmp
aad
arpl
in
cwtl
push
cmp
pop
test
stos
xchg
jle
add
cmp
push
mov
adc
dec
inc
push
xlat
adc
mov
aam
jg
xchg
xchg
jae
mov
lahf
pop
push
shll
xchg
sub
sbb
stos
in
add
dec
xchg
xchg
movsl
inc
fucomi
push
imul
insl
aad
sbb
mov
inc
fwait
aad
lahf
lret
sub
shr
aas
movsb
xor
pop
jno
push
les
mov
andl
inc
fldt
lods
mov
outsb
xchg
icebp
imul
aad
lret
cmp
pop
insl
pop
xor
imul
in
loopne
popa
push
cld
fnsetpm(287
cltd
xchg
stc
sti
insl
pop
lea
fs
aas
add
pop
jo
shlb
mull
push
stos
adc
push
fidivl
popa
cmpsb
sub
lahf
dec
sub
cmpsb
add
imul
push
lahf
inc
push
loopne
push
cmpsb
lods
into
dec
aam
movsb
rep
ret
mov
in
aas
adc
inc
outsl
sbb
push
pop
jae
sub
mov
and
lods
ja
out
mov
shll
stos
xchg
insb
inc
ret
mov
adc
xchg
ds
pop
mov
in
fwait
jmp
and
sub
xor
int
and
clc
adc
inc
repnz
mov
adc
mov
xlat
dec
mov
out
into
xchg
out
cli
mov
jne
push
and
cmpsl
int3
pop
scas
mov
mov
mov
jmp
pop
mov
jae
mov
push
pushf
jnp
and
xchg
adc
daa
xchg
repz
and
jne
leave
add
pop
stos
add
mov
inc
push
add
fs
cmp
lea
lds
std
in
inc
lret
sarl
sbb
inc
mov
pop
jno
pusha
fnstenv
icebp
sub
xchg
dec
push
adc
mov
sbb
push
mov
movsb
cmpb
aam
loop
rcl
ds
mov
and
mov
xchg
dec
lret
cmpsl
daa
inc
arpl
scas
xor
fidivrs
xchg
loop
dec
popa
add
loopne
test
out
rorb
jle
jne
je
or
loop
or
int3
bound
sbb
cmpsl
mov
dec
xor
xlat
pop
sub
pop
fcoms
in
movsl
iret
fcomp
inc
mov
jecxz
mov
inc
mov
loope
loop
xchg
mov
je
fidivrl
outsl
lahf
out
stos
xchg
pop
gs
mov
jae
inc
out
xor
push
sbb
dec
ror
test
push
push
loopne
xchg
insb
stos
pop
in
mov
jnp
movl
push
mov
loope
rcll
les
sbb
ror
bound
mov
mov
sub
inc
sbb
cmp
mov
inc
imul
cmp
jl
push
cmp
pop
add
lret
xor
xchg
inc
scas
xchg
roll
xchg
nop
jp
hlt
sub
call
jne
notb
fisubl
push
sbb
popa
jle
stos
jae
or
jl
dec
xchg
into
cmp
repnz
pusha
mov
pop
sub
ljmp
cmc
adc
rorb
stc
movsl
ja
stos
rorl
in
rcrb
mov
js
js
mov
sub
adc
scas
sbb
jecxz
jne
cwtl
fnstsw
cs
or
ja
mov
pop
dec
stos
xor
sub
inc
mov
and
stos
fildl
call
rcr
cmpxchg
pop
imul
and
rorb
jnp
push
add
xchg
mov
jecxz
push
jle
pop
jo
nop
dec
pop
mov
push
sti
and
jp
inc
or
shrb
mov
movsb
cmp
xchg
jecxz
insb
pushf
roll
cld
dec
lahf
clc
ss
jo
mov
cmpl
leave
out
pop
fs
xor
mov
movsb
leave
cmpsl
ret
scas
gs
nop
cmp
push
push
push
ret
sub
addr16
dec
and
mov
int
jg
movsl
mov
pushf
jne
or
mov
enter
pop
ljmp
pop
jo
cmp
cs
jo
cli
jb
sub
cmp
imul
xchg
les
out
xchg
loope
ficoml
cmpb
mov
pop
or
xor
mov
mov
and
scas
xchg
mov
sahf
bound
inc
mov
orb
fsub
sbb
inc
adc
cmpl
adc
in
in
xchg
data16
mov
addl
sub
adc
dec
jg
int
xchg
mov
xor
std
or
out
sarl
xchg
jg
test
pop
mov
mov
ja
push
js
aad
sub
arpl
incl
data16
aas
scas
mov
ljmp
add
cmpsl
repz
out
mov
add
jnp
sub
in
mov
xor
std
push
in
sub
shlb
insl
insb
mov
mov
sbb
scas
iret
and
repz
das
sbb
mov
or
sbb
call
sarb
sahf
popf
incl
xchg
xchg
orl
ss
cwtl
add
test
sbb
into
adc
imul
in
imul
out
loopne
sbb
push
push
and
or
and
mov
mov
test
sub
imul
jg
rcr
sahf
js
and
fcoms
in
shlb
cmp
inc
es
and
xchg
pop
repnz
lret
sar
in
dec
mov
mov
xor
imul
pushf
or
cs
out
dec
lods
dec
fxch
rorl
jno
lods
dec
ret
cmpsl
scas
call
xor
test
jo
lret
xorb
and
or
sbb
adc
divb
mov
sub
test
jae
or
mov
mov
into
add
jle
bswap
dec
jb
jno
testl
cmp
nop
and
add
mov
into
mov
adc
fs
inc
icebp
pushf
daa
lahf
lods
movsb
loopne
push
mov
outsb
push
int3
pop
clc
clc
fcoms
ret
mov
xor
mov
mov
les
cmc
loopne
lods
sbb
mov
cltd
push
jl
lods
repz
in
xor
push
das
lods
jge
popa
rolb
insl
dec
mov
icebp
mov
push
pop
testl
loop
cmp
add
pop
add
pop
clc
dec
andl
sbb
cmp
and
cmc
out
dec
and
or
sub
jp
xor
das
out
incl
dec
fdivl
sbb
mov
aaa
or
push
cmpsb
ficomps
inc
lods
pop
fcomps
jns
mov
push
adc
out
stos
xchg
push
rorb
sarl
leave
inc
mov
addl
into
jle
add
jg
cs
insb
sarl
sbb
les
jg
fimull
imul
inc
add
hlt
cmpsl
mov
aas
outsb
lea
xchg
pop
xchg
push
aam
push
pop
lret
cwtl
fidivrl
jo
cmpsl
xchg
jne
fs
pushf
stos
xchg
ror
rolb
ja
xchg
aad
jo
jecxz
push
pshufw
jl
mov
jne
inc
mov
pop
sbb
cmpsl
or
mulb
sbb
mov
fmuls
leave
outsb
jb
mov
inc
adc
sahf
pop
stos
movsb
or
leave
cmpsl
mov
jg
inc
mov
daa
adc
sub
ljmp
je
outsl
mov
or
push
add
aam
mov
inc
pushf
ret
mov
iret
dec
arpl
or
loopne
les
movsl
mov
fmull
lret
lods
pop
aaa
dec
mov
jg
xchg
dec
mov
sub
push
mov
test
aaa
push
dec
out
mov
scas
jns
mov
inc
roll
test
loop
mov
push
and
cwtd
mov
mov
mov
out
iret
or
lock
xor
pop
pop
fisubs
dec
cmp
jae
adc
mov
imul
ret
arpl
ljmp
xorl
xor
sub
and
out
xchg
xchg
out
loopne
cltd
xor
aaa
xchg
mov
dec
out
arpl
xchg
ja
aam
mov
insl
loopne
jbe
stc
in
ret
adc
ffreep
jo
sub
push
lret
cmp
insl
movsb
lcall
imull
ljmp
scas
xchg
gs
mov
loop
inc
hlt
xchg
and
pop
fnsave
inc
mov
lahf
adc
and
ret
mov
sub
adc
dec
sbb
js
dec
xchg
add
cli
dec
neg
fs
outsl
inc
aam
mov
test
adc
inc
add
or
xchg
mov
sbb
arpl
inc
je
push
adc
xorl
out
fmulp
daa
out
ss
push
je
movsb
leave
rcll
cmc
sar
mov
test
xchg
and
jl
xchg
roll
test
imul
mov
lods
andl
movb
lods
cmp
sub
or
das
fisubrl
sub
std
or
or
mov
xchg
ljmp
jle
xor
lahf
adc
repnz
jne
shlb
add
mov
xchg
add
fdivs
mov
mov
hlt
test
add
push
pop
mov
cmp
dec
xchg
xor
jae
cmp
repz
hlt
test
mov
pop
jne
nop
and
adc
or
sub
stc
mov
mov
les
stos
es
cmp
insl
mov
mov
sub
jae
rorl
pop
xor
mov
inc
leave
dec
imulb
pop
mov
xor
mov
leave
xor
cmp
popa
cs
loop
and
aas
mov
cmpsl
aad
lahf
mov
iret
and
jecxz
cmpsl
push
sar
mov
sub
xchg
js
jmp
mov
adc
jg
dec
push
lods
test
fistl
or
arpl
xchg
enter
loopne
sub
fdivs
out
mov
mov
or
jmp
rclb
mov
into
mov
inc
jge
jo
push
loope
mov
add
loope
jns
cld
test
dec
and
adc
ja
inc
stos
jmp
repz
lret
mov
popf
out
mov
in
mov
mov
or
push
addr16
inc
jae
inc
push
aam
add
insb
addr16
mov
lods
inc
cld
and
dec
loopne
gs
add
leave
arpl
lods
out
fstps
in
jns
int
cmc
or
mov
cmp
int
xchg
les
cwtl
movb
pop
pop
ljmp
mov
cmp
cs
mov
dec
cmp
cmp
das
lods
les
xchg
dec
cmp
and
hlt
push
mov
jnp
rcl
mov
rcr
dec
repz
in
xor
scas
fucomip
xchg
andl
cmp
negl
jns
push
xchg
jbe
fidivrl
xchg
dec
fidivrl
sub
add
addr16
add
fcomi
jge
loopne
jbe
js
inc
xchg
sbb
ds
mov
lret
shll
and
gs
out
inc
dec
into
daa
inc
in
in
mov
int3
outsb
mov
mov
mov
fimuls
lock
andb
dec
sbb
inc
nop
test
pushf
xchg
lea
mov
cmp
xor
push
xor
jns
push
mov
mov
fadds
cmp
mov
xchg
fwait
repz
cld
cs
xchg
jle
insl
push
mov
dec
insb
out
stos
sbb
xorl
mov
xchg
jle,pn
push
fprem1
pushf
xor
in
and
repnz
xchg
in
enter
mov
push
adc
mov
imul
adc
pop
pop
scas
mov
imul
pop
adc
leave
aad
imul
jg
mov
jmp
dec
push
and
addl
filds
shl
stos
ret
xor
loope
pop
mov
ss
mov
adc
mov
mov
lea
mov
push
mov
shl
mov
xor
inc
or
inc
xor
mov
fsubrs
and
xor
sysret
xor
enter
vpcmpeqw
cmp
das
mov
mov
adc
add
push
sub
mov
stos
jbe
and
add
xchg
xor
pop
mov
mov
stc
add
mov
repnz
outsb
mov
push
mov
stc
xor
and
jno
sub
rorl
inc
mull
adc
in
outsb
ljmp
lods
das
loopne
lods
lods
hlt
add
adcb
mov
jge
in
ljmp
jmp
lods
inc
int
xchg
add
mov
fs
bound
lahf
js
jno
push
mov
mov
adc
inc
mov
jl
adc
jno
out
daa
sahf
xchg
popa
xor
out
aam
call
jmp
stos
jnp
adc
sbb
out
push
and
cmpsb
rcrb
fcompl
mov
scas
mov
repnz
push
sbbb
xchg
shl
sbb
in
insl
dec
cli
mov
mov
cmp
mov
jae
lcall
loop
cmpsl
jbe
pop
push
and
rorl
sub
setge
jb
iret
add
jmp
inc
pop
mov
mov
add
int
xchg
adc
cmp
negl
out
dec
mov
das
icebp
sub
jnp
out
mov
jle
sti
or
push
xchg
pop
jl
movsw
mov
inc
add
sahf
jb
out
jmp
out
and
add
dec
pushl
pop
daa
dec
fcom
lods
pop
add
cmp
cs
xchg
daa
mov
xlat
mov
add
sbbb
dec
out
arpl
sbb
popa
fbstp
mov
out
lcall
sti
mov
test
jmp
mov
out
out
repz
inc
call
subb
adc
test
inc
adc
dec
je
xchg
push
cmp
mov
xchg
mov
cmp
xchg
mov
outsb
inc
xchg
sbb
bound
mov
test
filds
cmp
fs
ficomps
aaa
inc
loop
and
xchg
xchg
jg
scas
sbb
sub
call
xor
mov
jbe
jmp
dec
mov
xor
ret
add
sarl
lahf
rcr
aad
sub
cmp
cli
push
pop
push
dec
clc
and
icebp
imul
cmp
sub
mov
jb
sub
mov
cmpsb
pusha
or
pop
push
xchg
add
and
jl
sti
lods
mov
mov
and
and
mov
cmp
ss
stos
pop
adc
jns
pop
inc
cmp
xor
pop
lock
pop
pushf
repnz
ret
jecxz
sbbb
into
mov
fs
inc
push
test
fistpll
inc
inc
xchg
push
sbb
xchg
inc
clc
testl
dec
and
sub
sub
std
inc
es
adc
push
imul
xchg
xor
gs
xchg
pop
xor
bnd
clc
sbb
push
das
int
lcall
cmp
int3
or
clc
out
mov
lret
rol
popf
sbb
push
movsb
sub
into
or
inc
out
mov
pop
pop
xorb
lods
adc
jns
and
scas
add
ss
jle
pop
adc
aad
jbe
aas
xchg
mov
fneni(8087
mov
and
cmp
mov
ucomiss
aad
cmpsb
testl
cmpl
mov
push
pop
add
int3
pop
xor
aam
push
or
das
dec
fsubrs
fisubrl
lock
xor
pushf
andb
inc
test
add
out
stc
pop
movsl
or
and
jo
or
popa
push
aam
out
push
xor
loopne
pop
xchg
stos
popf
jle
pushf
cmp
imul
fs
jl
xor
outsb
jne
das
icebp
loopne
dec
xor
xchg
sub
stos
ds
jae
pop
out
scas
sahf
xchg
lods
roll
sub
les
movsl
lcall
sub
mov
sarb
aam
stos
ret
repnz
xchg
loopne
aas
ja
jge
rclb
loope
pop
mov
cmp
cwtl
bound
test
cmp
inc
xlat
pop
rcr
jmp
ret
adc
std
lock
or
push
fiaddl
pusha
stc
ret
xchg
ss
push
incl
or
jg
daa
mov
adc
or
mov
dec
leave
sub
insb
sub
movsl
mov
hlt
cmp
xor
lcall
lods
fwait
inc
cwtl
inc
fistpl
lret
pop
ret
xchg
mov
mov
int
push
pop
mov
pop
inc
or
cltd
outsb
push
cli
mov
shlb
mov
push
dec
fsubl
xchg
add
aam
sub
dec
lock
dec
dec
aam
imul
out
test
call
jae
int
jne
dec
movsl
scas
daa
push
js
repnz
into
xor
fisubrl
and
mov
push
lock
or
movsl
in
das
insb
imul
pop
xchg
fildll
pop
cltd
sbb
mov
movsl
hlt
fistps
mov
push
popa
es
fnstenv
dec
imul
mov
fndisi(8087
call
and
adc
insl
into
pop
mov
xchg
add
pop
push
idiv
mov
mov
out
cmp
dec
mov
out
sbb
inc
and
adc
push
pop
out
push
mov
call
vhsubpd
in
cs
push
mov
testb
add
mov
enter
mov
in
je
jo
mov
icebp
jl
sbb
dec
leave
pop
stos
scas
in
mov
dec
into
aam
test
cs
cmpsb
scas
cmp
icebp
jge
pop
dec
punpcklwd
xchg
adc
andb
movsb
lcall
icebp
nop
ficoml
add
out
in
clc
mov
faddl
sar
inc
dec
dec
mov
add
les
xor
fldl
jl
sbb
stc
inc
add
rep
cli
cli
mov
les
idivl
add
and
mov
add
and
or
ret
jg
int
push
stc
pusha
pop
inc
mov
dec
sub
daa
sbb
inc
notl
mov
je
pushf
sbb
sub
mov
push
dec
out
loopne
sub
je
sahf
test
shll
mov
add
and
add
adc
inc
outsb
lock
pop
mov
loopne
or
cmp
imul
mov
xchg
mov
sub
movsb
stos
sbb
push
cmp
mov
or
cmpsb
xchg
xchg
addr16
push
xchg
jne
sub
in
int
pop
add
xchg
and
shr
adc
mov
adc
enter
pop
movsl
cmpsl
repnz
xchg
je
sbb
push
hlt
push
and
xor
sti
push
and
jnp
scas
shl
bound
jle
or
rol
xchg
push
rcll
pop
push
cld
icebp
jo
dec
insb
xor
bound
aam
mov
jno
iret
fsub
mov
fucomi
std
xor
sti
loopne
in
clc
dec
imul
cmpsb
xchg
pop
push
xlat
mov
mov
xorb
sub
cmp
nop
enter
add
add
push
inc
xor
decl
push
inc
xchg
inc
daa
cmp
push
xor
mov
cmp
iret
jo
sbb
mov
dec
jo
ret
add
aas
addb
sub
jmp
outsb
adc
es
mov
mov
inc
mov
out
dec
rclb
adc
dec
mov
push
out
insl
sti
fcompp
insl
inc
mov
pusha
lea
adc
shlb
push
sahf
cmpsb
insb
jp
xor
test
jno
adc
mov
push
jae
gs
out
xchg
xor
xchg
test
mov
xchg
cmp
jg
xchg
mov
inc
call
fwait
mov
push
movsl
or
int3
sbb
sbb
daa
mov
mov
push
xchg
mov
repz
in
pop
ds
inc
ja
or
daa
adc
sahf
push
pop
sbb
and
adc
imul
addr16
dec
push
pop
div
out
cmpsl
xchg
dec
add
dec
cld
jae
fldcw
arpl
je
push
mov
stc
lcall
mov
stos
test
lahf
xor
les
mov
mov
xorb
imul
fists
mov
jmp
cmp
dec
popf
adc
jmp
sbb
outsl
xor
dec
mov
mov
sbb
add
cmp
mov
xchg
cmp
push
test
inc
mov
lea
dec
ret
dec
pop
adc
ficomps
xlat
add
dec
ds
push
or
repnz
sub
inc
adc
loop
sbb
mov
inc
test
popf
sti
mov
mov
rorb
mov
pop
sbbb
cmp
mov
cld
leave
sti
dec
shll
ss
lods
xor
mov
xor
cmp
push
ljmp
cmp
xchg
or
in
pop
sub
sub
push
bound
push
inc
shrl
les
pop
jl
pop
imul
repz
mov
scas
arpl
in
sbb
mov
psubusb
pusha
cmp
push
test
cmc
ljmp
and
or
and
movl
lret
dec
imul
ret
stc
aaa
and
and
sti
mov
pushf
rolb
hlt
es
dec
mov
and
test
xor
xchg
stc
icebp
inc
int3
fucomi
std
loop
sbb
ss
sarb
push
nop
xor
adc
inc
sub
xchg
out
adc
adc
mov
add
iret
test
cmpl
jmp
imul
aaa
mov
lret
push
mov
pop
fldl
jo
sbb
clc
mov
or
mov
imul
lea
cmp
inc
xlat
xorl
cs
push
ljmp
fmuls
imul
jl
gs
pop
test
ljmp
jbe
in
mov
insb
cld
add
push
jecxz
movsl
cltd
push
mov
xor
mov
jmp
lret
sbb
jae,pt
iret
add
xchg
ucomiss
push
xor
jbe
pop
popf
cli
mov
jb
imul
adc
pop
jle
iret
jge
dec
jns
xchg
xor
roll
add
inc
adc
sub
popa
or
cli
mov
xor
add
mov
xchg
mov
mov
dec
sti
out
jecxz
lock
cmp
pop
lods
and
sbb
iret
setbe
jle
in
fstpt
push
daa
and
jge
fidivl
mov
dec
xchg
std
fisubs
xor
mov
xchg
mov
xor
xchg
push
int
pop
subl
adc
mov
and
insl
ret
stc
std
cwtl
insb
in
lods
fwait
in
jecxz
sbb
and
ja
push
mov
lahf
in
aad
insl
adc
xor
insl
leave
test
mov
mov
pop
push
sub
ss
dec
jmp
push
pop
jecxz
out
gs
fsubs
cmp
pushf
mov
dec
xor
lret
sar
shlb
aas
cmp
pop
mov
loop
sahf
gs
pop
ret
jecxz
jno
std
test
or
sarb
repnz
add
sti
jle
sbb
shlb
mov
addr16
aas
or
cmp
pop
icebp
add
or
mov
fstpt
nop
pop
mov
not
mov
cld
push
jne
enter
jle
pop
or
sub
popa
cmp
and
jmp
pop
dec
gs
lods
outsb
or
cmp
xchg
bound
xchg
adc
or
xchg
mov
ret
add
stos
push
sbb
xor
push
cmp
imul
into
add
xchg
mov
pop
sub
push
mov
test
ret
sub
addr16
add
rcl
lods
inc
jno
mov
outsl
sbb
pop
mov
fimull
scas
dec
dec
adc
daa
inc
shrl
daa
loope
and
std
push
ret
and
iret
inc
out
or
test
jecxz
mov
fwait
inc
aam
inc
ljmp
or
cmp
pop
jnp
cmpsl
lods
jl
mov
pop
insb
or
push
sbb
arpl
sahf
pushf
test
cld
fwait
push
bound
pop
mov
arpl
xlat
ret
adc
jbe
cs
cli
daa
jl
out
xchg
and
cwtl
loop
movsb
sub
nop
cmpsl
sub
scas
lret
cmp
fwait
sub
ja
inc
xchg
sub
and
fadds
cmpl
sub
push
fidivrs
cwtl
sbb
or
jmp
mov
popl
mov
jmp
int3
xor
andl
icebp
leave
xor
dec
and
jns
arpl
popa
mov
andl
pop
push
aaa
cmp
leave
xchg
sbbl
gs
daa
je
mov
mov
mov
loopne
and
cwtl
lret
push
jmp
scas
mov
imul
movsl
mov
bound
and
lret
and
push
dec
mov
sbb
insl
jmp
fildl
pushf
leave
jge
xchg
pop
sbb
stc
push
mov
pop
inc
inc
icebp
ret
lcall
adcl
lret
cmp
pop
rolb
mov
ret
cmp
mov
cmp
cmpsl
add
sar
inc
pop
xchg
fists
insb
and
dec
sbb
fwait
adc
sub
aam
outsb
out
jg
icebp
aas
and
mov
dec
adc
sbb
test
and
mov
test
cmp
mov
iret
fistpll
xorl
pop
pop
fs
cmp
jmp
leave
fcoml
rcrl
adcl
mov
out
mov
int
popa
js
dec
and
hlt
es
sub
mov
rcrl
xchg
inc
in
out
rcrl
jnp
inc
push
pushf
add
das
aaa
sbb
sbb
xchg
addr16
sub
lcall
push
inc
mov
ret
imul
mov
icebp
mov
push
cmp
add
sub
dec
pop
inc
or
jbe
lods
jmp
pop
mov
aas
shr
pop
push
testl
hlt
lods
sti
mov
nop
cld
test
sub
call
and
xchg
jnp
xor
in
hlt
fdivrs
mov
testb
enter
imul
jno
mov
and
jbe
repz
stos
or
adc
xchg
jb
push
pushf
push
sub
mov
js
sbb
mov
fs
outsl
and
pushf
xchg
cmp
data16
sbbb
es
add
ljmp
in
lods
xchg
xor
push
push
imul
lods
add
cmp
dec
cmp
lods
imul
in
loope
pop
or
xor
sarb
repnz
add
mov
push
push
imul
pop
cmc
or
push
repz
fnstsw
shrb
das
pop
imul
ret
xchg
test
in
outsb
clc
cwtl
jle
cmpl
xor
dec
jle
fwait
sub
test
movsl
shll
cmpsl
add
xchg
dec
jge
sbb
shl
popa
cs
das
adc
ret
jecxz
insl
cmc
flds
das
xor
pop
push
nop
jns
es
bound
stos
add
lds
js
xor
je
es
mov
add
cmpsb
and
call
dec
rcr
std
mov
or
pop
ret
sub
fwait
jns
lods
cmp
xor
mov
mov
lahf
outsl
sub
mov
fidivrs
push
pop
rcrb
aam
fwait
push
out
dec
add
sub
and
scas
push
cmp
pop
notl
pushf
jbe
xchg
faddl
jg
pop
push
nop
out
fwait
jne
fisubrs
sbb
dec
adc
pop
cmp
negb
mov
addr16
dec
insb
cmp
nop
in
mov
xchg
out
fs
push
clc
jno
dec
cltd
mov
adc
ljmp
lods
push
add
adc
or
sbb
imul
pop
and
fcoml
inc
mov
add
sub
mov
movsb
dec
rorl
mov
and
mov
int
add
ret
dec
adc
jg
in
mov
jp
jbe
sbbl
and
in
mov
dec
sahf
xchg
mov
inc
inc
xchg
aad
adc
fadds
push
hlt
mov
or
jae
mov
clc
lea
fwait
jl
jle
add
cld
jg
dec
xchg
mov
test
cmp
push
out
int
cld
sub
xchg
fwait
mov
pop
sbb
mov
insb
popa
pop
push
pop
dec
daa
mov
dec
sub
sbb
sub
in
push
and
xlat
cmc
fsubl
mov
sub
sub
sahf
push
cmp
or
aaa
addl
flds
jnp
xchg
test
sub
adcb
int3
xchg
ljmp
arpl
add
push
xchg
cmp
xor
jmp
out
mov
or
sbb
sbb
insl
enter
lcall
mov
scas
mov
dec
hlt
adc
aas
and
pop
fcoml
mov
xchg
fisttps
faddl
mov
inc
inc
movsb
push
or
push
push
jbe
adc
fwait
dec
xchg
fldenv
jge
cmp
mov
xor
mul
or
pusha
je
jae
fnstcw
jno
ficoms
sbb
jns
xor
mov
pop
aaa
andb
data16
push
push
andnps
pop
sub
jl
fcoms
scas
dec
xchg
mov
gs
cmp
cs
sub
dec
push
inc
xlat
mov
add
call
dec
xor
xor
adc
stc
inc
ja
cmc
popa
scas
das
test
or
lret
mov
jae
cmc
and
push
or
mov
mov
je
xor
mov
jmp
push
xchg
xchg
xchg
insl
sub
mov
sti
sbb
add
mov
inc
repz
sub
inc
and
iret
and
inc
dec
cmpsb
insl
jbe
mov
outsb
scas
inc
fstps
push
mov
js
adc
je
cli
mov
test
jge
jb
push
lcall
mov
xchg
cmpb
cmpsb
dec
jge
or
in
fs
push
divl
jmp
push
clc
and
adc
and
and
adc
arpl
push
icebp
pop
repz
decb
xor
pop
stos
pop
and
jmp
aas
fldt
ds
jns
loopne
xchg
pop
sahf
inc
adc
jl
stos
cmpsl
adc
or
mov
mov
rcrb
fdivl
pop
and
mov
mov
es
mov
mov
sub
mov
and
xchg
jge
inc
xchg
inc
cmpsb
call
mov
mov
sti
addr16
pop
pop
xchg
or
ret
int
les
neg
cmp
insl
mov
pop
jge
imul
test
fnstenv
mov
daa
es
add
adc
stos
push
fwait
divb
inc
pushf
cmc
add
loopne
adc
fisttpl
iret
aas
xchg
push
add
ret
out
lret
jp
lret
add
inc
cmp
xchg
bnd
loopne
push
sub
dec
shl
cmpsl
cmp
jge
dec
sbb
jae
jmp
cltd
push
mov
gs
dec
mov
and
enter
mov
mov
or
xchg
mov
inc
or
cld
lea
sub
push
lock
pop
js
and
cmp
test
bound
push
pop
arpl
loopne
scas
movsb
adc
sbb
dec
dec
call
mov
push
and
adc
shlb
aad
sbb
sbb
dec
add
mov
js
jae
outsb
and
rorb
leave
or
aaa
cli
xorb
cli
testb
jnp
cmpsb
mov
or
push
sub
scas
dec
cmp
mov
aaa
adc
mov
aad
cmp
inc
or
pusha
sub
push
dec
aas
push
push
mov
test
sbb
sub
mov
arpl
mov
in
fld
in
xor
jecxz
int3
mov
push
cmp
sar
push
sub
mov
push
outsl
sbb
out
data16
jno
mov
jne
xor
shl
data16
sub
mov
insb
fdivrl
lods
pushf
into
xorb
sub
movb
cmp
mov
adc
data16
into
sub
or
test
or
lea
rolb
outsl
arpl
jle
jbe
xor
fs
cltd
pop
mov
xchg
inc
lahf
in
divl
aad
and
fimuls
imul
or
or
movsl
in
pop
imul
mov
movsb
es
push
add
insl
mov
test
xchg
push
xchg
fsubr
fs
out
pop
cmpsl
add
jl
pop
test
add
mov
in
outsb
jmp
add
adc
mov
mov
into
jae
mov
or
ret
nop
jle
addr16
dec
pop
popf
mov
orb
scas
dec
mov
clc
lret
popf
jl
leave
add
push
xchg
hlt
out
dec
mov
xchg
cmp
inc
in
mov
mov
imul
out
sbb
hlt
fistpl
sar
inc
sbb
and
sti
dec
sub
jp
imul
outsl
mov
sub
inc
ss
sub
loop
push
push
inc
ds
jno
idivl
into
jne
pop
push
push
push
xor
loop
addl
or
into
subl
and
insb
adc
inc
dec
in
into
cmp
paddw
scas
call
stos
jno
mov
xchg
mov
enter
shrb
pop
in
addb
jp
sub
xor
sub
lods
mov
fcmovnbe
mov
and
mov
sbb
and
sti
lods
push
shrl
in
jg
jle
ss
sahf
ja
adc
dec
in
jl
xchg
pop
mov
ds
subl
sub
jbe
mov
xor
shlb
lock
mov
jb
imull
cmp
jb
ret
cmpsl
addr16
xchg
cli
fidivl
adc
and
xchg
test
cli
push
or
aad
push
mov
mov
jmp
pop
pop
out
and
dec
push
mov
lret
mov
jns
sti
and
shr
shl
lods
pushf
push
cmpxchg
push
dec
stos
sub
icebp
clc
push
fnstsw
jg
pop
adc
loope
mov
pushf
jo
inc
das
inc
stc
xchg
add
fistl
iret
inc
jle
std
sub
jne
lods
dec
imul
inc
cmpsl
jb
faddl
sbb
add
and
push
or
sar
movsl
xor
and
cmpsl
mov
loop
push
mov
cmpsl
bound
pop
nop
pop
mov
jle
call
dec
aam
pop
inc
push
pop
push
push
aad
sahf
sti
repnz
sbb
gs
inc
jl
xchg
sub
jo
popf
int
push
cltd
aaa
xor
ret
and
in
cmp
sub
js
xor
cmp
push
cmp
cmp
cmpsb
jl
sbbl
int
dec
movsl
pop
js
dec
loop
sbb
cwtl
ret
mov
fsubr
jmp
xchg
inc
fwait
dec
fstl
mov
mov
fxch
add
sbb
push
push
ss
ss
xor
mov
cmpsb
scas
test
stos
out
insl
daa
test
or
js
inc
adc
cmpsl
lcall
xlat
adc
adc
and
push
sbb
sub
mov
xor
cmp
push
subb
adc
outsl
inc
repz
test
insl
ret
mov
sbb
stos
push
jbe
pop
movsb
dec
sub
fsubr
push
imul
push
movsl
das
mov
xor
jne
jb
aad
push
in
adc
stos
jae
add
push
inc
push
iret
cmc
icebp
fstl
cmp
addb
test
dec
jg
sahf
loope
in
add
sbb
je
daa
rcll
mov
das
addr16
stos
jo
shll
jl
push
push
mov
inc
and
movq
dec
inc
mov
addr16
pop
mov
xor
sbb
test
ds
inc
xchg
int3
or
sub
sahf
pop
push
adc
push
iret
pop
mov
mov
or
mov
in
daa
pop
shl
inc
cmp
cwtl
sbb
dec
cld
sahf
mov
sbb
int
in
push
aad
mov
scas
lret
cmp
xchg
shlb
sbb
aaa
or
aad
pop
adc
fdivl
sbb
in
xor
dec
repz
mov
lret
sbbb
xor
push
dec
stos
clc
loop
mov
add
iret
sbb
les
test
pusha
sub
lods
push
mov
in
out
loopne
and
ja
lock
out
push
lahf
adc
fisttps
cld
cmpsb
add
dec
imul
mov
shll
dec
dec
cld
lret
repz
push
je
dec
cwtl
shlb
fdivrl
add
lea
and
mov
xchg
push
out
roll
pop
jmp
adc
push
dec
cmp
frstor
jae
mov
in
int3
adc
add
cwtl
pop
rolb
add
or
jg
stc
sub
or
stos
xchg
stos
lods
jle
idiv
fsubr
dec
into
mov
jo
push
repz
jl
xchg
test
movsb
mov
fcmovne
add
sbb
std
cwtl
gs
scas
daa
sub
pop
icebp
or
ss
dec
xchg
dec
iret
fbld
imul
movsl
loopne
inc
shll
add
cmp
jp
inc
icebp
pop
daa
sti
lods
mov
jne
fdivrl
lcall
out
mov
mov
xchg
push
stos
shrb
cmp
mov
lcall
or
sbb
sbbb
hlt
loope
jp
or
into
mov
dec
fisubs
mov
inc
aad
sbb
sbb
mov
out
popa
je
in
cmpl
loop
inc
shlb
pop
mov
adc
ret
mov
outsb
bound
das
add
and
stos
xor
inc
push
in
cwtl
in
cmovge
in
repnz
je
dec
sbb
in
and
je
push
movhps
cmp
pushf
push
fistpl
aam
push
cs
jnp
pushf
call
xchg
push
daa
lds
push
js
mov
adc
arpl
out
rcrl
and
and
lret
cmp
insl
xchg
bswap
or
xchg
lock
sbb
faddp
pop
fiadds
gs
mov
dec
mov
repz
test
lds
orb
stc
inc
repnz
fmuls
dec
or
sbb
mov
push
add
jg
lret
cwtl
xchg
mov
mov
cmp
fistpll
jb
cs
and
lea
outsl
jbe
sbb
mov
adcl
roll
fadds
rol
icebp
inc
sarl
push
jne
rolb
orb
aas
push
data16
sbb
xchg
iret
jb
fistps
std
addr16
ret
shl
cmp
sbbl
fidivs
aam
arpl
adc
push
in
xor
sahf
adc
fstl
sub
mov
mov
mov
std
fwait
mov
jnp
pop
push
mov
mov
mov
fwait
xor
jecxz
mov
shrb
outsb
dec
sahf
add
mov
push
push
stos
dec
insl
insb
cmp
mov
adc
in
repz
jecxz
lcall
cltd
xchg
lret
jno
sahf
cmpsb
jno
inc
adc
lea
les
push
sbb
mov
or
test
mov
mov
pop
dec
add
jg
shr
fyl2x
add
fisttps
xor
rdtsc
aaa
pushf
jmp
xlat
jns
mov
ret
lods
pop
decl
jo
adc
pushf
pop
fistpll
push
pop
xor
in
xor
xorb
stos
xchg
and
sti
push
call
lcall
lahf
cwtl
enter
daa
mov
push
test
dec
mov
and
loope
xor
in
adc
jp
addr16
ret
pop
fildll
fdivs
mov
lahf
stos
sbb
xor
mov
cmp
xchg
or
fisttpll
and
test
cltd
jg
hlt
push
movsl
mov
outsl
rorl
call
cwtl
mov
xor
sub
popf
mov
iret
sbb
cmpb
outsl
jb
push
js
shll
xchg
popf
xor
push
idivl
in
pop
mov
pop
mov
das
lret
dec
dec
pop
dec
jae
repnz
dec
dec
cmpsl
mov
xchg
call
mov
dec
jns
pop
idivl
repz
sbb
pop
in
ljmp
mov
data16
shll
cld
xchg
lods
push
jns
cmp
repnz
pop
sahf
xor
sub
sbbb
push
stos
cwtl
dec
data16
push
in
sub
lret
ljmp
js
ja
aaa
adc
aam
mov
push
in
cmpsb
enter
data16
popf
out
nop
mov
in
sbb
pop
rcrb
jmp
scas
aad
jle
orb
ror
jb
outsb
repnz
lret
sub
mov
jle
iret
cmp
jno
mov
lock
jg
lods
stc
fbstp
inc
out
js
xor
sub
mov
shll
mov
fcomip
sbb
daa
push
aas
xor
popa
mov
lock
push
xchg
jo
stos
addr16
push
std
and
xorl
arpl
scas
adc
mov
mov
sbb
je,pt
push
sbb
adc
out
inc
lods
fidivrl
in
lods
repnz
push
sub
sbb
xchg
push
mov
mov
adc
xor
pop
movsb
pop
sub
adcb
push
cmp
xorl
mov
sahf
fadds
mov
xchg
sub
popf
mov
xchg
js
cli
gs
pop
mov
incl
lahf
ret
xorb
pop
arpl
daa
in
cli
call
mov
jo
sbb
xchg
repnz
adc
fisubl
outsl
into
outsl
jp
mov
hlt
xchg
push
sub
xor
xchg
sti
adc
mov
pop
imul
decb
sub
out
lock
mov
inc
inc
out
inc
or
subl
and
aam
push
add
jle
jmp
cld
lods
mov
jne
xchg
jnp
ljmp
icebp
sub
dec
mov
mov
cmp
sub
mov
pop
push
xchg
jo
and
divb
and
dec
icebp
cmpsl
call
jo
fists
cld
mov
mov
int
leave
pop
or
cld
mov
and
lret
xchg
shll
andl
jo
mov
or
xchg
lock
jle
jno
ljmp
in
leave
push
lods
stos
ret
rcll
add
mov
int
pop
jmp
jne
ret
dec
xor
add
rcrl
shlb
and
das
loop
stos
hlt
mov
subl
jge
outsl
fsubrs
call
mov
pop
xor
pop
mov
leave
test
dec
jbe
aam
dec
sub
add
and
push
shrb
lds
pusha
aad
imul
or
orb
divl
out
loopne
xor
mov
push
lods
inc
rcrl
addr16
mov
sub
jno
or
test
rcll
cmp
in
xchg
xor
stos
xchg
inc
rcrb
mov
mov
dec
pop
adc
jb
xlat
imul
mov
mov
loop
cmpsl
xchg
pop
pop
jae
dec
pop
nop
add
mov
jecxz
fldt
fldl
inc
andl
jnp
and
dec
bsr
lock
pinsrw
es
xchg
push
sbb
out
jge
xchg
lret
sti
test
or
adc
scas
pop
lea
fimull
lods
stc
mull
lahf
sub
pop
or
add
mov
dec
in
loop
clc
sarl
adc
in
sti
sbb
cmc
xlat
mov
fstl
and
xchg
imull
mov
jmp
push
int
cwtl
in
push
andl
lock
xor
stos
pcmpeqb
inc
or
test
cld
xor
nop
in
xor
jae
cltd
sbb
jne
pop
and
out
sarl
test
aam
lods
movsl
mulb
pop
movsb
mov
nop
xchg
xor
clc
inc
loopne
in
mov
lret
in
add
bts
ja
xchg
add
sub
push
enter
add
sbb
fwait
jnp
mov
pop
imull
cmpsl
sub
insl
jae
mov
leave
mov
pop
sub
mov
lods
sbb
push
cmp
xor
jne
fstpt
adc
ds
std
test
xlat
mov
hlt
shrl
mov
mov
dec
push
cmpsb
pop
loop
test
imul
jmp
mov
stc
or
sbb
or
pop
cltd
fstpt
out
pop
scas
pop
cmpsb
les
mov
or
jl
jp
and
out
lret
mov
mov
repz
or
pop
cmp
pushf
sub
scas
cmpsb
ds
shl
mov
adc
push
or
notl
into
mov
std
add
lods
and
and
clc
insl
aaa
popf
in
inc
xor
sar
sahf
aam
mov
imul
stc
push
push
cmp
repz
ss
push
in
lea
das
repz
addl
jae
stos
add
scas
push
repnz
je
mov
add
and
add
xchg
xchg
push
rolb
sbb
mov
or
and
jp
aad
cltd
cs
and
movsb
ljmp
push
shlb
pop
lods
xchg
out
divl
pop
inc
and
add
leave
ljmp
gs
enter
in
cwtl
push
sbb
cmpsb
fbld
inc
iret
sbb
pop
aad
pushf
dec
int
pusha
dec
inc
gs
and
sub
push
shrl
lret
push
push
fcoms
sub
fs
daa
movsb
inc
pop
sub
and
ds
nop
cwtl
test
inc
scas
xor
mov
xlat
in
sbb
mov
and
nop
ret
mov
add
or
addl
fildll
popf
push
cmp
jns
and
into
imul
mov
dec
subl
nop
or
mov
imul
cmp
xor
xor
imul
inc
out
leave
mov
aam
int
out
sahf
add
aam
and
testb
add
adc
add
mov
lcall
cwtl
pusha
xor
shlb
jp
fwait
or
fildll
aaa
ret
cmp
mov
pop
mov
lcall
dec
mov
xor
or
mov
push
mov
aaa
in
insb
icebp
dec
enter
push
fxch
outsb
push
enter
fdivs
push
add
clc
cmp
mov
scas
or
mov
movsl
scas
sbb
xor
inc
jge
xor
bound
int
ss
ret
xchg
cli
imul
or
dec
loope
out
sub
rcll
push
sbb
in
pop
add
lcall
push
imul
icebp
mov
pop
testl
test
in
add
fucomi
inc
inc
push
sti
fidivrl
bound
add
xchg
jle
pop
fsubrp
daa
leave
fnsave
jmp
adc
jp
cmpsb
inc
sbb
mov
loopne
addr16
cmp
mov
cmpsb
and
and
mov
adc
jnp
cmc
ret
adcl
cmp
es
sub
cld
gs
std
maxps
lods
fistl
push
ljmp
and
mov
mov
adc
inc
sbb
cmp
outsl
insb
ja
arpl
imul
mov
adc
jbe
push
xchg
inc
push
adc
pop
es
or
in
jb
inc
test
push
lret
sarl
mov
xchg
xor
cmpsb
pop
repz
adc
mov
cmp
dec
ret
mov
and
sub
or
nop
sahf
insl
add
scas
jp
mov
rol
aas
mov
sub
mov
xchg
lea
push
dec
das
xchg
insl
mov
sbb
aad
xor
mov
dec
push
std
addr16
or
scas
mov
dec
push
out
testl
dec
pop
sub
shl
movsb
jge
call
aaa
mov
cmp
scas
mov
mov
out
dec
sub
lret
adc
xchg
gs
enter
mov
loope
jp
mov
dec
iret
push
jno
lcall
sub
inc
xor
and
cli
pop
decb
pop
jne
pushf
xchg
mov
xor
or
mov
lret
es
push
icebp
arpl
jle
mov
cmp
insb
xchg
xchg
in
add
gs
or
rcrb
outsl
xchg
pop
jno
or
xchg
jbe
push
rolb
iret
and
inc
lods
pushf
jb
loopnew
jnp
mov
in
js
mov
inc
or
test
repz
shlb
pop
int
sahf
add
dec
in
insl
cmpsb
test
loope
mov
push
std
xchg
xor
popf
jb
jae
add
mov
mov
adc
aas
enter
sub
xchg
pop
insb
lds
icebp
adc
lahf
sbb
jns
cmpsl
add
jbe
enter
lahf
aas
xor
loope
add
fcoms
xor
xor
data16
sbb
fimull
adcb
std
ror
stos
repnz
out
ret
sbb
das
adc
insl
mov
inc
xchg
sbb
xor
pop
mov
stos
dec
fyl2xp1
popa
cmp
sbb
xor
xor
jl
xor
sbb
adc
clc
inc
negl
jecxz
cmp
sub
add
mov
addl
pushf
je
add
adc
cmpl
add
adc
sub
repnz
testb
popf
xchg
rorl
mov
sbb
inc
orb
nop
jb
jecxz
xchg
mov
xchg
or
pop
stos
adc
mov
jg
add
sbb
jmp
call
adc
lcall
mov
dec
jbe
lock
or
xor
cmp
js
dec
push
ret
sbb
inc
mov
pop
iret
cmc
jl
jecxz
adc
xchg
mov
jns
add
add
dec
dec
fists
jno
cwtl
int
xchg
fstl
lcall
xlat
loope
filds
xchg
mov
xor
xchg
loop
es
xor
mov
adc
cmpsb
cmp
jnp
dec
lock
xor
fsts
adc
out
pop
dec
sub
xchg
pop
push
inc
hlt
xchg
cmpsl
pop
iret
fcomps
adc
push
shld
or
icebp
cmpsl
inc
jecxz
fmul
add
rcrl
lcall
mov
adc
fldcw
leave
xor
sub
stc
mov
incb
outsb
stc
and
pop
movsl
xor
inc
pop
mov
fdivrl
fcmovnbe
cmpsw
jge
out
iret
outsb
shrb
push
lahf
fwait
mov
je
daa
xchg
adc
loopne
repnz
test
data16
or
stc
dec
jecxz
xlat
sub
loopne
jp
out
test
outsb
push
add
sub
pop
inc
into
adc
jl
xchg
mov
dec
pushf
loopne
push
push
xchg
pop
mov
dec
nop
and
mov
rclb
sub
dec
roll
movsl
and
aam
fld
and
xchg
mov
push
scas
mov
and
daa
pushf
jbe
add
xchg
xlat
fwait
dec
mov
sysexit
dec
mov
mov
xor
call
insb
cmp
cmp
cmpsb
jo
mov
dec
and
out
das
mov
insb
jl
nop
adc
outsl
push
repz
lds
call
xchg
hlt
or
mov
dec
lods
sahf
or
jo
add
cmpsb
push
outsl
push
aaa
inc
dec
in
ljmp
and
vpsrlw
xor
lret
mov
shrl
lods
xor
cmc
xchg
test
xchg
loop
jno
movsl
add
loopne
stc
mov
fisttpl
pushf
xor
andl
into
leave
push
cmp
dec
push
pop
data16
add
pop
jno
inc
test
push
mov
mov
xchg
xchg
addl
jmp
cmpsl
push
or
pop
xlat
jmp
fisubrs
cmp
add
mov
dec
out
jae
sbb
adc
dec
insl
add
jmp
sbb
mov
ret
adc
push
mov
mov
cmp
mov
mov
cmpsl
xor
sub
loope
int3
xchg
sub
jns
mov
lcall
jle
inc
lods
sarl
int
lret
mov
loop
cltd
jp
sahf
xchg
roll
ss
pop
mov
outsb
pushf
aaa
push
pop
mov
mov
pop
inc
push
test
push
xchg
mov
mov
pop
aad
cli
and
loope
nop
jl
dec
mov
jge
fsubrl
add
push
mov
dec
xchg
fiadds
jns
dec
int3
bound
fstpl
cld
or
xchg
or
adc
mov
push
std
fcoml
lahf
cmc
cs
xor
in
inc
sbbb
addb
or
repz
in
movsl
addr16
or
aaa
inc
mov
imul
jns
mov
ret
test
or
dec
adc
xchg
shl
push
add
fistl
sub
in
or
mov
pushf
jle
aaa
lock
inc
iret
fwait
mov
fsubrl
repnz
stos
adc
hlt
pop
pop
pop
imul
lret
xchg
das
adc
sbb
not
push
enter
cmp
mov
sbb
sub
or
ja
push
cmp
pusha
lea
mov
jno
jp
imul
sub
push
pop
mov
or
cmp
pop
ds
jl
pushl
mov
movsl
fst
das
fs
sub
mov
loopne,pn
mov
cmc
fld
adc
inc
push
sbb
or
mov
mov
pop
nop
out
mov
inc
leave
fwait
sbb
dec
orb
sti
xchg
in
subb
jbe
and
and
bound
ja
push
jecxz
rcr
mov
push
icebp
xor
fstps
lea
rclb
ja
or
mov
int3
ret
inc
stc
push
pop
in
add
inc
sarb
int3
pslld
or
fildl
mov
cmp
inc
jle
push
xlat
shr
inc
arpl
mov
xor
xor
or
xchg
jns
jmp
sub
dec
jb
jb
pop
cmp
cmpsb
imul
add
adc
call
dec
sahf
movsl
jnp
xor
xchg
dec
adc
sbb
push
lret
mov
icebp
pop
and
sarb
dec
or
mov
out
aam
cmp
out
lock
xor
sub
inc
mulb
data16
xor
fwait
jge
fcoml
mov
cli
mov
gs
int
insb
push
pop
mov
sub
xchg
cmp
stos
and
arpl
loop
aad
mov
insb
jle
push
xchg
mov
sub
insl
dec
in
jmp
cmpsb
jne
insb
out
jbe
scas
cmp
jl
mov
adc
sti
shll
xchg
pop
scas
push
inc
fistpl
clc
push
cmp
jle
loop
bnd
mov
scas
in
fnsave
insl
pushf
testb
icebp
inc
pusha
bound
xchg
sub
imul
sahf
sub
loope
xchg
lods
outsb
xorb
adc
fisttpl
pop
add
mov
bound
xor
inc
adc
data16
lods
test
lds
rorl
cli
lea
xchg
out
inc
rclb
sbb
adc
popa
add
sbb
je
jg
sub
out
mov
lods
lods
unpckhps
sub
inc
ret
getsec
and
and
sub
int
icebp
out
xor
sub
cmp
fwait
mov
xlat
adc
pop
mov
mov
push
push
sub
mov
jg
mov
xor
pop
scas
fcmovnbe
mov
lcall
pop
pop
lds
push
push
and
cmp
fdivrl
jbe
cwtl
mov
xor
leave
ljmp
rclb
in
loop
dec
es
xor
mov
pop
lock
cmpl
xchg
lret
bound
jecxz
scas
shlb
leave
rol
fistpll
fbstp
mov
sti
ss
into
clc
inc
lds
mov
pop
es
testb
sub
scas
jnp
xchg
xorb
cld
out
cmc
mov
add
fidivrs
int3
jecxz,pn
lret
ss
pop
aad
out
push
pop
adc
mov
je
sub
jl
mov
xchg
in
inc
enter
aam
aas
and
or
rcrb
ret
jae
aas
jno
xlat
ret
jb
push
or
mov
push
cmp
push
sbb
xchg
mov
stos
pop
pop
dec
sti
nop
pop
dec
push
xchg
lds
adc
dec
je
mov
or
jne
jb
or
sub
sub
cmp
pop
xor
cmp
ret
push
les
jmp
lods
and
lock
inc
pop
sbb
push
xor
xchg
fs
lods
inc
pop
xchg
push
negb
sahf
adc
inc
jmp
ret
int3
pop
cmp
lods
and
xor
lock
stc
inc
mov
sub
push
ljmp
testl
jo
mov
cmp
pop
cmpsl
sti
push
adc
addl
xchg
shrl
adc
js
sti
loop,pn
push
fcmove
scas
cmc
add
mov
aas
sbb
sbb
mov
cmp
mov
dec
push
xchg
pop
push
repz
or
or
inc
pop
test
sbb
mov
cmpsb
jbe
and
xchg
test
xchg
jb
mov
icebp
mov
pop
sub
push
push
mov
add
adc
add
rcrb
popf
lea
lock
and
sub
ds
mov
inc
lcall
int
fcmovbe
jae
jge
dec
adc
and
or
xor
cmpsl
mov
fildll
jo
mov
jne
sub
jmp
mull
mov
inc
jo
mov
push
shlb
outsl
hlt
rolb
shl
inc
cld
mov
jg
into
rol
cld
adc
inc
lea
mov
jp
outsb
and
in
jg
xchg
cmp
mov
pop
jb
xlat
nop
dec
into
push
popa
je
repz
lret
clc
cmp
dec
lcall
or
xchg
sbb
mov
push
out
jno
scas
jmp
cmp
test
repz
jns
add
sub
or
dec
int
cmp
test
mov
push
adc
adc
or
add
add
fsubrp
out
xchg
mov
inc
insb
sub
push
sbb
fcompl
loopne
xchg
push
sub
shlb
lret
addl
icebp
sbbb
dec
pop
cmc
imul
mov
inc
outsl
rorb
xlat
dec
cld
lcall
loop
lds
data16
repz
addr16
pop
sahf
jp
leave
inc
pusha
scas
addr16
pop
testl
repz
cmp
dec
sub
xor
test
inc
fisubl
int3
bound
or
lahf
imul
jno
aam
dec
inc
jnp
add
adc
jge
add
pop
dec
cmp
push
push
or
mov
lcall
leave
jns
mov
das
lods
test
push
cmp
das
mov
or
imul
add
sub
ds
ja
ljmp
mul
les
enter
xchg
shrb
sub
cltd
iret
in
push
fbld
test
xchg
jle
xor
add
lret
lret
and
loope
lret
push
sbb
test
adc
out
add
dec
test
inc
repnz
test
xchg
iret
rolb
arpl
stos
jo
or
dec
arpl
dec
mov
loopne
push
das
scas
or
shll
out
and
in
and
mov
mov
orb
mov
adc
pop
movsb
push
jg
cld
dec
int3
ret
lcall
cld
xchg
ss
sub
cmpl
pop
ljmp
mov
pop
add
bound
in
lods
stos
add
and
pop
test
leave
loope
pop
mov
xlat
or
sbb
jno
adc
mov
fcompl
xor
mov
xchg
jne
inc
xor
xchg
imul
mov
or
aaa
ja
fnstsw
iret
and
pop
jmp
mov
pop
xor
lret
fcomps
adc
or
iret
ljmp
inc
dec
nop
cmp
test
jmp
popw
jmp
ja
pop
cmp
dec
xchg
je
and
push
jne
xchg
shll
jbe
lock
out
push
adcl
aaa
fdivl
popf
das
ret
xchg
mov
rcl
jno
dec
mov
jp
outsl
test
add
mov
push
xor
mov
cmpsl
out
mov
rorl
test
jp
push
cmp
dec
sbbl
pop
sbb
xor
ret
add
mov
lea
adc
addr16
push
aas
sub
adc
lea
add
in
add
imull
loop
repnz
inc
outsb
push
sub
inc
pop
mov
repz
cmp
cld
je
je
xchg
xchg
adc
cmp
and
xchg
lret
push
jo
das
add
sbb
out
mov
hlt
js
mov
sub
xchg
in
pushf
push
addl
push
sbb
cmp
mov
out
jbe
test
pop
inc
jns
push
or
cmc
stc
popf
scas
mov
xchg
push
leave
sbb
rorb
out
je
in
les
or
pusha
adc
lods
icebp
mov
pop
jmp
pop
and
or
les
test
lcall
xor
inc
aad
hlt
sbb
pop
lcall
and
mov
pop
mov
push
fstpl
sub
mov
mov
je
out
aas
sub
pop
in
cmp
dec
int3
fildl
pop
xchg
aad
shlb
and
mov
pop
aad
fcompl
jg
test
jg
dec
push
jp
lods
mov
in
inc
inc
adc
test
cli
les
mov
psrld
mov
repnz
aas
xchg
and
sbb
in
cmc
xchg
aas
sti
ret
lea
xor
cmp
loopne
xor
sub
fildll
jmp
std
inc
cmp
adc
sub
cmp
mov
in
aad
iret
adc
icebp
aas
xor
mov
out
xor
cmc
popa
iret
repnz
loop
outsb
es
push
mov
out
jbe
cmc
dec
data16
lea
lea
mov
xor
cmpsb
cltd
clc
xchg
adc
or
and
cmp
cs
cli
in
loopne
cmp
je
or
jle
fnsave
mov
pop
js
int3
cmp
xor
adc
jl
add
mov
cltd
mov
cld
add
sahf
test
das
dec
xchg
pop
fcomip
dec
pop
mov
jmp
push
loop
mov
jle
xchg
je
cs
mov
inc
arpl
inc
popa
mov
and
jl
stc
jo
pop
add
movsb
add
je
jg
lock
add
scas
pop
or
out
mov
pop
xchg
pop
pop
adc
icebp
clc
jno
repz
adc
push
int
mov
mov
jmp
mov
in
push
xchg
test
clc
sbb
fwait
cmc
ret
mov
add
push
inc
jb
push
roll
mov
je
sti
insb
test
jne
adc
mov
mov
ds
aad
ljmp
dec
shrb
add
pop
add
test
movd
cmp
and
fstps
inc
fisttps
cmp
inc
dec
test
mov
int3
fdivs
lret
or
arpl
mov
sub
add
xchg
jge
daa
outsb
pop
push
in
aas
mov
xchg
movsb
sbb
push
jmp
shlb
fs
test
popa
jge
lcall
inc
push
sub
jge
test
loope
xchg
sub
test
or
sub
popa
xor
jp
ret
xor
dec
xchg
es
aam
and
jle
lret
mov
jo
mov
neg
les
pop
daa
push
fstp
xchg
sbb
add
rorb
mov
mov
push
cmc
loop
pop
out
loop
in
bnd
mov
xchg
adc
hlt
loope
adc
shrl
xchg
xchg
lret
lods
out
iret
jle
sub
clc
sub
push
leave
jo
add
mov
test
jl
cmpsl
mov
cmpsl
jns
std
outsl
movsl
and
jno
enter
adc
jge
mov
aas
out
xor
scas
arpl
mov
inc
xchg
into
jmp
pop
jmp
xor
or
addb
daa
mov
cs
xchg
cmp
pop
movsb
ljmp
outsb
mov
mov
hlt
sahf
fdivp
cmp
xor
or
test
pop
sbb
push
pop
or
add
xchg
xabort
dec
sahf
mov
jno
sbb
lock
mov
add
mov
xchg
aas
or
test
push
mov
sub
xor
adc
inc
imul
push
pop
cmp
lret
sbb
inc
scas
pop
scas
xlat
fstl
jns
and
adc
and
dec
dec
lahf
cltd
xor
lahf
fs
cmp
cld
push
jg
scas
cli
jo
and
fstpl
aaa
setp
out
into
in
cmp
rclb
popa
rcrl
outsl
icebp
or
imul
jo
jne
scas
and
lds
inc
sti
test
lea
jns
sbb
and
fdivl
mov
out
icebp
mov
pushf
or
cmpsb
xlat
lods
insb
leave
aad
jno
repnz
add
fsubs
sub
clc
movsb
and
lods
int3
xor
mov
push
in
in
or
sti
scas
in
jns
sbb
push
and
flds
pop
enter
cmp
into
cmp
test
in
repnz
popa
jp
mov
pop
adc
or
inc
push
mov
xor
out
fstl
add
loope
pop
or
pop
js
movsb
pushf
iret
pop
stc
inc
jno
ljmp
lret
call
inc
xlat
xchg
push
add
mov
mov
inc
sbb
mov
jno
dec
pop
xchg
push
loop
outsb
push
clc
or
loope
fistpll
cmp
xor
sub
pop
mov
pop
pop
into
mov
shll
cmp
xor
jae
sbb
sub
lds
mov
mov
cmpl
das
shl
fisttpll
arpl
inc
inc
inc
mov
data16
xor
adc
adc
jmp
andb
fiaddl
adc
repz
xchg
test
mov
ds
sbb
sub
arpl
push
mov
cmc
dec
jne
pop
ds
mov
loopne
and
xchg
xor
push
out
fs
ljmp
cltd
xchg
add
mov
xchg
jmp
je
xchg
xchg
divb
jmp
std
jae
movsb
not
push
cwtl
adc
pushf
outsb
repnz
mov
push
push
in
add
add
dec
xlat
xor
sub
adc
add
mov
or
cmp
xor
rcrb
push
in
mov
xchg
push
pop
mov
das
mov
jae
push
adc
lock
pop
jno
pop
sub
xchg
fxam
addr16
jp
dec
sbb
setg
adc
shlb
jl
add
mov
inc
repz
and
aas
and
jg
enter
out
sub
inc
and
jo
cmpsb
inc
xchg
cmp
push
add
push
inc
mov
cmp
xchg
sub
xchg
out
or
popf
testl
adc
inc
xor
add
push
cld
adc
sub
mov
add
dec
mov
cmpsl
dec
cmc
gs
ret
pop
xchg
movsl
xorl
adc
adc
lds
lcall
rclb
aas
test
xor
scas
in
test
inc
mov
rcll
mov
fidivrl
jns
jo
in
jmp
inc
adc
mov
lods
lock
and
jle
popf
aaa
hlt
xor
xchg
or
lea
pop
xchg
dec
push
push
shll
loop
pop
ss
sbb
and
jmp
sub
dec
push
cs
popa
fistps
or
cmpsl
int3
push
lcall
ficomps
inc
iret
stos
loope
xchg
cmpsb
jns
bound
testl
ss
hlt
mov
dec
into
movsl
jne
fsubrl
cmpsl
insl
movsb
add
cmpsl
clc
mov
add
pusha
cmpsb
adc
xor
shrb
lret
ja
mov
inc
sti
in
and
sbb
mov
push
dec
xor
pop
icebp
lds
jo
aas
mov
mov
pop
jp
adc
faddl
lods
lea
mov
xor
lcall
cmpsb
mov
push
paddb
std
sub
ret
dec
jae
xor
ja
mov
mov
stos
and
test
jns
shll
fcmovnu
punpckldq
cli
or
push
push
jnp
xchg
cmp
add
mov
stos
jnp
push
fsubs
fcomi
fistps
test
sub
pop
repz
dec
call
mov
mov
jo
aad
cli
pop
mov
ret
xchg
pop
jnp
fs
mov
add
mov
cmpsb
jo
inc
mov
jge
sub
mov
jo
cwtl
jle
jnp
jae
loop
cmp
fwait
insl
fsubs
je
aas
inc
mov
sbb
stos
mov
addr16
test
pushf
or
jge
lds
dec
cld
stos
shll
xchg
jg
push
sbb
addb
xchg
mov
or
mov
sbb
in
xor
mov
mov
jae
test
dec
mov
adc
xchg
shlb
in
push
test
pop
arpl
inc
jecxz
iret
cs
xchg
scas
fisubrl
add
xor
popa
fwait
data16
popf
inc
ss
or
stc
imul
lcall
cmp
aaa
adc
lahf
adc
dec
pop
fs
repz
xor
add
adcl
mov
cltd
or
std
fcmove
orb
loop
testb
add
lea
inc
mov
xor
mov
jp
icebp
arpl
xor
mov
inc
movsl
or
xor
push
lods
add
jae
jg
pop
xchg
jno
push
adc
xor
xchg
jbe
or
adc
xor
push
imul
mov
lea
lock
sahf
loop
cli
add
add
sbb
inc
fnstcw
bound
lret
push
test
pop
lcall
mov
popf
mov
scas
shlb
gs
outsb
loope
pop
fwait
add
and
push
fbld
fnstenv
imulb
dec
stc
jl
jnp
ds
mov
into
lret
aam
push
add
mov
rclb
icebp
inc
jae
mov
push
or
mov
sbb
push
rolb
add
jo
jge
add
pop
je
dec
jb
cltd
cmp
test
xor
into
cmpsl
cmp
lcall
stos
sbb
add
add
fnstenv
popf
inc
cmp
pop
mov
jl
add
ss
or
dec
cmpsb
jnp
loope
jg
insb
movsb
fiadds
mov
je
lds
xchg
mov
mov
movsb
jecxz
xchg
call
mov
mov
cltd
push
daa
test
push
das
js
push
outsl
sub
out
inc
inc
sub
xor
subl
cmc
and
push
mov
fwait
pusha
popa
jns
cmp
pop
cmp
movsl
lret
inc
loop
dec
dec
fidivrl
push
test
pop
mov
adc
lahf
jns
mov
int3
stos
das
jge
xchg
mov
mov
jg
rorl
test
dec
dec
push
adc
jne
inc
sbb
shrl
push
push
cmc
adc
jmp
jns
ljmp
shl
test
out
cmpb
fs
ja
or
mov
ljmp
sbb
lretw
cmp
jo
mov
cmp
adc
push
adc
cmpl
xlat
stos
add
adcb
bound
sub
sub
fnstcw
mov
sub
mov
arpl
test
outsl
es
ja
mov
ficoms
mov
call
nop
or
fwait
ss
mov
mov
ja
call
aaa
mov
sbb
mov
dec
xorb
jg
popa
ss
rcl
pop
sub
iret
mov
mov
test
inc
lcall
cmp
leave
push
cmpsb
ret
pop
dec
mov
jae
sbb
lds
mov
pop
aam
or
cmc
mov
dec
jge
xlat
jle
or
imul
ficoml
in
roll
int3
sbb
push
popf
test
or
shufps
jae
lahf
stc
dec
pusha
les
es
sub
jmp
adc
add
mov
insb
or
loopne
stc
pop
inc
sub
or
les
jge
clc
adc
push
mov
imul
rorl
mov
addl
push
fstpt
sub
shl
mull
jne
arpl
daa
and
mov
mov
adc
xchg
and
push
roll
lret
aaa
std
dec
xor
push
scas
lock
sbb
aas
push
shll
aam
ficomps
mov
lock
dec
add
enter
jbe
adc
ds
test
mov
into
xor
rcll
hlt
and
out
imul
shlb
inc
pop
sbb
sbb
xchg
test
test
jne
jle,pn
jmp
xchg
lahf
or
dec
testl
mov
inc
ss
jne
ljmp
mov
xchg
xor
rcrl
jns
rcl
mov
adcb
mov
and
test
lds
sbbb
repnz
push
jp
mov
pop
cltd
sbb
mov
or
push
jge
rorb
and
xchg
push
push
lock
aas
sbb
dec
stc
mov
lret
daa
pop
loope
mov
cmp
test
sbb
lods
sub
ss
cmpsl
jle
or
bound
sub
inc
imul
xor
sbb
arpl
inc
icebp
sbb
dec
push
push
out
int3
insb
pushf
in
sub
hlt
je
repz
xor
mov
iret
lret
mov
fildl
js
push
inc
das
push
mov
xlat
mov
lods
jle
shlb
xor
mov
call
inc
dec
shlb
jl
jmp
mov
or
cmp
and
pop
test
add
icebp
fmuls
pop
ljmp
arpl
nop
mov
sti
sub
mov
data16
mov
xor
cmp
mov
aas
mov
pop
call
add
cmp
call
pop
cmovno
xor
xor
jnp
push
pop
xchg
push
adc
call
jmp
adc
push
std
xor
outsl
dec
das
rclb
shl
ljmp
repz
push
and
subb
cmp
sub
test
test
xor
leave
sbb
adc
dec
out
outsb
std
and
pop
xchg
addr16
aas
outsb
jp
gs
xchg
push
mov
push
mov
jno
push
pop
ss
movsl
scas
lea
scas
jbe
js
xchg
repnz
jg
push
sub
test
sbb
xlat
xor
inc
sbb
clc
imul
mov
aas
stc
dec
fwait
cmp
shrb
dec
sbb
popa
and
mov
mov
xchg
and
negb
movsl
loope
mov
pop
cmp
rorb
cmpsb
arpl
ss
inc
les
adc
mov
jno
xchg
in
movsb
xlat
mov
and
jne
push
cmp
enter
fimuls
into
es
mov
inc
pop
xchg
lods
mov
jno
out
xchg
mov
insl
jle
cmc
pop
fisubs
fchs
jp
push
pop
in
fiaddl
mov
imul
rol
push
fidivrs
xor
rorb
addr16
mov
rcrl
hlt
arpl
gs
bound
mov
or
mov
push
out
add
lods
shrl
lea
adc
fsubs
scas
mov
cmp
xchg
scas
inc
mov
fcomi
xchg
das
ret
lods
inc
cmpsl
clc
std
dec
int
pop
arpl
dec
pop
cmp
push
mov
and
or
ljmp
cs
lea
ljmp
mov
iret
pop
push
jae
js
out
aas
push
in
mov
add
and
data16
add
add
fidivrs
mov
sub
hlt
addr16
scas
push
xlat
pop
lcall
mov
push
mov
and
add
cmp
das
lahf
cs
fisubs
arpl
ss
push
xor
jo
gs
push
adc
xor
fucomip
xchg
dec
pusha
leave
fadds
stos
mov
mov
stos
jge
xchg
cmp
fincstp
rcl
pushf
int3
enter
dec
aam
mov
cli
mov
aam
sarl
add
out
mov
lahf
fidivl
xchg
jg
dec
shrl
cs
cmp
leave
jg
clc
or
add
push
fsubrl
rol
insb
cld
cs
mov
loope
mov
stos
adc
sahf
jp
pop
adc
test
add
roll
in
into
sbb
add
inc
sub
gs
imulb
je
rcl
xchg
adcl
xor
shlb
js
and
mov
and
jnp
mov
pop
push
mov
mulb
cld
test
scas
in
pushf
fstps
shl
and
outsl
xchg
out
test
pop
xchg
push
pop
bound
mov
loopne
xchg
jae
arpl
adc
into
fistpl
or
jns
xchg
push
and
pop
xchg
hlt
xchg
hlt
gs
lds
sbb
insb
les
inc
jno
cld
cmpsb
mov
sub
dec
add
ficoml
adc
jnp
xchg
push
fs
and
jb
hlt
imul
repz
stos
sarl
or
jmp
pushf
insl
shrb
scas
out
outsb
mov
test
adc
add
sbb
lahf
add
push
aas
std
jmp
pop
inc
mov
andl
imul
adc
mov
lahf
xor
cmpsl
xchg
leave
jp
mov
inc
int3
ficoml
das
cltd
jl
mov
stc
or
and
notb
or
and
das
sbb
sahf
and
je
xor
pusha
jnp
clc
iret
orb
outsl
pop
jmp
xchg
dec
sub
xor
int3
jle
dec
mov
xchg
adc
rolb
data16
out
inc
sbb
xor
inc
push
pushf
inc
out
imul
loopne
pop
movsb
push
jge
lret
lea
and
lock
jecxz
test
notb
sahf
push
daa
and
fsts
mov
mov
mov
hlt
mov
test
or
lods
xchg
insb
xor
shll
push
outsb
arpl
inc
jno
and
xor
push
lahf
inc
scas
pop
das
aad
popa
cmp
sbb
lret
fcoms
add
fcomps
in
push
es
lss
outsb
lret
cmpsb
add
sarl
sub
xchg
jnp
arpl
mov
jbe
inc
pop
loopne
sub
scas
mov
stos
sbb
arpl
adc
inc
sub
vp4dpwssds
rcrb
repnz
mov
fcomp
adc
insl
lods
sti
into
test
inc
push
mov
mov
rorb
cmp
mov
cmp
xchg
push
mov
lret
int
xchg
test
sbb
dec
test
adc
int
mov
mov
lds
fldenv
shrb
popa
enter
mov
ja
dec
hlt
fildll
mov
xor
cwtl
int
mov
push
dec
xor
inc
push
lods
shl
and
int
jne
mov
pop
sbbb
cmp
aam
out
ss
sub
mov
push
pop
rcll
push
mov
dec
mov
jmp
push
fldt
pop
push
ljmp
xchg
out
loope
test
mov
or
sub
xor
icebp
bound
jle
adc
xchg
lods
lret
mov
pop
ret
pop
sub
lods
mov
stc
push
inc
and
dec
int
pushl
inc
dec
out
fwait
xlat
mov
xor
fs
mov
fistpll
repz
das
incl
jae
dec
sbb
ja
pop
shr
inc
mov
cwtl
in
xchg
push
mov
fsubl
insb
imul
mov
pop
cli
mov
fcmovne
es
in
out
dec
aam
sub
out
jae
rclb
add
sti
test
xlat
or
lcall
in
aaa
mov
jae
sbb
xchg
lret
add
jo
es
mov
imul
mov
jo
adc
sub
in
fstl
lock
mul
cltd
mov
jno
cli
push
inc
mov
jo
movsl
pop
mov
inc
dec
adc
mov
or
leave
pop
push
mov
cmp
sbb
jbe
mov
lret
daa
popf
dec
aad
jmp
mov
dec
lds
pop
repz
adcb
push
jle
ret
mov
stos
fdecstp
cmp
sbb
pusha
pop
push
leave
push
in
sub
dec
dec
in
push
mov
mov
rcll
stc
bound
in
lea
cmp
sbbb
loopne
or
jl
push
pop
lahf
and
and
or
hlt
inc
imul
xor
es
pop
mov
xlat
lds
xchg
jp
or
push
dec
je
mov
scas
stc
addb
in
mov
imul
loop
mov
mov
icebp
test
push
repz
push
cwtl
pushf
sbb
out
leave
add
inc
mov
add
fimuls
stos
pop
mov
jae
rcl
xchg
inc
clc
int
sbb
leave
fadd
in
fcoml
and
jmp
call
dec
cli
cmpsl
inc
out
sbb
dec
sbb
cmp
xlat
mov
cmpsl
pop
stos
cmc
hlt
inc
ljmp
mov
dec
dec
cmp
test
mov
add
adc
pop
mov
in
mov
rclb
loopne
push
lret
aaa
mov
cli
mov
outsl
dec
dec
xor
adc
jecxz
mov
rorl
js
push
pusha
sbb
cmp
and
daa
in
mov
cmp
inc
jmp
stos
jmp
lea
std
call
lods
aas
xchg
pop
sbbb
sub
pop
mov
adc
cld
add
and
push
inc
into
fwait
hlt
fimull
adc
ss
aaa
dec
xor
sti
adc
dec
cmp
bound
jg
rcll
jnp
xlat
adc
mov
fsubrs
sti
or
imul
jb
mov
pusha
mov
cmp
sahf
int
orl
cmpsb
outsl
inc
movsb
xor
in
stc
xchg
xchg
push
movsb
pop
test
in
add
pop
push
push
arpl
sti
out
int
icebp
int3
pushf
add
mov
addb
fildl
andb
dec
and
cmp
mov
cmp
sbb
sub
ds
and
dec
dec
dec
add
and
mov
hlt
pop
in
dec
mov
fcomps
adc
xchg
pop
xchg
int3
jmp
dec
shlb
stc
push
int3
repz
jl
or
or
sti
subps
daa
sbb
das
and
jl
mov
or
jecxz
loope
mov
jmp
ja
and
xchg
sbb
jno
sbb
add
mov
mov
pop
scas
sub
pop
bound
into
fsubl
into
aam
aad
jle
add
jl
call
push
ficoml
mov
fstpl
mov
in
xchg
mov
sub
xorl
mov
jp
mov
jecxz
push
mov
in
push
xchg
xor
cmovo
es
or
xchg
in
sti
or
enter
cmp
mov
cmp
adc
xchg
pusha
test
std
mov
and
lret
mov
adc
popa
les
dec
idivl
push
in
push
xor
lea
loope
mulb
subl
stos
ja
outsb
inc
mov
xchg
ja
fs
sti
xchg
cmp
mov
ss
pop
repnz
mov
mov
aam
call
mov
rorb
pop
pop
dec
in
mov
inc
cmpsl
cmpsb
pop
xchg
lahf
or
fiadds
dec
repnz
push
daa
in
loopne
lods
movntq
sti
xor
sti
aad
call
lret
icebp
inc
sti
fsts
inc
negl
out
in
and
loope
test
dec
jne
dec
add
clc
cmp
sub
scas
cmp
sbb
shrb
ffree
add
lea
ds
adc
leave
stc
mov
dec
aam
ds
jecxz
push
cwtl
ficomps
bound
aad
subb
dec
mov
pop
push
std
dec
dec
pop
je
cmp
fisttps
xchg
adc
stos
xchg
das
leave
jo
cmp
push
sbb
fwait
hlt
xor
or
adc
sbb
push
pop
mov
xchg
dec
jge
leave
cwtl
js
and
cmp
imul
ret
cmp
ljmp
adc
mov
mov
sahf
out
stos
push
mull
int3
mov
xchg
add
mov
orl
adc
shr
pusha
testb
repz
fcoms
cwtl
aam
pop
bts
je
mov
lods
mov
mov
sub
fwait
dec
push
mov
xchg
mov
mov
pop
aam
jle
in
jns
stos
cmp
and
das
mov
scas
mov
jge
lock
sbb
xchg
push
jns
xchg
ret
fstpt
push
sub
pop
nop
jo
fidivrs
jae
out
dec
ljmp
pop
cmp
test
cmpsl
sub
pop
data16
mov
push
into
outsl
push
cwtl
sub
jns
fsubrs
cli
inc
es
xchg
cmc
inc
ds
mov
inc
stos
ja
aaa
jge
fldcw
aaa
mov
sar
mov
xchg
jo
and
jmp
mov
shrl
cltd
lea
popa
dec
sub
lds
mov
int3
cmp
push
pop
cmpsl
xor
inc
mov
mov
mov
iret
ss
sarl
fwait
std
lods
scas
mov
shrd
pop
stc
imul
je
jae
rorl
stc
cmpsl
cmp
fmul
jle
cwtl
fcmovne
mov
repz
adc
jb
mov
mov
mov
or
mov
das
cmpsb
xchg
sbb
mov
rol
int3
rcrb
pusha
sub
or
jmp
sub
adc
loopne
loope
imul
movaps
stos
mov
ljmp
aas
pushf
lods
mov
and
push
cmp
repz
cli
jbe
out
mov
jle
mov
add
aad
cmp
jnp
mov
jl
jno
lods
loopne
xor
cmpl
add
gs
xchg
inc
cmp
sti
or
sub
pop
test
loope
xor
jge
push
cmp
mov
pop
enter
in
ret
push
mov
cltd
mov
jno
sbb
es
lret
pop
mov
adc
lods
jae
scas
sub
jp
push
cmc
mov
lahf
inc
clc
jl
inc
mov
or
push
subb
or
or
dec
cmc
icebp
imul
lds
push
fisubl
inc
jns
push
inc
mov
inc
xor
xchg
pop
stos
outsb
cmp
mov
adcb
cli
pop
xchg
scas
pop
pop
or
mov
cmp
shr
dec
push
or
mov
xlat
xlat
roll
ljmp
lcall
addr16
dec
xchg
adcl
inc
cs
jg
mov
mov
std
mov
mov
mov
cli
push
fcoml
dec
adc
jg
jl
enter
iret
cs
push
sub
es
scas
mov
fisubs
push
add
js
imul
fildll
int3
dec
add
in
cmp
nop
out
andl
push
and
jns
dec
imul
mov
sar
xchg
sbb
cmp
push
cltd
jl
ret
div
push
test
adc
and
mov
in
clc
cwtl
test
into
sub
insl
dec
pop
or
jo
pop
insb
imul
pusha
mov
ja,pn
sub
xor
addr16
inc
xor
popf
sahf
sub
cli
mov
sbb
push
cltd
sbb
or
dec
xchg
add
lcall
iret
jns
pop
mov
cmpl
clc
xchg
fistl
inc
push
or
es
sbb
sub
adc
lds
and
push
sbb
cmp
in
mov
fcomps
mov
lods
xor
xchg
xorb
push
fimull
push
fwait
push
dec
cmp
cs
cld
cmp
sub
mov
loope
fisttpl
jecxz
cltd
test
dec
mov
in
lds
out
lahf
dec
cs
or
push
test
xor
or
out
fidivrl
loop
mov
stos
sbb
int3
test
add
dec
inc
pop
mov
jb
mov
mov
fnstcw
imul
sub
loopne
inc
jne
in
sub
fldenv
cs
mov
js
and
add
sbbl
fs
push
xchg
imul
pop
mov
inc
cmp
hlt
out
and
cld
add
gs
movsl
inc
sub
xor
mov
jp
cmp
and
cmp
push
mov
cld
or
mov
cmp
sbb
or
mov
inc
xchg
stc
and
push
inc
aaa
aaa
push
mov
jmp
inc
dec
sahf
lcall
mov
lds
xlat
fs
mov
jmp
and
arpl
push
aaa
inc
xchg
cmpsl
adc
jo
or
leave
ja
xchg
mov
and
test
fldenv
cltd
cmp
iret
decb
pop
sbb
xchg
es
stos
andb
pop
addb
mov
or
in
xchg
popl
stos
push
ret
inc
mov
aam
mov
jnp
dec
fnstcw
pop
and
roll
pop
sti
test
jnp
push
scas
int3
mov
fprem1
dec
cmc
pop
jge
fsts
arpl
jbe
add
lret
dec
xchg
xchg
aas
or
jbe
jle
aad
xchg
pop
or
mov
fadd
or
cmp
rol
xchg
scas
or
jg
negl
call
mov
mov
or
dec
mov
sbb
xchg
cmp
js
mov
enter
imul
dec
push
cmpsl
test
jecxz
test
cmc
loopne
andb
outsb
sahf
xchg
xor
outsl
pop
fistl
pop
movsb
ss
push
add
das
xor
js
pop
arpl
xchg
int
mov
xor
and
int3
fwait
or
stos
xchg
sarb
sbb
sahf
in
mov
dec
repnz
pop
pop
shll
mov
cs
insb
pushf
movsl
cs
pop
push
add
hlt
sbb
jno
push
sahf
fadds
leave
xchg
mov
movsl
jl
dec
push
push
jne
shlb
and
inc
push
outsb
das
std
dec
inc
imul
mov
fldcw
or
jno
imul
sbb
push
sub
stc
xlat
xor
aad
or
in
xchg
mov
loope
mov
popf
or
gs
fwait
loope
xchg
sahf
leave
call
jb
push
cmpsb
sbb
rorb
push
aam
cmp
aad
in
and
sarl
test
and
and
popf
ds
lcall
repz
in
xor
or
iret
jnp
mov
adc
add
or
arpl
fldenv
mov
cmp
shrb
sbb
cmp
jge
int
imul
mov
pop
add
mov
rcrl
les
push
add
mov
xorb
dec
jmp
push
pop
scas
xlat
je
xor
jg
pop
jae
ja
imul
mov
in
mov
scas
lock
ret
and
mov
jmpw
fiadds
pop
jg
rolb
lods
mov
imul
mov
push
inc
aaa
ds
out
dec
xchg
shrl
xor
into
dec
test
bnd
mov
add
mov
mov
xchg
inc
cwtl
cs
adc
test
lahf
pop
xchg
dec
xor
lock
addr16
imul
fwait
sbb
adc
jmp
mov
and
insl
dec
gs
mov
clc
lods
int3
int3
xchg
pop
scas
cmp
ret
pop
adcl
sbb
xchg
push
stc
ror
movsb
adc
pop
mov
xor
jmp
xchg
cmpsb
adc
mov
aad
ja
cltd
je
pop
push
es
xchg
xchg
cmp
jbe
stc
cmpb
shrb
inc
jecxz
test
cmpsl
hlt
cli
mov
mov
sub
aaa
or
repnz
sbb
jmp
dec
pop
push
scas
sbb
mov
pop
es
cmp
ss
out
or
iret
or
test
rorb
sbb
movsl
jnp
add
and
inc
mov
sbb
sbb
stos
mov
sti
or
or
fistpl
cld
jnp
sub
push
mov
xchg
test
mov
out
mov
xchg
mov
repnz
fldcw
scas
aas
rorl
loopne
dec
daa
lock
push
outsb
in
gs
push
cmpsl
fcomi
pushf
js
rorb
insb
jnp
decl
aaa
xchg
or
fs
xchg
psubusb
mov
shll
mov
push
cmp
shrl
xlat
rcl
dec
sti
mov
dec
andb
dec
test
int
enter
xchg
inc
mov
iret
xadd
mov
jbe
cmpsb
jl
in
pusha
jo
je
and
jo
popa
adc
dec
dec
xor
dec
xchg
lds
loop
push
mov
xor
jne
mov
pop
dec
out
out
rol
pop
cwtl
inc
pop
test
pop
or
inc
out
sbb
dec
call
push
pop
push
mov
and
stos
addl
mov
mov
pop
in
add
sbb
stos
iret
movl
lahf
cmp
repz
clc
test
sub
daa
imul
test
das
sbb
es
inc
push
jecxz
mov
jmp
pop
xchg
jo
js
inc
xlat
test
inc
gs
mov
dec
push
aad
push
popa
and
dec
loopne
inc
jge
outsl
mov
cmc
xchg
lea
pop
rorl
out
mov
mov
lods
adc
adc
nop
nop
pop
mov
adc
add
sub
jno
sbbl
nop
ss
push
shl
add
stos
iret
imul
movsb
pop
nop
jge
dec
lods
dec
jg
cwtl
jmp
push
pop
add
imulb
adc
mov
pop
cmpsb
xchg
pop
xor
orb
push
imul
sub
std
mov
movsl
add
outsl
xchg
daa
add
inc
pusha
fisubl
ds
sub
pop
leave
in
push
das
movsb
mov
nop
fstl
fisttpl
push
lcall
std
add
inc
in
lea
push
lds
pop
int
xchg
pop
nop
pop
shrb
fisubrl
pop
and
data16
jae
testl
es
leave
test
rcrb
xor
int
mov
stos
add
xor
or
mov
sarb
lahf
in
sbb
mov
movsl
sbb
push
or
jge
ficompl
clc
and
hlt
dec
cwtl
shrb
imul
movb
mov
stc
rorb
enter
mov
cmp
xor
cltd
xchg
mov
out
int
iret
mov
insb
xchg
lods
and
repz
mov
fwait
or
clc
pop
movsl
aad
hlt
add
fidivrl
adc
std
cmp
cli
movsl
fsubs
ds
lcall
loop
pop
jae
dec
pop
xchg
dec
push
sub
sub
push
pop
repnz
push
mov
push
pop
or
sbb
add
stos
cmp
lods
push
mov
and
test
jp
test
dec
cmp
mov
jl
icebp
pop
inc
jns
mov
fcompl
and
movsl
inc
lret
das
ljmp
dec
jbe
mov
mov
negl
pop
and
repz
sahf
pop
mov
mov
and
cmpsl
or
sarb
loopne
or
push
mov
orb
es
in
push
andl
mov
ret
pusha
ljmp
sub
inc
xor
jno
sbb
js
jmp
dec
clc
test
and
pop
jl
xor
in
mov
or
sbb
pop
add
xchg
jns
and
insl
or
ljmp
pop
jl
mov
imulb
and
sbb
dec
pop
subl
repnz
rclb
mov
les
xchg
repnz
leave
iret
subl
ds
and
testl
adc
mov
cmp
sbb
mov
and
xor
jg
aas
fwait
adc
inc
xchg
repz
and
push
clc
or
imul
sbbl
mov
dec
jmp
nop
rcl
or
xor
sbb
mov
mov
inc
scas
aas
hlt
inc
cmp
mov
fnsave
dec
mov
dec
dec
repnz
jp
test
sub
push
rcrb
testl
mov
or
jbe
xor
cs
pop
push
clc
cli
sahf
lret
mov
adc
mov
and
cld
inc
pop
mov
push
xor
in
shrb
mov
fidivs
pushf
sbb
mov
mov
mov
cmp
dec
sub
push
xor
pop
xchg
sub
push
cmp
and
scas
or
jne
pop
xchg
and
nop
xor
sbb
in
aam
jmp
jbe
xchg
call
sbb
cltd
sti
adcb
pusha
shlb
fs
lcall
xor
sbb
out
loopne
roll
mov
dec
outsb
stos
pop
std
jns
pop
adc
lcall
andb
stos
push
xlat
sarb
aam
or
cmpsb
mov
jbe
pusha
mov
push
sub
cmp
je
mov
movsb
mov
sbb
fscale
arpl
pop
insl
ja
add
cwtl
std
outsb
je
cmp
outsl
scas
lock
ret
sub
push
mov
lret
fstl
mov
lock
jmp
push
cmpsl
cmp
jge
es
aaa
repnz
ret
fcomps
adc
int3
push
xchg
sub
outsb
dec
shr
lea
loope
pop
icebp
cmp
fistps
jo
push
dec
sbb
filds
add
mov
out
sbb
cmc
and
push
add
push
pop
loope
mov
mov
ja
cmpsl
leave
enter
inc
test
or
mov
loop
pop
jb
lods
mov
or
sub
fwait
add
insl
jecxz
sbb
cmpsb
sbb
mov
cld
lods
cld
add
add
bound
sub
dec
insl
cmp
out
adcl
and
pop
rcrl
push
mov
lods
mov
std
or
scas
and
jl
mov
dec
mov
into
and
lds
xchg
es
cli
sub
pop
mov
jp
cli
lcall
or
jcxz
pop
inc
ret
mov
loope
rcr
data16
cmp
xor
cmp
inc
popa
adc
sbb
les
scas
ds
or
add
cmp
das
shrl
pop
leave
fdivrs
stc
or
dec
hlt
fisubrs
imul
xlat
int
dec
jmp
lret
push
and
aad
sub
sbb
jg
add
mov
xor
mov
pop
cmc
cs
clc
push
pop
mov
mov
int3
stos
in
popf
call
xor
xor
out
loope
xchg
pop
cwtl
leave
mov
addr16
out
jl
in
sbb
arpl
fldt
sar
pop
jecxz
decb
adc
adc
jno
mov
in
icebp
incb
or
mov
sbb
cmp
repnz
xor
shrl
add
popf
cmpsb
mov
jge
jle
aaa
dec
xor
dec
into
adc
cwtl
mov
mov
cmpb
adc
frstor
bound
shll
loopne
popf
add
cli
call
dec
popa
aad
lahf
xorb
and
pop
jmp
cwtl
aam
cmp
and
fistpll
cld
pop
ljmp
cmp
push
clc
push
js
scas
ret
inc
scas
jbe
or
es
fisubrs
adcl
sbb
cmpsb
andb
dec
ljmp
std
fwait
add
mov
xor
roll
mov
sub
push
mov
cli
adc
testl
inc
xchg
test
jg
lcall
aam
jl
jle
inc
pop
popa
mov
cmp
pop
aam
inc
sbb
in
outsl
ret
out
dec
cmp
sbb
in
xchg
imul
cwtl
mov
push
or
mov
movsl
lea
inc
stos
aas
pop
xor
das
negl
sbb
add
lcall
pop
add
inc
sub
sub
sub
std
mov
push
xor
inc
aam
and
cwtl
dec
in
cmp
xchg
pusha
mov
mov
push
jnp
sub
cmp
push
jecxz
bound
fiaddl
mov
adc
int3
dec
ret
adc
popf
xchg
inc
push
stos
xor
pop
pop
ret
pop
mov
loopne
mov
test
mov
mov
cwtl
in
jns
stc
dec
out
mov
ret
or
sub
xorb
xor
test
aad
xor
pop
jmp
gs
mov
pop
call
loopne
pop
add
push
lods
jbe
ror
pop
repz
mov
cmpsl
cmp
mov
lret
lock
sbb
cld
aaa
movsl
das
mov
lods
adc
xchg
rol
leave
shrl
inc
jmp
sub
jp,pt
inc
movsl
negb
cld
or
ret
and
lcall
push
mov
inc
sahf
mov
mov
cmp
xchg
les
pop
lahf
pushf
or
push
iret
jae
cwtl
pop
test
fldt
add
dec
iret
aad
mov
js
hlt
mov
lods
or
les
ja
dec
cmp
loope
fistpll
aam
cmpsl
scas
cld
mov
in
push
inc
jns
mov
xchg
or
sub
push
adc
sub
test
push
xchg
bound
aaa
jbe,pn
gs
aam
imul
inc
and
cs
dec
icebp
cld
lea
gs
pop
int3
sti
aaa
enter
rcr
incl
cmpsl
ret
sbb
sub
stos
pop
push
ljmp
and
xorb
push
lds
lods
pop
cmp
cmp
mov
cmova
pop
in
outsl
cmpsb
es
fidivl
aam
fdivr
mov
je
sub
and
jge
in
into
xor
pop
stc
mov
mov
cmp
nop
mov
scas
out
mov
inc
fnsave
mov
fsubs
out
mov
aaa
or
dec
fsubrl
inc
loope
push
loop
sbb
or
lds
mov
xor
aad
call
or
add
jae
ljmp
fmuls
sub
shrl
shr
std
xchg
dec
mov
jbe
add
lcall
dec
jl
fidivl
incl
pusha
gs
cmc
scas
mov
mov
fiaddl
test
push
mov
mov
mov
cs
cmpsl
add
add
cmp
push
addr16
cmp
cmp
sbb
mov
enter
inc
pop
mov
and
fs
mov
xor
mov
in
inc
test
sbb
mov
lods
jle
push
fdivrs
dec
nop
jo
xor
jae
pusha
mov
push
mov
cmp
mov
xor
push
sbb
icebp
adc
lret
fcomps
rclb
xchg
jb
jae
in
loope
shll
mov
pop
insb
mov
jbe
into
bound
push
popa
mov
xchg
mov
insl
pop
cmpsl
mov
jg
jae
push
lret
stos
lret
std
add
and
mov
jge
ret
mov
imul
out
and
inc
ljmp
fiaddl
sbb
pop
cmc
sar
xchg
cli
dec
outsl
shll
adc
mov
and
dec
push
sub
gs
sbb
fists
xor
sti
mov
lods
mov
xor
mov
cwtl
mov
in
into
inc
push
movsl
adc
sbb
call
lods
ss
subb
cmc
xor
pop
out
out
sbb
jle
idivl
inc
pushf
inc
sbb
or
cmp
xor
jo
and
cwtl
imul
push
mov
out
pop
push
adc
je
mov
sahf
dec
dec
mov
xlat
jg
jg
cmp
dec
dec
ret
divb
lcall
inc
mov
sbb
divl
xlat
sub
mov
mov
pushf
mov
sti
xor
enter
mov
xchg
and
inc
or
inc
test
cmp
popa
je
push
lea
xchg
test
ja
push
xchg
dec
xchg
mov
jae
dec
lret
int
ss
xor
cmp
xchg
out
pusha
mov
in
push
xchg
mov
in
std
int3
and
inc
mov
insb
lods
cmp
add
mov
lret
xchg
xchg
nop
add
jnp
scas
sbb
sub
cltd
pop
and
sub
es
or
in
mov
xor
pop
and
mov
push
push
sbb
push
mov
inc
pop
aas
loope
scas
insb
lea
gs
pop
shl
mov
fst
or
arpl
push
fdivs
push
rcll
ret
clc
stos
test
pop
rorb
sbb
and
scas
mov
or
sbb
dec
dec
cmp
mov
dec
or
jbe
lock
loope
lds
dec
imul
xor
mov
in
inc
movntq
sahf
xchg
pop
test
cltd
mov
mov
cmp
and
loopne
mov
lea
fisttpl
js
scas
xchg
aaa
pop
push
iret
out
xchg
push
jno
shrb
jmp
cmp
cs
in
jecxz
mov
push
xchg
hlt
ja
or
xor
cld
push
mov
xchg
pop
pop
xorb
out
pop
in
testl
loopne
cs
rol
loop
adc
push
sub
loopne
push
cmc
inc
push
add
aaa
aad
jne
out
mov
rclb
cld
std
mov
jecxz
movsl
push
out
push
pop
push
orb
test
xor
aad
addr16
sti
pop
jae
lock
in
push
dec
sbbl
cmp
or
mov
mov
adc
push
jmp
ds
mov
and
xchg
les
data16
inc
jmp
adc
mov
sub
cmpsb
movsl
jbe
cs
loop
insb
xor
add
hlt
mov
dec
push
insl
push
sub
insb
icebp
dec
cmp
jns
xchg
push
imul
mov
inc
cmpsl
daa
mov
push
cwtl
jp
jae
movsl
jmp
jns
fsubp
mov
and
loop
shll
lods
inc
pop
mov
pop
out
js
sarl
dec
lahf
add
push
test
loopne
adc
jno
xchg
lods
call
test
lods
jne
inc
sub
jae
aaa
mov
push
push
mov
ja
sahf
push
enter
or
sub
add
imul
add
push
pop
pop
addb
dec
stos
push
sbb
popa
jle
mov
mov
cmp
dec
mov
bound
push
je
jl
pushf
out
lods
sub
adc
popa
iret
jno
sbb
pushf
push
add
lods
add
mov
lret
push
pop
aad
das
leave
jl
imul
sbb
xchg
lock
into
or
hlt
mov
cli
adc
into
ja
lcall
sahf
ljmp
cmc
repz
xchg
dec
fwait
das
xchg
out
sub
xchg
hlt
jbe
cmpsb
dec
pop
xor
data16
aaa
pop
into
inc
adc
jecxz
in
fildl
xchg
pop
ficoms
imul
test
sub
xor
fisttps
inc
leave
mov
xor
sti
mov
test
adc
pop
fisttpl
movl
jmp
sbb
dec
insl
call
ja
aas
or
inc
xchg
outsl
ret
add
ljmp
pop
fistpl
xchg
jnp
pop
ret
push
mov
movsl
std
arpl
mov
wrmsr
mov
mov
aas
xchg
xor
rolb
xchg
test
xchg
mov
lahf
stos
scas
int
ret
js
test
mov
inc
lret
fstpl
push
cmpb
xor
xor
and
xchg
jge
add
js
ret
push
or
push
iret
xlat
cltd
add
adc
ss
xor
xchg
jmp
and
xlat
jne
xor
inc
stos
ljmp
add
lds
js
mov
je
jmp
xchg
scas
rclb
sbb
lds
or
addl
into
mov
in
dec
cltd
mov
aaa
pushf
js
cmp
mulb
faddl
lods
push
mov
inc
cltd
cmp
inc
pop
aaa
ss
jp
das
gs
jmp
shll
outsb
aad
int3
imul
dec
test
dec
xchg
cltd
lods
cmpsl
dec
mov
out
jno
inc
mov
out
xchg
pop
dec
mov
hlt
sbb
mov
push
shlb
enter
mov
out
mov
xchg
leave
lods
add
bnd
mov
in
loopne
mov
dec
lret
jbe
std
mov
or
jp
xchg
rcll
ja
movsl
fdivl
cld
push
stos
loope
sbb
push
pushf
lret
popl
mov
mov
pusha
or
and
mov
cmp
adc
xchg
mov
dec
add
xchg
cltd
fcompl
int
inc
notb
xor
mov
clc
or
mov
mov
icebp
inc
repnz
popa
js
clc
add
mov
sahf
js
jb,pn
ljmp
clc
push
sub
mov
in
pop
cmpsl
pop
lock
sub
xchg
repnz
add
repnz
pop
test
xor
rorl
arpl
std
imulb
sar
out
sbb
pop
daa
or
pop
inc
jp
cwtl
loopne
fwait
mov
ret
shll
xor
xor
popf
test
jmp
sbb
and
inc
in
cmp
push
stc
xchg
mov
pop
push
mov
adc
lret
xor
arpl
dec
sbb
shll
cwtl
fimuls
int
jmp
add
add
mov
popf
sbb
xlat
inc
in
divl
xor
cltd
sbb
test
push
add
insl
add
mov
sbb
bound
insb
in
testb
inc
insb
push
mov
or
jle
frstor
or
scas
popf
add
cwtl
insb
xor
cli
aaa
mov
gs
sbb
mov
lods
inc
cmp
into
jmp
jbe
je
mov
sub
mov
pushf
adc
outsb
div
bndldx
xchg
cs
dec
adc
or
sbbb
cltd
pop
ss
fsub
xchg
push
pop
adc
jnp
pop
adc
pop
or
add
push
push
and
inc
orl
lcall
adc
push
insl
pop
cwtl
out
mov
xchg
mov
jmp
sbb
js
and
jg
ss
cmp
mov
call
push
dec
aam
cmpsl
jl
ret
icebp
cmp
inc
rcll
test
mov
into
adc
stos
cli
add
shll
out
mov
adc
movsb
addl
push
clc
lea
push
inc
cmpsb
xchg
or
sbb
push
lcall
xchg
outsl
inc
repnz
inc
lods
repnz
mov
outsb
stc
jns
cmp
into
cs
cmp
scas
adc
pop
cmp
mov
ss
xor
enter
ret
cmp
out
jb
xchg
add
push
iret
push
mov
loopne
cmpsl
test
in
xor
mov
dec
adc
mov
xor
push
movsb
xor
movb
in
cmc
jle
orb
jg
in
xchg
xor
je
shr
popf
and
fwait
adc
cmp
and
or
push
sbb
adc
fidivs
cld
push
int
cmp
and
aad
in
ret
xor
pop
lret
push
lods
cwtl
mov
shl
cmpsl
ret
xor
stos
dec
js
ja
push
stos
mov
fcmovbe
or
popa
daa
movsb
lea
jl
outsl
shll
pop
add
xor
cli
sbb
lock
int
sub
jb
cli
movsb
add
jle
xlat
push
js
dec
add
adc
jmp
jl
xchg
or
das
mov
pop
shlb
and
pop
add
outsb
jmp
popa
jg
inc
jnp
xchg
mov
fnstcw
scas
outsl
roll
mov
cmp
subb
in
insl
scas
and
or
fucompp
mov
mov
jmp
sbb
xchg
daa
jae
mov
insb
call
xor
notb
and
shl
fisttpll
lock
shlb
mov
mov
add
data16
js
lods
faddp
fs
push
ret
aad
gs
push
ja
or
ja
push
dec
jae
gs
cld
mov
ds
insb
ja
jl
sarl
repz
jg
mov
or
outsl
in
sbb
test
xchg
fdivrl
xchg
daa
mov
aam
aad
stc
jmp
aas
inc
mov
pop
lock
sub
mov
loope
sahf
imulb
call
mov
movsb
das
pop
pusha
faddl
mov
jp
iret
push
dec
mov
jns
pop
sub
mov
fs
nop
xlat
mov
push
nop
js
lods
lods
out
push
loope
imul
arpl
mov
jnp
shl
jge
fisubl
js
inc
push
fdiv
mov
sub
in
pusha
push
sbb
sub
xchg
flds
out
mov
int3
lcall
add
cmp
out
xor
pop
xorl
rcrb
jnp
mov
nop
mov
xor
jns
push
and
arpl
mov
lea
mov
sub
add
jb
shlb
js
xor
lea
jnp
cld
jno
adc
push
cmp
cmp
pushf
sbb
or
inc
pushf
insl
das
push
sbb
rcrb
sbb
leave
add
popa
cmp
outsb
int3
cwtl
mov
dec
dec
cmp
mov
add
dec
fmuls
cwtl
movsb
subb
dec
and
loopne
test
dec
popf
sub
hlt
mov
and
in
fnsetpm(287
adc
bound
jg
das
jne
mov
cmp
cmovg
pop
xchg
test
test
dec
stos
aad
dec
popf
test
mov
xorb
frstor
aas
cmc
sbb
xchg
sbb
stos
stc
sbb
rorb
mov
push
imul
or
iret
lret
repz
mov
or
push
cmp
and
das
dec
int3
cli
sbb
mov
ljmp
sbb
pop
sub
xchg
xchg
jno
int3
and
and
icebp
mov
jle
lods
lcall
mull
popa
and
shll
fucomi
loopne
mov
or
push
adc
lret
and
shlb
cmp
inc
outsb
movsb
pop
add
lret
scas
mov
push
call
mov
push
and
fldcw
adc
ss
sub
sbb
inc
rorl
mov
lock
xor
cltd
sub
mov
js
stos
stos
add
addr16
shlb
xlat
out
push
jmp
mov
orl
mov
icebp
movsb
jo
xchg
lds
mov
loopne
mov
hlt
leave
jmp
out
mov
and
mov
insl
sbb
pop
movsb
loop
imul
sub
stos
iret
mov
xor
jmp
xor
dec
pop
jae
inc
pop
dec
pop
and
dec
jns
cmp
sub
rclb
fsubs
out
add
xor
div
outsl
dec
push
sbb
xchg
xchg
outsl
or
ss
cmp
stos
lret
rep
movsb
pushf
dec
xchg
in
pushf
jp
jne
or
mov
clc
fisttps
or
sbb
jmp
xchg
cmp
xchg
ret
pop
popa
lahf
shr
dec
cld
pop
xchg
jbe
mov
cmpsl
lret
mov
sbb
pop
sub
add
scas
jl
ret
mov
or
mov
ret
scas
lret
outsl
pop
cmp
xor
mov
mov
cmp
gs
rorl
push
out
divl
adc
in
sub
lds
inc
lock
jnp
sti
mov
mov
or
loope
fdivs
ss
ret
ret
push
stos
sub
jne
nop
xchg
cmpsl
and
push
outsl
lcall
lea
adc
push
mov
insb
scas
xchg
pop
mov
arpl
bound
out
into
inc
fnstcw
fiadds
dec
xchg
pop
inc
push
mov
loope
insl
xor
lock
pop
rcll
test
call
fnstsw
test
push
cmp
sbb
lds
xchg
andl
pusha
fldt
adc
flds
lods
jle
xor
loop
dec
mov
dec
xchg
jecxz
mov
inc
xchg
sbb
ja
sbb
shrd
outsl
xor
lods
enter
and
dec
lea
repnz
pushf
sti
dec
xchg
push
mov
icebp
xor
repnz
mov
sub
pop
pop
out
ljmp
sub
xchg
fiaddl
das
jnp
into
adc
jecxz
inc
xchg
mov
adc
xchg
cmp
jo
push
mov
cmp
aam
outsl
inc
adc
push
xchg
lds
and
lret
jno
in
aas
sub
push
mov
inc
sbb
out
jae
call
fidivrs
fs
sbb
mov
movq
sub
nop
in
test
mov
out
test
pop
mov
mov
lahf
and
loope
hlt
pop
movsl
jno
cld
std
mov
and
sbb
mov
inc
sub
faddl
call
out
inc
sbbl
mov
sub
ja
cmp
ja
mov
test
out
jl
xchg
and
sti
xchg
dec
cmc
cmp
jno
jecxz,pt
sub
xchg
mov
xchg
sub
icebp
insb
bound
loopne
dec
fwait
idivb
ja
or
xchg
insl
in
insb
ds
mov
scas
loopne
sti
imul
int3
sub
test
dec
je
cmp
and
adc
xchg
inc
imul
mov
push
or
cld
or
sbb
and
je
fs
pushf
cmpsl
psubsb
inc
xor
repnz
movsb
test
sub
paddq
leave
add
jb
or
bsf
mov
cmpsb
mov
dec
xchg
inc
cltd
fs
mov
lds
jo
cmp
cmp
lret
pop
daa
sbb
into
inc
mov
cmp
fistpll
dec
mov
dec
rcrl
lods
and
or
cmpsl
stos
jecxz
xor
push
fcmovb
cmp
xor
xor
lods
adc
add
outsl
mov
jae
cli
cmpsl
mov
jno
fsts
push
cmp
stos
bound
xor
leave
mov
pop
mov
aad
or
mov
scas
or
mov
inc
std
in
rcll
test
mov
jns
fs
xchg
xchg
decb
add
pop
bound
sub
enter
imul
je
mov
bound
scas
jle
pusha
cwtl
sbbb
jno
mov
addr16
adc
pop
mov
subl
xor
jne
in
inc
and
pop
cmp
jmp
or
cmp
subb
rcr
orb
jne
xor
inc
push
daa
jne
xchg
and
in
add
stos
mov
sbb
and
mov
stc
inc
pop
sbb
sub
pop
jmp
cmpsl
mov
jne
jmp
sub
pop
and
push
sbb
mov
insb
jmp
test
and
mov
adc
xchg
xchg
xor
fdivl
addr16
adc
jne
imul
shlb
push
lcall
xor
and
xchg
fwait
and
xchg
sbb
insl
cld
push
add
mov
ret
pop
out
mov
repnz
sbb
fs
mov
scas
pushf
imul
mov
mov
mov
movsb
sub
or
dec
and
fcoms
gs
enter
xchg
stos
dec
inc
jl
popf
dec
pop
and
ja
sub
mov
mov
pop
sbb
xchg
add
adc
push
jecxz
scas
push
divb
popa
mov
jge
pop
and
mov
das
imull
out
and
dec
popf
pushf
xorps
push
adc
aam
faddl
jg
inc
sub
dec
cmpsb
negb
or
outsb
sahf
cmp
mov
outsl
jno
sarl
repnz
inc
mov
jae
rclb
or
cmp
push
adc
in
add
xor
test
sbb
sbb
jle
cmpsb
sbb
or
adc
xchg
add
xchg
in
notb
jecxz
mov
add
inc
fidivs
mov
repnz
andnps
or
pop
mov
outsl
fimuls
hlt
leave
push
xlat
jno
xchg
push
xor
mov
jl
shrl
insb
movl
mov
sbb
lret
cwtl
repnz
and
int
jge
aam
pop
jp
js
mov
add
add
add
jl
jno
pop
or
lcall
negl
mov
or
add
inc
std
flds
test
mov
and
orl
and
mov
sbbb
test
outsb
push
pop
push
xor
mov
mov
adc
pusha
xorb
mov
repz
je
pop
dec
sub
cmpsb
lret
test
adc
pushl
cmp
jae
mov
in
jp
mov
and
push
stc
je
rcrl
fldcw
ret
mov
dec
frstor
jmp
and
mov
sahf
mov
xchg
push
lea
test
lea
sbb
xchg
pop
and
test
ret
out
das
adc
pop
outsl
pushf
pop
inc
push
fdivrs
fiaddl
shrl
int3
ret
xchg
ret
flds
xchg
in
cmc
jns
xchg
les
inc
xchg
mov
mov
and
ret
pop
add
xchg
je
push
inc
push
mov
and
addr16
cmp
push
imulb
dec
stos
jne
add
cwtl
leave
out
dec
or
inc
idivb
stos
cwtl
ficomps
rcr
jne
push
xor
adc
cmp
outsb
ret
sbb
inc
cmpsl
mov
repnz
xchg
mov
mov
cmc
daa
mov
sbb
repnz
in
imul
jmp
push
adc
insl
jmp
sub
and
sahf
mov
mov
test
xchg
pop
cmp
push
adc
imul
fs
imul
ss
mov
push
lds
rclb
neg
insb
mov
fs
sub
arpl
loopne
test
xchg
lods
pop
cmp
ret
into
addr16
push
adc
push
xchg
inc
dec
xchg
mov
pop
les
jl
push
sub
dec
pop
mov
cmp
imul
outsl
mov
mov
sub
stc
fildll
jns
sub
inc
fnstcw
dec
pop
aam
dec
mov
in
lods
adc
cmp
push
inc
cld
jmp
mov
push
pop
decb
or
aam
subb
add
xor
test
dec
xchg
outsb
fdivrl
mov
xor
movsl
loope
cmc
notb
enter
es
repz
mov
pop
cs
dec
shll
fdivl
in
mov
js
pop
push
fwait
pop
std
sbb
hlt
imul
lods
add
xchg
out
call
lret
pushf
pop
pop
pushf
repnz
mov
imul
adc
mov
push
sub
add
out
enter
sub
xor
shr
xchg
cmp
mov
adc
ljmp
fiaddl
xchg
sub
mov
test
push
cmp
fisubs
outsb
sub
xor
pop
cwtl
ret
cmpsb
scas
sti
es
mov
mov
mov
sbb
ljmp
push
nop
leave
adc
cmovge
pop
mov
icebp
sub
jo
test
loopne
in
inc
fwait
pop
and
xchg
int
mov
adc
mov
scas
out
pop
sbb
lahf
fisubrl
cmp
scas
fldt
int
out
bound
xchg
mov
addr16
adc
mov
jb
xchg
pop
sti
xor
imul
mov
clc
xchg
adc
lods
and
lds
xchg
aaa
int3
ficoml
lods
adcb
mov
jmp
in
mov
push
out
scas
and
and
out
pop
enter
xor
push
inc
movsb
lret
data16
and
lds
scas
jbe
call
dec
in
lahf
pop
test
ficomps
mov
loop
mov
roll
cmp
popf
jb
cwtl
int3
mov
jg
mov
and
xorb
ret
mov
add
jne
inc
rclb
inc
xor
rcll
aaa
cli
int
cmpsb
shlb
cmpsl
fadds
inc
loope
xchg
or
xor
mov
notb
roll
out
cmp
pop
pop
push
adc
mov
sbb
cld
sarb
and
scas
mov
fdivl
rorb
pop
pushf
dec
movsb
xchg
imull
fcomi
fiadds
icebp
adc
mov
inc
pusha
hlt
aam
inc
cmpl
cmpsl
cmp
ss
cli
sbb
sbb
aam
jmp
sub
ja
mov
sbb
cmpsb
cmp
jns
sbb
xchg
mov
xor
add
mov
cltd
sub
stc
adc
imul
dec
push
imul
in
xor
aaa
xchg
pop
xchg
xchg
sbb
pop
xor
minps
dec
pop
dec
push
das
and
repnz
mov
mov
xor
adc
jle
ljmp
mov
stos
cmp
mov
cmp
pushf
scas
inc
int
mov
or
push
stos
sahf
mov
mov
pop
int3
sub
push
dec
dec
or
lods
add
imul
jae
mov
mov
je
cli
inc
lock
pusha
inc
shl
fiadds
mov
je
jmp
lret
sbb
jbe
xlat
addr16
leave
sub
rcrb
mov
cmp
xor
pop
dec
jae
mov
shrb
pop
xor
enter
cwtl
movsl
add
xor
dec
out
ret
ret
push
xchg
stos
in
mov
ret
dec
aas
xchg
jns
ljmp
xchg
push
stc
cmpsl
adc
fstl
sub
pop
and
add
dec
int3
mov
mov
and
push
jns
scas
in
in
jb
cmp
mov
les
adc
mov
je
and
sti
sub
sti
inc
cmp
xorb
ds
pop
mov
sbb
insb
lock
push
pop
adc
movsl
dec
and
stos
adc
mov
shl
inc
insb
sarl
es
mov
jne
repz
push
aas
shlb
stc
sub
rcrb
cltd
mov
lock
clc
movsb
cmp
mov
ret
fs
xor
dec
outsl
fwait
mov
pushl
lret
outsl
sti
aad
xor
ja
stos
xorps
cmp
fdiv
mov
pop
fsubs
xchg
test
sbb
push
pop
fwait
ds
add
fstpl
aas
inc
cmp
dec
out
repnz
outsb
insl
out
std
loopne
sub
in
adc
shll
pop
shl
inc
and
xchg
pop
int3
fmuls
into
mov
test
pushf
and
std
inc
xor
icebp
repz
pop
adc
jp
sbb
adc
sbb
in
or
addl
xchg
inc
jmp
dec
mov
jle
rcll
mov
jnp
sbb
sub
js
sahf
xlat
inc
in
mov
insl
repz
mov
add
cwtl
flds
shrb
xchg
shl
ja
add
pop
testb
jmp
test
outsl
lea
inc
stos
push
adc
xchg
lods
push
into
inc
fwait
enter
clc
cmp
lds
data16
dec
mov
sahf
sub
mov
mov
pop
sub
push
inc
out
or
out
pop
popf
mov
das
jmp
xor
dec
aaa
sub
hlt
mov
fwait
lods
push
movsb
jae
mov
sbb
dec
fimull
test
nop
imul
in
lock
in
mov
mov
jp
pop
push
popf
add
pop
decb
iret
and
mov
inc
ret
push
sub
repz
imul
inc
aaa
mov
dec
aam
cmp
sarb
cs
mov
movsl
jbe
out
fisubrl
sti
shl
dec
pop
aaa
mov
loope
add
scas
mov
sbb
rorl
add
jmp
xchg
sub
push
pushf
cmp
pop
lods
or
loopne
mov
or
addl
loope
rolb
pop
dec
jb
pop
sarb
loop
fs
into
cltd
iret
stos
out
mov
sub
fldt
ret
jg
scas
add
inc
push
stc
push
inc
jmp
adc
shll
cmp
out
adc
cvtsd2ss
push
mov
sbb
jbe
sub
dec
mov
jg
ljmp
jae
das
jbe
pop
pushf
mov
pusha
pop
xor
inc
in
pusha
xor
daa
pop
sbb
mov
add
cli
rolw
pop
fsubs
add
adc
aam
add
lods
jae
jl
movsb
out
cmp
out
mov
fcompl
cmp
imull
loopne
outsb
out
xor
pop
pop
fiaddl
scas
inc
adc
daa
aas
mov
cmp
dec
aas
fwait
add
xlat
in
popa
std
pop
pop
jns
pop
movsl
sub
in
and
cmp
mov
fwait
adc
pop
outsl
pop
pop
push
push
xchg
and
in
mov
jb
fildl
sub
out
rol
out
sarb
xor
push
sbb
cs
cmpsl
adc
push
push
mov
mov
pop
xchg
imul
sarl
add
or
icebp
sbb
mov
das
mov
sub
lcall
jecxz
outsl
jp
xlat
fbld
and
hlt
jl
cmpsl
ja
movsb
lret
out
mov
push
or
call
aas
and
idivb
pusha
shlb
out
lea
cmp
bound
pop
and
sbb
out
and
pop
jns
pushf
dec
pop
daa
jnp
into
push
jg
test
add
push
and
mov
loopne
lcall
pop
popf
cmp
jnp
pop
mov
jl
loope
sub
jb
cmpsl
nop
cmp
xor
fmull
ud1
or
mov
jmp
jg
pop
in
xor
inc
inc
or
ret
mov
iret
dec
and
lock
mov
jle
mov
pop
or
dec
enter
push
das
lcall
xor
xchg
stos
sbb
mov
inc
ds
in
ficomps
sbb
xor
imul
xchg
xchg
inc
lea
xor
and
add
enter
icebp
mov
testb
inc
xor
jle
pop
clc
mov
shll
mov
gs
dec
or
or
or
in
daa
mov
jbe
insb
add
pop
andl
orb
rolb
inc
xchg
xor
push
sarl
sbbb
dec
pop
pop
pop
jmp
mov
nop
pop
lds
pop
dec
fidivrl
cmp
xchg
adc
ss
in
clc
cmc
movsl
out
mov
call
fwait
push
jo
xchg
sub
sub
add
xchg
mov
sbb
cmpsb
cmpsl
cwtl
jl
jmp
sbb
insl
nop
jl
pop
and
imul
int
es
and
test
xchg
enter
popa
dec
les
sbb
movsb
fisttpll
fndisi(8087
ret
mov
aad
pop
fwait
adc
int3
scas
or
loop
push
xchg
inc
jmp
jno
loop
pushf
jecxz
or
jo,pt
add
cmp
mov
jae
je
out
in
or
jns
add
jge
or
pusha
inc
cmc
mov
push
js
repz
inc
push
mov
pop
and
xchg
push
mov
push
leave
movsb
or
sub
das
sub
movsb
adc
es
icebp
mov
lds
adc
ss
divl
and
nop
dec
mov
mov
fwait
inc
imul
mov
sub
jns
sbb
orb
and
sbb
xchg
xorl
cs
pop
popf
mov
mov
mov
push
aam
mov
pop
dec
mov
or
rcll
test
xor
je
adc
stos
mov
mov
xchg
repz
test
mov
lret
xchg
insb
adc
nop
pop
sahf
xor
cwtl
push
lds
pop
test
scas
ss
cmc
cmpsb
outsl
insb
mov
sbb
pop
imul
scas
mov
jb
mov
cmpsb
pop
hlt
cltd
dec
sahf
adc
in
add
jae
pop
push
push
imul
mov
shl
outsb
scas
outsl
test
jecxz
jp
or
mov
ljmp
testl
into
out
jp
add
mov
das
sbb
add
mov
mov
jb
inc
cwtl
add
fsubrl
insb
nop
sbb
enter
or
or
mov
jmp
xchg
rcrb
mov
out
jge
jmp
and
shlb
cld
or
mov
sarl
cmp
cmc
xchg
aam
xchg
sub
outsl
jmp
sub
cmp
jae
test
push
lds
sbb
adc
outsl
les
and
movsb
shrb
inc
inc
ret
adc
pop
ficoml
mov
sub
cltd
inc
std
and
ja
jne
mov
pop
sub
pop
adc
sbb
cld
test
jmp
or
ljmp
add
sbb
pop
into
out
adc
lcall
dec
and
arpl
outsb
mov
jge
bound
add
imul
or
enter
rcrl
cmp
pop
cmpsl
stos
jae
rcll
scas
cmp
adc
pop
xor
lods
dec
push
popa
jge
shrb
jae
pop
xor
in
mov
int
sbb
js
mov
and
and
shll
call
stos
iret
out
jb
into
mov
xor
push
xor
sbb
lret
mov
adc
pop
push
pop
mov
lret
pushf
leave
cld
pop
in
xchg
into
fnstsw
stos
inc
jo
add
clc
out
rolb
repnz
into
jae
or
and
mov
mov
fidivl
lds
mov
pop
test
ret
xchg
repnz
xorb
sub
iret
pop
jmp
into
dec
ss
imul
pop
jbe
pop
dec
movsl
mov
xchg
aad
call
pushf
push
sub
rorb
int3
jae
mov
xchg
lcall
and
and
cmp
cwtl
dec
enter
sub
lods
mov
fidivl
pop
mov
add
jnp
stos
rol
daa
movsl
adc
sbb
jmp
pop
das
fwait
xor
ja,pt
cmpsl
faddp
add
mov
jge
ss
jb
mov
lods
daa
push
scas
js
ds
roll
jg
mov
cmpsl
inc
cmp
or
add
test
dec
mov
fsubrs
pop
aaa
push
ja
jns
cmp
adc
jg
xlat
push
mov
adc
mov
ljmp
pusha
add
mov
lock
cmp
cld
xor
enter
and
test
xlat
sub
out
imul
ljmp
loopne
add
fimull
popa
and
leave
in
jo
xchg
ficomps
and
jbe
rcrb
fildll
jecxz
jl
xchg
sti
ss
das
or
scas
aas
andl
sub
and
cmp
dec
sub
sysret
xchg
out
sub
popa
inc
and
xchg
pushl
jb
mov
pop
or
cld
fwait
cmp
pop
push
mov
sub
stos
and
xor
pop
sub
jne
jge
cs
dec
cmp
push
in
les
seta
push
or
and
aam
es
add
inc
cltd
fcmovnbe
rorb
das
push
mov
loop
mov
cltd
mov
ja
sub
adc
dec
or
xchg
or
push
std
push
fimull
sub
inc
pop
push
pop
pop
inc
repnz
les
ljmp
rcl
cmpsl
sarb
mov
hlt
dec
mov
stos
lock
sub
xchg
cs
pop
xlat
push
stos
cmc
cmp
pop
cmp
pop
ja
sub
pop
das
out
cmp
test
sbb
icebp
mov
neg
push
push
imul
jle
aad
js
cli
bound
loop
mov
pop
cmc
cmpb
sbb
or
std
dec
jecxz
rcl
dec
mov
aam
sahf
rorb
adcb
jmp
sahf
and
lret
adc
icebp
insl
mov
lret
testl
pop
pop
adc
outsb
bound
fcos
mov
dec
aas
test
xor
mov
jp
jge
mov
xorb
inc
es
rcl
fstp
arpl
cli
stos
mov
and
pop
aam
aaa
sbb
jp
stos
loopne
fldt
cmp
insb
loopne
stc
mov
xchg
cmpsl
push
shll
jmp
adc
add
call
cmp
jbe
inc
gs
jge
out
mov
jo
jmp
loopne
mov
sub
repz
mov
rcrl
mov
rcl
fsubrl
inc
jl
rolb
imul
outsb
xor
sub
jg
or
fs
inc
jmp
xlat
out
push
scas
fmul
sub
or
imul
out
decl
aaa
mov
xor
sbb
mov
jge
sub
jp
mov
add
and
je
aad
sbb
pop
or
push
pop
cwtl
mov
mov
or
mov
roll
dec
inc
mov
jecxz
xchg
sbb
icebp
mov
das
loope
lahf
test
sub
stos
push
sub
sbb
ret
cld
push
or
lods
pop
xchg
arpl
rolb
inc
pop
or
sub
mov
or
push
push
push
xor
adc
xchg
dec
cmpsb
push
lods
dec
xor
xor
xlat
inc
mov
push
jmp
stc
xor
ret
movsb
lds
pop
pop
outsl
hlt
addr16
xor
inc
cmp
mov
loop
mov
add
jns
out
filds
jbe
jno
and
inc
xor
push
ret
sub
add
test
cmp
jg
or
lahf
les
pop
cmpsl
and
fsubl
mov
popl
jbe
pop
and
pop
out
adc
push
aam
jl
pop
mov
jae
push
scas
cs
mov
add
cltd
mov
mov
jg
adc
pop
xchg
fdivs
aaa
aam
jge
addr16
pop
cmp
jb
movsl
scas
cmp
and
stos
out
out
dec
cmpsb
mov
and
sti
scas
repz
jbe
sbb
std
mov
das
popf
outsl
inc
das
lahf
push
and
inc
mov
and
mov
mov
inc
sti
cmpsb
sbb
push
pop
adc
xor
mov
inc
fld
out
push
ret
gs
push
mov
mov
add
inc
or
and
dec
in
repnz
out
dec
push
xorl
aad
nop
jmp
popa
sub
in
cmp
adc
jb
cmpsl
std
push
insb
sbb
or
jns
mov
inc
xor
push
sub
sbb
sub
cmpsb
cld
inc
add
movsb
add
ljmp
gs
pop
jmp
push
inc
xchg
mov
or
mov
push
xchg
dec
shrb
lahf
xchg
sub
in
pop
jle
lret
mov
aam
sbb
mov
inc
lahf
movsl
stos
cs
jns
and
outsb
lahf
bound
aam
and
mov
cmp
jmp
icebp
jmp
ljmp
loope
lcall
cwtl
jb
lret
fcmovnbe
xchg
sarl
movsb
ds
js
jl
sbb
and
xchg
add
js
call
mov
mov
dec
mulb
mov
mov
sbb
push
xor
and
cs
movsl
flds
divb
inc
ret
or
mov
adc
jmp
xor
aas
pop
rolb
movsl
js
sub
inc
call
neg
jnp
push
lock
shl
cld
dec
add
pop
divl
pop
cwtl
ss
daa
into
in
leave
sbb
in
dec
add
in
sub
loopne
addr16
movsl
into
xor
test
inc
es
mov
cwtl
paddw
mov
mov
fldenv
aas
cli
negl
xchg
dec
sbbl
in
adc
sarb
and
push
adc
in
xor
mov
push
or
pop
adc
or
or
sbb
es
imul
nop
jnp
sbb
adc
mov
cmp
mov
jl
push
pop
adc
les
pop
std
pop
mov
xor
call
dec
sarl
dec
push
movb
es
fimull
xchg
adc
dec
mov
ficoml
jge
sub
gs
shl
popf
xor
sub
outsb
mulb
inc
adcl
mov
push
daa
lahf
ret
lret
inc
sbb
shr
gs
mov
js
mov
jns
cmp
cli
xchg
mov
jnp
cmp
add
mov
mov
or
add
fists
mul
push
scas
add
xlat
scas
icebp
lods
push
push
ret
lahf
stc
std
lret
rcl
lock
lcall
popa
mov
cmp
push
sbb
orb
test
dec
adc
or
push
jg
dec
sub
jbe
lods
push
xor
pop
adc
shlb
cmp
push
lock
dec
int3
mov
jge
jno
mov
cwtl
arpl
push
xchg
and
int3
call
pcmpeqb
mov
frstor
fldenv
or
xchg
pop
xchg
shrb
dec
lret
in
lds
and
pop
mov
add
and
jge
mov
push
push
aad
mov
ficompl
mov
sbb
jno
test
lcall
out
push
fcmovnbe
movsl
ss
fst
mov
adc
loope
cmp
pop
aam
cli
daa
ret
sahf
es
jle
lods
mov
xor
adc
loope
mov
cltd
or
roll
aas
xor
addr16
test
jne
and
or
xor
repz
xchg
and
rorl
inc
and
gs
and
sti
adc
lahf
ret
test
pop
or
add
or
inc
clc
add
jl
xor
add
mov
and
pop
or
mov
movsb
xchg
pop
mov
mov
sti
pop
xor
ds
adc
mov
mov
or
push
mov
cltd
sbb
jecxz
xor
cmp
add
inc
mov
mov
insl
add
mov
in
push
jge
jo
popl
subl
push
pop
xchg
dec
rorb
cli
cmpl
xchg
sbb
cmp
outsl
sub
out
sub
lds
into
xor
cmpl
nop
cmc
nop
dec
cmp
sub
loope
je
pop
ljmp
dec
test
mov
loop
cmpsb
pop
jne
clc
adc
sub
xchg
fldt
sbb
movsb
pushf
ret
stos
mov
dec
cld
mov
pop
sub
mov
adc
ljmp
fldl
jl
xor
jbe
push
cmp
and
dec
stc
movb
sub
lock
sub
shrl
lahf
and
lea
jp
pop
popf
sar
mov
mov
dec
dec
inc
mov
inc
aam
sbb
dec
dec
mov
xchg
and
insb
and
js
rclb
lret
sbb
mov
cmpsb
icebp
jb
xchg
mov
pop
data16
xchg
ret
shlb
imul
pusha
enter
mov
pop
icebp
pop
mov
aam
iret
push
dec
sub
mov
stos
dec
and
pop
inc
xor
mov
and
jg
push
shl
and
xchg
or
mov
fimuls
cmc
xchg
gs
jle
cli
sti
cmpsb
cmpsb
jae
dec
inc
jmp
or
ret
mov
aad
jno
lea
aas
push
pop
mov
mov
push
inc
cltd
call
pusha
sbb
aam
repz
dec
dec
leave
movl
jb
sbb
pop
inc
cli
xchg
sbb
xor
cwtd
mov
in
sahf
call
sbb
fwait
push
adc
fstl
add
incb
fcomps
jne
iret
sbb
and
xchg
shl
add
in
pushf
inc
jmp
rcr
cmpb
pop
pop
gs
pop
into
jge
inc
in
loope
dec
test
loopne
push
adc
shrb
mov
pusha
mov
pop
js
sbb
test
cmp
jge
jl
push
loope
dec
gs
movsb
sub
in
add
mov
ret
fldt
pop
mov
idivb
push
ss
test
jbe
xor
cmpsb
idivb
xor
adc
xor
dec
jne
outsb
testb
jnp
rcr
pushf
sub
mov
xor
daa
mov
ds
cwtl
mov
mov
jns
outsl
mov
sbb
and
push
lods
ja
sbb
lret
xchg
sub
shlb
push
pop
out
mov
adc
mov
inc
cli
lods
add
repz
sbb
shll
mov
ret
dec
inc
cmp
repnz
shll
cmp
in
dec
or
mov
pop
sbb
ds
ds
sbb
fmuls
cltd
inc
imul
mov
sbb
dec
imul
pop
aas
sbb
xor
jo
sub
into
sbb
mov
aaa
sub
pop
sar
test
add
dec
lret
xorl
jnp
mov
xchg
pop
pop
xor
mov
cs
mov
pop
or
cltd
push
cli
pop
fsubp
out
test
inc
test
hlt
pop
shlb
push
jmp
mov
add
dec
sbb
in
jb
pop
clc
dec
ljmp
int3
sub
pushf
imul
and
sub
ja
cmc
lahf
popf
xchg
mov
ss
jl
cltd
and
imul
in
or
sbb
repnz
push
mov
lcall
push
add
in
adcl
inc
xor
mov
jecxz
sbb
repnz
mov
adc
subb
sbb
xlat
daa
dec
stc
jno
adc
mov
sub
sub
loopne
movsl
cmp
inc
cmp
dec
js
lcall
cmp
pop
xlat
jp
mov
push
gs
andl
cmp
or
lahf
push
mov
cs
daa
xchg
cli
fwait
jb
pop
mov
test
or
fidivrs
out
fwait
ds
flds
inc
lods
xchg
ljmp
xor
imul
pop
mov
aas
shlb
or
in
mov
dec
fcomp
add
pop
sbb
enter
pop
mull
or
xchg
or
pop
push
imul
test
arpl
mov
xchg
jns
xor
inc
es
das
push
iret
loop
pop
lock
decb
xchg
fsubl
mov
loope
in
xchg
add
jg
dec
pop
jl
out
jl
pop
sub
mov
sti
adc
dec
mov
insl
or
lock
mov
mov
push
or
inc
std
inc
stos
ds
cmp
xchg
cmp
test
pop
mov
mov
and
and
cmp
mov
shrb
sub
dec
xor
and
jo
adc
lcall
xchg
lret
hlt
fdivs
pusha
mov
cmp
cltd
jl
repnz
fmull
sbbl
sub
pop
sbb
das
arpl
inc
repz
fcom
or
pushf
into
inc
inc
mov
pop
lods
add
popf
and
dec
pop
cmp
mov
js
jge
and
push
jno
arpl
jne
in
imul
in
inc
dec
lahf
pop
adc
xlat
pop
fwait
adc
scas
or
cmp
jo
jmp
add
jge
test
mov
enter
out
add
bound
sub
cmp
sbb
andl
popf
jecxz
sahf
mov
xlat
mov
push
fildll
sar
push
and
mov
xor
mov
stc
idivl
mov
or
ds
lahf
or
pop
sbb
mov
mov
outsl
and
ss
lret
popa
loope
js
and
add
fdivp
scas
fldl
into
lret
mov
sbb
mov
sbb
push
jg
loop
push
les
xchg
ret
test
je
add
lcall
outsl
mov
mov
mov
movsb
icebp
or
dec
cmc
mov
adc
pop
sbb
movsb
lock
push
add
dec
daa
pop
jg
and
iret
js
sbbl
dec
adc
into
fstl
repz
add
mov
jecxz
iret
imul
js
je
jae
imul
in
push
ss
cmp
pop
es
lea
and
push
add
ss
mov
lahf
or
jp
out
pop
iret
push
movsb
sbb
mov
mov
jne
in
data16
fsubl
xor
cld
sbb
sbb
jno
xchg
xchg
cmpsl
inc
aas
dec
sub
lods
push
addl
sbb
cmpb
dec
stos
xchg
xor
hlt
xchg
ds
xchg
mov
fs
jne
divb
out
in
cmpsb
jnp
dec
cld
out
pop
cmc
or
pop
mov
ljmp
jecxz
xor
dec
movsl
pop
pop
test
out
movsb
mov
xor
sbb
add
fdivl
xor
pusha
jg
outsl
fwait
mov
ss
sub
mov
outsb
xor
sub
clc
out
dec
push
or
jmp
xor
and
sbb
gs
rolb
inc
ja
jo
daa
es
sub
repnz
and
xor
scas
xorl
dec
and
cmp
jecxz
push
pusha
scas
push
in
jge
inc
lds
cmp
adc
inc
fcmovb
popa
daa
push
cmpsb
cli
ja
push
inc
or
jle
dec
xchg
fnstenv
pushf
je
test
scas
pushf
test
mov
fldl
mov
jp
cmp
imul
fldcw
les
mov
or
leave
xchg
imul
adc
push
sbb
mov
pop
lret
stos
addl
cmc
shll
adc
in
bound
mov
jno
push
mov
sub
lods
mov
mov
push
gs
addr16
bnd
aad
jecxz
xchg
cmc
test
push
inc
pusha
out
aaa
pmullw
or
push
inc
and
lret
shll
push
and
js
stos
out
fisubs
dec
or
mull
pop
push
sub
sarb
icebp
aad
cmc
push
sub
daa
xor
or
rorb
mov
repnz
jno
in
add
xor
add
test
enter
add
adc
cmp
aad
dec
cmp
scas
push
push
jns
mov
cs
ja
and
mov
jns
and
push
imul
movsb
cmpsb
fbld
fnstcw
pop
sub
push
inc
jmp
adc
xor
loop
cmp
test
gs
pop
fs
add
sub
push
gs
fs
xchg
into
imul
imul
popa
mov
inc
idiv
mov
pop
jae
xchg
mov
icebp
xchg
and
out
add
mov
subb
fnstsw
add
dec
mov
iret
or
out
sarl
sub
push
lods
mov
and
gs
dec
push
lods
out
or
mov
and
pop
gs
push
add
and
push
dec
call
inc
jp
add
jb
push
mov
add
adc
xorb
or
cli
cmp
push
xchg
int3
shrl
mov
inc
jnp
dec
cmp
cmc
daa
cmp
sub
fiadds
xlat
pop
movsl
cs
lret
push
cmp
insb
pop
fwait
into
imul
sub
and
pop
rorl
jb
cld
je
push
fcmovu
in
push
adc
mov
cld
or
pop
mov
daa
popf
in
not
popa
sarl
lock
adc
dec
add
jle
pop
mov
xchg
sbb
sbb
insb
or
pushf
mov
adcl
sub
push
ljmp
popf
iret
divl
jne
mov
add
call
add
jle
or
sub
mov
mov
and
add
fstpl
xor
fmuls
ficomps
lahf
push
push
cwtl
sub
sbb
mov
js
mov
adc
stos
mov
cmp
sti
mov
scas
imul
shr
fbld
push
xor
adc
out
xchg
sub
xchg
jg
fidivs
and
xchg
call
popf
mov
cli
insl
aam
stc
rcrl
jne
cmp
pop
rcrl
jmp
add
dec
nop
sbb
stc
mov
pop
dec
inc
sahf
and
jg
sub
mov
sbb
sti
push
mov
push
inc
jmp
xchg
enter
adc
in
pop
ret
mov
insb
xlat
orl
cld
sti
pop
sbb
jge
jbe
jecxz
aam
push
lcall
mov
xor
adc
dec
push
inc
or
les
clc
out
add
sbb
popa
cmc
jl
cmpsb
xor
test
dec
push
stos
int
adc
add
pop
ja
jp
fnstcw
test
data16
imul
mov
sbb
fcomip
jge
test
aad
jecxz
das
inc
gs
addr16
divb
inc
add
les
inc
mov
or
jo
inc
loop
and
jne
out
and
cli
dec
loopne
pushl
inc
repnz
dec
sub
mov
mov
cmp
xor
shrb
cwtl
out
ret
push
bound
inc
bound
loopne
jecxz
stos
imul
fistl
stc
ffree
mov
inc
sbb
jo
jp
in
fidivrs
fmuls
and
mov
mov
jb
jmp
fs
mov
cmp
mov
sar
or
lahf
cmc
jmp
insl
hlt
jbe
int
je
adc
push
into
add
cmpsb
dec
push
roll
fcoms
jl
or
aaa
rolb
jg
sahf
lods
into
cmp
push
inc
mov
sbb
stos
xor
mov
jmp
inc
das
orb
and
add
out
xchg
jmp
xchg
aas
mov
insl
xchg
aas
sub
dec
xor
push
mov
mov
stos
out
lcall
arpl
pop
add
sub
ret
push
and
movsl
mov
inc
leave
inc
arpl
xor
jmp
leave
enter
js
push
jbe
cmpsb
in
je
dec
push
push
inc
test
pop
jmp
jb
adc
mov
int
sbb
xlat
xor
xor
cmp
movsb
pop
inc
divl
xor
rol
inc
std
int
mov
cmp
sbb
dec
add
inc
sub
rcrl
gs
sub
jmp
mov
push
jle
xchg
mov
arpl
cwtl
add
lcall
loop
das
sahf
ret
fcomip
mov
in
xorl
gs
jge
test
dec
inc
and
imul
stc
icebp
int
add
test
mov
popw
scas
add
les
adc
sbb
jg
dec
or
add
add
imul
mov
cmp
push
into
test
clc
rorb
xor
call
inc
xchg
call
in
mov
vcvtss2si
out
xor
jg
imul
cmc
sub
cmp
inc
jle
out
aad
push
mov
xchg
fsts
hlt
push
push
mov
insl
stc
mov
sbb
mov
ja
cmp
inc
sub
leave
stos
jnp
pusha
aad
sarl
das
push
sbb
stos
sbb
out
inc
adcl
icebp
psllw
mov
sbb
loope
leave
mov
mov
jecxz
mov
pop
or
dec
ret
jmp
adc
call
xchg
shlb
jle
and
sub
or
push
jecxz
sub
lds
cmp
lcall
cmpsb
push
xlat
in
aad
icebp
addb
mov
pop
ds
inc
test
sbb
xor
test
lahf
pop
sarl
and
push
call
or
cmpsb
fnstsw
push
mov
dec
enter
xor
mov
divb
sbb
push
mov
sbb
add
cmovb
and
xchg
xchg
xor
inc
call
inc
xchg
cmp
daa
sub
mov
int3
lahf
andb
pop
mov
xchg
sbb
subl
loope
push
jg
push
add
mov
xor
inc
movups
icebp
ds
sbb
adc
inc
push
stc
sub
fnstsw
testb
in
mov
xor
movsl
jmp
aad
mov
in
shlb
dec
sahf
mov
subl
sbb
cmp
in
sub
xor
jne
dec
push
mov
or
ret
dec
add
sbb
aas
js
push
mov
mov
add
inc
push
xor
cmp
xor
aam
stos
lods
mov
addb
mov
pop
andb
lret
xor
mov
sub
pop
pusha
sarb
aaa
or
xchg
cs
gs
add
add
jecxz
and
jle
sub
pop
dec
imul
sub
cmp
fwait
jmp
cmp
and
stos
mov
popw
aad
sub
jl
pop
jle
dec
fnsave
sub
lds
push
cld
sub
xchg
jns
aas
sub
cwtl
fcoms
daa
imul
and
inc
xor
sar
push
cli
sarb
ror
jle
and
cld
sub
dec
jecxz
cmpl
shlb
outsl
xor
inc
rclb
fwait
mov
sbb
lret
mov
push
inc
mov
jnp
mov
out
filds
test
pop
add
rorb
sti
ds
loop
push
lret
ja
cmp
and
test
xchg
call
cs
mov
out
lahf
xchg
es
nop
movsl
dec
or
daa
lods
aam
or
ds
inc
mov
pop
cmp
rcl
mov
lock
out
pop
shll
ljmp
lods
xchg
daa
outsb
aad
clc
lahf
les
mov
fdivrs
dec
push
mov
rcrb
sbb
pop
and
mov
jp
xlat
and
psubusw
enter
test
pop
dec
mov
mov
push
iret
cmp
sbb
daa
ds
je
hlt
sti
xchg
push
roll
idivb
outsl
lea
inc
test
ja
sbb
xor
add
seta
mov
lea
insl
imulb
push
adc
jl
fstps
sahf
aad
in
in
jnp
in
in
fimull
outsb
pushf
les
add
sarb
add
jge
cmp
mov
dec
fstpl
aad
aam
and
scas
int3
cmpsb
jnp
push
fcoms
mov
loope
mov
outsb
inc
mov
push
jnp
mov
jnp
pop
pusha
cmp
cs
negb
out
mov
mov
movb
cltd
mov
inc
push
push
outsl
movsb
imulb
in
cld
dec
adc
add
pushf
xor
or
loopne
loopne
sarl
icebp
roll
or
add
xchg
and
xchg
xor
xor
pop
test
cli
adc
pop
and
in
and
xchg
stc
shll
and
push
roll
sbb
arpl
sbb
out
push
mov
mov
mov
movsb
rorl
outsl
xor
out
lds
mov
stc
pushf
mov
ret
imul
addl
gs
inc
pushf
inc
inc
or
sub
xor
push
mov
inc
jle
orb
and
shrl
popa
mov
add
insb
xor
inc
push
shlb
rclb
imul
mov
or
mov
sub
jns
mov
and
and
dec
in
insb
cmp
or
imul
and
shlb
out
fidivs
cs
dec
dec
xchg
daa
cmpsl
das
aas
bound
mov
je
lahf
or
das
ret
lahf
shll
out
xchg
pop
add
fwait
mov
pop
pop
js
fstpt
mov
data16
test
mov
jl
inc
in
fdivrp
pop
les
add
xor
mov
addr16
cld
xchg
cmp
idiv
pop
movsl
sbb
mov
enter
dec
cs
enter
and
lcall
push
adc
ret
outsb
jecxz
sti
mov
repnz
sub
sub
adcb
int
cmp
adc
sbb
adc
inc
xor
in
sub
inc
dec
mov
aad
repz
fmuls
das
inc
test
or
jg
jle
sub
mull
mov
das
aaa
fsubrl
dec
inc
test
cmc
aaa
cmpsb
inc
loopne
dec
and
mulb
sti
lahf
dec
push
ljmp
inc
add
fs
jmp
out
push
scas
pushf
nop
scas
orb
jb
or
int3
adc
and
jmp
repz
mov
add
and
std
and
mov
cmp
pushf
movsb
jg
ror
js
cld
enter
jns
mov
dec
jecxz
dec
icebp
mov
add
pushf
std
jmp
loopne
push
fldl2e
int
insl
lds
and
sub
call
aam
sbbl
mov
cli
lds
push
ret
or
xchg
add
shlb
ret
pushf
jge
cmc
std
xchg
adc
ret
mov
pop
mov
and
xor
movb
in
aad
xchg
popl
dec
loope
xchg
mov
fwait
sbb
mov
dec
fnstsw
mov
loopne
jg
cmpsb
jno
mov
sbb
cmpsl
and
xor
mov
fdivr
xor
jbe
roll
test
push
xor
adc
ljmp
pop
cs
cmpsl
push
dec
mov
jmp
mov
popa
mov
push
mov
aam
ficoms
push
sub
adcb
xlat
nop
sbb
sbb
and
cmp
repz
clc
push
sub
mov
call
outsl
or
push
les
gs
xchg
xchg
adcb
leave
mov
mov
push
sub
fld
mov
outsl
pop
xlat
cmpsl
and
pop
adc
mulb
mov
jmp
jns
sahf
in
test
loopne
adc
jo
insb
pop
jnp
sbb
je
addr16
xor
mov
ss
iret
pop
mov
outsb
stos
out
icebp
sub
clc
outsb
lds
movsb
jbe
xchg
sbb
sub
push
cmp
xorb
xor
sti
jecxz
mov
and
mov
add
sbb
pop
mov
loop
jg
add
mov
addr16
cmp
popf
xor
pop
push
push
adc
add
sbb
pop
mov
sbb
push
js
pushf
icebp
das
gs
insb
dec
jnp
mov
mov
jb
into
ja
or
xchg
mov
cli
movsb
push
mov
inc
arpl
movsl
sub
push
xchg
mul
jmp
ljmp
out
scas
dec
loopne
or
cmp
xlat
mov
or
test
dec
add
sub
lcall
jl
push
pop
mov
push
push
lret
loop
pushf
lods
dec
or
jmp
out
in
add
mov
outsb
iret
xchg
popa
int3
jo
xchg
mov
in
dec
jl
fildll
xlat
mov
mov
call
sbb
mov
pop
and
mov
repz
mov
and
icebp
xor
adc
test
aaa
negb
cmpsb
jg
bound
push
jbe
outsb
xchg
ret
arpl
lret
mov
frstor
in
into
data16
adc
xchg
and
movsl
es
pop
or
inc
mov
lret
ret
dec
arpl
out
mov
imul
cltd
ja
jne
push
and
imul
out
mov
cld
sub
mov
test
insb
mov
nop
push
rolb
inc
push
std
roll
shrl
js
push
cs
sub
cmpsl
in
cmp
push
sub
adc
lods
orb
cld
pop
je
push
or
lds
xchg
push
nop
movsl
mov
cmp
xor
data16
sbb
ds
cmp
xor
das
repnz
dec
popa
int
scas
mov
repz
cmp
pushl
jge
paddw
sbb
imul
inc
scas
jmp
int
sahf
dec
mov
call
aad
pop
dec
mov
stos
pushf
clc
lock
rcr
out
imul
out
sub
mov
jle
xlat
lcall
dec
push
dec
add
leave
cmpsb
cmp
cmp
jg
and
jae
mov
add
mov
mov
mov
mov
pop
xchg
adc
int
divps
jbe
jmp
xchg
jnp
xor
hlt
add
push
lcall
or
cwtl
push
loope
ja
movsb
jno
sbb
scas
sbb
add
xor
in
es
outsl
icebp
push
xchg
pop
fsubs
ss
lds
sub
add
test
repnz
hlt
or
xchg
mov
mov
emms
sbb
out
in
aad
jbe
mov
fdivrl
mov
arpl
mov
movsb
jle
pop
repnz
xor
enter
aam
pop
push
or
pop
xchg
repz
enter
sub
into
xchg
out
mov
jbe
mov
insl
clc
scas
repnz
cmpsb
xor
cmpsb
mov
inc
gs
out
mov
push
inc
mov
jnp
insl
push
mov
sbb
sar
leave
push
xlat
cwtl
mov
cmp
dec
jns
lock
mov
dec
into
xor
cmc
add
xchg
lahf
dec
mov
add
cltd
cli
mov
icebp
push
aas
shl
cmp
inc
test
jne
cmp
into
cmpsl
scas
dec
jae
test
out
and
mov
push
fwait
jle
mov
push
rcrl
jae
xchg
imul
mov
rcrb
mov
cwtl
out
jb
sub
pop
mov
sbb
push
adc
neg
lcall
lret
and
lods
xchg
pop
xchg
in
xchg
pop
shr
dec
insl
xchg
pop
lret
sbb
pop
xor
repnz
out
addr16
je
jg
jmp
jno
fdiv
fnop
scas
jae
inc
push
mov
mov
test
stc
or
icebp
xor
xchg
popa
ja
cmp
push
divb
mov
push
add
jne
out
jns
add
fsubl
int3
sbb
push
movsl
mov
cmp
filds
stc
cmp
push
xchg
or
cmp
sub
mov
lea
xor
fchs
ret
pop
loopne
add
test
push
or
insl
add
jne
mov
mov
lods
push
aad
adc
lcall
fimull
loope
pusha
call
push
sub
xor
das
cmc
pop
data16
jmp
mov
insl
sub
shll
cli
jns
clc
les
lea
pop
mov
shr
jp
push
inc
or
pop
cmp
cwtl
shll
xor
insl
jo
push
popa
mov
push
lret
out
push
and
dec
add
mov
mov
inc
movsl
inc
out
in
mov
lds
std
mov
sahf
or
jmp
dec
loopne
outsb
fcomi
xlat
mov
in
hlt
adc
out
aad
mov
lea
push
gs
push
loopne
jecxz
add
mov
xchg
dec
push
pop
pop
stos
fs
out
adc
mov
nop
lea
fcoml
scas
push
pusha
or
nop
jns
mul
clc
mov
pop
xor
pop
arpl
mov
insl
out
sub
out
lods
pop
mov
push
jle
sbb
lods
mov
jmp
leave
ret
es
cltd
pop
sbb
mov
or
pop
xor
or
jnp
adc
mov
rcr
inc
fisubs
test
stc
sub
pop
xor
mov
xchg
repz
mov
cmp
ret
rorl
js
arpl
xor
testl
rcll
dec
xlat
test
insb
jecxz
out
clc
sub
xor
shll
mov
sbbl
lods
in
fisubl
mov
sub
shll
jae
fwait
pop
and
jbe
mov
cmpsl
mov
outsb
out
test
mov
imul
lcall
mov
je
jmp
outsl
inc
gs
xchg
lock
sarl
jl
cwtl
nop
sti
rcl
icebp
push
pop
sbb
sub
mov
mov
and
int
xchg
pop
ds
pop
sub
xor
adc
add
mov
add
add
and
inc
scas
sbbl
pop
inc
addr16
addr16
dec
inc
sbb
js
loopne
mov
dec
cmp
xor
cltd
mov
pop
out
mov
sbbl
mov
sbb
std
mov
xor
insb
pop
icebp
test
in
mov
int3
pop
xchg
or
and
mov
das
insl
loopne
popf
stos
inc
lret
adc
outsl
arpl
xchg
rcrl
xor
add
movsl
loopne
paddw
sub
cmpsl
inc
push
loop
test
and
sbb
push
repz
shll
cmpb
and
nop
bound
fwait
push
lods
mov
test
lahf
cmp
add
in
rep
jle
xchg
and
inc
out
sbb
cmp
ja
mov
jp
dec
mov
push
or
sub
sub
or
aas
aam
test
cltd
mov
aam
jb
jp
repz
jl
test
inc
dec
daa
in
sub
hlt
jns
push
pop
push
xor
lret
xor
adc
lock
xchg
cmp
sub
bnd
test
mov
and
int3
loop
imul
push
pop
ljmp
repz
testl
and
cld
cs
and
xor
sbb
aas
fwait
xchg
imul
jns
xchg
or
aaa
or
dec
and
hlt
int
jmp
stos
mov
xchg
hlt
pushl
adc
xchg
jmp
push
inc
push
and
mov
pop
mov
adc
test
adc
pop
mov
sub
dec
std
mov
pop
mov
push
xor
dec
sbb
movsb
inc
in
test
outsb
idivb
mov
dec
sub
mov
xchg
inc
test
adc
popa
insl
dec
addr16
push
sbb
out
inc
mov
and
cwtl
enter
push
mov
ljmp
sub
mov
dec
push
repnz
push
ret
and
addr16
xlat
popa
clc
daa
stos
dec
sub
in
xchg
inc
xor
cmp
push
sbb
cmpsb
mov
inc
test
mov
xchg
int
fwait
movl
in
adc
jp
iret
jmp
mov
xlat
shl
call
mov
mov
stos
rol
lcall
sbb
pop
pop
mov
mov
popa
dec
inc
std
mov
push
xchg
xor
pop
and
data16
lods
cmp
leave
dec
jle
or
sbb
lock
cmp
test
cmp
mov
sahf
icebp
dec
mov
cmp
arpl
and
int
outsl
iret
or
xchg
pushf
push
xchg
xchg
fs
test
or
pop
sub
daa
test
jnp
add
adcl
and
adc
cmp
xorb
shll
xor
sub
dec
leave
or
jb
pop
inc
js
imul
andb
sbb
orl
xor
shll
or
sbb
rcrl
ds
inc
mov
jno
mov
mov
add
inc
je
sbb
mov
add
jne
aam
fcmovnu
jo
push
sub
popa
pusha
jno
pop
mov
sub
inc
popa
roll
and
ss
adc
mov
push
push
movsb
lods
jl
push
insl
push
cwtl
test
andb
pop
xchg
push
mov
cli
mov
cmp
adc
leave
je
daa
push
mov
negb
sub
iret
leave
mov
out
je
mov
sub
fidivrl
es
push
in
sub
sahf
xor
push
jl
aaa
fisttps
fstpt
iret
push
mov
das
cltd
jne
pop
int3
aam
push
sarl
aam
aam
lea
jno
cmpsb
notb
ficomps
cld
stos
jbe
popf
cmp
jae
jle
adcb
outsb
in
pop
push
in
mov
je
subb
nop
add
icebp
loopne
daa
incl
std
mov
clc
push
mov
pop
movsb
and
xor
rcrl
arpl
adc
sarl
stc
aas
imul
push
call
iret
je
mov
mov
dec
ret
popa
cltd
les
adc
cmp
sbb
icebp
mov
dec
or
adc
addr16
idivb
xor
loop
test
mov
sub
xor
lret
mov
jp
rorl
or
lea
sub
in
mov
repnz
xchg
mov
jge
mov
push
dec
sub
jb
mov
dec
aad
cmp
mov
mov
sub
call
movsl
or
ftst
out
push
jg
fldcw
mov
lods
or
rclb
jnp
pop
cmpsl
and
jge
push
and
stc
jp
lea
aaa
and
cmp
fldl
lret
call
mov
add
jae
jb
insb
fstpt
je
fcomi
pop
fldt
test
popa
std
mov
lds
cmp
push
movb
in
mov
adc
aam
orl
hlt
cmp
sbb
out
faddl
repz
test
push
call
pop
iret
lea
nop
aaa
lcall
outsl
in
add
xor
inc
ss
rcrl
cmp
lods
hlt
mov
pop
and
sub
push
push
adc
xchg
cld
dec
not
xchg
loope
adc
inc
add
pop
mov
inc
popf
push
js
flds
inc
sub
icebp
fstl
arpl
mov
add
dec
add
pop
sub
loopne
cmp
lea
movsl
push
int3
daa
xor
sbb
pop
sbb
jge
or
int
push
aaa
sbb
pop
imul
imul
pop
push
xor
or
push
sub
push
or
push
add
out
sbb
add
push
mov
mov
pop
int
xchg
mov
inc
aaa
mov
or
lret
pop
fwait
pop
jo
or
movsl
xchg
mov
cmc
ja
push
std
adc
mov
mov
out
inc
iret
lock
pop
je
adc
inc
not
call
and
orb
cmp
lret
push
movsl
pop
xchg
or
flds
dec
hlt
gs
xor
sub
dec
push
mov
addr16
lds
fidivrs
pop
cmp
das
fsubrl
hlt
cvtdq2ps
iret
es
sbb
out
fldl
mov
inc
sub
jp
cmp
push
jmp
fnstenv
jnp
cmpsl
lods
sub
push
outsb
notl
inc
dec
sub
adc
sbb
sbb
imul
test
pushf
je
xchg
mov
insl
adc
jg
sub
xor
lods
addr16
inc
sbb
dec
mov
adc
lds
inc
stos
shrl
fiadds
fs
add
fisttps
cmp
es
jbe
mov
in
xchg
ds
cmc
inc
lahf
mov
dec
sbbb
test
mov
outsb
aad
shll
in
push
andb
testl
or
mov
dec
xchg
add
imul
ficompl
dec
je
cmp
push
mov
repz
jl
into
shl
push
mov
mov
jle
and
inc
cmp
jl
pop
movsl
ja
mov
jnp
dec
or
test
sub
aam
push
loope
mov
in
scas
bound
dec
ss
or
aad
jnp
mov
ret
xchg
dec
xchg
xchg
sbb
xchg
push
mov
dec
jge
inc
inc
xchg
popf
pushf
cli
and
loope
test
pop
fidivrl
scas
lds
mov
cmpsb
mov
mov
out
adc
inc
adc
addr16
jl
fldl
sub
xchg
daa
adc
adc
inc
nop
cmpsl
in
push
or
cmp
outsl
fdivrs
xchg
clc
mov
mov
nop
pop
sbb
lea
stos
sbb
cmp
in
test
shrb
or
mov
sub
dec
fisubrl
pop
insl
xor
inc
lds
dec
movsl
ret
or
lret
iret
sbb
cmpsl
push
mov
mov
into
xor
push
filds
jns
and
aaa
dec
movsb
out
xchg
and
movsb
push
popf
xchg
fs
or
scas
mov
add
mov
clc
push
shlb
shlb
add
add
jl
jns
test
js
outsb
pop
adc
xchg
jo
cmpsl
pop
add
jl
call
pop
mov
dec
add
es
lret
mov
cmp
das
stc
xor
cmp
jns
out
and
sub
shll
mov
add
sbb
sub
inc
or
repz
jae
dec
dec
jl
inc
call
add
rcl
adc
pop
sub
mov
mov
xor
inc
sub
icebp
scas
mov
movsb
rorl
int
ret
aad
mov
sub
lock
lret
push
stc
inc
jae
gs
mov
mov
push
add
jecxz
mov
mov
popl
add
enter
dec
rorl
inc
hlt
mov
xchg
arpl
or
stos
lret
dec
pop
pop
jb
out
jo
mov
outsl
and
mov
testb
loope
and
sub
inc
lods
sbb
xor
out
scas
dec
jecxz
test
call
and
xchg
mov
inc
pop
adc
int3
or
mov
push
push
xchg
sub
lods
mov
sarl
cmpb
jb
cmp
dec
pop
adc
xorb
cltd
mov
push
jbe
pop
je
mov
cmp
push
in
dec
xchg
mov
sbb
jg
les
jb
inc
mov
push
inc
sbb
adc
or
jns
rol
sub
lea
in
fidivl
and
sub
cmp
cmpsb
movl
lret
pop
divb
mov
ja
clc
pop
jp
in
adc
push
lods
dec
adc
xor
jns
aas
mov
les
sub
xchg
iret
stc
mov
and
pop
pop
clc
sub
out
divl
imul
or
and
xor
xor
lods
in
out
int
jbe,pn
movd
sbb
je
stos
stos
pop
inc
sbb
iret
dec
test
adc
xor
lcall
test
adc
jns
add
pop
in
mov
jb
dec
pusha
rcr
and
add
mov
pop
mov
push
out
sub
div
fisttpll
mov
aaa
pop
cli
cmc
lods
clc
sbb
or
sti
mov
in
pop
pop
pop
frstor
test
gs
fnstenv
sbb
repnz
std
inc
mov
test
mov
xchg
movsl
ja
fbstp
ss
stos
lods
or
pop
xchg
jae
cmp
mov
adc
jle
xchg
lods
ds
stc
lahf
push
pop
mov
or
test
shlb
cli
or
cmp
mov
push
std
scas
clc
pushf
add
adc
lea
test
aas
mov
xchg
test
pop
sbb
ss
lods
push
add
insl
bound
push
add
shrb
popf
ds
loope
dec
inc
dec
pop
shrl
ficoml
and
jno
rcl
repz
push
cltd
adc
insl
xchg
sbbb
or
popa
in
out
and
xchg
pop
sbb
mov
in
iret
setno
mov
insl
ds
xchg
jno
or
testb
pop
mov
mov
jg
push
fcompl
jl
xchg
rcl
adcl
shll
sub
cli
mov
dec
aad
int3
incb
lds
test
addr16
enter
addr16
fimuls
enter
cmc
jns
cmp
jno
mov
jae
and
and
adc
push
dec
xlat
xchg
and
push
shll
xchg
jo
push
test
dec
adc
jp
out
loopne
mov
or
ret
arpl
ja
sbb
hlt
mov
inc
subb
sti
cltd
mov
sub
outsb
vpunpckldq
mov
rcrl
stos
lock
sbb
imul
in
cmp
ljmp
ror
jg
mov
ja
in
push
mov
dec
inc
xchg
fsubs
add
arpl
jle
pop
dec
and
jmp
lcall
rcr
and
icebp
stc
bound
repz
add
cmc
lea
mov
rclb
out
cmp
hlt
aas
and
cmpsb
cmp
roll
xchg
fwait
das
sub
aas
or
data16
xchg
nop
mov
mov
ss
mov
fcmove
ds
mov
adc
cld
push
ja
or
test
jl
loopne
into
push
mov
mov
pop
add
push
out
mov
or
aaa
and
and
addr16
jmp
dec
adc
pop
push
lahf
or
dec
movsl
leave
xchg
rol
movsl
pop
icebp
mov
sbb
clc
jmp
sar
pop
arpl
sbb
lods
popf
cltd
jbe
jae
jge
scas
sti
mov
adc
add
addr16
aas
and
out
jne
add
in
inc
fists
popa
ds
ja
jle
jns
cmp
inc
rorl
decb
leave
fistps
adc
aas
inc
sub
jnp
or
test
sbb
aaa
adc
mov
or
push
movsl
or
je
fidivl
sub
dec
sub
mov
add
test
cs
data16
xchg
outsl
cli
sti
adc
insb
in
and
pop
mov
adc
cmpsl
and
bound
in
fs
sahf
and
xlat
sub
cs
mov
dec
loop
sarb
repz
dec
into
push
xor
dec
mov
pusha
jp
in
xchg
xchg
lahf
xchg
push
push
fwait
std
mov
mov
push
inc
push
xchg
jae
mov
lret
cmp
mov
mov
jae
movsl
out
in
cmp
adc
adc
mov
xchg
lods
cmp
sbb
cmp
test
clc
mov
xchg
mov
sub
jnp
repz
mov
jne
dec
cli
fldcw
xchg
sub
lods
mov
mov
decl
testl
sbb
lods
add
inc
mov
xchg
or
les
mov
ret
ret
ja
sbbl
cld
nop
pop
je
ret
test
sub
clc
cmpsl
pop
subb
dec
mov
xchg
dec
pop
movsl
or
neg
ja
push
inc
std
aad
sub
mov
out
mov
stos
scas
test
xchg
ret
pop
inc
insb
cmp
mov
adc
out
bound
cmp
sbb
dec
ficomps
mov
xchg
and
jno
repz
mov
nop
jns
push
aas
aas
mov
sub
add
mov
sub
dec
dec
and
aam
mov
les
out
add
sub
sbb
pusha
stos
push
loopne
mov
loope
push
imul
rorb
in
leave
push
inc
add
mov
aad
inc
mov
int3
ds
and
lret
insb
and
aam
push
lods
out
insl
xlat
cmpsl
stc
call
mov
adc
ja
pushf
pop
add
push
stos
fisubs
pop
dec
aaa
jmp
sbb
fisubrl
mov
lcall
into
arpl
loopne
dec
cmc
sbb
lret
xchg
daa
pop
outsb
aad
jne
inc
xchg
mov
mov
xchg
jns
inc
pop
sbb
sub
push
insl
out
fwait
xor
adc
push
ljmp
xlat
data16
in
add
cmpsl
cmpsl
mov
fcomps
iret
and
inc
xor
xchg
inc
xchg
mov
ja
and
dec
dec
icebp
or
lock
lds
mov
push
dec
pushf
sbb
int3
xchg
sbb
shll
cwtl
shlb
jo
xor
inc
lods
mov
xor
repz
push
das
adc
insl
cltd
or
cmp
aad
jno
push
xchg
mov
pop
mov
cld
hlt
cmc
sub
lea
das
push
jbe
push
daa
dec
iret
mov
cmp
jbe
mov
mov
ret
stos
and
xor
les
ficompl
sbb
js
orb
xor
jb
inc
sub
fimuls
xor
les
adc
dec
pusha
push
inc
xchg
shlb
or
inc
add
mov
mov
and
fwait
adc
pop
xor
arpl
popf
xor
stos
xor
nop
mov
or
fsubrl
pop
cwtl
jno
movsb
out
and
xchg
sub
and
lock
movaps
mov
mov
pop
arpl
jb
pop
inc
mov
ror
loop
shlb
and
ss
inc
lret
or
mov
in
jg
inc
repnz
idivb
jmp
rcrl
push
sahf
xlat
adc
dec
mov
pusha
or
inc
mov
in
stos
loop
cmp
gs
xlat
call
lret
mov
fiaddl
xor
xchg
test
mov
mov
pop
jno
cmp
imul
xor
push
inc
fucom
xlat
bound
outsb
imul
aad
dec
add
fwait
movsb
cmp
dec
xor
mov
vptestnmb
cs
cltd
inc
clc
sbb
dec
mov
leave
jo
push
rsqrtps
repnz
dec
push
outsl
ds
pop
push
xor
rcrb
cmp
pop
xor
data16
lcall
imul
dec
ror
cmp
push
lds
mov
mov
test
push
sbb
xchg
daa
sbb
fsubrp
out
push
aaa
sbb
dec
andps
aad
dec
dec
cmc
rcrb
adc
sahf
xchg
pop
cwtl
xlat
movsb
inc
pop
adc
rol
jmp
mov
jecxz
mov
and
daa
das
sbb
jo
inc
repnz
and
mov
add
jp
jge
loopne
xchg
enter
adc
pusha
sbb
mov
int3
pop
pop
sub
leave
pop
bound
ss
cli
xor
push
rcrb
hlt
add
cmp
dec
jne
inc
mov
pusha
lock
xor
inc
pop
and
cli
sbb
dec
fs
mov
icebp
inc
cmp
cli
rclb
dec
mov
int3
enter
pop
fstp
xor
sbb
inc
loop
sub
push
sbb
or
sub
fnstcw
out
stos
jg
mov
xchg
add
cli
hlt
test
xor
lret
push
jns
dec
xor
dec
jno
or
testl
data16
or
mov
not
sub
pop
push
iret
pop
cmpsb
inc
sbb
xor
or
lret
push
es
sub
test
icebp
aas
lea
sub
jmp
into
cltd
scas
out
insl
adc
cmp
and
rcrb
cs
sub
xchg
xor
and
dec
loopne
or
sub
ds
jbe
jo
pop
iret
jo
lods
mov
mov
es
fcmove
dec
mov
xor
cmpsb
dec
jl
push
stc
push
je
cmp
test
mov
mov
jno
jge
add
testb
cmp
pop
xchg
push
out
push
jb
cmp
mov
in
cmp
mov
pop
sbb
mov
imull
xchg
sbb
movsb
jbe
xchg
stos
daa
jge
sub
sbb
adc
and
mov
jmp
xor
movsb
xor
addl
jecxz
shl
outsb
mov
cmp
dec
fistpl
push
cmp
sub
stos
data16
lds
scas
inc
dec
lods
pop
xchg
cmp
sbb
leave
test
add
lods
mov
movsl
daa
mov
lret
aaa
mov
sarb
dec
lock
ret
dec
inc
imul
into
mov
lea
aam
mov
lods
xor
cmpsb
aaa
jno
arpl
jl
and
mov
jb
pop
push
jle
lret
fistl
push
xor
and
adc
rcrl
dec
popa
mov
jp
shlb
push
aaa
adc
inc
sub
mov
inc
sbb
and
sbb
push
repnz
push
inc
and
loopne
scas
or
aaa
icebp
sarl
arpl
fs
and
ret
add
mov
hlt
and
add
ja
clc
jmp
and
jl
add
outsl
sub
mov
pop
scas
loopne
xor
sub
push
out
insl
xor
mov
daa
ja
and
or
sahf
scas
mov
lahf
sub
lock
inc
ds
fs
rcll
and
outsl
leave
mov
shr
sub
xchg
inc
fimull
xlat
adc
dec
fisttpll
ja
int
or
aam
xor
add
mov
fisubrl
test
xlat
and
push
rolb
outsl
test
push
push
cmp
dec
fcoml
rolb
nop
push
mov
push
std
sub
dec
test
xor
mov
push
pop
les
xlat
loop
aas
mov
call
stos
jnp
mov
scas
pop
pusha
dec
pop
cmp
fincstp
aas
dec
stos
faddl
mov
push
out
mov
sbb
lahf
loope
mov
dec
call
movb
pop
aas
nop
aas
pop
jl
cmp
arpl
mov
mov
shlb
enter
fwait
mov
imul
pop
sarb
push
and
jns
repz
sahf
aaa
pop
inc
popf
xor
adcb
imull
sbb
cmp
pop
fstpt
jae
popl
pop
ss
adc
in
orb
adc
pop
popa
outsl
mov
daa
dec
mov
out
mov
out
inc
dec
pusha
adc
leave
mov
aad
mov
ja
jmp
push
fmull
pusha
mov
sub
xchg
lret
jmp
out
mov
sbb
sub
outsl
sbb
or
mov
mov
dec
or
ljmp
lods
sti
and
jge
mov
jp
cmpsb
jle
inc
lret
mov
sub
and
xchg
inc
lods
int
adc
inc
mov
enter
xor
inc
add
cmp
loop
and
mov
js
add
lahf
push
sub
incl
mov
jecxz
mov
add
jle
push
mov
pop
and
or
imul
fucomp
jecxz
lock
sbb
xchg
data16
sub
mov
test
sub
insl
push
pop
lods
jbe
loop
xchg
mov
xor
mov
outsl
inc
int
hlt
jne
sbb
in
addr16
outsb
cmc
pop
mov
fdivrl
sbbb
mov
aam
dec
xor
cmp
fisubrs
negb
xlat
fxch
sarl
pop
rorb
xor
sbb
cmpsb
xchg
pop
fidivrl
scas
xchg
inc
pop
xor
mov
daa
mov
jmp
sbb
int3
sub
dec
je
out
scas
mov
push
sarb
jge
mov
sub
push
sahf
mov
fmull
ljmp
push
xlat
sbb
icebp
int3
jl
stos
adc
sbb
ds
nop
inc
popf
inc
mov
adc
add
mov
andl
bswap
dec
adc
xor
loopne
fldcw
lahf
and
jp
imul
paddq
jne
pop
inc
or
dec
pop
and
add
mov
xchg
int
mov
cld
movsl
sub
xchg
pop
xor
cmp
inc
std
jle
sbb
and
dec
mov
inc
adc
sub
push
xchg
jae
loop
sbb
jo
jns
add
adc
cltd
dec
sbb
jb
mov
sbb
pop
pop
sarl
ja
push
lods
in
push
loopne
inc
or
or
test
adcl
fcomps
dec
inc
popf
push
dec
jle
in
sbb
pop
int3
jle
add
and
mov
iret
data16
cmp
les
ror
aaa
sbb
outsb
mov
mov
mov
dec
stos
sbb
add
and
adc
divb
mov
loope
mov
sub
cmp
xor
seta
inc
cwtl
sub
add
jle
pushw
data16
push
lret
lods
lcall
roll
pop
pop
push
movsl
iret
rorb
lcall
push
in
lcall
add
mov
data16
cmp
cltd
nop
mov
mov
sub
sbb
add
mov
dec
xlat
inc
or
aas
lahf
sbb
js
mov
in
in
int
cmc
rcr
mov
out
addr16
xor
pop
mov
and
mov
push
and
cs
mov
ret
and
cltd
xbegin
js
xchg
adc
pop
cmp
cltd
iret
push
cmp
pop
in
push
fldcw
sub
mov
push
ficompl
xchg
out
or
popa
lret
and
movsl
stos
xchg
lahf
aad
fdivl
push
lods
cmp
inc
xchg
mov
pop
in
mov
bound
js
out
ret
cmp
leave
jb
and
int3
sbb
jns
jle
adc
mov
mov
sub
mov
js
pop
std
data16
in
outsb
inc
sbb
in
push
push
mov
mov
add
std
and
lcall
lret
stos
stc
mov
call
fstpl
stc
insb
lea
mov
push
imul
sahf
mov
jle
call
mov
aam
pop
inc
test
sbb
lret
cld
and
imul
sbb
inc
fidivrs
push
pusha
movsb
mov
xchg
les
jg
icebp
mov
das
xor
out
pop
mov
inc
dec
mov
lret
fs
es
inc
push
xchg
bound
push
push
shlb
dec
enter
icebp
dec
jnp
lods
adc
mov
sbb
xor
or
or
inc
push
stos
push
ljmp
mov
xchg
mov
mov
add
hlt
roll
sbb
insl
adc
and
cwtl
xor
lock
push
dec
or
jmp
into
flds
jno
movl
sti
xor
mov
or
test
pop
cmpsl
and
or
sbb
sahf
sar
lcall
mov
and
mov
pushf
packssdw
out
push
jmp
stos
or
add
cmp
sub
loop
mov
mov
jo
xor
jne
das
cmpsl
jbe
dec
and
push
adc
enter
add
inc
xchg
popf
ds
arpl
pop
add
imul
scas
dec
jge
lock
jp
xchg
pop
icebp
sub
sbb
ret
fmull
test
adc
push
cli
scas
push
lock
add
icebp
push
test
test
ja
mov
jno
imul
imul
mov
push
sti
push
sti
xchg
xor
int
sarb
lock
js
addr16
mov
sub
cmpsb
shrb
xchg
subb
add
lock
aas
inc
push
cld
pop
ret
out
push
lods
lahf
mov
cmp
inc
gs
in
cmp
iret
call
scas
cmp
jg
push
cld
mov
es
in
scas
fwait
stc
adc
or
or
iret
inc
mov
ficoml
dec
divl
in
inc
insb
dec
dec
inc
mov
xchg
outsb
fsubl
lea
out
imul
xchg
pop
or
rolb
cmc
lds
mov
loope
test
mov
or
pop
push
call
xchg
or
mov
fadd
pop
ja
stos
cmp
movsb
mov
push
jae
das
mov
adc
cmc
dec
lock
inc
daa
scas
inc
mov
inc
sbb
mov
push
push
add
dec
out
pop
cmp
inc
repnz
in
mov
sbb
mov
xchg
dec
push
xlat
loope
lret
outsb
mov
into
cmp
lods
fidivl
jae
inc
adc
cmp
aaa
jno
mov
jmp
std
enter
lahf
mov
out
xor
jl
sub
cmp
inc
and
loopne
fldl
push
push
inc
fdivrs
adc
sbb
pop
pop
roll
movsb
adc
fbstp
adc
mov
mov
add
or
add
jae
inc
xchg
pop
xchg
fldt
push
push
sub
push
in
jne
pop
and
andl
push
lcall
repz
adc
push
mov
lock
sarl
pop
int3
cmp
cmp
scas
jge
jle
movsl
mov
pop
xlat
push
jp
push
out
aaa
and
fisttpl
jbe
daa
push
push
jbe
dec
es
mov
mov
pushf
or
je
mov
xor
in
sbb
movb
sbb
repz
movsb
xor
or
pop
dec
fisubs
mov
xchg
int
inc
dec
rcr
movl
push
jne
adc
jg
xor
or
xchg
insb
loop
and
add
pop
jmp
xchg
outsl
mov
xor
jp
pop
pushf
mov
sbb
ret
movsl
mov
into
int
add
add
dec
mov
enter
dec
xchg
repnz
mov
imul
lods
lds
fcmovb
loope
mov
or
jl
imul
sbb
testl
icebp
inc
sbb
lds
aaa
popf
dec
xor
lea
push
dec
sbb
mov
icebp
inc
pop
cmp
nop
pushf
or
imul
rcrl
repz
xchg
jecxz
inc
stc
mov
cltd
jge
pop
ret
jle
mov
faddl
cmc
pop
cmc
jge
or
iret
cs
and
lret
mov
xchg
lahf
iret
addl
lret
into
sbb
mov
stos
pop
sbb
or
adc
jns
loopne
and
add
or
cld
mov
js
sub
insl
or
rcrb
sub
cld
and
lock
adc
jmp
stos
es
je
icebp
ret
fs
sbb
xlat
das
ss
sub
outsl
aas
push
or
mov
jge
loop
loop
lods
out
int
rsqrtps
roll
and
notb
fiaddl
cmp
lds
aad
in
cmp
inc
push
jb
cltd
sbb
pop
imul
nop
adc
mov
or
or
aam
nop
je
mov
testb
ficomps
lret
and
xor
jo
scas
dec
loop
cmp
add
call
cmp
pop
cld
loope
ja
mov
aaa
shll
int3
adc
aam
jl
xchg
mov
je
pushf
cmpsl
addb
cmp
pop
cmpsb
or
fstpl
push
sub
jne
imul
xor
mov
cwtl
stc
jl
mov
mov
mov
sub
bound
sub
in
das
js
add
push
mov
dec
lcall
out
mov
inc
jmp
or
push
lcall
rdmsr
cltd
pop
pop
push
je
adcl
add
rclb
jns
pop
test
aas
jno
mov
mov
adc
fimuls
jecxz
je
test
push
dec
adc
enter
mov
pop
inc
adc
gs
in
repz
mov
clc
jb
cmpl
cmpsb
lea
inc
jecxz
mov
stos
imull
subb
ljmp
lods
ret
adc
fdivs
mov
sbb
and
mov
inc
sub
mov
xor
insb
jne
push
dec
movsl
pop
push
pop
mov
sub
dec
flds
int3
or
testl
lret
cmp
mov
inc
cmp
in
gs
cmp
cmp
mov
fisubl
jp
insb
sub
add
xchg
cs
in
xchg
xchg
xor
adc
dec
fwait
jnp
and
add
jmp
pop
push
and
rcll
push
mov
jl
cmp
imul
das
cmp
xlat
mov
push
xchg
and
mov
push
loop
jo
mov
adc
js
xchg
add
out
loop
ljmp
or
inc
daa
call
das
mov
add
adc
loop
sub
adc
mov
xchg
data16
mov
pop
fs
adc
icebp
sub
jno
jl
mov
sub
decl
cmc
add
push
push
emms
lock
jo
xchg
dec
adc
lret
sub
arpl
jecxz
add
jle
jns
jo
jecxz
jb
adc
sbb
adc
sub
ret
push
shl
mov
outsl
and
and
sub
fcos
mov
icebp
xchg
aaa
invd
in
xchg
rclb
jl
les
call
pop
push
rorb
xchg
repnz
and
cmovp
fmulp
xor
clc
pop
jmp
fistl
ret
lahf
notb
std
jmp
and
int
dec
call
je
lret
cmp
inc
pushw
mov
pushl
xchg
inc
aad
or
cwtl
add
cmp
add
add
fwait
outsb
shlb
mov
push
arpl
pop
out
bound
add
xchg
or
fstl
mov
push
sti
sub
fsub
mov
loopne
pop
adc
pop
adc
ss
or
lcall
jg
xor
ret
in
or
add
inc
test
ds
test
dec
cmp
jmp
scas
cmp
pop
mov
idivl
int
es
jns
enter
and
mov
jp
inc
loop
aam
dec
mov
in
cwtl
es
clc
stc
adc
xchg
mov
mov
push
jge,pt
jle
aaa
fidivrl
js
aam
cmp
pusha
mov
cmpsb
sub
xor
clc
add
push
loope
xchg
mov
vmulsd
pop
fimuls
xor
jecxz
xor
jno
insl
pop
push
and
cpuid
movb
inc
mov
aaa
push
adc
or
add
adc
roll
lret
cli
stos
adc
popf
lret
popa
mov
jmp
test
xor
call
mov
out
sub
daa
bound
inc
xor
dec
or
mov
or
in
xchg
sub
movsl
jg
mov
push
lea
sahf
cld
xchg
cwtl
inc
push
or
jns
xor
pusha
pop
pop
mov
dec
imul
push
mov
mov
les
clc
inc
cld
pop
push
cmpsl
cs
scas
iret
dec
xchg
movsl
push
mov
mov
aaa
sbb
inc
push
jnp
dec
pop
jl
cwtl
in
dec
or
movsl
idivb
xchg
push
inc
fwait
xor
call
sbb
sub
cld
jg
dec
nop
stos
jo
stc
loopne
and
xor
pushf
xor
daa
mov
jg
pusha
loopne
mov
pushl
sub
dec
and
dec
lahf
int3
sub
mov
je
test
cmc
stos
outsb
jo
int
mov
lock
mov
push
sbb
int3
jbe
lea
sbbl
jmp
imul
pop
sub
int3
mov
shlb
mov
pusha
loop
int3
enter
mov
sbb
inc
cmp
cwtl
dec
mov
inc
dec
into
lret
xor
rorb
shl
inc
pop
nop
fdiv
sub
ret
mov
daa
pop
pop
roll
popa
rcll
dec
js
push
mov
mov
sub
push
inc
add
testb
test
xchg
loopne
and
in
test
push
insl
negl
push
insl
int3
push
push
mov
outsl
jne
scas
ljmp
pop
mov
fnstenv
aaa
push
mov
outsl
adc
cmpsb
daa
lret
ds
mov
in
pop
xor
enter
loop
lods
sahf
push
iret
pushf
loope
xchg
out
das
sbb
fdivp
xor
sarb
mov
sub
lds
repz
imul
xor
dec
out
notb
sti
mov
cmp
jbe
mov
pop
int3
jmp
iret
and
push
ret
mov
in
sbb
or
push
dec
xchg
jmp
cmp
repnz
jo
iret
sbb
lds
js
cmp
jne
cmp
jmp
fs
push
adc
or
stos
fbstp
cmp
lcall
stos
mov
or
leave
lods
dec
nop
cwtl
pop
xor
in
sti
jmp
sbbb
aas
sahf
and
aas
stos
add
mov
push
mov
std
arpl
lock
loop
pop
aaa
sbb
jb
cs
in
mov
aaa
push
sub
push
xor
xlat
lods
ret
and
cmpsb
nop
cs
mov
mov
test
cmp
sbb
sub
leave
imul
bound
pushl
and
xor
adc
adc
imul
push
push
xchg
in
inc
es
jp
out
mov
xchg
iretw
gs
xchg
insl
push
cmp
jl
mov
lret
sbb
cli
jno
xorl
pop
fimuls
mov
and
xor
ret
jbe
daa
inc
shr
mov
cld
mov
test
ret
rolb
cmp
imul
pushl
xor
xlat
pop
inc
ljmp
cwtl
mov
mov
mov
sub
loop
sbb
out
sbb
out
lods
cld
lret
out
sarb
xchg
test
add
mov
xor
ss
dec
shll
cmc
xchg
or
lahf
popa
inc
cltd
in
mov
xchg
test
jo
or
jecxz
std
outsb
mov
jmp
scas
popaw
push
loop
repz
add
push
pop
or
loopne
cmp
sbb
gs
mov
mov
pop
insb
pop
or
lock
cmp
xor
xchg
lods
pop
outsb
js
out
aam
pusha
ficompl
int3
adc
xor
mul
xchg
push
dec
ret
fistpll
and
push
add
inc
outsb
mov
out
cmp
push
leave
sub
mov
lods
insl
test
sub
and
adc
cmp
and
push
sbbl
in
or
xchg
outsb
ljmp
push
lea
sbb
nop
pop
fbld
out
or
popa
add
push
cld
adc
jne
into
scas
pop
mov
or
pop
cltd
fwait
out
pop
xchg
incb
fsubr
in
inc
stos
push
rorl
push
push
mov
inc
and
fcomps
xchg
out
push
add
and
fwait
es
movl
push
in
out
scas
stc
sbb
mov
xor
pop
leave
dec
mov
dec
outsl
cmp
les
leave
sbb
ret
mov
fisttpll
pop
jb
in
repz
sarl
mov
dec
mov
sub
orl
lods
nop
stos
data16
iret
in
pop
movsb
cwtl
inc
mov
mov
lods
repz
inc
adc
jbe
fisubs
ja
pop
sbb
imul
add
and
cmp
ljmp
sbb
xor
cld
sub
mov
jbe
push
test
cmp
jle
mov
dec
es
fnstcw
sbb
inc
and
cli
cmpsb
mov
xor
cs
lods
arpl
dec
js
add
imul
aam
xor
push
cmp
hlt
pop
mov
addb
sbb
sub
and
dec
bound
mov
test
xor
push
lahf
push
pushf
jmp
pop
jmp
ret
dec
cmp
ljmp
cmp
shlb
mov
notl
lock
sahf
jae
aad
dec
cli
xchg
cmp
sahf
out
add
xchg
fcoml
push
fisubl
lods
stos
and
std
adc
imul
cld
nop
and
fsubr
ret
stos
or
push
jns
adc
mov
inc
sub
aam
bound
jnp
dec
fisubrl
out
out
push
xorb
dec
hlt
out
test
mov
cli
mov
sahf
adcl
clc
push
xor
loope
loop
js
inc
sbb
repnz
push
fldt
sbbb
sbb
sbb
mov
icebp
aam
cmp
pop
and
dec
popl
jno
xchg
std
outsb
xor
sarl
xchg
daa
daa
fs
xchg
sbb
dec
fs
imul
mov
mov
mov
cmp
xchg
xchg
fisttps
subl
jne
jg
jge
sub
fmulp
outsl
mov
jne
xchg
in
je
xor
sti
cmc
test
lods
sbb
and
sub
insb
sti
ret
gs
add
push
and
rorl
cs
fistl
je
xlat
and
arpl
stos
mov
insl
jb
xor
mov
jo
xchg
jns
add
or
outsb
js
jns
jbe
icebp
mov
pop
aas
shll
lock
mov
jo
jbe
mov
xchg
sbb
scas
out
popf
enter
push
push
loopne
xchg
repz
sahf
scas
push
in
sub
add
cmp
iret
cmp
shlb
inc
into
jmp
cwtl
fildl
mov
fdivrl
addr16
lret
pop
daa
ss
gs
add
push
mov
xchg
mov
mov
arpl
mov
sti
inc
adc
fists
movsb
cmp
fnstsw
testl
cmp
vpcmpuw
hlt
dec
mov
mov
outsb
adc
dec
sub
shl
xchg
inc
and
pop
ret
adc
fistpll
xchg
mov
jb
mov
pop
jmp
enter
push
fdivrp
sub
jbe
xchg
mov
iret
fdivrl
add
mov
adc
arpl
or
dec
push
fcoml
fdivr
pushf
push
mov
loop
addr16
ja
sbb
clc
scas
mov
mov
adc
jmp
adc
xchg
and
nop
and
mov
out
cmc
sub
dec
cmp
inc
mov
jg
pop
loopne
int3
xor
sub
fisubs
nop
inc
pop
test
insl
fisubrs
mov
rorl
lahf
mov
dec
push
imul
ret
test
mov
adc
out
push
loopne
movsl
dec
pop
lret
inc
and
mov
std
push
bt
jae
push
notl
xchg
lea
insl
jle
inc
sub
cltd
dec
aad
jo
push
lahf
mov
lds
int
xchg
aam
fstl
jno
frstor
pop
mov
or
mov
jbe
rorb
mov
mov
dec
repnz
and
push
adc
cltd
xlat
add
int3
or
in
mov
dec
les
fucomp
pop
gs
mov
pop
out
sbb
aaa
stc
mov
cmpsl
cwtl
sahf
sti
in
dec
push
xor
sbb
inc
mov
adc
arpl
cmpsb
into
popa
sti
icebp
test
cmpsl
jg
into
inc
lods
lds
xor
in
lock
dec
mov
out
xorl
imul
xor
mov
dec
push
scas
out
ret
add
imul
cmp
sbb
or
mov
cmp
scas
fucom
iret
sbb
dec
pop
subl
cltd
shl
jmp
mov
sti
jmp
mov
cmc
stos
sahf
pop
jecxz
sti
sub
and
push
lea
cli
mov
and
jno
inc
in
pop
fsubl
or
aas
ja
mov
icebp
mov
xor
or
out
cmp
pop
aas
ljmp
xchg
data16
xlat
das
push
pop
and
movsl
xchg
mov
aas
test
add
lcall
xchg
out
insl
orb
ja
in
xchg
pop
mov
mov
jle
lds
mov
daa
jno
jge
bound
mov
insl
into
mov
shlb
repnz
shrb
lods
xor
xchg
jnp
push
inc
clc
mov
or
aaa
inc
call
aaa
pop
cmp
lahf
and
jge
pop
xchg
push
ds
gs
adc
hlt
dec
insb
pop
mov
jp
cmc
jg
xchg
mov
inc
mov
push
popf
test
test
sub
dec
daa
jbe
inc
jmp
cmpsb
xchg
je
xor
cli
sub
outsl
pop
ds
loope
lcall
sbb
loop
shll
ficompl
mov
mov
jae
adc
sbb
test
sbb
stos
inc
in
les
xchg
orl
mov
test
mov
shll
xchg
push
in
outsb
stos
fsubl
lods
xchg
sub
and
dec
add
js
xor
arpl
sti
xchg
int3
out
mov
js
cs
sub
xchg
lods
dec
stc
inc
jb
shrl
mov
lret
or
jo
ds
mov
repnz
ljmp
adc
sti
xor
mov
sbb
add
xchg
or
push
sub
jle
int
cmp
xchg
inc
stc
test
xor
jge
xchg
mov
pop
push
int
aaa
lret
hlt
shrb
ds
xor
fstps
jl
data16
xor
rcrl
xchg
adc
in
outsl
mov
gs
enter
imul
cltd
test
addr16
into
lods
imulb
or
jne
ss
or
movsl
xchg
sub
sub
je
cmp
les
ja
xor
sbb
cmc
push
inc
outsb
es
push
js
push
insl
out
push
inc
mov
es
shrb
ljmp
mov
scas
jl
sbbb
push
mov
inc
call
jp
ret
mov
cmp
out
adc
push
insl
jne
cmc
cmp
adc
int
scas
or
and
jno
sbb
lock
pop
jns
mov
and
sbbb
dec
popa
mov
lods
xchg
dec
cld
inc
in
add
fisttpl
pop
jb
scas
mov
out
xorl
push
mov
mov
clc
call
xchg
fbstp
inc
int
pop
in
out
popa
xlat
sub
shlb
test
sahf
adc
xchg
sub
mov
mov
and
mov
dec
lock
jmp
xchg
mov
pop
sahf
nop
mov
gs
outsl
xor
test
pop
pop
fistl
adc
jo
loopne
fldenv
sub
shrb
mov
aam
fsts
mov
inc
mov
das
mov
out
outsl
pop
or
fwait
lret
addl
sbb
push
xchg
sbb
das
jge
and
mov
aaa
cmc
push
xchg
xchg
mov
jnp
and
xor
dec
fiaddl
movsl
rorl
xor
sbb
call
mov
mov
jb
mov
sbb
xor
push
adc
daa
add
data16
enter
icebp
movsl
out
jge
or
adc
cs
mov
pop
sbb
jne
dec
pop
push
shrl
das
mov
cmc
sub
push
lock
and
call
add
ret
aam
stos
sar
shrl
or
mov
xorl
stos
push
adc
imul
fistpll
insb
loop
gs
push
xor
cli
dec
repz
lret
mov
insl
push
push
fnsetpm(287
stc
pushf
adcb
mov
call
dec
push
xor
mov
and
xlat
stc
js
aas
mov
xchg
ds
mov
cli
xchg
xor
int3
aas
xor
loope
jne
int3
pop
mov
mov
xor
rcr
sbb
fs
sub
ficomps
out
xor
gs
cmp
push
call
push
inc
fs
mov
insb
mov
repz
sbb
mov
icebp
push
notl
cmp
daa
std
cmpsb
and
jl
and
repnz
mov
sbb
cmp
sub
jp
fsubr
jb
in
rorb
popa
xchg
leave
mov
dec
mov
nopl
push
mov
bound
mov
lcall
sub
mov
cmpsb
subb
repz
pop
stc
inc
mov
sub
mov
subb
cmp
cli
push
jl
fwait
add
xchg
movsb
mov
sub
iret
fwait
rorl
rcrl
cmc
out
inc
pop
in
scas
jl
imul
cltd
xor
out
imulb
add
xchg
sub
pop
or
lret
sub
xchg
sbb
adc
jo
imul
inc
in
push
cmp
movsb
xor
loope
sarb
xchg
adc
sbb
sbb
lea
dec
and
jl
jg
mov
iret
or
out
mov
cld
mov
stc
inc
push
ret
scas
rclb
imul
sub
push
xchg
mov
sbb
mov
mov
not
cmc
aad
mov
cwtl
inc
dec
dec
aad
xlat
add
cmp
cmpsl
sbb
call
aam
clc
and
iret
jo
les
cmp
add
bound
sub
lods
das
repz
dec
je
aaa
sbb
push
pop
jne
sub
jmp
call
pop
ja
cmp
fadds
push
pusha
cmp
push
cmpsl
popa
add
in
arpl
aad
ja
mov
adc
cmpsb
into
jns
mov
xchg
push
cmp
pop
sbb
dec
ljmp
cmc
pop
cmpsl
or
cmp
add
adc
jb
adc
lods
mov
in
push
rcr
es
and
shl
mov
dec
out
jnp
sub
dec
out
out
push
lds
test
adc
cs
pop
in
js
andps
sub
sbbb
fs
rorb
push
dec
mov
fisubl
and
icebp
lods
dec
push
cmp
aam
repz
jns
insb
inc
jns
test
not
imul
jg
hlt
push
xchg
adc
insb
push
jp
cmp
addr16
clc
and
push
add
int3
push
fdivl
pop
inc
pop
stos
sub
jl
cmpsb
cwtl
cmp
int
out
icebp
xlat
insb
xchg
sbb
lcall
mov
mov
iret
ss
cmp
mov
mov
and
fldl
mov
mov
adc
mov
mov
std
cld
xor
mov
in
pop
rolb
popf
ffree
add
sarl
into
aas
jbe
cltd
aaa
scas
data16
adc
divl
push
mov
aam
lret
fimuls
test
dec
cli
addr16
int3
lahf
and
mov
repz
xchg
ss
dec
jns
movsb
lds
xlat
pop
push
int3
insl
jno
mov
and
cmp
and
fisttpll
dec
xlat
cmp
jnp
out
jle
inc
pop
mov
xor
repnz
lahf
repz
fmull
jae
cmpsb
hlt
jge
scas
xchg
dec
push
movsb
xor
cli
fidivl
out
out
icebp
in
cmp
sub
fsubl
inc
xchg
mov
faddl
mov
insl
pop
pusha
add
sub
inc
test
push
cmp
pop
add
cmp
jge
and
fdivs
addr16
mov
ret
push
iret
pushl
scas
push
mov
xchg
sub
lods
cli
adc
fldt
cmp
in
insb
enter
adc
and
stc
xchg
out
inc
adc
mov
shrl
ja
es
std
hlt
push
mov
std
push
mov
pushf
shl
mov
mull
in
inc
push
dec
fldl
sarb
sub
mov
mov
pop
pop
in
lcall
lret
call
aam
out
outsl
lods
ja
daa
or
int3
mov
lods
pusha
and
fiadds
dec
sti
mov
stos
mov
in
mov
nop
shrl
cwtl
test
arpl
cmp
mov
popa
mov
xchg
repnz
lea
inc
addb
pop
mov
pop
mov
push
push
push
add
cld
out
mov
mov
jbe
outsb
mov
movsb
jo,pt
ret
xchg
mov
mov
aaa
movb
cmp
lret
int
nop
test
negl
repnz
lods
in
jae
outsl
int
jae
sub
int3
sub
out
mov
mov
rcll
mov
jmp
adc
and
push
and
jg
pop
pushf
addr16
sti
insb
jmp
jecxz
les
inc
pushf
push
or
dec
repnz
and
repnz
ror
push
insl
push
push
lcall
fs
mov
and
repnz
mov
iret
in
pop
adc
out
aad
arpl
imul
je
jne
push
outsl
push
or
dec
or
mov
inc
push
insb
and
hlt
rorl
push
out
pushf
jg
cmp
hlt
in
and
loope
jmp
push
gs
and
or
das
ljmp
adc
pop
sbb
ja
inc
aaa
cmp
subl
mov
jle
mov
jb
add
out
loop
std
push
scas
js
dec
pop
imul
sub
lds
xor
mov
nop
test
stc
adc
repnz
cmp
and
sbb
enter
orb
sahf
shrb
xchg
negl
popf
lret
sbb
rolb
nop
jae
mov
xor
es
sbb
mov
aam
mov
inc
ljmp
outsb
mov
mov
push
sti
sbb
jo
xchg
cmp
and
jg
adc
iret
outsl
ja
daa
out
icebp
xchg
jne
popf
xchg
push
sub
push
mov
ret
repz
lcall
test
xchg
shll
pop
add
je
lea
push
les
fistps
ret
repz
mov
cltd
icebp
sbb
ret
std
mov
iret
mov
stos
jb
daa
lods
dec
adc
movsl
loop
sahf
jmp
jge
aaa
jmp
rep
or
lahf
jne
mov
inc
cmc
mov
call
outsl
mul
sub
pop
inc
fisubrl
and
shrb
js
add
or
mov
or
dec
popa
cli
jl
push
repz
out
sti
call
sub
popa
cmpsl
mov
jnp
pop
pop
inc
or
or
push
jmp
movsl
fists
add
xchg
push
adc
scas
sbb
cmp
test
stos
incl
push
aam
push
aam
push
repnz
repnz
and
mov
push
adc
nop
jge
mov
add
cmp
cmp
sbb
jae
lea
or
dec
mov
mov
ror
inc
imul
push
pop
lods
lea
sbb
idivb
aaa
cmp
jo
sub
add
and
test
inc
cmp
push
xchg
je
pusha
mov
icebp
je
xchg
or
lcall
mov
imul
jnp
fmull
imul
mov
jno
js
xchg
gs
adc
xor
push
push
ja
dec
mov
sub
lret
adcl
push
aad
fwait
in
pop
pop
das
pop
iret
fs
fcoms
or
sub
push
add
lods
fs
imul
pop
inc
jg
push
adc
xchg
and
pop
jne
cmp
adc
sti
push
movsb
rcll
int3
out
inc
loop
jnp
mov
ret
cmp
adc
shr
dec
out
in
aad
lods
movsl
ds
cmpsb
sbb
icebp
jae
jb
dec
lea
jle
inc
ljmp
out
cmp
or
lods
xlat
inc
fsubrl
lods
cmpl
mov
jge
bound
aas
daa
or
lcall
sbb
pop
xchg
ja
xchg
inc
std
push
sbbb
rcr
pop
fcoml
pop
leave
mov
pushf
inc
test
xchg
or
mov
daa
add
in
xor
sbbb
ds
negl
xchg
push
scas
fisubrl
sub
jge
push
jne
and
outsb
loope
dec
jae
ret
xor
inc
push
cmp
movsb
das
sub
sub
outsb
dec
ret
push
js
iret
push
xchg
cmpsb
mov
ret
cmpsl
cmpsl
imul
sbb
aad
pop
add
gs
test
mov
inc
pusha
adc
inc
pop
sub
nop
mov
ds
ret
mov
mov
mov
andl
mov
outsb
lods
adc
and
je
hlt
std
ret
sub
insb
push
xor
fildl
push
lcall
insl
int3
movsl
push
movsb
xor
shrb
fs
pop
pop
mov
sub
cltd
clc
and
mov
sub
outsb
pop
rcrl
js
push
lret
xor
shrb
lahf
xchg
das
push
or
ss
and
mov
ss
jns
adc
jl
mov
pop
imul
js
sub
arpl
mov
imul
mov
cmp
push
sti
ficoml
lea
inc
cmc
in
dec
inc
cmc
cltd
clc
je
popf
jmp
andps
push
pushf
mov
pop
loopne
xor
fdivrs
xor
flds
inc
stos
es
out
pop
aam
xchg
mov
jmp
jecxz
enter
xchg
dec
xlat
jmp
and
shll
outsl
ret
test
lea
cmpsl
out
int
loope
es
mov
ret
jae
pop
jg
xor
add
pop
lea
cmp
and
push
das
xor
aad
gs
jae
sub
cmp
cmpsl
mov
sbb
mov
xor
dec
inc
mov
ja
xlat
jns
neg
jo
mov
push
inc
push
popa
pusha
and
rcr
xor
mov
jp
test
or
dec
jno
shrl
fs
scas
push
pushf
mov
cmpsl
js
dec
cwtl
or
in
jg
das
cltd
pop
cmp
jg
fistl
pop
and
cmc
fwait
pop
add
mov
xor
pop
leave
jae
inc
out
movsb
hlt
insl
jo
iret
pusha
dec
push
lea
and
jns
pop
add
push
mov
test
mov
jne
call
and
outsl
in
lret
jp
lret
jbe
cmp
jo
mov
aaa
xor
sbb
pop
sbb
je
mov
jecxz
test
lret
mov
ret
ljmp
sti
movsl
dec
jns
lcall
je
outsb
dec
movsb
inc
adc
push
dec
jmp
cmp
shlb
mov
fstps
adc
test
in
ficompl
sub
outsb
dec
js
out
push
mov
push
jo
int3
sub
inc
mov
ss
shll
sti
jle
mov
es
callw
adc
sbb
fwait
ss
mov
sbb
cmp
adc
inc
inc
sbb
mov
std
movsb
dec
add
push
push
dec
adc
sarb
xlat
sahf
mov
jmp
fwait
push
inc
jmp
pop
lret
adc
mov
movb
fidivs
sub
test
or
daa
or
lods
dec
iret
mov
xchg
xor
clc
dec
sbb
sub
call
xchg
fdivs
cwtl
mov
add
add
adc
test
jmp
es
add
jo
movsl
xchg
das
flds
mov
stos
aas
mov
into
in
lods
out
and
out
jb
jb
xchg
xor
into
mov
jno
loope
xor
lds
jbe
sub
sarl
mov
sub
inc
rorb
sahf
mov
pushw
sbbb
stc
mov
fwait
sbb
or
inc
mov
arpl
xchg
insl
add
jle
and
cmp
and
xor
gs
or
rcrb
mov
scas
inc
mov
xchg
cmp
int
fadd
xor
popa
sarb
add
iret
mov
insl
dec
shr
fwait
pop
pop
inc
repnz
inc
mov
ljmp
outsl
test
lds
sbb
sub
push
rorl
sbb
push
repz
ret
ror
sub
daa
sbb
xor
pop
daa
pop
or
ja
jne
push
in
inc
lret
pop
xor
aaa
loop
cmp
sub
adc
cmp
cmc
adc
cld
pop
cli
lahf
jno
scas
or
repnz
dec
cmp
add
aas
rcr
lds
cld
cmp
sbbb
cmp
or
cmpsb
cmp
js
out
cmp
dec
popf
enter
sbb
push
pusha
popa
push
movsb
aam
int3
movsl
inc
mov
daa
dec
sub
sub
mov
inc
sub
clc
jge
jbe
mov
imul
movsb
loopne
mov
lods
inc
or
and
push
fdivs
mov
popa
mov
mov
imul
out
arpl
ss
fidivrs
push
or
mov
pop
or
out
or
out
test
and
repz
pop
ljmp
sbb
jp
imul
fstps
pop
pusha
fldenv
ffree
notb
movsb
fcmove
adc
into
add
loopne
jne
pop
pop
push
xor
xor
jl
xlat
jo
pop
inc
mov
push
negb
stc
cmpsl
jle
sub
in
dec
sahf
push
test
cltd
loope
adc
xlat
ret
xchg
ret
rolb
mov
and
insb
leave
sahf
insb
xor
dec
xchg
mov
push
xchg
add
jmp
inc
xchg
inc
and
adc
push
push
daa
loope
lock
xor
addps
pop
bound
hlt
cltd
push
les
stos
in
and
mov
jns
xchg
mov
xchg
mov
dec
test
add
pop
sbb
fstpt
ss
mov
add
cli
jmp
dec
sarb
addr16
aam
adc
push
and
mov
dec
push
imul
sub
xor
add
pusha
pushl
and
push
into
push
sub
xorb
loop
pop
pop
adc
shll
push
subb
mov
idivb
in
mov
mov
push
push
cmpsb
aad
lret
outsb
scas
or
js
mov
mov
sbb
xchg
push
adc
xor
dec
sbb
lret
sub
jo
and
sbb
fnstsw
sub
sub
vmwrite
adc
jo
xchg
lea
call
es
scas
inc
subl
cs
mov
cmc
loopne
push
das
lock
test
aas
stos
lods
test
insl
hlt
addr16
inc
mov
pop
lock
xor
mov
dec
ds
inc
adc
pop
add
add
int3
int3
imul
mov
jno
jl
cmc
inc
movb
dec
push
mov
mov
sbb
inc
pop
popa
in
cs
mov
push
out
mov
lahf
sbb
mov
cmpsl
enter
or
xchg
dec
mov
fdivs
ret
xor
outsb
pop
dec
lret
inc
into
mov
in
inc
in
pop
mul
or
and
loope
in
and
push
mov
pushf
jno
lods
sub
mov
std
ret
popa
rol
xchg
aas
aaa
lock
fadds
dec
mov
add
mov
fisubs
mov
mov
sub
cmpsl
ret
scas
mov
mov
and
scas
add
add
movsl
iret
jg
dec
ss
adc
jp
shl
sarb
loop
pop
cmp
jle
imul
xor
stos
push
dec
jns
ret
add
adc
cltd
out
dec
pop
pop
insb
ret
mov
push
inc
or
lods
mov
loop
arpl
sbb
aad
mov
xchg
push
inc
mov
jb
subl
mov
and
data16
insl
test
out
mov
push
adc
or
sbb
pop
sbb
in
or
lahf
cmp
ja
cmp
call
fisttps
daa
cltd
inc
pop
jg
mov
out
jbe
leave
xor
pop
cmc
fisttpll
rcrl
mov
jae
pop
outsb
push
push
push
cmpsl
pop
or
xor
sbb
outsl
push
jno
or
imul
sub
shll
addl
and
or
aas
sbbb
or
std
ds
jp
pop
nop
in
xchg
sbbb
shll
adc
cmpsb
jp
out
jge
or
pop
jecxz
cld
sbb
popf
ret
out
fadd
test
pop
mov
xlat
pop
mov
cmp
movsb
and
pusha
xchg
xchg
xchg
adc
adc
xor
sahf
notl
jmp
dec
push
inc
inc
in
mov
or
ffree
push
jl
mov
dec
push
loop
sub
cmpsl
loope
pushf
stos
or
xlat
daa
ret
sbb
sub
dec
add
and
ljmp
addr16
fisubrs
or
dec
cmpsl
cmp
or
leave
fwait
or
and
lret
push
sarl
push
fs
outsl
pop
xchg
mov
sbb
lret
jmp
push
dec
push
adc
inc
add
adc
xor
xchg
es
inc
arpl
ljmp
jo
mov
cmpsl
imul
push
aas
sub
repz
jnp
jp
xchg
psllq
movsb
cs
mov
testl
cmp
jae
out
sub
jbe
lahf
xor
dec
mov
leave
aad
ret
scas
adc
dec
push
cmp
test
jecxz
sbb
sti
decl
adc
adc
dec
fists
mov
mov
xor
mov
jecxz
es
mov
mov
popa
jo
stos
ss
sti
mov
stos
cltd
aad
test
ja
cmpsb
mov
fwait
xchg
lahf
inc
pop
ja
cmp
ljmp
sub
cli
pop
bnd
lods
lods
inc
cmpsl
sub
adc
mov
jg
adc
xlat
ljmp
mov
sub
mov
cmp
xchg
arpl
out
orl
cmpsl
cmp
popa
mov
jb
cmp
or
mov
pop
jmp
dec
bnd
sub
je
mov
fs
pop
cmp
adc
xchg
lcall
or
push
pop
add
xor
xchg
rorl
fwait
loopne
adc
or
mov
adc
sub
dec
adc
jecxz
js
jb
cmp
das
roll
std
mov
je
mov
jp
aas
mov
lahf
lcall
push
xchg
lds
mov
push
push
daa
push
lret
or
cmpl
dec
sub
fistpll
lahf
aaa
xor
cwtl
or
adc
ds
mov
or
add
push
dec
lock
push
mov
cld
frstor
pop
test
out
jb
fucomi
and
loopne
jg
pop
arpl
mov
cltd
scas
movsb
dec
fcmovnb
inc
pusha
xlat
inc
xchg
push
pop
movsl
sti
nop
ss
pusha
sbb
icebp
jae
add
addr16
movsb
sbb
jp
mov
int
xor
shrb
ds
rolb
or
and
rcrb
rcrl
sub
and
scas
add
push
imul
jmp
or
mov
bnd
sbb
push
mov
xchg
xchg
xor
cld
daa
cmc
lret
push
es
sbb
cwtl
scas
mov
mov
testl
lods
mov
imul
mov
out
das
adc
sbb
imul
insl
test
mov
sub
pop
ljmp
mov
aaa
out
rorl
leave
or
inc
xor
lcall
leave
stos
lahf
mov
adc
mov
cmp
addb
jl
cmp
pop
dec
mov
fsubr
enter
adc
leave
mov
cmpsl
dec
int3
stc
jne
roll
sar
popf
lahf
xor
mov
cwtl
add
incb
jecxz
lahf
mov
mov
loope
or
xchg
jns
mov
movsl
or
daa
cli
push
fldcw
and
sub
or
cmp
pop
cltd
inc
push
adc
int
out
pop
mov
xlat
jmp
mov
pushf
shrl
xlat
shl
mov
push
xchg
cmpsb
repz
pushf
ret
cmc
add
movb
push
filds
daa
or
int3
inc
ret
mov
cmp
pop
pop
mov
mov
test
mov
jmp
jnp
mov
sub
xor
int3
and
inc
dec
sbb
in
rcrb
pushf
addr16
lock
jo
add
stos
dec
adc
in
sbb
pop
hlt
cmpl
ja
mov
flds
and
cli
ret
out
mov
mov
cli
sbb
aad
ret
mov
and
test
int3
test
popa
mov
add
xor
sahf
add
push
mov
xchg
cmpsb
addr16
push
sub
je
push
in
test
xchg
scas
in
into
mov
xor
aad
and
ljmp
cmpsl
xor
cmpsb
pop
mov
sahf
sub
roll
pop
int
or
cmp
pop
adc
xorb
insl
cmpsl
push
rorb
or
sub
lret
add
rclb
imul
dec
pop
insb
jg
jbe
int3
dec
repnz
scas
and
mov
sbb
test
dec
cld
daa
pushf
ret
pop
cli
cwtl
loope
or
pop
sar
jnp
cmp
cmp
dec
dec
jmp
pop
scas
xchg
fidivl
xchg
sbb
adc
call
push
or
push
cmp
into
jae
cmp
mov
sbb
mov
lahf
int3
mov
pop
add
dec
sbb
adc
and
shll
sti
xchg
scas
orl
into
push
xchg
or
fwait
mov
ds
push
nop
cmp
push
fisttps
pop
push
or
mov
mov
test
push
les
push
jg
pusha
mov
hlt
sbb
out
test
pushf
mov
inc
cmp
mov
out
std
in
scas
ja
add
cmp
or
pop
sbb
push
mov
ss
adc
pop
mov
inc
sar
jne
push
js
jne
in
and
in
mov
ja,pn
sti
fnstenv
arpl
loopne
inc
xor
out
mov
xor
repz
mov
fidivrs
insb
sub
push
cltd
mov
std
and
sbb
cmp
sub
es
les
or
rcrb
dec
mov
xchg
inc
aas
sbb
cmc
jns
mov
adc
repz
mov
outsb
fnstenv
push
arpl
jbe
push
xor
xor
push
lods
pop
fdivl
loopne
inc
inc
mov
aas
mov
jae
jmp
mov
popf
std
or
xor
cld
jmp
mov
cwtl
sbb
xor
xor
xor
das
data16
mov
push
cmc
cmp
mov
push
mov
loop
aas
adc
nop
mov
das
sti
xor
pop
repz
lret
subl
popf
xchg
and
push
sbb
adc
loop
call
cltd
jb
or
mov
jp
ret
push
push
shlb
adc
sbbl
roll
cmp
or
mov
popa
mov
fisubrs
fs
idivb
js
sbb
lcall
push
out
jns
dec
adc
addr16
cltd
inc
xlat
and
loopne
hlt
lret
jle
pushf
push
mov
enter
inc
icebp
cmpsb
pop
mov
add
enter
pop
outsl
hlt
jecxz
mov
fucomip
out
pop
xchg
push
fcompl
sbb
mov
push
inc
cmp
cmc
dec
inc
lods
add
mov
leave
mov
stos
dec
gs
pop
dec
cmpsl
sbbb
fldcw
mov
sub
call
or
inc
stos
int3
cwtl
movups
outsb
sub
pop
cmp
jg
or
jne
mov
mov
test
inc
cmp
arpl
and
popf
je
dec
dec
repz
stos
cmpsl
xchg
pop
inc
fwait
mov
imul
test
fcom
mov
lcall
fwait
or
cmp
ja
and
arpl
in
test
pop
mov
or
clc
arpl
mov
xor
sbb
je
xor
adc
insb
push
xchg
stos
aas
or
pop
rcr
push
scas
and
and
pop
add
es
add
xchg
es
jmp
add
inc
loope
or
push
inc
or
sti
dec
nop
sub
sub
lds
ret
int
ret
je
cmp
xor
cmpsb
mov
mov
enter
pop
cmp
sbb
dec
in
sub
aad
loop
lahf
stos
inc
shlb
or
add
rcrb
inc
rorb
push
into
iret
pop
negb
push
out
ficoml
dec
test
adc
pop
mov
jmp
or
sbbb
xchg
xchg
ret
cmp
jge
mov
and
jmp
clc
stos
xchg
neg
ret
sub
sub
bound
jge
not
mov
pop
lods
mov
rcrb
inc
mov
ja
fisttps
jbe
pop
rcrb
std
dec
xchg
jl
hlt
subb
leave
ja
sbb
lret
and
pop
cmp
fs
xchg
mov
scas
in
mov
mov
mov
sub
movsl
dec
test
pushw
dec
icebp
jle
and
jno
mov
xchg
fmull
loopne
mov
cmpsb
and
fs
ja
repz
sbb
mov
lea
sahf
sbb
jo
aas
add
mov
xor
es
mov
add
push
ds
cmp
jae
orl
xchg
pop
mov
cmp
and
pop
mov
and
movsl
jle
dec
xchg
mov
ja
dec
sbb
jno
or
push
nop
mov
ror
repnz
clc
test
mov
jo
jg
mov
xchg
loope
push
add
dec
mov
mov
lcall
shr
insb
insl
test
sti
outsb
mov
and
mov
mov
adc
sbb
clc
xor
xchg
cmp
cmp
fs
cmp
je
add
ret
movsl
mov
add
clc
into
dec
sub
mov
leave
adc
lds
ret
pop
loopne
pop
mov
dec
shll
cwtl
fs
xor
mov
mov
je
rcr
sub
mov
cmp
loope
out
out
int
jg
out
pop
sub
pop
repz
dec
cmp
jo
push
dec
jbe
cmp
mov
loopne
cmp
add
xchg
test
push
jle
mov
loop
rcr
mov
les
adc
add
pop
aad
es
jp
in
cmp
inc
fadds
fcomp
jbe
mov
adc
out
mov
in
xor
xchg
push
xlat
enter
xchg
jp
outsl
sbb
cld
jg
sarl
and
scas
decl
andb
clc
mov
adc
dec
nop
stos
mov
jb
pop
sub
rcrb
test
pop
aas
inc
jge
shll
test
imul
out
mov
aas
add
xchg
shrb
mov
pop
fidivrl
mov
sti
pop
mov
mov
enter
mov
cld
jge
push
push
sbb
inc
jmp
test
aad
xor
adcb
xor
dec
iret
cli
dec
mov
sti
out
mov
jo
push
sarl
adc
jp
and
xor
push
inc
pop
and
jne
filds
mov
mov
pop
push
jae
jl
scas
inc
push
jno
insl
push
lods
mov
xor
or
je
mov
mov
add
in
mov
rorl
add
sub
addb
push
ss
mov
sbb
fwait
adc
std
enter
jl
lods
cltd
lock
cmp
jne
mov
sbb
dec
aaa
cli
adc
mov
inc
loopne,pt
enter
sub
mov
stos
mov
mov
sti
or
out
dec
xchg
into
and
mov
mov
adc
fimull
push
movsb
ret
popf
mov
adc
arpl
mov
push
jmp
arpl
and
imul
jno
sbb
push
pop
shll
aad
cmp
mov
pop
mov
daa
pop
nop
adc
or
out
inc
pop
fndisi(8087
xor
sbb
xchg
and
sbb
jnp
mov
push
aaa
out
inc
jae
repz
insb
cwtl
sub
fstps
add
cmpsl
xchg
xlat
aad
jge
pop
adc
push
es
outsb
and
lcall
xchg
mov
movsb
xchg
ret
jge
cmp
js
ja
addl
sub
inc
xchg
dec
ja
mov
mov
test
jns
fnstcw
mov
fcomps
cmp
sbb
and
clc
in
call
mov
dec
mov
jmp
and
pop
sbb
cmp
sub
and
xor
je
jo
dec
cld
mov
adcl
ret
iret
scas
jo
push
out
int
in
fdivs
mov
imul
pop
sub
fbstp
jbe
shrb
push
movsb
jno
inc
call
ret
dec
in
jo
and
mov
sbb
jae
imul
push
mov
mov
mov
pop
dec
mov
sbb
shrb
xorb
jns
mov
dec
mov
and
insb
in
fmuls
cmp
mov
das
add
ds
cmp
or
aad
pop
and
xor
or
jo
and
cmp
adc
test
add
lock
add
mov
arpl
stos
sbb
adc
lock
icebp
push
pop
movsb
orl
setb
pop
sbb
sahf
xor
inc
mov
mov
adc
fldenv
cmp
mov
js
mov
loope
sub
popf
jbe
dec
test
dec
fmuls
fiadds
cmc
fdivrl
scas
dec
pop
out
mov
rorb
cli
sbb
int3
inc
or
xor
and
shr
lret
dec
in
cld
outsl
rolb
std
sub
movsb
lods
mov
call
mov
adc
mov
cwtl
nop
pop
add
lock
shr
add
into
adc
xor
sbb
bound
out
push
push
mov
or
add
in
inc
mov
and
adc
jmp
test
test
inc
imul
or
dec
mov
jg
pop
mov
push
pop
sbb
mov
fwait
cli
int
sub
sub
lahf
jmp
insl
adc
mov
mov
xor
imul
sub
out
hlt
mov
jp
xchg
stos
lock
cmp
mov
inc
call
push
xchg
aam
xor
shrb
inc
and
mov
or
shrl
jbe
or
mov
aaa
mov
shll
out
jle
push
cmp
mov
addr16
xor
mov
mov
popf
add
or
cmpsl
adcl
ljmp
in
mov
je
pop
or
ja
inc
jno
leave
cmp
out
jno
cmpsl
add
stos
in
mov
jno
repz
pop
jle
shl
cs
mov
repz
rcl
addb
cmp
mov
mov
ficompl
fsubrl
test
imul
sub
sub
push
mov
movsb
jg
jno
es
repz
nop
mov
cmpsb
pop
and
jge
xor
xor
sar
fnstcw
cmp
mov
fadds
sub
jne
push
fnstsw
xlat
push
insl
aam
inc
lods
mov
and
pop
jge
mov
test
push
mov
push
gs
cld
and
fists
test
sbb
fisubl
xchg
test
mov
in
push
sub
mov
push
in
insl
add
cmpsl
cmp
sbb
lret
out
rcrl
scas
mov
or
jp
jno
xchg
sbb
dec
pop
adc
les
test
roll
sub
cli
jg
popf
mov
xor
mov
inc
adc
push
daa
outsb
dec
inc
fwait
popa
addr16
popa
dec
mov
cli
mov
lcall
lea
and
mov
sub
or
lcall
push
cmc
rcrb
repz
loopne
stos
data16
add
adc
and
insl
xchg
icebp
mov
int3
or
cmc
mov
int
repnz
mov
pop
mov
iret
mov
inc
inc
sub
mov
nop
test
mov
scas
lds
add
mov
pushf
jbe
cmp
cld
arpl
cmp
cld
and
push
ja
rcrb
pushf
xor
push
cld
inc
cmp
imul
nop
mov
out
shrl
andb
pop
sub
out
cmp
xor
mov
push
jp
repnz
xchg
xchg
fwait
ja
add
push
in
hlt
shrl
aas
out
inc
sbb
mov
xor
inc
push
or
inc
cmp
and
rcpps
adc
and
add
push
dec
test
or
fcmovbe
shlb
xor
lods
mov
mov
div
test
push
out
into
pop
subb
outsl
mov
js
test
les
dec
sbb
push
mov
fidivs
push
inc
fidivrs
je
cld
and
lods
inc
ret
mov
fcmovb
in
ret
pandn
into
ljmp
add
mov
insb
ljmp
clc
push
shl
pushf
sbb
pop
stos
mov
add
sbb
jae
popa
xor
fidivs
sub
mov
movsl
mov
dec
inc
mov
enter
in
add
mov
or
xchg
push
mov
mov
faddp
stc
mov
dec
mov
jns
adc
test
cmp
xor
test
cmp
outsl
mov
data16
push
fists
xorl
lcall
outsl
hlt
lock
mov
cmpsb
sub
xchg
jae
cmc
jne
jbe
pop
pop
in
fstl
notb
pop
outsb
inc
repnz
lcall
add
stos
lods
es
stos
cld
test
xchg
in
jmp
cmc
int
push
dec
add
pop
mov
leave
das
jp
push
cmpsb
mov
popf
test
les
jbe
andb
cmpsb
mov
fists
fldenv
mov
sahf
rep
cld
push
cmp
aad
int3
repz
push
iretw
aas
ja
pushf
cltd
adcl
add
icebp
jno
mov
xchg
popa
leave
jnp
mull
not
mov
dec
jae
out
daa
stc
int3
adc
mov
sub
inc
push
jmp
fmuls
dec
mov
and
sub
push
gs
fisubrl
cmp
sub
lds
cmpsb
std
dec
fdivs
push
sti
jg
push
xchg
data16
test
sbb
addr16
adc
add
mov
movsl
bswap
popf
jmp
xor
jne
insb
or
inc
fdivl
pop
int3
cmp
add
ret
in
mov
leave
and
pop
push
cmpl
cmc
sub
lcall
adc
pop
dec
pop
mov
aam
xchg
mov
pop
std
jp
and
int
dec
inc
sbb
cwtl
fisubl
cmp
rcr
and
bound
in
ljmp
and
jnp
push
xor
push
dec
std
into
addr16
or
scas
addr16
add
in
es
out
push
xor
dec
out
mov
cmp
jae
imul
gs
mov
notl
clc
stos
icebp
mov
imul
xchg
and
xchg
xor
or
mov
dec
push
cmp
and
mov
movsb
and
subl
mov
shr
push
dec
mov
jle
test
sbb
jl
rcll
test
and
popa
sahf
and
add
jle
arpl
ss
lret
sbb
push
push
push
fwait
inc
bound
nop
enter
and
and
mov
mov
insb
xchg
dec
mov
addb
test
iret
mov
dec
push
icebp
jno
vmwrite
dec
pushf
sarb
mov
stc
cmp
sbb
addr16
add
lea
or
subb
xchg
fsubrl
push
call
loope
cmpsl
iret
aam
nop
lea
mov
sti
jno
sub
ljmp
xchg
lds
or
pop
dec
add
cmp
jg
jo
in
add
sbb
sarb
fdivr
icebp
sub
ds
cmp
fistps
add
mov
shrl
movl
pop
aas
mov
pop
push
ja
loop
add
fwait
xlat
out
pop
mov
push
xchg
out
inc
cmp
rclb
cli
scas
or
push
in
pop
xchg
pop
xlat
cmp
mov
sti
js
xor
inc
icebp
xchg
jecxz
or
adc
mov
xorl
or
outsl
push
or
scas
call
lea
lods
sub
dec
dec
sub
pop
inc
mov
repnz
js
cwtl
jb
movl
adc
mov
push
and
cmp
cmc
push
lret
shrb
repz
arpl
test
adc
jb
fcoms
sarb
push
sbb
push
shlb
xchg
test
daa
and
push
mov
repz
outsb
mov
or
mov
xlat
mov
dec
mov
and
inc
lea
in
xchg
mov
movsb
xchg
call
sub
sbb
ja
pop
jbe
mov
push
push
lds
pushf
in
repnz
lahf
dec
rcrl
jb
push
out
dec
pushf
sbb
pop
lods
fidivs
mov
cld
mov
into
mov
mov
xor
rorb
mov
mov
push
sbb
enter
add
insl
loopne
dec
test
adc
inc
push
in
jmp
mov
push
addr16
stc
loopne
scas
adc
mov
xor
fbstp
jae
cwtl
xchg
mov
lahf
into
in
inc
lock
sbb
cld
aad
call
xchg
lahf
and
ret
dec
daa
daa
movsl
hlt
stc
insb
aad
int
shl
fildll
pop
push
mov
aas
faddl
fsubl
mov
pushf
lods
mov
dec
in
rcrb
xchg
pop
movl
fs
xlat
jp
inc
loopne
fwait
sub
insb
cmpb
and
pop
ret
mov
negb
int3
or
movsl
fists
sbb
jecxz
dec
mov
add
outsl
jp
pop
out
jnp
aam
shl
leave
stos
or
cmc
je
mov
sbb
mov
incl
fsubrs
ja
out
xchg
push
test
mov
or
pop
pop
cmpsb
jo
pusha
ret
jge
and
std
or
lods
pop
shlb
loop
leave
push
and
sub
xchg
cld
out
out
cmp
inc
cmp
setg
cs
lods
cmp
mov
jg
push
or
mov
or
and
pop
sub
adc
aaa
mov
bnd
testb
mov
mov
inc
or
dec
les
sub
ss
or
ds
xor
stos
push
jnp
dec
sbb
bound
cld
and
test
lret
sub
inc
jnp
mov
ficoml
mov
jno
lret
lds
and
outsb
add
jmp
in
xor
rclb
cmp
jl
mov
fbld
jae
loopne
aam
dec
movsl
adc
insl
jp
scas
fucomp
and
inc
testb
nop
mov
add
sbb
pop
add
xor
push
and
mov
inc
iret
test
jae
cmp
mov
data16
sub
mov
fs
jo
mov
sub
add
stos
jnp
cld
add
outsb
pop
test
inc
xchg
or
adc
cmp
stc
movsb
xchg
das
ljmp
mov
jl
sbb
sbb
addr16
fbstp
sbb
insb
scas
imul
inc
hlt
imul
out
cmp
imul
inc
sbb
call
aad
jp
pop
ljmp
in
fidivrl
xor
inc
cmc
jb
jle
cld
outsb
xchg
dec
jnp
push
and
fimull
pop
mov
lea
xor
jl
or
enter
mov
mov
add
mov
cmp
pop
mov
push
movl
imul
das
adc
inc
xchg
lret
inc
cs
mov
cli
inc
insl
push
call
push
sbb
js
cmp
inc
mov
jno
xor
scas
mov
sub
mov
lea
mov
inc
push
lahf
int
out
add
lods
xchg
xchg
stos
pop
xchg
mov
jmp
pusha
xchg
sbb
ja
addl
lods
je
mov
sbb
adc
lods
scas
jno
pop
lret
bound
sub
ret
test
mov
fwait
xchg
pop
mov
adc
adc
das
fdivrs
stos
jae
cmpsb
push
daa
ja
or
rcrb
push
jno
fidivl
int3
push
aas
hlt
ret
pop
xor
test
inc
push
outsb
adc
dec
pop
loop
loope
xor
mov
sub
test
xor
mov
jmp
cmp
mov
dec
je
pop
repz
sbb
jle
push
mov
call
xchg
outsb
sub
xchg
cmp
mov
test
popa
cmpsl
frstor
mov
add
fadds
fs
mov
push
scas
cmpsb
push
gs
fisttps
cli
and
push
adc
push
push
jb
inc
les
popa
imul
cltd
ljmp
pop
sub
pop
lcall
mov
xchg
xor
add
mov
push
cld
pop
stos
std
test
pusha
jbe
daa
jae
xchg
mov
shll
pop
ss
push
std
mov
mov
shll
sti
xor
jne
fcompl
mov
jp
rclb
sti
inc
sbb
jmp
loop
outsb
mov
insl
and
in
push
cmpsb
push
xor
mov
jnp
mov
mov
stos
mov
push
iret
fs
test
inc
rcll
xchg
inc
adc
ret
add
fnstenv
int
out
arpl
popa
cli
rcrb
jmp
cmp
out
mov
ds
cld
cmpsl
rclb
fsubrs
xchg
fs
movsl
mov
mov
push
loop
lods
or
dec
xchg
outsb
jnp
inc
lock
jnp
scas
es
pop
or
push
jb
xchg
sbb
iret
int
or
arpl
cwtl
sub
bnd
aam
out
ret
ja
inc
sarb
divps
sub
sub
leave
push
cmpsb
push
fsubrl
ljmp
or
cwtl
mov
xchg
orl
push
xor
std
push
cld
imul
mov
repz
mov
or
xor
inc
mov
jle
cmp
es
add
jo
lds
jecxz
pop
lcall
push
dec
inc
xchg
aas
dec
xchg
arpl
push
lret
lock
adc
shll
sbb
and
fwait
loope
rorb
cmp
sahf
stos
jg
cld
sbb
jne
add
jge
rclb
test
xchg
int
adc
lahf
xor
inc
cmp
pop
movsl
adc
add
xor
in
stc
inc
aaa
sub
sbb
in
sbb
stos
lret
dec
dec
adc
je
mov
lahf
pop
push
notb
hlt
out
arpl
cmp
push
pop
push
and
jnp
nop
mov
gs
jg
fistps
fisubrs
out
inc
inc
mov
icebp
jmp
ret
or
lods
or
or
push
mov
and
pop
sub
pop
scas
xchg
jo
aam
add
inc
cmp
cmpsl
adc
mov
sbb
leave
lret
adc
clc
fs
mov
push
in
or
mov
repnz
frstor
jl
push
popf
divl
jne
dec
adc
or
inc
mov
mov
and
testl
push
insl
jae
testl
inc
inc
loop
loopne
cmc
pop
lods
sti
pop
inc
stc
push
in
mov
out
ds
stc
mov
jnp
add
mov
inc
or
sbb
mov
sub
lods
mov
iret
addr16
loopne
mov
pop
fnstenv
add
xlat
cmp
jecxz
fadd
or
imul
lods
enter
or
pop
or
jg
mov
insl
xlat
cli
and
orl
pusha
aam
push
jecxz
lock
dec
adc
dec
outsb
sub
leave
repz
add
cmp
int
notl
fiaddl
notl
mov
lds
dec
into
adc
sub
cwtl
stc
pop
cltd
leave
out
adc
and
pop
into
or
or
call
or
mov
jg
pop
dec
cmpsb
imul
std
xor
mov
cmp
insb
in
jno
or
push
cs
ja
jle
jg
push
sub
les
in
ja
fcmove
and
inc
and
adc
push
sbb
ret
or
sub
adc
push
andb
mov
xor
test
xchg
push
orl
fimuls
mov
repnz
fnsave
outsl
fldt
out
out
sahf
push
cmpsb
xchg
popf
hlt
mov
test
addr16
ss
shl
xor
out
repnz
xchg
dec
xchg
mov
inc
ficompl
pop
mov
push
popf
frstpm(287
cmc
sub
pop
jno
mov
insb
stos
ret
mov
push
inc
cli
cmp
lret
cmpsl
xchg
ret
mov
jne
and
cmc
jle
lret
mov
mov
adc
sbb
mov
jecxz
mov
and
stc
stos
jo
loop
aas
jl
pop
out
mov
ds
mov
mov
mov
and
sbb
xlat
hlt
mov
inc
push
cmp
and
pop
pop
jnp
inc
rorb
cli
jge
jno
pop
pop
test
jecxz
pop
or
inc
loope
mov
out
mov
jmp
ret
aad
dec
pop
cwtl
push
xor
cwtl
cmp
or
mov
daa
ja
pslld
pop
adc
xor
add
mov
adc
ret
mov
rclb
xchg
jmp
arpl
mov
arpl
std
xchg
mov
jns
sbb
sbb
enter
push
lods
aam
insl
mov
adc
pop
imul
mov
in
addr16
loop
pop
ds
push
fnsave
movsb
xchg
loop
testl
sbb
adc
add
jge
outsl
jnp
xchg
dec
pop
jecxz
mov
mov
pop
xor
lcall
add
push
lret
ljmp
in
lods
pushf
fidivl
jmp
push
movsl
jo
cmp
pop
push
cmp
shl
jge
jle
sahf
sarw
pop
daa
sub
push
lods
ror
sub
push
rcll
cmp
mov
xchg
das
inc
int3
sub
jg
adc
loopne
cmp
mov
mov
fidivrl
jne
movsl
jo
xor
mov
mov
cmpsb
fimuls
mov
push
and
int3
adc
popf
mov
add
mov
mov
inc
mov
and
sub
jno
mov
rcll
idiv
cmp
aad
push
mov
ds
xor
inc
ljmp
out
data16
loope
or
sbb
aam
add
cwtl
data16
in
ljmp
xor
movsb
addr16
fists
adc
jo
dec
rclb
cmp
push
jo
subl
push
das
mov
xor
pop
pushf
fucomip
xor
mov
fists
dec
mov
and
aas
out
jae
ret
mov
sub
or
sub
cmp
iret
daa
hlt
push
add
dec
mov
push
mov
out
rolb
in
lods
push
inc
mov
repnz
test
fwait
pop
popa
jb
sbb
int3
lcall
jp
test
dec
repnz
inc
jg
mov
push
lods
sbb
clc
mov
cmp
mov
icebp
enter
inc
cmpsb
push
sbb
add
lea
in
xchg
adc
sbb
sbb
sub
lahf
scas
jmp
mov
cmp
inc
lcall
out
sub
xor
in
xchg
xor
cmp
mov
xchg
aaa
bound
into
cmp
and
test
jb
pop
sub
jno
out
mov
repz
rorl
mov
mov
fstps
aam
push
push
scas
xor
rorl
add
cmp
add
insb
cmc
test
aad
add
mov
dec
rcr
loope
data16
into
lret
cwtl
pop
cwtl
jecxz
lret
pop
fcmovb
ret
adcb
pop
bts
jno
fnstenv
shll
mov
inc
push
inc
in
adcb
dec
leave
fsqrt
mov
aas
inc
mov
and
dec
mov
lret
and
jbe
mov
mov
sub
push
sbb
sub
cmp
adc
insl
pusha
fiadds
xchg
int3
jmp
mov
divl
fs
adc
jno
sbb
add
push
std
inc
sbbl
or
sti
pop
pop
aaa
scas
mov
sub
xor
daa
mov
rcrl
fildl
cmp
cmc
inc
loop
in
jne
call
das
xor
dec
fsubr
push
fmuls
pop
inc
add
jb
or
adc
and
or
addr16
cmc
iret
push
pushf
jle
xor
insb
aaa
adc
jp
and
sub
in
inc
push
cmp
ljmp
mov
movsl
data16
xchg
inc
rcll
daa
popa
les
lds
mov
mov
jnp
mov
adc
ds
aaa
fisubl
dec
dec
int
loop
push
adc
pop
push
ficompl
popf
aad
push
arpl
call
jne,pn
xchg
ds
repnz
rorl
dec
jbe
pop
add
in
pop
enter
daa
and
cmovno
je
push
aam
fisttps
xor
add
mov
popa
pushl
icebp
imull
sti
push
lret
fnsave
fistpll
sbb
sub
mov
shrl
jge
test
test
orb
lahf
rcl
pop
fstpl
sub
dec
mov
ret
out
pop
rorb
ret
outsb
lret
test
dec
xor
fwait
sbb
mov
cmp
sbb
sbb
xor
pop
and
jl
cmpsl
mov
hlt
loopne
jge
inc
test
arpl
push
push
nop
xor
icebp
cmp
iret
flds
imul
repz
iret
in
out
repnz
cmp
jbe,pn
mov
xchg
mov
push
js
dec
test
fbstp
push
cli
inc
insb
cmpsw
cltd
adc
shll
lods
in
xor
aas
dec
scas
cmp
mov
mov
in
stos
mov
pop
mov
shrb
ds
mov
push
pop
and
inc
clc
mov
mov
and
push
adc
sbb
push
pop
lods
cli
gs
inc
adc
mov
push
insb
out
in
imull
lret
xor
into
mov
mov
pushl
icebp
out
dec
inc
mov
mov
inc
cmp
sahf
and
lahf
rorl
pop
enter
cwtl
stos
add
cli
mov
jno
mov
ljmp
sub
add
daa
lret
mov
jo
lods
xor
push
mov
xchg
cli
fbld
es
inc
mov
pop
iret
out
mov
pop
mov
sub
lock
push
rcrb
ficomps
loopne
stos
outsl
mov
scas
aas
sub
push
push
fs
xor
mov
cs
add
inc
aam
imull
and
adc
int
mov
andb
cmpsl
xchg
hlt
and
and
and
cmpb
aam
std
call
ja
xor
shll
enter
xchg
scas
cmp
les
test
ret
shlb
xor
lret
pop
lcall
pop
stc
xchg
inc
out
imul
es
mov
call
xchg
lock
sarl
push
inc
jg
out
xor
cmp
test
mov
bnd
lret
das
mov
jnp
aas
es
pop
pop
xchg
fsts
xorl
ds
test
xor
fistpl
jae
jmp
movsb
int
inc
loop
lea
sbbl
jecxz
cmpsl
adc
mov
roll
adc
xor
orl
dec
push
lods
xchg
into
orl
pusha
push
sbb
jg
lret
pop
leave
roll
pop
xlat
jb
jge
rcrb
loopne
movsl
xchg
stc
xchg
mov
imul
aad
adc
mov
or
scas
outsb
add
or
divps
sub
jmp
push
sbb
add
shll
push
cs
imul
test
inc
sarb
dec
in
fistpl
int
lahf
les
test
jmp
mov
aaa
int
decl
mov
or
jmp
decl
test
cmp
idivb
lret
inc
cli
mov
aad
ljmp
stos
mov
cs
aad
sahf
ss
sbbb
ljmp
mov
jae
push
cli
lods
nop
ret
icebp
gs
inc
mov
jecxz
js
les
fisubs
inc
dec
lods
lds
push
cld
es
cmp
into
les
iret
fcomps
dec
or
repnz
jbe,pn
ljmp
enter
sbb
mov
arpl
cs
cmp
and
clc
jns
mov
inc
inc
cmp
test
clc
xchg
loopne
lcall
adc
aaa
inc
or
js
shrb
adc
fisubrs
mov
frstor
clc
test
and
xchg
lret
lods
scas
cwtl
push
aad
bnd
fldl
shlb
scas
adc
jns
dec
pop
hlt
sub
inc
lahf
pusha
and
shll
mov
and
cli
sbb
sub
push
dec
test
fisubl
mov
push
mov
rcll
iret
jge
dec
repz
out
stc
add
xor
jp
or
mov
in
sbb
xchg
dec
dec
cmp
rolb
pop
mov
std
jmp
loopne
cli
fwait
out
popa
rorb
cmpl
push
mov
out
cmpsl
and
pop
sarb
inc
std
test
add
mov
cmp
sub
or
pop
adcb
add
pop
loopne
cwtl
mov
push
or
repnz
mov
sub
or
pop
scas
mov
cmpsl
subl
movsb
test
xor
cmp
adc
xor
int3
or
imul
stos
fsubs
dec
push
cmp
xor
enter
mov
fldlg2
inc
dec
and
cld
xor
or
adc
insb
test
xor
cmp
pop
scas
inc
push
or
outsb
test
mov
xchg
mov
mov
jge
pop
bnd
out
or
std
repnz
push
leave
pop
push
out
and
clc
cmp
sbb
icebp
inc
jo
in
hlt
and
scas
lret
dec
xchg
push
test
fsincos
rcr
cmpl
mov
sub
mov
pusha
call
xor
and
jo
jne
push
cmp
cmpsl
and
and
aas
dec
sahf
cltd
adc
sub
xor
in
mov
jbe
dec
lock
mov
lret
ds
jmp
mov
xor
xchg
push
pop
jg
loop
orl
adc
xchg
and
sbb
sahf
dec
adc
push
lret
cmp
xor
loopne
pusha
stos
xor
mul
sub
xor
test
stos
fdivrl
movsl
cmp
adc
test
popf
enter
cmp
sti
leave
mov
xor
cmp
sbb
out
pop
aas
pop
mov
pusha
inc
and
shl
shrb
pop
mov
cmp
mov
mov
jge
je
outsl
jl
inc
pop
sub
imull
push
bound
xchg
cmp
lcall
mov
mov
dec
imul
fdivrl
xchg
int3
fsubs
push
imul
inc
mov
or
and
call
loopne
das
daa
jae
addb
dec
sub
test
lahf
push
fldenv
cld
lods
dec
mov
mov
mov
lods
sbb
sub
xor
pop
out
insb
cmp
jo
pop
mov
rcr
add
shrb
dec
adc
push
xchg
in
mov
neg
xor
push
sub
xor
mov
fdivp
sbb
fwait
hlt
addr16
mov
loopne
aas
pop
je
mov
pop
out
and
jmp
cmp
and
test
adc
and
into
outsl
pop
cltd
or
nop
stos
xchg
jns
xor
fwait
jle,pt
pusha
cmp
in
xchg
fs
popl
and
orb
adc
mov
cmp
icebp
adc
out
mov
leave
and
icebp
sub
sub
loope
enter
xchg
or
xlat
xchg
stos
jp
mov
adc
fistl
dec
or
jae
int3
cmp
lea
sbb
aaa
lock
repnz
stc
or
aam
xchg
cmpsl
dec
xchg
insl
shl
push
jg
push
inc
mov
cwtl
dec
pop
hlt
xchg
mov
xor
imul
fidivl
xlat
ja
aam
out
popf
push
repnz
daa
aas
xchg
ljmp
mov
sub
fbld
xlat
push
adc
mov
push
insb
loopne
mov
cmp
int3
lea
gs
rclb
notl
lahf
mov
daa
and
rcll
sbb
andb
xor
mov
mov
xor
pop
iret
adc
or
dec
pop
hlt
xor
scas
jmp
dec
mov
cwtl
push
add
xchg
sub
pop
and
fstpt
pop
or
cli
lods
int
popa
inc
or
add
sarl
push
cld
sbb
outsl
push
aas
jle
sbb
jg
sbb
fdivs
adc
loopne
xor
data16
dec
outsl
sub
cmpsl
push
jnp
pop
nop
dec
mov
pop
lcall
adcb
jnp
or
inc
and
popa
mov
test
roll
xchg
ja
mov
xor
cmpsl
out
pop
xchg
fstps
outsl
in
fwait
sarb
adc
iret
out
std
sbb
push
dec
cmp
loope
inc
xchg
or
jo
lea
push
mov
aad
inc
mov
js
jp
adc
das
int3
mov
jl
push
or
decb
cmp
and
loopne
add
dec
add
and
add
pop
add
in
push
shrl
cmp
add
aaa
stc
out
pminub
jl
xchg
imulb
addr16
fisubrl
add
inc
testl
or
sub
nop
popa
stc
dec
dec
imul
sbb
icebp
test
sbb
mov
clc
pop
push
test
daa
xchg
inc
test
ficoms
mov
add
pop
push
cmpsl
pop
movsb
pop
xchg
sub
stos
sbb
lret
cld
incl
pop
jno
outsb
inc
int
push
and
push
adc
cmp
mov
cmp
xor
shlb
adc
cmp
and
push
push
xor
cmp
xor
push
add
sbb
mov
ret
stc
jne
jns
loopne
pusha
mov
inc
mov
jecxz
dec
push
adc
mov
dec
add
rolb
xchg
out
cmp
inc
testb
add
or
jge,pn
aam
fildll
dec
sbb
imul
dec
push
inc
and
mov
jle
sub
or
fwait
xor
int3
sub
or
mov
loopne
call
call
add
stos
lcall
into
push
popa
pop
adc
jge
cmpsb
or
clc
ficoms
rclb
jp
pop
popf
xor
call
adc
lods
test
xor
cld
lea
or
in
lds
adc
xchg
or
movsl
jp
ret
ss
xchg
fistps
add
xor
cmc
sarl
jle
inc
inc
mov
fiadds
dec
pop
sub
xor
sti
add
pushf
mov
fnstcw
adc
jb
popf
lret
sub
inc
pop
cld
aaa
cld
or
orb
idiv
mov
jb
jmp
jnp
mov
cmp
icebp
ja
pop
lret
repnz
outsl
data16
in
lods
cld
sub
push
fdivrs
loopne
xchg
mov
gs
and
fldt
push
inc
clc
jmp
xchg
adc
aas
stos
stc
push
into
xor
cli
add
dec
and
mov
sub
pop
ret
pop
pop
sub
jb
jo
pop
fldcw
testl
cmc
sahf
sar
dec
adc
fs
int
sbb
mov
inc
stos
jnp
aaa
mov
dec
mov
mov
out
cld
bound
inc
in
sahf
subb
aam
push
mov
repnz
imul
dec
pusha
loope
mov
dec
or
sbb
mov
rorb
lret
adc
lcall
in
mov
sarb
movsl
or
or
lret
pusha
orl
into
je
mov
jle
mov
push
js
xor
sbb
xchg
mov
xchg
jae
jne
mov
or
push
sbbl
xor
jae
es
xor
inc
loope
dec
xor
rol
pop
mov
fs
dec
test
and
or
mov
and
jo
mov
add
sbb
fbstp
mov
push
out
sarb
jo
push
movsb
dec
popf
fwait
mov
sub
push
inc
push
hlt
xchg
repnz
subl
xchg
fistps
and
jne
sahf
ret
popf
add
mov
push
std
inc
inc
rcl
pusha
movsb
dec
pop
lret
inc
mov
fs
or
push
or
sub
push
cwtl
aam
fcomi
xor
mov
inc
sahf
sub
mov
out
out
es
or
ja
fsubp
sahf
sbb
pop
push
cmpsl
je
lret
fcomps
or
pop
xchg
dec
mov
test
push
push
mov
aaa
ror
popf
fdivs
sub
cli
push
push
push
pop
call
icebp
mov
es
cmp
pop
leave
sub
imul
sub
jne
mov
int3
pop
je
xchg
and
mov
adcl
adc
rorb
test
call
loopne
or
cld
into
or
jne
mov
lea
and
xchg
sbb
std
mov
push
pop
xchg
add
and
pop
or
xor
leave
hlt
sbb
pop
iret
dec
xchg
push
adc
es
xor
xchg
dec
out
test
inc
sub
push
je
ljmp
mov
xor
jle
outsl
sbb
test
test
sbb
in
cmp
arpl
mov
lcall
inc
ja
mov
scas
inc
les
sbb
popf
ja
pop
cwtl
adc
add
cltd
int
popf
pop
cmp
jo
popa
adcb
jle
sbb
loopne
lahf
and
mov
and
cld
in
pop
stos
mov
sti
jb
or
mov
inc
dec
mov
aam
rolb
arpl
aas
mov
test
sbb
push
cmpsl
mov
das
in
shrb
xor
lds
xchg
std
lret
jecxz
fs
mov
push
sub
int
pop
cmp
inc
sbb
sbb
fldcw
in
je
out
popa
shll
xchg
lret
mov
test
movsl
rol
rcrb
mov
aad
cmpsl
int3
imul
xchg
insb
sbb
and
lea
sbb
in
out
jge
sbb
repz
fisubrl
jno
lret
ds
out
ja
test
ja
je
into
dec
test
sub
sub
add
push
adcb
dec
faddl
icebp
jg
and
shrl
fiaddl
jns
out
bound
cmp
into
mov
xlat
xor
dec
xorl
out
dec
mov
inc
sbb
test
mov
jmp
dec
push
sbb
fimuls
pop
pusha
add
lret
stos
imul
inc
andl
ljmp
fstpl
xchg
inc
fsubl
adc
ss
incb
andl
ljmp
fdivrs
scas
cli
jae
dec
push
dec
je
test
cmp
enter
imull
cmp
mov
lret
repz
jmp
pop
icebp
sbb
pop
rcll
mov
ret
adc
dec
jb
mov
cmp
mov
xchg
add
adc
mov
shlb
add
icebp
fbstp
pushf
popf
mov
and
das
or
push
mov
mov
pop
inc
lahf
mov
gs
cmp
xor
xchg
js
push
aas
xchg
sbb
push
ret
enter
pushf
or
inc
test
sub
sbb
jo
scas
or
pop
out
adc
sarb
ret
pop
scas
adc
push
inc
popa
or
cmp
adc
in
fdiv
pop
fildl
mov
xor
imul
jne
push
xor
mov
add
xor
imul
jo
out
sbb
in
pop
push
pop
and
faddp
lock
jecxz
aas
cmpsl
xchg
sbb
icebp
xchg
mov
out
adc
test
cmp
imul
add
cmpb
push
out
jae
ret
fwait
call
lea
imul
imul
shll
cli
daa
fistps
rcll
pushf
ss
orl
and
jnp
clc
adc
add
xchg
push
dec
mov
inc
jg
adc
les
push
cmp
jmp
inc
mov
or
std
cmp
mov
stc
das
fiaddl
fdivr
sbb
mov
xor
jne
iret
movsb
mov
cs
js
pusha
sub
dec
xlat
test
jg
mov
mov
jo
mov
jp,pn
std
mov
aad
je
cltd
lods
lods
stos
inc
mov
inc
sbb
jns
fwait
cmpsl
push
lods
and
mov
inc
adc
loopne
pop
mov
mov
mov
mov
movsl
push
xlat
dec
sub
shll
cmp
fdivs
sbb
and
cmp
push
leave
sbb
aad
leave
mov
inc
ret
xchg
mov
jmp
mov
push
xor
mov
pop
repz
filds
jg
mov
pop
inc
push
mov
sti
aam
pop
dec
inc
js
mov
push
jo
pushw
sub
lret
and
ret
mov
in
jns
sub
lret
inc
jmp
negl
and
icebp
jo
sbb
jb
and
fcoml
push
testb
ret
push
sbb
jno
and
fcompl
adc
xchg
shll
mov
std
sbb
lods
sbb
jge
xor
xchg
adc
sbbb
mov
ljmp
cs
stos
aaa
loop
repnz
adc
dec
leave
jae
jb
enter
out
sbb
cwtl
gs
dec
xor
pop
shlb
cld
fdivrl
xlat
xchg
test
mov
xchg
inc
stos
sub
ljmp
sub
mov
in
fbld
stos
test
and
lds
xchg
jbe
push
loop
inc
jmp
mov
cld
push
jmp
or
jo
mov
adc
fdivl
fs
sub
sbb
mov
cltd
cmp
cmp
sbb
ds
sbb
mov
adc
movb
sbb
fucomp
int
cld
adc
mov
sub
int3
imul
push
in
das
mov
xor
cmp
daa
das
pop
mov
incl
fcmovb
mov
push
outsl
scas
xchg
jp
xchg
mov
pop
mov
jns
iret
fs
jle
jb
stos
enter
sar
popa
outsb
mov
sbb
mov
push
cmp
xchg
rcrl
ret
xor
mov
mov
aas
adc
mov
add
mov
mov
adc
adc
pop
cmp
add
push
jns
xchg
and
dec
xchg
sub
nop
loopne
repz
shll
mov
movb
push
call
sub
scas
sbb
andb
sbb
lret
inc
js
insl
mov
jp
in
add
push
aam
insl
movsb
test
mov
xchg
pop
mov
pop
lahf
pop
push
lret
es
pop
add
in
and
sub
or
jnp
inc
cmpb
mov
int3
xchg
push
in
in
scas
aam
jo
inc
lahf
scas
inc
mov
ja
sbb
xor
xor
sub
rcrb
andl
xchg
lahf
mov
loopne
cmp
int3
stos
pop
jno
xor
jp
mov
cmp
sbb
pop
mov
push
out
inc
stc
mov
testl
sbb
ljmp
mov
pop
xlat
jbe
mov
mov
out
lret
aad
xor
inc
and
pop
cmp
fwait
inc
add
call
loop
add
clc
insb
mov
mov
push
jge
jns
loope
imul
sbb
xchg
arpl
andl
in
add
repnz
lcall
out
mov
lock
push
or
sub
push
or
sbb
add
sbb
xchg
cs
mov
punpckldq
mov
insb
inc
std
add
sbb
js
sub
fildll
push
push
icebp
add
and
pushf
jne
inc
adc
mov
cld
jp
push
sahf
mov
imul
jb
and
jne
enter
pusha
add
aaa
xchg
ja
xchg
es
jg
test
lret
pop
push
sti
jno
into
out
xchg
insb
dec
lods
cmp
jae
das
xor
push
mov
lret
je
call
and
int3
out
les
loopne
dec
lods
inc
ret
push
insl
aaa
cltd
xlat
mov
push
mov
incb
aam
into
nop
icebp
inc
mov
xchg
cwtl
mov
int
inc
sub
loope
test
jnp
outsl
bound
cwtl
push
jb
dec
cli
ss
movsb
xchg
pop
inc
mov
into
lea
imul
jb
movsb
shll
imul
imul
imul
inc
or
ret
mov
cmp
mov
xchg
insb
and
test
ja
cmc
inc
sub
adc
add
sub
sbb
in
clc
rolb
sub
pop
fists
mul
arpl
and
test
sbb
iret
inc
xor
daa
aas
sahf
push
in
inc
jno
mov
outsl
push
stos
jecxz
rcl
adc
aam
dec
imul
pop
push
jl
pop
and
adc
or
or
xlat
or
ds
fsubrs
loop
mov
push
subl
notl
pushw
repnz
dec
adc
jecxz
int
out
cmp
in
sbb
in
jecxz
cmpsl
aas
nop
iret
jmp
sbb
pop
cld
clc
movsl
xchg
jne
dec
es
or
and
repnz
in
and
sbb
sub
sbb
icebp
xor
pop
add
mov
pop
rolb
aad
jge
mov
stos
push
loop
push
arpl
repz
or
cwtl
insb
leave
xor
data16
mov
dec
sbb
xor
enter
loope
add
cmp
mov
loopne
aas
xchg
and
mov
add
insb
sahf
aas
fisubl
lds
add
in
xchg
inc
mov
or
mov
inc
xchg
stos
add
ret
insb
sbb
and
xchg
inc
mov
int3
sbb
push
jg
cmpb
mov
mov
mov
outsb
xor
mov
js
cmpsl
adc
inc
dec
jecxz
cmpsb
pop
test
clc
pop
and
stc
inc
ss
imul
jmp
outsl
add
mov
push
jne
inc
mov
dec
cltd
out
mov
scas
repz
pusha
sub
pop
bound
jge
mov
mov
out
data16
mov
push
and
pop
mov
cmp
insl
stos
jb
xor
inc
lret
dec
adc
sbb
nop
mov
lret
mov
clc
mov
inc
push
ret
mov
jae
subb
cmp
adc
outsl
xchg
inc
xor
das
scas
pop
and
xchg
xchg
jne
ja
fs
in
pop
sbb
jmp
decb
outsl
pop
iret
sub
ja
or
or
cmp
jo
mov
mov
push
das
cmc
inc
ljmp
fmuls
fmuls
mov
roll
imul
cs
sbb
xchg
cmp
push
cmp
leave
sbb
nop
js
fwait
repnz
dec
sbb
and
xor
or
cmp
cmp
xchg
filds
jno
mov
mov
sub
mov
cmp
xor
dec
mov
push
lcall
push
jecxz
loope
inc
fcmovnb
push
testl
or
adc
cld
aas
adc
sarl
xor
sub
jg
jl
push
sub
mov
cmc
out
dec
lahf
addr16
jo
inc
jmp
mov
jp
dec
es
sbb
insb
imul
out
fwait
mov
js
ljmp
push
outsl
adc
dec
lea
bound
in
dec
pop
insb
adc
je
leave
insl
js
mov
cs
push
fsubrp
out
jo
mov
insb
jmp
scas
mov
xor
cmp
xchg
sub
push
testl
mov
popf
pop
ds
pop
dec
insl
sub
sbb
adc
icebp
into
xor
xchg
inc
cld
ljmp
lret
and
stc
cmp
adc
ret
ret
mov
dec
cmp
ljmp
cmp
or
inc
sub
or
mov
xchg
inc
push
ret
sarb
adc
push
jge
lret
push
in
push
or
xchg
adc
push
mov
xor
jne
sbb
ret
je
nop
sbb
xlat
sbb
sti
push
and
inc
cmp
lret
xor
or
inc
mov
sbb
pop
test
icebp
mov
dec
lods
sbb
jo
gs
scas
out
sbb
jae
inc
rcll
stc
sub
mov
cmp
jo
dec
mov
fisubs
jmp
adc
fiadds
xchg
jo
xchg
lahf
pop
loop
sub
cmp
lcall
fbstp
add
jnp
xchg
xor
aad
fwait
and
scas
xchg
inc
push
in
mov
je,pt
adc
dec
jbe
mov
mov
adc
fcomi
cmpsb
icebp
in
pushl
inc
imul
pop
sbb
mov
sub
and
mov
dec
in
call
bound
bound
sbb
fisubl
shrb
inc
or
scas
inc
jle
adc
jbe
js
xchg
inc
push
pusha
xor
out
mov
out
daa
add
fcoms
mov
push
sub
mov
fcompl
or
jge
mov
ja
sbb
and
lret
sbb
and
mov
iret
test
push
out
sub
sbb
fs
inc
pop
xor
clc
and
popl
dec
or
cmp
mov
xchg
sti
cwtl
adc
xchg
xor
mov
jnp
cmpsl
or
repnz
out
jnp
sbbb
daa
jle
mov
mov
dec
ljmp
and
sbb
cmp
xchg
sbb
fisubl
mov
cmpsl
mov
jecxz
das
fdivrs
int
scas
add
notl
cmc
orb
push
daa
and
mov
adc
addr16
mov
stos
cli
jg
ss
and
imul
pop
daa
dec
and
je
mov
or
push
mov
xchg
jnp
je
sub
jle
mov
stos
stos
test
int3
xchg
or
fists
inc
shll
scas
mov
sub
inc
inc
mov
in
pop
pop
jns
ret
shll
jno
stos
lock
xchg
jmp
or
dec
xchg
xor
sub
cs
loopne
lods
test
cmp
mov
movsl
xor
jmp
fistl
push
jp
xor
cwtl
xor
dec
sbb
les
and
ret
cmp
jg
mulb
add
scas
fcoml
gs
stc
xlat
inc
add
push
cltd
mov
and
push
aaa
mov
into
mov
data16
loopne
rolb
dec
add
push
jo
xchg
xchg
lods
popf
outsl
imulb
jge
adc
je
sbb
mov
mov
test
std
dec
push
cmp
push
gs
arpl
and
pop
ds
and
sahf
jo
mov
divb
shl
in
fdivp
jmp
adc
test
cmc
cmp
xor
cmp
lock
cs
clc
pop
insl
xor
jg
int
dec
nop
pop
mov
jecxz
add
xlat
xchg
inc
xchg
fisubs
and
pop
add
dec
fcmove
lods
cmp
loop
enter
inc
sub
ja
pop
ror
sub
scas
es
mov
movsb
lods
insl
jmp
mov
pop
xchg
mov
cmpsl
jmp
fsubrl
out
test
lcall
lahf
mov
insb
add
lret
xor
adc
xchg
hlt
push
cld
jl
and
stos
and
inc
xchg
icebp
jg
es
mov
shl
push
sbb
inc
es
cs
test
int3
out
outsl
push
inc
jae
jmp
cmp
fs
rcll
aam
xchg
or
mov
add
cmp
adc
addr16
sahf
jb
ljmp
mov
xlat
cmp
lcall
insl
mov
mov
add
fnstenv
xchg
repnz
push
addr16
pusha
xlat
inc
daa
dec
pushf
jno
std
pop
pop
jo
adc
xchg
fidivs
inc
or
leave
jne
jp
mov
sbb
subb
mov
mov
call
popf
gs
aad
lods
iret
pop
sbb
jle
jo
dec
xor
push
mov
jne
xor
sub
sbb
stos
xlat
pusha
mov
mov
mov
cmpsb
mov
pop
cmpsl
roll
int3
jo
out
imul
lods
mov
push
movsl
insb
daa
movsl
les
mov
mov
xor
and
push
jns
mov
das
movsl
jl
jbe
xchg
xchg
cld
add
shll
sub
movsb
jmp
mov
mov
into
rorb
das
jb
cmpb
mov
lds
je,pt
pop
test
sbb
adc
push
in
pop
push
mov
cwtl
mov
test
imul
inc
ljmp
ja
sbb
jne
inc
sub
mov
fwait
enter
xchg
ficompl
push
ret
data16
xlat
dec
imul
es
out
out
or
mov
sbb
mov
addr16
xchg
mov
icebp
cmp
dec
xor
cmp
pop
std
push
pop
jmp
sbb
mov
rcll
imul
mov
cmc
mov
ljmp
dec
mov
pushf
ret
mov
mov
inc
jbe
mov
dec
shrl
imul
sahf
movsl
sub
je
add
fxch
clc
pop
xchg
mov
pusha
sbb
jg
inc
inc
mov
and
push
mov
dec
xchg
jae
mov
inc
ds
pusha
push
or
nop
popf
leave
push
push
ja
out
mov
and
cmpsl
fs
sbb
mov
popf
aad
and
fs
mov
push
insl
lret
mov
sub
jmp
test
pop
xchg
mov
sahf
pop
cld
add
ss
jns
pop
adc
xchg
xlat
je
jp
push
mov
sub
gs
dec
cli
lcall
cmp
les
pop
lret
mov
mov
pop
add
push
daa
jo
test
add
pop
inc
test
out
mov
out
jnp
scas
sub
xlat
add
mov
xchg
cmc
or
mov
xor
push
imul
inc
or
mov
mov
inc
inc
mov
sub
sbb
adc
ljmp
fmulp
dec
movl
cmp
sbb
or
jne
mov
int
cmpl
movsl
push
mov
int3
adc
out
mov
push
mov
ret
cmpsb
xor
pusha
cmpsb
or
mov
mov
fists
notb
fwait
dec
jno
adc
sbb
or
fisubrl
fnstcw
dec
divl
or
notb
aas
and
or
jge
mov
out
lahf
mov
rcr
xchg
mov
xor
mov
stos
stc
cmp
inc
lahf
mov
stos
push
mov
mov
sbb
pop
outsb
xor
std
sub
xchg
fwait
mov
dec
mov
cmp
ror
and
cltd
ljmp
push
mov
mov
loope
mulb
lock
lcall
adc
add
data16
mov
arpl
aaa
fimuls
notb
pop
add
cwtl
xor
xchg
pcmpgtw
cmp
cld
outsl
in
out
ljmp
sbb
cmpl
aad
js
nop
daa
arpl
movsb
sbb
or
out
mov
push
sbb
movsl
xorl
pop
sahf
mov
stos
sub
movsl
outsb
xor
insl
mov
adc
add
push
jg
inc
insl
mov
fisubrs
out
inc
cmp
divb
add
inc
sub
add
fsubs
out
mov
dec
push
loopne
ret
fs
sahf
xchg
outsb
sub
test
push
test
outsl
das
imul
xor
lods
jg
cld
test
push
push
addl
repnz
sub
es
leave
cmp
mov
mov
push
clc
test
mov
mov
xchg
cmp
jnp
sub
jg
out
fildl
sti
xor
shlb
dec
in
xchg
xchg
adc
enter
loopne
sub
das
jle
lret
icebp
sarb
add
jl
pop
or
push
mov
mov
adc
inc
xor
mov
jl
xchg
fsubrp
sub
mov
stos
adc
sti
mov
pushf
dec
mov
xchg
outsb
push
inc
pushf
stos
popf
icebp
push
loope
pushf
les
ja
cmp
inc
jecxz
xor
pop
push
jle
dec
in
mov
inc
inc
insb
cmp
inc
push
mov
mov
mov
jp
add
test
jo
mov
stos
pop
inc
std
nop
ds
and
lret
in
or
movsl
aad
mov
fldcw
cmp
pop
xchg
andb
mov
cmp
push
out
sub
cwtl
lods
popa
fcom
jle
pop
sub
je
addr16
ljmp
nop
lret
xlat
or
xchg
jns
mov
xchg
dec
xchg
ss
fiaddl
andb
je
bound
dec
lcall
xchg
mov
inc
or
push
lods
inc
cli
cwtl
push
arpl
cmp
dec
jmp
inc
sbb
test
mov
mov
test
aas
ficoml
mov
cli
out
jl
in
xlat
and
sarl
jne
leave
and
shlb
pop
test
test
jmp
pop
dec
mov
repz
xchg
movsb
push
pop
push
mov
dec
aas
loop
fnstcw
sub
adc
mov
cmpsl
movb
mov
adc
mov
add
pop
lods
sbb
jl
inc
fsts
jbe
lahf
rclb
inc
ret
jo
lret
lea
pavgw
filds
mov
cmc
aaa
sbb
xchg
lods
cs
adc
mov
leave
push
push
loopne
cmp
testl
push
cli
cltd
or
in
mov
cmp
enter
fistps
cmp
ficompl
sbb
xchg
mov
pop
std
push
mov
ja
out
or
neg
mov
dec
cmp
add
mov
pusha
ja
fwait
pop
pop
ud0
ss
pop
hlt
sbbl
inc
add
sbb
pop
test
push
loope
loope
and
sbb
out
iret
test
add
dec
insl
xor
pushf
push
jmp
mov
xor
mov
ja
sarl
push
push
xchg
movntq
out
xorl
pop
xor
cmp
lock
aaa
loope
mov
outsb
inc
in
mov
cwtl
mov
push
aam
mov
movsb
cmp
jp
adc
cwtl
out
fstl
inc
cmp
popl
nop
and
fists
sti
xchg
push
adc
repz
adc
inc
cmc
jmp
pop
xor
cs
cwtl
xchg
sbb
cmp
sub
movsl
jl
adc
sahf
push
loop
pushf
add
punpckhwd
mov
hlt
sbb
cmp
in
jecxz
ffree
fcmovu
pushf
inc
mov
movsl
dec
mulb
mov
or
or
and
cmp
outsb
push
mov
mov
xchg
mov
stc
inc
bound
sbb
in
lahf
lods
pop
xor
pop
fmuls
jmp
xchg
sub
flds
in
ljmp
sub
clc
and
adc
repnz
or
out
jge
sbb
mov
jae
xor
add
mov
mov
push
out
mov
add
sahf
push
mov
lcall
xor
clc
jecxz
rclb
and
sub
cli
das
repnz
out
add
mov
aas
xor
pop
loopne
lret
lret
adc
iret
out
push
adc
das
jge
push
rcr
sbb
and
sbb
fcmovb
add
js
nop
lret
rcr
call
mov
mov
sbb
dec
lea
out
out
into
mov
push
scas
adc
and
jp
outsb
dec
ds
xchg
pop
mov
pop
pop
push
int
std
scas
cmp
dec
and
sbb
xchg
je
push
jle
xor
or
call
cmp
sbb
add
pushf
iret
jmp
jbe
mov
pop
xchg
lahf
or
mov
cltd
loop
aad
inc
or
mov
out
test
jmp
repz
add
xchg
xchg
dec
call
repz
mov
mov
dec
xchg
icebp
jbe
lahf
mov
les
add
push
lea
fwait
jge
mov
sbb
inc
aaa
mov
stos
std
fsub
jns
lea
jae
fbld
cmpsl
gs
arpl
orl
mov
movl
cs
mov
sbb
bnd
in
jp
sbb
xchg
scas
cltd
jp
pusha
sbb
arpl
mov
lock
jp
std
fwait
imul
fdivl
push
pop
jg
into
xor
mov
xlat
xorl
jle
mov
pop
xchg
sbb
daa
cs
mov
loopne
jbe
xchg
push
jnp
lret
int3
cmc
fdivp
and
rorb
push
jp
bound
jge
inc
stos
arpl
shll
insl
push
lcall
push
dec
xlat
test
jb
ds
mov
push
push
test
mov
or
and
cltd
in
ret
test
and
fstl
push
xor
mov
popa
and
scas
lret
sub
cwtl
loopne
add
clc
and
sahf
imul
pop
repnz
test
mov
popf
mov
stos
movsb
push
cmp
mov
adcl
js
sub
sbb
xchg
dec
fnsave
lods
arpl
test
loope
sbb
mov
push
push
test
stc
adc
rolb
inc
scas
dec
sub
pusha
ja
mov
mov
and
and
adc
inc
mov
add
sub
inc
xchg
cwtl
xlat
mov
jl
enter
inc
add
xor
pusha
jl
cmp
jno
cltd
mov
aam
mov
repz
xchg
push
lock
cmpsl
movsl
sbb
int
arpl
aam
mov
xor
jp
push
ja
add
aad
jns
sub
std
xchg
scas
xchg
pop
outsb
inc
fmull
stc
pushf
jbe
cld
mov
cwtl
fidivl
mov
pop
ret
lods
mov
ficomps
dec
xor
jb
and
mov
test
sbb
negb
jno
cmp
std
add
das
sbb
jb
push
flds
rcl
push
imul
imul
adc
mov
lea
cltd
or
fists
push
pusha
sahf
xor
cmp
jns
or
fwait
inc
push
xor
loop
call
xor
mov
jne
ret
bound
xor
lret
imulb
dec
out
pop
xor
sub
mov
mov
test
pop
add
inc
mov
je
sub
cmp
sbb
negb
jmp
and
push
pop
repnz
ss
dec
dec
aad
or
cld
hlt
fwait
and
cmpsb
daa
pop
sbb
ljmp
int
mov
pop
dec
mov
add
and
std
sub
arpl
arpl
mov
sbb
cmp
loopne
sbb
or
ret
lds
fisttpl
stos
lea
dec
adc
fstl
push
sub
ja
mov
and
jl
aad
and
mov
mov
xchg
aad
int3
pop
jne
outsb
cmpsb
fwait
pop
imul
aas
mov
sub
sbb
stos
xchg
cmp
dec
dec
sub
out
sbb
fdivl
adc
and
fildl
ret
push
int
outsl
lret
pop
mov
dec
dec
cmp
sbb
call
xor
lock
mov
xchg
xor
cld
push
fsts
xchg
inc
cmp
cld
xor
ljmp
fsts
popa
fisttps
call
loope
jno
arpl
fmull
ret
push
clc
and
jo
adc
call
dec
fucomp
aaa
fists
pop
dec
les
jp
sbb
push
test
scas
mov
fs
lahf
inc
sarb
in
test
pushl
ficoml
pop
div
jnp
int
fisubs
mov
out
cmp
adc
jle
pop
sub
je
dec
int
mov
dec
sahf
pop
or
aad
mov
dec
shll
gs
imul
xchg
cltd
out
std
lods
daa
lcall
lods
mov
filds
loop
sbb
stos
popf
and
mov
adc
fsubrl
fidivl
cld
xchg
pop
cmc
rcr
and
sub
xadd
dec
mov
adc
xor
cli
mov
nop
leave
mov
xor
jmp
xor
cmp
es
lods
lock
pop
xchg
pop
add
fistps
movsb
push
sbb
and
mov
lret
mov
pop
mov
gs
mov
xchg
xchg
mov
nop
cwtl
mov
je
shrb
ss
pop
mov
xchg
pop
xor
rcr
je
js
mov
pushf
xlat
mov
adc
in
sub
repnz
dec
xor
pop
lods
cmpsl
mov
movsl
sbb
into
adc
notl
clc
mov
fldl
test
cmp
ss
and
fsubrl
stc
and
rolb
push
fsts
jge
aaa
popf
stos
push
jbe
or
mov
or
push
ret
push
sbb
add
femms
sti
fwait
jecxz
xchg
aad
xor
xor
add
mov
jb
shlb
pushf
mov
sub
inc
aad
mov
pop
lock
inc
loop
iret
sbb
cmp
mov
data16
daa
adc
aad
cmpsl
out
push
subl
stc
iret
adc
push
mov
popf
and
inc
sbbl
mov
sbb
push
mov
jbe
std
xchg
jno
movsl
aas
mov
fsts
nop
stc
xor
xchg
lret
imull
in
and
fsubr
dec
aas
xchg
mov
loopne
sub
add
das
into
aam
add
js
cltd
sbb
lea
xchg
js
mov
jb
fstpt
into
sub
rcll
adc
xor
jb
fisubrs
jmp
sub
fwait
stc
rorl
pop
decb
push
mov
fisttpl
xorb
int3
scas
loop
xlat
sub
insl
push
je
repz
mov
cmp
cmpsb
mov
icebp
sbb
jae
jne
mov
sbb
cmp
pop
add
mov
adc
jo
pop
jg
cmp
loope
fcompl
and
fdivs
jg
ss
mov
dec
xchg
fwait
mov
popa
leave
les
xor
clc
insb
ret
mov
dec
leave
rolb
idivl
cmp
sub
out
out
test
lahf
xchg
enter
jno
xor
mov
les
fs
into
aas
xor
cmp
orl
aad
xlat
and
rcrb
mov
rol
dec
xor
jb
dec
aad
pop
aas
stc
ret
in
fcmovb
pop
xchg
dec
dec
pop
mov
cmpsl
lret
push
inc
ja
lods
repnz
dec
lods
cld
mov
xchg
jmp
and
dec
fisttpl
xlat
mov
sbb
xchg
jb
mov
mov
out
sub
aas
jg
cmp
mov
xchg
clc
or
mov
add
in
jbe
cwtl
dec
repnz
movsl
andl
hlt
jle
xlat
dec
jns
mov
aad
and
cmpsb
adc
in
pop
cmp
dec
cmpsl
jge
in
cmp
xchg
push
inc
jle
int
lea
bound
dec
dec
repnz
mov
cli
out
or
jmp
dec
pop
and
out
mov
clc
sub
push
fs
pop
and
shlb
hlt
ss
in
sub
pop
mov
jns
add
dec
mov
mov
pop
pop
jbe
push
lods
repnz
loopne
inc
or
idivb
jg
insl
adc
sarl
in
jns
pop
cmp
and
scas
ficoms
inc
test
mov
repnz
and
push
inc
and
sbb
push
pusha
insb
ret
clc
cli
test
shrb
cwtl
add
add
shlb
scas
xchg
pop
jle,pn
mov
cs
in
add
pop
fimull
xchg
enter
and
orl
jo
jecxz
std
xchg
roll
stc
loope
xchg
gs
and
inc
xchg
cld
pusha
in
jns
test
mov
sub
fdivrp
push
stc
add
mov
push
mov
ljmp
sbb
or
push
jg
xchg
sub
add
sbb
rcrl
test
mov
out
sarl
mov
in
aas
jge
mov
fdivl
stc
lds
xor
jb
mov
push
jmp
adc
mov
lea
daa
add
ljmp
leave
outsb
filds
cs
adc
sbb
fbld
das
mov
repnz
jg
std
fisttpll
cmp
mov
jmp
repnz
mov
sub
outsb
inc
mov
dec
fwait
push
insb
dec
adc
inc
sub
and
mov
mov
loopne
adc
jle
jge
push
sbb
rclb
in
call
test
cmpsl
fcompl
cld
pop
pusha
push
outsb
insl
mov
add
ret
push
and
mov
xor
and
pop
inc
xchg
je
mov
jp
hlt
jbe
loop
inc
loop
sbb
fistps
mov
sbb
jg
fistpll
xchg
incl
loope
cmp
and
sub
mov
cmpsb
cmp
mov
and
cwtl
mov
fdivr
add
jmp
xor
ret
or
test
loopne
add
int
sub
je
loop
xor
mov
pop
shll
and
push
popa
ss
xor
jae
in
xor
sti
cmc
xchg
pusha
dec
xor
or
sbb
add
aad
loopne
sbb
fsub
jnp
out
mov
stos
jae
and
pop
int
rcrb
loopne
pop
adc
mov
daa
mov
and
scas
shr
fmull
jg
ds
incl
lss
add
stos
lods
jnp
aaa
loop
les
xchg
sbb
add
into
test
push
jno
add
hlt
repnz
add
pop
and
push
xchg
imul
inc
data16
addr16
mov
movlps
and
mov
xchg
jae
je
lcall
jle
sbb
ret
sbb
mov
sub
xchg
cmpsl
adc
sub
negl
push
cwtl
push
adc
lock
insl
in
or
faddl
jmp
add
cs
fdivrl
loop
into
stos
sub
es
jg
leave
jle
xlat
adc
arpl
and
pop
orl
mov
mov
jmp
dec
mov
adc
hlt
push
popf
sbb
push
inc
inc
xchg
jp
pushf
aad
mov
aas
xchg
aaa
repz
mov
inc
shr
dec
pop
stos
sti
hlt
out
xchg
pusha
sub
xchg
sbb
adc
mov
adc
cltd
xor
ds
mov
pop
jnp
mov
cmp
cmp
push
sub
or
hlt
cmpsl
mov
es
cwtl
xor
jne
sar
cmp
cmp
bnd
icebp
mov
adc
mov
add
pop
rcll
sub
nop
cmp
sub
idivb
ds
pop
ja
mov
cmp
push
mov
les
mov
pop
push
leave
into
mov
push
arpl
aas
out
sbb
inc
sti
and
xchg
pop
and
xlat
aas
loope
repnz
jmp
cmp
inc
cmp
jg
add
push
popf
rcrb
cmp
cmpsb
test
or
mov
pop
cmp
push
adc
xor
cmp
xor
ret
xor
or
push
inc
icebp
mov
lods
adc
and
and
popl
pop
cmp
sub
pop
dec
out
js
andl
sbb
push
dec
adc
inc
cmp
pop
cmp
sub
les
jmp
dec
fwait
sub
enter
mov
xchg
shl
sti
xchg
cmp
test
inc
jmp
data16
stos
mov
push
xchg
jnp
movsb
jne
es
lods
xor
add
sub
mov
xchg
ljmp
or
pusha
sub
fwait
push
pusha
add
and
mov
shr
outsl
hlt
fs
sub
test
arpl
shll
cwtl
aas
cmpsl
mov
loop
lds
and
mov
fisttpll
cmpsl
sahf
imul
jmp
notb
sarl
ret
movsl
mov
dec
repnz
mov
and
sbb
sub
add
test
scas
pop
incb
in
push
pop
insl
faddl
add
cmp
cmp
or
mov
outsb
cld
rclb
dec
neg
mov
jle
inc
sbb
pop
xchg
cmpsb
pop
xchg
mov
test
sub
jne
xor
ljmp
push
ret
sbb
cmp
loope
ret
sbb
sbb
add
aas
fidivs
jl
add
or
add
fiadds
iret
mov
jmp
and
or
negl
mov
addr16
ljmp
add
xor
fmuls
mov
pop
dec
sbb
hlt
hlt
mov
mov
add
add
fldl
push
int3
aaa
xchg
cmp
int
xchg
test
mov
rcrl
adc
pop
dec
or
daa
xchg
or
cltd
stc
mov
add
sti
pop
sub
xchg
mov
pop
addr16
mov
adc
sbb
pop
mov
and
adc
pmaddwd
ja
cmc
or
test
dec
xchg
or
push
pushf
jnp
dec
sti
cmp
dec
aaa
cmp
jecxz
pop
lret
mov
cmp
cmp
mov
das
cmp
ljmp
dec
and
std
icebp
fimull
jb
shlb
aas
add
ja
repz
sbb
push
jecxz
enter
scas
inc
mov
pop
xorb
mov
out
in
sar
push
jmp
mov
push
sbb
pop
cmpsb
movsb
orb
je
icebp
sub
push
dec
push
movsb
loopne
sub
repz
sbb
sbb
mov
mov
mov
xor
mov
mov
call
adc
add
cmc
fildll
faddp
sbb
sub
mov
out
mov
fnstenv
outsl
ss
and
lods
adc
jp
clc
test
pushf
xchg
popf
outsb
sbb
mov
mov
and
mov
cmpsl
jne
dec
ss
in
adc
ja
arpl
mov
pop
fstps
mov
pushl
pop
rcrl
in
push
fcomi
mov
cmpsl
sub
mov
dec
sbb
pop
into
into
aam
in
outsl
repnz
fbld
jge
push
or
bound
sub
inc
mov
scas
cmpl
or
and
sbb
add
ret
push
cmp
rolb
xlat
outsl
lahf
inc
fst
mov
outsb
jmp
ret
je
mov
aas
popl
testb
aad
inc
out
add
mov
call
gs
jl
jb
imul
jae
lahf
imul
cwtl
test
dec
xorl
movsb
fabs
xor
xchg
js
xor
adc
xor
add
mov
rep
das
movsl
les
stos
ljmp
inc
sub
jg
and
enter
insl
dec
movsl
ss
jmp
ret
and
outsb
push
sub
loope
scas
cwtl
mov
mov
sbbb
cs
dec
cwtl
jl
jnp
dec
xchg
mov
cmp
mov
idiv
sub
cmp
jb
cs
dec
bound
add
jge
jbe
mov
jg
fimuls
repz
scas
loopne
xchg
or
fnstenv
add
ss
mov
xchg
cmp
sbb
cmp
sub
jecxz
push
ret
push
test
mov
int
mov
in
or
adc
sbb
jp
xor
fnstenv
or
jg
mov
outsb
push
push
dec
xor
dec
pop
enter
mov
xor
mov
push
xor
cmpl
jge
inc
jo
repz
mov
mov
cld
mov
adc
cmp
dec
cmp
pop
fidivrs
inc
mov
dec
cmc
push
or
inc
clc
adc
mov
xchg
jns
andb
xchg
adc
cli
mov
les
mov
in
cmp
jno
sbbl
test
jle
push
push
cmp
jmp
add
mov
mov
xor
sub
cmp
or
adc
jne
jecxz
add
cmp
dec
enter
aam
popf
push
loop
scas
push
push
pop
sbb
xor
jo
int
movsl
push
pop
outsl
push
lahf
pop
das
add
dec
insl
fs
jnp
cld
cltd
sub
xorb
xchg
cltd
mov
pop
lcall
int3
aam
imul
iret
inc
mov
test
mov
xchg
aam
fwait
pop
bswap
mov
mov
push
js
pushf
das
jp
sub
pop
jmp
pop
movsb
mov
imul
movsb
lret
cmpsl
mov
xchg
sti
insl
cmp
and
push
sbb
add
ja
mov
mov
mov
sub
cmpsb
pop
mov
mov
xor
mov
mov
scas
shr
dec
dec
jp
out
mov
and
inc
jle
cs
loop
mov
mov
mov
ljmp
jno
mov
mov
cli
pop
push
fisubs
fisubs
jecxz
movsl
js
in
jle
aad
cmp
mov
dec
mov
or
fists
jmp
fnstcw
loope
outsb
cld
leave
mov
dec
cld
insl
lods
lods
dec
inc
jae
outsl
pop
pop
out
xchg
jg
xor
imul
fwait
xchg
movsl
insl
jle
movsl
fbld
popa
in
out
jecxz
lret
scas
aam
push
mov
mov
pusha
inc
jb
iret
jg
push
lods
pop
in
jle
nop
add
pop
fcoml
jns
inc
fstps
inc
add
ja
div
add
sub
mov
decb
je
xor
es
push
push
lods
stos
in
and
in
and
ficoms
das
mov
and
stos
adc
cmp
or
push
adc
inc
arpl
fcoms
imul
js
or
or
push
xchg
cmp
dec
ror
rcrb
jle
cltd
cmp
jl
xchg
xor
xchg
mov
stos
es
cltd
std
xchg
lret
cmp
jl
jge
lods
adc
and
pop
push
sbb
push
inc
outsl
sbb
pop
lds
dec
in
fcos
mov
lret
aas
ret
push
lock
mov
js
cmp
xchg
repz
jecxz
jecxz
pop
xchg
shlb
mov
out
cmc
jp
insl
fnsave
add
push
mov
jno
lcall
into
push
cmp
ss
pop
sbb
cs
adc
mov
std
add
cwtl
sahf
pop
xchg
mov
adc
arpl
add
ja
daa
add
notb
sbb
popf
inc
movsb
popf
push
sub
aam
add
sub
add
subb
and
cmp
loop
add
dec
mov
pop
mov
mov
or
mov
lret
lods
imul
sub
dec
pop
daa
pop
sbb
pop
jp
pop
pop
xchg
clc
mov
cmp
push
jp
std
sub
daa
lods
out
and
push
jns
mov
jbe
popl
rorb
lea
pop
pop
clc
sti
jmp
cmpsl
add
xchg
cli
pushf
sub
sbb
pop
insb
mov
mov
jne
xor
jno
movsb
insb
push
daa
je
rorb
dec
fisubl
and
fimull
sbb
in
lahf
inc
sbb
arpl
jge
flds
xchg
enter
ljmp
inc
outsb
sbb
sbb
jle
cli
gs
mov
mov
cltd
int
test
cmp
adc
xchg
mov
lea
rcl
mov
out
cli
rcr
xor
popa
adc
mov
idivl
push
jp
xchg
pop
pop
leave
mov
or
scas
adc
fists
mov
mov
insl
test
pop
scas
push
out
jmp
mov
adc
sub
and
mov
aad
dec
xchg
mov
mov
movsl
cmp
sub
mov
shlb
xchg
imul
mov
in
bound
movsb
sarb
sbb
jae
or
ljmp
jge
in
cmc
push
nop
xor
and
sub
inc
and
push
rclb
mov
xor
add
loop
test
lods
xchg
or
lret
mov
or
sub
jl
dec
jae
jle
pop
shrl
hlt
dec
dec
leave
mov
pop
sub
aaa
daa
test
mov
fistpl
push
mov
mov
add
sbbl
popa
push
fcompp
dec
fidivl
push
ljmp
xor
pop
bound
in
lcall
pop
cmpsl
jle
sahf
push
jno
cmc
es
jo
mov
push
outsl
sti
aad
arpl
pushf
sub
xor
mov
sub
mov
dec
inc
clc
xor
mov
cmp
nop
insb
sub
push
addr16
es
scas
jo
ret
ret
xchg
mov
pop
js
push
fwait
incb
adc
dec
adc
dec
push
push
push
cmpsb
loop
mov
cmp
pop
pushf
lods
ljmp
sub
rolb
nop
xor
mov
shll
sub
pop
add
out
or
fnstcw
test
xchg
or
ficompl
mov
mov
add
xchg
out
mov
xor
test
fimuls
mov
in
or
lea
and
jecxz
add
aam
ret
arpl
mov
add
mov
orb
cmp
xor
das
shlb
inc
in
jmp
push
ja
inc
repz
or
shr
or
xchg
mov
mov
dec
adc
push
loopne
and
mov
call
mov
lods
xor
mov
mov
push
xorb
fistl
in
rclb
shrl
inc
shlb
push
lock
stos
shlb
xor
mov
iret
mov
loop
data16
mov
jge
and
mov
mov
mov
rcrb
and
outsl
jmp
and
in
test
in
aad
int3
popf
shll
pop
and
mov
nop
mov
dec
inc
sub
inc
hlt
js
dec
or
xorl
and
repz
cmp
jge
into
fsub
test
in
add
inc
leave
push
stos
lahf
jg
mov
pop
sbb
mov
insw
jl
icebp
fsts
mov
cwtl
sub
mov
ror
or
and
pop
pusha
std
incl
jnp
addr16
mov
je
and
mov
pop
mov
and
mov
loope
dec
xor
mov
stos
fildll
popa
mov
ret
rolb
xchg
btc
leave
imul
inc
adc
stos
sub
das
rorl
or
sbb
inc
jle
lret
test
repz
jnp
mov
fs
mov
inc
cltd
or
js
test
jmp
and
insb
or
je
aaa
negl
cmpsl
sub
mov
sub
xchg
into
jmp
imul
xor
rolb
xchg
rol
sbb
int3
inc
mov
ja
test
push
inc
and
jl
or
xlat
js
loopne
mov
pop
cmp
mov
and
iret
daa
sub
add
repz
and
inc
pop
xchg
jle
pop
test
repnz
mov
sub
sub
fwait
aas
mov
mov
xlat
fcmove
sub
gs
mov
mov
or
push
dec
mov
push
push
mov
scas
xor
dec
cvtdq2ps
adc
insb
sbb
sbbl
mov
cmp
add
cmp
ret
dec
xchg
lcall
xchg
lcall
pushf
xchg
xor
test
mov
or
pop
mov
fwait
jnp
push
pop
outsb
sub
enter
repz
es
imull
in
cmp
sub
daa
jp
es
fdivl
push
addr16
dec
mov
popf
std
nop
push
pushw
adc
test
push
or
push
mov
out
cmp
sbb
mov
dec
mov
and
add
jp
pushf
cmp
mov
push
je
arpl
jp
xor
outsb
jl
jae
pop
inc
scas
test
pop
mov
adc
scas
mov
mov
dec
or
xchg
jl
sub
mov
fdivp
mov
test
popf
jp
inc
xor
mov
inc
and
adc
cmp
in
fs
sti
add
add
or
jae
and
push
add
data16
cwtl
adc
sub
clc
loopne
mov
lods
xchg
loopne
sub
and
inc
clc
loop
mov
sub
into
jnp
daa
and
jmp
loope
adc
fwait
inc
std
hlt
sarl
sti
mov
and
mov
push
scas
insl
sub
in
cmc
push
das
stos
lcall
add
mov
lcall
or
sti
mov
adc
pop
xchg
push
mov
push
push
cmp
cmp
adc
mov
cmp
in
inc
out
dec
lods
mov
jl
stos
or
jns
cltd
fidivrs
mov
loopne
mov
imul
das
outsb
xchg
fldl
outsl
mov
fucomp
or
and
inc
mov
sub
jl
jp
arpl
out
adc
sti
sahf
rcrl
shrl
cmp
or
or
jb
adcb
sarb
lahf
adc
cmpsl
lea
mov
or
addr16
fbld
and
push
call
ljmp
jb
dec
or
sti
test
add
mov
mov
inc
lret
scas
sub
incl
imul
ss
icebp
mov
mov
or
std
push
sbb
stos
jns
fs
inc
and
lea
sub
je
sub
ret
icebp
sub
sub
cwtl
lods
call
mov
sti
shll
hlt
fiaddl
bound
jp
iret
add
jle,pn
fiaddl
repnz
das
pop
jmp
ret
adc
pop
ret
xchg
out
rcl
fdivrs
inc
sub
jl
add
popf
shlb
dec
ds
sub
cmp
hlt
cmp
popf
push
ret
out
lahf
lret
leave
mov
incl
clc
loop
or
inc
jl
dec
xchg
lods
jns
xor
push
push
mov
and
data16
and
inc
xor
pusha
lahf
repz
lcall
mov
push
das
xchg
mov
mov
lods
insl
jno
sbb
mov
popa
sub
fdivl
fimull
orl
jle
into
adc
loopne
addr16
sub
jo
mov
in
xor
pop
mov
arpl
repnz
jbe
lds
add
hlt
iret
gs
mov
pop
mov
scas
and
mov
pop
mov
lods
mov
sbb
lahf
cli
hlt
adc
mov
inc
mov
gs
adc
push
xchg
dec
shlb
mov
subb
jne
nop
add
lods
movsb
in
xchg
jno
in
cmpsl
cmp
dec
adc
jb
lods
xchg
mov
scas
jnp
loop
movsl
in
sahf
add
jg
pop
ds
jae
xchg
mov
adc
mov
jg
dec
xor
xor
mov
jl
iret
mov
js
lds
cmpsl
sahf
or
out
in
inc
push
lret
mov
repnz
enter
fcoml
pop
or
or
cmc
push
and
icebp
xor
xor
or
dec
push
or
mov
or
push
sub
fistpl
xchg
fnstenv
popa
jnp
insl
popf
jg
cmc
insl
movsb
leave
scas
push
mov
xor
push
push
or
cmp
lcall
fs
cmove
mov
push
xchg
fidivl
add
mov
aad
fbstp
pop
fiadds
xchg
pop
popa
xchg
dec
dec
repnz
pop
hlt
fildl
inc
sub
pop
sarl
cmpsl
hlt
adc
outsb
pop
popa
rorl
push
push
fsts
sahf
popf
jo
jo,pt
dec
lds
mov
pand
fadds
in
decl
push
xchg
sub
inc
jmp
adc
daa
sbb
int
sub
xor
inc
addr16
and
sbb
xchg
adc
fs
aad
cmpsb
sbb
inc
add
out
mov
lods
cli
or
shlb
mov
fiadds
xor
jle
adc
test
push
mov
push
inc
inc
and
add
adc
or
xor
push
and
inc
push
push
cmp
inc
mov
pop
arpl
inc
lods
ds
icebp
add
xchg
mov
and
int
mov
inc
xchg
mov
dec
jle
mov
mov
and
jecxz
pop
cmpsl
or
mov
lods
mov
rcrb
cmpsb
mov
movsb
movsl
xorl
jo
xchg
adc
or
aad
call
mov
sti
push
dec
xor
xchg
dec
mov
test
pop
pop
lahf
pop
lds
mov
xor
rcll
push
fisubl
adc
call
loop
jns
jmp
cmpsl
mov
push
jno
iret
enter
pop
pop
inc
jg
test
shlb
cmc
arpl
and
mov
inc
cmp
sbb
ret
ja
mov
sbb
cmp
in
mov
or
adc
ja
test
sub
or
mov
je
cmpsl
icebp
scas
mov
test
lret
push
in
dec
sar
js
push
inc
jecxz
mov
push
mov
lahf
dec
sahf
and
sbb
repnz
add
push
adc
das
mov
arpl
gs
adc
push
mov
adc
iret
pusha
add
pop
aaa
mov
ja
sbbl
mov
pushf
inc
mov
iret
insl
je
mov
jnp
mov
outsl
mov
xchg
xchg
jnp
shl
add
ss
fs
mov
push
sbb
mov
int
mov
push
mov
leave
dec
inc
loopne
int3
mov
in
xchg
dec
sbb
mov
push
inc
ja
repz
sbb
movsl
xor
ljmp
jmp
dec
dec
push
movsb
repz
aam
test
lods
shlb
adc
notl
mov
and
fidivrl
mov
testl
cmp
sbb
lcall
outsl
lds
or
test
add
xor
inc
push
fsts
ds
xor
shll
sub
mov
cmpsl
push
mov
cmpb
js
dec
std
mov
sbb
jecxz
dec
je
adc
xor
xchg
add
nop
stos
loopne
lret
dec
xchg
repz
mov
sub
inc
call
ljmp
xchg
xchg
adc
fwait
mov
popa
inc
mov
int3
dec
insb
jl
add
test
xor
dec
and
in
xchg
push
or
push
or
jmp
jmp
cmp
inc
dec
mov
std
push
shlb
mov
jno
mov
loope
je
repz
push
shr
push
mov
ffreep
ret
mov
stc
test
cmp
cmp
add
inc
pop
mov
push
pushf
xlat
adc
ret
loop
repz
jns
out
jo
outsl
and
and
pushf
js
lcall
mov
cmp
je
push
xchg
and
jge,pt
sub
pusha
xor
push
bound
fnsave
xchg
or
stos
rcl
cwtl
cltd
xchg
sub
dec
inc
or
dec
and
rcr
clc
mov
repnz
dec
mov
into
sbb
inc
xchg
mov
jmp
cltd
in
cs
jbe
or
ficoml
or
sub
sbb
call
fisubrs
inc
je
arpl
sub
jnp
mov
ljmp
mov
sbbl
sbb
mov
fmuls
ds
in
sub
int
sbb
in
out
inc
mov
xor
imul
lods
adc
mov
adc
inc
dec
mov
jae
ljmp
inc
iret
in
outsl
in
ret
call
xchg
stos
pop
push
push
mov
hlt
push
pop
mov
cmpsl
push
jne
loop,pt
bound
stos
cltd
cmc
or
add
or
jle
mov
sbb
push
xor
dec
and
cwtl
jnp
push
shll
in
push
mov
pop
mov
mov
xor
jl
arpl
fidivrl
mov
jo
pop
ds
lea
mov
fisubs
ds
call
jmp
mov
inc
ret
mov
movsb
ficompl
jno
in
adc
adcb
sub
xchg
cli
scas
fimull
push
jns
pushf
dec
lock
test
insb
mov
stos
push
dec
mov
outsl
mov
and
xchg
or
pop
sub
sub
jl
xlat
addl
jg
jnp
test
out
outsl
rcr
xchg
aad
or
scas
dec
dec
cmp
xchg
scas
push
incb
stc
push
mov
sbb
adc
icebp
aaa
ss
sbb
sti
xchg
fiadds
sar
jle
xchg
dec
mov
dec
mov
and
fcmovu
xchg
repnz
push
mov
jmp
inc
cwtl
cmp
lea
sbb
mov
stc
jle
mov
pop
mov
fisubrl
sbb
xchg
cmp
pushf
add
dec
sbb
xchg
jno
mov
ljmp
adc
mov
mov
ljmp
push
enter
inc
inc
mov
cmp
scas
outsl
enter
shll
rol
insl
sub
cmp
push
outsb
cmp
sub
cmpsb
mov
js
aas
mov
bound
aaa
addr16
mov
call
roll
sub
jle
movsl
pop
dec
sub
fwait
enter
add
outsb
xchg
sub
shlb
lret
add
cmpsb
hlt
jge
mov
pop
fidivs
ja
loopne
fcomps
sbb
mov
xchg
cmp
or
jo
or
and
mov
pop
mov
mov
and
pop
iret
add
in
lret
cmp
test
mov
jnp
insb
in
or
loope
repz
stos
mov
fsubrl
push
push
jle
or
mov
xor
push
fbstp
fistl
fistpl
rcrb
mov
and
mov
cmp
push
dec
mov
push
pop
pop
aam
pop
call
in
xchg
cmpb
das
xcrypt-ofb
cmpsl
sub
insb
xor
jg
jns
lods
aas
cmp
xchg
and
test
hlt
testl
cmpsb
call
jp
push
xchg
xchg
in
mov
push
out
sbb
cld
xchg
enter
stos
inc
into
push
xor
dec
int3
sub
mov
dec
push
xchg
push
mov
mov
cmc
into
inc
pop
mov
ficoms
sti
push
cld
insl
or
cmp
mov
add
mov
dec
dec
xor
movsb
imul
xor
fdivl
jno
jnp
mov
loop
push
pop
xlat
dec
aam
jns
out
popf
push
adc
jo
xlat
mov
arpl
and
lahf
and
lods
dec
fcoml
push
adc
aaa
dec
popa
fimull
sahf
hlt
add
sbb
loope
imul
and
cld
sub
dec
jne
hlt
xchg
push
pushf
int3
xchg
daa
or
cld
mov
or
arpl
pop
mov
and
shrb
xchg
xchg
jbe
push
loope
lock
mov
rcrl
xor
adc
inc
lds
iret
push
fs
aad
mov
cmpsl
jne
clc
inc
jno
scas
lods
aaa
push
imul
push
cmp
daa
int3
jbe
sub
xchg
adc
popa
or
scas
pop
les
cmpsl
push
lahf
lret
mov
mov
lods
pop
in
jns
popa
jns
fists
popf
mov
loopne
pop
test
flds
push
mov
ficomps
andl
pop
loope
ljmp
sbbl
ds
push
sti
xchg
xchg
push
iret
loop
add
sarl
cmpsl
cmp
test
or
aas
inc
je
int3
mov
leave
xor
scas
jno
nop
cmp
lret
mov
cli
mov
inc
jg
xchg
inc
cmc
into
jmp
lea
fisttpl
fwait
cmc
mov
sub
xor
xor
pop
movsb
dec
xor
movsb
loop
ja
jbe
inc
repnz
pop
add
jecxz
dec
inc
repz
jmp
enter
jno
addr16
push
push
lahf
pusha
add
pop
mov
adc
sbb
aaa
jge
cwtl
mov
dec
lcall
jmp
jne
filds
cmp
add
int
adc
lods
mov
and
sbb
push
mov
jecxz
dec
cld
sub
or
mov
sbbl
mov
lods
inc
and
jae
mov
dec
jmp
loope
dec
jmp
test
jno
and
inc
out
push
test
sbb
rolb
xlat
dec
jb
lahf
pop
add
add
mov
cmpsb
cmp
xor
push
sbb
xchg
cmpsl
jp
ja
add
sahf
test
dec
rcrl
dec
es
inc
add
adc
mov
jo
sub
xor
es
adc
jle
mov
fidivrl
jb
xor
dec
jae
dec
dec
or
loopne
cmp
sub
or
dec
mov
in
xchg
sbb
xchg
or
outsl
cmp
je
jbe
cs
fidivs
bound
xor
test
cld
adc
push
add
scas
loope
gs
sbbl
leave
cmp
adc
repz
dec
rolb
rcrb
inc
or
add
inc
jo
icebp
test
cltd
cltd
jae
xchg
xlat
pop
add
cli
and
push
sbb
imul
lahf
pushf
mov
clc
jle
pop
add
mov
ss
mov
push
das
mov
pusha
clc
or
dec
lds
daa
pop
stos
sub
jae
inc
sub
ret
inc
lret
push
lret
js
xor
sbb
add
jp
fdivrp
stc
ficompl
dec
sbb
lock
mov
mov
iret
test
adc
repnz
inc
cld
icebp
pop
rsqrtps
push
sub
sahf
jne
add
cltd
mov
dec
ljmp
and
dec
xchg
insl
pop
cmp
adc
xchg
inc
into
mov
xchg
repnz
jne
xchg
jp
rcrb
into
gs
cld
aaa
enter
les
and
lret
xlat
push
xchg
add
les
mov
nop
cmp
push
cmp
xor
add
ret
fidivrs
outsb
xor
repz
or
and
adc
dec
mov
fs
add
inc
cli
mov
int3
dec
mov
mov
inc
in
ret
adc
les
jg
loope
shl
xchg
push
scas
insb
sub
inc
mov
mov
pop
iret
push
inc
pop
cmpsb
popf
shll
shl
lcall
sti
pusha
clc
dec
xchg
sub
das
call
xchg
ffree
xchg
loop
jb
sbb
call
pop
les
insl
rcr
mov
and
jnp
aaa
jle
and
lret
jbe
mov
dec
imul
and
cmp
push
mov
mov
push
test
or
inc
insb
jle
insl
sbb
pop
dec
xchg
pop
nop
or
push
cmpsl
test
shr
pop
or
sbb
xor
xchg
movsb
jns
xchg
fdiv
lcall
xor
inc
aad
loop
adc
xlat
mov
pop
pop
fwait
pop
adc
sti
and
repz
push
popf
jg
lods
jle
sbb
mov
xor
jge
push
insb
dec
imull
jmp
out
mov
inc
dec
add
outsb
xchg
stos
mov
mov
mov
mov
rorl
add
jns
sbb
push
dec
sub
dec
adc
stos
std
out
aam
stos
loopne
leave
stos
cmpsb
ror
pop
or
mov
hlt
sub
into
test
xlat
lret
cmp
jae
ds
and
mov
pop
or
pop
xchg
or
int
jnp
int3
or
pusha
loopne
shll
mov
shlb
fs
insl
pusha
xor
push
push
dec
mull
out
and
xor
push
xor
movsb
call
subl
or
jmp
xchg
fistpll
ret
pop
pop
stos
mov
mov
test
adc
cmp
sti
add
sti
cmc
mov
dec
shlb
and
pop
lcall
jp
loope
add
mov
mov
xor
xchg
push
adc
out
dec
or
adc
or
mov
scas
and
sub
cmc
or
pop
mov
mov
sbb
stc
loope
pop
push
dec
ljmp
jp
dec
mov
aas
mov
in
fnstsw
mov
cwtl
in
orb
jbe
pop
jmp
inc
mov
mov
push
sub
insl
popa
cmc
mov
mov
sub
and
addr16
or
mov
pop
cmp
xchg
or
stc
add
int3
inc
mov
int3
xchg
jp
xor
add
fwait
cmpsl
and
xor
lea
fmull
mov
and
inc
sar
or
add
and
leave
lret
ret
lret
and
jp
cmp
iret
mov
iret
rcrb
fwait
mov
scas
cmc
sub
inc
notl
or
daa
rorb
sti
adcb
and
jg
inc
adc
iret
fisttpll
add
inc
mov
in
lcall
je
add
xchg
push
lahf
insb
in
dec
jmp
nop
mov
adc
inc
mov
ficoml
imul
pop
adc
data16
mov
push
ret
cld
cmp
mov
inc
test
dec
jno
es
jmp
lea
inc
and
icebp
add
jne
inc
cmp
mov
stc
cmp
lcall
cmp
imul
fs
mov
cmp
or
pusha
or
int
int
add
rcr
push
jle
shlb
cmp
mov
xor
movl
or
cs
and
shrl
xor
dec
sti
cmp
jne
cmpsb
push
outsb
dec
xchg
or
mov
lret
pop
arpl
mov
jl
sub
int
addl
adc
add
rclb
sarl
mov
sarl
rcll
sub
cmp
andl
pop
xor
or
jnp
sbb
idiv
push
addr16
mov
stc
bound
lret
add
push
shll
inc
lahf
push
in
pop
mov
into
stc
xchg
dec
gs
test
js
sbb
mov
bound
shll
push
cmp
mov
in
push
cwtl
shrb
push
stos
inc
lods
rcrl
xchg
into
leave
shll
pop
cmpsl
adc
mov
or
and
mov
and
or
pop
data16
sub
insl
sbb
js
push
xor
adc
fcomp
mov
movsl
push
mov
adc
sub
sbb
ror
and
pop
bound
adc
lods
jecxz
lock
mov
xor
jg
mov
lret
jno
mov
fisttpl
outsb
shrl
add
xor
push
mov
dec
cmp
insl
jo
loop
jb
xchg
stos
scas
pop
ret
cs
dec
sti
jg
sbb
test
stc
stos
shlb
negb
adc
and
insl
mov
jb
ss
mov
cmp
cmp
rolb
out
popa
cld
inc
xchg
aad
dec
jne
inc
push
clc
push
gs
dec
sub
pop
les
mov
mov
out
mov
test
insb
sub
and
popf
jb
mov
xchg
cld
lcall
dec
test
decl
sahf
repz
lahf
jl
ss
mov
insb
cmpsl
lret
call
sub
lahf
and
cwtl
xadd
lods
mov
pop
cmp
or
xor
sub
dec
dec
adc
testl
mov
xor
xchg
cmp
ja
loopne
pop
add
out
push
sbb
les
and
push
add
xor
fisubrs
nop
and
push
xor
lds
push
xchg
dec
cmp
pop
dec
add
add
ficompl
xchg
add
cmc
shrl
lcall
ljmp
mov
shll
inc
or
add
jb
js
repnz
push
add
dec
das
jecxz
jnp
mov
dec
call
sbb
and
sbb
sbb
push
xchg
addr16
adc
add
out
dec
daa
inc
test
pop
stos
sbb
xor
loope
xor
call
push
mov
xor
sti
sub
clc
add
cmc
sbb
xchg
jecxz
cld
and
fstl
push
push
call
or
mov
mov
and
inc
outsl
arpl
aaa
adc
or
xchg
cmpsl
mov
xchg
hlt
cmp
adc
pop
lods
xchg
jo
xor
push
popf
mov
pop
lock
shrl
add
rcl
popf
pop
aad
scas
lcall
call
enter
sahf
test
cs
mov
or
int
icebp
enter
pop
into
repz
sub
sbb
cmp
sbb
pop
std
daa
mov
js
sbb
cmpsl
notb
or
push
outsl
and
add
ljmp
xlat
fs
jns
adc
jnp
in
xchg
sbb
adc
adc
loopne
out
mov
popa
negl
add
xchg
les
add
xor
mov
add
fld1
ja
dec
ficomps
outsb
repnz
mov
push
adcb
movsl
scas
ficompl
adc
cmpb
xchg
and
daa
push
pop
pop
xor
les
mov
pusha
mov
push
mov
mov
scas
dec
popa
sub
jmp
push
test
das
sti
mov
lahf
adc
dec
add
fsubl
dec
mov
xchg
pop
arpl
mov
push
bound
in
xor
dec
xor
jg
sbb
add
cltd
mov
jne
jle
leave
js
jnp
jae
mov
xchg
sub
or
and
insb
ljmp
lds
mov
fs
lds
xor
lret
mov
mov
sub
imul
dec
in
push
mov
and
popf
jp
outsb
je
mov
shr
jo
jns
push
sub
mov
popf
mov
pop
xchg
fnstenv
cmpsl
or
adc
xchg
jns
pop
lret
push
pop
sub
mov
mov
push
ds
aas
xchg
and
pop
loop
ficoms
sbb
loope
and
adc
jmp
fninit
movsl
push
adc
add
adc
data16
stos
add
aam
adc
and
andl
inc
in
pop
add
movsb
pop
data16
enter
in
addr16
inc
inc
stos
in
jl
mov
push
fwait
inc
mov
lgs
sbb
rclb
mov
sti
mov
xchg
xlat
pop
les
in
cmpb
fwait
mov
and
push
dec
pop
jno
jp
fwait
add
sbb
bswap
mov
ret
rcll
mull
xchg
fs
lock
ss
lea
ds
xchg
xchg
stc
jle
cld
mov
ret
out
inc
js
enter
in
and
movsb
outsb
mov
lods
and
nop
push
popa
or
xchg
pop
push
into
mov
and
stos
ss
pop
loope
mov
repz
or
testb
mov
cmp
divl
loopne
and
loope
or
cld
mov
mov
andl
sbb
push
test
insb
push
lea
stc
xor
push
jb
loope
and
adc
mov
or
ja
notb
mov
pop
xchg
cmp
mov
sbb
or
loop
push
inc
sub
outsb
cmp
adcl
arpl
add
mov
xor
nop
cmp
fidivs
sahf
cltd
dec
push
or
aaa
stos
inc
iret
sahf
push
jg
jnp
faddl
xor
pop
sbb
mov
stos
icebp
andl
addr16
jnp
dec
cli
pop
cmp
mov
call
pop
loopne
loope
dec
cmpsb
adc
movsl
adc
test
in
imul
mov
ds
fisttpll
addl
lcall
xchg
ds
repnz
call
push
loop
xchg
in
push
jecxz
andb
adc
fnstenv
flds
xorl
mov
and
mov
mov
inc
mov
xchg
arpl
pop
or
mov
xchg
mov
or
out
sub
mov
jp
add
inc
push
pop
and
sahf
mov
popf
push
in
repnz
jp
sub
mov
adc
push
call
and
std
sete
lret
cltd
add
add
pop
out
push
inc
mov
sbb
adc
sbb
movsl
lds
adc
sbb
mov
fdivrs
push
test
in
sub
outsl
dec
popa
js
xor
imull
mov
addr16
jge
daa
fsubrl
ja
cld
fcompl
jmp
imul
or
xchg
in
or
push
or
jns
add
lcall
cmc
xchg
adc
add
mov
test
sahf
sbb
or
aas
xchg
dec
cwtl
arpl
dec
into
test
push
aam
and
orl
sbb
mov
mov
in
add
adc
mov
or
aam
and
dec
or
adc
call
sbb
sub
test
cld
popa
enter
or
int3
xchg
jg
sub
cs
jo
cmovo
in
mov
out
mov
push
add
jg
mov
jne
fists
insl
dec
insb
adc
pop
ljmp
sbb
fnstcw
arpl
sbb
xor
stos
mov
addr16
gs
mov
xor
aam
push
mov
xchg
aaa
pop
loop
jnp
fimull
shrl
shll
xchg
lea
arpl
dec
and
sti
pop
outsb
mov
pop
aas
out
push
mov
mov
jg
or
pop
dec
ds
mov
mov
notl
rcrl
test
sub
sahf
aaa
rcrl
push
fs
test
add
jge
jg
clc
xor
mov
cs
fisttps
testb
mov
in
jp
in
xor
not
rclb
sahf
mov
jno
int3
fistpl
scas
pop
imul
inc
push
adc
test
gs
or
mov
je
in
std
jbe
inc
lea
sub
test
sub
rorl
ret
mov
add
in
shlb
dec
sbb
es
frstor
add
hlt
subb
jmp
push
jge
jo
mov
sbb
repz
mov
stos
repz
mov
push
inc
adcl
jmp
or
mov
fwait
dec
jae
int3
sub
xchg
in
xchg
iret
insl
pop
js
mov
lods
jbe
push
cs
in
insl
mov
push
out
rcrb
outsl
jmp
lret
pop
and
dec
or
pop
ss
repnz
adc
ds
add
mov
jb
xor
loop
xchg
fisubrl
cs
xlat
inc
sub
outsl
push
out
test
test
out
cli
shll
push
inc
and
jp
xchg
test
jns
add
test
divl
stos
test
adc
inc
sbb
ljmp
inc
add
mov
dec
nop
push
in
or
push
and
mov
cmp
ficoms
int
mov
std
icebp
ret
or
mov
sub
jle
sub
adc
xchg
inc
push
mov
ja
in
lret
or
jbe
sub
jg
add
testl
xor
xchg
in
aad
push
ja
add
sahf
dec
nop
dec
into
into
mov
fldl
mov
rorl
sbb
pop
sbb
sbb
add
mov
aad
xchg
dec
sub
out
cmp
xchg
or
mov
out
dec
rcrl
and
mov
fimuls
xchg
in
sbb
and
cli
and
push
lods
jecxz
xor
movsl
std
jle
fidivrl
shl
xor
sbb
fimuls
pop
out
popl
jne
pop
insl
sbb
orb
cmp
push
lea
mov
call
mov
cmp
cld
xchg
outsl
sti
test
mov
add
sahf
inc
pusha
jecxz
dec
add
in
cld
lret
jl
jmp
js
xchg
xor
addr16
mov
or
push
jge
xor
push
imul
out
xchg
xchg
fs
xchg
xchg
shlw
or
mov
insl
arpl
movsb
dec
push
xchg
cmp
call
leave
imulb
pop
fs
or
sub
fimuls
xchg
push
dec
loop
ja
shl
ror
xchg
mov
lods
add
cmp
push
jne,pt
loopne
test
dec
fs
inc
adc
aas
push
pop
cs
xchg
in
or
xchg
pop
xor
mov
ds
movl
pop
cmc
inc
daa
pop
arpl
cmp
cwtl
mov
jae
sub
mov
or
push
push
dec
jg
ss
add
mov
ret
call
or
ret
or
and
imul
cmpsl
mov
rcr
out
lds
daa
cmp
clc
pop
cmp
hlt
hlt
ds
je
popa
push
movsb
test
sub
mov
loopne
jae
pop
push
test
pop
cwtl
jp
xor
lods
out
rorb
sbb
enter
cmp
cmpsb
inc
mov
jns
and
clc
sarl
cmp
in
repnz
xchg
pop
mov
or
or
cmp
adc
adc
mov
iret
inc
push
sub
push
pop
gs
fcoml
sahf
or
dec
packuswb
int3
xor
addr16
fldenv
inc
and
mov
outsb
loope
sub
mov
add
jne
mov
aad
popf
jl
mov
pop
lock
std
clc
fdivs
out
cli
sub
shlb
enter
xchg
inc
sub
popf
mov
or
sub
ss
adc
mov
call
fdivl
xchg
divb
les
adc
xchg
xchg
inc
mov
jp
jo
xor
dec
insb
loopne
xchg
addb
xor
jo
stc
dec
dec
popa
mov
mov
adc
dec
mov
lock
nop
add
dec
fldenv
adc
cmp
mov
pop
out
iret
cmpxchg
fisubl
es
popa
aam
mov
subb
stos
dec
jnp
cmp
jecxz
nop
cld
mov
bound
mov
in
ja
xor
fbld
enter
loope
add
xchg
les
arpl
addr16
cmc
xchg
sub
xlat
add
daa
dec
pop
or
sbb
addr16
mov
fdivl
pushf
out
test
inc
xor
stos
ja
nop
pop
mov
mov
addl
or
pop
std
decl
fucomi
scas
adcl
je
insl
push
mov
and
lea
jg
add
pop
jb
jmp
ret
mov
pop
lcall
and
adc
std
test
sbb
mov
repnz
push
add
xchg
or
jne
sub
scas
jno
jnp
mov
scas
cmpsb
mov
in
fs
leave
int
stos
mov
inc
clc
or
inc
add
or
cmp
out
pop
cmp
lahf
jbe
jmp
mov
add
cld
mov
jge
clc
into
push
out
push
cltd
add
imul
mov
ja
fildll
std
stos
clc
xlat
add
sub
mov
nop
xchg
mov
rclb
icebp
clc
inc
sbb
clc
inc
daa
push
clc
mov
leave
fldt
mov
inc
sbb
sti
mov
and
pop
and
data16
lahf
push
ret
loope
scas
int
jnp
mov
adc
mov
arpl
xchg
cmpsb
adc
dec
jae
adc
sbbl
pusha
xchg
ljmp
xchg
or
add
adc
cs
jo
push
adcb
test
or
xchg
aaa
push
mov
sbb
je
sti
xor
fidivl
nop
jecxz
insl
and
sub
mov
out
lods
into
sbb
push
and
mov
mov
push
dec
adc
and
outsb
out
and
lretw
lock
roll
adc
xlat
addr16
pushl
aas
push
stos
cvtps2pi
sub
sub
pop
test
loopne,pn
in
stos
clc
out
sub
push
lea
cli
inc
sbb
push
aam
lahf
mov
fcomip
sahf
xchg
xchg
adc
pop
lods
or
mov
inc
pop
popf
sub
dec
iret
jg
push
mov
arpl
mov
lds
xchg
repz
xor
mov
shr
sbb
cmp
inc
add
or
sbb
jne
inc
andb
mov
popa
mov
add
hlt
pop
mov
js
mov
data16
ret
lea
stos
or
daa
mov
rcrl
or
aaa
cld
fsubrs
sar
lret
nop
cmc
xchg
mov
jg
inc
mov
push
push
ss
in
pushl
aad
jge
je
lods
xchg
enter
and
outsb
push
notl
fisubl
scas
dec
mov
enter
iret
xchg
movsl
or
fidivs
shl
test
push
push
mov
ficoms
sbb
and
orb
es
mov
and
mov
mov
pop
pop
inc
jmp
iret
xchg
or
loop
flds
iret
cs
or
adc
sub
lret
jne
jb
dec
dec
jbe
mov
inc
or
cmpsb
daa
scas
push
dec
andb
dec
cwtl
pushf
mov
push
push
mov
sbb
push
mov
cmpsl
push
cwtl
cmp
inc
out
cmp
add
and
pushf
popa
imul
mov
sub
cmp
push
pop
dec
dec
add
nop
xor
xor
sub
and
aad
sbb
aad
sbb
in
or
or
daa
pop
stc
adc
ss
ljmp
popl
mov
sbb
clc
cld
scas
mov
fucom
mov
ret
push
jl
push
stos
les
mov
xchg
mov
pop
fnsetpm(287
cmpsb
adc
mov
adc
call
or
aam
sbb
movsb
icebp
dec
cmp
lds
stos
orl
lods
insb
insb
in
xor
push
inc
fcomps
fwait
test
ja
mov
dec
xor
pop
sub
test
or
test
int3
inc
outsl
dec
ss
outsb
and
jge
add
movsb
dec
dec
jae
jno
xor
adc
and
inc
mov
pop
push
cmp
mov
adc
or
gs
sub
adc
xchg
pop
into
cld
inc
test
push
sbb
mov
adc
shl
loopne
mov
jl
gs
fcomp
jg
loop
jb
sti
mov
pop
pop
push
cmp
mov
mov
fcomps
jae
daa
insb
cli
or
push
sti
mov
pushf
scas
lds
push
negb
int
jae
ret
mull
jnp
and
and
xchg
dec
test
adc
int
inc
std
and
and
daa
mov
mov
pop
dec
std
pop
cwtl
sub
mov
rcr
pop
dec
xchg
or
inc
mov
and
sahf
js
pop
outsl
shrb
imul
icebp
or
fcompl
and
and
lds
inc
adc
sbb
pop
fisttpl
pop
ds
push
push
jo
loopne
add
jmp
fldenv
jge
push
lods
or
mov
pop
xor
cld
in
test
dec
ror
fldl
xor
xchg
scas
fwait
data16
stc
sti
lahf
fcmovbe
in
pop
mov
inc
push
add
cwtl
or
pop
inc
dec
mov
std
sahf
aam
sub
jl
pop
shlb
push
add
inc
mov
in
lods
pop
push
testb
mov
addr16
push
pop
movsb
cmp
mov
loopne
sub
arpl
add
mov
dec
add
inc
es
and
xchg
jae
push
inc
out
pop
inc
mov
test
ljmp
sbbl
sbb
xor
sbb
scas
cld
xor
xchg
je
int
mov
inc
push
in
mov
push
rolb
cltd
mov
pushl
or
push
xchg
push
mov
push
mov
inc
sub
in
sbb
testb
in
shll
mov
outsb
in
dec
in
cmp
rolw
push
mov
insl
cmp
std
mov
mov
cs
in
out
inc
mov
mov
cmp
outsb
mov
sub
push
lcall
inc
cmpsb
mov
loopne
jno
aam
icebp
test
lods
sahf
shlb
fs
arpl
cli
jecxz
into
and
jl
xor
mov
jbe
push
dec
into
mov
mov
aas
pusha
test
or
ror
test
adc
sub
jp
adc
mov
or
push
adc
loopew
popa
mov
loop
pusha
hlt
incl
mov
mov
fsubs
out
fnsave
js
out
lods
and
sbb
cmpsb
mov
mov
int3
jl
sub
xchg
jecxz
imul
outsl
or
dec
push
js
ss
inc
fisttpll
mov
add
setp
sbb
aam
xchg
push
dec
movsb
jl
cld
sbb
fs
mov
or
add
dec
enter
cmpsl
aas
jecxz
mov
loop
icebp
sbb
lret
ret
dec
push
aam
inc
jecxz
out
subb
out
arpl
fcmovne
fcoms
scas
leave
sub
sbb
sub
int3
fwait
pop
dec
imul
fucomip
push
popa
cmpl
mov
inc
cmc
push
pop
sub
mov
sbb
int3
jno
dec
xchg
popf
mov
mov
xor
cmpsl
ret
push
out
das
pop
pop
fnstsw
nop
cmpsl
pop
fwait
and
mov
pushf
jmp
inc
pushf
enter
and
out
jb
sbb
sahf
lea
cltd
jecxz
adc
je
pushf
jae
iret
insl
aam
call
pop
or
ds
push
pop
outsb
sbb
cltd
andl
imul
pushf
cwtl
jne
sbb
into
insb
xchg
add
and
mov
adc
stc
arpl
add
loopne
inc
push
iret
push
xor
mov
pop
int
inc
loope
stos
into
add
vmulss
sub
sbb
pusha
mov
int3
pop
inc
nop
mov
repz
dec
test
or
sub
test
data16
add
test
icebp
and
fcmovnu
inc
inc
loopne
out
xchg
in
mov
mov
inc
in
stos
and
into
jmp
mov
cmp
cmp
mov
and
push
or
repnz
repz
test
adc
pop
enter
leave
scas
repnz
push
inc
pop
lret
sbb
mov
mov
stos
fs
daa
loop
cmp
icebp
daa
xchg
adcb
sarb
imul
push
push
insl
mov
lcall
loope
out
hlt
fidivl
and
inc
xchg
pop
fmuls
cmp
pop
loopne
cmp
or
lods
add
xlat
mov
dec
mov
pushf
inc
mov
pushf
pop
fistps
add
mov
ret
mov
sarb
fidivrs
mov
xor
je
lahf
inc
imul
inc
push
ss
pop
mov
mov
dec
stos
cmp
cmp
cwtl
and
outsl
arpl
dec
jns
cld
testl
push
pop
and
scas
mov
mov
and
rolb
ret
fdivs
mov
in
ret
xor
stos
iret
sub
adc
xchg
out
les
inc
mov
dec
pop
call
and
sbb
subl
sub
xchg
ror
iret
js
mov
stos
mov
fbld
jb
mov
jno
push
sbb
pop
mov
icebp
sahf
add
ds
sti
mov
sub
mov
pop
mov
pop
and
dec
xchg
out
inc
fst
cltd
mov
stc
xor
pusha
jle
cmpsb
cmpl
push
aam
addl
jb
and
add
test
push
out
pop
adc
inc
pop
fs
adc
rclb
pop
sbb
xor
cmp
mov
je
test
mov
idivl
dec
push
das
xchg
pop
jns
pop
dec
add
push
mov
sub
movsb
push
add
gs
dec
clc
hlt
stc
outsb
jl
jle
mov
jle
repz
mov
push
fwait
jle
add
mov
notb
data16
ret
imul
rorb
inc
xchg
sbb
loop
sbb
cld
sub
jo
das
scas
jecxz
push
int
cmc
mov
adc
add
xor
imul
movsl
aaa
loopne
fs
jg
mov
repnz
imul
rclb
es
lret
push
mov
mov
loop
xchg
dec
push
sub
test
test
ss
pop
mov
pop
into
mov
pop
pop
pop
adc
mov
movsb
lods
lods
sbb
pop
jmp
mov
repz
inc
into
xchg
sub
aaa
aad
das
xor
cli
cmp
es
test
sbb
imul
inc
push
dec
cmc
pop
lods
xor
rcll
jp
fiaddl
mov
xchg
push
push
jne
nop
xchg
into
or
aas
movsb
subb
pop
pop
in
jno
sub
or
cmp
mov
pushf
aaa
fnstenv
mov
or
push
pop
outsb
push
ret
and
mov
cmp
es
pop
jb
hlt
dec
int3
lret
sub
les
mov
dec
add
or
or
jmp
orl
or
into
je
jge
scas
push
ds
into
stc
cmp
xor
mov
cmc
push
push
mov
js,pn
jp
push
dec
cmpb
mov
xchg
mov
jl
aam
or
adcb
ficoml
std
iret
ljmp
xor
mov
pop
clc
test
cmp
jno
mov
mov
mov
popa
test
mov
push
daa
jp
sti
jp
or
add
jecxz
push
dec
jl
setp
lret
int3
ljmp
mov
sbb
js
adc
lcall
lcall
fwait
mov
push
push
movsb
outsb
cmp
and
nop
cmpsl
std
lret
aas
adc
jns
dec
lods
dec
fsubs
pop
pop
fisttpl
inc
adc
imul
andb
shll
lret
sub
jecxz
xchg
clc
pop
outsb
jne
iret
sbbb
negl
pusha
mov
rorl
push
in
stos
mov
mov
cmc
shlb
nop
inc
mov
in
je
mov
test
jle
repz
fwait
icebp
testl
xor
dec
test
fists
adc
movsb
enter
jnp
int3
pop
push
inc
inc
in
pop
and
data16
mov
in
xchg
push
jl
xorl
js
mov
jno
loop
mov
dec
adc
aam
pop
dec
adc
imul
stos
dec
add
gs
mov
aam
sbb
sbb
cmp
int3
iret
jae
inc
negl
stc
xor
and
xchg
add
jmp
repz
sub
add
xor
xor
push
sbb
xchg
jno
insl
cld
push
mov
mov
shrl
jp
mov
fbld
xchg
adc
in
repz
sti
lret
fmull
roll
aaa
hlt
push
sbb
cld
mov
add
sti
lcall
or
inc
rcl
fisubrl
je
mov
adc
sub
fwait
jbe
insb
in
jmp
xor
cmp
push
sub
add
lds
push
ret
jge
add
cli
jge
xchg
cmp
cmp
insl
inc
and
leave
push
add
rclb
popa
rorb
jmp
add
roll
lret
push
mov
jge
into
fs
out
ss
push
inc
cmpsb
daa
and
into
pop
xchg
ret
testl
in
mov
scas
cmp
cmc
into
push
dec
and
jg
pop
cmp
adc
lods
cmpsb
fwait
aad
inc
addl
les
cli
xorl
and
push
and
std
cmp
inc
sarl
out
jnp
lahf
adc
add
sbb
aad
xchg
cmp
mov
jnp
ret
in
and
or
rolb
mov
daa
xchg
sahf
sahf
dec
stos
push
or
cwtl
mov
mov
or
aam
xchg
mov
pusha
inc
std
or
sub
sbb
in
jp
loop
add
addr16
cmc
jl
cmp
fs
dec
mov
xor
mov
imul
cld
add
mov
pop
iret
mov
out
ja
lds
lods
inc
dec
in
adc
or
dec
je
ja
sbb
push
fnstcw
fwait
in
dec
dec
adc
adc
dec
add
mov
dec
dec
push
rolb
dec
xchg
mov
mov
mov
cmp
jle
lods
insb
data16
enter
sub
dec
cmp
lea
jbe
sarb
sbb
pop
push
dec
cmp
scas
and
add
fwait
adc
xor
add
or
out
sbb
lahf
std
fmuls
cmc
rol
in
sub
mov
and
pop
shl
cli
sub
dec
mov
push
sbb
fstpl
notl
jle
into
xchg
mov
jecxz
xor
push
repz
pop
or
and
out
add
jecxz
mov
push
ret
addr16
les
mov
xor
sarl
pop
jmp
add
jp
xchg
iret
mov
xlat
mov
test
rorl
out
fbld
mov
enter
mov
cmp
lock
sbb
mov
fldl
or
lods
push
fs
sub
cmpsl
ss
pop
ret
jle
aad
fsts
dec
jbe
jecxz
cmp
fiadds
scas
or
popf
test
aam
jg
int3
aam
pop
inc
cli
cmpb
jmp
shll
mov
cmp
inc
xchg
jge
mov
add
adc
mov
jg
adc
shlb
js
jb
dec
out
add
aas
sti
rorb
mov
in
leave
mov
vprotd
shrb
dec
shll
pop
enter
int
dec
scas
fsubrp
inc
cltd
rcrb
fcoml
cs
add
fs
sbb
shrl
or
jae
or
out
adc
jnp
inc
lods
and
mov
cmpsb
pop
mov
mov
scas
pop
add
inc
out
add
adc
inc
imul
adc
push
rcrl
push
repz
test
popf
cmp
mov
add
and
pop
ds
jb
lock
mov
cmpsl
iret
jb
shr
and
int
cld
into
stc
dec
push
adc
pop
and
in
or
sub
clc
int3
add
pop
cmc
jno
jp
addr16
icebp
sbb
loope
adc
lds
bnd
movsb
loope
andb
shrl
test
push
in
push
sub
lcall
dec
cltd
push
js
xchg
mov
outsb
cmc
add
push
or
pop
add
mov
add
dec
pop
push
lea
mov
dec
inc
adc
dec
popf
mov
and
push
outsl
jno
or
and
mov
push
dec
sbb
jmp
insb
rclb
push
push
adc
fcompl
push
rcl
sbb
test
mov
adc
test
aas
stc
fdivl
fisubs
adc
aad
pop
jp
push
aas
roll
jnp
push
gs
xchg
xor
mov
fs
adc
dec
sti
add
xchg
push
inc
icebp
in
cmpsl
mov
mov
mov
pop
cmc
sahf
and
push
pusha
push
xchg
lds
cmp
in
icebp
repnz
push
sbb
push
jae
movsl
dec
pop
or
mov
mov
lahf
xchg
xchg
dec
jns
pop
hlt
or
sbb
dec
icebp
adc
mov
hlt
jno
fistps
push
or
dec
int
add
fs
cmp
fidivl
imul
mov
cmp
mov
into
pop
pusha
or
xor
inc
mov
pushf
loope
sti
xchg
jl
pop
mov
or
adc
subl
shrl
pop
out
out
xchg
jmp
mov
xchg
out
xchg
sbb
cmc
cltd
adc
mov
mov
mov
push
les
ds
add
xchg
inc
mov
addr16
and
icebp
mov
movb
push
inc
shlb
clc
lock
std
sub
ret
mov
sbb
lds
mov
aad
out
mov
xchg
inc
push
xchg
mov
lds
sbb
mov
popa
jb
test
out
stos
addr16
lret
xchg
jg
into
das
pop
mov
ljmp
push
xor
mov
stc
or
sub
dec
mov
xor
test
xor
mov
mov
cmp
clc
and
push
divl
enter
jo
or
push
xlat
mov
addr16
sbb
mov
repz
fistpl
lcall
pop
lret
das
orl
aad
mov
subl
dec
imul
mov
mov
nop
mov
add
call
mov
add
addr16
adc
pop
sbb
shll
gs
stos
inc
ds
js
lret
add
rorb
xorb
fdivrp
xchg
je
imul
sub
in
nop
leave
test
ljmp
sub
pushf
add
dec
push
sub
inc
jl
jno
cmp
push
insb
jo
lea
in
dec
mov
out
fmuls
lahf
fstpt
xchg
xor
lods
pop
sti
lds
in
push
in
cwtl
movsb
jne
sti
inc
mov
call
and
mov
jbe
or
iret
mov
jmp
roll
into
mov
aaa
push
mov
jb
pop
pop
out
pop
jno
pop
mov
xchg
push
lret
adc
jge
pop
test
out
inc
andb
jns
or
mov
dec
les
xchg
iret
dec
popa
or
and
mov
hlt
mov
inc
aam
jo
stos
daa
lret
mov
pop
lret
mov
je
sbb
adc
adc
or
and
mov
mov
mov
push
ret
lock
shr
movsl
push
das
sub
mov
xlat
xlat
sub
or
xchg
xor
xor
cmp
ja
dec
dec
and
leave
rcll
pop
pop
std
xchg
mov
lds
mov
loope
jl
cmpsb
js
mov
or
dec
push
loopne
cmp
test
adc
jmp
out
adc
sbb
repz
and
push
test
push
cli
shl
leave
outsl
sti
aas
sahf
ror
pusha
mov
dec
lods
popa
inc
push
ds
xchg
add
xchg
outsl
aaa
js
jne
sti
outsl
or
jmp
adc
xchg
adc
xor
inc
orl
lret
inc
testl
out
pushf
mov
out
xchg
jae
cwtl
repnz
lea
inc
cmp
sub
fsubrl
xchg
mov
in
xchg
test
iret
stos
mov
js
cmpsb
and
shll
mov
test
or
pop
in
loope
inc
cmc
sub
fs
mov
dec
xor
hlt
pusha
inc
inc
mul
cmp
and
lcall
push
mov
insl
pop
repz
inc
sbb
sub
out
pop
cmp
les
pop
xchg
or
cmp
xlat
repz
jecxz
fistpll
adc
aaa
jmp
jge
and
sub
outsl
cltd
jmp
mov
and
mov
inc
repz
sbb
not
ds
fisubl
dec
mov
in
adc
cmpsl
loope
adc
push
pop
iret
aaa
inc
dec
sub
jne
arpl
test
std
ja
out
clc
mov
pop
arpl
pop
jl
and
sbb
jo
push
xlat
pop
popa
ret
cltd
test
imul
push
adc
fwait
mov
stc
je
lods
lds
mov
sub
and
test
adc
popa
or
leave
dec
mov
sub
lods
or
lret
jb
push
insb
jle
inc
pop
cwtl
sbb
mov
andl
mov
mov
aaa
mov
cmp
test
cld
jl
lret
fcoms
jl
insl
pop
mov
jnp
or
push
inc
cmp
dec
into
dec
leave
jbe
lock
cmp
and
push
out
scas
inc
sub
repnz
mov
push
mov
scas
mov
add
std
aas
inc
test
mov
cmp
fsubr
add
push
fiaddl
mov
mov
addr16
cmp
xor
mov
cs
nop
ljmp
inc
notb
jns
pop
in
scas
adc
cmpsl
xchg
popa
cmp
mov
push
mov
dec
jge
das
mov
and
cmpl
inc
dec
shrb
xchg
or
sahf
sub
aaa
dec
popf
xlat
fnsave
enter
jmp
adc
jo,pt
test
mov
xchg
jbe
push
data16
adc
insb
arpl
and
adc
xlat
cmp
int3
push
and
mov
push
js
pop
mov
wrmsr
movsl
adcb
stos
sub
repnz
cmpsb
mov
out
or
shll
daa
jecxz
mov
jo
add
cmp
notl
inc
dec
nop
pusha
movsb
cltd
rorl
je
push
imul
sub
mov
jmp
xchg
xchg
cmp
iret
idiv
dec
dec
sub
and
cmp
inc
repz
test
test
pop
adc
pushf
sarl
pop
pop
cmp
fcomp
into
cmp
sar
popa
lods
mov
mov
xchg
les
mov
dec
ret
or
add
sub
hlt
push
jge
loope
test
mov
cmp
stos
sbb
insl
jnp
jmp
int
loopne
dec
mov
or
rorl
jo
sahf
iret
xchg
xor
cmp
sub
mov
call
divl
sbb
sbb
pop
and
jp
shlb
adc
mov
or
push
mov
je
bound
lods
pop
test
add
fisttpl
sub
jno
jmp
mov
jl
scas
in
push
out
mov
cmpsl
pop
insb
inc
jge
outsb
dec
adc
mov
mov
sub
iret
adc
mov
fsts
xor
daa
adc
push
stos
jge
and
fldcw
jne
notl
lcall
xor
test
push
je
cmp
in
or
sbb
pop
popf
sub
jae
das
jmp
xor
div
mov
push
scas
dec
mov
pusha
push
add
and
orl
bound
sub
sub
jae,pn
popf
and
dec
in
jns
pop
jno
push
dec
adc
int
repz
cmpsl
jb
xchg
push
stc
push
js
adc
outsl
push
xor
outsl
mov
lea
and
or
imul
xchg
testb
sub
aam
adc
dec
iret
xor
pop
cmp
lods
insl
mov
and
inc
hlt
lds
sub
jns
ror
fcomps
nop
dec
jmp
loope
mov
xchg
mov
lds
push
xor
lods
and
in
mov
sub
sbb
mov
clc
insl
xor
mov
insb
vsqrtpd
mov
or
or
and
stos
add
sub
pop
iret
cltd
xchg
cmp
push
push
sub
addl
cmp
mov
or
sahf
fs
and
push
daa
test
int3
fucomp
dec
arpl
gs
stc
call
ret
pop
jbe
xchg
push
movsl
jno
jbe
jb
adc
rclb
ret
sub
stc
out
sbb
fs
mov
adc
mov
jecxz
adc
ja
mov
jp
push
inc
leave
out
xchg
push
fsubl
into
subl
lods
push
push
cmp
sub
dec
jno
es
push
cmc
cmp
movsb
pop
call
lahf
cs
lret
daa
sar
mov
mov
hlt
mov
cmp
addl
insb
into
cmc
cmp
xor
in
rorb
jb
dec
or
dec
pop
sub
out
add
dec
fs
pop
jno
lret
inc
mov
mov
inc
mov
push
and
sbb
inc
ljmp
push
mov
inc
fs
movsb
bound
cmpsl
iret
pop
mov
es
and
orl
cmp
inc
pop
mov
adc
pusha
xor
cmp
mov
mov
xchg
cs
xlat
sti
pop
fisttpll
cmp
lock
pop
or
jle
test
mov
dec
jno
push
cmp
lods
jmp
enter
cmc
movsb
fdivl
inc
or
mov
inc
jbe
repnz
sahf
je
into
pop
jl
sarl
and
incb
jnp
loop
pop
mov
and
jo
movl
hlt
push
pop
add
sti
lods
fmuls
dec
rorb
fildl
stos
aad
loop
insl
and
subb
arpl
xlat
adc
xor
mov
cs
add
aam
mov
mov
inc
imul
xor
inc
outsb
dec
mov
mov
push
jae
fimuls
mov
cmp
mov
xchg
pusha
dec
pop
out
mov
and
mov
push
test
adc
in
hlt
cwtl
pop
cmp
sbb
cld
xor
cmp
push
cmpsb
cltd
mov
popa
lret
fistpll
sbb
dec
mov
add
lret
push
ljmp
in
lret
test
loope
and
out
popa
cltd
mov
pop
stos
mov
add
push
mov
ret
hlt
lock
mov
jno
push
adc
jne
cwtl
aaa
stos
out
sbbb
cmpb
sub
sub
sbb
je
stc
inc
fneni(8087
push
in
or
fwait
aaa
stc
and
clc
loop
push
xchg
inc
clc
xor
aam
push
vandps
push
outsl
cmpb
test
jb
and
sub
xor
mov
lea
add
mov
aad
roll
lea
mov
mov
enter
cmp
lods
setne
xor
hlt
dec
jg
lock
jle
ret
pop
pop
cmp
mov
push
addr16
mov
outsl
mov
jb
lods
mov
jmp
movsb
cwtl
push
in
sti
pop
push
push
sub
dec
lret
cmpsl
frstor
cmpl
inc
xchg
ret
mov
sub
iret
xchg
mov
lea
dec
fadds
bound
aad
add
cld
lock
add
push
int
mov
les
push
jne
push
jno
mov
cmp
cs
lret
inc
mov
cltd
mov
add
popa
sbb
out
out
adc
inc
sbb
or
enter
mov
int
cld
rcrl
scas
aaa
xchg
push
mov
dec
rcrb
pop
dec
shrb
enter
icebp
and
fsub
fmuls
mov
or
cwtl
jmp
cmp
push
shl
test
xor
addr16
je
lret
test
call
push
rorl
dec
adc
adc
sub
icebp
xor
nop
ja
mov
ret
pushf
xlat
and
inc
adc
push
add
jecxz
dec
mov
out
jnp
loope
push
pop
shlb
out
add
in
cld
mov
mov
pop
aam
jmp
sbb
mov
data16
xchg
mov
lods
lock
xor
mov
outsl
stc
out
shlb
stos
out
pop
das
in
pop
cli
test
cld
shlb
cmp
shll
or
andl
xchg
lret
rcrb
mov
insb
and
jo
std
or
cmp
das
lret
mov
inc
or
fbstp
pop
pop
out
lock
sarl
scas
inc
out
je
adc
mov
out
clc
dec
cmp
cmp
bound
ffree
dec
add
mov
cs
cmp
xor
fcmovnbe
repnz
sbb
adcb
incb
call
ds
jle
sub
cmc
mov
lcall
arpl
or
cmp
loope
xor
mov
adc
mov
pop
loopne
or
adc
jecxz
push
adc
mov
sbb
mov
adc
xchg
loopne
clc
int3
sbb
scas
call
dec
shlb
scas
dec
xor
or
aaa
divb
pop
inc
ljmp
ss
scas
pop
xchg
add
aas
mov
cmp
fsts
sub
pop
das
and
inc
call
imul
fstpl
pop
imul
mov
sub
rcrl
pop
dec
loop
in
shrb
mov
outsb
test
dec
jb
mov
loopne
stos
dec
jge
lock
inc
inc
out
mov
shl
add
jmp
jae
mov
out
mov
sbbl
pop
pop
jp
xor
xchg
dec
cltd
mov
ret
dec
push
xor
orl
shll
adc
inc
jo
sub
rorb
xor
jecxz
scas
cmpsb
mov
cmc
mov
cmp
cli
xchg
stos
mov
or
pop
lcall
mov
ds
sub
jne
popa
inc
rolb
outsb
scas
xchg
outsl
in
add
sbb
jge
leave
pushf
add
call
jmp
jecxz
test
popa
dec
jbe
push
xchg
cmpsb
pusha
push
xchg
xor
inc
mov
test
inc
sbb
or
shlb
out
add
mov
jge
pop
jge
imul
mov
shll
mov
dec
loopne
insl
mov
pop
adc
js
shll
mov
mov
pop
or
jg
out
fnsave
push
sbb
push
dec
add
jecxz
lock
addb
rclb
sub
sub
jmp
das
mov
push
testb
into
scas
test
into
icebp
insb
adc
outsl
inc
adc
cmp
clc
int
and
nop
push
pop
mov
mov
outsb
rcrb
test
aad
pop
mov
mov
aas
mov
mov
movsb
cmp
mov
lods
pop
sbb
adc
push
mov
mov
aad
outsl
mov
insl
or
fidivrl
xchg
lahf
jle
jns
hlt
cld
xor
inc
push
mov
lock
push
outsb
repnz
aad
mov
mov
imul
fisttpl
std
div
out
into
inc
jge
adc
jmp
mov
test
jge
push
ja
les
aad
adcb
cmc
adc
xor
pop
aad
xor
pushf
ret
faddp
daa
inc
and
bound
xchg
in
in
test
pusha
inc
lods
mov
mov
stc
mov
ja
arpl
cmp
gs
adc
xchg
mov
or
imul
mov
fistpll
mov
xor
pop
fiaddl
data16
adc
xchg
lock
jno
je
push
insl
dec
xchg
ljmp
stc
sets
pop
and
mov
adc
ficoms
cs
or
push
nop
int3
clc
xchg
addr16
mov
push
lods
push
std
fadds
xchg
daa
xorps
mov
sub
orb
enter
cmp
and
xchg
jmp
dec
icebp
sbb
xor
inc
fldenv
or
mov
cmp
inc
loope
test
outsb
repnz
ret
inc
cmp
ss
inc
lock
imul
cmp
lock
mov
inc
int3
inc
pop
pusha
jmp
ret
movsl
lcall
ret
sarb
or
pushf
inc
push
and
dec
lods
adc
loope
add
push
inc
xlat
fcmovbe
adc
stos
dec
nop
xchg
mov
pop
mov
xor
mov
sarl
mov
or
js
popl
fs
pushf
jae
aas
imul
or
sub
jne
scas
ss
jns
xorb
dec
or
inc
xor
sbb
lahf
mov
xchg
jg
xor
cltd
inc
stc
xchg
leave
je
inc
jp
aas
dec
idivb
and
ficomps
cmc
jae
mov
jno
mov
add
test
lds
adc
enter
enter
std
sbb
out
xor
sub
mov
popa
mov
fisubrl
cli
inc
cmpsb
or
adc
mov
adc
iret
test
inc
push
adc
dec
mulb
stc
sbb
lock
push
or
xor
iret
lods
pop
adc
sub
lock
xchg
aad
sbb
jne
lcall
inc
std
fldcw
imul
sbb
movsb
push
movsl
mov
dec
fidivrs
loopne
mov
movsl
push
scas
sub
mov
rcll
sbb
outsl
cmp
mov
pushf
jb
lcall
inc
ja
paddq
cwtl
sbb
loope
icebp
cmp
pop
adc
es
jecxz
push
pop
jb
out
cmp
and
lea
inc
cltd
test
out
aam
flds
inc
mov
loop
jl
fsts
pushl
xchg
xchg
jge
fiaddl
insb
xor
jb
mov
push
sbb
fbstp
xchg
data16
or
dec
mov
test
fs
or
mov
fisubl
fiaddl
cwtl
add
push
cmpsl
nop
fisttpl
pop
inc
stos
daa
ljmp
push
cmpl
addl
pop
pop
cwtl
scas
adc
sbb
adc
xor
test
out
loopne
lcall
repnz
rol
push
sub
push
dec
andnps
ja
out
cwtl
fimuls
cmp
dec
inc
aad
adc
add
ljmp
pop
into
into
push
mov
ret
or
or
mov
ss
xchg
shlw
loope
sub
cli
fnstcw
gs
fstps
push
clc
push
or
mov
fcmovnbe
test
xor
adc
xor
jmp
flds
scas
or
mov
dec
push
aam
stc
xchg
jno
mov
cmpsl
aas
jge
data16
jmp
cmp
je
out
out
das
cmovbe
inc
into
mov
add
movsl
push
dec
je
mov
mov
in
out
sbb
lods
jo
xchg
in
push
loope
fucomi
arpl
dec
jp
iret
mov
leave
and
xor
or
mov
cmp
stos
sub
loopne
pusha
pop
int3
dec
or
shl
pop
pop
push
lahf
orb
mov
lahf
bound
popf
add
insl
in
mov
int3
mov
mov
fstps
xlat
daa
icebp
jge
and
lods
dec
xchg
popa
lahf
pop
jbe
imul
cmp
fistpl
inc
mov
lods
xchg
out
xor
outsl
and
xchg
and
es
adc
add
add
int
hlt
add
inc
in
loope
sub
pop
sub
sub
jl
add
pusha
in
adc
dec
pop
add
or
push
add
mov
or
out
and
sub
dec
rorl
outsl
imul
mov
cmp
mov
adcb
sbb
sti
or
out
pop
sub
aam
or
cmc
dec
jnp
cld
call
push
je
aas
mov
iret
mov
stc
mov
out
loopne
sub
or
cmc
push
je
add
ds
sbb
fldenv
cwtl
or
xchg
xchg
xchg
cmc
add
aam
or
in
dec
scas
and
cld
sahf
repnz
mull
ds
jo
and
mov
adc
pop
scas
and
inc
lock
ds
fnstsw
xor
inc
ljmp
fisubrl
xor
jle
data16
push
mov
mov
scas
lret
sub
fwait
testl
cmp
mov
push
dec
mov
roll
add
add
lods
mov
adc
mov
fists
xor
fistps
movsl
cmpsb
add
sbb
and
xor
mov
dec
test
cltd
rorb
aad
cmp
incl
mov
inc
cmc
clc
cmc
mov
jge
adc
jnp
incl
and
sbbb
add
xchg
ds
xchg
mov
out
mov
pushf
fbstp
ja
mov
pop
mov
lock
pop
push
outsb
fdiv
pop
xor
mov
inc
xor
rclb
aaa
test
mov
and
insb
add
imul
mov
jae
hlt
adc
push
pop
shrb
add
pop
stos
rorb
dec
push
or
cwtl
and
fs
xchg
imul
lret
rorl
test
mov
loop
pop
call
xor
cs
cld
xchg
and
das
inc
mov
iret
pop
imul
pop
scas
push
out
mov
lea
adc
add
dec
push
cmp
and
daa
shlb
addb
test
outsb
adc
xchg
or
popf
cmp
aaa
inc
ja
sub
orl
das
aad
les
mov
inc
in
jbe
prefetch
or
test
and
icebp
jbe
inc
ja
pop
lods
clc
cmp
xor
xlat
or
rolb
cmp
rdtsc
in
mov
xor
movsl
adc
sub
loopne,pt
add
enter
xor
pop
out
mov
push
outsl
popf
push
outsb
pop
cli
or
arpl
rcl
out
mov
js
orb
daa
addb
xchg
inc
inc
push
pop
jns
cltd
dec
pushf
inc
mov
mov
adc
fiaddl
scas
jle
pop
mov
push
ljmp
and
inc
push
mov
add
lods
cmp
push
push
sub
dec
imul
sbb
test
or
js
lock
into
cld
xchg
arpl
pop
repz
cld
xor
in
dec
xor
cmp
sbb
mov
adc
call
inc
dec
and
fldcw
push
fdivl
ds
or
aaa
bound
test
test
cs
or
push
xor
jge
or
andl
fbld
or
outsb
enter
rorl
lods
les
jne
and
cmc
sbb
mov
into
sub
fsubs
xchg
xor
loop
inc
lds
stc
arpl
test
adc
pop
enter
add
stc
lret
xlat
xchg
sub
lcall
mov
std
jns
push
sbb
mov
stos
adc
cmpsb
dec
std
cmovg
shrl
je
pop
lods
jg
add
ja
mov
bound
jecxz
subb
iret
add
in
movsb
int
test
jae
fcoms
cmp
mov
es
push
dec
or
and
movsl
or
ja
inc
das
aad
pop
pushf
push
cmpsl
jbe
arpl
cmpb
ss
push
pop
repz
inc
xor
xor
mov
xor
xchg
jnp
es
gs
enter
xor
or
ja
or
dec
out
push
out
enter
mov
fsubrs
xchg
outsl
xor
shl
or
test
testb
daa
and
xchg
jge
test
mov
jne
jbe
pop
jge
pop
sub
insb
add
dec
mov
dec
mov
xor
adc
mov
jmp
mov
mov
testl
push
push
fs
xor
pop
mov
enter
jno
data16
dec
notb
or
shrb
dec
push
mov
sbb
fcomi
ret
cmp
loopne
jmp
xor
inc
add
cli
push
imul
xchg
movsl
jno
mov
inc
xchg
popa
inc
and
mov
imul
addr16
mov
test
jb
mov
cmp
loopne
push
rclb
data16
xlat
movsl
xchg
mov
add
push
cmp
ret
mov
mov
pusha
call
lret
stc
jl
lods
addr16
ja
or
test
cli
xchg
cld
jmp
adc
sarb
and
arpl
popf
clc
std
and
push
lret
xor
faddl
mov
lds
add
nop
mov
je
xchg
out
call
popa
les
bound
inc
in
cmpsb
push
push
mov
outsb
outsb
xor
out
das
mov
addr16
mov
lcall
jae,pt
imul
mov
push
call
dec
mov
pop
loope
std
xor
aad
add
adc
jnp
xchg
dec
sub
fsubl
ljmp
mov
cmp
out
jge
push
bound
push
lods
add
inc
pop
push
and
shll
jg
sahf
inc
fists
add
test
jae
stos
pushf
and
and
cltd
pusha
mov
mov
cli
push
jge
icebp
inc
adc
push
sbb
repnz
lea
enter
xor
or
lds
and
les
dec
inc
rdpmc
and
icebp
add
ret
mov
dec
fdivs
add
ljmp
jae
fsubs
scas
roll
rorb
fs
clc
dec
jge
pop
js
sahf
test
add
jae
mov
test
lods
cltd
dec
push
loopne
xlat
cmp
cs
cli
inc
daa
scas
insb
leave
or
pop
or
xor
sti
clc
pop
add
push
add
cmp
rorb
and
push
or
push
popa
out
shrb
pop
clc
mov
stos
shrb
das
mull
push
adc
adc
les
inc
outsb
mov
xor
mov
in
jne
xor
cmp
imul
sbb
loop
mov
je
mov
sbb
daa
stos
push
mov
xchg
sub
xchg
mov
pop
pop
aaa
xor
testb
gs
pop
aaa
dec
lret
lods
dec
sarl
and
fcoml
jl
jle
mov
ljmp
cltd
pushf
pop
xor
std
push
int3
xor
ret
repnz
int
inc
fnstsw
shll
cmp
lock
into
mov
xchg
popf
xchg
add
mov
xchg
lret
mov
lods
aam
push
sbb
mov
push
push
test
jp
scas
push
xchg
ljmp
dec
ja
pop
inc
push
rcll
pop
mov
ljmp
and
aas
mov
loope
xor
scas
xchg
es
or
cwtl
mov
inc
je
dec
int
jecxz
cmp
pusha
pushf
push
xor
insb
jae
pop
adc
and
sub
dec
and
fstps
cs
out
xchg
push
test
pop
shrl
adc
scas
push
fdivrl
lret
cmp
or
aas
jnp
add
xor
sbb
mov
mov
ret
data16
imul
or
mov
and
jbe
call
cwtl
daa
cltd
insb
or
ror
js
jo
pop
and
or
imul
cli
push
sub
dec
cli
pop
or
ja
jg
sahf
ja
and
xchg
jge
xchg
in
sar
std
lahf
jp,pt
cld
xchg
test
inc
jmp
sbb
cs
push
hlt
ret
or
inc
out
dec
dec
sub
pop
leave
insb
cmpsb
pop
test
rol
cld
in
sub
arpl
daa
and
pop
into
mov
aad
mov
mov
je
xor
sub
test
into
push
repz
xchg
pop
mov
cmp
adc
je
mov
mov
xor
icebp
cmp
xchg
repnz
lahf
push
hlt
jp
mov
test
inc
pop
lds
mov
mov
out
in
jno
out
push
icebp
cltd
jbe
sbb
loop
test
sub
inc
out
cmp
cmp
adc
orb
loope
arpl
cmp
or
shrl
pusha
and
dec
jo
test
add
pop
rorl
in
frstor
pop
jl
xor
lcall
pop
imul
xchg
in
push
add
sahf
insb
shl
sub
pop
or
test
shrb
pop
jns
push
mov
ror
scas
stos
add
xchg
gs
rolb
lea
stos
mov
mov
adc
enter
pop
test
mov
sub
hlt
inc
mov
jb
xor
je
sub
pop
clc
sub
xchg
outsb
pop
and
mov
jnp
dec
sbbl
jecxz
shrb
mov
mov
xor
add
iret
push
jle
je
imul
mov
out
sbb
std
pushf
leave
pop
imull
insb
data16
adc
fmuls
loope
push
ja
push
jl
mov
aaa
push
subl
popa
cmpsl
mov
arpl
push
stos
lahf
dec
cmp
cmpsl
mov
mov
xor
jns
jne
das
or
cmp
add
out
scas
fwait
pop
es
js
repz
dec
mov
das
pop
int
xlat
fldenv
xorb
orb
mov
mov
jb
sub
cltd
push
mov
push
mov
mov
xor
push
sbb
mov
adc
xchg
nop
enter
test
jg
or
insl
insl
sti
in
and
out
sub
test
xchg
mov
cs
mov
xchg
xchg
jno
mov
movsb
ror
int
sub
lret
sbb
or
pop
loopne
movsb
xorb
popa
jae
daa
test
lahf
xor
add
mov
add
pop
iret
rol
out
inc
sub
xor
sbb
xor
dec
dec
insl
stc
lods
pop
loope
jnp
lret
mov
pushf
push
sbb
dec
in
js
insb
or
add
std
cwtl
sbb
adc
into
pop
jo
insb
adc
aad
mov
inc
pop
les
test
inc
xor
xor
push
shl
xor
scas
repz
repz
out
push
mov
adc
mov
add
lods
int3
stos
xchg
leave
jae
cmp
mov
and
call
or
jge
loop
or
repz
fcomp
pop
jbe
out
loop
lock
das
add
adc
ret
ret
jo
push
dec
mov
mov
inc
jno
push
xchg
std
mov
shlb
xchg
cmpsl
rcrl
stos
fbstp
inc
xor
mov
outsl
ljmp
push
push
pushf
jle
push
jne
pop
inc
cmc
mov
out
loop
xchg
shrl
dec
rolb
movsb
bound
dec
mov
cmp
pop
inc
mov
mov
call
ret
lcall
dec
fwait
pop
repnz
cs
sbbb
mov
push
mov
orb
sub
movsb
jno
dec
jge
adc
ss
xchg
adc
adc
xor
pop
sbbl
into
andl
mov
stc
lahf
sub
imul
or
inc
mov
andl
sbb
fildll
mov
jb
lods
xchg
jmp
fistps
fmuls
pop
fadds
dec
mov
mov
outsl
icebp
or
jne
mul
aas
fcmovu
and
rolb
loop
pop
dec
fnstenv
jns
xchg
fbld
into
repnz
lahf
rep
rcll
pop
arpl
mov
je
pop
fimull
mov
jle
dec
inc
push
xchg
andb
dec
jbe
test
add
sub
or
and
jmp
or
xor
ss
movhps
add
lods
movsl
push
push
and
xor
xor
xchg
int3
mov
push
aas
adc
inc
sub
fmul
push
dec
imul
roll
sub
and
cwtl
xchg
cmp
out
or
popa
fcoml
loope
and
lcall
iret
aad
fs
inc
popf
mov
mov
xchg
hlt
sub
push
mov
jle
jge
call
out
and
lcall
or
test
mov
inc
jno
lea
insb
mov
pop
adc
ficoml
fadd
aaa
adc
leave
sbb
cmp
push
xor
and
sub
sub
pop
pop
loopne
in
out
jge
punpckhdq
movsb
repnz
stos
and
in
mov
mov
nop
mov
movsl
jb
push
mov
mov
jo
add
aas
cmpsb
sub
add
pop
add
fwait
adc
and
cltd
sbb
stos
add
sbb
sub
and
xchg
adc
lcall
aas
cmpsb
iret
push
push
pop
sub
push
add
mov
xchg
xor
mov
imul
push
in
mov
xchg
xchg
icebp
or
mov
out
mov
test
pop
and
adcb
nop
sbb
sahf
pop
icebp
jmp
test
hlt
and
sub
xchg
jle
aas
adc
jns
call
shrl
pop
jg
das
mov
jno
push
sbb
imul
pop
or
loop
and
adc
stos
and
sti
lods
or
lods
sbb
jmp
mov
mov
arpl
roll
add
loop
pmaxsw
jns
repnz
fidivl
or
inc
es
movsb
adc
push
adc
mov
mov
scas
push
or
out
lods
mov
xor
mov
dec
ljmp
mov
lds
jnp
add
cmp
lods
mov
out
push
psraw
cmp
xchg
andb
push
shll
or
jmp
les
xor
hlt
fisttps
or
sub
in
sub
scas
test
fdivs
or
or
fwait
stos
xor
push
call
mov
and
and
cs
mov
ljmp
mov
cmp
jne
inc
imul
lods
out
pop
or
xor
rorl
stos
hlt
add
cmpsb
cmp
sarl
addr16
push
mov
mov
loope
or
mov
dec
cmp
jecxz
jp
jnp
repz
shrb
int3
subl
roll
and
or
nop
daa
add
adc
shlw
hlt
mov
push
fsub
xchg
lods
xchg
sub
mov
test
dec
aam
mov
lods
mov
pop
xchg
mov
pop
dec
adcb
add
insb
push
dec
xchg
mov
das
ret
ljmp
lods
pop
inc
lahf
push
js
popa
je
push
ds
jb
paddw
jg
push
mov
push
lret
and
xchg
push
mov
dec
daa
call
cld
sub
cs
test
jnp
push
test
aad
in
popf
push
out
rolb
cmp
jae
push
arpl
ljmp
pop
cmpsb
dec
xchg
fldcw
es
sub
mov
adcl
and
adc
lcall
cmpsl
pop
xchg
adc
rcrl
stos
xchg
addr16
loopne
lods
adcl
aaa
loopne
sti
ret
out
in
dec
movsb
or
pop
mov
stc
and
sbb
dec
pop
adcl
push
push
lods
sub
stos
pop
nop
ljmp
or
out
cld
aam
fadds
movsl
push
sbb
in
or
inc
cmp
movb
leave
pop
dec
adc
aaa
jge
xor
imul
sbb
inc
xchg
bound
sub
test
mov
push
dec
movsl
cltd
push
push
and
xchg
xor
lret
call
adcb
andb
enter
xor
jo
addr16
and
pop
add
lahf
pop
jb
iret
jnp
mov
mov
cltd
out
mov
daa
xchg
das
inc
ficoml
fnstsw
sub
lsl
xchg
pop
mov
sti
aas
xor
cmp
out
mov
cmpsb
hlt
fs
lock
and
jbe
rcll
mov
loopne
cld
sub
jg
leave
test
int
test
ds
std
adc
sub
push
inc
sbb
add
and
lahf
sub
adc
jne
lods
or
pop
cmp
test
jae
xor
ss
pop
pop
push
sub
mov
push
sub
dec
mov
movsb
ret
and
add
dec
cmp
sbb
mov
lahf
outsb
jp
aad
dec
cwtl
aaa
insl
cli
push
mov
pop
and
lret
pop
fdivl
out
shrl
sbb
xlat
jge
jl
shlb
rclb
iret
in
pop
mov
test
imul
cld
ret
cmpsl
nop
dec
je
dec
nop
push
aam
push
aas
jb
push
popa
mov
bound
pop
and
std
imul
xor
aad
jno
xor
or
adc
pop
adc
xchg
cmp
mov
cli
sub
inc
sbb
sarl
cwtl
bound
call
call
sbb
push
push
cmpsb
jge
pop
ds
cmpl
or
sti
test
js
fldenv
out
in
leave
jo
jbe
or
cmp
movsb
bound
js
xor
scas
das
loopne
adc
repz
cld
out
test
loop
aam
jb
jne
in
fbld
dec
std
movsb
das
cmc
in
mov
out
pop
push
jg
mov
xor
icebp
decl
arpl
adc
cmc
sub
push
pop
sub
xor
popa
push
test
add
adc
negl
sbbb
pop
loope
aaa
not
pop
fstps
push
jmp
jo
js
pop
and
cmpsb
repz
imul
arpl
lcall
jbe
pop
adc
popf
xchg
jb
push
arpl
test
xor
pop
push
xchg
dec
mov
aaa
add
arpl
add
inc
popa
bound
lods
outsl
movsl
pop
ja
dec
sti
out
inc
mov
sub
jp
cmc
insl
sbb
andb
cmpsb
push
test
inc
popf
xor
test
scas
add
jge
int3
and
adcb
fcoml
and
mov
add
or
xor
inc
stos
fildll
xchg
adc
xchg
dec
arpl
sub
rolb
add
xor
mov
jmp
js
mov
ss
jg
push
insb
ds
es
in
fucom
icebp
scas
and
ss
jp
ja
mov
push
or
mov
mov
fisttpl
sbb
push
rcrl
jmp
mov
xchg
sub
sub
scas
xchg
repnz
aam
iret
js
xchg
sbb
inc
fs
inc
xchg
pop
pop
test
xor
aaa
xchg
xchg
call
cwtl
fnsave
pop
lcall
int
popf
loopne
inc
scas
jmp
mov
xor
pop
adc
dec
cmpsl
ds
and
shll
push
jmp
sbbl
clc
push
insb
movsl
shrb
fistpl
ss
xchg
aam
int3
mov
pop
clc
aas
sti
push
push
adc
aaa
add
hlt
ss
mov
popf
setb
imul
pop
cmpb
enter
rolb
out
jge
int3
xchg
nop
mov
sub
dec
mov
bndldx
ret
rorb
adc
and
test
cmc
mov
pop
adc
stos
outsb
lods
adc
and
es
stos
loop
xor
in
cmpsl
cli
and
xchg
mov
push
jae
or
push
jns
imul
inc
icebp
nop
fwait
lret
aam
in
lret
mov
out
pop
or
subb
loope
pop
shlb
insb
popl
jns
mov
inc
les
adc
test
jp
cmp
pusha
xor
out
mov
sub
pop
sbb
cmp
mov
int3
mov
enter
xchg
xorl
icebp
adc
or
mov
jl
stos
pop
mov
dec
call
arpl
jmp
ret
mov
cli
xorl
shl
in
enter
sub
adc
cmp
jl
and
je
shlb
mov
pop
sub
jmp
roll
addl
mov
hlt
test
test
insb
sbb
scas
push
test
xchg
lahf
xor
mov
fldl
adc
push
je
adc
jo
and
xor
jne
dec
imul
pop
cmp
int
icebp
out
and
jne
cmpsl
sub
xchg
push
pushf
mov
adc
out
push
or
in
imul
adc
adc
sub
ficoms
das
inc
lods
push
xor
cmc
sbb
cmp
rorl
test
cmp
mov
or
jb
mov
push
xchg
dec
push
xchg
mov
in
cmp
inc
sbb
ret
pushf
test
call
push
fdivs
adc
pop
lcall
mov
leave
fadd
push
repz
dec
mov
loopne
pop
xlat
xchg
sahf
mov
stos
inc
cltd
in
pop
adc
inc
ljmp
daa
insl
testl
add
inc
sbbb
and
out
repnz
lds
fistpl
xor
dec
fstpl
or
push
imul
ljmp
pusha
push
cwtl
xor
sub
es
push
push
lea
sub
mov
or
decb
and
ret
push
jmp
lea
mov
cltd
mov
mov
lock
bound
cwtl
xor
adc
jnp
xchg
mov
movb
loop
add
pop
xchg
jp
std
dec
int3
lock
push
pop
mov
add
xchg
xchg
lea
clc
je
push
xchg
push
std
xchg
shll
adcb
call
ds
sbb
mov
shll
mov
jmp
adc
xchg
in
sbb
fdiv
mov
orb
mov
mov
movsl
pop
mov
mov
push
popa
aad
cmp
fstpl
mov
insb
ja
adc
inc
pushf
lock
push
sahf
sub
cmp
mov
cmc
jb
and
roll
mov
out
fwait
adc
aaa
add
icebp
jb
jle
mov
mov
jecxz
scas
mov
mov
ja
mov
jge
pop
xchg
in
mov
mov
ret
pop
and
add
sub
push
mov
or
out
arpl
or
cmpsb
or
mov
sbb
mov
icebp
iret
lea
sub
push
dec
sub
add
jne
loop
mov
mov
jmp
stc
mov
fptan
enter
daa
pop
mov
pop
movsl
cmp
adc
and
or
dec
std
notb
push
jecxz
add
iret
int3
cmpxchg
adc
mov
mov
pusha
fldcw
stos
das
icebp
sbbb
shrb
push
fistps
pusha
inc
pop
outsb
jo
pop
cld
out
inc
scas
sbb
mov
imul
sub
xchg
pop
sahf
ficompl
jae
lahf
fs
mov
add
pop
inc
scas
bound
xor
inc
sub
xchg
sbbb
sti
sub
lcall
xchg
or
push
push
popa
scas
pushf
mov
jmp
cmpsb
jge
lcall
mov
loop
fidivrs
jnp
mov
cltd
cmp
mov
test
mov
jle
out
xchg
pop
xchg
jns
iret
test
push
daa
jp
orb
cltd
sub
jg
scas
test
inc
push
shr
jne
pusha
out
repz
sbb
lock
push
adc
mov
in
addr16
cmpsl
mov
add
add
sbb
jnp
push
pand
or
push
sbb
cmp
inc
pop
mov
inc
pop
das
stos
inc
sub
cwtl
out
test
cmpsl
fistpl
xor
jne
out
xchg
mov
psrlq
fistl
pop
push
ret
mov
pop
cmp
pop
xchg
xor
xchg
lods
mov
mov
cmp
jg
adc
dec
ss
xor
addr16
not
fwait
inc
push
sub
adc
fsubrl
sbb
ss
mov
push
pop
jns
in
dec
fs
push
cmp
push
std
push
sbb
out
fiaddl
pop
ret
sarl
inc
sbb
rcll
pop
aam
push
mov
out
ds
mov
inc
dec
xor
pop
inc
icebp
test
dec
sub
dec
sub
clc
int3
or
mov
loope
push
sbbb
sbb
lret
pop
mov
loop
or
fimull
add
sbb
xor
cltd
mov
ja
dec
aad
xor
mov
mov
or
pop
shll
and
adc
sbb
or
adc
dec
cmp
das
lret
in
jb
notl
cmp
shlb
int
imul
jb
pop
lret
mov
dec
int3
stos
cltd
jl
stos
out
jp
jae
mov
xor
dec
or
dec
iret
outsl
jno
xor
mov
cmc
mov
lea
cmpsl
dec
in
xor
pop
out
jo
or
mov
sar
and
orl
sbb
add
in
xlat
mov
mov
xchg
and
aaa
fsubrl
std
loopne
shrl
mov
jge
sub
xchg
sub
xlat
lds
out
ret
mov
cld
xlat
adcl
cld
or
push
scas
sbb
pop
shl
stos
popf
rclb
jns
xchg
pop
in
mov
shll
sub
cmpsb
fwait
sub
cltd
inc
mov
push
pushf
ljmp
cli
stc
popf
or
adc
int3
sub
lahf
shrl
add
mov
add
out
mov
push
pusha
cmp
push
dec
cmp
add
lods
mull
fcomi
cli
or
xor
sbb
sbb
lods
or
leave
cld
pop
lds
pop
stos
push
sub
out
inc
jge
adc
jne
sub
out
sub
push
mov
adc
jns
mov
push
push
push
xchg
ds
jnp
jno
inc
ds
xor
cld
movsl
out
jbe
sub
inc
cld
fsubrs
pop
jne
shll
and
jbe
mov
lea
mov
pop
mov
cmp
pop
inc
sbb
inc
xlat
movb
dec
xor
outsl
mov
add
dec
sbb
inc
insl
dec
dec
loop
jb
xor
mov
adc
pop
movsb
cmp
jnp
test
cli
cmc
cmpsl
push
adc
xchg
sbb
inc
mov
loop
icebp
dec
fimuls
or
ficoml
or
add
nop
ret
push
mov
aam
jno
push
cmc
cmpsl
mov
xchg
push
fcoms
pop
sub
fisubrs
mov
inc
out
push
mov
xchg
popa
scas
dec
mov
sbb
pminub
int
lds
add
push
testl
or
jg
push
jns
shll
fsubrs
adc
adc
ljmp
loop
fdivp
mov
jo
pusha
mov
ljmp
hlt
fwait
test
xchg
fnstcw
aad
jns
jmp
cld
mov
shll
test
cmc
inc
jecxz
mov
psadbw
nop
dec
jecxz
sbb
stos
lcall
push
mov
je
out
add
xchg
insl
dec
mov
dec
cmp
inc
data16
mov
in
add
icebp
jge
testb
sbb
mov
rorl
sahf
es
out
adc
fcoml
inc
loopne
repnz
decl
cwtl
mov
sbb
or
push
repnz
popa
or
mov
das
pusha
imul
mov
pop
mov
insb
adc
sub
lcall
fcom
in
enter
jne
mov
push
jp
repnz
xchg
mov
pop
and
sbbl
jbe
dec
mov
cmp
fstps
fisttpl
dec
aad
xchg
sbb
pop
cli
aaa
rcl
pop
jnp
mov
in
in
xor
push
in
data16
push
jne
stos
pusha
xchg
cmp
and
addr16
mov
jge
sub
jl
stc
adc
ljmp
ret
enter
inc
add
and
xchg
add
cmpsb
call
lcall
and
xchg
ret
inc
xor
popf
aaa
or
xchg
add
add
cli
pop
cld
scas
jl
in
fnstcw
test
das
sbb
mov
jno
aad
sbb
dec
arpl
pop
xchg
cmp
out
jecxz
adc
mov
movl
fldcw
adc
mov
mov
cmp
insl
dec
pop
cmp
sbbl
push
add
pop
enter
jae
pusha
icebp
cmpsl
push
xchg
dec
and
mov
or
pop
inc
popf
mov
mov
ret
das
sub
mov
and
pusha
arpl
scas
ret
dec
aad
adc
mov
jecxz
sub
data16
fbld
dec
fcomps
hlt
or
sahf
hlt
push
xor
loopne
mov
pop
inc
push
ds
les
test
inc
sbb
inc
out
xchg
clc
and
mov
rcrl
sar
mov
or
stos
pop
call
dec
cmp
xchg
or
aaa
fsts
fucomp
clc
jp
enter
mov
sub
sub
jecxz
fcoml
dec
xor
jle
loop
imul
je
jge
pushf
aam
mov
add
test
xchg
scas
adcl
cltd
icebp
loop
xor
pop
xor
in
ljmp
jb
dec
insl
xchg
scas
ljmp
xchg
xor
pop
xchg
lret
out
mull
fcomip
dec
idiv
aaa
sarb
lock
hlt
cld
mov
inc
sbb
xchg
xlat
xor
mov
push
out
push
inc
cltd
into
enter
mov
aas
sbb
mov
shrb
push
xchg
sub
int
xchg
jle
cmc
addr16
pop
xor
ret
insl
lds
or
inc
or
test
or
lea
push
rolb
inc
shr
addr16
jnp
sbb
lahf
sbb
dec
icebp
inc
stc
lea
frstor
pop
mov
in
add
mov
clc
adc
pop
mov
sbb
jmp
out
sbb
inc
ljmp
pminub
stos
inc
dec
xchg
push
xor
std
stc
dec
in
fwait
jns
stos
sbb
in
out
andb
in
dec
adc
push
mov
push
icebp
mov
jmp
stos
jo
inc
imul
fcmovnu
ds
jns
repz
jnp
scas
sbb
fistpl
mov
xchg
sub
lds
iret
repnz
rcr
stc
prefetchwt1
test
mov
arpl
jmp
lahf
xor
daa
jmp
mov
mov
dec
and
jge
xor
lcall
or
int
push
push
xor
push
ret
das
xor
adc
mov
cmp
adc
lahf
test
add
adcb
jecxz
lret
and
lods
fdivs
int3
leave
dec
shll
lea
adc
lcall
lock
dec
imul
lahf
mov
fisttps
sbb
or
popf
mov
xchg
rorl
daa
fmul
arpl
add
ficomps
cmp
lods
cmpsl
into
icebp
xchg
in
ss
shlb
imul
fisttpll
pop
add
test
jmp
xchg
push
loop
bound
cmpsb
jle
cmp
testl
pushf
js
pop
gs
les
sti
and
andl
xbegin
add
dec
fldl
pop
jge
loopne
cld
addl
cltd
add
jae
test
cmc
mov
les
mov
mov
jl
mov
inc
scas
xor
mov
pop
sub
or
or
sbb
repz
xchg
outsl
xor
sahf
ret
inc
xchg
std
adc
hlt
push
mov
mov
insl
mov
push
and
jle
jno
and
jmp
fsub
jno
inc
stos
int
inc
popf
mov
xchg
enter
imul
inc
xchg
and
fs
inc
imul
inc
adc
push
pop
inc
jl
cmp
push
adc
lahf
lods
lods
cltd
push
hlt
xchg
stos
mov
xchg
mov
outsl
inc
xchg
sbb
sbb
push
out
mov
jecxz
inc
or
les
mov
pop
dec
nop
test
in
cwtl
stos
inc
pop
jg
or
ljmp
jge
mov
sbb
pop
and
incb
cltd
and
sub
mov
scas
jp
out
push
xchg
popf
mov
es
add
adc
inc
push
sti
test
xor
push
cmp
ror
loope
insl
cmp
pushf
lods
fldcw
mov
cltd
inc
decl
aad
test
mov
lret
add
jb
loop
mov
stos
cmp
or
or
fwait
add
push
mov
aad
in
into
fldt
or
cs
lods
out
dec
fdivr
push
xchg
add
jmp
rcl
push
sti
mov
int3
mov
inc
push
filds
adc
mov
or
jo
movsb
into
lcall
test
jne
mov
not
call
dec
int
shl
ret
es
ror
jae
cld
dec
ret
mov
ljmp
ret
into
push
add
mov
ror
push
lods
hlt
testb
outsb
ret
mov
fildll
ficoml
popa
sub
in
movsl
jmp
jnp
cld
sbb
push
mov
push
inc
sub
cltd
xchg
fsubrs
inc
aaa
add
mov
sbb
inc
movsb
jnp
and
mov
and
mov
xor
mov
loope
add
jbe
jne
mov
test
aam
xadd
inc
inc
jmp
add
movsb
aad
jp
mov
mov
lods
mov
test
clc
sbb
outsb
inc
cmpsb
iret
fwait
mov
xor
test
movsb
das
psraw
lret
gs
jp
cmp
sub
aam
dec
icebp
popf
cli
pop
leave
mov
sahf
jge
add
sub
addr16
into
adc
pop
stos
cmp
test
inc
push
add
xlat
leave
or
add
les
fcomps
test
mov
bnd
inc
push
shrb
jnp
cs
push
or
leave
inc
sbb
pop
push
mov
repz
popf
inc
pop
pop
rorl
ja
xor
jl
shlb
decl
call
ja
in
mov
call
pop
pop
addl
cmp
aaa
pop
pop
fs
icebp
test
jo
xor
pop
mov
in
jno
adc
xchg
mov
ja
ja
ss
sbb
mov
pop
scas
or
or
decl
xchg
or
enter
fimuls
outsl
mov
jl
push
ret
xor
jl
je
icebp
mov
cmp
jg
mov
jo
fs
or
and
jae
dec
xor
in
pop
js
in
and
or
cmc
and
nop
mul
sti
push
pop
push
ret
sub
call
inc
sahf
pop
push
loopne
dec
ja
loop
or
aam
scas
pop
fbstp
addr16
mov
stos
dec
jecxz
je
and
fldenv
div
and
jbe
jnp
cmp
fisubl
loop
xor
xchg
push
mov
cwtl
xchg
xchg
lahf
jmp
pop
add
ror
mov
xchg
sub
dec
in
mov
push
xor
xchg
and
mov
push
and
loope
sbb
add
out
hlt
in
sub
xchg
pop
test
ficompl
adc
arpl
xchg
or
int
stos
sub
in
sub
add
ret
inc
lock
in
sub
imul
sbb
inc
dec
pop
mov
sbb
lds
jae
adc
xor
pop
vphadduwq
adc
addr16
shl
int3
std
dec
icebp
push
mov
push
jge
push
sub
add
repnz
jg
cmp
outsb
sub
mov
sbbb
insb
lahf
aad
cmpb
insl
fdivl
mov
leave
out
lods
sbb
push
push
lea
icebp
in
dec
cwtl
gs
mov
pop
je
aad
jb
jno
movsl
cwtl
pop
mov
push
stc
push
fmulp
fsubrs
scas
mov
fstps
add
adc
mov
push
pop
mov
movsl
or
test
daa
pop
adc
push
loopne
lods
popa
adc
inc
cltd
lcall
adc
jbe
cld
aaa
ret
adc
pop
hlt
push
leave
inc
and
test
insb
jo
push
or
or
xchg
sbb
cmp
mov
jne
push
repnz
inc
repnz
lea
inc
mov
mov
and
or
push
loopne
and
mov
add
mov
mov
imul
in
cmpsl
gs
mov
pop
fadds
or
adc
push
leave
inc
sarb
shlb
fwait
xor
pop
int
bound
ret
add
xor
pop
rclb
shll
dec
cmpb
xchg
ret
pop
shrl
mov
xchg
xor
mov
ret
cmpsb
stos
sarb
xchg
ret
out
push
adc
push
jae
out
dec
inc
nop
sub
and
les
jg
mov
xor
popa
mov
js
shrb
xor
pop
mov
inc
cmp
imul
mov
ss
test
xchg
mov
into
jl
dec
mov
in
subl
lods
xchg
mov
sti
push
fnsave
jb
arpl
adc
push
mov
cmp
arpl
pop
mov
sub
push
jns
xor
imul
xchg
mov
xchg
or
mov
xor
jp
outsl
imul
pop
push
loope
and
sbb
jb
sbb
or
sbb
jl
adc
dec
push
iret
mov
inc
fcomps
pushf
or
shll
lds
ret
xor
incb
popa
js
sub
xchg
add
or
or
inc
xor
pop
dec
cld
jecxz
sub
adc
ljmp
test
int3
jmp
je
lea
jbe
imul
cld
lahf
outsb
lds
dec
push
mov
in
xorb
ss
cmp
lock
xchg
push
xchg
xor
es
push
cmp
fmull
mov
fprem
dec
test
mov
repz
ljmp
push
cmp
lods
out
iret
xchg
mov
or
xchg
fwait
hlt
decb
daa
lods
sbbl
fbld
call
inc
or
aad
loope
stos
cli
das
xlat
rolb
ret
out
je
jp
lods
sub
mov
ja
jbe
jo
loope
pop
out
xchg
adc
loope
lock
and
repnz
inc
and
cmpb
add
and
mov
inc
fcomp
fisttpl
fadds
fsts
out
into
jmp
enter
push
aas
test
inc
and
loope
shll
hlt
jecxz
mov
push
loop
orb
dec
push
adc
icebp
push
xor
or
xor
jbe
xlat
mov
xchg
cli
push
inc
pop
imul
sbbl
or
inc
xor
rolb
xor
jl
dec
mov
lods
das
push
test
paddw
sahf
pop
lret
jmp
pop
mov
stc
aad
push
jge
enter
jbe
aad
jmp
push
loope
scas
jl
or
mov
mov
adc
cmpsl
xor
inc
stc
xor
mov
add
addl
fisubrs
loope
cmc
lea
in
nop
sbb
mov
movsl
in
ret
inc
xor
insl
bound
dec
mov
ja
ljmp
je
in
incb
dec
and
push
pop
repz
test
popf
mov
cmpsl
xor
rcrl
jmp
sarb
dec
rorl
jmp
cs
ljmp
sub
scas
push
int3
stc
int
cli
leave
cwtl
mov
mov
xchg
sbb
add
adc
jmp
pop
or
movsb
xchg
insl
cmc
sbbl
lahf
iret
sub
push
jp
hlt
popa
adc
out
gs
mov
pop
js
rdpmc
sbb
iret
jg
aad
cmp
repz
push
test
lds
push
cmpsb
shrb
ja
jecxz
pop
aad
sbb
icebp
xor
fisubrl
lock
fisttpl
and
inc
or
push
lcall
xor
sbb
push
mov
sub
test
repnz
xchg
inc
insb
repz
inc
bound
mov
cmpsl
shll
xchg
dec
xchg
je
lret
sbb
outsl
mul
sub
sarl
aas
movsl
jbe
imul
sub
xor
pop
jbe
repz
fdivs
gs
repz
xchg
test
sub
lret
cmpsl
sti
repnz
loope
fstps
sbb
xchg
and
ds
and
sbb
pop
sub
mov
scas
lds
jo
cmovle
mov
push
cmp
vmread
dec
outsl
dec
mov
outsl
pop
ja
push
xor
sub
mov
lds
mov
lret
sbb
mov
cmp
loopne
inc
or
dec
inc
fmuls
sub
in
mov
les
test
push
xchg
mov
icebp
out
insb
jp
aam
mov
les
pop
xchg
inc
lcall
fcompl
stos
jl
push
fdivl
jbe
dec
cmp
gs
aad
lcall
mov
jbe
jnp
push
cli
leave
rolb
adc
js
inc
add
xor
mov
movsb
push
inc
js
sbb
xchg
add
pop
jae
push
scas
mov
pop
xchg
andb
jns
xor
inc
mov
in
mov
adc
fiadds
in
mov
out
movsb
mov
movsl
jb
xor
pop
gs
in
jecxz
sar
xor
or
cmpsl
sub
mov
rclb
jecxz
jns
rclb
and
in
cli
pop
lea
jmp
mov
sbb
push
inc
mov
nop
jge
mov
cmp
pop
loope
in
mov
repz
leave
and
aas
sti
lret
inc
mov
xor
mov
and
out
add
jecxz
in
mov
aad
sub
or
outsb
xchg
mov
sub
inc
stc
loopne
mov
xor
mov
mov
fistpll
shrl
fucom
xchg
xchg
xchg
movsl
jg
dec
adc
inc
inc
mov
jnp
mov
fiadds
and
adc
icebp
jno
cld
ret
repz
add
in
xchg
out
in
loop
inc
clc
stc
sti
iret
mov
in
shr
fnstenv
rcl
mov
dec
adc
xchg
pop
jp
jo
in
lds
mov
add
adc
mov
jp
adc
inc
mov
repz
jo
mov
xchg
push
adc
int
popf
movsb
shll
jg
dec
lahf
fxch
lret
arpl
out
add
lcall
stos
fldl
fadd
dec
dec
mov
cmp
shrl
jecxz
lock
loope
mov
fidivrl
jo
and
jo
dec
imul
aas
mov
inc
lock
cli
sub
dec
int3
xchg
push
mov
pop
push
sti
mov
mov
aas
mov
int3
iret
cmc
sahf
sub
fsubl
cmp
out
mov
in
or
mov
scas
enter
data16
cld
aas
jl
popa
sti
iret
int
pop
negb
inc
leave
inc
repnz
cwtl
out
out
add
mov
bound
and
js
aaa
add
or
mov
popa
xor
or
xor
jb
lcall
push
push
jbe
push
mov
in
sbb
ja
xor
jae
adc
or
and
pop
mov
cmpsb
dec
jbe
push
in
xlat
insl
adc
cmp
and
jmp
test
rolb
mov
jb
or
xor
lock
cltd
imul
iret
mov
fbstp
adc
aad
test
popf
mov
int3
pop
mull
and
sbb
xor
cmp
jns
xchg
xchg
pushf
pop
pop
mov
loopne
int
jnp
inc
mov
adc
mov
int3
call
pushl
imul
jge
xchg
imul
jnp
nop
mov
inc
aad
pop
mov
sbb
pop
arpl
pop
out
out
outsl
sbb
ja
and
scas
popf
cmp
pop
inc
jae
xchg
sub
inc
lret
xchg
ss
sub
xor
sbb
test
mov
xchg
cltd
mov
fdivp
jl
cmp
cmc
mov
sbb
sub
push
sbb
adc
popf
fwait
mov
xor
lock
inc
cli
ret
jge
incl
leave
dec
dec
ljmp
sub
iret
sub
cmpsl
mov
push
sti
aas
push
test
stos
cmp
mov
lcall
pop
cmp
int3
jle
cs
sbb
leave
sbb
pop
xchg
pop
cmp
je
xor
les
ret
stos
ret
popa
jecxz
cmpsb
fnclex
ss
push
loopne
je
mov
xlat
dec
pop
repnz
sub
mov
js
fildll
inc
xchg
dec
stc
sub
mov
mov
cmpb
dec
cltd
pop
out
xchg
jecxz
mov
pop
xor
movsb
in
adc
ja
mov
jle
jo
mov
push
cmpsb
loopne
fadds
out
dec
testl
das
mov
gs
mov
std
sarl
fidivl
sbb
pop
test
pushf
push
das
xchg
and
pop
pop
mov
jae
inc
test
push
js
adc
adc
sahf
insl
out
lret
inc
enter
fwait
cmc
xchg
mov
mov
mov
rorb
gs
jecxz
pop
icebp
les
je
sbb
mov
in
xchg
mov
enter
bound
inc
ret
js
rcr
hlt
or
dec
push
xchg
cwtl
jae
cmp
cwtl
fdivrl
out
cwtl
stc
js
iret
divb
loope
fucomi
add
push
mov
xor
mov
sub
loop
mov
aam
mov
gs
add
sub
icebp
test
out
xorb
mov
sub
xchg
add
adc
popa
int3
fs
sub
xchg
mov
add
jecxz
cwtl
and
and
dec
sahf
movl
jp
adc
pop
adc
pop
cmp
add
and
rorl
call
mov
jbe
out
cmc
hlt
cli
mov
push
enter
cmpsb
test
sbb
enter
adcb
cmp
jg
mov
inc
test
mov
scas
ds
rcrl
test
sbb
cs
daa
xor
dec
cmp
imul
mov
and
and
xor
add
or
mov
mov
add
fs
repnz
sub
jns
call
jo
push
scas
ljmp
jl
mov
mov
cmp
mov
mov
mov
adc
lods
or
daa
mov
inc
add
xrelease
mov
pop
push
leave
adc
push
push
inc
cmp
inc
inc
sub
pop
insb
int3
sti
cwtl
push
pop
je
mov
and
push
pop
pop
out
ja
out
fsub
jb
xorb
lods
or
and
mov
lock
add
into
fcomip
es
jl
aas
jns
fnstenv
pop
les
mov
stc
adc
idivl
jo
mul
inc
cwtl
imul
test
testl
dec
shlb
and
and
ret
repz
jb
cld
adc
dec
hlt
insb
addl
sub
outsb
dec
pushf
insl
sbb
xor
cmpsl
hlt
mov
or
jl
int3
jmp
gs
xor
test
add
scas
xor
in
dec
daa
push
sub
cmp
leave
movsb
popa
add
push
pop
into
in
push
das
fstps
pop
sbb
movsl
inc
imul
fldt
lahf
test
xchg
pop
and
je
mov
testl
mov
es
mov
push
loopne
ljmp
loope
test
lcall
and
call
mov
loopne
xchg
mov
sbb
cli
insl
dec
xor
sbb
stos
mov
xor
lar
cmp
push
inc
cmpb
inc
insl
addl
stc
jae
je
out
xor
add
or
testb
or
stc
test
aas
lahf
xor
mov
ljmp
pop
inc
popa
xor
rorb
sub
jae
pop
cmp
in
xlat
sub
adc
adc
sbb
aam
lock
stos
loop
dec
jnp
or
dec
pinsrw
bound
mov
xor
js
dec
test
xchg
push
into
inc
mov
xchg
cmc
test
mov
cmpsb
lock
add
or
cmp
inc
repz
inc
add
mov
jg
xlat
xor
sbb
data16
bound
outsl
int
mov
push
sbb
mov
and
unpckhps
pop
jns
sub
iret
insl
push
mov
mov
jg
aam
fs
addr16
ror
insb
add
mov
mov
sbb
test
push
gs
in
xlat
pop
movsl
inc
xchg
shll
das
mov
push
ja
sbb
pop
mov
mov
pop
mov
mov
add
enter
xlat
push
jecxz
subl
xor
es
xlat
addr16
sbb
pop
and
addr16
dec
insl
or
pusha
sub
call
adc
xchg
lahf
dec
shrb
push
rclb
mov
cltd
scas
int3
mov
pop
mov
xchg
daa
mov
cmp
jo
dec
lret
test
data16
rorl
sbb
and
jmp
mov
mov
jbe
cwtl
mov
fisttpl
lea
rorb
insb
mov
or
push
mov
adc
xlat
mov
stc
add
mov
jmp
sub
add
popl
inc
mov
mov
sbb
lret
stos
scas
push
cmc
cmp
sub
xchg
mov
repnz
or
testl
jno
sub
out
lea
jl
iret
wrmsr
push
mov
jl
xlat
xlat
aas
adc
mov
stc
mov
ret
popa
pop
ret
test
pusha
aas
scas
cmp
mov
add
dec
mov
cmp
rol
inc
aad
insl
pushf
hlt
xor
inc
cmpsb
roll
imul
add
dec
rolb
pop
lret
lods
xchg
sahf
aad
sub
pop
push
pop
aam
fadd
xor
arpl
xlat
adc
fistl
xchg
pop
mov
movb
sub
xor
jge
movsb
xchg
pop
cmp
stos
fidivl
mov
pop
adc
cmp
dec
loopne
lahf
lret
add
jns,pn
outsl
outsl
add
repnz
cmp
movb
stc
gs
pushf
adc
sbb
mov
inc
xor
or
in
pop
adc
dec
jno
setb
mov
mov
stos
filds
imul
sbb
dec
mov
pop
and
outsl
mov
pop
ds
sub
in
push
lds
jbe
push
repnz
lret
fsubs
xchg
inc
adc
pop
negl
mov
dec
hlt
mov
pop
cld
lods
scas
je
xor
mov
push
in
xchg
scas
outsb
sahf
in
roll
jno
sahf
sub
sbb
cwtl
insl
cmp
pushf
aas
mov
mov
cmp
adc
in
mov
test
cmpsl
cmp
cwtl
jle
ss
repnz
jne
jns
cmp
fsubrs
lods
loope
rclb
cs
add
sahf
imulb
sub
and
leave
ss
fsts
xor
sbb
pop
mov
xor
cwtl
cmpsl
xor
ss
loopne
mov
sbb
sbb
roll
push
xchg
xor
sub
mov
insl
divb
mov
cmpsb
das
arpl
lahf
pushf
pop
and
rcll
push
rorb
imul
fists
incb
push
outsl
xchg
sub
cmpsl
add
push
decl
or
fwait
stc
pop
lods
or
xor
negb
and
je
cltd
rclb
bnd
incl
fwait
scas
fsubrs
gs
mov
adc
imul
mov
push
xchg
push
push
cmp
nop
sub
out
out
mov
pop
cwtl
loope
mov
add
dec
cltd
push
push
lahf
addr16
or
fistpl
and
mov
add
ja
mov
in
sbb
daa
in
adc
repnz
sbb
fwait
mov
aaa
jno
pop
mov
push
push
cwtl
jmp
iret
imul
notb
adc
movsb
jecxz
cld
adc
gs
cmp
int
and
cmp
jl
insl
sub
pop
add
cltd
divl
mov
or
xchg
mov
and
jno
mov
xor
mov
inc
insl
and
xor
mov
ret
adc
inc
insb
fdivr
adc
jo
pop
xchg
pushf
ret
js
je
pop
aas
je
imul
cmp
xchg
jo
lret
fcom
jbe
mov
scas
cmp
inc
scas
aad
or
cmc
fs
dec
aas
sub
imull
aas
notb
cmp
mov
jno
cs
or
cmpsl
insb
enter
or
repz
rcl
xchg
out
dec
das
testb
ds
xor
ss
mov
dec
push
into
pop
mov
jl,pt
movsl
jne
mov
cli
mov
pop
pop
test
lds
and
scas
and
psubusb
inc
ds
cmp
aad
mov
pop
js
mov
push
add
cltd
add
lock
inc
mov
jmp
and
mov
in
push
mov
lret
loop
push
subl
jge
subl
lahf
rorb
inc
sbb
nop
rolb
mov
rclb
or
aas
das
adc
lret
enter
jg
test
mov
push
pop
scas
movsb
xchg
lock
push
sbb
mov
and
out
mov
sub
mov
dec
pop
pop
inc
jmp
sahf
mov
sub
out
aaa
sbb
lea
pop
inc
xlat
int3
dec
jns
add
test
fs
in
and
sbb
pop
aas
xor
cmp
xchg
cmp
pop
xchg
outsl
in
leave
and
add
repnz
xlat
int3
xchg
xorl
sub
test
rcrb
mov
mov
push
hlt
and
jmp
cwtl
imul
das
jmp
mov
lock
test
push
dec
inc
cld
inc
stos
out
clc
sahf
pop
shrl
iret
add
dec
rcr
push
xchg
jp
stos
nop
lds
jno
sbb
out
dec
xchg
cmp
cld
xchg
sub
ret
lcall
mov
dec
mov
ret
out
dec
cld
lret
adcl
dec
and
fsubl
das
mov
jge
jno
xchg
inc
pop
xchg
fistpl
mov
sbb
jle
ljmp
jae
aaa
xchg
add
push
jnp
stc
cmp
xchg
push
jecxz
add
mov
pop
mov
dec
mov
and
mov
cmp
je
out
cmp
or
sub
daa
adcl
in
sub
ds
lods
inc
fcoml
clc
xlat
sahf
mov
loopne
cs
popa
sahf
mov
scas
das
mov
mov
test
sti
fldpi
movsb
lods
mov
lods
sbb
xlat
fldz
loopne
std
inc
ds
fiaddl
insl
es
mov
ss
mov
subb
xor
loop
xor
inc
pop
inc
add
insb
add
cli
and
jmp
and
push
jle
xchg
mov
cmp
mov
jbe
clc
mov
cwtl
cmpsb
jle
and
push
and
stos
sub
pushf
pop
adc
and
adc
jns
or
sahf
lock
mov
lret
sub
xor
adc
dec
aas
add
popf
inc
repz
inc
cmp
push
int
test
pop
and
pop
cld
sub
rcrl
mov
xchg
add
push
test
insl
dec
xlat
jp
lods
or
sub
ljmp
scas
fsubs
cld
xchg
fcom
fnsave
outsl
das
out
sbb
decb
ret
std
icebp
aad
sub
xor
ret
shr
jmp
nop
cmp
pop
call
add
mov
pushf
mov
in
sub
push
mov
push
lods
sbb
pop
int3
xchg
aas
push
js
jns
mov
or
loopne
sub
inc
pop
mov
ss
sbb
mov
sub
cltd
xchg
mov
ret
dec
jmp
rcll
push
dec
in
leave
sti
xchg
push
xor
cmp
in
xor
pop
mov
add
dec
ds
cld
mov
dec
cmp
daa
sub
decb
sbb
aaa
push
push
pop
mov
push
dec
fisubrs
cmpb
lock
in
mov
lods
stos
nop
cld
in
xchg
sbb
stos
test
and
pusha
jbe
mov
xchg
andb
push
das
jmp
push
shll
push
fwait
roll
cli
arpl
xchg
lret
add
mov
inc
sbb
subl
fisttpll
xor
adc
pop
inc
out
clc
loope
pop
fdivp
testl
xchg
pop
inc
or
out
outsb
movsw
and
adc
fsubrl
cmp
jecxz
jae
adc
es
cmc
mov
out
int
xor
and
stos
pop
movsl
ret
jbe
pop
stos
and
in
pop
dec
repz
jno
mov
mov
fstps
imul
jg
inc
push
xor
inc
xchg
push
cmp
mov
repnz
add
es
sbb
lcall
mov
cmp
push
std
push
movsb
mov
and
fstps
in
outsl
sub
ficompl
cld
adc
fwait
mov
haddpd
test
mov
loopne
shlb
push
and
fisttps
in
repnz
add
int3
mov
inc
sarl
jo
pop
pop
pop
or
jb
in
push
mov
or
imul
cltd
mov
pushf
push
int
fwait
les
mov
or
pop
mov
pop
dec
in
xor
jp
push
and
inc
mov
cltd
sub
int3
sbb
fwait
adc
mov
aam
test
notb
stos
in
pushf
sub
loope
fstps
movsb
sbb
neg
out
add
mov
jb
cmp
jo
or
out
outsl
add
pop
outsb
ret
sub
or
xchg
call
negl
lret
mov
sahf
or
hlt
in
mov
lahf
ljmp
adc
jno
push
loope
and
adc
push
movsb
jbe
xchg
lret
mov
mov
push
mov
jne
push
cwtl
dec
xor
dec
xchg
or
imul
cmp
lsl
xchg
int3
push
out
scas
or
push
xor
pop
push
fucomi
inc
xor
das
fldenv
and
mov
sub
mov
inc
not
lds
inc
pop
leave
fmull
or
mov
push
sbb
or
iret
mov
and
xor
hlt
xor
push
cmp
push
push
pop
xor
cmpsb
push
push
fs
mov
mov
jbe
mov
adc
dec
lcall
lds
ret
add
mov
scas
aaa
insl
add
ss
or
std
and
mov
icebp
bound
in
mov
ret
xor
lcall
ljmp
hlt
xor
sub
mov
jg
add
lcall
sub
cmp
cmp
orb
sub
jp
mov
nop
inc
mov
stc
mov
dec
int3
cltd
scas
sub
jg
test
call
icebp
jnp
mov
pop
test
lods
sbb
ret
sbb
jmp
jne
jmp
xchg
jae
mov
pop
test
in
jo
lea
xchg
adc
leave
add
xor
push
xchg
cmp
mov
cmp
jp
pusha
jge
mov
lret
ss
leave
mov
int
mov
test
xchg
pop
sbb
mov
pop
adc
gs
and
cli
rol
jle
stc
scas
jb
loope
lods
lret
stc
sub
mov
and
xlat
lods
and
sarb
pop
sbb
std
xor
std
pop
cmp
mov
ljmp
mov
adc
pop
mov
adc
or
pusha
mov
xlat
add
insl
pop
sbb
pop
xchg
mov
inc
inc
sbb
int
mov
and
lock
pushf
stos
mov
dec
xchg
cltd
fsubl
test
jl
lods
xchg
jo
aam
enter
addr16
sbb
sbb
cltd
xchg
jnp
lds
ja
inc
mov
decb
mov
gs
xor
mov
ret
xor
inc
rol
rolb
inc
daa
out
ret
icebp
lret
jg
rcrb
cld
adc
cmp
push
xor
jmp
add
stos
aas
xor
mov
and
fstps
rcrb
or
aam
pop
adc
sti
int
jb
stos
int3
jb
fdivrs
dec
dec
mov
xchg
nop
mov
dec
adc
inc
push
push
cmp
mov
jecxz
push
push
mov
test
and
out
out
sbb
adc
shl
mov
addb
fimull
test
xchg
test
test
fisttpll
dec
andb
jl
test
xchg
scas
out
je
mov
out
mov
push
cmp
stos
aam
mov
imul
dec
stos
or
aaa
inc
inc
push
xchg
mov
mov
jmp
aaa
pop
lcall
lahf
inc
sbb
fcomps
andb
adc
jo
pop
leave
mov
pop
mov
xlat
xchg
xchg
int3
and
rol
int
cmp
push
ret
xchg
enter
aaa
rolb
xor
in
mov
pop
cmp
jecxz
inc
addl
addr16
sbb
aad
test
jnp
sets
data16
fistl
jmp
aaa
jae
jbe
inc
stos
mov
cmp
in
pop
inc
roll
imul
dec
push
sarb
or
ret
shlb
lds
stos
jns
shlb
bound
mov
pop
pop
add
or
adc
lods
pop
mov
add
test
test
arpl
and
cmpsl
mov
jnp
adcl
shrb
and
lret
lret
cld
and
cld
xor
aad
out
or
mov
mov
jl
outsl
and
mov
dec
rorl
jo
pop
aas
mov
repnz
mov
add
inc
jl
hlt
cmp
jne
or
inc
jo,pt
fcoml
add
cmp
inc
pop
pop
lock
insb
repnz
push
leave
lea
mov
inc
shlb
adc
sbb
test
int3
cmp
dec
xor
addr16
mov
inc
aaa
dec
adc
into
jmp
in
dec
inc
xor
mov
in
sbb
adc
shl
sub
in
dec
test
lea
fwait
xchg
jmp
aam
xchg
out
pop
fimuls
inc
xchg
and
lods
cmpsb
icebp
int3
xchg
ret
and
daa
outsb
ret
sub
adc
cmpsb
loopne
aad
sarb
inc
xorb
frstor
xor
mov
fmuls
dec
insb
push
dec
inc
in
insl
dec
jecxz
add
test
mov
or
and
rol
insb
insb
add
cmp
cmpsb
test
adc
adc
call
mov
mov
ja
jnp
and
fdiv
lods
fimull
pop
jecxz
push
in
enter
mov
dec
fbstp
and
sub
addl
add
xchg
js
mov
es
rcrb
push
je
cmp
push
int
les
push
mov
out
or
xchg
push
push
dec
or
nop
pushf
cmp
mov
scas
xor
pop
movsl
mov
out
les
adc
sahf
jmp
and
dec
pop
sub
fcmovnbe
adc
xchg
cli
mov
lods
lea
jno
mov
aaa
and
mov
cltd
shll
shufps
ljmp
jge
cs
outsb
push
ljmp
loope
fs
and
neg
push
inc
xchg
cmp
add
enter
scas
dec
shll
stos
or
pop
or
sub
insl
icebp
das
jne
lcall
mov
and
mov
fwait
pop
mov
aam
jge
sub
xchg
and
les
aas
test
or
outsl
and
lods
pop
repnz
test
loope
pop
push
pop
and
test
cmp
xchg
daa
daa
int3
xor
mov
mov
jle
in
xchg
sbb
cwtl
scas
mov
mov
rorl
jmp
aaa
repz
mov
jno
xor
repnz
inc
insb
repnz
popf
mov
push
add
inc
pop
xchg
or
daa
stos
mov
in
mov
dec
inc
inc
movsl
jg
insb
dec
mov
adc
mov
xchg
cmc
cmpsl
and
sarl
sahf
icebp
mov
lods
jg
ret
dec
push
sub
dec
daa
mov
aas
inc
cmp
in
inc
mov
push
xchg
fcomi
dec
push
sub
sbb
jne
movsl
mov
and
lock
push
movsl
addr16
rorl
sbb
xor
pop
inc
in
jmp
inc
mov
in
test
xor
xor
cmpsl
int3
add
ret
mov
test
sbb
jle
mov
pop
into
lahf
sub
arpl
pushf
xchg
cs
add
cmp
enter
xlat
cmp
xor
mov
ret
in
cmp
mov
xchg
push
sbb
pop
adc
mov
xchg
int3
ret
mov
adc
out
adc
adc
test
in
sub
in
sbb
aad
adc
aaa
jecxz
xchg
dec
out
xchg
cmp
jg
cli
pop
jecxz
aaa
sbb
repnz
jne
sbb
lds
sti
enter
test
sbb
lock
mov
sahf
mov
cmpsl
mov
xor
mov
pop
out
repz
ds
sahf
xchg
arpl
mov
and
addr16
xchg
push
cwtl
jo
fs
push
jecxz
cmp
sahf
cmpsb
jge
xchg
mov
add
test
sbb
cmp
cmp
cmpb
mov
jnp
ljmp
adc
adc
movsl
and
aam
orb
and
mov
hlt
enter
pop
mov
mov
adc
ds
pop
test
test
xor
fistps
sbb
sub
aas
repz
hlt
bnd
xchg
imul
aam
test
mov
jg
mov
and
mov
les
mov
dec
or
gs
push
sbb
imul
test
stos
push
data16
or
adc
fnsave
test
push
jns
or
sbb
dec
jb
imul
fidivrs
ret
push
pop
inc
out
mov
stos
ljmp
mov
dec
scas
cmp
lock
in
xor
sbb
in
adc
lcall
ds
popf
xorb
pop
test
jp
cwtl
cli
sti
xchg
mov
xor
cmp
or
add
cli
or
aaa
add
lahf
js
ja
ss
xchg
add
xlat
out
inc
xchg
inc
fdivl
sbb
mov
fsubl
je
stos
xor
lcall
lcall
cmpsl
fldt
pop
jb
xlat
cwtl
imul
adc
xor
aad
int3
pop
push
dec
sub
cmpsb
mov
movsb
es
pop
mov
mov
xor
xchg
cmp
stc
ljmp
dec
or
mov
lcall
mov
adc
iret
push
ret
xchg
jns
aam
xchg
das
mov
js
jl
mov
cwtl
push
ljmp
or
mov
or
popf
fimuls
stos
mov
sub
jo
sbb
pop
rorl
push
inc
adc
loopne
shll
sbb
mov
insl
orl
jo
addr16
sbb
push
imul
pop
push
bound
mov
pop
mov
mov
pop
into
adc
xorb
mov
lret
mov
xchg
pop
mov
add
je
sub
shll
cmp
inc
sbb
cmpsl
ja
mov
lret
dec
sahf
popf
xor
or
in
ret
es
mov
arpl
push
movsb
bound
mov
pop
push
repnz
or
mov
push
xor
icebp
je
sub
sti
mov
inc
jne
ss
fcomp
mov
dec
inc
call
out
or
lds
mov
push
jge
lea
pop
ret
xchg
sbbb
xchg
repnz
pop
inc
ljmp
pushl
cmp
pop
iret
fistpl
in
gs
leave
mov
ljmp
addr16
add
lret
and
aaa
xchg
repnz
lods
clc
sub
push
pop
stos
out
call
pop
add
sbb
adc
mov
cltd
mov
pop
dec
stos
sti
pop
mov
sub
arpl
dec
dec
leave
les
push
rcr
ja
jbe
stc
cmpsb
shlb
adc
hlt
push
mov
fwait
push
imul
in
cmp
lock
repnz
dec
orb
jg
and
int
sub
cs
sub
mov
fists
xchg
and
push
stos
fiadds
mov
fdivp
mov
sbb
insl
jecxz
mov
fistps
fisubs
lcall
les
insb
fsubrs
cmpl
push
xor
fbstp
std
movsb
pop
mov
insl
sbb
dec
das
cmpsb
adc
sbbl
addl
mov
push
cmpsb
sub
mov
dec
sbbl
dec
lret
test
mov
mov
xor
test
inc
push
xlat
mov
dec
dec
mov
out
cmpsb
pop
out
fwait
jecxz
push
mov
and
cmpsb
popw
jo
test
mov
mov
cmpsb
mov
adc
movsb
xor
and
sbb
rcr
pop
inc
or
stos
fnstenv
xor
sub
test
inc
cmc
mov
les
cltd
stos
or
cmp
dec
mov
outsl
mov
push
jge
xchg
aaa
pop
mov
stos
or
cmpl
xor
push
out
or
out
adc
inc
inc
movsb
inc
stc
cmp
sbb
fcomps
sub
adc
imul
loopne
cmp
insb
imul
sarb
stos
inc
daa
sub
sbb
lahf
fdivs
inc
inc
lea
xchg
test
push
lcall
in
scas
push
and
cli
sub
cltd
rep
add
loopne
mov
mov
mov
jg
mov
mov
outsl
insl
jge
push
mov
movsb
arpl
notl
fsts
add
sbb
addb
add
out
or
adc
out
das
pop
rol
mov
sbb
push
adc
push
inc
outsb
push
jo
fsubs
lds
xlat
inc
mov
aaa
test
lret
addl
repz
cltd
xlat
imul
cmc
movsl
stos
sub
inc
and
xchg
jle
xor
cmp
sbb
pop
out
cmp
test
cmpsl
push
loope
mov
and
ret
cmp
aas
test
sti
jmp
clc
push
fdivrs
jae
push
adc
inc
push
movsl
es
out
xor
es
movsb
clc
dec
jbe
lods
aaa
mov
pusha
and
enter
scas
mov
in
sub
or
cltd
cli
nop
and
pop
lcall
lock
insl
aam
pop
xor
gs
daa
push
ret
movsb
and
lds
pop
and
mov
loopw
xchg
shll
icebp
mov
mov
push
dec
or
push
insl
cmp
add
ret
push
mov
lahf
inc
pop
xchg
lock
xor
mov
xchg
aad
imul
lea
adc
in
push
stos
idivl
cli
jecxz
mov
lds
cmp
sbb
xchg
ficoml
mov
push
insl
js
pop
push
cmpsb
mul
sbb
mov
mov
imul
das
jno
je
dec
mov
mov
addr16
mov
ficomps
fcoml
movsl
push
bswap
jg
fcompl
inc
lds
or
ja
adc
ja
lcall
inc
push
loope
jle
push
push
push
xchg
jp
lds
pop
add
jmp
sub
xorb
push
fst
arpl
fdiv
push
inc
test
mov
jl
sub
in
dec
cmp
or
push
cmc
inc
mov
fidivl
jo
dec
call
lea
lds
adc
out
sub
xlat
lods
sahf
jbe
pop
cmp
hlt
loope
push
cmp
in
aas
jno,pt
sbb
mull
scas
pushf
in
inc
jb
xlat
add
adc
test
stos
dec
imul
pop
in
push
adc
push
cmp
mov
leave
lock
insl
sub
fmuls
fisubrl
das
sbb
outsb
xor
fcoms
sbb
dec
add
rcll
adcl
push
bound
inc
clc
or
and
test
stos
sbb
mov
inc
add
fidivrs
push
ja
cwtl
notl
fistps
mov
push
push
mov
popf
shlb
insb
pop
scas
sbb
mov
pushf
jge
clc
mov
and
cmp
std
test
jnp
adc
lods
mov
jge
push
flds
jb
test
shl
xor
mov
push
scas
or
aam
fcmove
adc
add
pop
int3
mov
lret
mov
push
pop
add
cmp
sub
cld
mov
pushf
aas
mov
orb
jne
inc
in
popa
dec
stos
daa
push
push
or
pop
jbe
and
orl
mov
fsub
data16
lds
pop
cmp
or
cmp
sub
dec
pop
int3
sbb
repnz
outsb
sbb
pop
inc
shlb
mov
push
and
or
mov
loope
and
add
pop
repz
jns
stos
xor
insl
cmp
sbb
outsb
lret
mov
or
arpl
imul
push
cltd
out
jo
mov
or
shll
xor
psubw
cmp
mov
jne
iret
jae
jno
es
inc
cmpsl
and
fnstenv
icebp
mov
mov
cwtl
sar
out
xor
iret
jp
push
cltd
mov
inc
sbbl
and
inc
stos
pop
push
lret
popf
lods
rcrl
dec
push
fsubl
rcll
inc
cltd
fdivp
cmpsb
jae
or
stos
jns
mov
add
push
mov
pop
jno
pushf
fbld
loopne
add
fwait
push
sbb
adc
sbb
inc
sub
clc
shl
fidivs
sbb
mov
inc
enter
testb
adc
jmp
jnp
xor
icebp
test
rcr
mov
push
mov
mov
mov
xor
cmpsb
gs
sub
js
orl
jmp
adc
mov
pushf
mov
xchg
mov
movsl
xor
sub
stos
arpl
adc
and
sbb
scas
add
pop
inc
test
or
cmp
push
and
outsb
bnd
or
sub
inc
jne
pop
cmp
mov
jmp
mov
jmp
int
mov
adc
inc
pop
rcr
mov
in
mov
or
cmp
pop
inc
call
dec
pop
cli
cmp
int
pop
xchg
dec
sub
out
iret
int3
insl
fs
xor
fists
xchg
aam
int3
inc
jno
test
test
push
icebp
mov
pop
add
shl
xor
lea
pop
pop
cmp
aam
jae
fs
xchg
imulb
test
shrl
imul
jb
jno
pop
jo
fisubl
adc
xchg
mov
imul
adc
jb
mov
jno
and
push
and
rcrb
mov
xchg
ret
fmuls
fnstcw
inc
mov
mov
mov
add
or
aas
call
stc
test
and
mov
gs
sbb
jp
std
repz
jecxz
in
inc
aad
or
pop
cmp
inc
jbe
ret
in
sub
push
dec
adc
int
lret
hlt
fldenv
mov
push
push
inc
or
push
call
dec
jg
mov
gs
mov
pop
bound
jb
das
or
fidivl
mov
push
mov
lret
in
addl
fcomps
push
stc
mov
mov
fstp
or
enter
shll
mov
and
mov
add
aam
mov
jo
and
in
and
sub
cmpsl
xchg
add
cmp
nop
push
dec
xchg
js
mov
lea
pop
dec
add
push
mov
or
lock
inc
test
adc
jmp
push
js
test
popl
and
xchg
pop
ds
inc
movsl
das
inc
movsl
push
add
movsb
mov
inc
xchg
jmp
push
and
subl
mov
pop
stos
xchg
imul
pop
mov
fidivl
or
fimull
sub
adc
test
in
push
pop
push
in
pop
popa
xlat
popf
cmp
pop
vmwrite
jnp
lret
sbbl
cmp
dec
je
lods
adc
gs
dec
mov
pop
jne
sbb
fcmovb
sti
push
les
and
movsb
adc
int
cmc
xor
mov
sbb
mov
cmpsl
icebp
mov
loop
or
outsb
xor
outsb
add
pop
leave
insb
mov
enter
push
sbb
or
xchg
xor
stos
sub
jge
shrl
dec
jg
sub
pushf
or
popa
out
xchg
sub
daa
rclb
xor
insb
popf
movsl
cmp
rep
sbb
mov
stos
sti
jge
mov
mov
add
test
pop
dec
and
adc
vmulsd
test
mov
cmp
mov
insl
negl
sub
out
mov
adc
add
add
add
stos
xor
inc
pop
daa
movsb
cmp
mov
cmovbe
adc
jmp
and
repz
xor
add
fwait
sub
cs
sbb
adc
mov
pushf
ficomps
outsb
sub
rcll
cmp
scas
mov
popf
loopne
test
and
std
negl
test
jae
mov
or
call
loopne
int3
lret
ss
popa
sbb
pop
pop
push
xor
or
lock
cmp
ss
leave
rclb
sbb
add
jb
mov
inc
push
or
cmp
cmp
jle
jne
xchg
sarl
xchg
test
aam
dec
je
arpl
cmp
jmp
jecxz
les
add
shlb
fnstcw
inc
adc
loope
leave
xor
pop
sbbl
xor
xchg
ret
sbb
jno
notb
pop
sbb
push
mov
test
test
shll
push
in
mov
inc
xor
ds
jbe
arpl
gs
pop
jbe
push
add
adc
and
jb
cmp
enter
xchg
movsb
pop
xchg
push
add
jp
out
ljmp
xchg
mov
das
ret
mov
push
rcll
push
cli
mov
arpl
sbb
cmp
movsb
or
sbb
int
repz
es
ljmp
mov
sbb
sub
xor
orb
out
jno
add
xchg
mov
popa
dec
mov
xchg
movsb
stc
sbb
push
mov
cmp
xchg
insl
addr16
stos
lret
neg
pop
in
enter
or
sbb
inc
cmpsl
ret
mov
stos
pxor
mov
stos
push
adc
dec
rcrb
push
mov
stos
mov
lcall
lds
adc
and
xchg
ret
mov
int3
mov
sbb
mov
push
push
sahf
jae
mov
sbbb
pusha
mov
popf
cmp
jae
test
fstpl
add
insl
mov
data16
lea
jmp
add
inc
cld
xchg
jb
sbb
test
sub
shrb
mov
and
ret
mov
repz
xchg
stos
mov
xchg
insl
ja
test
mov
fdivrs
pop
mov
jecxz
xor
daa
mov
loop
fimull
cmp
arpl
pop
dec
aam
lods
jg
mov
pop
xchg
sbbb
mov
repz
push
push
dec
mov
mov
mov
sub
sub
in
cltd
sub
inc
sahf
mov
or
inc
xchg
fnsave
insl
dec
pmullw
push
or
cmp
or
add
das
pushf
or
je
cwtl
xor
sbb
xchg
cmp
inc
push
push
jecxz
xor
aam
push
xor
add
xor
ret
jl
test
mov
popa
cmp
mov
push
mov
cld
mov
adc
add
into
pushf
mov
mov
push
sbb
mov
adc
jno
shll
jle
faddl
jbe
das
je
pop
stc
xor
lcall
out
and
fsts
sti
jecxz
lock
cmpsl
rorb
rcr
ss
imul
shrb
or
aas
mov
push
cmp
fdivp
xchg
ret
cld
mov
icebp
dec
xchg
dec
mov
cmp
in
cltd
jle
std
enter
test
out
xor
cmp
into
mov
fs
fdivrs
stc
cmpsl
test
sbb
jmp
in
int
pop
mov
ja
cmp
call
pop
jp
andb
lock
dec
dec
mov
arpl
notl
sti
xor
add
xchg
mov
or
sub
mov
xorb
and
out
adc
jl
ret
xchg
pop
flds
cmp
cmc
mov
aaa
lret
lret
cmc
cmpl
dec
sub
or
mov
mov
sbb
lret
inc
ja
push
add
fwait
rol
sub
shrl
cmp
fimuls
mov
scas
pop
dec
push
push
jne
sbb
daa
add
fcoms
scas
icebp
test
inc
push
out
and
mov
addr16
idivl
lods
mov
xchg
aam
je
movsb
mov
push
mov
enter
loope
pop
mov
push
out
add
stos
test
inc
lock
cld
jbe
testb
cmp
sub
add
andl
mov
mov
popa
mov
jno
movsb
pop
xchg
aas
and
mov
stc
fs
lods
xchg
and
add
add
add
mov
insb
pop
jl
inc
mov
push
and
xchg
and
gs
mov
pop
ljmp
outsb
scas
ljmp
push
arpl
imul
popa
out
mov
inc
jns
ret
stos
adc
jns
rolb
adc
inc
cmc
mov
xchg
adc
sbb
fwait
out
inc
and
into
cs
sbb
insb
push
xor
enter
mov
xchg
pop
aas
mov
sbb
imul
jb
loop
jge
push
xor
dec
ret
jnp
mov
mov
ret
add
scas
imul
jp
mov
ret
cwtl
pushf
je
dec
faddl
rcrb
sbb
xor
jecxz
inc
pusha
pop
sbb
lret
and
insl
sbb
lretw
inc
xor
loopne
xchg
jle
push
cs
gs
fsts
mov
ret
jecxz
jne
adc
outsb
inc
adc
xchg
dec
mov
xor
cmp
mov
or
int
xor
xor
js
das
xchg
clc
sahf
inc
pop
test
adc
cwtl
lahf
daa
and
sub
iret
out
xlat
xor
sti
jecxz
mov
or
and
add
pop
xchg
pop
inc
jb
mov
shll
and
ss
add
pop
dec
push
rcl
pusha
addr16
mov
or
arpl
inc
int3
adcb
dec
insb
cmp
out
faddl
push
divl
cmc
adc
test
or
push
addr16
mov
out
or
and
pop
sub
adc
ljmp
sbb
adc
fidivrl
sbb
xchg
or
push
fnsave
and
rcll
xor
movsb
inc
sbb
add
cmp
inc
jmp
repnz
dec
fmul
inc
insl
into
push
pop
push
or
enter
mov
fcompl
inc
rcr
popw
cmp
sub
add
push
ja
xor
out
lcall
test
push
in
sub
dec
cmpsb
inc
iret
lock
inc
xchg
inc
shl
pop
jg
test
pushl
jg
data16
lds
vmovd
xor
cmp
inc
fs
subb
loope
lret
xchg
inc
js
imul
out
out
imul
sbb
xchg
into
inc
xlat
lret
std
cltd
dec
jb
ficompl
and
repnz
pusha
jle
ficomps
cmp
test
mov
push
sbb
sbb
push
and
adc
cmc
in
lret
or
icebp
push
iret
xor
movsl
add
ret
addr16
pop
roll
cmpsl
out
mov
push
rcrb
xor
adc
in
inc
scas
lahf
mov
inc
cltd
lahf
dec
jb
push
and
les
jecxz
cltd
js
outsl
jl
sbb
or
cld
pop
xchg
jnp
adc
adc
xor
push
pop
sbbb
cld
jle
adc
sbb
jb
leave
pminub
push
clc
rcrb
push
jg
mov
xor
or
je
adc
in
call
push
js
mov
pusha
ljmp
ffreep
mov
repz
mov
dec
xchg
in
lds
loope
fwait
xchg
mov
jl
add
stos
in
push
cmp
mov
dec
push
repz
xchg
jbe
push
jl
ss
outsl
xchg
cmp
pushf
lcall
push
pop
mov
ja
jae
push
lret
xlat
push
mov
outsb
xchg
mov
xchg
xchg
jl
xchg
jg
pand
push
jmp
in
shlb
scas
aam
std
aas
dec
cmpsl
jbe
clc
sub
js
or
leave
lds
cmp
xor
inc
pop
test
repz
in
cmp
or
mov
shll
jle
popf
push
pop
inc
jnp
pop
movsb
adc
stc
inc
addr16
aam
mov
mov
push
mov
out
dec
xor
gs
aas
inc
daa
pop
dec
mov
test
dec
pushl
mov
jae
fnstsw
pusha
jmp
adc
cmp
popa
aad
jecxz
cmp
sti
push
xchg
in
rorb
jns
add
adc
push
xlat
fs
pop
outsb
add
cld
sub
cltd
push
lcall
punpcklbw
sbb
xor
das
pop
cmpsb
jle
aas
cli
insl
or
das
adc
xor
and
xchg
out
pop
xor
or
repz
add
push
pop
xor
shlb
inc
add
or
mov
sbb
stos
add
inc
inc
mov
aam
cmpsb
pop
mov
inc
push
das
adc
xchg
mov
push
test
push
or
stc
dec
xchg
dec
sahf
xchg
xchg
enter
xchg
lcall
pop
sbb
sbb
pop
mov
or
bound
inc
pop
lock
mov
xor
dec
jbe
sbb
fisubrl
js
clc
mov
int3
stos
into
fcmovu
jnp
xor
jg
daa
out
addb
ss
jae
or
out
push
mov
fwait
jne
aas
mov
mov
out
mov
sub
push
hlt
int
sbb
xor
pop
adc
dec
insb
imul
mov
test
xlat
pop
test
imul
arpl
pop
fisubl
mov
stos
mov
sbb
addr16
push
jmp
popf
mov
jl
rcll
jnp
enter
das
xchg
mov
mov
out
aaa
cwtl
sub
and
dec
out
fisubl
mov
mov
and
jle
lret
mov
jbe
mov
jg
cltd
adc
dec
and
jecxz
cmc
push
shl
icebp
pushf
fimull
pop
jne
xchg
and
fsts
jge
es
pop
push
pop
mov
jno
dec
fs
mov
sbb
pop
cmpsb
xchg
cmpsl
xchg
dec
sbb
or
mov
test
mov
das
inc
xor
cmp
leave
adc
adc
int
inc
in
lahf
push
addr16
add
jbe
sub
in
push
pop
or
nop
sbb
lock
and
lds
jp
push
iret
inc
mov
sbb
leave
popl
mov
jge
fnstsw
in
aas
xor
sub
mov
jnp
and
arpl
push
push
call
mov
add
mov
data16
jmp
loopne
clc
popf
dec
adc
test
jle
adc
setae
lret
lods
mov
jo
xor
shl
inc
sub
pop
outsb
xchg
aas
loope
mov
fcoml
jmp
fnsave
sbb
pop
xchg
jne
jmp
dec
fwait
push
mov
imul
xor
ret
and
push
xchg
mov
aaa
xchg
sub
mov
cld
rcl
test
jbe
mov
xor
cmp
test
into
das
cmp
add
jns
and
push
add
mov
test
clc
jb
sbb
push
ja
fidivs
aam
divb
and
inc
daa
outsl
pushf
out
inc
test
lret
pop
in
sub
jle
jecxz
jnp
arpl
push
add
add
sub
lods
push
dec
mov
jno
test
jecxz
xchg
inc
inc
movsl
movsb
add
stos
inc
bound
cmp
jae
xchg
shl
icebp
dec
push
fidivs
dec
fucomi
mov
pop
mov
push
inc
xor
cmp
inc
push
sahf
test
bound
lcall
hlt
adc
xchg
mov
push
cmp
push
push
js
imulb
cmp
xchg
and
lret
lahf
sub
xor
aas
iret
or
jb
enter
cli
pop
and
sub
and
mov
fldl
fildl
hlt
push
jbe
push
cli
xor
arpl
add
sub
pop
ss
and
out
push
pop
aas
add
jp
mov
inc
inc
out
add
gs
sbb
lret
les
js
arpl
out
fldl
xor
pop
das
mov
mov
add
ret
jo
adc
inc
jle
imul
sub
gs
xor
dec
lods
jnp
ds
test
xchg
add
or
shrl
mov
push
push
xor
adc
pop
push
mov
mov
movsl
jmp
aaa
rclb
and
outsl
jmp
cmp
mov
je
movsb
sbb
pop
pop
add
sub
sub
pop
aam
pop
sahf
out
fldt
popl
mov
test
add
cltd
pop
rcrb
gs
sbb
mov
sbb
scas
pop
pop
cmpsb
stc
pop
shrl
loop
lret
pop
cmovne
fxtract
popf
data16
cmp
daa
fcomi
and
outsb
enter
xor
fildl
shlb
and
inc
pop
lahf
call
dec
push
pop
ficoml
ja
pusha
popf
jp
in
in
fcompl
push
jecxz
mov
shll
test
shll
cmpb
jno
hlt
je
push
dec
lret
mov
push
dec
mov
leave
push
ret
sar
fbld
mov
mov
rolb
sbb
mov
aad
adc
dec
push
imul
cmp
addl
jecxz
push
sbb
sub
insb
imul
xor
lret
jno
pop
cmp
mov
mov
inc
int
jge
inc
outsl
je
mov
mov
fistpll
or
pop
out
and
push
into
out
adcb
lock
push
sbb
sbb
sbb
inc
les
xchg
dec
and
icebp
jnp
mov
cmpsl
test
mov
adc
aad
dec
vmwrite
dec
push
outsb
leave
inc
mov
push
dec
pop
call
sub
mov
ftst
shll
push
lods
sbb
push
jne
or
xchg
xchg
out
rol
push
cli
mov
jb
xor
inc
popa
xor
xor
push
sti
jbe
or
lret
pop
sbb
mov
out
js
sbb
sbbb
in
cld
jbe
ja
and
out
jne
add
out
dec
aas
aas
lret
ret
mov
cmc
pushf
dec
sub
jle
hlt
inc
loope
sbb
cmp
clc
dec
inc
adc
mov
sub
sbb
xlat
sahf
jns
lcall
jle
sahf
xchg
mov
mov
rorb
int3
nop
sub
fdivl
pushf
jnp
inc
shrl
add
in
adc
loop
inc
mov
or
ds
fidivl
add
aad
sbb
push
mov
movsl
xchg
xor
xchg
movsb
arpl
loope
sub
sub
into
xchg
rcll
movsl
pop
lcall
addr16
es
inc
test
dec
int
ret
ret
jl
je
cld
leave
cmpsb
xor
xlat
fisubrs
xchg
add
add
adc
mov
xorl
clc
rclb
jno
nop
xor
inc
inc
out
push
stc
leave
lcall
aaa
rcl
in
mov
jg
lret
mov
dec
add
sub
pop
je
cmp
fimull
and
adc
pop
popf
fsubs
out
cmp
dec
jno
lods
ja
or
stos
mov
das
inc
pop
gs
jmp
dec
sti
out
insl
stc
stos
cmp
ja
outsl
mov
xor
fstpl
dec
mov
je,pt
cmp
lods
pop
scas
sub
lahf
xor
jo
jmp
or
sbb
shrb
test
pushf
sbb
mov
pushf
xchg
jno
int3
stc
mov
mov
test
mov
imul
les
mov
fnsave
cmp
xlat
lods
imul
xlat
cmpsl
jl
lret
aam
pusha
add
mov
and
add
mov
ss
ljmp
add
imul
xor
and
dec
out
imul
push
pop
add
movsl
add
fnstcw
je
inc
xchg
lret
into
pop
xchg
call
xchg
push
cltd
daa
sub
pop
adc
pop
movsl
inc
xchg
and
fsincos
outsb
enter
pushf
and
repnz
cmp
or
sbb
movsl
out
sub
cltd
mov
xor
jne,pt
xlat
adc
mov
or
repnz
stos
fidivrs
ja
jno
jns
jp
repz
mul
inc
stos
out
out
adc
aas
lret
mov
in
push
out
fwait
aaa
andb
sub
push
loope
mov
push
test
roll
jg
and
push
jbe
mov
ret
push
fdivl
dec
or
mov
add
jge
std
fwait
jo
jno
mov
rolb
xor
popa
rcrl
jbe
mov
loop
push
out
test
xchg
sbb
adc
add
lret
test
mov
pop
cwtl
mov
pop
testl
negl
aas
nop
cmpsb
data16
and
inc
insb
cmpsl
in
cmp
add
in
push
pop
aam
add
add
mov
shr
shrl
sub
arpl
icebp
scas
std
test
sbb
imul
mov
mov
sub
push
pop
pop
dec
and
loope
and
dec
push
stos
adc
dec
xchg
fs
loopne
jge
sbb
mov
sub
pop
jbe
or
neg
call
fildll
rcl
mov
lods
fldenv
mov
cmp
pop
mov
pop
loop
andl
and
cmp
shll
push
iret
xchg
ficompl
test
int
add
cmc
inc
sub
js
clc
lods
test
dec
sti
mov
push
ret
aaa
cld
rcrl
xchg
add
fldl
std
push
pop
shrl
push
loopne
lods
jb
xor
fnop
pop
stos
popf
in
jnp
mov
fsubs
xlat
mov
dec
roll
jae
jb
push
adc
in
out
adc
cld
test
mov
popf
and
pop
lods
scas
subb
fcomi
and
push
inc
xor
mov
push
fwait
jmp
iret
push
out
imul
insl
jno
jns
cmpl
mov
xor
out
inc
adc
xor
cs
sbb
xchg
push
inc
lcall
adc
aas
not
xchg
jbe
sahf
roll
push
fimuls
and
add
inc
jle
int
add
fistps
ret
test
and
mov
push
aad
stos
xchg
mov
fldpi
mov
in
xchg
cltd
out
inc
aas
mov
inc
sbb
add
jnp
pop
popa
dec
push
loope
stos
add
lret
outsl
fbld
sbb
comiss
ljmp
test
out
outsb
xorb
sbb
les
fmuls
add
loop
lahf
scas
imul
mov
cmc
lock
mov
mov
jnp
out
sub
leave
mov
in
push
add
out
mov
std
mov
dec
dec
mov
ret
flds
mov
dec
and
add
mov
adc
fwait
movsl
and
movsl
inc
jmp
lods
xchg
cmp
push
ficoms
jge
pusha
or
pop
sub
sbb
ret
cmp
in
scas
pop
stc
mov
mov
push
pop
sub
fists
rorb
pusha
shll
aad
mov
or
mov
in
mov
into
lods
fidivrl
sub
and
scas
ret
add
dec
movsb
ficompl
xor
inc
lcall
push
dec
sbb
rcl
inc
push
xchg
mov
or
dec
je
inc
ljmp
mov
jbe
pusha
dec
movsl
repnz
sbb
jg
and
cltd
repnz
cltd
sbb
adc
in
dec
adc
fyl2x
data16
xor
pop
rcrb
hlt
inc
jle
in
nop
fidivs
idiv
pop
cli
jno
sbb
rep
and
inc
push
out
adc
loopne
xor
jo
std
cld
or
sbb
movsb
ss
cmpsb
mov
push
imul
movsl
sbb
xor
xchg
push
pop
out
ret
sti
pusha
sbb
pop
ds
push
fbstp
cwtl
ret
dec
cmp
sub
imul
cmpsb
repz
xor
mov
cmp
mov
pop
mov
cld
nop
push
cmp
jg
test
or
or
out
into
test
jne
fadds
mov
out
mov
fcmovnb
push
jo
aas
aas
and
mov
lods
jecxz
sub
lds
sti
cld
jle
xchg
js
and
insl
fs
fwait
sbb
sub
or
out
sub
mov
fstl
lcall
mov
jle
xchg
xchg
loopne
pop
jae
inc
in
adc
stos
mov
fcompl
insb
cltd
test
mov
icebp
xor
sbb
ror
mov
shl
xor
dec
dec
push
jg
or
sbb
cmpsl
out
or
int
sbb
stc
add
cs
popa
push
mov
mov
cwtl
mov
mov
xchg
lods
xchg
or
xchg
mov
inc
dec
jge
clc
jns
aas
mov
jmp
jg
mov
inc
mov
and
pop
sbb
jg
fucom
push
pop
dec
in
repnz
pop
fs
in
out
aaa
das
xor
pusha
imul
inc
pop
movsl
stc
lock
or
sahf
and
addb
mov
pop
pop
sub
lods
dec
xchg
push
aaa
pop
jne
clc
ja
xchg
or
arpl
pop
push
jl
lock
add
sub
and
gs
out
jp
ljmp
pop
in
sbb
inc
enter
xchg
cmpsb
cmp
xor
xor
cltd
clc
popl
fists
fdivrl
rsm
sbb
jne
jp
xchg
inc
imulb
in
ficoms
xlat
pop
inc
pop
dec
inc
icebp
pop
fwait
nop
mov
movsl
sti
rolb
pop
sti
push
imulb
fcoms
push
packuswb
dec
ljmp
mov
mov
dec
gs
mov
int3
jge
lret
and
adc
pop
adc
cmpsb
mov
cmp
cmp
xchg
movsb
and
or
into
std
xor
cmp
into
loopne
cmp
cmp
std
jne
cmpsb
movsl
mov
shll
movsl
xchg
jbe
xchg
mov
or
add
adc
lret
frstor
ret
icebp
push
fs
psllq
xchg
loopne
inc
mov
jp
out
inc
jecxz
mov
in
mov
and
jae
push
jae
adc
and
xchg
iret
inc
fs
mov
call
mov
in
fimuls
repnz
test
jge
push
cmp
mov
ja
add
test
ffree
in
arpl
pop
pop
or
hlt
dec
lahf
outsb
push
pop
push
pop
fs
jb
popf
cmp
mov
imul
arpl
sti
outsl
inc
ss
xchg
decl
jno
cli
mov
inc
dec
sub
outsl
lcall
sub
sub
repz
ds
dec
mov
nop
jl
into
jb
mov
sbb
xor
cmp
ja
cwtl
xor
cmp
add
mov
in
and
xchg
into
sbb
push
ds
add
out
lock
xchg
ds
pop
pop
pop
and
out
cmc
out
mov
and
mov
gs
outsl
cmp
mov
aad
adc
push
cmp
xchg
in
dec
mov
shll
into
cmpsl
and
xchg
and
dec
xchg
fisubrs
int3
sub
pusha
fcoml
pop
popa
in
push
dec
bound
lock
data16
cltd
out
sub
es
push
imul
imul
loope
mov
pop
dec
xchg
fdivp
mov
in
mov
push
pop
outsl
lret
filds
mov
or
lock
enter
pop
jge
testb
xlat
sarb
lods
scas
jae
jae
imul
mov
dec
test
mov
outsl
daa
cwtl
out
cld
sub
xor
cmp
xchg
jl
out
pop
sub
dec
cld
sbb
es
dec
repz
clc
add
mov
pusha
adc
mov
int3
in
je
pusha
pop
out
mov
jge
ret
inc
pop
mov
mov
ja
dec
xor
mov
cwtl
js
pusha
sarb
jae
lock
xchg
dec
mov
mov
push
rcl
push
dec
xor
in
push
aaa
dec
or
out
pop
in
cmp
push
inc
mov
out
jle
aam
add
dec
pop
dec
aad
in
dec
push
clc
arpl
test
aad
popa
stos
xchg
pusha
mov
push
incl
hlt
je
inc
in
mov
push
mov
xor
lods
lahf
imul
cmp
lods
repnz
mov
pop
gs
in
xlat
loopne
push
and
aaa
mov
outsb
mov
aad
das
mov
pusha
mov
sub
pop
shll
fwait
jo
ret
push
xor
xchg
push
cltd
aaa
mov
xor
mov
xchg
shll
enter
orb
loope
stos
mov
insb
pop
fwait
cmp
rcr
lea
movsl
lcall
sub
pop
cmp
loopne
mov
or
scas
dec
cltd
add
fildl
jns
outsl
mov
xchg
push
mov
dec
pop
in
jp
hlt
pop
sbb
jg
xor
xchg
xor
or
sub
lods
add
ljmp
mov
mov
into
cli
xor
push
insb
iret
lods
adc
mov
xor
div
xor
jp
sti
fisttpll
xor
and
es
adc
xor
in
cmp
popf
adc
xchg
jns
cmc
jb
icebp
xchg
scas
cs
fmuls
movsl
loop
xor
jbe
enter
lcall
xchg
xlat
cli
lret
dec
and
adc
fbld
filds
pop
je
addb
in
mov
adc
and
in
mov
stos
mov
dec
mov
mov
cltd
cli
push
mov
movsl
lock
mov
repz
pop
xor
lahf
jecxz
push
mov
adc
add
xchg
push
xorb
in
cmp
stos
sarb
adc
inc
xchg
fstps
mov
and
ds
sbb
mov
ljmp
or
jb
push
sbb
or
cmp
movsw
addb
lret
subb
or
cmp
mov
iret
or
inc
sar
cmp
cmpsl
ss
icebp
cmp
cmp
jbe
xchg
cmp
lcall
xlat
sbb
rolb
inc
arpl
push
sub
test
jb
jne
or
daa
cmp
mov
adcb
scas
ss
jnp
or
inc
rcll
divl
jp
cmpsb
aas
dec
ja
rorb
jo
repz
xor
inc
jmp
push
push
jecxz
ja
inc
sbb
mov
mov
leave
push
sbb
jbe
mov
xchg
mov
adc
jge
jmp
push
dec
xchg
lcall
inc
ljmp
leave
add
xchg
pop
loope
mov
pusha
add
xchg
dec
jae
mov
les
movsl
std
xchg
pop
stos
pop
push
push
xchg
xchg
out
dec
mov
gs
mov
cmpsl
cld
push
fsubs
lahf
arpl
or
and
mov
js
lods
jne
sub
xchg
arpl
inc
jl
mov
lods
mov
add
cmp
ja
mov
dec
xchg
adc
lea
cli
xor
pop
stc
lock
mov
xor
pop
sbb
sarb
lret
sbb
fstps
decb
xor
testl
and
sub
pusha
out
cmp
shrl
ja
pop
or
add
les
movsb
sbb
mov
lds
and
jns
sarb
subb
pushf
cmp
sbb
mov
enter
hlt
aam
pop
ret
cmp
sub
jbe
sahf
or
aam
lds
push
mov
cmp
or
sar
jp
lock
mov
lcall
insl
mov
or
hlt
sub
sbb
mov
bound
lea
ret
aam
mov
cmp
push
in
cmp
jbe
aam
rcl
fscale
adc
or
jp
sbb
mov
ljmp
lret
aad
ss
adc
mov
fsubrs
and
test
inc
xor
rorb
xorl
stos
movsb
lds
lods
lock
and
inc
hlt
fbld
sbb
outsb
push
add
lods
in
cmp
xlat
das
outsb
leave
nop
and
pop
call
jl
mov
pop
enter
test
dec
loope
push
cmpsb
inc
imul
fadds
or
inc
dec
xor
in
inc
mov
jbe
lock
cmp
bound
mov
fsubs
int3
mov
rcr
mov
icebp
mov
jne
inc
inc
push
push
aaa
xchg
out
btr
arpl
cmp
dec
sub
loope
roll
jae
fstps
cltd
es
popf
push
xchg
push
idivl
mov
cmp
ds
jge
add
dec
pusha
outsb
fistps
outsl
push
jecxz
fs
cmp
movsl
ret
imul
movsl
xchg
fadd
xor
clc
loope
jl
test
and
sar
jg
test
jae
jno
push
xor
xchg
lds
dec
push
loop
das
pop
arpl
xor
dec
sbb
lods
dec
movsb
push
leave
adc
insl
icebp
mov
cmp
ja
aas
xor
popa
xor
cmp
dec
stc
mov
cmc
dec
cmp
fwait
ljmp
adc
sahf
pusha
insl
lds
daa
add
add
and
xlat
dec
pusha
repz
jle
stos
or
pop
and
sti
vandnps
sub
pushf
mov
loope
subb
jmp
pushf
in
ja
push
pop
cmpsb
sub
fabs
sbb
and
movsbl
out
sbb
out
and
js
cmp
mov
adc
jbe
cmp
or
push
pop
jp
stos
pushf
out
push
adc
icebp
insl
int3
pop
loop
xor
mov
cmp
fisttpl
push
test
dec
xor
cmp
je
fcompl
xchg
lods
cwtl
data16
xor
sub
or
jmp
shrb
lods
fdiv
hlt
push
fsubl
cmp
shlb
or
sahf
mov
pavgw
mov
hlt
js
adc
xlat
dec
imul
pop
pop
cwtl
sub
call
jno
clc
fcomps
out
pop
lock
xor
into
subl
loopne
mov
aas
add
mov
pop
in
cmp
sbb
jbe
push
add
or
testl
jb
scas
outsb
adc
enter
xor
and
shlb
inc
jle
ds
shll
insb
pop
shrl
add
fcmovnb
orb
pop
clc
or
cld
mov
sbb
clc
lret
scas
les
mov
sbb
cltd
in
xor
repz
loop
dec
jne
les
sbb
pop
fcoms
movsb
in
mov
push
push
xorb
add
cmc
outsb
xor
lock
stos
gs
mov
pop
push
cmp
pop
cmp
aas
push
add
and
mov
push
fwait
nop
or
out
sbbl
jg
dec
lret
pop
jbe
dec
fsubs
popa
xor
fwait
shl
lcall
mov
imul
cmovge
or
int3
add
xchg
popa
pop
pop
std
out
xor
pop
mov
jns
cs
in
pushf
mov
jns
pop
popa
cmp
mov
adc
cmp
sbb
ss
xchg
loopne
add
dec
xchg
stos
dec
sbb
and
subl
in
cmc
in
dec
sarl
mov
adc
sbb
jle
jno
xlat
out
push
and
or
inc
fucom
aad
sub
repz
ret
mov
pusha
mov
loope
push
sub
lods
jns
test
je
mov
jne
jae
sahf
dec
addr16
sbb
test
or
gs
sub
sbb
mov
jl
hlt
sbb
loopne
jge
adc
adc
bswap
andl
idivl
rol
mov
and
mov
scas
neg
cltd
in
fldl
xchg
arpl
sub
push
decb
mov
jmp
mov
and
leave
lcall
arpl
mov
xor
xor
xchg
movsb
fwait
mov
call
ret
mov
mov
and
xor
xlat
into
push
stc
cmp
fsubl
add
out
sti
mov
out
and
cltd
out
push
inc
fucomi
mov
and
mov
arpl
lret
sub
push
pusha
aad
or
jmp
xchg
mov
stos
mov
mov
or
push
dec
sub
adc
sbb
and
and
aaa
dec
mov
sbb
pop
inc
inc
sbb
iret
fsubrs
or
icebp
out
push
sub
aad
cmp
jle
add
iret
stos
aaa
sbb
pop
lahf
or
popf
jbe
mov
pop
fisubs
rorb
repz
loop
push
inc
roll
jo
cmpsb
gs
or
mov
inc
mov
mov
inc
adc
sub
js
ds
xor
popf
int
push
adc
xor
shl
orl
mov
scas
mov
fdivl
jns
jg
push
cmp
hlt
push
pandn
sbb
js
add
mov
mov
adc
out
sbb
xlat
dec
mov
mov
jp
andl
cli
aas
fnsave
enter
jne
adc
xor
test
stos
mov
pop
cltd
mov
out
push
xchg
ret
and
adc
int3
dec
push
inc
pushf
add
jmp
pop
fdivrs
add
outsl
inc
shrb
mov
pop
mov
jno
scas
shrl
gs
outsb
repnz
lods
cltd
adc
int
jb
add
inc
lret
cmp
and
das
and
loope
mov
push
aad
push
or
cltd
jl
imul
jnp
xor
mov
cmp
mov
movsl
ds
pop
jmp
pusha
out
jns
fistps
insl
jle
aam
mov
mov
sbb
xchg
jae
xchg
jg
fwait
int3
mov
outsb
ja
adc
mov
pop
and
rcll
jl
push
inc
mov
cli
push
add
push
cmpsb
movsb
push
mov
loope
mov
jl
outsl
ret
sub
out
adc
repz
inc
pop
out
mov
adc
out
sbb
cmpsl
push
repnz
sti
sar
idiv
mov
cmp
aaa
loope
jmp
iret
sbb
mov
jne
lock
sub
inc
xchg
rclb
fwait
mov
mov
adc
ja
mov
aaa
push
fnstsw
stos
mov
insl
fwait
cmp
mov
dec
push
xchg
push
popl
pop
inc
push
jl
aaa
es
in
or
and
or
mov
ds
in
shlb
lret
movsl
ror
adc
rep
mov
mov
dec
sbb
xchg
ss
addr16
in
and
and
jno
aad
pop
jmp
adc
and
test
inc
loope
jae
cmp
and
xchg
loope
fldt
dec
mov
add
and
mov
cltd
lcall
mov
jae
cmp
hlt
or
dec
mov
xchg
movsb
adc
js
lock
js
add
and
xor
es
sub
xlat
jle
xchg
scas
mov
sar
pop
lahf
leave
jg
shll
dec
and
mov
out
stos
sub
scas
mov
addr16
arpl
inc
adc
adc
xor
and
sub
jle
insl
sub
stos
pop
pop
adc
jle
sbb
jle
inc
mov
or
sub
pop
movsb
mov
enter
movsl
std
sbb
sbb
shll
arpl
je
inc
fcompl
ficoml
mov
sub
xchg
mov
sbb
xlat
jle
xchg
in
dec
into
dec
sbb
or
pop
movl
sub
subl
das
jge
sbb
rorb
add
aaa
inc
das
fdivrs
xchg
pop
jns
sbb
push
xchg
mov
mov
mov
push
movsb
pop
or
in
add
sub
or
movl
lods
imul
or
push
fs
mov
mov
ljmp
lea
adc
mov
xor
xchg
in
aaa
dec
add
in
sbb
jmp
nop
push
cmp
adc
rorb
dec
or
mov
ljmp
cli
repz
xchg
fimull
xchg
xchg
dec
out
stos
sahf
dec
and
in
and
sbb
sti
cli
xchg
dec
aad
inc
fmul
push
out
clc
jecxz
xor
out
sub
xchg
inc
mov
adc
mov
insl
xor
popf
cmpsb
adc
stc
push
push
inc
pop
testl
fmul
mov
cmp
fildll
or
stc
or
scas
repz
imul
pop
jp
data16
jmp
sbb
mov
jbe
add
mov
jg
scas
cs
xorb
and
popa
mov
sbb
push
xchg
xchg
cmc
aad
dec
pop
cld
pop
mov
push
mov
push
test
inc
mov
cmp
jns
out
into
lods
hlt
imul
add
repz
aas
ja
je
sbb
xchg
mov
add
push
loopne
inc
aad
xchg
xchg
insb
xor
jno
adc
inc
or
mov
fdivs
cmpsb
test
imul
or
cmc
das
mov
add
js
iret
xchg
xchg
sbb
call
sbb
inc
cmp
push
push
and
xchg
add
mov
mov
and
cmpsl
out
sbb
dec
inc
mov
or
mov
add
mov
aaa
sub
lea
xchg
les
je
icebp
xchg
call
imul
cmpsb
sti
and
mov
adc
cmp
loope
movb
bound
hlt
inc
mov
sbb
mov
popf
sub
lods
sbb
or
jg
into
pop
ljmp
lods
clc
fs
leave
lods
outsb
lahf
pop
push
fwait
or
outsl
cmc
sbb
in
mov
push
fsubrl
or
xchg
or
lahf
jecxz
xchg
add
popl
xchg
outsl
xchg
add
or
in
add
xchg
xchg
call
lock
int
aad
sbb
repnz
or
push
jbe
inc
lcall
pop
xchg
clc
fistps
mov
xor
sub
mov
xchg
ds
test
pop
dec
jo
push
push
and
pusha
and
xor
sub
or
sbb
ficomps
jl
neg
mov
std
pushf
xor
notl
jbe
fildl
push
scas
mov
pop
sti
jbe
bnd
jbe
nop
mov
in
adc
out
aaa
or
movl
mov
inc
out
jp
aas
mov
sub
pop
and
pushf
pop
rol
mov
pop
mov
aas
xor
adc
pop
addr16
mov
adc
cmp
aad
insl
xchg
adc
stos
loope
cwtl
mov
push
hlt
ficoms
mov
xchg
add
mov
outsl
mov
insb
shll
ja
in
inc
dec
sbb
test
into
push
push
je
push
ljmp
inc
push
xchg
push
jecxz
mov
dec
aaa
imul
mov
sub
leave
xor
xor
or
aad
test
pop
hlt
lea
dec
mov
cmc
loope
sub
addr16
arpl
es
dec
loopne
mov
movsb
cmp
imul
lock
xor
jl
flds
cmp
dec
lock
lods
fucomi
out
xlat
xor
cmp
stos
icebp
out
cmpsb
dec
xor
stos
divl
dec
xchg
push
imul
xchg
dec
and
aas
adc
jno
ja
in
inc
dec
pop
ror
jne
dec
sbb
adcb
add
dec
inc
std
lea
fldlg2
mov
lahf
imul
test
jge
push
jbe
ljmp
test
fsubl
ljmp
pop
xchg
adc
add
test
adc
or
mov
or
sbb
scas
lds
in
jge
fst
lea
add
or
sub
cmpsl
pusha
cmp
mov
cmp
andb
in
pop
outsl
mov
popa
cwtl
jo
dec
insl
or
or
into
xor
dec
mov
enter
mov
sbb
jbe
mov
and
data16
ljmp
sbb
xchg
lret
lret
add
push
or
cmpsl
pop
xchg
xlat
xchg
ds
jb
out
push
and
inc
push
xchg
adc
dec
ret
pop
stc
cli
mov
aad
add
icebp
gs
stos
mov
in
rcll
scas
push
xor
loope
into
or
cmp
dec
adcb
inc
inc
addr16
cmpsb
push
addr16
loope
pop
xor
xchg
cmp
add
divb
outsb
or
pop
pop
popf
mov
pop
lret
xor
ljmp
mov
call
pushf
push
dec
mov
scas
lds
dec
push
fisttpl
subl
ss
movsl
jge
sbb
cmpsb
adc
shlb
add
adc
push
std
in
es
shrb
aaa
dec
push
sti
pop
pushf
nop
or
mov
inc
and
les
in
push
jmp
push
dec
pop
xor
cwtl
adc
dec
loopne
mov
push
lret
dec
cmp
pop
mov
outsl
xchg
dec
jno
repz
imul
mov
sbb
mov
das
xchg
pop
gs
test
ret
cmp
mov
lds
add
cmpsl
xchg
int3
loop
lret
loopne
inc
mov
add
or
scas
leave
push
fimuls
stc
cmp
loopne
jo
sbb
ss
pop
dec
dec
shll
or
aaa
jle
leave
lret
arpl
adc
loope
jnp
pop
stc
scas
and
dec
and
and
jo
add
cmpsl
xchg
rcll
sarb
roll
fs
addr16
mov
mov
mov
pop
in
lret
pop
fisubl
mov
xchg
sub
jne
ljmp
fcoml
les
adc
ss
xchg
aam
inc
mov
daa
loopne
shl
sbb
dec
enter
cmp
push
cld
test
leave
fwait
dec
ret
lcall
lahf
insl
add
adc
pop
ficompl
aad
pop
rcrb
push
nop
xchg
sbb
dec
mov
in
lret
mov
loop
mov
stc
dec
push
xchg
lea
push
xor
aas
orps
cmp
out
xor
xor
lods
xchg
and
pop
lock
sbb
sub
cmpsb
mov
out
adc
xchg
xor
nop
movsb
aam
push
push
fnstsw
es
xchg
mov
xchg
imul
pop
xchg
mov
lods
mov
sbb
mov
imul
jge
inc
stc
mov
aas
push
cmp
sti
clc
jae
mov
sbbb
ds
rcl
aad
lcall
adcl
dec
jbe
popa
pop
out
stc
add
jno
jg
add
movsb
jbe
rcrl
cmpsb
add
aaa
fwait
cmp
jo
mov
lret
cmc
sbb
enter
adc
into
cmpsl
cs
push
in
cmp
pusha
mov
call
cmp
cmp
addl
adcl
clc
push
imul
scas
mov
movq
in
cmp
xor
movsb
pop
pop
add
aaa
fs
pop
fistps
cs
sti
mov
fsubr
mov
add
mov
fstpl
add
stos
mov
testb
sbb
out
or
sti
ds
push
mov
pop
test
jl
mov
lock
sbb
lods
dec
dec
or
pop
pop
jl
xchg
imul
lds
jmp
jecxz
dec
xor
mov
mov
aaa
icebp
scas
lds
xor
sbbl
dec
shrb
xchg
push
inc
int3
into
fnstsw
scas
pushf
in
xor
or
jno
fwait
jmp
repz
and
ret
xor
cmp
xlat
mov
adc
ror
dec
xchg
rorl
jb
jmp
mov
cmpb
inc
jb
testl
aam
in
xchg
aas
xchg
mov
in
jl
sub
pop
lcall
jge
adc
ja
cmp
aam
jg
dec
add
inc
scas
push
jb
mov
aas
icebp
shr
push
sahf
jb
jns
xchg
arpl
addr16
or
ret
push
pushf
mov
adc
sub
rorl
fs
mov
fmulp
fsub
mov
xlat
test
ror
stc
lods
mov
movsl
and
mul
cwtl
ljmp
sarb
int
inc
repnz
cli
das
xor
pop
fcompl
shl
jns
cwtl
inc
xorb
pop
sarb
sahf
js
pop
into
mov
xchg
insb
mov
dec
xor
mov
push
mov
dec
scas
sbb
push
out
push
jg
imul
xchg
iret
outsb
std
scas
jno
xchg
mov
push
push
pop
sbb
mov
nop
or
jp
xchg
out
sbb
xchg
mov
push
sub
lods
pop
mov
nop
jb
in
or
xchg
imul
inc
stos
lcall
adcb
xchg
add
or
dec
enter
stos
mov
cwtl
and
sub
loope
mov
cmp
pop
imul
xchg
add
mov
or
iret
std
imul
jmp
cmc
mov
pop
push
aas
cmp
adc
imul
xor
push
pop
dec
roll
fcomp
les
ljmp
sarl
clc
jno
shlb
shll
int
sbb
or
push
xor
inc
in
out
cmp
rorl
pop
cmc
sbbb
mov
imul
sbbb
aaa
jno
inc
cmp
sub
mov
adc
in
mov
xor
push
or
mov
insl
dec
dec
adc
and
xchg
subb
mov
leave
add
inc
mov
in
pop
repnz
lahf
pop
xchg
pop
je
cltd
and
jnp
in
or
xor
roll
adc
sbb
stos
cmp
cmp
fbstp
mov
jecxz
and
fidivl
ds
fstl
shlb
adc
pop
ljmp
adc
icebp
push
or
andl
jne
cmp
pop
cli
shlb
jg
insl
nop
adc
mov
cmp
mov
cmc
mov
in
jge
insb
imul
mov
inc
xchg
sbb
and
in
add
fs
push
jne
fnstcw
xchg
jg
xlat
loop
push
cmp
sbb
mov
cmp
insl
pusha
pop
fistpl
pop
mov
xorb
mov
in
cmp
xchg
xor
cld
test
fnstenv
lea
fbld
inc
bnd
mov
cltd
int
pop
enter
mov
ficoml
xchg
lcall
imull
arpl
loopne
xchg
mov
iret
mov
sub
les
loop
inc
lods
shlb
xor
inc
sbb
jecxz
and
sbb
sub
mov
jae
outsb
sbb
pop
sub
push
ss
es
divb
sarl
hlt
fs
int3
jmp
insb
jge
mov
xchg
sahf
or
nop
jns
mov
and
arpl
add
pop
in
mov
add
pop
xchg
stc
xchg
cmp
es
pushf
enter
arpl
adc
fistl
cmp
ret
subb
imull
testb
fnstsw
pop
or
out
int
ret
pop
adc
addr16
into
rclb
stos
adc
pop
mov
fldl
fs
push
sub
and
imul
movsb
lret
mov
aas
xor
cmp
int
cwtl
sbb
push
xchg
loopne
inc
inc
mov
idivb
in
push
adc
xchg
andl
push
xchg
mov
push
clc
push
add
adc
ss
push
xor
or
adc
iret
pushf
sti
sti
fisubl
outsl
inc
fnstcw
push
mov
adc
cmp
inc
and
rcrb
divb
movsl
lods
mov
sbb
pop
jge
mov
jns
jmp
dec
push
lea
add
xchg
inc
push
xorl
aad
dec
mov
push
test
arpl
nop
pop
cmp
clc
add
sbb
push
dec
inc
imul
cmp
imul
xor
icebp
dec
cmp
mov
jl
fs
dec
mov
scas
arpl
dec
mov
bound
push
mov
cmp
cmp
stc
xchg
cld
xor
cltd
mov
and
arpl
jo
fistps
cmp
leave
adc
lahf
jle
out
fadd
movsb
ficompl
jae
inc
std
into
push
std
and
push
incb
jo
sub
dec
dec
test
dec
sti
pop
stc
cmp
movsb
jmp
xchg
sub
movsb
mov
ret
inc
push
xor
or
ret
in
adc
cmp
dec
test
jecxz
xchg
movsl
pusha
lret
mov
pop
int3
jge
sub
clc
mov
lock
ds
inc
lods
inc
fistps
popa
nop
leave
xchg
fisubrl
sub
ljmp
push
jae
pop
lret
jmp
pop
inc
das
mov
jns
js
repnz
loopne
xor
scas
adc
pop
sbb
out
mov
shll
pop
int
loope
pusha
pop
mov
push
test
scas
or
or
push
mov
mov
xchg
xchg
add
push
jg
addr16
mov
aad
into
ret
xchg
cmp
out
xor
sub
pop
flds
mov
cmp
clc
sbb
cs
jo
sub
or
bound
dec
cli
mov
mov
mov
jmp
sbb
adc
scas
mov
inc
push
sbb
rorl
sub
outsb
popa
das
jne
lret
mov
sbb
sub
es
and
lock
cmp
add
lret
cmpsl
xchg
stos
pushl
mov
ficoml
test
push
js,pt
mov
call
fisttpll
sti
xor
xchg
popf
insb
cmp
mov
stos
movsb
je
mov
inc
outsb
fmuls
call
aad
dec
lahf
scas
mov
in
cmp
xchg
addl
mov
mov
dec
imul
sbbl
int
aaa
and
or
repnz
or
mov
push
mov
xor
cld
sbb
in
mov
js
add
add
mov
adcb
mov
push
mov
cmpsl
dec
inc
cmp
repz
mov
mov
jbe
cld
imul
rorb
mov
push
mov
inc
and
and
andl
sbb
in
adc
add
sub
lds
add
sti
or
xchg
sub
lock
inc
cwtl
sbb
cmp
rcl
mov
in
jmp
sbb
repnz
or
dec
stc
mov
lret
je
test
pop
call
xchg
pop
mov
cmp
cld
imul
mov
test
mov
xchg
ljmp
leave
nop
pop
iret
push
inc
xor
out
pop
mov
inc
sbb
lret
fisubs
adc
ss
outsl
out
sbb
jp
stos
mov
pop
mov
and
inc
jg
cli
loopne
cli
or
adc
or
stos
sbb
aas
push
mov
fisubl
jl
mov
pop
jae
pand
add
xor
mov
insl
mov
sub
lret
pop
xor
loopne
add
ja
cmp
jecxz
shl
fcomi
or
idiv
inc
dec
inc
add
mov
push
js
insb
ror
mov
xchg
or
sbb
mov
out
push
mov
add
cli
cmp
cmp
movsb
mov
xor
push
xor
ds
call
jecxz
sub
and
xchg
mov
dec
out
ret
fs
push
into
cltd
pop
inc
dec
gs
mov
push
popf
mov
jnp
sbb
mov
cmpb
push
adc
push
adc
pop
orl
ror
clc
mov
or
mov
mov
sub
daa
sbb
repz
jmp
in
pop
mov
repz
lea
sub
sub
mov
rcr
push
pushf
mov
enter
inc
jb,pn
sti
icebp
xor
je
xchg
shll
testl
ss
mov
mov
mov
xchg
mov
in
mov
jmp
ja
mulb
cmc
push
test
adc
repz
ss
sub
inc
xchg
sbb
loope
dec
jg
das
or
jnp
mov
mov
test
rcll
loopne
xor
shl
nop
xor
mov
xchg
gs
lods
mov
rorl
popf
push
enter
addr16
or
push
push
or
popf
insl
popf
push
mov
inc
cmp
push
das
lods
push
or
lahf
mov
adc
xor
dec
xchg
iret
shl
insb
imul
jle
sub
push
and
sub
add
sub
mov
sahf
int
dec
push
jmp
or
fcomps
jmp
xor
push
sbb
mov
fwait
mov
or
lods
test
adc
dec
imul
int
pop
sar
xchg
test
lret
adc
punpckldq
ret
in
inc
sbbl
jmp
jb
inc
or
mov
pop
or
dec
mov
jb
mov
add
bound
outsb
push
sbbl
or
fcmovu
xor
insb
sbb
and
push
xchg
sbb
cmp
insl
push
in
adc
sub
mov
repnz
repnz
test
mov
or
cld
out
and
jb
jecxz
push
leave
stos
add
mov
out
mov
mov
jb
fs
mov
pop
test
lds
sub
xchg
sub
mov
pop
jae
scas
leave
repz
xor
lods
fbld
or
popf
xchg
lret
popa
movsl
out
or
sub
inc
aad
push
mov
sub
addl
scas
xchg
push
adc
jg
xor
scas
pusha
xchg
dec
push
mov
call
sub
pop
inc
movsb
bound
and
std
repnz
icebp
repz
shlb
jns
sbb
into
movsl
fdivrs
dec
mov
in
call
sub
adc
or
mov
dec
test
xor
nop
aam
mov
push
push
mov
into
mov
add
pop
in
mov
mov
je
add
popa
stc
push
popa
mov
dec
adcb
xor
jno
xor
pop
pop
dec
or
psrlw
add
jo
xor
rcll
pop
xor
push
aad
mov
and
and
fwait
mov
adc
jecxz
lds
frstor
andl
imul
fwait
shlb
scas
data16
xchg
jle
test
iret
and
jnp,pt
ffreep
popf
add
in
xchg
enter
mov
mov
pop
popf
fbld
and
or
ret
enter
xchg
mov
aad
cmpl
mov
xchg
xor
and
lock
sbb
jle
add
or
cltd
jp
adc
push
lods
dec
dec
fdivs
fsubp
xchg
fisubl
mov
add
xchg
pop
fdivrs
sbb
sarl
inc
xlat
rorb
scas
pop
lcall
ret
cs
hlt
nop
push
add
push
jno
fmull
ja
mov
sub
mov
fdiv
cmpsb
inc
mov
lock
andb
push
push
iret
imul
notl
jb
inc
or
sbb
mov
jl
stc
es
fdecstp
pop
lea
inc
xorl
mov
test
cmpsb
into
mov
std
xor
int
incl
cmpsb
lahf
dec
out
pop
xchg
pusha
adc
std
cmp
repnz
aad
push
jo
scas
push
sarl
bound
lret
inc
push
shr
divb
outsb
inc
jbe,pn
fs
lods
or
mov
test
jne
addr16
in
lods
jne
sbb
stos
inc
out
mov
sbb
push
mov
jp
ret
pop
pop
ret
pop
mov
lret
sarb
addr16
mov
fwait
cli
dec
inc
adc
test
and
je
stos
mov
imul
mov
stos
push
sub
mov
sbb
push
mov
add
pop
cmp
inc
mov
sbb
jb
lock
and
mov
orb
sahf
ss
mov
mov
jecxz
push
insb
dec
sbb
inc
scas
jle
scas
xor
cld
int3
xchg
dec
sti
repz
pop
test
repnz
mov
dec
je
cmpsl
out
add
add
sbb
leave
ja
sbb
dec
ficomps
in
sti
xchg
sub
xor
adcb
insl
shrl
pop
dec
pusha
inc
mov
hlt
and
push
lret
and
cmp
test
push
pop
std
in
enter
push
jb
mov
xchg
mov
add
inc
rorl
add
mov
or
es
cmp
js
shr
push
add
adc
mov
xlat
addl
or
push
fisubrs
insb
cmpl
arpl
cmp
sbb
lahf
mov
jmp
jne
and
jne
and
xor
inc
pop
dec
push
pop
jae
test
mov
push
leave
mov
stc
mov
test
ja
aaa
arpl
sub
je
push
mov
mov
sbb
lock
jmp
addr16
paddusb
mov
and
js
std
sub
subb
ds
ret
in
add
and
aam
push
xchg
dec
xchg
movsb
in
movsl
inc
icebp
adc
mov
or
mov
in
faddp
movsl
lcall
jne
mov
mov
test
ljmp
imul
test
cmp
jecxz
gs
jmp
addb
mov
lcall
cwtl
inc
sar
mov
mov
ret
adc
adc
mov
addr16
dec
xchg
iret
aam
dec
xor
test
push
xchg
lret
ds
jle
jo
adcl
jbe
out
add
dec
xor
push
mov
jo
sub
jle
fisubl
pop
cli
add
push
ret
mov
fisttps
jl
mov
ret
jns
pushw
push
fistl
jmp
cltd
cmp
mov
add
dec
loop
xlat
mov
dec
xchg
stc
and
loopne
mov
fstpt
or
add
movsb
xchg
jno
rolb
xor
loopne
dec
mov
jmp
loope
fistpl
lahf
cs
jmp
stos
stc
push
ret
and
sbb
mov
les
adc
push
cmp
pop
sbb
dec
out
fcoms
rcrb
or
jmp
and
cmp
xlat
inc
ja
inc
gs
xchg
push
mov
je
out
push
shll
ret
sub
and
pop
adc
out
insb
out
fstps
cmp
lahf
lds
and
aam
jp
dec
cli
movsb
lret
cmp
mov
bnd
out
mov
divl
pop
or
test
xchg
pop
jg
xor
jmp
jle
jl
cmpsb
dec
jb
lock
mov
push
cmpsl
aam
sub
fstps
in
mov
cmp
frstor
gs
xor
push
cmp
hlt
in
into
sti
sahf
xor
addb
insl
push
jle
in
mov
inc
push
jmp
out
movsl
add
push
imul
cld
mov
or
ret
xchg
adc
lahf
fistps
dec
loope
sbb
repz
dec
mov
mov
or
cmpsb
les
or
jl
fildll
ret
mov
sbb
mov
sbb
aaa
mov
fstl
inc
pop
mov
mov
push
mov
lahf
call
mov
loopne
add
bound
mov
mov
lods
mov
mov
lods
jne
cltd
faddl
je
xchg
pop
cmpsl
gs
sub
or
fists
test
inc
ret
sbb
jl
adc
sub
and
pushf
sti
jae
mov
outsb
pop
jl
or
cmc
arpl
dec
pop
insl
bound
push
push
cmpsl
jp
adc
dec
into
add
cmp
out
push
jmp
lahf
ja
mov
sbb
mov
and
fsts
repnz
xchg
in
pop
adc
xchg
aaa
cmp
cmp
inc
jecxz
inc
sub
adc
stos
pop
popa
pop
nop
test
add
or
mov
mov
pop
and
push
lret
xchg
cmp
push
fisttpl
pop
insl
mov
sub
mov
xor
pusha
not
dec
andl
ja
cmc
in
push
sub
imulb
stc
leave
inc
scas
ljmp
out
cmp
int3
adc
add
icebp
or
movntps
dec
loope
jmp
add
lea
jle
bound
je
or
ds
push
xor
xlat
xchg
imul
inc
fcomps
jle
pop
mov
pop
pop
push
scas
loope
adc
stos
rcr
push
mov
test
pop
imul
adc
and
xor
mov
ss
movsl
fdivrs
daa
prefetcht1
cmpl
or
jg
push
pop
sub
testl
packsswb
mov
into
jle
push
dec
in
ljmp
xlat
fwait
pop
pop
mov
sbb
jbe
or
daa
pop
xchg
loopne
adc
push
mov
adc
popw
into
inc
insb
orb
fimuls
add
scas
ds
pop
sbb
xchg
sahf
aad
es
xchg
popa
and
cmpsl
ja
or
push
add
xorl
shl
dec
loopne
out
cltd
jae
je
adc
or
arpl
enter
pop
xor
xchg
js
mov
push
arpl
lea
jne
dec
dec
mov
pop
inc
fidivl
not
dec
push
cmpsb
sub
cmp
push
test
std
mov
test
lds
dec
add
mov
mov
or
in
je
mov
xor
dec
sbbb
adc
je
lock
out
divb
mov
sub
and
jne
pop
mov
xor
pop
es
mov
pop
inc
outsl
jp
mov
iret
aam
les
stos
and
sahf
aas
push
push
mov
push
loopne
cwtl
mov
lock
loop
mov
out
mov
mov
add
push
gs
pop
or
or
mov
xchg
add
rorl
insb
outsl
or
mov
inc
xor
call
lods
aam
sub
mov
iret
cli
lods
ds
jp
cmp
pop
sbb
cmp
add
insb
lds
pop
movl
int3
mov
mov
lret
imul
in
cmc
rclb
xor
mov
syscall
bound
pushl
pop
dec
test
sbb
mov
nop
test
adc
xor
shll
push
mov
pushf
mov
lret
push
cmpsl
int3
lds
es
jne
xchg
inc
push
pop
cmp
cmp
cmp
push
out
out
sbb
jmp
roll
int3
icebp
mov
mov
xchg
or
lds
dec
dec
lret
dec
shlb
test
mov
andb
std
mov
dec
insb
movsl
notl
ljmp
stos
push
fwait
mov
cli
mov
inc
push
bound
xchg
shll
cli
bound
cmp
xchg
out
daa
xchg
jnp
and
call
std
lahf
aad
inc
sub
fsubrl
pop
fildl
adc
xchg
iret
test
and
mov
sahf
je
and
mov
orl
aas
push
cmp
cltd
pop
rorl
insb
inc
imul
mov
ja
cmp
icebp
roll
xlat
shll
faddp
pop
xor
jge
out
cmp
aam
test
loopne
mov
insl
movb
sbb
cmpsl
mov
pop
and
outsb
add
mov
arpl
ljmp
jg
in
pop
divl
adc
das
cmpsb
mov
aam
cmp
out
notb
ljmp
pop
shl
or
push
out
aas
or
in
or
push
imul
or
cwtl
sbb
push
cmp
push
add
push
cmp
or
iret
or
movsb
push
push
in
pop
stos
pop
and
or
addr16
and
pop
ja
dec
dec
stos
les
sbb
push
adc
movsb
adc
into
mov
sti
in
cmp
push
aas
movsl
xor
add
mov
cmp
test
data16
pop
and
aam
push
xor
testb
lret
xchg
xchg
inc
sahf
jmp
ja
sti
xchg
add
push
out
adc
or
ret
adc
adc
push
xchg
xchg
pop
lds
lock
xchg
fisttps
mov
addr16
adc
mov
insb
in
pop
ret
jp
inc
insb
xchg
mov
mov
jnp
icebp
push
push
sbb
outsb
mov
jg
mov
xor
rol
and
cmp
mov
call
adc
lods
out
jle
sbb
popf
popf
scas
sbb
and
adc
inc
dec
ds
and
pop
bound
mov
test
out
out
lds
or
sahf
sbb
dec
cmp
mov
shrl
pop
inc
push
dec
shr
sub
mov
loopne
xor
sti
or
js
pushl
sbb
inc
push
cli
add
and
lea
addr16
lods
mov
jl
leave
fdivl
cmc
adc
push
pop
imul
leave
in
cld
jb
xor
rclb
jnp
or
leave
cmp
arpl
inc
push
mov
jp
fldt
or
or
mov
lahf
in
xor
out
dec
jo
fucomi
mov
or
sub
icebp
or
push
pop
adc
into
in
xchg
enter
out
cmp
outsb
push
or
mov
sbb
mov
push
into
push
cmp
cltd
jmp
insl
xchg
dec
enter
aad
jo
sbb
mov
pop
fnstcw
pusha
jno
cmp
add
and
andl
fwait
pushf
cmp
sarb
and
push
cmpsl
xchg
and
imul
into
sbb
and
mov
add
popf
inc
lcall
xchg
pop
mov
insw
stos
sub
stc
push
notb
cmp
add
cmp
jne
adc
pusha
movb
call
loop
mov
movsbl
cmc
mov
push
xchg
enter
push
dec
inc
paddw
ja
cmp
cltd
mov
loopne
repnz
ret
sbb
insl
hlt
pop
xor
movsl
cs
xchg
xor
and
push
push
xor
int3
mov
out
stos
cmp
mov
cmp
mov
xor
cmp
ror
dec
mov
out
stc
and
jl
push
mov
pop
shll
loopne
mov
adc
lods
aaa
pop
fcmovnu
inc
lods
scas
jo
pushf
lods
lods
outsb
enter
mov
fs
loop
xchg
int
or
insl
cmpsb
inc
dec
stc
push
adc
mov
cmc
insl
xchg
push
cmc
test
fimull
pop
xchg
cmp
xchg
push
xor
aas
ja
aad
call
call
jno
aaa
divl
and
out
outsl
add
push
hlt
jmp
addr16
push
sbb
fistl
aaa
mov
sarb
dec
sub
test
jle
test
gs
xchg
popf
xlat
mov
or
sbb
cmpsb
push
insb
mov
jge
fisubs
sbb
out
push
push
ret
nop
adc
js
dec
aas
dec
mov
cmp
dec
and
jmp
outsl
cmpsl
inc
repz
insb
addr16
mov
mov
and
xorb
out
shll
mov
imul
xchg
mov
in
fisubs
int3
leave
ljmp
mov
sbb
sbb
push
arpl
divl
xchg
repnz
xor
xchg
pop
andl
xor
notb
sub
cmpsb
jno
jp
leave
popf
sub
cltd
mov
fisubrl
mov
enter
cmpsb
mov
pusha
aas
adc
xchg
fnstsw
lods
cwtl
mov
shll
movsb
jle
cmp
or
pop
cmpsb
loopne
neg
xchg
inc
sbb
mov
xchg
xor
in
xchg
rorl
iret
lock
adc
push
dec
push
dec
pop
out
ja
stos
fwait
sub
jg
push
xchg
pop
cli
sti
fldt
push
dec
shll
jae
add
fwait
cld
jae
mov
bound
jmp
jg
fdivl
sub
adc
aaa
mov
xchg
push
push
ds
fdivs
movsb
dec
xchg
sub
inc
shll
fdivrp
mov
cli
or
dec
inc
push
sub
fistpll
pushf
xor
fmuls
sub
stos
bound
mov
cs
dec
mov
xchg
or
aam
js
fiadds
jnp
add
xchg
add
jne
testb
jge
add
push
fucom
rcl
pop
out
and
notb
and
xor
jnp
mov
or
sti
rol
test
enter
and
adc
addr16
mov
jns
sub
shlb
std
sbb
and
testb
outsb
fcoml
mov
lea
dec
mov
ljmp
stc
test
repnz
sbb
adc
je
divb
shlb
cs
mov
cmp
ret
and
pop
push
and
pop
and
jne
lret
mov
std
sarb
enter
inc
push
jno
inc
icebp
pop
adc
push
or
hlt
push
mov
push
pusha
enter
jno
sub
jns
cmpsl
shrb
mov
fildl
sub
dec
or
cmc
mov
aam
push
lret
pop
and
mov
hlt
mov
xchg
fdivrs
push
add
jmp
push
sub
cmp
dec
xlat
inc
je
mov
dec
inc
out
and
jge
inc
int
jne
dec
mov
outsl
cwtl
push
mov
lcall
pop
sbb
mov
shll
test
in
lcall
and
js
mov
or
pop
fdivs
push
nop
push
mov
cmpsb
push
or
inc
mov
push
pop
negb
cmpsb
popa
or
jge
xor
xor
mov
dec
pop
pop
dec
jge
dec
insl
out
inc
into
daa
cli
test
mov
loopne
out
mov
push
push
cs
pop
xchg
and
fmul
aas
aas
xchg
out
dec
sbb
sub
pop
lcall
push
jb
icebp
je
neg
call
pop
sub
push
inc
rcll
pusha
sbb
xchg
add
mov
push
out
sarb
mov
ret
jae
xchg
lds
insb
mov
mov
inc
and
bswap
xchg
bnd
dec
and
sarb
int
or
push
sbb
rclb
mov
dec
sbb
mov
rolb
cwtl
ss
repnz
jge
adc
jg
out
inc
push
pusha
repz
daa
repnz
jl
cmpsb
inc
mov
sti
mov
in
pop
pop
fbstp
cltd
imul
dec
inc
xchg
jecxz
es
add
addb
jp
ror
popa
fnstcw
and
pop
mov
lods
xlat
jmp
xor
and
adc
mov
xor
inc
jl,pt
inc
out
sub
jb
jnp
mov
sti
jmp
cli
ffreep
popf
cli
and
std
or
adc
jg
leave
sbb
or
decb
add
mov
xchg
xchg
test
xor
popa
jecxz
mov
stc
jae
lock
sbb
jne
loop
repz
and
and
ret
pop
lahf
pop
inc
sub
cwtl
cmp
inc
aam
and
inc
into
cld
lcall
decl
fnsave
and
mov
adcb
js
add
mov
dec
xchg
or
mov
fsubr
jne
mov
jmp
outsl
push
and
cmp
mov
sti
cmpsb
scas
aaa
jp
enter
inc
pusha
jno
pop
and
adc
shr
nop
es
pop
jae
fisttpll
js
ss
lock
or
into
or
iret
mov
test
stc
cmp
mov
fildl
cmpsb
mov
cltd
jbe
mov
adc
test
scas
lcall
pop
xlat
xor
xchg
mov
pop
pop
or
lods
add
lods
mov
bound
mov
dec
pop
insb
mov
leave
sbb
fcmovne
aas
dec
and
testb
or
int3
adc
or
xlat
jle
es
jge
push
in
movq
insl
push
pop
mov
cmp
sarb
mov
subl
mov
repnz
pusha
mov
inc
add
fisubl
lods
jle
push
cmc
jno
enter
lods
ss
jp
mov
aad
xchg
ficomps
xchg
enter
test
inc
and
pop
sbb
mov
rolb
mul
fistpl
je
call
sbb
add
outsb
shrb
inc
push
pop
into
mov
push
cmpl
aas
dec
in
inc
out
jb
or
push
addr16
jl
arpl
sbb
xchg
aam
adc
xor
sub
mov
cs
xor
out
mov
lea
push
ret
aaa
push
push
and
sbb
sbb
cmp
pop
xchg
pushf
dec
shlb
ss
nop
mov
pop
inc
cmpsl
pop
cmp
xor
mov
sbb
call
jnp
les
sbb
inc
lret
stc
sbb
stos
add
sti
jl
lods
and
mov
movsb
mov
loopne
push
push
movsl
xlat
sahf
mov
push
stos
cmpsl
movsl
push
pop
imul
xor
fwait
jne
data16
les
mov
dec
and
inc
fstpt
clc
inc
mov
xor
dec
and
mov
mov
leave
mov
add
test
int3
mov
test
pop
mov
testl
stc
and
jo
jo
or
das
sub
sub
push
adc
orl
daa
mov
in
mulb
mov
push
pop
lea
cmc
scas
xchg
pop
ja
xchg
lea
nop
into
push
jnp
inc
repz
roll
pop
dec
test
xlat
outsb
arpl
lods
cld
repnz
jnp
clc
mov
jp
ds
andl
jns
aam
js
inc
sub
mov
shlb
sbb
jo
sbb
mov
dec
mov
xchg
add
push
mov
nop
in
cmp
or
xchg
repnz
jo
insb
icebp
inc
pop
sahf
icebp
adc
fstps
mov
dec
mulb
ficomps
mov
xor
push
clc
sub
xchg
mov
test
addr16
in
sbb
xchg
andl
sbb
xor
std
sub
mov
fwait
out
mov
lret
cmp
fsubr
into
pop
out
repz
cwtl
or
lock
push
out
outsb
inc
xor
leave
xchg
pop
xor
sbb
xchg
jno
jl
jae
mov
cmp
mov
pop
shrl
shll
imul
mov
cmpsb
mov
sbb
push
add
jnp
ds
dec
fmulp
test
jl
lret
jb
sub
jbe
jo
lea
lret
xchg
and
sbb
push
loope
xchg
push
jmp
dec
mov
cmpsb
cvtpi2ps
loopne
and
mov
popa
out
sub
add
xchg
outsl
negl
sbb
imul
dec
cwtl
es
movsb
adc
push
push
add
jg
data16
data16
sub
popa
lahf
stos
ficompl
test
les
mov
jae
bound
rcr
sti
adc
xchg
fdivrs
mov
cld
xchg
pushf
push
dec
mov
jmp
push
movsb
in
pushf
sbb
or
adc
mov
jae
cmp
outsl
fs
sahf
jg
or
xor
inc
mov
and
pop
push
sti
repz
das
pop
cmpb
jnp
and
daa
hlt
into
inc
cmpsl
sarb
pop
xchg
xor
lds
jne
xchg
scas
out
jnp
push
iret
fs
in
pop
das
xchg
out
bound
jno
cmp
into
mov
mov
jae
les
inc
pop
cmp
xchg
xlat
mov
shl
add
inc
jp
push
test
inc
push
xorb
cltd
adc
in
or
push
arpl
loope
add
stos
popl
imul
mov
sbb
daa
pop
sub
loope
add
cmpsb
or
cmp
inc
movsb
adc
test
xor
push
adc
or
pop
or
sub
daa
push
orb
pop
in
movsb
pushf
enter
es
cmp
jo
xchg
das
or
xchg
or
cwtl
les
in
fs
mov
lret
js
mov
call
addr16
cmpsb
or
and
pop
bswap
scas
ret
push
mov
movsl
push
mov
mov
nop
insb
loopne
push
ret
test
jo
mov
sub
mov
hlt
add
fldt
lcall
ss
or
or
cmp
js
js
sub
sub
adc
push
arpl
cmp
cwtl
lock
ds
dec
int3
and
add
das
or
mov
insb
mov
out
pop
inc
loop
std
pop
inc
pop
and
aam
jbe
dec
push
imul
je
adc
leave
push
mov
int
sbb
inc
or
cltd
leave
flds
mov
jae
icebp
call
rorl
xor
leave
iret
add
xadd
pop
out
mov
jne
scas
inc
fcoml
jmp
and
addr16
ret
push
das
mov
mov
mov
aam
jl
mov
lods
pusha
les
xlat
push
mov
cmpsb
mov
sbb
mov
je
jg
sbb
dec
mov
arpl
sub
mov
pop
adc
xlat
sahf
fldenv
ds
push
cmp
xchg
jmp
scas
hlt
mov
sub
push
insb
cwtl
push
add
push
cmpsl
repz
insb
and
adcl
scas
add
sub
xor
outsl
ret
leave
or
push
pop
dec
sarb
aaa
pop
loopne
gs
imul
pop
or
jne
aad
mov
inc
ja
fld
mov
pop
test
imul
mov
jle
cmp
xchg
imul
cmp
in
pop
loope
out
jns
mov
push
lea
jle
mov
data16
arpl
fcoml
iret
pop
loope
push
pusha
jecxz
mov
jae
mov
push
push
pop
gs
lods
les
lret
push
shrb
stos
int3
jo
lcall
cld
xor
jnp
sbb
adc
mov
dec
mov
inc
mov
dec
fistps
sbb
sub
mov
sub
mov
jmp
es
inc
dec
push
xchg
jecxz
in
in
and
repz
pusha
sub
shlb
or
push
scas
fnsave
push
jge
pop
es
mov
not
push
or
mov
xor
jnp
xchg
das
add
shl
xchg
stc
mov
std
push
mov
push
shr
ds
lahf
pop
fisubl
addr16
outsb
dec
stos
push
adc
fst
xchg
sarb
iret
test
mov
arpl
dec
loopne
adc
sbb
mull
cltd
fs
bswap
jb
inc
adc
cmpsb
mov
fadd
jmp
pushl
mov
movsb
xchg
cmp
ds
mov
jmp
vpshld
cld
mov
dec
push
add
jl
fisubrl
and
loope
dec
std
repz
fbstp
icebp
jb
cs
lret
lret
fmull
pop
test
mov
repz
mov
mov
outsl
push
pop
cltd
mov
cmp
out
mov
pop
icebp
std
xchg
and
adc
or
inc
sbb
xor
aas
dec
push
inc
mov
icebp
or
ljmp
fbstp
mov
outsb
lods
xchg
push
sbb
gs
mov
jb
sub
cvttps2pi
mov
leave
or
or
popf
pushf
mov
xchg
and
sbb
addb
clc
stos
rcrl
in
inc
inc
add
fimuls
call
jbe
mov
ret
adc
xor
add
stos
add
pop
ja
add
adc
dec
test
cmp
xor
push
mov
sbb
ret
outsb
pop
enter
xchg
pop
mov
mov
inc
stos
sbb
je
mov
insl
nop
call
fwait
popf
in
mov
sahf
inc
push
sbb
pop
stc
adcl
cwtl
sub
jmp
xlat
push
mull
es
cmpsl
add
adc
hlt
ljmp
sub
adc
mov
inc
in
xor
jle
sub
inc
out
in
pop
mov
mov
lret
mov
mov
fsubr
sbb
xor
dec
sbb
int3
test
lea
push
dec
xor
jle
dec
mov
xchg
in
lea
jmp
jb
xchg
mov
dec
js
scas
xlat
test
jns
and
mov
sub
sbb
push
jno
rcll
dec
xchg
mov
pop
imul
sbb
cmpb
jg
xor
adc
inc
jg
sbb
pop
into
mov
push
or
cld
divb
mov
jl
pushf
jo
jmp
xor
sbb
add
xor
and
leave
int
lahf
adc
pushf
ljmp
pop
inc
mov
xor
imul
push
sbb
lock
movsb
mov
fsubl
push
mov
icebp
push
sbb
pop
sbb
in
dec
ljmp
popf
xor
mov
outsb
push
push
mov
fwait
rcll
push
and
icebp
lods
rorl
cwtl
fadd
cltd
mov
jne
rcrl
dec
in
and
mov
sbb
mov
cmp
inc
xchg
mov
test
iret
mov
dec
and
lret
mov
clc
aaa
aaa
iret
fwait
pop
sti
pop
inc
and
das
subl
mov
add
cld
imul
push
ljmp
fistl
mov
xchg
adc
lds
xchg
rcll
outsl
xor
rcl
lea
mov
inc
lds
les
leave
lcall
lods
sti
mov
aaa
and
jg
mov
pop
fwait
stc
rorb
lahf
testl
pusha
icebp
imul
push
dec
stc
insb
adc
rcr
mov
xlat
mov
enter
jnp
inc
cwtl
rcrb
pop
pop
lods
loopne
orb
lods
int
dec
cmc
out
dec
ss
neg
repz
mov
sub
or
jne
jle
pop
inc
add
xor
xchg
sbb
or
sbb
add
mov
jns
lock
dec
mov
inc
add
mov
out
leave
pop
jne
in
push
cld
dec
lds
inc
sbb
stos
sti
add
cmp
sbb
add
call
jp
cmp
sti
out
sbb
xor
mov
or
xorl
rolb
push
pop
inc
rcrb
jo
movsb
fstps
popa
jo
cmp
sub
in
loop
cmp
ds
push
lret
lret
ret
pop
push
shlb
sbb
out
dec
jae
enter
sub
aaa
dec
add
mov
jge
ss
lahf
into
inc
lcall
rcrl
jo
es
pop
shll
lods
cltd
pop
mov
int
jecxz
ljmp
lods
bound
push
sub
xchg
pop
ja
hlt
cs
mov
xor
mov
mov
pop
lods
mulb
sub
or
xchg
inc
push
sbb
imul
inc
mov
xchg
mov
fadds
adc
inc
push
pop
movsb
int
mov
xchg
ret
das
cli
in
xchg
xchg
sbb
add
jg
jb
inc
dec
aad
sub
and
xchg
dec
sbb
sahf
shlb
pop
pop
out
mov
cmp
popf
loop
fwait
jo
adc
rcrb
mov
sbb
push
push
movsb
xchg
jmp
push
popf
icebp
inc
mov
jne
cmc
push
adc
fbld
jb
jmp
int
jae
adc
mov
in
push
add
push
out
mov
aad
imul
xchg
fildll
std
je
pushf
mov
and
inc
leave
out
inc
mov
ret
movsb
mov
sub
in
push
sub
ret
jbe
popa
xor
xchg
sarl
cmp
outsb
sbb
gs
test
cmpsb
sub
dec
lods
jns
jg
int3
stos
inc
cmp
xchg
cltd
shlb
dec
adc
in
iret
inc
dec
les
pushf
popf
out
mov
aas
mov
fwait
int3
jae
cs
push
and
lahf
out
sbb
jecxz
loop
cmpl
fimuls
xchg
negb
ds
add
lods
icebp
leave
adc
cmc
push
mov
out
aam
pusha
xor
cltd
sub
or
xchg
mov
sub
outsl
jb
fwait
repnz
sub
cmp
xchg
lock
sbb
pop
sub
mov
push
xchg
xchg
jmp
sbb
mov
mov
ficoms
sbb
lods
mov
mov
outsb
xchg
inc
push
in
xchg
lock
jae
fists
or
push
inc
insb
bsr
mov
mov
mov
add
movsb
mov
and
mov
jno
das
adc
and
subl
pop
mov
arpl
and
out
mov
jae
mov
cltd
jbe
into
int3
fcomi
xor
scas
in
in
cmp
adc
fdivl
movsb
out
test
pop
dec
adc
rol
fmull
enter
imul
out
jle
fistl
fidivrs
jo
cmp
jg
add
lret
inc
cmp
inc
sub
sahf
cmp
adc
pop
testb
rclb
jbe
sbb
xor
roll
push
das
rcr
in
jo
add
sub
xor
popf
out
mov
inc
ds
xor
scas
lods
jnp
mov
inc
das
out
push
sub
adc
or
hlt
mov
adc
adc
adc
push
bound
js
scas
arpl
cmp
sbb
fwait
jmp
ja
pop
add
push
pop
mov
gs
in
cmpsl
push
movb
or
shlb
out
imul
test
push
push
loope
cltd
push
mov
mov
xchg
xor
cltd
jns
mov
bound
or
sub
pop
cmp
xor
fbstp
outsl
and
movsl
or
bound
lods
out
fidivl
fwait
mov
xchg
stos
sbbb
mov
pop
dec
scas
dec
rcr
mov
loop
jns
daa
pop
test
sub
outsl
hlt
sub
out
jb
pop
cmc
cs
add
movsl
aam
pop
aam
mov
cli
cmc
andb
mov
loopne
scas
scas
pop
adc
enter
jae
or
insl
into
pop
push
mov
into
sub
and
int
fsubrl
hlt
mov
fisubrs
out
test
pop
add
mov
add
inc
aas
lret
insl
lahf
enter
and
dec
xchg
inc
adc
ficoml
clc
in
in
mov
sbb
adc
xchg
icebp
int
pushf
loop
and
xor
arpl
ret
lds
jg
sbb
cld
insb
xchg
das
outsb
add
inc
cmp
sarl
inc
pop
ret
push
gs
mov
scas
sbb
lret
push
lock
or
mov
pop
mov
xchg
mov
scas
das
cmp
shrb
add
mov
jnp
cmpsb
lods
or
xchg
mov
iret
scas
clc
roll
inc
stos
mov
jle
dec
pop
sub
stos
fcoml
out
insb
adc
xorl
xor
or
out
repz
dec
les
dec
test
notb
cmp
xchg
cli
jb
fnstcw
cmpsl
jge
mov
movsb
std
stos
clc
pop
and
mov
out
push
jo
sarb
ljmp
lcall
test
insl
out
push
cmovbe
testl
out
mov
or
bound
sbb
shlb
sbb
and
int
push
roll
in
ret
out
fsubrs
dec
int
jp
sbbl
clc
sub
sub
lods
mov
push
cs
jbe
ret
or
adc
pop
or
cmp
popf
shll
cltd
sbb
add
in
pop
or
enter
sub
sub
xor
addl
das
icebp
cmp
ss
ds
adc
xchg
fildll
cmp
testl
bound
jecxz
or
cmp
cli
sbb
mov
mov
or
cmp
es
jno
outsl
inc
push
addr16
ss
or
andl
cli
into
xor
inc
movsl
pop
stos
sbb
dec
push
mov
mov
add
mov
in
xor
mov
dec
aad
mov
pop
das
lcall
lahf
and
mov
mov
aad
stos
popf
clc
fdivrs
jmp
or
aad
bound
add
jbe
loope
mov
mov
inc
jb
sbb
gs
or
mov
adc
mov
or
bound
cmp
mov
mov
mov
sbb
sub
push
insb
push
daa
cmp
lea
faddl
ret
nop
mov
dec
lret
adc
stos
jno
push
sbb
sub
out
jbe
aas
and
sbb
and
movsl
dec
cmc
iret
mov
aam
addr16
das
fsubr
adc
add
jmp
es
mov
add
mov
in
add
lods
cmp
xchg
mov
mov
dec
or
lret
mov
test
lret
insb
mov
cmpsl
sub
xchg
xchg
mov
dec
adc
mov
sub
ja
jae
dec
cmpsb
pop
jl
mov
and
lret
add
add
adc
lods
push
mov
nop
mov
xchg
fisttpll
push
xor
sub
ds
mov
pusha
sbb
cmp
pop
out
aam
out
and
sbb
sbb
lea
cli
idiv
and
adc
adc
fs
and
xor
cwtl
cmp
fildl
fldcw
push
mov
dec
mov
lret
mov
dec
aas
es
outsl
mov
xor
mov
jmp
xor
ja
fs
add
adc
sub
add
sbb
repz
jnp
lahf
or
lods
jne
leave
clc
pop
fs
lds
pusha
inc
push
shll
lock
lret
stos
repz
dec
mov
dec
popf
mov
dec
enter
mov
rep
cmc
dec
xchg
out
in
dec
dec
push
inc
push
lods
mov
pop
test
xchg
loopne
dec
scas
add
mov
xlat
or
je
cmp
lock
xchg
adc
inc
adc
mov
push
jg
shl
sub
xor
cmp
jb
sub
clc
mov
loope
fidivs
punpcklbw
sub
push
lret
mov
loop
xlat
and
sbb
movsb
push
rolb
xchg
mov
inc
cltd
inc
lahf
sub
fbstp
cmp
xchg
dec
out
fldt
rcr
sub
test
scas
sub
sbb
imul
pop
pop
mov
cmp
push
inc
dec
shll
sub
repz
stos
pushf
jp
lds
jbe
xor
jbe
jnp
out
sbb
test
or
outsb
jl
scas
mov
dec
movb
rcrl
enter
js
jnp
inc
dec
iret
jg
and
loope
movl
imul
jb
mov
and
dec
push
mov
and
bound
mov
data16
adc
movsl
push
sbb
pop
test
popa
aas
xor
mov
inc
pop
loope
jno
dec
or
fbld
lock
push
pop
jle
lret
mov
sub
jg
xor
xchg
lahf
cmp
imul
shlb
scas
jb
shlb
not
inc
sbb
inc
cmp
mov
xchg
test
test
ret
jno
sbb
enter
jbe
jmp
sbb
add
ss
adc
adc
mov
pop
data16
rol
jl
mov
mov
popf
gs
mov
ljmp
inc
shll
insb
cmpsl
sub
fcoml
mov
shl
sbb
std
int3
scas
in
adc
or
mov
lahf
or
mov
js
jno
jb
cmpsb
push
add
and
add
push
adc
leave
xchg
in
mov
loop
test
orb
ret
or
xchg
xor
mov
leave
sbb
sub
mov
fdivs
push
mov
incb
aaa
cltd
pop
aad
add
cmp
sub
pop
cmpb
je
lahf
in
cmp
dec
imul
mov
push
push
sbb
aad
xor
jecxz
push
loope
sbb
xchg
xchg
mov
jecxz
jo
sbb
xchg
xchg
lods
lret
stos
sarl
paddd
sbb
ja
mov
push
ficomps
sub
xlat
sbb
and
scas
mov
pop
je
scas
insb
mov
dec
jne
dec
dec
adc
xchg
pop
inc
test
lret
mov
and
loope
inc
sti
mov
mov
ficoms
enter
sar
adc
lret
lcall
sbbl
cmp
jmp
mov
mov
xchg
stos
outsb
insl
or
lret
adc
jae
rcrl
add
add
popf
push
mov
in
shrl
nop
cld
gs
shll
xor
add
ret
jnp
sbb
andl
stc
push
xchg
in
add
cld
iret
pop
push
cmp
daa
sub
int3
xchg
xor
sahf
xlat
and
loop
adcl
jo
add
cmpsl
and
dec
rcrl
movl
or
push
lods
and
mov
pusha
push
or
sub
jecxz
shrb
ja
idivl
mov
xchg
inc
jnp
mov
add
pop
jg,pn
pusha
mov
pop
arpl
pop
pop
sbb
test
pushf
cmpsl
mov
hlt
xor
dec
lret
push
outsb
je
imul
ds
andb
inc
shlb
adc
push
cmp
scas
addr16
movd
aad
add
pop
adc
jg
lds
xchg
je
enter
lea
in
sbb
cmp
nop
pusha
push
arpl
lock
std
test
xchg
adc
pop
addr16
xor
inc
xchg
in
mov
sti
jns
pop
sbb
pop
inc
jb
and
ss
dec
xchg
sbb
ljmp
jo
jo
dec
xchg
mov
jns
pop
rcr
sbb
sbb
push
jnp
movsl
stos
vmwrite
sti
pop
xor
push
cli
stos
jo
out
and
and
outsb
xchg
jnp
jne
jl
dec
hlt
loop
sti
stos
pusha
pop
jp
or
out
pop
daa
lcall
mov
outsl
lahf
sub
xchg
push
inc
mov
pop
pop
mov
jp
or
out
add
shlb
xor
cmc
lret
fucom
aam
push
out
test
daa
loop
cmp
jae
insb
cmp
adc
test
insl
call
fstl
xor
sub
mov
test
scas
fildll
or
lret
inc
xchg
repz
mov
addl
stos
sub
fucomip
jmp
pop
cmc
push
mov
insl
mov
cwtl
and
jne
sbb
mov
nop
out
loope
scas
lcall
mov
cmp
roll
insb
sub
cmc
fistl
in
out
push
or
icebp
or
das
jle
and
add
mov
inc
repz
xchg
repnz
mov
test
sbb
stos
pop
hlt
adc
sbb
es
mov
jecxz
jge
aaa
sub
rcrb
sub
cmpsl
or
imul
test
pop
xchg
scas
inc
jnp
sbb
stc
jno
jl
mov
inc
ss
hlt
mov
and
lock
popf
cmpsl
push
outsl
mov
sub
lds
or
cmpsb
jl
addr16
icebp
mov
sub
xor
add
xor
jge
pop
popa
out
xchg
mov
jbe,pn
mov
sti
rcrb
adcl
sbb
push
popf
pop
sbb
lods
mov
and
xor
adc
fcompl
ror
mov
fcoml
fdiv
mov
mov
shll
sub
cmp
repnz
add
mov
sub
cli
xor
dec
xchg
int
lock
ljmp
xchg
lret
movsl
aas
cmp
jno
xchg
add
jmp
jno
or
mov
cmpl
xchg
pop
repz
fnstsw
cmpsb
mov
sahf
cwtl
fwait
cmpsb
sbb
out
xchg
jo
ja
push
xchg
arpl
pop
pop
into
lret
and
fistps
sti
lret
sub
stc
mov
inc
lret
jnp
or
lret
push
cli
push
push
xlat
jl
mov
xlat
test
xor
mov
add
ljmp
xchg
pop
cli
in
adc
pop
ds
cmp
jl
sbb
inc
in
shrl
mov
mov
pop
pop
mov
loope
pushf
add
or
lods
push
xor
mov
das
fistpl
xchg
mov
dec
mov
lret
dec
add
out
adc
and
push
stos
sbb
push
fists
daa
lock
orps
mov
das
xlat
aaa
jle
mov
in
adc
test
dec
mov
add
push
xchg
lea
je
mov
pop
xchg
out
dec
xchg
mov
popf
mov
dec
jg
sahf
movsl
ss
stos
inc
cmp
xchg
pop
dec
pop
push
dec
in
fildl
mov
cmpsb
and
jbe
iret
repnz
mov
lret
push
hlt
daa
inc
loope
repz
hlt
sbb
es
xor
push
jle
aam
sub
call
mov
add
xchg
lods
popf
and
sub
mov
sub
lret
or
test
adc
adc
xchg
xchg
sbb
stc
xor
mov
rcr
hlt
or
into
ja
jle
in
pop
jnp
pop
aad
mov
enter
pop
pushw
mov
test
movsl
jb
jae
inc
xchg
jle
and
cmp
ljmp
xchg
loop
shrl
sbb
dec
es
sbbb
xor
dec
cltd
sti
scas
and
scas
adc
loopne
and
cmp
adc
insl
add
dec
iret
dec
or
or
mov
das
or
mov
sbb
mov
sbb
sub
pusha
sahf
fcmovnbe
bound
adcl
data16
inc
jge
inc
test
adcl
sti
mov
in
or
mov
adcl
dec
mov
jge
iret
pop
push
push
pop
outsl
in
sarb
xchg
push
pop
sub
stos
xchg
or
lcall
test
iret
outsb
xor
jbe
test
test
mov
pop
das
cs
jg
xor
and
add
cmp
inc
in
fwait
lea
pop
pushf
xor
fwait
movsl
cmpsb
inc
and
jns
fcomps
cltd
stos
les
enter
add
jns
loopne
pop
jge
jecxz
orb
fmull
fdivl
inc
fs
je
xor
sti
dec
stos
mov
cwtl
xor
or
sbb
jne
mov
cwtl
mov
mov
je
fwait
sub
shll
push
pop
cmp
xchg
push
cmp
iret
sbb
clc
jb
or
xchg
xchg
inc
js
sbb
jns
in
test
xor
mov
and
call
mov
std
inc
or
fnstcw
ja
aas
stc
popf
out
add
idivl
sbb
mov
pushf
test
xchg
push
mov
mov
add
shll
test
pop
jg
dec
mov
sti
je
stos
xchg
ja
xchg
mov
vorpd
cwtl
cmpsl
mov
push
push
test
jl
mov
cmp
push
ja
sub
das
mov
movsb
pop
sarl
and
mov
cmovae
fwait
inc
cmp
cmp
es
clc
call
scas
inc
add
cmpsb
jmp
sar
sahf
adc
vpmulhw
stc
je
sbb
idivb
jne
push
outsl
loopne
push
push
popf
pusha
lock
les
iret
mov
mov
es
push
out
sbb
sar
stc
pop
dec
notl
push
and
lods
or
mov
jmp
nop
mov
jb
shll
or
adc
fs
mov
mov
xlat
mov
xor
sti
mov
or
inc
add
xor
loopne
pop
cmpsb
push
push
xchg
jl
cmp
loopne
repnz
rol
jae
mov
cs
stos
out
sub
mov
push
lods
dec
out
push
push
mov
dec
jp
idiv
pop
mov
lahf
loopne
lods
and
inc
or
add
inc
lahf
jg
shlb
jecxz
sub
mov
fdivr
pushf
testl
xchg
and
test
or
lret
sbb
pop
sti
push
jae
fwait
and
aam
mov
push
int3
dec
sahf
test
movsl
push
add
std
inc
loope
sti
or
jg
mov
loop
adc
jb
mov
arpl
scas
adc
pop
int3
bnd
pop
call
and
cmc
test
xchg
popa
out
inc
sahf
es
icebp
mov
andl
loope
in
sub
ja
loop
mov
sbb
insl
sub
imul
and
loopne
movsb
fcoms
pop
pop
or
pop
sbb
enter
push
mov
adc
sahf
jecxz
jbe
xchg
lret
rcl
test
adc
les
insl
leave
fs
push
push
xchg
in
repz
movsl
cs
jo
add
pop
and
adc
mov
adc
push
test
scas
and
in
push
lea
inc
int3
test
in
maskmovq
mull
jmp
ja
inc
shll
insl
mov
pop
xor
sub
mov
pop
jg
scas
into
and
adc
push
test
icebp
cmp
pop
mov
imul
loop
and
push
add
jg
dec
lea
push
mov
gs
push
fs
or
les
jge
addr16
cmp
and
hlt
loope
loop
out
aam
add
mov
imul
imul
sbb
cmc
adc
dec
push
jo
loop
lret
inc
lds
mov
ljmp
nop
mov
jg
aam
jae
rcrl
push
xor
pop
xchg
pop
push
loop
sbb
sbb
clc
cli
lods
rcll
mov
mov
icebp
jbe
adc
mov
test
out
stc
mov
out
stos
cmp
xor
inc
loopne
mov
cs
add
and
add
mov
mov
cmp
cld
pushw
mov
or
mov
jl
je
xor
sti
dec
adc
jmp
sbbl
mov
fwait
insb
cmc
imul
pop
or
jmp
adc
fwait
jg
adc
into
mov
sbb
adc
in
movl
sarl
jp
jecxz
ret
loope
cmp
jg
xchg
cmp
out
xlat
inc
adc
mov
inc
fs
and
dec
cmp
lock
mov
jns
cmpsb
adc
jo
mov
cmpl
dec
rol
jae
sub
std
cmp
pop
sbb
xor
push
cmc
in
cmc
push
es
xchg
xchg
pop
shrb
add
fmuls
and
mov
xchg
movsb
or
icebp
scas
or
fldl
stos
test
mov
cmp
sbb
mov
dec
inc
pop
daa
mov
push
xchg
hlt
xor
in
int
xor
lcall
mov
js
mov
neg
call
clc
aaa
loopne
lret
fs
mov
movsb
cmp
lret
mov
cld
sub
mov
mov
sbb
movb
pop
jmp
outsl
and
ror
or
lea
rclw
out
rcrb
scas
mov
out
int
xor
stos
outsl
mov
dec
in
aas
fnstenv
dec
das
aam
sbb
int
add
fcom
xchg
js
xchg
dec
jg
cld
dec
sti
faddl
lret
xor
jo
lods
aad
and
or
sub
ja
jno
xchg
scas
or
bound
jmp
aam
add
xchg
fcmovnu
aas
pusha
lret
in
es
cmp
rcl
mov
rorb
fcmovnb
push
and
add
xor
sub
mov
ss
mov
jno
daa
xor
push
dec
mov
unpckhps
mov
das
or
xchg
mov
push
call
inc
test
les
sti
into
push
inc
xchg
mov
outsb
testl
pop
leave
and
mov
dec
fwait
sahf
stc
cmp
in
stc
mov
xchg
or
pushf
daa
sbb
mov
scas
lcall
test
hlt
lods
jne
cmp
jnp
inc
cltd
mov
lds
ret
out
push
popf
dec
jp
mov
mov
dec
cmp
stos
iret
sub
mov
sbb
sub
mov
mov
mov
clc
out
inc
pop
mov
lods
push
mov
in
sub
dec
imul
push
sbb
push
sub
jmp
fcmovne
mov
mov
pop
mov
inc
sub
sti
mov
dec
test
push
and
mov
dec
xor
pusha
sti
popa
loopne
sbb
jle
dec
jg
loope
sbb
int3
sbb
imul
inc
scas
rcrb
pop
stc
pushf
iret
addr16
push
lock
lods
mov
jecxz
mov
js
mov
pop
dec
push
sbb
int3
test
xor
jge
cmpsb
push
test
sarl
mov
je
pop
mov
ja
jp
xchg
pop
jnp
or
idivb
inc
and
or
inc
mov
and
movsb
sbb
test
mov
cli
stc
mov
cmpsb
dec
das
mov
filds
inc
arpl
mov
adc
les
pop
push
clc
push
les
repnz
push
mov
test
sub
inc
xchg
lcall
daa
ljmp
fld
rcr
pop
inc
sub
mov
mov
sti
add
mov
mov
mov
nop
xor
pusha
adc
sbb
jo
adc
push
scas
add
nop
pop
xchg
add
xor
insb
jbe
ds
movsb
shrb
in
pushf
adc
scas
cmp
jo
lds
cmpsb
sub
mov
sbb
xchg
test
fmull
scas
sti
jne
movsb
fsubp
or
cmp
and
sar
pop
mov
lahf
mov
add
mov
sbb
fmuls
jb
cmp
sub
jae
add
lods
jecxz
enter
sbb
imul
push
cltd
cwtl
add
rolb
inc
pop
add
xor
and
mov
mov
std
insb
fwait
mov
pop
jo
repz
test
outsb
addr16
add
adc
sub
adc
loope
sbb
bswap
int
mov
sub
dec
mov
pushf
jmp
xor
out
or
dec
pop
mov
sub
pop
dec
test
std
je
cmpsl
insb
stc
and
dec
jno
push
repnz
mov
dec
xor
or
push
sub
push
and
cmpsb
sub
out
das
imul
push
lret
fs
pusha
xor
fwait
rcl
iret
xchg
fadds
movsl
sub
in
outsl
jl
dec
iret
cmc
ret
mov
xlat
inc
adc
pop
cmpsb
into
add
shl
popf
dec
in
push
loop
cld
pop
adc
cwtl
cmp
inc
mov
incl
push
mov
cmp
push
mov
cli
mov
xor
sbb
jle
pop
ficomps
push
test
subb
lea
loop
cmp
adc
push
push
int3
dec
cs
sbb
aad
sub
cmp
notb
je
shrl
es
imull
jge
ja
xchg
or
int
push
js
pop
cmp
in
clc
mov
mov
push
xor
or
cmpl
pop
and
js
cmpb
xorb
mov
in
mov
push
adc
mov
jl
dec
into
fisttpll
xchg
jae
mov
insb
dec
push
and
ret
addr16
clc
xor
leave
mov
fisttpll
push
je
cmp
lods
xor
cmp
cwtl
aaa
xor
dec
push
sahf
mov
scas
push
stc
dec
stos
mov
fldt
dec
jl
sahf
mov
dec
lds
xchg
mov
inc
jecxz
adc
outsb
int
cli
pop
mov
and
mov
mov
scas
push
lcall
mov
loopne
jle
call
ret
pop
cmp
jmp
jmp
jmp
pop
filds
push
in
sub
mov
add
fchs
mov
arpl
push
sar
sahf
mov
and
sbb
in
mov
mov
dec
pop
sub
push
or
test
mov
ror
jnp
or
notl
push
mov
pop
jmp
dec
lret
adc
sub
inc
mov
sub
pop
xor
pop
notb
jle
jne
dec
adc
fdivr
mov
inc
pop
loop
iret
sbb
sub
fdivs
mov
dec
fisubrs
inc
test
pop
lock
mov
std
mov
push
inc
add
add
leave
daa
jo
dec
mov
sbb
pop
fdivl
incl
rcrl
je
jmp
cmc
xorb
lds
pop
nop
mov
cmc
xchg
fwait
outsl
sbb
inc
or
adc
mov
int
scas
pop
mov
sar
pop
stc
ret
cmp
push
or
push
and
push
xlat
insb
or
stos
lock
js
rorb
add
push
mov
cmp
and
inc
pusha
jmp
dec
pop
push
mov
lea
push
xchg
and
lret
lret
sti
enter
nop
or
pop
aas
push
imul
lods
cmp
js
push
rcll
mov
inc
fdivs
sub
sbb
jmp
rorl
daa
arpl
jo
push
aad
outsb
push
popf
mov
or
jecxz
inc
dec
mov
or
jb
ret
movd
daa
ja
push
push
mov
sbb
aad
mov
stos
pop
jge
pop
and
dec
jbe
cmpsb
cltd
jmp
push
adc
jbe
add
xchg
sub
imul
sbb
sbb
aad
pop
nop
inc
mov
inc
mov
lds
pop
mov
aaa
mov
out
repz
jmp
mov
enter
fwait
imul
stos
sub
and
out
cmp
push
fadd
out
les
imul
xor
es
ret
in
stos
jnp
or
dec
ret
mov
rorl
fld1
sub
ror
push
mov
mov
pop
sbb
call
loopne
mov
and
leave
adc
add
idiv
or
fnstsw
pushf
or
dec
out
jl
xchg
mov
and
aam
sub
cmp
aas
cmp
sub
adc
jmp
mov
lcall
loope,pt
div
hlt
cmp
scas
mov
add
popa
arpl
cmp
add
cmp
xlat
push
insb
jmp
adc
add
int
mov
or
cmpsl
cmpsl
pop
shr
dec
cmpsb
xchg
mov
sbb
movsl
popa
call
cld
lds
rcr
rcl
pop
mov
jno
jecxz
jbe
dec
mov
or
jb
jp
pop
aam
mov
push
xchg
jg
mov
pop
test
lcall
js
enter
cmc
and
cld
jecxz
aas
loopne
xor
nop
and
leave
cmp
and
in
mov
adc
sub
adc
jae
inc
xchg
popf
jp
xor
mov
pop
pop
leave
test
inc
es
sub
push
mov
in
repz
arpl
and
out
into
jno
js
jge
mov
loop
inc
mov
ljmp
int
insl
lods
cmpb
jp
xchg
repnz
push
les
sbb
xchg
xor
or
sti
fbstp
fcmove
push
andb
adc
cli
nop
stos
fistpl
and
es
mov
out
xor
lods
repnz
pop
stos
sub
js
mov
pop
push
test
sahf
mov
fstpt
les
outsl
sub
fldenv
sbb
mov
call
xchg
jae
mov
dec
jb
and
mov
stos
jl
xchg
sub
adc
testb
out
jg
xlat
push
xor
pop
sub
loop
add
mov
push
dec
ficoms
daa
insb
insb
repnz
push
pop
addr16
in
negl
cmp
scas
adc
aad
int3
jp
push
cmp
inc
push
sub
adc
out
pop
mov
mov
rcl
gs
ja
dec
push
negb
jmp
add
js
pop
inc
mov
sti
or
int
aam
jmp
xlat
cmp
xchg
sub
inc
pusha
or
cmp
outsl
js
cld
jl
add
popa
mov
xchg
push
stos
inc
push
cmc
out
sarb
or
ja
fsubl
jmp
das
add
xor
std
mov
sbb
insb
jmp
mov
adc
pusha
pop
sti
add
sub
ljmp
data16
inc
loope
adc
adc
mov
and
cmp
into
and
mov
add
decb
rcll
mov
insl
push
imul
cwtl
and
push
ljmp
xchg
insb
call
jo
outsb
mov
inc
xchg
call
pop
dec
pop
pop
add
in
fcmove
push
dec
inc
cmp
xchg
adc
mov
add
mov
add
movsl
add
dec
and
sub
sbb
xor
stc
jo
leave
dec
inc
mov
inc
push
daa
in
imul
and
cmp
or
dec
cmp
inc
iret
mov
xchg
jmp
add
pop
mov
mov
jle
insb
mov
outsl
shr
sbb
mov
sti
in
lret
xchg
leave
mov
inc
cmpsl
cmc
or
xchg
mov
lret
and
rcll
sub
or
adc
dec
push
xor
xlat
das
pushf
adcl
mov
arpl
ret
pop
or
fisubl
stos
xor
leave
and
out
inc
insl
xor
mov
jmp
add
xchg
dec
push
add
dec
or
sbb
dec
push
push
out
insl
xlat
add
mov
xor
xchg
mov
cmp
dec
shrb
cmp
inc
mov
mov
sub
dec
mov
push
mov
xchg
cmp
mov
sbb
xchg
adc
cli
lcall
dec
mov
test
hlt
and
inc
jmp
orl
jae
cmpb
lcall
ss
jne
ficompl
js
push
lahf
aad
jae
leave
pop
dec
push
lods
rcr
push
fisttpll
test
adc
movsb
mov
orl
cmp
push
and
xchg
stos
cmp
mov
dec
ret
mov
in
dec
inc
das
mov
inc
dec
ret
bound
sbb
fistl
into
nop
sub
fisubl
mov
inc
sub
jns
or
in
mov
les
and
push
sbbl
add
int3
dec
add
sbb
pop
out
ja
mov
sbb
cmp
std
fildll
in
inc
je
cmp
cli
rcr
xchg
jl
push
xchg
int
jl
outsl
push
jg
pusha
cmp
pusha
out
mov
movsl
mov
iret
leave
lret
mov
scas
dec
pusha
pop
mov
push
imul
xor
jns
inc
pop
sub
dec
inc
cld
dec
ljmp
sbb
nop
repz
sbb
nop
mov
into
jb
pushf
cli
mov
lret
das
mov
cwtl
mov
fdivrp
into
or
data16
aam
jns
or
data16
push
adc
cltd
imul
mov
popf
imul
and
mov
push
mov
adc
outsb
mov
mov
mov
pop
inc
jbe
mov
jnp
out
sahf
bound
xor
xor
imul
sti
out
jmp
sbb
jnp
dec
mov
loopne
fwait
adcb
int
sub
into
aam
insl
std
pop
or
inc
dec
and
in
adc
sbb
sbb
fwait
sub
cwtl
adc
in
or
lret
mov
mov
jnp
inc
out
fidivl
push
and
xor
xchg
push
das
jae
andl
mov
xchg
mov
in
loop
ljmp
pop
lahf
sub
sub
out
and
adc
sub
sbb
mov
repz
jle
mov
lock
mov
jmp
idivb
xor
cmp
outsb
mov
push
lods
outsl
push
inc
fwait
push
mov
arpl
pop
cmp
cltd
inc
sub
and
lods
js
outsb
xchg
cmp
and
out
data16
jle
gs
inc
cmp
push
or
clc
jecxz
sbb
or
mov
mov
pop
addr16
imul
add
ret
jle
rcl
rorb
push
adc
nop
lods
test
sbb
push
repz
cmp
adc
cld
repz
imull
xchg
inc
sub
in
aas
and
lret
lahf
aam
jno
and
cmp
les
cmpsb
jg
sub
das
je
imul
cmp
cmp
imul
dec
fiaddl
jle
mov
push
inc
mov
je
aam
mov
adc
lds
adc
or
icebp
pusha
pop
pop
adc
jbe
lret
push
mov
aaa
flds
and
jge
or
xchg
jae
cmp
repnz
jo
stc
pop
mov
dec
jecxz
xor
outsb
xor
push
and
push
inc
jg
in
imul
mov
jge
test
test
js
and
mov
in
sti
sub
iret
aam
xchg
fbstp
lods
mov
pop
jge
call
pop
sub
sub
loope
sbb
insl
jl
sahf
js
push
xchg
sub
sbb
cwtl
jne
mov
inc
pop
aaa
pop
aas
roll
jle
fsts
jae
sbb
mov
mov
loop
lcall
push
lea
faddl
insl
ds
mov
mov
mov
rorb
inc
mov
popf
fldl
gs
insb
dec
test
scas
outsb
xchg
fsubrp
jecxz
inc
xchg
adc
push
xchg
push
sbb
jnp
fsincos
int
jle
xchg
cmp
cmc
jp
arpl
ret
sbb
imul
testl
pop
inc
inc
pop
imul
mov
outsl
mov
out
sub
sbb
inc
xor
ja
pop
pop
rol
lcall
ljmp
fmul
dec
lock
divb
dec
xorl
outsl
icebp
cmp
dec
dec
fimuls
bound
pop
mov
jecxz
mov
fcoml
jae
aam
fistps
jb
push
xchg
sahf
roll
and
cltd
cmpsb
sub
xor
sbbl
mov
mov
std
jbe,pn
push
sub
push
cs
push
inc
es
add
test
mov
stc
test
fmuls
pop
out
lea
shlb
outsb
shl
ljmp
ret
mov
in
fcmovb
push
shll
outsb
pop
and
clc
push
jge
mov
adc
repz
rcll
xor
insl
mov
leave
ljmp
test
push
push
pop
call
jo
cmc
and
add
clc
mov
sti
jge
sbb
mov
lahf
popa
cmp
pushf
ss
clc
xchg
pop
add
js
inc
test
sub
xor
lock
int
repz
bound
ficoml
clc
fiaddl
mov
mov
repz
and
fwait
mov
loope
test
add
inc
xchg
mov
mov
push
sbb
data16
or
insb
inc
pop
mov
and
pop
fimuls
mov
stc
rcll
adc
jle
fstp
mov
nop
stc
mov
jns
add
jae
imul
mov
jo
adc
aaa
mov
leave
jp
shlb
cltd
test
mov
adc
cmp
pop
sbbl
sbb
sub
enter
adc
jns
aas
xor
out
jb
xor
xchg
xor
jmp
push
addb
mul
dec
sbb
dec
in
icebp
jnp,pn
inc
shll
and
lcall
cmp
xchg
aaa
pop
out
inc
sub
lods
or
xor
ror
push
adc
xor
mov
jg
push
in
mov
mov
shl
xchg
jmp
dec
cmpsb
cli
xor
daa
xorb
xchg
hlt
loop
mov
pop
inc
inc
dec
xchg
ffreep
push
jge
adc
fstps
push
add
mov
adc
lahf
loopne
mov
inc
mov
es
loopne
aas
jmp
jns
iret
rcrl
xchg
fwait
imul
mov
xchg
in
loope
jo
xchg
inc
sub
outsb
pop
xchg
mov
inc
mov
lcall
mov
sbb
fisubrs
pop
test
movsl
dec
repnz
or
add
inc
call
es
lcall
jmp
int
std
pop
xchg
mov
fadds
push
mov
mov
pop
inc
xchg
push
xchg
jb
jle
xchg
push
adc
mov
dec
popa
aas
or
jle
orl
hlt
or
rcll
inc
inc
mov
pop
arpl
inc
ljmp
dec
clc
out
push
mov
push
xchg
je
xchg
fnstenv
and
xchg
mov
adc
inc
xor
std
xchg
xor
adc
in
mov
push
enter
jae
push
adc
mov
cwtl
mov
push
lds
fs
call
mov
leave
sub
jnp
sub
or
pop
adc
pop
pop
mov
or
mov
decl
jecxz
decb
out
scas
adc
lcall
cs
imul
fildll
jg
and
inc
adcb
test
outsb
enter
or
cmp
mov
xchg
mov
jne
or
mov
aam
repnz
pop
push
inc
sbbb
mov
inc
cwtl
int
iret
leave
push
push
enter
in
int3
into
xor
cmpsb
test
adc
inc
cli
mov
fdiv
or
mov
pop
loopne
xor
jmp
and
sahf
sbb
rcll
out
cmpsb
push
dec
sbb
sbb
push
pop
ret
int3
leave
gs
and
adc
lret
inc
inc
xchg
shlb
fimull
lods
adc
mov
lret
adc
hlt
sbb
mov
nop
int
jbe
adc
test
push
push
shrl
or
fdivs
lods
insl
push
mov
add
fidivl
aam
mov
add
sets
adc
cltd
lcall
sbb
fisubl
movsb
lret
fwait
les
adc
adc
mov
xchg
enter
test
leave
xchg
test
pop
inc
adc
outsb
mov
jno
ja
mov
dec
mov
xchg
fadds
adc
mov
stos
std
adc
loop
scas
jle
xchg
xor
mov
repz
inc
popa
pop
pushf
lret
xor
std
cmp
imul
stc
dec
out
lcall
in
fwait
push
cmp
xchg
mov
dec
cli
in
ljmp
push
test
push
push
pop
pop
dec
out
faddp
pop
scas
xor
aaa
push
and
in
inc
sahf
aad
repnz
cmp
je
or
sbb
mov
push
push
into
dec
sub
idiv
jecxz
in
xchg
addr16
mov
xor
mov
cmp
mov
int3
addl
aaa
mov
mov
mov
pop
or
mov
stos
out
jae
cmpsl
mov
orb
das
lahf
adc
mov
ret
lret
popf
fsts
fdivr
icebp
ret
jp
es
hlt
insb
mov
int
sub
adc
leave
sub
loopne
fs
mov
mov
in
ror
test
ljmp
jno
push
iret
rcr
loope,pn
push
and
dec
xchg
pop
adc
lret
dec
mov
sub
xor
sub
cmpsb
xchg
jp
aaa
dec
pushl
jg
mov
addr16
js
int
lea
add
sub
push
mov
jns
ror
mov
push
jp
or
out
popf
dec
daa
insb
in
lods
arpl
loop
cmp
loopne
test
cmp
aad
mov
mov
fs
dec
jecxz
scas
inc
mov
add
test
add
aaa
sub
mov
or
cli
ljmp
fisubs
hlt
in
mov
dec
add
jo
sahf
test
loop
pop
add
xor
outsl
sub
dec
shll
push
jl
dec
aas
aad
jge
push
fs
popf
jno
and
pop
mov
outsb
dec
add
xor
jecxz
mov
cmp
popf
pop
push
and
iret
jle
add
dec
repz
or
adc
cmp
fbstp
xlat
stos
pop
out
popf
xor
adc
push
in
cmc
sub
das
jle
imul
adc
push
add
xor
fdivl
aaa
push
mov
or
scas
and
mov
sbb
push
roll
inc
aad
xchg
out
or
xor
jecxz
mov
xchg
es
mov
push
dec
fstps
add
stc
lods
mov
insb
cmp
push
mov
in
adc
push
lock
stc
out
push
mov
push
mov
push
fildl
xor
and
fiadds
jecxz
push
jge
or
or
push
pop
loope
pop
in
addb
fsts
sub
gs
pushf
cmc
iret
push
out
test
pavgb
lea
movsl
pushf
cli
testb
lcall
mov
lret
push
in
dec
ja
pop
jo
xchg
adc
inc
sub
mov
sub
or
xchg
mov
mov
arpl
xor
les
dec
in
mov
dec
sub
sub
or
cmp
lret
test
daa
inc
mov
xor
xchg
test
jae
xchg
jmp
lock
push
cli
test
mov
cmp
out
out
insl
mov
push
pop
nop
int3
gs
out
add
lret
add
jne
adc
and
in
loopne
inc
add
jnp
and
pusha
adc
jmp
xor
lcall
mov
out
cmc
lahf
mov
inc
shrl
cmp
sbb
jae
lods
pushf
in
mov
mov
fcompl
push
movsb
aad
xchg
sti
jne
cli
rorl
in
pop
idivb
ja
pop
pop
jle
add
sub
hlt
sbb
dec
sbb
pop
sub
lahf
sti
bswap
push
daa
mov
dec
pop
or
out
mov
add
es
call
stc
push
icebp
lea
enter
jle
sub
pop
repz
fcompl
icebp
sahf
inc
dec
jle
and
xchg
jnp
jmp
and
out
sub
lret
add
fisttpl
nop
and
sub
fmulp
adc
movsl
fisubrs
daa
inc
mov
insb
leave
fdivr
add
in
pop
push
movsl
pushf
call
push
aas
lret
stc
push
dec
push
push
sbb
jbe
push
std
fadds
rcrl
dec
push
xor
les
xlat
pop
mov
and
ljmp
mov
pushf
cs
pushf
adc
in
aam
lea
test
pop
ret
jge
shll
adc
xor
xchg
icebp
cmp
test
inc
lock
push
jge
icebp
or
jp
dec
xor
and
jnp
inc
and
bound
mov
rolb
mov
ja
adc
lods
pop
add
js
js
std
loopne
insl
fidivl
mov
imulb
aas
xor
jg
mov
movsb
fwait
movl
cmc
xchg
addb
and
mov
push
mov
and
hlt
push
xchg
jg
rolb
in
fcomps
or
jnp
jp
mov
jo
aad
scas
and
fsts
sub
int
dec
shl
jns
in
cwtl
pop
scas
push
lahf
jecxz
addl
in
loopne
leave
ss
jl
cli
sub
aam
movsl
pop
into
jge
cltd
push
pop
xchg
icebp
addl
pop
dec
shll
aam
jl
add
movsb
test
lcall
pop
pop
insb
pop
int
add
fdivrs
xchg
or
add
sbb
mov
dec
ficompl
mov
scas
lods
icebp
pop
mov
push
push
push
mov
inc
fs
mov
cmp
inc
jp
add
inc
dec
mov
jo
inc
add
xchg
cli
ss
sub
push
and
xor
xchg
push
leave
outsb
xor
nop
jne
cmpsb
subb
jbe
fiaddl
inc
out
adc
add
addr16
inc
inc
mov
mov
cltd
iret
dec
inc
jmp
mov
cmc
pop
sub
pop
rolb
insb
cmp
cld
xchg
enter
adc
cmp
imul
inc
es
cmp
movsb
xchg
mov
test
movb
jg
in
mov
pop
repnz
fnsave
mov
divb
sbb
sbb
add
mov
add
and
repz
fstpt
cmp
bound
sub
fnsave
push
ror
clc
pop
imulb
test
in
mov
push
mov
inc
inc
fcompl
aam
push
adc
jg
pop
jbe
add
add
and
pop
int
jo
mov
or
push
arpl
jo
mov
in
lock
jle
cmp
mov
or
js
ret
jnp
cmp
stc
outsl
jmp
xchg
cltd
sbb
in
shll
leave
call
mov
test
in
ret
cmpsb
test
xor
add
sbb
mov
andl
movsl
ret
mov
ficompl
ret
sub
cmp
lds
dec
lcall
xor
and
push
clc
cmc
outsl
cmpsb
ss
mov
repz
push
push
test
mov
push
and
cmp
unpckhps
pop
das
add
psllq
pop
leave
push
mov
push
xlat
pusha
jns
icebp
ret
jle
ss
scas
adc
repz
js
in
ret
xchg
popf
sbb
stos
xchg
jp
shrl
ret
lcall
sub
jo
inc
add
pop
sarl
dec
call
mov
inc
aaa
xchg
leave
in
sub
fistps
sbb
gs
clc
out
mov
sub
push
mov
gs
mov
dec
jnp
inc
aaa
out
hlt
addr16
mov
push
sbb
js
pop
adc
sarl
daa
fnstenv
mov
inc
jae
mov
cli
jg
es
vcvtdq2pd
inc
lods
ret
rcll
loope
mov
jle
add
push
xchg
hlt
stos
ja
sbb
sahf
push
sahf
mov
inc
push
popa
mov
mov
ret
das
push
decl
inc
sti
scas
cmp
ja
and
ds
sub
test
sub
aas
shr
jle
iret
lcall
ficompl
int
dec
mov
icebp
xlat
and
lret
lea
and
push
sub
and
shrb
cld
in
cmp
pop
cmpsl
rcl
imul
dec
push
add
jo
mov
push
inc
jmp
aam
add
leave
rcrb
stos
cmp
jg
mov
stos
xchg
test
or
add
iret
xchg
jle
push
and
mov
push
cmp
sbb
pop
aam
jg
pop
jp,pn
adc
icebp
xor
lret
inc
cmp
subb
dec
and
testl
pop
dec
movsb
mov
or
ljmp
push
repz
jns
in
inc
or
divl
mov
sbb
repnz
ljmp
or
out
add
sbb
dec
mov
or
or
cmp
inc
and
lcall
fildll
and
ret
push
push
gs
scas
stos
imul
mov
ljmp
stos
enter
test
and
adc
mov
mov
movsl
repz
push
lea
push
insb
rolb
xchg
out
test
int3
push
jb
in
scas
jb
fistps
dec
xchg
pop
pushf
jns
lock
leave
jmp
jmp
lock
pushf
and
xor
stc
mov
cltd
push
mov
and
mov
ss
inc
adcl
pop
mov
or
mov
loop
test
in
fiadds
cmp
jp
ret
mov
out
cmc
pop
mov
dec
out
cmp
xchg
movsb
inc
pop
adc
jno
out
mov
jge
xor
mov
push
xchg
cmp
adc
shlb
sub
cmp
sub
in
sub
add
jae
imul
mov
jo
push
enter
inc
push
hlt
push
fdivs
ss
shlb
mov
fisttpll
stos
das
pop
cmc
mov
xchg
jge
or
jne
mov
dec
ja
push
cmpsl
mov
add
jmp
imul
pusha
add
roll
push
bound
mov
lds
addr16
out
fcoml
popl
pusha
hlt
lcall
mov
int3
xchg
sahf
or
push
jno
cs
mov
sub
insb
jnp
jbe
movsb
or
sbb
stos
sbb
add
cltd
adcb
ficomps
std
mov
push
push
movsl
push
push
pop
jae
mul
pop
mov
ret
inc
test
mov
js
xchg
inc
adc
icebp
pushf
cmp
mov
adc
mov
adc
dec
sbb
jle
jmp
lret
data16
mov
pop
mov
stc
mov
push
shl
lds
mov
stc
bound
add
mov
data16
andb
sarl
xchg
orl
push
sti
pop
sahf
xor
mov
jmp
mov
dec
mov
or
clc
mov
inc
jno
or
dec
add
adc
adc
dec
stos
aas
out
outsb
fsubp
sbb
cli
sub
insb
popa
inc
cmp
add
mov
fwait
data16
cwtl
push
jmp
lea
cltd
or
xor
push
inc
aaa
sbbl
test
hlt
stos
pop
leave
mov
lret
jge
or
arpl
aad
testl
push
lds
and
mov
out
adc
dec
mov
mov
loopne
and
in
cmp
cmp
movsl
stc
leave
and
xor
sub
addr16
sarb
pop
mov
into
mov
icebp
sti
sbb
mov
fs
fidivrl
cmpsl
std
pusha
mov
bound
dec
in
sar
out
mov
into
jb
fsubrl
fs
mov
aaa
inc
mov
and
or
xor
in
sub
adc
std
pop
cli
mov
mov
int3
and
aaa
out
mov
adc
movsl
ret
pop
scas
clc
jmp
pushf
jo
je
xchg
add
pop
cwtl
out
fs
es
rcrb
loop
inc
jbe
popa
call
loopne
pop
std
pop
jecxz
std
lahf
sahf
les
jle
add
rcrb
mov
jge
jno
shr
and
mov
sub
loope
jns
mov
fmull
mov
push
movsl
xchg
test
mov
shrd
mov
cwtl
fiaddl
jmp
pop
sbb
out
negb
mov
mov
xchg
int
rclb
divl
jl
adc
lods
mov
adc
sbb
fucomip
int3
nop
dec
adc
testb
or
mov
enter
dec
add
imul
mov
fcmove
jno
das
out
jle
cltd
dec
clc
pop
ficomps
add
das
aam
les
lret
mov
nop
pop
fildll
leave
arpl
rcrl
insb
rclb
shld
xchg
mov
mov
push
push
xchg
lods
and
pop
jle
sti
inc
jge
mov
xchg
rol
outsl
fimull
dec
cmp
ret
aas
shl
cmp
push
lahf
push
pop
mov
adc
pop
mov
fists
mov
daa
mov
clc
cmpsl
add
divl
aas
pop
fdivrs
aaa
loop
cmp
mov
adc
add
lock
outsl
mov
pop
fcomp
cmp
imul
aam
xorb
dec
into
xor
add
dec
data16
mov
lcall
cs
jp
xchg
xor
scas
xchg
flds
add
inc
xor
out
ret
addr16
sti
aas
mov
pushf
and
mov
imul
inc
xor
loopne
xor
les
test
addr16
rol
scas
rcrb
xchg
or
into
icebp
in
sbb
out
fs
xchg
or
or
lock
add
cli
nop
dec
sti
lcall
sahf
pushf
jae
push
xchg
aaa
fildl
xchg
dec
sbb
cmpsb
jb
lods
pusha
js
adc
add
pop
ret
and
lcall
fnsave
pop
subb
dec
xor
jmp
and
insl
in
adc
push
call
adc
cld
push
cmp
sbbb
test
clc
out
addr16
repnz
jo
shrb
fs
mov
dec
dec
sbb
jmp
sub
mov
fcmovnb
cs
call
mov
das
aam
jge
mov
mov
popa
or
sub
movsl
xchg
fldl
ljmp
adc
mov
pop
mov
xchg
cmpsl
mov
jp,pt
mov
cmpsb
fs
frstor
fwait
lcall
sub
pop
pop
ljmp
dec
push
xor
add
movsb
cmp
jp
dec
lods
scas
and
faddp
popa
sbb
sub
lahf
push
lock
push
push
insl
jo
mov
hlt
or
sub
leave
mov
lock
mov
lods
mov
js
and
mov
jns
repz
cmc
adc
mov
and
push
sub
test
or
add
or
adc
mov
int3
lods
pop
rcrl
inc
sbb
std
loop
push
add
jnp
mov
dec
inc
adc
outsl
inc
push
in
or
pop
xchg
and
or
add
jnp
cmp
outsl
add
fstpt
push
sbb
push
int
xchg
into
add
and
fldcw
arpl
in
roll
add
jmp
movsb
pop
aaa
rcrb
jecxz
mov
lcall
pushf
test
jp
les
dec
mov
cmp
mov
sahf
pop
pop
scas
in
fs
rol
das
bound
add
adc
jo
xchg
pop
loop
outsl
popf
xchg
lahf
nop
pop
pushf
adc
data16
or
xor
loopne
ljmp
addr16
enter
sbb
cmpsb
lret
test
in
and
stc
je
sbb
jl
jge
or
or
jge
repz
test
mov
out
pop
sub
inc
ja
cmp
imul
adc
jecxz
add
and
mov
adc
ja
inc
pop
cmpsb
xchg
pop
dec
out
icebp
mov
test
mov
addb
jp
inc
lds
cmc
mov
mov
mov
cmpsb
mov
hlt
sbb
jp
adc
xor
fnstenv
les
pop
loop
mov
imul
cmp
ret
rorb
inc
out
lock
bound
xchg
add
movsl
cmp
inc
clc
stos
pop
pshufw
outsb
mov
cmc
ja
pusha
inc
enter
lahf
stc
nop
adc
jge
push
xchg
cmp
mov
and
in
enter
jmp
mov
sbb
mov
std
xlat
and
lcall
lods
mov
pushf
test
icebp
jne
mov
add
push
push
mov
clc
xchg
es
push
push
enter
mov
in
cli
out
or
push
adc
ficoml
jne
xchg
out
push
adc
inc
or
cli
adc
and
jl
xor
cwtl
adc
in
inc
cmp
jno
inc
push
out
xor
mov
mov
mov
xor
xor
pop
imul
mov
or
inc
into
das
data16
mov
aas
shl
stos
je
nop
xchg
jne
int3
dec
adc
push
outsl
aaa
mov
add
sarb
dec
adc
xor
xchg
pop
add
shlb
mov
movsl
or
dec
ds
sbb
cli
fdiv
sbbl
sub
and
rcll
lods
jecxz
lods
fcoms
lea
mov
xor
mov
inc
cld
imull
jecxz
dec
jnp
add
movsb
dec
dec
out
sub
mov
pop
inc
jmp
movsb
daa
dec
pop
movsl
mov
addr16
mov
fists
mov
pop
pop
daa
call
jle
add
sbb
bound
outsl
int
mov
or
gs
test
sbb
je
test
pop
sti
lods
or
je
jns
add
jge
imull
adc
ja
cmp
loope
fisubrs
add
fs
stc
cmc
or
jbe
or
add
in
sub
adc
mov
sbb
push
xor
xor
cmp
les
adc
lahf
neg
cmp
in
mov
push
bound
push
add
rorb
pop
adc
cmp
jl
xchg
dec
sbb
jbe
cmc
in
lds
int
cltd
aas
lds
mov
cmp
ja
sbb
fsubr
ret
mov
and
imul
jns
push
cmp
outsl
adc
ljmp
xchg
out
xchg
imul
subl
pop
mov
push
out
inc
inc
cld
or
dec
adc
or
xchg
sbbb
fsts
outsl
fucompp
mov
cmp
cmp
in
pushf
dec
orb
cli
xchg
ljmp
out
jle
adc
pop
divl
clc
cmp
test
cmp
sub
repz
adc
outsb
and
pop
int
sbb
test
nop
mov
sbb
dec
mov
mov
mov
outsl
inc
xchg
xor
mov
lret
xchg
mov
fadds
mov
sub
les
lcall
ss
movsl
adcl
mov
rcl
rorl
leave
dec
ret
sbb
sti
lock
aas
in
pop
jmp
out
lods
aaa
arpl
lret
pop
jp
inc
test
mov
jnp
mov
push
mov
jb
lds
pop
jge
outsb
xchg
lock
imul
test
int3
testb
lds
rorl
add
lret
sbb
pop
or
mov
inc
mov
xor
inc
rcrl
mov
scas
dec
push
shr
lods
push
sbb
push
frstor
gs
mov
inc
pusha
xchg
ficompl
jae
dec
cmp
push
pop
sub
popf
jmp
dec
shl
stc
jp
lret
dec
out
or
repz
cld
call
ja
seta
sbb
jbe
call
dec
sub
int3
inc
jmp
out
filds
push
sbbb
pop
sarl
rcrb
pop
xlat
inc
iret
and
cmp
sbb
ljmp
gs
das
xchg
test
pop
mov
and
stc
test
push
vmovsd
cli
or
mov
loop
sarb
in
mov
idivl
adc
push
mov
mov
les
adc
insl
xchg
cmpsl
push
call
adc
sbb
lret
test
stos
ds
sbb
adc
sbb
jmp
xchg
pop
sub
rorl
push
push
add
mov
mov
jns
mov
in
stos
sub
mov
sub
cmpsl
ret
sub
sub
rolb
jno
in
cmpl
ficomps
mov
cmpsb
jg
adcl
jl
sub
fwait
addr16
pop
shl
fmuls
inc
mov
ja
in
dec
pop
pop
pop
inc
inc
add
sbb
aas
jno
xor
out
mov
repnz
add
xchg
in
xchg
inc
fildll
and
dec
fisttps
xor
lcall
and
daa
push
mov
mov
bound
insl
add
rclb
sub
dec
aad
jecxz
lcall
lcall
cmp
xchg
xchg
mov
cmp
push
and
cmp
loope
ja
jp
pop
jecxz
add
mov
pminub
inc
xchg
xchg
xchg
imul
mov
dec
mov
std
jmp
and
jecxz
imul
out
shl
in
es
subl
xor
leave
orl
adc
mov
js
clc
fs
sub
movsl
adc
sti
rcll
sarb
lret
sbb
ret
divl
xchg
aam
rcrl
or
add
xchg
jbe
ret
jmp
ds
loopne
andb
stos
push
push
mov
fucomi
sbbb
std
cmp
sub
cmp
jb
loopne
push
adc
adc
push
f2xm1
stos
aad
je
arpl
pop
dec
xchg
out
in
icebp
xor
sahf
adc
leave
outsb
scas
loope
dec
fbstp
adc
xor
loop
fadd
arpl
xor
pop
ss
iret
xchg
pop
and
sbb
cltd
mov
jo
daa
pusha
and
and
sbbb
pop
jg
cmp
out
sbb
in
rclb
jae
xchg
cmp
nop
mov
inc
adc
je
push
xchg
pop
jo
lods
xor
addl
aaa
std
mov
mov
push
popl
imul
pop
je
mov
imul
add
data16
and
jb
scas
out
dec
decb
cmpb
jecxz
loope
inc
or
into
mov
mov
not
stos
mov
movsb
sub
test
xor
inc
mov
jmp
xor
jns
add
mov
sbb
cmp
loope
cltd
xor
dec
out
inc
js
and
mov
lret
pop
pop
pop
fldenv
mov
xchg
and
cmc
push
enter
sub
inc
add
xor
sahf
in
out
fcoms
lds
sbb
out
nop
adc
jg
lods
sahf
sub
das
cmp
cmp
out
das
jae
mov
jnp
mov
arpl
inc
cmpsb
repz
xchg
pusha
add
aas
mov
sub
ficoml
inc
in
cld
cltd
lods
aad
pushf
enter
cmp
inc
push
sti
ret
push
pop
or
cltd
sub
add
cwtl
lahf
in
push
and
cwtl
xchg
jns
fwait
test
movsb
jno
adc
jle
aad
mov
in
jg
ja
mov
lods
sub
sarb
cmp
or
fucompp
inc
pop
repz
hlt
pop
mov
cmpsl
sub
push
jp
cmp
xorb
jo
pop
pusha
dec
testb
in
stos
push
bound
add
jecxz
repnz
mov
mov
pusha
pushf
cmp
shll
imul
shl
pusha
stos
jo
push
fistpl
imul
enter
cltd
test
ja
adcl
clc
push
nop
adc
pusha
call
mov
aaa
leave
rcrb
lods
inc
push
fiadds
xlat
sub
or
ja
cmp
aad
mov
sub
push
lret
pop
push
and
lods
incb
movb
stc
into
add
jnp
movsb
pop
sti
dec
jle
inc
imul
or
dec
dec
fs
scas
cmpb
mov
insb
adc
iret
sub
bound
js
mulb
sub
mov
orb
aaa
xchg
icebp
xchg
pop
test
cmpsb
lock
push
jo
test
mov
daa
sbb
xchg
mov
cmp
scas
sbb
inc
ret
insb
adc
mov
cs
neg
test
rorl
mov
daa
js
pusha
dec
dec
inc
sahf
daa
mov
fucomip
cmp
inc
mov
push
mov
scas
cmpsl
stos
pop
mov
in
jmp
shlb
dec
mov
das
aas
dec
outsl
hlt
mov
mov
test
aas
sbb
call
pop
or
iret
adc
ja
in
int
pop
out
insb
out
aam
out
loope
idivb
add
push
repnz
mov
or
clc
sub
mov
sub
xor
outsl
lret
dec
push
mov
into
in
stos
sbb
ja
jp
push
mov
jne
testb
xchg
inc
stos
or
cmp
or
cmp
in
dec
stos
lret
roll
mov
and
sti
cld
cmpsb
xor
mov
jae
push
push
or
cmp
jl
clc
sbb
add
insb
ret
fstps
add
dec
sub
cwtl
and
and
int
outsb
xchg
mov
push
and
pop
clc
leave
icebp
mov
cmp
push
push
jmp
test
xchg
pushf
jmp
dec
mov
pop
mov
adc
cmp
add
ljmp
add
jbe
movsl
test
mov
repz
fistps
mov
mov
push
pushl
sbb
pop
xor
nop
mov
leave
mov
imul
mov
jae
int
sub
sti
adc
add
pop
xchg
jmp
daa
lret
pop
inc
or
sti
pop
sbb
or
push
outsl
and
decb
pop
call
cmp
popf
push
ret
push
fsubrs
inc
mov
aaa
rolb
adcl
sub
imul
push
cwtl
mov
xor
dec
sub
nop
fisubrl
gs
xchg
das
push
aas
inc
add
jne
bswap
in
sub
xchg
dec
movsl
push
jns
stc
imul
sbb
mov
lret
dec
or
adc
sbb
add
enter
cltd
xor
xlat
shrl
int
pusha
inc
movsl
push
mov
push
loopne
fiadds
push
jb
out
jnp
aas
jbe
sub
jno
lret
jbe
lods
pop
xchg
ret
sbb
dec
mov
cmp
ret
sub
popl
mov
or
add
jecxz
cmp
push
push
mov
xchg
les
imul
rcll
lcall
mov
jbe
jmp
call
dec
mov
jge
ja
gs
shll
dec
sub
mov
mov
shl
mov
sub
mov
sbb
adc
and
hlt
fimull
jno
test
stos
or
lahf
mov
inc
cmpl
add
push
lods
test
jle
add
jle
add
or
pop
xchg
cmp
cmc
push
cmp
aam
movb
fiadds
hlt
xorb
mov
xchg
and
fdivr
enter
out
pop
sbb
xor
aaa
pop
clc
popf
jge
mov
adc
aas
sbb
mov
jp
push
jno
mov
xchg
in
outsl
mov
cmpsl
ret
jno
aaa
cmp
xchg
lahf
xchg
sbb
das
leave
aam
dec
and
sbb
in
popf
jae
es
pop
xor
sub
sub
sbb
icebp
mov
enter
imul
xchg
mov
fmul
cmp
aas
outsb
loope
push
push
mov
xor
adc
aas
lahf
fildll
cs
sub
lcall
std
and
popf
or
mulb
sub
pop
add
fisubrl
and
jp
aam
arpl
ret
jg
sahf
mov
mov
popa
movsl
imul
or
test
ja
push
pop
into
repnz
adc
pop
movsb
dec
fsubrs
jbe
orl
rorb
jo
push
inc
cltd
push
dec
jp
shll
mov
xchg
ret
clc
add
fs
repnz
mov
popf
bnd
js
nop
decl
add
jmp
test
rclb
inc
js
fxch
imul
nop
sub
xor
sarb
ficomps
adc
cmp
fldl2t
negb
dec
in
cmc
imul
mov
mov
pusha
sub
dec
pop
cmpsb
xor
jbe
outsb
mov
popf
push
or
into
push
scas
add
cmc
aas
dec
and
mov
pop
cwtl
int3
cmp
inc
mov
std
mov
mov
cwtl
xchg
idiv
add
scas
mov
inc
adc
push
repnz
out
sbb
lahf
mov
adc
adc
fwait
mov
lret
mov
pop
ja
pop
fsubrl
push
rclb
inc
mov
pop
dec
pushf
mov
sub
scas
mov
pop
dec
out
rorl
cmp
jns
adc
inc
lret
jae
pop
shr
pop
mov
add
add
adc
xchg
dec
pop
fildl
outsb
and
mov
mov
jb
cltd
sahf
fs
in
xchg
sarb
lock
lret
sti
rclb
fdivl
lods
mul
call
mov
popa
das
bt
jb
mov
inc
fdivrp
es
rcrb
aas
xchg
push
cmpsl
pop
sub
movsl
xlat
push
jnp
incl
xor
pop
or
mov
js
sbb
sub
mov
add
ljmp
shll
ja
sbbl
vpcmpgtw
adc
jno
sarb
add
pushl
mov
std
mov
jg
int
push
lret
fwait
cmpsl
lret
int
and
mov
and
bnd
out
mov
cld
mov
add
add
mov
sbbb
out
push
lret
cmp
lods
cmc
test
jb
sahf
xchg
icebp
test
jae
mov
test
mov
cltd
add
xor
sbb
push
sbb
adc
pop
mov
xchg
call
les
mov
add
pop
inc
jnp
arpl
dec
stos
popf
mov
movsb
lea
sub
or
enter
int3
push
cli
xchg
adcl
stc
push
jno
dec
pop
or
dec
jp
out
dec
xor
mov
lods
fcmovnbe
jge
scas
cmp
stos
inc
stos
jb
in
push
pop
roll
inc
mov
mov
test
sti
mov
out
iret
repnz
out
inc
cmc
push
jne
add
shl
sub
pop
jg
int
pop
clc
ffreep
adc
jnp
cli
stc
jo
leave
lock
cltd
scas
sub
fdivrs
unpckhps
mov
nop
out
arpl
test
ljmp
add
dec
ds
ljmp
dec
and
in
decl
pop
push
dec
loopne
jp
mov
fstp
mov
push
pop
cltd
int
cld
jns
mov
add
in
filds
sti
pop
xchg
or
mov
jns
das
mov
test
pop
jbe
pushf
addr16
mulb
stc
outsb
arpl
test
jge
jae
xchg
cltd
mov
jmp
mov
jb
cwtl
mov
sub
xor
dec
and
push
push
adc
jl
ret
mov
lret
xchg
stc
inc
mov
shrl
hlt
pop
jp
mov
fistl
pop
mov
ds
inc
add
xchg
andnps
in
rsqrtps
sbb
fdivrs
mov
pop
xchg
inc
mov
xchg
test
out
pop
lds
ljmp
cltd
aaa
hlt
cmc
mov
mov
lret
mov
ret
mov
leave
push
aad
mov
mov
xorb
std
push
mov
xchg
inc
imul
pop
imul
jmp
mov
ja
sub
xchg
cmp
pop
xchg
insl
aam
add
rclb
sete
mov
inc
mov
jae
sub
mov
and
push
sub
popa
cmp
add
movsb
test
mov
js
inc
cs
js
mov
mov
adc
ds
in
call
lods
bswap
fistpl
imul
popf
inc
arpl
inc
shll
pop
cli
and
pop
push
mov
xor
mov
das
mov
dec
cmp
addl
jge
data16
ss
dec
mov
fs
shrb
push
xlat
jo
loopne
mov
jmp
jl
jns
enter
les
push
pop
adc
shll
push
mov
xchg
fsubs
adc
js
lret
sub
ja
pop
mov
or
fs
inc
fadd
sti
mov
outsb
pop
xchg
ljmp
ret
push
cmpl
inc
ficoml
jmp
int3
and
xchg
add
arpl
in
insb
out
jae
jnp
or
jmp
cltd
add
cmpsl
mov
or
xchg
bound
mov
pusha
sbb
divb
stos
push
out
mov
push
fs
dec
fcmovnu
les
push
push
lods
dec
fdivp
fsub
xor
mov
aad
dec
out
xor
mov
in
loop
mov
cld
push
jbe
or
pop
jecxz
pop
pop
mov
movsl
cltd
xlat
adc
jae
out
lods
mov
mov
repz
and
arpl
xchg
mov
scas
dec
mov
test
mov
inc
ss
jo
sbb
movsl
insb
push
shlb
and
in
push
mov
push
and
push
sbb
inc
notl
mov
outsb
cltd
mov
clc
hlt
fisubs
cwtl
push
enter
pop
js
outsl
jg
mov
jl
sbb
jge
xchg
or
jmp
ljmp
inc
push
icebp
xlat
popf
dec
sahf
inc
dec
into
cmpsl
jecxz
addr16
cli
xchg
daa
push
out
dec
push
enter
fldl
loop
dec
mov
iret
push
lods
push
arpl
shl
push
sti
push
pop
jmp
and
adc
cwtl
cmp
push
push
jnp
push
jmp
cmp
je
bsr
popf
jne
mov
jnp
xor
fnstenv
ja
adc
das
movb
xor
cmpsl
add
jg
into
movsl
enter
inc
jns
jae
insl
mov
xchg
dec
divl
repz
xchg
mov
or
enter
fsts
jecxz
jbe
sbb
cmpsb
sbb
xchg
hlt
cmp
leave
mov
lock
shll
mov
pop
jle
adc
movsl
push
std
add
mov
ss
scas
inc
test
insb
notb
jo
jns
cmpsl
adc
scas
aam
jg
xchg
fs
push
insb
dec
addl
lahf
pop
push
pusha
inc
clc
mov
adc
out
mov
in
push
mov
paddd
andb
inc
out
cltd
movsb
fisttps
stos
add
fldt
repnz
mov
ds
sbb
mov
cmp
in
dec
or
cs
push
pop
sub
push
aaa
push
sub
cmp
mov
mov
sbb
rcr
lods
cwtl
ljmp
popf
pop
sub
cmpb
add
pop
cmp
pop
daa
aas
stos
inc
cmpsl
stc
stc
mov
lds
daa
mov
xor
or
andl
ljmp
jne
sahf
sarl
cmp
xchg
leave
mov
jecxz
loop
addb
pusha
dec
outsl
out
jmp
decb
repnz
jno
pusha
movsl
xor
pop
dec
cwtl
ljmp
pop
dec
cmp
aas
sbb
cs
faddl
in
cmpsl
mov
enter
xor
out
imul
leave
push
mov
scas
int
scas
test
movsl
mov
xchg
popf
jae
into
popl
arpl
pop
rcl
and
inc
push
lock
jb
dec
icebp
mov
daa
mov
xlat
mov
roll
inc
push
jne
cmp
addr16
or
add
test
and
cmpsb
lret
xchg
mov
add
fwait
mov
shl
inc
xor
jno
sub
fildl
ja
lds
arpl
out
inc
stos
xchg
pushf
lret
inc
mov
mov
or
xorl
fnstenv
jl
adc
das
jle
add
pop
xor
pop
pop
push
negl
sub
xchg
mov
mov
xor
mov
push
add
cmc
pop
or
pop
mov
xchg
bound
nop
xchg
dec
xchg
push
test
pop
add
addr16
je
ljmp
mov
lock
lds
cmpsl
xor
xchg
pop
xor
outsb
jns
inc
shll
test
xchg
mov
callw
lcall
stc
out
jg
clc
mov
sbb
mov
and
mov
mov
imul
loope
pop
cltd
sti
and
mov
enter
push
stos
xlat
inc
repnz
cs
jo
inc
outsb
inc
cmp
insb
mov
pop
insl
insl
test
pop
mov
pop
cmp
and
or
addr16
scas
sub
mov
dec
cmp
pop
idivb
loop
pusha
ret
fadd
push
mov
or
mov
les
xor
rcll
jge
outsb
cmpb
je
test
rolb
ficoml
and
data16
or
das
loopne
pop
out
mov
cmpsl
sahf
lea
insb
xchg
mov
add
xchg
inc
jne
pop
push
roll
cmp
test
or
dec
inc
xor
add
sub
aaa
mov
pusha
jnp
jnp
mov
xchg
rorb
push
mov
lret
mov
cmc
loope
cmp
jmp
pop
or
mov
xlat
mov
jg
jmp
fwait
pop
mov
sub
add
push
pop
sbb
mov
mov
arpl
pusha
addr16
sbb
pop
pop
pop
mov
mov
fcomp
loopne
xchg
xor
sbb
cmpb
fnstcw
push
aam
cltd
mov
pop
xor
rorb
or
jl
inc
popf
movsl
xor
rcll
mov
fcomp
sub
sbb
enter
jmp
mov
or
mov
jmp
xor
jge
xchg
sbb
pop
sub
je
call
daa
daa
leave
nop
mov
fdivr
dec
push
jge
jg
cli
push
mov
mov
clc
in
repz
out
jno
scas
fildll
sbb
lret
mov
xchg
mov
pop
mov
fbstp
add
lds
sbb
add
or
mov
jnp
or
test
push
inc
sahf
fisttps
dec
test
pop
xchg
adcl
and
inc
ret
xor
and
pop
cltd
and
inc
clc
lret
and
xchg
out
popa
int
cmpsl
xchg
jb
push
dec
fdiv
dec
loop
mov
push
jne
jne
jle
in
fdivp
pop
jmp
popa
fsts
cmp
sub
pop
xchg
bound
inc
xchg
aad
fst
sub
in
stc
int
shll
int
jle
testl
dec
lea
pop
lret
loopne
sbb
or
fcomps
fwait
cmp
inc
xor
cmpsb
pop
iret
mov
sbb
lods
or
daa
mov
mov
adc
mov
mov
push
dec
lods
and
out
mov
or
dec
enter
jmp
inc
mulb
cmpsb
mov
sub
xchg
adc
out
mov
fcompl
xchg
movsb
loope
icebp
xorb
dec
les
in
mov
or
add
pop
mov
xor
dec
and
mov
or
xchg
in
cmp
sub
xchg
imul
aas
and
std
mov
mov
cltd
push
jnp
jmp
leave
popa
pop
mov
adc
insl
dec
shrl
pusha
aaa
fsubs
mov
push
pop
jge
jns
add
daa
xchg
inc
lock
rcrl
aas
push
arpl
cmpsb
xchg
mov
nop
enter
jp
sbb
pusha
cmpsl
sbbl
and
xor
mov
add
and
xchg
fmul
lahf
jno
scas
test
sub
in
scas
insl
leave
insb
push
lret
push
adc
xchg
cmp
push
jmp
or
aad
adc
push
inc
dec
jae
fwait
sbb
int3
test
jmp
repz
push
subl
pop
lods
popf
and
sbbb
jmp
scas
sub
mov
std
pop
sbb
jge
fimull
cli
adc
push
pop
in
jo
test
cwtl
sub
sbb
sbb
fadds
push
jbe
add
fcos
inc
xor
sbb
dec
nop
dec
pushf
repnz
fst
jno
pop
dec
into
add
push
aaa
fildl
dec
jmp
js
jecxz
cmpsl
xchg
push
xor
rolb
xor
es
cmp
sbb
les
sbbl
scas
adc
mov
hlt
and
jg
xchg
mov
mov
testl
inc
inc
imul
cmp
push
xchg
xor
jl
sub
add
movsb
std
jge
adc
pop
xchg
fs
popa
sbb
mov
add
lods
iret
sbb
jecxz
adc
pop
stc
inc
ret
dec
repz
sbb
lds
in
test
mov
and
cmp
rclb
repnz
dec
lahf
mov
mov
jecxz
cwtl
xchg
mov
shrb
cmpsb
or
adc
lods
pop
dec
cmp
divl
add
fs
les
aad
scas
mov
popf
fcmove
dec
mov
cld
clc
mov
xor
mov
dec
sbb
lds
xor
popa
sub
jp
adc
dec
pushf
vmread
mov
lcall
imulb
add
icebp
or
or
hlt
lret
lods
mov
xorb
in
xchg
xor
cmp
push
push
fwait
mov
mov
mov
xor
loopne
ret
pop
add
dec
push
push
mov
jns
sbb
mov
cmp
sbb
dec
gs
xor
lods
xchg
cmp
pop
cltd
inc
mov
bnd
cmp
mov
pop
scas
fcmove
and
mov
cmp
arpl
inc
mov
inc
push
cltd
sub
ljmp
pop
fs
push
cmp
popa
xchg
mov
scas
xchg
fwait
clc
xchg
fstp
test
mov
nop
das
xchg
xchg
popa
sbb
dec
jae
jl
adcb
dec
jo
lods
add
pop
divb
stos
es
jns
int3
sub
xchg
jno
repnz
or
fsubrs
clc
cmp
clc
inc
mov
add
adc
fwait
xlat
push
icebp
imul
adc
mov
call
stos
mov
fs
dec
mov
test
mov
into
and
jo
mul
nop
orl
out
dec
pushl
jmp
push
cmp
aas
inc
sarl
aad
gs
xor
push
add
xor
cmp
lahf
push
aam
in
aaa
mov
cltd
dec
in
pop
stos
and
fcoms
inc
loop
cmpsl
movsb
inc
iret
test
fwait
int
push
xchg
dec
sub
inc
pusha
or
into
mov
nop
mov
mov
sbb
or
shll
or
fiadds
or
inc
daa
sbb
inc
out
arpl
mov
xchg
xchg
call
mov
addr16
int3
sbb
adc
das
call
sbb
jg
push
in
mov
cmp
sbb
hlt
testl
cmp
add
je
mov
test
push
pushl
mov
mov
daa
and
and
and
jns
shll
movsb
and
test
fstpt
dec
js
mov
add
push
sbb
insl
xor
sub
mov
xor
mov
decb
popa
lock
mov
mov
xchg
in
inc
cmpps
or
imul
pop
pusha
inc
ja
cmpsb
in
jb
pop
xor
pusha
lods
add
ret
imul
mov
xchg
in
jo
and
pop
cmc
pop
test
or
fimull
push
popa
mov
lret
add
pop
ss
stc
adc
in
stos
adc
and
lds
sub
lods
sbb
inc
ja
inc
jecxz
test
pop
dec
lret
sub
loope
ror
dec
std
push
test
pop
cmp
xchg
dec
inc
pop
imul
repnz
add
push
sbb
lret
or
xchg
insb
adc
xchg
aad
fidivl
in
mov
adc
int3
jcxz
and
pop
xor
mov
das
es
push
dec
fsubs
push
cmp
mov
cmp
jnp
hlt
add
jae
repz
xchg
mul
sub
call
in
xchg
sub
cmp
mov
cmp
xlat
jns
int3
sub
lods
call
xor
int3
call
sbb
add
fidivl
es
adc
inc
or
sbb
dec
pop
shl
dec
std
mov
stc
out
sbb
int
inc
push
cld
xchg
add
int
imull
pop
icebp
adc
mov
jmp
insb
xor
jge
enter
stos
cmpsl
jae
daa
dec
adc
jg
inc
xor
inc
sub
ss
cwtl
icebp
xor
fadds
sbb
mov
push
fs
pusha
xlat
lcall
movsl
cli
addl
shrl
stos
call
mov
icebp
cmpsl
scas
aad
jo
ret
je
testl
out
sbb
jb
pop
push
sbb
cmpsb
xchg
popa
jae
lods
adc
test
or
add
adc
mov
aas
pop
push
push
sub
dec
mov
dec
int
jg
icebp
and
mulb
cmp
add
int
pop
out
mov
lahf
shll
addr16
mov
and
sbb
xlat
sub
jmp
sub
dec
sbb
xchg
ret
mov
mov
pxor
mov
push
pop
adc
adc
fldt
adc
fwait
xor
push
loope
sahf
or
or
out
outsl
and
jno
daa
in
cmp
mov
mov
shll
ja,pt
es
and
ss
cmpsb
imul
add
pop
test
rclb
or
jl
push
inc
and
addr16
pop
data16
test
stos
ret
repnz
inc
fnstcw
shll
sub
xor
pop
and
or
push
imul
mov
add
mov
push
mov
sub
push
jmp
xlat
shrl
in
xor
pop
inc
movsb
repnz
lea
icebp
lahf
and
mov
mov
ss
andl
add
cmp
cltd
adc
jbe
mov
sub
mov
xor
daa
ret
jo
fwait
and
mov
lret
out
or
adc
adc
mov
add
adc
les
and
inc
mov
mov
das
es
sbb
rcr
imul
jne
mov
mov
aas
pop
mov
add
jge
mov
cmpb
and
jne
adc
enter
mov
and
stc
cmp
adc
stos
aas
push
scas
xor
rol
push
inc
push
in
mov
inc
cwtl
mov
mov
dec
lcall
ret
pop
dec
in
jp
cmpsb
and
mov
es
imul
enter
mov
roll
xlat
fistpl
lcall
lahf
popf
pop
mov
jo
mov
cmp
outsl
xor
out
ret
ja
popl
sbb
push
sbb
enter
push
pop
decb
bound
pop
nop
adc
outsb
sarb
mov
cmp
rorb
cmp
pop
cmp
shr
sti
popf
adc
sbb
enter
clc
dec
repnz
fcompl
ror
xor
jo
std
ljmp
jnp
jge
jmp
push
mov
xlat
sbb
sub
fidivrs
mov
cs
sub
xor
push
inc
xchg
das
push
push
jns
test
push
lcall
aam
bound
push
pop
lods
fcmovnb
sbb
fcmovbe
cwtl
dec
jp
lock
rorb
adc
movsb
pop
scas
add
jb
dec
fistpll
mov
xor
mov
fcoms
iret
adc
mov
pop
mov
push
dec
mov
xor
imul
dec
lahf
imul
mov
sbb
jns
imulb
sub
mov
andl
mov
mov
aas
stos
fbstp
por
and
push
mulb
cmp
xor
inc
pusha
jb
jecxz
leave
pop
mov
test
idivl
scas
mov
shl
xchg
shlb
pop
std
jmp
movsb
subb
outsb
out
sbb
inc
inc
and
shrb
pop
clc
sub
xchg
sub
adc
scas
and
lahf
sub
shlb
xchg
or
pusha
lea
mov
and
adc
mov
out
sbb
repz
xor
dec
movsb
iret
cmp
or
dec
aas
push
mov
add
xor
xchg
push
add
push
cmpl
push
cmp
mov
and
sarl
and
sbb
pop
push
je
xor
scas
mov
iret
push
inc
jp
mov
test
lods
inc
inc
fdivs
stos
fs
xor
in
xor
dec
and
sub
test
rolb
test
inc
xor
add
je
inc
mov
xor
scas
adc
ret
lret
out
iret
dec
cli
out
pusha
pop
sbb
inc
cmp
fdivr
add
jno
cmp
mov
jecxz
xchg
mov
out
jns
inc
fcomp
dec
repz
fcoml
pop
into
mov
addr16
push
xor
and
push
sub
pmuludq
push
sbb
fmuls
lock
mov
add
out
daa
sarb
cmp
movsbl
cmp
dec
xor
jecxz
mov
ret
cmp
jb
movsl
push
jecxz
sbb
adc
scas
outsb
dec
pop
pop
lods
cmc
push
insb
pop
stos
int3
fs
test
addl
and
mov
or
inc
mov
pop
jl
xor
xchg
add
int3
mov
xor
es
in
jg
pushf
inc
push
popf
and
cmp
xlat
jmp
popf
pop
pop
pop
sbb
out
jns
and
pop
into
mov
lahf
movsl
movsb
data16
dec
roll
into
mull
cli
mov
mov
push
xchg
dec
cmpsl
out
xor
cwtl
aas
cvttps2pi
pop
test
mov
pop
shl
inc
sub
mov
sahf
lret
test
std
jbe
daa
pop
pop
jl
push
into
dec
daa
cmpsb
cli
add
int
jb
adcl
push
cs
or
divb
cld
out
pop
jg
jge
and
fs
cmp
es
stos
pushf
mov
sbb
mov
sbb
out
mov
in
mov
lea
loop
loop
negl
sbb
jp
and
sbb
or
addr16
iret
mov
repz
hlt
and
outsb
es
ficompl
fists
dec
sbb
fs
xor
or
test
and
mov
push
repnz
int
cs
mov
jo
enter
ds
xor
test
mov
pop
lods
inc
les
pusha
or
fsubrs
shr
rcll
and
push
pop
insl
or
mov
and
jle
xchg
aaa
cmc
imul
test
jp
lret
xchg
mov
lea
inc
mov
add
mov
push
push
orb
out
push
sub
stos
addr16
mov
jp
pop
or
xor
pop
fcompl
imull
mov
sbb
fidivl
shll
insb
inc
xchg
mov
stc
mov
jns
div
dec
sbb
push
lret
bound
lahf
and
aam
shlb
jmp
sub
adc
mov
adc
mov
outsl
xchg
mov
lds
setle
and
lcall
mov
inc
pop
lahf
stc
mov
mov
xchg
fnstsw
jmp
pusha
jmp
stos
call
out
rorb
ds
je
mov
nop
push
insb
push
mov
jae
movb
jbe
pop
in
pop
jbe
cli
das
scas
aaa
sbb
push
sbb
add
adcb
mov
sub
mov
daa
or
pop
and
xor
or
sbb
cmpsb
fs
sarl
pop
mov
ss
pop
popl
jge
sbb
loope
sbb
and
pusha
out
sub
jnp
or
push
cmp
fs
mov
out
cmc
outsb
cwtl
push
inc
jns
dec
rcr
outsb
ficompl
sub
movsl
mov
mov
mov
cmc
dec
inc
out
mov
arpl
repz
cmp
xchg
stos
pushf
dec
adc
scas
or
lret
pop
xchg
xchg
inc
in
repnz
dec
insl
loopne
xor
sbb
xor
orl
test
testb
movsl
pop
cld
xchg
mov
and
push
dec
lea
pop
ret
outsl
push
inc
sub
ds
jno
jne
test
mov
shll
xchg
and
imul
and
ret
call
test
fsubr
push
cmp
cli
mov
rorl
aam
pop
add
mov
mov
mov
repnz
inc
lahf
inc
cmp
leave
mov
cmp
pop
jp
dec
ja
stos
add
dec
adc
js
sub
pop
mov
xchg
lret
ror
fcom
inc
push
cmpsb
stos
push
outsb
cs
stos
std
jl
cli
xchg
adc
mov
dec
stos
mov
in
lds
xor
push
mov
inc
jb
sbb
pop
ss
jle
push
arpl
pop
ret
xor
pusha
insb
inc
imul
daa
shlb
ja
into
cwtl
add
xchg
int3
push
sub
mul
stc
out
dec
or
push
and
mov
mov
imul
std
pop
xor
cmp
fs
outsl
iret
out
mov
add
ret
mov
sbb
cmc
mov
inc
nop
fmulp
xchg
pop
pop
pop
loop
push
outsb
loop
add
mov
rcrl
cmpsl
pop
scas
sub
stos
mov
addr16
int
mov
out
pop
cmp
mov
fcomi
mov
push
inc
sub
jmp
mov
je
ja
je
sbb
cltd
popf
rcrl
icebp
in
lods
mov
movsb
cld
jb
cmp
mov
mov
xchg
inc
pop
cli
pop
adc
out
mov
scas
scas
stos
push
scas
pop
mov
movsl
push
cmp
adc
mov
loop
sti
jecxz
outsb
dec
dec
ljmp
mov
push
push
pop
mov
inc
and
pop
mov
push
jb
xchg
cmpl
inc
ja
in
call
call
dec
sahf
dec
aam
mov
cmp
in
xchg
push
add
jno
or
and
fcmovnu
or
lods
push
jp
fiadds
scas
das
xor
stc
mov
inc
hlt
adc
fimull
cs
jnp
mov
inc
mull
jo
dec
ss
xor
push
ret
adc
dec
and
into
mov
sub
inc
xbegin
dec
jmp
psrlw
dec
imul
daa
vpmaxub
adc
or
repz
popf
in
or
in
mov
stos
sub
push
aaa
adc
jae
pop
inc
cld
pusha
inc
iret
mov
or
and
pop
cmp
or
das
jl
mov
insb
add
mov
push
sbb
mov
add
imul
adc
aaa
pushf
loopne
and
mov
sub
mov
push
mov
cmp
xor
nop
sahf
inc
and
fstpl
imulb
fmuls
std
xorl
lcall
pop
pop
fnstenv
lods
popa
pop
notl
xor
fldt
cli
movsb
adc
scas
xchg
pop
xor
mov
xchg
push
js
cs
sub
jl
cmp
xor
bound
fs
popa
pop
daa
loope
adc
les
mov
imul
mov
pop
fs
nop
xor
xchg
dec
mov
mov
sahf
add
xor
scas
addr16
xor
lods
js,pt
mov
sbb
xor
filds
imul
jae
or
lret
cmpsb
insb
test
jae
jo
or
pop
fs
sub
xor
xchg
pop
dec
ss
add
adc
fdivs
sbb
mov
and
mov
in
sub
inc
outsb
std
push
sub
clc
out
cmpsl
sub
sub
mov
mov
pop
icebp
rorl
stc
popa
xorl
lea
fidivrl
add
push
sub
mov
push
xchg
push
dec
mov
push
cmp
shlb
xchg
loop
imul
jmp
xor
add
sub
addr16
mov
sub
cmp
repnz
lret
mov
mov
or
ss
out
adc
scas
sbb
popf
dec
insl
dec
xchg
pop
outsb
push
push
mov
scas
fisttpl
cmpsb
mov
jo
mov
sbbb
iret
popa
cmp
jecxz
xorl
sub
repz
pop
mov
out
repz
decb
stos
popf
mov
divl
mov
arpl
sub
push
movsl
xchg
jns
enter
das
xchg
inc
xchg
xchg
ljmp
sbb
addr16
cmp
iret
jnp
je
or
xchg
mov
fbld
pop
outsb
push
shll
mov
and
xor
xchg
divb
mov
mov
inc
push
subl
nop
add
sbb
rcrb
and
sbb
std
sub
pop
mov
dec
pop
or
rclb
mov
scas
add
pop
std
jp
sbb
loopne
mov
lret
push
call
xchg
test
iret
lods
push
in
out
shlb
dec
mov
adc
fldenv
lds
xorb
xor
cld
mov
lods
fmuls
call
cmp
inc
add
mov
leave
adc
outsl
pop
push
or
add
clc
test
sub
xchg
pop
mov
adc
xor
scas
mov
ljmp
daa
xor
push
mov
push
ficoml
lods
daa
sti
adc
push
lret
fstpl
inc
cmp
aas
insl
or
inc
adc
xchg
jmp
mov
into
xchg
insb
lret
and
cwtl
pushf
sub
pop
aad
inc
mov
and
mov
cmp
mov
cmp
mov
push
cmc
jae
dec
test
sbb
clc
xchg
ret
cmp
dec
mov
jl
xor
shll
adc
stc
aas
and
daa
dec
dec
lret
inc
xor
add
mov
adc
mov
psubw
jo
push
mov
ss
mov
mov
or
jne
loopne
mov
std
and
pop
dec
jl
mov
mov
and
xchg
pop
sbb
add
jo
imul
stc
cwtl
mov
inc
loop
in
push
push
xchg
mov
call
pop
sbb
dec
push
es
jo
pop
lock
add
jg
xor
pop
lahf
fisubs
adc
sub
or
mov
inc
push
push
inc
subb
xchg
and
pop
push
loop
cld
sub
cmp
cmp
and
gs
jae
roll
sbb
cwtl
xor
inc
int
dec
scas
cmp
repz
inc
adc
sub
or
out
cli
movsl
xor
mov
lret
fwait
call
jmp
int3
push
das
mov
jge
fbld
icebp
enter
das
pusha
pusha
shlb
cltd
mov
sbb
sub
push
jg
cmpl
ja
movsb
in
mov
lods
mov
or
cld
sbb
cmp
in
and
iret
adc
inc
dec
mov
aam
pop
sbb
mov
xchg
push
cmp
push
pop
push
pop
fnstenv
sti
or
das
test
mov
inc
xchg
sub
push
mov
mov
pop
push
dec
cwtl
mov
fildl
loop
sbb
push
and
lock
sub
and
and
cmc
xor
lret
mov
aas
aad
push
mov
incb
pushf
and
mov
mov
push
jo
xor
scas
lea
cs
movsl
sahf
cltd
cld
jge
jge
mov
inc
push
mov
mov
xor
out
push
adc
mov
movsl
jne
add
sbb
and
dec
xchg
dec
movsl
insl
scas
pop
inc
lods
mov
xlat
frstor
jbe
fsts
roll
jp
inc
ret
jmp
jge
psubsw
clc
out
or
sub
mov
push
popa
mov
mov
mov
enter
sbb
lock
pop
sti
int
scas
stos
mov
popf
out
loope
hlt
addb
xchg
jmp
add
test
jmp
mov
xor
out
fsubp
inc
insb
jecxz,pt
fcom
and
and
and
mov
mov
test
xor
dec
adcl
inc
and
loopne
fs
push
out
mov
inc
jo
jle
shl
arpl
mov
jno
inc
cmpsb
andb
lods
push
adc
mov
lods
adc
cmp
cmp
sbb
out
sub
push
push
push
imul
mov
push
dec
ficomps
push
cmp
xor
test
xchg
enter
and
pop
clc
lret
xor
idiv
pop
iret
jl
jge
rorb
inc
push
inc
pusha
sbb
ja
js
pop
lahf
nop
and
push
push
nop
and
adc
push
sbb
mov
mov
stc
dec
gs
shll
sub
cmpsb
xchg
repz
adc
xchg
mov
inc
clc
jmp
and
ja
xchg
and
jecxz
jno
bound
or
jecxz
ror
adc
rolb
in
or
arpl
clc
push
inc
cmp
out
jb
push
mov
lret
pop
les
pop
imul
mov
fdivrl
inc
addb
jle
mov
adc
pop
cmp
xchg
dec
and
or
cmp
xor
cmp
inc
mov
scas
pop
das
stos
sub
inc
xchg
and
js
iret
sub
aas
fistps
mov
dec
add
iret
rolb
lock
pop
inc
xchg
adc
decl
push
jns
faddl
data16
pushf
stos
push
addr16
hlt
popa
sbbb
inc
dec
les
xchg
movb
hlt
hlt
imul
mov
lock
adc
adc
sub
das
push
adc
imul
addr16
cmp
lock
or
mov
and
mov
pop
xchg
fcomip
sbb
xchg
in
push
dec
rcrl
lret
popf
not
jg
ret
stos
adc
psllw
dec
xchg
lods
aaa
out
dec
in
mov
and
scas
adc
and
jae
fs
xchg
sub
insl
lock
add
fs
dec
and
jo
movsb
xor
scas
mov
push
dec
cmp
xor
mov
into
pop
jg
outsl
pop
pop
add
dec
clc
or
nop
je
push
movsl
inc
cmp
mov
ljmp
inc
cwtl
jp
loope
push
loopne
xchg
test
mov
sbb
dec
jns
mov
out
xchg
pop
clc
mov
inc
inc
decl
fists
test
imul
xor
fldl
mov
mov
mov
jo
push
push
lea
mov
push
xchg
ret
pop
mov
fdivrl
scas
pusha
jl
xchg
mov
pop
cmpl
jnp
pop
mov
push
hlt
push
cmpl
add
cmp
ss
pop
lock
cmp
lods
push
sub
and
push
mov
inc
mov
mov
or
negb
jae
stos
and
dec
xchg
adc
push
and
mov
dec
fwait
add
jl
ss
push
sbb
inc
dec
js
pop
cmp
or
call
or
hlt
fwait
adc
out
es
aaa
push
leave
mov
in
jno
xor
sub
push
jge
in
movsb
clc
dec
inc
cmpsb
adc
xchg
xlat
push
movsl
aad
nop
out
inc
sub
arpl
inc
mov
or
jg
xor
push
ja
cmp
sbb
icebp
daa
ljmp
mov
rcr
adc
fstl
xor
out
addl
pop
shll
mov
lock
fcomp
ja
and
inc
ljmp
popa
jl
xor
les
mov
add
dec
xchg
es
call
pop
inc
mov
aaa
mov
lock
sbb
xchg
lods
nop
dec
jmp
repz
iret
mov
cmp
push
or
push
sbb
into
movsl
rclb
xor
leave
mov
in
cs
mov
sub
push
negl
mov
jne
imul
out
or
jmp
imul
daa
loope
xor
outsl
push
sub
nop
hlt
jne
daa
imulb
inc
cmp
jno
in
dec
cmc
out
test
and
stos
and
push
add
movsl
dec
jno
and
push
sbb
cmp
mov
hlt
mov
mov
push
stc
xor
out
pop
mov
mov
jge
cmp
pop
imul
jg
fcompl
imul
aaa
testb
movsbl
inc
push
cmp
cmp
sub
pop
push
mull
cli
xchg
xor
and
addr16
push
cmpsl
sarl
fadds
mov
daa
loop
xchg
mov
lods
sub
cs
inc
adc
mov
push
stc
xor
pop
icebp
sub
movsb
movsl
jmp
es
ljmp
xor
out
out
or
orb
inc
lret
repz
ret
mov
jg,pn
mov
xor
push
cpuid
fsubr
push
push
mov
aam
push
adc
aaa
js
daa
inc
add
out
lahf
ja
and
add
into
nop
inc
cld
outsl
test
mov
fdivr
inc
mov
lea
and
cmp
aaa
nopl
inc
inc
push
adc
lock
cwtl
xchg
mov
clc
cld
add
fs
enter
add
add
mov
jmp
cmp
arpl
xchg
push
xor
movsb
jne
xor
das
cli
jbe
pop
inc
jecxz
adc
repnz
gs
jbe
insb
icebp
mov
cli
mov
test
jg
mov
inc
push
js
orb
xchg
lahf
sub
cmc
push
mov
fs
ret
add
add
int3
fcmovbe
mov
inc
dec
pop
mov
mov
iret
fidivrl
xor
dec
or
cmpsb
insl
jmp
rclb
jne
in
jbe
in
push
push
cmp
in
mov
adc
data16
fimuls
push
cli
add
stos
mulb
cmpsb
pusha
and
into
mov
loop
std
shll
stc
lods
jmp
fwait
fs
dec
lret
lcall
or
xor
jecxz
and
mov
das
dec
pop
and
adc
adc
add
ljmp
jmp
nop
mov
aaa
stos
cmp
fidivs
or
fistps
shll
jl
jg
ror
ljmp
dec
subb
pop
shll
mov
nop
push
ret
adc
sub
fdivs
fmull
xor
lret
cltd
andb
push
call
push
smsw
jno
push
cmpsb
mov
sarb
je
pop
mov
sub
movsb
insl
adc
add
pop
jge
jne
ja
sbb
popa
xor
jmp
xor
dec
lret
mov
pop
xchg
mov
sub
je
pop
cmpb
push
ror
jnp
std
pop
add
loop
mov
gs
mov
or
cmc
xchg
js
movsb
nop
pop
mov
jecxz
scas
xchg
jl
xor
dec
mov
or
ja
cli
mov
out
aas
mov
xor
jmp
pop
roll
cmp
jno
clc
inc
cmp
xor
jo
test
cwtl
push
in
je
mov
inc
outsl
sbb
sbb
inc
pop
mov
dec
mov
and
dec
repz
sti
into
sti
movsl
mov
push
out
out
xchg
push
push
mov
inc
sub
sub
xchg
push
fdivs
jge
sbb
ja
push
pop
aas
lcall
and
cmp
shr
rcrb
pop
mov
sbb
repnz
add
lea
xlat
imul
std
icebp
dec
sbb
xchg
ret
mov
mov
pushl
std
aaa
rcll
das
mov
and
push
xor
cmp
inc
int3
lahf
xor
outsl
pushf
mov
adc
lock
lods
out
mov
aad
sub
push
sub
pop
inc
inc
jne
sub
das
fldln2
je
call
aam
dec
imul
sbb
xchg
dec
mull
jge
lahf
jmp
in
out
mov
repz
xchg
lahf
bsf
ja
cmp
mov
pop
mov
ss
jl
hlt
jne
int3
pop
test
decb
in
cmp
add
and
add
bound
inc
pushf
fcoms
jb
out
movsl
xlat
mov
add
sub
adc
into
mov
ficompl
or
add
in
sbb
jno
push
push
rorb
mov
push
pushf
call
ds
pop
xchg
push
setae
sbb
add
subb
cmp
dec
push
jno
xlat
das
jbe
inc
jnp
cli
sahf
es
jne
sub
je
pushf
popf
or
lea
sub
add
daa
ret
mov
das
dec
or
pop
sbb
testl
test
nop
lods
push
inc
push
jmp
pop
dec
in
andl
fisubl
rclb
jb
mov
cmp
mov
out
jae
jl
mov
pop
test
out
mov
inc
cmpsl
arpl
push
lahf
jo
lock
jo
fcmovu
mov
mov
rolb
clc
jmp
mov
push
js,pn
outsb
xor
sbb
and
jg
push
in
pushw
scas
adc
dec
pusha
sbb
push
mov
mov
test
jne
cmp
jl
cmp
fcom
sub
inc
bound
cld
mov
aaa
fbld
and
movsb
test
aam
fisubrl
jne
ds
loope
pop
xchg
dec
idivl
jg
cli
xchg
jne
and
into
jbe
dec
sti
inc
data16
sub
mov
test
jb
fimuls
leave
inc
stos
loope
jnp
xchg
leave
sub
sbb
shlb
roll
scas
add
push
xor
sub
bound
pop
sbb
sub
xor
dec
iret
and
xor
push
xor
popa
adc
or
insb
cli
addb
adc
xor
sbb
in
push
push
xor
xchg
lods
mov
mov
fs
adc
outsb
ss
jge
ret
fcompl
fld
scas
lcallw
sub
sahf
out
in
push
adc
cmc
imul
mov
lock
ret
ret
mov
sub
cmp
mov
adc
xchg
xor
mov
mov
or
notl
out
sbb
or
popf
adc
add
mov
inc
dec
lcall
int
and
lret
mov
scas
or
mov
mov
adc
dec
aaa
aad
push
repnz
pusha
shrb
jns
xorl
and
push
jecxz
mov
or
mov
pop
and
sub
iret
jle
xor
inc
xchg
xor
adc
adc
cs
push
mov
nop
das
std
inc
pushf
jmp
lahf
sbb
fisubs
bound
popf
scas
mov
jnp
stc
push
jge
repnz
push
lods
pop
icebp
jne
jne
sbb
outsb
fs
xchg
add
fidivs
xchg
sbb
mov
lock
and
xchg
nop
stos
or
icebp
fisubrl
pop
push
test
scas
add
sti
pop
stos
aad
push
mov
cmp
mov
xor
adcl
mov
adc
repnz
and
leave
movsb
popf
sub
loop
pop
out
in
fsubs
mov
loop
xchg
and
arpl
push
dec
pop
fs
stc
push
cmc
cmp
mov
daa
pop
push
xchg
jl
fsts
stos
mov
aad
out
popf
imul
add
push
inc
lret
jnp
int3
mov
adc
and
jne
rcl
lods
neg
rcrb
or
into
jmp
test
fildll
cld
test
lret
push
jp
push
data16
adc
or
xchg
sbb
jb
xchg
aad
add
mov
xor
pop
mov
movsl
lock
mov
pop
mov
pop
mov
shll
loopne
loope
dec
mov
loop
push
xchg
leave
jl
into
outsb
cmp
mov
test
inc
xchg
xchg
pop
ret
mov
adc
pop
push
pushf
ret
inc
adcl
xchg
aas
cli
gs
dec
jae
sbb
ljmp
ss
dec
or
cmpsl
and
xchg
xor
aam
fldl
xchg
aas
ss
xor
out
mov
call
jge
pop
add
dec
mov
fbld
or
xlat
rcll
adc
and
bnd
inc
popa
sti
jns
test
jge
adc
pop
jle
es
mov
lock
pop
adc
stos
dec
out
movsb
js
into
cmpl
jge
out
rcr
jns
mov
mov
call
lds
test
inc
fidivs
sub
cmp
movb
ret
xchg
inc
mov
or
lret
dec
mov
into
subl
js
cmp
cmp
jb
clc
mov
sbb
mov
mov
insb
imul
mov
xchg
sti
ret
fimuls
sub
sbb
fbld
sbb
jmp
ljmp
xor
fstpl
aaa
xchg
push
cmp
imul
js
repnz
mov
daa
data16
arpl
inc
repz
jg
roll
add
jno
sar
sub
mov
and
jno
cmpsl
jae
mov
icebp
sub
mov
dec
or
lahf
push
dec
dec
test
mov
fldl
frstor
dec
stc
dec
mov
cli
enter
in
mov
or
daa
cmp
sub
pop
dec
jno
stos
cmp
inc
xchg
xchg
jl
adc
push
mov
adc
xor
and
addr16
pop
jne
dec
jge
cmp
xlat
cmp
xchg
mov
push
jg
loop
shlb
das
xchg
lds
pop
lahf
pop
repnz
xchg
icebp
test
fstl
das
fwait
mov
pusha
push
push
cmpsl
icebp
and
aam
or
or
mov
pop
jns
fwait
or
fsubrl
jbe
lcall
dec
jecxz
insl
mov
adc
pop
int3
cmp
and
jb
mov
push
scas
call
add
subl
jge
adc
out
sub
adc
mov
pop
mov
pop
add
sbb
pop
and
and
imul
cmc
push
in
ds
and
insb
femms
xor
mov
mov
js
bound
stc
mov
in
xchg
cmp
loopne
pop
test
dec
imul
movsb
mov
pop
sub
mov
xchg
ror
push
and
mov
inc
ret
push
inc
pop
mov
or
repnz
xor
xor
int3
test
into
jmp
popf
inc
fistpl
popf
ror
imul
dec
arpl
push
repz
jge
mov
and
xor
jmp
jl
mov
fcomps
enter
sub
sbb
jp
imul
push
out
aam
pop
jb
jmp
test
pop
mov
cmp
or
call
jb
inc
sti
jl
dec
test
adc
aaa
pop
pop
cwtl
push
xchg
mov
add
push
sbb
push
rolb
push
push
scas
hlt
dec
cmp
pop
xchg
push
sbb
inc
stos
or
fwait
insl
icebp
and
insl
add
push
sub
rolb
out
jg
xor
xchg
ja
xchg
jle
pusha
mov
das
loopne
and
mov
aam
insl
mov
aaa
negl
jb
aas
in
inc
xor
sbb
mov
lcall
outsl
push
popf
addl
sub
mov
mov
movsl
in
or
xchg
dec
bound
stos
xlat
xchg
cltd
adc
imul
lahf
add
xor
xor
test
xor
dec
sub
cmp
pusha
pop
or
jg
int3
pop
jo
sub
pushl
nop
push
pop
ds
inc
ja
in
sub
jge
sbb
test
adc
test
stos
stc
push
xor
ss
and
sbb
loopne
ficomps
sti
or
mov
pop
mov
in
pop
mov
insl
ljmp
mov
aad
pushl
push
adc
les
repz
xor
lret
out
cmpsl
outsl
add
push
add
icebp
mov
push
arpl
mov
jo
jecxz
fcoml
loope
jo
mov
outsl
fwait
rcll
loope
sbb
add
shl
outsl
sub
xor
pushf
mov
or
bound
mov
jle
shll
out
inc
test
mov
jo
aad
dec
push
outsb
mov
mov
fldl
stc
pop
cmpl
xchg
sub
js
out
xor
push
xor
or
arpl
mov
imul
fisubrl
adc
jns
pop
jle
lods
rorl
fcomps
shr
ss
or
and
fcoms
ret
mov
xor
aas
out
and
cwtl
and
gs
or
xchg
jg
shr
sbb
std
mov
div
mov
xchg
xchg
xor
sar
sbb
sbb
pop
and
xchg
or
test
notl
fs
jno
mov
dec
sub
push
dec
and
aam
imul
or
cmc
push
shr
mov
test
insb
int
in
sub
pop
sub
jno
xchg
addr16
jb
mov
push
mov
out
mov
sarb
out
lock
xor
loopne
repz
and
and
push
ljmp
cld
jae
lods
mov
out
mov
cmp
dec
inc
std
add
push
stos
outsl
decl
jnp
and
mov
or
lahf
ds
or
adc
pop
mov
xor
xchg
roll
out
loop
inc
out
insl
fisubs
loopne
nopl
dec
in
pusha
daa
dec
pusha
and
or
aam
outsb
js
and
lret
cmpl
inc
outsb
in
jg
ret
xorb
xchg
inc
shr
mov
aad
xor
mov
js
or
aam
sub
aad
inc
outsl
xor
push
dec
jae
shl
or
outsl
and
mov
stos
dec
sar
or
sbb
cs
adc
pop
mov
mov
cld
cmpl
rcll
ja
stos
or
dec
mov
leave
dec
rcl
adc
mov
push
testb
sub
xchg
and
adc
fmulp
pop
jns
pushf
les
mov
and
adc
imul
mov
push
adc
sbb
fcmovnu
jg
push
daa
sahf
push
sbb
sahf
stc
sub
xchg
dec
jmp
inc
xchg
movsb
outsb
mov
stos
and
or
add
cmp
enter
xchg
aam
lahf
jmp
or
mov
and
mov
cmp
enter
test
sarb
ja
xor
ljmp
sub
pushf
out
cmpsl
push
sti
rcrl
test
pop
fiaddl
jo
mov
jno
add
and
cmp
out
and
cmp
mov
mov
jno
or
stos
jbe
subl
scas
push
dec
cwtl
call
pop
jno
cmp
ret
lea
adc
cmp
mov
pop
and
inc
call
pop
mov
jmp
imul
jo
mov
sub
cmpsb
das
and
fsubrs
adc
mov
int
es
inc
add
cmp
xor
lahf
imul
leave
insl
inc
stos
adc
lods
xchg
fstpl
aam
mov
aas
lea
stos
cmp
insb
rorb
scas
mov
xor
adc
add
cld
xchg
push
movsl
cmp
jae
nop
imul
inc
js
jge
ror
pop
mov
int3
jnp
push
scas
outsl
jb
les
popf
int3
pop
mov
jns
pop
aam
lea
lahf
shlb
push
cmpsb
test
subl
in
inc
popa
xchg
stc
mov
scas
scas
test
and
xor
rcrl
cmpsl
inc
xchg
mov
leave
scas
mov
mov
movsb
arpl
xchg
jl
call
lods
mov
pop
ficomps
add
test
lcall
inc
push
les
xor
rcrb
popa
cwtl
insb
lea
js
xchg
sysenter
pop
test
mov
or
std
mov
or
push
sbb
jmp
mov
and
jl
add
mov
ja
cmp
jge
push
rolb
icebp
pop
xor
add
arpl
jge
cmp
sahf
xchg
scas
test
leave
dec
cmc
xchg
insl
sarb
cli
sbbl
int3
sub
inc
test
imul
cmp
out
in
and
xchg
mov
mov
mov
test
out
ret
sbb
in
inc
lret
mov
push
xor
clc
mov
imul
out
and
into
xchg
jno
inc
loopne
mov
mov
std
cmp
dec
pop
dec
stos
push
test
jecxz
imul
fiadds
mov
xlat
adc
jno
sbb
dec
in
sub
or
loope
or
rolb
cmpsb
popf
mov
sub
jne
push
int3
ret
ds
cld
jns
sub
push
iret
sub
jmp
pop
es
test
or
in
adc
sub
push
jle
outsb
adc
roll
inc
inc
inc
add
fcoms
movsb
xchg
enter
jno
dec
add
aam
pop
mov
cmp
push
mov
xor
mov
sbb
cwtl
jne
inc
stos
cmpsb
or
push
sub
ja
fsub
mov
jmp
dec
ret
loopne
pop
shll
mov
gs
pop
mov
jmp
sahf
pop
cs
les
addr16
inc
pop
mov
sub
insl
mov
dec
div
xchg
adcb
call
jecxz
mov
testb
mov
sbb
pop
jo
jmp
ffree
and
sub
pop
test
xor
push
xor
test
fcomi
mov
pop
loop
shrb
or
nop
pushf
imull
hlt
adc
push
push
cltd
xchg
mov
pop
hlt
xor
arpl
dec
and
push
rcll
mov
jmp
cld
xchg
testb
test
hlt
mov
sub
jbe
adc
xor
jecxz
or
jnp
jp
popa
mov
and
lock
push
out
sbb
movsl
lods
aas
jp
clc
sti
mov
adc
stos
sbb
adc
adc
imul
out
pop
test
out
cmp
in
xchg
push
rol
xor
inc
lret
pop
sbb
xchg
faddp
push
leave
cltd
mov
xchg
jnp
xchg
mov
jbe
mov
jo
xchg
cld
inc
xlat
or
lods
mov
cmpsb
mov
xchg
movsl
movsb
in
je
jae
ret
push
lcall
mov
icebp
call
xacquire
rcrb
cltd
inc
jge
lock
jl
loope
ljmp
lahf
add
bound
fisubs
pop
std
sbb
repz
push
into
cltd
or
adc
xor
flds
dec
stc
push
add
sarb
mov
bound
jae
test
inc
dec
ficompl
xor
fcomps
cld
mov
or
nop
lock
push
es
sbb
adc
loopne
cmpsl
out
mov
or
out
jb
loop
popa
orb
add
je
pusha
sar
mull
out
mov
sub
xchg
lahf
popf
aaa
jge
cmp
mov
mov
xchg
pop
cmp
lds
mov
movsb
stos
dec
lcall
xor
loop
xchg
and
mov
lds
ljmp
jo
or
inc
adcl
or
outsl
arpl
adc
xchg
stos
mov
dec
sar
mov
call
lret
stc
in
sbb
adc
inc
dec
loopne
test
cmp
xchg
mov
movsb
or
xor
sbb
mov
test
sti
add
fimull
mov
mov
imul
jo
and
sahf
rorb
decb
pop
cs
insl
movsb
add
or
mov
dec
jecxz
push
aam
sub
mov
in
mov
push
push
push
add
push
add
and
jge
test
mov
pop
xlat
es
xchg
rcrb
es
aaa
xchg
fidivrl
aas
bound
daa
lahf
loopne
mov
lahf
pop
xchg
in
ret
or
inc
lock
test
movsb
add
fcomps
xor
lret
dec
rcll
pop
jne
sub
pop
push
lret
adc
lahf
js
fcomps
jnp
jp
push
test
and
stos
sub
pop
scas
daa
inc
clc
xor
fidivs
aad
rolb
mov
push
xlat
jp
cmp
add
sub
push
dec
nop
cmp
xchg
pop
cmp
sbb
cs
mov
inc
and
inc
negb
mov
pushf
enter
xchg
shrl
je
mov
add
jo
lock
cmp
jmp
into
xor
cmc
mov
jl
xchg
xchg
sbb
sbb
daa
test
xlat
repz
jne
sti
dec
ret
xchg
fstpt
leave
sbb
adc
mov
popa
jno
inc
dec
pop
das
lds
push
mov
jmp
inc
fwait
push
or
inc
xchg
pop
lret
insb
push
fwait
into
jnp
loop
jecxz
pop
push
jbe
popa
dec
lret
xchg
mov
dec
inc
mov
aaa
movsl
or
test
jbe
sahf
inc
mov
pop
out
lea
das
mov
pop
fstps
xchg
dec
inc
scas
adc
pop
pop
jge
cs
adc
mov
cmp
add
aaa
add
gs
rol
inc
adc
rcrb
repnz
mov
add
movsb
mov
cmc
push
hlt
mov
fistpl
int
sbb
adc
test
sub
sbb
icebp
sbb
xlat
pusha
roll
and
imulb
lods
subb
aas
push
pop
lea
int
lea
push
adc
push
movsb
xchg
daa
sbb
inc
rorl
dec
mov
add
in
repnz
push
inc
lret
sub
addr16
dec
dec
shlb
pushf
sti
cmp
cld
lods
sub
test
mov
sbb
mov
in
bound
adcb
push
pop
dec
xor
xchg
lret
adc
and
leave
imul
push
ss
imul
outsl
subb
mov
xor
push
sbb
mov
loop
mov
jb
xchg
js
inc
lods
mov
mov
push
fs
pop
adc
into
inc
jns
cmpsb
mov
jo
xchg
inc
jecxz
pop
pushf
in
das
mov
test
addr16
movsl
fcmove
mov
lret
lea
stos
test
sbb
mov
xchg
dec
jb
push
adc
in
mov
cwtl
xchg
iret
cmp
cmpsb
xchg
and
push
inc
push
lods
and
or
es
lock
mov
divl
push
xor
pop
stos
cmp
fnstenv
ret
loopne
pop
mov
imul
mov
jle
mov
in
or
outsb
jnp
push
sbb
dec
loopne
into
loope
and
or
pushf
sub
lret
rolb
es
adc
nop
enter
jb
rorl
mov
sub
mov
aam
inc
mulb
cld
std
sahf
std
mov
movsb
adc
sbb
test
xlat
jg
outsb
jo
mov
loop
jle
stos
sti
xchg
icebp
aaa
shl
jo
jae
add
jne
jge
dec
aas
loop
out
std
rolb
jp
jnp
in
push
loope
test
out
outsb
mov
pop
mov
pop
jecxz
and
jne
push
stos
rcrb
dec
xchg
leave
push
in
cld
cmp
pop
xchg
sbb
xchg
mov
nop
les
pop
push
lret
test
pop
bnd
insl
pop
cmp
scas
sbb
mov
dec
sbb
dec
in
cmc
adc
in
mov
cmp
rcrl
dec
pop
test
dec
add
popa
jae
mov
mov
lahf
ss
cmp
loope
fisubs
rcrb
mov
psrlq
inc
ds
jb
sbb
cmp
test
push
outsl
lods
push
in
repnz
inc
jnp
xor
xor
aam
sub
cmc
test
sarb
push
mov
loop
or
cld
call
sub
jmp
andb
rcrb
pop
mov
mov
es
sub
scas
sarl
test
or
ss
fildl
das
xchg
adc
mov
mov
dec
jecxz
fs
sub
pop
sub
je
movsb
mov
xor
pusha
enter
xor
je
ljmp
sub
insb
es
cmp
cld
xchg
movsl
in
lods
aas
ret
aas
pop
push
xor
loope
mov
lret
push
lahf
decl
shll
inc
or
ret
pop
nop
pop
push
mov
int3
sarl
cmc
push
popf
mov
inc
lds
ficoml
fisttpl
fcoms
in
mov
push
fsubl
insb
pop
xor
xchg
dec
lods
aam
jbe
pop
mull
pop
and
mov
stc
pop
out
or
in
fmull
inc
sbb
mov
inc
push
ret
lock
daa
dec
sub
jae
cmpsb
sbb
sahf
mov
test
xor
inc
sub
mov
inc
push
imull
mov
loopne
leave
cmp
outsb
or
or
sub
mov
cmp
stos
or
gs
test
bound
mov
mov
adc
in
shr
daa
add
cmp
cmp
ret
mov
and
imul
arpl
aas
cmovno
repz
aad
fdivrl
add
arpl
sbb
lock
jbe
inc
xor
test
ret
sbb
insb
dec
addl
xor
les
push
pop
mov
mov
inc
cmp
pop
and
xchg
push
xorl
mov
aam
adc
cmpl
and
cmc
or
jne
shl
xor
sbb
test
mov
imul
cmpsl
fwait
pop
fidivrs
lret
jo
arpl
cs
mov
pop
push
sub
inc
adc
fisttps
push
push
in
pop
movsl
pop
xor
repnz
stos
xor
jmp
fucom
xchg
xchg
scas
lods
inc
testl
pop
add
sbb
push
inc
out
xlat
mov
xchg
popa
xchg
aad
pusha
outsl
lock
sub
aam
ljmp
sbb
lods
sub
cmpsb
das
dec
aas
xlat
mov
gs
into
sub
clc
jmp
or
pop
loop
sti
push
sbb
scas
lds
or
pop
add
gs
data16
pandn
adc
call
cmp
int
sub
mov
in
addr16
mov
in
jno
pushf
mov
call
testl
inc
ret
xchg
call
dec
adc
inc
jnp
sbb
xchg
push
mov
je
sub
popf
outsl
out
push
test
dec
add
inc
aaa
imul
xchg
imul
sub
sbb
pop
cmc
mov
dec
xor
aas
add
in
lret
xlat
repnz
push
cmp
dec
sub
nop
repz
mov
jne
inc
sub
or
pop
pop
dec
jecxz
lret
or
das
jmp
jne
mov
loop
imul
inc
and
loope
stos
xlat
ljmp
ja
cld
arpl
addr16
pop
mov
mov
enter
clc
mov
cmp
dec
push
push
popa
cld
adc
aaa
dec
push
sbb
push
sbb
sbbb
or
ljmp
mov
inc
jno
adc
sub
sub
inc
inc
add
stos
push
movsl
inc
mov
stos
cmpsb
jecxz
mov
out
ds
cld
pop
mov
cmp
or
insb
jno
jecxz
jmp
andl
aad
imul
sbb
hlt
mov
push
lahf
lods
and
jbe
add
jg
jb
dec
mov
pop
jp
cmpsl
out
aaa
push
mov
pop
add
pop
in
mov
or
fcomps
mov
hlt
ljmp
push
mov
lods
inc
cld
js
xchg
fdivrs
sub
add
cmpsb
xor
jecxz
ret
cmp
pop
mov
aam
or
pop
inc
pop
aam
sbb
add
lahf
push
mov
pop
repz
cmpsb
into
adc
and
cmpsl
adc
je
sub
mov
negl
dec
data16
or
sbb
andb
and
scas
je
hlt
adc
daa
sbb
int
xchg
je
add
clc
pop
pop
arpl
mov
fwait
dec
mov
ljmp
and
in
add
shl
or
sbbl
fsubr
gs
lcall
lss
inc
loope
jbe
dec
iret
shrb
push
push
inc
aam
aas
out
sti
xchg
outsb
ficoms
dec
int3
aad
test
lea
and
insl
mov
imul
imul
adc
shrl
cmpb
rol
gs
push
push
xor
push
and
mov
jmp
xor
add
adc
push
fldcw
cmovbe
cwtl
adc
pop
sub
mull
cmp
mov
sbb
icebp
jl
fmul
fnstsw
cmc
daa
xchg
movsl
or
rolb
sbb
jne
adc
mulb
out
dec
arpl
inc
adc
and
pop
xchg
add
outsb
pop
insb
push
call
inc
movsb
pop
mov
push
pop
andl
sarb
test
add
test
inc
std
cmp
repnz
rorb
cmpl
cmpsl
lods
ljmp
inc
push
or
fiadds
stc
cmpsl
mov
cmp
mov
mov
push
mov
or
pop
and
push
or
pop
pop
fs
int3
sbb
jo
out
inc
jle
dec
loopne
fwait
mov
negb
iret
addr16
fidivrl
push
and
lea
push
cwtl
lret
xchg
xchg
xchg
and
xchg
push
lret
pop
sbb
sub
cmp
rorb
inc
sbb
outsl
xor
dec
in
lds
pop
push
es
sbb
lock
cs
ret
xor
in
in
or
mov
insb
mov
jo
push
in
push
mov
xor
jns
rcll
pop
sbb
insb
mov
xor
ret
jp
int
pop
mov
mov
inc
out
iret
xchg
sub
loop
or
sbb
jecxz
cmp
in
mov
xchg
mov
fpatan
xor
loopne
mov
jl
pop
lcall
and
cld
fucom
fwait
and
mov
mov
dec
ret
or
in
addr16
jnp
outsb
lret
cwtl
mov
out
outsb
pop
xor
mov
add
inc
xchg
inc
leave
subb
ret
test
and
jge
nop
pusha
push
jbe
sub
gs
rorl
outsl
std
xchg
ds
pop
mov
inc
add
cmpsb
push
pop
cmp
xor
sahf
jmp
xchg
into
clc
or
cmc
lods
dec
sti
jle
jo
test
out
inc
adc
nop
test
sub
or
inc
aas
xlat
mov
mov
in
mov
push
mov
dec
cli
xlat
mov
pop
jo
cmc
sbb
stos
fld
aas
xchg
insb
mov
jbe
cmp
add
and
jno
jno
mov
scas
or
sti
push
inc
cltd
icebp
jg
fdivrl
lds
inc
or
pop
pop
dec
daa
jle
push
fdiv
mov
stc
ret
xchg
mov
lret
stc
xchg
and
and
and
dec
mov
sbb
aaa
xchg
jge
add
daa
push
mov
clc
jg
pusha
add
nop
dec
sbb
out
push
add
repz
push
lret
testl
icebp
fmulp
and
das
mov
shlb
pop
lods
outsl
xchg
adc
and
mov
in
in
nop
mov
les
sti
jecxz
rcl
dec
pusha
xchg
cmpsb
mov
ret
jg
insb
mov
hlt
inc
xchg
push
mov
jg
repz
stc
cmpsb
js
jno
mov
xor
cmp
pop
and
mov
das
sarl
and
fstpl
xchg
mov
in
adc
xor
dec
jp
jnp
jg
dec
out
ja
je
mov
nop
mov
inc
fiaddl
pop
outsb
out
xor
out
lret
fadd
mov
aam
call
cmp
dec
out
jno
pop
fistpll
pop
mov
lret
test
sbb
movsb
mov
cmp
ret
test
xor
push
add
adcl
push
fisttpl
mov
cld
add
decl
pop
inc
lods
in
mov
js
outsl
aam
addr16
mov
lret
sub
fiaddl
in
int3
imul
ret
loop
sahf
into
insl
icebp
pop
and
mov
cmp
sub
cld
pop
sub
mov
jmp
xor
mov
add
test
push
push
ljmp
int3
push
mov
in
insl
lea
in
xchg
data16
push
pop
sbb
mov
je
in
daa
push
add
jmp
and
jg
cmp
or
test
mov
cmp
inc
sub
or
jecxz
mov
push
ret
test
repz
fldenv
sub
mov
negb
jge
cmp
imul
adc
dec
mov
scas
inc
and
push
push
xchg
ds
dec
leave
or
outsb
subl
jecxz
js
in
push
leave
cmp
in
ficompl
aad
sub
and
fiadds
je
mov
mov
mov
jo
aad
cmp
in
test
mov
popf
fists
mov
mov
es
icebp
mov
or
pop
jge
sbb
stos
adc
xchg
add
pop
mov
and
mov
cld
and
inc
dec
shl
mov
dec
addr16
repnz
fs
pop
insl
pusha
rorl
xor
jmp
dec
inc
pop
hlt
cmpsb
adc
popf
or
in
adc
cld
ljmp
nop
sub
insb
and
jle
xor
icebp
rcl
ficompl
sub
scas
xor
es
sar
bound
inc
in
inc
mov
aaa
jnp
push
and
cmc
les
jecxz
lret
jg
mov
dec
mov
xchg
or
lahf
gs
pop
mov
icebp
shll
inc
and
xchg
or
loope
pop
add
inc
dec
xchg
int
jle
add
jae
aad
enter
outsb
mov
dec
push
add
and
in
cld
push
jns
andl
dec
loope
je
and
dec
mull
or
pop
mov
pop
movl
jne
adc
scas
imul
call
jmp
fiadds
sahf
mov
cmpsl
fdivrl
sub
cmp
or
sub
mov
pusha
pop
sub
push
xchg
out
add
lret
sbb
jbe
pmuludq
andb
mov
mov
and
adc
jnp
ret
and
sub
out
pop
inc
push
sbb
sub
gs
lahf
test
imul
mov
jmp
pop
or
and
sub
sbb
in
jmp
sub
ja
test
cmp
pop
fdivl
and
rcrl
inc
sbbl
fbld
sub
pop
sahf
dec
cld
es
xchg
or
jecxz
push
rcrb
rolb
fildl
sbb
js
dec
or
les
push
repz
adc
mov
adc
es
sub
jbe
push
rclb
sub
inc
xchg
push
repz
push
adc
fnsave
mov
mov
pop
js
and
add
xchg
xchg
xchg
lods
push
loopne
add
or
lods
lds
cmpsl
shr
daa
mov
ljmp
outsb
add
leave
sbb
daa
jo
cmp
xchg
mov
cld
loopne
dec
mov
lret
arpl
cmpsb
pop
adc
pop
adc
rorl
inc
mov
add
pop
cmpsb
xor
mov
in
mov
push
cmp
lods
xchg
pop
loope
jno
jle
hlt
cmp
sub
sahf
dec
push
fs
pop
sahf
adcl
test
inc
mov
add
mov
test
int
mov
popf
out
mov
jp
pop
mov
jo
mov
jb
stc
int3
fwait
scas
dec
dec
dec
xchg
pop
lods
ljmp
fcmovu
aad
fsubrp
push
daa
or
jmp
mov
stos
jp
loop
repnz
push
shr
and
jbe
jp
fisubl
clc
pop
aam
adc
adc
dec
adc
std
mov
mov
iret
mov
xchg
xchg
lods
dec
lds
jmp
mov
sub
mov
icebp
out
cmp
add
mov
popa
je
dec
lret
pop
cmp
es
jnp
pushf
push
mov
data16
pop
bound
addr16
jno
ss
cmp
push
lret
cmc
icebp
imul
adc
dec
loopne
jl
aas
pop
ljmp
icebp
pop
dec
imul
js
mov
lds
fucom
cmpsl
mov
fistpl
negb
jns
mov
xor
and
mov
shrl
lea
push
pushf
push
mov
rolb
dec
stc
in
cmpsb
push
orl
jge
adc
cld
hlt
loopne
lods
pop
ret
mov
or
cmp
fcmovne
xchg
ds
push
push
push
jbe
icebp
insb
push
inc
sbb
mov
jo
mov
outsl
xor
or
push
mov
xchg
cmp
adc
xchg
cmp
lahf
stos
call
dec
mov
dec
or
and
stos
jo
pop
lock
xor
pushf
mov
out
xor
pop
call
add
jecxz
movsb
sub
test
incb
xor
add
or
cltd
or
or
xchg
mov
xor
movsl
loopne
pop
xchg
insl
lods
ja
dec
dec
out
lret
icebp
sahf
inc
shlb
mov
push
repz
jns
adc
scas
sbb
cmp
movsl
aam
movsb
loope
sar
repnz
test
sbb
cmp
pop
daa
aaa
scas
pop
xchg
fnsave
sub
inc
movsl
popl
adc
xlat
pop
popf
jns
xor
sbb
aas
lods
xor
push
repnz
mov
and
xchg
cmp
add
sarl
insb
adc
loopne
dec
jle
adc
push
lods
mov
inc
cmpb
mov
rorl
cmp
outsb
shll
js
sbb
jecxz
faddl
push
mov
pop
scas
sub
pop
test
mov
adc
popa
sub
aaa
out
push
xchg
and
cmp
pmullw
ss
push
test
push
or
sub
pop
scas
ret
pop
lret
cmpsb
js
clc
mov
popf
sbbl
adc
incb
lods
add
and
jnp
ret
push
pop
jbe
hlt
lock
cs
lods
mov
negl
cltd
jl
mov
ja
comiss
push
cltd
imul
sub
loopne
fdiv
cmp
sub
mov
mov
pop
pop
in
add
mov
add
or
faddl
push
imul
enter
shl
lock
lds
push
xor
xchg
mov
popa
mov
shrb
orb
popf
sub
out
enter
jl
jne
iret
iret
mov
inc
in
mov
in
insb
push
pop
push
pop
inc
and
lods
cmp
cmpsb
or
dec
and
fsub
outsl
and
xchg
cmp
mov
mov
push
sbb
mov
in
lea
testl
and
adc
sbb
scas
insl
mov
mov
sbb
mov
outsb
and
call
ds
push
sub
int3
int3
popa
dec
mov
xor
stc
cmp
bound
or
dec
xchg
cmc
imul
lods
in
stos
jbe
mov
subb
repnz
push
orb
cli
stos
or
out
xchg
jnp
inc
aad
xlat
frndint
dec
bound
dec
add
jmp
sbb
inc
dec
dec
push
pusha
dec
inc
jle
gs
pop
sbb
inc
lret
push
iret
jg
ret
sbb
mov
lea
and
and
push
movsb
xchg
sub
cmp
jo
decb
sti
rcl
or
fistps
sbb
dec
loope
push
and
es
inc
sbb
ss
cld
enter
inc
jge
in
rorb
popa
rcl
adc
stc
dec
ficoms
fwait
dec
dec
or
lock
inc
pop
ror
mov
xor
adc
mov
lods
test
inc
dec
cmp
mov
mov
xchg
jno
int3
scas
lea
cmpsl
jge
sub
gs
mov
xchg
insb
das
add
inc
aas
xor
mov
mov
cmp
jno
scas
push
aas
jle
sbb
xchg
add
sbb
xchg
aaa
in
in
rcrl
cmc
inc
push
cmp
cs
fldenv
repz
cmp
das
inc
in
mov
dec
pop
inc
xor
push
pop
fstps
loopne
push
arpl
pushf
fidivs
divb
xchg
pop
enter
and
sbb
jecxz
xchg
push
in
add
push
sti
test
add
sub
popf
int3
in
les
repz
rorb
xchg
adc
out
mov
adc
dec
add
int3
mov
pop
loope
xchg
cwtl
into
cmp
push
in
push
lea
cmp
divps
push
lret
add
sbb
cmp
and
xor
push
mov
cmp
test
jne
in
xor
sub
mov
pop
cmpsb
out
lock
adc
movsb
cmp
jg
fsubrs
and
pop
imul
inc
lret
xchg
dec
aad
mov
sbb
mov
jne
inc
daa
xor
addl
mov
movsl
insb
fwait
dec
outsl
mov
sub
aas
add
inc
adc
in
sbb
imul
lds
fnsave
jmp
pop
and
ljmp
xchg
es
cmp
outsb
loop
faddl
pop
or
dec
push
cmp
pop
repnz
int3
aas
iret
or
pushl
jb
mov
push
adc
outsb
add
rorl
cmpsl
cmpsb
xchg
mov
out
mov
pop
mov
push
dec
pop
adc
xorl
xchg
xor
push
xchg
pop
iret
sub
or
mov
sbb
fcoml
pusha
cmpsb
inc
scas
jl
stos
xchg
inc
cltd
pop
mov
idiv
shr
aas
mov
call
push
xor
shll
adc
jnp
sbb
pop
popf
sub
stos
repnz
adc
rclb
stos
ss
xlat
jo
insb
cmp
mov
jbe
dec
popf
pushf
loopne
push
pop
gs
clc
adc
cmp
dec
enter
jne
inc
xor
sar
orl
jo
int3
test
testl
shlb
ds
xchg
cli
or
mov
push
pop
arpl
xor
inc
test
es
ret
ret
pusha
jnp
or
test
inc
cli
cltd
loop
stos
hlt
data16
xchg
cmpsl
or
xchg
popa
mov
sbb
xor
add
test
mov
jp
dec
add
fs
jns
sbb
or
scas
stos
mov
inc
xlat
and
sub
out
jmp
jne
add
sbb
lods
hlt
jnp
es
xchg
mov
dec
mov
and
inc
fbld
je
inc
arpl
mov
adc
sub
jmp
nop
sub
push
js
jmp
cwtl
and
jp
pop
fdivl
fiadds
inc
or
add
pusha
cld
loope
in
fwait
inc
repnz
addl
loop
push
sbb
adc
jbe
mov
sub
loope
fs
cli
out
xchg
fcomp
xchg
pop
pop
cli
push
fs
shrb
mov
mov
mov
mov
popa
or
das
push
das
cmp
std
or
or
xchg
mov
and
cmpsb
jmp
shrl
sbb
ret
cmpsl
xchg
pop
jbe
xchg
mov
push
inc
in
sub
sub
inc
aas
xlat
addr16
jno
pusha
mov
and
popa
dec
xor
cli
inc
fdivl
ret
cli
xchg
push
dec
xor
jmp
dec
stc
outsl
les
inc
mov
fsubrs
rolb
jo
ljmp
pop
mov
out
jmp
aas
xor
std
ljmp
adc
adc
icebp
sahf
add
pop
dec
inc
pop
pusha
int3
dec
loop
repz
add
jmp
cli
ss
mov
mov
add
jns
cmc
les
insb
jg
mov
inc
adc
or
pop
xor
cltd
dec
imul
xlat
imul
or
push
xchg
pop
faddl
jno
in
and
sub
leave
pop
xor
pusha
hlt
xlat
or
jge
push
cmc
jl
loopne
into
inc
mov
mov
xchg
adc
jmp
push
mov
les
insb
js
mov
outsl
fs
int3
dec
in
in
loope
jg
or
mov
repnz
push
or
cmp
ret
cwtl
mov
test
xor
pop
cmp
push
cmp
gs
fildll
sub
loop
push
arpl
push
sbb
jo
pop
push
add
test
mov
sub
inc
and
mov
jl
in
js
xchg
sub
dec
fdivl
xchg
stos
inc
jecxz
in
push
aam
lea
ret
imul
mov
rcll
mov
cmpsb
xchg
daa
enter
mov
addr16
jecxz
mov
adc
jno
ret
jmp
lds
stc
fsubrl
sub
lds
dec
pop
mov
mov
in
xchg
cli
and
ror
dec
fsin
and
cmp
gs
cmp
es
xchg
and
lahf
test
cmp
and
push
push
imul
repz
cltd
and
sub
xchg
in
inc
ja
imul
dec
ret
dec
lds
xchg
fsubl
or
add
dec
cmp
jl
cli
daa
arpl
lahf
cwtl
mov
push
lea
pop
push
out
out
jne
enter
mov
cwtl
arpl
psubd
icebp
mov
mov
mov
movsb
in
imul
mov
aam
and
push
in
mov
jmp
mov
mov
add
xchg
fstpt
jecxz
lods
dec
jno
mov
dec
xor
dec
aas
inc
mov
sarl
pop
pushf
jb
daa
xlat
pop
adc
mov
mov
outsl
in
lahf
mov
divb
adc
add
lcall
and
mov
cmc
xor
repnz
ss
mov
dec
or
xlat
jge
push
icebp
dec
testb
cmpsl
scas
jbe
ja
jnp
mov
push
pop
shrl
bound
pop
lsl
mov
mov
push
jnp
sbb
pop
test
mov
nop
push
insb
adc
fwait
xchg
test
pop
popa
jne
pop
iret
dec
xor
mov
aas
adc
mov
jge
xchg
mov
push
jmp
mov
pop
imul
imul
rcll
cmc
addr16
scas
ds
divl
insb
cmp
sti
sti
xchg
mov
xor
sub
hlt
xor
insb
sbb
shrl
inc
inc
inc
andl
xor
cmovle
xchg
out
xor
outsl
mov
push
es
rcr
das
cmc
jne
pop
lods
ror
lret
cmp
push
les
lret
rcr
or
ja
enter
or
orl
xchg
jecxz
jbe
dec
pop
addr16
je
jnp
imul
ds
sbb
scas
sub
jo
dec
xchg
sbb
mov
add
repz
out
dec
adcb
mov
adc
dec
jae
mov
mov
cmp
mov
enter
add
shrb
pusha
test
sub
and
xchg
cmp
test
fistpl
sti
push
push
rolb
xlat
inc
sub
push
daa
add
icebp
es
mov
or
xor
addl
sbb
inc
mov
sarl
fldl
nop
cmp
aam
notb
dec
or
ja
pop
nop
pusha
dec
inc
in
inc
xor
fld
adc
outsl
push
lds
xorl
lds
int
les
mov
addr16
mov
jle
jae
ds
mov
cmpsl
dec
inc
sub
mov
outsb
cmp
dec
jns
xor
mov
bound
cmp
cld
stos
add
gs
xor
test
mov
jmp
movsl
ja
pushf
test
and
ljmp
pop
xorb
add
clc
push
inc
pop
movsb
pop
cmpsl
loopne
rorb
popf
or
mov
jecxz
jne
shlb
lds
in
sub
cs
cld
test
iret
sarb
jmp
mov
inc
stc
push
lret
jbe
dec
sbb
lods
or
dec
rcll
sub
cli
pop
cwtl
or
js
rcrl
sub
mov
outsb
jp
or
rorb
and
or
loopne
push
stc
test
inc
mov
or
dec
pop
mov
icebp
in
sti
sub
ljmp
add
ds
adc
mov
sbb
or
roll
test
xchg
cmpsl
push
lret
adcb
das
jns
jge
add
lcall
stos
xchg
dec
add
mov
cmpsb
jnp
jne
dec
mov
mov
fdivs
xchg
mov
sti
lock
stos
xor
daa
push
jbe
loopne
inc
rolb
icebp
iret
aam
xchg
insl
fiaddl
jmp
out
push
cmp
roll
shll
ja
dec
subb
dec
mov
jnp
sahf
idivb
aad
push
fadd
pop
out
dec
out
mov
sbb
add
mov
xlat
mov
loope
pop
lock
sbb
mov
xor
sarb
lahf
xlat
sub
push
jnp
pop
inc
pop
push
scas
mov
jb
push
add
orb
adc
jno
adc
inc
test
dec
into
and
inc
hlt
xor
addr16
cmp
add
jle
inc
xor
test
outsl
add
dec
push
dec
sub
aas
mov
lods
psubsw
xchg
call
inc
stos
inc
xor
mov
repz
sbb
lcall
dec
out
xor
in
iret
xor
mov
lea
cmp
push
dec
je
push
add
pop
mov
xchg
stos
mov
sbb
and
shll
or
mov
xor
dec
pop
loope
xchg
add
sbb
jmp
int
fs
call
fstps
cli
repnz
outsb
lods
jmp
cwtl
push
cmp
jbe
mov
xor
mov
in
not
aam
and
jns
jle
movl
ds
push
lcall
adc
sbb
int
lea
push
cmpsb
sbb
mov
fmuls
adc
dec
sub
stos
cltd
test
xchg
pop
push
mov
jbe
loop
in
xor
std
sti
rcl
dec
xor
hlt
mov
push
xchg
stc
push
jne
mov
or
mov
testl
mov
xchg
fisttps
mov
sbb
pop
pop
xor
test
test
scas
dec
push
mov
pop
repz
aam
mov
inc
sbb
mov
popf
jb
stc
or
adc
lret
mov
push
dec
jns
leave
imul
mov
sbb
pop
pop
add
into
mov
shll
sbb
out
mov
pop
cld
popa
push
mov
dec
int
cmpsb
xchg
add
push
or
add
insb
jp
mov
aas
adc
cmpsb
or
test
inc
loopne
ja
addr16
in
imul
std
pop
inc
mov
cli
cmp
pop
push
pop
jne
je
xchg
jb
and
popa
xchg
jp
into
fwait
std
jp
dec
push
add
xor
mov
sub
or
mov
cmp
shrl
pop
das
pushf
mov
int
xor
repz
and
xor
lock
adc
fwait
ljmp
fidivrl
jecxz
xchg
dec
and
sbb
jecxz
ret
push
gs
fwait
sub
sbb
lods
std
mov
hlt
push
fcomps
and
xor
mov
das
pop
frstor
jp
sbb
mov
popf
sbb
je
jp
lods
xchg
xlat
adc
aad
pop
dec
incl
fs
mov
enter
cmpsb
cmpsb
add
sbb
fs
xchg
or
out
jbe
cmp
add
nop
aaa
add
orl
mov
out
push
je
and
clc
ret
jno
pop
aas
mov
push
sub
xchg
test
dec
xorl
enter
mov
jp
cmp
fwait
dec
inc
xchg
sub
sub
jge
pushf
jmp
out
movsl
mov
xor
and
rolb
or
sub
lea
shlb
es
in
push
bound
xchg
insl
and
push
mov
scas
xchg
ret
cmp
scas
mov
je
insb
push
adc
fldenv
stos
push
inc
mov
inc
mov
fdivs
fwait
cmp
adc
pop
adc
pop
push
jge
enter
or
lock
les
sub
rclb
xchg
or
add
mov
scas
mov
in
mov
roll
sti
dec
popf
sarl
idivb
pushf
add
mov
cs
daa
out
push
xor
sbb
in
add
shlb
test
add
fstpt
test
add
jbe
arpl
vmovmskps
ret
aam
mov
or
mov
or
adc
test
js
sub
sahf
outsb
xor
xor
not
or
mov
mov
mov
and
push
je
daa
hlt
loopne
shll
and
pop
sbb
mov
ficompl
das
data16
aas
ret
sub
or
or
xchg
adc
sbb
pop
add
or
xchg
out
leave
lcall
xor
and
pop
mov
push
push
mov
mov
sub
enter
mov
imul
ficompl
pop
inc
mov
jmp
rclb
mov
ret
add
fstps
mov
jo
int3
cli
and
cmp
add
dec
sbb
ja
or
xor
call
addr16
das
mov
jge
pushf
shlb
sti
push
inc
sub
pop
das
clc
xchg
ja
into
xor
ljmp
cmp
in
or
or
jnp
gs
xlat
dec
cs
dec
mov
mov
ret
jg
or
aad
daa
test
fldt
adc
adc
lods
sub
mov
add
inc
ds
aad
sbb
rcll
jl
inc
mov
mov
sbb
pop
mov
or
lock
dec
rclb
mov
xchg
add
scas
dec
mov
mov
mov
inc
fmuls
cmp
add
dec
mov
pop
jnp
insl
push
lea
das
das
lock
xchg
das
iret
in
fdiv
outsb
inc
cmp
ja
mov
sub
inc
and
sbbl
mov
mov
adc
push
pmulhw
ja
je
cmp
jnp
pop
movsb
and
cs
push
and
sub
nop
mov
int
pop
adc
inc
outsl
or
fcompl
addb
sbb
pushl
inc
daa
out
dec
mov
insb
js
pop
mov
push
mov
fstl
xchg
call
jg
pop
pop
lds
mov
jge
inc
fistl
movsl
push
out
jmp
cmc
lret
xchg
mov
lods
mov
mov
push
push
sub
push
enter
adc
scas
push
push
add
ret
push
shll
mov
xchg
fistpl
into
les
mov
movsl
push
add
dec
xor
test
mov
jno
addr16
clc
mov
out
inc
mull
hlt
jmp
lret
xor
incl
push
dec
mov
ds
jle
cwtl
dec
or
push
hlt
hlt
and
xchg
aaa
jnp
dec
push
jno
int
int
mov
lea
ret
fnsave
fdivrs
push
jbe
out
push
cmpsb
in
lahf
adc
jmp
mov
jbe,pt
btc
loope
push
sbb
xlat
test
lret
test
push
movsl
clc
in
sub
cmp
xchg
in
call
push
fisubs
push
fildll
nop
cmp
pop
add
push
test
mov
and
or
mov
cmp
mov
mov
adc
pop
dec
cmpsb
cld
sarl
int
scas
jo
data16
cs
test
lds
movsb
xchg
clc
xchg
negb
xchg
aas
enter
mov
dec
cmp
loope
cli
cmpsb
and
inc
push
pop
add
loope
out
jp,pt
push
dec
xchg
mov
mov
sti
push
inc
mov
shlb
in
mov
mov
add
jg
sbb
bound
xchg
jp
ja
jg
js
js
mov
popa
dec
cmp
mov
test
sub
in
xchg
mov
pop
dec
jne
or
pop
adc
repz
std
in
inc
pop
adc
push
mov
push
mov
test
in
mov
loop
adc
cmpsb
mov
inc
jg
mov
les
xor
push
inc
lock
pop
pop
pop
mov
inc
xlat
cmp
shrl
cwtl
xchg
adc
dec
inc
inc
xchg
cmp
add
xor
mov
ljmp
xchg
mov
outsb
xchg
dec
ret
cmpl
test
or
pop
sub
mov
push
pop
shll
and
subb
test
shrl
lods
mov
test
push
cmp
xchg
jl
movsl
add
cmp
cwtl
mov
jge
data16
sub
cmp
pop
repz
lret
push
scas
stc
inc
daa
daa
push
lret
pop
cld
subl
push
push
stc
add
push
cmpb
orl
mov
dec
lea
cmp
xchg
sub
loope
mov
push
xchg
jno
lods
jns
push
aam
xchg
cmpb
mov
jbe
dec
rolb
test
adcb
mov
mov
call
rcll
cmp
pusha
mov
shr
pop
xor
aaa
div
jg
aam
or
lret
shlb
xchg
sub
int
pop
pusha
adc
lret
jbe
arpl
jno
pop
jp
xor
xchg
mov
repz
testl
je
mov
fmull
in
jae
adc
cli
sub
lea
por
mov
out
shl
cwtl
int
fidivrs
in
sbb
xchg
push
sbb
xor
cltd
in
mov
jnp
or
inc
or
cld
imul
or
enter
sbb
lcall
les
addr16
sarl
inc
addb
rcll
stos
push
fcomp
outsb
scas
mov
add
and
push
mov
mov
inc
add
pop
mov
xor
test
testb
xchg
mov
loop
dec
jae
dec
cmp
pop
shl
jbe
loope
neg
cs
xchg
jbe
hlt
fwait
movsb
mov
ja
sbb
aas
adc
out
fstps
dec
mov
fs
cld
mov
mov
pop
das
pop
inc
pop
sub
inc
into
repnz
xchg
repnz
push
push
fs
mov
xchg
mull
in
icebp
sub
jl
movsb
mov
mov
sbb
xchg
cld
push
add
fsubl
out
cmc
data16
jp
out
add
inc
mul
add
inc
jne
cltd
rolb
dec
pop
hlt
imul
sahf
mov
insb
shl
xchg
mov
ret
xor
jg
sub
in
imul
mov
loope
insl
jge
repnz
jecxz
jge
push
or
sub
testb
xor
push
mov
sub
inc
das
jl
and
push
inc
jo
test
sti
stc
adc
fwait
push
xor
imul
mov
lds
jae
sahf
test
lods
xor
faddl
into
xchg
inc
pop
movsl
inc
xlat
lcall
enter
aam
xor
sub
jbe
repnz
shlb
jnp,pn
mov
das
add
fwait
repz
or
enter
dec
repz
data16
push
jae
in
out
xchg
cmp
shrl
outsb
aam
out
pop
das
xor
gs
stos
cli
pop
push
lret
sub
das
cmpsl
mov
dec
std
sbb
jecxz
mov
mov
repnz
inc
into
in
lods
sub
rol
cmp
xchg
movsl
sti
fwait
xchg
jmp
cmp
popf
mov
pop
arpl
pop
pop
and
inc
cltd
lcall
and
iret
xchg
fs
dec
sbb
push
jb
loope
xchg
call
dec
gs
stc
inc
out
xchg
shrl
inc
and
popf
inc
and
push
out
lock
nop
das
push
mov
hlt
pop
push
sbb
jmp
xor
push
jge
sub
jo
sbb
xor
mov
or
and
push
aam
jle
lret
xlat
push
jbe
test
xchg
mov
mov
int
out
ficoms
pushl
in
lcall
incb
cmp
sub
pop
or
xchg
cwtl
xor
xchg
push
mov
jmp
pop
xchg
push
ja
fdivs
cmp
fs
jp
mov
and
pop
dec
pop
jns
mov
add
lock
xlat
leave
mov
faddp
bound
cld
jecxz
xchg
dec
hlt
aam
inc
jg
lcall
push
push
fldenv
scas
jno
lock
and
add
xlat
xchg
sbb
xchg
nop
mov
push
les
xor
push
cmp
add
int3
rorl
pop
cwtl
jns
sbb
pop
push
push
adc
mov
mov
jle
sbb
rorl
repnz
mov
lods
cmpsl
jmp
rcrl
iret
jecxz
out
push
sub
pop
or
mov
push
cli
jnp
in
cld
or
xor
and
stos
icebp
fisubrs
mov
inc
mov
dec
mov
ljmp
faddl
mov
pusha
push
jle
js
mov
sub
addr16
mov
xchg
mov
lcall
xchg
xchg
das
out
xchg
out
ret
lock
push
mov
in
xchg
test
cli
out
test
pop
or
jns
lahf
mov
cmp
ret
xchg
push
movsl
mov
dec
ret
daa
mov
xchg
call
mov
cli
movsl
fimull
icebp
dec
jno
fsub
inc
dec
jo
jecxz
xor
lret
mov
adc
adc
xor
mov
ret
and
ret
sbb
inc
sbb
popf
dec
mov
mov
push
jl
call
leave
mov
adc
cmpsl
sub
adc
cmp
out
pusha
mov
push
movsb
iret
sti
mov
or
lea
mov
inc
out
mov
scas
jl
mov
inc
aaa
inc
cmp
jb
dec
add
xchg
or
les
fcomps
aad
mov
fnstcw
push
mov
adc
cmp
inc
sarl
push
push
jl
stc
rdpmc
cmp
add
push
sub
mov
add
pusha
rolb
xor
pop
leave
leave
pop
scas
lahf
xchg
push
pop
sub
int3
cmp
js
loope
or
leave
pop
cmp
jp
lcall
movsb
stos
sbb
adc
aad
push
fdivs
cwtl
pop
ds
and
lock
xor
cld
testb
ds
imul
aas
sbb
stos
fs
push
insb
jecxz
jb
mov
repz
push
ljmp
sti
inc
push
or
aad
xchg
dec
mov
push
stc
out
test
notb
mov
mov
jp
or
dec
adc
andl
push
sub
push
dec
mov
arpl
pop
js
ret
mov
rcr
fldl
xchg
pushl
push
sub
push
sbb
outsl
inc
lcall
pop
lock
gs
into
xchg
ljmp
and
jbe
push
dec
xchg
ja
lahf
clc
scas
xlat
mov
jo
loopne
dec
dec
or
adc
fnstcw
sbb
push
es
dec
mov
sub
cs
call
rclb
sbb
sahf
rcr
movsl
push
rolb
rcll
outsb
inc
in
test
lock
andb
add
into
mov
ret
lds
dec
dec
test
in
jo
jne
mov
stc
dec
fsts
cmpsl
and
inc
rcl
loope
cld
mov
aaa
outsl
insb
fs
sub
das
lahf
jmp
cltd
xor
mov
sub
inc
leave
pop
pop
sarb
movsl
xor
inc
aad
dec
shl
popf
push
les
loop
cmp
xchg
jmp
in
pop
add
fists
pop
xor
pop
xor
lods
sub
fildll
pop
lods
dec
mov
mov
push
mulb
or
aad
push
adc
mov
and
mov
push
jle
and
gs
movsl
sub
pop
dec
rorb
adc
insl
push
mov
pop
mov
jp
push
sbb
xchg
add
mov
pop
imul
rcr
or
jbe
in
je
aaa
jnp
push
push
imul
hlt
sti
imul
std
das
outsl
jg
mov
jg
cltd
jle
xchg
dec
dec
jmp
rolb
xchg
or
cs
loopne
cli
mov
imul
in
hlt
out
cmc
adc
in
aas
dec
push
jp
add
loop
movzwl
dec
sub
aaa
jnp
dec
add
sub
xchg
or
dec
cmp
sbb
test
movsb
repnz
jl
mov
xchg
and
mov
jle
add
scas
rcl
out
dec
ret
in
adc
jge
jo
jp
out
xchg
add
sar
xchg
shr
sub
xor
out
shl
jnp
or
inc
push
roll
leave
push
cmpsb
stc
mov
sti
sbbl
sub
cmpsb
jnp
add
ljmp
push
xlat
push
arpl
jae
or
sub
imul
enter
pop
jmp
mov
lahf
addr16
loope
aaa
sub
or
movsl
jnp
mov
movsb
mov
xchg
aaa
lds
jl
insb
addl
cmpsl
dec
adcb
cld
pop
jne
stos
cmp
xor
push
pop
mov
jbe
lods
mov
push
shlb
movsl
stos
sbb
imul
jge
mov
xchg
lret
sub
fisubrs
push
aam
sahf
lahf
insl
fldl
adc
divl
in
lahf
inc
ja
xor
call
in
inc
nop
adc
bound
inc
aaa
in
cmp
into
dec
ja
bound
orl
ljmp
std
sub
adc
xchg
test
insl
fdivl
cmp
xchg
dec
pop
or
cmp
daa
xchg
xchg
push
insl
test
pop
cmc
cmp
pop
arpl
mov
movsl
scas
jo
mov
jg
mov
daa
sti
push
iret
test
popa
cmp
jns
add
xchg
shlb
cwtl
push
inc
push
fld
clc
mov
push
je
or
inc
inc
sbb
call
stc
lret
add
cmovge
pop
fs
cmpsl
push
sbb
push
fmull
xlat
sub
daa
jne
xchg
fsubrs
sub
push
insb
pop
or
sbb
imul
or
inc
xchg
in
lcall
jae
adc
xchg
xchg
test
test
call
jge
hlt
aad
mov
sahf
fnstenv
mov
xor
int3
stc
sub
iret
scas
pop
shl
stc
xchg
cs
mov
ret
lock
cwtl
js
pop
pop
rcrb
das
cwtl
inc
mov
jno
sub
test
push
sbb
sbb
dec
lret
jp
nop
sub
fstl
imul
test
adc
jecxz
in
ret
loop
pop
outsb
ds
ss
imul
pop
bound
stos
mov
jae
mov
pop
imul
add
stc
pusha
in
xchg
mov
cmp
mov
sbb
shlb
cmovns
mov
and
out
pop
pop
jmp
and
mov
push
inc
cli
sub
std
and
push
jno
js
daa
test
xchg
icebp
rcr
add
xor
mov
mov
mov
jmp
mov
xchg
xchg
sahf
movsl
inc
pop
inc
cmpsb
inc
dec
addr16
mov
out
jmp
and
hlt
loop
cwtl
scas
sub
pop
push
sub
roll
cmp
cs
mov
mov
into
mov
rcrl
and
xchg
imul
mov
pop
pop
inc
shrb
and
dec
je
insb
pushf
xor
in
fsubrs
je
scas
xchg
xchg
inc
and
decb
push
push
out
das
dec
test
std
and
mov
lods
cmp
or
add
shl
lods
mov
mov
dec
xchg
lcall
mov
mov
scas
push
cmc
ret
sub
jae
int3
int
notb
std
mov
fsts
daa
cmpsb
das
sbb
in
dec
mov
or
shll
stc
cmp
inc
cmp
arpl
push
xchg
scas
inc
stc
lods
cs
cmpsl
cmp
lea
inc
pop
dec
ret
or
jns
jnp
inc
or
xchg
rcll
divl
mov
sbb
xchg
mov
cwtl
add
dec
clc
push
stc
cwtl
xchg
pushf
xchg
lock
cli
lds
adc
test
lahf
andb
and
mov
popf
clc
or
sub
fnsave
sub
mov
in
sahf
repz
int
sub
xor
fstl
lock
pop
cmpsl
out
cmpsb
jg
push
inc
mov
jl
adcl
pop
and
sti
cmp
mov
adc
lock
pop
scas
adc
pop
add
pop
aaa
jle
leavew
adc
push
jbe
enter
xor
xchg
imul
fs
js
jbe
jmp
jmp
push
aam
out
std
insl
ret
sbb
and
mov
pusha
add
ficompl
push
fsubr
push
ja
negb
sti
imul
cld
pop
inc
lods
lds
cmp
vpminsq
pusha
sti
call
daa
mov
enter
mov
adc
rcrl
push
lea
cmp
mov
js
jnp
mov
lret
push
xor
pop
stos
mov
insl
xchg
fimull
adc
ds
or
test
mov
dec
int3
adcl
sub
ds
fwait
adc
xchg
xchg
push
xor
push
ljmp
scas
push
ljmp
repnz
dec
jge
test
loop
bound
clc
xlat
imul
jp
ret
mov
jnp
jnp
lcall
inc
aam
sbb
out
pop
cmp
add
dec
cli
and
push
push
dec
mov
push
gs
fmull
dec
inc
add
xchg
adc
sub
fisttpl
cmp
jp
sti
lea
shrb
jecxz
rcrl
faddl
insb
outsb
mov
out
adcb
enter
fildll
xchg
inc
inc
cltd
jmp
pop
jnp
loope
mov
dec
pop
clc
hlt
lock
sbb
fstpl
mov
mov
popf
sub
les
xlat
cmp
lods
xchg
sub
mov
mov
mov
stos
lcall
das
and
je
neg
fwait
mov
pop
sub
aam
pop
inc
sti
mov
aas
adc
inc
pop
fwait
cmpsl
repz
lds
bound
int
cmpsb
ficomps
and
loop
mov
mov
or
shrb
ret
arpl
adc
stos
insl
push
or
pop
hlt
adc
inc
xchg
sbb
add
in
mov
jp
rclb
aad
sub
out
mov
pop
andl
xchg
xor
aad
xchg
mov
cld
mov
lret
int
xchg
jne
cmpb
pop
add
adc
adc
ret
cmp
sbb
or
inc
mov
insb
adc
mov
addr16
mov
mov
push
lret
and
in
mov
mov
jae
or
filds
and
movsl
sbb
mov
xchg
cmp
arpl
aaa
test
add
jbe
in
sub
mov
xor
sbb
xor
mov
shll
mov
pushf
gs
push
je
aad
add
xor
hlt
mov
jmp
mov
xlat
jae
push
daa
jg
fisttps
loope
rorb
and
sbb
jbe
in
xchg
mov
xchg
sub
xchg
out
add
xchg
rcll
nop
out
mov
push
adc
pop
insb
jnp
scas
insl
inc
mov
push
loop
mov
add
xchg
lods
hlt
mov
inc
lahf
das
add
testb
mov
push
subb
add
inc
cmp
imul
outsb
ficompl
pusha
dec
ficoms
cmpsb
out
pop
sub
pushf
int
sbb
add
pop
das
loope
fs
mov
cmp
ss
test
or
shl
pop
xor
mov
xchg
push
pop
pop
push
lds
xor
mov
cmpsb
int
pop
jo
push
popf
add
mov
gs
mov
xchg
out
jg
lea
popa
pop
daa
dec
adc
ss
scas
and
cltd
nop
dec
in
inc
adcl
pusha
pop
add
cmc
sti
adc
sub
adcl
roll
xchg
dec
push
mov
dec
and
xor
jmp
jne
jmp
popa
adc
push
push
cmpsb
or
adc
mov
add
sub
stc
shlb
add
xchg
xor
mov
xchg
not
nop
cmc
pop
int
cmp
aaa
jae
push
shrl
sti
insl
xor
ficomps
cmp
loope
ja
imul
and
adc
loope
pop
adc
add
jnp
clc
cmp
imul
jmp
and
lods
push
mov
sub
xchg
mov
nop
popa
or
xlat
lret
add
test
ljmp
dec
outsb
cmc
adc
adc
mov
or
dec
popa
je
add
ja
push
mov
mov
or
fadd
push
jb
cmp
ret
adc
imul
push
cmp
push
shlb
jle
inc
sbb
jno
mov
cli
dec
lds
xor
xor
mov
mov
pop
sub
jo
push
cmp
add
arpl
loope
push
xlat
jle
xor
mov
outsl
mov
sbb
stc
stc
test
or
xchg
lret
dec
sbb
and
out
test
add
push
cmpsb
cld
lods
jg
pop
lcall
hlt
cmp
fildll
jno
xchg
aaa
into
xchg
inc
sbb
pop
testb
inc
cld
dec
mov
loop
inc
xor
jle
enter
sahf
pushf
add
bound
sbb
inc
cli
daa
jae
xchg
add
std
ret
mov
cmp
into
mov
lock
shlb
cmp
push
enter
repz
jmp
xor
dec
sbb
pop
push
andb
xor
lahf
mov
cmp
out
sub
cld
popa
xor
rorb
jge
xor
rorb
fs
sub
sbb
jno
push
cmp
sbb
leave
and
xor
add
mov
push
mov
jmp
inc
adc
or
cmpl
xor
adc
push
movsl
loop
sbb
or
sbb
inc
loop
call
pop
fsubr
stc
and
cli
fwait
or
pop
sub
popa
cld
mov
pop
ja
jecxz
sti
mov
sarl
xchg
cltd
insb
xchg
out
and
sub
rcr
ret
mov
push
dec
out
imull
imull
mov
clc
addl
xchg
push
cmp
jl
lret
sub
push
test
shlb
lds
aad
xchg
fsubl
repz
movsl
mov
sbb
cmp
adc
dec
repz
sub
das
inc
movsb
stos
lret
in
xchg
lret
mov
jecxz
push
sbb
xchg
dec
jmp
rolb
sbb
out
mov
adc
adc
data16
adc
jns
lahf
push
jl
pop
mov
mov
sub
mov
fistps
in
sbb
sbb
imul
stos
push
mov
pop
sti
lcall
sbb
pop
jl
outsl
neg
call
xchg
xchg
add
hlt
pop
dec
jno
mov
xchg
cltd
stos
push
xchg
lock
cmc
mov
scas
cmp
arpl
mov
lods
push
mov
fs
mov
sti
dec
inc
lahf
push
push
lahf
in
jno
fcomi
ja
dec
je
or
push
mull
fcomps
ret
mov
xchg
jo
xchg
outsb
mov
cmp
sub
add
roll
pushf
jo
mov
adc
dec
xchg
cmpsl
cmp
repnz
sbb
push
inc
xchg
xchg
push
xchg
and
mov
rcrb
xor
icebp
pop
ds
adc
push
inc
mov
xor
jl
popf
jns
pop
dec
hlt
add
dec
mov
test
xchg
lret
mov
mov
stc
adc
push
test
jl
sub
push
sbb
pop
rcrb
out
dec
ja
cmp
shl
add
es
push
outsb
stos
hlt
sbb
add
sti
pop
outsb
push
fadds
push
arpl
mov
iret
fnstsw
cmp
outsb
stos
pop
mov
pop
scas
inc
dec
das
push
sub
sahf
lock
mov
push
pop
lock
ss
lods
xlat
jge
or
sub
push
push
xchg
lret
xorb
and
jnp
call
pop
js
adc
sbb
in
fxch
cli
imul
inc
push
dec
iret
sti
push
xchg
jle
jmp
add
mov
into
iret
daa
clc
pop
test
push
sub
xchg
in
pop
inc
pop
adc
in
mov
push
sub
sub
popa
inc
push
movsb
dec
sahf
cmp
test
xchg
cmpsl
xorb
ret
xchg
cmpsl
cmp
or
test
jmp
inc
mov
mov
fs
mov
pop
mov
pop
jecxz
sub
inc
xlat
mov
xorl
cwtl
sub
xchg
adc
lcall
dec
jne
push
rcl
sub
jp
push
mov
pusha
xchg
in
mov
test
xor
int
mov
jno
int
movsb
out
pop
in
out
sub
arpl
insb
add
inc
and
mov
test
test
dec
lock
add
adc
jmp
sbb
mov
dec
push
mov
mov
or
sub
inc
jmp
arpl
sbb
cmpsb
cmpsb
mov
mov
push
jl
cs
js
jnp
lds
aas
inc
pop
xor
cmpsb
inc
and
inc
cmp
push
test
cmp
adc
pop
xor
aaa
cltd
cwtl
jmp
test
scas
push
adc
mov
cmc
std
jnp
aam
jle
test
test
sub
stos
mov
data16
mov
xrelease
mov
sbb
divl
inc
std
mov
fidivrs
movsl
movb
mov
mov
pop
call
in
and
jl
aaa
je
imul
pop
dec
ret
sti
call
jmp
cs
rolb
ss
test
inc
or
sbb
and
out
pop
mov
and
cwtl
pushf
sbb
xchg
cltd
cmp
push
aaa
mov
je
jle
cmp
jbe
mov
shr
xlat
insb
lcall
push
shr
mov
and
dec
je
imul
ret
push
or
sub
lods
sbb
sbb
shll
shrl
rcrl
sbb
in
adc
or
das
cmp
inc
aaa
xlat
mov
kmovb
lock
mov
and
hlt
enter
or
repnz
adc
sarb
lods
repz
sub
ret
sub
sbb
rorl
mov
pop
call
or
rolb
shlb
repz
xchg
mov
mov
mov
jg
jge
das
ret
jnp
ljmp
mov
pop
je
mov
and
test
xchg
les
std
lcall
push
fwait
pop
sbb
outsb
pusha
lock
jno
cwtl
and
cwtl
fcom
or
dec
adc
jge
jns
lea
ss
pop
loopne
mov
adc
lea
inc
or
dec
sti
sahf
cltd
lea
outsl
jno
into
insl
xor
out
hlt
jno
rol
dec
out
xchg
sahf
jbe
enter
fdivrl
cwtl
clc
js
fldl
jl
cmc
ljmp
pop
mov
ja
lock
loopne
fbld
mov
xor
adcb
fistpl
adc
hlt
lret
call
sbb
sub
fwait
cmpsl
scas
or
loop
lods
js
ss
mov
push
and
outsl
enter
jo
enter
or
cwtl
loopne
decb
test
xor
mov
outsl
lea
xchg
jge
adc
sub
insb
jmp
adc
add
lea
lret
mov
mov
pop
mov
push
cmp
sub
outsb
xor
push
pop
push
mov
call
jp
out
mov
push
mov
add
shrb
stos
xchg
jb
push
das
jl
push
cmpsl
lret
inc
push
inc
adc
lret
test
and
cmpsl
ja
inc
dec
push
repz
jge
sarb
mov
sbb
outsb
rclb
arpl
imul
sar
and
pop
pusha
jmp
shll
stos
push
int3
inc
cmp
mov
jnp
add
arpl
popf
jle
ret
xor
rcll
ffreep
stos
outsb
in
test
or
into
cmp
jbe
in
lcall
pop
clc
imul
xor
pop
filds
sti
dec
inc
aam
mov
sub
xchg
push
push
cmp
stos
adc
or
adc
fiadds
mov
cmp
fwait
fs
gs
xor
pop
rol
inc
cmc
into
lods
cmp
out
test
lcall
jne
jp
shrl
sub
enter
push
jecxz
inc
dec
fadd
and
addr16
insb
test
mov
in
pushf
jnp
test
cld
add
mov
pop
xchg
btr
out
ror
mov
pusha
mov
xor
mov
scas
notb
es
sub
mov
lea
mov
clc
xchg
jp
push
push
incb
shrb
cltd
jnp
sarb
push
jmp
pusha
cmp
mov
and
inc
or
lds
lods
cmpsb
xchg
sahf
negl
movsl
shll
lock
mov
clc
mov
das
loop
sbb
jmp
xchg
shrl
dec
sub
jnp
popf
sbb
aam
sub
gs
int
lock
or
pop
nop
rol
loop
or
push
xor
cmp
incl
push
sahf
jo
jg
xchg
test
fadd
xor
inc
orl
insl
adc
movups
pop
popf
or
mov
dec
cmpsl
stc
or
test
int3
sbb
dec
cmpb
mov
add
pop
jns
lock
cli
aaa
ret
iret
cwtl
pop
lock
inc
iret
mov
loop
fs
or
mov
out
ljmp
lock
dec
xor
dec
sub
bound
popf
add
and
mov
enter
into
cmp
imul
lods
or
das
jmp
in
and
or
mov
leave
sbb
popf
jmp
orl
xlat
push
sub
or
jmp
je
push
dec
test
mov
mov
gs
xchg
out
pusha
push
shll
pop
jmp
dec
adc
cmp
movsb
test
sub
es
push
pop
sbb
jbe
add
ret
push
inc
push
mov
out
nop
lods
sub
xchg
xlat
stos
pusha
jle
inc
out
xchg
mov
cmc
into
adc
mov
push
roll
mov
ret
dec
jecxz
enter
loopne
xor
loope
or
sbb
add
or
add
mov
insl
mov
push
sbb
jl
jp
cltd
pop
es
in
adc
sub
mov
roll
int3
xchg
ficomps
xor
pusha
sbb
cmp
cmc
sbb
sahf
jb
rcrb
adc
mov
push
into
pushf
movsb
mov
shrl
ss
in
push
out
cmp
add
push
fadds
push
cmp
mov
arpl
sub
sahf
call
popa
adc
xchg
adc
cmp
push
pusha
movsb
ret
sub
cmpsl
add
stc
shr
add
mov
cltd
sbb
sarl
enter
jno
mov
inc
jno
push
mov
sub
shrb
mov
rcrl
jmp
daa
and
jbe
lock
mov
jecxz
sub
adc
fisubrl
and
loope
enter
repnz
out
pop
sbb
sub
ficoml
inc
cmp
loopne
xor
or
lea
mov
lcall
adc
divl
sti
loopne
test
xlat
adc
fldenv
fdivrs
shll
andl
loope
and
mov
mov
stos
xor
push
and
pop
dec
iret
xor
rcrl
sub
out
loopne
sub
push
adc
mov
mov
xchg
stc
adc
jg
sbb
divl
xchg
mov
mov
adc
mov
dec
adc
pop
cs
pop
and
sbb
stc
add
int3
aam
fiadds
sbb
add
jns
xchg
jae
push
mov
lcall
push
push
sbb
ja
out
dec
enter
imul
xor
hlt
std
and
frstor
popa
jp
jne
push
or
pop
insl
incb
in
cmp
push
xor
or
mov
push
mov
idiv
sub
dec
stos
shrb
fcmovu
sub
xchg
xchg
pop
jo
add
adcl
jmp
adc
fdiv
stos
sahf
cmpsb
stc
push
sbb
adc
je
dec
mov
arpl
push
lods
out
call
jo
inc
or
insl
add
jno
pop
repz
jno
ja
sub
adc
movsb
fsubs
pushl
or
in
ja
inc
add
cmp
cli
aam
insl
ja
mov
cmp
cmp
dec
lret
adc
inc
mov
jnp
negb
lahf
test
stc
pop
test
icebp
sbb
xchg
add
or
mov
and
push
or
push
movsb
subb
mov
addl
subl
cmp
fsubrs
push
negb
lods
adc
pushf
mov
mov
sahf
nop
inc
aam
mov
dec
push
mull
sub
fwait
sti
sahf
cmp
bnd
pop
and
ja
pusha
aam
and
and
arpl
aam
fs
mov
push
sub
dec
or
push
loopne
or
rcll
aad
adc
xchg
dec
test
popl
inc
subl
ret
js
sti
cmp
jg
adc
ljmp
jmp
in
sbb
sub
fimuls
iret
sahf
jo
lods
mov
cs
stos
sub
cltd
dec
pop
pop
aaa
cmp
jnp
mov
ljmp
rclb
jmp
lods
mov
pop
je
and
adc
mov
inc
jo
mov
cltd
lea
mov
and
or
pop
rcl
shll
xchg
sbb
idivl
dec
adc
xchg
inc
dec
pop
divl
out
inc
fildll
je
ficoml
cmpsb
insl
sbb
adcb
ja
test
sub
mov
push
fstpl
sarl
sbb
mov
mov
stos
dec
and
mov
shl
mov
dec
or
insb
inc
xchg
insb
push
scas
ja
adc
xchg
imul
cmp
cltd
mov
mov
scas
ret
mov
fcmovnbe
jo
mov
sbb
in
cltd
and
xor
hlt
loopne
jno
ret
xor
mov
adc
pop
adc
xchg
add
push
ljmp
ret
rcll
dec
xor
mov
aaa
lods
xchg
scas
scas
outsl
mov
push
js
movsb
inc
mov
push
jg
inc
lret
add
hlt
lahf
outsb
outsl
add
adc
jmp
sbb
jge
mov
xchg
jae
add
adc
punpcklbw
inc
push
mov
push
in
push
imul
jns
clc
and
cld
std
popa
inc
inc
daa
movb
dec
xchg
jecxz
xorl
je
in
stc
rolb
pop
xor
inc
clc
imul
mov
daa
adc
cli
mov
aaa
pop
xor
pushf
xchg
sbb
jmp
or
xchg
roll
hlt
jl
sarl
mov
test
mov
andl
scas
fdivrl
add
out
push
push
xchg
sub
push
scas
jns
mov
roll
hlt
in
xchg
fsubl
popf
sti
out
push
or
xlat
dec
std
je
scas
cmpsb
or
mov
daa
and
orb
or
bound
fldenv
movsb
pop
xlat
cmp
mov
xor
rcll
sahf
push
out
jge
popa
mov
adc
jge
sbb
push
out
adc
cmp
ret
outsb
mov
std
hlt
mov
lock
push
ds
cwtl
imul
jl
lods
lret
add
mov
xchg
or
sti
stos
dec
jno
les
popa
pop
outsb
lar
fsubs
scas
xor
dec
fldt
cmp
aas
dec
in
sarl
sub
jo
jg
jle
pop
repz
pop
add
out
push
adc
xor
loope
ror
test
jno
jl
int3
and
mov
shrl
lcall
sbb
jno
fidivs
push
nop
mov
or
in
mov
dec
mov
ror
into
pop
dec
movsl
xchg
inc
xchg
jbe
mov
lods
insl
mov
insl
mov
add
bound
int
cli
lahf
add
ret
test
mov
ljmp
xchg
mov
movsb
jbe
sbb
les
popa
mov
outsb
sbb
ret
inc
push
clc
and
mov
movsl
pop
xor
or
mov
pushf
inc
mov
dec
cwtl
test
cs
sbb
test
movsb
iret
mov
fs
lock
jecxz
aas
loopne
inc
roll
add
fs
daa
xchg
jo
fcoms
dec
xchg
in
pop
lret
mov
dec
cmp
sbb
inc
xor
mov
sti
std
add
cmp
dec
lret
test
repz
dec
addb
mov
fsubl
inc
insl
sbb
lods
or
inc
pop
xor
popa
lods
vmovsd
sbb
pushf
or
inc
call
push
sbb
fwait
xchg
int
stos
lahf
inc
sub
dec
cmovne
roll
mov
lcall
cltd
push
jp
push
mov
jnp
mov
ss
xor
or
popf
jne
xor
mov
leave
fwait
aas
and
gs
pop
fisttpll
dec
jne
mov
cmp
pop
into
shll
and
idivb
adc
dec
sti
adc
xchg
xchg
fisttpll
rorl
adc
inc
adc
scas
and
mov
ljmp
or
enter
mov
aam
aam
jae
aad
pop
jnp
or
or
xchg
cmp
xor
je
add
in
fidivrs
leave
cli
lahf
adc
lahf
push
mov
push
stos
inc
rorb
inc
orb
cmp
mov
cmp
out
repnz
sub
adc
pop
sub
push
ret
pushf
cmp
in
mov
mull
mov
dec
pop
xor
pop
dec
fwait
adcl
xchg
cwtl
imul
sbb
fists
rolb
pusha
jle
andb
mov
loopne
test
cwtl
int3
sbb
mov
popa
xchg
in
sub
mov
ficoms
les
push
mov
shrl
add
inc
shll
loope
testb
push
xchg
adc
or
add
popa
xchg
jno
sub
dec
pop
pushf
decl
inc
or
inc
sbb
sub
int3
or
inc
ljmp
add
xorb
push
sbb
mov
or
shrb
cmp
jns
cmp
sbb
or
ret
or
jno
xlat
fstpl
in
loop
mov
mov
pop
inc
xchg
mov
xor
xchg
loop
push
xchg
sbb
cld
subl
sub
or
mov
and
rolb
sub
xchg
lods
std
push
jp
fdivs
sbb
push
dec
scas
add
cltd
nop
cmc
orb
sub
push
clc
mov
ret
push
in
mulb
push
push
out
scas
xchg
mov
cs
adc
xor
mov
aam
notb
adc
and
add
fcmovnbe
push
idivb
pop
ja
inc
pop
lea
pop
mov
repnz
push
xor
lods
jnp
pushf
enter
scas
push
mov
std
dec
adc
sub
push
dec
xchg
in
dec
movsl
fiaddl
ds
add
push
shll
int
adc
mov
inc
push
push
scas
pop
es
ljmp
cmp
int3
test
in
movsl
int3
or
lea
jmp
cmp
out
hlt
jno
cmp
testb
adc
imul
js
mov
jp
mov
lods
xchg
aas
jg
adcb
repz
push
loop
or
fwait
cmp
out
cmpsl
iret
jg
scas
test
mov
and
xor
sarb
call
shl
aas
jbe
fld
and
ljmp
mul
mov
pop
jb
mov
and
fdiv
sub
mov
sub
call
mov
cmp
cld
cmc
leave
in
js
xchg
pushf
cwtl
cmp
int3
jo
cld
or
imul
sub
and
and
and
popa
in
add
and
mov
or
add
xor
dec
add
sbb
rol
mov
dec
stc
insb
insl
pushf
rorb
mov
dec
adc
cmpsb
sbb
xlat
dec
icebp
aaa
mov
and
and
sbb
testl
pop
sti
and
neg
jmp
jbe
or
xor
push
gs
lock
clc
dec
jmp
shlb
mov
mov
ret
pusha
pop
sarb
xchg
mov
inc
sahf
fsubs
and
aaa
decb
shlb
jno
dec
push
push
test
sbb
mov
arpl
das
and
push
or
es
push
stos
mov
aas
jno
push
push
cmp
jle
leave
pop
lcall
cmpsl
aam
push
push
stos
mov
add
mov
inc
jmp
jmp
jge
xchg
daa
outsl
lods
jnp
popa
movsb
and
push
mov
add
push
sub
mov
int
arpl
mov
jnp
mov
fisubrl
pop
sar
cmp
out
vpunpcklqdq
push
jo
cmp
jl
mov
movsb
pop
mov
ror
xor
inc
loope
cmp
mov
test
pusha
test
fadd
jae
mov
cmp
lea
sbb
clc
inc
push
mov
jl
rol
sahf
hlt
xor
xor
aad
push
repnz
fwait
sbbb
inc
insb
movsb
add
xchg
adc
in
cmp
hlt
inc
adc
push
or
cmp
imul
cmpsb
addl
stos
lods
xchg
mov
clc
outsl
mov
jae
add
imul
daa
pushf
insl
int3
cmp
jp
xchg
call
sub
mov
fs
into
mov
sbbb
cmpsl
jge
push
test
or
js
movsb
hlt
adc
and
fadds
jl
cltd
jns
outsb
in
lahf
mov
sbb
pop
fisttpl
addr16
popf
mov
mov
arpl
gs
fcompl
xorb
mov
sbb
cltd
imul
lret
in
lock
cmp
add
push
ret
scas
mov
out
cltd
cmp
inc
mov
scas
sub
sbbl
mov
dec
pusha
ret
push
lods
mov
cmp
xor
divl
js
ret
xchg
dec
in
cmpsb
lock
xchg
loop
and
loope
mov
jp
jp
pop
inc
xchg
lods
mov
adc
stos
std
sub
sbb
les
sub
or
mov
lea
push
mov
or
repz
lods
dec
cs
sub
adc
aaa
movsb
xor
ss
fcompl
jmp
dec
xchg
dec
push
shl
mov
push
cmpsb
daa
repz
popa
test
lcall
scas
repz
js
mov
aad
jg
cmp
popa
ficomps
cmp
das
mov
aas
clc
out
inc
cmc
fcomi
xchg
lret
leave
xchg
push
imul
mov
sbb
outsb
lahf
in
xor
call
dec
adc
cmp
mov
stc
adc
xor
jl
cmc
mov
and
daa
pop
popa
pop
lock
cli
xchg
mov
push
in
sub
loopne
fst
xor
das
inc
adc
and
push
xorl
sti
pusha
outsb
sbb
incb
shll
pop
lods
xor
cmp
xor
imul
mov
mov
cmp
imul
cld
add
jecxz
add
jmp
xor
inc
movb
roll
mov
jp
jae
mov
ret
stc
push
test
dec
pop
cmp
jbe
out
adc
xchg
fmull
push
mov
mov
lcall
mov
leave
pop
and
pop
cltd
ror
mov
mov
xor
pop
and
call
cmp
pushf
jno
dec
mov
pop
pop
enter
pand
clc
jl
pop
lret
outsb
and
movsl
imul
test
outsl
lcall
fwait
arpl
mov
dec
in
adc
xchg
mov
out
rcrb
jne
repnz
clc
ficoml
xchg
jb
pop
or
jb
mov
mov
sub
lods
inc
outsb
test
in
cltd
mov
loopne
outsl
or
xchg
cli
lret
adc
mov
mov
push
out
mov
sbb
insl
dec
mov
lahf
shll
push
adc
cmp
pop
sub
mov
ficoml
clc
jle
adc
test
call
sbb
xor
in
push
adc
cmp
jmp
xor
pop
out
push
sbb
loop
or
sub
lock
shrl
cmpsl
loopne
mov
ret
dec
dec
xor
dec
divb
xor
jnp
inc
jae
in
dec
inc
xlat
rcrl
aaa
sub
aas
jns
in
jmp
xchg
push
jae
xchg
in
pop
add
xchg
mov
adc
push
clc
add
jne
jp
cmp
or
xor
mov
mov
mov
jge
mov
loopne
int3
cmp
mov
decl
cmp
fildll
imul
mov
repz
xlat
mov
inc
sbb
push
mov
in
push
xor
cltd
or
sbb
add
and
lods
mulb
lcall
pop
xchg
shr
mov
fdivrs
xchg
or
sub
imul
scas
hlt
adc
push
and
addl
fdivrs
aaa
xlat
out
imul
adc
cld
cmp
es
cmp
jge
ret
out
out
add
aam
jne
push
iret
out
jg
push
sbb
mov
mov
mov
cmp
xor
jns
push
scas
mov
decl
cmp
pop
xchg
insl
pop
movsl
lock
inc
cmp
mov
mov
push
pop
adc
pop
cmp
xor
mov
add
je
push
or
xchg
jae
in
insl
sarb
pop
and
xchg
out
clc
sbb
adc
xchg
jne
and
out
mov
xchg
aad
cmp
aad
sarl
pop
xchg
pop
mov
push
cmp
outsl
stos
mov
push
or
sub
ret
mov
pextrw
adc
inc
int
movsl
mov
push
mov
je
jns
and
fwait
mov
inc
popf
rolb
testl
and
cmc
cmc
sbb
sti
sti
rcll
insl
aam
push
mov
add
cwtl
dec
testl
push
mov
lea
dec
out
stos
lock
push
mov
sti
jno
aas
jmp
mov
inc
pop
cld
mov
dec
mov
mov
pop
cld
add
mov
xchg
and
scas
arpl
mov
sbb
mov
insl
sbb
into
lds
mull
rolb
fidivl
dec
dec
pop
shll
cmp
test
ss
adc
clc
loop
cmp
les
dec
sbb
xchg
jb
adc
cmpsb
das
test
cmp
xor
fbld
pop
mov
jecxz
push
jbe
dec
insl
sbb
sbb
mov
jp
pop
lods
cwtl
add
out
sub
rclb
or
dec
aaa
mov
dec
sbb
outsb
punpcklbw
cmp
xchg
jns
or
popa
xor
int
loopne
aas
int3
test
mov
adc
lds
cli
bnd
xchg
jl
andb
dec
add
mov
gs
inc
inc
and
jnp
pop
sarl
loopne
xor
pop
jmp
in
mov
mov
pushf
ret
inc
pusha
add
jno
xchg
mov
aas
or
mov
cli
add
or
jno
fidivrs
push
mov
mov
and
pop
mov
stos
vmovd
jle
loopne
push
outsl
test
xor
xchg
jmp
subl
add
lret
js
adc
shlb
mov
hlt
mov
sbbl
xor
or
es
ret
arpl
int3
and
cs
and
mov
movsb
or
rcl
sbb
sub
orb
dec
push
clc
jle
pop
std
ret
push
dec
addr16
inc
stos
dec
or
jne
out
movsb
mov
or
pop
fsubrp
in
jmp
mov
push
jns
mov
in
pop
push
test
mov
or
mov
call
pop
mov
ficoml
adc
xor
imul
sbb
push
scas
jge
cmp
jge
lret
js
lea
adcl
cmp
xor
fisttps
jmp
insl
outsb
mov
inc
outsl
lds
dec
cli
rorb
xor
or
addr16
imul
pop
sub
cmp
fdivs
sbb
aas
aad
xor
jecxz
pop
cld
movsb
loop
in
cli
sbb
mov
inc
cltd
dec
dec
sub
mov
scas
sbb
popf
mov
inc
mov
adc
mov
ljmp
addr16
repnz
mov
mov
ja
jmp
mov
sarb
push
imul
sub
and
add
adc
stc
lods
jge
sub
cmp
sti
mov
pop
sub
ds
dec
pop
cmpsl
fnsave
jb
ja
pop
jecxz
mov
lret
xchg
in
adc
push
jb
jbe
and
call
mov
xor
popf
dec
dec
les
dec
cli
aaa
icebp
notl
xchg
cmpsb
push
lret
push
cmc
jmp
dec
in
pop
cmpsl
ficompl
xchg
jne
sub
andl
dec
fisttpll
repz
loopne
jnp
std
mov
insb
jae
pop
pop
pop
dec
divl
mov
outsl
jno
dec
jo
cmpsl
add
orl
cld
ds
inc
loopne
nop
pusha
and
lods
mov
cli
popa
push
data16
jb
mov
arpl
rcl
or
mov
out
gs
inc
rcl
in
aam
hlt
mov
sub
cmp
icebp
cld
sbb
jbe
lret
push
sbb
xchg
sarb
pop
xchg
mov
cmp
bound
repz
outsl
fstl
in
test
in
rcl
jbe
adc
in
sbb
cmp
fidivl
dec
push
and
sbb
dec
mov
out
push
adc
cmp
add
dec
jl
cmpsb
and
mov
int
stos
cwtl
ret
aad
pop
cmc
cmp
fstps
xlat
mov
xor
fwait
in
xchg
stos
data16
mul
fwait
jo
pop
sbb
insb
aam
in
pop
adc
cmp
cmp
lahf
and
mov
js
jmp
ret
arpl
xchg
dec
jae
cmp
outsb
loop
mov
jnp
ds
call
gs
shrb
int
jno
out
imul
inc
xchg
repz
in
push
add
loop
jne
inc
mov
xlat
and
push
cmp
jns
icebp
cmp
test
cmp
xchg
push
addl
add
jne
stos
mov
adcb
fwait
lods
jge
jae
adc
out
fidivrl
je
and
adc
mov
in
jbe
popf
stc
jbe
icebp
dec
lahf
cld
and
or
enter
mov
mov
or
stc
je
push
fdivrl
and
fcomps
mov
or
fwait
mov
mov
adc
jbe
xor
xchg
sbb
push
mov
js
mov
leave
fwait
inc
and
jmp
pop
or
aas
lods
mov
push
ja
shrl
dec
fs
mov
pop
jbe
subb
pop
mov
push
cmp
cmp
hlt
ss
ljmp
test
pop
mov
sbb
xor
lret
lds
icebp
pusha
cmp
mov
in
inc
adc
mov
and
out
out
cmp
dec
sub
orb
sbb
test
jp
or
jg
rorl
jb
test
jo
aaa
pop
jg
repz
xlat
and
push
mov
xor
ja
xlat
lret
outsb
cwtl
jae
pop
sub
mov
sub
cmova
loop
fildl
fistps
imul
rcll
hlt
mov
pop
push
das
leave
and
stos
push
inc
mov
push
inc
sub
lret
inc
pop
fldt
cli
loope
push
cli
sub
lcall
adcl
jmp
movsl
mov
cli
push
cltd
and
mov
movsl
insb
fisttps
push
jae
jb
shlb
pop
push
adcl
add
add
pop
jo
nop
pop
fildll
xor
lret
sbb
mov
push
jne
mov
lea
out
jns
scas
mov
stc
dec
or
push
aas
inc
in
push
daa
int3
sub
outsb
or
into
pop
sbbb
loop
je
push
push
lret
icebp
xlat
inc
jbe
fwait
outsb
dec
xorb
jne
xor
scas
out
mov
nop
mov
lret
add
rorb
mov
and
mov
imul
sub
and
mov
out
repnz
and
sub
jmp
pop
sub
mov
lret
sub
scas
aad
test
lds
mov
stos
xor
xlat
cpuid
lahf
js
adc
xchg
or
sbb
mov
inc
aad
mov
push
mov
int
or
mov
scas
cmp
and
enter
mov
xchg
push
dec
lds
outsb
shlb
fimull
ljmp
lods
loop
add
cltd
mov
jmp
out
xor
pop
add
fadd
test
mov
push
push
and
aam
popa
imul
shl
cwtl
mov
cmp
daa
cmpl
mov
test
xchg
movsb
addr16
cmp
adc
sub
leave
popf
jmp
xor
adc
idivl
arpl
mov
mov
pop
add
and
pop
sub
dec
test
cmp
lcall
adc
xlat
inc
push
cmp
add
pop
jnp
repz
cli
das
pop
jle
pop
fs
incl
in
adc
int
fisubs
mov
adc
mov
push
xlat
mov
dec
push
std
adc
in
mov
dec
testl
arpl
shll
stc
ds
dec
adc
jge
aas
pop
mov
ror
jno
lds
leave
ret
imul
int3
movsb
mov
test
inc
push
jbe
pusha
add
mov
loopne
pop
xchg
push
xchg
sbb
or
fnstsw
nop
cmp
inc
push
or
loopne
add
cli
into
and
xchg
xor
mov
pusha
cmp
mov
pop
pop
js
and
mov
sub
xor
in
sbb
bound
dec
add
lcall
pop
test
pushf
and
sbb
sub
or
mov
mov
inc
fs
mov
mov
fistpl
sahf
ss
test
leave
mov
loope
roll
shlb
out
js
bound
in
pop
jne
mov
ret
adcl
cmpsb
mov
xchg
dec
in
xchg
ljmp
pop
fstpt
sbb
subb
leave
imul
push
aas
stc
stos
fidivrl
lods
jecxz
lods
test
fildl
in
shlb
mov
out
int3
shl
cmp
fiaddl
call
mov
test
inc
cmpsb
loop
movsb
dec
shl
and
roll
mov
loop
mov
sub
push
in
test
pusha
jae
dec
scas
out
rolb
or
sbb
and
aas
enter
jecxz
add
adc
push
or
push
fnstcw
addr16
or
daa
add
mov
lock
lods
imul
jbe
cld
inc
pop
fnstsw
dec
cld
mov
lret
jnp
stc
mov
add
or
es
inc
jge
push
mov
aas
xor
and
mov
xchg
cmp
cmp
aas
pop
jecxz
cmp
sub
mov
mov
xchg
ljmp
xchg
pop
outsb
add
adc
inc
or
sbb
jno
sar
js
stos
call
loope
jns,pt
add
mov
mov
fwait
inc
mov
push
add
in
mov
in
dec
sbb
into
sub
test
mov
dec
test
xor
jl
cld
repz
frstor
xor
mov
jae
outsb
fnstcw
dec
jb
inc
out
sub
or
mov
psrld
lock
or
xchg
cltd
shl
stc
xchg
and
dec
addr16
pop
shl
xchg
mov
push
pop
in
into
mov
lds
add
pop
out
push
hlt
out
mov
shl
mov
xor
shr
or
add
sbb
rol
push
test
cmc
out
lahf
mov
jmp
xor
shr
pushf
mov
stos
repz
push
or
sbb
repz
cmp
inc
fsubrs
jne
jp
adc
gs
mov
ffree
add
rcll
fistl
sub
out
aam
xor
jns
into
adc
test
sub
insb
cmp
xor
cmpsl
dec
dec
call
jae
xchg
sbb
call
jnp
cmc
push
adc
into
inc
or
inc
push
dec
js
int
imul
daa
push
jge
rcrb
xor
mov
dec
mov
lahf
pushf
pop
mov
or
int3
fs
sti
inc
pop
adc
jb
popf
mov
push
jne
das
push
cld
adc
enter
xor
push
cmpsb
sbb
push
cmp
push
mov
or
mov
das
jmp
xchg
jmp
cmp
push
sub
mov
jg
jg
ss
out
mov
adc
cmpsl
dec
in
imul
call
mov
fldenv
dec
popa
gs
out
loope
iret
ss
inc
sbb
out
shll
das
sbb
mov
mov
cmpsb
nop
clc
leave
ret
lahf
pusha
adc
cltd
mov
xor
xchg
mov
dec
std
int3
xor
sub
adc
push
adc
fsts
push
cmp
ljmp
inc
popa
add
adc
mov
mov
negl
movsl
sbb
out
or
jbe
push
rcrl
repz
shl
repz
inc
insb
mov
cs
cwtl
int
sub
mov
mov
fwait
jns
das
and
addr16
jecxz
add
jl
loop
adc
cmp
mov
jno
ficompl
pop
mov
sbb
and
iret
pusha
mov
out
sub
fsubrs
stos
jnp
popa
inc
enter
icebp
jo
sbb
jo
lods
je
fbld
roll
jae
test
sub
inc
dec
subl
mov
jp
push
sbb
rorl
repz
fimuls
sbb
movb
daa
mov
pop
push
xor
cmp
stc
inc
inc
jnp
mov
mov
int3
ljmp
mov
xchg
xchg
jecxz
int
movsl
jle
popa
sarl
movsl
les
ds
push
add
push
leave
icebp
les
inc
cmp
adc
ja
ds
lret
aad
imul
arpl
xor
mov
push
sti
and
push
sub
push
inc
mov
nop
xchg
lcall
andl
cmc
out
sub
adc
pusha
add
add
and
cmpsb
push
xchg
mov
jae
xor
xchg
mov
cli
lret
xor
dec
inc
add
xchg
imul
dec
sahf
movsb
enter
push
aam
inc
pop
mov
mov
loope
xchg
xchg
xchg
xchg
lcall
stos
outsb
aas
add
add
mov
pop
arpl
jae
pusha
iret
les
imul
in
aad
cmp
xchg
imul
mov
dec
test
push
mov
clc
xchg
lcall
jne
aam
scas
push
dec
cmc
out
fwait
and
push
jp
fstp
psrld
mov
bnd
cmp
mov
pushl
lods
mov
inc
mov
sbb
mov
sub
imull
cmc
scas
sbb
lods
loopne
lods
mov
cwtl
sub
pop
inc
jge
mov
pop
adc
or
movsb
loop
jno
int
push
in
popf
mov
mov
lock
outsl
dec
pushf
std
and
jp
sub
fldl
test
and
aaa
sub
add
mov
push
or
das
or
and
and
lock
inc
divl
cmpb
mov
mov
adc
pop
dec
lds
cwtl
in
pop
cmp
sub
cmp
push
inc
sahf
inc
mov
sarb
popa
push
inc
pop
ret
repz
les
sbb
jmp
pop
pop
out
jg
stos
mov
mov
pop
fdivl
pop
icebp
pop
push
stos
loope
mov
jecxz
rclb
data16
jne
test
int
aad
mov
add
pop
add
jge
std
mov
movsb
xor
es
mov
lret
mov
pop
out
fimuls
in
pop
fs
xchg
insb
jle
lods
scas
xchg
and
xchg
scas
push
les
adc
lret
or
jg
lret
xor
jge
sbb
sub
mov
sub
lock
pop
mov
push
pop
fsubrl
push
popf
sub
inc
push
dec
mov
jge
daa
push
ja
fmuls
ljmp
sbb
sar
out
dec
aam
test
mov
bnd
pusha
sub
adc
adc
loope
test
cmpsl
cmpsb
sbb
es
mov
dec
xor
adc
in
les
rclb
xchg
jmp
push
mov
fnstsw
mov
adc
das
ret
xor
movb
cmpsl
add
popf
push
and
call
fcomi
or
fwait
sub
push
and
movsl
mov
fistps
out
adc
lds
or
insb
les
sbbl
xor
insb
lock
das
mov
push
in
ljmp
outsb
hlt
sbb
in
adc
cld
or
test
stc
roll
xchg
mov
xor
pushf
pop
inc
xor
mov
sub
adc
addl
mov
clc
outsb
jns
jl
arpl
cmpsb
jnp
push
push
jae
vxorps
ret
mov
loopne
out
int3
add
xchg
int
xor
clc
mov
xor
bound
fs
lock
mov
jle
movsb
mov
mov
int3
add
lods
negb
jecxz
add
xor
push
ret
pop
enter
lock
xchg
jae
loopne
push
enter
cmp
pop
or
pop
pop
sub
mov
ja
ja
pop
push
loop
lcall
scas
into
xchg
fdiv
sbb
adc
inc
mov
in
mov
outsb
push
jnp
jg
xor
push
and
fistl
test
pop
lods
mov
lea
js
mov
pop
push
call
mov
dec
scas
mov
sbb
adc
inc
sbb
iret
test
or
cwtl
and
inc
inc
mov
fmull
shrl
mov
cmp
sbb
mov
push
cld
or
std
ret
orb
leave
cmp
scas
aam
inc
xor
and
cmp
aad
icebp
popa
loopne
sub
or
inc
out
mov
mov
pushl
jmp
cmp
mov
pop
fdivl
mov
dec
mov
sub
daa
dec
xorb
add
fsub
aad
mov
cmovae
xchg
jno
pop
mov
in
pop
jbe
jae
test
push
mov
incl
ja
sarb
add
pusha
int3
or
jae
in
cmc
mov
dec
pop
sbbb
add
pop
fwait
pop
mov
xor
test
jae
xor
sub
sbb
jl
adc
jp
dec
jne
mov
lock
push
xchg
xchg
or
push
lcall
sahf
push
stos
pop
popa
add
mov
jge
mov
xor
das
dec
cmp
cmp
pop
lds
xchg
pop
in
and
imul
pop
dec
add
or
or
push
outsb
movsl
mov
mov
pop
lret
pop
pop
rcrl
aam
sub
xchg
jbe
subl
pushf
push
mov
daa
push
adc
push
decb
je
dec
lcall
inc
push
adc
jp
fisubrl
sub
mov
sbb
sbb
add
mov
mov
sbb
mov
cld
sahf
andl
dec
sbb
sub
andl
jg
enter
aad
lock
testb
movsl
sbb
rcll
jo
xor
stos
js
cmp
mov
fildl
add
rclb
cltd
cmpsl
dec
dec
xchg
dec
mov
int
scas
testb
pushf
enter
addl
and
out
pop
into
inc
daa
push
sub
inc
sbb
shrl
dec
and
mov
sub
in
mov
adc
cmp
xlat
test
ret
lock
xchg
lahf
mov
mov
fistps
dec
lahf
ja
movb
sub
dec
nop
cmp
loope
mov
out
lds
mov
mov
mov
dec
xchg
int
test
pop
mov
add
test
cltd
add
inc
xchg
xchg
pushf
mov
push
and
push
jp
sbb
imul
das
lods
ret
repz
outsb
jnp
lret
dec
and
or
js
scas
arpl
jnp
fildll
lcall
movsl
flds
and
pop
es
sub
shrb
push
shlb
xor
sub
fiadds
sbb
addb
mov
adc
in
fmuls
loopne
sbb
icebp
or
mov
ret
popa
add
lea
sti
jp
aam
xchg
popa
inc
add
shll
add
daa
and
adc
mov
sarb
push
lret
push
mov
cmp
shr
je
add
ret
aam
test
or
pop
rcll
lahf
addr16
mulb
and
or
xor
cs
jno
sub
add
adc
sbb
sbb
mov
cmpsl
cmp
out
rcrb
inc
addr16
in
lds
or
outsl
popf
jno
cld
int3
repnz
test
outsb
aas
das
lods
jmp
mov
and
cmpsb
add
lret
and
icebp
lret
outsl
or
jle,pt
mov
rcrb
clc
and
adc
lcall
inc
aad
lcall
pushf
dec
inc
fsubrs
std
in
mov
inc
push
xor
sbb
dec
fwait
pop
ds
sarl
mov
test
xchg
cmp
ret
mov
loopne
lds
sbb
out
dec
popf
xor
dec
inc
cwtl
jge
shrb
dec
mov
andb
insl
shlb
xor
rcll
xchg
cmpsl
mov
mov
xchg
movl
insl
fadds
lds
std
fdivrl
xor
xchg
push
cmp
push
imul
dec
jns
pop
nop
xchg
outsl
push
cs
cmp
push
jp
pop
mov
push
mov
adc
push
repnz
shll
roll
adc
into
popa
xor
inc
and
addl
jns
les
pop
vmwrite
add
cli
dec
and
inc
jbe
ds
data16
mov
mov
sub
in
jns
scas
sahf
mov
sbb
leave
out
test
repnz
cmp
pop
mov
xchg
cltd
addr16
nop
mov
xchg
lods
add
push
test
popf
jno
mov
xchg
sbb
jno
jecxz
add
dec
out
gs
mov
cmp
jl
pinsrw
mov
and
rcrb
or
pop
stc
add
imul
in
jg
pop
sub
push
fstps
ja
sub
dec
mov
and
mov
push
popa
sahf
xor
jo
add
outsb
mov
mov
sub
leave
inc
out
cltd
popf
shrb
push
insl
push
cmpsb
ficomps
jno
and
clc
repz
xchg
xchg
js
js
in
pop
cltd
inc
es
cs
inc
fs
push
testl
mov
scas
stos
dec
jne
mov
lods
xchg
test
subb
mov
sub
ficomps
pop
lods
cmp
bound
xchg
adc
sbb
sbb
sbb
jg
inc
sqrtps
fistps
lret
add
pop
and
and
add
fwait
or
cltd
jle
pop
cmp
mov
push
jnp
adc
mov
cmp
sub
movsl
pop
leave
shll
iret
ja
xchg
pushf
stos
jbe
adc
cmp
xchg
sti
xchg
in
lock
dec
pop
es
or
xchg
push
mov
mov
lods
cmp
jno
loope
call
rcll
xor
push
sti
cmp
push
jp
jge
or
loopne
jl
mov
mov
pop
or
pop
xchg
faddp
push
cli
sub
addr16
popf
ljmp
leave
movsb
adc
fidivrs
hlt
inc
pop
dec
nop
loope
pop
les
cld
xor
ds
repz
repz
decl
movsl
repz
xchg
jp
sub
daa
jbe
shr
sbb
ja
std
xchg
and
sbb
adc
or
sub
jecxz
add
imul
push
outsb
cld
jns
xlat
decl
dec
or
lea
pop
add
xchg
push
mov
mov
add
dec
sti
enter
inc
adc
xor
lahf
test
movsl
vpsubb
xor
mov
imul
jnp
js
cmovp
jl
cmpsl
push
loop
dec
cwtl
out
xchg
lods
mov
testl
inc
ficoms
xlat
loope
movsl
sub
aad
lods
xor
adc
bndldx
pushf
dec
jge
add
push
clc
decb
popa
mov
cltd
push
cltd
sahf
mov
in
es
ffree
dec
mov
mov
cmp
aaa
and
neg
push
or
mov
push
pusha
cmp
pop
push
mov
mov
mov
xchg
shrb
ficomps
rcrb
hlt
in
xchg
jp
loop
sbb
es
jnp
jbe
test
enter
adc
xor
sub
add
mov
sarl
sbb
aas
pop
cmp
adcb
mov
adc
mov
mov
and
ds
mov
cld
dec
ret
mov
jmp
leave
mov
repnz
xchg
ss
ss
cmp
inc
add
cmpsb
stc
jmp
decl
rolb
xchg
mov
dec
mov
popa
mov
dec
shlb
shll
push
adc
pop
add
in
dec
popf
pop
sub
push
leave
xchg
jle
mov
adc
or
or
shrl
push
js
adc
mov
rorb
push
adc
arpl
pop
int3
gs
lahf
pop
jmp
loop,pt
sbb
stos
mov
mov
adc
popa
fisttpl
movsb
sbb
sub
fcompl
add
push
je
adc
cmpsb
mov
nop
stc
adc
loope
sbb
or
and
and
push
call
xor
loope
rolb
mov
sti
pushf
lret
std
jo
xor
mov
lds
into
pushf
fs
jbe
cmp
push
lods
jmp
fimull
mov
sub
test
xlat
sub
andl
jp
xchg
jno
push
pop
lea
mov
sbb
enter
subb
in
dec
into
adc
jne
push
pop
xor
ret
insb
in
fldt
pop
pop
sub
xorl
mov
ret
and
or
arpl
ret
push
lds
aad
sub
popa
adc
cs
flds
scas
mov
add
xor
push
aad
mov
movsb
fs
repnz
or
cmpsb
jp
xor
aas
rcll
addr16
dec
add
jns
call
adc
mov
leave
sar
sbb
js
sti
push
loope
add
repz
leave
xor
sub
repz
mov
and
cmpl
movsb
xchg
xor
dec
xchg
xchg
inc
and
dec
jl
mov
lret
dec
sub
xchg
sbb
adc
xor
mov
lret
aas
les
jno
push
inc
out
mov
jne
lods
lods
add
xlat
dec
scas
repnz
daa
jle
cltd
icebp
les
lock
push
test
gs
shll
add
sub
and
xor
lods
mov
data16
dec
cs
push
ss
rorl
imul
and
or
lds
enter
sbb
jae
dec
mov
sub
imul
out
aas
mov
sbb
xor
inc
std
adc
inc
cmp
cs
enter
gs
nop
and
xchg
jg
pop
les
out
dec
dec
outsl
cmp
adc
mov
and
ret
ljmp
sti
sub
rolb
mov
lcall
mov
cli
mov
lods
gs
mov
xorb
je
popf
bound
jecxz
outsb
lods
cld
inc
pushf
into
and
cmpb
dec
adc
cmp
dec
push
cs
jle
fwait
pusha
test
lock
ja
xor
adc
add
jl
insl
xlat
insl
gs
call
cli
cmpsl
sbb
or
add
xorb
into
pushl
pop
ret
inc
in
jecxz
mov
jmp
nop
insl
push
adc
pop
add
or
sbb
cmp
xor
ds
pop
cli
loop
xor
negb
call
or
lahf
mov
dec
fmul
hlt
repz
popf
or
pop
and
pop
lods
mov
inc
std
repnz
andl
fdivs
in
mov
pop
xor
xchg
inc
ljmp
sbb
sub
ret
push
jno
and
int3
pop
xor
cmp
shll
sti
cmp
cmpsl
dec
jb
mov
mov
xor
sub
pop
out
fsubl
fsubl
xlat
nop
push
iret
testb
push
dec
adc
sub
push
add
test
shlb
mov
pop
adc
adc
mov
adc
adc
test
cltd
pop
loop
xor
xor
and
and
repnz
outsl
pop
cmp
push
dec
push
pop
shl
loop
sbb
add
adc
jle
iret
inc
test
xchg
dec
dec
ficomps
mov
je
mov
xchg
cwtl
fcompl
adc
push
lret
xchg
jmp
push
add
lds
in
push
stos
insb
or
jmp
and
movsl
nop
je
popa
aas
or
dec
push
loop
add
stc
ret
movsb
inc
fdivrs
bound
dec
es
mov
into
dec
pop
stos
sub
call
xor
dec
adc
clc
xor
adc
xor
cmpl
or
jo
pop
aaa
jecxz
xor
xlat
push
arpl
cmpl
jbe
xor
fs
in
into
adc
xchg
jno
xor
pop
xchg
icebp
scas
aam
sub
pop
lret
pop
dec
jle
sub
pop
cmc
lret
xchg
inc
cld
adc
sbb
pop
hlt
mov
out
movl
addr16
aam
push
or
fnstsw
mov
cmp
sub
outsb
push
nop
pop
pusha
jae
jnp
fnstsw
adc
ret
int
enter
std
push
adc
test
sbb
addb
mov
stos
mov
push
add
cli
mov
cmp
sub
jl
adc
test
rorl
std
or
rorl
xor
sbb
ljmp
bound
jno
shr
push
mov
pop
or
add
lock
leave
iret
jo
cmp
or
sub
sub
push
mov
xchg
jge
mov
sbb
mov
rorb
repnz
cwtl
xor
loope
call
test
test
inc
aam
add
fwait
pop
mov
xor
aam
fcoms
add
add
sub
jne
mov
sub
xorl
ret
test
push
push
or
data16
add
cmpsb
ss
sub
mov
dec
insl
push
push
pop
cmp
mov
aas
loop
popf
mov
mov
in
shll
ret
xor
shlb
sub
jns
dec
aaa
ss
test
xchg
sahf
inc
sub
mov
jo
insl
pop
icebp
shr
push
nop
push
adc
mov
aaa
xor
push
mov
xchg
xlat
scas
xor
jb
dec
or
imul
mov
push
ror
movsb
jno
push
movsl
int
adc
loop
cmpl
cmpsl
mov
lret
push
xor
mov
fcoml
sub
push
pop
cmpsl
cmp
sahf
js
mov
arpl
and
bound
popa
mov
lock
out
add
jmp
xchg
add
movsb
add
testl
mov
xor
adc
xchg
rcrl
sbb
lock
out
push
adcb
sbb
and
insl
test
xor
adc
les
mov
lret
cmc
fwait
mov
aaa
add
dec
pop
sbb
mov
adc
pop
cmp
ror
inc
rcll
push
popa
xor
icebp
aas
sub
xchg
ret
xor
mov
jne
sbb
pop
mov
outsl
pop
pop
lds
ja
sbb
inc
cld
mov
pop
call
repz
add
cmc
mov
push
aad
std
fdivs
pop
in
lods
arpl
or
rcl
loop
cmc
ja
sbb
adc
and
scas
push
es
das
dec
cmc
sbb
xchg
in
xor
sbbl
fdivs
int
cmp
push
cmp
dec
xchg
inc
push
dec
out
mov
aad
fwait
hlt
and
dec
subb
dec
ljmp
adc
mov
popa
pushf
jb,pn
loop
adc
dec
loop
and
sbb
dec
cmp
push
mov
popf
decl
pop
fcompp
fs
cmp
mov
shl
in
cmpsb
ss
fisubrs
aaa
xchg
pushf
sub
outsl
in
mov
in
fadd
pop
and
jle
sbb
fdivrl
jne
scas
test
dec
and
xor
sub
or
or
inc
dec
clc
pop
mov
fwait
ret
inc
sub
xor
pusha
cmpsb
xchg
test
enter
mov
jle
pop
mov
stos
stos
cmc
and
push
push
xchg
sbb
xchg
test
xchg
stos
push
pop
rorl
jle
repz
faddl
push
cmp
out
mov
addl
sti
dec
xchg
mov
in
insl
dec
test
std
xor
lods
stos
xchg
testl
cmpsb
inc
sti
inc
lds
jne
sbb
inc
lea
and
push
shl
fldcw
xor
xor
jl
sbb
push
pop
sub
outsb
lods
push
or
cltd
in
sbb
jnp
test
test
pop
movsl
leave
ret
cli
adc
scas
stos
jle
cltd
movsl
mov
test
stc
pop
fistpl
sbb
mov
imul
add
jae
jmp
sub
xchg
xchg
sbbb
mov
mov
rep
or
sbb
mov
xchg
mov
in
imul
mov
xlat
mov
and
in
icebp
jle
int3
shll
pop
cmp
rolb
movsl
hlt
das
lods
push
repz
pop
popl
push
xor
frstor
popa
sub
arpl
jne
or
ror
jb
js
movsb
lods
test
out
or
xchg
jo
bound
sbb
arpl
and
adc
popa
gs
push
stc
and
ud2
lods
out
inc
stos
push
call
outsl
pusha
add
subb
mov
xor
aam
addb
mov
pop
fsubs
int3
cmp
fdivrl
fs
xchg
int
sahf
dec
sarl
or
or
fistl
jl
sbb
lods
push
jno
fbld
xor
pop
jecxz
rorb
mov
notl
lea
xor
or
je
xlat
loope
mov
fmul
lea
mov
les
arpl
mov
push
popa
cwtl
push
test
in
imul
ret
jb
push
mov
add
cmp
cltd
mov
mov
test
fldt
js
cli
or
xlat
mov
mov
in
mov
mov
inc
push
sbb
les
inc
imul
jae
pushf
dec
mov
fwait
insb
loop
sub
lahf
pusha
gs
xchg
ss
cmp
test
das
insb
jno
and
mov
inc
inc
testb
sub
sysexit
lcall
push
mov
jecxz
pop
ficomps
addr16
adc
bound
and
add
test
leave
xlat
xchg
scas
inc
inc
adc
sub
cmpsl
push
imul
jg
fidivl
cs
adc
sbb
pop
into
mov
sub
cmp
clc
imul
inc
xlat
outsb
cs
ss
pop
add
js
je
shl
mov
mov
pop
movsl
repnz
imul
push
outsl
mov
jno
ljmp
iret
orb
push
cmpl
cwtl
mov
stos
mov
and
cli
xor
add
jecxz
lods
xor
add
mov
add
xchg
sbb
xchg
sub
pop
sbb
jbe
xor
test
fucom
adc
lds
mov
sbb
cmp
sahf
cmpsb
push
and
lret
popf
cmpsb
pop
cmpsb
mov
in
popa
mov
dec
sbb
dec
jge
es
dec
add
pop
push
mov
cltd
jns
jne
jo
cmp
arpl
stos
jne
loopne
inc
sub
lret
adc
add
sahf
mov
adc
inc
and
dec
xchg
mov
inc
cs
cmpsb
cwtl
mov
out
inc
fidivrl
stos
pop
mov
call
faddl
lds
push
mov
jnp
insb
push
jg
ss
scas
push
jbe
iret
cmp
jb
inc
fs
ss
mov
dec
jecxz
das
ss
les
pushf
xchg
rcll
sbb
adc
and
call
cld
pop
fs
cmp
fsubrs
xacquire
adc
dec
popa
rcll
pop
xor
mov
dec
dec
inc
aad
into
xchg
arpl
mov
xchg
idivb
lret
movsb
js
repz
inc
cmp
mov
sub
jo
cmpb
cmp
mov
es
les
lea
lock
shrb
push
sbbl
adc
jle
lret
mov
nop
xchg
int
add
pop
sarl
daa
and
out
xor
cld
test
pop
loop
mov
cmp
or
sbb
fdivrl
insl
adc
sub
jns
adc
mov
repz
test
mov
xchg
and
mov
pusha
inc
jnp
cltd
lods
xor
adcb
inc
clc
pop
filds
mov
cmpb
outsb
pop
ret
subb
jle
or
loope
aaa
leave
orb
sbb
xor
mov
xor
outsl
or
sbb
in
xor
pop
fucom
jae
pop
shl
out
imul
shll
leave
loope
lahf
aaa
loope
mov
sahf
inc
loop
push
jnp
dec
daa
xchg
add
daa
ds
push
cld
lods
pop
in
outsl
pop
loopne
cltd
sub
div
dec
mov
pop
nop
cs
cmpsb
xor
out
movsl
adc
int
ret
push
cmpsb
scas
fwait
dec
or
clc
inc
shlb
stos
call
sub
xchg
lods
cmpsb
lock
jmp
cmpsl
out
jo
cmp
dec
int
cmp
arpl
imul
mov
les
inc
cld
lock
testl
cmpb
popa
mov
mov
aad
pop
pop
lds
ud0
push
push
push
jae
repz
rcll
dec
xchg
add
xor
hlt
lock
push
inc
data16
cli
test
pop
push
xlat
sbb
aam
aaa
mov
das
popf
test
lds
pop
fwait
addb
addb
sbb
xchg
cmc
cmp
daa
cld
and
dec
jl
repnz
sahf
scas
ljmp
or
xor
lods
imul
and
jb
test
nop
push
dec
mov
pop
aad
pop
fwait
sahf
add
adc
cs
lods
test
or
dec
shl
xlat
lcall
imul
daa
xor
repnz
xor
into
inc
scas
arpl
xor
push
push
dec
js
or
inc
push
shl
or
pop
xor
jmp
addb
test
repz
fimull
xchg
and
mov
xchg
and
je
out
mov
xor
xchg
jo
push
lods
movsb
inc
bound
cwtl
ljmp
aas
test
lds
mov
inc
mov
das
int3
cmp
dec
lock
loopne
enter
fldenv
dec
out
pop
push
lret
sarb
xchg
testl
rcr
sbb
loop
dec
inc
fcoml
inc
mov
and
pop
and
out
adc
xor
mov
and
in
pop
insl
sub
repnz
imul
xchg
test
mov
sub
addr16
sbb
daa
and
jnp
and
mov
repz
outsb
jge
ljmp
mov
mov
sub
enter
or
mov
inc
pop
ljmp
dec
push
daa
notb
dec
lret
cmp
push
cmc
xor
lret
add
in
fdiv
sarb
cmc
outsb
push
outsl
xor
out
mov
sbb
mov
jle
lcall
pop
lock
imul
cmpsl
jnp
cmp
and
les
mov
insl
sbb
fbstp
cmp
call
jp
sahf
inc
int3
sub
dec
loop
dec
into
sbb
ret
das
pop
loopne
and
cmc
xchg
cs
mov
xchg
scas
push
and
xor
add
xchg
lahf
and
push
icebp
mov
jle
dec
xchg
push
aad
xchg
ret
inc
les
dec
repnz
add
sbb
adc
mov
out
mov
clc
repz
mov
jmp
jp
imul
xor
cs
mov
fldcw
inc
scas
das
push
pop
xchg
jmp
mov
fdivrl
cmp
sub
or
repz
mov
cli
jmp
out
outsl
inc
or
xchg
and
adcb
aaa
xchg
ss
fcmovne
push
and
cmp
aad
xchg
imul
push
mov
sub
sti
cmp
aas
sbb
clc
hlt
shr
je
inc
push
mov
lds
mov
dec
fadds
hlt
cmpsl
into
sti
mov
dec
pop
sub
test
inc
std
mov
cltd
dec
in
cli
ss
int
in
mov
cs
adc
ret
push
mov
xchg
sahf
icebp
xchg
mov
fistpl
negb
adc
xchg
arpl
cmp
inc
and
in
cs
sub
jmp
dec
cld
mov
sub
mov
jbe
outsl
mov
andnps
shl
ffreep
sub
pop
jecxz
lods
in
mov
cwtl
fidivrl
call
scas
daa
add
xchg
push
xor
dec
das
fmull
adc
sbbb
jecxz
adc
adc
lea
push
sub
or
stos
scas
faddl
ret
clc
int3
out
test
mov
sbb
cs
sti
and
jbe
add
push
int
out
cltd
ret
aam
sarl
jns
dec
loope
icebp
lods
xchg
and
mov
add
nop
in
dec
mov
iret
mov
mov
es
popf
dec
and
aad
jns
and
xchg
mov
sti
cmpsb
or
mov
mov
pop
inc
xchg
rcll
in
lret
test
xchg
pop
lods
xchg
fcomps
jbe
test
fldl
jg
add
sbb
aam
adc
iret
ror
inc
adc
outsl
sub
enter
out
cld
stos
mov
jns
xor
outsb
outsl
das
outsl
int3
mov
cmc
xor
loopne
test
pop
cmp
cmp
fisubrs
xor
xchg
stos
inc
cmp
push
es
cmpsb
hlt
in
mov
sbb
int3
lcall
stos
int
jmp
push
out
repnz
xlat
sbb
jl
push
fsubrp
jecxz
shl
shlb
adc
sbb
fistpl
ljmp
mov
and
psrld
push
jl
popf
jae
dec
dec
push
test
mov
and
push
jp
stos
and
jbe
hlt
dec
and
xchg
repz
dec
adc
inc
dec
cmp
sti
dec
push
push
nop
movsl
xor
mov
rcrb
cld
and
xchg
xorl
cmpl
adc
lahf
sbb
sub
std
xor
scas
dec
out
xchg
inc
imul
pop
dec
ds
int3
push
movb
ljmp
loopne
mov
jae
mov
imul
inc
lds
in
lock
mov
mov
sub
cld
xor
addr16
xchg
lds
out
inc
sub
jns
mov
xlat
xchg
ret
fldl
fs
and
and
push
cli
test
loop
ds
push
in
test
mov
mov
in
cmp
inc
push
movsl
int
ret
sbb
es
cltd
mov
enter
inc
frstor
cmc
cmp
inc
cmp
push
leave
pop
sahf
and
mov
pop
xlat
push
vorpd
add
push
adc
pop
mov
in
sbb
sub
repz
cmpsl
arpl
fcmovbe
cs
add
sbb
adc
ljmp
pop
pop
fwait
cmp
xchg
push
dec
inc
push
scas
fwait
and
cmp
mov
xor
scas
inc
cmp
in
int3
push
out
sbb
repnz
fmul
cs
xor
addl
outsl
adc
add
push
sub
scas
xor
xlat
cmc
inc
mov
jp
or
leave
inc
cwtl
pop
and
out
pop
sub
int3
aam
jge
popa
roll
rclb
jp
adc
jge
sub
sbb
ljmp
pop
stos
shr
mov
cli
inc
jae
lahf
and
mov
push
movsb
add
fidivs
movsl
and
fs
enter
daa
push
movsb
iret
jnp
mov
jl
or
mov
movsl
inc
jmp
ret
dec
push
dec
cli
sarl
adc
outsl
jnp
ret
mov
dec
pop
cmp
push
sbb
std
nop
lret
inc
aas
cmp
int3
pop
lock
bound
cmp
fwait
iret
stc
sub
pop
les
cmp
jo
lds
scas
jae
xchg
push
and
stos
and
lock
nop
jbe
add
call
sti
lret
pop
mov
stos
das
cmp
xchg
add
out
sub
inc
cmpsl
and
aaa
enter
xchg
xchg
adc
push
add
daa
push
popa
pop
xchg
push
inc
es
pop
icebp
stc
or
pshufw
call
pop
or
mov
pop
test
aas
or
jge
enter
push
dec
mov
adc
xor
andb
hlt
push
shlb
ja
mov
jge
mov
test
aaa
jp
dec
loop
cmp
ljmp
pushf
or
pop
fsub
enter
cmc
test
sahf
daa
into
dec
sbb
insl
adc
rcll
jno
gs
jb
xorb
push
dec
mov
and
pushf
insl
cld
sbb
pushf
adc
xor
push
xor
xchg
loope
mov
push
inc
fcompl
movsb
pop
mov
test
lds
inc
adc
jle
adc
add
out
sti
shrl
mov
jge
sub
in
sti
mov
inc
out
clc
lods
push
adcl
jbe
je
add
lods
jne
mov
mov
adc
push
mov
outsb
or
push
cmp
jg
mov
sbb
xchg
loopne
sbb
pusha
xchg
add
outsl
orb
mov
arpl
jmp
mov
leave
fwait
lret
xchg
fnstsw
repz
xlat
rorb
loopne
scas
cltd
sub
mov
xchg
insb
mov
andb
pop
cli
cmp
insb
out
or
aaa
sub
repnz
mov
int3
add
jne
mov
mov
ljmp
aam
ljmp
shrl
js
sahf
jg
andl
mov
cmc
inc
inc
es
movsl
jne
xor
xor
ret
mov
sub
sbb
and
mov
int3
pop
fimull
loope
inc
int3
lcall
jns
outsb
es
cmp
dec
cwtl
lds
cmp
pop
and
into
int
mov
decl
loopne
cli
mov
add
test
cld
push
dec
insl
inc
jno
imul
dec
rcrb
dec
pop
sbb
xlat
xchg
add
scas
sub
cmpsb
inc
shll
adc
xchg
lea
pop
scas
lret
jp
cmp
fsubrs
push
jmp
mov
xchg
aas
pusha
sub
mov
and
inc
mov
loopne
test
jne
jmp
mov
lds
ret
push
sbb
jae
mov
in
add
inc
mov
cltd
cmp
or
add
imul
incb
jle
add
movsl
test
xchg
mov
jg
mov
mov
sbb
ljmp
jne
mov
lret
rcl
mov
aam
mov
mov
clc
xlat
aaa
lcall
fdiv
aaa
push
or
xchg
jne
push
push
xor
rcl
and
cmpsb
leave
sbbb
scas
xor
into
pusha
jne
push
aaa
xchg
mov
adc
push
lret
pop
jmp
inc
ret
sarb
jmp
nop
push
mov
lcall
sub
mov
dec
movsl
mov
mov
dec
pop
and
pop
popl
fistps
add
sub
and
push
adc
mov
ljmp
ja
or
cwtl
cmc
clc
inc
jmp
dec
mov
inc
xor
xorl
add
adc
cltd
cmp
adc
imul
aad
lea
mov
push
mov
push
jb
xor
test
popw
aaa
and
xor
add
and
test
or
data16
inc
imul
cmpsl
jbe
adc
xchg
cmp
arpl
das
subb
icebp
or
push
fstps
sub
add
inc
in
mov
xor
or
push
push
mov
xchg
repnz
sbb
jp
js
das
addr16
and
lods
aas
or
fdivl
iret
jo
bound
shll
sub
fbld
pop
mov
mov
dec
jge
mov
or
dec
jmp
popa
push
sub
xor
nop
or
mov
inc
insl
push
push
ljmp
pop
xchg
xchg
rolb
roll
inc
pop
dec
pusha
subl
cs
add
scas
lds
cmp
lret
je
repnz
push
and
mov
sub
lock
dec
stc
jp
outsb
jb
cltd
insb
jmp
mov
in
mov
sub
jno
and
pusha
addl
clc
stc
cmpsb
cmp
ds
pop
push
xor
js
inc
jns
add
clc
xchg
sar
jge
dec
mov
mov
decl
stc
sub
jg
adc
jle
push
mov
inc
or
cmp
aas
pop
xor
int
add
loopne
ss
imul
cli
je
add
mov
aaa
test
out
xchg
add
repz
aas
pop
sub
mov
fs
dec
mov
popl
in
or
push
fwait
imul
jno
mov
in
push
xor
xchg
adc
sbb
mov
lea
ljmp
push
add
popa
pop
jecxz
and
stos
push
jne
mov
push
mov
int3
xchg
incl
cmpsb
mov
scas
cmp
fisubl
out
sub
movsl
jle
dec
fsubrl
mov
dec
jp
push
jmp
jae
scas
inc
or
pop
cmpsb
xchg
idivl
mull
cmp
push
sti
sti
iret
dec
fistpl
pop
shll
testb
or
pop
inc
xchg
and
ret
xchg
add
xor
aas
cmc
mov
mov
mov
cltd
mov
hlt
cld
ljmp
out
jbe
jmp
cmp
into
push
lods
loope
or
add
mull
mov
add
xchg
ret
data16
sbb
pop
pavgw
hlt
mov
out
dec
pop
and
adc
ss
fcoml
xchg
adc
repnz
adc
loope
lods
cmp
adc
mov
outsb
test
sbbb
out
call
insl
dec
inc
jno
mov
lods
les
xchg
jl
push
into
out
outsl
data16
lret
jnp
outsl
out
adc
xor
movsb
stos
stos
std
or
mov
xchg
pop
iret
sub
add
adc
cs
int3
test
mulb
push
subl
and
bound
push
lock
sbb
mov
inc
inc
and
shlb
mov
xchg
leave
insl
push
inc
subw
rclb
lret
jle
jmp
and
ds
cmc
test
cltd
xor
out
push
or
rcrl
enter
fcoms
in
pushf
test
dec
inc
pop
mov
lds
and
mov
cmp
cmp
cmp
sub
mov
cltd
ds
add
std
cmp
scas
lods
cmp
mov
jae
lods
xor
pop
dec
mov
mov
inc
mov
lds
cmp
jp
bound
pop
mov
je
cmp
aam
ret
ljmp
push
mov
imul
ret
call
push
jg
lret
sub
icebp
test
jge
fidivrs
lret
das
add
push
lret
pop
jbe
inc
mov
xchg
loope
cld
stc
or
shr
sbb
add
sub
bound
mov
sub
add
mov
xchg
mov
fcomi
push
clc
or
das
sub
fcmovnbe
pusha
xchg
jb
add
cltd
jg
daa
int
rcrb
pop
int
push
shll
mov
int3
push
lcall
sti
lea
sub
repnz
mov
pop
jmp
inc
pop
jmp
xor
mov
mov
in
cmp
dec
pop
jge
and
jmp
insl
sub
in
xchg
movsl
divb
lods
pop
mov
ds
push
int
dec
ror
pop
fwait
mov
aaa
xchg
xor
xor
mov
fdivrs
movsl
in
int3
xchg
push
push
daa
add
mov
add
sub
push
sub
gs
mov
xor
imul
adc
iret
and
cld
ljmp
cmp
mov
hlt
std
cmpsl
cmp
rcll
inc
lahf
loop
inc
mov
insl
xchg
add
mov
scas
xor
mov
push
aam
insl
cmp
adc
adc
sbb
out
cmc
add
sbb
mov
ret
or
movsb
xor
imul
push
add
mov
sarb
stos
jmp
roll
sbb
jl
mov
cli
add
stos
loopne
push
lea
push
mov
inc
das
das
stos
inc
mov
add
pushf
lcall
pop
xor
in
movsl
sub
cmp
or
ljmp
loopne
daa
gs
daa
jp
push
lods
push
les
sbb
push
xor
aaa
jl
std
adc
int
icebp
mov
aaa
xchg
mov
fimuls
sub
xchg
jp
dec
mov
cmp
mov
push
sbb
js
adc
mov
in
add
aad
in
leave
mov
aas
dec
stc
push
and
inc
mov
rorb
in
mov
dec
fisttpll
or
cltd
cmp
gs
je
enter
cmp
mov
pop
leave
inc
cwtl
ja
mov
xor
rcr
out
xchg
std
sti
add
or
push
and
test
or
xchg
fcoms
push
cmp
push
push
test
sbb
jne
xlat
jecxz
mov
add
xchg
gs
pop
push
sub
adc
lods
jo
aam
sar
icebp
repnz
and
imul
jb
dec
enter
fsubrl
mov
jecxz
xor
or
inc
lds
mov
mov
sbb
jno
rdpmc
leave
jnp
stc
mov
lock
cmp
movsb
in
push
inc
es
nop
sub
xchg
cmc
mov
push
mov
mov
mov
inc
add
inc
jl
subl
and
jne
imul
js
clc
lea
add
inc
pop
push
scas
out
nop
adc
popa
loop
mov
inc
test
or
sbbb
out
insl
add
xorl
pop
rorl
imul
add
in
bound
mov
and
jno
repnz
inc
pop
jo
mov
fwait
sbb
inc
mov
sbb
mov
push
push
jecxz
insb
or
push
inc
add
mov
xor
cmpsl
cmc
pop
call
or
call
dec
jns
mov
pushf
ss
lods
xlat
cmp
out
lock
aad
adc
in
add
xchg
outsl
les
mov
push
pop
out
insb
adc
push
xor
sti
aad
in
js
add
movb
movsl
mov
out
cs
add
shl
pop
loopne
push
jnp
fdivp
out
mov
ret
in
sub
and
addr16
mov
cmpsl
stos
jecxz
sbb
jb
subl
dec
das
and
xchg
mov
aam
lea
movsb
test
xchg
xchg
cli
add
and
mov
cmp
shll
in
and
shlb
push
aad
pusha
icebp
push
jbe
mov
out
and
cmpsl
cmpsb
fcmovne
fwait
in
xchg
loopne
inc
movsl
xchg
mov
out
leave
xor
aad
push
pop
stos
movhps
cmpsl
xor
mov
mov
cmpsl
outsl
orl
push
mov
mov
jge
inc
dec
out
mov
cwtl
cmp
dec
jnp
les
aas
ds
xor
dec
or
mov
xor
xchg
mov
testl
es
lahf
lahf
xchg
inc
int3
into
leave
pop
ret
shrb
loop
inc
mov
adc
mov
rcl
or
fdiv
cmpsb
xor
and
inc
mov
and
add
std
rcll
push
mov
out
mov
test
mov
mov
or
fistl
data16
cmc
sub
popa
pop
in
sbb
xor
xchg
push
sub
fisttps
xchg
mov
in
dec
aaa
push
bound
sbbl
ret
pop
adc
sbb
xchg
in
adc
mov
mov
adc
and
cmp
jl
loope
repnz
pop
ss
pop
cmpsb
push
and
pop
shlb
mov
addr16
pop
inc
bound
push
data16
mov
jmp
xchg
sub
adc
sub
stos
xor
pop
scas
mov
xor
pop
imul
mov
add
push
ret
std
gs
pushf
push
fists
sub
fdivrl
das
sub
stos
in
sbbl
lret
stos
sub
lock
push
cwtl
or
xchg
test
mov
inc
dec
pop
or
fiaddl
xchg
call
ss
cmpsl
addl
dec
cmc
jmp
filds
push
fadd
xlat
nop
jo
insb
adc
dec
in
mov
addr16
lods
gs
and
and
std
cmc
mov
push
out
jmp
lcall
vmulpd
insb
scas
jle
sbb
imul
pushf
or
sub
cli
ds
mov
push
shll
cli
stos
sar
in
rorb
mov
mov
fs
bound
loop
add
push
xlat
inc
xor
ds
aas
sbb
stc
dec
filds
clc
loopne
inc
rcrb
jns
je
movsb
push
xchg
outsl
or
gs
pop
inc
shr
jle
jae
iret
dec
mov
pop
cmpsb
leave
push
cmp
mov
and
fildl
pusha
add
and
int
jbe
cmpb
sub
movsl
pop
cmp
mov
imul
jne
or
ss
ss
push
dec
imul
js
and
xchg
rol
jbe
adc
daa
sarb
jl
outsb
adc
push
add
xchg
insb
ljmp
or
mov
cmp
push
jmp
add
sbb
xor
out
lahf
fcoms
or
mov
dec
inc
jmp
ja
mov
dec
das
rcrl
fsubrs
mov
lods
das
push
jne
xchg
f2xm1
cmp
lea
rorl
aaa
gs
aaa
mov
in
icebp
arpl
mov
push
repz
js
sbb
inc
push
sub
jne
aaa
sub
mov
cli
jae
mov
pop
mov
inc
add
mov
adc
pop
sub
lret
mov
mov
mov
ret
or
imul
gs
jnp
push
pop
add
cmc
xchg
jg
lock
xchg
push
dec
out
scas
jle
dec
xor
lret
inc
inc
popa
aad
adc
cmp
xor
cli
push
sub
jp
jb
mov
aas
jmp
push
movsb
sbb
xor
push
xor
pop
lods
inc
jnp
mov
xchg
fisttps
inc
push
dec
stos
mov
cmpsl
shl
pop
hlt
jl
mov
lret
pushf
js
jge
inc
cli
test
mov
inc
push
jle
data16
xchg
jmp
dec
gs
mov
add
sahf
fsubrl
xlat
out
outsb
jno
dec
sarb
jg
push
enter
mov
test
test
adc
xor
mov
addr16
jno
push
sbb
rol
sub
and
sub
xor
sub
or
cmp
in
test
dec
xor
pop
mov
dec
sarb
rcl
inc
and
mov
ret
sub
mov
lcall
addr16
lret
xchg
add
mov
lods
push
mov
push
insb
out
mov
xchg
les
ljmp
cmp
cs
pusha
xchg
xchg
jmp
and
mov
shll
and
add
in
cwtl
fcompl
and
dec
mov
subb
in
testb
insl
mov
or
fistpll
sub
clc
jne
mov
or
jecxz
sbb
stos
dec
rcr
dec
jno
sti
pop
cmp
mov
mov
lock
inc
scas
rol
sub
cmp
in
out
scas
inc
lcall
addr16
cltd
data16
push
rcll
mov
cs
clc
push
mov
cmc
into
xor
mov
mov
inc
dec
lods
call
pop
push
xor
insb
adc
adc
and
repz
aas
and
jg
scas
iret
mov
lret
aas
mov
aas
add
rol
sahf
mov
mov
jp
add
lret
push
out
or
out
loop
jb
pushf
jmp
aam
add
orb
inc
call
jno
sbb
pop
and
js
std
das
xchg
jp
xorb
jle
mov
loop
ret
movsl
lds
es
cli
fs
pop
lret
andl
adc
push
mov
pop
sbb
sub
or
mov
fisttpl
jno
cmpsb
insb
mov
push
repnz
cmp
lcall
lea
cmp
adc
int3
cmc
clc
jmp
insl
hlt
pop
xchg
das
scas
pop
jns
iret
xchg
xchg
in
cwtl
fisubs
mov
pop
inc
enter
jl
mov
xchg
push
push
lcall
mov
mov
jo
aas
pop
xor
rcl
cld
xchg
mov
or
mov
cmc
xor
fs
stc
icebp
mov
cmp
dec
ficoms
pop
pop
sbb
push
xchg
cli
mov
imul
sub
pop
push
sbb
out
or
das
mov
orb
xchg
mov
xchg
out
pop
bound
pop
movsb
mov
lret
cli
jmp
or
loope
icebp
push
lret
dec
stos
pop
es
stos
pop
leave
lret
or
and
mov
mov
repnz
inc
movsb
add
test
js
adc
adc
xchg
push
roll
std
sub
fdivl
addl
fs
add
das
scas
xlat
lods
xchg
push
and
or
icebp
fucomp
xchg
sub
pop
push
out
loopne
ja
shrb
and
fucomi
in
leave
gs
rcr
inc
dec
dec
pusha
xchg
paddb
jmp
repz
lock
mov
jge
jmp
adc
test
in
jecxz
int
sti
pop
sahf
arpl
push
int3
movb
int3
push
sub
sbb
pop
push
std
lret
sub
movsb
stos
int3
pop
jbe
fldcw
movsb
inc
test
cmpsb
test
jge
mov
inc
pop
in
inc
daa
dec
sti
dec
shrb
lret
jnp
push
es
pop
cmc
call
mov
repz
fiadds
sub
subl
stc
scas
xchg
and
rorb
cmp
sahf
pop
and
out
in
pop
and
mov
xchg
sbb
add
and
add
fstp
xchg
inc
sbb
sbb
pop
dec
rclw
insb
lea
imul
pop
test
mov
cmp
mov
mov
ljmp
jns
mov
and
sub
or
ja
jae
sub
stos
fadds
ds
fisubl
nop
dec
pusha
mov
aas
dec
jmp
or
mov
push
dec
jo
sbb
jecxz
and
jmp
push
daa
cwtl
cmpl
repnz
fwait
lock
mov
add
adc
mov
xchg
in
mov
movsb
cmp
xchg
movsl
cmpl
jns
fisttps
les
jns
push
loopne
xor
stos
repz
jge
mov
xchg
sbb
add
mov
outsl
nop
and
pop
jo
cmp
test
int
push
cli
xchg
inc
jb
rcrb
inc
cmp
jp
adc
in
pusha
push
xor
push
icebp
xchg
push
clc
das
push
sub
pop
add
fcmovnbe
mov
lea
xor
mov
jne
sub
add
sbb
dec
call
xlat
inc
pminsw
jle
mov
int
xchg
insb
mov
std
fidivrs
stos
push
pop
sti
xlat
and
test
repz
mov
icebp
push
mov
outsb
jb
fimuls
out
and
adc
pop
xor
arpl
jb
and
orl
pop
dec
push
adc
adc
arpl
js
sub
lods
roll
sub
fsubr
dec
mov
test
xchg
pop
mov
or
xor
aad
movzwl
iret
stos
push
rclb
xchg
push
xlat
xchg
jb
insb
aam
fcomp
popa
sarb
loope
ss
jnp
enter
popa
test
add
xor
and
insb
mov
addb
fisttps
add
inc
ja
sbb
mov
enter
stos
loop
mov
ds
iret
cli
dec
outsl
sub
ss
push
iret
sti
lods
in
loop
cmpsb
jno,pt
and
mov
push
push
jnp
adc
push
imul
mov
add
push
cwtl
sarl
fs
cli
mov
and
inc
sub
push
ljmp
sbb
xchg
cmc
pop
fisttpll
jbe
ljmp
orl
outsb
or
adc
mov
cmp
xor
and
mov
cmpsl
cmp
ss
mov
icebp
pop
jp
jb
aad
leave
lret
dec
mov
ret
or
adc
popa
add
scas
iret
cmp
mov
cmp
gs
pop
sbb
xchg
and
lahf
and
push
xchg
lret
mov
popa
das
xchg
rcll
cli
push
mov
lods
pop
es
cmpl
dec
outsl
les
loop
icebp
xchg
mov
addr16
push
aaa
pop
nop
test
icebp
jbe
call
add
sbb
pop
jg
inc
imul
inc
sub
js
inc
lret
xor
cltd
in
addb
push
add
adc
xchg
int
jae
or
add
mov
pcmpeqw
daa
cwtl
jae
adc
push
leave
add
fld
jb
std
ret
repz
popf
sub
dec
andb
in
mov
adc
in
jb
pop
push
ficoml
pop
and
jmp
sub
xor
xor
ret
push
jne
xchg
mov
es
sub
sahf
push
pop
xor
adc
mov
sbb
mov
popf
sarb
lea
bound
lcall
xor
pop
stos
pop
jnp
inc
addb
out
inc
mov
shrb
movsl
fimull
add
jmp
not
cmp
lret
in
int
stos
dec
adc
pop
test
je
imul
jecxz
cmp
aad
xchg
pop
loope
sbb
loopne
mov
insb
sbb
cmpsl
dec
insb
fiaddl
frstor
sub
fs
add
movsb
add
xor
cs
adc
adc
clc
ss
push
data16
mov
adc
rclb
inc
dec
sub
pushf
orb
xor
adc
rorb
stc
insl
fdivl
loope
inc
hlt
cmp
sub
leave
movsb
stos
sbb
into
pop
cld
out
int
outsl
pop
cmpsb
sub
cmp
nop
arpl
cwtl
std
xchg
add
lods
cmp
andl
mov
ret
dec
add
jnp
shrl
pushf
test
iret
sti
and
in
inc
pop
add
data16
and
adc
stos
sub
sub
cmp
add
dec
aaa
mov
adc
mov
cwtl
sbb
mov
push
aaa
mov
jmp
repz
jnp
cs
lret
out
and
std
pop
fst
not
out
aaa
adc
loope
and
pushf
insl
leave
popf
arpl
xor
xchg
sub
fnstcw
mov
cbtw
jp
insl
adc
and
and
shr
inc
sbb
lods
push
outsl
cmp
out
jnp
push
sub
je
data16
jno
mov
enter
jp
and
divps
jmp
cmp
jmp
testl
xchg
and
jg
loope
pop
cs
mov
fstpl
cmp
pushf
fsubrl
clc
fstpl
pop
xor
rol
outsb
test
insb
fcmovbe
xor
add
mov
ds
pusha
inc
lea
mov
pop
mov
mov
icebp
bound
xchg
pop
mov
in
jmp
int
mov
sbb
aad
pop
loope
rorb
sahf
pop
sub
dec
push
movsl
dec
push
cmpsl
inc
cmp
jmp
cmp
ret
xor
push
repnz
and
int3
dec
inc
xor
bound
shl
xor
jge
das
out
repnz
ss
ss
sbb
je
dec
xor
jo
leave
xchg
adc
and
std
adc
scas
ret
cmc
xor
dec
loope
outsl
les
add
imul
fs
inc
inc
pop
scas
pop
test
cmp
xchg
scas
jbe
pop
push
fidivs
xor
cmp
inc
ret
cmpsl
sbb
stos
cmpsl
pusha
movsl
dec
clc
push
in
test
test
mov
fcoms
mov
push
mov
adc
or
jmp
test
mov
rcr
jecxz
jno
dec
mov
jle
mov
pop
dec
faddp
xor
push
mov
sbb
cwtl
jmp
add
mov
xor
add
repz
cmp
dec
popa
jmp
pop
ja
iret
les
xlat
out
rcrl
push
adc
add
nop
incl
mov
mov
data16
mov
mov
sbb
aam
pusha
xadd
hlt
movsb
lock
mov
push
es
test
ret
sbb
inc
sbb
data16
xchg
stos
dec
std
repz
dec
mov
jp
pop
pop
mov
je
icebp
sub
mov
sbb
daa
cmp
fmulp
jae
xchg
popa
lret
cmc
push
push
cmp
lods
scas
int
mov
pusha
sbb
xchg
inc
fsubs
fiadds
testb
lcall
scas
cmp
jne
es
mov
das
inc
push
dec
xchg
sub
jmp
dec
inc
call
push
adc
arpl
sub
mov
sub
add
jmp
lahf
lcall
push
bound
mov
cli
inc
mov
and
jns
lods
dec
xor
mov
aas
or
push
mov
sub
pop
add
fsubrs
fcmovu
clc
iret
mov
ja
mov
lock
mov
xchg
mov
orb
adc
aam
sub
btr
mov
and
mov
test
xor
dec
loopne
fs
mov
movsb
aaa
push
inc
cltd
or
ljmp
xchg
daa
rorl
imul
pop
cmp
inc
sub
fisubrs
adc
add
mov
ds
mov
and
pop
sahf
arpl
jno
mov
xorps
adc
xchg
loop
stos
arpl
jle
push
cld
add
mov
inc
int
shrb
rclb
loopne
scas
cltd
push
mov
mov
aad
test
ret
ja
lret
stos
jo
push
jbe
sub
int
cld
cmc
out
sahf
push
movsl
pop
jg
lret
dec
enter
adc
mov
push
and
jle
or
add
ljmp
pop
xor
xchg
xor
in
loopne
or
adc
mov
push
out
cmp
xchg
addps
in
cli
test
daa
test
cmp
or
jmp
int
fcom
subl
jmp
clc
mov
cld
push
or
stos
and
imul
dec
lret
cmpsb
sahf
xor
stos
pop
or
ret
pop
dec
mov
pop
call
data16
jmp
ret
inc
clc
pop
mov
adc
rorb
push
jbe
movsb
mov
lahf
repz
mov
cmp
jle
hlt
mov
shr
adc
cmp
xorb
dec
or
movsl
adc
testb
mov
jle
dec
sarb
iret
decl
daa
pop
push
and
ds
call
out
fdivrp
jnp
cmp
loope
dec
popf
cmp
dec
add
jnp
push
jp
outsl
cmp
mov
cmpsl
mov
jmp
cmp
dec
clc
insl
out
sbb
sbb
fistpll
jp,pn
pop
xor
inc
xchg
dec
out
mov
xor
sub
pop
lods
cmpsb
inc
dec
dec
fsts
mov
nop
icebp
movsl
jecxz
loope
ljmp
in
js
ja
cmp
inc
or
cmp
aaa
ja
inc
add
loop
in
js
lods
sbb
sub
mov
shrb
push
mov
mov
add
xchg
mov
adc
rcll
mov
mov
and
repnz
pop
jge
mov
testb
jl
in
lea
shl
pop
test
jo
loop
lds
faddl
jo
mov
mov
mov
xchg
shrb
sbb
sbb
hlt
add
xchg
out
ret
out
popf
or
call
repz
stos
add
dec
add
idivl
cs
jns
xchg
xor
jb
sub
push
cltd
cmp
scas
dec
cli
test
insl
pop
call
leave
ljmp
cmp
xor
adcl
sub
xor
mov
addr16
cmp
mov
mov
ljmp
bound
les
mov
pop
xchg
fstp
jl
sub
jno
sub
mov
mov
adcb
aad
mov
mov
lock
mov
fldcw
fstp
dec
pop
jp
fucomi
cs
or
movsb
inc
std
nop
mov
xor
adc
mov
rol
hlt
adc
xchg
out
pop
add
cmp
and
cmp
movsb
xor
mov
add
jbe
scas
test
xchg
sarb
loope
xchg
xor
mov
inc
or
fwait
ret
push
cmc
mov
inc
xchg
and
mov
lods
pushf
scas
fnsave
fstps
out
cmpsl
push
inc
fidivs
and
xor
push
mov
inc
adc
add
xchg
clc
call
xchg
jno
or
imul
xchg
sub
adc
test
push
mov
and
inc
js
movsb
clc
cmc
cld
inc
cmp
pop
lahf
fsts
outsl
xchg
mov
sub
or
xorl
hlt
stc
js
mov
insl
mov
jl
push
je
pop
jge
lahf
push
cmp
pop
and
mov
xorl
sbb
push
ljmp
xor
add
push
lret
insb
pop
into
push
int3
xchg
jge
fdiv
jg
jae
out
pop
cmpsb
inc
scas
fisubrl
mov
out
lcall
sbb
mov
loopne
jmp
fucompp
xchg
popa
ds
push
cmc
or
push
xor
insb
fsubrl
data16
xor
inc
sub
mov
sub
sub
push
call
lahf
inc
mov
mov
mov
lcall
dec
test
cmp
sub
mov
notb
loopne
push
cmp
push
loopne
mov
jo
xor
icebp
xchg
ret
push
mov
into
js
push
pop
jae
mov
icebp
pop
inc
test
cli
jg
inc
sbb
imul
mov
shlb
xor
adc
inc
fsubrl
mov
fs
mov
sub
pop
push
adc
add
mov
sbb
and
mov
pop
push
pushf
decb
jns
dec
pusha
xchg
daa
xor
xor
movsl
inc
mov
push
mov
cld
imul
pop
or
sbb
rolb
lock
aad
idivl
gs
sbb
pushf
adc
or
pop
adc
arpl
in
int3
aam
jmp
iret
pop
and
fwait
dec
and
je
mov
jns
ja
scas
hlt
jbe
clc
pop
inc
popf
imul
dec
jl
fs
pop
mov
cmp
call
mov
rcl
outsl
xlat
ds
xor
sbb
lods
addr16
scas
popa
or
inc
inc
inc
add
xor
imul
jge
inc
mov
addl
lds
enter
sbb
cmp
push
mov
mov
cmp
or
push
inc
jns
push
mov
lds
sahf
xlat
fnstcw
lods
adc
mov
cmp
in
lea
mov
jne
out
rorl
inc
push
mov
sub
inc
mov
xor
jmp
cld
inc
pop
push
adc
lock
mov
jmp
imul
hlt
loopne
mov
roll
mov
test
jae
mov
sbb
int3
push
xor
xor
insb
cmp
out
cmpsb
cli
pop
std
testb
incb
and
jle
cs
mov
sbb
lret
imul
xchg
das
pusha
enter
sub
xchg
jg
sub
ja
inc
adc
push
data16
xchg
xor
mov
mov
adc
popa
fs
push
mov
lods
rclb
loope,pn
inc
mull
mov
mov
mov
adc
lcall
mov
push
outsl
lret
mov
cltd
jmp
insb
xchg
popa
js
pop
arpl
popa
stos
test
loope
mov
scas
gs
int
xchg
inc
repnz
testl
pop
add
pop
mov
lahf
cs
rol
push
repz
lret
jne
mov
sbb
and
insb
inc
xchg
mov
dec
test
idivl
or
pop
xorb
in
inc
gs
jp
aaa
mov
sbb
orb
inc
into
loope
jecxz
movsl
je
ljmp
push
pop
popf
movsl
and
andl
mov
lcall
push
xor
int
and
outsb
outsl
fists
addb
push
add
aad
int
jl
jp
sub
lods
out
mov
inc
and
aas
repnz
icebp
aad
inc
pop
mov
jbe
add
call
mov
dec
frstor
jnp
addr16
dec
dec
jl
push
ds
gs
jmp
lret
xor
mov
mov
inc
mov
out
adc
push
rclb
mov
das
js
movq
inc
sbb
or
jmp
sbbb
xor
lret
xchg
or
stc
push
jmp
mov
out
lods
int3
xor
ljmp
mov
lods
jae
sub
lock
ret
cmpsb
xchg
cmp
pop
fldl
push
test
imul
xor
xchg
pusha
scas
sub
cmp
xchg
out
stc
mov
mov
fists
xchg
xor
aaa
mov
out
mov
in
fldt
mov
fdiv
stos
fsub
or
ja
pop
jne
mov
push
add
xchg
inc
add
dec
stc
mov
push
xor
rcl
push
mov
hlt
aas
add
jecxz
xchg
and
or
add
mov
idivl
push
xchg
pop
xor
into
lret
fnstenv
pop
lock
jnp
xchg
loopne
cmp
jo
into
cmp
push
jg
sbb
adc
jl
cmp
mov
push
imul
ret
shll
fistps
xor
jp
shl
ret
sti
sub
je
jno
pop
and
stos
sub
les
inc
push
std
jle
adc
pop
lock
xchg
adc
inc
std
mov
mov
movsb
xor
sub
cmp
js
dec
sub
rcll
push
std
inc
ljmp
jecxz
test
ljmp
jge
out
add
das
rcr
inc
mov
fucomp
js
cmp
mov
cmp
add
hlt
push
dec
inc
mov
mov
adc
fstp
aad
cmp
push
ja
fdivrs
pop
pop
adc
push
jl
push
es
idiv
cmp
inc
cmp
idiv
mov
outsb
scas
ljmp
inc
or
sahf
push
ret
icebp
sub
jb
es
and
add
clc
movups
and
mov
call
jle
shll
aaa
out
scas
jmp
popf
in
cwtl
fptan
repz
js
fwait
mov
les
inc
and
add
push
test
in
or
aad
mov
dec
pop
dec
inc
jno
fs
mov
sahf
testl
sub
mov
stos
fdivr
jecxz
xor
test
test
pusha
fadd
fldl
push
xchg
lret
sub
jle
inc
fcomps
add
icebp
rol
rolb
jl
out
dec
push
jbe
jne
jecxz
or
mov
add
test
scas
out
out
rcrb
clc
jge
out
lods
sbb
xchg
pop
xchg
jb
fucom
jmp
pop
pushf
dec
mov
mov
push
sarb
mov
ficoms
jp
mov
cmp
and
add
into
add
mov
dec
lds
movsb
sbb
jmp
loope
sbb
int
mov
das
pop
shrl
and
pop
ds
mov
cmpsb
mov
or
lahf
xchg
lds
out
ret
jle
or
jl
les
ja
mov
xchg
scas
neg
ljmp
cli
idivl
xor
sti
jns
mov
and
in
out
adc
add
lods
popl
sbb
xchg
add
js
ljmp
mov
mov
ds
xor
adc
dec
adcl
sbb
int3
inc
pop
dec
dec
aad
sbb
mov
popf
cmpsl
insw
cmp
dec
bound
jbe
mov
pop
in
pop
cmp
cmpsl
call
or
mov
call
xlat
xor
test
mov
into
xchg
dec
es
test
shl
je
push
int3
fidivl
jnp
hlt
rcr
cmp
mov
and
clc
je
ds
fdivr
test
std
sbb
or
dec
pop
data16
push
jmp
xor
cwtl
ds
in
jl
sbb
jbe
push
loopne
inc
jle
cmc
repz
idivl
sbb
ja
mov
xor
push
lds
add
xlat
pop
add
andl
pusha
add
ljmp
popf
stos
inc
sbb
mov
pusha
jmp
lds
mov
icebp
push
sbb
mov
push
xor
aam
aaa
movsb
push
pop
adc
orl
fstl
xchg
mov
and
xor
xor
cmp
imull
jmp
mov
data16
xor
push
aaa
and
cs
mov
dec
xorl
mov
pop
push
inc
bound
dec
loopne
sub
ljmp
dec
push
rclb
fnstsw
fs
loopne
xchg
aaa
repnz
fdivl
xor
dec
psrlq
gs
sbb
movsl
shll
pop
subl
mov
jno
pop
mov
in
fmul
insl
xchg
lahf
es
je
mov
or
aas
in
dec
pop
int3
cmp
ja
jns
sti
lcall
mov
dec
fxch
arpl
sti
test
sbb
insb
adc
jns
notb
push
sbb
lods
imull
scas
lcall
loope
xchg
std
hlt
mov
push
lcall
movsb
add
aad
jmp
mov
jmp
testl
or
cmc
mov
lods
or
dec
sahf
repnz
out
subl
jno
mov
push
gs
or
mov
jnp
out
pop
sbb
rdtsc
scas
frstor
ret
jnp
push
sub
fmul
or
and
add
inc
push
pop
pushf
xor
leave
mov
sbb
push
or
xlat
sti
lock
xchg
xchg
call
pop
data16
pop
test
insb
loopne
movsb
cmp
mov
mov
insl
ljmp
gs
ja
fidivs
pop
or
lcall
outsb
inc
mov
fadds
mov
imul
cltd
stc
inc
sbb
xor
test
cmp
add
mov
dec
inc
sub
addl
sbb
repnz
xchg
dec
pop
hlt
aas
clc
sti
nop
pop
xchg
aaa
mov
push
das
test
leave
cmp
lods
jno
pop
sbb
leave
xchg
ds
fimull
pop
mov
sahf
dec
jmp
outsl
mov
and
pop
roll
iret
inc
or
or
push
mov
fwait
in
fidivrl
lods
or
cmp
call
repnz
mov
add
shlb
inc
sub
cs
pushl
sbb
add
or
mov
push
in
es
push
xor
or
and
adc
out
out
sub
sub
inc
test
dec
sbb
fucomip
cmp
cmp
arpl
ljmp
rorb
ljmp
cmp
hlt
mul
in
xchg
cmp
leave
jecxz
cmpb
sbb
jnp
and
clc
scas
lods
enter
testl
sbb
inc
shlb
jae
add
push
sbb
fldenv
movsb
mov
add
js
orl
stc
in
out
lods
enter
add
pop
xor
mov
test
sbb
push
cwtl
call
std
outsb
add
push
insl
test
aaa
push
out
fildll
push
mull
cmc
add
mov
fistps
in
daa
aad
jae
lea
push
jne
or
andb
dec
jmp
cmp
nop
outsb
sti
pop
lods
add
scas
mov
sub
les
out
jge
mov
mov
adc
pop
add
cmpsb
add
inc
decb
cltd
mov
lret
mov
mov
inc
dec
sub
xchg
jne
call
pop
loop
lock
mov
into
fmuls
out
aaa
lret
ret
in
cltd
cmp
sub
jne
adc
add
jp
cmp
cmp
mov
inc
add
push
clc
jnp
das
fisubrl
out
inc
fidivl
std
mov
lcall
scas
loop
pop
xor
les
fsubl
xor
outsb
mov
dec
repnz
and
fs
out
lret
xor
or
lds
scas
xor
test
movsb
sbb
or
into
hlt
cmc
mov
mov
sub
in
mov
mov
mov
jle
mov
aam
dec
push
push
jno
mov
mov
fmul
mov
push
out
aam
fcoms
lret
mov
push
adc
fbld
sbb
fmuls
add
xor
fidivrl
jle
loop
aad
dec
iret
movsl
mov
inc
cs
xor
clc
pop
or
mov
inc
mov
cmp
leave
mov
xchg
into
idiv
cmp
stos
int
sub
adc
imul
gs
jg
cmp
call
imul
cmpsb
xor
push
cmpb
in
mov
mov
mov
insl
adc
mov
or
js
test
mov
ja
dec
sbb
jne
pop
adc
imul
cmpsb
movntps
das
mov
js
cmp
pop
aam
inc
in
call
shlb
cmc
adc
jb
add
icebp
hlt
insl
outsl
add
add
adc
inc
add
sub
fisttpll
jp
mov
nop
xor
sbb
mov
push
sbbb
loope
adc
adc
mov
out
out
clc
push
and
imul
and
jb
test
and
push
repnz
xchg
ljmp
mov
add
call
xor
pop
sahf
or
mov
pop
out
xor
push
and
sti
xchg
dec
jne
sub
jae
aas
sub
call
outsl
cmp
add
pop
cmpsb
jle
cli
iret
cmp
sub
pusha
cmpsl
xchg
jns
jecxz
lret
and
daa
std
adc
pop
and
jp
testl
push
xor
je
lea
ja
cmp
scas
add
adc
jp
aaa
pushl
pop
push
jmp
adc
aas
xchg
in
adc
and
push
push
mov
addr16
stos
jecxz
jge
adc
xchg
inc
pop
inc
cmp
sbbb
lahf
popa
mov
push
sarb
cli
cmp
dec
mov
xchg
add
pop
shrb
ror
imul
fnstenv
mov
lcall
cmp
fisubl
cld
fld
gs
mov
sub
and
orb
repz
cmp
add
aas
insb
sub
mov
push
mov
dec
loop
adc
sarb
cmp
ds
je
in
mov
sub
push
andl
cmp
imul
cltd
or
movsb
fdivs
test
ljmp
in
addr16
push
icebp
or
mov
cmp
stos
gs
shll
loop
and
das
mov
outsb
iret
inc
addr16
scas
imul
and
sbb
mov
rol
mov
enter
int3
fnsave
cmpsb
es
and
mov
xor
mov
cmp
std
repz
test
sbb
popf
xchg
popa
add
arpl
hlt
or
loop
add
jg
shrl
out
cmp
sbb
out
sbbb
or
and
ficoms
testl
ljmp
into
mov
lret
or
adc
mov
les
pop
aam
test
xchg
inc
pop
idivl
push
mov
sti
pusha
ss
push
fnstenv
dec
jmp
xchg
iret
or
imul
or
movsl
adc
fcmovnu
mov
loopne
repnz
or
js
mov
outsl
push
lock
cmp
lahf
pop
movsl
dec
jmp
push
jecxz
shll
jb
daa
out
adc
adc
icebp
je
inc
push
mov
inc
fisttps
out
int
xchg
pop
out
push
add
add
out
fbstp
or
in
jmp
pop
out
pop
loopne
sub
inc
jmp
sub
fsubrs
xchg
xchg
pop
cwtl
test
in
mov
lds
loopne
popf
ret
mov
sub
jnp
ja
cld
inc
add
fsubs
adc
mov
nop
add
rolb
testl
cld
inc
ss
xor
aam
lods
add
fsubp
out
test
jmp
in
push
and
mov
lahf
call
repz
xor
sub
das
pop
adc
dec
mov
mov
push
sbb
pop
lret
mov
mov
iret
xor
in
mov
mov
ret
mov
rcll
decb
sub
inc
std
sub
mov
jmp
cmp
xor
hlt
or
dec
sbb
jmp
fsubl
inc
mov
inc
sbb
pmullw
xor
cmp
mov
fs
clc
pop
data16
shlb
mov
pop
push
sti
leave
in
bound
pop
add
insl
cmp
jl
into
sti
jg
sub
stc
loop
les
sbb
popa
xlat
faddp
sbb
into
outsl
outsb
mov
clc
mov
push
xchg
call
in
pusha
jmp
movsl
push
dec
loope
mov
adc
or
cmp
cmpsl
jecxz
pop
adc
fucomi
mov
jnp
mull
into
dec
les
jecxz
jg
pop
or
push
mov
and
xor
and
mov
adc
adc
mov
filds
mov
rol
ja
jno
stos
or
into
dec
outsl
mov
cli
push
pop
fiadds
test
pusha
mov
sahf
mov
aaa
sar
adc
sbb
repnz
insb
xchg
push
adc
lret
mov
ret
mov
add
xor
jge
pop
xchg
add
inc
in
jle
mov
fs
les
xlat
and
dec
pop
rorl
add
cs
les
scas
inc
sbbb
insl
pop
iret
xchg
sti
push
cmc
xchg
lea
mov
sbb
jg
sbb
pushf
hlt
aaa
lea
push
clc
sub
push
mov
lock
lret
test
imul
push
mov
pusha
mov
ja
mov
lods
dec
fnstsw
dec
imul
inc
in
daa
das
pop
jnp
icebp
push
fadd
std
mov
fwait
enter
bound
sub
mov
xor
loope
sub
mov
sbb
repnz
push
add
leave
out
mov
stos
inc
stc
mov
notl
adc
xor
xchg
shl
inc
rcll
jg
lock
std
repnz
xchg
int3
scas
lods
loopnew
popf
and
scas
pushf
aam
cmp
jle
pop
push
out
lods
mov
sbb
adc
xchg
add
lahf
xor
sti
xor
fisubl
mov
jmp
fwait
stos
mov
rorl
addl
or
aas
sub
fldl
test
jle
aam
push
jns
flds
ret
xor
add
xchg
pop
or
mov
mov
movb
clc
movsb
push
pushf
sub
mov
jnp
push
sarl
jecxz
push
push
mov
cmp
call
es
dec
mov
iret
xor
add
addr16
pop
jb
test
mov
lret
dec
adc
gs
xchg
push
lods
or
pop
push
aaa
pop
pop
mov
mov
add
mov
loopne
ljmp
mov
insl
ret
sub
push
test
popf
xchg
mov
mov
ja
push
add
mov
aad
jge
in
stos
fcoms
and
sti
testl
cmc
sti
bound
stos
les
rorl
jno
testl
pop
in
pop
into
popl
repz
loopne
shrl
dec
xlat
dec
lahf
ret
aaa
xor
in
mov
xchg
cmp
in
fimuls
stc
pop
push
xchg
popa
in
fidivrs
pop
push
lods
mov
jge
gs
add
inc
mov
gs
jne
mov
adc
lock
scas
mov
mov
adc
test
inc
out
aaa
cmp
adc
add
test
sub
xchg
sbb
lea
ret
add
mov
ss
lret
cli
xor
mov
inc
dec
mov
test
pop
inc
push
mov
mov
xor
lock
cmp
mov
lods
dec
cmpsb
scas
loopne
leave
mov
mov
xor
shrd
std
xchg
mov
mov
test
dec
inc
popf
sti
bound
sub
inc
lret
lock
xchg
and
daa
test
sub
add
lret
push
dec
jp
scas
fs
dec
add
enter
add
test
in
push
call
lret
test
test
push
mov
jb
sbb
aas
ds
xchg
and
jge
pop
mov
pop
adc
ja
daa
lods
into
test
inc
dec
or
nop
inc
xchg
cmp
sar
daa
jo
push
push
inc
out
es
mov
jb
mov
lret
in
lock
imulb
call
xor
cmc
sub
jns
push
shll
adc
in
xchg
push
outsl
pop
pop
pop
pushf
clc
outsl
mov
or
and
cmp
jl
mov
es
cmpb
xchg
aad
cs
bound
xchg
enter
jno
push
push
dec
addr16
adc
lea
push
lahf
shrb
out
inc
mov
pop
scas
inc
jl
fsub
xchg
sbb
out
pusha
xor
in
aam
pop
test
dec
sub
add
add
xchg
mov
mov
add
int
aaa
xchg
lcall
stos
scas
push
cmp
jle
mov
shrb
test
lahf
stos
out
fs
xchg
test
inc
js
mov
xlat
lret
dec
mov
inc
mov
xchg
dec
ret
or
in
inc
xchg
mov
mov
xchg
cmp
xchg
out
int
out
mov
and
sub
sub
in
in
sar
pop
pop
add
jo
rcrb
jge
vmaxps
daa
sub
popf
inc
insl
jo
inc
push
mov
testb
in
lds
in
cltd
pop
les
enter
xor
xor
jne
pop
cmc
fstl
cmp
aaa
sub
sti
pop
stos
movsb
pop
cwtl
clc
xchg
gs
jae
and
mov
cmp
sub
cltd
xor
pop
repnz
push
daa
js
inc
orb
xor
lret
push
out
repz
xor
cld
adc
outsl
inc
xchg
dec
xchg
ss
jns
pop
rorl
mov
leave
test
add
xchg
call
mov
fldl
das
test
jmp
rcr
mov
popf
mov
mov
mov
enter
adc
xor
jle
ret
outsb
push
in
add
pop
mov
sarb
jle
add
cmp
add
sub
inc
cmc
movsb
sub
rcrb
jo
ds
mov
sub
movntps
shll
sbbl
mov
cmp
sub
mov
xchg
pop
sbb
dec
rcrl
and
add
daa
scas
or
inc
loop
popa
or
es
loope
jo
out
xor
inc
insl
pop
jge
rcr
wbinvd
aaa
mov
aaa
mov
inc
jne
aam
and
lods
addr16
sbb
mov
jmp
fdivr
dec
frstor
jnp
and
clc
dec
pop
stos
mov
rol
mov
and
popa
push
mov
repnz
addl
adc
cltd
inc
jo
mov
lea
or
fs
call
push
inc
inc
out
sbb
xchg
mov
jo
cmp
push
mov
outsb
xor
mov
xchg
rolb
cwtl
aam
push
in
xchg
loopne
sub
shll
mov
ret
pop
fcoml
loopne
arpl
xchg
sbbb
cli
xchg
cmp
dec
jmp
mov
leave
popf
cmp
jbe
cmp
call
sahf
xchg
push
adc
out
dec
push
pop
sbb
or
xor
sti
mov
loope
add
mov
push
insb
pusha
and
loope
push
lcall
lods
or
sub
mov
pop
nop
inc
in
pop
popl
cmpsl
sbb
push
loopne
push
mov
sub
lret
sahf
ja
sub
pushf
je
mov
out
out
jnp
bound
pop
cmpsb
ret
mov
mov
pop
and
mov
xor
add
andb
sub
sub
movsb
sahf
lods
mov
pop
xchg
jmp
rol
lock
mov
push
jecxz
and
and
out
mov
xchg
add
pusha
scas
clc
mov
je
push
dec
test
xor
jg
and
mov
ljmp
dec
ljmp
mov
imul
mov
and
mov
or
mov
pop
sbb
xor
ret
or
repz
jp
fistl
jne
sub
mov
pminub
xchg
in
pusha
lret
push
shll
loop
or
negl
jae
mov
mov
inc
xor
mov
dec
sbb
mov
jno
adc
push
inc
shrl
fsubrl
call
out
js
jns
or
jp
inc
mov
movsl
jae
out
orl
add
sub
fists
fildll
dec
push
das
sub
inc
cmp
push
arpl
sub
hlt
add
mov
inc
int
into
sbb
add
mov
pop
stc
push
mov
arpl
cmpsl
inc
fists
and
adc
jg
cmpb
dec
cmp
dec
mov
mov
cmp
stos
dec
and
push
xchg
xlat
jb
inc
sbb
sub
pop
push
les
gs
nop
cmp
adc
sbb
cmp
cwtl
hlt
and
mov
sbb
lret
push
inc
call
pushf
mov
pop
pop
mov
mov
stos
subl
pop
and
rorb
iret
push
mov
insb
sbb
pop
in
aas
hlt
out
mov
push
fildl
xchg
jb
mov
in
stos
mov
out
sbb
mov
sub
xor
aad
sbb
push
outsl
adc
pop
movsb
xchg
xchg
incb
jae
push
in
jecxz
xchg
int3
adc
dec
lds
adc
pop
pop
xchg
xor
mov
push
sub
xchg
nop
and
mov
outsb
mov
cs
out
xor
adc
adc
xor
add
pop
scas
mov
jle
aam
mov
wbinvd
cmpsb
nop
add
inc
dec
aaa
and
into
mov
mov
mov
sub
popa
jo
mov
pop
sub
adc
fs
and
loope
xorl
lcall
lods
addr16
mov
dec
pop
mov
cmc
push
mov
outsb
test
ret
mov
mov
xchg
lret
xchg
xorb
jno
jnp
add
movsb
or
adc
jno
insl
lods
loopne
fsubrs
cmp
jnp
cmpsb
push
loope
jecxz
inc
movb
stos
sahf
div
cmp
cmp
cmpsl
or
mov
xlat
clc
out
aam
jne
mov
inc
xchg
or
outsl
pop
and
xchg
test
jg
mov
gs
xchg
std
sbb
mov
das
dec
mov
lds
dec
arpl
enter
fdivp
out
test
push
ret
pop
dec
pop
inc
mov
add
iret
repnz
test
int
mov
out
mov
push
aad
add
btc
adc
lret
cmp
iret
fldl
repnz
mov
dec
out
xor
pop
imul
or
test
mov
push
ret
sub
push
xchg
sahf
test
push
fbld
addr16
push
pop
push
mov
mov
js
sub
xorb
stos
out
cmp
ror
sub
pop
fsubs
in
xchg
jg
xor
std
imul
mov
cmp
das
dec
pop
andb
lret
sar
sub
dec
jmp
repnz
pop
pop
popa
stc
push
jno
and
in
mov
and
sub
sbb
xchg
out
jo
dec
pop
or
xchg
mov
push
sbb
mov
pop
mov
leave
pop
and
cmp
push
jp
cwtl
out
movsb
cmp
xchg
push
or
stos
mov
push
adc
pop
xor
in
stc
ss
xor
inc
xchg
cld
arpl
frndint
sbb
scas
sarb
test
push
jns
mov
push
push
sub
push
sub
xchg
cli
insb
cld
shl
daa
int
sbb
das
es
push
and
ds
insl
jno
std
jle
xlat
ljmp
ret
jnp
imul
push
outsl
ret
mov
mov
add
sbb
and
mov
nop
sub
push
mov
outsb
cmp
popf
and
fcomps
push
mov
mov
cmp
sti
shl
loope
sbb
xchg
mov
adc
mov
int
cmc
add
cmp
cli
das
loopw
in
and
sbbl
inc
mov
cli
dec
xchg
icebp
or
push
scas
sahf
loopne
xor
mov
lods
lds
push
mov
pop
lea
out
decl
imul
test
mov
fwait
mov
pop
pop
lret
popa
cwtl
jecxz
mov
aas
push
jae
sti
sti
fpatan
push
cmp
pop
push
and
dec
sbb
pop
in
jge
jle
xchg
call
test
inc
roll
jno
pop
mov
and
aaa
sub
adc
xor
or
xchg
popa
jo
jo
mov
pusha
cmp
inc
push
dec
imul
inc
fs
jmp
cs
adc
fistl
leave
sahf
adc
popa
lahf
imul
jg
push
gs
cmp
adc
stc
or
loopne
outsb
jne
push
mov
fcoml
xchg
shll
outsl
lock
call
xchg
das
inc
test
sti
insl
sbb
pop
or
xchg
and
cmp
je
lret
xor
imul
mov
adc
mov
pop
lret
mov
std
ljmp
popa
pop
xor
sti
cmp
pop
or
or
popa
lea
lds
xchg
sti
lods
and
aam
cmp
int3
shlb
or
or
and
aas
adc
dec
pop
scas
iret
pop
xchg
mov
aam
mov
mov
xorl
xor
push
into
mov
out
adc
pusha
mov
jl
lods
push
dec
inc
ret
inc
loop
push
sbb
xchg
mov
add
dec
into
roll
cmp
out
leave
pop
push
sbb
pop
jl
mov
loope
pop
popf
inc
sti
dec
xchg
cli
pop
dec
adc
mov
nop
out
aam
sar
enter
enter
test
call
repnz
enter
and
xchg
xchg
sub
sub
dec
adc
test
jg
pop
mov
fs
mov
jp
enter
cwtd
fmull
inc
aas
or
inc
idivl
shrb
adc
out
sbbb
lds
stc
sub
cld
sub
jecxz
sub
bound
les
xsaves
fisttpll
roll
jbe
xchg
push
js
sub
test
fnstcw
ss
inc
pop
ror
fidivrl
int
pop
leave
pushf
or
js
std
cmp
iret
lret
xchg
into
mov
and
loop
xor
mov
dec
push
sub
aam
lods
jnp
mov
icebp
fidivrs
add
jl
dec
ret
imul
subl
mov
out
mov
jnp
dec
sub
mov
gs
imul
imul
mov
jmp
dec
stos
push
push
xor
in
mov
neg
dec
jnp
sahf
shrl
stc
push
scas
aaa
shrb
cld
test
adc
cmp
out
adc
push
dec
shll
mov
sbb
pop
iret
test
sbb
loopne
push
je
movl
test
fs
sahf
xor
cmp
ret
push
jnp
mov
xchg
pop
scas
cmc
movsl
adc
cmp
xor
push
pop
pop
mov
cmpsl
ret
fcomps
adc
pop
adc
jle
add
rolb
ja
mov
nop
jmp
test
mov
pop
push
xchg
jne
call
push
xchg
scas
mov
lock
xor
popf
lds
sub
push
inc
out
add
imul
mov
movsl
es
inc
cld
and
imull
cs
addb
es
out
inc
test
inc
jno
lea
les
mov
popf
fisubl
sbb
mov
rol
lods
popa
mov
mov
jo
adc
in
shl
cwtl
sub
das
inc
xchg
fildll
add
scas
in
test
outsb
inc
pop
pop
sub
xor
sub
fsub
push
pop
popf
mov
aaa
bound
test
pop
jge
call
jp
insl
sub
dec
imul
or
fwait
mov
xor
push
add
xlat
sub
mov
xor
dec
sti
push
mov
cmp
cmc
dec
cs
loop
mov
or
pop
dec
lods
push
and
cmp
xchg
push
cmp
add
testb
out
mov
cmpsl
addr16
mov
testl
or
cmp
popf
mov
jo
and
mov
inc
enter
pushf
in
pop
sbb
xchg
arpl
pop
adc
aas
pop
adc
jmp
mov
inc
sahf
or
sti
inc
sub
xlat
gs
mov
rolb
aad
and
adc
push
mov
push
insl
xor
xor
mov
jns
rcl
sub
popf
pusha
jbe
mov
jo
sbb
jns
xor
lret
xlat
popa
iret
cli
and
je
popa
xor
lds
popa
or
mov
xor
push
mov
and
lods
add
push
xchg
mull
mov
add
or
xchg
xchg
add
aas
jbe
mov
movsl
inc
and
cmp
mov
pop
push
test
mov
or
jg
push
idivl
xchg
mov
cli
mov
repz
cwtl
outsb
adc
icebp
sbb
scas
sbb
push
adc
cltd
add
imul
pop
sub
mov
es
mov
push
nop
hlt
adc
dec
pusha
dec
aaa
scas
or
push
xor
mov
lds
cld
lret
lods
int3
fcoms
jne
cltd
cli
fcmove
sub
xchg
push
add
insb
sbbl
js
sbb
rorb
ds
testl
push
sub
jae
insl
fs
sub
push
les
jo
inc
add
pushf
jnp
pop
mov
fisttpl
and
pop
rcrb
iret
leave
testb
add
je
push
in
mov
imul
iret
sub
shlb
movsb
sub
scas
fmuls
and
outsb
ja
push
jnp
lods
push
mov
mov
xorl
mov
sbb
push
fistpl
js
cmp
lret
in
cmp
jle
sbb
in
push
xchg
push
add
lcall
mov
data16
add
inc
out
mov
sub
xorb
mov
fsubl
push
push
lock
xchg
jbe
jecxz
addr16
dec
xchg
ret
movsl
xchg
mov
dec
lret
ret
dec
insl
std
jne
lahf
sbb
dec
cli
mov
lret
out
es
jmp
xchg
pop
adc
jle
test
iret
inc
sub
mov
mov
dec
mov
cmpsb
xchg
imul
or
inc
roll
sub
out
in
dec
int
fldcw
in
cmc
mov
pop
pop
mov
dec
inc
fxch
neg
push
rclb
push
movl
jno
pop
cmpsb
mov
fs
mov
std
add
mov
out
mov
in
cmp
xchg
loop
ja
cmp
push
xchg
and
decb
loop
xor
xchg
lcall
mov
jnp
pop
pop
scas
xlat
call
push
bound
lret
aad
test
out
iret
sub
loopne
movsl
and
mov
movsb
adc
jbe
adc
je
test
nop
xlat
int
popa
cmc
js
pop
dec
dec
and
xchg
sbb
mov
lock
mov
sub
test
std
cmp
jo
mov
jo
xor
dec
lea
movsl
and
sbb
rcrb
sub
adc
leave
cltd
mov
jb
fadds
decl
mov
add
lds
pop
inc
shrl
push
adc
inc
sbb
add
cs
data16
mov
sub
mov
xchg
mov
fs
shl
adc
cwtl
pushf
pushf
cmpsl
rcl
lock
nop
incb
add
cmc
push
out
jns
movsb
scas
sbb
ret
cmp
sub
call
push
mov
adcl
mov
push
stc
ret
in
xchg
in
and
mov
test
test
pop
xor
call
outsb
xchg
inc
or
mov
mov
dec
rorb
stos
inc
lret
in
jbe
adc
lahf
sub
fdivrs
cltd
push
push
add
rcrl
add
daa
mov
lods
les
outsb
mov
inc
clc
xor
mov
pop
repz
movsb
sbb
bound
mov
cmp
and
mov
negb
loop
jp
int
aaa
adc
jge
dec
dec
iret
dec
js
jae,pt
in
je
and
pop
jae
push
dec
inc
pop
xchg
sbb
std
popa
loopne
and
push
loop
call
cmp
push
les
adc
in
cltd
jo
or
cmp
into
imul
in
cmp
aas
cmp
push
xor
mov
xchg
xchg
push
mov
jp
lcall
ja
sbb
aaa
inc
ret
dec
loop
inc
negb
sbb
inc
fistpll
dec
mov
cmp
dec
jo
jo
rorb
int3
xchg
iret
and
movl
xchg
xor
xchg
out
shl
popa
or
loop
negl
loop
xchg
rorl
mov
pop
and
sub
test
leave
or
insb
pop
fsubrs
push
mov
inc
cmp
lcall
pop
or
inc
mov
mov
std
and
adc
jb
dec
daa
iret
stc
add
cmpb
jnp
pinsrw
push
sub
or
daa
clc
sarb
jbe
push
mov
add
fwait
shll
or
sarb
push
mov
dec
sub
test
jp
mov
test
inc
ret
push
sbbl
or
jecxz
pop
fmul
lods
and
adc
push
clc
add
addr16
push
loopne
faddp
scas
or
repz
in
popa
dec
insb
shrl
xchg
mov
mov
dec
push
inc
movsl
insb
or
cmp
mov
jne
inc
repz
dec
sbb
idivl
xor
lcall
adc
push
xor
cmpsl
jns
lret
sbb
shlb
filds
pop
xchg
xchg
movsl
loop
icebp
dec
pop
ret
out
mov
daa
ljmp
mov
adc
sub
outsb
test
sbb
adc
subb
int3
xor
ja
cmp
aam
mov
cmp
inc
jbe
test
mov
cmc
data16
data16
and
jo
cmc
inc
xchg
cmp
xor
mov
xchg
or
jmp
add
lods
movsb
or
jecxz
fst
push
and
cmpsl
adc
add
dec
mov
dec
fldenv
mov
dec
fldenv
cs
inc
cmp
mov
push
loopne
inc
mov
sub
jl
mov
push
or
cs
add
int
sbb
add
pop
adcl
ret
mov
ljmp
sub
sbb
sub
test
dec
lods
ds
test
mov
sbb
lret
mov
ja
scas
cwtl
leave
ja
mov
mov
mov
pop
nop
mov
cmp
cwtl
loop
cmp
mov
addr16
xchg
or
std
dec
push
jb
daa
push
fstps
cmp
fadds
repnz
mov
mov
pop
jmp
movsb
pushl
xor
cmp
sahf
int
fwait
popf
and
cmc
add
jl
rclb
and
xchg
js
outsb
cmp
js
sub
jo
pop
cmp
lods
mov
mov
mov
stos
and
arpl
and
or
push
cmp
dec
inc
and
jb
inc
push
shr
mov
pop
dec
pop
stos
cld
pop
shlb
xlat
call
jg
mov
fidivrl
pop
aad
sbb
test
xchg
daa
push
pop
inc
dec
pop
xlat
jmp
jp
lcall
inc
mov
mov
pop
jl
jl
adc
hlt
jg
sub
xor
mov
adc
shlb
sbb
and
enter
adc
outsl
shlb
pop
push
inc
popf
iretw
lods
iret
mov
movl
pushf
fdiv
dec
rcrl
insl
xlat
ds
push
test
push
mov
xor
pop
sahf
xor
addr16
in
cmp
mov
cmp
out
push
add
decb
push
mov
dec
and
test
sbb
dec
adc
inc
gs
lds
add
ss
and
or
shrb
mov
daa
mov
fwait
lret
inc
in
in
lods
jb
mov
mov
fdivrp
inc
cld
fbld
sbb
dec
and
clc
mov
mov
pop
popa
pop
jne
in
stos
xor
adc
int3
fdivrl
or
inc
dec
in
outsl
pcmpeqb
xor
xchg
shr
sbb
jle
repz
shr
or
aas
add
jmp
jbe
pusha
outsb
or
lcall
imul
pop
and
imul
stos
fdivl
xchg
sub
sbb
add
scas
stos
mov
sub
fbld
xchg
cmpsb
mov
jb
cmp
lret
popf
sbb
pushf
loope
in
mov
mov
clc
lock
and
pop
mov
enter
into
mov
push
jb
scas
aam
ret
jp
jns
adc
push
pop
fistl
mov
push
fldenv
adc
push
jge
shr
mov
out
jmp
cmc
loop
jns
mov
sbb
mov
mov
cmc
out
scas
cwtl
shrl
icebp
in
cmc
pop
pushf
and
faddp
jo
jle
test
xchg
mov
sti
addr16
into
add
dec
jae
movsb
or
fistl
push
inc
lock
adcl
and
imul
int3
inc
scas
cltd
roll
mov
in
pop
icebp
out
bound
sti
mov
repnz
mov
add
lock
idivl
js
std
dec
mov
dec
loope
int3
out
out
orb
sbb
mov
jae
cwtl
pop
push
mov
xchg
pop
push
outsb
and
cli
xor
repnz
imul
sarl
push
mov
scas
ds
sbb
xchg
daa
popf
add
xchg
scas
repz
pusha
and
sbb
mov
mov
sbbb
or
xor
mov
movsb
fcoml
push
pop
clc
add
mov
dec
popa
into
add
dec
fcmovb
aas
mov
pop
inc
std
sbb
jb
push
xchg
int3
push
imul
leave
xchg
aas
mov
loop
hlt
out
cmp
cmpsl
inc
aas
cmp
mov
pop
jae
mov
jle
xchg
sub
addl
adc
fldcw
insl
rcrb
jg
addl
lds
std
mov
fmuls
mov
ljmp
arpl
outsb
sub
pushf
sti
mov
mov
dec
xor
out
enter
jp
xchg
adc
loope
adc
sub
out
lock
addr16
mov
xchg
push
xor
mov
in
or
dec
shrb
mov
movsl
shrl
pusha
bound
push
and
sbb
inc
nop
inc
push
mov
lahf
mov
or
adc
adc
fisubrl
loopne
inc
inc
mov
cmpsb
jmp
xor
sub
adc
nopl
mov
mov
mov
loope
fldl2t
push
int
add
xor
push
xor
es
jl
test
ret
test
inc
jl
sub
and
clc
test
mov
clc
dec
jb
insl
and
jbe
js
dec
and
cs
adc
dec
fwait
jb
repnz
lods
shrl
xchg
push
movsl
test
cmpsb
in
outsl
inc
mov
int3
inc
pop
push
movsl
insb
test
mov
and
lret
mov
jne
jne
and
inc
or
scas
cld
inc
iret
mov
out
dec
inc
sbb
mov
dec
mov
xchg
ret
mov
dec
xor
cs
cmp
jnp
or
add
clc
mov
mov
pop
dec
je
adc
mov
repz
mov
or
fbld
xchg
scas
pusha
mov
push
sub
sbb
mov
div
push
xor
cmpsl
jmp
lret
jae
lcall
out
adc
dec
inc
in
mov
push
cli
jg
and
fnstsw
mov
dec
std
mov
xor
xchg
popa
out
out
add
dec
out
push
xchg
out
ss
sbb
cmp
xchg
inc
dec
stos
cmpsl
sbb
xlat
xchg
inc
cmp
ds
xor
in
jae
jg
xchg
mov
ds
xchg
mov
cmpsl
into
mov
mov
xchg
mov
out
jl
and
push
cmpsl
movsl
push
imul
sub
in
inc
mov
xor
shlb
repnz
xorl
sub
jge
fisubs
mov
add
scas
xchg
mov
cmp
mov
jecxz
in
push
fimull
mov
loope
icebp
mov
dec
inc
shrb
sbb
leave
cld
xor
xchg
add
clc
inc
inc
jno
add
gs
je
ds
sbb
mov
fs
fiadds
xorl
data16
pop
fdivrp
ficomps
stc
ret
stos
jno
popa
cli
lret
movsb
cmp
popf
ljmp
imul
and
pop
das
xchg
push
mov
xchg
aaa
loop
mov
adc
cmp
mov
js
cmp
and
inc
push
fldenv
cld
lret
or
adc
push
mov
xchg
addr16
jae
mov
fldt
sub
fidivrl
hlt
popa
add
adc
lock
mov
mov
ljmp
add
mov
push
mov
jmp
negb
sub
outsb
dec
mov
je
popa
pop
sub
mov
in
and
nop
inc
pop
jmp
xchg
xchg
xchg
pop
notl
push
ja
mov
out
adc
adc
cmpsl
aas
aaa
addr16
xchg
pop
xor
xchg
rolb
das
cli
jmp
xchg
mov
mov
lahf
subl
cmp
sub
rcrl
xchg
sbb
popf
js
push
fisubrl
enter
test
jae
fwait
mov
ret
fwait
adc
outsl
xlat
imul
sub
lods
pop
sbb
subb
sub
in
rcll
inc
jecxz
outsb
xchg
jmp
and
pop
xchg
push
lcall
jg
fcmovbe
pusha
stc
gs
xchg
inc
cmp
ljmp
nop
enter
push
movsl
mov
xchg
mov
ret
pcmpgtb
mov
mov
stos
out
xchg
jg
inc
mulb
stc
mov
mov
getsec
jecxz
int3
jg
insb
mov
jbe
cwtl
cli
subl
xor
stos
fwait
stc
add
cmp
outsl
aaa
sbb
data16
dec
add
mov
cmp
xor
andb
dec
mov
inc
push
and
das
jle
sbb
sarl
fdiv
xor
fiadds
jecxz
dec
pusha
cltd
jmp
add
jl
clc
hlt
and
sbb
mov
rcrb
pushf
fcmovne
test
fstpt
aam
mov
add
cmp
ror
jnp
shlb
cmpsb
push
xor
add
push
daa
mov
ss
and
sti
xchg
mov
out
fildl
push
jno
jbe
cmp
hlt
sub
mov
jo
jecxz
mov
mov
testl
jb
mov
daa
mov
mov
addl
mov
insl
jle
push
inc
cmp
icebp
in
clc
fs
fiaddl
cwtl
enter
xchg
cmc
sbbl
in
mov
pop
leave
outsb
arpl
xlat
loop
lds
sub
sub
fwait
pop
movsl
sti
aam
jno
adc
lret
mov
inc
test
lcall
repnz
adc
xor
dec
mov
fldl
dec
and
sbb
add
mov
test
sbb
repnz
ds
cmc
stos
jge
adc
jge
imul
adc
lods
enter
out
sbb
andb
out
jno
pushf
lods
mov
inc
insb
mov
mov
xor
jno
imul
xchg
subl
ss
cmp
test
jno
addr16
push
add
arpl
clc
mov
insl
cltd
addb
int
ficoms
or
jbe
mov
pop
push
das
and
inc
stc
fistpll
jbe
ja
loope
push
push
lods
pop
xchg
mov
not
in
clc
mov
les
inc
loop
jecxz
andl
dec
adc
inc
inc
mov
dec
hlt
mov
aad
adc
inc
pop
dec
pushf
and
mov
movsl
in
inc
in
lods
or
incb
iret
sub
xchg
jbe
sub
mov
movsb
jmp
cld
mov
push
std
cmpsw
orl
fisttpl
gs
lcall
mov
and
xchg
jno
cmp
sbb
jp
dec
dec
lock
imul
push
test
stos
jp
stos
outsb
mov
push
sub
js
mov
fsubrl
inc
scas
sarl
mov
jg
pop
out
mov
push
int3
jbe
inc
jl
mov
mov
or
jnp
scas
std
lret
push
jp
outsl
loop
jno
inc
mov
aam
stc
cmp
pop
push
jmp
mov
xchg
hlt
jl
pop
cmp
rcrl
xor
cltd
inc
cmp
mov
mov
fs
imul
dec
or
and
pop
pop
dec
ds
loopne
or
mov
xor
and
hlt
jno
fdivs
rclb
jmp
hlt
pop
fdivs
inc
aaa
cwtl
in
pop
push
psubsb
push
les
stos
movsb
jmp
mov
fmull
inc
pop
xchg
jno
sbb
loopne
idivb
cmc
or
aad
jns
and
inc
ss
xchg
sbb
scas
cwtl
addr16
fmul
std
movsl
rcrl
ljmp
push
push
mov
aad
or
push
mov
push
out
mov
movsl
xor
loopne
jnp
stos
and
and
jnp
sahf
adcl
lods
lods
xchg
or
push
imul
or
cmp
ja
lea
ja
cmp
or
jl
mov
xor
dec
jge
and
push
xchg
fwait
scas
popa
in
test
dec
and
cwtl
cmp
test
sub
push
icebp
add
push
clc
fcoml
adc
push
sbb
into
adcl
pop
adc
inc
xchg
gs
lcall
jne
xlat
lcall
sbb
lret
jp
xor
popa
test
add
nop
rorl
push
add
in
loop
mov
loope
mov
dec
xor
sub
andb
mov
movsl
mov
ljmp
loop
shrb
call
int
arpl
lods
or
cmc
stos
mov
int3
xor
ficoms
fcomi
or
sbb
in
push
data16
and
mov
stc
jmp
pusha
lea
jbe
not
test
sub
jmp
cmp
cmp
call
stc
shlb
je
and
inc
and
sbb
gs
jne
gs
push
movsb
xchg
mov
lock
jb
test
mov
je
jb
or
jp
imull
enter
sti
sbb
cmp
stos
inc
jnp
icebp
test
imul
or
and
sub
add
das
jl
orb
clts
mov
insb
sub
pop
and
pop
insl
jb
stos
or
sbb
data16
pop
call
add
shr
movb
adc
call
pop
jbe
jnp
and
loope
loope
cltd
out
mov
jne
das
mov
pusha
xchg
xchg
out
dec
pop
pop
popf
jne
adc
ss
push
shlb
sub
loopne
dec
ljmp
cmp
adc
dec
or
fsubrl
into
js
push
ja
lret
mov
out
rolb
bound
pop
dec
cmp
pop
and
mov
lea
pusha
pushl
pushl
movl
pushf
call
cmp
ret
jp
and
xchg
mov
subb
jns
xor
clc
idivb
xchg
xchg
jmp
inc
sahf
lret
add
shrb
sbb
sbb
stos
push
push
shrl
and
jge
ljmp
push
leave
xor
xor
xor
and
push
sub
lea
dec
xchg
ficompl
dec
addr16
sbb
inc
xor
jne
dec
push
xchg
aad
cmp
or
xor
jp
and
test
mov
test
cwtl
rolb
adc
xor
pop
mov
cmp
inc
lret
jno
test
jle
and
push
inc
insl
leave
mov
xor
decb
inc
data16
loop
add
and
mov
scas
xchg
inc
shrb
xchg
xor
stos
aaa
rcrb
idivb
push
cltd
cmp
push
adc
push
inc
push
jge
je
or
fstpt
sbb
mov
into
dec
push
jge
pop
push
and
jns
in
outsl
add
or
mov
mov
cmc
call
ja
lods
jns
and
inc
mov
sbbl
cmp
into
mov
or
dec
adc
and
pop
ljmp
fcomps
scas
push
xchg
inc
push
fcompl
mov
stc
push
inc
or
cmp
nop
std
inc
push
std
shll
xor
jne
cmp
cmp
imul
cmpsb
outsl
add
stc
cmc
pushf
add
call
ja
jmp
push
mov
pushl
lea
jb
push
cmc
clc
test
cmpb
pushf
pushf
push
call
clc
test
test
pushf
mov
pusha
pushf
lea
je
setae
lea
jmp
pushf
pushf
lea
ja
jo
call
jmp
fs
cs
or
add
mov
mov
das
mov
scas
imul
add
jecxz
lock
rorb
sbb
mov
addb
pop
out
loope
imul
addr16
jns
xchg
and
subb
dec
sti
adc
rol
and
mov
sub
cmpsb
xchg
shll
mov
test
push
dec
mov
dec
in
ret
push
adc
jb
test
sbb
jge
shlb
inc
jg
pop
or
dec
lds
fldenv
push
popa
jno
into
push
iret
imul
jne
sub
inc
xor
pop
cmp
test
movsl
or
decb
xor
jl
scas
dec
adc
push
mov
cmpsb
movsl
cltd
dec
js
xor
or
and
jle
int
lock
mov
aam
test
je
stos
cmp
ss
xlat
cmpl
mov
add
mov
imul
popa
aad
mov
xor
push
and
mov
js
push
iret
in
neg
enter
xor
adc
test
jo
jecxz
sub
mov
in
mov
imul
jge
mov
stos
pop
sbb
dec
out
push
xor
sbb
cmc
mov
xchg
outsl
andl
jno
xor
ss
imul
mov
sub
xchg
lret
dec
aaa
xchg
cltd
xchg
test
mov
dec
rorl
or
xchg
movsl
sbb
jo
dec
or
ljmp
into
cmpsl
push
bound
push
mov
inc
or
lret
stos
jo
push
sub
repz
push
jnp
ret
adc
in
jge
jge
fidivs
xor
jp
mov
pop
popf
stc
lods
xchg
mov
addb
out
loope
push
push
out
icebp
cld
cli
subl
mov
mov
sbb
pop
mov
pop
add
je
mov
and
jmp
jl
idivl
cs
pop
sub
out
and
jp
mov
lock
jnp
outsl
sub
into
ret
loope
xchg
pop
mov
mov
bound
cmpsb
jns
jae
fadd
mov
sarl
out
add
into
push
mov
les
push
shlb
mov
insl
sar
cmpsb
popa
and
adc
pop
out
xchg
scas
leave
data16
mov
jno
loop
loopne
add
sbb
push
cmp
pop
out
jnp
cmp
das
jp
and
stos
pusha
xor
mov
out
addl
dec
and
aam
sbb
jno
or
xchg
cmpsl
push
cmp
pop
mov
mov
sub
imul
popf
pop
scas
popf
pop
jne
cmp
add
push
adc
rcrl
xchg
jno
pusha
add
in
push
or
mov
into
xchg
sbb
mov
xor
call
cwtl
inc
inc
aad
xchg
popa
rcrb
jbe
sub
shll
out
inc
mov
cli
out
data16
sub
fldt
cmpsl
js
hlt
xchg
mov
aam
cs
mov
fs
les
xchg
gs
arpl
jmp
shll
jl
enter
inc
mov
push
pop
pop
or
pop
vphaddwd
cmc
imul
and
mov
add
aad
xchg
mov
cmp
je
inc
xor
push
test
pop
jecxz
jne
lock
lcall
in
popa
call
loope
daa
pop
sub
mov
lahf
xorl
lcall
jmp
sti
pop
xchg
push
arpl
dec
mov
mov
xor
jmp
mov
and
int
push
adc
stos
movsb
jns
ds
sahf
pop
stos
or
mov
imul
and
push
shll
and
fbld
ljmp
enter
push
aam
xchg
jecxz
dec
or
in
lods
pop
push
int
cs
jae
or
pushf
nop
cs
push
adcl
ss
int
and
mov
xlat
xor
mov
stos
xchg
test
ss
sub
movsb
or
sub
ret
aas
inc
stos
gs
mov
imul
sbb
loop
mov
arpl
inc
pop
push
add
aas
push
xor
pop
in
sub
out
xor
mov
loope
xchg
ret
jge
lods
cmp
pop
adcl
push
jnp
in
rcl
out
roll
mov
cmc
cmp
loopne
addl
lcall
xchg
sub
hlt
mov
popa
dec
mov
sub
pop
fidivl
je
cli
ss
sub
xlat
sub
push
leave
xor
xchg
cwtl
fisubs
fidivrl
jmp
repnz
je
cmpsb
adc
lcall
and
lahf
or
lcall
shlb
or
scas
flds
les
add
loopne
jne
push
into
test
lods
call
mov
push
ficomps
cmp
outsl
cmp
out
insb
test
push
outsb
xchg
jbe
andl
fcmovbe
sub
cwtl
xor
xor
ret
lret
xor
inc
and
test
push
jb
popf
lds
dec
mov
and
int3
je
testl
stc
pushf
stos
push
mov
jecxz
or
or
lea
xor
imulb
loope
pop
arpl
icebp
lahf
xchg
shl
mull
xchg
fmuls
mov
mov
inc
mov
jbe
and
cmpsl
ss
inc
cs
jbe
insb
and
add
add
pop
std
adc
pop
jmp
or
fs
mov
sub
push
jg
adc
ljmp
push
rcrb
mov
data16
push
sbb
out
js
add
mov
add
mov
jb
inc
push
rcr
clc
outsb
adc
jae
dec
xor
arpl
jg
mov
or
mov
repnz
outsl
mov
push
mov
jg
jge
popa
hlt
xchg
negl
ss
add
jecxz
popa
cmp
mov
add
shr
cmpsl
push
insl
lods
jg
sbb
inc
jl
adc
adc
mov
fs
cmp
sbb
fwait
add
int3
mov
jmp
ss
or
leave
xchg
push
dec
mov
and
cmpsb
push
and
shll
shll
in
ror
rorb
cld
add
cmp
rolb
mov
or
pop
cs
jge
out
in
jg
repz
js
xor
sbb
dec
mov
mov
pop
fadds
push
xchg
jle
cltd
mov
daa
cltd
push
ds
mov
cmpsl
test
data16
movsl
dec
rcr
mov
aam
iret
mov
mov
lcallw
subb
fldenv
xchg
std
adc
icebp
fsts
dec
xlat
mov
jns
push
insb
dec
adc
int3
sti
flds
mov
or
out
jae
mov
push
fsubrl
xchg
sahf
sub
dec
repz
aaa
fistps
lahf
jmp
cmp
push
div
mov
mov
sbb
mov
and
lds
aam
dec
pop
mov
stos
xchg
outsb
sbb
fwait
and
not
push
outsb
or
sbb
testl
jns
aad
sbb
xchg
pop
ja
mov
xchg
push
add
fcom
and
jno
and
lods
scas
notl
xchg
testl
cmpsb
addr16
in
int
lret
inc
iret
add
pop
aam
pushf
push
adc
enter
ljmp
ror
inc
cmpsl
jmp
in
adc
and
xchg
sbb
lsl
sub
rol
inc
or
loopne
stc
adc
push
out
mov
add
mov
mov
mov
push
sub
popf
push
mov
aam
repnz
in
mov
mov
jne
xchg
lret
lods
add
out
lods
dec
and
jle
adc
lcall
lock
lds
pop
sub
pop
into
cmp
adc
jne
adc
fsub
inc
sub
ja
lcall
add
lds
lock
sbb
in
dec
icebp
pusha
jo
das
fistpl
into
xchg
cltd
push
mov
dec
in
lea
test
xor
mov
pushf
adc
mov
int
lcall
mov
xchg
add
mov
and
push
jmp
rorl
scas
or
imul
in
leave
fmuls
lds
je
jno
addb
sbb
enter
and
lock
add
cmp
and
outsb
js
test
sub
loope
dec
mov
pop
mov
push
into
ret
in
jmp
dec
lods
dec
std
test
push
clts
js
shrl
xchg
movsl
scas
sub
dec
mov
push
mov
ficoms
cmp
fnstenv
xchg
fldt
int
add
mov
mov
sti
js
fildll
push
pusha
xchg
or
scas
and
pop
jge
jg
mov
cmp
dec
cld
test
aad
add
jb
mov
add
aas
in
test
and
mov
xchg
pop
mov
lcall
sub
fmuls
xor
sbb
jo
pop
jmp
add
mov
push
lret
cmpsl
test
mov
test
xor
jp
test
lea
push
jle
cli
sti
xchg
jno
xor
lds
fdivs
lea
pop
xchg
or
jl
dec
lock
jns
inc
test
pop
fsub
fidivrl
in
and
insl
add
outsb
jbe
sub
imul
pop
ret
inc
mov
push
jl
bound
mov
jne
ja
jne
and
sub
pop
repnz
mov
lock
pavgb
xor
and
aad
pop
pop
push
jl
jp
fbstp
mov
jp
xchg
movsb
pop
push
ror
into
sub
popa
inc
ds
dec
test
ret
cmp
jne
add
leave
xchg
inc
xchg
sbb
clc
mov
jns
ror
mov
ja
xchg
xchg
stos
shlb
cmp
xor
jae
push
xor
mov
rcrb
inc
aaa
push
in
arpl
cli
add
das
sub
in
pop
fdivp
enter
ss
jl
xchg
cmpsb
xor
push
and
call
movsb
mov
or
push
push
sbb
inc
push
jb
loop
xchg
adc
xchg
jns
add
add
xor
mov
imul
movb
jae
daa
or
in
mov
in
xchg
push
dec
pop
leave
cmp
int3
xchg
push
sahf
out
loope
sbb
ss
int
mov
jl
lahf
cld
pusha
mov
out
or
sub
pop
or
daa
jmp
add
lret
in
push
xlat
pop
push
cltd
scas
test
mov
adc
pop
pop
dec
ret
and
cli
mov
xor
cmp
sti
sbb
insb
adc
int3
dec
jge
cmp
sbb
repnz
insb
adc
mov
mov
faddl
pusha
pop
sbb
inc
and
xor
jns
adc
mov
sbb
mov
xchg
xchg
stos
xchg
push
mov
jns
xor
stc
push
xor
inc
xchg
gs
cmc
sub
pushf
mov
aad
mov
sbb
test
xor
das
aad
sbb
ficoml
add
mov
xchg
ds
pop
cmp
outsb
lahf
pop
xlat
lods
fstpt
lret
lret
outsb
dec
and
pop
mov
jg
jne
loopne
daa
pop
jb
xor
bound
adcb
loopne
xchg
mov
push
xchg
push
stc
sub
push
cmpsb
bound
mov
adc
jle
leave
xor
mov
xor
mov
xlat
lods
xchg
enter
mov
leave
pusha
inc
nop
mov
sti
push
sti
js
stos
test
sarb
lods
fstp
cmp
lret
jae
outsb
xchg
pop
inc
cli
gs
bound
mov
imul
push
mov
bound
jmp
lods
push
mov
or
cmpsb
aam
jns
push
inc
into
rolb
xchg
mov
xchg
sub
fstpl
out
adc
stc
mov
push
clc
or
daa
or
daa
xchg
push
ret
je
call
pusha
rcr
sti
mov
fisttpl
or
fwait
push
mov
dec
test
push
imull
cmpb
jno
inc
inc
pop
bound
inc
mov
pop
nop
fs
cmc
lds
cwtl
repnz
xorl
pushw
dec
push
lods
pop
push
fwait
gs
repnz
lea
out
or
orb
jmp
push
push
cmp
iret
shlb
movsb
scas
test
cmp
cli
and
notw
mov
and
adc
or
dec
loope
mov
pusha
or
std
cmp
mov
rclb
fnstsw
add
jmp
mov
inc
sbb
jb
jno
nop
mov
sub
arpl
cld
clc
pushf
aam
mov
or
add
sub
ret
pop
sbb
or
and
fwait
adc
cmp
cmp
lret
call
push
adc
inc
mov
rclb
jle
adc
and
mov
or
paddusb
stos
adc
mov
loopne
outsb
jae
pop
jmp
rolb
jmp
dec
and
les
push
popf
bswap
test
insl
and
cli
rolb
xor
push
push
mov
imul
adc
rorl
jae
and
lret
jmp
iret
cmp
sub
mov
scas
mov
sub
dec
cmpsb
mov
mov
or
push
pusha
insl
mov
lds
insl
in
in
pusha
incb
je
mov
hlt
ja
adc
into
or
int3
scas
popa
mov
ror
data16
sub
test
lods
outsl
jae
cmp
out
jbe
jb
gs
icebp
idivl
arpl
push
xor
scas
sar
mov
movsb
mov
cmpl
test
jb
in
pop
push
data16
loope
imul
popf
jl
lret
xchg
jns
lods
mov
ja
mov
inc
jae
int
xor
push
loop
lock
push
loop
sub
das
mov
push
jmp
rcl
fisubrl
test
hlt
scas
sbb
nop
or
rcl
mov
xlat
dec
out
jmp
dec
xchg
mov
ret
mov
push
and
xor
call
xchg
sub
xor
ret
inc
xor
inc
repnz
inc
ret
xchg
jnp
cmc
jae
jbe
push
imul
das
into
mov
test
cld
out
sarb
insl
or
pop
testb
fcmovnbe
sbb
pusha
in
shr
adc
mov
fwait
leave
nop
fisttps
and
rcll
add
ljmp
mov
xchg
xchg
lock
out
fidivrs
jns
andb
xchg
sub
jno
jecxz
push
sbb
mov
sbb
xchg
clc
sbb
mov
je
and
mov
mov
shl
xorl
lods
leave
inc
addr16
dec
and
ds
cmpsb
iret
mov
test
and
and
inc
xchg
testl
or
push
push
jbe
loope
xor
cmpsb
jnp
test
xchg
jns
out
lahf
enter
adc
sub
into
or
push
int3
test
imul
push
and
xchg
lret
rclb
inc
inc
mov
test
pop
lahf
mov
mov
js
inc
ret
jno
andl
mov
movsb
mov
pushf
loop
mov
mov
cld
xor
rorl
sbb
jno
mov
lahf
mov
imul
xchg
adc
dec
jne
testl
ret
mov
ss
add
push
mov
xchg
dec
adc
out
aas
cmp
sub
jp
mov
xchg
pop
fs
sbb
mov
les
xchg
mov
bnd
jmp
imul
add
lds
adc
push
ja
in
xchg
fwait
add
mov
into
mov
adc
jbe
subb
pop
xor
scas
loopne
jne
xchg
fimuls
das
mov
out
mov
inc
cwtl
scas
out
pop
push
bound
sbb
dec
mov
jne
in
or
mov
xchg
add
push
xchg
push
icebp
arpl
push
inc
in
cmp
into
xchg
push
fdivs
xor
in
stos
pop
popa
xchg
or
mov
sub
int3
cmp
nop
test
outsb
mov
fs
in
or
and
int3
out
setg
aas
pop
inc
cmpsb
dec
pop
mov
lcall
pop
fs
data16
and
mov
notl
add
shr
pop
inc
jl
or
mov
shrb
push
fldcw
ficompl
push
fwait
test
jg
lea
xchg
mov
js
lods
add
in
clc
mov
pusha
cmpsl
pop
xchg
stc
mov
sbbl
sbb
aaa
jno
xchg
add
inc
pop
rcr
enter
inc
popl
out
lcall
nop
imul
je
fsubrl
mov
fldl
sbb
dec
xor
sahf
inc
pop
fwait
loop
dec
adc
aad
andb
out
leave
mov
push
push
jecxz
adc
xchg
xor
dec
mov
inc
mov
cmp
jnp
cmp
daa
cli
lret
lea
imul
xchg
add
push
ss
xchg
pop
add
sahf
push
xlat
cmpsb
pushw
shrb
daa
lret
cs
dec
shl
lods
pop
add
pop
out
andb
imul
loop
pop
add
das
xor
xchg
xchg
in
fwait
ja
cmpsl
pop
icebp
and
lea
jnp
fdivrl
pop
pop
jb
lret
idiv
ret
adc
or
inc
push
ljmp
in
xchg
mov
popa
std
dec
movsb
cmpsl
adc
sub
clc
jae
int
and
out
adc
lods
fldcw
jle
inc
mov
cmp
loope
mov
pop
shlb
lods
push
jns
in
arpl
testl
cmc
gs
xchg
sbb
ljmp
rol
fildl
xchg
sub
inc
adc
add
js
pop
jle
pop
dec
dec
imul
jne
js
data16
sbb
cmpsl
add
push
lock
jg
push
movb
add
mov
les
lahf
adc
inc
jmp
xor
mov
insl
test
jl
dec
add
test
xchg
xchg
imul
ja
jnp
test
shll
mov
mov
jmp
cltd
xchg
aad
inc
mov
mul
fcom
out
sbb
imul
pop
shrb
dec
lods
jne
subb
push
mov
jp
mov
aas
or
dec
add
cmovns
cld
popa
cmpsl
dec
test
adc
je
scas
clc
push
roll
cmp
pop
xor
sbb
mov
push
test
cmp
mov
xchg
addr16
leave
out
cmp
or
mull
xlat
scas
test
push
movsl
in
adc
lds
dec
loope
cwtl
ret
int
fistps
test
aam
insb
xor
pop
xchg
jg
mov
mov
push
popa
dec
inc
mov
mov
sub
mov
aam
push
and
enterw
inc
push
mov
mov
and
jge
mov
je
punpckhbw
inc
rcll
pusha
xchg
popf
xchg
leave
mov
mov
test
dec
or
cmc
andb
sub
xorl
lret
push
sbb
jl
ss
dec
outsl
in
xor
push
cmp
cmp
adc
push
icebp
add
and
fnstenv
sar
gs
mov
jnp
cmpsl
insb
das
insb
xchg
xorw
add
sbb
push
xchg
push
push
adc
or
and
and
cmpsb
mov
scas
sbb
push
ds
mov
sub
mov
xchg
mov
sti
jns
cmp
imul
dec
bts
das
jnp
adc
push
sub
jge
lret
pop
shlb
repz
mov
das
jns
adc
mov
mov
lahf
pop
pop
mov
popa
stos
fnstenv
insb
cld
cltd
fdiv
push
popa
add
and
fwait
sti
aaa
movl
mov
add
push
cmpsl
out
xchg
sbb
dec
pop
clc
pop
ja
fnsetpm(287
xchg
sbb
int3
push
cmp
popf
hlt
lea
and
xchg
sub
lods
fstps
jp
mov
lret
jg
mov
xlat
jge
mov
pop
ljmp
jnp
cmp
std
popa
inc
pusha
stos
xor
pop
fbstp
arpl
pusha
adc
adc
xor
and
imul
ja
popa
push
enter
ret
jge
rcll
pop
cltd
mov
pop
mov
or
iret
insl
aaa
sub
aam
mov
mov
push
push
push
or
fisttps
or
fimull
jmp
jbe
insl
out
enter
lcall
fdivl
inc
int3
and
fmuls
sbb
lret
fcoms
sahf
xor
jbe
ljmp
add
push
sub
add
xchg
mov
or
sub
pop
rcrl
pop
jns
cmp
jge
pop
xchg
push
inc
lods
add
jle
loopne
sbb
sub
xchg
or
cmp
cmp
sahf
jns
pop
sbb
push
and
subb
or
scas
jae
in
out
pop
sbb
xor
or
jp
movsb
imul
xchg
jl
dec
cli
out
roll
xchg
leave
mov
mov
lock
fs
lods
adc
mov
pop
fst
test
push
js
dec
and
mov
cmpb
push
mov
fisttpll
xchg
lcall
dec
inc
in
dec
pop
ds
les
or
and
inc
jnp
fistl
shlb
and
push
addr16
aam
shll
add
pop
repnz
push
lcall
mov
loopne
mov
and
ds
jg
mov
xchg
lods
and
scas
ja
pop
or
leave
push
out
popf
fmul
ss
cmc
or
xor
fs
or
pop
lret
sbb
adc
sub
inc
loope
pop
outsl
jle
sarb
add
lea
mov
pop
xchg
shll
inc
sub
fdivl
fucom
inc
mov
jb
add
sub
jno
xchg
cs
pop
dec
or
test
insl
test
rcrl
lahf
sbb
sbb
pusha
das
out
dec
sahf
sbb
fs
test
inc
mov
push
das
das
and
shrb
repz
rcrl
minps
faddl
insl
xor
int
pushf
aam
adc
mov
fsubrl
lret
push
mov
rcll
fcom
jne
xchg
jge
adc
mov
inc
mov
or
sub
fs
cmpsl
ja
rcl
fs
stos
fdivrl
push
ret
mov
aam
iret
das
pop
stos
jmp
lock
add
fdivrp
push
xchg
mov
xchg
add
sub
dec
push
mov
mov
fcompl
popf
ret
leave
into
sub
pop
mov
jnp
fwait
and
and
xlat
mov
mov
hlt
hlt
pop
lds
jae
xchg
xchg
jnp
ret
scas
mov
cmpsb
leave
sub
xchg
inc
mov
dec
cmp
xor
int3
mov
mov
mov
xchg
stos
fbld
test
outsl
mov
mov
push
mov
aam
icebp
xor
mov
cltd
insb
mov
lock
push
mov
in
pushl
fnstcw
and
add
arpl
gs
add
mov
incl
and
lods
into
mov
fisubl
push
jbe
mov
pop
cmp
pop
outsb
cld
sbb
stos
or
mov
sbb
xchg
stc
jbe
inc
aaa
dec
push
das
push
mov
movsl
pop
adc
clc
xchg
push
push
and
add
test
pushf
sub
push
cmp
iret
out
fs
mov
and
adc
cmp
in
inc
push
xchg
cmp
aaa
ja
push
xchg
pushf
cmp
pusha
sti
inc
sarb
clc
test
loopne
mov
cs
mov
jp
inc
sub
jl
out
sbb
xor
lahf
fwait
pop
xchg
in
adc
dec
xor
pop
push
pop
inc
popf
jbe
xlat
cmpsb
and
cwtl
pop
xchg
add
scas
inc
pop
aad
daa
inc
stc
movsl
mov
dec
mov
dec
cmpsl
jl
stos
shl
imul
mov
xchg
push
xor
stos
stos
push
loop
insb
aas
in
jle
dec
mov
notl
test
divb
mov
adc
stos
je
lret
stc
sub
jmp
leave
sub
fwait
test
stos
dec
rcll
mov
mov
clc
pop
stc
jbe
sub
push
mov
dec
xor
add
lock
sahf
dec
lret
inc
mov
dec
jne
cwtl
mov
jg
mov
adc
add
aaa
adc
fptan
and
shlb
insl
and
pop
fcmovb
and
jle
dec
jle
hlt
or
adc
mov
fwait
xor
lds
mov
inc
outsl
insl
add
add
push
jmp
lods
mov
sub
std
fdivs
xchg
pop
shll
adc
mov
mov
inc
lods
xor
fwait
adc
mov
fbstp
mov
leave
jbe
flds
stc
out
mov
loop
push
lods
shrl
dec
out
sbb
outsb
aas
out
xchg
addb
out
mov
xlat
mov
jl
jp
sub
ret
gs
iret
dec
js
cmp
aam
mov
push
jp
hlt
pop
pop
nop
mov
popa
testl
push
in
pop
fstpl
jns,pn
sub
sbb
insb
testb
sub
stc
enter
stos
sub
test
mov
mov
fisttps
push
imul
dec
push
sub
jnp
dec
dec
xor
pop
insb
and
fildl
popf
pusha
pop
sub
cmp
mov
sub
outsb
dec
fisttps
xchg
pushf
mov
fdivrs
push
repz
shll
leave
cmp
cmp
dec
stos
popw
std
jb
mov
adc
jae
inc
inc
movntq
je
mov
ja
cltd
and
lds
xor
add
adc
fwait
popf
mov
stos
push
jno
adc
sbb
inc
adc
dec
fiaddl
sbb
adc
xor
lret
push
push
pop
adc
xorl
mov
pushf
test
xchg
push
je
pop
pusha
mov
sbb
sub
mov
xor
lret
in
xchg
enter
and
add
add
sub
iret
js
scas
pop
fildl
xor
jo
jne
mull
idivb
enter
cmp
fists
inc
sahf
loope
sbb
lods
push
push
push
or
sbb
fcomps
test
dec
xor
bnd
pop
pop
ljmp
dec
sar
mov
xor
sti
sahf
cmp
pop
sahf
xchg
jmp
mov
pop
and
subb
inc
lret
mov
ja
hlt
dec
std
test
inc
inc
ret
stc
ds
mov
and
cli
dec
push
cmpsb
rorl
xor
xchg
test
sbb
jmp
cmp
movsl
das
push
push
pop
pusha
leave
cli
dec
jo
call
sti
cs
mov
lods
lods
mov
pop
dec
jecxz
sahf
and
jge
xchg
and
js
ret
mov
xchg
lcall
addr16
ds
ret
xchg
scas
push
jbe
or
or
lods
pop
lahf
enter
mov
or
cmc
loop
push
or
jp
mov
jnp
dec
cmpsl
cmp
divl
add
push
jg
loopne
jae
pop
lods
shrb
rcll
jae
out
outsl
pop
xchg
loopne
in
cli
or
push
pop
mov
xchg
push
flds
cmp
xchg
pop
fdivrs
xchg
jb
xchg
inc
cltd
pusha
pop
shll
je
out
jno
ja
pushl
adc
or
mov
dec
mov
repnz
lods
mul
cwtl
call
cmp
jecxz
cmp
test
or
and
inc
inc
push
cmp
dec
lds
cmp
dec
mov
das
rclb
pop
sub
rcrb
in
push
jo
and
daa
stc
mov
inc
adc
adc
jmp
hlt
enter
movsl
mov
mov
loope
data16
rcl
jmp
add
jmp
loope
fcomps
mov
addr16
xchg
add
jns
push
ja
test
jno
scas
push
sub
or
mov
push
fidivl
cmpsb
and
ljmp
pop
shrl
popf
icebp
mov
imul
push
push
adcl
pop
in
cld
es
es
rorl
xorb
mov
lods
cwtl
scas
adc
mov
int3
add
out
sub
mov
pop
insl
cmp
jne
or
in
adc
fdivp
mov
in
imul
pop
pop
add
hlt
sti
sub
rcrb
pop
mov
ss
cwtl
xchg
cmp
aad
xlat
cmpsb
loop
pop
ljmp
pop
js
inc
addr16
jecxz
jg
jnp
sub
cmpsb
loop
lock
mov
and
sub
stos
add
adc
mov
xchg
out
xchg
stos
xchg
mov
mov
inc
out
xorb
inc
inc
mov
or
gs
repnz
insl
add
insl
test
cmp
in
cmp
cli
pop
test
add
mov
cld
loop
test
xor
mov
addl
mov
insb
pop
cmp
call
mov
ds
sbb
fsub
jecxz
mov
fs
inc
and
int
xor
je
imul
push
sbb
sbbl
inc
mov
insl
dec
cmp
stos
xor
mov
xor
sbb
dec
xor
sbb
mov
popf
int3
hlt
shr
jl
xchg
popa
fs
js
pop
test
xchg
cwtl
dec
dec
and
and
and
xchg
ds
cmc
mov
cs
aaa
mov
xchg
jno
push
nop
xorl
fcmovnu
xchg
adc
repnz
pop
adc
test
cs
push
push
mov
scas
cld
rcrb
push
dec
dec
sti
pushf
das
mov
push
decb
xchg
cld
inc
pop
jb
ljmp
insb
shl
jb
mov
fwait
loop
sbb
and
or
mov
rclb
pop
loop
xchg
rorl
push
outsl
pop
in
aas
test
dec
sub
pop
sbb
pop
dec
or
enter
ss
inc
bound
aam
stos
bound
int
lods
push
push
or
outsb
mov
xor
xor
push
pop
sbb
adc
mov
sbb
pop
int3
adc
out
es
lods
aas
cmc
xchg
dec
mov
and
cmp
cmp
jecxz
cld
jbe
xchg
icebp
out
adc
test
sbb
pop
inc
xor
push
and
stc
pop
aaa
scas
xor
imul
inc
jbe
cld
repz
outsl
cmp
jbe
inc
mov
mov
inc
pop
sbb
jle
cmpb
xchg
or
or
int3
pop
ss
scas
sub
cmp
out
outsl
mov
fcomps
add
or
pop
xlat
mov
cld
fbstp
xchg
xor
xchg
xor
clc
rolb
xor
andl
mov
pusha
mov
push
scas
out
xchg
jmp
inc
mov
dec
jl
test
data16
and
push
lods
mov
daa
cld
out
cmp
je
pop
aas
cli
pop
into
ja
jp
andb
push
adc
jb
xchg
jbe
fistps
add
mov
daa
push
jmp
fisttpll
dec
rcr
mov
lds
lcall
jmp
testl
inc
inc
dec
jnp
jo
mov
sbbl
std
sub
lock
add
iret
test
inc
jae
pop
xor
jo
addr16
sbb
ss
add
test
test
ret
repz
xchg
jne
adc
xor
xchg
add
sbb
out
testl
pop
cmp
xlat
mov
andl
mov
sub
xchg
jecxz
sbb
cwtl
mov
lods
xchg
mov
bound
push
mov
fwait
scas
inc
std
gs
push
xchg
sub
gs
stos
inc
adc
shrb
fidivrl
mov
push
out
mov
or
aas
mov
dec
sub
pushf
cwtl
or
lods
lcall
add
dec
lods
jl
fdivl
fmul
in
mov
mov
ss
in
and
pushl
jo
pushf
pop
stc
or
stos
dec
aaa
jge
fstps
test
pop
sbb
mov
mov
aaa
mov
loope
adc
or
mov
mov
push
pop
sbb
sbb
sbb
std
fldenv
test
cltd
dec
dec
jge
xchg
jg
insb
push
sub
fists
enter
mov
scas
fcompl
mov
sub
cmp
sbb
add
ffree
push
pop
dec
sbb
cmp
jp
cmpb
jne
repz
aaa
iret
mov
pop
jmp
push
pushf
mov
repnz
pop
inc
decb
mov
dec
or
jle
rorb
mov
jle
idivl
inc
inc
sub
pop
pop
xchg
lods
repz
xchg
jmp
mov
aam
std
in
push
into
rorl
lods
xor
inc
or
je
cmp
xchg
xchg
call
mov
insb
loop
fnstenv
push
ret
cmpsb
sbb
mov
jo
loope
shlb
and
inc
repz
add
mov
lcall
inc
mov
push
out
cld
rcrb
ss
push
rolb
sbb
or
dec
outsl
popf
repnz
incb
mov
test
ja
mov
into
scas
dec
adc
ja
test
or
decb
notl
push
pop
mov
cmp
out
jg,pn
sub
outsl
pop
jbe
pop
out
faddl
testl
fmul
mov
call
mov
sbb
jp
in
jmp
lock
pusha
lds
add
jle
mov
insl
out
mov
add
or
mov
mov
and
xchg
or
jle
jb
adc
add
inc
fs
pop
addr16
push
mov
pop
insb
dec
mov
inc
pop
enter
out
dec
es
push
mov
imul
adc
pop
data16
stos
jge,pn
mull
int3
sbb
xchg
mov
imulb
call
int3
mov
popa
fadd
add
enter
popl
into
mov
rcll
mov
adcl
and
stos
pop
fnstcw
in
sbbb
fcompl
mov
lea
mov
in
mov
mov
mov
push
jb
or
aam
add
mov
push
iret
mov
push
mov
pop
fisttpl
xor
int3
out
jno
jecxz
xchg
aam
pop
enter
jecxz
aam
int3
inc
cmp
cld
dec
aas
jno
inc
jns
or
insl
call
or
pop
jp
and
inc
jns
jnp
jno
bound
icebp
adc
cli
cli
ret
sarb
xchg
out
and
test
xchg
xchg
add
or
mulb
jne
push
loop
je
aam
das
cmpsb
mov
jne
cltd
aad
jmp
and
dec
pusha
rorl
inc
jle
cmove
test
xor
push
jg
call
pop
xchg
or
mov
add
inc
pop
xor
mov
adc
sbb
xchg
mov
xchg
inc
scas
mov
sub
pop
jno
pop
xchg
xchg
scas
fcoms
or
adc
pop
lcall
dec
arpl
jne
xchg
stos
cmp
fs
cmp
xor
je
in
jmp
cltd
pop
xchg
cmp
in
xchg
lret
lret
mov
lea
add
cmpb
xchg
outsl
push
movsl
or
movsb
pop
fisubrl
popf
xor
data16
fidivl
adc
add
repz
dec
out
ret
mov
xchg
lods
es
and
rclb
pop
int3
mov
jnp
cmpsb
das
mov
lret
push
xor
lahf
xor
popf
push
push
xor
jle
test
addl
aas
ret
fs
xchg
mov
push
mov
jo
sbb
sub
sbb
fsubs
push
jp
shlb
adcl
rcll
fiadds
dec
out
test
lods
adc
movsl
sbb
pop
cltd
repnz
aad
add
fnstcw
and
repnz
jno
ljmp
pop
inc
cmp
dec
ret
lods
loop
mov
inc
mov
es
dec
sbb
rorl
loopne
cmp
inc
lea
icebp
inc
lret
divl
inc
faddl
sbb
jmp
and
and
lods
mov
fisttpll
mov
cmpsb
inc
fs
repnz
frstor
mov
not
stc
shlb
insl
repnz
sub
dec
cmp
cmp
jb
nop
cli
fwait
sbb
mov
nop
in
pusha
pop
fwait
lods
xor
add
fxch
push
shlb
fidivs
fwait
movsb
push
test
and
cwtl
xchg
pushl
mov
dec
stc
repz
mov
jl
sbb
test
sub
shrb
push
loopne
stos
xchg
push
ret
test
push
aas
cmp
xchg
mov
pop
pop
jg
mov
rorl
inc
lcall
and
push
mov
mulb
cmc
add
jge
jno
jnp
mov
push
xor
mov
xchg
dec
jae
mov
xchg
push
in
jle
xor
icebp
sti
call
jl
mov
movsl
mov
or
pop
loop
ret
in
popf
fdivs
cmp
mov
adc
mov
xor
push
dec
jae
shll
add
xchg
in
into
xchg
fisubrl
mov
mov
sub
xchg
jne
or
std
mov
adc
mov
or
adc
xor
xor
jp
aam
push
nop
mov
outsl
sub
stos
movsb
mov
scas
sbb
ret
xchg
shlb
lods
inc
sbb
pop
clc
loopne
sbb
inc
or
fcoms
fucomi
dec
ja
mov
insb
mov
rorl
or
mov
cmp
jp
pusha
call
out
pop
jae
xchg
mov
out
push
call
xor
and
inc
xchg
jnp
inc
add
les
jo
loopne
cmc
shl
ret
fs
jnp
fs
inc
push
es
and
xlat
cs
cmp
mov
outsl
jmp
andb
pmaxub
mov
mov
jge
into
sub
jno
inc
sbb
nop
fld
and
ja
jns
add
mov
ds
data16
or
jg
insl
dec
fwait
and
add
fadds
jp
xchg
xchg
xchg
adc
push
test
sti
pop
cltd
clc
adc
jae
hlt
xchg
pop
scas
out
sbb
mov
inc
mov
fdivs
or
sbb
fidivrl
mov
push
scas
cmp
pop
dec
inc
pop
fwait
iret
sub
dec
stos
mov
and
enter
jbe
pop
dec
push
mov
sub
xchg
cmp
rcr
pushf
popa
cmp
negl
outsl
pop
dec
dec
pop
pop
or
pushf
push
mov
lock
cmpl
ja
pop
insl
xor
or
pop
xor
or
sub
dec
xchg
pusha
or
arpl
daa
xor
sbb
shl
fidivs
inc
jle
mov
jmp
mov
int
loope
push
add
insl
inc
xor
xchg
iret
aad
jl
jbe
int3
pushf
push
in
not
icebp
cli
cwtl
mov
push
repnz
push
push
in
aaa
subb
insb
push
out
push
ds
cmp
lret
ljmp
aaa
add
mov
or
xchg
addb
cmp
mov
push
leave
or
lret
fiaddl
mov
imul
cmpsl
ds
mov
out
jns
adc
add
dec
sub
jae
add
xchg
push
mov
sbb
and
mov
cld
cmp
adc
es
xchg
test
rorl
xor
jae
in
lds
xlat
dec
cs
imul
xor
in
mov
adc
shl
bound
cmc
stos
sub
dec
das
jg
js
popa
add
fs
add
and
sub
dec
pop
mov
inc
mov
jmp
or
or
bound
or
inc
sub
sub
test
ret
fnstenv
aas
fsubr
fsubs
filds
push
insl
outsb
aam
idivb
inc
insl
pushf
inc
mov
mov
les
clc
repnz
js
lods
add
aaa
loop
dec
aas
add
sub
xchg
and
sbb
adc
loopne
mov
icebp
int
cmp
cs
es
pop
rcrb
pop
sbb
repz
std
shlb
fincstp
fucomp
sbb
pop
jp
inc
es
sub
movsb
and
and
ljmp
dec
jae
xchg
imul
sub
push
pmaxsw
adcb
mov
and
push
inc
sarl
inc
dec
out
jb
cmc
cmp
jp
mov
sbb
mov
jle
sbb
mov
aaa
sub
and
ret
divl
mov
dec
test
jbe
std
ret
das
cmpsb
mov
adc
insl
in
and
xor
mov
test
cmc
js
xchg
imul
shll
mov
cltd
dec
ss
or
jnp
jp
shr
pop
push
hlt
dec
addb
rcll
divl
push
sub
loopne
cmp
inc
push
xacquire
in
sub
addr16
xor
std
insb
dec
ret
fwait
leave
mov
loope
movsl
pop
adc
xchg
inc
jb
push
dec
aaa
mov
pop
jge
orb
sub
sub
or
push
cwtl
xor
mov
adc
cmp
jo
push
and
adcl
aad
add
xor
xlat
and
xchg
cmp
add
and
push
push
and
xor
ss
push
jae
or
out
mov
jbe
aad
xchg
or
sub
aam
pop
popa
sbb
xor
lahf
enter
rolb
mov
je
addl
lock
mov
jg
mov
cmp
jo
pop
in
or
or
xor
xchg
les
push
cmp
push
and
mov
cltd
inc
push
mov
jns
loope
mov
insl
mov
and
push
gs
adc
mov
xor
pop
mov
int
in
iret
fadds
repnz
outsb
push
or
ljmp
sub
add
je
and
faddl
fistl
mov
mov
mov
cmp
and
test
dec
push
pop
mov
jb
dec
mov
mov
ret
orl
xchg
sbb
int3
test
push
mov
sbb
adc
push
jmp
and
push
jo
xchg
les
jb
xchg
outsb
push
mov
and
jbe
ss
push
inc
mov
mov
sbb
inc
je
sbb
data16
cmp
mov
hlt
xchg
xlat
sub
mov
rolb
pcmpeqw
and
aas
inc
pop
ss
daa
mov
and
enter
push
cmp
cld
xchg
js
decl
fmuls
dec
dec
in
std
imul
pop
or
fwait
orb
sbb
insb
scas
dec
loope
cmp
cld
int
or
arpl
imul
ret
imul
sbb
aaa
xor
or
xchg
lahf
fcoml
or
push
addr16
lods
movsl
cld
and
aad
cltd
pop
test
jne
pop
outsb
js
sub
xchg
lods
dec
sbb
inc
push
in
cmp
rorl
push
mul
pop
fstl
fmuls
lcall
adc
iret
les
sbb
fisttps
pushf
sarl
mov
pop
js
popf
js
push
sub
inc
sti
jmp
add
leave
cmp
and
in
cmp
sbb
pop
arpl
and
pop
mov
ret
aad
enter
cld
cmc
xchg
fisubrs
dec
mov
test
add
mov
outsb
mov
repz
pop
inc
sbb
mov
scas
pop
addb
sbb
repz
inc
aaa
xchg
stc
adc
mov
xor
sbb
mov
or
or
rorb
stos
out
lock
mov
int
movsl
jno
popf
sub
or
clc
lods
or
sub
and
aas
pop
add
pop
add
mov
insl
sbb
iret
jmp
stos
push
pusha
cltd
das
push
sub
ret
mov
pop
in
xlat
pop
xchg
pop
jg
fldl
pop
popa
mov
dec
in
pop
loopne
sbbb
push
nop
shlb
repz
sub
add
dec
lods
xlat
popl
fcmove
stos
and
inc
pushf
push
adc
pop
and
pop
cmp
fimull
clc
insb
add
mov
scas
fs
and
sub
push
lcall
push
repnz
adc
popf
pushf
or
pushf
je
pop
fbld
dec
pop
stos
sbb
push
mov
mov
or
das
clc
fisubrs
adc
fsubl
stc
outsb
cli
imul
fwait
js
fcompl
pusha
into
imul
cs
cmp
outsb
lea
adc
adc
jl
mov
inc
cwtl
mov
scas
cld
adc
push
lret
xchg
mov
cmp
cmovno
adc
mov
repz
inc
jmp
xor
or
xor
sub
mov
into
insl
out
mov
mov
lods
or
stos
fst
pop
push
cmp
iret
pop
push
jnp
rcrl
xor
loop
or
in
cmp
xchg
fnstsw
add
or
inc
mov
ja
leave
or
cs
jnp
das
nop
mov
jbe
rorb
mov
push
xchg
hlt
ja
test
call
dec
scas
clc
out
bound
mov
das
cs
shlb
jge
rcrb
fwait
call
scas
dec
fidivrs
push
mov
dec
out
or
out
jge
and
mov
sub
add
repz
cli
call
andb
scas
stos
sub
sub
outsb
test
sub
push
xlat
mov
in
outsb
fisttps
outsl
xor
and
cmp
arpl
sbb
xor
cmc
int
cltd
cmp
or
int
pop
jo
jb
inc
xchg
inc
jb
cltd
repz
mov
inc
ds
fistpl
push
dec
stos
mov
js
pop
xor
icebp
imul
sbb
repnz
cli
xor
loope
cmc
outsb
lcall
lea
add
movsl
mov
sbb
pusha
sti
xor
inc
es
mov
pop
inc
mov
ss
xor
and
test
cld
mov
sarb
lods
fs
and
pop
cmp
filds
xchg
lahf
pushf
lock
mov
movsb
hlt
mov
aam
dec
inc
outsl
imul
lret
dec
mov
in
adc
pop
stos
repz
test
xchg
dec
fidivrl
push
push
xchg
sub
or
jno
insl
pop
push
adc
adc
add
pop
js
int3
mov
outsl
and
dec
mov
push
cmpsl
out
jge
lock
repz
out
xlat
data16
mov
js
fisttps
add
call
add
xadd
sub
call
setns
shrd
mov
or
adc
sbb
shl
not
neg
rcr
add
setle
rep
mov
not
mov
pushf
jmp
inc
insb
lahf
xor
test
mov
mov
in
mov
adc
addr16
push
ror
aaa
mov
out
push
jno
adc
or
cltd
std
xlat
cmp
lcall
cmp
sub
mov
rorb
inc
jb
jnp
xchg
and
roll
call
mov
outsl
sbb
popf
mov
sub
sbb
fwait
mov
stos
inc
repnz
and
stc
adc
cmp
inc
gs
xchg
xor
punpcklwd
sub
dec
jns
cmp
push
add
pop
addr16
outsb
cmpsb
xlat
pop
lods
mov
movsl
pop
lds
and
cltd
scas
mov
pandn
and
leavew
adc
xor
jo
rcll
cmp
add
movsl
icebp
sub
lcall
pop
mov
jne
cmp
loop
xor
stos
idivl
ja
pop
push
add
xor
pop
and
pop
mov
and
dec
scas
jb
shl
movzbl
bt
shr
pusha
cmc
push
pusha
imul
jmp
cwtl
and
aaa
jne
stos
fcoms
hlt
sbbb
or
pop
je
sbb
shrl
adc
shl
xlat
dec
ljmp
imul
dec
xchg
clc
xchg
scas
cmpsl
or
or
arpl
mov
sbb
dec
dec
inc
aaa
dec
and
mov
dec
add
ret
mov
mov
shl
ljmp
in
cmp
out
bnd
subb
dec
add
neg
rcr
dec
setns
sub
shr
add
inc
btr
cmp
mov
cmp
pusha
cmc
rol
mov
jmp
push
dec
dec
dec
dec
inc
push
cs
insb
add
lea
jne
xchg
fcmovnu
cmpsl
icebp
mov
lock
jno
mov
adcl
data16
push
cld
test
loopne
xchg
lcall
clc
mov
mov
adc
sbb
xchg
xchg
hlt
mov
subb
cli
sub
in
movsl
andb
imul
in
stos
in
icebp
mov
lcall
push
adc
repz
lea
jb
movzbw
sbb
call
push
movsb
jns
jne
out
mov
shr
sub
cmc
xor
cmp
jb
add
lret
into
inc
sub
push
fs
pusha
jle
jb
jle
push
adc
pop
or
mov
inc
arpl
sbb
lret
xor
xchg
cmc
pop
mov
mov
call
lret
nop
sti
test
fmull
int
add
jmp
lea
jge
pusha
adc
pusha
mov
bt
jmp
mov
and
mov
mov
xchg
sahf
in
call
test
test
outsl
rolb
or
stos
and
insl
fs
rcrl
dec
sbb
xchg
dec
daa
jae
iret
imul
jnp
xchg
dec
mov
lock
jb
xor
jecxz
pop
adc
jmp
mov
aad
mov
rolb
movsl
adc
std
insl
push
adc
add
push
enter
xor
and
mov
xchg
cmc
xchg
pushl
insl
outsb
es
les
cmpsl
roll
and
nop
rcl
mov
or
jmp
roll
add
sti
call
lret
ret
adc
or
mov
call
cmpsl
negl
loop
repnz
aaa
inc
sbb
pop
xor
xor
jo
sbb
aam
dec
jmp
mov
movb
movzbw
bswap
pop
push
cwtl
jmp
mov
push
xor
adc
push
add
push
pop
dec
sbb
cs
adc
jl
xor
dec
jno
int
cmp
lock
iret
scas
fdivs
lods
push
mov
testb
cmp
jge
xchg
aam
ja
lods
int3
notb
pushf
mov
inc
daa
dec
leave
scas
push
mov
xchg
adc
mov
jmp
sub
je
test
and
pop
xchg
cmp
out
or
sub
pusha
xor
xchg
jae
push
or
mov
pop
pop
or
sub
mov
jmp
mov
test
cmp
jmp
sub
sub
mov
shr
sub
call
stc
pop
ret
lea
jb
clc
cmp
call
movw
call
lea
jb
jmp
jmp
bswap
jns
bswap
movzbw
mov
setg
sets
movsbw
mov
lea
lahf
call
not
lahf
cwtl
pusha
mov
pusha
lea
pushl
call
call
pushl
lea
call
push
call
pusha
lea
jne
movzbw
lea
push
lea
movb
seta
mov
cwtl
lea
jmp
movw
not
mov
movl
mov
jmp
je
xor
jne
sub
daa
sbb
or
or
cmp
fdivl
aad
xorl
js
xchg
jmp
mov
test
out
les
and
jbe
adc
pop
xor
out
dec
cmp
inc
pop
pop
pop
imul
push
lods
nop
sub
pop
jno
inc
cmp
movsb
jmp
mov
lods
lret
mov
pop
ss
sub
test
jmp
jmp
xor
jne
sub
pop
inc
adc
sub
fisubrs
inc
scas
sbb
test
add
pop
inc
stos
rorl
add
inc
or
out
test
ret
cltd
pusha
push
xor
ljmp
test
push
aas
aas
les
mov
xchg
sahf
lods
pop
jne
xorl
xor
mov
sub
movsl
pop
mov
je
inc
pop
xchg
adc
or
ds
and
dec
and
aad
mov
mov
scas
xchg
and
cltd
decl
rorl
ds
sti
mov
loop
mov
and
shlb
test
lea
loopne
mov
push
ficoms
das
push
mov
mov
imul
lret
mov
dec
sub
ljmp
push
lock
ljmp
pushf
and
jmp
neg
jne
mov
xorb
sti
or
jne
xchg
enter
mov
loop
mov
std
push
cwtl
jo
fwait
repz
push
push
or
imul
dec
dec
fdivrl
pop
rcr
push
mov
stc
shl
xor
and
mov
dec
rdmsr
push
scas
push
lock
mov
mov
add
test
xchg
aam
les
test
mov
push
test
stos
pushf
lea
jmp
lea
movw
push
pusha
lea
call
push
bt
jmp
jmp
mov
jmp
push
pusha
push
lea
jb
btc
pusha
rcr
mov
jmp
push
lea
jne
shl
cmc
bsr
mov
pusha
pusha
stc
add
cmc
movzwl
bswap
mov
movb
pushf
cmc
add
cmp
mov
push
stc
clc
test
pushf
push
jmp
mov
jne
pop
fiadds
jo
jmp
cmp
mov
inc
in
mov
sbb
push
or
pusha
push
arpl
mov
xchg
lret
es
lods
mov
jge
test
stc
test
lods
or
xchg
and
inc
add
jns
add
jmp
mov
fs
jae
cmp
cmc
bt
pushf
sub
seto
setns
cwtl
pusha
lea
call
or
aas
jne
and
dec
sbb
dec
pop
adc
imul
jae
movsl
jecxz
xlat
popa
nop
dec
or
outsl
inc
fistpl
cmp
or
pusha
jno
sub
inc
int
mov
mov
mov
xor
mov
dec
mov
popf
sbb
in
xchg
mov
jge
and
inc
loop
dec
dec
or
mov
scas
icebp
cli
xchg
sarb
sub
insl
bound
mov
jne,pt
cmc
fwait
loope
aad
icebp
scas
mov
xlat
test
sub
out
push
jmp
cwtl
fs
inc
xchg
pop
mov
leave
cmc
stos
pushf
enter
fcomi
mov
push
insl
test
hlt
imul
pop
xor
jb
ret
call
jns
inc
and
adc
pop
push
sub
sub
adc
arpl
pop
mov
inc
or
add
push
dec
inc
dec
xor
cs
insb
add
and
movsb
neg
stos
int3
mov
stos
in
rol
test
sahf
adc
ja
cmpsb
das
xchg
and
sbb
push
mov
xchg
out
pop
dec
inc
and
cmp
lret
fidivs
sbb
mov
inc
insb
adc
in
dec
insl
or
jo
repnz
rolb
out
clc
nop
inc
jg
adc
outsl
adc
sub
pop
pop
insb
test
mov
jp
mov
sbb
add
add
mov
jmp
lea
call
movzbl
ror
add
shl
sub
pop
rcl
ror
bswap
pop
stc
push
call
dec
repz
xor
or
sub
cs
inc
cmp
jg
jno
adc
dec
jns
xlat
fldenv
adcb
lret
xor
mov
cmpsl
jecxz
add
mov
or
jne
in
subb
or
rclb
ret
filds
sub
leave
nop
daa
aaa
out
mov
in
stos
cld
add
mov
sbbl
call
cmp
dec
push
pop
and
inc
shll
sbb
out
imul
xor
or
push
or
push
lahf
jp
mov
mov
pushf
lea
jne
not
btc
cmp
mov
push
jmp
pusha
call
lea
mov
pushf
mov
lea
call
pushf
pushf
cmp
push
sbb
clc
lea
jmp
mov
call
pushf
sbb
movb
pushl
lea
pusha
pushl
push
lea
jmp
shr
not
xor
btr
aad
mov
add
shl
add
dec
push
shr
mov
clc
test
pusha
pushf
lea
je
clc
cmc
push
sub
mov
test
bt
jmp
mov
and
je
inc
push
pop
jp
bound
ss
jne
jl
xchg
mov
xor
loope
mov
popf
inc
push
lret
mov
and
into
test
mov
push
add
mov
das
fcomps
imul
xor
lcall
mov
leave
mov
sbb
aas
jg
push
iret
fs
add
pop
push
pop
dec
xor
sub
push
loopne
jmp
xchg
dec
and
push
add
dec
adc
dec
ficoml
inc
lods
inc
pop
or
push
mov
insb
ss
adc
data16
inc
sahf
in
cmp
inc
xchg
inc
lahf
neg
andb
lret
int
mov
mov
inc
cmpsl
or
fmuls
mov
adc
pop
or
adc
loopne
ret
stos
push
mov
jne
nop
shlb
ret
push
popf
mov
cmpsl
or
lret
mov
pop
add
pusha
push
dec
xchg
mov
push
jmp
repnz
mov
shll
mov
js
mov
mov
xchg
adc
fwait
loope
into
movsl
movsl
orb
aad
test
call
pushf
lea
ja
or
clc
sub
dec
or
or
and
add
shl
mov
cmc
mov
push
repnz
pusha
pushf
lea
jne
not
call
pop
push
in
jne
incl
xlat
lods
movl
pop
test
or
mov
imul
rcr
loope
cmc
mov
or
xchg
or
mov
in
xchg
call
mov
lahf
iret
and
fldl
or
push
in
xor
inc
xor
aaa
imul
popa
sub
dec
pop
imul
jg
dec
or
xchg
rcrl
pusha
clc
mov
lcall
fdivr
mov
out
pop
aam
out
or
mov
divb
cmc
adc
or
outsl
insl
mov
sub
arpl
nop
sub
imul
lea
sub
insb
fsts
jnp
push
mov
pop
ds
dec
clc
push
dec
movsb
fcomps
or
push
jge
add
push
add
and
mov
push
hlt
cmp
inc
lea
call
test
push
mov
pushf
cmp
jmp
dec
or
sub
mov
bt
test
stc
cmpb
pusha
call
lea
call
setle
mov
jmp
mov
and
popf
shll
cmpl
mov
jns,pt
xor
test
out
xchg
sbbb
sbb
add
aas
pop
mov
xchg
mov
incl
dec
in
mov
xor
movd
lods
cmp
dec
shlb
clc
addr16
or
cmp
lahf
dec
scas
mov
ja
jle
xchg
mov
sub
push
cmp
jns
inc
jp
outsb
stc
jp
xchg
adc
sub
hlt
icebp
addb
int3
and
cmc
xchg
jmp
jmp
mov
int
loope
mov
pop
jmp
je
pop
outsb
mov
cwtl
xchg
pop
pop
arpl
sbb
add
and
daa
or
aaa
loopne
mov
movb
bound
loopne
aad
andb
les
leave
mov
pop
cmc
cmc
and
push
imul
push
xorl
mov
mov
push
and
lret
aam
in
mov
test
mov
test
sahf
sbb
sti
inc
rclb
popa
das
and
fs
mov
mov
hlt
cmpsl
aas
jns
ss
outsl
jnp
xchg
push
jle
xor
xor
and
lret
inc
or
or
add
adc
inc
lds
call
shll
mov
dec
adc
push
xchg
call
lea
pushl
jmp
jmp
add
add
add
add
add
add
add
add
scas
and
add
add
addb
add
adc
add
inc
adc
add
add
loop
adc
add
int
add
aam
add
ds
add
je
add
add
add
lea
jae
bsf
cmp
push
mov
call
movb
jmp
stos
mov
jmp
sbb
stc
cmc
lea
add
stc
call
add
inc
js
je
jb
arpl
jae
test
pusha
xchg
shr
dec
shl
xchg
movzbw
dec
lea
shrd
pushf
btr
mov
cmp
cmc
dec
not
rcl
add
setl
rep
jmp
jno
and
jne
cmp
gs
pop
xor
add
pop
and
cmp
mov
leave
sbb
adc
inc
pcmpeqw
adc
jg
jecxz
or
sub
enter
pop
out
sub
popa
and
mov
andnps
outsb
dec
sahf
jns
and
xor
mov
jl
push
outsl
xchg
cmp
jne
es
adc
sub
lods
repnz
icebp
pop
jp
cmp
cli
xor
adc
push
push
adc
data16
call
xchg
in
jo
lret
aam
test
push
and
push
mov
inc
repnz
jp
daa
data16
insl
mov
lods
sarl
jae
or
daa
sbb
or
and
cli
clc
mov
popa
push
sahf
dec
hlt
mov
out
xchg
jmp
lahf
rcrl
dec
addr16
or
adc
sub
xor
dec
sbb
pop
pop
bsf
out
loope
and
pop
iret
into
movsb
add
mov
add
test
fdivs
push
or
xor
ljmp
std
fs
jmp
mov
xlat
gs
cltd
dec
iret
inc
dec
adc
mov
mov
cwtl
testl
repnz
loop
lock
insb
mov
jne
stos
shrl
fnstcw
in
dec
add
fidivs
cli
shll
xchg
push
lcall
xor
mov
lods
scas
in
lods
leave
and
imul
jecxz
add
pop
xor
xchg
out
xchg
or
rcr
xchg
push
cli
addb
xacquire
not
mov
sahf
mov
lods
jbe
mov
and
adc
pusha
pop
and
cld
jae
dec
dec
sub
jmp
lret
loop
dec
movsbw
mov
pushf
cmc
sub
push
call
push
and
sahf
in
xchg
loop
mov
out
pop
je
insb
movsb
std
and
divl
imul
lahf
test
icebp
lods
stc
lock
jl
xchg
rcrl
add
scas
daa
sub
xchg
sub
pop
and
xor
inc
mov
lret
out
out
ljmp
jmp
jecxz
mov
xchg
js
ljmp
and
cltd
add
and
jb
cmc
stc
cmp
pushf
pusha
lea
jae
movsbw
mov
mov
bts
mov
jmp
sub
xchg
sub
popf
sbb
inc
insl
cmp
das
inc
aas
gs
sub
add
je
cmp
xchg
int3
sti
out
nop
int3
adc
mov
push
lcall
out
mov
sub
push
push
jge
repz
stos
pop
andb
pop
mov
add
dec
mov
sub
addr16
mov
stc
fidivs
push
add
dec
lock
pop
sub
mov
mov
sub
cmc
repnz
pop
outsl
sub
push
fsts
xor
push
push
push
pop
es
sbb
push
add
dec
or
imul
shll
sub
xchg
pop
push
xchg
daa
lock
pushf
mov
dec
mov
sub
ds
aas
sbb
ds
lods
inc
push
rcrl
mov
sub
mov
test
lods
fisubrs
insl
ret
shrb
push
xor
btr
rol
mov
clc
cmpb
pushf
mov
pusha
pushl
lea
jne
aaa
lahf
call
lea
call
mov
btc
push
cmc
movsbw
push
shld
adc
push
mov
cmp
push
shl
xchg
push
neg
lea
clc
mov
shl
call
sub
shrd
bt
mov
clc
stc
cmc
cmc
sub
call
pushf
mov
movzbw
jmp
pushl
lea
jae
lahf
not
pusha
pushl
lea
push
pushf
lea
call
jmp
rorl
aam
jne
into
mov
mov
pushf
loop
repnz
mov
pop
xor
stos
push
mov
and
jmp
test
lret
jnp
das
rep
adc
jbe
or
lods
xor
xchg
mov
xchg
arpl
lret
fistpl
mov
rorl
lret
mov
es
push
jno
or
dec
and
out
rcr
and
jne
addr16
call
stos
flds
jecxz
mov
inc
pop
mov
sbb
adc
mov
outsl
inc
jle
cmc
int
fs
inc
adc
lcall
fldl
push
pop
in
clc
inc
jae
sahf
into
idivl
push
and
cltd
out
out
cmpsb
lock
cltd
ljmp
repz
arpl
outsb
sub
call
pusha
call
fdivl
sub
xchg
loopne
enter
in
xchg
lock
in
les
sub
pop
out
push
fs
jo
sbb
cmp
mov
movsb
jmp
xchg
sti
lods
mov
in
rol
outsl
sbb
inc
mov
jecxz
test
mov
fiaddl
insl
dec
sub
xorb
iret
sbb
dec
imul
sub
sbb
imull
scas
test
mov
mov
sbb
leave
xchg
stos
outsl
cmc
sub
jne
xor
js
bound
push
and
push
adc
cs
pusha
or
imul
std
ja
addr16
mov
mov
sbb
in
pop
ja
imul
xor
push
cmp
ja
xor
xor
pop
jp
imull
cmc
mov
sub
inc
add
gs
xor
push
or
insl
inc
out
pop
movl
sbb
ficompl
faddp
lcall
repnz
clc
fnstcw
jge
and
jmp
xchg
cmpsl
stc
std
enter
inc
scas
imull
mov
ds
ret
icebp
clc
mov
test
adc
and
loop
sbbb
push
stos
push
inc
dec
fimuls
pusha
cmc
pop
ds
out
inc
and
les
ja
mov
dec
sub
adc
pop
repnz
jbe
jbe
in
dec
mov
sub
call
pusha
lea
call
pusha
jmp
lea
jge
pusha
lea
ja
jmp
push
movl
push
call
out
sbb
push
push
cmp
je
js
jl
fidivrl
mov
nop
aam
mov
into
cld
and
and
js
or
sub
dec
dec
aas
sub
repnz
dec
fildll
mov
lock
adc
jnp
dec
or
and
pop
aam
xor
jnp
ss
cmc
mov
arpl
insb
inc
xchg
fsubl
ljmp
inc
add
or
js
enter
ja
idivl
int
idivb
jne,pn
add
pop
jno
sub
jnp
pop
cmp
mov
xchg
xlat
cli
add
negl
mov
xlat
frstor
ljmp
decl
test
nop
cltd
and
xchg
cmc
out
pop
js
and
imul
xlat
pop
ljmp
scas
mov
xlat
dec
fsubrs
repnz
rcll
call
adc
notb
mov
stc
clc
mov
xchg
add
mov
pushf
hlt
inc
dec
insl
xor
sbb
xor
cs
test
in
lods
iret
lods
rorl
mov
push
outsb
pop
js
mov
adc
bt
mov
neg
adc
call
sbb
push
clc
cmpsb
test
mov
test
lods
into
test
shr
sub
cli
dec
popa
arpl
arpl
cmp
andl
cmpsl
xchg
cmc
inc
imul
push
jge
push
fcompl
mov
pop
repnz
xchg
pop
ss
loop
shl
cmc
loop
lock
adc
xlat
mov
push
xchg
repnz
xchg
mov
out
mov
xlat
les
and
fs
jb
lea
cwtl
mov
call
sbb
jmp
lea
jae
aaa
das
bsr
pop
rcl
cmc
movsbw
aad
pop
sar
not
shl
mov
sub
bts
mov
shrd
cmp
jmp
or
or
aaa
pop
adc
shl
pop
adc
pop
lahf
sub
pop
aaa
adc
pop
xchg
stc
bts
pop
shr
bt
test
add
call
sub
lock
and
test
test
clc
scas
mov
into
in
mov
inc
cmp
into
sbb
xor
inc
pop
dec
pop
ret
ret
jecxz
dec
push
outsb
pop
or
jne
in
xchg
add
imul
pop
push
dec
push
and
inc
das
test
push
inc
mov
pop
cmc
xchg
or
xor
scas
or
insb
and
and
or
fcmovnu
iret
imul
jl
adc
pop
and
jmp
mov
xor
outsl
insl
aaa
sbb
push
adc
xchg
pop
aaa
mov
or
lea
mov
add
sahf
mov
sub
mov
sarb
mov
mov
sub
dec
mov
out
xchg
clc
sbb
dec
pop
stc
aas
push
jl
sub
xor
and
por
div
push
lods
stc
mov
add
or
bound
jns
gs
mov
push
roll
stc
fiadds
mov
inc
cmp
dec
add
jne
add
sub
lods
outsl
lret
add
pop
scas
pushl
jg
out
jne
or
popf
insb
pop
addr16
and
cs
xchg
outsl
adc
fnstcw
les
int
orl
fsubl
or
mov
insl
pop
repnz
cmp
fldcw
les
sub
popa
es
mov
in
sub
pop
mov
jne
shll
mov
ret
test
mov
rcrb
outsl
nop
iret
xchg
fdivrl
push
adc
and
dec
popa
pop
dec
sbb
loopne
lret
div
and
loop
inc
out
pop
call
testl
aad
fndisi(8087
add
or
cltd
outsb
hlt
scas
mov
sbb
dec
cli
aam
pop
addr16
and
push
ja
je
jns
lret
scas
es
add
jno
jge
inc
inc
xor
and
jp
pop
ss
mov
mov
std
fnstenv
jb
ret
mov
lcallw
jecxz
out
add
sbb
add
mov
ja
xor
or
lret
stos
fcmove
inc
adc
mov
aas
push
inc
and
jp
pop
xor
adc
mov
cmp
add
je
insb
imul
cmp
inc
and
pushf
test
add
pushf
mov
call
imull
shlb
stos
cld
lret
add
das
push
movswl
push
nop
hlt
push
dec
lcall
out
stc
xchg
rcr
int3
stos
lods
clc
mov
xor
inc
and
cmp
das
jb
add
f2xm1
mov
adc
mov
push
adc
rclb
bound
dec
cmp
and
adc
jne
movsl
out
iret
mov
sti
mov
adc
and
test
jnp
push
add
shrb
mov
dec
add
dec
enter
int
movsb
test
imul
pushf
repz
jl
jne
pop
jl
cwtl
mov
cmp
lahf
test
or
jle
leave
cs
mov
insl
pop
jns
pop
adc
pushf
cmp
dec
popa
mov
xor
add
xor
cmp
pop
cmp
insl
jp
sbb
into
imul
bt
pusha
call
clc
shll
shll
sbb
push
sti
mov
out
mov
pop
or
xor
add
mov
test
cmc
mov
xchg
jmp
xchg
xchg
scas
cltd
and
movsl
xor
cltd
inc
push
xor
inc
gs
dec
push
cmp
mov
ds
shl
add
shr
btr
adc
add
bsf
ror
cmp
shld
mov
push
jmp
jno
stos
shlb
xchg
ficoml
fxtract
shll
in
mov
xor
mov
cmpsb
lock
xchg
loopne
movsb
mov
adc
and
icebp
cmpsl
mov
lock
mov
clc
addl
int
popf
or
dec
and
shlb
shlb
in
into
sub
into
cwtl
movsl
mov
jns
data16
push
arpl
dec
popa
cmp
stc
add
and
std
jecxz
jmp
and
xchg
testb
lcall
shrb
mov
in
out
inc
inc
push
and
stos
jmp
cmp
daa
dec
fidivrs
ret
pop
cmp
fucomp
int
push
or
bound
pop
cmp
ss
imul
sub
jo
pusha
mov
jmp
lea
push
pushf
pushl
pushl
lea
jmp
mov
test
lea
jge
mov
push
push
lea
je
not
pusha
lea
mov
lea
call
push
jmp
mov
mov
pusha
push
pushf
pushf
stos
push
pushl
mov
pushf
movl
lea
jmp
lea
jne
setns
setne
movsbw
movb
mov
push
not
pusha
pusha
lea
movb
movl
movl
mov
push
mov
pushf
pushl
ret
inc
dec
dec
inc
push
dec
xor
cs
insb
add
daa
jne
sub
rcl
sahf
enter
int3
into
mov
mov
cmp
dec
out
int
loope
testl
xlat
cld
adc
mov
orb
adc
aas
push
jle
pushl
inc
or
js
mov
push
icebp
dec
nop
mov
dec
xchg
out
pop
mov
pop
lahf
dec
sti
test
push
sti
dec
dec
out
lahf
sahf
ficoms
lds
out
xor
lret
data16
mov
rolb
mov
mov
and
loope
xor
add
inc
insb
bound
dec
mov
and
nop
mov
in
adc
lods
mov
xchg
das
xchg
and
les
sub
pop
mov
and
out
cmp
and
inc
cmp
sbb
cld
push
pop
sbb
out
fiaddl
pop
jns
idiv
cmp
push
pushl
call
movb
lea
jle
call
pusha
mov
lea
jae
cwtl
not
pusha
lea
jmp
add
inc
outsl
arpl
outsb
je
jb
jo
jb
imul
in
lcall
sub
xchg
icebp
push
sbb
sub
xchg
xadd
bsf
dec
mov
sbb
rol
shl
stc
mov
push
movsbw
pusha
shl
add
not
shr
clc
mov
cmp
sbb
add
bsr
add
movsbl
call
add
fcom
jne
ret
adc
mov
xchg
out
xchg
mov
lds
push
dec
push
enter
outsl
xchg
movsl
cmpsl
xor
fwait
mov
sti
push
roll
test
push
sbb
jl
shl
mov
xchg
nop
pop
orb
int
mov
sbb
rcl
fwait
int
xlat
xchg
fbstp
test
fwait
in
adc
fstps
mov
jmp
movl
push
movzbw
lea
lea
jmp
orl
and
out
mov
mov
lret
das
xchg
lods
mov
bound
and
sbb
inc
lcall
xchg
lods
mov
int
fst
stc
sbb
aad
into
repz
sub
mov
int
sub
ret
push
aas
dec
daa
cmp
add
pop
inc
xor
stc
pop
mov
or
add
not
shl
bts
adc
mov
push
stc
stc
pusha
and
call
movl
sub
stc
movb
bt
shl
call
lea
je
jmp
push
and
xlat
mov
popf
out
mov
xchg
ljmp
mov
sub
outsl
cmp
rclb
sbb
mov
fisttpll
pop
insl
aas
jb
cld
pop
and
mov
xor
dec
jae
or
nop
mov
fld
xor
js
jg
mov
fstl
sub
adc
add
mov
sub
idivl
or
and
add
jo
dec
jnp
sub
dec
or
iret
xchg
sarl
test
and
adc
xchg
mov
add
mov
push
add
cmp
jmp
cmpsb
in
mov
mov
into
mov
and
pop
in
cmp
arpl
jae
inc
mov
mov
or
mov
shll
cmc
arpl
push
mov
scas
push
sub
popl
sub
mov
sbb
push
adc
xor
rcrb
add
lret
roll
fwait
fwait
stc
xor
loope
aas
push
mov
mov
push
lret
dec
xchg
ret
jns
mov
std
push
pop
iret
pop
mov
fisttpll
addr16
jg
sbb
insl
push
add
xchg
hlt
movsb
jmp
outsb
inc
or
shrl
mov
rol
rcrl
jg
test
mov
push
insb
push
or
inc
outsl
and
pop
cmp
out
out
xor
push
and
push
ja
mov
pop
aas
adc
scas
ret
xchg
add
fisubrl
adc
push
sub
push
or
pop
adc
pop
mov
fnstsw
ret
loopne
jp
gs
or
xor
stc
rorb
adc
movswl
jl
inc
or
decb
je
idivl
and
adc
push
fnsave
test
cld
or
fmuls
xor
mov
out
fisubl
imul
stos
mov
mov
std
bound
adc
les
mov
lahf
aad
inc
jecxz
add
push
call
pushf
jle
mov
test
inc
shll
xor
in
fcmovu
jno
cmp
lret
mov
dec
dec
mov
and
jo
and
orb
je
xchg
xchg
fsubrl
movsb
mov
aas
jge
push
pop
sbb
xchg
loopne
mov
mov
xchg
divb
gs
fisttps
outsb
cwtl
stos
aaa
push
jp
sbb
mov
lods
jmp
push
cli
in
movsl
sbb
call
and
test
and
and
int3
mov
dec
dec
push
and
jmp
ret
adc
addb
scas
iret
sti
xorb
dec
arpl
mov
push
jae
popa
and
movl
test
and
and
lods
pop
jl
jle
xor
fisttps
lods
mov
mov
popa
mov
aad
inc
aad
movd
loope
loopne
mov
lods
dec
and
inc
sub
ss
cmp
jno
push
daa
push
inc
mov
inc
push
in
iret
jb
cwtl
hlt
and
jle
push
lret
push
outsb
jne
mov
cmp
pop
imul
outsb
mov
or
sub
mov
lahf
cmc
mov
jnp
out
jp
or
insb
or
bound
push
fcomps
push
push
daa
sub
add
pop
adc
loop
rolb
cltd
add
push
mov
call
xchg
dec
mov
xchg
repz
adc
cltd
test
mov
pop
or
popa
loope
cmp
xchg
jmp
rcl
mov
or
rcrl
xchg
stos
push
inc
and
mov
stc
negb
dec
xchg
inc
insb
sub
mov
push
mov
mov
sub
push
jp
sbb
js
call
mov
mov
push
mov
ljmp
pop
inc
jbe
jmp
pop
aas
pop
jne
add
push
sub
fdiv
cltd
mov
notl
xor
je
jae
nop
push
mov
or
imul
dec
daa
push
xchg
cmp
xchg
mov
xchg
dec
inc
or
adc
jl
mov
mov
adcl
xor
xchg
mov
in
icebp
pusha
cmp
xchg
aam
sub
cltd
test
cwtl
in
xor
mov
xchg
sub
inc
and
fmuls
pop
mov
xchg
mov
dec
sub
dec
pop
pushf
add
add
jo
xorb
cmc
mov
push
mov
push
cmp
pop
dec
mov
inc
mov
pop
dec
jne
clc
aad
mov
and
xchg
jne
add
inc
xchg
pop
pop
call
sti
in
pop
adc
les
int3
mov
cmp
test
insl
fwait
push
push
sahf
xor
ja
jl
test
cwtl
lahf
sbb
sbb
aam
sub
push
pop
xchg
xor
xchg
rol
sahf
seto
clc
dec
add
ror
int3
jo
daa
stos
fwait
shlb
mov
xor
rcrl
push
push
adc
filds
pop
inc
pop
xor
and
jbe
mov
in
mov
mov
lcall
out
pushl
dec
inc
add
sbb
sbb
hlt
jge
out
mov
stc
mov
sub
dec
and
inc
push
sbb
lret
and
fdivrs
add
add
cmc
cmp
mov
scas
and
arpl
inc
and
mov
xlat
cli
mov
gs
push
add
ss
push
or
mov
imull
je
cmpsb
ds
mov
idivl
inc
pop
out
mov
outsb
adc
rcrl
and
adc
pop
push
xor
aam
stos
fsubrl
aaa
enter
xchg
mov
lds
jmp
cmpsb
sub
jno
push
lret
sub
rolb
sbb
pop
add
ss
mov
icebp
lahf
icebp
pusha
decl
push
arpl
mov
sub
ja
or
push
aaa
inc
adc
insl
adc
aaa
xlat
mov
pop
xchg
pop
insb
lds
inc
cmovb
xchg
jns
adc
popa
mov
enter
jle
mov
pusha
push
sub
in
cmp
inc
jbe
in
xchg
out
scas
jmp
jbe
inc
in
in
sahf
int3
cltd
fmulp
insl
roll
push
rcrl
mov
fcmovnbe
iret
shll
in
sti
pop
ja
and
setle
mov
loope
jmp
inc
cmpsb
jo
cmp
lods
jb
je
insb
popa
and
cwtl
cmp
jb
adc
xor
sbb
lock
pop
lea
xchg
fstpt
xchg
push
xchg
lock
push
ja
cmp
mov
fs
push
lds
mov
xchg
mov
enter
aas
fs
jge
add
and
icebp
cmp
jne
jb
clc
push
in
daa
sbb
sbbb
pop
cmovbe
ja
push
pop
cmp
jl
mov
xchg
lcall
xor
and
mov
fnsave
mov
and
cwtl
or
pop
scas
insl
cwtl
adc
sub
push
and
pop
xor
inc
sbb
mov
mov
rcr
mov
mov
mov
lods
jmp
icebp
and
scas
xchg
mov
mov
mov
mov
iret
ss
sub
jae
ds
push
sbb
cmpsb
test
pop
stos
adc
push
jmp
jbe
jp
pop
or
mov
xor
pop
cmp
out
sbb
push
hlt
mov
out
aad
mov
cmp
mov
sub
xor
pop
adc
ds
jo
movsl
ret
int
fisttpll
and
lret
ss
sbb
jp
imul
daa
jne
jae
mov
std
cltd
cld
shll
push
xor
push
cmp
cmp
and
dec
add
in
in
ljmp
mov
cmp
mov
notb
sub
mov
int
cmp
jb
cmp
xchg
mov
inc
xor
sbb
pop
sub
sahf
fcompl
aad
push
add
idivl
jns
cwtl
mov
ss
mov
dec
stc
sti
sahf
mov
test
incl
dec
inc
add
data16
sbb
push
cmp
rcrl
cmpsl
sbb
jecxz
lcall
sarl
jp
or
das
sbb
inc
dec
push
sub
cmc
adc
out
or
push
aaa
lret
stos
repnz
lock
outsb
sahf
mov
and
fistpl
lret
pushf
call
cli
pop
scas
in
sbb
rorl
xchg
lods
adc
lds
lock
dec
and
leave
mov
insl
je
push
pop
cmp
andl
scas
fstl
das
jbe
add
outsb
daa
ja
jle
adc
push
iret
clc
cs
sbb
loope
popf
and
add
outsb
xchg
mov
push
mov
xor
insl
adc
lahf
mov
lcall
sbb
inc
mov
adc
xor
lret
pop
sub
mov
nop
aaa
and
lret
mov
jo
cvtdq2ps
jmp
mov
xchg
outsb
imul
loope
jbe
cmp
das
mov
cmp
pop
dec
adc
or
mov
pop
mov
push
dec
movsb
sub
enter
xchg
xor
pop
xor
jp
jo
push
mov
ljmp
mov
mov
pop
loope
mov
rorl
mov
add
ret
jns
cwtl
jl
sub
mov
mov
test
loope
mov
sub
xchg
iret
sub
lret
in
add
pop
mov
sahf
in
nop
mov
dec
shrl
dec
or
push
aas
push
sbb
repnz
idiv
mov
mov
mov
inc
lahf
cmpsb
cmp
outsl
and
repz
jp
gs
cmpsb
or
clc
mov
pop
jno
std
xchg
add
lcall
jecxz
inc
push
imul
mov
sbb
push
jmp
pop
cmp
sbb
shlb
push
cmpsl
jge
push
cmp
lret
inc
and
sub
insl
cmp
call
inc
and
in
push
cmp
pop
dec
push
mov
ljmp
out
fwait
mov
xchg
jl
mov
add
popl
xor
xor
cmp
lret
test
icebp
mov
out
mov
int3
shll
aaa
push
push
adc
cwtl
xchg
cmp
repnz
xlat
xor
inc
or
fnstsw
mov
dec
dec
cs
shl
scas
mov
icebp
lret
xorl
xchg
outsb
and
in
in
jecxz
packsswb
jo
add
push
sub
mov
sar
sti
fs
mov
mov
sti
push
ret
pop
addr16
mov
mov
sti
mov
mov
pop
push
push
js
jbe
xchg
xchg
imul
push
dec
repnz
push
cmp
and
movsl
cmpsl
leave
mov
insb
adc
outsb
add
lcall
mov
xchg
sbb
fimuls
sbb
pop
ret
or
pop
inc
sub
inc
pop
xor
jge
or
inc
mov
and
push
push
daa
lds
divl
movsl
xchg
aas
pop
cmp
jnp
cmp
js
dec
js
sar
mov
fldenv
fcmovbe
mov
lods
cmc
dec
xchg
aad
gs
shr
push
insl
pop
imul
jecxz
es
mov
cmp
or
mov
lods
stc
adc
loop
std
add
nop
clc
je
std
jmp
mov
arpl
add
mov
les
jmp
cmp
pop
adc
adc
xchg
fstpl
xlat
aas
cltd
and
xchg
int
xorl
push
jnp
rolb
fbstp
gs
push
clc
pushf
in
clc
push
imul
jns
sbb
jno
out
add
push
pop
int
fidivrs
add
sahf
loop
das
bound
arpl
push
mov
mov
mov
lahf
mov
inc
jg
cmova
pop
icebp
mov
rolb
stos
sub
sbb
test
leave
test
hlt
cmp
sti
dec
or
push
imul
movsl
xchg
out
adcb
jmp
call
shlb
test
xchg
cmp
aaa
or
imul
pusha
addr16
ret
movsl
fdivl
xor
sub
mov
sub
push
mov
in
jnp
jg
in
xor
inc
push
jbe
insb
fdivr
mov
mov
loope
in
add
xchg
orb
jge
mov
add
ret
scas
in
shrl
cmpsl
push
adc
jae
cmp
aaa
push
sahf
hlt
adc
sbb
rclb
and
cwtl
ficompl
iret
inc
pop
das
and
lret
dec
addl
xchg
daa
sub
ja
fistps
jp
dec
inc
add
outsb
pop
shlb
in
cltd
jp
sbb
lock
push
pop
add
dec
pop
or
insl
inc
scas
inc
cmp
mov
and
sub
addr16
aad
sub
or
lcall
mov
in
sahf
fldl
in
push
pop
ljmp
or
loope
stc
hlt
mov
loop
fwait
sti
mov
shrl
add
or
push
adc
hlt
testb
fadds
mov
cmp
das
xchg
push
lods
into
jecxz
scas
cmp
xor
addl
sbb
and
aad
sub
jo
cmp
es
cmp
mov
push
pusha
fdivrs
sub
mov
out
fsubr
jae
xchg
adc
frstor
push
sub
jge
icebp
popf
mov
mov
leave
xchg
popa
lcall
addr16
adc
cmpsb
test
pop
or
inc
push
adc
sbb
ss
push
int
iret
lods
cltd
and
xchg
sub
add
pop
push
aas
mov
or
sub
add
cmp
in
xchg
arpl
sbb
jge
xor
cwtl
xor
add
xchg
mov
sub
jmp
jnp
cmpsl
ljmp
mov
mov
lret
testb
mov
stos
into
or
movsl
ljmp
fs
iret
test
ficoml
sti
adc
std
enter
mov
popa
sbb
mov
pop
xchg
cmp
mov
lea
lea
inc
sbb
lret
loope
cmpl
add
ss
addr16
je
aam
lods
clc
imull
cltd
aas
ret
aad
or
hlt
sub
jne
cmp
xchg
xchg
stc
lea
jp
xchg
mov
add
mov
aaa
jle
sbb
rcll
out
sbb
sub
jne
jae
cmp
pop
cwtl
pop
data16
mov
add
pop
xchg
dec
pop
or
push
mov
add
out
ret
pop
jle
push
adc
bound
inc
mov
aam
adc
sub
pop
icebp
pop
hlt
cmp
mov
and
ljmp
out
scas
lret
in
sub
popa
jge
inc
adc
aad
or
cli
popf
mov
xchg
mov
add
inc
movb
xchg
rcrb
push
shlb
popf
fdiv
dec
inc
add
pop
xor
fcoml
cs
mov
jae
movsb
inc
push
mov
out
cmp
pop
loop
out
imul
idivl
mov
jae
shlb
pusha
fsts
imul
pop
cmp
push
pusha
jcxz
in
mov
inc
mov
mov
jo
adc
jb
pop
pop
add
dec
push
sub
mov
or
push
inc
insl
sub
test
add
mov
std
repnz
test
jmp
xchg
das
pop
or
jb
ljmp
ficoml
push
loopne
mov
jae
sub
inc
hlt
dec
sub
pop
mov
popf
fsts
sbb
js
sbb
jo
push
sub
pop
sub
jp
mov
int3
xor
sub
fnstcw
mov
mov
jno
sub
mov
flds
sub
or
fcompl
out
mov
mov
sub
outsb
loope
std
scas
enter
mov
outsb
adc
jb
lods
and
sar
sti
test
daa
push
flds
std
popl
nop
xchg
neg
dec
pop
mov
mov
mov
pushf
mov
and
mov
fwait
sti
mov
xor
insl
pop
sub
rcll
sub
sub
gs
mov
imul
and
outsb
pop
pusha
xorb
or
add
and
adc
fsubr
push
jnp
std
xchg
in
movsb
jmp
push
rolb
loopne
xchg
sub
mov
stos
jecxz
aad
loop
mov
movsb
loope
ja
popa
xor
xchg
fsubr
xchg
jae
das
jnp
sbb
cmp
cmp
in
xchg
push
pop
mov
sbb
sub
ret
or
xor
das
dec
sbb
insb
lds
mov
ret
mov
les
dec
stos
scas
jne
mov
sbb
and
adc
fdivrs
sbb
jmp
sub
xor
or
xor
and
mov
test
insl
sti
push
dec
add
aam
fdivs
or
inc
mov
mov
mov
add
sub
gs
or
cmc
insl
push
testl
pop
xor
mov
push
jle
jg
jp
pushf
lret
inc
adc
push
cmpsb
nop
xchg
inc
jns
xor
push
or
sbb
dec
lods
in
or
test
sti
lahf
cli
inc
out
je
pop
push
add
xor
into
lods
cwtl
loope
test
pop
push
adc
jne
jg
movsb
icebp
mov
adcb
mov
mov
jp
xchg
inc
or
ss
push
cmp
jns
xchg
pop
sub
xor
push
js
fisttpl
ljmp
rorb
call
sub
ljmp
cmpsb
in
lea
scas
cld
mov
lock
xor
popa
mov
scas
data16
cmp
jg
sbb
sub
ficoms
mov
sbb
xor
inc
sub
push
fs
dec
aas
push
mov
sub
sub
outsb
inc
shr
jg
jno
imul
add
jb
push
inc
out
rcrl
inc
mov
pop
adc
push
xchg
cmpsb
push
push
and
sub
xchg
movsb
sbb
popf
rcrb
aaa
add
push
push
inc
push
aas
or
and
bound
fstp
jne
mov
lret
push
hlt
pop
and
daa
mov
loop
test
mov
out
jmp
fucom
mov
or
inc
pop
mov
jnp
pop
dec
insb
jne
jmp
mov
sbb
pop
jne
je
mov
cmp
cld
ficomps
je
sti
stos
fldenv
cmp
mov
aad
cwtl
ret
sbb
sub
cs
lahf
add
repz
sub
out
mov
push
aaa
push
out
loopne
push
xlat
rclb
sub
jle
loop
bound
pop
ja
push
pop
fwait
out
jecxz
shl
aad
adc
out
arpl
sahf
loop
insl
repnz
sub
adc
leave
pop
mov
bound
pusha
and
xor
in
clc
xorl
sub
int
and
dec
jl
lods
sbb
xor
loope
cmc
cmpsl
xchg
mov
ljmp
cmp
scas
sub
loopw
mov
clc
stos
lahf
cwtl
mov
fstps
lods
mov
mov
jecxz
mov
push
inc
and
clc
sbb
dec
loope
test
or
clc
int
jb
push
pop
push
dec
fsubl
jno
pop
repz
jmp
jge
adc
sub
add
cli
mov
in
mov
pop
mov
imul
mov
lret
and
push
xchg
mov
cmc
insl
stos
loopne
cltd
shr
jae
inc
and
jae
jno
lock
enter
movsl
je
data16
imul
inc
arpl
in
and
xchg
mov
lret
loop,pn
scas
mov
iret
xor
jnp
sub
dec
ret
xchg
aas
aam
mov
les
adc
std
jns
jno
aaa
cmp
sbb
hlt
mov
jge
push
jmp
rcl
xlat
scas
outsl
inc
and
jae
mov
addr16
sbb
pusha
xor
fld
lods
jecxz
xor
popf
push
fisubrs
insb
add
mov
mov
jno
and
imul
movsb
leave
ss
cvtps2pi
sbb
mov
push
xchg
mov
mov
in
pushf
out
fcmovnu
lret
fs
stos
sub
mov
and
and
dec
lea
dec
aaa
xor
into
mov
jg
push
jp
jnp
jbe
cmpsl
out
scas
in
test
fdiv
pop
fists
cmp
lods
out
mov
add
call
ja
sbb
and
movsl
mov
add
pop
fstl
xor
je
rol
pop
or
push
jp
sbb
and
test
inc
daa
out
dec
or
in
xchg
arpl
loopne
lods
loope
and
notl
hlt
xchg
imul
test
xor
jae
cmc
lahf
in
loopne
or
fsubrl
fnstsw
cmp
ret
add
push
call
test
adc
into
mov
or
dec
lods
mov
xchg
mov
xchg
clc
stos
out
xchg
adc
jecxz
repz
aam
gs
or
imul
xlat
jbe
rolb
in
sbb
xchg
stos
xchg
in
imul
pop
jle
pop
cmp
sbb
xlat
lret
cld
push
sub
sbb
xor
push
rcrl
cmpsl
push
jg
lea
cli
cwtl
mov
xchg
dec
out
add
dec
das
cmp
bound
cmpsb
inc
divb
dec
int3
loope
mov
mov
fistps
xor
jns
js
cmp
cmp
mov
xchg
add
xchg
mov
add
adc
outsl
stc
add
dec
repnz
cmpsl
sbb
xor
data16
mov
stc
jecxz
add
dec
sub
js
repz
pop
inc
xchg
clc
nop
add
inc
mov
push
popa
jbe
sbb
cltd
xchg
pop
sub
std
inc
inc
lds
adc
stos
std
scas
add
mov
ss
in
testl
in
mov
jno
or
xor
sbb
in
or
mov
iret
lcall
pop
or
mov
lcall
pop
aaa
lea
pop
jl,pt
pop
dec
divb
orb
jae
push
jae
addr16
fcoms
ja
daa
dec
xchg
icebp
xchg
out
jl
or
fwait
test
push
js
hlt
add
imul
jns
xor
pop
push
cmp
call
scas
call
jp
push
xor
hlt
out
push
idiv
sbb
dec
repz
jbe
sub
imul
call
repz
push
pop
cmp
ja
repz
cmpsb
insb
pop
mov
hlt
out
aaa
or
xor
cmpsb
dec
sbb
out
addr16
push
icebp
pop
sbb
or
popf
inc
adc
xor
in
out
jae
push
inc
inc
push
es
push
push
pushf
popa
pop
cmp
mov
loope
test
and
les
mov
pop
xchg
inc
jg
push
jae
call
mov
inc
mov
sbb
pusha
dec
adc
mov
mov
hlt
and
sbb
xor
loope
rol
add
push
add
push
pop
loope
sub
fistl
mov
and
xchg
enter
in
xor
jecxz
test
bound
orl
mov
add
add
sbb
outsb
daa
xchg
movsb
data16
fisttpl
jne
sbb
xchg
call
test
cli
and
je
out
xchg
fists
bound
pop
or
jp
mov
mov
cmp
inc
insb
jecxz
mov
push
pushaw
insl
jge
leave
lahf
int
jmp
push
jg
adc
andl
cli
xchg
cld
insl
pop
imul
mov
ds
icebp
sarl
cwtl
data16
cmp
inc
cmp
or
js
add
jmp
xchg
movb
mov
out
andl
arpl
pushw
aaa
divb
std
xchg
imull
dec
sbb
sbb
xchg
movb
mov
mov
ret
frstor
test
cltd
icebp
or
dec
leave
mov
sahf
lret
push
sbb
cmp
pop
sub
dec
es
lea
jb
bsf
bts
setl
mov
cmp
pusha
test
shl
call
movsb
lea
jne
fs
sbb
and
sbb
insb
pop
dec
in
xchg
lods
test
ror
mov
inc
fldenv
jae
sub
adc
adc
jbe
adc
divl
cmp
scas
aam
leave
ret
daa
test
or
pop
cmp
cmpsl
outsl
insl
pop
dec
rcrl
xor
jb
adc
sbb
fiaddl
mov
fstl
addr16
dec
cmp
call
lret
mov
in
adc
jno
testb
push
sbb
pushl
lea
pushf
lea
jmp
mov
push
pusha
pusha
lea
jmp
call
sub
clc
lea
clc
sub
cmp
movb
pushl
popl
pushf
pusha
cmp
stc
cmp
pusha
call
call
pushf
cmp
mov
pushl
lea
je
pusha
mov
lea
jmp
add
pusha
push
jmp
call
cltd
gs
daa
jno
sub
daa
popa
or
adc
gs
test
out
push
inc
mulb
jae
or
test
std
xchg
mov
sbb
dec
popf
inc
pop
sub
arpl
cwtl
and
mov
xchg
daa
in
or
subl
xchg
or
push
pop
dec
je
and
adc
or
push
in
test
xor
fldt
cmpsb
add
fs
jb
cmc
cmp
jmp
push
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
call
clc
pop
ret
lea
jae
mov
mov
rcr
movzbw
rcr
mov
setb
shld
shld
mov
bt
cmp
xor
test
push
cmc
repnz
jmp
push
mov
movw
pusha
pushl
pushl
ret
cmp
call
push
movl
push
movl
pushf
mov
pusha
pusha
lea
jmp
aas
mov
inc
cmovne
jno
push
push
cmp
aas
pop
movlps
fstl
push
push
xor
inc
inc
xchg
out
lods
mov
insl
es
xchg
shrl
push
imul
scas
out
add
sub
push
pop
repnz
mov
mov
sub
lea
popf
ljmp
inc
inc
mov
pushf
fcmovne
stos
aam
rorb
xchg
xchg
xchg
adc
cmp
jo
pusha
pushl
popl
clc
mov
clc
cmp
pusha
lea
ja
cmp
cmc
call
cmpsb
cmp
sti
jne
sti
movsl
cmpsl
rcrl
xlat
stc
mov
pushf
cmp
mov
inc
mov
adc
adc
rcrl
lahf
leave
sbb
rcl
mov
adc
mov
jle
push
pop
mov
cmp
mov
jg
mov
popf
xor
xor
push
inc
dec
sub
lahf
sub
cmp
je
dec
arpl
pop
mov
jns
lea
call
cmp
push
pusha
cmp
pushl
jmp
jmp
pop
mov
loop
lret
shlb
xchg
movsb
xchg
data16
sub
xchg
cs
filds
jae
adc
adc
cmp
sub
xorl
add
outsl
dec
push
pop
xchg
orb
xchg
arpl
jp
call
ja,pt
stos
xor
mov
lcall
aaa
inc
daa
mov
push
sub
fs
ss
sub
jmp
and
inc
cmp
adc
outsb
sbb
pop
es
pop
daa
xchg
pop
mov
mov
or
dec
inc
cmc
inc
xchg
stos
push
add
adc
aam
and
rcrb
sbb
dec
sbb
ret
xor
push
call
push
sub
rcrb
dec
sub
out
lea
aad
aad
cltd
xchg
cmp
jle
mov
push
stc
sub
setp
jmp
lea
jb
movzbw
bsr
rcr
shrd
movzbl
bt
test
shr
bswap
imul
xor
bsr
sbb
lea
bt
neg
bswap
push
call
push
pushf
lea
je
pusha
add
mov
jmp
mov
imul
fstp
test
fwait
mov
jno
lods
call
aad
sarl
and
jmp
aaa
stos
gs
cmp
lret
ret
add
test
cmp
mov
hlt
mov
adcl
insb
inc
adc
loop
lea
testb
and
pop
mov
les
roll
mov
hlt
cmpsl
mov
rorb
bt
imul
pusha
stc
add
mov
mov
mov
lea
jmp
jl
sbb
jne
and
dec
xor
cmp
dec
xor
or
into
lods
in
nop
cmp
sub
lahf
leave
shlb
ficoms
and
add
icebp
mov
mov
cmp
imul
jae
lret
mov
sub
shr
cwtl
femms
xchg
rcrl
dec
repz
inc
push
mov
enter
pop
fisttps
mov
stos
std
scas
rcl
jnp
and
out
out
inc
mov
cmpsb
mov
fcmovbe
testb
fists
lret
aad
or
inc
push
je
or
xorb
lds
xchg
cmc
xor
fs
xchg
cmpsl
out
out
or
inc
js
push
and
sub
pop
add
out
jns
mov
jl
mov
add
push
adc
daa
jp
jno,pt
push
imul
push
iret
adc
jne
sub
pop
inc
arpl
mov
sar
and
stos
xor
mov
sahf
clc
xchg
in
xchg
mov
add
inc
jbe
cld
and
leave
add
mov
or
push
inc
out
jl
push
in
movsb
dec
aaa
mov
ja
mov
stos
outsb
lret
out
sti
and
addr16
push
dec
or
adc
adc
xor
in
xchg
xor
mov
shll
aam
in
stos
cld
neg
jne
jp
in
test
scas
add
test
shr
pushf
clc
imul
pusha
pushf
lea
mov
mov
jmp
pusha
not
mov
push
jmp
es
inc
jne
pop
add
sbb
inc
adc
daa
inc
aam
loope
mov
popl
lods
sbb
outsb
mov
sahf
mov
and
dec
xor
scas
adc
sbb
xor
lahf
jge
push
cli
icebp
mov
jbe
sbb
or
adc
cmpsb
aam
lcall
xchg
cli
mov
dec
mov
test
mov
push
lock
std
std
mov
cmc
ret
jns
pop
xchg
ret
sub
mov
adc
push
ss
mov
pop
lea
sbb
mov
and
aam
push
ret
in
es
test
in
fwait
and
jo
inc
xchg
mov
adc
lcall
and
icebp
nop
enter
fisttpl
les
sub
add
add
je
imul
inc
add
rcl
mov
push
not
stc
sub
mov
shl
bsf
sub
jne
shld
mov
shrd
movsbw
test
mov
mov
shrd
mov
stc
mov
shld
stc
sub
stc
rol
mov
stc
mov
aam
mov
xor
or
adc
aad
sub
cmc
lea
and
inc
mov
cmc
shl
pusha
clc
mov
add
pushl
movb
lea
pushf
call
test
xor
stc
repnz
pushl
pushf
jmp
clc
ror
call
xchg
pushf
jmp
loope
cmp
jne
add
pop
or
inc
push
push
cmp
push
and
stc
push
loope
cmpsb
fadds
xchg
pop
add
inc
gs
cmc
lcall
loope
mov
and
fs
mov
xor
sahf
and
jbe
add
dec
sub
inc
adc
cmp
cmp
rorb
push
push
inc
cltd
xchg
mov
movsbl
lea
call
not
sub
shr
mov
rol
rol
stc
add
add
neg
shl
bt
setne
mov
stc
pushf
pushl
test
test
call
pushf
pushf
lea
jp
jne
lea
btr
xor
cmp
mov
sar
movsbw
btr
sub
js
inc
shld
mov
jmp
add
add
bt
xchg
bsf
add
movsbw
mov
call
jmp
push
pusha
push
lea
jne
rol
mov
and
sub
sub
mov
bt
test
stc
ja
sub
test
bt
pushl
pushf
cmc
bt
bt
cmp
push
pusha
push
mov
lea
ja
pusha
pusha
lea
jmp
not
mov
lahf
cwtl
movzbw
mov
jno
mov
movsbw
mov
lea
push
movzbl
rep
push
push
pusha
mov
not
lods
shrd
rol
adc
neg
not
shrd
mov
xor
bswap
xor
shl
sub
bsf
not
cmc
shrd
adc
sub
add
movzbw
sbb
sar
xor
xchg
pushl
mov
pushl
mov
jmp
sub
mul
jne
in
xchg
call
ret
xchg
sahf
aam
sti
gs
cltd
cmp
or
sbb
cmp
sub
scas
mov
mov
out
sahf
movsb
out
fcmovbe
pop
jo
push
or
and
fldl
call
mul
jmp
hlt
adc
sub
sub
popa
and
out
cmpb
xor
dec
jns
cmp
dec
and
jg
outsl
add
cmp
lods
cltd
arpl
sti
or
jne
adc
inc
xor
cmp
pop
sub
insl
add
push
out
pop
pop
ja
xor
pop
xchg
lahf
jge
pop
outsb
mov
hlt
mov
out
jns
test
xchg
adcb
and
ja
stos
out
lods
jl
pop
movsb
div
cmp
push
adc
cwtl
in
xchg
pop
inc
inc
push
pop
sbb
xor
inc
fnstenv
nop
dec
imul
xchg
jmp
push
pusha
pushf
lea
pushl
lea
jmp
lea
call
pushf
add
sar
mov
lahf
movsbw
mov
clc
pushf
clc
cmp
movw
call
movl
pusha
call
jbe
int3
loope
and
test
nop
out
mov
addb
cwtl
xchg
das
inc
int
cmp
sbb
pop
jmp
add
or
inc
push
loopne
test
enter
jo
xor
sbb
sbb
lods
xchg
sub
iret
pop
dec
gs
pop
xchg
outsl
mov
adc
orb
or
test
xchg
mov
std
mov
enter
in
mov
test
xchg
cmp
or
popa
pop
jg
into
je
loope
and
shl
mov
std
pop
fistl
jmp
or
in
mov
call
sub
lods
ja
sbb
push
sub
push
arpl
jle
add
adc
push
add
loopne
mov
aas
test
sub
adc
pop
dec
pop
popf
dec
mov
mov
inc
mov
jle
mov
mov
mov
sbb
pop
sbb
test
xchg
sub
xlat
fcomip
setnp
loopne
mov
adc
mov
mov
mov
and
lea
adc
pushf
clc
pushf
sub
test
bt
jmp
mov
out
cwtl
ficoms
mov
clc
xchg
in
dec
or
jle
test
clc
shll
xchg
stos
nop
mov
js
sub
or
pusha
jbe
xchg
sbb
pop
pop
cmp
clc
dec
or
push
sbb
imul
fsubrs
cmp
xchg
adc
jb
ret
cmp
insb
push
inc
xor
daa
sub
lahf
sub
push
adc
mov
fwait
inc
out
and
cs
xor
mov
jo
jle
cmp
pop
dec
or
sub
add
push
add
push
add
rcrb
loope
dec
pushf
xchg
jmp
push
fwait
adc
sti
and
sahf
mov
lea
xchg
mov
and
xchg
sub
mov
es
adc
test
cld
xor
movsl
fs
ja
loope
xchg
stos
icebp
repnz
cmp
rclb
adc
out
and
xchg
lret
in
mov
mov
movsb
mov
rcrb
cli
dec
sub
out
xor
mov
dec
adc
sub
test
adc
pop
xchg
out
jnp
inc
hlt
xchg
pop
loop
sbb
mov
popf
je
jge
xchg
mov
dec
adc
pop
cmp
add
jge
fists
add
add
pushl
call
sub
and
fwait
loope
lds
cltd
fbld
fwait
loope
xchg
jmp
pop
inc
out
xchg
push
test
adc
hlt
mov
fwait
dec
xor
sub
ljmp
sbb
cmc
sbb
push
push
mov
push
xorl
and
sbb
in
jg
imul
enter
pop
stc
xchg
mov
fucom
push
stos
or
xor
shrl
jnp
nop
sub
jbe
leave
mov
out
mov
and
cmp
push
std
mov
mov
mov
scas
mov
insl
out
push
pop
or
mov
add
sub
and
call
pushf
push
bt
shr
push
pushf
imul
call
jmp
lea
jb
shl
das
mov
shl
neg
jmp
lea
je
cmc
sub
cmp
cmp
jmp
mov
pushf
jmp
fs
pop
xor
push
js
jo
sub
jb
add
add
pop
sub
sti
mov
sar
orb
aad
aam
test
ss
daa
cmp
in
push
inc
ret
or
test
inc
adc
test
repz
mov
mov
pop
notb
pop
lea
les
mov
mov
xor
lds
out
mov
jb
loope
pop
in
and
insl
pop
jno
jne
dec
mov
inc
leave
mov
fimuls
push
adc
outsb
cmp
sub
dec
cs
sub
jge
lret
add
test
rcl
adc
mov
sub
inc
imul
mov
or
insl
xor
cmp
push
push
cmp
dec
jle
push
pop
js,pt
mov
mov
mov
clc
cmp
add
jge
sti
lcall
loop
jge
or
test
cmc
xchg
in
std
mov
data16
es
sub
cwtl
jae
fcoms
or
lahf
movsb
call
ror
outsb
and
push
xchg
mov
aam
enter
scas
sbb
incb
pop
daa
dec
sbbl
mov
jecxz
aad
lea
std
ret
in
pop
jp
jne
pop
pop
shr
mov
add
inc
inc
dec
xor
cs
insb
add
push
and
add
insb
mov
jne
stos
shll
ror
pushl
adc
inc
and
outsb
loopne
mov
pusha
sub
mov
cs
cs
cmpsl
inc
sub
aas
ljmp
inc
xchg
enter
adc
jns
cli
jo
test
notl
cs
addb
xor
addr16
daa
adc
and
lds
pop
jnp
inc
sbb
and
test
sbb
xchg
adc
test
clc
or
lea
bswap
mov
stc
not
not
pusha
add
jmp
push
cmp
mov
pusha
jmp
call
lea
pusha
pushf
call
mov
mov
mov
lea
jmp
fbstp
iret
jmp
and
xchg
lock
lods
mov
sti
mov
mov
repz
jo
stos
sub
dec
and
cmp
mov
mov
insb
mov
xchg
mov
imul
sbb
decb
push
test
or
or
jle
mov
cltd
sbb
int
nop
shlb
pushf
xlat
mov
lock
dec
int3
push
in
sbb
dec
mov
ljmp
add
or
and
jbe
mull
scas
jb
xchg
std
aam
outsl
not
mov
dec
scas
sbb
push
push
fists
mov
sbb
fldt
js,pt
jl
movsl
mov
cmc
aam
aas
imul
es
dec
fsubp
into
xor
push
pop
or
fprem
mov
call
fildll
pushf
pop
fcomi
inc
cwtl
popa
adc
test
sbb
add
jge
ljmp
jne
insl
dec
xor
jnp
sbb
test
mov
mulb
pop
leave
fcompp
je
repz
or
sub
jg
adc
add
call
mov
js
jmp
sbb
mov
jo
clc
pop
aam
cmpsb
hlt
mov
jmp
xchg
mov
mov
test
push
adc
jl
mov
pop
jmp
jnp
ja
push
sbb
adc
sbb
jae
orl
outsl
add
test
and
kmovw
out
imul
imul
mul
jmp
sar
pop
cs
or
push
inc
pushf
nop
scas
sti
lods
jnp
cmp
ret
shrl
out
inc
dec
add
add
int3
mov
mov
ret
or
popa
es
push
pop
cmpsb
add
xor
jp
aad
out
call
cmp
cmc
mov
sub
pusha
shl
pushf
mov
bt
cmp
push
lea
jae
jbe
bt
clc
sub
lahf
lea
push
movb
call
bt
shl
jmp
cmp
inc
sbb
das
imul
insl
pop
jne
dec
int3
lahf
sahf
imul
jecxz
inc
outsl
push
push
add
push
and
adc
jo
ret
xor
sbb
sbb
icebp
and
insb
sti
pop
bound
mov
inc
int
dec
inc
in
nop
pusha
ds
out
mov
cmpsl
mov
mov
sub
scas
fcompl
adc
mov
loopne
aam
shlb
xchg
jge
sahf
mov
sbb
insl
sub
mov
dec
popa
popa
mov
xor
mov
mov
push
cmpsl
mov
pop
stos
jbe
pop
cmp
lcall
sarb
lods
jnp
aam
shll
or
and
push
and
jp
push
adc
leave
dec
pushf
sub
sub
mov
ret
jne
add
mov
lods
xchg
xchg
iret
int
mov
xor
mov
fcmovnbe
pop
dec
inc
aad
mov
dec
pop
xor
and
icebp
roll
push
cli
jno
adc
test
ljmp
popa
clc
aaa
out
sbb
hlt
adc
sub
stc
popf
faddl
shlb
mov
lods
sub
jae
lods
rorl
lahf
cmc
mov
xchg
and
out
insl
xor
adc
scas
out
fmull
lret
outsl
cwtl
mov
pushf
ficoms
lods
adc
inc
and
pop
sbb
imul
jns
lcall
jno
clc
mov
sbb
mov
test
lock
jmp
and
nop
xchg
mov
mov
mov
add
mov
cmc
xchg
loope
shrl
icebp
push
jns
lret
dec
or
add
sbb
inc
leave
push
outsb
aam
adc
ficoms
loopne
test
mov
push
out
jne
xchg
iret
flds
inc
mov
dec
mov
inc
leave
mov
test
adc
lret
lret
movsl
test
mov
pop
xchg
mov
xchg
fld
mov
mov
fmuls
sub
xchg
push
loope
stos
pop
aas
or
fistps
outsl
lock
mov
add
mov
out
adc
cmpsb
popa
xchg
pop
insl
xor
pop
ss
cltd
notl
mov
inc
cmpsl
mov
inc
inc
cmp
push
adc
jae
mov
enter
das
inc
stc
les
addb
jne
filds
jb,pn
inc
push
outsb
xor
cs
andb
jp
out
scas
pop
xor
add
je
outsl
fs
gs
imul
add
mov
jl
add
insb
jle
push
xor
cs
es
pop
mov
stos
sbb
sbb
mov
lret
sub
push
bound
jns
orb
inc
jne
pop
out
in
jbe
repnz
enter
jg
out
jle
mov
cltd
jecxz
dec
cmpsb
into
adc
icebp
mov
fistl
lahf
cld
mov
loopne
sbb
xchg
notb
add
pushf
xchg
jmp
dec
bt
add
rol
rol
neg
sar
mov
call
aam
push
in
jne
add
aad
leave
mov
shr
inc
push
mov
or
ret
inc
sbb
cmc
mov
rcpps
fwait
outsl
inc
jg
lea
add
push
jle
pushl
sar
test
fidivrl
dec
stc
lods
lods
mov
and
ret
in
ret
mov
sti
add
lock
add
dec
inc
or
add
pusha
push
lea
call
cmc
pushf
add
clc
clc
test
push
cmpl
mov
lea
jne
movzbw
pop
movzbw
pop
pushf
lea
mov
movzbw
setae
cwtl
lea
call
call
pushf
lea
je
jbe
bt
cmp
push
lea
je
jb
cmp
pusha
call
rcrb
jne
mov
mov
mov
test
fsubl
jbe
and
xor
xchg
fwait
ljmp
cltd
call
mov
scas
dec
cwtl
xor
pop
sbb
mov
shl
mov
sub
imul
call
xchg
jl
pop
sub
cmpsl
jge
add
ss
sti
mov
mov
ss
test
fwait
or
mov
cli
inc
sub
fisubs
ret
dec
and
adc
testl
shld
and
rcr
sub
pushl
mov
jmp
lea
jb
clc
btr
neg
add
mov
rcl
mov
stc
cmc
bt
cmc
shr
push
pusha
call
mov
adcb
sar
xchg
ljmp
jecxz
sbb
fldcw
push
ss
imul
fptan
cwtl
inc
xor
adc
xor
push
sub
inc
icebp
insb
mov
adc
iret
cmp
xchg
ret
rcll
into
cli
repz
adc
inc
gs
ds
jle
ja
sbb
mov
mov
in
fiaddl
in
in
xchg
lods
adc
jnp
jmp
and
ja
pusha
pusha
lea
jmp
jmp
lea
jb
dec
rcr
cmp
aam
mov
bsr
mov
pushf
cmp
push
shl
pusha
call
jmp
pushf
test
cmc
mov
cmp
call
test
mov
mov
jmp
movb
call
pusha
push
jmp
rcrb
loopne
jne
cli
test
shl
ret
fcoms
movsl
cld
and
jmp
and
xlat
roll
mov
xchg
and
jg
add
fimuls
add
in
scas
cmc
shl
mov
test
cmp
dec
fnstsw
mov
jnp
sub
inc
add
mov
cs
adc
cli
cwtl
jge
push
add
and
arpl
inc
add
rcll
mov
mov
mov
fadds
push
aas
insl
jg
inc
add
jae
fs
jmp
jae
cld
xchg
popa
fildl
xchg
inc
mov
sbb
xchg
test
insl
inc
and
pop
out
add
lea
ficomps
repnz
fcomps
js
test
xor
xchg
out
push
int3
mov
sub
jno
cmp
push
pop
jb
test
ror
subb
aas
xchg
jne
and
pop
push
sub
dec
jae
adc
ret
add
notl
cmp
add
aad
aad
subb
mov
mov
stos
lret
xor
cs
jne
mov
js
aas
xor
push
jmp
add
jo
hlt
stos
xchg
mov
mov
lock
stos
pop
imul
fsubr
rol
mov
xchg
enter
jo
pushf
jne
pop
push
mov
cli
pushf
mov
call
push
jns
nop
jne
adc
add
sub
inc
cmp
or
cmp
jns
jb
jbe
pusha
cld
insb
sbb
repz
sahf
test
lods
fs
lcall
sbb
lock
aas
das
mov
iret
mov
testb
jmp
lods
or
rclb
and
push
add
inc
or
nop
dec
lahf
pop
pop
push
or
icebp
decl
adcb
icebp
push
faddl
mov
cmpl
lahf
mov
pusha
pusha
pushf
lea
jb
test
bt
add
cwtl
mov
pushf
test
sub
mov
mov
push
movb
stos
pusha
lea
jmp
seta
test
mov
cmp
bt
clc
cmpb
push
call
inc
imul
push
js
jl
xor
push
test
jne
push
push
push
sub
bound
xchg
inc
adc
mov
jle
cld
lret
sbb
cmpsl
pop
xchg
ret
xchg
dec
dec
push
mov
inc
mov
and
cmc
imulb
rcrl
popa
fcoms
xor
cmp
mov
fidivrs
scas
xchg
xchg
cmc
jl
sbb
push
pop
jo
push
cmp
jo
dec
clc
jnp
sub
outsb
lds
mov
pushf
lea
call
bt
stc
pushf
clc
mov
stc
jmp
xor
shrl
add
mov
sub
jb
mov
add
call
sub
jne
ret
jmp
sub
jmp
pushf
call
and
and
push
inc
jl,pt
inc
and
iret
xor
dec
or
jns
fidivl
outsl
pop
adc
mov
shrb
or
cmp
push
add
xchg
sbb
or
out
leave
cmp
push
fwait
lods
test
ljmp
aad
add
dec
push
sbb
dec
pop
dec
rorl
nop
mov
ljmp
sub
lahf
jno
scas
mov
add
clc
fistpll
jl
rolb
and
cmp
add
mov
dec
shlb
sysenter
rol
and
popf
lea
jb
cmp
aad
sbb
sub
mov
stc
pusha
bt
cmc
sub
not
pusha
mov
call
fnstenv
xchg
jne
xchg
sarl
add
sarl
xchg
jp
movsb
xor
push
pushf
push
mov
arpl
in
adc
xor
loopne
add
dec
outsl
pop
or
imul
push
mull
shlb
orb
xchg
dec
repnz
mov
pop
jl
lahf
adc
fbld
hlt
idivl
mov
rcr
insl
dec
fs
xchg
jne
pushf
cmp
jl
inc
push
js
push
and
sbb
add
push
or
mov
xorb
inc
or
loop
imul
les
enter
enter
nop
fistl
hlt
pop
enter
xor
pop
call
es
sahf
cmpsl
repnz
add
sbb
subps
imul
jnp
dec
add
or
lods
repz
lret
xchg
jne
sub
xor
data16
sub
mov
pop
fbld
inc
mov
cltd
insl
dec
into
mov
sbb
sub
sbb
dec
jb
push
add
push
and
test
cld
mov
and
jne
bt
cmc
xor
btr
mov
jmp
mov
bswap
mov
call
push
ljmp
add
addr16
aaa
dec
pop
daa
repnz
cmp
adc
pop
popa
aam
mov
add
fxch
xor
push
lret
sbb
daa
adc
popf
out
sahf
mov
adc
lret
or
int
lods
jmp
stos
push
rorb
mov
cmp
xchg
mov
mov
nop
xchg
repz
shrl
test
lret
cmp
insb
xor
ss
and
sbb
test
aas
js
and
push
andl
or
cmp
rcl
test
nop
stos
fsubr
and
pop
test
cmp
mov
sbb
dec
fcmovnu
adc
jecxz
mov
rcll
jnp
pop
sahf
push
push
out
xor
push
dec
andps
sub
adc
add
subb
mov
and
jne
btc
mov
mov
bt
not
shl
mov
shl
xor
movsbw
btr
mov
pushf
bsr
inc
mov
bsf
stc
mov
ror
mov
bsr
add
rcr
mov
mov
rol
mov
and
sub
pushf
ror
mov
lea
adc
aas
cmc
mov
aaa
sub
daa
cmp
dec
and
aas
aad
mov
stc
push
movl
shl
jmp
bt
jmp
push
jmp
enter
jne
push
inc
jo
and
sub
push
xor
sub
out
mov
cmpsb
xor
pop
push
and
pop
out
lds
aaa
loop
mov
xor
mov
pop
loopne
lret
loopne
mov
jecxz
sahf
or
popa
dec
push
add
arpl
shrl
sbb
call
sub
iret
outsb
shlb
enter
jb
jge
sysret
xor
adc
xor
push
mov
lods
or
hlt
mov
call
lcall
fimull
mov
lock
imulb
adc
aam
fistps
loopne
jae
jo
jno
cmp
mov
lock
pop
aaa
or
xchg
inc
mov
in
push
sbb
mov
aaa
ret
or
or
jp
add
sbb
test
loopne
in
loop
push
xchg
mov
mov
lods
jnp
pop
sbb
cmp
cltd
jne
rorl
mov
xchg
int3
insl
pop
adc
jmp
push
cmp
jbe
frstor
xchg
xchg
int
lock
in
fldcw
cwtl
dec
ret
mov
daa
rcrb
fmull
xor
push
mov
dec
fstpl
arpl
jl
cld
pop
cmp
call
popl
rcrl
lea
rclb
mov
rcll
pop
lahf
push
movsl
push
mov
and
pop
insl
imul
jne
popa
pop
jno
and
movsl
or
or
jg
xor
pop
xchg
jmp
outsl
cmc
mov
test
mov
outsl
sti
xchg
leave
mov
stos
bound
sub
inc
jbe
xchg
outsl
iret
jb
xor
pop
fildl
js
subb
nop
jge
and
shl
lods
rcll
rorl
popf
cmp
adc
pop
push
or
jmp
sub
negb
in
fldcw
movsl
xchg
loop
or
inc
das
add
xorb
cs
in
mov
addr16
add
push
shrb
mov
nop
pop
and
in
jnp
jns
pop
repz
pop
jmp
leave
stos
xlat
dec
fnstsw
lock
lahf
mov
nop
addr16
stc
mov
mov
cmp
cmp
push
hlt
loopne
or
sbb
popf
fstp
nop
into
lahf
call
test
jp
pop
imul
inc
and
sti
push
lea
call
pushf
call
lods
shr
shl
shrd
not
stc
xor
pop
btr
rcr
sub
and
not
jmp
pusha
mov
lea
call
jp
pushf
lea
jb
not
movzbl
jmp
pushl
popl
mov
pushf
pushl
pushl
ret
adc
call
mov
cli
mov
mov
hlt
xor
lds
shr
je
daa
test
js
jg
cmp
jb
sub
pop
inc
cltd
mov
arpl
loop
xchg
add
xchg
retw
ljmp
pop
gs
pop
xchg
lret
push
adc
lods
dec
cmpsb
and
mov
mov
vpor
xchg
scas
push
repnz
mov
adc
fcoms
cmp
nop
arpl
scas
sarb
mov
xor
sahf
movsb
into
inc
cli
insb
mov
cwtl
outsb
dec
and
pop
ret
popf
push
call
popf
cmpsl
cmc
mov
mov
bnd
add
outsb
shll
fs
pusha
dec
das
xchg
xchg
fisubl
fnstsw
inc
daa
push
neg
testb
and
pushf
ss
sub
cs
push
xor
insl
sbb
jp
insl
hlt
jecxz
lea
adc
js
and
jle
adc
push
pop
test
push
mov
je
mov
dec
data16
adc
hlt
xchg
sbb
xchg
movsb
lock
mov
shll
mov
lods
mov
sbb
push
das
sbb
dec
clc
gs
sbb
sahf
pop
pop
dec
sub
jo
mov
test
fadds
add
inc
outsl
fstpl
cwtl
scas
out
inc
or
bound
inc
popa
lock
push
daa
jl
pop
pop
or
and
dec
pop
jl
fwait
cltd
ret
lret
add
adc
adc
and
sub
mov
pushf
shl
shr
not
dec
dec
mov
rcl
add
bsr
pushf
not
add
sub
pushf
mov
movb
clc
shr
cmp
cmc
jmp
pushf
pushf
pusha
mov
call
call
call
lea
je
clc
clc
bt
cmp
add
pusha
clc
call
pushf
jmp
pop
mov
loopne
lock
lret
hlt
fisubrs
jnp
pop
sub
ds
dec
loopne
fwait
inc
xchg
mov
pop
cmc
icebp
inc
ljmp
int3
sbb
popf
leave
shrb
pushf
ja
mov
mov
pushf
ja
in
inc
sub
pop
jp
cwtl
mov
inc
mov
sbb
jp
and
jns
inc
add
inc
in
jmp
add
add
sbb
pusha
lea
movb
mov
movb
mov
pushf
push
lea
jmp
not
push
inc
cmc
test
bt
cmp
pop
lea
cwtl
mov
jmp
call
repnz
call
das
push
cmc
pushf
jne
out
cltd
ret
mov
add
loope
sub
dec
pop
incb
shl
xchg
mov
jecxz
flds
fnstcw
sbb
lret
fists
dec
push
pop
and
loop
cwtl
inc
cmp
mov
inc
aam
adc
adc
lret
cmp
mov
cwtl
mov
pop
xchg
and
ds
popa
negb
int
sub
jne
jmp
iret
xchg
xchg
jmp
xchg
or
lret
lods
loop
cmpsb
rol
mov
mov
stos
roll
aam
mov
adc
adc
stc
cld
int3
inc
jbe
and
and
orl
adc
hlt
inc
xor
adc
mov
lcall
sub
push
cmc
repnz
lcall
ljmp
pop
push
cmp
cwtl
add
inc
imul
outsb
mov
mov
fsubs
add
xorl
mov
popf
sti
test
xlat
popf
out
pop
cmp
in
in
cltd
push
aaa
jmp
dec
pop
sub
es
clc
ficompl
or
lea
inc
sbb
adc
xlat
std
adc
or
loope
and
mov
sti
addr16
sbb
es
push
xchg
movsb
fisttps
rcr
mov
jns
out
arpl
push
pop
sbb
xchg
sub
lods
mov
loop
cmp
in
xchg
lret
sub
loope
pop
add
cmp
adc
add
push
inc
out
ss
xor
jecxz
cmp
dec
cmp
inc
inc
xor
cmp
dec
or
faddl
js
dec
add
and
add
js
xor
scas
int3
in
push
scas
jp
inc
adc
inc
mov
push
add
or
xchg
or
daa
inc
arpl
cmp
sti
mov
je
pop
and
xor
or
inc
fs
mov
inc
adc
inc
leave
in
jnp
xorb
std
stos
mov
xchg
repz
in
scas
std
jmp
mov
adc
sbbl
xchg
sti
adc
sarl
jge
je
ret
sbb
jmp
sub
movsb
mov
fwait
push
movsb
mov
mov
scas
ret
in
mov
jbe
mov
inc
fs
sub
pusha
aas
js
fdivl
adc
js
das
enter
shll
fiadds
loope
xchg
jmp
lret
fnstenv
pop
xchg
sti
cltd
sti
mov
push
cmp
add
xlat
and
sub
dec
pop
jecxz
loop
lcall
add
das
nop
idivl
daa
cs
insb
ljmp
sub
lods
pop
push
notb
dec
dec
data16
pop
or
pop
xor
push
dec
add
push
iret
loop
mov
adc
repnz
movb
lea
mov
lea
call
pushf
pushl
mov
stc
cmp
push
lea
jb
inc
mov
add
rol
mov
stc
shr
pushf
mov
adc
bt
call
lea
mov
lea
jmp
sub
jmp
xlat
fisubrs
mov
or
nop
mov
xchg
dec
pop
hlt
adc
jle
bound
cmp
inc
imul
imull
aas
lahf
lcall
ljmp
out
mov
adc
sbb
scas
mov
jae
xor
repnz
jp
stos
adc
xor
fisttpll
shrl
sbb
jg
push
mov
or
shr
sub
cwtl
cmpsb
scas
aam
and
mov
test
loopne
jno
cmpsl
addl
sub
pop
fdivrp
add
jmp
jmp
popa
push
mov
test
hlt
mov
xchg
or
testb
add
fildll
xchg
jmp
or
pop
push
leave
add
repz
call
mov
sbb
xchg
xor
push
push
and
in
clc
pop
rclb
je
movb
lcall
dec
jmp
aad
into
scas
xchg
test
int
test
fnstcw
dec
leave
scas
add
jae
jl
fwait
pushf
mov
cwtl
pop
push
lea
call
jmp
lea
push
pushf
lea
jmp
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
pushl
lea
call
jmp
pusha
jmp
setae
pushf
mov
not
setnp
pushf
mov
pushf
mov
jmp
data16
faddl
xchg
loope
fnstcw
aad
cmc
mov
popa
sub
icebp
xchg
jg
lahf
or
dec
fs
or
in
dec
sbb
sahf
xchg
outsl
xlat
jecxz
outsb
inc
icebp
filds
movsb
push
lods
leave
out
in
add
nop
out
call
loop
mov
lock
fs
nop
roll
popf
out
lea
cltd
cli
test
leave
fs
push
fcoml
cltd
pushf
movl
pusha
call
call
fdivl
xchg
xchg
hlt
sahf
loopne
cld
mov
rorb
scas
inc
cmc
arpl
adc
mov
jg
outsw
xor
pop
sub
pop
jae
adc
xor
jmp
pusha
sahf
add
adc
mov
loop
hlt
and
cwtl
enter
je
lcall
popa
es
cmp
testb
xor
pop
pop
sbb
mov
lea
jae
pushf
sub
pushl
lea
pushf
lea
call
setge
bt
bt
inc
add
shrd
mov
aad
clc
pop
bswap
shr
pop
cmp
pusha
cmp
pusha
sbb
jmp
push
and
add
je
add
add
je
add
add
mov
add
and
insb
and
add
je
add
add
je
add
add
je
add
add
add
add
aaa
test
add
and
add
je
add
add
add
add
imul
cwtl
je
add
add
add
add
mov
je
pushf
call
bswap
movzbw
push
mov
call
pushl
lea
je
clc
jmp
rcr
sub
or
adc
add
push
sbb
dec
andb
mov
outsb
sarb
mov
cmp
icebp
pushf
dec
cli
int
mov
imul
rcl
xchg
jecxz
sarb
int
clc
jbe
mov
outsl
inc
loopne
pop
lea
pop
inc
mov
xchg
and
or
cmp
jge
insl
sub
xor
aad
lods
clc
xchg
or
pop
icebp
jmp
mov
and
sub
jle
dec
adc
popa
adcb
xchg
sbb
ret
stos
sbb
mov
pop
leave
add
test
psraw
adcb
mov
and
and
aam
into
gs
rorl
imul
fdivl
leave
xchg
cmpsl
scas
fnstenv
xchg
es
mov
sbb
lea
jb
sar
sar
or
rol
cmp
pushf
pop
push
inc
sbb
setnp
lea
movsbw
mov
mov
not
mov
call
stos
pushf
lea
jmp
jmp
adc
into
mov
notl
lea
mov
mov
xchg
or
lds
mov
jno
or
sbb
inc
mov
sbb
fdiv
ds
int
adc
inc
pusha
ss
clc
xchg
lret
pusha
aad
adc
xchg
fsubl
mov
out
xor
inc
bound
xor
inc
sub
sbb
adc
mov
ss
add
add
pop
cmp
incl
and
mov
mov
stos
in
xchg
lret
std
cld
pop
popf
decl
in
js,pn
pop
in
xchg
shr
push
iret
test
adc
pop
enter
or
mov
inc
xor
jmp
jno
fadds
shll
in
sub
sub
out
in
mov
sub
in
lock
xorb
jnp
inc
aaa
dec
dec
and
cmp
pop
loopne
jo
sbb
fwait
call
sub
cmp
icebp
jmp
sar
rorb
inc
bt
shr
push
movb
imul
push
jmp
push
pusha
lea
jb
clc
cmc
cmp
lea
movzbw
lea
cwtl
mov
pushf
movb
lea
jb
dec
test
rol
sbb
mov
clc
cmc
clc
cmp
sub
pusha
mov
push
push
jmp
shr
mov
and
pop
add
daa
insl
and
out
xor
xchg
mov
xlat
mov
std
pop
stos
mov
jbe
adc
hlt
mov
dec
or
fidivrs
jo
dec
xchg
add
enter
clc
ljmp
jmp
jg
sub
ljmp
push
xor
call
adc
xor
movsl
xchg
cwtl
or
loopne
xor
fsubr
pusha
sbb
in
sub
popa
cmp
mov
pop
idivb
mov
outsb
rcl
xchg
subb
adc
loope
aam
daa
bt
clc
jmp
jg
sbb
es
jbe
jb
ss
xchg
fdivrp
js
mov
add
xchg
pop
cs
jae
hlt
addr16
mov
in
out
lahf
mov
xlat
in
fwait
ror
movsl
mov
jge
out
imul
or
mov
inc
in
test
and
imul
aaa
inc
dec
pop
adc
push
call
imul
xchg
shlb
pushf
sti
pushf
fwait
add
cmp
fldt
jns
and
imul
and
lret
ljmp
mov
push
mov
mov
sete
mov
lods
cmc
mov
cmp
cmc
not
bt
xor
bt
clc
pushf
jmp
lea
call
call
shl
call
jmp
jmp
mov
test
test
movb
pusha
lea
je
bt
sub
cmc
cmp
push
lea
ja
call
cmpb
jne
mov
xchg
fwait
xchg
mull
mov
subb
das
outsl
add
outsl
rcrb
inc
loope
int
mov
cmp
xchg
xchg
pushf
dec
repz
push
cli
or
arpl
xor
mov
adc
cmp
in
test
int
pop
stos
mov
cmpsl
or
cmp
xor
sbb
dec
aaa
mov
sbb
je
dec
imulb
xchg
dec
jne
push
add
push
inc
cmp
push
add
inc
xor
push
and
push
xor
movsl
ret
aas
repz
xchg
lods
pop
mov
jo
dec
aas
mov
scas
xchg
inc
rcr
lods
mov
jbe
xor
push
pop
jae
mov
lods
cmp
dec
sub
dec
sbb
insl
jp
dec
cmp
mov
xlat
adc
fldt
repz
movsb
stos
enter
testb
aaa
lods
push
mov
and
movsb
sahf
nop
ljmp
hlt
shlb
movsl
mov
inc
and
inc
adc
pushf
mov
cwtl
mov
push
orb
insb
decl
movb
inc
push
loop
or
xor
mov
lods
fdivs
in
mov
arpl
push
jmp
jns
mov
push
sbb
mov
xchg
and
fstpt
jg
push
es
ds
cmp
lcall
lcall
inc
inc
and
ja
pop
pop
icebp
incl
and
js
ss
add
add
aas
int
ss
decl
fs
call
pusha
mov
push
adc
pushf
call
jmp
mov
and
push
add
inc
cmp
inc
or
jo
dec
fnsave
pop
test
sbb
add
jno
fildll
popf
push
inc
sub
pushf
mov
sarb
xor
cs
add
jp
push
bound
cmc
fwait
negb
and
dec
ret
mov
ljmp
imul
loopne
mov
js
pushf
sarl
movsl
es
push
gs
cmpsb
push
call
xor
jp
dec
pop
jl,pt
je
dec
push
or
push
and
cli
add
fwait
push
rorl
lret
xchg
fcoml
sub
or
cli
lahf
mov
sub
push
dec
xor
cltd
lods
mov
mov
jns
xchg
mov
pop
test
hlt
mov
jl
xor
xor
insb
fisttpl
mov
add
add
sahf
jmp
cmp
add
add
xorb
stc
pop
mov
movsbw
sbb
push
call
mov
jmp
mov
dec
lea
jno
arpl
pop
arpl
jge
sub
je
ret
insb
push
xchg
int3
cltd
fwait
std
mov
jl
mov
daa
cmc
push
fldcw
sbb
js
mov
stos
jne
adc
jbe
fmuls
rolb
or
lods
cmpb
adc
cmp
sub
shl
dec
cltd
push
pop
cmp
ja
sub
mov
pop
inc
inc
ds
and
sbb
jb
dec
push
bt
cmc
add
pusha
clc
pushf
bt
test
pushl
pushf
lea
jne
call
pushl
sbb
push
jmp
adc
btr
mov
mov
push
cmp
pushf
test
sub
cmp
jmp
jmp
neg
mov
shld
xor
add
mov
pusha
btc
sub
bswap
bsr
sub
pushf
and
aas
aad
das
mov
movb
shl
bt
pushf
add
call
loopne
mov
int
fstpl
movsl
out
mov
cmc
mov
dec
push
ret
jbe
std
xchg
fnstenv
ret
sub
out
xorl
lds
adcl
mov
fsub
xchg
jae
leave
adc
insl
inc
icebp
adc
push
aad
aaa
test
inc
mov
daa
call
incb
fsubr
push
mov
mov
sbb
aad
xchg
lret
aad
leave
imul
shrb
xchg
pusha
movl
push
pusha
pushf
lea
jbe
push
push
pusha
lea
jmp
jmp
lea
je
stc
pusha
jmp
call
mov
mov
and
mov
lret
jmp
cmpsl
sub
dec
add
mov
push
xor
stos
lahf
ss
mov
mov
inc
aam
cwtl
mov
test
fcoms
jl
xchg
pushf
nop
lds
mov
lock
imul
fmuls
pause
out
test
sbb
test
shlb
pushf
loope
push
pop
fnsave
rolb
repnz
in
xor
and
push
test
pop
add
rcl
mov
cmpsl
jp
push
xor
sbb
std
inc
xlat
push
and
stc
xor
cmp
mov
out
movsl
inc
push
cmp
lea
inc
add
insl
aaa
xor
cmp
pop
sub
daa
push
fsts
pop
sbb
ss
bound
xchg
sbb
mov
scas
out
mov
and
data16
sbb
add
push
inc
or
push
iret
jp
xchg
outsl
out
cmp
rorb
jne
lds
xor
out
fnstenv
out
hlt
and
dec
inc
test
xor
lds
hlt
push
and
dec
jne
in
xor
xchg
dec
or
mov
xchg
ljmp
xchg
shlb
mov
shl
hlt
fistpll
sbb
shlb
std
iret
jmp
fwait
in
test
xlat
xor
idivl
mov
xor
jnp
sti
aaa
or
ret
cltd
add
pop
dec
mov
fs
lahf
jmp
xchg
arpl
sbb
ss
inc
push
fldcw
pop
mov
mov
cmpsl
outsl
push
bound
negb
ret
adc
dec
dec
push
cltd
or
gs
add
ljmp
loopne
jge
mov
and
test
nop
out
stos
clc
out
mov
ja
in
adc
out
lods
in
fwait
std
aam
cmp
sub
cmp
sub
das
mov
xchg
inc
mov
aas
shrb
inc
or
sahf
xor
mov
adc
movsb
loopne
test
aad
adc
loopne
adc
iret
les
fsubs
movsl
decb
stc
orb
arpl
fucomi
jl
add
jmp
jmp
add
push
scas
fs
and
lcall
push
movsb
mov
and
mov
clc
mov
xchg
flds
call
xor
jg
sub
xchg
inc
xlat
in
add
mov
sbb
inc
rcr
scas
mov
movsl
dec
testb
mov
insl
inc
lea
cmp
inc
insb
stos
les
pop
out
cwtl
jnp
pop
sbb
imul
punpckldq
inc
test
jb
inc
adc
jp
push
loopne
lret
dec
add
dec
inc
in
adc
call
out
push
mov
sahf
cld
mov
mov
xchg
pushf
in
dec
xchg
out
cmp
loop
out
pushl
xchg
dec
mov
sbb
lret
fldcw
daa
mov
or
fucom
inc
lds
or
lcall
fnstcw
outsl
push
mov
pop
bnd
aad
pop
cmovo
push
ja
out
mov
cmpsl
dec
xor
and
cs
mov
and
xor
adc
or
or
inc
pop
loope
jmp
fistl
adcb
inc
cld
fs
stos
shll
add
inc
or
xor
add
popf
dec
mov
mov
sbb
sbb
aas
aas
imul
ret
mov
pop
movsb
cmp
inc
dec
sub
lock
jg
mov
aad
mov
add
std
add
lcall
orb
xor
lcall
movsl
adc
rep
mov
fs
jb
test
cmp
jmp
mov
mov
movw
movb
pushf
pushl
ret
push
daa
aam
jne
into
mov
pushf
out
lret
loopne
cld
mov
out
outsb
inc
pop
lahf
sub
outsl
xchg
cmc
imul
insb
imul
push
cmp
xchg
rorb
jg
insb
mov
sbb
in
sbb
adc
or
xchg
or
ds
test
rol
outsb
jb
xchg
pushf
mov
mov
push
into
mov
cltd
xor
cmc
or
lds
bt
pushf
sub
pushf
call
mov
and
dec
pop
adc
popa
pop
insl
pop
inc
das
call
iret
lods
out
out
repz
shll
sbb
jg
inc
es
stos
shrl
and
inc
shll
sub
mov
pop
sbb
push
xor
adc
mov
incb
cmp
sub
adc
loope
es
adc
and
imul
aas
jle
je
jp
mov
and
push
cld
jg
mov
aas
push
xor
lea
jle
pushf
lea
call
pushf
lea
jb
or
push
setp
shl
movzbl
jmp
pushf
lea
call
pushf
movb
call
pop
xchg
jne
push
enter
fmuls
clc
mov
jmp
mov
cmp
imul
addr16
mov
xor
stos
add
push
push
add
js
or
push
jp
int
ljmp
inc
push
insb
sub
sbbl
je
int3
jbe
or
add
jl
jl
adc
and
sbb
add
inc
movsl
enter
xlat
xchg
lods
dec
call
repz
or
sub
outsl
xor
add
jne
cmp
pop
sbb
icebp
mov
mov
mov
xchg
int
xchg
daa
push
inc
inc
mov
fstpl
pop
xor
push
sbb
icebp
xchg
mov
add
mov
cmp
repnz
test
jno
pop
dec
xchg
popf
fwait
mov
xchg
dec
inc
adc
xor
inc
cmp
cmp
das
jge
jmp
test
xchg
mov
sbb
int3
mov
jecxz
cmpsl
push
mov
and
mov
mov
cltd
repz
in
dec
outsb
adc
test
fiaddl
scas
int
or
jnp
mov
roll
push
mov
xchg
pop
ret
mov
pop
lock
dec
and
jmp
lods
cmp
aad
mov
loop
arpl
push
das
cmp
outsl
sahf
loop
outsb
mov
imull
push
leave
out
jae
subb
sbb
stos
mov
xchg
out
pushf
mov
stos
loopne
lock
jmp
and
add
add
jmp
aaa
ds
jne
xlat
movsl
repz
xlat
movsl
fcmovnbe
xchg
mov
int
addr16
sbb
push
cld
mov
xchg
jae
xor
adc
sub
imul
dec
inc
dec
and
xlat
outsb
je
mov
dec
cmp
and
mov
scas
and
push
push
icebp
std
xchg
add
stos
loope
lds
icebp
sti
repnz
fs
or
jnp
addr16
inc
inc
aam
cmp
stos
test
dec
mulb
inc
sbb
test
aam
xlat
not
cld
bnd
inc
dec
nop
lcall
adc
fsubrs
mov
fldcw
dec
adc
jecxz
pusha
lret
cli
dec
hlt
cmp
aam
insl
jecxz
pop
sbb
xor
lods
out
pop
loope
out
dec
xchg
xor
lock
nop
iret
xor
dec
ss
rcr
xchg
and
ds
xchg
push
push
lea
jmp
pusha
mov
lea
call
pushf
cmp
mov
pusha
pusha
pushf
mov
pushf
movw
bt
jmp
push
js
mov
sbbl
das
aas
jecxz
fbld
cmpsb
int3
inc
or
and
data16
das
xor
mov
ss
xchg
sbb
lret
fcomi
repnz
inc
and
push
mov
sbb
push
test
into
jne
aas
dec
push
call
pop
mov
orl
jp
or
jae
and
mov
add
int
push
das
bound
adc
bound
jno,pn
add
subl
inc
pop
push
bt
test
sub
cwtl
pop
push
movzbl
lea
pushf
pushf
lea
call
pushf
clc
add
and
rol
aad
add
mov
shld
shld
btr
mov
bt
cmc
push
bt
cmp
pushf
pusha
push
jmp
push
lret
push
mov
mov
aam
lods
loop
out
hlt
mov
push
out
add
mov
xchg
repz
in
pop
add
xor
xor
add
cmc
lock
mov
pop
mov
dec
inc
int3
test
dec
jns
cmovge
nop
and
in
inc
add
adc
test
xchg
incl
out
scas
pushf
icebp
mov
scas
or
jp
xchg
loop
mov
mov
cwtl
out
xor
iret
mov
push
xor
xlat
ret
inc
loopne
xor
push
jmp
test
pushf
shl
bt
push
jmp
sbb
loopne
int3
mov
mov
cmpsb
loopne
rcr
mov
stos
pushl
cmc
pop
add
mov
push
push
or
mov
stos
jmp
lret
ret
in
stos
lahf
push
cmp
sti
jnp
and
xchg
ret
vmwrite
ja
pop
dec
stc
imul
cmc
mulb
push
fistl
std
inc
nop
je
jmp
data16
inc
or
icebp
push
pop
sbb
sbb
xor
and
xchg
jecxz
jno
add
mov
ffreep
call
call
shr
cmp
call
pushf
call
sarl
movsl
fwait
in
sti
in
xchg
mov
and
add
jg
in
xor
ret
dec
movsb
mov
xlat
loope
orl
aaa
add
dec
cmp
es
adc
xchg
stos
or
bound
cmp
sbb
sbb
lret
movsb
daa
push
imul
nop
pop
and
sbb
add
add
pop
pushf
decb
add
add
add
add
add
add
add
add
add
and
js
and
nop
sub
add
add
and
jae
popa
jb
imul
insb
insb
add
add
mov
outsl
mov
push
and
push
pop
dec
jg
daa
xor
aam
lcall
mov
xchg
pop
mov
add
fwait
das
pusha
sahf
lcall
pop
and
xor
das
jno
bound
insl
and
cmpb
pop
mov
pop
adc
or
adc
jbe
push
jge
and
jp
push
ret
int3
sub
jo
push
xchg
xor
jmp
jne
rolb
shrb
ret
dec
fsubp
lds
jae
xchg
lahf
daa
and
dec
pop
add
xchg
test
adc
into
push
mov
test
out
pop
jae
pop
imul
pushf
cmp
jg
mov
data16
lcall
nop
in
sahf
imul
in
out
lret
ss
and
stc
or
sub
mov
xchg
hlt
mov
stos
hlt
stos
xlat
shlb
loope
cmp
inc
pop
push
mov
add
push
mov
in
jne
gs
inc
adc
stc
xchg
sbb
xchg
pushf
inc
sti
mov
mov
bound
adc
jl
addb
adc
outsb
cmp
test
mull
mov
adc
ja
stos
in
mov
add
shll
pushf
or
mov
lea
je
jmp
lea
jne
bsf
adc
cmp
mov
movsbw
movsbw
mov
movzbw
bt
shrd
call
insl
icebp
sub
jne
ss
sub
data16
dec
adc
dec
or
xor
sub
arpl
cmp
jnp
push
setge
sbbl
inc
dec
fmul
aas
repnz
lods
cmp
lock
mov
pop
pop
sub
and
lret
jb
mov
scas
and
add
loopne
cmovg
add
and
mov
sbb
shrb
inc
adc
pop
sub
sub
inc
imul
add
mov
into
loope
jae
sar
sbb
setge
mov
lea
inc
mov
shr
mov
push
movb
xor
test
pusha
repnz
pusha
lea
jne
not
mov
neg
sub
sub
movzbl
mov
stc
pusha
cmp
bt
sub
cmp
pusha
pushl
popl
test
bt
cmp
jmp
jmp
cmp
jmp
movzbl
mov
lahf
push
pusha
movsbw
lea
pushf
call
aad
xor
mov
inc
sub
bsf
and
bswap
mov
pushl
cmc
cmc
shl
call
cmp
stc
bt
sub
stc
cmp
pusha
pushl
pusha
lea
jae
pushf
pusha
pushl
pushf
lea
jmp
push
mov
mov
stos
movb
mov
pushf
lea
jmp
call
call
ljmp
lock
cmpsb
pushf
mov
mov
cwtl
in
ljmp
jl
ja
push
push
inc
pop
stc
pop
data16
shlb
pop
pop
push
inc
cmp
or
sub
cwtl
mov
cmp
out
aaa
jmp
repnz
and
cli
xorb
push
and
dec
and
push
dec
in
and
daa
js
push
mov
jmp
push
lea
ja
pushf
pushf
mov
mov
lea
jmp
movw
mov
pushf
lea
jmp
lods
pop
lret
and
cmpsb
loopne
mov
cltd
or
mov
daa
push
jo
insl
bound
dec
or
mov
sub
jns
jl
inc
sbbb
cmp
xchg
xor
lods
rclb
movsl
lods
test
sub
jo
lds
mov
mov
xor
std
sbb
loope
jne
jg
jg
daa
imul
push
das
jno
ja
fnstcw
ret
call
jns
stos
and
lea
push
data16
push
int
sti
mov
jae
iret
jo
pop
sbb
and
cmp
imul
dec
cltd
mov
push
and
jg
sub
imul
adc
sub
push
stos
sub
gs
rorl
push
pop
and
pop
leave
andl
push
mov
stos
add
push
or
dec
and
js
add
dec
cmpsb
xchg
inc
mov
inc
inc
mov
dec
fdivp
and
inc
cmp
or
xchg
jmp
cmpl
das
push
sti
cmp
int3
popf
inc
mov
xchg
jmp
mov
mov
lahf
sbb
iret
enter
sub
rol
mov
fwait
mov
sub
mov
ret
add
and
xchg
sbb
dec
push
sub
mov
xchg
add
dec
jg
adc
ss
mov
test
shlb
rep
add
xor
dec
dec
call
rcrb
fsub
sub
out
adc
fwait
sahf
jl
notl
mov
movsl
imul
ret
rclb
insl
inc
lret
fs
fstpl
sub
insl
repnz
nop
dec
dec
cmp
fdiv
clc
iret
push
cwtl
mov
jecxz
je
mov
inc
jnp
stos
stos
pop
push
in
mov
mov
xchg
pop
mov
mov
inc
cmp
in
dec
movsl
mov
jb
push
int3
fstpt
or
repnz
mov
xchg
push
jle
lods
bound
xlat
jmp
out
push
pop
cltd
iret
popa
testb
es
mov
push
imul
fwait
dec
nop
movsb
inc
stc
xor
shll
mov
push
mov
pop
lret
cmpsb
mov
pop
xor
pop
xor
mov
cmp
loopne
int
dec
mov
xor
cmp
xor
xchg
orb
jle
sahf
jg
jge
mov
clc
sub
mov
lret
mov
mov
sub
inc
mov
dec
insb
xlat
ja,pn
testb
cwtl
pop
insl
inc
push
push
repz
aam
and
cmc
xor
add
fistpll
ffreep
lret
fisttpl
cmp
decl
lds
add
nop
test
push
sub
into
lods
shrl
jno
outsb
adc
jmp
push
in
cmpsl
mov
cmp
jl
lock
imul
mov
fidivl
lods
cltd
push
testl
sbb
lahf
into
jno
scas
jg
mov
shrb
xchg
imul
fistps
aam
cs
aad
xorb
add
mov
mov
icebp
cld
or
and
cmpb
neg
mov
cs
mov
and
subl
addl
jg
in
mov
add
or
data16
xlat
fistl
and
sahf
leave
push
into
adc
loop
rcrb
outsl
enter
jb
mov
mov
icebp
lods
xor
sub
icebp
dec
popf
mov
les
and
mov
mov
mov
or
xchg
jecxz
movsl
movsb
push
xor
addr16
xor
add
fisttps
dec
adc
nop
ss
ds
jmp
dec
ret
test
dec
incb
lret
xor
test
pop
sbb
inc
loop
das
test
outsl
mov
nop
into
bound
jo
and
dec
cmp
sub
push
xor
and
sbb
xor
dec
dec
bound
cmc
xchg
xchg
sbb
sub
cmp
sahf
mov
out
sub
aaa
sub
aad
mov
mov
mov
push
cmp
fildl
fbld
dec
pop
push
test
mov
jnp
in
add
pop
sbb
lock
leave
imul
jp
cmp
mov
sbb
cmp
call
dec
dec
jge
aas
cmp
lods
pushf
sbbl
sti
arpl
hlt
insb
fstps
mov
xor
outsb
mov
mov
clc
fdivl
jb
push
add
sub
bound
arpl
xor
test
pop
bound
push
pop
jae
push
idiv
frstor
push
out
popa
xor
add
jnp
int3
jno
popa
mov
cmp
orb
shlb
roll
pop
fadd
ret
rcrl
xchg
into
repz
addr16
ret
call
jecxz
pop
or
jo
adc
ret
shr
in
cli
or
mov
aas
ss
cwtl
dec
mov
and
enter
inc
push
ljmp
sub
in
enter
and
push
or
scas
adc
mov
mov
mov
js
dec
sbb
loope
sbb
test
imul
bound
negl
mov
mov
lock
and
or
shll
jp
stc
push
adc
out
pop
or
outsb
fmulp
dec
es
jno
mov
rcrl
dec
dec
adcb
dec
dec
call
adc
fiaddl
push
jbe
lods
jg
psllq
imul
maxps
test
cmp
stos
aaa
es
mov
xchg
push
stos
pushf
cmp
mov
lock
repz
xor
push
pop
inc
xchg
sub
cwtl
mov
cmp
cmp
pop
test
inc
pop
inc
push
movsl
into
shl
jl
inc
dec
lods
loopne
and
push
loopew
pop
cwtl
jns
xchg
adc
fdiv
sub
mov
jmp
clc
scas
dec
cs
inc
pop
cmc
cmp
rorb
jnp
mov
mov
xorl
mov
add
testl
sub
pop
out
leave
or
pop
shlb
sbb
testl
fisttpll
mov
aas
int3
repz
lods
repnz
vpmacssdd
mov
orb
call
movsl
dec
dec
xchg
sbbl
push
scas
push
pop
xor
mov
notl
sub
xor
add
xchg
mov
jae
sbb
aas
inc
jmp
packsswb
lock
fdivr
les
adc
icebp
lds
stos
daa
xor
or
sub
dec
mov
sahf
je
mov
fisttpl
push
arpl
add
jno
jmp
dec
and
jecxz
xchg
filds
in
add
and
xchg
out
pop
imul
pop
push
repnz
or
jno
mov
push
jo
rorb
cmp
dec
loop
je
shrb
sub
shll
adc
fcoml
sub
cmp
jbe
fidivrl
fadd
pop
cmp
dec
sbb
das
jne
das
es
sub
and
pop
jb
cmp
mov
cld
dec
mov
loopne
cmpsb
or
fisubs
les
ja
push
mov
enter
out
rcl
arpl
gs
inc
and
push
and
cmp
pop
dec
int
testb
sub
pop
cmp
ss
insb
js
imul
cltd
mov
enter
icebp
in
sub
sbb
and
mov
xor
nop
xchg
lods
inc
jns
fldcw
pop
cmp
pop
rdpmc
test
or
fs
daa
fidivrs
add
mov
jbe
pop
and
sbb
mov
pop
int3
cwtl
leave
call
out
es
cltd
jl
mov
pop
xchg
and
stc
push
and
mov
and
dec
jb
push
cmp
inc
dec
loop
imul
lock
fucomp
jmp
scas
gs
inc
mov
add
push
xor
loope
fcoml
jp
imul
outsb
adc
add
loopne
mov
lret
cmc
xchg
sub
mov
rolb
test
lret
cltd
or
push
aad
sub
sbb
inc
mov
sub
adc
inc
add
aad
xor
stos
and
out
repnz
das
mull
pop
add
repz
jp
enter
xchg
jmp
xchg
mov
pop
test
je
and
sbb
call
aam
mov
aam
stc
sub
icebp
push
out
jle
mov
fwait
rolb
inc
pusha
mov
test
lret
cmp
xor
pop
cmp
popa
fstl
mov
shlb
sbb
stos
icebp
xchg
cmpsb
mov
stc
shr
xor
mov
or
subb
adc
fidivs
mov
cli
daa
cmp
xor
sti
in
outsl
gs
aad
jae
add
sbb
orb
sbb
fdivl
sub
push
sub
pop
cmp
jle,pt
sbb
sub
adc
lahf
sbb
push
popa
xchg
jne
jl
scas
rol
sahf
inc
fstp
push
push
repnz
mov
cs
push
and
imulb
jo
sub
cmc
adc
pop
xchg
cmp
cmp
jae
adc
xor
jns
repz
xchg
movsl
mov
mov
pop
mov
sbb
arpl
mov
push
cmp
popa
adc
pop
mov
cmp
mov
mov
pop
inc
mov
push
mov
je
dec
fs
push
icebp
xor
scas
xchg
scas
push
and
insl
faddp
fucomp
les
cmp
es
push
inc
lods
jns
sbb
inc
clc
popa
sbbb
dec
push
inc
scas
imul
clc
lret
nop
pop
sbb
dec
leave
mov
test
sub
inc
dec
ret
lods
jno
bound
lcall
in
ret
loop
pop
out
xchg
cld
jo
and
push
je
push
mov
cmp
insl
mov
dec
inc
and
add
mov
jle
pop
sar
or
out
push
std
and
xchg
xchg
adc
out
cwtl
mov
insl
aam
xor
gs
stc
adcl
mov
push
mov
pushf
cmp
stc
sbb
fcmovne
sti
hlt
fs
cmp
sub
adc
xor
call
arpl
fldl
sti
adcl
les
xor
or
jae
dec
pop
and
xchg
fstl
mov
adc
or
je
mov
sub
jae
mov
xor
lcall
fistl
jnp
shlb
enter
movsb
push
xor
scas
jb
mov
pop
loopne
mov
push
adc
pop
outsl
subl
hlt
jge
mov
xchg
je
pop
pop
cli
cmp
mov
sub
test
xor
pop
in
fcmovne
sbb
jmp
leave
mov
mov
sub
scas
add
jmp
scas
test
mov
sbb
or
cli
pusha
leave
jge
jo
repz
jg
lods
cli
mov
pushf
je
push
jle
dec
and
popa
sti
xchg
aad
mov
cmp
xchg
inc
mov
cmpsb
add
mov
mov
aam
mov
jp
mov
mov
imul
xchg
repz
push
sbb
jbe
lret
negb
push
add
cmpsl
pop
insb
nop
xchg
cwtl
cmpsl
cmp
fisubrs
stos
push
flds
in
push
subb
addr16
icebp
inc
mov
dec
xor
sub
fidivrl
xlat
cld
sbb
jno
aam
into
out
adc
stos
lock
cmpsb
sbb
stos
in
mov
pop
jne
icebp
jecxz
loop
scas
lcall
mov
les
sbb
pop
call
xchg
push
lds
mov
jmp
xor
or
mov
jnp
sbb
je
jp
mov
out
xchg
aas
call
in
popf
xchg
inc
or
shrl
mov
adc
insb
pop
sarl
push
add
cmp
lds
inc
mov
imul
or
or
imul
lcall
or
icebp
into
add
add
jnp
repz
jno
stos
int3
xor
xchg
sbb
xchg
into
je
imul
cmc
popf
gs
in
cld
jbe
std
imul
mov
mov
xor
mov
fidivrl
or
push
repnz
icebp
xchg
cld
fstps
addr16
sbb
mov
mov
add
or
push
inc
sub
pop
movsb
fwait
mov
sti
lret
ds
clc
mov
mov
data16
cmp
lcall
mov
dec
mov
in
inc
jp
push
punpcklwd
cltd
and
ljmp
or
jne
data16
or
inc
jg
mov
adc
in
sarb
outsb
arpl
mov
es
lods
jmp
scas
cli
dec
sahf
mov
xor
adc
fldl
leave
mov
addr16
sbb
aaa
repnz
dec
jl
int
test
jle
dec
test
gs
sbb
loop
daa
mov
jge
repnz
sti
enter
dec
cmpsb
add
jo
lret
add
stc
push
imul
daa
scas
ret
lds
pop
add
cmp
jbe
outsl
sub
mov
daa
push
leave
push
dec
mov
loopne
aam
mov
ss
pusha
xchg
adc
jmp
xchg
adc
jne
clc
shl
in
jle
or
cltd
cmc
jnp
or
sti
lock
shrb
jl
mov
enter
xchg
jbe
aad
pop
fs
push
lahf
xchg
mov
inc
out
xor
mov
leave
nop
inc
fcoml
xchg
rorl
nop
adc
ret
call
loop
mov
add
nop
mov
push
aaa
jle
pop
pop
adc
xchg
cmp
mov
push
dec
mov
cmp
es
inc
cmp
mov
dec
xchg
jp
or
imulb
out
cmpsl
arpl
es
je
hlt
das
ss
movsb
mov
push
in
push
repnz
std
mov
sar
imul
lret
movsl
add
xor
push
xchg
cmp
mov
es
pop
cwtl
negb
xor
xchg
adc
jne
bound
or
jg
adc
sbb
mov
mov
mov
jge
outsb
out
push
insb
and
adc
or
dec
in
mov
sub
add
push
lods
cmc
mov
mov
int3
xor
int3
push
inc
jae
and
push
mov
aam
mov
push
cli
adc
leave
xchg
rcrl
scas
jns
add
ror
sbb
and
sbb
dec
mov
push
std
jo
pop
test
xor
imul
jp
push
lods
fsts
and
stc
xchg
shll
adc
sub
push
ljmp
push
add
xor
lret
lods
push
fidivs
neg
test
dec
mov
scas
jae
jmp
addl
std
mov
mov
fsubp
or
push
push
out
sbb
mov
sub
and
pushf
dec
jmp
popf
or
lock
and
jp
popf
testb
call
push
pop
inc
bound
imul
push
jge
ror
ljmp
inc
mov
adc
lea
fwait
lcall
adc
cltd
movsl
ljmp
in
loop
je
movsl
mov
fnstenv
dec
add
inc
pop
jo
aam
outsb
cmpsb
movsl
mov
js
sahf
aad
add
bound
xor
push
hlt
loopne
inc
inc
jecxz
js
mov
in
sub
in
jnp
js
mov
fmull
out
and
test
inc
or
cli
mov
inc
decb
outsb
xor
push
push
mov
ficompl
imul
addb
and
push
shlb
pop
js
push
sbb
sbbb
lods
xchg
les
into
nop
sbb
mov
jnp
jbe
pop
outsb
jns
hlt
pop
jmp
add
mov
dec
sub
aas
and
mov
mov
and
jo
dec
pop
mov
xor
inc
cli
add
fs
mov
shll
fiaddl
stos
adc
sub
outsl
lret
stos
dec
movsb
icebp
pop
sbb
inc
test
lea
addr16
and
aam
ljmp
stos
daa
sub
mov
out
mov
jle
aad
sbb
into
subb
and
out
xchg
jmp
je
jmp
xor
std
or
enter
mov
pop
pop
stos
and
call
popa
cmpsb
jecxz
shll
jae
idivl
xchg
mov
pop
or
das
mov
mov
push
jno
mov
jmp
fwait
cmp
pop
pop
stos
lods
xor
add
test
jbe
lea
mov
jle
scas
mov
cmp
jle
add
and
cmp
or
sub
aad
cld
aaa
push
popa
cmpsl
fbld
mov
jb
ret
mov
cmp
lea
mov
push
loop
adc
insb
cmpsl
loop
dec
rorb
inc
push
jmp
shlb
add
inc
sub
sub
mov
cwtl
stos
adc
jmp
pushf
inc
in
cmp
not
or
fndisi(8087
fstpt
sbb
sub
dec
jae
xorb
lahf
fwait
dec
push
lret
lods
mov
mov
xchg
sti
fistps
cmp
lcall
out
in
daa
mov
cwtl
gs
test
sub
sub
subb
jmp
dec
ret
popa
pop
stos
sbb
or
lods
idiv
clc
scas
rcrb
stc
sub
rclb
push
xchg
addl
ja
push
stos
in
stos
loopne
xor
cmp
roll
push
mov
sub
or
push
or
repz
clc
push
xchg
xchg
in
ja
dec
push
mul
pop
scas
jge
push
and
push
shrb
cmc
stos
xor
pusha
inc
data16
leave
ja
xor
out
data16
rol
xchg
xlat
ds
xor
mov
shrb
outsb
enter
out
cmpsl
cmpsb
add
les
xor
xor
jp
cmpsb
mov
fmul
push
lret
popf
movsl
fxch
sbb
mov
stos
enter
add
mov
jmp
fdivrs
sbbb
push
mov
fcoms
out
adc
mov
stos
lret
dec
cmp
xor
cmp
fwait
pop
sub
mov
xorl
xchg
in
rolb
push
cmp
cmp
pop
sbb
pop
pop
mov
les
insl
addr16
cmpb
test
insb
fiadds
dec
push
xor
outsl
pushl
xchg
mov
xor
jae
in
sbbb
inc
jle
cmp
roll
lock
jp
lods
add
int
dec
pop
into
popa
jae
into
fstpt
inc
adcl
sarb
loopne
xor
xchg
mov
mov
or
pop
xor
mov
cltd
mov
dec
pusha
push
scas
and
dec
cmpsl
outsb
ret
sbb
dec
out
dec
mov
stos
xchg
faddl
imul
cmp
mov
mov
jnp
mov
ds
pop
mov
inc
inc
pop
inc
aaa
mov
ret
loop
fwait
add
jae
jno
ror
jnp
xchg
and
xchg
xchg
pop
adc
fidivrl
xor
jne
jl
dec
xor
pusha
or
sub
push
pop
add
fstl
adc
test
cld
inc
dec
fwait
adc
pop
sbb
pop
and
push
cmp
mov
adc
into
lea
les
out
xchg
hlt
mov
into
inc
cmpsl
jo
bound
pushf
mov
cmpsb
jb
mov
jnp
or
xlat
or
pop
and
add
and
je
xlat
jae
push
je
inc
mov
insb
adc
jg
cmpb
pop
jbe
pop
add
mov
ret
inc
aam
dec
loop
cwtl
test
push
fwait
lret
pop
jl
loopne
es
ret
pop
xchg
inc
add
insb
outsb
push
jnp
add
outsl
mov
test
movl
jg
sub
dec
sub
fwait
aas
mov
inc
dec
jmp
lret
sahf
jp
inc
or
push
pop
roll
mov
cs
mov
shll
ds
dec
or
push
push
addb
hlt
mov
sbb
arpl
xor
cmp
cli
ja
out
daa
jle
insl
popf
xor
inc
mov
mov
jns
lds
inc
sbb
or
pop
out
lret
sbb
fs
pop
fbld
arpl
iret
or
and
adc
sti
and
fildl
push
sbbb
jmp
testl
lahf
cmp
pop
push
pusha
inc
xchg
fdivrs
mov
push
test
testb
add
cli
scas
adc
xlat
add
jae
out
jb
repnz
sub
pop
pop
hlt
neg
fwait
or
sub
mov
mov
out
aaa
xor
push
push
push
int3
das
test
aam
cld
in
mov
pusha
add
call
call
lods
dec
dec
cmp
outsl
dec
icebp
aas
loop
ljmp
push
and
ficoml
dec
push
mov
mov
and
or
lcall
sub
jmp
mov
inc
popa
ja
fimull
xor
inc
mov
mov
xchg
jnp
mov
adc
pop
push
or
pop
repz
cmp
inc
mov
dec
or
xor
sbb
adc
adc
adc
or
cmpsb
mov
lods
lret
scas
loopne
sbb
push
fsubrl
inc
aam
sbb
xor
mov
adc
adc
xchg
xchg
xchg
mov
dec
sbb
jecxz
insl
repz
loopne
push
jno
ret
sub
mov
pushf
add
pop
push
outsb
xor
sarl
mov
out
inc
cmp
test
dec
inc
pop
xor
pop
dec
popf
testb
shlb
dec
jb
insl
push
bound
mov
fildl
xlat
xor
cmp
stos
pusha
pop
addr16
pop
fstpt
jge
gs
out
mov
popf
daa
js
fisttpl
arpl
mov
xchg
jl
and
ja
fisubrs
clc
daa
sbb
pop
inc
or
popa
jne
dec
fnstsw
fisttps
dec
push
xchg
lock
and
mov
nop
pop
xchg
or
push
fwait
inc
mov
lret
or
mov
mov
xchg
dec
add
sarl
mov
mov
mov
cs
mov
mov
jo
mov
loopne
xor
jl
lock
dec
insl
jo
gs
hlt
sti
sahf
pushf
lcall
insl
push
or
rcl
dec
push
insb
stos
cmpsb
xchg
cmpsl
cwtl
shl
add
cmc
por
push
sub
ljmp
mov
or
fidivrs
jbe
cltd
xchg
mov
scas
sub
xchg
cmc
fdivs
push
add
in
jg
push
push
nop
shlb
es
ja
push
pusha
lret
adc
push
mov
or
aas
lea
in
bound
mov
mov
fistl
stc
jno
pop
out
sbb
pop
cmp
mov
hlt
mov
add
gs
lods
mov
or
mov
mov
cli
xor
scas
xchg
cld
add
push
and
and
dec
xchg
roll
aaa
movsl
ss
sbb
outsb
push
adc
daa
mov
cmp
pop
cmp
push
scas
jmp
push
test
daa
les
js
xor
loope
lods
sbb
xchg
or
lcall
mov
pusha
adc
mov
inc
test
xchg
out
and
pop
add
das
lods
jl
jae
fadds
test
pop
pop
and
ret
mov
jnp
inc
out
test
mov
or
and
mov
mov
cltd
adc
adc
mov
fnstsw
add
push
mov
jl
xchg
cmp
jnp
push
mov
cmpsb
pushf
cmp
test
outsb
cmp
xlat
push
push
mov
push
mov
dec
nop
mov
mov
lcall
cmp
insl
pop
inc
lock
mov
mov
sbb
ds
jecxz
pushf
push
and
loop
xor
movsl
xchg
iret
xchg
add
add
or
or
xorl
xor
fnstcw
mov
pause
jle
shlb
out
dec
pop
jge
aas
sub
popa
shll
mov
jmp
movsl
push
hlt
outsb
sub
or
and
das
pop
in
jmp
pop
ret
xchg
push
add
sti
movsl
addl
mov
and
mov
lods
inc
or
mov
ja
mov
or
push
and
pop
aam
fstl
mov
jg
sti
mov
jo
add
mov
sti
mov
adc
ss
or
mov
mov
jle
out
jne
jp
out
pop
push
inc
xchg
sub
xor
int
fs
push
dec
add
mov
aaa
mov
aaa
addr16
lds
cmpb
xchg
movsl
outsb
sahf
enter
test
adc
das
addb
push
jae
ret
test
arpl
rorb
int
outsl
lcall
addr16
pop
test
enter
outsb
inc
fwait
jb
or
lea
push
add
xchg
xor
sbb
lcall
test
daa
cmpsb
mov
sbb
xor
ja
jp
or
or
or
xlat
je
cmc
pop
xor
sub
jg
push
jmp
pop
and
insl
xor
xchg
in
test
pushf
push
mov
and
cs
rol
repz
aam
jae
inc
jns
and
sbb
ljmp
in
sbb
xchg
jle
insl
mov
xor
fwait
xchg
jg
nop
test
inc
mov
sbb
lret
xchg
cmp
add
xor
sub
jbe
repz
push
add
jno
rorl
shrl
fwait
outsb
inc
movsbl
addl
sub
adc
fcos
fimuls
jecxz
mov
and
rcrl
xlat
mov
mov
jl
mov
pop
mov
rcll
adc
pop
aas
and
mov
cwtl
daa
xchg
cmp
adc
hlt
xchg
xchg
roll
push
mulps
fs
push
mov
cmp
jg
push
leave
aam
or
pop
nop
lahf
popl
dec
scas
push
fcmovnu
jmp
jp
test
cmp
dec
pop
ret
push
push
in
or
loope
lahf
jg
rclb
je
addl
xchg
sub
mov
fwait
lock
mov
jno
fwait
pop
ss
fistl
insb
jnp
pop
push
dec
adc
sahf
push
jno
iret
cwtl
xor
lret
gs
test
stos
out
out
sahf
mov
mov
fistpll
jmp
addr16
fnstcw
add
sti
mov
add
sahf
lcall
iret
jp
mov
lock
xorl
mov
in
mov
cmc
in
adc
or
sub
mov
dec
cmp
jbe
or
int3
sbb
test
push
sub
adc
pop
test
aam
adc
js
cmp
shll
xor
push
mov
inc
nop
pushf
stc
setnp
sub
xchg
into
sbb
js
jmp
pop
outsl
lret
pop
push
push
jns
jmp
jns
lret
lds
hlt
fldl
hlt
mov
ret
and
pop
xchg
lea
dec
sti
or
std
fdivs
or
imul
call
jecxz
sbb
sub
mov
push
pop
mov
in
setg
shl
cmc
inc
shlb
adc
mov
imul
movsl
aas
rcll
mov
cmp
lcall
xchg
dec
rclb
imul
ljmp
push
dec
jne
mov
or
outsb
sbb
and
xchg
pushf
xor
push
rorb
jl
hlt
or
jg
or
movsb
push
push
or
mov
add
ret
outsl
xchg
cmc
jge
cmp
int
les
and
loopne
arpl
insl
mov
xor
into
popf
xchg
mov
mov
enter
test
pop
dec
pushf
sbb
in
movsb
ss
stos
nop
cmc
addl
addb
mov
repnz
push
xchg
push
test
out
insl
int
pop
movsb
pop
fiadds
aad
jne
movsb
and
mov
scas
insb
xor
sti
jnp
xor
mov
mov
aaa
mov
push
dec
mov
sub
mov
sbb
pushf
push
and
outsl
enter
jb
stos
pop
pop
aad
lods
or
or
mov
ljmp
mov
jno
in
ss
mov
popa
mov
push
repz
lcall
lret
or
jg
lret
sbb
pop
pusha
cmp
loopne
push
mov
mov
ja
aas
ss
or
out
scas
cld
mov
inc
movl
mov
cwtl
dec
ret
xchg
ljmp
add
rcll
xor
clc
mov
loopne
jge
xchg
scas
or
sbb
add
jns
inc
sub
jbe
add
xor
or
inc
repz
fadds
mov
xchg
call
mov
mov
call
sub
jecxz
inc
sub
adc
inc
in
loope
and
xchg
lret
push
or
cmc
xchg
sarl
rcl
push
push
pop
or
mov
cs
aam
xor
js
push
movsb
sub
lds
das
adc
mov
and
subl
push
ja
sti
push
arpl
dec
in
pusha
push
lret
movsb
dec
push
outsl
inc
cwtl
and
xchg
mov
xchg
je
push
sbbl
test
cmp
xor
sti
repnz
cmpsb
gs
or
jns
js
push
or
mov
data16
shrl
js
subb
cmp
sahf
mov
sahf
das
xchg
jp
subl
nop
adc
jbe
imul
mov
dec
rcrb
xchg
popa
stos
jge
pop
cmp
lret
inc
jl
xchg
movsl
push
cmp
cmp
scas
js
movb
stos
in
mov
sbb
popf
enter
mov
sub
jno
xchg
jb
push
insl
daa
sub
adc
jo
inc
mov
fdivrp
jecxz
add
fsubs
push
subb
or
or
in
push
imul
mov
jbe
sub
sbb
scas
arpl
lds
mov
mov
push
inc
cmp
test
ss
inc
jne
int3
inc
daa
arpl
sbb
cmp
imulb
xchg
lret
iret
adc
sbb
sbb
jns
sbb
mov
fs
xchg
fidivrs
mov
jae
cltd
xchg
out
fisubrl
std
mov
pushf
add
and
outsb
fists
push
push
mov
int3
xorl
orl
push
add
dec
and
mov
lahf
test
movsl
or
stc
inc
notl
push
mov
lahf
mov
or
jae
pop
shrb
mov
out
and
fldt
xchg
sti
add
je
adc
jmp
inc
neg
test
mov
pusha
xlat
adc
inc
jbe
mov
or
int
out
ret
rolb
mov
lret
dec
sbb
push
fildl
cmp
mov
cmp
fwait
pop
mov
cld
clc
popa
sbb
scas
pop
inc
mov
jp
cmpb
cs
aas
stos
aaa
jp
or
clc
movsl
into
jmp
dec
sub
jl
daa
mov
jno
cmp
mov
neg
adc
lock
aad
and
pop
jecxz
popf
rolb
pop
cmpsb
xor
push
in
adc
les
outsb
mov
push
iret
push
je
ret
pushf
das
push
out
roll
cmp
pushl
sbb
lret
jno
pop
pusha
mov
repz
sbb
add
cmp
popf
ficompl
movsl
jp
pop
aaa
sbb
jbe
mov
mov
mov
xchg
xor
cmpl
fcoml
insb
jnp
add
sub
stos
push
cmp
outsb
aas
sub
sbb
loope
pushl
jge
pop
jmp
dec
daa
nop
rep
mov
sub
mov
push
dec
jp
out
xchg
xchg
or
dec
and
fisubl
movsw
push
pop
loope
pop
loopne
imul
push
mov
andl
sbb
mov
or
imul
sub
xor
and
je
lods
sbb
in
inc
mov
es
aad
push
in
leave
mov
mov
fprem
mov
lock
mov
iret
xor
in
out
mov
andb
scas
jo
dec
or
insb
cmp
adc
ficomps
lahf
data16
decb
jge
imul
mov
repnz
sbb
mov
in
and
inc
sbb
jns
jg
mov
scas
outsl
inc
scas
and
lahf
push
pop
mov
mov
pop
gs
sbb
insb
test
jg
dec
cld
push
sarl
and
sub
gs
dec
add
mull
in
push
cmpsl
mov
push
mov
inc
xchg
sbb
iret
repz
fstp
mov
aad
ret
das
xchg
jne
fstl
add
push
pop
adcb
add
scas
adc
dec
gs
stos
and
xor
fidivrl
imul
xor
stos
jecxz
aam
mov
lret
andb
mov
and
add
pop
loope
pop
cli
ret
push
aas
mov
mov
and
jmp
xlat
mov
push
xor
jmp
lret
pop
push
imul
and
mov
inc
inc
stc
add
ror
rolb
cmp
lds
xchg
cli
hlt
cmp
jo
jns
mov
in
test
addr16
jne
jmp
xchg
mov
adcl
mov
add
adc
jns
test
push
adc
pop
jl
mov
packssdw
jo
loop
jne
or
ret
push
xchg
cmp
and
sub
dec
das
and
std
cmp
fwait
jns
pop
jno
push
mov
in
adc
jmp
mov
lea
mov
dec
xchg
cmp
sar
xchg
cmp
xlat
fbld
inc
aad
cmp
jae
adc
lods
jge
outsb
repz
inc
and
test
pusha
sbb
pop
jae
es
and
add
lea
xlat
bound
in
mov
push
dec
sahf
xchg
addb
ror
sbb
movsb
or
dec
mov
mov
pop
call
shl
cmpb
std
pop
divl
xor
sub
fnstenv
gs
and
test
lds
jne
cmp
rcl
push
fstps
cmpsb
in
out
incb
or
out
xchg
lcall
jns
testl
jns
das
fsts
xchg
cmp
mov
pop
inc
mov
mov
adcl
mov
inc
mov
ret
dec
cli
mov
mov
mov
ja
stc
in
call
pushf
cmp
inc
mov
pop
fbld
movups
jmp
inc
pop
clc
mov
fistl
sub
or
mov
test
repnz
adc
ljmp
jns
movsb
ds
cmp
mov
pop
in
xor
outsl
in
fldenv
popf
xor
cmc
jl
fisttps
cmp
and
inc
mov
push
ss
mov
and
add
pop
cmpsb
nop
mov
call
lea
lock
in
xchg
inc
ret
stc
sbb
push
mov
clc
inc
push
pop
inc
adc
rcll
mov
arpl
in
ja
mov
loope
pop
xchg
jle
div
fstps
dec
cli
and
jne
mov
add
dec
fsubrs
mov
inc
push
jl
or
inc
push
dec
outsl
nop
push
or
ss
sahf
sub
cltd
rcrl
insl
scas
mov
insl
cmpsb
std
cmpsl
in
or
sbb
ficompl
incl
fstpt
adc
pop
cmpsb
jl
call
adcl
pop
mov
sti
outsb
jge
test
xor
lea
in
ljmp
cmp
xchg
xchg
popf
jp
and
rcrb
rcr
fimuls
inc
ffree
sahf
mov
fistps
rcrb
nop
clc
ret
inc
jb
cmpsb
hlt
cmp
lahf
sti
mov
mov
das
cmp
xor
adc
push
lahf
cmp
or
pusha
add
push
popa
inc
pop
inc
outsb
out
lods
inc
and
jg
ret
inc
popa
lret
and
dec
fsubp
adc
mov
mov
stos
shrb
std
int3
es
mov
cltd
push
icebp
cli
sub
mov
lods
cmp
negl
cmovg
pop
adc
mov
repnz
push
fdivrl
jns
scas
js
mov
mov
stc
and
and
lcall
push
and
xchg
imul
movsl
scas
mov
fisttpl
jle
jl
js
pop
mov
inc
adc
pop
addr16
fnstcw
in
cmp
adc
xor
jns
cli
addl
sarb
jnp
fisubl
into
lods
ds
xor
mov
dec
aaa
add
jae
testb
lret
ss
pop
sub
inc
dec
fnsave
dec
mov
mov
or
sbb
xchg
pop
dec
sbb
cmpsl
jmp
jmp
rorb
pop
adc
or
xchg
jno
and
pop
popf
add
inc
xchg
ja
in
notl
fs
leave
pusha
dec
cmp
xor
jmp
mov
ret
stos
dec
mov
js
dec
lods
shr
int
notb
add
repz
ret
ret
pop
and
fisubl
adc
mov
mov
lfs
dec
stos
xchg
sbb
xor
sbb
out
lahf
jo
lahf
sbbl
adcl
cmp
jne
stos
mov
mov
pop
sbb
jns
lea
dec
rcr
cmp
fistl
sbb
cmp
add
clc
xchg
cmp
mov
fwait
xchg
and
jnp
jbe
mov
test
mov
enter
jp
cs
hlt
lea
cld
sahf
pop
jg
xchg
pop
xor
jmp
xchg
sahf
mul
adc
dec
adc
adc
adc
shl
xchg
or
scas
cmpsl
call
cmp
push
loopne
inc
out
cmp
or
jno,pn
cli
and
pusha
jbe
pop
inc
xchg
iret
pop
xchg
push
adc
add
fmuls
xorb
push
in
movsl
adc
mov
sub
decb
cs
je
dec
cmp
inc
insl
bsf
movsb
mov
cmp
inc
inc
stos
push
push
cltd
ficompl
cwtl
jecxz
repz
adc
pusha
dec
mov
pushw
out
push
in
addr16
xchg
out
jne
mov
cmp
pop
dec
push
jno
imul
stos
sub
test
scas
scas
aaa
sub
lret
dec
pop
cmp
xor
dec
mov
sbbb
pop
push
cmp
jle
les
or
add
outsb
and
jbe
popf
stos
jl,pt
movsl
scas
lcall
mov
xor
in
mov
jp
add
push
push
mov
pushf
push
and
sti
ficompl
in
mov
int3
xor
insb
mov
inc
push
stos
test
pop
pop
jle
ljmp
add
in
arpl
in
push
outsl
jl
push
vpaddw
mov
in
fimuls
mov
ret
and
xorl
add
lret
cmp
out
cmpb
iret
push
or
jge
cltd
call
imul
xor
mov
xor
pop
stc
mov
add
inc
xchg
pusha
sub
mov
or
xlat
call
push
sub
pop
xlat
jp
imul
lcall
in
enter
adc
icebp
stc
mov
xchg
and
push
in
loop
inc
jne
lea
push
push
imul
push
test
pushw
lret
adc
xor
ja
cmc
or
add
dec
pop
ret
test
shrb
xor
loopne
ret
inc
cmpsb
jl
adc
jle
inc
sub
jne
aas
adc
das
in
aaa
jbe
adc
in
rolb
pop
je
cmp
push
and
xor
mov
in
shlb
push
push
pop
mov
out
xor
xor
push
and
insb
addr16
stc
lods
push
mov
add
pushf
das
ss
xorl
pop
enter
mov
fisubrl
fidivs
test
xchg
sbb
inc
dec
pop
jecxz
test
lcall
cltd
rcrl
repz
inc
adc
gs
sub
pop
inc
jmp
adc
jne
andl
cmp
fnstcw
jnp
repnz
adc
insb
push
sub
jecxz
push
stc
pop
inc
sbb
pushf
lret
fidivrl
jo
andb
cltd
adc
xor
shrb
jbe
out
call
scas
ficoml
adc
out
push
mov
inc
or
and
jbe
scas
mov
ljmp
xchg
pop
subb
lret
push
test
test
mov
xchg
aad
mov
push
jns
enter
inc
jg
mov
xchg
add
and
jp
xchg
pusha
xor
bswap
pusha
jae
xchg
xor
test
mov
mov
clc
mov
loopne
pop
ret
or
mov
out
aam
add
out
xchg
mov
aas
iret
cmp
adc
loope
test
gs
dec
shll
enter
adc
cmp
cwtl
and
or
add
cmpsb
inc
jmp
ljmp
and
cld
mov
cmpsb
add
lea
lods
fwait
pop
jg
int
dec
aad
adc
sbb
mov
lds
jmp
shll
mov
dec
inc
mov
bound
jnp
sbb
lea
shl
mov
add
ror
cli
dec
mov
inc
insl
lahf
mov
jb
cmp
inc
push
inc
jmp
dec
pusha
inc
push
mov
rdpmc
repnz
insb
xor
xchg
jns
stos
xchg
or
pusha
jle
mov
xor
and
les
movsb
mov
shll
push
cmp
pop
sbb
mov
mov
push
out
sub
xchg
rorl
adc
in
lret
jno
push
dec
sub
jo
and
leave
out
notb
lret
jp
push
jbe
jp
test
ret
dec
pop
leave
pop
jmp
insl
mov
mov
lret
andb
jp
adc
jl
add
sbb
push
out
adc
xchg
iret
cld
mov
fcomps
xchg
cmp
jbe
xchg
popa
insb
outsb
daa
popf
icebp
fbld
ss
push
dec
bound
cwtl
cmp
repz
fdivl
adcl
or
cld
movsl
insl
js
sbb
jp
mov
mov
scas
or
jno
stos
adc
adc
pushl
insl
sub
ret
sahf
test
imul
daa
lahf
test
shrb
mov
xchg
and
ljmp
xor
into
dec
in
push
mov
cmp
push
dec
xchg
lret
mov
shll
orb
dec
stc
fdiv
mov
jmp
sbb
inc
mov
xor
cmc
int3
lret
push
pusha
jae
push
xchg
sub
lret
test
sbb
mulb
pop
xchg
dec
call
cmp
fldt
rorb
gs
xor
or
stos
rcrl
mov
rclb
xchg
xor
imul
fistpl
pop
pop
add
shlb
xlat
aam
clc
cmpsl
jmp
add
sbb
xor
outsl
roll
jb
outsl
mov
repz
in
xlat
cmpsb
out
fidivs
xor
xchg
mov
mov
mov
mov
movsl
adc
mov
hlt
mov
test
cmpl
and
loopne
pop
sbb
mov
popf
aas
adc
pop
imul
push
sbb
inc
loopne
jae
shlb
sub
dec
lds
fldenv
push
cs
in
mov
push
pop
cld
push
push
add
inc
fs
xchg
or
nop
test
cmp
jp
into
jae
push
pusha
inc
movaps
lock
xchg
push
dec
push
cmpsl
xor
aaa
sub
inc
je
xor
and
lahf
test
aad
pop
outsb
jl
pop
sub
push
dec
nop
test
sbb
addl
mov
je
or
mov
std
loop
orl
imul
nop
pop
or
sbb
inc
inc
fwait
cli
icebp
add
roll
push
adc
jp
inc
inc
dec
jbe
test
lcall
sub
xor
sti
jmp
stc
add
mov
leave
stc
mov
test
xor
adc
inc
mov
mov
out
cs
dec
mov
mov
jo
test
shlb
pushf
cmp
cs
mov
adc
es
cli
rcrb
jl
insb
fnstenv
dec
adc
xchg
mov
xchg
push
cmp
jae
cwtl
dec
ljmp
inc
in
jo
lret
test
cmp
sar
jb
mov
cmc
insl
xor
mov
cmp
nop
rep
add
sbb
out
cmc
mov
in
idivb
scas
jg
xlat
adc
dec
or
in
mov
push
ljmp
lahf
dec
xor
or
jae
or
in
pop
mov
push
lahf
mov
mov
push
das
rclb
rcr
xchg
mov
push
mov
pop
aaa
sub
jb
and
jmp
cmp
leave
fsts
fstpt
or
xor
mov
adc
fdivl
loope
in
cmp
fwait
cmpsb
out
adc
mov
push
aad
dec
fisubs
ss
xlat
sbb
pusha
jp
jl
daa
repz
xchg
mov
popf
test
adc
hlt
popa
cmc
icebp
cmpsl
push
cmp
gs
pop
inc
pop
ljmp
sarl
sub
and
fucomi
roll
push
inc
cld
fwait
pop
dec
movsl
add
out
mov
insb
jae
notb
sub
inc
mov
mov
jecxz
leave
xchg
repz
xor
xor
enter
mov
xchg
or
loope
push
addr16
cs
rclb
cmp
push
lods
sub
sub
pop
repnz
lret
mov
push
push
push
sbb
mov
add
lods
cs
loope
xchg
lcall
xchg
daa
stos
mov
push
sub
fisttps
pop
sbb
push
roll
mov
push
pop
xchg
mov
sub
xor
out
inc
sub
mov
sub
cmpsb
xchg
popa
and
out
dec
es
data16
push
lock
sub
adc
cmp
or
and
add
lea
xchg
out
in
or
out
mov
sbb
fnstcw
ret
xor
sbb
daa
aad
orb
loop
popa
rcll
lret
int
or
fistl
out
sub
or
divl
xchg
jnp
mov
rcl
sahf
je
add
push
fnstsw
std
push
cmpsb
push
fnstsw
repnz
pop
sbb
push
push
sub
xor
daa
mov
dec
mov
push
xchg
inc
sub
aad
incl
mov
xor
outsb
sbb
iret
cmp
int
dec
lret
inc
pop
or
push
cmp
stc
test
push
test
adc
arpl
insl
pop
lahf
iret
clc
sub
notb
xor
adc
cwtl
add
dec
push
icebp
or
xor
jne
push
and
rorl
xchg
stc
dec
gs
shlb
nop
or
scas
inc
sbb
dec
sahf
loope
pop
insl
push
nop
mov
rcll
imul
mov
cmp
daa
in
out
inc
mov
scas
add
loopne
es
mov
mov
imul
sub
jne
or
inc
mov
pop
adc
in
sbb
jnp
rorl
lock
xchg
ja
mov
test
fstpt
imul
pop
jl
push
fdivrl
xchg
cmpb
lret
jne
pop
sub
imul
dec
jmp
hlt
stc
push
pop
dec
andb
std
inc
mov
cmp
inc
lea
lret
test
in
popf
insl
in
fnsetpm(287
cmp
mov
rol
andl
out
in
lahf
pop
xchg
xor
sub
mov
fwait
rcll
stos
ja
pop
insb
call
jne
jge
pop
jno
xor
xchg
ss
pushf
icebp
inc
push
cmp
dec
inc
push
sub
jnp
push
pop
lds
add
ret
idivb
faddp
jecxz
inc
movsl
sub
popa
shlb
aas
ret
les
jno
pop
clc
hlt
shll
stos
xchg
or
jl
daa
insl
or
add
sbb
pop
ja
outsl
pusha
add
addl
cwtl
mov
xchg
int3
sbb
sbb
xchg
xchg
mov
movsb
xchg
jbe
scas
sbb
or
pop
outsl
cmp
dec
push
sbb
lret
mov
and
int
push
mov
daa
pop
ljmp
jl
jp
hlt
pusha
inc
xor
push
mov
dec
inc
pop
rorl
ljmp
in
dec
jae
ficoml
fdivrl
ret
aaa
std
and
stos
dec
fsubrl
imul
lock
insl
sbb
mov
rcr
or
pop
mov
lahf
stos
xchg
aad
xor
lret
adc
mov
loope
mov
push
movsl
mov
sbb
in
dec
sbbb
pop
fwait
pop
xchg
inc
arpl
test
add
xor
cmp
jbe
test
xlat
cmpsb
call
rorl
push
fwait
inc
or
xchg
cmp
loop
xor
sub
mov
jno
cmp
test
xor
and
out
push
idivl
in
in
xchg
pop
cld
push
or
xor
xchg
mov
push
pop
fucom
iret
xchg
mov
lret
and
xchg
aam
pop
lret
adc
sahf
hlt
adc
and
jmp
rcrl
fldpi
cmc
scas
call
movl
mov
sbb
pushf
iret
insl
fstpl
sub
std
push
pop
nop
aad
push
inc
jnp
mov
clc
mov
cmp
and
mov
loop
rorb
xlat
imul
add
test
orb
lcall
icebp
stc
dec
jnp
stos
inc
fwait
daa
mov
mov
push
pop
iret
xchg
mov
stos
xchg
test
add
pop
push
cmp
lods
xchg
ret
inc
test
daa
push
lock
lea
mov
fcomi
dec
dec
dec
sub
mov
mov
mov
add
insl
sti
lahf
jb
scas
lods
add
pushf
test
test
out
js
pushf
sub
cli
xor
jle
cmp
mov
cmp
std
xchg
mov
lock
push
imul
mov
lock
lock
mov
fdivs
lcall
or
mov
int
pop
sbb
pusha
push
pop
sbb
stc
std
xchg
mov
iret
in
sbb
and
add
daa
dec
jbe
int3
sarb
sub
jp
and
push
sub
cmp
bnd
mov
inc
add
mov
ljmp
test
add
stos
adc
inc
jnp
data16
fldcw
into
into
mov
out
or
sahf
ss
cs
pop
inc
jl
pushf
movsl
stos
js
push
sbb
and
or
adc
sbb
mov
jne
xchg
jbe
test
adc
movsl
iretw
push
adc
sub
inc
into
hlt
push
jecxz
mov
inc
adc
xor
orb
jne
lods
cld
iret
pop
sub
pusha
stc
mov
icebp
inc
or
sbb
mov
jl
add
call
in
hlt
fsubp
rcrb
rol
push
int3
mov
inc
mov
xchg
outsb
lahf
pop
iret
aaa
or
jp
ret
adc
cmp
push
or
icebp
xor
jbe
xchg
or
movsb
pop
add
mulb
dec
ljmp
mov
mov
sarb
xor
scas
jl
and
mov
shll
pop
jno
lret
cmp
leave
sbb
scas
in
fdivr
and
out
movsl
mov
xchg
mov
int3
jl
and
leave
mov
mov
popa
adc
sbb
rcll
icebp
mov
addr16
sub
neg
mov
ja
sti
pushf
xor
aad
imul
pop
sub
js
fistpl
and
jmp
or
inc
inc
and
icebp
xor
icebp
mov
mov
nop
cld
icebp
pop
insl
outsb
push
in
add
pop
cmc
push
pop
pushf
shll
addr16
mov
or
pusha
outsl
shlb
xchg
add
les
jge
mov
jmp
mov
jno
mov
push
xchg
or
mov
or
xchg
lods
mov
jle
jne
mov
in
mov
lods
mov
xchg
gs
add
into
push
cmp
push
arpl
jle
ss
cltd
pop
jae
pop
push
push
xchg
and
inc
lahf
subb
sahf
ljmp
arpl
imulb
subl
push
and
xlat
adc
xchg
repz
repz
push
dec
leave
int3
sub
jecxz
xor
or
sbb
hlt
daa
lods
add
mov
pop
or
sbb
repnz
jbe
push
decl
inc
ljmp
rcrb
push
std
adc
out
shrb
in
push
cmp
ja
pop
iret
and
push
call
push
inc
pop
mov
mov
mov
jmp
push
push
lret
cmpsb
lcall
aas
frstor
ljmp
pop
cltd
lock
or
das
inc
in
or
clc
inc
xchg
inc
je
cmp
xor
scas
sbb
icebp
inc
mov
out
push
mov
sbb
stos
xchg
sbbb
and
lret
xchg
add
hlt
paddusw
aaa
mov
xchg
fstl
push
jl
adc
mov
ret
int
in
testl
rclb
jl
xchg
push
movsb
xor
push
mov
out
pop
mov
lret
push
addb
mov
cmp
jns
int3
nop
iret
push
push
sahf
testl
cmp
jo
popf
push
pop
shrb
in
imul
xchg
out
inc
pop
jle
sahf
add
adc
xchg
cli
push
push
das
mov
inc
cmp
push
pop
jnp
je
sti
sub
or
sbb
fldt
fadds
arpl
jmp
add
fwait
aaa
imulb
scas
dec
insb
dec
xchg
sub
pop
fwait
loope
imul
push
cmp
jae
out
mov
test
dec
test
lea
lods
in
pop
jl
inc
add
imul
add
mov
int
or
xchg
cmpb
in
out
cmp
pop
push
jle
and
mov
std
sbb
push
mov
jnp
aas
mov
add
mov
push
sub
jne
insb
jo
mov
pop
lods
cli
aam
iret
cmp
xor
std
mov
pop
daa
and
sub
pop
in
fwait
enter
in
or
sbb
add
jns
test
push
mov
and
inc
cld
test
sarb
loope
cmp
mov
pushf
cmp
fidivl
sub
ja
out
fwait
test
cmpb
pop
mov
js
popf
ja
xchg
or
sbb
loope
in
xchg
mov
push
hlt
outsb
add
adc
lods
pop
insl
pop
pop
movsb
ss
sub
nop
cmp
clc
cmp
ljmp
arpl
xchg
xchg
insl
cli
clc
fadds
add
jle
imull
out
pop
push
aas
arpl
ret
pop
pop
les
pop
loope
lea
stos
inc
cmpsb
add
or
fidivl
in
fsubl
push
pusha
ja
leave
mov
test
cmp
sub
sbb
mov
out
bound
stc
sub
stc
lret
sub
mov
xor
mov
lcall
xchg
push
inc
jae
xchg
pop
dec
pop
cmp
shrl
inc
adc
mov
shlb
lcall
aaa
pop
loope
sub
divb
ds
movsl
fisubl
repz
xor
out
and
aam
jbe
clc
sbb
lcall
dec
negb
sahf
in
lock
notl
sahf
enter
dec
add
cli
and
test
jge
push
add
adc
xchg
mov
lahf
daa
or
inc
shrl
out
push
int
add
fidivs
mov
cs
mov
mov
xchg
popa
dec
sbbb
cwtl
and
push
gs
out
xchg
mov
pop
cmp
mov
subb
loop
imul
sbb
jns
sub
aaa
jne
icebp
mov
cmp
and
adc
data16
cmc
xchg
repz
sti
xor
xchg
ret
sbb
inc
adc
dec
mov
sahf
data16
xchg
and
mov
int3
insl
add
cmp
push
das
fsubrs
add
packssdw
inc
stos
pop
sub
arpl
cld
jmp
inc
ljmp
lea
jae
jle
cmp
cmp
fucom
stos
jmp
lret
repz
jo
and
gs
jl
loopne
enter
mov
testl
xor
cmp
mov
push
sti
rep
mov
jo
inc
adc
fldt
leave
cmc
stos
lret
push
pop
insl
push
dec
sub
mov
or
mov
mov
shl
cli
es
lods
pop
in
in
xchg
pushf
fucomi
and
roll
sti
je
or
adc
sub
mov
ficomps
sub
mov
pop
and
fldt
jbe
mov
or
in
add
dec
inc
inc
cmp
cmp
inc
sbb
insl
shll
lcall
jne
stos
xor
rolb
jb
imulb
mov
pop
jbe
sbbl
sbb
lods
cmpl
fnstsw
ja
mov
stos
mov
cs
sbb
mov
popf
jnp
stos
cmp
xchg
inc
outsl
ret
pop
ficompl
mov
push
cwtl
mov
xchg
dec
lret
arpl
jo
push
shl
negb
jno
pushf
jae
jmp
push
test
dec
jecxz
pop
push
add
mov
repz
xchg
pop
pop
in
push
add
in
dec
je
cmp
xchg
xlat
pushf
xchg
add
cmp
cmp
jecxz
hlt
aam
adcl
dec
mov
pop
mov
sbb
cmp
aaa
rorb
jno
icebp
std
aaa
add
subl
pop
popa
cmpsl
hlt
rclb
xchg
fimuls
jmp
jle
push
dec
rcr
jp
sub
mov
in
int
je
call
fldl
mov
adc
mov
rcr
xor
push
pop
sub
int
stos
sub
push
inc
shlb
test
fdivrl
imul
or
cmp
sub
xchg
xor
mov
jp
fdivrs
out
jno
cwtl
push
mov
mov
lods
sbb
pop
std
and
xor
imul
in
xor
icebp
or
xchg
pop
mov
fldl
adc
cs
push
ret
sbb
cltd
cmp
adc
sarb
int
call
xchg
mov
mov
mov
dec
dec
movsl
cli
jnp
sbb
ret
lds
xchg
int3
in
xchg
rcrb
ljmp
lahf
push
movsl
xchg
push
test
icebp
mov
dec
sbb
fdiv
mov
or
or
push
dec
push
mov
inc
loopne
mov
int
insb
push
cld
jo
xor
lret
push
loope
pop
cmpsl
cmp
cltd
mov
cpuid
push
iret
jecxz
mov
xchg
unpckhps
dec
sar
orps
repz
inc
jge
mov
aaa
adc
lock
sbb
cld
jg
jge
pop
out
or
movsl
mov
xlat
pusha
adc
adc
push
push
int3
pop
in
add
leave
pop
inc
sub
mov
push
sarb
pop
sahf
insb
adc
sarl
jbe
mov
outsl
jb
scas
inc
pop
mov
inc
mov
push
add
push
inc
addr16
xor
push
dec
push
aad
sbb
into
push
mov
pop
mov
icebp
adc
push
mov
inc
or
cmpsb
add
push
scas
jg
xchg
mov
sub
stc
clc
ret
outsl
ret
sub
test
mov
mov
sbb
cmc
int
jo
sti
sbb
xlat
ret
std
and
inc
push
addr16
xor
das
mov
shrb
aad
inc
and
push
insb
xor
hlt
jbe
int
sub
push
adcb
addr16
cld
mov
push
decl
xor
cmc
or
into
mov
test
shr
je
ret
aam
in
add
pop
push
add
pop
add
push
ret
fisttps
mov
addb
js
aad
outsl
das
es
int3
pop
fstps
in
or
sub
xorl
dec
adc
in
jmp
iret
cmpsl
cmp
push
pop
xor
inc
push
push
not
daa
mov
dec
mov
adc
cli
inc
push
lock
hlt
int
sub
sar
int3
xchg
in
in
jge
mov
in
sub
lret
sar
ret
lods
fisubrl
popf
into
mov
cwtl
jl
dec
mov
int3
dec
cmp
out
jmp
adc
ljmp
jle
int
clc
sub
and
pop
loope
dec
or
dec
jl
nop
out
jmp
inc
xorb
out
imul
cwtl
mov
jmp
lds
mov
mov
rorb
add
mov
cmp
push
pop
mov
mov
add
scas
jo
lods
jle
in
je
mov
xchg
orb
lret
sahf
das
cmpsb
loopne
lret
ds
in
in
outsb
out
mov
addl
les
test
mov
jl
mov
cmp
pop
mov
lock
and
and
fidivrs
mov
jecxz
es
jl
dec
nop
sub
mov
aam
xor
das
shrb
sub
leave
push
idivl
dec
int
orb
mov
adc
inc
andb
xorb
call
dec
rclb
shrb
push
mov
jno
icebp
cmp
sbb
cwtl
inc
sbb
popa
inc
out
out
stos
in
ficoms
xchg
jae
into
mov
xor
data16
jp
in
ret
movsl
mov
dec
mov
and
enter
in
lret
push
dec
aam
or
ds
enter
mov
ljmp
push
mov
pop
push
and
popa
out
adc
cmpsl
fwait
and
stos
xchg
xor
xchg
ss
out
or
aaa
push
test
insb
cmp
adc
enter
in
into
inc
iret
cwtd
xor
xlat
or
pop
movsl
dec
inc
out
mov
push
and
mov
mov
xchg
shlb
push
dec
cmpsb
jb
dec
push
cli
mov
and
iret
jne
addl
dec
lcall
cltd
jp
popa
cmpsb
and
iret
dec
mov
adc
stc
sbb
daa
fidivrs
push
inc
cmp
sub
mov
jae
ss
clc
inc
xchg
dec
insb
sub
mov
add
xor
into
dec
rclb
shlb
cmp
test
cli
mov
pop
sub
shr
out
sbb
jno
adc
cmp
vmovaps
mov
popa
push
mov
mov
mov
push
sub
xor
fincstp
push
cmpsb
xchg
add
das
mov
insb
push
mull
loopne
fldcw
dec
out
pop
pop
jmp
mov
adc
pop
ret
xchg
es
cwtl
mov
sbb
adc
inc
cmpsb
cs
fsub
xchg
push
and
jns
repz
bound
jne
popa
sub
cli
cmpsl
lock
mov
sub
in
iret
incl
xchg
push
xlat
sarl
sub
jnp
push
cld
lahf
arpl
or
test
out
jle
jg
xor
js
jge
sub
push
fldenv
incl
int
push
es
je,pt
pop
dec
hlt
and
sub
mov
shl
clc
xor
roll
inc
scas
or
jmp
or
or
lret
add
and
roll
jl
xchg
dec
movsb
xor
push
pop
add
push
sarb
xchg
into
gs
mov
mov
add
sbb
pushf
cmp
or
outsb
iret
out
addb
leave
dec
cmpsl
test
aam
pop
out
rcl
insb
push
addr16
scas
or
lret
dec
push
xchg
xor
sub
orb
mov
daa
in
adc
pop
jecxz
jmp
mov
outsl
sub
out
or
mov
xchg
outsb
cmp
push
je
xchg
out
sbb
jmp
mul
test
inc
int
loopne
adc
xchg
sbb
xor
mov
out
dec
xor
sti
mov
sti
inc
outsb
jecxz
pop
scas
push
mov
imul
out
or
popa
popa
cmp
mov
or
movsb
outsl
and
aaa
and
dec
in
rcl
or
push
sbbl
jno
pushf
data16
pop
lods
lds
into
inc
xor
js
and
std
in
push
orb
in
mov
insb
jle
cmp
mov
loopne
inc
push
orl
inc
repnz
jne
aas
out
mov
xor
outsl
sub
sub
sahf
mov
es
call
in
and
cmc
fninit
jecxz
and
sahf
jbe
adc
mov
stos
cmpsb
pop
jmp
and
mov
mov
ljmp
and
fsubr
sti
mov
jmp
xlat
add
mov
sbb
outsb
xchg
lds
xchg
xor
sub
mov
pushf
cmpsl
jo
lret
mov
xor
add
gs
ss
mov
inc
out
testb
or
outsl
fisubrl
mov
out
or
inc
cmp
outsb
dec
lods
jns
mov
jmp
mov
enter
or
or
repz
fsubrl
gs
addb
sbb
jmp
movsb
or
fwait
push
mov
rorl
lea
das
and
sub
xchg
nop
mov
adc
fcomps
mov
adc
imul
cltd
into
mov
lahf
aad
xchg
jns
insl
les
inc
sbb
sub
rcrl
sub
mov
leave
aas
add
repz
fnstcw
fs
sbbl
adc
cmp
out
mov
sub
jb
clc
ficompl
or
sbb
or
jae
mov
mov
pop
jl
aad
fldenv
adc
out
inc
inc
inc
pop
jg
inc
lods
aaa
mov
lods
aas
int3
inc
xchg
fstpt
pop
lods
add
dec
daa
cmp
jae
sub
sub
inc
out
ss
add
mov
sbb
loopne
icebp
mov
into
mov
sub
fwait
jns
lret
movsl
addr16
outsb
std
jge
add
lahf
test
sub
cmp
cli
push
and
xor
xor
fs
xchg
cltd
sub
lea
sarb
sub
into
fcmovnbe
imul
leave
mov
scas
jge
std
mov
add
and
pop
jle
jg
jb
jp
imul
pop
xchg
push
and
xchg
shll
adc
xor
mov
cmp
in
movsb
xchg
mov
mov
icebp
sbb
pop
iret
cmp
xor
pop
push
orb
lock
xchg
loop
int
fiaddl
push
mov
imul
pop
outsb
shrl
cltd
push
stos
sar
negl
xor
sbb
into
jnp
popf
add
pop
pop
out
test
mov
insb
inc
pop
mov
jecxz
inc
out
imul
inc
imul
je
in
shlb
div
aam
daa
push
cmp
push
xor
cmp
sub
mov
jae
jb
cmp
cld
je,pt
sbb
out
push
aaa
pushf
cmp
lea
out
push
mov
cmp
jge
popf
sub
gs
xor
pop
mov
mov
lahf
mov
push
cmp
aam
es
jo
mov
mov
ja
scas
adcl
repnz
lods
repnz
jle
push
pop
sarl
inc
out
inc
jns
add
mov
push
not
fstps
std
lods
bswap
test
fiadds
icebp
lret
sbb
jnp
in
test
inc
addr16
jge
mov
sub
jp
adc
out
jo
outsl
jb
or
mov
sbb
or
xor
sbb
cmpsl
aad
inc
sub
jge
movsl
or
push
mov
xchg
cli
aad
pop
push
jo,pt
pop
and
mov
xchg
mov
out
dec
iret
insl
in
test
stc
cmp
negl
or
shll
pop
pop
out
mov
sub
push
stos
sbb
aad
movsb
jae
xor
push
nop
cwtl
sar
nop
ficomps
cmp
xor
inc
shrb
icebp
adc
xchg
cs
xlat
mov
cltd
mov
xchg
mov
push
dec
push
inc
call
cltd
jge
mov
shlb
roll
mov
cmp
sbb
dec
add
push
pop
mov
fisubs
inc
and
insl
cwtl
cwtl
test
loop
add
scas
sbb
mull
and
pop
jg
call
in
inc
mov
jl
lcall
xchg
dec
xchg
sub
jns
loop
fmull
imul
mov
ror
jle
or
out
adc
mov
mov
pop
pop
or
cmp
out
dec
jns
mov
add
push
push
fs
sbb
mov
adc
mov
stos
cmpsb
stos
add
imull
sti
mov
jae
in
ret
xor
lret
xchg
rcrb
inc
mov
mov
or
ss
or
mov
push
fwait
imul
sbb
adc
mov
sbb
hlt
enter
dec
mov
inc
add
mov
jb
sub
dec
out
mov
cmp
or
in
ljmp
lea
shrb
in
rcl
inc
fildl
sti
lock
out
fmul
lods
popf
iret
mov
or
movsl
xchg
push
nop
xchg
dec
insl
xlat
lods
cmpsl
cs
cmp
jmp
fisttps
shrl
popf
xor
or
mov
mov
and
leave
cmp
adc
mov
gs
aad
cmc
mov
mov
jle
les
xchg
fwait
mov
sub
lods
faddp
stc
jnp
mov
push
mov
lea
mov
and
ret
jnp
shrb
insl
and
cmc
jge
add
jae
or
sbb
xlat
add
adc
cmc
push
bound
lahf
or
scas
and
in
sarl
adc
or
inc
paddd
popa
xor
cmp
outsl
enter
ja
push
imul
in
ja
loopne
cwtl
jmp
mov
lret
inc
rcll
xor
out
adc
adc
sbb
les
neg
push
add
jecxz
ds
ret
mov
mov
fdiv
cmpsb
lahf
mov
pop
arpl
lea
push
jo
inc
inc
cmp
shll
pusha
shll
lods
lds
movsl
adc
pop
mov
mov
xor
adc
enter
mov
push
inc
mov
mov
fdivrp
in
into
arpl
movsb
outsl
sar
pop
push
pop
pop
icebp
test
sbb
pop
jp
or
divl
pop
jne
pop
pop
rol
inc
push
pop
jmp
gs
cmp
and
mov
or
pop
ja
fists
aad
jae
mov
mov
test
jne
aad
sbb
push
loopne
es
cmp
xchg
shlb
xor
call
push
jnp
mov
test
ss
out
jmp
mov
data16
mov
inc
cli
fstl
jbe
and
add
js
cs
mov
fnsave
mov
dec
in
push
scas
jle
add
call
inc
push
pop
lahf
inc
xor
call
aas
pop
in
daa
lcall
js
insb
fisttpl
dec
sub
or
sti
das
add
and
mov
dec
xlat
push
les
clc
icebp
add
mov
adcl
mov
jg
test
jne
ss
sbb
hlt
add
inc
pop
mov
pop
or
ljmp
xchg
cld
dec
push
pop
jns
mov
stc
mov
pop
add
int
push
dec
push
push
add
outsl
pop
mov
insb
jp
xchg
pop
test
bound
pop
fnstsw
pop
cmp
sbb
test
cmpl
int3
push
scas
sbb
cmp
mov
push
data16
push
jl
push
or
test
mov
fimuls
mov
cli
repnz
adc
lret
fimull
das
push
and
xor
cwtl
and
cmp
add
jmp
mov
jb
inc
inc
xchg
sarl
fstpt
cmp
jmp
or
aas
cmc
jne
mov
repz
cwtl
dec
loop
xor
jle
push
mulb
test
neg
ja
out
sbb
jge
pop
outsl
mov
pop
adc
lcall
sarb
subb
mov
fs
lods
jae
loop
out
int3
aas
and
aam
rclb
mov
out
roll
lret
and
outsl
out
mov
and
or
adc
mov
popf
push
cmp
pusha
cld
cmp
dec
sbb
jg
sbb
inc
pop
in
cmc
stos
fbstp
xchg
mov
adc
ret
and
fstl
aam
repnz
scas
mov
xchg
inc
mov
fistl
cmp
sbb
ljmp
fs
call
std
cs
enter
pop
pusha
xchg
fmull
out
test
push
or
fidivrs
xchg
pop
das
out
pop
jbe
hlt
push
and
jnp
sub
lret
or
out
lcall
monitor
lock
pop
ficoml
loop
dec
push
xchg
xchg
add
dec
sub
cmp
inc
push
mov
mov
lret
pop
adcb
aaa
jo
rcll
sub
push
dec
adc
test
es
mov
pop
sub
xor
lods
bound
xlat
jns
aam
xlat
xchg
ret
es
xor
cmp
cmc
dec
adc
cwtl
iret
jae
aam
ret
ja
test
dec
mov
inc
add
rcrl
and
push
in
xlat
js
lret
icebp
pop
das
mov
push
mov
pop
dec
out
cld
lahf
sbb
lcall
pop
sbb
adc
aas
daa
sahf
mov
imul
rcll
and
aas
call
push
aam
nop
pop
jmp
pop
xchg
lret
inc
mov
pop
push
inc
inc
dec
mov
and
clc
add
mov
dec
or
inc
out
fldcw
ret
mov
sub
push
cmp
clc
lods
inc
or
scas
movsb
adc
or
pop
inc
mov
mov
shrb
dec
fldenv
pop
xchg
sub
jb
mov
test
or
fisubl
in
cli
in
outsl
ret
jmp
out
xor
lret
xchg
push
f2xm1
icebp
gs
push
inc
cmp
add
and
push
mov
push
test
call
sbb
adc
inc
xchg
mov
mov
jge
jmp
xchg
and
or
fildll
push
dec
xchg
jnp
xor
jecxz
cmp
scas
jmp
popf
movsb
mov
test
in
imul
cmp
push
das
cmp
or
test
ret
mov
sub
mov
lret
and
sbb
jge
rcll
hlt
pop
and
adc
cli
adc
lea
pop
insb
or
dec
popa
stc
js
into
stc
fcomps
fistps
sbb
push
mov
jmp
push
ret
sbb
adc
ret
jo
out
lds
test
jecxz
loope
test
sbb
adc
push
xor
cmpsl
scas
xchg
ljmp
and
cmp
or
cld
pop
out
sbb
and
nop
push
aaa
push
lods
and
pop
rcr
popf
cmpb
dec
mov
jge
sbb
inc
bnd
add
or
inc
das
cmpsb
sbb
in
push
lock
or
sbb
xorb
mov
and
das
and
fdivl
push
imul
push
and
jl
or
xchg
stc
pop
mov
mov
jbe
icebp
iret
sub
and
lahf
adc
stos
inc
and
out
mov
mov
jae
popf
out
sub
rol
cmp
movsb
sarl
hlt
dec
mov
dec
imul
push
sahf
ret
lahf
jae
mov
pop
mov
inc
iret
xchg
mov
insl
orb
push
sub
icebp
cli
aam
xor
sbb
mov
cwtl
pop
jb
dec
sub
jb
mov
add
imulb
dec
push
dec
outsb
shll
jno
inc
push
call
inc
push
leave
adc
mov
xor
sub
push
js
inc
and
pop
mov
mov
mov
rcrl
dec
cltd
repz
mov
aam
and
inc
and
xchg
mov
pushf
out
ja
loop
sbb
push
test
cmp
inc
imulb
fidivl
loop
hlt
mov
cmp
mov
fstpl
or
popf
subb
mov
insw
mov
ret
jno
into
add
insb
jp
arpl
in
adc
scas
jl
sbb
mov
movsb
lret
or
in
call
test
mov
xor
sahf
mov
fnsave
ds
push
or
mov
jns
jmp
data16
inc
add
push
mov
pusha
movsb
push
loop
lock
and
mov
dec
jge
out
sbb
ret
adc
ds
adc
lods
ja
aas
test
rcll
pop
jge
adcl
sbb
imul
add
jmp
imul
xchg
stc
sbb
xor
and
test
jns
inc
pop
push
jb
push
or
dec
andl
test
mov
sub
ja
sahf
mov
and
sub
or
cmp
lods
pushf
xchg
mov
xchg
fidivl
cmp
mov
jg
lods
push
repnz
push
mov
mov
sub
fsubrs
aaa
inc
pusha
xchg
adc
jns
cltd
lret
pop
popf
out
dec
in
insl
or
fnstenv
xor
outsl
push
jbe
xchg
rcr
dec
pusha
push
sahf
push
cmp
idiv
pop
cmc
lods
stc
inc
mov
pop
jmp
push
sbb
in
mov
ds
dec
push
test
mov
cmpsb
mov
adc
rolb
push
stc
add
lret
pop
push
sti
negl
mov
data16
out
adc
push
add
mov
sahf
notl
xchg
xchg
add
xor
dec
cmpsl
or
test
cmc
jecxz
sub
and
push
lret
cld
sarb
cld
cs
dec
pop
addr16
lock
or
int3
jns
dec
inc
fst
add
int3
sub
jg
mov
dec
xchg
in
data16
les
int3
addb
addl
pop
fistl
cmpsl
pop
mov
mov
nop
ret
into
repnz
orl
aad
shll
xor
add
jno
leave
ss
xor
and
arpl
jno
insl
ja
dec
push
pop
jle
mov
shll
cmp
lods
aas
incl
mov
dec
cltd
scas
xchg
std
pop
pushf
in
rorl
or
and
mov
nop
outsb
cmpsl
mov
sbbl
push
jbe
arpl
cmp
add
dec
mov
mov
inc
ficompl
pop
mov
mov
movsb
insl
cmp
sbb
or
mov
or
add
push
das
das
cmp
sub
sbb
subb
inc
mov
js
dec
jge
sahf
jbe
jg
mov
fldenv
dec
cwtl
mov
fs
mov
adc
dec
imul
mov
loop
mov
out
mov
stos
mov
shrb
and
mov
sub
mov
inc
and
fsubr
orl
pop
cmpsl
mov
icebp
fcmovnbe
xchg
add
push
lock
ljmp
jne
push
dec
jae
cmpsb
lods
rcrl
adc
and
xlat
ss
imul
xor
call
in
hlt
nop
pop
int3
les
mov
mov
mov
shll
lock
enter
add
cmpsb
addr16
sbb
cmp
fsubr
jp
inc
and
lahf
in
jmp
lret
mov
imul
pop
sbb
sbb
fldcw
inc
push
scas
jne
push
cmp
jge
mov
notb
cmpsb
lods
dec
lret
jbe
dec
aaa
mov
cld
in
sbb
es
test
push
loop
subl
xchg
adc
imul
sub
iret
add
jp
xchg
sub
jecxz
cmpl
dec
xchg
and
mov
jmp
jl
cld
gs
cmc
add
faddp
inc
aad
movsl
addl
outsb
outsb
jns
mov
pop
cltd
jo
stc
push
mov
jnp
ljmp
in
shll
stos
jp
inc
pop
dec
sub
xchg
mov
sbb
in
test
push
fists
adc
ret
data16
pop
push
iret
das
mov
mov
addr16
addr16
sub
cmp
push
mov
push
lds
xor
add
xor
mov
daa
mov
sub
push
xchg
test
mov
shrb
loop
cmp
cmpsl
xor
icebp
mov
xlat
and
dec
or
pop
mov
dec
mov
ss
pop
mov
lods
sbb
sub
xchg
or
add
adc
fcompl
jns
test
jns
adc
inc
push
loopne
and
sbb
int3
jg
pop
push
fisubl
push
pop
inc
inc
mov
push
pop
pop
cmp
test
sub
push
outsl
cmp
test
mov
dec
gs
jg
push
addr16
add
test
out
popa
push
stc
xchg
xchg
outsl
les
jg
push
mov
jmp
cmpsb
or
cli
jno
pop
js
movsb
ret
lock
xchg
cmp
fs
fldcw
test
pop
neg
jecxz
dec
mov
in
cmp
mov
hlt
mov
pop
cmp
inc
inc
jp
mov
mov
popa
sbbb
sahf
int3
jo
or
mov
jbe
mov
outsb
or
cmp
jae
test
mov
pop
xchg
iret
or
stos
out
les
out
mov
stos
pop
ret
xor
push
add
mov
dec
pop
mov
mov
out
push
or
cmp
lds
sub
jo
jo
aas
aad
and
or
std
cltd
sbb
mov
ds
xchg
lods
mov
sub
in
adc
inc
test
lea
mov
jno
fxch
cmp
test
and
fs
fldt
out
inc
hlt
jno
sbb
dec
dec
dec
mov
rcrl
mov
movsb
adc
xchg
insl
inc
xlat
pop
sbb
push
jne
cmc
in
jbe
mov
push
clc
inc
xor
shrl
dec
jge
out
cmp
ja
adc
pop
jecxz
sub
jg
dec
sbb
push
insl
pop
ds
cmp
mov
push
or
movsl
pusha
inc
fisubrl
sbb
sbb
int
scas
push
pop
pop
pop
ljmp
cmp
pop
xor
arpl
mov
fnsave
jge
mov
jns
jle
fnstenv
and
sbb
loopne
loop
mov
cmp
bound
and
aam
pusha
sub
movsb
push
rcrl
shll
pop
fidivs
ds
in
fwait
dec
bound
add
jnp
sarl
lock
adc
sarb
ret
ss
cmp
loopne
cli
xchg
scas
cmp
sbb
mov
pop
cmp
inc
jo
mov
and
call
call
mov
arpl
imul
xor
mov
mov
les
lea
fsubl
ljmp
dec
cmp
jle
lds
fsubrs
or
scas
dec
xchg
cmp
insl
mov
out
dec
ds
popf
pushf
cmp
cmpsl
mov
lret
in
movb
inc
loop
les
inc
dec
push
or
push
mov
mov
fistps
lret
test
rclb
lret
shlb
dec
fldenv
xchg
mov
sahf
shlw
mov
cmc
xchg
add
jg
jo
mov
icebp
add
rorb
fisttpl
mov
and
mov
pushl
shlb
jl
inc
jg
popf
cwtl
pop
fistps
pop
std
outsb
xchg
lods
in
dec
inc
ds
test
stos
pushf
fstpl
pop
sahf
push
ja
stc
mov
jmp
in
repz
fsubrp
xor
xor
add
popf
push
sub
ret
into
out
in
sbb
sbb
fisttps
pop
lret
mov
pop
arpl
in
xchg
cmpsl
out
lahf
xor
icebp
loope
adc
inc
testl
push
jnp
aad
mov
xchg
inc
xchg
push
or
in
adc
orb
xor
cmpl
inc
cmp
rcrl
xchg
daa
movsl
inc
add
cwtl
and
lds
xor
xchg
pushf
pop
scas
clc
imul
and
adc
in
or
mov
pop
sub
out
mov
xchg
sub
jmp
test
insb
mov
jns
add
pop
std
add
mov
iret
cld
movsb
dec
sbb
ret
int
aam
inc
repz
int
mov
mov
adc
mov
lret
loop
push
add
jno
pop
dec
xor
and
dec
jb
je
mov
mov
nop
push
dec
adc
loop
daa
dec
inc
jmp
xchg
pop
mov
int3
movl
movsl
xor
sahf
ficoml
sbb
shl
xchg
xor
mov
xor
mov
movsb
cmp
pop
jno
dec
xor
mov
push
xor
adc
aas
fdivs
cmp
pop
notl
or
xchg
lret
das
dec
push
inc
sbb
dec
xchg
test
mov
sub
out
dec
or
jne
xor
leave
mov
data16
aas
xor
cld
popa
sbbl
scas
dec
test
out
sbb
add
xorl
push
mov
fs
and
or
ja
into
xchg
add
aaa
cli
mov
outsl
andl
mov
cmpsl
push
fldcw
lcall
decl
cmp
pop
inc
insb
aam
fidivrs
and
cld
push
add
out
xchg
dec
icebp
push
in
fiadds
push
mov
out
cmpsb
out
pop
inc
xchg
cmp
in
repnz
aad
cs
add
insl
mov
and
gs
lret
adc
lret
pop
fchs
xchg
mov
lock
xlat
sbb
mov
cmp
jle
shrl
cmpsb
paddb
inc
in
push
addr16
pop
mov
dec
and
adc
inc
and
enter
mov
and
hlt
mov
sahf
mov
std
repz
and
cwtl
dec
mov
and
xorb
adc
out
jecxz
dec
mov
rcl
sub
movsb
divps
arpl
insl
in
aaa
arpl
xchg
aad
iret
xchg
adc
iret
mov
adc
dec
xor
add
rcrl
popf
lret
mov
fucomi
cmc
inc
add
xchg
sbb
std
jmp
fiaddl
scas
jnp
push
leave
sahf
cltd
lcall
ficoml
mov
loopne
jae
es
mov
fs
add
and
ret
jo
fimuls
addr16
sub
fsubrl
leave
mov
cmp
pop
inc
bound
or
rclb
xchg
mov
mov
jns
ss
arpl
pusha
sbb
fwait
pop
in
dec
ret
stos
mov
adcb
mov
mov
shrb
icebp
jmp
push
int3
adc
cwtl
inc
cmp
movsl
sarl
pop
pop
pop
js
xor
test
std
cwtl
fldenv
test
shrb
pop
cmp
movsl
cmovne
das
xchg
jbe
iret
inc
xchg
ret
xchg
add
lcall
out
and
cmp
cmp
in
cmc
add
mov
cmp
push
sub
out
popf
pop
and
enter
jo
cwtl
add
cmc
mov
cli
loop
fucomi
and
sarb
xor
popf
pop
enter
push
data16
insb
jnp
jle
std
clc
daa
les
mov
add
xlat
mov
pop
xchg
in
inc
pop
pop
push
jge
add
mov
add
add
out
outsb
movhps
int3
adcl
or
fsubrs
mov
popf
inc
call
dec
cmpsb
add
bnd
in
rcrb
out
fmull
outsb
mov
in
push
dec
ja
inc
punpckhdq
loop
mov
adcb
mov
dec
xchg
insl
popf
lahf
roll
notb
sahf
or
jno
lret
icebp
fstpl
ret
iret
add
ljmp
cmp
in
mov
testb
sub
stos
add
insb
sbb
mov
mov
xchg
int
repnz
sti
sub
test
lea
pop
xchg
xchg
cmp
jbe
nop
into
fsubp
in
pop
cmpsb
mov
lea
jle
cmpsl
cmc
imulb
repz
mov
jae
xor
lahf
add
dec
je
or
lea
lea
sub
data16
lcall
push
js
mov
pop
loopne
test
jo
scas
addr16
mov
xchg
fadds
jnp
push
push
jl
fnstsw
fs
push
push
and
adc
iret
xor
inc
shl
in
pop
call
cwtl
jno
xor
mov
push
cmp
out
dec
icebp
pop
shlb
xchg
cmp
ljmp
inc
ret
test
out
mov
cmp
ret
jle
push
ret
push
lds
xchg
xor
lea
sarl
insl
inc
cmp
fs
inc
jg
shl
lcall
push
mov
lods
jmp
add
popf
ret
cli
outsb
repz
sahf
insb
pop
mov
je
ljmp
inc
sbb
pushf
bound
dec
ljmp
lcall
out
dec
icebp
sub
pop
cmp
xor
outsb
test
mov
cs
cmp
subl
enter
cmp
xchg
scas
pop
sub
loopne
mov
mov
push
shrl
xchg
lds
fs
out
cmp
mov
xlat
emms
fldcw
test
jg
mov
xchg
in
xchg
fcomip
lods
lcall
push
leave
mov
or
dec
lret
push
lods
rolb
xchg
dec
mov
loop
popa
sub
pop
lock
or
lods
mov
ficomps
mov
xchg
cltd
dec
cmc
dec
ds
outsb
xor
jb
mov
adc
outsl
pop
push
push
mov
mov
mov
out
xchg
out
push
sbb
xor
sub
pusha
nop
push
pop
incl
adcb
dec
xor
mov
xor
xchg
outsb
pop
jl
lret
ror
mov
jmp
imul
add
add
enter
xchg
push
roll
mov
add
repz
dec
jmp
aas
ret
jo
lcall
stos
cmp
cmpsb
test
jp
imul
and
sub
adc
movsl
es
lds
or
test
lods
movsb
mov
sbb
xchg
loopne
cli
shll
aaa
push
scas
lds
lcall
jb
fildl
ficoms
repnz
xchg
bound
lahf
std
pop
dec
rcll
daa
cli
and
je
imull
pusha
xchg
jecxz
js
push
ja
rolb
mov
sub
sub
stos
sbb
pushf
push
jne
cmc
push
xlat
sub
mov
cmp
push
iret
pop
adc
mov
es
inc
repnz
mov
jb
in
adc
stos
jmp
jns
pop
andb
clc
out
push
fnstenv
ret
or
sbb
mov
jo
bnd
jl
pop
mov
mov
add
clc
jb
popf
mov
scas
in
clc
int3
mov
hlt
and
call
xchg
repnz
jbe,pt
jmp
cltd
pop
mov
pop
jb
testb
xor
jbe
rcr
and
adc
mov
add
bound
or
sti
pop
xchg
xlat
in
gs
push
or
push
jle
mov
dec
and
push
out
inc
push
stc
inc
dec
cmpsl
das
jae
out
incb
pop
and
testb
push
pop
sbb
pop
push
cwtl
jmp
scas
in
fwait
jecxz
jg
add
xchg
mov
out
sub
jns
mov
mov
mov
mov
and
mov
insb
cmp
cmp
mov
push
mov
mov
mov
lahf
lret
cld
hlt
iret
repnz
cmp
fistpll
das
mov
inc
dec
push
push
jns
pop
and
adc
xchg
cwtl
xchg
arpl
sarl
dec
stos
or
sbb
bound
xor
into
bound
mov
imul
icebp
js
aam
sbb
sahf
xor
push
mov
test
jae
jl
mov
xor
jbe
das
or
jb
sub
loope
xlat
lods
push
in
or
stos
jecxz
out
insb
scas
mov
and
ret
cli
mov
out
mov
lcall
lea
cmp
in
mov
add
arpl
mov
stos
jle
add
mov
jne
lcall
jno
enter
testb
sar
pop
inc
inc
dec
mov
insb
xchg
xor
cmpsl
and
mov
pop
mov
fwait
popl
ljmp
movsl
stos
mov
lock
jns
sub
push
jl
fimuls
fsubrl
pop
mov
sti
inc
xchg
lods
shll
enter
stos
sub
cmp
pmaxsw
aad
aaa
cmp
jl
pop
cs
popa
mov
aaa
jbe
aas
or
out
sbb
pop
imul
ret
mov
repnz
mov
lahf
out
cmp
cmp
pop
scas
push
mov
jp
iret
decl
out
aas
popa
fstl
inc
cmp
jp
notl
pop
inc
fsubrl
push
in
mov
push
test
mov
mov
pop
push
jp,pn
fisubl
aad
pop
add
mov
in
or
or
xor
movsl
cmc
push
dec
push
xor
outsl
lea
popa
and
pop
add
nop
sti
int
sbb
sbb
mov
dec
mov
and
sbb
xchg
jns
xchg
mov
nop
dec
rorl
iret
les
jno
jp
xchg
scas
push
call
addr16
or
mov
repz
loopw
sbb
jl,pt
dec
in
imul
in
stc
stos
jo
js
repz
mov
and
mov
in
mov
out
or
jmp
test
mov
inc
mov
xchg
popf
mov
aam
adc
jbe
lods
or
dec
push
cld
test
aas
sarb
lcall
outsl
cmp
cld
cmpsl
fcoml
sbb
jmp
fmull
popa
stos
cmc
sbbl
stos
pushf
iret
mov
adc
fimuls
notb
aaa
dec
push
mov
sub
xchg
bound
imul
xor
xchg
cmp
push
scas
repnz
and
out
adc
mov
inc
mov
popa
cmp
inc
pop
insl
fs
movsl
xchg
es
cmpsb
ds
fsubr
and
jg
popf
or
jecxz
pushf
fnstenv
imul
cmc
pop
popf
imul
int3
pop
push
dec
in
cmp
dec
mov
bound
and
dec
push
mov
jp
mov
cmpsb
inc
fidivl
test
inc
fmuls
aam
push
ret
repz
cmpl
aas
and
cmpsl
xor
fdivrs
dec
sub
jo
mov
jecxz
pop
pop
in
notb
lock
mov
out
aas
sti
test
add
and
cmp
sub
jmp
xchg
fildl
inc
mov
dec
dec
add
test
sbb
mov
in
add
push
mov
in
adc
fs
cmpsl
sbb
andl
jbe
add
inc
pavgw
lock
push
mov
aaa
push
mov
xchg
lret
movsb
push
aas
adc
fldt
out
insl
and
mov
pmulhw
xor
lock
hlt
scas
lock
sub
cmpsl
enter
movsl
jmp
fldl
push
jp
add
mov
popa
outsl
jle
loopne
dec
jnp
jne
sbb
xchg
daa
cs
cmp
add
lds
call
jge
insb
lods
inc
dec
mov
rol
jns
fwait
jo
push
gs
xchg
notb
cmp
call
inc
cmp
loope
out
mov
sbb
jmp
push
cmovns
xorb
lcall
std
jne
cmpb
pusha
push
jecxz
push
add
pop
popa
push
das
and
inc
pcmpgtw
bound
ss
je
rcrb
xchg
add
nop
lahf
fidivrs
adc
xor
data16
lea
cwtl
inc
data16
dec
xchg
nop
add
xchg
jp
addr16
sub
data16
xlat
adc
cmp
push
push
das
and
or
lods
outsb
xor
or
cmpsb
or
mov
jg
push
pop
mov
push
lret
jl
cmp
mov
icebp
lahf
fildl
es
adc
lds
or
mov
adc
mov
jno
push
sub
push
fs
dec
lods
add
sbb
xchg
loope
sub
fiaddl
cwtl
ror
dec
adc
sbb
pusha
arpl
cmp
stc
xchg
pop
jno
in
imul
xorl
sfence
inc
push
and
cmp
stos
sub
cwtl
adc
inc
mov
inc
addr16
mov
addr16
pop
test
push
insl
fisubrl
cwtd
mov
addr16
je
bound
ja
test
cmpsl
bound
pop
call
stos
dec
add
pusha
outsl
negb
xchg
stos
xor
mov
cmp
rcr
mov
int
emms
mov
jo
jp
mov
mov
shlb
orb
add
or
jnp
push
iret
mov
adc
test
jnp
sbb
test
mov
test
xchg
pusha
push
movsb
pop
sbb
mov
mov
call
subl
out
cli
mov
lret
cmp
or
insb
xchg
push
insl
adc
or
cli
and
leave
adc
jle
shr
loop
test
jl
dec
popf
test
adc
loope
mov
add
mov
dec
and
loopne
mov
dec
adc
andl
pop
lea
data16
dec
cmp
insl
push
sub
inc
rol
out
dec
add
cmp
push
pop
or
pop
addr16
ror
arpl
lock
add
popa
test
or
cld
mov
or
mov
xchg
mov
lcall
out
in
cmc
js
fs
xchg
add
push
cmpsl
nop
mov
sub
and
addb
and
jecxz
mov
cmp
jecxz
cs
sub
aaa
sub
sub
inc
jge
jo
sti
cmc
adc
arpl
test
arpl
hlt
mov
jb
rcrb
and
cwtl
repnz
mov
push
fadd
stc
push
mov
jp
cs
jae
jb
push
shrl
les
xor
jno
inc
cmp
mov
add
je
call
movsb
pop
xlat
ret
and
dec
add
add
lea
mov
cmp
pop
xchg
subl
xchg
les
mov
dec
in
lock
push
and
movsb
dec
add
js
cmp
pop
loop
sbb
mov
mov
in
enter
lea
xchg
push
mov
loopne
xchg
sbb
mov
sub
je
scas
adc
into
adc
pop
jb
xor
je
xor
out
aad
test
push
and
lea
sub
inc
xor
das
push
and
out
cs
sub
and
cmp
popf
fwait
orl
push
mov
lods
ds
lcall
lahf
cmpsl
cmp
cli
outsl
cmp
xchg
xchg
bound
inc
mul
jle
pushf
adc
push
push
fsts
imul
in
sub
outsb
push
sti
fsubl
ja
jbe
sub
cmp
xor
xchg
mov
mov
call
and
and
nop
dec
mov
insb
bound
loop
shlb
mov
or
sbb
lock
push
ljmp
push
mov
mov
stos
cmp
mov
xchg
ds
dec
repnz
inc
cmpsl
ja
adc
and
dec
xor
mov
pop
mov
insb
mov
addr16
std
aas
sub
filds
adc
sub
xor
cmp
and
push
cli
leave
jne
xchg
gs
pop
xorb
pop
push
js
xchg
addl
rolb
and
push
or
sub
inc
enter
cltd
subb
test
fwait
mov
mov
adcl
fwait
and
test
rol
adc
bound
add
inc
test
add
xchg
adc
xor
mov
shlb
cmp
xchg
pop
jnp
fwait
push
ljmp
xor
mov
jg
call
aas
cmp
lods
negb
fldl
or
rclb
ss
dec
les
adc
push
sti
sbb
add
cld
movsb
mov
pop
cmp
addb
es
cld
or
jmp
enter
add
jbe
test
pop
mov
push
adc
dec
mov
movsl
aas
std
xchg
mov
sbb
jg
hlt
gs
lods
and
mov
add
lds
fnstsw
mov
gs
inc
test
mov
dec
stos
scas
imul
imul
or
scas
lcall
subl
inc
jecxz
fildl
xor
pop
bound
sbb
bound
mov
les
xor
aad
mov
sysexit
inc
xchg
add
push
out
into
ja
test
iret
std
je
inc
dec
in
jbe
ja
inc
dec
and
das
cmc
cltd
cltd
rorb
cs
imul
inc
sub
shlb
and
pop
clc
push
dec
enter
mov
add
outsl
call
cmc
xchg
xlat
xchg
out
mov
mov
ss
cmpsl
pop
dec
scas
out
adc
cld
lcall
filds
js
in
pushf
nop
mov
cs
movsl
rcll
stc
jp
push
inc
mov
sub
test
sub
test
pop
movsl
jg
repnz
push
js
jge
mov
mov
rcll
gs
or
mov
scas
push
add
and
inc
cwtl
mov
and
mov
inc
adc
sub
and
push
lea
sbb
xchg
test
mov
nop
xor
stc
lcall
leave
add
bnd
imul
or
roll
aam
lock
sub
movsb
xchg
iret
add
int
xorb
adc
push
out
addr16
xor
iret
das
adc
imul
add
repz
rcr
std
sbb
ljmp
ficomps
mov
nop
cltd
les
pop
or
cmp
int3
pop
mov
test
ljmp
push
push
scas
jno
lcall
inc
and
add
dec
xorl
xchg
xchg
mov
jae,pn
out
or
cmpsb
iret
add
jg
mov
mov
push
lahf
test
xorl
sbb
sbb
cmp
pop
nop
rclb
xorb
xchg
lret
orb
nop
push
push
jl
xor
jae
inc
fwait
leave
imul
dec
fldl
cmc
arpl
pushl
pop
test
mov
or
cltd
dec
adc
fists
and
cmp
aad
push
loope
jnp
jnp
mov
jb
push
or
lods
imul
pop
or
add
es
cmp
roll
cmp
adc
andl
cmp
cmp
or
xchg
imul
test
cmp
jae
in
rol
adc
or
out
pop
xchg
jle
andb
xchg
adc
add
fnstsw
or
test
sub
gs
aas
outsb
ljmp
jbe
jae
pop
jae
popf
mov
rolb
sbb
aad
jmp
pushf
fsubs
enter
push
pushf
insb
fistps
pusha
mov
cmc
bswap
jl
dec
sub
in
adc
incb
ljmp
mov
inc
stc
pop
je
cmp
in
mov
lods
push
lahf
daa
sub
mov
jg
fwait
mov
sub
adc
lcall
pop
or
cmc
test
and
push
sub
or
push
int
int
pop
in
and
or
push
lds
sub
cmp
mov
sub
dec
pusha
sbb
rcr
out
inc
jmp
sbb
pop
xor
jnp
jo
in
imul
outsb
jne
into
stos
lahf
xor
imul
inc
les
fsts
push
push
xchg
mov
push
aaa
mov
dec
add
lods
push
sub
jle
mov
dec
pop
sti
pop
sbb
imul
pop
and
sti
das
out
inc
add
cmc
loope
and
stos
cvtps2pi
int
sbb
std
pop
roll
shlb
bound
sbb
int3
adc
jb
xchg
and
cmc
pop
dec
fldcw
jl
sub
out
repnz
sub
scas
leave
push
or
cmc
in
xchg
out
dec
jge
scas
pop
pushf
addr16
jge
adc
jecxz
push
sbb
sbb
cli
push
jp
push
adc
push
rorl
cmp
aad
xchg
jecxz
cmp
xor
daa
adc
sub
imulb
mov
mov
xchg
jl
ljmp
mov
idivb
and
xor
je
ljmp
ljmp
das
lds
push
pushf
xchg
lods
push
repz
lahf
outsl
jb
xor
addr16
ret
pop
daa
mov
cli
test
sbb
add
cwtl
mov
add
insl
popl
aam
pop
mov
nop
xchg
push
dec
dec
mov
mov
ja
repnz
add
push
mov
rcrb
scas
cwtl
ror
idiv
ret
jne
mov
insl
pop
xorb
or
in
mov
and
fmulp
and
test
outsb
push
cmp
sub
fdivr
pop
hlt
lret
add
sbb
push
xchg
push
imul
loope
pop
loope
xor
fwait
pop
scas
mov
cmp
dec
jb
mov
or
fwait
insl
push
adc
pop
xor
stos
and
jnp
or
fdivrl
sub
inc
push
inc
or
int3
daa
aaa
sub
xor
idivl
loop
sarl
fmulp
out
movsl
test
mov
cmp
dec
mov
int
push
lret
jecxz
in
xor
out
xchg
dec
ret
xchg
mov
sbb
inc
leave
fldcw
pop
sbb
cmp
mov
mov
pop
shll
icebp
test
ret
in
sub
lret
fwait
xchg
cmpsl
adc
hlt
aam
push
push
pop
xor
mov
dec
mov
pop
into
mov
and
fldcw
pushf
je
dec
mov
pop
pusha
cmp
xor
jbe
push
sub
shlb
lret
fwait
jo
adc
mov
jg
jae
push
inc
imul
dec
sbb
xlat
add
dec
inc
add
xor
pop
fs
jp
addr16
int3
and
loope
xorl
cs
test
add
mov
cltd
mov
inc
ss
lcall
hlt
repz
test
mov
insb
call
dec
enter
jne
lea
push
mov
jle
sahf
cmp
mov
xor
and
adc
and
int3
xor
sahf
xchg
mov
imul
ret
mov
lods
movsl
call
inc
push
scas
add
jge
and
xchg
adc
test
sbb
loopne
js
jg
pop
push
call
fs
scas
pop
shlb
ret
das
cmp
sbb
sbb
push
shrb
je
jge
push
insl
jge
mov
xchg
les
and
cli
pop
je
xlat
pop
call
icebp
cmp
insb
fldenv
ljmp
jo
fsub
int
jmp
popa
arpl
or
jl
ja
mov
es
movsb
and
fdivrl
mov
push
dec
inc
pop
insb
popf
xor
sub
outsl
jno
xchg
in
push
adc
or
int
movsb
adc
lret
push
dec
dec
popa
ss
scas
cmp
arpl
dec
adc
shrb
jle
cs
pop
movd
test
ror
pushf
loopne
decl
jp
push
cld
push
fwait
mov
xchg
cwtl
jmp
mov
fildl
dec
daa
leave
jno
and
fdivrl
mov
imul
cmpsb
mov
scas
int
aas
jno
lods
das
adc
addr16
les
jp
push
xor
mov
xlat
jo
push
sub
xchg
fstpl
lret
or
daa
jp
mov
jno
push
sti
jle
iret
jle
xor
push
adc
or
add
cmp
inc
or
jb
mov
aad
cmpsb
cltd
scas
dec
stc
lock
ss
mov
into
and
mov
ja
xchg
mov
xchg
xlat
push
and
dec
out
fnsave
ret
dec
ret
cmp
and
jp
leave
adc
dec
jl
lods
loopne
stc
iret
cltd
fcomi
in
mov
and
sbb
pop
and
add
loop
mov
sub
cmp
nop
dec
jecxz
xor
dec
lock
inc
pop
ret
mov
fdivs
call
lahf
sti
aam
mov
ret
js
mov
inc
jo
xchg
mov
jb
mov
lods
icebp
inc
and
icebp
outsb
jne
in
jmp
icebp
cmpsl
jle
popf
adc
cmp
jne
out
lcall
jg
sahf
and
xor
in
push
mov
jge
ret
add
xchg
inc
add
or
outsl
xchg
cmpsb
int3
push
jl
idivb
fisttpll
xchg
sub
scas
or
push
jbe
lret
lods
jle
test
stos
arpl
push
push
sti
lds
dec
mov
pop
cmp
mov
cmpsl
pushf
inc
addb
insl
dec
cltd
push
mov
sbb
fldcw
lahf
push
repz
sbb
out
fs
div
pop
out
into
xor
mov
pop
or
inc
leave
pop
push
xchg
sbb
pop
sub
test
sub
push
clc
popa
cmp
xor
mov
dec
or
orb
out
insl
in
sahf
add
xor
xchg
sbb
fisttpll
dec
inc
xchg
adc
jne
data16
fistps
stos
imul
add
jmp
pop
lahf
add
loopne
aaa
jl
xchg
mov
push
sub
and
jo
int
es
lds
jns
cmp
and
ljmp
mov
inc
jmp
inc
lds
loope
addl
jns
flds
xor
adc
ja
push
jne
and
cmpl
lahf
adc
sub
mov
sub
cmc
lods
jb
sahf
cs
ss
in
push
jo
or
sbb
inc
gs
mov
lods
inc
fisubrl
push
sbb
xor
sub
out
ss
jb
xchg
dec
int
push
lea
mov
leave
stos
lahf
les
and
or
call
fsubrp
jl
and
cmp
xor
testl
andb
sar
test
mov
cmp
cmc
sub
and
bound
call
push
in
mov
rol
inc
sbb
mov
pop
out
push
test
divl
sbb
xchg
sahf
fsts
call
stos
clc
add
cwtl
and
arpl
push
cld
mov
addr16
mov
mov
cmp
subb
cwtl
or
mov
stc
sbb
pusha
subl
ja
mov
inc
ror
dec
outsl
jle
orb
or
adc
out
push
jle
jecxz
int
popl
out
xchg
or
sub
lret
push
notb
inc
loope
push
scas
repnz
pop
and
and
lea
arpl
sbb
and
fidivrs
xchg
push
nop
jg
rcrl
ja
push
lret
rorb
adc
cmp
sbb
sti
lahf
xor
test
adc
sub
cmp
aad
pop
les
ret
hlt
das
add
or
and
jecxz
cwtl
pop
or
lahf
fisttpll
out
notb
sub
lahf
iret
js
repnz
inc
lods
jp
hlt
mov
psubb
sbb
fdivrs
in
rsqrtps
movsb
in
or
mov
cmpsb
sti
ret
outsl
sar
xchg
fucomi
pop
push
icebp
pop
addr16
sub
movsl
enter
pop
and
dec
outsl
or
insb
and
sub
xchg
cwtl
movsl
jb
sub
addr16
xor
xchg
and
lds
fldcw
dec
test
xor
fdivrl
and
loope
inc
das
call
in
adc
xchg
cs
inc
or
lock
shrl
mov
jecxz
dec
enter
push
mov
negb
jne
mov
jl
fcoml
test
push
sbb
stc
leave
mov
sub
xor
daa
adc
sub
mov
jns
das
push
sbb
xchg
dec
gs
jne
jmp
pop
jmp
lods
ret
testl
and
and
adc
out
les
xchg
sbb
in
mov
xor
push
decl
xor
jle
mov
jge
imul
cwtl
fadd
dec
mov
mull
xor
das
rcll
mov
xchg
jno
in
push
adc
ss
sub
sti
test
xchg
xchg
in
push
add
scas
lock
jo
sbb
pop
push
cld
jno
imull
frstor
inc
mov
jb
iret
scas
leave
adc
call
add
sub
sbb
lods
lods
aad
cli
das
push
pop
pop
hlt
cmp
adc
inc
mov
mov
inc
xor
pop
pop
mov
jo
gs
cmp
rol
in
dec
int
insl
movsb
repz
sbb
dec
movsl
mov
pusha
dec
clc
sbb
jmp
add
ljmp
sti
mov
dec
sub
mov
push
xor
xchg
repnz
xchg
fsubrl
fisttps
es
sub
mov
xchg
jbe
jae
or
mov
dec
ss
sbb
loopne
pop
mov
push
inc
movsl
scas
sbb
stos
mov
stos
outsl
out
xor
or
mov
sub
mov
cmovo
inc
icebp
popa
dec
jp
faddl
pop
mov
xchg
jo
arpl
cwtl
dec
icebp
and
sahf
mov
hlt
xlat
or
jmp
loop
test
sub
push
data16
inc
pop
popa
inc
fwait
in
adc
aad
and
cmp
push
andb
and
test
addb
mov
dec
mov
nop
mov
aam
mov
sub
pushf
mov
scas
xchg
inc
dec
add
cltd
fistpll
test
jmp
test
dec
shll
cmp
ljmp
fdivr
es
into
pop
jns
push
cltd
lock
rclb
mov
popf
cmp
inc
jg
mov
add
or
pop
idivl
sti
push
test
cmp
fisttps
push
sbb
addr16
mov
jb
es
popa
movsl
lret
pop
jnp
stos
test
mov
push
ss
movsl
jno
xlat
push
imul
ja
cmc
ljmp
xchg
mov
das
push
pop
dec
xchg
stos
jmp
fcmovne
es
jnp
in
mov
cmp
loope
in
add
lahf
out
add
mov
lahf
imul
adc
dec
idivb
nop
outsl
call
lcall
lods
fadds
or
test
cltd
inc
pop
test
mov
popf
cmp
sti
test
push
adc
shrl
mov
xlat
mov
jge
cmp
stos
imul
cmpsb
or
sub
sbb
inc
cli
lret
inc
and
or
jmp
cmp
mov
das
jnp
xlat
mov
scas
int
in
push
sub
sub
fcmovnbe
sub
jne
stc
adc
nop
lret
repnz
xchg
pusha
test
mov
aam
jmp
and
bound
scas
cmpsl
mov
insb
out
sbb
mov
pop
push
inc
dec
mov
icebp
push
aaa
add
decl
jp
xchg
cmp
test
sbb
pop
test
jp
das
js
lock
movsb
fistpll
mov
adc
mov
fsubr
inc
stos
dec
adc
das
inc
mov
adc
xchg
pop
inc
pop
add
add
jmp
push
pop
dec
add
aam
add
jb
cmp
cmp
test
push
sbb
sbb
outsb
scas
mov
pop
shlb
in
and
push
sbb
mov
xchg
imul
jns
add
das
rorb
ret
test
decb
mulb
mov
push
imul
mov
dec
dec
mov
and
sbb
sub
shlb
xchg
daa
mov
movsl
icebp
repz
dec
jne
jnp
rol
bswap
adc
push
dec
aam
lcall
jne,pn
jmp
jecxz
cld
dec
fisttpll
out
cmp
aaa
out
pop
jno
pop
sub
and
mov
faddl
rorl
hlt
and
in
jns
loop
inc
jo
xor
je
cmp
movl
push
sti
fnstenv
lret
lock
jbe
enter
cmp
cli
dec
sub
cli
test
sbb
inc
cmp
mov
and
leave
xor
pop
xor
push
mov
sahf
xchg
sub
inc
div
mov
cmp
xchg
sbbl
and
adc
sbb
jecxz
outsl
pop
leave
xor
incl
insb
mov
mov
jnp
adc
call
in
mov
std
pop
stos
rcll
hlt
popa
aas
dec
mov
nop
outsl
mov
pop
out
lret
dec
fists
decl
out
sbbb
adc
bound
jl
popa
sub
stos
daa
cmp
jmp
mov
and
jbe
loopne
inc
aaa
fidivrs
inc
int
xor
jns
cltd
stc
jbe
popf
inc
ret
in
sbb
adc
jmp
push
popa
mov
in
xchg
pop
movl
loopne
sub
call
aad
pop
mov
dec
popf
movsb
jg
insb
mov
cmp
scas
jmp
scas
arpl
shll
push
shl
mov
enter
mov
popa
mov
dec
aas
inc
repz
cmp
xchg
pop
mov
insb
dec
roll
or
adc
push
jmp
sbb
lret
fmull
lahf
jo
xchg
inc
fcoms
pushf
inc
pop
jecxz
mov
mov
lods
std
cmp
pop
xchg
pop
aam
push
xor
not
jl
pusha
aad
dec
xlat
fs
mov
lahf
aaa
shlb
movsl
subb
dec
incb
lock
frstor
pop
scas
adc
dec
or
xchg
sub
add
sbb
pusha
lods
pop
shll
pop
push
lock
sbb
jle
scas
lret
ss
dec
dec
popa
movb
xor
mov
aaa
rorb
adc
push
add
xchg
or
sbb
cld
sbb
shr
adcb
add
data16
repnz
ds
and
mov
insl
int3
in
pop
mov
and
orb
addr16
add
hlt
adc
hlt
in
mov
stos
enter
xchg
dec
shr
mov
in
ss
and
cmp
add
cmp
mov
cwtl
push
xor
dec
add
and
xchg
loop
adc
or
dec
mov
cmp
fdiv
cmpsl
stos
xchg
xor
out
imul
sbb
mov
hlt
lock
jmp
lods
inc
jmp
adc
xchg
jg
inc
adc
repnz
xchg
adc
insb
xchg
jl
sbb
stc
pusha
xchg
lcall
add
push
jmp
dec
and
sub
jmp
dec
mov
test
xchg
faddp
js
sbb
push
ss
shrl
or
xlat
jmp
dec
add
xor
dec
iret
test
aaa
pop
cmp
and
add
lret
mov
rclb
add
inc
xchg
mov
lea
and
stos
push
loopne,pn
lock
jmp
sub
add
adcb
lahf
add
filds
adc
xor
xor
shll
inc
outsl
ret
xchg
add
aas
xchg
sbb
daa
mov
add
sub
and
arpl
push
jl
adc
mov
cmpsb
movsb
cld
mov
adc
dec
cmpsb
inc
movsb
lock
and
jl
sub
xlat
push
add
nop
leave
out
test
sub
fs
jae
mov
outsl
add
mov
inc
jne
sbb
sub
mov
pop
cltd
mov
pop
cmc
pop
subl
popl
fisttpl
jne
lcall
and
adc
or
fnstsw
das
rcrl
bound
jle
push
push
xchg
inc
or
idivl
sbb
int
or
jae
ss
jle
inc
lock
daa
inc
gs
xor
sub
repnz
loopne
jmp
lock
mov
mov
jg
jge
fadds
sub
arpl
outsl
lret
arpl
push
lea
mov
jb
sub
mov
xor
push
mov
es
xor
pop
in
inc
jb
rclb
daa
xor
popl
sub
inc
cwtl
push
sbb
aaa
mulb
inc
mov
jnp
jne
adc
sbb
sub
dec
xor
jg
sbb
jae
or
push
das
xor
pusha
sub
cld
and
sarl
dec
pop
xor
nop
or
hlt
clc
fmul
cmp
xor
adc
mov
pop
pop
xor
add
mov
ss
jecxz
rcll
andb
mov
lret
in
xor
inc
pusha
sbb
mov
leave
add
sysenter
xor
xor
cs
xor
inc
jecxz
iret
inc
adc
repnz
adc
aam
shll
daa
pop
decl
mov
test
popf
cmp
mov
sub
pusha
mov
xchg
sbb
ja
xchg
push
mov
xchg
or
dec
xchg
std
hlt
dec
addl
pop
lds
pop
mov
cltd
loope
rorb
xchg
or
addr16
mov
rol
adc
cltd
aas
clc
shrl
sbb
movsl
fisubl
popa
inc
mov
jb
mov
push
repz
mov
and
subl
outsl
insb
dec
mov
dec
inc
addb
push
call
aad
pop
dec
js
jl
pop
push
xchg
out
out
xor
enter
das
dec
add
mov
test
adc
sbb
mov
add
fisubs
imul
fwait
mov
mov
stos
mov
xor
movsb
xchg
jb
mov
xchg
mov
test
sub
pop
or
test
pop
dec
imul
lock
adc
push
pusha
mov
xlat
stos
pop
fs
lea
rep
or
push
xchg
pop
add
stos
inc
jl
pop
fidivrl
stos
xchg
call
stc
rcr
jle
sti
cmp
in
xor
or
mov
das
jbe
or
fidivl
and
add
fsubr
push
testl
inc
mov
test
rol
scas
pop
je
fildll
cs
psllw
or
pop
sub
jne
sbb
jg
mov
xchg
scas
jbe
loop
pop
jmp
mov
imul
in
fdivs
das
ret
cmp
rcrb
push
xor
pop
cmpsb
cwtl
add
ficompl
add
dec
aam
shrb
jp
je
popf
jbe
popa
add
out
popa
pop
imul
leave
xor
insb
jnp
fs
sub
fdivp
leave
jb
mov
pop
arpl
push
clc
jmp
lahf
pop
data16
stos
aad
loopne
pcmpeqd
addb
in
lret
mov
sbb
mov
es
lcall
inc
xor
and
adc
ret
lret
mov
addr16
imul
sub
pop
xchg
fwait
das
shll
imul
adc
add
and
hlt
lods
push
jbe
pop
iret
inc
bound
pop
mov
scas
xchg
or
cltd
dec
mov
xor
add
daa
push
cmp
mov
add
xchg
add
jp
add
mov
cmp
data16
inc
cmp
and
mov
xchg
sub
xor
dec
sbb
shlb
xchg
mov
out
lea
lcall
sbb
lcall
cwtl
add
dec
mov
popf
xchg
leave
push
shlb
inc
testb
out
popa
jmp
inc
and
es
push
dec
sub
xchg
gs
in
icebp
mov
sbb
mov
jne
rorl
shrb
mov
aad
rcll
inc
sub
stc
loop
add
add
dec
sub
test
test
shr
stos
cmp
test
insb
lods
cmpb
sbb
inc
sarb
scas
push
incb
cmc
adc
jl
aaa
xor
mov
out
xorb
push
aad
jns
cld
in
inc
shl
mov
mov
mov
popa
cmp
mov
cmp
push
insb
add
das
mulb
mov
clc
cltd
fwait
out
adc
lahf
ret
ret
push
scas
cmp
mov
ds
scas
loope
inc
dec
and
cmp
sbb
cld
xor
xchg
dec
popf
mov
or
dec
mov
inc
pop
mov
sbb
push
loopne
lea
sahf
push
shlb
mulb
or
push
test
out
inc
popl
cmp
adc
lea
ret
popa
mov
lahf
push
xchg
rcrl
mov
pushf
inc
push
add
movsl
push
jnp
cmp
pop
dec
xlat
jbe
imul
shrl
mov
dec
bound
mov
mov
test
les
and
sub
mov
mov
or
mov
and
movsb
xlat
or
lcall
adc
sub
lret
into
in
jnp
jae
jae
mov
mov
and
stos
fdivs
mov
cmp
fucomp
lods
dec
push
notl
pop
pop
sbb
adcl
fiadds
and
dec
popa
or
jne
sub
in
inc
lock
or
lds
filds
insl
mov
test
in
pop
adc
mov
jp
mov
je
ljmp
push
fwait
jne
flds
cltd
dec
mov
clc
hlt
mov
sbb
clc
imul
std
std
mov
out
mov
adc
leave
or
arpl
aad
push
pop
ds
inc
cmpsb
je
adc
insl
enter
jge
sbb
and
andl
ja
xchg
sbb
and
push
or
jnp
dec
gs
clc
pushf
pop
pop
adc
bound
fxch
nop
ret
add
iret
or
stos
call
mov
inc
or
pop
pop
xchg
cs
and
out
cmp
stc
xorl
div
repz
lock
jno
xchg
adc
xlat
dec
jmp
dec
sahf
leave
xchg
adc
jp
testl
pop
inc
pop
inc
push
nop
sbb
inc
mov
adc
iret
inc
aad
mov
loopne
lahf
std
jle
push
out
sbb
push
inc
sub
adc
mov
inc
lea
insb
push
in
lahf
lret
xchg
jb
push
cmpsl
shr
cld
stos
imul
in
pop
jl
cmp
sub
lcall
sub
adc
shrb
mov
aam
push
jae
cmp
fwait
lods
and
in
fsubs
mov
inc
fadds
data16
mov
xor
mull
jne
jge
vpcmpestri
push
cmp
scas
nop
dec
pop
cwtl
sbb
add
push
cmpsb
ret
pop
add
jge
push
or
scas
and
and
inc
repz
scas
js
sub
sub
pusha
aad
mov
leave
imul
xor
push
pop
and
or
mov
pop
lcall
mov
out
mov
es
faddl
fnstcw
or
and
jecxz
ss
out
arpl
inc
dec
clc
insb
mov
fcoml
mov
push
xlat
push
cmp
das
adc
lret
gs
lds
jne
push
jp
addr16
lds
mov
sub
sbb
sub
pop
push
push
inc
or
aam
lods
out
lds
in
mov
mov
iret
je
in
push
xchg
std
sti
mov
clc
pop
ja
push
sbb
stos
xchg
gs
in
add
in
adc
dec
cmp
aam
add
inc
jbe
repz
sbb
ljmp
subb
mov
in
xchg
pop
aaa
pop
sbb
mov
in
cmp
push
in
hlt
mov
andb
dec
insl
scas
loopne
jne
mov
push
push
fadds
int3
lds
jl
test
pop
push
sub
pop
or
test
insb
popa
jg
xor
mov
push
push
inc
fdivrl
notl
mov
xor
fdivs
es
mov
add
sti
xor
xchg
fisttpl
scas
cs
loope
jg
mov
dec
jne
push
je
mov
add
mov
pop
or
jl
sbb
pop
scas
adc
ficompl
mov
cli
mov
imul
dec
popf
in
popf
mov
mov
jle
lods
popl
jge
lods
add
xor
adc
daa
lret
add
add
std
jno
cmpl
push
add
sbb
movsb
mov
add
fnsave
addr16
xchg
inc
xorb
popf
pop
mov
movsl
cs
sub
cmp
out
orl
and
xchg
mov
rorb
jmp
push
dec
inc
mov
test
push
and
mov
mov
cs
inc
push
mov
push
xor
out
and
sbb
adc
jmp
push
push
cmpb
cmpsl
leave
repz
popf
and
sub
out
movsb
and
mov
xor
xor
xchg
stos
mov
ljmp
mov
add
mov
scas
xchg
scas
daa
jp
push
dec
enter
push
adc
and
pop
mov
stos
leave
movups
pop
push
sbb
shll
push
add
mov
jns
pop
cmp
pop
hlt
ret
nop
jae
dec
mov
pop
cmp
inc
dec
out
shr
adc
aas
dec
jecxz
stos
jge
lods
adc
push
push
adc
sbb
xchg
push
jbe
ficomps
loop
pop
jne
test
aam
xor
rclb
mov
in
scas
pop
cmpb
jmp
inc
sub
add
pop
aas
mov
icebp
add
pop
adc
mov
mov
out
add
pop
cmp
xchg
lret
enter
sub
fildll
adc
xchg
mov
or
dec
jecxz
outsl
sub
or
outsl
dec
fistpl
lcall
pop
int3
scas
mov
aam
add
movb
popf
mov
cmpb
clc
lret
mov
dec
loop
ret
dec
jno
mov
in
andl
cld
ret
out
or
les
push
addl
out
xchg
or
add
cmp
inc
adc
inc
dec
xor
ja
mov
adc
cmp
mov
pop
or
mov
repnz
xorb
enter
mov
loope
das
mov
lahf
adc
or
loop
push
cmp
cmc
pop
fisttpl
les
in
jle
sbb
pop
fnsave
mov
or
stos
xchg
add
push
push
imul
addb
dec
inc
and
call
dec
mov
sub
jno
ret
sbb
btc
fadd
fimuls
or
popf
lock
sub
ds
out
jmp
adc
jl
xchg
jg
mov
push
loopne
xchg
inc
test
mov
dec
imulb
in
and
jne
inc
fcmovnbe
xchg
cld
decl
popa
xchg
sub
pop
pop
or
mov
loop
push
dec
xchg
xchg
mov
popa
adc
cmp
and
out
pushw
push
add
in
mov
inc
sbbl
jnp
lret
dec
mov
rol
mov
inc
into
xchg
daa
push
es
cwtl
cmp
jg
cmc
mov
jae
stos
push
loopne
daa
scas
cmp
lods
cmpsb
dec
lcall
ret
mov
enter
adc
enter
adc
add
out
sub
pop
fsubrs
int
shlb
pop
push
cmpsb
adc
fdivrl
into
cmp
inc
scas
cmp
ret
enter
daa
and
jae
mov
pop
push
arpl
cmp
push
jge
jo
jecxz
push
sbb
or
pop
ljmp
cs
mov
lds
mov
test
mov
sbb
sbb
mov
push
ret
and
std
dec
add
stc
movsl
insb
mov
imul
and
xchg
test
inc
out
push
lahf
cmpsl
and
and
or
jbe
and
movsl
stos
clc
sahf
cmp
or
neg
or
in
cmpsb
shrb
shlb
jmp
dec
mov
add
sti
imulb
dec
test
inc
dec
inc
test
sub
fbld
cld
xchg
imul
cmp
pop
adcw
or
adc
pop
gs
jl
cmpsl
inc
outsl
xor
pop
imul
jnp
xchg
push
cmp
sti
icebp
lret
out
sbb
jmp
adc
pusha
or
imul
lahf
and
jne
push
arpl
mov
movsl
add
enter
cltd
cmp
cld
lds
cmp
repz
jmp
cli
mov
mov
and
iret
out
enter
jl
out
mov
pop
lahf
dec
add
rol
call
pop
push
push
shlb
pop
jmp
shrb
inc
testb
dec
aad
adc
or
cmp
jmp
cli
mov
pop
xlat
sub
mov
in
jp
or
mov
enter
mov
pop
or
ja
rclb
xor
fs
test
xchg
shl
sub
pop
cmp
pushf
and
leave
lods
pop
sub
fs
pop
fisttps
ljmp
pop
pop
mov
sbb
xchg
cwtl
cld
in
dec
psubsw
lds
push
cmp
mov
or
push
sahf
out
fbld
sub
aas
dec
out
shlb
sub
loopne
mov
pusha
jmp
pop
je
movsb
cltd
ss
dec
in
fstpl
mov
or
aam
fstp
je
lahf
pushf
sub
out
jne
mov
pusha
in
pop
push
scas
cld
mov
xchg
mov
mov
push
jb
shll
sub
adc
cmp
cmpsb
cwtl
push
hlt
pop
fimull
clc
jmp
push
ffreep
push
xor
jp
popa
xor
xor
in
pop
insb
lcall
in
fmuls
outsb
bound
andb
sbb
add
das
sbb
jmp
pop
ss
xchg
cmp
mov
popa
xchg
aaa
iret
lods
sbb
xor
adc
adc
scas
aaa
mov
loopne
jb
jg
ljmp
sbb
pop
out
test
sar
push
jno
xlat
mov
adc
bound
push
idiv
pop
repz
sub
outsb
sbb
inc
js
pusha
je
mov
jae
sbb
sub
cmp
jb
inc
aad
jo
pop
mov
mov
not
sarl
add
orb
cmp
fsts
xchg
decb
jmp
adc
mov
cli
mov
fstps
xchg
hlt
mov
adc
mov
popa
das
push
sub
ficoml
cs
xchg
push
xchg
add
idivl
add
repz
xor
int3
and
cli
sahf
hlt
push
cmpsl
in
xchg
fstpl
ret
jns
je
or
inc
mov
sbb
ja
xchg
mov
pop
pop
fnstenv
cmp
sbb
xor
adc
or
fs
xchg
jnp
or
call
scas
call
outsb
jo
sub
sub
stos
mov
xchg
es
call
push
enter
or
jnp
push
minps
inc
in
mov
scas
fs
std
je
negb
push
cli
ljmp
cmc
mov
fs
push
movsb
add
mov
inc
adc
mov
adc
mov
inc
popf
out
movsb
insb
cli
ja
sti
xchg
or
mov
sub
mov
push
ss
mov
ret
mov
ss
adc
jo
or
dec
shl
repnz
movsl
dec
cmpsl
and
in
dec
pusha
mov
push
leave
mov
or
mov
outsb
dec
inc
aam
std
adc
push
fistl
mov
enter
ljmp
cltd
pusha
ss
xchg
cmp
andb
mov
or
mov
sub
insl
aam
pop
inc
pop
pop
stc
jp
inc
mov
jbe
data16
add
inc
cmc
out
lds
std
rcll
iret
jno
scas
push
iret
jg
push
fsubrs
pushf
movsb
add
int3
mov
shll
pop
mov
and
loope
push
data16
lret
addb
in
or
xchg
aad
fdivl
push
sub
rcrb
sub
rol
jle
mov
mov
gs
push
inc
enter
jno
push
out
push
roll
sbb
push
fisubrs
xor
xor
push
mov
sub
xor
negb
xor
filds
addl
sbb
stc
mov
mov
ret
add
rcrl
int3
ja
push
inc
lods
sbb
in
xor
push
scas
aam
out
jb
rcll
and
mov
or
neg
add
pop
js
jl
subb
pushf
inc
bound
dec
test
jae
ljmp
dec
movl
pushf
call
xor
or
mov
xchg
jle
mov
lret
lods
sarb
xlat
xchg
sti
cmp
mov
add
pop
daa
add
in
jl
scas
int
fs
mov
pop
mov
int3
jmp
and
push
cli
out
pop
jno
stos
xorb
pop
mov
xchg
stos
pop
stc
pushf
cwtl
jmp
ds
xchg
in
push
add
call
rcl
shll
js
inc
aad
lods
je
rcr
lahf
lea
pop
mov
aad
push
mov
ja
mov
dec
pushf
mov
nop
lret
inc
cmp
xor
xlat
gs
xchg
jne
loopne
gs
sarb
xchg
lea
inc
jl
fsubrs
cmp
shr
xor
fdivl
sbb
pop
push
stos
xorb
in
bound
mov
sub
shl
inc
js
adc
push
dec
cld
push
xor
gs
shr
subb
jecxz
daa
repnz
ficomps
add
mov
cmp
int
lock
mov
aaa
repnz
loope
aaa
jbe
and
pushf
das
push
pop
jne
mov
jnp
or
jb
or
xchg
fs
push
cmp
add
nop
inc
add
sbb
mov
insl
add
or
adc
mov
inc
outsb
push
jp
mov
shlb
and
fmul
dec
mov
xchg
jg
jae
inc
loope
lods
adc
mov
daa
pop
jmp
jo
adc
mov
into
cmpsb
sti
ss
xchg
mov
jmp
add
sbb
jno
into
lea
dec
loope
push
ss
test
int3
cmp
pop
insl
icebp
subl
fisttps
and
cli
int3
xlat
jmp
pop
icebp
scas
mov
mov
jae
cli
inc
jge
int3
dec
aad
jl
push
add
xorl
inc
das
push
or
out
pop
inc
sbb
lods
dec
test
sbb
jmp
fmuls
imul
push
fisubrs
xchg
cs
mov
in
add
jg
pop
neg
jne
mov
dec
sub
push
data16
roll
jne
pushf
pop
dec
inc
int
call
mov
filds
jmp
push
dec
divl
add
sub
fisubs
out
clc
mov
mov
pop
pop
push
cli
jno
dec
mov
stos
push
mov
mov
in
pop
iret
cli
dec
bound
sti
mov
movsl
aas
jecxz
push
or
mov
push
inc
shll
popa
sahf
inc
push
daa
xor
les
xchg
sbb
ljmp
cmc
inc
in
shrb
pushl
std
adc
dec
fstl
cltd
cmp
iret
jb
sbb
notl
sub
cltd
sahf
mov
sti
fisttpl
adc
cmpsb
and
out
out
repnz
jb
inc
cwtl
dec
mov
push
push
push
leave
sarl
adc
int3
popa
loope
pop
andb
std
faddp
inc
mov
sub
and
into
insb
add
out
lahf
push
or
mov
add
jns
sub
shrb
inc
andb
jmp
xchg
fisubl
fstps
pop
and
sti
sub
pop
rolb
lahf
mov
mov
into
addr16
cmp
and
jo
data16
jge
testl
jbe
dec
mov
pop
fnstsw
xor
push
mov
inc
lds
andl
sub
or
inc
bound
push
sub
addr16
cmp
rolb
mov
sbb
in
arpl
xchg
div
inc
or
mulw
mov
cltd
pop
dec
and
jge
pop
ret
jb
add
out
or
inc
arpl
inc
xor
inc
adc
pop
mov
imul
adcl
leave
add
decb
sub
mov
dec
lahf
enter
loopne
jl
loop
pop
fwait
lret
in
stc
ret
mov
shlb
push
push
xchg
out
out
rclb
loope
cmpl
shl
lahf
lret
pushf
iret
fwait
in
xchg
and
add
testb
ret
fwait
gs
repnz
sbb
jnp
imul
call
test
outsl
mov
jno
add
pushf
cmp
pop
mov
movsl
mov
cwtl
mov
mov
push
add
dec
aad
cmp
or
adc
xlat
push
cli
clc
jbe
cmp
lods
xchg
or
inc
pop
loopne
lret
pop
stos
ret
mov
out
inc
sar
sbb
ret
cs
mov
sub
push
mov
and
inc
add
pusha
test
pop
push
adc
mov
mov
cmpsl
shll
xor
loopne
xchg
inc
ds
inc
les
lods
adc
clc
ja
sub
test
out
pop
daa
dec
dec
cmp
popa
pop
ret
jne
xor
rcrb
test
or
mov
inc
lods
sbb
jae
dec
sarl
dec
push
int
int
divl
xor
jne
push
pop
imul
ljmp
es
clc
adc
xchg
sub
or
pop
adc
dec
lds
jno
pop
jae
es
mov
mov
inc
or
outsb
mov
in
mov
shll
push
mov
jb
int3
push
je
clc
sbbb
cld
rorl
sahf
add
jnp
dec
push
imul
pop
imul
fcmovb
or
push
shr
xchg
dec
inc
cmc
inc
dec
add
fwait
sbb
enter
adc
sub
movsb
inc
and
mov
out
mov
push
xchg
adc
mov
fstpl
and
and
sub
mov
ljmp
mov
lcall
push
cmpl
cmc
sahf
outsl
fldcw
or
mov
xchg
test
xchg
jecxz
mov
popf
pop
fistpl
data16
sub
rcrb
addr16
aam
jl
movsl
jmp
cmpsb
jle
mov
iret
loope
js
adc
pop
xchg
clc
push
sbb
xchg
lcall
movsb
into
outsl
add
push
mov
in
adc
mov
aad
add
mov
add
push
add
rol
adc
and
mov
loopne
insl
jl
or
psubb
adc
push
pop
pop
jo
cmp
test
les
mov
clc
jmp
test
lret
fistl
push
inc
call
dec
jnp
cwtl
fidivl
pop
or
in
shlb
dec
in
jge
ljmp
sbb
dec
aas
push
ja
in
rorb
add
mov
loopne
xchg
aaa
mov
loopne
ret
ja
gs
xor
out
fdivs
jg
sarl
mov
sbb
push
out
inc
lahf
negl
jg
div
pop
inc
insb
push
dec
cmp
outsl
dec
std
or
xchg
sbb
cs
xchg
mov
in
jne
divb
test
imul
sbb
pop
cmp
jnp
mov
pushf
mov
fs
scas
xor
inc
in
or
pop
imul
dec
push
mov
in
pop
stos
andl
pushl
push
popf
or
sarb
and
sbb
shll
fwait
mov
lret
jne
fldenv
pop
sti
clc
mov
out
lods
sbbl
leave
sbb
mov
lods
les
adc
fs
enter
inc
test
mov
and
aam
into
fistps
insl
sub
lcall
push
mov
test
and
fdivr
scas
inc
mov
cwtl
loopne
addb
xchg
pop
mov
mov
xchg
ja
xchg
add
xor
fdivrs
sti
mov
mov
sbbb
movl
das
adc
lcall
ret
jb
imul
cmpsb
mov
or
aad
push
mov
loop
add
xor
out
adc
push
adc
test
daa
and
jne
inc
hlt
lret
cli
ror
sbb
cmp
mov
inc
or
cmpsb
jmp
lret
fwait
or
inc
add
pop
sub
pusha
mov
icebp
dec
push
subb
mov
pop
fcoml
cs
sbb
fbstp
jle
notb
pop
cmp
jg
add
enter
lods
mov
es
loopne
subb
cs
fdivrl
xchg
imul
nop
lock
ret
in
mov
add
js
mov
push
mov
jbe
aas
int3
add
mov
stos
sbb
and
sbb
xchg
mov
lahf
mov
in
daa
ja
xlat
in
mov
and
dec
push
jne
fs
push
pop
jge
lcall
mov
xchg
lods
sarb
cwtl
pop
out
enter
dec
mov
xchg
xchg
das
aas
mov
fmulp
cs
dec
sub
inc
mov
mov
cmp
mov
jno
and
sub
rcr
mov
and
ret
push
sub
je
xchg
fstp
loopw
insb
scas
popa
mov
xor
push
inc
std
mov
xor
fisubs
inc
insb
shlb
and
pop
adc
and
test
pop
mov
cmp
test
and
popl
adc
loop
sbbb
ror
xchg
test
inc
ja
mov
punpcklwd
sub
xor
push
sar
cmp
imul
sbb
movsl
shrl
adc
std
pop
cmc
adc
pop
lods
leave
es
and
lret
sbb
or
mov
std
cs
push
popa
dec
movsl
adcb
jb
jae
shll
xchg
push
dec
pop
mov
cmp
pop
mov
cmpl
popa
inc
adc
add
les
lods
dec
scas
pop
xchg
add
push
push
cmp
mov
cmp
xchg
mov
or
loopne
test
int
dec
push
std
adc
push
lret
pop
lods
movl
loopne
inc
icebp
push
push
inc
mov
cmp
hlt
push
sbb
loop
in
arpl
pushf
jge
pop
cwtl
mov
subb
pop
loope
ffreep
loopne
inc
enter
xchg
cwtl
je
xor
mov
ss
fldz
xchg
cmp
mull
ret
fcmovu
movsb
clc
inc
add
arpl
andb
loopne
cmc
mov
pop
adc
mov
icebp
rcrl
test
xchg
push
mov
or
in
inc
out
push
mov
mov
lret
fsubl
mov
aas
inc
insb
es
test
ja
xchg
inc
insb
mov
inc
fs
add
je
add
mov
into
adc
rorl
jle
ljmp
pushf
push
xchg
cwtl
dec
in
sub
lret
stc
rol
inc
out
mov
inc
push
dec
divb
popf
xlat
jle
int3
jne
ror
test
mov
mov
jecxz
daa
cmp
dec
jge
cmp
test
sub
inc
dec
fdivrs
rcrl
int
push
cs
pushf
sti
lret
mov
aad
jb
xor
shrb
push
mov
sub
jno
jle
scas
mov
dec
andl
ljmp
fs
nop
mov
aad
push
mov
mov
popa
bound
jbe
or
aaa
cmp
data16
and
pop
sbb
pop
sub
inc
or
iret
bound
lret
cmp
xchg
xchg
iret
push
cwtl
inc
leave
sub
outsb
loopne
test
mov
dec
imul
lret
mov
aas
xchg
jl
mov
jmp
and
jecxz
xor
andl
out
xlat
pop
idivb
aam
cmpsb
sub
lods
pop
lret
ljmp
cmp
fimuls
inc
js,pt
mov
and
test
clc
imul
test
cmp
repnz
pusha
jl
sbbl
jno
sti
xchg
sbb
lods
loopne
dec
roll
dec
or
into
jl
jne
jle
std
or
cmc
orb
push
in
adc
xor
and
les
xor
test
out
or
adc
xor
mov
dec
lea
sub
cmp
cld
test
xchg
sbb
shrb
or
popa
mov
and
jmp
jae
cmpsl
lea
xchg
repz
lods
jge
mov
mov
dec
mov
pop
addl
and
inc
in
fidivrs
mov
mov
das
mov
dec
test
lret
sub
xchg
clc
inc
pusha
sbbb
test
out
mov
pop
leave
shl
repnz
ss
xor
mov
data16
int3
sbb
jge,pn
data16
push
das
xchg
addr16
push
sarb
push
cli
stos
mov
lds
out
add
cmp
and
shlb
cmc
push
or
mov
or
cmp
mov
mov
or
cs
dec
lds
dec
push
ds
mov
inc
cltd
arpl
xor
jg
mov
int
stc
popf
psubq
jle
frstor
and
mov
mov
lahf
add
mov
adc
push
addb
xorb
adc
pop
pop
mov
in
xchg
hlt
xor
push
pop
scas
fcmovnb
pop
sub
outsb
pusha
pop
loope
mov
jno
int3
in
out
stos
sbb
add
aas
psrld
pop
push
rcrl
mov
enter
stos
out
int3
fucomip
fnsave
mov
adc
aas
xchg
mov
lret
imul
repz
in
jl
ss
pushf
lds
and
cmp
cmc
and
push
mov
mov
testb
popf
push
mov
rdmsr
mov
arpl
movsl
add
enter
aas
sti
mov
xor
or
jb
hlt
mov
aaa
sbb
setg
mov
dec
outsb
lret
pop
outsb
loopne
stos
adc
iret
adc
push
jno
mov
inc
cltd
mov
mov
cmpsl
push
cmp
rcl
sti
mov
aam
add
cld
lret
fistpl
fwait
fwait
add
jae
jl
loop
lods
jbe
scas
push
xor
cmc
xchg
std
jae
clc
imul
aas
inc
repnz
and
sbbl
mov
push
jbe
repnz
or
cmpsl
popa
test
fcomi
mov
aad
xchg
mov
lods
popf
pop
push
mov
jae
addr16
pop
or
xchg
jmp
xor
negb
push
and
in
cmpb
cmc
out
imul
dec
push
cmp
jg
cmp
outsb
mov
mov
jbe
push
push
pop
in
dec
imul
xchg
or
sbb
and
sbbl
fwait
mov
inc
leave
and
jmp
dec
xchg
mov
in
sahf
jle
jge
sahf
fnstsw
sub
mov
loop
je
xchg
fldenv
jns
jnp
dec
fldl
inc
data16
scas
mov
mov
xor
sbb
mov
adcl
and
fptan
and
or
mov
sbb
pop
pop
mov
mov
fwait
loope
outsl
sbbl
xchg
cmp
lcall
push
clc
dec
push
sbb
jl
cmp
adc
cs
xorl
push
pushf
pop
or
cltd
into
or
or
mov
inc
fnstsw
xchg
sub
les
test
fbstp
test
push
mov
and
scas
push
xor
xchg
cmp
mov
jo
add
popf
jbe
add
add
inc
test
sub
xchg
outsl
add
mov
mov
cmova
adc
mov
push
pusha
je
aam
sub
xorb
out
xchg
inc
push
aam
add
mov
mov
movsl
sub
pop
ss
mov
pop
pusha
repz
push
stos
lds
das
xor
add
mov
xor
scas
mov
std
popa
xchg
shll
mov
mov
adc
cltd
popf
cmp
scas
xor
push
inc
dec
addr16
push
daa
imul
outsb
jno
movsl
jne
jle
mov
push
outsb
repnz
sti
cmp
stc
dec
mov
stos
adc
sbb
push
dec
push
or
sbb
idivl
inc
test
mov
popf
in
sarl
outsb
daa
mov
mov
repnz
push
cmpsb
cmp
stc
adc
scas
test
inc
outsl
xor
movsl
jb
pusha
lds
push
xchg
jne
into
mov
in
cmp
aas
dec
repz
aad
adcl
or
mov
lock
jecxz
push
imul
les
push
sub
pop
dec
outsb
stc
dec
jns
in
inc
cli
pop
xchg
inc
rorb
jno
mov
clc
or
aam
out
jmp
gs
mov
cmp
loope
or
leave
jns
push
jbe
cld
shll
faddl
push
push
aad
or
mov
xchg
cwtl
jle
and
loopne
xchg
fisttps
cmpb
inc
arpl
jb
jns
repz
jae
test
nop
loopne
mov
sub
int3
ss
mov
and
adc
lods
fwait
sub
lock
pop
int
ja
dec
mov
js
stc
cli
ret
out
aas
cmpsl
xor
stos
xchg
movsl
or
push
sub
xor
jo
push
pushaw
cwtl
add
adcb
mov
in
add
mov
test
xor
xchg
popa
shll
nop
out
add
notl
test
xchg
cmp
hlt
pop
mov
adc
sbb
jge
pop
call
lock
fcomps
xchg
stc
push
xchg
shl
xchg
in
insl
out
sub
pop
ret
sbb
push
inc
jno
jo
dec
sbb
adc
push
jnp
adc
push
and
jnp
mov
cmpsl
xlat
mov
ret
mov
jg
movsl
and
sub
cmp
jmp
testl
push
idivl
sub
scas
repz
lcall
push
inc
and
iret
sub
cltd
jle
iret
cmp
icebp
sub
lea
loop
popf
add
mov
repz
jge
xor
and
stos
push
xchg
inc
add
cmp
or
outsb
cs
in
fsubs
test
cmp
push
dec
jns
or
push
fucomi
std
fists
push
subl
xchg
mov
aam
xchg
xchg
inc
outsl
fcompl
jno
pop
mov
std
fs
mov
insb
jo
xor
popf
add
sub
cmp
push
or
and
stos
jbe
cli
dec
add
pop
sti
mov
fldl2e
cltd
outsl
out
ffree
sbb
mov
addr16
icebp
subl
cltd
popa
dec
popf
mov
xchg
lods
push
mov
dec
jecxz
daa
cmpsl
push
or
cmpsl
cltd
sbb
lods
rcrl
dec
mov
xchg
inc
mov
int
jns
pop
lahf
dec
shll
int
inc
dec
cmp
xchg
pop
outsl
aaa
push
push
fisttpll
pop
mov
lods
mov
loop
sub
jns
push
jo
cmp
push
push
dec
pause
and
cmpsl
fstpl
dec
ljmp
shll
sub
das
loope,pn
movl
jnp
sahf
pop
fidivl
mov
stos
lahf
push
lret
outsl
sub
ss
fistps
mov
loop
dec
xchg
fs
in
sub
ret
cmpsb
leave
insl
lahf
sub
push
add
or
xchg
xor
pop
das
cmpsb
loop
lds
inc
push
dec
loop
jp
cltd
dec
cmp
mov
push
mov
cld
inc
clc
or
mov
pop
mov
jecxz
adc
sahf
sbb
sub
xchg
xor
and
push
loope
negb
divl
adc
ss
inc
call
scas
repnz
push
lret
fcomp
xchg
idiv
insl
cmp
jle
ret
push
fisubs
pop
pop
clc
data16
pop
cmp
rclb
stos
insb
dec
and
dec
pop
stos
jb
push
std
dec
fbstp
mov
adc
mov
pop
push
out
shrl
dec
aam
mov
icebp
xchg
mov
mov
jae
jmp
pop
cwtl
or
lret
jae
mov
sub
jnp
popf
loopne
and
dec
add
aad
repnz
and
jae
rcl
or
aam
add
ds
pop
out
fisubrl
jmp
dec
mov
push
mov
xchg
test
adc
insl
repz
jae
cli
rorl
shrl
and
adc
mov
and
cli
pop
daa
iret
inc
test
xchg
jp
adc
or
je
xor
daa
mov
pop
int
sub
sub
mov
push
clc
cli
jbe
cmp
fcomps
cmc
dec
fstps
int
in
mov
repnz
test
outsl
testb
es
into
pop
ds
xor
es
sub
cmp
adc
fists
jne
add
out
mov
mov
cmc
fnstenv
or
sub
jno
andb
adc
push
lods
lds
xor
pop
xchg
les
hlt
jmp
cmp
jb
out
sub
add
pop
mov
lods
jne
xchg
popf
mov
xchg
lods
aaa
mov
add
andl
jb
and
xchg
mov
ljmp
pushf
fdivrp
jle
dec
add
fsub
jecxz
ss
xchg
out
test
mov
cmpsb
jecxz
cmp
cmpsb
call
movlps
fstpt
scas
std
inc
sbb
mov
or
es
xchg
mov
jne
xchg
or
cmpsl
sub
push
ds
cmp
imull
xor
sahf
das
jo
mov
sbbb
leave
jle
movsb
dec
cli
cmp
andb
mov
xchg
in
xchg
shll
mov
sbb
xlat
inc
push
arpl
rorb
test
jb
inc
xchg
xor
jl
stos
mov
repnz
test
xchg
pop
mov
aad
or
mov
push
into
mov
mov
xchg
sbb
jg
xor
mov
cli
and
dec
nop
pop
popf
inc
mov
inc
push
rcrl
push
daa
push
push
pop
out
fwait
sti
subl
sub
jmp
mov
and
push
hlt
movsl
aad
cmp
mov
std
mov
out
jl
cmp
adcb
push
gs
push
inc
test
mov
jb
cli
movsb
mov
jg
into
inc
push
lfs
test
or
into
mov
adc
mov
or
ret
jbe
call
imul
jp
stc
jmp
cmp
dec
add
out
or
loop
jae
cmp
sub
xor
xor
adc
lock
aaa
in
in
mov
mov
pop
cld
jp
test
adc
add
lds
fistps
or
sub
mov
or
ror
loop
jbe
lods
scas
or
push
in
xchg
mov
pop
lock
mov
jecxz
xor
lret
mov
pop
jge
stos
xor
jb
rcll
cmp
pop
mov
fidivs
fwait
mov
xchg
pop
xor
mov
xchg
xor
push
or
and
add
scas
lea
inc
sub
syscall
loopne
insb
inc
mov
out
fiaddl
aam
popa
xchg
sub
ss
cmc
cmp
aaa
lea
cmc
ja
mov
dec
sbb
pop
mov
into
pop
xchg
jns
cwtl
push
cmp
xchg
int3
lcall
inc
add
inc
aas
jnp
sbb
rcl
pop
aas
enter
cli
push
inc
cld
xor
adc
cltd
dec
push
cmpsb
dec
sbb
inc
shl
dec
sub
pop
push
std
add
mov
loopne
sub
and
push
sahf
xor
es
loope
jp
test
std
dec
adc
movsb
fildll
push
aad
cwtl
sub
fdivs
hlt
dec
int
mov
xlat
push
insb
ret
add
fs
sub
and
cmp
lock
jb
or
adc
out
inc
push
shl
or
popa
ret
mov
jmp
clc
xor
inc
and
mov
aas
out
cli
jmp
pop
sbb
iret
add
pop
mov
out
dec
gs
mov
ss
popf
pop
mov
je
jge
mov
push
push
sbb
cmpb
mov
pop
adc
stos
pop
pop
inc
scas
insb
outsb
popf
outsb
or
call
outsb
in
lret
mov
dec
xor
xor
mov
insb
pop
jbe
call
fisubl
inc
xor
cmp
add
jns
stos
push
ficoms
jg
cwtl
popa
lret
lods
mov
or
fucomi
sarl
dec
pop
out
lea
push
daa
std
imul
sbb
ljmp
push
test
jo
lds
xchg
andl
xor
or
mov
lds
call
lods
inc
pop
add
fmul
mov
and
jnp
sub
sub
fs
pop
int3
notl
lea
out
sub
out
push
fnstsw
andb
jmp
mov
fimuls
insb
pop
popf
and
fs
and
les
push
repnz
enter
shrl
jb
shlb
xchg
cltd
jns
cmpsb
in
or
xchg
push
loopne
push
xchg
imul
into
fildll
call
dec
enter
mov
adc
jl
add
insb
cltd
sarl
dec
pop
fidivrl
mov
pop
push
jns
cmc
or
xor
dec
push
add
dec
daa
fdivs
mov
jnp
scas
sbb
je
shrl
mov
xchg
xor
sub
clc
ret
iret
sub
in
pop
sbb
jns
cmpsb
in
mov
pop
push
mov
test
ljmp
mov
inc
es
jp
pop
cmp
push
mov
add
mov
and
or
shrb
data16
into
jbe
ret
std
int
cmpsb
adc
orb
js
mov
add
inc
stos
leave
adc
pop
icebp
cmp
or
sbbb
dec
or
mov
loope
sti
stos
outsb
jg
fmuls
add
sahf
sub
gs
dec
out
mov
outsb
mov
adc
je
and
xchg
movb
pop
cs
daa
jecxz
add
mov
aaa
cmpsb
out
adc
je
aad
div
adc
je
add
mov
ljmp
sub
cwtl
lea
push
cs
lock
xchg
xchg
push
add
mov
or
rorl
popa
xchg
cltd
push
push
out
xchg
or
adc
shrb
loope
pop
stos
mov
mov
outsl
adc
jge
lahf
inc
or
add
sbb
or
jecxz
repnz
fbstp
imull
xchg
jmp
xchg
shl
pcmpgtb
push
inc
push
mov
hlt
sub
cmp
imul
enter
jbe
lock
add
mov
out
lahf
sub
inc
out
incb
jo
push
mov
iret
stc
in
aam
sub
add
sub
mov
data16
dec
inc
shrl
mov
and
mov
pop
fcomps
and
pop
adc
insb
and
in
movsb
nop
mov
adc
out
mov
popf
cltd
and
pop
icebp
aad
in
fistps
scas
nop
xchg
aam
sbbb
cs
loopne
jo
shl
sub
jmp
int3
sbb
mov
mov
xor
cltd
ljmp
shlb
mov
cmp
notl
and
pop
shl
mov
push
push
lea
or
xlat
cltd
jo
pushf
outsl
gs
lods
mov
arpl
sahf
ja
and
pushf
jg
sub
repz
sahf
paddw
enter
or
mov
and
inc
fadds
ret
rorl
call
stc
jnp
fstpt
sbb
pop
add
in
xchg
mov
mov
dec
push
loopne
and
xchg
push
xor
in
aaa
outsb
cmp
mov
adc
mov
xchg
pop
stos
inc
push
loopne
out
sbb
cmpsb
and
popa
leave
enter
xchg
xchg
sub
dec
mov
sbb
fs
jge
mov
jnp
dec
in
movsl
add
std
mov
movsb
cmp
rcll
enter
cmp
inc
lret
cli
enter
or
std
and
cmp
xchg
lret
divl
divb
lret
out
mov
jmp
fidivrs
push
aad
cmpsb
rcll
in
jnp
push
loop
push
adc
xchg
cmp
int3
dec
pusha
add
aad
ret
in
pusha
xchg
jne
andb
lret
mov
popa
pop
fcoml
push
cmp
int
dec
add
sbb
mov
repz
pop
pop
andl
xor
mov
dec
xorl
inc
sarb
in
int3
mov
cmp
idivl
stos
mov
jns
and
fsubl
insl
nop
lret
sbb
aaa
pushf
imull
int3
loop
subb
loopne
and
lock
lock
sub
dec
xor
mov
xor
inc
daa
imul
mov
cmp
mov
add
stc
enter
jo
or
jle
mov
imul
cmp
in
out
test
mov
jne
cmp
push
fnsave
or
add
stc
and
test
xlat
shrb
push
push
out
xchg
test
adc
sub
xor
repnz
mov
add
sub
fisubrs
addr16
mov
dec
jl
js
in
fimull
mov
popf
fildll
dec
mov
repz
shr
jae
repz
pop
sahf
subl
mov
add
sahf
lret
xorb
sarb
lds
ss
test
iret
sahf
adc
das
subl
mov
sbb
mov
insl
jb
sub
mov
adc
lea
jo
jl
scas
arpl
mov
stos
cmpl
stc
jno
popa
mov
jecxz
mov
push
adc
mov
lret
fs
pushf
fs
and
push
inc
popf
outsb
cs
cmp
hlt
cs
adc
xor
das
jge
dec
notl
ss
dec
pop
sbb
adc
adc
push
movsb
push
jbe
cmp
sbb
xchg
js
push
push
data16
xchg
jno,pt
mov
inc
rclb
nop
in
mov
add
cmpps
rcll
mov
cmpsb
jecxz
mov
idivl
mov
sbb
add
cmp
je
push
xor
sub
das
aaa
fdivrl
arpl
cmp
mov
cmpsb
cwtl
clc
sbb
test
out
std
rorb
negl
test
jp
mov
loopne
cmp
jne
scas
and
sti
int
clc
or
push
inc
fs
sub
sbb
jns
xchg
jp
cmc
pop
int
enter
or
js
cmpsl
fisubl
imul
sbb
xchg
out
out
data16
out
pop
aaa
in
mov
lds
cmp
xchg
mov
jae
xchg
sub
cmpl
sub
into
mov
and
xchg
mov
dec
jbe
adc
frstor
push
mov
lahf
and
icebp
ficompl
mov
cmp
imull
lods
mov
call
jae
xchg
test
or
pop
and
xchg
stos
ljmp
aas
rclb
int
xchg
xorl
arpl
push
cmp
xor
ds
lret
mov
out
pop
mov
rcl
jno
xor
dec
inc
add
faddl
push
mov
sub
cld
xchg
dec
push
mov
jo
mov
fmull
ja
mov
das
mov
imul
jmp
push
arpl
stos
mov
pop
xchg
dec
icebp
leave
dec
push
mov
pop
xchg
xchg
jns
test
xor
mov
ss
int3
cmp
pop
adc
cmpsl
mov
lods
jg
enter
pop
pop
mov
loop
loop
std
lret
jb
add
clc
hlt
filds
pushf
lret
ds
in
and
inc
movsb
std
cmp
sbb
mov
arpl
aad
add
adc
fisubrl
test
fwait
aad
aam
fisubl
pop
addl
dec
sbb
dec
int
fwait
int3
mov
out
pop
adc
xchg
inc
mul
lock
xchg
cltd
mov
gs
or
out
rorl
std
xchg
adc
push
out
lret
enter
sti
or
lcall
jbe
cli
lahf
clc
jl
lcall
jp
stos
test
clc
inc
pop
popf
xor
adc
ret
mov
mov
push
adc
call
mov
cltd
fdivr
push
aad
leave
cwtl
fcoms
fiaddl
mov
lods
push
sbb
inc
add
outsb
stc
fbld
sbb
out
movsl
cmp
inc
pop
imull
loope
pop
andl
xchg
or
mov
lret
mov
sub
dec
cli
stos
xchg
add
mov
mov
mov
adc
loope
adc
xchg
or
jbe,pn
pop
push
lods
jle
and
sbb
out
xchg
adc
clc
sbb
pop
rcrb
jns
nop
pop
cld
lret
iret
adc
orb
jb
fadds
pop
dec
cmpl
push
stos
enter
sbb
orb
jmp
std
and
sti
sub
mov
mov
test
mov
push
lds
jns
xchg
cmc
xor
sbb
sub
rolb
repnz
push
fstpt
inc
jecxz
fs
les
pop
pop
xor
lret
notb
orl
loope
xchg
push
xchg
test
outsb
adc
xchg
cmpsl
js
sbb
insl
add
mov
lds
push
insl
cld
sub
jl
shlb
clc
shlb
dec
fdivr
bswap
out
aam
sub
jg
mov
std
mov
incl
jl
insl
cmc
jge
inc
test
cmpsl
pusha
test
fst
imul
add
jg
adc
aaa
dec
jg
push
push
mov
daa
les
outsb
mov
popa
cmovae
xchg
imul
adc
lret
out
addr16
jb
jp
push
dec
fwait
out
outsb
cmpsl
fcomip
push
notb
ret
orl
aas
stos
mov
sub
sub
and
outsl
inc
adc
dec
adc
push
mov
or
fstl
aaa
add
xchg
fdivl
ja
dec
jnp
fs
out
out
loope
jl
push
scas
mov
lahf
adc
ret
inc
clc
ja
aaa
ret
lds
jl
jp
jb
imull
xor
mov
loop
cli
mov
mov
adc
cmp
test
addb
xchg
call
mov
sar
decb
sahf
or
sub
cmp
filds
repnz
roll
lods
shl
jp
std
mov
or
add
decl
xor
inc
or
std
aam
fcompl
in
or
imul
dec
adc
lcall
shrl
in
jg
jecxz
iret
jae
jns
aam
loope
mov
push
icebp
pushw
push
js
out
jg
mov
int3
mov
inc
inc
mov
add
sbb
insl
jmp
add
xchg
movsb
movsl
mov
rolb
repnz
gs
lahf
aas
pop
and
in
push
test
je
mov
cmpb
pop
out
mov
sbb
in
sbb
xchg
test
push
or
sbb
or
or
mov
icebp
sub
scas
int3
mov
stc
xlat
jno
sahf
fildll
out
mov
inc
mov
lahf
out
xchg
sub
lock
cmp
push
cltd
sbb
cmpsb
icebp
jmp
mov
adc
add
mov
and
sbb
enter
lock
mov
in
pop
and
addr16
and
scas
bound
loop
inc
mov
cmp
addr16
fmul
aas
mov
sub
fsts
enter
jno
sub
mov
scas
call
lds
orl
lahf
or
mov
rcrl
push
rclb
pop
loope
fildll
ja
xor
shll
cmpb
movsb
mov
xor
test
push
push
lahf
stos
fs
iret
fst
mov
clc
mov
imul
pop
xchg
ret
negl
inc
xchg
insb
xor
int3
xadd
jmp
xchg
stos
imul
adc
std
cmp
fdivr
stos
ret
jo
fmul
outsb
cmp
cltd
fdivp
mov
xor
dec
push
test
cmpsl
inc
mov
in
inc
xchg
imul
cmp
cmp
lea
bound
pop
inc
das
inc
dec
outsb
add
jbe
pop
lret
add
and
sub
mov
and
push
imul
inc
ljmp
pushf
inc
xor
jle
cmp
fistps
jecxz
mov
inc
movsb
in
ret
add
pop
cwtl
in
notb
scas
mov
ffreep
loop
mov
out
push
fcompl
nop
inc
mov
mov
xlat
imul
and
and
mov
pushf
push
loopne
add
test
sahf
push
push
or
js
jle
bound
cwtl
and
movsb
push
sub
enter
stc
adc
sub
push
aad
ds
mov
nop
ja
adc
push
or
arpl
cmpsl
jge
dec
xchg
adc
ds
mov
mov
push
mov
pop
icebp
pop
mov
pop
sbb
add
jnp
mov
add
xlat
fisubrl
lods
popa
das
loop
mov
cmc
ljmp
pop
adc
leave
rorb
jbe
mov
push
shll
out
jbe
and
push
adc
or
mov
test
pop
rolb
in
fistps
xorb
adc
add
xor
stos
mov
in
push
das
fisubl
mov
stos
cmp
popa
fcmovu
dec
arpl
pop
daa
fcmovnb
cmp
mov
pop
cltd
cmp
int3
aam
fcomp
scas
pop
or
les
pop
push
cmpsb
jns
adc
cmp
add
clc
jb
dec
cwtl
repnz
cmp
lods
push
loop
mov
jmp
dec
sub
rcrb
dec
push
idivl
pop
sub
fnsave
push
adc
nop
mov
sbb
xor
pop
add
popf
icebp
push
ficompl
int
adc
int3
pusha
and
jne
add
loop
cmp
bound
flds
xchg
iret
dec
xor
adc
pushf
sbb
mov
imul
push
inc
xchg
rol
or
cmp
mov
mov
cwtl
icebp
movsl
fistpl
add
outsl
addr16
sub
and
jp
mov
rcrl
lods
adc
inc
push
mov
pop
or
sub
in
cmpsl
jns,pt
and
test
mov
jo
fsubl
bound
mov
das
shll
mov
jo
repz
pop
adc
movsl
setp
mov
mov
mov
or
pop
adc
or
sub
sub
imul
das
les
jno
fimull
insb
data16
jecxz
inc
jno
cmp
mov
fstl
push
paddq
lock
stos
cli
loope
shrl
out
mov
lcall
dec
jecxz
and
sbb
icebp
ds
iret
mov
inc
popa
mov
out
rcll
inc
push
and
pop
mov
rclb
rcrb
fsubrl
cmp
jns
loopne
call
outsb
inc
sahf
fidivrs
les
xor
jb
and
out
jge
sub
add
xchg
fwait
push
push
pop
mov
or
jg
jle
push
pop
jne
daa
pop
push
and
pusha
xorl
mov
ficompl
dec
sub
mov
loopne
aad
pushl
push
mov
pop
nop
rcrb
fdivrl
scas
ljmp
fisubrs
or
sbb
inc
cmp
outsb
pop
cltd
pusha
in
mov
lds
and
sar
aam
and
and
cmpsl
or
pop
shl
imul
adc
std
cmp
push
aad
pop
cli
add
cmp
stos
sbb
cmc
jmp
dec
imul
aaa
xor
mov
ror
hlt
imul
inc
add
into
mov
pusha
push
loopne
icebp
adc
sarl
mov
sub
movsb
arpl
les
out
mov
add
and
les
loopne
mov
mov
imul
pop
cmp
int
xchg
jb
cmp
adc
frstor
sbb
add
push
pop
xchg
mov
mov
fcmovne
pushf
adc
cmp
pop
in
daa
dec
mov
arpl
loop
pusha
sub
xchg
pop
sti
out
lea
out
mov
subb
and
or
sbb
fmuls
scas
jp
adc
out
cmp
jo
std
lret
xchg
repz
cmp
rclb
push
js
outsb
rorb
add
jno
shrl
repz
add
dec
stos
pop
cli
inc
sti
pop
mov
mov
inc
fmull
leave
pushf
popa
dec
and
or
arpl
daa
mov
shlb
cmpsl
bswap
cmpsb
and
jbe
pop
fwait
sbb
popf
sbb
lret
sbb
popf
mov
adc
xchg
dec
mov
iret
mov
dec
push
stos
dec
xor
aad
clc
mov
je
push
adc
xchg
faddl
loopne
push
aaa
dec
xchg
jmp
xlat
jle
aaa
out
lods
jae
add
adc
in
xor
inc
jns
lods
mov
dec
mov
sub
or
sbbl
dec
shll
notb
jge
stos
xchg
push
lock
cmpsb
sbb
push
cmpsl
or
test
push
in
ficompl
push
dec
cmp
ja
xor
insb
roll
lahf
xchg
sbb
jl
sub
push
enter
int3
into
cwtl
adcb
xchg
out
xor
stc
in
jl
daa
movsb
fldt
adc
fs
or
js
fbld
imul
sub
add
fiaddl
jnp
sub
mov
rsm
cs
inc
mov
incb
xor
popa
sbb
stos
jb
clc
xor
loop
mov
out
jmp
sub
cmp
loop
jo
jbe
sub
inc
adc
ljmp
xchg
jns
mov
push
add
sbbb
sub
xlat
lcall
push
fcoms
push
sub
xchg
test
movsl
adc
mov
dec
and
pop
jo
mov
gs
sub
enter
lods
rol
movsl
pop
mov
push
mov
sbb
xchg
xchg
inc
into
xchg
fabs
imul
lret
jle
movsl
inc
ljmp
fmuls
xchg
sti
cld
add
xor
out
sbb
push
add
and
push
mov
or
sarl
xchg
and
and
and
adc
xchg
push
xchg
inc
dec
mov
sti
pop
jb
loop
loop
inc
idiv
inc
or
pop
cmp
mov
in
push
js
push
lcall
pop
adc
out
loop
push
add
push
pop
push
adc
mov
int3
test
in
lea
pop
int3
popf
push
subl
and
sbb
int
cmp
sbb
or
fmuls
sahf
lcall
pop
fmuls
sbbb
mov
repz
fsubrs
or
movsl
les
repnz
je
fcoms
add
inc
imul
int
pop
shrl
fnstenv
or
push
mov
sahf
xchg
jo
nop
out
cmc
es
loope
shrb
pop
out
stos
aas
lods
sbb
daa
xor
ds
push
in
movsl
inc
xor
mov
mov
insb
xchg
into
cmpsb
and
ja
call
das
es
and
xor
mov
jo
inc
enter
xor
sbbl
sbb
aas
push
inc
adc
jp
pop
je
std
es
xchg
push
or
cli
jo
pop
cmp
and
call
mov
lret
xchg
outsb
pop
nop
out
es
push
pop
out
push
loopne
mov
notb
enter
sub
shrl
add
rol
dec
xchg
pop
out
pushf
in
jp
call
cmp
fcmovu
mov
stc
dec
push
gs
sub
add
fdivs
cmp
mov
rcll
insb
push
fbld
adc
pushf
push
fcoms
sub
ror
mov
or
lea
mov
jp
xorb
jnp
mov
es
out
pop
mov
cmp
add
popa
data16
inc
lea
lock
mov
std
pop
stos
cmp
cld
cltd
subl
int
pusha
and
mov
add
in
rcll
roll
dec
xchg
scas
xor
stc
je
mov
test
aaa
in
pop
push
sub
inc
fcomp
out
arpl
lea
mov
testb
rol
testl
xchg
jecxz
repz
pop
xor
mov
xchg
push
mov
push
cmp
add
cld
leave
or
mov
lds
aam
jns
sarb
int3
sub
out
out
pop
mov
xor
cmp
mov
pop
fiaddl
push
xlat
jns
inc
adc
add
adc
inc
mov
mov
fisubs
out
push
out
and
into
push
mov
call
das
inc
jb
push
push
push
xchg
rcr
sub
imul
call
jp
cld
mov
push
adc
add
dec
inc
xchg
rcl
jmp
pop
daa
xchg
sti
xor
imul
sub
aam
imul
inc
dec
stc
sti
pop
dec
mov
ret
sub
xchg
mov
neg
mov
mov
lcall
sarb
in
popf
loop
imul
mov
std
sub
push
push
aam
xchg
pop
cltd
inc
jnp
sbb
cltd
mov
or
add
dec
test
jp
mov
inc
bound
jle
cli
or
push
repz
cltd
fadds
lock
cmp
sub
sub
inc
xor
aam
push
scas
push
dec
mov
dec
addr16
xchg
or
jnp
push
push
cwtl
inc
ljmp
test
jecxz
inc
mov
mov
jo
push
sbb
repz
outsb
mov
fcmovnu
sub
xchg
inc
out
jb
arpl
hlt
xchg
and
inc
call
mov
in
mov
xchg
daa
loope
jne
mov
cmpsb
in
xor
inc
adc
jnp
mov
jp
pop
mov
fldcw
xchg
dec
push
lods
shlb
add
push
push
in
bound
dec
int
add
sub
pusha
sbb
mov
mov
stos
sub
out
jl
leave
enter
stos
jg
sbb
push
xor
fistps
decb
sub
and
push
orl
xchg
jae
dec
sar
out
mov
or
xlat
add
shl
pop
jae
ja
push
mov
aad
ror
aam
incl
add
mov
cld
out
add
pop
dec
das
je
jno
or
test
arpl
and
xchg
ljmp
dec
mov
sub
inc
jns
imul
dec
into
hlt
fstp
cs
int3
in
sub
loope
dec
add
divb
mov
call
pop
and
jnp
imul
lret
add
cmp
jns
xchg
mov
adc
sub
add
adc
add
push
xchg
mov
sbb
shrb
outsb
out
jb
add
sbb
test
aam
cmpsb
adc
addb
shrl
or
pusha
in
hlt
sub
sub
mov
or
xor
jo
addr16
xor
jae
daa
aam
scas
popa
pop
mov
jbe
add
lret
icebp
xchg
int
imul
movsb
test
es
cmp
push
xchg
cmp
movsl
xchg
or
sbb
cmpsb
add
popl
pop
xchg
mov
xchg
xchg
insl
mov
push
dec
pop
cmpsl
mov
and
or
icebp
jg
xor
movsb
shlb
rorb
and
rorl
dec
mov
insl
dec
inc
out
jb
cld
dec
mov
popf
pop
out
lcall
icebp
mov
lret
lods
xor
ds
or
testl
mov
xor
inc
mov
push
sub
dec
add
cli
jno
stos
das
push
xor
out
jo
mov
pop
mov
mov
pop
cmp
scas
sbb
outsb
out
sub
sti
pop
dec
add
pop
outsl
sbbb
cmp
cmc
and
sbb
jle
add
xchg
push
xchg
and
bound
imul
popf
movsl
aad
push
mov
add
mov
jb
loop
lea
pusha
sub
dec
scas
call
pop
int
sub
mov
cli
sbb
call
jbe
dec
push
es
aaa
and
cmp
pop
ljmp
cwtl
xor
dec
imul
xchg
inc
xlat
pop
and
mov
jne
sub
dec
xchg
shrl
ja
into
add
push
call
cmp
ltr
xchg
shr
aam
mov
xor
rorb
sar
mov
out
pushf
sub
dec
repz
mov
cwtl
and
sbb
inc
scas
dec
dec
clc
inc
jmp
test
mov
xchg
inc
mov
leave
xchg
incb
pop
cmpsl
mov
pop
mov
and
pop
or
stc
andl
add
or
adc
cmc
add
popf
int
pop
inc
lret
mov
cmp
aaa
sub
jg
sbb
or
loope
mov
outsl
pop
subl
lahf
scas
lahf
in
and
sbb
add
mov
lahf
or
or
pop
push
xor
cmpsb
js
test
test
fninit
jmp
lods
lcall
cmpsl
jno
push
icebp
add
leave
jno
pop
ja
sahf
insb
mov
mov
jecxz
adcb
push
rcl
pop
call
sub
cmp
or
mov
adc
dec
subb
sarb
jno
loop
adc
jne
jmp
inc
inc
mov
inc
cmc
xchg
mov
es
push
outsb
in
aad
outsl
insl
dec
xor
xchg
mov
dec
sbb
adc
sbb
adc
adc
dec
cmp
ljmp
test
out
outsb
cld
jmp
mov
push
dec
lret
imul
std
sbb
pushl
js
clc
cmp
pop
push
inc
test
aad
push
adc
lcall
cmp
mov
inc
push
fstpt
adc
adc
hlt
stc
sub
dec
push
mov
mov
scas
test
cli
adc
cmp
out
push
lock
push
lahf
push
aaa
pop
push
outsb
iret
adc
inc
sub
neg
pop
mov
jo
and
push
pop
and
mov
vmulsd
leave
in
cmc
iret
ret
roll
pop
fs
aas
rclb
push
dec
sub
adc
sbb
mov
dec
imul
jmp
mov
jmp
xor
xchg
xchg
jne
dec
mov
sub
adc
testb
les
test
inc
sbb
inc
out
int3
cmp
add
hlt
dec
pop
lret
sub
push
or
shrl
bound
fwait
js
adc
inc
popa
inc
mov
jle
mov
xchg
sbb
stc
xchg
push
pop
xchg
rcr
xchg
xchg
dec
andl
fsubs
out
lahf
sub
sub
cmp
jmp
lret
icebp
mov
test
push
in
mov
jmp
mov
loop
ds
mov
jmp
cld
jae
or
pop
enter
adc
mov
adc
int3
sub
das
fimuls
cmp
in
lret
sbb
shrl
sub
pop
push
mov
lods
dec
pop
sahf
mov
call
push
pop
repz
stc
mov
movsb
fistl
push
adc
scas
pushf
push
int3
xchg
xchg
dec
sti
das
je
dec
cmp
hlt
add
repnz
test
mov
iret
jno
sub
dec
inc
inc
mov
push
aam
imul
jno
pop
xchg
mov
in
sbb
push
adc
mov
sahf
nop
jne
dec
aas
or
mov
les
hlt
push
insl
xchg
inc
pushl
jl
mov
scas
or
cmp
outsl
testb
mov
fisttpl
outsl
sub
push
mov
push
push
repz
inc
fdivrl
pop
out
fistpll
push
aad
clc
inc
jo
jmp
sub
xchg
jne
add
mov
ret
repnz
push
or
mov
xor
sbb
popa
scas
xchg
out
call
outsl
dec
mull
inc
and
inc
arpl
cmp
test
sbb
jno
ds
outsb
mov
das
lcall
sarl
in
mov
jge
scas
cmpsl
adc
pop
std
push
pop
in
xor
jmp
repz
cmp
fwait
sbb
cltd
mov
mov
xchg
cli
cltd
xchg
decl
pop
jge
jmp
js
ret
jmp
adc
outsl
pop
repnz
adc
loop
add
xchg
fsts
adc
inc
pop
loope
xchg
inc
int3
aas
sub
push
jae
xor
sbb
mov
shlb
mov
das
sbb
jb
fs
xchg
sub
push
adc
mov
pop
fisubrl
add
ret
cli
sbb
sub
jl
fidivl
fsubl
jp
movsb
xchg
cmp
icebp
ret
scas
push
into
dec
lcall
add
or
pusha
mov
mov
add
lret
outsb
push
out
xlat
loopne
stc
mov
xchg
xchg
dec
jae
in
cmpsl
or
and
mov
pop
ljmp
dec
aam
mov
mov
out
mov
mov
push
addr16
sub
lds
sbb
xor
xor
and
aad
imul
cli
adcb
movsl
in
aas
bnd
adc
icebp
push
aaa
shlb
jg
push
jecxz
or
inc
push
add
xor
ret
xor
mov
lahf
lds
pop
inc
dec
test
lcall
cmc
mov
mov
lods
loop
imul
bt
insb
ret
jge
test
lret
and
mov
or
xchg
fnstcw
lahf
or
shll
push
fistl
das
push
mov
and
jmp
jecxz
inc
mov
daa
hlt
mov
and
scas
sub
and
dec
pusha
or
jne
imul
iret
sbb
sbbl
push
js
adc
clc
in
aad
mov
inc
fwait
and
shl
mulb
dec
pop
mov
in
push
jg
out
pop
pop
popa
mov
das
clc
xor
mov
call
xchg
stos
rcrb
jmp
xchg
add
out
xor
push
lahf
das
dec
test
cwtl
pop
in
and
jb
into
negl
mov
fwait
enter
pmulhuw
stos
aam
push
inc
adc
in
mov
mov
sub
cs
ds
mov
cmp
or
mov
inc
xchg
ret
sbb
xchg
sbb
mov
or
jbe
clc
outsl
sti
or
xor
xchg
mov
scas
cltd
sbb
push
add
movsb
fwait
sbb
xor
ret
fmulp
cmc
shrl
mov
lret
jmp
sbb
outsl
cltd
hlt
push
popf
and
fdivs
in
shll
decl
or
jnp
sbb
xor
push
insb
add
xor
and
add
mov
jne
nop
xor
mov
inc
enter
lret
loope
ds
pushf
mov
push
cmp
xchg
jmp
out
mov
out
pop
loope
movsl
sub
lahf
or
jo
call
xchg
sahf
adc
das
sahf
push
push
pop
sbb
inc
pop
lcall
push
xor
push
arpl
int3
xchg
push
pop
jbe
jae
call
or
mov
call
and
push
mov
mov
das
or
jmp
xchg
dec
gs
sub
jae
push
sub
in
or
xorb
push
push
adcb
addr16
adc
pop
mov
popf
test
shl
add
fnstsw
xchg
inc
lahf
icebp
daa
sbb
add
repz
jl
mov
inc
insl
jne
fdivs
sub
out
jae
out
push
leave
fldt
push
push
enter
gs
push
ret
or
andl
stc
aas
push
mov
xchg
ja
push
fsubrs
lods
in
ss
call
stos
pushf
xor
call
sbb
stos
cmpsb
lret
sbb
rcl
adc
lret
je
or
cmp
xor
in
push
sub
out
xor
int3
push
out
mov
insl
inc
pusha
aam
cmpsl
sahf
loope
mov
pop
inc
lcall
lds
int3
rcr
lret
push
push
xchg
add
rcr
xchg
jne
dec
mov
sub
int
jp
icebp
xchg
jg
pop
push
xchg
pop
jg
pop
jecxz
or
lret
sti
lret
add
push
in
jb
push
inc
ret
ret
pop
push
in
adc
aad
lods
ret
pusha
mov
sbb
xor
pushf
xor
dec
jbe
xchg
xchg
rorl
out
dec
stos
pop
in
jns
shrb
stos
cmp
rcrb
push
cltd
xor
aad
ficoms
aaa
repnz
dec
popa
mov
loop
or
cmp
mov
ret
hlt
rcrb
pop
inc
mov
mov
std
loopne
inc
ja
adc
icebp
sbb
dec
mov
xlat
push
push
fstps
mov
fstl
inc
hlt
inc
push
jle
data16
push
adc
xchg
lahf
insl
jecxz
pop
mov
jo
cmp
or
jmp
pop
es
xor
lcall
call
outsl
add
xchg
ret
pushf
inc
insl
push
movsb
inc
mov
cmpsl
dec
inc
jns
mov
lds
imul
subb
sub
popa
lahf
pusha
dec
stos
stos
mov
cmp
pop
call
push
js
jo
sub
xchg
dec
jb
mov
and
daa
test
xchg
adcl
xor
cmpsl
xchg
dec
add
inc
push
ds
out
lods
push
dec
sahf
mov
shlb
mov
mov
aad
and
and
push
or
cmp
mov
inc
mov
stos
rcrl
sarb
repz
incl
push
jp
les
gs
decl
cmp
leave
xor
stos
xchg
loopne
jl
aaa
mov
mov
roll
hlt
cmc
xchg
lea
and
testl
lods
push
lods
ret
pushl
or
inc
pop
cmp
xchg
xor
jge
dec
loopne
mov
lret
repz
cmp
mov
scas
out
dec
testb
inc
inc
outsb
xor
lea
lret
mov
stos
mov
jge
cmp
xchg
data16
repnz
inc
js
lock
add
sub
xchg
ja
mov
push
and
cli
mov
jle
loopne
push
jp
mov
fmul
out
outsl
push
push
mov
flds
fwait
mov
xor
je
sbb
jb
mov
or
xor
imul
into
imul
cmp
movsl
pop
push
loope
push
test
dec
or
push
mov
in
stc
mov
jmp
add
cwtl
ret
cltd
mov
add
mov
add
icebp
xor
mov
call
ret
mov
jle
sbb
or
mov
repz
jne
int
movsb
adcb
jo
dec
int
in
jbe
add
add
mov
call
mov
xor
in
push
popa
mov
pop
aaa
push
ret
inc
mov
adc
and
xchg
cmp
dec
test
enter
xchg
iret
mov
arpl
stos
jmp
mov
mov
jge
push
push
pop
dec
mov
pop
dec
and
mov
test
push
and
dec
adc
jl
cmp
aad
xchg
push
xlat
in
dec
inc
or
lock
xor
sti
rolb
or
std
in
out
cmpsl
dec
imul
jnp
mov
insl
addr16
test
mov
fists
mov
sbb
imul
and
inc
xchg
cmp
imul
pop
or
and
sub
test
dec
stos
push
outsb
in
jecxz
imul
cmpsb
cmpsl
cmc
cmp
xor
aaa
imul
sub
cmc
sahf
adc
movsl
ss
inc
shlb
aad
pop
ret
sbb
add
mov
pop
jmp
subb
test
pop
mull
loop
xchg
insb
jne
fldt
adc
hlt
cmp
pop
add
push
pop
in
mov
adc
pushf
dec
mov
mov
jb
xor
and
std
jae
adc
push
addl
jp
dec
sbb
scas
and
xor
inc
out
in
filds
mov
scas
xor
cltd
xchg
scas
mov
pop
rorl
xchg
loopne
lock
mov
ret
loope
adc
popa
jecxz
fsubl
mov
jno
xor
and
roll
aam
dec
mov
lahf
iret
jns
dec
lea
hlt
pushf
in
mov
rclb
push
shlb
fimull
imul
scas
inc
fwait
mov
lods
pop
test
shlb
push
add
mov
pop
outsl
or
in
in
scas
in
jbe
or
add
add
insb
movsb
or
pusha
fstpl
iret
xor
cld
cmpl
loopne
or
in
nop
aam
js
fnstsw
aam
push
fmul
enter
stc
add
fsubrs
into
iret
pop
aaa
adc
fstp
hlt
jecxz
cmp
inc
and
jns
iret
daa
addr16
scas
sub
dec
mov
xchg
pop
fistps
cmpsl
push
inc
push
out
mov
lcall
and
test
push
xor
std
mov
xor
or
aaa
add
notl
mov
sub
pop
and
cs
pop
rclb
movsb
push
xor
push
jge
cmp
adc
inc
fsubr
mov
lea
and
push
es
dec
push
roll
fistpll
mov
dec
into
pop
ja
xor
jb
inc
xor
je
push
mov
pop
mov
into
cwtl
lods
cmpsl
jmp
inc
jp
test
adc
or
dec
decb
dec
jle
into
xchg
ret
adc
idivb
sbb
sbb
sbb
test
daa
testl
pop
cmpsl
pop
sbb
mov
aas
mov
cmp
ja
popf
mov
adc
test
xchg
sub
fwait
xchg
fisubrl
xlat
inc
dec
pusha
in
gs
dec
lret
mov
mov
pop
jecxz
imul
xlat
and
test
xchg
sbb
xlat
mov
jno
pop
xchg
andb
mov
inc
inc
lret
out
popf
xor
inc
mov
rclb
fldz
xchg
andb
push
mov
adc
mov
xchg
pop
cmp
mov
ret
jnp
enter
subb
push
mov
call
mov
in
mov
aaa
mov
imul
into
das
pop
out
loop
mov
inc
cltd
das
or
mov
pop
push
push
inc
mov
jp
cmp
imulb
in
clc
aam
aaa
inc
cmp
enter
cmp
pop
mov
pop
das
mov
aas
or
insb
jle
mov
mov
scas
js
hlt
call
loop
pop
scas
ffree
es
or
repz
add
bound
cwtl
lea
or
inc
adc
adc
push
sub
and
and
push
and
xlat
sbb
aas
lock
mov
xchg
subb
aaa
pop
std
or
push
imul
repnz
cmc
cld
divl
dec
lcall
cmp
xchg
les
std
xchg
jp
mov
sti
enter
jl
push
cld
loopne
sub
je
in
fwait
and
lods
cmp
imul
mov
dec
fidivrl
mov
fwait
inc
clc
sub
test
out
or
or
push
scas
les
mov
aaa
mov
sbb
mov
shll
fmuls
adc
xor
lea
xchg
push
std
stos
adc
stos
ljmp
dec
test
inc
rcrb
into
int3
test
mov
and
adc
cmp
ljmp
mov
cs
inc
lahf
insb
pop
out
stc
sub
ljmp
jecxz
lock
ds
popa
nop
mov
lea
cmp
or
test
sub
insb
dec
jg
push
sti
mov
mov
cmp
outsl
dec
sub
ret
mov
inc
jb
adc
pop
lock
loop
dec
xor
mov
mov
sub
mov
cs
adc
jl
pop
mov
xchg
dec
jne
test
packssdw
outsb
or
les
pop
inc
inc
pop
sub
jge
xorl
add
push
enter
pop
sub
xchg
popa
fdivr
cltd
aaa
hlt
jns
or
out
xchg
jns
sub
and
adc
roll
xchg
xor
mov
inc
adc
jb
cmp
les
xchg
stc
sarl
pop
pop
sub
test
pop
data16
inc
mov
jno
mov
movsb
mov
mov
cltd
shll
mov
adc
lds
jbe
sub
jg
arpl
xchg
shl
movsl
mov
mov
cmp
pop
bound
les
clc
scas
shr
or
lret
cmc
int
daa
xchg
cli
pop
and
jmp
mov
xchg
inc
cwtl
sub
cmpsb
cmp
es
sub
lea
add
and
dec
pop
lea
mov
fdivrl
inc
push
popa
lret
cli
and
xchg
cmpsl
add
cwtl
mov
sbb
test
fldt
sbb
je
in
ljmp
xchg
cmp
outsl
fdivrs
je
clc
test
ret
push
fnstsw
inc
and
int3
cmpsb
xor
dec
aam
mov
and
stos
xor
sbbl
les
push
punpckhdq
and
mov
mov
test
xor
and
movb
sbbb
aam
jmp
int3
xor
ds
ja
pop
dec
rclb
cld
xchg
cltd
add
mov
scas
or
xchg
ja
push
adc
inc
popl
adc
dec
clc
mov
imul
std
cmp
push
xchg
mov
bound
rclb
xchg
popf
int
adcb
shrl
add
or
dec
mov
in
test
neg
stos
popa
adc
test
ss
and
xor
hlt
scas
xchg
cmp
mov
mov
add
mov
jle
inc
and
daa
clc
jnp
xchg
or
stos
repnz
mov
iret
das
or
mov
insb
imul
int
xchg
enter
xor
jg
insb
insl
inc
pop
or
sub
adc
mov
aaa
clc
add
adc
pop
test
jge
adc
adc
hlt
sahf
andb
js
leave
flds
pusha
mov
mov
inc
lock
lea
out
xor
mov
push
add
mov
inc
mov
scas
sub
cs
popf
fistps
adc
notb
inc
or
mov
xchg
pop
mov
or
lock
xchg
mov
mov
cmpsb
cmp
adc
cmp
imul
and
rcrl
jbe
std
mov
xor
lahf
bound
xchg
lcall
adc
daa
or
xchg
xchg
outsl
orl
xor
mov
jg
stos
sub
std
mov
xchg
dec
inc
pop
out
xchg
lcall
sub
and
add
imul
fstps
sti
push
aas
xor
mov
ret
pop
lret
loop
icebp
iret
or
push
hlt
sub
test
test
int3
insl
outsb
cmp
into
jne
xchg
ret
jns
mov
lods
movsl
out
mov
jge
adc
cmpsb
push
lahf
negl
or
popf
cmc
or
rolb
sub
push
test
int
lods
cmp
jecxz
mulb
pop
sub
loopne
add
dec
inc
fildll
rcrl
aam
sbb
inc
xor
mov
das
mov
arpl
cmp
scas
loope
pushf
pop
push
outsb
mov
mov
pop
cmc
pop
sbb
insl
out
out
arpl
outsl
adc
mov
in
and
fwait
jl
inc
test
invd
std
out
sub
loop
loope
out
fisubs
adc
sbb
test
sub
add
sbb
cmpsb
fisubl
cmp
adc
lock
mov
hlt
push
movsl
xchg
test
mov
or
pop
cltd
shl
sub
mov
sub
push
shlb
jp
cmp
jp
add
movsb
or
jmp
pop
mov
xor
push
add
test
out
add
xor
std
ja
test
mov
jge
aam
pop
xchg
shr
xorl
push
and
lcall
dec
jns
pop
pop
lds
fldcw
xchg
inc
outsb
out
lods
jnp
sub
jge
stc
aam
mov
mov
mov
es
add
adc
scas
lods
inc
push
xor
pusha
pop
push
dec
add
ficomps
hlt
mov
or
xor
das
cmp
cltd
add
cwtl
fisubl
rclb
insl
mov
xor
jmp
insl
cmp
cmp
jmp
arpl
pop
adc
lcall
ret
cmpsb
in
inc
xor
fldt
aam
inc
imul
sub
stc
mov
and
jae
test
push
push
loope
add
sahf
cmp
inc
sub
call
mov
sarb
pushf
hlt
loope
dec
xchg
gs
in
xor
and
add
ds
fidivrl
inc
scas
inc
loop
popl
js
pop
aam
pop
mov
call
stos
sahf
inc
mov
cwtl
or
jle
sbb
lret
mov
adc
push
sub
add
adc
xor
lock
and
in
mov
jecxz
jmp
adc
popa
movsl
je
shll
js
in
lock
xrelease
ja
dec
scas
and
adc
pop
mov
jl
and
jmp
cmp
or
and
jnp
lods
out
daa
adc
xchg
aas
pop
sub
out
rcll
push
mov
and
inc
out
xchg
dec
mov
lahf
mov
lahf
jns
hlt
shr
jge
in
pop
cwtl
aad
jmp
ljmp
fmull
or
das
jne
adc
aam
or
cmpsl
pop
xchg
or
push
mov
insl
jb
in
push
xor
mov
cld
out
mov
enter
adc
sarl
cmpsb
ret
jb
or
cmp
jnp
mov
and
popf
dec
ucomiss
xchg
jae
incb
int
ret
add
stos
rcll
sub
and
fs
mov
into
pop
leave
int3
gs
lods
mov
int
test
mov
cmpsb
popa
fstps
adc
push
inc
sbb
and
imul
test
adc
jb
adc
fnstcw
ret
call
and
cmp
pop
or
mov
dec
insb
in
addl
jbe
dec
stc
fwait
add
int
mov
test
lods
mov
inc
mov
fdiv
xor
out
fidivrs
add
mov
add
sahf
icebp
addr16
add
rcrb
sarl
test
jmp
insl
cmp
nop
addr16
into
movsl
lods
inc
outsb
std
mov
mov
cmp
out
xchg
mov
jmp
popf
cmpsl
shrb
mov
dec
pop
scas
dec
das
mov
inc
fdivs
int
std
mov
sbb
test
movb
call
nop
insl
fs
lret
jbe
inc
ljmp
jb
into
xchg
andl
cmp
mov
sbb
or
ss
or
xor
fisttpl
pusha
jno
push
ds
rclb
rolb
push
jbe
shrl
mov
sysexit
rol
imul
inc
stos
cmpsb
dec
jae
jne
shll
cmpsb
dec
das
ror
adc
xchg
push
pop
push
dec
cmpsb
cmp
or
mov
sbb
cmp
cmp
push
popl
dec
cmc
nop
jo
clc
les
adc
pop
sbb
je,pt
das
mov
enter
jnp
add
xchg
lods
hlt
push
fwait
lods
lods
out
dec
ret
xchg
loop
leave
pop
dec
mov
or
fwait
xor
enter
popf
aad
xor
mov
fs
into
sub
enter
mov
imul
xchg
call
pop
repz
cwtl
repz
leave
es
jge
mov
mov
mov
mov
pop
adc
mov
lods
push
fcmovnb
mov
mov
cmovp
arpl
fsts
pushf
jmp
out
fldl
ds
adc
dec
jo
mov
add
xor
outsb
xor
pop
push
orb
fidivrs
sub
add
pop
mov
pop
cmpb
stos
cmpsb
and
sub
add
xorl
push
cltd
jb
mov
lea
jl
sub
mov
xchg
pusha
dec
dec
push
sbb
jl
repnz
push
clc
repnz
jl
call
jg
mov
push
das
xor
lea
insb
mov
scas
and
out
stos
movsl
sti
addl
cld
das
mov
and
lcall
cmpsb
mov
push
sarb
adc
je
sub
lds
outsl
mov
loop
xchg
mov
push
pop
jmp
xchg
pop
sub
mov
notl
pop
mov
mov
lret
cli
lret
das
andl
add
jp
or
enter
push
stos
fnstsw
and
push
cmp
adc
cmp
daa
repz
mov
pop
test
cmp
sub
mov
jo
or
stos
jo
jmp
ss
and
adc
ss
add
call
rep
sahf
cmp
nop
dec
xor
imul
sbb
and
out
sub
sbb
inc
mov
jbe
int
mov
dec
cltd
dec
aad
das
xor
push
stos
ret
xor
pop
aam
or
mov
mov
or
add
das
or
pushf
jp
push
push
xor
mov
out
mov
dec
dec
pop
loope
notl
les
push
xchg
mov
push
sub
bound
in
or
pop
jo
or
frstor
jo
and
mov
push
cli
repnz
les
divl
mov
push
movsb
loopne
mov
orl
or
sub
int
idivl
divb
and
cli
mov
cmpsb
xor
aas
mov
outsb
cmp
cmovs
js
mov
pop
rclb
xchg
insb
scas
pop
and
outsl
jecxz
mov
fnstenv
stc
adc
push
adc
rcl
test
rcrb
movsl
lret
xchg
xchg
icebp
jp
sbb
push
sub
cmpsb
imul
sub
mov
xor
lods
idivl
movsb
jb
mov
cmc
testl
add
mov
dec
pusha
cmp
mov
xchg
lea
mov
fsubrl
pushf
mov
lret
lea
jp
jb
imul
and
fsts
mov
in
adc
push
inc
insb
mov
xor
add
adc
mov
bound
in
lock
push
in
mov
push
pop
fcmove
mov
mov
nop
ret
popf
sbb
jmp
es
movsl
inc
icebp
loop
mov
test
sbb
les
push
sarb
jp
out
mov
mov
addb
out
imul
cwtl
shrb
fildll
js
leave
push
mov
inc
arpl
imul
notb
test
js
push
add
imul
or
mov
sahf
lods
inc
push
pop
sub
jae
hlt
xchg
xchg
sub
mov
rcrb
test
sbb
xor
int
mov
movsb
daa
inc
out
push
xchg
ror
and
and
mov
int3
jns
jno
sbbb
sub
add
xchg
data16
ljmp
scas
pop
xlat
fsubrl
js
icebp
movsl
push
in
push
jne
arpl
rolb
cmp
cmpsl
ret
das
hlt
jo
xor
adc
sbb
push
xchg
rorl
cwtl
addb
mov
inc
clc
call
mov
stos
movb
add
incb
push
out
out
sti
dec
aam
mov
xlat
dec
test
inc
ja
and
mov
subb
icebp
sub
add
inc
shrb
jae
clc
stc
pop
xchg
mov
adc
movsl
pusha
in
inc
jne
xchg
lcall
leave
arpl
mov
arpl
hlt
hlt
jne
es
testb
pop
cmp
mov
mov
xchg
stc
or
repz
or
das
mov
scas
pop
lret
cwtl
pusha
jp
dec
sti
sub
xchg
pop
push
out
sbb
and
pop
ret
xchg
lahf
jmp
aaa
inc
fistps
sbb
shll
and
cmp
push
mov
call
lret
out
es
cmp
inc
push
aad
ljmp
mov
dec
jne
pusha
pmulhw
mov
fistps
scas
in
pop
add
movl
imul
push
lret
lods
enter
pushf
and
pop
out
cmpsb
out
movsl
inc
cltd
and
mov
xlat
data16
and
int
jg
sbb
fstpl
pop
out
xchg
mov
ret
fcomi
add
add
mov
outsl
inc
into
outsb
mov
stos
mov
inc
icebp
cli
pop
inc
enter
sbb
cmp
pop
jle
pusha
insl
and
adc
in
add
cwtl
add
or
pop
mov
lret
sbb
std
out
or
mov
pop
loopne
movsb
or
mov
call
pop
mov
sbbb
jae
test
movsb
stos
pusha
and
sbb
xor
lret
adc
push
and
cs
shll
pop
lretw
pop
cmpsb
xchg
iret
cmpb
loopne
pop
adc
into
addl
pop
std
push
shll
insb
rcl
arpl
pop
jl
addr16
jp
xchg
imul
mov
mov
fdiv
not
cs
jno
sub
inc
xchg
movsl
dec
imul
call
aad
rorl
push
cvtpi2ps
sub
roll
outsl
xlat
lods
fistpll
push
cwtl
ret
xor
fsubr
test
repz
push
test
mov
call
inc
cmp
ss
cltd
pop
xor
ret
pop
gs
scas
arpl
xor
arpl
mov
mov
push
push
fidivrl
add
fdiv
imul
lahf
or
pop
out
jno
testb
decb
dec
sarb
sahf
jmp
mov
in
mov
pop
das
jecxz
call
push
sbb
dec
scas
lahf
scas
sbb
sti
cmc
jnp
lods
lds
out
or
dec
in
mov
loopne
jg
fwait
sbb
mov
xchg
imul
mov
sub
push
insb
shrb
pushf
mov
xchg
adc
mov
xchg
popf
popa
dec
lock
push
lcall
sbb
fsubr
arpl
mov
lods
je
lahf
scas
das
cmp
adcl
dec
adc
icebp
push
dec
pop
cmp
jnp
xchg
sbb
fstp
imul
xor
into
popl
mov
adcl
pop
dec
mov
dec
lds
xor
and
iret
dec
lret
dec
repnz
jns
out
sub
jae
mov
add
test
outsb
mov
gs
mov
jo
pusha
mov
scas
push
push
nop
mov
inc
push
sub
movsb
sbb
sub
pop
xor
mov
ljmp
dec
or
sbb
flds
stos
push
xchg
cld
xchg
dec
gs
dec
sub
fistps
mov
dec
and
pop
jmp
orb
pop
push
std
xlat
mov
mov
mov
rcrl
loop
subb
inc
fstpt
sbb
sbb
test
repz
xchg
mov
out
mov
xchg
jecxz
daa
dec
dec
jp
jp
sub
cmp
mov
push
push
inc
xor
shll
add
sbb
rcr
xorl
pop
movl
test
fsubl
lahf
or
add
sub
jmp
imul
jo
mov
or
ffreep
test
aas
ja
xchg
dec
xor
ret
dec
inc
pop
pop
xchg
dec
movsl
xor
or
and
jge
lock
dec
loopne
xchg
xor
pop
outsb
push
inc
or
test
fidivs
jmp
mov
adc
mov
loopne
mov
mov
sahf
leave
outsl
push
push
sbbb
and
aas
push
xchg
in
xor
loope
out
jle
cmc
sub
fwait
ja
aas
mov
inc
pop
push
popa
mov
cld
xchg
inc
insb
ja
loop
adc
pop
push
fwait
dec
scas
mov
xlat
nop
psadbw
dec
dec
push
pop
je
fildl
mov
mov
jb
sarb
adc
push
fdivrp
lea
movsl
ret
aas
ljmp
popf
enter
xor
xchg
sub
int3
cwtl
push
lret
imul
js
in
sub
push
lods
mov
or
ljmp
push
lret
mov
mov
data16
adc
and
and
pop
icebp
es
arpl
add
imul
mov
repz
jns
xchg
shr
jmp
ret
mov
cmp
push
sub
fsubl
fs
adc
adc
xor
xchg
testl
mov
out
jns
jae
enter
or
jne
jo
aaa
pop
dec
mov
lcall
sbb
xor
and
xor
xchg
jae
and
outsb
xlat
ljmp
testb
pop
bound
cmp
dec
incl
insb
jbe
ret
aas
sub
dec
xor
and
aaa
xchg
adc
fnstcw
dec
in
pop
push
inc
cmp
mov
lds
add
cmpl
mov
and
loopne
sbbb
iret
nop
lds
and
inc
popf
js
add
sbb
inc
push
inc
push
cmp
imul
push
insl
cmp
cmpsl
ss
sub
cmc
sbb
mov
outsl
popa
dec
shlb
test
shrb
ja,pt
dec
dec
scas
push
inc
sarl
outsl
cmp
iret
and
shr
in
sub
ja
pop
fimull
mov
mov
lret
rcrb
mov
jnp
arpl
mov
js
cmp
jnp
or
and
movsb
sti
push
fld
jns
les
and
add
sbb
and
adc
dec
ret
stos
jg
push
dec
in
ds
addb
bts
aaa
mov
outsb
xlat
das
repz
push
xor
dec
js
nop
add
xor
pop
inc
xor
fwait
push
or
sbb
gs
xchg
push
add
addr16
movsb
addl
ss
fsubrl
add
mov
adc
push
roll
xchg
shrl
sbb
push
xor
push
cmc
icebp
test
mov
and
adc
cli
mov
call
daa
cmp
ds
cmp
scas
sub
cltd
out
mov
lds
addb
inc
ja
in
push
js
mov
cld
mov
adc
inc
popf
stos
movsb
adc
jg
mov
sbb
inc
arpl
and
mov
xchg
sub
and
sbb
test
aam
out
pop
clc
push
xchg
dec
enter
ljmp
shrl
xor
mov
jecxz
fimuls
add
in
lods
pop
sub
push
es
inc
sub
dec
adc
fisttpl
pop
lahf
leave
mov
stos
and
push
lret
repnz
add
mov
lods
pop
movsl
mov
rol
push
fistl
rorb
pop
sti
loopne
jns
cld
inc
cmp
adc
sub
mov
pop
rol
pushf
or
gs
cmpsb
dec
stc
dec
push
mov
loop
push
filds
in
rcll
insl
push
xchg
push
fnsave
add
std
inc
cli
mov
mov
mov
dec
sub
div
jbe
mov
jecxz
int
fisttpll
sbb
sub
mov
add
fsubrl
out
or
mov
or
mov
ljmp
mov
inc
mov
mov
fsubrs
in
inc
pop
sbb
push
mov
jae
leave
push
cwtl
add
loope
or
insl
mov
and
sbb
test
xchg
dec
and
inc
cltd
addr16
fdivl
mov
out
xchg
aas
mov
pop
xchg
add
fmul
add
xor
add
xchg
xchg
cli
inc
fsubrp
pop
pop
orb
pop
pop
or
in
outsb
and
or
inc
adc
inc
jbe
jne
lcall
addr16
push
shll
add
jp
adc
arpl
inc
xor
cmpsb
cmpsl
inc
push
negl
xchg
insl
or
pop
inc
dec
testb
enter
push
lretw
jae
cmp
xchg
mov
xchg
xchg
stos
or
das
cld
mov
mov
fistps
dec
sub
mov
xor
inc
or
xor
stos
mov
or
outsl
adc
and
dec
sub
jp
icebp
xchg
pop
test
mov
shlb
jb
mov
fwait
add
adc
xchg
lds
inc
cmpl
cmp
js
jne
mov
loope
jg
adc
sbb
or
jecxz
inc
sub
insl
adc
ljmp
pop
icebp
cmp
push
push
pop
jno
jecxz
stos
call
sub
xchg
iret
daa
pusha
dec
sbb
cmp
ret
ret
repnz
dec
add
les
into
ljmp
fistpll
sahf
pushf
mov
test
outsl
jb
or
loopne
pop
sub
jge
sarb
jno
arpl
mov
pop
daa
mov
je
movzwl
ret
jns
xchg
dec
cli
pop
in
out
aam
xor
and
daa
in
outsl
mov
sbb
scas
adc
add
jb
call
fcoml
and
rcl
fiadds
adc
rcll
outsl
jge
loope
and
jnp
add
stos
cmpsb
insl
xchg
lds
adc
faddl
mov
dec
sahf
mov
sbb
les
xchg
and
pop
mov
outsl
mov
push
adc
shll
fcmovb
mov
ret
ret
ficomps
aam
jns
mov
xlat
repnz
je
out
or
out
push
xchg
movsl
lods
push
jno
or
mov
sbb
insb
shrl
ret
add
mov
mov
add
lahf
out
rclb
pop
loopne
clc
mov
sti
push
dec
dec
pop
aas
popf
das
mov
test
adc
jmp
push
sbb
icebp
push
push
jb
xchg
je
ret
push
fs
jns
lahf
insb
sub
sbb
cmp
or
imul
mov
jg
adc
cmc
out
inc
xor
ds
bound
pushf
jo
cmp
ja
pop
ljmp
repz
mov
lods
idiv
dec
mulb
cmp
mov
xchg
adc
and
dec
lret
cmpsb
fucom
add
inc
mov
pmaddwd
xchg
rclb
mov
je
add
and
xor
fcoml
lock
mov
imul
push
lods
adc
into
or
and
jecxz
xor
ds
scas
iret
mov
fcomps
mov
push
pop
testl
or
int3
adc
cltd
test
mov
cmp
sbb
dec
or
mov
add
aas
pop
cmp
leave
jmp
out
jg
cmp
ret
fwait
cmp
xchg
mov
sbb
loopne
aad
mov
push
flds
mov
popa
bound
push
push
or
out
outsl
outsl
mov
or
pusha
movl
rorb
or
stos
popa
arpl
arpl
sbb
dec
and
inc
das
sub
lds
xchg
sbb
outsb
mov
cmp
pop
mov
jge
std
inc
pop
mov
pop
in
xor
xchg
cmp
sub
cli
dec
dec
es
int3
pop
cs
in
sub
inc
xor
sarb
jp
lods
mov
xchg
lahf
shll
je
or
inc
sbb
inc
test
testb
fld
mov
sub
imul
cmp
jns
mov
or
cmp
cwtl
xor
pop
inc
js
jo
mov
pop
dec
jb
aam
adc
dec
push
loope
dec
fistps
xor
rorb
xor
mov
xchg
or
push
sbb
rorl
inc
fmull
loope
dec
testl
je
xchg
cmp
inc
push
mov
push
fcmove
mov
pop
jl
popf
lret
push
jbe
xor
fnstcw
or
shl
hlt
cmp
xor
and
aad
inc
lahf
scas
lea
add
or
or
pop
in
pop
sti
shl
pop
adc
xchg
xchg
fdivl
push
cmpsb
sarb
cmpsb
out
lods
xchg
out
imul
sub
xchg
fstps
jmp
pop
rcl
mov
ss
jbe
fistl
scas
add
sahf
cmp
mov
adc
add
ljmp
insl
xchg
cmpsl
jge
add
rcrl
into
jo
jge
int
add
test
dec
pop
test
xchg
ja
lea
in
or
std
shrb
hlt
lods
inc
jae
pop
mov
adc
mov
mov
int3
pop
lret
xchg
mov
test
cs
push
xor
ja
pop
out
jo
imul
mov
mov
and
inc
sub
imul
jns
call
jnp
sbb
mov
jle
jmp
mov
add
xlat
mov
dec
and
scas
sahf
mov
inc
jecxz
pop
lds
cmc
or
fs
insl
jbe
cli
cmp
je
inc
jae
gs
mov
mov
push
pop
xor
push
sbbl
repz
std
aad
inc
dec
out
mov
flds
xor
sbb
push
jp
les
outsl
rcl
mov
jp
mov
adc
mov
movsl
fldcw
push
incb
push
mov
and
stos
test
loope
ret
in
fisttpl
xchg
cmp
in
pop
jle
cmp
stc
xor
pop
push
mov
and
rep
imul
inc
dec
mov
aad
dec
jl
fdivr
es
dec
in
es
push
adc
mov
and
jbe
bound
orl
or
or
dec
sahf
jmp
jno
adc
lock
xor
and
dec
int3
mov
mov
cwtl
inc
and
jle
xchg
gs
sub
out
sbb
or
xor
dec
adc
mov
fcmovbe
stos
subb
decl
inc
pop
pop
clc
fistps
ljmp
sub
in
movsl
mov
xor
fwait
in
ljmp
jg
std
mov
pop
leave
loope
test
push
adc
jecxz
fwait
clc
mov
jg
call
cs
scas
inc
fcmovnbe
leave
sbb
xchg
mov
filds
push
mov
adc
mov
jnp
pop
push
inc
in
inc
pop
lds
sbb
sbbb
fiaddl
push
in
sub
data16
and
mov
lds
adcb
or
popl
out
iret
outsl
in
jecxz
leave
add
int3
sbb
jbe
sub
dec
pop
ja
sarl
xchg
xchg
or
mov
fs
and
sub
jecxz
sub
stos
mov
sbb
dec
out
xor
inc
jmp
sbb
in
leave
mov
test
or
lea
dec
and
and
sub
sbb
mov
mov
cli
or
lea
lods
mov
rolb
test
jnp
sti
pop
jmp
push
jmp
mov
cmpsb
cwtl
inc
pop
test
leave
push
gs
inc
sbb
and
es
cmp
jle
sub
in
roll
ljmp
mov
mov
adc
ss
push
xchg
cmpsl
add
and
or
lret
dec
push
mov
jne
je
shlb
cmp
push
lods
cwtl
push
cld
xchg
xchg
fwait
xor
les
xchg
add
mov
xchg
arpl
and
push
add
movsl
jg
outsl
dec
imul
stc
push
jp
mov
aas
cmc
pop
popa
mov
lock
ret
xchg
inc
lret
jae
push
movsl
in
dec
mov
inc
pop
mov
xchg
sti
push
pop
sarb
adc
sbbl
mov
mov
dec
ret
push
fidivrl
jae
pusha
pop
jo
stos
push
sahf
xor
nop
push
cmove
dec
cmpsl
push
fs
and
aas
mov
cmp
and
add
or
inc
add
mov
imul
xchg
jg
mov
loop
lret
xchg
into
int3
popf
cwtl
fiaddl
adc
jl
inc
out
ss
stos
movsl
shll
loopne
insl
lods
cmp
pop
cmp
xchg
lcall
xlat
insb
xchg
in
inc
xchg
adc
stos
rolb
jno
shl
call
mov
shlb
mov
pop
std
sub
or
or
dec
mov
fwait
pop
enter
pop
je
jns
adc
pop
adc
lock
push
je
fwait
or
xchg
or
iret
sar
and
fsubr
mov
loop
jne
xlat
mov
imul
cmpsb
xor
lds
lods
enter
or
pop
mov
adc
add
pop
inc
adc
xchg
mov
sub
add
int
jp
lret
fnstenv
pop
adc
pusha
mov
jb
jbe
or
xchg
sub
jmp
jmp
lods
movsl
sub
pop
js
pop
gs
sub
das
lret
pusha
enter
arpl
and
add
repnz
inc
jp
mov
sahf
imul
mov
adc
les
mov
cltd
sbb
mov
cwtl
or
mov
dec
mov
pop
in
sub
add
hlt
ret
mov
jmp
cli
push
ficompl
jge
in
jb
push
imul
cmpsb
mov
xlat
dec
pop
adc
sahf
adc
imul
lret
add
or
pop
fnsave
mov
pop
lods
ja
xchg
dec
dec
or
mov
bound
sahf
fldenv
sbb
mov
dec
jp
hlt
cmp
push
sub
fsubl
mov
mov
sub
add
dec
in
outsb
fnstcw
mov
rclb
cmp
js
and
jmp
outsb
stc
xor
lret
push
inc
testl
mov
dec
or
into
mov
pop
call
test
inc
xchg
shl
cmp
dec
fwait
dec
sbb
mov
movsl
cmp
repnz
in
sub
cmpsb
pop
mov
add
pushf
cmp
cvtps2pd
xchg
ret
or
insl
sbb
lods
mov
cmpsb
sbb
rol
ds
sub
mov
cmp
scas
icebp
cmp
mov
inc
fcom
cmpsb
mov
rcrl
pop
xor
push
pop
dec
fs
fbld
cmpsl
inc
mov
pop
xchg
andl
iret
test
jge
jae
mov
jb
clc
mov
sbb
mov
test
rcl
and
int3
adc
push
int
xor
outsl
jg
and
es
insb
lods
push
mov
sti
clc
push
sbb
scas
stc
jb
loopne
xchg
mov
jnp
jne
dec
stos
in
scas
pop
sbb
xchg
xor
mov
xchg
push
cmpsb
cli
lahf
push
icebp
xchg
adc
imul
and
mov
cmp
pop
out
sub
push
aam
cmp
pusha
jns
sub
sahf
inc
addr16
cmc
cmp
mov
dec
pusha
inc
in
push
rcll
mov
test
enter
in
mov
push
xor
stos
adc
jns
push
lods
adcl
arpl
inc
mov
mov
ret
cmpsl
lret
mov
fstpt
pop
shlb
stos
popa
xor
and
inc
sahf
pop
dec
dec
push
jmp
popf
lds
pop
cmpb
cmp
adc
mov
ds
jnp
pop
sbb
dec
test
jnp
cltd
inc
mov
fdivs
aas
mov
inc
and
pop
cmpb
xor
pop
mov
aaa
es
xor
jbe
pusha
sub
sbb
sahf
mov
scas
pop
loope
mov
les
rep
jbe
fs
dec
dec
cmp
std
cld
cmp
sub
or
ds
or
loopne
xor
xor
insl
mov
push
loopne
shl
andl
cmpl
jecxz
hlt
test
outsl
sub
push
adc
nop
cmc
shlb
inc
outsb
push
mov
or
adc
iret
ret
xchg
imul
or
cmp
xor
addl
dec
dec
jns
iret
add
or
xchg
sahf
scas
adc
or
sub
jo
ds
shl
dec
xor
mov
cs
xor
jmp
cld
inc
shlb
adc
cltd
pop
xchg
jno
cld
mov
cmpsl
fld
sub
dec
shll
stos
fidivrl
test
push
jp
mov
gs
shll
mov
ds
lret
andb
stc
jb
mov
jp
mov
stc
nop
and
inc
repnz
add
in
sar
jge
inc
loopne
dec
jns
adc
movsl
daa
addr16
mov
jns
adc
or
jl
pop
call
pop
mov
or
mov
xchg
push
stos
or
sbb
sti
fildl
inc
push
pusha
mov
movsb
repnz
dec
enter
push
addb
mov
outsl
jge
jo
xchg
cmp
xchg
aaa
int
jno
push
std
push
out
dec
andb
push
or
popa
jp
arpl
fcmovne
stos
dec
mov
xor
jae
mov
and
push
into
dec
adc
daa
xchg
xchg
xor
add
dec
mov
es
out
push
add
in
loopne
inc
sti
dec
mov
xor
pop
std
cltd
push
imull
or
mov
cmp
cwtl
rcl
sub
cmp
outsl
imul
and
push
rcr
and
dec
fildll
inc
inc
cmp
imull
fs
iret
sbb
inc
shll
pop
adc
or
inc
shlb
pushf
orl
xor
push
pop
mov
push
and
and
test
aad
mov
dec
test
adc
pop
je
ss
jo
push
mov
adc
sbb
ret
dec
in
repnz
cmp
subb
adc
lret
nop
mov
push
ss
adc
sbb
dec
add
scas
adc
sahf
out
adc
jp
les
push
fimuls
mov
insb
das
inc
and
movsl
sub
sbb
daa
fbstp
mov
xchg
xchg
mov
pop
aad
test
or
cs
inc
sbb
test
mov
ja
mov
test
gs
scas
push
lret
out
fwait
xchg
out
insb
out
in
pop
cmp
dec
cmp
inc
pop
mov
cmp
lcall
mov
aaa
and
stmxcsr
rclb
sbb
push
cs
arpl
movsl
es
cmp
pop
mov
ss
test
scas
aad
insb
popa
ss
into
fistpl
cld
push
pop
cmp
movsl
pop
or
add
sarl
pop
mov
pop
pop
notl
stos
push
pusha
hlt
jle
je
sar
cmpsb
pop
xchg
xchg
push
dec
jb
in
or
pop
sub
pop
les
mov
mov
dec
call
mov
lret
movsb
adc
test
mov
cmp
pop
adcb
push
ficomps
lea
xor
jbe
xchg
add
dec
xchg
sbb
addr16
cmp
and
and
xor
add
and
cmp
or
imulb
insb
jmp
cmpl
jg
aad
es
mov
sbb
mov
int
sub
mov
mov
pop
call
add
jns
mov
xor
jp
dec
dec
insb
sub
hlt
sahf
fwait
mov
addl
fdivrl
xor
sbb
addr16
mov
lock
jae
mov
out
int3
bound
cmpsb
outsl
mov
pushf
dec
fstpl
fcmovu
rorl
outsb
arpl
xchg
mov
sbb
and
cli
imul
rclb
mov
jo
or
daa
pop
clc
mov
or
mov
repz
push
inc
les
xor
orl
xor
xchg
xchg
mov
outsb
dec
pop
shl
jb
pop
lock
xlat
cmp
push
or
adc
jmp
cwtl
sahf
xchg
dec
incb
pop
lea
mov
fsubrp
or
shlb
orb
rclb
orb
movsl
adcl
in
cld
bound
sub
out
adc
add
ficoms
ret
or
add
xor
pop
push
fcoml
jl
shl
mov
add
add
test
mov
dec
mov
cmp
out
mov
icebp
inc
outsl
and
lcall
pop
lret
add
cs
mov
sbb
push
test
pusha
mov
aas
imul
test
inc
mov
jo
fadd
dec
add
sub
mov
xacquire
cmpsb
or
scas
out
mov
cwtl
cmp
mov
sub
inc
mov
in
dec
push
sub
test
xchg
cltd
pop
xor
sub
add
pushf
cmpsl
or
or
and
cmp
fisubrl
out
sbb
mov
pop
inc
sti
popa
icebp
mov
fldt
xchg
jnp
insb
adcb
dec
mov
mov
lcall
leave
sbb
pop
scas
rcll
cltd
mov
fwait
sbb
xchg
jae
fdivrs
push
nop
sahf
int
shrb
jp
xorb
mov
mov
das
push
mov
pusha
mov
inc
data16
mov
mov
mov
test
inc
loopne
sahf
cmp
and
mov
inc
cwtl
pop
out
dec
sbb
mov
mov
mov
insl
mov
push
cli
movsl
sahf
add
push
mov
add
cmp
jge
call
fldcw
cmp
aad
adc
inc
dec
sub
outsl
mov
xor
xor
pop
in
loop
fisttpl
xor
andl
adc
lret
imul
add
jo
push
lahf
out
into
test
inc
idivb
clc
dec
mov
inc
adc
iret
std
test
out
dec
insb
cmp
xchg
mov
out
or
mov
adc
xchg
adc
sub
fidivrl
add
cs
pop
mov
add
stc
and
enter
pop
int3
push
arpl
mov
dec
or
je
add
test
mov
sbb
pop
scas
in
fiaddl
add
push
sbb
mov
sbb
sbb
insb
mov
stos
pop
subl
mov
fisttpll
call
ja
js
push
int
out
jecxz
or
xlat
lods
or
sub
jle
nop
aad
jmp
push
xchg
insb
pushl
cmpsl
adc
sub
pop
cmp
mov
sbb
push
pop
insl
cs
pop
and
jp
dec
imul
das
mov
push
inc
jge
and
out
push
inc
push
adc
mov
mov
bound
mov
lret
imul
mov
pop
xchg
mov
aas
inc
pop
inc
hlt
cmc
lods
iret
imul
in
ja
inc
sti
jae
aaa
dec
test
dec
out
mov
ret
out
dec
ret
jp
aaa
fistpll
lods
in
inc
ret
out
mov
push
iret
cmp
iret
push
and
cmc
fbstp
and
lret
jae
test
int3
mov
sbb
xchg
cmp
lea
mov
adc
sbb
sub
lds
imul
out
sbb
out
in
jns
sbb
adc
mov
or
inc
fcmovbe
cmp
jno
mov
or
sub
mov
mov
cmpsl
loope
icebp
mov
pop
inc
push
push
inc
add
in
fmul
das
push
mov
int
js
xchg
mov
pusha
push
cmc
sbbb
ret
xchg
adc
mov
push
fwait
mov
mov
push
inc
mov
push
and
mov
push
ret
adc
inc
cmp
jnp
push
pop
incl
clc
dec
mov
xor
shll
sub
xor
ds
adc
inc
jno
inc
adc
sbb
pop
mov
clc
insb
pop
movsl
test
test
lods
cmp
or
and
insl
push
testb
fisttpll
sub
mov
mov
mov
outsb
inc
push
pop
test
int
in
dec
push
sub
fisttpl
shlb
push
out
xor
jmp
fwait
sbb
mov
cs
repz
out
pop
repnz
enter
mov
es
test
inc
repnz
ljmp
clc
into
cmp
loope
gs
mov
pop
mov
pop
pop
or
fcomi
test
push
sbb
mov
mov
or
mov
push
dec
sub
pop
adc
push
daa
insl
iret
jl
push
jb
je
cmp
cmp
lods
cmpsb
out
mov
fnstcw
nop
mov
hlt
mov
mov
arpl
xchg
pop
rcrb
rcrb
dec
pop
mov
and
jecxz
sub
jle
mov
ret
inc
in
cmpl
push
xchg
xchg
xor
rol
inc
xor
enter
mov
outsb
inc
pop
adc
loopne
iret
std
push
mov
jg
in
cwtl
test
sbb
or
jge
xchg
jae
dec
pop
into
mov
mov
inc
bound
xchg
dec
call
push
insl
jp
and
pop
fimuls
stos
mov
fsubs
mov
fistpll
test
clc
lret
int
adc
mov
cmp
test
adc
das
aad
fnstenv
pop
dec
jae
imul
mov
call
cmpsb
dec
dec
pushf
in
xchg
into
mov
imul
push
xchg
jbe
sub
push
mov
dec
loopne
add
xor
shll
jo
sbb
dec
add
pop
mov
out
and
mov
add
sbbb
xchg
cmp
mov
mov
mov
cmpsb
mov
jg
imul
sbb
fstpt
repnz
fcmovnbe
lock
pop
divb
popf
scas
testb
insl
pop
and
inc
xchg
mov
sbb
or
hlt
leave
sub
arpl
jns
in
call
adc
fs
mov
leave
mov
repnz
mov
in
popa
stos
in
inc
sbb
loope
push
jae
xor
and
ljmp
dec
push
dec
xchg
mov
push
push
mov
inc
lcall
scas
scas
inc
lods
ljmp
sbb
pop
inc
inc
aad
lds
lods
push
lcall
testb
or
push
sub
mov
lret
inc
cmpsl
xor
ret
pop
cld
sahf
sub
and
xlat
sbb
mov
insl
lret
jno
inc
je
push
mov
dec
frstor
mov
inc
lcall
out
mov
mov
jge
cmpsl
out
ret
push
inc
pop
roll
cs
push
and
xchg
add
xchg
xchg
cmp
mov
sahf
push
lret
dec
ret
push
stos
es
pop
fidivrs
adc
les
test
sti
dec
int
gs
xor
inc
pop
out
sbb
add
xchg
inc
push
push
bound
and
sti
xorb
outsl
add
add
jno
fwait
cmp
jmp
mov
mov
sub
xlat
mov
lods
lahf
adc
xor
stos
dec
inc
rol
add
inc
flds
aad
repnz
div
mov
rorb
mov
ja
xchg
mov
es
sbb
decl
cmpsb
lods
xchg
mov
in
lret
push
and
mov
fisubrl
push
dec
icebp
mov
and
adc
mov
add
lock
pop
mov
into
rcl
stos
push
inc
jmp
xor
repz
inc
outsl
sub
pop
dec
or
iret
push
push
xor
fistpll
fildll
fdivs
fwait
aas
sbb
fs
and
xchg
outsl
flds
mov
add
popf
sub
rorb
inc
subb
outsl
or
adc
outsw
movsb
mov
xchg
and
test
notb
pop
pop
mov
ficomps
push
xchg
repz
or
adc
adc
iret
repnz
pop
and
jp
out
shll
pop
xchg
sub
push
xlat
sahf
iret
popa
icebp
add
ret
cmpsl
push
out
mov
sub
dec
or
rcrb
mov
cmp
mov
mov
pop
jl
push
mov
iret
adc
sbb
imul
das
and
jle
pop
lea
inc
pop
inc
xchg
xor
pop
pop
push
inc
xlat
push
sysenter
push
xor
push
adc
mov
dec
daa
fwait
cmp
push
xor
aam
push
xchg
imul
lahf
stos
xlat
xchg
clc
xor
fidivs
das
adc
pop
sbb
test
pop
push
jae
int
jb
inc
and
fcomip
inc
push
mov
fs
pop
test
mov
jp
pop
insb
int
pop
xor
sub
xor
xchg
mov
dec
aas
add
jmp
fnstcw
das
mov
adc
add
pusha
aad
add
popa
push
std
or
popf
shl
mov
scas
cmp
stos
add
jg
xor
push
pop
arpl
scas
jp
push
mov
lea
out
test
add
mov
int
pusha
sub
adc
and
sbb
xor
push
mov
ds
sub
test
adc
js
pop
stos
loop
xor
stos
xor
or
pop
pop
xchg
shrd
rcll
int
or
jns
and
inc
sub
xchg
rorl
or
je
cmpl
jecxz
insl
mov
xchg
dec
xchg
sub
aas
mov
gs
mov
add
rorb
gs
xor
test
cs
push
or
ud0
add
fs
sbb
hlt
data16
shr
rolb
imul
pop
aas
add
adc
loope
or
outsb
aad
ds
jecxz
mov
cmp
int
cmpsb
mov
das
int
pop
mov
fdivs
lcall
loopne
push
mov
mov
and
mov
jl
fbld
xor
inc
dec
and
shrb
in
push
testb
insb
inc
fnstcw
fistps
sbb
aad
mov
pop
cwtl
in
pop
gs
dec
xchg
xor
test
inc
add
imul
push
mov
test
iret
add
sub
sarb
out
mov
adc
add
mov
inc
popa
stos
nop
mov
jl
push
je
cli
and
shrb
test
fldln2
pop
stos
les
out
mov
dec
mov
cmp
inc
jnp
addr16
inc
adc
sub
cmc
jecxz
or
cs
aaa
ret
cmp
push
add
stos
cmp
scas
sar
addr16
sti
dec
imul
orb
out
pop
mov
and
shl
fidivl
mov
cmp
dec
sbb
inc
mov
cltd
ret
es
arpl
stc
mov
jb
idivb
xchg
lret
pop
pop
jge
mov
sbb
in
sub
fmuls
out
hlt
add
fstpl
fistl
mov
movsb
in
stos
xor
out
nop
push
fldz
mov
xchg
push
xor
push
fdivp
sub
call
sub
imul
jo
mov
rol
jp
cmp
popf
mov
xor
sarl
cltd
gs
pop
rol
jno
dec
jno
mov
pop
into
adc
sub
jns
add
das
sarb
push
idivb
lds
pop
rolb
out
push
ja
or
out
addr16
call
dec
std
dec
add
in
xor
cld
jo
sti
sbb
clc
andl
add
test
pop
mov
cs
stos
lock
ds
xchg
jp
xchg
mov
sbb
faddl
and
mov
mov
aam
xchg
mov
jnp
push
ret
or
das
jge
jno
rclb
inc
inc
or
cli
mov
cltd
out
mov
push
pusha
xchg
dec
push
push
jg
pusha
ret
filds
sub
mov
mov
jnp
sbb
js
push
pop
shll
lock
mov
pop
jno
aas
xor
inc
fildll
push
cltd
ja
dec
incl
les
jge
dec
mov
mov
pop
ljmp
ja
repnz
and
xor
fdivrl
arpl
adc
imul
or
fsubrl
insb
lods
mov
stos
jle
mov
rorb
fsubrl
jg
lahf
idivb
inc
out
leave
es
push
and
xor
sub
pop
iret
pop
mulb
mov
cwtl
orb
mov
shr
pop
int3
in
pop
and
and
dec
add
xor
adc
das
jae
jle
or
xor
int3
push
lds
xor
das
sub
movsb
mov
cmp
jne
les
loop
arpl
or
nop
or
aad
std
sub
mov
jle
mov
sub
pusha
inc
push
jg
cmpsl
lcall
jle
pop
les
xchg
sub
inc
sub
and
mov
in
mov
lea
jge
push
inc
mov
imulb
and
adc
in
xchg
das
insl
js
ds
dec
dec
out
xor
mov
sbb
aas
mov
sbb
fcompl
and
sbb
hlt
cmpsb
cmc
push
fisubrl
xchg
jne
pop
rorl
fstps
mov
shll
aas
fs
mov
push
cmp
jns
fs
scas
lods
adc
je
mov
fwait
and
add
mov
sbb
inc
mov
push
xchg
lahf
outsb
stos
mov
fsubl
pop
mov
jns
pop
rcrl
fsubr
jno
mov
mov
jno
in
js
dec
fists
push
mov
mov
dec
ret
out
dec
mov
xor
xor
mov
cmp
mov
sbb
xor
enter
jmp
inc
movsb
pop
ret
dec
adc
jb
pop
hlt
push
dec
shll
xor
add
pop
cli
rorl
or
insl
pushf
cmp
fistps
data16
pop
roll
imul
cld
push
dec
mov
cli
xlat
fdivr
adc
daa
dec
std
test
pusha
inc
sbb
aam
xor
pop
je
cmp
lods
cmp
jle
add
cwtl
cmpsl
mov
rcll
add
xchg
push
leave
pop
js
hlt
mov
arpl
and
pop
adc
cmp
leave
inc
jo
sub
sub
sbbl
lock
mov
and
and
inc
rcll
addl
and
jns
pop
lods
sub
xor
and
js
add
in
push
scas
xchg
xor
out
lret
inc
hlt
dec
into
gs
jecxz
std
sbb
les
das
pop
add
cmp
push
push
or
fsub
cltd
jmp
ss
dec
mov
xchg
fldt
jnp
scas
inc
shll
pop
mov
dec
sbb
ficoms
leave
out
pop
je
or
and
faddl
adc
nop
xlat
outsl
adc
std
cmpb
xor
sbb
sbb
or
push
leave
adc
in
into
fnsave
jmp
aad
enter
clc
flds
push
lods
movsb
mov
lret
and
ffree
xchg
push
popa
aad
fsubrs
and
fcoms
cmp
jns
sub
ss
cwtl
jno
inc
push
andb
mov
jge
inc
jmp
sbb
fiadds
stos
fcmovu
inc
sahf
mov
xchg
xor
es
out
push
andb
xchg
pop
jmp
movsl
jnp
arpl
es
jne
pop
dec
jnp
imul
cmp
mov
lods
hlt
lcall
sub
mov
jg
shl
mov
cwtl
leave
fcompl
out
cwtl
aam
jb
loop
add
inc
xchg
sub
gs
arpl
jl
dec
push
or
cmc
or
outsb
sbb
mov
jbe
in
lock
fidivrs
movsb
adc
and
das
imul
cwtl
arpl
jmp
adc
sbb
sbb
ja
int
push
sbb
and
negl
or
daa
cmp
add
sub
jno
stos
mov
mov
lds
mov
scas
pop
clc
fcoms
push
out
and
jge
outsl
xchg
das
movsl
aad
sub
shl
xor
and
test
push
jg
lcall
ds
adc
xor
jno
mov
out
jmp
decl
repnz
loop
mov
iret
dec
aad
mov
scas
fldt
lret
mov
xchg
cld
stos
fdiv
jle
leave
pop
pop
cmpsb
dec
xor
add
out
dec
jae
jmp
sbb
xchg
fcomp
mov
out
or
int3
and
mov
in
cmp
ror
sbb
add
into
xor
inc
inc
mov
aas
fdivl
mov
fcompl
mov
jmp
lock
sub
outsl
cmp
pop
mov
cld
xor
mov
adcb
stc
mov
jo
out
sahf
xlat
or
fisubl
pop
repz
imul
add
mov
dec
std
ret
push
in
adc
movsb
iret
xchg
mov
imul
push
jge
inc
je
or
jp
mov
add
das
adc
sub
mov
inc
aaa
in
lods
jno
lock
sahf
out
jl
pop
push
mov
sbb
dec
jmp
push
and
aad
push
jb
mov
jbe
cmpsb
loopne
mov
push
push
int3
scas
or
in
repz
call
test
ja
push
jecxz
lock
stos
jmp
addb
mov
inc
or
ljmp
repnz
daa
mov
push
enter
jbe
std
mov
fdivs
ret
cmp
mov
cmc
mov
and
pop
jo
lret
cli
lock
pop
push
mov
fdivrs
lods
dec
pushf
push
and
aam
dec
fldcw
mov
sub
inc
ret
clc
addr16
add
xchg
out
xchg
jge
popa
inc
ds
int
or
jg
ljmp
dec
sbb
daa
jmp
notb
xchg
push
cmp
repz
or
and
lcall
inc
adc
pop
inc
jnp
sbb
cmp
in
scas
cs
xchg
jo
cmp
jae
outsl
sbb
dec
cmp
orl
daa
jge
or
lret
cmp
xchg
loopne
sub
jae
rcrb
sbb
push
push
test
dec
pushf
cmp
pop
push
xor
add
mov
add
dec
std
stos
cmpsb
inc
fildl
jb
sbb
in
ret
dec
rcll
aad
in
ror
stos
mov
movsb
jmp
jo
pop
dec
add
xchg
ret
flds
iret
lret
or
xchg
mov
popf
cmpsb
repz
cmpl
inc
ret
or
mov
push
cwtl
dec
xor
add
mul
lods
movsb
out
jns
andb
lock
mov
push
sbb
fmul
mov
loope
negl
mov
daa
lret
out
add
fildll
fcmovbe
mov
cs
call
xchg
xor
mov
movsl
jp
jg
push
adc
stc
jle
lock
mov
dec
sub
stos
sbb
shll
pop
je
xlat
inc
fsts
sti
das
fcmove
ja
addr16
cmp
cmpb
mov
adc
loop
mov
repz
mov
jb
adc
sbb
sub
mov
mov
add
movsl
sub
pop
ds
mov
push
mov
pop
mov
not
sub
mov
adc
mov
pop
or
fdivr
fwait
mov
push
mov
cli
and
enter
testl
mov
aad
stos
loopne
pop
pop
cmp
mov
inc
or
outsb
imul
in
das
push
mov
and
add
pop
imul
xchg
cs
fs
mov
idivl
mov
out
cs
push
int3
lcall
insb
lret
adc
xchg
or
clc
mov
sti
es
dec
in
inc
pop
popa
pop
cli
test
xor
outsb
adc
cmp
mov
mov
leave
jo
andl
test
cmp
sub
mov
mov
cltd
sub
sbb
movsb
sub
cs
mov
xchg
inc
push
jmp
call
adc
loope
adc
jne
sahf
shrl
es
idiv
mov
ja
lds
xchg
dec
mov
jb
rep
orl
and
pop
repz
lret
jl
insl
xchg
xchg
jno
into
inc
int
inc
mulb
dec
test
icebp
sbb
adc
mov
enter
push
inc
fstpl
jmp
test
into
dec
imul
sub
rclb
push
ds
cmp
adc
lods
gs
cmp
sub
jp
cmp
jb
add
jo
pop
sub
stos
ficomps
test
push
dec
into
or
dec
orl
scas
psubb
add
mov
iret
nop
jp
add
in
lods
test
ret
push
jbe
push
mov
mov
imul
aaa
lcall
shr
dec
in
mov
addb
sub
dec
ds
cmp
data16
xchg
jnp
pop
jb
xchg
arpl
ss
leave
xchg
jmp
fs
sub
xchg
and
mov
lret
inc
sbb
push
das
mov
xchg
ficompl
push
cbtw
add
fiadds
xchg
xor
mov
mov
data16
mov
addl
dec
push
or
cld
insb
pop
mov
cli
push
inc
fdivr
in
pop
fisubrl
xchg
pop
outsb
inc
call
sti
scas
rorb
lods
test
gs
lret
outsb
rolb
pop
out
in
mov
scas
inc
add
rcr
jle
jns
fildl
mov
lcall
jl
sbb
fucomip
inc
mov
push
mov
or
jne
cmp
addr16
mov
mov
and
daa
sbb
jae
or
fiadds
add
mov
sti
push
and
mov
mov
dec
test
inc
jp
imul
repz
adc
mov
inc
inc
dec
pop
fadds
inc
pop
je
lcall
jg
jge
fildll
pushf
pop
cmp
ret
mov
and
cwtl
mov
pop
inc
xor
dec
scas
pop
dec
mov
hlt
lods
in
lods
nop
and
scas
cwtl
sbb
mov
mov
add
xor
and
add
and
in
sbb
mov
mov
fimull
fsubrl
sbb
insb
sub
jge
jb
sub
daa
push
out
inc
lretw
sub
xchg
pop
int
mov
dec
mov
movsl
sub
jmp
push
mov
test
fwait
gs
js
mov
push
jb
or
jo
inc
leave
out
out
je
roll
cs
xchg
xchg
push
sbb
bound
push
lods
lahf
mov
js
jnp
je
adc
paddsw
adc
rcr
into
and
pop
fsts
jecxz
xchg
enter
adc
xor
and
cmc
dec
daa
mov
lret
and
fstpl
cli
dec
jge
or
dec
xchg
leave
lea
mov
std
mov
lock
fs
jnp
dec
cli
rcr
out
inc
mov
sbb
adc
and
dec
jecxz
sti
jecxz
adc
push
stc
xchg
xor
mov
fdivrs
nop
out
adc
xor
mov
repnz
jmp
push
cmpl
mov
pop
and
mov
xor
push
lock
jl
and
fucomi
nop
leave
pushf
sbb
pop
dec
mov
ljmp
xor
sub
xchg
in
mov
out
movsl
add
jnp
mov
jno
inc
and
fldenv
test
pop
lahf
sbb
xchg
sbb
int
mov
add
sbb
mov
cltd
scas
and
sub
cli
out
ret
ljmp
movsb
out
push
push
std
sbb
shld
scas
out
adc
nop
xor
leave
ds
int3
add
or
jecxz
sarl
add
gs
fnstcw
sub
out
xlat
fcomip
push
pop
dec
jmpw
cwtl
mov
jecxz,pn
stos
stos
mov
pop
sbb
sbb
std
mov
popf
popa
pop
sbb
data16
jnp
inc
sub
adc
adc
push
mov
sub
aad
xor
pop
mov
imul
push
popf
push
jnp
push
jge
jmp
jl
adcl
add
sbb
dec
fnstenv
fisttps
sahf
je
mov
and
cmpl
pop
test
jae
int
push
leave
cmpsb
cli
sbb
xchg
adc
hlt
add
in
xorb
mov
pcmpeqb
ds
dec
xor
mov
insl
mov
nop
jbe
ljmp
imul
lcall
iret
aaa
clc
xchg
jae
or
or
mov
inc
dec
mov
out
pxor
pop
lea
inc
or
xor
aaa
sar
sbb
pop
mov
pusha
push
dec
imul
mov
cmp
pop
xor
loope
mov
xchg
repz
enter
xchg
push
js
jp
je
xchg
pop
leave
add
and
adc
mov
movsb
mov
xchg
lods
jnp
push
daa
arpl
mov
in
scas
jno
mov
fwait
inc
xchg
sbbl
jecxz
mov
mov
insb
pop
popf
out
inc
sbb
les
xchg
loop
ds
movsb
push
pop
fnstcw
test
or
repz
std
dec
lds
sbb
sbb
test
xchg
mov
inc
lock
outsl
enter
pushf
mov
outsl
xchg
das
push
or
pop
mov
inc
and
pop
push
clc
fimull
mov
insl
ja
stos
dec
shrb
aad
and
sbbl
movsl
adc
loope
jbe
jb
fsubrp
pop
mov
sub
cli
pop
ds
fxch
repz
xchg
loope
pop
mov
inc
cmp
nop
sbb
mov
mov
xchg
stc
jp
inc
sbb
test
popa
cmp
mov
cmpsb
in
notb
cmc
dec
testl
xchg
sbb
add
jmp
pop
ljmp
inc
sbb
add
mov
in
push
push
test
fcmovnb
int
jle
dec
pop
or
hlt
loop
pop
test
cld
ljmp
ja
xor
cltd
popf
adc
std
and
out
push
fld
mov
sbb
mov
dec
xlat
lcall
mov
les
push
push
shrb
movsl
mov
cmp
and
inc
mov
shrb
mov
cmpsl
cmp
jb
loop
ret
add
testb
dec
sar
test
jp
mov
clc
xor
into
dec
dec
pop
mov
enter
jmp
popa
xlat
cli
add
xlat
mov
xchg
dec
jbe
and
cwtl
sti
nop
push
out
lods
pushf
fwait
add
mov
xchg
sbb
cmp
or
sbb
aam
mov
xchg
sub
jno
cwtl
sahf
cmpb
pop
cmpsb
and
aam
jge
sbb
dec
xchg
mov
addr16
cmp
test
outsl
mov
or
dec
push
shll
out
aas
shlb
in
jp
push
fcmovu
jnp
stos
adc
jp
xchg
outsl
sbb
into
mov
addl
sub
movsb
jl
test
ja
stos
cmpsb
in
sub
loope
push
imul
add
and
adc
mov
loopne
mov
sub
push
pushf
dec
inc
mov
xchg
jbe
insb
gs
pusha
aad
jo
pop
sub
in
ror
mov
sbb
push
dec
push
cmp
mov
bswap
xchg
cmc
insl
das
xor
stc
push
out
cmp
andl
shlb
and
std
mov
lcall
ret
jecxz
cmpb
in
and
mov
movsl
mov
out
push
push
clc
cmp
sub
fnstcw
and
test
fnsave
jne
mov
div
es
cld
mov
xchg
int3
ss
in
ljmp
sub
rcll
lret
mov
testl
jp
sbb
mov
cmp
pop
std
and
mov
testb
push
rorl
jns
pop
out
movsb
dec
test
clc
mov
mov
xchg
clc
push
adc
insb
xlat
iret
xchg
test
xchg
xor
adc
push
mov
add
inc
lea
icebp
jmp
sub
lahf
mov
test
xchg
leave
mov
pop
push
sub
cmp
mov
or
je
pusha
adc
and
ss
mov
or
xor
hlt
xchg
push
and
mov
and
push
jbe
pushf
xchg
stos
jecxz
xchg
rorb
push
push
std
dec
call
mov
enter
jge
cmp
out
sbb
mov
loopne
xchg
sar
jle
and
or
je
jae
dec
push
pop
push
je
pop
ficompl
sub
lods
mov
push
add
imul
jle
mov
sbb
mov
test
insl
outsl
nop
xchg
mov
push
sub
dec
pusha
adc
jle
mov
add
jbe
adc
and
pop
add
stos
imul
lea
lret
inc
cmp
mov
movsb
movsl
or
lock
jl
jmp
in
dec
pop
push
icebp
es
inc
lock
or
xor
jmp
gs
jns
jmp
cmp
iret
call
outsb
nop
push
rcrb
xchg
inc
mov
pusha
and
loopne
js
call
and
mov
fcmovb
ret
push
dec
pop
mov
test
add
jg
add
xor
add
dec
mov
jb
jnp
adc
xchg
inc
test
xor
sbb
in
call
pop
in
outsb
sub
cmp
mov
sub
das
mulb
pop
mov
data16
scas
sbbb
and
push
int
xchg
scas
ja
lcall
insb
icebp
stos
push
int3
mov
loope
int
fisubl
idiv
stos
fmuls
lcall
sub
out
loop
jae
and
push
mov
xchg
pop
push
jno
adc
lods
loopne
and
rcr
loope,pt
and
inc
add
mov
je
adc
int
sbb
push
shlb
dec
sbbl
mov
movsb
out
aad
mov
cs
dec
and
pop
out
mov
lods
sub
lret
push
mov
addr16
dec
out
mov
insb
imull
sbb
icebp
mov
xchg
push
les
add
xor
xor
imul
mov
loop
arpl
jns
mov
cmp
xlat
jg
pop
loop
mov
out
or
lods
aas
dec
push
jbe
mov
imul
adcb
dec
lea
scas
test
sub
lock
sbb
pusha
jns
mov
jmp
inc
jo
pop
sti
sbb
out
add
mov
mov
ficompl
popa
cmp
fmuls
xor
fcompl
orb
jne
sbb
xorb
mov
ljmp
lcall
repnz
xchg
push
xor
sbb
icebp
sbb
lods
sahf
xchg
mov
xorb
int3
js
out
testb
data16
pushf
bnd
xor
and
mov
dec
lahf
adc
mov
dec
jl
cmc
mov
int
subl
sbb
jbe
stos
outsl
jmp
xlat
dec
js
xor
enter
cmpsb
mov
sbb
into
and
dec
jb
jbe
cmpsb
mov
mov
std
xor
fadd
into
mov
outsl
test
xchg
enter
mov
and
add
xchg
hlt
jl
sahf
adc
xchg
pushf
insb
fs
leave
jnp
jno
cmpsb
fcomip
push
dec
add
aas
mov
inc
xor
mov
bound
xchg
xchg
xchg
sbb
mov
outsl
mov
mov
pop
data16
in
dec
movsl
adc
cmp
xchg
subb
sub
jns
adc
push
pop
scas
sub
ficomps
data16
xor
push
bound
les
push
les
dec
jg
lret
pop
cmpsl
mov
cmc
out
orb
imull
insl
idiv
jmp
aad
mov
mov
mov
cmp
push
gs
sub
daa
imul
dec
lock
lret
aad
test
sete
jle
int3
clc
cs
xchg
add
jne
jbe
inc
or
les
sbb
lods
mov
and
xor
jae
jb
std
jne
lret
pushf
out
and
cmpsb
aam
cmpsl
ds
fnstsw
lret
mov
jae
xor
je
ss
idiv
popa
cmp
lcall
mov
andl
ljmp
sbb
inc
jp
and
fs
pop
adc
inc
std
fstpt
stos
jbe
push
arpl
pop
pop
and
xor
xchg
in
pop
or
jmp
nop
lds
xor
xchg
test
or
inc
jae
clc
mov
mov
sub
and
in
xchg
add
shl
dec
jp
in
sbb
xchg
int
fwait
mov
jae
loop
mov
into
insl
leave
adc
mov
pop
imulb
sbb
testl
or
insl
loopne
or
cmc
add
fldenv
push
pop
int
xchg
inc
loop
or
negb
sarb
cmp
jp
and
sbb
pop
cmp
mov
sti
mov
cltd
sbb
lret
push
roll
lahf
stos
fstpl
mov
imul
xchg
inc
imul
inc
sub
in
gs
xchg
xor
push
negl
push
in
and
fwait
jno
inc
leave
jmp
dec
xchg
add
stos
int
add
dec
enter
adc
pusha
addr16
stc
or
in
insl
out
rcl
xchg
jne
cmp
sbb
sarb
adc
and
mov
loope
inc
pop
bound
fimuls
mov
test
xlat
mov
xor
sbb
imull
mov
fists
shll
pop
or
push
or
mull
ss
loopne
stos
cmp
adc
mov
and
inc
aas
fwait
pop
gs
mov
pop
sbb
jb
adc
cld
insb
dec
jae
mov
pop
or
ret
fcomps
mov
lret
call
push
mov
cmpsl
ljmp
adc
mov
inc
out
scas
xor
xchg
shr
or
pop
push
jl
and
jnp
popa
cmp
jno
loop
xor
push
mov
cmp
xchg
inc
or
fsubrs
test
out
sbb
sbb
inc
pop
sti
loop
out
jp
mov
xlat
out
and
mov
pop
mov
add
mov
jo
scas
push
std
and
and
aas
dec
mov
mov
mov
cmp
cwtl
add
mov
fldt
mov
int
xchg
out
jbe
pop
push
push
jno
psubd
dec
jecxz
pop
jp
xchg
push
jp
int
jo
mov
or
pushw
fmuls
jl
mov
out
xchg
ret
and
clc
scas
out
fnsave
jmp
mul
into
sub
pop
inc
loop
cmp
fsubrs
stos
sbb
bound
inc
inc
lret
mov
sbb
fs
loope
dec
imul
lock
data16
jbe
scas
jmp
jnp
mov
sub
mov
mov
add
insb
stc
js
jnp
shll
js
sbb
out
ret
loopne
add
cltd
mov
mov
dec
out
imul
sub
mov
jle
xor
xor
fcoms
popa
cmp
leave
cmp
or
stc
push
mov
pusha
xchg
test
cmp
xlat
or
mov
jne
imul
fisubrs
adc
leave
inc
lret
sub
repnz
ljmp
pop
sbb
mov
sbb
orb
nop
enter
inc
xchg
push
sbb
push
mov
add
test
stos
cmp
jecxz
fsubs
lods
daa
adc
les
or
lds
popa
shr
jno
push
push
lahf
mov
and
mov
pop
xlat
out
out
out
insl
aas
lods
test
repz
mov
jg
pop
mov
mov
stc
sub
fxam
push
mov
fscale
jnp
inc
sbb
pusha
pop
mov
mov
dec
ret
call
xchg
orl
mov
pop
popl
jmp
incb
mov
out
bound
icebp
or
jle
mov
fiaddl
or
push
sar
push
adc
outsb
call
inc
sub
scas
xlat
int
shl
adc
jl
inc
lahf
inc
loop
and
or
leave
movl
fstpl
push
cli
call
jb
mov
inc
gs
sub
mov
sub
lret
inc
test
jnp
rorl
decb
jl
push
leave
inc
add
dec
in
shlb
outsl
movsl
push
inc
cmp
repz
fldenv
mov
cmp
add
push
in
fadd
repz
push
or
push
push
in
adc
dec
push
pop
sub
gs
decl
mov
cmpsl
pmaxub
int
data16
jmp
sahf
testl
iret
dec
cmpsb
outsl
test
inc
sub
sub
pop
call
cmp
xchg
mov
inc
jp
mov
xchg
inc
add
fldenv
js
fwait
dec
cmp
daa
bnd
jmp
mov
mov
dec
xorb
jl
ja
imul
jno
sarl
pop
je
mov
cs
test
movsb
cmp
in
add
xor
cmp
fiaddl
push
std
fists
dec
nop
lcall
pop
ficoms
inc
mov
mov
jns
inc
call
pusha
inc
mov
and
push
mov
dec
sahf
jnp
arpl
sub
and
mov
sub
dec
mov
or
cmp
ret
lds
repnz
and
addl
pop
add
push
mov
mov
mov
les
hlt
cmpsb
in
insl
aaa
push
dec
movsb
enter
push
or
shlb
add
add
repz
test
dec
mov
movsb
call
scas
icebp
nop
sbb
jmp
ret
xchg
add
leave
out
inc
test
outsb
aas
pusha
mov
sbb
stc
sub
add
mov
dec
andl
push
and
jecxz
mov
icebp
mov
hlt
pop
adc
cmp
cmp
push
ja
movsl
daa
or
adc
jbe
push
scas
mov
lds
in
pop
inc
xchg
stc
pushl
sub
repnz
lret
lock
dec
push
mov
rcr
and
decl
aad
push
leave
xchg
or
movd
cmpsb
jp
push
xchg
rcll
fildll
mov
cmp
mov
mov
mov
pop
cmpsl
aad
in
sbb
push
inc
pop
or
xor
cmpl
fbstp
xchg
cwtl
pop
xchg
cmp
sub
xlat
inc
cmp
in
add
add
cmp
adc
jne
push
mov
in
xlat
out
je
cmp
push
dec
jmp
sbb
fxch
outsl
jge
xor
or
test
mov
xchg
mov
push
sar
sub
loopne
lods
jl
rcr
ficoml
sbb
push
and
arpl
inc
outsl
in
add
shrl
loope
pop
in
jmp
cmp
cmp
fstl
push
fdivrs
push
and
mov
xchg
jno
es
push
inc
andb
sub
out
js
ret
mov
sti
stos
mov
les
pop
xchg
in
and
jns
pop
inc
jne
not
les
mov
and
jno
pop
aas
mov
pop
xlat
push
sbb
cwtl
fs
xchg
dec
and
cmc
add
pop
rolb
lds
es
out
lret
out
cld
lret
nop
popf
push
scas
inc
jecxz
nop
int3
add
in
fs
test
cltd
mov
lret
sarl
ljmp
mov
pop
jmp
imul
je
sahf
adc
js
sti
mov
xor
push
fmull
lahf
xorb
shrb
sub
cs
inc
xor
jb
ds
jns
repz
adc
out
stc
js
or
pop
data16
add
add
mov
mov
sub
test
xchg
and
mov
insb
rcrb
and
jecxz
shl
and
dec
loop
cmpsl
out
push
test
aaa
add
pop
and
mov
aas
lods
lock
movsl
rclb
lret
shlb
orb
dec
hlt
stc
push
ljmp
inc
test
fsubrl
cmp
ss
hlt
pop
pop
sbb
sbb
insb
dec
sub
jae
fisttpll
test
pop
jl
pop
push
and
pushf
andb
mov
ret
icebp
pushf
faddp
ret
loope
jp
enter
xor
in
xchg
je
lret
enter
pop
mov
mov
adc
shlb
xor
or
jne
dec
in
lret
lods
pop
adc
push
pop
out
mov
pop
repz
xor
or
xchg
cmc
jge
cmp
sbb
mov
lahf
ja
daa
testl
cmp
pop
jne
jmp
and
fnstcw
aad
xchg
das
pop
stc
ja
fimull
bound
pop
fs
invd
ss
or
test
cmc
shlb
adc
mov
cmp
mov
cli
faddl
testb
add
xchg
lods
lahf
out
in
jo
out
jl
into
jmp
cli
hlt
out
cmp
or
or
dec
cltd
sbbl
dec
shl
out
adc
ds
or
pop
dec
push
pop
cmc
xchg
xchg
lea
xlat
scas
mov
mov
cmp
mov
adc
ss
sbb
ja
sti
jmp
mov
sbb
xlat
test
js
jbe
int
fiadds
rorb
test
rolb
sub
lcall
movsl
add
insl
push
or
jne
iret
shll
push
sub
ljmp
movsb
mov
mov
push
repnz
scas
or
or
add
fcomps
sbbb
add
or
mov
cmp
prefetch
cmpsl
jbe
mov
and
decl
mov
adc
mov
js
sahf
cli
in
mov
push
jne
push
mov
ss
xor
mov
roll
in
mov
mov
icebp
push
pcmpeqd
test
aaa
clc
sahf
sub
cmp
sub
repz
push
and
push
mov
jp
fsubl
ja
jnp
pop
fst
push
xor
xor
dec
pop
loope
popf
jnp
mov
popa
out
pop
stos
in
fbstp
xchg
jne
xchg
fwait
aam
stos
popa
dec
xor
loope
ret
mov
push
mov
jbe
mov
add
pushf
enter
bound
jb,pt
jmp
or
ret
sbb
or
xor
or
mov
iret
or
scas
inc
push
insb
icebp
out
testl
jo
cmpl
js
fsubr
push
cld
pushf
mov
and
jmp
ja
push
imul
jecxz
leave
add
mov
mov
mov
repnz
mov
xchg
enter
data16
pop
adc
pusha
stos
jge
sub
ret
xor
add
cmp
push
leave
in
movsl
mov
fldl
xchg
cmp
adc
pusha
movsb
adc
adc
mov
fsts
add
mov
rcl
jl
dec
cmp
dec
adc
add
cwtl
jp
push
mov
aas
xchg
into
mov
jns
jbe
stos
xchg
lods
cs
loope
stc
mov
sub
or
pop
mov
into
pushf
lret
or
pop
pop
cmpsb
popa
shl
repnz
add
loope
movsl
xchg
or
and
bound
lcall
sbb
ds
movsb
insb
push
in
or
ljmp
in
sbb
adc
xlat
clc
ljmp
out
lahf
shrl
mov
or
jb
arpl
pop
repz
mov
push
jle
psllq
rclb
add
cmp
dec
in
pop
sbb
pushf
jmp
mov
mov
jnp
push
jns
cmpsl
mov
mov
adc
push
incl
and
dec
dec
mov
pop
ljmp
add
fcmovnb
mov
outsb
test
xchg
lods
sti
xchg
les
xor
insl
push
cmp
xchg
xor
xchg
and
adc
or
ret
test
aaa
and
cmp
or
pop
xchg
dec
out
jae
mov
cltd
mov
dec
pop
dec
mov
mov
mov
mov
pop
ja
add
pop
stos
dec
sbb
lods
or
push
ja
loopne
inc
jle
dec
pop
into
mov
jecxz
or
xchg
or
inc
rorl
xor
lods
aam
sarb
mov
out
jb
daa
or
jae
sub
jo
mov
je
push
insb
cmp
sbb
fs
inc
cwtl
or
popa
js
loopne
lahf
push
ljmp
cmp
sbb
adc
fldenv
aaa
mov
jmp
imul
sbb
pop
cmpsb
adc
mov
popf
pop
btc
les
imul
lock
lret
inc
adc
mov
mov
jae
inc
data16
jmp
es
inc
fwait
mov
in
rorl
fldcw
adc
shr
in
pop
in
outsb
xor
jbe
add
and
jo
jl
jb
call
push
call
lcall
test
jne
ret
test
iret
xchg
adc
xchg
cmp
ljmp
adc
push
push
xor
sub
sbb
mov
out
loope
push
mov
xlat
xor
orl
jg
add
cmpsl
insl
push
jne
aaa
and
lods
mov
lods
stos
out
das
and
adc
into
adc
adc
xor
inc
xchg
push
pop
aaa
je
pop
xchg
scas
test
pop
jmp
xor
lcall
cmp
adc
or
inc
mov
imul
fsubl
rclb
cmpb
aaa
ja
inc
mov
dec
sti
xor
pop
push
xor
cwtl
sahf
jae,pn
pop
jl
add
mov
push
mov
in
mov
pop
call
push
outsb
lahf
mov
test
les
das
inc
jae
es
mov
mov
clc
xchg
and
xor
xchg
or
dec
lock
andb
scas
xchg
fldenv
xchg
mov
test
aas
jae
push
aad
jb
pop
stos
jge
jge
lret
out
dec
dec
jecxz
push
push
dec
sub
stos
mov
xor
mov
fwait
cmp
aaa
push
pop
fs
push
inc
jl
jg
or
lods
aaa
jp
push
imul
cltd
xchg
lahf
mov
je
dec
stc
fistps
mov
inc
iret
mov
push
push
rorb
adc
ljmp
cmpsl
and
stos
aad
mov
inc
add
ja
xor
adc
cmpsl
loop
or
xchg
icebp
cmc
adc
inc
test
daa
pop
xchg
out
mov
lea
sbb
jle
clc
sti
ljmp
sub
adc
and
lahf
sub
rcrb
int
setne
jge
jle
insl
push
sti
out
adc
cmpsb
das
cmp
cmpsb
inc
outsb
in
ja
cmpsl
pop
mov
jmp
dec
cmp
daa
mov
lock
pop
cld
jns
stos
insl
outsb
pop
pop
or
scas
push
and
in
or
daa
or
sub
cmc
mov
push
rol
sar
popf
inc
adc
daa
lock
std
stos
stc
out
imul
pop
xlat
icebp
lret
or
mov
adc
sbb
fstl
test
xor
push
rcrl
adc
cmp
push
popf
or
pusha
rorl
outsl
and
ret
mov
dec
test
push
or
notb
aaa
mov
mov
xchg
sbb
scas
fmull
ss
jo
xchg
icebp
dec
js
popa
imul
xchg
lcall
cmp
add
or
call
mov
sub
leave
scas
xchg
jmp
xor
pop
mov
xchg
mov
push
add
cmpsb
addl
push
dec
mov
jmp
and
inc
lods
sbb
loopne
and
jmp
in
xchg
ror
jmp
repz
inc
pop
repz
xor
and
dec
fwait
sbb
sahf
cmp
sbbb
sub
mov
jne
fistpl
xchg
xchg
adc
or
aas
jae
lds
mov
cltd
pop
lsl
and
adc
movsb
lock
push
jp
xchg
xor
fmull
push
mov
stos
sbb
or
ror
xchg
popa
mov
push
or
adc
cmp
clc
push
sbb
mov
inc
dec
mov
mov
popa
out
sbb
sbb
and
mov
lret
fistps
pop
lcall
xchg
sbb
xor
in
ds
out
and
jno
test
clc
enter
dec
dec
xor
mov
cmp
add
lods
in
je
or
mov
jmp
adc
hlt
jo
pop
dec
fwait
jb
push
outsl
std
scas
sbb
out
test
setb
jp
scas
hlt
sub
sbb
mov
out
aas
jb,pt
test
scas
scas
addr16
out
loop
xchg
ja
repnz
sub
xchg
insl
fs
dec
jg
dec
xor
rcrl
xchg
out
dec
aas
aad
das
fsubr
pop
sti
sub
push
add
jp
mov
aad
add
call
sub
jbe
or
xorl
dec
jns
sbb
iret
aam
sbb
ss
test
sarb
sti
sub
repnz
inc
mov
es
fsubrs
loop
mov
add
adc
shr
sbb
loope
cmp
push
and
es
xchg
push
cmp
shl
inc
jg
push
dec
hlt
sub
call
stos
cmp
push
xchg
aam
js
adc
push
xchg
jecxz
fcoms
jbe
adc
dec
aam
bound
aam
jge
xor
cmp
outsb
sahf
outsl
jno
adc
cmpsl
jp
xchg
xchg
arpl
xchg
shrl
push
cld
push
add
ret
out
mov
dec
mov
mov
out
inc
lahf
push
shlb
insb
out
push
or
fwait
cmc
subl
mov
inc
xchg
fsubrs
loope
je
push
mov
adc
adc
iret
cmp
cmpb
mov
loopne
inc
inc
mov
mov
cld
imul
sbb
nop
sbb
adc
push
adc
lret
sarb
leavew
xchg
cmp
jnp
xchg
insl
sahf
xchg
imul
dec
xor
fisubrl
jle
jae
xchg
pop
xchg
sti
pop
cmp
lods
sub
push
mulb
pop
mov
jecxz
mov
xchg
je
sbb
dec
pop
outsb
push
adc
les
scas
xchg
test
fcomp
push
dec
dec
dec
adc
and
and
es
sub
and
lock
call
xchg
sub
mov
ss
lods
pop
push
ficoms
mov
rcrl
pop
lods
outsl
out
inc
mov
jae
xchg
cmp
and
and
add
scas
dec
rol
hlt
jecxz
imul
jne
adc
movsb
test
imul
cmp
add
lret
gs
mov
test
push
ret
pusha
adc
pop
or
fsubl
daa
test
icebp
inc
adc
mov
mov
in
mov
cmpsl
jnp
icebp
sub
repz
fistl
and
jnp
cmc
ja
xor
dec
jns
in
or
or
outsl
pushf
arpl
xor
mov
cld
mov
sub
jl
test
dec
aas
imul
pop
jno
cmp
aad
or
jnp
pop
movsl
stc
jmp
xchg
jbe
add
jmp
aas
xchg
push
mov
jg
imul
test
cmp
out
cmp
les
cmp
out
xor
sbb
pop
dec
jecxz
icebp
pushf
mov
imulb
push
scas
inc
dec
push
decb
sub
popf
ds
out
mov
pop
inc
mov
enter
out
mov
adc
and
aam
leave
pop
aad
xor
xchg
or
stos
inc
or
xchg
scas
jl
or
inc
je
pop
push
cs
mov
jmp
mov
pushf
out
out
xor
cmp
mov
out
repnz
xchg
xchg
nop
cmp
sbb
movsb
hlt
adc
xorl
push
mov
mov
sub
jne
pushf
and
and
loopne
inc
or
add
adc
mov
fsts
sar
adc
roll
movsl
leave
sbb
cltd
enter
popf
enter
leave
pop
sub
mov
arpl
mov
jle
call
in
fidivrl
push
or
das
repnz
xor
push
fbstp
mov
jno
ss
push
and
in
in
and
daa
push
mov
xchg
mov
cli
movsl
fsubrs
pusha
xor
cs
rcrb
sub
push
movsb
and
xchg
aam
pop
adc
mov
fs
jo
lods
orl
fs
mov
cmpb
sub
inc
sbb
sub
frndint
xor
mov
mov
out
mov
idivl
push
adc
shlb
or
add
stos
mov
cmp
ret
jg
adc
test
mov
adc
jbe
sbb
test
inc
mov
fnsetpm(287
lock
and
jno
dec
jp
sub
ret
loope
cwtl
cmp
xor
testl
push
lahf
jns
nop
ret
inc
xchg
adc
cli
lea
or
out
pop
mov
in
pop
hlt
xorl
das
cmc
in
shrb
cmp
movsl
inc
push
mov
ret
sub
out
daa
in
fnstenv
pop
test
jnp
stos
jge
scas
sti
jp
je
nop
adc
clc
sbb
pop
out
mov
mov
int
ja
push
std
pop
lmsw
imul
cwtl
andb
cmp
jg
push
sahf
lods
push
sub
push
xchg
jge
mov
cwtl
cs
adc
aaa
out
mov
mov
jno
orb
add
dec
lret
pushf
mov
sbb
stos
pop
cmpsb
inc
shufps
inc
out
outsb
pop
test
les
jb
insl
jo
add
lahf
enter
cltd
sahf
push
stc
cld
sbb
fldl
dec
popa
pop
sub
push
sub
cwtl
sub
inc
data16
icebp
push
xchg
xchg
jo
test
cmp
shrl
icebp
adc
test
dec
std
ret
mov
push
xor
out
rolb
aas
js
or
ds
cmpsl
cmp
sbb
daa
jb
xchg
mov
xlat
orb
fs
add
fistl
fs
int
mov
lock
add
cmc
and
sti
loopne
movsl
movsl
and
outsl
aam
mov
push
rcll
mov
stos
mov
adc
dec
negl
push
sti
sbb
mov
in
hlt
cmpsl
mov
inc
lret
inc
mov
push
scas
ret
cmp
and
xor
adc
sbb
out
mov
sub
dec
icebp
imull
mov
adc
outsb
xchg
insb
in
fildll
inc
jne
mov
insl
les
mov
dec
push
pop
sub
pop
fsts
push
and
mov
xor
shlb
arpl
adc
fabs
mov
jle
enter
jbe
xor
fcompl
add
inc
mov
cmpsl
mov
mov
fnstcw
jne
dec
jmp
stos
stos
fimuls
insl
push
mov
dec
pop
sub
notb
inc
lahf
adc
into
sub
or
or
cwtl
ljmp
mov
sbb
int3
push
cmc
jge
fsubl
adc
movb
sub
out
jecxz
in
xchg
jp
xchg
dec
push
jns
xor
adc
vpcmpeqd
mov
fucomp
pop
shlb
mull
iret
and
lcall
sar
inc
les
jb
jnp
flds
popa
cmpsb
data16
lods
loope
ret
aaa
sti
lds
testl
arpl
ficompl
push
aas
jge
mov
scas
and
jp
mov
mov
and
jns
lret
popa
mov
lods
push
lds
scas
xchg
aad
mov
aaa
aad
gs
ror
xor
add
mov
clc
stos
jns
mov
in
and
dec
pop
pcmpgtb
or
and
pop
pop
nop
adc
es
pop
cmp
pop
icebp
out
aaa
sahf
jecxz
xchg
or
jnp
jo
popf
std
dec
aad
and
repz
test
daa
xor
arpl
adc
inc
ret
dec
push
lahf
sbbl
inc
sti
or
xchg
ds
pop
mov
cmc
xorb
sahf
fucomp
xchg
sar
push
arpl
pop
pop
add
sbb
shl
xor
cld
gs
cli
movsl
test
adc
int3
cmp
fnstenv
jno
adc
lock
in
jb
cs
mov
sub
imul
test
and
push
adc
pop
lock
es
xor
rcrb
aaa
or
pushf
mov
xor
mov
lahf
kmovw
cli
inc
jb
repz
lods
cs
mov
enter
cs
mov
popf
test
notb
inc
mov
aam
or
pop
xchg
movb
pop
pop
outsb
pop
inc
movb
inc
cs
lds
or
cmp
adc
les
lods
and
xchg
leave
adc
mov
mov
push
repnz
orl
xchg
in
mov
xchg
pop
cs
ret
fidivs
sbb
aam
mov
aad
sub
out
pusha
cmpsl
pop
and
jp
cmc
xchg
adc
sbb
loope
inc
push
in
sbb
jl
jecxz
jge
aad
cld
add
cmp
out
xor
call
dec
xor
xchg
mov
adc
test
mov
neg
dec
movsb
lahf
dec
sarb
shrl
out
xor
pop
es
mov
rolb
stos
les
xor
pop
or
daa
add
push
push
sub
cli
mov
ljmp
loopne
push
sub
push
addr16
nopl
sbb
jnp
ja
ja
adc
push
adc
dec
stos
mov
shrl
daa
add
insb
jle
orb
sub
loope
adc
mov
and
and
jne,pt
mov
inc
int
gs
sti
adc
imul
xor
sbb
adc
or
inc
xlat
sbb
cs
jb
mov
pop
adc
and
sub
dec
sbb
sub
jno
and
xor
jbe
out
push
mov
je
cmc
xchg
mov
aam
jo
in
inc
dec
sub
sysexit
cmp
lcall
sarb
js
mov
ja
shrl
pushf
clc
rsqrtps
push
mov
xor
sbb
int
outsb
mov
repnz
xor
dec
dec
dec
ret
movsl
cltd
or
xchg
stos
cli
and
and
das
pop
mov
lds
imul
daa
xchg
adc
andb
jmp
jo
mov
pop
in
loopne
xchg
flds
adc
ja
ret
outsb
aam
mov
jbe
aas
leave
sbb
lods
cmp
mov
pop
test
rorb
cli
and
lods
sahf
outsl
cmp
adc
xor
push
jmp
add
lret
mov
mov
inc
dec
mov
out
sbb
adc
pop
fsubrp
sarl
dec
add
sbb
or
ror
enter
idivl
xor
or
rcr
cmp
scas
add
repnz
inc
ljmp
push
mov
test
ja
or
xchg
mov
jmp
jle
jge
sub
jae
scas
jae
jne
sbb
dec
int3
mov
add
loopne
sbb
imul
je
sbbb
outsb
loopne
dec
mov
vorps
xor
ja
sub
incb
jae
pop
push
icebp
xor
adcb
fidivrl
cwtl
fimull
and
filds
push
pop
add
out
add
ret
insb
or
xchg
cmc
mov
test
cwtl
enter
xor
jo
or
pushf
mov
xchg
xchg
adc
or
scas
sbb
dec
mov
cmpsb
sub
add
mov
mov
jae
sub
movsb
jae
mov
arpl
dec
out
lret
jnp
gs
lods
rorl
fs
fs
sbb
sub
pop
in
in
jge
inc
addr16
cmp
mov
in
leave
arpl
popf
mov
pop
js
lods
mov
into
shll
scas
jae
lea
mov
inc
fs
dec
mov
push
int3
pop
inc
or
mov
push
out
int3
mov
add
dec
sub
mov
movsb
sbb
int
pushf
jge
clc
aad
xor
cmp
call
inc
out
stos
pusha
mov
int3
int3
mov
sub
xor
inc
push
gs
push
mov
and
or
outsl
cmpsl
negl
push
mov
lods
push
pop
and
aas
jecxz
in
pop
repz
arpl
bound
mov
arpl
dec
or
push
mov
jbe
xchg
rolb
fcomip
mulb
aam
clc
cltd
daa
int
or
push
aam
pop
add
mov
xchg
cs
pop
or
xor
mov
loop
lods
sbb
xchg
pushf
sub
pop
xchg
psrlw
xchg
pop
ret
dec
mov
jecxz
lea
pop
sbb
or
in
cli
pushf
loope
insb
lds
stos
std
dec
aam
mov
cld
cmp
insl
addr16
mov
das
or
lods
out
mov
lret
mov
pop
sub
dec
repz
dec
jecxz
in
in
jnp
pusha
sub
xchg
ret
js
xor
pop
and
imul
clc
jge
es
mov
inc
sahf
xchg
std
jmp
sub
dec
scas
or
cmpsb
push
dec
sub
stc
call
jns
mov
lcall
mov
cs
sbb
roll
leave
xchg
bound
or
bound
xchg
in
jp
pop
and
push
inc
pop
or
leave
jne
fstp
loop
inc
push
mov
jmp
int3
stos
in
xor
mov
addr16
sub
ljmp
test
repz
sbb
pop
jo
loope
stos
jnp
sub
clc
in
jno
in
pop
inc
movl
jle
das
test
or
sub
in
nop
pop
mov
jnp
lock
negb
movsl
movsb
jnp
aaa
xor
mov
xchg
shll
sbb
int
jnp
mov
stc
sbb
jp
addr16
movsb
inc
ret
add
pop
rorb
jbe
hlt
jno
xlat
cmp
xor
outsl
sahf
pop
xor
hlt
dec
insl
sahf
mov
push
sub
mov
fnstcw
roll
xor
aam
outsl
jb
scas
xchg
dec
jno
scas
pop
pop
mov
les
ljmp
and
imul
push
sti
popa
scas
fildl
nop
loopne
shlb
cmpsb
or
mov
sub
imul
pop
push
sbb
aam
add
sub
push
sub
stos
xor
aad
fimull
ret
leave
fdivrl
sti
sbb
movups
jne
popa
inc
pushf
push
outsb
int3
inc
pop
sahf
lahf
rcr
push
cmovno
adc
sahf
or
lcall
pop
call
pushl
mov
lret
call
outsl
lods
pushl
je
push
ja
lea
data16
and
int3
pop
jecxz
cld
je
sbb
sbb
lahf
jo
add
sbb
popl
iret
push
out
in
push
int
add
call
dec
xchg
icebp
pop
fnstenv
sbb
lods
push
fidivrl
mov
adc
call
sbb
int3
pop
mov
test
mov
sub
outsb
cmpsl
adc
mov
cmpsl
outsl
ja
stos
in
int
adc
addl
imul
iret
adc
push
cltd
sub
aaa
add
test
jns
in
ret
subl
push
and
xchg
or
std
icebp
mov
dec
stos
ret
xchg
pop
clc
mov
xor
cli
jl
cmp
fcmove
scas
mov
jae
ja
fistps
xor
dec
leave
xchg
jecxz
adc
mov
xlat
xlat
cmp
xor
in
out
xchg
dec
inc
fcmovnu
add
and
addr16
jns
jle,pt
test
xor
and
repnz
mov
shll
mov
inc
add
push
pop
jp
std
adc
cmp
leave
ljmp
fmulp
sub
pop
loopne
stos
dec
insb
imul
or
cmc
ret
lret
xor
sbb
xchg
mov
fdivs
or
push
hlt
cmpb
andb
mov
cmp
cmp
test
aaa
pop
aaa
push
aam
mov
mov
sub
fxam
cmp
lea
ret
dec
add
jmp
cmp
mov
sub
jmp
mov
aad
pop
aas
out
push
int3
and
ja
pop
add
lahf
dec
push
and
movsb
dec
mov
xchg
xchg
cmp
rcll
repz
or
clc
or
jae
cs
dec
sub
cmc
js
jl
mov
add
mov
cmp
cmp
or
pop
insb
es
jmp
andps
xor
push
mov
das
jo
inc
sbb
sub
mov
cmp
dec
gs
lea
aaa
pop
xor
cmp
lds
inc
mov
pop
std
out
sub
xchg
insb
lods
mov
out
jge
movsb
sub
rorl
pop
adc
ds
mov
dec
adc
dec
filds
fdivrl
jns
push
or
lds
xchg
inc
dec
lcall
loope
clc
rclb
clc
and
xor
add
aaa
mov
data16
cmpsl
fsubrp
lret
in
jno
mov
add
lret
cmpl
mov
clc
push
leave
push
enter
add
pop
lcall
pop
sarl
test
les
dec
xor
das
adc
jb
mov
shr
sahf
inc
mov
xchg
push
cwtl
sbb
outsb
adc
mov
insl
pop
mov
dec
jno
inc
inc
lds
fisttpll
cwtl
lods
arpl
cs
addl
mov
mov
push
mov
iret
ss
bnd
cld
test
stc
xchg
hlt
leave
cld
divl
jns
push
ja
addr16
inc
mov
sub
adc
inc
in
sarb
mov
mov
pop
xchg
nop
and
lahf
cmpsl
mov
testl
jb
pop
gs
sub
push
in
ret
in
pushf
adc
or
leave
mov
xor
leave
dec
cmp
orl
dec
imul
sub
icebp
add
mov
mov
mov
fst
int3
jne
mov
jo
pusha
mov
xchg
loope
clc
mov
cltd
std
pop
fisttps
and
fbstp
clc
pop
hlt
pop
mov
mov
push
sub
inc
incb
pop
sub
xchg
cmpsb
fiadds
in
sbb
ja
pop
cmp
sbb
dec
repz
push
mov
ss
dec
cmp
adc
push
inc
sub
aaa
and
adc
pop
aam
jb
push
push
push
incb
daa
push
and
test
lcall
add
repz
leave
hlt
int
jo
aad
mov
fbstp
cmpsb
mov
mov
push
jmp
xor
xchg
aaa
or
mov
bound
pop
into
push
in
out
aad
scas
fmull
in
cmp
sbb
xchg
lret
add
movsb
stos
and
cli
or
and
fistl
sbb
loope
xchg
mov
sbb
insb
movsb
jp
and
leave
cmp
inc
push
pop
cmp
sbb
hlt
dec
mov
aas
mov
xchg
jno
loopne
aad
push
insb
lock
pop
arpl
jle
mov
lock
pop
cmpsb
insl
fwait
mov
push
push
push
sbb
scas
out
mov
dec
and
shrl
addl
sub
xor
dec
jno
fsubs
cmpsl
mov
sbb
shrb
and
push
mov
adc
sub
mov
mov
lcall
sub
sbb
sbb
xor
cwtl
movsb
shr
jg
push
int
mov
xchg
stos
aad
lret
mov
es
cli
ret
mov
push
cmpsb
mov
test
ds
xor
inc
sub
xor
pusha
push
and
sub
repz
xor
pusha
adc
push
aam
cwtl
dec
xchg
arpl
sub
jno
adc
mov
sti
outsl
into
or
fisttpl
mov
daa
pop
sub
bound
pop
mov
das
test
dec
icebp
mov
add
inc
cmp
out
imul
fadd
int3
cwtl
popf
cld
dec
test
pop
cld
jbe
ss
idivl
leave
dec
mov
sub
test
cmpsl
dec
aam
dec
ljmp
mov
dec
cmpsb
push
clc
pop
jl
scas
cmc
dec
add
loop
dec
fcomp
and
mov
jg
add
js
push
mov
cli
pop
imul
sbb
push
inc
in
pop
pop
xchg
push
outsb
and
mov
mov
pop
xchg
adc
mov
ds
aad
or
call
notl
jno
gs
cmp
jo
xchg
sbb
aaa
and
mov
adc
dec
inc
test
inc
sbb
fcoms
push
idiv
push
push
aad
lret
push
cmp
xor
add
out
xchg
push
sub
mov
dec
ret
xlat
pop
push
sbb
or
fbstp
pushf
lea
xchg
stc
mov
xchg
push
stos
shll
sbb
cld
int3
test
mov
jnp
or
stos
orl
clc
fsubr
push
or
adc
sub
fsts
mov
imul
push
imul
sbb
outsl
sub
pop
add
and
movsl
pop
in
xchg
cmp
enter
sbb
mov
pop
xor
call
sti
in
and
pop
repnz
add
pop
mov
repz
mov
adc
push
outsl
test
mov
out
jae
xor
or
push
int
lret
xchg
xchg
out
outsb
jnp
inc
insl
test
xor
dec
in
pop
adc
in
pop
sub
cmp
aam
and
sub
sub
mov
shrl
insl
pop
pop
sbb
idivb
or
es
lcall
xor
clc
das
pop
adc
insl
jecxz
fmuls
mov
adc
scas
sub
insl
pop
in
cli
sbb
sub
fstpl
std
push
movsb
out
lods
lods
inc
leave
sub
mov
jnp
pop
sbb
add
jmp
mov
insl
mov
repnz
repz
cmpb
es
jmp
jnp
fdivrp
adc
sub
add
bound
mov
jp
lods
mov
not
cmp
addr16
divb
mov
mov
xchg
insl
std
adc
jp
in
ljmp
lea
divb
scas
adc
xchg
lret
dec
jmp
mov
test
push
stos
nop
hlt
jg
in
outsb
mov
movsl
in
mov
add
imul
pop
mov
add
fdivrp
pushf
shlb
sbb
imulb
or
dec
enter
pop
shll
in
mov
mov
mov
or
add
sahf
hlt
lcall
push
lods
dec
lret
rcrl
insl
mov
loope
sbb
adc
add
jno
push
hlt
mov
inc
inc
dec
lret
call
fldt
or
push
xrelease
pop
stc
add
xor
in
cmp
pop
push
es
mov
mov
inc
loopne
sbbb
pop
push
lds
push
cld
stc
push
and
mov
leave
test
xor
enter
mov
call
ljmp
mov
push
and
stos
pop
repnz
mov
insl
and
mov
in
stos
adc
loope
int3
mov
jmp
mov
push
cld
outsb
andb
or
scas
jmp
cmc
jbe
sbb
fisubrl
pusha
adc
loope
xorb
push
xchg
or
jg
pop
add
adc
loopne
mov
stc
sbb
pop
jne
js
pop
rorb
shll
aas
ret
dec
fnstsw
cmp
xchg
mov
xchg
clc
insb
and
dec
jecxz
stc
xchg
cmp
insl
sbb
into
cmc
rol
mov
sbb
jns
cli
jmp
bound
xor
pop
fs
xorb
mov
cs
lret
das
mov
aas
orb
lds
add
mov
adc
pusha
xchg
std
dec
mov
push
jmp
mov
roll
nop
test
jnp
pop
adc
add
push
and
ds
pop
push
clc
inc
stos
sbb
aad
repnz
inc
pop
pop
dec
jbe
mov
lcall
adc
jmp
cmp
test
jmp
pop
scas
mov
add
push
jp
outsb
adc
xchg
xor
fs
mov
inc
fcoml
aad
add
loope
dec
fdivs
mov
lcall
push
pop
test
dec
and
and
popa
movb
jg
sti
insb
or
adc
cltd
mov
jbe
stos
or
int3
in
cmp
loop
inc
outsb
push
inc
cmp
xchg
sub
jl
or
or
popa
shl
ljmp
add
cltd
call
pop
inc
cmp
sarl
mov
jmp
push
iret
pushf
aas
popf
xchg
push
xchg
popf
lret
push
mov
dec
mov
sarb
add
dec
fldl
ja
stos
icebp
dec
stos
dec
inc
sar
mov
dec
xor
addb
fdivs
gs
jge
pop
ljmp
push
xchg
mov
cwtl
fwait
sub
nop
scas
cli
push
outsl
push
fldt
call
ja
shr
xchg
dec
inc
inc
jbe
xor
out
lds
mov
mov
mov
xor
mov
push
cmpsl
mov
lcall
shll
shl
imul
icebp
cs
dec
sub
ljmp
pop
xor
rcl
mov
in
faddl
ja,pt
cmp
out
jmp
lret
js
inc
cmp
lahf
jno
jnp
jno
test
ret
xchg
sbb
sub
xor
je
mov
test
add
push
js
pop
dec
dec
inc
lock
push
mov
mov
mov
jns
bound
add
pop
and
shll
call
mov
mov
or
push
jp
ljmp
aam
mov
xor
sarb
mov
sub
cmp
cmp
xchg
pop
sub
xchg
test
gs
insl
sti
push
ss
mov
out
enter
sti
adc
mov
loopne
std
jg,pt
xchg
and
loop
scas
hlt
cmc
pop
mov
jl
xchg
jecxz
movsb
hlt
into
imulb
jo
or
fwait
cli
push
mov
sbb
subb
pop
aad
xlat
xor
lods
fdivrs
popl
cmc
aad
popa
push
pop
fstps
cmp
inc
push
xchg
push
cmp
lea
jl
stc
divl
xchg
jnp
xchg
and
insb
test
insb
mov
push
outsb
dec
notl
dec
mov
cmp
pop
xor
rcrb
mov
insl
stos
mov
mov
add
xchg
insb
testb
movsb
mov
mov
push
addb
andb
xor
imul
mov
mov
or
mov
inc
cwtl
mov
cld
inc
ss
subl
lea
outsl
cmp
int3
repnz
pop
sbb
xchg
ror
cmp
xor
dec
dec
rclb
aam
or
sbb
mov
test
in
ss
pop
out
stos
jmp
fldcw
aaa
idiv
jle
pusha
dec
push
fwait
mov
adc
or
push
sub
jg
cltd
ret
mov
mov
loop
xchg
cmpsb
icebp
test
mov
scas
dec
sbb
stos
jbe
inc
ss
xchg
rcll
daa
in
cmp
mov
bsf
in
pop
jle
mov
ret
std
sub
andl
cs
jb
sub
addr16
pop
fisubl
repnz
mov
xchg
mov
rclb
pop
filds
dec
inc
icebp
test
fcomp
adc
sub
lret
pushl
pop
testl
loopne
loope
sbb
dec
pop
lcall
jne
rol
adc
pusha
xor
cmp
lods
xchg
test
loopne
push
jecxz
cmpsl
jno
xor
fwait
and
xlat
enter
mov
rorl
mov
mov
fistpl
fldenv
nop
fucom
adc
and
movsl
mov
shr
addr16
lret
das
sub
add
mov
mov
xchg
mov
decl
popf
rcrl
or
push
inc
jnp
into
outsb
pop
aad
adc
sti
xchg
sbb
adc
pop
shr
or
fimuls
cld
fisubl
xor
sub
xor
jge
out
push
cltd
fistpll
movsl
xchg
xchg
mov
adc
fidivrl
dec
insl
fbld
or
pop
mov
or
adc
sbb
mov
adc
push
and
add
into
out
or
sub
xchg
dec
js
jbe
inc
lods
and
dec
ret
in
xchg
and
pop
cmp
lock
jp
imul
hlt
ret
fnstcw
out
pop
jb
outsl
mov
scas
jp
jmp
sti
rclb
pop
sbb
lock
xor
pop
dec
jl
lret
setge
jbe
scas
dec
int3
fs
sbb
sub
lock
ret
lea
into
lods
mov
xor
jle
popa
mov
cmpsl
orb
sti
mov
nop
or
pop
xor
mov
out
movsb
mov
sahf
jo
ss
push
outsb
stc
lcall
test
or
sti
xor
test
adc
clc
dec
fimull
xchg
or
mov
outsb
fnstenv
mov
sbb
lea
das
xchg
dec
cltd
gs
push
add
repz
std
dec
shl
xor
add
das
push
mov
out
std
pop
dec
mov
mov
xchg
mov
loopne
lods
sti
mov
lahf
pop
lods
add
rcrb
push
xor
pop
lods
or
xchg
ds
in
psubb
rcrl
ja
mov
jmp
lock
push
xor
shrl
xor
sbb
pop
mov
bound
enter
adc
test
mov
je
mov
test
imull
or
sub
aam
and
sub
inc
ljmp
add
fiadds
pushf
inc
sbbl
cld
cmpsb
jl
mov
daa
shrl
pop
and
aam
xchg
testb
lods
mov
shrb
int
mov
mov
pop
outsb
cmpsl
sub
dec
fucom
dec
ja
push
into
sbb
mov
sub
sub
int
enter
daa
outsb
or
cli
lds
scas
orb
fisubrl
push
xor
or
in
sbb
mulb
fisubl
outsl
jmp
cmp
mov
mov
push
sahf
jmp
incl
sbbl
data16
inc
pop
cltd
mov
fsubrs
aaa
fwait
lock
mov
and
cmpsb
inc
rolb
and
fmuls
out
pop
dec
cmpsb
sbb
jns
and
testl
je
cs
or
jne
outsl
daa
sub
or
xor
push
leave
mov
jg
mov
pop
imul
ret
ljmp
pop
dec
push
out
dec
mov
sub
xchg
adc
mov
ret
jmp
jp
sbb
scas
push
cmp
xlat
push
cmpsl
test
cltd
lock
daa
mov
lahf
sub
cmp
mov
lods
cmp
stos
shrl
lret
sub
push
cmp
mov
push
imulb
arpl
aad
inc
repz
push
inc
fldcw
mov
aas
and
fisttps
scas
cmpsl
cmpsb
cmpsl
lods
sbb
push
jno
scas
and
test
add
push
movsl
lods
pop
adc
sub
xchg
mov
and
cld
rcr
add
loope
cld
sub
in
lods
jb
addr16
out
cmp
aas
leave
sbb
imul
loopne
sub
popf
mov
inc
push
inc
test
or
mov
pop
pop
mov
insl
rclb
frstor
cld
mov
cmp
das
inc
movsb
pop
ljmp
xor
mov
outsl
mov
sbb
add
dec
in
pop
dec
cmpb
inc
idivb
sbb
loope
push
mov
jecxz
xchg
stos
cmpsb
lea
outsl
sub
lock
movsl
lret
daa
cmp
andl
pop
and
in
hlt
icebp
sbb
xchg
or
or
push
popa
pushf
flds
mov
dec
push
mov
mov
sbb
pop
nop
shr
xor
popf
imul
pop
xchg
mov
popf
in
or
sbb
inc
or
mov
lods
scas
scas
sub
or
sbb
loopne
and
dec
pushf
xchg
cmp
test
lods
lds
push
pop
aas
push
or
cmp
bound
movsb
jge
jg
mov
mov
repnz
lret
sbb
pop
jo
pushf
rorb
and
pop
mov
cltd
leave
xchg
int
inc
popa
adc
cmp
dec
stos
xor
or
sub
xor
pop
loop
add
xchg
push
mov
xor
loop
das
ficompl
dec
jae
pop
adc
cmp
adc
cwtl
adc
inc
inc
test
push
imul
sub
orb
jmp
fdivrp
push
lods
pop
mov
repz
xchg
cmc
push
push
mov
xchg
icebp
jne
pop
and
sub
push
mov
mov
stos
pop
pop
sbb
out
shl
aas
cmp
stc
jo
mov
dec
hlt
arpl
xor
jne
xor
sub
xor
inc
push
std
orb
dec
test
scas
push
mov
cltd
push
js
inc
mov
lcall
adc
jbe
or
cmp
cli
in
shlb
dec
std
sbb
xchg
movsb
pop
cwtl
pop
scas
in
ja
xor
icebp
cmpsl
sahf
into
mov
cwtl
sub
aas
cld
iret
dec
je
mov
scas
cmpsb
mov
test
push
push
aad
jl
shll
daa
pop
pop
pop
in
adc
enter
pushf
daa
push
adc
lods
dec
jb
fwait
ja
mov
ret
sahf
xchg
pop
iret
xor
mov
pushf
negb
aam
mov
sarb
fxch
sti
mov
adc
ss
push
dec
jns
inc
mov
pop
aas
in
fsts
loope
xor
cmc
xlat
push
adc
adc
or
or
in
gs
and
stos
xchg
mov
inc
cmpsw
imul
loop
cwtl
xchg
cmp
lock
jge
push
sub
dec
inc
outsb
arpl
sbb
js
push
aad
or
jns
adc
mov
daa
aaa
and
push
orb
test
xor
xor
sub
jg
adc
lods
xchg
or
int
jno
mov
popa
nop
lods
clc
pushf
jns
push
popa
into
ss
push
repnz
cmc
xchg
enter
xlat
dec
mov
sahf
ljmp
arpl
push
cld
inc
arpl
neg
lret
ret
adc
leave
dec
shll
mov
fildl
jb
mov
ljmp
cmc
jg
jmp
movsl
jecxz
pop
aas
test
and
mov
insl
dec
adc
push
lahf
adc
and
repz
and
and
lock
jmp
adc
jle
mov
test
and
ret
arpl
cmp
push
dec
sbb
or
mov
imul
sbb
sarb
arpl
sub
sarl
jne
in
push
sarl
cmp
mov
xchg
push
push
sbb
cs
push
pop
stc
mov
es
cmp
mov
and
lret
xchg
xchg
lea
jmp
ds
push
sbb
int3
sub
aas
clc
jo
pop
test
jle
pusha
cwtl
pushf
pop
push
and
daa
adc
pop
call
sub
mov
pop
dec
test
cltd
outsl
jge
fidivs
xchg
sti
mov
es
jecxz
inc
sahf
inc
jno
cmp
sbb
and
flds
push
mov
into
and
jl
xor
lock
dec
sahf
cli
add
in
sub
repz
outsb
cld
inc
lods
fldenv
push
mov
xor
lock
std
cmp
cmpb
mov
insb
fmul
aas
sub
movsb
bound
adc
in
fwait
mov
push
pop
mov
test
xlat
push
mov
loope
pop
push
fs
sbb
push
loopne
fs
sbb
push
rcrl
adc
pushf
or
out
xchg
cmpsl
mov
or
push
mov
nop
push
inc
sub
inc
cld
je
push
icebp
shll
fsubl
pop
pop
xchg
fsubrl
popf
movaps
or
mov
xchg
shrl
hlt
mov
jle
sti
popf
sbb
sbb
stos
jecxz
inc
pop
pusha
mov
loopne
rcl
adcl
mov
mov
out
inc
jecxz
pushf
imul
call
jae
adc
ret
nop
ljmp
je
xor
xlat
dec
fs
cmpb
or
int3
neg
and
iret
adc
mov
cli
popa
je
in
cld
cmp
fwait
aaa
mov
inc
sbb
loop
test
and
cmp
ds
inc
push
jns
sahf
push
jmp
xchg
jae
fmull
aam
stos
test
jb
dec
test
mov
adc
xchg
cli
xchg
imul
xor
sbb
push
dec
movsl
lret
pop
int3
icebp
ret
aad
popa
mov
pop
out
jo
stc
adc
inc
incb
jecxz
not
xor
inc
fucomi
repz
dec
mov
vpunpckhbw
mov
movsl
in
or
xchg
push
insl
ss
inc
lret
ja
adc
sbb
subl
sub
dec
ss
sti
add
sahf
ss
movnti
or
adc
repz
cld
in
movsb
mov
push
and
push
jge
push
pop
xor
dec
inc
scas
cmp
jecxz
sbb
lcall
or
fists
and
and
mov
aad
inc
cmc
mov
iret
pop
adc
pop
imul
sub
dec
popa
sub
ljmp
in
aam
iret
jno
mov
leave
fimuls
add
cwtl
inc
daa
lods
stos
pop
jnp
mov
sbb
push
cmp
jmp
ds
xor
push
in
pop
popf
cmp
mov
outsl
push
testb
imul
in
push
mov
nop
dec
sub
add
iret
add
sbb
test
fwait
jbe
dec
push
adc
repz
popa
aaa
int
fisubrs
stos
jo
hlt
stos
jo
pop
and
fdivr
cmpb
lock
ds
inc
pop
pop
into
push
mov
sbbb
pop
bound
test
pop
push
out
stc
iret
addr16
scas
sbb
lock
es
shll
ficoml
popf
jbe
adc
in
xchg
pop
or
inc
test
pop
xor
out
les
jno
les
jbe
insl
sbb
jne
out
es
inc
cmc
movsb
ret
pop
xorb
dec
fwait
fwait
insb
lret
mov
pushf
mov
xchg
xor
sub
mov
adc
jge
aas
loopne
cmp
lods
or
leave
lods
cld
scas
cmpsl
sahf
or
fdivr
lods
and
mov
mov
inc
repnz
jmp
outsb
or
insl
cmp
fldt
cmp
rcll
or
xchg
popa
lods
push
addr16
rorb
addb
and
test
andb
and
mov
lret
add
inc
sbb
aas
adc
popa
testl
cmpsb
jb
dec
push
dec
loop
jmp
js
jp
mov
mov
cmp
or
sub
adc
test
push
out
jbe
cmpsl
or
push
push
jns
adc
cld
mov
xorb
fimuls
xchg
inc
int
shlb
test
int
icebp
mov
and
ja
xor
jo
test
adc
int3
sub
xchg
push
sbb
and
xchg
cmpsb
sub
call
repz
sbb
and
out
testl
jle
enter
add
enter
inc
pop
push
flds
cwtl
mov
pop
mov
sarl
adc
outsl
sarl
jmp
aaa
scas
int
sbb
cmp
xlat
mov
fidivrs
insb
mov
mov
cmp
loop
mov
mov
mov
jecxz
and
lods
ret
sbb
xchg
pop
nop
fidivrs
out
mov
dec
push
into
out
push
xchg
imul
jae
stos
and
sub
mov
or
or
add
in
cltd
mov
cmp
xlat
xlat
add
jne
ljmp
test
in
int3
int
repnz
dec
aas
sbb
mov
xchg
cmp
jle
xlat
int3
sti
ror
in
push
jo
cld
jmp
test
insb
push
repz
mov
jbe
inc
out
jl
mov
mov
fucom
cmp
add
jl
out
inc
xlat
mull
sbb
dec
lds
aam
gs
ret
mov
into
fstl
push
shlb
cmp
jb
arpl
idiv
jmp
fisubrl
sahf
je
in
push
xchg
push
xor
in
lret
inc
mov
in
inc
pusha
dec
out
andl
movsb
pop
add
lods
sub
mov
jp
xor
clc
pop
add
inc
inc
or
shl
cmp
inc
data16
fwait
push
popf
or
pop
xor
adc
and
shll
pop
movsb
pop
outsb
xor
and
push
test
mov
lds
push
xor
out
cmp
pop
dec
mov
adc
xor
pop
rorl
push
cltd
sub
cwtl
gs
xacquire
jo
aad
xor
mov
inc
stos
adcl
and
pop
jmp
xor
xchg
mov
movsb
clc
call
fstps
sbbl
rcll
mov
out
jle
loop
repnz
push
in
out
fcmovbe
mov
push
enter
dec
fwait
rorl
push
cwtl
fs
in
cltd
cld
pop
inc
loopne
xchg
popf
inc
jb
inc
es
mov
mov
pop
andl
mov
push
push
jno
cmp
mov
repz
mov
xlat
ds
mov
sahf
insb
or
lea
into
push
cli
push
aas
scas
and
pop
cli
in
and
test
mov
inc
test
pop
int
jge
dec
inc
inc
daa
and
push
ss
mov
rcrl
lahf
dec
cwtl
inc
loop
pop
add
sub
pop
dec
jbe
and
mov
fwait
push
lahf
xchg
inc
xchg
mov
imul
dec
sub
adc
les
push
out
mov
ljmp
xor
into
sub
push
lcall
leave
mov
push
push
mov
out
cmp
inc
mov
mov
shr
xchg
je
add
stos
jb
adc
sbb
push
outsl
es
adc
loope
in
ret
fs
add
aad
mov
iret
mov
fstpt
xor
aad
jge
decb
jmp
sbb
mov
enter
lahf
ffreep
ret
hlt
pop
jmp
fisubl
repz
ret
mov
subl
pop
lcall
out
pop
sbb
outsb
xor
jnp
ljmp
push
push
mov
aaa
in
nop
dec
inc
push
or
mov
lods
aam
xchg
jno
ret
popa
jg
cld
jecxz
shl
adc
into
sbb
lahf
cmc
xchg
faddl
je
adc
inc
sub
rcrb
dec
loopne
gs
leave
mov
dec
loop
jae
xor
aam
xchg
mov
add
xor
jbe
pusha
lock
ja
push
cld
repnz
jecxz
fsubl
rclb
into
pop
repnz
or
fisttpl
sahf
dec
dec
popf
sbb
out
dec
add
xchg
iret
rcll
test
xchg
addr16
iret
mov
dec
or
and
mov
xorl
mov
aam
sub
stos
ljmp
push
orl
outsb
cltd
int3
ficoml
cwtl
insl
imul
iret
mov
das
push
lcall
outsl
pop
sbb
shll
xorb
out
test
dec
mov
jo
aaa
mov
xor
lods
mov
push
mov
adc
add
leave
das
cmc
xchg
fptan
sbbb
push
pop
cmp
int3
in
mov
dec
xchg
or
jle
or
testb
out
es
cltd
andb
imul
pop
cwtl
add
inc
lret
call
ret
in
inc
sbb
sbb
out
add
pop
pushf
insb
xor
sbb
sbb
jle
orb
adc
leave
rorb
pushw
dec
int
mov
xchg
bound
test
inc
mov
mov
scas
popf
mulb
shl
push
cmpsl
inc
test
sub
dec
or
jns
mov
mov
or
aaa
lods
stos
adcl
adc
les
or
ss
out
jns
pushf
ja
mov
pop
mov
pop
mov
clc
or
gs
aaa
pop
xor
cmp
xchg
hlt
negb
or
je
jo
jns
ja
lods
lock
push
test
jecxz
push
pop
jae
call
subl
pop
sbb
sar
faddp
aad
lods
loope
push
gs
xchg
add
mov
ss
int3
jge
imul
test
int3
add
sub
xchg
lret
push
jne
addl
add
mov
lcall
pop
sub
out
popf
js
xchg
inc
sub
mov
inc
cs
pop
or
mov
lahf
add
lock
pusha
jg
std
jne
xchg
outsb
pushf
pop
sbbb
push
imul
insl
or
outsb
outsb
sti
inc
dec
mov
xchg
cmpsb
filds
repnz
inc
inc
faddl
lock
orl
scas
ss
jae
mov
outsb
movsl
out
ljmp
mov
bswap
dec
out
adc
jp
mov
dec
cmp
xchg
cmp
ds
lods
insl
jae
pop
dec
inc
jns
add
xor
xor
and
adc
xchg
in
and
xor
dec
xchg
sahf
push
jbe
push
cmp
xchg
push
mov
fnstenv
mov
jmp
lcall
std
sub
dec
pop
sti
adc
cwtl
adc
popa
cmp
aas
int3
push
shrl
push
mov
shll
inc
imulb
jne
std
rorl
inc
mov
adc
dec
mov
pop
loopne
jmp
xchg
jb
cmp
cmpsb
xchg
sub
xor
sbb
push
mov
sub
push
fmul
adc
js
xor
arpl
shrb
mov
int
pop
ja
dec
or
add
fsubp
cmc
cld
dec
add
xchg
fadds
add
loope
push
push
cmp
pop
movsb
scas
jo
and
mov
sub
rclb
xlat
repnz
dec
mov
arpl
cli
ret
xchg
ret
push
movsb
fwait
xchg
add
xor
xor
and
inc
mov
jae
ror
call
dec
xchg
xor
loop
inc
sub
hlt
faddl
fcompl
push
push
mov
jae
bound
xor
and
push
sbb
aam
push
ja
jns
int3
cmp
enter
lret
jecxz
addl
jo
add
lods
push
add
push
inc
fld
pop
cmpsb
fcomps
push
cmp
ljmp
popa
push
lcall
int3
lds
js
xlat
xor
leave
adc
lods
add
outsb
dec
loopne
popf
sbb
sub
mov
fimuls
ds
push
push
and
mov
imul
pop
shlb
pop
clc
icebp
xchg
sbb
ret
mov
mov
fstl
cs
das
jmp
das
jp
push
jbe
addl
les
fistps
in
jg
aaa
ret
lods
pop
inc
imul
add
ljmp
ljmpw
sbb
cmpsb
inc
or
aaa
adc
mov
outsb
dec
je
xor
mov
ljmp
out
or
mov
pop
mov
jge
paddw
xchg
pushf
sbb
push
shr
push
sub
push
jecxz
icebp
adc
dec
aaa
cli
hlt
jo
mov
shrb
repnz
xchg
add
imul
roll
aad
mov
push
mov
mov
xchg
cmp
xchg
mov
divb
cmp
cmpsl
push
xlat
xchg
jb
popl
mov
add
jae
jmp
cli
mov
mov
loop
shlb
mov
sub
cmp
jno
push
push
call
mov
fsubr
push
jo
ficoms
subl
or
mov
shl
mov
sbb
push
mov
shrl
mov
iret
cmp
xchg
sti
mov
loopne
push
stc
dec
push
adc
stos
rcrb
adc
ror
sub
cmp
mov
mov
or
jne
out
jno
adc
into
andl
xchg
out
push
lock
mov
ret
cmpsl
lahf
bound
cmp
push
subb
cld
fildl
add
test
xchg
adc
lds
lret
out
jne
out
add
jno
pop
rolb
daa
cmp
stos
je
outsb
xor
mov
sti
push
lock
mov
mov
and
stos
enter
jno,pn
mov
leave
decb
stc
inc
jge
push
jl
dec
mulb
ret
add
xchg
rolw
mov
push
scas
inc
xor
add
sub
and
adc
cmpsb
xchg
test
ljmp
mov
xor
pop
outsl
sarl
test
xchg
mov
push
pop
arpl
jle
xchg
pop
in
je
cmp
imul
xlat
pop
pop
add
jmp
test
jne
loop
insb
jg
lods
xor
lods
pushf
add
jge
jmp
adc
lret
fcmovbe
xor
out
bound
sbb
out
mov
mov
dec
in
adc
fwait
mov
loop
in
rcr
lret
dec
iret
adc
sbb
leave
xlat
jle
xchg
sbb
inc
scas
movsl
lock
pushf
lds
call
adc
rcl
stc
mov
mov
jl
and
pop
aas
stos
fdivs
fadds
push
add
in
push
xchg
mov
aas
mov
xor
sub
sub
xchg
or
bound
sbb
mov
leave
jo
jp
hlt
fcom
dec
sbb
jg
incb
xchg
es
mov
pop
push
lcall
lea
mov
xorb
mov
dec
jg
sti
pusha
adc
adc
test
gs
jg
pop
aam
mov
aas
pushf
xor
and
adc
push
movsb
add
jnp
cltd
fwait
add
push
push
out
mov
push
push
cli
movsb
rcl
jmp
and
lds
xchg
adc
xchg
jne
std
sbb
pop
adc
xor
daa
add
dec
mov
call
push
xor
cli
outsl
cmp
lret
mov
push
lret
xor
adc
jmp
test
pop
push
lods
cmp
mov
jns
pop
dec
pusha
mov
push
insl
mov
mov
bound
xchg
dec
xchg
push
loope
scas
dec
xor
mov
ljmp
or
movsb
clc
dec
sbbb
add
in
data16
sbb
sub
mov
dec
mov
mov
loopne
xchg
xor
sub
scas
sbb
jns
push
std
xchg
ss
mov
leave
test
neg
aaa
in
js
jns
inc
xchg
pop
sbb
pop
push
sub
jae
out
mov
push
hlt
scas
outsb
mov
xchg
shll
and
adc
cmp
dec
inc
jbe
cmp
xchg
je
cmp
cmp
pop
into
inc
cmpsb
dec
jns
testb
shl
xchg
sbb
outsl
mov
out
mov
and
out
ja
cmpsl
rolb
add
call
adc
fcmovnb
dec
int3
call
mov
dec
int
loop
arpl
cmpsb
jecxz
out
aas
leave
jo
lock
add
xchg
fdivrp
xchg
icebp
xchg
flds
add
cmp
lds
cmp
or
adc
dec
mov
fcom
pushf
outsb
int
insb
subl
lods
xor
mov
jno
pop
mov
ds
out
push
inc
push
lods
sarb
sub
repz
or
scas
adc
push
repz
xor
pop
push
cmp
fstsw
mov
sub
paddw
push
sbb
jnp
jnp
int
je
testb
or
pop
pop
lds
xor
cmp
xor
out
imul
push
hlt
loopne
cmp
outsb
pusha
adcl
jl
mov
test
sub
lret
lret
jp
scas
or
aaa
enter
fs
fdivl
sarl
fcompl
cmc
and
popf
js
popf
fsubl
subl
sub
and
xor
pop
ja
sub
sbb
data16
or
mov
jns
imul
inc
lahf
pop
lahf
outsb
sbb
adc
adc
push
mov
out
mov
sub
inc
xlat
or
sti
push
push
xorl
movsl
inc
jmp
hlt
imulb
lret
mov
adc
aaa
sub
cmp
loope
dec
imull
cmpsl
jmp
call
or
xchg
test
stc
fs
xchg
adc
sbb
jecxz
sbb
mov
push
stos
lret
andb
xor
pop
lahf
jmp
movb
mov
loope
pushl
das
xchg
test
subl
aam
shl
xchg
inc
xchg
xchg
lret
wbinvd
jns
int3
out
pop
andl
das
int3
push
int3
stc
cmp
arpl
into
adcl
sub
inc
adc
ljmp
in
add
pusha
inc
inc
jmp
dec
ljmp
xor
ljmp
inc
jle
jnp
and
rcl
ja
inc
and
in
and
scas
adc
les
mov
das
repnz
jns
pop
ljmp
inc
out
imul
lods
xchg
jmp
cmp
lret
out
in
inc
mov
inc
add
int
leave
inc
fmul
jo
fsubl
push
cmp
jecxz
shll
ljmp
mov
inc
jo
aas
sbb
cmp
pop
iret
jge
adc
inc
aam
xorl
jge
jb
and
push
pusha
ljmp
into
mov
mov
push
xchg
ds
jno
outsl
daa
or
cmp
shl
add
repz
add
dec
rolb
into
jle
movsb
fcoml
int
adc
rorb
and
dec
lods
aas
mov
jne
xchg
or
stos
push
stc
cmp
xor
cld
test
adc
push
sbb
out
popf
mov
sbb
push
mov
stc
cltd
dec
adc
scas
push
inc
roll
jae
nop
push
test
mov
xchg
push
mov
sbb
nop
sbb
jmp
dec
ds
ds
imul
mov
mov
mov
mov
scas
popf
filds
data16
jb
rcll
jbe
repnz
dec
jnp
lret
xchg
mov
sbb
cmp
jo
sub
shrl
sbb
mov
ljmp
lcall
cmp
push
mov
loope
dec
adc
ss
pop
xor
das
lods
xchg
inc
jmp
push
divl
sbb
fcomip
xor
add
cs
outsl
pop
shlb
add
push
inc
xor
leave
mov
out
rcr
icebp
cmpb
in
add
add
jle
adc
mov
dec
inc
imul
movlps
sub
in
mov
bound
loope
inc
inc
mov
xor
repnz
out
sarl
pop
mov
sbb
xchg
insb
cmp
push
sbb
mov
les
out
iret
xchg
sbb
or
ss
movsb
test
cmpsb
loope
scas
imul
xchg
mov
imul
jg
call
add
jle
push
xchg
push
out
sti
xchg
jp
movsb
mov
cwtl
sub
hlt
xchg
lcall
cmp
lret
aad
fbld
mov
loop
movsl
jge
cmp
std
stc
nop
sti
xchg
dec
jmp
sub
push
fcomps
push
repnz
cli
ljmp
jae
mov
daa
cltd
dec
pop
push
add
leave
pop
xorl
cli
pop
adc
mov
nop
jb
jne
hlt
ljmp
xor
int
pop
daa
push
jg
stc
cltd
inc
sbb
mov
dec
xor
idivb
iret
jl
fs
and
sub
pop
mov
jg
cmpsb
xchg
jge
hlt
enter
jne
sbb
or
data16
lods
xor
push
hlt
add
std
xor
dec
sub
sub
test
lds
push
sub
add
addl
push
push
lods
mov
ljmp
pop
xorb
inc
mov
mov
adc
sub
sub
lret
sahf
jp
pop
into
xchg
push
cmp
adc
mov
es
mov
dec
push
jmp
push
mov
lcall
das
int
stos
or
jo
sub
stos
xchg
iret
int
add
sbb
enter
outsb
push
jne
add
ljmp
vprotw
xlat
test
bound
push
inc
dec
jl
and
popf
mov
cmpsl
pop
scas
xchg
mov
aas
jp
mov
xor
jle
add
rcrb
sub
or
jmp
ja
push
clc
ss
pop
mov
out
xchg
es
cmp
loop
jl
push
push
sub
out
add
sub
es
lods
sub
sbb
imulb
adcl
pop
daa
jmp
ljmp
rorl
mov
xchg
pop
cmpsl
add
cwtl
clc
inc
std
dec
xlat
dec
outsl
cli
in
and
sbb
push
clc
imul
icebp
in
mov
ret
sub
fstpt
popl
pop
mov
sbb
sbb
loopne
xchg
sahf
cmp
daa
les
call
in
stos
pop
and
jmp
pop
inc
dec
cmc
int
sub
xchg
jno
mov
cltd
pop
add
fsubrs
add
pop
movb
clc
in
cmc
daa
xchg
loopne
mov
fidivs
push
jb
and
addb
lock
inc
mov
hlt
jne
xchg
adc
cmp
fists
lods
insb
cli
fprem
adc
lock
adc
mov
int3
add
push
pop
jne
ss
inc
cmp
sbb
in
loopne
aaa
or
fwait
scas
xchg
insl
jle
insb
in
pop
int
rcrl
sub
pop
icebp
add
lret
mov
fidivrl
sbb
dec
pop
loop
or
mov
leave
jp
repz
stos
popa
mov
jl
jmp
jo
pop
inc
cmp
inc
mov
xchg
fiadds
loop
notl
push
cmp
push
lcall
xchg
in
pop
data16
inc
aad
cmp
sub
mov
aad
jecxz
push
js
push
mov
pop
xor
jp
out
or
pop
push
sti
out
push
lret
pop
insb
mov
test
jae
arpl
inc
inc
in
int
test
inc
fcomps
aad
inc
jnp
mov
rcl
lods
pop
xchg
xchg
adc
xchg
lcall
cmp
insb
mov
and
fidivl
or
push
or
mov
push
fcompl
call
dec
and
sub
loopne
push
sbb
insl
fildll
scas
push
cmpsl
fs
mov
cmpsb
mov
in
jp
mov
mov
aas
and
lcall
iret
xchg
dec
std
pop
and
sbb
xchg
pusha
mov
mov
fadd
enter
adc
adc
mov
insl
pop
dec
movsb
test
insl
jmp
jb
fldenv
sahf
jp
inc
or
cld
mov
std
add
mov
and
lods
loopne
hlt
mov
pop
xor
bound
sbb
add
pop
mov
pop
sahf
mov
pop
inc
jp
push
mov
cld
loop
imul
sbbl
imul
add
pop
clc
cmp
fimuls
enter
cmp
pop
sbb
dec
cs
outsl
test
sub
jnp
loop
xor
fs
enter
stc
rorb
inc
enter
std
lds
das
sbb
sub
push
ret
mov
push
jmp
inc
push
insl
mov
in
into
pop
jl
scas
leave
add
in
jg
cmp
sbb
adc
in
dec
in
rep
dec
fcmovu
lods
push
ds
imul
sub
fimuls
or
je
xchg
push
insl
inc
cmp
and
enter
pusha
pusha
sti
ret
mov
int
xor
mov
xchg
adc
and
clc
adc
and
repnz
inc
push
mov
repz
xor
pusha
sahf
negl
xchg
fs
out
jb
dec
sti
mov
insb
das
mov
cmp
bound
mov
sub
jmp
daa
inc
lods
sbb
mov
outsl
jle
jmp
mov
xor
push
int
insb
mov
adc
xor
test
sbb
movsb
dec
outsb
push
movswl
lahf
inc
negl
lcall
sbb
mov
or
jbe
pop
shr
dec
imul
adc
popf
pop
dec
js
mov
inc
add
mov
dec
xor
xor
insb
and
fimull
jg
push
rcll
push
in
shufps
jecxz
repnz
movsl
stos
mov
pop
pop
fdecstp
mov
fdivr
push
mov
mov
dec
nop
stos
xlat
mov
dec
cmp
lds
push
pop
pop
mov
push
rcrl
jno
sti
shl
xchg
ljmp
mov
mov
es
aas
jne
push
imul
je
adc
lods
add
subb
insl
lahf
pop
lea
gs
lods
repz
icebp
xchg
push
or
or
push
rcll
out
frstor
xchg
xor
push
mov
fwait
pop
push
fs
mov
insl
imul
and
frstor
fadds
lods
push
push
adc
jecxz
mov
xor
cmp
lea
jge
pop
xor
sbb
addr16
imul
inc
ljmp
jp
jle
add
dec
cs
sbb
movsl
jae
movsb
sub
js
out
pop
xchg
mov
in
cwtl
jmp
xchg
xor
dec
xchg
and
daa
lcall
into
mov
and
mov
sarl
cmc
fidivrs
push
mov
es
sub
dec
and
jp
jbe
jge
pop
ficomps
cmpsl
xor
add
mov
sbb
in
rclb
shlb
and
cmp
arpl
aad
pop
jne
fwait
mov
js
cltd
sarl
scas
fsubl
in
ss
imul
push
add
mov
popa
rolb
in
mov
push
or
sbb
xor
loopne
cltd
push
int
or
sub
jbe
cmpsl
enter
int3
out
in
xchg
loop
push
inc
scas
inc
insb
es
push
aam
mov
clc
jecxz
out
add
scas
xchg
loopne
mov
sbb
inc
cmp
sahf
jmp
mov
adc
mov
adcb
fisubrs
xchg
mov
add
repnz
xor
mov
addb
pushf
or
fisttpll
adc
fistpl
fmulp
movsb
sbb
das
pop
clc
enter
cmpsl
mov
push
rorl
inc
movsb
out
fdivrs
in
in
dec
pop
inc
in
rcl
lret
dec
test
push
nop
pop
sub
mov
push
loope
leave
lods
push
int
jp
add
adc
inc
out
jge
divb
dec
and
scas
and
pop
xor
dec
out
hlt
sub
xor
xor
xor
jp
xchg
push
and
add
int3
cmpsb
pushf
cmpb
aam
out
xor
mov
pmaxsw
cwtl
mov
xor
sti
mov
int3
pop
pushw
pop
rcl
cmp
xchg
sbb
sti
movsl
cld
jecxz
mov
out
enter
add
fwait
gs
std
dec
jle
jno
push
and
cmp
bound
mov
xor
mov
push
xorb
or
les
repnz
xchg
inc
pop
mov
ret
jg
fmul
mov
jp
lock
fwait
mov
dec
or
mov
inc
jmp
lret
jge
shll
and
loope
fdivl
push
fstps
xor
dec
into
loop
dec
pop
hlt
jnp
cmp
test
xor
sarb
mov
xchg
adc
roll
and
sub
pop
or
xchg
loope
leave
mull
xor
fimull
xchg
mov
std
mov
lahf
mov
or
pop
stc
insb
push
inc
push
imul
jp
xchg
dec
mov
or
push
add
push
adc
cwtl
xor
in
pusha
stos
out
int
push
std
into
shlb
sub
cmp
inc
test
outsl
cltd
and
push
and
inc
loopne
clc
shrl
in
pop
nop
popf
pop
xchg
inc
mov
xor
sub
push
movsl
scas
leave
or
push
sahf
or
hlt
dec
sbb
fwait
jg
addr16
cld
inc
inc
icebp
fdivl
cmpsb
stc
adc
pop
popf
adc
das
xchg
sub
ss
jge
gs
test
test
xor
sbb
pusha
outsb
push
pop
scas
mov
add
pop
enter
movsl
add
sarb
push
ret
movsb
xor
or
insb
test
lods
shl
or
in
and
mov
push
cmp
pop
repz
xlat
lahf
mov
out
xor
mov
scas
stos
jecxz
jae
idivl
add
arpl
rorb
push
xor
jle
jle
repnz
inc
jmp
fisubrs
ds
into
pop
inc
mov
or
and
pop
cld
in
cmpsb
mov
bound
cs
cli
sbb
push
testl
sbbl
aam
inc
mov
aad
add
movsb
jp
cmp
cli
cld
test
push
mov
andb
or
add
cmpsb
mov
cs
mov
adc
outsl
dec
fdivs
gs
loope
js
sahf
adc
dec
mov
out
xor
mov
mov
ljmp
sbbl
add
pop
add
pop
in
movsl
sub
pop
jb
loop
mov
ss
test
repnz
cmp
test
cmpsb
push
incl
jb
pop
sbbl
xlat
xchg
pop
nop
test
data16
arpl
repz
xchg
xchg
mov
popa
sbb
cmc
pop
mov
jne
sbb
sahf
imull
lods
aam
das
push
xchg
stc
cmp
cmp
inc
or
sub
rclb
mov
mov
xor
push
add
mov
pop
icebp
imul
orb
gs
or
jmp
inc
push
fcoms
mov
mov
clc
add
lcall
pushf
ljmp
shll
cmp
movsb
dec
jnp
cmp
and
dec
inc
mov
repz
adc
rcll
or
jns
stos
add
push
pop
fbstp
nop
inc
nop
and
add
pop
popa
stc
ss
or
jecxz
loope
loopne
aam
or
stos
sarl
cmp
sti
outsl
and
inc
outsl
insl
mov
test
xor
fwait
cmpsl
shlb
dec
add
repnz
es
push
xchg
dec
les
iret
not
mov
jp
inc
mov
fidivs
xor
dec
ret
lods
add
and
push
push
insl
pusha
sub
add
icebp
popf
cld
scas
mov
or
adc
mov
xor
mov
mov
out
xchg
xchg
mov
pop
xchg
xor
pop
aam
adcb
sub
and
inc
or
daa
lret
gs
ljmp
inc
xor
shlb
scas
out
hlt
xor
mov
jecxz
mov
adc
pop
mov
movsl
call
daa
out
xor
sbb
cmp
pop
jmp
mov
lahf
insb
xor
push
lds
loop
xor
pop
xor
stos
test
pop
es
in
stos
push
insl
es
fcmovu
or
loopne
or
movsl
push
neg
movl
out
inc
and
hlt
std
gs
fcmovnbe
mov
pop
mov
adc
mov
mov
pop
hlt
insb
int
ljmp
int
sbbl
adc
je
xchg
pushl
idivb
mov
cwtl
cltd
nop
lahf
add
mov
xchg
sbbb
das
xor
addr16
scas
cwtl
xor
adc
sub
ret
in
add
sbb
adc
jmp
fisttps
or
mov
cmp
test
jl
mov
lcall
fs
fimull
fst
lods
add
push
jge
sub
je
add
insl
sbb
roll
shrb
push
stos
pop
in
dec
in
jmp
push
shrb
dec
dec
ret
jae
cld
cmp
mov
loope
cmp
push
pop
jle
push
sbb
addb
jg
jp
insb
or
ljmp
call
mov
movsb
or
call
repz
jmp
or
fs
mov
mov
push
push
xor
ljmp
lods
pop
xchg
push
xchg
sub
dec
fisubl
push
xchg
xchg
movsl
sbbl
lods
aas
aad
xor
fildl
jne
add
movl
sbb
hlt
push
jge
dec
fwait
push
jmp
sarb
cmpl
push
mov
cltd
cmpsb
jl
leave
fistps
enter
sbb
cmp
loope
pusha
or
daa
iret
xchg
xor
pop
mov
je
xchg
sbb
mov
movsl
jl
mov
subl
lcall
outsb
cld
out
adc
je
loopne
xchg
outsb
fidivs
aad
mov
fsubr
decl
add
scas
test
and
cmp
push
and
or
pusha
mov
jmp
mov
gs
scas
inc
movsb
xchg
sbb
sbb
pop
nop
mov
pushf
enter
call
inc
cmp
sbb
gs
adc
push
lret
scas
pop
cmp
dec
insb
adc
cmp
popa
pop
mov
ljmp
mov
out
mov
push
cmp
cs
sub
sub
std
and
mov
in
jb
sarl
test
out
pop
into
clc
sub
std
xor
push
fwait
movsb
gs
mov
sarl
stos
add
iret
ret
xchg
jno
fs
movsl
das
dec
sahf
push
out
dec
insb
imul
notl
mov
inc
les
adc
push
sti
mov
xchg
sahf
fimuls
negl
sbb
ffreep
pop
sbb
sub
jge
fwait
icebp
stc
mov
dec
adc
cmc
in
xchg
pop
shl
ss
cmpb
xor
jns
cltd
mov
mov
sub
push
jmp
repnz
jae
mov
mov
sbb
mov
mov
cmc
sub
xchg
or
int
int3
scas
sub
mov
pop
sti
mov
lods
js
shll
push
fdivl
dec
ja
dec
cmp
pop
xlat
jmp
out
xchg
clc
or
xchg
mul
in
inc
adc
test
ljmp
insb
mov
cli
rclb
and
out
sarl
mov
insl
jle
in
or
xchg
adc
sbb
push
mov
cltd
inc
cwtl
adc
mov
sub
push
iret
cmc
pop
scas
cld
dec
pop
pusha
fucom
scas
roll
iret
gs
mov
xchg
pop
lea
outsb
cwtl
mov
arpl
testl
or
inc
dec
fs
insl
push
test
and
mov
mov
xchg
push
mov
lods
mov
xor
mov
fcomp
mov
or
jge
jns
sahf
push
aaa
pop
xchg
lcall
shrl
add
sub
lret
and
pop
pop
inc
sub
lret
cmp
cmc
int3
out
push
mov
xor
push
pop
inc
cwtl
outsb
mov
out
in
sub
jecxz
mov
cmp
mov
repz
cld
fsubs
outsl
insl
imul
js
xor
fs
imull
cltd
jmp
pop
xchg
mov
jns
mov
mov
pop
add
fisubs
mov
or
and
pop
stc
mov
pop
mov
test
test
ljmp
bound
imul
and
cltd
pop
xor
jae
fists
pop
cmp
sbb
scas
dec
test
xor
push
ror
stos
mov
xchg
xchg
in
xcrypt-cbc
cmpsl
nop
or
bound
sbbl
mov
xlat
mov
or
mov
add
mov
xor
scas
fmul
sbb
adcl
mov
pushf
shlb
mov
aad
mov
popl
test
aad
pop
addb
mov
js
pusha
bound
outsl
sub
lods
stc
les
mov
push
imul
pop
jne
sub
cld
test
push
adc
push
mov
repz
imul
mov
cld
jg
pop
push
cmp
cmc
in
movsb
addl
ret
jg
gs
sub
dec
aas
cld
testb
popa
mov
xchg
xor
aas
repnz
adc
aam
idivb
push
lahf
cwtl
mov
popa
movl
xchg
jbe
std
aad
mov
xchg
mov
lods
sub
or
mov
cmp
shlb
fistpl
inc
jnp
es
mov
push
je
aaa
decb
adc
stc
popa
cmp
jl
fsubl
jne
inc
out
add
hlt
fistl
mov
adc
js
xchg
sub
sub
mov
xlat
and
sbb
mov
testl
push
xchg
lret
adc
jb
decb
mov
out
sbb
aam
repnz
xchg
imul
rorl
mov
in
lahf
push
notb
into
pop
out
fst
imul
cmp
and
inc
loope
cmp
xchg
into
aaa
testl
xchg
xorw
mov
insl
jae
dec
in
in
add
or
adcb
in
mov
pop
sahf
push
nop
push
push
enter
dec
sbb
pop
ljmp
inc
add
jle
mov
cmp
mov
loop
pop
call
xchg
mov
adc
enter
jns
sbb
lock
add
lret
clc
js
pop
and
cmp
sbb
into
inc
xchg
shrb
ret
sbb
daa
pop
xor
aam
je
imull
xlat
dec
adc
xor
lea
out
mov
iret
cmc
ljmp
jmp
ljmp
loope
in
mov
xchg
jb
push
jmp
nop
pushf
and
icebp
jo
lds
adc
cmp
cmpsl
mov
inc
stos
lds
daa
addr16
enter
jb
jb
sbb
dec
cmp
das
sub
lar
sub
jmp
ja
insb
outsl
sub
pop
dec
mov
mov
int
adc
push
inc
cmp
add
jae
sahf
inc
lods
lods
rcrl
or
test
push
add
jmp
add
ret
repz
xor
pop
sub
sahf
sub
in
hlt
inc
jmp
test
xchg
dec
pop
cmp
in
mov
lods
mov
mov
push
mov
mov
dec
out
data16
mov
rcl
jne
mov
mulb
push
or
or
or
aam
xlat
clc
xchg
dec
cwtl
cli
jp
movsb
insl
push
stc
fmul
cmpsl
fucomi
lahf
shll
add
lret
sbb
cmpsb
lcall
enter
and
enter
ss
lret
out
out
cli
mov
testb
lods
xchg
test
popf
mov
add
clc
cmp
dec
inc
cmc
cmp
push
dec
cmp
in
cmp
pop
sub
subl
jge
xchg
push
lock
aaa
inc
sbb
inc
in
outsb
mov
je
cmp
push
cmpsb
inc
lods
mov
adc
jbe
mov
icebp
inc
testl
je
fdivrl
xchg
push
mov
add
mov
js
or
xor
sub
pop
add
sub
inc
mov
push
adc
or
xchg
xchg
xchg
movsb
and
or
pushf
mov
dec
xchg
testb
xlat
or
sahf
dec
xchg
mov
popa
push
jp
cmp
scas
mov
rcrb
fcmovnb
cmc
pop
mov
cmp
scas
shrl
mov
xor
in
cmc
ret
dec
jmp
mul
inc
pop
loope
and
cld
pusha
xchg
mov
sbb
out
or
dec
and
pop
dec
shlb
pop
jo
stc
xor
sub
cmp
imulb
pop
or
imul
cmpsb
fs
pop
xchg
inc
mov
push
gs
iret
test
roll
and
xor
in
and
scas
das
cmp
repz
sbb
les
pop
inc
cmc
sbb
or
fninit
adc
or
es
sbb
mov
pop
aas
and
pop
inc
add
fimuls
es
or
ret
cltd
iret
bound
adc
out
mov
cmp
push
pop
or
xchg
mov
jl
push
and
outsl
or
out
adc
aam
push
or
lahf
mov
mov
aad
jo
sbb
add
cld
mov
lds
shll
xchg
lret
cmp
lea
int
ss
pop
ficoms
imul
adc
stos
add
add
xchg
out
rolb
out
sub
ret
out
cmpsl
test
repz
mov
push
jae
fnstcw
test
divl
cmc
aaa
clc
push
insl
pop
sub
fsubrs
decb
mov
andb
mov
movl
lods
xor
mov
push
xchg
enter
ds
ds
gs
mov
jmp
adc
jb
sbb
fiaddl
or
cmp
jl
cmpsb
dec
push
and
dec
movsb
sahf
scas
xchg
push
lea
jg
mov
std
cld
je
mov
cmp
and
jecxz
shrb
jns
pop
sub
sub
sub
fimuls
cmpsb
mov
cmp
push
xor
ret
inc
push
mov
jbe
loopne
in
and
faddl
cwtl
xor
cwtl
out
jmp
push
push
add
sar
xchg
mov
adc
mov
sbb
add
jbe
rolb
scas
roll
insb
lcall
mov
and
push
lods
cli
rclb
in
insb
adc
dec
pop
push
inc
mov
mov
mov
lock
jge
mov
pusha
xor
idivl
pop
pop
cmp
sub
jmp
push
leave
test
lret
pop
aad
in
call
loopne
fnclex
push
cmp
sub
add
leave
sub
push
mov
leave
or
xor
fcomi
hlt
add
pusha
dec
adc
movd
sub
inc
jg
test
lret
rcll
loopne
js
and
arpl
jp
sub
aam
pop
sub
enter
add
xor
in
icebp
dec
decb
aaa
rorl
mov
out
jl
popf
fwait
mov
sar
popf
inc
test
adc
ficompl
mov
jnp
stos
lret
mov
pop
adc
test
jg
cmp
push
sti
pop
jge
sub
xchg
icebp
xor
incl
lret
std
test
mov
mov
add
add
jecxz
mov
push
test
das
decl
jg
jge
lahf
push
sub
adcb
shrl
and
sub
popa
rolb
rol
ja
mov
jle
scas
mov
out
or
pop
sbb
xlat
scas
jne
push
inc
into
cld
loopne
loope
out
ret
adc
scas
cs
pop
std
imul
lods
sub
imul
adc
jbe
mov
aas
xor
cmp
jge
inc
test
push
outsb
lcall
repz
mov
xchg
pusha
mov
sbb
lcall
sbb
mov
xor
inc
lods
mov
cmp
sub
hlt
lock
in
push
xorb
icebp
cmp
test
xor
sti
push
and
dec
sbb
mov
fs
dec
es
jl
loopne
sub
mov
lds
jecxz
shrb
mov
cmp
jl
mov
ficomps
sbb
loop
jb
test
test
daa
ljmp
pop
ljmp
pop
mov
sub
xchg
mov
and
pop
adc
sub
pop
mov
lret
lock
sbb
pop
push
jae
xor
out
fs
es
bndldx
rolb
std
xchg
cmp
mov
dec
mov
or
imull
addl
xor
dec
mov
enter
sbb
mov
lods
cmp
ljmp
outsl
lods
xor
cmp
adc
cmp
cmpsl
add
mov
popa
negl
jo
push
cmc
arpl
inc
or
ret
fs
rorl
aad
mov
pop
shl
loopne
sbb
shr
stos
adc
inc
cmp
nop
rcrb
cwtl
xchg
ficomps
mov
inc
push
mov
faddl
rorb
inc
rclb
ror
imul
clc
pop
fmull
clc
or
or
pushf
mov
jp
lcall
lret
pop
fldl
xchg
mov
test
or
jmp
fdivrl
dec
cs
add
js
rcrb
mov
hlt
jge
in
mov
int3
fsubs
addb
pop
stc
xorb
push
dec
int
sub
sbb
fwait
and
outsb
pop
and
repnz
lahf
inc
jg
mov
jle
dec
lods
ss
pop
jl
xchg
lds
pop
lock
xchg
loop
fs
repz
scas
out
dec
and
and
dec
inc
popf
mov
stos
dec
add
or
cmp
stos
repnz
ds
and
and
shrl
movsb
mov
mov
add
pop
ret
xor
lcall
sbb
les
push
push
inc
sub
adc
popf
push
imul
fnsave
xchg
and
enter
cmp
sub
mov
sbb
mov
iret
scas
push
aaa
push
push
xor
mov
aam
pop
sub
in
dec
dec
cs
mov
call
push
daa
call
push
mov
orb
pop
cli
cmp
movsl
xchg
sti
mov
xchg
adc
and
jl
cmp
or
leave
scas
fdivs
aas
xlat
lahf
inc
push
push
sbb
fnstsw
jmp
mov
jne
adc
sbb
scas
adc
les
andl
and
int
xchg
push
or
jg
inc
rorl
jb
loopne
lea
add
cmp
cmp
aaa
lods
jge
aam
lret
mov
and
lock
and
mov
adc
xor
or
dec
test
cmc
adc
sub
loope
jecxz
pop
dec
cltd
lods
push
jmp
mov
mov
test
mov
sub
pop
mov
adc
jbe
cltd
pop
nop
js
aam
xchg
int3
mov
pop
mov
cld
mov
cmpsl
add
sbb
sbb
sarl
call
sub
ret
mov
lods
sbb
mov
nop
xor
mov
xchg
mov
ret
dec
jb
mov
hlt
lahf
into
jmp
incb
es
testb
mov
sti
mov
sub
sbbb
outsb
cmp
pop
mov
lret
jl
sbbl
push
popf
dec
cltd
rorb
add
sub
sub
sbb
lea
cmpsl
xchg
mov
push
add
sub
cmpsb
adc
shlb
nop
imul
outsb
adc
fs
cmp
out
fcomps
xchg
mov
pop
fucomi
mov
or
mov
jb
arpl
inc
mov
or
subl
out
mov
cltd
insb
lahf
aad
mov
dec
inc
sub
in
jge
test
cmp
or
mov
subl
outsl
mov
xor
dec
repnz
push
xor
push
lahf
xchg
push
pop
mov
ret
adc
lcall
stos
ror
jg
int3
push
pop
xchg
mov
loop
jecxz
adcl
sub
pop
pop
pop
cli
inc
lret
out
pop
adc
rclb
push
xchg
je
fstps
inc
mov
jle
add
mov
aas
insb
push
mov
jg
xor
fildl
pop
push
outsl
adc
sbb
subl
int
cwtl
mov
fcmovu
or
inc
mov
aad
cwtl
lea
je
mov
testl
sti
ret
movsl
xlat
push
push
std
out
mov
push
lods
jl
iret
aaa
mov
push
jbe
daa
insl
and
cmp
xor
hlt
stc
cmp
jl
push
or
cmpl
fisubrl
adc
add
sub
mov
sub
or
nop
xor
mov
cmp
sub
or
call
dec
inc
jg
cli
mov
xchg
std
hlt
leave
lea
jge
cmc
adc
cmp
ret
mov
insl
iret
push
inc
ss
and
jb
pop
shrb
scas
cmpsl
add
addr16
jmp
or
mov
mov
mov
push
push
jbe
sbb
mov
aas
sub
das
inc
mov
push
cmpsb
jae
fwait
add
das
and
xchg
push
js
call
dec
or
or
imul
cmp
sub
mov
mov
inc
inc
and
enter
rclb
mov
push
test
cmp
fisttpll
push
sahf
or
sbbb
sub
test
mov
ljmp
ljmp
xor
ret
inc
cmp
xchg
lahf
test
lahf
pusha
jnp
aas
ret
ss
pop
add
aad
popl
imul
pop
scas
mov
data16
sbb
inc
out
bound
add
inc
xor
inc
xor
jecxz
js
push
cwtl
packuswb
mov
shl
test
jl
das
jge,pt
aad
xchg
xchg
lds
sbb
dec
lcall
jae
pop
cmpsb
mov
push
dec
xor
insb
stos
mov
xor
cmp
add
pop
jnp
pop
mov
int3
ficompl
push
or
repnz
int3
push
daa
pushf
mov
jo
cmp
fiaddl
test
enter
ret
sub
mov
xor
iret
dec
jno
pop
sub
xchg
test
in
rorb
mov
inc
rcr
adc
and
fcoml
jge
mov
or
cmc
iret
or
adc
lds
ss
add
jle
jbe
mov
test
push
in
or
push
mov
inc
sbb
add
or
hlt
jno
jns
inc
andb
das
xor
add
mov
das
sbb
and
push
inc
loop
mov
ret
and
xchg
jmp
fbstp
dec
popf
push
push
fbld
add
cltd
cmp
leave
sub
js
mov
sbb
adc
aad
fldcw
out
xorl
lret
sbb
inc
clc
loope
push
sti
push
xchg
add
cmp
dec
inc
movsl
lods
mov
out
in
jo
fwait
dec
gs
dec
ss
cmpsb
mov
das
ss
jno
repnz
sbb
mov
es
stos
aad
pop
aam
push
mov
mov
in
mov
and
lret
lods
mov
pop
out
cmp
sbb
xchg
push
adc
mov
addr16
orl
pop
lock
hlt
push
xchg
shrb
rolb
out
dec
push
sahf
scas
outsb
ret
jg
jp
mov
mov
test
imul
xor
sbb
pop
clc
mov
clc
cmp
add
clc
sub
ror
cmpsl
mov
arpl
add
add
pop
sbb
pop
in
sbb
mov
not
incl
aad
cmp
mov
pushf
enter
rcll
dec
jge
mov
out
gs
xchg
lahf
mov
sub
cmp
add
xlat
ljmp
jge
repnz
sub
pop
and
loopne
daa
xchg
mov
add
pop
lret
subb
loop
mov
fisubs
sub
mov
mov
in
popa
adc
inc
test
push
int
out
ja
mov
ds
nop
inc
aad
adc
push
scas
push
mov
data16
inc
popf
cmp
stos
mov
repnz
push
push
hlt
mov
inc
in
arpl
dec
arpl
jbe
cltd
dec
mov
shlb
push
ljmp
cmc
adc
adc
cmp
mov
adc
loopne
mov
pop
lods
enter
andb
cmp
mov
lock
js
sub
in
mov
sbb
scas
enter
or
ljmp
push
push
into
dec
into
sbb
cld
rorb
aas
add
das
imul
xlat
add
jno
fdivrs
shrb
negl
stc
mov
cmp
pushf
push
mov
dec
push
je
inc
xchg
lea
mov
lods
mov
inc
dec
pop
inc
or
xchg
lods
int3
icebp
repz
test
xorb
jbe
xchg
les
push
mov
lret
paddw
inc
mov
nop
aad
push
js
lahf
stos
in
stos
jne
cld
push
jl
ds
jg
into
inc
xchg
add
add
out
iret
dec
mov
adc
stos
dec
adc
jo
outsb
sbb
jno
mov
push
lret
mov
cs
jbe
xor
ds
in
mov
lret
fwait
rolb
sub
insl
jg
cmp
mov
sahf
arpl
mov
sub
leave
arpl
ret
pop
sbb
sbb
inc
sbb
xchg
xlat
push
sbb
lods
xchg
shlb
xor
leave
fstps
fistl
outsl
das
xchg
adc
sahf
movsb
ljmp
in
je
repz
and
addr16
inc
imul
sbb
popa
xor
jnp
imul
jbe
mov
push
std
xchg
pop
mov
popf
imul
add
xchg
jp
jno
inc
ret
mov
jnp
test
inc
or
xor
xchg
push
mov
ljmp
jae
imul
mov
cld
and
out
sub
sbb
lods
cli
nop
fsubp
xor
out
call
mov
sbb
mov
les
cmp
mov
push
sbb
dec
cli
je
repnz
std
fwait
idivl
or
pop
mov
jmp
and
ja
int
push
xchg
fbstp
lea
sbb
add
mov
mov
pop
sub
das
imul
jne
add
inc
imulb
fidivs
pusha
or
bound
fstpl
cmp
imul
int3
fldl
fbld
mov
cmp
nop
cmp
pop
ret
adc
jbe
mov
push
pushf
push
outsb
adc
out
inc
adc
filds
mov
cs
cmpsb
pop
inc
mov
add
push
stc
mov
insb
push
xchg
out
clc
or
add
jl
into
cli
bound
mov
and
dec
ja
or
inc
push
jno
sub
pop
je
fs
inc
jecxz
sub
add
push
xchg
out
outsb
int3
in
xor
add
xchg
call
outsl
adc
aaa
xlat
mov
jp,pt
ret
test
inc
fucomi
hlt
inc
enter
rorb
ja
add
shl
add
pop
dec
mov
iret
shll
in
push
cmp
aam
add
sbb
mov
out
inc
add
out
adc
movsb
ja
mov
sub
sbb
inc
dec
lret
daa
inc
outsl
lcall
and
addr16
aas
mov
and
mov
faddl
sbb
mov
fsubrl
pop
daa
xchg
fisubrs
sub
loope
mov
xchg
stos
fidivs
pop
or
pop
push
sbb
dec
test
and
mov
mov
addr16
sbb
push
sbb
add
movsl
lods
pop
je
pop
cmpsl
cmpb
sbb
test
inc
into
cmc
push
sbb
push
mov
and
cmpsb
rcrl
call
lret
test
lds
cmc
ljmp
bnd
dec
and
mov
add
jecxz
mov
jp
adc
xor
sarb
js
jp
in
mov
mov
mov
subb
dec
xchg
inc
xchg
inc
inc
movsl
imul
jnp
cmpsl
iretw
push
cmpsb
pop
add
inc
inc
scas
and
sbb
outsb
inc
bound
mov
loopne
mov
jns
movsb
mov
push
push
adc
movsb
inc
add
cli
stos
pusha
cmp
jg
sbb
push
rolb
dec
pop
mov
lods
sbb
les
xchg
cmp
xchg
mov
rclb
out
inc
pop
test
jo
adc
mov
xchg
dec
push
push
repnz
mov
push
jmp
mov
xor
jne
call
cmpsl
cwtl
sub
ljmp
dec
pushf
or
fiaddl
and
lods
xchg
fcoml
add
jle
pusha
adc
or
sbb
jae
movb
idiv
pusha
sub
push
xchg
lds
jp
sub
mov
in
push
in
movsl
ret
fs
add
and
popa
lods
int
sub
bound
jmp
cwtl
sbb
cmp
push
xchg
pop
mov
lods
out
out
popa
cmp
push
cmp
frstor
add
loopne
stos
lock
loopne
fists
mov
imul
fwait
jb
icebp
inc
or
stc
int3
xlat
xor
pop
je
test
dec
push
mov
dec
mov
loop
push
fstpl
push
fcoml
adc
dec
call
cmp
inc
stos
mov
stos
xor
pushf
sub
je
pop
testb
repz
mov
ret
add
xlat
pop
adc
sub
in
fpatan
add
and
fstpt
and
cwtl
call
push
js
aaa
cmp
lahf
ret
popf
pop
punpcklbw
sbb
cli
pop
faddl
mov
cwtl
lret
jb
cmc
pop
sbb
scas
dec
push
test
les
jl
mov
push
repz
pop
mov
popa
in
add
fs
loop
pop
jns
xchg
fwait
mov
push
lods
lock
fs
bound
cwtl
insl
popf
imulb
aam
add
push
aam
mov
clc
leave
fwait
or
push
int
mov
add
test
jns
adc
loopne
push
mov
jl
cmpsb
add
and
mov
cld
dec
adc
mov
mov
jns
push
sbb
cmp
out
and
jne
popa
sbb
add
adc
push
dec
daa
lods
lret
repz
data16
pop
lods
insb
xchg
fwait
push
fs
ljmp
add
mov
rep
mov
and
mov
sbb
lcall
and
ss
out
insb
xchg
xchg
cld
fstpt
mov
ret
roll
sti
lods
decl
cwtl
jb
clc
ds
cmp
in
insl
xchg
out
and
out
mov
mov
xchg
int
pushf
pushf
ret
mov
fisubrl
repnz
xor
and
pushl
and
xchg
inc
incl
jae
push
jle
add
jp
cmp
xor
dec
inc
mov
ds
jo
loop
or
mov
xchg
mov
faddl
dec
stc
fbstp
mov
add
shl
jmp
call
mov
pusha
jmp
or
and
push
je
sbb
pop
add
sub
cmp
mov
jo
and
popa
cltd
add
fs
imul
pop
rol
push
sub
adc
pop
mov
or
add
sub
adc
push
or
adc
pusha
je
enter
or
pop
fisubrl
mov
ja
mov
push
cmp
cs
or
imul
mov
call
je
out
mov
and
lea
jge
adc
pusha
push
lea
jae
sub
neg
mov
pop
bsr
inc
rcl
pop
test
aad
lahf
mov
mov
clc
movsbl
cmp
call
cld
cmc
push
in
and
cmp
adc
jle
dec
adc
data16
leave
push
insb
data16
add
ljmp
pop
pop
dec
inc
insl
jbe
movsb
cmpsb
xor
inc
or
hlt
int3
jns
jns
es
dec
pushw
insl
gs
ds
fstpl
inc
aam
push
test
ret
loop
mov
ret
ret
sub
call
inc
inc
jecxz
je
mov
decl
nop
jecxz
shl
iret
mov
push
push
cmp
inc
or
xchg
jmp
lea
call
jmp
pushf
stos
pushf
pushf
pushf
lea
jmp
bt
test
push
test
pushf
lea
jle
je
cmp
cmc
test
add
pusha
bt
cmp
pusha
call
icebp
fsubrs
in
and
dec
pop
push
insb
xor
push
add
and
pop
and
mov
jecxz
call
daa
insb
mov
pusha
xor
popf
xchg
adc
stos
jge
int3
mov
inc
jl
jle
or
mov
fsts
and
in
fidivrl
int
sub
pop
pop
jbe
push
push
cmp
sub
inc
lods
mov
pushf
pop
lea
jmp
cmc
clc
pushl
popl
cmp
pushf
pushf
push
cmp
pusha
lea
ja
call
pushf
call
lea
jb
xor
shld
mov
inc
mov
neg
not
dec
mov
jmp
push
mov
jmp
lea
ja
pusha
pusha
lea
jmp
fnstenv
leave
jmp
and
jle
sbb
fs
jbe
jb
push
dec
and
sbb
push
cmp
cld
pusha
jb
inc
sahf
pusha
je
repz
push
xor
jbe
adc
fisubs
add
fldt
scas
mov
movsb
gs
sbb
mov
sub
jae
notb
jg
int
lds
add
cltd
ljmp
out
test
pop
mov
int3
push
mov
ja
adc
jae
mov
mov
shlb
push
into
push
imul
popa
add
dec
xchg
out
and
inc
cmp
int
lahf
fdivp
dec
cltd
xor
pop
push
outsl
inc
inc
insb
fsubs
or
test
frstor
es
imul
mov
jmp
add
insl
push
inc
ss
dec
in
inc
push
xor
jbe
mov
test
mov
pusha
movw
push
pushl
ret
push
cmpl
jmp
xlat
or
lret
movsb
mov
cld
mov
or
daa
mov
jnp
ljmp
psllq
filds
fs
or
and
insl
mov
sahf
or
cmpsb
fucom
or
pop
lock
fadds
push
mov
out
pop
imul
add
dec
pop
pop
imul
add
and
mov
sti
xor
dec
inc
imul
into
xchg
push
sub
mov
iret
aam
push
pop
faddl
fists
mov
jnp
sub
jp
out
hlt
sub
pop
push
or
adc
je
mov
pop
jno
out
mov
and
outsl
arpl
jne
and
je
jns
jo
imul
arpl
insb
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
cmc
xor
push
sub
clc
movb
cmc
not
call
sub
and
stos
lods
jecxz
notl
add
lahf
or
adc
xor
sbbl
enter
scas
cmp
stos
and
pop
sub
push
mov
cmpb
repz
ret
push
or
sub
aad
cmpsb
jno
pop
and
fmull
nop
dec
cmp
xchg
xor
adc
test
in
insb
inc
mov
nop
aaa
sbb
add
sbb
pushf
loop
andb
enter
in
repnz
call
mov
push
out
in
xchg
imul
inc
int3
xor
call
cmp
pop
sbb
data16
inc
daa
aad
mov
pop
roll
xchg
movsl
movsl
and
arpl
aas
mov
jge
jae
hlt
test
and
mov
popf
rol
jne
imul
jns
xchg
xor
out
mov
in
lods
xchg
into
arpl
ds
cli
mov
movsb
xor
mov
mov
call
dec
bound
icebp
mov
loope
leave
scas
loope
shll
mov
stos
sub
lret
mov
insb
rcr
push
addr16
test
and
add
push
add
ljmp
adc
xchg
mov
lcall
je
xchg
sub
jp
loope
fldl
repnz
mov
xor
mov
clc
in
in
sbbl
sub
mov
or
add
fistl
and
inc
ret
ret
or
data16
pop
xor
ss
mov
xor
lock
adc
jge
sub
mov
movb
cmp
call
lea
call
pusha
xchg
call
jmp
aaa
lods
jo
jae
push
cs
and
sbb
sbb
push
pusha
imul
push
movb
xchg
and
jne
shl
ds
xchg
xor
stc
dec
jnp
sub
fstl
insb
push
mov
imul
fbld
gs
ljmp
push
dec
pusha
arpl
or
jl
fwait
leave
test
and
call
jno
rcrb
fiaddl
inc
cltd
mov
and
dec
fs
sbb
ss
bound
sub
rolb
lea
jae
fcomi
fidivrl
js
loopne
mov
orb
mov
jo
enter
nop
add
pop
inc
fisubrl
ss
inc
xlat
jbe
add
mov
adc
inc
lahf
sar
add
addps
xchg
xchg
test
sub
call
daa
pop
cmp
sub
or
sbb
cmp
jae
and
pop
adc
or
sub
push
sbb
inc
movsb
ljmp
or
jecxz
dec
xchg
stos
pop
outsb
mov
les
les
add
mov
add
pop
fcmovnbe
cmp
in
push
adc
mov
cmp
sbb
dec
cmp
cltd
add
sbb
lret
and
xchg
mov
cmp
insb
sbb
push
fisttpl
or
ja
out
mov
pusha
sbb
test
jmp
int
pop
in
jae
sbb
stos
lock
cmpb
mov
mov
dec
xor
arpl
jno
jmp
aas
adc
call
fwait
lods
fst
stc
outsl
mov
mov
loop
in
dec
xor
mov
or
cmpsb
cmp
rcrl
cld
rcrl
push
sub
aam
enter
fiaddl
rcl
mov
xor
cmpsb
inc
push
cmp
stc
stc
xlat
mov
jecxz
leave
cli
data16
sbb
inc
insl
xlat
mov
pop
jno
sub
out
push
lahf
sub
add
gs
fs
les
and
push
pop
push
mov
or
inc
insb
fwait
cs
sbb
jns
fiadds
jp
lock
or
adc
mov
int
mov
mov
ficomps
xor
push
lea
jae
sbb
in
jae
and
dec
xor
das
gs
and
xlat
fisubs
stos
sbb
das
pop
lds
pop
sub
idivl
pop
add
out
push
jg
fxch
cmpsb
test
imul
stos
xchg
push
cmp
and
daa
xor
mov
jg
inc
push
and
pop
inc
adc
sub
lret
xor
lea
jne
pusha
mov
jmp
push
jle
xchg
jae
xchg
int
stc
mov
add
mov
enter
pop
jle
fwait
rclb
dec
pop
test
mov
jmp
mov
idivl
and
jle
mov
push
push
cmp
xor
test
repz
cli
mov
inc
jmp
push
pop
aaa
sbb
pusha
jg
sbb
pusha
pop
push
std
inc
and
adc
mov
pushf
stc
clc
clc
repnz
movb
movl
call
add
pusha
pushf
pushf
dec
jmp
mov
lea
jne
bsr
dec
btc
mov
call
pushf
cmp
add
pushf
push
jmp
mov
call
sbb
sub
xor
push
add
sub
je
xor
mov
or
movsl
adc
xchg
sar
idiv
cltd
pop
sub
sub
ds
int
repz
aam
mov
mov
sbb
jecxz
lods
cmpsb
sub
ss
repz
insl
adc
outsb
mov
scas
pusha
ficoml
sbb
ljmp
push
jne
pushl
daa
xor
insl
jb
jle
and
xchg
adc
iret
scas
loop
les
or
std
jmp
movsb
enter
inc
loopne
bt
sar
cmp
and
not
rcr
shr
mov
shl
sbb
sete
add
pusha
cwtl
lahf
lea
jne
setb
movsbl
movzbw
pushf
movsbw
lea
pusha
lea
call
pushf
mov
call
bsf
mov
rcl
rcl
cwtl
lea
mov
test
stc
mov
and
shr
add
test
cmc
cmc
movsbw
mov
push
stc
clc
clc
or
call
movl
jmp
adc
jmp
call
test
and
test
lods
rcr
mov
jecxz
jle
jecxz
cs
jne
ja
insl
frstor
je
dec
lret
mov
jb
sbb
test
loopne
or
xor
sub
pushl
pop
ja
mov
das
inc
cmp
xchg
scas
mov
loopne
jo
sub
sbb
ss
stc
into
adc
add
popa
loopne
enter
mov
xchg
loope
lock
cli
out
mov
dec
jg
cmp
jb
push
jae
loopne
daa
cmp
popa
mov
outsb
ja
jne
adc
outsb
lock
add
sti
in
jmp
dec
test
adc
lock
add
popw
outsb
loopne
or
dec
xor
pop
cmc
shlb
or
jnp
mov
loopne
repnz
lock
lret
xchg
out
fwait
xor
fistpl
outsl
loopne
iret
mov
mov
and
lock
sub
and
inc
jle
addr16
xchg
jno
jns
add
imul
mov
mov
dec
or
sub
mov
dec
sub
pop
fnstcw
push
aaa
insl
pop
ret
jp
out
ret
xor
push
mov
lock
xchg
nop
xchg
inc
jno
mov
cmp
sub
inc
sub
push
and
mov
jmp
mov
sub
jo
push
jmp
jae
dec
sub
mov
jbe
or
int
mov
add
roll
scas
jb
jae
push
call
inc
mov
jbe
or
js
mov
inc
push
push
push
cmp
dec
xor
nop
notl
nop
mov
xor
loopne
inc
ds
idivl
jno
sbb
aaa
jg
pop
push
mov
inc
stos
push
cmp
repnz
cld
jno
rcll
scas
int3
xchg
insb
divl
jge
jp
xchg
hlt
sahf
xlat
mov
xchg
jae
inc
or
add
outsl
add
mov
es
adc
dec
jae
mov
pop
inc
add
pop
inc
and
pop
insb
dec
sub
xor
fsubs
hlt
andb
iret
lahf
out
sbb
adc
jo
sbb
nop
ljmp
add
dec
xchg
pushf
adc
add
das
xchg
add
outsl
adc
jbe
adc
push
repz
xor
aas
fsts
cmp
dec
lods
loop
xchg
mov
mov
cmpsl
int3
mov
jp
data16
and
aad
mov
mov
or
xchg
cld
out
push
imul
stc
add
push
lea
jmp
clc
jmp
shr
mov
pusha
btc
mov
dec
shl
add
lea
pop
mov
lea
call
lods
test
jae
jmp
mov
in
out
pop
ret
xor
aad
divb
or
ljmp
inc
clc
iret
lret
dec
xor
test
sbb
lds
cmpsb
lods
repnz
scas
cmp
pop
loopne
pop
imul
sbb
pop
lret
mov
icebp
pop
push
lret
add
rcr
and
ret
lcall
mov
jnp,pt
jg
push
xor
inc
sub
popa
shlb
xchg
bt
cmp
pusha
lea
je
push
pushf
pusha
lea
jmp
clc
mov
jmp
addr16
jp
inc
fsts
push
xor
fidivs
cmp
jb
inc
jne
push
fscale
mov
lahf
mov
roll
out
stos
push
mov
cmp
addr16
dec
cmp
dec
mov
pusha
push
push
xor
ljmp
sbb
imul
xchg
imul
ss
ja
es
pcmpeqw
jb
jmp
push
sbb
ficoml
or
mov
mov
xchg
or
mov
jecxz
pop
cmp
das
cld
aad
xchg
jae
sub
cmc
out
test
repz
xchg
or
sahf
lds
xchg
mov
xchg
stos
xchg
test
mov
xchg
xchg
rorb
add
notb
mov
xor
pop
outsb
test
mov
cmp
aam
and
out
lret
and
test
jge
pop
or
or
les
aaa
push
adc
xor
sub
arpl
jmp
rcr
movzbl
clc
bt
clc
shr
pusha
bt
call
mov
and
inc
sbb
dec
sub
lods
lea
das
push
je
fs
ret
push
mov
push
sbb
push
mov
sbb
jnp
mov
notl
xor
fcompl
call
orl
int3
cmpsb
ret
mov
fmull
aam
cld
push
xor
jle
out
rcll
fs
call
jmp
sbb
and
pop
xor
sbb
push
in
adc
shlb
pop
outsb
push
test
lcall
js
add
stos
leave
std
nop
and
sbb
mov
sahf
xor
adc
sub
dec
mov
loop
mov
imul
fsubl
cmp
or
out
mov
rolb
in
shl
aad
mov
mov
nop
add
cmpsl
cmp
push
dec
dec
push
push
dec
dec
dec
cs
push
push
add
and
jns
dec
cmp
pop
pop
add
dec
adc
xor
push
or
fbld
fld
mov
xchg
push
pop
nop
or
mov
mov
in
jle
cmp
sub
mov
push
sbb
adc
insb
or
in
movsl
call
sub
push
dec
cld
push
dec
mov
lods
daa
sub
lock
and
data16
mov
cmp
js
xor
push
and
insb
jae
inc
cmp
pop
adc
mov
mov
into
pop
pop
jae
lcall
mov
cmpsb
call
xchg
test
mov
mov
push
test
xor
les
or
aaa
pop
jns
cmp
ficoms
sbb
xchg
scas
mov
loopne
push
shlb
add
stos
rdmsr
xchg
pushf
aad
sarl
fimuls
fsub
scas
mov
pop
xlat
into
xor
add
dec
push
bound
jns
xchg
cmp
outsb
sbb
bound
and
pusha
or
ret
lret
jae
and
add
pop
sub
insl
aas
or
jae
ds
ror
cmpsl
roll
fisubs
lods
dec
ja
in
nop
cmpsl
mov
mov
prefetchnta
cmpsb
notl
clc
pop
push
or
shr
js
sti
fwait
rcr
scas
es
mov
jae
outsb
in
and
xor
dec
add
inc
adc
cmp
dec
xor
les
loope
sub
fdivr
jmp
rorl
rorb
rorb
jge
std
call
fs
jb
aad
bsf
sar
call
cmp
mov
jmp
cmp
pusha
mov
shl
lea
mov
cmc
clc
push
cmp
push
lea
jbe
shrd
xchg
mov
sbb
shr
add
cmp
and
rcr
bts
mov
setns
add
cmc
shr
or
movl
test
rcl
clc
mov
bt
cmp
js
call
cmp
pop
cwtl
jae
inc
aas
jns
inc
das
inc
daa
jge
xor
mov
std
push
jmp
add
push
lret
popl
lock
shl
lcall
pop
dec
sbb
dec
sbb
outsb
xor
adc
mov
add
jb
insl
sub
mov
jp
out
cmc
test
mov
mov
jecxz
mov
hlt
mov
mov
sbb
push
cmp
pop
jl
push
and
cmpl
or
imul
cmpsb
sbb
aam
jb
jmp
dec
sar
lds
mov
aam
dec
xor
cmpsl
xchg
lcall
and
add
xchg
cmpsb
jmp
out
testl
lret
xchg
hlt
xchg
sub
mov
mov
je
clc
xchg
lret
std
and
xor
add
js
pop
or
and
and
xchg
add
in
jmp
or
aaa
int3
lock
mov
loopne
cmpl
ljmp
adc
insb
pop
jae
cld
push
arpl
hlt
fbld
jl
adc
pop
stos
gs
mov
addr16
pop
sbb
mov
cltd
xchg
mov
mov
mov
aad
test
add
popf
rol
rol
pushl
pushl
inc
push
call
mov
and
jmp
filds
mov
push
push
adc
mov
sar
dec
loop
out
xchg
mov
test
imul
mov
and
loop
je
sub
push
sub
adc
cmp
les
xchg
out
xchg
ret
xchg
frstor
aad
loope
arpl
pop
inc
lods
mov
mov
or
rcrb
hlt
cmp
fsubrs
call
add
js
in
cmpsb
sti
stc
mov
pop
ret
in
stos
sub
mov
imul
mov
sbb
or
dec
dec
imul
xor
stos
shrl
inc
aad
jecxz
xchg
pushf
loope
jnp
xor
and
je
add
inc
sub
dec
sub
pop
punpckhwd
jnp
andps
jo
sub
jo
xchg
shll
incl
add
fs
imul
add
out
pushf
call
cmc
imul
and
minps
cmpsl
adc
push
cwtl
out
jecxz
xchg
or
mov
sbb
mov
fldl
mov
dec
fdivrl
adc
inc
cli
mov
fs
ret
push
push
test
sub
lods
mov
in
shlb
flds
lods
hlt
out
mov
dec
fs
sub
jno
call
arpl
inc
xor
inc
or
fmuls
adc
das
pusha
inc
ljmp
dec
mov
jae
xchg
jno
inc
aaa
sub
outsl
cmp
push
sti
adc
aad
ja
xchg
sub
sub
sbb
cmpsb
out
push
fs
int3
clc
icebp
push
pop
cltd
mov
mov
jbe
movsl
push
sahf
xor
mov
cmp
lods
imul
mov
fildll
test
nop
dec
leave
add
push
add
dec
out
sahf
shrb
push
or
fs
jmp
jmp
clc
test
cmc
sub
pushf
mov
lea
jne
jne
neg
shl
shr
mov
xchg
push
bts
mov
btc
bswap
not
rcl
xor
xor
clc
neg
and
mov
bt
xchg
btr
mov
push
btr
clc
mov
shld
pusha
mov
bts
mov
shrd
lea
or
bsf
mov
movsbl
movzbw
ror
sub
stc
mov
ror
jmp
cmp
push
pushf
lea
jb
cwtl
lea
mov
neg
bswap
mov
cmc
bt
shl
jmp
bt
pushf
shl
cmc
add
call
call
lds
pushf
jae
mov
lret
lock
push
mov
cmp
clc
mov
mov
loopne
int
sub
or
pop
movsl
clc
insl
pop
pop
ret
pop
xor
sti
add
sub
adc
dec
popf
mov
xchg
xchg
pop
cmp
xchg
push
push
ljmp
lods
sbb
push
testl
stos
movsl
or
es
popa
sub
clc
imul
xorl
jns
pop
adc
inc
jnp
cmp
pop
lret
add
and
add
sti
and
mov
jmp
imul
bound
insb
sbb
scas
sub
push
insl
push
adc
sbb
jmp
cwtl
push
test
jae
mov
lcall
hlt
sahf
enter
add
mov
iret
stos
enter
hlt
pop
fstpl
mov
ret
mov
icebp
lock
sub
cld
dec
inc
cmp
clc
inc
mov
loop
roll
int3
pop
mov
repnz
pop
sub
add
cmp
xlat
xchg
sub
lds
pushf
jmp
jno
arpl
inc
or
push
outsb
sti
mov
dec
pusha
xchg
xorb
cli
mov
mov
in
sahf
call
insl
ds
cld
xchg
sbb
cltd
nop
and
xchg
pop
fst
movsb
jnp
jb
jo
push
push
addr16
arpl
sbb
mov
idivb
sarl
stc
aam
aad
add
ljmp
test
push
lods
mov
lcall
outsl
cmpsb
lret
xchg
nop
leave
lods
cmp
dec
hlt
mov
inc
lds
movsl
jmp
cmpsl
rcll
out
xchg
ret
lods
sbb
jg
pop
or
mov
and
in
in
xchg
jp
adc
hlt
mov
shlb
in
rcrl
xor
dec
lock
push
cmp
rcrb
out
push
cmp
sbb
jae
pop
xor
push
addr16
in
out
mov
fdiv
ljmp
mov
lahf
cmc
xchg
lahf
int
in
negb
mov
hlt
or
mov
jl
dec
cwtl
mov
rolb
push
mov
push
push
dec
movsl
adc
or
mov
cmp
xchg
mov
cmp
adc
pop
ja
testb
aas
movsl
add
lret
push
ss
test
aad
add
into
mov
clc
mov
arpl
pop
or
sub
push
inc
or
or
imul
mov
jae
cmc
sarl
test
push
pop
cmc
inc
pop
pop
xor
xchg
cmp
adc
mov
xor
and
xlat
mov
xor
bnd
inc
jne
mov
dec
pop
mov
jmp
push
xchg
fiaddl
add
fs
clc
imul
mov
inc
mov
lock
int3
xchg
ret
popf
dec
mov
cli
sub
inc
jecxz
mov
stos
fsin
std
xchg
lret
inc
mov
dec
and
sbb
adc
mov
sar
shrd
lea
mov
pushl
push
jmp
mov
and
jbe
cmp
pop
adc
jl
pusha
or
push
rorl
or
cmpsl
leave
mov
fists
inc
dec
cli
mov
mov
in
adc
pop
bound
cwtl
or
add
add
add
rcrb
std
xchg
loop
xchg
lcall
aad
aam
lahf
into
jg
mov
push
sbb
sbb
je
sub
fwait
cmpsb
and
cli
inc
jp
inc
push
push
stc
jge
mov
filds
fwait
loope
mov
jne
ljmp
imul
and
mov
push
pusha
jne
inc
jmp
fldcw
inc
inc
mov
push
mull
mov
lret
mov
aaa
ficoml
aaa
lds
in
iret
sub
inc
or
ds
push
jne
or
stos
out
inc
inc
or
pushf
push
cmp
cmp
lahf
lea
not
mov
lea
jns
pusha
pushf
lea
ja
jmp
call
jmp
mov
jmp
into
cmp
cmpsb
sarb
xchg
and
andb
jge
push
sahf
cmp
fstps
inc
ja
cmovb
and
rcrl
cmp
xchg
pop
pop
inc
push
stc
pop
push
clc
shll
in
je
sub
in
or
scas
pop
scas
pop
push
sub
mov
mov
jb,pn
divl
mov
hlt
popl
adc
sub
dec
mov
jae
inc
sbb
dec
imul
pop
and
jmp
icebp
lock
loopne
fstl
cmp
push
jnp
add
aaa
mov
adc
xchg
mov
call
mov
jg
lods
push
lahf
scas
pop
mov
adc
test
sarl
sub
cmp
cmp
mov
repnz
ljmp
aas
mov
shlb
sub
xchg
inc
popa
fdivs
fwait
imul
cs
cmp
clc
mov
rorb
fs
xor
lock
mov
or
sti
cmpsl
cmpsb
cmc
adc
cmp
test
roll
pop
pop
sbb
sbb
jae
pop
movsl
in
cli
ljmp
aaa
inc
psllq
push
ret
dec
sbb
imul
sarl
cmp
sub
push
inc
fildll
test
inc
imul
ret
fs
pop
jmp
mov
ror
jl
jno
xchg
in
es
stos
and
adc
dec
jb
outsb
adc
push
sbbl
lcall
jno
test
mov
fmulp
mov
xchg
out
xchg
aam
lcall
cmp
sbb
fwait
into
mov
mov
pop
pop
pop
pop
xor
xchg
mov
lds
adc
xchg
pop
nop
cmp
mov
js
cmp
sti
scas
loope
loopne
and
sarb
lods
lret
std
mov
idivb
gs
call
js
nop
enter
call
xchg
xor
jbe
insl
stc
test
inc
adc
mov
sub
mov
jge
loopne
cmp
add
sub
jg
mov
scas
jb
or
lds
fistpll
loopne
test
push
sub
mov
xchg
ljmp
sbb
or
lea
pop
stc
pop
aas
mov
pop
inc
mov
pop
cld
shl
fisttpll
out
xchg
mov
out
add
aas
hlt
scas
out
fisubrs
into
test
ss
ja
hlt
sahf
mov
and
sub
and
mov
repz
sub
cmp
push
gs
inc
data16
shlb
mov
xchg
jns
pop
cli
int3
lret
or
cmpsb
pop
orb
sub
mov
xchg
add
add
stc
mov
bound
dec
jge
lret
pop
mov
add
sar
imul
sub
mov
push
sub
and
or
xor
stc
inc
pop
lea
outsl
mov
sub
dec
ljmp
cmc
lea
imul
and
inc
lret
push
fdivp
mov
ja
addr16
sbb
jo
adc
push
dec
push
test
add
pop
rcll
mov
jle
idivb
adc
mov
jg
pop
lret
lret
jge
pop
push
mov
lods
arpl
add
movsb
mov
pop
dec
into
adc
rcll
sahf
call
or
xor
adc
ja
mov
lcall
mov
jecxz
shll
adc
xor
inc
in
mov
sti
je
fmull
repz
int3
pop
xchg
xorb
jmp
pop
imul
jp
mov
push
and
daa
jns
filds
add
inc
mov
inc
mov
xchg
pop
lds
xchg
dec
sbb
lods
fdivp
aam
aam
idivb
add
mov
cli
sbb
push
ja
inc
bound
xchg
xor
aad
push
ss
es
lret
mov
jecxz
jnp
imul
inc
xorl
cwtl
bound
and
sub
mov
lcall
mov
mov
test
stos
fs
fcompl
adc
dec
mov
add
jg
daa
aaa
adc
popf
or
mov
add
jo
addl
jnp
lock
outsb
sbb
mov
cmp
and
dec
jecxz
repnz
lret
mov
push
jmp
inc
je
gs
pop
jge
dec
setae
or
js
add
in
test
jno
loop
stos
jge
loopne
push
mov
inc
test
mov
loopne
lock
lret
addb
mov
push
push
in
test
lret
pop
and
sub
call
fstpl
fstps
cmp
mov
add
cld
push
std
pusha
imul
cmpsl
aad
pinsrw
xor
sbb
test
mov
out
lcall
jns
mov
dec
and
jmp
push
out
adc
ds
ds
adc
cmpsb
bound
xchg
push
push
or
jno
imul
or
dec
mov
dec
stos
mov
dec
das
iret
lock
push
push
dec
and
jmp
inc
daa
jmp
jmp
divl
jge
xchg
push
shl
cld
mov
ja
cmp
out
and
jbe
js
out
mov
js
xchg
jnp
xor
aad
xor
xor
jo
repz
fldcw
sub
out
sub
adc
inc
mov
fistps
mov
stc
pop
lret
out
adc
pop
loop
jnp
lahf
xor
shlb
push
ljmp
xchg
sub
inc
sbb
mov
adc
mov
fadds
shrb
mov
mov
or
jp
stos
xor
dec
and
stos
mov
add
inc
orl
test
xchg
or
pop
out
imul
mov
daa
cmpsb
xchg
add
aad
ja
xchg
add
repz
stos
xchg
sarl
icebp
pusha
cmp
inc
mov
mov
mov
lods
sub
mov
pop
push
adc
xor
arpl
cmpsl
adc
mov
inc
adc
movsb
inc
sub
inc
push
mov
int3
mov
pop
mov
cltd
push
or
mov
rep
clc
jp
insl
jmp
jl
or
subb
std
mov
jmp
mov
xchg
dec
repz
ds
sbb
test
loopne
loopne
cmpsl
aam
imul
pushl
jbe
cmp
popf
pop
adc
out
adc
aam
and
ljmp
subb
out
jae
pusha
sub
jl,pn
ret
mov
imul
cmp
loopne
dec
jg
mov
iret
push
cmpsl
jnp
ds
fxrstor
push
loop
jbe
jmp
jge
add
imul
inc
sets
cs
addr16
mov
sbb
sbb
dec
mov
leave
push
sbb
insb
xor
pop
sbb
cs
aaa
sub
scas
push
loope
bound
imul
lock
inc
not
shlb
or
addb
cli
icebp
mov
adc
insl
in
inc
mov
cs
cmp
les
out
lock
jns
shll
lods
inc
push
or
das
or
xor
pushf
sub
mov
shlb
push
mov
aas
xchg
jge
movsb
and
xor
mov
icebp
cmp
pushf
stc
jecxz
adc
aad
not
and
icebp
inc
push
mov
push
push
lcall
add
lock
cmp
mov
inc
cltd
fs
pop
addl
sbb
sti
inc
dec
inc
test
push
xchg
xchg
or
lods
adc
mov
sbbl
out
adc
test
pop
inc
mov
shll
das
in
movaps
pop
push
in
adc
pop
or
bound
xor
je
mov
call
cmp
push
pop
dec
call
imul
push
lds
xchg
pushl
in
leave
dec
push
fisubl
mov
cld
jno
xchg
mov
arpl
push
add
add
mov
fs
in
jg
pop
inc
jecxz
add
add
adc
sbb
rorl
inc
ficoms
aam
mov
shlb
xchg
incl
shll
push
push
push
aam
pop
push
lcall
push
leave
arpl
sarb
push
adc
jnp
sub
sbb
loopne
insb
orb
aaa
adc
les
fldcw
add
pop
mov
xchg
xor
mov
adc
sub
shll
adc
outsl
iret
mov
or
and
insl
out
adc
lods
fwait
mov
out
or
push
lods
add
ja
aam
loop
mov
mov
or
mov
push
push
add
dec
cltd
addr16
bound
icebp
jns
sarl
xor
mov
into
ror
sbb
cmp
add
inc
inc
faddl
add
mov
xorl
rolb
inc
iret
inc
cld
push
or
or
xchg
pop
pop
sub
mov
cmp
stos
mov
int3
pop
andb
sub
rcrb
push
movsb
mov
sbb
cld
inc
push
test
inc
shrb
hlt
hlt
xchg
fists
jb
push
sarb
in
dec
test
pop
js
xchg
add
mov
pop
add
xchg
in
call
pop
and
movsb
mov
lcall
mov
lahf
mulb
sbb
cmp
sub
pop
jge
stc
adcl
fisubl
add
dec
adc
stos
cli
and
popa
xchg
sahf
dec
int
decl
clc
inc
push
test
lret
ror
jae
jne
adc
jae
divl
cmp
sub
orb
pop
movsb
and
lcall
jmp
lds
xor
call
add
cmp
mov
or
dec
xor
out
lods
or
in
push
xor
sub
mov
imul
mov
mov
push
inc
aad
mov
add
adc
cmp
mov
mov
lods
pop
push
mov
sub
dec
popf
pop
cmc
push
fcomps
mov
leave
mov
rorl
insb
cmp
inc
cmp
mov
in
push
cmc
add
adcl
scas
mov
cwtl
mov
cmp
and
notb
roll
xlat
pop
mov
mov
xchg
lods
out
jecxz
adc
daa
mov
sub
jge
mov
mov
das
stos
adc
adc
pop
xlat
jmp
test
and
jae
sbb
shlb
das
movb
jbe
mov
out
dec
xor
out
sbb
lock
scas
dec
sub
stc
call
pop
in
push
xor
xchg
xchg
add
leave
movsl
popf
mov
xor
add
mov
pop
xchg
in
mov
roll
jo
out
mov
fnstcw
sahf
cltd
cs
addl
shl
rcl
pushf
mov
icebp
idivl
cmc
mov
push
aad
lea
xor
and
mov
popa
cmpsb
jno
stos
stos
or
jbe
push
sub
fs
adc
das
jo
jmp
mov
mov
sbb
add
pop
jge
mov
push
mov
sbb
jmp
lret
idivl
scas
fstps
inc
cmp
xor
mov
xor
arpl
lret
add
psubd
leave
std
jb
sub
loop
loop
popf
jo
jbe
mov
test
cld
jne
cmp
test
lock
jbe
sbb
jmp
jno
hlt
orb
push
xchg
pushf
xchg
dec
cmp
sub
inc
mov
iret
add
daa
popa
bound
icebp
repz
mov
and
das
adc
mov
inc
push
or
popa
roll
mov
pop
mov
arpl
or
pop
scas
in
add
ljmp
xlat
add
cmp
lcall
adc
repnz
and
jecxz
add
insb
mov
andl
cmp
add
pop
mov
pusha
mov
inc
jge
push
or
xchg
stos
mov
scas
dec
and
insb
lods
push
and
gs
sahf
push
fisubl
fdivr
shll
pop
mov
sahf
es
dec
push
adc
mov
fisubs
arpl
fstpt
ret
stos
rcl
test
xchg
push
pop
es
arpl
fdivs
push
push
xor
xlat
outsl
sbb
inc
dec
inc
mov
lds
ret
pop
add
cmp
fiaddl
mov
push
enter
and
dec
ss
mov
push
inc
dec
pop
fcmovnbe
scas
loopne
shrl
pop
out
les
adc
movsl
shll
ds
add
out
notl
shrb
inc
lahf
lods
repnz
xchg
out
stos
lahf
mov
clc
movsb
mov
sbb
idiv
and
cmp
cwtl
mov
loopne
je
adc
enter
jae
pop
xchg
pop
pop
push
mov
out
sar
adc
sbb
push
or
dec
mov
fbld
pop
and
mov
nop
adc
xor
dec
sub
adc
xchg
stos
fdivl
rol
out
sbb
push
fldcw
or
xchg
adc
pusha
loop
or
push
cld
jmp
imul
scas
jbe
clc
xor
or
fdiv
sub
xchg
mov
shrl
test
mov
sub
lds
sub
jne
mov
sarb
dec
cmpb
sub
sbb
adc
int
mov
mov
scas
sub
sbb
mov
negb
sbb
sbb
lcall
testb
nop
and
and
stc
movsb
push
xor
adc
shl
pavgb
insl
mov
roll
mov
inc
sbb
call
jno
jno
and
test
fistl
xchg
mov
dec
outsl
pop
cmp
ret
bnd
sbb
fcomi
adc
bound
adc
test
lock
jno
jo
mov
in
andps
adc
sbb
scas
pop
cmp
sub
lahf
repz
repnz
gs
outsl
push
add
xchg
xor
cmova
push
out
push
orb
xor
cmp
inc
repnz
xchg
add
add
pop
mov
xor
rorl
sub
jecxz
pop
sub
xchg
dec
rclb
cmp
fidivrl
mov
xchg
jbe
test
xchg
out
std
filds
stos
stos
cmp
je
sbb
sub
push
xchg
push
rorb
fwait
xchg
push
mov
or
and
into
xchg
mov
push
dec
xchg
pop
cmp
adc
es
cmc
lret
dec
or
pushf
lret
dec
sbb
enter
xchg
test
ds
jne
ljmp
shll
inc
or
xor
sbb
shll
insb
inc
mov
sbb
lods
sti
or
dec
aas
jbe
mov
lret
test
and
and
xor
mov
inc
iret
jle
cwtl
mov
mov
sub
loop
push
push
sub
loopne
inc
inc
sarb
inc
jae
scas
lock
sub
cltd
outsb
push
add
ljmp
into
dec
popf
sahf
inc
out
jbe
adc
push
out
dec
cs
and
pushf
test
push
add
mov
jnp
xchg
cmp
out
sub
addr16
cmp
scas
mov
mov
int
push
dec
pop
stos
ljmp
push
lahf
pushf
add
rolb
outsl
mov
dec
push
fwait
jge
xor
jmp
ret
pop
pop
push
adc
mov
popa
sbb
mov
cmp
int
nop
rcrb
mov
clc
mov
fsubp
jp
test
fwait
mov
addb
xor
fcomp
aad
add
mov
sub
jne
sti
mov
mov
aas
xchg
pop
sub
mov
mov
sti
cmp
dec
mov
dec
jb
gs
xor
xchg
fs
rorl
inc
ljmp
xor
test
push
mov
movsl
test
test
jno
and
add
jge
iret
cmp
in
mov
mov
inc
clc
xor
scas
int3
orb
or
or
das
lea
in
outsb
and
hlt
fucomp
lea
mov
insb
cli
cld
mov
jle
jo
mov
push
cmc
outsl
push
outsb
mov
std
adcl
lcall
sub
cltd
and
movhps
mov
fdivrl
pop
dec
ret
rcr
inc
sahf
jb
xor
lret
addr16
movsb
push
out
mov
lods
stc
sbb
lahf
inc
inc
rcl
js
mov
mov
inc
in
sub
push
popf
adc
ja
sbb
inc
or
hlt
add
adc
sbb
mov
hlt
ljmp
fstl
cwtl
popf
jne
xor
pop
les
mov
dec
mov
lret
stos
jge
in
test
std
test
jl
mov
lret
push
dec
add
mov
add
sub
jg
sti
sbb
adcb
add
push
adc
or
push
in
in
jnp
outsl
mov
les
dec
or
outsb
dec
ja
scas
jmp
pop
mov
push
mov
movsb
push
pop
mov
inc
xchg
push
mov
xor
mov
cmc
leave
add
jg
out
cwtl
out
jg
and
and
fsubr
lods
subl
mov
and
fsubrl
out
fcmovnb
shrl
ljmp
sbbl
mov
and
adc
sbb
xlat
sub
inc
mov
in
repnz
adc
hlt
fidivs
or
scas
inc
iret
mov
sub
loopne
xchg
jns
sbb
fildll
imul
je
mov
pop
cmp
inc
xchg
mov
jnp
mov
mov
int
out
or
xchg
mov
scas
sbb
mov
adc
pop
testb
js
add
pop
xchg
mov
popa
cmpb
decb
push
jg
mov
add
testl
pop
dec
xchg
in
xor
lods
ljmp
xchg
mov
stos
rol
lods
call
outsl
mov
add
lds
xor
fimull
std
rclb
call
cli
das
sahf
adc
stos
jnp
arpl
mov
mov
adc
jb
test
cmp
dec
mov
and
shlb
dec
movl
pushf
sbb
shrb
and
pop
push
lea
jo
push
lea
call
shl
cmc
mov
cmc
test
clc
pushf
shl
call
jmp
sti
inc
pushf
mov
stos
in
mov
out
xchg
mov
in
lea
ds
cmp
pop
cli
lods
sarl
push
cmp
push
mov
jbe
jno
enter
xadd
cwtl
and
dec
dec
int
or
out
stos
cmpb
jns
cmpsl
rcr
jnp
mov
adc
iret
cmpsl
shll
xchg
lcall
xorl
mov
cmpsb
fcoms
clc
mov
xchg
ror
sbb
es
into
daa
lcall
out
int
outsb
lods
jmp
ja
push
dec
fwait
lods
lcall
test
mov
mov
stos
inc
mov
xchg
and
addr16
and
pop
testl
xor
pop
popa
jb
bound
jbe
hlt
hlt
mov
mov
movl
call
movw
mov
pusha
push
pushl
ret
cmp
pusha
push
lea
ja
sbb
sub
ror
bts
setne
lea
add
bt
adc
inc
mov
stc
and
inc
test
mov
jmp
add
and
xor
dec
sbb
or
xchg
aam
sbb
gs
test
lods
ss
imul
jb
cmc
push
mov
cmp
mov
nop
sub
jae
adc
xchg
fwait
je
out
mov
mov
jg
xchg
or
adc
subb
mov
outsl
sbb
push
ret
pop
pop
and
add
sbb
cmp
test
cmovbe
add
sub
rolb
call
inc
add
dec
mov
push
lea
jb
btr
cmp
mov
setno
not
mov
pusha
pushl
call
lahf
insb
mov
push
sub
add
out
test
aad
cmp
xchg
lock
and
push
mov
push
and
inc
insb
ret
inc
xor
push
insl
or
outsb
aaa
pusha
cltd
xchg
das
je
mov
pop
int3
pushf
push
scas
out
mov
call
inc
js
cmp
scas
fnstsw
adc
outsb
xor
adc
pop
int3
pushf
adc
inc
ja
add
jno
push
sbb
sbb
je
aaa
insl
ja
fwait
test
dec
push
mov
xor
pop
test
pop
jge
orb
mov
loopne
or
pushf
cld
ja
loop
pop
scas
sub
or
test
scas
dec
cmp
jne
xlat
in
stos
filds
xor
cmp
mov
pushf
gs
inc
mov
sbb
out
xor
inc
mov
mov
mov
mov
adc
dec
adc
xor
mov
adc
cmp
push
push
fdiv
push
and
or
pop
in
xchg
lahf
xlat
cli
pop
or
inc
jge
pop
jmp
xchg
mov
pop
jo
nop
mov
or
dec
imul
add
add
push
xor
push
inc
daa
or
xor
pop
lcall
xchg
mov
mov
mov
mov
mov
scas
lds
mov
ret
pop
idiv
rcrl
adc
loope
dec
je
in
dec
jle
sbb
jo
and
pxor
sub
rcr
and
clc
iret
stos
mov
xchg
xchg
add
or
shl
out
fldenv
or
and
push
scas
aam
aad
negl
test
mov
lcall
int
leave
lcall
push
jns
xlat
jmp
push
add
pushf
lea
jmp
movb
pusha
setg
call
sbb
or
scas
fldenv
leave
out
sub
imul
mov
orb
lods
lret
adc
inc
out
fmul
test
inc
xor
xchg
insb
adc
xchg
mov
xor
lret
inc
call
imul
adc
clc
inc
int3
pop
xchg
push
adc
fimull
stos
test
stos
enter
jl
cli
call
push
jmp
pushf
cmp
add
clc
mov
clc
sub
movl
call
jmp
lea
ja
clc
pushf
imul
stc
call
test
test
jmp
pushf
lea
jb
clc
cmpb
push
call
lea
jb
pushf
bt
cmp
pusha
pusha
lea
jae
bt
mov
not
mov
xor
sar
mov
pusha
cmp
call
push
pusha
adc
cmp
cmp
sub
movw
pushl
shl
call
clc
shr
pusha
clc
clc
imul
mov
pusha
lea
push
pushf
call
pushf
call
call
mov
shl
lea
call
pop
ret
not
not
mov
movsbw
mov
setg
mov
pusha
pusha
mov
pushf
dec
pushf
movb
not
call
clc
cmp
pushf
pusha
lea
je
jmp
cli
mov
mov
aaa
push
or
arpl
addr16
jo
rcll
xor
aad
mov
int3
daa
and
add
jns
aas
ss
xor
inc
and
push
xchg
in
mov
or
jmp
sub
add
hlt
addl
daa
mov
cmpsl
hlt
sbb
and
add
and
sub
xor
dec
cmp
mov
es
and
sub
or
mov
pop
jb
mov
call
cld
and
popf
fists
xchg
mov
fwait
cmp
loopne
adc
cmp
adc
fwait
mov
inc
call
push
push
pusha
ja
inc
cmp
arpl
sub
sub
or
popl
test
test
call
jecxz
test
lods
iret
test
andl
fsubr
std
imul
mov
and
sub
in
xorl
push
icebp
iret
pushf
imul
jmp
lods
bound
clts
add
sub
sbbb
repnz
test
sbb
jge
ss
and
addb
or
inc
aam
mov
or
dec
mov
inc
cmp
cmp
sub
adc
psllw
mov
dec
mov
rcll
je
fwait
inc
jae
aaa
fistl
fsubl
or
out
aam
dec
out
pop
popf
lret
mov
mov
stos
xchg
xchg
in
jmp
pop
pop
mov
xchg
ret
aas
call
pushf
mov
pushf
pusha
pushl
push
lods
pushf
call
sub
cmc
pushl
pusha
mov
stc
cmp
jmp
aam
push
mov
adc
jo
lds
jbe
push
movsb
fcmovbe
or
stos
inc
rep
fstps
pop
add
push
daa
and
jg
lret
jmp
push
lret
and
fcomi
cmp
test
push
pop
add
dec
shl
or
add
ja
repz
les
pushf
in
hlt
mov
and
sti
lods
loopne
fisubl
and
enter
mov
pop
shll
rclb
jbe
mov
sub
adc
push
sub
imul
repz
daa
mov
decl
repz
rolb
mov
mov
cmc
pop
loope
push
push
sub
loope
push
and
dec
cmpsl
fists
cmp
cmp
push
test
into
nop
int
lahf
ss
cs
and
xchg
inc
mov
jmp
ror
repnz
push
xlat
rorb
mov
sbb
fs
jne
lea
shrd
stc
mov
push
pusha
stc
add
call
push
das
fsubl
mov
mov
mov
nop
sbb
cmp
fstpl
fisttpl
data16
mov
pop
daa
and
sub
popf
faddl
out
dec
jecxz
cmp
cwtl
or
or
sahf
loopne
std
mov
adc
xor
jne
or
sbb
sbb
xchg
dec
or
cld
cmpsb
fwait
mov
mov
sbb
cld
sahf
mull
mov
xlat
call
inc
and
pushf
pushf
pushl
ret
xchg
pop
mov
pop
sub
pop
or
pop
and
scas
movsb
pop
jl
pop
pop
popa
or
push
daa
or
mov
sahf
loopne
std
dec
sbb
cwtl
sub
cli
aad
and
or
dec
fnstenv
add
sti
insb
adc
mov
fst
sub
stc
add
jp
mov
mov
clc
and
enter
test
test
int
lods
fdivrl
lea
jb
pusha
clc
bt
cmp
xor
cmp
jmp
jg
movsl
cmpsb
jae
cmp
sub
pop
sub
push
jge
cmp
sahf
stc
inc
rolb
adc
mov
out
out
test
jne
orb
nop
sub
jb
jb
fcoml
movsl
bound
mov
and
stc
repz
mov
les
imul
sbb
outsb
add
jbe
inc
xor
add
jp
movsbl
mov
movsbw
call
sti
repnz
and
xor
add
pop
inc
adc
jnp
push
jp
daa
xchg
stos
cmp
out
xchg
aas
inc
jmp
out
out
sti
and
pop
push
and
lods
je
cmp
subb
int
in
mov
mov
xor
sbb
mov
stos
hlt
xchg
mov
mov
shrb
into
mov
mov
lea
jb
cmp
pushf
cmp
cmc
cmpb
movl
pusha
jmp
inc
or
movsl
jae
jecxz
jmp
fisttps
jecxz
xchg
shrl
add
hlt
into
popa
iret
out
lods
and
xchg
repz
ret
dec
nop
inc
jb
xor
sbbl
xchg
loop
jns
mov
cmpsl
cmp
shll
xchg
out
testb
push
cmp
mov
aad
xchg
into
xchg
repnz
cmp
aad
scas
mov
jae
lds
imul
and
fs
xchg
stc
outsl
inc
enter
add
push
or
sbb
loop
adc
mov
pop
xchg
lret
push
jmp
insb
push
pop
pop
sub
inc
xchg
mov
pop
and
inc
pusha
pcmpgtw
and
pop
jecxz
or
lods
add
cmp
outsb
arpl
sub
cmp
sbb
mov
add
cs
adc
ret
pusha
lret
jecxz
xor
adc
dec
xor
xor
outsl
ss
movsb
jae
outsb
push
push
je,pn
or
push
fcmovbe
stc
test
inc
push
inc
adc
mov
hlt
cmp
inc
jae
jp,pn
push
jo
lods
adc
xchg
inc
mov
xchg
aaa
xchg
gs
es
inc
dec
and
jne
jb
push
jne
and
push
in
in
fcompl
mov
jb
lcall
or
adc
test
mov
mov
lret
fadds
xlat
stos
jmp
or
add
movw
pushf
pushf
lea
jmp
or
push
stos
jae
aaa
jg
daa
push
pop
pop
and
jns
or
push
clc
mov
hlt
dec
cli
jl
inc
imul
gs
daa
hlt
push
and
pop
in
cmpsb
pop
negl
adc
cmp
add
add
cmpsb
jbe
cs
loope
inc
mov
pop
lods
xchg
mov
leave
lods
into
mov
lods
out
out
and
dec
cmp
or
and
or
jbe
jp
sub
arpl
mov
loope
push
cld
sbb
push
jns
fsts
jo
aas
inc
and
lret
pop
cmp
jb
jb
shlb
test
xchg
push
cmp
rcrb
in
mov
and
movsl
imul
sbb
lock
lret
xchg
sahf
std
mov
cmpsb
icebp
mov
sahf
pop
cmpsl
lret
and
outsl
cmp
shl
btr
shld
mov
pusha
mov
stc
push
push
repnz
mov
lea
jne
push
movb
pusha
mov
call
push
push
xchg
call
gs
mov
mov
xchg
cld
mov
lret
mov
pop
sub
jno
lret
sbb
movsb
add
inc
pop
push
repnz
hlt
xor
loopne
pop
mov
cli
sub
scas
inc
push
fs
cmp
pop
dec
rolb
movsl
jb
xor
mov
mov
aad
stos
das
imul
or
pop
or
or
sbb
xor
jae
cs
add
or
sbb
add
or
insb
and
xchg
loopne
fsts
jnp
pop
ss
rcrb
cmp
imul
mov
test
in
subb
jno
sub
popf
test
shl
adc
es
iret
ret
je
in
jne
lea
scas
adc
mov
pop
jns
scas
jns
lds
push
dec
sub
sub
adc
jmp
add
mov
loope
stc
jmp
jle
outsb
test
shlb
out
int3
mov
adc
shrb
out
into
int3
in
add
shrl
jae
and
jae
out
add
loope
lea
rolb
cltd
mov
ljmp
std
cmp
leave
mov
and
adc
shl
xchg
add
push
cmp
mov
ljmp
jle
and
mov
mov
xchg
lock
rolb
push
insl
cmp
inc
xor
cmp
sub
bt
call
lea
jne
sets
movb
jmp
add
stc
test
and
mov
stc
mov
rcrl
dec
pop
ficoms
jp
lock
ret
icebp
shll
popf
jb
jmp
movsb
nop
jg
sbb
scas
dec
repz
xchg
incl
cwtl
data16
sbb
lahf
and
dec
and
test
xlat
imul
push
jg
pop
insl
and
cmp
pusha
lea
jae
jnp
setle
xchg
mov
mov
pusha
pushl
setle
setns
mov
lea
movzbw
bswap
movsbw
lea
call
call
xor
stc
test
bt
cmc
repnz
call
call
call
sbb
sbb
push
sub
inc
xor
inc
adc
inc
or
push
lock
sarb
jns
mov
js
mov
lcall
jmp
pop
lds
jnp
jbe
xor
je
jecxz
stc
push
cmpsb
mov
ds
dec
fimuls
adc
lods
xor
pop
test
addl
pushf
int3
in
lea
cwtl
cmpsb
int3
add
push
add
loopne
loopne
cld
xchg
xor
mov
rep
lea
movzbw
movzbw
mov
xchg
movsbl
movzbl
xchg
lods
bsf
shl
not
pusha
xor
movsbl
btr
stc
mov
sub
pop
lea
stc
not
shrd
bswap
rol
sub
pushf
xor
movsbw
pushf
pushf
bswap
mov
xchg
movzbw
movsbl
mov
setb
push
pushf
lods
stc
not
test
cmp
clc
xor
pushl
call
test
jmp
btc
push
clc
jmp
push
pusha
lea
call
pusha
jmp
lea
je
bt
push
pushl
stc
add
cmp
cmp
pusha
jmp
not
lea
pushf
jmp
pushf
test
xor
stc
cbtw
stc
pusha
test
pusha
cwtl
clc
pushf
pushf
sub
cmc
pushf
clc
stc
sub
movw
mov
movw
lea
jmp
add
add
bswap
pusha
call
mov
pushf
pushf
mov
push
lea
jmp
call
clc
jmp
push
pusha
setne
xchg
lea
push
pushl
popl
pushf
movw
movl
call
das
mov
shrd
mov
stc
cmc
add
call
jmp
aad
mov
or
add
or
cmc
mov
pusha
clc
cmp
call
shl
sub
notl
dec
pushf
mov
pusha
sub
push
test
and
push
pushf
popl
movw
pushl
pushl
popl
mov
push
push
lea
jmp
push
cmp
cmc
add
pusha
call
mov
pushf
push
mov
movb
pusha
movw
lea
jmp
movb
mov
movb
pusha
lea
jmp
neg
shl
clc
ror
mov
call
pop
call
stc
bt
sub
cmc
add
pusha
jmp
pushl
popl
pushl
push
lea
jmp
aam
mov
sbb
pop
movsbw
adc
shr
bts
pop
pusha
mov
stc
setae
mov
shld
add
movzbw
mov
stc
rcr
bsr
pushl
popf
setb
pushf
movzbw
mov
jmp
call
btc
cmp
mov
inc
rol
xor
mov
bt
bt
add
push
call
bt
not
jmp
pushf
popl
call
sub
bt
test
cmpl
pushf
movb
call
mov
call
shrd
mov
sar
dec
cmp
dec
mov
cmp
sub
cmc
shl
call
daa
pusha
or
mov
jmp
pushf
popl
pusha
pushl
popl
push
push
mov
pushf
lea
jmp
mov
movb
push
push
movb
lea
jmp
xchg
cld
movsbw
not
not
mov
mov
pushf
pushf
cld
call
push
mov
push
pushf
fsqrt
pusha
pushf
lea
jmp
push
mov
call
push
pushl
mov
push
pusha
pushf
push
lea
jmp
call
xchg
pushf
mov
jmp
mov
cmp
call
pushf
popl
lea
jge
inc
inc
xchg
push
lea
call
jmp
divl
call
clc
cmp
clc
sub
call
pushf
mov
call
shlb
subl
xor
mov
xor
js
das
addl
xor
push
push
xor
pusha
inc
xor
cwtl
cmpsb
xor
xor
sub
je
sbb
leave
xor
sbb
sbbl
lahf
xor
dec
cmp
adcl
data16
cwtl
mov
xor
lock
cwtl
shlb
subl
xor
andl
xor
mov
das
xorl
jae
adcl
das
orl
xor
sbb
sub
scas
xor
pop
pop
xor
adc
xorl
mov
addl
pop
xor
andb
dec
lcall
call
je
sbb
pop
xor
addb
pusha
xor
xor
adcb
sbb
orl
xor
and
add
mov
addl
pop
xor
xorb
push
ljmp
orl
xor
push
lock
addl
xor
nop
stc
xor
call
repnz
push
pop
xor
sbbb
addl
xor
and
xor
call
data16
inc
out
xor
dec
jae
adcl
xor
nop
mov
cmpl
das
subl
ret
dec
dec
xor
add
das
subl
scas
xor
xor
addl
das
xorl
add
subl
xor
xor
sub
xor
cwtl
cmp
adcl
push
xor
fsubs
cmpl
xor
mov
xor
xorb
xorl
sub
sbb
clc
das
orl
inc
xor
push
ljmp
orl
xor
fdivr
das
orl
das
subl
lcall
sar
xor
dec
repnz
add
xor
shrb
fdivrs
xor
inc
scas
xor
mov
xor
inc
mov
addl
cmc
xor
fsubs
orl
xor
shl
das
addl
xor
and
orl
das
orl
xor
xorl
adcl
jne
adcl
xor
sub
fcomps
xor
and
sbbl
out
xor
cwtl
sti
xor
cwtl
adcl
data16
cwtl
popf
xor
push
je
sbb
out
xor
rcl
xor
js
xor
sub
andl
push
xor
sub
fadds
xor
pop
imulb
sbbl
xor
dec
out
xor
add
push
and
push
pusha
mov
mov
pushl
mov
mov
pusha
jmp
pushf
lea
jo
mov
jmp
pusha
sub
clc
bt
add
jmp
pushl
popl
movl
mov
movb
lea
jmp
mov
setg
mov
pop
lea
mov
not
mov
pushf
pushl
pushl
ret
mov
mov
pushl
mov
mov
mov
jmp
call
push
pushf
call
mov
movb
mov
pushf
call
xchg
jmp
push
mov
call
pusha
mov
jmp
btr
setge
lea
mov
bswap
cmp
sub
mov
rcl
jns
and
mov
clc
add
jmp
add
pusha
pop
mov
bt
stc
stc
push
xor
cmp
add
stc
neg
sub
jae
cmp
stc
pushf
lea
stc
movb
movb
test
not
bt
stc
pushf
xor
jmp
aaa
rcr
neg
pushf
mov
cmp
pushl
push
cmp
add
pushl
pushf
popl
pusha
pushl
popl
pushf
lea
jmp
pushf
popl
push
pushf
pushl
popl
mov
pusha
movb
lea
jmp
lea
xchg
lea
push
xchg
call
mov
jmp
test
stc
xor
call
mov
mov
call
stc
cmp
add
jmp
jmp
add
stc
cmc
add
cmc
test
bt
neg
stc
cmp
add
cmp
add
pushf
pushl
mov
cmp
sub
call
pushl
popl
mov
movb
lea
jmp
clc
cmc
shld
call
clc
lea
cmc
pushf
xor
pusha
pushl
sub
jmp
dec
mov
push
mov
bswap
jmp
mov
mov
pushf
mov
push
pushf
call
call
call
movzbl
not
not
mov
pushf
pushf
jmp
movsbw
not
push
not
mov
pushf
lea
cpuid
clc
call
mov
mov
mov
lea
jmp
call
mov
mov
call
pusha
mov
pushl
lea
jmp
movl
lea
pushl
jmp
xchg
clc
test
pushf
pushl
mov
lea
jns
clc
pusha
sub
pushf
pushf
lea
jne
stc
xor
push
movw
xchg
call
and
das
shl
mov
neg
rol
mov
clc
sub
call
mov
push
mov
movw
pushf
lea
jmp
push
movw
mov
pushf
lea
jmp
push
mov
movb
pushf
push
push
lea
jmp
pusha
mov
push
mov
pushl
pushf
lea
jmp
bt
jmp
dec
mov
push
pusha
movb
pushf
inc
mov
pushf
call
movl
pushl
pushl
popl
movb
lea
jmp
shr
cmc
bsf
cmp
movzbl
adc
movzbw
not
add
dec
movsbw
not
sbb
neg
inc
not
setge
inc
jmp
mov
mov
push
mov
jmp
shr
mov
test
clc
cmp
sub
push
mov
movb
lea
jmp
lea
push
pushf
jmp
cmp
add
stc
pushf
clc
neg
pusha
lea
pushf
movl
push
pushf
dec
push
cmc
ror
stc
add
movl
mov
pushf
push
sub
call
mov
mov
lea
jmp
push
pushl
pushf
popl
pushf
pushl
pushl
popl
push
pushf
pusha
pushf
lea
jmp
jmp
jmp
push
cld
cld
mov
movb
lea
jle
pushf
cld
cld
pusha
mov
rep
stc
lea
mov
cmp
sar
neg
bsr
mov
push
stc
pushl
popf
push
pushl
lea
jmp
pushf
popl
jmp
pushf
popl
mov
mov
pushl
popl
mov
lea
jmp
mov
mov
lea
jmp
sar
sub
mov
bsf
neg
mov
push
stc
bt
add
movw
push
pusha
lea
jb
mov
push
pushf
pusha
lea
jmp
mov
not
adc
test
mov
pushf
or
mov
cmp
push
pushl
sub
jmp
xor
mov
call
call
pusha
jmp
xchg
pushf
mov
movb
pushf
movl
call
push
mov
mov
pushf
popl
lea
jns
pusha
mov
mov
pushl
popl
push
lea
jmp
cld
cmp
std
popf
pusha
pushf
pushl
pushf
lea
jmp
call
movb
mov
pusha
pushl
push
call
push
bswap
dec
ror
btr
neg
adc
inc
add
movsbw
dec
movsbw
sub
and
pushf
movzbw
pop
mov
bt
cmp
add
pushf
mov
movw
mov
pushf
lea
jmp
aas
pusha
bsr
mov
btc
seto
mov
push
mov
not
call
pushf
popl
movw
mov
pushl
popl
pushf
lea
jmp
pusha
lea
jne
test
lea
push
xorb
lea
movsbw
pop
pusha
lea
jmp
rol
sub
daa
mov
test
clc
add
pushf
movw
pusha
jmp
call
movw
mov
movb
call
add
shrd
xor
pop
seta
movzbl
pusha
cmp
pushf
add
clc
push
clc
mov
pushf
cmp
cmp
or
push
jmp
cmp
shl
call
mov
movb
pushf
call
pushl
mov
pushf
pusha
lea
jmp
clc
imul
pushf
mov
call
stc
call
test
movzbl
call
lea
je
jmp
shl
neg
shr
mov
shl
mov
test
sub
stc
shl
jmp
jmp
pushf
popl
pushf
movb
call
call
mov
pushf
pusha
call
pushf
shrd
jmp
idivl
push
call
jmp
push
pushl
popl
mov
pushf
movw
push
lea
jmp
mov
push
mov
pusha
pusha
mov
lea
jp
pushf
pushf
pushf
mov
lea
ja
push
push
push
pushl
lea
jmp
call
push
mov
jmp
test
push
add
call
movsbw
jb
pusha
movzbw
mov
mov
pushf
call
or
rcl
shr
movzbl
test
pusha
bt
xor
mov
add
jg
add
jmp
mov
movw
mov
movb
movb
pushl
ret
call
movzbw
mov
pusha
push
pushl
jmp
mov
lea
pushf
lea
jmp
call
mov
push
movw
jmp
mov
call
btr
or
sbb
mov
cmc
mov
cmc
add
jmp
xadd
or
clc
btc
mov
jmp
call
bts
mov
shl
jmp
and
xchg
mov
sets
cmc
shl
mov
pusha
mov
bt
sub
push
clc
test
mov
shr
pusha
mov
jmp
call
jmp
movb
mov
pushf
call
xchg
movb
pushf
pushl
mov
movl
pushl
call
lea
movsbw
mov
push
pusha
pushf
jmp
add
clc
pushf
cmp
sub
push
pushl
mov
mov
lea
jmp
pushf
popl
pushf
pushl
popl
pushl
lea
jmp
call
pushf
fildl
push
pushf
pusha
push
lea
jmp
test
neg
bt
sub
je
clc
bt
sub
call
call
pushf
jmp
cmc
and
call
pushf
popl
jmp
call
jmp
push
inc
clc
rol
pusha
add
push
mov
movw
movb
pushf
pushl
ret
sub
cmc
xor
call
mov
mov
pushf
lea
jmp
movb
jmp
sub
jmp
push
mov
pushl
pusha
movb
lea
jmp
xor
call
mov
pushf
jmp
movzbl
lea
pusha
call
push
shl
movzbl
or
sub
setnp
shrd
add
xor
bt
sbb
pushf
add
bsf
neg
not
movzbw
add
bsf
shl
sub
add
shl
movzbw
clc
dec
mov
cmp
pusha
cmp
add
bt
jmp
push
jmp
push
jmp
add
call
pushl
mov
movw
push
jmp
pushf
pushf
mov
mov
lea
jmp
push
call
pushf
jmp
call
mov
pushf
movb
pushl
ret
movw
push
mov
pushf
push
mov
mov
lea
jmp
call
mov
push
pushf
pushl
ret
rcr
clc
ror
shr
mov
xor
dec
jmp
movb
pushf
lea
pushf
mov
movb
lea
jmp
push
movb
mov
push
lea
jmp
cbtw
cmc
cwtl
call
call
pusha
jmp
xor
cmc
stc
clc
add
pusha
bt
sub
jmp
mov
push
lea
jmp
mov
movl
lea
jmp
call
pushf
pushl
pusha
jmp
jmp
adc
inc
or
shl
mov
pusha
call
jmp
movb
mov
call
xor
push
inc
call
test
sub
push
pushf
pushf
pushl
mov
mov
pushf
push
movl
lea
jmp
cmp
test
sub
cmp
push
clc
sub
mov
push
mov
mov
lea
jmp
mov
pushf
push
pushf
lea
jmp
mov
mov
lea
jbe
pusha
pushf
mov
pushf
mov
pushf
pushf
movb
mov
pusha
mov
movl
lea
jmp
rcl
xor
neg
shl
mov
cmc
clc
add
test
test
shld
push
mov
pusha
push
pushf
pushf
popl
call
mov
pusha
lea
jmp
rep
pop
mov
shrd
or
stc
stc
mov
add
jb
cmc
std
pusha
pushl
popf
push
lea
jmp
pushl
jmp
pushl
popf
movb
mov
mov
mov
lea
jmp
aad
neg
or
mov
dec
cmc
movsbw
mov
test
sub
jmp
movw
mov
pusha
pushf
pushl
pushl
lea
jmp
pushf
pusha
pushf
pushf
mov
mov
push
jmp
movsbl
setae
bswap
mov
push
call
shl
mov
bt
bt
xor
push
cmp
cmc
add
bt
pushf
pushf
rol
bt
clc
sub
pushf
cmc
call
call
adc
movzbl
call
mov
pushl
push
pushf
mov
mov
push
pushf
push
call
bswap
add
mov
lea
clc
cmp
pusha
lea
jb
push
lea
ja
shrd
neg
aas
mov
aad
lea
aad
sar
sbb
sub
sar
test
xchg
rcl
lea
shl
bts
bt
lea
and
xor
sub
bswap
pushf
movzbw
mov
mov
pushf
pop
pushf
pusha
not
cld
lea
xchg
xchg
mov
std
mov
movsbw
jmp
add
jmp
mov
push
movb
call
jmp
shr
movzbw
mov
add
add
mov
not
jmp
call
call
rep
bt
add
shld
add
mov
btc
clc
bt
mov
pushf
jmp
pusha
mov
pushf
push
mov
pushf
jmp
stc
clc
cmp
shr
pushf
push
movb
movw
mov
pusha
push
pushf
popl
pushf
pushl
popl
push
push
movb
lea
jmp
mov
mov
pushf
mov
pusha
pushl
movb
movb
mov
push
jmp
push
not
mov
cld
pushf
push
lea
pusha
push
jmp
push
pusha
pusha
call
cmc
and
call
xadd
mov
rol
adc
dec
add
call
mov
jmp
pushf
pushf
popl
jmp
jmp
lea
jmp
pushl
popl
mov
lea
jmp
setbe
push
dec
ror
sar
neg
sbb
or
bsr
stc
add
cmp
bt
test
not
and
inc
btr
mov
add
jo
sub
pushf
mov
pusha
push
push
lea
jmp
call
shrd
movzww
pusha
push
add
pusha
cmp
xor
cmp
clc
neg
bt
xor
call
bt
pushf
clc
movw
cwtl
test
sub
jmp
jmp
pushf
sub
test
jmp
push
mov
push
push
lea
jmp
xchg
mov
push
movsbw
movzbw
mov
movzbw
setns
pushl
xchg
not
push
pusha
dec
mov
jmp
pushf
pushf
push
pushl
popl
push
lea
jmp
mov
pushl
mov
lea
jmp
bt
sub
jmp
mov
mov
pusha
mov
pushf
pushf
pushf
movb
lea
jmp
mov
mov
pushf
pushl
mov
mov
lea
jmp
push
call
pusha
clc
add
std
call
xor
cmp
movb
add
ror
mov
rol
shl
bt
shl
and
sub
lea
call
mov
mov
push
pushl
ret
lea
pusha
pushf
mov
call
pushf
pushf
pushf
popl
push
jmp
cltd
aaa
bsf
mov
shl
mov
mov
stc
push
not
call
mov
pushf
lea
jmp
mov
mov
pusha
jmp
add
pushf
pushf
movb
pushl
mov
pushf
pushl
push
pushf
lea
jmp
neg
mov
add
stc
mov
pushf
jmp
movb
mov
mov
lea
jmp
push
lea
ja
btc
dec
lahf
mov
rcl
bt
stc
cmc
lea
aad
sub
cmp
daa
clc
lea
shr
mov
shld
and
and
sub
call
mov
movb
mov
pushf
lea
jmp
sub
call
mov
pushf
lea
jmp
mov
sub
stc
sub
jmp
bt
rol
clc
pushf
call
mov
pushf
lea
jmp
mov
pusha
lea
jmp
cwtl
movzbw
lahf
mov
jmp
clc
sub
jmp
bswap
setp
mov
or
bts
btr
bswap
mov
call
cmp
call
clc
clc
stc
cmp
lea
pusha
push
not
test
stc
xor
clc
sub
push
pushf
mov
mov
mov
push
pushf
movw
push
lea
jmp
mov
push
push
mov
movb
lea
jmp
mov
movb
pushl
lea
jmp
lea
jne
pushf
clc
sub
pusha
mov
pushl
call
add
pusha
movb
push
mov
lea
jmp
jmp
pusha
jmp
adc
push
bswap
clc
rdtsc
pushf
sub
mov
movw
call
pushl
movb
mov
pushf
call
jmp
not
mov
test
mov
cmp
mov
stc
mov
clc
pushf
pusha
bt
add
pusha
cmc
jmp
jmp
pushl
add
add
jp
bt
cwtl
jp
stc
clc
sub
pushf
mov
push
mov
pushf
lea
jmp
lea
jne
bsf
adc
bts
rol
mov
cmp
and
push
mov
call
mov
push
push
movb
mov
lea
jmp
mov
call
stc
add
call
pushf
call
pusha
pushf
popl
push
call
sbb
neg
not
sbb
movzbw
bt
add
not
cmp
shl
or
xor
dec
pusha
movsbw
pushf
movzbl
jmp
pusha
movw
mov
pusha
pushl
pushf
mov
pushf
movb
mov
push
movw
mov
movl
pushf
jmp
jmp
bsf
call
call
mov
pushf
popl
pushf
mov
call
mov
movl
push
movw
pusha
lea
jmp
movw
shr
movb
pushf
mov
jmp
pusha
mov
call
mov
pushf
inc
pushl
mov
clc
clc
rol
pushf
add
call
cbtw
not
movzww
pusha
movb
add
bt
call
push
mov
pushl
pushf
mov
pushf
lea
jmp
movb
mov
mov
lea
jmp
movb
cbtw
cmp
stc
cwtl
jmp
movb
call
pushl
popf
pushl
movl
pushf
lea
jmp
add
pushf
movb
call
pusha
pushf
mov
movw
mov
pushl
call
pushf
jmp
pushf
pushf
pushf
mov
push
mov
pusha
lea
jmp
push
call
movb
movw
mov
jmp
mov
pushf
pushf
inc
stc
bt
rol
jmp
lea
call
movb
call
call
pushl
popl
mov
push
movw
lea
jmp
pushf
pushl
popl
pushf
lea
jmp
not
jmp
pusha
call
call
mov
call
pusha
dec
bt
rcr
movb
clc
ror
rcr
neg
sbb
bt
add
shl
inc
sbb
mov
bt
pusha
add
pushf
jmp
movsbw
mov
pusha
pushf
lea
call
push
stc
rol
push
sub
pusha
stc
sub
jl
xor
jmp
mov
pushf
mov
push
lea
jmp
pushf
cld
call
call
jmp
jmp
movl
mov
push
pushl
pushf
mov
lea
jmp
inc
bt
push
mov
clc
pushf
bt
call
mov
pusha
call
call
sub
pushf
call
xor
stc
add
pusha
mov
lea
ja
push
pushf
mov
push
lea
jmp
pushf
jmp
mov
pushl
pushf
pushf
call
add
rcr
lea
mov
pusha
add
push
lea
jmp
mov
pushf
sub
pushl
jmp
movl
pusha
mov
push
pushl
ret
cmc
test
jmp
call
bswap
mov
seto
pusha
inc
xadd
sar
bt
not
shld
xchg
inc
xor
pushf
lea
inc
cmc
sub
bswap
clc
xor
bswap
mov
ror
shl
movzbl
pushf
mov
pop
bsf
bsr
and
add
bts
shld
mov
ror
mov
ror
adc
xor
inc
inc
sub
jb
stc
setne
not
sub
add
btc
call
xchg
mov
jmp
pusha
bt
call
push
mov
mov
mov
call
sbb
test
mov
jmp
pushf
push
mov
pushl
popl
pusha
push
pushl
movb
lea
jmp
clc
bt
pushf
stc
sub
lea
je
pushf
pushf
lea
jne
jmp
pushl
inc
xadd
xor
not
pushf
xor
shld
inc
movsbw
lea
rcr
sub
lea
cmp
btc
mov
push
rol
movsbw
mov
shrd
bts
or
xadd
add
add
cmc
neg
and
pushf
mov
add
push
not
xor
movzbw
inc
and
not
inc
adc
add
dec
cmp
xor
movsbw
inc
movzbl
bswap
jmp
stc
sub
call
pusha
call
cltd
cltd
bswap
mov
not
lahf
mov
pusha
call
mov
jmp
pushf
mov
call
das
movzbw
pushf
stc
mov
bswap
movzbw
clc
pusha
mov
pusha
add
push
pushf
call
