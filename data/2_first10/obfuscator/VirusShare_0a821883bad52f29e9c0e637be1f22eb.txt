int3
int3
push
inc
add
add
or
add
sbb
add
cmp
add
add
add
add
add
adcb
add
cmp
add
add
add
add
add
add
add
mov
add
adc
add
cmp
add
add
add
add
add
add
add
shl
add
add
add
add
add
dec
add
dec
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
add
int3
fnsave
outsb
gs
imul
xor
insb
test
jge
sub
dec
push
loope
aaa
cs
pop
jle
lret
jmp
jae
test
push
out
jno
adc
popa
cwtl
and
xlat
lock
cmp
jno,pt
es
push
push
mov
movsl
mov
dec
pop
and
sti
push
adc
mov
push
notl
popa
mov
and
ret
shl
subl
or
fstpt
mov
xor
popa
push
add
int3
inc
hlt
fmul
loop
pop
fdivrp
mov
inc
iret
lcall
out
pop
mov
clc
fsubrs
mov
inc
sbb
arpl
xchg
lods
rorl
sub
pushf
mov
adc
call
enter
loop
lret
jecxz
add
adcb
add
pop
lods
xor
and
jb
je
cwtl
xchg
in
xor
loop
into
repz
mov
xchg
mov
push
xor
cld
icebp
out
cmpsb
fisubrl
pop
jne
scas
shl
hlt
dec
pop
leave
iret
or
mov
loope
cmp
cmp
repnz
jno
sub
in
data16
push
mov
ja
pop
out
jg
cmp
loopne
lods
lods
int
dec
jne
gs
fwait
int3
jns
outsb
js
call
ss
dec
add
xor
mov
and
addr16
push
push
fistl
mov
and
jae
sbb
cltd
sahf
cli
hlt
lahf
scas
cmp
add
into
mov
xor
lahf
jp
sbb
cmpsb
ret
or
imul
pushf
mov
into
cmpsb
arpl
das
mov
es
int3
sbb
mov
sub
and
cmp
je
hlt
dec
xchg
loope
lahf
test
jne
cwtl
cli
repnz
lcall
mov
cmp
shlb
dec
imul
std
jno
ss
sarl
xor
push
dec
stos
test
pop
mov
cmp
adcb
jae
mov
sar
push
add
ds
bound
aad
mov
imul
cs
cwtl
movd
fimull
or
fisubrs
mov
stos
cmp
pop
mov
test
in
fistpl
mov
and
popl
pusha
cwtl
mov
dec
or
fdivs
cmp
roll
pop
je
out
push
shrl
mov
int3
cmp
sbb
lock
sbb
je
mov
rcrb
xchg
inc
and
ds
jb
insl
jmp
inc
push
ds
and
dec
testb
cmp
test
mov
test
push
outsl
xor
xchg
sbb
or
fldcw
mov
adc
or
mov
pop
stos
fisubrl
dec
push
sahf
jbe
xor
pusha
jl
mov
dec
cmp
jle
sub
jecxz
pop
jo
inc
imul
je
sub
lret
sbb
cmp
ror
orb
cmp
js
pusha
stc
gs
out
scas
sub
push
cli
xor
gs
adc
es
push
xchg
enter
js
dec
pushf
cmp
mov
pop
rorl
out
stos
fwait
adc
lods
xor
negl
or
sbb
adc
fcoml
stos
cld
pop
lock
push
les
test
or
imul
inc
arpl
ljmp
pushl
outsb
loope
arpl
int
jge
cmp
lds
cmp
pusha
mov
sbb
xor
loope
das
aas
std
rcll
shl
int3
movsb
sub
ja
xchg
xchg
pop
dec
mov
inc
xchg
mov
adc
mov
ret
sub
push
out
mov
push
loop
enter
movsl
int
cmp
push
inc
xor
out
and
push
jne
mov
sbb
int3
addr16
iret
repz
stos
lret
and
in
out
sub
mov
ljmp
push
inc
inc
imul
dec
incb
shr
xor
repz
cld
mov
rcll
adc
lods
sbb
sub
mov
sub
or
fidivrl
fs
pop
mov
push
inc
aad
xor
pop
xchg
dec
testb
dec
bound
dec
cld
loopne
cmpsb
inc
push
mov
jl
xlat
inc
mov
loope
mulps
popa
push
mov
shrb
lcall
aam
push
dec
sbb
inc
dec
pop
in
pop
lret
outsb
and
stos
and
inc
adc
nop
push
jp
and
xor
int3
cmpsl
rcrl
xchg
jb
xor
test
mov
add
loope
jp
sbb
push
ljmp
sahf
push
push
fsubr
pop
xor
push
scas
in
ja
outsb
and
sti
pop
pop
dec
dec
push
push
enter
lods
push
dec
popf
cmp
push
mov
and
pop
sub
int3
insb
roll
jle
sbb
adcb
dec
dec
test
push
outsl
scas
pop
ss
push
xor
cmp
nop
in
fst
loopne
xlat
pop
ret
pop
icebp
push
xchg
pop
sub
dec
loop
bound
lahf
mov
mov
lret
loope
aam
mov
mov
jp
in
pushf
mov
jp
push
dec
ss
push
and
test
push
add
movsb
enter
jmp
test
loopne
push
hlt
xchg
xchg
xchg
cmp
rclb
clc
pop
jg
inc
xor
fsubl
sub
cs
sub
rol
cmp
push
dec
int
ja
push
iret
dec
add
fs
inc
ss
sub
dec
testl
loopne
cmp
ret
adc
lret
into
cmp
jecxz
stc
je
adc
int3
xchg
loope
pop
pop
xchg
push
outsl
cmpsl
xchg
xor
fs
jb
lret
or
inc
dec
sbb
xchg
jge
or
loopne
xchg
xchg
mov
out
and
cmp
mov
xor
inc
inc
addr16
mov
test
dec
sub
andb
hlt
mov
cmc
and
pop
mov
mov
xor
xorl
loope
jp
iret
mov
cmpsl
in
sub
sahf
loope
dec
rorb
fwait
ja
out
add
cmpsb
icebp
push
loop
test
lods
outsb
jb
addl
fwait
jne
stos
stc
xchg
stos
stos
mov
imul
test
cmp
dec
mov
jmp
rep
push
xchg
cmp
pop
pushf
and
jne
daa
ljmp
outsl
in
or
andb
add
sbb
jg
out
jmp
adc
pop
inc
and
jg
jge
imul
push
lock
pop
pop
inc
in
dec
pushf
push
push
cmp
cmp
js
cmp
mov
test
mov
lahf
adc
xchg
clc
into
jbe
xchg
hlt
js
outsl
xchg
pop
dec
dec
arpl
sub
daa
lret
or
push
jg
xor
inc
gs
aaa
xchg
mov
cmpsb
xor
mov
sbb
hlt
das
mov
add
movsl
and
lcall
out
bound
inc
push
mov
and
jle
iret
lahf
inc
adc
xor
test
insl
cmp
sahf
dec
movsl
fld
xor
je
cmp
lock
mov
arpl
sbb
dec
and
hlt
imul
pop
adc
out
cmpsl
gs
cmp
push
enter
lods
mov
dec
mov
shrl
popa
call
sbb
aad
pop
subl
add
cli
ja
sysret
enter
lods
lea
mov
add
cli
flds
sbb
push
mov
pop
mov
mov
fdivrl
stos
xchg
xor
or
mov
movsb
in
cmp
in
xchg
cmpsb
jmp
bound
jne
ja
xchg
insl
mov
cs
pop
sbb
sti
int3
adc
inc
jbe
pusha
jmp
xchg
mov
jbe
mov
and
arpl
dec
mov
or
cmpsl
jbe
xor
clc
push
xchg
jl
pop
idivl
push
pop
shrl
sub
mov
incl
xchg
jg
fldt
data16
repnz
mov
cli
popa
dec
and
pop
div
xchg
pop
sahf
adc
ljmp
jns
outsb
rcll
dec
xor
aaa
jle
inc
xchg
test
pop
add
inc
xor
pushf
xlat
push
and
movsb
mov
data16
add
sbb
mov
xor
and
jmp
in
xor
or
add
inc
cwtl
test
and
dec
arpl
fnstcw
repnz
lods
lods
pop
in
outsb
pop
push
out
push
inc
xor
mov
dec
insb
insl
adc
arpl
xchg
andb
scas
ficoms
sarb
dec
movsb
cmpsl
lock
jecxz
adc
mov
out
dec
jo
pop
lret
cs
push
movsl
xor
and
rorb
pop
xchg
mov
in
cmpsb
pop
mov
aaa
dec
sub
pop
mov
or
fwait
loope
jp
xchg
ss
fldt
push
pop
jns
cltd
hlt
sbb
aaa
loop
out
adc
adc
leave
shlb
cmp
jns
or
sbb
pop
adc
test
xchg
push
pushf
mov
bound
sbb
dec
lea
repnz
mov
test
push
test
fidivrs
push
jge
sbb
inc
repnz
sub
sbb
test
dec
call
shr
imul
inc
push
push
leave
dec
fs
in
push
push
andb
or
nop
mov
sub
cmpsl
das
in
mov
sbb
out
ret
sti
or
movsb
sbb
push
mov
add
or
or
mov
into
leave
inc
adcl
jae
ds
test
xchg
inc
sub
movsl
cmp
cli
lods
push
push
hlt
sub
cmp
pushf
sub
push
sub
aam
movsl
dec
mov
stc
mov
xchg
and
dec
cmp
fidivl
js
mov
stc
es
fidivs
or
and
sub
sub
movsb
and
mov
aam
stos
sub
lods
dec
inc
cmp
ja
cltd
sub
scas
mov
push
inc
dec
dec
pop
mov
arpl
in
pop
test
xor
mul
mov
xor
es
ret
push
pushf
filds
push
sub
jne
cmpsl
shrl
mov
repnz
xor
sub
call
cmp
loop
and
jb
int3
rcl
xchg
inc
daa
or
sub
inc
sarb
test
pop
add
iret
pop
mov
sahf
popa
in
insl
push
lds
jmp
jecxz
add
jecxz
inc
pop
aam
add
test
jne
mov
mov
loop
in
and
jne,pn
adc
jl
jns
aam
xor
enter
push
scas
xchg
shr
mov
inc
out
inc
aaa
fwait
jmp
jg
rcrl
mov
andb
lahf
pop
outsb
jae
bound
jae
pop
jg
cs
and
out
adc
xchg
sub
aad
into
das
mov
mov
testb
xchg
js
and
mov
pop
xchg
cwtl
sub
ss
and
scas
sbb
int3
adc
jno
mov
out
notl
xchg
in
pop
dec
xchg
fistpl
sub
mov
add
ss
pop
and
mov
test
popa
and
push
imul
cli
icebp
lds
xor
das
sbb
into
jl
out
insl
mov
pop
and
mov
test
sub
mov
pusha
cmp
pop
aam
or
sti
push
push
cmp
lea
mov
mov
push
rorb
or
or
popa
lock
xor
jne
fstpl
jg
sbb
push
sub
jne
cmc
aad
adc
mov
sti
adc
sbb
cmp
lret
rclb
xor
leave
fildl
loop
mov
test
mov
js
lret
inc
rcl
jb
and
adc
cmc
xor
xchg
mov
pop
mov
fs
cmpsl
std
in
fstpt
ret
notl
stos
xchg
shl
fisttps
lcall
out
daa
movsb
xor
stos
adc
out
repz
pop
sti
xchg
cmp
push
arpl
cmc
inc
mov
mov
test
add
outsl
add
pop
idivb
mov
pop
test
xor
cs
xchg
xor
notl
out
cmpsl
data16
dec
pop
sar
dec
mov
adc
je
add
je
dec
xlat
loope
push
jae
push
testb
xchg
sub
mov
iret
hlt
push
adc
sbb
push
gs
adc
mov
xor
xor
lods
ja
lret
cs
test
sub
jge
mov
xchg
dec
loope
jno
mov
or
iret
adc
xor
inc
cmp
mov
add
repz
imul
or
jbe
pop
xchg
push
stos
outsl
cmpsl
pop
sbb
into
xchg
das
js
dec
stos
cmp
pop
jmp
and
les
ds
fwait
or
arpl
sub
inc
fisttps
pop
add
mov
leave
jmp
sub
xchg
es
push
mov
idivl
xor
or
das
push
insb
cltd
and
lods
arpl
jns
in
es
pop
sub
rcrl
sbb
insb
push
sub
enter
add
dec
mov
das
mov
xchg
fmulp
xor
test
and
mov
into
test
push
sub
dec
test
dec
sub
or
insl
xor
cs
mov
sbb
test
ret
lods
aam
lds
rorl
cli
mov
icebp
xchg
jne
and
lods
call
inc
jnp
ja
or
dec
fdivrs
je
aam
sub
rorl
or
cmp
pop
mov
js
arpl
lcall
loop
out
xor
mov
andl
popa
push
mov
fcmovnu
xchg
pop
xor
jnp
push
pop
mov
cmp
jb
cli
fadds
adc
out
xchg
dec
and
out
pop
add
pop
xor
and
dec
mov
leave
or
popf
fistpl
xchg
pop
nop
cmpsb
es
mov
mov
mov
mov
sbb
and
and
sub
lods
jno
xchg
nop
mov
and
loop
scas
add
and
jnp
xchg
add
or
and
adc
cmc
das
lret
jo
jp
mov
rolb
push
popf
or
lea
es
push
fs
xchg
push
out
dec
pop
outsl
pop
pop
ljmp
repz
cld
jb
mov
mov
pop
xchg
data16
pusha
xor
mov
push
mov
xchg
movsl
sbb
or
in
loope
addr16
cmp
xchg
test
mov
xlat
int3
jne
dec
aam
push
insl
xchg
inc
jp
inc
xchg
jbe
shrb
sbb
rorb
pushf
test
jnp
shrb
out
dec
cltd
jle
and
mov
lret
fstpl
cmp
cmc
or
int
or
lods
push
push
adc
push
rolb
ja
cmp
xor
rcll
test
popf
cli
mov
sbb
outsb
icebp
lock
mov
pop
push
jno
pop
jmp
mov
push
mov
sarb
lods
dec
xchg
dec
fidivrs
jge
push
movsb
rcrl
sar
in
and
cmp
dec
pop
dec
inc
pop
mov
repnz
cli
cmp
cmp
adc
daa
fcmovbe
inc
arpl
pop
pop
cld
outsb
sub
divb
enter
adc
in
scas
mov
mov
and
push
and
pop
ja
daa
xchg
decl
gs
mov
rolb
sbb
inc
sub
into
cmp
lods
iret
pop
es
clc
ficomps
aad
push
arpl
jb
fisubrs
int3
fdivrs
in
pop
scas
sub
and
lret
jno
dec
pop
test
push
lods
js
scas
and
outsb
out
push
and
mov
add
push
das
jae
mov
mov
xor
push
movsb
movsl
cmp
fldcw
ja
insl
test
mov
leave
and
dec
lods
xlat
mov
pop
adc
add
test
mulb
aas
outsb
jb
jge
inc
fnstcw
pop
push
push
mov
es
stos
in
fnsave
jne
or
cmp
ljmp
pop
dec
les
inc
pop
dec
aad
mov
hlt
jp
xchg
jp
aaa
mov
jae
rorb
xchg
inc
mov
ret
mov
pusha
sub
xchg
adc
btc
in
jno
mov
jae
ficompl
das
int3
fimuls
jecxz
add
mov
pop
push
dec
imul
stos
push
shll
xchg
dec
jns
cmc
or
xor
data16
insl
std
dec
pop
mov
out
mov
jae
mov
push
ljmp
or
andb
inc
push
inc
icebp
xchg
push
pop
outsb
lcall
mov
std
lods
sub
dec
dec
lock
lret
lret
or
clc
jmp
insb
mov
mov
int
inc
inc
fwait
pushf
loop
or
out
idiv
jb
xchg
mov
outsb
in
mov
sbb
mov
dec
or
dec
ret
les
int3
xor
jle
sub
repz
mov
mov
xlat
ror
rcrl
or
into
cmp
lea
stos
jns
cmc
mov
ficomps
scas
lods
fisubrs
pop
je
xchg
cmp
or
push
or
outsb
mov
push
xor
scas
sub
xchg
mov
enter
xchg
test
fxch
xchg
pfcmpge
out
out
sarl
rcrl
cltd
xor
cmp
out
lret
test
mov
dec
jecxz
cld
je
and
sbb
sub
jp
sbb
mov
push
and
xchg
fdiv
sbb
fistpl
movsb
add
rcrl
xchg
push
adc
dec
inc
stos
sub
dec
cli
xchg
or
push
movsl
mov
in
repz
cmp
mov
pop
add
das
jb
test
pop
xchg
cld
std
push
push
pop
fisttpll
cwtl
cwtl
mov
adc
adc
mov
adc
outsb
loop
sub
shrl
test
aaa
leave
ja
cmpsl
ljmp
push
mov
in
lea
dec
jae
mov
fs
mov
iret
xorl
lret
or
out
or
sbb
and
and
stc
sub
jp
pop
inc
enter
into
pop
mov
pop
scas
lret
bound
ret
lds
lahf
es
mov
in
roll
add
daa
sbb
mov
adcb
test
xchg
insb
lods
dec
jl
or
add
and
mov
mov
or
dec
push
stos
mov
andb
xor
lahf
add
push
cs
sbb
add
jle
and
in
pop
pop
push
fisttpll
sub
test
lret
fdivrs
sbbl
xor
adc
rcr
jecxz
inc
es
xlat
dec
push
subl
pop
fwait
arpl
sbb
sahf
lods
jmp
sub
out
sbb
test
xchg
lret
mov
js
mov
mull
add
dec
adc
inc
fdivrs
mov
movsb
repnz
clc
outsb
xchg
lea
sub
pusha
adc
rorl
push
pop
fs
test
movsl
cmp
xor
loop
mov
add
mov
xor
js
push
inc
cmpsb
rcl
push
jb
jo
pop
out
push
ljmp
into
sub
xor
mov
out
add
stc
loopne
pop
cmp
sbb
push
ret
pop
ficomps
xor
lret
ret
jae
scas
fdivrs
mov
sbb
mov
xchg
cmp
lret
mov
test
mov
aas
pop
mov
dec
mov
cmpsb
add
push
data16
push
fistl
mov
imul
roll
in
adc
rcll
or
or
gs
out
pop
pop
aam
pop
add
xor
icebp
divb
pop
pop
cmp
inc
push
je
xchg
ja
fisubrl
xor
sub
push
mov
lods
pop
xchg
fisubrs
scas
or
adc
mov
rol
or
pop
xlat
mov
dec
lret
add
xchg
adc
inc
jo
mov
test
jmp
and
cli
xchg
jle
lea
inc
outsb
push
jg
test
mov
aam
in
mov
mov
adc
mov
jb
out
push
loopne
xchg
or
cmpsl
sbb
mov
pusha
repnz
inc
push
dec
cmpsb
pop
ss
sbb
xorl
xchg
add
incb
or
xor
jne
mov
sbb
add
jge
in
mov
loopne
jbe
lods
inc
fdivrs
movl
mov
mov
in
mov
mov
filds
cmpsl
scas
jo
xor
add
mov
scas
dec
movntq
mov
sub
xlat
sahf
push
dec
cmp
cmp
sub
bound
daa
mov
mov
sub
stos
mov
mov
shl
inc
and
mov
popa
popf
lock
test
push
out
push
pop
mov
jge
mov
movsb
sti
or
or
xor
gs
xchg
mov
jnp
pop
int
jnp
testb
mov
jmp
push
xchg
inc
call
in
jnp
mov
mov
lret
pop
inc
xchg
and
mov
decl
inc
mov
add
test
enter
and
add
in
mov
sub
dec
loope
daa
and
orl
aaa
mov
xchg
ja
pop
or
cmpsb
mov
sar
cmp
ror
mov
push
sahf
rol
aad
xor
pop
push
fiadds
shrb
xchg
mov
jae
mov
xchg
mov
aaa
loop
rolb
cmp
jns
cmp
xor
or
push
cmpsb
cmp
sbbb
sbb
add
jne
inc
data16
int
xchg
mov
and
hlt
test
xor
mov
and
jno
imul
out
sbb
rclb
test
add
pop
cmp
ss
xchg
ljmp
sub
mov
or
leave
dec
mov
fbld
out
push
jae
jb
add
pop
stos
sbb
je
inc
adc
jne
sub
mov
adc
dec
rorl
gs
dec
scas
jne
rcrl
shlb
dec
jp
mov
mov
sub
loop
xchg
cmp
insl
lea
clc
xchg
sahf
inc
fimuls
imul
rolb
testl
addr16
mov
mov
popa
rcll
mov
xchg
xchg
inc
movsb
sub
clc
loopne
loopne
and
test
pop
popa
data16
int3
out
push
inc
pop
adc
jle
mov
adc
sbb
repz
pop
xlat
ret
jns
jo
xchg
and
jb
into
lock
or
inc
aad
cmp
jl
out
std
loopne
xor
int3
int
fsubl
push
jno
dec
inc
mov
mov
repnz
in
adc
adc
shlb
popf
lods
bound
fwait
and
mov
leave
jns
sub
pop
inc
adc
lods
into
sbb
lock
xor
scas
mov
mov
sub
aam
pushf
stos
adc
jle
mov
movsl
and
dec
fadd
push
or
lds
mov
fs
jle
fisubs
push
jmp
fsubrs
fistpll
add
dec
xor
pushf
sbb
xor
leave
hlt
stos
std
sbb
es
les
cmc
out
je
mov
mov
cmpl
push
cli
jmp
sub
jae
inc
xorb
mov
sahf
pop
leave
sahf
lock
inc
fistpl
xchg
mov
pop
icebp
fwait
shrb
scas
cld
push
push
fwait
outsl
add
mov
movsl
cltd
mov
cmp
inc
lods
cwtl
outsl
mov
into
mov
imul
loop
fcmovnbe
jae
and
adc
and
repz
cmpsl
inc
xchg
adc
inc
jle
push
push
cmp
push
in
fwait
imul
lcall
stos
sbb
vpcmpgtd
or
leave
sub
mov
fiaddl
stos
push
lcall
shrl
outsb
adc
fwait
inc
xchg
test
push
push
cmpsb
decl
jle
dec
and
pop
cli
pop
daa
pop
aad
imul
xchg
jnp
orb
loop
clc
movsl
lds
sbb
xor
iret
shll
jb
xor
adc
out
mov
push
aaa
out
lock
or
daa
inc
adc
sbb
arpl
clc
cltd
out
int3
and
cmp
sti
in
ror
lock
testb
ret
outsb
or
dec
mov
pop
inc
pop
cmp
lret
pop
and
in
repnz
imul
mov
push
or
popf
xor
pop
fwait
adc
or
inc
scas
lret
shrb
insb
popf
lods
loopne
mov
add
outsb
loopne
jmp
adc
adc
faddp
mov
lahf
push
add
dec
das
sub
xor
cmp
insl
mov
dec
xor
inc
mov
and
test
out
bnd
jb
insb
xchg
dec
push
lret
in
or
pop
enter
or
jno
xchg
insb
ficompl
fcomps
test
pop
test
or
dec
and
adcl
xchg
daa
jg
xchg
fiaddl
out
add
ja
popa
es
push
and
nop
or
scas
outsb
pushf
cwtl
es
and
mov
adc
loope
hlt
cmp
in
push
sub
or
mov
pop
adc
andl
imul
or
xchg
rol
int3
call
fisttpl
sbb
and
cwtl
sub
jl
cli
pop
push
lret
ds
sub
scas
enter
jnp
stos
add
adc
popa
xchg
subl
lret
push
pop
cmp
xchg
ja
outsb
in
stos
and
cwtl
cmp
scas
das
adc
lock
mov
icebp
cmpsl
movsl
cs
jb
push
rorb
clc
lds
mov
imul
dec
insl
adcl
call
lret
dec
inc
out
test
or
add
fwait
xchg
push
hlt
js
push
cli
cs
stos
loope
xorl
mov
clc
sbb
push
pop
jb
cmc
and
leave
scas
scas
push
insb
sub
sub
mov
xchg
cwtl
inc
pop
fs
leave
stos
cltd
bound
icebp
pop
aaa
inc
and
mov
mov
push
cltd
andb
push
cmp
testl
insb
faddp
inc
les
sahf
jg
mov
dec
leave
push
pop
dec
xor
sti
adc
jle
in
andb
mov
dec
pusha
ja
cmc
imul
jle
mov
push
dec
inc
insb
ss
cmp
test
or
xchg
mov
pop
aaa
mov
std
test
mov
xor
ret
mov
add
fdivrp
cmp
lret
loopne
add
sub
int3
mov
iret
add
test
and
fimuls
out
sub
orb
and
jno
pusha
mov
lock
inc
mov
ret
or
and
js
hlt
or
sbb
dec
pop
cmp
pop
test
push
fimuls
cltd
jne
sbb
lods
mov
loop
mov
in
jecxz
nop
pop
mov
icebp
jae
insb
loope
leave
ljmp
andl
or
loop
inc
hlt
sub
cmc
repz
mov
inc
out
stos
in
in
adc
out
es
adc
loope
fisttpl
std
cwtl
pop
in
insl
dec
dec
sbb
ficomps
mov
pop
loop
aaa
and
fdivrl
xchg
xor
mov
popa
and
or
add
adc
dec
pop
xor
and
orl
sub
movsb
inc
sbb
mov
inc
in
push
sbb
jnp
lds
fsubrl
test
fs
mov
sub
adc
lahf
mov
cld
cmp
jb
add
fisubl
xchg
scas
mov
mov
fdivrl
push
test
addr16
lea
jo
std
ss
adc
sbb
insb
negb
xorl
push
push
add
iret
adc
jbe
repz
roll
add
movsl
popf
sub
add
push
dec
cmp
shll
cli
scas
cmpsl
gs
insl
cmp
mov
roll
mov
pop
cld
xlat
xor
inc
jno
xchg
icebp
xchg
test
jno
out
imul
adc
cmp
or
out
repnz
sbb
fnstcw
and
inc
add
mov
fs
pop
push
cmpsl
inc
mov
testb
adcb
jo
pop
mov
xor
or
push
mov
and
lds
cmp
out
sbb
mov
xor
rclb
cmpsb
punpcklbw
jmp
push
xchg
xchg
enter
xchg
imul
repnz
imulb
dec
js
inc
fstpl
and
xlat
dec
test
adc
fisubrs
rorb
dec
xchg
sub
pop
push
lods
inc
in
xchg
lret
loopne
sahf
cwtl
stc
sub
leave
jg
cltd
test
dec
xlat
in
cmp
dec
lods
mov
outsl
mov
outsb
push
cmpsl
sub
add
mov
lods
dec
push
out
xchg
sub
xor
or
imul
into
mov
adc
lcall
adc
sbb
lcall
sub
mov
push
orb
and
imul
pop
add
hlt
cmp
cld
sbb
call
jmp
mov
mov
xchg
pop
cmp
xchg
xorb
xchg
lahf
xchg
sub
scas
pop
sub
mov
push
xchg
enter
xor
dec
fistpl
sarb
loope
in
icebp
xor
xchg
cwtl
ret
addr16
jnp
rorl
imul
cltd
clc
jno
push
xlat
dec
jne
shll
mov
fadds
dec
dec
shr
pushf
xor
mov
add
mov
int3
cmp
cmp
adc
xchg
sbb
sub
sarl
dec
subb
pop
in
scas
lret
adc
pop
mov
dec
adc
jg
lods
movsb
addr16
ret
insl
push
inc
int
jp
mov
add
jne
outsb
addl
lret
and
jp
xchg
add
xor
mov
stos
insl
imul
xor
push
out
iret
fisubrl
mov
pop
pusha
sub
jbe
mov
dec
sarb
mov
cmpsl
mov
sti
adc
adc
add
or
or
push
jne
daa
push
xchg
xor
xchg
sub
inc
ret
and
adc
pop
scas
jno
scas
cmp
ret
adcl
test
sub
mov
fiadds
insl
dec
push
adc
pushf
or
mov
mov
test
ss
stc
add
and
inc
inc
gs
dec
jmp
loope
ss
xchg
ret
mov
inc
adc
das
out
pop
ret
in
inc
xchg
xchg
xor
inc
les
xchg
mov
xchg
dec
movsb
and
or
pop
xchg
adc
sub
push
movsl
in
stos
pop
add
test
mov
pop
inc
pop
fnstsw
testl
outsb
pushf
xor
cmp
cwtl
fistl
push
out
in
mov
rcrl
aam
cmpsl
orb
sbb
add
dec
aaa
popf
xchg
push
divl
lds
fwait
int
inc
cltd
mov
xchg
ds
xchg
adc
inc
cmpl
jl
push
dec
adc
push
jg
arpl
xchg
int
movsb
aad
cwtl
or
mull
push
lds
push
or
cmp
icebp
mov
mov
adc
je
push
into
add
popf
mov
cmpsb
idiv
les
dec
adc
push
mov
daa
int
dec
lret
inc
aas
jle
shl
mov
fstpt
inc
mov
insl
xchg
rcll
jle
out
mov
mov
lea
jbe
inc
sbb
repnz
sahf
ss
imul
mov
dec
mov
xlat
hlt
xchg
mov
pop
jbe
push
mov
mov
pop
stc
xchg
cmpsb
cmpsb
push
push
sbb
inc
sbb
add
mov
repz
inc
ret
mov
fwait
mov
sub
xlat
in
sbb
mull
cld
push
cltd
test
stc
mov
shl
aam
sub
enter
sarb
notl
sbb
icebp
repnz
mov
cltd
int3
push
lods
and
dec
sti
push
lcall
jb
in
test
cld
mull
out
ret
xchg
pop
hlt
push
add
std
mov
sbb
cmp
xchg
sbb
sti
dec
movsb
stos
cli
ja
jg
das
dec
scas
pop
inc
pop
pop
cld
cld
push
inc
mov
sbb
xchg
fcmovnu
outsl
push
loop
mov
pop
pushf
push
xchg
or
inc
ds
mov
dec
xor
jmp
sub
int
add
mov
mov
insl
faddl
cwtl
lret
pusha
lods
xchg
mov
or
push
xchg
rcll
in
stc
xor
rolb
aam
mov
lahf
jmp
out
movsl
jo
movb
loopne
out
xchg
xchg
pusha
adc
xor
mov
scas
cmc
inc
hlt
mov
jne
push
jmp
or
iret
sbb
mov
in
mov
pushf
lock
clc
insb
xor
ljmp
fwait
xchg
icebp
xchg
sub
fwait
stos
in
jnp
int3
stos
subl
push
mov
fsubl
pop
pop
push
test
loop
icebp
push
pop
xor
les
repz
movsb
repz
scas
xlat
inc
aas
aaa
xor
subb
and
xchg
orb
clc
movsl
sub
jb
mov
jecxz
sbb
hlt
push
repz
jle
gs
jg
pop
aam
add
adc
int3
sub
xor
inc
aam
pop
dec
pop
lret
dec
dec
adc
in
fimuls
dec
andl
adc
shlb
cmpsl
sarl
int3
shl
mov
jnp
mov
mov
xchg
mov
std
and
and
lock
popa
mov
jbe
sbb
sahf
mov
sarl
leave
push
cli
sahf
arpl
mov
push
das
loope
pop
sahf
inc
or
and
sbb
enter
stc
or
pusha
call
adc
xlat
sahf
dec
scas
sbb
pop
outsl
notl
fst
test
jge
mov
xchg
inc
sti
stos
int
mov
jne
or
hlt
xor
xchg
pop
out
xchg
jmp
mov
out
add
pop
add
mov
push
loop
push
cmp
push
movsl
in
lods
fwait
dec
jg
sub
add
divb
aad
mov
int3
ljmp
cmp
xlat
jno
arpl
jns
and
mov
dec
mov
xlat
push
jecxz
fwait
aaa
test
mov
xchg
xor
pop
xorb
xchg
das
jmp
mov
push
imul
stos
sbb
and
xchg
sarl
sub
jecxz
push
enter
adc
jmp
insl
push
and
xchg
in
popa
shll
push
mov
jg
mov
enter
jl
push
dec
jle
pusha
adc
loop
fistpl
ja
in
sbb
dec
rol
in
sbb
mov
aam
push
sub
cmc
rcl
jp
int
call
mov
mov
inc
icebp
push
stc
lods
outsb
aad
sti
fidivl
pop
push
popf
inc
lea
mov
and
xor
ss
mov
outsb
stos
push
inc
dec
jge
mov
ficomps
sarl
test
sub
mov
lock
sbb
fwait
sbb
sbb
sbb
nop
loop
pop
test
jge
cmpsb
xor
sub
cltd
notb
enter
dec
notb
add
lahf
mov
fistpll
mov
sahf
es
inc
xchg
insl
or
dec
clc
or
roll
xchg
int
int3
jle
fwait
mov
in
jae
push
outsb
lahf
mov
std
daa
scas
out
pushf
jae
rorl
push
int3
fcmovnu
sbb
in
cld
push
stc
inc
xor
mov
cmp
jl
push
push
cmp
cmp
int3
xchg
movsl
push
ss
push
cs
mov
dec
lock
inc
jge
pop
icebp
leave
ret
inc
pop
jnp
mov
sahf
inc
inc
mov
bound
repz
mov
adc
shl
jb
fs
inc
in
filds
mov
stos
imul
bound
jl
popa
in
ss
mov
jge
push
icebp
shr
lea
scas
jle
inc
scas
roll
in
pop
push
roll
pop
xor
outsb
jl
mov
fiaddl
sbbb
js
jo
cmp
stos
std
movsb
pushf
cmp
mov
stos
movsl
cmp
add
out
jns
das
mov
sbb
cmp
adc
insb
push
jg
and
xchg
pop
xor
roll
lahf
adc
jl
dec
push
fwait
sub
pop
xchg
popf
cwtl
cld
mov
pop
bswap
fcmovu
aaa
imul
popa
adc
mov
mov
loopne
out
add
sti
movsl
out
pusha
cmpsl
mov
aam
jno
mov
es
or
data16
push
add
adc
jecxz
inc
fiadds
push
pop
rol
mov
mov
lret
cmp
pusha
dec
hlt
cmpsb
dec
sub
and
roll
loopne
xchg
push
insb
mov
pushf
daa
hlt
pop
adc
xor
divl
cwtl
mov
clc
icebp
stos
cmp
arpl
nop
icebp
sbb
jne
mov
lcall
cmpsb
sub
mov
repnz
mov
lahf
lock
adc
out
sar
xchg
mov
pop
pop
outsl
add
imul
add
pop
xor
jecxz
mov
mov
test
push
daa
pop
inc
and
sub
pop
fiadds
push
in
sub
lret
hlt
inc
ret
push
lock
hlt
push
int
movsb
inc
ret
out
adc
push
or
add
aad
fcmovbe
pop
mov
or
fscale
out
mov
jnp
scas
jl
dec
scas
cmc
xlat
sbb
sub
mov
inc
repnz
cmp
sub
std
pop
fstps
pop
cmpsl
xor
or
push
and
dec
dec
push
jp
lahf
lret
pop
adcl
cmp
cmp
lea
test
fistps
cmpb
nop
mov
fucomip
in
pop
stos
rorb
and
dec
push
xchg
imul
fwait
jge
jbe
rolb
xlat
xor
xchg
ret
xor
jle
shll
mov
pushf
lods
pmuludq
jge
repz
clc
sti
cmc
and
fildll
test
sub
push
test
push
scas
cmpl
ljmp
mov
mov
fildl
hlt
stc
in
fistps
push
mov
mov
loope
mov
cmp
cwtl
pop
xor
cwtl
repz
push
mov
push
loope
pop
cmp
stos
xchg
cmp
or
mov
pushf
lret
push
mov
ds
clc
jne
dec
ror
mov
test
dec
es
icebp
cltd
scas
mov
push
pop
loope
inc
add
push
mov
sarl
mov
lcall
andl
push
aas
sub
and
dec
rcr
mov
pop
xor
xor
xchg
out
orl
xchg
icebp
sbb
mov
push
cltd
xchg
pop
mov
cli
das
aaa
xchg
int3
or
inc
add
pushf
xor
cmc
inc
lea
push
insb
push
push
enter
fimull
decl
and
test
fnsave
jo
jmp
mov
cmp
push
push
adc
aam
pop
leave
pop
jnp
out
inc
sbb
adc
outsb
inc
imul
lock
pop
pop
mov
shlb
in
inc
mov
sahf
mov
fstpt
dec
xchg
test
jecxz
inc
lret
int
push
incl
dec
notl
push
and
xchg
nop
ss
fidivl
dec
les
add
pusha
subl
popf
lcall
sti
lods
sub
pop
dec
icebp
adc
orl
ret
mull
lock
dec
mov
shrb
int
jg
push
mov
mov
pop
adc
ds
dec
push
sub
mov
mov
js
js
icebp
dec
repz
pushf
paddusw
adc
or
lock
jno
scas
xchg
cwtl
cmp
daa
pushf
push
push
fistpl
cmp
or
push
hlt
sub
fdivrp
and
sbb
gs
sbb
jecxz
mov
pushl
lods
add
clc
dec
int
or
test
sbb
add
mov
imul
sbb
cmp
push
jae
ds
sbb
mov
cmovle
ja
clc
sbb
xchg
ss
ret
test
pop
add
jge
jle
jbe
adc
insb
lods
and
int3
aam
fs
push
xor
scas
cld
xchg
mov
arpl
in
leave
mov
loope
aas
cltd
fs
sbb
add
jo
adc
jmp
ljmp
lea
push
mov
lds
push
fisttps
lret
xchg
pop
push
sahf
ficoml
pop
repz
jb
aam
mov
pushf
jno
cmp
and
adc
call
ds
sbb
aam
mov
adc
in
jbe
mov
loop
aaa
dec
mov
dec
jle
sub
test
aad
inc
loopne
adc
cmp
mov
xchg
mov
mov
push
push
ljmp
or
cmp
sub
push
test
popa
js
ret
mov
mov
loope
out
jmp
sub
mov
xor
pop
pop
xor
adc
pop
jo
int
push
cli
mov
dec
cmp
aad
jno
mov
leave
aad
sbb
popa
outsb
mov
pusha
jne
pop
jnp
fcompl
call
fldt
xchg
xchg
dec
jg
fisttpl
pop
pop
sub
fmull
adc
xchg
negb
cmpsl
enter
imul
lods
and
imul
imul
push
xor
ret
dec
lock
mov
add
ds
iret
mov
add
loopne
popa
mov
int
outsb
pop
imul
add
mov
cltd
arpl
jl
mov
pop
imul
mov
bound
cli
push
jecxz
mov
pop
fsubrs
data16
loope
sub
pop
dec
movsl
xchg
imul
xlat
mov
inc
les
adc
repnz
mov
lods
mov
decl
mov
dec
dec
xchg
push
imul
mov
add
cmc
xchg
push
std
inc
dec
and
pop
jo
adcl
lret
rcrb
test
stos
sbb
enter
jo
dec
lds
mulb
mov
fstpl
pop
sub
addl
stos
add
mov
adc
mov
mov
mov
cmp
aas
sbb
xor
mov
sub
add
sub
hlt
adc
iret
in
mov
jmp
cmp
bound
pusha
mov
cmpl
sbb
xchg
adc
std
push
leave
pop
pusha
mov
adc
scas
mov
sub
lcall
pop
jnp
sbb
xor
or
push
cmp
mov
je
mov
rcrl
les
sbb
add
or
inc
mov
and
pop
aam
pop
lea
and
mov
adc
fcoml
inc
insl
pop
stos
and
jb
xchg
cmp
cmp
dec
xlat
lahf
popa
push
sti
mov
mov
xor
jmp
and
js,pt
inc
in
jo
sbb
sbb
fildll
js
add
push
xchg
sti
mov
enter
sub
and
mov
xor
push
and
and
sbb
pop
nop
and
xchg
pusha
dec
sbb
fmul
sbb
adc
cmp
mov
dec
sub
orb
jns
push
mov
xlat
mov
mov
mov
sub
popf
jbe
xor
aas
push
pop
jmp
idiv
push
sbb
pop
roll
add
pop
les
jae
fbld
leave
scas
out
jp
testl
scas
inc
into
mov
ja
cmp
lods
adc
sub
sub
lea
add
pop
mov
add
xor
sbb
inc
pop
fnstsw
jbe
sub
in
aaa
and
mov
xchg
cltd
enter
lret
mov
ret
mov
push
xchg
xor
pop
insb
rorl
iret
pushf
cmpsl
xchg
fwait
push
test
mov
lahf
mov
mov
push
push
xor
cwtl
clc
movsl
pushf
lods
sbb
cli
es
enter
test
xor
push
mov
lahf
add
inc
or
cmp
push
pop
dec
pop
xchg
ljmp
fwait
mov
push
fimuls
out
pop
out
dec
addl
mov
inc
outsl
pusha
int3
jge
push
sbb
mov
sub
enter
add
push
cmpsl
lret
test
testb
rcr
orb
or
and
jo
mov
fsts
push
mov
sbb
fldcw
mov
inc
sub
std
cmp
sbb
insl
add
repz
stc
xor
sbb
jno
aad
add
push
and
int3
subl
inc
mov
dec
ljmp
jmp
add
or
xchg
fistps
notl
sbb
mov
cwtl
shrl
jmp
or
push
cltd
insl
call
mov
adc
push
jecxz
pushf
scas
cmp
push
mov
loop
aam
aas
xor
iretw
addr16
adc
clc
movsb
jp
xor
mov
in
mov
push
jge
pop
jae
mov
movsl
xor
mov
pushf
rcrb
nop
adc
rcrl
jmp
in
test
addl
push
xchg
xor
sbb
lret
add
subl
dec
dec
sub
movsl
out
cmp
xor
xchg
dec
jne
cld
bound
sub
xor
arpl
stc
int3
xchg
ss
jbe
ffreep
loope
xchg
or
ljmp
push
sbb
pushf
mov
fwait
mov
nop
sbb
pop
fs
sbb
pop
rcrb
in
loopne
jecxz
xchg
fdivrl
bound
cmp
dec
pushf
mov
xchg
push
inc
cli
sbb
mov
popf
adc
scas
push
popf
jge
cltd
mov
xchg
addr16
nop
bswap
daa
mov
shlb
cmova
jae
stos
sub
or
pop
mov
adc
stc
xor
dec
cmc
ss
jmp
ss
mov
in
xor
ljmp
inc
cli
scas
mov
push
push
jno
aad
in
xor
fildll
iret
or
sti
adcb
out
lret
divb
pop
shrl
lods
adc
and
sbb
mov
arpl
xchg
test
and
fbld
in
xchg
int
jno
mov
and
gs
shrl
xor
add
sbb
mov
pop
dec
xchg
mov
cli
mull
pusha
cld
les
or
in
jae
inc
andb
adc
cltd
pushl
inc
xchg
rcrl
subb
sbb
sub
xor
sub
pop
sbb
aam
jns
scas
push
xor
jbe
push
mov
test
or
jno
dec
dec
mov
dec
lods
cld
mov
dec
dec
rcll
jl
jmp
xor
icebp
jg
mov
dec
or
and
fisttpl
aad
lret
test
dec
movsl
aad
add
or
mov
jbe
jl
mov
mov
lret
lret
loopne
ja
inc
or
int3
pop
rorb
mov
add
lods
jno
jnp
dec
jno
std
inc
push
test
cmp
cwtl
out
push
cmp
mov
xor
sbb
mov
test
and
push
mov
push
inc
dec
mov
loopne
mov
sub
mov
cmovns
xor
je
mov
stos
insb
mov
lods
in
lods
aas
outsl
call
jne
lods
imul
inc
xor
pop
fsubs
std
les
push
stos
xchg
jo
sbb
sub
sub
icebp
bound
or
sub
pop
xchg
inc
inc
adc
mov
mov
and
rclb
jge
inc
mov
sti
add
mov
int3
push
outsb
and
fcompl
cmc
cs
cmp
xor
outsb
scas
test
faddp
cmpl
dec
pop
sub
adc
jne
fidivrs
xor
mov
hlt
or
mov
adc
xor
inc
pop
push
fmull
sub
jle
and
jns
lods
push
cmpsl
sub
movsl
aam
ss
mov
daa
or
sbb
loop
decb
mov
scas
iret
jl
xchg
mov
mov
jnp
inc
mov
or
or
cmp
xor
push
loop
mov
in
mov
cmp
push
sahf
aas
je
xlat
dec
push
or
mov
dec
adc
dec
out
adc
jp
out
loopne
stos
dec
sub
fists
push
sub
adc
jae
scas
pusha
mov
aad
jecxz
out
xchg
pop
inc
cmpsb
mov
inc
xchg
stos
pop
stc
mov
xchg
fcomps
jne
scas
lret
sub
sub
insb
outsb
sub
ret
hlt
je
push
icebp
xor
jb
cmpsl
mov
cwtl
mov
inc
cmp
xor
movsb
cmp
shl
cltd
ljmp
inc
adc
je
cs
inc
push
popa
push
cmc
andb
lods
nop
pop
mov
ljmp
adc
jns
dec
lcall
dec
xor
fldl
push
rolb
cmp
aaa
cmp
mov
add
jmp
fstps
imul
hlt
xor
daa
jns
xchg
push
dec
pop
pop
iret
adc
bound
push
xor
aas
or
add
xor
mov
aas
xchg
jl
push
sbbl
in
pop
inc
test
in
out
mov
or
pop
and
cmp
mov
lcall
js
dec
lahf
pop
ja
xchg
scas
icebp
popa
pop
inc
pop
adc
push
rolb
cmp
pop
cmp
sbb
pop
lock
ficompl
ljmp
test
fwait
loope
bound
movsl
or
mov
rorb
add
dec
sub
sbb
lcall
outsb
data16
ret
xchg
jnp
xchg
imul
outsl
aam
jmp
scas
push
insl
ja
xor
sub
daa
fs
adc
inc
loop
cwtl
pop
mov
add
lcall
jge
xchg
xchg
mov
jmp
inc
leave
enter
adc
push
push
mov
or
iret
inc
imul
ret
dec
or
fsub
test
shrl
xor
mov
ss
enter
daa
fcmovu
bound
mov
insb
or
xor
inc
push
dec
repz
pop
mov
pushf
loop
xchg
push
push
cmp
sbb
outsb
adc
inc
inc
xchg
fidivrl
int3
xor
popf
dec
or
jbe
xor
xor
push
popf
jo
push
mov
dec
add
pop
fsts
pop
pop
nop
adc
lds
and
push
mov
jbe
ljmp
cwtd
mov
xchg
sti
pop
and
icebp
imul
or
jnp
mov
or
fisubrs
xor
mov
lret
mov
push
mov
pop
push
out
sbb
lds
mov
push
cmp
sub
sbb
out
and
and
inc
data16
pop
lahf
in
jg
in
movups
arpl
jo
pop
fcmovnbe
add
aaa
sbb
sub
cmp
sub
outsb
jno
pop
arpl
lret
mov
into
mov
bound
daa
mov
fldenv
or
cmp
push
push
into
movsb
mov
cli
rorb
dec
hlt
mov
mov
scas
daa
push
dec
xlat
loop
xor
cmp
frstor
mov
cmpsl
adc
test
xchg
shll
movsb
or
dec
into
add
cmpb
out
testl
bound
negl
jns
jp
sub
jnp
aam
clc
repz
adc
rolb
lods
testl
pop
push
idivl
mov
push
adc
push
loopne
push
mov
insl
sbb
cli
insb
aas
out
xor
mov
push
adc
test
push
into
mov
lock
pop
mov
lods
cld
cli
repnz
rol
mov
xchg
mov
ror
in
lret
mov
in
mov
shl
mov
and
dec
xchg
test
cs
je
aad
xor
scas
cmpsl
cmpsb
lret
lock
inc
addr16
add
xchg
sbb
repz
mov
xor
outsl
inc
sbb
ljmp
icebp
mov
xchg
xor
cmp
cmp
dec
inc
push
jo
jnp
lcall
stos
xor
repz
repz
ja
add
and
jb
in
add
das
or
mov
and
fucom
enter
xchg
sahf
out
imul
adc
mov
data16
jo
shlb
jp
cmpsb
add
push
fbld
les
jg
mov
add
push
sub
jmp
mov
xor
mov
adc
test
jl
call
mov
int
push
push
rolb
mov
out
scas
pop
pop
sti
push
mov
out
dec
cli
fcmove
xchg
lds
or
ja
dec
lods
mov
xchg
push
push
and
jbe
push
xor
sub
pop
sub
cmp
pop
stos
jno
stc
enter
jle
xor
xchg
ja
xor
or
outsl
in
sub
or
ret
and
or
enter
xor
mov
lret
outsb
sbb
xchg
inc
adc
aam
divb
cmp
cli
loope
mov
rorb
sbb
outsb
inc
adc
jle
sbb
xchg
outsb
dec
cmpsl
pop
xor
push
jnp
lds
lock
sub
mov
adc
in
mov
xchg
jecxz
out
js
mov
jno
les
pop
test
mov
sahf
iret
push
mov
xor
mov
lret
jbe,pt
jp
std
lcall
repnz
ret
mov
out
push
adc
mov
sarl
mov
loopne
or
mov
ss
outsb
ja
loopne
leave
xlat
je
lea
xor
mov
loop
repnz
mov
rorb
shrl
fldcw
pushf
imul
xor
and
inc
xor
add
jmp
xchg
mov
je
xor
xchg
cmp
pop
add
rorb
cmpsb
sarb
xchg
mov
inc
bswap
fsub
lock
mov
mov
test
cmp
push
sahf
jne
fwait
cltd
fldt
xchg
push
or
enter
lods
inc
or
stos
ss
clc
andl
inc
dec
push
ja
das
stos
jecxz
rorb
add
mov
addr16
mov
jmp
pop
xor
dec
out
out
and
or
in
push
jnp
mov
or
pop
adcl
test
rolb
xor
rcr
fiaddl
sti
mov
jns
test
sarl
pop
test
or
push
or
fistl
aam
loope
mov
popf
in
mov
and
mov
icebp
addl
pop
aam
shr
lea
push
mov
push
mov
out
repnz
test
cmp
shlb
add
int3
xor
adc
lcall
das
pop
and
jle
js
jo
repz
push
rol
inc
sub
loop
sti
roll
mov
test
pop
xchg
or
lcall
sbb
jl
fs
test
mov
in
call
mov
pop
test
jmp
sub
divb
jmp
jmp
out
imull
mov
jno
jbe
jo
repnz
jnp
mov
pop
cmp
jb
inc
int
movsb
mov
movsb
loop
mulb
ret
subb
mov
pop
stc
fwait
pusha
test
clc
insb
sbb
mov
lods
pop
fstpt
imul
into
push
rcll
movsb
fcompl
pop
pop
mov
mov
rcr
adc
lods
out
jmp
and
call
push
add
jmp
xor
pop
xchg
jecxz
sub
mov
lods
sub
lods
add
push
xchg
lods
xchg
rep
pop
lods
push
xchg
add
lods
loop
lods
lea
add
lea
mov
rep
pop
lods
push
push
push
xchg
pop
lea
call
jb
sub
jae
mov
cmp
jb
sub
push
movzbl
shl
mov
lea
lea
mov
jecxz
mov
sub
mov
xor
test
setne
push
inc
mov
lea
call
pop
lahf
adc
shr
je
sahf
sbb
je
mov
xor
mov
call
xor
jmp
mov
mov
add
call
jae
add
call
jb
add
call
jb
cmp
mov
jb
mov
push
mov
sub
mov
jmp
add
call
xchg
jae
add
call
xchg
jae
xchg
cmp
mov
jb
mov
push
push
mov
add
call
pop
xchg
jmp
cmp
mov
jb
mov
push
xchg
xchg
mov
mov
add
call
push
pop
push
dec
cmp
jb
mov
shl
mov
lea
call
cmp
mov
jb
xor
shr
adc
dec
inc
xchg
inc
shl
cmp
lea
jbe
sub
xor
mov
shrl
mov
bswap
sub
add
cmp
jb
mov
inc
add
call
loop
mov
shl
add
lea
xor
push
inc
push
shl
mov
xchg
call
xor
pop
shr
adc
loop
pop
add
inc
pop
mov
push
mov
sub
rep
lods
pop
mov
stos
cmp
jae
jmp
pop
mov
pop
pop
push
jecxz
mov
inc
add
cmp
jae
mov
cmp
jne
mov
bswap
add
sub
stos
loop
mov
push
push
mov
inc
lods
test
pop
je
add
push
push
xchg
call
xchg
lods
test
jne
cmp
je
mov
jns
inc
xor
lods
push
push
call
stos
jmp
pop
pop
mov
jecxz
xor
lods
cmp
jb
add
add
loop
popa
jmp
sub
jb
je
shl
lods
jmp
lods
jmp
lods
jmp
push
mov
push
shr
mull
mov
mov
bswap
sub
cmp
pop
jbe
mov
xor
mov
sub
shr
add
jmp
add
sub
mov
shr
sub
stc
pop
pushf
cmpb
jne
incl
shll
shll
popf
ret
xor
inc
lea
call
adc
cmp
jb
sub
ret
mov
call
lea
mov
jae
call
mov
jae
shl
mov
push
lea
call
pop
add
ret
push
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
push
add
pop
push
add
push
push
add
jo
add
push
add
add
add
pusha
push
add
insb
push
add
dec
jne
jo
outsl
outsl
imul
add
insl
jo
outsl
outsl
imul
