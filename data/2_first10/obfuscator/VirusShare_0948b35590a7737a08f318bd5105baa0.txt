sbb
add
outsl
std
out
das
jmp
and
or
sub
rclb
pushl
insb
outsb
jle
xlat
cli
add
mov
loopne
cmp
cmp
xchg
mov
xchg
std
sbb
xor
adc
lds
cwtl
aaa
mov
push
or
inc
mov
adc
sub
test
mov
push
inc
lahf
jg
pop
pushf
dec
push
adc
push
push
push
arpl
add
pop
and
push
repz
jbe
in
xchg
sub
xor
or
xor
jo
pusha
adc
mov
mov
mov
mov
insb
jae
adc
or
sahf
add
dec
pop
shrb
jbe
icebp
movsb
std
fs
cmp
dec
icebp
xor
and
repz
fidivrl
rcll
mov
pop
inc
jl
xor
xchg
iret
pop
fimull
shll
xchg
adc
movsl
xor
cmp
add
add
insl
test
pop
test
push
aad
jmp
mov
aas
out
mov
aad
test
ret
repnz
into
inc
sub
stos
dec
dec
rcl
popf
pop
xor
in
push
xchg
test
stc
test
outsl
movsb
lcall
lcall
mov
mov
or
pop
out
sbb
addb
xchg
cmp
nop
loop
jb
adc
cltd
and
lods
imul
push
maskmovq
mull
mov
out
adc
les
push
mov
or
lret
xchg
push
xchg
or
movsl
loop
imul
mov
cmpsl
mov
cs
int3
pop
mov
loopnew
jno
and
add
gs
lea
xchg
mov
std
mov
pop
jmp
clc
in
iret
orb
mov
jmp
pop
data16
frstor
push
cmpsb
adc
psrad
fwait
push
lods
sbb
pop
imul
jg
mov
and
cmp
imul
call
push
mov
mov
enter
adc
movsb
test
stc
pusha
xor
call
jbe
aaa
xchg
adc
cld
sub
cmc
push
mov
mov
mulb
hlt
mov
push
sbb
pop
in
mov
push
in
dec
stos
sbb
fidivrs
ss
or
sbb
adc
pushf
add
fiaddl
dec
sarb
xchg
cltd
inc
mov
movsl
adc
icebp
and
orl
rcrl
mov
rcrl
add
pop
rclb
xchg
rep
push
or
sub
mov
sub
dec
cmp
dec
iret
sbbl
dec
popf
fdivp
xadd
insl
mov
cld
xchg
dec
outsb
sti
and
push
loope
pop
lret
bound
or
iret
lock
scas
pop
xchg
stc
outsb
fcmovbe
mov
push
xchg
push
dec
mov
iret
repz
add
pop
cwtl
or
out
call
sbb
gs
cmpsb
rcr
bound
adc
sbb
scas
js
dec
adc
cmc
mov
mov
xchg
repnz
sub
sbb
push
and
mov
mov
lret
cmp
sub
sbb
int
fwait
daa
sbb
data16
lahf
sahf
movsb
adc
fldenv
out
jb
fstl
jno
mov
xor
movsl
call
hlt
iret
mov
sbb
sarb
or
testb
jne
xor
rcll
cmp
jl
lret
sti
jge
les
and
dec
ret
notl
and
push
incb
pusha
sti
adc
xor
or
je
lea
sbbb
dec
mov
xchg
mov
xor
movsl
lods
cmp
dec
hlt
fadd
cmp
sbb
jnp
lret
mov
add
stc
mov
xor
aad
jle
test
inc
icebp
cmp
add
movsb
js
clc
jg
bnd
mov
loopne
cltd
sbb
movsb
inc
icebp
icebp
xchg
imul
cmp
xchg
movsb
inc
jns
out
mov
mull
dec
icebp
insb
adc
lea
dec
adc
inc
mov
testl
incl
data16
xor
js
fiadds
rolb
adc
push
cltd
arpl
mov
pushf
add
mov
pop
jecxz
dec
fisubs
stos
jge
outsl
imul
mov
xlat
inc
jl
pushf
out
mov
bnd
pop
pop
pop
call
enter
cmp
lods
pop
in
daa
pop
push
mov
fisttpl
lahf
push
lock
cmc
daa
push
mov
rolb
xor
pop
daa
lret
scas
outsb
int
add
iret
xchg
insb
sub
sbb
mov
and
pop
in
mov
cmp
lea
cld
and
pop
inc
xchg
and
push
pushf
sbb
iret
or
or
in
int
jbe
test
inc
mov
into
js
div
cwtl
shr
sti
cld
iret
pop
mov
loop
lock
hlt
nop
xchg
cli
or
mov
test
add
add
jb
sub
cli
cmc
push
xchg
lods
lcall
push
cmp
adc
lock
mov
shl
arpl
aas
xor
testb
jge
in
pop
inc
xchg
sub
sub
ss
jge
push
cld
xchg
ffree
mov
push
jae
popa
xor
js
push
les
add
mov
fsubrl
cltd
das
cli
stc
loope
pop
jp
lds
sub
stos
adc
rcll
and
stc
fimuls
int
loopne
jp
and
out
andl
inc
cmp
insl
lcall
add
mov
add
dec
cwtl
dec
addr16
rclb
and
clc
and
sbb
pop
inc
fstl
addl
inc
or
aaa
adcb
roll
imul
cmp
fnstsw
sti
fnsave
arpl
adc
jno
xchg
flds
mov
push
mov
adc
jmp
xor
mov
lret
mov
mov
scas
lcall
and
xor
mov
and
pop
xor
xchg
mov
cmp
push
sub
mov
push
xor
pop
mov
mov
sahf
sub
pop
cmp
xchg
mov
and
sub
filds
int
xor
dec
sub
mov
jecxz
adc
xchg
dec
call
push
aaa
and
fdivrs
mov
stos
xchg
rcrb
jbe
or
pop
mov
push
stc
dec
sub
dec
cmp
stos
sahf
test
dec
clc
mov
sbb
cmp
outsl
outsb
inc
and
add
xchg
sti
call
xchg
or
inc
cmpsb
xchg
imul
xor
inc
dec
jb
mov
scas
dec
rorb
call
xchg
fsubrs
scas
jne
test
sub
dec
cli
das
adc
ficomps
adc
jb
dec
pop
cmp
outsl
loopne
ss
dec
cmp
gs
lea
jnp
cltd
xor
enter
inc
mov
inc
mov
js
cmp
ja
icebp
add
stc
xchg
pop
nop
adc
aad
mov
lods
mov
sbb
mov
and
rol
rcll
push
movb
xor
mov
push
arpl
cmp
lods
add
sbb
lods
jge
cmp
lods
and
inc
xchg
insb
fidivrs
cld
mov
pop
sbb
ss
sti
xor
test
addl
cs
jnp
mov
loope
iret
cmp
pop
sub
fdivr
and
cmp
lds
xchg
ret
orb
xor
jnp
in
sahf
or
aad
fwait
mov
test
shrl
call
fidivs
movsl
cltd
fistl
insl
mov
in
inc
mov
mov
out
push
sarl
popa
lods
sub
inc
in
testb
sbb
stc
or
sahf
add
scas
mov
faddl
js
fsubl
xor
jl
cmc
lods
jbe
in
add
fidivrl
cmpsb
and
mov
dec
mov
add
fwait
mov
xchg
dec
fwait
add
mov
push
scas
and
or
addr16
xchg
mov
test
roll
xor
sbb
call
pop
loope
sbb
ljmp
stc
aad
cld
dec
dec
push
cmp
push
sub
sbbb
adcl
shll
and
pop
std
aad
xchg
push
mov
testb
negb
fstpt
cli
pop
test
je
jbe
nop
sbb
sbb
mov
jae
xchg
jle
jae
jge
movsl
ret
adc
jne
jb
pop
jae
lret
jb
test
mov
mov
in
adc
out
fidivrl
xor
ja
lds
stos
adc
push
rorb
addr16
sbb
mov
xchg
sub
enter
loop
aas
push
sar
push
sub
mov
js
ds
lahf
andb
arpl
cmc
and
xchg
dec
std
sbb
inc
out
xor
xor
xor
mov
mov
push
ljmp
push
inc
mov
mov
mov
gs
jnp
xchg
add
adc
daa
out
jl
add
jae
xchg
nop
push
inc
cli
ds
rcrl
out
dec
loop
mov
lcall
das
lcall
jl
sbb
jae
push
cmpsb
arpl
dec
fdivs
loop
and
adc
rcrl
adc
lcall
and
enter
int3
aaa
loop
insl
pusha
mov
loopne
sar
pop
mov
daa
lea
mov
mov
insl
pop
mov
mov
dec
pop
jmp
inc
jge
add
testl
gs
mov
in
arpl
jecxz
nop
mov
test
jne
cmpsl
popa
pop
repnz
lcall
add
xor
loope
mov
enter
orb
xchg
ja
jmp
shlb
aaa
scas
sarb
jp
aaa
je
in
cmp
test
in
rolb
adc
fsubrp
mov
adc
dec
or
cmpl
push
cmp
push
push
dec
das
push
fbld
ljmp
movsl
imul
stc
jge
aas
push
xchg
inc
sbbb
call
sbb
lods
add
jb
jo
jb
fdivs
hlt
jl
push
cmpsb
test
mov
and
or
adc
jmp
std
dec
and
or
lds
shrl
mov
jg
enter
sbb
push
out
adc
mov
add
mov
mov
lock
in
inc
dec
xlat
cmpsb
mov
aad
std
sub
adc
xor
nop
shlb
in
lods
dec
dec
pusha
mov
fistpl
outsb
add
push
enter
mov
sub
cmp
mov
jb
out
inc
mov
sub
xchg
xor
roll
or
int
push
and
adc
and
enter
imul
push
lock
jmp
loope
xor
stc
leave
cmp
mov
sbb
mov
gs
dec
mov
fnsave
adc
pop
mov
mov
jnp
mov
mov
call
shlb
ljmp
lret
enter
movd
jmp
imul
orl
pop
adc
mov
push
stos
xlat
add
mov
in
clc
add
fnsave
sbb
lods
inc
and
xchg
aam
mov
mov
in
mov
and
dec
xchg
stc
mov
mov
xlat
sbbl
mov
inc
dec
mov
iret
rcr
shll
mov
repnz
xchg
cmp
sbb
mov
xchg
push
imul
ss
jl
jl
inc
test
orl
ret
roll
push
mov
jns
mov
add
or
xor
mov
cmp
cmpsb
inc
leave
faddl
insb
pusha
sub
pop
xor
cmp
sbb
lret
and
pop
mov
xlat
mov
xor
mov
add
int3
jnp
dec
in
jne
dec
xchg
xor
cwtl
loop
mov
xlat
fwait
stos
scas
jne
into
call
mov
loope
adc
jl
cmp
faddl
or
or
in
or
inc
add
loop
gs
cld
test
pushf
pop
lods
pop
mov
dec
xchg
inc
repnz
movb
daa
and
sub
mov
lods
aad
lahf
imul
cld
xchg
xor
xchg
and
mov
mov
sub
xchg
mov
jbe
push
pop
hlt
lret
and
arpl
insl
jbe
sub
xor
pushf
addr16
mov
cld
dec
jmp
lea
mov
push
xor
sbb
fisttps
inc
lock
and
aad
sub
lods
clc
mov
aad
mov
inc
jecxz
iret
or
out
push
scas
xchg
add
lret
or
js
loope
pop
stc
ja
xor
cmp
cwtl
push
ret
xor
arpl
std
dec
sub
xor
mov
ja
adc
jecxz
jge
lea
dec
stos
dec
insl
jns
pop
js
mov
inc
scas
cwtl
xor
test
sahf
test
test
inc
int3
fimuls
mov
imul
cmp
sti
inc
mov
lock
pop
cmp
sub
and
cmp
pop
test
cwtl
and
jne
insl
xchg
sub
imul
inc
xchg
icebp
xor
xor
cmp
cltd
aaa
cmp
lcall
xlat
dec
sahf
mov
pop
das
std
fiaddl
hlt
shlb
or
pop
push
loope
ret
sbb
lds
daa
cmpsl
and
pop
xor
pop
into
xor
or
mov
or
dec
sub
test
mov
push
fcmove
cmp
jl
loop
pop
push
or
movsb
js
mov
inc
xor
sti
cli
lahf
mov
out
sbb
ret
fwait
mov
or
inc
fs
aas
push
adc
xlat
shrl
adc
and
lahf
setno
ficomps
pop
dec
push
arpl
cltd
xor
popf
or
fwait
jl
xor
pop
cwtl
es
push
sub
push
xlat
fnstenv
jp
jl
faddl
aaa
xchg
mov
in
and
hlt
lahf
sub
outsl
pop
or
imul
jb
mov
xor
fst
jo
call
adc
scas
data16
and
mov
cmpsb
dec
stos
xor
mov
inc
into
lcall
loop
pop
sub
mov
jge
loopne
mov
adc
push
pop
cld
push
xchg
jno
mov
rorl
mov
sub
cmpsb
jo
cli
iret
pop
cmp
jb
add
adc
mov
aam
lret
sub
cmp
cmp
das
cwtl
push
in
sti
jb
pop
xor
mov
mov
or
rcrb
sbb
jecxz
arpl
dec
sbb
mov
mov
iret
pushf
pop
and
fstl
leave
or
cmp
push
movsb
mov
popa
or
mov
push
iret
lret
lahf
push
enter
inc
add
cwtl
cli
pop
scas
test
mov
sbb
dec
into
cwtl
add
inc
cmpsb
jecxz
nop
or
cmpsl
ss
subb
sub
xchg
mov
pushf
lret
push
adc
mov
cmp
rcll
shll
clc
insl
xchg
cli
lods
notb
das
ljmp
lret
iret
sti
scas
rcl
lds
pushf
push
aaa
nop
xchg
mov
das
mov
leave
ds
into
add
sub
mov
push
adc
mov
lcall
adc
aam
and
mov
cwtl
loope
into
int
mov
bound
lret
add
sahf
leave
jmp
call
inc
pop
mov
scas
sub
sbb
pusha
push
ss
and
lods
push
mov
sub
inc
fsubs
push
lahf
scas
inc
cmp
mov
mov
loope
or
ljmp
jb
lahf
inc
rolb
sbb
sahf
mov
cmp
subb
adc
in
mov
adc
add
fidivl
jmp
imul
push
pusha
push
push
fs
mov
unpcklps
jecxz
push
push
xor
mov
push
push
jle
sbbl
xchg
aam
and
stos
lock
ret
mov
ret
add
lret
jecxz
pop
push
out
jp
clc
jbe
lahf
aad
inc
jl
scas
leave
or
mov
pushl
loop
lds
jb
mov
aas
mov
push
in
and
rolb
push
stos
pop
adc
sahf
mov
and
cmp
mov
fcomip
cmpsl
fwait
xchg
andb
adc
mov
or
ja
cltd
jge
pop
loopne
mov
test
dec
add
or
arpl
shl
dec
sbb
inc
addb
lcall
shll
inc
mov
jmp
inc
inc
or
or
pop
jp
nop
leave
stc
cld
mov
stc
jle
sbb
cld
dec
sub
sbb
and
dec
cmp
in
shll
sbb
outsl
test
push
xchg
jmp
repz
pminsw
imul
orb
andb
jae
or
push
push
sub
lds
adc
dec
inc
lea
sbb
xchg
inc
add
mov
add
mov
lahf
pop
add
sti
lods
lock
adc
inc
inc
insl
mov
sub
into
push
data16
pop
mov
sbb
adc
scas
test
loopne
xchg
mov
add
rolb
das
pushf
sbb
mov
xor
fdivl
sbb
shrd
mov
xor
leavew
xor
mov
mov
dec
inc
sarl
scas
add
inc
lret
jl
push
std
or
in
jno
subl
addr16
jnp
imul
iret
popf
insb
dec
out
push
adcb
push
rcl
xor
int
mov
push
sub
sar
es
popf
pop
sub
dec
rcrl
call
xchg
jmp
fildll
mov
dec
add
cmp
es
sti
xor
cmpb
sbb
jmp
or
out
lret
xchg
mov
adc
mov
fidivrl
pop
xchg
sub
push
std
and
xor
inc
in
hlt
jecxz
sti
xor
out
movl
jmp
lods
sbb
in
repz
shll
inc
push
imul
out
cs
cmp
incl
jge
std
es
pop
in
push
jmp
add
xor
inc
inc
pop
pop
inc
push
inc
cmp
xor
dec
andl
mov
pop
sbb
jb
outsl
cld
cmp
jmp
subb
sub
test
imul
mov
jge
nop
ss
movsl
and
mov
mov
ffreep
out
cwtl
add
outsl
sbb
pop
mov
repnz
and
push
and
lods
rorb
adc
dec
dec
lret
jge
push
xchg
mov
push
jb
hlt
dec
push
sub
vpaddsw
out
imulb
leave
es
shll
lea
out
mov
icebp
pop
xor
push
lret
xor
mov
or
adc
ja
sbb
daa
lds
push
bnd
imul
mov
mov
cmp
lret
hlt
mov
xchg
test
aas
enter
stos
daa
mov
negb
xchg
or
fsubrl
aad
in
and
aaa
sub
lea
das
sbb
sbb
mov
mov
shrb
sub
sub
sbb
xor
lods
aas
cmovb
cld
in
jp
jo
pshufw
or
push
push
in
lret
lods
cmpsb
jns
bound
sub
sahf
movsl
or
mov
test
inc
xor
out
lret
add
jno
jg
cltd
das
dec
sbb
ret
cmpsl
xchg
mov
xor
add
pop
mov
aas
ss
jge
cwtl
add
mov
sbb
sub
aad
xchg
mov
adc
out
add
mov
xor
jo
mov
dec
jae
cltd
mov
leave
sbb
int3
xchg
fisubrs
cmp
icebp
lock
xor
jmp
ss
imul
repnz
fimuls
add
pop
sbb
lock
call
cmpb
and
pop
ja
cmp
mov
cld
arpl
out
sub
cmc
hlt
dec
fs
sub
pop
mov
fwait
stc
inc
xlat
loope
roll
pop
jne
jns
dec
fiadds
xchg
pop
mov
movsl
sbb
sbb
andl
sub
cli
inc
lods
pop
adc
or
or
xchg
jnp
scas
pop
mov
xchg
jno
cmp
jnp
sub
xor
mov
idivl
jmp
dec
mov
aad
cmpsb
mov
test
gs
xor
lods
fpatan
adc
sub
loope
push
push
mov
dec
sti
push
out
repnz
xchg
nop
lea
push
fcmovb
orb
add
sbb
js
shlb
test
mov
cmpsl
push
mov
mov
sahf
lods
mov
jecxz
or
cmp
add
fnstenv
pop
sub
imul
pop
int
shrl
lods
ljmp
data16
scas
and
mov
rcrb
push
dec
add
bnd
mov
pop
lahf
sub
and
or
add
dec
jbe
inc
sbb
mov
cli
mov
in
mov
pop
mov
les
fs
sbb
or
jne
inc
lret
test
mov
dec
cld
pop
rorb
addl
lahf
or
hlt
fsubs
ss
xor
mov
push
addr16
sbb
inc
jl
mov
xor
in
es
cs
fstps
dec
aad
and
stc
xchg
cld
cli
lcall
mov
and
pop
pop
sbb
dec
dec
sbb
mov
repz
sbb
cmp
mov
cwtl
and
into
sub
adc
or
pop
repz
ljmp
sbb
imul
xchg
iret
cmp
cwtl
out
ret
pop
ds
ja
fwait
mov
enter
hlt
notl
inc
gs
jb
cmp
sahf
adc
xlat
iret
inc
in
lds
ret
mov
push
inc
cmp
into
imul
fldl
push
sti
outsb
adc
popa
in
pop
and
adc
pop
in
addr16
jecxz
out
push
add
mov
rorl
jns
pop
fwait
lret
inc
movaps
leave
mov
and
xchg
mov
test
fs
xor
test
movsl
mov
test
dec
lods
out
adc
and
dec
pop
outsb
loope
dec
mov
arpl
dec
inc
adc
outsl
rol
mov
adc
clc
out
xor
jge
ja
pusha
push
aam
pop
rorb
movsb
ret
in
cmp
mov
xchg
adc
cmpb
rolb
sarl
pop
out
pop
addr16
ret
ja
scas
gs
mov
mov
loope
push
jns
repz
inc
dec
adc
jo
mov
push
cltd
and
adc
pop
xlat
aaa
out
sbb
and
wbinvd
or
popa
loop
mov
movsb
dec
outsl
sub
imul
add
fsubrl
mov
fcomip
push
push
xchg
mov
hlt
cmc
push
sbb
lds
sahf
sbb
je
mov
lahf
and
sbb
jge
into
call
les
imul
mov
sub
inc
mov
push
aad
mov
mov
jbe
ss
ret
mov
dec
repz
dec
add
sti
aas
mov
sub
fcomps
les
cmp
loopne
mov
fildll
or
sub
fwait
and
mov
fmuls
pop
jne
mov
out
sbb
lock
enter
lret
jmp
cmpsl
and
imul
in
pop
into
pop
jb
inc
mov
inc
mov
and
lods
aas
or
repz
cs
or
sbb
push
push
xor
stos
jnp
pop
add
es
gs
popa
xor
push
sbb
sub
ficomps
sti
sbb
mov
lea
adc
shl
add
movsb
add
mov
jae
bound
mov
aad
test
xor
sbb
mov
xchg
or
fstpl
out
mov
xor
pop
enter
mov
and
popa
fs
add
adc
push
js
push
mov
hlt
cmp
cmp
inc
cs
cmp
add
repnz
push
xchg
push
aas
cmpsl
loop
pushf
pushf
fnstenv
mov
jmp
int3
adc
adc
inc
sbb
fdivl
dec
mov
xchg
sbb
xchg
insb
scas
fldl
cmp
out
cltd
dec
and
ljmp
rcr
add
push
xchg
nop
lods
xchg
mov
cmc
movsl
pop
mov
mov
pop
inc
add
sub
dec
dec
push
ret
shlb
add
mull
and
cltd
aas
dec
xor
mov
jmp
dec
outsl
testb
xchg
test
sti
add
dec
scas
sbb
push
cmp
out
push
cld
mov
fwait
jno
pop
sub
lahf
inc
sub
dec
inc
push
jmp
pop
mov
es
cmp
in
mov
mov
das
inc
imul
sti
pushf
fsubl
aam
clc
popf
inc
xchg
jle
repnz
push
or
leave
adc
mov
lcall
orb
pusha
cld
and
repz
xchg
jo
cmp
add
or
xchg
jge
addr16
es
lret
mov
pop
mov
push
push
imul
pop
sbb
mov
std
sub
or
gs
sub
imul
dec
or
ja
loopne
inc
mov
add
out
mov
clc
stos
mov
pushf
sarl
ror
dec
in
sti
inc
mov
xchg
sbb
lret
lcall
xorl
sbb
sub
lret
jnp
mov
xchg
fdivl
dec
imull
inc
lret
pop
xchg
fsubrl
mov
mov
or
dec
lcall
jne
pop
jmp
jp
mov
jle
cmp
aam
push
cwtl
ficoms
lea
pop
movsb
or
outsl
lods
ljmp
lret
and
insl
stc
nop
cmp
out
in
pop
cs
andb
jbe
jg
xchg
fbstp
dec
rolb
test
enter
jnp
mov
cli
fwait
ss
push
sub
or
hlt
add
test
add
filds
jp
sub
inc
xchg
push
aas
imul
test
and
lea
lods
mov
pop
in
cmp
popf
push
sbb
stos
lds
mov
push
jle
insb
ds
sahf
in
addb
adc
or
mov
orw
pusha
sar
lods
push
stos
scas
or
mov
les
pop
push
mov
xchg
pop
jne
push
mov
daa
data16
fs
sbb
mov
lds
add
adc
loopw
pop
or
sbb
or
or
xor
imul
and
cmp
js
push
addr16
in
jb
mov
mov
mov
jl
or
js
lock
pop
mov
inc
repnz
test
negl
dec
imul
in
inc
push
xor
aad
fsubrl
mov
negl
push
in
dec
insl
pushl
pop
out
fildll
daa
in
mov
xchg
fisubs
xchg
xor
xchg
adc
cmpsl
out
xor
pop
inc
sbb
std
sub
loope
dec
and
lahf
imull
rolb
mov
dec
ret
in
jns
pop
scas
add
orl
pop
mov
jb
test
pop
ljmp
adc
das
fstps
xor
mov
std
and
add
push
aas
sarl
xor
add
mov
cmp
xchg
inc
sub
xor
xchg
mov
test
lea
iret
inc
xor
pop
push
or
aaa
mov
sbb
mov
movsl
pusha
push
es
test
or
dec
aam
loop
into
scas
xlat
popa
inc
jmp
test
push
jmp
pop
or
addl
stos
movsl
pop
movsb
jae
iret
aas
dec
pop
pushf
popf
or
ret
jno
xor
fmuls
sbb
repnz
lock
cs
pushf
addr16
pop
push
lret
pop
sti
call
mov
push
test
jae
fcomp
insl
out
sbb
push
outsl
push
cmp
cmp
adc
sbb
cwtl
ret
int
jl
sbbl
out
outsl
mov
add
pop
mov
idivl
mov
mov
test
enter
pop
testb
mov
aam
or
pop
mull
xcrypt-cbc
cmpsl
push
sbb
test
mov
or
sbb
lods
fsubrs
pop
repnz
cmc
adc
adc
rcl
popf
pushf
loope
sarb
sbb
lret
jnp
dec
sub
dec
aam
adcb
sub
add
xchg
pusha
dec
shlb
lds
test
cmp
and
adc
jl
mov
push
jae
enter
adc
jl
jbe
fsts
push
jmp
loop
jae
popf
pusha
xor
shlb
ret
cwtl
scas
pop
push
adc
stos
lods
scas
adc
repnz
ror
jecxz
lcall
cs
jge
cmpsb
mov
push
mov
outsl
jnp
dec
inc
mov
jo
mov
cwtl
jns
push
sub
fcomip
test
lods
cmp
in
ret
imul
stos
in
dec
xchg
popf
cmpl
inc
sbb
lret
cmp
fcoml
cmp
mov
fisubl
xor
loope
xchg
dec
mov
test
sub
ja
into
bnd
je
inc
rcrb
mov
and
jbe
xchg
icebp
pop
movsl
test
je
clc
shrl
jmp
dec
pop
insl
das
sub
cmp
insl
jmp
mov
xlat
mov
ret
inc
dec
movsb
fdivl
add
push
in
xchg
cmp
popa
pop
jmp
outsl
jbe
shrb
mov
leave
pushf
fisubrl
fbstp
lret
or
jb
sub
xor
and
addr16
test
mov
in
add
clc
jae
call
fimull
cmp
addr16
mov
call
push
lret
push
sti
cmp
jb
xchg
adc
push
and
push
mov
pushf
cli
xor
sub
jg
arpl
xchg
jmp
in
je
out
cmp
lcall
xor
mov
cmp
cltd
clc
jecxz
notb
mov
jmp
sub
jp
mov
mov
loope
arpl
dec
or
mov
pop
pop
aad
lret
movsb
or
rcr
inc
xor
arpl
imul
push
jecxz
jmp
ret
push
shll
lea
sbb
mov
loope
ds
nop
loope
addb
cli
sub
mov
lcall
sbb
push
bnd
mov
push
lea
mov
jo
fcompl
iret
mov
stc
xchg
xor
fucomp
push
cmp
push
lcall
stc
sahf
clc
jp
adc
andl
inc
jb
es
mov
stc
push
subb
jb
mov
cmp
xchg
js
push
sbb
push
nop
into
ss
cmp
sbbb
loope
lods
int3
in
xchg
mov
dec
out
ljmp
pusha
cmc
lret
cmp
jb
mov
out
daa
lea
xchg
fldt
shrd
adc
cmp
cmp
nop
arpl
inc
pop
addr16
mov
cmp
and
adc
rcrb
sbb
loopne
cld
cmp
jne
jo
jae
ret
sbb
adc
inc
ljmp
pop
cmp
sbb
pop
lahf
icebp
es
mov
lret
ja,pt
push
add
cmpsb
rolb
insw
scas
insb
push
jae
mov
sbb
test
popl
stc
mov
in
jge
add
in
xor
lret
outsl
xor
push
in
push
imul
pop
xchg
add
push
cmp
or
inc
in
push
pop
in
pop
mov
mov
fistl
lods
xchg
lds
jecxz
or
xchg
cmp
mov
incl
loopne
insl
ret
cwtl
popf
pop
push
out
mov
and
stos
nop
int3
nop
rcl
stc
lcall
fwait
or
pop
jle
iret
mov
in
jb
pop
pushf
out
mov
cmp
or
sub
dec
mov
mov
sbb
jecxz
idivb
hlt
mov
xchg
outsb
push
dec
push
pop
outsl
sahf
ret
cmp
sti
jg
sbb
je
mov
test
roll
scas
dec
addr16
popl
cs
fdiv
sub
sub
outsb
jge
mov
ret
outsb
pop
mov
xor
daa
neg
jnp
jo
mov
push
hlt
adc
nop
xor
push
sbb
push
je
pop
mov
or
ja
pop
add
push
pop
lds
pop
cs
cmp
sahf
or
sub
pop
inc
xorb
xchg
bound
repz
or
pop
repnz
cmc
mov
loope
scas
sbb
pusha
and
out
fwait
scas
nop
outsb
pop
sub
xchg
outsl
jp
sub
sub
shll
enter
outsb
xchg
mov
mov
pop
fimuls
mov
push
mov
ljmp
repz
fst
push
mov
mov
stos
add
fcomi
jle
loope
add
jle
fstp
into
mov
inc
outsl
xchg
add
push
pop
jne
imul
clc
lock
adc
in
jecxz
push
popa
out
out
cltd
sbb
dec
fsubrs
xchg
push
hlt
inc
imul
aaa
sarl
mov
dec
dec
jmp
arpl
movsb
leave
repnz
stos
or
pop
push
push
lret
xor
push
test
ja
mov
test
rcl
cmpsb
popf
jmp
sbb
sub
lds
das
int3
cmc
out
mov
mov
mov
fs
push
dec
les
or
sub
inc
popf
or
clc
hlt
adc
mov
jnp
hlt
jmp
jg
pushf
push
outsb
pop
mov
push
adc
pushf
imull
adc
mov
xor
jo
rorl
mov
mov
inc
or
push
sub
jg
loop
push
jle
repnz
idivb
or
jg
mov
inc
insl
shrl
and
mov
push
andl
test
pusha
sbb
xchg
sub
loope
push
jmp
pop
add
push
flds
xor
mov
inc
movsl
xchg
sub
push
mov
adc
rolb
xchg
mov
paddd
bound
cmp
add
mov
jmp
rclb
outsl
jmp
pusha
mov
push
push
mov
push
adc
mov
sbb
lcall
sbb
and
ss
sbbb
and
std
mov
lret
sub
xchg
jne
jo
pop
std
mov
mov
xor
das
pusha
lret
xchg
add
les
xchg
sbb
xchg
push
cmp
mov
ja
push
dec
sbb
nop
sbb
aad
xchg
in
push
test
jbe
scas
xor
xchg
out
or
mov
stc
ret
out
xlat
lret
fidivrl
lcall
lcall
mov
psrlw
pop
std
and
in
mov
mov
outsb
out
sbb
mov
loope
dec
pop
je
in
xor
jle
subl
fnstsw
sbb
lcall
cltd
in
xchg
and
jmp
dec
xchg
popf
loope
cli
push
cmp
inc
xchg
adcb
push
add
in
push
jns
mov
mov
push
mov
cmpl
add
cmpsb
in
mov
cmp
pcmpgtw
in
adc
bound
jbe
push
pop
push
fs
jecxz
xor
jbe
inc
int3
lret
push
inc
and
inc
inc
imul
mov
into
adc
iret
pop
dec
popa
out
lds
jo
mov
jmp
fidivrl
lret
in
push
sub
in
in
out
jl
or
add
andb
lock
cmp
add
popf
data16
xchg
push
cmpsl
sbb
fs
lcall
jmp
cmp
xchg
xchg
and
imul
ss
inc
test
ret
ucomiss
cmp
fistpl
push
pushf
cld
ficoms
push
mov
add
repz
push
pop
xor
daa
and
aaa
repz
pop
repz
out
aaa
daa
cli
lret
repz
iret
in
adc
iret
push
jg
inc
cmp
test
xchg
movsb
stos
and
or
xor
jmp
mov
fistps
bound
adc
inc
xlat
mov
jle
fistpl
mov
mov
inc
add
jmp
pop
mov
inc
jae
ficoms
mov
rcrl
ss
add
jbe
mov
xorl
inc
rcl
jae
dec
add
pop
inc
je
cld
inc
clc
insl
repz
test
xchg
mov
or
repnz
pop
push
and
repnz
mov
jb
inc
fnstcw
cmp
iret
call
pusha
ds
scas
lea
js
rcrb
data16
dec
loop
mov
cli
add
add
inc
push
lret
sbb
jecxz
insl
mov
mov
jne
ffree
sbb
jecxz
xor
js
or
cmp
add
pop
or
sti
xchg
sub
ljmp
jge
test
out
sarl
sbb
adc
dec
push
stc
fs
test
adc
loopne
lock
xor
cli
mov
fisubs
aaa
into
sub
and
hlt
jbe
cs
mov
insb
lret
pop
sbb
ret
sbb
subb
adc
lods
mov
xor
jecxz
in
push
mov
stos
adcl
add
xorl
enter
or
sub
push
inc
iret
stos
fs
sbb
xor
fsubs
or
jmp
sub
xchg
cmp
add
ds
mov
fs
pop
loopne
and
shll
loop
and
and
dec
inc
adc
cmp
je
dec
sbb
ret
pop
add
sbbb
push
into
aad
push
xchg
jno
imul
mov
cmp
pusha
nop
bound
add
mov
mov
sub
jge
out
cmp
xor
fistpll
mov
std
pop
xchg
add
ss
mov
pop
clc
add
loop
aad
mov
ficoms
lret
pusha
arpl
fcoml
adc
negb
mov
out
pusha
shll
jg
sbb
adc
imul
sbb
dec
lret
mov
movsl
xchg
jae
in
movsl
push
pushl
aam
or
mov
sahf
mov
mov
push
icebp
inc
and
jb
insl
xor
push
sbb
in
pop
leave
pandn
lea
mov
test
jg
pop
adc
or
scas
mov
movsl
push
pushf
xor
daa
mov
outsb
dec
push
pop
rcl
popf
imul
int
cmpsl
push
inc
scas
sub
inc
lahf
cld
pop
cld
stos
jmp
int
mov
push
ss
dec
jns
mov
and
sbb
rolb
in
ljmp
fdivrl
fildl
aaa
clc
jnp
cli
stos
inc
test
xchg
xchg
sbb
mov
sbb
scas
inc
sub
sbb
gs
mov
mov
mov
sub
pop
dec
push
mov
mov
push
out
inc
xchg
sbb
sbb
push
fcoml
das
adc
sahf
push
cmpsl
fs
nop
sbb
cmpsl
jae
sub
pop
push
test
fs
dec
mov
jg
xchg
shll
adc
and
xchg
cmpsb
js,pn
shll
or
or
gs
push
sub
mov
sub
iret
loopne
popf
and
add
dec
adc
andl
in
inc
dec
insb
shr
mov
push
rol
xchg
inc
insb
lcall
movsb
push
or
xchg
test
pop
movsl
repnz
push
mov
lret
xchg
out
push
cmovnp
pop
xor
loopne
jmp
pop
and
push
adc
lahf
sbb
cltd
sub
dec
outsl
divl
mov
sti
or
in
adc
pusha
mov
addr16
sbb
mov
sarb
jle
stos
dec
ret
mov
in
js
std
adc
sbb
int3
cmp
shl
xchg
jo
jne
ljmp
insl
fdivrs
pusha
pop
mov
xchg
mov
mov
sarl
jno
out
mov
push
insl
inc
out
cld
add
imul
push
pusha
add
shll
imul
lock
push
iret
sbb
sub
out
mov
push
or
sbb
mov
xchg
addl
mov
jmp
mov
sub
clc
jle
mov
cmp
shrb
fldcw
jp
pop
fcmovu
loop
in
xlat
in
gs
cmp
insl
data16
xor
ss
insl
lahf
jp
das
jnp
push
jo
imul
push
mov
hlt
fs
cltd
ucomiss
or
pop
jmp
subl
and
insb
ret
ret
sbb
fstp
das
xor
xchg
mov
or
sub
sub
dec
or
xor
push
push
sti
jb
mov
mov
jo
test
add
aad
cmp
mov
xchg
sbb
mov
cmp
movsb
mov
fstl
jae
push
inc
imul
cmpl
test
jmp
mov
sbb
cld
iret
mov
dec
and
push
adc
xor
imul
sbb
cmp
ljmp
loop
cwtl
shlb
ret
xchg
pop
je,pn
pop
mov
xor
ret
dec
test
mov
inc
mov
lret
mov
es
bound
add
push
out
test
cmp
or
jmp
and
push
fs
sbb
test
es
cmp
pop
push
jecxz
xor
loop
cli
stos
cmpsb
out
lods
cli
mov
cmpsb
or
push
xchg
ret
or
fistl
jg
fsubrs
pop
mov
xor
mov
xor
mov
mov
sbb
pop
jmp
push
fistps
adc
push
lea
sbb
xor
add
fidivrs
sub
push
sub
adc
test
and
lock
mov
xchg
sub
xchg
sbb
sub
xor
cmp
icebp
mov
jbe
push
xchg
push
or
push
test
es
pop
inc
xor
cmpsl
aad
dec
push
fwait
divb
jbe
lcall
and
ja
notl
dec
ja
movsl
mov
jg
test
jne
adc
mov
sbb
push
filds
adc
inc
mov
fsts
pop
outsb
hlt
mov
dec
sbb
scas
pop
adc
lds
mov
push
mov
aad
push
or
out
shlb
hlt
sbb
rorb
rdmsr
and
xor
jl
cwtl
pop
inc
stc
lret
adc
push
ljmp
xchg
or
pop
adc
jns
mov
push
adc
in
jno
imul
hlt
fldenv
mov
outsl
mov
outsb
movsb
sub
pop
rol
and
mov
fbstp
mov
aaa
insb
mov
inc
in
dec
fisubrl
loope
call
cwtl
adc
jo
scas
sbb
jb
hlt
add
fmuls
xchg
or
pop
out
mov
dec
mov
dec
outsl
sbb
pop
push
imul
push
js
xchg
ret
sub
push
sahf
sub
xchg
mov
subb
push
xor
sti
mov
or
mov
jl
daa
mov
and
mov
cld
call
cmpsb
and
pop
jge
out
sub
pop
jns
sbb
mov
mov
mov
pop
mov
rcrb
fsubl
std
xchg
inc
or
jmp
cmc
xor
add
cmp
mov
mov
popf
jnp
mov
add
and
pop
sahf
daa
push
vmread
push
lahf
jbe
mov
adc
leave
test
int3
xor
mov
pop
in
or
repnz
xchg
loope
loope
xor
cli
lea
and
popf
mov
lods
push
xchg
inc
mov
inc
sub
pusha
lret
add
add
cmc
xor
stos
add
dec
adc
xchg
aad
rcr
pop
push
cld
addb
adc
jo
mov
stc
mov
jb,pn
icebp
add
subl
dec
das
test
sbb
in
lret
or
out
ds
jbe
bound
int3
mov
fcmovne
inc
or
loopne
sbb
mov
add
add
test
sbb
into
or
sbb
pop
inc
adcl
push
mov
popa
icebp
loop
mov
out
lods
das
mov
loop
pusha
mul
insl
data16
lret
iret
inc
lret
js
inc
mov
jnp
fldenv
js
mov
jmp
mov
add
and
repnz
cmc
inc
in
push
lret
insb
bound
mov
adc
mov
test
xor
xorb
sbb
mul
inc
test
ror
bound
mov
ret
dec
test
cs
std
fcoml
and
lods
add
enter
add
loop
pop
mov
mov
push
fistpl
push
xchg
mov
imul
dec
xchg
mov
fwait
into
iret
adc
pop
inc
xchg
mov
mov
es
iret
xlat
or
jbe
mov
mov
mov
add
out
scas
int
jg
rcrl
inc
repz
idiv
mov
push
sub
arpl
pop
fwait
shr
mov
test
ds
dec
mov
jge
out
ljmp
enter
lcall
shrl
push
dec
pop
or
inc
sbb
mov
xchg
push
in
lods
and
pushf
adc
mov
add
add
aas
mov
push
fisttps
cmpsb
loope
cli
lds
fdivl
mov
push
mov
cmp
lds
ret
adc
addl
fsubr
xchg
push
dec
push
dec
cmpsb
fdiv
pop
scas
test
leave
xor
hlt
ja
sbbl
adc
in
xchg
sbb
lahf
rclb
cmp
dec
push
sbb
lcall
aam
cwtl
push
push
xchg
add
cltd
xor
jnp
frstor
mov
stos
lods
add
adc
test
xchg
insb
mov
push
or
push
and
sbb
movsl
pop
inc
xor
dec
xchg
pop
xchg
fwait
cmp
adc
mov
and
dec
xlat
or
jnp
arpl
push
enter
ljmp
stos
nop
rcr
sub
sbb
adc
mov
scas
push
mov
jecxz
push
or
jmp
shrl
idiv
into
in
pop
clc
out
or
xchg
pop
sahf
adc
inc
mov
frstor
jl
fs
cli
aaa
mov
cltd
mov
jae
push
popa
je
fdivl
jo
xlat
testl
and
pushf
jb,pn
xchg
ret
je
test
std
mov
ja
xchg
jb
scas
push
cmp
rclb
mov
or
or
js
mov
inc
mov
adc
das
mov
bnd
push
shlb
cmp
imul
cmp
stos
arpl
push
dec
lock
pop
int
push
in
test
xor
sub
lods
push
fstpt
ds
xor
jno
pop
das
ret
mov
or
data16
mov
pop
cmpsl
sub
fmull
inc
push
movsl
sub
outsl
loopne
pop
sbb
pop
mov
xor
gs
call
adc
push
pop
int3
pop
adc
xor
addr16
xchg
sbbl
inc
outsl
pop
or
mov
mov
rolb
mov
fisubrs
cs
cmc
orb
inc
mov
adc
fwait
mulb
mov
mov
outsl
adc
lret
xchg
pushf
aaa
mov
pop
cmp
sub
push
in
ret
dec
ljmp
jg
or
mov
js
or
div
adc
xor
jns
and
popa
add
mov
mov
jb
leave
mov
lods
adc
popa
mov
and
jae,pn
mov
pop
sahf
in
ret
fnstsw
lret
push
call
xchg
push
mov
daa
lret
pop
imull
daa
cli
add
jbe
sub
dec
pop
mov
shrl
jnp
mov
aaa
das
inc
sti
add
add
mul
outsb
dec
and
scas
cltd
pop
mull
scas
lcall
and
jno
cmc
movsb
in
mov
aas
data16
frstor
adc
mov
test
jae
jmp
bound
mov
les
rcrb
or
mov
push
pop
jne,pt
popf
xchg
mov
sbb
or
mov
lret
std
in
xchg
cmpl
outsl
aad
in
jge
shrl
nop
sub
jl
das
ret
sub
rorb
stos
repz
mov
cmpsb
fcomps
mov
scas
mov
loopne
or
out
lea
int
test
pusha
testb
sub
jg
add
dec
lret
add
loope
test
pop
pop
rolb
xor
jmp
sbb
pop
repz
and
push
fs
fistps
outsb
iret
mov
fdivs
ljmp
fimuls
pop
sarl
lahf
repnz
cmp
xchg
xchg
fwait
ja
jne
push
out
and
popa
cmp
adc
jbe
or
pushf
cli
adc
xor
sarb
and
mov
mov
xor
rolb
mov
dec
es
loop
mov
fs
sbb
add
shll
mov
jno
sbb
ja
adc
push
push
xchg
xor
jmp
adc
mov
mov
scas
pop
loope
mov
mov
enter
andb
adc
lcall
mov
push
popa
sub
dec
fsubrl
arpl
loop
mov
or
inc
stos
push
pop
aad
jnp
fcompl
sub
jl
pop
lret
test
pop
lods
arpl
ret
inc
enter
or
inc
pushf
ljmp
mov
insl
mov
mov
sub
push
fnsave
loope
push
and
notl
ja
mov
stc
lret
mov
popf
lahf
daa
faddl
jmp
pushf
imul
add
dec
xor
and
dec
movsl
xlat
xchg
cmpsl
fisubrl
shll
adc
and
test
adc
aam
push
subl
gs
cmp
xchg
aas
xorb
lret
mov
imul
jmp
fsts
das
pop
mov
test
repz
fwait
push
jb
jns
jge
jno
sub
aas
xor
xchg
outsl
nop
ljmp
pop
mov
cmp
mov
push
push
sub
mov
jl
pop
ljmp
fisubs
add
insl
adc
and
repnz
xchg
dec
ror
push
sbb
les
fistpl
adc
shr
lods
mov
pop
int
xor
cld
mov
in
lods
jmp
fmulp
xchg
enter
out
scas
mov
mov
inc
bound
stos
enter
mov
xor
jae
push
daa
inc
mov
sti
test
rcl
js
int3
outsb
insb
jne
pop
stos
inc
les
and
pop
addr16
lds
dec
push
xlat
jmp
out
stos
into
cmpb
gs
mov
loope
xorl
jo
es
hlt
xor
dec
ficoms
pop
mov
aas
dec
test
mov
fwait
cld
data16
xchg
xlat
ds
mov
bound
pop
int
rcrb
dec
mov
or
dec
repnz
leave
jb
adc
or
sub
out
sub
in
daa
enter
faddl
gs
mov
adc
pop
or
dec
iret
iret
pop
mov
xchg
fdivl
mov
out
mov
mov
dec
jp
or
ljmp
ds
adc
dec
pushf
pop
das
adcl
test
dec
adc
mov
mov
mov
push
add
into
call
jae
idivb
insb
cmp
ret
dec
in
dec
jge
stos
add
cmp
and
rol
cmp
nop
aaa
mov
push
pop
subl
fiaddl
loopne
fs
cmc
mov
mov
or
xor
mov
pop
and
out
sarb
ret
fwait
ret
scas
mov
cmp
scas
mov
mov
daa
dec
cmp
and
fidivrs
lods
mov
cmc
pop
add
mov
pushf
pop
clc
dec
sbb
xchg
dec
aad
in
rorl
add
out
mull
sbb
rolb
sub
data16
xchg
arpl
bound
call
and
push
add
push
xor
js
sbb
mov
xor
add
ret
xchg
and
inc
add
adc
in
rclb
mov
popa
lret
mov
sbb
sub
enter
sbb
test
jbe
push
aam
dec
xor
nop
or
jo
inc
ss
shrb
cld
mov
cwtl
arpl
and
push
jne
push
adc
icebp
mov
pop
fwait
insb
pop
xchg
mov
rcll
dec
sub
bound
in
cmpsb
stc
fisubrl
jns
inc
adc
xor
push
repz
xchg
arpl
into
push
or
inc
arpl
and
lods
add
mov
inc
xchg
pop
inc
mov
sub
in
push
jmp
aas
ret
or
jge
out
leave
or
xchg
sbb
jno
dec
jae
jp
imull
add
faddp
mov
dec
lret
xor
jbe
mov
bound
mov
jmp
int3
xchg
std
bound
roll
xchg
or
daa
pop
call
jp
push
out
repz
cwtl
mov
dec
fldl
inc
mov
sbb
dec
outsb
lods
add
cmp
lods
icebp
ja
pusha
mov
cmpsb
imul
xchg
push
push
lahf
sbb
xor
push
sub
push
imul
mov
mov
mov
es
xor
jmp
and
aam
mov
dec
cmp
and
andb
cmpsb
cld
ret
jmp
or
daa
stc
test
fcompl
inc
imul
addr16
xor
pop
aam
in
mov
lock
mov
jg
mov
push
leave
cli
mov
push
pop
add
xor
mov
ja
or
outsl
jae
test
rolb
mov
repnz
mov
scas
inc
inc
cmp
jle
addr16
or
push
filds
repnz
in
dec
cld
push
pop
scas
std
test
std
add
ficomps
popa
mov
mov
fisubrl
push
outsl
sbb
stos
cli
push
inc
outsb
mov
jle
cld
js
mov
test
sub
xchg
imull
mov
push
mov
mov
js
pop
leave
pop
push
pop
aas
hlt
sub
lds
cwtl
mov
test
dec
repnz
dec
insl
cmp
loopne
and
push
sub
iret
inc
fs
les
loopne
sahf
je
cmp
push
jle
xorl
lcall
fstpt
push
lods
xor
ljmp
mov
hlt
out
divl
xor
adc
outsl
loopne
lods
clc
pushf
sbbl
inc
and
and
sbb
inc
arpl
dec
cmp
cmp
sub
lds
mov
mov
cld
pop
jecxz
in
mov
fcomip
mov
xor
mov
fsubrl
add
sti
or
or
div
mov
sbb
xchg
mov
sbb
cmpsl
push
mov
push
add
aas
test
add
lock
fdivrp
insb
into
insb
loope
xor
test
mov
pushf
cmp
and
scas
add
out
pop
push
push
jge
jecxz
test
lea
mov
stos
in
mov
hlt
rclb
cmp
xchg
pop
mov
ss
cmp
jle
xchg
and
cmp
pushf
in
cmpsb
xor
loope
add
xor
dec
stc
jg
pop
xchg
sahf
mov
push
je,pt
mov
fucomi
xchg
adc
in
sbb
pop
jl
pop
xchg
sub
clc
pop
int
pop
mov
lods
inc
push
mov
test
in
mov
cmp
out
lcall
xchg
xor
out
fwait
pop
and
dec
cmpsb
jo
andl
shr
test
loop
notl
dec
xor
jmp
or
iret
push
lahf
hlt
pop
shll
aam
dec
sub
dec
daa
loopne
or
mov
in
and
lret
xchg
adc
ja
xor
jbe
fucomp
cld
idivb
lcall
fnstcw
mov
shlb
das
lods
mov
mov
lret
movsb
in
cmp
outsb
clc
inc
out
outsl
fucom
fnstsw
mov
mov
mov
adc
mov
js
sub
pop
cmp
inc
outsb
xorb
xchg
or
add
jmp
or
push
jle
or
call
cmpsl
or
cmpb
lods
sbb
lea
mov
and
roll
cmp
push
inc
loop
cmp
out
pushl
cmp
bound
cmp
push
mov
push
mov
jle
mov
push
stc
das
insb
add
arpl
xchg
push
fs
int
clc
notb
cld
fists
cmp
mov
xchg
mov
cmc
mov
call
aaa
mov
xor
ljmp
ss
xchg
jns
roll
mov
cs
rorl
inc
ret
cmc
test
or
push
sub
mov
cmp
popf
sbbb
mov
sarl
imul
push
mov
outsb
add
ja
ja
int
popf
outsw
aas
lock
cmc
cmp
mov
and
jle
imul
cs
enter
sub
mov
insl
scas
notb
dec
loop
nop
xor
inc
inc
ljmp
fstps
inc
xor
daa
insl
pop
lahf
jle
mov
xchg
mov
movl
testl
mov
mov
imul
ficomps
or
in
ret
sbb
icebp
sarb
mov
push
push
leave
pusha
call
fsubrp
jo,pt
dec
push
enter
scas
mov
cmp
call
adc
aam
mov
fucomi
mov
leave
out
ss
and
sbb
pop
jb
jl
shrb
sti
bound
pop
imul
int
in
xlat
adc
and
add
push
pop
in
jae
in
shrl
addr16
pop
push
jle
ficoml
xor
jecxz
or
loopne
testb
js
enter
lret
enter
xchg
jne
and
test
push
int
mov
cmc
dec
jno
icebp
pop
pop
push
dec
in
fwait
dec
es
lods
and
insb
xchg
add
xor
jne
cs
xlat
add
into
in
jmp
add
add
mov
inc
adc
mov
std
mov
pushw
jmp
test
movsl
pop
lahf
popa
inc
mov
test
lods
sub
loope
mov
popa
pop
js
push
pop
shlb
fisttps
add
mov
mov
inc
mov
pop
out
rorl
jno
mov
lods
into
dec
add
sbb
xor
dec
call
jb
cmp
mov
filds
in
out
mov
lahf
lahf
orl
pop
aad
add
sbb
mov
sub
out
data16
loope
call
xor
dec
cmp
aam
addr16
lods
push
xor
pop
cmp
cli
adc
push
xchg
rcrl
adc
call
loope
cmp
inc
xchg
xchg
inc
sarb
cmc
xor
fistpl
jne
ds
mov
insl
dec
ljmp
loop
test
lds
not
out
lcall
adc
clc
mov
loop
ret
cmc
inc
test
pop
mov
popa
sbb
sbb
ja
hlt
std
adc
sbb
sbb
fsubl
insl
sbb
fistl
fildl
je
aas
int
sahf
jge
aaa
cmp
clc
lds
push
inc
inc
repnz
cli
xor
cmp
arpl
test
shlb
cmpsb
cmpb
cmp
in
xor
jno
in
xor
push
dec
addb
repnz
out
pop
mov
out
daa
add
imul
push
mov
stc
mov
adc
fcmove
sahf
cmpsl
test
sbb
cmpsl
test
iret
lds
mov
dec
pop
insl
popf
mov
sbb
jp
cmpsl
cltd
jl
stos
divb
fwait
sbb
xor
stos
sub
mov
insl
imul
mov
cmpsl
mov
jnp
adc
mov
or
cmp
cmp
repnz
fs
daa
adc
sbb
enter
or
lods
mov
frstpm(287
test
les
les
mov
jl
dec
push
adc
leave
sub
test
mov
xlat
xor
mov
jmp
adc
sbb
std
fnstenv
dec
pop
cwtl
and
mov
push
and
lea
push
mov
cmp
jnp
inc
lds
xchg
pop
stos
mov
lcall
add
inc
jle
test
and
or
loope
sub
mov
out
stc
dec
add
fbstp
test
add
rcrb
stos
dec
aas
scas
lcall
gs
int3
gs
sbbl
mov
pop
push
incb
fs
std
stos
aam
rorb
cmp
cmp
dec
dec
mov
pop
loopne
dec
add
mov
sub
test
insb
inc
fcomps
fldt
jmp
mov
cld
daa
mov
mov
aam
mov
push
mov
or
xor
mov
add
fldt
je
cli
mov
in
jl
fcoms
jae
xor
out
and
inc
and
adc
or
les
mov
pop
mov
ret
loopne
das
mov
pusha
mov
arpl
rcrl
dec
lods
adc
daa
adc
rorb
jmp
jp
ljmp
aam
jp
imul
sbb
dec
xchg
push
dec
or
push
movsb
fimull
sahf
popa
xchg
mov
mov
sub
aaa
and
dec
mov
lret
pop
clc
in
mov
adc
and
pop
pop
xchg
push
ret
movsb
cmp
jae
lfs
movsl
notb
xchg
add
lock
mov
cmp
cmpsl
adc
jp
insb
sub
mov
icebp
and
test
or
scas
ss
pop
lods
and
adc
out
jno
sub
sub
fstpt
adc
inc
mov
int
cmp
or
repz
mov
jns
in
or
mov
call
push
clc
popf
push
call
shlb
cmpsb
movsb
test
cmpsb
sub
in
les
push
or
sti
jecxz
push
push
pop
sub
pop
bound
dec
dec
or
imul
mov
and
dec
jno
rcr
dec
outsb
xor
sub
and
addl
scas
cmpsl
icebp
cli
mov
sub
cmp
loopne
mov
aam
mov
sti
jl
pop
shrb
xchg
ljmp
jg
push
std
dec
pop
pop
test
xchg
mov
inc
xchg
fcomps
xor
xchg
negl
xchg
push
stos
jl
js
adc
add
adc
inc
push
cltd
cmp
jo
add
xchg
leave
aaa
data16
mov
fsubl
dec
push
fmulp
cmp
scas
sarl
popa
repnz
int
mov
xchg
pop
hlt
dec
jmp
mov
int
dec
push
or
sbb
outsb
les
lret
adc
and
push
addr16
jb
sub
adc
in
loope
imul
scas
cld
sbb
mov
outsl
sbb
cs
call
and
outsb
mov
outsl
sbb
lret
xchg
pop
sbb
mov
sahf
fs
rcll
sbb
out
jae
or
dec
mov
enter
adc
or
inc
jl
mov
dec
subl
lods
icebp
addr16
ja
scas
das
and
jge
lea
cld
js
pop
jge
imul
sbb
xor
stos
ffreep
movsl
sub
pop
add
cmp
shlb
mov
test
and
movsl
test
mov
pop
add
aam
inc
imul
push
xor
dec
jmp
or
cmpsb
or
cmp
cmp
out
sub
xchg
je
sub
sbb
fcmovnb
or
jb
cltd
orb
xchg
pop
ret
sub
push
and
lea
xchg
sbb
enter
and
mov
arpl
shll
mov
out
adc
cs
sub
pushf
inc
in
jge
bound
xchg
inc
mov
sbbl
jns
add
pop
pop
aam
shlb
hlt
and
dec
push
pop
dec
sbb
cld
add
lods
cmpb
cmpsl
mov
stos
push
clc
or
lods
lret
pop
lret
int
pop
pop
xchg
hlt
cmp
or
push
add
or
call
data16
inc
mov
and
enter
aam
push
pushl
add
jnp
push
subl
enter
fs
in
fldenv
xchg
dec
ret
fsubrs
addr16
sbb
adc
cmp
pushf
adc
inc
fiadds
mov
ret
xorb
mov
popf
pop
loop
hlt
inc
test
mov
mov
xchg
jg
rcrb
mov
mov
inc
inc
sbb
cmovno
ret
jae
lds
das
mov
cmp
out
sub
fimull
into
ljmp
test
movsb
jmp
xor
pop
sbb
aam
adc
les
mov
cmp
insb
push
cmp
push
ds
lret
inc
aam
fists
push
mov
mov
rolb
jmp
pop
cwtl
daa
mov
in
stos
icebp
pusha
sahf
jno
xlat
lret
loope
xor
mov
xor
pop
test
test
cltd
lret
lock
lods
xchg
jbe
mov
ja
ficoml
jae
mov
insb
sti
scas
sbb
cltd
test
repz
inc
dec
sbb
mov
cmovae
xchg
dec
movsl
scas
push
xchg
or
sub
dec
mov
jmp
fsubr
popf
and
imul
sbb
aam
dec
ds
mov
sub
pusha
imul
mov
cmpsb
in
sbb
shrl
sbb
push
mov
dec
leave
jnp
decb
stc
test
sti
jns
mov
leave
adc
orl
fimuls
inc
or
mov
inc
xchg
push
popf
fdivl
prefetch
fistpll
adc
mov
pop
or
mov
lahf
subb
daa
daa
ljmp
sub
jns
out
sti
adc
imul
loopne
loopne
xor
adc
je
mov
divb
inc
pop
fwait
bswap
or
roll
jns
sbbl
mov
pop
adc
mov
aas
push
push
jnp
daa
test
fs
imul
ror
adcb
xchg
in
xchg
xchg
call
xchg
aam
adc
stos
mov
outsb
xchg
neg
xchg
mov
jno
gs
or
mov
push
fs
inc
mov
lods
pop
sub
cmpl
add
push
mov
mov
xchg
push
fimull
cmc
out
movsb
pop
cs
mov
mul
mov
sub
xchg
cltd
gs
adc
jge
xor
or
fidivrs
test
lahf
mov
pop
jns
cmp
lea
push
mov
cli
sbb
lods
inc
test
push
pop
mov
jae
das
fwait
mov
pop
clc
jmp
lcall
cmp
divb
mov
pop
imul
add
and
aaa
fwait
jmp
insl
and
inc
xchg
xchg
sub
and
jae
cmp
pop
jns
in
xorl
lock
es
adc
testl
mov
pusha
insl
movsb
or
iret
fistl
aad
inc
cs
mov
push
js
adc
push
fucomip
cld
into
pop
push
mov
push
mov
lods
add
pusha
test
insl
push
in
sti
dec
add
pop
repnz
push
dec
adc
push
or
push
inc
or
mov
push
cmp
decb
xchg
incb
fs
popf
adcb
mov
dec
push
inc
add
icebp
test
insl
scas
jne
adc
cmp
int
hlt
cmp
pusha
cs
dec
adc
inc
add
pusha
sub
push
push
inc
mov
lahf
mov
hlt
or
out
test
sbb
and
or
shlb
cmp
dec
pop
mov
stos
lcall
aaa
aaa
in
mulb
xchg
insl
lcall
inc
mov
fisttpll
sub
cwtl
int
incb
mov
jp
in
imul
fs
sub
jbe
test
mov
xor
inc
jge
daa
lcall
pop
pop
and
test
ret
mov
pop
aam
sub
xchg
cmp
js
insl
fisubl
sub
mov
pop
push
dec
imul
or
add
stc
sbbb
mov
xchg
call
jecxz
nop
inc
push
jbe
xlat
add
lahf
bound
das
mov
outsb
pop
mov
mov
push
xchg
adc
adc
stos
lahf
add
dec
sub
js
aas
js
js
xchg
loope
push
into
xchg
sub
sahf
adc
inc
sbbl
dec
pop
jmp
xchg
inc
stos
cmp
js
sbb
fucomp
sub
and
mov
xchg
adc
stos
fidivs
dec
mov
cli
push
xlat
je
std
out
popf
sbb
lods
or
jl
ret
in
push
movsb
fdivrl
cld
and
jb
xchg
scas
xchg
add
sahf
lret
jae
mov
cmp
dec
jbe
mov
shlb
lret
outsb
add
scas
mov
shrl
or
cmp
sbb
into
mov
jge
ljmp
jbe
arpl
jae
mov
pop
xchg
pusha
fldenv
aam
mov
dec
out
push
daa
popa
lock
sbb
sub
pop
lock
sub
sti
pusha
mov
xchg
xchg
int
add
int3
ds
leave
pusha
pop
test
and
loopne
ja
in
lcall
and
mov
pop
inc
add
insl
jae
and
gs
and
mov
jmp
cld
stos
nop
jnp
imul
mov
fisttpll
test
add
test
test
aas
mov
rcll
xor
es
add
lea
mov
mov
test
sub
outsb
jnp
shr
pusha
mov
fldenv
push
in
out
std
xor
jle
icebp
test
cmc
dec
push
xchg
adc
pushf
negl
xchg
and
and
add
stc
xor
int
int3
or
sti
aam
xor
scas
push
jno
test
icebp
or
mov
or
push
mov
or
pop
call
push
push
adc
scas
sub
repz
mov
out
inc
inc
insl
int
jnp
push
aaa
or
enter
popa
push
rorl
insb
stc
inc
sub
jmp
lret
movsb
int3
xor
sbb
push
sbbb
in
dec
and
mov
cmpsb
dec
ss
sti
cmpsb
or
enter
cltd
add
lcall
cmp
aaa
cltd
pop
movsl
mov
pusha
aad
gs
lock
ficoml
or
add
fiadds
sahf
loopne
mov
xchg
daa
xor
mov
xchg
mov
enter
add
test
out
dec
movsl
dec
xchg
lahf
sbb
pushf
std
mov
stc
jns
outsl
pop
mov
lea
ljmp
shll
pushf
and
mov
movsb
or
gs
fisubl
out
loope
xchg
jb
ret
xchg
jmp
scas
push
cmp
cmp
mov
cld
mov
into
and
rcrl
cs
decb
jg
lret
lods
mov
lock
push
cmp
dec
dec
sbb
das
shr
fisubs
mov
aad
notl
pop
cmc
cli
in
pop
rcr
cmp
jmp
inc
pop
mov
ror
and
addr16
scas
repnz
in
mov
jmp
sbb
and
or
sub
pop
fmuls
sbb
xchg
xchg
jns
insl
jg
add
lock
test
push
fs
into
xlat
sbbl
and
lods
out
add
in
add
push
mov
add
adc
xchg
movsl
sbb
insl
pop
add
out
loope
hlt
add
movsb
mov
ja
es
push
jecxz
pop
loope
cmp
push
mov
push
mov
xor
mov
sub
push
ret
sbb
insl
mov
pop
mov
jp
mov
jmp
test
imul
not
daa
loop
enter
enter
stos
xor
dec
sub
or
test
pop
pop
xor
aas
pop
mov
aaa
mov
and
sub
jbe
fdivp
mov
ss
js
insl
sub
sub
scas
cmp
cmp
mov
ja
push
adc
or
pop
shlb
clc
sub
stos
pop
rol
cltd
lock
sub
push
adc
cmp
daa
dec
dec
or
dec
sbb
in
push
dec
sub
jno
cmpsl
in
adc
repnz
lds
inc
ficompl
sbb
lea
cmp
xor
ficoml
add
lock
push
loope
movsb
inc
jge
mov
inc
or
xchg
mov
fsubr
je
loopne
mov
fnsave
add
sub
bound
jecxz
sbb
sbb
ffree
pop
mov
mov
cmp
add
xchg
sub
xor
inc
arpl
enter
in
sahf
addr16
les
and
mov
pop
jbe
mov
sub
mov
rolb
xchg
push
cmp
hlt
loopne
lea
out
out
mov
ret
xor
or
mov
cmp
imul
test
xor
cwtl
adc
icebp
insl
lock
push
adc
dec
pop
das
dec
and
xchg
sbb
dec
stos
fsubs
fiadds
dec
dec
mov
jae
xor
pop
and
mov
jg
rclb
sub
fiadds
hlt
sub
jge
push
dec
jg
jge
ror
push
rorl
mov
into
jg
mov
stos
les
xor
cmp
dec
sbb
jge
lret
inc
je
scas
testb
outsl
mov
cmp
rep
lods
repz
push
sbb
or
sbbl
outsb
call
ds
mov
call
inc
lods
mov
daa
mov
scas
dec
push
sub
je
jle
js
stos
addl
pop
sub
xor
xchg
outsb
cli
or
ja
xor
inc
lahf
add
in
inc
std
pop
mov
jge
push
jg
out
pop
sub
in
rolb
loope
xchg
and
mov
sub
push
pause
fimuls
orb
mov
cld
es
inc
or
pusha
loop
sbb
ffree
repnz
lock
test
cs
adc
cs
sub
jae
das
adc
rorl
aad
mov
out
idivb
jbe
lock
dec
dec
sbb
push
imul
cli
test
insb
pop
add
xchg
jb
jno
stc
mov
lahf
mov
mov
cmp
fsubr
clc
enter
sahf
repnz
ss
push
ja
call
cmpsl
test
out
sbb
mov
nop
cmp
pop
cli
cwtl
stc
aad
add
or
xchg
jb
sbb
dec
jb
adc
mov
or
and
sub
add
call
push
pop
pop
xor
sub
cmp
clc
and
cld
loope
push
pop
or
pop
sbb
clc
lret
notl
add
mov
loopne
pop
push
xchg
push
and
popa
lcall
in
pop
dec
jg
repz
or
jo
lods
mov
leave
fcmovb
insl
dec
xor
pop
add
or
out
lea
mull
std
push
xor
adc
test
cmp
mov
xor
pop
jb
pop
lret
xchg
sub
ret
ret
stos
inc
std
jl
mov
inc
sub
lea
mov
scas
arpl
xlat
jg
cld
rcl
or
dec
sbb
je
push
call
mov
dec
mov
cmp
add
dec
push
xchg
add
es
push
xor
loop
sub
lea
sub
mov
std
movsl
xorb
xchg
lret
ss
jno
imul
pop
adc
sbb
adc
loop
xor
push
or
cmp
inc
push
xchg
scas
pop
mov
sti
es
lret
leave
enter
out
push
out
aaa
addr16
out
fildl
aam
mov
push
cmc
mov
scas
loop
and
clc
mov
cmc
in
sbb
xchg
cld
mov
mov
adc
test
cli
cli
pop
les
mov
adc
leave
sbb
mov
insb
or
stc
jmp
sub
cmpsb
adcl
pop
call
push
fucomi
bnd
ljmp
mov
pop
mov
xor
mov
sbb
outsb
inc
inc
pop
ficomps
add
jmp
pop
in
adc
ds
mov
cmpsb
sub
dec
sarb
sub
stos
int
mov
pop
sbb
daa
adc
jg
mov
dec
pushf
outsl
mov
add
mov
mov
sub
mov
std
or
sti
mov
out
pusha
ss
lods
mov
fcoml
sub
mov
mov
mov
incb
add
js
jne
xchg
jge
jmp
fldt
fldl
dec
xchg
jp
pop
xorb
inc
loopne
sbb
sbb
dec
adc
stos
lret
sub
lods
aad
icebp
leave
rclb
pop
jae
test
pop
bound
sub
jp
or
loopne
xchg
cmp
inc
clc
es
inc
xchg
mov
aad
movsb
adc
dec
push
xorb
and
cmp
or
pop
push
cld
loopne
ret
popf
daa
fprem1
fdivl
outsl
push
insl
add
cli
mov
push
nopl
fucomp
mov
pop
mov
ret
pushf
dec
adc
aam
xlat
les
xchg
mov
fimull
sub
or
adc
movsb
mov
iret
dec
sbb
pop
cld
jle
sub
int3
adc
and
shrl
mov
and
scas
xchg
mov
mov
js
mov
and
sti
das
jnp
clc
or
jnp
lea
jg
xor
push
jne
loopne
add
roll
jo
insl
sbb
xor
jp
cmp
mov
outsb
aas
testl
icebp
aad
cmp
push
dec
iret
push
and
add
fistpll
mov
roll
or
or
jecxz
sarl
sbbb
push
aam
adc
imul
lahf
fsubp
dec
fistpll
or
cmpsb
dec
mov
push
inc
fcmovnb
ror
fcom
xor
loope
jns
sbb
lods
jno
cmp
mov
js
sbb
and
sub
mov
aam
mov
lret
inc
decl
jno
xorb
aam
xor
sub
push
in
stc
inc
add
aaa
fstp
pop
jae
lahf
sub
mov
inc
shrb
push
int3
das
adc
mov
enter
cmpsb
aam
jecxz
sub
pop
pop
aaa
push
or
push
out
mov
and
pop
aam
fsubl
cmp
add
jmp
mov
pop
ret
int3
aas
scas
dec
push
push
repz
xchg
clc
aam
idivb
xchg
fsubp
mov
xor
xor
dec
mov
pop
leave
sub
dec
std
and
out
xlat
add
and
push
mov
add
int3
cltd
cmpsl
stc
pop
mov
orl
adc
and
cmp
gs
pusha
xlat
test
mov
and
arpl
pop
and
mov
loope
cmp
pop
aaa
mov
add
fmuls
in
lret
pop
pop
jmp
mov
add
nop
fs
ret
dec
jnp
dec
sbbb
test
mov
stos
and
das
testb
pop
std
push
push
and
test
rorl
or
pop
in
test
inc
stc
mov
mov
mov
xchg
sub
je
addl
cmp
lock
mov
pop
adc
push
rorl
movsb
addb
test
jnp
stos
and
mov
or
dec
cmp
sbb
or
cmpb
rcrb
sbb
sahf
das
sbb
fwait
pop
loope
or
pop
mov
jl
mov
test
imul
mov
inc
or
data16
xchg
std
sti
decl
decb
sbb
rclb
out
jno
mov
bound
les
cmpsl
data16
and
adc
push
mov
ret
fs
mov
and
in
jecxz
out
popaw
sub
rolb
cmp
add
nop
push
and
jmp
orl
push
pop
inc
inc
fwait
inc
bound
add
fadd
or
lock
les
adc
test
add
incb
outsb
icebp
leave
xor
push
icebp
dec
jne
outsl
arpl
je
cmp
or
mov
xchg
adc
in
cmp
push
sbb
adc
dec
std
push
inc
jp
andl
xor
call
mov
or
xchg
pop
dec
inc
or
cmpsb
xchg
mov
loopne
mov
push
rcl
rorl
lret
mov
in
int3
sbb
inc
inc
loop
mov
mov
fidivrl
jg
orl
sub
sub
xchg
push
sub
cli
in
cld
std
pop
mov
push
bound
in
jns
scas
add
xchg
mov
inc
sti
outsb
test
xor
nop
add
adc
jae
fisubl
adc
mov
dec
inc
mul
push
inc
pop
aad
adc
in
ret
pushf
inc
jns
aaa
outsl
jnp
adcl
into
mov
add
pop
mov
iret
lea
and
jbe
shrl
aas
stc
jg
xor
add
mov
dec
mov
ror
mov
in
mov
ret
mov
jg
mov
shlb
push
dec
lds
in
cmp
aad
insb
sarb
into
mov
jmp
push
cmp
icebp
adc
jl
leave
shr
and
iret
lock
ret
push
ud2
mov
sub
mov
movsl
andl
sbb
test
jnp
inc
popa
aas
mov
std
push
insb
pop
fadds
aaa
mov
mov
push
push
and
fisttpl
cwtl
ds
jno
xor
stc
sbb
cmpsb
sahf
jnp
nop
adc
mov
cmp
or
hlt
adc
or
dec
lea
mov
fucomp
jmp
cmp
inc
jge
sti
stos
pusha
push
pop
pushf
lret
mov
inc
jmp
mov
ucomiss
lods
lret
jmp
jns
sub
data16
shlb
jno
and
hlt
shrb
and
cmpsb
inc
cmpsb
dec
lahf
cmp
test
mov
xorl
push
sub
mov
popa
sbb
cmp
xchg
fists
xor
mov
cltd
or
push
insl
jecxz
adc
pop
xchg
adc
pop
mov
push
lret
int3
andl
ret
lds
push
cmp
add
dec
sbb
scas
jp
fisttpl
mov
rcl
mov
push
inc
jmp
cmp
and
mov
stos
pushw
call
movsl
cmp
je
pop
pop
in
faddl
cmp
lret
xor
das
cli
xor
ja
mov
ss
dec
cli
outsb
adc
cmp
lods
mov
dec
stc
shrb
insl
pop
ret
iret
sbb
outsb
cmp
loopne
aam
xchg
cld
mov
xchg
xchg
pop
jb
mov
cwtl
pusha
cmp
into
lods
ljmp
dec
orb
outsl
scas
icebp
imul
ret
jns
mov
jp
jae
mov
mov
add
sbb
add
cmpsl
cmc
mov
add
cli
nopl
mov
into
bound
fbld
fnstsw
jp
jns
dec
push
nop
dec
gs
ds
xor
or
loopne
mov
sti
add
ds
jge
cmpl
push
fcmovnb
jle
push
mov
push
mov
mov
into
mov
loope
insb
mov
jle
xchg
lcall
jle
lea
pop
addr16
jbe
test
xchg
and
xor
out
subl
mov
clc
xchg
sub
fs
sbb
or
stc
ds
adc
dec
enter
add
pushf
loop
mov
adc
cs
xchg
movsl
pop
sbb
inc
out
int3
aad
adc
mov
lret
pop
insb
push
xor
or
xor
and
jge
shll
jge
or
sbb
push
icebp
loope
add
rorl
and
xchg
xchg
mov
je
scas
or
jbe
outsl
dec
add
cwtl
sbb
jl
aaa
add
es
mov
cwtl
pusha
int3
lods
enter
sub
xchg
jmp
dec
jno
sub
cltd
add
lahf
call
mov
mov
in
ret
sbb
cmpsl
shl
rolb
icebp
dec
mov
mov
add
test
mov
call
std
std
popl
mov
mov
xor
insb
aas
mov
fbstp
int
push
jecxz
dec
jmp
sti
or
lret
push
sub
cli
mov
movsl
pop
test
test
std
scas
fdivrp
lods
pusha
mov
cmp
cmp
sti
outsb
sub
loopne
mov
enter
aad
test
and
jbe
mov
scas
mov
mov
mov
sub
daa
pop
addr16
ljmp
pop
scas
add
mov
stos
jne
stos
rolb
pop
adc
dec
decl
mov
jmp
pop
mov
jnp
pop
xchg
jnp
test
push
xchg
mov
out
and
dec
or
sub
movsb
test
scas
std
mov
lods
sub
adc
and
cltd
sti
ficomps
mov
shll
ret
stos
int3
fcmove
mov
je
jbe
psubq
mov
xor
dec
in
fs
xchg
loop
ret
ljmp
fidivrl
dec
adc
mov
cltd
jecxz
int
inc
inc
or
dec
shr
outsb
or
jo
mov
shll
ret
mov
aaa
adc
filds
rcrl
pop
sbb
je
jg
mov
dec
adc
fdivrl
leave
popa
incl
or
xchg
clc
sub
in
in
lock
loopne
adcl
lods
lds
dec
mov
push
sbb
add
insl
lock
mov
movsl
stc
sbb
nop
inc
adc
lods
sub
or
lret
jmp
pop
xchg
call
aaa
inc
push
movsb
inc
jg
push
push
xchg
adc
imul
push
pop
movsl
mov
movsl
and
adc
and
adc
jb
push
inc
or
cmp
push
mov
daa
push
insb
push
movsl
cmp
ret
repz
mov
popl
xchg
fs
or
mov
xor
repz
add
negb
cs
pop
sbb
aad
push
stos
ret
out
inc
xchg
cmp
test
mov
pop
and
sbb
lock
jbe
sbb
dec
fmulp
vmovntps
and
cmp
pop
fildl
push
mov
mov
xchg
ljmp
sub
push
int3
xlat
jo
out
imul
mov
vsqrtpd
adc
push
out
push
mov
xor
je
rcll
pop
mov
push
jmp
cli
jmp
push
jns
cltd
out
push
pop
push
dec
dec
add
adc
cmp
insl
mov
and
iret
popa
data16
pop
push
cmpsl
pop
fadd
insl
incb
pop
mov
xor
sahf
pop
js
scas
scas
xor
mov
add
push
ret
out
xchg
pop
loope
ss
shl
stos
push
lods
sub
xor
ret
and
in
loop
repnz
mov
xor
sub
cli
out
dec
add
cmc
stc
mov
and
push
mov
ds
jle
sbb
inc
cmp
out
adcl
dec
popf
sub
mov
gs
mov
jmp
inc
dec
decb
or
mov
int
xchg
cmp
sti
jecxz
out
loop
xchg
ljmp
ss
and
cmpsb
xchg
jmp
mov
bound
jge
vpor
aas
testb
mov
cmp
outsb
mov
xchg
not
push
cld
addr16
mov
sbb
xchg
cltd
inc
aaa
hlt
out
iret
dec
jae
test
cmp
sahf
enter
mov
out
loope
ret
pusha
mov
mov
and
imul
and
sbb
dec
movsb
out
adc
call
lds
outsb
out
repz
jmp
pushf
cmp
sar
jno
loopne
out
in
xchg
inc
mov
dec
jnp
mov
push
lret
icebp
iret
pusha
pop
add
sub
cwtl
xor
ret
add
lret
cmpsb
stc
pop
inc
mov
jns
pushf
push
addl
shrl
pop
cli
xchg
and
xchg
inc
or
mov
mov
pop
mov
icebp
sbb
fstps
dec
aas
sar
adc
inc
inc
mov
aas
cli
push
loop
jnp
cmp
fstpl
cli
inc
adc
outsb
das
std
push
bound
dec
inc
and
shl
jo
dec
fldt
push
xor
call
imul
pop
pop
mov
out
daa
test
repz
movsl
daa
lret
xchg
xchg
mov
xor
push
ficoms
inc
popf
lea
fisubrl
in
sbb
xor
jge
testb
sub
push
daa
mov
movsl
xchg
or
sti
push
inc
add
sbb
dec
push
loop
enter
xchg
mov
xchg
out
mov
adc
divb
xchg
dec
mov
add
movsl
ds
xchg
sub
add
stos
jno
popf
out
sub
and
rol
test
ret
sub
cmp
xchg
sub
mov
jmp
push
jle
fdiv
scas
mov
xchg
add
mov
imul
jg
push
das
and
cmpsb
push
shrl
insb
cmpsb
lods
ret
loope
bound
test
push
or
and
mov
inc
in
jg
cltd
insl
mov
push
das
cmp
dec
mov
xchg
fnstcw
cmp
std
sbb
dec
adc
sar
lret
lret
xlat
hlt
or
test
adc
pop
add
mov
test
scas
pop
shll
push
js
xor
adc
ds
add
mov
mov
sub
outsl
adc
mov
push
test
xor
int3
jo
testl
fwait
jae
movl
xor
pop
cltd
push
and
cmc
sahf
rcrl
lods
packuswb
or
lods
add
test
mov
sti
pop
sbb
es
inc
sbb
or
xchg
mov
inc
popa
sbb
mov
sub
andb
jnp
fs
call
xchg
push
cmc
dec
pop
test
jge
xchg
clc
int
iret
hlt
lods
cmpsb
repz
push
mov
outsb
dec
dec
repz
push
xor
add
push
imul
adc
inc
gs
cwtl
mov
icebp
add
test
stos
push
push
and
movsb
ds
adc
pop
dec
sub
incb
lret
dec
mov
ja
lds
mov
sahf
jb
mov
sarb
push
sbb
sbb
sub
xor
jle
ret
dec
add
or
sub
int3
pop
int3
lcall
push
dec
testb
fld
icebp
fstps
push
clc
in
or
decl
dec
mov
std
mov
filds
sub
imul
add
int
jl
xchg
scas
lock
mov
cld
and
std
lea
fadd
push
lret
push
enter
sbb
jnp
test
and
adc
in
and
scas
fstpt
enter
fs
in
mov
stos
std
mov
inc
insb
lahf
cmp
jmp
pushf
fucomi
cmc
sbb
cwtl
xchg
inc
xorl
mov
adc
call
push
adc
cmp
push
sub
xchg
xchg
xor
std
lock
jns
mov
mov
fmuls
jle
int3
sbb
push
push
and
mov
dec
sarb
and
out
fiaddl
in
rorb
mov
jle
adc
add
btc
sub
add
shrb
test
rorl
mov
dec
xchg
dec
dec
add
outsb
xchg
add
sbb
jae
push
or
rcrb
out
js
cmp
pop
shr
ret
orb
sub
es
mov
add
imul
sub
fsubrl
call
inc
xchg
dec
test
adcb
fsubrs
clc
pop
out
repnz
or
cli
mov
mov
push
scas
sub
ror
jnp
mov
push
sub
movsl
loop
test
int
xchg
movsl
push
or
lods
decb
push
mov
aaa
lds
imul
push
lds
js
mov
and
sbbb
xchg
orl
push
pop
mov
push
dec
push
sti
das
daa
inc
shll
push
dec
xor
xorl
mov
and
enter
pop
pop
hlt
sub
daa
sbb
pop
movsl
jo
outsb
fcmovne
jle
cmp
sbb
imul
out
out
pushf
xor
sbb
sti
lods
js
push
repz
fcoms
cmpsl
fisttpll
xchg
int3
cwtl
mov
aas
fwait
or
ja
pushf
jp
imull
pop
outsb
push
fwait
and
xorl
pop
jno
sbb
jne
bound
nop
xchg
mov
xor
jne
ret
xorb
dec
inc
movsb
repnz
repnz
ret
cmpsb
stos
cmc
lds
xchg
call
imul
repz
add
es
xlat
lods
jae
out
cmp
in
and
repnz
jge
cmp
xchg
push
cltd
cli
push
xorb
cmpsb
cli
scas
imul
stos
pop
mov
xor
push
xchg
mull
or
loop
and
mov
push
cmp
rorl
pop
test
mov
mov
test
pushf
mov
push
jp,pt
in
test
inc
lcall
fildll
cmp
shll
int3
sub
mov
sbb
xchg
pop
subl
call
orl
xchg
inc
data16
int3
out
data16
dec
cmpsb
push
fs
xchg
enter
lret
inc
pop
sbb
mov
lret
cltd
push
int
xchg
lcall
pop
arpl
lret
mov
mov
repz
fisubl
adc
sbb
mov
xor
ret
int
mov
arpl
cmp
mov
fucom
test
movsl
shrb
ds
aam
mov
loopne
sub
lahf
pop
sbb
pusha
movl
xlat
les
push
rorb
loopne
mov
cli
popf
fs
outsb
arpl
adc
or
insb
jnp
dec
icebp
add
sbb
mov
push
inc
rolb
aam
je
push
lock
xor
call
xchg
xor
push
orl
mov
cli
or
push
push
icebp
negb
cld
push
sbb
jne
arpl
rcl
lret
jmp
fstpt
shll
xor
jp
or
shr
movsb
inc
sti
inc
inc
std
ficompl
lcall
and
mov
and
or
loopne
inc
mov
iret
gs
inc
lock
arpl
mov
int3
jae
cmpsb
xchg
push
push
popf
call
loope
mov
in
jmp
lods
cwtl
dec
mov
in
cmp
pop
sbb
call
cmp
mov
or
fcmovbe
adc
inc
test
mov
mov
inc
cmc
or
sbb
dec
pushf
jbe
dec
push
lock
xchg
enter
pop
push
leave
lahf
sahf
and
xchg
push
push
cmp
xor
bound
jge
and
push
sbbl
or
out
repz
inc
pop
cwtl
mov
ljmp
rclb
movsb
push
movsb
test
sub
cmp
fildl
lods
jo
sbb
in
pop
aam
test
adc
fistpl
dec
inc
mov
cmp
lods
mov
idivl
lret
lret
jp
dec
cli
pop
xor
lahf
cmp
jne
bound
inc
adc
imul
leave
addr16
es
filds
fldt
out
call
aas
jle
jo
inc
mov
pop
repnz
outsb
sbb
jmp
in
out
daa
jg
push
jns
movsb
lret
sub
pop
cmpsl
push
repz
loop
es
mov
cmp
popf
ds
pop
cs
aaa
sub
or
test
cmp
xchg
mov
adcb
push
popa
mov
test
out
xchg
clc
out
mov
sbb
cmp
jp
lahf
enter
or
jp
int3
sbb
and
fdivp
fdivl
xor
cmpsl
sub
mov
fmuls
xor
test
mov
shlb
in
sub
orps
push
jnp
mov
mov
pop
jne
mov
pop
in
divps
lret
dec
mov
movsb
lods
xorl
cmp
mov
xchg
ffreep
push
loope
xchg
outsb
mov
iret
gs
clc
sbb
repnz
mov
mov
jbe
arpl
movsb
stc
mov
lahf
ret
lds
leave
fwait
loop
jns
ds
ret
xor
loopne,pt
out
or
ss
sbb
inc
mov
aaa
cmp
repnz
into
int3
movb
ljmp
movsl
subb
fs
jmp
add
inc
lret
pop
adcb
sub
and
jo
daa
mov
xchg
popf
rcr
fisubrs
lods
inc
dec
lcall
pushf
mov
aad
xchg
sbb
insl
sub
mov
sbb
stos
pop
scas
aad
cmp
repz
lods
push
fstps
jae
idivb
stos
js
out
shlb
fnstenv
mov
dec
adcb
nop
fwait
lods
jecxz
lock
push
jno
mov
dec
push
scas
push
dec
cmp
stc
in
test
pop
jnp
xchg
fdivrs
mov
jnp
ret
iret
cltd
xor
dec
rorb
nop
xor
iret
shrb
pop
xchg
pop
imul
jecxz
bound
leave
inc
aas
sti
push
les
int
negb
testl
int3
lret
in
xchg
push
lods
cwtl
stc
ss
dec
xor
outsb
cs
lret
push
insb
mov
cld
mov
cmp
mov
call
bound
xchg
data16
shll
mov
aaa
push
les
test
jmp
stc
xchg
aas
mov
and
data16
xchg
push
mov
mov
cmp
jle
push
daa
fs
aas
loop
icebp
das
mov
inc
or
pop
inc
je
aaa
sub
scas
cmpsb
adc
mov
mov
test
inc
pop
inc
xchg
daa
add
mov
jnp
jg
fsubs
jmp
xchg
call
arpl
aad
rolb
ljmp
or
adc
dec
ljmp
repz
fisttpll
dec
xchg
or
push
loopne
mov
insl
sbb
decl
inc
pop
adc
dec
insb
scas
add
jb
popa
sarb
jns
mov
lret
or
mov
adc
cmp
xlat
call
push
ret
pop
clc
or
popf
cli
out
xor
jle
test
insl
mov
and
out
in
jle
nop
mov
mov
cmp
leave
scas
xchg
test
fnstenv
addb
aas
or
fisttps
sbb
sbb
out
in
aaa
into
imul
inc
mov
pop
repnz
and
lock
push
mov
mov
shll
ficomps
in
push
push
xchg
sbb
inc
push
popa
outsb
and
popa
arpl
mov
nop
xchg
cmp
xor
and
adc
mov
ret
fsubrl
test
call
popf
and
cmp
and
insb
jae
scas
cld
xor
push
ja
sub
ret
into
or
lret
dec
icebp
mov
jne
andb
jo
mov
cmp
cmpsb
sub
mov
out
xchg
dec
stos
pop
push
test
push
jb
cmp
mov
nop
push
mov
or
jne
add
hlt
popa
xlat
cmc
push
jns
add
dec
mov
jae
sub
stos
lahf
pop
inc
mov
ret
dec
mov
bound
cmpsb
mov
xor
and
xchg
mov
movsb
in
nop
jnp
rorl
das
cmp
lea
dec
outsl
sub
rorb
push
mov
or
mov
mov
scas
cmc
cs
imulb
mov
jae
lods
cmp
stos
push
mov
mov
xchg
test
shrl
pop
xchg
lods
pop
int3
pusha
out
loope
ret
cmp
insb
cwtl
dec
loopne
fiadds
cmp
jo
xchg
cmp
outsl
jmp
xchg
mov
lea
or
add
mov
jl
or
aas
dec
pop
std
loopne
test
fdivl
es
pop
pop
fadds
and
cmpsb
in
lods
push
mov
push
sbb
dec
sahf
cli
jl
in
scas
xchg
lcall
lret
jbe
lret
dec
negb
adc
in
into
int
daa
jmp
sbb
jle
mov
icebp
dec
outsl
cli
shlb
verr
testl
sub
pusha
sub
adc
sbb
bnd
pop
xor
xor
pop
push
lcall
mov
int3
mov
dec
std
sub
add
pop
mov
jo
inc
in
sbb
dec
les
sub
jp
mov
xor
arpl
sbb
or
hlt
mov
sahf
or
sub
cmpsb
pop
iret
call
call
in
cmp
jo
mov
dec
push
in
mov
push
rorl
jb
or
or
out
imul
dec
inc
cmp
mov
jecxz
rcl
push
cmc
sub
push
lretw
inc
ds
mov
cmp
shr
das
rorl
shlb
cmp
add
data16
xchg
xchg
inc
out
adc
adcb
clc
add
sahf
movsb
push
jmp
push
lds
sbb
out
adc
cmp
jns
and
inc
popf
push
mov
pop
xchg
xorb
icebp
adc
sbbl
xchg
xchg
mov
sbb
xchg
sbb
sbb
nop
subl
jp
outsl
fcoml
jl
push
mov
sbb
add
clc
lahf
pop
adc
or
jo
xchg
sub
push
movsb
push
icebp
arpl
sbb
pop
test
lods
xor
int3
sub
pop
xchg
enter
lods
lcall
dec
mov
ds
sub
popf
ret
adc
mov
jno
mov
sbb
test
and
lret
dec
fnstsw
cmp
pop
mov
add
mov
divb
rorb
jae
addl
cld
fisubl
pop
lods
jno
sub
cmp
mov
xor
test
sub
lods
mov
roll
jp
xlat
xchg
lea
cs
xchg
mov
repz
ljmp
mov
stos
sti
mov
jnp
inc
xchg
mov
add
bound
jl
inc
mov
xchg
add
imul
mov
pop
aad
sbb
testl
or
divl
sub
ret
jl
pop
insl
cltd
cwtl
mov
xchg
push
xchg
xor
sub
cmc
and
or
push
dec
mov
dec
popf
sub
lahf
push
scas
or
insb
or
testb
lret
inc
mov
or
arpl
je
and
mov
jg
xor
inc
sbb
es
pop
cmpsb
jbe
pushf
push
sbb
shrb
dec
jnp
xchg
xor
lret
bound
push
lret
push
mov
mov
pop
or
jmp
push
call
scas
lcall
adc
sbb
inc
or
mov
xchg
jne
dec
es
jmp
pop
push
imul
sbb
xor
das
adc
mov
xor
mov
or
jnp
fs
push
mov
insb
fwait
movsl
fs
clc
mov
fwait
push
inc
scas
insb
out
inc
push
xor
out
sti
xor
test
daa
mov
xchg
mov
shll
jle
testl
and
fdivrs
incl
dec
jge
outsl
mov
inc
mov
sarb
into
push
xchg
ret
stos
cwtl
cmp
nop
icebp
cld
xor
pop
mov
cmc
mov
push
jb
sbb
imul
push
nop
scas
jb
xor
shlb
or
or
push
scas
push
push
cmp
frstor
inc
decl
inc
das
add
pop
sarl
out
cmp
iret
js
popf
popa
jae
inc
xchg
rcl
mov
das
stc
xchg
and
shrl
xchg
and
pop
mov
cmp
int3
jno
dec
fwait
fnsave
sbbb
pop
lcall
gs
xor
fsincos
push
nop
xchg
hlt
jno
jle
adc
jecxz
mov
jp
cmp
sub
mov
insb
push
push
dec
insb
rorl
je
movsl
push
out
js
push
pop
push
stc
fiadds
sbb
ret
fisttpll
movsl
hlt
repz
loopne
lds
sar
scas
jg
dec
inc
inc
xchg
int3
and
out
mov
pop
dec
movl
clc
or
pop
mulb
outsb
int
insb
popf
adc
lods
scas
dec
mov
adc
in
int3
mov
movsl
jmp
xchg
pop
mov
mov
test
es
pop
mov
mov
inc
xor
inc
push
jecxz
test
rorb
test
push
jo
jo
in
jo
pop
or
xchg
mov
xor
test
mov
lods
jnp
mov
mov
push
out
mov
dec
sub
mov
push
xor
fstpl
and
mov
mov
rcr
sbb
cmp
mov
mov
rorb
mov
lea
and
dec
jae
dec
lahf
push
cmp
jle
insb
loope
sbb
push
aam
rdtsc
mov
push
pusha
adc
dec
xchg
in
pushf
inc
xor
cli
or
inc
mov
mov
mov
gs
daa
lods
lock
imul
sub
lahf
xchg
mov
mov
mov
or
dec
addr16
mov
rcl
fwait
insl
int3
shlb
fmuls
int3
sbb
fwait
lea
and
dec
scas
movsl
inc
jl
mov
scas
ret
rclb
xor
mov
sarb
pop
clc
push
push
mov
rcrb
iret
push
aas
mov
cli
xor
ja
dec
xor
les
add
and
mov
std
leave
adc
xor
adc
jg
les
push
mov
dec
xchg
sahf
arpl
aaa
pop
movsb
cld
adc
outsl
cmp
mov
push
mov
push
or
cmp
mov
xchg
xor
xchg
insb
cmp
mov
add
jne
dec
pop
jp
cs
pop
popa
sub
and
push
test
mov
pushf
in
hlt
mov
inc
xor
jae
mov
cmp
arpl
sub
dec
pusha
push
and
sub
ficoml
in
ficoml
push
insl
sub
sub
jge
add
pop
mov
ss
andl
inc
test
push
repz
lret
xchg
sub
scas
pop
mov
xchg
clc
iret
and
bound
dec
push
fistps
lea
mov
cmp
fisubl
out
sub
xchg
ret
test
in
add
push
jbe
sbb
mov
scas
fisubrs
aad
or
ljmp
jbe
inc
fsts
ret
adc
push
xlat
inc
mov
imul
fldt
lods
jae
add
adc
push
pop
pushf
push
push
sub
dec
cmpsb
inc
cmpsl
out
and
movsl
nop
push
xor
mov
out
lcall
pop
jbe
mov
in
loope,pt
adc
mov
rorb
imul
push
ret
adc
pop
stos
std
push
into
push
cmpsb
and
dec
arpl
das
out
jne
cs
adc
popf
xor
ja
test
inc
ljmp
into
clc
mov
xor
xor
pop
sub
roll
xor
jp
sbb
pop
and
mov
dec
inc
inc
push
rcl
xchg
xlat
xchg
inc
xor
mov
inc
sbb
insl
jns
fwait
pop
add
pusha
adc
clc
adc
shlb
je
push
cmp
movsl
jb
nop
xlat
dec
lret
shrl
mulb
test
sbbb
sbb
aad
xlat
jle
testb
enter
test
test
sub
add
sbb
jl
loope
pop
xor
int3
mov
lret
mov
insl
mov
dec
orl
mov
les
sar
jge
cltd
pop
mov
pop
adc
ret
lods
stos
jbe
nop
pop
aam
cwtl
sbb
pop
push
xchg
arpl
popa
xchg
repnz
dec
cmp
inc
mov
jns
clc
bound
inc
mov
mov
dec
sar
jns
cs
sbb
inc
mov
test
rorl
inc
lcall
sbb
jge
jl
jp
add
and
fucomp
rcr
xchg
dec
mov
shll
insb
test
addb
jmp
ss
adc
and
in
aad
adc
adc
push
popa
leave
inc
cwtl
and
fmulp
test
ljmp
test
testl
scas
into
cmp
fs
jg
pop
and
clc
dec
mov
jo
movsl
add
push
mov
fs
outsb
and
out
jns
add
mov
inc
mov
imul
sub
mov
scas
mov
inc
inc
test
dec
add
mov
sub
ljmp
push
outsl
movsb
adc
imul
mov
or
in
pop
jmp
pop
cmp
push
std
stc
movsl
xor
pop
out
push
icebp
sbb
push
xlat
xor
cmpsl
xor
icebp
test
lods
ds
icebp
adc
jecxz
xor
add
dec
idivl
or
xchg
outsl
call
xor
lock
mov
scas
sbb
dec
xchg
jnp
push
popa
inc
lea
shll
lods
adc
and
sbb
fiaddl
in
loopne
les
or
in
dec
mov
lret
lods
xchg
rcll
or
mov
subb
mov
hlt
insl
aaa
cmp
push
shrl
add
pushf
stos
iret
cmp
ficomps
dec
fwait
mov
hlt
inc
mov
push
nop
mov
imul
jnp
in
rorb
pop
or
or
roll
xchg
push
jl
in
jo
in
loop
icebp
lods
lret
or
into
incl
insl
jb
adc
xor
ljmp
mulb
mov
fsubl
cwtl
xchg
push
xor
xor
adc
xchg
xor
xor
or
test
adc
jb
mov
idivb
pushl
or
loope
outsb
mov
jmp
cmp
add
lret
jp
cltd
dec
xchg
inc
mov
insl
pop
dec
sbbl
pop
or
cmpsb
hlt
sahf
int3
pop
push
int3
xchg
ds
adc
xor
iret
es
sub
iret
xchg
lock
mov
cli
pushf
repz
cmp
and
or
mov
outsl
in
sub
adc
cmp
and
mov
or
mov
dec
pop
movsl
mov
jne
iret
sbb
pop
pop
into
mov
cmp
pop
ret
data16
sbb
xchg
fwait
push
cmp
leave
pushf
pop
aaa
xor
push
inc
push
mov
adc
pusha
lds
push
sahf
rorl
scas
lds
mov
xchg
inc
pop
ljmp
fidivs
adc
lds
push
lahf
sahf
cld
nop
addr16
fdivrl
ja
out
mov
jp
shll
lret
sbb
adc
mov
xor
inc
into
xor
dec
adc
data16
lcall
call
and
or
stos
ss
mov
xchg
inc
movsl
jmp
lahf
xor
xchg
in
or
neg
gs
mov
test
jecxz
in
out
pusha
sub
mov
or
arpl
shlb
ljmp
cltd
lods
mov
test
pop
aaa
outsb
mulb
jo
les
xor
dec
jb
call
addl
popa
dec
push
sti
bound
aam
sbb
sbb
cmpxchg
into
adc
call
mov
cmp
push
call
dec
pusha
movsb
loop
lds
pop
pop
jbe
push
xlat
outsb
jle
mov
adc
mov
push
iret
movsb
neg
xchg
inc
stos
adc
cmpsb
dec
dec
jp
fs
out
mov
pop
insb
out
jb
lcall
jae
cwtl
ds
nop
jbe
rol
adc
adc
or
gs
inc
xor
mov
pop
inc
xor
ret
pop
mov
xlat
add
sbb
pop
fidivrs
data16
scas
add
lret
xchg
mov
imul
push
lcall
aad
add
xor
cmpsb
pop
dec
mov
scas
int3
mov
mov
out
fwait
pop
mov
sub
xor
vsubps
push
das
popf
cmpsb
mov
ret
aaa
je
inc
pop
lods
fwait
idivl
daa
insb
xor
inc
rolb
jo
mov
fdiv
cld
dec
outsl
nop
lods
xchg
xor
jmp
pop
movb
add
aaa
arpl
testb
sarb
sahf
jge
push
addb
cmp
and
xor
sbb
push
dec
pop
movsl
xlat
pop
aaa
xchg
adc
pusha
xchg
addb
add
jg
fs
or
cmp
xchg
cli
negl
push
lahf
imul
lea
scas
or
jl
mov
add
es
cmp
cmp
sarb
and
cwtl
fisttps
or
rolb
stc
outsl
shll
adc
adc
test
dec
jae
ljmp
decl
insl
xor
cmc
scas
fdivp
adc
lods
push
insb
adc
inc
fstpt
iret
sub
sub
lret
or
ds
stos
das
test
mov
sub
mov
shrl
cmp
sbb
xor
mov
sbb
frstor
adc
fidivrs
and
fwait
lock
adc
or
add
iret
dec
push
and
dec
cmc
mov
pop
xor
js
loopne
inc
je
bound
ljmpw
and
push
ds
loope,pt
or
je
imull
or
mov
cmp
add
mov
mov
sbb
lock
lcall
adc
jnp
push
sub
xor
xchg
sbb
sub
stos
cmp
cmpsb
js
push
popf
in
ljmp
stos
add
cmp
add
das
scas
and
push
stc
std
sbb
xor
test
rcll
sub
xchg
xchg
and
rcr
insb
les
ret
aaa
dec
test
aad
pop
lock
mov
xchg
mov
aad
sbb
jp
hlt
lahf
repz
ret
clc
rorb
js
push
clc
repnz
sbb
jg
addr16
cmc
mov
fbld
fsts
pop
fildl
das
dec
lods
iret
hlt
nop
iret
mov
outsl
pop
xor
sbb
repnz
dec
inc
lods
iret
mov
dec
sub
sbb
test
xor
pop
pusha
faddl
std
adc
adc
add
adc
jg
movsb
xor
and
dec
dec
fisttpl
dec
pop
adc
hlt
jnp
adc
dec
xor
dec
and
das
jne
fwait
shlb
add
mov
cmpsl
push
add
in
xchg
xchg
movsb
sub
enter
fstps
mov
imul
shrb
pop
insl
popa
push
inc
movsl
push
mov
lods
rcrb
sub
push
xor
je
daa
out
sti
push
lea
pop
add
int
sbb
push
sar
jle
and
popa
add
push
mov
push
add
cmp
icebp
out
pop
xlat
sub
push
jl
fadds
sti
sub
shll
or
push
cmp
dec
pop
jmp
xchg
pop
mov
mov
test
mov
inc
mov
mov
xlat
pop
subb
mov
pop
mov
imul
fdivl
lret
and
push
dec
in
addr16
stos
andl
pop
pop
cmp
xchg
cmp
adc
push
mov
add
lcall
jno
lock
arpl
insb
mov
test
jns
dec
push
jb
mov
insb
inc
xorl
inc
enter
sub
bound
mov
imul
push
mov
insl
mov
int3
jmp
cmp
mov
add
ja
jge
xchg
dec
imul
imul
or
and
cmp
filds
sbb
xor
ds
jmp
incl
test
lcall
push
mov
mov
das
lock
and
loopne
xchg
xchg
xchg
xchg
xchg
lret
xor
ss
nop
jb
inc
loope
cmp
add
sbb
push
and
ja
and
mov
jge
popf
jle
adc
inc
mov
lods
mov
scas
push
pushf
ret
call
fidivrl
outsb
out
psubusb
jbe
mov
and
fwait
cmpsl
enter
out
test
pop
sbb
bound
lahf
adc
dec
mov
xchg
cs
fistpll
jmp
mov
push
sbb
or
push
pop
inc
mov
add
cmp
mov
lcall
cmp
xor
pop
shr
inc
sub
add
sti
clc
mov
sbb
ss
sbb
xor
in
xchg
popl
adc
data16
cmp
xchg
and
orl
ljmp
rcll
cld
mov
addr16
add
shlb
jne
call
lret
js
mov
mov
rcrb
int
mov
pop
ja
scas
mov
cs
loop
test
imul
dec
pop
sbb
cmp
shrb
jb
push
addb
pop
and
push
and
lds
mov
mov
jge
xchg
ja
adc
mov
sub
sbb
int3
arpl
or
mov
or
inc
mov
daa
push
fmulp
test
outsl
or
test
cmpsb
push
push
mov
in
cmpsl
xchg
clc
sub
imul
hlt
xchg
xchg
fdivrl
jle
push
js
test
andb
jmp
mov
es
js
xor
shr
cmp
and
inc
lods
fidivl
ja
imul
pop
sbb
popf
inc
pop
inc
mov
cmp
push
lret
int
push
cmpsl
lahf
jo
pop
mov
inc
addr16
lcall
js
jg
xor
jbe
sub
xchg
pop
daa
jnp
das
sbbl
dec
mov
out
adc
ret
fldt
push
loop
mov
test
scas
outsl
jne
repz
jo
sub
inc
sbb
adc
lock
test
dec
and
lcall
repnz
sub
pop
xchg
dec
sub
pop
and
push
fisubrl
cmp
fsubl
cmp
and
in
push
push
adc
sbb
inc
dec
or
push
mov
mov
add
call
loop
mov
xor
loope
in
mov
loop
pop
movsb
aad
mov
adc
cmpsl
mov
add
pop
add
call
inc
les
mov
mov
test
mov
or
cmp
mov
lahf
lret
push
dec
adc
inc
push
mov
lock
pop
in
jp
frstor
or
inc
dec
or
add
cmp
push
in
js
pop
mov
xchg
iret
hlt
call
mov
mov
das
sub
dec
rcrl
mov
packssdw
add
arpl
mov
imul
call
lds
pop
dec
loopne
dec
and
shrl
pop
inc
fsubs
out
iret
outsb
jge
das
jae
repnz
clc
mov
push
enter
and
dec
bound
negb
xor
xchg
xor
add
cmp
cmp
js
pop
fstpl
test
call
daa
pop
push
xor
push
stc
cs
mov
in
push
mov
xchg
enter
mov
nop
ds
test
cmpsb
scas
ljmp
xor
cmp
lret
aas
fwait
xchg
or
jecxz
loop
mov
fcmovne
popa
fptan
push
pop
sub
mov
push
cwtl
insb
jno
mov
adc
out
push
cmpsb
movsl
push
aad
cld
and
repz
mov
lds
or
incb
aad
cmp
and
out
dec
add
jno
hlt
fcmove
jae
add
popa
iret
or
mov
jl
andl
imul
xchg
jbe
adc
test
lds
push
cwtl
movsb
xchg
jno
outsl
mov
xchg
popa
xor
shrb
mov
inc
inc
test
jmp
xchg
fdivs
pop
sbb
bound
dec
mov
sti
mov
jge
rcrb
hlt
ss
cwtl
push
dec
call
stos
fiadds
mov
xchg
sbbb
push
jne
push
fdivr
sub
sub
ret
cmpsl
jb
fnstsw
inc
lahf
adc
scas
jg
adc
mov
pushf
push
enter
orb
fwait
out
sbb
push
add
popf
daa
inc
movsb
repz
push
icebp
and
shll
adc
int3
jno
sub
roll
mov
lock
cmp
std
push
xor
in
and
movsb
or
sti
movsb
shl
jecxz
xor
sub
into
xor
sub
mov
push
ret
mov
mov
outsb
sub
mov
sub
adc
mov
pop
ret
mov
call
nop
test
outsl
int3
insl
stc
addr16
mov
mov
es
cmp
unpcklps
mov
testb
stos
cs
movsb
mov
ret
outsl
lret
lahf
jecxz
rorl
lahf
adc
mov
dec
daa
mov
mov
ret
divl
ret
mov
loop
mov
jp
add
enter
or
lods
jge
xchg
into
sbb
pop
inc
jne
shl
jnp
dec
and
fisttpl
xlat
pop
or
sbb
outsl
ss
mov
cmpsb
mov
pop
stos
mov
dec
loop
push
hlt
daa
lock
ret
inc
imulb
xor
push
int
arpl
jge
stos
mov
cmp
fdiv
js
jp
vpunpcklbw
aam
pop
test
lcall
lock
mulb
ja
jbe
mov
dec
mov
jle
fwait
pop
jge
pusha
fwait
shrb
in
int3
sarl
mov
xchg
dec
adc
test
inc
aad
jae
insb
jp
stos
fldcw
lods
adc
mov
lds
mov
shlb
dec
insb
repz
adc
out
dec
push
dec
int
notl
mov
bound
dec
insl
or
cmpb
sahf
and
pop
inc
and
cmc
dec
pop
jno
je
jb
pop
lea
clc
hlt
outsl
aad
pop
iret
call
or
out
outsb
push
int3
ret
mov
fld
push
subb
out
dec
in
or
clc
push
cmp
notl
jbe
mov
retw
insb
xor
mov
mov
aam
mov
push
jno
fiadds
insl
pop
imul
sub
sbb
jecxz
xchg
imul
mov
push
test
clc
sbb
cli
mov
call
imul
insb
mov
imul
shrb
cwtl
fidivl
mov
mov
dec
pop
roll
icebp
add
rolb
pusha
sub
pop
and
adc
mov
mov
pushf
mov
push
repnz
mov
faddl
mov
inc
and
out
push
movsl
mov
pop
pop
cmp
cmp
loopne
pop
cmp
fimuls
xor
lods
mov
lret
mov
cli
negb
sub
gs
fisubrl
arpl
jbe
outsl
adc
and
xor
push
and
icebp
iret
push
jmp
lock
shr
cmpsl
jle
lods
xor
aam
loopne
adc
enter
push
scas
mov
cld
pusha
dec
xchg
adc
pop
mov
gs
js
incl
test
xor
call
fnsave
add
pop
adc
inc
jae
push
adc
inc
inc
aas
push
mov
jne
aad
in
jmp
mov
test
push
dec
and
mov
cmp
popf
fs
andl
pusha
pusha
xchg
or
out
faddp
and
sbb
shrb
dec
lods
or
adc
sub
push
data16
pop
jmp
xchg
adc
fbstp
mov
lcall
xlat
outsl
mov
aas
or
pop
push
jns
mov
rorb
sti
in
mov
sbb
jle
sbb
fwait
jno
push
mov
add
xchg
push
adc
test
add
xchg
or
or
pop
or
fsubl
imul
and
pushf
cli
or
test
jae
mov
xor
jecxz
push
and
fcmovnbe
mov
and
xchg
imul
push
into
mov
pop
filds
or
pop
mov
jne
in
popf
ja
add
sbb
sarb
or
std
arpl
mov
stos
jecxz
pop
fs
sub
ljmp
adc
and
in
pop
cmp
lock
sbbl
xor
bound
mov
adc
jbe
push
adc
sub
mov
mov
push
inc
and
dec
jbe
arpl
stc
stc
cmp
imul
das
test
out
add
mov
sub
inc
and
add
mov
das
jns
out
mov
lods
cs
xor
das
popf
and
xchg
lea
push
addr16
imulb
jmp
or
hlt
into
int
jecxz
mov
movsl
inc
mov
cmp
xor
pop
jg
lret
clc
pop
icebp
lds
aad
pop
arpl
daa
jl
out
test
dec
pop
pop
dec
pop
addb
inc
sbbb
sbb
bound
add
pop
fmul
xchg
inc
push
add
jge
repnz
testl
add
push
shrb
push
inc
pop
push
mov
add
jl
push
aam
push
jg
ss
outsb
lds
or
cmp
insl
mov
cli
stc
cmpsl
inc
sub
pusha
adc
xor
mov
cld
enter
lds
jl
xchg
ss
push
scas
leave
mov
lea
mov
mov
pop
jmp
jns
inc
push
pop
std
sub
jecxz
insl
xor
shll
dec
orb
aas
pop
xorl
jmp
mov
push
jbe
sahf
sub
jae
cmp
es
add
xchg
and
dec
push
sbb
add
dec
outsb
cmpsb
push
test
shll
jecxz
test
faddl
sub
fildl
jecxz
nop
das
sub
mov
jecxz
add
lock
movsb
xchg
cltd
out
es
adc
pop
mov
push
in
sub
sub
clc
mov
imul
lock
pop
lahf
clc
outsb
data16
mov
std
popf
insb
mov
fcoml
cs
test
imul
adc
lcall
mov
push
push
mov
sub
sbb
sub
icebp
lahf
insb
mov
ja
pop
or
iret
mov
test
in
insl
in
incl
aas
push
ss
jl
adc
adc
jg
xor
imul
xor
mov
mov
gs
sti
xor
les
adc
sub
mov
popa
cmpsb
lds
add
mov
inc
fcoms
dec
mov
pop
mov
xchg
dec
sub
jne
mov
inc
mov
and
mov
mov
out
scas
stos
ret
mov
xchg
mov
push
adc
cmp
fists
shll
pop
mov
sbb
xor
inc
push
jmp
test
movsb
int
outsb
push
mov
test
rolb
cmp
jbe
pop
xor
popa
push
xchg
mov
shrb
and
ljmp
and
ficoml
cli
push
les
fcomi
cmp
mov
push
imul
fs
fcoml
pop
inc
mov
cwtl
push
jb
push
pop
scas
cld
jno
jecxz
mov
repz
xor
arpl
jnp
shlb
loope
ss
cmp
cmp
xchg
pop
adc
pusha
jle
sub
sbb
jp
stos
push
add
mov
lret
rcll
lods
mov
and
cld
daa
arpl
into
jnp
mov
fisttpl
adc
push
out
fxch
cmc
imul
scas
aad
shlb
cmpl
nop
cld
push
pop
cmp
push
xchg
push
aad
ja
push
xchg
jecxz
ljmpw
cwtl
sub
add
stc
rcl
pop
mov
push
mov
sarb
cmpsb
mov
push
cmc
out
add
mov
jl
stos
inc
call
jp
sbb
repnz
xor
and
cmc
sub
mov
cmp
stos
xchg
add
mov
cmp
mov
imulb
mov
sahf
pop
push
loope
jle
mull
cmpsl
mov
inc
sarb
sbb
lods
out
add
fwait
scas
lods
rol
test
inc
movsb
ja
out
arpl
jl
fisttpll
es
sarb
xchg
xchg
jno
cmp
and
lgs
adc
dec
mov
iret
push
ss
xchg
or
fdivrl
jo
adc
or
or
sar
sbb
cwtl
arpl
bound
outsl
dec
bound
adc
pop
jp
cmp
test
sub
leave
inc
mov
cmpsl
into
pop
mov
pop
sub
iret
imul
out
mov
dec
cmp
cmp
rol
and
pop
mov
fldenv
out
addr16
push
ds
fcoml
mov
cmp
sub
xor
mov
dec
push
adc
mov
sbb
fsubl
mov
xchg
jo
sbb
mov
loop
adc
in
cld
rcll
mov
or
and
test
mov
stc
loope
mov
test
jo
dec
xor
cli
xor
xchg
and
mov
popl
insb
and
lcall
push
mov
stos
add
rolb
push
xchg
push
xchg
mov
cmp
or
inc
adc
sbb
ss
movsb
add
cltd
insl
test
dec
xlat
fidivl
cltd
xor
int3
loop
cmc
outsl
insl
cmp
push
addr16
scas
popa
ret
inc
pop
out
mov
cmp
jecxz
push
and
cmp
mov
jb
mov
cld
xchg
xor
das
in
mov
insb
daa
adc
jecxz
movl
jl
xor
adc
outsl
or
clc
pop
jnp
loop
cld
inc
mov
repnz
cld
pmaddwd
test
es
fwait
jne
xor
sbb
lock
mov
or
les
pop
push
add
lea
mov
fimuls
lret
std
into
es
mov
sub
imul
xlat
stos
push
mov
xorl
mov
add
pop
cld
sub
push
jo
in
aad
lahf
xor
arpl
movsl
and
mov
lret
pop
and
dec
add
call
mov
out
cwtl
mov
jmp
stc
ds
mov
gs
out
out
lret
mov
scas
sbbl
dec
ja
cmp
arpl
pop
mov
sub
fadds
or
adcb
gs
test
outsb
in
xorb
and
xchg
nop
subb
or
addr16
mov
mov
or
jne
mov
push
cmp
in
cmp
cmp
das
dec
addr16
fisubrl
xlat
cmp
add
clc
ss
rol
and
mov
outsl
out
fwait
shrl
jge
or
adc
loope
movsb
xlat
call
sar
xchg
lcall
fistps
jae
movsl
call
fs
push
cmp
pop
gs
xchg
mov
stos
popa
sub
add
and
push
bound
std
aaa
fbstp
inc
xlat
cmc
repnz
ds
sub
push
mov
stc
lret
inc
xchg
mov
xorl
ret
mov
mov
ljmp
aam
inc
sbb
push
fiadds
adc
inc
jg
xchg
mov
add
int3
jge
pop
dec
adc
sbb
std
cwtl
xor
xchg
insl
xor
clc
mov
leave
pusha
adc
inc
mov
push
pop
adc
outsl
xor
pop
cmp
jle
popa
sbb
jne
mov
rolb
sub
cmp
dec
ds
xor
lods
call
or
jl
mov
and
nop
mov
lahf
inc
insb
dec
push
adc
test
lds
fwait
xor
jo
outsl
xor
dec
out
ficoms
cltd
shll
ss
aas
int3
sahf
inc
cmc
rcl
inc
sub
scas
add
stc
jmp
lahf
cmp
faddp
shl
arpl
mov
push
mov
or
and
sbb
adc
ret
out
ljmp
jnp
inc
fstpt
movsl
jecxz
jno
pop
dec
xchg
hlt
sahf
add
int
jl
jns
dec
fiadds
outsb
xchg
jmp
add
popf
push
imul
mov
out
mov
je
cli
aaa
lds
sub
cmp
xor
pop
jno
std
mul
jg
mov
in
loop
es
rcl
in
jle
movsb
inc
and
sbb
rorb
pop
adc
cli
cli
mov
fcoml
pop
jne
dec
and
adc
sub
mov
out
testb
xor
dec
sub
ficoms
lcall
aad
adc
xchg
mov
shll
pcmpgtb
je
repz
ret
rolb
fchs
xor
mov
in
mov
jbe
lds
sbb
jb
clc
pusha
add
es
mov
sahf
hlt
xchg
xchg
mov
frstor
lret
inc
sbb
or
dec
mov
pop
cltd
pop
pop
lret
pop
cld
test
cmp
mov
je
movsl
adc
xchg
mov
shrb
or
adc
sub
pop
xchg
sbb
ret
jnp
repz
inc
mov
lcall
xchg
decb
fisttpll
xchg
xchg
les
xor
or
add
fisubs
inc
push
stos
ds
mov
fdivs
fdiv
rcl
mov
pop
dec
cli
adc
jmp
mov
sarl
ljmp
dec
push
insb
sahf
adc
out
scas
push
pusha
jnp
cmp
mov
cli
outsb
adc
movsl
leave
mov
xchg
adc
in
mov
js
adc
cmp
and
lret
push
jnp
add
mov
in
nop
jmp
test
xchg
xchg
das
int3
jl
pop
dec
pop
ds
sahf
jl
pop
mov
cmp
clc
sbb
lcall
ret
xor
jae
incb
fdivs
cmpsl
dec
jb
cwtl
mov
mov
sub
and
xor
jb
out
pop
mov
add
cli
lods
xor
icebp
dec
xor
sub
mov
in
cltd
loop
xchg
scas
push
push
lea
inc
jl
push
ret
mov
add
lret
stos
xchg
and
cs
arpl
adc
test
call
shll
and
and
dec
inc
es
xchg
clc
dec
inc
shrl
mov
out
cmp
pop
lahf
lods
sbb
aas
test
or
sub
xchg
inc
jo
cmp
cmp
ss
add
aam
xchg
mov
stos
mov
cwtl
mov
xchg
sbb
jmp
je
mov
dec
cmpb
mov
sbb
add
push
dec
dec
repnz
xor
mov
stos
cmp
push
pop
fisubrl
mov
faddl
xchg
enter
pushf
add
xchg
mov
std
jae
inc
cmp
push
pop
pop
flds
out
pusha
hlt
mov
orl
jge
fsubs
addr16
stc
loop
push
dec
test
in
cli
cmp
adc
sbb
mov
inc
out
test
jnp
sbbl
fsubrp
aad
out
xor
dec
push
dec
xchg
fmull
sbb
jae
mov
cli
fdivrl
outsl
fs
rcr
sbb
in
daa
xchg
mov
in
adc
mov
lahf
xor
lds
stos
out
sbb
lea
mov
icebp
mov
out
or
xor
fidivrl
outsl
push
sahf
jp
adc
fcmovnu
stos
xchg
ret
loope
std
mov
push
mov
xchg
mov
and
loope
lea
add
sarl
adc
popf
stos
insb
sub
popl
insl
xchg
pusha
ds
cmp
in
jp
lds
lds
pop
mov
int
push
hlt
loop
adc
pop
insl
inc
sub
push
fwait
sub
loop
out
lods
pop
aam
sbb
and
xor
out
mov
mov
sbb
pop
fwait
lods
dec
out
stc
popa
scas
sbb
daa
or
push
imul
mov
mov
xchg
cmpsl
mov
sarb
cld
scas
arpl
icebp
sbb
mov
inc
mov
decl
mov
repz
jns
cmp
mov
int3
xchg
shlb
and
pop
jmp
mov
sub
aad
jb
jmp
test
inc
xchg
int
push
xor
adc
out
out
scas
call
add
sahf
pop
scas
cmp
data16
add
popa
xchg
mov
cmpsb
push
dec
jp
bound
cltd
faddl
in
xor
mov
cmpsl
imul
int
div
shlb
fstpt
jge
inc
outsl
movsl
push
dec
in
subb
mov
lret
push
mov
sbb
push
mov
in
push
mov
fisubrs
jle
in
mov
aam
sbb
adc
dec
subb
xor
cmc
stc
test
sub
js
int3
adc
popf
push
mov
pop
cmp
xor
jmp
or
rorl
cmp
mov
mov
mov
insl
lods
mov
rorl
pop
push
shl
pop
adc
cmpsl
int
xchg
popl
push
xchg
lds
xchg
sahf
dec
xchg
cmp
sub
movsl
rolb
cmp
pusha
sub
push
jne
std
push
popf
jae
int3
daa
lds
or
dec
xchg
sti
mov
cltd
scas
xor
lahf
mov
subb
mov
jecxz
lahf
fucomip
xor
sub
enter
dec
outsb
mov
lret
jg
sahf
movsl
movsl
cmpsb
add
jns
jg
jmp
push
xor
out
icebp
iret
arpl
adc
mov
mov
lret
xor
pop
out
lahf
imul
movsl
mov
cmp
ret
jb
or
jns
aad
jo
mov
lcall
outsl
jbe
push
and
pushf
dec
mov
and
mov
mov
xchg
bound
sub
jae
xchg
cmp
pop
mov
lret
movsb
test
popf
dec
jne
xor
nop
mov
dec
mov
movl
sub
dec
out
mulb
sbbb
mov
pop
cmp
inc
lock
stos
mov
sub
xchg
shll
xchg
add
in
cmc
lods
ficoml
sbb
test
pop
in
push
aas
add
or
cmp
xchg
add
ds
in
cs
dec
je
addr16
shrb
mov
ja
mov
sub
mov
inc
cmp
mov
std
enter
out
push
pop
repnz
sub
push
outsb
add
mov
mov
roll
das
inc
push
int
dec
mov
fwait
sbb
xchg
sahf
xor
ror
pop
das
jl
cmp
inc
arpl
xchg
out
cs
inc
out
iret
sbbb
sti
popf
adc
add
daa
int3
mov
push
adc
push
rol
or
jge
adc
fstl
add
or
fistl
xchg
mov
repnz
call
sti
jl
jnp
xchg
and
jl
fdiv
jle
sbb
inc
psubq
xchg
pushf
cmpsl
pushf
jg
push
push
pop
jg
xor
leave
rcrl
adc
repnz
jp
add
lret
sub
jle
imul
pusha
xchg
jbe
icebp
ss
fldenv
hlt
aam
add
adc
mov
or
dec
sbbb
sti
lock
cmpsb
add
pop
jl
mov
iret
aad
faddl
push
pop
popf
adc
leave
xchg
xor
movsl
outsb
cmp
xchg
in
mov
and
lods
and
mov
rolb
shrl
mov
fmull
cmp
xor
pusha
lret
jp
add
js
xlat
out
or
xor
hlt
in
xchg
push
mov
jno
cmp
xor
push
xchg
test
in
mov
es
mov
popf
out
xlat
dec
nop
mov
cld
push
pop
sbb
jp
rorl
push
into
push
xchg
add
loope
mov
imul
cltd
mov
leave
sub
mov
sub
mov
in
jo
int
rorl
ljmp
push
int
cltd
enter
or
dec
adc
mov
cmpsl
xchg
jle
cld
ds
dec
jg
stos
pop
rcll
or
fwait
mov
outsb
sbb
mov
lret
cmp
pop
push
fdivs
add
jecxz
aam
mov
dec
or
movsbl
cli
dec
mov
pop
stos
int
push
sbb
xor
fmull
adc
jns
gs
push
and
jbe
imulb
fdivl
leave
jns
dec
jl
aad
or
cmpsb
ljmp
test
dec
fmulp
xchg
cmp
cmp
and
dec
cmpsb
or
sub
fdivrl
into
cmp
lods
push
out
sub
pop
ja
add
je
xchg
cmp
dec
jecxz
mov
cmc
or
lahf
iret
jmp
outsl
arpl
inc
push
out
rolb
push
js
out
imul
pop
cmpsb
or
add
repz
rorb
push
loopne
fs
jb
adc
out
ret
xchg
adc
and
loope
dec
int3
cmpsb
cmp
mov
mov
sub
outsb
movsb
xchg
xorb
sar
call
xchg
je
cmpsb
xchg
mov
add
add
sub
mov
add
movsl
or
add
inc
daa
adc
or
sbb
cld
ret
sub
lock
adc
or
pop
lods
sarb
jne
cs
jo
or
sbb
add
cmc
mov
inc
cmp
pushf
nop
sub
xor
call
mov
cmp
mov
cmp
clc
mov
inc
out
mov
dec
imul
dec
dec
fs
testl
ficoml
add
int3
pushf
mov
std
call
sbb
mov
sbb
pop
mov
jecxz
pop
adcl
leave
das
pop
inc
scas
loopne
call
dec
push
xchg
fdiv
js
outsl
nop
or
jl
fmul
add
sbb
push
pop
fnstenv
push
insb
int3
test
adc
rcrl
mov
insl
leave
cltd
out
mov
jle
fists
add
lds
mov
lea
jle
lea
sub
lock
push
and
xchg
push
clc
ds
insl
jg
or
aad
aaa
push
sub
call
add
cmpsb
add
pop
dec
imull
imul
inc
mov
imul
push
iret
scas
push
or
or
jo
pop
imul
lds
in
pop
rolb
clc
cmpsl
pop
pop
test
jno
mov
mov
sub
jns
cwtl
pop
adc
in
inc
pop
sub
mov
pusha
cmc
cmp
dec
mov
xor
aaa
jbe
pop
and
lods
pop
dec
gs
shr
lret
aam
jle
inc
or
cwtl
xchg
jb
xor
ja
cld
rcr
jne
jl
setl
inc
fmuls
jle
loope
cmpsl
add
loop
xorb
cltd
mov
adc
dec
fwait
jno
jg
clc
decl
adc
shrl
loop
and
fwait
movsl
and
inc
inc
arpl
roll
rcr
int
mov
sbb
repnz
into
sti
jnp
ss
in
mov
mov
sbb
add
inc
loopne
jge
movsl
iret
or
daa
add
sub
jg
mov
jae
push
imul
jmp
sub
and
cmp
pop
lods
aaa
pop
bound
xlat
push
inc
cmc
scas
jne
and
inc
xor
arpl
aam
loopne
sbb
and
cltd
inc
jno
xchg
or
test
sti
lcall
sbb
pop
adc
in
jns
dec
test
fs
mov
hlt
aaa
loopne
or
mov
push
aas
aam
jo
imul
pop
sub
bound
dec
fidivs
stos
sub
enter
enter
jecxz
mov
fs
int3
cs
clc
fdivrl
add
and
pop
lahf
jl
or
adc
xchg
sahf
adc
jg
rorl
stc
dec
and
xchg
jb
mov
jl
nop
and
mov
pop
in
es
out
ret
mov
push
lock
ljmp
push
test
xchg
gs
adc
xchg
jb
sub
fxam
stc
test
or
and
addl
and
arpl
idivl
aam
insb
popa
lret
jle
cli
jnp
jbe
int3
dec
mov
cmpsb
lods
push
or
ret
push
push
and
pop
xor
rol
or
xchg
es
arpl
div
js
dec
mov
stos
jle
dec
fdivrl
cmp
mov
push
movsl
push
mov
pusha
jmp
mov
shl
xchg
pushf
inc
mov
divb
mov
int3
add
mov
daa
ficomps
cli
push
out
gs
and
cmp
fdivs
adc
sbb
and
pop
cmp
lock
pop
mov
xchg
test
adc
dec
cmp
and
cmp
aam
mov
loop
inc
in
dec
fdivp
inc
imul
orb
lods
addr16
cmp
and
lret
xor
in
xchg
daa
dec
mov
mov
daa
jl
mov
nop
adc
shlb
pop
mov
sub
es
xchg
xchg
lahf
mov
pop
push
push
popa
mov
popa
add
add
mov
fisubrl
xor
and
xor
stos
pop
pop
jge
leave
call
add
sub
ja
and
mov
and
in
fwait
in
pop
leave
adc
out
mov
in
in
test
iret
lods
stos
das
pop
jbe
push
push
push
movsl
cmp
aam
xchg
nop
cwtl
cmp
cli
xchg
jp
filds
sbbl
add
cmp
leave
xor
es
jl
cmc
ffree
mov
xor
lahf
pop
xlat
in
jg
stc
fs
dec
test
mov
fnsave
aaa
jge
rclb
sti
mov
lea
add
lea
push
mov
int
loope
test
push
adc
addr16
outsl
jp
push
jp
jae
pusha
js
arpl
or
add
pusha
xchg
leave
mov
xchg
xor
mov
push
push
xor
mov
andl
shlb
dec
jge
xchg
xor
jo
mov
add
fwait
in
dec
sub
push
push
push
fadds
dec
adc
cs
mov
fwait
add
sbb
pushf
insb
pop
mov
repnz
or
ljmp
mov
xchg
stos
sub
div
jno
sub
imul
mov
test
movsl
adc
xor
fists
cwtl
imul
outsl
mov
ret
ss
pop
mov
mov
ljmp
out
outsb
and
jbe
mov
leave
mov
push
sbb
cmp
xlat
lcall
or
clc
mov
pop
mov
sbb
int3
movsb
in
cmp
pop
mul
ja
adc
inc
arpl
mov
mov
jo
pop
jmp
sub
call
mov
pop
repnz
xchg
and
xor
mov
test
outsb
out
out
enter
sbb
test
outsb
pop
mov
jne
shll
jl
jo
adc
bound
jecxz
sub
es
mov
dec
lret
out
fsubrs
insl
cmpl
xchg
insb
cs
jle
push
push
pop
popf
ficoml
fstenv
lea
and
movsb
fidivrl
sub
fistps
loopne
adcb
int
repz
pusha
pusha
mov
cmp
ja
jo
cmp
inc
cmpb
fstl
rcll
or
jg
cmp
das
jbe
cld
aam
and
in
mov
add
popa
mov
iret
push
xchg
out
mov
daa
je
stos
cmp
mov
adc
mov
push
fiadds
jns
in
test
sub
cmp
sub
mov
popf
sbb
jmp
or
adc
test
add
mov
rorb
ss
in
add
add
cli
fstl
fs
sahf
jg
dec
and
stc
aaa
pop
mov
mov
sbb
jbe
push
pop
mov
js
push
sbb
test
push
ficomps
jbe
push
mov
stos
dec
daa
mov
shr
cmp
pop
xchg
movsl
divb
push
popf
push
xor
adc
testb
ret
aam
ljmp
mov
jge
jecxz
leave
inc
sub
sub
insl
cld
in
cltd
push
pop
push
aad
cs
dec
or
popa
nop
push
loopne
fyl2x
inc
lds
cwtl
ss
and
xchg
out
or
mov
mov
mov
mov
repz
mov
jo
cmp
push
mov
in
mov
or
mov
orl
jle
ljmp
ret
pop
mov
push
cmp
jl
arpl
or
xor
ljmp
aaa
xor
test
and
pop
xchg
mov
dec
dec
into
test
pop
cmp
movl
and
repnz
sbb
xchg
lret
and
fldt
cltd
add
jg
fistl
mov
pop
xchg
mov
outsb
jmp
mov
cmpsb
cmp
xchg
in
jbe
arpl
out
outsb
push
sbb
pop
fcompl
and
in
jmp
faddl
jnp
insb
push
roll
xor
add
add
sbb
push
sub
sahf
loop
mov
mov
notl
call
scas
or
jl
popa
lods
and
cmpl
push
leave
js
sub
aad
xchg
repz
push
into
mov
xor
add
shrl
mov
lcall
movsl
cmc
cli
jl
lods
lds
adc
cmc
inc
jecxz
mov
aad
add
dec
fsubrl
in
rclb
cmc
adc
gs
lret
gs
mov
jle
pop
leave
iret
mov
data16
push
sarb
insb
stos
ljmp
cs
rcl
gs
stos
jle
pop
sub
cltd
cmp
sbb
mov
cmp
fwait
clc
movsl
inc
scas
ja
je
or
ljmp
pop
fwait
dec
bswap
xorb
or
adc
xchg
pop
fstpt
test
pop
adc
inc
pop
in
jnp
mov
push
push
popa
xor
add
cld
mov
dec
jno
je
sbb
xor
xchg
and
test
and
xchg
cmp
xor
lret
xchg
mov
and
inc
xchg
dec
lret
cmp
les
pusha
sbb
sbb
pop
inc
or
and
dec
loop
push
push
out
pop
mov
sbb
jge
ljmp
out
push
or
test
imul
jae
gs
xor
mov
cld
cli
fiadds
push
popf
out
jle
mov
inc
and
mov
cmp
iret
lahf
and
cmp
pop
ror
imul
movsl
pop
jnp
test
les
sahf
leave
mov
in
pop
adc
lds
insb
bound
adc
jg
sub
mov
mov
pop
aas
xchg
push
sub
insl
adc
std
jno
inc
lods
or
les
mov
push
dec
push
xor
jecxz
xchg
cmp
sbb
orl
gs
dec
les
add
sub
test
ret
add
adc
outsl
insl
mov
hlt
push
fisttpl
test
std
lock
sub
inc
xchg
in
rolb
cwtl
stc
mov
mov
push
sbbb
pop
aas
pop
pop
dec
mov
adc
insl
and
lahf
mov
rcl
mov
jne
je
ja
mov
cmp
or
mov
mov
scas
idivb
mov
push
mov
jne
mov
mov
lret
out
push
pop
xchg
mov
or
add
dec
es
pop
jmp
out
or
outsl
xor
adc
xlat
sub
mov
jg
sbb
add
xchg
xchg
push
mov
pop
in
sbbb
sti
dec
mov
adc
ljmp
dec
fcoml
les
test
sbb
push
aad
xchg
outsl
faddp
pop
cmpl
fists
jno
push
cli
dec
pop
lret
mov
xchg
cmp
pop
mov
push
cmp
imul
mov
pop
fdivl
in
sub
adc
and
aaa
lret
out
push
inc
xchg
fcomps
das
xchg
fisttpl
loopne
dec
mov
loopne
iret
stos
push
push
subl
adc
movsl
addr16
mov
stos
cmpsb
fs
xor
cmpsb
cltd
test
fdivrs
adc
arpl
aaa
outsb
rol
rorb
or
stos
sbb
xor
or
mov
gs
mov
dec
add
cld
jl
and
add
gs
adc
add
dec
xchg
mov
icebp
out
mov
mov
int
push
adc
fcmovu
lret
scas
icebp
dec
or
or
sub
fs
cmp
pop
cld
xor
lods
xchg
sub
sbb
push
enter
or
or
mov
sbb
cmpsl
popf
adc
mov
stos
es
adc
nop
push
lret
mov
inc
mov
mov
insl
shrb
cmp
bound
pop
push
pop
out
or
es
loop
pop
lds
add
jmp
mov
imul
or
and
shll
pop
xor
lock
pop
cli
push
xor
mov
mov
addr16
dec
mov
or
adc
lds
mov
daa
or
jmp
dec
sbb
add
jns
mov
mov
mov
rcl
or
lret
das
cmp
add
pop
lret
in
xor
ja
insl
mov
push
insb
or
xchg
sbb
mov
stc
xor
xchg
cwtl
loop
rorb
scas
push
adc
ja
adc
je
and
stos
xchg
or
insl
in
jnp
push
movswl
cmp
xor
dec
jnp
cmp
jbe
inc
rol
jne
orb
xor
ret
add
nop
insl
iret
fsubrl
cli
dec
sub
out
adc
hlt
push
out
aas
pop
fwait
xchg
out
and
fs
loopne
ret
sbb
jl
xor
cmp
in
mov
jge
rorb
aaa
ljmp
push
jbe
mov
cwtl
imul
into
dec
mul
das
pop
in
xor
jbe
aas
dec
shll
xchg
pop
in
fists
movsb
rcl
testl
cmp
jnp
sub
ret
ds
pop
mov
fsubrs
push
sbb
xchg
aad
mov
or
jne
lds
out
ljmp
push
bound
jns
int
repnz
sub
xchg
rorl
mov
lret
loop
push
test
mov
js
pop
sub
sbb
shr
pop
cmovg
icebp
shrl
ja
int3
cmc
mov
adc
or
fcom
test
cmp
shlb
cmpsl
sbb
enter
dec
stc
mov
pop
xchg
lea
cmp
sti
ljmp
lret
dec
pop
mov
and
inc
dec
aas
mov
mov
aaa
push
jb
or
sbb
dec
xor
add
pmuludq
jne
outsb
xchg
lods
sbb
inc
sahf
andb
or
xchg
je
sbb
addr16
xchg
dec
fs
cmp
jl
pop
lods
es
es
cmpl
jecxz
lahf
cmp
enter
aam
push
and
es
push
adc
jge
adc
aaa
lods
pop
pop
mov
nop
push
mov
loop
stos
inc
pop
scas
adc
inc
xlat
mov
in
cmp
sbb
jns
dec
test
mov
mov
add
outsb
call
fnstsw
xor
movb
and
inc
xchg
push
ret
dec
out
fadd
dec
nop
in
or
xchg
mov
xchg
jg
iret
push
out
pop
out
adc
in
lods
in
push
pusha
xor
in
jp
addl
nop
pop
lret
sbb
pop
or
xchg
insb
pop
clc
or
adc
sbb
xchg
scas
insl
icebp
je
mov
inc
adc
pop
add
or
in
test
andl
adc
aaa
test
bound
sbb
popa
sbb
cld
into
iret
movsl
das
jmp
cmp
jae
mov
leave
cld
or
sub
ljmp
push
inc
js
or
inc
push
in
mov
dec
cmpsb
dec
add
lock
rolb
mov
out
dec
or
adc
test
fisttpl
test
jg
scas
mov
daa
inc
popa
cmpsb
mov
xor
jmp
jno
xor
arpl
popa
fcomp
add
testb
jb
out
pop
loope
aas
lock
and
jl
cwtl
xchg
outsl
stos
insl
or
sub
daa
jns
movb
cli
mov
in
dec
sub
fwait
or
lret
jp
adc
popa
sarl
test
mov
mov
pop
fists
cltd
dec
xor
orb
out
pop
mov
pushf
xlat
sti
cmc
mov
dec
int3
in
push
cmpl
push
dec
jl
mov
mov
mov
sub
adc
stos
cmpsl
jne
mov
cli
notb
insl
fcmovnbe
xchg
pop
cs
mov
push
or
rcll
adc
popa
add
xchg
cwtl
jnp
dec
jecxz
and
mov
push
mov
es
jnp
jmp
cmp
pop
add
stc
inc
mov
mov
orb
sbb
dec
pop
fs
fisubs
jge
cmc
xor
shrb
mov
sahf
adc
push
xchg
insb
outsl
fldenv
loop
dec
mov
and
dec
cli
push
ja
or
cmp
dec
popf
mov
mov
arpl
sbb
add
cld
mov
adc
sbb
jne
sahf
js
xchg
aam
out
xchg
inc
xchg
mov
xchg
mov
notl
jo
adc
int
mov
mov
mov
call
sbb
hlt
and
and
fisubl
xchg
scas
mov
ss
cmp
ror
or
sbbb
fs
cmovno
xor
mov
in
mov
pop
inc
adc
sarb
jmp
pop
cli
or
ja
fcom
push
push
dec
inc
mov
dec
sbb
movsl
cmpl
or
mov
adcl
add
shr
mov
inc
mov
imul
add
sub
pop
adc
jle
sbb
loope
insb
inc
jecxz
mov
push
in
mov
and
aam
cmp
idivl
inc
sti
int
mov
iret
shl
out
gs
jl
stos
js
mov
pushf
mov
and
dec
movzwl
mov
xor
push
push
and
addr16
stc
jmp
add
fwait
push
and
sbb
in
mov
cmp
pop
pushf
jnp
bound
divl
and
sbb
mov
push
test
mov
sub
sub
inc
adc
jge
addb
push
or
sub
iret
and
xchg
fldcw
and
movb
inc
je
adc
push
ljmp
inc
push
mov
iret
in
mov
adc
sarb
insl
lret
jnp
out
enter
pop
sbb
bound
rolb
xor
out
imul
and
jp
mov
xor
icebp
lods
jge
repz
arpl
jo
or
jp
in
lods
and
jbe
mov
fisttpll
cmp
jnp
jle
xor
cld
lret
push
popa
out
mov
sub
out
push
pop
or
outsl
pop
xor
fidivrl
push
mov
mov
sub
xchg
shlb
jnp
movsb
pop
pop
iret
xor
xchg
lcall
scas
jle
scas
inc
lea
daa
lret
adc
repnz
loop
ja
je
xor
add
js
xor
pop
stc
lea
jbe
insl
test
ret
sub
pop
or
ficoml
xchg
clc
push
gs
pop
xchg
dec
jp
mov
dec
pop
fildl
data16
xlat
imulb
movsb
xor
stos
push
fidivs
divb
jbe
cmp
mov
mov
cmp
addr16
jne
add
pop
into
fwait
mov
add
push
xor
outsb
iret
jae
lods
add
std
fcmovnbe
aad
andb
gs
or
xchg
lret
sahf
bound
push
fnstenv
dec
insl
jp
add
out
sub
fiaddl
ljmp
int3
in
pop
mov
in
clc
js
loopne
xchg
xchg
xor
jo
les
xor
icebp
popf
iret
inc
pop
dec
push
hlt
das
xor
add
mov
out
mov
icebp
and
add
push
ja
cmp
js
sub
test
fdivr
daa
rol
push
cmp
jmp
mov
sbb
insb
sbb
mov
fidivrs
xchg
inc
dec
inc
insb
scas
shlb
jg
into
inc
mov
jmp
cmp
aam
xchg
add
pop
movsb
mov
shll
mov
not
jge
ja
or
lds
xchg
ficoms
sti
cltd
nop
daa
adc
iret
fistps
cli
inc
andb
pusha
or
stc
jo
pop
sbb
icebp
data16
push
fdivrl
and
dec
mov
data16
lds
lahf
sbbl
add
mov
inc
cld
add
cmc
pop
xor
cmpsl
push
fbld
adc
adc
mov
mov
xchg
rclb
xor
xlat
fbstp
in
mov
fcmovnu
push
jbe
cltd
pushf
mov
lret
xor
clc
inc
xchg
xor
cmp
leave
and
sub
mov
pop
fdivrl
mov
mov
dec
sbb
cmp
push
sub
cld
pop
inc
popa
mov
adc
or
mov
push
mov
mov
sbb
jne
pop
push
fstp
scas
setbe
sub
scas
popf
movsb
dec
aas
into
xor
arpl
ds
mov
aam
imul
pop
sahf
sbb
jb
mov
cmp
data16
add
pop
mov
jns
enter
cmp
add
fwait
call
out
imul
and
out
inc
fdivr
add
mov
aas
mov
cltd
or
or
sbb
cmp
imul
jmp
pushf
movsl
push
lret
out
xchg
fistps
test
cmp
outsl
xchg
dec
sbb
loope
mov
jmp
insl
push
cmp
test
test
xor
sbb
mov
adc
sti
cld
int3
insl
call
jnp
push
push
mov
pop
fdivrs
shlb
adc
mov
aaa
out
mov
scas
mov
mov
xor
xor
data16
xor
hlt
test
mov
push
jns
add
je
jmp
pop
cli
dec
sbb
movsb
sub
xchg
dec
mov
cltd
sub
adc
fwait
mov
gs
add
cmpsl
leave
ret
aaa
adc
xchg
inc
stos
sbb
push
stc
or
lcall
cmpsl
repz
inc
stos
ja
enter
and
insb
enter
add
inc
push
cli
movsl
aam
scas
push
out
dec
mov
leave
adc
movl
inc
and
stos
add
js
mov
xchg
mov
mov
xchg
mulb
cmp
push
mov
pop
cli
mov
push
jo
xor
or
ja
repnz
jge
jg
xchg
inc
std
lret
popf
mov
push
xor
inc
ret
ret
pop
dec
int
fistpll
fidivrs
dec
mov
mov
fcoml
and
bound
cmp
mov
adc
mov
add
jo
push
cmc
mov
push
xchg
js
addl
sbb
mov
mov
aad
inc
xchg
cmp
iret
push
mov
xchg
and
imul
cs
cmp
push
mov
cmp
xor
pop
add
add
cmp
in
pop
mov
jno
pop
push
xchg
icebp
mov
xor
and
rclb
aad
leave
in
mov
test
mov
sub
mov
jmp
imul
xor
pop
jne
cmp
mov
and
mov
lcall
fldt
dec
push
pop
loop
movl
rorl
ss
fmul
lea
jg
adc
lds
pushf
fistpll
cmp
add
imul
fcmove
shll
push
mov
movsl
cmp
fadds
sbb
mov
call
stc
addr16
cld
pop
push
enter
mov
je
shlb
sub
bnd
inc
xchg
jb
andnps
fwait
inc
push
movsb
sbb
jge
xchg
pop
ljmp
iret
sub
xor
test
xchg
sbb
test
mov
movsl
sub
fdivr
sbb
movsb
fisubs
aad
mov
jle
sbb
jge
pushf
xor
arpl
jle
jge
iret
jbe
mov
dec
inc
neg
jle
in
jno
imulb
enter
cmp
sbb
sbb
and
inc
rol
das
mov
cmp
adc
mov
insb
add
cmpsb
adc
lods
fildl
lcall
mov
mul
jl
mov
les
sbb
divl
push
lret
subl
js
repz
std
mov
jl
xchg
jae
lcall
jno
cmp
xor
pop
add
xchg
dec
and
mov
or
leave
insl
fwait
sub
ss
out
fs
sahf
lret
fists
jl
xchg
inc
adc
enter
dec
cwtl
jne
shlb
adc
sarb
sbb
mov
and
inc
cltd
push
jns
cmp
mov
mov
in
push
pop
ds
int
inc
std
mov
xchg
ja
es
ret
enter
out
sbb
lock
enter
ds
jae
je
aaa
sbb
jbe
sahf
push
pop
fsubl
mov
outsb
jp
mov
std
insl
int3
mov
and
jb
int
fdivrl
xchg
insl
shrb
ficoms
imul
fcompl
adc
dec
scas
mov
pop
les
cmp
add
fwait
xor
adc
stos
mov
test
scas
mov
pop
mov
popf
pushf
pop
test
inc
dec
push
fsubp
gs
lret
cmp
and
aam
dec
dec
pushf
std
jp
rcll
cld
jae
int3
cmp
push
mov
cmpsb
dec
sbb
sub
inc
lahf
mov
mov
inc
popf
sbb
rcrl
add
pop
mov
or
pop
cmp
inc
add
dec
fcmovnb
push
aad
mov
cmpsl
adc
push
mov
repz
lods
fcomp
sbb
nop
dec
cmp
mov
mov
jae
scas
inc
push
imul
iret
xchg
fisubs
mov
xchg
fwait
insb
xor
and
mov
mov
lret
cmp
fmuls
dec
jmp
fisttpll
mov
stc
push
fsubrs
adcl
mov
inc
inc
mov
clc
inc
mov
stos
lret
loope
push
movsb
cmpsb
push
lds
xor
dec
shl
mov
jb
pop
enter
jo
aaa
jbe
push
xor
shrl
std
xor
nop
imul
pop
iret
jmp
mov
mov
mov
fnstsw
adc
hlt
xor
mull
pop
mov
jbe
and
xchg
andb
mov
pop
in
push
in
lea
imul
imul
adc
outsb
jo
pop
popf
jg
pop
repz
xchg
cmp
or
cli
in
add
jge
or
cmp
and
xchg
jb
adcl
stc
or
and
cmc
or
mov
int
cmp
js
sub
pop
rcr
sub
cs
or
lods
mov
mov
and
jns
mov
outsl
int
clc
pop
add
fiaddl
mov
pushf
lds
or
sbb
addr16
jecxz
jp
xlat
mov
insb
push
and
jp
mov
adc
mov
fildll
movsl
jl
pop
rolb
idivl
outsb
xchg
outsb
xor
aad
frstor
push
movsb
mov
pop
rclb
dec
sbb
mov
mov
dec
pop
loope
jne
lret
pop
push
push
push
adc
mov
mov
rolb
fldt
adc
jmp
imul
test
outsl
cmp
outsl
repz
sub
jae
cmp
xchg
xchg
lahf
outsb
add
dec
hlt
jne
imull
push
outsb
lea
bound
sub
sub
test
push
sbb
xchg
test
dec
das
push
xchg
fiaddl
jno
push
push
push
push
sub
adc
jo
xor
adc
jno
mov
je
out
push
stos
push
add
dec
cltd
jb
dec
sub
mov
inc
inc
jmp
fcmovb
mov
cwtl
push
push
fs
mov
inc
sub
jae
test
or
sbb
jmp
push
insl
inc
jle
pop
and
xchg
adc
aam
pop
in
stos
push
imul
cmp
fwait
pusha
mov
or
cs
jne
sbb
lret
das
bound
ret
and
mov
incl
jg
jno
xor
or
xorb
pop
adc
xchg
out
ret
scas
divb
mov
xchg
ficoml
or
aas
daa
subb
sbb
ret
mov
sbb
shrb
dec
lret
mov
jne
lock
ret
dec
adc
add
loopne
mov
and
pmuludq
test
pop
jecxz
dec
cmp
jmp
mov
and
jge
outsl
cmp
mov
add
pop
imull
jo,pn
stos
sbb
mov
in
mov
fwait
push
ret
repz
fisttpl
add
iret
add
mov
cmp
jmp
jmp
pop
cld
dec
scas
adc
das
and
movsl
sbb
shlb
idivl
pop
mov
inc
lods
mov
dec
jae
decb
jbe
and
dec
and
or
insb
repnz
sub
xor
and
inc
mov
in
pop
sub
lahf
movsl
xchg
notl
aaa
and
jo
mov
and
repnz
iret
jg
jnp
aaa
mov
into
test
stos
dec
mov
push
mov
repz
add
add
sbb
inc
dec
push
shlb
cld
arpl
mov
das
inc
and
cld
adc
movb
stos
pop
push
xchg
jnp
and
outsl
gs
mov
mov
add
rcl
add
loop
rcrb
or
and
jg
pop
mov
pop
shll
and
push
sbb
xchg
sbb
jecxz
add
inc
int3
pop
xor
lahf
cmp
xchg
lret
mov
jno
jmp
lods
ds
loopne
in
dec
stos
cmp
push
ret
sub
push
mov
or
and
je
jns
xchg
xchg
or
shr
cmp
cmp
xlat
cs
jns
xor
and
push
sbb
rclb
dec
inc
fmull
mov
jbe
sbb
push
lods
add
aaa
inc
testl
int
xchg
std
cmp
xchg
jmp
imul
mov
jnp
lods
mov
loopne
imul
jmp
fbld
jae
xor
ret
cmp
inc
fisubl
popa
pop
push
cld
gs
repnz
push
cmp
push
das
xor
jne
out
mov
sbb
add
icebp
addr16
loop
cmpsb
xchg
clc
push
movsl
lcall
inc
xchg
negb
cmpsl
lret
push
and
sti
mov
xchg
mov
sti
mov
push
stc
push
inc
stos
imul
enter
push
lods
in
pushf
andl
jnp
sbb
pop
ss
and
jb
adc
dec
test
adc
lods
dec
mov
jmp
xchg
je
aas
orb
js
or
and
rorb
pusha
jle
arpl
xor
popa
sub
push
xor
mov
insb
lcall
ss
ret
mov
dec
and
in
jmp
fwait
in
rorb
in
fnstcw
sub
and
cs
adc
cwtl
adc
inc
mov
movsl
fisttpl
in
mov
add
mov
xchg
int
dec
mov
mov
ret
push
xor
jecxz
filds
aam
inc
scas
cli
add
add
xor
adc
and
mov
in
ljmp
fldl
xlat
xor
mov
rcrb
jle
scas
or
fbld
inc
fists
adc
arpl
xchg
adc
add
ja
sub
jns
nop
fisttpll
frstor
dec
push
dec
inc
test
or
fisubrs
ja
dec
testl
sub
movsl
adc
xchg
popa
shr
call
push
xlat
adcb
adc
jecxz
fmulp
out
mov
sbb
mov
adc
push
jne
out
adc
iret
cltd
arpl
cmp
cmp
out
mov
in
xchg
fistpl
dec
cld
cmp
xorb
mov
paddsw
in
int
pop
mov
dec
lods
dec
adc
adc
or
xrelease
ss
lret
in
repz
xor
imul
xchg
aam
mov
cmp
push
push
jecxz
sarl
and
iret
xorl
cmp
out
pop
stos
push
and
aaa
xor
add
int3
cmp
mov
test
aas
xchg
loop
xor
adc
insl
push
ret
cmp
sti
mov
xor
stc
das
mov
arpl
sub
ret
add
rcrb
push
sbb
dec
rcrb
dec
adcb
xchg
mov
xchg
push
les
jp
push
testl
xchg
out
inc
clc
pop
mov
mov
dec
inc
xchg
inc
push
out
fsubs
inc
int
cmc
or
mov
movsb
repnz
fsubrl
mull
mov
cs
jl
push
and
clc
push
adc
lock
xchg
into
daa
in
push
and
out
or
idivb
insb
bound
mov
sbb
sbb
out
add
sub
in
xchg
je
frstor
test
jo
and
fldt
test
push
icebp
sbb
pop
cmpsw
daa
jl
fistps
pop
push
sub
out
int3
mov
mov
addr16
es
in
sub
adc
sbb
test
sub
adc
rep
push
mov
sbb
xor
cmpsb
xor
adc
mov
int3
cs
lret
push
mov
sbb
rcr
loopne
ljmp
push
xor
enter
jle
jo
and
and
jmp
dec
in
jo
aas
or
lret
pop
inc
int
mov
int3
out
xchg
xchg
fisubrs
in
pop
push
filds
or
ds
jmp
rorb
and
sarb
pop
dec
xor
shll
jne
inc
sub
roll
inc
jae
sub
mov
insl
jmp
mov
mov
divl
lret
push
dec
daa
ss
mov
adc
rclb
xor
pop
cmp
vfmsubadd213pd
mov
ficoms
mov
lret
cld
movsb
dec
xor
mov
inc
cmp
adc
dec
hlt
or
pushf
jns
shll
xorl
es
pushf
aad
gs
push
push
scas
sbb
push
mov
int3
push
fwait
mov
and
insl
insl
adc
add
sub
mov
jecxz
push
and
push
in
cmpsb
cmp
mov
xchg
push
scas
xchg
push
mov
icebp
out
adc
adc
enter
pop
mov
fwait
insl
jle
or
lods
add
xchg
adc
hlt
dec
ficoml
inc
sbb
jp
ja
cwtl
ret
sub
cmp
cltd
adcl
mov
jmp
jle
jno
je
mov
iret
sub
fsubs
adc
pop
enter
scas
xchg
test
rcrl
pop
stos
add
js
sub
jle
negb
mov
test
pop
push
out
pop
cmp
sbb
and
cmpl
cmp
rcll
insl
jmp
push
xor
pop
xor
subb
dec
rol
arpl
icebp
jb
mov
mov
js
ljmp
mov
out
clc
mov
testl
cwtl
jns
ds
sbb
dec
and
jae
adc
dec
js
dec
lods
imul
pop
sarb
andl
lahf
movsb
adc
mov
int3
cmp
inc
mov
push
data16
insl
dec
xchg
sbb
popa
addl
ljmp
add
inc
xor
mov
popa
pop
pop
xchg
push
test
stos
pop
pop
cs
or
sub
test
mov
jle
andl
gs
mov
cld
jp
jg
push
lahf
xchg
jbe
push
push
mov
cltd
jle
shl
push
loope
ljmp
mov
mov
in
es
adc
jbe
adc
fmuls
jo
jb
push
push
xlat
loopne
lea
push
nop
mov
push
cmp
mov
rcl
nop
push
dec
lahf
pop
sbb
mov
test
cmpsb
daa
test
lahf
jmp
dec
lea
int3
push
test
in
xchg
stc
aam
testb
or
jmp
mov
decl
mov
dec
cltd
les
cmp
ret
mov
xchg
lahf
daa
inc
movsb
insl
cltd
or
pop
jne
fidivl
in
pop
sub
xchg
adc
inc
cli
cmc
addb
aam
fsubrs
lahf
hlt
movsb
pop
mov
stos
int
cmc
or
push
stos
fcmove
fiadds
sbb
mul
xchg
mov
xor
dec
mov
imul
movsb
mov
mov
hlt
add
fcmovnb
in
fsubl
in
mov
lds
adc
jbe
mov
imulb
out
and
xor
sub
fldl
repz
lods
cmp
sub
inc
adc
jnp
pop
movsb
clc
xchg
and
out
xchg
mov
repz
jl
lock
enter
mov
pop
mov
cmp
movsb
inc
mov
fbld
int
mov
lret
loope
mov
push
mov
lods
pop
movsl
sbb
inc
nop
cmpsl
push
addr16
mov
mov
xor
rorb
pushf
fbld
add
fsub
popa
in
dec
stos
mov
sub
jnp
push
bound
cli
xlat
dec
mov
and
and
add
or
pop
int3
xor
inc
add
sub
call
fmull
enter
xchg
pop
inc
rclb
es
dec
sbb
jno
jb
pop
sbb
es
xor
inc
and
or
jp
sub
cmp
or
jno
lahf
lret
insl
aas
cmp
xor
inc
mov
cmpsb
lahf
and
jl
fisttpl
or
fcomps
pop
inc
int
or
mov
out
or
mov
pop
cwtl
int
cmp
iret
inc
test
jne
jle
jae
mov
sbb
pop
jle
subl
loop
adc
jb
rcl
shll
jno
xchg
and
insl
fiaddl
jae
fs
leave
out
cld
and
into
cltd
andl
xor
sub
out
in
test
imul
adc
sub
rcrb
mov
jmp
loopne
loopne
repnz
loope
pop
bound
pop
dec
repz
movq
ja
aas
in
test
add
adc
jno
sub
mov
test
repnz
cmp
or
es
scas
testl
jecxz
aad
inc
cmp
popf
xor
or
mov
lock
add
xchg
aam
xchg
fwait
ret
pop
dec
gs
cmp
or
cltd
inc
fs
sub
test
or
out
in
pop
xchg
and
inc
orl
mov
rcl
ret
fs
or
out
je
inc
es
mov
out
out
loopne
das
lds
lods
inc
adc
in
shlb
scas
clc
push
shrl
loopne
adc
arpl
xchg
sti
mov
idivb
sub
sub
mov
aam
and
adc
pop
cmp
pop
sub
jo
fcomps
insl
jae
sub
xor
addb
int3
cmc
xchg
ss
xchg
sarb
mov
or
mov
mov
and
xchg
push
mov
mov
stos
inc
cmpb
add
and
add
add
lahf
lret
xchg
das
xor
sarb
dec
sbb
mov
das
or
mov
xchg
jno
push
mov
ret
lods
clc
push
jp
stos
in
pop
cmc
loopne
aas
inc
dec
test
fwait
aad
scas
xor
aad
sarb
jmp
es
pop
sub
cld
mov
and
ss
or
sub
xchg
inc
lods
cmp
or
sbb
push
mov
dec
jne
push
mov
mov
fs
mov
sbb
xlat
dec
adc
xchg
adc
stc
es
cwtl
mov
jae
mov
imul
cmpsb
repz
mov
call
adc
mov
inc
fcoms
push
daa
mov
xchg
ljmp
push
mov
push
xlat
pop
xchg
jp
mov
xchg
icebp
test
in
lret
adc
dec
mov
ret
fidivrl
cmp
pop
pop
cmpsb
icebp
call
call
fucom
inc
sub
adc
daa
pop
rolb
dec
mov
in
xor
fs
jmp
adc
movsl
mov
bound
pushf
popw
clc
popf
mov
xchg
sub
ja
mov
shrb
xchg
clc
xor
push
repnz
cld
dec
inc
not
xchg
sub
popa
sub
sub
scas
ret
adc
push
lcall
repnz
test
fabs
sbb
sub
push
data16
cmc
jno
mov
subb
outsb
call
dec
rolb
mov
subb
aas
mov
mov
inc
pop
mov
cli
pop
mov
or
or
jl
cmpb
mov
mov
sub
lock
xor
cmp
push
js
xor
fsts
adcb
lea
sbb
gs
jno
ja
test
ret
jb
xlat
cmp
or
test
xchg
lret
fisubrl
fnstsw
cmpsl
inc
aas
divb
mov
test
dec
aad
dec
outsb
inc
jge
push
lcall
std
mov
sti
sub
sub
or
sbb
int
adc
xor
lret
add
mull
mov
ja
and
mov
out
cmc
add
push
pushf
scas
imul
lret
sub
and
call
fildll
popf
fidivl
push
pop
in
fcomi
sbb
dec
fwait
outsl
cmp
mov
mov
lods
popf
xchg
rcrb
dec
cmpsb
push
adc
sub
adc
jg
lea
add
sbb
add
xor
mov
adc
xchg
xchg
cmpsb
mov
xchg
and
mov
jp
sub
inc
ja
ret
aam
adc
mov
lret
mov
push
aam
addr16
jb
push
push
jb
rcrb
insl
stos
icebp
dec
call
xchg
negl
pop
sbb
into
std
adc
adc
pop
jg
stos
xor
nop
ss
cmp
sti
dec
cli
mov
in
sbb
and
pop
dec
movsl
adc
lea
sbb
mov
adc
xchg
mov
lds
lods
cmp
sub
dec
xchg
testb
out
or
add
xchg
popl
mov
testl
xchg
imul
mov
aas
out
lret
pushf
jbe
pop
clc
sbb
or
int3
dec
fwait
ret
int
mov
sub
popf
fisttps
ret
xchg
or
idivl
std
adc
leave
dec
andl
dec
les
pop
add
rcr
out
sbbb
cli
sub
adc
xchg
cmp
add
sti
mov
in
inc
aam
xor
fistpll
sti
imul
insl
push
sbb
ss
pop
push
adc
fstps
jl
xchg
lret
or
and
gs
or
leave
in
xchg
popa
xor
ja
mov
rorl
jmp
mov
es
std
outsb
int
xchg
pop
dec
cmpsb
movsb
sbbb
dec
pop
jle
sti
dec
xchg
inc
inc
out
mov
mov
outsb
xor
cmp
test
clc
std
push
dec
mov
fsubrs
cmp
xorb
pop
shlb
pop
arpl
xchg
xchg
pushf
mov
test
jp
xchg
pushf
sub
out
std
sbb
out
insb
arpl
mov
jo
pushf
mov
iret
data16
pop
sahf
js
xor
std
std
bound
and
push
loop
mov
jle
aad
or
cld
xchg
cwtl
enter
xchg
call
push
add
xor
push
or
in
fimuls
fstpl
js
ret
jne
js
inc
jecxz
int
mov
daa
ds
sub
push
int3
lea
nop
into
cmp
mov
pop
les
jne
or
cmp
int3
or
push
xchg
cltd
data16
cmp
and
mov
xor
and
aad
pop
outsl
xchg
mov
pop
enter
xchg
ljmp
subl
push
hlt
push
outsb
fildl
add
or
push
lock
sub
dec
test
test
ljmp
test
cmp
pop
or
and
xchg
and
cmp
mulb
fistpl
adc
sub
add
mov
mov
cmp
loop
out
xchg
lcall
daa
pop
pop
scas
in
test
aam
popf
xchg
leave
test
jmp
dec
xor
sbb
loop
jl
shlb
shll
cmpsb
in
ja
dec
mov
adc
stc
xchg
xor
or
test
add
dec
rcll
in
mov
mov
cmp
sar
mov
loope
decb
cmpsl
cs
pop
sub
ja
add
sbb
dec
push
jge
icebp
addr16
je
jnp
repz
lock
jo
mov
dec
sbb
push
adc
xor
add
sarb
or
xchg
push
enter
cmc
xor
cmp
add
scas
push
test
inc
nop
push
push
inc
inc
jne
xor
in
mov
pop
mov
mov
ja
add
pushf
cmp
pop
movsb
sbb
loope
or
push
rep
cmc
popa
pushf
push
xor
repnz
addr16
jge
loope
in
inc
dec
mov
daa
sarb
mov
mov
dec
adc
enter
fnstcw
ljmp
cs
and
imul
stos
xchg
data16
testb
inc
mov
lock
rolb
call
xchg
xor
les
pop
xor
xlat
jno
mov
mov
mov
incb
notl
stc
call
jl
adcb
xchg
mov
mov
push
pop
sbb
pushf
lods
dec
dec
loop
rcl
cmp
or
imul
inc
les
loop
fucomi
push
fists
in
dec
adc
xchg
inc
sbbl
jle
lcall
shlb
loop
push
or
xor
sbb
fidivl
in
in
lds
cld
test
lcall
cwtl
sub
pop
inc
mov
stos
js
add
push
call
mov
fsubrs
lods
mov
bswap
push
leave
jae
mov
std
pushf
insl
test
mov
std
jmp
dec
add
mov
lock
xor
sti
cli
pop
loope
aas
dec
jnp
test
popa
add
mov
dec
mov
sub
mov
data16
adc
cld
and
cmp
mov
dec
push
cmp
pop
outsb
xor
fwait
dec
sbb
pop
xor
sarb
cld
movsb
inc
mov
fisttpl
outsb
adc
aad
xor
sahf
xor
imul
cmp
insb
js
push
dec
and
loopne
xchg
mov
cmp
mov
jno
dec
mov
mov
cmp
sbb
sbb
aas
nop
pop
cmc
fxch
pop
pushl
xor
iret
pop
jecxz
dec
shrb
mov
bnd
out
xor
scas
adcb
pop
xchg
ret
mov
fdivrl
inc
jp
mov
mov
shlb
or
inc
sarb
test
dec
in
mov
jmp
xor
pushf
bound
loop
mov
in
sbbb
int
push
into
adc
xchg
aam
sbb
dec
shlb
ljmp
cmp
sub
adc
adc
pop
dec
xlat
mov
jo
lret
or
lock
call
andb
xor
jecxz
dec
mov
pop
aaa
mov
cmp
mov
sbb
mov
cmp
xor
push
fistpll
sbb
sbb
mov
mov
xor
je
cld
js
add
test
pusha
mov
sub
lods
test
sub
lods
pop
ljmp
xchg
bound
fwait
sar
or
adc
mov
jns
dec
mov
inc
sbb
jp
hlt
mov
test
mov
aam
jnp
call
jle
lret
addr16
stos
xor
stos
int
outsb
dec
push
adc
sub
ficoml
stos
jge
mov
dec
insl
mov
sti
fisubl
lret
adc
mov
daa
push
int3
push
test
xchg
int
movl
cmp
cmp
pusha
xchg
adc
pop
sub
cli
fsubs
add
pop
divl
repnz
or
rdmsr
pop
movsb
cmc
and
cmp
mov
adc
dec
out
popf
test
div
jl
fisubl
jno
scas
aaa
out
inc
and
aaa
nop
out
adc
cmc
imul
push
mov
and
mov
sti
popa
and
push
iret
pop
insb
roll
into
lret
jl
arpl
xchg
les
dec
ror
cwtl
mov
jo
test
in
inc
add
icebp
inc
ffreep
sub
push
push
mov
and
pcmpgtb
cmp
roll
cmpsb
dec
dec
test
add
pop
mov
push
lock
das
mov
icebp
movsb
pop
lahf
lahf
js
and
pop
pop
mov
ss
cmp
in
pop
aam
xor
or
mov
mov
in
fisubs
popf
cmc
jo
stos
and
add
in
pushf
sub
sbb
dec
cmp
icebp
cld
sub
cmp
jp
inc
jns
lds
inc
mov
pop
loop
fs
pop
aad
imul
jge
cmp
and
inc
mov
sbb
stc
out
sub
cmp
rol
dec
mov
or
out
sub
or
hlt
push
xchg
lahf
repz
jno
push
fiaddl
cltd
bound
mull
rorb
dec
cmp
mov
cmpsl
icebp
ret
sub
insl
inc
xor
xchg
mov
mov
xchg
in
cs
mov
inc
es
ficompl
and
rcrl
xor
mov
popa
dec
sub
xchg
add
les
fstps
mov
lret
sub
mov
addb
sub
mov
and
out
jne
nop
es
mov
jns
dec
ss
lahf
mov
loope
sub
mov
sbb
test
push
fistpl
in
movsl
jp
scas
jae
cmp
stos
mov
and
data16
ret
out
imul
sub
outsb
mov
cmp
push
inc
test
movsl
add
pop
cmp
add
mov
xor
test
lahf
movsl
arpl
jno
movsl
or
fs
fstps
cmp
rclb
rcrb
add
je
bound
enter
ljmp
sarb
jne
fwait
dec
cmp
xor
std
dec
cmp
jnp
and
jp
aad
jbe
mov
and
xchg
es
pushf
sbb
cmp
test
cmp
jno
push
add
and
popf
cmc
pusha
jae
mov
rorl
add
push
sti
sbb
inc
or
dec
pop
mov
les
push
or
jl
daa
or
insb
gs
dec
xchg
shr
lret
icebp
cmpsl
push
xchg
xor
test
push
push
sub
jnp
lahf
jl
out
mov
or
add
dec
std
mov
jo
movsb
fbstp
cmp
shll
xchg
push
cmp
in
fwait
faddl
xorl
mov
shlb
stos
or
add
outsb
pushf
adc
and
mov
mov
jp
aaa
aaa
xchg
or
add
sub
shlb
adc
jmp
fs
int
outsl
add
xor
loop
sub
in
popa
add
push
push
push
mov
xor
push
add
sahf
mov
andl
cmp
cld
mov
out
inc
test
jge
out
dec
mov
daa
cmp
scas
jmp
mov
and
loope
inc
adc
add
or
mov
jo
xchg
ret
nop
xchg
shlb
data16
dec
cmp
adc
sbb
popa
bound
aam
and
pop
lret
test
mov
es
ja
test
sub
inc
sub
jl,pn
hlt
xchg
pusha
jno
dec
add
push
out
mov
pop
imul
leave
mov
add
bound
arpl
mov
insb
jns
shrl
inc
lcall
cs
out
lcall
push
inc
jecxz
test
jae
rcrb
inc
xor
mov
out
or
outsl
inc
in
test
test
mov
repz
stos
repz
test
les
dec
lahf
cmovns
mov
cmc
test
inc
enter
cmp
inc
in
pop
loopne
imul
sbb
sbb
aas
add
or
fistl
addr16
sbb
mov
enter
lds
sti
xor
mov
push
sub
aad
outsb
ds
add
clc
rcrb
or
push
jmp
mov
lock
lret
push
mov
sahf
lret
ret
iret
inc
push
cli
movsl
jge
sub
fadds
push
jo
push
movsl
sub
jnp
lods
ficomps
movsl
adc
cmp
test
push
push
dec
sub
push
xor
mov
adc
and
mov
pop
push
cmpsb
lret
pusha
jns
and
push
push
push
inc
bnd
movsb
lret
mov
jp
je
xchg
addl
lds
xchg
adc
pop
adc
lea
andl
out
cwtl
mov
pop
sub
std
mov
aam
sub
mov
aas
fidivrs
sbb
shl
inc
mov
ja
cwtl
xchg
mov
fwait
jl
push
std
push
data16
inc
lret
jmp
and
sbb
dec
and
xor
cmp
aam
sbb
add
cs
fldl
mov
jnp
and
lret
call
or
push
mov
mov
jge
mov
mov
das
sbb
xchg
fistl
mov
adc
test
xchg
ret
adc
test
fdivl
xchg
sar
inc
dec
iret
scas
or
jbe
mov
jecxz
pop
pop
mov
xor
arpl
jbe
sub
aam
dec
jns
push
fcomp
push
mov
gs
inc
sbb
jbe
sub
jp
into
lret
test
or
adc
cld
push
mov
cmp
xchg
pop
push
outsb
imul
inc
in
lods
push
or
test
xor
sbb
sub
adc
jl
testb
xor
into
icebp
cltd
xor
sbb
dec
out
mov
scas
popa
das
pop
and
pop
adc
enter
pop
repnz
jmp
push
mov
pushf
cmc
inc
adc
dec
add
and
mov
pop
mov
mov
mov
movsl
scas
xchg
loop
stos
mov
test
or
fs
int
adc
jmp
in
pop
stc
jo
in
pop
inc
aas
jbe
dec
jno
mov
jl
sbb
lods
sbb
rol
or
jecxz
mov
aad
xchg
ja
in
lahf
adc
mov
xchg
fsubs
sub
imul
stos
cmp
cmpsl
leave
or
adc
mov
cmp
mov
xchg
mov
mov
mov
rcl
out
in
cmp
xchg
jp
movsb
xor
xor
inc
cwtl
es
adc
cmc
out
push
pop
jmp
sarl
fisttpl
into
mov
add
and
jb
rcl
jo
jmp
lahf
mov
inc
notb
loopne
adc
xor
cmpsb
fdivrs
stos
mov
dec
and
ljmp
addr16
inc
cmp
stos
mov
sub
jge
push
cmp
ret
push
push
popf
aaa
adcl
push
sbb
lods
repz
push
adcl
pushw
and
cmc
daa
pop
dec
pop
mov
addb
or
pop
jno
xchg
fildl
ss
ror
sub
leave
clc
fcmovnbe
sub
ja
mov
push
or
pop
push
iret
cs
inc
scas
pop
sahf
inc
mov
testb
xchg
call
inc
and
and
push
or
cmp
push
xor
jp
sub
loopne
inc
daa
pop
enter
loopne
xchg
mov
push
das
ror
cld
sub
clc
ret
jl
adc
fistpl
hlt
aam
xchg
adc
xor
rcll
push
push
pop
inc
push
divl
sahf
std
pop
mov
and
ret
shrl
call
inc
mov
shll
xchg
inc
aaa
mov
test
pop
mov
popf
cmp
mov
mov
xchg
cmpsb
not
aas
and
lock
popf
add
pop
push
add
shrl
pop
add
lea
jp
repnz
inc
dec
adc
sbb
bound
inc
leave
mov
or
jle
xchg
sub
jmp
pop
mov
or
sub
xor
cmp
scas
push
arpl
andl
movsl
shr
jb
nop
xor
push
adc
pop
inc
mov
cmp
add
insb
bound
popa
sbb
cmp
arpl
sti
fistpl
inc
es
pusha
aaa
or
jg
mov
cli
pusha
rclb
insb
inc
in
popa
sarb
sbb
pop
xor
scas
fwait
mov
lahf
fiaddl
pop
stos
aam
dec
cmp
aaa
cmp
int3
sub
jbe
sub
adc
popf
inc
xor
add
mov
push
out
es
inc
sbb
pop
mov
push
pop
out
mov
or
in
enter
add
iret
jne
dec
inc
aam
sbb
push
icebp
cli
cwtl
fildl
push
fildl
lret
loop
int3
jo
mov
or
mov
and
mov
or
outsl
cli
out
outsb
jp
jle
repnz
mov
shrb
les
mov
mov
add
or
fcomps
push
xchg
jno
lret
sbb
jg
jge
jb
mov
scas
cmpsb
mov
insb
sub
outsl
out
push
into
or
fsts
stos
fwait
incl
xchg
jmp
aad
test
cmp
fildl
cs
inc
ljmp
sbb
cmp
clc
cmp
mov
push
lcall
dec
jecxz
cmp
outsb
inc
fdivrl
nop
and
jle
sti
cmpsl
mov
jle
and
movsb
fldcw
sbb
jmp
lret
es
mov
shrb
hlt
dec
inc
addb
add
gs
pop
or
pop
xor
stos
in
pop
pop
xor
std
cwtl
stos
mov
dec
and
cli
add
cmp
jg
dec
adc
ja
cmp
sub
mov
mov
add
sub
jne
mov
shrl
jecxz
popf
subl
fsubs
pop
les
push
cmc
xor
out
in
and
jle
lds
inc
push
fidivs
test
data16
idivb
sbb
fsubr
mov
cmp
movsb
dec
push
xor
push
dec
jo
and
pop
icebp
push
out
js
xlat
jmp
and
jne
pop
pop
add
adc
stc
cmp
jmp
push
xchg
ret
inc
mov
pop
mov
jg
mov
mov
jb
aas
mov
aam
cld
push
nop
int3
add
es
xor
orl
jg
iret
popf
xchg
out
sahf
add
xchg
mov
call
fsts
pop
scas
mov
lock
add
mov
repz
pusha
inc
xchg
cmp
insb
inc
add
inc
push
sub
lahf
ljmp
lahf
jns
nop
pop
test
pop
dec
push
pop
negb
adc
pop
lret
inc
sbb
push
and
fsub
cmpsl
adc
jbe
xchg
pop
je
stos
out
loopne
dec
inc
bound
fcomi
mov
add
xchg
mov
insb
aad
pop
insl
insb
add
test
outsb
jbe
mov
lds
sub
out
sarl
mov
popa
inc
cmc
pop
lret
adc
lret
fsubl
mov
je
or
lds
stos
jp
cmp
outsb
adc
lcall
and
push
lret
pop
dec
jl
mov
loopne
out
arpl
xchg
jno
jae
lret
loopne
inc
std
repz
sarb
mov
ret
mov
cmp
arpl
rcrl
pop
pop
out
sbb
outsb
enter
push
pop
lcall
and
fidivs
mov
dec
dec
jle
add
add
stos
mov
adc
or
movups
out
fdivrl
and
dec
jmp
sbb
aam
cli
sbb
xchg
cmp
arpl
jo
icebp
dec
pop
xorb
inc
pop
dec
cltd
fildl
pop
push
add
jle
popa
add
stos
cltd
fdivrl
rolb
mov
imul
test
mov
stos
sub
loopne
sub
icebp
mov
mov
or
aas
or
inc
scas
and
mov
leave
jae
cmp
arpl
add
mov
xor
sub
adc
xchg
lahf
sti
test
daa
decb
icebp
imul
and
pop
add
jne
dec
sbb
xor
stc
pop
insl
ret
daa
push
out
or
es
stos
dec
sbb
jmp
mov
push
mov
push
ljmp
adcb
das
jno
js
push
mov
js
mov
push
pop
mov
lock
insb
pop
scas
ljmp
sub
cmp
mov
or
sbb
mov
push
xchg
fdivrl
loopne
xchg
mov
mov
test
addl
or
ja
adc
bound
pop
test
stos
dec
aam
mov
sbb
pop
insl
mov
xchg
jp
fdivrl
pop
stos
std
popa
iret
je
cli
lahf
sbb
push
jg
subl
adc
cli
lea
arpl
in
test
jae
lock
jecxz
jmp
dec
mov
mov
mov
movsb
dec
ljmp
push
and
mov
jns
fsubp
imul
ss
not
aad
adc
stc
int3
adc
call
mov
aad
sti
and
loop
inc
test
into
jne
lea
sub
mov
cs
lods
minps
mov
cld
inc
jo
cmpsl
iret
cmc
sbbb
insl
sub
incb
fsubrs
xchg
jae
xor
inc
in
int
or
mov
inc
or
add
pop
mov
fsubl
data16
cwtl
mov
mov
sbb
out
push
cmp
int
je
jg,pt
hlt
adc
cwtl
lea
mov
jp
xlat
xchg
inc
mov
or
inc
jnp
int3
repnz
mov
push
test
jns
cli
icebp
in
loope
cld
mov
jp
push
sub
push
dec
mov
xchg
jp
in
pop
pop
xlat
xchg
jmp
xchg
out
or
in
pop
imul
mov
and
lock
mov
rcll
push
loop
testl
arpl
cmpsb
ljmp
push
movsb
xchg
or
add
or
inc
aaa
or
int
loopne
ror
popf
inc
dec
outsl
int
ror
pop
sbb
or
out
jno
sti
and
das
aad
and
sbb
lock
aaa
sub
and
add
cltd
xor
ret
cmp
rcrl
xor
shlb
mov
jl
mov
fsubrl
lock
jle
lahf
test
shrl
cltd
jp
test
ja
sub
add
fstpl
pop
mov
jbe
adc
bound
bound
js
sub
dec
rcl
nop
xchg
or
xchg
out
mov
fidivl
or
vhsubps
addr16
test
lahf
js
fwait
scas
loope
xor
xchg
inc
pop
lea
sbb
in
pop
add
mov
iret
dec
mov
in
lret
mov
and
das
fwait
dec
rcll
xchg
movsl
iret
je
jne
jbe
ds
in
or
mov
pushf
dec
lods
xchg
movsb
daa
jns
pop
cltd
out
push
into
mov
ljmp
xchg
sbb
mov
or
mov
cmpsl
mov
ror
push
pop
cmpsb
les
adc
jo
cltd
fwait
shl
inc
rcr
sbbl
lods
jo
inc
jge
dec
mov
push
stos
in
sbb
fprem1
lea
fs
insl
inc
jecxz
mov
icebp
outsl
fstl
push
mov
push
and
jnp
fisttpl
mov
mov
inc
shll
test
mov
jns
mov
scas
cmp
sub
aas
mulb
popf
test
mov
push
lcall
mov
insl
fmull
mov
mov
bound
andl
ret
dec
dec
or
push
out
jl
push
jae
dec
hlt
lahf
xchg
cltd
jnp
mov
adc
popf
iret
mov
jmp
dec
inc
inc
cmp
mov
out
sahf
cltd
test
and
inc
pop
imul
fstl
repnz
mov
push
in
inc
sarb
leave
cmp
dec
stc
dec
mov
jne
xchg
daa
lss
ss
jo
pop
jl
cmp
push
fdivs
push
movsb
fcomp
xchg
mov
pop
jmp
enter
out
fstpt
fistpll
xor
aas
xchg
or
mov
cmp
dec
xlat
xchg
dec
mov
dec
aas
dec
mov
ret
lods
add
mov
data16
inc
mov
dec
arpl
dec
out
ja
or
pusha
aad
sub
sub
and
ljmp
fbstp
add
and
or
cmp
xchg
cli
mov
test
shr
push
inc
mov
dec
sbb
inc
and
lahf
pop
sbb
jecxz
cld
clc
jle
je
cmp
jnp
sbb
add
push
adc
inc
cmp
sbb
sub
aam
jle
insl
lcall
sub
ljmp
mov
imul
push
jo
int3
out
fsub
out
lcall
xlat
or
sbb
aad
mov
std
dec
xor
int
lods
mov
cld
je
inc
cli
sar
out
ja
and
sub
in
inc
push
xchg
into
shll
iret
in
lds
popa
ret
stc
daa
cmp
mov
push
push
repnz
hlt
pushf
xchg
fdivs
cltd
cli
aaa
dec
xchg
insb
sub
sub
lock
das
sbb
int3
pop
sub
sub
mov
adc
cwtl
in
test
mov
test
cmp
leave
adc
test
popf
cmp
test
push
adc
lcall
mov
cmc
mov
adc
xor
or
sbb
xchg
sbb
dec
cwtl
js
pusha
test
pop
mov
xor
mov
enter
scas
jb
pop
imul
std
and
jecxz
mov
lahf
add
jl
sahf
repz
cmp
cmp
xlat
ret
dec
outsl
iret
cmc
fidivrl
aam
mov
jl
test
push
in
xchg
pop
ljmp
lods
cld
push
dec
push
lcall
mov
int
add
mov
ror
stos
out
add
adc
mov
adc
xchg
mov
or
sub
in
rorl
test
xchg
sbb
cmp
test
jno
stc
mov
icebp
xchg
jmp
push
pop
add
fwait
xchg
or
mov
sbb
inc
enter
pmullw
insl
jl
popa
xchg
sbb
pop
cmp
jp
or
int
mov
sub
ret
scas
xchg
cmp
call
jno
adc
lcall
sub
and
rorl
cmc
xchg
sbb
add
push
decb
jg
sbb
into
ja
std
add
rcrl
mov
xor
mov
sub
mov
inc
insb
mov
gs
push
pushf
movsl
sarl
loop
fwait
lods
repz
xor
mov
aad
or
lret
fcoml
pushf
enter
fwait
and
adc
push
pop
pop
sarb
rcrb
dec
xor
lods
scas
xchg
cmpl
jbe
pushfw
rorl
popf
lcall
sbb
loop
cmp
insl
insb
iret
mov
sbb
jg
leave
mov
or
sub
pop
sbb
lcall
faddl
inc
or
pop
cmpsl
call
jmp
sbb
push
ja
fsubl
mov
insb
lcall
xor
daa
dec
cmp
lds
push
add
cld
add
push
movsl
pop
insb
push
mov
jno
es
push
lret
adc
popa
xchg
push
insb
mov
fcmovne
xor
test
cmp
or
in
mov
enter
push
ja
lahf
adc
int3
sub
fs
pop
in
cmc
lcall
cld
pop
jns
loope
xor
pop
bound
add
test
jge
sub
lds
jle
pushf
xor
adcl
int3
mov
lahf
jge
or
js
adc
shlb
lea
lea
ja
push
pop
scas
mov
add
test
mov
inc
dec
fistl
xlat
imul
jp
in
rdpmc
pop
pushl
cmpsl
into
in
mov
cltd
addb
cmp
std
dec
xorb
pop
call
icebp
jns
scas
pop
fisttpl
jl
xchg
mov
bnd
jp
out
cmp
cli
jbe
hlt
addr16
shrl
lret
jnp
pop
pop
test
mov
stos
aam
lahf
outsl
sub
xor
add
iret
pop
clc
jns
rcl
add
dec
inc
push
loopne
pop
lcall
mov
mov
int3
mov
pop
cmp
sub
mov
dec
mov
sub
pushf
mov
loope
mov
or
lret
push
cmc
mov
xor
push
icebp
push
pop
test
or
cmp
scas
mov
or
sub
fwait
push
jecxz
enter
insb
mov
out
pop
arpl
inc
mov
adc
dec
movsb
pop
out
ret
sbb
fwait
stc
sub
or
and
fwait
iret
jae
jecxz
pop
insl
pop
jns
leave
and
icebp
or
pop
jg
dec
cmc
sbb
jno
dec
mull
cmp
xor
ret
inc
shrl
xchg
inc
xchg
cmp
aaa
aad
lea
roll
mov
adc
add
inc
rcll
xchg
mov
cltd
into
loop
icebp
movsb
loop
cmp
and
mov
pop
fistps
and
call
adc
push
xchg
fwait
js
enter
jmp
hlt
addr16
and
aaa
add
or
adc
pop
into
mov
loop
gs
imulb
jno
in
cmp
call
ret
cvtps2pi
push
jmp
popa
cmc
pushf
popa
ret
movsl
mov
fsub
add
fnstenv
sbb
jbe
inc
daa
mov
mov
lods
add
cmp
pop
movsb
shll
pop
cmpl
lret
testb
xor
aad
inc
hlt
mov
push
mov
mov
out
fldl
sub
gs
rorl
aaa
or
xchg
sti
add
inc
arpl
es
pop
jne
pop
pusha
xlat
pop
sbb
mov
push
mov
aaa
stc
xlat
mov
sbb
mov
int3
xchg
sub
cli
aas
push
adc
and
pop
push
aad
or
subl
ret
movsl
outsl
push
pushf
sub
ja
mov
mov
test
mulb
add
daa
mov
jb
add
mov
mov
cmc
fwait
lea
inc
cmp
insb
xchg
fisubrl
arpl
or
sbb
push
jg
fcmovne
inc
mov
stos
sub
or
test
mov
adc
mov
xchg
push
enter
jo
cmp
xchg
cmp
xchg
dec
cmpsl
sbb
fwait
sub
arpl
add
push
dec
or
pop
loop
mov
in
push
sub
sbb
fwait
aas
cmpb
xor
aaa
push
cmp
int
loope
add
leave
sub
pop
pop
push
movsl
xchg
or
inc
add
ds
ljmp
fs
mov
jmp
cmc
icebp
inc
sbb
cld
xchg
sbb
cmp
lea
mov
fsubs
jp
loope
sub
int
or
sbbb
inc
rorl
jle
dec
aad
mov
pop
mov
sbb
adc
xorl
sarl
lret
js
es
sub
push
inc
inc
xchg
movsb
test
lock
insl
adc
cmp
sub
mov
fmull
push
addr16
mov
cmpb
mov
fs
das
popa
mov
les
jg
movsb
jns
je
repnz
mov
outsl
scas
xor
push
sbb
jge
mov
fs
pushf
cmp
outsb
jg
subl
jmp
dec
or
mov
mov
outsb
push
cmpsb
aaa
jmp
out
cs
pop
mov
loope
mov
cmpsl
stc
insl
push
and
subl
fsub
ljmp
adc
and
inc
fdivrs
pop
lret
movsl
pop
cmp
mov
mov
sub
loopne
dec
into
sarl
adc
pop
push
leave
movsb
dec
stc
mov
dec
xlat
lea
cmc
fistpll
mov
loopne
outsb
or
add
cmc
and
adc
xor
lret
jle
jl
xchg
mov
enter
pop
aas
or
add
std
pop
dec
xchg
scas
push
inc
add
ljmp
testb
push
popf
push
xchg
jno
xchg
cwtl
mov
jnp
sahf
fadds
int3
icebp
jg
adc
aam
icebp
loopne
and
ret
mull
stos
jo
push
fldl
es
lret
add
dec
hlt
fistpll
mov
fimull
loopne
dec
out
pop
in
ret
dec
xchg
roll
imul
fwait
or
mov
cmp
popa
sahf
test
jge
adc
and
in
mov
sbb
and
pop
pop
mov
outsb
sbb
jns
inc
pop
xchg
ss
leave
and
pop
cs
add
out
mulb
adc
leave
stos
repz
in
xchg
pop
mov
mov
mov
jecxz
cmc
lods
sbb
sbb
iret
cmp
test
outsl
subb
add
insl
fsubrl
pop
push
inc
sarb
jl
mov
clc
cmp
xor
and
les
cwtl
xchg
test
das
xchg
push
mov
hlt
shll
lods
sahf
ret
adc
es
imul
inc
mov
outsb
aaa
mov
jmp
daa
sahf
in
add
popa
xchg
inc
notl
mov
mov
dec
movb
mov
and
dec
xchg
dec
clc
loope
pop
or
lret
fildl
out
cli
or
and
push
rcrb
add
xor
mov
clc
dec
mov
inc
cltd
xchg
cmp
jno
push
aam
call
adc
in
loope
fsubrs
int
xchg
call
mov
loopne
and
sub
lcall
shrb
push
test
ret
psubsw
mov
push
sub
mov
adcl
and
adc
sub
cmp
mov
adc
mov
inc
add
lods
cmc
pusha
push
dec
fs
pop
inc
jmp
ss
pop
and
pop
ss
mov
lock
repnz
add
mov
ja
out
shrl
stos
mov
mov
mov
iret
mov
pop
xor
sbb
push
pop
sub
rol
xchg
mov
imul
cmp
sub
sub
adc
mov
lret
notl
xor
jae
jmp
cmp
lea
lahf
adc
pop
mov
and
mov
cmc
aas
mov
scas
push
mov
xor
aad
lds
xlat
or
sbb
ljmp
adc
cmp
sarb
cmp
cmpsl
fldt
mov
mov
movsl
dec
decb
push
and
mov
pop
fmull
orl
pop
add
movsl
push
gs
inc
cmp
add
gs
push
mov
adc
lds
sar
dec
aad
fldl
jge
xchg
mov
in
hlt
ret
scas
sbb
lds
les
leave
arpl
in
mov
jmp
cmpb
ret
add
mov
mov
ret
outsl
mov
sbb
mov
rorl
les
and
imul
push
std
out
jg
ds
shl
adc
or
ja
cmpsb
leave
hlt
lds
sahf
mov
push
add
push
mov
pop
ss
rolb
mov
jae
enter
sbb
jg
shlb
dec
cwtl
pop
sahf
rclb
dec
cmpsl
or
repz
pop
xor
xor
jp
jae
inc
lods
jno
pop
cmp
call
sbb
mov
cld
jg
in
out
fwait
pusha
sbb
call
enter
mov
enter
ja
loope
mov
xlat
sub
mov
inc
repz
popf
test
cmc
int
fstpl
inc
inc
test
fnstsw
and
xchg
sbb
test
jecxz
rep
and
pop
pop
fldcw
or
xchg
insb
movsl
mov
fucomp
pop
fbstp
into
outsb
test
inc
dec
add
popa
add
mov
pushf
ret
sbb
pop
adc
xor
xchg
out
mov
push
mov
out
or
and
in
dec
cmc
push
add
sub
mov
or
cmp
jle
out
jge
sub
in
xchg
pop
jnp
loope
scas
inc
aaa
scas
leave
sub
jbe
inc
pop
in
dec
fcomp
insb
int
cmpb
jmp
mov
shll
push
mov
es
fisubs
jge
fwait
rcrl
ss
or
fists
ror
jmp
lahf
fcmovne
fbld
jbe
or
nop
imul
inc
sub
out
sbb
cmp
leave
or
adc
push
push
mov
push
jbe
fidivrs
pop
add
sbb
adc
and
sub
pusha
lcall
rcll
xchg
mov
push
aas
test
aaa
ds
jecxz
ds
stos
or
ja
push
xor
pop
int
jnp
enter
xor
add
test
adc
loop
or
clc
push
dec
lcall
pop
mov
aam
dec
lock
sbb
mov
cmp
mov
xchg
lea
enter
cli
test
jmp
movsb
jnp
lret
push
pop
sbb
jge
fidivl
out
stc
mov
ret
dec
sbb
inc
xchg
popf
ljmp
fldt
pop
adc
out
ljmp
and
mov
xor
fldt
mov
push
push
popf
mov
test
push
roll
pop
int3
cmp
mov
pop
xlat
fsubr
jecxz
sbb
jg
dec
or
inc
lret
inc
repnz
test
and
cmp
jg
inc
mov
call
repz
mov
and
inc
xchg
imul
andl
lods
stos
or
and
sub
dec
xor
hlt
mov
adc
daa
out
mov
inc
popf
stos
movsl
cmc
cmp
jno
test
mov
mov
lods
popf
loope
push
pop
ljmp
and
addr16
rclb
xchg
arpl
sub
jle
sub
mov
or
lret
inc
mull
fistpll
xor
mov
or
lods
pushf
mov
mov
movsl
cli
jo
and
subl
xorb
fistpl
sbb
adc
test
jg
scas
pusha
mov
bound
stc
call
mov
xchg
enter
and
sub
ret
cmpsb
dec
mov
ja
sar
jbe
int3
pop
out
aas
das
pop
push
lods
outsb
inc
mov
sbb
adc
inc
cmp
dec
adc
sub
mov
sti
nop
and
enter
inc
lock
popa
dec
xchg
lea
push
ss
decl
xor
push
xchg
inc
add
or
jp
push
ret
js
rcrb
nop
or
sub
bnd
mov
test
jae
sbb
cmp
or
jp
xor
movsl
mov
pmuludq
cmpxchg
jns
pop
pop
pop
push
and
push
mov
fdivrl
push
inc
stc
push
movl
gs
stos
add
sahf
pop
push
int3
jae
movsb
inc
mov
xchg
add
imul
pop
mov
pop
pop
mov
push
cmp
and
push
mov
mov
aas
cmc
push
int3
fisubrs
inc
add
mov
xchg
sub
mov
mov
mov
outsl
xchg
or
xchg
push
repz
add
inc
scas
mov
rcr
cmp
and
sub
jp
mov
ss
sub
mov
add
adc
cli
scas
les
mov
cmp
sbb
pop
mov
xchg
pushf
cmp
imul
out
xchg
idivl
xor
pop
jne
out
out
jg
mov
cli
pop
mov
add
or
ds
popf
popa
aam
or
fcos
sub
sbb
cmp
fildl
jnp
lock
shl
in
mov
pop
add
pop
clc
and
dec
xchg
add
mov
stos
sbb
fnsave
ja
shll
scas
adc
mov
idiv
mov
scas
fs
out
mov
addb
xlat
adc
pop
push
jne
fcomip
ljmp
inc
pop
fadds
rcrb
fstpl
pushf
jo
test
pop
orl
cs
in
aam
out
xor
out
fildll
xlat
es
dec
mov
rcl
sbb
or
pminsw
mov
pop
shrl
xor
fwait
scas
dec
cmpb
xchg
pop
xor
sub
in
jmp
push
in
or
shll
cli
xchg
pop
push
adc
scas
and
fwait
sub
dec
pop
adc
cmp
mov
push
orl
lret
sub
mov
xorl
pop
fidivrl
dec
idivb
sahf
out
pop
scas
sub
repnz
out
je
mov
mov
cs
adc
out
dec
sbb
scas
cmc
xchg
loope
nop
add
negb
or
adc
or
lods
mov
pop
mov
mov
out
mov
aad
lods
andb
mov
jmp
out
xor
xchg
and
fadds
jnp
mov
mov
js
pusha
nop
divl
insl
bound
sub
push
inc
sar
push
mov
push
addr16
stos
pop
or
mov
dec
xor
fwait
rcrb
lea
mov
aad
fs
dec
mov
or
adc
and
sub
scas
mov
mov
jae
jnp
sbb
mov
lock
cmp
inc
lock
push
movsb
fstl
iret
pop
jl
mov
in
cmp
jle
fistpll
ljmp
add
and
fsubr
and
ljmp
sub
pop
daa
or
aaa
out
test
into
mov
mov
jb
in
dec
jle
mov
bound
test
cli
push
cltd
and
sbb
insb
mov
lods
and
jmp
add
xlat
dec
mov
or
and
cmp
inc
imul
and
lods
mov
scas
out
icebp
pop
addr16
test
jle
mov
pop
mov
dec
dec
or
notb
testl
xchg
adc
das
loopne
pop
lcall
cmpb
push
outsl
out
cmp
mov
mov
out
mov
out
outsb
and
mov
mov
lahf
out
cwtl
inc
jp
out
fcmovb
notb
jne,pn
jl
push
cmc
fsubl
and
sbb
lock
dec
cmp
push
call
xchg
add
roll
mov
test
mov
shrb
loop
ljmp
hlt
out
orb
mov
data16
pop
jg
xchg
sti
ret
out
jp
sub
fsts
mov
and
inc
sbb
mov
dec
mov
cwtl
nop
dec
dec
shrl
out
jno
fsubl
mov
mov
pop
pop
aaa
icebp
dec
mov
test
adc
adc
push
iret
fwait
stc
scas
sbb
clc
mov
jb
imul
xchg
add
lret
mov
push
movsb
stos
rcll
sub
inc
jg
fwait
sbb
jnp
aad
sub
jns
push
mov
dec
add
sub
js
xchg
mov
inc
movsl
ja
pop
repnz
mov
enter
insb
pop
mov
xor
pushf
pop
jmp
xchg
mov
clc
pop
ret
fnsave
dec
mov
push
and
lcall
inc
aad
add
addl
and
popf
in
in
jl
outsl
stc
push
repnz
xchg
pop
aaa
xorb
mov
inc
cltd
jg
enter
aam
jecxz
rep
fwait
dec
aam
pusha
out
pushf
hlt
out
lret
and
xor
inc
or
push
lahf
lea
jle
test
and
stos
push
mov
inc
fsts
gs
popf
mov
mov
and
je
jo
jne
rcll
push
mov
xor
into
jge
sub
mov
jo
push
mov
mov
inc
jno
pop
dec
pop
xor
ret
pop
mov
inc
pop
in
aas
sub
dec
sti
sahf
jp
fstpl
mov
mov
mov
sub
xor
movsl
and
sbb
jbe
imul
jmp
adc
jb
add
les
jp
add
mov
lock
push
mov
jecxz
jo
pop
sub
cmpsl
pusha
in
sbb
loope
xchg
or
lcall
push
add
outsb
lods
push
test
push
mov
in
add
insb
movsb
xchg
daa
sbb
xor
sti
je
push
add
jb
enter
out
mov
push
imul
scas
sub
inc
lea
inc
es
loope
inc
xchg
xor
jne
adc
cmpsl
icebp
push
push
sti
out
sbb
jnp
stc
loop
cmp
ficoml
pusha
pop
xlat
imul
arpl
loop,pn
pop
cmc
insl
xor
cmp
out
push
sub
push
sbb
bound
cwtl
xor
jmp
xchg
scas
negb
rcll
pop
bound
loop
and
mov
mov
or
adc
jl
adc
aad
sub
xor
push
iret
into
jo
addr16
js
lahf
pop
movsb
popf
push
sub
test
add
call
push
mov
mov
in
out
shll
sbb
pop
scas
pushf
popa
lods
incb
movsb
pop
adcb
call
and
out
stc
rcrl
addr16
dec
jge
in
cmp
shlb
rcrb
push
rclb
imul
out
in
pushf
xor
aam
adc
mov
mov
pop
sub
jecxz
cltd
mov
adc
dec
jnp
insb
pop
lock
mov
fcompl
jge
out
push
jmp
and
mov
shl
adc
xor
orl
test
mov
stos
xor
dec
dec
jne
cmc
shl
xor
insb
aaa
adc
add
ss
jecxz
add
cwtl
xor
sbb
mov
push
push
int
mov
xlat
test
xchg
imul
jne
lock
xchg
sbb
ss
rolb
mov
mov
push
pop
loope
lods
divl
cltd
cwtl
movl
dec
inc
test
cmpsl
int
add
lahf
imul
mov
outsb
mov
pop
inc
aas
sub
sbb
xor
pop
dec
fdivrl
mov
add
add
cmp
cmp
xchg
mov
test
scas
vpaddw
ffreep
outsb
sbb
inc
repnz
fisubs
mov
sbb
mov
cmc
sahf
dec
out
inc
adc
insl
sbb
int3
or
shll
mov
stos
jae
scas
sbb
sbb
xor
clc
arpl
dec
sub
xlat
add
les
out
scas
fucom
mov
mov
mov
ret
push
in
cltd
push
pop
jp
mov
imul
mov
xchg
xlat
shl
call
out
outsl
add
lods
int
dec
push
gs
jge
rclb
xchg
rol
pop
fnsave
jae
inc
jne
sbb
mov
pusha
dec
push
inc
add
sub
push
repz
popf
mov
adc
adc
pop
mov
popf
sub
pusha
or
mov
mov
imul
pop
and
hlt
stc
fcomi
add
pop
movsl
xchg
adc
or
je
insb
stos
xlat
in
dec
aaa
sbb
cli
mov
movsb
loope
push
add
out
ds
in
lock
dec
out
jae
cwtl
mov
xlat
pop
adc
mov
jecxz
dec
js
sub
lea
pushf
mov
fisttpll
inc
xor
xchg
mov
jl
scas
outsb
xchg
dec
lds
dec
andl
addr16
dec
mov
inc
sbb
sbb
pushf
xchg
loop
inc
ret
mov
mov
scas
push
rcl
stos
jnp
stos
cmp
sub
aam
cs
inc
test
in
jl
dec
in
add
out
sbb
ret
ja
mov
rcrl
and
cltd
add
and
negl
push
test
adc
dec
or
out
jae
outsb
gs
push
or
mov
mov
movsl
mov
xchg
xchg
out
cmp
jg
or
mov
push
xor
stc
std
clc
and
mov
call
sarl
insl
out
ret
movsl
clc
aas
add
lock
insl
inc
sbb
adc
mov
push
adc
es
stc
xorb
cltd
sub
inc
adc
lret
push
out
push
dec
mov
fcmovb
push
mov
mov
in
ds
pop
sar
lea
fnstenv
mov
or
imul
jp
shlb
fistl
js
inc
ljmp
cmp
xor
push
mov
stc
call
arpl
pop
flds
or
sarl
insl
int
cmp
xchg
psraw
mov
stos
pop
adc
ds
int3
int
push
push
fucomip
mov
movsl
imul
mov
cmp
sub
mov
js
sbb
sub
lret
mov
stos
mov
lds
cli
stc
in
adc
jle
in
sbb
xlat
sub
push
fdivl
and
and
dec
lock
movsb
add
les
aaa
pop
and
ja
jb
mov
pop
jne
cmp
ljmp
sahf
data16
cs
push
push
sarb
push
in
out
loopne
int
mov
xchg
mov
lds
mov
out
push
pop
imul
rol
or
inc
mov
ds
ja
rolb
aam
aad
inc
andl
je
repz
pop
lods
sub
ret
call
bound
mov
in
cmp
add
bswap
iret
jmp
or
and
lea
sbb
sti
jle
mov
sub
add
loope
xchg
xchg
outsb
fdivrs
stc
outsl
lods
ljmp
mov
jmp
push
mov
icebp
xchg
mov
fisubl
mov
pushf
idivb
out
fwait
pop
pop
lods
js
sbbb
movsl
push
stos
aam
sahf
in
shlb
inc
or
cltd
sbb
mov
aas
xchg
pushf
inc
mov
outsb
hlt
loop
pop
xchg
and
lods
or
sub
insb
sbb
mov
adc
movsb
nop
adc
aaa
leave
test
adc
xchg
sahf
lods
xchg
stos
mov
cltd
test
xor
mov
push
inc
lock
mov
out
push
loope
jl
aam
js
and
dec
adc
adc
mov
xor
inc
icebp
insb
leave
xor
jl
enter
push
jp
aas
adc
int3
xor
test
push
aas
inc
lods
flds
in
push
xlat
jg
or
negl
in
hlt
cmp
cmpsl
lods
jl
shrl
popa
test
insl
testl
sbb
aam
sub
push
add
mov
pushf
call
jbe
loopne
adc
in
inc
push
mov
xchg
mov
fs
aam
nop
adc
or
sub
mov
mov
sub
ret
jne
insb
cmpsb
mov
ss
es
xchg
mov
cmp
and
loopne
xchg
or
xor
cmp
sbb
cmpl
in
xor
pop
out
popl
push
fbld
mov
out
arpl
or
stos
xor
out
jge
or
push
cmpsl
pop
pop
cs
push
rolb
adc
xlat
stos
fsts
cwtl
mov
loope
jnp
aam
or
lahf
jmp
jl
mov
outsb
movsb
mov
dec
mov
lds
div
jmp
cmp
mov
scas
mov
xor
xchg
mov
inc
adc
inc
js
aam
cwtl
test
add
rolb
loopne
out
adc
fimull
lods
outsb
les
mov
inc
jmp
imul
jecxz
cmp
repnz
outsl
cmpsb
loopne
repnz
icebp
sub
cmp
loop
jmp
mov
xchg
rorl
lods
mov
mov
jne
push
popf
mov
xchg
mov
call
daa
imul
cmc
or
inc
mov
push
test
sbb
lahf
sbb
fstps
cmpsl
bound
ret
in
insl
psubsw
cmc
cmp
insb
mov
and
mov
insb
push
mov
insb
clc
imul
mov
pop
pop
std
cmp
cmp
push
addr16
btc
cltd
pop
rclb
dec
out
loop,pn
and
mov
xor
stos
imul
test
out
iret
subb
mov
jns,pn
frstor
xchg
adc
add
scas
insl
repnz
mov
adc
lea
pop
sub
add
cwtl
rcrl
sub
adc
dec
icebp
mov
pop
in
cmp
sub
ljmp
mov
or
stos
inc
imul
jb
outsl
in
ljmp
insl
sub
xchg
add
jg
ljmp
push
insb
loope
mov
and
pop
cmp
mov
scas
aad
test
and
xchg
xchg
jmp
clc
inc
dec
mov
test
cmp
fbld
dec
inc
sbb
nop
pop
push
scas
je
inc
xor
aas
mov
and
ds
cld
in
jmp
xor
dec
and
pusha
cmpsb
adc
sub
rcrb
lods
mov
pop
int
push
pop
adc
repnz
inc
dec
xor
adc
mov
mov
jle
and
out
int
insb
or
xor
inc
and
std
mov
mov
xchg
adc
lock
jno
rcrl
loop
int3
sbb
pop
dec
and
mov
adc
fisttpl
popa
xlat
inc
xor
pop
cs
jne
movsl
mov
cmc
sti
or
out
push
and
or
add
mov
gs
inc
out
in
or
adc
jno
xor
pop
subb
and
mov
xchg
pop
mov
fcompl
mov
cltd
lods
jmp
aas
xchg
cld
data16
pop
repz
cmc
test
enter
loope
and
mov
pop
sub
cmp
imull
imul
in
jnp
and
add
push
ljmp
pushf
pop
sbb
cld
rorl
sbb
jg
adc
and
lds
ret
inc
into
mov
and
enter
ds
fs
movsb
mov
outsb
cltd
cmp
mov
lock
mov
ret
mov
iret
fsubl
incl
je
lods
push
call
dec
dec
push
pop
cmp
dec
inc
imul
xchg
cmp
mov
jo
orb
mov
jb
add
mov
jecxz
dec
dec
stos
pop
xchg
sar
add
int3
nop
adc
xchg
insl
lcall
aaa
pop
inc
repz
ficoms
jg
pop
dec
repz
lds
insb
sub
cmp
fadd
xchg
xacquire
adc
mov
movsb
jg
outsb
inc
cmc
decb
dec
aaa
push
xchg
push
dec
negl
mov
cmpsl
jmp
insb
orb
mov
popa
xchg
out
lret
sbb
xchg
and
mov
jg
mov
fdiv
dec
adc
pop
test
loope
add
add
xlat
cmp
xchg
sub
inc
dec
jno
xchg
pushf
mov
lods
and
out
cmpsb
stc
push
sbb
cld
in
and
adc
adc
mov
aad
jg
les
xchg
dec
cli
movsb
stos
lods
or
popf
addr16
dec
pop
xchg
fdivrp
inc
xlat
lods
scas
cltd
daa
stos
mov
mov
pop
inc
xchg
mov
add
mov
mov
xor
rclb
mov
cmp
scas
mov
cltd
mov
adc
xchg
mov
cmc
lret
xor
cmp
arpl
adc
sub
mov
dec
jns
mov
dec
outsl
jno
pop
fs
or
jecxz
pop
add
bound
arpl
clc
enter
mov
cmp
test
push
ja
xchg
les
lret
push
jno
push
pop
loope
daa
in
sub
ret
cmp
loop
fnstcw
lock
add
push
lea
fadds
adcb
pop
mov
cmp
inc
dec
paddb
pop
pop
mov
sbb
jmp
divps
repnz
popa
scas
push
add
add
fidivs
mov
xor
mov
out
mov
lahf
data16
shrl
jns
sub
jo
cs
push
fwait
mov
std
adc
jnp
movsb
xor
mov
iret
push
sub
pop
outsl
push
adc
mov
xor
dec
ljmp
int
dec
call
data16
mov
xorb
dec
imul
in
lods
call
push
iret
jge
cli
mov
push
push
xchg
jno
ss
pop
pop
mov
stos
inc
lods
cmc
popf
imul
fwait
add
stc
aas
loop
jle
sbb
sarl
adc
pop
out
jb
arpl
mov
aad
and
push
inc
mov
cld
push
or
cmpsb
shrb
out
lret
jecxz
test
inc
and
das
xor
rcrb
xchg
sbb
and
lret
inc
adc
push
stos
sub
stc
dec
push
addr16
aas
add
cwtl
sub
movsb
add
inc
fwait
xlat
jmp
inc
and
push
and
dec
scas
out
mov
movsl
out
cltd
add
lods
xor
pop
clc
cwtl
jmp
repz
and
shrl
push
popa
mov
sub
mov
xchg
mov
and
aas
outsb
or
xor
cld
pop
repz
gs
push
cltd
ja
ret
or
test
sub
rolb
pusha
xchg
repnz
lret
adc
xchg
dec
xlat
sbb
cmp
cmp
add
jmp
loop
and
sub
out
mov
cmp
mov
inc
std
cmc
das
jns
mov
sbb
lea
jg
pop
mov
bound
cmp
push
loope
mov
daa
mov
outsl
lods
out
iret
jnp
ss
out
fndisi(8087
popf
icebp
mov
imul
jbe
push
or
fs
bound
cs
loopne,pt
jbe
in
sbb
cltd
or
outsl
rolb
and
add
sub
fisttps
mov
sub
out
sarb
popf
or
lret
mov
or
jg
cwtl
movsl
lcall
lods
cmpsb
mov
pop
mov
pop
lock
shlb
fdivp
pop
pushf
scas
xor
mov
in
add
push
sub
adcb
pop
push
xchg
jle
in
scas
jne
popf
jae
scas
hlt
test
push
scas
stos
mov
inc
cmp
les
xor
roll
push
mov
in
add
movsb
push
repz
and
adc
fwait
ja
js
adc
aaa
jp
mov
call
sub
jbe
xor
pop
push
repnz
inc
int
adcl
subl
mov
jb
out
and
lds
into
pop
pop
sub
sarl
addr16
mov
mov
outsl
pop
jb
push
fimull
push
jecxz
mov
fcom
push
mov
pusha
dec
out
xor
add
xor
mov
jle
mov
pop
cmp
clc
inc
cmp
int
test
xor
and
mov
in
adc
sbb
into
es
jmp
pushf
or
pop
sub
arpl
out
repz
or
dec
xchg
xchg
or
pusha
or
aad
pop
inc
lods
out
jecxz
dec
int3
add
inc
jge
inc
pop
xor
jl
lret
cld
in
or
negb
mov
repnz
push
leave
pop
adc
mov
fsubl
sub
push
movsl
frstor
test
mov
push
mov
jecxz,pt
cmp
movsb
xor
cmpb
fs
dec
or
or
sbb
push
push
sub
call
mov
pushf
lret
dec
inc
hlt
movsl
xor
aaa
or
fmul
cmpsb
lock
cmpsl
dec
repnz
xchg
cmp
mov
dec
cs
push
mov
push
aad
lds
push
cmp
inc
hlt
outsb
cmp
daa
inc
mov
mov
faddl
lds
inc
cli
mov
int
into
adc
sub
dec
adc
lahf
jae
in
call
mov
dec
pusha
fstl
cmp
xchg
inc
or
sbb
cmc
out
xor
rcrl
pop
xor
xorl
xor
lods
push
je
sub
int3
dec
repnz
push
xor
mov
lahf
or
mov
sub
or
push
pop
jae
stos
in
scas
and
sti
push
jmp
or
mov
inc
aad
and
mov
jmp
leave
xchg
mov
call
xorl
push
fldenv
fwait
mov
out
lods
in
and
lods
push
int3
fs
mov
outsb
jle
js
or
ja
mov
hlt
push
sub
and
shlb
sub
add
imul
sbb
xor
outsl
aam
jmp
or
cmc
push
or
cmp
fldl
pop
cmpsb
int3
push
sbb
out
js
dec
fstp
push
movsl
xor
mov
dec
jg
das
xchg
aaa
sbb
or
scas
xchg
sbb
sbb
pop
jp
iret
es
addb
inc
jg
insb
or
xchg
jns
pushf
das
cmp
popa
pop
sarl
lcall
adc
push
push
push
adc
popl
xor
sub
sub
push
lcall
icebp
cmp
mov
mov
stos
adc
lods
test
jbe
aad
or
imul
sub
sbb
jl
call
push
sahf
inc
xchg
mov
xor
xor
fsubs
cmp
iret
dec
push
jp
cmpsb
mov
idivl
std
aas
loop
out
xchg
das
gs
push
sbb
xor
movsl
ss
call
mov
fisubs
push
pop
scas
lret
sub
inc
mov
negl
jmp
jb
push
dec
test
or
inc
fidivrs
push
or
loope
inc
jo
dec
test
sub
lock
rolb
arpl
out
negb
xor
shrb
add
sub
lret
mov
sar
inc
push
scas
outsl
jns
mov
sbb
sub
jbe
out
mov
aad
inc
push
loope
repz
mov
cmp
rorl
int3
les
mov
popa
int3
pop
push
cmc
cmp
pop
xor
jl
xchg
stc
cmp
shrl
lea
popl
add
mov
out
jne
mov
mov
mov
data16
or
enter
mov
pop
jo
push
cmp
jae
or
mov
je
inc
jbe
mov
cmpsb
jb
mov
add
je
call
lea
add
out
bound
cmc
xchg
xchg
lock
xlat
testl
loopne
pop
icebp
xorl
jae
stos
pop
gs
jl
pop
and
dec
rcl
ret
add
push
leave
mov
mov
stos
stc
les
mov
enter
mov
sti
push
xchg
lods
test
adc
mov
leave
push
shlb
test
pop
mov
and
aad
rolb
add
test
or
mov
aad
dec
push
sub
lret
ljmp
inc
stos
dec
mov
imul
cmp
cmp
data16
stos
fcomps
inc
or
pusha
fdivrs
lret
aam
bound
inc
ret
insl
xor
cmpb
dec
aam
lret
jmp
mov
imull
push
fstps
mov
and
mov
rol
adc
gs
lret
pop
out
repz
clc
mov
or
dec
sub
jp
jne
inc
mov
pop
sub
push
sub
xor
mov
xor
out
in
xchg
lods
and
push
daa
xchg
sub
push
dec
push
jne
dec
mov
cmpsb
test
sbb
xchg
repnz
push
out
jmp
add
inc
lods
inc
xor
ret
and
xlat
xchg
mov
fcomip
or
and
inc
xchg
sbb
int
aam
fwait
hlt
add
push
add
and
or
xchg
or
lcall
ljmp
bound
popf
inc
jle
pusha
shrb
or
inc
xchg
add
data16
cmp
adc
mov
cvtps2pd
cmp
inc
fs
jle
adc
std
or
push
xor
adc
and
cmp
jge
pushf
filds
and
pusha
lret
sar
rcll
jbe
push
sbb
iret
cmp
mov
or
call
addr16
sbb
mov
jae
lea
cmp
pop
mov
xchg
js
loopne
jl
mov
mov
adc
push
test
mov
push
pop
pusha
xchg
cmpsl
daa
sub
xchg
xor
loope
stos
loope
push
dec
bound
es
jb
mov
and
mov
pop
stc
cmp
inc
decl
xorb
pop
adc
mov
mov
mov
mov
xor
aam
call
into
jae
jae
aad
jl
pop
push
push
push
or
cmp
jge
pop
pusha
outsl
xchg
adc
sbb
sbb
mov
fildl
lock
jl
jns
pushf
cmp
test
lock
mov
jnp
pop
movsl
pushf
clc
fnsave
mov
cmp
aas
rolb
push
pop
fdivs
pop
stos
lea
dec
in
js
mov
imull
js
ficomps
jns
inc
mov
jmp
or
xchg
mov
mov
xor
pop
xorb
int
fs
push
xor
insb
jmp
add
int3
cmc
sbb
push
pop
repz
insb
dec
cld
push
cmp
rclb
xchg
cli
pop
xlat
je
ret
lcall
xchg
mov
jb
loope
sti
out
aam
mov
inc
imul
mov
xor
js
mov
dec
inc
lahf
les
xchg
jne
bound
nop
mov
lret
sbb
popl
in
std
test
mov
sub
js
js
loopne
and
mov
and
imulb
into
mov
cmp
mov
popf
ja
call
ljmp
repnz
js
mov
cltd
lock
aam
dec
add
test
lea
jmp
xor
push
pop
pop
dec
xchg
xlat
fdivl
jg
stos
rcrl
add
daa
lods
cmp
jae
push
jecxz
xchg
clc
xchg
ja
icebp
adc
iret
imul
stos
pushf
rorl
mov
or
or
loopne
jmp
inc
push
loope
dec
outsb
fwait
clc
xor
mov
int
fmull
cmp
scas
pusha
inc
and
and
xchg
pop
scas
jge
push
xor
fldcw
out
mov
out
gs
inc
jnp
arpl
or
and
push
arpl
mov
mov
sbb
sarl
adc
loope
insl
sub
add
pop
cmc
movsl
adcb
adc
mov
test
cmp
ret
sub
pop
sti
cmp
jne
dec
pop
mov
mov
mov
adc
imul
gs
sbbb
or
mov
mov
clc
inc
stc
hlt
pop
sbb
cmp
sub
mov
in
arpl
subl
pop
pop
mov
enter
rclb
rol
rcr
pop
out
dec
lods
inc
add
or
leave
pusha
and
imul
pop
cmc
int3
xchg
out
sahf
sub
clc
xchg
xor
dec
xchg
or
enter
add
mov
cmpsb
dec
and
jmp
or
mov
xchg
jl
fidivl
jno
inc
imul
pop
push
fwait
pop
pop
int3
push
xor
fdivs
push
fmuls
push
les
repz
xlat
stc
std
jne
mov
mov
cmp
std
clc
flds
mov
mov
out
das
push
push
mov
push
and
xchg
cmpsl
adc
and
mov
cs
in
scas
inc
fbstp
sbb
mov
mov
dec
push
and
in
cmp
mov
ret
nop
adc
dec
push
ds
lret
add
int
xchg
je
sbbb
and
jp
movsl
push
ror
and
pop
int
xchg
cmp
popf
scas
shrb
test
pop
lods
push
sahf
sbb
and
lock
push
cmp
xchg
insl
dec
jnp
adc
nop
int3
daa
inc
lock
mov
dec
xchg
pop
ljmp
mov
mov
ror
push
sub
jp
shll
mov
jmp
inc
push
xcrypt-ofb
cmpsl
in
jnp
ficoms
cld
arpl
push
ljmpw
repnz
or
xchg
sub
mov
ret
test
mov
add
shl
xchg
or
rcrb
mov
orb
push
setns
adc
dec
mov
sbb
stos
imul
testb
pop
mov
sbb
inc
mov
not
mov
ja
pushf
outsl
adc
or
jmp
popa
flds
insl
add
push
insl
cli
pop
xor
lea
adc
imul
adc
add
and
push
jns
ljmp
jg
enter
rclb
in
enter
js
mov
in
loopne
sbb
dec
adcl
dec
mov
push
and
les
pop
dec
adc
int3
mov
xlat
add
mov
xor
and
sbb
jge
dec
add
push
std
repnz
mov
lock
aad
insl
jle
pushf
add
imul
mov
push
mov
jmp
scas
fsubrs
inc
movsl
dec
ret
and
jge
repnz
in
imul
jno
adc
mov
int3
cltd
je
dec
mov
xchg
pop
sbb
leave
fcmovnu
pop
jbe
push
push
push
pusha
jmp
jno
outsl
js
or
jg
adc
pop
push
mov
dec
sub
pop
adc
sbb
int
jl
cld
sbb
jmp
sahf
pop
ret
mov
cmp
or
jnp
and
psraw
sub
incb
inc
imul
xor
lcall
pop
pop
xchg
add
roll
xor
push
lock
out
mov
jp
dec
in
dec
adc
popf
xchg
int
stc
fs
enter
pop
imul
push
stos
add
int
xchg
test
stos
dec
dec
push
stos
jp
ds
push
test
pop
js
in
mov
mov
subb
ret
push
dec
xchg
cmpsl
stos
shlb
outsl
lea
sbb
cmc
stos
lock
bound
push
mov
jbe
adc
popf
xor
jg
gs
rcr
outsb
insb
frstor
ret
inc
jo
mov
mov
xchg
nop
xchg
push
pop
xlat
loopne
xchg
xchg
imull
sbb
dec
cli
pop
shlb
dec
int3
lcall
leave
mov
and
scas
xchg
or
xchg
jnp
iret
pop
cltd
loope
mov
out
push
fdivs
lea
aam
push
pop
dec
xchg
xchg
subl
cmp
push
imul
shr
add
monitor
scas
mov
and
andb
outsl
mov
jmp
push
push
ja
pop
mov
cmp
loopne
adc
cmp
xlat
or
and
cmp
jae
push
loope
loop
adc
push
daa
loopne
pop
push
jge
outsl
pop
cmc
stc
cmp
fwait
ret
push
jg
fisubs
sahf
ds
dec
cs
fistl
insb
or
inc
fsubr
loop
nopl
xlat
loopne
push
push
xlat
xchg
outsl
xchg
xchg
aas
and
aas
outsl
xchg
jle
lods
jns
add
xor
rolb
pusha
mov
cmc
push
push
mov
repnz
jl
mov
rcrb
sbb
fldl
and
dec
lods
cld
and
and
jbe
imul
add
jnp
push
repz
adc
lods
shrb
mov
push
jo
cltd
mov
pop
enter
inc
xlat
dec
xor
fs
sarl
test
or
jg
dec
outsl
or
add
mov
fxam
sbb
popf
call
lcall
bound
jbe
jae
fs
inc
dec
nop
push
int3
push
test
cmp
fisttpl
call
loope
arpl
pop
stos
adc
mov
lret
jne
xor
les
lock
sbb
rcl
popf
inc
aam
adc
cmp
lods
out
push
push
or
outsl
add
fsts
sub
xchg
js
bound
js
imul
sub
leave
lds
out
test
jne
xlat
aas
xor
jo
orb
cmp
das
cmp
fcmovnu
mov
cmpsb
fimuls
mov
push
xor
cmp
lcall
adc
lret
sbb
jmp
mov
jge
cmp
gs
das
xor
push
or
pop
scas
sbb
push
js
push
cmp
sbb
dec
popf
cmpsl
fwait
cmpsl
pop
sub
sbb
or
shrb
cmp
xchg
shlb
mov
or
add
rcll
scas
inc
jb
bound
mov
cs
push
add
cmp
ret
jl
xlat
insb
loope
pop
hlt
pop
cs
test
sub
or
cmp
adcb
xlat
jne
mov
inc
or
sub
sbb
mov
int
dec
push
dec
test
pop
cmc
stos
sbbb
clc
popl
pop
out
lds
mov
add
cltd
xor
cmp
xor
sub
lods
aaa
xchg
jbe
call
add
jno
fcmovnb
and
aam
push
mov
lcall
pop
or
repnz
pop
fsts
inc
adc
jno
cmp
enter
idivb
mov
test
sbb
cwtl
mov
cmp
xor
inc
bound
cmp
pop
jne
fisubl
pop
push
shll
ds
add
push
mov
xchg
ja
dec
mov
inc
lea
nop
aas
sbb
insb
pusha
or
gs
xchg
idiv
pop
xchg
aaa
std
mov
mov
inc
cmpsl
les
xor
dec
and
iret
rcrb
mov
neg
mov
int
std
mov
add
arpl
fdivl
mov
add
fidivl
sti
push
ds
iret
mov
xchg
es
aaa
out
sti
sbb
fdivrs
mov
mov
push
inc
push
lret
mov
je
add
adc
pop
mov
mov
xor
mov
into
lods
sbb
out
aam
das
cmc
sahf
mov
lar
cmpsb
in
and
push
mov
cmpb
icebp
push
lret
dec
jns
aas
dec
and
xchg
pop
ret
add
sub
push
and
loope
sub
mov
scas
cmc
repnz
fnstsw
mov
std
decb
or
sbb
fldt
aam
fpatan
fdivl
dec
out
icebp
sub
cmp
cmp
inc
adc
insb
es
ret
icebp
stc
into
das
xor
je
addl
mov
and
inc
push
sub
jo
pop
mulb
aas
rorb
inc
clc
divl
leave
loop
jge
mov
lahf
int
mov
xchg
adc
out
or
xchg
lock
popa
mov
mov
xlat
pop
fidivl
xchg
enter
inc
sub
dec
jp
adc
cmp
.byte
insb
inc
sbb
add
outsl
std
out
das
jmp
and
or
sub
rclb
pushl
insb
outsb
jle
xlat
cli
add
mov
loopne
cmp
cmp
xchg
mov
xchg
std
sbb
xor
adc
lds
cwtl
aaa
mov
push
or
inc
mov
adc
sub
test
mov
push
inc
lahf
jg
pop
pushf
dec
push
adc
push
push
push
arpl
add
pop
and
push
repz
jbe
in
xchg
sub
xor
or
xor
jo
pusha
adc
mov
mov
mov
mov
insb
jae
adc
or
sahf
add
dec
pop
shrb
jbe
icebp
movsb
std
fs
cmp
dec
icebp
xor
and
repz
fidivrl
rcll
mov
pop
inc
jl
xor
xchg
iret
pop
fimull
shll
xchg
adc
movsl
xor
cmp
add
add
insl
test
pop
test
push
aad
jmp
mov
aas
out
mov
aad
test
ret
repnz
into
inc
sub
stos
dec
dec
rcl
popf
pop
xor
in
push
xchg
test
stc
test
outsl
movsb
lcall
lcall
mov
mov
or
pop
out
sbb
addb
xchg
cmp
nop
loop
jb
adc
cltd
and
lods
imul
push
maskmovq
mull
mov
out
adc
les
push
mov
or
lret
xchg
push
xchg
or
movsl
loop
imul
mov
cmpsl
mov
cs
int3
pop
mov
loopnew
jno
and
add
gs
lea
xchg
mov
std
mov
pop
jmp
clc
in
iret
orb
mov
jmp
pop
data16
frstor
push
cmpsb
adc
psrad
fwait
push
lods
sbb
pop
imul
jg
mov
and
cmp
imul
call
push
mov
mov
enter
adc
movsb
test
stc
pusha
xor
call
jbe
aaa
xchg
adc
cld
sub
cmc
push
mov
mov
mulb
hlt
mov
push
sbb
pop
in
mov
push
in
dec
stos
sbb
fidivrs
ss
or
sbb
adc
pushf
add
fiaddl
dec
sarb
xchg
cltd
inc
mov
movsl
adc
icebp
and
orl
rcrl
mov
rcrl
add
pop
rclb
xchg
rep
push
or
sub
mov
sub
dec
cmp
dec
iret
sbbl
dec
popf
fdivp
xadd
insl
mov
cld
xchg
dec
outsb
sti
and
push
loope
pop
lret
bound
or
iret
lock
scas
pop
xchg
stc
outsb
fcmovbe
mov
push
xchg
push
dec
mov
iret
repz
add
pop
cwtl
or
out
call
sbb
gs
cmpsb
rcr
bound
adc
sbb
scas
js
dec
adc
cmc
mov
mov
xchg
repnz
sub
sbb
push
and
mov
mov
lret
cmp
sub
sbb
int
fwait
daa
sbb
data16
lahf
sahf
movsb
adc
fldenv
out
jb
fstl
jno
mov
xor
movsl
call
hlt
iret
mov
sbb
sarb
or
testb
jne
xor
rcll
cmp
jl
lret
sti
jge
les
and
dec
ret
notl
and
push
incb
pusha
sti
adc
xor
or
je
lea
sbbb
dec
mov
xchg
mov
xor
movsl
lods
cmp
dec
hlt
fadd
cmp
sbb
jnp
lret
mov
add
stc
mov
xor
aad
jle
test
inc
icebp
cmp
add
movsb
js
clc
jg
bnd
mov
loopne
cltd
sbb
movsb
inc
icebp
icebp
xchg
imul
cmp
xchg
movsb
inc
jns
out
mov
mull
dec
icebp
insb
adc
lea
dec
adc
inc
mov
testl
incl
data16
xor
js
fiadds
rolb
adc
push
cltd
arpl
mov
pushf
add
mov
pop
jecxz
dec
fisubs
stos
jge
outsl
imul
mov
xlat
inc
jl
pushf
out
mov
bnd
pop
pop
pop
call
enter
cmp
lods
pop
in
daa
pop
push
mov
fisttpl
lahf
push
lock
cmc
daa
push
mov
rolb
xor
pop
daa
lret
scas
outsb
int
add
iret
xchg
insb
sub
sbb
mov
and
pop
in
mov
cmp
lea
cld
and
pop
inc
xchg
and
push
pushf
sbb
iret
or
or
in
int
jbe
test
inc
mov
into
js
div
cwtl
shr
sti
cld
iret
pop
mov
loop
lock
hlt
nop
xchg
cli
or
mov
test
add
add
jb
sub
cli
cmc
push
xchg
lods
lcall
push
cmp
adc
lock
mov
shl
arpl
aas
xor
testb
jge
in
pop
inc
xchg
sub
sub
ss
jge
push
cld
xchg
ffree
mov
push
jae
popa
xor
js
push
les
add
mov
fsubrl
cltd
das
cli
stc
loope
pop
jp
lds
sub
stos
adc
rcll
and
stc
fimuls
int
loopne
jp
and
out
andl
inc
cmp
insl
lcall
add
mov
add
dec
cwtl
dec
addr16
rclb
and
clc
and
sbb
pop
inc
fstl
addl
inc
or
aaa
adcb
roll
imul
cmp
fnstsw
sti
fnsave
arpl
adc
jno
xchg
flds
mov
push
mov
adc
jmp
xor
mov
lret
mov
mov
scas
lcall
and
xor
mov
and
pop
xor
xchg
mov
cmp
push
sub
mov
push
xor
pop
mov
mov
sahf
sub
pop
cmp
xchg
mov
and
sub
filds
int
xor
dec
sub
mov
jecxz
adc
xchg
dec
call
push
aaa
and
fdivrs
mov
stos
xchg
rcrb
jbe
or
pop
mov
push
stc
dec
sub
dec
cmp
stos
sahf
test
dec
clc
mov
sbb
cmp
outsl
outsb
inc
and
add
xchg
sti
call
xchg
or
inc
cmpsb
xchg
imul
xor
inc
dec
jb
mov
scas
dec
rorb
call
xchg
fsubrs
scas
jne
test
sub
dec
cli
das
adc
ficomps
adc
jb
dec
pop
cmp
outsl
loopne
ss
dec
cmp
gs
lea
jnp
cltd
xor
enter
inc
mov
inc
mov
js
cmp
ja
icebp
add
stc
xchg
pop
nop
adc
aad
mov
lods
mov
sbb
mov
and
rol
rcll
push
movb
xor
mov
push
arpl
cmp
lods
add
sbb
lods
jge
cmp
lods
and
inc
xchg
insb
fidivrs
cld
mov
pop
sbb
ss
sti
xor
test
addl
cs
jnp
mov
loope
iret
cmp
pop
sub
fdivr
and
cmp
lds
xchg
ret
orb
xor
jnp
in
sahf
or
aad
fwait
mov
test
shrl
call
fidivs
movsl
cltd
fistl
insl
mov
in
inc
mov
mov
out
push
sarl
popa
lods
sub
inc
in
testb
sbb
stc
or
sahf
add
scas
mov
faddl
js
fsubl
xor
jl
cmc
lods
jbe
in
add
fidivrl
cmpsb
and
mov
dec
mov
add
fwait
mov
xchg
dec
fwait
add
mov
push
scas
and
or
addr16
xchg
mov
test
roll
xor
sbb
call
pop
loope
sbb
ljmp
stc
aad
cld
dec
dec
push
cmp
push
sub
sbbb
adcl
shll
and
pop
std
aad
xchg
push
mov
testb
negb
fstpt
cli
pop
test
je
jbe
nop
sbb
sbb
mov
jae
xchg
jle
jae
jge
movsl
ret
adc
jne
jb
pop
jae
lret
jb
test
mov
mov
in
adc
out
fidivrl
xor
ja
lds
stos
adc
push
rorb
addr16
sbb
mov
xchg
sub
enter
loop
aas
push
sar
push
sub
mov
js
ds
lahf
andb
arpl
cmc
and
xchg
dec
std
sbb
inc
out
xor
xor
xor
mov
mov
push
ljmp
push
inc
mov
mov
mov
gs
jnp
xchg
add
adc
daa
out
jl
add
jae
xchg
nop
push
inc
cli
ds
rcrl
out
dec
loop
mov
lcall
das
lcall
jl
sbb
jae
push
cmpsb
arpl
dec
fdivs
loop
and
adc
rcrl
adc
lcall
and
enter
int3
aaa
loop
insl
pusha
mov
loopne
sar
pop
mov
daa
lea
mov
mov
insl
pop
mov
mov
dec
pop
jmp
inc
jge
add
testl
gs
mov
in
arpl
jecxz
nop
mov
test
jne
cmpsl
popa
pop
repnz
lcall
add
xor
loope
mov
enter
orb
xchg
ja
jmp
shlb
aaa
scas
sarb
jp
aaa
je
in
cmp
test
in
rolb
adc
fsubrp
mov
adc
dec
or
cmpl
push
cmp
push
push
dec
das
push
fbld
ljmp
movsl
imul
stc
jge
aas
push
xchg
inc
sbbb
call
sbb
lods
add
jb
jo
jb
fdivs
hlt
jl
push
cmpsb
test
mov
and
or
adc
jmp
std
dec
and
or
lds
shrl
mov
jg
enter
sbb
push
out
adc
mov
add
mov
mov
lock
in
inc
dec
xlat
cmpsb
mov
aad
std
sub
adc
xor
nop
shlb
in
lods
dec
dec
pusha
mov
fistpl
outsb
add
push
enter
mov
sub
cmp
mov
jb
out
inc
mov
sub
xchg
xor
roll
or
int
push
and
adc
and
enter
imul
push
lock
jmp
loope
xor
stc
leave
cmp
mov
sbb
mov
gs
dec
mov
fnsave
adc
pop
mov
mov
jnp
mov
mov
call
shlb
ljmp
lret
enter
movd
jmp
imul
orl
pop
adc
mov
push
stos
xlat
add
mov
in
clc
add
fnsave
sbb
lods
inc
and
xchg
aam
mov
mov
in
mov
and
dec
xchg
stc
mov
mov
xlat
sbbl
mov
inc
dec
mov
iret
rcr
shll
mov
repnz
xchg
cmp
sbb
mov
xchg
push
imul
ss
jl
jl
inc
test
orl
ret
roll
push
mov
jns
mov
add
or
xor
mov
cmp
cmpsb
inc
leave
faddl
insb
pusha
sub
pop
xor
cmp
sbb
lret
and
pop
mov
xlat
mov
xor
mov
add
int3
jnp
dec
in
jne
dec
xchg
xor
cwtl
loop
mov
xlat
fwait
stos
scas
jne
into
call
mov
loope
adc
jl
cmp
faddl
or
or
in
or
inc
add
loop
gs
cld
test
pushf
pop
lods
pop
mov
dec
xchg
inc
repnz
movb
daa
and
sub
mov
lods
aad
lahf
imul
cld
xchg
xor
xchg
and
mov
mov
sub
xchg
mov
jbe
push
pop
hlt
lret
and
arpl
insl
jbe
sub
xor
pushf
addr16
mov
cld
dec
jmp
lea
mov
push
xor
sbb
fisttps
inc
lock
and
aad
sub
lods
clc
mov
aad
mov
inc
jecxz
iret
or
out
push
scas
xchg
add
lret
or
js
loope
pop
stc
ja
xor
cmp
cwtl
push
ret
xor
arpl
std
dec
sub
xor
mov
ja
adc
jecxz
jge
lea
dec
stos
dec
insl
jns
pop
js
mov
inc
scas
cwtl
xor
test
sahf
test
test
inc
int3
fimuls
mov
imul
cmp
sti
inc
mov
lock
pop
cmp
sub
and
cmp
pop
test
cwtl
and
jne
insl
xchg
sub
imul
inc
xchg
icebp
xor
xor
cmp
cltd
aaa
cmp
lcall
xlat
dec
sahf
mov
pop
das
std
fiaddl
hlt
shlb
or
pop
push
loope
ret
sbb
lds
daa
cmpsl
and
pop
xor
pop
into
xor
or
mov
or
dec
sub
test
mov
push
fcmove
cmp
jl
loop
pop
push
or
movsb
js
mov
inc
xor
sti
cli
lahf
mov
out
sbb
ret
fwait
mov
or
inc
fs
aas
push
adc
xlat
shrl
adc
and
lahf
setno
ficomps
pop
dec
push
arpl
cltd
xor
popf
or
fwait
jl
xor
pop
cwtl
es
push
sub
push
xlat
fnstenv
jp
jl
faddl
aaa
xchg
mov
in
and
hlt
lahf
sub
outsl
pop
or
imul
jb
mov
xor
fst
jo
call
adc
scas
data16
and
mov
cmpsb
dec
stos
xor
mov
inc
into
lcall
loop
pop
sub
mov
jge
loopne
mov
adc
push
pop
cld
push
xchg
jno
mov
rorl
mov
sub
cmpsb
jo
cli
iret
pop
cmp
jb
add
adc
mov
aam
lret
sub
cmp
cmp
das
cwtl
push
in
sti
jb
pop
xor
mov
mov
or
rcrb
sbb
jecxz
arpl
dec
sbb
mov
mov
iret
pushf
pop
and
fstl
leave
or
cmp
push
movsb
mov
popa
or
mov
push
iret
lret
lahf
push
enter
inc
add
cwtl
cli
pop
scas
test
mov
sbb
dec
into
cwtl
add
inc
cmpsb
jecxz
nop
or
cmpsl
ss
subb
sub
xchg
mov
pushf
lret
push
adc
mov
cmp
rcll
shll
clc
insl
xchg
cli
lods
notb
das
ljmp
lret
iret
sti
scas
rcl
lds
pushf
push
aaa
nop
xchg
mov
das
mov
leave
ds
into
add
sub
mov
push
adc
mov
lcall
adc
aam
and
mov
cwtl
loope
into
int
mov
bound
lret
add
sahf
leave
jmp
call
inc
pop
mov
scas
sub
sbb
pusha
push
ss
and
lods
push
mov
sub
inc
fsubs
push
lahf
scas
inc
cmp
mov
mov
loope
or
ljmp
jb
lahf
inc
rolb
sbb
sahf
mov
cmp
subb
adc
in
mov
adc
add
fidivl
jmp
imul
push
pusha
push
push
fs
mov
unpcklps
jecxz
push
push
xor
mov
push
push
jle
sbbl
xchg
aam
and
stos
lock
ret
mov
ret
add
lret
jecxz
pop
push
out
jp
clc
jbe
lahf
aad
inc
jl
scas
leave
or
mov
pushl
loop
lds
jb
mov
aas
mov
push
in
and
rolb
push
stos
pop
adc
sahf
mov
and
cmp
mov
fcomip
cmpsl
fwait
xchg
andb
adc
mov
or
ja
cltd
jge
pop
loopne
mov
test
dec
add
or
arpl
shl
dec
sbb
inc
addb
lcall
shll
inc
mov
jmp
inc
inc
or
or
pop
jp
nop
leave
stc
cld
mov
stc
jle
sbb
cld
dec
sub
sbb
and
dec
cmp
in
shll
sbb
outsl
test
push
xchg
jmp
repz
pminsw
imul
orb
andb
jae
or
push
push
sub
lds
adc
dec
inc
lea
sbb
xchg
inc
add
mov
add
mov
lahf
pop
add
sti
lods
lock
adc
inc
inc
insl
mov
sub
into
push
data16
pop
mov
sbb
adc
scas
test
loopne
xchg
mov
add
rolb
das
pushf
sbb
mov
xor
fdivl
sbb
shrd
mov
xor
leavew
xor
mov
mov
dec
inc
sarl
scas
add
inc
lret
jl
push
std
or
in
jno
subl
addr16
jnp
imul
iret
popf
insb
dec
out
push
adcb
push
rcl
xor
int
mov
push
sub
sar
es
popf
pop
sub
dec
rcrl
call
xchg
jmp
fildll
mov
dec
add
cmp
es
sti
xor
cmpb
sbb
jmp
or
out
lret
xchg
mov
adc
mov
fidivrl
pop
xchg
sub
push
std
and
xor
inc
in
hlt
jecxz
sti
xor
out
movl
jmp
lods
sbb
in
repz
shll
inc
push
imul
out
cs
cmp
incl
jge
std
es
pop
in
push
jmp
add
xor
inc
inc
pop
pop
inc
push
inc
cmp
xor
dec
andl
mov
pop
sbb
jb
outsl
cld
cmp
jmp
subb
sub
test
imul
mov
jge
nop
ss
movsl
and
mov
mov
ffreep
out
cwtl
add
outsl
sbb
pop
mov
repnz
and
push
and
lods
rorb
adc
dec
dec
lret
jge
push
xchg
mov
push
jb
hlt
dec
push
sub
vpaddsw
out
imulb
leave
es
shll
lea
out
mov
icebp
pop
xor
push
lret
xor
mov
or
adc
ja
sbb
daa
lds
push
bnd
imul
mov
mov
cmp
lret
hlt
mov
xchg
test
aas
enter
stos
daa
mov
negb
xchg
or
fsubrl
aad
in
and
aaa
sub
lea
das
sbb
sbb
mov
mov
shrb
sub
sub
sbb
xor
lods
aas
cmovb
cld
in
jp
jo
pshufw
or
push
push
in
lret
lods
cmpsb
jns
bound
sub
sahf
movsl
or
mov
test
inc
xor
out
lret
add
jno
jg
cltd
das
dec
sbb
ret
cmpsl
xchg
mov
xor
add
pop
mov
aas
ss
jge
cwtl
add
mov
sbb
sub
aad
xchg
mov
adc
out
add
mov
xor
jo
mov
dec
jae
cltd
mov
leave
sbb
int3
xchg
fisubrs
cmp
icebp
lock
xor
jmp
ss
imul
repnz
fimuls
add
pop
sbb
lock
call
cmpb
and
pop
ja
cmp
mov
cld
arpl
out
sub
cmc
hlt
dec
fs
sub
pop
mov
fwait
stc
inc
xlat
loope
roll
pop
jne
jns
dec
fiadds
xchg
pop
mov
movsl
sbb
sbb
andl
sub
cli
inc
lods
pop
adc
or
or
xchg
jnp
scas
pop
mov
xchg
jno
cmp
jnp
sub
xor
mov
idivl
jmp
dec
mov
aad
cmpsb
mov
test
gs
xor
lods
fpatan
adc
sub
loope
push
push
mov
dec
sti
push
out
repnz
xchg
nop
lea
push
fcmovb
orb
add
sbb
js
shlb
test
mov
cmpsl
push
mov
mov
sahf
lods
mov
jecxz
or
cmp
add
fnstenv
pop
sub
imul
pop
int
shrl
lods
ljmp
data16
scas
and
mov
rcrb
push
dec
add
bnd
mov
pop
lahf
sub
and
or
add
dec
jbe
inc
sbb
mov
cli
mov
in
mov
pop
mov
les
fs
sbb
or
jne
inc
lret
test
mov
dec
cld
pop
rorb
addl
lahf
or
hlt
fsubs
ss
xor
mov
push
addr16
sbb
inc
jl
mov
xor
in
es
cs
fstps
dec
aad
and
stc
xchg
cld
cli
lcall
mov
and
pop
pop
sbb
dec
dec
sbb
mov
repz
sbb
cmp
mov
cwtl
and
into
sub
adc
or
pop
repz
ljmp
sbb
imul
xchg
iret
cmp
cwtl
out
ret
pop
ds
ja
fwait
mov
enter
hlt
notl
inc
gs
jb
cmp
sahf
adc
xlat
iret
inc
in
lds
ret
mov
push
inc
cmp
into
imul
fldl
push
sti
outsb
adc
popa
in
pop
and
adc
pop
in
addr16
jecxz
out
push
add
mov
rorl
jns
pop
fwait
lret
inc
movaps
leave
mov
and
xchg
mov
test
fs
xor
test
movsl
mov
test
dec
lods
out
adc
and
dec
pop
outsb
loope
dec
mov
arpl
dec
inc
adc
outsl
rol
mov
adc
clc
out
xor
jge
ja
pusha
push
aam
pop
rorb
movsb
ret
in
cmp
mov
xchg
adc
cmpb
rolb
sarl
pop
out
pop
addr16
ret
ja
scas
gs
mov
mov
loope
push
jns
repz
inc
dec
adc
jo
mov
push
cltd
and
adc
pop
xlat
aaa
out
sbb
and
wbinvd
or
popa
loop
mov
movsb
dec
outsl
sub
imul
add
fsubrl
mov
fcomip
push
push
xchg
mov
hlt
cmc
push
sbb
lds
sahf
sbb
je
mov
lahf
and
sbb
jge
into
call
les
imul
mov
sub
inc
mov
push
aad
mov
mov
jbe
ss
ret
mov
dec
repz
dec
add
sti
aas
mov
sub
fcomps
les
cmp
loopne
mov
fildll
or
sub
fwait
and
mov
fmuls
pop
jne
mov
out
sbb
lock
enter
lret
jmp
cmpsl
and
imul
in
pop
into
pop
jb
inc
mov
inc
mov
and
lods
aas
or
repz
cs
or
sbb
push
push
xor
stos
jnp
pop
add
es
gs
popa
xor
push
sbb
sub
ficomps
sti
sbb
mov
lea
adc
shl
add
movsb
add
mov
jae
bound
mov
aad
test
xor
sbb
mov
xchg
or
fstpl
out
mov
xor
pop
enter
mov
and
popa
fs
add
adc
push
js
push
mov
hlt
cmp
cmp
inc
cs
cmp
add
repnz
push
xchg
push
aas
cmpsl
loop
pushf
pushf
fnstenv
mov
jmp
int3
adc
adc
inc
sbb
fdivl
dec
mov
xchg
sbb
xchg
insb
scas
fldl
cmp
out
cltd
dec
and
ljmp
rcr
add
push
xchg
nop
lods
xchg
mov
cmc
movsl
pop
mov
mov
pop
inc
add
sub
dec
dec
push
ret
shlb
add
mull
and
cltd
aas
dec
xor
mov
jmp
dec
outsl
testb
xchg
test
sti
add
dec
scas
sbb
push
cmp
out
push
cld
mov
fwait
jno
pop
sub
lahf
inc
sub
dec
inc
push
jmp
pop
mov
es
cmp
in
mov
mov
das
inc
imul
sti
pushf
fsubl
aam
clc
popf
inc
xchg
jle
repnz
push
or
leave
adc
mov
lcall
orb
pusha
cld
and
repz
xchg
jo
cmp
add
or
xchg
jge
addr16
es
lret
mov
pop
mov
push
push
imul
pop
sbb
mov
std
sub
or
gs
sub
imul
dec
or
ja
loopne
inc
mov
add
out
mov
clc
stos
mov
pushf
sarl
ror
dec
in
sti
inc
mov
xchg
sbb
lret
lcall
xorl
sbb
sub
lret
jnp
mov
xchg
fdivl
dec
imull
inc
lret
pop
xchg
fsubrl
mov
mov
or
dec
lcall
jne
pop
jmp
jp
mov
jle
cmp
aam
push
cwtl
ficoms
lea
pop
movsb
or
outsl
lods
ljmp
lret
and
insl
stc
nop
cmp
out
in
pop
cs
andb
jbe
jg
xchg
fbstp
dec
rolb
test
enter
jnp
mov
cli
fwait
ss
push
sub
or
hlt
add
test
add
filds
jp
sub
inc
xchg
push
aas
imul
test
and
lea
lods
mov
pop
in
cmp
popf
push
sbb
stos
lds
mov
push
jle
insb
ds
sahf
in
addb
adc
or
mov
orw
pusha
sar
lods
push
stos
scas
or
mov
les
pop
push
mov
xchg
pop
jne
push
mov
daa
data16
fs
sbb
mov
lds
add
adc
loopw
pop
or
sbb
or
or
xor
imul
and
cmp
js
push
addr16
in
jb
mov
mov
mov
jl
or
js
lock
pop
mov
inc
repnz
test
negl
dec
imul
in
inc
push
xor
aad
fsubrl
mov
negl
push
in
dec
insl
pushl
pop
out
fildll
daa
in
mov
xchg
fisubs
xchg
xor
xchg
adc
cmpsl
out
xor
pop
inc
sbb
std
sub
loope
dec
and
lahf
imull
rolb
mov
dec
ret
in
jns
pop
scas
add
orl
pop
mov
jb
test
pop
ljmp
adc
das
fstps
xor
mov
std
and
add
push
aas
sarl
xor
add
mov
cmp
xchg
inc
sub
xor
xchg
mov
test
lea
iret
inc
xor
pop
push
or
aaa
mov
sbb
mov
movsl
pusha
push
es
test
or
dec
aam
loop
into
scas
xlat
popa
inc
jmp
test
push
jmp
pop
or
addl
stos
movsl
pop
movsb
jae
iret
aas
dec
pop
pushf
popf
or
ret
jno
xor
fmuls
sbb
repnz
lock
cs
pushf
addr16
pop
push
lret
pop
sti
call
mov
push
test
jae
fcomp
insl
out
sbb
push
outsl
push
cmp
cmp
adc
sbb
cwtl
ret
int
jl
sbbl
out
outsl
mov
add
pop
mov
idivl
mov
mov
test
enter
pop
testb
mov
aam
or
pop
mull
xcrypt-cbc
cmpsl
push
sbb
test
mov
or
sbb
lods
fsubrs
pop
repnz
cmc
adc
adc
rcl
popf
pushf
loope
sarb
sbb
lret
jnp
dec
sub
dec
aam
adcb
sub
add
xchg
pusha
dec
shlb
lds
test
cmp
and
adc
jl
mov
push
jae
enter
adc
jl
jbe
fsts
push
jmp
loop
jae
popf
pusha
xor
shlb
ret
cwtl
scas
pop
push
adc
stos
lods
scas
adc
repnz
ror
jecxz
lcall
cs
jge
cmpsb
mov
push
mov
outsl
jnp
dec
inc
mov
jo
mov
cwtl
jns
push
sub
fcomip
test
lods
cmp
in
ret
imul
stos
in
dec
xchg
popf
cmpl
inc
sbb
lret
cmp
fcoml
cmp
mov
fisubl
xor
loope
xchg
dec
mov
test
sub
ja
into
bnd
je
inc
rcrb
mov
and
jbe
xchg
icebp
pop
movsl
test
je
clc
shrl
jmp
dec
pop
insl
das
sub
cmp
insl
jmp
mov
xlat
mov
ret
inc
dec
movsb
fdivl
add
push
in
xchg
cmp
popa
pop
jmp
outsl
jbe
shrb
mov
leave
pushf
fisubrl
fbstp
lret
or
jb
sub
xor
and
addr16
test
mov
in
add
clc
jae
call
fimull
cmp
addr16
mov
call
push
lret
push
sti
cmp
jb
xchg
adc
push
and
push
mov
pushf
cli
xor
sub
jg
arpl
xchg
jmp
in
je
out
cmp
lcall
xor
mov
cmp
cltd
clc
jecxz
notb
mov
jmp
sub
jp
mov
mov
loope
arpl
dec
or
mov
pop
pop
aad
lret
movsb
or
rcr
inc
xor
arpl
imul
push
jecxz
jmp
ret
push
shll
lea
sbb
mov
loope
ds
nop
loope
addb
cli
sub
mov
lcall
sbb
push
bnd
mov
push
lea
mov
jo
fcompl
iret
mov
stc
xchg
xor
fucomp
push
cmp
push
lcall
stc
sahf
clc
jp
adc
andl
inc
jb
es
mov
stc
push
subb
jb
mov
cmp
xchg
js
push
sbb
push
nop
into
ss
cmp
sbbb
loope
lods
int3
in
xchg
mov
dec
out
ljmp
pusha
cmc
lret
cmp
jb
mov
out
daa
lea
xchg
fldt
shrd
adc
cmp
cmp
nop
arpl
inc
pop
addr16
mov
cmp
and
adc
rcrb
sbb
loopne
cld
cmp
jne
jo
jae
ret
sbb
adc
inc
ljmp
pop
cmp
sbb
pop
lahf
icebp
es
mov
lret
ja,pt
push
add
cmpsb
rolb
insw
scas
insb
push
jae
mov
sbb
test
popl
stc
mov
in
jge
add
in
xor
lret
outsl
xor
push
in
push
imul
pop
xchg
add
push
cmp
or
inc
in
push
pop
in
pop
mov
mov
fistl
lods
xchg
lds
jecxz
or
xchg
cmp
mov
incl
loopne
insl
ret
cwtl
popf
pop
push
out
mov
and
stos
nop
int3
nop
rcl
stc
lcall
fwait
or
pop
jle
iret
mov
in
jb
pop
pushf
out
mov
cmp
or
sub
dec
mov
mov
sbb
jecxz
idivb
hlt
mov
xchg
outsb
push
dec
push
pop
outsl
sahf
ret
cmp
sti
jg
sbb
je
mov
test
roll
scas
dec
addr16
popl
cs
fdiv
sub
sub
outsb
jge
mov
ret
outsb
pop
mov
xor
daa
neg
jnp
jo
mov
push
hlt
adc
nop
xor
push
sbb
push
je
pop
mov
or
ja
pop
add
push
pop
lds
pop
cs
cmp
sahf
or
sub
pop
inc
xorb
xchg
bound
repz
or
pop
repnz
cmc
mov
loope
scas
sbb
pusha
and
out
fwait
scas
nop
outsb
pop
sub
xchg
outsl
jp
sub
sub
shll
enter
outsb
xchg
mov
mov
pop
fimuls
mov
push
mov
ljmp
repz
fst
push
mov
mov
stos
add
fcomi
jle
loope
add
jle
fstp
into
mov
inc
outsl
xchg
add
push
pop
jne
imul
clc
lock
adc
in
jecxz
push
popa
out
out
cltd
sbb
dec
fsubrs
xchg
push
hlt
inc
imul
aaa
sarl
mov
dec
dec
jmp
arpl
movsb
leave
repnz
stos
or
pop
push
push
lret
xor
push
test
ja
mov
test
rcl
cmpsb
popf
jmp
sbb
sub
lds
das
int3
cmc
out
mov
mov
mov
fs
push
dec
les
or
sub
inc
popf
or
clc
hlt
adc
mov
jnp
hlt
jmp
jg
pushf
push
outsb
pop
mov
push
adc
pushf
imull
adc
mov
xor
jo
rorl
mov
mov
inc
or
push
sub
jg
loop
push
jle
repnz
idivb
or
jg
mov
inc
insl
shrl
and
mov
push
andl
test
pusha
sbb
xchg
sub
loope
push
jmp
pop
add
push
flds
xor
mov
inc
movsl
xchg
sub
push
mov
adc
rolb
xchg
mov
paddd
bound
cmp
add
mov
jmp
rclb
outsl
jmp
pusha
mov
push
push
mov
push
adc
mov
sbb
lcall
sbb
and
ss
sbbb
and
std
mov
lret
sub
xchg
jne
jo
pop
std
mov
mov
xor
das
pusha
lret
xchg
add
les
xchg
sbb
xchg
push
cmp
mov
ja
push
dec
sbb
nop
sbb
aad
xchg
in
push
test
jbe
scas
xor
xchg
out
or
mov
stc
ret
out
xlat
lret
fidivrl
lcall
lcall
mov
psrlw
pop
std
and
in
mov
mov
outsb
out
sbb
mov
loope
dec
pop
je
in
xor
jle
subl
fnstsw
sbb
lcall
cltd
in
xchg
and
jmp
dec
xchg
popf
loope
cli
push
cmp
inc
xchg
adcb
push
add
in
push
jns
mov
mov
push
mov
cmpl
add
cmpsb
in
mov
cmp
pcmpgtw
in
adc
bound
jbe
push
pop
push
fs
jecxz
xor
jbe
inc
int3
lret
push
inc
and
inc
inc
imul
mov
into
adc
iret
pop
dec
popa
out
lds
jo
mov
jmp
fidivrl
lret
in
push
sub
in
in
out
jl
or
add
andb
lock
cmp
add
popf
data16
xchg
push
cmpsl
sbb
fs
lcall
jmp
cmp
xchg
xchg
and
imul
ss
inc
test
ret
ucomiss
cmp
fistpl
push
pushf
cld
ficoms
push
mov
add
repz
push
pop
xor
daa
and
aaa
repz
pop
repz
out
aaa
daa
cli
lret
repz
iret
in
adc
iret
push
jg
inc
cmp
test
xchg
movsb
stos
and
or
xor
jmp
mov
fistps
bound
adc
inc
xlat
mov
jle
fistpl
mov
mov
inc
add
jmp
pop
mov
inc
jae
ficoms
mov
rcrl
ss
add
jbe
mov
xorl
inc
rcl
jae
dec
add
pop
inc
je
cld
inc
clc
insl
repz
test
xchg
mov
or
repnz
pop
push
and
repnz
mov
jb
inc
fnstcw
cmp
iret
call
pusha
ds
scas
lea
js
rcrb
data16
dec
loop
mov
cli
add
add
inc
push
lret
sbb
jecxz
insl
mov
mov
jne
ffree
sbb
jecxz
xor
js
or
cmp
add
pop
or
sti
xchg
sub
ljmp
jge
test
out
sarl
sbb
adc
dec
push
stc
fs
test
adc
loopne
lock
xor
cli
mov
fisubs
aaa
into
sub
and
hlt
jbe
cs
mov
insb
lret
pop
sbb
ret
sbb
subb
adc
lods
mov
xor
jecxz
in
push
mov
stos
adcl
add
xorl
enter
or
sub
push
inc
iret
stos
fs
sbb
xor
fsubs
or
jmp
sub
xchg
cmp
add
ds
mov
fs
pop
loopne
and
shll
loop
and
and
dec
inc
adc
cmp
je
dec
sbb
ret
pop
add
sbbb
push
into
aad
push
xchg
jno
imul
mov
cmp
pusha
nop
bound
add
mov
mov
sub
jge
out
cmp
xor
fistpll
mov
std
pop
xchg
add
ss
mov
pop
clc
add
loop
aad
mov
ficoms
lret
pusha
arpl
fcoml
adc
negb
mov
out
pusha
shll
jg
sbb
adc
imul
sbb
dec
lret
mov
movsl
xchg
jae
in
movsl
push
pushl
aam
or
mov
sahf
mov
mov
push
icebp
inc
and
jb
insl
xor
push
sbb
in
pop
leave
pandn
lea
mov
test
jg
pop
adc
or
scas
mov
movsl
push
pushf
xor
daa
mov
outsb
dec
push
pop
rcl
popf
imul
int
cmpsl
push
inc
scas
sub
inc
lahf
cld
pop
cld
stos
jmp
int
mov
push
ss
dec
jns
mov
and
sbb
rolb
in
ljmp
fdivrl
fildl
aaa
clc
jnp
cli
stos
inc
test
xchg
xchg
sbb
mov
sbb
scas
inc
sub
sbb
gs
mov
mov
mov
sub
pop
dec
push
mov
mov
push
out
inc
xchg
sbb
sbb
push
fcoml
das
adc
sahf
push
cmpsl
fs
nop
sbb
cmpsl
jae
sub
pop
push
test
fs
dec
mov
jg
xchg
shll
adc
and
xchg
cmpsb
js,pn
shll
or
or
gs
push
sub
mov
sub
iret
loopne
popf
and
add
dec
adc
andl
in
inc
dec
insb
shr
mov
push
rol
xchg
inc
insb
lcall
movsb
push
or
xchg
test
pop
movsl
repnz
push
mov
lret
xchg
out
push
cmovnp
pop
xor
loopne
jmp
pop
and
push
adc
lahf
sbb
cltd
sub
dec
outsl
divl
mov
sti
or
in
adc
pusha
mov
addr16
sbb
mov
sarb
jle
stos
dec
ret
mov
in
js
std
adc
sbb
int3
cmp
shl
xchg
jo
jne
ljmp
insl
fdivrs
pusha
pop
mov
xchg
mov
mov
sarl
jno
out
mov
push
insl
inc
out
cld
add
imul
push
pusha
add
shll
imul
lock
push
iret
sbb
sub
out
mov
push
or
sbb
mov
xchg
addl
mov
jmp
mov
sub
clc
jle
mov
cmp
shrb
fldcw
jp
pop
fcmovu
loop
in
xlat
in
gs
cmp
insl
data16
xor
ss
insl
lahf
jp
das
jnp
push
jo
imul
push
mov
hlt
fs
cltd
ucomiss
or
pop
jmp
subl
and
insb
ret
ret
sbb
fstp
das
xor
xchg
mov
or
sub
sub
dec
or
xor
push
push
sti
jb
mov
mov
jo
test
add
aad
cmp
mov
xchg
sbb
mov
cmp
movsb
mov
fstl
jae
push
inc
imul
cmpl
test
jmp
mov
sbb
cld
iret
mov
dec
and
push
adc
xor
imul
sbb
cmp
ljmp
loop
cwtl
shlb
ret
xchg
pop
je,pn
pop
mov
xor
ret
dec
test
mov
inc
mov
lret
mov
es
bound
add
push
out
test
cmp
or
jmp
and
push
fs
sbb
test
es
cmp
pop
push
jecxz
xor
loop
cli
stos
cmpsb
out
lods
cli
mov
cmpsb
or
push
xchg
ret
or
fistl
jg
fsubrs
pop
mov
xor
mov
xor
mov
mov
sbb
pop
jmp
push
fistps
adc
push
lea
sbb
xor
add
fidivrs
sub
push
sub
adc
test
and
lock
mov
xchg
sub
xchg
sbb
sub
xor
cmp
icebp
mov
jbe
push
xchg
push
or
push
test
es
pop
inc
xor
cmpsl
aad
dec
push
fwait
divb
jbe
lcall
and
ja
notl
dec
ja
movsl
mov
jg
test
jne
adc
mov
sbb
push
filds
adc
inc
mov
fsts
pop
outsb
hlt
mov
dec
sbb
scas
pop
adc
lds
mov
push
mov
aad
push
or
out
shlb
hlt
sbb
rorb
rdmsr
and
xor
jl
cwtl
pop
inc
stc
lret
adc
push
ljmp
xchg
or
pop
adc
jns
mov
push
adc
in
jno
imul
hlt
fldenv
mov
outsl
mov
outsb
movsb
sub
pop
rol
and
mov
fbstp
mov
aaa
insb
mov
inc
in
dec
fisubrl
loope
call
cwtl
adc
jo
scas
sbb
jb
hlt
add
fmuls
xchg
or
pop
out
mov
dec
mov
dec
outsl
sbb
pop
push
imul
push
js
xchg
ret
sub
push
sahf
sub
xchg
mov
subb
push
xor
sti
mov
or
mov
jl
daa
mov
and
mov
cld
call
cmpsb
and
pop
jge
out
sub
pop
jns
sbb
mov
mov
mov
pop
mov
rcrb
fsubl
std
xchg
inc
or
jmp
cmc
xor
add
cmp
mov
mov
popf
jnp
mov
add
and
pop
sahf
daa
push
vmread
push
lahf
jbe
mov
adc
leave
test
int3
xor
mov
pop
in
or
repnz
xchg
loope
loope
xor
cli
lea
and
popf
mov
lods
push
xchg
inc
mov
inc
sub
pusha
lret
add
add
cmc
xor
stos
add
dec
adc
xchg
aad
rcr
pop
push
cld
addb
adc
jo
mov
stc
mov
jb,pn
icebp
add
subl
dec
das
test
sbb
in
lret
or
out
ds
jbe
bound
int3
mov
fcmovne
inc
or
loopne
sbb
mov
add
add
test
sbb
into
or
sbb
pop
inc
adcl
push
mov
popa
icebp
loop
mov
out
lods
das
mov
loop
pusha
mul
insl
data16
lret
iret
inc
lret
js
inc
mov
jnp
fldenv
js
mov
jmp
mov
add
and
repnz
cmc
inc
in
push
lret
insb
bound
mov
adc
mov
test
xor
xorb
sbb
mul
inc
test
ror
bound
mov
ret
dec
test
cs
std
fcoml
and
lods
add
enter
add
loop
pop
mov
mov
push
fistpl
push
xchg
mov
imul
dec
xchg
mov
fwait
into
iret
adc
pop
inc
xchg
mov
mov
es
iret
xlat
or
jbe
mov
mov
mov
add
out
scas
int
jg
rcrl
inc
repz
idiv
mov
push
sub
arpl
pop
fwait
shr
mov
test
ds
dec
mov
jge
out
ljmp
enter
lcall
shrl
push
dec
pop
or
inc
sbb
mov
xchg
push
in
lods
and
pushf
adc
mov
add
add
aas
mov
push
fisttps
cmpsb
loope
cli
lds
fdivl
mov
push
mov
cmp
lds
ret
adc
addl
fsubr
xchg
push
dec
push
dec
cmpsb
fdiv
pop
scas
test
leave
xor
hlt
ja
sbbl
adc
in
xchg
sbb
lahf
rclb
cmp
dec
push
sbb
lcall
aam
cwtl
push
push
xchg
add
cltd
xor
jnp
frstor
mov
stos
lods
add
adc
test
xchg
insb
mov
push
or
push
and
sbb
movsl
pop
inc
xor
dec
xchg
pop
xchg
fwait
cmp
adc
mov
and
dec
xlat
or
jnp
arpl
push
enter
ljmp
stos
nop
rcr
sub
sbb
adc
mov
scas
push
mov
jecxz
push
or
jmp
shrl
idiv
into
in
pop
clc
out
or
xchg
pop
sahf
adc
inc
mov
frstor
jl
fs
cli
aaa
mov
cltd
mov
jae
push
popa
je
fdivl
jo
xlat
testl
and
pushf
jb,pn
xchg
ret
je
test
std
mov
ja
xchg
jb
scas
push
cmp
rclb
mov
or
or
js
mov
inc
mov
adc
das
mov
bnd
push
shlb
cmp
imul
cmp
stos
arpl
push
dec
lock
pop
int
push
in
test
xor
sub
lods
push
fstpt
ds
xor
jno
pop
das
ret
mov
or
data16
mov
pop
cmpsl
sub
fmull
inc
push
movsl
sub
outsl
loopne
pop
sbb
pop
mov
xor
gs
call
adc
push
pop
int3
pop
adc
xor
addr16
xchg
sbbl
inc
outsl
pop
or
mov
mov
rolb
mov
fisubrs
cs
cmc
orb
inc
mov
adc
fwait
mulb
mov
mov
outsl
adc
lret
xchg
pushf
aaa
mov
pop
cmp
sub
push
in
ret
dec
ljmp
jg
or
mov
js
or
div
adc
xor
jns
and
popa
add
mov
mov
jb
leave
mov
lods
adc
popa
mov
and
jae,pn
mov
pop
sahf
in
ret
fnstsw
lret
push
call
xchg
push
mov
daa
lret
pop
imull
daa
cli
add
jbe
sub
dec
pop
mov
shrl
jnp
mov
aaa
das
inc
sti
add
add
mul
outsb
dec
and
scas
cltd
pop
mull
scas
lcall
and
jno
cmc
movsb
in
mov
aas
data16
frstor
adc
mov
test
jae
jmp
bound
mov
les
rcrb
or
mov
push
pop
jne,pt
popf
xchg
mov
sbb
or
mov
lret
std
in
xchg
cmpl
outsl
aad
in
jge
shrl
nop
sub
jl
das
ret
sub
rorb
stos
repz
mov
cmpsb
fcomps
mov
scas
mov
loopne
or
out
lea
int
test
pusha
testb
sub
jg
add
dec
lret
add
loope
test
pop
pop
rolb
xor
jmp
sbb
pop
repz
and
push
fs
fistps
outsb
iret
mov
fdivs
ljmp
fimuls
pop
sarl
lahf
repnz
cmp
xchg
xchg
fwait
ja
jne
push
out
and
popa
cmp
adc
jbe
or
pushf
cli
adc
xor
sarb
and
mov
mov
xor
rolb
mov
dec
es
loop
mov
fs
sbb
add
shll
mov
jno
sbb
ja
adc
push
push
xchg
xor
jmp
adc
mov
mov
scas
pop
loope
mov
mov
enter
andb
adc
lcall
mov
push
popa
sub
dec
fsubrl
arpl
loop
mov
or
inc
stos
push
pop
aad
jnp
fcompl
sub
jl
pop
lret
test
pop
lods
arpl
ret
inc
enter
or
inc
pushf
ljmp
mov
insl
mov
mov
sub
push
fnsave
loope
push
and
notl
ja
mov
stc
lret
mov
popf
lahf
daa
faddl
jmp
pushf
imul
add
dec
xor
and
dec
movsl
xlat
xchg
cmpsl
fisubrl
shll
adc
and
test
adc
aam
push
subl
gs
cmp
xchg
aas
xorb
lret
mov
imul
jmp
fsts
das
pop
mov
test
repz
fwait
push
jb
jns
jge
jno
sub
aas
xor
xchg
outsl
nop
ljmp
pop
mov
cmp
mov
push
push
sub
mov
jl
pop
ljmp
fisubs
add
insl
adc
and
repnz
xchg
dec
ror
push
sbb
les
fistpl
adc
shr
lods
mov
pop
int
xor
cld
mov
in
lods
jmp
fmulp
xchg
enter
out
scas
mov
mov
inc
bound
stos
enter
mov
xor
jae
push
daa
inc
mov
sti
test
rcl
js
int3
outsb
insb
jne
pop
stos
inc
les
and
pop
addr16
lds
dec
push
xlat
jmp
out
stos
into
cmpb
gs
mov
loope
xorl
jo
es
hlt
xor
dec
ficoms
pop
mov
aas
dec
test
mov
fwait
cld
data16
xchg
xlat
ds
mov
bound
pop
int
rcrb
dec
mov
or
dec
repnz
leave
jb
adc
or
sub
out
sub
in
daa
enter
faddl
gs
mov
adc
pop
or
dec
iret
iret
pop
mov
xchg
fdivl
mov
out
mov
mov
dec
jp
or
ljmp
ds
adc
dec
pushf
pop
das
adcl
test
dec
adc
mov
mov
mov
push
add
into
call
jae
idivb
insb
cmp
ret
dec
in
dec
jge
stos
add
cmp
and
rol
cmp
nop
aaa
mov
push
pop
subl
fiaddl
loopne
fs
cmc
mov
mov
or
xor
mov
pop
and
out
sarb
ret
fwait
ret
scas
mov
cmp
scas
mov
mov
daa
dec
cmp
and
fidivrs
lods
mov
cmc
pop
add
mov
pushf
pop
clc
dec
sbb
xchg
dec
aad
in
rorl
add
out
mull
sbb
rolb
sub
data16
xchg
arpl
bound
call
and
push
add
push
xor
js
sbb
mov
xor
add
ret
xchg
and
inc
add
adc
in
rclb
mov
popa
lret
mov
sbb
sub
enter
sbb
test
jbe
push
aam
dec
xor
nop
or
jo
inc
ss
shrb
cld
mov
cwtl
arpl
and
push
jne
push
adc
icebp
mov
pop
fwait
insb
pop
xchg
mov
rcll
dec
sub
bound
in
cmpsb
stc
fisubrl
jns
inc
adc
xor
push
repz
xchg
arpl
into
push
or
inc
arpl
and
lods
add
mov
inc
xchg
pop
inc
mov
sub
in
push
jmp
aas
ret
or
jge
out
leave
or
xchg
sbb
jno
dec
jae
jp
imull
add
faddp
mov
dec
lret
xor
jbe
mov
bound
mov
jmp
int3
xchg
std
bound
roll
xchg
or
daa
pop
call
jp
push
out
repz
cwtl
mov
dec
fldl
inc
mov
sbb
dec
outsb
lods
add
cmp
lods
icebp
ja
pusha
mov
cmpsb
imul
xchg
push
push
lahf
sbb
xor
push
sub
push
imul
mov
mov
mov
es
xor
jmp
and
aam
mov
dec
cmp
and
andb
cmpsb
cld
ret
jmp
or
daa
stc
test
fcompl
inc
imul
addr16
xor
pop
aam
in
mov
lock
mov
jg
mov
push
leave
cli
mov
push
pop
add
xor
mov
ja
or
outsl
jae
test
rolb
mov
repnz
mov
scas
inc
inc
cmp
jle
addr16
or
push
filds
repnz
in
dec
cld
push
pop
scas
std
test
std
add
ficomps
popa
mov
mov
fisubrl
push
outsl
sbb
stos
cli
push
inc
outsb
mov
jle
cld
js
mov
test
sub
xchg
imull
mov
push
mov
mov
js
pop
leave
pop
push
pop
aas
hlt
sub
lds
cwtl
mov
test
dec
repnz
dec
insl
cmp
loopne
and
push
sub
iret
inc
fs
les
loopne
sahf
je
cmp
push
jle
xorl
lcall
fstpt
push
lods
xor
ljmp
mov
hlt
out
divl
xor
adc
outsl
loopne
lods
clc
pushf
sbbl
inc
and
and
sbb
inc
arpl
dec
cmp
cmp
sub
lds
mov
mov
cld
pop
jecxz
in
mov
fcomip
mov
xor
mov
fsubrl
add
sti
or
or
div
mov
sbb
xchg
mov
sbb
cmpsl
push
mov
push
add
aas
test
add
lock
fdivrp
insb
into
insb
loope
xor
test
mov
pushf
cmp
and
scas
add
out
pop
push
push
jge
jecxz
test
lea
mov
stos
in
mov
hlt
rclb
cmp
xchg
pop
mov
ss
cmp
jle
xchg
and
cmp
pushf
in
cmpsb
xor
loope
add
xor
dec
stc
jg
pop
xchg
sahf
mov
push
je,pt
mov
fucomi
xchg
adc
in
sbb
pop
jl
pop
xchg
sub
clc
pop
int
pop
mov
lods
inc
push
mov
test
in
mov
cmp
out
lcall
xchg
xor
out
fwait
pop
and
dec
cmpsb
jo
andl
shr
test
loop
notl
dec
xor
jmp
or
iret
push
lahf
hlt
pop
shll
aam
dec
sub
dec
daa
loopne
or
mov
in
and
lret
xchg
adc
ja
xor
jbe
fucomp
cld
idivb
lcall
fnstcw
mov
shlb
das
lods
mov
mov
lret
movsb
in
cmp
outsb
clc
inc
out
outsl
fucom
fnstsw
mov
mov
mov
adc
mov
js
sub
pop
cmp
inc
outsb
xorb
xchg
or
add
jmp
or
push
jle
or
call
cmpsl
or
cmpb
lods
sbb
lea
mov
and
roll
cmp
push
inc
loop
cmp
out
pushl
cmp
bound
cmp
push
mov
push
mov
jle
mov
push
stc
das
insb
add
arpl
xchg
push
fs
int
clc
notb
cld
fists
cmp
mov
xchg
mov
cmc
mov
call
aaa
mov
xor
ljmp
ss
xchg
jns
roll
mov
cs
rorl
inc
ret
cmc
test
or
push
sub
mov
cmp
popf
sbbb
mov
sarl
imul
push
mov
outsb
add
ja
ja
int
popf
outsw
aas
lock
cmc
cmp
mov
and
jle
imul
cs
enter
sub
mov
insl
scas
notb
dec
loop
nop
xor
inc
inc
ljmp
fstps
inc
xor
daa
insl
pop
lahf
jle
mov
xchg
mov
movl
testl
mov
mov
imul
ficomps
or
in
ret
sbb
icebp
sarb
mov
push
push
leave
pusha
call
fsubrp
jo,pt
dec
push
enter
scas
mov
cmp
call
adc
aam
mov
fucomi
mov
leave
out
ss
and
sbb
pop
jb
jl
shrb
sti
bound
pop
imul
int
in
xlat
adc
and
add
push
pop
in
jae
in
shrl
addr16
pop
push
jle
ficoml
xor
jecxz
or
loopne
testb
js
enter
lret
enter
xchg
jne
and
test
push
int
mov
cmc
dec
jno
icebp
pop
pop
push
dec
in
fwait
dec
es
lods
and
insb
xchg
add
xor
jne
cs
xlat
add
into
in
jmp
add
add
mov
inc
adc
mov
std
mov
pushw
jmp
test
movsl
pop
lahf
popa
inc
mov
test
lods
sub
loope
mov
popa
pop
js
push
pop
shlb
fisttps
add
mov
mov
inc
mov
pop
out
rorl
jno
mov
lods
into
dec
add
sbb
xor
dec
call
jb
cmp
mov
filds
in
out
mov
lahf
lahf
orl
pop
aad
add
sbb
mov
sub
out
data16
loope
call
xor
dec
cmp
aam
addr16
lods
push
xor
pop
cmp
cli
adc
push
xchg
rcrl
adc
call
loope
cmp
inc
xchg
xchg
inc
sarb
cmc
xor
fistpl
jne
ds
mov
insl
dec
ljmp
loop
test
lds
not
out
lcall
adc
clc
mov
loop
ret
cmc
inc
test
pop
mov
popa
sbb
sbb
ja
hlt
std
adc
sbb
sbb
fsubl
insl
sbb
fistl
fildl
je
aas
int
sahf
jge
aaa
cmp
clc
lds
push
inc
inc
repnz
cli
xor
cmp
arpl
test
shlb
cmpsb
cmpb
cmp
in
xor
jno
in
xor
push
dec
addb
repnz
out
pop
mov
out
daa
add
imul
push
mov
stc
mov
adc
fcmove
sahf
cmpsl
test
sbb
cmpsl
test
iret
lds
mov
dec
pop
insl
popf
mov
sbb
jp
cmpsl
cltd
jl
stos
divb
fwait
sbb
xor
stos
sub
mov
insl
imul
mov
cmpsl
mov
jnp
adc
mov
or
cmp
cmp
repnz
fs
daa
adc
sbb
enter
or
lods
mov
frstpm(287
test
les
les
mov
jl
dec
push
adc
leave
sub
test
mov
xlat
xor
mov
jmp
adc
sbb
std
fnstenv
dec
pop
cwtl
and
mov
push
and
lea
push
mov
cmp
jnp
inc
lds
xchg
pop
stos
mov
lcall
add
inc
jle
test
and
or
loope
sub
mov
out
stc
dec
add
fbstp
test
add
rcrb
stos
dec
aas
scas
lcall
gs
int3
gs
sbbl
mov
pop
push
incb
fs
std
stos
aam
rorb
cmp
cmp
dec
dec
mov
pop
loopne
dec
add
mov
sub
test
insb
inc
fcomps
fldt
jmp
mov
cld
daa
mov
mov
aam
mov
push
mov
or
xor
mov
add
fldt
je
cli
mov
in
jl
fcoms
jae
xor
out
and
inc
and
adc
or
les
mov
pop
mov
ret
loopne
das
mov
pusha
mov
arpl
rcrl
dec
lods
adc
daa
adc
rorb
jmp
jp
ljmp
aam
jp
imul
sbb
dec
xchg
push
dec
or
push
movsb
fimull
sahf
popa
xchg
mov
mov
sub
aaa
and
dec
mov
lret
pop
clc
in
mov
adc
and
pop
pop
xchg
push
ret
movsb
cmp
jae
lfs
movsl
notb
xchg
add
lock
mov
cmp
cmpsl
adc
jp
insb
sub
mov
icebp
and
test
or
scas
ss
pop
lods
and
adc
out
jno
sub
sub
fstpt
adc
inc
mov
int
cmp
or
repz
mov
jns
in
or
mov
call
push
clc
popf
push
call
shlb
cmpsb
movsb
test
cmpsb
sub
in
les
push
or
sti
jecxz
push
push
pop
sub
pop
bound
dec
dec
or
imul
mov
and
dec
jno
rcr
dec
outsb
xor
sub
and
addl
scas
cmpsl
icebp
cli
mov
sub
cmp
loopne
mov
aam
mov
sti
jl
pop
shrb
xchg
ljmp
jg
push
std
dec
pop
pop
test
xchg
mov
inc
xchg
fcomps
xor
xchg
negl
xchg
push
stos
jl
js
adc
add
adc
inc
push
cltd
cmp
jo
add
xchg
leave
aaa
data16
mov
fsubl
dec
push
fmulp
cmp
scas
sarl
popa
repnz
int
mov
xchg
pop
hlt
dec
jmp
mov
int
dec
push
or
sbb
outsb
les
lret
adc
and
push
addr16
jb
sub
adc
in
loope
imul
scas
cld
sbb
mov
outsl
sbb
cs
call
and
outsb
mov
outsl
sbb
lret
xchg
pop
sbb
mov
sahf
fs
rcll
sbb
out
jae
or
dec
mov
enter
adc
or
inc
jl
mov
dec
subl
lods
icebp
addr16
ja
scas
das
and
jge
lea
cld
js
pop
jge
imul
sbb
xor
stos
ffreep
movsl
sub
pop
add
cmp
shlb
mov
test
and
movsl
test
mov
pop
add
aam
inc
imul
push
xor
dec
jmp
or
cmpsb
or
cmp
cmp
out
sub
xchg
je
sub
sbb
fcmovnb
or
jb
cltd
orb
xchg
pop
ret
sub
push
and
lea
xchg
sbb
enter
and
mov
arpl
shll
mov
out
adc
cs
sub
pushf
inc
in
jge
bound
xchg
inc
mov
sbbl
jns
add
pop
pop
aam
shlb
hlt
and
dec
push
pop
dec
sbb
cld
add
lods
cmpb
cmpsl
mov
stos
push
clc
or
lods
lret
pop
lret
int
pop
pop
xchg
hlt
cmp
or
push
add
or
call
data16
inc
mov
and
enter
aam
push
pushl
add
jnp
push
subl
enter
fs
in
fldenv
xchg
dec
ret
fsubrs
addr16
sbb
adc
cmp
pushf
adc
inc
fiadds
mov
ret
xorb
mov
popf
pop
loop
hlt
inc
test
mov
mov
xchg
jg
rcrb
mov
mov
inc
inc
sbb
cmovno
ret
jae
lds
das
mov
cmp
out
sub
fimull
into
ljmp
test
movsb
jmp
xor
pop
sbb
aam
adc
les
mov
cmp
insb
push
cmp
push
ds
lret
inc
aam
fists
push
mov
mov
rolb
jmp
pop
cwtl
daa
mov
in
stos
icebp
pusha
sahf
jno
xlat
lret
loope
xor
mov
xor
pop
test
test
cltd
lret
lock
lods
xchg
jbe
mov
ja
ficoml
jae
mov
insb
sti
scas
sbb
cltd
test
repz
inc
dec
sbb
mov
cmovae
xchg
dec
movsl
scas
push
xchg
or
sub
dec
mov
jmp
fsubr
popf
and
imul
sbb
aam
dec
ds
mov
sub
pusha
imul
mov
cmpsb
in
sbb
shrl
sbb
push
mov
dec
leave
jnp
decb
stc
test
sti
jns
mov
leave
adc
orl
fimuls
inc
or
mov
inc
xchg
push
popf
fdivl
prefetch
fistpll
adc
mov
pop
or
mov
lahf
subb
daa
daa
ljmp
sub
jns
out
sti
adc
imul
loopne
loopne
xor
adc
je
mov
divb
inc
pop
fwait
bswap
or
roll
jns
sbbl
mov
pop
adc
mov
aas
push
push
jnp
daa
test
fs
imul
ror
adcb
xchg
in
xchg
xchg
call
xchg
aam
adc
stos
mov
outsb
xchg
neg
xchg
mov
jno
gs
or
mov
push
fs
inc
mov
lods
pop
sub
cmpl
add
push
mov
mov
xchg
push
fimull
cmc
out
movsb
pop
cs
mov
mul
mov
sub
xchg
cltd
gs
adc
jge
xor
or
fidivrs
test
lahf
mov
pop
jns
cmp
lea
push
mov
cli
sbb
lods
inc
test
push
pop
mov
jae
das
fwait
mov
pop
clc
jmp
lcall
cmp
divb
mov
pop
imul
add
and
aaa
fwait
jmp
insl
and
inc
xchg
xchg
sub
and
jae
cmp
pop
jns
in
xorl
lock
es
adc
testl
mov
pusha
insl
movsb
or
iret
fistl
aad
inc
cs
mov
push
js
adc
push
fucomip
cld
into
pop
push
mov
push
mov
lods
add
pusha
test
insl
push
in
sti
dec
add
pop
repnz
push
dec
adc
push
or
push
inc
or
mov
push
cmp
decb
xchg
incb
fs
popf
adcb
mov
dec
push
inc
add
icebp
test
insl
scas
jne
adc
cmp
int
hlt
cmp
pusha
cs
dec
adc
inc
add
pusha
sub
push
push
inc
mov
lahf
mov
hlt
or
out
test
sbb
and
or
shlb
cmp
dec
pop
mov
stos
lcall
aaa
aaa
in
mulb
xchg
insl
lcall
inc
mov
fisttpll
sub
cwtl
int
incb
mov
jp
in
imul
fs
sub
jbe
test
mov
xor
inc
jge
daa
lcall
pop
pop
and
test
ret
mov
pop
aam
sub
xchg
cmp
js
insl
fisubl
sub
mov
pop
push
dec
imul
or
add
stc
sbbb
mov
xchg
call
jecxz
nop
inc
push
jbe
xlat
add
lahf
bound
das
mov
outsb
pop
mov
mov
push
xchg
adc
adc
stos
lahf
add
dec
sub
js
aas
js
js
xchg
loope
push
into
xchg
sub
sahf
adc
inc
sbbl
dec
pop
jmp
xchg
inc
stos
cmp
js
sbb
fucomp
sub
and
mov
xchg
adc
stos
fidivs
dec
mov
cli
push
xlat
je
std
out
popf
sbb
lods
or
jl
ret
in
push
movsb
fdivrl
cld
and
jb
xchg
scas
xchg
add
sahf
lret
jae
mov
cmp
dec
jbe
mov
shlb
lret
outsb
add
scas
mov
shrl
or
cmp
sbb
into
mov
jge
ljmp
jbe
arpl
jae
mov
pop
xchg
pusha
fldenv
aam
mov
dec
out
push
daa
popa
lock
sbb
sub
pop
lock
sub
sti
pusha
mov
xchg
xchg
int
add
int3
ds
leave
pusha
pop
test
and
loopne
ja
in
lcall
and
mov
pop
inc
add
insl
jae
and
gs
and
mov
jmp
cld
stos
nop
jnp
imul
mov
fisttpll
test
add
test
test
aas
mov
rcll
xor
es
add
lea
mov
mov
test
sub
outsb
jnp
shr
pusha
mov
fldenv
push
in
out
std
xor
jle
icebp
test
cmc
dec
push
xchg
adc
pushf
negl
xchg
and
and
add
stc
xor
int
int3
or
sti
aam
xor
scas
push
jno
test
icebp
or
mov
or
push
mov
or
pop
call
push
push
adc
scas
sub
repz
mov
out
inc
inc
insl
int
jnp
push
aaa
or
enter
popa
push
rorl
insb
stc
inc
sub
jmp
lret
movsb
int3
xor
sbb
push
sbbb
in
dec
and
mov
cmpsb
dec
ss
sti
cmpsb
or
enter
cltd
add
lcall
cmp
aaa
cltd
pop
movsl
mov
pusha
aad
gs
lock
ficoml
or
add
fiadds
sahf
loopne
mov
xchg
daa
xor
mov
xchg
mov
enter
add
test
out
dec
movsl
dec
xchg
lahf
sbb
pushf
std
mov
stc
jns
outsl
pop
mov
lea
ljmp
shll
pushf
and
mov
movsb
or
gs
fisubl
out
loope
xchg
jb
ret
xchg
jmp
scas
push
cmp
cmp
mov
cld
mov
into
and
rcrl
cs
decb
jg
lret
lods
mov
lock
push
cmp
dec
dec
sbb
das
shr
fisubs
mov
aad
notl
pop
cmc
cli
in
pop
rcr
cmp
jmp
inc
pop
mov
ror
and
addr16
scas
repnz
in
mov
jmp
sbb
and
or
sub
pop
fmuls
sbb
xchg
xchg
jns
insl
jg
add
lock
test
push
fs
into
xlat
sbbl
and
lods
out
add
in
add
push
mov
add
adc
xchg
movsl
sbb
insl
pop
add
out
loope
hlt
add
movsb
mov
ja
es
push
jecxz
pop
loope
cmp
push
mov
push
mov
xor
mov
sub
push
ret
sbb
insl
mov
pop
mov
jp
mov
jmp
test
imul
not
daa
loop
enter
enter
stos
xor
dec
sub
or
test
pop
pop
xor
aas
pop
mov
aaa
mov
and
sub
jbe
fdivp
mov
ss
js
insl
sub
sub
scas
cmp
cmp
mov
ja
push
adc
or
pop
shlb
clc
sub
stos
pop
rol
cltd
lock
sub
push
adc
cmp
daa
dec
dec
or
dec
sbb
in
push
dec
sub
jno
cmpsl
in
adc
repnz
lds
inc
ficompl
sbb
lea
cmp
xor
ficoml
add
lock
push
loope
movsb
inc
jge
mov
inc
or
xchg
mov
fsubr
je
loopne
mov
fnsave
add
sub
bound
jecxz
sbb
sbb
ffree
pop
mov
mov
cmp
add
xchg
sub
xor
inc
arpl
enter
in
sahf
addr16
les
and
mov
pop
jbe
mov
sub
mov
rolb
xchg
push
cmp
hlt
loopne
lea
out
out
mov
ret
xor
or
mov
cmp
imul
test
xor
cwtl
adc
icebp
insl
lock
push
adc
dec
pop
das
dec
and
xchg
sbb
dec
stos
fsubs
fiadds
dec
dec
mov
jae
xor
pop
and
mov
jg
rclb
sub
fiadds
hlt
sub
jge
push
dec
jg
jge
ror
push
rorl
mov
into
jg
mov
stos
les
xor
cmp
dec
sbb
jge
lret
inc
je
scas
testb
outsl
mov
cmp
rep
lods
repz
push
sbb
or
sbbl
outsb
call
ds
mov
call
inc
lods
mov
daa
mov
scas
dec
push
sub
je
jle
js
stos
addl
pop
sub
xor
xchg
outsb
cli
or
ja
xor
inc
lahf
add
in
inc
std
pop
mov
jge
push
jg
out
pop
sub
in
rolb
loope
xchg
and
mov
sub
push
pause
fimuls
orb
mov
cld
es
inc
or
pusha
loop
sbb
ffree
repnz
lock
test
cs
adc
cs
sub
jae
das
adc
rorl
aad
mov
out
idivb
jbe
lock
dec
dec
sbb
push
imul
cli
test
insb
pop
add
xchg
jb
jno
stc
mov
lahf
mov
mov
cmp
fsubr
clc
enter
sahf
repnz
ss
push
ja
call
cmpsl
test
out
sbb
mov
nop
cmp
pop
cli
cwtl
stc
aad
add
or
xchg
jb
sbb
dec
jb
adc
mov
or
and
sub
add
call
push
pop
pop
xor
sub
cmp
clc
and
cld
loope
push
pop
or
pop
sbb
clc
lret
notl
add
mov
loopne
pop
push
xchg
push
and
popa
lcall
in
pop
dec
jg
repz
or
jo
lods
mov
leave
fcmovb
insl
dec
xor
pop
add
or
out
lea
mull
std
push
xor
adc
test
cmp
mov
xor
pop
jb
pop
lret
xchg
sub
ret
ret
stos
inc
std
jl
mov
inc
sub
lea
mov
scas
arpl
xlat
jg
cld
rcl
or
dec
sbb
je
push
call
mov
dec
mov
cmp
add
dec
push
xchg
add
es
push
xor
loop
sub
lea
sub
mov
std
movsl
xorb
xchg
lret
ss
jno
imul
pop
adc
sbb
adc
loop
xor
push
or
cmp
inc
push
xchg
scas
pop
mov
sti
es
lret
leave
enter
out
push
out
aaa
addr16
out
fildl
aam
mov
push
cmc
mov
scas
loop
and
clc
mov
cmc
in
sbb
xchg
cld
mov
mov
adc
test
cli
cli
pop
les
mov
adc
leave
sbb
mov
insb
or
stc
jmp
sub
cmpsb
adcl
pop
call
push
fucomi
bnd
ljmp
mov
pop
mov
xor
mov
sbb
outsb
inc
inc
pop
ficomps
add
jmp
pop
in
adc
ds
mov
cmpsb
sub
dec
sarb
sub
stos
int
mov
pop
sbb
daa
adc
jg
mov
dec
pushf
outsl
mov
add
mov
mov
sub
mov
std
or
sti
mov
out
pusha
ss
lods
mov
fcoml
sub
mov
mov
mov
incb
add
js
jne
xchg
jge
jmp
fldt
fldl
dec
xchg
jp
pop
xorb
inc
loopne
sbb
sbb
dec
adc
stos
lret
sub
lods
aad
icebp
leave
rclb
pop
jae
test
pop
bound
sub
jp
or
loopne
xchg
cmp
inc
clc
es
inc
xchg
mov
aad
movsb
adc
dec
push
xorb
and
cmp
or
pop
push
cld
loopne
ret
popf
daa
fprem1
fdivl
outsl
push
insl
add
cli
mov
push
nopl
fucomp
mov
pop
mov
ret
pushf
dec
adc
aam
xlat
les
xchg
mov
fimull
sub
or
adc
movsb
mov
iret
dec
sbb
pop
cld
jle
sub
int3
adc
and
shrl
mov
and
scas
xchg
mov
mov
js
mov
and
sti
das
jnp
clc
or
jnp
lea
jg
xor
push
jne
loopne
add
roll
jo
insl
sbb
xor
jp
cmp
mov
outsb
aas
testl
icebp
aad
cmp
push
dec
iret
push
and
add
fistpll
mov
roll
or
or
jecxz
sarl
sbbb
push
aam
adc
imul
lahf
fsubp
dec
fistpll
or
cmpsb
dec
mov
push
inc
fcmovnb
ror
fcom
xor
loope
jns
sbb
lods
jno
cmp
mov
js
sbb
and
sub
mov
aam
mov
lret
inc
decl
jno
xorb
aam
xor
sub
push
in
stc
inc
add
aaa
fstp
pop
jae
lahf
sub
mov
inc
shrb
push
int3
das
adc
mov
enter
cmpsb
aam
jecxz
sub
pop
pop
aaa
push
or
push
out
mov
and
pop
aam
fsubl
cmp
add
jmp
mov
pop
ret
int3
aas
scas
dec
push
push
repz
xchg
clc
aam
idivb
xchg
fsubp
mov
xor
xor
dec
mov
pop
leave
sub
dec
std
and
out
xlat
add
and
push
mov
add
int3
cltd
cmpsl
stc
pop
mov
orl
adc
and
cmp
gs
pusha
xlat
test
mov
and
arpl
pop
and
mov
loope
cmp
pop
aaa
mov
add
fmuls
in
lret
pop
pop
jmp
mov
add
nop
fs
ret
dec
jnp
dec
sbbb
test
mov
stos
and
das
testb
pop
std
push
push
and
test
rorl
or
pop
in
test
inc
stc
mov
mov
mov
xchg
sub
je
addl
cmp
lock
mov
pop
adc
push
rorl
movsb
addb
test
jnp
stos
and
mov
or
dec
cmp
sbb
or
cmpb
rcrb
sbb
sahf
das
sbb
fwait
pop
loope
or
pop
mov
jl
mov
test
imul
mov
inc
or
data16
xchg
std
sti
decl
decb
sbb
rclb
out
jno
mov
bound
les
cmpsl
data16
and
adc
push
mov
ret
fs
mov
and
in
jecxz
out
popaw
sub
rolb
cmp
add
nop
push
and
jmp
orl
push
pop
inc
inc
fwait
inc
bound
add
fadd
or
lock
les
adc
test
add
incb
outsb
icebp
leave
xor
push
icebp
dec
jne
outsl
arpl
je
cmp
or
mov
xchg
adc
in
cmp
push
sbb
adc
dec
std
push
inc
jp
andl
xor
call
mov
or
xchg
pop
dec
inc
or
cmpsb
xchg
mov
loopne
mov
push
rcl
rorl
lret
mov
in
int3
sbb
inc
inc
loop
mov
mov
fidivrl
jg
orl
sub
sub
xchg
push
sub
cli
in
cld
std
pop
mov
push
bound
in
jns
scas
add
xchg
mov
inc
sti
outsb
test
xor
nop
add
adc
jae
fisubl
adc
mov
dec
inc
mul
push
inc
pop
aad
adc
in
ret
pushf
inc
jns
aaa
outsl
jnp
adcl
into
mov
add
pop
mov
iret
lea
and
jbe
shrl
aas
stc
jg
xor
add
mov
dec
mov
ror
mov
in
mov
ret
mov
jg
mov
shlb
push
dec
lds
in
cmp
aad
insb
sarb
into
mov
jmp
push
cmp
icebp
adc
jl
leave
shr
and
iret
lock
ret
push
ud2
mov
sub
mov
movsl
andl
sbb
test
jnp
inc
popa
aas
mov
std
push
insb
pop
fadds
aaa
mov
mov
push
push
and
fisttpl
cwtl
ds
jno
xor
stc
sbb
cmpsb
sahf
jnp
nop
adc
mov
cmp
or
hlt
adc
or
dec
lea
mov
fucomp
jmp
cmp
inc
jge
sti
stos
pusha
push
pop
pushf
lret
mov
inc
jmp
mov
ucomiss
lods
lret
jmp
jns
sub
data16
shlb
jno
and
hlt
shrb
and
cmpsb
inc
cmpsb
dec
lahf
cmp
test
mov
xorl
push
sub
mov
popa
sbb
cmp
xchg
fists
xor
mov
cltd
or
push
insl
jecxz
adc
pop
xchg
adc
pop
mov
push
lret
int3
andl
ret
lds
push
cmp
add
dec
sbb
scas
jp
fisttpl
mov
rcl
mov
push
inc
jmp
cmp
and
mov
stos
pushw
call
movsl
cmp
je
pop
pop
in
faddl
cmp
lret
xor
das
cli
xor
ja
mov
ss
dec
cli
outsb
adc
cmp
lods
mov
dec
stc
shrb
insl
pop
ret
iret
sbb
outsb
cmp
loopne
aam
xchg
cld
mov
xchg
xchg
pop
jb
mov
cwtl
pusha
cmp
into
lods
ljmp
dec
orb
outsl
scas
icebp
imul
ret
jns
mov
jp
jae
mov
mov
add
sbb
add
cmpsl
cmc
mov
add
cli
nopl
mov
into
bound
fbld
fnstsw
jp
jns
dec
push
nop
dec
gs
ds
xor
or
loopne
mov
sti
add
ds
jge
cmpl
push
fcmovnb
jle
push
mov
push
mov
mov
into
mov
loope
insb
mov
jle
xchg
lcall
jle
lea
pop
addr16
jbe
test
xchg
and
xor
out
subl
mov
clc
xchg
sub
fs
sbb
or
stc
ds
adc
dec
enter
add
pushf
loop
mov
adc
cs
xchg
movsl
pop
sbb
inc
out
int3
aad
adc
mov
lret
pop
insb
push
xor
or
xor
and
jge
shll
jge
or
sbb
push
icebp
loope
add
rorl
and
xchg
xchg
mov
je
scas
or
jbe
outsl
dec
add
cwtl
sbb
jl
aaa
add
es
mov
cwtl
pusha
int3
lods
enter
sub
xchg
jmp
dec
jno
sub
cltd
add
lahf
call
mov
mov
in
ret
sbb
cmpsl
shl
rolb
icebp
dec
mov
mov
add
test
mov
call
std
std
popl
mov
mov
xor
insb
aas
mov
fbstp
int
push
jecxz
dec
jmp
sti
or
lret
push
sub
cli
mov
movsl
pop
test
test
std
scas
fdivrp
lods
pusha
mov
cmp
cmp
sti
outsb
sub
loopne
mov
enter
aad
test
and
jbe
mov
scas
mov
mov
mov
sub
daa
pop
addr16
ljmp
pop
scas
add
mov
stos
jne
stos
rolb
pop
adc
dec
decl
mov
jmp
pop
mov
jnp
pop
xchg
jnp
test
push
xchg
mov
out
and
dec
or
sub
movsb
test
scas
std
mov
lods
sub
adc
and
cltd
sti
ficomps
mov
shll
ret
stos
int3
fcmove
mov
je
jbe
psubq
mov
xor
dec
in
fs
xchg
loop
ret
ljmp
fidivrl
dec
adc
mov
cltd
jecxz
int
inc
inc
or
dec
shr
outsb
or
jo
mov
shll
ret
mov
aaa
adc
filds
rcrl
pop
sbb
je
jg
mov
dec
adc
fdivrl
leave
popa
incl
or
xchg
clc
sub
in
in
lock
loopne
adcl
lods
lds
dec
mov
push
sbb
add
insl
lock
mov
movsl
stc
sbb
nop
inc
adc
lods
sub
or
lret
jmp
pop
xchg
call
aaa
inc
push
movsb
inc
jg
push
push
xchg
adc
imul
push
pop
movsl
mov
movsl
and
adc
and
adc
jb
push
inc
or
cmp
push
mov
daa
push
insb
push
movsl
cmp
ret
repz
mov
popl
xchg
fs
or
mov
xor
repz
add
negb
cs
pop
sbb
aad
push
stos
ret
out
inc
xchg
cmp
test
mov
pop
and
sbb
lock
jbe
sbb
dec
fmulp
vmovntps
and
cmp
pop
fildl
push
mov
mov
xchg
ljmp
sub
push
int3
xlat
jo
out
imul
mov
vsqrtpd
adc
push
out
push
mov
xor
je
rcll
pop
mov
push
jmp
cli
jmp
push
jns
cltd
out
push
pop
push
dec
dec
add
adc
cmp
insl
mov
and
iret
popa
data16
pop
push
cmpsl
pop
fadd
insl
incb
pop
mov
xor
sahf
pop
js
scas
scas
xor
mov
add
push
ret
out
xchg
pop
loope
ss
shl
stos
push
lods
sub
xor
ret
and
in
loop
repnz
mov
xor
sub
cli
out
dec
add
cmc
stc
mov
and
push
mov
ds
jle
sbb
inc
cmp
out
adcl
dec
popf
sub
mov
gs
mov
jmp
inc
dec
decb
or
mov
int
xchg
cmp
sti
jecxz
out
loop
xchg
ljmp
ss
and
cmpsb
xchg
jmp
mov
bound
jge
vpor
aas
testb
mov
cmp
outsb
mov
xchg
not
push
cld
addr16
mov
sbb
xchg
cltd
inc
aaa
hlt
out
iret
dec
jae
test
cmp
sahf
enter
mov
out
loope
ret
pusha
mov
mov
and
imul
and
sbb
dec
movsb
out
adc
call
lds
outsb
out
repz
jmp
pushf
cmp
sar
jno
loopne
out
in
xchg
inc
mov
dec
jnp
mov
push
lret
icebp
iret
pusha
pop
add
sub
cwtl
xor
ret
add
lret
cmpsb
stc
pop
inc
mov
jns
pushf
push
addl
shrl
pop
cli
xchg
and
xchg
inc
or
mov
mov
pop
mov
icebp
sbb
fstps
dec
aas
sar
adc
inc
inc
mov
aas
cli
push
loop
jnp
cmp
fstpl
cli
inc
adc
outsb
das
std
push
bound
dec
inc
and
shl
jo
dec
fldt
push
xor
call
imul
pop
pop
mov
out
daa
test
repz
movsl
daa
lret
xchg
xchg
mov
xor
push
ficoms
inc
popf
lea
fisubrl
in
sbb
xor
jge
testb
sub
push
daa
mov
movsl
xchg
or
sti
push
inc
add
sbb
dec
push
loop
enter
xchg
mov
xchg
out
mov
adc
divb
xchg
dec
mov
add
movsl
ds
xchg
sub
add
stos
jno
popf
out
sub
and
rol
test
ret
sub
cmp
xchg
sub
mov
jmp
push
jle
fdiv
scas
mov
xchg
add
mov
imul
jg
push
das
and
cmpsb
push
shrl
insb
cmpsb
lods
ret
loope
bound
test
push
or
and
mov
inc
in
jg
cltd
insl
mov
push
das
cmp
dec
mov
xchg
fnstcw
cmp
std
sbb
dec
adc
sar
lret
lret
xlat
hlt
or
test
adc
pop
add
mov
test
scas
pop
shll
push
js
xor
adc
ds
add
mov
mov
sub
outsl
adc
mov
push
test
xor
int3
jo
testl
fwait
jae
movl
xor
pop
cltd
push
and
cmc
sahf
rcrl
lods
packuswb
or
lods
add
test
mov
sti
pop
sbb
es
inc
sbb
or
xchg
mov
inc
popa
sbb
mov
sub
andb
jnp
fs
call
xchg
push
cmc
dec
pop
test
jge
xchg
clc
int
iret
hlt
lods
cmpsb
repz
push
mov
outsb
dec
dec
repz
push
xor
add
push
imul
adc
inc
gs
cwtl
mov
icebp
add
test
stos
push
push
and
movsb
ds
adc
pop
dec
sub
incb
lret
dec
mov
ja
lds
mov
sahf
jb
mov
sarb
push
sbb
sbb
sub
xor
jle
ret
dec
add
or
sub
int3
pop
int3
lcall
push
dec
testb
fld
icebp
fstps
push
clc
in
or
decl
dec
mov
std
mov
filds
sub
imul
add
int
jl
xchg
scas
lock
mov
cld
and
std
lea
fadd
push
lret
push
enter
sbb
jnp
test
and
adc
in
and
scas
fstpt
enter
fs
in
mov
stos
std
mov
inc
insb
lahf
cmp
jmp
pushf
fucomi
cmc
sbb
cwtl
xchg
inc
xorl
mov
adc
call
push
adc
cmp
push
sub
xchg
xchg
xor
std
lock
jns
mov
mov
fmuls
jle
int3
sbb
push
push
and
mov
dec
sarb
and
out
fiaddl
in
rorb
mov
jle
adc
add
btc
sub
add
shrb
test
rorl
mov
dec
xchg
dec
dec
add
outsb
xchg
add
sbb
jae
push
or
rcrb
out
js
cmp
pop
shr
ret
orb
sub
es
mov
add
imul
sub
fsubrl
call
inc
xchg
dec
test
adcb
fsubrs
clc
pop
out
repnz
or
cli
mov
mov
push
scas
sub
ror
jnp
mov
push
sub
movsl
loop
test
int
xchg
movsl
push
or
lods
decb
push
mov
aaa
lds
imul
push
lds
js
mov
and
sbbb
xchg
orl
push
pop
mov
push
dec
push
sti
das
daa
inc
shll
push
dec
xor
xorl
mov
and
enter
pop
pop
hlt
sub
daa
sbb
pop
movsl
jo
outsb
fcmovne
jle
cmp
sbb
imul
out
out
pushf
xor
sbb
sti
lods
js
push
repz
fcoms
cmpsl
fisttpll
xchg
int3
cwtl
mov
aas
fwait
or
ja
pushf
jp
imull
pop
outsb
push
fwait
and
xorl
pop
jno
sbb
jne
bound
nop
xchg
mov
xor
jne
ret
xorb
dec
inc
movsb
repnz
repnz
ret
cmpsb
stos
cmc
lds
xchg
call
imul
repz
add
es
xlat
lods
jae
out
cmp
in
and
repnz
jge
cmp
xchg
push
cltd
cli
push
xorb
cmpsb
cli
scas
imul
stos
pop
mov
xor
push
xchg
mull
or
loop
and
mov
push
cmp
rorl
pop
test
mov
mov
test
pushf
mov
push
jp,pt
in
test
inc
lcall
fildll
cmp
shll
int3
sub
mov
sbb
xchg
pop
subl
call
orl
xchg
inc
data16
int3
out
data16
dec
cmpsb
push
fs
xchg
enter
lret
inc
pop
sbb
mov
lret
cltd
push
int
xchg
lcall
pop
arpl
lret
mov
mov
repz
fisubl
adc
sbb
mov
xor
ret
int
mov
arpl
cmp
mov
fucom
test
movsl
shrb
ds
aam
mov
loopne
sub
lahf
pop
sbb
pusha
movl
xlat
les
push
rorb
loopne
mov
cli
popf
fs
outsb
arpl
adc
or
insb
jnp
dec
icebp
add
sbb
mov
push
inc
rolb
aam
je
push
lock
xor
call
xchg
xor
push
orl
mov
cli
or
push
push
icebp
negb
cld
push
sbb
jne
arpl
rcl
lret
jmp
fstpt
shll
xor
jp
or
shr
movsb
inc
sti
inc
inc
std
ficompl
lcall
and
mov
and
or
loopne
inc
mov
iret
gs
inc
lock
arpl
mov
int3
jae
cmpsb
xchg
push
push
popf
call
loope
mov
in
jmp
lods
cwtl
dec
mov
in
cmp
pop
sbb
call
cmp
mov
or
fcmovbe
adc
inc
test
mov
mov
inc
cmc
or
sbb
dec
pushf
jbe
dec
push
lock
xchg
enter
pop
push
leave
lahf
sahf
and
xchg
push
push
cmp
xor
bound
jge
and
push
sbbl
or
out
repz
inc
pop
cwtl
mov
ljmp
rclb
movsb
push
movsb
test
sub
cmp
fildl
lods
jo
sbb
in
pop
aam
test
adc
fistpl
dec
inc
mov
cmp
lods
mov
idivl
lret
lret
jp
dec
cli
pop
xor
lahf
cmp
jne
bound
inc
adc
imul
leave
addr16
es
filds
fldt
out
call
aas
jle
jo
inc
mov
pop
repnz
outsb
sbb
jmp
in
out
daa
jg
push
jns
movsb
lret
sub
pop
cmpsl
push
repz
loop
es
mov
cmp
popf
ds
pop
cs
aaa
sub
or
test
cmp
xchg
mov
adcb
push
popa
mov
test
out
xchg
clc
out
mov
sbb
cmp
jp
lahf
enter
or
jp
int3
sbb
and
fdivp
fdivl
xor
cmpsl
sub
mov
fmuls
xor
test
mov
shlb
in
sub
orps
push
jnp
mov
mov
pop
jne
mov
pop
in
divps
lret
dec
mov
movsb
lods
xorl
cmp
mov
xchg
ffreep
push
loope
xchg
outsb
mov
iret
gs
clc
sbb
repnz
mov
mov
jbe
arpl
movsb
stc
mov
lahf
ret
lds
leave
fwait
loop
jns
ds
ret
xor
loopne,pt
out
or
ss
sbb
inc
mov
aaa
cmp
repnz
into
int3
movb
ljmp
movsl
subb
fs
jmp
add
inc
lret
pop
adcb
sub
and
jo
daa
mov
xchg
popf
rcr
fisubrs
lods
inc
dec
lcall
pushf
mov
aad
xchg
sbb
insl
sub
mov
sbb
stos
pop
scas
aad
cmp
repz
lods
push
fstps
jae
idivb
stos
js
out
shlb
fnstenv
mov
dec
adcb
nop
fwait
lods
jecxz
lock
push
jno
mov
dec
push
scas
push
dec
cmp
stc
in
test
pop
jnp
xchg
fdivrs
mov
jnp
ret
iret
cltd
xor
dec
rorb
nop
xor
iret
shrb
pop
xchg
pop
imul
jecxz
bound
leave
inc
aas
sti
push
les
int
negb
testl
int3
lret
in
xchg
push
lods
cwtl
stc
ss
dec
xor
outsb
cs
lret
push
insb
mov
cld
mov
cmp
mov
call
bound
xchg
data16
shll
mov
aaa
push
les
test
jmp
stc
xchg
aas
mov
and
data16
xchg
push
mov
mov
cmp
jle
push
daa
fs
aas
loop
icebp
das
mov
inc
or
pop
inc
je
aaa
sub
scas
cmpsb
adc
mov
mov
test
inc
pop
inc
xchg
daa
add
mov
jnp
jg
fsubs
jmp
xchg
call
arpl
aad
rolb
ljmp
or
adc
dec
ljmp
repz
fisttpll
dec
xchg
or
push
loopne
mov
insl
sbb
decl
inc
pop
adc
dec
insb
scas
add
jb
popa
sarb
jns
mov
lret
or
mov
adc
cmp
xlat
call
push
ret
pop
clc
or
popf
cli
out
xor
jle
test
insl
mov
and
out
in
jle
nop
mov
mov
cmp
leave
scas
xchg
test
fnstenv
addb
aas
or
fisttps
sbb
sbb
out
in
aaa
into
imul
inc
mov
pop
repnz
and
lock
push
mov
mov
shll
ficomps
in
push
push
xchg
sbb
inc
push
popa
outsb
and
popa
arpl
mov
nop
xchg
cmp
xor
and
adc
mov
ret
fsubrl
test
call
popf
and
cmp
and
insb
jae
scas
cld
xor
push
ja
sub
ret
into
or
lret
dec
icebp
mov
jne
andb
jo
mov
cmp
cmpsb
sub
mov
out
xchg
dec
stos
pop
push
test
push
jb
cmp
mov
nop
push
mov
or
jne
add
hlt
popa
xlat
cmc
push
jns
add
dec
mov
jae
sub
stos
lahf
pop
inc
mov
ret
dec
mov
bound
cmpsb
mov
xor
and
xchg
mov
movsb
in
nop
jnp
rorl
das
cmp
lea
dec
outsl
sub
rorb
push
mov
or
mov
mov
scas
cmc
cs
imulb
mov
jae
lods
cmp
stos
push
mov
mov
xchg
test
shrl
pop
xchg
lods
pop
int3
pusha
out
loope
ret
cmp
insb
cwtl
dec
loopne
fiadds
cmp
jo
xchg
cmp
outsl
jmp
xchg
mov
lea
or
add
mov
jl
or
aas
dec
pop
std
loopne
test
fdivl
es
pop
pop
fadds
and
cmpsb
in
lods
push
mov
push
sbb
dec
sahf
cli
jl
in
scas
xchg
lcall
lret
jbe
lret
dec
negb
adc
in
into
int
daa
jmp
sbb
jle
mov
icebp
dec
outsl
cli
shlb
verr
testl
sub
pusha
sub
adc
sbb
bnd
pop
xor
xor
pop
push
lcall
mov
int3
mov
dec
std
sub
add
pop
mov
jo
inc
in
sbb
dec
les
sub
jp
mov
xor
arpl
sbb
or
hlt
mov
sahf
or
sub
cmpsb
pop
iret
call
call
in
cmp
jo
mov
dec
push
in
mov
push
rorl
jb
or
or
out
imul
dec
inc
cmp
mov
jecxz
rcl
push
cmc
sub
push
lretw
inc
ds
mov
cmp
shr
das
rorl
shlb
cmp
add
data16
xchg
xchg
inc
out
adc
adcb
clc
add
sahf
movsb
push
jmp
push
lds
sbb
out
adc
cmp
jns
and
inc
popf
push
mov
pop
xchg
xorb
icebp
adc
sbbl
xchg
xchg
mov
sbb
xchg
sbb
sbb
nop
subl
jp
outsl
fcoml
jl
push
mov
sbb
add
clc
lahf
pop
adc
or
jo
xchg
sub
push
movsb
push
icebp
arpl
sbb
pop
test
lods
xor
int3
sub
pop
xchg
enter
lods
lcall
dec
mov
ds
sub
popf
ret
adc
mov
jno
mov
sbb
test
and
lret
dec
fnstsw
cmp
pop
mov
add
mov
divb
rorb
jae
addl
cld
fisubl
pop
lods
jno
sub
cmp
mov
xor
test
sub
lods
mov
roll
jp
xlat
xchg
lea
cs
xchg
mov
repz
ljmp
mov
stos
sti
mov
jnp
inc
xchg
mov
add
bound
jl
inc
mov
xchg
add
imul
mov
pop
aad
sbb
testl
or
divl
sub
ret
jl
pop
insl
cltd
cwtl
mov
xchg
push
xchg
xor
sub
cmc
and
or
push
dec
mov
dec
popf
sub
lahf
push
scas
or
insb
or
testb
lret
inc
mov
or
arpl
je
and
mov
jg
xor
inc
sbb
es
pop
cmpsb
jbe
pushf
push
sbb
shrb
dec
jnp
xchg
xor
lret
bound
push
lret
push
mov
mov
pop
or
jmp
push
call
scas
lcall
adc
sbb
inc
or
mov
xchg
jne
dec
es
jmp
pop
push
imul
sbb
xor
das
adc
mov
xor
mov
or
jnp
fs
push
mov
insb
fwait
movsl
fs
clc
mov
fwait
push
inc
scas
insb
out
inc
push
xor
out
sti
xor
test
daa
mov
xchg
mov
shll
jle
testl
and
fdivrs
incl
dec
jge
outsl
mov
inc
mov
sarb
into
push
xchg
ret
stos
cwtl
cmp
nop
icebp
cld
xor
pop
mov
cmc
mov
push
jb
sbb
imul
push
nop
scas
jb
xor
shlb
or
or
push
scas
push
push
cmp
frstor
inc
decl
inc
das
add
pop
sarl
out
cmp
iret
js
popf
popa
jae
inc
xchg
rcl
mov
das
stc
xchg
and
shrl
xchg
and
pop
mov
cmp
int3
jno
dec
fwait
fnsave
sbbb
pop
lcall
gs
xor
fsincos
push
nop
xchg
hlt
jno
jle
adc
jecxz
mov
jp
cmp
sub
mov
insb
push
push
dec
insb
rorl
je
movsl
push
out
js
push
pop
push
stc
fiadds
sbb
ret
fisttpll
movsl
hlt
repz
loopne
lds
sar
scas
jg
dec
inc
inc
xchg
int3
and
out
mov
pop
dec
movl
clc
or
pop
mulb
outsb
int
insb
popf
adc
lods
scas
dec
mov
adc
in
int3
mov
movsl
jmp
xchg
pop
mov
mov
test
es
pop
mov
mov
inc
xor
inc
push
jecxz
test
rorb
test
push
jo
jo
in
jo
pop
or
xchg
mov
xor
test
mov
lods
jnp
mov
mov
push
out
mov
dec
sub
mov
push
xor
fstpl
and
mov
mov
rcr
sbb
cmp
mov
mov
rorb
mov
lea
and
dec
jae
dec
lahf
push
cmp
jle
insb
loope
sbb
push
aam
rdtsc
mov
push
pusha
adc
dec
xchg
in
pushf
inc
xor
cli
or
inc
mov
mov
mov
gs
daa
lods
lock
imul
sub
lahf
xchg
mov
mov
mov
or
dec
addr16
mov
rcl
fwait
insl
int3
shlb
fmuls
int3
sbb
fwait
lea
and
dec
scas
movsl
inc
jl
mov
scas
ret
rclb
xor
mov
sarb
pop
clc
push
push
mov
rcrb
iret
push
aas
mov
cli
xor
ja
dec
xor
les
add
and
mov
std
leave
adc
xor
adc
jg
les
push
mov
dec
xchg
sahf
arpl
aaa
pop
movsb
cld
adc
outsl
cmp
mov
push
mov
push
or
cmp
mov
xchg
xor
xchg
insb
cmp
mov
add
jne
dec
pop
jp
cs
pop
popa
sub
and
push
test
mov
pushf
in
hlt
mov
inc
xor
jae
mov
cmp
arpl
sub
dec
pusha
push
and
sub
ficoml
in
ficoml
push
insl
sub
sub
jge
add
pop
mov
ss
andl
inc
test
push
repz
lret
xchg
sub
scas
pop
mov
xchg
clc
iret
and
bound
dec
push
fistps
lea
mov
cmp
fisubl
out
sub
xchg
ret
test
in
add
push
jbe
sbb
mov
scas
fisubrs
aad
or
ljmp
jbe
inc
fsts
ret
adc
push
xlat
inc
mov
imul
fldt
lods
jae
add
adc
push
pop
pushf
push
push
sub
dec
cmpsb
inc
cmpsl
out
and
movsl
nop
push
xor
mov
out
lcall
pop
jbe
mov
in
loope,pt
adc
mov
rorb
imul
push
ret
adc
pop
stos
std
push
into
push
cmpsb
and
dec
arpl
das
out
jne
cs
adc
popf
xor
ja
test
inc
ljmp
into
clc
mov
xor
xor
pop
sub
roll
xor
jp
sbb
pop
and
mov
dec
inc
inc
push
rcl
xchg
xlat
xchg
inc
xor
mov
inc
sbb
insl
jns
fwait
pop
add
pusha
adc
clc
adc
shlb
je
push
cmp
movsl
jb
nop
xlat
dec
lret
shrl
mulb
test
sbbb
sbb
aad
xlat
jle
testb
enter
test
test
sub
add
sbb
jl
loope
pop
xor
int3
mov
lret
mov
insl
mov
dec
orl
mov
les
sar
jge
cltd
pop
mov
pop
adc
ret
lods
stos
jbe
nop
pop
aam
cwtl
sbb
pop
push
xchg
arpl
popa
xchg
repnz
dec
cmp
inc
mov
jns
clc
bound
inc
mov
mov
dec
sar
jns
cs
sbb
inc
mov
test
rorl
inc
lcall
sbb
jge
jl
jp
add
and
fucomp
rcr
xchg
dec
mov
shll
insb
test
addb
jmp
ss
adc
and
in
aad
adc
adc
push
popa
leave
inc
cwtl
and
fmulp
test
ljmp
test
testl
scas
into
cmp
fs
jg
pop
and
clc
dec
mov
jo
movsl
add
push
mov
fs
outsb
and
out
jns
add
mov
inc
mov
imul
sub
mov
scas
mov
inc
inc
test
dec
add
mov
sub
ljmp
push
outsl
movsb
adc
imul
mov
or
in
pop
jmp
pop
cmp
push
std
stc
movsl
xor
pop
out
push
icebp
sbb
push
xlat
xor
cmpsl
xor
icebp
test
lods
ds
icebp
adc
jecxz
xor
add
dec
idivl
or
xchg
outsl
call
xor
lock
mov
scas
sbb
dec
xchg
jnp
push
popa
inc
lea
shll
lods
adc
and
sbb
fiaddl
in
loopne
les
or
in
dec
mov
lret
lods
xchg
rcll
or
mov
subb
mov
hlt
insl
aaa
cmp
push
shrl
add
pushf
stos
iret
cmp
ficomps
dec
fwait
mov
hlt
inc
mov
push
nop
mov
imul
jnp
in
rorb
pop
or
or
roll
xchg
push
jl
in
jo
in
loop
icebp
lods
lret
or
into
incl
insl
jb
adc
xor
ljmp
mulb
mov
fsubl
cwtl
xchg
push
xor
xor
adc
xchg
xor
xor
or
test
adc
jb
mov
idivb
pushl
or
loope
outsb
mov
jmp
cmp
add
lret
jp
cltd
dec
xchg
inc
mov
insl
pop
dec
sbbl
pop
or
cmpsb
hlt
sahf
int3
pop
push
int3
xchg
ds
adc
xor
iret
es
sub
iret
xchg
lock
mov
cli
pushf
repz
cmp
and
or
mov
outsl
in
sub
adc
cmp
and
mov
or
mov
dec
pop
movsl
mov
jne
iret
sbb
pop
pop
into
mov
cmp
pop
ret
data16
sbb
xchg
fwait
push
cmp
leave
pushf
pop
aaa
xor
push
inc
push
mov
adc
pusha
lds
push
sahf
rorl
scas
lds
mov
xchg
inc
pop
ljmp
fidivs
adc
lds
push
lahf
sahf
cld
nop
addr16
fdivrl
ja
out
mov
jp
shll
lret
sbb
adc
mov
xor
inc
into
xor
dec
adc
data16
lcall
call
and
or
stos
ss
mov
xchg
inc
movsl
jmp
lahf
xor
xchg
in
or
neg
gs
mov
test
jecxz
in
out
pusha
sub
mov
or
arpl
shlb
ljmp
cltd
lods
mov
test
pop
aaa
outsb
mulb
jo
les
xor
dec
jb
call
addl
popa
dec
push
sti
bound
aam
sbb
sbb
cmpxchg
into
adc
call
mov
cmp
push
call
dec
pusha
movsb
loop
lds
pop
pop
jbe
push
xlat
outsb
jle
mov
adc
mov
push
iret
movsb
neg
xchg
inc
stos
adc
cmpsb
dec
dec
jp
fs
out
mov
pop
insb
out
jb
lcall
jae
cwtl
ds
nop
jbe
rol
adc
adc
or
gs
inc
xor
mov
pop
inc
xor
ret
pop
mov
xlat
add
sbb
pop
fidivrs
data16
scas
add
lret
xchg
mov
imul
push
lcall
aad
add
xor
cmpsb
pop
dec
mov
scas
int3
mov
mov
out
fwait
pop
mov
sub
xor
vsubps
push
das
popf
cmpsb
mov
ret
aaa
je
inc
pop
lods
fwait
idivl
daa
insb
xor
inc
rolb
jo
mov
fdiv
cld
dec
outsl
nop
lods
xchg
xor
jmp
pop
movb
add
aaa
arpl
testb
sarb
sahf
jge
push
addb
cmp
and
xor
sbb
push
dec
pop
movsl
xlat
pop
aaa
xchg
adc
pusha
xchg
addb
add
jg
fs
or
cmp
xchg
cli
negl
push
lahf
imul
lea
scas
or
jl
mov
add
es
cmp
cmp
sarb
and
cwtl
fisttps
or
rolb
stc
outsl
shll
adc
adc
test
dec
jae
ljmp
decl
insl
xor
cmc
scas
fdivp
adc
lods
push
insb
adc
inc
fstpt
iret
sub
sub
lret
or
ds
stos
das
test
mov
sub
mov
shrl
cmp
sbb
xor
mov
sbb
frstor
adc
fidivrs
and
fwait
lock
adc
or
add
iret
dec
push
and
dec
cmc
mov
pop
xor
js
loopne
inc
je
bound
ljmpw
and
push
ds
loope,pt
or
je
imull
or
mov
cmp
add
mov
mov
sbb
lock
lcall
adc
jnp
push
sub
xor
xchg
sbb
sub
stos
cmp
cmpsb
js
push
popf
in
ljmp
stos
add
cmp
add
das
scas
and
push
stc
std
sbb
xor
test
rcll
sub
xchg
xchg
and
rcr
insb
les
ret
aaa
dec
test
aad
pop
lock
mov
xchg
mov
aad
sbb
jp
hlt
lahf
repz
ret
clc
rorb
js
push
clc
repnz
sbb
jg
addr16
cmc
mov
fbld
fsts
pop
fildl
das
dec
lods
iret
hlt
nop
iret
mov
outsl
pop
xor
sbb
repnz
dec
inc
lods
iret
mov
dec
sub
sbb
test
xor
pop
pusha
faddl
std
adc
adc
add
adc
jg
movsb
xor
and
dec
dec
fisttpl
dec
pop
adc
hlt
jnp
adc
dec
xor
dec
and
das
jne
fwait
shlb
add
mov
cmpsl
push
add
in
xchg
xchg
movsb
sub
enter
fstps
mov
imul
shrb
pop
insl
popa
push
inc
movsl
push
mov
lods
rcrb
sub
push
xor
je
daa
out
sti
push
lea
pop
add
int
sbb
push
sar
jle
and
popa
add
push
mov
push
add
cmp
icebp
out
pop
xlat
sub
push
jl
fadds
sti
sub
shll
or
push
cmp
dec
pop
jmp
xchg
pop
mov
mov
test
mov
inc
mov
mov
xlat
pop
subb
mov
pop
mov
imul
fdivl
lret
and
push
dec
in
addr16
stos
andl
pop
pop
cmp
xchg
cmp
adc
push
mov
add
lcall
jno
lock
arpl
insb
mov
test
jns
dec
push
jb
mov
insb
inc
xorl
inc
enter
sub
bound
mov
imul
push
mov
insl
mov
int3
jmp
cmp
mov
add
ja
jge
xchg
dec
imul
imul
or
and
cmp
filds
sbb
xor
ds
jmp
incl
test
lcall
push
mov
mov
das
lock
and
loopne
xchg
xchg
xchg
xchg
xchg
lret
xor
ss
nop
jb
inc
loope
cmp
add
sbb
push
and
ja
and
mov
jge
popf
jle
adc
inc
mov
lods
mov
scas
push
pushf
ret
call
fidivrl
outsb
out
psubusb
jbe
mov
and
fwait
cmpsl
enter
out
test
pop
sbb
bound
lahf
adc
dec
mov
xchg
cs
fistpll
jmp
mov
push
sbb
or
push
pop
inc
mov
add
cmp
mov
lcall
cmp
xor
pop
shr
inc
sub
add
sti
clc
mov
sbb
ss
sbb
xor
in
xchg
popl
adc
data16
cmp
xchg
and
orl
ljmp
rcll
cld
mov
addr16
add
shlb
jne
call
lret
js
mov
mov
rcrb
int
mov
pop
ja
scas
mov
cs
loop
test
imul
dec
pop
sbb
cmp
shrb
jb
push
addb
pop
and
push
and
lds
mov
mov
jge
xchg
ja
adc
mov
sub
sbb
int3
arpl
or
mov
or
inc
mov
daa
push
fmulp
test
outsl
or
test
cmpsb
push
push
mov
in
cmpsl
xchg
clc
sub
imul
hlt
xchg
xchg
fdivrl
jle
push
js
test
andb
jmp
mov
es
js
xor
shr
cmp
and
inc
lods
fidivl
ja
imul
pop
sbb
popf
inc
pop
inc
mov
cmp
push
lret
int
push
cmpsl
lahf
jo
pop
mov
inc
addr16
lcall
js
jg
xor
jbe
sub
xchg
pop
daa
jnp
das
sbbl
dec
mov
out
adc
ret
fldt
push
loop
mov
test
scas
outsl
jne
repz
jo
sub
inc
sbb
adc
lock
test
dec
and
lcall
repnz
sub
pop
xchg
dec
sub
pop
and
push
fisubrl
cmp
fsubl
cmp
and
in
push
push
adc
sbb
inc
dec
or
push
mov
mov
add
call
loop
mov
xor
loope
in
mov
loop
pop
movsb
aad
mov
adc
cmpsl
mov
add
pop
add
call
inc
les
mov
mov
test
mov
or
cmp
mov
lahf
lret
push
dec
adc
inc
push
mov
lock
pop
in
jp
frstor
or
inc
dec
or
add
cmp
push
in
js
pop
mov
xchg
iret
hlt
call
mov
mov
das
sub
dec
rcrl
mov
packssdw
add
arpl
mov
imul
call
lds
pop
dec
loopne
dec
and
shrl
pop
inc
fsubs
out
iret
outsb
jge
das
jae
repnz
clc
mov
push
enter
and
dec
bound
negb
xor
xchg
xor
add
cmp
cmp
js
pop
fstpl
test
call
daa
pop
push
xor
push
stc
cs
mov
in
push
mov
xchg
enter
mov
nop
ds
test
cmpsb
scas
ljmp
xor
cmp
lret
aas
fwait
xchg
or
jecxz
loop
mov
fcmovne
popa
fptan
push
pop
sub
mov
push
cwtl
insb
jno
mov
adc
out
push
cmpsb
movsl
push
aad
cld
and
repz
mov
lds
or
incb
aad
cmp
and
out
dec
add
jno
hlt
fcmove
jae
add
popa
iret
or
mov
jl
andl
imul
xchg
jbe
adc
test
lds
push
cwtl
movsb
xchg
jno
outsl
mov
xchg
popa
xor
shrb
mov
inc
inc
test
jmp
xchg
fdivs
pop
sbb
bound
dec
mov
sti
mov
jge
rcrb
hlt
ss
cwtl
push
dec
call
stos
fiadds
mov
xchg
sbbb
push
jne
push
fdivr
sub
sub
ret
cmpsl
jb
fnstsw
inc
lahf
adc
scas
jg
adc
mov
pushf
push
enter
orb
fwait
out
sbb
push
add
popf
daa
inc
movsb
repz
push
icebp
and
shll
adc
int3
jno
sub
roll
mov
lock
cmp
std
push
xor
in
and
movsb
or
sti
movsb
shl
jecxz
xor
sub
into
xor
sub
mov
push
ret
mov
mov
outsb
sub
mov
sub
adc
mov
pop
ret
mov
call
nop
test
outsl
int3
insl
stc
addr16
mov
mov
es
cmp
unpcklps
mov
testb
stos
cs
movsb
mov
ret
outsl
lret
lahf
jecxz
rorl
lahf
adc
mov
dec
daa
mov
mov
ret
divl
ret
mov
loop
mov
jp
add
enter
or
lods
jge
xchg
into
sbb
pop
inc
jne
shl
jnp
dec
and
fisttpl
xlat
pop
or
sbb
outsl
ss
mov
cmpsb
mov
pop
stos
mov
dec
loop
push
hlt
daa
lock
ret
inc
imulb
xor
push
int
arpl
jge
stos
mov
cmp
fdiv
js
jp
vpunpcklbw
aam
pop
test
lcall
lock
mulb
ja
jbe
mov
dec
mov
jle
fwait
pop
jge
pusha
fwait
shrb
in
int3
sarl
mov
xchg
dec
adc
test
inc
aad
jae
insb
jp
stos
fldcw
lods
adc
mov
lds
mov
shlb
dec
insb
repz
adc
out
dec
push
dec
int
notl
mov
bound
dec
insl
or
cmpb
sahf
and
pop
inc
and
cmc
dec
pop
jno
je
jb
pop
lea
clc
hlt
outsl
aad
pop
iret
call
or
out
outsb
push
int3
ret
mov
fld
push
subb
out
dec
in
or
clc
push
cmp
notl
jbe
mov
retw
insb
xor
mov
mov
aam
mov
push
jno
fiadds
insl
pop
imul
sub
sbb
jecxz
xchg
imul
mov
push
test
clc
sbb
cli
mov
call
imul
insb
mov
imul
shrb
cwtl
fidivl
mov
mov
dec
pop
roll
icebp
add
rolb
pusha
sub
pop
and
adc
mov
mov
pushf
mov
push
repnz
mov
faddl
mov
inc
and
out
push
movsl
mov
pop
pop
cmp
cmp
loopne
pop
cmp
fimuls
xor
lods
mov
lret
mov
cli
negb
sub
gs
fisubrl
arpl
jbe
outsl
adc
and
xor
push
and
icebp
iret
push
jmp
lock
shr
cmpsl
jle
lods
xor
aam
loopne
adc
enter
push
scas
mov
cld
pusha
dec
xchg
adc
pop
mov
gs
js
incl
test
xor
call
fnsave
add
pop
adc
inc
jae
push
adc
inc
inc
aas
push
mov
jne
aad
in
jmp
mov
test
push
dec
and
mov
cmp
popf
fs
andl
pusha
pusha
xchg
or
out
faddp
and
sbb
shrb
dec
lods
or
adc
sub
push
data16
pop
jmp
xchg
adc
fbstp
mov
lcall
xlat
outsl
mov
aas
or
pop
push
jns
mov
rorb
sti
in
mov
sbb
jle
sbb
fwait
jno
push
mov
add
xchg
push
adc
test
add
xchg
or
or
pop
or
fsubl
imul
and
pushf
cli
or
test
jae
mov
xor
jecxz
push
and
fcmovnbe
mov
and
xchg
imul
push
into
mov
pop
filds
or
pop
mov
jne
in
popf
ja
add
sbb
sarb
or
std
arpl
mov
stos
jecxz
pop
fs
sub
ljmp
adc
and
in
pop
cmp
lock
sbbl
xor
bound
mov
adc
jbe
push
adc
sub
mov
mov
push
inc
and
dec
jbe
arpl
stc
stc
cmp
imul
das
test
out
add
mov
sub
inc
and
add
mov
das
jns
out
mov
lods
cs
xor
das
popf
and
xchg
lea
push
addr16
imulb
jmp
or
hlt
into
int
jecxz
mov
movsl
inc
mov
cmp
xor
pop
jg
lret
clc
pop
icebp
lds
aad
pop
arpl
daa
jl
out
test
dec
pop
pop
dec
pop
addb
inc
sbbb
sbb
bound
add
pop
fmul
xchg
inc
push
add
jge
repnz
testl
add
push
shrb
push
inc
pop
push
mov
add
jl
push
aam
push
jg
ss
outsb
lds
or
cmp
insl
mov
cli
stc
cmpsl
inc
sub
pusha
adc
xor
mov
cld
enter
lds
jl
xchg
ss
push
scas
leave
mov
lea
mov
mov
pop
jmp
jns
inc
push
pop
std
sub
jecxz
insl
xor
shll
dec
orb
aas
pop
xorl
jmp
mov
push
jbe
sahf
sub
jae
cmp
es
add
xchg
and
dec
push
sbb
add
dec
outsb
cmpsb
push
test
shll
jecxz
test
faddl
sub
fildl
jecxz
nop
das
sub
mov
jecxz
add
lock
movsb
xchg
cltd
out
es
adc
pop
mov
push
in
sub
sub
clc
mov
imul
lock
pop
lahf
clc
outsb
data16
mov
std
popf
insb
mov
fcoml
cs
test
imul
adc
lcall
mov
push
push
mov
sub
sbb
sub
icebp
lahf
insb
mov
ja
pop
or
iret
mov
test
in
insl
in
incl
aas
push
ss
jl
adc
adc
jg
xor
imul
xor
mov
mov
gs
sti
xor
les
adc
sub
mov
popa
cmpsb
lds
add
mov
inc
fcoms
dec
mov
pop
mov
xchg
dec
sub
jne
mov
inc
mov
and
mov
mov
out
scas
stos
ret
mov
xchg
mov
push
adc
cmp
fists
shll
pop
mov
sbb
xor
inc
push
jmp
test
movsb
int
outsb
push
mov
test
rolb
cmp
jbe
pop
xor
popa
push
xchg
mov
shrb
and
ljmp
and
ficoml
cli
push
les
fcomi
cmp
mov
push
imul
fs
fcoml
pop
inc
mov
cwtl
push
jb
push
pop
scas
cld
jno
jecxz
mov
repz
xor
arpl
jnp
shlb
loope
ss
cmp
cmp
xchg
pop
adc
pusha
jle
sub
sbb
jp
stos
push
add
mov
lret
rcll
lods
mov
and
cld
daa
arpl
into
jnp
mov
fisttpl
adc
push
out
fxch
cmc
imul
scas
aad
shlb
cmpl
nop
cld
push
pop
cmp
push
xchg
push
aad
ja
push
xchg
jecxz
ljmpw
cwtl
sub
add
stc
rcl
pop
mov
push
mov
sarb
cmpsb
mov
push
cmc
out
add
mov
jl
stos
inc
call
jp
sbb
repnz
xor
and
cmc
sub
mov
cmp
stos
xchg
add
mov
cmp
mov
imulb
mov
sahf
pop
push
loope
jle
mull
cmpsl
mov
inc
sarb
sbb
lods
out
add
fwait
scas
lods
rol
test
inc
movsb
ja
out
arpl
jl
fisttpll
es
sarb
xchg
xchg
jno
cmp
and
lgs
adc
dec
mov
iret
push
ss
xchg
or
fdivrl
jo
adc
or
or
sar
sbb
cwtl
arpl
bound
outsl
dec
bound
adc
pop
jp
cmp
test
sub
leave
inc
mov
cmpsl
into
pop
mov
pop
sub
iret
imul
out
mov
dec
cmp
cmp
rol
and
pop
mov
fldenv
out
addr16
push
ds
fcoml
mov
cmp
sub
xor
mov
dec
push
adc
mov
sbb
fsubl
mov
xchg
jo
sbb
mov
loop
adc
in
cld
rcll
mov
or
and
test
mov
stc
loope
mov
test
jo
dec
xor
cli
xor
xchg
and
mov
popl
insb
and
lcall
push
mov
stos
add
rolb
push
xchg
push
xchg
mov
cmp
or
inc
adc
sbb
ss
movsb
add
cltd
insl
test
dec
xlat
fidivl
cltd
xor
int3
loop
cmc
outsl
insl
cmp
push
addr16
scas
popa
ret
inc
pop
out
mov
cmp
jecxz
push
and
cmp
mov
jb
mov
cld
xchg
xor
das
in
mov
insb
daa
adc
jecxz
movl
jl
xor
adc
outsl
or
clc
pop
jnp
loop
cld
inc
mov
repnz
cld
pmaddwd
test
es
fwait
jne
xor
sbb
lock
mov
or
les
pop
push
add
lea
mov
fimuls
lret
std
into
es
mov
sub
imul
xlat
stos
push
mov
xorl
mov
add
pop
cld
sub
push
jo
in
aad
lahf
xor
arpl
movsl
and
mov
lret
pop
and
dec
add
call
mov
out
cwtl
mov
jmp
stc
ds
mov
gs
out
out
lret
mov
scas
sbbl
dec
ja
cmp
arpl
pop
mov
sub
fadds
or
adcb
gs
test
outsb
in
xorb
and
xchg
nop
subb
or
addr16
mov
mov
or
jne
mov
push
cmp
in
cmp
cmp
das
dec
addr16
fisubrl
xlat
cmp
add
clc
ss
rol
and
mov
outsl
out
fwait
shrl
jge
or
adc
loope
movsb
xlat
call
sar
xchg
lcall
fistps
jae
movsl
call
fs
push
cmp
pop
gs
xchg
mov
stos
popa
sub
add
and
push
bound
std
aaa
fbstp
inc
xlat
cmc
repnz
ds
sub
push
mov
stc
lret
inc
xchg
mov
xorl
ret
mov
mov
ljmp
aam
inc
sbb
push
fiadds
adc
inc
jg
xchg
mov
add
int3
jge
pop
dec
adc
sbb
std
cwtl
xor
xchg
insl
xor
clc
mov
leave
pusha
adc
inc
mov
push
pop
adc
outsl
xor
pop
cmp
jle
popa
sbb
jne
mov
rolb
sub
cmp
dec
ds
xor
lods
call
or
jl
mov
and
nop
mov
lahf
inc
insb
dec
push
adc
test
lds
fwait
xor
jo
outsl
xor
dec
out
ficoms
cltd
shll
ss
aas
int3
sahf
inc
cmc
rcl
inc
sub
scas
add
stc
jmp
lahf
cmp
faddp
shl
arpl
mov
push
mov
or
and
sbb
adc
ret
out
ljmp
jnp
inc
fstpt
movsl
jecxz
jno
pop
dec
xchg
hlt
sahf
add
int
jl
jns
dec
fiadds
outsb
xchg
jmp
add
popf
push
imul
mov
out
mov
je
cli
aaa
lds
sub
cmp
xor
pop
jno
std
mul
jg
mov
in
loop
es
rcl
in
jle
movsb
inc
and
sbb
rorb
pop
adc
cli
cli
mov
fcoml
pop
jne
dec
and
adc
sub
mov
out
testb
xor
dec
sub
ficoms
lcall
aad
adc
xchg
mov
shll
pcmpgtb
je
repz
ret
rolb
fchs
xor
mov
in
mov
jbe
lds
sbb
jb
clc
pusha
add
es
mov
sahf
hlt
xchg
xchg
mov
frstor
lret
inc
sbb
or
dec
mov
pop
cltd
pop
pop
lret
pop
cld
test
cmp
mov
je
movsl
adc
xchg
mov
shrb
or
adc
sub
pop
xchg
sbb
ret
jnp
repz
inc
mov
lcall
xchg
decb
fisttpll
xchg
xchg
les
xor
or
add
fisubs
inc
push
stos
ds
mov
fdivs
fdiv
rcl
mov
pop
dec
cli
adc
jmp
mov
sarl
ljmp
dec
push
insb
sahf
adc
out
scas
push
pusha
jnp
cmp
mov
cli
outsb
adc
movsl
leave
mov
xchg
adc
in
mov
js
adc
cmp
and
lret
push
jnp
add
mov
in
nop
jmp
test
xchg
xchg
das
int3
jl
pop
dec
pop
ds
sahf
jl
pop
mov
cmp
clc
sbb
lcall
ret
xor
jae
incb
fdivs
cmpsl
dec
jb
cwtl
mov
mov
sub
and
xor
jb
out
pop
mov
add
cli
lods
xor
icebp
dec
xor
sub
mov
in
cltd
loop
xchg
scas
push
push
lea
inc
jl
push
ret
mov
add
lret
stos
xchg
and
cs
arpl
adc
test
call
shll
and
and
dec
inc
es
xchg
clc
dec
inc
shrl
mov
out
cmp
pop
lahf
lods
sbb
aas
test
or
sub
xchg
inc
jo
cmp
cmp
ss
add
aam
xchg
mov
stos
mov
cwtl
mov
xchg
sbb
jmp
je
mov
dec
cmpb
mov
sbb
add
push
dec
dec
repnz
xor
mov
stos
cmp
push
pop
fisubrl
mov
faddl
xchg
enter
pushf
add
xchg
mov
std
jae
inc
cmp
push
pop
pop
flds
out
pusha
hlt
mov
orl
jge
fsubs
addr16
stc
loop
push
dec
test
in
cli
cmp
adc
sbb
mov
inc
out
test
jnp
sbbl
fsubrp
aad
out
xor
dec
push
dec
xchg
fmull
sbb
jae
mov
cli
fdivrl
outsl
fs
rcr
sbb
in
daa
xchg
mov
in
adc
mov
lahf
xor
lds
stos
out
sbb
lea
mov
icebp
mov
out
or
xor
fidivrl
outsl
push
sahf
jp
adc
fcmovnu
stos
xchg
ret
loope
std
mov
push
mov
xchg
mov
and
loope
lea
add
sarl
adc
popf
stos
insb
sub
popl
insl
xchg
pusha
ds
cmp
in
jp
lds
lds
pop
mov
int
push
hlt
loop
adc
pop
insl
inc
sub
push
fwait
sub
loop
out
lods
pop
aam
sbb
and
xor
out
mov
mov
sbb
pop
fwait
lods
dec
out
stc
popa
scas
sbb
daa
or
push
imul
mov
mov
xchg
cmpsl
mov
sarb
cld
scas
arpl
icebp
sbb
mov
inc
mov
decl
mov
repz
jns
cmp
mov
int3
xchg
shlb
and
pop
jmp
mov
sub
aad
jb
jmp
test
inc
xchg
int
push
xor
adc
out
out
scas
call
add
sahf
pop
scas
cmp
data16
add
popa
xchg
mov
cmpsb
push
dec
jp
bound
cltd
faddl
in
xor
mov
cmpsl
imul
int
div
shlb
fstpt
jge
inc
outsl
movsl
push
dec
in
subb
mov
lret
push
mov
sbb
push
mov
in
push
mov
fisubrs
jle
in
mov
aam
sbb
adc
dec
subb
xor
cmc
stc
test
sub
js
int3
adc
popf
push
mov
pop
cmp
xor
jmp
or
rorl
cmp
mov
mov
mov
insl
lods
mov
rorl
pop
push
shl
pop
adc
cmpsl
int
xchg
popl
push
xchg
lds
xchg
sahf
dec
xchg
cmp
sub
movsl
rolb
cmp
pusha
sub
push
jne
std
push
popf
jae
int3
daa
lds
or
dec
xchg
sti
mov
cltd
scas
xor
lahf
mov
subb
mov
jecxz
lahf
fucomip
xor
sub
enter
dec
outsb
mov
lret
jg
sahf
movsl
movsl
cmpsb
add
jns
jg
jmp
push
xor
out
icebp
iret
arpl
adc
mov
mov
lret
xor
pop
out
lahf
imul
movsl
mov
cmp
ret
jb
or
jns
aad
jo
mov
lcall
outsl
jbe
push
and
pushf
dec
mov
and
mov
mov
xchg
bound
sub
jae
xchg
cmp
pop
mov
lret
movsb
test
popf
dec
jne
xor
nop
mov
dec
mov
movl
sub
dec
out
mulb
sbbb
mov
pop
cmp
inc
lock
stos
mov
sub
xchg
shll
xchg
add
in
cmc
lods
ficoml
sbb
test
pop
in
push
aas
add
or
cmp
xchg
add
ds
in
cs
dec
je
addr16
shrb
mov
ja
mov
sub
mov
inc
cmp
mov
std
enter
out
push
pop
repnz
sub
push
outsb
add
mov
mov
roll
das
inc
push
int
dec
mov
fwait
sbb
xchg
sahf
xor
ror
pop
das
jl
cmp
inc
arpl
xchg
out
cs
inc
out
iret
sbbb
sti
popf
adc
add
daa
int3
mov
push
adc
push
rol
or
jge
adc
fstl
add
or
fistl
xchg
mov
repnz
call
sti
jl
jnp
xchg
and
jl
fdiv
jle
sbb
inc
psubq
xchg
pushf
cmpsl
pushf
jg
push
push
pop
jg
xor
leave
rcrl
adc
repnz
jp
add
lret
sub
jle
imul
pusha
xchg
jbe
icebp
ss
fldenv
hlt
aam
add
adc
mov
or
dec
sbbb
sti
lock
cmpsb
add
pop
jl
mov
iret
aad
faddl
push
pop
popf
adc
leave
xchg
xor
movsl
outsb
cmp
xchg
in
mov
and
lods
and
mov
rolb
shrl
mov
fmull
cmp
xor
pusha
lret
jp
add
js
xlat
out
or
xor
hlt
in
xchg
push
mov
jno
cmp
xor
push
xchg
test
in
mov
es
mov
popf
out
xlat
dec
nop
mov
cld
push
pop
sbb
jp
rorl
push
into
push
xchg
add
loope
mov
imul
cltd
mov
leave
sub
mov
sub
mov
in
jo
int
rorl
ljmp
push
int
cltd
enter
or
dec
adc
mov
cmpsl
xchg
jle
cld
ds
dec
jg
stos
pop
rcll
or
fwait
mov
outsb
sbb
mov
lret
cmp
pop
push
fdivs
add
jecxz
aam
mov
dec
or
movsbl
cli
dec
mov
pop
stos
int
push
sbb
xor
fmull
adc
jns
gs
push
and
jbe
imulb
fdivl
leave
jns
dec
jl
aad
or
cmpsb
ljmp
test
dec
fmulp
xchg
cmp
cmp
and
dec
cmpsb
or
sub
fdivrl
into
cmp
lods
push
out
sub
pop
ja
add
je
xchg
cmp
dec
jecxz
mov
cmc
or
lahf
iret
jmp
outsl
arpl
inc
push
out
rolb
push
js
out
imul
pop
cmpsb
or
add
repz
rorb
push
loopne
fs
jb
adc
out
ret
xchg
adc
and
loope
dec
int3
cmpsb
cmp
mov
mov
sub
outsb
movsb
xchg
xorb
sar
call
xchg
je
cmpsb
xchg
mov
add
add
sub
mov
add
movsl
or
add
inc
daa
adc
or
sbb
cld
ret
sub
lock
adc
or
pop
lods
sarb
jne
cs
jo
or
sbb
add
cmc
mov
inc
cmp
pushf
nop
sub
xor
call
mov
cmp
mov
cmp
clc
mov
inc
out
mov
dec
imul
dec
dec
fs
testl
ficoml
add
int3
pushf
mov
std
call
sbb
mov
sbb
pop
mov
jecxz
pop
adcl
leave
das
pop
inc
scas
loopne
call
dec
push
xchg
fdiv
js
outsl
nop
or
jl
fmul
add
sbb
push
pop
fnstenv
push
insb
int3
test
adc
rcrl
mov
insl
leave
cltd
out
mov
jle
fists
add
lds
mov
lea
jle
lea
sub
lock
push
and
xchg
push
clc
ds
insl
jg
or
aad
aaa
push
sub
call
add
cmpsb
add
pop
dec
imull
imul
inc
mov
imul
push
iret
scas
push
or
or
jo
pop
imul
lds
in
pop
rolb
clc
cmpsl
pop
pop
test
jno
mov
mov
sub
jns
cwtl
pop
adc
in
inc
pop
sub
mov
pusha
cmc
cmp
dec
mov
xor
aaa
jbe
pop
and
lods
pop
dec
gs
shr
lret
aam
jle
inc
or
cwtl
xchg
jb
xor
ja
cld
rcr
jne
jl
setl
inc
fmuls
jle
loope
cmpsl
add
loop
xorb
cltd
mov
adc
dec
fwait
jno
jg
clc
decl
adc
shrl
loop
and
fwait
movsl
and
inc
inc
arpl
roll
rcr
int
mov
sbb
repnz
into
sti
jnp
ss
in
mov
mov
sbb
add
inc
loopne
jge
movsl
iret
or
daa
add
sub
jg
mov
jae
push
imul
jmp
sub
and
cmp
pop
lods
aaa
pop
bound
xlat
push
inc
cmc
scas
jne
and
inc
xor
arpl
aam
loopne
sbb
and
cltd
inc
jno
xchg
or
test
sti
lcall
sbb
pop
adc
in
jns
dec
test
fs
mov
hlt
aaa
loopne
or
mov
push
aas
aam
jo
imul
pop
sub
bound
dec
fidivs
stos
sub
enter
enter
jecxz
mov
fs
int3
cs
clc
fdivrl
add
and
pop
lahf
jl
or
adc
xchg
sahf
adc
jg
rorl
stc
dec
and
xchg
jb
mov
jl
nop
and
mov
pop
in
es
out
ret
mov
push
lock
ljmp
push
test
xchg
gs
adc
xchg
jb
sub
fxam
stc
test
or
and
addl
and
arpl
idivl
aam
insb
popa
lret
jle
cli
jnp
jbe
int3
dec
mov
cmpsb
lods
push
or
ret
push
push
and
pop
xor
rol
or
xchg
es
arpl
div
js
dec
mov
stos
jle
dec
fdivrl
cmp
mov
push
movsl
push
mov
pusha
jmp
mov
shl
xchg
pushf
inc
mov
divb
mov
int3
add
mov
daa
ficomps
cli
push
out
gs
and
cmp
fdivs
adc
sbb
and
pop
cmp
lock
pop
mov
xchg
test
adc
dec
cmp
and
cmp
aam
mov
loop
inc
in
dec
fdivp
inc
imul
orb
lods
addr16
cmp
and
lret
xor
in
xchg
daa
dec
mov
mov
daa
jl
mov
nop
adc
shlb
pop
mov
sub
es
xchg
xchg
lahf
mov
pop
push
push
popa
mov
popa
add
add
mov
fisubrl
xor
and
xor
stos
pop
pop
jge
leave
call
add
sub
ja
and
mov
and
in
fwait
in
pop
leave
adc
out
mov
in
in
test
iret
lods
stos
das
pop
jbe
push
push
push
movsl
cmp
aam
xchg
nop
cwtl
cmp
cli
xchg
jp
filds
sbbl
add
cmp
leave
xor
es
jl
cmc
ffree
mov
xor
lahf
pop
xlat
in
jg
stc
fs
dec
test
mov
fnsave
aaa
jge
rclb
sti
mov
lea
add
lea
push
mov
int
loope
test
push
adc
addr16
outsl
jp
push
jp
jae
pusha
js
arpl
or
add
pusha
xchg
leave
mov
xchg
xor
mov
push
push
xor
mov
andl
shlb
dec
jge
xchg
xor
jo
mov
add
fwait
in
dec
sub
push
push
push
fadds
dec
adc
cs
mov
fwait
add
sbb
pushf
insb
pop
mov
repnz
or
ljmp
mov
xchg
stos
sub
div
jno
sub
imul
mov
test
movsl
adc
xor
fists
cwtl
imul
outsl
mov
ret
ss
pop
mov
mov
ljmp
out
outsb
and
jbe
mov
leave
mov
push
sbb
cmp
xlat
lcall
or
clc
mov
pop
mov
sbb
int3
movsb
in
cmp
pop
mul
ja
adc
inc
arpl
mov
mov
jo
pop
jmp
sub
call
mov
pop
repnz
xchg
and
xor
mov
test
outsb
out
out
enter
sbb
test
outsb
pop
mov
jne
shll
jl
jo
adc
bound
jecxz
sub
es
mov
dec
lret
out
fsubrs
insl
cmpl
xchg
insb
cs
jle
push
push
pop
popf
ficoml
fstenv
lea
and
movsb
fidivrl
sub
fistps
loopne
adcb
int
repz
pusha
pusha
mov
cmp
ja
jo
cmp
inc
cmpb
fstl
rcll
or
jg
cmp
das
jbe
cld
aam
and
in
mov
add
popa
mov
iret
push
xchg
out
mov
daa
je
stos
cmp
mov
adc
mov
push
fiadds
jns
in
test
sub
cmp
sub
mov
popf
sbb
jmp
or
adc
test
add
mov
rorb
ss
in
add
add
cli
fstl
fs
sahf
jg
dec
and
stc
aaa
pop
mov
mov
sbb
jbe
push
pop
mov
js
push
sbb
test
push
ficomps
jbe
push
mov
stos
dec
daa
mov
shr
cmp
pop
xchg
movsl
divb
push
popf
push
xor
adc
testb
ret
aam
ljmp
mov
jge
jecxz
leave
inc
sub
sub
insl
cld
in
cltd
push
pop
push
aad
cs
dec
or
popa
nop
push
loopne
fyl2x
inc
lds
cwtl
ss
and
xchg
out
or
mov
mov
mov
mov
repz
mov
jo
cmp
push
mov
in
mov
or
mov
orl
jle
ljmp
ret
pop
mov
push
cmp
jl
arpl
or
xor
ljmp
aaa
xor
test
and
pop
xchg
mov
dec
dec
into
test
pop
cmp
movl
and
repnz
sbb
xchg
lret
and
fldt
cltd
add
jg
fistl
mov
pop
xchg
mov
outsb
jmp
mov
cmpsb
cmp
xchg
in
jbe
arpl
out
outsb
push
sbb
pop
fcompl
and
in
jmp
faddl
jnp
insb
push
roll
xor
add
add
sbb
push
sub
sahf
loop
mov
mov
notl
call
scas
or
jl
popa
lods
and
cmpl
push
leave
js
sub
aad
xchg
repz
push
into
mov
xor
add
shrl
mov
lcall
movsl
cmc
cli
jl
lods
lds
adc
cmc
inc
jecxz
mov
aad
add
dec
fsubrl
in
rclb
cmc
adc
gs
lret
gs
mov
jle
pop
leave
iret
mov
data16
push
sarb
insb
stos
ljmp
cs
rcl
gs
stos
jle
pop
sub
cltd
cmp
sbb
mov
cmp
fwait
clc
movsl
inc
scas
ja
je
or
ljmp
pop
fwait
dec
bswap
xorb
or
adc
xchg
pop
fstpt
test
pop
adc
inc
pop
in
jnp
mov
push
push
popa
xor
add
cld
mov
dec
jno
je
sbb
xor
xchg
and
test
and
xchg
cmp
xor
lret
xchg
mov
and
inc
xchg
dec
lret
cmp
les
pusha
sbb
sbb
pop
inc
or
and
dec
loop
push
push
out
pop
mov
sbb
jge
ljmp
out
push
or
test
imul
jae
gs
xor
mov
cld
cli
fiadds
push
popf
out
jle
mov
inc
and
mov
cmp
iret
lahf
and
cmp
pop
ror
imul
movsl
pop
jnp
test
les
sahf
leave
mov
in
pop
adc
lds
insb
bound
adc
jg
sub
mov
mov
pop
aas
xchg
push
sub
insl
adc
std
jno
inc
lods
or
les
mov
push
dec
push
xor
jecxz
xchg
cmp
sbb
orl
gs
dec
les
add
sub
test
ret
add
adc
outsl
insl
mov
hlt
push
fisttpl
test
std
lock
sub
inc
xchg
in
rolb
cwtl
stc
mov
mov
push
sbbb
pop
aas
pop
pop
dec
mov
adc
insl
and
lahf
mov
rcl
mov
jne
je
ja
mov
cmp
or
mov
mov
scas
idivb
mov
push
mov
jne
mov
mov
lret
out
push
pop
xchg
mov
or
add
dec
es
pop
jmp
out
or
outsl
xor
adc
xlat
sub
mov
jg
sbb
add
xchg
xchg
push
mov
pop
in
sbbb
sti
dec
mov
adc
ljmp
dec
fcoml
les
test
sbb
push
aad
xchg
outsl
faddp
pop
cmpl
fists
jno
push
cli
dec
pop
lret
mov
xchg
cmp
pop
mov
push
cmp
imul
mov
pop
fdivl
in
sub
adc
and
aaa
lret
out
push
inc
xchg
fcomps
das
xchg
fisttpl
loopne
dec
mov
loopne
iret
stos
push
push
subl
adc
movsl
addr16
mov
stos
cmpsb
fs
xor
cmpsb
cltd
test
fdivrs
adc
arpl
aaa
outsb
rol
rorb
or
stos
sbb
xor
or
mov
gs
mov
dec
add
cld
jl
and
add
gs
adc
add
dec
xchg
mov
icebp
out
mov
mov
int
push
adc
fcmovu
lret
scas
icebp
dec
or
or
sub
fs
cmp
pop
cld
xor
lods
xchg
sub
sbb
push
enter
or
or
mov
sbb
cmpsl
popf
adc
mov
stos
es
adc
nop
push
lret
mov
inc
mov
mov
insl
shrb
cmp
bound
pop
push
pop
out
or
es
loop
pop
lds
add
jmp
mov
imul
or
and
shll
pop
xor
lock
pop
cli
push
xor
mov
mov
addr16
dec
mov
or
adc
lds
mov
daa
or
jmp
dec
sbb
add
jns
mov
mov
mov
rcl
or
lret
das
cmp
add
pop
lret
in
xor
ja
insl
mov
push
insb
or
xchg
sbb
mov
stc
xor
xchg
cwtl
loop
rorb
scas
push
adc
ja
adc
je
and
stos
xchg
or
insl
in
jnp
push
movswl
cmp
xor
dec
jnp
cmp
jbe
inc
rol
jne
orb
xor
ret
add
nop
insl
iret
fsubrl
cli
dec
sub
out
adc
hlt
push
out
aas
pop
fwait
xchg
out
and
fs
loopne
ret
sbb
jl
xor
cmp
in
mov
jge
rorb
aaa
ljmp
push
jbe
mov
cwtl
imul
into
dec
mul
das
pop
in
xor
jbe
aas
dec
shll
xchg
pop
in
fists
movsb
rcl
testl
cmp
jnp
sub
ret
ds
pop
mov
fsubrs
push
sbb
xchg
aad
mov
or
jne
lds
out
ljmp
push
bound
jns
int
repnz
sub
xchg
rorl
mov
lret
loop
push
test
mov
js
pop
sub
sbb
shr
pop
cmovg
icebp
shrl
ja
int3
cmc
mov
adc
or
fcom
test
cmp
shlb
cmpsl
sbb
enter
dec
stc
mov
pop
xchg
lea
cmp
sti
ljmp
lret
dec
pop
mov
and
inc
dec
aas
mov
mov
aaa
push
jb
or
sbb
dec
xor
add
pmuludq
jne
outsb
xchg
lods
sbb
inc
sahf
andb
or
xchg
je
sbb
addr16
xchg
dec
fs
cmp
jl
pop
lods
es
es
cmpl
jecxz
lahf
cmp
enter
aam
push
and
es
push
adc
jge
adc
aaa
lods
pop
pop
mov
nop
push
mov
loop
stos
inc
pop
scas
adc
inc
xlat
mov
in
cmp
sbb
jns
dec
test
mov
mov
add
outsb
call
fnstsw
xor
movb
and
inc
xchg
push
ret
dec
out
fadd
dec
nop
in
or
xchg
mov
xchg
jg
iret
push
out
pop
out
adc
in
lods
in
push
pusha
xor
in
jp
addl
nop
pop
lret
sbb
pop
or
xchg
insb
pop
clc
or
adc
sbb
xchg
scas
insl
icebp
je
mov
inc
adc
pop
add
or
in
test
andl
adc
aaa
test
bound
sbb
popa
sbb
cld
into
iret
movsl
das
jmp
cmp
jae
mov
leave
cld
or
sub
ljmp
push
inc
js
or
inc
push
in
mov
dec
cmpsb
dec
add
lock
rolb
mov
out
dec
or
adc
test
fisttpl
test
jg
scas
mov
daa
inc
popa
cmpsb
mov
xor
jmp
jno
xor
arpl
popa
fcomp
add
testb
jb
out
pop
loope
aas
lock
and
jl
cwtl
xchg
outsl
stos
insl
or
sub
daa
jns
movb
cli
mov
in
dec
sub
fwait
or
lret
jp
adc
popa
sarl
test
mov
mov
pop
fists
cltd
dec
xor
orb
out
pop
mov
pushf
xlat
sti
cmc
mov
dec
int3
in
push
cmpl
push
dec
jl
mov
mov
mov
sub
adc
stos
cmpsl
jne
mov
cli
notb
insl
fcmovnbe
xchg
pop
cs
mov
push
or
rcll
adc
popa
add
xchg
cwtl
jnp
dec
jecxz
and
mov
push
mov
es
jnp
jmp
cmp
pop
add
stc
inc
mov
mov
orb
sbb
dec
pop
fs
fisubs
jge
cmc
xor
shrb
mov
sahf
adc
push
xchg
insb
outsl
fldenv
loop
dec
mov
and
dec
cli
push
ja
or
cmp
dec
popf
mov
mov
arpl
sbb
add
cld
mov
adc
sbb
jne
sahf
js
xchg
aam
out
xchg
inc
xchg
mov
xchg
mov
notl
jo
adc
int
mov
mov
mov
call
sbb
hlt
and
and
fisubl
xchg
scas
mov
ss
cmp
ror
or
sbbb
fs
cmovno
xor
mov
in
mov
pop
inc
adc
sarb
jmp
pop
cli
or
ja
fcom
push
push
dec
inc
mov
dec
sbb
movsl
cmpl
or
mov
adcl
add
shr
mov
inc
mov
imul
add
sub
pop
adc
jle
sbb
loope
insb
inc
jecxz
mov
push
in
mov
and
aam
cmp
idivl
inc
sti
int
mov
iret
shl
out
gs
jl
stos
js
mov
pushf
mov
and
dec
movzwl
mov
xor
push
push
and
addr16
stc
jmp
add
fwait
push
and
sbb
in
mov
cmp
pop
pushf
jnp
bound
divl
and
sbb
mov
push
test
mov
sub
sub
inc
adc
jge
addb
push
or
sub
iret
and
xchg
fldcw
and
movb
inc
je
adc
push
ljmp
inc
push
mov
iret
in
mov
adc
sarb
insl
lret
jnp
out
enter
pop
sbb
bound
rolb
xor
out
imul
and
jp
mov
xor
icebp
lods
jge
repz
arpl
jo
or
jp
in
lods
and
jbe
mov
fisttpll
cmp
jnp
jle
xor
cld
lret
push
popa
out
mov
sub
out
push
pop
or
outsl
pop
xor
fidivrl
push
mov
mov
sub
xchg
shlb
jnp
movsb
pop
pop
iret
xor
xchg
lcall
scas
jle
scas
inc
lea
daa
lret
adc
repnz
loop
ja
je
xor
add
js
xor
pop
stc
lea
jbe
insl
test
ret
sub
pop
or
ficoml
xchg
clc
push
gs
pop
xchg
dec
jp
mov
dec
pop
fildl
data16
xlat
imulb
movsb
xor
stos
push
fidivs
divb
jbe
cmp
mov
mov
cmp
addr16
jne
add
pop
into
fwait
mov
add
push
xor
outsb
iret
jae
lods
add
std
fcmovnbe
aad
andb
gs
or
xchg
lret
sahf
bound
push
fnstenv
dec
insl
jp
add
out
sub
fiaddl
ljmp
int3
in
pop
mov
in
clc
js
loopne
xchg
xchg
xor
jo
les
xor
icebp
popf
iret
inc
pop
dec
push
hlt
das
xor
add
mov
out
mov
icebp
and
add
push
ja
cmp
js
sub
test
fdivr
daa
rol
push
cmp
jmp
mov
sbb
insb
sbb
mov
fidivrs
xchg
inc
dec
inc
insb
scas
shlb
jg
into
inc
mov
jmp
cmp
aam
xchg
add
pop
movsb
mov
shll
mov
not
jge
ja
or
lds
xchg
ficoms
sti
cltd
nop
daa
adc
iret
fistps
cli
inc
andb
pusha
or
stc
jo
pop
sbb
icebp
data16
push
fdivrl
and
dec
mov
data16
lds
lahf
sbbl
add
mov
inc
cld
add
cmc
pop
xor
cmpsl
push
fbld
adc
adc
mov
mov
xchg
rclb
xor
xlat
fbstp
in
mov
fcmovnu
push
jbe
cltd
pushf
mov
lret
xor
clc
inc
xchg
xor
cmp
leave
and
sub
mov
pop
fdivrl
mov
mov
dec
sbb
cmp
push
sub
cld
pop
inc
popa
mov
adc
or
mov
push
mov
mov
sbb
jne
pop
push
fstp
scas
setbe
sub
scas
popf
movsb
dec
aas
into
xor
arpl
ds
mov
aam
imul
pop
sahf
sbb
jb
mov
cmp
data16
add
pop
mov
jns
enter
cmp
add
fwait
call
out
imul
and
out
inc
fdivr
add
mov
aas
mov
cltd
or
or
sbb
cmp
imul
jmp
pushf
movsl
push
lret
out
xchg
fistps
test
cmp
outsl
xchg
dec
sbb
loope
mov
jmp
insl
push
cmp
test
test
xor
sbb
mov
adc
sti
cld
int3
insl
call
jnp
push
push
mov
pop
fdivrs
shlb
adc
mov
aaa
out
mov
scas
mov
mov
xor
xor
data16
xor
hlt
test
mov
push
jns
add
je
jmp
pop
cli
dec
sbb
movsb
sub
xchg
dec
mov
cltd
sub
adc
fwait
mov
gs
add
cmpsl
leave
ret
aaa
adc
xchg
inc
stos
sbb
push
stc
or
lcall
cmpsl
repz
inc
stos
ja
enter
and
insb
enter
add
inc
push
cli
movsl
aam
scas
push
out
dec
mov
leave
adc
movl
inc
and
stos
add
js
mov
xchg
mov
mov
xchg
mulb
cmp
push
mov
pop
cli
mov
push
jo
xor
or
ja
repnz
jge
jg
xchg
inc
std
lret
popf
mov
push
xor
inc
ret
ret
pop
dec
int
fistpll
fidivrs
dec
mov
mov
fcoml
and
bound
cmp
mov
adc
mov
add
jo
push
cmc
mov
push
xchg
js
addl
sbb
mov
mov
aad
inc
xchg
cmp
iret
push
mov
xchg
and
imul
cs
cmp
push
mov
cmp
xor
pop
add
add
cmp
in
pop
mov
jno
pop
push
xchg
icebp
mov
xor
and
rclb
aad
leave
in
mov
test
mov
sub
mov
jmp
imul
xor
pop
jne
cmp
mov
and
mov
lcall
fldt
dec
push
pop
loop
movl
rorl
ss
fmul
lea
jg
adc
lds
pushf
fistpll
cmp
add
imul
fcmove
shll
push
mov
movsl
cmp
fadds
sbb
mov
call
stc
addr16
cld
pop
push
enter
mov
je
shlb
sub
bnd
inc
xchg
jb
andnps
fwait
inc
push
movsb
sbb
jge
xchg
pop
ljmp
iret
sub
xor
test
xchg
sbb
test
mov
movsl
sub
fdivr
sbb
movsb
fisubs
aad
mov
jle
sbb
jge
pushf
xor
arpl
jle
jge
iret
jbe
mov
dec
inc
neg
jle
in
jno
imulb
enter
cmp
sbb
sbb
and
inc
rol
das
mov
cmp
adc
mov
insb
add
cmpsb
adc
lods
fildl
lcall
mov
mul
jl
mov
les
sbb
divl
push
lret
subl
js
repz
std
mov
jl
xchg
jae
lcall
jno
cmp
xor
pop
add
xchg
dec
and
mov
or
leave
insl
fwait
sub
ss
out
fs
sahf
lret
fists
jl
xchg
inc
adc
enter
dec
cwtl
jne
shlb
adc
sarb
sbb
mov
and
inc
cltd
push
jns
cmp
mov
mov
in
push
pop
ds
int
inc
std
mov
xchg
ja
es
ret
enter
out
sbb
lock
enter
ds
jae
je
aaa
sbb
jbe
sahf
push
pop
fsubl
mov
outsb
jp
mov
std
insl
int3
mov
and
jb
int
fdivrl
xchg
insl
shrb
ficoms
imul
fcompl
adc
dec
scas
mov
pop
les
cmp
add
fwait
xor
adc
stos
mov
test
scas
mov
pop
mov
popf
pushf
pop
test
inc
dec
push
fsubp
gs
lret
cmp
and
aam
dec
dec
pushf
std
jp
rcll
cld
jae
int3
cmp
push
mov
cmpsb
dec
sbb
sub
inc
lahf
mov
mov
inc
popf
sbb
rcrl
add
pop
mov
or
pop
cmp
inc
add
dec
fcmovnb
push
aad
mov
cmpsl
adc
push
mov
repz
lods
fcomp
sbb
nop
dec
cmp
mov
mov
jae
scas
inc
push
imul
iret
xchg
fisubs
mov
xchg
fwait
insb
xor
and
mov
mov
lret
cmp
fmuls
dec
jmp
fisttpll
mov
stc
push
fsubrs
adcl
mov
inc
inc
mov
clc
inc
mov
stos
lret
loope
push
movsb
cmpsb
push
lds
xor
dec
shl
mov
jb
pop
enter
jo
aaa
jbe
push
xor
shrl
std
xor
nop
imul
pop
iret
jmp
mov
mov
mov
fnstsw
adc
hlt
xor
mull
pop
mov
jbe
and
xchg
andb
mov
pop
in
push
in
lea
imul
imul
adc
outsb
jo
pop
popf
jg
pop
repz
xchg
cmp
or
cli
in
add
jge
or
cmp
and
xchg
jb
adcl
stc
or
and
cmc
or
mov
int
cmp
js
sub
pop
rcr
sub
cs
or
lods
mov
mov
and
jns
mov
outsl
int
clc
pop
add
fiaddl
mov
pushf
lds
or
sbb
addr16
jecxz
jp
xlat
mov
insb
push
and
jp
mov
adc
mov
fildll
movsl
jl
pop
rolb
idivl
outsb
xchg
outsb
xor
aad
frstor
push
movsb
mov
pop
rclb
dec
sbb
mov
mov
dec
pop
loope
jne
lret
pop
push
push
push
adc
mov
mov
rolb
fldt
adc
jmp
imul
test
outsl
cmp
outsl
repz
sub
jae
cmp
xchg
xchg
lahf
outsb
add
dec
hlt
jne
imull
push
outsb
lea
bound
sub
sub
test
push
sbb
xchg
test
dec
das
push
xchg
fiaddl
jno
push
push
push
push
sub
adc
jo
xor
adc
jno
mov
je
out
push
stos
push
add
dec
cltd
jb
dec
sub
mov
inc
inc
jmp
fcmovb
mov
cwtl
push
push
fs
mov
inc
sub
jae
test
or
sbb
jmp
push
insl
inc
jle
pop
and
xchg
adc
aam
pop
in
stos
push
imul
cmp
fwait
pusha
mov
or
cs
jne
sbb
lret
das
bound
ret
and
mov
incl
jg
jno
xor
or
xorb
pop
adc
xchg
out
ret
scas
divb
mov
xchg
ficoml
or
aas
daa
subb
sbb
ret
mov
sbb
shrb
dec
lret
mov
jne
lock
ret
dec
adc
add
loopne
mov
and
pmuludq
test
pop
jecxz
dec
cmp
jmp
mov
and
jge
outsl
cmp
mov
add
pop
imull
jo,pn
stos
sbb
mov
in
mov
fwait
push
ret
repz
fisttpl
add
iret
add
mov
cmp
jmp
jmp
pop
cld
dec
scas
adc
das
and
movsl
sbb
shlb
idivl
pop
mov
inc
lods
mov
dec
jae
decb
jbe
and
dec
and
or
insb
repnz
sub
xor
and
inc
mov
in
pop
sub
lahf
movsl
xchg
notl
aaa
and
jo
mov
and
repnz
iret
jg
jnp
aaa
mov
into
test
stos
dec
mov
push
mov
repz
add
add
sbb
inc
dec
push
shlb
cld
arpl
mov
das
inc
and
cld
adc
movb
stos
pop
push
xchg
jnp
and
outsl
gs
mov
mov
add
rcl
add
loop
rcrb
or
and
jg
pop
mov
pop
shll
and
push
sbb
xchg
sbb
jecxz
add
inc
int3
pop
xor
lahf
cmp
xchg
lret
mov
jno
jmp
lods
ds
loopne
in
dec
stos
cmp
push
ret
sub
push
mov
or
and
je
jns
xchg
xchg
or
shr
cmp
cmp
xlat
cs
jns
xor
and
push
sbb
rclb
dec
inc
fmull
mov
jbe
sbb
push
lods
add
aaa
inc
testl
int
xchg
std
cmp
xchg
jmp
imul
mov
jnp
lods
mov
loopne
imul
jmp
fbld
jae
xor
ret
cmp
inc
fisubl
popa
pop
push
cld
gs
repnz
push
cmp
push
das
xor
jne
out
mov
sbb
add
icebp
addr16
loop
cmpsb
xchg
clc
push
movsl
lcall
inc
xchg
negb
cmpsl
lret
push
and
sti
mov
xchg
mov
sti
mov
push
stc
push
inc
stos
imul
enter
push
lods
in
pushf
andl
jnp
sbb
pop
ss
and
jb
adc
dec
test
adc
lods
dec
mov
jmp
xchg
je
aas
orb
js
or
and
rorb
pusha
jle
arpl
xor
popa
sub
push
xor
mov
insb
lcall
ss
ret
mov
dec
and
in
jmp
fwait
in
rorb
in
fnstcw
sub
and
cs
adc
cwtl
adc
inc
mov
movsl
fisttpl
in
mov
add
mov
xchg
int
dec
mov
mov
ret
push
xor
jecxz
filds
aam
inc
scas
cli
add
add
xor
adc
and
mov
in
ljmp
fldl
xlat
xor
mov
rcrb
jle
scas
or
fbld
inc
fists
adc
arpl
xchg
adc
add
ja
sub
jns
nop
fisttpll
frstor
dec
push
dec
inc
test
or
fisubrs
ja
dec
testl
sub
movsl
adc
xchg
popa
shr
call
push
xlat
adcb
adc
jecxz
fmulp
out
mov
sbb
mov
adc
push
jne
out
adc
iret
cltd
arpl
cmp
cmp
out
mov
in
xchg
fistpl
dec
cld
cmp
xorb
mov
paddsw
in
int
pop
mov
dec
lods
dec
adc
adc
or
xrelease
ss
lret
in
repz
xor
imul
xchg
aam
mov
cmp
push
push
jecxz
sarl
and
iret
xorl
cmp
out
pop
stos
push
and
aaa
xor
add
int3
cmp
mov
test
aas
xchg
loop
xor
adc
insl
push
ret
cmp
sti
mov
xor
stc
das
mov
arpl
sub
ret
add
rcrb
push
sbb
dec
rcrb
dec
adcb
xchg
mov
xchg
push
les
jp
push
testl
xchg
out
inc
clc
pop
mov
mov
dec
inc
xchg
inc
push
out
fsubs
inc
int
cmc
or
mov
movsb
repnz
fsubrl
mull
mov
cs
jl
push
and
clc
push
adc
lock
xchg
into
daa
in
push
and
out
or
idivb
insb
bound
mov
sbb
sbb
out
add
sub
in
xchg
je
frstor
test
jo
and
fldt
test
push
icebp
sbb
pop
cmpsw
daa
jl
fistps
pop
push
sub
out
int3
mov
mov
addr16
es
in
sub
adc
sbb
test
sub
adc
rep
push
mov
sbb
xor
cmpsb
xor
adc
mov
int3
cs
lret
push
mov
sbb
rcr
loopne
ljmp
push
xor
enter
jle
jo
and
and
jmp
dec
in
jo
aas
or
lret
pop
inc
int
mov
int3
out
xchg
xchg
fisubrs
in
pop
push
filds
or
ds
jmp
rorb
and
sarb
pop
dec
xor
shll
jne
inc
sub
roll
inc
jae
sub
mov
insl
jmp
mov
mov
divl
lret
push
dec
daa
ss
mov
adc
rclb
xor
pop
cmp
vfmsubadd213pd
mov
ficoms
mov
lret
cld
movsb
dec
xor
mov
inc
cmp
adc
dec
hlt
or
pushf
jns
shll
xorl
es
pushf
aad
gs
push
push
scas
sbb
push
mov
int3
push
fwait
mov
and
insl
insl
adc
add
sub
mov
jecxz
push
and
push
in
cmpsb
cmp
mov
xchg
push
scas
xchg
push
mov
icebp
out
adc
adc
enter
pop
mov
fwait
insl
jle
or
lods
add
xchg
adc
hlt
dec
ficoml
inc
sbb
jp
ja
cwtl
ret
sub
cmp
cltd
adcl
mov
jmp
jle
jno
je
mov
iret
sub
fsubs
adc
pop
enter
scas
xchg
test
rcrl
pop
stos
add
js
sub
jle
negb
mov
test
pop
push
out
pop
cmp
sbb
and
cmpl
cmp
rcll
insl
jmp
push
xor
pop
xor
subb
dec
rol
arpl
icebp
jb
mov
mov
js
ljmp
mov
out
clc
mov
testl
cwtl
jns
ds
sbb
dec
and
jae
adc
dec
js
dec
lods
imul
pop
sarb
andl
lahf
movsb
adc
mov
int3
cmp
inc
mov
push
data16
insl
dec
xchg
sbb
popa
addl
ljmp
add
inc
xor
mov
popa
pop
pop
xchg
push
test
stos
pop
pop
cs
or
sub
test
mov
jle
andl
gs
mov
cld
jp
jg
push
lahf
xchg
jbe
push
push
mov
cltd
jle
shl
push
loope
ljmp
mov
mov
in
es
adc
jbe
adc
fmuls
jo
jb
push
push
xlat
loopne
lea
push
nop
mov
push
cmp
mov
rcl
nop
push
dec
lahf
pop
sbb
mov
test
cmpsb
daa
test
lahf
jmp
dec
lea
int3
push
test
in
xchg
stc
aam
testb
or
jmp
mov
decl
mov
dec
cltd
les
cmp
ret
mov
xchg
lahf
daa
inc
movsb
insl
cltd
or
pop
jne
fidivl
in
pop
sub
xchg
adc
inc
cli
cmc
addb
aam
fsubrs
lahf
hlt
movsb
pop
mov
stos
int
cmc
or
push
stos
fcmove
fiadds
sbb
mul
xchg
mov
xor
dec
mov
imul
movsb
mov
mov
hlt
add
fcmovnb
in
fsubl
in
mov
lds
adc
jbe
mov
imulb
out
and
xor
sub
fldl
repz
lods
cmp
sub
inc
adc
jnp
pop
movsb
clc
xchg
and
out
xchg
mov
repz
jl
lock
enter
mov
pop
mov
cmp
movsb
inc
mov
fbld
int
mov
lret
loope
mov
push
mov
lods
pop
movsl
sbb
inc
nop
cmpsl
push
addr16
mov
mov
xor
rorb
pushf
fbld
add
fsub
popa
in
dec
stos
mov
sub
jnp
push
bound
cli
xlat
dec
mov
and
and
add
or
pop
int3
xor
inc
add
sub
call
fmull
enter
xchg
pop
inc
rclb
es
dec
sbb
jno
jb
pop
sbb
es
xor
inc
and
or
jp
sub
cmp
or
jno
lahf
lret
insl
aas
cmp
xor
inc
mov
cmpsb
lahf
and
jl
fisttpl
or
fcomps
pop
inc
int
or
mov
out
or
mov
pop
cwtl
int
cmp
iret
inc
test
jne
jle
jae
mov
sbb
pop
jle
subl
loop
adc
jb
rcl
shll
jno
xchg
and
insl
fiaddl
jae
fs
leave
out
cld
and
into
cltd
andl
xor
sub
out
in
test
imul
adc
sub
rcrb
mov
jmp
loopne
loopne
repnz
loope
pop
bound
pop
dec
repz
movq
ja
aas
in
test
add
adc
jno
sub
mov
test
repnz
cmp
or
es
scas
testl
jecxz
aad
inc
cmp
popf
xor
or
mov
lock
add
xchg
aam
xchg
fwait
ret
pop
dec
gs
cmp
or
cltd
inc
fs
sub
test
or
out
in
pop
xchg
and
inc
orl
mov
rcl
ret
fs
or
out
je
inc
es
mov
out
out
loopne
das
lds
lods
inc
adc
in
shlb
scas
clc
push
shrl
loopne
adc
arpl
xchg
sti
mov
idivb
sub
sub
mov
aam
and
adc
pop
cmp
pop
sub
jo
fcomps
insl
jae
sub
xor
addb
int3
cmc
xchg
ss
xchg
sarb
mov
or
mov
mov
and
xchg
push
mov
mov
stos
inc
cmpb
add
and
add
add
lahf
lret
xchg
das
xor
sarb
dec
sbb
mov
das
or
mov
xchg
jno
push
mov
ret
lods
clc
push
jp
stos
in
pop
cmc
loopne
aas
inc
dec
test
fwait
aad
scas
xor
aad
sarb
jmp
es
pop
sub
cld
mov
and
ss
or
sub
xchg
inc
lods
cmp
or
sbb
push
mov
dec
jne
push
mov
mov
fs
mov
sbb
xlat
dec
adc
xchg
adc
stc
es
cwtl
mov
jae
mov
imul
cmpsb
repz
mov
call
adc
mov
inc
fcoms
push
daa
mov
xchg
ljmp
push
mov
push
xlat
pop
xchg
jp
mov
xchg
icebp
test
in
lret
adc
dec
mov
ret
fidivrl
cmp
pop
pop
cmpsb
icebp
call
call
fucom
inc
sub
adc
daa
pop
rolb
dec
mov
in
xor
fs
jmp
adc
movsl
mov
bound
pushf
popw
clc
popf
mov
xchg
sub
ja
mov
shrb
xchg
clc
xor
push
repnz
cld
dec
inc
not
xchg
sub
popa
sub
sub
scas
ret
adc
push
lcall
repnz
test
fabs
sbb
sub
push
data16
cmc
jno
mov
subb
outsb
call
dec
rolb
mov
subb
aas
mov
mov
inc
pop
mov
cli
pop
mov
or
or
jl
cmpb
mov
mov
sub
lock
xor
cmp
push
js
xor
fsts
adcb
lea
sbb
gs
jno
ja
test
ret
jb
xlat
cmp
or
test
xchg
lret
fisubrl
fnstsw
cmpsl
inc
aas
divb
mov
test
dec
aad
dec
outsb
inc
jge
push
lcall
std
mov
sti
sub
sub
or
sbb
int
adc
xor
lret
add
mull
mov
ja
and
mov
out
cmc
add
push
pushf
scas
imul
lret
sub
and
call
fildll
popf
fidivl
push
pop
in
fcomi
sbb
dec
fwait
outsl
cmp
mov
mov
lods
popf
xchg
rcrb
dec
cmpsb
push
adc
sub
adc
jg
lea
add
sbb
add
xor
mov
adc
xchg
xchg
cmpsb
mov
xchg
and
mov
jp
sub
inc
ja
ret
aam
adc
mov
lret
mov
push
aam
addr16
jb
push
push
jb
rcrb
insl
stos
icebp
dec
call
xchg
negl
pop
sbb
into
std
adc
adc
pop
jg
stos
xor
nop
ss
cmp
sti
dec
cli
mov
in
sbb
and
pop
dec
movsl
adc
lea
sbb
mov
adc
xchg
mov
lds
lods
cmp
sub
dec
xchg
testb
out
or
add
xchg
popl
mov
testl
xchg
imul
mov
aas
out
lret
pushf
jbe
pop
clc
sbb
or
int3
dec
fwait
ret
int
mov
sub
popf
fisttps
ret
xchg
or
idivl
std
adc
leave
dec
andl
dec
les
pop
add
rcr
out
sbbb
cli
sub
adc
xchg
cmp
add
sti
mov
in
inc
aam
xor
fistpll
sti
imul
insl
push
sbb
ss
pop
push
adc
fstps
jl
xchg
lret
or
and
gs
or
leave
in
xchg
popa
xor
ja
mov
rorl
jmp
mov
es
std
outsb
int
xchg
pop
dec
cmpsb
movsb
sbbb
dec
pop
jle
sti
dec
xchg
inc
inc
out
mov
mov
outsb
xor
cmp
test
clc
std
push
dec
mov
fsubrs
cmp
xorb
pop
shlb
pop
arpl
xchg
xchg
pushf
mov
test
jp
xchg
pushf
sub
out
std
sbb
out
insb
arpl
mov
jo
pushf
mov
iret
data16
pop
sahf
js
xor
std
std
bound
and
push
loop
mov
jle
aad
or
cld
xchg
cwtl
enter
xchg
call
push
add
xor
push
or
in
fimuls
fstpl
js
ret
jne
js
inc
jecxz
int
mov
daa
ds
sub
push
int3
lea
nop
into
cmp
mov
pop
les
jne
or
cmp
int3
or
push
xchg
cltd
data16
cmp
and
mov
xor
and
aad
pop
outsl
xchg
mov
pop
enter
xchg
ljmp
subl
push
hlt
push
outsb
fildl
add
or
push
lock
sub
dec
test
test
ljmp
test
cmp
pop
or
and
xchg
and
cmp
mulb
fistpl
adc
sub
add
mov
mov
cmp
loop
out
xchg
lcall
daa
pop
pop
scas
in
test
aam
popf
xchg
leave
test
jmp
dec
xor
sbb
loop
jl
shlb
shll
cmpsb
in
ja
dec
mov
adc
stc
xchg
xor
or
test
add
dec
rcll
in
mov
mov
cmp
sar
mov
loope
decb
cmpsl
cs
pop
sub
ja
add
sbb
dec
push
jge
icebp
addr16
je
jnp
repz
lock
jo
mov
dec
sbb
push
adc
xor
add
sarb
or
xchg
push
enter
cmc
xor
cmp
add
scas
push
test
inc
nop
push
push
inc
inc
jne
xor
in
mov
pop
mov
mov
ja
add
pushf
cmp
pop
movsb
sbb
loope
or
push
rep
cmc
popa
pushf
push
xor
repnz
addr16
jge
loope
in
inc
dec
mov
daa
sarb
mov
mov
dec
adc
enter
fnstcw
ljmp
cs
and
imul
stos
xchg
data16
testb
inc
mov
lock
rolb
call
xchg
xor
les
pop
xor
xlat
jno
mov
mov
mov
incb
notl
stc
call
jl
adcb
xchg
mov
mov
push
pop
sbb
pushf
lods
dec
dec
loop
rcl
cmp
or
imul
inc
les
loop
fucomi
push
fists
in
dec
adc
xchg
inc
sbbl
jle
lcall
shlb
loop
push
or
xor
sbb
fidivl
in
in
lds
cld
test
lcall
cwtl
sub
pop
inc
mov
stos
js
add
push
call
mov
fsubrs
lods
mov
bswap
push
leave
jae
mov
std
pushf
insl
test
mov
std
jmp
dec
add
mov
lock
xor
sti
cli
pop
loope
aas
dec
jnp
test
popa
add
mov
dec
mov
sub
mov
data16
adc
cld
and
cmp
mov
dec
push
cmp
pop
outsb
xor
fwait
dec
sbb
pop
xor
sarb
cld
movsb
inc
mov
fisttpl
outsb
adc
aad
xor
sahf
xor
imul
cmp
insb
js
push
dec
and
loopne
xchg
mov
cmp
mov
jno
dec
mov
mov
cmp
sbb
sbb
aas
nop
pop
cmc
fxch
pop
pushl
xor
iret
pop
jecxz
dec
shrb
mov
bnd
out
xor
scas
adcb
pop
xchg
ret
mov
fdivrl
inc
jp
mov
mov
shlb
or
inc
sarb
test
dec
in
mov
jmp
xor
pushf
bound
loop
mov
in
sbbb
int
push
into
adc
xchg
aam
sbb
dec
shlb
ljmp
cmp
sub
adc
adc
pop
dec
xlat
mov
jo
lret
or
lock
call
andb
xor
jecxz
dec
mov
pop
aaa
mov
cmp
mov
sbb
mov
cmp
xor
push
fistpll
sbb
sbb
mov
mov
xor
je
cld
js
add
test
pusha
mov
sub
lods
test
sub
lods
pop
ljmp
xchg
bound
fwait
sar
or
adc
mov
jns
dec
mov
inc
sbb
jp
hlt
mov
test
mov
aam
jnp
call
jle
lret
addr16
stos
xor
stos
int
outsb
dec
push
adc
sub
ficoml
stos
jge
mov
dec
insl
mov
sti
fisubl
lret
adc
mov
daa
push
int3
push
test
xchg
int
movl
cmp
cmp
pusha
xchg
adc
pop
sub
cli
fsubs
add
pop
divl
repnz
or
rdmsr
pop
movsb
cmc
and
cmp
mov
adc
dec
out
popf
test
div
jl
fisubl
jno
scas
aaa
out
inc
and
aaa
nop
out
adc
cmc
imul
push
mov
and
mov
sti
popa
and
push
iret
pop
insb
roll
into
lret
jl
arpl
xchg
les
dec
ror
cwtl
mov
jo
test
in
inc
add
icebp
inc
ffreep
sub
push
push
mov
and
pcmpgtb
cmp
roll
cmpsb
dec
dec
test
add
pop
mov
push
lock
das
mov
icebp
movsb
pop
lahf
lahf
js
and
pop
pop
mov
ss
cmp
in
pop
aam
xor
or
mov
mov
in
fisubs
popf
cmc
jo
stos
and
add
in
pushf
sub
sbb
dec
cmp
icebp
cld
sub
cmp
jp
inc
jns
lds
inc
mov
pop
loop
fs
pop
aad
imul
jge
cmp
and
inc
mov
sbb
stc
out
sub
cmp
rol
dec
mov
or
out
sub
or
hlt
push
xchg
lahf
repz
jno
push
fiaddl
cltd
bound
mull
rorb
dec
cmp
mov
cmpsl
icebp
ret
sub
insl
inc
xor
xchg
mov
mov
xchg
in
cs
mov
inc
es
ficompl
and
rcrl
xor
mov
popa
dec
sub
xchg
add
les
fstps
mov
lret
sub
mov
addb
sub
mov
and
out
jne
nop
es
mov
jns
dec
ss
lahf
mov
loope
sub
mov
sbb
test
push
fistpl
in
movsl
jp
scas
jae
cmp
stos
mov
and
data16
ret
out
imul
sub
outsb
mov
cmp
push
inc
test
movsl
add
pop
cmp
add
mov
xor
test
lahf
movsl
arpl
jno
movsl
or
fs
fstps
cmp
rclb
rcrb
add
je
bound
enter
ljmp
sarb
jne
fwait
dec
cmp
xor
std
dec
cmp
jnp
and
jp
aad
jbe
mov
and
xchg
es
pushf
sbb
cmp
test
cmp
jno
push
add
and
popf
cmc
pusha
jae
mov
rorl
add
push
sti
sbb
inc
or
dec
pop
mov
les
push
or
jl
daa
or
insb
gs
dec
xchg
shr
lret
icebp
cmpsl
push
xchg
xor
test
push
push
sub
jnp
lahf
jl
out
mov
or
add
dec
std
mov
jo
movsb
fbstp
cmp
shll
xchg
push
cmp
in
fwait
faddl
xorl
mov
shlb
stos
or
add
outsb
pushf
adc
and
mov
mov
jp
aaa
aaa
xchg
or
add
sub
shlb
adc
jmp
fs
int
outsl
add
xor
loop
sub
in
popa
add
push
push
push
mov
xor
push
add
sahf
mov
andl
cmp
cld
mov
out
inc
test
jge
out
dec
mov
daa
cmp
scas
jmp
mov
and
loope
inc
adc
add
or
mov
jo
xchg
ret
nop
xchg
shlb
data16
dec
cmp
adc
sbb
popa
bound
aam
and
pop
lret
test
mov
es
ja
test
sub
inc
sub
jl,pn
hlt
xchg
pusha
jno
dec
add
push
out
mov
pop
imul
leave
mov
add
bound
arpl
mov
insb
jns
shrl
inc
lcall
cs
out
lcall
push
inc
jecxz
test
jae
rcrb
inc
xor
mov
out
or
outsl
inc
in
test
test
mov
repz
stos
repz
test
les
dec
lahf
cmovns
mov
cmc
test
inc
enter
cmp
inc
in
pop
loopne
imul
sbb
sbb
aas
add
or
fistl
addr16
sbb
mov
enter
lds
sti
xor
mov
push
sub
aad
outsb
ds
add
clc
rcrb
or
push
jmp
mov
lock
lret
push
mov
sahf
lret
ret
iret
inc
push
cli
movsl
jge
sub
fadds
push
jo
push
movsl
sub
jnp
lods
ficomps
movsl
adc
cmp
test
push
push
dec
sub
push
xor
mov
adc
and
mov
pop
push
cmpsb
lret
pusha
jns
and
push
push
push
inc
bnd
movsb
lret
mov
jp
je
xchg
addl
lds
xchg
adc
pop
adc
lea
andl
out
cwtl
mov
pop
sub
std
mov
aam
sub
mov
aas
fidivrs
sbb
shl
inc
mov
ja
cwtl
xchg
mov
fwait
jl
push
std
push
data16
inc
lret
jmp
and
sbb
dec
and
xor
cmp
aam
sbb
add
cs
fldl
mov
jnp
and
lret
call
or
push
mov
mov
jge
mov
mov
das
sbb
xchg
fistl
mov
adc
test
xchg
ret
adc
test
fdivl
xchg
sar
inc
dec
iret
scas
or
jbe
mov
jecxz
pop
pop
mov
xor
arpl
jbe
sub
aam
dec
jns
push
fcomp
push
mov
gs
inc
sbb
jbe
sub
jp
into
lret
test
or
adc
cld
push
mov
cmp
xchg
pop
push
outsb
imul
inc
in
lods
push
or
test
xor
sbb
sub
adc
jl
testb
xor
into
icebp
cltd
xor
sbb
dec
out
mov
scas
popa
das
pop
and
pop
adc
enter
pop
repnz
jmp
push
mov
pushf
cmc
inc
adc
dec
add
and
mov
pop
mov
mov
mov
movsl
scas
xchg
loop
stos
mov
test
or
fs
int
adc
jmp
in
pop
stc
jo
in
pop
inc
aas
jbe
dec
jno
mov
jl
sbb
lods
sbb
rol
or
jecxz
mov
aad
xchg
ja
in
lahf
adc
mov
xchg
fsubs
sub
imul
stos
cmp
cmpsl
leave
or
adc
mov
cmp
mov
xchg
mov
mov
mov
rcl
out
in
cmp
xchg
jp
movsb
xor
xor
inc
cwtl
es
adc
cmc
out
push
pop
jmp
sarl
fisttpl
into
mov
add
and
jb
rcl
jo
jmp
lahf
mov
inc
notb
loopne
adc
xor
cmpsb
fdivrs
stos
mov
dec
and
ljmp
addr16
inc
cmp
stos
mov
sub
jge
push
cmp
ret
push
push
popf
aaa
adcl
push
sbb
lods
repz
push
adcl
pushw
and
cmc
daa
pop
dec
pop
mov
addb
or
pop
jno
xchg
fildl
ss
ror
sub
leave
clc
fcmovnbe
sub
ja
mov
push
or
pop
push
iret
cs
inc
scas
pop
sahf
inc
mov
testb
xchg
call
inc
and
and
push
or
cmp
push
xor
jp
sub
loopne
inc
daa
pop
enter
loopne
xchg
mov
push
das
ror
cld
sub
clc
ret
jl
adc
fistpl
hlt
aam
xchg
adc
xor
rcll
push
push
pop
inc
push
divl
sahf
std
pop
mov
and
ret
shrl
call
inc
mov
shll
xchg
inc
aaa
mov
test
pop
mov
popf
cmp
mov
mov
xchg
cmpsb
not
aas
and
lock
popf
add
pop
push
add
shrl
pop
add
lea
jp
repnz
inc
dec
adc
sbb
bound
inc
leave
mov
or
jle
xchg
sub
jmp
pop
mov
or
sub
xor
cmp
scas
push
arpl
andl
movsl
shr
jb
nop
xor
push
adc
pop
inc
mov
cmp
add
insb
bound
popa
sbb
cmp
arpl
sti
fistpl
inc
es
pusha
aaa
or
jg
mov
cli
pusha
rclb
insb
inc
in
popa
sarb
sbb
pop
xor
scas
fwait
mov
lahf
fiaddl
pop
stos
aam
dec
cmp
aaa
cmp
int3
sub
jbe
sub
adc
popf
inc
xor
add
mov
push
out
es
inc
sbb
pop
mov
push
pop
out
mov
or
in
enter
add
iret
jne
dec
inc
aam
sbb
push
icebp
cli
cwtl
fildl
push
fildl
lret
loop
int3
jo
mov
or
mov
and
mov
or
outsl
cli
out
outsb
jp
jle
repnz
mov
shrb
les
mov
mov
add
or
fcomps
push
xchg
jno
lret
sbb
jg
jge
jb
mov
scas
cmpsb
mov
insb
sub
outsl
out
push
into
or
fsts
stos
fwait
incl
xchg
jmp
aad
test
cmp
fildl
cs
inc
ljmp
sbb
cmp
clc
cmp
mov
push
lcall
dec
jecxz
cmp
outsb
inc
fdivrl
nop
and
jle
sti
cmpsl
mov
jle
and
movsb
fldcw
sbb
jmp
lret
es
mov
shrb
hlt
dec
inc
addb
add
gs
pop
or
pop
xor
stos
in
pop
pop
xor
std
cwtl
stos
mov
dec
and
cli
add
cmp
jg
dec
adc
ja
cmp
sub
mov
mov
add
sub
jne
mov
shrl
jecxz
popf
subl
fsubs
pop
les
push
cmc
xor
out
in
and
jle
lds
inc
push
fidivs
test
data16
idivb
sbb
fsubr
mov
cmp
movsb
dec
push
xor
push
dec
jo
and
pop
icebp
push
out
js
xlat
jmp
and
jne
pop
pop
add
adc
stc
cmp
jmp
push
xchg
ret
inc
mov
pop
mov
jg
mov
mov
jb
aas
mov
aam
cld
push
nop
int3
add
es
xor
orl
jg
iret
popf
xchg
out
sahf
add
xchg
mov
call
fsts
pop
scas
mov
lock
add
mov
repz
pusha
inc
xchg
cmp
insb
inc
add
inc
push
sub
lahf
ljmp
lahf
jns
nop
pop
test
pop
dec
push
pop
negb
adc
pop
lret
inc
sbb
push
and
fsub
cmpsl
adc
jbe
xchg
pop
je
stos
out
loopne
dec
inc
bound
fcomi
mov
add
xchg
mov
insb
aad
pop
insl
insb
add
test
outsb
jbe
mov
lds
sub
out
sarl
mov
popa
inc
cmc
pop
lret
adc
lret
fsubl
mov
je
or
lds
stos
jp
cmp
outsb
adc
lcall
and
push
lret
pop
dec
jl
mov
loopne
out
arpl
xchg
jno
jae
lret
loopne
inc
std
repz
sarb
mov
ret
mov
cmp
arpl
rcrl
pop
pop
out
sbb
outsb
enter
push
pop
lcall
and
fidivs
mov
dec
dec
jle
add
add
stos
mov
adc
or
movups
out
fdivrl
and
dec
jmp
sbb
aam
cli
sbb
xchg
cmp
arpl
jo
icebp
dec
pop
xorb
inc
pop
dec
cltd
fildl
pop
push
add
jle
popa
add
stos
cltd
fdivrl
rolb
mov
imul
test
mov
stos
sub
loopne
sub
icebp
mov
mov
or
aas
or
inc
scas
and
mov
leave
jae
cmp
arpl
add
mov
xor
sub
adc
xchg
lahf
sti
test
daa
decb
icebp
imul
and
pop
add
jne
dec
sbb
xor
stc
pop
insl
ret
daa
push
out
or
es
stos
dec
sbb
jmp
mov
push
mov
push
ljmp
adcb
das
jno
js
push
mov
js
mov
push
pop
mov
lock
insb
pop
scas
ljmp
sub
cmp
mov
or
sbb
mov
push
xchg
fdivrl
loopne
xchg
mov
mov
test
addl
or
ja
adc
bound
pop
test
stos
dec
aam
mov
sbb
pop
insl
mov
xchg
jp
fdivrl
pop
stos
std
popa
iret
je
cli
lahf
sbb
push
jg
subl
adc
cli
lea
arpl
in
test
jae
lock
jecxz
jmp
dec
mov
mov
mov
movsb
dec
ljmp
push
and
mov
jns
fsubp
imul
ss
not
aad
adc
stc
int3
adc
call
mov
aad
sti
and
loop
inc
test
into
jne
lea
sub
mov
cs
lods
minps
mov
cld
inc
jo
cmpsl
iret
cmc
sbbb
insl
sub
incb
fsubrs
xchg
jae
xor
inc
in
int
or
mov
inc
or
add
pop
mov
fsubl
data16
cwtl
mov
mov
sbb
out
push
cmp
int
je
jg,pt
hlt
adc
cwtl
lea
mov
jp
xlat
xchg
inc
mov
or
inc
jnp
int3
repnz
mov
push
test
jns
cli
icebp
in
loope
cld
mov
jp
push
sub
push
dec
mov
xchg
jp
in
pop
pop
xlat
xchg
jmp
xchg
out
or
in
pop
imul
mov
and
lock
mov
rcll
push
loop
testl
arpl
cmpsb
ljmp
push
movsb
xchg
or
add
or
inc
aaa
or
int
loopne
ror
popf
inc
dec
outsl
int
ror
pop
sbb
or
out
jno
sti
and
das
aad
and
sbb
lock
aaa
sub
and
add
cltd
xor
ret
cmp
rcrl
xor
shlb
mov
jl
mov
fsubrl
lock
jle
lahf
test
shrl
cltd
jp
test
ja
sub
add
fstpl
pop
mov
jbe
adc
bound
bound
js
sub
dec
rcl
nop
xchg
or
xchg
out
mov
fidivl
or
vhsubps
addr16
test
lahf
js
fwait
scas
loope
xor
xchg
inc
pop
lea
sbb
in
pop
add
mov
iret
dec
mov
in
lret
mov
and
das
fwait
dec
rcll
xchg
movsl
iret
je
jne
jbe
ds
in
or
mov
pushf
dec
lods
xchg
movsb
daa
jns
pop
cltd
out
push
into
mov
ljmp
xchg
sbb
mov
or
mov
cmpsl
mov
ror
push
pop
cmpsb
les
adc
jo
cltd
fwait
shl
inc
rcr
sbbl
lods
jo
inc
jge
dec
mov
push
stos
in
sbb
fprem1
lea
fs
insl
inc
jecxz
mov
icebp
outsl
fstl
push
mov
push
and
jnp
fisttpl
mov
mov
inc
shll
test
mov
jns
mov
scas
cmp
sub
aas
mulb
popf
test
mov
push
lcall
mov
insl
fmull
mov
mov
bound
andl
ret
dec
dec
or
push
out
jl
push
jae
dec
hlt
lahf
xchg
cltd
jnp
mov
adc
popf
iret
mov
jmp
dec
inc
inc
cmp
mov
out
sahf
cltd
test
and
inc
pop
imul
fstl
repnz
mov
push
in
inc
sarb
leave
cmp
dec
stc
dec
mov
jne
xchg
daa
lss
ss
jo
pop
jl
cmp
push
fdivs
push
movsb
fcomp
xchg
mov
pop
jmp
enter
out
fstpt
fistpll
xor
aas
xchg
or
mov
cmp
dec
xlat
xchg
dec
mov
dec
aas
dec
mov
ret
lods
add
mov
data16
inc
mov
dec
arpl
dec
out
ja
or
pusha
aad
sub
sub
and
ljmp
fbstp
add
and
or
cmp
xchg
cli
mov
test
shr
push
inc
mov
dec
sbb
inc
and
lahf
pop
sbb
jecxz
cld
clc
jle
je
cmp
jnp
sbb
add
push
adc
inc
cmp
sbb
sub
aam
jle
insl
lcall
sub
ljmp
mov
imul
push
jo
int3
out
fsub
out
lcall
xlat
or
sbb
aad
mov
std
dec
xor
int
lods
mov
cld
je
inc
cli
sar
out
ja
and
sub
in
inc
push
xchg
into
shll
iret
in
lds
popa
ret
stc
daa
cmp
mov
push
push
repnz
hlt
pushf
xchg
fdivs
cltd
cli
aaa
dec
xchg
insb
sub
sub
lock
das
sbb
int3
pop
sub
sub
mov
adc
cwtl
in
test
mov
test
cmp
leave
adc
test
popf
cmp
test
push
adc
lcall
mov
cmc
mov
adc
xor
or
sbb
xchg
sbb
dec
cwtl
js
pusha
test
pop
mov
xor
mov
enter
scas
jb
pop
imul
std
and
jecxz
mov
lahf
add
jl
sahf
repz
cmp
cmp
xlat
ret
dec
outsl
iret
cmc
fidivrl
aam
mov
jl
test
push
in
xchg
pop
ljmp
lods
cld
push
dec
push
lcall
mov
int
add
mov
ror
stos
out
add
adc
mov
adc
xchg
mov
or
sub
in
rorl
test
xchg
sbb
cmp
test
jno
stc
mov
icebp
xchg
jmp
push
pop
add
fwait
xchg
or
mov
sbb
inc
enter
pmullw
insl
jl
popa
xchg
sbb
pop
cmp
jp
or
int
mov
sub
ret
scas
xchg
cmp
call
jno
adc
lcall
sub
and
rorl
cmc
xchg
sbb
add
push
decb
jg
sbb
into
ja
std
add
rcrl
mov
xor
mov
sub
mov
inc
insb
mov
gs
push
pushf
movsl
sarl
loop
fwait
lods
repz
xor
mov
aad
or
lret
fcoml
pushf
enter
fwait
and
adc
push
pop
pop
sarb
rcrb
dec
xor
lods
scas
xchg
cmpl
jbe
pushfw
rorl
popf
lcall
sbb
loop
cmp
insl
insb
iret
mov
sbb
jg
leave
mov
or
sub
pop
sbb
lcall
faddl
inc
or
pop
cmpsl
call
jmp
sbb
push
ja
fsubl
mov
insb
lcall
xor
daa
dec
cmp
lds
push
add
cld
add
push
movsl
pop
insb
push
mov
jno
es
push
lret
adc
popa
xchg
push
insb
mov
fcmovne
xor
test
cmp
or
in
mov
enter
push
ja
lahf
adc
int3
sub
fs
pop
in
cmc
lcall
cld
pop
jns
loope
xor
pop
bound
add
test
jge
sub
lds
jle
pushf
xor
adcl
int3
mov
lahf
jge
or
js
adc
shlb
lea
lea
ja
push
pop
scas
mov
add
test
mov
inc
dec
fistl
xlat
imul
jp
in
rdpmc
pop
pushl
cmpsl
into
in
mov
cltd
addb
cmp
std
dec
xorb
pop
call
icebp
jns
scas
pop
fisttpl
jl
xchg
mov
bnd
jp
out
cmp
cli
jbe
hlt
addr16
shrl
lret
jnp
pop
pop
test
mov
stos
aam
lahf
outsl
sub
xor
add
iret
pop
clc
jns
rcl
add
dec
inc
push
loopne
pop
lcall
mov
mov
int3
mov
pop
cmp
sub
mov
dec
mov
sub
pushf
mov
loope
mov
or
lret
push
cmc
mov
xor
push
icebp
push
pop
test
or
cmp
scas
mov
or
sub
fwait
push
jecxz
enter
insb
mov
out
pop
arpl
inc
mov
adc
dec
movsb
pop
out
ret
sbb
fwait
stc
sub
or
and
fwait
iret
jae
jecxz
pop
insl
pop
jns
leave
and
icebp
or
pop
jg
dec
cmc
sbb
jno
dec
mull
cmp
xor
ret
inc
shrl
xchg
inc
xchg
cmp
aaa
aad
lea
roll
mov
adc
add
inc
rcll
xchg
mov
cltd
into
loop
icebp
movsb
loop
cmp
and
mov
pop
fistps
and
call
adc
push
xchg
fwait
js
enter
jmp
hlt
addr16
and
aaa
add
or
adc
pop
into
mov
loop
gs
imulb
jno
in
cmp
call
ret
cvtps2pi
push
jmp
popa
cmc
pushf
popa
ret
movsl
mov
fsub
add
fnstenv
sbb
jbe
inc
daa
mov
mov
lods
add
cmp
pop
movsb
shll
pop
cmpl
lret
testb
xor
aad
inc
hlt
mov
push
mov
mov
out
fldl
sub
gs
rorl
aaa
or
xchg
sti
add
inc
arpl
es
pop
jne
pop
pusha
xlat
pop
sbb
mov
push
mov
aaa
stc
xlat
mov
sbb
mov
int3
xchg
sub
cli
aas
push
adc
and
pop
push
aad
or
subl
ret
movsl
outsl
push
pushf
sub
ja
mov
mov
test
mulb
add
daa
mov
jb
add
mov
mov
cmc
fwait
lea
inc
cmp
insb
xchg
fisubrl
arpl
or
sbb
push
jg
fcmovne
inc
mov
stos
sub
or
test
mov
adc
mov
xchg
push
enter
jo
cmp
xchg
cmp
xchg
dec
cmpsl
sbb
fwait
sub
arpl
add
push
dec
or
pop
loop
mov
in
push
sub
sbb
fwait
aas
cmpb
xor
aaa
push
cmp
int
loope
add
leave
sub
pop
pop
push
movsl
xchg
or
inc
add
ds
ljmp
fs
mov
jmp
cmc
icebp
inc
sbb
cld
xchg
sbb
cmp
lea
mov
fsubs
jp
loope
sub
int
or
sbbb
inc
rorl
jle
dec
aad
mov
pop
mov
sbb
adc
xorl
sarl
lret
js
es
sub
push
inc
inc
xchg
movsb
test
lock
insl
adc
cmp
sub
mov
fmull
push
addr16
mov
cmpb
mov
fs
das
popa
mov
les
jg
movsb
jns
je
repnz
mov
outsl
scas
xor
push
sbb
jge
mov
fs
pushf
cmp
outsb
jg
subl
jmp
dec
or
mov
mov
outsb
push
cmpsb
aaa
jmp
out
cs
pop
mov
loope
mov
cmpsl
stc
insl
push
and
subl
fsub
ljmp
adc
and
inc
fdivrs
pop
lret
movsl
pop
cmp
mov
mov
sub
loopne
dec
into
sarl
adc
pop
push
leave
movsb
dec
stc
mov
dec
xlat
lea
cmc
fistpll
mov
loopne
outsb
or
add
cmc
and
adc
xor
lret
jle
jl
xchg
mov
enter
pop
aas
or
add
std
pop
dec
xchg
scas
push
inc
add
ljmp
testb
push
popf
push
xchg
jno
xchg
cwtl
mov
jnp
sahf
fadds
int3
icebp
jg
adc
aam
icebp
loopne
and
ret
mull
stos
jo
push
fldl
es
lret
add
dec
hlt
fistpll
mov
fimull
loopne
dec
out
pop
in
ret
dec
xchg
roll
imul
fwait
or
mov
cmp
popa
sahf
test
jge
adc
and
in
mov
sbb
and
pop
pop
mov
outsb
sbb
jns
inc
pop
xchg
ss
leave
and
pop
cs
add
out
mulb
adc
leave
stos
repz
in
xchg
pop
mov
mov
mov
jecxz
cmc
lods
sbb
sbb
iret
cmp
test
outsl
subb
add
insl
fsubrl
pop
push
inc
sarb
jl
mov
clc
cmp
xor
and
les
cwtl
xchg
test
das
xchg
push
mov
hlt
shll
lods
sahf
ret
adc
es
imul
inc
mov
outsb
aaa
mov
jmp
daa
sahf
in
add
popa
xchg
inc
notl
mov
mov
dec
movb
mov
and
dec
xchg
dec
clc
loope
pop
or
lret
fildl
out
cli
or
and
push
rcrb
add
xor
mov
clc
dec
mov
inc
cltd
xchg
cmp
jno
push
aam
call
adc
in
loope
fsubrs
int
xchg
call
mov
loopne
and
sub
lcall
shrb
push
test
ret
psubsw
mov
push
sub
mov
adcl
and
adc
sub
cmp
mov
adc
mov
inc
add
lods
cmc
pusha
push
dec
fs
pop
inc
jmp
ss
pop
and
pop
ss
mov
lock
repnz
add
mov
ja
out
shrl
stos
mov
mov
mov
iret
mov
pop
xor
sbb
push
pop
sub
rol
xchg
mov
imul
cmp
sub
sub
adc
mov
lret
notl
xor
jae
jmp
cmp
lea
lahf
adc
pop
mov
and
mov
cmc
aas
mov
scas
push
mov
xor
aad
lds
xlat
or
sbb
ljmp
adc
cmp
sarb
cmp
cmpsl
fldt
mov
mov
movsl
dec
decb
push
and
mov
pop
fmull
orl
pop
add
movsl
push
gs
inc
cmp
add
gs
push
mov
adc
lds
sar
dec
aad
fldl
jge
xchg
mov
in
hlt
ret
scas
sbb
lds
les
leave
arpl
in
mov
jmp
cmpb
ret
add
mov
mov
ret
outsl
mov
sbb
mov
rorl
les
and
imul
push
std
out
jg
ds
shl
adc
or
ja
cmpsb
leave
hlt
lds
sahf
mov
push
add
push
mov
pop
ss
rolb
mov
jae
enter
sbb
jg
shlb
dec
cwtl
pop
sahf
rclb
dec
cmpsl
or
repz
pop
xor
xor
jp
jae
inc
lods
jno
pop
cmp
call
sbb
mov
cld
jg
in
out
fwait
pusha
sbb
call
enter
mov
enter
ja
loope
mov
xlat
sub
mov
inc
repz
popf
test
cmc
int
fstpl
inc
inc
test
fnstsw
and
xchg
sbb
test
jecxz
rep
and
pop
pop
fldcw
or
xchg
insb
movsl
mov
fucomp
pop
fbstp
into
outsb
test
inc
dec
add
popa
add
mov
pushf
ret
sbb
pop
adc
xor
xchg
out
mov
push
mov
out
or
and
in
dec
cmc
push
add
sub
mov
or
cmp
jle
out
jge
sub
in
xchg
pop
jnp
loope
scas
inc
aaa
scas
leave
sub
jbe
inc
pop
in
dec
fcomp
insb
int
cmpb
jmp
mov
shll
push
mov
es
fisubs
jge
fwait
rcrl
ss
or
fists
ror
jmp
lahf
fcmovne
fbld
jbe
or
nop
imul
inc
sub
out
sbb
cmp
leave
or
adc
push
push
mov
push
jbe
fidivrs
pop
add
sbb
adc
and
sub
pusha
lcall
rcll
xchg
mov
push
aas
test
aaa
ds
jecxz
ds
stos
or
ja
push
xor
pop
int
jnp
enter
xor
add
test
adc
loop
or
clc
push
dec
lcall
pop
mov
aam
dec
lock
sbb
mov
cmp
mov
xchg
lea
enter
cli
test
jmp
movsb
jnp
lret
push
pop
sbb
jge
fidivl
out
stc
mov
ret
dec
sbb
inc
xchg
popf
ljmp
fldt
pop
adc
out
ljmp
and
mov
xor
fldt
mov
push
push
popf
mov
test
push
roll
pop
int3
cmp
mov
pop
xlat
fsubr
jecxz
sbb
jg
dec
or
inc
lret
inc
repnz
test
and
cmp
jg
inc
mov
call
repz
mov
and
inc
xchg
imul
andl
lods
stos
or
and
sub
dec
xor
hlt
mov
adc
daa
out
mov
inc
popf
stos
movsl
cmc
cmp
jno
test
mov
mov
lods
popf
loope
push
pop
ljmp
and
addr16
rclb
xchg
arpl
sub
jle
sub
mov
or
lret
inc
mull
fistpll
xor
mov
or
lods
pushf
mov
mov
movsl
cli
jo
and
subl
xorb
fistpl
sbb
adc
test
jg
scas
pusha
mov
bound
stc
call
mov
xchg
enter
and
sub
ret
cmpsb
dec
mov
ja
sar
jbe
int3
pop
out
aas
das
pop
push
lods
outsb
inc
mov
sbb
adc
inc
cmp
dec
adc
sub
mov
sti
nop
and
enter
inc
lock
popa
dec
xchg
lea
push
ss
decl
xor
push
xchg
inc
add
or
jp
push
ret
js
rcrb
nop
or
sub
bnd
mov
test
jae
sbb
cmp
or
jp
xor
movsl
mov
pmuludq
cmpxchg
jns
pop
pop
pop
push
and
push
mov
fdivrl
push
inc
stc
push
movl
gs
stos
add
sahf
pop
push
int3
jae
movsb
inc
mov
xchg
add
imul
pop
mov
pop
pop
mov
push
cmp
and
push
mov
mov
aas
cmc
push
int3
fisubrs
inc
add
mov
xchg
sub
mov
mov
mov
outsl
xchg
or
xchg
push
repz
add
inc
scas
mov
rcr
cmp
and
sub
jp
mov
ss
sub
mov
add
adc
cli
scas
les
mov
cmp
sbb
pop
mov
xchg
pushf
cmp
imul
out
xchg
idivl
xor
pop
jne
out
out
jg
mov
cli
pop
mov
add
or
ds
popf
popa
aam
or
fcos
sub
sbb
cmp
fildl
jnp
lock
shl
in
mov
pop
add
pop
clc
and
dec
xchg
add
mov
stos
sbb
fnsave
ja
shll
scas
adc
mov
idiv
mov
scas
fs
out
mov
addb
xlat
adc
pop
push
jne
fcomip
ljmp
inc
pop
fadds
rcrb
fstpl
pushf
jo
test
pop
orl
cs
in
aam
out
xor
out
fildll
xlat
es
dec
mov
rcl
sbb
or
pminsw
mov
pop
shrl
xor
fwait
scas
dec
cmpb
xchg
pop
xor
sub
in
jmp
push
in
or
shll
cli
xchg
pop
push
adc
scas
and
fwait
sub
dec
pop
adc
cmp
mov
push
orl
lret
sub
mov
xorl
pop
fidivrl
dec
idivb
sahf
out
pop
scas
sub
repnz
out
je
mov
mov
cs
adc
out
dec
sbb
scas
cmc
xchg
loope
nop
add
negb
or
adc
or
lods
mov
pop
mov
mov
out
mov
aad
lods
andb
mov
jmp
out
xor
xchg
and
fadds
jnp
mov
mov
js
pusha
nop
divl
insl
bound
sub
push
inc
sar
push
mov
push
addr16
stos
pop
or
mov
dec
xor
fwait
rcrb
lea
mov
aad
fs
dec
mov
or
adc
and
sub
scas
mov
mov
jae
jnp
sbb
mov
lock
cmp
inc
lock
push
movsb
fstl
iret
pop
jl
mov
in
cmp
jle
fistpll
ljmp
add
and
fsubr
and
ljmp
sub
pop
daa
or
aaa
out
test
into
mov
mov
jb
in
dec
jle
mov
bound
test
cli
push
cltd
and
sbb
insb
mov
lods
and
jmp
add
xlat
dec
mov
or
and
cmp
inc
imul
and
lods
mov
scas
out
icebp
pop
addr16
test
jle
mov
pop
mov
dec
dec
or
notb
testl
xchg
adc
das
loopne
pop
lcall
cmpb
push
outsl
out
cmp
mov
mov
out
mov
out
outsb
and
mov
mov
lahf
out
cwtl
inc
jp
out
fcmovb
notb
jne,pn
jl
push
cmc
fsubl
and
sbb
lock
dec
cmp
push
call
xchg
add
roll
mov
test
mov
shrb
loop
ljmp
hlt
out
orb
mov
data16
pop
jg
xchg
sti
ret
out
jp
sub
fsts
mov
and
inc
sbb
mov
dec
mov
cwtl
nop
dec
dec
shrl
out
jno
fsubl
mov
mov
pop
pop
aaa
icebp
dec
mov
test
adc
adc
push
iret
fwait
stc
scas
sbb
clc
mov
jb
imul
xchg
add
lret
mov
push
movsb
stos
rcll
sub
inc
jg
fwait
sbb
jnp
aad
sub
jns
push
mov
dec
add
sub
js
xchg
mov
inc
movsl
ja
pop
repnz
mov
enter
insb
pop
mov
xor
pushf
pop
jmp
xchg
mov
clc
pop
ret
fnsave
dec
mov
push
and
lcall
inc
aad
add
addl
and
popf
in
in
jl
outsl
stc
push
repnz
xchg
pop
aaa
xorb
mov
inc
cltd
jg
enter
aam
jecxz
rep
fwait
dec
aam
pusha
out
pushf
hlt
out
lret
and
xor
inc
or
push
lahf
lea
jle
test
and
stos
push
mov
inc
fsts
gs
popf
mov
mov
and
je
jo
jne
rcll
push
mov
xor
into
jge
sub
mov
jo
push
mov
mov
inc
jno
pop
dec
pop
xor
ret
pop
mov
inc
pop
in
aas
sub
dec
sti
sahf
jp
fstpl
mov
mov
mov
sub
xor
movsl
and
sbb
jbe
imul
jmp
adc
jb
add
les
jp
add
mov
lock
push
mov
jecxz
jo
pop
sub
cmpsl
pusha
in
sbb
loope
xchg
or
lcall
push
add
outsb
lods
push
test
push
mov
in
add
insb
movsb
xchg
daa
sbb
xor
sti
je
push
add
jb
enter
out
mov
push
imul
scas
sub
inc
lea
inc
es
loope
inc
xchg
xor
jne
adc
cmpsl
icebp
push
push
sti
out
sbb
jnp
stc
loop
cmp
ficoml
pusha
pop
xlat
imul
arpl
loop,pn
pop
cmc
insl
xor
cmp
out
push
sub
push
sbb
bound
cwtl
xor
jmp
xchg
scas
negb
rcll
pop
bound
loop
and
mov
mov
or
adc
jl
adc
aad
sub
xor
push
iret
into
jo
addr16
js
lahf
pop
movsb
popf
push
sub
test
add
call
push
mov
mov
in
out
shll
sbb
pop
scas
pushf
popa
lods
incb
movsb
pop
adcb
call
and
out
stc
rcrl
addr16
dec
jge
in
cmp
shlb
rcrb
push
rclb
imul
out
in
pushf
xor
aam
adc
mov
mov
pop
sub
jecxz
cltd
mov
adc
dec
jnp
insb
pop
lock
mov
fcompl
jge
out
push
jmp
and
mov
shl
adc
xor
orl
test
mov
stos
xor
dec
dec
jne
cmc
shl
xor
insb
aaa
adc
add
ss
jecxz
add
cwtl
xor
sbb
mov
push
push
int
mov
xlat
test
xchg
imul
jne
lock
xchg
sbb
ss
rolb
mov
mov
push
pop
loope
lods
divl
cltd
cwtl
movl
dec
inc
test
cmpsl
int
add
lahf
imul
mov
outsb
mov
pop
inc
aas
sub
sbb
xor
pop
dec
fdivrl
mov
add
add
cmp
cmp
xchg
mov
test
scas
vpaddw
ffreep
outsb
sbb
inc
repnz
fisubs
mov
sbb
mov
cmc
sahf
dec
out
inc
adc
insl
sbb
int3
or
shll
mov
stos
jae
scas
sbb
sbb
xor
clc
arpl
dec
sub
xlat
add
les
out
scas
fucom
mov
mov
mov
ret
push
in
cltd
push
pop
jp
mov
imul
mov
xchg
xlat
shl
call
out
outsl
add
lods
int
dec
push
gs
jge
rclb
xchg
rol
pop
fnsave
jae
inc
jne
sbb
mov
pusha
dec
push
inc
add
sub
push
repz
popf
mov
adc
adc
pop
mov
popf
sub
pusha
or
mov
mov
imul
pop
and
hlt
stc
fcomi
add
pop
movsl
xchg
adc
or
je
insb
stos
xlat
in
dec
aaa
sbb
cli
mov
movsb
loope
push
add
out
ds
in
lock
dec
out
jae
cwtl
mov
xlat
pop
adc
mov
jecxz
dec
js
sub
lea
pushf
mov
fisttpll
inc
xor
xchg
mov
jl
scas
outsb
xchg
dec
lds
dec
andl
addr16
dec
mov
inc
sbb
sbb
pushf
xchg
loop
inc
ret
mov
mov
scas
push
rcl
stos
jnp
stos
cmp
sub
aam
cs
inc
test
in
jl
dec
in
add
out
sbb
ret
ja
mov
rcrl
and
cltd
add
and
negl
push
test
adc
dec
or
out
jae
outsb
gs
push
or
mov
mov
movsl
mov
xchg
xchg
out
cmp
jg
or
mov
push
xor
stc
std
clc
and
mov
call
sarl
insl
out
ret
movsl
clc
aas
add
lock
insl
inc
sbb
adc
mov
push
adc
es
stc
xorb
cltd
sub
inc
adc
lret
push
out
push
dec
mov
fcmovb
push
mov
mov
in
ds
pop
sar
lea
fnstenv
mov
or
imul
jp
shlb
fistl
js
inc
ljmp
cmp
xor
push
mov
stc
call
arpl
pop
flds
or
sarl
insl
int
cmp
xchg
psraw
mov
stos
pop
adc
ds
int3
int
push
push
fucomip
mov
movsl
imul
mov
cmp
sub
mov
js
sbb
sub
lret
mov
stos
mov
lds
cli
stc
in
adc
jle
in
sbb
xlat
sub
push
fdivl
and
and
dec
lock
movsb
add
les
aaa
pop
and
ja
jb
mov
pop
jne
cmp
ljmp
sahf
data16
cs
push
push
sarb
push
in
out
loopne
int
mov
xchg
mov
lds
mov
out
push
pop
imul
rol
or
inc
mov
ds
ja
rolb
aam
aad
inc
andl
je
repz
pop
lods
sub
ret
call
bound
mov
in
cmp
add
bswap
iret
jmp
or
and
lea
sbb
sti
jle
mov
sub
add
loope
xchg
xchg
outsb
fdivrs
stc
outsl
lods
ljmp
mov
jmp
push
mov
icebp
xchg
mov
fisubl
mov
pushf
idivb
out
fwait
pop
pop
lods
js
sbbb
movsl
push
stos
aam
sahf
in
shlb
inc
or
cltd
sbb
mov
aas
xchg
pushf
inc
mov
outsb
hlt
loop
pop
xchg
and
lods
or
sub
insb
sbb
mov
adc
movsb
nop
adc
aaa
leave
test
adc
xchg
sahf
lods
xchg
stos
mov
cltd
test
xor
mov
push
inc
lock
mov
out
push
loope
jl
aam
js
and
dec
adc
adc
mov
xor
inc
icebp
insb
leave
xor
jl
enter
push
jp
aas
adc
int3
xor
test
push
aas
inc
lods
flds
in
push
xlat
jg
or
negl
in
hlt
cmp
cmpsl
lods
jl
shrl
popa
test
insl
testl
sbb
aam
sub
push
add
mov
pushf
call
jbe
loopne
adc
in
inc
push
mov
xchg
mov
fs
aam
nop
adc
or
sub
mov
mov
sub
ret
jne
insb
cmpsb
mov
ss
es
xchg
mov
cmp
and
loopne
xchg
or
xor
cmp
sbb
cmpl
in
xor
pop
out
popl
push
fbld
mov
out
arpl
or
stos
xor
out
jge
or
push
cmpsl
pop
pop
cs
push
rolb
adc
xlat
stos
fsts
cwtl
mov
loope
jnp
aam
or
lahf
jmp
jl
mov
outsb
movsb
mov
dec
mov
lds
div
jmp
cmp
mov
scas
mov
xor
xchg
mov
inc
adc
inc
js
aam
cwtl
test
add
rolb
loopne
out
adc
fimull
lods
outsb
les
mov
inc
jmp
imul
jecxz
cmp
repnz
outsl
cmpsb
loopne
repnz
icebp
sub
cmp
loop
jmp
mov
xchg
rorl
lods
mov
mov
jne
push
popf
mov
xchg
mov
call
daa
imul
cmc
or
inc
mov
push
test
sbb
lahf
sbb
fstps
cmpsl
bound
ret
in
insl
psubsw
cmc
cmp
insb
mov
and
mov
insb
push
mov
insb
clc
imul
mov
pop
pop
std
cmp
cmp
push
addr16
btc
cltd
pop
rclb
dec
out
loop,pn
and
mov
xor
stos
imul
test
out
iret
subb
mov
jns,pn
frstor
xchg
adc
add
scas
insl
repnz
mov
adc
lea
pop
sub
add
cwtl
rcrl
sub
adc
dec
icebp
mov
pop
in
cmp
sub
ljmp
mov
or
stos
inc
imul
jb
outsl
in
ljmp
insl
sub
xchg
add
jg
ljmp
push
insb
loope
mov
and
pop
cmp
mov
scas
aad
test
and
xchg
xchg
jmp
clc
inc
dec
mov
test
cmp
fbld
dec
inc
sbb
nop
pop
push
scas
je
inc
xor
aas
mov
and
ds
cld
in
jmp
xor
dec
and
pusha
cmpsb
adc
sub
rcrb
lods
mov
pop
int
push
pop
adc
repnz
inc
dec
xor
adc
mov
mov
jle
and
out
int
insb
or
xor
inc
and
std
mov
mov
xchg
adc
lock
jno
rcrl
loop
int3
sbb
pop
dec
and
mov
adc
fisttpl
popa
xlat
inc
xor
pop
cs
jne
movsl
mov
cmc
sti
or
out
push
and
or
add
mov
gs
inc
out
in
or
adc
jno
xor
pop
subb
and
mov
xchg
pop
mov
fcompl
mov
cltd
lods
jmp
aas
xchg
cld
data16
pop
repz
cmc
test
enter
loope
and
mov
pop
sub
cmp
imull
imul
in
jnp
and
add
push
ljmp
pushf
pop
sbb
cld
rorl
sbb
jg
adc
and
lds
ret
inc
into
mov
and
enter
ds
fs
movsb
mov
outsb
cltd
cmp
mov
lock
mov
ret
mov
iret
fsubl
incl
je
lods
push
call
dec
dec
push
pop
cmp
dec
inc
imul
xchg
cmp
mov
jo
orb
mov
jb
add
mov
jecxz
dec
dec
stos
pop
xchg
sar
add
int3
nop
adc
xchg
insl
lcall
aaa
pop
inc
repz
ficoms
jg
pop
dec
repz
lds
insb
sub
cmp
fadd
xchg
xacquire
adc
mov
movsb
jg
outsb
inc
cmc
decb
dec
aaa
push
xchg
push
dec
negl
mov
cmpsl
jmp
insb
orb
mov
popa
xchg
out
lret
sbb
xchg
and
mov
jg
mov
fdiv
dec
adc
pop
test
loope
add
add
xlat
cmp
xchg
sub
inc
dec
jno
xchg
pushf
mov
lods
and
out
cmpsb
stc
push
sbb
cld
in
and
adc
adc
mov
aad
jg
les
xchg
dec
cli
movsb
stos
lods
or
popf
addr16
dec
pop
xchg
fdivrp
inc
xlat
lods
scas
cltd
daa
stos
mov
mov
pop
inc
xchg
mov
add
mov
mov
xor
rclb
mov
cmp
scas
mov
cltd
mov
adc
xchg
mov
cmc
lret
xor
cmp
arpl
adc
sub
mov
dec
jns
mov
dec
outsl
jno
pop
fs
or
jecxz
pop
add
bound
arpl
clc
enter
mov
cmp
test
push
ja
xchg
les
lret
push
jno
push
pop
loope
daa
in
sub
ret
cmp
loop
fnstcw
lock
add
push
lea
fadds
adcb
pop
mov
cmp
inc
dec
paddb
pop
pop
mov
sbb
jmp
divps
repnz
popa
scas
push
add
add
fidivs
mov
xor
mov
out
mov
lahf
data16
shrl
jns
sub
jo
cs
push
fwait
mov
std
adc
jnp
movsb
xor
mov
iret
push
sub
pop
outsl
push
adc
mov
xor
dec
ljmp
int
dec
call
data16
mov
xorb
dec
imul
in
lods
call
push
iret
jge
cli
mov
push
push
xchg
jno
ss
pop
pop
mov
stos
inc
lods
cmc
popf
imul
fwait
add
stc
aas
loop
jle
sbb
sarl
adc
pop
out
jb
arpl
mov
aad
and
push
inc
mov
cld
push
or
cmpsb
shrb
out
lret
jecxz
test
inc
and
das
xor
rcrb
xchg
sbb
and
lret
inc
adc
push
stos
sub
stc
dec
push
addr16
aas
add
cwtl
sub
movsb
add
inc
fwait
xlat
jmp
inc
and
push
and
dec
scas
out
mov
movsl
out
cltd
add
lods
xor
pop
clc
cwtl
jmp
repz
and
shrl
push
popa
mov
sub
mov
xchg
mov
and
aas
outsb
or
xor
cld
pop
repz
gs
push
cltd
ja
ret
or
test
sub
rolb
pusha
xchg
repnz
lret
adc
xchg
dec
xlat
sbb
cmp
cmp
add
jmp
loop
and
sub
out
mov
cmp
mov
inc
std
cmc
das
jns
mov
sbb
lea
jg
pop
mov
bound
cmp
push
loope
mov
daa
mov
outsl
lods
out
iret
jnp
ss
out
fndisi(8087
popf
icebp
mov
imul
jbe
push
or
fs
bound
cs
loopne,pt
jbe
in
sbb
cltd
or
outsl
rolb
and
add
sub
fisttps
mov
sub
out
sarb
popf
or
lret
mov
or
jg
cwtl
movsl
lcall
lods
cmpsb
mov
pop
mov
pop
lock
shlb
fdivp
pop
pushf
scas
xor
mov
in
add
push
sub
adcb
pop
push
xchg
jle
in
scas
jne
popf
jae
scas
hlt
test
push
scas
stos
mov
inc
cmp
les
xor
roll
push
mov
in
add
movsb
push
repz
and
adc
fwait
ja
js
adc
aaa
jp
mov
call
sub
jbe
xor
pop
push
repnz
inc
int
adcl
subl
mov
jb
out
and
lds
into
pop
pop
sub
sarl
addr16
mov
mov
outsl
pop
jb
push
fimull
push
jecxz
mov
fcom
push
mov
pusha
dec
out
xor
add
xor
mov
jle
mov
pop
cmp
clc
inc
cmp
int
test
xor
and
mov
in
adc
sbb
into
es
jmp
pushf
or
pop
sub
arpl
out
repz
or
dec
xchg
xchg
or
pusha
or
aad
pop
inc
lods
out
jecxz
dec
int3
add
inc
jge
inc
pop
xor
jl
lret
cld
in
or
negb
mov
repnz
push
leave
pop
adc
mov
fsubl
sub
push
movsl
frstor
test
mov
push
mov
jecxz,pt
cmp
movsb
xor
cmpb
fs
dec
or
or
sbb
push
push
sub
call
mov
pushf
lret
dec
inc
hlt
movsl
xor
aaa
or
fmul
cmpsb
lock
cmpsl
dec
repnz
xchg
cmp
mov
dec
cs
push
mov
push
aad
lds
push
cmp
inc
hlt
outsb
cmp
daa
inc
mov
mov
faddl
lds
inc
cli
mov
int
into
adc
sub
dec
adc
lahf
jae
in
call
mov
dec
pusha
fstl
cmp
xchg
inc
or
sbb
cmc
out
xor
rcrl
pop
xor
xorl
xor
lods
push
je
sub
int3
dec
repnz
push
xor
mov
lahf
or
mov
sub
or
push
pop
jae
stos
in
scas
and
sti
push
jmp
or
mov
inc
aad
and
mov
jmp
leave
xchg
mov
call
xorl
push
fldenv
fwait
mov
out
lods
in
and
lods
push
int3
fs
mov
outsb
jle
js
or
ja
mov
hlt
push
sub
and
shlb
sub
add
imul
sbb
xor
outsl
aam
jmp
or
cmc
push
or
cmp
fldl
pop
cmpsb
int3
push
sbb
out
js
dec
fstp
push
movsl
xor
mov
dec
jg
das
xchg
aaa
sbb
or
scas
xchg
sbb
sbb
pop
jp
iret
es
addb
inc
jg
insb
or
xchg
jns
pushf
das
cmp
popa
pop
sarl
lcall
adc
push
push
push
adc
popl
xor
sub
sub
push
lcall
icebp
cmp
mov
mov
stos
adc
lods
test
jbe
aad
or
imul
sub
sbb
jl
call
push
sahf
inc
xchg
mov
xor
xor
fsubs
cmp
iret
dec
push
jp
cmpsb
mov
idivl
std
aas
loop
out
xchg
das
gs
push
sbb
xor
movsl
ss
call
mov
fisubs
push
pop
scas
lret
sub
inc
mov
negl
jmp
jb
push
dec
test
or
inc
fidivrs
push
or
loope
inc
jo
dec
test
sub
lock
rolb
arpl
out
negb
xor
shrb
add
sub
lret
mov
sar
inc
push
scas
outsl
jns
mov
sbb
sub
jbe
out
mov
aad
inc
push
loope
repz
mov
cmp
rorl
int3
les
mov
popa
int3
pop
push
cmc
cmp
pop
xor
jl
xchg
stc
cmp
shrl
lea
popl
add
mov
out
jne
mov
mov
mov
data16
or
enter
mov
pop
jo
push
cmp
jae
or
mov
je
inc
jbe
mov
cmpsb
jb
mov
add
je
call
lea
add
out
bound
cmc
xchg
xchg
lock
xlat
testl
loopne
pop
icebp
xorl
jae
stos
pop
gs
jl
pop
and
dec
rcl
ret
add
push
leave
mov
mov
stos
stc
les
mov
enter
mov
sti
push
xchg
lods
test
adc
mov
leave
push
shlb
test
pop
mov
and
aad
rolb
add
test
or
mov
aad
dec
push
sub
lret
ljmp
inc
stos
dec
mov
imul
cmp
cmp
data16
stos
fcomps
inc
or
pusha
fdivrs
lret
aam
bound
inc
ret
insl
xor
cmpb
dec
aam
lret
jmp
mov
imull
push
fstps
mov
and
mov
rol
adc
gs
lret
pop
out
repz
clc
mov
or
dec
sub
jp
jne
inc
mov
pop
sub
push
sub
xor
mov
xor
out
in
xchg
lods
and
push
daa
xchg
sub
push
dec
push
jne
dec
mov
cmpsb
test
sbb
xchg
repnz
push
out
jmp
add
inc
lods
inc
xor
ret
and
xlat
xchg
mov
fcomip
or
and
inc
xchg
sbb
int
aam
fwait
hlt
add
push
add
and
or
xchg
or
lcall
ljmp
bound
popf
inc
jle
pusha
shrb
or
inc
xchg
add
data16
cmp
adc
mov
cvtps2pd
cmp
inc
fs
jle
adc
std
or
push
xor
adc
and
cmp
jge
pushf
filds
and
pusha
lret
sar
rcll
jbe
push
sbb
iret
cmp
mov
or
call
addr16
sbb
mov
jae
lea
cmp
pop
mov
xchg
js
loopne
jl
mov
mov
adc
push
test
mov
push
pop
pusha
xchg
cmpsl
daa
sub
xchg
xor
loope
stos
loope
push
dec
bound
es
jb
mov
and
mov
pop
stc
cmp
inc
decl
xorb
pop
adc
mov
mov
mov
mov
xor
aam
call
into
jae
jae
aad
jl
pop
push
push
push
or
cmp
jge
pop
pusha
outsl
xchg
adc
sbb
sbb
mov
fildl
lock
jl
jns
pushf
cmp
test
lock
mov
jnp
pop
movsl
pushf
clc
fnsave
mov
cmp
aas
rolb
push
pop
fdivs
pop
stos
lea
dec
in
js
mov
imull
js
ficomps
jns
inc
mov
jmp
or
xchg
mov
mov
xor
pop
xorb
int
fs
push
xor
insb
jmp
add
int3
cmc
sbb
push
pop
repz
insb
dec
cld
push
cmp
rclb
xchg
cli
pop
xlat
je
ret
lcall
xchg
mov
jb
loope
sti
out
aam
mov
inc
imul
mov
xor
js
mov
dec
inc
lahf
les
xchg
jne
bound
nop
mov
lret
sbb
popl
in
std
test
mov
sub
js
js
loopne
and
mov
and
imulb
into
mov
cmp
mov
popf
ja
call
ljmp
repnz
js
mov
cltd
lock
aam
dec
add
test
lea
jmp
xor
push
pop
pop
dec
xchg
xlat
fdivl
jg
stos
rcrl
add
daa
lods
cmp
jae
push
jecxz
xchg
clc
xchg
ja
icebp
adc
iret
imul
stos
pushf
rorl
mov
or
or
loopne
jmp
inc
push
loope
dec
outsb
fwait
clc
xor
mov
int
fmull
cmp
scas
pusha
inc
and
and
xchg
pop
scas
jge
push
xor
fldcw
out
mov
out
gs
inc
jnp
arpl
or
and
push
arpl
mov
mov
sbb
sarl
adc
loope
insl
sub
add
pop
cmc
movsl
adcb
adc
mov
test
cmp
ret
sub
pop
sti
cmp
jne
dec
pop
mov
mov
mov
adc
imul
gs
sbbb
or
mov
mov
clc
inc
stc
hlt
pop
sbb
cmp
sub
mov
in
arpl
subl
pop
pop
mov
enter
rclb
rol
rcr
pop
out
dec
lods
inc
add
or
leave
pusha
and
imul
pop
cmc
int3
xchg
out
sahf
sub
clc
xchg
xor
dec
xchg
or
enter
add
mov
cmpsb
dec
and
jmp
or
mov
xchg
jl
fidivl
jno
inc
imul
pop
push
fwait
pop
pop
int3
push
xor
fdivs
push
fmuls
push
les
repz
xlat
stc
std
jne
mov
mov
cmp
std
clc
flds
mov
mov
out
das
push
push
mov
push
and
xchg
cmpsl
adc
and
mov
cs
in
scas
inc
fbstp
sbb
mov
mov
dec
push
and
in
cmp
mov
ret
nop
adc
dec
push
ds
lret
add
int
xchg
je
sbbb
and
jp
movsl
push
ror
and
pop
int
xchg
cmp
popf
scas
shrb
test
pop
lods
push
sahf
sbb
and
lock
push
cmp
xchg
insl
dec
jnp
adc
nop
int3
daa
inc
lock
mov
dec
xchg
pop
ljmp
mov
mov
ror
push
sub
jp
shll
mov
jmp
inc
push
xcrypt-ofb
cmpsl
in
jnp
ficoms
cld
arpl
push
ljmpw
repnz
or
xchg
sub
mov
ret
test
mov
add
shl
xchg
or
rcrb
mov
orb
push
setns
adc
dec
mov
sbb
stos
imul
testb
pop
mov
sbb
inc
mov
not
mov
ja
pushf
outsl
adc
or
jmp
popa
flds
insl
add
push
insl
cli
pop
xor
lea
adc
imul
adc
add
and
push
jns
ljmp
jg
enter
rclb
in
enter
js
mov
in
loopne
sbb
dec
adcl
dec
mov
push
and
les
pop
dec
adc
int3
mov
xlat
add
mov
xor
and
sbb
jge
dec
add
push
std
repnz
mov
lock
aad
insl
jle
pushf
add
imul
mov
push
mov
jmp
scas
fsubrs
inc
movsl
dec
ret
and
jge
repnz
in
imul
jno
adc
mov
int3
cltd
je
dec
mov
xchg
pop
sbb
leave
fcmovnu
pop
jbe
push
push
push
pusha
jmp
jno
outsl
js
or
jg
adc
pop
push
mov
dec
sub
pop
adc
sbb
int
jl
cld
sbb
jmp
sahf
pop
ret
mov
cmp
or
jnp
and
psraw
sub
incb
inc
imul
xor
lcall
pop
pop
xchg
add
roll
xor
push
lock
out
mov
jp
dec
in
dec
adc
popf
xchg
int
stc
fs
enter
pop
imul
push
stos
add
int
xchg
test
stos
dec
dec
push
stos
jp
ds
push
test
pop
js
in
mov
mov
subb
ret
push
dec
xchg
cmpsl
stos
shlb
outsl
lea
sbb
cmc
stos
lock
bound
push
mov
jbe
adc
popf
xor
jg
gs
rcr
outsb
insb
frstor
ret
inc
jo
mov
mov
xchg
nop
xchg
push
pop
xlat
loopne
xchg
xchg
imull
sbb
dec
cli
pop
shlb
dec
int3
lcall
leave
mov
and
scas
xchg
or
xchg
jnp
iret
pop
cltd
loope
mov
out
push
fdivs
lea
aam
push
pop
dec
xchg
xchg
subl
cmp
push
imul
shr
add
monitor
scas
mov
and
andb
outsl
mov
jmp
push
push
ja
pop
mov
cmp
loopne
adc
cmp
xlat
or
and
cmp
jae
push
loope
loop
adc
push
daa
loopne
pop
push
jge
outsl
pop
cmc
stc
cmp
fwait
ret
push
jg
fisubs
sahf
ds
dec
cs
fistl
insb
or
inc
fsubr
loop
nopl
xlat
loopne
push
push
xlat
xchg
outsl
xchg
xchg
aas
and
aas
outsl
xchg
jle
lods
jns
add
xor
rolb
pusha
mov
cmc
push
push
mov
repnz
jl
mov
rcrb
sbb
fldl
and
dec
lods
cld
and
and
jbe
imul
add
jnp
push
repz
adc
lods
shrb
mov
push
jo
cltd
mov
pop
enter
inc
xlat
dec
xor
fs
sarl
test
or
jg
dec
outsl
or
add
mov
fxam
sbb
popf
call
lcall
bound
jbe
jae
fs
inc
dec
nop
push
int3
push
test
cmp
fisttpl
call
loope
arpl
pop
stos
adc
mov
lret
jne
xor
les
lock
sbb
rcl
popf
inc
aam
adc
cmp
lods
out
push
push
or
outsl
add
fsts
sub
xchg
js
bound
js
imul
sub
leave
lds
out
test
jne
xlat
aas
xor
jo
orb
cmp
das
cmp
fcmovnu
mov
cmpsb
fimuls
mov
push
xor
cmp
lcall
adc
lret
sbb
jmp
mov
jge
cmp
gs
das
xor
push
or
pop
scas
sbb
push
js
push
cmp
sbb
dec
popf
cmpsl
fwait
cmpsl
pop
sub
sbb
or
shrb
cmp
xchg
shlb
mov
or
add
rcll
scas
inc
jb
bound
mov
cs
push
add
cmp
ret
jl
xlat
insb
loope
pop
hlt
pop
cs
test
sub
or
cmp
adcb
xlat
jne
mov
inc
or
sub
sbb
mov
int
dec
push
dec
test
pop
cmc
stos
sbbb
clc
popl
pop
out
lds
mov
add
cltd
xor
cmp
xor
sub
lods
aaa
xchg
jbe
call
add
jno
fcmovnb
and
aam
push
mov
lcall
pop
or
repnz
pop
fsts
inc
adc
jno
cmp
enter
idivb
mov
test
sbb
cwtl
mov
cmp
xor
inc
bound
cmp
pop
jne
fisubl
pop
push
shll
ds
add
push
mov
xchg
ja
dec
mov
inc
lea
nop
aas
sbb
insb
pusha
or
gs
xchg
idiv
pop
xchg
aaa
std
mov
mov
inc
cmpsl
les
xor
dec
and
iret
rcrb
mov
neg
mov
int
std
mov
add
arpl
fdivl
mov
add
fidivl
sti
push
ds
iret
mov
xchg
es
aaa
out
sti
sbb
fdivrs
mov
mov
push
inc
push
lret
mov
je
add
adc
pop
mov
mov
xor
mov
into
lods
sbb
out
aam
das
cmc
sahf
mov
lar
cmpsb
in
and
push
mov
cmpb
icebp
push
lret
dec
jns
aas
dec
and
xchg
pop
ret
add
sub
push
and
loope
sub
mov
scas
cmc
repnz
fnstsw
mov
std
decb
or
sbb
fldt
aam
fpatan
fdivl
dec
out
icebp
sub
cmp
cmp
inc
adc
insb
es
ret
icebp
stc
into
das
xor
je
addl
mov
and
inc
push
sub
jo
pop
mulb
aas
rorb
inc
clc
divl
leave
loop
jge
mov
lahf
int
mov
xchg
adc
out
or
xchg
lock
popa
mov
mov
xlat
pop
fidivl
xchg
enter
inc
sub
dec
jp
adc
cmp
shrl
add
jle
popf
mov
repnz
sub
inc
jns
push
shl
iret
sub
xor
les
outsb
out
pushf
dec
popa
mov
dec
dec
jp
aam
into
scas
pushf
shlb
pop
cmpsl
repz
adc
adc
xor
cltd
lcall
mov
movsb
inc
outsl
or
shlb
dec
lds
and
shrb
pop
stc
push
orb
xor
ljmp
fldl
mov
ja
xchg
das
xlat
aaa
inc
sahf
pop
mov
mov
push
rclb
pop
fdivrs
lea
daa
jmp
or
sub
mov
sahf
inc
lret
shl
outsl
xchg
shrl
lret
fnsave
and
ret
sbb
test
xorl
pop
jmp
jnp
mov
test
stc
sti
test
mov
stos
dec
dec
iret
cmp
testl
rcll
insb
mov
or
mov
scas
les
adc
shll
mov
addl
xor
xchg
cmp
push
pop
js
push
bnd
push
insl
lods
insl
or
mov
in
int3
out
movsb
xchg
lcall
and
jecxz
fwait
mov
iret
mov
cmp
pop
push
mov
lds
jp
les
add
test
dec
push
jg
test
int
scas
xchg
das
insl
xor
insb
arpl
pop
test
insl
xor
xchg
mov
imul
mov
or
and
cmp
loopne
loope
scas
ljmp
les
fs
mov
leave
pusha
popa
push
push
mov
fidivl
aad
push
xor
insb
pop
imul
decl
in
js
pop
mov
mov
and
cld
mov
int3
ss
lcall
mov
cs
shl
rorl
std
loopne
or
insb
xor
loopne
sti
imul
add
sbb
loope
jnp
lcall
out
out
ds
ss
sub
mov
cmc
scas
inc
js
in
into
push
dec
popf
sbb
sub
pop
fcmovne
adc
ss
mov
sbb
sub
push
cld
nop
orb
movsl
sub
mov
cwtl
mov
cmpsl
ja
cltd
aas
pop
out
cmp
pop
add
movsb
and
out
movsb
ja
mov
xor
sahf
rorl
jnp
push
cwtl
mov
lods
les
adc
imul
aaa
mov
in
lcall
shll
repnz
sti
mov
cmp
clc
xorb
push
int
push
das
or
add
cmpsb
int
inc
mov
je
mov
xor
cmp
jo
pop
sbb
lcall
sub
xchg
sub
inc
jo
pop
xchg
shll
aad
and
pop
or
sbb
data16
in
sti
mov
test
inc
popf
sub
pusha
addr16
adc
scas
addr16
mov
pop
dec
or
dec
push
scas
dec
pop
sbb
inc
lock
imul
std
jmp
lret
scas
jae
imul
out
lods
ljmp
xor
cmp
push
fs
sti
mov
ret
cwtl
jmp
lahf
mov
xchg
pushf
shl
iret
push
arpl
sbb
sub
and
jecxz
jo
mov
inc
mov
fmulp
add
mov
insl
jmp
jg
xor
xor
xor
pop
pop
jne
xlat
insb
xlat
aas
inc
shll
ret
movsl
fisubl
mov
mov
int3
pop
out
jo
movb
lret
ret
sbb
sub
movsb
bnd
cmp
fisttpl
aas
pusha
xchg
mov
test
movsb
lock
and
adcl
sub
stos
xchg
test
adc
dec
mov
sbb
test
lea
mov
insl
jge
sbb
mov
xchg
daa
or
out
es
mov
jecxz
adc
sahf
aad
xlat
subb
lret
jl
loope
cmp
jge
pop
jo
aam
dec
jbe
add
xchg
push
test
insl
inc
lods
jnp
and
jb
ja
int
jnp
cli
or
frstor
in
and
shll
lret
cmovo
xor
icebp
insl
lds
sbb
lea
inc
aad
pop
aaa
out
lea
mov
cmpsl
sub
ret
inc
add
and
push
mov
and
or
stc
push
xor
xchg
xchg
push
imul
xchg
and
das
mov
jmp
fcomp
fists
rorl
cli
mov
pop
out
icebp
out
and
dec
jae
inc
cmpsl
lret
mov
jmp
pop
shll
adc
jns
arpl
outsb
dec
hlt
inc
nop
pop
cmp
data16
cmp
outsl
fdivl
mov
inc
pop
dec
sbb
call
je
jp
jae
stos
inc
pop
repnz
out
jmp
cmpsb
aam
pop
data16
mov
mov
test
sbb
cmp
shl
int
adc
stos
mov
xor
xchg
jmp
pop
pushw
sbb
repnz
cmp
je
inc
cmpsb
push
add
add
mov
sbbb
xor
mov
push
addr16
cmp
pop
cmc
rorl
fnstsw
cltd
cmp
pop
or
cli
push
call
daa
out
insl
xor
pop
mov
mov
ss
cltd
sub
push
popf
ds
mov
adc
js
xchg
push
xchg
mov
xchg
and
dec
pop
mov
cs
or
xor
ffree
push
mov
jo
mov
jae
push
sbb
mov
and
sub
ljmp
fidivl
jle
outsl
mov
ja
push
jmp
aas
add
adc
jnp
add
dec
mov
and
in
mov
repz
insl
les
push
jp
lock
adc
mov
push
or
jno
popa
mov
sbb
pop
test
addb
cwtl
jae
popf
fwait
aaa
cmpsl
adc
or
dec
nop
outsl
push
aaa
mov
mov
dec
push
mov
xor
fstpt
addr16
mov
inc
mov
and
jecxz
out
js
push
lods
xchg
push
or
push
or
fcomps
mov
sub
lock
outsb
xor
adc
popa
dec
ficomps
pop
dec
push
or
rorb
push
cmp
sbb
inc
cli
sbb
imul
xlat
cs
test
adc
mov
mov
xlat
insl
fbstp
cmpsb
pop
sub
lock
mov
pop
cmpsl
out
popa
stc
dec
jo
and
xor
rol
mov
js
cmp
xchg
jg
jnp
sub
nop
cli
jae
mov
adcl
push
stos
sbb
cmp
sub
pop
out
push
out
jg
or
lcall
pop
inc
cmpsb
pop
adcl
lret
loop
inc
add
test
mov
xchg
insb
pop
sbb
jmp
test
ror
ds
dec
and
sbb
lea
std
lret
lret
in
int3
ljmp
inc
sarl
adc
jne
mov
inc
arpl
fildll
in
xor
cmpsb
dec
jg
xor
inc
jb
sahf
clc
out
stos
mov
dec
dec
mov
adcb
pop
scas
mov
add
popf
inc
lods
add
sti
mov
xchg
movsb
loope
dec
out
shrl
and
rcrb
stos
mov
dec
aas
rclb
jne
add
mov
arpl
sbb
xor
sub
mov
ljmp
mov
mov
dec
add
insl
mov
into
add
addr16
push
lods
pop
pop
xchg
add
sbb
xor
or
cs
xor
dec
dec
sbbl
scas
cwtl
mov
or
cmp
cmpl
dec
imul
movsb
sub
rcll
lock
sub
push
sbb
pop
cmp
mov
push
pusha
neg
mov
adc
xchg
dec
mov
jno
cwtl
lahf
push
in
shl
jnp
cmc
jne
pusha
cmc
mov
aam
pop
inc
adc
xor
mov
fcompl
lock
repnz
movsl
pop
push
mov
int
sub
dec
push
jl
jge
aaa
aad
xlat
ss
push
xchg
jns
inc
lock
movsl
mov
arpl
mov
mov
testl
aam
adc
pop
daa
mov
lods
and
sub
mov
negb
xor
test
push
dec
insl
or
lret
sbb
jmp
in
aam
add
jp
pop
js
cwtl
loope
vpsubusb
call
in
ds
shr
mov
js
clc
mov
cmpsl
cmpb
loope
or
mov
push
pushl
aas
loop
push
mov
pop
aam
scas
mov
xor
int
divb
push
andl
xchg
jle
scas
loopne
xchg
xor
lcall
sub
and
test
adc
xchg
xor
mov
inc
ret
or
sub
test
mov
cmp
incl
xchg
sub
push
push
pop
enter
jecxz
mov
adc
stos
sub
pop
inc
cltd
pop
pop
and
dec
cmpsb
cmc
adc
pop
or
xchg
sub
xchg
dec
lret
cmp
mov
jne
popa
mov
cmp
xor
cli
test
ss
mov
in
les
pop
add
pop
jb
jp
push
pushf
inc
iret
jbe
stc
mov
scas
adcb
push
sbb
cld
jbe
dec
insb
sahf
ja
cmp
mov
mov
loope
movsb
stos
push
dec
xchg
pop
scas
std
pop
out
iret
cmc
mov
lret
inc
inc
or
add
fstps
lahf
mov
insb
jmp
mov
xchg
inc
lods
testl
mov
mov
dec
repnz
es
and
pop
scas
lcall
scas
mov
push
xchg
xchg
xor
lods
pop
je
lds
mov
orl
mov
mov
adc
xchg
cmp
aas
or
ss
hlt
add
adc
ret
enter
ss
mull
jo
pushf
mov
ja
fistpl
ds
arpl
push
testb
ja
sbb
imul
andl
clc
movsb
mov
arpl
push
fstps
into
jb
cmpsb
mov
lds
icebp
sub
xchg
or
and
or
fcoms
xlat
aaa
sbb
pop
sbb
mov
mov
pusha
cwtl
xor
push
fstl
test
fucomi
adc
stos
mov
popf
negl
jnp
mov
rclb
fidivl
out
sub
adc
mov
pop
pop
xchg
int3
and
fldlg2
sbb
pushw
sbb
fisubrl
adc
and
rol
dec
lahf
lahf
dec
pop
das
inc
shl
xorb
subl
xchg
mov
lret
jns
icebp
push
hlt
into
dec
outsl
aad
jb
xchg
daa
mov
inc
push
fwait
rep
lahf
bound
fwait
lds
mov
push
mov
addr16
filds
adc
add
div
fadds
xchg
sub
cli
roll
ret
jl
adc
dec
data16
or
mov
lret
imul
pop
jns
out
push
hlt
mov
cmp
jmp
imul
push
push
cmp
sbb
xchg
jmp
jp
mov
and
jmp
or
xchg
pop
push
push
cmp
pop
aad
adc
fnstcw
out
mov
pop
cmpsb
ficompl
testl
arpl
in
mov
aas
in
pop
jo
lock
loopne
jo
fnstcw
adc
fmuls
imul
arpl
pusha
pop
jnp
jecxz
divl
fisttpll
adc
out
push
shl
pushf
and
fadd
mov
mov
jge
cwtl
imul
cld
and
std
orb
pushf
or
stos
pusha
mov
loope
or
xlat
bound
js
push
lods
pop
js
mov
mov
call
daa
inc
popf
ja
add
ds
bnd
in
add
rcll
mov
out
fimuls
out
inc
mov
dec
xor
in
or
and
add
sub
out
addr16
inc
pop
jae
test
call
xlat
xor
push
sub
popf
mov
ljmp
mov
xchg
stos
out
inc
scas
out
dec
jecxz
mov
xchg
fs
sbb
stos
lret
push
adc
xlat
imul
mov
mov
pop
inc
movsl
inc
cmpsl
cmc
xchg
dec
inc
sahf
mov
ljmp
ret
pusha
rclb
cmp
sub
js
add
in
es
imul
insb
insb
xchg
pop
dec
sub
into
sbb
inc
das
inc
data16
out
lcall
or
add
call
inc
addr16
sub
mov
imul
lds
mov
stos
jne
dec
push
push
scas
jo
pop
xlat
arpl
das
scas
dec
xorl
push
cld
inc
sbb
sub
into
jo
jo
pusha
orb
xor
add
aam
lea
repnz
ja
stos
lret
sbb
jp
push
mov
mov
inc
and
xor
imul
adc
xchg
cld
cmp
js
gs
mov
jne
fmul
mov
insl
xchg
jae
pop
lahf
inc
dec
xor
or
psubd
ror
dec
iret
enter
imul
cmp
or
push
shr
sub
loopne
ret
sbb
rcll
pushf
xor
mov
cld
imul
arpl
pop
shrl
inc
bound
lahf
mov
je
repnz
sbb
rcrb
inc
out
leave
dec
mov
adc
sub
dec
jl
stos
filds
cli
xor
or
mov
movsb
pop
pop
cmpsb
sub
scas
int
pop
insl
sbbl
shll
or
mov
cmpb
or
fisubs
push
add
fistps
shll
imul
int3
mov
jae
jecxz
loop
sti
pop
adc
mull
xchg
popf
or
insb
in
jns
mov
movsb
xor
xchg
mov
xor
lods
push
shr
xchg
adc
addr16
bound
xchg
out
sub
jg
push
dec
xor
fsubp
add
sar
enter
xchg
loop
add
fdivrl
imul
je
or
out
mov
inc
push
nop
jbe
insb
and
xchg
mov
rcrl
enter
and
sub
push
andl
clc
shr
and
lcall
inc
sahf
rcll
mov
popf
jg
xchg
jns
mov
and
xchg
sbb
mov
pop
mov
add
jno
push
ret
movsb
mov
xor
nop
and
fwait
push
xor
bound
rolb
ljmp
rorb
fdivr
dec
or
sub
in
inc
addr16
icebp
lods
inc
jp
push
xchg
pushf
arpl
push
mov
cmp
popf
sbb
lea
push
repz
adc
out
jmp
jecxz
jmp
cs
sbb
and
out
loope
fucomip
and
xchg
jns
pop
les
mov
gs
mov
adc
add
pop
sbb
ss
or
out
jge
rcll
stc
adc
inc
fildl
push
inc
mov
out
mov
and
cltd
mov
jb
sbb
mov
orb
sbb
cmp
aad
call
add
xorb
pop
cmp
lret
or
or
xchg
mov
and
dec
add
aas
fimull
adc
repz
lds
push
je
adc
cltd
xchg
lcall
fsubrs
push
test
mov
mov
sarl
outsl
adc
jmp
call
sbb
adc
std
inc
mov
or
cmp
inc
rcll
movsb
xchg
mov
jl
int3
jecxz
in
int
adc
rcrb
bound
jg
jp
dec
sbb
stc
lcall
sub
rclb
xchg
shrb
adc
repz
fs
fistpl
inc
clc
pushf
jl
addr16
push
arpl
fbstp
xorl
lcall
ret
pushf
sub
cltd
repnz
stc
outsb
xor
mov
cmpsb
pop
popw
sbb
movsl
mov
leave
es
pushf
ljmp
mov
fidivl
cmp
mov
nop
cmp
setne
dec
sub
rcrl
push
inc
pop
loopne
dec
das
sub
mov
and
jae
jecxz
sub
push
mov
jo
fcompl
sub
arpl
lea
idivl
pushf
in
jmp
setno
mov
push
in
lods
sbb
mov
mov
pop
stos
pusha
jmp
mov
sub
xchg
pop
mov
das
in
aad
pop
sub
pop
cwtl
xor
dec
xchg
std
popf
ljmp
cli
dec
push
mov
or
rcll
pop
cmc
loop
mov
or
pop
mov
das
xor
lds
aam
xor
push
hlt
push
outsl
lret
mov
iret
sbb
cli
icebp
and
xor
dec
stc
inc
push
push
dec
add
cmp
dec
xor
mov
dec
dec
je
stos
lahf
push
test
repnz
pop
mov
sbb
loope
test
xchg
outsb
hlt
int3
mov
call
std
cmp
and
mov
mov
dec
and
nop
cmpsb
inc
fisubs
push
clc
pop
loop
insb
push
imul
mov
mov
jp
sub
enter
push
pushf
popf
das
fsubl
lea
out
jns
pop
sbb
mov
gs
pop
clc
mov
jnp
inc
mov
jbe
clc
mov
sub
cs
xchg
das
loop
imul
sbb
rorl
inc
leave
mov
insl
aaa
and
and
mov
shlb
pop
push
or
orb
fdivrs
hlt
inc
pop
dec
test
xor
test
or
jae
popa
fs
xchg
daa
insb
std
push
xor
test
icebp
rcll
sarb
js
outsb
cmpsl
jae
arpl
pop
xchg
mov
cmp
push
fscale
adc
jo
push
insl
mov
xchg
lret
sbb
dec
dec
das
xchg
adc
std
cmp
iret
mov
sbb
ljmp
jb
xchg
cwtl
lcall
sub
data16
ret
sahf
fst
push
and
subl
fadd
dec
mov
pop
push
cmp
enter
add
or
jmp
arpl
loope
mov
in
mov
insb
jmp
cwtl
out
xchg
loope
mov
pushf
sub
sub
jmp
dec
add
inc
cmp
shl
cmp
push
fcoml
shl
inc
outsb
push
cmp
jnp
mov
std
pop
movsb
gs
inc
sti
adc
or
mov
sub
lods
cmpsb
mov
mov
inc
pop
mov
stos
push
mov
sub
mov
dec
push
scas
cld
pop
in
add
pop
cmpsb
jns
inc
xchg
icebp
mov
sub
mov
pop
xor
js
dec
out
xchg
pushf
ja
adc
orl
xor
xchg
test
mov
hlt
out
movl
out
mov
scas
loop
sbbb
imul
push
inc
mov
lret
rorb
pop
lret
aas
xor
jge
cmp
and
mov
sub
sub
inc
pop
mov
mov
loopne
push
adc
icebp
sahf
mov
xlat
andb
dec
mov
cmp
sarl
ja
fldl
test
dec
nop
lds
sbb
jmp
xor
shlb
push
adc
adc
dec
ljmp
out
loop
addr16
mov
out
adc
jmp
adc
mov
xor
push
test
jae
push
jmp
rcr
jnp
mov
dec
sbb
imul
mov
repnz
mov
repnz
mov
and
push
popf
xchg
pusha
ret
jb
sub
dec
fcmovne
out
mov
mov
or
dec
arpl
test
es
dec
mov
je
push
lea
push
aaa
pop
int3
or
jmp
aad
out
mov
mov
or
jns
test
std
sbb
sub
xor
jge
inc
mov
push
repz
mov
scas
push
cmpl
icebp
sub
iret
imul
xchg
mov
addr16
std
add
test
or
insl
pop
pop
iret
adc
pop
jo
add
xlat
frndint
mov
dec
cmp
jecxz
xchg
stc
adcl
jp
repnz
add
xchg
fwait
jne
fistpl
xchg
xchg
lods
sbb
and
push
mov
mov
push
mov
subl
stos
mov
add
insl
push
adc
in
xor
adc
mov
cli
xlat
pop
mov
sar
andb
jb
and
and
testb
lahf
fstpt
cmpsl
int3
insl
push
xchg
rcr
inc
push
mov
mov
ds
mov
jbe
mov
mov
cmp
pop
pushf
cltd
shll
ret
fildl
xor
sahf
push
push
popf
cmp
movsl
adc
cmp
jnp
cmp
mov
sbb
lods
xor
dec
push
popa
ret
sbb
xor
mov
jmp
inc
cmp
movsl
dec
add
or
in
test
scas
ret
out
mov
lock
inc
xor
jne
out
adc
sub
mov
mov
inc
dec
decl
adc
dec
das
pop
icebp
arpl
xor
xchg
fbstp
clc
outsb
sub
idivl
add
pop
push
lahf
sti
pop
int
addr16
dec
fidivs
mov
cmp
dec
cmp
imul
sub
loop
xor
cwtl
sarb
divl
cmp
sbb
mulb
xor
jmp
lods
les
inc
es
pop
negl
outsl
sub
and
sbb
fwait
bound
mov
sbb
data16
or
in
push
cmp
push
jns
test
sub
aam
inc
dec
push
fwait
sbb
push
int3
fdivr
andl
push
mov
sbb
sahf
iret
test
sbb
jno
ds
ret
adc
call
cmp
psubw
iret
mov
cmp
add
jmp
adc
out
adc
sub
fstps
mov
enter
mov
iret
daa
rclb
pop
jae
mov
pop
out
outsb
push
iret
add
stos
cmp
xchg
imul
shlb
js
pop
nop
sbb
in
mov
sub
jl
xlat
lock
or
jp
ficoml
shll
jp
cmp
jle
xor
jmp
aam
and
cli
lret
fsubp
ss
lock
adc
sbb
fadds
mov
xchg
sub
cs
lds
adc
adc
aaa
mov
jge
push
sbb
mov
test
arpl
mov
adc
push
jg
adc
mov
test
push
xchg
and
cmp
sbb
inc
ss
inc
mov
roll
imul
out
imul
out
mov
inc
jmp
and
mov
or
hlt
aaa
idivb
pop
mov
adc
stc
pop
sahf
sbb
inc
cmpsb
jp
inc
icebp
mov
jns
and
popf
insl
pop
sti
sub
mov
push
xchg
mov
cld
in
xor
or
mov
icebp
or
cmp
in
test
push
mov
repnz
ljmp
mov
inc
jo
pop
mov
mov
cmp
test
pop
jo
iret
pushf
sub
sbb
bound
loop
pop
lcall
add
sub
jno
sbb
lods
inc
mov
cmc
imulb
std
push
popf
sub
adc
push
jo
push
icebp
lahf
xchg
or
pop
xor
push
inc
addr16
hlt
popl
lock
orb
cld
cwtl
jle
dec
jnp
pushf
je
enter
pusha
mov
mov
xor
arpl
insb
dec
fwait
xchg
push
ds
mov
xchg
cmp
into
ja
stos
inc
sub
sub
movl
jnp
sbb
xchg
roll
mov
fimuls
shlb
fcomps
int3
inc
js
test
sti
xchg
js
sbb
mov
loop
repnz
xchg
andl
xlat
es
leave
or
inc
xchg
loopne
jmp
iret
std
lock
xor
add
mov
lods
xchg
jno
cmp
pop
sbb
push
push
test
in
inc
scas
int3
arpl
add
push
repnz
xlat
in
incl
in
jp
cmp
loop
jno
dec
adc
loopne
pop
push
xor
sbb
cmpsl
pop
inc
in
cmp
cmp
das
repz
fistl
bound
cli
pop
mov
xchg
inc
cmp
sti
fyl2xp1
into
cmc
mov
sbb
outsb
push
mov
gs
mov
mov
scas
pop
inc
or
aas
lea
mov
sub
xchg
jo
inc
ret
cmp
cld
cmp
loopne
xchg
daa
mov
jmp
adc
xchg
loop
in
repz
test
fiaddl
or
mov
lcall
outsl
mov
and
xorb
dec
mov
pop
jecxz
sahf
out
in
in
jle
jo
movsl
mov
push
out
lock
pop
xor
leave
cmp
or
mov
lods
jnp
lods
xchg
fwait
stos
stc
add
ss
and
les
testb
addl
dec
mov
adc
mov
cmc
je
movsb
add
js
adc
inc
jae
lret
and
cmpsb
cmpb
aas
pusha
inc
add
call
push
ljmp
mov
in
hlt
divl
pop
mov
loope
cmpsl
jnp
fnsave
inc
or
xchg
int3
cwtl
scas
in
lcall
xor
inc
jp
sub
xchg
jns
out
cmpsb
xor
mov
inc
or
cld
adc
insb
xchg
fisubl
ret
ficoml
stos
inc
sahf
loope
mov
leave
cli
test
scas
ja
cmp
ja
bound
sti
cli
loop
test
clc
repnz
lods
pop
xchg
jae
xchg
inc
xor
imul
cmp
inc
pop
insl
testb
adc
sub
ljmp
mov
lcall
or
scas
mov
adc
sahf
popf
add
push
dec
push
xor
popf
jmp
xor
mov
jge
pop
xorb
and
push
adc
xchg
mov
mov
test
mov
sub
push
cmp
mov
mov
and
jne
cmpsb
repz
mov
xchg
mov
sub
sub
mov
jb
pop
lret
push
cmp
inc
jecxz
xchg
mov
dec
or
arpl
push
lea
sub
stc
xor
sub
and
fisttpl
jp
jl
mov
xchg
hlt
push
stos
ljmp
sub
mov
inc
push
aas
inc
mov
loopne
push
repnz
out
inc
repnz
add
jo
das
lds
dec
inc
add
mov
mov
adc
test
outsb
sub
enter
lcall
lcall
jmp
fs
cmpl
dec
lods
rcrb
jmp
mov
push
sub
ds
mov
inc
sbb
sbb
add
sub
pop
xchg
ret
es
jg
or
daa
xchg
pop
jg
xor
int
or
mov
xor
sbb
fistl
jp
es
cmp
fcoml
pop
jo
loop
add
fistps
pop
xchg
dec
sbb
pop
in
daa
cmp
pop
jecxz
and
jl
fwait
pop
mov
iret
and
int3
or
or
arpl
mov
cmp
xchg
lcall
sub
in
imull
or
dec
dec
xchg
xor
push
lods
mov
aas
jecxz
xlat
xchg
fcomps
jg
shrb
inc
add
jp
xchg
jle
and
adc
mov
cli
adc
outsl
push
loop
mov
mov
ljmp
jl
in
loop
xor
sbb
pop
xchg
mov
je
sbb
cli
fnstcw
add
popf
cmp
xchg
leave
aam
fimuls
loop
dec
inc
push
and
xchg
icebp
push
test
sbb
mov
sbb
js
dec
in
loope
pusha
pop
flds
push
repz
cmp
lret
sub
jnp
mov
or
insl
cmp
xor
or
xlat
jbe
inc
dec
push
mov
inc
or
xor
mov
in
push
int3
pop
cli
fstps
loopne
jne
or
cmp
jecxz
adc
stos
sub
and
out
outsb
and
fsubr
xor
cwtl
nop
inc
mov
xlat
cvtps2pd
dec
mov
inc
repnz
mov
mov
cmpsl
outsl
int3
movsb
movsb
arpl
dec
xchg
int3
loopne
mov
call
daa
xchg
rclb
mov
lods
loop
insb
cmp
xchg
sbb
outsl
lahf
pop
insb
push
pop
neg
inc
inc
push
and
jge
push
sub
mov
add
xlat
sub
sbb
out
lds
mov
sbb
jl
xchg
sbb
es
xchg
inc
mov
pop
inc
in
scas
clc
scas
and
pop
shrl
push
dec
mov
sbb
inc
or
clc
mov
and
enter
jb
dec
je
jg
jbe
test
add
pop
fs
adc
mov
jbe
inc
and
ret
dec
imul
add
mov
mov
ror
loop
test
xchg
xchg
xor
js
addr16
mov
mov
jno
cmp
insb
push
add
shl
cmp
lods
psllw
int
add
fwait
or
mov
jnp
daa
ja
test
xchg
xor
fmuls
add
leave
rcl
cmp
insb
js
jle
add
jo
xchg
loope
push
scas
pop
sub
call
scas
daa
inc
adc
dec
pop
arpl
xchg
loopne
cmc
loopne
mov
jbe
int
jge
xlat
xlat
mov
sub
inc
enter
sub
or
push
stos
daa
insl
jno
sub
lcall
lret
jge
jbe
jecxz
ret
cld
and
sbb
in
ja
jg
cwtl
popf
jo
cmc
sahf
push
in
pop
sub
jno
fstpl
and
ljmp
mov
push
sbb
sbb
repnz
cli
frstor
sarb
arpl
mov
mov
and
sbb
stos
lds
inc
movsl
out
movsl
cmp
cmp
repz
stos
loop
push
lds
bound
adc
and
mov
mov
inc
int3
sti
mov
jns
sub
xor
push
js
aaa
xlat
inc
xlat
fcmove
repz
roll
cmp
xchg
add
hlt
push
inc
mov
out
push
lds
int
cmp
mov
nop
sti
decb
lock
jge
cmp
stos
daa
dec
inc
pop
sahf
scas
mov
push
rcrb
in
mov
adc
mov
int
aad
jge
jecxz
push
movsl
adc
stos
je
mov
nop
sbb
sbb
lds
add
testl
fmull
mov
and
stos
sub
stc
cli
push
mov
adc
jmp
rcrb
enter
repz
mov
adc
push
test
adc
cmpsl
xor
test
cmp
inc
sbb
mov
xor
mov
push
lods
in
mull
mov
stos
mov
xchg
rcrb
repz
mov
sub
push
pop
scas
cli
daa
xchg
data16
push
call
aam
jno
sub
and
push
movsl
inc
lahf
push
sbb
add
jo
mov
daa
hlt
push
lret
sbb
notl
mov
cmp
lods
fsubrp
jmp
pop
xchg
add
mov
jno
fsubrp
test
sbb
and
ss
mov
xor
shlb
and
and
or
rorl
fistpll
or
out
aas
dec
push
das
loopne
out
or
mov
inc
sbb
int
stos
inc
test
shll
adc
xchg
pop
sti
jecxz
push
sar
sub
push
add
jo,pt
push
rcrb
lret
lret
outsb
push
insb
pop
fcoms
dec
jge
ja
ljmp
sub
dec
sbb
adc
fxrstor
stc
adc
ret
push
pop
lret
dec
aas
inc
mov
or
insl
mov
pop
jecxz
test
jge
iret
mov
rcr
in
rcrl
mov
aas
push
inc
rcrl
or
inc
pop
mov
pop
lea
pop
je
add
mov
push
cld
aas
nop
push
cmpsl
mov
arpl
xor
lods
add
dec
pop
jbe
sbb
sub
dec
adc
jl
jecxz
fs
jo
or
mov
movsb
dec
and
inc
roll
jmp
aam
add
ret
cmp
sub
mov
xchg
push
pop
cld
iret
in
and
stos
je
mov
add
mov
fistpll
repnz
rcrl
imul
add
cmp
inc
mov
dec
cmp
mov
ds
cmpsb
sbb
xchg
push
dec
fninit
sub
jmp
test
xor
sarl
sbb
les
jge
push
enter
mov
shrb
lods
insl
sbb
push
andb
adc
jno
mov
lds
pop
pushf
jl
lcall
shrb
clc
jmp
push
inc
xor
icebp
in
rorb
sub
sbb
pop
cwtl
js
aas
fldt
insb
sbbl
fldt
or
push
insb
xchg
stos
sub
push
add
mov
popl
jb
add
push
sarb
imul
xchg
add
mov
nop
insl
cmpsl
js
nop
ja
out
lock
xchg
in
dec
icebp
out
mov
es
mov
jp
cli
out
shlb
insl
inc
dec
xchg
imul
sbb
mov
jae
cld
stos
sbb
inc
stos
loope
dec
in
sub
shlb
imul
pop
mov
mov
push
test
push
fildl
test
pop
inc
scas
mov
xor
push
or
lds
lock
dec
push
cmpb
movsb
rcrl
sub
or
sub
and
jle
aas
mov
jb
adc
sub
int3
fistpl
rorl
adcb
repnz
mov
stos
divb
or
rcr
ljmp
outsl
bound
out
loope
jo
dec
xchg
mov
mov
xchg
mov
sti
outsl
stos
mov
int
icebp
das
jo
jnp
adc
insl
mov
or
add
push
les
mov
fisubl
jle
cmp
sti
adc
mull
xchg
imul
inc
sbb
adc
adc
xor
push
mov
fwait
sbb
sahf
stos
stc
fwait
repnz
pushf
sbb
icebp
aas
or
fdivs
clc
out
das
bnd
pop
out
out
loop
mov
push
mov
jo
and
out
xor
inc
adc
shl
fistl
ds
js
aas
pop
or
out
xchg
aam
push
xlat
fsubl
xchg
cwtl
adc
and
pop
mov
outsb
cmp
daa
jne
daa
fbld
and
out
incb
sbb
jo
jo
in
jae
dec
mov
xchg
sbb
or
rorb
sbb
gs
mov
leave
into
movsl
adc
xor
xor
aam
pop
mov
repz
int3
pop
lahf
fidivs
pop
xorl
fcmovnbe
fistl
aaa
fcmovbe
mov
dec
test
mov
cld
inc
jbe
pop
shll
sbb
movsl
enter
lret
mov
fwait
mov
cmp
add
inc
outsb
arpl
push
in
mov
xchg
fistps
cs
shll
sbb
mov
jnp
add
mov
pop
outsl
daa
xchg
leave
out
jmp
inc
lcall
shrl
daa
fs
and
xlat
fldt
xorb
jne
test
inc
cmc
std
jb
fucomp
int3
jl
lods
jle
dec
nop
sub
js
or
addr16
mov
insl
iret
inc
xchg
inc
cltd
mov
aaa
mov
test
push
leave
ret
mov
hlt
mov
call
mov
out
mov
pop
bound
in
fwait
mov
sbb
add
fdivrs
fisubrs
stos
insl
inc
adc
aad
jno
cs
inc
mov
sbb
scas
jno
dec
frstor
decb
adc
lahf
sarl
and
idivl
jae
add
in
cmpsl
insb
or
test
inc
daa
enter
repnz
inc
dec
mov
lret
stos
cmp
testl
sub
sub
mov
pop
ret
inc
add
sbb
out
popf
arpl
jle
and
dec
lcall
or
mov
hlt
outsl
insl
jo
adc
ds
arpl
scas
in
mov
sbb
xor
in
sar
dec
or
enter
shlb
pop
push
mov
sub
jns
xor
movsl
xchg
mov
cmpsb
lret
pushf
lock
loopne
mov
and
and
push
push
xchg
sub
pop
adc
inc
mov
adc
dec
and
mov
pop
jmp
sbbl
addb
test
mov
out
ds
xor
mov
sub
sub
loop
adc
jl
je
jge
rorb
aaa
pop
std
fyl2xp1
les
sbbb
stos
or
je
adc
dec
push
mov
mov
scas
mov
ja
nop
icebp
cmp
daa
sahf
jne
sub
aas
scas
out
insl
jae
dec
mov
loope
scas
bound
ss
mov
into
cmpb
lods
or
and
subl
add
inc
and
movsl
pop
mov
mov
adc
out
mov
hlt
push
jne
aad
xchg
xchg
jno
dec
arpl
addr16
cmp
inc
mov
adc
in
sub
sbb
js
shll
pop
repnz
xor
xchg
or
cmp
inc
cmpb
sbb
lret
shlb
xchg
mov
or
out
mov
jno
pop
xorl
sti
test
mov
pop
and
adc
lret
adc
fadds
fstps
cmp
out
insl
mov
test
xchg
xchg
fwait
movsb
sub
les
test
les
fdivl
and
jp
xchg
dec
call
dec
stos
sbb
add
or
ret
cmpl
call
inc
inc
sarl
cwtl
adc
dec
cmc
mov
repnz
movsl
push
outsb
ret
aam
inc
in
fwait
cmp
add
aas
leave
popf
sbb
dec
and
dec
push
mov
mov
dec
pushf
push
cwtl
add
in
push
andl
frstor
jge
imul
decb
inc
push
xchg
faddp
loopne
mov
aaa
or
adc
ficoms
or
xchg
jge
jl
fucomp
cmp
dec
lds
push
cmp
inc
inc
xchg
and
push
stos
or
jge
adc
xlat
jbe
out
xor
loopne
pop
fsubrl
jbe
scas
xchg
fsubrl
mov
ret
dec
repnz
inc
xchg
aaa
ret
sub
ss
jecxz
mov
xor
mov
sbb
jge
jmp
jo
mov
in
pop
sub
fmull
mov
adc
push
js
xor
cli
sub
xchg
xchg
inc
push
aam
mov
push
xchg
or
pop
xor
add
push
dec
inc
and
jl
xchg
push
adc
cs
inc
adc
in
repz
mov
jmp
push
sbb
aas
xor
lock
xor
bound
fnstcw
pushf
pop
pop
inc
mov
or
js
push
lahf
sub
add
mov
push
inc
mov
add
xor
fisubl
jg
mov
inc
loop
and
xor
flds
dec
xchg
push
adc
dec
je
xor
outsb
mov
xchg
inc
push
jne
cld
cmp
inc
xchg
cmpsl
addr16
sbb
mov
pop
leave
push
xchg
push
xchg
scas
in
cmp
fisubrl
mov
mov
es
xchg
js
mov
cs
mov
cltd
and
rorl
jae
and
push
enter
enter
jbe
cmp
loopne
or
mov
bound
xor
cmpsl
pop
mov
inc
ret
aad
lahf
test
pop
pop
dec
add
mov
xor
cmp
xchg
mov
push
pushf
psllw
push
sahf
push
jecxz
jp
push
lret
call
int
bound
shl
leave
cmp
ret
jle
mov
jns
sbb
es
mov
push
sub
int
nop
inc
faddl
loop
bound
mov
fcoml
adc
leave
dec
loope
dec
bound
stc
jge
pop
mov
jmp
mov
nop
iret
mov
dec
ds
inc
insl
and
clts
mov
lret
or
cltd
daa
popf
test
fld
imul
out
aaa
insb
lock
xchg
pushf
popa
fidivrl
in
or
mov
xchg
fildll
jl
inc
jbe
jnp
pop
daa
xchg
cmc
negb
fldt
gs
xor
jnp
mov
add
inc
sub
push
sbb
pop
ret
aas
cmp
jne
mov
lret
nop
and
outsb
je
sbb
sub
xor
mov
jmp
jecxz
call
and
fiadds
push
pop
xchg
sbb
das
inc
stc
jnp
lods
das
pusha
repnz
nop
jle
mov
xor
in
call
test
mov
cmpsl
xor
ss
sbb
bound
fsub
or
jmp
xchg
movsl
out
out
sbb
lret
xchg
pop
and
adc
andb
or
cmpsb
ret
xchg
js
jge
jp
jbe
jg
jne
cmp
pop
jecxz
mov
pushf
nop
push
or
inc
cmpb
or
stos
test
pop
mov
hlt
and
and
hlt
std
idiv
pop
inc
push
outsl
inc
bound
mov
out
aas
jecxz
xor
xchg
cmp
insl
or
rcrb
xor
pushl
rcll
mov
aas
xor
das
fcmove
cmp
subb
xor
add
dec
sub
cmp
dec
jns
shrb
movsb
adc
mov
inc
data16
filds
pop
aad
push
push
std
popf
push
fnstcw
sub
test
dec
push
mov
cmp
arpl
aas
cltd
bound
mov
lock
fildll
out
push
aaa
test
add
jbe
ds
scas
in
mov
xchg
lods
lret
xor
setl
xchg
add
adc
xlat
mov
pop
mov
cmp
sub
aad
fdivrl
add
cmpsb
subl
jg
lds
out
cmp
cmp
pusha
sbb
push
mov
dec
ja
jmp
dec
mov
loope
mov
hlt
aaa
loope
mov
add
rorb
pop
es
mov
pop
dec
outsb
adc
aas
or
pop
outsb
cmp
push
push
xor
dec
test
out
test
fmuls
mov
lods
sub
lods
fwait
aam
dec
dec
ljmp
sti
sbb
and
jecxz
or
popf
cmp
pop
lods
dec
dec
test
jl
mov
adc
inc
mov
popf
pop
xchg
stc
iret
mov
xorl
add
imul
jp
mov
icebp
jbe
lret
or
and
jns
mov
adc
mov
nop
repnz
jg
cwtl
mov
jl,pn
pop
cmpsl
xchg
aas
or
lret
shll
mov
mov
into
sbb
stos
int3
fcoml
cmpl
cmp
addl
cld
iret
lahf
pop
imulb
ret
jp
jp
and
lret
divb
rorl
pop
pop
jp
leave
pop
mov
adc
adc
arpl
pop
and
cmp
ficoms
fsubrl
gs
aam
movl
test
push
test
push
xor
xor
lds
sbb
and
dec
shll
push
movsl
dec
icebp
dec
dec
fwait
test
popa
leave
mov
xchg
adc
or
jmp
push
mov
pushf
adc
aam
shll
outsl
xor
rclb
stos
leave
sub
lods
out
sub
inc
cmpsl
inc
adc
test
sahf
arpl
dec
sub
cmp
fisubrs
push
sub
adc
inc
mov
sbb
xchg
in
xor
sti
dec
icebp
orb
xchg
xchg
xchg
push
call
test
sahf
inc
outsl
adc
mov
aam
rcrb
and
addr16
pushf
inc
loopne
and
mov
pushf
push
push
adc
hlt
lret
inc
mov
or
or
and
jnp
and
mov
xor
ffree
xchg
push
sub
test
rcrb
lret
push
lcall
or
cwtl
cmp
mov
fidivrl
cmp
stc
push
sub
mov
insb
xchg
mov
add
mov
or
popa
stos
stos
jnp
dec
mov
push
dec
pop
mov
iret
lods
cmpsb
jg
fidivs
vmread
add
cmp
lock
shrb
addr16
loope
push
adc
nop
stc
pop
pop
dec
mov
mov
ret
popa
jnp
push
dec
popf
cwtl
mov
push
adc
adc
pop
shlb
mov
cmpsl
dec
jmp
js
mov
mov
pushf
imulb
xlat
int
sbb
push
push
ss
clc
add
add
mov
rclb
repnz
ds
or
ficoml
sub
sbb
scas
adc
icebp
test
adc
cs
test
jo
adc
adc
sbb
pop
iret
mov
inc
mov
xor
mov
fadds
je
stc
adc
outsb
insb
pop
jecxz
mov
int
cs
lds
push
push
cli
ja
scas
adc
cld
cmp
rclb
stc
pop
push
or
or
dec
mov
dec
sbb
and
adc
std
mov
add
arpl
mov
ja
lock
mov
sahf
int
xor
pop
fisubs
fcomps
jb
pop
xchg
xchg
pop
mov
lock
imul
dec
lcall
and
push
pop
pop
dec
push
aas
aam
and
dec
pop
pop
int3
mov
and
sbb
pop
jnp
leave
faddl
popl
mov
sahf
jnp
inc
mov
imul
mov
and
cmp
loope
inc
push
push
sub
mov
popa
mov
add
push
push
cmp
or
loopne
jno
enter
push
cmp
and
movsl
and
dec
in
or
in
mov
pop
cs
rolb
arpl
xchg
pop
sbb
xchg
push
mov
stc
push
sbb
cmp
add
fsubl
and
push
mov
inc
pusha
leave
sbb
es
cli
mov
ret
mov
dec
loop
int3
fistl
mov
jle
push
popf
daa
cs
popf
cmp
mov
cwtl
cli
nop
lods
imul
mov
adc
out
pop
push
lret
cmp
mov
sbb
mov
xchg
jecxz
mov
jne
fsubp
fsubrs
push
mov
jp
pop
pop
mov
jns
notb
stc
ret
dec
adc
es
ret
pusha
and
in
aam
fistpll
mov
rdtsc
dec
pop
icebp
js
mov
jbe
cli
outsb
movsb
cmp
mov
push
and
pop
mov
dec
push
pop
cmp
mov
sub
adc
lret
cs
cmp
hlt
out
fisttpll
jo
or
aad
andb
adc
sbb
popa
inc
enter
push
shrl
leave
std
notb
xorl
bound
shll
inc
dec
loop
mov
xchg
mov
jo
orl
jb
aam
fisttps
sub
hlt
jg
sbb
mov
add
dec
loopne
nop
aad
repz
or
jle
add
push
sti
xchg
or
push
or
in
push
push
cmp
movsl
jo
ret
xor
adc
add
pop
add
movsb
in
hlt
aaa
xchg
out
sbb
aaa
cmp
pop
xchg
outsb
push
lret
hlt
push
test
in
push
sbb
pop
sahf
mov
enter
add
inc
leave
push
test
sete
push
cmpsb
test
ret
mov
jmp
add
ret
push
cmpsb
sub
mull
jns
add
jae
mov
imul
add
in
dec
jge
ret
jl
aaa
and
jne
cmpsl
dec
call
dec
in
xchg
pop
test
les
mov
lret
and
shl
jno
stos
inc
enter
shll
inc
fcomps
jno
cmc
das
loope
lcall
pcmpgtd
mov
mov
pop
pop
fcom
sbb
stos
pop
jnp
jg
xchg
loope
jo
fldl
jnp
movsl
nop
nop
cltd
sbb
sbb
sub
gs
pop
arpl
sub
in
xlat
lret
ret
jbe
subl
js
push
sbbb
popf
scas
mov
arpl
testb
xchg
jle
frstor
mov
pop
jp
or
and
hlt
aad
and
fcmove
pusha
cltd
sbb
lcall
ret
pop
sub
adcb
sub
adc
lock
icebp
xchg
push
cmp
insl
inc
pop
test
dec
sahf
mov
adc
inc
sbbl
data16
mov
jnp
cmp
in
out
movsb
iret
adc
test
lret
ret
jnp
insl
xor
xor
scas
jne
out
cmpsl
movl
jns
dec
jbe
cmova
add
dec
comiss
push
push
daa
cmp
rcrl
add
pop
cmp
icebp
add
mov
or
popa
mov
cli
inc
fs
out
ss
adc
mov
aas
xchg
les
mov
mov
ret
mov
add
pop
mov
ja
push
adc
mov
mov
dec
sti
adc
push
push
rep
and
dec
xchg
lret
lret
lods
and
in
push
dec
stos
mov
rsqrtps
pop
ffreep
ret
shlb
add
cmp
mov
xor
out
add
jae
test
hlt
push
or
mov
inc
out
cltd
subb
sahf
inc
or
push
pop
cmp
mov
jecxz
div
inc
jne
mov
xchg
mov
push
mov
xor
icebp
push
fistps
inc
mov
add
add
cmp
adc
aas
cmc
lds
fistps
cmp
xor
and
adc
dec
je
adc
xchg
divb
xor
test
outsl
add
or
stos
mov
iret
test
stos
lret
xchg
hlt
pop
loop
cmc
adc
push
and
call
jmp
stc
aam
stc
jge
xor
shrl
pop
inc
rol
lea
gs
lret
insb
mov
sub
ljmp
inc
fldenv
lock
xor
test
mov
rcrb
jo
lock
inc
mov
jae
nop
shrb
and
or
fld
fs
adc
lret
inc
test
pusha
repz
push
adc
rcl
movsb
ljmp
and
mov
lret
cli
pusha
fcmovnbe
xor
sbb
or
hlt
leave
mov
push
jno
push
push
in
daa
lods
mov
sbb
outsb
lret
ret
pop
clc
inc
je
pop
shr
and
sub
pop
int3
dec
adc
fidivl
pop
cmp
int3
push
ficoml
std
ljmp
xchg
dec
add
sbb
adcl
cli
xchg
shl
xchg
sahf
xor
in
ret
and
or
popf
adc
sbb
push
dec
adc
jp
mov
pop
cmp
sbb
jge
push
movsb
data16
sbb
push
sbb
bswap
xor
jns
addr16
frstor
cmp
loop
int3
rcl
xor
inc
cmpsb
mov
inc
push
or
ret
shll
pop
popa
push
in
ficoml
mov
in
push
out
orl
push
fistpl
or
lock
insb
add
jg
js
fsubs
cmpsl
sbb
rorl
xor
enter
dec
inc
xor
sub
inc
movsl
outsl
andl
imul
dec
loope
fidivl
add
cwtl
jno
jmp
pop
icebp
stc
repnz
cmp
aad
aaa
lea
pop
xchg
popf
sti
lds
jge
lret
push
movsb
pusha
rcrl
stc
ss
loop
enter
adc
cmc
insl
icebp
xchg
xchg
cs
loope
imul
out
mov
lds
jb
divl
sub
mov
add
mov
inc
cmp
int
iret
arpl
pop
insl
int3
mull
pop
xchg
adc
jnp
xor
or
mov
scas
lock
pop
jmp
xor
lcall
mov
repz
xlat
add
inc
bound
push
inc
ss
pusha
ss
hlt
fiaddl
aam
cmp
pop
adc
shlb
mov
cmpsl
mov
in
push
mov
pop
fdivp
push
cmp
mov
mov
outsl
add
jnp
faddl
jmp
in
mov
hlt
cmpsb
mov
shll
stos
sub
mov
jns
adcb
jne
xlat
inc
sub
cmp
pop
dec
adc
dec
sbb
pop
loop
jnp
mov
out
lock
or
js
adc
int
and
mov
adc
test
cmp
fwait
cmp
mov
and
and
movsl
jmp
adcl
mov
xchg
xorl
lahf
push
fwait
nop
add
dec
outsl
adc
jle
lahf
out
das
and
movsb
xlat
stos
es
xor
pop
xorl
push
cmp
xchg
int3
add
inc
pop
sub
in
xchg
fdivs
mov
add
push
fsubrs
add
add
push
mov
scas
sub
subb
loopne
sahf
js
mov
scas
pop
mov
mov
lret
loop
jnp
pop
cmpsl
popa
gs
dec
or
and
popf
mov
mov
cltd
insb
enter
aam
jle
jge
xchg
xor
ljmp
jmp
scas
xchg
xor
outsl
enter
fidivl
push
adcl
cmp
arpl
andb
mov
cmpb
lock
loop
hlt
dec
mov
cmp
mov
in
cld
outsl
ficompl
mov
shrb
cmp
bound
divb
pop
shrl
sub
push
lret
mov
mov
shrb
popa
or
jae
int3
int
pushf
in
insb
add
push
cmp
and
insl
xchg
je
int3
shll
mov
aas
dec
lea
pop
mov
fs
push
aas
and
into
or
push
mov
mov
mov
and
loopne
in
mov
xlat
adc
pushf
out
mov
call
push
sbb
xor
and
lret
shr
push
out
xchg
lock
add
inc
jl
pop
adc
outsb
sub
and
outsb
add
push
cmp
scas
and
push
bound
inc
xchg
mov
fmull
bswap
aaa
mov
das
xchg
loopne
push
xchg
pop
fldcw
fmull
inc
lcall
rcll
push
shll
shlb
xchg
outsl
das
flds
lea
insl
andl
mov
bound
int3
loop
xchg
dec
xchg
std
stos
mov
adc
sti
mov
push
andb
cmp
and
mov
imul
xor
sub
cmp
mov
sbb
lret
inc
in
mov
mov
push
sub
xchg
addr16
sbb
dec
push
sbb
lock
xor
xor
call
ret
jle
mov
loop
fistl
cmp
bound
mov
aam
mov
mov
clc
pop
sub
out
shlb
cmp
je
sbb
data16
repz
push
les
mov
js
ror
pop
xor
imul
mov
popl
mov
add
lods
push
mov
cmp
dec
mov
out
clc
leave
and
aad
pop
movsl
jno
xor
sub
movsb
sbb
or
mov
add
out
add
push
pop
sbb
dec
outsb
add
js
std
inc
inc
sub
sub
aas
test
or
and
jecxz
xor
mov
pop
insb
or
push
mov
pop
sub
dec
fs
push
inc
int3
inc
mov
xor
stos
imul
inc
mov
mov
mov
mov
or
enter
in
xchg
out
iret
hlt
in
loopne
mov
inc
lods
out
dec
jecxz
pop
mov
iret
mov
ret
cmp
pusha
cmp
stc
or
jae
cmp
xchg
cwtl
mov
scas
sbb
fstps
stos
setg
shrl
xor
repz
or
test
imul
in
int3
das
repz
sub
add
lds
push
xchg
cmp
out
rcr
fsubr
shr
popa
sbb
fldt
punpckldq
pop
jns
mov
int
cwtl
pusha
in
je
scas
adc
fcomps
inc
adc
mov
jp
push
repnz
adc
mov
sub
adc
mov
sets
mov
inc
cli
cld
stc
pop
xor
and
in
mov
arpl
icebp
cmp
sti
mov
or
dec
repnz
iret
mov
mov
cs
cmp
inc
icebp
dec
mov
xchg
inc
jl
repnz
out
out
mov
out
lods
push
insl
xchg
fistl
jmp
push
cld
cmp
cwtl
out
sub
fisttpll
sti
xchg
int
shlb
bnd
sbbl
xor
sbb
fstps
jp
cld
and
and
xor
pusha
aam
fistps
js
or
mov
das
lret
sbb
mov
pop
sbb
jns
std
and
inc
ss
add
pop
shl
push
mov
mov
das
shrl
jecxz
cmpsb
fs
cs
fwait
insb
cwtl
andl
shlb
stc
out
sbb
cld
push
xor
mov
adc
sbb
mov
fsubs
lock
shrb
shll
jmp
bound
ds
jmp
dec
fxch
ds
and
add
mov
es
in
faddl
jp
xchg
std
jge
hlt
pop
shll
out
shrb
call
daa
ficomps
xor
push
sub
ret
shrl
stos
mov
pusha
add
or
cli
rcll
push
fwait
inc
mov
lods
dec
inc
stos
sub
jae
pop
fsubrl
popf
fwait
mov
aas
popa
mov
xchg
jg
pop
adc
or
jbe
loop
sub
sbb
sub
and
inc
jbe
add
inc
push
xchg
repnz
xlat
outsb
and
pop
jge
outsl
pushf
test
in
jae
gs
cmp
fisubl
sbb
ret
shr
ja
lea
shlb
sbb
pop
mov
xchg
and
icebp
sbb
sbb
dec
dec
icebp
cmc
sahf
das
sub
nop
adc
outsb
popa
and
xor
sub
popf
jl
push
or
inc
fisubrl
cmp
ss
mov
sub
jb
int3
notl
add
mov
ret
adc
mov
cmpsb
loop
push
adc
dec
xor
pop
xchg
mov
xor
pop
lcall
add
aam
pushf
shll
sub
jle
repz
std
mov
add
test
jmp
stos
xchg
inc
das
lea
and
jne
xchg
imull
inc
sub
in
adc
pop
adc
pop
scas
adc
and
inc
pop
or
inc
jo
sbb
push
sbb
int
aam
mov
jae
xchg
mov
add
xor
sub
ret
and
inc
test
inc
pop
movsl
sbb
xor
dec
cmp
lds
rorb
popf
adc
mov
pop
inc
mov
stc
sbb
lea
fbld
lods
mov
adc
jbe
xor
bound
push
mov
sub
sti
cmp
fstl
inc
ja
add
jmp
pushf
add
or
imul
or
leave
add
rep
jge
jnp
xor
ret
les
sbb
cs
cli
clc
mov
jg
push
xchg
ds
pushl
shr
in
jg
or
pop
scas
mov
mov
andb
fstps
and
cmovo
cmpsb
ss
lock
ljmp
xchg
stos
loopne
lods
add
out
test
or
inc
add
mov
push
add
adc
xchg
mov
lds
insb
aad
push
add
cli
stos
lcall
cmp
icebp
loop
push
pop
enter
cmp
sub
bound
push
cmpsl
out
xchg
aas
xchg
mov
lcall
fnsave
into
ret
pop
sub
and
ljmp
and
movsb
idivw
or
inc
mov
mov
data16
sarl
or
fldln2
rorl
lods
loope
je
inc
sbb
mov
pop
je
sbb
jecxz
mov
mov
das
inc
xchg
and
dec
test
clc
push
push
xchg
dec
xchg
push
cmpsb
out
inc
sti
mov
lock
mov
lahf
lret
pop
pop
call
xor
sub
pop
jb
aas
mov
cmc
add
inc
bound
popl
sbb
int
push
xor
popf
leave
jb
add
loop
leave
shlb
pushf
dec
xor
pushf
fildll
xlat
mov
roll
fldenv
sahf
out
sbb
orl
das
mov
mov
xchg
fwait
out
cmp
movsl
push
icebp
loope
addr16
fistps
aas
out
sub
loopne
stc
loop
dec
cmp
iret
mov
mov
out
push
mov
push
movsb
pop
fisttps
push
dec
inc
sbb
popa
ret
pusha
gs
shll
lret
jmp
dec
test
lcall
shl
dec
xchg
test
ljmp
int3
jle
rcrl
jl
jb
sub
push
cmpsb
fsts
mov
mov
jg
call
rolb
out
mov
sahf
iret
cmp
rcll
sub
lods
sub
mov
add
lea
jg
fistpl
hlt
jg
insl
lock
push
repz
pop
loopne
cwtl
or
jno
leave
adc
aas
cmp
cld
pop
dec
call
shll
scas
mov
es
out
adc
cltd
out
mov
jecxz
enter
jmp
sbb
sbb
pop
cltd
roll
jns
daa
sub
outsb
mov
ret
fiaddl
daa
xchg
les
pop
push
cmpl
fs
push
enter
repnz
push
stos
aaa
and
roll
xor
and
pop
jb
mov
xlat
xchg
sahf
inc
cmp
cmp
stos
fdivs
popf
jo
ja
loope
or
test
stc
mov
scas
int3
fsts
lock
scas
mov
pop
aas
mov
cmp
das
inc
mov
rcll
insl
push
sbb
cmp
cmp
sahf
rorl
pop
or
cmp
movsl
mov
js
and
into
xchg
or
ljmp
or
loope
call
popa
mov
rcll
lods
sub
mov
pop
and
in
das
lcall
and
cmp
dec
adc
pop
pop
xchg
and
ret
dec
stos
xor
ds
mov
jecxz
inc
pusha
out
xor
mov
xor
test
xchg
pop
mov
lcall
cli
or
mov
iret
movsb
mov
cltd
pop
mov
arpl
cmp
dec
sbb
cmp
adc
out
in
lods
xorb
insb
sahf
gs
lret
mov
pop
pushf
sbb
adc
push
jnp
and
jnp
mov
dec
cmp
or
jmp
mov
ret
pop
pop
enter
jo
jmp
adc
nop
lock
data16
loopne
xor
adc
push
sbbb
mov
adc
stos
stos
enter
mov
cs
dec
sub
test
test
into
xor
xor
pushf
mov
push
cmp
mov
inc
or
loope
or
out
icebp
inc
dec
outsl
push
mov
stos
pop
xor
cmpsb
sbb
in
jecxz
popf
cltd
xchg
inc
mov
lahf
mov
xchg
xchg
fs
int
pop
lret
fsubr
scas
and
sbb
add
push
loope
test
daa
cli
pop
and
les
test
mov
mov
jnp
xchg
and
jbe
add
add
test
daa
xchg
daa
xor
push
bound
and
xchg
test
dec
fmuls
sbb
imul
xchg
mov
setl
stc
inc
imul
call
adc
cmpsl
inc
in
js
sub
pop
or
xor
add
xor
adc
data16
cmp
inc
cmp
cmpsl
jg
push
loopne
sbb
dec
xchg
pop
test
sbb
and
test
cmp
cmp
inc
xchg
push
ret
and
cli
adc
pop
xchg
mov
inc
clc
imul
or
mov
mov
mov
inc
push
repnz
sti
stos
sub
jo
insb
data16
jmp
pop
xor
adc
inc
inc
mov
lret
xchg
push
jno
pop
out
cld
in
outsl
ffree
movsl
lock
icebp
push
lods
jmp
push
mov
int3
lret
mov
in
je
lods
pop
ljmp
outsb
in
in
jg
pop
push
mov
push
incb
icebp
hlt
or
inc
inc
fucomip
mov
sub
lods
jno
out
test
aas
push
mov
mov
mov
popf
mov
mov
fadds
cmp
ror
push
cmp
clc
movsb
mov
cmp
mov
les
xchg
mov
test
ss
add
adc
ljmp
sub
push
lea
outsl
and
iret
fwait
xor
cmp
test
shlb
les
add
inc
inc
rclb
lods
loopne
lret
xchg
in
add
sbb
cmp
mov
gs
popf
test
cmp
dec
daa
jns
andl
xlat
imul
movsl
or
xchg
pop
add
and
cmp
and
add
push
jmp
out
lds
sub
clc
dec
andb
sub
push
rcrl
sub
pop
loopne
sub
xlat
sbb
xor
xor
cmc
adc
lret
push
sub
bound
daa
push
jg
or
or
hlt
repnz
add
shr
cwtl
sarb
sub
dec
std
cmpb
clc
stos
inc
dec
iret
sub
mov
aaa
popa
adc
jnp
push
lahf
outsl
xor
lret
jp
xlat
mov
pop
std
or
lds
mov
cmp
roll
mov
push
hlt
icebp
nop
xlat
dec
add
sub
iret
testl
sbb
into
sub
inc
test
dec
out
js
cmp
jno
cmp
jbe
pop
adc
mov
leave
push
push
xchg
jecxz
loope
sub
ja
jecxz
icebp
stos
popa
xchg
push
int
stc
jge
aad
scas
xchg
xor
pushf
lods
fs
add
loope
roll
adc
mov
ftst
cmp
sbb
ret
aad
hlt
sbb
and
and
loope
dec
lcall
mov
lods
mov
dec
push
mov
out
pop
fsubrs
lret
es
push
inc
ds
push
jbe
mov
fdivs
inc
jns
xorl
insl
clc
mov
xor
jno
cld
add
push
je
push
xor
mov
jp
pop
adc
lret
xchg
mov
sub
repz
pop
jnp
xchg
mov
outsl
cmp
or
jg
bound
rorb
lea
loope
clc
cltd
mov
ror
mov
xchg
in
lds
cltd
decb
jno
stos
jl
sub
test
jg
jb
pop
or
shll
push
xor
jmp
shrl
mov
adcl
sbb
gs
or
add
icebp
pop
push
xchg
xchg
aam
sub
in
push
mov
adcb
mov
ret
outsl
rclb
rcr
aaa
sbb
decw
jmp
pusha
xlat
dec
push
arpl
xchg
test
xlat
cli
mov
imul
cmp
add
js
ljmp
lcall
pop
cs
mull
scas
inc
mov
pop
daa
pmuludq
xchg
mov
xchg
xor
mov
xor
cmp
adc
flds
mov
hlt
dec
mov
cmp
jle
cltd
push
mov
push
and
cmp
dec
pop
outsl
add
dec
fistpl
lahf
cltd
and
je
sub
popf
fisubs
add
add
lahf
jge
sti
cmpsl
icebp
stc
ss
cmp
rcl
out
mov
dec
rcll
call
pop
push
gs
fwait
add
repz
sub
adc
add
push
clc
xor
hlt
sbb
mov
xchg
and
add
mov
mov
xor
inc
in
scas
jle
es
dec
and
jge
pop
fimuls
mov
aad
jne
scas
mov
cli
add
mov
and
cwtl
das
dec
rcll
dec
push
cmpsb
into
je
inc
outsl
xchg
cmp
jl
xchg
add
lods
or
cmp
fstp
test
add
xchg
out
or
sub
into
jbe
pusha
shlb
data16
sub
sub
je
lahf
adc
sub
mov
mov
fcomps
inc
and
fs
mov
loopne
add
into
cmp
test
icebp
stc
jp
sbb
xchg
pop
repnz
dec
push
jle
daa
and
jb
mov
mov
push
pop
mov
fdivp
mov
test
cli
in
aad
adc
popa
loopne
mov
aad
xlat
jle
sub
mov
addr16
xor
test
leave
or
out
loop
pop
and
insb
into
insb
sbb
gs
pop
sbb
pop
jb
mov
pop
inc
icebp
fnstsw
lock
loopne
aaa
push
xchg
sbb
arpl
stos
into
pop
adc
fld
andl
or
xchg
movsb
flds
pop
mov
movsb
mov
in
cld
cmp
sbb
xchg
adc
inc
bound
add
aas
int
lock
leave
scas
mov
adc
jp
testl
std
inc
push
pop
rcl
mov
push
les
lock
scas
push
stc
push
and
int3
cmpsl
cld
outsb
mov
pop
inc
sbb
xlat
popa
insb
and
daa
cwtl
jno
mov
inc
inc
test
push
stc
push
repnz
fwait
clc
out
inc
pop
inc
out
in
pop
pop
inc
out
jge
cmpsl
addr16
jg
or
test
fisubl
adc
mov
mov
fistl
popf
xchg
arpl
adc
test
push
test
mov
mov
notl
cmp
insb
roll
pop
dec
mov
cmp
dec
mov
in
in
cmc
fwait
mulps
in
xchg
aas
sbb
adc
lcall
test
cmp
jecxz
lods
lret
mov
xchg
pop
pop
or
pop
add
pusha
inc
inc
xchg
shlb
nop
push
mov
jbe
pop
and
iret
add
dec
arpl
daa
xor
push
lods
subl
cmpsb
dec
aaa
pop
xchg
mov
mov
inc
inc
mov
adc
int
js
cmp
enter
pop
iret
arpl
ret
jnp
mov
pop
arpl
les
dec
js
lds
jge
pop
lcall
repz
dec
or
cld
frstor
loopne
test
push
sub
lock
ret
pop
mov
ja
push
cmp
iret
add
paddw
data16
xor
adc
data16
xchg
loop
lods
cld
aad
dec
repz
xor
jnp
ljmp
outsl
adc
pop
inc
data16
fstpl
pop
call
out
clc
cmp
out
jp
orl
mov
xchg
pop
mov
repz
imul
loopne
or
mov
xor
insl
add
ret
pop
jecxz
lretw
sbb
xchg
shrl
adcl
in
hlt
push
arpl
out
in
sbb
incl
push
adc
scas
push
mov
push
into
scas
adc
in
pop
jb
sub
pop
mov
jge
pop
push
jne
and
test
add
in
addr16
mov
orb
cmp
xchg
xor
mov
xorb
dec
cmp
decl
in
cli
add
pop
les
loopne
push
or
or
cmp
jo
mov
js
lret
adcb
jne
pushl
xchg
cld
lahf
dec
or
cmp
lea
lds
adc
push
cmp
pusha
adc
js
push
mov
jne
add
jmp
mov
sbb
mov
xor
xor
sbb
aas
inc
mov
or
pop
aas
mov
pusha
and
pop
adc
inc
in
cmp
pop
and
pop
into
xchg
add
insl
mov
daa
cmc
ss
or
and
negl
and
fldt
insl
cmpsb
iret
push
inc
push
pop
cmp
jp
ficomps
in
xchg
cmp
out
xor
sbb
cmp
sbb
aam
xor
cli
pop
jo
enter
pop
sbb
inc
jg
popl
test
cli
nop
pop
and
fistpll
or
jb
adc
mov
mov
mov
stos
mov
lea
in
or
jp
dec
rorl
dec
cmp
mov
xor
mov
inc
movsl
adc
xchg
pop
test
mov
xchg
outsb
outsb
ret
or
pop
lods
ror
or
jge
stos
mov
imulb
les
daa
pop
or
and
out
fs
dec
pop
lret
cli
mov
ja
mov
jecxz
push
cmc
push
mov
scas
icebp
mov
push
fmuls
mov
js
shlb
mov
inc
mov
mov
push
lahf
xchg
mov
pop
adc
pop
jp
js
fdivrp
xor
push
inc
into
mov
and
fcmovbe
mov
push
mov
mov
xor
sub
mov
dec
mov
add
adcl
inc
test
sti
and
in
and
popf
inc
out
add
test
jl
imul
cmp
cs
lret
stos
in
js
xor
jecxz
xchg
jo
xchg
ljmp
js
ret
xchg
xchg
cmpsb
or
mov
and
mov
ffreep
scas
ss
add
mov
pusha
test
mov
movsl
stos
mov
mov
inc
mov
test
jnp
adcl
push
jb
notl
mov
mov
mov
jo
mov
decl
inc
bound
push
xchg
xor
lret
dec
addr16
sbb
lahf
cmpsl
jno
push
add
jne
add
ss
jl
push
leave
scas
xor
pop
shlb
fstl
rcrb
gs
mov
jns
repz
cmpsl
xchg
outsl
sub
inc
adc
xlat
aas
sti
movsb
jnp
lahf
aas
or
lret
test
xchg
lret
xor
dec
xchg
mov
and
pop
sbb
push
xchg
pop
sub
cli
or
movsl
cltd
add
or
inc
mov
inc
inc
push
xchg
jbe
inc
jnp
mov
cmpl
xor
movsl
dec
movsl
test
movsb
and
test
jle
sub
fs
or
mov
fs
push
rolb
mov
std
push
cmp
fwait
pop
pop
jp
or
sbb
jo
mov
jmp
xchg
mov
andb
and
test
xchg
loop
push
push
cmpsb
out
fwait
xchg
fdivrs
popa
loop
cli
addl
es
push
stos
pop
xor
mov
negl
cmp
dec
scas
add
inc
xor
out
test
xchg
jne
jnp
pop
pop
pop
or
dec
xchg
mov
pop
lea
sbbl
sti
test
xchg
dec
stc
cli
inc
xchg
movntps
jl
push
and
out
hlt
pop
lret
loopne
jb
push
dec
adc
lea
enter
pop
xor
mov
inc
xchg
jne
mov
pusha
pop
stc
jo
mov
out
inc
add
cmp
mov
in
mov
imul
xchg
rcrb
or
and
push
ds
orb
rcrb
les
test
movsb
notl
dec
call
add
sbb
xchg
in
outsb
iret
mov
stos
in
or
cmp
pushf
out
sbb
inc
scas
and
imul
out
paddw
pop
out
popf
push
or
test
push
cwtl
and
inc
inc
fisubrl
sub
jmp
xchg
pop
jbe
pop
in
or
xchg
in
sbb
gs
jb
arpl
pop
imul
dec
cli
mov
mov
ficoms
mov
mov
jmp
dec
arpl
std
adc
call
and
addl
mov
xchg
mov
in
push
dec
sub
cmp
push
mov
mov
sbb
xchg
push
xor
cmp
push
adc
outsl
mov
push
jnp
lea
stos
cld
jmp
pop
or
add
insl
in
sub
or
sub
add
leave
arpl
mov
push
push
xchg
ffree
jg
sbb
mov
scas
out
lods
mov
subl
sub
rdmsr
fidivrl
xlat
out
lock
lret
imul
mov
scas
jbe
loopne
scas
test
xchg
sub
or
add
out
gs
jb
mov
leave
das
mov
sbb
dec
int
add
shlb
mov
sub
imul
imul
into
jg
xchg
stc
aad
sbb
inc
add
sahf
xchg
mov
call
dec
outsb
and
lret
add
gs
fcoml
insb
leave
sarl
jmp
lret
pop
shlb
sahf
xchg
dec
dec
sub
shlb
int3
mov
ja
dec
push
cmpsl
or
cld
insb
add
faddl
jecxz
mov
mov
pusha
add
fildl
cld
xor
mov
and
cmc
adc
lods
sbb
dec
xchg
push
adc
outsb
dec
insl
maskmovq
imull
cld
mov
jle
mov
push
dec
fildl
sub
cmp
mov
jmp
dec
jg
adc
loop
rcrb
xor
jl
jne
and
faddl
push
fucomp
repz
mov
fisubrl
mov
imul
inc
sub
sti
mov
call
pop
ss
repz
out
dec
add
movsb
inc
xor
ss
jae
jns
sbb
dec
or
fistl
scas
fsubs
hlt
push
pop
cmpps
or
mov
lret
fnstcw
insl
push
xchg
push
outsb
xlat
int3
fisubs
out
insb
adcl
push
jno
and
pop
xchg
popa
es
inc
leave
pop
jae,pt
push
pop
in
sbb
aam
rorb
rcrb
fcmovnu
mov
call
pushf
adc
imul
arpl
or
jb
incl
insl
fstl
push
cmp
add
jecxz
sub
jl
dec
xchg
icebp
fistl
pop
jge
fldcw
mov
add
ja
dec
mov
int3
push
xor
je
fimull
negl
jge
push
pop
pop
outsl
adc
leave
loop
rcl
inc
sbb
or
mov
adc
cmp
stos
lods
imul
cld
int3
fwait
imul
lds
in
in
orl
cli
add
clc
dec
fld
andl
push
repz
fidivrs
dec
cld
cmp
pop
bound
sbb
and
mov
fstps
cmp
lahf
rcrl
loope
add
lods
ljmp
jns
mull
arpl
mov
adc
mov
ret
cld
mov
mov
test
xchg
jno
gs
xchg
mov
andl
shrl
ret
dec
dec
fsubr
mov
cmp
sbb
xchg
xor
scas
loope
cmp
sub
rclb
pusha
loop
add
stos
lahf
mov
sbb
mov
aad
dec
xchg
mov
sti
push
popf
mov
das
dec
sbb
push
xchg
mov
pop
clc
imul
sahf
push
mov
push
jge
inc
dec
sti
ja
fsubrl
in
dec
xchg
fisttpll
mov
cli
repz
pushf
adc
lock
sti
mov
pop
mov
andl
push
sbb
jns
sub
daa
adc
out
mov
inc
mov
xchg
test
adc
leave
fimuls
in
mov
iret
pop
pop
outsl
jae
xor
ljmp
rol
inc
cld
sar
mov
data16
xor
andb
out
mull
subl
mov
jno
xor
dec
mov
paddsb
inc
xchg
mov
fisubrl
cmp
dec
jmp
dec
xor
xor
fs
clc
cmp
pop
loope
ja
mov
shlb
or
div
fldl
push
repz
pop
loopne
jae
subps
xchg
scas
dec
jno
and
js
out
inc
sub
push
push
add
xchg
data16
or
add
pop
or
rcl
adc
jns
mov
inc
cs
jecxz
inc
leave
xchg
push
sub
xchg
adc
repz
cmp
push
dec
mov
jo
dec
mov
aad
ret
stos
xchg
mov
cltd
pop
cli
cld
adc
mov
das
xchg
push
xor
dec
push
repz
inc
mov
call
xor
sub
push
test
inc
iret
push
mov
pop
mov
add
jle
aad
ret
xchg
scas
fisubrl
jnp
fstpt
pop
adc
testb
andb
out
nop
enter
push
and
dec
jne
jecxz
fdivrl
les
out
outsb
cwtl
push
xchg
xchg
push
and
inc
inc
outsl
push
sbb
out
repz
xor
xchg
int3
or
jg
aam
in
fcompl
cmc
jp
aam
adc
cmp
xor
add
jb
repz
lret
ja
jl
inc
lcall
lahf
xchg
or
add
adc
inc
add
push
inc
xchg
in
insb
adc
dec
shrl
jl
inc
int3
jbe
xor
out
shl
push
inc
mov
jo
pop
insb
outsl
jecxz
inc
hlt
lret
lods
inc
push
jl
xchg
push
rcrb
cltd
lock
adcb
fcompp
jns
xchg
inc
dec
addb
test
mov
int3
sbbl
outsl
mov
fisubl
popa
mull
aad
std
ljmp
sub
inc
push
cmp
sub
mov
rorb
incb
and
pop
stos
popf
rorl
stc
push
jmp
rcrb
mov
jnp
js
pushf
repnz
pop
adc
dec
xor
ljmp
and
mov
inc
sbb
and
xchg
jp
inc
sbb
ss
dec
inc
in
test
fimuls
mov
inc
aam
sub
xor
addr16
repz
mov
mov
sub
movl
xchg
movsl
and
sbb
dec
lods
inc
loopne
test
pop
inc
cmc
push
iret
aad
inc
sbb
orl
int
or
mov
xchg
lahf
add
sub
ret
xor
jp
sub
loope
or
jae
loop
dec
lock
loope
int
sahf
push
adcl
icebp
std
mov
sub
and
lock
nop
out
add
outsl
or
pop
addb
jg
adc
and
mov
mov
adc
add
sbbl
mov
addr16
fldl
sub
rorl
das
imul
sbb
icebp
or
xchg
mov
fdivrs
sub
cmp
mov
sub
cmp
mov
adc
xchg
lds
mov
das
sbb
test
outsl
mov
ret
inc
cmp
xchg
lea
sub
sub
push
xchg
imul
push
dec
decl
push
clc
lods
lock
or
out
bound
cmp
adc
lcall
stos
jae
outsb
shrb
push
or
inc
adc
inc
repz
je
jns
call
dec
xor
xlat
cmp
push
xchg
or
out
push
sub
fcoml
test
xorb
push
dec
repnz
pop
dec
arpl
xchg
je
sti
ret
mov
divb
mov
push
sbb
cli
mov
jle
mov
mov
xchg
mov
xor
jbe
pusha
pop
std
mov
sti
and
loope
sti
jae
into
mov
cmp
ja
xchg
fiaddl
mov
shld
lret
adc
sub
fdivr
sbb
fsubrl
mov
pop
daa
pop
pop
scas
sub
lea
daa
scas
sub
in
gs
lret
imul
adc
jne
pop
dec
insl
sbb
and
and
or
or
fbld
push
cmp
sbb
or
popa
mov
cmp
popf
or
aam
fucomip
shufps
add
pushf
cs
mov
cwtl
xor
fldt
push
jl
cld
adc
and
lds
adc
xchg
sbbb
xchg
xor
inc
insl
push
cmpsb
shl
push
test
push
mov
fsubrs
adc
jne
loope
jl
mov
push
dec
mov
cmp
inc
data16
fcmovnb
xchg
sub
mov
aas
out
jg
test
push
iret
lcall
and
das
push
pop
test
rorb
icebp
div
ror
pop
cmp
push
pop
scas
mov
imul
repnz
lret
xchg
nop
xchg
sub
mov
sbb
cltd
in
mov
and
mov
push
cmp
adc
mov
push
sbb
jl,pn
cmp
sbb
push
in
imul
fnop
mov
leave
mull
xor
scas
adc
or
cld
jmp
loope
popa
int
sbb
mov
imul
scas
data16
scas
push
test
mov
out
push
mov
int3
dec
movsb
cwtl
scas
imul
rcll
cmp
in
sahf
push
or
mov
jbe
mov
jno
arpl
push
or
popa
or
sbb
fs
ja
fsubrl
pusha
push
roll
sbb
nop
xchg
xchg
jle
pusha
jg
mov
xor
pop
icebp
imul
pop
cmp
in
cmp
test
xchg
pop
cld
aaa
dec
mov
in
or
pop
mov
roll
int
inc
orb
or
pop
push
and
iret
add
lcall
xchg
rclb
mov
jge
add
movsb
xlat
lds
mov
fcompl
sub
gs
les
idivb
or
xchg
or
inc
sbb
and
xchg
jge
xor
adc
or
xchg
and
call
pop
xor
cmp
mov
pop
pop
or
test
push
inc
xlat
movsb
fistpll
stos
jnp
sub
cmp
arpl
mov
aam
enter
jo
ja
out
int
negl
xchg
push
mov
push
flds
add
popf
inc
lods
cmpsb
es
test
nop/reserved
pop
add
mov
loopne
dec
push
pop
test
hlt
jmp
or
rorb
hlt
xchg
jmp
xor
or
jno
mov
in
mov
sbb
int3
pop
xor
push
sbb
pop
leave
dec
les
jb
or
push
xchg
std
cmp
mov
dec
xchg
dec
adcb
jmp
iret
mov
lcall
ficoms
out
mov
fcmovb
or
fstps
cmp
cli
push
cs
xlat
popf
jg
lret
shr
push
mov
or
adc
pop
ljmp
addb
adc
loop
adc
aaa
cmpsb
mov
fstpt
jnp
push
lahf
addr16
mov
test
mov
dec
leave
aas
dec
fucomi
testb
testl
jp
cmp
repz
cmp
outsb
out
popf
jecxz
enter
cltd
in
pop
xchg
imul
and
lret
fdivs
mov
andl
mov
in
mov
adc
gs
aas
leave
fildl
mov
or
and
popa
jb
mov
and
mov
ftst
sbb
ficomps
push
aam
aam
clc
push
mov
popf
xorb
sbb
cltd
sbb
add
int
cmp
or
xchg
sub
bound
and
jne
sub
mov
jmp
in
mov
xchg
nop
in
cmpsl
pop
add
pop
out
je
and
lock
cmp
les
bnd
iret
ret
mov
push
sub
es
lea
xor
lret
push
mov
cs
jg
mov
cmp
or
cmp
cltd
movq
fsubl
ja
movsb
mov
stc
cmp
lcall
popa
ss
ja
loop
inc
push
out
sub
push
movsl
je
add
xor
sbb
out
push
jge
xor
stos
movsl
push
mov
cmpsl
fcomps
imul
sub
mov
adc
and
insl
scas
movsl
test
je
cmc
jb
sbb
jp
mov
sbb
testb
orl
xchg
push
cmpsb
imul
cmc
adc
popf
xor
loop
xchg
mov
jmp
push
xchg
jmp
mov
orb
in
pop
sub
push
shll
add
into
leave
addr16
popl
or
cltd
or
mov
mov
sbb
xchg
notb
xor
xor
push
adc
repz
pusha
daa
shlb
inc
mov
adc
insl
iret
out
inc
insb
lods
test
or
fdivrs
ljmp
cmc
mov
mov
pop
mov
sahf
outsb
jno
inc
loop
lods
cmp
cld
or
jne
cmpsb
pop
fs
fidivl
xchg
ret
cmp
sbb
sub
mov
arpl
mov
pop
adc
insb
loopne
les
sub
or
sarb
adc
cmp
jmp
test
sbb
icebp
push
add
orl
popa
xor
scas
sbb
xchg
sub
dec
ret
rcll
addb
repnz
add
imul
stos
jae
pop
mov
int
pop
mov
jbe
aaa
fwait
daa
jge
aam
jno
xchg
jp
repz
xchg
mov
and
cltd
pushf
stos
packuswb
popa
sti
lea
int
and
cltd
push
int3
lahf
lds
sbb
cmc
outsb
cld
or
cmp
aaa
sti
sub
test
and
jecxz
call
push
xchg
cmp
lods
cmp
jnp
pop
leave
cld
xlat
addr16
cmp
je
lock
lcall
lret
dec
pop
lea
lcall
lcall
into
dec
sahf
gs
mov
pop
pop
ret
sbb
stc
shr
rcrl
fwait
mov
sahf
or
sub
pop
fbld
in
add
adc
leave
push
and
enter
lret
xor
dec
subl
sub
dec
xchg
pop
lods
fwait
sbb
push
push
ret
cmp
pop
sbb
int3
test
and
ds
js
and
pushf
arpl
mov
fldcw
and
rcll
push
cs
sub
and
adc
fadds
lods
fcoms
jmp
push
push
std
cmp
cwtl
lock
clc
and
adc
pop
push
mov
push
push
sbb
mov
adc
add
push
jns
and
mov
or
jae
jno
or
test
xchg
lret
mov
sub
das
daa
fdivl
dec
push
or
icebp
mov
jb
or
or
inc
dec
bound
ljmp
mov
push
faddp
jns
repnz
sbb
pop
xchg
imull
jbe
sub
gs
mov
hlt
aas
push
in
stc
fidivrs
xor
subb
test
lret
setae
xchg
pop
push
ret
fnstcw
jns
mov
in
fwait
jmp
jecxz
sbb
or
frstor
push
pushf
fnsave
icebp
icebp
lods
sub
fcmovb
pop
push
xchg
pop
popa
testl
dec
mov
hlt
jns
jmp
mov
sbb
xor
shrb
bt
pop
jae
inc
xor
sti
out
shll
les
roll
adc
negl
das
int
mov
ret
insl
jns
mov
inc
in
lock
popa
jp
push
cs
fdivp
cmc
mov
sub
xchg
jge
cltd
inc
mov
push
pop
mov
and
pop
popf
lret
xor
cmp
xchg
subb
pop
mov
fsts
add
xor
mov
into
jg
mov
add
cmp
pop
imul
hlt
dec
sub
pop
pushf
xor
imul
or
lds
sub
jl
enter
and
filds
test
lds
popf
push
lods
enter
cmc
ja
stos
das
outsl
push
addr16
popl
mov
jb
mov
xchg
cmp
je
roll
pop
xchg
fiaddl
dec
scas
inc
jge
mov
jbe
data16
inc
add
fcmove
add
xor
imul
int
pop
or
pop
or
xchg
movsl
getsec
dec
rcrb
cld
inc
mov
out
lock
adc
xrelease
jae
insb
int
pop
mov
cwtl
xchg
mov
leave
jnp
stos
sbb
mov
pop
adc
dec
ret
mov
dec
rcr
das
pushf
mov
in
mov
push
cmpsb
in
addr16
hlt
fwait
iret
xchg
mov
sub
cmpb
mov
in
das
xor
mov
xchg
adc
ret
lret
xchg
add
jbe
and
aam
adc
jb
sahf
orb
scas
mov
or
repnz
ret
fsubp
pop
sbb
leave
xchg
in
out
cmp
pushw
out
lock
in
adc
clc
div
dec
sbb
lods
xor
xlat
pop
pop
mov
shrb
xorl
in
adc
hlt
rclb
push
xor
int
and
mov
lahf
push
stos
xchg
sub
fmull
mov
cmpsb
pop
std
aam
cs
lret
rcll
and
mov
xor
dec
shll
mov
lds
loope
pusha
cmpsl
mov
add
push
aam
add
lahf
pop
test
iret
mov
inc
outsl
cmp
mov
jns
and
push
je
mov
cmp
daa
xchg
negb
pop
out
and
mov
int3
cmc
mov
ret
mov
scas
pop
or
adc
std
push
cmpl
inc
fidivl
repnz
push
std
xchg
or
pop
cmp
pop
add
dec
push
cmp
xor
arpl
insl
adc
lock
mov
push
mov
div
xor
mov
mov
aaa
push
jmp
inc
sbb
mov
mov
imull
cmp
inc
xchg
pop
mov
decb
int3
cmc
and
or
fnstenv
or
xor
pop
inc
mov
orl
sbb
mov
xchg
cld
movsl
mov
push
ret
mov
into
sbb
or
out
insb
loop
pop
aam
or
cmp
push
sbb
mov
sarl
cltd
xor
sub
dec
lea
movsl
mov
push
je
cmc
sub
and
outsl
fcomps
sbb
mov
addr16
cmp
inc
jp
pop
int3
xchg
arpl
fcmove
jno
insl
lret
popa
loop
xor
data16
and
sar
push
lods
adc
sub
lods
sbb
and
fimull
fidivs
cld
lea
inc
negb
lret
lcall
pop
aaa
push
ja
inc
sbbl
lods
shrw
sub
pop
push
out
enter
es
mov
cmp
test
mov
jl
fwait
jnp
or
add
push
inc
out
xchg
pop
pushf
push
xor
xchg
scas
push
sub
push
scas
scas
jne
popf
inc
xchg
cmpsb
clc
scas
scas
push
fwait
xchg
pop
movsl
lea
sub
pop
and
jle
rorb
mov
dec
leave
or
mov
cld
enter
fucomp
add
xor
imul
push
loope
ja
inc
mov
push
pusha
int
pop
loop
divl
fildll
pop
cld
cld
clc
jge
inc
mov
addb
out
leave
ret
pop
loop
das
jecxz
out
das
fsubs
sarl
in
test
pop
pop
dec
dec
fisttps
fstpl
lds
push
sub
rol
lahf
mov
aad
cmc
rcrb
stos
jnp
add
lods
repnz
mov
pop
jg
push
dec
mov
sbb
inc
mov
jns
popa
mov
inc
cwtl
pop
push
mov
dec
dec
mov
xchg
lret
cmp
push
loop
inc
xchg
lahf
aad
xchg
jns
std
sub
lcall
fs
mov
xor
insl
lret
int
sbb
mov
pushf
flds
inc
out
ljmp
loop
mov
fisubrs
jle
and
pop
dec
sbb
jo
rorl
inc
out
jp
shlb
jmp
nop
jbe
pop
push
loopne
jne
test
adc
jmp
mov
in
xor
inc
les
es
loopne
ret
fs
or
xchg
lds
mov
xchg
nop
fwait
cs
xchg
inc
cwtl
fsubs
jne
cmc
shlb
inc
mov
inc
outsb
mov
jg
out
cmp
out
stc
sbb
cmpsb
out
mov
xor
lcall
mov
addb
fsubrp
scas
sub
push
shrl
add
dec
mov
add
clc
and
sbb
push
pop
popa
mov
mov
sti
jl
cmpb
leave
sub
lret
mov
rcrl
scas
stc
insb
pop
leave
enter
mov
bound
imulb
aas
jo
pop
pop
fadds
outsl
or
cli
popf
pop
ror
mov
sbb
cmp
xor
cld
push
scas
xchg
mov
fadds
scas
add
pusha
mov
aaa
fsubp
test
std
insl
jp
stc
outsl
mov
push
lret
test
add
out
add
jle
push
movsl
xchg
fs
repnz
lock
cwtl
stos
push
clc
cmp
shlb
jl
sub
xchg
push
jp
sub
pop
xor
daa
and
sub
outsl
and
fisubs
insl
dec
adc
push
mov
pop
es
dec
mov
pusha
dec
aam
xor
xchg
pop
push
and
test
push
jo
rcll
mov
cmc
sub
push
sahf
fs
mov
push
scas
jle
jnp
adc
jg
xor
xor
aaa
repnz
mov
stos
push
inc
test
mov
out
sbb
jb
ja
das
hlt
xchg
into
lods
in
push
inc
clc
jae
jo
adc
sarb
push
or
sbb
inc
rolb
sub
dec
and
out
pop
test
or
cmp
int
mov
cld
xchg
xchg
xor
cli
addr16
bound
xchg
das
jge
stos
pop
out
ss
mov
sub
clc
sbb
les
pop
ja
push
cmpsb
push
and
sbb
lahf
pop
mov
and
sbb
xor
mov
cld
or
aad
lret
into
faddl
cld
repnz
fisubrl
ficoml
pop
sub
cmp
dec
inc
cmp
in
push
or
sub
cmc
sbb
dec
mov
push
mov
int
xchg
fstpl
lahf
jmp
fildll
mov
adc
pop
xlat
or
aas
xor
js
aas
cmpsl
pop
imul
add
sarl
lods
loope
inc
cmpsb
dec
lcall
cmp
jae
sti
dec
stc
push
sbb
icebp
and
das
inc
pop
ljmp
jecxz
mull
sbb
or
mov
call
cli
or
jb
lcall
cmp
sarl
mov
sub
pop
aad
mov
add
es
leave
test
or
mov
orb
inc
or
jl
js
outsl
leave
mov
jnp
push
push
xor
stc
out
inc
jbe
sub
sub
rcll
cmp
inc
lcall
and
shll
rcr
xchg
sbb
dec
and
xchg
xchg
ds
loope
push
mov
mov
xor
push
ja
push
mov
in
call
inc
xor
adcb
dec
pushf
sub
push
inc
pusha
dec
addb
out
leave
cmp
ret
cmpl
xchg
adc
fwait
xchg
cmp
data16
push
pop
cmp
mov
sbb
jecxz
pop
xchg
mov
into
neg
inc
lods
sub
insb
cwtl
roll
int
pop
movsl
leave
test
cmp
adc
mov
add
in
mov
insb
dec
inc
in
fisubrs
dec
cltd
cli
mov
pushf
repz
dec
stos
aaa
sbb
mov
dec
mov
dec
pop
pop
cmp
mov
scas
or
mov
xlat
xor
mov
add
iret
mov
in
pushf
in
and
or
lret
icebp
inc
nop
fisttpl
daa
add
testl
mov
cmp
adc
leave
dec
mov
lods
push
mov
sbb
ljmp
mov
or
dec
fidivrl
inc
insl
fisttps
lock
fists
lock
cwtl
pop
sbb
les
push
out
loopne
fmull
cld
pop
pop
imul
into
imul
cmp
idiv
fldl
xchg
push
mov
xchg
fistpll
xor
movsb
sub
push
sahf
mov
and
sti
in
fwait
or
ja
adc
sub
mov
push
outsl
and
inc
repnz
xor
iret
and
push
imulb
lret
in
stos
rcll
addr16
mov
sbbl
arpl
xor
mov
fdivrp
xlat
out
int
xchg
pusha
and
aam
mov
dec
icebp
mov
rolb
in
icebp
push
lock
pop
pop
sahf
dec
stos
mov
jnp
bswap
xor
fucomp
push
pop
in
sbb
adcl
adc
xchg
int3
sbbb
pop
pop
jae
sbb
es
mov
shl
xchg
mov
and
fadd
cmp
jne
aaa
push
add
stc
and
push
in
add
and
outsb
xchg
or
aas
outsl
shll
jecxz
mov
ds
sub
xor
das
mov
xor
xchg
mov
test
popa
popf
dec
sbb
fcmovbe
adc
pop
dec
out
cmp
gs
dec
repz
and
out
leave
loop
dec
sti
lret
pusha
pop
dec
fiaddl
xor
mov
jbe
es
rcll
jecxz
ja
insb
pop
arpl
orl
and
mov
sbb
bound
mov
add
inc
inc
jg
mov
dec
lea
or
or
psubw
scas
push
sbb
mov
xor
push
fs
add
mov
lock
adc
sub
and
cmp
inc
repz
insb
sbb
xchg
test
and
add
mov
lds
adc
int3
rorb
jne
in
pop
pop
mov
pop
arpl
add
shl
rcr
lea
inc
mov
subl
cmp
mov
outsb
mov
test
mov
cmc
aam
sub
inc
lods
lret
rcll
sbb
lea
sub
pop
rolb
cmp
es
sar
ljmp
cli
jae
clc
xor
dec
jg
enter
xor
add
out
xlat
das
inc
xor
pop
and
dec
mull
fisubrl
jnp
rorb
xor
and
inc
rcrb
and
ljmp
incl
mov
xor
push
fidivrl
imul
xchg
lret
adc
rcrb
lods
pop
pushf
mov
adc
push
push
movsb
jle
loop
loope
adc
fsts
sbb
movsl
clc
call
push
imul
jmp
fstl
and
enter
pop
sub
fwait
push
test
pop
iret
add
mov
mov
clc
ja
and
dec
dec
xor
stos
mov
and
xchg
cmpsl
inc
enter
dec
xchg
or
sbb
sbb
and
mov
mov
jno
xor
jae
xchg
jmp
mul
call
xchg
pop
or
or
nop
lret
pop
in
adc
xor
adc
mov
test
fldenv
hlt
xchg
mov
idivb
inc
in
fwait
int3
js
mov
jle
out
int3
rorl
cmp
mov
push
pop
mov
cmp
jbe
cmpsb
cmp
aad
stos
mov
adc
subl
jle
sbb
jle
or
faddp
pop
fistps
mov
pop
gs
leave
int3
xchg
inc
lock
fildl
enter
pushf
sti
lods
arpl
push
xlat
mov
and
xchg
mov
sub
filds
lret
pop
mov
mov
movsl
js
pop
cli
mov
mov
push
frstpm(287
cmc
and
push
pop
ret
inc
ret
or
jecxz
sub
data16
je
pushf
or
sub
std
xor
out
mov
ret
ret
mov
mov
and
dec
popa
xchg
stos
cmp
inc
pop
imul
fldcw
pandn
jae
xor
dec
std
pop
sbb
and
or
inc
push
in
cmpsl
jnp
rclb
lcall
and
fldt
jp
or
push
lods
xlat
mov
les
inc
scas
lret
inc
roll
arpl
popa
ficoml
dec
lods
lds
out
jmp
cmc
in
inc
pushf
mov
pop
negb
outsl
pop
jbe
pop
sti
jae
pop
pop
adc
xor
and
ljmp
sbb
adc
push
fisubrs
call
push
movsl
cmp
aaa
movsl
or
add
jns
stos
xchg
mov
outsb
lea
test
fdivrl
stc
xchg
jmp
movswl
add
loope
cmpsb
sub
mov
add
mov
rclb
mov
fsubl
shll
fs
mov
and
mov
out
mov
fsub
mov
cmp
mov
sub
sub
fs
pop
mov
scas
fisttpl
vshufps
jno
shlb
pusha
out
ret
imul
jno
stos
pushf
pop
add
push
adcl
inc
inc
sbb
mov
out
movsb
lea
movsb
sbb
mov
cmp
xchg
pop
not
xor
cmp
push
shlb
test
rcll
mov
and
adc
inc
mov
js
movsl
inc
mov
out
fwait
jae
mov
and
add
into
daa
enter
mov
or
mov
insb
popf
xor
sub
sarb
push
xchg
dec
add
cmpsb
push
jmp
popa
push
jns
jle
adc
xor
xor
stc
push
mov
sbbb
nop
xchg
mov
or
repz
in
xchg
ja
mov
xor
fisubs
cwtl
mov
push
mov
ljmp
or
fistl
sub
jge
jle
jge
sub
sub
popa
mov
pop
push
mov
push
and
jae
xchg
fistl
jae
inc
fimull
jmp
mov
fsubrl
inc
and
cltd
lcall
jne
mov
pop
and
shl
mov
insb
or
mov
mov
fwait
mov
lds
out
xchg
cs
stc
cmpsb
clc
dec
xchg
mov
les
cmp
stos
out
adc
je
ja
jl
das
jnp
adc
test
mov
outsl
push
add
lods
out
cmpsl
mov
js
aas
mov
push
clc
sub
les
jmp
lahf
in
jge
clc
fsubrs
gs
lret
add
lret
sbb
fwait
pop
pop
pop
dec
stos
loopne
or
mov
pop
pop
xor
loop
or
test
mov
xor
stos
or
imul
mov
pusha
adc
or
pop
sbb
mov
dec
lahf
enter
sbb
mov
mov
shrl
xor
lods
rcrl
jge
xor
push
stc
xor
inc
dec
nop
xor
dec
aad
or
imul
dec
add
and
sub
ret
mov
cmp
fcmovu
dec
outsl
dec
jmp
sbb
sbbb
sbb
cli
les
cmp
mov
mov
int
xchg
neg
xor
stc
shlb
js
lret
or
xor
jne
push
xchg
test
movsb
std
xor
pop
out
pop
adc
jg
lahf
pop
xchg
pop
mov
adc
xor
dec
xchg
push
lods
adc
dec
push
pop
mov
addl
lea
add
imul
ret
div
xchg
psrad
push
pushf
push
jno
mov
fcomps
jns
jno
dec
and
add
pusha
aaa
je
mov
xchg
mov
imul
sub
sub
sub
cli
add
mov
mov
mov
repz
es
test
mov
and
jecxz
pop
sbb
pusha
stos
mov
out
adc
out
jbe
push
ror
add
pusha
inc
add
bound
mov
adc
in
jecxz
jg
jle
inc
in
jge
add
es
out
aam
out
lret
mov
and
cmp
mov
jb
mov
das
xchg
inc
jbe
mov
loopne
and
and
nop
xor
adc
xorl
lock
xlat
rorl
adc
fsubr
cmp
dec
and
add
inc
xlat
fwait
dec
and
pop
pop
mov
repz
sbbl
sub
sbb
xor
imul
test
push
mov
inc
in
adc
or
ds
bnd
lcall
jmp
pop
sub
popf
sbb
xchg
add
xor
jecxz
push
daa
and
call
mov
mov
sub
xchg
add
and
adc
int
xchg
sub
jl
push
fstpt
sbb
push
fwait
dec
xchg
cmpsb
hlt
sbb
cmpsl
ret
push
sti
insb
sbb
xchg
in
or
insl
ljmp
nop
or
lcall
stos
jl
mov
jle
loopne
fisttpll
adc
aam
adc
xchg
xor
sbb
jo
mov
aas
xchg
hlt
pop
sub
cmp
outsl
iret
xor
test
push
sbb
pop
movsb
mov
mov
stos
xchg
aas
test
movsl
mov
bound
sti
cmp
scas
arpl
xchg
mov
xchg
mov
loop
out
jo
lret
jecxz
imul
lret
stos
pop
sub
push
or
sbb
and
xlat
into
adc
cmp
cltd
es
adc
push
cs
dec
int3
jb
xlat
lock
push
push
push
movsl
fwait
pop
jmp
ds
jecxz
push
sub
fidivs
cwtl
push
loop
mov
sbb
movb
pop
cmp
ret
lcall
adc
inc
stos
sbb
adc
clc
cmp
adc
sbb
jbe
jns
inc
mov
ljmp
scas
lret
sub
inc
push
out
das
xchg
lods
shll
or
jp
scas
jmp
cmp
roll
lret
add
roll
inc
cmpsb
iret
in
sbbb
mov
mov
mov
adc
test
or
xor
jbe
pop
inc
dec
inc
push
stos
push
sahf
sahf
pop
lret
test
or
pusha
mov
cmp
lret
push
push
inc
push
andl
fwait
add
dec
xor
dec
mov
inc
sub
adcb
or
jecxz
fcomp
mov
leave
push
jmp
lret
out
lea
pop
mov
gs
xor
mov
push
mov
outsb
ja
adc
xchg
mov
xor
and
jg
popf
scas
int3
ljmp
int
negl
xchg
scas
push
aam
inc
bound
rorb
mov
lea
das
pop
fimuls
dec
cs
cs
mov
repnz
lods
or
fwait
loope
enter
push
fistps
mov
jle
rcrl
arpl
xor
mov
sti
ja
cld
mov
xorl
lcall
jl
sub
xor
cmpb
clc
push
add
sbb
jecxz
fcmovnbe
test
and
in
add
lahf
or
sub
loop
aas
popa
and
mov
mov
in
push
fldl2t
or
and
mov
jo
mov
inc
fidivs
inc
adc
in
cld
xchg
lcall
mov
stos
jno
mov
je
mov
imul
in
sub
out
rcr
sub
gs
xchg
test
lret
sub
lods
xorb
pop
test
mov
or
sti
imul
scas
mov
bound
pop
push
fisubrs
scas
xchg
mov
cmp
repnz
or
push
inc
icebp
scas
push
movsb
sahf
mov
and
in
xor
cmc
movsl
inc
or
jo
push
cmpb
jbe
out
xor
pop
cmp
xlat
int
and
fistpl
sub
out
cmp
mov
aad
sub
mov
mov
dec
idivl
test
lods
jl
dec
rcrl
push
xor
jnp
ret
inc
in
test
cld
xor
and
dec
mov
jp
repnz
cmpsb
icebp
shll
into
fcmovu
adc
add
cmp
in
mov
popf
xchg
subl
jns
pop
out
or
nop
fsubl
xor
hlt
xor
pop
nop
cmpsl
xchg
scas
movsl
popf
or
pop
out
dec
into
or
fisubrs
xchg
push
pop
push
ja
push
sub
out
cmc
push
fdivs
daa
jne
adc
cmp
mov
cs
sub
inc
data16
frstor
js
cmp
scas
sub
in
inc
cmpsl
arpl
aad
adc
mov
mov
jle
inc
lahf
xor
hlt
sbb
pop
pop
dec
aas
call
cmp
lcall
andb
mov
lcall
cmpsl
js
rclb
std
push
in
sbb
das
lods
pop
lock
push
dec
push
out
imul
repnz
stc
lock
dec
xlat
cmp
hlt
xchg
fsubrl
mov
data16
movsl
mov
loop
mov
adc
fs
test
xchg
xor
or
push
test
loope
cmp
cmp
in
xchg
dec
inc
push
icebp
push
jno
inc
jge,pn
mov
jg
iret
arpl
or
enter
pop
mov
xor
xchg
fistpl
orl
or
enter
nop
inc
xchg
push
add
sbb
sbb
iret
testb
push
es
divb
and
scas
bound
ret
jnp
pop
movsb
fnstsw
xchg
out
fsts
or
push
das
jno
fists
lods
mov
mov
fdivrl
movsl
push
mov
and
je
mov
lret
and
icebp
call
xor
mov
scas
shll
sbb
int
or
mov
dec
push
cmpsb
outsl
les
addr16
mov
rcrl
js
dec
imul
ja
and
and
push
ss
mov
and
inc
lahf
jbe
aas
loopne
fwait
push
es
repnz
rorl
enter
mov
sbb
out
out
imul
roll
in
sub
stos
jnp
or
mov
aas
sbb
test
loop
shl
pop
stos
mov
cmp
sub
in
insl
mov
cmpsb
into
push
repnz
roll
daa
lea
inc
mov
inc
mov
cmpsb
mov
out
ret
jp
ret
push
xchg
and
dec
data16
mov
gs
int
pop
mov
enter
jmp
imul
xchg
clc
pop
jp
or
stos
sub
rcll
xchg
shlb
das
push
xlat
inc
mov
jg
iret
data16
mov
popf
or
add
jno
lret
jmp
cmp
lret
and
xor
lret
mov
lahf
push
cmp
xchg
jmp
out
icebp
pop
jle
xor
scas
clc
push
lcall
add
and
loopne
xor
pop
ds
xchg
push
add
bound
test
in
cs
sbb
into
out
mov
in
loope
pop
ljmp
rcll
jle
stos
dec
sarl
xor
sbb
dec
mov
fmull
aaa
mov
sub
lock
xchg
jns
sub
sbb
sbb
mov
repnz
mov
inc
jo
dec
clc
out
repz
mov
jp
xchg
aas
inc
jbe
pop
push
push
xchg
loopne
cmpsb
mov
mov
xor
mulb
bound
lds
push
jl
mov
mov
das
jb
push
push
out
outsl
cmpsl
sbb
jle
xlat
test
mulps
in
fisttps
clc
ja
je
xchg
aam
push
xchg
xchg
dec
xor
cmp
sub
xor
and
mov
lock
fistpll
outsl
cwtl
rcl
fdivrl
or
enter
stos
or
and
pop
sub
fldt
jp
sti
loope
push
clc
lret
ljmp
push
push
inc
mov
push
xchg
imul
in
add
in
pop
mov
shll
sub
adc
dec
shl
cmp
cmp
sub
xor
fwait
ja
add
xor
dec
fstpl
push
test
sub
pop
dec
aas
int
mov
inc
pop
stos
imul
out
es
inc
mov
loop
dec
push
divb
pop
fstpl
dec
jle
mulb
mov
cmpl
adc
push
adc
call
push
andb
dec
inc
dec
mov
fldt
sub
imul
push
xchg
and
rorb
xchg
jns
in
pop
pop
divl
sbb
xor
popf
les
inc
xor
cmpsb
add
dec
pop
mov
lock
pop
sub
lret
mov
dec
inc
cltd
repz
sub
cmp
and
pop
mov
in
push
jle
lahf
xchg
rclb
xchg
sub
cltd
repnz
hlt
mov
jo
dec
andl
popa
lds
movl
jno
mov
sub
mov
cmp
cmp
mov
fcmovnu
push
jb
inc
enter
cmp
push
lret
in
jae
xchg
mov
jp
jae
scas
add
ss
jecxz
mov
mov
rcll
insb
mov
dec
cwtl
bound
xlat
outsb
jbe
rclb
cs
stos
mov
pushf
and
shlb
scas
lea
cltd
dec
daa
icebp
xchg
cmp
add
mov
mov
out
insl
jecxz
cmpsl
jnp
stos
test
lock
push
ss
stc
fsubrs
mov
adc
iret
aaa
sub
daa
inc
sbb
aad
mov
lea
cmpsl
cmp
cmp
scas
jo
mov
push
dec
and
idivb
xchg
mov
data16
mov
jno
xchg
cs
xchg
cmpb
sub
out
pushf
or
les
sbb
ret
mov
push
repnz
mov
insl
dec
cli
and
ficompl
push
mov
or
pusha
cmpsb
xor
cmp
push
or
insl
or
sub
fwait
stos
xor
jecxz
sarb
mov
lret
in
sub
cmp
ss
mov
clc
cmp
push
js
mov
xchg
movsb
jg
adc
pop
pop
inc
cmp
subl
arpl
cmp
mov
imul
jns
sbb
add
std
out
lcall
dec
les
loope
dec
lret
repz
xor
in
lods
lahf
cwtl
fneni(8087
cld
adc
sub
rcrl
push
js
inc
jp
jae
mov
push
or
dec
pop
xor
add
dec
lcall
sbb
pop
and
movsl
or
mov
rorb
ja
jns
mov
lea
in
aad
pop
jne
adc
sahf
mov
imul
push
ficoms
pop
iret
adc
sbb
out
mov
inc
test
xor
pop
dec
sbb
arpl
or
int3
push
jmp
mov
jno
mov
ret
inc
or
sbb
push
dec
cmc
pop
loopne
icebp
arpl
dec
xor
xor
jmp
fdivrs
sbbl
inc
and
lods
aas
jle
fcompl
testb
sti
cwtl
adc
jecxz
and
in
pop
outsl
nop
cmp
push
xchg
aad
insl
inc
jbe
inc
adc
insb
or
jecxz
loope
adc
lods
mov
inc
or
cmpsl
data16
data16
inc
dec
out
and
popf
jnp
add
mov
std
pop
ss
sbb
lds
inc
or
mov
adc
jnp
in
fmulp
and
adc
sbbl
int3
or
andb
test
xchg
xor
cld
adc
and
fisubs
scas
addl
in
sbb
dec
int
push
out
sbb
or
inc
mov
xchg
mov
dec
dec
push
mov
inc
mov
cmp
test
mov
push
cld
icebp
inc
enter
hlt
mov
pop
sub
push
movsb
mov
jns
sub
cmp
sti
jecxz
push
dec
fadd
jle
adc
cwtl
jl
ljmp
push
movsb
pop
mov
adc
mov
mov
sub
in
lock
sub
xor
mov
mov
and
mulb
cmp
sub
jle
cwtl
shrl
popf
cmp
pop
popf
pop
push
mov
push
in
xorb
mov
pop
in
in
fs
int3
xor
lods
pushf
xchg
enter
pop
fisubrl
loopne
inc
pop
xchg
xchg
lods
sub
add
test
jle
fistps
xchg
sti
and
sub
aam
scas
xor
mov
nop
packuswb
enter
mov
ss
fidivrl
mov
push
fisttps
or
mov
imul
and
in
pusha
sub
mov
adc
rorb
shlb
into
lds
fildll
les
cmp
in
test
pop
push
mov
es
leave
jns
sub
gs
into
mov
js
add
lret
mov
js
sti
or
aas
in
pop
into
enter
push
pop
scas
mov
bound
pop
xchg
sbb
xor
push
dec
sub
xchg
push
popf
mov
out
inc
fs
fisubrl
pop
cmp
pop
xchg
aas
cwtl
mov
out
mov
push
popf
aas
inc
ljmp
incb
loope
imul
hlt
xorb
aaa
outsl
fisubrl
cwtl
cmp
shll
add
stc
in
mov
inc
idiv
lret
push
cmp
push
mov
test
lahf
add
es
sbb
call
int
std
sbb
jo
rorb
sbbb
repnz
scas
push
jmp
call
mov
pushf
mov
jno
xchg
mov
jns
jo
jo
icebp
pop
xor
sub
jae
jbe
jb
fisttps
xor
fwait
cltd
cmpsl
and
sbb
lret
lret
orb
mov
mov
icebp
xor
jns
mov
iret
dec
jmp
xor
xor
icebp
mov
or
dec
push
ss
sarl
mov
aas
lods
iret
das
mov
out
out
rcl
scas
sub
pop
iret
pop
and
adc
mov
xor
ret
pop
fisubs
fwait
test
xlat
fists
add
call
scas
mov
mov
jbe
mov
mov
pop
gs
cwtl
popf
test
ja
stos
inc
repnz
pop
push
clc
push
jg
adc
mov
cmp
js
pop
sti
xchg
push
clc
shll
jp
pop
mov
mov
cltd
xchg
push
xor
cwtl
and
pushl
int
mov
nop
call
pop
les
jne
ficompl
test
jle
dec
and
popa
into
pop
add
xor
or
subb
bnd
outsb
mov
in
roll
fcmovu
cmpb
jecxz
mov
ljmp
add
negb
out
lea
in
ret
repz
push
lret
mov
mov
pop
mov
sbb
sub
jno
pop
push
in
inc
js
in
cmp
les
sub
imul
fs
mov
or
fadd
or
xchg
and
adc
and
jb
mov
sbb
fdivl
fsubl
roll
xchg
jecxz
les
cltd
pop
and
clc
cmp
fisttps
bnd
fiaddl
jmp
pop
repnz
dec
lcall
scas
mov
fcmovbe
mov
push
cmpsb
pop
jno
adc
mov
scas
add
ja
loopne
lret
fnstenv
push
test
pop
andl
mov
clc
adc
dec
in
mov
pop
xor
mov
arpl
inc
and
lea
cmp
lods
pop
jbe
das
lea
xchg
or
inc
cmp
aaa
enter
imul
sbb
mov
jle
stos
icebp
xchg
mov
dec
sti
sbb
mov
and
xor
push
in
pop
sub
or
adc
ljmp
cmc
leave
sbb
arpl
sbb
mov
dec
nop
add
and
mov
insl
pop
push
fnstsw
daa
adc
incb
add
xchg
les
xlat
shl
mov
mov
mov
mov
ret
outsb
jge
ficoms
push
pushf
xor
jno
jnp
mov
xlat
out
push
and
iret
ficomps
lahf
fadds
mov
jno
and
rclb
jne
sbb
adc
xchg
ret
addr16
gs
and
jo
or
sub
push
dec
das
into
jbe
mov
testl
cmp
movsb
jmp
out
icebp
fdivp
xlat
or
sar
pop
test
mov
adc
rclb
jmp
stos
push
lret
les
xor
mov
mov
call
cmp
dec
aad
and
jle
add
mov
dec
in
jmp
aaa
and
nop
xlat
shrl
jno
into
push
daa
inc
adc
clc
mov
mov
xchg
and
test
xchg
test
leave
frstor
lret
sbb
and
loopne
fstpl
xor
mov
bound
and
test
sarl
push
mov
xchg
xchg
rorb
push
pushf
or
mov
js
adc
sbb
int
je
sti
aaa
or
cmp
popf
xor
jmp
pop
add
ret
xor
ret
aam
sub
outsl
add
mov
ds
insb
add
out
jmp
xor
push
dec
fiadds
dec
es
das
mov
and
out
mov
out
lds
rcll
test
call
mov
hlt
rclb
in
add
inc
out
test
adc
incb
cwtl
cltd
idivl
xorl
pop
pop
faddl
sar
xchg
int
mov
test
sbb
test
push
mov
push
aad
idivb
imul
xor
dec
clc
xchg
lahf
cmp
or
jl
dec
loope
lret
pop
inc
jnp
add
jno
mov
mov
int3
mov
mov
loope
out
jae
mulb
push
push
push
mov
stos
stos
sbb
and
test
xor
xor
iret
xor
jge
scas
xorl
sbb
mov
jle
addr16
movsb
xor
mov
mov
xor
jmp
stc
inc
and
or
jns
xchg
dec
push
mov
les
xchg
xchg
pop
icebp
xchg
xor
fwait
popa
cmpsl
ds
xorb
out
fidivl
xchg
push
pop
push
mov
pop
dec
add
fwait
xchg
dec
lods
fsts
sbb
loop
sub
sub
sarb
cmp
add
push
xor
mov
xchg
sbb
arpl
or
je
xchg
mov
xchg
jno
fmulp
pop
push
out
pop
cld
jns
mov
adc
push
roll
mov
call
ss
in
push
fsubs
dec
adc
sub
loop
cs
pop
sbb
xor
ja
pop
push
ja
out
cltd
mov
mov
out
mov
inc
js
jmp
inc
hlt
xor
mov
inc
shl
dec
pop
jb
clc
and
clc
lret
mov
mov
iret
bound
repz
subl
in
mov
into
mov
test
mov
sub
cmp
cwtl
fcmovbe
xlat
fidivrl
lret
jg
adc
movsl
cs
cmpsb
push
pop
mov
adc
pop
das
cmpsl
cmp
or
outsb
loope
fucompp
cltd
jl
push
popa
and
pop
sbb
jecxz
in
hlt
push
bound
sbb
aaa
xlat
or
out
jle
mov
push
pushf
fstps
mov
lahf
cwtl
push
stos
pushf
test
mov
lods
or
out
test
mov
not
mov
mov
mov
mov
aam
mov
addr16
xor
icebp
sub
aaa
xchg
cwtl
insl
sub
adc
cmc
jbe
sub
push
in
int
or
iret
sti
outsb
lock
rclb
lahf
cmp
nop
mov
pcmpgtb
jo
xor
fistl
mov
outsb
aam
jae
insl
loop
or
mov
call
insl
cld
pop
or
and
leave
les
aam
ja
jge
cltd
jmp
push
xor
les
movl
fdivl
into
adc
scas
cmpl
fcmovnu
mov
pop
pop
push
push
stos
punpckhdq
out
ret
adc
in
sbb
pop
inc
mov
or
jmp
adc
inc
insb
mov
popf
pusha
repnz
jmp
push
dec
add
sahf
aam
shlb
imul
adc
mov
dec
jnp
ret
aas
call
cmp
push
jmp
mov
popf
mov
pusha
into
into
xchg
stc
mov
sti
cmp
pushfw
pop
and
jne
out
aaa
mov
or
pop
lahf
je
sub
push
movsl
aam
mov
xchg
popa
lods
test
lds
insl
dec
iret
dec
repnz
add
push
fbld
nop
add
pop
pop
les
push
shlb
dec
test
icebp
dec
mov
ret
stc
jg
lret
mov
xchg
loopne
insb
pushf
sub
lods
sbb
arpl
xchg
call
jmp
cmpl
or
js
push
jmp
je
jl
cltd
push
inc
pop
fwait
jle
lret
mov
push
push
movsb
adc
inc
fcmovnu
add
inc
ja
or
lahf
jb
jp
dec
mov
fs
cmc
daa
jl
or
dec
aaa
xchg
push
aam
jns
std
xor
and
pop
mov
lahf
int
cmp
or
or
mov
or
in
lods
icebp
inc
out
sbb
push
test
mov
xchg
decl
mov
ret
rol
pushf
dec
out
pop
sbb
push
xchg
add
rorl
or
lret
push
ret
dec
cmp
out
push
cmpl
xchg
mov
movsl
je
mov
xchg
sbb
ss
inc
mov
dec
adc
or
and
pusha
ret
mov
sub
popa
adc
shrl
xor
call
push
test
mov
push
jnp
adc
push
dec
push
mov
inc
cs
sbb
es
mov
andl
imul
cmp
inc
lods
pushf
cmp
or
cwtl
pop
pop
mov
fnsave
pop
cwtl
int3
sbb
sub
repnz
mov
adc
out
jo
or
and
nop
mov
jo
rcll
jno,pt
adc
ja
fdivrl
stc
mov
rolb
or
xor
cmp
les
adc
or
and
cmpb
dec
xor
js
gs
loope
and
mov
xchg
lock
in
in
mov
imul
lock
test
adc
or
and
es
divl
push
fstps
loop
mov
mov
out
cltd
movl
out
outsl
adc
dec
ret
jmp
mov
xchg
fstl
jnp
adc
inc
pusha
xchg
dec
xchg
lcall
jbe
popf
lcall
jge
push
lds
jne
mov
and
xchg
pop
xchg
jae
inc
and
add
jge
das
xlat
iret
lock
push
lahf
rorl
ficoml
or
cltd
fwait
insb
roll
lret
es
movsl
jg
imul
xor
ja
pop
jne
cmc
mov
orl
std
cmp
icebp
cltd
push
and
push
cmc
push
mov
and
push
loopne
lods
pushf
or
das
mov
sbb
mov
xor
insb
fsubr
adc
or
in
pop
or
hlt
out
mov
pop
sbb
mov
test
enter
mov
into
shll
sti
mov
pusha
push
aas
and
cmp
jp
xchg
nop
das
jae
ja
cmp
adc
lret
pop
std
gs
cmpsb
and
or
mov
xchg
addr16
push
jo
int
imul
stos
mov
ret
dec
mov
jp
pop
push
frstor
jge
ror
sbb
add
pop
mov
into
mov
sbb
sbb
rorb
xor
dec
pop
arpl
pusha
icebp
pushf
sahf
sar
jns
in
add
adc
xchg
pop
daa
cmp
sub
mov
outsl
ja
cmpl
inc
pop
popa
sub
dec
filds
jns
sbb
jle
sub
mov
adc
out
cmc
clc
rol
int
in
mov
subl
popf
int
xor
dec
cmpsb
jge
fucomp
cwtl
aad
cmpsl
cmp
pop
pusha
repnz
dec
pushf
inc
pop
dec
fs
inc
ja
xor
stos
jae
loop
enter
lock
call
in
sbb
out
call
mov
ret
mov
pop
arpl
into
es
pop
ljmp
sbbl
push
data16
sub
mov
cmpsl
jnp
in
test
loope
out
push
js
jo
sub
loop
mov
or
repnz
in
call
cmp
in
adc
add
mov
jae
das
jnp
jae
and
cwtl
pop
fsubl
mov
lcall
scas
cmpsl
int
fs
adc
loop
out
notl
shrb
or
in
repz
popf
inc
jecxz
outsb
dec
xor
jle
pop
andb
cli
cmp
pop
and
cmpb
je
xchg
mov
and
in
pop
mov
or
jge
xchg
cmp
sub
jb
and
push
ficompl
test
and
sbb
jecxz
and
sbbl
add
jne
icebp
xor
outsl
jbe
gs
das
push
out
das
pop
pop
fistpll
mov
inc
mov
ss
pop
sub
cmp
fcomp
cmp
sbb
mov
xlat
fldcw
push
mov
lcall
imul
adc
popf
push
insb
jmp
and
cmp
jae
bound
jne
call
add
inc
movsb
js
inc
xor
jp
jno
sbb
xlat
inc
dec
repz
pop
mov
adc
popf
lret
cwtl
mov
adc
dec
mov
mov
mov
in
adc
imul
clc
fcmove
push
xor
and
pusha
testb
test
xor
ret
test
fiaddl
cmp
pop
pusha
jmp
inc
fsubs
mov
popf
push
cld
dec
inc
jp
jg
jno
ds
and
add
lcall
cltd
pop
mov
jge
ror
and
clc
push
fsts
sub
xor
mov
aas
xor
cwtl
pop
les
cltd
data16
inc
xchg
inc
mov
fadds
in
mov
push
pop
pop
pop
xchg
and
aaa
sbb
call
jle
in
scas
loop
mov
mov
sbb
mov
jmp
test
mov
mov
popa
lock
mov
dec
lock
out
lret
popa
jb
in
xor
scas
ficoms
cmp
test
adc
push
add
int3
jns
jmp
divb
inc
push
pop
mov
mov
push
inc
psrad
jo
jg
mov
lock
scas
andb
xchg
insl
jns
fidivs
mov
insl
push
sbb
bsf
sbb
mov
xor
push
filds
adc
sbb
adc
addr16
in
pop
popa
cltd
insb
data16
adc
inc
dec
sbb
mov
push
cmp
int3
lods
gs
mov
add
loope
pusha
mov
xchg
mov
ds
or
xor
pop
xchg
stos
jo
rcll
inc
mov
jge
cld
daa
cli
ds
pusha
jnp
jg
scas
jp
push
mov
pop
xchg
shlb
enter
mov
xor
mov
in
pop
cmp
push
das
mov
inc
repnz
popf
push
and
inc
xor
push
cmp
sub
adc
sbb
stos
orl
push
xorl
inc
in
mov
orl
jg
inc
xchg
dec
jbe
sub
cmpsb
push
adc
dec
shrb
dec
add
ret
into
dec
jns
loop
mov
insl
jle
stos
mov
mov
lods
or
int
aaa
xlat
dec
jl
pop
mov
adc
in
cmpsb
sbb
mov
lods
add
xor
fs
adc
push
sub
adc
mov
leave
sbb
arpl
mov
mov
fildl
cmp
shrb
loopne
cwtl
mov
sub
sarb
and
lcall
add
mov
adc
mov
vpcmov
cltd
adc
shll
cmc
dec
sub
sub
lea
popf
lea
int3
dec
jp
negb
jmp
xor
nop
mov
scas
fs
xchg
sahf
cmp
test
out
rcrl
fcomi
mov
push
frstor
sarb
or
js
cs
adc
sbb
sahf
out
imul
push
imul
push
mov
aad
inc
sbb
and
mov
jp
sub
add
pushf
inc
xlat
adc
inc
je
dec
sti
repnz
pop
iret
ret
sub
add
int3
push
cmc
push
adc
push
rclb
sbb
sbb
xorl
add
lds
and
mov
ljmp
or
call
bound
dec
mov
imul
push
add
in
sub
sbb
scas
add
in
and
daa
jno
ds
xchg
sub
stos
rcl
mov
xor
cmp
loopne
iret
or
aad
push
int
xchg
scas
jns,pn
inc
pop
cmp
jl
scas
jecxz
pop
inc
pop
bound
sbb
or
es
and
or
ret
ret
jbe
mov
or
and
mov
sub
shlb
dec
dec
stc
add
dec
xchg
dec
shlb
rcrl
clc
mull
pextrw
xor
mov
xor
in
cmpsb
cld
jmp
gs
pop
lea
jp
and
fwait
cmpsb
push
dec
sahf
mov
push
sbb
xor
pop
fbld
imul
data16
stos
ljmp
mov
mov
push
mov
xor
mov
mov
ret
fmuls
jne
xchg
aas
jl
cmp
push
jge
outsl
std
movsl
pushf
das
insl
out
clc
xor
ret
into
int
inc
mov
sub
mov
mov
sti
in
scas
stos
lock
xchg
cmp
sub
test
lret
cs
push
push
jg
out
mov
mov
xlat
addl
xor
cmp
fwait
test
push
dec
or
sar
aaa
pop
roll
add
repnz
mov
ret
push
adc
xchg
ljmp
sub
mov
es
push
nop
addb
ljmp
sbb
jle
xlat
loop
jae
lret
dec
mov
cmp
pushl
push
mov
jl
repnz
leave
xchg
and
shrb
int
in
nop
xchg
xor
or
dec
cld
add
aas
aaa
stos
push
test
jge
xor
scas
daa
lods
add
gs
add
add
aam
xchg
cmc
xchg
loope
push
mov
pop
mov
jo
shrl
pop
inc
aas
pop
ret
sbb
scas
shrl
cmp
popa
dec
inc
andl
and
xchg
data16
xor
inc
xchg
jle
mov
out
add
xchg
rcll
je
fwait
cmp
in
and
ss
int
jbe
mov
and
inc
xor
and
or
xor
into
sti
ret
repnz
mov
lock
call
sbb
or
lods
add
dec
incb
int3
decb
outsl
dec
mov
jp
enter
into
jb
movsl
fcompl
int
and
outsl
push
leave
xchg
js
gs
xchg
mov
pop
adc
pop
sbb
mov
lcall
cmp
mov
loop
mov
jmp
rcl
xchg
cmc
movsl
lods
daa
pop
xchg
lds
iret
cwtl
aas
xchg
push
push
repz
lret
add
imul
jmp
fnstcw
mov
test
inc
imul
cmp
std
adc
push
jbe
push
inc
push
xchg
lds
cltd
or
pop
and
sbb
sti
ret
fcoml
cmpsb
pop
xlat
adc
xor
stos
shrb
adc
mov
scas
push
lock
add
push
adcl
loope
lret
ficoml
popf
cwtl
outsb
sbb
dec
shl
or
mov
jmp
mov
mov
inc
popf
dec
cld
pop
or
fiaddl
pop
out
inc
testl
jno
sbb
iret
sbb
mov
push
lods
jle
loope
mov
enter
cmpsb
int3
fnsave
dec
xor
sbb
mov
aas
lahf
push
push
clc
pusha
mov
or
sbb
dec
mov
sarl
xchg
stc
dec
pop
add
pop
idivb
dec
mov
cmp
mov
sub
and
mov
jg
scas
int
je
call
out
inc
or
adc
mov
lret
push
arpl
out
movsb
adc
mov
hlt
xchg
mov
jns
loope
pop
or
mov
out
popa
and
lock
loopne
xor
xor
and
mov
push
xchg
xchg
sbb
das
loopne
popa
mov
inc
and
int
xlat
push
iret
scas
mov
cmpb
jg
add
xor
cltd
xchg
mov
orb
movsl
test
in
popf
or
mov
ret
push
jp
push
addl
cmc
sahf
jbe
dec
stos
cwtl
loope
mov
lods
jno
jo
lds
std
push
lock
mov
shlb
test
push
xor
push
jmp
repz
add
orb
fiadds
mov
and
repnz
subb
shlb
outsl
iret
lock
sub
or
jle
pop
xchg
rorl
mov
push
sarb
addr16
lea
daa
jb
repz
mov
push
mov
loope
cmc
cltd
jnp
ret
shl
sahf
push
pop
pop
cs
adc
out
dec
adc
bound
pop
sub
mov
mov
cmp
mov
and
mov
inc
clc
roll
push
adc
arpl
das
into
mov
adc
and
dec
bound
or
and
aad
xchg
and
sbb
adc
cmp
in
incl
mov
pop
mov
movsl
fsubrl
mov
mov
mov
push
iret
ja
mov
or
adc
pusha
pcmpeqd
not
inc
mov
ss
mov
int3
xchg
leave
sub
cli
sub
es
push
xor
and
daa
cmc
mov
mov
add
sti
adc
sub
test
aam
mov
pop
insb
icebp
test
sub
mov
push
sahf
add
incb
mov
xchg
aas
fs
mov
adc
sbb
mov
shlb
orb
pop
jno
push
bound
jmp
imul
dec
cmp
outsl
mov
add
fnstcw
loop
shrl
inc
or
lea
jmp
cli
arpl
mov
jmp
icebp
add
push
movsl
into
mov
adc
pushf
fs
mov
inc
mov
inc
repnz
mov
imul
jno
in
adcl
mov
in
arpl
repnz
scas
xor
sub
aaa
jb
scas
adc
push
call
jns
fmull
hlt
sub
adcl
test
fisubrs
xchg
lds
into
jns
and
mov
cmp
fisttpl
mov
pop
push
sahf
pop
fwait
ds
pop
fsubs
cli
dec
sahf
jecxz
nop
fucomp
pop
cmp
loopne
xor
out
aaa
xchg
jl
mov
stos
pop
sbb
jnp
popa
sahf
sub
jb
fs
xchg
sbb
loop
jmp
xor
jno
xlat
aam
sbbb
pop
data16
pop
lods
xor
jmp
nop
lods
cli
mov
iret
mov
inc
ljmp
std
fwait
mov
imulb
jbe
mov
std
arpl
jmp
pop
adc
sti
jg
mov
cli
cmp
xchg
in
and
pop
xor
mov
mov
pop
insb
fidivl
scas
sbb
cld
jns
jns
xchg
movsb
jmp
shrb
das
xchg
mov
cmp
in
aam
int
jne
mov
push
dec
cmp
inc
jg
repnz
xchg
pop
cmp
adcb
sahf
sub
pushf
cmpsb
loopne
out
ss
push
cld
pop
sbb
mov
pop
cmp
sub
std
lahf
jle
mov
in
out
pushf
cmp
test
cmp
fwait
cmp
cmp
stc
leave
and
dec
push
mov
push
jmp
xchg
add
shlb
inc
inc
cmp
cmpsl
cmpl
arpl
inc
push
jne
jecxz
sbb
arpl
pop
es
cmp
mov
imul
mov
arpl
mov
fst
sbb
lahf
ljmp
inc
xor
push
ja
fildll
cmp
jge
dec
add
sti
cwtl
ret
adc
inc
jle
fwait
inc
aaa
dec
pop
pop
fists
mov
and
mov
jge
bnd
mov
outsb
aaa
jnp
xchg
pop
add
mov
jp
jecxz
xchg
adc
in
clc
ret
mov
enter
movsb
fnstenv
dec
or
faddp
subl
push
jns
into
jb
idivb
push
jbe
push
sbb
test
adc
dec
dec
icebp
push
es
adc
cmp
dec
add
xchg
not
fwait
aam
sub
pop
ljmp
insl
outsb
stc
xchg
mov
into
inc
push
in
xchg
push
clc
pusha
mov
sbb
pop
jl
sbb
mov
dec
mov
scas
jo
inc
fwait
mov
shlb
rcr
add
jb
shll
inc
inc
mov
lea
push
movsl
xchg
cmpsb
sarl
iret
fwait
je
mov
pop
lods
scas
sahf
loope
pop
mov
je
dec
cs
and
cmp
in
mov
mov
data16
xchg
shlb
pop
jne
sub
pop
cmpsl
incl
popf
aaa
hlt
aaa
xor
lret
pop
xor
xor
mov
les
stos
ja
push
fldt
fidivrl
je
xor
test
std
or
mov
or
addb
and
xor
mov
rcr
sub
cmp
xchg
inc
xchg
and
cmp
push
or
movsl
leave
scas
xchg
pop
adc
dec
push
aad
inc
aaa
call
add
icebp
jmp
popa
ficompl
addl
imul
cmp
pushw
testl
xorl
push
mov
xchg
xchg
dec
rcrl
test
cmc
and
int3
sbb
scas
bound
or
adc
xor
bound
push
pop
loopne
xlat
sub
cwtl
aas
mov
in
or
int
jae
cmp
cli
sti
mov
movsb
outsb
sbb
mov
lods
test
and
or
sub
and
cvttps2pi
adc
icebp
sbb
push
rolb
test
push
les
xchg
shlb
mov
aaa
pop
dec
add
push
loopne
stc
mov
and
fists
adc
xor
or
test
scas
mov
pop
mov
sbb
insl
mov
test
inc
lods
out
mov
mov
pop
out
ficompl
test
jne
mov
xchg
cs
bnd
push
ffree
xchg
ja,pt
hlt
xor
jle
mov
dec
adc
jns
sub
push
xor
daa
pop
adc
push
ret
mov
gs
imull
mov
jno
aad
or
loope
in
xchg
imul
and
adc
adcl
jbe
je
aas
dec
sbb
bound
xchg
pop
ljmp
xor
popa
mov
repnz
push
mov
xchg
cmp
ja
rolb
mov
outsb
inc
shl
fnsave
loop
mov
xor
call
cmpsb
lock
sbb
or
das
lcall
push
adc
xchg
mov
cmc
push
mov
adc
dec
jge
pusha
cmpsl
in
cld
lock
mov
xor
or
lock
hlt
xchg
fisubl
movsl
aam
mov
push
cmp
popa
mov
and
push
or
jg
test
jo
pop
jno
inc
or
ss
jno
inc
jae
xchg
cmpsl
mul
lcall
xchg
pop
dec
lahf
es
adc
lret
imul
fs
jnp
mov
out
pop
mov
in
push
mov
mov
push
lods
int3
sub
mov
mov
incb
mov
rep
sti
fs
fcmovnu
in
dec
push
or
or
mov
rolb
pusha
push
inc
je
movsb
sub
subb
sti
xchg
aaa
xchg
mov
jo
dec
int3
mov
push
adc
adcl
push
sbb
add
sub
add
std
inc
mov
popf
movsb
adc
pop
in
xchg
xor
lods
dec
shlb
fistpll
mov
xchg
sahf
sahf
cs
js
fildl
fadds
push
mov
ret
and
in
dec
lods
mov
test
lods
add
jo
inc
movups
xorl
call
adcb
pop
or
fldl
xchg
mov
data16
xchg
ret
outsl
mov
pusha
sahf
pushf
xor
or
lret
pop
enter
lock
pop
fldenv
jns
ss
sub
inc
sbb
mov
insl
sub
inc
into
pop
cmpsb
xor
int3
lcall
xor
adc
das
xchg
push
pop
adc
les
adc
add
ret
pop
fcmovnb
mov
push
cltd
cmp
mov
jmp
add
int3
mov
in
pop
mov
mov
push
outsb
pop
les
jl
popa
jge
rolb
shl
mov
cmp
lret
hlt
sbbl
adc
in
stc
addr16
adc
dec
cmp
scas
mov
iret
jno
cmp
or
inc
and
rorb
inc
jp
test
xor
stc
cwtl
pop
push
mov
xor
shrb
ror
xor
sub
aam
f2xm1
jns
mov
sub
clc
shlb
std
fadds
outsb
and
aam
addb
ficoml
or
int3
and
push
inc
fbstp
xchg
inc
ljmp
sbb
dec
push
xchg
lods
lahf
stc
cld
imul
mov
insl
lea
mov
inc
sbb
inc
pop
sbb
movsl
addr16
or
push
outsl
orb
mov
popa
mov
cs
fwait
lret
fs
mov
dec
xchg
fnstsw
and
into
cmp
gs
outsl
sub
jns
fisttpl
mov
sub
mov
das
test
dec
daa
popa
stos
mov
mov
popf
jns
test
movsb
cmp
pushl
add
mov
push
popf
mov
bound
jae
hlt
notb
add
jb
adc
daa
popf
adcl
xchg
adc
insl
test
loop
dec
je
dec
loop
out
mov
mov
sbb
fmul
cwtl
pop
pop
inc
pop
mov
adc
mov
sub
ljmp
jg
push
dec
mov
popa
sti
shrb
ds
stos
push
jns
sub
popa
fld1
sarl
je
inc
adc
roll
stc
imul
lods
sbb
test
inc
int
sub
es
xchg
dec
or
cmp
inc
xchg
xchg
xor
dec
test
xchg
cmp
push
ficompl
nop
cmp
pop
lea
push
xchg
dec
mov
into
lods
and
daa
cmp
out
cli
inc
mov
push
test
addb
mov
mov
notb
or
mov
xchg
sbb
imul
lds
enter
fldcw
adc
push
mov
insb
xchg
or
push
inc
and
adc
cld
popf
mov
mov
aaa
into
lock
lcall
in
push
popa
push
mov
fstp
movsb
mov
mov
xchg
mov
mov
fwait
stos
inc
pushf
scas
mov
jecxz
mov
maskmovq
xchg
mov
pop
cmp
leave
pop
adc
rolb
int
stc
sti
xlat
or
inc
sbb
stc
mov
aas
sub
and
xchg
dec
frstor
inc
cli
scas
scas
movsl
ret
fwait
dec
inc
xlat
lock
movsl
sub
inc
mov
call
mov
lods
mov
les
sub
aam
sahf
mov
das
add
lret
lds
fyl2x
test
sarb
popf
nop
xchg
nop
mov
mov
add
push
divb
pop
out
int3
xor
roll
int
scas
insl
hlt
or
mov
lcall
adc
sti
enter
mov
hlt
ror
or
sbb
test
dec
pop
mov
fdivrs
or
shrb
and
les
jge
aam
dec
push
test
mov
jae
lock
mov
in
fldl
mov
mov
dec
push
std
scas
ljmp
inc
aam
enter
mov
add
cmp
jns
mov
lods
pop
push
fisubrl
xchg
dec
mov
dec
loopne
dec
lret
sbb
pop
lods
nop
aad
rol
std
andl
cmp
stc
sub
out
addr16
sub
into
push
leave
out
jle
cli
mov
ds
movsl
cmp
lret
int3
jecxz
outsl
sahf
mov
push
mov
inc
fwait
popf
mov
add
mov
pop
pusha
inc
jp
insb
repz
lock
gs
fstpt
test
ljmp
jmp
xor
shrl
cmp
in
pusha
dec
mov
ja
test
mov
xlat
in
loope
scas
jbe
jo
sti
into
subl
shl
mov
pop
stc
pop
lret
stos
inc
push
out
sbb
cli
inc
out
sbb
dec
push
jmp
pop
xor
insl
in
xchg
sbb
movsl
daa
inc
int
cmp
cmovno
push
out
mov
adc
loopne
lods
xor
test
cld
mov
and
mov
cmp
adc
mov
add
mov
lcall
les
out
inc
cmp
fimull
pop
fbld
scas
arpl
leave
xchg
fs
sub
ds
test
mov
out
jnp
push
bnd
xor
lods
das
jno
lds
or
addl
fidivl
or
lods
cmp
test
xor
jns
pop
jp,pn
inc
in
jge
xchg
out
mov
lret
xchg
sti
cmp
fcmovnb
aas
lcall
out
cmpsl
mov
jae
hlt
mov
mov
orl
mov
mov
loopne
int3
mov
outsb
popa
jmp
rsm
out
movsl
sti
or
adc
les
xor
cld
mov
in
sbb
xor
jge
xchg
int
mov
xor
lahf
in
mov
push
addr16
out
cmpsl
fwait
loopne
add
insb
fdivrl
ret
mov
insb
add
or
insb
add
mov
jnp
pop
enter
int3
fisttps
adc
roll
stos
push
shll
mov
adc
enter
jl
fwait
mov
test
pop
fdiv
mov
add
shl
sub
push
lahf
nop
inc
cltd
add
dec
jg
or
in
mov
ja
cmpsb
cwtl
pop
stos
dec
mov
xor
popl
push
push
into
aas
jmp
pop
loop
dec
js
testb
sbb
fnsave
and
jecxz
cvtps2pi
mov
dec
mov
jge
jg
arpl
movsb
sub
or
xor
sarl
mov
mov
in
test
iret
mov
sub
sub
shrb
roll
sbb
mov
jge
fcoml
xchg
dec
cmc
rclb
jmp
mov
mov
xchg
or
les
sbbb
sub
jo
insl
adcb
and
shrb
mov
fildll
pop
test
dec
jl
xor
aam
xchg
mov
popf
mov
rcl
cmp
push
dec
dec
adcb
pop
and
fsubr
mov
popa
cmp
sub
sub
scas
jo
sti
or
out
lds
inc
mov
push
js
ljmp
cmpsb
add
cs
fs
clc
xor
jmp
bound
inc
cmpsb
jno
sti
test
popf
pop
jno
hlt
cs
xchg
sub
sbb
popa
in
pop
cmp
lods
rcrl
inc
cmp
js
mov
mov
jno
arpl
adc
mov
pusha
xorb
xor
sbb
adc
jp
js
sbb
inc
out
lret
aad
sub
test
andl
cwtl
nop
push
sarb
push
push
inc
sbb
out
ret
add
shl
hlt
jg
jmp
movsb
sar
movsl
add
std
test
pusha
xchg
mov
cmp
fiaddl
je
ja
pop
sahf
xchg
and
mull
push
out
fiaddl
xchg
lea
fwait
xor
add
popf
popa
shll
mov
push
mov
cmp
out
loop
fbstp
mov
bound
aam
out
movsb
in
out
aas
test
add
or
pop
jne
mov
sar
pop
std
lcall
dec
lds
push
mov
fldl
jns
fcmovb
out
out
pop
data16
mov
adc
add
push
xorl
sbb
xor
mov
lret
jb
push
addr16
or
int3
lods
and
cli
in
popa
mov
inc
sahf
adc
test
mov
jb
sbb
xor
cs
add
mov
xchg
inc
jge
leave
push
pop
inc
push
and
in
or
rcr
adc
scas
and
or
mov
fs
cmp
movsl
inc
mov
out
mov
notb
je
bound
mov
cli
in
jne
movsb
fmull
mov
in
jnp
aam
shlb
xor
aas
mov
leave
or
jge
bound
xor
mov
or
jg
mov
jecxz
jg
js
dec
sbb
call
cs
add
test
cli
pusha
sub
add
stc
cmp
inc
test
divb
les
or
jl
stc
adc
inc
cmc
push
or
lahf
mov
xor
negl
vpxor
jno
cmpl
pop
pop
lret
mov
insb
push
and
and
in
mov
rcl
mov
cmp
pop
xor
loop
nop
mov
jne
sbb
xchg
mov
pop
in
lods
orb
cmp
xchg
mov
xchg
sbb
arpl
mov
sbb
fnsave
xchg
adc
push
and
adcl
shl
mov
or
add
inc
pusha
dec
sbb
sarl
cwtl
mov
mov
aad
testb
mov
mov
popl
jmp
mov
add
sahf
leave
repnz
push
inc
adc
call
xchg
sahf
cmp
jno
xadd
jp
mov
imul
loopne
push
test
and
or
adc
mov
mov
jnp
sub
jnp
fbstp
insb
pop
cli
fimull
stos
and
mov
and
sub
in
xor
and
flds
lcall
fisttpll
jae
or
and
stos
std
inc
jmp
or
add
test
hlt
stos
pop
mov
and
cmpb
pushf
or
repnz
push
push
sub
xor
fisubrl
add
cmp
jne
rolb
jp
mov
or
dec
add
push
sbbl
adc
shrl
cmp
idivb
ficompl
imul
mov
xchg
jne
enter
in
add
or
xor
loopne
test
and
jb
mov
jnp
in
mov
lods
jg
mov
push
sbb
xchg
lods
lea
ret
lahf
lds
aam
stos
pusha
bound
mov
dec
scas
pop
xchg
sahf
xchg
test
pusha
or
mov
mov
jno
fwait
call
adc
out
outsb
push
negl
mov
push
push
lret
inc
pop
inc
pop
pushf
popf
xchg
loop
ret
jecxz
mov
sbb
mov
and
es
inc
xchg
pop
cmpb
movsb
xchg
ret
xor
popa
xchg
push
int3
js
xlat
js
dec
xlat
vpsubsw
aas
cmp
adc
push
inc
mov
cmp
mov
aaa
fmull
idivb
xor
jp
dec
mov
stos
das
aad
pusha
xchg
aam
imul
cmp
not
inc
call
xchg
and
jmp
movsl
jp
shrl
push
int
lcall
adc
jns
mov
test
movsl
ljmp
fsts
bound
fsubr
xor
pop
jle
sahf
pop
adc
xor
mulb
rorl
aad
push
lcall
push
push
adc
inc
pop
inc
ljmp
push
sti
sub
inc
mov
pop
lret
jmp
scas
addr16
push
fdiv
push
rorb
mov
mov
ror
ret
mov
fisubrs
mov
xor
and
add
cltd
inc
sub
push
sbb
cmp
jle
rcrl
cmp
sub
mov
push
pmuludq
dec
mov
lahf
jp
pop
mov
into
cwtl
sbb
add
dec
xchg
aas
jp
aam
leave
push
subb
inc
dec
xchg
cmpl
iret
das
mov
xchg
fistps
and
movsb
and
jg
sahf
mov
fnstsw
out
push
push
inc
jno
sbb
adc
fs
les
mov
mov
scas
ljmp
cmc
leave
js
insb
fbstp
mov
sbb
pop
sbb
iret
mov
in
mov
daa
xlat
push
enter
jge
xchg
fisubrs
inc
mov
adc
add
cmc
mov
sti
jno
stc
and
cltd
loop
dec
stos
mov
push
mov
mov
or
inc
mov
icebp
jmp
rorb
cmc
cmp
jp
arpl
pop
repz
push
imul
lret
popa
lods
mov
dec
add
sub
jge
push
xor
imul
push
out
cli
es
add
adc
xchg
xchg
mov
frstor
xchg
sub
add
out
jbe
pop
xchg
mov
scas
pop
mov
dec
cmp
mov
add
outsl
mov
inc
or
mov
sbb
mov
clc
pop
mov
lahf
leave
and
mov
pusha
and
scas
xchg
repz
jo
sbb
push
cmpl
shr
mov
ljmp
js
xchg
dec
in
out
ja
dec
int
add
inc
out
repz
jg
dec
test
aaa
mov
add
enter
shrb
sub
stc
fsub
pop
nop
test
mov
jb
push
test
fiaddl
mov
mov
sub
int3
shrl
ss
repz
cmpsb
sub
or
adc
arpl
dec
jo
das
gs
cmc
sti
adc
xchg
xchg
add
int
push
icebp
sti
xchg
dec
sahf
lock
in
adc
inc
sbb
cwtl
inc
clc
fiaddl
aad
push
in
popa
sub
xor
dec
in
je
movsb
cmpsb
sub
in
dec
or
jnp
inc
pop
mov
mov
and
cwtl
mov
jne
push
adc
jnp
adc
adc
fptan
lock
jns
jne
jecxz
adc
shll
sub
jnp
pop
xor
test
mov
ret
inc
pop
movsl
hlt
and
push
fld
int
cmp
mov
test
xor
lcall
add
aam
adc
dec
mov
mov
dec
jne
pop
mov
cli
jl
shl
mov
or
iret
mov
mov
cli
mov
stos
dec
jns
or
arpl
pushf
dec
fidivrs
inc
pusha
shrb
xor
add
push
push
and
lds
xchg
jnp
scas
imul
into
xchg
test
mov
push
jmp
out
jno
std
pop
jbe
inc
lcall
mulb
adc
inc
cs
pop
mov
pop
push
mov
pop
or
mov
mov
sbb
repnz
into
sarb
inc
movb
xlat
pop
daa
jb
pop
mov
js
inc
mov
es
adc
test
sbb
mov
dec
das
das
ds
pop
mov
test
xor
int3
mov
icebp
sbb
pop
cmpsb
add
mov
shlb
cld
leave
leave
popa
mov
jge
adc
inc
adc
push
cmp
sub
push
rcr
push
cmpsb
push
or
push
outsb
inc
clc
push
popf
xor
push
jp
push
loopne
jb
push
jge
mov
xchg
call
and
dec
ljmp
pop
lods
dec
popa
fiaddl
jbe
jnp
xorb
lock
mov
hlt
jecxz
jmp
repz
and
in
stc
adc
jo
jno
test
xchg
jne
or
das
sub
push
jg
repnz
jge
xchg
adc
xchg
lcall
push
pop
pop
adc
adc
imul
scas
lcall
push
xchg
imul
fstpl
mov
push
clc
int
jmp
fidivl
mov
aas
jge
sti
sbb
adc
jb
lods
imul
cmp
mov
pop
mov
mov
rolb
cmp
pop
fstpt
imul
inc
mov
add
pop
and
mov
jl,pn
jae
dec
sub
imul
sbb
xchg
iret
lcall
call
mov
sbb
cld
pop
mov
loop
rolb
adc
cmpsb
and
xchg
or
dec
lds
dec
dec
pop
cltd
es
stc
cmpl
pop
lds
cwtl
dec
sub
mov
pop
out
cmp
cmp
inc
inc
pop
lret
inc
jp
and
push
inc
sbb
fcmovu
inc
sub
xchg
movsl
push
cwtl
jne
push
stos
dec
push
xchg
aaa
pop
adc
mov
rcrb
jecxz
dec
cmp
or
jle
arpl
je
nop
mov
xchg
and
lea
add
movsb
aas
loopne
js
fadd
and
bound
lods
jle
jp
pop
arpl
dec
mov
out
push
aam
mov
aaa
and
ret
rclb
mov
and
stos
cld
or
cmc
or
icebp
mov
mov
ljmp
ds
push
jmp
fwait
movb
cmpsb
mov
pop
or
mov
cmpsl
decb
bound
stc
jl
fisubrl
int3
adc
sbb
mov
jbe
loop
cltd
and
bound
das
push
jle
xor
popa
ret
js
and
test
insb
ret
xchg
sub
lea
push
sbb
rorb
inc
xchg
jge
idiv
add
push
or
cmp
mov
fdivs
lahf
fmul
sti
push
outsb
lahf
data16
or
xchg
cmc
mov
leave
xchg
jle
loopne
outsl
or
in
lods
das
mov
sarl
cmp
sahf
adc
mov
jmp
daa
andb
push
loope
out
popf
aad
push
aad
mov
add
cld
mov
pop
lret
mov
or
mov
sti
icebp
add
out
and
mov
movsl
cmpsl
jmp
add
pop
pop
dec
cmp
adc
iret
mov
inc
push
ds
xorb
aad
pop
jo
xor
jbe
pop
into
and
pop
xchg
inc
iret
mov
jo
test
mov
or
adc
and
add
or
lret
loopne
sub
cwtl
or
sbb
rcl
in
mov
pusha
add
xchg
sbb
push
jle
cmpsl
rcrb
les
fiaddl
jle
adc
fstl
jmp
mov
popa
les
xchg
xor
and
cmc
sub
sbb
sbb
push
negb
enter
jmp
repnz
cwtl
sbb
orb
mov
mov
outsl
inc
test
mov
push
mov
sub
adc
mov
notl
xchg
inc
movsl
loope
mov
in
mov
sbb
mov
imul
sub
repnz
clc
scas
pop
pushf
sbb
adc
jb
cmp
cld
gs
inc
mov
outsl
popf
cwtl
dec
jae
dec
shl
add
pushf
jns
int
mov
sub
cwtl
subb
pop
aaa
xor
mul
je
mov
xchg
push
pop
out
xor
in
lds
xchg
outsl
inc
rcrl
pop
cmpsl
call
push
popa
dec
repnz
add
ss
sbb
leave
mov
popf
dec
jp
jbe
xchg
and
sahf
subl
pusha
paddusw
dec
inc
imul
sbb
inc
push
test
sub
inc
std
sub
mov
into
and
stos
jmp
jp
push
mov
mov
add
and
mov
sbb
in
xchg
loopne
repz
loopne
les
sub
xor
mov
xchg
sahf
lods
sbb
xchg
dec
push
dec
inc
pushf
das
jl
mov
and
mov
sbb
leave
fdivl
lods
mov
cld
jg
add
popa
ljmp
das
rcrl
sbb
std
cltd
sbb
movsl
scas
mov
sub
lds
add
test
jg
enter
les
into
stos
inc
xor
js
dec
arpl
xor
pop
lahf
and
mov
push
pop
bnd
pusha
mov
xor
lock
lret
hlt
mov
lcall
pop
insb
pop
add
ficoml
pop
fxch
push
lock
push
aam
xchg
pop
lds
fsubrl
sbb
and
or
jp
xlat
cmp
cs
rcrb
sub
in
add
and
out
enter
nop
inc
outsb
int
mov
xchg
mov
adc
jle
pop
stc
rorb
sahf
lock
clc
xlat
push
xor
cmp
cwtl
stos
jns
adc
je
incl
scas
in
pop
mov
jmp
adc
push
fisubs
lods
fdivs
xchg
push
clc
daa
psadbw
lock
mov
sub
dec
test
lret
js
in
xlat
mov
scas
push
jb
lret
and
lds
test
pop
popf
sub
dec
mov
mov
cltd
aaa
mov
call
iret
das
push
dec
sti
mov
lock
int
aam
cld
add
sbb
xchg
movsb
pusha
fidivs
hlt
push
roll
pop
sbb
fsubs
lcall
lods
sbb
jmp
cmp
test
sub
outsl
jp
cmp
sbb
and
ss
mov
loop
add
adc
ret
cmpsl
cmpsb
fldl
dec
stos
sub
jmp
jmp
mov
or
add
add
ss
xchg
js
std
popa
jle
clc
cmp
mov
testb
and
daa
ss
rorb
mov
cmpsb
xor
and
movsb
mov
ffreep
or
movsl
mov
fisubl
xor
mov
bound
fists
xchg
and
shrl
push
inc
jmp
pop
sub
dec
ret
jmp
inc
stos
scas
sub
fidivl
sub
fsts
loop
dec
add
sbb
pop
ret
pop
gs
testb
outsl
fisttps
fldcw
int3
lods
ret
rorl
ljmp
sub
cli
mov
adc
add
fs
rorl
lcall
ret
mov
lods
sub
or
or
rcll
xor
aam
add
mov
fdivr
mov
in
out
fs
sarb
pop
dec
imul
cwtl
daa
pop
push
lods
popa
mov
inc
dec
xchg
mov
mov
add
push
clc
imul
fs
jb
mov
mov
cmpsl
ds
lock
inc
in
or
call
push
push
clc
adc
daa
daa
cmc
add
jbe
insb
adc
call
lcall
iret
lds
adc
dec
push
jo
mov
mov
test
mov
ss
adcb
add
dec
adcl
lds
out
mov
das
cmp
xchg
loope,pn
int3
notb
push
push
inc
xor
fwait
sub
imulb
jl
xchg
pop
cmp
push
stos
stos
fsubs
iret
scas
cmpsb
mov
xlat
add
nop
out
lds
pop
pop
sub
jle
and
inc
hlt
mov
das
sahf
outsb
ljmp
and
sbb
fsubp
cli
xchg
jl
dec
addr16
lcall
push
dec
mov
jecxz
lcall
jmp
fistps
addl
ja
and
loopne
add
sub
das
dec
test
icebp
xor
je
adc
xchg
pop
in
or
jne
pop
in
daa
sbb
adc
cmp
icebp
lret
js
out
cmpl
dec
add
cmp
dec
int3
mov
inc
cmp
mov
cwtl
imul
pop
xor
into
mov
jp
cwtl
sub
sbb
xchg
jno
jle
clc
mov
std
mov
mov
loopne
or
jmp
xchg
insl
pop
mov
or
fldl
mov
xor
mov
jbe
push
ret
jge
popf
inc
lahf
push
bound
dec
or
push
inc
inc
xchg
lock
pusha
loop
lods
xor
into
mov
mov
adc
and
xor
pop
pop
notl
cli
popf
add
sti
jecxz
sbb
mov
divb
les
pop
add
pop
cli
mov
sti
cmp
adc
outsl
xlat
mov
pop
pop
mov
rorl
lea
out
mov
jecxz
pop
xchg
xorl
inc
fists
ja
adc
jo
xchg
test
test
pop
ss
dec
clc
ret
js
jno
mov
fwait
scas
jmp
pop
pop
outsb
lods
call
cmp
or
xchg
or
lods
shlb
subps
adc
add
ds
adc
cmp
fincstp
pop
repnz
outsb
int
jno
ja
fcmovnbe
out
adc
in
jle
dec
xor
dec
sub
adcl
out
orb
daa
mov
lods
les
imul
popf
sub
or
sbb
sbb
sbb
push
xchg
repnz
ficomps
lods
ret
clc
subb
movsl
out
imul
mov
ds
lock
inc
cltd
icebp
mov
xchg
in
xchg
out
test
and
lds
and
cmp
or
insb
pop
jns
add
ret
aaa
hlt
mov
xchg
xchg
out
push
xor
mov
test
aad
push
mov
iret
fs
sub
mov
jle
pop
mov
mov
adc
mov
mov
xor
lcall
into
loope
xor
mov
jnp
mov
or
cltd
pop
lods
pop
jle
cmpsl
vfrczss
ret
mov
dec
sub
sub
insl
mov
in
out
lds
add
inc
mov
jge
loopne
sbb
lahf
mov
call
scas
mov
xchg
pop
push
mov
pop
inc
mov
sub
add
nop
inc
xorb
jl
fdivr
ffree
inc
hlt
rorl
add
cmp
fisttpl
mov
lcall
movl
fists
enter
push
push
push
stos
mov
rcl
push
scas
ja
push
jae
mov
sub
adc
in
pop
nop
add
aas
add
clc
ja
sahf
test
mov
inc
or
pop
arpl
jge
and
insb
push
nop
add
arpl
leave
jl
push
data16
jbe
lcall
fiadds
push
xorl
push
xchg
and
cmc
sti
mov
out
popa
daa
push
pop
stos
shl
aad
jns
mul
pop
incb
mov
arpl
in
jbe
mov
add
test
lret
sub
lret
testl
cltd
cmp
test
lods
cs
sub
cmp
sbb
adc
inc
jge
sbb
in
adc
push
or
dec
fs
bound
xor
cli
xor
push
mov
repnz
movb
push
mov
inc
pop
fildl
fcompl
mov
repz
xor
dec
add
call
outsb
fwait
xor
mov
mov
cwtl
sbb
adc
jae
cmp
jb
les
andl
pop
xorl
cltd
sbb
jl
cmp
or
sahf
ljmp
inc
dec
ljmp
daa
cmp
loopne
and
ret
ljmp
mov
mov
mov
mov
int3
and
xor
jo
data16
and
add
movsl
in
mov
fbstp
pushf
push
hlt
imul
push
push
lds
cs
mov
mov
outsb
pop
xor
inc
cmp
fmul
pusha
mov
vpmaxub
jecxz
sub
les
ljmp
sti
inc
arpl
pop
and
adc
push
xor
aaa
inc
push
xchg
sarl
loopne
and
xor
sub
jb
aad
add
jo
outsb
mov
push
popa
ds
xor
mov
xor
push
xlat
mov
cs
lods
jl
addr16
sub
dec
out
pop
cmp
je
jg
out
repnz
mov
push
and
push
pop
fsubs
out
or
or
lcall
dec
mov
xchg
or
shlb
addl
lods
mov
push
pop
pop
xchg
cmpsb
push
mov
cmp
mov
or
sbbl
pop
mov
ljmp
mov
fcmove
sbb
in
push
cmp
test
mov
xchg
lods
jge
xchg
xor
insb
stc
xor
or
fistps
outsl
cmp
xchg
xchg
lock
fists
and
decl
stc
or
sti
test
mov
cmpsl
push
inc
xchg
adc
in
cmp
xor
lahf
mov
mov
add
sar
pop
imul
pop
fisttpll
xchg
call
mov
pusha
and
or
xchg
cmpsl
fiadds
fcoms
jl
popf
sub
jp
jb
je
inc
cwtl
push
imulb
lahf
fiadds
clc
in
mov
jne
xor
add
popa
dec
mov
xor
push
movsb
jle
jle
jne
int3
sahf
das
inc
fdiv
out
sub
sub
lods
sub
mov
sbb
add
dec
jo
inc
jmp
xchg
sbb
mov
fadds
push
push
aam
xchg
int3
mov
push
or
mov
xor
push
jnp
jno
jno
or
pop
xor
jne
jmp
lods
insb
into
imul
mov
push
cmp
and
add
xchg
or
cmpsl
sarb
fidivl
sub
mov
into
aam
outsl
mov
in
dec
iret
dec
and
movsl
movsl
rorl
jg
sahf
hlt
cmp
addb
pop
outsb
stos
jl
xor
rcpps
dec
das
aaa
sub
int
and
ljmp
int3
sub
inc
pop
add
leave
in
jge
push
dec
push
repz
sub
jne
mov
mov
imul
arpl
outsb
xor
jmp
rcr
xchg
adc
push
scas
pushf
lcall
out
dec
lcall
stos
dec
sbb
mov
cmp
push
popa
mov
mov
test
mov
aam
dec
mov
jmpw
out
fsubrl
push
sub
sbb
inc
adc
push
bound
ljmp
gs
nop
pop
inc
xor
icebp
lcall
test
xor
ja
or
int
pop
mov
xchg
pop
hlt
and
rorl
leave
push
cmpsb
aad
and
loopne
xchg
jp
sbb
fadd
mov
insb
and
pop
test
add
pop
ret
sbb
test
cmpsb
loope,pt
jge
jge
stos
rclb
jl
lds
dec
and
sarb
jnp
int3
roll
out
mov
jb
mov
and
and
xchg
adc
sub
cmp
pop
fistl
sti
cwtl
idiv
mov
xchg
ja
in
sub
cld
aas
push
insl
pusha
fstps
dec
mov
xchg
xchg
fsubrl
xchg
adc
inc
addr16
cmp
imul
loope
mov
push
and
test
stc
ss
adc
test
xor
lds
pop
ret
int
clc
xlat
sti
mov
pop
push
cmp
or
and
add
inc
xchg
cs
adc
cwtl
xchg
jnp
mov
jae
fcmovnbe
xchg
xor
into
stos
insl
decl
in
xor
cmpsl
jo
jg
outsb
sbbb
mov
enter
jne
and
cmp
inc
sti
imul
or
adc
lods
lods
mov
les
mov
pop
mov
push
mov
push
jbe
push
lock
dec
push
out
sti
scas
jo
insb
aad
test
inc
rolb
daa
sub
leave
add
dec
jmp
mov
ljmp
jl
xchg
mov
push
imul
stos
movsl
repz
xor
sub
add
add
push
xorl
shl
ljmp
lcall
push
inc
cltd
loop
add
shll
shr
xor
scas
imul
cmp
repz
dec
pop
dec
das
aad
scas
subl
pop
jle
push
cli
test
push
iret
add
mov
adc
js
add
adc
std
in
iret
or
mov
ficomps
or
jp
lds
rcll
in
xor
jmp
lock
lcall
jbe
mov
out
dec
jns
inc
gs
cmp
and
mov
ret
jo
jecxz
pop
ja
sub
pop
push
xor
mov
test
xlat
sub
int
add
pop
add
dec
push
mov
ljmp
sti
xchg
call
push
in
add
out
mov
aad
xchg
xor
loopne
outsb
xchg
arpl
inc
pop
or
out
pop
js
es
pop
mov
push
subl
pop
cmp
cmp
dec
push
daa
xchg
push
adc
xlat
int3
lahf
push
leave
in
dec
sti
mov
mov
les
mov
push
pop
loopne
mov
mov
setne
push
jmp
movsl
movsb
dec
adc
out
in
jl
popa
jae
sbb
insl
rcll
mov
in
mov
inc
js
addr16
mov
xchg
mov
rcll
test
adc
sbb
adc
cmp
cmp
push
or
mov
cs
jbe
jb
je
jl
xor
div
jno
inc
lret
test
into
jb
jp
addps
daa
or
stos
fadds
mov
lea
hlt
cwtl
pop
mov
and
jns
imul
test
stc
lods
xor
jns
add
or
into
xor
into
aam
pop
aaa
jg
jmp
or
adc
outsl
xchg
or
daa
push
adc
mov
pop
and
xor
ffreep
or
pop
lret
in
and
mov
jnp
adc
enter
push
or
cmp
jbe
dec
outsl
push
mov
paddq
jb
int3
aam
fistl
aas
icebp
icebp
cmovo
mov
jl
ret
test
lock
inc
pop
roll
jo
or
dec
or
inc
aad
or
cmp
adc
gs
pop
out
cmpsl
mov
fsubrl
ret
push
cmp
arpl
mov
stc
icebp
pop
lds
push
dec
popa
int3
push
lock
dec
jb
popf
inc
test
xchg
call
adcb
cmp
test
out
push
jno
int
lcall
test
xor
leave
jge
mov
lret
and
inc
dec
imul
push
or
mov
push
inc
cmp
inc
inc
pop
dec
adc
pop
dec
fcoml
lock
je
push
fnsave
jg
in
cmp
aas
push
lcall
push
xor
rolb
fnstsw
test
rcll
aad
inc
andl
bound
dec
and
cmp
pop
or
incb
dec
stos
xchg
icebp
xor
cmp
pop
hlt
mov
subl
xor
call
shl
popa
sarl
scas
mov
add
mov
out
pop
hlt
aam
ss
xchg
ja
adc
ss
mov
pop
in
xchg
sub
sbb
cmpxchg
cmc
adc
jp
arpl
lock
xor
sub
dec
or
sbb
sub
adc
sub
add
iret
std
xor
or
mov
sbb
movsl
and
aas
adc
mov
ror
ret
adc
dec
out
mov
add
xchg
mov
addr16
jle
jp
out
insl
push
mov
es
sub
xlat
push
into
jge
aad
shl
xchg
inc
xlat
daa
push
xor
push
nop
push
aaa
pop
sub
mov
loopne
cmpl
push
mov
mov
pop
cmp
push
out
cmp
dec
outsb
iret
push
popf
cmovg
push
idivb
add
das
xor
xor
or
cmp
mov
pop
ss
sub
testb
xor
mov
and
mov
xor
add
push
imul
or
or
dec
inc
lcall
cltd
fistpl
push
jo
cmp
pop
popa
lods
push
jb
inc
jnp
inc
dec
out
fmull
ds
and
push
mov
imul
adc
ret
das
push
aam
cwtl
cli
jne
xor
int3
mov
push
cltd
jbe
insl
aas
int
andl
sahf
jmp
sbb
adc
fdivrp
fdivp
pop
lods
push
sarl
cmpsl
pop
adc
rcll
aas
addr16
xchg
ljmp
push
jmp
test
into
mov
inc
jg
ljmp
adc
cmp
shll
data16
dec
inc
scas
push
scas
xchg
add
and
popa
cli
xor
lea
hlt
fadds
dec
and
pop
or
mov
push
movsb
mov
aas
sahf
inc
mov
jne
outsb
ret
stos
push
sbb
push
aaa
cmp
in
lcall
xchg
sahf
xor
push
in
lahf
stos
and
loop
mov
popa
adc
int3
daa
mov
fsubr
jae
dec
out
mov
fsubl
incb
push
ret
test
pop
arpl
out
cmpsl
sarl
pop
push
fstp
inc
dec
and
push
mov
loopne
adc
pop
les
dec
add
sar
fcoms
sbb
call
cmp
fisttpl
stos
out
test
aaa
adc
jle
mov
push
sbb
adc
jne
jle
test
pushf
lret
mov
fcoms
movl
mov
push
xor
out
in
and
ljmp
xchg
jbe
pop
ss
or
mov
xor
push
push
shr
xor
jg
push
jb
adc
cli
dec
pop
and
fldpi
test
pop
xor
dec
cmpsb
shlb
pop
cmpsl
dec
add
or
inc
mov
cli
seto
jns
push
inc
fcmove
pop
mov
jo
inc
imul
int
mov
sbb
dec
pop
int3
filds
add
test
dec
cwtl
jnp
stc
xchg
push
ret
or
insl
mov
test
lods
or
jb
cld
pop
xor
xor
shlb
or
loop
push
imul
add
repnz
adc
leave
sbb
xor
lods
push
mov
adc
jl
or
mov
adc
daa
enter
pushfw
test
sbb
mov
xor
movsl
mov
scas
cmp
or
dec
repnz
add
mov
aad
iret
nop
arpl
inc
mov
mov
insl
and
orb
dec
sbb
outsb
and
sub
out
dec
mov
into
mov
push
mov
fwait
jle
movsb
lods
xor
xchg
jnp
enter
test
jne
push
mov
adc
mov
push
add
push
sbb
sub
std
call
or
mov
fistpl
jb
cmpsb
cwtl
negl
and
jbe
lods
in
fstpl
mov
or
dec
in
jnp
or
xor
andl
out
shlb
imul
and
cltd
in
adc
inc
jne
jle
add
mov
push
jp
sti
fsts
icebp
sub
mov
mov
xlat
out
inc
jno
sbb
add
cltd
or
lds
mov
mov
outsb
pop
jb
in
cmp
mov
jg
jl
movsb
adc
scas
sahf
cmpsb
push
cmp
or
or
push
push
fistpll
adc
je
add
sahf
aam
jno
pop
or
cmp
and
fdivl
popa
pop
jbe
xchg
sbb
sahf
jo
jg
call
movsb
loope,pt
push
pop
loopne
adc
mov
cwtl
jle
popa
cmp
or
mov
sbbb
fcmovnbe
adc
cmp
stc
dec
aad
jo
jmp
fldcw
dec
scas
aaa
adc
xor
jns
jp
sbb
insb
sub
mov
inc
sarl
jle
inc
xchg
arpl
mov
dec
jmp
aam
adc
cmc
mov
imul
pop
ss
popa
cmp
mov
stc
mov
es
dec
jp,pn
incb
push
subl
out
dec
add
and
sub
mov
sahf
mov
push
test
or
pop
pop
xchg
popf
mov
repz
pop
add
shlb
jnp
push
jle
dec
insb
dec
mov
inc
cmp
lods
aad
addr16
and
inc
cmc
dec
popf
in
repnz
sbb
mov
rcl
push
xchg
mov
insb
pop
sbb
outsl
inc
pop
sub
or
mov
cmp
sbb
loope
scas
cwtl
loope
int
or
dec
es
mov
fmulp
stos
test
call
iret
adc
ss
lret
fwait
aam
cmp
xor
xor
mov
ret
jmp
jl
sub
pop
fldt
xlat
jnp
cmpsl
and
add
adc
imul
jp
cmp
aaa
notl
add
xchg
sti
jae
mov
fisttps
loope
pop
push
xchg
pop
mov
stos
or
jae
cmp
out
mov
fildll
test
ret
xchg
inc
fdivr
pop
and
addr16
jo
inc
dec
mov
xchg
mov
push
insb
divl
add
aam
les
cmp
mov
cld
adc
outsl
addr16
out
mov
push
jle
mov
mov
out
cmpb
and
repnz
out
ret
xchg
xchg
lcall
adc
arpl
sti
out
push
or
xchg
lahf
or
push
and
aam
popa
adc
pushf
add
and
lahf
test
dec
jmp
xchg
movsb
jmp
xor
cld
add
cmpsl
daa
dec
nop
inc
imulb
sbb
push
les
movsl
imul
inc
xorb
push
pop
pop
dec
inc
sbb
out
movsl
cmpsb
xlat
xlat
or
jg
cmc
cmp
movsb
sub
sub
leavew
stc
outsb
iret
cmc
lcall
inc
loope
cmp
sub
mov
mov
add
pop
sbb
jbe
addl
pop
stc
lods
mov
aad
mov
mov
push
cli
pusha
pop
lret
cmp
jbe
push
or
or
movsl
pop
dec
test
cs
pop
mov
sbb
lods
stc
shlb
mov
fstl
cmp
mov
or
jg
cli
inc
out
enter
in
repnz
cmp
jbe
adc
jnp
lahf
pop
stos
data16
xor
add
mov
and
xor
call
mov
fimuls
out
insb
fcomps
dec
mov
loope
pop
sahf
adc
popf
jne
out
data16
xor
push
xchg
movsb
pop
cmp
mov
cmp
cld
lcall
push
test
hlt
xchg
gs
mov
orl
dec
xchg
inc
jns
into
adc
or
loopne
shll
lahf
sbb
jmp
mov
out
jae
rclb
scas
jmp
mov
cmp
pop
sub
fcompl
xlat
loop
xchg
pop
in
das
in
out
fbld
dec
cmpsb
jne
or
sti
loopne
lods
sahf
std
jecxz
sbbb
mov
cld
pop
and
adc
adc
mov
in
inc
pop
outsl
push
mov
mov
fistps
xchg
test
or
mov
sbb
mov
lret
sbb
and
adc
in
sarb
out
xor
mov
das
sub
xchg
and
xchg
icebp
sbb
loope
ret
push
adc
lret
push
imul
ss
sahf
mov
test
bound
jae
cmp
jb
std
jp
mov
in
lds
ret
out
inc
jo
jl
jge
int3
fsubrs
fwait
mov
inc
ljmp
loop
in
xor
dec
loop
sbb
roll
cmp
mov
xchg
jge
push
xor
jecxz
jmp
xchg
fdivs
cmc
cmp
mov
inc
imulb
mov
arpl
add
dec
movsl
pop
xor
jge
push
test
por
loop
lds
mov
stc
fmull
fbstp
fidivrl
out
test
hlt
ret
or
aas
stos
int
cmpsb
add
in
ret
mov
fstpl
imul
jmp
lds
adc
inc
sbb
aaa
scas
pusha
rcrl
in
scas
mov
mov
fadd
js
les
divl
rcrl
outsb
mov
push
xor
push
jo
aaa
pop
or
dec
and
inc
sarl
adc
pop
mov
sub
aad
mov
or
sub
enter
add
mov
xchg
bound
imull
cmp
fbstp
xor
dec
and
arpl
stc
das
pop
mov
push
data16
jge
dec
pusha
stos
jmp
ror
xor
dec
aad
push
lret
mov
lret
sub
ljmp
sbb
fwait
cmpb
mov
dec
repnz
in
incb
push
cmp
lods
cmc
xchg
push
sbb
xlat
ja
pusha
idivl
popf
pop
movsl
mov
mov
das
mov
out
lods
inc
scas
insb
sti
mov
adc
mov
dec
sub
xchg
daa
test
popa
dec
mov
decl
xorl
cmpsb
cmp
fldenv
inc
push
divl
cld
pop
lret
cs
push
mov
cmp
mov
mov
mov
lea
ret
rcl
faddl
cmp
mov
imul
lods
jb
int
movsl
inc
stc
cmp
xchg
pop
pushf
les
pop
cmp
mov
dec
out
cmpsl
inc
adc
mov
shrb
rcrl
sbb
lea
mov
stos
mov
mov
xchg
mov
pop
adc
popf
sub
inc
iret
sahf
std
mov
fidivl
shrb
aas
test
inc
fwait
jmp
pusha
not
inc
dec
and
mov
mov
loop
jle
rolb
mov
push
fbld
addb
or
push
mov
jp
roll
rcl
mov
xchg
inc
sub
mov
push
jg
mov
testb
cmp
mov
jmp
jns
lcall
pop
adc
bound
lahf
gs
xchg
sub
test
aaa
push
mov
test
insb
cwtl
rcrl
push
icebp
xchg
fimuls
shrl
fstl
popf
push
aaa
imul
mov
and
fs
iret
push
scas
sub
xor
divl
test
add
xchg
mov
das
push
mov
cmp
mov
mov
xor
mov
xchg
pop
ss
aaa
jns
int
sbb
outsb
mov
and
in
ret
lahf
cmpb
add
bsr
push
jmp
in
adc
pop
inc
cmp
mov
sar
cwtl
jmp
cmp
fwait
into
out
sbb
pop
enter
pop
jmp
xchg
out
xlat
bound
int3
dec
sub
sbb
add
pop
mov
mov
mov
pop
xchg
dec
les
int
xor
cwtl
rorl
mov
orl
fistl
xchg
mov
jbe
sub
leave
nop
je
orl
xchg
fadds
or
or
mov
test
addr16
sbb
pop
std
jg
ljmp
loop
adc
mov
pop
ret
sbb
sarl
in
pop
imul
mov
cmpsl
in
mov
sbb
mov
dec
add
gs
addr16
add
cmp
push
mov
xchg
or
les
jns
sahf
add
jb
pop
stc
adc
clc
mov
dec
movsb
stc
call
add
in
push
aas
dec
jmp
movsb
outsl
cmc
adc
int
mov
repz
jle
fdivrl
das
mov
stos
jae
test
xor
cmp
push
jnp
ss
movsl
in
jo
mov
pop
sub
cmpsl
and
in
mov
shll
sbb
out
sahf
jecxz
sub
jno
lahf
loop
jge
loopne
out
mov
add
add
add
mov
lahf
xor
add
in
and
inc
test
shlb
or
aam
push
notb
cmp
xchg
inc
pusha
xor
fmull
xchg
push
das
mov
fwait
je
stos
or
out
dec
lret
test
out
addb
jl
sub
jb
mov
dec
adc
cmpsl
cmpsl
push
imul
call
push
cmc
jne
push
fiaddl
in
sub
pop
insb
cmpsl
mov
adc
repnz
xor
push
jp
or
jecxz
push
stos
std
sarl
rorl
push
cmpsb
call
dec
push
into
stc
cmp
sub
mov
bound
jne
sarb
lahf
mov
mov
cmpsl
dec
call
xchg
xchg
test
out
jge
push
lds
jo
leave
cld
ret
pop
lods
pop
inc
popf
mov
orb
and
inc
pop
cmp
pop
sbb
negl
ja
ja
jnp
sti
dec
add
scas
scas
cmpsb
daa
scas
dec
gs
or
fucomp
mov
loop
aam
push
mov
sub
fbld
push
enter
sbb
outsl
add
out
bound
lret
adc
jno
in
in
shrl
adc
psrlq
movsl
cld
adc
jne
lcall
std
or
push
icebp
ss
stc
std
addb
pop
pop
mov
popf
scas
push
fwait
xchg
dec
std
pop
adc
mov
sub
fsubr
out
daa
pop
repnz
data16
fisubs
pop
je
dec
mov
and
ja
lock
mov
imulb
movsl
inc
int
jo
fwait
fwait
dec
xor
cmp
jnp
mov
inc
inc
xchg
mov
stc
loop
mov
repz
add
das
sti
mov
mov
jbe
mov
cld
out
repz
mov
push
sbb
xor
sbb
add
xchg
sub
and
xor
xor
mov
call
repz
xchg
or
push
jmp
aam
dec
imul
fadds
push
popf
sbb
pop
pusha
rclb
and
ret
addr16
push
pop
push
dec
xchg
pop
lock
leave
cmp
ljmp
adc
pop
dec
adc
or
inc
adc
sbb
in
lods
pop
movsl
add
add
lods
or
push
pop
add
pop
push
lahf
mov
loope
sbb
dec
loopne
push
mov
xchg
sub
ss
ret
flds
adc
adc
je
adc
shl
adc
decb
cld
bound
mov
xor
pop
insb
dec
push
jecxz
cld
in
add
mov
mov
test
aam
in
inc
pop
add
cs
adc
cmp
loope
jae
pop
pop
in
shll
mov
fmul
fs
push
cmp
movq
pop
jp
xlat
cmc
iret
jb
push
pushf
push
pop
push
out
fisubrl
loope
mov
mov
lock
or
scas
out
or
aaa
mov
sar
fcoml
stos
gs
sub
popa
adc
or
dec
adc
pop
xchg
jno
dec
pop
jbe
xchg
fsubrs
inc
mov
dec
push
loop
mov
and
jp
fldt
and
scas
aas
xchg
arpl
and
jo
cmpsl
mov
out
leave
ja
xchg
pop
jno
xchg
gs
xchg
cli
js
dec
fstp
in
rol
sub
in
inc
xchg
sbb
pop
je
xor
fs
jl
int
xchg
call
jae,pn
xor
ja
adc
add
inc
cmpsl
mov
jmp
push
mov
sbb
shl
push
xor
lds
pavgb
aad
xchg
in
popa
jge
fld
push
lret
rcl
mov
mov
popa
pushf
loop
mov
jge
stos
out
inc
dec
xchg
xchg
mov
xor
into
push
mov
movsl
mov
sbb
xchg
movsb
movsb
add
pushf
cwtl
fsts
cmp
stos
es
inc
sbb
clc
and
test
cmpsb
xchg
xor
sub
stos
cmp
mov
clc
mov
mov
jns
jmp
cmpsl
sub
repz
cs
hlt
dec
push
fildl
aas
dec
mov
and
andl
das
mov
subl
aaa
sbb
ss
cmpb
pop
fldt
test
push
cltd
das
lahf
push
add
imull
sub
or
lods
adc
rclb
andl
mov
jns
mov
dec
andl
lea
mov
jp
inc
cld
notl
add
movsb
cmp
add
outsl
je
and
js
insl
and
ss
dec
mov
cmc
pusha
push
cld
sti
push
cmp
lea
xor
mov
pop
mov
aas
ds
pop
xor
cmp
mov
jle
loopne
sbbl
aad
inc
es
or
aaa
data16
add
or
fistpll
stos
sub
xchg
cmpsb
cs
push
ja
dec
pop
in
shll
lcall
inc
clc
mov
or
push
xchg
sub
mov
outsl
pop
push
popl
push
stos
xor
inc
mov
pusha
sbbl
nop
mov
pop
push
icebp
add
jno
xchg
mov
addr16
popa
sbb
push
cwtl
xchg
add
pop
das
xor
jns
fimull
sbb
das
ds
ret
sub
sub
add
aaa
mov
jl
xor
add
inc
mov
lock
lea
shll
dec
jnp
sbb
jmp
jg
roll
addr16
das
imul
xchg
xor
pusha
enter
mov
insb
and
sahf
test
xchg
decl
flds
adc
push
cmp
sub
insb
clc
cmpl
xor
sub
outsb
pop
bound
jge
repnz
fstpt
xor
arpl
or
or
cli
inc
pusha
arpl
cld
ljmp
into
xchg
jg
pop
pop
jg
pop
add
pop
into
out
inc
dec
cmpsb
int3
fmuls
lahf
outsb
push
in
mov
xorb
and
push
cmp
lcall
rorl
int
bnd
fcoml
jbe
roll
xchg
add
es
test
iret
inc
ja
xor
sbb
jo
xlat
adc
xlat
out
inc
add
add
mov
fdivl
inc
fs
ja
mov
das
sbb
ret
bsf
adc
cmc
sub
sahf
add
cltd
leave
sub
fdivr
or
js
aas
call
popa
int3
adc
subb
sahf
pop
and
push
adc
or
xchg
sub
adc
mov
mov
xchg
das
popf
pop
lret
push
add
fisttpll
add
imul
or
dec
mov
or
fildl
and
xorb
jmp
mov
mov
out
cmp
sub
std
jbe
fsub
inc
mov
mov
mov
std
dec
loop
arpl
movsb
call
cld
inc
jne
shl
orl
fucom
or
inc
sub
enter
push
mov
mov
xor
mov
shll
inc
arpl
lods
mov
adc
sbb
repz
sbb
cmp
pop
inc
mov
fbstp
scas
xchg
mov
sti
shll
out
cltd
mov
sti
pop
push
mov
xchg
test
jne
sti
repnz
adc
lret
jp
xor
icebp
fbstp
mov
pop
test
mov
repz
mov
mov
leave
jo
cmpsb
pop
jne
dec
sbb
push
or
mov
lock
shlb
out
adc
scas
das
ror
mov
cmp
push
adc
lcall
jno
int3
inc
push
jno
hlt
outsb
aaa
cld
ret
ss
mov
push
sbb
ret
ja
xchg
mov
sbb
cmp
cmpsl
movsb
mov
and
ljmp
lds
cmp
push
ret
fcoml
mov
inc
fs
sbb
mov
mov
in
and
xchg
and
cwtl
add
leave
xchg
fsubrl
psubsw
pop
cs
in
clc
mov
aam
out
inc
out
stc
sub
lret
mov
out
das
fs
add
sbb
mov
or
inc
cmpsl
sub
lds
xor
and
sbb
dec
mov
inc
xor
push
das
scas
push
jbe
stos
xor
call
js
fdivp
sahf
add
dec
xor
dec
and
inc
outsb
shrl
push
out
cmp
stc
lods
cmp
xchg
dec
fnsave
mov
jne
bound
in
mov
rorl
add
pop
jge
repz
push
out
test
mov
in
mov
shlb
mov
in
out
mov
xor
inc
mov
mov
jno
mov
test
mov
sbb
xchg
cmp
test
ljmp
lds
push
aam
insl
push
pop
cmc
cltd
pop
test
dec
in
popf
sub
cmp
xchg
jle
incb
xor
popf
push
popf
dec
push
dec
addl
sbb
jo
or
cmpsb
sbb
icebp
adc
dec
xchg
mov
xchg
scas
aad
lods
ljmp
cmp
push
sarl
mov
or
je
and
inc
adc
cmp
jle
sbb
hlt
rolb
jge
pop
cmp
sbb
lea
adc
insb
adc
fistl
movsb
jns
mov
cmpsl
inc
mov
aaa
pop
call
fisttpl
inc
std
inc
adc
push
mov
xchg
adcl
std
icebp
mov
insl
test
dec
push
out
fcoms
mov
imull
mov
push
sbb
std
ss
mov
push
hlt
jmp
lods
xabort
adc
mov
mov
movsb
imull
mov
pop
stos
ret
mov
fnstsw
sbb
test
clc
push
shr
pop
js
sbb
push
cli
push
fs
jmp
add
cli
pop
xor
mov
inc
out
mov
xor
test
lea
call
cs
adc
mov
jbe
pusha
test
ja
mov
add
mov
add
dec
push
div
subb
inc
cmp
repnz
jle
movsb
mov
clc
adc
movsl
inc
in
jge
xor
fcoms
xchg
in
cmc
jnp
hlt
pop
insl
les
mov
adc
mov
repnz
push
sub
ja
add
sbb
mov
mov
cs
into
lcall
rcr
sti
cmp
les
pushf
jle
or
aam
rclw
sbb
jmp
sbb
inc
push
les
cmp
jmp
mov
sbb
xchg
mov
aas
hlt
mov
xchg
out
adc
scas
fmulp
hlt
sub
pavgb
enter
dec
adc
xchg
jmp
push
xchg
lea
pop
fldl
push
int3
xchg
in
aaa
mov
dec
adc
movsl
mov
lods
aaa
leave
test
jmp
mov
push
cmp
ss
and
xchg
sahf
mov
push
ja
adc
push
pop
xchg
lods
mov
mov
les
cltd
push
xchg
mov
inc
mov
cmpsb
les
lock
loopne
cmp
icebp
push
sub
and
outsl
xlat
bound
and
xor
cs
shll
lock
mov
push
mov
iret
jecxz
scas
dec
lcall
mov
lock
scas
mov
lret
mov
mov
push
pop
mov
stos
xor
jns
xor
push
mov
push
int
or
outsb
fistpl
pop
fcoml
add
cmp
ja
pop
hlt
pop
pop
add
leave
jp
push
mov
xchg
leave
dec
lds
pushf
aad
xchg
cmp
cmp
add
adc
xor
scas
jne
lahf
pop
stos
test
push
out
xchg
ret
xchg
or
sub
and
and
stc
gs
mov
mov
loopne
mov
ds
adc
jbe
pop
sub
mov
inc
ret
pop
or
jnp
incb
shlb
clc
push
pop
frstor
nop
sub
scas
xchg
adc
mov
int3
js
push
and
insl
dec
cwtl
push
in
imul
or
xchg
dec
imul
inc
loop,pn
cli
out
adc
add
push
or
push
pop
lret
fsub
repz
cltd
insl
mov
pop
outsl
lds
test
add
in
dec
fstp
cmpsl
stc
and
push
test
jb
pop
and
push
sub
xchg
out
pop
ret
imul
std
loopne
and
jmp
insl
mov
clc
icebp
daa
push
mov
or
cs
push
add
adc
int3
and
sarl
and
scas
loop
jns
xor
in
jg
in
ds
sbbl
sub
shrb
mov
push
add
out
ret
mov
add
mov
mov
add
loop
insb
addr16
les
xchg
mov
fidivrl
and
sbb
and
lcall
xchg
mov
push
mov
scas
jp
push
aas
xchg
add
or
lea
push
dec
mov
xor
and
push
rclb
jae
cli
fnstsw
jle
xchg
stc
pop
lahf
cld
int3
ret
fiaddl
fwait
cmc
inc
sub
dec
xchg
rcrb
div
repz
push
adc
pop
and
or
mov
xlat
sub
sub
fcmovb
pusha
stos
lret
bound
pop
xlat
incb
push
inc
test
addb
int3
jns
xor
loopne
icebp
repz
pop
frstor
inc
hlt
xorb
call
call
leave
lret
cmp
cltd
push
test
into
xor
insb
divl
xlat
and
in
push
scas
lret
mov
scas
imul
pop
pop
dec
adc
lahf
insl
pop
movb
mov
push
jge
pop
lods
xor
ljmp
xchg
into
add
adc
push
inc
pop
aam
push
and
std
sub
inc
into
sub
jae
mov
lods
loopne
inc
js
jno
jnp
daa
or
std
push
sub
adc
test
mov
add
mov
push
popa
scas
inc
adc
jns
or
fnstcw
xchg
sub
int3
ret
pop
mov
mov
arpl
arpl
roll
or
leave
jbe
call
ss
and
popf
mov
or
xchg
imul
or
bound
fcmove
mov
push
xchg
sti
cmp
js
xchg
adc
lret
dec
mov
jno
push
loopne
push
jp
and
adcb
sbb
enter
mov
aam
mov
add
stc
add
int
jne
stos
in
shrb
pop
jne
jnp
jo
ljmp
sbb
push
imulb
mov
sub
std
adc
pop
in
pop
jno
rcrb
jle
test
xchg
or
push
mov
clc
ss
jl
or
enter
pop
bound
rolb
and
xor
dec
xor
adc
xchg
mov
mov
cmpl
pop
cltd
push
pusha
scas
push
aam
flds
xchg
icebp
out
cmpsl
aad
push
pop
push
bound
iret
jae
leave
add
outsb
pop
and
fadd
ret
add
lock
sub
sub
jg
jo
mov
dec
outsb
pop
jge
fldl2e
stos
mov
mov
pop
xchg
imul
pushf
inc
in
lock
jns
addr16
jg
mov
xor
js
jae
dec
mov
xlat
in
sbb
xchg
and
xchg
jne
or
insb
pop
dec
mov
inc
insb
data16
sbbl
int
inc
pop
enter
push
add
push
cmp
adc
jl
sbb
jecxz
mov
mov
or
push
mov
add
pusha
fwait
adc
jae
cmpsl
and
bound
loope
dec
sahf
enter
lret
fbld
loop
dec
pop
aam
dec
mull
daa
pop
xchg
pop
pop
push
aad
pop
out
mov
xchg
xchg
lods
or
sub
test
cmp
sub
test
and
cmp
mov
or
pop
add
lods
mov
out
repz
xchg
mov
mov
mov
jecxz
push
sbb
jo
insl
jg
dec
jg
pop
fwait
lcall
data16
mov
mov
es
and
sub
xor
ljmp
push
jno
push
sar
test
add
and
call
xchg
or
cmpsb
sbbl
jge
dec
sbb
andl
inc
push
fildl
aas
fnsave
cwtl
in
ja
and
aas
mov
adc
std
pop
std
sahf
xchg
mov
add
xchg
out
sbb
add
xlat
and
push
adc
jne
test
mov
fwait
outsb
pop
sbb
jecxz
lahf
mov
fbld
xchg
ljmp
into
add
in
xchg
cs
lret
test
sub
std
sub
fistpl
hlt
add
fisttpl
sub
mov
nop
int
shll
lea
or
andb
movsl
fists
lahf
outsl
in
inc
xor
stc
jecxz
sub
fdivp
insb
insl
cmp
stc
mov
sub
dec
in
or
in
sub
sbb
sahf
imul
scas
mov
push
cmpsl
and
push
sbb
int3
pop
mov
cmpb
inc
mov
sarl
xchg
inc
jge
aad
fs
and
test
inc
repnz
pop
repnz
inc
dec
sub
faddl
xorl
add
jae
jne
dec
xlat
sahf
lret
ljmp
xchg
cmp
mov
ret
xchg
stc
and
mov
sub
pushf
outsb
loop
xchg
sti
das
test
stos
movsl
cmp
popa
push
leave
inc
imul
jl
outsb
jg
fucomi
push
push
mov
iret
dec
jp
sub
sub
xchg
cmpsb
out
stos
icebp
rcrl
int
pop
fbstp
sahf
dec
fstpt
pop
rcrl
loop
sahf
into
movsl
xchg
nop
popw
gs
jbe
lahf
mov
loop
test
cmp
jnp
or
mov
xchg
stc
movsl
push
dec
dec
mov
ficoms
sbb
mov
into
test
test
cmp
add
xchg
jo
pop
jge
pop
stos
orb
cmp
or
daa
push
jp
rcrb
hlt
filds
in
xchg
scas
ror
xor
xlat
xchg
pop
xchg
gs
ret
mov
mov
jle
je,pt
hlt
jecxz
xchg
dec
or
or
mov
inc
jnp
jmp
cmpsb
cmp
notb
mov
mov
jae
mov
xchg
daa
mov
pop
inc
fdiv
inc
jbe
rolb
testb
inc
stos
test
mov
lahf
push
dec
cld
cmp
mov
arpl
pop
inc
icebp
movsb
sbb
push
push
xor
fwait
loopne
aad
sarb
mov
xchg
imul
jbe
sub
insb
xchg
sub
push
lret
and
movb
aaa
pop
and
ficompl
mov
lea
fadd
arpl
dec
or
into
dec
add
inc
add
shl
fs
pop
dec
inc
xor
push
sbb
jo
push
lret
pop
sub
in
adc
data16
push
inc
out
cwtl
jmp
mov
std
pusha
xchg
outsb
mov
jmp
push
dec
iret
cmp
push
mov
xchg
scas
mov
popa
inc
shrl
jb
dec
popa
push
sbb
out
icebp
xchg
push
into
jbe
mov
sbb
or
add
mov
mov
jp
and
pop
or
icebp
scas
inc
xchg
jmp
sub
cli
rcpps
rcrl
cmpsl
ljmp
jns
das
add
jl
ljmp
inc
std
loope
dec
insb
pop
sbb
cmp
mov
adc
aam
adc
mov
loope
movsl
enter
in
mov
adc
sub
dec
push
lods
pop
dec
imul
sbb
test
mov
ljmp
movsb
les
jmp
sub
ror
push
ficoms
stc
dec
sti
xchg
sbb
inc
mov
sub
stc
mov
fsts
incb
lahf
iret
sub
je
cmp
cmpsl
pop
lcall
ja
push
sub
and
mov
push
xor
push
lret
or
add
sbb
or
inc
adc
test
dec
add
mov
push
in
xchg
lock
mov
outsb
xchg
or
hlt
xchg
in
sahf
int
sub
xchg
pop
dec
mov
stos
or
je
scas
and
pusha
imul
push
pop
jns
add
adc
mov
xchg
mov
adc
push
push
and
add
push
push
movsb
test
cld
enter
dec
and
inc
pop
xor
movsb
inc
out
cld
mov
sbbb
adc
jns
pop
mov
std
push
inc
push
shrl
hlt
adc
lds
and
hlt
loopne
js
push
insb
out
lods
pop
ror
ds
out
adc
cmp
sbb
cmp
lret
mov
lret
aam
sti
fisubs
sub
imul
mov
push
pushf
cmp
test
popa
xchg
sbb
pop
outsb
sahf
adc
dec
push
sarb
adc
add
jmp
jo
jbe
hlt
pop
jo
jns
mov
fists
les
or
repnz
leave
pop
icebp
shrb
lods
rcrb
fisubs
xchg
imul
lret
lret
lock
call
cmp
adc
mov
mov
push
cltd
mov
cmp
loop
cmp
push
out
cmpsb
mov
dec
mov
es
xor
clc
shll
out
dec
adc
repnz
nop
xchg
mov
jl
and
jbe
rolb
push
jns
adc
cmp
in
clc
incl
out
sbb
aam
mov
pop
mov
pushf
rclb
xorb
fcoms
pop
dec
lret
loop
fistl
mov
mov
push
cmp
xor
out
sub
add
repz
loope
js
inc
xchg
push
mov
jbe
cld
pop
enter
test
jne
add
sbb
insb
pop
cltd
mov
xor
xor
lahf
fldt
adc
xchg
xor
sbb
or
iret
pop
inc
ret
dec
mov
orb
ljmp
pop
nop
or
insb
fidivrl
xor
mov
cmpsb
shrb
sbb
aad
sub
mov
sbb
mov
xchg
clc
xor
dec
xchg
jns
xor
fistl
stc
push
testb
std
add
sub
pop
mov
leave
mov
adc
sbb
lds
int3
dec
adc
addl
ret
inc
mov
mov
mov
inc
cmpsl
rolb
mov
jbe
cmp
dec
push
pop
in
repnz
popf
and
ret
es
mov
scas
xchg
cs
pop
jl
out
sbb
lcall
dec
stos
dec
mov
push
mov
mov
dec
je
nop
sbb
icebp
leave
adc
movsl
test
jmp
dec
fisubs
xchg
inc
std
pop
popf
fs
xor
adc
inc
add
fdivl
insb
popl
cmp
or
add
dec
int
inc
inc
mov
nop
pop
mov
fdivs
jnp
pop
mov
es
or
mov
push
mov
add
dec
imul
dec
dec
adc
ja
out
ja
pop
test
leave
daa
xchg
jmp
jbe
add
inc
test
lret
and
push
mov
and
jmp
cmpsb
jmp
aaa
xlat
xlat
int
jp
cltd
sbb
xchg
push
call
hlt
inc
test
cmp
arpl
mov
mov
out
and
add
push
out
pushf
sub
outsb
inc
fwait
jne
mov
and
adc
pop
inc
pop
fldl
cltd
jne
inc
ljmp
in
pushf
vpsrlw
pop
push
dec
dec
not
scas
jl
xlat
sbb
add
arpl
dec
push
lds
cmc
sahf
in
xor
cli
xor
stc
shrl
mov
in
add
adc
rol
cld
ds
sahf
mov
loop
dec
call
dec
roll
insb
repnz
jo
stos
into
aam
aaa
into
adc
mov
mov
jns
sahf
inc
mov
cmpsl
lcall
push
stc
push
jnp
scas
or
test
mov
adc
jo
in
cs
sbb
sbb
inc
cmp
sub
lods
jp
lahf
test
inc
scas
mov
xchg
call
sub
fmull
in
sub
scas
inc
loope
adc
jge
test
ud0
push
call
repz
insb
arpl
ja
pop
cmc
mov
fisttpll
jle
jle
pushf
jb
adc
clc
lock
pushf
cmp
stc
and
adc
out
clc
and
inc
sub
mov
ficompl
push
sub
mov
js
or
or
sbb
imul
or
lods
adc
cltd
addb
ja
xlat
imul
in
inc
cltd
mov
sbb
les
das
xor
push
push
mov
shrb
dec
clc
cmp
pop
test
inc
push
bound
aaa
fdivrs
cmp
repz
jle
aas
roll
xor
push
pop
dec
into
cli
lods
sub
sub
push
mov
lods
mov
stc
xchg
inc
fcmovu
ds
scas
cli
cmp
pop
imul
les
adc
or
jb
mov
mov
mov
or
adc
mov
cmp
aas
out
movsb
xchg
pop
push
lds
mov
push
pop
leave
in
dec
das
sbb
inc
lcall
and
hlt
push
fidivrl
lret
lret
inc
imull
pop
mov
outsl
testl
add
jge
mov
cmc
mov
popa
xor
movsb
dec
xchg
shlb
fstpt
pop
es
inc
fldl
repz
test
xchg
lahf
sarb
insl
jle
in
cmpsl
std
push
mov
dec
xor
push
and
push
call
in
sub
push
inc
jne,pn
and
cmp
pop
add
mov
lea
je
push
rcrb
lods
ficomps
jnp
mov
iret
or
sbb
xchg
sub
or
mov
sub
jecxz
imul
push
push
xchg
or
add
out
push
mov
mov
fldcw
xchg
shrl
outsl
pop
enter
push
clc
mov
loopne
lods
adc
jae
pop
mov
dec
lds
mov
and
movsb
lret
xchg
out
int
imull
mov
mov
push
and
repnz
sahf
mov
icebp
dec
push
cwtl
cmp
dec
loope
fwait
inc
xlat
loope
xor
push
inc
repz
mov
sahf
test
dec
mov
fwait
jge
push
add
movsb
inc
icebp
sub
das
lds
test
xchg
cltd
add
xor
xchg
stc
sar
dec
xchg
sub
cmp
hlt
ret
call
mov
mov
jmp
dec
arpl
aas
aaa
ljmp
jle
pusha
in
xor
ficomps
xchg
fmul
pop
idivb
in
mov
and
lcall
stos
push
sbb
vmovlps
in
shl
pop
fisubl
xchg
clc
add
inc
add
in
ljmp
in
int
popf
das
fs
aas
nop
cmp
cmc
inc
mov
hlt
adc
push
push
ljmp
icebp
xor
jbe
jmp
sub
pop
sar
fldl
adc
sub
pop
daa
add
bound
subb
nop
lods
mov
adc
cmp
cmp
scas
inc
jg
pusha
lcall
mov
scas
sub
mov
out
cli
mov
sbb
push
jle
sub
push
inc
pop
mov
scas
push
stos
ret
popa
mov
dec
in
xchg
out
xor
lds
sub
mov
pusha
out
mov
jmp
and
jae
sbb
into
push
frstor
mov
leave
pop
cmp
sbb
in
sub
xchg
movsl
loop
add
fsubr
loop
mov
repz
adc
adc
pop
gs
mov
mov
and
nop
pop
xchg
loope
adc
popl
aaa
lds
iret
mov
pusha
popf
or
cltd
mov
mov
jp
push
iret
fs
mov
adc
fwait
mov
lahf
jne
cli
xor
push
out
and
faddp
ljmp
fisttpl
pop
or
inc
push
or
les
adc
cmp
jo
sbbb
sbb
cmpsl
fiaddl
xor
sub
jo
sbb
fcmovu
fsubr
jnp
js
push
inc
cmp
or
cmpsb
mov
mov
testl
jns
rorb
imul
push
sbb
jae
sub
dec
add
push
add
cmp
mov
mov
mov
outsb
and
cs
push
test
arpl
and
jg
pop
xchg
cmp
or
sbb
jmp
xor
rcrl
fisttpl
or
xor
adc
sub
push
dec
jbe
repnz
rcl
into
out
icebp
mov
ljmp
lcall
dec
stc
fcoms
add
clc
and
push
sar
or
and
fbld
xor
aad
pop
adc
push
and
xchg
in
ficompl
jp
and
mov
and
movsl
movsb
or
inc
sti
mul
and
lret
aaa
les
imul
enter
mov
push
adc
mov
inc
insb
xchg
rol
mov
lock
or
or
or
scas
clc
lods
fists
jne
insb
lds
mov
sub
or
dec
mov
fs
sbb
inc
mov
mov
or
roll
jge
cmp
and
lea
imul
rorb
pusha
push
loop
mov
jno
movsb
jg
sbb
push
adc
loopne
sahf
je
or
or
mov
cmpsb
pop
stos
popa
rcrl
pop
xor
sub
mov
dec
sbb
add
inc
sbb
or
pop
imul
push
ds
sbb
jg
sub
push
and
mov
jp
inc
stos
repz
ss
in
js
push
call
inc
push
int
mov
movsl
xor
dec
divl
jns
pop
xor
cmp
idivb
imul
je
daa
fisttps
mov
cmpsb
mov
or
jl
xchg
push
pop
popf
push
mov
mov
aas
pop
mov
xchg
inc
daa
inc
enter
and
dec
repnz
loope
cmp
dec
into
dec
scas
pop
adc
pop
push
push
mov
out
cmp
sub
enter
out
outsl
add
fadd
inc
push
dec
xchg
imul
enter
mov
testb
ret
popf
negl
nop
mov
fmull
into
scas
iret
dec
jecxz
das
pop
leave
test
iret
fs
fwait
adc
and
shlb
ja,pt
cmc
cs
out
lock
enter
ret
inc
jmp
jne
jl
mov
data16
leave
sub
lret
jb
fwait
lds
mov
mov
sub
mov
push
pop
inc
mov
dec
lds
aad
pop
in
data16
mov
orl
rcrb
insb
dec
adc
out
pop
gs
dec
loopne
aaa
push
test
xchg
in
inc
outsb
outsl
stos
and
jmp
gs
jns
fwait
das
cmp
sub
loope
mov
sub
lahf
jbe
out
aad
enter
pop
out
sub
int3
std
mov
cli
pop
outsl
push
mov
sub
sti
cltd
push
stc
clc
out
loopne
loop
mov
jl
xor
xor
outsl
rcrl
mov
loop
inc
mov
push
jbe
push
sub
push
out
iret
shrl
inc
inc
lea
push
loopne
dec
sahf
push
mov
jns
subb
mov
inc
adc
and
mov
out
hlt
add
adc
das
jne
out
pop
out
movsb
in
add
jl
ss
lods
icebp
ret
mov
xchg
scas
push
repnz
bound
scas
pop
in
nop
in
aad
enter
cltd
fcoms
push
push
cwtl
stos
pop
push
sahf
fldenv
pusha
add
xchg
inc
xlat
xor
rcll
xor
xor
jae
out
sbb
push
insl
mov
loop
mov
xchg
ljmp
push
mov
dec
mov
jns
mov
xor
push
mov
pop
cwtl
add
xor
aam
dec
testl
stc
xchg
aad
inc
int
outsl
stc
sub
jbe
ds
and
fucom
icebp
jg
and
les
stos
lret
addl
das
mov
call
divl
fs
jmp
int
outsl
adc
aas
dec
cmp
imul
aam
mov
sbb
push
iret
adc
lock
fldcw
lcall
inc
adc
xor
iret
lcall
mov
sub
ljmp
rcrl
and
mov
push
nop
cltd
in
leave
scas
inc
nop
ror
adc
imul
push
popf
mov
jmp
pop
jns
cmpsb
mov
inc
dec
enter
neg
xor
je
pop
sub
sub
jae
adc
pushf
ss
arpl
rcrb
es
cli
das
and
andb
and
movsl
addl
lods
ljmp
pop
out
stc
push
stc
incl
push
mov
fidivrs
enter
mov
and
test
aas
aad
ljmp
cmp
mov
in
inc
js
jae
jle
jmp
jb
cmp
jge
jmp
daa
movsl
cmpl
inc
shrb
das
push
mov
outsl
sti
pop
xchg
inc
cld
sbb
push
bound
inc
out
and
das
adc
dec
pop
dec
and
jl
xor
jno
int
out
icebp
pop
mov
lea
mov
jae
mov
pusha
sbb
mov
cmc
dec
add
sub
add
inc
pop
lea
jb
or
mov
dec
xchg
popf
dec
adc
btc
dec
adc
adc
lcall
addb
xor
inc
popl
sub
in
mov
icebp
sub
or
inc
cwtl
cmp
divb
cmp
xlat
dec
sbb
pop
out
popf
and
or
xchg
inc
test
into
sbb
add
or
inc
fs
stc
pusha
cmp
movsb
out
dec
jbe
orl
and
xor
cmp
mov
std
mov
inc
cmp
popf
sbb
movsl
inc
insl
repnz
int3
dec
or
fs
sbb
push
dec
daa
fstps
add
insb
loope
lcall
test
fldl
test
loopne
in
jmp
pop
lock
xor
ljmp
repz
cmp
stos
dec
push
mov
addr16
ljmp
je
jae
mov
fdiv
push
fidivl
adc
fidivs
ds
ret
loope
xor
cwtl
push
pop
and
mov
sbb
je
in
arpl
stos
jmp
movsl
cs
loope
jno
outsl
pop
loop
jmp
xchg
test
sub
jecxz
repz
or
das
cmp
in
adc
sub
add
push
or
repnz
les
xchg
daa
jecxz
push
dec
aaa
sbb
loopne
rorb
test
cwtl
xor
or
fmull
rolb
push
stc
call
dec
xor
sbb
mov
arpl
xchg
jl
add
fwait
mov
das
dec
and
or
adc
int
pop
lahf
dec
and
mov
xchg
sub
jmp
call
dec
cs
xchg
popl
je
out
ret
fcom
dec
jp,pt
iret
mov
xchg
scas
insl
push
sti
and
mov
dec
fcoms
mov
in
clc
popf
sub
or
enter
insb
add
cmc
loopne
je
mov
xor
out
add
daa
cmp
out
fiaddl
cmp
lock
inc
dec
jmp
loope
in
lock
test
add
sbb
cmp
sbb
sub
loope
inc
in
fnstsw
stos
adc
scas
sbb
and
movsb
push
add
jnp
mov
daa
cmp
xor
rorb
in
lock
mov
arpl
dec
xchg
lds
nop
cmp
in
imul
lahf
imul
js
fistpll
lahf
in
mov
sbb
pop
or
fisubrl
repnz
xchg
ja
scas
or
repnz
jle
ret
imul
pop
push
outsb
test
mov
lret
cld
mov
and
mul
jne
test
add
lds
aas
jbe
mov
xor
cmp
sub
pushf
insl
adc
test
jne
shrb
mov
mov
inc
adc
movsl
shlb
js
xor
inc
or
dec
enter
fdivrs
test
dec
aas
int3
add
test
push
mov
faddl
cmp
cld
sbb
cmp
loope
ljmp
lahf
sbb
inc
xchg
xchg
in
mov
sub
cmc
or
dec
fildll
std
pop
cmc
dec
cmp
xchg
dec
dec
xor
lds
inc
shll
dec
pop
sbb
mov
cmp
xor
xor
mov
mov
adc
lods
push
movsb
cmp
mov
ja
cwtl
mov
jae
add
aaa
loopne
das
or
js
insl
inc
sub
scas
fidivrs
mov
or
jmp
in
or
call
mov
pop
leave
test
pop
jne
arpl
xor
test
cmc
push
mov
inc
jmp
test
cmp
rcrb
mov
push
aaa
pop
inc
fyl2x
push
movl
repnz
jnp
cmp
lods
sub
movsl
fistpll
mov
ss
flds
add
xchg
test
ret
imul
pop
lret
scas
fsubrp
adc
lods
and
rcrl
mov
adc
mov
push
ljmp
hlt
xchg
mov
sub
mov
mov
pop
sbb
push
call
daa
sub
mov
cwtl
mov
mov
iret
xor
jo
xor
ret
ret
jmp
adc
mov
push
ret
mov
and
popa
cmc
adc
pop
inc
sbb
cld
dec
dec
test
pusha
jg
mov
fwait
jp
pusha
pop
shlb
mov
in
in
inc
adc
and
insb
pushf
adcl
jne
sahf
lret
js
faddl
js
mov
push
ds
mov
xchg
les
popa
inc
inc
mov
leave
aaa
and
pop
int
xchg
gs
push
popf
fcoml
adc
push
ret
adc
out
push
jne
es
int3
je
sub
cli
jno
jmp
cmp
push
imul
notb
movsl
pop
jns
fistps
pop
leave
mov
dec
lods
sub
jp
push
iret
and
jge
mov
push
imul
pop
mov
ret
daa
sti
pop
sbb
outsl
sbb
enter
fs
nop
ss
push
lcall
xchg
mov
or
xchg
jbe
push
jp
lret
mov
push
lds
pop
add
ss
lock
jbe
enter
repz
mov
js
add
sub
inc
testb
imul
and
fsts
loope
outsl
iret
jo
jno
in
adc
adc
test
test
lods
data16
hlt
mov
gs
jb
or
ret
add
mov
or
mov
sbb
lret
or
jmp
mov
lock
jge
nop
cmp
sbb
aas
jmp
xchg
mov
xchg
adc
mov
mov
jl
subl
xor
scas
loope
dec
sbb
fwait
nop
cmc
lods
xor
stos
jecxz
inc
outsl
imul
mov
pusha
jae
stc
iret
mov
cmp
add
jmp
iret
adc
sbb
lods
scas
mov
cmc
sub
test
cmpsl
xor
sub
je
push
fs
sbb
in
add
out
ds
popf
jns
jae
sub
and
or
or
out
xchg
clts
iret
mov
jno
xor
icebp
fwait
jl
subl
push
shlb
mov
testb
push
fstpt
dec
test
sub
xchg
stc
mov
jp
aas
iret
dec
push
ds
xor
add
ds
jae
or
xchg
sub
test
xchg
fistpll
loopne
add
push
jb
lcall
mov
inc
sahf
jmp
mov
mov
sbb
dec
adc
roll
xchg
pop
lods
jb
or
iret
jbe
fmuls
stos
mov
in
adc
shr
scas
jb
push
call
push
insb
or
jno
pop
adc
loope
push
mov
mov
sarb
jle
xlat
sub
jbe
mov
ret
or
mov
nop
push
xorl
cs
data16
std
movsl
popa
mov
and
and
or
loope
loopne
clc
lahf
insb
sbb
mov
xor
int3
stos
sbb
xchg
mov
adc
ja
dec
and
sbb
lea
aam
xor
dec
or
adc
roll
push
out
adc
lret
xchg
push
push
mov
cmp
jno
pop
clc
out
cmp
push
jecxz
into
xlat
fwait
stc
sbb
or
shrl
and
fcomps
jnp
adc
je
pop
mov
pop
cmp
and
adc
loopne
cmp
shrl
addl
sub
add
out
sahf
stc
mov
xchg
push
add
loop
inc
inc
pop
cmp
sub
orl
aad
pop
jnp
mov
out
push
jno
aam
out
sub
jge
lock
mov
lds
movsl
xchg
lcall
sbb
iret
inc
sub
shll
fistl
andps
jecxz
roll
dec
sbb
jle
sub
fstl
or
cmp
lods
imul
out
pop
arpl
xor
dec
ja
dec
ret
fwait
add
ret
xchg
sub
out
xor
inc
add
xchg
fwait
or
add
mov
les
aad
lock
fidivrs
nop
nop
adc
pop
fildll
mov
es
jge
shlb
loope
push
jle
lods
pop
roll
pop
inc
cld
paddsb
stos
adc
aam
sbb
test
aam
dec
push
jne
sub
adc
stos
icebp
ret
cltd
mov
mov
jg
cmp
sbb
int
lahf
or
lahf
xchg
inc
lret
cmpsl
hlt
add
test
fcomps
inc
clc
jl
das
fldt
addr16
or
push
lcall
sbb
movb
push
outsl
cld
loopne
mov
cli
lea
stos
dec
xchg
or
sbb
fmull
insl
adc
ficompl
xchg
inc
lods
xchg
and
jmp
lahf
push
mov
test
jge
outsb
inc
insb
adc
loopne
sub
sub
insb
cmp
adc
in
lods
xor
push
mov
pop
xchg
outsb
sarb
pop
sub
bound
sbb
inc
nop
xchg
xchg
pop
rorl
sub
sub
xchg
fcomps
dec
pushf
ret
icebp
repz
hlt
mov
es
pushf
mulb
cmp
dec
xchg
icebp
sti
fiadds
fcomps
ret
or
dec
push
add
dec
push
pop
je
cwtl
push
cmp
stos
cmp
stos
jl
mov
jecxz
das
push
xchg
repnz
ret
sub
imul
jbe
add
call
loopne
xchg
sbb
xlat
lahf
orb
jns
xchg
or
xor
shll
and
mov
mov
pop
mov
pop
fwait
dec
pop
data16
or
out
repnz
in
pop
rorb
insl
cs
fs
test
adc
xor
lods
jnp
push
insl
inc
icebp
aam
lea
sbb
fistpl
dec
jmp
inc
push
or
mov
jge
popa
push
mov
lcall
roll
xor
or
xor
push
xchg
insl
cmp
fxch
int
cmp
xchg
in
fwait
test
jmp
mov
dec
push
jbe
lret
dec
addb
pop
fmuls
cmp
int3
and
and
setg
inc
adc
mov
pop
dec
cwtl
mov
nop
cmp
sbb
in
adc
sub
or
pop
fdivl
push
xchg
lods
adc
ret
cmpsl
je
xor
dec
out
xchg
test
push
sbb
cmp
outsl
sbb
sbbl
lret
mov
sar
fsubrl
clc
push
mov
jns
jmp
scas
dec
cmova
cli
or
mov
push
mov
int3
cmp
int
add
dec
repz
ja
or
push
cmpb
mov
xchg
and
add
mov
mov
outsl
fcmovnbe
or
sbb
jge
xchg
stc
and
sti
dec
xor
sub
add
dec
gs
and
ss
ds
jle
jae
cmp
and
pop
or
lcall
cltd
or
in
in
sbb
call
add
xchg
leave
dec
inc
imul
jmp
lods
rolb
dec
movsb
sbb
add
push
jne
mov
js
ja
pop
leave
shlb
das
jmp
mov
sub
fnsetpm(287
and
insb
add
dec
cltd
fbld
jecxz
std
adc
add
cmpsl
mov
push
out
sbb
push
cmp
jno
dec
push
xor
jne
xor
pop
es
xchg
inc
cli
jno
lea
and
push
cmp
cmp
xchg
scas
inc
push
xor
push
and
mov
dec
jo
mov
mov
xchg
xor
das
movsb
jle
movsb
mov
lahf
in
insb
aam
mov
jb
pop
addr16
mov
and
push
out
inc
push
mov
sub
jp
inc
pop
xchg
insl
leave
or
or
dec
movsl
sub
test
sbbl
shlb
clc
and
sti
mov
jle
shrl
push
pop
sub
shlb
mov
mov
sub
ds
dec
gs
dec
cli
fmul
outsb
jg
xchg
xor
das
sbb
jle
in
std
lods
sbb
add
mov
jmp
fidivl
in
cmpsl
pop
popa
fwait
push
ljmp
push
jnp
scas
sbb
sub
mov
or
sub
xchg
data16
dec
xchg
jo
rcl
fcoml
in
push
popa
or
or
mov
pop
mov
test
movsb
fistps
inc
jecxz
in
mov
cli
add
mov
aas
adc
rcrb
mov
push
pop
fsubr
outsb
ds
cmp
pop
outsl
mov
jae
cmpsl
add
lods
add
push
jne
ret
sarb
push
cli
mov
sub
mov
cmp
jmp
repnz
jae
mov
push
or
divb
mov
push
mov
les
mov
mov
cmpsb
dec
je
mov
add
sub
jl
push
adcl
lds
mov
inc
cmc
dec
test
sub
inc
pop
lret
cmp
xchg
mov
lahf
cmp
pushf
fiadds
pop
jb
imul
sbb
push
adc
push
psraw
push
mov
jmp
inc
cmp
xor
call
cmp
and
pushf
cmp
pop
nop
mov
sub
add
stos
push
sti
or
test
xchg
jle
movsl
ficoml
xchg
jne
add
imull
add
mov
sub
pop
add
and
scas
aaa
insb
call
cmpsb
loope
loope
and
and
xor
dec
in
mov
fidivl
enter
mov
or
lret
bound
inc
pusha
aaa
fidivl
sbb
into
mov
pop
cmpsb
xchg
jno
ds
jg
pusha
sbb
icebp
mov
shrl
dec
mov
lcall
adc
jmp
pop
or
lcall
fistl
mov
xchg
ljmp
sbb
lock
incb
inc
push
mov
arpl
xchg
repnz
mov
out
faddl
mov
mov
xor
ds
mov
test
es
jmp
arpl
mov
add
jbe
or
or
fmul
cmp
add
and
call
and
test
push
sbb
dec
jecxz
sbb
sahf
sub
add
cwtl
sub
and
loope
fs
xchg
dec
in
arpl
xchg
dec
out
aad
cmc
adc
and
pop
push
push
xchg
add
test
leave
push
cmpsl
xor
or
xor
repnz
xchg
and
jecxz
test
icebp
je
jbe
movb
enter
pop
xchg
pop
fldcw
out
ljmp
ret
outsl
mov
bound
cmp
or
lret
mov
lea
sbb
mov
fsubrs
mov
or
dec
popa
lods
icebp
js
sub
icebp
jne
das
test
pop
fimuls
sub
push
adc
xchg
jp
and
mull
in
jae
jnp
fiaddl
call
cwtl
jno
fs
aad
sub
pop
jecxz
aaa
lods
out
jg
push
sbb
pop
sub
shrl
cmp
sbb
jo
icebp
inc
shl
pop
jecxz
adc
push
fsub
xor
push
mov
call
sahf
add
adc
xor
out
movsl
or
iret
cmp
push
adc
data16
push
jo
xchg
push
cmp
or
outsb
xchg
stc
ds
movsl
xchg
xor
jmp
xor
or
lret
insb
inc
inc
jmp
mov
orl
lcall
add
pusha
push
into
xor
mov
adc
fsubl
dec
sbbb
sti
inc
cli
xchg
notl
movsb
nop
sbb
lea
pop
dec
pop
hlt
inc
mov
aas
mov
xor
sub
sahf
inc
sub
xchg
jg
xchg
push
cld
movsl
pop
pushf
enter
sub
xchg
xchg
daa
mov
add
roll
jnp
inc
mov
rclb
mov
xchg
iret
mov
dec
jbe
sarb
mov
mov
or
dec
xchg
and
insl
pop
xor
mov
int
or
inc
xchg
aad
dec
out
out
icebp
lods
xor
or
pushw
ds
lret
add
repz
outsl
pop
and
cmp
lds
pop
mov
insl
inc
popa
jecxz
ja
hlt
rolb
mov
data16
out
push
xor
repnz
jmp
lahf
lret
in
push
push
fdivrs
das
inc
in
pop
sub
and
cwtl
push
and
bound
stc
push
stos
movsb
gs
and
lret
jle
std
and
movsl
aaa
aam
mov
dec
xlat
push
mov
mov
sarb
sbb
cs
int3
outsl
dec
cmpsl
in
add
lds
dec
outsl
rorl
arpl
std
insl
xchg
sub
pop
or
roll
idivl
repnz
loope
scas
xor
mov
shll
mov
hlt
sti
test
repz
xchg
dec
sub
lock
loop
int3
leave
in
in
mov
mov
std
cmp
and
loope
imul
icebp
adc
cmovp
pop
jo
xchg
gs
adc
aad
mov
xchg
cmp
fisttpl
ror
pop
lea
mov
xor
iret
out
xchg
push
sub
mov
test
lea
sub
stos
or
nop
mov
outsl
push
sub
fs
lahf
lock
call
int3
mov
mov
popf
sub
iret
loopne
adc
pop
shl
imul
inc
cmp
mov
icebp
push
jb
imul
ljmp
pop
loopne
dec
repnz
ljmp
cmp
xchg
bound
leave
cmpsl
pop
sti
out
loop
popa
push
ds
push
mov
jmp
loop
test
jns
and
cli
dec
inc
fsubs
push
cmpsb
das
outsb
sbb
jle
sbb
push
sub
jmp
sbb
dec
add
push
leave
pop
jecxz
not
hlt
jl
mov
enter
or
outsb
add
ja
shll
ss
mov
call
and
aaa
jae
lds
pop
add
mov
cmp
lcall
xor
daa
xchg
ljmp
out
loop
or
cli
jne
mov
inc
mov
mov
loopne
jle
pop
aaa
mov
loope
push
xchg
dec
add
movsl
jne
push
or
adc
les
lock
arpl
mov
fs
or
in
mov
xchg
loop
xchg
xor
test
push
jnp
lods
pop
in
inc
mov
cld
out
adc
push
repz
ds
jbe
jb
mov
icebp
sbb
in
and
add
testb
or
cltd
int3
push
xlat
imul
cmp
xor
dec
popa
loope
jns
sub
mov
pop
dec
push
xchg
add
inc
dec
xchg
xchg
xor
or
dec
dec
scas
aas
bound
sub
into
mov
shlb
or
scas
jle
sahf
fimuls
loopne
lret
and
xchg
mov
out
pop
js
xchg
cmp
push
mov
dec
mov
or
test
scas
jmp
andl
aas
xchg
adcl
pop
push
push
scas
xor
mov
dec
scas
mov
xlat
les
xchg
aas
cmpsb
arpl
push
inc
popa
sub
xchg
inc
mov
ja
xchg
push
push
mov
stc
bound
ficoms
xchg
jg
scas
or
and
iret
hlt
mov
push
out
lea
cltd
mov
mov
jmp
xor
mov
mov
test
das
arpl
mov
stc
int3
add
mov
daa
cmp
popa
mov
icebp
adcb
repnz
xchg
mov
in
or
rorl
lods
mov
inc
iret
es
shrb
aas
sub
mov
ss
add
pop
insl
push
iret
dec
inc
adc
cmp
fdivs
int
stos
sub
push
ret
sti
mov
cmp
imul
aad
xchg
fsub
jae
adcb
jge
xchg
inc
mov
mov
iret
cmpsb
xlat
pushf
push
add
cs
imul
arpl
inc
js
call
mov
inc
cmp
arpl
das
nop
mov
fisttpl
dec
dec
sbb
or
movsb
js
test
jmp
push
fwait
or
jb
inc
movsb
mov
xorl
dec
push
cmp
mov
movsb
and
in
pop
xchg
outsl
test
pusha
pop
mov
xor
jae
fdivp
xor
jno
test
inc
mov
push
repz
inc
popa
jb
out
cmc
inc
fs
pop
xchg
sub
out
and
movsl
push
dec
std
mov
lock
sbb
or
jmp
popa
out
repnz
lods
imul
stos
adc
dec
subb
sbb
hlt
stos
add
sbb
cmpsl
repnz
jnp
mov
pushf
jecxz
bound
call
and
js
mov
lds
push
fadds
stc
adc
pushf
sarl
pop
cld
loopne
shrb
xor
adc
aaa
xor
pop
mov
fsubs
pushw
mov
inc
daa
rcrb
add
outsl
fwait
icebp
filds
dec
jo
fsubrl
jae
adc
inc
dec
xor
repz
lcall
inc
jmp
push
les
xor
and
mov
dec
rorb
fldl
inc
adc
jmp
mov
dec
fadds
add
movsl
lea
push
or
cmc
sub
sahf
push
jp
clc
idivl
pop
mov
inc
mov
std
js
xor
pop
and
and
pushf
test
outsl
loopne
adc
add
dec
fs
arpl
imul
aad
xchg
mov
hlt
rcr
test
inc
push
inc
out
iret
xlat
sub
out
xor
shrl
cld
and
shr
fstpt
jp
clc
mov
mov
test
pop
xor
ds
cmc
cli
cs
out
out
pop
cwtl
jp
test
ficompl
cmpsl
scas
adc
and
xchg
mov
mov
mulb
es
cmp
inc
ret
xchg
jle
mov
pusha
push
adc
jne
jge
scas
or
mov
negl
mov
outsl
std
movsb
fisttpll
subb
or
clc
adc
mov
out
add
cwtl
sbbb
pusha
xchg
sbb
or
mov
ficompl
sub
add
mov
jmp
pop
jae
push
in
cli
cltd
popa
insb
adc
jnp
cmpsb
jae
dec
js
push
dec
daa
in
in
push
jge
popa
mull
enter
into
jle
pop
ret
jnp
add
ret
jle
pop
ljmp
fnstenv
inc
mov
enter
lea
dec
cmpl
out
sbb
popf
scas
jno
inc
mov
mov
push
stc
clc
inc
mov
negb
sub
lods
dec
inc
jge
sbb
xchg
add
push
test
fwait
popa
sbb
clc
js
test
jg
and
sti
adc
cmp
out
dec
lcall
cmp
icebp
or
sbb
push
dec
mov
lods
shll
or
outsl
inc
push
les
lds
lock
ret
jg
stc
jnp
hlt
fiaddl
lret
jle
add
push
inc
xchg
pushf
dec
lret
outsl
fidivl
ljmp
jns
and
arpl
adc
jnp
xor
adc
push
mov
or
fwait
mov
cmpsl
sbb
pop
mov
and
jbe
movsb
sahf
fwait
cmp
dec
or
inc
sbb
pop
push
cli
and
sbbl
movsl
int
arpl
push
ljmp
cs
or
push
jns
mov
rcrl
push
sahf
popf
adc
insb
pop
jbe
sti
leave
repnz
cmpsb
and
lods
sti
movsl
iret
call
test
jb
mov
mov
cmp
sub
call
ret
pop
ja
push
xor
add
lock
fldt
adc
push
add
cltd
ja
pop
hlt
lds
cld
dec
xchg
cmp
inc
shll
lret
jge
ffree
jecxz
mov
jae
pop
sbb
das
aas
lahf
mov
adc
dec
cwtl
in
or
jg
repz
xor
mov
ljmp
and
aam
mov
out
incb
lahf
and
movsl
outsb
je
outsl
pushf
pop
adc
leave
in
fdiv
inc
push
pop
mov
das
fcoml
sbbb
add
add
out
out
dec
sub
jo
and
and
cmp
and
mov
sti
std
adc
push
inc
outsl
sti
hlt
pop
cmc
icebp
push
inc
mov
push
push
out
push
lahf
inc
mov
or
fdiv
pop
popf
aas
fildl
repz
xchg
mov
stc
ljmp
jl
xchg
into
add
loopne
test
loope
adc
pushf
inc
xor
mov
clc
rcl
rcrb
mov
es
sbb
arpl
test
idivl
aaa
dec
je
sbb
dec
loopnew
xchg
std
nop
call
mov
out
rclb
or
cltd
mov
stc
cmpsl
pop
fnsave
inc
mov
icebp
adc
or
test
lock
lock
cmp
adc
lds
sbb
push
push
popl
jo
arpl
dec
xorl
jnp
lds
cmp
jb
pop
hlt
outsl
ret
pop
fnsave
sbb
sbb
leave
xchg
sbb
push
xlat
xlat
loop
rol
rcrb
pop
loope
mov
xchg
popa
cmc
mov
repz
mov
out
sbb
cmc
push
cwtl
inc
mov
das
out
ljmp
or
mov
jae
cmp
sarb
push
jle
sbb
imul
test
icebp
rclb
mov
cltd
shrb
or
les
inc
shll
mov
or
dec
gs
fidivrl
jmp
dec
sbb
es
test
dec
out
daa
push
pop
jnp
jmp
iret
cmp
mov
xlat
sub
or
jecxz
cmp
mov
scas
test
push
addl
flds
mov
xchg
and
sti
or
add
pushf
sbb
lea
dec
adc
outsl
pop
mov
rcrl
fs
pop
dec
shl
pushf
jl
ret
dec
push
scas
add
xor
pop
or
data16
into
push
cwtl
lcall
cmc
rclb
pop
shll
xor
inc
ret
icebp
mov
lock
or
bound
mov
dec
sub
or
fbld
cmp
dec
rcrl
cld
cmpsb
inc
pop
icebp
pusha
cmc
pop
push
push
fisubs
out
out
std
mov
jg
adc
jp
dec
pop
dec
loope
fs
jg
jge
mov
insl
mov
imul
lods
push
test
xchg
iret
jmp
xchg
xchg
mov
test
push
xorb
and
movsl
movsb
lret
mov
cmp
mov
pop
rolb
mulb
bound
add
fwait
daa
push
mov
dec
jle
push
negb
in
jnp
loope
int3
mov
xchg
dec
popf
ficomps
xor
add
mov
scas
add
and
add
scas
fwait
in
jno
testb
adc
stos
sub
push
pushf
push
xchg
test
loop
sbb
hlt
fldcw
mov
lret
or
add
divl
out
adc
pop
repnz
push
aam
cmpsl
sarl
mov
dec
mov
jne
cmpsl
hlt
pop
pop
sub
xchg
fstpl
pop
aam
cli
cmp
aas
pop
pop
ja
andb
xchg
mov
mov
push
loopne
dec
xor
out
shll
cmp
leave
stc
xchg
popa
es
pusha
sbb
jg
inc
pop
pop
sbb
data16
fadds
dec
jns
jle
dec
jb
pop
pop
or
add
adc
adc
pop
jbe
stos
adc
arpl
push
sub
movsb
rclb
dec
psrlq
push
mov
loop
sub
xor
jns
jne
push
cmp
add
cmp
cmp
cli
and
and
inc
in
aad
lea
cmp
add
mov
mov
jmp
and
xlat
add
dec
mov
aad
fnstcw
movlps
mov
cmp
jne
aas
xchg
in
cli
or
pushf
xchg
or
test
push
insl
cltd
xchg
mov
repz
ret
add
test
std
add
stos
push
push
outsb
mov
xor
mov
int
sbb
cwtl
test
push
mov
sub
clc
enter
ficomps
testl
mov
adc
les
xor
ret
dec
int3
std
jge
nop
adc
inc
and
popf
push
jl
repnz
adc
adc
jg,pt
mov
mov
cmp
in
dec
arpl
jl
fwait
dec
repnz
nop
push
das
ds
cmp
hlt
xchg
pop
jecxz
enter
push
push
adcb
negl
dec
adc
jns
adc
leave
dec
movsb
push
movsb
lcall
mov
inc
inc
pop
dec
cmpl
int3
notl
or
cmpsl
rol
data16
lock
mov
adc
lods
inc
mov
lds
mov
shl
jmp
cmp
jo
jmp
insl
repz
and
movsl
adc
and
or
outsl
iret
mov
mov
cmpsl
lcall
mov
scas
icebp
jo
stos
ret
cli
dec
ja
xor
push
xchg
cld
loop
in
shrl
xor
add
inc
cmp
lahf
xor
add
pop
mov
ficoms
dec
enter
imul
cs
decl
mov
push
sub
cmp
daa
loop
rcr
pop
fildl
aaa
sbb
scas
mov
les
cmp
push
out
add
ja
push
iret
subl
ret
das
pop
les
sti
adc
sbb
jg
and
leave
mov
xchg
xchg
or
ss
xor
xor
cwtl
fs
sbb
cmp
push
arpl
mov
in
push
pop
xabort
ret
scas
ss
inc
repz
push
ljmp
jmp
mov
out
jae
inc
sub
das
pop
mov
mov
jp
outsb
and
adc
subb
pop
or
adc
icebp
mov
pop
xchg
out
cmpsb
sbb
sub
adc
out
rolb
test
pop
insl
sbb
sub
mov
iret
sub
test
xchg
inc
mov
jbe
push
or
xor
xchg
lds
ss
dec
aaa
repz
push
xor
mov
loopne
mov
push
repz
dec
mov
gs
mov
xchg
lods
cmpb
movsl
test
stos
repnz
jbe
addr16
or
inc
loope
repz
jge
std
iret
adc
cld
movsl
add
fidivl
pop
xor
push
push
dec
xchg
mov
into
sarl
push
sub
cwtl
sahf
lods
xor
push
lret
push
sbbb
adc
repz
sub
adc
sub
push
lret
dec
pop
mov
mov
cmc
dec
sub
and
lret
cmp
dec
fwait
add
add
les
out
dec
out
aam
sbb
cmp
ljmp
aam
push
and
les
ret
lea
pusha
jno
push
ja
cmp
xchg
ljmp
leave
mov
xlat
push
adc
xchg
std
sarl
sbb
sub
or
pusha
jb
sbb
addb
and
jle
adc
mov
fcoms
push
mov
in
loope
scas
xchg
pushf
lods
xchg
lcall
mov
ror
or
aam
lret
sbb
fnstcw
shlb
stos
outsl
fadd
rolb
int3
inc
or
sub
cmp
out
imull
cld
xchg
cmpsb
cwtl
cs
stos
jns
or
cmpsl
std
scas
sarb
cmp
push
scas
jno
jmp
sbb
stos
ret
sub
mov
push
mov
dec
mov
push
jne
movsb
ret
shlb
adc
rorl
outsb
mov
fnstcw
sub
mov
xchg
mov
stos
leave
flds
sub
fstps
loop
pop
cmc
orb
lret
pop
push
sub
out
cmp
and
mov
push
pop
ja
adc
in
cld
jp
fists
add
jge
bound
fxch
sahf
arpl
mov
clc
sbb
hlt
dec
cmpsl
or
xor
push
movsb
xor
outsb
fld
idivb
adc
out
push
xor
cmp
xorb
rcll
addps
xor
mov
ja
inc
mov
fdivp
fs
mov
lcall
lods
mov
mov
mov
movsl
dec
ficoml
dec
popa
adc
xchg
into
clc
std
movsb
adc
mov
jecxz
and
test
mov
cwtl
sahf
cmc
out
push
xor
jnp
loop
push
shll
xchg
mov
pop
dec
pop
push
adc
jecxz
je
cmp
data16
pop
movsb
fs
mov
dec
inc
ljmp
push
sahf
ret
and
ficompl
ret
bound
jnp
pop
push
into
mov
enter
out
mov
push
orb
dec
push
out
push
adc
fcompl
mov
stc
mov
out
cmp
pop
loope
and
imul
mov
not
push
adc
imul
push
dec
cltd
jmp
shrl
out
xchg
fwait
lock
loope
push
bound
fimuls
add
inc
in
aas
dec
out
mov
scas
push
cmp
xor
adc
shll
in
jle
inc
sub
das
cs
dec
lahf
jp
dec
push
jle
xor
or
test
sbb
inc
dec
sbb
sub
mov
xchg
jae
jle
dec
hlt
ret
jge
rclb
jo
stc
sbb
lods
sub
cwtl
xchg
bound
jns
mov
push
jne
cmpsb
inc
cwtl
loope
outsl
jbe
pop
xor
fisubrs
jle
jno
push
into
hlt
and
sbb
add
push
test
adc
xchg
xor
mov
sbbl
sbb
sbb
add
sbb
add
add
pop
mov
adc
sahf
out
xlat
jmp
add
stc
push
enter
mov
cmpsb
push
popa
mov
test
xorb
fs
aaa
cs
leave
test
shlb
adc
push
mov
push
cmp
rcrb
sti
aam
int3
fs
loopne
shlb
mov
sub
outsl
ja
das
sub
adcb
popa
adc
insl
test
or
jae
or
outsl
insl
inc
and
test
jo
sub
outsb
and
lret
je
and
aas
lcall
mov
mov
push
ret
jbe
aas
sub
xchg
in
in
sub
xchg
lods
and
mov
jbe
mov
out
sbb
loopne
mov
cmp
cmp
fdivrs
xchg
out
dec
lea
or
inc
sti
repnz
lret
inc
xor
outsb
xor
repz
cs
imul
stos
gs
dec
jno
sti
pop
iret
sti
rcl
mov
jl
fs
mov
movsb
aaa
int3
dec
jns
sahf
rcrl
mov
adc
sub
les
push
test
int
mov
fcmovne
jae
jns
daa
mov
pop
sub
xchg
in
sbb
xor
dec
fcmovb
xor
inc
out
sbb
sub
xchg
jb
pop
lret
popa
and
xchg
pushf
cli
pop
je
jecxz
inc
mov
leave
mov
jle
int3
mov
ret
andl
cmp
jae
lods
fdivs
int
aas
addr16
fnstcw
push
push
push
loope
stos
in
enter
scas
in
sbb
aas
sbb
pop
add
ds
cmp
cmp
daa
jno
jb
fcompl
out
int3
jge
out
mov
xchg
fs
fwait
sub
in
mov
mov
jge
xor
pop
test
movsl
dec
dec
shrl
fistl
loop
cs
push
inc
lret
ja
pop
stc
cmp
inc
mov
sti
lods
cmpsl
and
mov
xor
mov
lds
fildll
shll
in
outsl
mov
stc
int
jle
loopne
sbb
adc
dec
xor
pop
shll
int
add
ret
ljmp
in
mov
dec
mov
jg
pop
dec
lret
cmc
cmp
mov
xchg
out
sbb
les
jne
or
cmc
mov
push
xor
leave
sbb
bound
arpl
sti
xchg
push
mov
mov
add
push
or
stos
jb
aam
dec
stos
dec
js
fisttpl
out
clc
pushl
push
sbb
or
and
and
xchg
pop
xchg
dec
inc
jp
inc
dec
shll
push
inc
fistpl
mov
xchg
mov
mov
and
fwait
les
mov
jle
gs
loop
das
xchg
push
or
notl
cmp
inc
ja
xorl
mov
fbld
mov
inc
push
cvttps2pi
jle
sub
es
mov
test
test
jb,pt
in
imulb
test
stc
dec
out
cltd
dec
es
das
sub
dec
mov
adc
xchg
mov
orb
push
jge
xor
push
std
adc
and
jo
sahf
sbb
ljmp
push
jnp
mov
addb
pop
loop
push
in
jno
mov
inc
sbb
iret
xor
repz
dec
sbb
int3
xchg
sbb
adc
fidivrs
call
mov
pop
xchg
fildl
pop
inc
arpl
mov
or
sub
dec
in
sub
mov
and
and
pop
xor
cmp
sbb
leave
push
clc
push
lahf
mov
outsl
out
test
lds
lret
icebp
in
rol
pop
mov
inc
jbe
xchg
into
in
in
shll
inc
test
popf
clc
ss
pop
inc
stos
mov
test
mov
cmp
push
mov
mov
inc
inc
es
imul
dec
mov
or
sbb
xorb
pop
sub
mov
mov
pop
test
mov
aaa
inc
xchg
out
fstl
mov
scas
pop
faddl
mov
or
xor
jecxz
mov
jmp
xchg
out
cmp
sahf
rolb
mov
mov
cmp
pop
adcl
mov
add
mov
cmovl
inc
sub
aad
xchg
xchg
adcb
sbb
push
roll
jbe
aad
push
repz
icebp
and
sbb
loope
push
out
aam
mov
mov
push
push
cwtl
mov
xor
sub
nop
les
push
inc
sub
add
leave
or
sbb
lods
mov
jno
fdivs
loop
dec
sbb
iret
mov
jecxz
stc
pop
cmc
sbb
xor
jmp
cmp
testb
xchg
insl
cmpsb
push
lea
cwtl
xchg
adc
cmpsl
push
out
insb
sub
jp
stc
fsub
cld
xor
pop
push
mov
rcrb
and
insl
xchg
adc
arpl
and
xchg
inc
outsb
mov
repnz
mov
jg
mov
nop
xor
sahf
xorb
sub
inc
mov
jo
into
sbb
dec
cmpsl
inc
popa
subl
dec
add
pop
adc
cmpsb
js
imul
add
cld
mov
xor
loop
jb
jne
out
pop
andl
mov
mov
inc
mov
add
testl
sahf
push
mov
sbb
aad
adc
ljmp
lahf
mov
sti
dec
inc
mov
loopne
idivl
xor
fnsave
loope
xchg
inc
mov
dec
inc
push
scas
push
or
adc
outsl
daa
ret
das
mov
add
mov
out
xchg
repz
sahf
xchg
in
clc
movsl
mov
test
pop
in
cmpsl
mov
xchg
push
push
inc
popf
js
mov
push
roll
stos
xchg
dec
xor
push
pop
sbb
out
daa
mov
mov
mov
cmp
dec
adc
inc
stos
fstps
pusha
dec
sub
add
in
or
mov
pusha
inc
scas
inc
and
cmp
ret
lahf
xor
dec
jbe
loopne
lret
dec
stos
lock
call
sahf
sub
jb
or
pop
push
outsl
mov
sub
stos
lods
pushf
cld
popa
aaa
lods
cs
or
mov
mov
dec
push
adc
xor
fidivl
or
adc
push
das
jge
push
add
cltd
xchg
and
pop
out
sahf
mov
outsb
mov
repnz
push
dec
testl
ret
ljmp
adc
sbb
dec
lret
add
lods
mov
icebp
mov
sub
add
inc
shlb
in
and
sbb
sbb
loopne
sbb
mov
mov
sub
adc
xor
lea
inc
fwait
and
mov
mov
shlw
std
icebp
imul
test
mov
mov
or
push
mov
shlb
mov
enter
inc
fnstsw
decl
jmp
in
je
xabort
cmpsb
pop
push
ret
popa
xlat
test
and
and
cmpsl
jo
rclb
addr16
mov
push
xchg
gs
add
pop
fs
push
das
mov
aas
or
xchg
push
cmp
jle
xor
xor
sbb
nop
adc
pop
cwtl
lret
jno
lea
pusha
jle
mov
data16
mov
or
fmull
popf
sbb
dec
test
int
cli
mov
ror
ds
lods
ret
fs
inc
scas
adc
mov
push
orb
lea
hlt
dec
fcompl
adc
repnz
push
pop
xchg
test
lods
je
je
xchg
xchg
lret
mov
fcomi
popf
add
sbb
add
dec
test
das
rclb
dec
popa
in
sbb
xor
sub
inc
xchg
std
cli
cmp
loop
shl
mov
mov
pop
cmp
out
jo
repnz
cmp
popf
and
adc
or
xchg
add
mov
cld
pop
jle
lds
fsubl
mov
pop
shrb
jmp
jnp
sbb
adc
fisttpl
mov
push
mov
mov
mov
outsb
arpl
pop
sbb
mov
jle
or
mov
xchg
das
repnz
ret
addr16
and
jbe
mov
pop
iret
xor
in
loope
sbb
and
push
aad
pop
out
or
repz
fdivl
aad
jb
lcall
es
add
mov
repz
jno
jne
xchg
adc
inc
xor
mov
test
loopne
les
sbb
jle
out
sbb
test
jge
mov
fcomps
pop
xchg
cmpsb
ficompl
xchg
mov
push
jo
stos
out
pop
mov
cltd
js
lcall
jnp
mov
pop
push
inc
loop
inc
cltd
nop
adc
movsb
notb
cwtl
mov
popl
add
add
mov
fs
mov
inc
call
fdiv
clc
and
mov
dec
leave
aad
ja
je,pt
cltd
outsb
jae
std
fs
pop
dec
popf
sbb
jecxz
cltd
jp
hlt
jle
or
aad
lock
mov
pop
test
ret
xlat
push
mov
xor
test
out
adc
push
imul
filds
clc
and
xor
cs
add
stos
mov
push
fimull
fnstsw
mov
loopne
cmp
xor
int
jg
fsubs
pop
cmp
mov
sub
or
jge
push
cwtl
into
outsl
xlat
jle
hlt
adc
mov
push
cld
mov
in
cmp
es
inc
pop
mov
fs
loopne
xchg
fldt
neg
sbbl
xlat
std
push
outsl
cs
jbe
lret
stos
sbb
repz
dec
or
sbb
jle
add
sub
and
sub
mov
mov
cmc
push
add
out
imul
orb
xchg
jae
insb
movsb
pop
xchg
pop
mov
jg
xchg
jbe
test
orb
and
push
add
or
push
push
jge
in
ret
mov
xor
mov
xchg
xlat
enter
in
incl
mov
xor
pop
xchg
sbb
popa
mov
jmp
dec
push
dec
into
inc
arpl
pusha
cltd
sti
sbb
mov
and
cmp
mov
and
int3
cmp
or
sub
sbb
cmp
jne
leave
dec
inc
inc
sub
shll
adc
lds
push
push
mov
push
cmp
pop
dec
jo
nop
mov
and
mov
xor
sahf
jp
outsl
and
mov
sbb
rcrl
lods
scas
int
mov
mov
call
pop
mov
dec
mov
xchg
iret
cmpsb
push
add
test
pusha
popf
out
mov
cmp
mov
mov
push
into
inc
ljmp
movsl
sub
int3
mov
or
pop
jnp
popa
outsl
jmp
adc
incl
push
cmp
xor
xor
push
mulb
or
lcall
cmpsb
push
pop
xor
cs
lahf
loopne
jg
push
dec
test
fildll
jp
mov
lret
in
pop
fnstenv
xor
dec
add
adc
pop
adc
arpl
orl
fdivr
inc
outsb
jge
and
or
or
sbb
mov
cmp
jae
dec
push
and
push
out
cmp
test
pop
push
into
cld
jns
es
ja
ret
xchg
fcoml
aam
push
test
lret
adc
adc
xlat
mov
or
sti
fnsave
xor
cwtl
jg
inc
mov
jnp
pop
pop
jno
push
sub
pop
shll
fnstsw
mov
ljmp
jns
push
cmp
sub
dec
sbb
in
or
jae
dec
dec
add
fs
pop
ja
das
lret
dec
sub
cs
orb
pop
push
push
add
imul
lret
imul
push
jp
jle
jl
and
jne
push
out
cltd
jnp
pushf
in
cmp
cwtl
shr
pop
xlat
lds
cmp
outsb
dec
mov
mov
jecxz
clc
lea
push
test
xchg
jle
ret
cmp
adc
dec
jecxz
mov
xor
pop
loope
add
sub
adc
mov
inc
mov
push
ffree
xchg
mul
push
dec
inc
ds
repnz
sbb
cwtl
loopne,pt
dec
sbbb
fildll
popa
mov
jne
adc
test
decl
mov
in
lock
mov
sbb
pop
adc
mov
pop
mov
aam
gs
lcall
je
ret
mov
push
mov
loopne
xor
rclb
out
xor
xchg
push
and
xchg
movsl
xor
std
ja
inc
icebp
incb
data16
push
sub
xor
and
or
cmp
sub
pop
pop
rcrl
dec
insb
cwtl
pop
data16
test
inc
cmp
dec
das
jle
lret
nop
add
sub
push
subb
mov
or
int
pop
mov
inc
enter
cwtl
pop
daa
outsl
push
aam
inc
and
mov
pop
test
adc
inc
mov
add
sub
mov
fsts
cmpsb
imul
or
bound
jb
sti
mov
loop
cmp
fwait
xchg
int3
loope
mov
ja
aam
das
mov
inc
push
ss
cli
push
lret
pop
push
jns
shlw
push
pop
and
and
idivb
pushl
fisttpll
subl
jg
out
pop
mov
add
pop
enter
int
sahf
add
jne
sub
sub
lret
stos
es
stos
add
je
cltd
inc
adc
sub
das
lcall
pop
fwait
xchg
mov
lahf
aas
leave
inc
xor
jge
mov
or
lds
xor
mov
sti
mov
mov
sarl
lcall
lock
push
mov
iret
mov
les
cmp
xchg
inc
dec
imul
sub
sbb
scas
sbb
nop
orl
rcrl
mov
push
lods
add
push
fiaddl
in
fs
arpl
out
push
push
imul
dec
sub
inc
pop
in
sub
jnp
cmp
jns
sub
or
cmp
movsb
ss
mov
mov
jle
mov
jno
fidivrs
xor
call
pusha
sbb
cltd
loop
add
dec
stc
cwtl
in
xor
xor
es
push
jno
aaa
push
dec
cmpl
addr16
pextrw
cmpsl
xor
pop
stos
mov
stc
xchg
or
push
out
inc
test
jecxz
js
lahf
push
jbe
push
fdivrl
jne
aam
mov
or
jb
mov
stos
stos
enter
mov
shrb
sbb
ss
out
popf
mov
sti
inc
or
mov
sub
mov
mov
xchg
push
movsl
lcall
jp
cmp
cmpsl
or
mov
in
movsl
pop
and
std
aaa
mov
loop
dec
sbb
jbe
xchg
out
js
loopne
mov
sbb
fstps
dec
sbbl
and
sbb
cmp
adc
adcb
add
dec
sub
add
pop
pop
mov
divl
cmp
out
cmp
shrl
hlt
dec
int
mov
sub
std
mov
adc
or
sbb
xchg
lret
mov
push
or
dec
jl
add
mov
lcall
mov
das
sub
shll
repnz
inc
divl
jmp
incb
cmp
shr
in
mov
inc
xorl
dec
ds
cmovl
adc
jl
cmp
test
lock
in
push
ja
mov
arpl
xchg
push
jno
push
scas
cmpsb
mov
mov
jge
mov
int3
out
jp
xchg
mov
addr16
jae
daa
stos
fbstp
mov
pop
push
xchg
out
daa
lock
addr16
pop
test
cmp
add
in
mov
mov
push
xchg
xchg
mov
sub
and
scas
push
dec
aam
data16
sub
out
add
xchg
mov
cmp
rorb
dec
jbe
mov
in
enter
lahf
test
adc
pop
shll
imul
stos
jnp
cld
xlat
sub
in
push
xor
pop
sub
mov
sbb
mov
add
mov
mov
jge
rcrl
xor
adc
mov
jg
lret
push
mov
inc
sub
mov
or
sbb
xchg
jno
std
dec
flds
pushl
push
sbb
ds
mov
mov
add
outsl
xorl
lds
add
aas
call
xchg
xchg
das
popa
push
sbb
mov
xor
adc
xchg
xchg
nop
test
fiadds
dec
sahf
push
in
imul
mov
pop
popa
fstps
jo
insl
cmp
mov
fs
fldenv
cltd
lea
scas
cli
dec
pop
icebp
and
push
sbb
vpunpckhdq
add
xor
sub
dec
hlt
jge
test
adc
mov
iret
mov
lds
fildll
test
sub
je
dec
lock
addr16
jo
repz
cmp
xor
xchg
xchg
gs
cmc
das
adc
push
mov
loope
gs
orl
pop
repz
or
adc
int3
call
jns
test
inc
cltd
add
xchg
pop
or
jae
roll
jnp
sbb
flds
mov
jb
out
movsl
daa
and
test
dec
into
jno
sub
add
push
fcoml
roll
mov
cld
test
mov
xor
pop
lds
out
jnp
andl
clc
sbb
xchg
mov
gs
das
sbb
and
call
mov
cmpsb
xchg
push
xchg
mov
cmp
push
inc
xchg
inc
int
lret
mov
mov
ljmp
inc
mov
add
lahf
out
add
cmp
shl
add
cmp
mov
enter
mov
jnp
mov
jno
or
dec
adc
lret
and
push
clc
addb
and
xor
jno
xchg
fsubl
xchg
inc
fsubrs
adc
xlat
mov
or
xor
add
dec
movsb
mov
xchg
stos
frstor
arpl
cmp
jnp
mov
scas
inc
xchg
xchg
push
inc
sub
pop
inc
in
std
push
ret
jmp
pop
dec
dec
pop
aad
pop
add
ret
jno
push
and
push
test
in
adc
andb
pop
jb
mov
sub
xor
ficoms
shrl
push
hlt
xchg
clc
rolb
cmp
cmp
push
jnp
pop
sahf
sbb
mov
sbb
shl
inc
and
pop
xchg
or
jp
adc
sbb
and
outsl
jecxz
sbb
bound
ja
inc
mov
push
jns
pop
cli
pushf
cmp
in
push
ljmp
lds
jmp
sahf
cmc
adc
or
pop
mov
lea
adcb
loop
pop
jg
jmp
jle
jae
mov
and
add
pushf
or
inc
je
push
push
inc
rorl
lods
adc
inc
cmpl
in
jecxz
in
cmp
cli
cld
adc
jns
inc
jmp
mov
mov
and
adc
repnz
and
add
mov
imull
mov
imul
sbb
cmpsb
jl
mov
mov
nop
xchg
wrmsr
push
and
je
or
push
adc
shll
push
mov
cmpsb
sub
scas
xchg
push
jge
mov
mov
fisubrs
loop
loop
mov
push
lret
cmpsl
cmp
push
mov
add
sub
les
jmp
fstp
cmp
ffree
loope
push
nop
xlat
aaa
mov
add
adc
fcomps
sbb
dec
jne
cli
hlt
push
cmp
add
inc
ja
lahf
repz
dec
adc
cmp
lcall
mov
cmpsb
cld
loop
sub
icebp
and
aam
jo
mov
cmpb
cmpsb
lods
xor
jbe
jb
jl
cmc
push
push
popf
aad
scas
fnstenv
jb
cltd
cmp
mov
dec
mov
pop
xor
mov
ljmp
add
test
popf
pop
into
add
dec
enter
mov
cmp
xor
test
add
add
mov
fnstsw
jl
daa
stos
push
or
sbb
stos
test
lock
out
pusha
xchg
inc
mov
jg
ds
ds
fimull
cmp
inc
sub
mov
jmp
ret
sbb
xor
xor
push
mov
and
insl
cltd
std
xor
test
std
aad
push
and
mov
std
orl
fs
push
jmp
ret
into
in
xchg
roll
sub
testl
loopne,pn
jl
into
mov
pop
and
mov
scas
mov
in
cs
into
dec
dec
pop
cs
adc
in
jns
and
pop
ss
es
pop
test
xchg
push
sahf
sub
cli
fwait
dec
lods
mov
jno
sbb
int
add
push
pop
and
jo
sbb
fistpl
out
sbb
mov
loopne
jbe
imul
add
jle
fdiv
mov
int3
in
clc
call
rclb
test
aam
lock
mov
shr
adc
insl
popf
xlat
int3
and
cmp
cmp
lahf
push
and
pop
leave
mov
push
jne
push
and
aad
nop
aaa
jecxz
repnz
cmp
fldenv
test
mov
mov
loope
aad
sbb
fcomip
cwtl
and
dec
pop
notb
push
lds
mov
mov
pop
into
or
je
mov
xor
adc
sbb
and
insb
aas
outsl
inc
divb
pushf
mov
aam
xor
sarb
orl
int3
mov
aad
xchg
inc
sti
sti
xor
les
fnsave
test
stos
jae
jne
lods
pop
add
lock
nop
or
sbb
jmp
push
mov
lock
loop
movsb
xor
and
dec
inc
dec
adc
pslld
fdivrl
sub
and
mov
adc
xchg
or
pop
cmpsb
pop
dec
dec
hlt
sbb
scas
jns
rolb
lcall
push
leave
popa
ss
pushf
cld
test
call
ret
fs
or
pop
repnz
push
aas
pop
ja
lods
ja
and
popf
fstl
std
and
movsl
fiadds
lods
and
push
jae
push
out
je
lods
loope
xor
addb
lds
add
sbb
iret
mov
cld
and
rcrb
rolb
mov
xchg
fsts
stc
leave
mov
jns
adc
push
sbb
fs
aam
adcl
scas
notl
fwait
inc
imul
in
cmp
mov
into
rolb
pusha
dec
popf
sar
jecxz
mov
pusha
sub
or
mov
sti
dec
mov
das
dec
dec
jbe
lret
mov
xchg
and
lcall
lock
cmp
push
and
fiaddl
xchg
dec
rorl
shll
sbbl
cmp
mov
mov
sub
aas
icebp
stos
dec
jge
xchg
inc
clc
fistl
pushf
sbb
stc
dec
jp
mov
jmp
jmp
push
mov
pop
addr16
addr16
jne
rol
fmull
std
jmp
fldcw
xchg
adc
nop
push
pop
push
add
shrl
ds
insl
xchg
xchg
pop
push
sub
lret
test
insl
and
scas
fildl
test
test
xchg
fnstenv
xchg
dec
stos
jnp
sbb
ss
lcall
movsb
test
lret
ficompl
aad
cmp
pushf
je
push
add
ret
mov
jecxz
pop
cmp
jbe
mov
jmp
and
adc
out
cmpsl
dec
mov
inc
sub
cmp
mov
popl
add
and
sbb
clc
mov
xchg
stos
pop
test
mov
rorb
dec
out
rcrl
cs
mov
pop
movsl
jne
adc
jns
mov
push
adc
test
sub
testl
mov
je
loope
mov
or
inc
int
xor
fimull
mov
lea
mov
and
lock
movsb
xlat
iret
stc
cld
lds
adc
lds
push
adc
mov
test
notl
adc
shrb
jne
add
lret
xlat
push
mov
mov
mov
pop
rorb
aas
inc
jns
jb
ja
test
fnstsw
and
inc
pop
outsb
push
ficomps
push
outsb
sbb
mov
repnz
mov
iret
lds
repnz
cmp
and
ficomps
and
push
cwtl
pop
negb
in
sbb
jecxz
xchg
fstps
mov
xchg
xchg
jnp
mov
in
cmpb
pop
fstps
xorb
loope
lret
jge
in
mov
pop
int3
jp
dec
into
lods
xchg
into
pushf
jns
pop
mov
inc
das
sub
or
jo
jnp
pextrw
mov
mov
rorb
test
hlt
inc
xchg
mov
ret
mov
cli
xor
sbb
test
pop
adc
adc
or
mov
cld
jb
js
add
mov
xor
add
pop
jl
push
and
cmp
push
jmp
std
aas
popa
adc
sub
pop
fcoml
das
imull
lods
cwtl
cltd
cmp
mov
iret
xchg
popa
mov
xor
fidivrl
xchg
mov
int
xlat
xchg
test
push
js
jae
outsb
or
sbb
xor
shll
shll
leave
inc
push
pop
add
xchg
scas
movsb
mov
loopne
pop
out
xchg
js
jge
mov
sub
or
push
sub
aam
rclb
in
fstpt
pop
xchg
insb
inc
pop
xchg
sahf
cmc
fisttpll
xchg
mov
cmp
inc
je,pn
pop
lods
xchg
push
dec
fadds
in
sar
jae
or
aaa
jns
push
hlt
das
inc
sub
aas
dec
repz
dec
cmp
and
pop
aas
shlb
pop
push
pop
aad
inc
aas
and
add
dec
inc
mov
lds
neg
and
rcrb
or
scas
js
mov
push
xchg
pop
jmp
pushf
ja
cld
insl
ficoml
ss
and
pop
or
push
push
testb
mov
xor
push
out
sbb
and
into
or
cld
in
loop
sub
pusha
push
repz
hlt
adc
dec
aam
xor
fistpll
icebp
mov
xchg
xchg
in
in
lock
mov
rorb
shr
scas
inc
sbb
add
inc
sbb
lods
xlat
inc
dec
stos
incl
mov
inc
sbb
hlt
cld
sub
bound
xor
add
sbb
fnstsw
shlb
jo
ss
clc
xor
xor
test
dec
sbb
or
jp
aad
jnp
mov
inc
imulb
xorb
ja
mov
gs
das
daa
rorb
lret
sbb
add
fwait
sub
ret
shr
pop
mov
sub
xor
inc
cmpsl
movl
shrl
les
pop
xchg
xor
aaa
push
insl
mov
jecxz
aad
dec
add
sub
int
stc
add
mov
inc
rcrb
fidivrs
mov
and
adc
add
lods
xor
icebp
pop
cmc
arpl
sbb
pusha
mov
xchg
xchg
popf
sti
cmc
ror
rcr
sbb
addb
and
or
pop
xchg
test
pop
xchg
dec
bound
cmpsb
cs
pushf
test
out
dec
lods
lock
lret
pop
addb
sbb
ss
add
dec
gs
orb
sti
push
insb
cld
cmp
stos
mov
std
mov
lcall
add
mov
xor
fs
shrl
adc
mov
mov
shrl
mov
jne
fcmove
test
repnz
push
jno
lds
jl
and
mov
mov
aam
mov
mov
mov
jecxz
mov
loopne
scas
adc
fsubr
imul
mov
sbb
sarl
out
and
rcrb
stos
sti
dec
jle
mov
dec
out
xor
out
xchg
lea
add
and
adc
xor
inc
mov
push
inc
dec
iret
mov
push
cmpsb
pop
aaa
cmp
mov
lret
and
movsl
inc
pop
sbb
push
ds
bound
pop
paddd
add
mov
add
imull
in
stos
push
insb
sbb
or
dec
jle
mov
in
sbb
nop
mov
add
movsb
pop
jnp
pusha
xor
dec
stc
and
in
or
dec
mov
scas
xchg
js
sti
arpl
popa
jno
clc
lcall
pop
icebp
jns
mov
jo
enter
repz
and
int3
es
jae
pop
mov
adc
mov
xchg
shll
rcpps
shr
cmp
mov
adc
std
add
scas
lock
jo
adc
mov
mov
mov
in
sbb
popa
or
les
push
fwait
rcll
adc
cld
sub
push
or
pop
cmp
outsb
scas
push
mov
scas
shrb
xchg
inc
mov
cld
jae
mov
cmp
popf
cmpl
cmp
and
xor
pop
pop
sub
in
out
push
sbb
in
pop
adc
popf
stc
push
xor
enter
rcrl
or
xor
adc
jae
adcl
ret
pop
sti
loopne
lcall
mov
pop
ret
cmp
push
mov
or
mov
dec
add
popf
movsl
imul
xchg
cmpsl
ffreep
dec
lcall
aaa
jae
push
xchg
movsb
cmpsl
shll
idivb
xor
cmp
pop
aad
pop
mov
inc
mov
sub
decb
out
out
mov
scas
and
cmpsl
inc
jo
xchg
dec
lret
test
in
push
jge
mov
into
pop
lock
and
outsb
mov
sbb
mov
mov
scas
int3
pop
lds
shlb
cmp
shll
add
add
iret
mov
add
cs
rcl
cs
push
pop
jl
mov
xor
dec
xor
mov
mov
pop
mov
mov
jno
xor
sbb
and
push
mov
add
sub
or
jecxz
lret
cmp
or
dec
jns
push
mov
jge
and
sbb
mov
lcall
andb
ljmp
sub
stos
mov
cli
pop
sbb
inc
xchg
sbb
cmp
sub
mov
out
insb
or
leave
or
andb
mov
aam
pusha
push
lock
movsb
mov
pop
sub
xchg
and
dec
stos
adc
mov
lahf
adc
je
and
sub
push
pop
lods
mov
xchg
mov
and
jne
loopne
sub
lods
jle
ret
fldl
push
sub
ffree
callw
mov
js
pop
mov
push
dec
jl
leave
mov
inc
jg
popf
ret
sbb
adc
inc
stc
arpl
jb
pop
shlb
cmp
shll
stc
stc
cwtl
mov
push
gs
xor
and
sub
inc
loopne,pn
pop
sbb
adc
ss
gs
mov
and
xor
push
lds
mov
imull
adc
sub
lret
cmp
in
inc
push
jp
jne
xchg
and
and
aaa
mov
push
leave
xor
imul
sbb
pop
push
cmpsb
sahf
add
js
jmp
test
hlt
cmp
popa
negb
jmp
mov
xor
shll
mov
pop
mov
add
outsl
add
stos
pop
xor
movsl
cwtl
lods
pusha
int3
jb
mov
cmp
test
mov
js
mov
jno
cmp
imul
popf
lock
cltd
dec
lods
hlt
xchg
cs
inc
fisttps
add
in
mov
pop
outsl
cld
out
mov
inc
sarb
roll
jnp
rcll
mov
int
mov
sarl
fs
icebp
xchg
sbb
xor
adc
rolb
jns
pop
scas
pushw
jo
ficomps
dec
clc
dec
jle
mov
pop
mov
lea
idiv
je
lea
add
sub
movsl
xchg
fidivl
mov
mov
mov
in
mov
aad
sub
sub
out
fs
lret
aam
out
dec
jl
lret
out
pop
dec
in
fnsave
push
mov
push
jge
jle
jns
push
jno
pop
inc
inc
std
enter
call
sbbb
pop
les
add
and
jge
sub
mov
or
push
jnp
scas
out
jb
jmp
pusha
sbb
rclb
leave
pusha
fnstenv
mov
push
mov
mov
and
ss
add
cmp
jae
es
call
fwait
loope
xlat
imul
jecxz
sti
imul
mov
loope
jecxz
fnstenv
or
xchg
add
mov
xor
inc
push
mov
xchg
test
outsb
mov
iret
add
cmpsl
in
lods
sbb
mov
pop
or
popf
and
mov
inc
pop
xchg
sbb
into
out
into
sahf
lds
adc
jmp
cvtdq2ps
test
xchg
pop
mov
in
add
pusha
imul
loop
into
push
jp
fistpll
out
insl
fsubrs
ficoms
in
ret
icebp
add
sbb
ds
inc
jbe
fs
cld
imul
mov
adc
loope
or
stos
data16
faddl
jne
push
or
je
rorl
loop
mov
and
js
andl
fstl
mov
lahf
mov
fwait
jmp
jle
push
ljmp
jns
enter
lds
inc
rcl
fidivs
cs
cli
add
aaa
dec
repz
ja
enter
mov
nop
leave
mov
adc
shll
call
loope
out
out
das
fisttpll
mov
out
mov
mov
nop
jg
fidivs
xchg
sub
imul
cmp
decl
or
inc
or
test
cltd
sbb
mov
repnz
push
ljmp
push
mov
pop
outsl
jp
xlat
jbe
dec
mov
out
mov
or
adc
and
shll
jge
or
int
pushf
mov
and
mov
dec
test
mov
dec
lds
xchg
xchg
inc
fs
das
mov
out
inc
pop
cld
inc
inc
jge
addb
je
and
ret
add
cmpb
in
xor
lret
mov
roll
int3
fadd
inc
and
adcb
test
mov
testb
pop
lock
xchg
ds
insl
adc
sub
aaa
mov
ss
rorb
stc
aaa
xchg
jbe
push
loop
test
fwait
pop
pcmpeqd
popf
lds
mov
jno
gs
xchg
cmp
dec
outsb
das
mov
cmp
inc
mov
mov
lods
cs
sahf
or
pop
add
in
inc
movsl
jnp
ljmp
clc
lods
xchg
pop
rcl
sbb
push
push
and
xor
out
jo
mov
xchg
add
std
ss
call
in
roll
aad
int
out
dec
fisttpl
int3
inc
fiaddl
imul
and
cltd
jne
dec
pop
addl
outsb
xor
mov
xchg
cmp
adc
mov
out
gs
mov
push
outsl
stos
jl
cwtl
pop
call
movb
push
xor
push
cltd
aaa
adcb
pop
call
add
negb
shr
cmp
gs
addl
addr16
mov
dec
dec
or
popa
xor
cmp
mov
mov
imul
hlt
in
add
push
loopne
add
shl
or
movsb
ljmp
xor
add
xchg
push
scas
mov
pop
cmpsb
adc
mov
in
clc
dec
outsb
inc
mov
mov
ret
pop
adc
sub
cmp
ljmp
jb
ds
xchg
loope
leave
sbb
cld
pop
adc
or
sbb
pop
push
and
cld
adc
das
or
add
aam
imul
pop
loopne
cmp
push
add
clc
inc
and
sub
add
xchg
rcll
jge
push
bound
xchg
fcomip
inc
pop
or
insb
in
dec
mov
cmp
push
pusha
xor
jo
xchg
cmp
out
int
pop
call
aad
jmp
inc
idivb
ret
mov
insb
sub
sbb
jbe
or
fistps
fwait
ret
and
popa
in
in
lcall
fsubrl
test
rcrl
mov
jbe
pop
outsl
jmp
aaa
shll
adc
mov
adc
push
lret
es
xchg
popa
loope
inc
aaa
mov
or
mov
mov
and
mov
mov
push
shlb
aaa
xlat
push
movsb
and
or
je
aas
jae
push
inc
mov
xor
sub
dec
mov
aad
mov
push
add
movsl
ss
jl
mov
push
and
xchg
popf
call
push
mov
daa
fidivrs
inc
ss
mov
add
out
imul
popf
outsb
inc
sbbb
lea
sbb
xchg
insb
popf
mov
jnp
test
jge
xchg
mov
test
cmpb
sbb
xor
bnd
popf
bound
pop
cmpsb
fdivs
dec
inc
fwait
sbb
aam
jns
dec
insb
and
aaa
leave
aaa
nop
jle
mov
add
push
pop
adc
nop
cmp
push
mov
fs
fists
in
add
int3
roll
es
icebp
out
jae
sub
jae
push
aad
incb
testl
inc
dec
gs
cli
adc
jbe
jno
inc
cmpl
adcl
repz
lods
mov
aaa
add
push
cmp
cmpsl
les
movsw
sbb
dec
pop
add
mov
sbb
insb
mov
btr
std
pop
imul
push
sbb
test
imul
out
xchg
jp,pt
sbb
outsl
sub
shll
push
mov
lcall
loope
outsl
hlt
dec
cld
cmc
imul
ss
sti
inc
mov
add
and
pop
push
lds
mov
cmpsl
scas
lds
adc
ret
scas
mov
leave
cmp
movsb
sub
pop
pop
inc
mov
call
adc
mov
movb
mov
ret
or
or
pop
sarb
sti
xchg
xor
rcll
adc
inc
incl
es
sbb
ljmp
xlat
mov
dec
movsl
sbb
pushf
fwait
clc
push
arpl
cmpsl
outsb
mov
lret
aaa
mov
xchg
push
mov
enter
add
adc
or
mov
repnz
cmpb
lcall
sti
jge
into
bnd
pop
jg
push
mov
popf
adc
inc
repz
les
test
cmp
pop
push
or
sub
inc
push
sub
push
mov
cwtl
icebp
lret
jo
adc
push
insl
mov
inc
lock
test
mov
xchg
cmp
jecxz
pop
xchg
cmp
lret
dec
out
or
test
cmp
iret
inc
js
jb
mov
out
stc
test
mov
fs
inc
icebp
je
stc
mov
jmp
dec
iret
mov
repz
movsb
push
fidivl
dec
mov
push
xlat
mov
xor
mov
cli
sbb
ds
mov
add
ret
mov
pop
xchg
adc
les
push
sbb
cli
shll
mov
jmp
adc
add
xchg
out
or
sbb
and
in
xchg
arpl
popa
lock
fisubrl
add
cwtl
shrb
inc
testb
jge
les
pop
rcrb
movl
cltd
xor
dec
xor
sbb
jb
movsl
inc
sbb
cmp
mov
dec
out
jbe
pusha
lock
mov
push
xchg
adc
ja
or
je
call
push
adc
cmp
cwtl
js
into
sbb
cmp
cmp
movsb
sbb
jne
xchg
dec
add
jbe
inc
out
into
jnp
dec
popf
lds
lret
ljmp
mov
inc
add
lods
xchg
hlt
lret
outsb
xchg
or
iret
xchg
mov
push
ret
clc
sub
stc
dec
sbb
sbb
mov
inc
mov
pop
lods
lea
and
or
or
out
cmpsb
pop
loopne
push
aad
push
ljmp
sub
fdivl
int3
sarb
mov
xchg
fisubs
popa
push
cmpsl
cli
mov
repz
xor
adc
jecxz
les
and
add
pop
add
lret
xor
mov
das
sbb
jle
ljmp
cmp
mov
enter
cmp
sub
ljmp
push
frstor
test
mov
rol
pop
lea
cmc
jb
jns
add
leave
roll
xchg
cmp
xor
pop
adc
push
jne
inc
jo
imul
test
rep
sub
push
nop
add
pop
fcom
mov
jae
or
jge
sub
or
push
add
stos
xchg
sbb
rol
mov
push
or
mov
add
mov
in
imul
cs
outsb
cltd
xchg
cs
shlb
pop
cmp
pushf
mov
sub
mov
ljmp
mov
and
loopne
rclb
sub
stos
pop
and
jb
imul
add
jmp
adc
hlt
sti
mov
xlat
xor
adc
mov
sub
or
dec
cmpsl
mov
jb
cmc
inc
mov
jae
add
xor
out
shlb
test
int3
rcrl
dec
fsubr
test
test
test
not
shll
orb
xchg
repz
or
push
and
clc
rolb
or
inc
sbb
popa
xor
ret
data16
out
jp
fidivs
xor
cmp
mov
scas
mov
or
xor
push
or
cmp
jl
sbb
or
movsb
lods
shl
pop
push
bound
hlt
out
push
hlt
fidivrs
dec
mov
sti
dec
stos
mov
and
or
mov
stc
mov
sbb
pushf
scas
xchg
out
sarl
mov
repz
out
sbb
inc
inc
iret
in
dec
add
fwait
push
or
mov
or
iret
push
sbb
mov
movsl
mov
lods
repnz
push
shrl
ja
outsl
xchg
mov
decb
mov
outsl
mov
icebp
mov
scas
xchg
repnz
loopne
addl
enter
jne
fimuls
in
test
dec
cmp
cmp
bound
jb
mov
movsl
inc
mov
jge
sti
inc
stos
fld
xchg
xlat
icebp
ljmp
mov
lds
fcomi
pop
stos
dec
shl
cltd
nop
mov
enter
shll
or
andb
mov
mov
pop
mov
sti
test
or
xchg
pop
mov
sub
jb
jle
cld
or
sub
stos
add
mov
sahf
xchg
int
adcb
jecxz
imul
mov
dec
adc
push
aam
push
out
in
cvtdq2ps
sub
mov
mov
aas
shlb
mov
imul
dec
int
sub
mov
mov
cwtl
or
mov
push
movsb
xchg
sub
sub
popf
jle
dec
cmpsl
hlt
lods
and
add
insb
jne
decl
mov
jmp
jge
sub
ss
inc
xchg
mov
aas
sbb
and
mov
cmp
adc
dec
pop
add
inc
cmp
cld
movsl
pop
sbb
xchg
in
jg
loope
add
addr16
rorb
xchg
adc
pop
xor
or
lcall
adc
sbb
test
jl
dec
mov
call
lret
jg
movsl
pop
and
inc
inc
or
sar
sbb
xor
leave
xchg
nop
xchg
cmp
dec
scas
mov
gs
and
jp
ret
cli
mov
adc
cmc
int3
mov
dec
mov
pop
outsb
xchg
lcall
stos
es
lahf
add
mull
ret
mov
mov
nop
and
pop
outsb
scas
mov
pusha
push
pushf
sarl
xchg
jne
mov
movups
mov
rcll
inc
cld
and
movsl
inc
clc
mov
mov
mov
int3
mov
call
arpl
dec
add
dec
mov
aas
mov
aad
je
test
int3
push
xchg
mov
or
xchg
inc
mov
into
pop
sti
cmp
pop
out
mov
adc
adc
xor
or
iret
jo
sbb
pop
outsb
jo
mov
loop
inc
and
es
ds
pop
cmp
cmpsb
inc
mov
mov
divl
orb
or
popf
shr
pop
call
pop
daa
push
int3
out
gs
push
aaa
pushf
mov
mov
lods
testl
and
xor
cwtl
andb
enter
fimull
mov
fimull
leave
fadd
cmp
fcompl
lods
lcall
sbb
pop
dec
xchg
pop
push
xor
divb
mov
test
test
cmp
insb
test
fnstsw
cmp
pushf
ret
sub
loop
std
or
jmp
inc
shlb
mov
sarl
enter
dec
push
mov
call
cmp
pushf
dec
sub
lret
sbb
push
adc
or
out
mov
stos
fucom
sbb
and
jecxz
es
inc
xor
into
and
lret
les
xor
test
movsl
enter
stos
cmpb
imul
or
gs
jbe
insb
cld
and
pop
add
add
adcb
es
and
std
nopl
push
out
mov
ja
push
mov
push
negl
addr16
mov
iret
xchg
jbe
jo
cltd
fistpll
ja
push
dec
stc
outsb
divb
fwait
mov
dec
xor
addr16
into
sub
mov
lods
sahf
hlt
add
xor
cmp
push
sbb
push
popa
pop
pop
add
jne
cli
mov
outsl
dec
loopne
mov
mov
test
inc
push
push
jo
xchg
lahf
ret
dec
adc
stos
arpl
ja
dec
sbb
test
dec
pop
cs
xor
ja
fdivrl
pop
pop
mov
push
push
mov
jnp
add
mov
jg
subb
outsb
cli
push
sub
pop
mov
stc
mov
jge
shrb
imul
fsts
jnp
xor
test
insb
push
jle
cli
shll
into
mov
pop
sbb
in
add
data16
call
sub
xor
sub
mov
mov
push
dec
jecxz
cmp
dec
mov
jl
lret
fmuls
out
jmp
repz
fisubs
mov
jge
test
sti
cmpl
bound
push
dec
add
loop
jae
jle
xor
cmp
jge
pusha
sub
xchg
jl
cmpsl
sub
push
xlat
loop
push
dec
aas
adc
fbld
cmp
aaa
sti
ds
add
subb
lock
lret
fistpll
ljmp
inc
jb
pop
shlb
cmp
loopne
testl
mov
fcoms
mov
mov
pop
push
mov
repnz
inc
xor
cs
cli
add
in
sub
bound
mov
clc
jmp
mov
adc
adc
mov
shlb
outsb
addb
mov
aaa
mov
cld
mov
in
in
mov
mov
outsl
in
jae
rcl
test
out
insb
cltd
dec
out
or
call
mov
dec
leave
xor
movsb
ficomps
mov
or
push
inc
mov
xlat
lock
std
aad
cmp
scas
int
fmull
pop
stc
dec
mov
repz
notl
dec
mov
shl
sbb
lret
mov
in
jp,pt
or
int
sti
leave
movsb
jg
mov
lock
sub
test
jne
out
cmp
cmp
cmp
mov
xor
data16
stos
shrl
div
add
pop
loop
or
mov
and
cld
cmp
stos
mov
mov
cmp
test
jno
ds
sbb
jo
aam
mov
mov
mov
xchg
xlat
pop
push
and
cmpb
xlat
inc
je
or
or
out
cli
jmp
and
jo
dec
jno
addb
mov
in
lock
and
cmpsl
xchg
jo
sub
fdivr
lock
in
outsb
jo
fdivrl
jmp
mov
pop
xor
xor
mov
faddl
xor
lea
cld
test
out
jle
enter
pop
lock
inc
xor
clc
insb
loopne
rorl
scas
pop
and
pop
pop
add
call
sub
ficoms
pop
or
jecxz
arpl
daa
lahf
xor
push
adc
push
mov
in
xchg
and
int
pop
add
jns
movsl
out
adc
inc
insl
or
mov
subl
outsb
insl
add
jg
inc
loop
in
popf
cmpsl
fidivrs
jno
push
dec
mov
add
lods
gs
sbb
lret
cmp
call
stc
test
push
dec
mov
add
mov
inc
jbe
insb
mov
sbb
lock
repnz
movaps
jns
cld
popa
cmpsl
cmpsb
or
push
leave
pop
bound
pop
mov
sti
push
movsb
and
add
or
and
xchg
xchg
test
jnp
push
push
add
lahf
lret
iret
mov
sbb
iret
leave
in
gs
push
hlt
sub
cmp
cmp
mov
mov
jmp
jbe
fldcw
hlt
hlt
xor
ja
or
shr
inc
sub
lds
rolb
cmp
imul
imul
dec
js
sub
fcmovnb
jae
clc
das
and
shl
stc
sub
rclb
xor
sarb
and
rorb
aaa
movsl
scas
in
dec
les
sub
jecxz
push
cmc
orb
pop
popa
loop
arpl
lock
fcmovne
cs
add
sbb
push
loopne
into
pop
inc
adc
int3
push
sbb
adc
xchg
stos
insb
jno
jecxz
push
dec
pop
dec
xor
push
sbb
pop
cmpsl
jg
pop
mov
fs
fildl
sub
add
nop
shll
shll
add
cmpsb
push
xor
jecxz
jae
scas
movsb
insb
std
loope
daa
scas
out
roll
or
in
xlat
pop
mov
les
bound
je
push
jne
addr16
in
sbb
xchg
mov
jmp
aam
and
ror
mov
or
pop
pop
push
or
sub
dec
jge
pop
add
sub
jnp
aaa
sbb
orl
dec
push
xchg
stc
rcl
sti
loop
in
test
xchg
and
and
and
add
sub
mov
adcb
sbb
push
xchg
lea
adc
in
jg
or
mov
mov
xchg
fmulp
and
rolb
mov
dec
inc
dec
fwait
xor
xchg
push
push
lret
insl
cltd
lods
xchg
push
lock
shll
test
sub
cli
xchg
pop
xchg
mov
jo
dec
sub
push
pop
test
imul
sub
xchg
call
xchg
add
xchg
pop
movsb
pop
xlat
ljmp
push
fisubrl
ljmp
movsl
and
loope
cmc
mov
and
and
cs
and
mov
xor
push
adc
lock
xchg
pusha
xchg
aas
addr16
ror
cmp
cmp
inc
pop
xor
inc
sub
lret
cs
cmpb
jle
inc
stc
mov
pop
movsl
sbb
cmp
aas
arpl
jmp
test
inc
adc
fistpll
ds
jns
js
std
cmp
out
pushf
push
push
hlt
add
xor
or
pop
push
pop
xor
andb
sbb
fcomi
out
arpl
mov
push
or
mov
mov
cmp
std
xor
clc
mov
popf
rcl
jl
mov
repnz
or
roll
pop
ljmp
scas
mov
mov
dec
xchg
pop
push
movsl
imul
cmp
icebp
dec
leave
xchg
sar
and
jns
out
arpl
iret
addb
xchg
jns
in
adc
dec
rol
jecxz
adc
std
pop
lock
push
mull
mov
jnp
fwait
and
mov
cmp
fistpll
xor
and
pop
repz
div
addr16
or
imul
test
orb
lods
dec
fidivl
xchg
into
adcb
jmp
jmp
push
jge
aas
dec
push
adc
mov
inc
jecxz
xchg
push
cmp
add
and
mov
stc
xchg
cmp
jno
push
mov
int
mov
stc
add
add
sub
in
push
hlt
adc
dec
dec
jb
adcl
rcrb
nop
bound
subb
xchg
inc
push
mov
mov
mov
aaa
icebp
and
mov
pop
or
pusha
imul
test
clc
lahf
repz
test
test
mov
add
xchg
dec
push
fnstsw
fimull
dec
testl
daa
nop
and
cmp
dec
out
sub
push
sub
xor
rorl
loope
gs
ja
mov
popf
or
jno
daa
out
outsl
xor
pushf
jle,pn
cmp
sub
mov
outsl
xlat
and
lea
jge
sbb
addr16
inc
jae
clc
dec
push
arpl
data16
jbe
mov
leave
mov
xorb
ret
push
push
clc
and
cmpsl
inc
call
mov
jge
sbb
add
clc
je
out
les
mov
sahf
or
xlat
xchg
sub
ret
repnz
inc
cli
inc
cmp
mov
fstl
sub
cmp
inc
loope
xor
xor
add
ljmp
scas
mov
int
pushf
cmp
loopne
pop
testb
pop
cmp
lock
sarb
in
pop
divl
lods
xchg
mov
popa
negb
ljmp
cmc
inc
inc
xchg
and
mov
cmp
cli
test
push
push
mov
dec
inc
shll
jmp
mov
jp
shlb
mov
insb
add
xor
adc
xchg
pop
cltd
push
or
aam
loope
inc
test
mov
dec
fldenv
xor
insb
mov
jno
jo
push
inc
in
lret
in
or
mov
notl
xor
lock
cmpsb
cmp
mov
jp
sbb
and
xlat
ljmp
lock
and
inc
shr
iret
xor
inc
test
mov
ds
mov
les
flds
imul
pusha
aam
bound
mov
jg
lods
push
dec
jnp
nop
cmp
fistl
push
sub
adc
ret
cmpb
in
xor
pusha
ret
push
cmp
jbe
test
shlb
cmpl
inc
aas
arpl
lret
popf
inc
sbb
fcmovbe
jns
sub
iret
push
mov
int
out
dec
outsb
cmpsb
mov
ret
add
insl
test
fbstp
inc
mov
repz
fnstsw
je
ret
push
imul
push
dec
jge
shl
mov
aad
add
xchg
jo
pop
dec
push
mov
dec
out
sbb
lea
pop
and
mov
hlt
jl,pn
sub
fs
stos
cmp
xlat
adc
rol
or
lock
xchg
popf
bound
or
mov
or
pop
xchg
inc
shr
fdivr
lcall
nop
scas
icebp
clc
ret
push
mov
adc
fldcw
cli
push
push
imul
inc
add
ja
test
jo
push
inc
jns
js
sbb
mov
cld
scas
daa
call
pop
ljmp
push
rorl
std
jecxz
or
push
jmp
in
cmpxchg
add
xchg
cwtl
int3
data16
mov
push
mov
ljmp
xchg
xor
push
xchg
das
sub
pusha
jbe
and
clc
out
mov
inc
call
jl
addl
cltd
jecxz
xchg
sub
pop
scas
mov
flds
and
dec
test
ja
add
lds
and
mov
jg
jns
adc
ja
xchg
clc
mov
mov
stos
sub
lods
xlat
xor
push
mov
ret
dec
in
das
test
adc
cmp
les
pusha
shlb
push
cld
cmpsl
pop
pop
pop
cmp
sbb
fwait
in
lahf
aam
add
mov
pushf
sub
icebp
sub
sahf
mov
push
cvtps2pi
cmp
cmpsb
mov
push
stos
add
push
aas
sbb
add
test
push
scas
fstpl
jg
xor
imul
mov
pop
out
aam
stc
push
insb
jae
pop
ja
cmp
or
mov
mov
inc
jle
or
popf
pop
mull
xchg
mov
mov
pop
jecxz
sbb
jg
and
js
add
stc
mov
sti
jne
xchg
pop
ret
cmp
inc
sub
jo
aas
inc
adc
jl
stos
stos
lcall
jb
das
push
das
pop
shlb
jmp
dec
es
ret
clc
nop
mov
imul
inc
lret
mov
mov
outsb
ds
push
cltd
xor
cmpsb
xor
fs
icebp
por
push
pop
pop
xchg
sub
sub
and
sub
push
and
scas
jecxz
adc
loopne
cmp
mov
pop
es
mov
into
clc
pop
adc
insl
repnz
fmuls
mov
gs
mov
fwait
sub
mov
jecxz
lret
xor
lds
iret
arpl
sub
mov
callw
enter
push
sub
cltd
jp
test
xor
jno
xchg
outsl
ljmp
mov
and
mov
mov
dec
push
mov
call
scas
add
lock
lock
or
or
je
adcb
sahf
pop
std
cli
dec
mov
xlat
popa
ljmp
pop
insb
imul
scas
lock
in
and
lret
sub
or
pop
dec
cmp
rcrb
cmp
lods
xchg
imul
ljmp
insl
and
jb
xchg
pop
xor
fadds
adc
push
fildll
out
dec
sbb
inc
jecxz
pop
xlat
inc
in
movsl
cmc
sbb
in
mov
fs
xor
icebp
repnz
jge
lahf
mov
scas
loopne
adc
pop
ja
push
out
push
cld
icebp
mov
imul
cmc
fiaddl
addb
add
xchg
xchg
std
xchg
ja
out
notl
xor
lcall
test
cld
das
cld
inc
jmp
lret
stos
and
mov
adc
sbb
ljmp
or
cmp
sbb
inc
lods
int3
jno
sub
das
enter
pop
mov
xor
sarb
sub
inc
stos
and
vpandn
in
add
push
adc
cli
das
test
mov
inc
push
lret
insl
js
popa
cmpsl
cmp
xchg
sarl
mov
in
ja
mov
mov
cmpsb
mov
xchg
adc
mov
call
stos
fisubrs
fildll
xlat
jg
dec
pusha
mov
cmp
lahf
cmpl
push
ljmp
sub
and
loopne
dec
sarb
push
pop
mov
dec
mov
mov
fdivrs
pop
and
xor
fdivrs
movsb
xchg
or
lock
mov
je
dec
movb
pop
push
jb
pop
aas
pop
dec
shll
or
data16
test
dec
xchg
insb
test
jp
mov
add
sahf
jl
sbb
pop
scas
lock
rcrl
insl
fld
push
scas
dec
xlat
add
scas
in
pop
shl
xchg
out
xchg
cmpsl
sub
dec
testl
mov
dec
aad
cmpsb
add
push
out
jb
loope
fwait
ret
ret
out
pop
xchg
imul
push
push
or
xchg
out
mov
fsts
rcll
fadd
testb
push
jp
adc
and
lret
sti
mov
jo
mov
cmp
adc
movsl
aad
jecxz
imull
iret
cmp
sbb
xchg
aam
add
daa
sbb
in
cwtl
lods
push
jg
imul
mov
xchg
and
lock
hlt
in
mov
imul
ss
adc
inc
insl
repnz
nop
scas
lock
mov
xor
bnd
inc
cltd
subl
sti
idivb
xor
sbb
in
dec
pop
jl
fs
adc
sti
sub
and
ret
xchg
mov
sti
inc
adc
mov
jle
pushw
cmp
jge
pusha
inc
fwait
mov
xchg
fdivs
and
iret
mov
outsb
jnp
pop
jmp
adc
xchg
scas
test
jge
lods
lret
int
pop
lgs
xchg
out
push
enter
sbb
andl
xchg
lahf
sbb
sub
pop
fnstenv
sbb
rcrl
shl
mov
pop
imul
fisubl
stos
popf
inc
sbb
insl
andb
adc
mov
sbb
aad
jge
mov
inc
mov
jns
stc
xor
jecxz
pop
mov
lods
mov
loopne
pop
mov
sti
push
js
shrb
mov
cmc
hlt
insl
mov
outsb
movsl
ss
adc
jo
push
inc
and
xchg
int3
sbb
mov
pushf
lret
add
add
dec
pushf
pop
mov
adc
pop
dec
sbb
stc
xchg
or
dec
xchg
stc
dec
mov
shlb
add
cmc
mov
stc
pop
mov
sahf
xchg
mov
mov
ret
sbb
out
shl
adc
fbld
pop
fndisi(8087
or
push
movsb
bnd
lcall
repnz
push
addr16
loop
jno
add
flds
dec
inc
arpl
arpl
sub
pop
jb
enter
xchg
fadds
mov
fidivrl
inc
xchg
scas
and
stos
add
push
test
in
bound
icebp
cltd
sahf
ss
lret
jge
int3
hlt
and
nop
sbb
movsl
pusha
jecxz
xchg
cmp
cmpsl
pop
mov
push
lahf
jns
test
fiaddl
bound
dec
out
mov
xchg
push
ljmp
push
test
out
ret
xlat
fwait
icebp
stos
lods
xor
dec
clc
rclb
or
xlat
iret
mov
sti
arpl
pop
pop
scas
aas
lret
and
pop
pop
push
data16
insb
loope
fisubrs
nop
add
or
mov
and
push
sbb
shrb
orb
sub
jns
adc
subb
sti
mov
das
mov
je
xchg
xor
or
mull
jmp
test
mov
ds
pop
clc
enter
fldt
sbb
ret
xchg
sub
pop
jmp
cmp
sarb
ljmp
test
mov
orl
aas
fcomip
jne
jnp
cmp
ja
and
inc
gs
push
cmpsb
out
mov
test
hlt
sub
dec
add
dec
and
adc
data16
dec
mov
fldcw
addr16
or
fmul
or
push
insl
int3
cmp
cltd
int
movsb
xor
hlt
cmp
xor
std
mov
jmp
and
xchg
sub
xlat
mov
jp
push
mov
fwait
push
sub
fs
arpl
cwtl
in
ljmp
xchg
repz
test
cmp
in
xchg
test
aad
pusha
cmp
mov
cmp
xchg
xor
loop
nop
out
out
in
push
test
jg
mov
cmp
or
push
jb
mov
clc
add
adc
aam
pusha
or
js
cmp
pusha
jae
mov
js
or
scas
rcl
push
inc
out
push
dec
mov
xchg
or
in
and
inc
sub
mov
dec
sub
push
pop
fcmove
xor
ror
add
pop
stc
addb
ficompl
bound
in
add
lcall
xor
aaa
sbb
sub
pop
or
xor
hlt
mov
faddp
xor
in
out
cld
scas
repnz
pop
out
inc
mov
sub
xrelease
push
add
sbb
nop
pop
xchg
out
jnp
loope
inc
push
cmpsl
stos
mov
jmp
les
xor
aam
adc
popl
stos
dec
imul
ss
js
sub
fsubr
outsl
and
lds
adc
je
push
ljmp
mov
inc
mov
push
pusha
cmp
xchg
insb
push
dec
cltd
ljmp
jp
mov
aaa
fcmovnu
movsl
mov
xchg
xor
cmp
cmp
sbb
popf
inc
xchg
adc
pop
aaa
int
div
sbb
sahf
jmp
xlat
clc
mov
ficoms
add
test
stos
dec
mov
sub
dec
or
sub
pop
mulb
dec
pop
aas
in
xor
test
sti
mov
adcl
ljmp
lods
stc
addr16
push
xor
xor
xchg
mov
andb
scas
fildl
in
mov
dec
lret
jle
out
add
sbb
arpl
fxam
repnz
xchg
xchg
iret
mov
cmp
pop
ljmp
sbb
pop
lahf
test
cmp
inc
push
imul
shll
pop
cmp
fsubp
inc
lahf
push
cwtl
xorb
and
push
sub
out
xchg
xor
xor
jns
jns
mov
lock
xchg
mov
push
ljmp
fimull
rcll
pop
rorl
jl
js
and
cmc
aam
out
or
es
or
mov
xor
outsl
cmp
leave
in
lret
or
mov
adc
pusha
notl
lret
xor
pop
sub
and
sbb
out
int
xchg
xor
sbb
add
rorb
cmp
mov
dec
jmp
inc
into
dec
pop
mov
adc
jo
dec
std
cmp
lock
cmp
xor
mov
pusha
mov
gs
bound
es
push
jle
mov
xchg
adc
jl
pop
add
adc
subl
inc
test
and
scas
pushf
pop
repnz
out
add
dec
inc
stos
xchg
sbb
and
stos
add
jbe
in
lret
test
cmpsb
xor
sahf
mov
xchg
jge
sahf
xchg
sbb
incl
jl
sbb
add
jbe
sub
ja
mov
je
lods
jo
mov
rorl
sbb
inc
aad
mov
jns
pop
xchg
mov
push
js
hlt
jae
sarl
xchg
cmp
in
adc
cmp
pusha
ss
les
inc
addr16
cmp
sbb
adc
les
sbb
xor
cli
dec
sub
pop
lret
std
pusha
inc
cmp
bound
adc
xchg
adc
mov
lock
fdivl
call
mov
sub
push
xchg
daa
int
and
and
popl
sti
aam
sbb
xor
jl
outsb
insb
pop
xor
icebp
mov
mov
js
test
mov
stos
mov
pop
jns
imul
gs
mov
lods
sbb
adc
xor
pop
mov
jecxz
insl
pop
push
add
xor
mov
aad
out
les
mov
popf
sub
adc
je
testb
xor
scas
imul
jg
xchg
lds
fneni(8087
or
movsb
test
adc
cmp
iret
je
outsl
mov
arpl
iret
subl
cmp
fwait
test
inc
test
adc
sub
leave
shlb
inc
das
mov
adc
cmp
cltd
mov
mov
cmp
cmpl
or
push
imul
xchg
leave
mov
push
pop
mov
lds
push
pop
xor
mov
fimull
cld
inc
repz
mov
jbe
fists
sub
ja
addr16
sti
push
mov
sbb
sub
lahf
je
stc
pop
nop
mov
inc
sub
push
in
xchg
shlb
dec
rorb
jge
add
mov
xchg
and
jb
repz
inc
sub
sbb
enter
js
mov
mov
xchg
subl
xchg
mov
xor
xchg
xchg
xlat
pop
cmp
sarb
xorb
popa
test
cmp
add
mov
sahf
int
int
ret
jne
xchg
dec
jne
mov
out
popf
daa
jmp
insl
sbb
pop
enter
jp
cmp
push
pop
sti
mov
repnz
repnz
cmp
xor
add
xor
or
in
lods
nop
movb
scas
adc
inc
fsubr
mov
sub
cltd
mov
movsl
adc
scas
mov
push
loopne
sbb
jae
pusha
fldcw
mov
ret
fdivl
push
dec
and
jns
gs
push
pop
inc
sub
push
inc
stos
ret
mov
nop
dec
insl
jmp
addr16
jg
stos
outsl
push
outsl
jo
sbb
ret
pop
push
in
cmpsb
dec
in
add
shr
push
xchg
popa
lods
inc
popa
les
pop
xchg
iret
and
jge
in
or
call
in
andb
pushf
push
mov
sub
xchg
jb
call
mov
pop
mov
pushf
insb
mov
xlat
xchg
stos
movsl
cmp
popa
shll
xor
jns
and
outsb
mov
fnstenv
mov
pop
mov
xchg
xchg
sahf
cmp
lcall
push
sub
fisubrs
xchg
push
pop
insb
add
add
shlb
jo
and
pop
fadds
in
add
out
das
fdivrl
mov
je
dec
add
and
xchg
aad
in
pop
mov
push
add
call
insl
sub
or
sub
fisttpll
gs
les
xor
mov
sub
lret
dec
pop
adc
loope
in
push
push
ljmp
push
dec
dec
movsl
mov
cmp
cmp
mov
test
pushf
movsl
negl
push
mov
sub
sar
xor
lcall
and
fidivs
dec
xlat
add
jb
jg
jns
shll
add
add
stos
mov
push
iret
sub
ljmp
pop
push
pop
cmpsb
mov
aam
mov
jae
rolb
pop
fsubr
int
jbe
je
jb
lcall
int3
adc
inc
inc
aas
rolb
add
shll
xchg
push
sarb
sub
mov
sbb
pop
fisubl
jo
sbb
xor
push
rorb
mov
movsb
addr16
push
pusha
bound
mov
inc
lods
add
clc
xor
xchg
rcrl
aad
and
mov
nop
stos
hlt
ret
adc
stos
mov
pop
inc
sbb
sbb
mov
xchg
in
mov
insl
inc
push
add
bound
and
adc
add
sub
outsl
aas
ds
cmpsl
cmc
insb
ret
mov
fmull
fimull
jo
ret
pop
iret
mov
lods
clc
push
xchg
test
ss
inc
add
adc
pop
cld
xchg
xchg
mov
push
aam
daa
sub
dec
test
mov
xchg
int3
mov
outsb
xchg
pop
adc
cmp
scas
inc
or
idivl
inc
sbb
push
repnz
rorl
push
arpl
cltd
ja
popf
jae
fwait
dec
cmpsl
fsubs
pop
cmp
stos
repz
enter
adc
and
lret
add
or
push
xor
mov
aaa
push
call
or
push
push
es
popa
jmp
js
scas
adc
lahf
fisttps
lcall
inc
and
out
imul
pop
cld
addr16
cwtl
sahf
adc
push
xchg
iret
and
out
jb
fwait
ret
in
mov
leave
add
dec
dec
pop
or
sub
es
aam
or
popf
lds
in
mov
arpl
push
push
push
cmpsl
hlt
rclb
push
icebp
fwait
inc
and
loopne
dec
jg
popf
jecxz
push
dec
lret
sbb
fwait
aaa
popa
xchg
fistpl
sbb
push
xor
inc
std
or
ficoml
imul
adcb
frstor
aaa
popf
mov
mov
push
jo
or
add
sarb
or
loopne
add
in
sbb
lea
jnp
push
cmp
dec
ffreep
outsb
xlat
push
jle
or
cmpsl
inc
scas
push
das
mov
lds
in
push
fadds
mov
mov
push
mov
clc
jecxz
pop
xchg
or
cmpsl
dec
cld
or
push
js
aas
sti
lahf
scas
sbb
and
out
xor
aaa
push
in
dec
insb
fsubs
movsl
xor
xchg
add
push
push
mov
adc
nop
ret
xchg
pushf
int
enter
jle
xlat
ror
hlt
int3
jb
mov
push
jne
fs
iret
pop
push
in
in
pop
nop
adc
dec
sbb
push
pop
cltd
mov
dec
lds
bound
ds
lock
out
nop
inc
fs
dec
ret
out
mov
iretw
stos
sub
popa
push
jo
in
cmp
ds
shl
call
sub
or
iret
sti
sbb
mov
mov
aas
adc
sbb
pop
push
sbb
inc
addr16
insl
xor
fs
push
mov
sahf
push
loop
aam
outsb
xor
adc
and
aas
mov
into
sahf
out
xor
jo
adc
ret
or
xchg
mov
mov
lds
adc
mov
and
adc
pop
addr16
test
mov
lea
cmp
jns
adc
imul
idivb
push
subb
test
or
dec
jae
js
mov
xor
xor
jmp
cmp
cmc
jl
mov
cmpl
enter
cld
dec
out
test
fs
dec
mov
dec
xchg
mov
cmpsb
fnstcw
cwtl
lret
xchg
or
aas
cmp
lret
ret
sub
pop
xchg
mov
cmp
je
jmp
dec
jmp
addr16
or
xchg
pop
and
mov
adc
jle
inc
repnz
cmp
mov
gs
mov
fcmovne
insl
pop
scas
mov
add
adc
and
sbb
imul
loop
mov
test
dec
cs
pop
or
push
inc
inc
cwtl
adc
repnz
notb
mov
mov
xor
and
fdivrl
lea
mov
jle
adcl
pop
jp
mov
inc
add
mov
std
or
xor
iret
stc
popf
ficomps
call
mov
frstpm(287
pushf
hlt
push
adc
mov
idivl
outsl
bound
cmp
arpl
cmp
adc
sub
pop
in
mov
nop
stc
sbb
pop
hlt
cmpsl
inc
mov
loopne
push
mov
mov
jge
ret
imul
dec
lds
jl
xchg
outsb
push
lds
push
test
inc
push
sub
mov
jo
subb
mov
dec
test
adc
fimull
sub
inc
mov
add
je
pop
js
aad
push
mov
das
jae
mov
cld
hlt
repnz
addr16
icebp
inc
dec
lahf
sub
nop
cmp
fadds
add
pop
js
inc
jo
shlb
pop
into
cmp
xchg
adc
lods
testb
adc
std
and
fimull
sub
mov
mov
fimull
insl
mov
leave
jle
xorb
jmp
jns
sti
or
fbld
xor
jnp
pop
int
dec
sahf
mov
imul
fs
in
in
out
xor
imul
mov
push
mov
pop
push
dec
loopne
out
mov
inc
jl
les
push
sub
mov
lea
and
out
lret
dec
sub
mov
out
mov
sub
inc
pop
hlt
lods
push
aad
jg
in
xchg
dec
mov
inc
pop
add
incb
mov
loope
jp
and
loop
pushw
lds
sbb
xor
test
sbb
stc
xchg
xchg
dec
enter
mov
mov
daa
movsb
ret
repnz
cli
gs
das
cmp
enter
lahf
push
in
rorb
ljmp
rorl
insl
enter
mov
js
xorl
out
push
dec
push
cli
push
hlt
push
dec
fs
ljmp
stos
mov
lcall
call
lret
inc
loope
daa
jl
jnp
xor
xchg
je
shll
rclb
push
movsl
sbb
push
sub
mov
call
je
clc
cltd
out
es
and
daa
outsb
pop
popl
repnz
aas
push
mov
outsl
mov
cld
add
es
jbe
adc
pop
sti
int
xchg
out
and
loop
cwtl
scas
cmp
cmp
sbb
push
cwtl
jo
sub
orl
dec
mov
jp
loop
fcmovbe
mov
insl
adc
rcrl
ret
cmp
or
mov
mov
jg
nop
xor
jle
adc
sahf
repz
sub
in
and
mov
push
dec
pusha
push
rclb
lock
xchg
nop
test
xchg
and
std
ret
xchg
arpl
or
cmp
enter
push
lods
pop
aad
test
sbb
inc
adc
ljmp
pop
leave
jnp
les
mov
cmp
jg
pop
xchg
fs
push
mov
inc
loop
cmp
cmc
inc
iret
dec
andb
data16
sbb
sbb
inc
rorl
testb
fldcw
in
mov
ljmp
aam
mov
mov
sub
xchg
pushf
mov
add
in
dec
mov
rep
inc
cmp
jmp
mov
sub
xchg
mov
in
push
or
dec
mov
add
ss
and
cmp
ss
jg
sub
mov
push
push
enter
in
cltd
cmp
lods
scas
push
jp
xchg
testl
ret
mov
mov
sahf
pop
jge
jecxz
add
push
or
and
sarl
mov
shll
je
push
pushf
and
push
insl
cli
lret
add
xor
ret
imul
inc
int
enter
pop
out
push
jae
mov
xor
push
pop
jae
push
mov
scas
ret
arpl
cltd
cmpsb
lock
push
add
aaa
mov
pop
out
xor
aad
test
sub
insb
sti
and
push
ljmp
jmp
data16
ret
orb
inc
arpl
ret
dec
push
shll
adc
pop
xchg
cmp
dec
sub
mov
fs
icebp
rcr
das
jp
mov
jmp
fnstenv
testb
ss
ljmp
mov
mov
mov
scas
imul
jecxz
mov
sub
inc
add
int3
xchg
xor
icebp
xchg
fildl
inc
stos
xor
mov
push
insb
je
imul
pop
xchg
cs
lret
xlat
aad
mov
xchg
dec
xor
cltd
mov
fsubrl
scas
adc
aam
int3
test
xchg
cmp
cmpl
jnp
mov
xor
lret
in
or
in
jg
imul
test
movsb
bound
push
insb
mov
jo
mov
dec
out
movb
mov
xchg
add
jb
jae
shlb
lret
imul
inc
xchg
loopne
add
and
and
ds
mov
push
hlt
mov
insl
xchg
adc
jb
push
jge
insb
or
arpl
pop
dec
sbb
repz
pop
ss
test
stos
js
testb
aad
ljmp
popf
dec
and
sub
xchg
jge
inc
lahf
mov
int
cltd
outsl
push
in
and
pop
dec
enter
cmpsb
rcr
add
jns
ja
fidivrs
mov
xchg
imul
out
mov
addl
mov
cwtl
mov
xchg
fstpl
lock
int
xchg
and
cld
add
pushf
stos
in
inc
mov
pop
inc
bound
loopne
mov
cmc
mov
push
xchg
adc
fwait
pop
cmpsb
xchg
jecxz
cmpsb
adc
xor
ret
int
sbb
aad
idiv
ja
xchg
hlt
popa
gs
outsl
mov
scas
xchg
push
jbe
outsl
xchg
je
shll
bound
test
aaa
cwtl
sub
xor
mov
xor
ja
dec
scas
mov
pushf
arpl
cmc
jg
push
add
xchg
mov
fists
loope
or
xchg
imul
mov
nop
cmpsl
adc
mov
mov
das
push
xor
dec
sub
xor
daa
scas
cmpsb
sub
sbb
fs
aas
lahf
mov
mov
inc
testb
mov
ljmp
scas
cmp
mov
loope
mov
ss
int3
divb
repnz
lret
jg
cmc
adc
es
sahf
push
xchg
jecxz
sarb
repnz
das
sub
jmp
lret
mov
adc
shlb
mov
cmpsl
and
xor
dec
lcall
push
ret
add
mov
mov
ret
out
cmpsl
cs
test
push
dec
pusha
mov
mov
ficoms
inc
out
inc
aad
and
ja
inc
xchg
aas
bound
out
jecxz
sbbl
cmp
in
pop
push
mov
lods
daa
repz
daa
das
call
xor
xchg
sbb
gs
xchg
sbb
cmp
sbb
mov
adc
loopne
lds
gs
cmpsl
adc
ret
mov
and
es
movsl
lods
pop
cmp
enter
sub
jle
push
xchg
sarl
test
mov
sub
in
mov
push
testl
jl
lcall
arpl
mov
bswap
pop
push
push
jg
xchg
aas
mov
cli
or
fnstenv
xchg
int
mov
repnz
sub
and
aaa
jl
insb
add
pop
xchg
loopne
cld
adc
pushf
add
cmpsl
leave
aaa
lods
std
outsl
jns
adc
dec
loope
ss
jl
bound
in
lret
mov
and
xlat
jmp
push
filds
push
adc
or
repnz
pop
ja
dec
pop
subb
jg
loop
jecxz
xchg
call
mov
fimull
in
es
arpl
cmp
lret
push
mov
adc
das
mov
jae
jl
push
int3
cwtl
dec
fisttpl
jne
mov
push
or
inc
stos
fs
fwait
out
mov
fidivrl
jg
pop
lret
push
sbb
incb
fldcw
xchg
insl
sahf
dec
sub
sbb
cmpsb
aas
imul
insb
stos
mov
loopne
mov
add
nop
push
hlt
cmp
mov
mov
mov
xor
xchg
or
inc
ret
xor
add
lcall
inc
fidivrl
mov
xchg
or
xchg
aam
flds
ja
test
test
fildl
adc
sbb
jbe
cmp
jb
jge
mov
sahf
sub
add
divb
mov
inc
scas
jne
jne
inc
mov
scas
test
mov
gs
popf
dec
es
push
push
test
push
push
push
push
and
cmp
lea
mov
scas
iret
and
sbb
inc
fstpt
push
mov
adc
pop
testb
pushf
scas
jbe
ficoms
pop
pop
mov
cmpb
inc
push
sahf
pop
add
mov
cltd
fs
cmp
inc
inc
shlb
decb
xor
loop
mov
xor
sbb
test
mov
iret
mov
and
mov
mov
mov
fcmovu
mov
outsl
divps
dec
adc
jns
shlb
insb
push
cld
stos
inc
sbb
adc
loop
mov
add
jmp
mov
gs
pop
cmpsl
xchg
aaa
sub
je
or
push
pop
or
jge
lds
xlat
les
inc
test
pop
add
aad
daa
ret
iret
xchg
movsl
adcl
bound
sub
stos
orb
lahf
jo
lcall
jo
push
mov
mov
dec
push
pop
lods
mov
mov
mul
and
push
in
xchg
xchg
cmp
dec
xor
repnz
loope
or
inc
imul
cmp
pop
xor
in
inc
mov
mov
fstps
or
das
push
cs
sub
xor
push
xchg
lcall
outsb
div
lret
inc
xchg
movsb
and
adc
lds
sbb
mov
fwait
testl
sub
xchg
mov
sub
pop
jecxz
pusha
add
movsb
push
push
ljmp
js
jmp
repnz
leave
int
cltd
stos
mov
adc
cmp
mov
out
sbb
shlb
jns
cmc
jg
mov
daa
or
jne
outsl
dec
xchg
jbe
pop
jb
inc
inc
fdivr
in
lret
xor
mov
push
cld
dec
sbb
mov
nop
and
adc
dec
bound
xchg
outsl
dec
inc
ret
mov
mov
jo
mov
push
sub
test
ret
call
arpl
xor
cli
dec
cmp
testl
mov
push
imul
adc
adc
sub
jne
xor
aas
push
jne
sti
ret
xor
pop
dec
or
icebp
push
popa
lock
repnz
mov
jne
aas
jmp
insb
xlat
in
sub
js
ss
fcompl
bound
add
inc
and
pop
mov
mov
icebp
subl
sbb
cmpsl
test
pop
and
mov
jmp
in
in
push
xchg
push
push
pop
cld
mov
loope
inc
or
mov
int
push
mov
adc
xchg
lret
adc
jae
push
sbb
and
xorb
mov
sbbl
cmp
test
adc
mov
icebp
aas
xchg
cmp
cmp
sbb
ret
or
sub
gs
and
sbb
in
sub
repnz
mov
push
adc
ret
icebp
jae
jge
jle
sub
xor
add
jmp
jno
jnp
xorl
mov
xor
lock
mov
aaa
fsts
mov
jo
adc
xor
lds
in
sub
add
mov
cwtl
cmp
shrb
cs
jns
dec
subb
rcrl
int3
stos
pop
movsl
mov
nop
in
inc
je
xchg
cmp
and
int3
test
scas
adc
test
es
jmp
nop
jge
jle
xchg
push
add
push
fucom
test
stc
popa
bound
jl
shrl
and
or
pop
inc
inc
hlt
xlat
push
stc
sbb
mov
or
es
mov
xchg
arpl
push
ljmp
test
lret
xor
push
loopne
mov
shlb
orb
lahf
iret
loopne
sbb
sub
aad
sbb
cld
push
and
adc
cmp
mov
out
xor
or
scas
je
sbb
std
loopne
push
shlb
sbb
add
push
sar
push
push
jo
hlt
outsb
adc
ss
push
push
xchg
imul
leave
ljmp
jle
loope
in
jmp
gs
sub
push
mov
call
iret
jp
fnsave
es
xor
push
andnps
pop
xchg
xor
insl
jb
cmp
inc
sbb
mov
sbb
sub
nop
xlat
stos
jge
outsb
add
pop
enter
shlb
subb
sar
jle
into
adc
rcrl
aad
lods
fstpt
imull
aam
filds
lods
push
ret
das
sbb
ljmp
mov
pushf
dec
mov
mov
in
xor
loopne
inc
test
jb
scas
jns
push
dec
test
fdivrl
loopne
pop
jmp
test
jbe
and
sbb
sbb
shll
inc
sub
pop
movsl
daa
les
mov
lret
xchg
sub
mov
inc
ds
mov
fstl
ljmp
xlat
mov
fstpl
clc
cmp
push
sbb
push
xor
lea
mov
test
fisubl
add
je
dec
jbe
adc
fs
insl
pop
or
xchg
cmp
xor
inc
ret
pop
cmp
xor
and
cld
insb
pop
fwait
jns,pt
ss
mov
fucomip
into
mov
test
clc
imul
jnp
jnp
repz
cmp
and
sahf
and
pop
mov
movsl
pop
sub
lods
mov
mov
cmpsb
sahf
movsl
testb
mov
jo
fdivp
cmpsl
sahf
nop
mov
lahf
sbb
jp
mov
jne
xchg
lods
add
aam
out
sbb
fdivl
pop
inc
dec
ljmp
testb
sbbb
insl
jmp
push
ss
lock
inc
jge
pop
inc
add
xor
mov
ds
push
ja
adc
xchg
int3
icebp
addb
mov
data16
divb
mov
testl
mov
jge
cwtl
in
jnp
cmc
sbb
xor
ljmp
mov
adc
lock
dec
pop
xlat
sbb
je,pt
cld
xor
sbb
or
ja
aas
test
adc
pop
mov
ss
inc
pop
push
imul
mov
addr16
outsb
fstpt
sub
mov
push
fcompl
xchg
mov
jbe
in
sbb
mov
inc
xlat
sar
xor
enter
push
pop
dec
sbb
xor
cs
add
inc
fcompl
dec
test
jae
jnp
movsl
add
push
cli
mov
sbb
lcall
out
or
iret
add
xor
xor
and
push
sub
adc
adc
pop
loop
inc
or
xor
jns
lahf
nop
cld
cmp
sbb
mov
lds
pop
out
addl
push
sbb
out
mov
push
pop
loope
inc
pop
inc
sub
mov
mov
into
lea
xchg
lea
adc
cmc
mov
lods
rcl
cld
mov
rcrb
inc
xor
cmp
jnp
lahf
aam
movsb
lods
xor
pop
fcmovbe
pushf
in
popf
mov
in
cmpsl
outsb
mov
mov
xor
adc
mov
sbb
fistl
pop
adc
mov
dec
push
mov
cmpb
jg
ret
mov
dec
jl
and
out
push
scas
insl
jle
fs
test
pop
adc
out
mov
test
int
or
ret
daa
dec
sbb
popf
cmp
int
mov
cmp
ljmp
xor
int
push
iret
test
mov
aas
sbb
and
test
push
and
int3
push
xor
outsl
test
cmp
subb
mov
inc
push
mov
xor
pusha
aaa
xchg
dec
ffreep
add
nop
fsts
in
ss
in
je
sub
mov
lds
xchg
mov
jg
nop
aaa
cli
es
lret
add
mov
rorb
and
jnp
cmp
pushw
or
mov
mov
inc
gs
ret
int3
orb
push
ret
push
loopne
or
test
lea
add
dec
mov
je
cmpsl
clc
cmp
adc
ljmp
or
lret
pop
xchg
dec
loope
arpl
out
jle
xchg
sub
xchg
insb
mov
imul
jae
dec
mov
sub
mov
adc
test
call
or
gs
cli
aaa
xchg
pop
testl
fs
cmpsb
push
movsb
lds
sti
sub
es
cmp
mov
pop
adc
pop
out
outsb
cmp
pushf
addl
mov
mov
sbb
ja
jg
ss
xor
push
mov
inc
mov
das
xchg
pop
jo
xchg
cmp
pop
mov
mov
push
adc
test
pop
je
out
mov
cmp
push
bnd
jno
mov
clc
ror
xchg
jbe
jg
cmp
mov
in
xchg
or
mov
push
lcall
stos
inc
sarb
nop
push
push
roll
imul
ret
scas
sbb
mov
sub
in
out
leave
pushl
cmpl
repz
mov
or
data16
dec
mov
xchg
fisttpll
fnstsw
xor
fstl
loopne
adc
mov
clc
nop
fldcw
out
clc
push
ja
and
out
xchg
cmc
xor
call
cmp
jae
or
js
arpl
inc
shrl
or
fidivl
and
cli
or
shlb
in
aad
shrl
push
or
gs
das
inc
in
push
out
push
sub
xchg
lods
out
loop
mov
xorb
sbb
xor
cmpb
sbb
aaa
jmp
test
in
pusha
int3
sbb
add
in
fisubrs
jmp
dec
cmp
stos
jg
fistl
sbb
mov
mov
lret
jno
and
and
mov
fwait
pop
adc
pop
adc
das
aad
jns
push
das
jo
mov
adc
adc
cmpsl
push
vsubps
test
ja
mov
xor
mov
push
fiaddl
mov
nop
lea
dec
outsl
hlt
mov
movsl
mov
shll
wbinvd
mov
nopl
int
pop
jle
mov
adc
sub
sub
mov
and
pop
jg
lahf
lret
enter
insl
jecxz
test
loop
or
ja
adc
movsl
mov
bound
arpl
add
xor
out
hlt
ret
test
dec
jge
push
sbb
cld
mov
or
push
jp
push
pop
xor
addr16
jnp
ret
lods
mov
jae
scas
mov
out
cli
mov
cmp
lods
jns
and
jp
roll
jo
sahf
out
adc
fistps
mov
aad
mov
sub
stos
pop
xchg
daa
pop
xchg
mov
push
xchg
fyl2x
loopne
pop
mov
dec
cmp
and
xchg
push
push
lods
pop
clc
ss
lock
push
dec
pop
dec
test
dec
mov
pop
rcl
repnz
jg
movsl
out
cwtl
xchg
int
inc
push
pop
loopne
fisubl
fsubr
insb
jge
fcmovnb
or
jl
pop
out
in
shl
mov
adc
adc
les
js
and
les
mov
xor
repnz
mov
sbbb
loop
push
add
mov
scas
rcrl
int
aad
fistps
or
in
and
imul
adc
push
xchg
inc
inc
subb
pop
cld
popa
insl
lock
cli
je
dec
and
cli
insb
adc
pop
sub
addr16
pop
jb
ficompl
mov
leave
push
push
insb
add
mov
lods
jne
cmpsl
sub
loopne
test
sbb
xor
shlb
sahf
out
add
arpl
mov
push
popf
hlt
dec
popa
push
jmp
adc
aas
dec
roll
add
movsl
xor
bound
ljmp
sub
push
daa
pusha
push
aaa
xchg
daa
cmp
mov
push
lods
and
jne
rol
dec
les
mov
cmp
pop
cmp
xchg
xchg
sbb
mov
inc
mov
xchg
sbb
shrb
call
add
and
gs
adc
daa
test
call
mov
and
sub
mov
insb
add
subb
je
pop
je
stc
xchg
aad
or
decl
les
call
add
jmp
inc
stos
dec
mov
jecxz
xchg
sub
fstl
mov
mov
adc
je
mov
mov
xor
aam
sahf
int3
lods
in
rol
ret
push
cmpsl
pop
in
imul
cs
fadd
jge
xchg
outsb
xor
adc
xor
adc
add
fbstp
cmp
push
push
adc
push
or
aam
xor
fsub
mov
mov
outsl
mov
xor
mov
fld
sub
scas
mov
fwait
popa
sbb
pop
xor
int
cmp
and
mov
enter
push
xor
mov
ss
mov
inc
push
and
mov
addl
lds
int3
pop
mov
cmpsl
sbb
mov
dec
xchg
daa
pop
loopne
and
mov
dec
and
js
movsl
andb
divl
imul
pop
fistpl
enter
inc
lcall
ja
xchg
or
jne
adc
xor
pusha
mov
pop
clc
insl
xor
jmp
xlat
push
bsf
shl
popf
mov
fwait
mov
add
adc
pop
cmp
scas
insl
adc
out
mov
inc
je
sahf
xchg
sbb
mov
push
pop
js
sub
pop
rcrl
clc
daa
inc
das
call
jle
jbe
sub
jne
sub
cmp
cwtl
sub
ror
aas
int
cld
scas
arpl
mov
call
pop
mov
fdivl
rcrl
push
mov
cmp
scas
cmp
and
scas
in
dec
jg
addr16
inc
in
pop
and
inc
rcr
dec
mov
or
and
insl
repnz
lea
dec
fcmovu
dec
int
ret
cmp
in
ficompl
dec
std
pop
cmp
popa
testl
outsb
pop
fs
out
adc
mov
test
sbb
jecxz
jb
push
aam
ss
mov
popf
pop
sub
movsl
jb
mov
arpl
inc
push
ret
or
aas
jl
pushf
fwait
adc
inc
dec
aam
sub
xchg
pop
mov
gs
jo
or
or
shrb
in
xor
mov
adc
ja
incb
mov
jno
je
hlt
jp
shlb
sti
fstpt
lret
cmp
and
sub
roll
cmp
fidivrs
inc
lea
jmp
pusha
lahf
inc
mov
pop
mov
cmpsb
mov
loope
lock
xor
and
or
lret
adc
xchg
cmc
vmread
xchg
out
push
out
out
adc
stc
pusha
xchg
pop
test
pop
cwtl
mov
fwait
pop
adc
sbb
imull
push
loopne
adc
sarb
add
js
mov
jae
ljmp
pusha
ret
xchg
fldcw
stos
add
xchg
and
fcoml
dec
jmp
jno
clc
xor
xchg
cwtl
cmpsb
mov
xlat
mov
sub
jg
mov
dec
cmp
sub
push
vcvtsd2ss
or
dec
shlb
mov
jmp
out
test
stc
push
sub
repnz
sub
or
movsl
addr16
aad
and
mov
jmp
imul
cmp
or
ljmp
arpl
decl
gs
aas
sbb
push
add
stos
movsb
mov
sbb
or
cmp
lcall
lock
cltd
jne
pop
dec
inc
movntq
mov
shrl
cli
dec
push
imul
dec
lret
jne
adc
rol
jg
and
out
xor
mov
inc
iret
ds
jns
cmp
cmp
mov
add
pop
fisubs
insl
mov
mov
mov
shr
jge
dec
sti
xchg
xchg
sub
ret
mov
or
inc
adc
mov
inc
aaa
pop
xchg
sahf
arpl
sbb
mov
xor
arpl
into
cmp
insl
out
mov
sub
rcl
shll
ffree
fwait
push
xchg
sub
shll
sub
stc
sub
shrl
xchg
inc
rcr
orl
sbb
jnp
loopne
sub
push
pop
inc
xor
pop
or
sbbl
cld
mov
shl
sub
aas
ljmp
push
push
leave
shl
jmp
jmp
sbb
dec
lock
rorb
and
leave
mov
dec
test
jns
pop
xchg
loopne
ffreep
out
push
inc
xlat
pop
and
test
cmc
jns
push
mov
lods
xor
xor
cli
out
int3
mov
mov
jmp
scas
daa
test
xor
and
sahf
imul
sub
xchg
mov
ja
cli
xchg
sub
mov
pusha
xor
loop
ljmp
and
pop
or
je
cmpsl
rol
ljmp
xchg
inc
push
sbb
test
add
insb
loopne
cmpb
or
xor
cmc
mov
outsb
or
add
leave
add
in
loopne
pop
dec
inc
dec
adc
sbb
jno
out
jb
fsub
ss
icebp
int
xchg
call
and
inc
dec
mov
add
push
outsb
xor
sarl
push
mov
bound
xchg
loopne
dec
cmp
fisubrs
jecxz
aas
cmp
mov
add
dec
repz
adc
pop
pop
ret
xchg
std
push
dec
rorl
mov
scas
jmp
ljmp
mov
mov
xchg
lock
push
int
mov
sub
add
xchg
cmp
jo
inc
in
push
out
mov
ljmp
adc
testb
mov
xor
pop
sbb
imull
scas
test
dec
sbb
daa
jmp
inc
fildl
push
mov
mov
dec
and
xchg
jp
inc
popa
lret
shrb
mov
mov
adc
aaa
pop
xor
mov
push
ds
addl
jns
outsb
inc
or
inc
les
mov
jns
or
fldenv
subb
fnsave
mov
pop
xor
loopne
addr16
mov
sbb
jb
mov
jno
lret
outsb
popf
sti
xchg
lods
stos
lods
adc
outsb
mov
lods
insl
inc
push
psllw
popa
fstpl
add
jnp
mov
imul
xchg
insl
es
icebp
mov
mov
jo
aas
shrl
shrl
fisttps
pop
sub
fcoml
jns
rolb
cli
push
and
repnz
in
data16
scas
pop
lock
sub
jae
fstps
sub
int
inc
xor
ljmp
xchg
rcl
cmp
insb
mulb
in
mov
sub
ljmp
in
insb
enter
sahf
std
mov
sbb
outsl
cmp
push
lahf
out
outsb
mov
out
or
push
mov
pop
push
aad
pop
xchg
hlt
scas
sub
dec
adc
push
cmpsb
adc
frstor
push
cmp
roll
leave
daa
int
mov
sub
or
pop
test
or
mov
sbb
cmp
mov
testb
adc
push
push
out
std
mov
das
pop
stos
shlb
fldl
enter
xchg
je
fldt
scas
pop
push
inc
outsb
outsb
fstp
cmp
pop
mov
add
js
js
test
jg
jae
ja
loopne
push
ret
out
adc
lcall
fadds
mov
inc
in
cmp
push
dec
mov
clc
cmpb
ja
dec
xchg
adc
xchg
mov
pop
fdivrp
mov
mov
ja
in
xchg
dec
ret
jbe
dec
scas
cmp
sub
push
sbb
push
pop
push
sbb
stos
push
repnz
mov
rcrb
pop
imul
cmpsl
sub
mov
int3
bound
loop
mov
in
push
out
in
and
adc
loopne
xchg
enter
inc
aaa
cld
jle
and
test
inc
xlat
test
dec
push
repz
and
cmc
push
mov
xchg
cld
push
jb
fadd
xor
shll
mov
add
pop
jns
pop
dec
push
sbb
mov
cli
cmpsl
mov
inc
adc
out
incb
cs
dec
mov
in
decl
xor
mov
adc
movsb
nop
inc
pop
add
fcompl
out
inc
or
jp
clc
les
mov
xchg
das
mov
pop
int
fldt
push
fists
pop
cmpsb
inc
jo
lret
xchg
xor
adc
icebp
inc
xchg
outsb
test
in
sarb
xchg
push
pop
add
inc
xlat
into
addr16
arpl
fists
mov
xor
stos
arpl
aaa
sarl
jno
dec
adc
mov
push
xchg
stos
loop
aaa
mov
xor
iret
fwait
add
mov
push
mov
cmp
and
ficomps
sub
jecxz
push
jae
mov
scas
mov
shlb
push
stos
cmpsl
adc
mov
and
in
js
xchg
aad
mov
pop
or
sub
add
jg
adc
dec
push
inc
jnp
xchg
aad
test
or
push
adc
xor
loop
ret
sti
stos
int
movsb
das
inc
mov
jae
cmpsl
std
int
fmuls
out
cs
cmp
es
outsb
inc
and
into
jecxz
mov
sub
enter
fisubrl
movsl
add
pushf
jns
mov
cmp
mov
adc
push
adc
lds
jge
lods
decl
std
enter
mov
ret
rcrl
mov
movsl
inc
in
adc
jl
sbb
lret
add
jp
xchg
fucomip
cmpsb
jae
inc
movsl
xor
sar
sti
xor
adc
sub
pop
or
mov
arpl
sarb
jne
pop
jnp
in
pop
jb
test
inc
lods
lods
mov
outsl
xchg
mov
and
out
jp
sar
addr16
icebp
outsb
cmp
imul
xchg
push
or
mov
lds
iret
push
xchg
pop
jae
sub
sub
xlat
and
lods
pop
mull
lcall
add
sbb
lods
jae
xor
push
fmull
shrl
fcmovnb
loopne
lods
xchg
sub
icebp
test
jb
lock
pop
mov
sahf
loope
push
cmp
inc
out
xlat
add
ret
rol
mov
xchg
adc
mov
mov
cli
cmc
and
xor
addb
xchg
mov
mov
xor
xor
sbb
fwait
fwait
je
xchg
imul
in
js
ds
mov
insl
es
int
mov
dec
lret
jecxz
mov
aas
int3
sub
ds
sub
cmp
cs
in
push
in
inc
addr16
add
mov
jbe
aad
push
add
lea
or
bound
in
add
jmp
in
mov
aad
mov
mov
mov
cs
mov
imul
andb
andb
inc
add
loope
nop
pop
mov
xlat
filds
stos
cmpsl
imul
fsubrs
cmp
push
pop
add
pop
aas
jae
adc
test
or
inc
insl
mov
cs
adc
dec
push
mov
xchg
mov
loop
xchg
dec
daa
mov
adc
pop
sub
mov
xor
inc
and
cli
cld
pushl
les
out
xor
fistpll
stc
and
lock
and
in
xchg
or
sub
ret
jmp
fbstp
fbstp
lods
add
pusha
adc
mov
in
dec
loop
ds
lret
or
dec
cmp
stos
ljmp
inc
xor
subl
dec
cmp
mov
or
sbb
dec
cli
xchg
pop
ret
test
push
imul
mov
xor
fldl
fcomp
clc
aas
push
mov
iret
cmp
or
jae
cmp
add
pop
lds
lds
les
sub
incl
adc
adc
std
fcomip
fsub
in
fidivs
cltd
push
fwait
jge
je
lock
daa
sub
or
lret
pop
cli
xlat
andl
addr16
cld
push
push
stos
mov
mov
int3
sub
pop
insl
in
cmp
adc
and
add
jbe
pop
cmpsl
out
adc
insl
js
popa
aad
jecxz
arpl
inc
enter
sub
adc
xlat
lret
out
dec
adc
arpl
or
std
push
jo
imul
loopne
xchg
sub
fimull
jge
xchg
mov
cmp
in
lods
test
sbb
add
pop
insb
fucomp
fidivs
xchg
das
adc
mov
setp
cmc
pusha
jns
jne
in
mov
mov
lea
mov
vmovmskpd
xor
mov
mov
add
cltd
jle
sbb
int3
daa
in
pop
push
mov
movsl
jecxz
mov
insb
xchg
add
into
imul
mov
ja
fs
stos
repnz
cmp
out
ret
enter
mov
shl
imul
gs
mov
push
subl
ret
cs
rcll
inc
inc
jne
add
cmc
neg
mov
jl
std
subl
jp
arpl
movsl
fucomip
jmp
add
std
fxch
xchg
and
cli
xchg
daa
into
out
mov
cmpsb
cli
and
lret
data16
mov
jo
out
out
aad
pushf
dec
in
popf
dec
test
dec
adc
lret
lret
xor
pop
mov
push
negl
or
mov
lds
lock
inc
out
sbb
repnz
ret
push
cmc
ljmp
mov
adc
scas
adc
pop
std
push
cmc
ficomps
sahf
cmp
clc
sbb
sti
push
or
cld
cli
or
in
mov
inc
inc
rol
loope
jnp
pusha
and
cltd
in
into
imul
adc
test
and
jb
movsl
sub
fs
cmpsb
mov
mov
sbb
and
or
repz
and
pop
leave
push
out
ret
pop
addr16
jge
cld
xchg
pop
mov
sbb
test
add
lret
in
cmp
fistps
xor
push
xchg
mov
cli
sbb
mov
pop
je
push
sub
mov
add
loope
inc
add
mov
repnz
mov
aad
pop
lods
mov
pop
stc
push
add
jo
insb
push
mov
fists
fwait
int
xor
jecxz
or
adc
push
inc
test
addl
rolb
clc
popa
and
sub
dec
mov
add
and
dec
shlb
xor
rcll
out
jnp
cmp
imul
or
mov
jno
in
adc
pop
cmp
and
dec
fstpl
sub
mov
je
mov
inc
mov
pop
mov
addl
cltd
sub
pop
cmpsb
stos
pop
inc
fsubr
scas
nop
sub
cmp
mov
fisttpl
movsb
xor
push
sub
pop
adc
mov
xor
jp
fs
or
mov
cmp
lods
clc
jecxz
pop
jb
sub
bound
in
jl
lret
and
push
outsl
mov
jge
add
inc
adc
mov
enter
mov
mov
xor
inc
clc
loopne
dec
pop
js
mov
pop
or
or
xor
inc
and
inc
inc
cmp
lahf
adc
ret
and
ret
xchg
and
xorl
mov
jno
insl
cmp
scas
dec
dec
das
rolb
test
jo
add
mov
jg
xchg
fnsave
mov
pop
sbb
and
inc
in
fnstsw
mov
gs
xlat
add
lret
std
out
cli
xchg
push
push
stc
adcl
adc
jg
push
mov
js
adc
outsb
jp
pop
pop
adc
leave
mov
imul
xor
xchg
nop
mov
dec
pusha
cmc
insb
jmp
fists
flds
push
je
push
dec
data16
jo
jb
cmpsl
in
sub
xor
out
mov
push
xor
sub
or
je
sbb
not
push
lcall
cmc
imul
stc
sub
js
sbb
pop
imul
add
das
fs
cwtl
xchg
repnz
and
sub
sti
scas
out
lds
lock
push
or
push
sub
or
js
pusha
jae
adc
addl
mov
xchg
adc
cmp
sub
les
push
mov
jbe
add
fdivl
int3
fcomip
test
in
mov
sbb
or
nop
and
mov
mov
cli
in
inc
xor
fdivp
jecxz
jg
sbb
inc
decl
sub
call
mov
rcll
push
sbb
lret
jle
pop
sub
sbb
cli
jbe
or
dec
data16
cmp
leave
icebp
int
loopne
inc
jmp
sbb
lock
es
jno
orl
pop
jb
int
jp
and
daa
jno
aaa
or
inc
sub
aas
in
cmpsb
enter
clc
int3
inc
add
int3
hlt
and
roll
jle
mov
cs
jae
out
adc
repz
mov
test
add
out
mov
ss
mov
lahf
jb
pop
adc
pop
and
push
mov
cld
lahf
sbb
inc
mov
mov
mov
movl
repz
or
mov
rol
adc
sub
jbe
loop
inc
leave
push
add
jg
ret
fstl
cmp
or
dec
icebp
and
scas
add
mov
int3
cmp
jnp
mov
sbb
leave
jecxz
clc
stc
inc
arpl
cltd
cmpsb
scas
in
movsb
out
int
mov
cmpsb
fwait
stc
jo
pushf
shll
xchg
sbb
xor
hlt
movsb
xor
mov
mov
test
xlat
imul
shl
adc
cld
push
and
movsl
jb
cmpsb
imul
dec
or
pop
daa
stos
mov
pop
btr
xor
mov
loope
cmp
cmpsl
int
mov
inc
lds
cmc
push
ret
roll
sub
jg
fists
xor
mov
andb
xor
mov
and
mov
inc
adc
mov
outsl
popa
dec
pop
lods
adc
sub
stos
adc
xchg
mov
ret
cmp
jle
call
jp
mov
test
mov
out
dec
mov
mov
xchg
call
test
pop
cs
xor
cmp
lea
mov
sub
in
mov
and
push
hlt
and
xchg
and
xor
push
pop
pusha
mov
sahf
je
inc
sub
addr16
xchg
dec
rcrb
cmp
pop
stos
lcall
int3
sub
push
arpl
outsb
orl
ljmp
and
cmp
dec
fmuls
jp
stc
mov
and
push
cwtl
cmpsl
dec
cmc
aaa
or
stos
insb
jg
push
xchg
mov
xor
outsl
lock
movsb
inc
pusha
subl
sub
stos
mov
test
cmpsl
in
ret
out
leave
push
add
test
stos
or
and
sbb
inc
inc
xchg
or
mov
dec
std
or
pop
stos
jl
and
pop
xchg
int3
shll
pop
push
push
insb
fcomps
adcb
stc
adc
rcll
jns
sub
xor
scas
fildll
icebp
pop
stos
dec
sub
popf
pop
jecxz
les
jno
adc
xlat
xchg
push
addr16
dec
or
or
and
pop
mov
call
popf
in
mov
test
fcoml
lcall
cmp
les
add
jnp
cmp
pop
mov
push
cmpsb
stos
or
or
push
pusha
adc
shr
adc
xchg
mov
sub
inc
dec
cltd
std
shl
scas
push
scas
or
in
ss
mov
inc
ret
inc
dec
adc
ret
loop
sub
xchg
call
mov
ja
fcoml
push
andl
imul
mov
jge
mov
jbe
jb
dec
sbbl
lods
in
xchg
cli
pop
sbb
jb
mov
je
dec
mov
repnz
xor
sub
shlb
add
adc
push
enter
jmp
add
hlt
sbb
clc
add
jnp
test
lods
lret
sub
and
jmp
adc
push
jp
jmp
or
cmp
out
jb
stos
push
pop
js
mov
std
out
and
mov
call
sub
jmp
loope
repnz
decl
xor
mov
push
xorb
push
push
mov
in
pop
out
push
push
mov
push
sbb
mov
dec
xchg
jle
sub
lcall
or
cld
in
hlt
mov
data16
into
rcrb
stc
cmp
mov
mov
jae
pop
icebp
sbb
dec
movsb
dec
xlat
adc
adc
or
call
hlt
sub
inc
adc
enter
cmp
dec
xchg
mov
pop
add
imul
xchg
add
lods
cmpsl
gs
xlat
inc
jl
cmp
pop
jmp
leave
data16
xchg
lret
inc
jp
jbe
lods
shrb
mov
cmpl
stos
lods
push
jg
ud1
sarl
cmp
sub
jne
js
dec
sub
icebp
btc
and
jg
pop
mov
lcall
ss
mov
jge
inc
xlat
jle
add
js
std
das
rorl
adc
lods
and
cli
clc
push
xchg
imul
call
test
clc
pop
cmp
std
inc
scas
dec
or
in
mov
test
xor
hlt
jb
stc
mov
fs
jge
in
add
mov
stos
sbb
cmpsl
movsb
das
mov
inc
sbb
mov
jae
xorb
adc
sahf
inc
mov
xor
xchg
imul
push
xchg
or
arpl
or
testb
mov
les
mov
sub
hlt
mov
mov
sti
mov
mov
mov
popa
fs
into
jg
push
pop
int3
incb
dec
jae
jl
ret
cmp
push
xchg
lods
mov
cld
iret
pop
out
push
mov
jne
lods
stos
jne
jge
jl
pop
sub
ja
test
mov
leave
mov
jb
stc
sub
push
xchg
in
das
test
movsl
cltd
ss
jno
rcrb
xchg
sub
in
imul
cmp
xchg
daa
add
add
jl
add
push
sub
loopne
in
jmp
mov
ljmp
imul
gs
mov
xchg
and
jo
push
lds
mov
xchg
enter
lods
inc
and
fsub
mov
popa
adc
stc
mov
mov
rcl
pop
je
mov
jle
dec
stos
insl
cld
xchg
sbb
stos
sti
cwtl
fstpl
mov
daa
aaa
aaa
subps
adc
mov
fldcw
mov
lret
pushf
push
cmpsl
sbb
aad
mov
pop
ljmp
pop
sarl
jge
cmp
cmp
mov
and
xchg
xlat
inc
jno
daa
push
xchg
and
or
popa
shlb
ja
mov
xor
loope
sbb
push
jae
jge
adc
inc
inc
pop
sub
inc
sub
out
sar
fs
pop
mov
or
mov
sbb
or
or
pop
out
lret
inc
jne
push
dec
inc
push
loope
jbe
push
sbb
sub
xchg
fbstp
ja
fidivrs
aaa
xchg
cmp
stos
add
fldenvs
cmpsb
mov
jge
inc
and
sub
dec
aam
inc
addr16
test
out
shlb
xor
lahf
mov
xor
xor
and
enter
mov
sub
cwtl
xchg
mov
mov
sub
lds
mov
sub
mov
in
fisttpll
outsl
aad
iret
ja
andb
in
add
xor
push
push
cmp
mov
testb
add
adc
lock
inc
popf
icebp
xorl
aaa
js
sti
mov
outsl
test
test
and
pop
push
repnz
sub
add
sbb
imul
push
ret
mov
pusha
xchg
inc
mov
leave
icebp
cmp
std
sub
leave
mov
mov
mov
ret
cs
xchg
insl
xchg
outsb
add
pusha
or
or
filds
add
data16
sbb
push
mov
push
dec
adc
xor
stc
push
xchg
cmpsl
cld
mov
pop
dec
jp
fs
cmp
mov
dec
jmp
mov
ds
jb
cld
cmp
mov
loop
aaa
jecxz
sahf
loop
jnp
jp
fistpl
lahf
insb
in
push
inc
adcl
dec
sub
ret
pop
movsl
sbb
pop
or
arpl
jne
xlat
lahf
insb
popa
jl
bound
test
shlb
xlat
pop
mov
adc
bound
lret
pop
dec
xchg
lcall
aam
sbb
push
movsl
xor
mov
inc
es
sub
or
xor
inc
jnp
out
sbb
fisubrs
xchg
aas
test
fcoms
out
cmp
icebp
pop
in
xchg
push
inc
sub
lock
sbb
xor
pop
sub
push
sub
cmp
lahf
jo
inc
dec
lea
es
loopne
sbb
scas
xor
sub
aad
and
xor
negb
inc
inc
or
pop
sub
dec
gs
idiv
push
jge
mov
inc
das
cmp
in
fs
mov
decl
add
imul
jnp
outsl
push
dec
jle
mov
xchg
mov
xchg
test
fidivrl
ucomiss
cmp
cs
inc
pop
cmp
sub
outsb
xchg
push
add
mov
push
into
cmp
xchg
paddusb
mov
mov
push
add
and
sbb
pusha
xchg
movsl
or
imul
dec
dec
xchg
pop
ljmp
lods
pop
push
add
testl
stc
or
cli
dec
das
repnz
mov
lods
movsl
divl
sub
adc
or
mov
fisttps
psubusb
xor
add
sub
xchg
shrw
mov
movsl
shl
mov
rolb
out
jp
lret
pop
add
shl
scas
mov
imul
and
sbb
movsl
or
sti
jge
mov
rdpmc
scas
jg
sub
daa
mov
sbbl
ljmp
cmpsl
inc
jae
aaa
ds
mov
pop
addr16
js
sub
repnz
add
jb
mov
adc
stc
sbb
int
insl
mov
cs
push
adc
ficompl
outsb
dec
pop
mov
jbe
sbb
xchg
ja
xchg
dec
int3
sti
leave
pop
push
sub
loop
cmpsb
mov
adc
movsb
jmp
hlt
add
push
cld
out
stos
filds
xchg
cmp
add
xor
jle
sbb
push
mov
shld
push
cli
test
push
sub
push
or
lret
mov
je
lods
lea
in
loop
xor
pop
mov
mov
push
ficoml
jmp
mov
pushf
fnsave
loope
xchg
or
xchg
jb
shlb
mov
sbb
sarb
lret
push
dec
xchg
imul
sub
cmp
pop
mov
lahf
inc
pop
sbb
out
ds
aam
scas
pusha
cmpsb
sbb
lcall
out
lret
push
sub
test
mov
sub
loop
out
roll
loope
imul
sub
negb
aas
cmc
and
cmp
push
shrb
xor
fidivs
imul
int
mov
call
les
or
add
cmp
scas
or
fwait
jg
mov
in
in
and
jnp
pop
sub
sub
fldt
shrl
sub
push
mov
call
mov
xor
sbb
pop
rolb
lea
dec
into
aas
sbb
cmpsb
mov
gs
inc
mov
push
imul
loope
out
mov
sbb
sub
add
out
jbe
pop
jle
outsb
cltd
cmp
xchg
and
pop
jnp
aas
pop
decl
pop
jns
ret
ja
test
cmp
inc
pop
cmp
xchg
pop
push
nop
jo
xchg
cmc
cs
jg
dec
ds
xlat
xor
cltd
cmpsb
sub
div
push
cmp
push
ret
push
test
mov
sbb
xchg
sti
lcall
data16
shrb
cmc
sbb
lds
shl
push
mov
std
shrl
rolb
push
cmp
push
xchg
pop
inc
cli
cmp
je
mov
jl
in
or
or
in
cmpsl
adc
stos
frndint
pushl
pop
mov
stc
mov
loop
cmp
insl
arpl
pop
push
ret
pushf
aas
and
adc
dec
lahf
test
jmp
test
xlat
or
push
movsb
rcrb
pushf
and
fwait
pop
push
in
lcall
popa
fidivs
mov
stos
xor
lahf
pop
je
xor
fisubrl
add
rcrb
inc
icebp
xor
jle
and
jle
loopne
jmp
gs
push
icebp
mov
pop
push
or
call
pop
jne
push
mov
stos
idivl
stc
shlb
subb
fisubl
add
cltd
sahf
shrb
sub
pusha
pusha
mov
aaa
dec
jne
xchg
imul
rcll
into
fcomp
sub
test
xchg
xlat
lea
dec
fwait
mov
out
cmpsl
jae
cltd
ja
cmp
pushf
aas
mov
insl
sti
stos
movsl
scas
sbb
mov
push
call
and
insl
sbb
inc
pusha
jbe
mov
imul
cmp
mov
enter
sub
aas
pop
sub
pop
js
icebp
js
cmc
xchg
shrb
js
test
pop
dec
adc
lods
and
mul
dec
outsl
inc
jo
cmpsb
dec
mov
mov
les
dec
test
sbb
int
add
pop
jbe
sbb
jecxz
out
decb
push
add
ret
jl
adc
jmp
cmp
inc
das
inc
sub
addl
cmp
rolb
shl
out
jnp
int3
in
cmp
lock
test
cltd
cli
mov
mov
jge
es
mov
mov
mov
loop
in
stc
lock
jbe
cmpsb
lret
rorb
fstps
ss
es
xor
sti
inc
lahf
test
cmp
stos
out
pop
dec
inc
jle
mov
xchg
xor
in
or
imulb
adc
push
mov
mov
int3
stos
mov
pop
push
adc
repz
movsl
cwtl
loopne
das
jp
clc
adc
pusha
lods
fmull
cwtl
call
hlt
push
cmp
cmc
xchg
icebp
jp
jg
sbb
jmp
xchg
dec
xchg
jl
cs
mov
movsl
fsubs
mov
mov
mov
loopne
inc
lret
xchg
in
push
stos
ret
xchg
arpl
aaa
pop
cltd
f2xm1
sub
sub
adc
lock
loope
and
and
inc
push
or
clc
int3
and
mov
out
mov
notb
mov
ret
sti
cmc
nop
gs
cmpsb
aaa
mov
cmpb
out
mov
loope
cmpsl
cmc
cmc
jle
cs
lds
adc
mov
es
sub
leave
dec
testb
fldcw
xor
xor
in
mov
xor
imul
aaa
and
call
stc
lods
jl
loopne
repz
xchg
and
inc
xor
adc
out
jp
jl
jg
xor
test
cmp
gs
jb
fidivs
mov
fcompp
mov
test
add
insl
mov
popf
sub
pusha
push
into
mov
enter
sahf
xor
test
jne
shll
cld
stos
aam
bound
mov
and
jp
movsl
addb
mov
push
add
mov
jbe
enter
sub
inc
jle
xlat
xchg
cmpsl
filds
cmpsb
lea
outsb
xchg
icebp
lcall
inc
xor
add
dec
stos
fwait
mov
pop
call
jle
pop
in
pop
loopne
mov
mov
aas
sub
ret
ja
dec
mov
and
test
mov
dec
xor
test
mov
mov
sbb
ds
push
push
cmp
sub
psllw
addl
lods
fnstcw
fiadds
ljmp
sahf
jl
fcmovbe
jle
incb
fistps
lcall
gs
bound
sbb
stos
dec
mov
cmp
jmp
repz
rorl
lock
dec
cmp
cmp
adc
adc
and
sub
pop
out
xchg
and
test
xor
pop
pop
ret
bound
pop
cmpsl
mov
repz
mov
mov
cmp
or
in
pop
jbe
ds
xchg
xor
xor
icebp
hlt
lock
outsl
gs
mov
add
into
pop
orb
std
add
sbb
fisubrs
dec
pop
mov
mov
js
shlb
dec
hlt
xor
insb
call
cli
sub
sti
dec
pop
cmpsl
popf
push
push
ret
ret
push
imul
dec
mov
mov
sbb
loopne
or
icebp
loope
jge
fiaddl
clc
js
lret
push
movsl
icebp
and
lcall
xchg
ficomps
in
adc
push
addl
stos
ja
cmp
mov
sub
lds
imul
lret
jmp
inc
push
push
aaa
test
xor
pop
sub
dec
sbb
adc
nop
ret
bound
shl
lods
js
or
scas
xchg
mov
jp
rorb
sub
mov
add
ret
pop
dec
xor
inc
lds
add
clc
out
pop
in
mov
push
outsb
dec
mov
mov
ljmp
mov
inc
sbb
dec
mov
jae
mov
rdpmc
jnp
call
hlt
mov
mov
push
out
cltd
std
cmp
jmp
xchg
aam
ret
push
or
xor
push
jp
pushf
out
jge
daa
dec
pop
in
inc
jnp
push
and
mov
stos
lahf
xchg
lods
insb
mov
mov
add
movsl
fs
pop
pop
je
mov
test
adc
movb
pop
xor
xchg
icebp
mov
jns
or
cmc
xchg
jo
jp
cmp
dec
popa
les
jne
pop
clc
cwtl
int
outsl
adc
rcr
je
mov
jle
popa
out
lds
mov
adcb
xchg
sbb
add
push
inc
je
scas
mov
icebp
pop
sub
jl
lods
outsb
lret
adc
shlb
aas
in
jno
rcrb
mov
lahf
cmp
int3
loope
shll
mov
and
popl
adc
sbb
add
dec
hlt
add
decl
ss
cld
js
cmpsl
mov
jecxz
xchg
incb
sbb
fwait
mov
sub
sub
xchg
jnp,pt
fldcw
xor
in
pop
add
add
xorb
int3
mov
test
imul
sahf
out
aas
shrb
sbb
mov
xor
or
inc
pushf
dec
ljmp
adc
push
mov
gs
dec
xor
cmp
dec
pop
bnd
pusha
cmc
imul
jg
icebp
cld
ss
loopne
add
mov
jnp
xor
test
pop
jb
cmp
cmp
or
jae
sub
cmp
sub
arpl
mov
int3
leave
insb
repz
icebp
inc
mov
enter
add
aas
add
mov
movb
push
adc
mov
cwtl
loopne
mov
xchg
sub
xchg
mov
negl
fisttpll
cmovnp
bound
fcoml
xchg
cmc
xchg
rcrb
push
or
testb
enter
dec
pop
cmp
dec
add
xchg
inc
jnp
mov
pushl
in
sti
pop
lods
xchg
cltd
mov
imul
popa
rorl
pop
jg
push
test
xchg
pop
pop
mov
and
int
mov
add
ja
mov
pushf
xor
pop
pop
push
cmp
pusha
scas
loope
pop
call
jl
mov
int3
cmpsl
inc
mov
xor
sbb
push
adc
adcl
jbe
mov
xchg
push
sub
or
push
xorl
test
jge
adc
ja
stc
adcb
stc
jae
or
lret
mov
push
dec
sarl
add
sub
aas
lahf
ret
sbb
dec
mov
adc
lea
mov
out
xorb
rcrb
es
outsb
shrl
nop
cmp
inc
or
lds
sahf
lock
hlt
adc
mov
cmpb
sbb
lods
repnz
mov
aaa
mov
push
inc
jnp
sub
dec
daa
or
ja
mov
data16
ret
cmp
inc
mov
jmp
hlt
mov
sbb
mov
or
pop
lea
fs
cmp
int
inc
adc
cmpsb
sbb
daa
lods
fsts
xor
orb
sahf
push
dec
cmpsl
mov
rorb
cli
test
or
xchg
in
sahf
dec
adc
addl
aad
fwait
xor
lahf
insl
repz
out
mov
mov
je
iret
inc
cmp
fsubr
sub
pop
das
jne
sbb
inc
or
mov
mov
es
push
pop
pop
dec
inc
jnp
imul
sub
cmp
dec
mov
std
add
paddd
das
xor
mov
cmp
in
cmp
test
push
push
int3
lock
jb
gs
and
jmp
dec
imul
mov
mov
or
or
sarb
mov
loop
test
lahf
and
xor
loopne
iret
sbb
add
aaa
adc
xor
mov
stos
jns
adc
outsl
lcall
jae
adcl
cmp
faddl
call
push
cmp
int3
dec
cld
shll
cmp
hlt
icebp
in
int3
add
divb
cmpsb
sbb
xlat
lret
xlat
lcall
leave
aaa
flds
add
xchg
jmp
sbb
jo
fs
lret
mov
push
xor
in
mov
out
push
cmp
jge
mov
js
jnp
cwtl
jg
cwtl
mov
lods
add
js
adc
cwtl
mov
cwtl
movsl
loop
cs
push
inc
xchg
push
inc
test
push
lods
pop
stos
andb
mov
sahf
inc
lods
aas
call
popa
mov
jne
fs
pop
mov
xchg
xchg
outsl
cmp
jle
popf
adc
or
daa
lcall
xorl
orl
repz
adc
mov
out
repz
mov
xor
mov
mov
fdivl
insb
jae
mov
loope
scas
je
push
add
mov
test
xchg
ja
xchg
in
into
pop
jb
je
movsb
adc
sub
movsb
jmp
insl
sbb
and
fcomps
test
push
aaa
cmp
dec
out
sub
mov
jae
pop
xor
in
mov
rol
dec
cmp
fdivrs
inc
xor
sbb
xchg
sbb
dec
xchg
add
imul
xchg
ror
hlt
lods
inc
imul
cmp
push
lods
lods
lds
ljmp
mov
or
ds
or
pop
push
hlt
mov
push
mov
mov
popf
xor
xlat
ffree
mov
inc
add
sub
int3
sarb
and
xchg
in
bound
sub
pusha
outsb
push
int
test
jmp
xchg
sbb
dec
pop
pop
push
repz
inc
dec
ds
cmp
ret
xlat
lret
pop
sar
xor
test
push
test
scas
mov
cmp
imul
test
mov
sbb
and
or
xor
outsb
inc
movb
ret
outsb
mov
cmp
iret
pusha
sbb
insl
lcall
rcll
xchg
and
repz
xchg
pusha
mov
jnp
xor
jo
push
in
enter
push
imul
out
xor
jle
or
jl
inc
inc
push
push
stos
push
mov
sub
int
push
pop
xor
fisubrl
push
test
mov
ret
test
js
fistpl
movsl
pop
xor
in
or
mov
aad
cltd
add
pop
sti
aas
mov
xchg
push
xchg
test
addr16
scas
pop
sarb
ja
pop
mov
jae
js
je
sub
cmpsl
adc
adc
imul
mov
xor
jb
cld
xor
fistpll
dec
fisttpll
out
pop
mov
call
cli
insb
ljmp
in
outsl
js
or
mov
pushl
xchg
es
hlt
jp
stos
aas
pop
movsl
lea
pop
pop
sub
mov
jno
leave
je
fistps
dec
aaa
movups
mov
jp
push
pop
and
add
pusha
push
je
mov
cmp
das
push
orb
into
push
test
adc
mov
pop
or
es
push
dec
leave
fidivrs
pop
daa
test
mov
push
dec
inc
mov
mov
daa
dec
out
adc
sub
icebp
jno
or
jp
mov
stos
add
test
shrb
mov
in
add
mov
xchg
mov
lret
and
ficoms
cld
das
in
or
xor
iret
out
int
dec
mov
jmp
std
lods
xchg
inc
sbb
jge
cld
test
mov
es
call
repnz
in
lret
xchg
sub
add
adcb
cmp
pop
lods
fnsave
cmc
mov
es
mov
sbb
call
and
mov
pop
push
int
dec
lock
shr
outsl
xor
stc
or
add
sub
lods
ficomps
or
sbb
prefetch
or
pop
insb
push
testl
out
ljmp
das
pop
xacquire
int3
fldt
cmp
cmpb
stc
inc
pop
test
scas
inc
mov
pop
pop
inc
iret
sub
fistpl
enter
rclb
xor
unpckhps
cmp
andl
addr16
movsb
int
sbb
cmp
jp
scas
add
jmp
dec
xor
rorl
or
pop
inc
adc
sub
add
lcall
and
mov
aas
cmpsb
fnstsw
jne
ret
loope
dec
and
mov
nop
outsb
leave
aaa
imul
add
test
xor
adc
imul
movsl
adc
sub
lods
pop
fidivrs
xlat
test
popa
fcompl
outsb
xor
mov
push
add
cmp
mov
add
and
lods
std
or
and
shll
push
fcoms
xchg
les
lock
or
jmp
push
and
or
test
iret
subb
xor
ret
lds
inc
push
jae
std
jbe
adc
pop
nop
mov
ret
adc
aaa
in
shrb
movsb
das
nop
and
std
invd
push
xchg
insb
shrl
loope
and
ret
jbe
test
out
daa
pop
dec
xchg
inc
es
push
test
sub
fsts
mov
mov
adc
add
pop
cmp
iret
mov
lret
cwtl
dec
sbb
loope
stos
outsl
mov
aas
lret
pop
mov
pushf
dec
hlt
lret
and
push
cmp
dec
adc
sub
sahf
inc
push
jl
imul
test
into
mov
push
lret
add
nop
test
cmp
dec
jmp
mov
out
add
sahf
loope
pop
gs
push
fsubrl
js
mov
jmp
mov
jp
push
mov
add
and
add
test
mov
cmpsb
add
xlat
jmp
leave
in
xorb
aam
movsb
dec
scas
idivl
test
sbb
test
repnz
scas
ror
popa
scas
mov
scas
orl
jecxz
addr16
cwtl
pop
stos
mov
inc
sbb
xor
add
lock
daa
add
call
cmc
mov
sub
jmp
jnp
push
mov
pop
xor
data16
cmp
mov
out
addr16
xchg
popa
mov
sub
shl
cmp
or
sahf
stos
lret
mov
adc
inc
mov
inc
sbb
stos
push
jge
movsb
jmp
inc
jnp
mov
scas
mov
and
cmpsl
jno
cmp
jnp
and
xor
out
and
sbb
dec
sbb
xchg
lret
xchg
dec
orl
into
imul
pop
test
je
inc
jl
fwait
adc
movsb
cmp
sbb
shlb
dec
mov
stc
in
rcrb
adc
inc
rcrl
loop
cmp
leave
xor
xor
cmp
jg
cwtl
les
ds
bound
sbb
add
mov
inc
scas
in
xchg
lds
xor
xchg
pop
pop
not
pop
and
jge
pop
xchg
aaa
movsl
mov
jne
dec
dec
push
out
lea
jmp
xchg
or
aas
mov
mov
add
incb
testl
fsub
xor
mov
jne
into
push
aaa
test
ljmp
jno
repz
inc
addr16
in
outsb
int
adc
ss
ret
data16
add
fcmove
push
xchg
add
jmp
xchg
es
int3
sub
loop
cmp
mov
cmp
sbb
enter
dec
scas
fsubr
inc
sti
js
inc
inc
jg
mov
push
inc
fdivrl
mov
mov
cmp
clc
shrb
test
clc
adc
leave
fldt
mov
sbb
inc
sahf
or
mov
in
out
dec
sahf
sbb
pop
xor
push
jae
cmp
cmp
xor
mov
loop
xchg
das
push
mov
adc
jno
sbb
shll
pop
pop
cmp
shr
pop
lods
dec
lods
xchg
xor
xchg
fisubrl
dec
cmpsl
cmpsb
iret
xchg
nop
mov
popa
and
sbb
pop
mov
repnz
loop
mov
loope
in
and
dec
ret
daa
pop
out
dec
jle
cmp
sti
punpcklwd
xchg
pop
xor
mov
fxch
push
into
cmp
jp
xchg
dec
subl
cmp
add
xchg
pusha
dec
cmp
mov
out
je
xor
hlt
push
pop
and
imul
push
xor
xchg
insl
mov
xchg
rcrb
pusha
out
sub
fucomi
in
call
jle
fcompl
ss
mov
imul
icebp
mov
out
mov
or
cli
mov
test
mov
out
sub
lock
jnp
cwtl
add
mov
inc
lahf
fnstenv
or
jne
aaa
clc
nop
mov
lds
dec
mov
lds
cmp
fwait
mov
test
sub
mov
mov
and
pop
icebp
jl
fwait
sbb
mov
lock
repz
icebp
test
sbb
sbb
xor
hlt
or
cmp
pop
rcrl
std
push
or
dec
mov
mov
pop
sub
in
xor
push
mov
and
or
sbb
aaa
sub
cld
mov
cmp
lcall
cmp
popa
jbe
jmp
test
push
enter
movsl
lcall
and
mov
fbstp
enter
in
jnp
push
iret
sub
rcrl
mov
icebp
sub
push
inc
xchg
scas
rcrb
and
adc
push
inc
je
cmpsb
xor
daa
xchg
arpl
divl
sub
jne
mov
test
sahf
lds
test
lods
nop
sbb
cs
adc
sub
scas
and
clc
fstpl
inc
ljmp
pop
mov
scas
inc
icebp
imul
arpl
lret
cmp
mov
jae
cmp
fcmove
pop
arpl
and
lds
xor
rolb
in
js
imul
out
icebp
lahf
mov
and
scas
dec
bound
pop
cld
jp
hlt
push
adc
cli
and
pop
pop
mov
mov
jno
mov
lds
icebp
gs
add
pop
std
jmp
das
sti
mov
xchg
into
push
add
fsubp
outsb
clc
sti
cmp
add
pop
mov
je
xchg
inc
sbb
cmp
jl
dec
pop
mov
mov
ret
add
test
shrb
aad
push
sub
mov
sub
adc
iret
data16
jb
fsubs
dec
or
dec
inc
imul
ret
inc
fstcw
std
pusha
mov
aaa
cld
jp
push
out
pop
push
jg
lods
push
cli
lock
inc
les
leave
mov
sbb
dec
ss
jg
lods
cmp
out
jno
xor
jmp
or
mov
out
add
mov
sub
lea
jmp
and
clc
push
loope
xchg
iret
sbb
xor
shlb
push
mov
test
ret
sbb
dec
adc
xchg
rorl
inc
das
bound
or
xchg
fistps
iret
or
dec
int3
cli
arpl
push
std
or
mov
pop
sbb
xor
fldenv
pop
int3
jnp
or
push
mov
shlb
dec
cmc
mov
dec
fnsetpm(287
dec
add
adc
in
xchg
mov
pop
cmpsb
enter
inc
xor
cmp
out
inc
fsub
jle
mov
sbb
sub
or
push
dec
fisubl
pop
popf
out
xor
dec
pop
leave
in
enter
fs
inc
subl
or
and
dec
ret
fsubrs
jp
shrb
xchg
out
mov
mov
imul
xchg
pop
jns
xor
je
in
adc
mov
lods
push
mov
push
decb
adc
push
dec
imul
push
inc
sti
cmp
mov
add
fldl
lds
loop
std
rcrl
data16
and
sti
xor
cli
mov
negb
cmc
jo
adc
mov
ja
enter
xor
in
out
jo
adc
pop
jno
fcompl
out
pop
sbb
imul
push
jae
sbb
stos
in
dec
int3
dec
pop
xlat
negl
fimuls
push
addr16
out
cld
loopne
into
jns
inc
icebp
inc
rcrb
push
mov
lods
and
andb
pxor
mov
and
add
add
scas
push
in
stos
inc
mov
jmp
and
aad
inc
mov
outsl
cli
insl
xchg
xchg
and
flds
adc
mov
cmp
xchg
fs
sub
in
mov
outsb
jae
cltd
test
cmpsl
cltd
popf
mov
inc
sub
sbb
aad
test
mov
jne
push
push
cs
in
das
out
dec
popa
repz
or
shlb
repz
rolb
iret
mov
dec
std
cmp
add
push
nop
and
arpl
add
mov
push
cli
cmp
jno
pushf
mov
rclb
sbb
lods
dec
or
out
adc
out
add
orb
or
and
sahf
lcall
loop
cwtl
rcl
add
loope
jmp
jae
lcall
inc
xor
cltd
imul
jmp
cmpsl
or
test
popa
aaa
fidivrs
outsl
aad
and
test
dec
or
nop
jns
lds
sbb
call
xor
aad
sub
imul
stc
xchg
dec
sbb
test
xor
shlb
loopne
hlt
mov
bound
lock
jle
cmp
sbb
mov
xchg
add
jecxz
pop
les
xchg
add
stos
sbb
aad
dec
mov
out
aas
dec
push
push
sahf
sbb
or
pop
lock
lahf
scas
mov
mov
aaa
push
movsl
mov
shl
int3
adc
push
push
ja
lds
ja
xor
cmpsl
in
fsubl
dec
ret
jnp
addb
lea
sahf
adc
sub
or
sub
xchg
movsl
sbb
push
mov
add
jne
xor
and
sbb
js
push
push
cmp
in
mov
xchg
in
xchg
ljmp
lods
sbb
cld
xchg
jo
fnstsw
adc
das
outsl
push
test
push
int
and
stos
sti
adc
mov
pop
enter
and
inc
popa
mov
iret
idivb
ljmp
insb
cmp
es
inc
scas
mov
loopne
or
or
inc
cmp
pusha
repz
sbb
mov
mov
fs
cwtl
or
jbe
iret
test
fstpt
testb
repz
mov
pop
mov
mov
icebp
pop
jno
inc
dec
jmp
mov
roll
mov
enter
test
push
in
jmp
lahf
and
pop
insl
dec
xchg
ret
insb
in
xor
push
sar
out
push
dec
test
xor
mov
fsubrl
sbb
push
cmp
loope
rorl
imul
mov
lods
push
aad
push
mov
mov
pop
push
push
addb
sbb
outsl
add
je
mov
push
pusha
clc
mov
and
mov
and
xlat
jg
pop
subb
test
push
stc
dec
jbe
sarb
dec
lds
add
mov
mov
push
sbb
fs
test
daa
mov
jp
jnp
jmp
sbb
pop
out
imul
or
and
sub
adc
inc
sub
xchg
dec
push
dec
hlt
push
adc
jl
and
mov
add
jl
jmp
test
stos
jo
hlt
ljmp
movsl
mov
enter
xchg
add
aad
push
imul
add
daa
or
mov
lcall
jae
insl
sbb
test
popa
movl
adc
and
xchg
sub
scas
pop
mov
shlb
pop
mov
cwtl
or
or
inc
xchg
enter
inc
add
mov
fidivl
push
rorl
cs
lcall
mov
inc
pop
cmpsl
cltd
pop
mov
push
shll
ds
mov
lock
jg
in
rorl
out
sbb
leave
sub
adc
xchg
mov
nop
aas
pop
movsl
xchg
cmp
popa
cmp
insb
or
push
jge
in
out
popf
pushl
dec
test
stos
and
ret
cmc
push
into
sbb
enter
out
inc
inc
dec
xchg
loopne
inc
sbb
int
pop
imull
xor
int
popf
jb
int
and
fwait
jecxz
movsl
fwait
xchg
rcrl
out
mov
cmp
add
xchg
cmpl
jo
inc
adc
pop
push
test
aad
outsb
adc
push
out
xchg
adc
xor
mov
ljmp
movb
cmp
inc
adc
loopne
pop
inc
mov
aas
push
mov
adc
jp
arpl
std
sbb
es
push
ret
dec
mov
push
js
notb
cmp
sub
sahf
jecxz
pop
pop
loope
push
loopne
jns
adc
xchg
addr16
loopne
mov
imul
dec
fstpt
or
scas
fcom
leave
mov
push
and
inc
mov
jge
cld
daa
ljmp
mov
xchg
or
adc
push
mov
stos
dec
jmp
dec
scas
clc
fwait
jmp
imul
testl
rolb
jno
out
jge
sub
movsl
inc
push
out
clc
pop
fs
insb
add
movsb
sbb
push
or
das
insb
sbb
push
pop
adc
and
test
cmp
sub
ljmp
rep
call
xlat
js
stos
mov
daa
mov
fsub
int3
cmp
add
sbb
mov
enter
dec
push
dec
addr16
sarb
inc
pop
push
and
xor
fs
in
mov
pop
pop
sub
xor
not
mov
pushw
xchg
jno
aaa
pushf
adc
imulb
push
or
sbb
ljmp
jmp
inc
mov
cld
ret
les
adc
iret
ja
aas
push
cwtl
or
sbb
adc
ror
cs
add
int
mov
add
adc
adc
enter
test
jne
ljmp
jle
nop
dec
lea
xchg
das
sub
dec
fidivrs
or
fstpt
ficoms
lods
mov
idivb
pop
sub
jae
aas
imul
add
add
cmp
loopne
cmp
xor
pop
sub
stos
sbb
scas
mov
and
hlt
xchg
sub
mov
mov
in
push
popa
hlt
shlb
shl
pop
inc
jo
in
aas
xchg
test
and
mov
add
dec
sbb
sbb
sub
mov
popa
xorb
mov
bound
rcrb
iret
cmpsl
cmpsb
sbb
in
mov
cmc
or
imul
clc
loope
movsl
imul
popa
mov
cld
lock
ljmp
jb
js
sti
push
inc
dec
mov
pop
xchg
stos
mov
std
je
sbb
mov
rcrl
sub
cmp
fsubs
jae
stc
sbb
repnz
je
xchg
fwait
or
cltd
pushf
hlt
adc
pushf
and
mov
dec
jne
or
cmpsl
jo
mov
inc
popa
dec
aam
sarl
pop
push
popl
mov
xchg
icebp
sub
insb
je
sub
dec
sub
mov
jb
ja
repz
sbb
push
out
cmp
nop
outsl
std
test
fildll
addr16
rep
cmp
jb
out
outsl
loopne
movsb
mov
push
out
aam
mov
sbbl
int3
inc
mov
mov
jno
sub
sbb
sbb
adc
xchg
mov
imul
and
jne,pn
or
xlat
dec
insb
cmp
fnstenv
push
enter
nop
sbb
xchg
sbb
gs
test
push
push
shrl
cwtl
fdivrp
out
xor
out
jmp
test
and
xor
pop
xchg
sub
fcoml
jo
mov
mov
shl
jo
xor
cmp
dec
fcomps
out
mov
cs
sbb
notb
xchg
repnz
lods
subb
dec
dec
dec
pushf
pushf
cmpsb
and
push
lea
stos
mov
in
pop
xor
or
or
flds
jmp
fstpt
fdivrs
aaa
loope
inc
imul
cmp
lahf
mov
adc
xor
push
std
ja
sbb
add
lcall
dec
fucomip
inc
jae
lret
fidivrl
mov
cmc
aam
lods
loope
xchg
add
mov
testl
mov
sbb
lcall
push
jae
adc
call
outsl
adc
fstpl
sub
mov
or
jne
add
pusha
mov
sbb
stos
loop
jne
les
stos
add
inc
push
and
dec
and
mov
jb
cmp
add
fs
mov
mov
push
pushf
mov
jmp
xchg
sbb
pop
je
and
mov
outsb
in
hlt
push
cwtl
out
jbe
dec
enter
insl
lea
adc
int3
rcll
aad
pop
mov
cmp
add
inc
and
or
or
cmp
sbb
jno
xchg
in
call
mov
add
sbb
push
push
je
xchg
push
xchg
arpl
ds
xchg
or
sub
sbb
mov
sub
aaa
adc
cmp
xor
repz
cmp
mov
mov
enter
testl
jae
adc
shr
xor
daa
or
fimuls
imul
xor
jbe
dec
add
fwait
loop
repz
stc
aas
push
fs
cmp
mov
loop
mov
dec
repnz
sbbb
filds
in
in
pushf
in
pop
inc
inc
mov
sbb
push
cli
dec
xchg
adc
jbe
mov
call
xlat
scas
ret
mov
inc
mov
icebp
scas
popa
mov
and
jnp
loope
sahf
adc
add
sub
fs
js
xchg
stos
cmp
push
in
cltd
and
xchg
mov
xor
fcom
xor
pop
imul
mov
xchg
leave
adcb
nop
inc
pushf
inc
imul
inc
xchg
sub
gs
push
jae
mov
sub
jge
jl
popa
lcall
xor
lcall
jg
mov
adcl
test
lods
mov
and
push
call
movsb
pop
loope
fimuls
jp
pop
jo
push
cmp
xor
out
and
add
sub
pop
cmpsl
jle
outsl
addr16
inc
popa
xor
lret
or
push
les
stc
test
mov
out
fbld
ret
rorl
sbb
and
dec
cli
rorb
pushl
nop
pop
in
aam
dec
das
mov
add
lahf
bound
xchg
mov
scas
ljmp
dec
enter
jge
cmp
insl
outsl
ret
inc
pop
xchg
and
shlb
clc
out
and
vpshab
es
sbb
xlat
mov
jmp
pop
stos
add
xor
sub
mov
movsl
rol
mov
xor
add
mov
das
mov
xchg
dec
ljmp
add
mov
lahf
insl
pushf
mov
cld
js
and
outsl
jae
jae
out
fs
or
ljmp
and
fdivrl
sarl
xlat
out
je
aaa
ret
or
inc
lahf
mov
sub
inc
dec
enter
js
jge
or
xor
jb
mov
aaa
pop
dec
std
js
add
flds
xor
test
push
inc
pmovmskb
sti
jo
fcmovnb
pop
inc
xor
testb
mov
loope
add
and
dec
jnp
push
jge
cmp
jl
popf
mov
stos
lock
lods
lret
and
sbb
mov
cs
mov
icebp
xor
or
pop
add
lcall
nop
add
faddl
repz
mov
ret
xchg
movhps
or
dec
jge
pop
push
int
loope
ss
icebp
sbb
loopne
nop
lock
es
jnp
cmp
sbb
insb
mov
test
mov
movsb
mov
insl
xlat
cmpsb
popa
inc
mov
cs
mov
movsl
mov
mov
pushf
mov
loop
mov
imul
and
fdivrl
push
ret
pop
sub
add
pop
or
imul
mov
jmp
xor
inc
cmp
inc
mov
push
sti
ds
es
mov
or
push
cmp
push
sbb
jae
jl
add
mov
sbb
stos
mov
jmp
xor
or
imul
xchg
push
lds
out
inc
fldt
testb
push
jno
dec
mov
in
sbb
xchg
das
idivl
into
jmp
adc
popa
test
in
xchg
jl
dec
and
adc
movsb
test
sar
repz
in
cwtl
enter
mov
int
and
jnp
jbe
pop
dec
outsl
jae
fsubs
jge
xchg
jle
xor
xchg
dec
lods
sbb
and
aas
mov
cmp
fs
mov
jnp
dec
mov
roll
popa
dec
jge
pop
push
sbb
mov
push
mov
and
pop
push
jle
lock
mov
mov
ret
mov
mov
inc
cmpsb
pop
lret
push
fwait
dec
outsb
jmp
add
lret
aas
or
dec
xor
push
or
xor
shrb
jle
in
xchg
pop
outsl
sub
adc
pop
loope
adc
mov
repz
and
pop
repnz
inc
idivb
test
pop
cmpsb
mov
pop
popa
in
push
aad
push
mov
cli
xchg
rcll
jno
shll
ret
outsl
adc
loop
ret
fs
push
mov
mov
pop
loope
and
jle
jp
hlt
jns
imul
cs
std
es
xchg
dec
loopne
movsb
inc
shll
or
fs
adc
adc
std
adc
scas
and
icebp
jge
nop
adcl
test
shr
xchg
scas
mov
and
data16
orl
cs
aaa
mov
xchg
xchg
out
adc
lcall
inc
cmp
pop
push
push
mov
xor
sbb
sub
out
push
stos
aaa
mov
jge
mov
jo
push
cmp
lret
decb
dec
sub
and
cmpsb
sub
mov
wbinvd
inc
xor
inc
mulb
jmp
jo
iret
shrl
addb
popa
enter
xor
xchg
je
daa
loope
sbbl
repnz
jns
adc
loopne
cmp
xchg
ja
pop
mov
dec
sbb
pop
out
inc
nop
add
sub
jnp
jb
mov
sub
inc
loop
jp
loopne
inc
dec
rcr
adc
rcl
adc
jge
sbb
stc
leave
mov
cld
jp
sti
int3
sub
add
sbb
mov
add
or
je
lahf
mov
cmp
jo
cmp
cltd
dec
imul
lods
iret
es
ljmp
cmp
int3
nop
ret
daa
inc
jmp
outsb
xor
mov
sbb
ds
stos
scas
or
jnp
add
sti
lahf
jmp
clc
jmp
dec
or
xor
pop
mov
xchg
inc
or
pop
mov
aaa
jne
jae
push
xchg
push
stos
mov
hlt
out
outsl
adc
loopne
adc
sbb
negb
pop
lahf
dec
lods
repnz
jge
aad
orl
lods
bound
or
fst
mov
jbe
scas
jnp
lcall
arpl
dec
into
pop
aad
int3
mov
lds
mov
fstp
add
sub
sub
mov
push
add
jnp
mov
outsl
test
mov
stc
mov
push
iret
jl
push
xchg
stc
div
cltd
lret
gs
inc
mov
cmp
push
mov
cmpsb
dec
sbb
pop
add
cmpb
dec
inc
sbb
mov
fnstenv
dec
inc
pop
cmp
jmp
movsb
and
mov
gs
jnp
and
mov
ja
cmp
out
cld
test
sub
mov
inc
pop
dec
dec
cltd
lcall
imul
test
dec
jge
add
jg
cmp
cmp
dec
push
cmp
int3
mov
inc
mull
fdecstp
and
cwtl
push
adc
push
add
cs
daa
aam
subb
add
inc
cmp
cmpsb
fdivr
xor
aad
add
cli
mov
pop
stos
jns
xor
movsl
rcrl
inc
push
mov
jp
xor
pop
out
add
add
and
jge
sub
cmp
xchg
cmp
add
ds
fs
shl
cmp
cli
popf
insb
push
or
adc
sbb
adc
mov
cmp
lahf
mov
ss
jg
jno
mov
push
inc
jge
mov
dec
sub
push
jmp
xlat
sahf
lcall
pop
mov
test
insb
clc
imul
in
mov
leave
mov
mov
dec
and
or
fistl
clc
sbb
push
pop
sbb
out
push
call
jae
mov
mov
dec
movb
add
xchg
push
push
jo
fptan
leave
xor
cld
jle
sarb
dec
loopne
add
jnp
adc
add
inc
adc
sub
dec
lcall
and
cs
add
dec
jle
ljmp
lahf
xor
fisttpll
or
out
hlt
push
out
mov
mov
mov
enter
out
mov
mov
adc
fwait
xchg
add
sbb
mov
dec
stc
fbstp
push
pushf
aad
xchg
mov
add
imul
jmp
cld
sbb
sbb
push
js
push
ret
and
arpl
aas
dec
testl
test
iret
xor
rcll
xchg
xchg
jl
pop
jb
inc
cmpb
sbb
in
into
and
loopne
push
es
xor
push
mov
dec
iret
jp
cltd
or
mov
enter
dec
jbe
scas
push
mov
mov
or
mov
inc
mov
add
dec
lret
outsl
aas
out
test
scas
aas
les
enter
lock
xchg
pop
push
insl
jo
xchg
rorl
jl
frstpm(287
and
test
ret
rcrl
jle
jge
les
xchg
push
fcoms
lea
mov
push
jb
dec
scas
cmp
adc
and
sti
shr
dec
push
mov
mov
cmc
lods
scas
ss
jge
dec
lods
insb
scas
sahf
cmpsb
lahf
icebp
roll
into
add
and
mov
and
dec
jo
ret
imul
enter
out
pop
scas
sarb
movsl
adc
xor
and
sub
dec
pop
aaa
pop
cmp
inc
dec
push
push
xor
popf
add
xchg
nop
adc
push
mov
mov
and
mov
lret
xor
mov
cwtl
inc
dec
aad
mov
es
shlb
insb
addr16
xchg
push
insb
mov
mov
cmpsb
mov
or
jb
loope
ret
test
bound
pushf
dec
sub
cli
ret
clc
notl
jae
adc
mov
sub
ja
mov
int
ds
in
jb
sub
cmp
movsl
or
xchg
je
or
pusha
aas
push
daa
cmp
add
xor
or
out
and
xchg
cltd
cltd
jmp
or
inc
scas
sub
in
test
add
jo
subb
jae
addr16
cmc
out
mov
and
stos
push
int
hlt
scas
or
leave
mov
rorl
mov
sbbl
dec
push
sbbb
pop
imul
dec
into
cli
fldln2
inc
mov
shll
pop
mov
ja
sub
lods
sbbl
sub
aaa
jne
push
xlat
dec
out
sbb
aad
lcall
or
test
cwtl
mov
mov
jl
cs
ret
iret
mull
xor
int3
imul
scas
xchg
xchg
test
and
aam
scas
cmp
mov
fs
loope
push
and
inc
xor
insl
pop
ret
jle
push
push
pop
inc
push
dec
scas
repz
insb
mov
les
fbld
fstpt
mov
ja
mov
jns
jecxz
loope
pushf
and
iret
sbb
cmp
push
lods
mov
pop
inc
pusha
jle
and
nop
dec
push
daa
jb
mov
fistpl
push
mov
or
pop
outsb
ss
sub
xor
sub
test
sub
lcall
dec
cmpsb
js
pop
test
loope
cmc
mov
jg
mov
push
in
cmp
sti
scas
mov
xchg
popf
or
fisubrl
out
test
and
xchg
pop
dec
mov
aad
fistl
test
and
and
lock
add
pop
ret
in
pushf
lock
jbe
ss
pop
add
pop
jae
xlat
mov
fidivrs
or
std
pop
ds
out
mov
js
pop
nop
lret
aas
lods
adc
mov
ret
push
repz
cmp
movsl
shrb
pop
cmp
sbb
push
loop
push
jl
test
cmp
loope
sbb
fs
mov
push
fistpll
or
cmp
jno
mov
ss
notl
test
fldcw
mov
cld
xchg
mov
mov
dec
daa
inc
mov
xor
dec
push
mov
das
adc
add
rcll
ss
ret
and
add
cmp
jl
lret
test
scas
push
fisttpll
es
jp
cmpsb
in
push
test
mov
inc
sub
mov
add
sub
mov
ret
and
test
lds
iret
data16
sbb
add
sbb
leave
shll
fdivrs
pop
js
dec
insl
add
stos
dec
inc
xor
cmp
jl
test
adc
mov
subl
jo
out
jmp
dec
xchg
xor
rclb
enter
mov
cmp
jnp
adc
and
cmp
add
fldl
xchg
xchg
adc
or
sbb
call
sti
add
sbb
loope
inc
xorl
aas
cli
hlt
push
or
pushf
mov
dec
inc
sahf
cmp
push
ds
imulb
popa
dec
adc
rcrb
jg
xor
call
inc
sub
daa
pop
iret
aas
mov
les
nop
in
push
pop
imul
fs
jb
clc
mov
jmp
in
pop
fmuls
xchg
fwait
iret
jb
imul
lods
lahf
inc
or
jmp
int3
cli
or
xchg
hlt
in
test
push
xchg
adc
and
cmp
daa
shrb
mov
cmp
call
popf
xchg
arpl
jp
sbb
or
inc
fucomip
test
sub
mov
inc
test
aaa
cwtl
cld
scas
imul
xchg
in
sarb
sub
sahf
cmp
subb
and
outsl
shlb
cld
pop
jge
and
xchg
xchg
pop
lds
pop
iret
adcl
sub
sahf
fmull
les
jle
jnp
adc
mov
sub
jb
jbe
mov
push
mov
or
std
leave
xchg
leave
and
xchg
pop
mov
hlt
loopne
push
daa
fstpl
js
imul
loop
pop
add
sbb
pop
in
ja
insl
sub
mov
in
test
mov
dec
mov
mull
shll
pop
outsb
mov
fiadds
mov
popf
out
cmc
xchg
jecxz
mov
jnp
mov
dec
jl
and
mov
sub
movsb
cmp
pop
stos
in
cmpsb
lods
jb
out
lcall
cmpsl
sub
sub
or
cltd
sti
jb
cmp
sbb
dec
dec
push
mov
repnz
or
mov
movsl
or
pop
jns
sti
orl
jae
test
add
in
cmp
das
jb
outsl
pop
in
pushf
mov
std
std
inc
push
mov
inc
mov
cpuid
jle
loop
hlt
jmp
mov
mov
cltd
xlat
mov
mov
inc
or
dec
or
popa
cmpsb
scas
mov
addl
out
cmpsl
sub
cld
cmpsl
push
inc
cld
pop
jecxz
lea
arpl
enter
mov
popf
mov
fcomi
negb
dec
call
lahf
notb
mov
sbb
mov
les
test
lea
aas
repz
xchg
inc
add
repnz
pop
cwtl
in
add
adc
and
test
lahf
movsb
inc
mov
mov
mov
cs
dec
inc
mov
cmp
movsl
int
sbb
and
stos
jo
outsl
loop
cmc
movsb
push
add
daa
repz
dec
out
push
int3
pop
or
pop
shrl
pusha
rcrl
pop
add
lret
and
xor
mov
test
adc
sbb
or
idivl
sbb
pop
loope
add
xchg
sahf
inc
ficoml
je
xchg
sbb
pop
xchg
pop
jnp
divb
clc
imul
mov
flds
inc
jge
pop
fistps
rcll
jl
loope
or
movsb
in
scas
shr
jmp
in
add
dec
push
int
mov
jb
leave
and
sub
and
js
lahf
pusha
in
cmp
imul
aas
pop
cmp
divl
jnp
or
mov
xor
mov
shlb
cs
jle
popa
in
clc
es
fidivs
daa
fs
push
mov
cmc
adc
mov
dec
jg
lcall
cwtl
xor
lods
mov
flds
push
jo
xor
mov
mov
bound
test
xchg
push
pop
or
push
xchg
imul
out
lcall
xchg
xchg
mov
sbb
fmul
popl
int
push
cmp
ja
rcrb
pop
cmp
loop
push
cmp
imul
inc
mov
gs
push
call
ret
mov
arpl
push
sub
test
pop
jge
lret
popf
push
mov
das
push
dec
push
push
xchg
push
push
mov
mov
add
inc
pop
orb
bound
inc
push
mov
push
jmp
xor
mov
adc
inc
and
out
jl
pop
faddl
cmpsb
fidivrl
aam
mov
imul
mov
popf
daa
addb
imul
jg
cmpsl
xchg
aam
scas
cs
movsb
pop
and
cmp
inc
cmp
rolb
in
inc
sub
push
and
pop
mov
inc
cmpsb
jb
sub
cli
cltd
xchg
and
adc
clc
adc
adc
or
jmp
pop
add
data16
push
iret
insb
mov
in
testl
setne
xchg
mov
aas
out
rclb
jb
cmp
push
and
in
movl
repnz
adc
cmc
xor
dec
pop
pop
in
xchg
jl
frstor
dec
pop
scas
and
pop
inc
js
push
cli
mov
aam
test
xor
loop
fisubl
cmpsl
dec
pop
pusha
jle
enter
and
jmp
mov
cmpsb
int
leave
std
jg
jecxz
mul
and
cltd
in
stos
shll
imul
or
mov
mov
xor
push
loope
add
call
das
jbe
test
adc
add
fnstsw
xchg
and
inc
inc
ret
add
push
or
aad
or
roll
decl
fcompl
inc
cmc
xchg
sbb
loop
pop
je
adc
mov
scas
test
imul
in
xchg
mov
rcl
sti
xchg
jb
movsb
jg
std
pop
sti
cltd
mov
or
mov
dec
mov
xchg
or
aas
adc
or
lret
xchg
rcr
icebp
rorl
pop
sub
das
bnd
rolb
dec
fwait
icebp
mov
or
es
xchg
sbb
sub
pop
iret
mov
loope
lcall
test
sysret
pop
dec
outsb
andb
loopne
imul
mov
pop
lea
rorl
mov
mov
insb
mov
icebp
call
popf
adc
cmp
pop
cmpsb
ds
fidivs
inc
call
pop
in
inc
inc
xchg
pop
lods
sub
fisubrl
push
scas
and
sbb
cmp
inc
jo
ss
sub
mov
dec
fisttpl
jae
pop
mov
mov
arpl
ds
pushl
repnz
addr16
xchg
les
cmp
jecxz
sub
mov
xchg
jmp
xchg
mov
cmp
or
in
das
fbld
jmp
cwtl
mov
adc
pop
cmp
out
xchg
mov
fmuls
jno
cwtl
sbbl
stos
incl
jmp
lds
lret
cmc
cmp
push
popf
mov
out
sub
lret
push
stos
cld
leave
adc
fwait
pop
lods
cmp
mov
dec
pop
inc
mov
adc
mov
test
sti
xchg
cmp
lret
ja
jns
sub
mov
mov
add
out
lods
sub
out
subl
fwait
sahf
lret
mov
mov
push
cwtl
loope
icebp
mov
addr16
add
test
jle
enter
sbb
iret
repnz
dec
or
into
add
in
pop
push
jb,pt
inc
int3
and
cmp
cmc
imul
mov
cmp
mov
ljmp
loopne
std
orb
aad
stc
pop
and
fxch
aad
jae
cmp
jecxz
sub
xor
push
adc
adc
jmp
sub
repz
pop
push
sbb
arpl
ljmp
mov
sahf
in
xor
bnd
mov
dec
and
mov
icebp
and
aas
lods
xchg
and
sti
mov
jnp
add
sahf
jle
jmp
call
movsb
dec
lock
fcomi
imul
bound
xchg
pop
pop
in
pop
inc
lods
popa
pop
and
pop
push
and
arpl
cld
decl
mov
fstps
pop
jle
out
pushf
cltd
int3
leave
mov
addr16
bound
ficoml
pop
test
jge
ss
cmc
jne
pushf
push
jp
lock
cmp
push
jns
pop
mov
dec
insl
dec
mov
push
xlat
adc
out
ljmp
pop
mov
sarl
je
lcall
or
sbb
movsl
shll
insb
int
sub
jmp
lds
and
mov
bound
xchg
imul
jecxz
insl
dec
shrl
pop
pop
out
inc
xchg
shr
mov
and
testb
xchg
push
lds
sub
pop
pop
add
mov
adc
jl
les
pop
in
and
inc
pusha
sbb
cmp
and
cltd
enter
xor
fwait
sub
or
into
testb
outsl
xchg
push
lds
dec
jo
mov
les
sub
and
xlat
adcb
loop
ja
adc
fwait
sbb
sbb
inc
pop
mov
inc
push
testl
shll
daa
or
add
xchg
popa
mov
dec
pop
mov
inc
mov
std
bound
sbb
ficomps
mov
cmc
ja
sub
jnp
loope
in
xchg
jle
lods
dec
mov
testb
nop
mov
push
mov
dec
mov
fs
enter
scas
mov
fstps
leave
fs
xor
repz
int3
lret
popf
cmp
ud2
or
int3
xor
lahf
les
xlat
rorl
cmp
lcall
xchg
mov
mov
pusha
cltd
lahf
bnd
xchg
sbb
dec
ficomps
push
rclb
rcl
or
mov
mov
mov
loope
mov
adc
insl
sub
fimuls
ret
sahf
xchg
and
add
push
cmc
clc
in
call
jae
scas
adc
dec
repz
bound
sbb
xor
mov
adc
push
inc
enter
scas
mov
inc
fimuls
inc
xor
sub
out
sub
pop
sbb
sbb
pop
push
jl
xlat
cmpsl
lahf
add
sbb
sub
sub
ret
aaa
push
mulb
sub
clc
inc
jecxz
test
fdivl
lds
mov
xor
inc
and
nop
or
lods
in
cs
pop
mov
jne
dec
hlt
daa
push
and
jp
out
and
adcl
jg
repnz
cmp
pop
adc
adc
pop
dec
shl
xchg
decl
add
ss
and
pushf
jle
inc
xor
or
ljmp
fisttpll
loope
testl
jns
lea
pop
rclb
mov
push
js
jmp
pop
xor
mov
mov
in
aad
xchg
pop
inc
add
std
fs
mov
cld
clc
rorl
aad
insl
in
shll
sub
rcl
add
or
mov
stos
subb
fdivr
cmp
addr16
repz
pop
xchg
mov
stos
mov
and
add
gs
out
sbb
loop
into
and
mov
jg
mov
fcomp
clc
jecxz
into
mov
pop
gs
fistpl
out
xor
test
lret
mov
dec
adc
inc
aad
push
sahf
inc
dec
cmp
sahf
xchg
push
hlt
jae
out
faddl
lret
pop
add
test
add
lds
push
fsts
les
ljmp
std
cmp
dec
add
jp
sub
rcrb
sti
sub
loop
push
sbb
adc
push
or
pushf
inc
cmp
incl
imul
js
mov
sbb
mov
xor
cltd
pop
mov
test
cmp
xor
lods
xchg
pop
push
push
cmp
sbb
or
inc
stc
add
mov
ret
testl
ja
scas
mov
scas
cmp
adcl
inc
popa
pop
stc
inc
sarb
mov
rclb
mov
or
jl
mov
mov
cmc
sti
outsl
push
mov
movsb
ret
pusha
addr16
mov
call
push
pop
or
cld
lds
pushl
and
adc
cmp
jge
test
out
or
std
out
xchg
cld
xor
inc
inc
cld
aad
std
sbb
in
mov
pushf
cmc
divl
outsb
daa
rolb
push
call
cmp
mov
cmp
mov
adc
bound
push
rcr
push
dec
test
mov
xchg
inc
fstpt
push
pushf
sub
test
stc
sbb
leave
pop
ficomps
test
andb
repnz
cmpsl
notb
adc
lea
pop
lret
aam
jbe
mov
out
jb
and
lods
xchg
xor
inc
fwait
out
sbb
mov
mov
fcmovnb
sbb
push
subb
mov
jo
fistpl
or
js
mov
dec
cwtl
pop
mov
scas
dec
xor
subb
in
stos
mov
les
imul
cmpsl
cmc
dec
test
bound
ljmp
hlt
int3
leave
daa
mov
sub
jmp
clc
mov
ja
fadd
pop
lock
inc
das
pop
mov
enter
dec
cld
ret
dec
pop
adc
outsl
out
xchg
out
jmp
add
mov
mov
rcrb
cs
adc
orl
frstor
leave
xor
xchg
shl
in
xchg
mov
and
cmp
xor
nop
lcall
sub
pop
test
stos
add
test
mov
sbb
mov
cmc
enter
je
cmp
fstl
pop
icebp
xor
insb
cltd
xchg
jnp
inc
jp
jne
jge
pop
aam
lods
aas
movsb
pop
mov
fists
cmp
xchg
dec
pusha
or
dec
andl
xchg
pop
daa
mov
sti
jb
lcall
inc
arpl
fistpll
or
setae
ret
cld
or
repz
insl
mov
insl
insl
adc
xchg
testl
mov
pop
or
das
lea
mov
sbb
add
adc
pop
push
xchg
mov
inc
repnz
out
inc
popa
adc
mov
xchg
dec
sbb
lods
subb
test
loop
lret
in
cmpsb
stc
mov
out
cmp
ds
sbb
stos
aam
pop
and
mov
out
xlat
pop
add
sbb
jl
fldcw
sbb
mov
rclb
and
jl
das
inc
rorl
or
enter
sbb
lods
cmp
inc
aas
pop
in
popl
fsubl
adc
sub
xchg
pop
dec
push
adc
stos
or
fbstp
pop
int
js
sbb
ror
call
outsb
shll
cmp
mov
clc
negl
and
sub
mov
mov
mov
cmp
dec
loop
cmp
stos
lret
divl
hlt
push
mov
shlb
inc
mov
add
pop
and
jp
mov
cltd
aad
in
or
mov
test
adc
pushf
and
clc
xor
cli
xor
sub
inc
or
sbb
dec
out
mov
sbb
sbb
xor
or
mov
jbe
mov
adc
jb
jg
loopne
icebp
adc
fstpl
subl
and
mov
dec
jne
sbb
jecxz
insb
or
aaa
cmp
inc
shlb
inc
cli
dec
and
mov
jae
pop
dec
or
and
dec
je
push
jns
jnp
mov
or
fsts
push
neg
fst
popf
jns
inc
and
adc
or
popf
scas
bound
cltd
jmp
mov
stc
mov
popf
dec
mov
iret
fmuls
rcll
xor
sbb
cld
icebp
nop
pop
xchg
fwait
mov
jle
cwtl
add
inc
jo
mov
insl
arpl
test
mov
adc
sub
and
add
or
pop
notl
std
cmpsb
fisttps
cmp
fs
fwait
call
imul
lea
cmp
add
mov
add
dec
mov
imul
add
jg
xor
sub
pusha
xor
fnstcw
repnz
pusha
jg
daa
ret
lahf
shlb
scas
test
aaa
outsl
sub
lahf
je
les
jae
mov
jl
cmp
dec
dec
inc
xlat
dec
ds
dec
xchg
pushf
out
add
rorl
mov
inc
test
sub
bound
or
stos
and
aaa
cmc
xchg
test
std
popa
inc
cmpsb
repz
add
jb
bnd
jmp
adc
xchg
ljmp
jle
fldlg2
out
repnz
xor
adc
rol
std
add
popf
jne
loopne
shl
inc
push
loopne
jno
adc
pop
lock
dec
xchg
xor
shll
fcoms
fnstenv
inc
pop
mov
pop
or
js
mov
into
ret
out
xor
xlat
push
mov
mov
into
push
test
rolb
imul
mov
mov
int
xchg
les
push
xchg
scas
xlat
inc
repz
dec
cmp
xchg
or
jg
out
mov
and
mov
mov
aad
decb
mov
lcall
daa
jecxz
jle
push
cs
pushl
pusha
stos
pop
push
cli
test
xchg
mov
xchg
roll
cmpsl
push
lret
mov
ljmp
enter
jl
push
mov
sbb
dec
mov
decb
cmpsb
inc
or
push
cltd
icebp
popa
xor
mov
push
repnz
mov
pop
push
inc
std
xchg
rclb
scas
imul
imul
push
xchg
sbb
cmp
xchg
mov
dec
sbbb
adc
mov
add
dec
dec
daa
enter
push
add
negl
and
jae
mul
aam
lcall
inc
xchg
dec
outsl
mov
movsl
notb
adc
js
sbb
jno
jo
ret
icebp
fdivrl
mov
dec
push
mov
mov
fsubrs
outsl
sbb
fsubr
out
jmp
fistps
xlat
popa
fcmovb
xlat
inc
pop
es
mov
xchg
call
lret
movsl
or
sbb
shrl
or
cwtl
rcr
jg
inc
fdivs
ret
dec
mov
addr16
sub
pop
sub
mov
dec
stos
test
dec
push
cmp
pop
push
fisttpl
fwait
sbb
decb
loope
or
jle
xchg
stc
ret
dec
cld
adc
jne
inc
cmp
push
mov
push
fwait
mov
add
aad
xchg
sarb
fistps
sarb
stc
js
imull
stos
xchg
dec
aam
sub
aas
cs
mov
mov
lods
mov
push
pushf
push
sbb
and
dec
dec
dec
and
jno
ss
fimuls
push
lahf
test
stos
bound
jno
mov
or
push
push
outsb
adc
cs
jge
aam
lods
and
xor
or
movsb
in
mov
mov
iret
data16
insl
jne
or
iret
mov
xchg
out
jge
inc
or
cwtl
pop
fsts
jg
mov
das
xor
or
arpl
cwtl
pop
push
inc
mov
add
out
inc
jmp
xor
lcall
xor
mov
aam
sub
mov
repnz
mov
ficoms
es
cmp
les
inc
mov
add
int3
in
xchg
push
das
sub
hlt
lret
mov
and
frstor
mov
imul
push
push
push
inc
test
xchg
bnd
pop
xor
ret
std
mov
enter
sub
adc
ss
test
or
mov
sbb
inc
popa
mov
gs
sub
jmp
pop
rclb
mov
sbb
outsb
and
pop
sbb
mov
insl
push
xchg
add
mov
and
cmp
lret
mov
jp
dec
pushf
leave
sub
xor
andl
jl
jecxz
xor
lods
sub
jecxz
xchg
cmpsb
enter
and
xchg
stos
fldl
dec
inc
movsl
pop
aas
nop
cmpsl
pop
inc
add
orb
sub
cwtl
mov
retw
sbb
sub
or
rorl
lret
jbe
aas
or
enter
and
push
dec
sub
inc
xlat
xchg
in
cmp
iret
arpl
sbb
cld
adc
adc
nop
test
pop
iret
scas
xor
mov
sbbl
lcall
mov
xchg
jbe
dec
inc
lock
sub
into
enter
cmp
inc
xchg
jg
adc
pop
dec
ret
and
movsb
adc
insb
pusha
fwait
xchg
mov
pop
pusha
jno
fwait
mov
jmp
pop
ret
pop
pop
jbe
inc
push
cmpsl
shlb
inc
fwait
sbb
stos
inc
mov
sbb
pop
sbbl
mov
push
iret
jb
loopne
cltd
dec
enter
xchg
xchg
mov
ret
fs
icebp
push
mov
mov
loopne
jle
les
les
pusha
sarb
ja
mov
and
es
int
jne
ljmp
push
cvtpi2ps
leave
sub
add
test
cmp
push
lea
or
xchg
jo
outsl
dec
and
mov
lea
lods
jmp
fwait
mov
xchg
or
inc
inc
jne
rcl
popa
pop
nop
add
jle
sbb
push
rcrl
add
clc
cltd
aaa
dec
imul
and
or
jg
popf
testl
dec
scas
sarb
add
popa
push
mov
or
aad
dec
xor
out
dec
hlt
ljmp
adc
adc
pop
ret
push
rcr
pushf
or
fstpt
xor
xchg
js
sub
js
sti
mov
xchg
daa
push
mov
in
mov
roll
add
sbb
and
imul
push
pop
ja
xchg
sub
rolb
pop
inc
jne
push
test
mov
mov
insb
cli
xchg
cmpsb
movsb
jbe
test
loope
and
sub
ss
jg
repnz
cld
mov
xchg
fnsetpm(287
sbb
aas
fs
fnstcw
jl
clc
js
inc
shll
push
call
lret
adc
insb
lods
outsl
push
sarl
mov
cld
mov
dec
rorl
lea
pop
fdivl
and
add
inc
popa
js
scas
pop
xchg
push
adc
xchg
repnz
movsl
fistpl
mov
mov
add
jmp
das
push
popw
cmp
out
sub
test
xchg
fxch
and
stos
or
mov
mov
cmpsb
repnz
repz
push
cltd
sub
add
inc
push
xchg
lods
ss
jg
mov
rorb
mull
icebp
leave
cmp
and
stos
xchg
addr16
sbb
or
mov
xor
inc
push
sub
nop
pushf
cltd
add
xlat
sbb
dec
imul
popfw
jo
push
test
movsl
aam
mov
jmp
icebp
push
imull
mov
in
jle
jns
jbe
repz
sti
out
clc
sbb
pop
cmp
mov
add
push
inc
mov
cmp
jnp
popf
jo
mov
mov
add
mov
xor
test
pop
popf
testb
sar
shrl
test
mov
push
mov
or
shll
mov
or
movsb
fimull
pop
cmp
insb
in
push
rcrl
std
cmp
lock
test
out
add
adcb
js
add
pop
and
adc
movsl
dec
in
hlt
pop
xchg
jecxz
arpl
cld
fsubrs
imul
out
xorb
xchg
sbb
cmp
iret
outsl
mov
mov
jmp
pushf
xchg
popf
add
cli
pop
rcrb
scas
test
test
and
jl
inc
cmp
fisubrl
pop
lret
ja
sbb
int
aad
enter
movsb
push
leave
push
mov
bswap
or
inc
repz
mov
jnp
dec
mov
data16
inc
xchg
fucomp
fstl
lods
loope
add
fs
out
mov
fmul
imull
sub
adc
inc
mov
scas
insl
outsl
inc
movsb
ja
hlt
pop
mov
inc
cs
imul
mov
fs
pop
xor
ficompl
pop
xor
inc
push
cmp
add
add
inc
adc
stos
sub
mov
mov
iret
mov
lock
mov
adc
mov
sbb
jb
push
or
jg
inc
push
adc
jmp
shl
xchg
pop
xor
mov
cmp
sub
xor
inc
shll
adc
repnz
xchg
sub
push
and
mov
mov
mov
in
and
pop
and
test
adc
xchg
ja
cs
adc
mov
test
inc
mov
pushf
scas
popa
pop
push
test
arpl
call
leave
add
jle
std
imulb
push
ficoms
in
rorb
shrb
inc
fnstcw
addr16
and
push
adc
inc
cmpsb
lods
sub
adc
xchg
and
and
xchg
push
jle
inc
das
pop
bound
mov
fcompl
addr16
aaa
dec
mov
inc
inc
mov
fwait
sbb
pop
fsubr
mov
pusha
mov
aad
in
ret
mov
mov
cmpb
dec
add
cwtl
pop
xor
andb
pop
sub
xchg
push
repnz
lds
in
or
aas
pop
sbbb
mov
xor
xor
and
nop
loopne
xor
xor
or
ja
aad
dec
xor
mov
or
dec
mov
neg
or
sbb
movsl
mov
mov
fmuls
sub
xor
mov
jb
cld
or
inc
jbe
mov
sbb
jno
sub
mov
mov
pop
mov
shll
mov
rcrb
je
or
sub
aas
imul
lods
lcall
cmp
fsubl
lock
mov
xchg
repnz
out
hlt
mov
inc
push
sub
mov
scas
pop
in
in
jle
or
dec
mov
sub
fmuls
ljmp
mov
test
stos
out
ljmp
call
or
add
shll
adcb
dec
sub
push
out
and
aas
push
lods
adc
sub
inc
pop
imul
out
into
add
adc
jg
test
add
xchg
dec
dec
lret
fistpl
lret
fistps
or
mov
mov
into
mov
les
sbb
arpl
lcall
repnz
test
push
or
hlt
cmp
dec
fldt
sub
in
in
pop
pop
inc
outsl
and
inc
jle
scas
popa
rolb
add
add
repz
pop
je
fidivrl
inc
imul
lcall
xor
mov
mov
dec
add
notb
insb
out
jbe
jno
sti
push
and
mov
orl
and
lret
clc
imul
inc
xchg
cmpb
in
pop
popa
test
pop
add
and
movb
xchg
mov
pop
jne
mov
push
sub
insb
cmp
test
idivl
cmp
push
dec
pop
aaa
sub
icebp
add
xchg
pop
pop
cmp
mov
cmpsb
fistpl
aas
cli
leave
loopne
sbb
das
scas
call
cmp
push
jae
jae
rorb
add
cs
mov
ljmp
sub
mov
out
orb
shlb
mov
add
rcrl
mov
sub
dec
movsb
add
test
push
lods
sbb
paddsw
sbb
jecxz
out
sbb
into
enter
sbb
jge,pt
and
push
addr16
andl
lret
bound
mov
in
inc
test
sub
xchg
adc
outsb
dec
lods
mov
shll
or
pusha
sbb
sbb
mov
push
inc
pop
mov
xchg
and
xchg
scas
xor
cli
xchg
jmp
pusha
jb
mov
or
adc
sbb
xchg
insb
push
inc
xlat
lods
adc
js
push
dec
call
out
push
adc
xlat
in
sbb
mov
or
sbb
fcompp
fwait
and
push
je
mov
jle
or
mov
xor
movl
push
mov
cli
sub
stos
rorl
cmp
loop
mov
loop
clc
call
ja
rcrb
repnz
and
xchg
adc
sbb
inc
pop
or
cmp
xchg
lods
fsts
cli
push
push
lock
jno
adc
dec
jae
or
rcrl
pop
aas
divb
inc
sub
jge
xor
push
enter
inc
ret
sub
jb
ljmp
dec
push
jne
call
adc
das
cs
movsb
xor
push
roll
pop
push
cmp
cmpl
inc
add
mov
add
pop
push
clc
lods
inc
inc
fistpll
sub
push
movsb
mov
lret
sahf
les
repz
lret
daa
dec
popf
pop
mov
adc
repz
pop
add
rclb
mov
pop
pop
adc
test
fs
xor
mov
pusha
ror
push
loop
int3
loopne
or
inc
insb
mov
ds
dec
jb
xchg
scas
cs
xor
xchg
rclb
xchg
repz
push
das
scas
shl
in
cltd
arpl
les
fdivs
pop
adc
pop
in
lcall
sbb
dec
jbe
mov
rcl
cmp
push
int
mov
adc
push
lcall
dec
jno
pop
xchg
repnz
pop
sbb
xchg
pop
sbbb
shll
daa
sarb
jbe
or
shl
testb
cmp
push
imul
inc
ss
aad
jmp
out
fcoms
jg
repz
add
fsubrl
mov
xchg
fdivl
mov
jp
or
push
lock
fwait
clc
cmp
cmp
inc
daa
push
movsl
scas
leave
iret
jbe
imul
mov
out
lea
ja
iret
and
push
lret
imul
cmp
and
ret
and
cmpl
aas
enter
shll
push
mov
fsubs
mov
rcll
adc
inc
ret
fstps
inc
in
xor
lock
loope
dec
lret
adc
out
add
test
sti
jl
gs
scas
push
pop
mov
fistpl
lret
push
mov
loopne
in
inc
aas
test
movsl
push
loope
xor
rcll
in
aas
aaa
mov
push
and
pushl
dec
sti
test
xor
or
adc
dec
fwait
cmc
push
aaa
lea
pop
jbe
pop
hlt
bound
popf
sbb
scas
inc
out
or
ja
int
popa
sub
hlt
jecxz
pop
rolb
in
and
dec
mov
or
out
data16
mov
and
ret
and
in
xor
repz
and
pop
lds
mov
add
iret
mulb
mov
shrl
stc
fimuls
divb
sub
push
into
insl
mov
int
adc
incl
mov
fwait
mov
xlat
loopne
sub
mov
add
adcl
enter
mov
in
adc
data16
mov
jl
repz
cmc
push
scas
nop
gs
mov
in
xchg
and
arpl
mov
dec
push
idivb
inc
sbb
pop
mov
mov
movsb
mov
lock
sbb
fcomps
and
sbb
test
ljmp
popa
mov
mov
sti
mov
pushf
or
dec
and
rcrl
hlt
xor
data16
xchg
jp
je
jmp
sbb
pusha
pop
inc
aad
sbb
fildl
loop
mov
mov
xchg
pop
inc
or
aas
push
cmp
jno
insb
test
pop
pop
push
xor
insl
inc
push
lds
out
adc
mov
sarl
lret
aaa
jb
ror
and
ljmp
wbinvd
or
mov
out
lods
or
jg
movsb
xor
sbb
push
push
mov
push
movsl
call
xlat
sub
shr
sub
inc
cmp
repz
das
mov
add
xor
mov
test
push
cmp
mov
or
ds
and
andl
dec
push
jmp
mov
aad
mov
stos
imul
call
repz
fcoms
add
jns
mov
lret
dec
sbb
in
mov
sbb
jl
or
pop
push
pop
push
imul
cs
sahf
jl
jbe
fs
pop
aam
inc
ret
inc
pop
dec
push
or
adc
xor
mov
lret
js
sti
ljmp
fucomi
push
push
out
mov
test
pop
test
int3
or
push
mov
and
popa
ret
sub
lahf
jo
testb
xchg
or
cmp
or
movsl
in
test
rcr
gs
jle
inc
inc
dec
lods
mov
nop
or
or
aas
jmp
dec
push
pushf
lret
imul
push
or
ret
iret
push
push
mov
pop
jle
xchg
test
aam
inc
insl
aam
push
scas
mov
popl
jp
mov
adc
test
push
mov
push
stc
in
adc
jmp
lods
pop
xor
ja
xor
jnp
outsb
sbb
fsubl
andb
out
sbb
fdivrs
cmp
jmp
pop
loop
mov
add
outsl
jb
mov
xlat
add
push
fwait
pop
jmp
or
je
testl
subl
dec
xchg
mov
cmpsb
inc
jne
iret
sbb
mov
fcomps
push
lock
mov
std
imul
mov
orl
cld
lods
insb
fsts
pop
movb
sub
int
into
popa
mov
adc
jnp
jae
dec
mov
sbb
lret
and
push
jae
shll
pop
out
mov
xor
loope
out
sarb
out
stc
xor
jnp
adcl
jmp
cmp
mov
push
mov
into
js
add
sub
jno
lods
add
pop
mov
xor
mov
lcall
inc
inc
in
mov
mov
jb
cmpsb
pusha
outsl
mov
imul
jns
subl
repz
xchg
jbe
cld
sbb
lcall
push
cmp
ljmp
iret
jge
mov
push
sub
mov
mov
ljmp
mov
sti
push
inc
insb
fsubs
mov
or
mov
mov
dec
out
mov
xchg
pop
inc
pop
fnsave
jns
jmp
cmp
pop
repnz
cmc
fcoml
sub
movsl
mov
or
movsb
int3
sub
push
pop
rcrl
loop
movsb
sbb
cmp
xchg
and
mov
inc
iret
ja
faddp
pop
iret
cmpsb
sbb
loop
je
out
femms
add
fstl
xchg
clc
jmp
pop
mov
cmp
sbb
pop
ret
clc
test
jge
jo
push
lea
loope
out
dec
add
push
push
jecxz
jg
mov
mov
pop
adc
jl
and
jb
mov
ja
stos
je
adc
pop
in
popa
pop
ja
add
jo
sbb
push
xorl
gs
inc
pop
push
fbld
shlb
imul
mov
imul
jno
cmpsb
clc
mov
xchg
mov
mov
push
test
adc
dec
and
xchg
mov
pop
aam
pop
sbb
jg
ror
movsb
xor
push
push
rorl
mov
pop
add
std
push
inc
inc
fbstp
js
repz
add
ja
testl
jge
cmp
les
sub
ret
lahf
add
xor
pop
sbbb
outsl
jecxz
aad
mov
push
jmp
xchg
jmp
xor
xchg
jmp
insl
ss
repz
dec
push
push
adcl
or
hlt
cmp
bound
int3
imul
cli
je
dec
mov
push
inc
ret
scas
sahf
bound
imul
push
ljmp
pop
or
jl
cmp
shrl
cld
mov
iret
xor
aam
xchg
ja
inc
add
dec
mov
jne
shlb
inc
sub
ljmp
inc
mov
xchg
dec
hlt
mov
xchg
inc
mov
xchg
stos
inc
xor
test
mov
mov
cli
adc
inc
imul
aas
xlat
es
dec
add
sub
ljmp
test
cmp
stos
movl
xchg
sbb
pop
add
mov
push
cwtl
jecxz
js
aaa
jb
cmp
pop
andl
jb
inc
cmp
ret
ss
sahf
fistps
and
je
mov
fldcw
insb
mov
sub
mov
mov
arpl
pop
xor
jecxz
and
out
mov
test
mov
imul
dec
xor
aam
adc
push
xchg
jecxz,pn
xchg
rolb
mov
push
sbb
cmp
cmp
movsl
mov
mov
xchg
lods
inc
cmp
imul
cs
cmp
cmp
pop
mov
mov
inc
sbb
push
pop
and
xlat
out
xor
pop
mov
xor
adc
leave
jg
lock
outsl
mov
jne
push
mov
mov
rcrl
jo
jb
enter
push
or
popa
mov
cmp
pop
test
mov
inc
adc
inc
scas
mov
inc
mov
ret
xchg
adc
out
xchg
and
mov
je
incb
jo
jecxz
aaa
jne
in
inc
add
xor
pushf
test
loope
f2xm1
idivl
dec
fs
inc
mov
sbb
lret
imul
cmc
xor
repz
fisubl
imul
jo
xchg
loopne
aad
aad
rcll
stos
add
addb
testl
jge
jle
xchg
xor
adc
or
out
insl
xorl
outsl
mov
lods
ss
adc
test
icebp
lock
std
mov
add
sti
push
add
aad
dec
roll
sub
dec
das
popf
xor
addl
inc
cmp
jg
mov
pop
ja
daa
jmp
add
enter
mov
ss
rol
dec
jp
sbb
ret
leave
push
inc
nop
lcall
cmp
inc
jne
dec
insb
add
or
std
sub
add
adc
sahf
ljmp
adc
js
fstp
loopne
xor
pop
mov
pop
cmp
xor
ja
loope
xlat
xchg
cli
mov
lcall
movsl
mov
jnp,pn
adc
mov
out
shll
xchg
lahf
testb
adc
jecxz
cld
mov
sub
mov
out
orl
pushf
push
lods
push
ficomps
scas
add
dec
ret
sub
mov
jbe
and
sbb
adc
xor
xor
mov
outsb
or
aad
push
nop
sbb
sub
mov
adc
fsubs
imul
or
mov
mov
sbb
mov
and
jo
sti
das
push
push
jb
mov
js
stc
mov
es
outsl
pushl
data16
les
clc
pop
adc
mov
jbe
jnp
js
fiadds
clc
clc
out
dec
pop
inc
xor
fiadds
daa
inc
mov
fwait
or
jp
hlt
sub
push
gs
mov
fwait
xchg
popa
fsub
int3
pop
dec
mov
push
into
add
lods
icebp
push
mov
sbb
cli
cmp
adc
adc
lahf
cmc
cmpl
xor
dec
xlat
xchg
inc
xor
cmpsl
and
stc
outsb
and
in
mov
scas
inc
and
lret
mov
scas
mov
adc
aam
pop
bound
xchg
les
dec
js
out
sub
fnstcw
cmp
add
mov
cmpsb
fwait
add
jecxz
addr16
fwait
scas
jo
subb
push
push
ret
xchg
aaa
imul
push
dec
sti
ja
dec
jecxz
push
adc
add
lds
xor
imul
cli
rorb
out
gs
adc
sub
add
adc
cmp
xlat
mov
cmp
fmulp
sahf
xorb
jp
in
lds
fistpll
in
mov
xchg
das
push
inc
cs
push
mov
mov
ret
repz
frstor
cltd
shrl
xor
repnz
dec
outsl
xor
jnp
add
das
or
pop
daa
mov
test
inc
xlat
mov
or
in
aas
xchg
push
push
mov
push
inc
ret
add
shll
movl
sub
mov
lret
enter
int3
popa
pusha
push
push
loop
mov
repz
mov
bound
addr16
fcomi
push
icebp
xchg
push
inc
negb
and
rorl
call
aaa
cli
lea
jmp
repz
repnz
jb
imul
xlat
pop
mulb
pop
arpl
push
or
je
std
mov
jp
mov
jo
sbb
and
fnstcw
loope
das
ljmp
fmuls
xchg
rcrl
dec
in
rcrl
xchg
pop
xor
inc
inc
jae
movsl
mov
xchg
push
push
dec
mov
cld
or
jbe
rorl
dec
js
rcr
dec
js
pop
sbb
mov
sub
cmp
rol
pop
ss
pop
lods
imul
int
xor
jne
pop
nop
cltd
push
jmp
test
test
iret
pushf
pop
fstp
jae
mul
movsb
testl
lret
movsb
xchg
mov
in
int3
cmp
cmc
scas
aad
mov
xchg
cmpsb
sub
sub
mov
repnz
push
sbbb
push
push
jle
mov
mov
shl
adc
pop
jp
mov
ret
das
jae
or
pop
loop
test
scas
xchg
gs
into
sbb
adc
aas
inc
dec
or
in
nop
pop
xchg
sbb
test
in
jecxz
cli
fadd
sub
adc
and
insb
lods
sub
xor
fidivs
divl
lea
repz
adc
ljmp
mov
roll
xor
divb
jo
popa
fs
inc
or
pop
addr16
or
mov
mov
fbstp
xor
and
fstpt
pop
cmpsb
shlb
or
mov
inc
and
add
mov
sarl
cmp
xchg
cwtl
xchg
test
fwait
inc
jb
dec
and
mov
lock
mov
ja,pt
inc
daa
sbb
fwait
and
xor
push
rcr
enter
cltd
xchg
ds
mov
loope
inc
dec
xor
jo
mov
mov
lds
adcl
mov
push
lret
in
fstpt
push
cli
bound
xor
sahf
jae
lds
cmp
daa
xchg
push
mov
movsb
jge
mov
and
into
iret
aam
sub
inc
mov
enter
inc
xchg
repz
xchg
cltd
testb
mov
adc
popa
mov
pop
sub
addl
shlb
clc
jmp
sti
jo
sub
mov
lahf
loop
add
shlb
adc
addr16
xor
daa
outsb
das
lods
adc
outsb
mov
xor
inc
push
hlt
hlt
dec
mov
fistl
jnp
cwtl
push
mov
cmp
outsb
dec
iret
push
mov
rorb
cmp
cmp
push
das
not
pop
movsl
fisttpll
pinsrw
push
jne
push
sbb
sub
out
je
cli
call
sbb
pop
fcoms
jmp
stos
dec
loop
inc
roll
inc
or
jno
or
hlt
cmp
xor
daa
stos
mov
adc
sub
or
mov
lods
jl
loope
bound
fwait
sub
fidivs
clc
or
mov
in
enter
movsb
lcall
test
jae
push
jp
fs
inc
test
xor
out
in
push
and
test
jmp
mov
jae
add
xchg
lock
xchg
in
fsubp
lea
ficoms
add
cwtl
js
xor
movsb
insl
add
xchg
les
fildl
mov
lcall
in
or
adc
inc
mov
popa
adc
and
add
mov
out
ja
rcl
ret
rcrb
push
xchg
sub
fldl
aad
mov
pop
ficomps
mov
testl
cmp
xchg
mov
out
in
aad
inc
push
js
aaa
jge
sbb
les
popf
and
mov
js
xor
fwait
loop
addl
or
xor
mov
inc
negb
lahf
dec
ret
xchg
dec
cwtl
mov
test
scas
sahf
into
clc
sub
mov
repz
xlat
mov
dec
daa
push
dec
adc
fldcw
shlb
nop
fs
in
dec
addr16
mov
cmp
sub
rcrl
push
adc
ror
mov
xchg
stos
movsl
mov
loopne
ds
add
xor
inc
jecxz
ret
movl
adc
arpl
dec
in
add
dec
dec
lods
loopne
mov
jne
sbb
ja
aam
mov
jo
imul
mov
sub
adc
pop
adc
aad
stc
add
divl
dec
test
inc
xchg
and
fwait
popf
push
inc
mov
inc
mov
loopne
hlt
mov
out
cmp
dec
bound
push
pop
in
pop
mov
mov
pop
add
push
aas
in
dec
mov
cld
aad
dec
push
cmpsb
movsb
jmp
pop
pop
mov
adc
into
idivb
push
jge
jle
fnstsw
fs
decl
movsl
stos
rcll
out
outsl
mov
pusha
adcl
enter
aaa
xchg
addr16
sub
pop
aam
pusha
pop
xchg
lds
mov
or
xor
cmpb
std
imulb
and
ja
leave
out
mov
insl
cmp
aad
out
or
jb
int
xorl
add
cmp
inc
xchg
jnp
mov
sub
movsl
mov
es
lods
ljmp
int3
xchg
pop
jb
xor
adc
xchg
loope
in
movsb
dec
xchg
mov
unpckhps
enter
pop
push
rolb
sub
outsb
lock
add
fmul
pop
xchg
daa
stos
push
shll
xorb
sub
xor
mov
lahf
popa
in
aam
push
sbb
jmp
adc
add
popl
lret
mov
cmp
and
cmp
pop
xchg
cwtl
xchg
mov
hlt
test
xlat
cs
clc
inc
stos
mov
push
adc
sub
and
adc
mov
stos
or
jl
jl
outsl
sahf
test
lods
sub
add
shl
shlb
in
repz
mov
inc
fcmovnbe
outsb
cli
jno
inc
dec
imul
lea
mov
movsb
pop
cmp
out
jle
repz
mov
stos
dec
mov
rorb
jmp
dec
data16
sti
out
mov
outsb
mov
movsl
stc
test
push
push
mov
jg
mov
adc
into
nop
jmp
pop
test
cmp
add
sbb
sub
ljmp
push
adc
xchg
cmp
adc
popl
call
push
inc
int
xor
sbb
mov
nop
adc
push
dec
enter
jp
jle
xchg
ficomps
ljmp
pushf
mov
mov
aam
xor
lahf
int
adc
ljmp
repnz
xlat
jecxz
sbb
pop
stos
push
pop
mov
dec
hlt
push
sbb
fildl
fistpl
gs
push
ljmp
or
mov
push
cli
xlat
add
adcb
mov
rcll
sbb
push
push
mov
mov
add
mov
jb
mov
jmp
xchg
int3
cmp
sbb
jl
push
jecxz
cmp
jb
mov
insb
push
dec
inc
fadds
mov
xlat
cmp
cmp
es
pop
xchg
lock
xchg
jbe
dec
rolb
xchg
bnd
sub
imul
or
mov
fcomps
popa
xor
arpl
rclb
in
movl
cli
pusha
cmp
push
mov
dec
andb
in
mov
push
out
sub
cmp
cltd
xor
sbb
call
clc
cmp
fisttps
adc
xchg
and
jns
movsb
jl
inc
test
dec
fwait
xchg
subb
out
arpl
mul
push
xor
iret
adc
push
decb
dec
mov
xor
test
in
fimull
jnp
arpl
cld
lods
pop
push
fisubs
idivb
xchg
cmp
shll
xor
aaa
xchg
call
dec
aas
test
pushf
dec
das
sub
mov
xor
lods
movsb
mov
addr16
sti
aad
sti
lods
xor
jns
sbb
shlb
push
jnp
push
jmp
or
pop
pop
cwtl
sub
sub
cwtl
orb
stos
mov
mov
dec
ljmp
int
data16
lahf
xor
jne
ficompl
fadds
mov
pop
xlat
jne
leave
push
fbld
into
dec
mov
push
jl
lret
sbb
imul
add
sbb
ja
ljmp
inc
adc
mov
push
mov
pop
aad
sbb
sbb
sub
mov
imull
loopne
jge
or
xlat
xchg
ffreep
mov
xchg
lret
frstor
outsb
mov
test
sub
sbb
movl
mov
das
pop
arpl
mov
add
sub
in
sbb
xchg
adc
sbb
push
lcall
sbb
in
pop
addl
mov
mov
xor
mov
lods
and
jecxz
sub
xchg
test
das
in
test
stc
incb
aam
js
adc
dec
loope
xlat
cwtd
out
ss
iret
inc
mov
sbb
lods
out
iret
mov
adc
sti
sub
xchg
je
not
and
popf
fnstenv
hlt
fcompl
in
pushf
nop
addb
bound
int3
bound
inc
fcomps
add
in
and
andb
outsl
call
mov
sbb
dec
aad
dec
hlt
push
pop
dec
jge
lea
inc
mov
jb
adc
mov
dec
arpl
aaa
movsl
imul
arpl
inc
out
pop
lahf
or
pop
push
movl
cmpsl
xchg
push
inc
inc
xchg
push
fiaddl
mov
mov
xor
sub
push
dec
inc
shr
and
cs
lret
jp
xchg
xor
mov
outsl
outsb
mov
shrb
pushf
add
xchg
mov
mulb
pop
jle
add
cltd
and
aas
inc
push
iret
mov
xchg
mov
adc
repz
jno
outsb
stos
jo
iret
mov
push
pop
mov
push
aad
aaa
adc
notl
les
sti
and
flds
insb
dec
jecxz
fsts
mov
ja,pt
out
xor
lods
frstor
jb
lock
ds
movsl
enter
or
push
sbbl
cmp
xor
cld
and
push
mov
mov
cmc
rcll
fistpll
rcl
in
xchg
xchg
lahf
mov
mov
mov
ficoms
inc
call
aam
imul
sbb
scas
outsl
push
fstl
or
cmp
cmp
cmp
pop
jae
xchg
xor
xchg
fimull
jl
cwtl
cmpsb
add
push
adc
push
cld
test
inc
cmp
or
mov
dec
movsl
fidivrl
pop
pop
xor
or
mov
dec
or
lds
dec
std
rol
or
push
out
push
clc
nop
ja
pusha
dec
dec
out
ja
jp
pop
cmp
add
push
lahf
imul
dec
sbb
mov
xor
shlb
push
xor
mov
sbb
mov
out
lds
lcall
js
mov
aam
repz
xchg
xchg
daa
xor
push
jo
dec
test
mov
repnz
cmpsl
mov
mov
loopne
pop
into
jno
pop
stos
xor
or
sbb
fadds
add
int3
jns
add
and
inc
call
outsb
cmc
mov
inc
add
push
pop
mov
movsl
jbe
lds
sub
mov
xchg
pop
dec
or
sbb
ljmp
push
jbe
mov
std
aaa
mov
and
std
dec
cmp
lcall
ror
mov
sub
sahf
jp
lcall
aaa
jnp
or
xchg
xchg
push
jno
mov
mov
fsts
mov
fsubp
fnstcw
ljmp
test
dec
cmp
insb
mov
faddp
mov
mov
rep
inc
xor
aam
sub
ljmp
xchg
push
jae
call
aad
js
sbb
imul
jnp
cltd
add
insb
mov
mull
aas
pop
fsubr
sbb
and
inc
test
pop
and
cmp
insl
lods
sub
loope
inc
xor
sahf
xor
rcrl
mov
scas
pop
jmp
and
mov
fs
mov
push
mulb
mov
add
adc
xchg
js
js
mov
cli
in
or
jmp
sbb
inc
push
shlb
xor
pop
add
pop
inc
mov
jp
jno
jecxz
dec
shl
test
mov
enter
inc
cmc
or
add
cwtl
dec
das
push
or
arpl
and
les
test
or
rorb
pop
test
mov
mov
xchg
ljmp
mov
sbb
imul
es
sub
cmp
cmpsl
out
repz
pop
xchg
pushf
ret
jb
jl
out
sbb
daa
xchg
outsb
xchg
je
sub
sub
add
fisubl
cmp
adc
lods
xor
aam
push
xor
daa
and
jae
mov
mov
mov
pop
sub
dec
dec
sarl
cmp
scas
lahf
in
push
je
ja
and
shrl
loope
xor
call
arpl
push
sub
or
into
inc
and
lock
pop
hlt
in
push
cmp
xchg
mov
stos
add
dec
rorl
inc
sbb
mull
rcrb
je
sahf
nop
ret
jmp
fisttpll
addr16
loop
sub
movsl
jae
leave
inc
cld
dec
into
stc
sbb
out
mov
push
cmp
imulb
xor
sub
xor
xchg
fsubrl
in
sub
out
mov
inc
fwait
cwtl
push
stos
cmc
push
pop
push
xor
inc
mov
out
cmpsb
pop
push
jl
mov
xlat
mov
dec
mov
mull
push
and
arpl
dec
inc
les
outsb
test
rep
enter
or
dec
int3
or
mov
gs
jns
das
add
jge
pop
add
mov
sbb
js
jmp
jp
pop
inc
aam
sub
int3
pop
loopne
xor
mov
loop
cwtl
in
sbb
out
das
mov
cmpb
adc
pop
push
or
mov
dec
and
mov
sub
dec
and
stos
cmp
test
dec
sub
dec
mov
push
mov
jns
aam
lods
fucomp
shlb
pop
push
xor
sbb
and
test
cmpsl
mov
push
mov
mov
insl
pop
lret
xchg
push
fidivs
push
cmp
sub
rcrl
lahf
xlat
int
sbb
mov
push
pop
jno
rolb
jo
shrl
dec
emms
xor
ljmp
ds
nop
loopne
mov
shlb
push
inc
fadds
fists
std
test
xor
fcoml
shll
in
push
inc
sbb
push
cmp
dec
mov
outsb
or
test
ret
xor
out
cmp
scas
inc
jno
icebp
mov
rcr
fidivs
jle
sbbl
or
adc
das
or
pop
in
sahf
push
push
sub
pop
jbe
imul
pop
cmp
lods
push
xchg
popa
jb
push
sub
and
pop
je
lcall
lock
mov
mov
push
mov
mov
scas
sbb
mov
test
sbb
inc
sub
mov
nop
imul
and
in
cmp
daa
sub
arpl
sbb
fistps
inc
jle
test
mov
inc
and
rep
or
push
xchg
add
andb
rclb
mov
arpl
scas
fisubrs
mov
sub
jbe
out
test
mov
xchg
jbe
jg
test
add
dec
cs
std
and
or
jp
into
fs
dec
cltd
inc
icebp
cld
lcall
mov
sbb
pop
mov
ficoms
mov
sub
sub
adc
push
dec
out
mov
cltd
outsb
xchg
insb
movsl
lods
sbb
push
dec
lock
sub
gs
pop
and
adc
pop
jne
je
mov
mov
mov
jge
call
jg
std
jle
dec
scas
push
aam
loope
test
sub
dec
jae
cmp
lcall
xor
jne
push
dec
ficoml
ja
push
stc
mov
pop
ret
insl
std
test
fadds
arpl
into
xor
jmp
inc
push
sbb
adc
adc
jb
xor
popa
jb
insl
xor
ret
aad
dec
addb
adc
stos
mov
js
mov
xor
std
imul
pusha
decb
push
xor
xchg
jg
stos
pushf
enter
pop
cld
inc
lahf
add
mov
push
or
loopne
sbb
dec
iret
xchg
lds
movsl
das
pop
fistpll
daa
ret
dec
pop
push
jae
dec
jbe
jl
pop
pop
daa
stc
xchg
filds
sti
jne
clc
pusha
jns
adc
stc
jl
mov
lcall
mov
ds
test
in
jo
mov
xor
inc
xor
repz
sti
inc
mov
movsl
cmpsl
loopne
inc
out
pop
lcall
sub
cld
mov
push
je
pop
dec
fisttpll
or
pop
and
xchg
mov
movsl
stos
int
and
dec
pop
mov
dec
shrl
out
mov
jg
sub
shl
fildl
inc
mov
mov
push
leave
test
lahf
les
insb
test
ljmp
xchg
dec
adc
std
adc
dec
push
out
test
sbb
push
ret
jl
idivl
lcall
imul
outsb
jecxz
push
lock
adcl
mov
lea
xchg
and
pusha
nop
xchg
ret
mov
bound
rep
inc
jbe
decw
scas
int
jo
push
enter
cli
cmp
icebp
push
dec
outsb
cli
stos
push
or
in
rol
mov
jo
push
loopne
push
pop
or
mov
bound
dec
inc
adc
addr16
loop
pop
and
push
and
add
pop
jne
cs
fs
in
gs
pushf
addb
xchg
adc
repz
out
push
fs
jnp
mov
pmaxsw
mov
xchg
scas
adc
test
add
xor
in
shlb
rcrb
rcrl
mov
popa
mov
xchg
loopne
jle
xchg
push
fistpl
mov
in
mov
jo
daa
sub
mov
lahf
fisttpll
cmpb
in
lds
dec
into
mov
sar
int3
adcl
mov
xchg
or
icebp
mov
sbb
jb
outsb
fiaddl
addr16
ss
pop
xchg
mov
sub
add
gs
mov
push
stc
mov
jnp
and
call
add
jbe
mov
je
mov
dec
adc
cmp
xor
insb
insb
jns
popf
push
and
adc
pop
mov
in
sbb
lds
cwtl
pop
fcoms
ss
leave
mov
clc
shlb
jns
inc
fsts
lea
pop
or
sarb
cwtl
jb
inc
xor
cmpsb
aam
sbb
and
movsl
xchg
in
out
adc
lock
xchg
dec
jns
dec
xor
mov
jmp
data16
or
inc
push
insb
lret
mov
push
idivb
mov
pop
mov
sbb
loope
mov
scas
mov
inc
fadds
lret
jb
lock
pop
scas
xor
adc
sbb
test
inc
and
mov
push
jl
scas
loopne
mov
pop
icebp
inc
sub
mov
xchg
mov
add
jge
call
jne
call
fisubs
xchg
subb
das
xlat
push
js
inc
cmp
mov
dec
xor
fimull
iret
jno
insb
lret
aas
rorl
lock
fadds
add
mov
push
mov
sbb
jmp
lahf
repnz
sti
sti
cmp
adc
push
pusha
in
cmp
or
addb
push
sbb
cmp
jmp
sub
inc
std
pop
pop
adcb
adc
pop
loopne
cld
pop
inc
inc
cmpsl
dec
jne
dec
xlat
push
xlat
out
inc
inc
cs
pop
lcall
jae
adc
jbe
and
rcr
mov
es
sbb
es
jno
int
mov
into
test
cmp
and
inc
mov
rcl
inc
sbb
pop
insl
in
shl
rcl
shrb
pop
sbb
dec
inc
fcmovne
add
or
lahf
push
iret
sbb
out
add
dec
dec
in
movsl
lret
and
jne
jo
shll
lcall
movb
lret
call
div
insl
jge
lds
ljmp
stos
jge
aas
ret
dec
xchg
jnp
xor
clc
inc
pop
inc
repz
xchg
aam
xor
and
call
add
imul
xchg
ljmp
into
cmp
and
or
push
testb
xchg
jp
rcrb
xlat
sub
ret
mov
fmuls
pusha
mov
in
bound
add
mov
test
stos
or
jecxz
or
lods
sti
adc
ffreep
outsl
push
ss
lods
push
dec
stc
loopne
push
icebp
xor
icebp
add
mov
js
push
or
fimull
push
jge
mov
subl
clc
push
jbe
fistpll
and
out
or
bound
mov
jne
aad
enter
push
in
sub
rclb
mov
inc
imul
sbb
or
adc
in
cmp
shrl
pop
lahf
in
mov
cmp
out
fcoms
push
and
xchg
stos
or
mov
lods
out
sbb
add
aad
and
inc
dec
cmp
inc
je
add
cltd
fisubl
and
cmp
and
pcmpgtb
mov
lods
pop
sbb
or
jo
ret
mov
rolb
or
xchg
push
xchg
cmpsb
mov
sub
mov
jne
and
mov
adc
adc
pop
call
add
pop
or
push
jl
fcoml
stos
rcr
clc
cmpxchg
or
scas
scas
lock
into
out
js
lea
sahf
jle
xor
or
in
push
xchg
fisttpl
cmp
mov
cmp
jg
push
cmpsl
into
fmuls
outsb
iret
adc
pop
and
popa
cld
and
es
inc
cmpsl
hlt
cli
hlt
leave
and
jne
loop
pop
outsb
cmp
pop
stos
sbb
dec
sub
lret
les
xchg
push
mov
mov
xor
xor
lcall
inc
aaa
mov
pop
sub
inc
scas
sbb
or
bound
in
jno
mov
pop
cmp
or
jbe
rcll
sbb
loop
mov
adc
das
stos
mov
cmpps
lret
test
test
jb
in
fisttpll
outsl
outsl
idivl
outsb
inc
fcmovne
mov
pop
mov
lret
pop
roll
push
stc
jbe
ljmp
add
pop
add
xor
mov
mov
scas
push
andl
pop
sub
jno
xchg
mov
lret
mov
scas
andl
or
mov
sti
jb
rorl
pop
mov
sub
rclb
sub
adc
movzbl
mov
testb
xchg
inc
jb
mov
mov
xorb
inc
inc
dec
shrb
adc
test
testb
mov
mov
leave
call
outsl
xchg
mov
aad
xchg
loop
xor
fistps
xchg
or
mov
fsts
popl
jae
adc
dec
bound
loop
lods
fcompl
jg
repz
jg
and
xchg
cmp
push
push
push
insl
or
ds
dec
fxam
ja
dec
adc
and
push
daa
mov
pop
inc
dec
mov
add
push
inc
incl
xor
or
mov
mov
mov
test
cmc
pop
arpl
push
enter
fadds
mov
scas
test
and
inc
mov
xor
mov
rclb
or
es
in
mov
jbe
jnp
pop
jge
imul
cmp
jle
fidivrl
cmp
jge
in
rep
jle
pop
sarl
mov
sub
or
add
mov
jmp
jbe
pop
sbb
cli
fs
pop
sarb
divl
push
sub
and
ja
loope
cltd
enter
sbb
dec
inc
pop
inc
push
ljmp
add
repz
mov
scas
cmpsb
aas
mov
aas
popa
imul
fmull
call
jg
and
jg
inc
mov
xor
test
sub
add
movsb
cwtl
std
dec
fwait
and
mov
push
fwait
shl
or
stos
jmp
nop
sub
push
test
movsl
mov
sarl
pop
ficoml
mov
mov
fs
pop
or
jle
cwtl
dec
fs
pop
pop
jge
sti
sub
cmp
dec
fimull
rsm
sbb
movsl
mov
adc
jne
jae
ds
dec
mov
aam
sbb
outsb
mov
fimuls
icebp
pusha
outsb
push
mov
xor
xlat
in
mov
cmpsl
movsl
ja
sub
aaa
cmp
jbe
jecxz
mov
cmp
in
or
xor
mov
sub
aam
or
sbb
lcall
push
pop
adc
mov
xchg
dec
dec
cmp
in
ja
mov
cltd
push
in
out
or
stos
shlb
mov
cmp
xor
jge
fsubs
inc
xlat
mov
inc
addb
mov
into
xlat
cwtl
imul
scas
jmp
enter
repnz
jae
mov
mov
stos
pop
pushf
pop
loop
aas
daa
lea
push
and
dec
pop
std
popf
or
dec
sti
lods
adc
dec
jle
test
clc
mov
lds
es
dec
in
jo
sbb
mov
fstl
fnstsw
popf
in
mov
or
and
lret
mov
mov
mov
in
pop
je
push
ljmp
mov
loop
data16
pop
movl
dec
add
enter
inc
cmpsb
je
hlt
sbb
add
jp
or
jne
je
leave
movsb
test
aad
icebp
inc
loopne
dec
scas
test
xchg
stos
stc
xchg
rcrb
ror
xor
leave
sbb
mov
mov
mov
loope
daa
stos
mov
in
inc
mov
inc
mov
aad
mov
test
cwtl
imul
lds
xor
inc
mov
push
xlat
test
lret
sub
mov
sub
pop
jnp
bound
cs
add
fwait
inc
inc
xchg
and
cmp
frstor
enter
and
dec
push
add
add
pop
or
rcll
adc
das
mov
xchg
aam
xor
std
aas
xor
or
scas
neg
scas
xchg
jnp
iret
repz
shll
lock
outsb
call
repnz
inc
and
sbb
aad
dec
mov
adc
jl
lret
push
test
pop
inc
lret
daa
fisubrl
adc
lret
cmpb
mov
pop
inc
cmp
jo
stc
rcrl
xorb
and
sub
repz
pop
xchg
cmp
dec
or
sub
orb
mov
jo
imul
imul
sbb
xchg
sbb
xor
aaa
jmp
icebp
les
push
lea
ret
test
inc
fbstp
pop
ja
cld
inc
mov
sar
cmp
sbb
push
dec
sbb
xchg
adc
movsb
add
jne
push
sbb
in
mov
in
jns
test
cmpb
loopne
int
cmp
pusha
mov
test
adc
aas
shlb
sbb
sbb
testl
test
push
and
sub
idivl
cmp
xor
mov
push
push
int
ljmp
movlps
stos
cld
outsb
pop
pop
dec
enter
jecxz
fldl
dec
push
cltd
fisttpll
das
xor
pop
push
ret
repz
push
shrl
fwait
mov
dec
xor
cmp
or
pop
sbb
jnp
ja
sub
and
jmp
imul
add
lret
xor
lahf
call
push
outsb
fmuls
out
xor
sub
dec
popa
test
mov
sub
sbb
pop
in
mov
stos
add
and
mov
rolb
scas
aas
jb
push
sbb
mov
mov
bnd
lock
xchg
cmp
or
lds
xchg
movq
call
push
gs
outsb
je
imul
ja
popa
out
stos
dec
outsl
mov
cltd
das
jp
xchg
xor
fwait
and
gs
sbb
push
cli
xor
mov
hlt
cmp
das
cmc
push
neg
jne
clc
mov
cld
cmp
call
xor
sbb
xor
mov
in
jecxz
dec
dec
push
inc
mov
out
fistpl
ret
cld
shrb
xor
and
push
jp
ja
lea
mov
jns
cmp
jno
cmp
leave
mov
fadd
loope
jne
and
pop
clc
pop
mov
pop
mov
jno
cmp
pop
jecxz
push
sbb
push
ljmp
imul
adc
xor
nop
add
rorl
cmpsl
lret
pop
inc
in
jae
sbb
test
ror
inc
pop
mov
dec
add
jno
xor
test
xchg
je
push
pop
ret
sbb
sahf
stos
jb
lcall
popf
xchg
fbstp
adc
hlt
dec
mov
and
cmpsl
lock
gs
lods
xchg
nop
mov
pop
adc
movsl
out
sarl
std
push
inc
inc
add
or
jmp
xchg
pop
pop
adc
pop
mov
mov
in
and
int3
clc
dec
pop
lahf
lret
mov
xor
into
xor
push
lea
ljmp
cmp
push
mov
fldl
addr16
push
inc
shll
adc
jne
test
inc
nop
gs
mov
pop
mov
stos
xchg
sub
imul
jae
jb
inc
addr16
xchg
jb
in
mov
stos
hlt
insl
jmp
lock
das
lds
mov
push
cld
cmp
addr16
test
adc
xor
push
mov
test
pop
js
dec
xchg
jne
sbb
xor
mov
sbb
dec
mov
xor
fstpt
call
mov
and
cli
out
shll
ljmp
fnstenv
pop
fs
adc
sub
jnp
std
push
or
push
add
or
cli
lock
mov
push
mov
mov
dec
pushf
sahf
lods
aam
and
sahf
std
cld
or
stos
into
or
movsl
pop
xchg
aad
mov
hlt
test
lock
pusha
test
aaa
inc
inc
out
pop
lods
iret
fimuls
jg
mov
or
dec
stos
mov
add
cmp
das
out
inc
dec
in
sub
or
hlt
add
maskmovq
idivl
mov
jmp
sub
push
xchg
test
mov
sub
or
dec
cmpl
sbb
mov
or
jmp
icebp
push
call
fsts
ljmp
add
fsubrl
fsubr
or
nop
pop
mov
mov
sbbl
ret
cmp
ds
dec
pushf
scas
jle
pop
mov
add
test
lds
lahf
rcrb
jns
xlat
bound
cld
das
outsl
fisttpll
ret
jp
and
ljmp
ljmp
mov
pop
insb
jl
jnp
mov
pop
in
push
or
mov
aam
add
cmp
mov
in
loopne
pop
mov
mov
addb
sbb
mov
cmpsl
popf
pusha
xchg
pop
pop
xchg
fsubl
or
stc
loop
pop
ljmp
and
xchg
mov
jno
push
xlat
iret
cmpsl
push
in
cmp
push
loopne
ret
and
xchg
dec
xlat
popl
push
cmpsl
sub
js
mov
arpl
mov
dec
mov
stos
in
jg
or
mov
pusha
mov
mov
ret
loopne
cmpsb
pop
mov
les
movsb
cmp
pop
jae
sbb
jae
fwait
push
sbbb
out
int3
loopne
sbb
dec
mov
out
jno
and
int
or
inc
cli
mov
roll
fdivl
cmc
ffree
int3
pop
cmp
mov
lret
jle
fcmovnbe
fidivl
popa
lods
jmp
ja
call
mov
outsl
push
sbbl
out
push
pop
lods
push
fsubs
and
sub
scas
mov
xor
loop
mov
xchg
jo
cmp
test
gs
aaa
inc
cmp
xchg
imul
insl
sbb
xlat
je
imul
mov
aaa
nop
enter
ljmp
push
iret
pop
and
call
cmpsb
cmp
xorl
sahf
addr16
xor
stc
add
out
add
and
subl
and
jl
les
scas
push
cmp
loopne
pop
into
fcmovnb
sahf
fbstp
das
mov
adc
mov
int
mov
adc
jp
mov
ret
in
sbb
push
mov
jp
test
out
aam
sbb
adc
or
ret
cmc
xor
xor
push
leave
sub
cs
push
sbb
jno
mov
addl
dec
mov
lcall
mov
push
shl
aad
dec
sub
call
rclb
adc
dec
mov
orl
and
aaa
adc
popa
cmp
mov
pop
fisttps
in
fidivl
cmp
icebp
sub
sub
ret
push
shr
pop
icebp
popf
lods
mov
imul
cmpsl
out
pop
inc
and
into
shll
insb
adc
add
adc
dec
mov
mov
xchg
jns
add
lahf
push
pop
sbb
cmpsl
push
mov
adc
mov
and
ds
inc
test
jae
scas
insl
aam
mov
cmc
js
sub
inc
bnd
lret
addr16
cmp
adc
cmp
xchg
xchg
jnp
arpl
sbb
and
mov
fs
xorb
pusha
sti
jae
cli
and
dec
push
sbb
inc
cmp
mov
popf
push
jnp
add
sbb
loopne
pusha
cmp
scas
mov
clc
ja
psubw
mov
or
in
mov
sbb
je
popf
movsl
sbb
sbb
mov
testl
repz
out
fildl
imul
sbb
mov
push
xchg
lcall
inc
iret
inc
ljmp
mov
xchg
jo
das
add
sti
je
ret
mov
push
mov
push
in
mov
rcll
xchg
or
sbb
mov
push
loope
dec
adc
pusha
xchg
leave
test
mov
rcll
int3
gs
jnp
rcll
xchg
fmull
jne
enter
jp
cmp
ficomps
dec
mov
nop
mov
shl
das
out
imul
jo
jmp
lcall
rolb
aam
out
xchg
ja
jmp
loopne
mov
imul
cmp
pop
sub
clc
std
pop
dec
shrl
cmp
imul
cld
pop
push
sub
lock
mov
stc
mov
shll
inc
mov
js
js
ja
mov
xchg
add
sub
lock
into
je
sbb
jae
xlat
fs
add
xor
mov
mov
pop
test
push
mov
into
adc
adc
shrl
inc
enter
sub
xor
cmp
push
repz
add
flds
rcrb
sub
mov
jecxz
inc
roll
and
cmp
cmpsb
lret
dec
pushf
push
test
add
dec
dec
addr16
lcall
xor
pop
aam
int
lods
outsb
inc
dec
cmp
scas
pop
mov
sbb
pop
jae
xor
push
and
jle
jbe
push
mov
int
addr16
lock
aas
mov
testl
lea
sbb
xchg
push
imul
cs
sbb
testb
insl
mov
pop
mov
dec
push
mov
arpl
rol
lret
mov
add
sbb
push
pop
cmpsl
or
add
ja
jmp
jae
mov
xchg
cmc
aas
pop
mov
cld
arpl
hlt
ret
xor
adc
dec
fadd
jo
sub
in
jo
iret
xor
mov
pop
in
mov
mov
stc
inc
sbb
push
addr16
insb
dec
push
data16
adc
mov
repnz
dec
add
stc
jno
out
cmpl
int
dec
sub
dec
mov
movsb
ja
popa
push
inc
test
xchg
mov
mov
xchg
jge
stc
ja
or
cmp
icebp
sbb
shll
daa
shrb
and
mov
adc
insb
aam
insb
push
test
inc
addb
test
mov
add
xor
xor
push
adcb
sub
adc
ljmp
push
xor
lea
mov
sub
fwait
call
call
cmp
icebp
adc
jmp
aam
cld
dec
fld
out
pop
xchg
scas
js
mov
jo
out
mov
out
cmp
xor
inc
aad
mov
pop
jg
cmp
testb
movb
dec
inc
test
xorl
jno
cmp
inc
rcll
jnp
sbb
std
scas
jnp
mov
jle
ret
mov
leave
xlat
lods
or
adcl
mov
mull
insl
cmp
xor
pop
sbb
sbb
in
push
cmp
cmc
push
std
inc
dec
scas
pusha
or
xor
xchg
or
pushf
add
mov
and
cmp
fiaddl
inc
fistpll
jg
lret
test
cmp
push
adc
xor
dec
push
imulb
mov
fdivs
mov
sbb
mov
mov
into
push
cmp
sub
mov
lods
mov
cmp
pop
data16
jmp
inc
test
dec
in
loope
rclb
push
test
push
aad
and
mov
mov
sbbb
add
push
jb
lret
push
lahf
xor
xor
jmp
and
rorl
addr16
pop
cmp
jb
push
mov
test
jne
scas
addr16
mov
or
js
lods
popf
xor
sbb
sbb
fldcw
fiaddl
into
leave
pusha
sbb
out
clc
push
and
decl
dec
push
pusha
pop
inc
sbb
mov
fldl
sub
jbe
insl
filds
mov
push
lret
daa
sub
xchg
sub
inc
add
xchg
push
push
and
shl
mov
xchg
fs
inc
xchg
cmp
pop
es
sub
fwait
dec
outsb
cwtl
dec
dec
or
dec
lock
mov
mov
int3
loop
mov
out
xor
and
cmp
and
aaa
int
out
push
movsl
enter
mov
icebp
or
ret
out
popf
sub
aad
and
sbb
dec
ficoml
scas
sbb
mov
or
shrb
outsl
sbb
or
pop
and
arpl
inc
cmp
mov
cld
mov
loope
lcall
push
test
or
nop
push
push
stc
add
xchg
aam
popf
stos
ret
cld
lds
in
movsb
es
push
ja
mov
jno
jnp
push
loop
gs
push
cltd
mov
adc
mov
xor
jle
negb
lahf
dec
call
sub
lds
imul
lret
movsb
sub
and
add
andl
ret
ja
sub
out
xchg
mov
jbe
pop
push
mov
sub
ljmp
cmp
js
imulb
dec
ret
and
pop
jb
shlb
xor
mov
addr16
das
jle
cmpsl
xchg
push
add
je
lret
ljmp
mov
jns
subb
fucomi
add
dec
cmp
push
xchg
aam
push
adc
adc
mov
stc
scas
loopne
mov
cmp
jp
iret
pop
xor
int3
das
sbb
jns
stos
add
dec
xchg
daa
xor
jmp
mov
or
fstl
mov
popf
outsl
std
jecxz
int
scas
sbb
jecxz
add
movsl
add
rcrl
leave
pop
insb
inc
std
inc
mov
aam
loopne
fnstcw
popf
cltd
in
bts
mov
loop
addr16
mov
cltd
xor
sbb
add
popa
aam
mov
pop
cmpsl
jae
test
adc
mov
mov
in
mov
sbb
pop
ret
or
sub
push
pop
outsb
pop
and
scas
fdivrs
push
dec
sub
add
sarb
lcall
xchg
and
jge
js
or
addr16
add
dec
dec
loop
adc
push
dec
clc
push
pop
mov
or
stc
push
in
mov
and
bound
or
xchg
in
mov
sub
add
push
jl
mov
pop
stos
in
lds
fbld
cli
pop
xchg
ljmp
aaa
jno
pop
hlt
cmp
pop
icebp
daa
fisubrs
clc
inc
pop
fildl
repz
mov
xchg
ja
adc
out
and
and
lcall
in
repnz
cmp
inc
es
nop
xchg
push
test
add
fldcw
fsubrl
xchg
and
mov
lret
pop
pushf
push
jne
je
cld
xchg
mov
push
mov
mov
lea
lret
add
dec
out
and
stc
and
addr16
sub
lahf
jnp
push
cmpsl
jp
inc
test
movsb
insb
xor
std
shl
inc
loop
inc
fs
enter
jno
mov
jbe
test
dec
sti
add
mov
or
jae
mov
push
cmpsl
mov
fimull
lods
dec
push
iret
xor
mov
mov
js
insl
in
shrl
sbb
adc
xor
jl
push
pushf
adc
aas
jge
add
sub
push
or
pop
int
outsb
les
leave
fmull
cs
xchg
mov
icebp
into
lods
inc
mov
sub
dec
jns
xchg
cld
sub
in
xor
popl
or
sbb
sbbb
pop
mov
inc
dec
cmp
in
sbb
shlb
loopne
std
stc
mov
scas
negb
in
hlt
rorb
leave
xchg
loopne
xchg
loope
pop
pop
nop
sti
lret
lret
jecxz
adc
jns
sbb
mov
ja
inc
lret
aas
jmp
inc
dec
jp
mov
mov
icebp
pop
xchg
stos
push
xchg
jno
imul
popa
rorl
adc
jmp
push
pop
fs
shll
lret
sbb
mov
mov
push
lret
gs
in
push
xchg
mov
stos
lock
and
arpl
mov
xor
negb
or
pop
inc
test
pop
adc
mov
xor
cli
jp
jl
imul
or
mulb
mov
push
insb
adc
inc
lods
inc
fwait
and
lahf
and
lahf
adc
outsl
test
lea
xchg
mov
icebp
addl
fxch
out
ja
outsl
pop
xchg
and
sbb
rclb
data16
outsb
sub
push
mov
mov
decb
test
dec
and
movsb
mov
pusha
pop
push
ja
cs
clc
idivl
sbb
inc
fdivl
gs
jb
cmp
sub
push
lods
push
pop
outsl
add
lock
or
dec
fmull
outsb
test
nop
mov
not
mov
xchg
inc
fnsetpm(287
loopne
adc
xchg
pop
pushl
xchg
or
fadds
ret
sub
icebp
lret
mov
mov
cmpsl
push
pop
xor
cmp
rcrl
cmpsb
jle
sbb
jecxz
andb
cwtl
repz
shrb
ret
pop
mov
add
outsl
out
xchg
push
movsb
shrl
lea
pusha
pop
cmp
mov
sarb
dec
pop
or
inc
loope
lock
mov
ja
icebp
ds
mov
nop
cmc
cmc
pusha
inc
outsl
lret
stos
jnp
adc
shlb
jb
mov
xorl
test
pop
xchg
stc
fdivrl
push
outsl
ljmp
test
adc
mov
adc
pop
hlt
pop
xor
leave
lea
push
lods
cmp
cmc
mov
sub
jnp
fbld
and
sbb
ljmp
mov
mov
xchg
add
js
mov
inc
mov
xchg
inc
mov
aad
mov
lcall
push
out
pop
jae
cmp
ss
adc
and
outsl
lds
hlt
sub
sub
icebp
movsl
flds
jnp
lahf
jbe
push
dec
pop
scas
pusha
cmc
pop
and
stos
int3
or
mov
loop
adc
icebp
nop
xchg
std
call
nop
addb
scas
int3
sbb
enter
out
sbb
or
fs
stc
jg
mov
adc
mov
dec
or
fsubrl
aam
out
daa
mov
xor
ret
out
scas
xor
inc
dec
xchg
dec
cmc
jmp
lods
icebp
xchg
mov
lret
and
jg
repnz
jo
push
stc
into
xchg
addb
fwait
and
pop
pop
and
mov
lret
ja
cmpsb
mov
or
add
sarb
sbb
dec
mov
imul
dec
daa
push
xor
pusha
cmpsl
mov
jp
stos
push
das
or
jns
sbb
push
nop
jge
cwtl
dec
inc
xor
and
jmp
or
xorb
out
adc
mov
pop
sub
out
ljmp
imul
adc
jge
cmp
xor
loope
stc
xlat
fisubs
test
mov
xor
ds
sahf
bnd
lret
sbb
pop
out
js
pop
in
cmpb
in
lret
lret
in
int
xor
pop
aam
repz
push
inc
inc
cltd
jp
dec
mov
sbb
cmp
cwtl
pusha
movsl
movsb
cmp
xlat
into
ret
and
or
xchg
stc
outsb
add
pop
mov
mov
inc
outsl
arpl
mov
loop
sbb
aaa
dec
sti
test
push
mov
in
inc
add
ret
clc
nop
loopne
dec
add
das
push
fisubrs
pop
stos
in
pushf
xor
pop
testl
inc
xchg
scas
lea
clc
sbb
std
mov
mov
inc
sbb
push
add
mov
jge
or
lret
add
push
mov
aam
sti
jmp
orl
fisttpll
jbe
ret
jg
mov
andb
stc
pop
lahf
test
push
out
outsb
jb
popa
in
inc
or
mov
sub
push
push
pop
mov
sahf
push
adc
repz
imul
cmp
sbb
movb
xor
cld
xor
roll
rcrl
int
jp
loop
sbb
mov
cmp
lds
cmc
jmp
stos
dec
jg
pusha
mov
xchg
mov
and
inc
jns
cmp
in
add
push
dec
or
cmpsl
push
push
adc
sbb
ss
out
push
mov
mov
insb
mov
add
mov
push
push
push
lods
or
sbb
sub
cmpsb
push
test
mov
mov
ljmp
cmpsl
xchg
fldt
cmp
pop
add
xchg
xor
add
jae
repz
and
add
aas
fstl
insl
pushf
pusha
imul
dec
popf
das
insl
inc
lret
or
or
and
rclb
stc
xor
jbe
sarl
xchg
bswap
jae
bound
movsb
or
mov
fsubr
pop
pop
pop
dec
cmpsl
add
dec
imul
stc
cmp
dec
xchg
cmc
cmp
fdivrl
xchg
shl
dec
je
call
stos
loopne
cwtl
push
xor
movsb
mov
xchg
push
push
jmp
les
add
or
sub
or
call
xchg
push
std
adc
cmp
das
and
in
aad
jbe
fdivrl
cmp
leave
push
mov
and
add
cltd
jle
orb
loopne
sub
lds
pusha
jp
icebp
shrb
divl
and
sbb
fwait
mov
movl
es
jo
push
arpl
std
inc
aam
adc
nop
faddl
pop
push
shlb
pop
mov
jbe
insl
lahf
in
jb
inc
out
adc
nop
mov
mov
fwait
sub
adc
ret
pop
fwait
pop
adc
out
nop
subl
rcrl
lea
and
and
mov
mov
pop
cs
cs
lea
mov
jle
sub
jbe
stos
jp
cmp
addr16
mov
dec
push
and
negb
mov
ss
pop
sbb
mov
int3
leave
cs
sub
xchg
xor
mov
lea
pop
mov
adc
cmp
leave
adc
fldl
pop
fbstp
imul
cs
lods
inc
adc
lahf
pop
xchg
cmp
in
inc
out
pop
cwtl
xchg
inc
roll
push
dec
jbe
test
xchg
rcrl
gs
add
insb
test
icebp
decb
mov
mov
sbb
cmp
jp
add
inc
shlb
inc
push
daa
cmp
jo
add
jp
rcrb
add
pushf
pusha
xchg
jns
jle
push
outsl
sbb
mov
or
out
outsb
ret
iret
es
jmp
ja
stos
bound
arpl
icebp
jo
movsb
pop
adc
dec
or
ficompl
add
jmp
push
jmp
mov
int3
mov
mov
add
and
push
pop
xchg
sbb
cmp
stos
scas
adc
fs
mov
mov
xor
pop
jge
and
mov
xchg
push
xchg
push
push
adcb
dec
or
sbb
fisubs
add
rcrb
pop
clc
cltd
cmpsl
imul
push
fnstenv
dec
sti
daa
mul
pop
cmp
outsl
push
les
dec
sarl
mov
dec
pushf
jmp
xchg
in
push
jle
in
mov
arpl
ljmp
and
inc
cwtl
sti
adc
ds
adc
pop
call
ds
dec
outsb
test
sub
dec
mov
mov
jns
clc
sub
mov
cltd
stc
mov
mov
stos
xor
xchg
lock
sidtl
outsl
outsl
pop
shll
jecxz
ret
pushf
adc
scas
lods
mov
pop
out
push
inc
lock
adc
aaa
xor
jae
fnstcw
cmp
enter
mov
in
and
lods
call
xchg
ficompl
mov
repnz
in
sbb
push
mov
insb
sub
adc
inc
xchg
mov
enter
xchg
lcall
sti
cmp
rcrb
or
data16
stc
and
dec
jp
rcr
or
and
rorl
roll
inc
stos
sbb
pop
mov
and
xor
out
inc
pushf
xor
jae
pop
lahf
or
lahf
push
jmp
push
cmp
xor
cltd
adc
inc
xchg
or
mov
scas
les
lock
adc
jle
lock
lock
fldenv
inc
jns
rorl
push
push
add
popa
mov
mov
adc
gs
clc
sarb
fs
adc
pop
shl
shll
jo
push
outsl
enter
cli
mov
push
in
aam
in
imul
push
adc
dec
idivb
iret
ds
dec
ror
jns
les
je
cli
sarl
add
jge
add
repnz
xor
rolb
in
cmp
lcall
jmp
xchg
push
mov
in
mov
mov
lcall
pushf
test
clc
jg
mov
sarb
in
dec
aas
repnz
jmp
cmp
lahf
daa
jns
aad
shr
add
adc
sbb
and
aam
mov
ljmp
out
mov
xor
dec
jno
mov
dec
cwtl
pop
sahf
pushf
sbbl
push
imul
push
in
aam
mov
or
cli
scas
xchg
pop
and
les
movsb
data16
xorb
das
sbb
ja
leave
loope
fimull
cwtl
push
enter
jmp
sti
stos
pop
push
adc
cld
fstpl
les
xchg
pop
sub
mov
adc
jbe
sub
or
pop
shrl
add
lock
lret
xor
push
mov
insb
lea
push
adc
iret
fdivrs
xor
dec
cmp
add
flds
sti
insl
pushf
lock
jmp
int3
xchg
inc
jl
cld
test
xor
movsl
mov
inc
push
enter
jns
add
inc
pop
mov
cmp
loop
imul
fstps
cmp
sbbl
add
les
nop
mov
stc
mov
ljmp
jp
add
jnp
mov
ret
dec
sub
mov
xchg
loop
dec
push
push
aas
scas
into
pop
stc
stos
bound
push
ja
in
dec
adc
stos
add
lret
aas
jo
imul
ret
in
mov
ja
push
loop
aad
clc
sbb
dec
sub
in
mov
loop
xchg
pop
add
aam
ss
pop
sbb
xor
add
shll
dec
sbb
jl
mov
dec
je
mov
add
push
dec
movsl
jle
addb
mov
inc
jmp
out
mov
jne
cmp
push
das
sbb
aas
sub
sbb
lret
js
es
fbstp
add
push
fisttps
inc
insl
xor
fadds
arpl
sbb
ficompl
adc
cmp
fdivl
cltd
jmp
repnz
repnz
icebp
or
cs
cmp
jbe
xlat
sbb
pop
or
ret
ljmp
je
mov
aam
int
push
mov
lret
jg
mov
ret
push
push
loopne
pop
pop
adc
inc
jne
sahf
dec
in
adc
mov
mov
test
xor
mov
push
xchg
jnp
and
outsb
sbb
cmp
push
inc
int
gs
jne
xor
mov
lcall
jge
and
and
xchg
jns
lods
xchg
repnz
lea
push
out
ja
adc
xor
decb
dec
lret
or
out
xor
cs
addr16
ret
rcrl
in
sahf
mov
fisubs
lods
cmp
repnz
insl
popa
cmp
test
inc
aam
das
rcl
inc
enter
pop
daa
inc
rcr
jb
or
pop
icebp
popa
jb
ss
hlt
and
pop
std
dec
das
movsl
cmp
dec
jge
int3
jae
fstpt
or
hlt
add
sbb
cmp
mov
aaa
or
sbb
cmp
adcb
into
cmp
dec
push
inc
in
mov
sbb
push
aad
cmp
mov
movsl
xchg
ja
inc
jmp
idivb
cmc
fsubl
pop
jno
xchg
dec
jne
mov
dec
test
mov
mov
inc
lods
into
sub
aad
mov
jg
push
inc
ds
adc
jge
stc
fisttps
mov
push
sbb
lahf
pop
or
add
jl
sbb
lods
mov
shl
stc
cmpsl
xchg
idivb
dec
and
or
sub
mov
fst
mov
icebp
mov
push
inc
mov
dec
jle
mov
leave
sbb
dec
insb
outsb
insb
jo
xchg
pop
adc
dec
js
mov
out
dec
and
into
dec
les
sub
mov
pop
cmp
jmp
jb
mov
push
mov
inc
mov
neg
imul
sub
sbb
mov
jno
xor
aas
popf
pop
js
jns
in
icebp
nop
xchg
cmp
fidivl
ljmp
or
test
adcb
push
sub
lds
cltd
sub
jo
mov
test
sbb
mov
or
xchg
xor
mov
cmp
cmpsb
aad
aam
lret
and
add
insb
mov
pop
cwtl
mov
inc
pop
cmp
fcmovnb
cmp
les
sub
lret
push
xor
shll
out
test
dec
cmpsb
push
aaa
sahf
imul
std
xchg
fcoml
or
loope
cmpl
inc
test
xor
push
dec
aas
cmp
dec
lahf
addl
outsl
insb
push
ljmp
enter
rcl
hlt
or
or
push
scas
xor
sbb
cmp
ljmp
mov
xchg
xchg
movsl
cmp
in
dec
pop
out
xor
or
jne
dec
adc
sbb
or
in
push
push
loopne
stos
out
jbe
adc
inc
mov
arpl
inc
mov
mov
ret
adcl
repnz
xchg
jno
adc
jno
cmp
push
mov
pop
sbb
addr16
imul
test
cmpsl
daa
ja
or
loopne
fs
rep
sti
adc
or
pop
jmp
cmp
and
stos
push
xchg
dec
addl
inc
mov
push
data16
test
loop
or
pop
test
sub
mov
shr
sbb
in
push
cld
xlat
shlb
test
sbb
repnz
push
jb
mov
inc
in
shr
lods
adc
sub
sti
out
add
push
outsb
mov
add
mov
xor
pusha
aam
lret
inc
add
jmp
aas
sti
mov
xchg
add
jno
sahf
cmp
add
jg
pop
pop
loopne
pop
insb
je
mov
hlt
push
dec
xor
je
data16
push
mov
xor
push
pop
xchg
andb
add
jmp
fwait
mov
icebp
fwait
lods
out
stos
rolb
jl
lret
aam
xchg
jge
mov
stc
pop
rorb
lahf
andb
loopne
sub
push
test
outsl
ret
dec
bound
lds
push
push
loopne
mov
sbb
sub
faddp
aam
and
cmp
jp
xchg
pushf
xor
or
xchg
mov
fists
loope
sbb
adc
push
pop
xchg
sbbb
fisubl
cmp
or
cmpsb
outsb
push
mov
aas
stos
dec
test
xchg
push
push
dec
or
aas
dec
jl
mov
shrl
out
cltd
pop
pop
push
inc
stos
inc
sbb
sbb
sub
and
pusha
aas
lcall
movsb
lods
std
lcall
mov
in
sti
lret
inc
insb
mov
lods
loope
cli
or
sub
sub
xlat
pop
xor
les
in
cmp
bound
into
lds
jne
adc
push
sub
stos
cmp
cli
adc
add
and
xor
xchg
mov
add
ret
push
andl
push
sarb
push
cld
add
sti
cmp
cwtl
add
jmp
push
sub
mov
sbb
cs
adc
es
xor
xor
inc
shlb
adcb
into
bound
out
mov
add
add
mov
xchg
dec
popa
and
les
std
mov
mov
scas
iret
scas
subb
adc
leave
adc
stc
imul
add
sbb
mov
pop
fstl
movsb
loopne
shl
jns
data16
scas
xor
jae
in
fld
fstp
in
push
in
push
mov
sub
jmp
nop
jle
xchg
pop
pop
scas
mov
movsb
mov
ret
cmp
pop
std
dec
push
sub
addr16
imul
ret
xlat
out
sbb
mov
xchg
cmp
sbb
pop
push
xchg
loope
rorl
lcall
jle
add
add
mov
xchg
movsb
repnz
xor
pop
sbb
pop
xchg
mov
jle
push
lods
sbb
fcmovnb
out
cmp
lcall
dec
xchg
mov
mov
inc
or
into
jbe
test
xor
lds
rcrb
popa
jecxz
in
int
lock
lock
pop
jmp
mov
sub
push
icebp
mov
cltd
fwait
or
dec
push
fisttpll
out
out
xor
jne
sbb
and
loope
addr16
xchg
xor
cs
scas
cwtl
and
cmpl
in
pushf
test
dec
fwait
xchg
cmp
cmpb
cmp
sbb
cmp
xlat
adc
sbb
fsubrp
sub
stos
ljmp
push
bound
adc
xor
clc
push
ljmp
ret
ds
add
push
cwtl
jne
scas
arpl
jbe
jl
icebp
mov
sahf
push
mov
cmpsb
in
jmp
outsb
mov
leave
ss
addr16
xchg
popa
jecxz
cmpsl
jae
clc
mov
cld
push
imulb
lods
pushf
inc
xchg
dec
nop
test
jb
testb
popa
mov
jl
bound
ja
sbb
jnp
jmp
push
sbb
sub
out
stc
mov
ror
xchg
pop
pop
push
sub
xchg
mov
mov
imul
imul
int
dec
scas
jl
scas
inc
lods
adc
jbe
xchg
pop
sahf
inc
loop
mov
out
mov
pushf
subl
aas
clc
sbb
mov
out
ljmp
mov
xchg
test
jo
xchg
lret
ss
mov
or
adc
hlt
outsb
imul
movsl
inc
fwait
rclb
adc
cmp
jg
mov
ret
or
jns
add
dec
xchg
loope
pop
sub
stc
pop
adc
sbbl
push
xchg
mov
pop
cmc
adc
lock
or
jmp
sbb
andl
xlat
or
and
or
dec
dec
xchg
push
clc
mov
lahf
movsl
arpl
ja
cmp
loopne
daa
test
inc
repnz
xchg
add
fldcw
imul
fwait
jle
cmpl
dec
push
xor
ljmp
inc
inc
insb
pop
fcomps
cmp
pop
mov
and
popa
sbbb
cmpsl
jge
pop
insl
inc
adc
lret
push
xchg
fdivr
movsl
cmp
call
push
sbb
js
push
dec
adc
adc
sbb
mov
dec
xor
aad
cmc
test
mov
mov
outsl
aaa
mov
sub
js
xor
cwtl
push
mov
or
cltd
aam
fistpll
mov
xchg
push
pop
pop
dec
js
mov
xchg
repnz
cmpl
push
sub
lock
insb
in
cwtl
pop
jo
sahf
dec
sub
add
xor
ds
fdivrs
sub
cmp
out
fdiv
leave
xor
and
nop
shrl
lods
mov
push
pcmpeqw
mulb
stc
push
dec
mov
iret
mov
dec
sub
imul
add
xchg
mov
mov
inc
repz
mov
fnstenv
andl
imul
daa
inc
xor
mov
int
insl
cwtl
int3
mov
insl
fsubrl
jg
add
adc
xchg
mov
cli
mov
pop
ret
pushf
mov
jbe
dec
xchg
stos
stos
lret
shrl
inc
lods
jle
push
sub
add
xor
push
inc
ljmp
xor
stos
mov
cld
stos
fs
out
dec
cmc
or
and
dec
je
movb
outsl
icebp
lods
jo
fcoml
jnp
pop
jg
insl
lret
or
arpl
daa
cli
out
pop
prefetch
int
clc
xchg
lods
mov
fwait
movsb
jnp
shll
das
fidivrl
and
fsubrl
pop
sub
push
pop
punpckhdq
cmp
inc
mov
sbb
pop
mov
leave
mov
xchg
imul
daa
xchg
insb
mov
xchg
loopne
flds
repz
jp
ret
in
push
inc
bound
add
neg
or
out
or
jp
call
adc
mov
cmc
and
mov
les
mov
fst
mov
push
fidivs
xchg
cs
lods
imul
mov
lret
pop
mov
lods
lock
fstps
ja
xchg
sbb
and
shll
adc
xor
xor
test
push
fwait
nop
addr16
add
pop
test
pop
and
xchg
dec
data16
retw
or
lcall
adc
sbb
ffree
jns
pusha
pop
leave
cmp
cld
and
ret
cmpsb
fwait
aad
adc
xor
or
scas
jecxz
dec
fwait
mov
enter
jle
dec
enter
fsubs
inc
fcoms
and
xchg
lock
je
push
insb
inc
mov
pmaddwd
push
in
dec
mov
lods
and
push
jmp
jbe
sub
pop
sbb
xlat
or
add
dec
outsl
and
rcrb
roll
and
dec
xchg
or
lcall
cmc
in
mov
xor
loope
jge
mov
jo
dec
leave
pop
xsha1
cmpsb
or
push
push
out
mov
mov
sahf
push
sub
xor
movsl
mov
adcb
fwait
push
cmpsb
subl
adc
fdivrl
test
daa
fistps
add
mov
dec
xchg
fcompl
mov
fdivr
test
dec
out
fnstsw
out
push
cmp
mov
das
push
cld
outsb
shll
mov
cmp
sub
cmp
rep
int
lcall
or
mov
mov
pushl
rcrl
movsl
out
fimuls
loope
inc
mov
repnz
xchg
inc
xchg
adcb
sub
mov
jmp
les
mov
leave
mov
sbb
mov
jl
ficoms
jno
es
lds
mov
jg
dec
xchg
dec
mov
jg
cmp
test
or
loope
mov
mov
fst
or
and
fidivrl
jbe
add
in
xor
arpl
int
cmpb
sbb
dec
jecxz
test
mov
inc
repz
test
fidivl
jno
je
lods
popf
add
mov
shlb
push
dec
movsb
mov
mov
dec
sub
cmp
ss
popf
push
lea
jno
pop
mov
lahf
or
inc
mov
cwtl
jne
cld
test
mov
iret
xchg
xchg
sub
gs
jecxz
xor
test
enter
lret
inc
push
ja
scas
stc
xor
mov
test
in
les
out
sub
jmp
in
xchg
dec
lock
xor
stos
mov
add
or
loope
sub
pop
sbb
ficomps
out
mov
dec
lahf
shl
dec
out
mov
hlt
mov
scas
pop
pop
cli
adc
test
mov
and
in
vmovhpd
pop
aaa
jmp
shlb
es
dec
cli
je
shlb
pop
jge
call
stos
pop
lret
adc
sub
or
sbb
lahf
xor
lea
jle
push
jne
enter
enter
push
cld
jl
sti
pmaxsw
xchg
imul
loopne
pusha
shlb
rolb
sar
jnp
jno
push
inc
pushf
mov
aas
shll
in
nop
jns
loope
popf
fwait
or
push
or
adc
lds
mov
and
xchg
iret
dec
mov
je,pt
pusha
pop
int3
add
imul
add
jnp
or
push
push
cld
cltd
aam
jl
dec
dec
sbb
jp
dec
jge
push
cmc
lods
add
jle
std
push
call
inc
add
aaa
dec
inc
mov
mov
xor
dec
test
lcall
push
mov
ss
es
sub
lods
sbb
and
aad
int3
jno
fbstp
inc
daa
xchg
cmp
out
ror
fiaddl
add
aad
xor
jmp
cmp
and
mov
push
je
mov
inc
mov
cmp
jg
mov
sbb
pushf
sbb
testb
jmp
jb
inc
lret
add
dec
dec
inc
faddp
add
call
pop
dec
jo
sbb
xchg
test
push
jp
nop
aas
aas
xchg
cmp
xchg
xor
pop
stc
xchg
repnz
push
push
lahf
lret
sub
xchg
dec
dec
pop
mov
sbb
cmp
not
or
in
xor
icebp
data16
add
scas
cmp
cmp
sbb
push
adcl
outsl
daa
push
cmp
push
in
and
adc
mov
or
shll
cli
sbb
in
push
loopne
sub
xchg
test
scas
fistl
fildll
lahf
or
fsubrs
iret
rcrl
dec
sahf
in
mov
xchg
sar
enter
mov
jae
push
or
and
push
enter
adc
jg
std
dec
pop
mov
int
mov
out
cmp
cs
mov
or
fnstenv
adc
inc
push
dec
popa
sub
ljmp
and
add
mov
out
or
mov
pop
ljmp
add
enter
xor
loope
adc
mov
dec
movl
mov
sti
lahf
cmp
xchg
jl
gs
stc
leave
dec
lods
jle
inc
lods
fnstsw
pop
and
repz
sbb
adc
out
in
mov
test
test
add
dec
cs
fisubl
cld
outsb
jbe
cwtl
jns
dec
mov
inc
pop
lcall
mov
mov
dec
jno
loop
adc
mov
loopne
pushf
adc
fdiv
decl
cld
mov
sub
addb
std
repnz
xor
ret
push
push
gs
hlt
insb
hlt
out
mov
popa
out
mov
add
mov
cmpsb
add
push
push
inc
dec
aaa
push
sti
sbb
cli
cmp
inc
and
or
sarb
out
loope
mov
sub
cmpsb
dec
daa
lret
iret
sub
repnz
adc
addr16
andb
lahf
mov
jmp
jo
push
dec
push
pop
aam
xor
adc
mov
sub
movsb
leave
andb
jo
push
shr
adc
nop
mov
lods
mov
adc
out
xlat
jmp
push
lods
je
mov
std
or
inc
inc
call
sub
dec
dec
outsl
clc
jno
mov
push
dec
pop
push
lcall
adc
xchg
in
lret
lcall
xchg
lahf
arpl
jmp
loop
enter
sub
mov
push
xchg
mov
pushf
mov
adc
xchg
nop
lahf
xchg
insb
pop
lret
idiv
cli
mov
add
add
sub
repz
ss
out
pushf
cmp
xor
fs
or
leave
mov
jmp
lcall
aas
mov
and
cld
mov
push
push
mov
mov
push
scas
mov
stc
mov
pop
dec
icebp
and
insl
in
adc
pop
movsb
jmp
jnp
lea
or
pop
stos
jns
jecxz
jecxz
lods
inc
xchg
loop
mov
and
jl
mov
mov
push
push
cmc
xor
add
jmp
out
xlat
adc
sub
xchg
jo
and
into
mov
jmp
hlt
sub
add
je
das
subb
xchg
dec
cmp
pop
add
mov
lahf
fsub
out
ret
jne
mov
jb
mov
je
mov
pop
mov
cmp
inc
or
stos
adc
pop
pop
sbb
mov
mov
rcr
dec
out
xlat
es
sbb
dec
or
fs
jnp
mov
or
xchg
lock
flds
cmp
jecxz
and
jbe
lret
inc
jl
inc
addb
jge
mov
gs
add
in
fisubl
fstl
jne
pushf
mov
add
mov
ja
into
mov
shll
and
lret
mov
sbbl
fldt
test
ss
movsl
pushf
mov
push
push
pop
lahf
stos
lods
fcmovnu
stos
lea
lods
push
dec
add
rorl
stos
aam
jp
shrb
xchg
mov
stos
inc
fcmovu
push
les
fimull
mov
adc
jae
aaa
bound
rclb
movsl
push
lret
rorl
fsubl
mov
stos
sar
ret
xor
int3
sahf
pop
std
out
jmp
fisttpll
add
icebp
ja
call
cmpsb
dec
testb
cmp
sub
adc
pop
mov
ds
fisubrs
or
pusha
adc
mov
xchg
out
inc
jo
push
xchg
pop
mov
pusha
rorb
out
add
and
mov
int
mov
mov
sti
loope
jg
aad
xlat
mov
scas
xchg
mov
jg
int
mov
ret
dec
cmpsb
mov
movsb
inc
adc
inc
arpl
lahf
out
adc
imulb
inc
insb
and
lods
lds
add
clc
cmp
clc
lods
sti
push
xchg
dec
aam
rorb
bnd
ret
jb
nop
popa
fsts
lods
jns
rolb
xchg
inc
sub
cmpsl
aad
cmpl
test
xchg
bound
mov
int3
imul
cmp
mov
hlt
lcall
or
fisttpl
pop
test
jge
popf
loopne
jne
mov
rorl
pop
lea
aas
in
enter
sbb
or
mov
pop
inc
mulb
mov
pop
mov
mov
mov
add
or
push
in
add
addr16
lea
pop
clc
mov
push
mov
inc
or
add
push
lret
jmp
cmp
les
sbbl
int3
stos
imul
icebp
in
cmpsl
push
lea
mov
push
inc
inc
sbb
js
jge
add
aaa
push
xor
inc
in
pop
fildll
inc
popa
jnp
das
stc
ds
pop
inc
jo
add
inc
mov
out
push
dec
fcoms
ja
orl
sub
push
push
push
cmp
sub
pop
mov
das
xchg
inc
insb
or
jle
jle
test
pop
push
and
xchg
frstor
call
pop
pop
push
jne
cli
push
add
mov
xchg
loope
cmp
sub
fists
mov
pop
mov
jo
in
shrl
jno
and
out
xor
sbb
jbe
cmpsb
cli
shrb
pop
dec
cmc
imul
movsl
pop
fildl
clc
mov
fcmovnu
js
sub
push
jo
xchg
xchg
iret
pop
f2xm1
loopne
xor
in
xchg
adc
js
cmp
cmpl
mov
inc
sub
add
dec
inc
inc
xor
jbe
push
mov
fs
bound
adc
jnp
mov
mov
cmpsl
sub
jns
int
rcr
mov
pop
lock
popa
cltd
mov
lock
loopne
cmc
sbb
pop
jns
fisttps
imul
mov
lods
xor
pop
pop
mov
dec
mov
andl
aas
loope
out
push
call
dec
orl
sbb
mov
mov
jo
mov
cld
loopne
inc
jl
pushl
add
dec
xor
rclb
jle
inc
cmp
xchg
sub
adc
or
jmp
leave
adc
mov
loop
call
add
and
sbb
leave
pop
out
insl
in
cs
mov
jnp
jns
push
mov
fmull
sbb
jl
or
sbb
fucom
inc
idiv
ficoms
xchg
insl
add
stos
sbb
int
out
xchg
and
shl
rolb
loop
sbb
push
fisttps
inc
ljmp
or
mov
push
mov
push
or
out
cld
xchg
cmp
or
mov
pop
movsl
rcrb
rorl
gs
nop
xchg
sub
lods
or
push
loope
into
lcall
mov
inc
icebp
cmpsb
push
aad
mov
cmp
jp
aam
sub
mov
xchg
jg
push
aaa
je
cmp
cmp
push
inc
push
movsb
ljmp
jne
xor
pop
jo
pop
in
insl
mov
inc
cmp
jg
out
js
js
dec
push
push
mov
lds
mov
repz
aam
lahf
mov
mov
mov
out
into
mov
sbb
imul
mov
xor
mov
aas
pushf
icebp
es
aaa
int3
cmc
fs
push
loop
int3
sbb
jge
repz
push
ds
repz
dec
sahf
dec
push
adc
dec
jo
rclb
loope
inc
sbb
sub
jb
mov
dec
fs
xchg
xchg
and
jge
aad
gs
loope
lahf
cmp
inc
jne
or
aam
movl
stos
sti
pushf
sbb
aaa
data16
repz
or
sbb
test
cmp
push
jmp
icebp
adc
mov
sbbl
test
cmp
pushf
xor
cmpsb
cli
scas
arpl
mov
outsl
in
add
cmp
cmp
aad
cs
aam
loop
push
add
negl
or
insb
xor
sti
add
push
add
inc
movsb
mov
in
push
imul
ja
xorps
xorl
cmp
std
in
adc
pop
orl
xchg
movsl
sbb
push
jae
movsl
sub
xor
mov
lret
pop
xchg
add
inc
jne
dec
jo
push
adc
std
fdivs
les
cmc
cmp
pop
es
and
bnd
clc
push
sub
mov
das
sbb
lahf
pop
cmp
mov
dec
mov
lss
cmp
cmp
adc
sti
push
inc
xchg
jns
movsl
pop
pop
push
lret
dec
cmp
js
add
xchg
fisttps
int3
jnp
add
fucomip
push
mov
push
push
and
mov
adc
lods
test
pop
fmull
ret
mov
xchg
mov
push
lcall
mov
push
push
mov
arpl
pop
jns
lock
shlb
clc
xchg
cmc
and
pushf
cmp
gs
pop
cmp
mov
test
aam
dec
std
pop
and
push
push
push
fidivl
mov
rolb
jns
leave
mov
cmpsb
and
fists
sbb
arpl
daa
lahf
jg
jge
cmp
movsb
pop
inc
aad
shlb
dec
cmpsl
pop
inc
xchg
fldcw
jae
pop
sbb
xchg
loop
mov
cld
enter
roll
inc
lock
inc
popa
push
nop
orl
out
inc
jb
lods
outsl
push
mov
push
pusha
bnd
mov
xor
xlat
dec
adc
pop
out
jmp
out
jg
fidivs
adc
xchg
and
xor
jecxz
pop
add
cld
popa
sbb
jmp
or
mov
mov
xorb
fwait
dec
xlat
adc
mov
repz
test
jne
les
xchg
movsb
outsl
popf
cmp
or
sahf
sbb
lea
test
adc
insb
add
aaa
add
dec
scas
and
dec
adc
dec
jae
sbb
mov
lds
xor
cltd
lods
lods
pop
rcrl
outsl
mov
movsb
sub
lret
inc
pop
jb
add
dec
fwait
dec
clc
jp
inc
iret
cltd
loop
push
add
mov
cwtl
sub
mov
repnz
xchg
sub
lahf
cs
fwait
xor
insl
fisubrl
icebp
inc
stos
shl
call
aad
jbe
rol
enter
int3
push
loopne
adc
and
leave
sbb
pop
mov
movsb
pushf
mov
add
xchg
sbb
xchg
subl
pushf
clc
mov
popa
cwtl
or
jg
dec
clc
xchg
lcall
jo
cmp
add
sub
ljmp
and
xor
loop
mov
and
ret
mov
jae
es
or
fnstenv
pop
fistpll
shlb
dec
jmp
daa
mov
dec
or
mov
jmp
cmp
ficoml
stos
or
xor
xorl
sbb
popa
loopne
hlt
inc
rcrb
push
lods
imul
das
inc
or
addl
clc
sub
mov
fisubs
xor
enter
test
and
push
sti
mov
push
push
popf
cld
pop
and
mov
psadbw
repnz
scas
adcb
adc
dec
push
inc
xor
clc
inc
sub
nop
mov
fs
dec
vmwrite
out
dec
jl
add
add
aam
push
aam
loop
shrl
mov
mov
out
addr16
wbinvd
push
cmp
dec
jmp
pop
pop
xor
es
mov
xchg
repnz
stos
addr16
and
shlb
dec
stc
sbb
adc
shll
dec
scas
arpl
xchg
pop
push
dec
sbb
push
out
shlb
jae
cmp
mov
sub
adcl
loope
jo
xchg
push
push
adc
loopne
add
sub
aas
push
divl
jge
pop
xchg
jno
and
adc
pop
popf
mov
cmc
dec
rcl
out
xchg
xor
scas
xchg
out
and
dec
lods
push
mov
repz
pop
dec
xchg
rcrl
dec
fcompl
lret
adc
mov
lods
stos
mov
lds
daa
sbb
adc
xor
inc
push
movsl
pushf
addr16
push
lahf
sbb
xor
pop
mov
jge
dec
scas
or
ja
fsubs
pop
es
add
jno
inc
push
dec
jg
pop
aad
rol
mov
mov
repz
out
aad
pop
popa
mov
stc
jae
pop
and
add
lahf
sti
pop
fnop
mov
sbb
sub
inc
test
daa
ds
jnp
adc
xor
ss
ror
mov
daa
sbb
push
sub
jbe
loop
push
bound
popf
pop
leave
mov
mov
in
flds
es
imul
stos
mov
cmpsl
scas
add
sbb
push
push
in
int3
fdivrs
inc
movsl
ret
jl
dec
adc
sub
adc
mov
push
cltd
mov
sarb
repz
push
lods
xchg
xchg
xchg
popa
pop
addr16
xchg
int3
test
pusha
fadds
prefetchw
mov
shlb
enter
adc
or
xor
or
lea
mov
push
dec
pop
rclb
adc
mov
idivl
pop
sti
stc
out
cld
push
mov
fcompl
loop
popa
inc
mov
arpl
cld
gs
pushf
enter
imul
in
xchg
jmp
mov
js
jle
ds
jl
mov
mov
fldl
sbb
add
adc
fistl
cwtl
ds
mov
jecxz
mov
and
clc
out
je
sbb
sbb
dec
std
aad
lahf
jne
sbb
stos
into
gs
roll
ret
pop
sbb
xchg
popa
push
pop
and
jns
clc
lods
xchg
inc
cmpb
pop
aas
mov
mov
mov
ret
cmp
cmp
mov
cmp
or
scas
cmc
add
or
movsb
cmp
fldl
cwtl
std
mov
cmp
jp
das
bound
xor
and
lahf
or
shl
sahf
pop
push
mov
push
or
mov
test
test
xor
jecxz
ficomps
lods
jno
add
out
mov
jmp
fisttpl
mov
into
std
data16
loop
mov
mov
mov
or
dec
push
xchg
pop
jl
jecxz
jns
mov
sub
xor
jne
xor
shll
in
mov
js
repz
aas
sbb
mov
cmpsb
add
ljmp
cmp
mov
mov
sbb
fsubl
dec
push
sub
jns
mov
sti
aam
pcmpeqd
xor
sbb
push
dec
and
loop
stos
rcrb
lock
ljmp
loopne
leave
int3
fwait
cli
js
test
xchg
mov
cmp
lods
in
xchg
xor
and
scas
test
orl
stos
jae
mov
orb
mov
mov
sbb
js
mov
pop
lds
call
push
mov
cld
xchg
ljmp
pushf
in
dec
lret
movsb
dec
clc
insb
aad
loope
popf
loopne
pop
push
out
fwait
or
inc
mov
adc
jno
inc
lea
stos
jle
movsl
shll
insl
inc
jns
aad
push
mov
sti
dec
aam
jb
fidivl
xor
mov
scas
fidivrs
lcall
dec
ja
mov
mov
fisttps
xor
inc
adc
add
dec
lods
in
orl
aam
fmulp
nop
in
push
sbb
out
sti
iret
jle
icebp
sub
pop
sarl
std
test
cmp
pop
push
sahf
push
sbb
scas
push
ret
add
jnp
ds
pop
cmpl
jl
inc
rol
jns
addr16
cwtl
mov
inc
jg
pushf
pop
fwait
fwait
sub
add
in
out
icebp
push
pop
dec
aad
fldcw
gs
pushf
fdivrs
roll
mov
imul
jo
inc
out
icebp
cmp
pop
insb
push
push
shrl
jno
xchg
mov
cmp
adc
mov
test
outsb
fwait
stos
bextr
add
mov
pushf
mov
in
sub
sub
arpl
std
jmp
aaa
jne
fdivrs
movsb
fucomip
pop
lret
call
and
pop
sbb
or
mov
bound
xchg
shl
pop
xchg
mov
adc
pop
push
sub
shll
inc
or
pop
push
shrb
jb
notl
cmp
fisttps
lods
xchg
lock
lods
cli
xlat
push
test
adc
push
lcall
xchg
or
xchg
jns
lcall
cmp
test
push
out
xchg
cmp
ret
out
mov
xor
imul
jb
test
pusha
cld
push
jns
xchg
ds
mov
ljmp
pop
jo
loop
das
fcmovnbe
or
push
xchg
xchg
and
loop
or
mov
or
pop
pop
xor
imul
lock
cltd
mov
es
stc
inc
add
and
or
pop
in
cmpb
clc
pushf
sbb
lea
fistpll
and
add
std
mov
call
lods
add
adc
scas
or
stos
ljmpw
pusha
fwait
xchg
inc
push
ret
push
mov
or
push
pop
push
lds
or
outsl
adc
inc
idivb
pop
xor
mov
jns
dec
jnp
sub
in
and
mov
js
incl
lds
inc
repz
xor
inc
push
shll
mov
fcomps
mov
arpl
pop
pusha
insl
mov
mov
subb
mov
cmpsl
mov
push
int
movsl
xor
sbb
div
movsl
xchg
scas
sbb
adc
and
push
jmp
mov
dec
or
mov
sahf
mov
in
sbb
jecxz
push
mov
insb
mov
xchg
fucom
outsb
push
sbbl
pop
enter
xchg
ja
lahf
pop
stos
popa
mov
imul
popa
jecxz
dec
enter
push
cs
push
imul
mov
mov
add
std
xchg
push
icebp
xor
jp
inc
adc
mov
xlat
out
cmp
sbb
addr16
fcoms
ficoms
arpl
pop
pop
enter
adc
lahf
mov
jge
mov
mov
ret
adc
mov
cli
lock
push
jp
scas
pop
pushf
pop
sbb
xorb
mov
jp
jl
fwait
lods
lds
lea
lds
sahf
fistpll
push
in
xchg
sbb
or
lods
fadds
int
mov
push
add
and
jae
ret
jl
dec
xlat
sbb
xchg
adc
hlt
mov
ret
popa
cwtl
lock
outsb
mov
dec
jmp
stos
out
sti
and
inc
scas
into
push
and
sar
int
test
divb
inc
fadds
jns
push
call
adc
ret
stos
lea
mov
sub
jp
xor
mov
lea
in
lcall
in
popf
mov
repnz
jno
inc
sub
mov
leave
jae
xchg
cwtl
enter
repz
loop
test
daa
imul
mul
pop
xor
aas
cmp
cs
imul
inc
je
or
sub
test
xor
fcoml
popf
adc
cmc
out
test
pop
and
test
push
rorb
fdivs
cmp
mov
mov
scas
lock
jnp
je
rcrl
cmp
adc
inc
ja
call
push
jns
cmc
test
dec
push
sbb
and
cmp
cmc
ljmp
sub
push
adc
and
dec
mull
ds
lret
pop
add
and
lock
jle
pop
adc
dec
into
enter
cmp
inc
in
sub
out
icebp
ss
inc
or
xchg
xchg
inc
inc
or
cs
cmc
push
dec
or
iret
inc
pop
sbb
jge
cmpsb
rcr
and
les
pop
cmp
pop
pop
pop
aam
sub
repz
inc
push
repz
xchg
fs
pop
jo
fisttpll
push
jle
cmc
ret
jg
dec
in
add
aad
sarl
daa
hlt
xchg
test
jp
nop
repnz
or
loopne
shr
sbb
or
xchg
daa
or
pop
loope
imul
or
arpl
cs
daa
fimull
pop
cmp
cmpb
mov
xor
lea
rorb
xchg
xchg
adc
or
jge
sbb
dec
jge
cmp
stc
cmpsb
fyl2xp1
lods
mov
scas
jl
add
adc
xor
add
sar
mov
mov
xchg
cmpsl
xor
inc
mov
xor
pop
repz
jge
into
jno
mov
xchg
pop
and
test
rcll
test
xor
mov
enter
dec
or
popl
enter
mov
xor
cld
inc
add
sbb
push
nop
cmp
int
pop
inc
jge
inc
sahf
gs
jne
inc
insb
arpl
mov
push
push
jl
adc
sub
lds
ja
jbe
sahf
mov
ficoml
add
aas
jmp
inc
adc
outsl
shlb
cmp
inc
out
xchg
cmc
pop
xor
fcomp
cmp
frstor
sub
lds
adc
sar
lea
lods
aas
push
int3
and
call
out
dec
sub
adc
aas
rorl
lock
adc
sti
andl
aad
ret
sub
fstl
testl
insb
lret
pushf
dec
leave
sub
sbb
cmp
inc
cli
or
adc
inc
popf
call
or
push
mov
push
mov
test
mov
mov
outsb
shrb
stos
push
fmuls
add
shlb
mov
dec
jp
out
mov
cmp
jns
mov
xchg
xor
mov
adc
and
repz
adcl
fmul
mov
sub
lea
arpl
pop
cmpsl
je
and
scas
xchg
pushf
addr16
or
clc
aas
pusha
jle
mov
rorb
cmp
mov
jne
shlb
lock
dec
xchg
ja
and
push
jle
call
mov
mov
out
data16
xorl
push
inc
dec
arpl
jp
inc
adc
pop
out
mov
int3
das
scas
cmp
out
adc
insl
fst
mov
cmpsl
fildl
add
test
and
test
stc
hlt
dec
mov
jno
sub
and
leave
nop
dec
dec
imul
or
sahf
ss
xor
sub
jbe
faddl
loope
mov
notl
repnz
movsl
jne
pop
jae
pop
dec
pusha
sub
enter
mov
test
pop
sahf
inc
mov
pop
aaa
hlt
cmp
push
mov
imulb
pop
ficoml
fcoms
xchg
mov
jle
cmpsb
jl
mov
sahf
xchg
jmp
jl
iret
add
pushf
mov
mov
popa
jno
out
mov
dec
push
in
cmp
rorb
pop
movsl
daa
xchg
or
xchg
rcrl
xchg
in
and
and
xchg
and
sub
mov
add
scas
push
jb
fidivl
lods
cmp
sub
push
sbb
insb
rorb
inc
xchg
push
mov
sbb
push
aam
sbb
bound
adc
jne
dec
adc
xor
jnp
xchg
lret
push
push
push
xor
sub
push
loop
shlb
xor
pop
or
jno
inc
adc
pop
arpl
mov
cwtl
std
dec
imul
xchg
mov
pop
aaa
inc
pop
jg
jnp
pushf
adc
and
adc
mov
out
iret
imul
loop
cmp
push
push
xchg
inc
mul
pop
dec
incb
movsl
iret
scas
inc
mov
xchg
cmpsb
add
cmp
out
bnd
push
push
mov
adc
repz
push
adcb
aad
mov
lcall
shrb
jno
out
lret
jbe
dec
outsl
sbb
dec
jmp
out
imul
loop
add
test
push
rcl
repnz
mov
cmp
sub
mov
repz
out
xor
mov
into
and
inc
roll
push
xchg
mov
cld
xchg
es
mov
push
cmp
pop
add
cld
test
pushf
xchg
loope
inc
std
out
loop
pop
data16
dec
roll
icebp
dec
arpl
outsb
outsb
repnz
pop
xchg
leave
in
loope
jl
jnp
xor
fcomps
adc
jae
or
add
pushf
cmp
pop
aaa
mov
cmp
mov
inc
mov
xchg
lods
inc
loope
scas
mov
jo
insl
je
cmpsb
and
pop
mov
lcall
xchg
gs
lods
outsl
ret
xor
or
in
mov
sbb
cmp
cmp
push
rolb
and
sub
fidivrs
scas
fs
adc
dec
cmp
nop
gs
push
popf
jne
addr16
aas
testl
cld
adc
cmc
pop
aaa
jno
test
dec
sub
bound
outsl
icebp
and
fwait
and
inc
addr16
sbb
leave
mov
hlt
daa
movsl
int
dec
test
mov
rcrl
nop
bnd
sub
jne
push
sarb
sub
mov
xor
lds
aam
outsl
test
cmp
xor
mov
add
jno
pop
dec
ljmp
inc
add
cmp
mov
rorb
mov
lahf
add
push
mov
bound
jnp
hlt
or
popa
outsb
dec
mov
push
xorb
push
push
aas
or
pop
cmp
jp,pt
jge
cmp
shlb
push
imul
out
adc
jmp
das
xchg
and
roll
jmp
or
mov
lret
inc
test
bound
add
or
add
pusha
fisttps
pop
mov
rclb
dec
popf
nopl
ds
fs
dec
push
jns
push
mov
out
fdivrs
cmpsb
mov
pop
mov
push
jle
push
pop
and
pop
sahf
ret
jl
jle
sbb
fmull
imul
scas
lcall
jg
push
fldl
fbld
mov
cmp
shll
lock
xor
in
xchg
push
mov
cmc
dec
loopne
inc
negb
les
adc
push
sub
and
aas
rolb
or
je
packuswb
leave
xchg
pushf
and
pop
jp
or
mov
int
cmp
rcll
test
mov
subl
xor
in
shll
mov
adc
cmp
data16
jnp
mov
std
xor
pop
hlt
sbb
fisubrl
add
xchg
cltd
adc
scas
push
aam
ret
mov
nop
fsts
dec
mov
out
cmp
lods
lret
sbb
sbb
scas
test
pop
hlt
fst
add
call
push
pop
add
and
mov
mov
or
lahf
cwtl
les
dec
fld
push
daa
push
adc
repnz
clc
inc
int
repz
ljmp
insb
popf
adc
cmp
cmp
jae
dec
jno
push
loope
mov
hlt
xor
adc
lds
icebp
shr
out
fcoml
fisttpl
ja
aaa
je
inc
inc
adc
int
jmp
or
int
jmp
mov
xchg
test
pop
gs
outsl
mov
mov
shll
out
sbb
lahf
xchg
xchg
mov
js
pop
nop
fsts
cltd
call
test
loop
xor
icebp
push
jecxz
sbb
mov
mov
add
popf
daa
outsl
loop
test
or
cmp
sub
or
cmp
or
inc
pop
xchg
sbb
mov
cmp
pop
mov
xor
daa
xor
dec
sti
in
mov
out
ror
add
loopne
push
cmp
pop
push
jp
dec
clc
cmp
jp
das
inc
jb
out
push
and
xchg
sti
shll
das
pop
and
out
dec
push
xor
bound
jl
mov
lock
stos
mov
pop
jnp
test
jge
cltd
addr16
mov
ds
fldenv
xor
jp
lods
pop
xchg
mov
sub
cmp
call
lahf
mov
jl
sbb
scas
std
jbe
push
test
add
push
adc
andl
add
les
ds
sbb
mov
jle
loop
xchg
lret
rorl
push
mov
jns
pusha
in
or
mov
in
xor
sbb
aaa
scas
xchg
mov
enter
fdivr
jb
inc
pop
test
into
lea
sbb
xor
sub
filds
sub
and
cmp
mov
fsts
rol
out
popl
imul
outsb
mov
in
insb
outsb
jne
aaa
add
jbe
in
test
in
mov
in
mov
hlt
sbb
fisubl
outsl
jle
or
std
push
pop
ret
call
mov
fisttps
sbb
cmpsb
adc
scas
xorl
dec
adc
sub
inc
scas
inc
push
push
mov
xchg
fcmovnb
dec
negl
aas
pop
movsb
inc
cmp
xchg
movsl
cs
pop
lret
mov
movsb
pop
std
push
imulb
inc
aas
and
dec
or
push
mov
jmp
adc
jecxz
rcrb
repnz
pushf
mov
cld
mov
inc
pop
addr16
fwait
nop
pop
mov
jb
adc
filds
call
les
jno
sub
in
sbb
push
jge
push
out
in
test
mov
in
movl
jp
push
push
sub
out
dec
lods
out
cmp
adc
push
mov
cvtps2pd
out
int3
adc
adc
movsl
int
sbbb
sbb
ja
in
jg
pop
pop
mov
add
inc
aas
imul
or
in
lods
pop
arpl
pop
out
aas
mov
popa
push
push
sbb
dec
popa
lds
xchg
pop
sti
cmp
sub
push
movsl
adc
inc
adc
pushl
sub
xchg
jge
scas
das
cmp
hlt
aam
cmpsb
xchg
pop
push
int
das
adc
sub
test
add
fs
mov
ds
cmp
xor
imul
arpl
pushf
loop
lods
iret
fcomps
subb
mov
iret
lods
adc
dec
pusha
pop
shll
es
pop
lcall
cwtl
sbb
fstl
test
or
repz
add
fwait
rolb
and
inc
add
mov
insl
getsec
adc
pop
bound
aas
loopne
pop
adc
mov
jp
arpl
scas
scas
sub
loope
pop
jae
xchg
loop
xor
jp
mov
mov
mov
mov
shll
mov
pop
imull
xchg
pop
insl
jbe
and
pop
stc
mov
sbb
add
pop
nop
and
jmp
test
rorb
add
sub
clc
pop
movsb
jne
lock
add
gs
mov
test
xor
adc
jo
out
xorb
mov
mov
out
jae
push
jb
sub
cmp
xor
arpl
in
inc
mov
xchg
mov
xor
push
jle
pop
ret
add
add
dec
das
pushf
mov
push
mov
push
and
push
jb
and
and
lods
sahf
imul
adc
ret
push
das
mov
roll
fadds
dec
sub
inc
std
dec
arpl
jg
out
subb
inc
sbb
fstps
mov
sarb
insb
or
sub
pop
push
jnp
add
imul
fcmovbe
xchg
sub
movsb
rcll
dec
sbb
out
mov
xchg
jp
das
cmp
xchg
add
je
ftst
push
ret
dec
jle
fisubs
mov
bound
call
xor
out
push
jg
loop
jge
mov
jg
jno
clc
gs
mov
mov
mov
sti
lret
insl
mov
and
or
out
sub
pop
insb
je
xchg
and
cmpsl
xchg
out
sub
inc
mov
je
push
inc
lds
repnz
xchg
jle
loopne
sahf
mov
sub
adc
mov
xor
mov
mov
xchg
fisttps
dec
cmp
sub
sbb
sbbl
mov
popa
jne
adc
xchg
ljmp
xor
inc
in
fnstenv
fwait
xor
nop
mov
shll
shl
movsl
mov
imul
cmc
ss
out
push
cmc
add
mov
shlb
fmuls
or
rorb
ja
scas
or
cwtl
rclb
movsl
cmp
stos
pop
adc
icebp
adc
pop
or
xchg
add
mov
jbe
add
adc
xor
stos
scas
pop
add
aam
test
test
int
aad
and
sub
pop
filds
scas
push
addr16
mov
push
jno
mov
pop
aam
or
pop
jnp
cmpsl
test
addr16
adc
cmp
enter
lcall
lods
inc
sub
pop
mov
aad
lcall
iret
out
lcall
shr
fs
les
xchg
sahf
inc
add
inc
adc
fwait
push
xlat
inc
xor
std
lar
std
inc
mov
ror
int
scas
sub
stos
mov
aam
lods
loop
mov
je
js
adc
dec
fnstsw
or
shrb
jbe
adc
jns
fldcw
cli
popa
pushf
mov
mov
shl
inc
and
add
xchg
xor
bound
rcrb
jp
adc
pop
push
ror
lods
push
pop
ds
popa
test
fisubrs
into
and
push
sti
out
mov
sti
lds
stos
mov
add
out
sbb
sub
sub
and
sub
xor
lret
out
sahf
into
mov
aaa
movsb
das
fbstp
jecxz
and
inc
jmp
add
test
xor
out
inc
hlt
hlt
jo
repnz
cmp
adc
add
sub
sbb
push
and
add
xor
loop
mov
les
fimull
push
stos
xchg
subb
fnstcw
fstps
popa
ljmp
sbb
lods
cmp
testb
jne
sub
shll
popf
ds
ret
rclb
lock
inc
push
jns
in
pushf
movsb
push
lcall
inc
adc
bound
outsl
mov
es
aaa
sub
or
mov
xchg
lds
sub
and
pop
jecxz
xchg
stos
out
dec
cmpl
imull
jg
dec
mov
shll
cld
mov
aad
les
pusha
cmc
mov
xor
lods
pushf
pop
or
pop
add
mov
jg
xchg
or
dec
push
mov
or
pop
ret
mov
jo
xchg
jno
in
jg
out
out
lods
aaa
mov
xchg
das
push
lock
push
emms
sbb
fmuls
ja
je
sbb
cmp
test
psubq
or
or
pop
bswap
int
sbb
mov
push
jmp
pop
or
test
lahf
pop
fiaddl
jne
not
notl
pop
xchg
fdivrl
pop
mov
pop
jo
lret
or
sbb
aaa
xor
and
inc
icebp
sub
push
or
bound
mov
push
insl
stc
inc
imul
sahf
fwait
jo
nop
dec
mov
cmp
cmp
out
mov
mov
cmp
dec
and
fisubs
push
push
inc
push
gs
push
cmp
pop
pusha
dec
test
bound
popf
inc
xor
lea
push
subl
push
add
push
dec
add
rcrb
pop
int3
jns
test
out
arpl
add
addl
test
xchg
pop
push
out
jae
gs
push
enter
pop
ffree
push
mov
std
aam
jmp
jle
es
out
rolb
push
popf
test
mov
in
addr16
xchg
sbb
push
jno
arpl
mov
je
or
xchg
mov
adc
add
ds
pop
or
adc
sub
pusha
sbb
mov
jg
hlt
dec
iret
mov
mov
jmp
in
xlat
insb
int
call
sti
or
dec
xor
ret
popf
inc
in
xor
and
sub
pop
mov
xor
lret
add
mov
aad
mov
or
out
mov
outsl
xchg
inc
es
sub
or
cltd
mov
cmp
ss
mov
popa
sub
add
mov
jno
cmp
pop
xor
and
out
inc
div
push
pop
fildll
fsubrl
sbb
xchg
insl
jns
jmp
ret
lret
or
add
sbb
clc
add
jbe
mov
iret
jns
add
inc
sbb
xchg
mov
scas
ss
and
mov
xor
cmp
dec
std
pop
ss
inc
jmp
pop
mov
cmc
loopne
jbe
inc
jp
mov
movsb
aaa
test
dec
call
push
add
idiv
mov
and
loopne
pop
dec
popf
in
cmp
xchg
fistps
inc
xchg
sbb
inc
icebp
add
inc
pop
mov
das
sbb
adc
mov
and
js
pop
nop
loop
push
mov
popa
es
pop
mov
sahf
cmp
mov
es
push
jnp
rcrl
push
jb
push
mull
lock
loope
push
mov
imul
es
xchg
addr16
fiaddl
arpl
or
stos
data16
ljmp
and
or
xchg
pop
std
jmp
jnp
in
out
mov
sbb
nop
lods
xor
mov
out
aas
adc
jecxz
xchg
cmp
outsl
rol
pusha
and
cmc
pop
mov
push
inc
jle
xor
cmp
xchg
xchg
addr16
jbe
mov
rcrl
cmpl
xlat
fidivrl
xorb
sbb
jmp
xchg
push
bound
aad
daa
inc
mov
outsl
mov
xchg
mov
and
sbb
hlt
out
data16
imul
cltd
sar
sbb
call
aas
jmp
pop
cwtl
sbb
mov
push
push
add
jo
aam
inc
cmp
and
rcl
lcall
adc
cmp
test
lock
mov
mov
shr
pop
shll
pop
mov
pop
sub
fld1
push
stos
js
xor
pop
adc
ss
dec
lds
mov
cld
cmc
negl
mov
out
mov
sti
js
std
addr16
cwtl
je
pop
rcl
out
mov
sub
inc
cmp
and
lods
shrl
xchg
pop
pushf
jno
or
lret
mov
add
cmp
adc
or
inc
xchg
cltd
clc
xchg
test
and
xchg
xchg
fstps
cmp
fstps
pop
fisttpl
push
sub
bound
jmp
cs
mov
out
pop
enter
fsubs
push
sub
xchg
pop
push
push
cmp
jecxz
ret
xchg
lea
leave
lods
add
cld
dec
sub
es
fwait
xchg
jo
and
ja
dec
xchg
jne
dec
test
or
inc
mov
shl
divb
push
subb
mov
sbb
jns
scas
ljmp
mov
mov
outsl
sub
loope
dec
mov
xchg
push
push
and
push
testb
pop
pop
xchg
test
mov
insb
lcall
fsubr
add
loop
enter
stos
adc
iret
ja
and
movsb
xchg
pop
adc
fnstsw
mov
cltd
repz
xorb
scas
pop
xchg
inc
in
and
lods
mov
jo
push
pop
call
test
mov
mov
fwait
push
in
fcomip
ds
mov
and
sub
sub
fstps
jl
arpl
cmpb
xchg
loop
pop
mov
mov
cmp
dec
insb
sbb
mov
adc
in
lds
movsb
int3
mov
push
daa
sub
xchg
icebp
int
or
fstp
test
mov
mov
pusha
jl
rcrb
jle
lods
pop
sbb
movsb
push
jge
jno
fdivrl
addr16
stos
mov
into
rcr
aad
sub
push
inc
adc
jg
mov
jbe
mov
subl
pop
mov
mov
or
bnd
and
ret
sub
lcall
std
into
leave
popf
dec
mov
stos
push
pop
adc
inc
mulb
add
orb
jecxz
cmp
xor
cmpsb
mov
dec
repz
fdivs
test
cmp
xchg
stc
mov
sti
sbb
rorb
mov
ds
adc
adc
xchg
imul
or
in
ss
fwait
cmp
bound
add
rclb
sbb
xor
push
and
push
stc
out
xchg
shlb
out
ljmp
in
loopne
shl
pop
or
ljmp
sub
aaa
shrb
mov
mov
sarl
cmp
in
repnz
punpckldq
adc
sbb
js
movsb
repz
xchg
mov
data16
out
repz
daa
mov
pop
jbe
in
or
xchg
cs
push
push
leave
pop
in
xchg
xchg
pusha
xchg
pop
add
bnd
xor
mov
into
jl
aam
imul
icebp
dec
mov
jb
pop
fnsave
jnp
and
icebp
sbb
out
stc
iret
jns
arpl
and
push
pop
push
mov
in
js
xor
sub
mov
dec
btr
cmp
aas
dec
fstpl
sti
adc
mov
fcoms
inc
jge
js
lds
mov
enter
pop
push
xchg
mov
call
std
xchg
adc
aad
test
roll
out
test
lret
repz
lea
in
es
fwait
mov
jnp
xchg
or
movsl
out
or
sub
cmpsb
pusha
add
sub
inc
adc
ljmp
cmp
jb
mov
xor
mov
dec
pop
mov
cltd
mov
out
push
stc
and
push
inc
fcoml
test
pop
mov
sub
cmp
in
fistps
out
dec
jl
sarl
pop
xor
pop
outsl
je
jnp
les
icebp
repnz
mov
jle
or
mov
mov
push
addr16
out
or
bound
fcmovnb
jmp
mov
mov
movsl
or
sub
test
adc
adc
adc
sahf
fildl
xor
jb
push
adc
je
inc
adc
rcr
rolb
dec
insb
add
xor
inc
lcall
push
sub
fadds
push
adc
faddl
ds
shlb
mov
mov
mov
ffree
iret
addb
icebp
xor
dec
xchg
repz
jb
hlt
mov
pop
add
les
push
cmp
cmp
fs
fs
cmp
jecxz
repz
mov
adc
push
scas
test
jb
aas
shlb
orl
enter
inc
fistps
ffreep
cld
sub
mov
sti
inc
and
xor
mov
xor
pop
jmp
jb
cld
js
lcall
push
mov
loope
aas
push
addr16
xchg
push
imul
pop
inc
xchg
push
insb
repnz
shr
mov
movl
push
add
cmpsb
add
ljmp
test
psrld
jecxz
insl
out
mov
mov
cmpb
aaa
cmc
cmc
cmpsb
shlb
lods
aam
nop
add
push
aaa
test
add
pop
std
bound
xor
scas
rcrb
cld
lods
dec
test
push
and
jl
std
mov
movsl
cmp
adc
cs
push
shrb
stos
jle
dec
leave
lret
mov
or
dec
fstpt
clc
xchg
inc
aas
jno
or
adc
xchg
pop
mov
push
push
test
mov
cs
add
out
xchg
add
les
ds
cmp
out
jnp
lcall
push
jp
test
sbb
xchg
xchg
pop
test
scas
xchg
out
out
jnp
pop
pop
enter
shl
jmp
cmp
cwtl
cmp
enter
jne
es
pushf
xorb
and
or
repnz
mov
ds
jo
adc
and
adc
in
lods
push
mov
insb
das
pop
inc
pop
mov
jmp
bound
inc
or
loopne
les
cmp
icebp
daa
jnp
loop
add
push
stos
hlt
stos
mov
rcr
jmp
adc
ljmp
stos
cwtl
imul
jae
xor
notl
js
shl
fsubl
mov
sti
mov
mov
sub
ret
push
fwait
popa
xor
xor
pop
js
rcrl
loope
add
jmp
fstl
fadd
enter
scas
scas
lcall
xor
inc
inc
inc
lock
cmc
xchg
xchg
sbb
bound
call
mov
dec
das
cmp
mov
or
dec
or
cmp
jno
cli
cld
push
mov
pop
xchg
and
sbb
xorb
jmp
cli
push
insl
popf
and
adc
dec
or
adc
sbb
lcall
movsl
dec
hlt
and
push
fldcw
inc
jmp
sahf
movsb
push
and
add
jecxz
push
lea
lret
push
xor
inc
ljmp
or
sub
push
mov
jb
loop
or
xor
inc
scas
and
pop
jo
push
push
push
in
repz
xor
cld
gs
adc
mov
jge
and
sub
push
xor
push
jno
cmp
ljmp
repz
adc
cmp
and
lods
out
lock
mov
bound
inc
xlat
and
push
arpl
xlat
movsl
or
mov
push
pushf
hlt
lcall
xlat
gs
sub
lahf
mov
or
daa
std
mov
enter
inc
sub
jnp
jo
sahf
add
mov
cltd
daa
insl
fdivr
je
mov
or
insb
in
cwtl
icebp
into
jae
hlt
repnz
push
or
mov
js
xchg
nop
test
pop
mov
jb
mov
notb
add
xor
sbb
jge
outsl
add
ret
inc
das
mov
push
mov
mov
lcall
sub
jae
push
sbbb
pop
sahf
jl
mov
sbbb
into
out
and
sti
mov
imul
jo
pop
inc
adc
and
xchg
and
in
adc
mov
mov
cld
adc
cwtl
add
lods
or
std
scas
cmpsl
add
insl
inc
xchg
cwtl
push
gs
pop
loope
cli
mov
loop
dec
aad
cmp
inc
insl
cmp
lods
mov
mov
ljmp
pop
repnz
mov
movsb
sub
xor
push
insb
ds
push
jle
stc
mov
int3
cmc
lahf
jmp
push
imul
sbb
jg
aam
arpl
test
mov
mov
and
push
inc
push
push
call
push
adc
mov
inc
mov
movsl
adc
mov
mov
in
xor
jnp
hlt
sbb
shl
push
push
pop
add
addr16
adc
loope
jge
adc
mov
sarl
movsb
xchg
and
roll
or
xchg
or
mov
xchg
orl
add
cmp
icebp
stc
inc
hlt
out
outsl
ficompl
pop
pop
push
xchg
cmpl
mov
and
xlat
leave
sub
push
fdivl
xor
lret
aas
sbb
mov
dec
movsb
cmp
mov
mov
jo
fs
sub
lahf
arpl
adc
xchg
jb
sti
int3
and
jmp
mov
and
cltd
std
pop
add
shr
sarl
out
arpl
repz
jle
xlat
mov
andb
lret
xor
mov
mov
pop
jb
std
test
xchg
mov
mov
jg
push
test
push
mov
mov
sbbl
dec
test
push
es
dec
xchg
lods
ss
daa
dec
xchg
pop
jno
fisubrs
mov
cmp
sbb
xchg
mov
sbb
orl
xlat
adc
push
rcl
fldl
aaa
lock
cli
add
inc
mov
pop
fwait
popa
fldl
sub
and
pop
dec
xchg
lods
loop
movsb
adc
lcall
push
sarb
adc
test
cmp
pop
fwait
add
fstps
scas
shll
push
nop
xlat
shrl
mov
cld
stc
test
mov
js
cmc
fwait
mov
fmull
adc
or
inc
insl
pop
push
pop
lcall
cmp
scas
push
dec
mov
or
stos
idivl
int3
cmp
imul
inc
adc
xchg
fidivs
adc
lods
jg
rclb
add
loope
and
insl
or
dec
mov
jbe
std
std
jno
or
pop
push
cmpsl
sub
cmp
shrl
jge
iret
scas
or
and
lea
and
movsl
and
adc
jmp
and
dec
insb
cld
mov
int3
mov
aad
sbb
das
daa
aaa
sbb
andl
in
sarl
hlt
dec
into
and
cltd
inc
jle
pop
mov
add
and
adc
mov
movsl
adc
and
cmpsl
cltd
sub
cmc
cmp
outsl
xchg
clc
pop
and
pop
adc
adc
mov
in
arpl
cmpsl
sbb
jmp
clc
daa
and
test
je
add
lret
or
leave
or
lock
cld
push
scas
lcall
sbb
inc
aaa
xor
lds
sarl
add
loope
cmpsb
and
dec
cltd
ret
out
dec
ljmp
mov
or
aam
dec
movl
out
adc
jne
cmp
push
adc
fdivs
and
cmp
add
jl
push
jo
pop
inc
imul
lcall
xor
fldenv
cmp
imul
ret
test
sub
jle
out
arpl
sbb
ficoms
sub
mov
cmp
inc
outsb
jae
cmpl
mov
rolb
popf
ja
mov
mov
or
dec
clc
fcoms
ljmp
addb
jle
cmp
inc
xor
and
pop
js
addl
popf
leave
arpl
dec
adcl
inc
and
shlb
xor
jle
and
cmp
jmp
mov
shlb
adc
mov
fwait
xchg
jp
mov
mov
cmpsl
mov
mov
out
stos
jo
cmpl
sbbb
mov
std
outsl
sbbl
enter
cmpsl
mov
xchg
xchg
ret
cmpb
jle
mov
pop
aad
fstps
movsb
xor
jo
fldl
xchg
dec
lahf
xchg
gs
adc
shl
in
add
cli
arpl
push
sbb
mov
jl
inc
fdivl
cmp
jno
mov
daa
repnz
mulb
cli
lds
in
or
push
das
ja
fs
add
out
test
and
pop
into
adc
sbb
aam
sbb
jns
or
ficoml
push
mov
daa
jp
inc
out
mov
ret
jle
out
out
dec
fisubs
test
mov
jle
and
aaa
lock
cld
adc
push
jae
dec
mov
stos
scas
clc
ret
cmc
fdivrs
xchg
sahf
push
loope
fisttps
mov
sti
hlt
aad
loop
je
mov
divb
sti
jmp
inc
dec
scas
cmp
stos
inc
call
mov
subb
dec
jns
out
aas
out
jne
loope
xor
add
or
insl
inc
push
xchg
mov
inc
dec
les
data16
loope
fstpl
adc
aaa
pop
mov
scas
or
jns
sub
lret
or
repz
dec
and
cmp
repz
push
repnz
loope
ret
adc
jbe
pop
or
das
pop
lcall
sbb
add
sbb
imul
jecxz
sub
pusha
push
lock
xchg
pushf
imul
ja
nop
fsub
das
push
pop
daa
push
incb
jecxz
adc
mov
push
ljmp
push
ror
cltd
jle
subl
mov
sarb
repz
loope
test
imul
gs
cli
or
ret
jg
adc
inc
push
xlat
inc
or
jne
fdiv
lcall
inc
mov
pop
xor
out
xchg
mov
lock
out
mov
mov
cmp
stos
add
sbb
out
sbb
sub
xor
lret
fnstsw
cwtl
adc
jb
adc
inc
inc
ja
adc
dec
mov
push
test
test
stos
sbb
xchg
fsts
insb
adc
lret
inc
lds
out
ds
jecxz
inc
call
out
in
mov
inc
enter
rcrl
fwait
rcr
adc
mov
xor
push
dec
repnz
enter
enter
cmp
cmpb
adc
dec
or
icebp
mov
push
sbb
xor
adc
inc
inc
std
imul
jae
mov
movl
or
mov
xor
mov
loope
scas
int
daa
addr16
out
inc
cltd
pop
hlt
lea
ljmp
inc
cmp
sbb
andb
mov
mov
mov
push
adc
insb
mov
push
cmp
cmp
shrl
cmp
jno
jmp
sbb
aaa
out
mov
sub
inc
mov
stos
ljmp
ret
fstp
daa
jb
adc
pop
int
cmpsb
int3
mov
ljmp
jecxz
je
and
cld
cld
pop
add
fistps
in
ret
mov
in
loopne
push
mov
mov
dec
inc
addr16
mov
shll
iret
jo
sbb
jno
call
aad
xlat
sar
wbinvd
cs
out
loope
jne
insb
xor
js
push
xor
scas
mov
sbb
out
xchg
dec
or
sarl
lods
jg
nop
or
mov
jge
mov
mov
jge
push
test
jmp
cmpl
cmpsl
mov
scas
adc
lret
mov
or
mov
shlb
xchg
jle
dec
sbb
mov
sahf
cmp
xorb
jl
inc
lret
sahf
shrl
xor
jl
mov
aad
test
mov
inc
inc
xchg
rcrl
mov
mov
lahf
and
pop
shll
fwait
cmc
or
mov
outsb
push
popa
mov
ss
xchg
fs
jae
mov
fdivs
pop
cmp
aaa
xlat
jbe
mov
adc
leave
jp
hlt
out
out
cwtl
aas
test
sbb
lods
cli
insb
nop
iret
mov
sub
sub
inc
loopne
and
mov
jl
fadds
fdivs
jne
mov
jle
inc
mov
sbb
das
andl
pushl
dec
out
fistps
jg
lret
and
jmp
jl
lock
fidivrl
jg
mov
outsl
push
or
ret
xor
add
and
jne
xlat
out
iret
loop
mov
push
dec
mov
xor
enter
test
cwtl
xchg
in
fdivs
push
int
sti
in
xor
int
aad
fcomi
imul
mov
push
jl
ror
pop
cmpsl
call
jecxz
push
aam
lcall
jb
loope
pushl
or
sbb
lret
sbb
insl
pop
andb
jle
adc
call
lock
jbe
idivl
stos
inc
dec
mov
mov
je
sbb
cmp
movsb
lock
jmp
mov
aas
sbb
xor
jbe
es
stos
data16
dec
aas
xor
scas
xor
in
arpl
adc
dec
mov
outsl
test
fcmovb
and
popa
cltd
imul
jmp
in
pop
loop
imul
loope
mov
imul
jmp
xor
lret
aam
popa
movsb
xchg
pusha
pop
inc
into
mov
mov
pop
int
fwait
pop
aam
test
dec
mov
inc
sub
adc
inc
mov
fwait
and
dec
jno
dec
push
xchg
daa
dec
push
pop
mov
fcomps
and
dec
cld
push
test
sbb
out
and
sbb
push
lods
enter
movsl
pop
mov
outsb
ja
mov
push
pop
test
sbb
lds
and
mov
cmp
mov
mov
aas
popl
fsubs
cmpsb
imul
xor
push
adc
inc
in
pop
add
test
jne
lret
xchg
shlb
mov
loopne
aaa
adc
pop
outsb
xor
mov
fs
sbb
push
or
pop
shll
sub
mov
int
inc
loopne
cmp
add
outsl
movsl
stos
bound
jbe
jmp
cmp
ja
int3
adc
xchg
add
inc
push
inc
xor
movsb
dec
cld
aaa
mov
inc
push
xorb
out
mov
leave
ficompl
fmuls
xlat
dec
push
jl
testl
scas
cli
jmp
dec
jge
cmc
into
xor
int3
aad
mov
js
inc
mov
xchg
popf
cmp
pop
xor
sub
xlat
jnp
arpl
in
out
cs
lea
jp
notl
and
push
hlt
test
jecxz
test
stos
cmpb
sub
mov
leave
sbb
test
lahf
dec
xor
daa
imul
jo
pop
pop
pop
std
out
jno
les
icebp
rorb
and
mov
pushf
cmp
dec
jo
scas
ret
ret
repz
rolb
addr16
xchg
sarb
cmp
les
fs
sbb
inc
and
lret
rep
in
in
sub
mov
xchg
pop
out
xchg
cmp
jae
xor
add
movsl
loop
js
rol
cli
dec
ss
popa
push
sub
faddp
ljmp
bound
push
push
mov
cmp
lahf
sti
decl
jbe
ja
mov
das
xchg
call
jo
lds
jnp
test
push
mov
push
pop
dec
inc
fildl
jge
jl
or
ret
inc
add
out
cld
dec
fdivs
adc
test
rep
sbb
sbb
jg
xchg
cli
lds
xor
jns
jp
pop
test
mov
mov
fstpl
fcoml
cmp
xchg
js
jge
xchg
xchg
mov
jge
mov
pop
inc
movups
test
lods
gs
negb
int3
or
mov
mov
xchg
out
shrl
dec
xor
mov
mov
dec
scas
xchg
mov
xorl
aad
in
push
movsb
repnz
jb
dec
or
pop
sub
dec
xchg
xchg
sbb
int3
shll
sub
hlt
pop
movsl
add
jne
test
test
mov
lret
pop
fucomi
sbb
or
jne
mov
xchg
mov
out
jl
int
pop
push
in
mov
jbe
in
pop
xor
pop
ret
sub
dec
adc
pusha
je
add
ret
test
push
daa
inc
jno
fwait
mov
lret
push
add
xchg
aam
insb
add
ss
mov
aaa
pop
and
xor
add
daa
mov
pop
mov
inc
outsl
sbb
sub
hlt
rol
jno
pusha
mov
jmp
or
out
jnp
cmovge
sbb
dec
xchg
les
stc
mov
push
mov
jne
imul
mov
dec
add
movsb
loope
or
ret
dec
mov
pop
test
jae
js
movsl
add
repnz
and
push
xor
js
mov
mov
jo
sub
inc
loopne
jnp
dec
clc
cwtl
add
sbb
fwait
adc
mov
adcb
icebp
icebp
pop
lods
popf
dec
fistps
filds
arpl
pop
pop
dec
pop
sahf
or
lock
xchg
outsb
std
mov
add
dec
aad
adc
popf
pusha
subl
leave
or
ja
stc
mov
jle
insb
mov
idiv
popa
add
mov
je
addr16
imul
mov
dec
jns
mov
mov
orl
lds
add
add
sub
and
mov
xor
fisttpl
pushf
cld
cmc
lods
mov
and
pop
jg
add
lcall
aas
test
subb
shll
fidivrs
fadds
in
jecxz
andb
mov
shll
popf
push
test
cs
mov
pop
xor
out
out
xor
sub
fwait
enter
gs
adc
xchg
invd
popf
out
mov
bound
lahf
lods
mov
add
jns
mov
mov
jp
pop
mov
int
andl
jecxz
fcomps
xchg
fcom
mov
sbb
adc
cmpsb
jno
pop
lods
je
xchg
add
or
pop
rcl
add
xchg
inc
pop
fsubs
mov
arpl
dec
rcl
mov
stos
cmp
push
dec
xchg
pushf
jno
sub
and
jl
jns
jo
pop
or
push
dec
data16
push
cld
adc
pop
mov
les
inc
loopne
test
addr16
pop
jmp
xor
xor
stos
push
jns
cmp
cltd
adc
andl
out
addr16
or
mov
xchg
push
and
push
sbb
xchg
rcrb
xor
dec
xor
or
pop
cmp
or
mov
mov
int3
or
test
cmp
xor
xor
xchg
std
mov
sub
data16
je
xchg
fstpl
push
dec
fstps
and
push
pop
mov
jge
movsl
out
xchg
scas
mov
jp
enter
adc
mov
dec
add
xor
mov
mov
cmp
aam
sbb
dec
sti
dec
out
test
xor
ret
inc
cs
cmp
scas
test
and
in
and
rolb
pushf
or
in
add
pop
lahf
add
imul
repnz
inc
movsl
push
xchg
cmp
mov
cmp
cmpsl
adcl
je
fistl
movsb
and
mov
push
jg
mov
and
lods
dec
adc
adc
and
adc
jne
sbb
push
sub
movsl
pop
movsl
lock
stos
lret
push
add
adc
push
adc
and
cltd
aam
ljmp
sbb
test
push
adc
pop
mov
adc
sarb
mov
imul
fisttpll
mov
mov
inc
jmp
aas
jmp
cmpsl
mov
outsl
je
xor
inc
jmpw
roll
dec
test
jnp
jns
test
xor
dec
mov
jno
js
das
dec
pop
and
imul
clc
add
push
dec
inc
or
pushf
dec
inc
stos
stos
pop
clc
ds
ljmp
cld
push
mov
cmpsl
mov
lods
stos
sbb
xor
mov
adc
cltd
les
mov
out
add
roll
jl
js
dec
push
sbb
je
fbld
cmpsb
and
inc
sub
hlt
dec
lret
xchg
shll
and
xchg
and
xor
js
adc
outsb
cmpsl
push
xchg
add
mov
mov
sbb
das
iret
mov
lods
leave
cld
jo
lods
je
testl
pusha
icebp
test
jg
clc
inc
shr
loop
mov
movsl
push
std
mov
push
or
cmp
jp
sahf
out
fadds
outsb
dec
adc
scas
loopne
push
aad
cwtl
loope
or
data16
scas
adc
shrl
and
cmc
mov
lcall
jmp
scas
add
pusha
sbb
out
jo
pop
lcall
loop
ja
popa
and
dec
arpl
fstl
in
stos
sarb
les
cmp
cld
notb
cmp
lret
pop
push
fmulp
mov
lcall
adc
jge
aam
push
jno
inc
out
cltd
imul
rcrl
push
aas
fsubp
nop
push
or
mov
push
pop
and
es
jmp
jge
sarb
xor
sbb
ljmp
jae
pop
jo
lcall
or
and
shlb
and
fcmove
sbb
push
pop
and
sub
aas
addr16
add
pop
ficompl
adc
xor
out
pop
pop
stos
add
jb
ret
psubd
push
ja
mov
insb
fisttpll
sub
fcompl
adc
pusha
js
outsb
loope
popf
mov
inc
cmp
popa
das
xchg
xor
pop
shll
push
and
push
mov
aas
mov
imul
mov
stc
pop
dec
pop
inc
fs
sbb
cmpsb
push
call
sbb
jmp
adcb
xchg
stos
orl
dec
inc
push
mov
and
push
or
out
cltd
nop
out
jl
cli
dec
sbb
leave
xor
mov
es
mov
movb
add
dec
and
lcall
jb
xchg
mov
sub
mov
sbb
inc
sarb
inc
jae
inc
dec
dec
test
shll
orl
or
mov
pop
loopne
or
xchg
rcrl
mov
adc
mov
jg
insl
shlb
out
pop
push
pop
add
insl
xchg
jne
mov
arpl
pop
iret
cmp
shlb
notb
and
mov
or
mov
mov
in
mov
imul
inc
inc
xor
push
pushf
daa
lea
dec
cmp
jge
xor
or
fwait
jmp
cmp
or
jbe
inc
pop
jo
or
fildll
and
into
jns
or
inc
mov
mov
sbb
or
inc
ds
repnz
into
push
aaa
jae
cli
dec
int3
fdivrs
mov
add
jns
cmpsl
pop
jo
je
dec
xchg
push
pop
lea
ficoml
jbe
mov
subl
movsl
xchg
add
jge
out
pusha
dec
fwait
xor
pop
cmpsb
xor
push
or
fidivrl
aaa
sbb
mov
mov
jbe,pn
mov
jo
in
sbb
leave
sbb
imul
mov
cmp
je
test
outsl
movsl
and
sbb
and
loop
sub
xchg
stos
or
sbb
jp
imul
mov
sub
in
xor
fnstcw
rol
pop
loopne
cltd
cmp
insl
aam
jp
lret
inc
xchg
xchg
pop
out
mov
or
out
imul
loopne
lea
mov
mov
mov
add
mov
imul
and
pop
jns
and
xchg
adcb
icebp
sarl
negb
mov
and
adcb
and
cs
mov
mov
cmp
nop
and
adc
cmp
pop
xor
loop
cmc
pop
inc
mov
scas
mov
sbb
cmp
add
stc
jge
xor
sub
adc
pop
xchg
push
sub
pop
imul
mov
pusha
fistpll
push
add
mov
sbb
inc
test
cmpsb
jae
stc
xchg
clc
jecxz
test
or
push
and
dec
popa
sbbl
sbbl
xchg
pop
testb
fiadds
aaa
mov
pop
insb
adc
mov
sbbb
xor
fst
dec
push
mov
insl
repz
pop
pop
inc
lahf
popa
nop
repz
adc
sbb
jno
mov
sbb
addr16
jmp
clc
inc
ret
fsubrs
xchg
dec
mov
and
nop
iret
aas
int3
xlat
ja
scas
push
lods
jl
add
mul
fldlg2
mov
insb
inc
movaps
or
jb
shl
cmp
pushf
lds
js
mov
sub
jae
dec
jbe
jp
mov
mov
mov
jae
jle
jmp
pop
aaa
stos
pushf
cmp
xor
fwait
add
out
mov
mov
je
shlb
out
or
pop
loop
mov
adc
rcrl
cmpsb
nop
dec
icebp
loop
xlat
sub
mov
js
sub
outsl
and
mov
and
out
mov
mov
enter
jno
fldt
ja
in
cmpb
leave
enter
loop
in
icebp
push
or
rclb
inc
inc
out
cltd
jno
add
mov
pop
mov
jo
mov
jg
lods
incb
test
js
push
leave
fwait
pop
push
inc
js
mov
mov
mov
scas
push
push
out
sub
out
adc
jo
cs
mov
push
add
and
push
add
fsubrl
test
repz
outsb
xchg
fists
xchg
dec
mov
cmp
rcl
jmp
loop
imul
arpl
int
std
and
mov
aas
sbb
push
aas
pop
xchg
mov
subl
dec
pop
sub
imul
inc
inc
scas
int
je
cltd
inc
sub
fs
xchg
orb
pop
sbb
add
adc
sub
xchg
cmpsl
jmp
cld
mov
jle
roll
xor
sub
out
bnd
xor
sahf
lret
addr16
scas
mov
idivl
xchg
sbb
cli
lret
fidivrl
mov
mov
movsl
fidivrl
sbb
jg
jnp
loope
sahf
jns
sarl
jl
scas
outsb
and
ret
push
scas
ja
adc
ret
push
xchg
int
dec
movsb
inc
clc
daa
movsl
fadds
add
or
dec
sub
cld
cmp
int3
pop
iret
out
jne
dec
mov
mov
dec
lret
add
repz
daa
push
fisttpl
cmp
loopne
adc
repz
xchg
add
push
sub
pop
arpl
sub
movsl
mov
sub
xchg
push
les
lods
add
int3
les
cwtl
jle
ja
cmp
pop
pop
loop
nop
jo
cmp
mov
fsub
mov
repz
data16
jmp
jb
sbb
jno
pop
ja
dec
cs
rcrb
pop
dec
push
mov
arpl
test
aad
addr16
inc
push
orl
jo
movsl
gs
aad
repz
insb
test
or
push
ljmp
fidivrs
movl
add
push
in
outsb
xor
or
aam
sub
mov
push
repnz
mov
pop
outsl
inc
xchg
lahf
shll
ret
xor
xchg
push
imul
sbb
cs
shll
sbb
flds
pop
int
mov
cmp
ret
adc
daa
fnstsw
ds
scas
ljmp
cmp
dec
fistpll
outsl
insl
insb
adc
mov
icebp
inc
dec
sahf
call
pop
test
lods
sahf
xchg
subb
popa
sbb
enter
dec
sbb
pop
je
push
xchg
bound
and
push
push
dec
jge
insb
push
iret
jmp
xchg
repnz
pop
int
inc
dec
dec
pop
xchg
inc
mov
xor
shrb
inc
or
in
out
ret
leave
stc
mov
or
mov
fwait
mov
xor
and
jle
xchg
cli
push
loopne
clc
push
inc
adc
pop
icebp
insb
xchg
and
adc
divb
push
mov
or
add
and
repnz
cwtl
popf
jle
stos
cmp
stc
jle
sub
mov
sub
repnz
aam
in
cltd
rolb
rcll
sbb
sbb
out
mov
nop
pop
insl
shlb
mov
aas
nop
cli
xchg
lea
mov
xor
cmp
addr16
cmc
mov
aas
enter
pop
cli
jne
mov
shll
sbb
mov
std
add
stc
adc
mov
cmp
sub
xor
push
sarl
movsl
and
push
sarl
sub
add
push
xlat
jo
enter
jg
sub
repnz
sbb
sub
mov
pop
cmp
jae
sbbl
sub
sbb
pop
jb
ret
mov
mov
mov
xlat
cmp
dec
jmp
mov
inc
hlt
roll
dec
add
aaa
insb
in
pop
inc
mov
xchg
cmpsl
add
stos
inc
sbb
xor
pushf
popa
push
jmp
xchg
stos
das
inc
das
xchg
gs
push
clc
xor
test
and
pop
stos
jno
inc
aam
push
push
push
jb
adc
test
push
cmp
js
loopne
popa
ja
sbb
je
push
mov
lahf
xlat
sub
mov
sahf
jl
das
mov
xchg
inc
pop
mov
data16
mov
inc
insb
and
jl
xchg
pop
aam
jmp
sub
lcall
je
cwtl
pop
xor
cmpb
fstpt
jle
fmul
pop
xchg
mov
push
rcl
les
pop
lea
inc
mov
sbb
divl
cmp
xor
dec
xor
shr
jae
lahf
cltd
sub
rclb
jmp
mov
mov
movhps
jle
add
test
lret
sbb
pop
fldenv
mov
outsb
sti
pop
dec
dec
jbe
addr16
mov
xor
cmpsb
cli
pop
lahf
loope
mov
test
mov
or
pop
push
sbb
mov
ja
mov
mov
push
jmp
int3
mov
mov
cmp
ss
loop
fcmovnbe
pop
or
ljmp
jb
mov
mov
iret
or
and
mov
mov
cmp
adc
jne
lods
popa
mov
push
xchg
xor
or
push
aaa
aad
add
ljmp
fisubl
inc
lods
aaa
xor
mov
dec
iret
xor
fwait
aam
icebp
jnp
push
lret
xor
jecxz
pop
mov
xor
adc
push
fcompl
adc
pop
je
nop
cmc
movsb
push
sub
xor
xor
mov
mov
jecxz
out
imul
test
fisttps
lret
push
popa
lods
out
std
negl
push
push
popf
cmpsl
lds
jns
sub
xchg
jne
push
in
and
add
test
pop
aam
mov
mov
in
sub
mov
mov
lcall
lcall
arpl
divl
or
inc
mov
popa
nop
pop
xor
jmp
jnp
aas
mov
dec
or
pop
sti
fmuls
mov
loopne
lahf
or
xchg
fucomp
clc
insb
enter
movsb
mov
les
outsb
stc
das
lret
cmp
push
loop
dec
call
and
mov
add
xchg
pop
xchg
cwtl
inc
sub
inc
shrb
lods
les
popa
adc
jb
jb
pop
test
shll
insl
fistpl
jnp
add
mov
mov
cmp
xlat
cmp
xor
jb
fdivr
cs
out
or
push
push
mov
pop
mov
repnz
push
inc
dec
mov
out
clc
and
mov
mov
lock
cwtl
mov
sub
pop
xchg
jecxz
dec
jg
lret
push
jg
scas
loope
out
cltd
mov
das
rolb
mov
imul
mov
adc
dec
in
xlat
pop
mulb
cmpl
pop
rcl
add
stos
pop
cmp
add
xor
pop
out
std
hlt
add
test
mov
lret
cmp
cltd
xchg
out
pop
roll
stc
out
jecxz,pn
mov
push
xor
dec
add
inc
ret
dec
cs
js
in
inc
xchg
cwtl
movq
dec
add
test
rol
test
xlat
jo
mov
mov
inc
jae
fisubrl
mov
xchg
bound
mov
push
cmpsl
pop
jg
xchg
add
dec
cmpsb
cmp
dec
repz
aas
mov
inc
leave
loop
out
mov
call
xor
pop
inc
adc
fdivrl
mov
test
dec
insb
or
es
pop
mov
test
adc
insl
test
dec
test
test
cmp
adc
in
dec
rclb
xor
outsb
in
test
push
push
pusha
pop
sub
pop
add
aaa
movsb
sub
sahf
in
mov
movsl
xchg
and
cmp
inc
push
xchg
ret
rorb
pop
insl
dec
jb
sub
mov
out
adc
scas
ljmp
sbb
mov
adc
lcall
mov
add
shlb
jns
pop
leave
or
jecxz
sbb
jo
rorb
xor
xchg
outsl
sub
jl
loop
push
fstl
cmp
and
fstl
inc
xchg
test
lds
inc
ja
decl
adc
stos
push
sbb
cli
or
or
adc
out
mov
ljmp
lea
lea
sbb
pop
nop
idivl
ja
inc
leave
int
scas
outsb
add
push
and
xor
dec
sarl
rcll
jno
test
cltd
or
jbe
lcall
mov
cld
xor
add
hlt
in
xor
adc
add
outsl
aas
int3
je
sar
mov
pop
ss
mov
popf
cmp
push
repz
mov
rcl
sub
push
dec
repnz
jo
or
pop
sbb
pop
sub
ds
inc
xor
inc
push
aas
inc
jg
pop
push
insl
push
rcrl
xor
cmp
cmpb
xchg
dec
in
cmp
adc
movsl
je
lcall
pop
data16
jge
testl
out
out
mov
mov
xor
das
enter
js
pop
adc
and
ljmp
xchg
lret
ss
xchg
cltd
dec
js
mov
outsl
sub
mov
dec
fsts
mov
lret
lahf
out
sbb
lea
sti
repz
outsl
mov
jnp
pushf
lret
pushf
mov
in
movsb
sub
cwtl
ret
jmp
test
aad
push
call
push
mov
adc
ljmp
push
sbb
push
pop
enter
insl
scas
pop
enter
faddp
adc
test
ja
pop
shlb
inc
mov
mov
jmp
pop
aam
mov
popf
adcb
shrl
out
cld
pop
xor
xlat
in
les
pop
test
imul
imul
pop
push
mov
lods
push
es
dec
sub
enter
rolb
pop
jmp
and
push
rcl
lahf
and
push
mov
pop
orb
push
jb
mov
in
lods
jo
imul
pop
mov
jge
mov
sub
xor
jl
call
icebp
lods
jecxz
cmp
outsb
or
stos
movsb
lahf
xchg
scas
test
pop
cmp
add
sub
fdivrs
or
movsl
imul
aam
pop
jmp
mov
jnp
xor
jbe
int3
aam
insb
stos
cli
xchg
cmpsl
mov
fs
xchg
lret
fsubl
and
inc
pop
test
jo
xor
rcll
jle
je,pn
xor
push
mov
jmp
or
std
fs
or
mov
addr16
cmpsl
fnstenv
mov
loope
test
ss
jnp
stos
in
jo
test
mov
mov
fimull
enter
in
or
popa
dec
shlb
sub
neg
xor
inc
insb
cltd
dec
adc
pop
shl
mov
fsubrl
adc
sub
pop
push
jbe
sbb
mov
mov
mov
push
sbb
adc
ret
xor
inc
and
or
push
sbbb
push
mov
add
push
iret
rorb
xor
mov
adc
cs
xchg
adc
adc
movsb
das
mov
loopne
addr16
inc
les
and
fxch
stc
insb
mov
pushf
fucomi
and
cmpsb
jg
inc
xchg
std
cwtl
sbb
aas
sbb
out
or
mov
xchg
popa
xor
push
push
test
rolb
add
ljmp
and
sbb
cmpsl
andb
lea
xor
pop
dec
or
lret
xchg
xor
pop
jge
adc
shrb
hlt
push
pop
mov
sbb
push
and
jae
stc
jno
or
arpl
insl
pop
adc
add
jnp
or
and
repnz
imul
inc
mov
test
and
jge
fistpll
xor
scas
sub
and
fistpl
cmp
sub
sbb
imul
jo
test
xor
adc
mov
mov
xor
adc
mov
jmp
adc
mov
mov
repnz
jmp
das
mov
outsl
int3
and
negb
sbb
xlat
enter
xchg
cmp
adcl
insl
call
adc
cmp
push
dec
mov
push
movsb
gs
jp
icebp
dec
adc
sub
jbe
movsb
inc
cmp
add
subl
add
sub
xchg
fimuls
testl
jg
mov
dec
dec
inc
cld
leave
shlb
nop
jmp
shrl
lods
mov
jnp
jne
xorb
imul
jb
in
cmc
mov
or
pop
int
or
xor
mov
fstl
jl
imul
cmp
xor
sub
and
mov
pop
cmpsb
push
push
and
lea
insl
les
movsb
lret
jge
sub
leave
or
push
int3
cld
lods
fisubrs
xchg
push
rcll
fwait
xchg
cmp
push
pop
sahf
mov
clc
jnp
in
pop
and
cmp
pop
mov
cmp
sub
call
icebp
sbb
ret
fs
mov
fldcw
imul
or
nop
jmp
sub
ret
mov
out
push
stc
test
pushl
mov
les
or
jle
push
xchg
cmp
inc
push
push
jg
das
adc
les
in
jb
leave
ret
adc
mov
sbb
out
dec
es
addl
test
shr
adc
iret
pop
push
fs
jl
shlb
sarl
adc
arpl
adc
or
cmpsb
bnd
aaa
push
mov
mov
rorb
data16
scas
mov
ljmp
ds
movb
pop
xchg
cmp
sub
fidivrl
popf
ret
inc
pop
sub
xchg
push
cmc
and
cli
cmc
dec
mov
fnclex
jle
sub
ret
stc
test
outsl
cmp
mov
ja
test
xchg
and
std
mov
out
add
mov
pusha
shl
push
xor
sub
mov
out
ja
mov
cmp
mov
out
pop
dec
lcall
movsb
mov
sbb
mov
lds
mov
mulb
sbb
push
fildl
xor
pop
cs
cmpsb
stos
std
push
add
jmp
cs
push
mov
lahf
mov
data16
mov
sbb
subb
in
testb
jb
mov
push
cmp
xor
dec
mov
jns
pop
stc
movl
push
inc
push
leave
and
mov
mov
pop
xor
fwait
mov
jg
mov
jl
jmp
rcrb
xchg
loopne
dec
pop
mov
imul
jecxz
outsl
out
mov
aas
lahf
jmp
or
jl
and
or
outsb
xchg
es
popf
jb
xchg
movsb
jl
cs
pop
orb
incl
add
lea
ret
add
xor
push
adc
or
jbe
test
movb
cmp
scas
test
sub
fs
ret
sbb
dec
ds
insb
ljmp
jo
mov
inc
jo
dec
inc
inc
adc
mov
ret
mov
lea
cmp
popf
cmc
inc
and
pushf
mov
cmp
xchg
xchg
out
mul
pusha
cli
test
fisttps
stos
sub
lret
mov
cmpsb
push
jge
jge
xor
std
in
ret
mov
jns
mov
in
jae
dec
rorl
add
outsl
mov
fwait
int
push
call
scas
andb
jecxz
insl
sub
imul
call
jbe
push
or
cmp
insb
or
call
inc
mov
xor
loopne
rclb
push
out
scas
or
mov
dec
lock
sbb
mov
push
dec
push
dec
adc
pusha
xchg
aam
mov
int3
in
xor
pop
pop
sbb
int3
popa
jno
scas
push
mov
mov
jl
push
mov
push
inc
repnz
sub
jmp
outsl
sub
xchg
sub
sub
pusha
inc
and
or
inc
std
inc
lret
cmpsb
pop
popa
push
testl
sub
mov
or
ret
mov
fldl
in
cld
es
adc
lock
xor
adc
or
hlt
push
pop
xchg
imul
sbb
inc
jle
push
pop
stc
ret
jo
fnstcw
inc
pop
shlb
es
nop
outsb
hlt
lods
fs
mov
bound
fs
cli
push
mov
adc
out
mov
loope
es
and
daa
aam
push
xor
dec
mov
pop
sub
addr16
push
mov
test
jbe
std
scas
pop
mov
cmc
popf
loop
jb
push
int
stc
fadd
call
popf
and
repz
xor
mov
popf
sahf
push
dec
loope
mov
push
push
xchg
mov
nop
fiadds
inc
and
dec
sub
mov
stc
pop
cli
jb
mov
pop
or
pop
adc
out
xchg
dec
orb
outsb
icebp
add
jl
loope
arpl
inc
and
lcall
arpl
dec
pop
add
shl
jbe
insb
aad
xor
cmpsb
addl
dec
test
repnz
rclb
xchg
mov
test
lods
mov
push
jns
mov
mov
outsb
ja
or
sub
mov
pop
xor
pop
js
xor
mov
push
jo
fstpl
adc
jg
out
sbb
loop
cmp
cmpsb
adc
ret
call
je
daa
lret
sbb
cwtl
mov
and
xchg
out
jb
sarl
mov
std
or
movsl
sbb
inc
fmuls
lahf
bound
and
rclb
iret
adc
shll
jge
or
jle
push
punpckhdq
sub
fcmove
int3
xchg
cmpsl
flds
popf
bound
bound
nop
ficompl
push
bound
daa
and
adc
add
movsl
daa
jmp
or
fldcw
xor
xchg
divl
aad
hlt
imul
mov
add
sub
xchg
xchg
hlt
fisttps
xchg
pop
adc
xchg
loopne
dec
fldcw
outsb
cmp
add
inc
jno
arpl
or
test
fs
fcompl
aam
lahf
in
mov
push
test
mov
gs
xchg
xchg
mov
add
mov
cmp
mov
mov
popa
lret
movsl
xchg
dec
dec
ret
or
xor
imul
adc
movsb
js
loop
xchg
outsb
mov
int
mov
pushf
xlat
addr16
mov
sti
loop
or
jo
xor
ret
inc
fs
outsl
iret
in
stos
mov
jbe
xchg
mov
push
adc
test
xor
mov
pop
and
mov
cs
inc
rcll
into
xchg
leave
adc
pop
cmp
ss
inc
leave
adc
popf
xchg
pop
aaa
or
sbb
int3
cli
fidivrs
jbe
push
nop
cmp
addb
inc
enter
les
adc
repnz
mov
xchg
sbb
jge,pt
cmp
inc
xchg
jle
xchg
or
add
dec
pop
lcall
cmp
jl
xorb
push
fs
std
loopne
dec
incl
and
mov
das
lods
mov
dec
add
cmc
cmp
in
push
out
test
sbb
insb
ret
mov
adc
xchg
lock
jge
arpl
pop
scas
xchg
mov
lret
sub
and
cmp
andl
pop
leave
ds
push
lret
jo
adc
push
jecxz
jg
cld
dec
or
clc
push
movsl
daa
jp
pop
fsub
fwait
rorb
outsl
fildl
or
jno
push
aad
cmp
pop
cmpb
mov
lock
shrl
push
inc
cmp
or
iret
cmp
addb
push
dec
jp
test
push
pop
mov
fucomp
ret
fmuls
enter
and
movsb
test
cwtl
and
mov
mov
sbb
into
or
inc
inc
xlat
dec
or
fs
jno
mov
pop
das
clc
jo
into
mov
outsl
out
daa
addr16
cmpsl
out
clc
or
pop
mov
ret
lods
gs
sbb
cmp
adc
lret
inc
dec
pop
mov
or
xchg
hlt
out
add
repz
push
inc
cmp
mov
repnz
inc
adcl
push
enter
jp
add
inc
adc
adc
pop
inc
icebp
stos
popl
rcl
cmpsb
jnp
fidivs
leave
hlt
lahf
lods
imul
add
cs
adc
neg
test
jns
shll
cmp
mov
xor
mov
pop
xchg
sub
mov
cmpb
cs
out
mov
test
jno
push
jg
ljmp
xchg
bound
push
push
or
in
mov
movsb
pop
aaa
aas
loopne
mov
push
mov
inc
adc
mov
aam
sub
and
push
repnz
dec
in
addr16
push
fcomi
add
sub
inc
jg
or
outsl
in
fisubs
adc
push
pop
fwait
aaa
push
rol
xor
jbe
jno
jecxz
int
in
add
mov
pop
push
jbe
fdivrs
inc
jo
sbb
loope
xor
test
cmp
pop
fisttpll
fwait
mulps
adc
lahf
imul
scas
sub
les
push
xlat
mov
leave
add
dec
lods
mov
mov
sub
js
imul
xchg
sbb
xor
cmpsl
sysret
stc
je
cld
inc
xchg
inc
fs
ja
mov
inc
fmul
add
in
icebp
sbb
idivl
cmp
hlt
loopne
sbb
fsubs
loopne
cld
jae
pop
rol
lods
insl
push
clc
mov
leave
hlt
out
push
xchg
or
jb
enter
cltd
enter
xchg
sub
out
movsl
jmp
push
movsb
sti
icebp
push
push
arpl
push
es
sub
clc
adc
das
add
xlat
dec
xlat
mov
in
cld
int
fsubrl
sbb
faddl
xchg
fmul
fsubl
lods
in
call
mov
adc
lods
or
dec
aam
int3
or
jmp
sbb
fnstsw
adc
dec
mov
in
dec
cmp
xchg
int
test
je
das
sbb
nop
shrl
and
pushl
jae
push
mov
push
mov
jmp
sub
stos
fadd
rcll
push
jl
add
mov
ss
inc
push
rcr
mov
addr16
mov
or
addr16
xorb
mov
pop
in
sbb
fldcw
push
imul
jecxz
push
dec
or
ret
cmp
stos
xchg
scas
xor
sbb
adc
mov
rol
data16
push
ja
movsl
cmp
mov
mov
filds
or
sbb
jbe
pop
adc
xchg
jg
add
mov
call
sbb
adc
subb
sub
aas
adc
lahf
sbb
adc
into
clc
sub
int
mov
jp
negl
ds
in
dec
and
cwtl
sbbl
js
jge
movl
xchg
fs
pop
repz
fnstsw
pop
lods
xchg
and
push
jge
add
and
fisttpll
icebp
arpl
pop
sub
stc
scas
outsb
lods
mov
jmp
in
cltd
jmp
sti
imull
add
dec
jp
sub
out
in
cmp
mov
in
sahf
outsb
cltd
dec
clc
jns
push
ss
push
in
add
jo
sahf
xor
push
jp
xlat
sbb
idivl
data16
in
dec
jg
jmp
or
adc
aas
mov
mov
notb
sbb
adc
sbb
sub
out
xor
stc
and
pop
or
enter
aam
fs
pop
es
iret
iret
and
or
daa
jecxz
stos
call
sbb
leave
dec
divb
scas
jl
or
jno
cmc
enter
lds
icebp
aad
or
cld
jle
es
sub
mov
movsb
xor
xor
mov
fdivrl
mov
inc
xchg
xlat
jns
inc
jg
add
int
or
pop
xchg
fwait
push
cli
pushf
lods
mov
adc
ds
in
mov
cmc
fs
jnp
inc
shlb
sbb
fstl
mov
sarl
inc
mov
push
mov
push
jae
aaa
dec
and
dec
dec
es
mov
clc
or
aas
jmp
dec
or
loop
or
push
cli
in
cmp
or
push
push
and
xchg
insb
gs
dec
fidivrl
outsb
sub
scas
test
mov
mov
mov
pop
call
adc
test
xor
xor
inc
lret
repnz
dec
mov
rcll
push
push
fs
in
cmp
out
mov
push
cmp
sbb
loop
sub
add
enter
add
xor
inc
mov
cltd
popa
push
iret
add
sub
out
loope
lcall
pop
sbb
inc
lcall
or
bnd
inc
mov
pop
cld
push
sub
in
sbb
add
mov
add
rcrb
mov
test
fisubs
stc
repnz
lods
js
push
sub
xchg
cmp
shll
bound
sbb
jbe
aad
xchg
scas
stos
jnp
test
push
leave
pop
sarb
out
xlat
mov
loopne
xchg
jb
xchg
mov
jecxz
lret
or
inc
gs
mov
cmpsl
jae
into
scas
add
dec
in
or
dec
cmp
test
sbb
cli
jb
mov
add
inc
repz
xor
inc
lods
out
add
dec
icebp
test
sbb
push
xor
lret
stos
inc
inc
adc
or
jae
inc
adc
fsubl
stos
xchg
pop
push
jecxz
orl
adc
inc
xlat
imul
fcomps
cmpsl
stos
orb
addl
jb
jge
dec
or
push
mov
dec
pop
cwtl
and
mov
sahf
addb
mov
mov
mov
cwtl
popf
fldz
fistpll
pop
mov
mov
jl
ret
nop
lods
in
xchg
push
fistl
scas
dec
addr16
and
jbe
scas
cltd
jae
and
lcall
and
movsb
lea
and
mov
mov
or
sti
test
imull
ret
push
sub
ss
cwtl
jmp
in
fstp
pop
inc
mov
mov
roll
repz
and
jle
jno
mov
and
push
test
imul
adc
stos
xchg
xor
push
mov
pop
adc
pop
xor
cmpsl
fisttpl
ret
sahf
aad
xor
jecxz
pop
cmp
pop
or
xor
jg
out
xchg
ja
mov
xadd
add
cmp
das
push
decl
ss
lret
out
sub
hlt
loopne
dec
mov
mov
cmp
cmc
or
xchg
cmp
xlat
adc
fs
mov
ljmp
push
jno
aad
pop
ds
add
jo
arpl
addr16
cld
jecxz
mov
sub
int3
rcrl
inc
jg
mov
jg
int
xchg
push
cmc
mov
push
stos
incb
scas
mov
pop
or
jne
popa
cltd
and
jmp
xchg
in
std
rclb
movsb
push
ljmp
ja
pop
pop
jne
arpl
out
subl
mov
hlt
mov
xchg
clc
jmp
sbb
and
int
inc
outsl
ljmp
loop
and
jbe
clc
sbb
add
cld
int3
mov
adc
jecxz
mov
xlat
aad
or
insl
push
sub
lret
inc
je
mov
add
nop
subl
insl
jno,pn
lea
mov
lock
inc
inc
fstps
ja
lds
xchg
and
push
cs
adcb
ret
sub
cli
js
repnz
lds
jg
xor
mov
imul
pop
xor
dec
mov
inc
std
frstor
fwait
lea
and
dec
into
sbb
and
ljmp
or
fucomi
mov
mov
pop
push
in
cmpsl
xchg
push
mov
push
dec
sar
push
je
pop
dec
rorl
repnz
sti
orb
mov
dec
mov
hlt
mov
pop
sysenter
es
mov
aam
xchg
fisttpll
insb
mov
sbbl
push
test
dec
cltd
aas
iret
adc
dec
xchg
xchg
xchg
sbb
xor
in
add
lods
pusha
xchg
loope
xlat
mov
leave
fwait
imul
jbe
jecxz
call
cmp
test
pusha
or
push
hlt
mov
shrl
cmp
mov
mov
div
mov
dec
xchg
mov
sbb
sub
orl
clc
ds
mov
push
aaa
mov
lcall
sahf
or
cmpb
stos
mov
lds
shlb
fwait
xchg
cmp
test
xchg
mov
mov
loopne
dec
dec
xor
testb
sbb
push
out
loopne
pop
sub
icebp
outsb
and
decl
jmp
xor
rclb
sub
out
addr16
jnp
stos
mov
das
cmp
xlat
pop
add
mov
nop
mov
adc
in
out
fsubrl
sbb
aam
jo
sarl
sbb
outsb
jmp
or
lods
icebp
stos
or
or
cmpsb
loopne
xor
imul
das
inc
loop
push
fwait
movsb
shll
repnz
negb
sbb
daa
in
aad
lret
out
in
cmpsl
cli
cmp
or
and
decl
jge
adc
leave
jns
test
bnd
es
jbe
pop
or
inc
add
adc
push
stos
sahf
inc
int
xorb
sbb
mov
cmp
mov
icebp
jmp
insl
pop
xchg
xchg
fsubp
inc
push
sub
test
leave
daa
and
push
or
mov
dec
and
dec
xor
cmp
or
adc
stc
pop
add
jo
lahf
into
sub
rcrl
or
push
or
cmp
neg
insb
jns
add
cwtl
and
push
cli
movsl
dec
jnp
stos
cmpsl
push
shlb
into
clc
lods
pop
sti
imul
sub
cli
testl
subl
sub
jae
out
sbb
sti
lds
pop
in
mov
lods
and
test
pop
push
sarl
adc
ret
sub
rcr
lds
jmp
jmp
hlt
fwait
xchg
out
pop
fldt
jb
js
sub
cmpsb
nop
jecxz
daa
lret
xchg
shll
dec
ds
std
cld
jbe
adc
jmp
movsl
sbb
sbb
add
imul
and
and
fistpl
add
mov
xor
sub
cli
and
ret
fistpll
adc
xchg
inc
mov
pop
push
lods
sbb
fwait
imul
push
les
push
adcb
mov
movsb
or
ficoml
dec
mov
sbb
pop
jne
loop
call
and
rcrb
imul
ljmp
stc
jp
repz
jecxz
fwait
jmp
repnz
sub
pop
es
cmp
jae
xchg
jmp
xchg
scas
mov
insl
fwait
xchg
dec
fsin
mov
jmp
fsubrs
nop
lods
jnp
adc
cmp
cmp
xchg
adc
cli
adc
lret
jo
inc
jg
ljmp
lock
cltd
xchg
adc
sbb
sub
inc
mov
gs
cmp
mov
js
adc
addb
aam
lock
int
clc
add
test
shll
shlb
push
data16
xchg
test
pop
scas
inc
out
aaa
push
popa
sbb
sub
test
enter
out
ds
jl
cmp
movsl
add
es
or
sub
lret
jne
jmp
sub
adc
cmpsl
mov
mov
loop
sbb
lods
popf
pushf
sbb
fiadds
les
aam
xor
outsl
dec
lret
sbb
jns
xchg
in
cs
call
inc
test
insb
push
or
fldenv
frndint
rorl
xor
data16
pop
sub
mov
pop
leave
sub
adc
icebp
shlb
rcr
pop
ds
cwtl
push
rcl
mov
loope
lret
add
ds
ja
and
cmp
outsb
gs
arpl
rcr
add
mov
and
lret
cltd
inc
icebp
scas
cmp
in
sbb
sub
push
push
push
aam
ret
dec
cmpsl
mov
lea
jg
lret
jne
add
push
and
mov
ss
dec
push
add
inc
mov
jle
inc
cmc
xor
lret
mov
out
add
xchg
shrl
inc
and
ss
loop
pop
dec
rorl
push
dec
rclb
mov
push
xchg
mov
aad
aaa
dec
mov
mov
cmp
xor
cmp
push
lret
das
or
ret
add
push
dec
adc
jns
sub
hlt
mov
mov
mov
push
aaa
pushw
dec
inc
sbb
push
mov
fstpl
mulb
jno
call
in
cmc
inc
sbbl
inc
lds
dec
int
xor
scas
popf
cmp
push
arpl
pop
mov
cmp
inc
pop
aam
push
inc
xchg
mov
cmp
aad
movb
nop
testl
gs
mov
push
outsb
push
js
push
test
jl
push
vmread
ret
cmpsb
lret
cwtl
lods
je
mov
sarl
andl
pop
fcomps
lods
loopne
daa
xor
idiv
test
lods
lods
into
add
clc
ja
or
ljmp
aad
shl
sub
lret
mov
mov
mov
mov
leave
imul
or
and
mov
and
pop
outsl
mov
test
in
mov
imul
jl
mov
ja
subl
add
mov
jns
daa
or
jno
sahf
in
xchg
and
js
jb
push
lea
ljmp
mov
xchg
ret
xchg
push
pop
stc
movsb
insb
mov
adc
jmp
mov
movsb
push
add
enter
xchg
xchg
lods
outsb
vmaxps
test
xchg
aaa
in
mov
cmp
fstps
sub
sahf
dec
sub
push
add
xor
filds
mov
shll
ficoml
outsb
ja
xor
and
dec
xor
adc
or
sub
pop
or
enter
inc
lahf
sbb
outsl
lods
out
out
clc
dec
scas
std
jecxz
ss
int3
rorl
bound
sbb
stos
insl
jb
lods
push
xchg
mov
cltd
mov
adc
pop
xor
adc
push
jo
mov
fldcw
dec
xchg
shrl
fists
jle
pop
push
pop
jge
aad
pop
push
xor
and
xchg
add
ret
fnstcw
mov
test
pop
xor
pop
lcall
mov
sbb
addl
ss
pop
insb
cmc
mov
in
in
xor
int
pop
and
out
inc
je
mov
xor
je
out
mov
mov
mov
adc
add
jl
xor
arpl
xchg
aas
pop
xlat
out
test
inc
imul
movsb
add
adc
mov
adc
jp
gs
xor
in
lcall
es
xchg
push
popf
cwtl
pop
adc
cltd
add
lcall
in
jmp
cmp
mov
mov
test
in
leave
sbb
xor
sub
jae
fdivrs
add
xor
daa
inc
xor
dec
jbe
mov
mov
in
xchg
push
dec
lea
jae
mov
outsb
and
jg
cmp
scas
jecxz
add
cmc
gs
lods
add
cmp
lret
xor
cmp
mov
push
add
mov
arpl
mov
incl
mov
xor
jge
cmp
ljmp
sbb
icebp
mov
xor
pop
mov
xchg
jg
inc
jmp
fcoml
lock
loop
cmp
jmp
cmpsb
inc
mov
xor
bound
ret
jmp
adc
psllw
mov
les
sub
xlat
sbb
lea
aas
int
je
sub
repz
ja
mov
rclb
adc
in
xchg
adc
or
sbb
shrl
add
inc
push
or
fdiv
or
cmp
pop
adc
xchg
mov
inc
push
addl
mov
lret
sub
xchg
add
sti
add
push
xor
pop
add
fldcw
dec
sahf
jae
fstps
and
push
stc
loop
and
pop
pop
ret
aam
jg
sub
push
push
inc
movsl
sub
pushf
inc
nop
mov
fnstsw
jmp
xchg
inc
mov
mov
das
outsb
loopne
in
dec
add
sub
aam
push
ss
shl
sub
arpl
cli
adc
sub
aad
mov
jne
fsubrl
in
ja
and
and
add
mov
fmull
pop
sbb
addr16
mov
and
cmp
pusha
xlat
sub
inc
scas
inc
stc
add
inc
sbbb
xchg
inc
mov
aas
push
push
std
and
jo
or
and
mov
mov
xor
push
aaa
or
imul
andb
push
addl
dec
cmpsl
push
ret
orl
pop
ss
cmc
push
xor
out
xchg
in
lahf
xor
fidivl
aam
and
cwtl
push
loope
add
in
pushf
lret
mov
sahf
inc
shr
add
inc
out
cmp
cld
pop
xchg
mov
adc
lods
push
jl
mov
jns
and
dec
adc
arpl
in
jb
mov
add
lods
push
xor
or
movsb
lret
mov
add
stos
and
fstl
add
dec
jb
xchg
jp
insl
popf
jge
hlt
xor
sbb
dec
sbbb
inc
xchg
stc
jbe
or
pop
call
adc
imulb
push
jge
xchg
jb
adc
pop
add
xchg
mov
pop
sub
scas
adc
rcll
psubq
lcall
pop
mov
mov
ljmp
enter
lcall
pop
xor
pop
in
add
int
outsb
call
mov
divb
or
dec
cltd
enter
xor
xchg
mov
jo
add
pushf
ret
rcll
sub
cmpsb
imul
int3
sarb
aaa
lcall
mov
push
scas
in
xchg
in
push
lret
jae
scas
dec
and
fdivrp
cmp
mov
add
mov
lods
mov
or
dec
pop
jl
std
xchg
push
cmp
mov
jne
mov
add
popf
xchg
push
jecxz
xchg
addr16
push
fs
add
pop
mov
aad
sti
mov
push
dec
jbe
stos
mov
push
gs
cmp
mov
lret
inc
mov
and
in
xchg
mov
xchg
ret
and
xor
xchg
adc
ljmp
jl
inc
movsl
mov
dec
jle
jg
std
inc
call
fstl
cld
add
lret
ja
mov
in
outsb
inc
adc
jbe
or
in
cli
sbb
sbb
xor
stc
pop
inc
lds
pop
ss
rcrb
iret
nop
repz
push
fstl
jecxz
fs
pop
cs
push
mov
mov
sbb
lods
mov
fnsave
cwtl
and
and
ret
cmc
test
cmpsb
daa
repz
and
es
sar
ficompl
aas
push
sub
arpl
fdivl
div
sub
jl
sbbl
cmpsl
cmp
test
dec
jnp
pop
aad
mov
mov
or
mov
jmp
sbb
push
std
rcrb
cld
adc
add
push
ret
pop
or
dec
pop
sub
pop
dec
adc
add
sbb
dec
push
sti
sub
imul
insb
ljmp
xor
out
scas
sub
sahf
mov
dec
out
jae
mov
daa
mov
push
jb
test
add
push
xchg
mull
push
iret
fcompl
cmp
cli
scas
pusha
sub
jp
fwait
sbb
cmp
pushf
jge
ss
lods
and
push
sub
pop
mov
mov
cmp
fwait
nop
ret
jge
push
rcrb
or
pop
fisttpll
mov
cmp
and
pop
mov
xor
pusha
sbb
dec
cmp
jbe
inc
inc
cmp
jecxz
pop
xchg
mov
inc
mov
mov
int
cmp
xor
inc
xor
into
dec
sbb
out
xor
xchg
sub
cwtl
jnp
lods
mov
push
cmpsl
ret
and
mov
icebp
pop
fcoms
xor
add
jp
repz
jae
mov
mov
fstpt
xchg
shll
mull
inc
pop
cmpsb
bound
dec
xor
xchg
push
mov
xor
cwtl
adc
aaa
mov
ss
push
jge
scas
ds
loopne
pop
out
mov
jae
pusha
sbb
sbb
jmp
mov
cmp
lods
loope
jmp
mov
dec
pop
mov
pop
pop
mov
sbb
popf
and
aad
pop
xchg
dec
xchg
fs
jno
jecxz
inc
inc
push
and
inc
dec
lods
cwtl
bound
sahf
or
sbb
scas
nop
jne
fwait
pop
enter
dec
sbb
insb
fisubrl
ucomiss
cwtl
xchg
inc
movsb
cmp
addr16
fisttpl
popf
mov
push
mov
repnz
loop
dec
xchg
mov
inc
jg
or
push
mov
xchg
ret
pop
call
push
xor
mov
push
fdivl
pop
lea
int
repnz
test
movsl
push
sbb
xor
xchg
lods
into
idivb
adc
xchg
adc
mov
pop
dec
int3
popa
push
fbld
inc
bnd
and
imul
jmp
fadds
andl
or
mov
jecxz
test
leave
cmp
pop
push
js
dec
rol
insl
iret
xor
mov
xchg
xor
fstps
cwtl
ds
fists
jg
xchg
adc
sub
dec
jg
cwtl
dec
mov
mov
push
es
dec
in
fs
xor
pushf
push
inc
repz
or
mov
xor
lock
dec
sbb
mov
iret
pop
push
add
mov
add
nop
mov
sbb
xchg
cmpps
xchg
jmp
insb
mov
lret
out
cwtl
rcr
rep
push
fs
pop
push
sub
cmc
aam
jbe
cmpsl
mov
mov
fwait
sti
xchg
and
fisubl
sahf
push
mov
dec
and
ret
pop
lahf
outsl
enter
push
shrl
popa
xor
aas
ficoml
in
mov
stc
jb
sarb
inc
xlat
push
mov
cmp
aam
cmp
push
out
push
loope
int
sub
jb
stos
pop
xor
push
iret
inc
stos
pop
popl
lcall
xchg
sahf
mov
cmp
bound
js
out
cmc
stos
data16
and
or
rcll
jg
pop
cmp
adc
push
lahf
ret
cmp
ja
imul
loop
sub
sub
outsl
and
dec
pusha
addb
cmp
loopne
add
push
jne
dec
lods
push
repz
addr16
inc
mov
mov
xor
dec
fsub
ror
push
in
mov
push
cmp
pop
es
mov
lods
aad
into
lcall
les
mov
fcmovu
sbb
shrb
add
cmp
add
daa
cmp
dec
pop
daa
and
jnp
insl
jno
xchg
xor
inc
rclb
cltd
daa
adc
cmp
add
in
enter
or
dec
outsb
aam
inc
loopne
xorb
testb
sbb
movsl
testb
ds
xor
pop
and
in
addr16
mov
cld
jnp
fldl
movsb
mov
out
mov
aaa
pop
inc
cmc
outsl
adc
cmpsl
test
shll
leave
insb
fstl
lahf
outsl
and
or
pop
mov
pushf
and
fldl
sbb
push
pushf
push
repz
hlt
int3
cld
in
mov
or
test
inc
fwait
lcall
inc
push
and
pop
and
mov
sub
das
mov
push
subl
sub
in
shrl
call
xchg
jecxz
add
je
aam
mov
add
dec
stc
rorb
mov
and
sti
lods
push
les
jno
xchg
call
push
push
xchg
cmc
jle
xchg
mov
sub
ljmp
push
addr16
adc
xor
pusha
xchg
scas
int
popa
ja
sbb
in
push
scas
cli
mov
or
es
pop
xchg
cmpsl
fldenv
mov
frstor
add
and
lds
call
dec
jl
int
cmp
andb
fwait
jae
ret
mov
mov
int3
cmp
shl
out
xchg
decl
adc
add
inc
std
fldl
cld
push
mov
cmp
mov
xor
dec
jo
adc
mov
fistl
hlt
daa
jecxz
in
jmp
add
add
stos
ret
xor
loope
sbb
fnsave
sbb
hlt
push
pop
lds
ja
hlt
in
inc
out
aaa
inc
dec
iret
cld
icebp
xlat
cld
dec
mov
and
sub
inc
add
cwtl
push
push
test
xor
push
pop
or
lret
adc
bound
bnd
aaa
xchg
push
mov
jl
je
push
or
adc
push
adc
sarb
inc
out
loope
in
mov
aaa
fisubl
jp
mov
mov
jle
call
rolb
movsb
xor
scas
mov
sub
xchg
shll
mov
pop
mov
std
and
and
jo
mov
or
jp
add
das
in
push
cs
mov
jmp
jns
xor
sub
mov
add
dec
loope
pop
pop
mov
sbb
cmpsb
popf
lcall
arpl
vcvtdq2pd
sbb
xor
orl
out
mov
xchg
mov
je
adc
and
jno
in
adc
pop
pop
dec
inc
push
pop
rclb
cld
rol
add
adc
sbb
mov
sub
inc
scas
fisubs
jmp
xchg
and
cltd
xchg
repnz
pop
mov
outsb
orb
shl
stos
stc
inc
mov
mov
mov
loopne
inc
xor
sbb
add
scas
jbe
and
mov
insb
stc
sub
out
addr16
das
xor
xchg
adcl
cmp
xchg
daa
and
jmp
pushf
fwait
lret
decb
adc
scas
dec
sub
movsl
and
insb
inc
inc
aas
mov
pop
cli
mov
fidivl
mov
mov
mov
pop
cmp
jg
sahf
sbb
lcall
dec
sbb
test
or
pusha
retw
aam
shrb
push
cld
mov
sub
iret
outsb
aaa
push
pop
add
and
jns
xchg
and
jp
or
mov
lcall
int
sbb
and
in
pop
lds
stc
cmp
pop
repnz
mov
cs
jl
xchg
dec
clc
cmp
or
loop
cmp
inc
into
inc
xor
add
sbb
push
adc
mov
dec
or
push
adc
xchg
cmc
dec
push
imul
icebp
xchg
add
and
aas
stos
pop
dec
imul
mov
xor
mov
mov
add
xor
cmpsl
jno
inc
adc
inc
fwait
mov
inc
cmp
or
mulb
mov
out
icebp
push
loop
ja
jmp
push
leave
mov
fimull
cmpsb
push
leave
add
hlt
and
fsub
ljmp
out
or
cwtl
push
mov
rcrb
lods
or
cmc
pop
fldcw
outsb
into
shlb
jge
jl
fdiv
cmp
dec
push
or
cmp
sbb
fldt
inc
cmc
in
sub
frstor
add
adcb
loop
pop
sub
rolb
mov
cmp
or
je
jno
sti
push
out
xlat
xlat
push
ljmp
shll
inc
xor
js
stos
mov
push
mov
lahf
mov
in
pop
push
mov
test
inc
addb
ljmp
jne
rcr
mov
cltd
int3
xchg
sub
aas
lods
sbb
sub
pushf
dec
lea
fwait
pushf
fsubl
push
fidivl
test
jle
lods
or
scas
sti
pop
mov
push
pop
movsb
xchg
aas
sub
sti
mov
enter
iret
adc
popf
cmc
mov
imul
inc
push
iret
fucomp
push
ret
in
jmp
lret
push
cmp
xchg
xchg
stc
iret
int3
sbb
sbb
ja
jbe
nopl
jmp
and
out
dec
pop
shl
jb
ds
pop
fsubrs
mov
push
push
jge
data16
mov
aad
ljmp
mov
push
sbb
movb
idivl
jno
and
push
adc
mov
dec
jnp
xor
pushl
push
loopne
pop
out
pop
xor
sbb
mull
out
mov
inc
dec
lret
mov
int3
sub
inc
sub
or
sub
pop
mov
add
adc
mov
mov
movsb
arpl
ljmp
insb
and
mov
and
and
jge
mov
dec
clc
stc
push
or
pop
adc
inc
and
push
xlat
inc
pop
mov
xchg
push
gs
push
fbld
repz
xchg
jno
enter
push
ja
xor
jae
decl
dec
mov
loope
inc
pop
sub
adc
fnstenv
mov
jle
call
daa
jne
bound
fs
out
xchg
xor
daa
mov
dec
vaddss
loope
mov
pop
xchg
test
insl
jle
sarb
mov
lock
rol
and
jg
jo
das
movl
xor
mov
push
and
pushf
fcoml
mov
fbld
lods
leave
std
jne
push
or
movsb
pop
aas
adc
sarl
loope
sbb
cmp
push
loopne
repnz
dec
insb
std
shll
cmp
repz
hlt
mov
aas
or
pop
nop
mov
mov
xchg
out
pop
out
sbb
imul
jge
push
fistps
outsl
mov
neg
leave
mov
sub
cmp
in
inc
clc
rcll
lret
and
cmp
xchg
mov
subb
lods
fmuls
add
insb
add
dec
sub
lahf
cli
and
fyl2x
adc
popf
scas
cli
pop
gs
mov
in
sahf
call
aam
stos
cwtl
sbb
jle
lahf
in
dec
divb
cmp
adc
sub
xchg
mov
jle
xlat
sahf
fisttpll
popf
dec
mov
shlb
test
cmp
jg
fwait
xchg
pusha
mov
jp
mov
push
sub
adc
mov
push
inc
inc
xor
fadd
xor
mov
scas
cld
mov
mov
jo
mov
int
push
pop
sbb
enter
outsl
jb
outsb
ds
insb
add
test
xor
push
mov
add
cld
jle
daa
fisttpll
loope
mov
mov
jge
mov
inc
xlat
mov
inc
leave
mov
pushf
sbb
cld
jnp
mov
dec
loope
mov
cvttps2pi
xchg
inc
push
imul
push
popa
es
inc
jge
rcl
pop
pop
les
cmpsb
push
pop
xchg
or
dec
jbe
test
test
push
pushf
dec
lret
arpl
pop
das
push
repz
dec
outsb
faddl
int
adc
clc
sub
jb
dec
sub
mov
stos
negb
xor
gs
adc
stc
sbb
dec
fiadds
xlat
mov
sbb
daa
mov
inc
aas
jecxz
inc
sbb
add
js
mov
push
cmp
jbe
repnz
in
mov
xchg
xchg
in
loope
jb
inc
aad
mov
lods
pop
sbb
mov
in
push
cli
stos
ret
xor
mov
jno
push
int3
jle
mov
jno
jne
out
movl
pop
rol
jae
fs
mov
cmpsb
in
sub
sbbb
xchg
jb
lret
rcll
sbb
mov
stos
inc
cltd
cmpsl
or
mov
and
jbe
mov
into
cmpsb
and
push
adc
sarb
mov
push
into
adc
sub
in
stos
sbb
xchg
out
clc
subl
lods
mov
cmc
int3
std
cltd
mov
addr16
sub
lret
add
or
imul
sbb
inc
cmp
ja
jg
xor
pop
mov
xchg
inc
mov
scas
es
fs
inc
outsb
mov
add
sti
gs
scas
push
xchg
ss
add
mov
aas
pop
push
pop
test
and
inc
add
leave
icebp
mov
sahf
cmpsl
aaa
das
xor
test
sub
adc
and
in
std
je
inc
in
int
cmpsl
in
jnp
or
gs
bnd
leave
inc
dec
and
pop
inc
rcrb
clc
lods
inc
into
in
in
inc
jns,pt
fiaddl
push
pushf
pop
test
fdivr
leave
insl
daa
psubd
mov
push
sub
leave
orb
out
push
into
dec
cmp
test
xor
movsb
and
pop
push
flds
fiaddl
subb
std
add
arpl
xor
xchg
jecxz
xchg
adc
jp
push
jae
push
adc
mov
outsl
or
mov
jg
or
scas
insl
mov
cmp
pop
ljmp
mov
push
inc
push
and
test
xchg
sbb
icebp
je
shlb
push
bts
sbb
xchg
xchg
inc
push
cmpsl
repz
shll
fnstenv
hlt
sti
push
mov
sbb
shll
imul
into
adc
inc
dec
or
in
pushf
mov
jae,pn
leave
fwait
call
and
out
iret
scas
cltd
pusha
or
xchg
shrl
iret
inc
popa
sbbb
jg
scas
mov
mov
mov
dec
inc
fists
jmp
mov
movsb
shrd
jae
insb
cmp
pop
jbe
in
data16
push
cmp
mov
das
lret
sbb
xchg
sub
sub
xchg
sbb
sbb
test
leave
push
mov
fwait
aad
incl
lret
shl
mov
adc
call
std
cli
pusha
xor
push
mov
or
mov
rcr
xchg
les
push
stos
in
popa
mov
push
cmovnp
sub
daa
or
xor
sub
dec
mov
pop
sti
dec
sub
cmp
aad
insb
loope
cmp
outsb
sbb
jg
mov
pop
sti
push
test
push
gs
popf
movsb
pop
or
xchg
and
or
inc
out
lea
jae
popa
gs
push
xor
sub
add
push
lea
das
or
inc
push
imul
pop
push
popf
popa
ja
xchg
cli
adc
push
test
aad
aaa
icebp
rclb
xor
pop
cld
pop
mov
mov
outsb
gs
ret
addr16
jns
lahf
jmp
scas
sti
mov
daa
fcomps
repnz
cmp
pop
in
xor
repnz
pop
dec
ficompl
mov
inc
or
cld
pushf
jo
sub
pop
jmp
fisttpll
int
inc
ss
in
decb
mov
or
pop
lret
lds
lcall
fnstenv
int
popf
imul
fwait
jmp
ret
inc
loopne
mov
or
jne
mov
push
fisubrs
mov
adc
loop
dec
leave
xor
push
xchg
mov
jge
xchg
ss
dec
inc
sbb
mov
xchg
loope
out
aaa
ret
iret
jl
in
and
nop
xorb
pop
dec
pop
mov
icebp
movsl
pop
dec
shrl
adc
jp
les
sub
jnp
into
dec
loopne
sbb
loop
rclb
xor
jecxz
in
dec
pop
loop
push
out
cs
xchg
daa
loope
pop
dec
dec
aam
pop
mov
mov
jge
cmp
pop
pusha
pop
dec
mov
adc
test
pusha
sub
mov
test
adc
ds
cmpb
pop
adc
mov
test
cmpsb
sub
pop
push
inc
xor
xchg
pop
fbld
loope
lock
or
sub
pushf
mov
in
mov
jecxz,pt
dec
jo
xorb
scas
jne
adc
xlat
loope
fisttpll
rcll
sub
mov
mov
outsb
cmpsb
dec
or
mov
sub
insb
imul
pop
mov
mov
push
daa
pop
subl
push
sbb
daa
add
into
in
sub
sub
xchg
cmp
xchg
inc
in
xchg
and
mov
jmp
addr16
mov
test
jecxz,pt
xor
es
testb
outsl
mov
mov
iret
xor
dec
insl
mov
and
fwait
negb
rcrl
push
pop
xchg
pop
inc
insl
fwait
inc
cmpsb
std
fildll
mov
xor
insl
lahf
xchg
scas
sti
lds
mov
fdivrs
dec
sub
dec
xor
popf
push
ss
pop
jmp
popa
pop
aas
push
xchg
and
movb
aam
es
push
roll
add
data16
and
jmp
jmp
in
add
add
ret
sbb
mov
sbb
pop
mov
push
shlb
mov
or
loopne
out
pushl
xchg
daa
xorl
jmp
gs
cmp
cmp
cld
das
fdivrs
mov
ficomps
dec
mov
pusha
lods
imul
push
clc
inc
stos
repz
sub
add
mov
mov
idiv
push
cmpsl
mov
cmp
mov
and
pop
ficoms
mov
loopne
dec
movsb
xor
pop
movsl
ffreep
and
xchg
arpl
jg
push
dec
add
dec
add
lahf
fcomps
push
out
dec
test
frstor
mov
aam
sbb
aad
and
loop
sub
cs
repz
xor
mov
sbb
jae
in
loop
xchg
mov
or
sub
scas
push
jnp
and
in
jo
arpl
test
xor
movsl
cmp
dec
call
jmp
mov
adc
adc
out
jmp
inc
and
jb
cmpsb
mov
cmpsl
lds
in
lahf
jmp
push
iret
call
out
xor
dec
jnp
xchg
jns
das
pushf
dec
cld
mov
fs
std
lret
int3
dec
pusha
nop
sbbb
or
push
repz
jb
lcall
popa
mov
and
movsb
mov
scas
push
and
pop
xchg
in
push
sub
dec
fwait
lcall
push
ret
and
push
cmp
dec
fldl2e
les
sbb
repnz
movsb
adc
fcompl
cwtl
xchg
or
pop
mov
imul
mov
inc
mov
mov
adc
std
add
and
cmp
je
call
mov
sub
pushf
dec
sub
dec
mov
or
jb
lds
or
add
in
cmp
stc
or
jp
push
lea
push
adc
sbb
adc
pop
jmp
sbb
push
add
or
testb
mov
scas
lods
popf
es
repz
rep
push
add
cmp
hlt
mov
jp
scas
inc
into
subb
add
mov
adc
mov
or
cmpsl
add
rolb
pop
cld
xchg
in
and
and
and
cmp
out
lods
test
mov
lds
jno
fists
aaa
arpl
and
jle
stc
out
jl
leave
lods
mov
leave
inc
mov
lds
inc
jb
push
cmp
xchg
pop
hlt
xchg
mov
mov
xchg
push
scas
std
sbbb
test
dec
fnstenv
push
rcl
pop
and
dec
push
fcoms
lds
call
sub
xor
xor
cmp
sbb
pop
popa
inc
xchg
fdivrs
mov
and
outsl
dec
pop
ja
push
and
xchg
les
out
sub
mov
fnstcw
or
xchg
mov
pop
xchg
fists
pop
xor
jl
cmpsl
pop
clc
jo
inc
ljmp
fmuls
jne
nop
xchg
xchg
test
mov
ret
in
mov
enter
mov
push
cld
xor
jno
cmp
push
mov
out
cmp
jecxz
push
adc
call
and
out
test
or
mov
xchg
jb
cli
fildl
iret
or
xchg
fs
out
mov
and
push
adc
dec
in
adc
int3
mov
mov
ja
nop
repz
lcall
cmp
cmpsl
sub
dec
std
fimuls
iret
xor
pop
das
inc
pop
movsl
cmp
out
mov
add
rcrl
in
pop
in
popf
mov
mov
data16
fcmovb
test
icebp
jmp
dec
stos
mov
xchg
push
sbb
jecxz
cmc
and
sbb
or
xor
leave
jge
test
hlt
out
movsl
dec
pop
add
and
adc
imul
leave
movsb
mov
cmp
loop
cmp
int3
aam
dec
fnstsw
call
pop
pop
mov
stos
mov
mov
xchg
loope
fs
inc
out
sub
andb
test
cmp
cmpsb
movsl
cmp
aam
orb
xlat
pop
jg
add
nop
cmc
insb
outsb
push
insb
or
fiaddl
jecxz
loope
adcb
mov
orl
or
addr16
sub
movsb
mov
ret
adc
xchg
in
scas
sbb
dec
repnz
push
add
fists
xchg
sub
js
shl
pop
xor
or
test
lock
icebp
mov
outsl
dec
or
or
ret
ret
fsqrt
mov
xchg
jbe
lret
cvtdq2ps
stc
mov
js
xchg
pop
xor
mov
subb
xchg
lock
ret
lods
dec
xor
xchg
outsb
jns
jne
js
aad
xchg
cmp
insl
mov
imul
inc
pop
lret
pusha
push
outsb
je
addr16
outsb
jmp
mov
lods
ffree
xchg
ds
lahf
sub
nop
negl
in
stc
xor
cmpsb
sub
fidivrl
mov
pusha
sub
aam
pop
dec
xor
xchg
imul
jns
pop
aas
adc
int3
pushf
jbe
mov
lret
adc
push
and
dec
imul
movsl
push
sbb
mov
push
into
mov
mov
xchg
lds
inc
popf
enter
pop
adc
stos
mov
ljmp
mov
and
jo
gs
sti
cltd
fidivrl
pop
push
mov
push
inc
mov
fstl
stos
cs
in
orl
es
sbb
or
stc
xor
lahf
pop
xlat
mov
call
mov
inc
sbbl
or
dec
ja
xchg
fs
mov
idiv
adc
orb
mov
mov
push
adc
push
mov
mov
mov
rorl
arpl
jle
add
push
repnz
jbe
subl
mov
movsl
ja
out
sbb
fiadds
xor
in
jmp
test
cmp
dec
sub
stc
mov
mov
cld
xor
adc
jno
pop
xorb
repz
adc
fs
jnp
stos
cld
aas
cld
fwait
outsl
int
dec
cmp
cwtl
cmp
shlb
mov
test
cwtl
filds
mov
movsl
pop
sub
inc
sub
cmp
stos
leave
movsb
dec
pop
dec
mov
loopne
adc
cmp
dec
cmpsb
cmp
lahf
sbb
and
lods
cmp
push
ret
out
xlat
cmp
mov
mov
xor
or
pop
js
and
subl
mov
inc
in
enter
es
je
push
in
lret
xchg
inc
sub
fstp
jo
push
mov
and
and
lcall
rsqrtps
mov
out
sub
mov
jmp
mov
push
mov
aam
add
sub
adc
rcrb
push
jge
dec
lret
popa
bsr
inc
outsl
das
cs
push
addr16
pushf
jnp
xor
adc
push
push
cs
mov
mov
mov
adc
out
cmp
push
into
jle
cmc
pushf
jp
fwait
dec
cmpsl
ljmp
or
jge
jns
int
mov
fs
dec
add
loop
loop
jg
xor
dec
test
sub
inc
int
sbb
in
inc
sti
scas
clc
lea
mov
mov
in
xchg
enter
mov
faddl
xchg
jl
inc
scas
add
sub
adc
insl
test
data16
fsts
xlat
xchg
xlat
out
es
test
add
mov
cmc
iret
lret
insb
loope
mov
and
mov
mov
push
mov
divl
loope
in
repz
cmp
in
pop
sub
sbb
pop
jb
ja
sub
mov
ret
inc
cmpsb
xchg
dec
pusha
popa
cmp
xchg
sub
cmp
outsb
and
xlat
or
or
jge
and
xchg
sbb
subb
shlb
jo
push
and
push
in
lea
lods
sahf
cmpb
cmp
clc
fsubl
push
mov
xchg
popa
out
std
jmp
xchg
sub
jle
xchg
fbld
mov
dec
std
imul
mov
inc
or
divb
mov
mov
insl
nop
bound
and
push
mov
jno
shll
cmp
cmp
xchg
mov
cli
test
xor
clc
popf
adc
push
pop
mov
push
or
orl
mov
insb
pop
mov
inc
mov
mov
mov
adc
mov
sahf
ret
jmp
push
pop
dec
sbb
lods
in
cmove
ljmp
xor
push
loop
push
and
sub
inc
xchg
inc
pop
mov
arpl
xchg
xchg
mov
push
fs
std
pop
jne
jecxz
iret
insl
and
ja
std
insb
and
xchg
into
inc
push
xor
js
sbb
jle
hlt
xchg
add
and
xchg
daa
pop
mov
in
popf
mov
pop
std
fs
push
pushf
push
xorl
mov
mov
aaa
or
mov
sti
and
mov
inc
mov
out
cmp
scas
push
mov
add
nop
push
in
lcall
adcb
bound
aas
mov
jne
in
cmp
lret
cmp
jl
or
cld
mov
mov
sub
lcall
mov
mov
inc
inc
leave
rolb
loope
jns
mov
adc
sqrtps
xchg
out
xchg
jle
loope
lock
fistps
sti
pop
jbe
sub
mov
sub
rolb
cmpb
fdivl
dec
xchg
jmp
sbb
push
or
loop
cltd
nop
inc
push
jns
ss
ja
jne
inc
cmp
test
repnz
insl
xor
mov
movsl
ret
mov
out
sub
push
out
xchg
pop
test
call
cltd
xor
lcall
out
bound
leave
push
mov
jle
lret
push
mov
movsl
mov
insb
sbb
mov
add
xchg
mov
cld
cmc
pop
xchg
and
pop
push
cmp
sbb
xorl
insl
js
mov
test
outsb
dec
push
insl
lret
xor
xchg
xor
jnp
inc
nop
xchg
dec
shrb
mov
jb
imul
mov
dec
ss
jb
inc
repnz
or
cltd
mov
sub
lock
cmp
outsb
and
pop
add
jns
mov
sbb
mov
cli
ret
xchg
cli
sbb
sub
xchg
lea
fistpll
push
mov
loopne
enter
xchg
cmpsl
jnp
lahf
push
test
mov
imul
scas
enter
int3
jecxz
push
adc
ss
out
enter
lods
push
add
ss
dec
aaa
xor
xor
ret
add
popf
orl
inc
xor
pop
sbb
sbb
mov
neg
pusha
sbb
pop
mov
jnp
rclb
add
enter
mov
adc
jnp
pop
test
out
nop
inc
scas
or
ret
les
push
mov
dec
pop
xor
out
pop
xchg
movsl
arpl
outsb
mov
dec
xlat
xorl
jmp
adc
shll
scas
insl
adc
inc
sub
push
mov
shrl
pop
rclb
testb
popl
fisttps
adc
das
and
iret
out
push
adc
into
mov
pop
sbb
das
jno
lret
push
into
mov
std
in
inc
sti
dec
pusha
cmpsl
stc
mov
push
mov
jae
mov
inc
push
addr16
out
jmp
mov
je
dec
mov
jmp
jo
call
hlt
dec
mov
out
inc
push
and
xor
iret
lret
ss
cmp
add
test
or
idivb
test
mov
pop
and
cmp
shlb
push
xor
xchg
js
in
aas
and
stos
mov
xchg
xchg
cmpl
jle
and
pop
stos
sbb
sub
xchg
imul
fiadds
inc
and
dec
cmpsb
add
loope
mov
stos
mov
fwait
mov
and
cld
mov
insb
stos
sbbl
or
pop
adc
mov
clc
mov
fists
mov
mov
jns
hlt
sub
dec
ss
int3
stos
cld
popf
bound
outsw
icebp
jb
lods
pop
inc
dec
int
clc
add
jecxz
pop
jmp
and
or
in
pop
sub
or
cwtl
fistpll
push
xchg
sti
pop
or
out
loope
push
and
js
push
sbb
repz
push
aam
pop
stc
inc
xchg
xchg
hlt
sahf
xor
lods
jae
pop
ljmp
mov
sbb
dec
repz
or
inc
jne
out
sub
xchg
adc
sarb
enter
popl
iret
push
and
les
insl
test
rorl
pop
outsl
fildll
mov
loopne
lock
ds
pop
hlt
dec
or
push
mov
push
jge
sahf
and
test
adc
popf
insb
jmp
push
xor
mov
aas
imull
dec
aas
clc
cltd
jnp
adc
inc
mov
ficompl
rorl
adc
push
jne
pop
iret
imul
cmp
xchg
inc
inc
idivb
push
xor
mov
inc
loopne
cmp
jbe
or
push
pop
xlat
fidivrs
xor
adc
and
testb
sti
add
jo
pop
fists
push
lret
lahf
inc
nop
pop
adc
cmc
rcr
dec
gs
out
jbe
add
stc
mov
ret
sbb
mov
xchg
aaa
mov
push
jae
pop
into
mov
lea
pushf
into
sub
inc
xchg
xchg
mov
sbb
pop
movsl
sub
dec
mov
inc
pop
or
or
in
jnp
mov
insb
out
mov
gs
sti
js
int
xchg
sbb
xor
fwait
or
loope
mov
push
lock
test
jmp
out
inc
insb
addr16
pusha
in
jnp
inc
mov
dec
cmp
outsb
into
xor
lahf
shll
rdpmc
sbb
add
fsubs
push
fdiv
pop
nop
push
pinsrw
push
inc
scas
cmp
into
jbe
mov
sbb
mov
add
stc
test
and
jl
cmp
imul
mov
test
andb
rol
popa
adc
mov
add
xchg
sub
scas
jno
call
into
ss
lea
enter
popf
lea
xchg
mov
pushf
jns
jge
ds
fcompl
loope
mov
es
loop
add
shll
mov
das
adc
pop
mov
jne
jmp
cmc
adc
data16
cltd
hlt
fwait
sbb
ljmp
or
xchg
add
push
pop
cmp
imul
add
mov
gs
sbb
add
je
jnp
imul
xlat
cwtl
push
rcl
nop
or
pop
inc
push
mov
cmp
lock
xchg
xchg
movsb
test
push
shll
add
ljmp
cmpsl
dec
cmp
jb
jae
lcall
mov
test
rclb
jg
icebp
lods
test
inc
dec
das
nop
mov
mov
xor
sub
inc
mov
flds
jg
lret
mov
adc
int
xchg
jb
scas
push
cmp
xor
xchg
test
iret
push
push
cmp
mov
dec
push
andl
mov
dec
inc
shll
cmp
repz
xchg
mov
imul
movsl
mov
mov
adc
dec
xchg
pop
jo
and
dec
push
icebp
es
repz
sub
sbb
cmp
jg
jmp
insl
inc
pop
cmc
jecxz
push
lock
sub
in
mov
pop
mov
push
mov
cmp
negl
and
adc
jle
fldl
push
jl
sbb
pop
and
cmpsw
out
or
xor
hlt
push
xor
idivb
xor
jg
dec
mov
cld
int
jbe
add
mov
ret
rolb
pop
repz
cmp
mov
mov
cmpsb
cmpl
lds
jmp
fnsetpm(287
cmpsb
jne
push
fcoml
loop
sahf
clc
sbb
xchg
push
das
dec
sbb
inc
adc
lret
lds
shrb
notb
pop
jmp
std
and
push
inc
hlt
jge
sahf
mov
xor
inc
sbb
push
mov
cmpl
fwait
or
add
xchg
xor
es
sahf
lret
mov
pop
cmp
or
cwtl
jne
aam
fsubrl
out
adc
and
hlt
dec
sub
mov
pop
xor
mov
xor
cmpsb
cltd
jno
ret
and
test
sub
push
arpl
xor
or
sbb
add
mov
les
test
and
je
jae
pusha
mov
aad
inc
je
jb
stos
mov
xor
jge
add
out
pop
pop
dec
movsb
into
lods
arpl
dec
lcall
mov
addr16
in
jl
jge,pn
lock
mov
push
push
test
cmp
daa
paddusb
mov
pop
or
lea
adc
jns
imul
inc
inc
es
sbb
data16
insl
mov
jne
cwtl
pushf
fwait
push
mov
mov
ljmp
pop
sub
cwtl
fwait
mov
push
pop
push
rclb
insb
xchg
ljmp
push
lods
mov
aam
repz
pop
int3
pop
mov
pop
rorb
sti
dec
jbe
xchg
add
sub
push
xchg
daa
lcall
xor
stc
mov
jecxz
mov
and
ljmp
movb
lcall
or
mov
adc
pusha
pushf
dec
hlt
cmp
fwait
cmpsb
mov
aaa
and
inc
cmp
pusha
mov
idivl
dec
clc
lock
add
dec
and
enter
aad
negb
jmp
lods
dec
stc
fdivrl
xor
cmc
jl
pop
dec
pop
sbb
cmp
cmp
sub
cmp
mov
mov
add
mov
dec
inc
lods
and
or
outsb
iret
push
push
lock
das
testb
bound
inc
mov
pop
stos
push
lods
mov
fsubrs
jne
bound
mov
jp
lret
imul
out
pop
insb
lfs
imul
jl
xchg
sahf
cli
xor
xor
sbb
movl
adc
jb
add
aas
repz
fisttps
xor
xchg
mov
fcomp
sbb
lahf
jl
add
dec
and
loope
dec
sub
inc
or
testl
out
loope
iret
cmc
and
add
adc
and
enter
loope
cmpsb
push
push
test
mov
pop
fwait
push
lahf
jb
xor
movsb
lock
inc
sub
stc
mov
mov
scas
jns
mov
std
lret
outsb
sub
aad
cli
add
mov
shl
mov
in
lods
jmp
and
movsb
and
ds
add
mov
xor
dec
jmp
sbb
jp
loopne
jmp
mov
repz
pop
xchg
or
jne
sti
mov
or
insb
popa
shr
fiaddl
fisttps
outsb
sbb
mov
lahf
loope
call
pop
test
int
out
fistps
out
aas
lret
pop
lods
lea
sbb
jns
lock
mov
jbe
mov
dec
sub
sub
iret
mov
aas
xchg
pushf
test
jnp
in
xchg
loop
std
sub
jle
fmuls
inc
pop
cmp
jbe
ret
fistpl
add
lock
add
scas
inc
and
dec
cli
jno
jp
inc
mov
pop
cmp
fldenv
xchg
test
jmp
shrl
and
ds
or
in
inc
in
add
adc
sub
push
or
inc
add
jecxz
pop
mov
fists
std
mov
lahf
add
leave
ret
sub
lret
ret
sbb
add
repz
shl
js
inc
push
jae
test
mov
xchg
cmp
repnz
jp
notb
in
push
sbb
lods
aad
adc
adc
and
jle
pop
mov
xchg
out
cwtl
sub
in
cwtl
pushf
xor
cmp
adc
add
in
cld
xchg
test
pop
sbb
cmpsl
or
repz
sbb
sbb
dec
shlb
andb
xchg
adc
push
movsb
jl
popa
gs
push
and
add
jmp
cmp
jecxz
xor
xor
xor
clc
adc
je
outsl
dec
inc
xchg
sub
sub
enter
jecxz
popf
pop
pop
lahf
and
and
loop
sbb
jp
ljmp
in
negw
push
aas
push
cli
mov
and
sub
scas
notl
xor
add
je
mov
inc
test
enter
ja
xlat
das
sti
in
dec
test
jge
jbe
pushf
xor
repnz
call
cwtl
rcrl
je
js
mov
push
test
push
ficoml
inc
repz
sbb
sbb
out
add
mov
data16
hlt
and
inc
and
hlt
daa
jnp
add
test
sub
test
pop
shrl
mov
cmp
jnp
ljmp
pop
in
jmp
inc
aad
mov
stos
jp
int
mov
adc
or
pop
xor
pusha
js
in
xchg
mov
xor
sub
icebp
addr16
stc
sarl
sarl
addr16
cmp
xchg
lds
push
into
lret
popl
and
dec
inc
mov
ds
cli
xlat
mov
test
fiaddl
jl
daa
stos
mov
dec
xor
inc
cmpsl
shl
cs
imul
into
inc
les
mov
jmp
sub
push
loop
mov
sarb
push
push
inc
sbb
scas
fs
pop
sbb
bound
dec
xor
imul
out
scas
push
fs
push
adcl
jns
cli
add
or
xchg
sub
nop
cwtl
cmpsl
imul
das
mov
inc
adc
imul
jbe
push
lods
cmp
sbb
fisubrs
insb
mov
add
loop,pn
xchg
xchg
mov
cltd
hlt
cmc
andb
cmp
adc
adc
stc
subb
add
xchg
leave
add
mov
adc
mov
outsl
dec
pop
test
mov
adc
or
int
push
pop
jne
or
movsl
lea
enter
pop
aam
inc
xchg
mov
test
sbb
jmp
sub
ror
push
sbb
test
decb
mov
jge
mov
xchg
std
imul
lds
mov
mov
inc
sbb
arpl
hlt
or
mov
dec
out
daa
cmp
out
les
je
cmpl
scas
pop
sub
mov
and
cmp
adc
sbb
mov
in
sbb
cld
int
dec
and
inc
test
xor
sahf
mov
lret
sbb
fidivs
ja
mov
iret
pop
xor
rclb
jne
test
dec
inc
mov
mov
out
sub
sub
mov
sbb
sub
pop
push
int3
out
pop
xor
adc
js
lahf
inc
pop
in
adc
or
and
xchg
mov
pop
mov
hlt
jg
adc
push
call
dec
push
xor
movsl
push
iret
popf
xchg
jp
out
fcomp
scas
leave
push
push
cmp
movsb
fdivl
sub
fnstcw
int
out
pop
int3
mov
sti
jae
inc
insl
bswap
adc
sahf
lret
xor
cwtl
fld
stos
js
popa
fcoml
mov
shl
pop
int3
scas
fildl
jnp
and
sub
nop
test
inc
inc
mov
sbb
add
sub
test
xchg
xchg
fucomp
xor
mov
mov
mov
inc
adc
test
sbb
icebp
sarl
sbb
aad
leave
sub
es
je
add
popa
mov
clc
cmp
add
pop
or
pop
push
mov
mov
test
pop
mov
push
mov
pop
dec
mov
push
sbb
dec
adc
sub
test
pop
pop
sbb
dec
add
stc
stos
xchg
jle
aas
mov
nop
insb
stos
adc
and
pop
outsl
mov
cld
mov
popf
sbb
xorb
out
lcall
hlt
or
mov
add
negb
adc
es
dec
xchg
fldl
jnp
outsb
xchg
mov
push
test
es
lods
mov
xlat
pop
xchg
loope
imul
pop
jae
xor
cld
adc
ret
out
mov
and
leave
cmp
adc
imul
or
test
outsl
ret
movsb
int
inc
lds
inc
insl
xchg
pop
jno
jb
arpl
mov
sbb
pop
repnz
push
adc
dec
ja
in
cmp
dec
mov
jae
push
inc
outsb
and
outsb
push
rclb
sbb
push
fsubr
xor
mov
aam
loop
inc
loope
vmovsd
fs
xor
js
xor
lcall
dec
add
xchg
mov
push
lods
xor
int3
dec
xchg
lea
test
movsl
fcmovbe
or
pop
jo
sbb
xchg
scas
pop
mov
xor
sbb
cmp
in
cmp
ja
or
ds
cmp
lcall
mov
and
test
mov
jnp
mov
mov
stc
rcr
mov
push
mov
inc
mov
sub
dec
mov
out
jbe
xchg
dec
ret
and
mov
xchg
daa
inc
inc
push
les
iret
cwtl
cmp
sub
test
jno
lea
in
nop
mov
or
inc
adc
fmulp
cmp
mov
pop
push
lods
sahf
ss
jp
loope
mov
jbe
lock
or
xchg
dec
scas
data16
popf
xchg
repnz
and
loop
jne
adc
mov
popa
and
aaa
movsb
mov
loope
mov
xchg
and
dec
push
scas
js
outsb
or
into
sti
out
jge
outsb
into
hlt
lods
inc
pop
push
xchg
pushf
fistpll
jno
add
inc
push
push
adc
pop
aaa
cli
rol
int
aas
repnz
mov
aad
pop
mov
jne
dec
fnsave
out
mov
loope
push
push
call
and
dec
stos
pminsw
fwait
xor
loop
push
lds
sub
std
mov
cli
dec
data16
mov
insb
xlat
inc
repz
pushf
dec
fbld
jmp
adc
sbb
adc
xor
pop
iret
add
popf
shr
and
xor
push
shr
roll
dec
jbe
jp
cmp
xchg
icebp
xchg
in
pop
in
pop
pop
incb
or
les
cmp
loopne
mov
cmp
sub
in
sbb
in
push
lods
add
mov
pusha
jbe
in
or
cmc
add
mov
sbb
js
clc
xor
roll
clc
xchg
out
dec
cltd
scas
es
sub
ds
std
sub
loopne
das
std
add
rorl
or
dec
scas
cmpb
ds
imul
add
mov
test
rol
ljmp
das
divl
sub
lock
nop
into
dec
fidivs
inc
daa
cmp
add
mov
out
push
push
fldl
jo
lret
lea
ficoml
add
cld
push
mov
adc
sbb
dec
pop
lock
repnz
mov
stos
imul
aas
mov
cmc
cmp
pop
add
dec
push
jbe
sub
cmp
adc
scas
iret
and
pop
inc
push
xchg
inc
clc
adc
sarb
add
int3
push
mov
push
mulb
test
shr
mov
add
das
jp
sbb
ds
pop
adc
repnz
mov
js
pop
push
mov
out
cmp
ss
and
jmp
jp
cli
adc
jbe
aad
dec
pusha
cvttps2pi
cmp
jmp
jmp
clc
xor
jge
adc
pop
inc
mov
into
mov
int3
or
xchg
cmp
fldl
jle
insb
cmc
push
dec
jnp
xchg
dec
shlb
imul
rclb
inc
ds
daa
jo
sbb
roll
or
sti
imul
cltd
imul
push
pop
and
hlt
adc
mov
cltd
dec
xchg
adc
iret
add
mov
mov
sub
xor
testb
push
jbe
movsl
pop
outsl
pusha
adc
pusha
mov
add
orl
jnp
sahf
cmpsb
mov
cs
mov
push
pop
mov
loop
push
fnsave
dec
arpl
push
mov
ficomps
and
adc
cmp
cld
xor
mov
pop
or
ds
ds
test
xlat
pushf
adc
enter
cmpsl
lcall
mov
lcall
cmp
stc
inc
sti
mov
jns
sub
mov
cmc
call
mov
movsb
mov
int3
test
inc
sub
std
pop
adc
mov
rclb
sbb
data16
adc
push
rcll
movsl
ljmp
mov
mov
push
fisubs
lods
add
imul
ret
lds
pop
ds
lock
push
push
inc
outsl
mov
repz
xchg
pushf
lcall
insb
pop
outsl
out
and
shrl
rorl
fdivrs
pop
xchg
mov
sbb
xchg
movsb
fwait
mov
iret
sbb
mov
lock
pop
les
jle
sti
mov
les
sbb
and
sti
lea
cmp
xchg
fs
or
mov
test
movsl
mov
ret
sub
daa
adc
aaa
push
dec
into
sarl
lcall
jne
cmp
xchg
cmpsb
sub
ss
jle
jae
xchg
xchg
jns
mov
push
cmp
push
andl
call
mov
lds
sahf
lods
out
push
mov
mov
test
cmp
xchg
or
sub
inc
add
out
pop
shl
pushf
inc
cwtl
ja
inc
add
sub
in
adc
or
enter
adc
or
push
lods
ljmp
mov
popf
roll
clc
pop
pop
fsubrp
repnz
dec
popa
scas
imul
jnp
xor
push
mov
call
lcall
in
imul
int
ror
fisubrl
push
cwtl
shll
outsb
sahf
inc
daa
jecxz
xor
js
sub
dec
jb
fdivl
and
pop
sub
adc
mov
testb
aam
cltd
das
std
inc
xchg
dec
test
icebp
mov
mov
nop
mov
mov
nop
and
mov
lea
pop
aam
mov
in
popa
stc
push
mov
lret
mov
bound
cmc
dec
xchg
dec
cmp
gs
mov
and
icebp
dec
nop
negl
jo
push
jb
cmpsl
mov
dec
mov
push
mov
mov
fsubrl
subl
lods
hlt
scas
sub
dec
and
push
test
pop
fcoms
mov
cmp
mov
mov
test
jp
icebp
mov
jp
xchg
add
stos
mov
push
and
in
fmull
sub
scas
inc
les
inc
jns
nop
and
das
add
xchg
jae
pop
out
out
cmp
dec
jp
push
int3
push
jo
pop
or
dec
and
sbb
sbb
ret
out
ret
lret
ret
rorb
es
add
cli
push
cmpb
push
in
inc
jecxz
nop
out
cmp
nop
ja
mov
stc
sahf
fcomi
sub
mov
xchg
dec
and
fldt
jb
out
mov
mov
mov
add
pushf
insl
sub
jle
cmp
fsubrp
xor
mov
add
dec
nop
lock
repz
popf
adc
sbb
testb
rorb
imul
pop
dec
cmp
roll
fidivrs
fildll
enter
lea
jl
xchg
sub
int3
mov
add
mov
cmp
movsl
lods
xchg
pop
mov
aad
notb
in
xchg
decl
shlb
mov
push
fidivrl
popf
dec
mov
setb
push
pop
lock
mov
outsb
ljmp
shlb
repz
jnp
mov
cmpsb
rorl
dec
push
movsl
jmp
imulb
repnz
pushf
stos
lock
fmull
push
lods
loopne
jo
mov
inc
adc
mov
cs
lret
jbe
dec
daa
ret
sub
pop
cmp
inc
add
data16
and
and
sub
stos
or
and
xchg
sub
pop
and
mov
jno
ja
mov
adc
jnp
fninit
aaa
adc
xchg
lcall
jne
adc
fpatan
dec
popa
adc
hlt
cmc
jle
add
loop
pop
xor
mov
cmp
int3
sarb
ret
loope
add
out
imul
mov
or
jns
pop
test
push
loopne
push
jae
enter
loop
sbb
pop
cmp
mov
and
imul
inc
xchg
pop
cs
jbe
dec
sbb
jge
jl
add
inc
mov
daa
cmp
js
ljmp
or
dec
addr16
fcoml
hlt
ljmp
enter
idivb
test
or
cltd
loopne
stc
fdivrs
pop
popa
push
xor
pop
pop
mov
push
mov
pop
lret
test
add
mov
fldl
mov
cmp
cmp
cwtl
dec
rcrb
mov
movsb
cmpsl
sar
cmpsl
adc
or
fisubrl
cltd
loopne
loopne
addr16
sub
nop
out
adc
push
adc
pop
sbb
inc
pop
in
adc
in
add
test
in
nop
ret
mov
sbb
pop
mov
jmp
push
push
insl
pop
inc
and
int
sub
dec
jle
jbe
xchg
push
xor
dec
out
loop
gs
cli
ljmp
lahf
pop
and
outsl
sbb
mov
adc
inc
clc
fsts
mov
dec
mov
inc
scas
daa
push
ret
pop
xchg
jb
call
inc
stc
and
cli
scas
push
sarb
lods
jmp
fdivrl
or
icebp
shll
popa
lret
imul
jnp
daa
not
pop
cld
xchg
pop
movsl
mov
imull
nop
adc
ss
cmp
cs
test
sub
xchg
iret
add
cmp
mov
sbb
mov
jecxz
ret
jp
xor
jnp
das
xlat
push
fwait
cltd
adc
insl
jae
ja
fidivs
mov
jb
imul
les
pop
out
call
sub
hlt
push
jl
hlt
in
cmp
movsb
dec
or
mov
mov
insb
ds
fimuls
pop
addr16
stos
lcall
rcrl
pop
aam
pop
dec
in
mov
xchg
loope
repz
out
mov
in
clc
jbe
cmp
imul
jnp
mov
sahf
add
mov
aaa
loopne
push
mov
pushf
mov
or
dec
repnz
js
call
or
sbb
stos
mov
mov
nop
adc
ret
mov
cwtl
or
mov
and
vmwrite
mov
jnp
push
ret
inc
mov
rcrl
or
imull
mov
add
sti
jb
inc
icebp
test
push
jne
mov
add
push
into
stos
mov
rcl
and
mov
push
pop
mov
pop
leave
insb
add
pop
inc
or
test
and
sbb
jge
mov
loopne
dec
xchg
cmp
pop
mov
popl
pop
jp
add
jg
mov
cmp
cmc
loop
xchg
adc
xchg
hlt
mov
mov
mov
adc
int
int
cmpsb
jecxz
bound
lret
add
sbb
xor
xchg
lods
push
xor
and
iret
jns
mov
cli
sbb
or
jbe
mov
ja
inc
sbb
and
push
fiadds
stc
outsb
hlt
push
push
pop
aaa
add
popf
pop
jmp
repnz
imul
adc
mov
pop
cmp
jecxz
fsubp
mov
lret
xorb
sbb
data16
aam
rorb
xlat
insl
add
pop
and
xor
gs
orb
mov
jle
inc
mov
mov
jmp
je
ds
pushl
jbe
repz
ljmp
pushf
fwait
jo
stc
sar
dec
mov
and
dec
out
sysenter
mov
lret
out
pusha
cmpsl
cltd
incl
imul
jmp
lahf
mov
cmp
cltd
sbb
ret
jecxz
lahf
inc
add
cs
or
pop
xchg
jg
call
pop
xor
inc
xor
mov
mov
mov
mov
mov
jne
push
or
cmp
lea
sub
test
es
out
cmpsb
mov
pop
dec
lea
xchg
lahf
in
fsubs
mov
xchg
fdivr
dec
cmp
ljmp
mov
loopne
ffreep
cmpl
cs
push
out
mov
ficomps
lods
mov
pop
popf
xor
xchg
pop
out
sahf
jg
xlat
lcall
lahf
pushl
push
xor
fstpt
aad
in
xor
inc
cli
jge
stc
xor
aas
fistl
fcmovnbe
pop
aad
std
sbb
ret
cmp
and
insl
jae
push
push
push
push
mov
jg
filds
in
xorl
fildll
mov
hlt
stos
dec
sbb
roll
mov
jecxz
pusha
push
pusha
inc
cmpb
loop
lea
jmp
shlb
mov
sbb
xchg
lahf
dec
lock
dec
das
xorl
les
mov
xor
push
mov
std
std
or
inc
sti
sub
mull
sub
jb
xor
mov
aam
mov
sbb
add
xchg
jnp
or
xchg
icebp
push
fucomip
data16
inc
filds
shr
push
mov
xchg
pusha
ss
mov
pop
js
mov
and
cld
push
mov
fld
sti
xlat
push
rclb
out
ret
test
adc
imul
repz
sub
jp
sub
cmp
sti
or
loopne
shlb
sbb
out
xchg
adc
cltd
in
push
xchg
mov
add
ret
loope
test
outsl
cltd
pop
out
shll
mov
xchg
sub
cmp
nop
pop
repz
int
scas
movsl
xor
mov
inc
mov
loopne,pn
adc
jmp
sbb
mov
adc
push
inc
mov
cli
fnstenv
mov
and
or
cmp
cmp
pop
mov
cmp
lds
pop
fbld
cmpsl
filds
cmp
mov
lahf
inc
fcom
cmp
ret
pop
loopne
dec
jno
inc
fwait
dec
jmp
xor
test
leave
dec
jnp
outsb
fwait
adc
inc
arpl
call
testl
jl
mov
fs
repnz
psrlq
lock
imul
aam
loopne
jg
sahf
hlt
std
fdiv
loop
pop
pop
add
inc
add
mov
fnstenv
push
push
lock
insl
popa
inc
mov
push
add
repnz
pop
adc
cmc
aas
movsl
mov
sbb
jno
sub
push
in
loope
cli
pop
sti
dec
test
sbb
fdivr
fyl2xp1
dec
push
xchg
test
xor
add
movsb
scas
je
cwtl
enter
pushf
jae
jae
fcoms
rcrl
sarb
das
dec
outsb
fneni(8087
fldt
lahf
fildll
push
sahf
into
pop
and
mov
xchg
xchg
pop
sti
nop
xor
les
sbb
mov
and
out
add
loope
pop
and
leave
add
pop
and
sbb
xchg
fdivl
addr16
js
xchg
or
adc
insb
mov
cmp
sbb
jne
dec
add
add
mov
cmpsl
cmpb
cmpsb
int
and
imul
fcomps
inc
mov
loop
iret
mov
pop
pop
push
gs
sti
std
mov
ss
loop
jb
xchg
sbb
add
sub
data16
cmp
or
mov
xchg
test
cld
sub
inc
mov
pusha
dec
xorl
mov
mov
fidivrs
push
gs
push
adc
movsb
mov
lahf
inc
lods
dec
push
int3
sub
or
inc
mov
sub
inc
std
or
cmp
test
dec
add
cmc
pop
cmc
gs
adc
mov
jl
stos
adc
aam
sbbb
jnp
bound
imul
sarl
adc
dec
inc
test
lods
sbb
out
hlt
inc
iret
or
push
add
cld
jge
jg
or
or
mov
pop
push
adc
inc
xchg
inc
inc
mov
sti
dec
push
cmpsb
scas
stos
add
dec
pop
mov
jmp
ja
mov
scas
xchg
xchg
mov
filds
lea
or
jns
mov
fs
dec
push
dec
mov
pop
movsb
lret
sbb
nop
mov
xchg
ljmp
test
mov
cli
dec
stos
mov
cmp
dec
scas
xchg
adc
sbb
add
stc
insl
mov
lret
clc
inc
je
ljmp
clc
outsl
sub
icebp
mov
jo
scas
mov
movsb
mov
cmp
mov
and
cmp
mov
adc
dec
pushf
cmpsb
adc
or
loope
mov
jno
leave
lds
mov
daa
je
fistl
inc
rcrb
jmp
lds
sbb
jae
movsb
nop
or
aad
sbb
push
rorl
dec
pop
push
fs
pop
pop
or
loope
mov
dec
in
cmp
or
cli
mov
jno
pop
pop
jmp
xchg
lret
jne
xchg
mov
mov
xchg
push
cmp
movsb
out
call
lcall
mov
rorl
sbb
cmpsb
sub
test
test
sbb
mov
shll
push
cmc
xlat
out
faddp
adc
push
or
push
imul
push
aad
xchg
inc
and
jo
mov
and
inc
sarb
mov
sbb
cmp
cmp
push
xor
pop
xchg
pop
lret
popa
mov
inc
push
xchg
cmpsl
mov
ljmp
stc
lahf
xchg
ss
shlb
lcall
clc
xor
out
xchg
ljmp
push
ror
jg
mov
out
xchg
scas
sbb
cmp
pop
call
mov
gs
pop
aas
inc
out
inc
pop
addr16
xor
sbbl
fs
insl
xchg
idivb
dec
aaa
cmpsb
es
jle
or
into
jecxz
std
sbb
mov
ss
sbb
dec
test
movsl
insl
xchg
mov
sar
jne
inc
or
jbe
sbb
jp
xlat
int3
lods
pop
sahf
pop
movsl
stos
cmc
pop
push
popa
aaa
mov
inc
sub
loopne
push
pop
jnp
sub
xchg
cmp
push
ret
adc
arpl
pop
mov
repz
rolb
loopne
add
jmp
jb
dec
in
push
fistps
xchg
sti
xchg
out
pop
sub
ds
jge
sbbb
push
in
lods
xchg
pop
sahf
sub
lods
stos
push
in
xchg
cmc
ljmp
sbbl
pop
sub
fwait
adc
js
push
out
repnz
cmp
add
movsb
ret
push
mov
mov
fistps
mov
in
cli
arpl
add
adc
push
in
arpl
sarl
dec
movsb
push
jns
ret
outsb
iret
dec
adc
fimull
dec
inc
jbe
mov
xlat
lods
imulb
add
dec
or
xor
in
mov
dec
push
iret
jmp
divl
nop
xchg
imul
inc
bound
jns
jle
add
sbb
push
push
out
cmpsb
jnp
call
xor
popf
test
jle
sub
pop
xchg
mov
fsubrl
xor
fucomp
sub
xor
jg
out
or
shrb
lea
cmc
sbb
shll
mov
xor
bound
mov
inc
insb
push
push
mov
pop
pop
je
inc
ljmp
mov
xchg
enter
cmc
out
lock
fadds
int
dec
jae
js
cld
cmpsb
mov
sub
or
pushl
ljmp
mov
movl
mov
dec
fwait
mov
icebp
push
add
inc
cld
into
inc
add
mov
lods
pop
out
stos
xor
adc
or
xchg
ljmp
loopne
push
js
nop
adc
lea
popa
sbb
or
movsb
xlat
ficomps
push
fcmove
sub
pop
flds
insl
mov
xchg
pop
loopne
loop
es
arpl
data16
jno
mov
mov
out
mov
fwait
rsqrtps
and
adc
dec
fs
js
mov
aaa
dec
mov
xor
mov
loopne
scas
outsb
fwait
and
add
sub
and
mov
pop
mov
addr16
fstps
jecxz
or
in
pop
sub
add
hlt
mov
mov
aaa
xchg
mov
scas
not
jmp
lods
das
nop
das
dec
in
dec
or
mov
sub
mov
jmp
push
jae
adc
ret
pop
popa
js
mov
pop
push
xchg
test
pop
sub
in
inc
cs
sbb
adc
int3
popa
test
stos
fisubs
repnz
xor
je
pop
mov
xor
mov
js
pop
sbb
cmp
xor
nop
dec
mov
mov
dec
pop
mov
lahf
adc
mov
fsubrs
adc
in
add
sbb
jecxz
and
aam
inc
sti
repnz
xlat
in
imul
push
imul
mov
mov
add
mov
xor
call
mov
lcall
rcll
decl
js
xchg
add
pusha
outsl
mov
pop
add
aaa
sbb
lds
loop
add
sahf
loopne
out
scas
xchg
shlb
or
xor
mov
adc
leave
int
jge
cltd
cs
cmpsb
xchg
push
cmp
lock
inc
add
sbb
cltd
stos
fldt
mov
mov
mov
adc
dec
rcll
mov
adc
aaa
dec
loop
clc
jno
xchg
pop
cmp
add
pcmpgtd
pop
shll
xchg
jnp
popf
shr
out
jl
mov
xchg
sbb
xchg
push
addb
mov
loop
iret
fidivs
push
push
xor
repnz
jb
mov
test
inc
cltd
sub
or
test
pop
push
repnz
data16
sbb
pop
xchg
or
pop
shl
jge
dec
shll
in
test
fcoms
add
mov
scas
push
mov
das
add
mov
and
push
dec
test
push
pop
or
into
aas
sub
jno
mov
mov
bound
movsb
mov
sbbb
add
xchg
dec
sbb
xchg
fwait
xor
cmc
push
xchg
cmp
test
neg
cmc
mov
out
mov
icebp
int
sbb
das
test
sbb
mov
pop
push
xchg
pop
aas
mov
leave
fdivs
out
lahf
xchg
inc
test
push
mov
push
mov
bnd
sub
cmp
pop
leave
adc
cmp
jle
lahf
xor
jmp
jnp
mov
adc
push
jp
inc
push
hlt
in
repnz
paddq
push
pop
mov
jge
rcll
xchg
inc
sahf
int
push
mov
xor
cmp
inc
mov
mov
lahf
stos
mov
test
sbb
mov
scas
fdivrl
xchg
sbb
inc
inc
inc
inc
lret
push
mov
xlat
pop
movsb
aas
mov
repz
jns
adc
or
enter
fsubrl
jle
int3
loopne
push
xor
xlat
mov
lahf
and
scas
jb,pn
xchg
dec
mov
mov
insl
sbb
adc
adc
jb
xchg
in
jns
jg
iret
cld
jns
aad
icebp
xor
fsub
xchg
fcmovb
sub
movsb
cmp
popa
push
or
sarb
outsb
es
cmp
aad
fsubs
divl
push
sbb
pop
mov
mov
fdivrs
mov
mov
hlt
pop
push
mov
xor
cmc
sub
mov
sarl
into
lret
cmp
jge
jge
sub
fisubrl
fcompl
les
lea
mov
adc
daa
xchg
mov
mov
cmpsb
mov
cmp
mov
pop
test
xor
fcos
aaa
jne
js
xchg
mov
imul
je
cmp
imul
pop
sahf
fdivrp
jae
jno
fistl
add
aam
icebp
or
testb
testb
or
jns
out
pop
inc
sbb
insl
iret
ljmp
dec
dec
and
pop
push
movsb
push
sbb
nop
sbb
stos
in
orl
xorb
out
sub
cltd
ret
jae
addr16
xor
pop
mov
mov
ret
jl
rorb
ret
push
popf
mov
lds
je
cmpsl
mov
loope
dec
xchg
mov
dec
xchg
push
cmpsb
lock
xor
jp
scas
repz
mov
jecxz
pop
mul
pushf
lcall
fiaddl
adc
adc
or
jne
clc
xchg
rcr
push
lea
pop
dec
stos
jl
mov
cmpb
push
dec
imul
xchg
outsb
mov
xor
ficoml
jp
or
loopne
mov
or
xchg
mov
and
mov
std
add
lods
les
call
in
scas
adc
repnz
fcomps
mov
pop
ret
sbb
xchg
dec
sub
and
sbb
sbb
insl
hlt
mov
jecxz
pop
stc
add
es
ljmp
ljmp
xchg
mov
push
fsubs
jle
dec
jb
arpl
jb
add
incl
mov
sub
jge
icebp
add
repz
loope
or
gs
fisubrs
or
jb
mov
mov
jl
insb
in
xchg
adc
fnstenv
pop
std
sbb
cmp
or
out
lret
and
cli
inc
jp
and
dec
push
stos
mov
js
and
fsubs
sub
push
loopne
push
adc
mov
xchg
clc
mov
xchg
cmpsl
lea
dec
imul
sbb
pop
push
pop
test
insl
dec
inc
bound
sub
pop
fiaddl
inc
jp
mov
imul
test
dec
or
pop
test
push
jecxz
push
xchg
out
popa
fstl
out
sbb
or
dec
loop
xor
ret
add
inc
mov
mov
in
in
clc
mov
dec
pop
and
outsl
imul
sti
lret
orl
cmp
addr16
cmp
loopne
cmpl
daa
pop
repz
jl
add
and
shl
push
sti
jne
jle
mov
mov
shlb
or
push
cli
loop
push
int3
cmp
sahf
cs
adc
aam
push
cmp
add
xor
shrb
push
sub
push
aam
movsb
ljmp
push
int
mov
adc
nop
inc
loopne
fucomi
lock
test
adc
pop
loope
mov
repz
dec
daa
inc
jl
das
xor
scas
test
shr
mov
incl
push
out
sarl
mov
mov
or
clc
test
dec
or
mov
push
adc
mov
mov
mov
mov
pop
test
repnz
test
jo
lds
dec
scas
mov
push
fadds
xor
mov
dec
pop
jae
daa
stc
lahf
push
aas
inc
insb
jno
stos
adc
pop
jne
nop
scas
shll
test
adc
add
shr
mov
add
cmp
adc
std
arpl
adc
xor
int3
daa
sub
xlat
or
sub
shrd
inc
repz
ljmp
and
xchg
pop
push
jno
sub
imul
inc
dec
out
sbb
lret
cwtl
mov
sub
xchg
mov
and
lahf
popf
mov
pop
out
pushf
mov
push
jne
mov
sub
add
mov
out
mov
xchg
lds
notl
pop
scas
and
xor
sar
pop
pop
sbb
mov
fidivs
mov
push
sbb
adc
test
and
inc
push
cld
fisubrl
scas
arpl
shr
ds
test
xor
gs
cltd
stos
sar
pushf
inc
aad
mov
fs
adc
gs
mov
mov
cmpsl
mov
mov
jl
jge
jg
push
cmp
mov
or
pusha
ljmp
test
pusha
addb
add
mov
ds
adc
inc
dec
mov
roll
gs
xchg
popa
pusha
adc
jge
inc
lahf
adc
ficomps
sti
inc
sub
ds
pusha
movsl
rcrb
push
hlt
shlb
sub
lock
mov
es
jns
insl
jae
scas
daa
imul
ret
inc
mov
nop
jo
icebp
dec
mov
cmova
shr
dec
pop
xchg
aad
mov
aaa
fistps
sbb
sbb
mov
test
sti
das
inc
cmp
out
test
iret
mov
addl
cmp
push
popf
iret
inc
jge
js
xor
jmp
cmp
inc
xchg
out
cltd
mov
les
mov
dec
adc
xlat
mov
push
pop
out
dec
cmp
xor
sub
mov
lea
mov
add
stc
jmp
and
or
mov
mov
push
cmp
push
in
fdivrs
mov
jp
push
dec
jns
cmp
hlt
test
sub
sub
jns
fsubl
ja
int
jg
lret
andb
lret
cwtl
adc
push
xor
ret
pop
jne
push
add
clc
adc
sub
stc
xchg
outsb
lret
shrl
shlb
das
add
cld
lods
sbb
fsubr
jmp
mov
inc
ja
inc
dec
cmc
push
add
lods
adc
addr16
push
adc
lret
push
xchg
lods
fcoms
fcmovne
jmp
sbb
mov
cltd
pop
adc
notl
adc
ja
stos
jbe
loop
and
rorb
enter
add
xchg
cwtl
mov
mov
lods
rol
fnstenv
push
ss
aas
xchg
movsb
cli
test
sub
jb
dec
mov
mov
adc
popf
test
imulb
addl
andl
nop
aad
sbb
cmp
adc
stos
sbb
push
push
sub
pushf
jecxz
dec
orl
pop
push
nop
mov
xor
sub
mov
mov
int3
gs
jno
dec
mov
lods
mov
lcall
sub
outsl
ficoml
je
push
jne
std
jmp
inc
and
xor
mov
mov
xchg
pop
shrl
sub
aas
cmp
inc
xchg
ret
sbb
scas
jno
outsl
cmp
arpl
jno
mov
fdivs
insb
mov
jo
adc
adcb
sub
leave
xlat
dec
adc
cli
sbb
sub
and
cmp
pop
lcall
xorb
or
daa
sahf
mov
shrl
add
addr16
sbb
js
jo
stos
add
mov
rcrl
std
xchg
out
mov
lods
mov
mov
push
xor
or
pop
aad
dec
xchg
jbe
dec
in
sub
pop
mov
loop
xor
xchg
mov
movsb
repz
and
mov
int3
mov
adc
cli
dec
testb
cmp
scas
ja
xor
xchg
push
or
in
add
jmp
imul
lds
cmp
stc
add
faddl
cli
mov
scas
push
in
mov
or
in
sub
xchg
mov
insb
and
repz
arpl
cmp
mov
inc
mov
inc
inc
jmp
ljmp
cmp
jl
xchg
out
iret
scas
out
xlat
mov
mov
sbb
pop
dec
repnz
popf
sub
xor
inc
jnp
add
clc
cli
ljmp
dec
cmp
fidivs
lret
and
mov
xchg
int
push
jp
mov
fcmovnbe
mov
cltd
sub
insb
sbb
loope
js
jle
lods
mov
push
xorl
fmull
jae
mov
mov
xor
xchg
scas
std
movsb
push
sbb
scas
rclb
jle
jg
sub
add
mov
cmp
aaa
mov
sub
xchg
icebp
ljmp
xchg
aam
icebp
mov
std
lods
icebp
sub
xlat
test
cmp
cs
jne
inc
pop
sub
add
adc
test
mov
inc
std
dec
adcb
xor
push
sti
ret
in
push
xlat
enter
sub
aad
pushaw
push
pop
das
xlat
sub
mov
jp
aas
in
push
inc
movsl
pop
imul
push
sub
cmp
mov
test
cmp
push
xchg
enter
push
adc
and
ret
sub
stos
ret
cmp
and
and
mov
pop
or
mov
pop
mov
jo
push
xchg
mov
xchg
mov
jmp
lret
cwtl
movsb
hlt
xchg
out
int3
pop
roll
pusha
sub
sahf
out
outsl
sub
cs
cld
cs
dec
add
cmp
sub
ds
popf
fdivrl
mov
mov
xchg
clc
ds
sub
sbb
shrl
xchg
or
shlb
jno
mov
jecxz
mov
das
hlt
lock
out
out
add
fstpt
stc
enter
addr16
pop
xchg
gs
test
scas
inc
jge
jmp
sarb
lcall
xor
add
repz
xor
jge
cmpl
jl
fisttpl
or
and
fnstsw
imul
push
inc
jmp
fcmovnu
push
mov
popl
mov
repnz
xchg
ljmp
sub
jae
push
jae
mull
sub
ss
scas
sub
aad
into
and
fbstp
mov
xor
insb
mov
xchg
jg
adc
and
mov
cmpl
pop
lds
mov
popf
cmp
xchg
or
sub
xchg
aad
mov
sub
xor
dec
pop
fs
add
jns
inc
dec
mov
push
test
adc
push
pop
ds
pusha
add
add
push
repnz
sahf
push
fs
add
daa
mov
mov
xlat
pusha
mov
pop
test
test
mov
push
scas
or
stc
mov
cmp
mov
loopne
jns
pop
insb
cmpsl
sahf
shll
sarb
insl
add
jp
mov
add
and
loopne
maxps
out
push
fidivrs
adc
jecxz
nop
divb
cmpsb
mov
pop
out
lock
scas
rclb
xchg
push
pusha
mov
xchg
das
dec
movsb
mov
loopne
or
mov
sbb
sti
les
cmp
insb
mov
pop
mov
mov
or
js
aas
fcmovu
sub
jb
push
push
add
sbb
mov
sub
add
adc
xor
lds
and
aaa
sbb
std
lcall
adc
loop
pop
je
jo
lods
cmpsl
fldl
push
jnp
imul
sub
mov
mov
pop
xchg
pop
fbld
icebp
loope
aas
rcrl
aam
pushf
adc
mov
push
mov
xchg
aad
in
pop
or
cmp
ret
into
sbb
cmp
daa
cs
js
push
gs
scas
sbb
mov
mov
jg
pop
and
adc
and
and
imul
inc
jg
mov
call
pop
in
mov
mov
jp
push
lock
enter
mov
popf
in
aaa
in
jns
add
or
and
pop
cmp
push
int3
push
dec
xchg
je
dec
daa
insb
test
repnz
mov
repnz
mov
ret
sub
cmpsb
cmp
fcoms
outsb
sub
mov
mov
sub
sub
mov
scas
out
push
outsb
stos
aad
dec
ret
icebp
xlat
cltd
pop
das
jo
movsb
push
jmp
mov
aam
stc
daa
cltd
xor
xchg
push
jae
add
adc
test
movsb
cli
mov
mov
or
pop
in
movsl
imul
add
inc
mov
pop
mov
and
adc
nop
call
ljmp
notb
sbb
push
lret
test
mov
jg
loope
mov
push
stos
jmp
jmp
loope
testb
mov
scas
orb
mov
sbb
push
out
xchg
dec
push
push
sub
cmp
sbb
adc
xchg
mov
mov
cwtl
add
movsl
test
cmp
cli
and
mov
xor
sbb
icebp
repz
cmp
and
jmp
xchg
ds
and
repz
jbe
xor
stos
iret
decb
ljmp
mov
mov
add
fucom
push
cmpsb
out
cmp
mov
insl
cltd
das
mov
dec
mov
or
pop
sub
xor
push
scas
mov
pop
lret
dec
or
outsb
cld
push
add
and
fistps
outsb
out
pop
jl
mov
mov
lock
push
out
insb
pop
push
scas
clc
stc
pusha
test
int3
dec
lcall
movsl
pusha
sbb
dec
in
mov
mov
mov
jmp
imul
cwtl
cmp
inc
mov
jmp
fs
xchg
dec
imul
subl
dec
cmp
mov
sub
xchg
pop
mov
lds
out
scas
andb
pop
fiaddl
sub
mov
pop
push
lret
dec
jp
ja
push
fisttps
push
flds
movsl
gs
arpl
adc
mov
je
sub
mov
adc
jnp
test
test
cs
adc
dec
push
mov
mov
imulb
in
sub
xchg
or
lea
fstps
pop
stos
xchg
and
stos
mov
push
pop
fimuls
xor
xlat
jbe
and
fists
mov
cmc
std
stos
dec
xchg
imul
cmp
ljmp
sub
cmp
inc
inc
mov
pop
xchg
cmpsl
inc
nop
xchg
mov
sub
shlb
push
dec
ss
push
movswl
jge
sbb
cltd
inc
aas
fwait
je
sub
mov
adc
and
fnstcw
icebp
add
lahf
sbb
je
in
enter
das
sar
call
and
das
xor
sub
and
ficompl
stos
dec
frstor
inc
aaa
int3
sub
out
out
sub
hlt
insl
mov
mov
jnp
das
jmp
cmpsb
push
dec
add
outsl
test
sbb
mov
sub
out
jno
pop
in
cmp
sbb
and
lcall
mov
clc
aas
xchg
data16
loopne
mov
jge
inc
sbb
hlt
jb
fs
mov
mov
lea
cmpsb
dec
dec
ss
cli
fistpl
and
fs
sub
cmp
rcrb
lods
ja
fists
inc
sub
sub
mov
inc
negb
cmp
dec
cmpsb
sub
cwtl
movsb
orl
lods
inc
adc
test
adc
mov
lret
mov
xchg
loopne
sub
mov
inc
outsb
mov
pop
xchg
cmc
icebp
mov
addr16
jae
stos
scas
adc
add
cmpsl
lock
insb
push
fs
dec
cmpl
mov
lock
pusha
subb
testb
cmp
out
mov
pusha
mov
xor
xor
rorl
dec
adc
lock
outsb
in
jne
cmp
in
outsl
sahf
pop
das
rclb
push
fnstenv
xchg
jae
insb
mov
nop
add
in
cmc
fisubrl
in
dec
inc
outsl
loopne
xchg
in
cmp
add
insb
xchg
stc
imul
sti
sub
inc
pop
jg
xorl
adc
pop
imul
dec
imul
iret
dec
sub
sbb
sub
out
rcr
xchg
mov
es
icebp
fadd
dec
adc
xlat
lret
faddl
mov
mov
push
aam
push
es
cmpb
mov
pop
aaa
adc
xor
in
leave
lock
orb
pop
daa
cmpsl
mov
or
lds
xor
lahf
insb
xchg
data16
shrl
pop
sbb
negl
sbb
mov
aam
dec
jo
cmp
xchg
add
rorl
or
cmpl
es
test
lea
sbb
dec
mov
cmp
cmpsb
jne
dec
sub
adc
jb
dec
jo
sub
pop
sbbl
push
mov
cmp
dec
mov
sub
sbbb
push
pushf
into
loope
jmp
sub
out
jge
push
in
mov
xchg
jmp
cwtl
divb
adc
sub
shlb
cmc
lods
inc
lods
imul
xor
gs
push
mov
mov
jmp
je
imul
std
pop
push
repnz
sbb
stc
fisubs
jbe
sbb
mov
push
icebp
fisttps
cmp
adc
mov
test
sbb
jbe
add
cmpsb
xchg
jecxz
daa
pop
xor
xchg
enter
mov
aas
fistpl
xorl
pop
popa
mov
data16
push
test
ret
pop
mov
jge
jns
mov
xor
cmp
out
jecxz
inc
loopne
cmp
inc
fstps
fmuls
dec
adc
mov
inc
sub
and
cmp
clc
dec
inc
dec
ljmp
sub
adc
add
dec
sub
test
cwtl
pop
push
jge
enter
mov
sub
subb
cli
sahf
or
mov
lcall
out
ljmp
mov
dec
or
mov
data16
clc
cltd
sbb
mov
cmovge
aas
cmp
push
cmp
stc
dec
aad
icebp
pop
bound
popfw
rclb
scas
mov
lcall
jb
movsb
insb
jo
push
data16
data16
lods
push
pop
out
and
xor
or
fcmovnb
sbb
cmp
inc
xchg
stc
testl
sub
insb
adc
xchg
data16
add
pop
push
mov
shlb
mov
shl
das
into
cmp
ss
fdivrl
ss
sahf
test
mov
dec
les
ds
rclb
sahf
popa
and
add
sub
mov
loopne
dec
cmp
add
pop
shr
dec
adc
out
into
cltd
aaa
xchg
lcall
enter
movsb
mov
sbb
sbb
shll
sahf
xor
in
xchg
in
dec
xchg
xor
add
jmp
fsubs
pop
sbb
jmp
fwait
dec
shl
push
xor
dec
pusha
fcoml
or
mov
call
xchg
dec
ror
cmp
ds
fs
sbbb
mov
imul
out
lods
adc
icebp
pop
sub
sbb
push
dec
ret
sarb
subb
mov
notl
insl
and
jle
jl
adc
fimuls
rol
adc
test
outsl
xlat
jnp
fnstsw
mov
cltd
sahf
jp
pop
mov
imul
mov
outsl
mov
std
cmp
cmp
test
call
mov
xor
loopne
xchg
mov
in
loopne
adc
cmp
or
pushf
pop
nop
mov
fcmove
fistpl
adc
gs
imul
xor
fisubl
xchg
mov
mov
or
cmp
in
js
mov
rcl
mov
xor
xor
loop
sub
mov
fs
call
pusha
mov
roll
cmp
xchg
xchg
sahf
fldz
cld
push
add
push
popa
dec
movsl
sbb
fidivrs
or
dec
dec
arpl
xlat
push
movsb
push
mov
xor
sti
mov
sub
cmpsl
jecxz
leave
in
jg
mov
cmpsb
cmpsl
mov
pop
aas
ret
xchg
js
and
das
cmp
mov
rcll
test
leave
shr
inc
cli
lds
xor
cmpsb
sub
jp
ret
lods
imul
daa
add
cmc
jo
mov
mov
pusha
cmp
pop
jg
movsb
lods
out
inc
cmp
lock
mov
daa
adc
dec
or
push
adc
sbb
popa
xor
or
xor
cmp
dec
jns
sbb
movsb
lods
cmp
cmc
nop
scas
pop
int3
jmp
shrb
mov
sbb
xchg
ja
ljmp
xchg
or
jle
daa
inc
xchg
hlt
lea
sub
rcrb
mov
call
jno
fmuls
pop
mov
imul
test
iret
ret
outsl
or
adcl
leave
mov
idivl
xchg
lock
sbb
ja
in
pop
pop
push
test
push
mov
scas
cmp
push
hlt
sbb
lds
or
leave
xchg
addl
sbb
test
push
aas
sbb
pop
jp
push
push
pop
test
popf
ret
aaa
cltd
xchg
jae
or
pop
rcll
push
or
mov
leave
fists
cmpsb
dec
and
mov
cmp
stos
pop
scas
push
mov
add
inc
or
push
adc
sbb
xchg
stos
add
incb
jo
mov
loopne
push
pop
outsl
pop
pop
xor
mov
adc
adcb
mov
mov
sar
daa
xchg
rcrb
int3
push
ds
ja
in
cmp
add
push
or
imul
pusha
mov
sbb
test
xchg
aam
sahf
and
outsb
xchg
sbb
push
dec
ljmp
pop
adc
push
or
push
and
cmc
jo
outsb
out
sbb
orl
mov
adc
ret
cwtl
js
push
mov
inc
add
sub
push
jmp
data16
mov
cmpsl
shll
lock
dec
lcall
les
sub
emms
clc
ljmp
cld
outsl
repz
mov
jb
sub
enter
and
push
inc
icebp
pop
ljmp
pop
outsb
or
or
push
cwtl
enter
loope
loope
sahf
loop
mov
pushf
or
xor
mov
adc
inc
stos
stos
xchg
adc
mov
scas
pop
pusha
mov
sbbl
xor
adc
idivb
dec
or
enter
rclb
cli
mov
aaa
sahf
push
mov
adc
dec
xor
and
add
arpl
ds
movsl
mov
pop
mov
and
xor
orb
jmp
inc
xchg
cmp
push
adc
add
jecxz
fsts
push
lea
sbb
add
mov
lock
sub
lods
sbb
push
pop
push
sbb
xor
ss
aas
cmp
push
cltd
int3
cmpsl
jmp
cmc
addr16
jae
inc
lret
pmulhuw
mov
adc
sbb
mov
cmp
or
int
or
jne
sbb
pop
loope
jl
push
popa
rolb
popf
add
dec
xor
adc
lcall
or
les
push
xchg
push
jecxz
aam
data16
stos
jbe
sbb
pusha
or
add
out
hlt
mov
or
inc
loop
mov
cmp
lods
pop
aad
jns
and
jge
notb
mov
xchg
bound
inc
adc
popf
jns
mov
mov
idivl
push
inc
jg
test
and
jmp
aas
lahf
in
lds
fldcw
and
and
mov
out
jl
into
push
add
cmpsb
fstps
popf
mov
lret
mov
jg
xchg
shlb
pop
leave
std
jmp
xor
adc
push
mov
popf
loopw
ss
les
mov
scas
jo
aaa
cmpsl
fldl
xor
rcl
mov
pop
daa
xchg
stos
fcomps
pop
in
and
or
mov
clts
incl
orb
call
rcrb
bound
out
mov
test
popf
cmpsb
cmp
pop
xchg
movsl
aam
in
out
data16
mov
jne
repnz
fsubrl
popf
addr16
mov
jge
loope
daa
mov
roll
push
dec
addr16
scas
ret
push
clc
test
mov
shrl
cmp
int
mov
sarl
jp
aad
int3
mov
in
jmp
sub
or
adc
fdiv
ret
inc
jp
cmp
and
ja
dec
lds
repnz
jne
inc
cs
fs
aas
or
stc
mov
ret
pusha
ds
adc
cld
stc
dec
movsl
stc
shl
insb
cmc
loope
lock
dec
mov
xlat
or
test
pop
cltd
pop
or
pop
je
dec
pop
jmp
or
iret
imulb
lcall
jae
xor
add
mov
iret
addr16
iret
xlat
adc
push
enter
std
jp
mov
sti
int3
fmull
push
insb
push
les
jge
sub
xchg
fsubrp
cwtl
andl
inc
call
movsb
into
and
fs
mov
nopl
inc
mov
int
dec
add
xchg
cmp
sub
rolb
scas
jbe
stc
jmp
enter
jg
rol
mov
aaa
mov
jne
xor
mov
enter
movb
outsb
sbb
mov
mov
mov
jnp
imul
xchg
jns
pop
ds
imul
enter
sub
lahf
inc
sti
sti
loope
aas
or
mov
testb
decb
pop
and
popa
inc
pop
adc
icebp
adc
lock
test
stc
sahf
scas
arpl
pop
testl
iret
xlat
xchg
mov
es
mov
xor
add
fistpl
popf
ljmp
imul
aad
cmp
lock
mov
jmp
xchg
push
mov
repnz
and
std
or
stos
or
out
fwait
or
adc
lcall
mov
cmp
cmp
lds
and
and
jo
xchg
lods
push
mov
push
push
ret
add
fadd
push
push
fiadds
lock
rcll
and
out
mov
or
loopne
add
xchg
ljmp
shlb
popa
and
jno
dec
mov
push
addr16
push
lahf
out
scas
pop
addr16
aaa
pop
dec
and
pop
shll
lods
sub
imul
xlat
in
inc
mov
jg
jl
mov
mov
repz
mov
or
inc
dec
add
lods
mov
mov
imul
fs
jle
popf
inc
push
insb
cs
stc
bound
shl
xchg
arpl
mov
sbbl
ret
inc
popa
add
stos
in
fdivs
mov
in
xor
push
into
mov
stos
jge
and
dec
jb
xor
lret
xor
pop
je
mov
push
addr16
insb
jnp
jno
push
sbb
jo
rolb
fstpl
mov
adc
and
scas
mov
mov
mov
pop
mov
out
add
jle
adc
jecxz
add
pusha
xor
xor
in
fistpl
adc
inc
imul
cmp
add
cmp
imul
lahf
fcmovne
mov
loopne
pop
lret
ret
adc
sbb
adc
push
out
xor
add
sbb
stos
mov
mov
adc
inc
mull
sub
push
sub
movsl
shrl
out
sbb
scas
jbe
push
dec
xor
pushf
lods
pop
je
ljmp
jns
faddl
inc
mov
mov
pop
out
pop
mov
movl
jae
add
addl
and
and
fwait
inc
mov
in
and
cmp
mov
dec
xchg
push
adcl
addr16
push
lret
inc
cli
cmpsb
lret
inc
lock
test
testb
dec
in
pop
adc
sbb
ja
xchg
mov
push
loop
mov
fdivl
enter
aam
push
pop
jg
scas
movsb
pushf
imul
xor
bound
sub
lock
imul
repnz
push
lahf
push
sub
push
sbb
lods
mov
sub
adc
setp
pop
pop
pop
dec
or
mov
sub
lret
out
lods
or
movsl
scas
cli
pop
pop
das
push
out
ret
add
mov
inc
jnp
fidivrs
adc
repz
push
or
lahf
jge
inc
lea
arpl
insl
inc
adc
and
cmp
std
popa
push
or
lret
test
pop
inc
dec
add
cmc
dec
inc
xchg
rcll
rorb
push
hlt
popa
std
push
scas
pop
xor
dec
aam
adc
stos
cwtl
mov
std
out
mov
push
dec
cs
sbb
xchg
push
cmc
mov
mov
mov
aas
push
mov
push
test
pusha
popf
repz
mov
lds
adc
cwtl
sub
fwait
data16
in
stos
je
pop
mov
jo
lods
movsb
and
mov
stos
cmpsl
cli
cmp
js
or
xchg
aad
xchg
outsb
das
ljmp
sub
inc
sbb
sub
jo
adc
in
xchg
and
xor
cmp
xchg
std
sarl
sub
xchg
sbb
mov
loop
mov
add
push
lret
push
pop
pop
nop
sub
popa
mov
fmul
push
fisubs
mov
or
cmp
mov
and
dec
je,pn
ss
inc
and
fwait
nop
pop
push
fwait
std
scas
mov
xchg
push
ret
rclb
popa
out
loope
repz
cwtl
in
pushf
bound
movsb
iret
fwait
dec
adc
bswap
mov
jmp
add
idivl
mov
xor
movb
stos
les
das
mov
out
call
xor
loop
sub
movsl
mov
jb
ljmp
mov
int3
fsubrs
or
xchg
mov
subb
ret
lahf
clc
pop
add
inc
cmpsl
outsb
sahf
add
ret
fsubrs
rep
in
push
push
xor
mov
ss
xor
mov
js
add
jge
push
movsl
ss
push
xchg
js
lcall
andb
out
cs
push
adc
in
or
xor
adc
js
rolb
inc
mov
cmpsb
lock
add
sub
mov
mov
bnd
xchg
and
pop
adc
lds
jle
adc
add
rclb
pusha
mov
outsl
lods
imul
jb
lret
outsb
lahf
dec
dec
dec
cmp
lods
mov
sarb
xor
movsb
scas
mov
fwait
imul
mov
cmp
xchg
or
adc
push
mov
lock
test
loopne
pop
sub
repnz
fistpll
sub
jbe
movb
inc
iret
movsb
pop
stos
je
icebp
lcall
call
repnz
insl
fcomi
test
in
cmp
dec
add
xchg
std
pop
hlt
push
sbbl
negb
addl
out
stc
jmp
xchg
into
cwtl
sbb
fcmovnb
mov
cmp
sbb
in
mov
dec
aad
shll
dec
inc
jecxz
push
inc
repnz
or
or
fst
push
out
sbbb
pop
icebp
pop
push
or
test
xorl
mov
pushf
mov
jo
sbb
bound
adc
dec
and
outsb
ljmp
stos
jo
rcrl
std
stos
fnstenv
dec
xor
scas
cli
jno
call
xchg
inc
push
jbe
roll
fisubrs
stos
mov
jmp
mov
sbb
inc
arpl
test
loope
movsb
outsl
lock
xor
das
mov
ret
ja
lret
mov
lret
inc
cmp
fimuls
or
jle
dec
mov
addb
xchg
lret
ljmp
or
pusha
mov
push
xchg
dec
push
jecxz
js
ss
fs
into
lods
int3
in
jmp
mov
insb
or
dec
mov
stc
mov
sbb
push
loope
cmp
leave
test
jae
mov
cmp
push
gs
mov
in
jnp
adc
daa
cmp
daa
test
cmp
js
es
lret
dec
xor
sub
std
xchg
xor
inc
mov
int3
pushf
movsb
loope
mov
push
iret
mov
ja
rcrl
cmp
inc
and
adc
jle
jmp
cmp
imul
jns
test
jo
cmpsl
push
and
fbstp
sbb
repnz
icebp
cld
xor
mov
data16
adc
mov
les
push
xchg
imul
gs
or
pop
in
leave
xor
cmp
xor
cmp
cmp
int3
sub
jmp
sub
mov
sahf
ret
outsl
dec
lcall
mov
movb
mov
mov
cmp
pop
lods
out
add
add
aas
sbb
mov
testl
sbb
divl
lret
xlat
inc
negl
mov
xchg
js
mov
xlat
inc
or
pop
add
test
iret
pop
jb
call
pusha
push
and
sub
and
cld
sub
test
jle
mov
bound
jmp
ficoms
dec
mov
sub
rcll
data16
bound
sarb
pop
inc
stos
imul
in
push
xor
dec
or
jge
xchg
shrb
xor
inc
js
out
push
je
xor
push
add
xchg
inc
movsb
sub
push
leave
mull
xor
data16
mov
repz
and
rcl
shll
adc
adc
lahf
inc
test
add
movsb
stos
cmc
push
cmp
xchg
jge
xchg
sti
jle
cmc
jns
es
out
xor
jmp
xor
aad
in
lock
lock
in
pop
and
leave
in
dec
data16
push
add
cld
sbb
daa
mov
jno
or
jne
lods
dec
xlat
lods
enter
adc
add
cs
dec
pop
jo
repz
dec
add
adc
jecxz
adc
pop
sbb
xchg
xchg
mov
mov
jnp
jb
or
test
jle
xor
xor
lods
and
push
adc
fwait
push
outsb
mov
pop
push
sbb
fadds
cmp
inc
sbbb
sub
or
movb
lret
mov
rcrb
inc
rcll
gs
pop
inc
fisubl
sub
sub
mov
cs
pop
addl
sbb
ja
negl
gs
dec
mov
insb
mov
jno
inc
stc
ds
and
fwait
sbb
xchg
daa
jno
ret
or
mov
xchg
inc
int3
fsts
jbe
xchg
sub
lds
popf
jbe
xor
rcrb
mov
outsb
clc
repnz
sbb
fisubl
iret
push
je
dec
test
in
scas
push
xchg
adc
gs
or
out
push
sub
sub
push
in
leave
loope
inc
sub
and
add
je
mov
xchg
inc
aam
cmp
aad
cmp
and
xor
cmpsb
xchg
mov
push
add
adc
testl
cmp
scas
mov
sbb
or
lcall
int
movsl
lret
pop
lret
sbb
cmc
adc
insb
loope
mov
dec
lods
jecxz
xchg
rorb
cltd
ret
js
cwtl
popa
dec
or
fistl
jmp
mov
adc
jg
ja
xor
inc
call
daa
jecxz
xor
inc
pushf
leave
xchg
inc
scas
icebp
aad
pop
xchg
sub
stos
int
daa
shlb
mul
divb
mov
sbb
movsl
push
mov
mov
push
pop
fs
dec
fisubl
push
dec
and
jns
scas
xchg
divl
push
lock
movsb
arpl
add
pop
lret
cli
jge
mov
sub
movl
push
mov
adc
cmp
daa
gs
nop
stos
paddsw
out
inc
icebp
inc
ljmp
icebp
jae
out
push
movb
and
int
fstp
sub
pusha
mov
inc
jl
pusha
mov
pop
sub
mov
sbb
pusha
mov
hlt
mov
mov
in
nop
mov
or
xor
in
xor
sub
sahf
enter
loop
xchg
xlat
xor
jl
int
insb
dec
idivl
adc
mov
aaa
inc
movl
bound
adc
dec
jge
adc
ds
mov
and
je
push
cmpl
cwtl
or
dec
int3
cltd
out
rcrb
in
into
sub
orl
and
push
test
mov
push
pop
fsts
inc
mov
andl
jge
jmp
jae
call
addr16
test
bound
bound
inc
jp
xchg
adc
pusha
jne
js
imul
fldt
out
loopne
mov
push
mov
adc
adc
test
insl
xor
cmp
sub
mov
add
nop
movsb
and
dec
fsubs
adc
jns
push
push
inc
int3
and
imul
adc
pop
push
jns
inc
pop
sbb
mov
pop
out
repz
test
fisttpl
aam
jge
cmpsl
mov
cmc
sbb
pop
nop
inc
sub
add
add
inc
inc
cli
fwait
dec
pop
add
cmc
pop
aas
mov
test
shll
sbbb
sub
xor
in
ret
es
mov
push
cmp
cmp
ret
roll
psraw
sub
inc
xchg
or
add
inc
xchg
inc
jl
frstor
sti
push
rorl
or
pop
je
das
or
xchg
fwait
lds
sbb
or
ds
inc
loop
insb
sub
xchg
inc
jne
adc
movsb
cltd
dec
jnp
decb
dec
sub
xchg
mov
adc
dec
jno
cld
mov
sti
pop
fwait
jmp
call
lret
add
jb
or
nop
in
aam
push
dec
negl
hlt
dec
pop
mov
mov
adc
and
inc
mov
add
cmp
sub
mov
out
xor
xchg
loope
icebp
hlt
shll
imul
clc
jae
icebp
frstor
cltd
lock
xchg
ds
mov
roll
xor
add
call
dec
or
iret
adcb
add
rcll
ror
sahf
inc
mov
pop
insb
adc
jns
pop
aas
lret
xchg
in
xor
add
ds
adc
shlb
push
pop
scas
roll
ss
adc
scas
idivb
aad
leave
addb
cmpsb
addr16
or
fists
pop
mov
add
dec
sbb
ja
or
call
aas
jmp
popa
push
mov
mov
adc
pop
js
dec
fiadds
je
sbb
xor
pop
adcl
aaa
cltd
and
ds
aas
inc
add
jecxz
ret
mov
push
shll
scas
and
sbb
sub
add
xor
pop
cmpsl
loop
add
push
xor
arpl
mov
inc
dec
sub
cmp
mov
cmc
adc
repnz
pop
inc
sbbb
stos
aad
scas
or
inc
cmp
int3
mov
sbb
xchg
bound
arpl
in
pop
les
aad
push
pop
xchg
rol
pop
lret
mov
lahf
insl
sub
push
mov
int
js
enter
shl
jle
pop
jno
dec
mov
test
inc
adc
mov
pop
mov
sbb
sub
es
inc
dec
int3
mov
mov
rolb
push
cmovge
xchg
aas
leave
add
test
mov
out
ds
enter
arpl
enter
push
cmp
xor
fdivr
sbb
roll
push
ja
pop
mov
inc
mov
inc
std
enter
repnz
mov
int
sbb
testl
daa
ss
xor
ret
or
dec
inc
clc
push
mov
cmpsl
int3
aad
in
mov
cwtl
inc
das
sbb
and
pop
data16
add
mov
push
sbb
xchg
ficomps
arpl
inc
dec
es
andb
sub
test
std
mov
hlt
gs
int3
cmp
mov
fld
int
imul
cmp
cmpsl
pop
lea
push
shlb
pop
mov
leave
lcall
call
mov
jo
add
cmp
mov
jo
mov
mov
ret
xchg
sbb
aaa
dec
or
aad
and
inc
jb
divb
cmpsl
hlt
pop
imul
add
vmread
testb
aas
hlt
roll
xor
xchg
notb
mov
repz
or
dec
sbb
enter
sub
scas
fistps
cltd
inc
dec
jg
pop
in
int
jb
aaa
jge,pt
xchg
addr16
sbb
call
fsubrs
pop
inc
mov
cmp
fldt
cli
into
sti
xchg
out
add
daa
adc
mov
cmpsb
rcrb
data16
xchg
xchg
pop
enter
mov
lea
or
and
mov
jmp
mov
cmpsl
sbb
es
inc
and
xchg
add
aad
cli
repz
divb
add
push
push
push
pop
andl
mov
mov
std
aas
movsl
xchg
xchg
cmp
cmp
cmc
lcall
fbstp
fs
add
xor
xchg
mov
adc
nop
outsb
movsl
lahf
push
daa
scas
fildll
cmp
testl
outsb
push
push
jae
or
leave
mov
mov
add
mov
adc
add
mov
dec
mov
mov
inc
xchg
pushl
inc
and
pop
imul
insl
scas
fcom
out
cwtl
fdivrl
jbe
sbbl
adc
mov
pop
pop
xchg
sub
movsl
ret
push
jg
hlt
or
xchg
push
ds
rcrl
imul
xchg
sub
popf
pop
and
dec
aaa
mov
arpl
cmc
inc
ja
sbb
iret
scas
and
or
xchg
inc
ret
bound
sub
add
pop
mov
scas
enter
dec
mov
mov
mov
or
mov
jg
mov
sub
imul
mov
test
ret
icebp
sbb
mov
into
push
cltd
pop
orb
mov
or
cmpsb
fs
imul
adc
int
mov
lcall
xchg
and
inc
jbe
or
or
rclb
pusha
call
inc
sub
cmp
arpl
mov
cpuid
and
dec
stc
mov
cmp
xorl
cmc
lcall
inc
cmp
jne
fs
out
lret
mov
aaa
stos
xchg
arpl
mov
lods
mov
pop
div
insl
ds
pop
shrb
test
test
xor
ret
lods
lods
cwtl
add
fs
jmp
xchg
or
add
mov
dec
cmp
sti
test
sahf
adc
lcall
sub
xor
jne
fsubl
adc
xchg
call
adc
dec
or
push
stos
push
cmc
jae
inc
sbb
or
fmul
xor
pop
cs
fists
in
adc
jno
mov
mov
xor
dec
pop
mov
out
xchg
sub
mov
stos
sarb
mov
mov
cld
pop
xchg
ss
mov
cmpsb
pusha
cmp
dec
mov
pop
movsl
fiaddl
mov
adc
sub
dec
insb
mov
sahf
inc
add
ret
lahf
subb
lods
insb
sbb
push
inc
inc
js
push
push
addl
mov
dec
lods
adc
cmp
int3
sbb
ret
push
lods
jnp
adc
mov
adc
xor
out
ds
and
xor
sbb
shl
push
loopne
cmp
fisttpll
daa
cmp
cltd
or
or
lea
xor
sbb
sub
lds
xchg
sbb
clc
sub
ss
cld
and
or
mov
adc
jno
jbe
mov
push
add
stos
bnd
mov
ret
mov
add
jb
lret
das
sbb
mov
sbb
xor
orb
and
fnstenv
cmp
jmp
push
iret
xchg
jl
inc
xchg
data16
sbb
push
stc
icebp
mov
xor
sub
std
push
ljmp
mov
mov
inc
sub
sub
pop
cltd
pop
test
jnp
ja
pop
sbb
jo
jae
or
mov
imull
lock
lods
jmp
fldenv
test
jg
add
cmp
xchg
mov
jle
movsl
adc
mov
call
mov
iret
push
mov
sub
xchg
dec
pop
or
and
cmpsl
dec
adc
ss
mov
rcrl
scas
enter
inc
sbb
js
pop
mov
lcall
inc
xorb
adc
stos
adc
hlt
out
leave
test
mov
es
jle
mov
xorb
cmpsb
int3
push
rolb
lds
loop
repnz
out
sub
add
xor
xchg
repz
xchg
push
sbb
insb
jne
jae
jno
jno
mov
xchg
ficoms
xchg
movsl
int
pusha
mov
inc
xor
out
add
and
rcrl
imul
adc
push
imul
iret
jmp
out
call
cmp
arpl
pop
and
lods
fldenv
pushf
test
mov
cld
lcall
inc
cmpsb
scas
rclb
cmp
push
jmp
jno
out
sub
mov
push
sub
and
xor
stos
sti
sbb
rcll
lds
shl
push
mov
in
cltd
mov
scas
dec
clc
pop
mov
movsb
push
repnz
adc
jl
mov
xchg
fwait
pop
sbb
es
mov
or
xor
iret
cltd
insb
xchg
push
inc
pop
jmp
inc
mov
mov
sbbl
xchg
inc
dec
push
shlb
aas
jne
lods
repnz
inc
sbb
cmp
mov
and
xchg
shlb
movsb
jle
stos
ss
xchg
imul
out
gs
ss
out
mov
cwtl
push
roll
repz
scas
lcall
cmp
xor
and
cmp
lcall
insb
popa
fdivrl
ljmp
xchg
sub
push
sbb
inc
lret
adc
add
cs
pop
addr16
fldl
xor
out
sub
xchg
jmp
push
dec
addl
fucomi
lea
push
fnstsw
scas
push
add
test
adc
lds
adc
lret
loopne
dec
lock
push
jle
pop
adc
fistpl
and
dec
ret
jno
xor
dec
xor
movsb
mov
ror
push
jge
test
xor
jg
cmpsl
loopne
mov
daa
div
hlt
mov
pop
pop
sti
add
jae
jns
lret
adc
aas
sbb
lret
add
fcomps
mov
test
lds
dec
cld
imul
mov
das
dec
sub
cli
dec
int3
jns
sub
mov
stos
xchg
rcll
ds
arpl
icebp
rcrb
das
add
adc
cmpsb
les
sub
or
cmp
ja
popf
ljmp
jle
jne
daa
adc
mov
in
test
std
ja
cltd
sub
lds
mov
into
adc
lods
imulb
call
call
rep
inc
mov
addw
cmp
loop
lret
and
add
pushf
push
fwait
jno
bound
roll
scas
inc
jnp
adc
sbb
xor
enter
mov
or
xor
out
cmpsb
xlat
mov
mov
nop
pop
scas
mov
mov
int3
ds
mov
es
sbb
popf
bound
add
adc
mov
xchg
ficompl
pop
push
ja
stos
jle
in
movsb
push
xlat
imul
push
jge
adc
mov
imul
je
scas
dec
pop
mov
push
xchg
xchg
push
and
popa
or
lds
dec
call
loop
sbbb
mov
ret
pop
mov
push
dec
dec
jbe
lods
test
mov
mov
hlt
movsb
rcrb
jb
or
popf
mov
inc
scas
ja
movsb
sub
pop
sub
lds
inc
pop
in
jbe
out
lock
out
ds
jg
push
lock
fwait
sbb
xchg
or
mov
mov
fidivs
std
inc
push
pop
jmp
leave
fimuls
jg
subb
sbb
cmp
mov
mov
cmpsl
mov
push
testl
xchg
xchg
nop
iret
mov
cmpsl
adc
jae
test
and
xor
mov
dec
hlt
in
and
pop
cmp
imul
loope
dec
test
cmp
rcl
arpl
sbb
imul
pushf
sub
dec
dec
pcmpgtd
add
mov
aam
fs
in
or
cld
mov
jle
in
call
push
test
rorb
cmp
in
out
cmp
nop
pop
jp
jge
jnp
in
in
xorb
sbb
out
bound
mov
dec
push
cs
movsb
lds
pop
gs
test
lods
ret
jmp
cmp
cmp
sub
pop
loope
lcall
outsb
mov
cmp
mov
nop
shrb
and
icebp
or
leave
jno
stos
adc
dec
outsb
xchg
fmul
xor
cmpsb
pop
sbb
dec
inc
adc
ljmp
cwtl
pop
jb
movsb
inc
mov
xchg
outsb
aam
xchg
dec
xchg
pop
or
adc
xor
pop
imul
mulb
sbb
dec
sub
mov
jmp
lcall
movsb
jge
sar
lcall
cmp
outsb
inc
scas
sbb
leave
xchg
push
add
sbb
push
dec
xor
adc
jb
jbe
mov
or
pop
repz
in
mov
sysret
orl
fnstcw
loop
mov
and
cmp
aaa
push
rcl
dec
mov
xor
pop
rcrl
push
cmp
scas
je
arpl
sbb
clc
insl
dec
sbb
popf
daa
in
out
push
popf
jmp
sbb
push
fadds
sub
and
or
shlb
push
xlat
xchg
jp
notl
jle
ja
movsb
inc
inc
lods
xchg
sub
inc
daa
call
enter
sub
inc
sbb
mov
jno
outsl
es
outsl
fdivrl
dec
or
out
mov
or
adc
es
fisttpll
imul
xchg
in
push
mov
mov
cmpsl
es
stc
int
mov
xchg
add
sbb
arpl
push
lods
lahf
loopne
dec
ljmp
jle
mov
in
xchg
mov
mov
pop
and
and
nop
adc
les
pop
or
or
jg
push
sub
sub
aam
sub
push
push
js
pop
lret
push
jnp
stos
mov
mov
inc
dec
jmp
call
aaa
mov
mov
popa
xchg
sub
js
sub
aaa
pop
mov
jno
js
insb
enter
insb
iret
pop
pop
jl
sub
sub
stos
rcll
mov
and
cmpsl
loopne
dec
jmp
int3
repnz
or
jle
out
mov
cwtl
popf
out
fistpll
xchg
movsb
mov
jle
in
jae
repz
cmp
adc
fsubr
out
shl
xor
sub
pop
pop
or
add
jecxz
mov
jg
and
ja
mov
push
push
aaa
mov
jmp
sub
sbb
jbe
fists
add
inc
xor
fdivrs
pop
and
jl
gs
call
std
hlt
sbb
adc
sub
lds
dec
bswap
mov
mov
lret
xchg
adc
mov
dec
jo
bound
mov
sahf
ljmp
cs
cmc
mov
sbb
sub
push
rorb
xlat
in
cmp
ss
jle
outsl
test
adc
or
fsts
lock
xor
jno
push
pusha
add
push
lods
aad
cmp
pop
es
cmp
ljmp
loope
mov
adc
push
clc
lret
sub
inc
das
daa
rolb
push
or
mov
jns
add
in
inc
push
and
out
fld
add
or
dec
inc
push
pop
aas
cmpsb
addr16
aas
lret
arpl
xor
mov
shll
mov
lret
jno
cmc
push
mov
pushf
sbb
add
cmpsl
pop
repz
popa
push
dec
inc
ret
test
insl
sub
jb
sbb
fstpt
in
pop
ljmp
mov
fldl
inc
out
popf
sbb
dec
sbb
iret
lcall
dec
xchg
adc
xor
outsl
and
sub
jno
sbb
dec
jmp
sub
mov
call
sbb
push
call
mov
rcrb
mov
stos
ljmp
jno
push
inc
xor
test
pop
add
push
popf
and
sarb
or
sub
or
repz
xchg
jae
push
mov
pop
dec
ret
push
jno
in
xchg
push
inc
das
mov
stc
das
lods
or
add
arpl
pusha
xor
pop
scas
jp
and
or
lds
xor
stos
rcrl
push
mov
sarb
cmpl
mov
lods
jo,pn
push
or
jb
cmp
es
mov
and
pop
jbe
inc
mov
mov
inc
adc
mov
cmp
in
jno
int3
mov
cmpsl
mov
pop
push
or
push
pushf
pop
push
push
addr16
bound
stos
pop
test
stc
jle
and
movsl
je
les
rcr
cltd
dec
out
sub
sbb
popf
cmpsb
lds
push
dec
ror
xor
iret
dec
sub
pushf
in
push
lods
add
push
ja
loop
sbb
or
add
bound
mov
pop
jge
test
cwtl
aam
mov
or
adc
lcall
push
mov
xchg
shlb
stos
cmp
push
ljmp
outsl
add
mov
aad
outsl
cmp
pop
out
mov
xor
mov
nop
pop
cmp
sbb
xor
jno
inc
mov
add
cwtl
mov
dec
insl
lds
loope
sbb
xchg
mov
xchg
mov
adc
adc
pop
cld
in
outsb
inc
movsl
adc
cli
push
movsl
test
movsb
div
ja
lahf
dec
push
loope
jle
pop
lret
jmp
mov
outsb
push
mov
push
mov
sub
mov
inc
fsubs
leave
clc
fisttpll
shll
gs
inc
shr
stc
cltd
push
pop
loop
ss
frstor
insb
sbb
or
jbe
push
incl
sahf
sbb
rcll
dec
lret
iret
sub
popf
ja
pushf
push
stos
jnp
ret
imulb
jo
icebp
outsl
imul
scas
inc
aaa
jp
xchg
sti
repnz
fbld
jnp
inc
sub
pop
inc
xlat
gs
jge
mov
repz
pop
xchg
and
add
in
push
fidivs
mov
out
lea
ja
and
rcrl
call
pop
xor
dec
xor
lea
addl
inc
scas
mov
mov
mov
cltd
popa
les
nop
adc
gs
sub
scas
inc
or
insb
mov
sahf
jae
sbb
push
xchg
stc
insb
or
int3
fcoms
aas
call
add
jmp
das
arpl
jnp
out
jne,pt
out
sub
test
pop
mov
mov
sub
mov
push
pop
dec
dec
fstpt
test
addr16
pop
sarb
vpsrlq
pop
or
rcrl
pop
sub
cmp
iret
push
test
test
adc
data16
mov
iret
sub
cwtl
sub
mov
and
jg
test
cli
xchg
and
sbb
insb
adc
pop
xchg
adc
fsubl
jae
nop
pop
xchg
mov
sub
test
and
add
mov
out
or
pop
stos
lcall
mov
or
push
mov
out
cmp
mov
sbb
cmp
xor
scas
insl
dec
out
test
lcall
shl
pop
in
mov
movsb
insl
ljmp
scas
inc
jge
add
rorb
test
loop
out
es
lcall
fsubp
sub
adc
ret
kxorb
xchg
cwtl
aaa
sub
mov
sbb
ret
repnz
mov
adcl
ficomps
push
outsb
jg
enter
xor
mov
or
mov
lock
cld
xor
mov
dec
xor
das
dec
jecxz
pop
aam
imul
push
pop
cmp
push
cmp
nop
les
mov
test
push
imull
mov
jecxz
mov
pop
loopne
outsl
outsb
out
sbb
int3
clc
adc
jne
dec
cmp
cmc
subl
and
outsb
and
cmp
ljmp
mov
push
xor
push
adc
inc
or
dec
adc
aad
jne
mov
push
leave
lock
loope
das
or
sub
mov
xrstors
nop
fcompl
or
jl
jno
jb
repz
and
push
test
rcrl
cmc
pop
mov
pop
and
dec
xchg
push
jmp
push
jo
mov
sbb
int3
jp
xchg
or
dec
push
push
xor
xchg
leave
and
cmp
xor
shl
add
mov
and
ret
inc
add
xchg
adc
xor
shl
out
leave
and
in
xor
int
ljmp
imul
mov
sub
int3
daa
repz
mov
lret
lods
lret
in
xlat
popa
adc
jmp
mov
inc
cmpsb
mov
jecxz
mov
mov
or
and
jl
mov
push
add
mov
and
rolb
lds
push
xor
lea
and
daa
lsl
addr16
inc
idivb
pop
imul
mov
mov
pop
loope
xchg
add
loope
cld
and
xor
inc
and
inc
fisttpll
push
hlt
aad
fisubl
lret
int3
xchg
mov
int3
inc
ja
jmp
lea
fwait
pushf
pop
addb
dec
push
push
adc
jge
in
sub
aad
enter
mov
mov
lret
xor
inc
add
mov
cmp
hlt
push
add
loop
outsb
imull
mov
js
dec
test
pop
in
loope
sub
test
adc
push
aad
int3
out
jmp
push
inc
enter
jmp
js
in
gs
insl
mov
add
repz
jo
xor
fidivrl
iret
sub
loop
sbb
sub
dec
lahf
sub
loopne
lea
cs
outsl
out
and
das
pop
or
xchg
xchg
repz
add
outsb
or
adc
add
xor
adc
lods
mov
in
sbb
mov
sarl
fnstcw
mov
mov
dec
test
out
sti
cltd
adc
enter
lcall
lcall
jb
je
movsl
or
and
inc
cmpsb
and
mov
sub
pop
push
mov
into
imul
sub
test
sbb
cmpsl
adc
xchg
enter
cmp
xchg
sbb
push
call
outsb
push
mov
xchg
pop
inc
fcoml
and
push
jnp
lcall
adc
repz
ss
and
adc
aad
das
lret
out
mov
and
jg
lahf
cmpsb
insl
xor
mov
mov
dec
mov
xchg
stos
mov
sbb
pusha
je
and
adc
push
mov
jecxz
adc
mov
popf
sbb
push
js
add
arpl
in
inc
lods
mov
stc
shll
in
dec
ss
mov
hlt
aad
or
sarl
gs
fwait
cltd
xor
icebp
ficomps
lea
xor
inc
or
in
push
mov
push
pop
fcompl
jnp
out
jns
repnz
mov
mov
pusha
aas
fcmovne
in
lea
in
inc
addr16
into
sahf
pop
leave
jns
shrl
sbb
lods
insb
push
shlb
adc
lahf
ja
movsb
dec
repnz
stos
mov
and
insb
jp
xchg
dec
mov
jbe
int3
out
stos
sub
cli
sbb
push
insl
cwtl
mov
mov
push
push
out
repnz
lret
mov
std
cwtl
scas
pop
btcl
dec
adc
xorb
lret
arpl
inc
pop
mov
pusha
repz
cmp
jo
jne
repnz
xor
adc
mov
data16
xor
mov
adc
and
pusha
rol
mov
testl
jp
stc
add
jge
scas
daa
mov
push
icebp
std
out
add
pop
sub
inc
jo
sbb
mov
pop
add
adcl
cld
es
add
out
sbb
or
xor
pop
add
cmc
repz
mov
dec
ss
jne
fadd
jbe
aad
call
xchg
sub
mov
inc
in
mov
add
loop
cmp
xlat
mov
jmp
or
cmpsl
test
push
std
mov
push
nop
adc
jmp
aam
or
inc
or
lcall
test
jae
pop
mov
adc
push
pop
je
jmp
and
rcll
add
popa
jb
fwait
push
mov
gs
add
bound
outsl
dec
push
cli
mov
out
out
adc
add
test
jl
jmp
cltd
je
and
mov
push
psrad
pop
test
js
mov
cmc
mov
test
mov
cltd
jl
add
cmp
pop
cmc
gs
or
pop
fdivrs
das
xchg
mov
mov
cmpsb
xchg
pop
imulb
cmp
idivl
push
pop
dec
sti
or
jp
add
cmp
in
xor
lret
cmp
push
imul
shrl
lock
pop
pop
movsb
in
in
push
imul
pop
sbb
cmp
loopne
pop
negl
dec
in
test
sbb
data16
xchg
insb
mov
dec
outsl
or
clc
lods
add
imul
inc
inc
insl
add
outsl
or
outsb
outsb
notb
push
rorb
imul
add
adc
mov
sub
lds
jne
jb
jl
aaa
rorb
aam
lcall
xchg
int
negb
imul
lret
leave
cmc
adc
cmpsb
adc
push
push
xchg
jl
in
jg
subb
dec
ficoms
push
fstps
daa
ss
inc
sub
icebp
xlat
push
push
lret
cmp
adc
xchg
imul
jecxz
arpl
lods
fcompl
xor
lock
repz
stc
and
jmp
scas
sbb
adc
test
adc
inc
fs
pop
xor
push
aaa
sub
pop
loope
test
ret
dec
adc
ljmp
add
and
push
in
mov
pushf
hlt
insl
test
mov
enter
repz
sarb
test
dec
adc
xchg
mov
fisubrl
sbb
lock
decb
jmp
or
jo
jecxz
cwtl
int
in
and
dec
xchg
jge
jl
sub
mov
mov
divl
imul
fwait
mov
outsl
out
fistps
cmc
mov
pop
mov
jg
pop
push
ja
fnsave
gs
leave
dec
in
inc
out
pusha
pop
in
jg
dec
mov
and
call
cltd
xchg
mov
jne
sbb
int
pop
xchg
xchg
push
rcr
scas
push
mov
dec
subb
div
outsl
xor
mov
incb
push
rorb
mov
lods
or
sar
add
cli
repz
mov
pusha
sti
insl
fdivr
jge
arpl
cmpsl
cli
nop
pop
and
cmc
ret
pop
push
cmp
iret
lret
cmp
pop
xor
out
pop
popf
imul
jmp
repz
popf
loop
dec
test
rep
cmpsl
sbb
and
mov
jg
data16
jne
adc
pop
iret
xchg
adc
or
push
push
mov
inc
cmp
jne
aas
mov
mov
add
adcb
push
and
ror
mov
push
aad
and
clc
adc
shl
sti
mov
lea
dec
outsb
test
repz
sub
fistl
adc
pop
repz
stos
xor
popa
stc
nop
dec
daa
xchg
mov
je
repnz
xor
inc
gs
and
cli
or
not
xor
mov
sbbb
jne
es
adcl
xchg
mov
test
dec
out
cmp
inc
xor
cmp
lahf
fwait
push
sbb
adc
push
xchg
cmp
div
push
insb
mov
cltd
inc
inc
lret
out
arpl
add
scas
mov
xchg
jae
xor
insl
mov
sbb
ficoms
outsb
scas
jno
xorl
faddl
sub
or
jle
ror
fcmovne
adc
xor
ss
push
jecxz
xor
addl
int
in
or
mov
jle
lds
lds
dec
add
out
push
pusha
push
adc
sbb
insb
in
xchg
dec
adc
jle
dec
sbb
in
shrl
js
sbb
cwtl
shrb
jle
loope
ljmp
les
in
push
test
cmp
stc
sbb
int3
pusha
jle
push
jnp
inc
gs
cmpsb
scas
daa
push
movsl
pop
push
mov
inc
mov
jp
sub
inc
mov
ljmp
mov
data16
dec
mov
aam
dec
xchg
xchg
ja
fdiv
scas
jno
adc
push
push
iret
je
mov
outsb
sub
into
lret
jb
lcall
iret
mov
or
fsubl
hlt
push
inc
test
xor
pop
xchg
push
mov
pop
push
push
add
fmuls
cmpsl
sbb
testb
sahf
icebp
pop
jno
push
sbb
mov
out
arpl
out
mov
pop
xchg
scas
sub
sub
add
or
sbb
cmp
jmp
je
cwtl
movsb
lea
mov
dec
stc
hlt
pushf
ds
sub
push
testb
fucomp
or
outsl
pop
mov
lock
test
and
jnp
xchg
pop
inc
ljmp
nop
daa
gs
adc
dec
lock
inc
jl
rorb
jo
cmp
mov
ds
scas
inc
sti
push
pusha
mov
fs
sbb
jl
dec
outsb
cmpsl
in
rcrl
dec
inc
test
repz
jb
vmread
lods
push
push
xchg
add
xor
jnp
in
sub
sub
sbb
stc
sahf
in
adc
rolb
xchg
pop
mov
mov
hlt
or
sbb
xchg
push
mov
sarb
fisttpl
sub
xor
push
stos
ficoml
hlt
adc
cmpl
rcrl
jne,pn
jmp
dec
or
cli
mov
bound
add
rcrb
outsl
pusha
or
jl
lods
movsl
clc
dec
push
in
cmp
mov
xchg
and
movsb
mov
int
out
mov
mov
mov
daa
cwtl
iret
cmp
lret
test
pop
jle
jl
movsb
mull
jb
lret
sarl
jae
jo
icebp
cmpsl
cmp
leave
lds
mov
mov
push
adc
cmc
ljmp
shrb
aad
sub
cmp
mov
inc
sahf
lcall
arpl
jg
mov
mov
jg
xlat
push
mov
adc
mov
sub
pop
sub
sub
movsb
push
xor
shrb
push
jp
lret
mov
imul
out
pop
mov
or
inc
es
dec
sub
or
fldt
fwait
lret
push
push
inc
xor
add
pop
push
mov
lea
ljmp
mov
in
movsb
or
adc
xchg
sub
add
lds
jmp
ja
out
movsb
movb
popa
es
pop
pop
add
jmp
shrb
pop
adc
out
insb
push
ret
sub
fidivs
lret
scas
or
xor
mov
pop
mov
adc
loope
pop
mov
imul
sub
jle
clc
repnz
mov
jg
ljmp
push
sti
je
gs
aad
pop
sti
or
dec
mov
push
cli
push
dec
cld
mov
push
push
adc
imul
jmp
es
loope
test
stos
negl
jle
das
mov
jne
xor
or
scas
test
repz
mov
lret
pop
jge
ret
pop
jg
or
or
repz
into
cmp
out
xchg
sarl
mov
lcall
sub
xchg
mov
mov
dec
fcmovnu
insl
pusha
jb
xchg
xlat
ja,pt
test
sbb
outsb
pop
adcb
ss
dec
cmp
xor
dec
or
bound
mov
pushf
imul
insl
add
push
les
sbb
xchg
dec
in
sub
xor
notb
aaa
fstpt
outsb
pop
add
sbb
inc
lock
subl
mov
lock
dec
pop
inc
or
adc
mov
imul
pop
lcall
xor
push
cwtl
into
dec
xor
dec
jp
in
in
sarl
lret
xchg
ficoml
push
and
inc
cmpsb
dec
pop
mov
clc
jmp
mov
mov
fcmovu
cwtl
dec
push
ficoms
pop
push
adc
aad
call
roll
mov
roll
dec
add
and
adc
cmp
mov
lods
rcll
scas
jmp
push
push
scas
outsl
out
mov
cmp
jb
adc
push
stc
hlt
jb
cmp
fldcw
inc
pop
ret
cmp
inc
jbe,pn
lret
lcall
pop
xor
test
jle
and
and
shrb
dec
sub
push
dec
lcall
out
jno
sbb
dec
imul
fldcw
test
xor
mov
pop
aam
add
xor
lods
clc
pop
neg
enter
dec
les
out
and
pusha
pop
movsb
and
add
loope
lods
sub
pop
xchg
adc
inc
cmp
jbe
or
rcl
pop
and
add
pop
jne
jp
test
sub
pop
scas
mov
mov
mov
arpl
subb
xor
in
lods
cwtl
jge
stc
mov
mov
and
inc
dec
imul
mov
cmc
sahf
mov
cmp
xor
mov
dec
imul
lea
in
sub
inc
and
mov
addb
fldt
or
das
sbb
mov
pop
xchg
stos
fstpl
cmp
pop
xchg
icebp
mov
mov
adc
mov
stos
addl
mov
cmpsb
sbb
lret
lcall
push
sub
cli
or
mov
adc
xchg
int
jle
ficompl
loope
pop
cmc
dec
addr16
push
enter
cmp
rcrl
or
daa
repz
cmc
dec
adc
inc
jmp
ud2
jp
arpl
xchg
jno
push
jbe
stos
sub
test
inc
xchg
jmp
test
and
int3
mov
and
out
xchg
jle
test
mov
into
pop
rcll
dec
out
adc
aaa
and
fwait
imul
popa
add
aaa
mov
sub
mov
push
pushf
cmp
and
mov
xchg
push
js
movsl
inc
jb
mov
movsb
add
adc
fisubrs
lock
cli
cld
popl
jg
dec
dec
mov
jmp
and
rcrb
push
cmp
xor
add
movsb
out
cmc
dec
jns
mov
fdivl
cmp
in
pop
outsb
popa
add
hlt
adc
xchg
sbb
les
xor
mov
jae
jmp
xchg
xchg
jnp
outsb
or
cmp
lea
mov
scas
xor
mov
insb
loopne
mov
iret
mov
pop
mov
dec
sti
pushf
lods
and
data16
in
xlat
dec
lret
jle
aaa
cmp
push
shll
outsl
xchg
movsl
inc
inc
sub
push
lods
mov
pop
andl
fs
and
insb
dec
clc
pop
mov
das
inc
test
xor
stos
adc
inc
mov
dec
dec
mov
lcall
enter
and
pop
xor
stos
repnz
mov
push
dec
dec
rorb
scas
and
loop
loop
sbb
test
sub
lahf
rorl
cmp
xchg
movsl
imul
aam
xor
xchg
mov
test
mov
inc
sbbl
lret
inc
cltd
mov
or
add
js
fcomps
pop
aad
push
les
inc
daa
lret
push
push
cld
flds
mov
pop
jl
lcall
and
in
mov
jnp
or
pop
push
xor
mov
ret
xlat
xchg
pop
dec
daa
pop
xor
daa
jl
add
mov
xlat
mov
mov
scas
cld
mov
sub
xor
dec
outsb
xor
cmp
xchg
cmpsl
pusha
pushf
jb
dec
cwtl
mov
mov
mov
ljmp
push
and
push
push
mov
push
sub
push
mov
dec
mov
and
sub
xor
xlat
iret
loope
clc
mov
xchg
ds
pop
ljmp
imul
out
mov
add
repz
sbb
cmp
outsl
push
or
popa
mov
xchg
jmp
mov
fucom
pop
xchg
std
int
insl
sbbb
ss
ds
ljmp
pop
jns
cltd
dec
sbb
ret
pop
mov
vpunpckhdq
xchg
add
enter
aad
sbb
aas
ficoml
lret
rorb
stos
and
int
mov
or
xor
cmp
cmp
call
lret
aam
aam
dec
aad
mov
jne
xchg
xor
ret
mov
movsb
icebp
push
pusha
add
jle
ds
and
mov
dec
fisttpll
call
xchg
clc
movsl
insl
scas
sbb
int3
add
pop
sahf
leave
in
mov
pop
or
fs
push
mov
outsl
dec
jmp
cmp
ret
fs
cmpsb
test
sbb
or
adc
jo
outsl
mov
rorl
push
cmp
loope
sbb
pop
out
cmp
aam
repnz
dec
jnp
jecxz
or
or
xchg
mov
inc
pop
gs
sub
jae
push
mov
push
mov
test
mov
jne
mov
dec
sbb
adc
outsl
pop
dec
or
push
lods
imul
lock
lret
jle
adc
pop
divl
or
add
jo
sub
mov
mov
push
cmp
sub
call
cmp
mov
loope
inc
and
fldt
xchg
popa
testb
lea
mov
cmp
add
insl
xor
mov
pushf
cltd
in
mov
mov
push
xchg
addr16
es
test
xchg
sbb
addr16
jecxz
mov
in
popf
pusha
inc
adc
aas
dec
mov
mov
and
test
mov
int3
movsl
mov
jbe
jmp
popf
lahf
and
je
cmc
adc
shrb
jg
xor
mov
iret
and
or
jo
jnp
xor
dec
test
outsb
aam
das
mov
fsin
jne
and
xlat
scas
sub
dec
jle
inc
jl
cs
and
subl
xor
aas
pop
push
outsl
fisubrs
in
push
cs
lods
jns
xlat
mov
sbb
add
mov
xor
adc
loope
out
add
imul
or
fcmovnu
jo
dec
push
in
xchg
lods
push
loopne
push
mov
mov
in
jo
icebp
jne
in
nop
dec
in
aam
sub
add
push
out
dec
cmp
dec
jmp
out
in
pop
loopne
stc
enter
lret
adc
xchg
push
out
mov
jae
sub
mov
ret
pop
mov
inc
mov
push
and
sahf
dec
push
xor
cmp
cmp
dec
rcrl
or
pop
pop
sub
xchg
push
cli
pop
sub
add
sahf
pop
cmpsl
mov
push
mov
or
mov
out
test
ljmp
jo
adc
leave
or
jecxz
push
and
pop
fstpt
sub
mov
mov
mov
adc
fiaddl
jmp
lock
adc
negb
popl
adc
mov
icebp
sub
dec
int
pop
enter
mov
mov
das
sub
jno
mov
mov
jne
repnz
fs
mov
mov
sarb
xchg
insb
mov
ss
fiaddl
sub
cmp
lret
ret
dec
pop
imul
mov
mov
lods
and
mov
pop
fists
pop
jmp
pushf
adcl
int3
out
sub
lods
xorl
xorl
jbe
push
jle
outsb
lret
and
pop
cmp
ljmp
std
and
inc
jmp
mov
data16
mov
cli
mov
push
ja
mov
cmpsl
leave
adc
xor
jmp
xchg
jecxz
mov
in
push
inc
add
push
dec
xor
aad
xchg
int
aas
sub
das
test
lods
cmpsb
rolb
fwait
outsl
fcompl
loope
in
jae
sar
add
sarb
lods
mov
adc
test
rcrb
pop
add
sub
sti
scas
adc
jg
test
inc
pop
push
pop
mov
mov
loope
pop
sbb
test
cmp
insl
xchg
enter
or
cmp
ret
jge
aad
dec
xchg
jbe
cmp
fsubs
or
loop
adc
dec
pop
dec
lods
pop
leave
mov
ja
adc
pusha
es
int3
xchg
xlat
xchg
mov
jb
jecxz
and
hlt
loop
and
icebp
push
add
aas
sarl
mov
lods
popa
stc
sub
sub
cmp
neg
rorb
out
xlat
xor
cli
adc
add
data16
test
pusha
test
and
and
loope
xchg
push
inc
xlat
pop
lods
pop
sbb
enter
mov
cltd
jbe
mov
cmpsb
and
mov
daa
cmpsb
dec
in
or
daa
sbb
push
and
mov
fs
icebp
xchg
aad
in
ror
scas
push
pushf
mov
adc
jmp
movsl
int3
insb
pop
adc
push
pushf
inc
je
imul
dec
cmpsl
stos
cltd
mov
xchg
das
xchg
lods
mov
in
repz
lret
adc
mov
mov
addr16
xchg
and
jp
jns
adc
std
dec
sub
int3
xchg
or
pop
in
mov
ja
dec
pusha
add
mov
push
pop
mov
jno
push
divl
mov
push
xor
pop
adc
pop
or
inc
adc
xor
add
sbbb
add
push
pop
clc
adc
jo
neg
rolb
mov
or
fsub
aam
cmp
mov
rcrl
fstp
fwait
cmp
test
dec
clc
dec
dec
fimull
mov
outsb
mov
adc
add
sti
outsl
into
mov
cld
mov
mov
or
sub
mov
cltd
xorb
inc
jge
out
add
in
nop
cld
jl
out
nop
cmpsl
leave
xchg
adc
mov
xor
xlat
int3
sbb
or
ljmp
add
outsl
addr16
mov
int3
add
mov
imul
fsubl
xor
or
cmp
pop
mov
call
int3
out
and
mov
subl
pop
push
stos
add
sbb
adcl
xchg
test
add
enter
jmp
and
mov
or
popa
fcmovnb
sub
movsl
popf
mov
jne
adc
pop
push
push
mov
sub
dec
cmp
lea
cmp
add
inc
imul
cwtl
or
jge
std
mov
and
fistps
ds
mov
das
ret
inc
int3
lret
pop
fs
imul
and
dec
sub
out
test
movsl
inc
mov
jbe
cmp
jl
sbb
cltd
loopne
xorl
sub
outsl
loope
cmp
inc
shll
imul
dec
mov
out
jo
cltd
and
and
mov
adc
shrl
and
into
aam
hlt
and
dec
fidivrl
cwtl
lahf
inc
rorb
xor
mov
insl
mov
stc
or
xchg
scas
nop
shrl
loop
std
dec
dec
inc
xchg
fwait
aas
and
xchg
in
jne
mov
std
mov
decl
dec
sbb
int
nop
mov
push
jmp
imul
shll
rcr
popa
repnz
shll
xor
inc
pop
cmpsb
and
cmp
add
bound
scas
ret
dec
mov
outsl
dec
pushf
mov
dec
add
pop
orl
cld
sbb
push
lret
mov
dec
sbb
sbb
mov
xor
or
jno
pop
jbe
sbb
mov
mov
ret
cmp
pop
movsl
dec
repz
mov
aam
sbb
imul
jmp
sbb
lret
mov
add
dec
pop
repnz
xor
xlat
mov
push
xor
rolb
push
pop
dec
cmp
sti
stos
push
inc
fidivrs
adc
arpl
test
sahf
and
and
sbb
lods
inc
push
mov
inc
je
xor
jae
test
pop
daa
stos
scas
pop
stc
lock
cmpsb
xor
jmp
cmp
dec
mov
fiadds
or
pop
dec
ds
test
pop
adc
push
jnp
orl
pop
lock
sbb
inc
lcall
and
fadds
fnstenv
cmp
fbld
sbb
bound
xor
mov
lea
lea
jge
jne
cmp
cmp
scas
inc
mov
iret
lret
pop
mov
pop
fimull
push
ror
mov
and
fidivs
iret
loope
je
pop
and
inc
popa
push
shll
dec
sub
ficoml
mov
push
push
ret
mov
call
xadd
pop
mov
pop
call
aam
push
mov
aas
mov
pop
test
cmpsl
fbld
aas
rcll
and
jbe
lret
adc
xchg
xchg
into
sbb
ror
sub
mov
and
push
jecxz
test
flds
es
inc
dec
mov
ret
xchg
cmp
jg
fwait
int3
add
clc
dec
ret
xor
cmp
xor
add
and
or
test
mov
or
inc
mov
dec
loope
das
int3
rep
dec
lods
jge
dec
and
add
out
mov
mov
mov
adc
jno
into
rorl
sub
dec
push
sahf
push
push
mov
mov
in
stos
addr16
jbe
jnp,pn
sub
or
cmp
das
xchg
shll
popa
cmc
cmc
daa
and
lods
dec
push
adc
pop
addr16
mov
loop
pop
dec
mov
stos
scas
fstpl
es
or
jmp
or
mov
notl
in
pop
add
popa
pop
arpl
outsb
dec
and
jbe
adc
leave
cli
aaa
mov
mov
xchg
mov
ret
js
mov
or
jecxz
xor
mov
movsl
xchg
xchg
or
jp
insb
sbb
mov
push
test
ret
pop
inc
and
xadd
sub
cmpsb
jecxz
lret
mov
dec
sub
cmp
push
xorb
cmpb
sbb
mov
cwtl
xchg
test
sbb
cltd
jnp
xchg
sub
cmpsb
or
push
dec
xor
add
push
dec
out
or
mov
pop
outsb
xchg
sub
jno
out
aas
add
sti
mov
notl
iret
je
jmp
xor
shld
arpl
loop
xor
dec
das
pop
fcompl
enter
fisttps
push
leave
in
fimull
mov
jg
inc
xchg
jne
mov
push
adc
add
das
std
das
imul
out
aas
popf
ss
cmp
push
ds
and
xchg
into
adc
pop
sub
lahf
xlat
cmpsb
adc
or
rcl
fwait
xchg
lahf
jae
sub
jnp
filds
xchg
inc
data16
push
sbb
mov
pop
inc
imul
or
mov
xchg
bound
pushf
jg
les
mov
clc
mov
cmp
and
leave
or
test
dec
imul
add
mov
sub
outsl
sbb
push
add
stos
fldl
lahf
mov
cmp
ss
xor
cmp
cli
lret
push
lds
jg
fs
jns
scas
test
push
cli
fwait
pusha
mov
cltd
mov
fsubrs
mov
out
inc
test
jl
pop
cmpsl
lahf
jecxz
pop
xor
xchg
mov
ret
dec
in
dec
jae
pop
scas
ljmp
push
test
cs
pushf
jle
jmp
jne
repnz
out
lcall
inc
fnstsw
fwait
jb
insl
jmp
xlat
mov
and
and
xchg
test
iret
call
push
xor
frstor
aaa
sub
es
adc
shlb
adc
and
mov
out
or
push
data16
adc
push
je
outsb
push
in
xor
mov
cmc
push
scas
pop
adc
pop
fstpl
jg
and
dec
sbb
out
xchg
lds
mov
mov
mov
push
movsb
and
mov
outsb
sbb
fimull
out
mov
pop
sub
sub
loopne
cld
cmp
xor
dec
gs
push
xchg
fucom
mov
stc
push
aad
sbb
std
in
mov
and
insl
cwtl
pop
lock
adc
das
cwtl
adc
testl
ds
inc
lock
pop
add
push
mov
and
fcompl
xor
add
push
jecxz
out
lods
jb
dec
popa
dec
stc
ret
pop
mov
lret
or
ret
jmp
push
dec
inc
aaa
test
fdivrl
icebp
push
outsl
insl
jecxz
or
xor
jbe
sub
add
fs
pushf
inc
in
rcrb
push
mov
cmp
push
insl
push
pop
xchg
sbb
and
sbb
mov
mov
mov
daa
mov
sub
les
outsb
lcall
mov
inc
mov
ret
mov
fnsave
jbe
mov
adc
shrl
pop
sub
ss
xor
sub
inc
imul
outsl
mov
lea
or
adc
loope
cmc
fbstp
mov
cmc
roll
das
add
loopne
mov
ret
dec
stos
gs
repz
xchg
xchg
push
loopne
lret
bound
dec
cmp
sarl
add
in
in
mov
aam
scas
pop
fcompl
out
xor
mov
mov
cwtl
and
test
jnp
add
mov
fnstsw
and
mov
cmp
mov
fmull
cmovae
cltd
loope
testl
xlat
sbb
dec
cltd
je
lahf
cmp
mov
out
lds
xorb
dec
fistpll
ret
jle
jne
in
in
fdiv
mov
xchg
aas
jne
jnp,pt
imul
cmpsb
sub
xchg
pop
fsubr
dec
outsb
in
scas
rcrb
dec
mov
cli
lods
and
aam
push
adc
into
push
or
cmp
fnstsw
xorb
data16
shrl
loope
sbb
out
dec
ds
cli
or
repz
fdivr
cmp
add
push
sbb
xlat
mov
xor
mov
aad
dec
lret
repz
mov
sub
mov
and
push
mull
scas
and
divb
sbb
clc
in
push
jl
adcb
dec
pushf
test
push
rcrl
xorb
sbb
mov
movsl
and
fwait
sub
xchg
rcll
das
xchg
movsb
xor
or
out
cltd
stos
xchg
lds
mov
adc
dec
shrl
add
mov
mov
sahf
cmp
sub
add
lahf
dec
int3
and
mov
fistps
dec
in
add
cmp
hlt
push
or
pop
and
mov
jbe
das
push
imul
push
mov
scas
cmp
arpl
pop
imul
xor
or
clc
scas
movsb
and
rcrb
mov
xor
dec
or
push
sub
sub
push
int3
adc
loope
mov
mul
movsl
mov
js
dec
or
adc
or
and
fabs
inc
or
mov
gs
aam
in
sbb
push
mov
leave
ret
pop
xor
mov
push
dec
cli
jno
sbb
and
loope
dec
push
dec
hlt
add
and
xchg
ficoml
enter
push
pop
in
mov
push
bound
push
xchg
xchg
sar
or
fsubl
mov
xor
outsl
cld
int3
mov
test
fldt
push
mov
jno
scas
adc
ficoml
sbb
js
and
pop
add
iret
arpl
lahf
xchg
cwtl
movsb
add
xor
int3
sub
shll
in
mov
lea
pop
int
push
in
push
movsl
xchg
sarl
sbb
xchg
jmp
mov
fdivrs
adc
fstl
lret
jae
in
and
imul
cmp
pop
inc
rclb
push
xchg
stos
lret
cltd
rclb
or
and
pop
fsubl
push
push
cmpsb
subl
and
mov
paddsw
jg
xchg
bnd
xchg
ljmp
dec
jle
sbb
sub
std
push
sub
sbb
mov
test
sti
rcr
mov
mov
jmp
jnp
scas
in
jbe
and
sbbl
and
push
add
xor
add
pusha
into
sarl
add
sbb
das
xor
cmp
pop
jmp
outsl
sbb
xchg
sbb
jp
shlb
rorl
inc
in
dec
mov
or
and
test
cld
xchg
lret
test
fildll
cmp
mov
sub
test
xchg
test
xorb
fsubrp
fldl
pop
pop
dec
mov
inc
pop
insl
loopne
mov
inc
aad
hlt
cwtl
jnp
xor
push
cmp
mov
mov
cltd
in
pop
push
jno,pt
sub
lods
mov
jl
adc
cld
outsb
sub
add
jbe
push
pop
mov
dec
or
inc
outsl
fs
push
pop
dec
outsb
sti
and
int
in
sub
mov
nop
cwtl
xchg
cld
mov
jecxz
lds
jp
push
push
cmp
repnz
movsb
mov
mov
sbb
dec
fucomi
test
mov
jns
pushf
xor
dec
dec
push
xchg
push
jecxz
es
addr16
ficomps
faddl
out
pop
int3
orl
fdivrp
jge
sbb
adc
pop
mov
xor
cwtl
enter
into
cmp
mov
sar
js
pop
dec
dec
fdivrl
aam
pop
addb
mov
loope
dec
ffreep
cmp
mov
ret
aaa
cmp
int3
fildl
push
cs
stos
je
xor
adc
xchg
mov
repnz
mov
es
adc
lods
adc
repz
sbb
jae
pop
mov
stc
or
in
leave
dec
repnz
and
mov
sbb
jbe
lds
inc
and
out
xor
inc
repnz
rolb
sub
xor
xchg
mov
sbb
or
xor
jns
dec
cmp
dec
in
lcall
das
aad
aad
sub
jns
inc
ret
mov
call
push
iret
jmp
cld
sbb
cmp
adc
mov
sbb
pop
mov
push
or
ret
push
mov
mov
ret
cs
or
jae
adc
hlt
jmp
mov
jmp
sub
xor
jnp
pushf
add
jno
mov
or
push
mov
icebp
xchg
jmp
mov
cmpsl
fmull
mov
stc
inc
sub
leave
in
stos
mov
shll
cmp
cld
sub
addb
sub
repnz
sub
sub
call
mov
lret
filds
add
and
dec
mov
mov
test
and
mov
out
push
sub
data16
push
add
add
sbb
outsb
jl
outsl
loope
idivb
mov
jns
call
popf
dec
pop
mov
jmp
fidivl
sbb
icebp
mov
and
repz
lahf
inc
mov
dec
movsl
pop
or
sahf
pop
jge
cli
mov
cltd
cmpsb
cmp
aaa
mov
inc
mov
mov
rcll
les
lock
stos
ds
jns
jmp
fisubl
jle
lea
int3
movsl
pushf
xor
cmp
pusha
subb
mov
mov
js
mov
adc
aam
ror
mov
or
mov
jae
dec
sub
jge
push
sub
cmp
xchg
or
daa
imul
sbb
vpaddw
mov
aam
xchg
mov
jg
mov
int
sub
dec
lret
fwait
gs
enter
mov
dec
adc
or
lods
jle
scas
fscale
fidivs
lahf
out
popf
adc
adc
jecxz
in
inc
jg
in
mull
xor
ret
push
arpl
mov
mov
cwtl
adc
int
movsl
das
mov
add
pop
pop
bound
and
cld
std
pop
mov
or
cmp
sbb
mov
push
jg
inc
jb
cmc
dec
pop
xchg
cwtl
cmp
sbb
out
jne
jl
jne
sahf
loop
aas
pop
xor
mov
inc
fs
mov
inc
or
dec
insl
lahf
sbb
mov
stc
insb
dec
in
inc
andl
xchg
addl
adc
jns
stos
cmc
cmp
pop
jmp
inc
cmp
mov
fnstsw
imul
fimull
pop
mov
iret
cltd
mov
or
xchg
fildll
xor
mov
test
aam
ss
fisubs
and
lock
or
lcall
xor
push
cs
mov
test
das
pop
sahf
jne
fwait
sbb
mov
dec
lods
es
push
or
aad
or
dec
xor
mov
pop
sub
pop
mov
lahf
cwtl
lea
or
loop
hlt
ret
jl
mov
pop
adc
rolb
icebp
jne
fisttpl
adc
sahf
stos
mov
sti
out
jne
subb
iret
and
daa
sub
sbb
gs
ja
push
mov
in
int
movsb
xchg
test
inc
fwait
pop
cmpsb
inc
movsb
sahf
out
mov
and
push
cwtl
and
out
pop
jnp
sub
mov
or
xor
pop
xor
jb
cli
push
movsb
insb
mov
pop
dec
punpckhbw
add
pop
in
out
insl
pop
sub
test
outsl
ret
cmp
mov
add
andb
add
sub
mov
xchg
push
xlat
and
pop
lret
sub
pusha
mov
fbld
in
fldenv
and
das
test
gs
mov
inc
fbld
arpl
xor
sbb
loopne
mov
xchg
add
xchg
sar
pop
xor
fmuls
adc
fsubrl
mov
shlb
xchg
loope
les
ja
sbb
mov
dec
test
mov
dec
and
push
push
fidivrs
sbb
mov
shr
enter
fmul
pop
push
pop
insl
xchg
mov
insl
call
sahf
popa
gs
inc
bound
sub
pushf
imul
pop
jl
push
in
add
jno
lret
xchg
lods
sbb
dec
xor
ss
movsl
into
sub
popa
jg
cmc
icebp
movl
add
adcb
leave
data16
dec
inc
mov
add
mov
or
or
jp
in
jp
xchg
pop
cli
push
pop
insl
mov
pop
inc
outsb
mov
cmp
cli
js
movsb
dec
nop
pop
push
lock
pop
or
lret
loop
jns
sbb
rcrl
imul
outsb
lcall
into
inc
int
and
push
inc
aaa
adc
jae
rorl
scas
data16
shll
imul
mov
in
sub
mov
mov
pop
push
jns
cmpsl
push
cmpsb
pop
addr16
repnz
inc
jl
shl
push
mov
push
outsb
sub
push
xchg
and
dec
mov
rcl
test
leave
xchg
xchg
adc
out
mov
sarl
imul
push
ret
or
xchg
ret
mov
inc
xchg
mov
outsb
pushf
xor
aaa
pusha
subb
inc
cltd
sub
cmp
xchg
xor
xchg
mov
repz
adc
movsl
mulb
stos
or
inc
pop
mov
test
adc
add
outsl
sahf
sbb
insl
test
inc
xor
inc
icebp
iret
subl
test
shlb
cs
out
mov
adc
in
pushf
leave
sahf
jge
test
jo
aas
pop
fldpi
adc
je
jo
mov
dec
dec
xor
inc
mov
cmp
pop
xchg
into
jg
jge
and
jno
cmp
inc
pop
into
imul
xor
nop
lods
fwait
mov
cli
cmp
js
fdivs
xchg
aaa
sub
mov
or
xchg
fsubr
test
adcb
lds
aas
das
ret
mov
or
add
fldl
lods
popf
and
or
cmp
sbb
lods
fcmovbe
push
or
push
test
out
rclb
pop
in
xchg
addl
cld
sbb
scas
and
cmp
adc
jo
int3
inc
xchg
scas
jecxz
rorl
and
pop
push
push
lds
aas
jnp
jns
rolb
gs
mov
pop
das
fldt
lds
mov
sub
negl
fisttpl
mov
inc
test
inc
insb
or
mov
jae
pop
dec
sbb
add
out
addr16
popa
imul
jl
lret
sbb
fcoms
xlat
sbb
fsubrp
idiv
lret
sub
xchg
inc
cwtl
cli
ss
inc
dec
sub
addr16
dec
mov
scas
in
inc
inc
mov
add
shll
popf
fcompl
ror
jecxz
pusha
xlat
mov
lods
cltd
push
imul
clc
jp
imul
mov
mov
lock
inc
les
bound
out
outsl
cmpsb
jae
adc
or
xchg
adc
xorb
cwtl
fidivrs
xor
jns
pop
pop
lcall
jmp
xchg
jo
outsb
je
lds
or
push
xlat
popf
mov
and
fwait
in
int
adcb
pop
dec
daa
pop
push
into
inc
mov
adc
and
sub
sahf
cmp
movsb
daa
popa
icebp
jge
insl
repnz
cmc
imul
test
cltd
int
jb
mov
cmc
clc
sub
es
mov
insl
outsb
ret
pusha
pop
mov
cs
imul
dec
je
pop
xchg
js
shlb
hlt
std
ja
push
fistpl
push
jne
callw
pop
lret
mov
push
stos
push
cmp
pop
ret
push
std
adc
mov
jbe
enter
fists
scas
stc
jp
popa
divb
sub
stos
ja
cltd
xor
iret
pop
or
pop
scas
fwait
cmp
push
bound
lock
insb
popa
out
xchg
jl
jb
ja
mov
mov
push
cmp
stc
scas
adc
je
and
jne
cmp
iret
stc
cmpsb
orl
rclb
lahf
cltd
das
movsb
mov
pop
pop
scas
jbe
insl
jno
push
sub
adc
cmp
sarl
divb
mov
lods
js
adc
ficomps
mov
stos
jns
cmp
loope
addl
scas
mov
jg
imul
sbb
cmpl
or
inc
int3
mov
xlat
push
dec
add
ljmp
mov
xor
test
loope
repnz
repnz
bound
xor
cltd
fistps
jp
leave
test
pop
sub
cmp
and
mov
jg
jmp
sahf
sub
push
inc
or
mov
popf
repz
xor
mov
push
cli
sub
les
andb
sbb
inc
jle
arpl
jne
pop
add
lahf
fwait
sti
xor
adc
dec
cs
insb
pop
ss
xchg
mov
pop
das
or
push
mov
cltd
popa
cli
add
mov
imul
and
into
and
mov
sub
add
inc
test
out
sbb
shl
push
xchg
or
out
push
adc
in
js
stc
jbe
push
clc
aad
pop
xor
mov
sbb
insb
jmp
mov
in
outsl
addl
sub
int3
push
scas
add
scas
adc
jae
jl
mov
lret
cwtl
icebp
mov
ja
and
fucomi
mov
mov
pop
decb
addr16
dec
sbb
shrl
mov
inc
leave
call
cmp
in
jl
test
pop
mov
decl
enter
dec
cwtl
scas
lea
mov
or
ret
jne
daa
fwait
pop
or
flds
dec
lret
adc
out
and
int
jmp
call
push
rcrb
add
or
loopne
fdivl
mov
or
fcoml
jae
fwait
movsl
dec
mov
cmp
pop
fidivs
out
daa
sahf
jns
cmp
pushf
call
sub
jmp
pop
push
shrl
or
in
imul
iret
jns
adc
repnz
aam
jge
sub
add
sub
rorb
fs
add
dec
push
outsb
xor
lret
pop
outsl
aas
cmpsl
jns
test
shll
cli
jmp
push
ret
rclb
test
sbb
in
movsb
cli
incb
sbb
arpl
xor
dec
dec
cmpsl
push
rol
shll
jbe
lret
push
mov
mov
cmp
gs
outsl
jg
jmp
push
pusha
xchg
aas
jo
adc
add
xor
loope
jp
scas
push
divb
loopne
push
mov
ds
lods
jmp
stos
andl
mov
xor
in
sub
dec
sub
pcmpgtd
xchg
or
mov
and
dec
or
and
cmp
data16
or
or
mov
jmp
or
scas
sti
inc
mov
aas
out
out
push
mov
stos
xchg
jl
test
dec
pusha
sbb
add
fcompl
mov
xlat
rcrl
arpl
dec
jle
pop
cld
lods
mov
inc
loope
cmc
stos
sbb
mov
scas
in
mov
mov
arpl
sub
inc
hlt
jno
xor
push
dec
lds
repnz
or
jle
loop
cs
into
ja
push
stc
jle
sbb
push
pop
cmc
lock
jmp
jns
idivl
jne
movsb
sbb
cltd
mov
mov
aad
jmp
xchg
test
mov
push
scas
pop
ljmp
xchg
mov
es
shlb
lds
inc
test
ja
fs
pop
cmp
in
mov
cmp
dec
sbb
cmp
addr16
sarb
jae
insb
jmp
icebp
xor
push
mov
mov
cmpb
jb
mov
push
xlat
or
gs
adc
or
xor
aaa
cltd
inc
push
lods
mov
shll
cmp
loopne
cwtl
mov
shrl
int
std
pop
pop
sbb
push
xchg
enter
or
popf
std
cmp
les
xchg
mov
int
and
xchg
xlat
push
test
lcall
icebp
imul
jecxz
imul
push
in
and
push
mov
iret
and
dec
loopne
sbb
into
xchg
sahf
add
int
gs
and
addr16
out
pop
and
aaa
jo
imul
cmp
movsb
add
cmpsl
jo
rorb
mov
push
sub
add
popa
inc
xor
inc
sub
int
rcll
inc
into
and
scas
repz
addr16
mov
push
les
movsl
xchg
dec
push
std
sbb
dec
pop
mov
mov
xchg
mov
int3
xchg
out
xchg
fidivrl
ret
cmpsb
xor
insb
ret
mov
mov
repz
imul
push
jmp
movsb
aaa
call
sbb
mov
inc
rorl
lahf
lcall
pop
addr16
stos
iret
fisttpl
bound
dec
and
scas
xor
xor
and
jmp
std
pusha
adc
xchg
mov
fwait
dec
icebp
loope
or
mov
sete
sub
outsb
jmp
inc
sar
aam
scas
dec
xor
mov
mov
rcrw
push
jle
push
fadd
cli
xor
sub
lret
dec
and
cmpsb
fwait
or
mov
cmpsb
out
fstpt
xor
adc
adc
stc
mov
mov
adc
popa
mov
xor
int
lahf
pop
jne
aaa
dec
mov
leave
xor
ds
jns
jno
pop
dec
test
xchg
or
or
je
movsl
xor
popf
jno
and
cs
mov
lods
jne
rorl
sub
leave
ret
int
xor
adc
repz
outsl
movsb
push
ret
jbe
push
mov
cmp
ss
iret
outsl
out
jnp
fbstp
cld
pop
outsl
stc
inc
jge
xchg
fisttpl
out
and
sti
lahf
dec
imul
clc
jmp
or
call
ja
lods
movl
shll
xor
dec
push
icebp
jle
mov
jno
pushf
mov
dec
push
pop
sbb
xlat
sbb
dec
sbb
jbe
aaa
adc
loopne
push
aam
out
jne
fists
rorb
sub
jecxz
insb
push
and
xchg
mov
inc
in
aas
add
repnz
loopne
sbb
adc
into
add
adcb
mov
xchg
mov
pop
adc
addl
adc
repz
pop
ljmp
add
xor
pop
pop
jnp
dec
aam
clc
fs
nop
ret
sub
and
push
xchg
dec
out
sbb
xchg
sbb
push
dec
add
cs
mov
or
in
int
dec
pop
cmc
data16
mov
and
push
mov
lock
fistl
gs
cmc
pop
mov
xchg
add
xor
cltd
imul
jl
mov
repnz
ds
lds
push
dec
fisubl
jmp
xor
jp
scas
mov
repz
xchg
and
cli
dec
xlat
mov
orb
in
mov
push
inc
add
adc
in
push
xchg
gs
push
imulb
and
inc
scas
adc
addr16
enter
nop
pop
ljmp
jge
adc
daa
or
jmp
xor
arpl
push
pop
int
xchg
test
fcmovbe
inc
lcall
mov
cmp
sbb
jle
mov
out
and
pop
xadd
sub
adc
lock
and
mov
inc
in
aas
lret
or
xchg
jnp
or
mov
push
and
dec
insb
xor
incl
jecxz
iret
lods
mov
in
jbe
push
nop
repnz
and
mov
and
sbb
in
ja
loop
loopne
xor
aas
push
inc
cmp
pop
sbb
pop
mov
call
or
in
in
repnz
or
jns
insb
push
in
jne
adc
lcall
into
mov
fildl
push
scas
ss
std
idivb
cli
out
gs
test
mov
cltd
xchg
das
xchg
jge
mov
and
xchg
test
inc
pop
jbe
mov
test
xchg
sub
push
cmc
or
mov
adc
add
fisubrl
cltd
mov
fwait
sbb
or
out
sbbb
mov
jbe
sub
mov
les
clc
and
dec
in
sub
push
inc
daa
lods
mov
mov
jb
insw
mov
add
and
loopne
in
mov
pop
xchg
pop
mov
or
sarl
loopne
add
adc
and
xor
dec
cmp
cli
jnp
sbb
insb
dec
jge
xchg
inc
leave
or
iret
jl
adc
imul
dec
push
stos
movsl
insb
out
sbb
pop
movsb
test
enter
js
adc
jae
add
push
dec
xor
mov
add
adc
push
cmp
decb
leave
sub
xchg
dec
shll
insb
scas
mov
xlat
jne
sbb
pusha
inc
test
mov
ljmp
out
push
in
and
movsb
sbb
mov
lret
xlat
imul
ljmp
out
push
mov
sbb
mov
mov
jns
imul
jl
xor
sbb
int3
in
dec
idivl
and
inc
mov
popf
ds
and
dec
lods
repnz
mov
data16
lea
fcomps
cltd
int3
cld
addb
mov
jmp
adc
outsl
or
mov
pop
in
popa
arpl
test
fimuls
push
fidivrl
pop
imul
push
xlat
std
pop
push
adc
mov
mov
xor
inc
adc
sbb
push
sbb
pop
pop
jnp
icebp
cmp
mov
repz
into
rolb
sub
or
shll
mov
adc
inc
sahf
je
sbb
push
jno
imul
mov
xchg
ss
jbe
jmp
inc
scas
fcomip
addr16
rolb
cmp
add
add
mov
aaa
xor
gs
mov
xchg
sub
push
xchg
lahf
fnsetpm(287
lods
push
loope
or
xchg
mov
jnp
xchg
icebp
sbb
pop
ds
xchg
pop
popf
sub
cmp
xchg
xchg
int3
into
or
leave
push
and
icebp
pop
cmp
push
addb
or
push
jecxz
add
notl
mov
cmc
in
lret
mov
mov
rol
push
cmc
rorb
mov
xchg
ficoms
adc
add
sub
lock
mov
xor
lds
push
mov
dec
ds
dec
jne
mov
idivl
into
jae
rcrl
pushf
lods
sbb
mov
pop
fdiv
dec
xor
not
mov
lods
in
fwait
sbb
mov
cmp
dec
fsubp
push
add
in
dec
shlb
jnp
fstpl
dec
outsl
idivb
mov
mov
icebp
sbb
iret
lds
stc
notl
mov
push
loopne
cmc
push
ja
cmpl
dec
lahf
and
les
mov
int3
out
dec
push
mov
cwtl
icebp
or
pop
flds
stos
add
sub
repnz
xchg
and
xchg
mov
ret
cmp
mov
xchg
jecxz
mov
clc
enter
or
lret
xor
insb
pusha
add
bnd
jmp
subb
jne
stc
xor
and
inc
mov
out
sub
jns
jno
mov
adc
loopne
loop
lods
lea
das
pop
ficoml
out
gs
lcall
imul
call
sub
or
xchg
sbb
mov
or
or
icebp
jge
dec
test
movsl
ret
inc
jnp
lret
inc
int3
hlt
bound
loop
pop
popf
or
push
or
mov
dec
enter
int3
push
sbb
dec
lds
stos
shlb
cmp
dec
mov
sub
fs
movsb
and
fildl
pop
xor
dec
xchg
popl
aas
push
inc
lods
scas
mov
jns
loope
loope
xor
jg
xchg
mov
push
and
insb
dec
aad
pop
sbb
add
xchg
ficoms
aaa
sub
or
pop
push
std
sub
mov
repz
jbe
xor
in
imul
loop
lock
mov
xor
lds
push
ds
arpl
cmp
pop
jmp
push
divl
add
mov
scas
nop
push
int
dec
fstpl
out
mov
lret
xchg
fs
cli
adc
dec
pop
or
sbb
dec
cmc
jg
sti
fs
or
sbb
mov
push
add
lea
add
inc
mov
imul
or
sbb
outsl
adc
pop
movsb
pop
das
sti
cmp
sub
fcoml
es
inc
lret
xlat
movb
inc
and
push
adc
sbb
pop
dec
movsb
mov
lea
adc
mov
cmp
imul
test
jnp
in
pop
les
loopne
fcmovnu
jg
adc
aas
push
mov
sbb
std
mov
aad
popa
iret
cmp
lds
pushf
cmp
rclb
test
std
out
jno
dec
clc
or
pop
xchg
mov
roll
sub
orb
pop
arpl
adc
shl
scas
daa
push
sbb
sub
add
xchg
scas
leave
mulb
shrb
movsl
in
out
in
pop
mov
push
sbb
and
add
fdivrs
mov
and
push
add
xchg
xchg
les
adc
shll
cmp
pop
add
ret
jg
mov
mov
or
cmpsb
fwait
or
xor
mov
les
mov
scas
mov
push
test
in
fdivr
jnp
mov
lcall
push
and
mul
add
jb
fimuls
in
call
fs
mov
adc
mov
dec
mov
inc
and
sbb
in
xchg
push
aad
js
mov
jmp
js
and
stos
push
lret
pushf
lods
dec
gs
imul
mov
loop
sti
push
mov
into
pop
aaa
adc
lahf
mov
push
leave
cltd
test
push
pop
es
cld
pop
out
cs
test
lods
jae
imul
cmpsb
mov
fstps
push
push
aaa
cld
jns
ret
movsl
jp
push
push
lods
xchg
mov
sbb
add
mov
xchg
lahf
xchg
xlat
stos
js
aad
mov
out
rolb
cmc
xchg
xor
jmp
enter
sub
call
xchg
pop
sub
sub
push
imul
cli
int3
icebp
and
out
sbb
lahf
jl
xchg
add
stos
test
inc
or
pop
sti
jno
test
sti
dec
aad
pop
in
movsb
test
daa
data16
stos
pop
loop
repz
adc
cmp
dec
lahf
js
xlat
and
push
aas
push
ds
dec
dec
fidivl
cld
test
xor
loopne
and
pop
sbbb
cmp
clc
mov
dec
dec
stc
fcom
scas
add
into
outsl
jge
shll
fnstcw
sbb
dec
std
aam
outsl
icebp
lret
dec
es
sub
repz
shlb
push
out
dec
add
outsb
insb
mov
bnd
adc
je
xchg
mov
jle
test
into
jne
cltd
movsl
mov
dec
push
stc
add
push
out
es
inc
mov
pop
fstpt
push
and
jae
sub
push
ret
icebp
pusha
jl
imul
fistpl
dec
imul
xor
lods
jle
pop
stos
movsb
add
sub
dec
cmpsl
stos
out
es
jge
cmpsl
mov
add
push
hlt
mov
or
sbb
fs
pop
push
sub
and
cmp
jmp
or
xlat
pop
sbb
mov
and
add
xchg
or
test
adc
cld
pop
push
test
andb
jae
fistpll
cmp
out
pop
push
sub
shlb
movsl
mov
add
or
pushf
push
mov
cmp
or
stos
cwtl
in
imul
xor
cmp
out
xor
scas
shlb
cli
mov
inc
fcoms
mov
dec
cs
out
sub
test
mov
lods
and
nop
sarb
and
adc
xor
dec
ror
cltd
xor
ss
aad
sub
dec
dec
xchg
sub
addr16
or
sbb
popa
fisttpll
xchg
pop
mov
sbb
imul
aad
add
mov
and
imul
loop
and
mov
fidivl
inc
sbb
mov
ljmp
or
gs
fsub
loopne
or
jg
ret
in
ljmp
nop
jae
cmp
test
test
nop
adc
jns
aam
sti
lea
pop
and
fidivs
push
imul
in
pop
pushf
stos
lea
xchg
inc
sbb
shrb
push
mov
inc
jg
rol
cld
insb
sarl
js
xor
jmp
xor
dec
and
icebp
mov
js
mov
insb
mov
xchg
jecxz
enter
cld
jne
insl
jno
add
rclb
js
lods
movsl
iret
test
aad
xor
lds
roll
outsl
js
sbb
imul
xchg
xchg
mov
aam
and
inc
jecxz
sbb
sbb
jnp
lcall
xor
loope
jo
push
jae
xor
xor
in
and
sar
xor
insb
popa
js
sub
dec
insl
push
fisttpl
inc
jecxz
std
movsb
mov
inc
pusha
fisttpll
rcrl
int
dec
into
dec
pop
cwtl
jge
addr16
je
lea
int3
movsb
inc
enter
pushf
fstpl
sbb
call
imul
push
nop
int
repnz
jge
inc
push
mov
pop
cmpsb
outsl
xchg
stc
cwtl
jno
or
dec
and
lret
and
cwtl
les
and
fdiv
imul
pop
xchg
loope
faddl
out
jmp
fwait
loopne
or
sahf
loope
pop
imul
and
inc
lods
lock
mov
insl
mov
lret
jmp
lods
out
jecxz
jb
fistpll
cmp
sub
fisubl
dec
nop
push
cmc
test
jp
insl
es
inc
jbe
mov
mull
and
fstpt
ss
jne
shr
in
or
std
cltd
dec
cmpl
fistl
insl
cmp
mov
mov
addr16
dec
sbb
rcrb
jo
xchg
out
cmpsb
mov
cmp
xchg
cli
mov
mov
cltd
mov
imul
push
shll
cmpsl
adc
cs
aad
and
push
fisubs
popa
cltd
pop
push
mov
movsbl
je
cmp
call
mov
inc
enter
xchg
int3
xor
and
mov
cmc
and
cli
shr
dec
xchg
xchg
cmp
xchg
imul
ret
inc
sub
sbb
in
cmp
or
jmp
fdivl
fimuls
push
lret
jge
mov
loop
sub
pop
inc
fadds
cmp
mov
stc
aad
jle
shl
push
cmp
movsl
cmc
lret
push
in
stos
fistl
mov
fsubrp
clc
lea
out
adc
mov
dec
push
cmp
into
insb
rclb
fcmove
icebp
sbb
pop
sbbl
divb
jmp
dec
leave
in
dec
jo
ss
xchg
stos
pop
ficoms
arpl
xor
dec
pop
adc
xchg
mov
adc
loop
ret
or
lret
cld
cwtl
hlt
insb
icebp
out
adc
pop
pop
and
mov
inc
scas
lret
notb
test
jnp
push
cmp
movsb
sarl
adc
dec
outsl
rcrl
ljmp
out
aaa
frstor
insl
jmp
fistps
xchg
movsl
idivb
fldt
lcall
cmp
popf
decb
int3
jae
lcall
jns
mov
pop
or
lods
fwait
std
push
bound
in
shll
adc
push
add
sub
push
adc
sti
iret
and
addl
test
dec
mov
mov
jns
adc
das
imul
xchg
sbb
clc
mov
std
movsl
inc
push
sub
or
push
pop
fwait
sbb
mov
add
neg
test
mov
pslld
dec
mov
hlt
test
mov
jnp
stos
cmp
pop
cmpsl
pop
xor
sub
sbb
xchg
jp
mov
dec
and
data16
adc
mov
inc
outsb
in
sub
insl
xchg
ret
loop
adc
add
sti
adc
bound
sbb
jb
mov
repnz
in
jnp
cltd
out
test
xchg
test
sub
outsb
mov
mov
mov
jle
cmp
pop
mov
jns
adc
lods
cmp
stc
sbb
sub
cmp
cmp
jl
sub
aad
sub
add
outsb
bound
pop
jle
rcrl
out
jmp
dec
mov
jne
mov
adc
scas
mov
es
sub
mov
jo
fsub
outsb
insb
sbb
inc
hlt
cltd
clc
test
icebp
lods
les
shll
inc
adcl
dec
xor
pop
lret
sub
sub
push
jmp
mov
lret
add
decl
imul
adc
mov
into
dec
lods
push
mov
lret
dec
arpl
in
mov
pop
jg
je
push
or
enter
das
jp
insb
cld
jecxz
xor
push
jbe
fs
push
dec
jge
add
pop
add
lods
test
sti
das
push
psllw
sbb
fsubrp
push
push
jl
pop
and
dec
iret
xchg
lea
adc
inc
cs
stc
test
push
sub
cmp
les
mov
mov
mov
sbb
xchg
add
ljmp
shll
cli
cmp
pop
sub
add
jae
jmp
negl
and
out
insb
or
cmpsl
movsl
sbb
sbb
pushf
stos
inc
pop
pop
mov
pop
inc
or
or
cs
xchg
int
mov
sbb
dec
insl
dec
jge
js
fidivs
push
decl
adc
sub
mov
ja
push
pop
fcmovbe
jg
mov
dec
notl
mov
adc
decb
popf
add
insb
data16
mov
jb
punpcklwd
cmp
add
or
das
gs
imul
hlt
cltd
lret
popf
sarl
jno
mov
movzwl
jge
lcall
push
lock
es
lods
imul
add
add
lahf
test
rcr
add
sub
pop
ss
icebp
dec
push
dec
mov
lahf
ror
mov
adc
inc
mov
arpl
mov
jo
repz
adc
or
out
aas
addr16
stos
orb
sub
cwtl
test
add
shlb
es
movb
adc
pop
fwait
cmp
stc
lock
and
mov
jno
sub
and
xlat
gs
add
lods
xor
add
mov
daa
xchg
xchg
push
or
fdivrl
out
dec
repz
dec
jb
sub
lock
xlat
pop
rorb
fstp
lods
jb
xchg
mov
xchg
cmc
add
in
add
and
daa
pop
cwtl
faddl
clc
or
ss
aas
pop
push
fdivl
ret
gs
jge
cmp
scas
sbb
and
cmp
ret
lcall
in
fimuls
jmp
mov
imul
iret
subl
int3
and
stos
jb
push
dec
xchg
sub
sub
insl
loope
adc
je
kmovw
pop
arpl
sbbl
jmp
faddl
jbe
sub
aaa
sbb
jg
orb
ret
ds
xlat
and
out
cmp
imul
and
sahf
mov
daa
icebp
adc
cmp
sub
iret
out
pushf
ljmp
fbld
popf
out
bound
or
mov
pushf
pushf
fwait
cmp
adc
sbb
mov
cwtl
sbb
add
aam
sahf
cs
mov
mov
cmp
or
out
fisubs
jmp
sub
lret
mov
xlat
pushf
jmp
addl
out
sub
out
dec
xchg
enter
jae
mov
cmc
outsl
push
pop
add
cmp
mov
stos
movsb
int3
mov
mov
or
fisubs
scas
jmp
sub
push
in
ret
or
add
out
mov
imul
jno
ret
loopne
sub
xchg
xor
xchg
add
dec
cmp
pop
pop
ret
add
mov
fs
or
enter
and
jae
pop
movsl
iret
jne
out
adc
mov
xchg
fdivrs
adc
lock
add
dec
cld
push
outsb
negl
andl
inc
xor
cwtl
mov
push
dec
ja
test
jne
and
lret
imull
hlt
es
or
mov
arpl
clc
mov
std
xchg
dec
cmpsb
jle
adc
sahf
test
cltd
imul
mov
jbe
shll
loope
rep
lret
fbld
sbbb
xchg
ficoml
or
call
data16
leave
test
cmp
mov
mov
inc
ljmp
cmpl
jmp
imul
add
aas
mov
loope
mov
ss
stos
fwait
jns
push
imul
insl
mov
mov
outsl
sbb
mov
xlat
rclb
dec
jb
aad
fimull
cmp
fs
pop
mov
pop
in
shll
pop
pop
test
or
pop
je
ljmp
xchg
cs
adc
mov
roll
test
pop
cmpsb
loopne
xor
pause
in
xchg
loope
out
pop
in
or
cmc
orl
loopne
mov
sub
dec
pop
inc
mov
out
mov
stos
lret
cmpsb
cmp
jne
or
out
xor
icebp
push
std
dec
xchg
out
cld
outsb
pop
iret
sub
out
and
loope
mov
imul
repz
out
out
hlt
push
pop
sarl
sub
fs
negl
xchg
push
shll
push
xlat
jg
lods
mov
pop
pop
pop
mov
fdivs
xor
test
push
inc
add
mov
lds
or
movsl
loop
push
push
sahf
insl
fdivrl
mov
rcrb
xor
incb
out
fdivl
jmp
add
test
add
push
pop
push
lret
pop
cs
aaa
dec
jecxz
cmp
adc
and
dec
cmc
movsb
mov
adc
sub
cmp
push
mov
sbb
mov
mov
into
xor
cltd
es
pop
and
rcrb
int
fucompp
and
and
push
push
fcmovnb
add
mov
test
cmp
popf
ljmp
into
mov
icebp
out
push
cwtl
fwait
icebp
sub
pop
fmull
faddl
pop
fwait
xchg
bound
or
add
jb
ds
dec
adc
test
push
sub
mov
cmpsb
ljmp
enter
and
fucomp
xchg
dec
pusha
xchg
test
js
inc
xor
lea
add
aad
daa
lea
outsl
cmp
adc
icebp
dec
call
scas
rorb
push
mov
lods
bound
fnstenv
and
or
jae
lahf
ds
adc
pop
pop
pop
pop
sti
out
in
jmp
mov
and
adc
fs
lock
fsub
push
arpl
dec
mov
pop
cwtl
mov
add
lock
movsl
mov
das
dec
sub
ds
mov
mov
call
push
mov
push
mov
fiaddl
jle
dec
daa
mov
int
call
iret
jg
testl
inc
xchg
add
pusha
mov
fdiv
or
andl
mov
pop
cld
pop
and
inc
cmp
and
xor
xchg
ret
dec
pop
push
inc
bts
xchg
in
pop
mov
inc
xor
or
add
lret
and
dec
add
dec
fstpt
cli
jns
add
jle
sub
loopne
and
lahf
mov
cmp
outsl
push
shl
outsb
pop
inc
inc
fsubrs
pop
sub
mov
fwait
xor
xchg
jle
pop
dec
lds
add
mov
mov
pop
iret
mov
cltd
push
pop
push
or
std
mov
dec
leave
mov
rol
push
cmp
pop
jmp
insb
and
movsb
shlb
ds
push
mov
add
mov
sub
push
repnz
add
pusha
movsl
cmpsb
jge
mov
movsb
pushf
xchg
lahf
daa
xor
out
sbb
andl
cmp
and
push
mov
mov
add
inc
cmp
pop
lcall
loopne
xchg
pushf
cmp
and
cmp
jle
outsb
mov
std
push
jae
cmp
xor
es
cmp
or
xchg
dec
xor
adc
cmp
push
imul
pop
cmp
aas
int3
mov
sub
outsl
and
mov
mov
repnz
push
mov
jmp
xchg
aam
or
sub
push
or
test
jbe
jg
enter
hlt
ret
or
test
push
xor
cmp
dec
fmull
inc
cwtl
hlt
mov
repnz
cmpsb
jg
pop
daa
and
movsb
lea
aam
and
popf
push
arpl
std
cmc
movsb
repz
pop
push
and
cmpl
cmp
mov
pop
inc
push
push
fcom
in
dec
popf
xchg
scas
stos
and
and
imul
sub
scas
int3
das
dec
int
push
pop
inc
mov
std
and
sub
jmp
fucomip
inc
cmp
int
pop
jmp
add
les
mov
addr16
repnz
mov
add
mov
inc
or
pop
int3
add
fstl
jbe
into
fs
dec
popa
outsl
ffreep
and
push
lods
sarb
push
add
sbb
ss
roll
fstpl
jne
popa
push
xor
inc
push
mov
repz
mov
cmp
lret
and
adc
std
out
enter
daa
pop
adc
imul
dec
scas
xorl
xchg
jns
hlt
jnp
aam
jbe
hlt
je
and
mull
mov
mov
jle
fldt
data16
sbb
ficompl
out
or
repz
push
in
fs
mov
dec
pop
jecxz
xchg
add
stos
imul
mov
fwait
adc
jl
insl
pop
clc
dec
popf
push
insl
pop
mov
sub
cmpsl
lea
xor
jmp
inc
cmc
and
mov
lock
repz
push
add
jb
xchg
sbb
imul
mov
and
inc
subb
mov
inc
clc
mov
adc
xor
sub
adc
in
lea
enter
sub
in
adc
and
rcll
sub
in
xorb
cld
ja
jg
data16
xor
cs
cld
in
add
stos
mov
push
push
lcall
or
arpl
lea
insl
sbb
xchg
out
loopne
icebp
inc
incl
adc
sub
sbb
into
pusha
outsl
jbe
pop
jo
insl
out
inc
cmc
mov
neg
inc
jae
rclb
lret
jl
adc
mov
pop
cmp
lret
loopne
out
and
subl
mov
cmovo
add
divl
cwtl
sub
push
lods
push
mov
flds
pop
repnz
pop
cmp
repz
adc
in
push
cmp
sub
jmp
pop
repnz
mov
sbb
and
popf
std
push
dec
stos
roll
rcrl
dec
aam
xchg
cmc
lock
into
mov
dec
test
popa
lods
arpl
jmp
rorl
cmp
mov
negb
lock
mov
pop
outsb
xchg
jecxz
push
xor
enter
or
add
cli
in
lret
aaa
lods
cmp
add
sti
sub
movsb
add
pop
cld
sti
jbe
sub
adc
lcall
cmp
xor
xor
lods
mov
icebp
std
fbstp
mov
jns
dec
sbb
jne
insl
mov
jb
or
in
dec
mov
inc
pop
adc
fstpl
mov
loope
adc
inc
test
dec
and
xchg
sahf
inc
xchg
jp
and
mov
sbb
arpl
outsb
or
fisttpl
or
pop
mov
rcl
in
daa
pushf
outsb
xor
or
out
jge
pop
cmp
in
mov
inc
stc
and
lea
cmp
loop
xchg
dec
xchg
lods
lcall
and
lcall
in
dec
xchg
mov
inc
mov
shlb
lock
sub
js
ds
jp
sti
cwtl
in
and
mov
inc
lcall
dec
dec
cld
fwait
and
mov
ret
lock
and
lret
cmpsb
stos
inc
inc
pop
cwtl
cmp
int3
adc
push
stos
add
cwtl
pushf
pushl
aas
add
gs
popa
shll
stos
int
inc
pop
cmpsl
fdivrl
orb
xchg
add
icebp
or
leave
mov
add
fisttps
fstpt
jne
xchg
add
add
addr16
jecxz
dec
mov
sub
sub
fisttpll
add
mov
cmp
mov
or
sarl
stos
iret
adc
pop
inc
mov
je
aaa
sub
jecxz
push
inc
std
mov
les
sub
jmp
xchg
or
mov
fmulp
jno
mov
mov
cmp
push
mov
xchg
push
push
mov
sub
xchg
xor
adc
lret
loope
xor
xchg
push
ss
pop
fidivl
xor
sar
jg
lret
xor
and
xchg
out
add
loop
mov
lcall
push
out
cltd
movsb
or
mov
testl
xlat
xor
mov
add
lods
jnp
add
test
xor
pusha
inc
movsl
daa
sub
pop
mov
adc
cmpsl
lret
push
mov
add
push
dec
add
movsb
dec
sbb
sbb
jmp
mov
pop
inc
pop
jb
mov
dec
in
jmp
mov
add
pop
icebp
sbb
adc
xchg
loop
mov
scas
mov
xor
sbb
rol
in
jmp
scas
or
xlat
xchg
enter
popf
call
outsl
sbb
dec
inc
add
repz
mov
stos
lds
cli
cltd
fstl
movsb
add
xor
lods
fbld
hlt
lahf
fucomip
xchg
mov
xchg
testb
ja
inc
es
inc
iret
or
sub
sub
adc
pop
sbb
hlt
loop
negb
aam
xor
pop
out
and
out
fiaddl
add
rorb
test
loope
arpl
mov
sub
lock
andl
imul
xor
ret
pusha
enter
insl
mov
popa
out
clc
adc
inc
sub
ret
pop
mov
shl
mov
jecxz,pn
divb
out
mov
in
cwtl
in
jbe
sub
out
je
fildll
pop
cs
xor
push
and
jl
or
mov
add
gs
inc
push
not
add
scas
cmpsl
lcall
add
xchg
outsb
gs
sbb
outsb
dec
nop
outsb
orb
lods
dec
call
mov
sub
cmp
lret
adc
xchg
mov
sub
push
xchg
cmc
fimuls
fdiv
lret
xlat
out
pop
dec
aad
dec
push
dec
and
cs
or
lea
repz
sbb
mov
mov
lret
rcr
and
cmp
sub
push
cmp
fstpt
das
ljmp
mov
enter
imul
sbb
lahf
add
and
lcall
andb
mov
test
icebp
mov
cmc
lds
push
sbbb
cmp
adc
cld
and
inc
repnz
push
call
mov
pop
test
jae
sbb
test
aas
loopne
inc
xchg
mov
notb
daa
rcrb
gs
cmp
jle
mov
movsl
and
xor
aad
cli
fcompl
stc
mov
adc
cli
jnp
div
aad
push
cld
and
and
shl
test
jae
imul
push
inc
xchg
in
adc
std
adc
fwait
pop
and
je
push
dec
int3
rolb
into
sub
out
outsb
outsl
mov
pusha
pop
movsb
xchg
xchg
bound
mov
lret
jge
lea
enter
jle
sub
hlt
pop
bound
pop
pop
clc
mov
mov
or
movb
jae
add
push
repnz
sahf
loope
into
jae
pop
idivl
nop
jno
mov
outsl
add
movsb
jge
repz
scas
or
or
pop
sub
push
push
outsl
rcll
mov
sub
push
cltd
pop
pop
popa
jecxz
lods
out
or
fucomp
test
scas
or
rcrl
cs
js
aas
shl
aad
adc
mov
cmp
ret
dec
push
cmc
xchg
in
shlb
pushl
pop
sbb
ljmp
or
pushf
das
jb
sub
dec
and
test
xor
inc
cmp
in
sbb
xor
addb
dec
push
and
bound
outsb
jae,pt
fdivl
mov
iret
int
rclb
repnz
jge
add
ds
add
loopne
rcrl
sbb
or
sbb
lea
inc
cmp
pop
push
cmp
leave
test
mov
push
dec
pop
push
sahf
in
and
sbb
pop
lds
repz
push
xchg
dec
cmp
mov
mov
and
mov
mov
lahf
jmp
sahf
xchg
fmuls
pop
mov
fnstenv
mov
mov
inc
adc
fiadds
rcll
aad
sbb
inc
adc
mov
sub
icebp
je
pop
cld
or
int3
add
xor
stos
stc
jo
or
subl
pop
and
das
enter
fwait
and
add
dec
dec
sub
mov
push
cld
pop
scas
adc
pop
or
push
fimuls
push
in
lods
into
movb
jmp
mov
jo
sbb
inc
adc
imul
jns
push
fwait
push
or
aam
lcall
add
pop
xchg
nop
js
pop
mov
push
outsl
ficompl
pop
icebp
sub
sbbl
mov
cmp
fnstcw
scas
cli
mov
dec
aam
jl
mov
adc
push
mov
es
and
clc
pop
fs
fwait
mov
mov
ds
pop
pop
push
or
mov
push
imul
xorl
cld
jns
in
js
mov
ret
push
xchg
out
mov
jno
int3
cli
push
and
mov
insl
addr16
mov
in
loopne
mov
cmpsb
lret
mov
sahf
nop
pusha
add
andl
mov
push
add
sbb
jns
cmc
iret
cmp
ljmp
data16
and
cltd
outsl
jmp
pop
aas
jg
in
daa
xor
stos
adc
push
in
mov
roll
xor
aam
xor
loopew
addb
cmc
push
fisttpl
daa
call
mov
ja
jae
push
sub
scas
adc
xchg
and
test
jne
adc
pop
mov
insb
aaa
add
outsl
popa
dec
pusha
cmpl
xchg
push
in
xchg
or
aaa
enter
int
popa
jl
and
lds
xlat
sub
roll
dec
or
rcrb
lret
mov
popf
xor
aad
dec
jmp
dec
aaa
cmp
adc
or
push
mov
mov
mov
mov
stos
mov
dec
icebp
mov
stc
mov
or
adc
lret
sbb
sti
push
cli
scas
xchg
les
in
scas
loop
inc
push
add
sub
addl
push
push
out
push
out
push
mov
cmp
mov
daa
fs
rclb
push
cmp
mov
loope
xor
and
push
test
dec
imul
mov
xor
div
add
sti
pop
loope
repz
popa
testb
sahf
pop
fiaddl
ljmp
test
or
fsubrs
fcomip
cld
and
ljmp
push
push
sub
test
mov
leave
enter
aad
mov
xchg
sbb
repnz
pushf
mov
mov
lret
dec
rcr
sbb
cwtl
dec
into
mov
rcl
jp
xchg
loop
xchg
fistps
pusha
pop
movl
push
mov
cltd
lods
cmp
jb
cli
cmp
hlt
push
repz
in
into
or
test
or
lods
jo
mov
jge
ficoml
nop
xor
cld
mov
pop
push
scas
or
les
pop
iret
repz
ret
dec
dec
dec
sarb
or
outsl
xchg
das
dec
divl
adc
dec
jne
or
pushf
je
xor
xlat
xchg
shlb
ss
adc
pop
enter
fmull
loopne
add
stc
jns
out
fistpll
cli
xlat
xor
popa
push
inc
jb
shlb
cwtl
pop
jnp
dec
cwtl
ret
adc
inc
rorl
dec
jno
xchg
sahf
xchg
mov
test
mov
repz
xchg
jne
into
rclb
jl
jo
xchg
out
cmpsl
inc
mov
xor
notb
cmpsl
mov
cmpsb
mov
arpl
cmp
lods
sbb
jg
mov
gs
and
dec
shll
sub
or
pop
xchg
xor
data16
adc
aad
pop
sub
xor
jg
pushl
dec
fcmove
sbb
ja
xchg
jbe
and
cld
inc
xor
add
imul
mov
aad
lret
les
imul
or
pop
out
inc
jno
lret
imul
mov
or
faddl
xchg
call
stos
loopne
rclb
mov
insb
lds
jne
pop
into
into
pop
out
lea
cli
rclb
sub
mov
xor
fs
xor
mov
loope
inc
enter
int3
add
cmp
mov
xor
mov
hlt
push
pop
lds
aaa
mov
test
mov
jle
or
jmp
lds
repz
push
pop
test
inc
leave
cmp
mov
lea
mov
icebp
fnstenv
ds
xchg
enter
ss
pop
sbb
xchg
in
jbe
or
or
push
imul
fnsave
enter
mov
fwait
mov
xchg
cmp
pop
cmp
adc
insb
add
stos
inc
outsl
mov
dec
inc
sbb
call
adc
xchg
test
andl
shr
loopne
push
mov
push
mov
outsl
subb
or
pop
fwait
repz
movsb
or
push
stos
jge
pop
cmc
insb
mov
adcl
mov
fstps
repz
jg
mov
arpl
ljmp
jg
sahf
out
or
add
adc
xor
dec
push
sbbl
inc
dec
xchg
and
gs
pop
ret
in
push
and
jmp
inc
or
es
xchg
or
lret
adc
inc
pop
xchg
scas
sub
dec
cli
mov
jnp
test
in
test
hlt
xor
push
pop
cmp
in
and
out
push
push
orb
call
rcrl
shll
xor
inc
jp
push
sub
ror
inc
addl
fwait
aaa
dec
cmp
add
xchg
xchg
ret
aam
push
jecxz
sub
xor
adc
mov
sbb
je
xchg
pop
in
xchg
cmp
subb
push
in
enter
ret
pop
stc
shlb
adc
hlt
dec
mov
ds
imul
mov
in
add
les
leave
iret
leave
test
cmpsl
xchg
cld
popf
les
stc
cmp
push
stos
stos
dec
inc
ret
in
daa
adcb
jo
enter
fnstsw
sahf
xchg
xchg
ja
iret
js,pt
mov
sti
adc
fists
test
pop
fs
inc
mov
mov
cmp
cltd
sti
inc
or
pop
xor
adc
fnstcw
andl
or
mov
stos
cli
lods
cmp
add
aad
push
jo
lock
jb
rcrb
inc
xchg
sbb
add
inc
sub
push
sbb
xor
jle
xchg
cmp
es
xchg
pop
repz
test
in
rorb
lea
leave
mov
mov
loop
pop
sub
subl
mov
xchg
ret
mov
ret
sbb
inc
iret
xchg
jle
xor
xchg
notb
jo
jl
inc
arpl
sub
test
outsl
inc
cld
out
or
outsb
inc
fcoml
icebp
inc
pop
jge
test
lcall
push
inc
rcrl
or
adc
iret
aam
stos
popfw
gs
in
shlb
cmp
fs
adc
stc
insl
je
in
mov
loope
sbb
ss
add
dec
data16
inc
dec
lods
clc
inc
out
xchg
push
push
int3
stc
xchg
pmulhuw
repz
mov
fbld
or
out
idiv
mov
push
addr16
adc
orl
es
mov
jb
jae
dec
arpl
or
mov
xlat
pop
loop
dec
into
push
mov
insb
sbb
pushf
clc
data16
cmp
add
hlt
pop
mov
andl
scas
sbb
pop
lods
ss
mov
or
pushf
or
orb
cmp
push
ja
pop
jecxz
push
mov
add
mov
jbe
mov
ds
cli
mov
jo
push
or
cmp
fmuls
sbb
sahf
scas
push
in
and
fwait
shrb
fmul
negl
out
sub
jmp
fistps
xor
addr16
maxps
inc
ja
inc
pop
lods
test
clc
imul
inc
nop
mov
lcall
add
lods
cmc
jmp
jo
clc
sbb
into
inc
movsb
and
pop
inc
fildl
ret
mov
add
cmp
add
cmpsb
mov
add
and
aam
fsts
cmp
loope
into
popa
sbb
aam
fildl
push
jg
jle
lods
inc
les
cmp
and
cmp
js
rorl
and
mov
sbb
mov
imul
and
push
sahf
jp
lods
pop
inc
pop
nop
mov
test
scas
cmp
aam
dec
xor
pop
rol
iret
std
je
flds
jns
filds
sbb
sbb
mov
pop
adc
insl
jae
jmp
lcall
rcrl
daa
mov
xrelease
aaa
ss
out
jbe
xchg
ficoml
stc
not
adcl
stos
sar
nop
mov
imull
loope
xchg
fsubs
add
enter
inc
clc
inc
xor
mov
ror
sar
loopne
sub
cmpsb
lds
jb
decb
cmp
int
jns
movsl
into
data16
rorl
jecxz
daa
dec
popf
cmc
sub
sbb
xchg
mov
ljmp
xor
jo
and
mov
pushf
inc
fbld
jne
dec
testl
add
lds
hlt
mov
mov
inc
mov
dec
lea
ltr
scas
pop
sub
cmp
nop
push
pop
or
xor
loop
xor
sbb
sarb
xchg
loop
jne
cmc
add
outsl
jo
lret
xchg
jl
mov
xor
push
mov
insb
std
mov
cs
popf
dec
inc
xchg
and
bound
out
cmp
xchg
pop
insl
or
push
call
lock
fcos
mov
call
repnz
test
jl
out
sbb
pop
es
jbe
insb
jbe
xchg
jmp
clc
clc
shlb
lods
pop
filds
adc
cmp
sbb
or
lea
mov
cmp
pop
jno
mov
cmp
lret
mov
jecxz
and
mov
inc
xor
movsl
dec
pop
pop
aaa
rcrl
push
pop
mov
out
call
push
ss
dec
jbe
fbld
lahf
push
orb
add
arpl
adcb
addr16
shlb
mov
add
movsb
int3
mov
adc
xchg
scas
dec
loope
push
xchg
les
inc
insb
inc
pop
jecxz
push
ds
int
out
jno
xchg
cltd
sbb
or
xor
jecxz
or
movl
in
and
lret
subl
pop
nop
cmp
sub
jne
rcll
push
mov
fcmovnbe
popf
mov
lret
std
xchg
mov
push
aas
jg
jnp
cld
dec
pop
nop
add
jae
into
push
inc
in
and
sti
xrelease
sbb
repnz
outsb
mov
or
imul
rolb
cmpsl
ret
imul
xchg
hlt
xchg
mov
or
xorl
pop
and
cld
popf
dec
inc
pop
xchg
cwtl
imul
adc
outsb
jbe
repnz
out
rorl
and
or
pop
outsl
jecxz
jle
std
add
xchg
sub
loopne
mov
mov
lods
std
loop
xor
xor
test
test
mov
into
sub
sub
and
push
cmp
push
add
fucomp
cmp
and
sub
mov
jb
mov
inc
xorb
stos
in
ds
dec
negl
outsl
sub
sbb
aas
jne
mov
inc
cs
sahf
cltd
js
dec
jp,pn
cmp
dec
inc
scas
ror
dec
adcb
jno
mov
cs
imul
cltd
movsb
cmpsl
xor
pop
cltd
negl
xor
fisubl
es
sub
pop
or
movsl
mov
or
iret
popf
sub
rcr
xor
inc
and
pusha
insb
dec
inc
cltd
inc
movsl
sbb
cmpsb
in
cmpsb
divb
cmpsb
push
fsub
cmpsl
hlt
shll
pop
pop
pop
jae
ja
mov
pushf
xor
insb
inc
push
dec
js
cmp
iret
jecxz
mov
dec
dec
loope
cld
in
int3
jns
jmp
cmp
mov
bound
test
dec
jae
xor
icebp
cmpsl
shl
aas
sbbl
dec
cli
ret
das
orb
rcll
negb
pop
or
mov
cmp
push
xor
jbe
leave
dec
pop
test
dec
mov
lahf
push
xor
xchg
mov
sti
ss
xor
std
sbb
add
push
cld
jae
movsb
dec
pop
movsl
mov
add
setl
data16
and
popf
mov
jae
clc
mov
dec
xlat
jl
and
std
or
mov
or
mov
push
cmp
aad
mov
in
lahf
movsb
test
call
push
idivb
ret
lahf
ljmp
push
test
mov
out
lret
lea
dec
pushf
fists
bound
adcb
jp
mov
inc
sahf
xchg
dec
fistps
pop
bswap
pop
enter
sbb
es
mov
fs
mov
mov
lea
push
add
xlat
fidivs
add
mov
jae
jg
test
jno
xorb
jnp
xor
mov
lock
or
mov
aam
andb
mov
pop
into
push
and
in
cwtl
mov
fmul
jecxz
inc
lds
in
adc
into
cmc
jae
push
sahf
movsl
jmp
cwtl
movsl
push
mov
test
xchg
inc
pushf
add
push
pop
mov
pop
sahf
inc
mov
popl
pusha
stc
mov
push
adc
mov
into
inc
iret
dec
push
sub
ja
jecxz
xchg
shl
mov
adc
mov
repz
mov
adc
and
dec
push
std
cmp
dec
push
arpl
hlt
dec
cmpsb
dec
incb
inc
outsb
stc
lret
jbe
jnp
mov
ss
or
aaa
pop
xlat
sbbb
inc
shlb
mov
dec
mov
sbb
popa
dec
xchg
lods
mov
sbb
xor
test
fnstenv
cld
cmpb
jae
mov
and
fwait
or
ret
fdivs
adc
pop
sbb
mov
fnsave
mov
imul
scas
mov
pusha
ja
push
outsl
pushf
popl
idivl
mov
dec
int
and
add
out
dec
adcl
lret
cmp
mov
iret
mov
dec
pop
mov
cmp
xchg
fcomps
insb
stc
and
or
adc
cmp
jno
add
inc
cmp
inc
cmp
fldenv
push
jae
mov
mov
jo
into
mov
sbbb
repnz
push
mov
fisttpll
sbb
mov
insl
adc
cs
out
lds
ss
push
jmp
or
std
jle
in
add
ret
idiv
xchg
in
es
ljmp
cmp
cmp
add
cli
cmpsl
lret
mov
inc
jbe
xor
xchg
add
jmp
leave
std
hlt
bound
js
scas
pushf
mov
rorl
mov
insb
mov
lods
lcall
mov
pop
adcl
test
inc
cs
jecxz
or
scas
call
cltd
inc
stos
push
les
subb
call
xchg
mov
je
jns
int3
mov
push
out
loope
inc
mov
int3
pop
enter
gs
adc
test
pop
pop
cld
mov
popf
lret
xor
rolb
fimull
fbld
jl
xchg
mov
in
pop
gs
xor
jmp
xchg
mov
xor
lods
loope
xor
shl
rcrb
fld
add
mov
ljmp
je
rcl
ja
je
mov
testb
add
enter
dec
mov
adc
xchg
loopne
add
lret
leave
mov
mov
out
popa
cmc
nop
inc
mov
popl
xor
inc
push
fdivrs
pop
or
and
jns
nop
sub
cmpb
inc
inc
dec
lcall
sti
pop
int3
je
das
push
pop
xchg
pop
or
pop
mov
pop
incl
subb
adc
jmp
jns
or
mov
and
jne
fisubrs
inc
insb
sub
adc
icebp
cmpsb
fcomps
push
mov
push
or
fmull
inc
cmp
insl
jecxz
or
mov
pop
mov
mov
jno
and
lahf
inc
je
jno
shll
pop
push
mov
sub
xchg
push
je
mov
cltd
sub
aas
adc
xchg
popl
out
inc
test
popf
add
xchg
inc
popa
hlt
jecxz
push
sbb
movsb
inc
in
in
insl
or
pop
not
push
jmp
outsb
vpsadbw
movups
jecxz
mov
mov
fcoms
stos
pop
sti
pop
ds
dec
or
lods
faddl
daa
mov
loopne
sbb
add
jl
xchg
xor
imul
arpl
add
test
lret
cmpsb
xchg
jbe
pop
sub
cmp
sbb
dec
bound
jae
dec
lret
mov
inc
into
add
rolb
imul
mov
cwtl
rol
lea
adc
fs
mov
jne
adc
addr16
inc
repnz
jno
cmp
nop
and
fidivrl
test
push
loope
out
xor
adcb
lret
adc
sub
pop
dec
rcrb
jb
mov
or
lods
cwtl
loope
je
std
sub
mov
inc
sub
jmp
jecxz
pop
dec
dec
inc
out
movsb
add
rorb
sbb
push
mov
sbb
sub
enter
adcl
scas
je
inc
test
ljmp
sbb
into
aaa
cmp
xchg
fwait
mov
insl
pop
pop
add
std
pop
in
pop
xchg
cmp
or
xor
adc
cmpsl
fisttpll
pop
scas
adc
loop
and
ja
sbb
andl
out
push
lahf
inc
dec
xlat
ds
inc
test
dec
jb
pop
fisubl
lods
xchg
push
aaa
cmc
stc
dec
mov
xchg
cmp
dec
arpl
hlt
adcb
adc
pushf
imul
inc
pop
push
xchg
ret
dec
jne
push
jne
cmp
hlt
mov
xor
arpl
fidivrs
dec
into
loope
testl
jp
xor
fsubl
jne
and
pop
pop
and
cmp
and
repz
lret
sti
mov
fs
stc
je
pop
fists
mov
scas
insl
jbe
data16
in
negw
add
loopne
sbb
outsb
push
je
mov
mov
incb
add
testb
cmp
movsb
or
jb
leave
xchg
fnstenv
lds
push
rorb
mov
push
pop
push
cmovge
mov
aam
punpckldq
mov
sbb
lret
lock
add
fwait
inc
mov
mov
rcll
popf
aas
nop
pop
jne
mov
out
or
and
mov
cmp
cwtl
movsl
iret
icebp
stc
popa
jmp
xchg
sbb
push
inc
ljmp
dec
sahf
dec
mov
push
mov
pop
xor
or
int3
nop
xchg
mov
pop
cli
cmp
xlat
xor
loopne
imul
out
fs
jmp
inc
cli
mov
push
lods
or
and
push
add
jbe
jmp
xchg
stos
push
pop
stc
mov
xchg
mov
push
jbe
sbb
mov
sbb
sbbl
inc
in
dec
xchg
sub
dec
sbb
mov
jb
xchg
cmp
pop
nop
push
sbb
outsb
mov
cmp
sarb
dec
or
ret
mov
inc
xchg
inc
fnstsw
lock
xchg
pushl
scas
mov
xchg
cmp
sub
and
sbb
mov
and
jge
test
mov
daa
pushf
jne
in
test
sbb
adc
sbb
inc
jl
xchg
cmp
mov
mov
stc
ljmp
inc
es
xchg
adc
je
fdivrl
mov
mov
cmpsb
fmuls
push
scas
sbb
mov
xchg
mov
add
dec
iret
cwtl
xchg
and
xchg
cmpsl
cwtl
movsb
xchg
xor
xor
insl
aam
sbb
shll
arpl
addr16
jg
movsl
xchg
jne
adc
in
shrb
xor
movaps
dec
mov
push
popf
push
sbb
pop
inc
stos
inc
pushf
mov
pop
shlb
fildl
cmp
xor
dec
sub
mov
pop
in
xchg
lea
fxch
sub
sub
cmp
sub
mov
or
out
fiadds
test
rolb
ljmp
lds
sub
sbb
je
cmpsl
jne
and
stc
pop
pop
addl
aad
sbb
push
jp
inc
mov
fwait
xchg
out
add
jle
xor
jnp
xchg
repnz
cmp
test
repz
aad
add
xor
and
mov
jnp
call
and
mov
dec
adc
cmpsl
pop
insl
mov
out
pop
jle
sbb
scas
imul
icebp
jle
hlt
pop
mov
or
jns
mov
orl
or
xor
mulb
mov
sahf
inc
clc
test
mov
mov
dec
push
lds
leave
ret
mov
leave
add
sub
sub
loop
test
aas
imulb
mov
lock
decl
out
in
mov
test
sbb
lods
mov
jbe
lods
add
scas
push
push
imul
jg
push
mov
test
push
clc
loope
push
mov
psubq
aas
lret
in
xor
mov
rol
or
and
aam
dec
pop
leave
out
les
pushl
jg
sub
pop
xor
xchg
push
pop
lahf
sub
dec
jno
fsubrp
mov
jmp
shl
xchg
mov
enter
rcpps
xchg
in
cmp
push
inc
outsb
add
dec
std
adc
mov
nop
in
inc
inc
imul
push
and
loopne
frstor
lods
lahf
movsl
repz
mov
add
test
fisubs
dec
fcomps
pusha
leave
push
out
je
inc
add
lods
clc
mov
push
mov
xchg
dec
sbbb
adc
loop
push
pusha
out
nop
gs
paddw
insl
outsl
mov
adc
dec
sub
in
adc
or
pop
inc
cmp
jg
test
rcl
mov
sub
mov
je
adc
fsubp
das
in
mov
dec
pop
daa
mov
pop
mov
gs
add
push
add
out
or
sahf
push
loop
jnp
add
lods
pop
mov
pop
les
dec
jge
popf
dec
cmp
fs
xor
dec
jle
inc
ja
add
cmc
les
push
push
aas
jns
iret
dec
lds
inc
xchg
pop
cmp
insl
in
cli
cmp
lahf
lds
arpl
push
dec
add
push
xchg
mov
sti
aaa
xchg
mov
jns
jp
cmp
push
jg
shlb
sbb
data16
hlt
addr16
imul
xchg
push
xor
cmp
fs
call
add
ret
push
int3
push
sti
adc
or
imul
iret
lret
pop
rorl
clc
jb
test
stc
push
ret
dec
dec
dec
jmp
push
sbb
xchg
dec
clc
xlat
into
sub
out
movq
imul
shlb
inc
popa
inc
push
mov
sahf
xchg
idivl
loopne
aad
dec
es
cmp
data16
fiaddl
pop
inc
stos
xchg
pop
pop
out
outsl
fisubl
jnp
mov
xchg
mov
pop
and
test
jno
sarl
adcb
fwait
dec
or
out
stc
dec
cld
jecxz
rorl
inc
cmc
pop
sub
imul
bound
jne
adc
inc
sbb
push
in
pop
inc
mov
push
fists
pop
cmp
or
or
mov
lcall
xchg
push
mov
lahf
shr
pop
cmc
cwtl
and
stos
cmp
fadd
or
add
pop
mov
iret
dec
aaa
in
dec
pop
pop
inc
lcall
push
cld
jae
mov
pop
adc
xorl
add
rclb
das
push
fbstp
aas
mov
inc
sub
std
mov
pop
mov
loope
popa
shrb
stc
jne
roll
jecxz
cmpsb
jg
jecxz
clc
out
xor
bound
cmp
push
dec
shrb
mov
test
shll
or
inc
bound
add
pop
leave
cmp
sti
int
sub
enter
push
loop
push
jecxz
cmp
out
xchg
jns
cmp
xchg
in
push
xor
clc
stos
out
add
xchg
xchg
mov
mov
adc
imul
lret
lret
enter
loope
jl
sbb
jp
push
adc
lea
aaa
pop
or
std
stos
xchg
pop
ret
mov
lods
and
inc
movsl
push
call
sub
or
jne
repnz
xchg
mov
leave
xchg
jbe
adc
jae
rorl
add
insb
stos
adc
rorb
data16
outsl
push
in
cmp
popa
jo
sub
and
int3
int
jb
js
adc
pop
xchg
lea
jns
jp
sub
jbe
push
test
add
and
xor
xchg
xor
pushf
adc
sbb
jmp
lret
cld
call
push
insl
cmc
faddl
push
xor
inc
popa
cmpsl
mov
cltd
dec
jnp
push
xchg
movsl
out
lock
sub
mov
sub
outsb
push
mov
out
mov
mov
mov
stos
cmp
nop
xor
cmpsl
arpl
mov
dec
pop
xor
push
movsl
jp
inc
enter
push
mov
add
dec
xlat
loope
push
cmp
sti
pop
test
popf
or
mov
lea
dec
jo
rcrb
inc
mov
sbb
popf
and
or
and
mov
pop
push
or
dec
jge
shll
adc
push
imul
mov
in
jmp
lahf
sbb
mov
fs
push
jmp
sbbl
shufps
sbb
push
lea
adc
jne
mov
dec
repnz
inc
imul
dec
adc
js
cwtl
icebp
jmp
push
loopne
xor
adc
and
xor
stos
add
std
gs
pop
ss
adc
sarb
adc
std
addr16
fnstenv
fildll
mov
mov
ss
hlt
daa
push
clc
movsl
dec
popa
cld
lcall
xor
lcall
movsb
inc
push
push
sahf
in
sub
incl
pop
dec
inc
icebp
cli
jmp
imul
gs
je
loop
cmc
lahf
and
subb
fisubrs
mov
pop
dec
adc
in
cld
int
mov
imul
push
push
fs
and
lods
adc
int3
add
out
incl
ret
test
adc
mov
adc
in
scas
outsb
lods
inc
pop
adc
pop
push
out
and
jns
mov
nop
push
sar
add
cmp
cmp
mov
pop
ljmp
pop
pop
test
mov
daa
inc
ja
pop
push
ficoms
inc
hlt
clc
sub
test
mov
mov
push
jge
jp
inc
sbb
addr16
sbb
int3
xchg
or
jl
popf
mov
mov
mov
xorl
xchg
ss
push
popf
mov
push
jp
pop
sub
sarl
mov
lret
mov
stc
rorl
mov
jg
rclb
mov
gs
add
xchg
movsb
fld
mov
lea
mov
mov
lcall
das
scas
cld
jo
inc
scas
test
shll
int
gs
call
popa
clc
mov
mov
push
int
cmp
cmp
and
stos
jl
loope
jo
or
inc
rcll
sub
pusha
xchg
jmp
leave
pop
js
jo
sahf
mov
and
push
dec
mov
jp
and
push
sub
dec
not
xchg
jae
es
xor
lds
lods
xchg
xor
rcl
sub
bound
mov
cmp
pop
ss
shrb
repz
and
testb
rorb
add
insl
sbb
xor
mov
add
and
or
dec
xlat
mov
mov
adc
adc
xchg
aad
out
es
or
push
jmp
pop
fstpl
or
lret
iret
icebp
cmp
pop
inc
aaa
fidivs
outsl
ja
outsl
jmp
adcb
test
imul
or
cmp
fucomp
mov
cmp
out
push
or
pop
mov
adc
pslld
popf
add
mov
mov
rcr
xor
pop
add
sbb
fcomip
cli
insb
divb
mov
jne
in
imul
scas
push
lahf
push
inc
sbb
adc
mov
jecxz
mov
inc
push
mov
xchg
out
mov
xor
pop
insb
cmpsl
add
popa
mov
loop
inc
mov
cmp
fcoml
push
jle
mov
push
or
mov
pop
int
xor
jb
mov
ljmp
popa
dec
jl
push
pop
sarb
jmp
jmp
and
jecxz
sbbb
mov
ja
fwait
jle
mov
loope
xchg
xorb
cmp
test
fcomps
adc
cmpsb
xchg
xchg
jne
mov
test
and
lahf
and
push
test
mov
enter
push
add
test
inc
dec
mov
sub
mov
js
lods
xchg
jg
outsl
imul
pop
jnp
into
loope
and
or
mov
lods
jl
aas
mov
fnstenv
xchg
pop
inc
mov
aad
dec
sub
loop
sub
inc
sub
call
ljmp
xchg
adc
jl
lea
jg
mov
jbe
or
sti
sarl
pushf
cmp
bound
rcrb
daa
add
or
mov
add
daa
aaa
outsb
lea
mov
xchg
inc
lcall
imulb
sub
xchg
xchg
out
es
fldt
pop
hlt
mov
fstpl
fistl
dec
inc
cmp
push
shll
cld
pusha
jbe
dec
jmp
fbld
out
andb
xor
ret
popa
sti
les
call
movsl
mov
xor
rcll
pop
ret
pushf
sbbl
fldcw
aaa
insl
repz
scas
out
adc
lahf
ss
lock
addb
hlt
sbb
mov
sbb
inc
mov
add
sbb
loop
mov
aam
push
add
push
cmpsl
mov
sti
shlb
lds
inc
push
scas
int
lea
mov
nop
mov
inc
pop
in
mov
cmp
loope
outsl
arpl
cli
arpl
xchg
aas
clc
fcmovb
cs
dec
addr16
pop
movsb
test
fdivrp
pop
mov
lahf
sbb
inc
clc
or
jge
adc
sub
ss
rolb
loopne
pop
shll
sbb
out
outsl
mov
mov
sub
pop
add
roll
enter
out
loop
xor
dec
inc
mov
inc
mov
push
lock
aaa
out
xor
push
cmc
push
repz
pop
lods
cli
out
xor
and
xor
push
cmpsl
push
leave
and
or
fs
inc
mov
xchg
rorl
rorb
sahf
repnz
adc
lea
outsb
add
out
loopne
cltd
add
fwait
and
cs
push
int
leave
addb
mov
idivl
push
dec
add
and
dec
or
fcomps
push
ret
push
mov
aas
mov
cs
in
js
lcall
push
pop
adc
loope
popf
arpl
cmp
in
xor
pop
push
sub
iret
jbe
cli
sbb
dec
sub
xor
xchg
imul
cmc
mov
xor
sub
pop
mov
lea
rolb
push
xlat
addr16
loopne
es
sub
test
push
inc
fucomi
fcoms
fnstsw
cs
data16
stos
arpl
ret
nop
shll
in
jb
lcall
lods
and
test
mov
mov
jecxz
into
xor
or
ss
jle
xchg
mov
sub
aad
sub
lds
xor
or
xchg
cmpsl
popf
nop
mov
ljmp
lods
inc
mov
sbb
pop
sub
jmp
push
mov
cmpsb
sub
push
mov
push
in
lods
ss
repnz
js
test
mov
movsb
push
lret
or
sti
or
dec
popa
ret
scas
shll
xchg
and
jg
mov
fldcw
enter
cli
push
test
sbb
es
mov
add
test
out
xchg
lods
test
xor
pop
add
inc
insb
jns
gs
xor
ja
jg
dec
mov
outsb
lahf
sbb
mov
dec
rorl
test
push
int3
adc
mov
stos
mov
push
xor
sbb
cmpsb
push
sbb
mov
loope
add
dec
notb
pop
xchg
mov
add
xor
inc
cmp
inc
sahf
lods
movsb
sub
shlb
jns
xchg
xor
cmpsl
and
sub
jl
movl
cmp
insl
lret
je
dec
sbb
cld
ror
stos
adc
int
mov
inc
daa
sbb
cmp
mov
ja
add
data16
jmp
sbb
icebp
in
add
fwait
repz
jecxz
xor
xor
fwait
mov
stc
and
or
ds
dec
movsl
cwtl
movsl
add
mov
fsubrs
mov
mov
jo
pop
lods
int
or
xchg
hlt
jnp
dec
aas
xchg
lock
push
adc
scas
cmp
jmp
inc
insb
mov
stos
sub
pop
out
and
aaa
into
ret
roll
inc
out
das
rcr
mov
push
add
sahf
jae
hlt
mov
dec
jecxz
hlt
jb
push
cmp
push
decb
out
jns
jmp
add
rolb
movsl
insl
or
loopne
adc
xlat
int
aaa
ret
lret
mov
or
hlt
leave
outsl
cmp
fwait
clc
sub
daa
jge
push
mov
xchg
push
stos
shlb
mov
push
jl
daa
dec
orb
fwait
int3
jg
sub
pop
add
lahf
pop
cmp
sahf
out
and
lods
mov
shl
sarb
fbld
mov
loope
gs
cltd
jp
jecxz
cmp
mov
xchg
sub
sbb
loope
imul
out
rolb
sub
adc
loop
mov
adc
fld
mov
push
in
xor
movsb
jmp
testl
inc
aaa
cmp
xchg
mov
xchg
pusha
mov
lea
gs
pushf
in
fcoms
gs
and
in
jmp
push
jge
and
cmc
jmp
jno
inc
pushf
mov
popa
mov
loop
pushf
and
sub
fdivl
push
adc
adc
shlb
or
pop
test
leave
stos
adc
push
jp
testb
adc
in
pop
push
xor
in
and
lea
imul
clc
pop
push
sub
or
cwtl
loop
fstpt
and
cmp
icebp
jp
xchg
xor
xor
test
pop
or
mov
jmp
pop
fidivrl
inc
rolb
testb
js
sub
clc
pop
mov
adc
pop
je
sbb
adc
movsb
les
ficomps
in
scas
sub
jle
xchg
hlt
fs
sub
jecxz
or
test
into
insl
shll
xor
inc
xor
inc
cmc
pop
lds
xchg
mov
or
mov
popf
sub
cld
push
bound
scas
xorl
test
out
cli
sbb
fmulp
sbb
xchg
push
or
jb
xor
cmp
sub
xor
aas
loope
mov
mov
mov
push
add
xorl
pop
movsl
xchg
and
pop
jg
cltd
push
jg
inc
test
outsb
inc
cmp
test
xchg
mov
daa
das
sub
icebp
mov
jge
fdiv
cmpsl
insb
leave
loop
daa
push
dec
lods
mov
aas
sbb
cld
test
shll
and
pop
mov
movsb
xchg
mov
sti
add
pushf
jne
idiv
inc
cmp
or
repnz
rol
pusha
loopne
jbe
gs
les
jle
xor
mov
jmp
cmc
enter
ret
pop
test
mov
ret
sbb
mov
xor
add
loopne
xor
aas
add
andb
movsl
mov
scas
adc
and
mov
push
inc
xchg
and
sbb
ret
jge
and
stc
jbe
rcr
ja
cmp
test
jmp
rcl
push
pop
dec
adcl
inc
jae
insb
test
xlat
fcmovnu
jbe
xor
mov
in
jle
stos
imul
rolb
jmp
adc
std
pop
and
loop
das
insl
int
movsb
cwtl
jo
jmp
lea
adc
aad
mov
sbb
sbb
jo
add
into
stc
adc
and
dec
jne
stos
mov
mov
fistpll
loope
mov
rcrb
or
lods
shlb
test
mov
fdivrs
in
pusha
xor
in
stos
sbb
xchg
mov
sbb
leave
mov
push
test
dec
mov
mov
jbe
loop
shl
in
std
daa
mov
xor
mov
xchg
inc
test
cltd
jmp
mov
mov
mov
les
inc
mov
fdivrs
pusha
aam
lods
faddl
jle
ret
sub
dec
out
add
std
hlt
iret
xlat
mov
stos
or
sub
xchg
hlt
sub
shll
mov
lret
fcmovnu
xchg
lock
icebp
pop
jae
test
nop
fyl2xp1
xor
xchg
and
dec
cmp
cmpsl
mov
mov
fisttpll
mov
sbb
das
add
sub
inc
inc
cwtl
call
push
sbb
fstps
push
cwtl
lcall
fnstcw
arpl
inc
test
mov
pop
xlat
jmp
mov
pop
mov
mov
ror
mov
inc
mov
xchg
shlb
int3
test
mov
mov
nop
dec
enter
mov
jecxz
add
shr
push
lds
xor
rclb
ret
popa
jnp
add
or
int3
inc
and
pop
je
mov
arpl
mov
sbb
lret
ds
push
push
cmp
or
pop
push
fcoml
pop
jl
es
and
add
or
push
sbb
jne
orl
sahf
xor
popa
mov
lret
pop
icebp
xchg
fs
outsl
pop
cmc
dec
jp
xor
sub
jo
cmp
test
cmp
push
icebp
inc
fwait
stos
dec
shrl
cmpsb
pushf
lods
inc
pushf
inc
push
mov
pop
rcrb
leave
fidivl
or
sbb
and
xor
fimull
lds
or
int
and
fxch
mov
loope
enter
ja
add
daa
fwait
cwtl
fisubrs
sbb
rolb
out
inc
and
iret
mov
lds
jae
loop
xchg
cwtl
mov
push
js
enter
jmp
insl
shlb
add
dec
xor
or
fwait
or
subl
dec
dec
mov
jno
je
iret
mov
notl
aas
mov
outsl
test
aaa
xchg
mov
stos
scas
mov
cmp
and
out
test
sub
sbb
push
mov
cmp
iret
insb
jge
cld
div
cmp
or
add
aam
sub
or
mov
xor
mov
pop
aad
mov
fisubs
and
test
mov
sbb
adc
or
loope
jns
ror
push
and
insb
sub
sub
pop
inc
orb
lcall
xorl
adc
jo
pop
jg
jbe
roll
cmc
mov
dec
xchg
sbb
cmp
add
cwtl
or
cli
lret
pop
sbb
js
test
in
xor
mov
sub
sahf
mov
xor
mul
movsbl
hlt
mov
leave
adc
loopne
mov
jmp
les
es
pusha
ret
pop
into
pop
adc
movsl
mov
int3
pop
lcall
adc
sbb
scas
mov
jecxz
imul
cmp
mov
mov
outsb
arpl
rorb
fistl
sub
in
ss
mov
mov
inc
adc
in
scas
addr16
push
cmp
dec
fiaddl
stos
rorb
fs
jmp
mov
push
xchg
out
ljmp
xchg
xor
loope
sahf
cmp
inc
sahf
movsl
or
or
frstor
push
fcomps
pop
mov
cwtl
aas
or
cmp
incb
dec
jo
cmp
pop
jbe
repz
sub
jg
fdivs
out
mov
sbb
loop
push
cmc
dec
and
les
push
xchg
cs
icebp
inc
dec
lahf
and
push
add
sub
cmp
xchg
or
testl
cmp
scas
loope
lods
dec
jp
int
lret
dec
sub
arpl
stos
rol
sbb
fnstsw
imul
adc
push
add
jns
dec
sbb
int
ret
and
movsb
mov
outsl
xor
pop
push
adc
jl
pop
test
rol
cmc
ss
xor
add
xchg
lds
mov
sbbl
addl
add
out
lds
orb
mov
mov
push
xor
and
mov
imul
xchg
mov
popf
in
aaa
out
scas
popa
mov
sub
mov
add
pop
adc
sub
inc
test
xor
pop
sti
or
test
xchg
jbe,pn
cmp
mov
addr16
aaa
cmp
and
mov
mov
cmp
dec
sub
stos
shll
mov
inc
push
outsl
xchg
dec
sti
push
out
sub
into
test
xor
in
pushf
inc
adc
jecxz
sbb
lret
mov
pop
fwait
into
add
push
lds
dec
xchg
aam
adc
jmp
jmp
or
andl
xchg
and
bswap
xor
call
iret
jle
push
mov
mov
fistps
mov
add
mov
cmp
inc
and
ja
out
jle
fisttpl
fisubrs
dec
fimuls
and
mov
fwait
imul
test
mov
push
dec
jno
cli
fldcw
hlt
lock
popa
in
sub
repnz
popa
adc
push
sbb
lea
fcoml
xor
add
add
push
scas
mov
fidivl
fsubl
xor
push
mov
push
push
addr16
push
out
bound
xor
cmpsl
dec
xchg
add
mov
mov
mov
leave
cmp
or
ret
mov
jno
sub
in
lea
pop
mov
shll
jg
in
int
push
out
wbinvd
leave
mov
push
aas
push
push
out
lods
push
mov
push
xchg
into
btc
mov
mov
lcall
imul
inc
aam
cmp
iret
dec
jecxz
movsl
push
in
adcl
pop
cmp
lret
pushf
iret
lock
adc
ja
mov
or
movsl
dec
in
cmp
xchg
dec
ftst
jae
pop
sub
popf
jb
jae
xchg
cmpb
data16
lods
out
jge
ror
aas
dec
cmp
loopne
cltd
test
mov
inc
psadbw
jno
test
inc
adc
mov
repz
data16
orb
adc
and
pushf
mov
pop
call
mov
adc
divl
pop
push
mov
mov
popf
sarl
repnz
mov
pushf
cli
rorl
adc
mov
repz
jmp
or
jb
scas
add
pop
xchg
inc
inc
mov
repz
movsl
push
int
add
push
insb
lds
push
sbb
sub
add
es
pop
loop
enter
call
shll
xchg
inc
mov
xchg
divb
scas
inc
dec
ss
jb
inc
pop
adc
jmp
mov
cld
inc
jno
sbb
dec
cmp
cmp
fcomip
adc
pop
fdivrl
sarl
xor
dec
fcmovne
pop
lahf
sbb
imul
inc
adc
push
mov
popa
add
adcl
cmp
sahf
jne
aas
jne
inc
lret
lret
sub
idivb
and
mov
dec
push
jns
inc
lret
addb
fstps
inc
inc
push
je
xchg
leave
jno
in
add
loope
clc
fsts
cmc
push
push
imul
lret
mov
into
pop
aad
or
or
fdivp
and
lds
jge
jbe
jns
ret
jecxz
adc
repz
addr16
adc
popf
push
mov
pusha
and
pop
scas
lcall
iret
cli
rol
mov
pop
and
shll
push
inc
xorb
ja
lds
inc
mov
out
movsb
mov
cmpsl
lock
dec
addb
mov
popa
ja
push
adc
mov
sub
add
mov
cld
fiadds
jl,pn
sar
mov
pushf
xor
enter
inc
jl
inc
mov
stc
addr16
das
jg
cmp
xchg
ds
icebp
sbb
lret
jmp
in
lcall
jle
pop
lods
nop
movsb
dec
push
rorl
jle
jbe
ljmp
aam
sbb
ret
cmp
dec
hlt
cld
mov
xor
cwtl
xchg
mov
xor
jae
jmp
nop
xchg
insb
and
adc
jnp
pop
lret
lock
movsl
call
stc
imul
insb
dec
sub
repnz
mov
hlt
insl
std
xchg
test
dec
jb
pop
xchg
mov
jp
lods
cmpsl
and
stos
xor
xchg
adc
and
adc
cmpsb
int3
into
test
xchg
mov
cld
xor
sbb
clc
addb
sbb
cmpsl
jmp
pop
sar
inc
stc
cld
std
test
lock
xor
jmp
lods
mov
xor
test
js
mov
stos
imul
insl
pop
jbe
mov
cmc
adcl
sub
or
loope
mov
icebp
es
decb
scas
push
xor
insl
not
and
sbb
mov
dec
fnstcw
in
add
or
dec
adc
gs
sbb
cmpsb
jns
nop
push
xchg
hlt
push
xchg
pop
les
xchg
fiaddl
out
mov
cwtl
dec
ror
add
dec
iret
rclb
outsb
rclb
nop
ljmp
jo
jp
add
xor
mov
sti
pop
sbb
aas
push
test
fidivrl
int3
mov
add
leave
mov
popf
lahf
or
mov
jns
or
xchg
add
call
fistpl
addr16
xor
sub
rorb
scas
cmc
jno
arpl
out
mov
sbb
pop
lock
insb
dec
mov
xchg
test
push
fbstp
int
dec
jp
dec
dec
mov
push
push
cmp
and
mov
dec
and
or
dec
xchg
icebp
fists
insb
ljmp
inc
sbbl
jne
enter
gs
lock
pop
jl
int
push
lea
mov
sub
mov
inc
push
inc
add
jne
add
sbb
ja
jp
cld
mov
xor
inc
sahf
pop
add
test
icebp
data16
mov
jo
add
pop
fidivrs
sbb
and
mov
out
push
inc
js
inc
clc
mov
mov
add
call
filds
test
or
ret
insl
pop
repnz
jne
add
shll
aam
ja
mov
xchg
lds
push
jb
gs
scas
call
jp
push
insl
xchg
and
cmp
aad
adc
insl
repz
ja
mov
xchg
notl
mov
rcll
cmpsb
test
cmp
jo
sbb
sub
stc
adc
inc
jl
adc
lods
xchg
add
ds
popf
or
sbb
ret
mov
sub
into
add
or
or
xchg
pop
jp
gs
push
dec
lock
push
loop
add
adc
dec
ljmp
roll
inc
sbb
jmp
jo
out
lret
mov
or
in
mov
sbb
aad
and
push
fbld
nop
jne
ss
inc
addr16
dec
cmp
mov
std
sbb
sub
inc
mov
and
test
ljmp
jns
inc
mov
psubd
orb
pop
cmp
push
repz
push
cmp
es
xchg
subb
mov
xlat
mov
int3
aad
xor
inc
sbb
jnp
sahf
shll
insl
lods
push
or
mov
and
pop
test
loop
movsl
movsl
adc
scas
testb
js
bound
jmp
fnstcw
fdivrs
clc
ds
les
test
and
and
add
js
subl
jmp
aad
sahf
dec
addr16
faddl
cmp
xchg
or
add
insb
int3
and
xor
lock
int
sub
popa
xchg
data16
or
add
jl
pushf
sbb
cld
icebp
dec
mov
pop
je
movsl
fiaddl
inc
lds
and
repnz
adc
or
push
xor
mov
dec
clc
jnp
ds
push
mov
repz
ljmp
outsb
cli
jae
pop
sarl
mov
fmull
dec
sbb
lods
add
imul
jge
std
insl
xor
bnd
shlb
jnp,pt
mov
pop
or
jle
mov
mov
jb
inc
push
sbb
push
cmp
cwtl
adc
adc
arpl
mov
mov
adc
insl
mov
out
jp
xlat
or
sub
in
cltd
mov
sbb
or
and
push
xlat
jecxz
cmp
mov
inc
jge
ret
std
test
lods
dec
rclb
dec
std
sub
ror
and
fdivs
les
das
mov
data16
xchg
fucomp
test
mov
jecxz
cmp
and
xor
lahf
mov
inc
jbe
shl
into
mov
cmp
mov
lods
scas
and
sbb
dec
add
xor
inc
outsb
mov
adc
movsb
out
outsl
jbe
inc
xchg
or
cmp
xchg
subb
and
xchg
push
subb
jmp
mov
inc
pop
mov
mov
mov
mov
popa
pop
fwait
xchg
lods
push
cmp
enter
mov
inc
mov
pop
mov
into
sbb
loopne
sub
fistps
mov
or
pop
movsl
xchg
loope
lock
popf
and
dec
ficoms
adc
rclb
cmp
lahf
enter
pushf
clc
enter
push
sbb
lock
stos
adc
outsb
in
fstl
pop
aas
test
mov
push
adc
repz
sahf
stc
out
idivl
xchg
jmp
sbb
xchg
mov
jbe
lcall
xor
ljmp
dec
xchg
xor
fnstsw
and
fsubrl
cmc
sub
scas
fcoms
dec
stos
test
xchg
lahf
jg
popf
ret
sub
leave
fcoms
xlat
xchg
or
test
insb
sbb
mov
fidivs
pop
xor
mov
test
outsb
in
iret
xchg
fidivs
push
add
or
cld
imul
imul
aaa
mov
dec
sahf
push
fs
add
jmp
xchg
jl
loop
cmp
xchg
out
mov
ret
std
repz
sub
test
jne
adc
jb
mov
xchg
mov
mov
repnz
mov
inc
inc
inc
and
inc
loopne
sbb
fsin
mov
mov
out
push
leave
or
xor
jg
push
daa
and
int3
jle
push
push
jmp
bound
ds
and
cmpsb
cmp
mov
fldl
mov
jg
or
mov
shlb
test
loopne
add
mov
test
inc
insb
mov
mov
jle
lret
imul
xchg
fcoml
sub
xchg
shlb
inc
outsl
je
int
push
das
bound
lds
iret
jle
sbbl
repnz
pop
cmp
mov
pushf
loop
add
xorl
jne
add
mov
pop
jmp
movsb
add
bound
inc
test
inc
sbb
aad
negl
sbb
jl
ds
stc
or
mov
xor
and
push
push
add
popa
loopne
sbb
xor
jle
and
ret
add
ljmp
sbb
in
out
inc
popl
and
lods
arpl
in
popl
scas
pop
cmp
cmp
ret
pop
add
dec
and
or
xchg
ss
ret
add
mov
fisubrs
inc
inc
dec
push
mov
sarb
mov
out
mov
out
add
test
xlat
out
mov
pop
and
js
in
daa
cmpsl
popa
imul
imul
lds
xor
dec
je
faddl
jge
jg
mov
lahf
dec
sbb
in
xor
fldcw
loopne
dec
xchg
xlat
ja
pop
mov
jl
fucompp
repnz
or
sbb
mov
mov
pop
stos
inc
pusha
ljmp
sub
repnz
outsl
mov
pop
xor
jmp
push
mov
outsl
jmp
or
mov
xor
test
dec
popa
jno
jo
rolb
repnz
or
jne
mov
ljmp
das
sbb
or
into
adc
nop
inc
pop
addb
fisttps
adc
scas
lcall
fidivl
xchg
subl
lock
cmp
int3
out
lds
movsb
out
xor
sbb
cwtl
data16
mov
popa
sbb
fiadds
ljmp
add
sbb
out
mov
pop
dec
jecxz
sbb
ljmp
inc
jns
jmp
adc
loop
out
ficoms
ret
int3
mov
cmc
adc
ds
jge
roll
xchg
pop
adc
cmp
jnp
pushf
add
cmp
outsb
jne
add
call
cld
in
xchg
inc
mov
push
xor
mov
fcomip
fadds
je
or
inc
kaddb
scas
jp
or
xchg
mov
xchg
jge
add
or
add
xchg
or
mov
outsb
into
nop
inc
and
testl
xchg
pop
stos
jno
xchg
outsb
inc
scas
rcrb
arpl
xor
pop
sti
clc
es
mov
push
mov
mov
cld
out
and
mov
mov
sbb
dec
and
dec
dec
scas
mov
xchg
xor
stc
cmpl
cmp
in
jg
mov
js
shlb
cmpsb
push
repz
aad
adc
lds
and
lock
filds
cmp
scas
jge
in
sti
pop
icebp
xchg
pushf
add
mov
push
repz
mov
jg
and
pusha
inc
xchg
mov
mov
sub
adc
inc
mov
jbe
sbb
adc
addr16
in
sbb
pmulhw
data16
inc
fdiv
outsl
mov
in
push
xchg
sbb
dec
pop
cld
sub
mov
xor
cmp
xor
mov
jg
movsb
and
ret
call
shrl
sub
cmp
sbb
mov
into
je
adc
push
xchg
movsl
rorl
and
loop
movsbl
mov
fbld
imul
shlb
fdivrl
push
adc
bound
jae
mov
lret
cmpsl
out
in
push
mov
je
pusha
sahf
outsb
aaa
shrb
mov
scas
in
jp
cld
testb
dec
mov
dec
mov
lahf
arpl
addr16
xor
mov
out
call
mov
mov
cmp
or
cmp
xchg
fcoms
xchg
dec
cld
scas
push
mov
movsl
pop
jne
cmpsb
inc
sub
push
sub
insb
movb
push
les
push
inc
js
pop
add
test
movsl
movsl
push
jmp
dec
out
cmp
pop
add
mov
out
lock
mov
push
push
cmp
mov
test
pop
push
cmp
out
lods
pop
stos
out
imul
popf
test
inc
adc
movsl
mov
cmp
fisubl
adc
adc
fnstcw
icebp
mov
mov
fcomps
push
inc
adc
jns
fcoml
and
xor
jae
mov
dec
ret
push
divl
xchg
mov
frstor
lret
xor
das
rolb
std
mov
sbbb
push
push
jecxz
xchg
cltd
jecxz
xor
dec
movsb
mov
xchg
lahf
adc
into
mov
hlt
test
push
js
jle
mov
mov
fists
mov
idivl
and
jbe
mov
cmp
repnz
sub
cli
pop
inc
pop
xchg
ficoml
lea
push
or
inc
jl
aad
data16
xlat
sub
adc
or
lret
ljmp
sub
rcll
popa
inc
imul
int3
test
icebp
add
fucomp
sahf
mov
dec
adc
xchg
stos
and
and
fists
fldt
jae
and
js
xor
fdiv
ja
pop
fmull
xor
add
and
add
subl
int
dec
in
lcall
test
jle
inc
mov
hlt
jbe
das
repz
jno
xor
rcrl
pop
lahf
and
pusha
mov
and
mov
pop
sbb
leave
stc
mov
xchg
or
pop
sub
mov
cmpsl
pop
mov
mov
fnstsw
xor
incb
insl
in
lods
stos
sbb
ja
adc
xchg
outsl
mov
dec
incl
dec
jmp
jne
mov
mov
loop
pusha
add
jb
lret
mov
sub
not
dec
mov
pop
mov
sub
scas
std
cmp
mov
sbb
andb
xor
or
insb
scas
sahf
test
mov
orl
dec
lcall
dec
push
cmpsb
lock
rcrl
sub
jecxz
adc
fidivrl
mov
imul
mov
and
rolb
mov
sub
fdivrs
add
std
inc
pushf
mov
lea
mov
stos
xchg
pushf
dec
cmp
push
xchg
jp
or
jae
jg
pmaddwd
sahf
loopne
mov
outsb
aam
daa
fldenv
daa
jb
outsb
cmpsl
imul
jg
jo
and
xlat
stos
into
into
in
negb
xchg
push
xchg
imul
std
ficompl
mov
xchg
pusha
icebp
inc
mov
test
pop
out
hlt
xor
rorl
jb
xor
inc
aad
jno
js
pop
int
test
repnz
leave
scas
cltd
aad
shll
repz
push
rorb
aaa
pop
rcl
and
ret
push
pop
add
dec
push
dec
jno
inc
inc
imul
pop
pop
repz
xchg
jge
in
jbe
mov
dec
cmc
insb
pop
add
cmpl
js
xor
push
adc
cmp
jg
stc
ljmp
sbb
xor
or
pop
fbld
shl
push
addr16
out
sbb
in
dec
outsl
mov
mov
mov
mov
addb
or
push
ss
popf
dec
mov
shlb
pop
insb
mov
iret
das
call
xchg
sbb
stos
push
mov
add
insl
cmp
cltd
xchg
std
ds
negl
stos
and
cmp
or
je
in
ficoms
xor
mov
mov
inc
pop
testl
imul
mov
in
mov
sbb
subl
mov
loopne
cmp
outsl
ja
sbb
sub
mov
jb
dec
push
mov
pusha
inc
scas
in
jp
mov
mov
lds
aas
repnz
orb
je
xor
gs
xlat
dec
xchg
test
add
bound
iret
jge
repnz
out
cli
push
and
and
jo
sbb
inc
into
xchg
xor
shrl
shlb
inc
sbb
imul
bswap
push
jp
iret
dec
mov
mov
mov
add
imul
ja
outsb
adc
outsl
mov
pop
rolb
fisubrl
mov
cld
fnstcw
jecxz
fistps
sbb
scas
xchg
xchg
int3
mov
pop
push
adc
jge
or
movsl
mov
xlat
pop
mov
int3
mov
aam
repz
orb
cmp
jae
dec
sbbb
int
xlat
add
bnd
nop
mov
gs
xor
dec
into
dec
fcomi
jp
mov
cmc
mov
insl
jbe
shr
js
mov
rorb
clc
enter
inc
add
sahf
mov
and
ja
push
imul
ds
push
adc
int3
adc
inc
jge
sbb
xor
or
dec
out
addb
sub
jle
jns
cmc
mov
and
sbb
push
fmuls
mov
pop
sbb
in
int3
and
lcall
in
cmp
xorl
clc
push
pop
cld
andb
cwtl
add
ss
mov
sub
jmp
and
push
jnp
dec
xor
and
dec
icebp
les
mov
aas
aas
ja
cli
aam
rclb
sahf
jae
adc
nop
xor
mov
ds
mov
mov
xchg
dec
mov
bound
loope,pn
jno
insl
xor
rorl
jnp
jg
cmp
inc
jbe
clc
push
cli
or
push
popa
scas
push
std
sub
lahf
dec
push
js
cmpl
hlt
jnp
sbb
sahf
lret
or
js
int3
pop
sbb
sbb
sti
add
adc
ljmp
sub
push
bound
loopne
enter
ss
loope
cmpsb
cmpsb
or
divb
repnz
fstps
rcrl
push
mov
pop
outsb
lahf
and
mov
mov
scas
movb
scas
test
push
sub
push
out
jae
xor
mov
dec
mov
call
hlt
jmp
cmp
add
or
enter
ret
sbb
mov
mov
push
test
cmp
lods
rcrl
sahf
cli
push
pop
mov
and
jo
cli
daa
cmp
add
es
or
mov
sahf
xlat
jl
lret
and
and
fisttps
inc
in
pop
fsubrl
mov
and
jmp
lods
bound
fdivr
mov
ret
xor
xor
inc
xchg
negb
xchg
and
pop
and
jp
dec
dec
and
add
cmp
insb
inc
or
gs
jns
pop
sarl
test
adc
jp
aas
iret
sbb
sub
pop
lret
cmp
mov
ret
xchg
movsl
push
data16
lock
push
outsb
push
mov
repz
or
push
cli
movsb
mulb
int3
loop
mov
lods
push
pop
mov
mov
adc
in
outsb
cmp
inc
or
cmpsb
push
in
mov
subl
ror
iret
fstps
xchg
adc
xor
es
rolb
sar
adc
addb
mov
icebp
push
cmpsb
push
cld
imul
daa
adcl
jmp
sbb
sti
mov
in
int
adc
push
jbe
xchg
fsubr
lods
sbb
dec
cmp
pop
addl
stc
cmp
enter
decl
cwtl
mov
int3
pop
add
xchg
sarb
pop
loopne
fsubl
push
rclb
xchg
lcall
and
jge
das
inc
push
sti
cli
adc
and
inc
jmp
out
sarb
inc
mov
adc
das
add
negl
mov
insl
cs
push
call
inc
jns
sarl
mov
test
ljmp
mov
andps
fadd
test
push
movb
test
cmpsb
cmp
cmp
cltd
sbb
pusha
ret
ja
hlt
xchg
and
adc
cmpb
repz
bound
mov
out
or
loope
into
pop
arpl
rcll
inc
sbb
ret
lcall
xor
rorb
jns
into
dec
push
mov
rolb
mov
sbb
push
lods
adc
mov
ret
movsb
scas
mov
mov
stos
dec
gs
lahf
jle
and
repnz
lcall
bound
jmp
pop
push
out
dec
inc
push
mov
std
xchg
or
jge
jmp
insb
test
dec
stos
lock
push
pop
sbb
shrl
gs
mov
pop
or
mov
and
inc
jp
jmp
cmp
inc
lret
lock
mov
out
mov
jmp
fsubr
pushw
adc
mov
pop
mov
flds
jae
add
dec
mov
cmpsb
cmp
idivb
pop
adc
xlat
test
sbb
xchg
cs
cmp
push
adc
dec
cmp
add
fidivl
cmpl
push
fchs
arpl
pop
or
fucomi
pop
mov
xor
inc
cmp
popf
sbb
icebp
mull
cld
add
fists
rorb
lret
in
fcoms
mov
hlt
jae,pt
fisttpll
loopne
cmp
mov
push
mov
adc
aaa
sub
mov
add
xchg
rcrb
repz
sub
adc
es
addl
shll
imul
pushf
sub
jmp
insl
pop
rorb
mov
addr16
add
push
push
adc
mov
xor
mov
mov
sbb
and
adc
ds
cli
xorb
fstpl
sub
inc
push
add
lds
outsl
mov
mov
shlb
jp
call
jle
in
jnp
xchg
loope
xchg
inc
sti
into
push
xor
dec
into
push
add
es
cmpsb
cmp
aad
or
testl
enter
inc
std
add
insl
or
sbbl
inc
leave
dec
mov
rcrb
add
push
cmpb
dec
push
ret
pop
out
inc
popa
ljmp
loope
jg
aad
enter
push
pop
rorb
inc
adc
insb
movsb
ja
inc
mov
frstor
sbb
imul
xchg
pop
sbb
jl
ret
mov
xchg
cmp
jae
lods
mov
and
fdivl
push
mov
pop
movsb
in
test
movsb
sub
je
adcb
mov
lret
scas
dec
push
mov
int3
push
xchg
jb
adc
dec
rorb
xchg
xor
cli
add
test
pop
divl
cmp
pop
cmpb
je
sub
ja
mov
add
push
push
sbb
mov
std
adc
arpl
js
daa
das
sub
repnz
mov
fnstcw
test
fisubrs
arpl
mov
fwait
test
icebp
cmpsb
mov
scas
mov
mov
or
iret
enter
adcb
jmp
jecxz
jge
mov
push
lea
mov
scas
enter
pop
adc
dec
scas
iret
insb
add
xchg
aad
xor
arpl
xor
sub
addr16
dec
lods
lret
pop
lcall
mov
sbb
popa
sti
mov
or
cmpsb
sub
lock
inc
mov
cmp
leave
jmp
jnp
faddl
ljmp
cmp
add
jle
sbb
push
in
dec
or
push
mov
cmp
dec
into
outsb
push
xchg
sarl
dec
loop
push
pop
and
jb
mov
cmp
lock
push
jb
mov
test
or
adc
and
push
cmpsl
imul
adc
in
or
sub
sub
imul
fs
dec
cmp
dec
not
jmp
ffreep
shll
ret
popf
push
fnstsw
cmc
or
mov
addb
lahf
movsb
adc
push
sar
stos
lret
adc
inc
aaa
pop
pusha
sbb
arpl
add
sbbl
jecxz
clc
cs
mov
out
js
leave
scas
iret
xchg
or
pop
repnz
lcall
repz
xchg
popf
mov
hlt
jns
and
sub
pop
adc
test
subb
jge
test
inc
sarb
icebp
push
inc
pop
aaa
mov
add
not
rcrb
lret
sti
sbb
jne
xchg
sub
jg
cmpsb
push
sub
mov
jbe
jne
ret
out
mov
cmp
int
push
sbb
std
sub
outsb
mov
jns
mov
add
sbb
sub
lods
outsl
adcl
in
cltd
push
leave
pop
bound
cld
pop
push
sub
jp
add
insb
loope
mov
or
mov
dec
adc
cli
jle
loope
in
push
and
jno
pop
sub
hlt
xor
lods
popf
cmpsl
cmp
xchg
jae
or
mov
xor
xor
dec
add
cmpsb
faddp
xchg
pop
add
add
repnz
movsl
mov
cmp
out
mov
in
mov
fistpll
cwtl
adc
xor
out
repz
jo
cli
sub
pop
xor
push
sub
popf
mov
xorl
sahf
lods
xchg
sbb
xchg
mov
pop
aad
cld
and
push
push
cmp
lea
adc
mov
flds
testb
xor
and
xchg
sbb
xchg
dec
push
and
xchg
add
xchg
mov
mov
ds
add
lret
cli
adc
adc
lea
push
loopne
lds
jnp
sti
sarb
dec
cmpsl
ret
sahf
aas
shll
mov
pop
loope
lock
bound
sub
mov
push
inc
mov
je
jne
sub
push
adc
pop
popf
and
lret
pop
xchg
dec
fs
lock
jg
mov
lret
jnp
and
xor
out
push
lds
aam
sbb
movsl
lcall
outsb
pusha
push
sarl
push
cmpsl
in
es
sub
mov
xor
mov
xchg
jge
sahf
jmp
dec
inc
bound
js
sahf
pop
mov
popa
inc
scas
adc
iret
push
cmp
mov
cltd
in
pop
xchg
outsl
nop
fs
sub
sbb
mov
mov
and
sub
std
xor
cli
movsl
jne
add
xchg
mov
iret
ffree
xlat
or
xchg
pop
in
mov
unpckhps
mov
dec
pop
out
scas
inc
inc
push
fnop
dec
movsl
in
loope
std
cmp
enter
dec
lret
pop
jo
sbb
pop
mov
lea
mov
sub
xor
je
dec
jae
cmp
sbb
push
loope
jecxz
rorb
pop
movsb
sbb
cmpsl
stos
push
and
dec
inc
clc
inc
jb
cmp
add
cmp
push
push
rep
push
bound
imul
test
ja
dec
stc
es
je
inc
addl
enter
xor
cmp
pop
out
push
fwait
mov
hlt
adc
sub
cmpsb
sti
idivb
xor
insl
and
out
xor
push
xchg
std
jo
jne
loopne
orb
push
ret
fcoms
xchg
shlb
dec
xor
jo
fwait
mov
mov
xchg
dec
pop
pop
dec
push
inc
adc
xor
loope
adc
popa
ret
mov
pushf
and
inc
arpl
int3
pop
push
mov
loop
mov
cwtl
scas
add
ret
mov
mov
add
mov
push
jne
mov
mov
push
ficoms
loope
nop
add
lock
out
add
es
into
mov
xchg
call
enter
mov
pop
movsl
es
je
xchg
test
mov
loop
cmp
in
popf
insb
pop
mov
push
jno
fidivs
loop
mov
scas
mov
lds
scas
xchg
push
sbb
into
lcall
jae
dec
cmp
orb
add
xorb
adc
or
adcl
sub
cltd
cmpsl
cmc
rcrl
cmpsl
jmp
xchg
jmp
jl
mov
push
stc
jmp
push
mov
std
cmp
add
or
xor
xchg
pop
dec
lcall
inc
push
mov
push
push
xchg
mov
jnp
icebp
mov
lods
sub
stc
loopne
repz
jmp
ret
iret
or
xor
cmp
cli
mov
lea
clc
mov
ljmp
mov
xor
adc
data16
iret
fldt
sub
xor
adc
out
and
dec
mov
dec
and
lods
jl
jmp
scas
and
hlt
inc
xchg
bts
test
mov
mov
hlt
or
or
and
insl
insb
cmp
outsl
cmp
xlat
mov
lcall
mov
mov
or
jb
sarb
stos
shl
lret
out
lahf
xor
mov
inc
cmc
jb
push
jae
lret
xor
and
js
jb
xor
jno
add
fcompl
add
dec
sti
fadd
rorb
dec
adc
or
xor
xchg
sub
sub
cmpsl
adc
jp
adcb
or
pop
sbb
lea
jne
repz
mov
inc
jo
iret
lret
loop
xor
lret
pop
sub
cs
repnz
fwait
sub
xor
mov
push
mov
js
sbb
jnp
leave
xchg
or
shl
mov
mov
pop
test
mov
jno
fidivrs
mov
xchg
subl
shl
mov
xchg
cwtl
mov
testl
popf
sub
and
mov
movsb
adc
xor
xlat
fisubl
loopne
icebp
xchg
cmpsl
mov
popa
rorb
imul
movsb
inc
fisubrs
adc
mov
push
scas
mov
or
dec
imulb
sub
leave
ficoml
sub
or
pop
xor
testb
xor
aad
in
xor
in
add
jge
lcall
and
popf
mov
pop
xor
mov
out
mov
sbb
mov
jecxz
hlt
addr16
test
cld
int3
mov
inc
call
mov
and
cmpsb
fucomip
insb
inc
add
adc
aad
jo,pt
shlb
push
cltd
sub
mov
mov
ss
xchg
cmp
bsf
repnz
repnz
gs
lahf
js
inc
add
mov
sbb
jbe
and
popf
addps
pop
in
inc
adc
sbb
rolb
mov
dec
aad
mov
jbe
cmp
out
xor
loope
inc
mov
movsl
call
or
xchg
adcl
push
arpl
js
pusha
int3
repz
bound
xchg
pop
in
sbb
add
ror
fs
cmp
mov
pop
mov
imul
sbb
mov
insl
xchg
je
adc
arpl
std
out
hlt
repz
out
xchg
sub
ret
fwait
clc
inc
sbb
outsb
aam
mov
add
pop
jle
cmp
rolb
pushf
stos
out
cmp
sahf
test
loop
and
pop
insb
nop
pushf
shrb
mov
xchg
imul
js
dec
and
repnz
jo
imull
xor
ss
or
and
add
mov
je
jno,pt
pop
sahf
push
scas
mov
xchg
jecxz
sub
cli
and
mov
mov
call
pop
std
jne
pop
jmp
cmpsl
push
inc
cmp
lea
out
out
xlat
cmpsl
ret
jle
popf
adcl
sahf
test
mov
jp
in
xchg
lret
orl
lret
mov
mov
inc
pop
ret
xchg
and
aas
sbb
xor
outsb
push
leave
or
mov
mov
lret
aad
loopne
mov
add
and
ret
pop
movsl
imul
push
daa
pop
ds
jp
out
add
into
lods
arpl
aad
push
pop
je
imull
ljmp
mov
in
icebp
add
mov
ljmp
add
xor
xor
adc
xchg
sbb
nop
movsb
ret
jge
xchg
add
add
mov
loopne
stos
xchg
ja
add
push
cmpsb
cmp
je
and
sbb
xor
or
jmp
gs
pusha
mov
test
rcll
sub
lock
cmpsl
pop
xorl
nop
xor
jb
repnz
nop
out
push
ret
in
ror
fdivrp
pusha
and
xchg
aam
fyl2x
jg
mov
inc
enter
push
sti
cli
xlat
or
jb
xor
mov
nop
sbb
push
or
pop
mov
pusha
pop
cmp
aas
lcall
aad
lods
popa
mov
jl
inc
aaa
lods
cmp
loopne
xchg
jno
adc
mov
and
lods
dec
pop
adc
push
cmp
pop
test
mov
xorb
les
mov
sub
sub
lret
sub
jo
stc
imul
dec
dec
adc
mov
inc
insl
pop
scas
stc
jo
xor
jbe
sbb
inc
xor
ror
jno
or
scas
in
sub
xchg
fbstp
adc
or
mov
lret
mov
push
fistps
enter
add
out
cli
lahf
xchg
fidivs
adc
jmp
mov
lahf
mov
add
sti
ret
jg
mov
jae
pop
fcmovnu
sub
or
cmc
lahf
setle
push
jne
adc
and
xchg
dec
inc
pop
out
mov
push
lock
jmp
fstl
dec
iret
mov
imul
cmp
dec
imul
pop
dec
leave
inc
add
stc
jmp
dec
or
adc
pop
je
scas
bound
and
pusha
pop
movsb
mov
adc
in
int
add
jmp
rclb
neg
sarl
out
iret
lret
sti
lahf
xor
and
mov
imul
sti
pop
add
cmpsb
mov
pop
cld
aaa
negb
jl
xor
pop
pop
push
mov
ljmp
push
lahf
les
inc
mov
pop
fisubrs
inc
xchg
inc
mov
and
jbe
je
cwtl
sbb
jge
push
cmpsb
movsb
nop
or
xor
pop
and
rcll
cwtl
dec
rcr
push
aam
inc
loope
rcr
xchg
adc
sbb
mov
clc
sub
jp
jbe
lds
rcl
mov
push
in
repnz
pusha
incb
jge
fcos
mov
lcall
push
dec
and
jbe
pop
bound
inc
dec
pop
or
lock
sbb
sub
or
fsubl
xchg
xchg
les
popf
cmp
sub
int3
xchg
mov
cmp
loopne
les
sbb
pop
adcb
and
dec
pop
mov
inc
aam
sub
xor
into
add
or
cmpb
push
inc
jmp
push
scas
and
scas
ss
lea
push
mov
test
xchg
xchg
adc
sar
aaa
sub
inc
pushf
rorb
pop
cli
insl
andb
shlb
lret
pop
cwtd
stos
out
imul
jne
das
sub
mov
cmp
adc
cmpsb
xchg
jnp
mov
jg
add
or
stos
lret
divl
les
pushf
and
add
rcpps
cmp
and
lods
push
pop
pushl
add
push
pop
xchg
add
fisubrl
mov
shrl
ret
icebp
int
add
fwait
push
insb
into
int3
rcll
mov
out
cmc
hlt
sti
nop
je
mov
arpl
call
pop
and
jmp
mov
jg
cmp
loopne
mov
daa
or
out
add
addr16
popf
mov
fisttpl
jecxz
js
lahf
mov
cs
mov
inc
mov
fnstcw
sbb
jl
push
les
addr16
dec
andl
repnz
dec
mov
or
inc
hlt
movsb
jmp
mov
dec
loopne
pushf
add
fnstcw
das
les
push
pop
push
and
mov
inc
adc
sbb
scas
and
movl
mov
xchg
negb
out
stos
xchg
adc
popf
rcl
sub
push
insl
adc
ret
test
dec
out
pushw
fisubs
inc
push
ret
scas
in
mov
js
pop
shlb
outsl
xor
adc
mov
cmp
mov
add
push
jmp
push
mov
or
xchg
arpl
sub
dec
mov
stos
adc
mov
push
jecxz
jbe
movsb
inc
and
mov
shrl
or
dec
cmp
mov
sti
dec
test
pushf
clc
xorl
push
mov
push
mov
push
jb
orl
sbb
insl
adc
lock
pop
ret
cmpsb
fnstsw
xchg
out
dec
mov
sub
xorl
dec
cmp
cld
xor
jecxz
call
add
cwtl
pop
lret
or
cmp
mov
mov
outsb
push
lods
cmp
pcmpeqw
std
mov
mov
nop
daa
add
jmp
adc
adc
cmc
xchg
dec
mov
jns
sbb
es
movsb
ja
ss
cmp
dec
test
sub
mov
pop
mov
inc
mov
mov
out
push
aas
lods
dec
lahf
ss
cmp
sub
cmp
sub
mov
out
mov
insl
fcompl
mov
push
pop
push
cmp
pushf
stc
and
addr16
ldmxcsr
rorl
xor
dec
cmp
fimull
push
jnp
test
nop
stos
or
test
jmp
add
test
fbld
mov
out
aas
inc
dec
and
xchg
fildll
fistps
fsubrp
clc
movsl
cs
data16
add
sub
adc
mov
jo
test
and
inc
data16
cmp
mov
ficompl
pushw
int
ret
xlat
xchg
mov
fdivs
cwtd
mov
or
mov
cmp
test
jmp
mov
scas
rorb
leave
mov
imul
xor
in
sbb
stc
lret
aad
inc
mov
dec
adc
add
sahf
mov
fsts
sbb
jmp
test
stos
xlat
adc
cmpsl
movsb
jge
jmp
push
outsl
in
lds
jecxz
lock
or
inc
sbb
jg
mov
jnp
notl
pop
cs
sbbl
jmp
aas
je
or
cld
xchg
shr
pusha
leave
and
lret
or
adc
insb
push
popl
push
jne
cmp
mov
sbb
push
xchg
xchg
add
mov
imul
repz
xchg
xchg
xor
int
adc
or
scas
dec
cld
push
popf
cli
cmp
push
dec
hlt
xchg
imul
pop
cmc
cmp
jnp
push
add
ds
xchg
ret
mov
imul
aad
lcall
lods
arpl
insl
pushl
ret
fdivs
xchg
xchg
dec
fmulp
and
dec
pop
sub
jne
leave
mull
adc
sbb
loope
xor
adc
cli
mov
inc
mov
cmp
fistpll
xchg
lods
push
xor
xchg
in
and
rol
lahf
inc
inc
xor
jae
ret
xor
lret
xchg
mov
cmp
or
popa
adc
hlt
loop
scas
loop
mov
pop
sbb
mov
scas
mov
rep
mov
lcall
mov
aam
or
xor
clc
dec
jno
push
in
outsl
leave
ficompl
jb
adc
push
in
sbb
sub
and
lea
orl
xchg
lahf
inc
xor
imulb
in
aam
fisttpll
cmp
xchg
les
mov
mov
fs
cwtl
xor
loope
loopne
icebp
mov
inc
out
sub
pop
xor
out
and
inc
xor
or
aad
gs
outsl
inc
adcb
out
out
test
adc
ret
and
fs
adc
mov
push
leave
insl
xchg
jo
dec
in
leave
jecxz
mov
fwait
or
push
dec
xlat
dec
pop
sub
es
push
outsl
pushf
cmp
cmp
in
fnsave
cmp
dec
and
fwait
clc
cmc
andnps
mov
scas
dec
xchg
stc
xchg
cmpsl
jns
lahf
ss
mov
out
xchg
sbb
ret
sbb
jg
jo
push
mov
jb
mov
ljmp
mov
lods
xchg
xlat
sbb
lret
xchg
ret
sub
push
stos
inc
add
lds
fwait
or
movsb
sbb
int3
lret
loope
fcomi
sbb
sub
sahf
mov
arpl
adc
push
inc
leave
outsl
std
adc
icebp
lret
iret
jns
in
push
fnstsw
push
jnp
pop
dec
xchg
dec
repnz
aas
mov
inc
adc
movsl
add
mov
or
call
addl
mov
clc
mov
shrl
jle
jnp
xchg
and
jb
or
subb
push
ljmp
cltd
sub
inc
or
movsl
jo
repnz
rcr
pop
xor
adc
push
jmp
add
loope
or
mov
movsl
push
mov
hlt
lret
fisubrl
push
jb
cmpsl
sub
inc
push
mov
inc
or
outsb
jo
pop
stc
xchg
push
and
lock
xchg
or
shlb
or
fidivs
mov
pop
jne
pop
lret
mov
mov
mov
xorl
mov
xchg
fdivrs
cmpsl
outsb
adcb
or
outsb
pusha
subl
jmp
adc
mov
push
xchg
xchg
cmp
push
and
push
fnstsw
or
into
fistpl
jo
adc
rcrl
je
jb
and
jp
icebp
jge
adc
cmp
fldcw
repz
xchg
inc
subl
sub
in
xchg
sbb
jmp
stos
or
add
push
fcompl
add
pop
out
fisttpl
shl
pop
mov
xor
mov
imul
adc
addr16
dec
inc
dec
xor
into
repnz
cmp
out
sbb
adc
jge
sub
in
movsb
imull
sub
pusha
mov
test
jecxz
cmp
inc
sbb
mov
loopne
add
cmpsl
push
adc
je
inc
stc
jmp
sub
lret
inc
add
inc
xor
cld
lock
sub
sub
sbb
nop
dec
stos
sahf
sbb
hlt
cmp
pop
xchg
add
outsb
insl
dec
movsb
sbb
lret
and
adc
cltd
cmp
popf
cmp
jne
mov
std
in
std
push
xchg
fwait
mov
jbe
cwtl
or
mov
mov
or
push
test
test
cmpsl
cltd
lea
daa
cmpsl
inc
jg
in
inc
ljmp
mov
sti
shrb
je
sbb
jecxz
dec
push
inc
notb
mov
je
push
out
leave
push
pop
sbb
pushl
xor
cld
sti
xor
call
xor
adc
lods
xor
in
dec
inc
jecxz
pushf
fs
cmp
pop
ret
popa
dec
add
pop
pop
out
sub
fildl
int3
sub
mov
jns
cltd
pop
stos
int3
adc
xor
lods
sti
sub
out
push
mov
mov
inc
pop
and
xchg
cmpsl
pop
fildl
repz
mov
mov
jne
das
ret
push
movsb
out
mov
pop
scas
or
mov
std
push
lret
lcall
mov
fisubl
cmp
cmp
add
enter
test
fdivrl
inc
xor
mov
pop
or
inc
imul
sahf
push
mov
push
pop
jmp
jne
mov
aad
inc
in
push
mov
iret
sbb
mov
jnp
mov
ja
push
push
fs
lock
inc
loopne
push
stc
mov
mov
loopne
sub
mov
jo
ljmp
push
es
ficoms
in
pop
add
sbb
popf
or
xchg
js
lea
sub
icebp
mov
dec
in
stos
loopne
push
jmp
jae
pop
push
sbb
add
xor
and
fsubrl
movsl
int
add
out
xchg
stos
push
push
xor
inc
or
jmp
out
decl
in
pop
dec
out
jmp
insl
xchg
and
shlb
and
mov
lea
inc
dec
cld
xor
rorl
and
sub
rolb
and
xor
mov
adc
add
pusha
add
imul
pusha
adc
mov
dec
hlt
in
daa
insl
cmp
clc
and
adc
mov
incb
pop
xlat
stc
int
sbb
ds
or
pop
adc
mov
jmp
arpl
push
jle
jle
arpl
mov
sbb
ljmp
repz
mov
popf
xchg
imul
xor
icebp
and
inc
push
adc
jmp
iret
lahf
push
cmpsl
test
mov
cmp
lret
cmpsl
repnz
das
ret
insb
jmp
movsl
iret
lret
inc
fldcw
mov
mov
rclb
push
push
js
das
push
jnp
sti
ja
cmp
cmp
call
cmp
pop
mov
popf
xor
or
or
test
daa
dec
loopne
add
lds
xor
addl
add
mov
mov
pop
fisttps
xchg
cmp
push
into
stc
xchg
mov
cmp
jge
add
test
inc
pop
sub
lods
sub
mov
push
pushf
lahf
mov
xchg
push
push
mov
cmp
xor
add
push
test
jbe
cmp
test
xchg
into
xorps
push
mov
adc
jecxz
popa
mov
or
pop
pop
and
xchg
dec
rclb
dec
lods
or
push
mov
iret
mov
enter
icebp
xchg
cltd
cld
or
adc
pusha
test
push
in
push
je
xchg
lods
cld
arpl
sti
iret
mov
stos
fcmovnbe
and
test
push
cmpsl
mov
nop
movl
les
sub
test
lret
dec
fsubrl
ficoms
out
pop
fldcw
xor
out
fbstp
ret
pushf
aad
adc
call
mov
push
test
jne
push
out
lret
xchg
mov
shrl
mov
pop
mov
lcall
and
mov
lret
xor
jle
ljmp
pop
push
cltd
sub
js
xchg
es
jmp
xchg
inc
push
adc
cmp
adc
push
cmp
mov
and
out
mov
js
cld
sub
loope
dec
or
jmp
cmp
mov
int
std
inc
xchg
lret
mov
pop
push
inc
push
sbb
ja
dec
mov
xlat
pop
outsl
movl
mov
movsl
divl
jmp
jecxz
inc
out
inc
pop
cmp
inc
mov
aaa
xchg
das
test
aad
scas
inc
cmp
inc
push
or
idivb
das
shlb
incl
pop
out
jmp
das
push
pop
and
bound
pushf
dec
dec
adc
into
and
mov
sbb
je
lds
and
pop
xchg
popf
pop
jmp
xor
es
aam
cmp
lods
or
stos
sbb
mov
mov
aaa
pop
out
ror
jg
xchg
incl
jo
icebp
test
rorl
pop
in
bound
cmp
in
add
xor
cmp
imul
mov
xchg
pextrw
pop
adc
pop
sub
or
jo
xchg
xchg
leave
outsl
outsb
scas
inc
jne
pop
mov
ss
mov
push
and
adc
jbe
mov
dec
jo,pt
lds
xchg
inc
pop
mov
mov
cmpl
adc
cmp
push
test
pop
xor
stc
data16
pop
aaa
ffree
adc
aaa
test
lret
xor
adc
clc
gs
dec
jle
pop
sahf
into
loop
inc
out
sub
or
test
lcall
test
and
dec
fstl
mov
loope
daa
addl
lahf
cmc
les
mov
inc
cltd
pop
jns
adc
aad
pop
fwait
or
aam
xchg
dec
cltd
jecxz
scas
out
test
shlb
sub
or
push
imul
pop
lret
mov
pop
ret
sub
pop
popa
sahf
jo
sbb
aaa
cmpsb
test
jbe
xlat
lcall
lcall
pop
jns
dec
mov
in
jl
xor
in
fwait
dec
cs
or
adc
and
lods
push
cwtl
lret
inc
push
lcall
nop
scas
dec
cmpsl
cmp
pop
add
jns
jnp
lds
test
mov
popa
xchg
mov
stc
mov
cld
sarl
xchg
inc
adc
mov
test
ret
inc
sbb
orb
scas
daa
movsb
sbb
test
mov
xlat
mov
mov
jmp
adc
ja
loope
push
loope
jge
cwtl
and
jno
loop
imul
mov
mov
in
subl
mov
ficompl
stc
jp
and
enter
outsb
out
jb
mov
mov
add
inc
xchg
pop
mov
sahf
popl
xchg
push
fnsave
loopne
mov
jp
jmp
leave
cmp
inc
cli
inc
add
lcall
lods
mov
scas
fidivrs
cmp
or
mov
push
xchg
add
stos
fucom
cmp
mov
inc
sub
adc
xorb
lods
cmp
mov
sarl
inc
lret
adc
push
xchg
mov
lock
inc
imul
add
std
mov
nop
push
test
cli
testl
mov
in
lahf
sarb
iret
or
push
shrl
or
ret
jmp
mov
sahf
mov
fwait
jns
pop
aad
test
add
in
sbb
xorl
mov
push
mov
divb
clc
pop
sub
sub
mov
bound
fistpl
adc
fisttpl
sub
pop
inc
jmp
jge
aas
outsb
xor
ftst
cmp
push
icebp
sub
cmpsl
mov
inc
insl
pop
add
mov
dec
out
stc
xchg
xor
add
mov
inc
sub
loopne
das
scas
or
shll
or
mov
jno
mov
fisttps
clc
push
in
test
xor
xchg
mov
outsl
xor
fbstp
push
fs
mov
cmp
call
fidivrl
jnp
mov
adc
ret
aaa
imul
into
in
mov
or
xor
or
xor
scas
lahf
out
dec
jo
out
jno
ds
pop
rorl
mov
xchg
rol
das
int3
cmp
repz
out
mov
and
mov
sbb
das
outsb
addb
mull
pop
fcomi
out
jle
mov
outsl
jmp
or
adc
pop
xchg
addl
inc
pop
arpl
cmp
loop
or
inc
jns
in
cmpsl
sub
xchg
in
movsl
or
fsubrp
add
loope
jae
aaa
cld
and
mul
fsubrs
rclb
into
mov
notb
mov
loop
xchg
pop
push
mov
add
push
insl
lds
pop
js
cmp
jge
lods
mov
push
testb
insl
mov
inc
jo
and
mov
call
mov
jmp
inc
ds
dec
ret
roll
pop
pop
push
or
test
xchg
les
and
xchg
ficoml
hlt
jne
cld
sub
js
arpl
dec
shll
movsl
cmpsl
and
xor
repz
pop
and
insl
sub
in
loope
push
sub
pop
add
loop
mov
jle
je
sub
data16
pop
jl
scas
jle
fs
push
leave
lds
cmpl
out
adc
lods
cs
cmp
dec
mov
notl
in
repz
inc
rclb
sbb
pop
add
popf
inc
mov
lds
ret
dec
cmp
cltd
hlt
cmpl
out
mov
jo
mov
gs
mov
pop
cwtl
roll
popa
push
cli
ret
in
popf
add
dec
ljmp
mov
add
js
std
mov
inc
inc
lret
int
stos
mov
addb
pop
test
dec
mov
jg
shll
rcrb
mov
push
cmp
lcall
fcomps
repz
in
jmp
xchg
ss
aam
push
cmp
jge
jp
aam
pushf
jo
fwait
xor
adc
inc
fidivrs
fldpi
fstpl
add
sub
push
pop
aaa
bound
shrl
popa
shlb
pushf
lea
ljmp
mov
push
sub
mov
cmp
mov
inc
xchg
int
push
fs
idivl
ja
sub
and
scas
das
scas
mov
out
std
push
dec
xor
sub
ja
jo
out
hlt
mov
jno
adc
inc
loope
aas
es
cmp
je
xor
ss
negb
push
cmp
into
enter
inc
sbb
jne
fbstp
push
addr16
call
jae
dec
insb
outsb
jl
xor
or
mov
inc
jl
es
jno
mov
mov
jbe
pop
mov
cli
xchg
mov
stc
dec
outsb
sub
dec
mov
sbb
add
js
insl
into
pop
inc
mov
and
pop
cld
fwait
stos
aam
popa
int
imul
xor
cmp
sarb
sahf
mov
bound
test
cmp
inc
daa
je
add
ljmp
sbb
fst
jno
fbstp
call
fdivrs
dec
fwait
mov
mov
rcl
jns
pop
xchg
stc
mov
jmp
fdivrs
push
push
cmp
adc
jns
adc
lock
mov
test
xchg
cmp
add
pop
push
inc
pop
mov
stos
inc
out
xor
add
pop
cltd
cli
push
push
insl
xchg
je
dec
push
mov
sub
inc
aaa
stos
dec
jge
lahf
xchg
mov
int3
mov
fstpt
sahf
sahf
xchg
jns
xchg
xchg
cwtl
cmpsb
sbb
fdivrs
ja
and
cmpb
roll
mov
testl
loope
add
cmp
imul
fsub
inc
jae
fsts
imul
push
ljmp
or
and
xchg
jmp
fmulp
mov
ret
push
or
testb
xchg
mov
fistl
and
fstpl
jae
dec
fisubrs
inc
adc
dec
mov
or
dec
mov
add
mov
psubd
aad
pop
sub
xlat
inc
mov
add
dec
pop
scas
dec
ss
scas
cmp
test
add
mov
sbb
enter
jge
xchg
and
popf
xchg
adc
sbb
fsts
sub
jge
popf
cmpb
mov
cmp
xor
lds
jle
std
and
push
aas
test
xorb
ficoms
mov
call
pop
push
es
cmp
dec
xor
lcall
push
insb
jle
lret
pushf
push
adc
mov
pop
pop
or
dec
mov
ret
or
fmulp
sub
sub
cmpsb
into
sahf
dec
rclb
mov
stos
mov
and
cli
mov
mov
push
daa
mov
mov
ror
sub
nop
jb
cmc
xor
jg
fdivl
xchg
lds
push
cwtl
or
dec
xlat
fists
push
pop
xchg
movsl
sahf
push
in
hlt
daa
and
outsb
xchg
ret
hlt
jae
mov
sbb
push
hlt
adcl
loop
and
js
int3
add
imul
jo
cltd
out
arpl
jno
push
dec
and
cmpsb
lret
dec
and
mov
fildll
popf
js
into
mov
xlat
es
cmp
lock
lret
ficomps
aaa
inc
pop
jle
jo
cli
xlat
cmp
inc
jmp
mov
decl
mov
movsl
and
jb
sub
jns
or
ljmp
pushf
or
test
dec
leave
and
fwait
lds
adc
es
sub
sar
cs
fdivr
dec
jo
ret
jecxz
scas
sbb
mov
imul
ret
lret
int3
rcl
mov
xchg
pop
xabort
cmp
mov
sbb
aas
or
insb
xorb
in
add
icebp
or
mov
into
aaa
mov
sti
gs
sarl
jae
popa
pop
mov
dec
mov
push
pop
or
and
mov
pop
mov
jmp
push
push
mov
in
testb
jb
cmp
stc
push
sbb
and
scas
mull
dec
aad
enter
bound
jl
xor
shrb
lret
xchg
xchg
fmul
test
es
lret
dec
sub
add
leave
jecxz
int3
shll
movq
cmp
cmc
lahf
rcr
jae
iret
stc
push
loop
jge
mov
sti
cmc
sbb
repnz
fistpll
loopne
call
jae
loop
xchg
sub
push
out
pushf
push
pop
or
and
mov
or
mov
sub
pop
cltd
push
fldenv
in
movsb
mov
sbb
jmp
jg
inc
ljmp
push
xchg
lds
cmpsl
pop
addr16
xchg
add
cmp
inc
and
push
mov
mov
or
xchg
inc
sbb
iret
push
not
stc
xor
aas
dec
mov
loope
xchg
in
add
outsb
xchg
sbb
sbb
daa
scas
or
mov
orb
pop
mov
scas
adc
cmp
sub
shrl
sbb
xchg
add
in
jecxz
ret
les
pop
or
insl
adc
imul
dec
sub
adc
gs
out
cmp
jo
sub
sub
or
aaa
incl
popa
iret
out
cmp
pop
inc
dec
mov
insb
and
add
out
pop
ret
insl
adc
xor
subl
dec
popa
lock
loop
and
dec
popa
mov
sbb
hlt
leave
cwtl
call
adc
jno
mov
mov
rclb
sahf
mov
ja
fisttps
and
cmp
and
imul
sub
pusha
pusha
js
sbb
ja
mov
fldl
inc
pop
pop
ficoms
sahf
fmull
insl
imul
in
les
add
fldt
cmc
out
or
mov
lods
enter
mov
push
mov
mov
insl
in
daa
pop
mov
hlt
fcoml
fsubr
bound
mov
sub
shll
cwtl
xor
syscall
filds
mov
mov
dec
inc
dec
mov
andl
mov
mov
addr16
xchg
test
orb
inc
rcrl
pop
sub
cmp
outsl
dec
pop
scas
cs
aas
call
subl
push
out
and
mov
jg
mov
cwtl
xchg
dec
dec
hlt
pop
sbb
xchg
adcl
lods
shll
shrb
pop
jge
leave
clc
ret
inc
jp
jl
fwait
js
or
js
cmpsl
cwtl
xchg
lcall
inc
mov
add
js
cltd
mov
fildll
mov
push
dec
stos
pop
addr16
sbb
rcr
adc
push
lds
ja
adc
test
xor
xor
pushf
inc
push
jno
push
mov
outsl
adc
xchg
in
mov
cmpsb
out
pop
inc
adc
call
das
pop
push
outsl
fcoms
aas
jecxz
cmp
call
push
push
sub
fiadds
std
ds
jb
rclb
xchg
lea
aas
fcomi
insb
js
jmp
add
ficomps
xor
sti
mov
lahf
jg
movsl
cltd
lret
sub
ja
ljmp
pop
aam
adc
cmp
sub
jns
pop
jns
loope
mov
repnz
dec
jnp
cs
hlt
loop
pop
testl
xchg
mov
adc
gs
repnz
sub
jnp
lds
mov
lret
dec
pop
bound
stc
roll
xchg
or
hlt
mov
mov
dec
inc
dec
xchg
adc
fld
ret
push
shl
and
or
cmpsl
js
or
out
fldenv
pop
lods
arpl
sub
lcall
cmp
mov
bound
mov
mov
mov
add
loope
adc
mov
push
ljmp
popa
lahf
loopne
in
int
adc
cmc
xchg
push
push
mov
pop
or
or
sub
dec
jg
fcmovnu
aam
ret
sbb
push
xor
dec
sub
xchg
mov
mov
push
dec
mov
xorb
nop
jge
sub
push
lods
add
or
mov
js
cmpsl
test
in
cmp
ss
orb
out
inc
xchg
or
sub
push
lret
ds
lcall
out
pop
mov
mov
gs
test
mov
cmp
shlb
sbb
call
sub
aad
or
call
outsb
mov
js
popa
dec
lea
dec
leave
push
mov
lds
dec
imul
pop
icebp
xor
aam
shlb
adcl
sub
xchg
mov
mov
outsb
mov
xlat
loop
lahf
daa
push
int
fidivrl
inc
dec
or
dec
scas
std
xor
add
cmp
sbb
adc
mov
jno
push
das
imul
mov
loop
push
mov
xor
xor
movb
fwait
jmp
and
jns
pop
sub
inc
lods
sbb
insb
int3
cmpsl
sti
mov
xchg
inc
in
sbb
or
xchg
mov
cwtl
cmp
and
dec
out
sub
mov
out
fxam
pushf
cmpsb
inc
ljmpw
stos
outsb
lahf
sub
pushf
push
leave
dec
insl
rorb
das
sahf
aad
movsl
inc
rol
stos
bound
pusha
or
sub
repnz
test
xor
push
test
aad
inc
sarb
loopne
bound
sub
jo
and
sbb
icebp
popf
hlt
nop
sub
jnp
dec
push
ds
dec
pop
inc
in
pop
lahf
push
adc
lods
aam
jb
andl
lods
aam
incl
das
mov
pop
test
mov
leave
jns
push
int3
jp
gs
aad
adc
xor
mov
fs
out
test
jp
sbb
push
xor
adcl
sub
cwtl
cmpsb
mov
dec
fwait
mov
decl
loop
cld
mov
push
jnp
cmp
mov
or
push
mov
ficomps
jno
rorb
xchg
outsb
adc
out
int
xchg
pushf
sub
jecxz
add
fisubrl
jb
or
jnp
push
out
adc
xchg
sarl
add
mov
ret
mov
lods
pop
and
mov
inc
mov
aam
test
lods
sub
out
mov
in
mov
inc
mov
enter
in
xchg
fisubrs
insl
fadds
cwtl
cld
in
lea
lock
jo
lds
lahf
mov
fisubl
test
xor
mov
mov
or
dec
ljmp
push
sub
aad
sbb
bound
lret
hlt
aas
sbb
rol
mov
sub
mov
jecxz
addr16
push
mov
mov
jecxz
std
imull
mov
push
fnstenv
stc
jno
pop
cmp
jbe
arpl
mov
jae
sbb
in
xchg
inc
jno
lds
xchg
push
sub
and
scas
loope
mov
orb
pusha
psraw
clc
lahf
inc
pop
es
sbb
pop
xchg
or
jl
inc
sbb
add
int
mov
jge
icebp
xchg
sub
jge
xchg
jl
push
pop
xor
xlat
jo
aam
jb
leave
rclb
xor
or
adc
mov
or
dec
in
pop
fsubs
xchg
and
shrb
stos
pop
repnz
loopne
aad
mov
scas
add
sbb
push
sarl
cmpsl
jecxz
cmpsb
aaa
xchg
dec
test
pop
ds
outsb
xor
scas
adc
jg
jbe
sti
and
and
data16
jl
shrb
lcall
jle
cwtl
adc
call
shrl
xor
daa
cmc
ja
test
ret
cltd
jb
icebp
push
daa
inc
adc
lods
push
test
dec
into
stc
sbb
jge
loope
xchg
pushf
gs
dec
popa
scas
mov
loop
sbb
int3
inc
mov
into
push
roll
mov
in
mov
loopne
icebp
or
jmp
loopne
scas
cmp
lods
sub
mov
imul
negb
fwait
xchg
adc
xchg
xor
mov
out
adc
repz
fucom
mov
sbb
jecxz
addl
inc
cmpsb
cmp
leave
mov
scas
movsb
cmp
sbb
xchg
icebp
or
and
or
ret
jb
lret
rcrb
mov
dec
pushf
push
mov
sbb
pop
iret
or
cmp
aad
inc
jo
xorb
push
testb
xor
mov
mov
loopne
adc
mov
std
add
jp
add
cli
jne
jnp
sahf
xor
outsl
rcr
test
or
cli
cmp
mov
out
lret
jp
out
sub
jmp
data16
bound
dec
fstps
pop
mov
fisttps
outsl
cmpl
outsl
rcll
or
daa
mov
iret
and
in
jae
sbb
idivb
pop
mov
mov
int3
loope
addr16
imul
pusha
inc
mov
fwait
lods
mov
sar
pop
cs
and
icebp
imul
lock
ficompl
clc
fmull
es
enter
or
and
dec
test
jmp
lret
sub
cli
ljmp
or
sbb
lods
clc
and
ljmp
pop
cld
stc
clc
push
adc
jb
xchg
hlt
fdivrp
insb
jmp
inc
xchg
mov
cs
outsl
xlat
in
adc
iret
ret
fmul
leave
push
push
jb
cltd
push
xor
jmp
adc
ja
and
and
lock
outsb
pop
jp
dec
jge
loope
mov
mov
movsb
out
pop
sub
hlt
xchg
sbb
jmp
xchg
stos
and
xor
and
inc
cltd
dec
clc
adc
in
lea
scas
pop
mov
test
inc
sub
pop
or
jmp
cs
dec
xchg
push
lds
inc
iret
adc
sbbl
pop
mov
out
push
cwtl
je
dec
movsl
lahf
sub
test
push
mov
mov
xchg
jae
rcrl
mov
neg
enter
and
rorl
add
cmpsb
loope
xor
mov
shll
cmpsb
fstl
inc
das
cmc
rorl
xchg
pop
es
scas
dec
push
add
add
push
xchg
xchg
xor
cmp
in
sbb
pop
fwait
addr16
sub
gs
xor
fsts
imul
das
inc
push
push
ja
sbb
inc
inc
sbb
xor
cmp
ds
jg
sarb
sti
lods
sarl
in
mov
ljmp
lods
dec
lds
outsb
stos
xchg
out
gs
pop
xchg
push
imul
call
inc
int
and
xchg
mov
push
or
jno
jle
movsb
xlat
cmp
jne
bound
stc
pop
cltd
cmp
xchg
int
cld
insl
push
jl
mov
nop
scas
dec
in
sarl
mov
push
pop
push
es
out
cmp
sbb
push
jle
ror
jb
and
je
pop
push
rcrb
nop
adc
outsl
outsb
push
in
ficomps
loop
testl
jns
sub
or
xchg
sub
xchg
cmp
sarb
mov
mov
mov
ss
cmc
and
jge
sub
lods
pop
add
pop
jmp
mov
sbb
pop
sbb
lret
movsl
lods
mov
jle
jo
cwtl
clc
aaa
dec
outsl
pop
arpl
mov
or
fnstsw
and
pop
jg
mov
and
lcall
xchg
push
or
inc
push
pop
inc
push
mov
pop
jle
leave
clc
movsl
cmp
stos
xor
mov
jge
lcall
mov
inc
jp
mov
and
loope
mov
sysenter
lret
dec
pop
and
pop
jo
leave
xor
and
xchg
mov
xchg
test
call
xor
movsl
ficoml
cmp
sub
loope
inc
stos
and
mov
inc
pop
add
shl
rcrb
mov
add
mov
push
lock
repnz
add
int
mov
cmovs
imul
mov
bound
dec
push
ret
out
aaa
fcoms
stos
xor
xchg
das
mov
push
hlt
xor
pop
xor
xor
sub
and
lds
push
lods
or
cmp
lahf
push
aam
cwtl
aas
movb
shrl
xchg
add
xchg
mov
add
popf
in
cwtl
mov
fdivrs
rorb
cs
ret
xlat
sbb
lods
jle
sbb
test
ss
dec
loope
adc
jne
mov
xchg
inc
lahf
sti
enter
ja
xchg
cwtl
gs
pushl
dec
or
lahf
aas
sbb
lret
std
mov
dec
repz
or
jno
daa
stos
mov
scas
mov
es
inc
xchg
xor
pop
mov
mov
sbb
cs
imul
cmp
test
xchg
mov
jae
fdivrl
xchg
cmpsb
pushf
mov
fiaddl
jmp
xchg
dec
adc
add
add
add
out
inc
sahf
movd
xchg
dec
mov
cmpsl
mov
jg
or
pop
lods
cmp
lods
adc
shr
rcll
or
in
sub
orl
inc
in
loop
stos
xchg
fwait
mov
addl
adc
push
jo
out
mov
scas
mov
sub
ret
mov
aaa
jae
test
jne
or
pop
jbe
vsubps
lcall
dec
sahf
mov
loope
mov
iret
pop
stc
stos
adc
push
jne
lods
mov
lods
ficompl
sti
mov
sub
pop
mov
xor
loopne
cmp
push
xchg
push
imul
lahf
movsb
mov
addr16
cltd
test
icebp
push
jmp
mov
sub
xor
inc
jmp
lods
cmp
je
pusha
dec
inc
int3
fdiv
push
cmp
popf
aam
repz
outsb
pusha
in
bound
nop
xor
hlt
in
mov
mov
pop
ret
imul
and
dec
es
push
cwtl
icebp
leave
les
movsb
stos
in
loope
aad
sub
jp
test
push
xorl
data16
xchg
es
sbb
add
lods
xchg
dec
loope
repnz
jmp
aaa
mov
repz
jb
pop
jecxz
sub
xor
cli
xchg
jmp
mov
test
pushf
jb
mov
cmp
fiadds
inc
inc
jecxz
repnz
add
mov
lods
mov
pop
bndldx
add
addr16
roll
add
movsb
xchg
jae
push
out
mov
cmp
sbb
jp
cmc
outsb
cmp
pusha
push
je
sub
sbb
mov
pop
incb
repnz
cmp
fwait
mov
sub
sub
and
int3
dec
dec
add
lahf
shlb
xchg
xor
in
xor
imul
pop
pop
mov
pop
mov
xchg
movsl
cmp
or
sbb
ret
xor
arpl
in
xor
sbb
or
or
popf
repz
jg
imul
in
sbb
mov
mov
andb
aaa
mov
and
jge
dec
cmpsl
ss
xor
aaa
jnp
adc
test
xlat
xchg
fisubl
xor
data16
sub
sbb
cmpsb
fucomip
jmp
data16
and
movsl
rep
jne
mov
or
cmp
out
xchg
sar
jg
adc
jbe
xor
sbb
and
mov
testl
push
pop
push
fildl
in
fdivrp
sub
push
pop
mov
push
adc
mov
arpl
pop
cmpsl
add
xchg
fdivr
test
insl
xchg
lcall
leave
xchg
push
add
cmpsb
imulb
ret
arpl
js
sbb
dec
stos
add
xchg
inc
and
adc
and
mov
cld
mov
and
aaa
popa
loopne
mov
lds
push
and
shll
mul
xchg
add
movsl
in
sbb
std
stos
test
dec
xchg
mov
xchg
fildl
mov
lock
sbb
xchg
pop
cmp
and
sahf
jb
insb
jno
inc
aad
test
fldenv
adc
push
lahf
mov
leave
pop
push
bound
incl
iret
dec
or
xchg
sub
cmp
mov
lods
push
add
stc
testb
imul
jecxz
gs
push
and
or
ud1
dec
out
out
js
push
push
add
mov
mov
jae
mov
sbb
mov
xor
inc
xor
movsl
cld
or
icebp
pop
test
out
fiaddl
pusha
xchg
pushf
and
imul
lret
filds
into
sub
sbb
jg
loopne
dec
imul
mov
inc
mov
adc
mov
movsl
fs
and
xor
adc
aam
mov
mov
iret
adc
cmpsl
mov
dec
jo
inc
fldt
mov
push
js
into
xchg
dec
imul
jp
inc
ret
inc
pop
cld
push
adc
pop
mov
cld
inc
outsl
cmpsl
jns
rcll
enter
sub
xchg
dec
mov
out
xchg
addr16
inc
mov
outsb
into
xor
mov
sti
adc
dec
in
jp
inc
sbb
and
fs
gs
call
js
cli
ret
outsl
movsl
stos
stc
cmp
out
inc
sbb
std
test
xlat
adc
sub
inc
out
ret
dec
ret
push
sbb
div
xor
push
addl
sahf
add
stos
cmc
pop
dec
sbb
sub
incb
adc
fmuls
in
mov
les
arpl
cmp
imul
movsb
mov
push
ja
andl
ds
adc
mov
out
add
in
mov
ljmp
mov
inc
movsb
fucomi
push
push
addr16
push
xlat
inc
mov
pop
xchg
les
es
leave
pushf
fmuls
movsb
scas
lahf
dec
xor
lret
call
jb
fcomps
adc
push
fmuls
cltd
jmp
gs
xlat
add
pop
out
mov
js
pop
sbb
mov
mov
lcall
iret
loop
stos
stc
ja
or
pop
bound
dec
lret
fwait
add
int
lods
fwait
cmp
movsl
pop
dec
cltd
inc
xchg
roll
lret
xchg
sbb
out
push
icebp
inc
mov
jnp
daa
pop
adc
and
inc
mov
pop
sub
push
outsl
in
push
fimull
das
leave
mov
daa
call
xor
pop
sahf
jno
xor
flds
int3
xchg
mov
arpl
pop
sub
adc
in
loope
js
bound
push
jb
sbb
rorl
push
outsb
mov
pop
in
cwtl
mov
or
ds
movsb
andl
xchg
stc
pop
pop
inc
push
arpl
mov
xor
mov
sbb
test
or
jl
or
xlat
pop
dec
inc
jbe
neg
imul
jp
and
xchg
ja
test
in
push
into
pop
ds
int3
jbe
lods
pop
jp
xor
sbb
arpl
jmp
xor
jp
or
cld
mov
pushf
cmp
jo
leave
dec
jge
pop
fimuls
test
repz
cmpsl
aad
test
pop
xlat
aas
sbb
shrb
add
adc
xor
stos
cmpsb
out
negb
jecxz
mov
pop
rcl
lret
fwait
xchg
mov
das
cmp
sbb
mov
add
pop
pop
dec
inc
xlat
int3
dec
push
sbb
or
aam
loop
idivb
mov
cmp
fsubl
add
mov
sub
mov
add
gs
push
jb
ja
push
add
and
mov
pop
adc
negl
ss
mov
mov
loope
add
out
dec
or
addr16
xor
push
mov
ret
sbb
gs
xchg
jle
mov
fdivl
cld
stc
push
fsubl
dec
inc
xor
pop
mov
sub
movsb
mov
pop
fsubr
or
lods
jecxz
cmp
out
cmpsl
sti
cmp
call
pop
sub
mov
mov
into
xchg
popa
push
mov
pushf
push
cmpb
outsl
xor
mov
mov
cltd
lds
xorb
xor
or
ficomps
lock
pop
aas
xchg
iret
adc
negl
jne
ret
and
dec
push
and
sub
push
ljmp
mov
ficomps
xor
mov
stc
std
or
add
jno
shlb
lret
in
mov
sub
sbb
or
pop
and
push
or
repnz
mov
add
lahf
sbb
out
enter
frstor
jae
mov
pusha
push
mov
lds
sub
aad
adc
in
scas
sub
sbb
or
std
jg
insb
fidivl
out
outsb
int3
out
sbb
dec
add
jo
je
lods
jp
hlt
adc
outsb
adc
push
lods
xor
aaa
inc
fsubl
subl
cmp
dec
push
outsl
push
sahf
cmpsb
and
sbb
xor
xchg
insb
and
ss
ja
aam
cwtl
data16
pop
fildll
nop
sahf
into
mov
addr16
in
sub
dec
movsb
mov
data16
shll
dec
mov
mov
rclb
popa
jg
sbb
loopne
dec
stc
test
adc
mov
imul
inc
mov
ficomps
jl
cmpsb
jne
out
sbb
sub
lret
subb
xor
pop
push
or
push
fwait
in
cmpsl
movsl
or
std
push
insb
mov
jg
fmull
jl
lds
call
rorb
xor
mov
fdivrl
push
dec
dec
cwtl
xor
inc
lret
out
push
inc
addr16
add
cmp
jae
inc
dec
ss
in
mov
in
cvtpi2ps
and
pop
sbb
rcll
ds
mov
and
mov
cmp
push
xchg
into
jg
jmp
mov
dec
xor
aaa
adc
sub
scas
inc
mov
mov
imul
jns
sub
mov
mov
les
mov
jg
cmp
lea
ljmp
rep
adcl
push
adcl
jb
leave
jl
pop
xchg
mov
into
hlt
fildll
pop
filds
out
and
movsb
push
ss
push
and
in
ds
and
ficompl
xlat
cmp
sub
jecxz
mov
ss
rcrb
sub
in
pop
inc
loop
dec
or
add
pop
ss
scas
add
lea
cwtl
jns
test
cmp
test
es
xchg
pushf
dec
ret
stos
mov
fdivl
dec
das
lret
clc
xor
out
mov
aas
add
adc
mov
sbb
mov
xchg
sti
jl
xor
lds
mov
iret
mov
sub
dec
sub
fwait
movsb
mov
push
mov
gs
call
adc
jp
inc
pop
fdivrs
data16
fs
mov
int
jmp
xor
into
push
clc
fyl2x
jle
mov
fldt
sub
xchg
outsl
mov
jo
lods
mov
lahf
add
jns
xor
js
add
fistpl
aad
aad
pop
sbb
pop
xchg
cmp
in
and
xlat
dec
inc
ds
mov
mov
ret
test
cltd
aas
repnz
testb
push
pop
push
xorl
data16
imul
pop
pop
mov
cmp
push
xor
or
stos
mov
ss
out
inc
inc
cmc
ss
pushf
popf
adc
imull
into
jmp
add
test
les
inc
add
jl
sub
in
adc
pop
pop
adc
and
adc
inc
aas
inc
xor
jl
sub
ret
mov
xchg
sbb
int3
sub
insb
mov
orb
lods
dec
push
inc
iret
out
sbb
popa
xchg
push
mov
ds
or
inc
call
inc
fst
push
xchg
sbb
ljmp
je
pop
xor
lods
inc
out
inc
xchg
push
sbb
xor
add
jmp
loopne
cltd
mov
adc
cmp
fsubr
cmp
stos
mov
rolb
or
mov
in
xor
jne
mov
fs
jmp
cmp
cmp
stos
adc
sub
nop
out
push
gs
mov
pushf
xchg
push
adc
push
dec
xchg
jg
sbb
cmpsb
je
mov
aad
ds
test
sbb
in
xor
fwait
movb
in
jle
push
and
pop
mov
pop
sahf
push
or
test
les
nop
pusha
or
int3
push
adc
or
test
popf
fcmovne
sbb
scas
test
jb
rolb
xchg
fldcw
xchg
leave
je
das
mov
daa
stos
xchg
sti
int
sti
mov
inc
sub
xchg
js
test
mov
test
in
js
inc
push
das
mov
dec
leave
imul
std
loope
aam
jecxz
sub
test
enter
add
imul
or
in
out
xor
fmul
pop
fisubl
inc
shr
cli
and
inc
inc
push
call
pop
aam
sbb
nop
cld
fld
lea
aad
and
mov
push
mov
jecxz
cmpsb
cmp
sub
sbb
xorb
dec
add
inc
adc
push
lods
jp
jle
adc
adc
aam
aaa
fimull
adcl
or
idivb
dec
orb
xor
pop
pop
adc
jbe
test
fs
jl
push
dec
lret
jo
lods
xor
push
rclb
inc
pop
int3
pusha
push
dec
sysenter
adc
ret
xor
lods
addr16
adc
shlb
loop
ret
cmp
lods
fwait
bound
testb
and
or
lcall
mov
rolb
loopne
jno
pop
add
inc
mov
xor
gs
jp
inc
push
nop
loope
test
in
xor
jnp
mov
cmpsb
xor
xor
mov
sbb
aas
and
out
and
outsl
and
test
lcall
push
pop
adc
dec
mov
add
ljmp
pop
fidivl
popa
in
sbb
xchg
and
mov
jecxz
in
dec
into
push
sarl
xor
fwait
mov
das
pop
xchg
xor
imul
cmpb
push
pop
pop
jns
and
es
dec
cmc
fstpt
stos
mov
mov
into
xor
arpl
pop
testb
mov
adc
mov
inc
out
jbe
aam
cmp
dec
dec
sbb
mov
aaa
push
or
repz
pop
pop
andb
mov
cmp
outsl
ret
push
sub
and
xchg
cmc
push
jge
cmp
mov
in
subl
jmp
sbb
add
das
popf
sahf
sub
push
add
dec
movzbl
push
jbe
sub
fwait
mov
sub
sbb
ja
ret
scas
xchg
mov
roll
fldl
and
faddl
addb
jns
jae
sub
push
sub
mov
bound
inc
lahf
fidivs
sub
cs
xchg
mov
insb
mov
lods
lods
xor
cmc
bound
test
mov
add
mov
outsl
push
aas
cmp
jg
xor
mov
jmp
arpl
icebp
lret
cmp
lcall
movsb
and
imul
orl
cmpsl
mov
xchg
add
cltd
pop
inc
fisubrl
push
xchg
xchg
cmp
popf
mov
insb
movb
pop
push
sbb
mov
in
int3
mov
les
fidivrs
mov
test
dec
std
jp
int3
push
mov
arpl
orb
jbe
inc
mov
inc
in
adc
addl
add
orb
test
push
or
cvtps2pd
or
gs
js
pop
sub
ss
fs
cmp
insl
cmp
test
clc
imul
xor
lea
call
mov
sti
ret
imul
add
icebp
and
addr16
ds
xchg
mov
loope
in
mov
clc
push
arpl
push
js
sbb
cmpsl
test
mov
cs
aam
dec
sbb
iret
std
xor
dec
xorb
inc
js
icebp
jle
dec
imul
jl
clc
mov
les
popf
sbb
sub
add
xchg
sub
and
adc
popf
dec
stos
inc
cs
in
test
stc
inc
inc
xchg
in
mov
je
inc
enter
notb
cs
frstor
popf
jno
lods
js
dec
inc
mov
inc
sbb
adc
dec
data16
leave
push
push
xor
test
adc
sub
cmc
jge
lcall
loopne
push
jno
or
inc
shr
rorl
int
xlat
es
fs
xchg
and
mov
out
pop
lcall
addr16
testb
jno
cmc
mov
es
aam
xchg
mov
loop
outsb
pop
mov
imul
mov
and
push
push
inc
pusha
and
pop
rcrl
dec
insl
ret
jl
push
lret
dec
enter
sub
lahf
mov
movsl
stos
sbb
cwtl
cmp
mov
jl
aam
jne
outsl
rcll
in
clc
fldcw
andl
mov
fstp
call
or
fidivs
in
mov
ret
cmp
adc
insl
xchg
mov
mov
movsl
pop
imul
pop
scas
in
jge
pop
dec
loop
fiadds
push
xchg
push
std
bound
psrld
je
jg
lock
mov
mov
mov
mov
test
adc
xchg
sbbl
flds
pop
aam
mov
xchg
movsl
out
shl
cltd
mov
or
out
cmpsl
outsb
std
push
fmulp
sub
add
test
xor
sub
add
dec
int
fildll
stos
xor
fcmovu
mov
aam
enter
and
js
fsts
dec
cmpsb
hlt
insl
out
jp
bound
sar
mov
xchg
pop
sub
mov
or
dec
clc
repnz
ficoms
shll
adc
shl
gs
insb
jmp
jb
jl
insb
scas
xor
cld
repz
fdivs
aas
xlat
jae
xor
push
push
xor
out
scas
mov
mov
jmp
sbb
xchg
dec
mov
out
das
imul
push
xor
and
jns
mov
cwtl
xchg
in
and
sub
int
cli
loopne
add
das
xor
jmp
mov
sbb
lahf
mov
je
mov
daa
adc
imul
sarl
hlt
push
push
loopne
jl
add
jl
jecxz
ret
inc
push
shrb
bnd
cwtl
adc
icebp
and
xchg
sbb
push
pop
jne
mov
sub
push
mov
test
pop
xor
jb
cli
sub
mov
into
test
das
push
fisttpl
or
add
into
fwait
xor
fildll
push
lret
roll
mov
jo
pop
sbb
pop
xchg
movsb
rcr
clc
cmpsl
add
xlat
mov
cmp
cmc
mov
stos
inc
pop
inc
int3
xchg
mov
aad
dec
ljmp
cli
cmp
jg
daa
es
sub
movsb
stos
into
push
out
push
mov
mov
lahf
push
push
jno
mov
xchg
pop
mov
jmp
out
xchg
in
insb
sbb
lret
mov
and
es
xchg
mov
pop
test
jmp
gs
loop
xor
shr
fwait
mulps
gs
mov
dec
sub
lret
jg
xor
icebp
or
enter
jge
inc
xchg
js
push
dec
mov
dec
int3
mov
push
lcall
ljmp
lahf
dec
mov
testb
or
imul
mov
push
jb
mov
lea
jno
jmp
jl
sub
mov
sub
mov
cmpsl
jmp
das
orb
pop
xor
insl
jo
pop
pop
dec
mov
fiadds
mov
repnz
mov
fistps
das
mov
cwtl
stc
lret
xchg
lret
out
icebp
xchg
push
mov
int
jecxz
sub
jmp
xchg
and
pop
fsin
sub
adc
icebp
sbb
notb
jae
pop
mov
dec
xorl
pop
aas
and
gs
addl
mov
mov
sub
lcall
inc
xchg
fwait
jg
jge
pop
decl
test
fisttps
cli
lods
int
inc
push
mov
shr
xchg
jmp
icebp
and
fstpt
push
mov
adc
and
add
lods
lahf
out
or
inc
sub
sbb
arpl
mov
mov
push
xchg
cltd
aad
fistpll
imull
cltd
mov
mov
cmp
pop
adc
mov
lea
pop
inc
and
sbb
cli
pop
lods
shlb
popa
xchg
sbb
aam
mov
enter
scas
xor
aad
fdivrp
enter
inc
out
lock
add
and
mov
jg
jp
and
scas
jnp
inc
adc
data16
dec
sbb
test
push
inc
mov
js
jnp
xor
outsb
dec
mul
inc
jnp
mov
mov
repz
js
push
imul
pop
add
sbb
push
xlat
fwait
cld
adcl
jl
ret
std
dec
punpckhdq
push
lret
loopne
or
mov
test
lea
cmp
test
mov
push
popf
fwait
push
hlt
jle
out
and
mov
out
sub
shl
clc
loopne
add
int3
popl
jl
or
push
orb
cmp
push
mov
mov
call
fs
adc
jmp
pop
lock
lods
fwait
stos
push
cs
inc
push
jo
and
lret
out
cltd
jle
dec
pop
xchg
sbb
imul
sub
lods
pop
lock
ret
pop
aas
sahf
push
push
call
in
mov
subl
jmp
xor
nop
adc
arpl
sbb
add
pop
push
xor
and
aaa
or
negl
pop
adc
int
dec
cvtpi2ps
xchg
out
mov
add
or
cli
shlb
int
sbb
xor
xchg
loope
mov
mov
sub
andb
scas
imul
lret
or
sahf
cmp
mov
jbe
pop
add
in
sub
and
sbb
jb
leave
mov
xor
out
rclb
push
jp
push
ja
mov
popa
outsb
lahf
aaa
mov
push
arpl
push
cmp
js
jnp
stc
or
inc
loop
push
testl
mov
mov
test
mov
jmp
push
sub
leave
pop
lahf
mov
dec
push
inc
mov
popa
daa
mov
fildll
and
pop
stos
push
adc
fistps
xchg
or
and
mov
adc
icebp
or
cltd
inc
mov
sbb
fildl
pop
lahf
sbb
xchg
mov
iret
aaa
stc
push
das
mov
popf
mov
mov
mov
das
imul
in
and
mov
and
cmp
loope
es
lds
jno
and
bound
lods
cmp
or
sbb
pop
aad
mov
idivb
add
xchg
xor
dec
push
mov
cli
mov
sub
cmpsl
aaa
push
leave
psubsb
cmpsl
push
mov
adcl
jae
out
mov
out
aas
inc
cmp
aas
stos
inc
adc
push
adc
sub
mov
nop
ret
inc
shlb
and
lcall
xor
fistpl
lds
sbb
mov
gs
cmp
mov
mov
ficomps
push
add
int
rcrl
outsl
mov
xor
call
dec
xor
pop
add
test
add
mov
mov
and
mov
lahf
push
or
or
ret
das
sub
xchg
fisttpl
jmp
inc
mov
das
and
aaa
push
sub
jp
add
push
and
mov
or
arpl
clc
mov
jle
mov
pushf
lock
bound
inc
pop
imul
mov
xchg
sub
xor
mov
int
cmp
pushf
pop
jno
xchg
in
mov
adc
jmp
loope
and
ja
stos
cmp
inc
mov
pushf
outsb
lret
into
push
iret
dec
adc
pop
inc
rcrb
or
pusha
test
mov
adc
daa
jg
pop
leave
mov
push
adc
push
test
mov
pusha
bswap
pop
adc
or
inc
into
jns
ficoml
dec
cmpsb
int
mov
jge
inc
shlb
adc
out
in
push
scas
pop
sti
loopne
mov
mov
sbb
in
mov
add
nop
mov
pop
xor
test
xor
fwait
jns
mov
jp
dec
pop
fnstsw
testl
xabort
adcb
mov
mov
clc
cmpsb
dec
cmpsb
call
outsb
mov
popa
data16
dec
fidivrs
ja
stc
fwait
or
out
mov
push
lret
sbb
adc
sti
movsb
pop
loope
sub
mov
ds
push
pop
fsubrs
pusha
xlat
jmp
icebp
or
int
and
xor
mov
jo
inc
loop
xor
int3
fucomip
outsl
jbe
rcrb
cld
popa
testl
cwtl
mov
pushf
push
jg
ret
xchg
negb
cld
jb
incl
mov
subb
mov
and
adcb
out
in
stos
int3
dec
sub
add
and
inc
cmp
push
jb
cmp
push
mov
lds
test
adc
cmpsb
xor
out
xchg
negb
add
pusha
pop
xchg
push
les
sub
js
movsl
cmp
and
sbb
int
adc
ljmp
in
and
insl
imul
aas
aam
mov
insl
inc
ja
add
cmp
in
loopne
aas
pop
dec
xlat
test
mov
bound
mov
jge
call
arpl
cmpsl
rep
ret
mov
cmp
cmp
sub
mov
or
mov
pop
jge
mov
push
cld
mov
add
jo
dec
clc
lea
dec
xchg
cmpsb
stc
sbb
popa
or
sub
jae
xchg
mov
scas
add
mov
or
xchg
or
jb
popa
scas
pushf
dec
cmp
enter
out
fsubs
ficoml
pusha
andl
call
inc
fisubs
push
loope
inc
dec
cmp
sbb
fidivrs
in
add
push
xchg
jbe
iret
mov
mov
outsl
adc
enter
loopne
xlat
dec
pop
adcb
sti
clc
cmpsb
fsubs
mull
mov
mov
cmc
shll
stos
das
sub
add
ss
and
lret
inc
xlat
sbb
stos
adc
lret
jo
add
clc
ds
jns
sub
mov
pop
jb
inc
pushf
test
mov
ud1
loope
sbb
fsubp
dec
push
aad
inc
mov
test
fadd
aad
sbb
sarb
lret
dec
pop
push
insl
add
jle
aas
lods
inc
lret
jle
fidivs
mov
rclb
add
pushf
and
mov
pusha
push
in
mov
loop
popa
xchg
lahf
add
xchg
and
dec
sub
and
xchg
push
dec
sbb
mov
sub
push
push
adc
fbstp
push
inc
rcl
mov
aam
shlb
fsubp
xor
sbb
mov
xorl
add
movsl
outsl
leave
pop
push
xchg
popa
es
out
mov
jp
icebp
rcl
pushf
pusha
lret
mov
pop
test
mov
add
jecxz
inc
mov
or
call
mov
out
cwtl
loope
lds
sub
mov
pusha
loopne
xchg
mov
push
cld
dec
adc
lahf
mov
xor
fdivrl
pop
cmp
xor
mov
popa
stc
std
pushf
movsl
mov
scas
pop
adc
subb
data16
scas
adc
subb
xor
sti
fistps
iret
aaa
jg
insb
pusha
in
loop
movsl
xchg
jg
xchg
pop
mov
mov
sahf
sub
aam
add
xlat
leave
movq
shlb
int3
rorb
sbb
fiaddl
pushf
inc
xor
lcall
mov
loopne
test
or
aaa
pop
dec
addr16
jne
sbb
or
enter
les
push
stc
imul
lcall
sub
adc
mov
cli
sbb
xor
scas
fcomps
xorb
xlat
inc
ds
inc
pop
hlt
push
jne
popf
mull
pop
punpckhwd
xlat
in
int3
imul
lock
and
imulb
inc
or
pop
test
push
mov
mov
data16
iret
and
dec
dec
dec
push
jecxz
fistps
js
xor
mov
xor
stos
jns
es
aam
ret
subl
dec
mov
adc
adc
xchg
xchg
sbb
xor
pop
sbb
mov
pop
loop
cmp
std
inc
lds
movsl
mov
aad
cmp
sbb
pop
inc
stos
cltd
and
cli
mov
xchg
sub
dec
test
jg
addl
xor
iret
xor
out
adc
xchg
hlt
xchg
popf
addr16
pop
insl
jb
movsb
xchg
inc
scas
stos
pop
sub
nop
arpl
insb
leave
mov
inc
pop
movsb
and
or
scas
xor
jo
jbe
jb
shrl
mov
cmpsl
xchg
xchg
dec
lock
lret
leave
fcoml
jns
fbstp
js
inc
in
divl
lret
les
or
divb
add
nop
mov
sub
xchg
xchg
lods
xchg
loope
cli
lods
lcall
and
cltd
inc
sbb
dec
cmpsb
mov
xlat
mov
test
or
push
adc
dec
dec
fidivrl
mov
sub
inc
loope
push
cmp
imul
stc
in
js
in
scas
xor
test
jnp
data16
and
adc
imul
push
daa
icebp
push
cmp
xchg
clc
mov
addr16
pushf
mov
std
ss
jmp
pop
cli
xlat
stos
cli
mov
mov
sahf
aas
aad
jl
mov
lahf
and
inc
push
decb
call
dec
movsb
jbe
imul
lock
lods
or
fisubrl
aaa
mov
out
imul
das
data16
sbb
mov
mov
fisttpl
mov
xor
lods
pop
out
mov
scas
movsl
nop
sahf
push
mov
push
into
out
ja
pop
jbe
insb
daa
cmpl
push
mov
dec
dec
push
xor
jns
das
pushf
popf
shll
pusha
xchg
and
mov
jle
stos
sti
mov
scas
cltd
sarl
mov
lods
inc
xor
test
mov
arpl
ss
pop
test
add
jmp
and
adc
psrld
pop
lret
xor
adc
adc
lods
stos
ds
push
and
mov
cmc
cltd
sub
rcrl
cmp
cltd
cli
rolb
cs
add
and
addr16
mov
cs
addr16
sbb
push
sahf
pop
xchg
scas
mov
sbb
das
fisubrs
pop
and
and
test
fcmovu
xor
call
dec
cld
loop
aad
xchg
adc
not
ficoms
mov
jl
push
fs
and
xchg
pop
test
out
jnp
in
nop
xchg
mov
rcrl
mov
btc
pop
sahf
outsl
inc
mov
call
sub
loope
pop
cltd
or
xlat
push
out
mov
into
add
push
mov
ljmp
sbb
inc
cmp
cmp
pop
push
call
fnsave
in
inc
dec
push
lret
fcoml
gs
jne
jle
mov
or
xchg
loope
push
bound
testl
hlt
sbb
stos
jbe
mov
push
pslld
xchg
aas
ret
movsb
or
jmp
clc
mov
mov
push
mov
add
addr16
jl
mov
ljmp
aaa
fwait
add
add
test
mov
iret
scas
add
mov
mov
icebp
or
push
inc
or
cld
mov
fs
insl
sahf
xlat
push
mov
or
shlb
sarb
inc
addr16
inc
in
movsb
push
shlb
adc
scas
cmp
stos
arpl
outsl
and
dec
pushf
jle,pn
cwtl
loopne
push
insl
filds
push
dec
push
dec
cld
xchg
lods
call
and
jns
loopne
or
or
xor
push
jae
dec
adc
pop
in
test
mov
lea
mov
rcr
aam
aaa
push
sti
imul
jg
inc
imul
cmp
lds
xlat
inc
rolb
push
mov
adc
dec
jo
push
dec
fcmovnbe
punpcklwd
aam
mov
xchg
in
add
sbb
dec
out
or
inc
popa
hlt
test
cld
add
flds
pushf
out
mov
loop
mov
xchg
aas
mov
xchg
xchg
jb
shll
push
sub
mov
lcall
ficoml
nop
xchg
xchg
jmp
rcrb
mov
aaa
rcrl
test
dec
in
fadd
sahf
jne
or
dec
add
sbb
mov
and
dec
lods
call
pop
pop
mov
shlb
lea
cmp
lcall
add
aam
xor
adc
movsl
fwait
mov
pushf
mov
adc
push
mov
push
sub
cmp
lods
arpl
mov
push
pop
mov
mov
mov
jl
loope
pop
aaa
jp
dec
shrl
xor
xor
xchg
cwtl
fistl
push
test
sub
cli
dec
mov
xchg
out
rclb
jmp
stos
gs
std
cmp
cld
insl
pop
loope
pop
mov
addr16
add
adc
out
xorl
fdivp
jmp
add
mov
lea
repnz
pop
fcomi
daa
arpl
sbb
pop
dec
mov
jno
int3
repz
scas
movsb
lea
dec
cs
mov
cmp
push
jl
shlb
add
mov
repz
sbb
jle
adc
in
jmp
test
jg
test
add
rcll
icebp
or
outsb
pop
mov
cltd
jns
cld
shlb
fnstcw
andl
movsl
xchg
cmp
cltd
sbb
xor
daa
cmp
dec
fisttps
sbb
jmp
and
in
adc
sub
mov
dec
negl
into
das
lahf
sub
das
mov
dec
mov
xor
lock
sbb
or
es
je
ret
ljmp
add
daa
dec
sbb
faddl
sub
adc
stos
or
test
jnp
rep
push
jne
mov
add
out
dec
std
sarb
jnp
je
aaa
inc
iret
fsubrl
pop
push
jg
push
mov
stos
adc
scas
mov
in
lds
dec
pop
mov
in
sbb
pop
push
enter
test
push
mov
push
stos
add
loopne
arpl
inc
cltd
gs
or
icebp
orl
daa
in
dec
ds
cmp
data16
outsb
sbb
call
adc
mov
ja
jo
lock
add
and
pop
filds
pushf
je
loop
rolb
mov
xor
mov
jmp
scas
sahf
push
xor
loop
mov
shrd
push
jl
mov
adc
loopne
jecxz
iret
cmp
lret
test
cmc
xchg
mov
sbb
pop
add
sbb
mov
int
ret
fwait
dec
sub
cmp
imul
call
jae
fldcw
aaa
xchg
outsl
fcoml
aam
cmc
pop
fbstp
inc
in
dec
push
jbe
ret
mov
pusha
pusha
divb
jecxz
xchg
ret
sub
pop
aad
dec
sub
adc
mov
mov
mov
cs
sti
pushl
sti
cmc
or
dec
push
push
xchg
movsl
bound
sbb
lret
or
mull
sbb
add
incb
mov
int3
jp
sub
add
jb
xorb
movb
mov
icebp
mov
mov
pop
in
in
fs
ja
inc
and
lock
jo
scas
xchg
and
dec
adc
push
cmc
xor
adc
inc
mov
test
outsl
gs
jae
add
inc
fbld
push
sbb
test
or
pushl
jo
jl
sbb
psrld
and
or
fldt
add
inc
dec
js
imul
lods
mov
insl
mov
xor
xchg
jns
xchg
pushf
test
pop
add
xchg
pop
mov
xchg
fistpll
add
fsubr
pusha
movsl
pop
aad
test
hlt
xchg
jnp
int
pop
mov
fldt
pusha
dec
out
sub
jp
push
mov
mov
inc
ror
push
mov
aam
pop
decl
inc
out
ficompl
fnstenv
sbb
outsl
xchg
out
out
mov
imul
int
mov
out
mov
pop
out
adc
sub
and
or
sbb
sbb
push
mov
mov
pop
xor
pop
jnp
cmp
cmp
xchg
in
pop
push
xor
or
jb
daa
imul
pop
cli
jae
je
mov
add
push
popf
fmuls
jmp
cmp
and
movsl
gs
jns
pop
pop
and
jnp
nop
test
jmp
or
or
fcomps
dec
inc
mov
popf
lahf
jge
jno
sub
fs
cmpsb
sarb
mov
in
xchg
rcr
out
xchg
sbb
adc
xlat
xchg
cltd
lods
rol
popf
cmc
ljmp
push
pop
jbe
pop
std
data16
mov
pop
jp
addr16
xchg
xor
clc
mov
sarl
dec
pushf
sbb
out
fs
jecxz
adc
push
mov
cmp
cwtl
xor
lret
fcmovbe
std
lods
aas
push
xor
or
dec
rcrl
inc
mov
xlat
inc
scas
push
and
mov
test
dec
sbb
xor
xchg
or
cmp
inc
movsl
dec
lds
xchg
cld
push
lcall
xlat
mov
cli
pop
rclb
jae
shl
and
not
dec
and
fidivrl
push
add
sbb
mov
jmp
insl
lret
ja
enter
xchg
outsb
stc
cmp
cmp
xor
or
stc
inc
cmc
std
test
jb
cmp
xor
imul
inc
cmp
jb
out
pushf
aas
iret
dec
mov
lods
sub
imul
jno
pop
xchg
inc
popf
mov
and
xchg
xor
cli
fdivrs
repz
mov
add
dec
in
mov
cltd
pop
xchg
or
pop
mov
out
leave
jns
aaa
fisubrl
aas
pusha
xchg
cs
and
pushf
outsl
insl
add
addr16
dec
pop
std
dec
dec
push
xchg
das
push
ret
sub
les
push
sbb
dec
psrld
dec
loope
test
mov
inc
mov
sub
aad
jns
sbb
mov
call
sbbb
ret
enter
leave
test
jne
cltd
les
movsl
mov
jg
fildl
cs
das
jl
stos
lods
int3
incl
adc
hlt
and
test
inc
test
jo
loope
dec
adc
repz
jge
and
test
and
test
icebp
adc
inc
xchg
dec
and
xchg
mov
sbbl
cs
outsl
jmp
movsb
mov
mov
out
pop
cmpsb
push
mov
jo
cmpsl
sahf
stos
loopne
andl
js
in
and
das
adc
loopne
mov
in
jnp
jl
mov
gs
fimull
fisubs
addr16
rorb
xchg
pop
fwait
push
nop
push
cmp
pusha
sbb
in
push
jb
sub
mov
out
cwtl
pop
ret
movsl
xchg
xchg
sbb
sub
test
mov
test
xlat
leave
jae
lods
sub
imul
pop
xchg
push
or
sbb
add
adc
xor
rorb
cmpsl
push
push
or
outsb
mov
and
lea
add
fcmovnb
xchg
inc
cli
fs
push
icebp
std
fs
jnp
push
addb
jae
jmp
xor
inc
mov
adcb
jle
jno
out
addr16
inc
push
lret
iret
inc
lcall
aas
cmpsb
dec
xor
mov
and
ds
aaa
out
dec
xchg
xlat
mov
mov
rcll
lcall
lea
fmuls
aas
in
mov
push
cmp
mov
jno
cmp
sub
mov
sub
mov
jae
aad
cmp
frstor
lods
adc
loop
mov
incb
sub
xor
xchg
cli
test
add
mov
je
add
loope
cli
sarl
icebp
scas
ret
aad
fisttps
add
and
push
xor
imul
enter
adc
lods
add
fbstp
xchg
sbb
add
scas
cld
dec
nop
xor
pop
pop
shrl
dec
arpl
imul
adc
push
xchg
pusha
xchg
test
jns
ret
ljmp
dec
aam
adc
pop
addl
ret
or
mov
in
ds
and
lods
push
jge
test
cmp
outsb
test
outsl
xchg
into
jne
adcl
lods
adc
xchg
jbe
adc
mov
push
je
add
sbb
cmpsb
aas
out
xor
js
mov
les
leave
xchg
inc
cmp
in
mov
bound
ss
xchg
sub
shlb
fimull
xchg
and
lods
mov
or
push
mov
cmp
lock
fcomp
into
push
outsl
add
lods
mov
rcr
mov
scas
movsb
mov
push
cmp
into
xchg
cwtl
stos
bound
xor
dec
sbb
stos
fwait
mov
movsb
aad
sbb
pop
ret
movb
jecxz
xorb
inc
in
or
iret
and
stos
jg
sahf
add
sub
rcrl
add
data16
notb
or
std
mov
or
add
xchg
or
mov
sub
adc
adc
cli
testl
cld
push
popf
jecxz
xor
adcb
arpl
inc
outsb
daa
int
lret
aaa
in
lock
mov
push
jg
scas
add
mov
jnp
out
rorb
cs
mov
jnp
cmp
pop
or
mov
lahf
fwait
out
stc
mov
mov
lock
cltd
push
fstps
or
fdivrl
xchg
mov
add
lock
imul
stos
jns
negb
dec
test
orb
std
stc
cmp
dec
xor
dec
fidivs
jg
jmp
fwait
mov
sbb
out
pop
popa
inc
and
sbb
repnz
dec
cld
cmpsl
cmp
fisubrl
and
lret
mov
cld
dec
scas
and
out
adc
sti
sub
subl
jno
sub
jecxz
push
shl
dec
scas
std
andb
cmp
mov
je
sbb
or
in
rcl
les
inc
cmp
mov
scas
out
fs
sub
movsb
ror
dec
push
dec
xchg
lds
pop
sti
cmp
inc
jecxz
fidivl
xchg
cmovae
rcll
jp
dec
pushf
push
roll
movsl
fucomp
cmpsb
test
xchg
jnp
cmp
or
lahf
push
mov
pop
add
rcrb
inc
pop
out
fnstcw
jmp
cs
inc
mov
pop
mov
sbb
setle
push
and
cmp
pop
add
xor
rcrl
sub
out
sti
clc
pusha
pop
rcll
shrl
aad
xchg
sbb
fwait
lret
std
fsubp
push
cmp
mov
test
aam
js
jnp
cmpl
gs
jb
in
in
sbb
add
lahf
pusha
mov
xchg
jno
out
gs
inc
xchg
push
cs
sbb
icebp
cs
ds
dec
dec
cs
repz
push
push
mov
dec
cld
push
fs
fildll
mov
push
mov
cld
push
push
cld
sbb
push
aaa
xchg
iret
jge
push
jp
aaa
add
enter
sub
fstpt
xor
addr16
jb
ret
stc
sti
dec
leave
stos
out
mov
imul
movsb
inc
das
in
loope
loop,pn
mov
test
cmp
push
adc
xor
pop
cmpsb
hlt
lods
cmc
mov
iret
scas
cmp
repnz
scas
pop
test
stos
push
or
jl
inc
sub
lock
cltd
xchg
rclb
outsl
sbb
xchg
xchg
mov
sub
mov
mov
or
jle
adc
in
scas
scas
frstor
pop
lods
or
add
mov
pushf
mov
daa
daa
pop
jbe
xor
mov
icebp
sbb
xor
or
xlat
aam
dec
cwtl
fiaddl
pop
jbe
cltd
aas
mov
or
adc
into
loope
jmp
pop
dec
int3
pop
adc
arpl
pushf
rcll
adc
lret
jmp
fsubrs
imul
test
sub
fnstcw
xorb
ds
sbb
or
lds
out
and
jbe
shrb
mulb
mov
inc
xor
popa
outsl
test
sarb
les
mov
add
ljmp
in
pop
sub
jmp
sbb
in
xchg
xchg
cmp
jo
test
imull
ficomps
sbb
cmp
pmaxub
mov
test
add
inc
sti
mov
pop
mov
cmpl
add
lods
pop
mov
jae
mov
dec
shlb
loope
pop
sarb
adc
mov
repz
add
or
mov
lahf
pop
push
pop
xlat
icebp
pop
dec
popa
push
scas
imul
inc
mov
sbb
sbbl
mov
ja
fldenv
mov
pop
shl
xchg
mov
les
ja
jge
inc
adc
xchg
xorb
jae
ss
dec
jle
aas
sub
sbb
js
out
repnz
jecxz
fsubrs
push
xor
ret
cmp
orl
cmp
rcrl
pop
in
or
dec
dec
push
jo
add
aaa
or
pop
insl
jl
jg
inc
into
cld
pusha
int
push
add
lcall
outsl
mov
divl
jl
mov
cmpb
pop
mov
xor
jl
adc
pop
andnps
cmp
lock
adc
out
scas
js
pop
repnz
xorb
xor
mov
popa
sti
stc
das
fcoml
stc
xchg
pop
xor
pushf
lahf
ja
ds
lods
and
sti
lcall
shll
test
jo
pusha
ficoml
pop
ret
rep
adc
das
std
insl
xchg
adc
push
scas
ret
sbb
inc
jb
enter
xchg
ficoml
inc
dec
in
jne
imul
shl
xorl
lret
push
jmp
aam
jns
and
jp
out
mov
sbb
jno
sarl
pop
jne
adc
add
jnp
adc
test
mov
push
call
in
lds
push
mov
fwait
adcb
and
jle
dec
adc
xchg
popa
mov
sbb
mov
push
pusha
ds
sub
mov
inc
ror
faddp
pop
sub
fstpl
mov
or
cmp
sbb
incl
jg
int3
out
sahf
mov
cwtl
add
paddd
xor
shl
pop
add
mov
and
nop
jecxz
jbe
dec
clc
push
mov
inc
mov
rorl
filds
out
inc
push
mov
dec
dec
in
mov
pop
daa
xchg
iret
add
loopne
data16
rol
negb
mov
lods
mov
mov
fldenv
mov
stos
mov
insl
xchg
mov
loope
mov
ret
daa
mov
add
test
or
outsb
sbb
fcmovnbe
adc
outsl
aaa
cltd
icebp
lds
lods
adc
inc
mov
movsl
xchg
lret
shrl
xchg
fldt
imul
dec
xor
loopne
sbb
push
mov
xchg
mov
ljmp
inc
in
xchg
jl
pop
test
add
push
mov
ja
xchg
sbb
mov
dec
cmp
and
pop
cld
push
fstpl
pusha
fisubrl
inc
pop
fs
push
cwtl
adc
mov
rcl
aam
jns
test
mov
leave
imul
movsb
loop
shll
loope,pt
mov
pushl
sub
xchg
bound
mov
xchg
push
pusha
push
push
mov
test
sbb
dec
fwait
movb
add
test
loopne
pop
jnp
imul
mov
cmp
int3
fisttpll
pop
int
cmp
mov
cwtl
pop
dec
add
add
dec
mov
loop
push
jo
outsl
xor
jo
out
push
fsubs
ja
mov
mov
cmp
add
inc
pop
add
fmuls
imul
xchg
mov
clc
outsl
push
outsb
shll
sbb
jle
mov
test
jp
xlat
xorl
sub
ficomps
addb
mov
dec
mov
pop
xlat
enter
loop
cs
popf
add
into
test
mov
dec
xlat
stos
push
jae
gs
mov
xchg
repnz
test
aam
pop
adc
lds
mov
xchg
push
push
dec
sub
push
mov
into
dec
push
fnstenv
inc
jb
stc
dec
cmp
stos
inc
stc
scas
cmp
dec
cmp
loope
mov
lock
jae
or
pop
and
inc
stos
repz
mov
xchg
or
push
and
ret
inc
or
in
hlt
sahf
les
out
xchg
jno
add
xchg
sub
test
xor
loopne
xlat
jecxz
push
sbb
loop
fnstenv
ret
mov
data16
xor
test
sub
mov
mov
pop
imul
and
or
push
aam
sbb
lret
sub
sarb
xchg
cli
pcmpeqb
mov
jl
sub
mov
nop
in
in
jmp
push
dec
adc
inc
jnp
inc
stos
add
in
add
xchg
mov
fcmove
fs
jne
out
mov
inc
imul
mov
pop
push
fisttpl
fcmovnbe
hlt
sub
outsb
sti
sbb
and
negb
push
sahf
mov
push
pop
push
or
out
fwait
and
mov
push
dec
pop
cld
inc
fdivrl
fs
push
and
or
outsb
scas
cmp
aaa
add
test
je
cltd
daa
test
push
leave
test
inc
rolb
mov
stos
sar
shrb
js
pop
mov
pop
les
or
pop
pop
sbb
push
scas
insl
stos
fstl
jns
pop
push
insl
push
rcll
mov
mov
xchg
mov
nop
inc
xchg
pop
decl
mov
and
aas
je
nop
mov
fs
scas
lods
mov
ljmp
repz
movsb
mov
lret
add
leave
jnp
iret
adc
push
fstpt
fyl2xp1
jnp
movntps
test
repz
or
add
faddl
dec
jge
mov
jge
xor
mov
jns
sbb
enter
loope
and
jno
jle
enter
and
scas
adc
jl
sub
mov
dec
lods
push
sbb
push
dec
mov
popf
mov
sbb
orb
pushf
jno
and
xchg
jg
pop
mov
cs
ret
dec
std
sub
in
sbb
push
lret
jb
dec
pop
lahf
and
cmp
loope
mov
add
pop
int3
sub
jns
cmp
dec
imul
xor
enterw
xchg
xchg
jnp
jne
mov
adc
pusha
jo
inc
adc
ja
test
movsb
les
mov
dec
cmp
xchg
dec
pop
cmc
int
jecxz
sahf
pop
cmpsl
mov
ret
in
mov
fisttpl
gs
push
cmpsl
ret
fdivl
add
das
pop
ret
aam
leave
daa
icebp
lahf
andb
or
or
mov
imul
loope
cwtl
pop
or
inc
sbb
lock
inc
push
je
pop
outsb
ja
addr16
insb
aad
test
dec
jp
cwtl
out
pop
test
insb
out
lahf
cmp
pop
enter
out
dec
lcall
sbb
jmp
or
in
xor
pop
mov
icebp
shll
inc
test
inc
mov
js
xor
fidivl
jno
in
out
adc
sbb
scas
add
outsb
inc
sub
add
repnz
into
imul
sub
sarl
rclb
data16
add
mov
xchg
sub
mov
ret
cli
daa
pop
inc
push
loopne
pushw
mov
loop
dec
jne
test
xchg
push
jno
pushaw
es
test
out
xchg
add
cmovns
or
lods
dec
shrb
lods
mov
xor
pop
rcr
int3
mov
inc
movsb
pop
fidivs
scas
cmc
adc
data16
pop
insl
mov
xchg
cmp
mov
xchg
pop
push
mov
sbb
adcb
sbb
jno
mov
sbb
shlb
mov
jle
aaa
sub
inc
stc
repz
ficoms
mov
xchg
push
setnp
popf
xchg
mov
les
add
mov
out
insl
mov
or
xchg
sahf
test
cmpsl
sbb
pop
pop
in
mov
xchg
xchg
mov
mov
int3
stos
xor
sub
ja
lods
mov
mov
dec
test
dec
add
repnz
loope
ret
jns
push
push
mov
addr16
insl
mov
sar
mov
jno
lahf
dec
sahf
push
pop
or
out
and
sub
fbstp
std
fs
inc
or
int
xchg
add
into
ja
enter
and
lds
and
movsb
imul
leave
xor
xchg
sbb
into
mov
jbe
push
jmp
std
es
fmulp
sub
pop
shr
cmp
xchg
adc
jae
push
mov
mov
cwtl
das
mov
mov
pop
pop
mov
in
aaa
popa
mov
fnsave
jp
inc
pop
lods
adc
jno
lret
mov
jno
pop
jb
cld
movsl
mov
fmuls
into
in
mov
test
lahf
insb
fistpll
jb
fisubs
dec
inc
xor
leave
xchg
sub
ds
in
out
sub
and
scas
scas
dec
xlat
xor
cmp
or
jns
sub
dec
push
lahf
cmpsl
cmp
xor
mov
xchg
int3
jge
dec
addr16
xor
cmpsb
xor
mov
or
ss
add
adc
insl
mov
lret
jns
out
sub
pop
mov
jno
cltd
inc
or
fcompl
pop
sub
push
xchg
popa
cli
std
loope
repz
ljmp
xor
xchg
and
inc
add
imul
insl
loopne
push
pop
push
leave
dec
xchg
xchg
push
xchg
pop
fs
pop
ret
or
inc
xor
aas
mov
out
dec
popa
cmpsl
push
jl
gs
addb
jl
mov
add
and
sub
push
add
repz
les
shll
push
add
add
lmsw
popl
pushf
fstpt
mov
lcall
cmc
nop
popa
and
insl
ja
inc
nop
and
mov
xchg
pop
pop
les
and
aaa
xchg
sar
in
loop
testl
sub
add
fadds
sbb
pop
xor
jae
or
xor
mov
push
mov
jecxz
pop
and
bound
and
cwtl
push
gs
jmp
pop
fsub
lahf
outsl
sub
jae
push
lods
push
dec
and
lahf
sub
xor
test
jl
in
lret
mov
out
pop
inc
int
iret
enter
jo
lds
aas
sub
inc
test
or
jne
lds
cmpsb
jl
in
je
add
loope
jecxz
scas
jns
lret
adc
mov
icebp
adc
and
jmp
mov
and
dec
pop
repnz
cmc
xchg
gs
dec
fcmovnu
add
xor
je
das
jmp
xchg
fidivl
dec
or
ret
adc
or
addr16
sub
pop
cmp
push
rclb
mov
dec
rcl
mov
adc
fwait
es
test
cmpsb
mov
pop
pop
sub
add
push
mov
fcomps
insb
pop
mov
lretw
shll
mov
repnz
dec
icebp
pop
scas
bound
shrb
pop
fadds
test
test
fiadds
jg
stos
jg
iret
and
sahf
or
adc
mov
xor
sbb
mov
push
or
pop
xchg
jecxz
or
scas
lahf
sub
or
daa
add
jbe
inc
out
fbstp
aad
shlb
imul
xchg
fsubp
int3
jo
insl
shll
jl
movsb
loop
mov
in
push
jae
arpl
and
or
int3
xchg
push
je
or
mov
dec
jae
stc
sbb
ds
add
in
xorps
adc
clc
push
insl
call
stos
shll
in
inc
popf
xor
ret
ds
dec
addr16
adc
scas
mov
xchg
arpl
int3
subl
test
lret
loop
jp
roll
popa
xchg
insb
mov
in
dec
xlat
subl
and
xchg
add
rdtsc
clc
jno
xchg
xchg
xchg
movsl
aam
fdivrs
std
sbb
sub
nop
jp
add
lods
xchg
xchg
sub
shl
imul
test
hlt
cmp
push
not
cmp
fsubrp
xor
mov
movsl
xchg
and
shr
mov
xchg
subb
push
popa
stc
pop
pop
pop
insl
cli
stos
sub
pop
dec
xlat
nop
cmp
cmpb
jns
clc
insl
sub
adc
pop
xorb
gs
scas
dec
sbb
aam
out
and
ja
and
stos
scas
fildll
jp
iret
idivb
lahf
push
ja
fs
cmp
sub
inc
jae
sbb
push
stc
cmpsl
jne
push
or
and
daa
and
aaa
pop
jmp
xchg
pop
test
arpl
or
mov
daa
adc
lcall
dec
pushf
cmpsl
pop
xchg
lret
sahf
inc
js,pn
xor
mov
arpl
mov
pop
cmp
jmp
dec
dec
jo
daa
add
lret
mov
mov
mov
gs
adc
pusha
insl
movsb
decb
jl
xlat
cmp
ds
push
shll
pop
fbstp
or
stos
jbe
jbe
pop
shld
xor
setae
cmp
jno
or
add
test
adcb
fstl
push
jb
and
adc
cmp
leave
or
jae
aas
dec
mov
and
rcrl
add
loopne
loopne
sbb
ja
push
adc
ret
fnstsw
mov
dec
cmp
stc
xlat
ret
mov
mov
div
and
xchg
ds
daa
mov
repnz
out
inc
into
pop
xor
pop
int
mov
push
sub
lea
lock
rcrb
push
xor
sub
fnsave
mov
jnp
sbb
or
pop
cmc
jo
loope
and
adc
cmp
ja
xchg
popa
nop
mov
rcl
hlt
add
and
cmp
nop
bound
xchg
push
xlat
arpl
std
push
aad
sbb
fisubrl
xchg
cmpsl
dec
out
dec
outsl
iret
lret
popf
cld
scas
add
cmp
shlb
and
scas
inc
ror
mov
inc
or
push
sti
or
xchg
dec
cmp
sar
test
push
aaa
loopne
enter
mov
movsl
sbbl
lds
out
arpl
dec
js
bound
sub
ds
scas
pop
insl
pop
insb
cli
sub
dec
mov
sub
xor
mov
dec
fstl
mov
jp
inc
outsb
mov
test
aaa
push
mov
leave
in
dec
mov
jmp
adc
pop
xor
and
mov
dec
push
ss
lods
mov
pop
lea
scas
pop
cmp
lods
xchg
mov
xchg
aam
call
bound
lds
add
mov
int
cmp
jns
push
test
pop
adc
dec
ficoml
imul
adc
sub
inc
popf
or
push
xorl
sarb
ljmp
xchg
ljmp
mov
jp
les
aas
xchg
sti
jb
pop
insl
stos
or
ret
sahf
fimuls
fnstenv
pusha
mov
fwait
push
enter
adcl
loope
add
add
mov
ljmp
sub
adc
lea
test
cmp
pop
dec
cli
scas
aas
push
lock
int
xchg
and
repnz
daa
fnstsw
mov
shl
pop
shll
cmpsb
lods
ficoml
inc
add
stos
push
lcall
mov
roll
mov
or
mov
clc
repnz
mov
jbe
sahf
dec
or
cs
ficomps
pop
subl
sbb
cwtl
sbb
rorb
ss
pusha
imul
and
lods
fidivrl
les
xchg
es
inc
adcb
hlt
bound
dec
pop
aam
xchg
les
jge
ja
addb
outsl
add
jne
cltd
mov
addl
mov
jge
test
jns
clc
sbb
notl
stos
mov
or
lods
cmpsl
cmpsb
movl
jns
or
xadd
frstor
loop
sbb
lahf
push
push
in
icebp
xbegin
shrb
add
adc
fstl
iret
stos
imul
nop
call
pop
or
pusha
pop
inc
mov
adc
push
leave
stos
cmpsb
lods
jmp
fs
test
mov
xor
inc
sbb
jmp
iret
lods
and
add
add
mov
or
out
inc
sub
pop
pop
daa
fsubrs
adc
jo
mov
cmp
mov
pop
push
int
out
movsb
pushf
test
dec
aad
int3
or
sub
cmp
add
stos
sbb
icebp
or
inc
adc
pop
bound
cmpsl
push
rolb
adc
cmp
sub
dec
inc
ljmp
popf
push
or
adc
rcll
pop
sub
mov
aaa
mov
mov
out
xor
fisttpll
js
xchg
mov
xchg
lods
mov
dec
xor
xor
bnd
in
inc
clc
sub
xor
mov
jl
pusha
pushf
sahf
loopne
fsubs
or
add
push
aam
jb
cmpsl
mov
inc
cli
cmp
mov
mov
sbb
and
cs
mov
xchg
ljmp
cli
ja
aas
iret
add
ret
fistps
lock
ret
xor
push
in
mov
jae
int
fists
dec
divb
lcall
pop
in
xchg
lahf
xor
xchg
sti
pop
call
cli
je
js
dec
jb
pop
inc
add
pop
xor
sbb
mov
aam
rcrl
fbstp
fyl2x
loope
add
mov
mov
cs
adc
or
lods
cltd
pop
test
lods
lret
jg
push
pop
out
in
xchg
sbb
add
xchg
or
push
adc
jae
es
mov
lret
dec
push
add
mov
leave
aad
push
add
rolb
xor
dec
into
out
imul
or
les
sbb
mov
enter
out
daa
inc
inc
mov
stos
mov
fwait
jno
jp
mov
mov
add
shr
adc
mov
sbb
fidivrs
and
jle
cltd
mov
cs
mov
dec
dec
mov
mov
in
mov
test
push
inc
inc
lods
fbld
aas
je
out
lock
hlt
mov
xor
dec
sub
jg
lods
aam
sarb
cs
int3
insb
adc
imul
inc
cli
dec
enter
in
bound
cmpsb
and
mov
das
into
out
out
aad
sbb
testl
dec
pop
lcall
cmpsl
mov
inc
stos
lahf
push
pop
sub
and
pop
nop
test
cmpsb
cwtl
fwait
int
xor
mov
mov
dec
sahf
and
int3
mov
pop
inc
cmpsl
jns
mov
int3
and
push
cmp
pop
or
out
repnz
lret
jecxz
push
movsb
inc
setno
cmpsl
mov
cltd
cwtl
sti
push
pop
rorb
arpl
pop
out
das
ds
mov
test
mov
mov
pusha
imul
mov
insl
jnp
mov
lds
mov
aam
loope,pn
mov
cmp
push
test
xor
xchg
dec
push
cmp
cli
cli
das
ret
xor
xchg
push
lock
inc
gs
mov
pop
xlat
ljmp
push
popf
cmc
mov
mov
int
and
push
notb
fcomp
dec
js
or
and
ds
lods
inc
mov
dec
imul
jp
xor
test
push
sbb
mov
out
clc
xor
xchg
xor
rcrl
xor
push
ret
aam
push
notl
jno
out
cmpsb
into
rcll
sub
sub
dec
aas
leave
add
lds
mov
and
cmp
mov
dec
cld
jns
or
adc
mov
stc
mov
movsl
push
or
les
xlat
sub
rorb
sub
addr16
call
mov
in
mov
daa
out
pop
sbb
xchg
sub
insb
movsb
ljmp
or
call
daa
mov
scas
dec
pop
jo
sub
xchg
sbb
popa
ljmp
imulb
mov
fbstp
lea
ret
popa
rolb
cli
push
dec
add
andb
shl
pop
adc
mov
pushl
pop
or
or
ror
leave
insb
sbb
scas
and
xchg
call
stos
dec
clc
dec
addr16
pop
xchg
mov
xchg
push
adc
adc
dec
lea
jb
mov
aas
mov
jbe
divl
mov
push
dec
pop
cmc
and
xor
mov
mov
xchg
xchg
into
adc
inc
mov
dec
pusha
add
mov
cmp
jecxz
repz
sub
xlat
inc
ljmp
add
test
cmc
add
lock
icebp
and
push
mov
popa
and
or
sbb
push
fdivrl
sbb
mov
mov
stc
sti
lds
in
in
les
fdivl
shlb
xor
cmp
movsb
mov
inc
sbbl
jmp
adc
mov
out
jb
ss
dec
ljmp
outsl
jb
jne
mov
sub
cmp
push
sbb
jecxz
push
loopne
mov
test
shrb
sti
stc
fmull
daa
sbb
movsb
in
lea
sbb
ja
push
lret
dec
cmp
add
int3
jne
dec
jo
pop
cli
push
lods
push
jo
push
adc
inc
call
add
insl
lret
frstor
xchg
mov
mov
imul
dec
dec
mov
push
jnp
shll
add
fsubrs
adc
and
adc
movsl
sbb
push
dec
insl
mov
mov
ja
mov
mov
lcall
push
sub
push
std
int
ret
insl
adc
pop
sbb
jmp
test
xchg
jae
cwtl
mov
mov
cmp
pop
adc
xlat
mov
mov
and
aad
adc
hlt
sub
fistps
mov
lea
fnclex
pusha
sub
addr16
push
mov
xchg
ds
and
outsl
mov
loop
fildl
push
adc
mov
sbb
movsb
shll
pop
adc
mov
pop
push
mov
fldt
in
loopne
mov
int
sub
inc
sbb
in
fwait
xor
xchg
jbe
cmp
fsubrl
outsl
add
mov
xchg
pop
cmp
cmp
scas
add
pushw
mov
mov
ds
dec
jno
jp
mov
xchg
sti
sub
cmp
push
cmp
imul
mov
rcrb
mov
cmp
fldcw
inc
clc
or
popf
cs
in
imull
dec
icebp
scas
lods
pop
lds
and
and
insl
adc
out
mov
sub
inc
repz
pop
scas
jp
int3
xlat
fistpl
movsb
das
insl
je
mov
pop
xor
jp
cmp
mov
subl
fdivr
les
das
pop
xorb
inc
sarb
inc
inc
jne
into
mov
ss
divb
lds
dec
testb
test
dec
imul
push
fldl
ja
mov
push
pusha
mov
lahf
push
hlt
rcr
iret
and
movsb
in
sbb
push
dec
xchg
xlat
roll
adc
les
hlt
popa
mov
scas
shl
adc
add
fldt
ret
pop
adc
mov
scas
mov
lea
in
mov
int3
pop
aas
outsl
stc
lea
pop
jns
or
dec
enter
test
xchg
push
outsl
adc
int
and
xchg
mov
shlb
in
ljmp
leave
out
ljmp
inc
jmp
ret
mov
mov
adc
out
inc
sbbl
enter
lret
adc
shll
dec
ja
in
sbb
bound
fbstp
jle
mov
push
and
cmpsl
jg
adc
aad
les
dec
pop
and
jmp
sbbl
movsl
or
adc
ret
ret
cmc
daa
pop
sbb
mov
testl
mov
xchg
orb
incl
sarb
adc
movsb
lods
insb
sub
push
testl
and
sub
pop
sub
std
adc
hlt
psrlq
cmc
sarl
cmp
xor
cld
orl
adc
into
leave
mov
cmpl
mov
mov
repnz
mov
xor
jp
repnz
aam
test
negb
mov
dec
cmpsl
push
addr16
in
arpl
icebp
cs
icebp
push
cwtl
imul
out
jae
sahf
xor
and
ret
add
mov
cmp
or
enter
mov
ret
bound
int
jp
dec
jnp
fisubrs
xor
cmpsb
dec
xchg
mov
xchg
fucom
test
fimull
testl
push
jnp
or
xchg
and
inc
cmp
scas
xchg
xchg
dec
pop
jne
ret
fcmove
adc
mov
push
stos
imul
lock
pop
int
stos
das
js
bound
cmovl
shl
xchg
mov
inc
mov
mov
inc
cld
repz
xchg
pop
aad
or
sbb
loope
mov
int3
clc
cwtl
lret
fldl
imul
mov
faddl
adc
inc
int
mov
add
aaa
fcmovnu
xchg
add
adc
imul
cld
int
daa
or
push
into
fdivs
sub
jmp
loope
ss
test
push
nop
ljmp
test
stc
je
adc
xchg
mov
add
gs
ds
lds
sbb
jns
fadd
jl
pop
jb
xchg
in
sbb
shll
push
pusha
mov
mov
xchg
outsb
ss
lcall
shrl
fdivr
mov
jb
sti
jge
mov
xchg
movsb
lods
setbe
jge
sub
xchg
stos
andl
aas
lahf
adc
imul
lods
inc
cmpxchg
pusha
or
jno
icebp
ret
lock
dec
mov
or
jnp
sti
mov
sub
mov
cmpsl
pop
jae
fisttpl
addr16
out
nop
es
addr16
jns
pop
sbb
mov
and
scas
mov
mov
jae
mov
lods
xchg
scas
pop
or
dec
fcmovbe
mov
pop
mov
inc
pop
lcall
int
jmp
cmp
loope
inc
mov
sahf
imul
std
inc
add
testl
into
xchg
cmp
pop
pop
fcompl
ret
cmpsl
cmp
loope
cmpsb
cmpsl
and
lds
call
pop
mov
jecxz
mov
movb
inc
dec
test
jbe
jae
mov
mov
xlat
leave
adc
movsb
push
insb
xor
lcall
fistps
xor
jnp
add
jmp
xchg
arpl
xchg
xchg
xor
jbe
push
js
jmp
test
repz
sub
pop
loope
repz
add
in
test
xor
sbb
or
dec
jae
inc
ss
pop
lods
sbb
pusha
mov
xor
jge
sub
aad
pop
inc
xchg
test
call
inc
fcompl
mov
jb
pop
push
mov
mov
lods
mov
jns
dec
sub
stos
ss
dec
in
and
or
and
or
adc
cltd
or
sub
jle
nop
arpl
dec
aaa
aam
aad
repnz
mov
adc
inc
lock
push
and
pop
test
stos
and
jo
adc
and
sub
inc
adc
or
aaa
lahf
and
insb
mov
aas
adc
xchg
pop
scas
movsl
pop
mov
xchg
cli
mov
jb
pop
jo
xor
or
jnp
xor
es
adc
adc
scas
push
test
mov
jle
imul
mov
xor
jl
or
cmc
mov
scas
jo
inc
negl
movsl
sbb
addr16
stc
push
rorb
sti
jbe
cmpsb
pop
add
push
sub
loopne
jns,pn
insl
cwtl
sbb
adc
sbb
xchg
fstpt
mov
ret
cmpsb
ss
repnz
xchg
rorl
xor
jle
pushf
xor
aad
xor
mov
inc
out
aaa
ret
xchg
xchg
xchg
and
idivl
in
and
mov
daa
or
lahf
lods
jge
clc
mov
pop
cli
sahf
es
test
out
adc
rclb
and
icebp
stos
sub
lock
adc
stos
leave
sub
push
add
ljmp
pmaxsw
dec
lock
sbb
xor
dec
test
xchg
xchg
pop
frstor
jl
sub
xor
addb
sub
jmp
and
ret
fists
loop
popa
cmp
int3
iret
out
sbb
mov
lcall
mov
jg
cld
ljmp
xor
stos
lcall
cmc
xchg
pop
mov
repnz
in
ss
pop
popa
fidivs
fiadds
pop
into
lret
lock
dec
std
fdivp
stc
les
pusha
cmp
nop
dec
xchg
sbbl
loop
pop
sarb
jnp
les
int
das
cmp
sub
hlt
cmp
adc
add
mov
fcomi
clc
vmwrite
jns
pop
push
xchg
cmc
std
jmp
addr16
mov
aad
call
movsl
push
adc
js
mov
or
and
int
jo
cmpsl
xchg
jns
iret
or
fnstsw
mov
dec
jge
cld
or
sbbb
push
mov
mov
pop
jg
xor
out
mov
loopne
mov
jmp
mov
sbb
jmp
aaa
xchg
pop
sbb
sbb
mov
xor
les
pop
xlat
fs
repnz
bound
inc
jne
sub
fsubs
jecxz
mov
sbb
mov
mov
adc
outsl
call
testb
in
xor
sbbl
popa
movsb
mov
xlat
push
leave
cmp
sbb
push
jle
mov
sbbl
jbe
xchg
int
das
test
jo
sub
bound
xor
xchg
push
xchg
adc
and
lahf
push
mov
push
cmpb
or
sbb
mov
arpl
enter
xchg
lahf
xchg
pop
sbb
call
stos
ljmp
adc
mov
adc
lods
pusha
pop
or
jmp
fs
add
push
dec
pop
push
enter
testl
or
movsb
notl
iret
dec
fwait
and
jmp
sub
or
aaa
cmpsb
iret
insb
xor
push
movsl
adc
xor
sbb
in
inc
ss
adc
jecxz
mov
sahf
add
xchg
scas
daa
imul
enter
mov
xor
insl
sbb
pop
push
mov
inc
nop
dec
inc
aas
jmp
int3
or
mov
mov
add
xor
sub
imul
pop
jecxz
dec
popa
dec
mov
testl
mov
bound
push
mov
jmp
adcl
cmp
fistpl
add
xor
or
lods
insl
test
nop
or
mov
sbb
mov
xchg
out
or
test
jl
cmpsb
in
fimuls
pusha
dec
cltd
push
xchg
sbb
adc
icebp
pop
test
mov
pop
lret
aas
cmpsb
movsb
or
test
out
sbb
rcll
jle
sbbl
cmp
adc
ret
xchg
test
mov
cmc
pop
lds
jae
mov
leave
mov
adc
jp
addr16
sub
xchg
mov
popa
ret
jno
cmp
cld
jp
or
pop
sub
addb
into
xor
movsb
xchg
in
jecxz
imul
push
jbe
stos
and
sub
movsl
fs
push
add
sbb
cmc
hlt
add
jae
dec
sbb
mov
not
inc
jnp
lods
mov
add
imull
test
mov
dec
and
inc
je
mov
xlat
aam
leave
ja
ja
data16
das
iret
and
cmc
jnp
in
push
ds
sbb
mov
in
js
inc
mov
loope
xchg
xabort
mov
push
cmp
inc
sbb
mov
mov
ljmp
xchg
test
outsb
xchg
loope
adc
les
lods
mov
xor
cwtl
dec
jns
sbb
jae
in
jp
rolb
insb
adc
adcl
and
sbb
shl
imull
push
stc
add
adc
jnp
lods
mov
mov
pop
ucomiss
xchg
xor
xor
jmp
ja
insl
sub
in
pop
push
cmc
cmp
aaa
pop
or
jp
mov
sbb
and
inc
sub
inc
sti
ljmp
and
in
adc
sbb
mov
cli
mov
test
xor
and
cs
ja
xor
negl
mov
dec
into
xor
roll
stos
mov
test
jno
fistpll
mov
xor
enter
xor
sbb
jecxz
ret
mov
or
into
sti
scas
mov
loope
jecxz
cmp
test
mov
pusha
aaa
xor
jl
gs
or
fmul
gs
jnp
movsl
roll
cmpsl
sahf
push
cmp
mov
inc
xchg
and
and
xchg
aad
jo
sbb
sahf
enter
push
fidivrl
bound
in
sub
out
frstor
push
movsb
adc
jns
mov
dec
mov
mov
lret
pop
lret
cmp
xchg
ss
or
cwtl
enter
jp
inc
loope
inc
sbb
out
mov
push
shl
push
pushf
fsubrl
or
mov
xor
test
xorb
mov
loopne
cltd
push
dec
jp
popf
xchg
pop
gs
xlat
push
lret
dec
stc
movsl
arpl
cwtl
sbb
or
and
xchg
test
jo
pop
ljmp
fstps
ret
inc
mov
pop
loop
jg
popa
scas
fists
cmpsb
fbstp
and
fiaddl
dec
xchg
scas
mov
cmp
mov
mov
xchg
jecxz
adc
aam
test
inc
sahf
or
test
and
or
add
lahf
sbb
add
cmp
cwtl
dec
aas
cmpl
jge
out
test
dec
dec
test
or
adc
shrl
or
mov
rolb
data16
scas
pop
out
or
sbb
aas
jbe
jecxz
jecxz
jo
sub
popa
adc
dec
xchg
clc
arpl
xchg
icebp
xor
dec
movsb
lods
pop
hlt
aam
std
scas
js
lods
xchg
xor
sbb
insb
shrl
jmp
test
cmpsl
daa
fmul
xchg
arpl
ret
sti
jbe
push
test
shl
pusha
mov
out
out
into
es
pop
repnz
test
jecxz
sub
push
dec
fdivl
lcall
adc
mov
jb
jno
jb
or
mov
cmp
cmp
and
fmulp
ds
adcb
into
jl
jb
or
adc
ljmp
push
add
sahf
out
incl
pop
pop
add
jg
sahf
loop
xchg
xor
pop
inc
or
dec
js
pop
rcrb
inc
inc
out
add
dec
aad
aaa
popa
hlt
xor
xchg
es
leave
jle
ss
aam
xchg
xor
stos
adc
fwait
xlat
ret
sub
lret
mov
movsb
mov
call
mov
insb
jmp
dec
pop
xchg
xor
xchg
xchg
pop
push
lods
gs
movsl
mov
xrelease
adc
das
bound
test
dec
ds
sbb
adc
ja
pop
mov
adc
cmp
push
mov
jns
add
out
movsb
mov
int
lea
not
xchg
insl
mov
pop
dec
pop
or
push
es
pop
mov
sarl
dec
fcomi
nop
fs
dec
call
mov
addb
sub
xchg
sbb
mov
clc
imul
mov
mov
leave
out
pop
mov
ss
repz
mov
leave
jbe
or
stos
inc
lods
xor
jp
loopne
in
out
addr16
js
dec
add
cli
push
add
out
mov
bound
mov
adc
cmp
nop
mov
sbb
add
pop
aad
mov
jnp
xor
mov
add
dec
bound
outsb
xchg
mov
or
outsl
mov
fists
pop
sbbl
andl
lahf
icebp
jmp
and
pop
mov
pushf
std
xchg
lds
je
jecxz
pop
mov
gs
jns
or
mov
mov
and
push
loope
fcmovnbe
push
shll
in
xor
insl
out
mov
mov
mov
pop
add
mov
or
jg
pop
jg
sarl
add
jno
sub
aad
dec
push
fcmovnu
cmp
rcll
test
mov
enter
movsb
inc
cs
mov
arpl
negl
jnp
and
xor
push
pushf
push
mov
outsl
cmp
add
lahf
push
inc
ja
pop
pop
and
sbb
mov
jge
lds
push
dec
clc
je
sbb
test
out
sbb
fisttpl
imulb
push
jae
ret
add
adc
cwtl
call
adc
in
pushf
pop
jno
pop
pop
jae
inc
xchg
stos
sbb
or
or
popf
mov
in
jmp
enter
jne
into
sub
insb
fwait
out
addr16
rorl
iret
mov
cmp
jns
lahf
out
or
sahf
push
jne
mov
pop
and
dec
cmc
out
jle
lahf
cmp
aas
popf
push
push
and
push
fdivl
xchg
mov
push
lods
dec
or
mov
rcl
pop
fiadds
adc
push
jmp
aam
xchg
push
inc
outsl
addl
jnp
xchg
jbe
dec
mov
inc
aad
cs
adc
cmp
jnp
or
enter
mov
and
lret
push
pop
cltd
fdivrl
cli
cmp
out
jb
cli
or
jp
cmpb
out
int
xor
mov
aaa
sbb
ret
daa
xchg
loopne
ficomps
testw
cmp
xchg
pop
pushf
sti
inc
shrl
sub
arpl
outsl
dec
test
cmpsl
popf
push
pop
or
stos
or
xor
sub
movb
add
call
out
rorb
pop
ja
call
jmp
push
loope
push
and
jne
or
inc
jnp
sbb
pop
xchg
dec
xor
or
mov
lea
add
or
sbb
cli
xchg
stos
cltd
inc
inc
mulb
aas
sub
popa
das
fdivrl
test
test
mov
mov
hlt
jno
push
mov
and
int3
repz
in
lcall
imul
rcr
sti
jne
popf
ret
daa
gs
cmpsl
push
ljmp
rol
or
and
testl
fidivrl
incl
or
arpl
out
cmp
out
mov
cmp
add
pop
push
xchg
inc
jne
add
sub
popa
fstpl
popf
mov
cmp
jl
loop
bound
or
shl
or
jb
cmp
into
xchg
test
dec
xchg
imul
or
leave
push
sub
ror
out
rcr
inc
sub
clc
cmpl
or
bound
jmp
rcrb
mov
into
jl
mov
push
gs
adc
pop
adc
lahf
cs
faddl
jmp
sbb
cmp
add
sti
jne
cld
jge
inc
ljmp
jl
jle
xchg
ret
out
jg
das
ljmp
cld
pop
xchg
lods
xchg
aas
or
shll
popa
rorb
mov
in
ljmp
mov
cmp
mov
dec
mov
bound
mov
hlt
test
mull
mov
lods
push
lods
mov
out
jae
ret
push
mov
dec
out
or
call
out
add
daa
inc
mov
out
out
xor
push
call
daa
mov
lahf
aad
pop
loopne
and
js
add
das
mov
gs
pop
pop
dec
int
sbb
pop
int
cwtl
push
repz
or
push
cmp
mov
std
or
aad
sub
int
dec
outsl
icebp
push
lock
fstps
arpl
xor
fidivs
dec
cmp
mov
inc
jns
clc
xor
es
push
pop
lods
mov
cmp
inc
mov
add
jno
push
cmp
inc
sbb
daa
cld
ret
and
out
aaa
mov
jmp
cltd
mov
test
adc
inc
lfs
xchg
daa
out
lcall
dec
ret
test
or
ret
mov
jg
aas
pop
in
mov
fs
adc
andl
mov
pop
fs
loop
pop
cmp
idivl
ret
adc
lret
and
sub
mov
mov
mov
mov
int3
jo
pop
loope
or
test
mov
fwait
addb
dec
outsb
dec
mov
add
jp
add
and
call
cmpsb
mov
sahf
adc
dec
fsub
adc
fcmovu
xorl
cltd
fstpl
rorl
xor
cwtl
push
js
xlat
mov
stos
test
loopne
popa
xchg
out
jo
push
lock
mov
ja
adc
xchg
push
inc
pop
or
and
adc
xor
fbld
dec
pop
das
sbb
xchg
or
mov
cmp
adc
pop
mov
xchg
xor
movsb
rclb
fsubrs
and
mov
adcl
out
mov
sub
test
out
aad
mov
lds
dec
in
xchg
or
and
jb
inc
sub
or
loop
push
jne
ror
out
das
mov
ret
cmpsb
inc
int
pop
hlt
aas
in
hlt
and
sti
cmp
mov
mov
mov
mov
popf
jnp
fisttpl
sbb
dec
jnp
adc
in
arpl
mov
lcall
scas
mov
sti
mov
xchg
xchg
dec
out
iret
dec
into
jg
sub
outsb
loope
cmp
xlat
mov
sbb
push
aas
outsl
stos
jmp
mov
pop
push
pop
ret
and
imul
test
or
dec
rcl
shlb
test
jno
adc
pop
adc
test
lret
scas
outsb
jo
fimuls
sar
orb
adc
test
sahf
push
inc
push
out
bound
pop
add
nop
mov
incl
inc
mov
and
push
cmp
mov
iret
insb
and
movb
and
cmp
adc
mov
xchg
fimuls
leave
enter
xchg
lahf
pop
mov
mov
push
jg
hlt
or
dec
repnz
aad
inc
fcompl
jbe
pusha
aaa
mov
bnd
push
pop
nop
ret
xor
jmp
mov
incl
clc
inc
mov
mov
mov
idiv
into
mov
scas
jno
ret
in
out
add
mov
aad
pop
out
fidivl
arpl
or
cmp
jge
je
sub
jp
jnp
fs
sub
mov
add
call
cs
and
jnp
bound
pop
hlt
xor
jb
lret
or
cmp
in
add
jns
les
dec
jge
jle
lods
mov
ds
mov
and
mov
mov
xchg
cmpsl
add
addl
cli
push
and
xchg
dec
sti
out
mov
daa
pop
push
adc
sbbl
ja
mov
adc
mov
mov
mov
cli
or
out
aam
test
mov
inc
scas
stos
inc
mov
rol
and
pop
std
dec
std
out
jl
add
xchg
jge
lds
shr
popa
push
add
mov
jmp
xor
jns
mov
or
andps
pop
fimull
add
add
xchg
jnp
add
lcall
loopne
inc
sub
unpckhps
mov
push
inc
adc
pop
add
cmp
pop
fistps
ja
into
cltd
mov
lock
in
in
popf
mov
cmp
je
rolb
insl
js
xchg
lahf
pusha
xor
jmp
and
lret
lods
stos
pop
mov
jl
sbb
and
jae
mov
sub
leave
xor
inc
imul
inc
add
mov
data16
into
int
push
push
idivb
js
or
jecxz
mov
leave
jno
mov
fisttpl
aaa
mov
arpl
pop
push
ffreep
pop
iret
je
push
scas
inc
int3
jmp
add
rcrb
cmp
in
mov
enter
and
out
flds
inc
ljmp
out
cmp
add
mov
test
push
xor
dec
inc
aas
jmp
wbinvd
mov
jle
imul
stos
push
mov
mov
xchg
fdivr
jg
jp
jl
test
xor
or
lock
mov
out
jge
xor
mov
push
arpl
es
mov
pop
xchg
inc
mov
pushf
icebp
popf
mov
sub
mov
jl
fcoml
loopne
push
adc
fcompl
sbb
jbe
jb
jb
sub
in
adc
addb
adc
stos
push
lods
dec
and
inc
es
iret
fdivrs
shlb
dec
mov
sbb
inc
loope
lds
push
out
jge
push
sbb
mov
add
inc
int3
mov
mov
sub
cld
mov
ret
push
mov
bound
fistps
push
aaa
fildll
mov
sbb
push
int
push
or
lret
movsb
and
jle
mov
cmp
pushf
cmpsl
dec
shlb
pusha
pushf
pop
adc
push
push
jae
inc
inc
pop
push
add
aaa
movl
add
add
scas
ja
inc
mov
out
adc
pop
inc
mov
push
into
cmpsl
adc
pop
pop
sbb
jl
mov
xor
lods
test
shlb
jne
adc
divl
mov
inc
call
pop
mov
push
xor
xchg
aad
sub
rcrb
lret
push
std
cli
in
scas
aaa
adc
call
mov
adc
push
and
mov
mov
mov
mov
lds
int3
mov
sbb
fidivs
mov
clc
mov
out
daa
sbbl
shl
xlat
sahf
add
adc
inc
push
xor
call
mov
jae
adc
xchg
test
aaa
pop
xor
adc
push
cmpsb
and
dec
push
xor
push
mov
inc
mov
mov
in
lods
jbe
xchg
mov
out
mov
int
dec
push
inc
cmp
dec
cwtl
pop
mov
roll
mov
nop
adc
dec
xchg
inc
and
call
push
mov
push
pushf
mov
mov
clc
bound
int
pop
jne
frstor
ss
lea
iret
pop
in
rorl
leave
or
push
pop
or
gs
repz
movsl
lahf
cbtw
sub
dec
mov
je
mov
out
scas
jns
das
or
bound
jbe
sbb
aad
jmp
test
add
mov
push
shll
shl
push
test
cmp
test
mov
dec
xchg
jp
ljmp
lahf
jbe
je
cld
add
sbb
repz
jl
outsb
sub
lds
xor
in
lahf
inc
push
push
sub
shl
jecxz
repnz
sbb
decl
inc
mov
pop
add
ja
sbb
mov
mov
add
ss
add
sbb
pop
push
pop
add
fcoms
mov
and
xor
jne
loopne
mov
lods
sub
pop
push
add
and
mov
loopne
pushf
fisubs
enter
mov
imul
arpl
ret
adc
sub
bnd
dec
sbb
and
dec
gs
push
jns
or
sub
xor
mov
jle
mov
pop
int
jecxz
aaa
nop
subl
sbbl
in
jle
into
ret
xor
cmp
popf
stc
lea
cld
stos
into
decb
lock
loop
jo
and
sbb
movsb
rcll
insl
mov
sub
push
int3
fmuls
cmpsl
pop
inc
and
xor
insl
cmc
lods
andl
add
loopne
sub
or
sti
pop
fnsave
outsb
into
std
roll
mov
in
fisttpll
ja
mov
dec
adc
xor
or
adc
arpl
inc
or
mov
pop
inc
sbb
or
sbb
pop
mov
sub
mov
sbb
test
adc
mov
push
and
or
outsl
mov
pop
push
in
sarl
icebp
adc
out
pop
rclb
xor
test
pop
gs
jmp
fiadds
inc
mov
sbb
std
sub
add
addr16
insl
dec
js
add
in
cltd
loop
out
add
les
push
daa
or
into
movsl
xor
and
and
fwait
daa
daa
data16
mov
adc
sbb
jecxz
jmp
jns
arpl
mov
lahf
xchg
xor
cs
fdivl
adcl
mov
jg
mov
shlb
xor
and
pop
mov
popa
mov
xor
inc
es
mov
fwait
mov
movsb
jbe
ficoml
sub
jno,pt
mov
ja
push
fstl
roll
psadbw
js
push
sub
or
xor
out
dec
jb
mov
push
in
add
adc
mov
dec
sarl
das
push
mov
popf
pop
and
add
rclb
push
sbb
or
sub
fsts
xchg
and
and
jmp
in
call
or
pop
sbb
mov
lret
in
ss
adc
std
fstps
movsb
das
scas
xchg
into
fsubrp
inc
popf
xchg
inc
pop
fnstenv
sbb
mov
push
fstl
fnsave
push
mov
loop
ret
dec
idiv
inc
jns
jb
shll
out
push
cwtl
dec
pop
cli
xor
mov
cmpsl
int3
mov
jbe
loopne
sahf
into
fmuls
cld
or
sub
and
clc
icebp
mov
addl
in
sbb
daa
fldcw
inc
sub
jp
xchg
sahf
cld
out
or
xchg
push
test
ret
xchg
or
into
cmp
push
ret
and
mov
or
mov
add
inc
and
adc
adc
sbb
arpl
cmp
jae
adc
int
outsl
pop
dec
mov
mov
je
jb
cmp
fisubl
jae
cmp
dec
ja
gs
push
sbb
call
roll
popa
rcrl
or
jl
or
push
and
pusha
lahf
xor
xor
stc
insl
inc
xorb
ss
pop
dec
mov
shl
dec
or
movsl
jne
cmp
inc
jl
into
loope
test
add
jmp
inc
cmp
pop
cmc
roll
pop
xchg
ja
shll
mov
sub
xchg
out
or
mov
ja
jb
lret
inc
inc
cmp
add
cltd
or
addb
and
sarl
jge
mov
sbb
or
in
std
addr16
call
cmp
out
mul
adc
rclb
push
xchg
aam
xchg
filds
jo
fnop
xor
iret
mov
mov
outsl
ss
nop
fsubr
addr16
lock
enter
pop
jbe
pop
lret
sub
mov
mov
dec
jecxz
sti
jmp
push
imul
mov
iret
add
adc
mov
into
aas
mov
adc
and
mov
push
fnstsw
int3
rcll
loope
or
jmp
lods
lcall
mov
or
xor
push
icebp
stos
and
mov
inc
sub
pop
add
jns
or
mov
and
sbb
pop
mov
data16
fldenv
enter
pop
or
cmp
mov
and
outsl
movsb
dec
movsb
and
imul
jmp
add
mov
add
xor
dec
and
pop
mov
dec
ret
stos
repnz
jecxz
call
mov
pop
mov
xchg
stc
mov
into
shlb
cwtl
arpl
push
lods
cs
roll
popa
xchg
fwait
dec
add
js
or
sbb
sbb
das
and
nop
shlb
mov
insl
inc
stos
ret
negb
jmp
out
add
aad
add
cmc
jp
sub
rclb
ret
dec
mov
jge
adc
out
lret
xchg
push
ljmp
add
sub
leave
mov
push
test
lahf
js
ret
imul
fidivrs
cwtl
sub
jnp
and
loopne
iret
jp
sahf
cmp
andl
in
jnp
cld
jmp
ficoml
gs
push
in
jne
cmp
mov
outsb
arpl
or
xor
imul
sti
aaa
adc
mov
out
clc
cmp
fnstcw
fnstenv
push
mov
push
pop
pop
dec
mov
lret
mov
add
inc
jmp
rcrb
adc
sub
mov
ror
mov
out
lcall
ss
xchg
aam
jae
push
push
mov
inc
xlat
pop
insl
mov
nop
aad
sub
cmp
bound
rcll
stos
loop
aam
sbb
inc
test
subl
jnp
les
jne
pop
jge
cli
ret
pop
push
push
mov
jnp
jae
outsl
cmpsl
repz
test
mov
jle
aas
push
push
jp
push
shll
push
icebp
fnstcw
jbe
inc
xor
cmp
out
daa
jmp
mov
loope
push
or
ret
aad
inc
or
fistps
or
mov
mov
sbbb
add
lcall
ja
xchg
push
lock
shrl
dec
cmp
mov
fwait
das
in
loopne
ret
mov
repz
stc
push
dec
push
xor
leave
sbb
jl
sbb
mov
fildll
mov
xchg
lods
mov
adc
xchg
push
rorl
push
lock
daa
popl
pop
out
jp
ss
scas
pop
repz
lock
mov
leave
popl
jno
jns
out
xor
std
dec
adc
daa
push
jl
cmp
add
outsl
mov
mov
inc
adcl
out
inc
nop
cmp
xlat
sub
pop
adc
pop
jb
mov
push
and
dec
mov
sbb
pop
push
pop
xchg
repz
mov
mov
mov
xchg
pushf
inc
popf
rcll
adc
adcb
cmp
stos
addb
ja
mov
lret
cwtl
mov
clc
mov
rorb
std
les
jmp
ret
jmp
and
ja
lods
sbb
sub
outsb
xchg
scas
test
mov
das
dec
inc
jecxz
mov
loopne
cmpsb
fnsave
mov
adc
outsl
repnz
pop
mov
in
push
push
adc
add
mov
imul
push
daa
xchg
push
scas
inc
push
jnp
adc
jmp
inc
mov
jb
fs
pop
push
jmp
pop
leave
movsb
fisttps
push
mov
loopne
dec
mov
push
mov
xor
jb
sbb
fdivr
sub
je
mov
lock
lods
push
imul
cli
inc
sahf
pushf
sub
xor
in
faddl
cwtl
test
jecxz
pop
fidivl
dec
movsl
or
and
mov
pushf
rep
jno
imul
xor
xchg
push
jne
es
or
scas
adc
insl
dec
ret
push
testb
push
pop
mov
pop
mov
into
jp
out
mov
mov
fldcw
es
mov
push
mov
sub
push
sbb
push
jge
sbb
into
repz
adc
icebp
cmp
sbb
add
psubd
or
push
lcall
or
hlt
jnp
add
sub
outsl
push
adc
aas
jb
imul
es
inc
sbb
test
icebp
pop
xor
ror
lahf
sub
mov
xchg
push
push
add
shrl
sbb
popa
pusha
add
mov
test
outsb
mov
pop
jo
add
push
sbb
fucomi
out
jg
dec
int
push
or
xor
mov
jae
ret
pop
adc
push
push
rorb
xchg
xchg
es
xor
xor
insb
mov
xor
xchg
jl
aam
mov
ret
dec
push
jg
adcl
jb
push
sbb
dec
cwtl
mov
loope
push
js
jbe
stc
xor
test
adc
jl
sbb
lock
outsb
fndisi(8087
jg
stc
xchg
dec
and
and
jg
dec
fcoms
mov
or
xor
stos
add
sbb
mov
sub
pop
sti
sub
xor
jmp
in
sub
mov
fimuls
cmp
mov
inc
out
push
test
insl
pop
mov
imul
mov
inc
lea
cmp
shlb
cmpsl
sub
xchg
mov
xchg
push
out
xor
ljmp
or
push
imul
lahf
dec
or
rcl
xor
or
xor
and
int3
popf
lock
xorb
or
mov
std
cltd
push
lret
enter
nop
rcl
lahf
repnz
sub
nop
sub
adcl
loope
sbb
pop
shrl
out
es
in
adc
std
jmp
andb
jns
cmp
test
sbb
gs
shrl
sbb
and
fucomip
or
cli
into
clc
push
into
mov
add
inc
lret
and
and
mov
sbb
int
aad
inc
xchg
imul
loopne
fbstp
and
loop
sbb
cmc
push
jno
lods
jp
mov
push
cmp
lcall
sbb
mov
in
dec
mov
cmp
test
pop
je
das
repz
rorb
xchg
cmp
ret
push
nop
pop
adc
sub
fmuls
xor
std
scas
mov
int3
mov
and
sbb
inc
mov
test
add
adc
mov
imulb
adc
jns
call
out
inc
jecxz
jge
mov
cli
xchg
aaa
mov
aaa
dec
jle
out
sub
scas
adc
mov
inc
xchg
shl
shrb
xor
inc
pop
mov
push
outsb
test
xor
in
or
adc
dec
jg
inc
int3
push
pop
fwait
adc
mov
mov
push
inc
cltd
pop
xchg
mov
out
pop
imul
icebp
inc
pop
test
mov
cmp
cmpsb
mov
mov
inc
push
les
mov
pop
fbstp
out
in
mov
push
or
cmpsb
mov
mov
clc
lcall
push
cmp
cwtl
sub
mov
pop
pop
incl
data16
loopne
jecxz
xor
pusha
fdivs
mov
fwait
cmp
icebp
sub
mov
pop
stos
cmp
xchg
mov
sti
movsb
sub
push
pop
movsl
jb
fdivrl
lock
mov
dec
sub
sbb
in
dec
inc
in
iret
repz
jmp
xor
enter
cmp
ret
addl
sar
mov
dec
aas
pop
xchg
jbe
jns
aad
sti
push
sbb
mov
lret
mov
cmp
sbb
lods
icebp
pop
leave
sbb
sbb
mov
pop
test
xor
jno
imul
dec
push
std
imul
fdivrl
xchg
jg
mov
sub
ret
sahf
cld
fdivp
inc
push
pop
mov
xchg
call
inc
insl
popa
dec
mov
ds
pop
inc
and
xor
adc
cmc
bsf
out
mov
push
sub
pop
jns
cmp
adc
jg
out
sub
arpl
sub
push
pusha
and
dec
shl
and
es
sub
inc
lock
or
and
fcmovbe
dec
pop
dec
fistpl
cmpsl
lret
or
in
fisttps
sahf
daa
aad
in
add
les
repnz
push
sub
sub
mov
cmp
cmp
mov
and
mov
pop
aas
stos
loope
ja
jae
adcb
test
add
in
and
adc
stos
xor
shll
test
lods
xchg
stos
xchg
sbbb
push
cmp
rdtsc
inc
icebp
outsl
adc
rep
or
xchg
pop
sbb
cmp
loopne
push
psubsw
add
lret
mov
nop
cmp
pop
xor
testl
cmp
inc
push
jl
mov
popa
cmp
inc
lret
enter
ja
outsl
sahf
mov
hlt
mov
cs
clc
out
adc
mov
push
js
out
fmuls
aas
ficoml
and
lcall
sbbb
xchg
add
nop
jp
mov
and
add
xor
fidivl
sbb
cli
inc
push
sbb
add
xchg
loope
imul
add
xor
mov
pop
rcrl
outsb
fbstp
mov
js
sub
sub
loope
dec
xchg
pop
cmc
mov
out
leave
and
jecxz
xor
syscall
sahf
mov
pusha
mov
adc
aad
xchg
jo
dec
pop
insb
je
xor
or
mov
fidivs
push
testl
clc
inc
cmp
adc
pop
mov
popf
mov
sub
js
or
dec
loop
std
fucomi
mov
pop
inc
push
pushf
fsubrs
xchg
dec
push
data16
out
out
mov
mov
mov
pop
pop
inc
add
jl
popf
dec
mov
dec
xor
lds
lock
mov
ds
out
pop
xlat
push
push
sub
sub
mov
xchg
imul
add
inc
popa
cmp
sarl
fdivl
mov
and
rclb
cmp
mov
or
and
aas
lcall
jmp
popf
jnp
and
andb
mov
or
or
jge
push
movl
cmp
in
arpl
rcrl
sub
xchg
pop
int3
push
ss
daa
mov
cmp
ljmp
lret
daa
inc
and
xchg
pusha
sub
pop
sbb
lds
and
mov
inc
dec
xchg
andl
or
jo
fsubs
cmp
sub
or
fsub
enter
movsb
push
enter
jo
jne
sub
or
cmpsl
dec
cmpsl
push
xchg
sub
stos
loope
outsb
push
cld
in
fisttpll
imul
jecxz
lcall
dec
push
mov
pusha
dec
push
adc
mov
ficoms
sub
ret
push
mov
aaa
xchg
lahf
or
pushf
push
add
int3
lret
lea
mov
out
fisubs
add
scas
or
lret
push
mov
or
and
mov
pop
push
out
loope
aad
aad
lock
xchg
xor
xchg
mov
decb
mov
push
nop
out
mov
popf
std
sub
cltd
pop
and
mov
pop
lock
add
xchg
test
jp
loopne
rorl
rorb
repz
xchg
ljmp
cmpsb
and
sbb
dec
hlt
aam
add
mov
mov
jo
gs
or
inc
sti
stos
or
and
daa
mov
mov
popf
mov
scas
pop
rorl
xor
stos
in
sahf
fldl
addl
in
mov
jno
loopne
jne
sahf
daa
lahf
cltd
push
adc
inc
cld
test
aad
pop
adc
pushf
jle
movsb
fwait
cmp
rorl
popf
jne
outsl
outsb
mov
sbb
mov
xchg
sbb
and
lahf
cmp
push
fstps
stos
xchg
lea
push
hlt
mov
scas
test
mov
adcb
ret
stos
xor
clc
mov
in
sub
in
loope
cwtl
andb
or
jmp
bound
arpl
mov
sbb
sbb
mov
and
ja
roll
lock
jnp
iret
adc
jae
dec
inc
mov
stos
or
inc
pop
popl
dec
xor
loope
call
hlt
jg
push
fwait
shll
lahf
int3
scas
ja
jbe
inc
in
movb
into
dec
lret
iret
les
insb
xor
xchg
fs
add
mov
dec
bound
aaa
scas
mov
mov
mov
imull
sub
fwait
test
jg
jp
lahf
std
sub
loopne
aas
xchg
loope
jno
pop
and
roll
jge
arpl
mov
dec
push
adc
pop
push
mov
in
dec
jb
mov
push
jno
lea
pop
add
cmpsl
cmc
stos
xchg
and
stos
sti
aad
pop
cmp
mov
icebp
insb
mov
push
push
sbbb
cmp
gs
ret
inc
sbb
mov
lcall
jo
or
add
xchg
or
mov
decl
mov
pop
int
hlt
fs
mov
dec
jb
dec
mov
cmp
das
pushf
clc
mov
xchg
cmpsl
lret
xchg
add
fidivl
enter
pop
cmc
lods
hlt
pop
frstor
cmp
aaa
sub
xlat
lods
mov
cmp
jo
iret
xchg
lods
inc
xchg
jp
repz
sti
arpl
aad
mov
xor
test
cs
dec
imul
stc
fisttps
scas
sbb
insb
jno
push
mov
push
xchg
adc
mov
cmp
loope
hlt
adc
jno
imul
in
ret
ror
sub
pop
or
in
sbb
int
push
cwtl
mov
int
sub
mov
loop
xchg
gs
jne
call
inc
xchg
sbb
iret
lea
lds
cltd
ljmp
arpl
push
aas
xlat
mov
js
into
addr16
mov
clc
sub
mov
scas
dec
jnp
xorl
sub
arpl
mov
mov
loopne
sti
and
pop
cmpsb
jae
mov
mov
adc
add
sbb
fdivrl
and
test
mov
fdivs
sbb
insb
cmpsl
sbb
pop
test
push
mov
aas
cmpb
mov
arpl
cmp
mov
das
mov
lds
xchg
adc
and
mov
mov
and
pop
inc
cwtl
xchg
imul
movb
in
and
mov
ds
jmp
test
mov
push
aaa
mov
mov
xchg
pop
push
cmp
mov
fcmovu
sti
test
add
adc
sbb
mov
mov
push
or
imul
lahf
lods
pop
pop
jae
lret
xlat
daa
lock
stos
daa
push
cltd
xchg
jp
mov
mov
push
dec
xor
mov
js
in
inc
jne
sbb
pop
push
mov
xor
jno
mov
add
push
jbe
fs
xlat
outsl
push
aas
dec
xchg
ja
jle
ljmp
push
xor
pop
gs
repnz
xchg
inc
std
jne
jns
inc
out
dec
add
dec
sahf
into
je
sbb
jne
or
in
cltd
pop
push
outsl
push
xchg
js
loope
push
jg
push
xor
int3
fimull
and
out
mov
inc
int
or
hlt
clc
pop
xchg
jle
cmpsb
gs
cli
aaa
lahf
dec
lds
clc
mov
in
roll
jmp
es
adc
lea
out
cmp
and
mov
and
mov
int3
lods
xchg
jl
cmp
cli
in
push
push
roll
xrelease
push
jg
lret
movsb
cmp
xor
popf
rolb
sub
movsb
lock
xor
stc
in
jge
int3
push
dec
std
sahf
lea
pop
xor
orl
jl
rclb
xchg
arpl
repnz
inc
sbb
mov
or
fcoml
lret
aad
ja
imul
push
lret
insl
inc
sbb
add
bound
xchg
sbb
inc
mov
jge
xor
sub
cmp
fadd
sub
imul
sbb
test
fsubs
jp
cld
fadds
xor
lods
pop
jmp
roll
movntps
and
lds
inc
sub
push
push
loope
test
xor
push
jbe
mov
adc
mov
int3
mov
and
or
cld
ss
adc
lahf
call
les
xlat
mov
sub
cltd
xchg
ret
dec
jns
or
mov
clc
push
jg
adc
push
jp
mov
mov
add
mov
aaa
arpl
fcoml
stos
stos
std
push
mov
xchg
xchg
in
idivl
sbb
scas
adc
mov
ja
xchg
mov
insl
enter
sub
movsb
leave
mov
mov
inc
scas
lahf
test
sub
stc
inc
jl
lods
add
xchg
lahf
dec
mov
add
add
outsb
outsb
loopne
and
inc
inc
jo
xor
fwait
shrb
mov
mov
mov
push
mov
inc
mov
test
addr16
daa
enter
sarl
or
sbb
xchg
or
shlb
dec
jb
js
add
in
icebp
pop
sub
subl
inc
jp
popfw
les
setne
push
push
movsb
push
insl
cmp
dec
cmpsb
push
les
xor
pusha
pop
mov
fisttps
xor
bound
mov
xor
sbbl
lods
stos
addr16
out
fbstp
xchg
jp
adcb
push
and
cmp
jecxz
repz
imul
lock
enter
dec
mov
repnz
fisttps
addr16
pop
or
inc
roll
or
push
pop
jns
inc
sub
loope
loop
movsl
mov
mov
out
aas
push
adc
and
mov
ja
pop
xor
and
packssdw
popa
mov
daa
ljmp
fisubl
jmp
push
add
rcll
and
add
cmp
push
or
cmp
pop
scas
inc
mov
add
rsqrtps
inc
clc
aaa
mov
cmp
cmp
xor
int
add
lock
mov
and
mov
adc
sub
nop
mov
fmull
pop
pop
sbb
lds
std
push
dec
jbe
fldcw
sub
add
into
call
adc
insl
or
fcomi
addr16
cwtl
push
rolb
mov
sti
nop
add
negl
shl
cli
ficoms
rcll
or
gs
mov
movl
mov
fs
roll
leave
xchg
and
ljmp
aam
pop
or
decb
cld
movsb
shlb
addb
leave
jmp
test
xchg
scas
pushf
mov
inc
aas
mov
lock
test
xchg
mov
outsb
cmc
push
jle
xor
jmp
ret
outsl
mov
sahf
ss
popf
outsl
jge
adc
adc
push
pop
pushf
out
pop
push
cmp
cmp
pop
out
inc
lret
mov
xchg
adc
lea
xchg
adc
out
popa
add
dec
jno
subps
mov
dec
shlb
xchg
xor
fmuls
lcall
gs
test
leave
mov
out
sbb
outsb
push
js
mov
mov
call
jl
imul
ret
cmp
sarl
aas
outsl
mov
out
fwait
push
leave
sbb
push
fnsave
stos
bswap
add
dec
push
stos
push
mov
pop
or
pop
ss
add
cltd
mov
stos
imul
fwait
mov
dec
xlat
jle
xchg
bound
mov
es
faddl
push
xlat
mov
ja
cmpsb
inc
xchg
aas
xchg
std
push
ds
fdivp
mov
outsl
mov
cli
push
add
lds
std
cmp
sahf
cmpsl
dec
or
in
icebp
sbb
mov
stc
lods
clc
clc
sahf
repz
jmp
out
jle
popa
lret
push
mov
ret
lock
mov
lods
xchg
lret
mov
jo
jbe
inc
hlt
data16
cmp
aaa
push
in
cmp
sbb
daa
jle
jae
pop
adc
aam
adc
fistpl
mov
je
mov
push
adc
and
arpl
pop
dec
sub
sub
repnz
and
cmc
xchg
and
sbb
pop
sbb
dec
and
notb
loopne
adc
pop
jne
int
rcr
insb
mov
orl
shrl
adcb
inc
outsl
scas
sub
add
jle
cli
sub
push
jge
leave
iret
aam
in
mov
sbb
mov
or
shlb
xchg
and
adc
mov
lods
pop
sbb
shrb
xor
aaa
nop
les
test
outsl
sbb
dec
adc
loopne
jmp
mov
inc
jbe
jns
xchg
enter
fwait
jl
mov
ljmp
cmp
add
sbb
jbe
fdivl
sub
std
addr16
mov
adc
movsb
popf
addr16
xor
outsb
xor
aad
mov
inc
inc
scas
push
jno
pop
iret
addr16
xchg
loopne
gs
mov
pop
hlt
shr
daa
out
loopne
jp
call
jecxz
lock
cmpsb
xchg
stc
rorl
inc
je
ljmp
jno
addr16
hlt
mov
sbb
rcrl
add
daa
lock
and
cwtl
dec
mov
add
xor
add
wrmsr
lea
cmp
pop
or
clc
outsl
lods
les
jns
sub
mull
int3
in
int3
or
int
pop
dec
lock
xchg
test
xchg
mov
in
jne
rol
cltd
insb
jle
adc
in
ss
pop
mov
shll
das
jp
into
jecxz
xchg
popf
ds
cli
inc
adc
enter
xor
lods
jae
adc
mov
nop
jg
mov
mov
into
loope
scas
divb
push
cld
and
fucomip
or
and
add
movsb
pop
add
mov
pop
int
nop
out
inc
push
mov
jmp
mov
dec
inc
pop
cs
mov
push
mov
push
mov
rcll
and
lock
cld
cmpl
mov
mov
lock
insl
movsb
stos
or
call
push
out
into
and
ljmp
mov
add
inc
cmp
sbb
cmpl
mov
clc
imul
les
aad
push
hlt
fistps
ljmp
inc
pop
jmp
adc
push
data16
shrl
loop
xor
jl
dec
test
dec
ficompl
addb
jne
lea
mov
mov
ret
in
mov
or
leave
xor
fldcw
cltd
lret
stc
mov
loop
sub
cmp
ret
adcl
push
jge
cmp
xchg
ss
leave
xchg
or
mov
mov
mov
aad
dec
or
push
andps
out
sbb
fcmovbe
in
push
adc
dec
xchg
dec
iret
sbb
jae
pop
pop
or
xor
test
pushf
aaa
loopne
cmpl
jnp
sbb
aam
ja
jno
bound
cmp
cmpsb
movsb
xor
out
mov
mov
in
mov
fwait
xor
test
mov
pop
pop
pop
cmpsw
roll
jno
sub
subl
push
adc
sbb
sbb
sub
mov
cmp
cld
pusha
mov
addl
jp
xchg
ja
sbb
and
sub
idivl
neg
mov
fcompl
cltd
jecxz
pop
push
bound
mov
push
pusha
xlat
push
idiv
adc
sbb
mov
mov
scas
cmp
adc
mov
mov
xor
inc
inc
jbe
dec
mov
aas
rclb
push
bound
inc
pop
jecxz
add
mov
pop
fs
cld
in
movsl
cltd
out
ret
xchg
mov
mov
jne
jae
jb
jnp
jl
xor
cmpb
jne
and
add
testb
push
cmp
mov
adc
outsb
movsl
xchg
mov
sub
dec
out
and
cmp
sbb
cwtl
subl
cltd
cltd
sbb
push
adc
cmpsl
and
push
cmp
cs
in
es
ror
imul
jle
out
xor
ror
xor
fstps
lods
sarb
mov
jmp
xor
sti
mov
adc
dec
int
loopne
fwait
inc
lret
cmp
rcll
lds
fbld
inc
fildl
insl
jecxz
sbb
mov
in
stos
lea
sbb
jae
lods
test
push
xor
pop
enter
and
jns
xchg
fldt
iret
inc
or
jge
jp
test
and
cmpsl
push
imul
sti
lret
stc
stc
cwtl
cmp
andb
xor
negl
out
int3
outsb
jns
test
sar
mov
fstpl
jge
arpl
sahf
ljmp
jnp
shll
mov
sub
jl
movsb
xchg
outsl
dec
and
gs
cmp
jmp
je
cmpsb
les
stos
pcmpgtd
cmp
call
dec
dec
cmpsb
adc
call
rcrb
bound
pop
insl
inc
das
sub
mov
aad
xchg
sbb
and
out
push
mov
insl
pusha
mov
iret
iret
push
insl
adc
sbb
in
or
lret
subb
fisttpl
add
or
mov
mov
xchg
xor
sbb
mov
stc
jne
adc
cmp
add
cmp
mov
leave
mov
or
int
pop
or
push
inc
mov
sub
and
push
lods
push
push
fwait
sub
push
jnp
aas
clc
pop
rcrl
adc
cltd
addb
jle
popa
inc
loopne
xor
xor
push
dec
fs
dec
inc
pop
test
fistpl
or
and
adc
es
cli
cmp
in
mov
cmp
xor
pop
pop
pop
loopne
data16
fisubrs
fists
lods
sub
or
pop
cmc
cltd
adc
push
mov
push
xor
into
fidivrl
xor
js
imul
xor
adc
sahf
or
pop
fistpll
jecxz
jmp
adc
into
aad
gs
lea
pop
shl
int
call
shrb
mov
outsb
jbe
pop
xorb
jno
clc
call
pop
data16
mov
in
xchg
pop
enter
push
cmp
and
outsl
sbb
fidivrl
stos
in
and
mov
hlt
xchg
cld
ret
push
pop
out
or
dec
in
push
push
jle
insl
push
addr16
ja
data16
test
bound
push
stc
sub
lea
jecxz
sarl
loop
jle
aad
fdivr
icebp
pop
int
js
lods
std
push
add
int3
orb
imull
addb
adc
mov
jg
jb
aam
jmp
or
xchg
outsl
shll
mov
ret
test
mov
mov
nop
xchg
in
fsts
int3
test
xchg
xchg
sbb
dec
mov
rolb
cld
mov
jg
es
dec
icebp
leave
inc
fwait
lret
mov
push
in
ret
rol
jae
jmp
and
insb
das
jge
xchg
lcall
shrl
test
and
add
ds
ret
or
ja
fildl
sub
xor
insl
push
push
int3
mov
ds
rorb
out
or
add
rorl
cld
sub
and
lds
imul
out
xor
aaa
lcall
mov
adc
repnz
lea
scas
add
movsb
and
or
mov
lock
in
push
add
loop
scas
jbe
repnz
loopne
enter
ds
clc
or
inc
es
sbb
pop
hlt
jne
xchg
out
xchg
int
dec
call
or
pop
xor
imul
fs
ds
mov
push
aad
and
out
adc
shll
loope
add
push
cmpsl
repnz
rolb
decb
mov
xchg
dec
mov
push
lcall
mov
enter
je
shll
sub
das
xor
lods
sub
adc
addr16
pop
inc
sub
orb
dec
inc
push
add
mov
dec
sbb
add
jbe
xorb
jno
pop
cltd
pop
push
xor
fiaddl
mov
repnz
ficoms
add
lds
cld
fisttps
fsubrl
jmp
jbe
cmp
sbb
lock
insb
aad
cwtl
add
test
jb
out
mov
lods
test
in
mov
push
sub
inc
mov
cmpsb
cwtl
popf
pop
adc
xor
es
sti
mov
cli
inc
popf
adc
rorb
push
mov
pop
lods
inc
and
dec
cs
pop
dec
pop
inc
scas
test
fs
movsl
sbb
shlb
push
fstpl
ds
inc
push
leave
inc
mov
loop
lret
inc
ja
lea
aaa
push
and
stos
rcr
nop
xor
push
dec
stc
push
ret
outsl
arpl
fldl
sbb
in
inc
rol
movsb
sbb
pushf
lcall
dec
sbb
js
sti
bound
rcll
and
cmpsl
push
adc
push
clc
ret
fists
aad
and
xor
adc
rcrl
mov
xlat
add
loope
sub
add
pop
enter
dec
clc
fsubs
xor
push
sahf
or
push
lods
push
shrb
cmp
push
dec
cli
test
dec
orb
fucomip
test
mov
xor
cli
mov
push
jmp
jmp
nop
scas
sub
sbb
push
xlat
jne
rorl
mov
sub
xor
clc
dec
out
gs
cmpb
sbb
jle
ret
add
or
push
pop
aad
add
jb
test
into
xchg
and
lock
or
es
mov
aas
rcrl
fists
shrl
in
jge
ljmp
mov
sbb
out
cs
inc
mov
jecxz
sti
push
adc
pop
or
mov
adc
jnp
fcompl
lods
dec
push
sub
sbb
mov
jle
addr16
push
stc
xor
xor
xor
loopne
loop
shrl
dec
mov
cmp
mov
mov
mov
mov
or
cltd
sarl
sbb
sub
lahf
cmp
imul
shll
imul
jno
subb
sbb
aam
lcall
push
mov
adc
push
out
mov
outsl
imul
sbb
out
mov
mov
cmc
aam
jb
dec
fistpll
push
movsl
mov
subl
stos
cmp
sub
jb
and
xchg
iret
cli
fcmovb
sbb
push
xchg
dec
add
insb
insl
sbb
adc
lock
movsb
loope
xlat
push
sti
push
ljmp
and
mov
jno
cwtl
and
test
or
mov
mov
pop
xlat
lret
in
mov
cli
inc
pop
fldt
sub
jno
dec
push
int3
stos
aad
fcomp
lcall
aad
mov
xor
xchg
fildll
sub
mov
repz
jl
mov
leave
inc
jns
jle
adc
mov
std
inc
data16
fwait
dec
sub
cmp
test
ja
push
mov
pop
pop
xchg
test
movsl
jo
xchg
sti
mov
cltd
flds
loopne
xor
loop
and
insl
adc
leave
incb
add
sub
je
aas
xor
pop
std
mov
xchg
repz
clc
xchg
in
mov
xlat
mov
adc
rcll
jno
inc
es
mov
mov
or
fwait
or
mov
ja
adc
rclb
loop
test
shrl
jne
es
loopne
icebp
idivb
lret
imul
mov
mov
inc
scas
es
rolb
fidivs
pop
stc
lret
cmp
jmp
push
and
mov
out
add
lahf
adc
int
neg
les
testb
int
add
adc
testl
cwtl
dec
pop
les
fldcw
das
xchg
mov
js
push
add
dec
mulb
pop
adc
js
out
insb
push
push
xchg
push
sbb
arpl
xor
xchg
sahf
aaa
xchg
inc
mov
push
mov
leave
out
repnz
jle
xorl
outsl
loop
dec
jg
leave
lahf
push
out
in
aas
sbb
scas
xchg
and
loopne
les
mov
in
xchg
sti
mov
xchg
add
mov
inc
std
jae
imul
arpl
ret
adc
sbb
loop
xor
sub
insl
out
push
mov
aaa
lret
sti
ja
dec
add
pop
pop
xor
imul
scas
dec
enter
out
pop
jb
mov
sub
push
or
jo
xor
xor
je
cmp
std
adc
jecxz
fwait
mov
xor
fisubrs
fists
push
xchg
in
nop
xchg
cmpb
mov
mov
mov
adc
pop
mov
inc
sub
and
push
jge
js
loop
push
dec
sub
push
xor
add
jo
enter
pop
icebp
fisttps
mov
sbb
or
or
inc
jae
pop
rcl
data16
inc
xchg
mov
push
jbe
out
lods
daa
out
aad
out
pop
inc
dec
enter
push
pop
xor
cmp
scas
scas
sub
or
cli
subl
out
xor
jmp
je
mov
in
mov
inc
arpl
mov
outsl
ds
xor
xchg
or
jae
lods
icebp
xchg
push
sbb
sahf
xchg
pop
and
mov
das
inc
lcall
lcall
mov
inc
mov
lret
cli
rcrl
or
sbb
stos
call
repz
jmp
jnp
popa
and
cmpl
nop
sub
addr16
mov
mov
xchg
or
mov
dec
jbe
sbb
ja
mov
incl
addl
insl
aas
clc
pop
sub
inc
lahf
insb
into
xchg
ret
test
test
add
leave
and
mov
mov
mov
fsubrp
cmp
cmp
xchg
cmpsb
arpl
xchg
or
inc
repz
ficompl
daa
andb
iret
call
daa
sarl
ljmp
int3
outsl
andb
mov
inc
addr16
sbbb
les
stos
cmp
out
bound
movsl
push
adc
ror
mov
adc
pusha
inc
xor
outsl
les
mov
xchg
pop
mov
jmp
lcall
fwait
push
sub
adc
aad
fwait
insl
pop
scas
out
sbb
in
push
xchg
push
cmc
bound
out
pusha
loop
stos
or
inc
sbb
push
push
test
ret
scas
cmpsl
pop
push
jo
movsb
mov
cwtl
cmp
xorl
dec
mov
xchg
sbb
adc
les
or
pop
push
outsb
fwait
jbe
sbb
mov
movsl
or
roll
dec
sahf
test
xchg
inc
outsl
std
daa
loop
fdivl
cmp
jns
push
mov
or
mov
jmp
shr
out
mov
test
imul
outsb
mov
lahf
pop
mov
mov
ja
dec
in
cmp
lea
and
insl
idiv
ss
cmp
js
stos
mov
fcoml
test
subb
jp,pn
in
rclb
jnp
ljmp
pop
stc
sbb
mov
test
add
jl
xchg
in
hlt
mov
sub
mov
sahf
popf
stos
jae
bound
fiaddl
push
cmp
pop
mov
ja
fmulp
push
pop
mov
movsb
or
imul
xchg
mov
stos
aas
js
sbbb
sti
cmp
adc
imul
xchg
dec
in
sbb
adc
imul
lods
mov
mov
dec
je
push
sahf
dec
lock
lahf
scas
sub
dec
sub
and
aaa
hlt
out
add
xchg
int3
dec
push
xchg
mov
or
stos
out
int
mov
andl
adc
cld
dec
push
inc
aas
mov
jnp
lret
outsl
inc
les
gs
cmc
es
xlat
das
aad
pop
and
shufps
ret
mov
push
adc
pop
cmp
mov
add
pop
and
gs
mov
jg
in
sbb
ret
add
fstl
jnp
and
in
mov
ljmp
into
dec
sbb
sub
xor
cmp
stc
dec
popf
cld
inc
xchg
jecxz
test
pop
js
sub
inc
and
push
push
test
daa
fisttps
jle
push
cmpsl
pushf
scas
out
dec
scas
rclb
add
mov
mov
xor
push
cmp
aad
loopne
and
das
lcall
fbld
das
dec
add
lods
mov
popa
mov
add
imul
adc
pop
repz
xor
es
push
outsl
add
cmpl
mov
sub
in
lret
xor
push
fildl
mov
lds
out
push
clc
xchg
xchg
add
pop
and
mov
inc
xchg
sti
outsb
nop
outsl
xchg
lea
mov
dec
addr16
je
pop
push
add
mov
lret
jbe
ja
bound
cltd
jne
pop
jns
mov
lock
bound
test
inc
mov
mov
pop
stc
xchg
mov
int3
fnstenv
stc
movsl
mov
sbb
imul
test
mov
or
pop
cmpsl
jmp
or
out
pop
pop
dec
jbe
in
sbb
fnstcw
jg
enter
loope
mov
test
xor
fwait
loop
mov
clc
and
mull
mov
xor
dec
or
xchg
lahf
mov
mov
sub
in
in
addr16
out
in
or
mov
push
ret
jl
les
mov
mov
in
mov
mov
dec
jmp
stos
sbb
lds
std
mov
and
fsts
and
loop
push
add
cmpsb
bound
and
subl
jns
shl
cmp
es
jb
sbb
inc
int
out
pop
icebp
push
adc
dec
and
addr16
and
xlat
rcrb
sbb
jno
loopne
adc
outsl
rcl
addr16
jo
jle
lahf
subl
push
ds
xor
imul
xchg
popf
fildll
sub
dec
push
adc
push
dec
sub
std
std
aas
ret
pop
sti
arpl
jl
adc
movsl
movsb
pop
fbld
aaa
cmp
add
pop
mov
pop
or
jne
adcl
sbb
mov
xchg
mov
and
je
mov
aaa
shll
addr16
ja
jno
adc
fsubs
pop
in
cmc
or
xor
movsb
popa
imul
pushf
icebp
inc
xchg
lock
push
mov
stc
lret
sbb
cmp
outsb
xchg
mov
sbb
ss
ljmp
out
jecxz
mov
jmp
adc
jns
lahf
inc
xor
int3
and
adc
xchg
movsb
add
sbb
cwtl
pop
rep
mov
dec
mov
dec
movsl
cmpsl
xchg
hlt
cmp
pop
inc
les
pushf
mov
out
test
jge
ljmp
pop
and
rcrb
test
movsb
fstpl
cmpsl
stos
frstor
mov
mov
loope
out
mov
shr
stc
arpl
jmp
clc
push
sbb
cmpsb
push
add
inc
pop
mov
sbb
mov
movsb
inc
nop
lret
lret
enter
xchg
fcmovnu
and
or
jbe
jbe
ds
sub
pop
dec
cmovne
inc
fisubrs
flds
jp
enter
mov
xor
pop
cld
lret
jecxz
bound
mov
or
or
xchg
aas
and
and
dec
push
out
fcmovnb
stos
sbb
sub
lea
dec
jns
xor
stos
sarl
and
adc
inc
and
adc
cltd
outsb
sub
mov
push
out
cli
imul
jno
and
dec
mov
les
scas
retw
or
and
rorb
dec
add
popf
outsb
stc
rcl
jbe
jne
mov
inc
sbb
push
mov
mov
or
addr16
sub
scas
jmp
imul
ret
mov
xor
pop
pop
push
jb
stos
outsb
imul
cwtl
repnz
pop
outsb
sub
enter
dec
outsl
mov
push
cli
cli
punpckhdq
adc
inc
mov
cmp
pop
cmp
movsl
mov
test
test
js
jle
cld
jae
pop
ret
stos
mov
cmp
loop
fistps
push
pop
xor
add
into
adc
pop
pop
lcall
dec
aaa
in
xchg
mov
push
xor
insl
das
or
sbb
and
fldt
pop
cmpxchg8b
lret
mov
addr16
mov
cmp
arpl
sahf
xchg
sti
frstor
mov
jns
out
jnp
pop
clc
xchg
insl
and
mov
xchg
add
aaa
mov
push
iret
ret
sub
jl
sbb
imul
leave
cmc
clc
xor
mov
xchg
cmp
into
cs
xchg
mov
lock
mov
data16
mov
mov
mov
lcall
jne
sahf
popl
lds
or
add
es
jmp
xor
jne
mov
push
lret
xchg
call
mov
nop
inc
lret
out
xchg
jl
shrl
shlb
xor
mov
outsb
cmpsl
imul
js
fcompl
xor
lock
insl
push
push
cs
or
mov
xlat
enter
imul
cmp
and
das
add
push
clc
sar
aad
pcmpgtd
ljmp
or
pushf
xor
mov
pop
pop
negl
push
mov
dec
and
mov
xor
sub
fs
and
out
sti
jge
aam
jg
lds
repz
aas
or
pop
ds
mov
push
cld
mov
adc
sbbw
imul
dec
and
lret
xor
mov
push
push
inc
xchg
inc
push
fxch
mov
jge
or
rorl
xchg
jmp
pop
push
add
shlb
call
daa
and
xor
sub
cmpl
jl
xor
sbb
movsb
sub
icebp
pop
cmc
push
sub
mov
adc
aaa
mov
sbbb
scas
add
mov
pushl
mov
cmp
ss
faddl
stos
mov
test
dec
sub
jmp
stos
lahf
sbb
jmp
jne
lds
and
jno
pop
mov
or
iret
push
ja
mov
out
jnp
sub
xchg
xor
xchg
dec
dec
push
pop
cmp
dec
mov
jae
lea
iret
aas
das
mov
ret
sti
adc
std
or
mov
or
outsb
push
add
add
gs
xchg
sbb
sbb
mov
cld
jmp
add
and
add
or
add
loop
divb
je
mov
cwtl
out
in
nop
mov
push
rcll
fldt
sbb
mov
adc
subl
or
andl
mov
xor
jns
inc
and
cmp
add
and
push
stc
xchg
outsb
jns
sub
imul
or
pop
fisttps
out
push
add
cmpsb
insb
call
pop
lea
jne
adc
jno
das
xor
add
pop
in
push
in
mov
push
dec
out
lcall
mulb
cmp
outsb
dec
inc
cltd
add
pop
push
js
loopne
loop
ljmp
or
mov
mov
imul
lcall
push
jns
ljmp
pop
icebp
dec
aaa
jg
or
jmp
fs
xchg
mov
nop
pop
in
mov
mov
out
andl
add
ja
sub
lock
jmp
idivb
in
call
ljmp
push
movsb
test
sti
push
xlat
pop
icebp
fdiv
cmpsl
mov
shlw
cs
shrl
xor
loope
loop
into
arpl
sub
cmpsb
lret
add
adc
cmpsb
mov
push
jnp
or
jmp
inc
xchg
push
cwtl
cmp
enter
orb
loopne
xor
sahf
cs
out
dec
and
jo
popf
clc
sub
pushf
in
add
mov
jae
cs
xor
adc
mov
aad
sbb
pushf
sub
lret
outsl
cmp
out
jae
int
out
aad
push
push
lret
adc
jns
stos
scas
dec
pop
sbb
or
ss
cs
lahf
jb
and
cs
lahf
nop
sub
mov
jge
push
mov
lds
fbstp
in
int
les
aaa
rolb
fcomps
pop
jo
xor
add
mov
sub
cmp
scas
or
adc
imul
pop
fldenv
inc
cmc
call
or
mov
mov
mov
loopne
inc
push
aam
shr
mov
outsl
fidivs
inc
mov
add
in
or
mov
xor
or
adc
push
push
addr16
pusha
mov
and
push
sbb
repz
popa
movsl
xchg
das
mov
rol
mov
fsts
jge
lods
mov
dec
dec
pop
mov
ds
and
arpl
cmp
push
jb
hlt
pop
js
inc
test
js
adc
cltd
pusha
jne
cs
jno
jno
stc
in
xchg
jge
sbb
pop
xchg
mov
fldt
cmp
in
xor
inc
or
jnp
adc
sbb
ret
inc
aaa
jne
push
call
cwtl
jns
outsb
lock
mov
fsubrs
mov
daa
shll
jmp
mov
xor
lret
jmp
cmp
js
cmp
imul
jecxz
mov
push
lods
arpl
cltd
or
xor
push
mov
and
outsb
cmc
pop
andb
sbb
jb
add
or
aaa
cvtps2pd
pop
sbb
jae
jbe
pop
sbb
mov
lock
in
and
into
cld
jb
or
xchg
test
sub
in
xchg
gs
xchg
rcrb
bound
rol
or
push
mov
notl
aad
hlt
jle
cmp
sbb
cmpsb
jno
mov
aad
lods
int3
cs
into
lods
cmp
adc
xchg
xchg
test
dec
xorl
inc
and
lahf
fs
lds
pop
xchg
frstor
jae
xchg
jbe
mov
in
mov
mov
pop
pusha
push
xor
jge
xchg
lea
mov
testl
pop
notl
arpl
testl
fnstcw
lea
test
xchg
bound
push
dec
iret
pusha
insl
int
cpuid
mov
out
bound
sbb
or
xchg
and
cld
nop
pop
dec
lcall
jecxz
mov
std
dec
fdiv
jo
adc
fistpl
mov
cld
add
jle
lcall
fnstcw
negl
push
pop
xor
mov
imul
test
mov
mov
lock
flds
or
jl
or
xor
dec
arpl
movsb
imul
push
xchg
push
push
es
sahf
add
cmp
in
push
mov
call
mov
cmp
enter
notb
mov
mov
aam
pop
data16
fdivl
int
adc
rol
insb
mov
clc
js
xchg
lds
in
push
int
mov
mov
mov
dec
lret
mov
das
mov
aam
mov
mov
and
out
pop
adc
mov
in
popl
pusha
repnz
sub
insl
dec
mov
and
or
xor
dec
sbb
in
out
psubusw
repz
add
pop
cwtl
xchg
cmpsb
vpunpckhbw
and
push
je
jecxz
bound
xor
js
and
loop
push
stos
pop
mov
das
lret
push
jg
jns
jmp
jp
loopne
loop
push
in
adcl
imul
test
lods
fwait
sbb
sbb
nop
ja
movsbl
adc
lods
and
lea
sti
xor
sub
adc
mov
inc
cmp
adcl
adc
inc
je
and
addr16
mov
mov
sahf
out
and
push
std
mov
notl
cli
or
mov
mov
push
and
rolb
sbb
push
xchg
jnp
xor
mov
fisubrs
xlat
pop
cld
dec
lods
repnz
push
cmpsl
pop
push
mov
push
cs
push
rorl
adc
repnz
adc
lahf
cltd
or
icebp
das
inc
and
mov
inc
cmp
add
xchg
ljmp
add
stc
fmull
mov
mov
fsts
arpl
pop
xchg
mov
mov
adc
and
xor
or
jno
int
call
sub
dec
xchg
and
or
and
xchg
cmp
mulb
push
sub
pmulhw
pop
adc
pop
sbb
popf
mov
inc
sub
and
out
sub
cmp
or
adc
add
ljmp
mov
sub
mov
push
mov
jb
movsb
test
movntq
mov
mov
adc
jle
and
push
dec
xlat
xor
orl
push
add
shlb
scas
jb
sub
inc
adc
ss
mov
add
sub
dec
dec
call
outsl
cmpsb
push
testb
cmpsb
push
push
sub
xchg
lods
mov
imul
cs
out
ja
and
out
in
or
lret
xchg
popa
and
repz
or
outsb
outsb
cmpsl
mov
rcrl
arpl
jmp
push
lcall
loopne
je
push
loopne
xor
dec
xchg
inc
aaa
mov
jnp
out
and
mov
jae
hlt
cltd
sarl
sarl
xor
pop
leave
cmpsb
into
inc
sub
fnstenv
lret
and
xor
jae
movsb
dec
cld
push
sub
imul
xchg
or
cmp
jno
push
or
jns
fldl
xchg
int3
inc
sub
insl
mov
xchg
mov
xor
sub
andb
dec
mov
rcll
rcl
pushf
pop
xchg
ret
inc
sbb
jle
add
mov
jo
outsb
mov
pushf
out
cmp
fidivrs
ss
pop
cmp
dec
je
jbe
mov
inc
mov
jns
mov
cmc
or
outsl
jne
adc
xor
popf
das
enter
out
mov
cmc
leave
mov
cmp
mov
or
xchg
or
mov
int3
inc
mov
jae
adc
das
mov
push
repnz
stos
add
mov
cltd
inc
xchg
cmc
adc
popf
jg
test
push
and
movsl
pop
cs
xchg
xchg
out
sbb
xor
xchg
rcrl
mov
and
add
adc
pop
cmc
imul
push
out
sub
popa
inc
inc
or
push
inc
or
dec
insl
inc
and
cmp
gs
daa
jecxz,pn
cld
adc
sbb
push
push
mov
mov
mov
xor
mov
adc
mov
or
or
mov
mov
stc
sub
xlat
data16
sbb
mov
popa
lock
jmp
push
das
adc
sub
mov
mov
cmp
sbb
out
imul
sbb
jle
dec
sbb
xchg
adc
mov
jecxz
in
push
push
cmc
mov
cltd
dec
adc
bound
inc
jmp
cmp
js
gs
rolb
push
adc
aam
adc
mov
cmp
mov
sbb
fdivrs
mov
or
mov
mov
gs
loop
mov
stos
fists
pop
xor
das
inc
inc
push
or
mov
negl
xchg
mov
imul
fistpl
std
and
push
sahf
cmp
push
inc
inc
cmp
and
movb
out
mov
sub
cmp
int
push
rol
inc
ret
mov
add
cmpl
aaa
stos
xor
loope
sbb
scas
xor
push
sbb
mov
mov
test
or
push
add
cli
sbb
mov
inc
outsl
xlat
outsl
mov
xor
lea
in
xchg
cli
mov
adc
and
jb
xchg
or
ret
xor
cmp
adc
sbb
or
or
aad
das
bound
mov
push
rdmsr
fstpt
mov
adc
jle
push
test
ljmp
xchg
dec
inc
rol
xchg
push
in
jecxz
ret
sbb
fdivr
push
sub
mov
xor
jmp
fsubr
test
xchg
dec
ljmp
cltd
stos
sbb
insb
outsl
inc
mov
cmpsb
sti
mov
pop
cmp
mov
pusha
add
dec
popf
inc
fldl
pop
sub
popa
xor
push
inc
fwait
test
ja
pusha
inc
mov
pop
imul
add
imul
push
pop
mov
test
int
fbstp
mov
or
ret
jmp
pop
dec
adc
mov
sbb
jmp
data16
adc
into
pop
sub
insl
pop
movsb
add
in
ret
mov
cmp
outsb
jns,pn
xor
mov
lock
inc
sub
xor
inc
sbb
ss
adc
mov
cwtl
cld
rolb
jp
cmpsb
stos
mov
dec
insb
mov
mov
std
cmp
in
inc
xchg
mov
mov
call
push
sbb
mov
sbb
ficompl
test
mov
sahf
cmp
jg
jle
push
cmp
cmc
sub
insl
xchg
cmpb
fildll
and
mov
ss
sbb
fdivrp
cmp
ja
popa
stc
push
pusha
into
adc
mov
cmp
int
hlt
aaa
push
aam
scas
sub
mov
mov
push
pop
scas
cmpsl
xor
daa
pop
push
lock
aaa
in
dec
pop
pop
test
pop
pop
add
aaa
mov
push
subl
gs
out
lahf
call
push
and
jnp
gs
aaa
mov
and
leave
or
or
push
lock
mov
aas
mov
mov
mov
sub
lds
mov
lods
insb
xor
pop
sbb
sbb
js
add
dec
add
in
cmc
mov
pop
and
pop
divl
and
or
mov
fcoms
shll
sbb
push
fwait
mov
mov
stos
mov
sbb
and
adc
push
and
and
jge
adcb
jmp
sub
and
repz
js
mov
into
xchg
aas
jge
jbe
mov
lods
iret
test
mov
std
mov
push
adc
in
push
int3
inc
mov
add
std
test
add
filds
mov
fwait
pop
pop
mov
cmpb
push
ds
testb
inc
je
jbe
mov
lds
mov
bound
aaa
out
lcall
jb
imul
leave
imul
mov
pop
je
jle
shr
push
cmpb
xchg
shrb
fwait
mulw
stc
out
clc
and
push
lret
pop
sub
push
cs
test
pop
lret
mov
xor
or
dec
rcl
lds
mov
ljmp
fcoml
rol
inc
imul
push
rolb
pop
aam
in
ficoms
cmp
inc
cmp
out
decb
movsb
mov
pushf
xchg
out
jecxz
out
jae
xor
je
mov
sti
inc
lock
das
mov
add
int
aaa
adc
sub
jmp
push
mov
dec
add
pop
fisttps
push
mov
mov
arpl
and
jnp
jle
nop
ret
push
mov
dec
testb
imul
mov
pop
xor
je
fists
cmpsl
in
xor
data16
je
mov
pop
mov
fidivrs
pushf
jg
scas
fs
stos
xchg
add
adc
inc
lcall
data16
loope
scas
mov
lods
lcall
add
fldt
shrb
std
lds
push
pop
inc
mov
cmp
sub
or
xchg
cltd
push
cmp
mov
scas
push
xor
and
daa
add
jg
lcall
addr16
into
and
and
and
jecxz
popf
cmpb
mov
sbb
iret
mov
push
xchg
mov
rcr
add
push
pop
lods
js
movsb
std
dec
mov
jmp
sub
adc
js
in
stos
jl
jbe
idivb
icebp
cmc
andl
dec
cs
push
add
cmc
pop
adc
pop
sbb
in
hlt
jmp
xor
into
lahf
cltd
clc
mov
pop
sub
mov
push
xchg
sbb
or
push
adc
jb
in
xlat
cmp
jmp
fiadds
pop
les
push
mov
cmc
add
lds
mov
xor
movsb
cmp
fdivl
mov
inc
fimuls
loop
jg
add
pushf
test
xchg
repz
roll
lahf
adc
and
dec
scas
out
dec
push
push
pop
adc
or
mov
lret
outsl
and
pop
cmpsb
mov
xor
xor
mov
cmpsl
and
dec
mov
jno
pop
or
js
and
inc
sub
inc
xchg
cmpsb
movsl
filds
jge
mov
adc
or
jne
xlat
fdivrl
pop
ficoml
fwait
mov
out
and
movsl
mov
mov
out
dec
cmpsl
push
test
out
push
popa
sub
and
mov
ja
sub
nop
cmpsl
int
adc
lods
fiaddl
aaa
aam
pop
lock
scas
arpl
js
js
sahf
or
mov
dec
in
sub
test
lods
cwtl
lret
sub
addb
in
inc
cmp
bnd
ret
lret
push
pop
je
flds
xor
pop
cmp
add
in
cmp
sbb
pop
lods
int3
jb
add
scas
or
into
out
pushf
out
das
add
rolb
and
jecxz
sub
sbb
aad
or
js
shlb
cmp
dec
sbb
imul
inc
pop
mov
cmpsb
enter
mov
lods
clc
js
add
pushf
sbb
mov
test
sub
aas
sbb
mov
pop
push
mov
sbb
and
dec
cmc
jecxz
loopne
inc
inc
movsl
leave
in
or
les
inc
ss
xor
add
xor
dec
mull
pop
cmp
bound
push
jno
subb
cli
stc
mov
mov
xchg
and
fwait
dec
or
cli
xchg
fists
mov
arpl
cmp
and
add
inc
dec
xchg
cld
xacquire
lds
cmpsb
cwtl
add
jecxz
scas
mov
icebp
pop
cli
xchg
and
in
and
or
mov
push
call
pushf
adc
add
mov
in
aaa
xor
stc
xchg
mov
xchg
loopne
pop
mov
imul
mov
dec
daa
and
dec
cwtl
rcll
incl
rorb
cmp
icebp
daa
loope
or
push
jnp
sti
mov
in
mov
dec
add
addr16
fists
lahf
dec
xchg
gs
inc
jne
unpckhps
dec
inc
jmp
add
nop
jnp
out
mov
enter
mov
xlat
sbb
or
nop
lea
lret
leave
js
jno
cmp
xchg
mov
xchg
stc
jbe
lret
fwait
or
jnp
xchg
into
loopne
loop
add
iret
repnz
imul
xor
adc
test
outsl
cmc
movsl
pop
in
inc
fcoms
push
xchg
jle
faddl
jecxz
rclb
adc
sub
dec
mov
cmp
mov
lds
push
test
pop
pop
sub
mov
mov
pusha
mov
lea
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
