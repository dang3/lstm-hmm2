add
add
sbb
add
sbb
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
or
add
add
pop
pusha
add
push
add
add
add
add
add
add
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
jae
gs
bound
push
sbb
mov
add
mov
push
jge
push
inc
pop
dec
mov
fdiv
popf
sub
dec
mov
pop
fnsave
rclb
jg
lds
sbb
mov
inc
xchg
xchg
enter
popf
adc
rol
outsl
vpmaxub
cmp
add
fcoml
loope
xorl
sub
dec
inc
jns
pop
xor
xor
mov
iret
into
negl
adc
loopne
loope
imul
sbb
repz
add
cmp
orl
xchg
stc
cld
push
jl
stc
pop
mov
div
push
loope
xor
adc
decl
push
cmpsb
xchg
dec
addr16
vzeroall
sub
or
or
sub
sub
or
xchg
push
jle
int3
mov
xor
adc
imul
mov
mov
mov
out
cwtl
push
ja
pop
push
neg
out
sub
mov
dec
mov
pushl
and
mov
insb
pop
jae
lahf
sti
mov
fsts
xlat
xchg
or
pop
add
test
fwait
push
push
shr
mov
jne
outsb
aaa
push
ror
cmp
movnti
lock
or
push
mov
mov
cwtl
orl
cmovp
sbb
push
call
mov
in
jmp
mov
add
loopne
or
mov
cmp
ds
outsl
out
movsl
xor
mov
in
sub
pop
pusha
mov
stos
mov
fcoms
inc
mov
xchg
add
xchg
xchg
lret
mov
nop
pop
out
sub
jmp
push
popa
mov
adc
jbe
fnstcw
leave
cmpsl
js
stos
sti
mov
cs
hlt
pop
outsl
xorb
mov
xchg
push
xor
xchg
and
inc
jecxz
outsl
xlat
dec
dec
rolb
js
pop
pcmpgtd
sbb
out
and
je
mov
adc
pop
cli
out
mov
inc
jb
movsb
xlat
mov
xlat
push
adc
mov
cld
cmp
xchg
dec
sub
hlt
lcall
inc
push
mov
push
jns
push
or
es
xchg
jg
aam
into
int3
jo
repnz
popf
ret
xlat
push
push
jo
gs
scas
cmp
or
mov
push
pop
call
int
int
aad
sub
mov
add
imul
jle
nop
sarb
mov
negl
aad
leave
aaa
adc
rorl
lea
loope
mov
cmp
pop
sti
sahf
fnstsw
ret
cmpsb
dec
push
pop
movzbl
dec
das
mov
or
nop
repnz
dec
hlt
xor
add
rclb
inc
clc
and
or
jb
fwait
jl
jg
mov
stos
mov
jge
sub
out
mov
dec
fwait
and
xchg
cmp
pop
jle
into
aad
dec
push
mov
mov
out
push
repnz
das
frstor
sbb
pop
pop
add
inc
push
and
out
or
call
sub
push
cli
dec
fcmovne
nop
add
scas
xor
loop
nop
inc
pop
inc
push
leave
jno
out
adc
inc
out
push
push
movsb
pusha
pop
fucomi
shrb
jns
out
jns
sbb
jg
mov
or
xchg
fld
dec
inc
js
pop
and
and
jo
and
arpl
loop
into
push
sub
dec
inc
mov
and
dec
jp
sbb
adc
sub
lcall
pop
sbb
movsl
mov
mov
push
mov
mov
add
and
xchg
loope
inc
iret
mov
je
aas
fadd
xlat
jno
dec
mov
dec
inc
sbb
sub
xor
aam
comiss
pop
inc
shlb
pop
sub
push
mov
test
inc
add
lahf
arpl
fucomi
mov
loopne
ret
jne
and
jns
push
sbb
pop
xchg
xor
adc
dec
mov
pop
fdivl
push
cli
movsl
repnz
das
daa
cmc
dec
xor
nop
int3
mulb
jge
mov
mov
lds
aad
lret
call
mov
dec
xor
in
pop
fdivrs
idivb
jmp
and
fbstp
mov
and
in
fdiv
mov
push
push
popa
out
jbe
and
int
daa
mov
lret
dec
mov
or
cmc
or
cmc
int3
jecxz
test
mov
sarl
ss
xchg
dec
lock
xchg
add
dec
iret
out
jmp
add
mov
lods
sub
repnz
je
mov
and
xor
ds
nop
or
cmp
out
nop
mov
outsb
sbb
adc
jmp
mov
dec
cli
imul
loop
mov
ljmp
jp
xor
in
sar
jns
or
cmp
leave
mov
inc
cmp
add
push
adc
xchg
jmp
lcall
lret
and
outsb
push
add
push
jo
mov
cld
cwtl
ss
ficomps
movaps
ds
cmpsb
push
cmpsb
inc
adc
je
sub
and
out
call
lcall
clc
fldcw
cli
test
cmp
daa
and
dec
push
xor
aas
icebp
aaa
fcmovbe
enter
fcomps
lock
adc
hlt
lret
sahf
push
pop
ss
pop
mov
mov
sbbb
ds
adc
dec
andl
pop
inc
std
sub
jle
stos
cmp
iret
sbb
out
push
inc
cld
mov
sbb
and
lret
divb
mov
lods
jl
insl
ja
rclb
loopne
sbbb
pop
jo
int3
icebp
xchg
mov
fst
int3
int
xor
ret
cli
outsb
sub
aas
int3
fstpt
push
cli
cmpsl
mov
shlb
shll
addr16
scas
scas
cmp
movsl
or
sbb
test
test
inc
and
xchg
pop
mov
mov
fs
in
shlb
frstor
cs
xchg
in
sub
push
daa
xlat
xchg
push
outsb
gs
daa
out
push
mov
sbb
push
fimull
adc
cmp
icebp
sbb
sbb
fsubrl
sti
dec
je
fwait
loope
xor
push
pop
xchg
lea
test
movsb
sub
or
jmp
mov
mov
xchg
stc
or
adc
xor
pop
pop
mov
imul
jmp
jmp
add
push
es
sub
icebp
add
cwtl
movsb
pop
add
repz
into
add
cwtl
test
inc
jne
lods
movswl
rcll
cmpsl
sar
out
outsl
dec
or
adc
sub
out
and
add
pop
or
frstor
inc
add
and
aas
mov
std
call
lret
nop
int3
nop
addl
sti
lcall
add
sbb
gs
repnz
cmp
hlt
into
cmp
add
cltd
inc
xchg
ret
pop
daa
adc
out
sarl
addr16
xchg
js
push
sti
clc
lret
loopne
popl
fisubrs
xor
sub
stc
cmp
cmpsl
icebp
push
popa
push
xchg
mov
mov
mov
clc
adc
ja
pop
jl
add
fisubrs
dec
mov
push
les
jle
ret
std
or
ret
repz
sub
pop
fwait
insb
ret
test
add
es
scas
dec
and
push
or
fs
std
std
mov
adc
mov
add
fildl
ljmp
into
stos
cld
or
test
repnz
ret
pop
mov
add
xor
sqrtps
dec
add
xchg
fisubrl
popa
cwtl
shll
mov
pop
outsb
test
push
inc
cltd
insb
dec
iret
jecxz
jmp
pop
mov
pop
xor
adc
xchg
clc
shlb
xchg
cmp
push
sub
test
or
subb
ss
testl
add
test
subb
js
loopne
mov
ret
in
mov
add
pop
pop
pop
lahf
js
lods
pusha
stos
lcall
pop
ds
inc
inc
cwtl
arpl
test
test
push
jbe
sti
lret
pop
inc
and
pop
mov
mov
xchg
outsl
dec
mov
and
jp
push
xchg
pop
mov
and
pop
inc
loopne
insl
mov
pop
sub
pop
xchg
cmpsl
mov
jecxz
int
mov
add
scas
pop
xor
xchg
shll
pop
inc
in
je
roll
mov
jmp
pop
mov
push
mov
mov
push
loop
and
lods
cli
je
popf
imul
cmpsl
xchg
outsb
sub
cmp
pusha
and
jg
leave
imul
adcb
lret
arpl
pop
xchg
add
push
insl
sub
dec
cmp
inc
out
test
lret
stos
sahf
shrb
jns
push
push
fwait
xor
cwtl
shrl
pop
iret
or
dec
or
push
rclb
arpl
sti
add
pop
les
js
std
in
cltd
dec
xchg
jp
mov
lcall
mov
mulb
shr
mov
jnp
dec
jp
and
rorl
in
push
dec
shl
das
sbb
cli
repz
xor
fwait
in
aam
stos
push
xchg
xlat
iret
mov
mov
dec
ret
or
jl
dec
movsl
cli
push
loop
lods
ja
stos
cli
int3
outsb
sub
lahf
jo
push
add
and
cmpsb
add
ljmp
xor
subl
inc
cwtl
fiaddl
stc
jo
in
data16
hlt
adc
push
xlat
fwait
ss
nop
sbb
inc
inc
mov
std
pop
xor
xor
ret
out
std
out
inc
mov
sbb
xor
xor
in
xchg
roll
add
sbb
or
aaa
sarb
test
pop
push
fs
xor
mov
lock
jb
ss
mov
or
fistps
ljmp
add
jg
sbb
inc
dec
push
or
shll
int
and
jecxz
stos
xchg
mov
or
movsl
mov
mov
cmp
cmpb
or
xchg
push
push
ficompl
xchg
arpl
ljmp
test
cmc
pop
dec
das
dec
pop
push
inc
call
xor
push
notl
lret
movsl
popf
cli
arpl
push
push
rolb
mov
das
cltd
jg
add
jmp
pop
js
mov
dec
aaa
ror
leave
scas
or
into
mov
and
movsl
rcrb
arpl
xchg
mov
enter
in
adc
pop
pop
mov
ds
popf
jmp
mov
add
xchg
mov
clc
lods
lcall
mov
xchg
sbbb
add
es
cmp
or
jnp
push
or
lods
adc
fsubrs
push
test
orl
xchg
dec
xor
and
jb
push
jecxz
pop
adc
mov
sub
das
inc
dec
imul
loope
iret
inc
adc
adc
inc
notl
aaa
mov
pop
dec
push
movsb
faddl
shll
rcll
jns
addl
push
dec
jno
xchg
imul
or
push
or
or
daa
mov
shlb
call
lss
adc
push
loopne
dec
and
lods
mov
pop
out
es
add
movsl
jmp
pushl
pop
inc
shll
repz
push
or
js
jbe
mov
mov
mov
outsl
jmp
fbld
add
cmp
jge
xlat
jae
or
int
ret
out
ljmp
daa
movl
stos
cmp
jg
sub
mov
inc
cld
mov
and
dec
out
jmp
adc
test
adc
push
cmp
sub
add
push
fstpl
adc
outsl
notb
inc
inc
mov
fnstcw
clc
add
xor
sub
mov
push
out
mov
or
dec
sbb
push
popa
rcll
adc
lret
bound
mov
scas
pusha
xchg
ret
and
sbb
jae
inc
pop
outsb
jnp
sub
mov
repnz
in
sbb
xor
mov
stos
xchg
je
xchg
adc
or
in
movsb
pop
int
mov
xor
xor
popf
cli
mov
push
imul
mov
sub
hlt
rorb
jmp
lcall
mov
add
jae
jne
stc
and
inc
jge
jne
sub
jl
mov
in
and
or
loopne
sbb
addr16
int3
push
movsl
movsl
data16
cmpsb
lea
test
dec
and
mov
fbstp
add
adc
mov
cmc
fiaddl
xor
dec
mov
push
xlat
decb
icebp
cmp
inc
mov
sbb
or
jp
sarl
testl
inc
push
stos
dec
pushf
pop
lret
xor
or
sub
xor
out
stos
sub
mov
push
mov
repnz
mov
pushf
popf
arpl
ljmp
push
rcrb
lcall
jbe
in
or
lahf
es
cmp
adc
push
inc
ss
jl
in
or
je
and
hlt
ljmp
aad
lret
rcr
lock
in
mov
out
mov
xor
iret
mov
xor
cmp
inc
lret
gs
into
lock
call
cwtl
push
fisubrl
xor
push
in
clc
andl
popa
adc
lods
xor
and
cmp
dec
test
mov
cli
mov
inc
mov
mov
or
cmp
add
xchg
push
dec
cli
jmp
repz
push
inc
mov
and
pop
les
int3
sbb
ret
adc
and
pop
popf
out
in
or
sbbb
call
pusha
ja
fisubs
aad
lods
cs
jne
inc
dec
daa
sbb
mov
sti
sub
cmp
sahf
push
push
mov
shlb
inc
and
push
jo
push
push
adc
lods
scas
lods
flds
inc
mul
movl
push
sbb
jle
mov
dec
dec
add
in
dec
jge
pop
and
enter
jecxz
mov
dec
push
inc
cli
mov
or
aas
into
mov
aas
adc
dec
mov
add
fstl
pop
lret
scas
stos
cmpsl
mov
dec
dec
dec
ljmp
adc
mov
pushf
popa
mov
xchg
dec
lea
mov
mov
cmpsl
add
sarl
or
stos
in
lahf
cli
mov
cmpb
lret
imul
push
pop
dec
bnd
imul
pop
cmpsb
imul
pop
jae
xchg
cwtl
dec
add
inc
push
jo
cli
xchg
mov
mov
sub
push
pop
jmp
and
pop
roll
mov
outsb
sbb
mov
inc
sbb
push
push
cmp
lahf
push
dec
and
jae
jmp
xlat
roll
lock
jle
mov
adc
mov
andl
hlt
and
mov
mov
sub
mov
mov
ret
andb
addr16
mov
in
ja
ss
and
inc
push
inc
stos
pop
dec
sbb
sub
out
xor
bound
push
das
scas
lret
inc
pusha
out
stos
mov
lcall
sub
mov
bound
dec
ret
or
imul
mov
lds
jmp
test
and
inc
test
mov
mov
sbb
lret
push
rcll
fdivr
inc
sbb
xchg
xor
repnz
jg
imul
add
jb
push
or
adc
jb
dec
adc
pushf
adc
mul
jmp
jbe
sbb
and
dec
pop
sbb
sub
cmp
fmull
sbb
jb
jecxz
add
out
iret
push
fsubr
in
ja
in
and
or
in
jle
pop
jns
sbbl
mov
jmp
and
mov
addr16
or
movsb
adc
int
mov
loopne
sub
mov
test
cltd
jo
into
dec
data16
mov
les
jnp
and
mov
loop
sbb
dec
rorb
inc
dec
sub
sub
insb
xchg
lds
sbb
lock
push
xchg
stos
lahf
mov
aad
push
fstps
pop
popa
ja
jecxz
jmp
inc
test
mov
rcrl
shrb
push
andl
hlt
push
and
push
push
xor
mov
ret
test
in
mov
outsb
sub
push
xor
cmc
xchg
xchg
lret
lcall
cmp
sub
into
out
in
sub
dec
mov
mov
sub
pop
outsb
mov
shrb
sbb
pop
dec
or
ljmp
in
test
fs
cmc
mov
or
lock
out
fistpll
loop
push
inc
mov
push
sub
dec
cld
xchg
xchg
xchg
xchg
mov
popa
or
pop
addr16
sti
sbb
mov
jne
popf
rolb
cmp
xor
bound
rcpps
pop
cmp
push
cmpsb
repz
sub
jae
add
xchg
jmp
test
jmp
sbb
push
cmc
scas
fildl
mov
ds
mov
out
pop
popa
lcall
hlt
mov
sti
mov
pop
scas
outsb
arpl
shlb
dec
std
cmp
jl
jmp
sub
cmp
sahf
and
mov
addr16
jl
and
int
sarb
sub
xor
jmp
sbb
mov
xlat
adc
inc
arpl
push
sbb
mov
push
jae
mov
dec
push
cs
cmc
sbb
shlb
mov
pop
out
mov
inc
lds
sbb
dec
pop
rorl
test
enter
and
mov
in
jge
xor
pop
push
outsl
outsl
xor
dec
cmp
jp
cmpsb
mov
popf
mov
inc
lods
xor
inc
out
cmc
push
ss
js
mov
sti
repz
cmp
ror
mov
aas
fldt
push
std
fwait
roll
inc
pop
movsl
push
mov
sub
iret
out
aas
and
popf
mov
pushf
mov
xchg
sbb
inc
cmc
lods
pop
inc
add
mov
mov
cmc
call
mov
rclb
fwait
jnp
bound
iret
sub
sbb
pop
call
xchg
inc
xchg
mov
cmpsl
xor
sbbl
std
jno
xchg
sbb
push
shlb
repz
repnz
imul
call
jae
add
mov
dec
sbb
addr16
cmc
or
push
cwtl
dec
cld
mov
mov
psubsw
out
andnps
sbb
inc
push
int
fwait
mov
testl
call
xchg
mov
and
out
jae
cmp
and
mov
aas
xchg
jns
insl
or
scas
adc
sbb
pop
cmp
pushf
iret
mov
sub
add
movsl
add
pop
xlat
subl
and
mov
movsl
and
js
sbb
es
push
dec
push
ds
xchg
out
inc
or
add
xchg
push
sub
sbb
rolb
add
push
cmp
mov
repnz
lods
insb
cmc
push
aas
dec
or
es
jnp
scas
sbb
adc
cld
adc
mov
xor
lcall
dec
int
stos
sbb
sub
clc
pop
lds
loope
incl
aaa
fidivs
sahf
into
lahf
fs
loop
jae
cmp
insl
and
test
adc
popf
cmp
repnz
mov
cmp
imull
xorb
mov
and
orb
in
and
jle
xchg
leave
cmc
xor
add
ror
sti
fsts
inc
negb
mov
in
outsl
out
out
mov
mov
push
nop
jno
shl
cli
mov
push
bound
push
fldcw
stos
arpl
inc
addr16
sub
ret
lret
dec
adc
icebp
in
pop
arpl
cwtl
loope
pop
inc
jg
fldcw
cmp
xchg
pop
push
mov
inc
jns
out
jl
arpl
out
adc
daa
mov
subl
cmp
adc
and
fdiv
in
push
sbb
dec
inc
pusha
pop
and
mov
aad
fnsave
dec
adc
adc
cmp
adcb
adc
dec
insb
cltd
fsubrp
pop
adc
pop
xor
out
rcrl
dec
pop
xor
cmp
inc
jb
stos
adcl
clc
std
jae
movb
adc
jb
cmp
clc
push
repz
roll
lret
mov
mov
inc
mov
mov
ljmp
sub
aad
sub
dec
dec
mov
inc
aas
jmp
les
das
ds
adc
test
sub
push
inc
aaa
fistpl
sbb
aaa
lock
hlt
dec
pop
jmp
adc
push
xchg
fwait
pushl
addr16
or
cmp
xchg
lods
scas
clc
sub
mov
cmpsb
xchg
iret
xchg
idivb
popl
dec
sahf
and
test
into
xlat
pushf
mov
lock
movsb
sub
ret
mov
stc
ja
or
inc
int
scas
add
inc
cmp
sbb
outsl
cmp
add
push
scas
pop
sahf
dec
cld
insb
push
out
cltd
das
mov
cli
jl
pop
in
lcall
jns
in
sbb
xchg
pop
sarl
jmp
push
cmc
or
inc
repz
movsl
ret
stc
adcl
fildl
xchg
sarb
xor
and
mov
mulb
ja
repz
das
and
xor
insl
pop
add
cs
sbb
insl
xlat
jne
adc
and
xor
or
xchg
lods
lods
outsl
dec
dec
ja
lods
mov
jb
cmpsl
jmp
lds
pop
cwtl
in
sqrtps
sub
pop
mov
leave
inc
pop
mov
mov
loope
mov
in
jne
mov
out
or
and
xor
cmc
int
add
and
std
test
movb
out
out
fldl
ds
dec
jecxz
int3
andb
repnz
mov
aam
jg
cmpsl
xor
sub
mov
fs
jns
je
outsl
insb
add
std
cmc
mov
or
jmp
lock
jmp
sub
aam
enter
pop
jmp
xchg
aas
jp
push
imul
fistpll
nop
adc
push
pop
push
ret
and
sarb
daa
fnstenv
push
xlat
enter
daa
pop
mov
xchg
clc
repz
out
lods
pushf
pop
dec
sub
sub
test
aam
xor
jmp
dec
outsl
stos
xor
xchg
xchg
push
movaps
bound
mov
nop
cs
xchg
cmp
jg
add
mov
mov
cmc
mov
cmpsb
leave
aam
test
dec
ffreep
out
add
add
xchg
mov
sbb
movsb
push
outsb
out
das
and
repz
sbb
or
test
cli
cmpsb
xor
sub
dec
dec
mov
jge
mov
cli
test
dec
cmpsl
mov
imul
xor
dec
scas
outsl
jnp
fistl
stc
xor
dec
out
lea
call
lods
cmc
inc
fmull
mov
dec
jno
push
int
or
xor
cwtl
cmpsb
ljmp
and
call
mov
mov
sahf
mov
enter
mov
mov
xchg
ss
fstl
xchg
inc
or
fistps
cltd
loopne
dec
adc
dec
pop
test
out
pop
push
cmp
aaa
inc
ficoml
lds
xchg
ret
and
sbb
in
test
jle
movsb
or
jge
ljmp
test
mov
sub
push
adc
sbbl
cmc
mov
xor
push
push
mov
scas
mov
ud2
push
adc
mov
jb
cmp
shl
jge
push
out
mov
mov
sbb
mov
and
and
jle
jno
push
cmp
dec
cmp
and
mov
xor
sbb
js
mov
fidivl
movsl
iret
test
cltd
popf
cwtl
clc
flds
mov
das
add
cmpsb
daa
xchg
es
adc
icebp
cmp
movsl
mov
mov
subb
add
and
into
mov
sarl
std
add
mov
jle
ret
enter
popf
les
fwait
inc
mov
orb
lods
pop
iret
fadd
outsl
mov
cmp
mov
mov
call
inc
insl
ljmp
test
outsl
repnz
push
push
outsb
mov
adc
jp
mov
mov
test
add
sbb
test
scas
add
mov
mov
mov
imul
mov
lret
in
fimull
cld
xchg
cmpsb
pop
aam
sbb
mov
dec
clc
lret
orb
or
xor
adc
dec
pop
loopne
mov
aas
jle
xchg
or
adc
xchg
mov
add
jge
in
mov
sbb
gs
into
push
pop
pop
cmpsb
jbe
jo
push
fcoms
inc
arpl
fistps
or
insl
mov
pop
inc
pop
mov
ja
call
cmpsl
popa
push
imul
sarl
lods
lds
mov
jne
sti
mov
sub
adc
stc
jne
xchg
adc
xor
notl
sbb
adc
dec
jecxz
mov
sti
test
ja
sbb
or
jae
dec
push
push
cmp
orb
xor
test
cltd
jne
xor
scas
lods
and
mov
push
xor
xor
pop
add
sbb
mov
ret
and
daa
loopne
sbb
push
push
add
pop
ret
inc
jo
sbb
es
js
cmp
outsb
add
dec
mov
in
sbb
and
add
xchg
cltd
xchg
mov
or
lods
xchg
add
pop
xlat
cmp
mov
dec
fsubrs
push
cmp
test
in
or
ja
cld
and
in
push
fwait
xor
lock
outsl
rcrl
adc
aad
cmp
jp
or
sbb
adc
std
incb
mov
mov
cmp
leave
shll
push
add
in
or
jns
fwait
push
or
repz
cmpsb
outsl
pop
dec
jmp
adc
cmpsb
and
sub
jmp
shlb
int
xor
add
ret
pop
leave
sub
leave
bound
jge
addr16
sbb
nop
dec
cmc
lret
xchg
sbbl
add
ljmp
inc
xlat
inc
push
out
shl
jno
fidivs
dec
lock
in
roll
mov
push
add
cmp
in
dec
push
mov
jns
gs
lret
movsb
push
ja
and
sbb
dec
or
addr16
xlat
or
pushf
stos
fs
int
sti
hlt
sbb
sbb
push
push
dec
and
ja
daa
mov
imul
push
inc
loop
fistps
popa
adc
lds
add
nop
push
aam
dec
sbb
jne
mov
loopne
and
repz
sbb
sbb
sarl
shlb
xchg
fldcw
xchg
push
cltd
pop
ds
and
lock
fdivr
movsl
jno
leave
sub
push
in
push
push
jl
push
popf
mov
in
lds
test
mov
imul
sti
stc
and
imul
push
or
sbb
jp
divb
or
fnstenv
cmpsl
sub
test
adc
les
and
loop
js
or
or
cmc
sub
cmp
sub
fwait
xor
pop
test
ds
sub
iret
lods
xor
add
js
repnz
push
out
sbb
js
fwait
xchg
jno
and
dec
xor
mov
in
ljmp
in
pop
stos
or
pop
sbb
mov
sti
pushf
mov
data16
push
dec
iret
mov
push
push
cmp
movsb
out
imul
xchg
inc
int3
cmc
inc
idivb
inc
aas
lcall
cmc
jne
dec
clc
mov
adc
sub
pop
pusha
push
fadd
sbb
shlb
popf
or
mov
loope
mov
or
dec
sbb
mov
push
inc
cmc
cmc
test
ret
xchg
mov
idivb
mov
cmp
inc
shlb
popa
mov
popa
stos
push
jno
inc
outsl
push
add
loopne
cmp
rclb
shrb
pusha
rcrl
lods
xchg
jae
sbb
jp
mov
dec
sub
nop
lods
mov
xor
mov
or
out
insl
xor
xor
inc
or
pushf
scas
and
mov
cmpsl
sub
jbe
popa
push
add
dec
adc
mov
out
lahf
insl
andl
dec
mov
xchg
lds
mov
mov
aad
adc
and
imul
jns
js
faddl
cmp
lcall
or
sbb
fidivl
mov
mov
andb
jnp
leave
cmp
in
sarl
push
les
stc
or
jo
mov
movsb
jns
mov
dec
dec
mov
push
sar
lds
inc
adcb
dec
les
test
pop
addr16
dec
push
adc
dec
add
rorl
test
xor
leave
xchg
push
or
pop
cmpb
add
addr16
lds
daa
sub
call
addr16
ret
les
or
mov
pop
push
daa
jmp
je
sarb
adc
lock
push
add
divl
bound
je
lcall
enter
jl
imul
jge
and
add
jne
add
inc
clc
push
sbbb
outsl
popf
dec
fistpll
mov
loop
xor
add
jne
adc
pop
popf
pop
clc
xchg
rcll
daa
or
sbb
lahf
decb
stc
jecxz
outsb
xchg
fnsave
pushf
sub
lret
es
ljmp
cmc
xchg
add
int3
popf
push
scas
mov
push
sub
fldl
xchg
insb
mov
jl
cmp
aad
ds
leave
push
xor
inc
xor
jno
iret
js
xor
adc
nop
lret
repnz
inc
movsb
mov
push
dec
movsl
lret
sub
and
jp
dec
cmp
xchg
mov
clc
and
shrl
pop
pushl
sub
and
movsb
pop
pop
pushf
les
xchg
jecxz
cmp
test
push
lcall
push
cmp
mov
jb
in
or
mov
cmc
and
data16
jb
out
inc
lret
in
sbb
ja
mov
dec
or
outsl
imul
or
mov
stc
dec
mov
ficomps
nop
popa
inc
push
jle
jmp
dec
or
add
cs
sti
subl
jbe
cmp
and
in
daa
int3
jae
dec
es
mov
lods
jmp
cmc
cmpsl
test
fildl
rorb
test
mov
stc
cmp
leave
sub
xor
adc
cmp
enter
loopne
cmc
and
test
push
jno
xor
das
out
in
stc
xchg
push
arpl
add
popf
inc
xchg
cli
sbb
test
xchg
xorl
mov
push
outsb
pop
cmpsl
xchg
movsb
stos
jle
sub
mov
das
repz
in
mov
inc
dec
mov
ret
inc
mov
filds
mov
lds
addr16
mov
xchg
adc
dec
rolb
mov
das
jp
and
mov
imul
add
ret
add
push
addb
pushf
pop
je
leave
mov
dec
scas
cmp
icebp
add
sbb
or
popa
push
pusha
or
dec
push
xchg
add
jnp
aam
jmp
xchg
notb
gs
push
out
lcall
sub
mov
adc
xchg
inc
adc
xor
add
arpl
xor
inc
cltd
add
stc
jl
jbe
faddl
repz
pop
pop
pop
dec
das
xchg
mov
mov
mov
aam
jmp
cli
je
aaa
pop
clc
jno
enter
jp
inc
ficoms
sbb
aas
xchg
adc
add
aaa
in
sub
shll
cmp
push
adc
cmp
xor
jecxz
cmpsl
lds
inc
xlat
xor
repz
and
push
or
ret
or
aaa
movsl
addr16
dec
cmpl
out
push
les
lock
mov
jmp
popa
sahf
pop
pusha
push
xchg
in
push
adc
repz
jmp
lods
or
ljmp
in
sub
pop
addr16
lcall
xchg
addr16
into
sbb
xor
mov
repz
push
mov
sub
repnz
add
pop
pop
adc
add
jle
pop
je
bound
push
add
mov
test
or
dec
cmpl
pushf
add
inc
xor
ja
pop
push
jle
sti
jmp
mov
pop
mov
push
xchg
mov
aaa
mov
sub
xchg
loop
fdivrl
arpl
xchg
insb
lcall
jnp
lahf
and
cmp
mov
jnp
mov
insb
mov
push
pop
and
sub
sahf
scas
add
sub
mov
cltd
cltd
rcrb
pop
stos
std
cltd
sub
mov
pop
addl
into
popa
push
or
dec
or
out
aas
stos
or
dec
shlb
orb
xchg
push
mov
pop
push
adc
dec
inc
and
xor
and
mov
and
or
or
daa
icebp
ja
mov
addr16
ljmp
pop
push
out
mov
push
and
dec
xor
jae
repz
fisttpl
stc
pop
ficompl
stos
insb
test
mov
push
dec
dec
mov
mov
in
or
jb
addr16
push
insl
jo
or
cmpsl
ljmp
ret
inc
mov
xlat
out
cmp
fsubrl
cmp
lods
fxtract
jae
gs
push
sti
pop
das
lods
lcall
aam
mov
or
mov
mov
jle
imul
push
je
enter
mov
scas
or
scas
mov
mov
or
push
inc
and
and
xchg
aaa
test
mov
rorl
xchg
negl
inc
inc
insl
lods
add
inc
pop
imul
mov
lds
les
dec
lahf
cmp
loop
lret
cli
adc
fidivrl
jmp
mov
push
xchg
pusha
push
xchg
in
inc
sarw
inc
push
push
mov
and
xchg
xchg
aad
pusha
leave
out
icebp
push
in
pop
cli
popa
mov
pop
incb
inc
mov
push
les
mov
xchg
sbb
fs
pop
add
test
sbb
fnstenv
inc
cmpsb
dec
or
push
push
cmp
inc
adc
pop
inc
stos
outsb
out
jmp
addr16
mov
dec
mov
nop
xor
loope
xchg
mov
xor
cwtl
insl
sub
insl
lret
jecxz
pop
dec
popf
fs
ja
cmp
cmp
pop
mov
fsubp
inc
andl
daa
test
xchg
lock
sarb
mulb
repnz
cmp
jle
jecxz
sub
in
lods
cwtl
lea
dec
ss
jae
lret
call
out
xchg
scas
xchg
fiadds
fdivrs
or
and
mov
ficomps
ror
outsb
and
ret
popa
aad
test
jbe
les
mov
sbb
cmpsl
add
sbb
lahf
sbb
xchg
jo
mov
idivb
and
pop
dec
test
jmp
sti
cmp
fs
mov
aas
mov
repz
pusha
push
cmc
test
mov
and
sbb
gs
xchg
cmp
push
xor
in
sub
cmp
fcomps
mov
fs
pop
mov
jns
adc
dec
lock
pop
out
or
xchg
inc
mov
in
arpl
cmp
sbb
cli
fwait
arpl
add
jno
nop
xchg
insl
sub
pop
mov
cmpl
sbb
xor
aaa
push
cmp
or
pop
add
inc
mov
iret
fwait
mov
mov
fwait
subb
lods
clc
clc
mov
xor
xchg
repnz
rolb
and
xchg
xchg
or
stos
push
cwtl
cmp
and
pop
and
jne
jb
sbb
push
andl
or
cltd
in
push
mov
scas
inc
mov
cltd
stc
xorb
sub
ja
jnp
add
dec
xchg
stos
sub
sub
out
fcmovne
test
std
xchg
mov
aam
xchg
xchg
rclb
lods
push
pop
xchg
jae
jmp
dec
ucomiss
adc
in
dec
mov
jnp
call
xchg
push
fcomps
sti
pop
fsubr
fiaddl
sub
fstpl
sub
mov
imul
pop
pop
imul
lcall
je
pop
xchg
add
mov
cld
in
xchg
sub
jp
or
dec
push
jnp
ret
adc
rol
or
int
inc
dec
sub
stos
dec
lock
fsts
cmc
test
adc
xor
jae
dec
hlt
dec
inc
pushf
pop
push
xor
mov
or
pusha
xlat
incb
mov
scas
pop
mov
sbb
cld
xor
mov
imul
cltd
cli
and
cmp
xlat
mov
pop
in
push
ret
adc
lcall
push
sub
sub
and
js
pop
test
or
or
testl
cmpsb
adc
into
lahf
pusha
add
mov
pop
and
int3
add
in
fst
popa
hlt
xchg
outsl
das
repz
xor
or
mov
or
faddl
cltd
push
push
fcoml
xchg
mov
mov
pop
lods
mov
inc
cmc
mov
loop
mov
repz
mov
lods
xchg
iret
cmc
fnstenv
idivl
addl
mov
sbb
pop
cwtl
icebp
movsl
scas
push
push
push
jbe
add
push
sub
hlt
lock
pop
adc
mov
inc
cmp
mov
mov
push
ss
sbb
scas
pop
cld
xlat
inc
xchg
xchg
dec
jo
sahf
loope
dec
xchg
call
cmp
repnz
clc
aaa
inc
lret
and
mov
sarb
push
inc
vmovaps
and
mov
shll
in
adc
in
test
or
push
lret
lds
dec
push
and
incl
ss
push
enter
or
mov
adc
mov
js
mov
pop
movsl
inc
jecxz
xor
and
scas
lods
mov
rorb
nop
lods
sbbl
cmp
lahf
mov
lods
decl
mov
sbb
xchg
into
int
fwait
pop
sahf
add
adc
popl
out
pop
lret
mov
js
and
imull
cmp
fists
jle
test
insb
test
mov
dec
jnp
mov
loop
xchg
pop
push
jl
lahf
or
cmc
lcall
mov
and
mov
jecxz
in
sti
or
jmp
jge
lahf
xor
mov
rclb
add
push
adc
pop
mov
je
std
outsl
sub
push
or
loop
std
movsl
push
test
inc
cmpsl
mov
dec
push
inc
jp
jge
and
ss
pop
sbb
movsb
pop
decl
rolb
xor
jno
jmp
out
test
mov
fcmovne
imul
mov
ljmp
add
push
outsb
ljmp
loope
test
mov
loop
test
cmpsl
jg
lsl
mov
ret
jae
and
gs
mov
mov
jbe
inc
lods
pop
je
and
and
ss
aaa
mov
sbb
adc
arpl
dec
xchg
sarb
xchg
rclb
int
or
push
add
leave
xor
loop
decl
push
cmp
fmulp
jg
pop
iret
dec
cli
addr16
inc
lock
pop
fidivrs
mov
xor
inc
shrb
mov
addr16
sbb
or
rol
mov
inc
mov
cmp
scas
pop
test
arpl
sarl
adc
mov
paddd
sbb
jnp
sar
push
loope
inc
mov
mov
add
sub
les
dec
and
lods
stc
std
ljmp
mulb
lods
insl
fnstcw
flds
push
int3
aam
shr
arpl
daa
push
ja
mov
xorb
and
ds
inc
push
sbb
sub
sbb
jb
out
movsl
pop
inc
dec
popf
ja
subl
dec
ljmp
pop
clc
mov
shr
jne
mov
test
lret
ja
push
sub
pop
xchg
and
cmp
mov
push
sti
aas
in
mov
mov
enter
test
mov
pop
xchg
mov
lods
cmp
jbe
in
or
repnz
bound
fists
mov
icebp
negl
cmp
insl
loop
leave
scas
pop
scas
out
or
xorl
mov
sahf
add
cmpsl
clc
fstpt
sub
mov
cwtl
xchg
rcrb
push
scas
nop
jle
jge
inc
sub
daa
or
dec
dec
xchg
ja
rolb
mov
test
subb
push
dec
cwtl
dec
add
shl
inc
pop
fsubp
dec
jbe
jmp
into
lds
push
pop
ret
in
push
rorb
in
movsb
jns
shlb
clc
xlat
cmp
xchg
xchg
arpl
out
test
or
mov
adc
movsl
mov
xchg
xchg
subb
cmp
mov
das
sub
cmpsb
cwtl
mov
sbb
inc
aas
jge
pop
and
sub
xchg
jae
les
fildl
adc
mov
and
cli
mov
push
mov
xlat
push
movsl
mov
popf
out
sub
pop
aad
scas
gs
sub
push
mov
cmp
push
cs
xchg
or
and
ret
pop
cmp
mov
xor
mov
cwtl
jl
xlat
adc
push
pop
xor
out
jmp
das
cmp
movsl
mov
imul
jle
push
pop
pop
out
cmp
push
mov
xchg
mov
sbb
add
push
imul
mov
insb
pop
jmp
add
rcll
lcall
lcall
mov
push
xor
xor
cmpsl
jo
sbb
lea
aam
jb,pn
mov
inc
ret
sbb
call
jnp
pusha
popf
jb
jnp
dec
jle
or
push
sub
xchg
addr16
cmp
push
sub
mov
sti
push
cltd
dec
hlt
mov
xlat
movsb
adcl
insb
adc
cmpsl
in
dec
and
das
leave
stos
pop
inc
daa
add
pop
fs
jbe
ret
push
mov
aas
sub
push
xchg
out
xor
mov
cwtl
rclb
and
out
std
scas
sub
push
fcoml
lods
cmp
push
out
iret
imul
cmc
jl
int
xchg
cmc
or
or
popa
pushf
pop
pop
adc
fdivrs
xchg
addr16
push
pop
jl
mov
adc
test
and
sub
cmp
outsb
xor
ljmp
insl
and
das
int3
mov
mov
stos
rolb
lea
dec
sub
pop
pushf
xchg
jno
cmc
sub
xlat
xor
mov
rcr
xchg
add
xchg
jb
inc
mov
int3
pop
sbb
adc
mov
sub
or
out
pop
push
fs
loop
pusha
in
inc
sbb
scas
scas
add
lcall
aam
xor
lret
int3
in
mov
jle
stos
ret
les
imul
adc
pop
mov
iret
dec
mov
scas
and
mov
andl
mov
add
movsl
or
iret
sahf
hlt
jmp
out
xchg
rclb
int
ds
daa
sub
jns
scas
insl
hlt
test
mov
adc
fwait
outsl
cmc
daa
dec
pop
mov
push
xchg
fdivs
sbb
pusha
pop
popf
sbb
jmp
fstps
ret
adc
gs
rcrl
push
push
scas
sub
repz
inc
js
xor
rorb
mov
inc
lcall
xor
cmp
and
test
repz
das
imul
jge
dec
icebp
pop
shr
push
xor
cmc
xchg
es
jp
fs
out
jns
call
ss
sbb
int
jg
cltd
push
cmp
and
push
inc
sub
mov
adc
jle
cld
test
sbb
xor
add
cmpsl
push
test
mov
sbb
lret
and
por
jbe
int3
mov
cmovbe
mov
pop
sbb
cmp
movsl
popa
push
pop
ljmp
sub
js
pop
add
dec
inc
outsl
lds
arpl
or
mov
inc
xchg
test
jmp
jle
cltd
ljmp
jne
add
pop
or
lcall
xchg
lret
and
jecxz
out
jge
xchg
les
rcll
movsb
mov
call
sahf
fisttpl
sub
popf
sbb
ret
jbe
rcrl
dec
jge
lret
movsl
mov
call
xchg
ds
mov
pop
or
imul
pushf
mov
or
js
fld
popa
dec
and
jecxz
lea
sub
jp
pop
es
inc
imull
inc
xchg
inc
push
jmp
out
sub
outsb
sbb
jge
iret
inc
xlat
mov
ljmp
inc
push
leave
popl
std
sbb
cli
nop
pop
jle
pop
jmp
bound
cmpsb
dec
dec
and
orb
mov
leave
std
xor
lods
int
sub
adc
xchg
jmp
mov
call
push
fs
das
cmpsb
dec
sbb
out
pop
ljmp
cmc
sub
or
mov
sbb
push
fs
pop
and
loop
scas
sub
cmp
or
sub
jno
into
aad
push
mov
daa
adc
sub
push
dec
and
das
stc
sbb
fildl
add
fsubs
xor
sbb
sub
mov
sbb
push
and
add
jmp
push
push
inc
jne
sti
adc
jmp
mov
and
daa
add
cwtl
jg
adc
int
push
pop
int
sub
test
sub
xchg
add
insl
push
and
or
pop
push
outsb
and
mov
sti
enter
js
popa
mov
decl
repz
lcall
fcmove
sar
sbbl
dec
cld
cltd
das
popf
test
sbb
mov
push
lock
lcall
add
mov
xchg
pop
out
test
loop
pop
mull
fldenv
adc
inc
pusha
scas
push
xchg
push
les
andl
push
sbb
mov
jmp
mov
jbe
sub
push
lods
stc
mov
pusha
push
frstor
nop
xchg
les
ljmp
push
cmp
shrl
lea
dec
or
inc
adc
sub
cmp
xor
mov
addr16
push
mov
mov
sbb
pop
xchg
pop
pop
fidivs
add
mov
outsb
add
ret
sbb
jge
nop
jne
cld
bound
divb
das
or
jge
in
xchg
stos
dec
jmp
push
pop
testb
cmpsl
dec
or
call
push
sarl
sbbb
daa
inc
aaa
inc
fisubl
movb
andl
imul
orl
int
shll
and
cmp
je
inc
dec
test
mov
or
addr16
sub
sub
imul
in
sbb
lret
mov
ficoml
fadds
pushf
jnp
and
js
add
push
daa
jmp
testl
fisttps
xchg
inc
shrl
inc
xor
jp
push
in
mov
mov
xchg
sub
lcall
inc
jo
inc
xor
lods
in
xchg
dec
sahf
cmp
adc
push
stos
sub
mov
lods
mov
int3
lods
in
inc
les
lret
aad
push
clc
mov
cltd
idivl
and
add
rcrl
pop
sub
sbb
int3
std
pushf
mov
lahf
ds
mov
shlb
mov
sub
in
mov
ds
mov
cmp
cmp
or
es
adc
cmp
jge
test
push
cwtl
jmp
sub
insl
inc
mov
clc
xor
xchg
jnp
hlt
mov
loop
sbb
rorl
sbb
cs
mov
addr16
dec
mov
or
ss
enter
mov
test
jg,pt
dec
xor
insb
stos
jle
cld
xor
jae
mov
jne
adc
adc
push
xchg
dec
ja
jecxz
jge
push
sbb
data16
inc
mov
pop
push
sub
jo
das
adc
xor
inc
mov
mov
cmp
shr
xchg
xchg
cmpsb
arpl
sbb
cmpsb
aad
daa
push
cltd
push
jne
clc
push
insl
xchg
xchg
adc
inc
or
in
sarl
sub
dec
mov
and
pushf
addr16
adc
mov
mov
lods
adc
push
sahf
xor
fistpl
sub
xchg
add
mov
cld
mov
adc
daa
adc
xchg
ja
mov
xchg
lock
aas
ds
inc
mulb
enter
movb
mov
xor
dec
xchg
out
fsubrs
sbb
pop
sub
fsubrs
pop
mov
lock
dec
pop
or
lahf
or
sbb
insb
push
fwait
aam
dec
cwtl
std
leave
dec
lret
fnsetpm(287
in
mov
xor
ja
add
or
mov
or
clc
sbb
adc
inc
xchg
movsl
imul
jnp
repnz
or
das
loopne
xor
xchg
push
mov
ret
xchg
and
fsubrs
xchg
loope
mov
icebp
lea
inc
enter
insl
cmc
mov
pushf
ds
push
mov
js
dec
js
movsb
popl
and
mov
fdivr
pushf
push
mov
mov
jle
lcall
movsl
dec
pop
lds
xor
jnp
lahf
mov
cmc
jnp
cmpsb
and
xorb
ret
and
lods
scas
inc
repz
jmp
fistpl
and
xchg
std
nop
adc
xchg
pop
mov
js
aam
pushf
cltd
jl
inc
dec
outsb
jns
loop
cltd
mov
or
es
mov
cmp
movsl
adcb
and
mov
push
jno
mov
jno
dec
cmp
popa
cmp
xchg
nop
idivl
mov
push
sbb
arpl
mov
mov
sti
xchg
xchg
pop
dec
mov
cmp
daa
inc
or
pushl
dec
enter
mov
add
notb
popa
inc
xchg
jns,pn
lret
xlat
insb
out
pushf
lahf
cwtl
jecxz
inc
out
cld
jmp
sub
outsl
push
icebp
int3
fprem
pop
stc
icebp
data16
fiaddl
mov
jg
lcall
adc
shrb
cltd
inc
sub
or
pop
pushf
xchg
insb
mov
ljmp
and
dec
clc
pusha
sti
pop
pop
and
aaa
cmc
mov
add
stos
lret
jno
cwtl
add
loope
push
xchg
gs
xchg
mov
iret
mov
in
mov
xor
inc
adc
fucom
dec
cmp
lret
pop
lcall
mov
int3
sbb
inc
nop
xchg
fwait
loop
in
sbb
and
or
mov
xchg
push
xchg
out
xor
adc
incb
vpmadcswd
adc
or
jae
mov
lret
inc
das
mov
sub
add
imul
mov
xchg
sub
jnp
sub
cli
push
addr16
pop
add
pop
les
addl
ret
adc
push
and
js
jge
rol
das
xor
mov
lret
pop
xchg
popa
and
add
jns
or
out
dec
mov
andl
js
push
nop
icebp
pop
outsb
mov
push
std
add
sub
jl
data16
pop
pop
daa
js
clc
push
mov
pusha
or
xor
pop
mov
adc
and
pop
add
popa
pop
fldt
out
cmp
fs
adc
and
inc
lock
inc
mov
out
mov
push
jno
cli
movsb
inc
push
cs
mov
lret
pop
jecxz
inc
push
inc
aam
subb
movsb
cmp
pop
cmp
dec
mov
in
das
in
mov
lea
outsb
aad
adc
jno
std
adc
popf
inc
push
cld
or
jns
movsl
lods
aad
push
cmp
stos
mov
xchg
out
lahf
je
inc
jnp
iret
xchg
aam
adc
cmp
sub
adc
mov
aad
sub
mov
cltd
pop
iret
imul
ja
jbe
jno
xchg
ja
cli
add
hlt
jne
gs
fdivl
xor
mov
stc
lcall
mov
test
mov
repz
sub
cmp
sbb
mov
scas
sbb
add
and
jne
insl
lea
test
jne
mov
mov
pop
and
xlat
sub
decl
add
in
xor
mov
jbe
es
mov
xor
outsb
in
gs
pushl
xor
jl
add
mov
sub
fdivrs
leave
shlb
or
fisubrl
cld
shl
adc
sbb
arpl
sbbb
push
mov
jnp
out
mov
sahf
mov
and
mov
inc
sti
addb
mov
out
sub
inc
cltd
call
push
jae
les
pop
jbe
outsl
aad
sbbl
mov
insl
push
rcrb
mov
dec
cmp
test
cwtl
mov
cwtl
shll
mov
cmp
or
dec
and
adc
clc
xor
jmp
cmpsb
cmp
jp
dec
icebp
jno
mov
in
dec
xchg
lock
out
mov
sub
and
shl
lods
dec
divb
jle
inc
mov
fsub
outsl
in
popa
push
mov
pop
cmp
icebp
push
mov
outsl
sbb
stos
jno
fmuls
push
add
xor
pushf
call
xor
repnz
adc
sub
rep
pop
add
xor
mov
sti
cwtl
ret
stc
xchg
stos
cld
cmp
mov
jl
sbb
push
xor
pop
push
xchg
push
push
jge
cmp
jb
aas
inc
out
mov
lds
xor
mov
xchg
inc
leave
scas
out
jge
sahf
pop
fidivrs
xlat
insb
push
cmp
stos
jmp
inc
in
bound
xchg
cmp
cmpsl
xor
ss
nop
movsl
mov
push
nop
or
ljmp
add
pop
dec
pop
leave
lods
bnd
incb
pop
xchg
pop
cltd
daa
push
and
mov
ljmp
clc
mov
pop
repz
dec
movsb
adc
int3
int3
add
or
cmpsl
cmpsb
ss
push
ror
in
test
pop
and
push
ss
or
sbb
les
and
ret
sbb
jo
rcl
cmp
add
stos
mov
out
lods
test
xor
insb
lret
and
pop
setnp
mov
xchg
push
mov
cmp
push
or
adc
lcall
jno
add
or
fs
lret
popa
pop
stc
add
mul
mov
and
push
xchg
fs
into
std
sub
xor
in
jl
adc
add
cmpsb
ja
adc
inc
or
loope
add
lds
sbb
test
push
jno
xor
inc
add
pop
xchg
fadds
cld
mov
test
push
fistpll
shrl
xchg
mull
sub
aaa
sahf
push
ljmp
jb
xchg
mov
inc
push
sbb
cmp
dec
mov
cmp
cmp
iret
sub
mov
sbb
sbb
pop
into
outsb
loope
jb
jno
iret
mov
gs
sahf
mov
cld
bnd
test
adc
jg
call
lds
mov
test
repz
dec
cmpsl
push
mov
mov
cmp
xchg
movsb
test
mov
jecxz
das
inc
xlat
jns
inc
mov
aad
loop
fildll
mov
pop
outsl
mov
sub
inc
fists
inc
mov
or
jo
dec
jmp
out
divl
out
iret
in
test
iret
fs
mov
repnz
imul
sub
gs
add
push
mov
cltd
xchg
pop
pop
lea
mov
mov
stc
fidivl
mov
or
imul
fwait
cmp
xchg
es
leave
adc
mov
shrb
jmp
add
or
cld
add
ret
cmpl
mov
mov
mov
cmpsb
divb
in
adc
fiadds
pop
mov
cli
imul
mov
repnz
inc
xchg
xchg
mov
adc
mov
ficoms
shlb
ud1
sbb
pop
in
xor
mov
lahf
in
pusha
int
dec
pop
mov
insb
mov
in
mov
cmp
movsl
lods
loope
outsb
mov
out
jecxz
push
mov
stos
push
fstl
mov
add
addr16
aas
xchg
cmp
add
out
leave
movl
hlt
aam
sahf
mov
int
call
mov
adc
mov
push
jg
test
cmpsl
fbstp
push
lock
lahf
movsl
sub
mov
mov
test
insl
mov
cmpsb
cmp
xchg
pop
jp
pop
dec
sbb
jl
fsubl
jl
fcmove
jmp
cmpsb
and
xchg
sub
mov
hlt
pop
in
push
sbb
mov
mov
xchg
pop
jns
dec
sahf
and
mov
or
repz
pop
and
mov
inc
inc
out
addr16
ss
cmpsb
nop
jge
pop
dec
add
push
or
filds
xchg
cmp
inc
cmp
inc
jae
jge
pusha
in
xor
xor
adc
cmc
xchg
cmp
mov
and
sbb
ds
repz
pop
jl
mov
pop
outsl
les
aaa
xor
dec
pop
pop
xchg
nop
and
ret
les
add
out
or
mov
imul
ficompl
pop
jg
leave
inc
cmpsl
dec
das
mov
cltd
mov
mov
jmp
jle
push
jmp
sbb
mov
xor
push
inc
icebp
mov
push
push
loope
nop
aam
stos
shll
jle
inc
jno
cld
repnz
roll
out
or
ss
jl
loopne
pusha
jnp
add
cli
push
enter
xchg
stc
cmpl
cmp
mov
js
mov
into
xor
inc
mov
mov
fs
bound
mov
sbb
std
loop
sbb
push
outsl
mov
ss
js
or
inc
mov
cli
leave
push
arpl
dec
addb
or
pop
lret
es
nop
cmpsl
fildl
pop
push
mov
lahf
loope
loop
test
dec
inc
fcompl
push
jmp
mov
lods
lret
push
lret
cmp
or
xor
jge
cld
lret
cld
or
mov
movsb
mov
outsb
loope
or
enter
bound
jg
sub
mov
ficoms
mov
rorb
pop
add
arpl
ret
jo
jne
jmp
mov
xchg
aas
dec
rclb
jnp
cmc
mov
inc
fmuls
inc
jne
jbe
mov
stos
add
orl
fsubs
push
hlt
in
mov
aaa
fidivl
cltd
dec
aas
out
xchg
stc
and
mov
jb
cli
aad
scas
fucomp
jne
fsub
mov
jnp
fbld
icebp
pop
pop
in
in
dec
movsl
nop
xor
rcrl
cs
lcall
dec
repz
int3
cli
mov
repnz
pusha
addr16
aas
rcrl
outsl
xchg
test
cmpsl
jne
jnp
jmp
ja
or
jg
add
inc
jmp
xor
sub
fisubl
xor
lds
add
pop
push
lret
fst
out
rol
sahf
inc
lock
xchg
pop
inc
cs
mov
adc
jl
mov
sarl
xor
les
popl
loopne
mov
sti
mov
mov
dec
cmpl
mov
and
mov
popf
mov
inc
leave
jg
daa
jbe
jl
fistl
dec
jmp
mov
in
idiv
xor
gs
arpl
mov
daa
in
dec
push
push
test
out
and
xor
cmpsl
lea
in
int
cwtl
insb
mov
imul
imul
lea
jmp
into
stos
test
leave
mov
lock
dec
cmpsb
sahf
jge
push
clc
mov
jl
call
push
fildl
rcrl
inc
push
jno
xor
popf
cmp
push
or
adc
je
mov
add
rolb
mov
les
mov
inc
cmpsb
das
jmp
loop
jo,pn
ret
idivb
cmp
pop
imul
std
cmp
cli
mov
xchg
int
push
cmp
or
js
jne
pop
sbb
xor
dec
pop
stos
add
or
out
popa
into
mov
test
sarb
cltd
pop
xor
inc
cmpsb
sub
movsl
lcall
adc
and
ret
outsb
adc
out
add
and
pop
pop
or
jmp
out
push
fs
cld
stos
test
push
push
imul
and
jne
pushf
push
rcr
out
sbb
pop
or
pop
rclb
cltd
aad
mov
jle
lods
outsl
sub
or
jecxz
ja
dec
sub
sarl
je
aam
pop
movsl
cmp
test
jmp
mov
inc
lock
insl
dec
inc
xor
push
movsb
mov
ljmp
faddl
nop
jecxz
ds
repz
pop
lret
loopne
xlat
sbb
jg
mov
adc
mov
fld
mov
outsb
sub
lods
mov
subb
cmovae
ds
mov
bound
and
and
loope
idiv
mov
sub
mov
pop
lea
lret
enter
icebp
out
aad
adc
out
xchg
hlt
js
push
jae
inc
lock
test
les
cmpsb
stos
jne
movsl
std
jns
xor
mov
in
add
loope
jnp
add
and
mov
adc
mov
pop
std
xor
scas
stc
mov
mov
or
lea
fcmovne
out
aaa
push
add
mov
add
cmpsl
jno
mov
movsb
mov
jg
mov
sbb
jp
xchg
mov
sub
xor
pop
add
filds
movsl
div
xchg
nop
adc
and
push
xchg
xchg
xor
sbb
pop
fmull
popa
cmp
sahf
add
push
lds
addl
int3
mov
js
mov
es
jbe
sbb
pop
rclb
icebp
jns
mov
and
cld
jle
daa
inc
sub
xor
scas
das
adc
out
adcb
movsl
std
iret
inc
cmc
subl
lret
xchg
lds
fwait
dec
adc
and
xor
std
or
add
shll
imul
mov
xchg
inc
pop
push
mov
gs
mov
adc
mov
addr16
ret
out
clc
xchg
or
jmp
push
sub
in
mov
pop
mov
dec
dec
mov
pop
cmp
jmp
cmp
gs
inc
mov
push
jp
mov
cwtl
cmp
scas
xor
mov
movsb
adc
outsb
fs
repnz
adc
xchg
ret
adc
ljmp
imul
jnp
int
mulb
dec
in
imul
cli
jecxz
inc
test
imul
or
daa
add
shrl
add
dec
lock
cmpsb
rolb
mov
lods
shrb
iret
sti
xchg
repnz
xchg
jnp
mov
iret
iret
test
dec
inc
xchg
xchg
pop
lea
dec
xchg
dec
popf
popa
aaa
add
lods
pop
mov
sbb
add
sahf
inc
ljmp
mov
mov
lods
pusha
mov
bound
lea
and
push
pop
in
popa
sub
dec
cli
test
es
test
icebp
pop
xchg
cmc
into
cmc
add
test
in
adc
clc
jl
rorb
mov
ljmp
dec
inc
ret
sahf
scas
aad
movsb
pop
jmp
jmp
shlb
dec
shll
push
jmp
push
sbb
out
or
mov
outsb
and
pop
ja
cli
mov
jbe
scas
pop
sbb
fnstenv
fcompl
cmpb
lea
add
or
pop
xchg
cmp
outsl
sub
jo
out
adc
aam
xchg
mov
jge
pop
test
pop
bound
insb
cmp
jg
mov
fwait
mov
int
xor
pop
lret
popa
inc
or
sbb
cmpsl
xor
movsl
sub
hlt
and
adc
mov
xor
popa
mov
pop
xchg
add
mov
xchg
mov
or
cmp
mov
cmp
aam
loop
in
cmp
sbb
lret
ds
jae
or
lret
std
xchg
push
add
xor
test
xor
imul
ret
xor
out
jb
pop
outsb
or
cmc
mov
fidivrs
arpl
dec
cmp
test
pop
mov
jns
cmp
mov
shrb
gs
cmpsl
add
ds
cs
into
shrl
stos
fsubp
jmp
and
lock
out
aad
test
jo
pop
push
push
adc
bound
dec
push
jg
fidivs
fisubrl
add
pop
or
add
in
jo
mov
add
ss
ficoms
loope
scas
imul
jmp
pusha
dec
push
or
mov
inc
mov
xchg
inc
push
lret
push
sbb
pop
xlat
xchg
dec
lods
pop
imul
ret
xchg
idivl
loope
pop
cmc
pop
ljmp
pop
inc
test
int3
cmpsl
repnz
pusha
rcl
je
adc
or
lret
gs
push
outsb
mov
xchg
jb
pop
lds
testl
dec
inc
sbb
mov
pop
icebp
lods
inc
dec
sbb
jg
xchg
into
cltd
dec
ffree
es
and
or
mov
stos
lock
in
andl
lret
loope
mov
jo
push
dec
jae
pop
test
adc
scas
je
stos
mov
cmc
cmp
jns
inc
inc
dec
or
push
push
inc
lret
dec
mov
sarl
push
inc
sbb
dec
jg
pop
cld
pop
cmc
adc
fldcw
lret
sub
sub
mov
pushf
push
xchg
insl
es
hlt
inc
mov
cld
push
mov
adc
lods
cmp
call
xchg
xchg
pop
mov
movsl
mov
ja
mov
xor
neg
shll
jp
mov
push
test
cli
mov
leave
les
jg
jle
lret
cli
fstl
cmp
xor
je
cmp
insl
and
or
add
mov
cltd
ret
mov
mov
mov
or
les
ja
pushf
push
push
shrl
or
cs
sub
or
movsl
lcall
repz
or
mov
icebp
es
jnp
imul
stc
inc
cmp
mov
lods
out
or
fmull
ds
adc
adc
pop
aam
mov
ljmp
into
mov
sub
cld
shll
inc
rorb
xchg
mov
mov
sbb
andb
cli
push
mov
addl
mov
mov
ss
test
popa
rclb
sub
andl
lea
mov
jmp
mov
fildll
mov
lock
mov
rolb
mov
addr16
or
xchg
rolb
adc
xor
sub
xchg
push
je
sbb
inc
enter
stos
adc
and
addr16
adc
mov
jmp
cmp
push
popa
push
sub
push
std
leave
xchg
mov
cmp
cmp
adc
pop
inc
or
sbb
fistpl
gs
aas
jns
dec
xor
orb
pop
nop
pusha
cmc
ss
mov
divb
neg
and
das
imul
jl
fiaddl
mov
push
mov
in
dec
ret
ja
enter
sbb
sub
inc
push
or
and
rcl
mov
mov
aam
sub
lahf
adc
jg
ss
mov
sbb
sbb
cmpsb
lock
sub
stos
loop
movl
test
scas
mov
sbb
hlt
xor
sarl
movsl
movsb
mov
cs
mov
or
in
xchg
adc
dec
mov
push
mov
outsl
aam
cmpsb
icebp
jbe
mov
cwtl
inc
sbb
gs
jl
and
xor
pop
bound
stos
push
mov
xchg
sub
daa
jo
mov
inc
sub
lock
cmpsl
pop
ret
push
fs
jmp
mov
scas
push
xchg
push
inc
fwait
lock
es
pop
mov
roll
pop
add
popa
std
loopne
fdivs
lahf
out
mov
lret
inc
xchg
cmp
popf
push
xchg
sbb
je
mov
add
mov
mov
outsb
push
inc
pushf
inc
sbb
mov
loopne
ja
add
insl
aam
or
inc
loop
ficompl
insl
mov
lahf
cmp
mov
rolb
inc
jb
xor
mov
mov
aad
jp
inc
lcall
mov
loopne
add
xchg
mov
or
call
mov
jnp
xor
imul
push
mov
xor
pop
mov
fistpl
xor
int3
int3
clc
lcall
push
jae
sub
aam
mov
addr16
aas
fdivrl
inc
sbb
stc
rol
les
push
mov
adc
xor
add
lock
aaa
test
lret
push
inc
enter
pop
movsl
test
or
cmpsl
mov
and
sub
xchg
arpl
pop
lds
sub
fsubl
push
pusha
mov
dec
push
xor
movsl
or
sub
cmp
sbb
add
test
mov
fs
mov
std
je
lret
inc
pause
pop
shlb
mov
pop
mov
icebp
int3
addr16
and
pop
int
add
adc
add
inc
mov
pop
daa
movsb
sub
add
scas
jle
cld
xchg
mov
fimull
sbb
test
cli
xchg
shll
fs
adc
pop
test
pusha
lret
sahf
loop
pop
add
dec
xchg
xchg
jno
adc
mov
cmpsl
js
and
cmpsb
or
pop
lock
das
and
loopne
adc
mov
add
into
mov
sbbl
adc
pop
data16
bound
out
outsl
gs
lds
xchg
jl
mov
push
stc
out
pop
int
std
pushf
sub
sub
testb
pmaxub
mov
cmp
popf
adc
cwtl
dec
xor
std
hlt
inc
push
mov
jb
and
fbld
mov
sbb
mov
dec
mov
pop
movsl
xor
clc
call
popf
mov
scas
ret
jno
mov
jnp
lea
adc
out
testb
push
or
insb
ja
rorb
add
arpl
mov
and
ret
dec
push
xor
xor
movsb
test
ljmp
pop
pop
inc
outsl
mov
dec
enter
dec
pop
sub
sahf
andb
mov
xor
mov
push
cmpsb
mov
fwait
rcr
mov
mov
push
fisttpl
jbe
pop
inc
scas
xchg
rol
int3
data16
sub
or
xchg
pop
and
push
cmp
in
out
and
dec
stc
inc
xor
mulb
arpl
orb
repz
icebp
arpl
jb
dec
jae
mov
sub
push
mov
or
fildll
push
xlat
push
jnp
jno
inc
sbb
mov
pop
or
scas
dec
into
sbb
cmc
insl
test
mov
and
xchg
lret
dec
sbbb
jne
sub
jecxz
lahf
adc
xchg
call
pop
cmp
stos
sbb
idivl
cmp
stos
fcoms
out
repz
xor
imul
sub
xchg
and
dec
ret
xchg
push
into
adc
and
jns
lds
fisttpll
fs
sub
inc
cmp
dec
push
xchg
jp
test
adcb
push
in
and
jmp
filds
stc
cmp
or
mov
sbb
and
pop
and
and
iret
pop
testl
insb
ficoml
ljmp
cwtl
inc
jo
dec
std
xor
adc
cltd
orl
cmc
jne
sub
nop
sarl
push
pop
add
or
imul
loop
icebp
cmp
pop
mov
test
add
fs
loopne
and
dec
cmp
jle
insl
inc
faddp
pop
fildl
insl
sti
push
dec
fists
adc
mov
jae
scas
fwait
bnd
cld
xchg
xorb
mov
shll
mov
inc
bound
insb
push
insb
mov
adc
jne
cmpl
push
stos
add
mov
adc
mov
mov
xlat
lds
fisubl
mov
fdivs
sbb
iret
cld
adc
out
ja
test
mov
cs
adc
mov
mov
out
pop
mov
dec
jo
sbb
lret
sub
test
lret
xchg
sahf
pop
hlt
xlat
add
shrl
pop
ret
movsb
sahf
cmp
sar
mov
movsb
test
pop
mov
filds
mov
cmpsl
ret
movsb
pop
cs
or
dec
xchg
cmc
loopne
pop
mov
and
xor
sub
lret
fisttpll
push
sarb
sbb
out
movl
xorb
sbb
jg
xchg
mov
ljmp
bound
bound
jmp
mov
cmp
iret
hlt
mov
xorl
sti
dec
mov
stos
sub
movl
add
leave
pop
int3
inc
das
test
sub
jns
aam
das
sbb
mov
push
push
xchg
fbld
test
aad
cltd
daa
mov
into
lock
fstps
nop
and
repnz
jno
hlt
es
xor
xor
mov
lock
push
in
imul
lret
cmc
push
out
cmp
lods
shr
push
jnp
addl
pop
dec
pop
pop
cmpsl
je
cmpl
adc
fnstcw
insl
insb
cs
scas
or
in
add
sub
cmp
and
popf
sub
roll
pop
mov
mov
fwait
add
mov
cmpb
pop
mov
mov
stos
ds
xor
stos
adc
inc
and
in
fisubrs
pop
push
add
cmp
sbb
fs
xlat
xchg
in
cmp
pop
test
test
mov
adc
or
inc
stc
inc
std
fdivrl
xlat
sbb
adc
fmulp
sbb
jne
push
fs
xor
les
ret
dec
fisttpll
ret
rcrb
fstps
inc
pop
aaa
call
pop
xchg
or
add
call
clc
or
sti
mov
cvtps2pd
stos
ja
or
pop
sbb
insb
push
call
jle
sub
mov
shll
mov
pop
jne
xchg
adc
sub
jns
lcall
dec
test
pop
rorl
sbb
pushf
pop
addr16
mov
pushf
mov
enter
inc
aaa
das
jb
or
mov
jo
es
outsb
icebp
scas
mov
test
inc
jmp
mov
shrl
scas
cmpsb
mov
add
mov
xchg
shrl
or
cmc
imul
push
repz
rcll
out
adc
movsl
cmp
sahf
push
aaa
paddd
sbb
int
mov
test
shlb
push
mov
addr16
push
xor
lods
jne
jb
pop
shr
jl
mov
cmpsb
stos
hlt
insl
cmp
repnz
aaa
jl
cmp
or
and
ret
popf
cltd
mov
imul
sti
scas
push
dec
pushl
arpl
lahf
imul
jmp
xchg
xor
add
fldcw
arpl
popf
xchg
adc
cli
dec
outsb
fnstcw
repnz
jne
cmp
push
outsb
cwtl
mov
jecxz
xchg
rcll
fnstcw
adc
test
mov
out
jle
push
pop
jne
push
pop
dec
jmp
mov
adc
mov
mov
mov
jo
movsl
xor
shll
xchg
mov
and
mov
pop
bound
xchg
sub
sub
dec
orb
mov
sbb
push
arpl
outsb
push
or
jp
cmpsl
scas
pop
xchg
stos
pop
leave
and
sbb
or
sti
pop
xchg
sarl
lret
cltd
popf
mov
inc
sti
ss
inc
data16
cmp
out
jnp
push
xchg
shr
mov
mov
xlat
inc
aad
add
repnz
dec
add
push
mov
xor
inc
ret
inc
mov
repz
and
sbb
into
adc
cmp
pushf
cld
fwait
cmpsl
add
and
mov
sbb
dec
jmp
aaa
xlat
xchg
sbb
in
or
push
sub
clc
js
push
out
push
lds
inc
or
pushf
xor
cmpsl
sarb
adc
dec
jp
test
xchg
int3
lea
outsl
vminps
push
je
out
pushf
int
mov
cmp
mov
std
push
sub
pop
or
sarb
cmp
aas
push
lods
je
out
mov
dec
dec
popf
cwtl
dec
jnp
jns
js
pop
iret
call
pop
pop
in
fdivs
cli
jmp
jns
nop
into
xchg
mov
and
xlat
mov
push
lods
popf
mov
sahf
pop
sub
dec
pop
repnz
shll
push
jno
xlat
and
leave
mov
and
inc
push
pop
cld
cli
mov
mov
add
dec
pop
or
or
jp
arpl
xor
mov
mov
cltd
leave
inc
hlt
fwait
push
jae
fcomi
add
xor
inc
mov
sub
xor
fld
movsb
hlt
js
sbb
mov
outsb
shrb
cmp
jp
inc
pop
sub
or
bound
nop
lea
pop
cwtl
mov
mov
mov
push
xor
cs
stc
out
leave
push
fisubrl
test
xchg
mov
mov
and
lods
and
jle
insl
std
sub
jbe
xor
aaa
sbb
stos
xorb
pop
clc
mov
xor
clc
jbe
out
add
sub
lret
or
adc
push
testl
push
push
fsubs
imul
jg
xchg
sbb
xorl
out
jmp
push
mov
jp
mov
ljmp
or
sbb
sti
pop
jmp
lock
sub
xchg
and
int
loop
push
push
push
iret
shrl
lds
notl
leave
jo
xchg
std
add
insb
add
or
gs
mov
xchg
push
mov
add
sbb
dec
aaa
xchg
fnstcw
pop
or
lock
push
pop
scas
pushf
ror
sahf
mov
dec
popa
aaa
sub
sarl
es
fld
outsb
xor
aad
ja
stos
into
testb
aas
or
mov
sbb
je
cwtl
cmp
mov
mov
jecxz
jb
mov
pop
hlt
sub
adc
cmp
dec
leave
fiaddl
mov
or
inc
xchg
sbb
outsl
ret
cmc
xor
xor
lea
cmovs
inc
adc
andb
int3
sub
xchg
xor
mov
pusha
push
loop
xchg
dec
xor
movsb
addr16
lahf
mov
sub
jge
push
js
mov
add
imul
xchg
mov
mov
lods
jnp
xchg
clc
clc
stos
js
sub
push
mov
adc
repnz
or
sbbl
gs
mov
sub
idivl
mov
leave
inc
neg
pusha
dec
clc
fdiv
sub
or
sub
mov
insb
orl
cmp
push
mov
lea
and
jg
mov
stc
xchg
clc
inc
mov
pusha
cmp
cmovs
jno
sub
cmp
add
dec
mov
insl
xor
fisubl
mov
movsl
in
mov
in
dec
adc
mov
int3
cli
sub
sub
into
sti
mov
mov
js
or
and
inc
mov
push
jo
dec
sti
xor
aad
ret
lea
xor
les
sarb
push
shlb
jg
and
aas
popf
lods
call
je
test
push
cmpsb
fnstenv
and
dec
sbb
sbb
jo
sub
fstpt
or
cmp
xchg
cwtl
lcall
incb
scas
dec
xchg
inc
in
pop
testb
cmp
cld
stos
push
int3
push
in
cltd
out
mov
loopne
and
cwtl
pop
sbb
ss
dec
xor
cli
stos
adc
mov
repz
mov
xacquire
mov
sahf
jp
dec
inc
scas
bound
jne
mov
mov
lret
xor
cmp
es
mov
cmp
dec
cmc
mov
dec
out
inc
ljmp
movsb
xchg
inc
xlat
sub
out
out
mov
pushf
or
mov
pushf
out
mov
jge
jge
loope
aad
lret
cmp
pop
mov
jl
paddd
pop
xor
sub
pushf
ficoms
cltd
jge
jg
imull
mov
xor
es
int3
pop
pop
or
fists
lahf
fisubl
jns
pop
xchg
ret
out
pmulhrw
sbbb
in
cmp
xchg
pushf
in
bound
sub
kunpckwd
loope
rclb
repz
sahf
arpl
sti
jl
xchg
scas
addr16
mov
mov
mov
mov
inc
add
rclb
mov
fnstsw
addb
in
cmp
jne
or
dec
xchg
fs
adc
pushf
xchg
xor
jb
mov
dec
cmp
pop
pop
xor
jg
dec
cli
or
sub
in
push
and
sarb
and
mov
loope
fs
loop
and
lahf
adc
cs
jmp
aaa
insb
push
mov
fwait
aaa
push
popa
inc
into
sub
jbe
lock
add
inc
xor
xor
mov
adc
xchg
xor
test
xacquire
xor
push
insl
mov
xchg
aam
cmp
adc
lcall
xor
call
imul
xor
pop
push
dec
xor
fists
lods
insl
fisttpl
xchg
jnp
fstpt
lahf
shll
aam
pop
adc
push
leave
push
mov
inc
jle
xor
cmp
orb
shlb
addr16
sub
call
lods
rolb
jmp
xor
pop
xchg
jecxz
sub
mov
lods
sub
lods
add
push
xchg
lods
xchg
rep
pop
lods
push
xchg
add
lods
loop
lods
lea
add
lea
mov
rep
pop
lods
push
push
push
xchg
pop
lea
call
jb
sub
jae
mov
cmp
jb
sub
push
movzbl
shl
mov
lea
lea
mov
jecxz
mov
sub
mov
xor
test
setne
push
inc
mov
lea
call
pop
lahf
adc
shr
je
sahf
sbb
je
mov
xor
mov
call
xor
jmp
mov
mov
add
call
jae
add
call
jb
add
call
jb
cmp
mov
jb
mov
push
mov
sub
mov
jmp
add
call
xchg
jae
add
call
xchg
jae
xchg
cmp
mov
jb
mov
push
push
mov
add
call
pop
xchg
jmp
cmp
mov
jb
mov
push
xchg
xchg
mov
mov
add
call
push
pop
push
dec
cmp
jb
mov
shl
mov
lea
call
cmp
mov
jb
xor
shr
adc
dec
inc
xchg
inc
shl
cmp
lea
jbe
sub
xor
mov
shrl
mov
bswap
sub
add
cmp
jb
mov
inc
add
call
loop
mov
shl
add
lea
xor
push
inc
push
shl
mov
xchg
call
xor
pop
shr
adc
loop
pop
add
inc
pop
mov
push
mov
sub
rep
lods
pop
mov
stos
cmp
jae
jmp
pop
mov
pop
pop
push
jecxz
mov
inc
add
cmp
jae
mov
cmp
jne
mov
bswap
add
sub
stos
loop
mov
push
push
mov
inc
lods
test
pop
je
add
push
push
xchg
call
xchg
lods
test
jne
cmp
je
mov
jns
inc
xor
lods
push
push
call
stos
jmp
pop
pop
mov
jecxz
xor
lods
cmp
jb
add
add
loop
popa
jmp
sub
jb
je
shl
lods
jmp
lods
jmp
lods
jmp
push
mov
push
shr
mull
mov
mov
bswap
sub
cmp
pop
jbe
mov
xor
mov
sub
shr
add
jmp
add
sub
mov
shr
sub
stc
pop
pushf
cmpb
jne
incl
shll
shll
popf
ret
xor
inc
lea
call
adc
cmp
jb
sub
ret
mov
call
lea
mov
jae
call
mov
jae
shl
mov
push
lea
call
pop
add
ret
push
add
add
add
add
add
add
les
add
add
add
add
add
add
add
lds
add
lds
add
lds
add
adc
add
add
add
add
lds
add
add
inc
js
gs
imul
gs
push
gs
imul
jns
