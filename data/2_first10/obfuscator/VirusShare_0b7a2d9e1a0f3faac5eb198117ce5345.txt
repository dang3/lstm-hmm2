push
call
ret
ret
pusha
mov
mov
cld
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
push
sbb
in
addl
push
push
push
add
xor
cmpl
pop
sbb
jne
int3
pop
lock
call
add
hlt
jae
push
jmp
mov
mov
mov
add
push
stos
mov
int3
dec
adc
mov
sarl
sbb
leave
cmp
je
sbb
mov
shl
or
inc
inc
xchg
cmp
pop
xor
and
sub
jge
sbb
jbe
push
add
xor
ret
sahf
or
add
movl
jae
mov
push
mov
sbb
loope
int
xchg
test
shr
imul
fdivrs
pop
addl
xorb
shr
add
pushl
xchg
add
lea
sub
or
test
fmuls
jl
add
lock
xor
cmp
rcrl
and
xor
jo
xchg
fdivs
mov
sbb
pop
adc
shl
pushf
ficoms
decl
xor
mov
ljmp
add
push
mov
sub
shl
test
decl
sbb
rolb
mov
lea
dec
or
cmp
xor
sub
jae
insb
cli
add
or
nop
les
mov
jp
sub
xchg
pop
xchg
aaa
xchg
jmp
adcb
xor
xchg
mov
pop
sahf
hlt
mov
xor
inc
and
add
adc
or
gs
and
filds
rolb
fwait
adc
sub
push
enter
dec
or
jp
push
shrl
add
sbb
and
add
inc
cmp
inc
fmull
call
and
rcl
jecxz
setge
dec
and
stc
stc
add
enter
jmp
filds
mov
inc
mov
xor
test
xlat
inc
xchg
enter
xorl
shll
sub
andl
jmp
clc
or
jns
enter
and
inc
icebp
add
pop
dec
insb
mov
adc
pop
sbb
inc
mov
add
mov
mov
test
xorb
sbb
and
inc
or
mov
mov
lock
pop
sub
push
mov
mov
xchg
mov
adc
inc
add
mov
adc
jmp
cltd
in
xor
nop
ss
test
adc
jmp
cmpsl
push
pop
ret
shll
pushl
shrb
and
mov
adc
push
and
dec
sbb
inc
dec
mov
push
inc
or
hlt
jb
adc
or
into
or
mov
sbb
lea
or
inc
xor
xchg
adc
or
aam
dec
add
les
mov
mov
sbb
shrl
inc
adc
mov
sti
loop
sarb
push
push
aam
pop
movsl
cmc
inc
push
add
cmp
test
xor
cli
shr
mov
cmp
adc
xlat
mov
fwait
aam
or
cwtl
shl
jmp
sub
xor
adc
xor
mov
bound
adc
pop
mov
pop
cmp
out
mov
pop
loopne
lea
pop
inc
sti
add
inc
jmp
pop
lcall
bound
and
cmc
shr
popf
movsb
sub
lods
lret
xor
xor
inc
adc
out
test
adc
lea
test
cmp
inc
cmp
jl
inc
lods
shll
dec
or
add
lcall
rcrb
mov
push
sbbb
push
dec
ds
add
and
dec
addr16
pop
rorl
cmp
jb
sub
or
push
psllq
add
out
enter
stos
pop
test
xchg
movsb
xor
mov
adc
jmp
popa
shlb
sub
inc
insl
sub
xchg
sub
lea
jge
mov
gs
adc
lea
jmp
cli
pop
inc
mov
je
inc
push
mov
mov
jae
mov
dec
divl
push
enter
xorl
sbb
loope
or
subb
jecxz
mov
adcb
pushf
jne
mov
push
loope
or
mov
pop
pop
leave
ret
addb
rolb
add
loope
add
add
add
adc
add
add
or
loop
add
adc
add
add
add
fsubl
lret
cmc
and
and
outsl
outsl
outsl
outsl
add
add
sbb
add
add
inc
add
dec
add
add
add
add
addb
add
add
add
add
add
pop
add
add
sub
add
add
add
add
addb
add
adc
add
loope
add
pusha
add
punpcklbw
add
pusha
add
das
pusha
add
add
add
popa
mov
mov
add
jmp
mov
add
pusha
call
pop
sub
mov
add
mov
mov
sub
push
push
mov
lods
lods
add
mov
push
mov
push
push
push
call
pop
pop
mov
push
push
push
push
push
push
mov
lods
lods
add
push
lods
add
call
push
push
lods
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
lods
push
lods
add
push
push
push
mov
call
pop
add
mov
lods
push
lods
push
lods
push
lods
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
pop
test
je
push
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
jg
fimuls
or
adc
adc
inc
mov
add
cwtl
xchg
inc
mov
mov
popa
dec
sbb
sbb
jecxz
inc
xor
or
jnp
rorb
sbb
movsb
popa
mov
sbb
inc
pop
rcrb
pop
mov
out
xor
testb
gs
mov
push
jae
outsl
add
and
xchg
sbb
sahf
xchg
pop
popa
mov
push
lods
add
cmp
mov
lea
lods
mov
or
lcall
xchg
cli
inc
in
jne
xor
in
popa
cmpsl
int
repnz
repnz
jne
pop
adc
or
add
adc
imul
inc
loop
movl
jo
rol
dec
xchg
xchg
lret
jp
aaa
adc
loope
sarl
je
pop
inc
cmp
cmp
jbe
out
pop
jne
in
je
mov
adc
cmp
stos
sbb
xchg
sahf
add
loopne
adc
adc
adc
xchg
pop
push
in
xchg
adc
mov
mov
fisubrs
mov
or
add
cmp
xor
dec
mov
cli
ljmp
inc
pop
mov
jns
test
jg
lods
lods
xchg
inc
test
sti
or
jae
jmp
repnz
jo
cltd
ret
test
jp
xor
fidivs
xor
mov
cmpsl
and
pusha
in
shl
and
enter
dec
inc
inc
cmpsl
jmp
mov
lds
fists
rolb
outsb
inc
or
jmp
fwait
inc
push
jmp
mov
sub
sti
nop
or
mov
insb
or
insl
icebp
or
fisubrs
sti
mov
loopne
xor
fwait
ret
enter
mov
aas
pop
loopne
pop
xor
inc
iret
nop
adc
fistpll
inc
cmp
inc
pop
mov
sub
mov
add
in
xor
fdivl
inc
sbb
stos
call
push
push
aas
inc
pop
inc
push
fidivrs
cltd
daa
aad
jmp
inc
leave
pop
lret
jp
enter
mov
cwtl
dec
in
and
mov
pop
push
movsl
mov
xor
fwait
inc
dec
popl
lcall
loope
std
inc
int3
ret
inc
aad
push
sbb
ds
and
cmpsb
dec
rcll
popa
mov
sub
iret
insb
and
les
in
ja
xchg
lods
nop
pushf
push
or
jno
mov
in
js
dec
mov
je
decb
fs
in
sub
cld
ret
pop
daa
test
movsb
mov
rolb
insl
mov
ss
and
out
sarb
add
push
shrb
jo
aad
ja
movsl
and
push
stc
test
mov
imul
mov
in
iret
shlb
loopne
outsb
xchg
push
add
repz
movups
pushf
stc
out
je
xchg
aad
mov
sub
jbe
imul
subb
hlt
insl
rolb
in
inc
mov
or
xor
loopne
fcomip
adcl
inc
decb
dec
fbld
sub
pop
cmpsb
and
idivl
aaa
fisttpl
sbb
push
cmp
in
push
inc
sub
or
dec
cmp
stos
jae
cld
sbbl
in
and
push
loopne
dec
fstpt
lret
jecxz
push
in
or
sbb
mov
cmp
int3
dec
fs
outsb
mov
push
or
stos
bound
xchg
data16
add
cmp
out
scas
and
jb
daa
cmp
cmp
jecxz
idivl
lds
lret
xchg
cwtl
sbb
xor
inc
cmp
fsts
adc
push
pusha
pusha
nop
dec
mov
outsl
lcall
adc
pop
lods
fnstenv
sbb
rcr
in
std
out
jbe
jae
or
and
and
rorb
and
mov
and
lea
cmp
pop
imul
out
adc
fcmovb
pop
xor
dec
aas
adc
and
mov
push
dec
pop
sar
shll
test
movsl
mov
mov
pop
adc
jb
mov
cmp
les
cmp
aad
pop
add
mov
mov
xchg
dec
fsubrs
inc
popf
jmp
iret
inc
lea
mov
inc
inc
fsub
cmp
xor
pop
ret
xchg
jmp
sub
jp
xchg
or
xchg
mov
addr16
rorb
jle,pt
aad
loope
xlat
out
cmp
aas
pop
cmc
push
pop
mov
lahf
xchg
iret
cli
mov
lahf
mov
loope
xchg
push
sub
popf
rolb
cmp
xchg
sub
dec
push
sub
lret
addb
dec
test
out
dec
jge
add
addl
add
push
cmpsl
xor
xor
scas
int
adc
mov
xor
aam
lahf
inc
xchg
push
pop
call
dec
lahf
imul
ljmp
xchg
push
aaa
test
xor
sub
ljmp
ljmp
xchg
fsub
ftst
insb
shll
or
paddd
push
sub
inc
outsb
lahf
jle
cmc
jge
add
dec
and
data16
or
imul
lea
push
dec
mov
dec
shll
fwait
out
lret
pushf
xchg
add
sub
jb
int3
jns
std
jge
adc
pop
lea
lods
les
popa
in
pop
cmp
ret
jae
arpl
movups
push
or
or
out
push
mov
sti
add
aas
adc
sub
pop
stc
mov
into
leave
pop
push
jb
xchg
mov
stc
inc
inc
mov
iret
shrb
subl
adc
cld
mov
cmp
pushf
ret
jae
popa
clc
jg
movsl
pushf
fisttpl
paddsw
pop
xor
or
lret
daa
das
xlat
adc
sbb
inc
lret
cld
xor
leave
fwait
mov
adc
hlt
dec
popa
cvtps2pd
pop
mov
decb
xchg
roll
lods
stc
enter
mov
stos
pop
push
jl
mov
and
xor
dec
adc
or
scas
xchg
inc
pop
movsl
dec
fsubs
rorb
jo
enter
mov
inc
es
ja
adc
dec
mov
adc
push
add
xchg
add
jae
jne
scas
fdiv
mov
fmuls
ficoml
mov
hlt
inc
pushf
dec
and
outsb
push
mov
mov
bound
fnsave
les
icebp
stc
loop
sahf
xchg
or
sub
lret
jecxz
mov
cmpsb
mov
cltd
rol
jns
sbb
add
lret
ja
cs
imul
pushf
pop
jp
repnz
lods
mov
rolb
call
mov
je
stos
dec
xchg
data16
sbb
cmpsl
loope
js
mov
in
nop
push
xor
lret
inc
sub
lret
jne
ljmp
pop
fisubrl
pop
cmp
cmpsb
call
out
notb
insb
pop
addr16
popa
in
test
aad
into
out
dec
fstps
xchg
stos
leave
mov
push
cld
dec
or
loope
or
push
or
test
pusha
js
mov
cmp
adc
stos
dec
dec
ds
push
int
out
nop
leave
daa
adc
dec
inc
jg
in
pusha
sbb
into
jmp
dec
mov
ret
xor
in
pop
sti
jno
pop
orl
loopne
in
push
xor
mov
inc
je
adc
clc
out
negb
pop
lock
jbe
mov
cmp
lcall
pop
inc
xchg
ret
cmpsl
cmp
cmpb
stos
lret
mov
sahf
add
scas
mov
scas
fidivs
int
xor
inc
and
shll
sub
es
sub
xchg
pop
popa
mov
xchg
cmpsl
aam
inc
inc
xor
inc
sbb
dec
sbb
fldcw
adc
push
push
pop
fildll
arpl
cli
mov
es
mov
cmpsb
or
sbb
repz
sti
fildll
push
xor
sbb
mov
cmp
adc
xor
cmp
xchg
ljmp
adc
je
push
test
and
aaa
out
jge
pop
popa
sub
cmp
cmp
in
cmp
aaa
stos
cmpl
adc
bound
fdivrl
aam
jns
stos
int3
in
sbb
lcall
rcrl
into
pusha
and
rcrb
adc
push
sbb
loopne
push
and
fists
xchg
mov
movsl
outsl
jbe
dec
lea
mov
pop
adc
sbb
dec
mov
mov
jmp
dec
push
je
mov
add
and
sub
int3
popf
icebp
mov
cmp
xor
push
mov
hlt
xchg
push
push
movsb
mov
cmp
inc
lcall
sub
cmpsb
outsb
xchg
xor
leave
int
push
mov
pop
lea
adc
jo
test
cmp
std
adc
addr16
cltd
or
pop
icebp
or
testb
in
repnz
hlt
rcll
insl
push
push
lcall
test
mov
mov
mov
scas
call
roll
loope
mov
loopw
cmpb
aam
dec
fidivrs
and
inc
ss
pop
lret
sub
movsl
dec
jbe
sub
adc
xorl
aad
or
cmc
aad
fisttpl
insb
ss
cwtl
test
in
pop
stc
sub
mov
aam
mov
dec
out
movsb
dec
or
sbb
es
andb
in
es
mov
jmp
push
xchg
or
add
add
add
ljmp
dec
in
call
add
xchg
fistps
in
icebp
lret
inc
repz
dec
inc
sahf
cld
in
cmpsb
fwait
nop
xchg
mov
xchg
mov
sub
cmp
fwait
cltd
aam
sarl
mov
outsl
rclb
arpl
push
sbb
into
movsb
data16
leave
outsl
cmp
imul
dec
adc
cmp
mov
repnz
repz
pop
inc
or
mov
mov
sbb
dec
mov
push
push
outsl
push
pop
rcrb
mov
or
jo
iret
lods
pop
es
jb
into
xchg
out
push
sti
xchg
and
pop
test
pushf
dec
add
mov
in
xor
push
mov
je
mov
in
mov
push
mov
cmpsl
mov
shll
popf
mov
das
andl
cmpsb
call
cmc
sub
add
aam
cld
pop
out
mov
stc
shl
ret
test
sub
inc
xchg
pop
adc
sahf
push
lock
cmp
es
mov
unpckhps
mov
mov
lock
and
jne
stc
mov
lahf
pop
or
mov
sbb
dec
adc
je
jl
aad
sub
xchg
iret
xchg
and
mov
popf
lds
mov
and
xchg
pop
jne
adc
ja
roll
arpl
dec
inc
xchg
aam
inc
and
pop
fldenv
or
add
inc
xlat
mov
cmp
lret
testl
hlt
xchg
sub
adc
loop
inc
sub
ficoml
ja
xor
shr
rcrb
or
inc
in
mov
aam
push
mov
jbe
cmp
sbb
aam
pslld
sub
inc
dec
and
and
jae
mov
fisttpll
adc
push
add
jbe
aam
shlb
pop
cmp
int
adc
jecxz
mov
push
call
push
fistl
lcall
jg
packuswb
jge
hlt
dec
sbb
mov
add
pusha
mov
addr16
lods
lock
jg
fs
jns
jl
shl
lret
cmp
mov
fld
fildll
and
push
std
scas
push
pop
out
in
lods
popa
arpl
mov
or
xor
xor
aad
ds
ljmp
inc
xor
loope
xchg
stos
mov
cli
in
and
sub
jns
adc
fwait
cmp
in
adc
dec
pop
hlt
mov
popa
adc
dec
pop
das
test
cltd
rorl
push
arpl
xchg
xor
mov
mov
call
inc
xchg
inc
mov
xchg
movsl
lods
jg
inc
pop
inc
pop
cmp
mov
mov
inc
inc
mov
lock
ret
xchg
ror
lahf
daa
sub
xor
jl
add
int3
outsl
inc
xchg
lret
mov
lahf
ficoml
int3
adc
scas
adc
fistl
loope
cmpsl
out
nop
cmpsb
pop
pusha
fisttpl
mulb
and
jb
ret
jbe
lret
push
inc
jge
iret
and
les
daa
int
fs
movsl
ds
sub
rol
jbe
push
divl
xchg
in
push
sub
push
mov
mov
sbb
add
push
and
xchg
out
mov
hlt
repnz
aam
int
popf
sbb
sarl
int3
or
lods
cmpsb
jp
add
mov
test
out
mov
clc
add
jg
or
ja
push
adc
xchg
shl
and
add
iret
rorl
and
lret
mov
add
aaa
bound
scas
inc
or
insl
fwait
cwtl
cmp
add
fdivl
inc
ficompl
aam
xor
mov
or
push
pushf
sub
sbb
je
jmp
cltd
xor
dec
add
mov
inc
adcb
faddl
pushf
insl
ss
nop
decl
mov
jl
push
pop
mov
lret
mov
int
int3
jns
add
leave
push
ret
xor
out
pushf
iret
outsl
inc
inc
lods
xlat
sbbl
xchg
dec
fnstsw
jg
popa
mov
ficoml
rorl
sbb
cltd
dec
mov
js
sbb
sbb
int
sbb
xchg
lea
ret
addr16
or
fsubl
insl
fidivrs
cltd
cmp
adc
adc
clc
add
xchg
ljmp
and
xlat
nop
or
mov
xorl
cmc
stos
pop
das
sti
lods
call
jb
sbbb
mov
sahf
test
push
fdivrp
mov
inc
mov
loopne
int
push
push
fldt
and
mov
mov
imul
xor
aas
mov
insl
loopne
jmp
mov
mov
rclb
pop
stos
jl
notb
and
push
adc
call
enter
arpl
cmp
push
adc
fimull
in
pop
lock
mov
mov
hlt
es
dec
xchg
insl
outsb
imul
scas
and
fidivrl
fisttps
jae
and
add
xor
xchg
sub
inc
ds
inc
lcall
mov
mov
jge
jmp
je
jp
nop
pop
das
pop
mov
aaa
jmp
xor
fwait
ds
dec
int3
scas
das
mov
xchg
insl
pop
movl
or
rorl
or
push
out
cmp
nop
mov
pop
mov
adc
pop
jo
add
cltd
xchg
mov
inc
mov
lahf
cmp
fs
fisttps
sub
ljmp
mov
add
sbb
mov
xor
inc
push
cmp
rorb
pop
mov
xchg
pushf
das
xor
lea
push
xor
fistpll
jno
xchg
sub
loop
repnz
loop
push
icebp
mov
enter
jo
in
fwait
jae
loope
popa
test
clc
jl
mov
shl
adc
pop
push
jmp
leave
filds
data16
mov
out
jg
fisttpl
mov
test
push
push
out
push
mov
pushf
push
es
repz
adc
mov
inc
jl
cmpsb
mov
pop
shl
sub
mov
mov
xchg
mov
leave
lea
lock
inc
mov
scas
iret
cmpsl
adc
test
idivl
pop
decb
imul
sbb
push
addr16
push
fnstenv
test
pop
dec
pop
pushf
sbbl
push
fldl
es
lods
add
inc
shlb
inc
xchg
cmpsb
rolb
jecxz
mov
cmpsb
and
sub
sbb
jle
rorl
pop
xor
and
insl
mov
or
cmp
jl
je
das
fnsave
pusha
push
fists
dec
int
inc
aas
lret
loopne
mov
xchg
jns
iret
mov
in
inc
es
stos
xchg
mov
jl
sbb
sti
insb
and
rclb
cmc
fcomi
cs
jnp
int
js
cwtl
mov
and
push
sahf
icebp
cmp
inc
js
cmp
test
aam
pushf
xchg
fwait
popa
sub
sub
sbb
popf
std
xor
sbb
test
sub
jne
popf
push
mov
rolb
insb
jno
dec
loopne
mov
shl
rolb
adc
or
jmp
xchg
dec
mov
jb
cmp
or
inc
xchg
ficoml
insb
dec
lds
sbbb
and
xor
lret
sbbb
sub
mov
outsb
jge
icebp
jl
xor
mov
mov
test
fisttps
shlb
out
add
nop
sbb
imul
lock
adcb
push
inc
pop
cmp
mov
adc
stos
test
cmp
fcompl
sahf
pop
aad
ljmp
enter
jp
lcall
push
jbe
in
xchg
in
fwait
inc
xor
mov
cld
shrb
mov
xchg
inc
mov
cmp
seto
lods
cmp
test
sub
mov
sub
xor
testb
xchg
xchg
sbb
arpl
fdivr
call
xor
cs
int
inc
ficoml
cs
pop
mov
sbb
mov
lds
and
push
jb
and
or
cmc
add
add
cltd
cmp
out
mov
xchg
jmp
cld
mov
jl
out
pop
nop
gs
add
mov
leave
jge
jbe
jae,pt
fiaddl
adc
adc
dec
adc
aad
dec
daa
xor
jg
adc
xchg
pop
add
xchg
mov
pop
ljmp
push
inc
dec
pop
push
and
inc
xor
inc
arpl
push
int3
sub
inc
jb
mull
pop
cmp
aam
pop
push
mov
jne
mov
and
fldcw
imul
adc
jb
fsubs
sti
xchg
fbld
aaa
aaa
jg
aam
dec
jno
jecxz
or
fnsave
clc
push
jnp
ret
push
sbb
push
add
imul
popf
mov
divl
sub
inc
iret
maxps
jnp
cs
ret
std
jmp
pop
sub
cmc
mov
das
testl
jne
shl
and
ret
mov
cmpsb
movsb
xor
nop
mov
dec
xor
push
ret
call
jmp
xorb
add
aas
push
jo
imul
mov
addb
cltd
sbb
push
fildll
leave
shrl
or
or
stos
adc
mov
mov
mov
lret
xchg
leave
xlat
cmp
sbb
or
pop
daa
jle
xchg
shrl
xchg
cwtl
cli
push
push
int3
dec
xchg
shrb
mov
emms
inc
orb
xor
stos
lea
test
jge
mov
pushf
je
stos
dec
inc
stos
add
movsl
js
dec
push
cmp
ftst
mov
fisubs
xchg
xchg
pop
imul
ljmp
movsl
mov
repz
shlb
cltd
dec
outsb
addr16
loope
add
adc
cltd
movsb
xlat
mov
cmp
out
push
and
sti
daa
shll
sub
pusha
mov
add
ror
cmp
dec
sub
shrl
arpl
popa
subl
sbb
cmp
pop
sbbl
xor
mov
sbb
imul
lret
subl
cmp
cmp
imul
outsl
pop
outsb
xor
push
sbb
test
add
das
cli
out
int3
push
xor
jle
out
cmp
movsl
ljmp
lods
and
xchg
adc
enter
test
jno
icebp
imul
filds
inc
mov
inc
xchg
dec
movsb
jmp
or
mov
add
stc
fsts
aas
sub
mov
adc
pop
lahf
icebp
addr16
mov
pop
movsb
mov
mov
cli
jmp
or
and
xor
pop
mov
lahf
dec
push
pop
inc
push
sbb
cwtl
nop
dec
inc
push
push
sahf
mov
ljmp
cmp
repnz
push
adc
lods
mov
outsl
xchg
subl
stc
jp
jb
pop
xor
mov
lds
add
adc
mov
mov
mov
movsl
aas
push
pop
sbb
lods
push
mov
add
mov
push
jg
ret
popa
push
cltd
ret
out
in
dec
call
xchg
das
inc
pop
adc
mov
iret
xchg
pop
mov
les
cltd
repnz
mov
xor
mov
stos
call
fistl
mov
lahf
jo
jge
mov
jmp
and
lahf
stc
xlat
stos
outsb
pushf
mov
pop
imul
sbb
in
movsl
imul
dec
lods
mov
add
call
push
jae
cltd
xchg
xchg
bound
mov
ret
xor
sbb
mov
adc
and
mov
aas
rclb
and
in
push
xor
add
lds
xchg
add
pop
das
pushf
inc
mov
sbb
sbbl
mov
jbe
loope
xor
mov
jge
aam
inc
mov
push
cld
out
mov
or
adc
call
inc
jecxz
adc
pusha
xor
jns
sub
ret
or
inc
repz
rol
push
and
push
mov
mov
jae
mov
loopne
pop
sbbb
dec
pop
stc
in
cmpl
jo
mov
sarb
test
rcll
jnp
lcall
idiv
mov
dec
or
xor
leave
nop
vpacksswb
xor
mov
pop
mov
lods
repnz
and
lock
icebp
fisubs
adcb
idivb
stos
mov
aad
inc
fsts
fisubs
imull
xchg
push
dec
jl
mov
stos
pop
mov
jo
scas
test
dec
inc
out
jnp
mov
stos
pop
mov
push
or
les
push
or
mov
jmp
add
push
stos
or
mov
rcll
xchg
mov
and
mov
mov
jp
mov
mov
leave
inc
jne
and
adc
out
pop
xchg
ja
push
les
xor
andl
out
lcall
insb
jnp
jne
imul
pop
mov
xor
shlb
adc
mov
cmpsb
jbe
int3
add
ljmp
mov
dec
out
insb
lret
fistl
inc
sbb
les
movsb
cmp
test
mov
mov
les
push
add
inc
inc
jge
jo
daa
xor
sub
sub
cwtl
loope
daa
in
mov
sbb
lret
lds
cmp
mov
sarl
std
jne
cmp
and
cmc
or
push
mov
out
fcmovnu
mov
imul
jp
test
and
enter
pushf
xchg
push
pop
jno
sti
imul
sub
sub
sar
nop
pop
mov
cmp
aas
popf
ret
out
sbb
adc
ljmp
inc
aad
jmp
cli
jmp
lcall
aaa
sub
add
jl
mov
test
mov
lret
stc
or
lret
sub
push
xorb
loope
ror
repz
pusha
jnp
mov
dec
xchg
cmc
lods
into
xchg
insb
outsb
lret
notl
stc
and
loopne
ficompl
stos
repnz
xchg
inc
jl
out
mov
lret
inc
insl
add
stc
pop
xor
push
jg
clc
ja
les
inc
pop
mov
in
adc
mov
mov
push
aad
loope
call
fdivs
pop
pop
and
jmp
adc
sub
inc
rcl
mov
sbb
inc
jg
inc
adc
pop
addr16
das
add
cmp
mov
dec
jle
scas
lods
stos
push
mov
xlat
loop
pop
jno
leave
imul
enter
mov
xor
sub
lds
dec
inc
in
inc
mov
into
pop
xlat
add
xor
sbb
mov
push
push
and
inc
cbtw
ficompl
nop
pop
ljmp
inc
xchg
jo
pop
bound
sub
push
jnp
and
add
pop
dec
stos
push
xchg
push
sbb
pop
push
sbb
xchg
mov
mov
aam
je
cmp
xchg
cld
cmp
cli
push
aas
mov
cld
inc
mov
ret
dec
enter
test
mov
js
out
shlb
fwait
inc
repz
sbb
fwait
jns
xchg
mov
or
aam
sbb
mov
cmp
iret
inc
sbb
test
xchg
shlb
lret
mov
pop
es
lds
and
adc
pop
sbb
xor
jne
mov
sub
jne
jecxz
mov
mov
fistpll
mov
fninit
xchg
loop
xor
pop
pop
mov
nop
push
sub
inc
xor
cmpsb
inc
imul
xorb
add
mov
std
xlat
add
cld
jnp
mov
jo
xchg
mov
add
ljmp
call
into
push
dec
xor
push
jl
push
mov
xor
imul
lea
notl
lret
loopne
call
add
fdiv
pop
cli
fwait
xor
or
fs
setbe
popa
or
dec
fimull
xorb
xchg
add
in
push
addr16
mov
or
in
mov
adc
and
jl
sti
cs
push
in
outsb
lods
adc
jo
jb
aam
xchg
dec
roll
push
jo
mov
dec
add
mov
mov
inc
mov
xor
movsl
out
push
jle
sti
xor
mov
sbb
mov
add
push
ja
or
push
aam
add
inc
inc
add
negl
into
or
xlat
pop
and
mov
pop
pop
sub
popa
sub
xchg
jmp
cmp
sbb
push
stos
jbe
ficomps
fdivs
mov
lods
test
and
pop
cmp
push
stos
xor
mov
movsl
andl
dec
push
rclb
dec
dec
mov
jmp
pusha
aaa
lds
adc
loop
hlt
repnz
popa
addr16
mov
sbb
jg
insb
in
jbe
inc
fisubrl
je
pop
mov
xor
sub
ss
mov
das
aaa
test
testl
insb
aas
arpl
cmpsb
add
adc
int
stos
and
mov
mov
adc
mov
rcrl
xor
push
adc
mov
aas
test
xlat
test
xor
fisubs
xor
xor
int
add
inc
iret
jnp
adc
or
cmp
mov
jmp
aad
mov
ret
or
fs
hlt
adc
jmp
sub
jmp
sbb
pop
mov
out
ss
call
pop
insl
bound
in
jne
cli
data16
or
call
es
cld
pop
adcb
or
cmpl
mov
add
shll
xorb
das
and
stos
sbbb
jae
xchg
inc
push
in
inc
sub
mov
and
cmp
and
inc
inc
xor
lea
and
inc
push
and
push
jnp
repnz
in
mov
lahf
push
adcb
mov
shll
jle
cmp
in
imul
xchg
xor
ret
fidivrs
sbb
fsts
pop
out
push
cli
sub
pop
push
das
adc
jnp
or
mulb
mov
jecxz
jbe
mov
out
idiv
xchg
adc
jmp
adc
lods
ss
push
pushf
popa
ja
jbe
mov
add
fsubp
sbb
push
sbb
pop
pop
xchg
or
mov
jo
call
push
jg
outsb
insb
inc
aaa
inc
xchg
xor
add
or
and
xor
inc
ja
inc
int3
fcomip
lods
mov
sub
cmp
xchg
mull
or
pop
inc
inc
inc
push
ficoml
push
test
bound
and
rclb
mov
sahf
mov
lea
insl
cwtl
jno
cwtl
mov
clc
pop
cmpl
adc
mov
shlb
pop
mov
icebp
std
mov
fadd
cli
mov
pop
ret
add
push
repnz
mov
xor
cs
pushf
outsb
inc
lock
test
inc
push
dec
push
or
mov
gs
and
adc
imull
fidivrs
lret
xor
xchg
scas
in
leave
stc
test
pop
roll
or
xchg
jne
and
pop
mov
cwtl
mov
loopne
inc
mov
loopne
xchg
pop
mov
push
add
pop
or
mov
loop
out
stos
gs
pop
mov
jmp
mov
icebp
lods
mov
adc
notb
imul
and
scas
lret
push
mov
xor
adc
jmp
cmp
cs
jecxz
aam
pop
stos
sarl
rclb
popl
std
hlt
orl
clc
xchg
mov
test
dec
xchg
mov
mov
in
mov
or
xor
xchg
dec
sti
repz
sbb
repz
cmp
data16
jno
roll
incl
and
scas
push
cltd
xor
imul
mov
insb
push
mov
jecxz
outsb
mov
sbb
data16
xor
mov
xchg
stos
mov
into
nop
lods
inc
pop
insl
push
add
imul
jp
xchg
and
divb
and
mov
imul
jp
pop
mov
shlb
adc
mov
nop
mov
pop
out
call
js
mov
mov
stos
rcl
mov
dec
inc
pop
sub
scas
enter
and
rcr
fmul
ljmp
imul
jg
das
xchg
int
dec
test
push
cli
and
jge
push
add
cmc
and
push
add
adc
ret
push
ret
inc
mov
push
imul
data16
adc
adc
mov
jb
or
push
mov
adc
fprem1
mov
repz
xchg
cs
dec
pop
sbb
repz
aad
xchg
push
pop
mov
lret
sub
inc
incl
fcomip
stc
push
jb
out
hlt
push
sub
mov
jg
outsl
lret
int3
and
add
or
adc
out
stc
lahf
mov
mov
or
mov
loop
jecxz
rorb
pushl
cld
add
repnz
jns
scas
jns
sbb
dec
icebp
sub
or
xor
xlat
pop
lock
mov
scas
fisubrl
or
xor
xchg
popa
and
xor
mov
push
fwait
mov
xchg
push
mov
or
sbb
rcll
push
jns
sbb
popf
dec
int
sbb
cld
js
cwtl
mov
rol
popa
mov
and
je
hlt
orb
mov
cmp
sbb
jae
lock
mov
mov
or
mov
jno
inc
stc
stc
xlat
mov
sub
imul
js
cmp
cmp
and
pushf
fwait
loopne
arpl
gs
imul
pusha
push
subb
xlat
pop
aas
sbb
sub
les
mov
push
and
insl
add
inc
mov
negl
inc
push
and
add
mov
add
pop
jmp
ret
iret
lds
jns
bound
lcall
and
lcall
sarb
out
xor
mov
xchg
aad
lahf
outsb
gs
cmpsl
xchg
loopne
or
add
jne
daa
and
pop
mov
loop
test
mov
inc
or
repnz
test
ds
add
in
push
cli
movl
adc
in
or
jecxz
jl
jnp
pop
mov
dec
cmp
jno
pop
addr16
push
or
loop
add
adc
subl
cmp
sbb
cmp
les
jle
xor
mov
add
faddl
mov
adc
inc
shll
lods
jns
addb
and
push
sbb
aad
lea
adc
push
bound
jle
test
jecxz
sub
in
dec
sbb
jle
adc
scas
sbb
xlat
ds
arpl
loopne
les
leave
mov
cmp
pop
int3
das
jge
ss
push
push
test
jno
das
nop
loop
lods
rcr
scas
push
lods
cwtl
stc
sbb
or
mov
inc
enter
or
insl
push
inc
adc
add
jp
jmp
or
dec
bound
dec
sub
cmp
xchg
dec
mov
sub
test
lret
and
cmpsb
out
pop
adc
jg
fbld
add
adc
adc
fwait
dec
push
popf
inc
sub
aaa
call
push
xchg
fstps
or
mov
mov
push
pop
or
js
lret
inc
adc
push
test
adc
xchg
add
push
xchg
and
jecxz
into
pop
testb
mov
clc
ljmp
or
jae
xchg
das
sbb
pop
sbb
jno
push
cmpsl
and
insb
imul
loope
sub
aaa
xor
test
pop
adcb
lock
mov
mov
cmp
sbb
lahf
xor
call
fs
mov
test
jb
movsb
xchg
mov
mov
add
sbb
inc
ss
jmp
jbe
sub
loop
stc
jnp
jnp
fsts
in
in
mov
test
scas
mov
sahf
pushf
adc
cmc
xchg
inc
xor
mov
dec
data16
cmp
mov
aad
cs
imulb
adcb
pop
cwtl
and
enter
dec
rorb
iret
ret
fnsave
fwait
in
push
fs
or
inc
outsb
push
inc
cmp
adc
mov
mov
or
pop
xchg
jg
addr16
mov
inc
int3
adcb
and
xchg
or
jo
mov
pushf
jno
dec
or
cltd
and
cmp
push
insl
movsb
out
test
jnp
xlat
fisubs
bound
icebp
adc
lds
daa
popf
sub
jg
inc
inc
in
push
jl
sbb
add
mov
repz
aaa
push
sub
loope
daa
xchg
test
bound
xor
lret
dec
inc
mov
inc
repnz
jne
xor
dec
mov
push
jns
push
lret
and
loope
adc
mov
imul
pop
ret
pop
jae
or
xchg
lds
mov
and
dec
outsl
out
jne
lret
es
sbb
pop
push
loop
mov
mov
jae
mov
inc
inc
push
and
push
and
inc
sub
jl
gs
pop
push
sub
add
out
mov
jmp
sub
in
dec
mov
cmpsl
push
adc
mov
jl
ja
jno
pop
fiaddl
scas
push
sub
sub
push
jno
les
hlt
mov
xchg
jne
xchg
jne
mov
and
cwtl
repnz
lahf
xor
out
test
int
mov
push
ja
fsubl
xor
gs
std
add
pop
mov
xlat
cmpsl
cld
ds
cs
je
incl
push
inc
cmp
js
xor
je
stos
test
scas
insl
inc
mov
pop
jg
les
mov
push
fistl
leave
xchg
dec
and
push
mov
cwtl
mov
jg
and
lods
imul
sub
loope
xor
andl
mov
test
test
add
xor
ja
pop
scas
cmpsb
push
fstpl
push
cmp
inc
inc
mov
mov
mov
sti
dec
inc
lcall
cmpsb
loope
insb
cmc
mov
mov
shlb
int3
outsl
inc
xchg
in
in
mov
jge
inc
mov
add
in
inc
or
imul
xchg
lahf
bound
pop
xchg
ljmp
push
jp
add
add
sbb
push
dec
jns
test
dec
movsb
fcoms
adcl
pop
mov
sub
cmp
cld
out
dec
add
xor
repz
in
inc
add
xlat
mov
je
sti
or
jp
out
push
mov
sahf
cmp
xchg
xor
out
jp
lret
jmp
push
push
mov
cmp
xor
int3
push
les
inc
repnz
pusha
xchg
inc
mov
add
insl
test
inc
xor
nop
sub
dec
test
jbe
test
pushf
adc
cmp
stc
and
js
inc
outsl
aad
enter
mov
sub
cs
push
popf
sbb
jp
cmp
mov
leave
std
fidivrs
pop
push
push
gs
add
aas
in
dec
push
sbb
xor
orb
lcall
repnz
mov
add
les
arpl
repz
sbb
mov
pop
mov
inc
pop
mov
add
pop
dec
enter
pop
cli
adc
jbe
cmc
or
jnp
scas
test
xchg
push
sbb
pushf
adc
xor
xor
in
xor
jns
or
enter
sub
call
out
pushf
fisubrs
out
gs
enter
test
sub
or
jge
int3
inc
mov
inc
repz
inc
fisttpll
push
enter
push
xor
in
adc
shll
loop
mov
pop
push
push
movsb
cwtl
jno
sub
stos
inc
or
adc
inc
push
stos
add
nop
jno
out
scas
jl
aas
popa
cltd
mov
popl
adc
das
mov
sahf
dec
or
sti
jg
es
push
mov
push
mov
jnp
pop
enter
out
ljmp
icebp
fisubrl
mov
pop
sbb
mov
push
andb
mov
mov
jl
inc
push
loop
xchg
xchg
test
cmp
sbb
scas
and
cli
scas
ss
inc
jge
cmc
or
mov
adc
mov
ss
into
mov
add
sbb
outsb
jns,pn
aas
add
inc
or
cmp
aas
cmp
xor
je
in
xor
inc
pop
test
cmpl
scas
pop
mul
adc
sbb
mov
sbb
aam
test
xor
xchg
test
fwait
sub
lea
lret
sbb
mov
adc
movsl
jne
insl
pushf
js
push
out
push
push
jo
call
jo
push
jns
lea
fistl
test
or
mov
out
insb
test
mov
icebp
xchg
fisubrs
inc
fidivrl
cmpl
mov
test
jp
sub
pop
sar
pop
mov
cmp
in
insb
add
movsb
xor
xchg
inc
pop
inc
add
pusha
loope
pop
rorl
addr16
imul
ja
test
fisubrl
lret
nop
sahf
ss
mov
jbe
rcrl
pop
and
dec
add
or
mov
adc
lods
adc
or
adc
dec
lcall
sti
xchg
add
sbb
daa
popl
xlat
lret
out
push
jge
inc
mov
mov
mov
cld
sbb
pop
adc
js
int3
inc
sub
jae
inc
lahf
aas
imul
mov
into
into
mov
sbb
and
cmp
xchg
sbb
xor
aas
inc
sbb
xor
repnz
repnz
int
xor
fisubrs
xchg
lret
mov
fs
or
mov
ret
mov
jmp
mov
xchg
add
or
pop
repz
stos
or
mov
cmp
pop
dec
mov
lods
out
or
mov
scas
mov
lea
fcmovnbe
sbb
xchg
jg
cld
mov
cmc
mov
push
popf
pop
jne
cmp
cmp
fwait
clc
push
xor
mov
pop
scas
into
pop
or
clc
and
pushf
cwtl
inc
cmc
sbb
std
insl
push
mov
push
sahf
xor
test
mov
xchg
push
jmp
lods
in
imul
adc
les
adc
out
jg
popa
or
ret
test
dec
sarw
adcl
movsb
fists
inc
push
xor
sarb
sub
jne
xchg
popa
lret
xor
cmpsb
lock
pop
jno
imul
les
aas
out
arpl
jg
sar
push
adc
cmc
in
dec
jo
test
pop
add
rorl
push
outsb
push
scas
cmpb
mov
icebp
outsl
xchg
push
testb
test
jo
hlt
and
inc
mov
and
lcall
xor
inc
mov
or
das
sahf
mov
mov
mov
mov
add
lea
add
push
pop
fnstsw
lock
xchg
iret
in
inc
cld
cmp
mov
test
loop
sbb
push
xchg
push
mov
enter
cmp
push
pop
call
xlat
mov
sub
inc
mov
pmaxub
lds
cmp
into
push
repnz
lods
pusha
js
mov
fstps
out
roll
daa
push
and
adc
sub
xchg
mov
insb
jle
pop
lea
pop
xchg
cmp
xchg
xor
je
pop
add
imul
aam
rclb
call
cltd
cmp
add
cmpsb
push
sub
mov
pop
xchg
xor
inc
mov
leave
add
push
int3
loope
ficomps
stos
data16
in
xor
repnz
jp
sbb
mov
lds
pop
lret
mov
jo
push
sbb
hlt
inc
add
xor
les
xchg
cmc
mov
and
mov
cmp
adc
mov
aam
adc
xor
push
popa
push
rclb
mov
scas
add
dec
dec
in
sbb
sub
mov
lock
dec
dec
inc
mov
push
xchg
int
std
and
jge
test
scas
pusha
xor
dec
sub
cmp
arpl
daa
mov
cwtl
out
mov
cmp
fistpll
mov
mov
pop
orb
cmp
outsb
inc
inc
call
mov
bound
add
cmp
jmp
xor
cli
lahf
mov
aad
or
cmpsl
lcall
loope
cmpsl
xor
xor
mov
jl
gs
test
mov
sub
jl
or
fnstcw
test
pop
xor
ss
or
je
cmp
inc
cmpl
xor
loopne
test
push
stc
lret
gs
fcoms
movsl
shrb
aad
and
sbb
pop
xor
jmp
pop
jb
or
dec
xchg
sub
mov
xchg
sbb
push
aaa
lods
pop
fidivrl
decl
push
dec
cmp
cmpl
clc
mov
loop
lahf
pop
adc
mov
push
pop
jae
mov
pop
and
scas
mov
push
sbb
cld
cli
arpl
aad
imul
inc
pushl
push
adc
lods
movsb
mov
xor
in
mov
and
test
cmp
jge
sahf
xor
pusha
repz
mov
mov
inc
sub
jl
mov
fadd
and
fisttpll
sti
lds
cmp
aas
pop
adc
repnz
int3
mov
dec
xor
aaa
lret
mov
xlat
jne
jmp
xor
xchg
xchg
imul
mov
xor
sub
repz
xor
push
ds
popa
imul
cmp
in
mov
enter
cmpsl
inc
int3
ss
sbb
arpl
cs
lods
pop
lock
rep
in
mov
and
jne
mov
mov
cli
mov
arpl
addr16
add
test
popa
pop
movsl
jb
inc
lret
pop
enter
gs
cmpsl
lcall
ret
dec
loop
sti
sub
cmp
xor
ljmp
movsb
aad
dec
inc
aad
xchg
fdivrs
stos
dec
push
sub
pop
dec
std
call
mov
scas
and
mov
sub
lods
call
cltd
xor
mov
jle
fsts
jo
std
mov
in
fimull
aad
push
push
sbb
push
mov
sbb
xor
jns
mov
scas
cwtl
xlat
adc
aas
lahf
push
mov
mov
aam
adc
mov
add
xchg
sub
rcrl
or
pushf
sti
adc
or
enter
push
test
mov
lods
sar
repnz
mov
das
jmp
lods
or
xchg
out
and
sbb
imul
adc
es
lret
sub
mov
call
pop
clc
push
cli
into
push
ret
test
xor
out
bound
movsl
adc
inc
cwtl
or
or
daa
mov
sbb
jo
push
loop
add
loopne
push
cmpl
popa
push
scas
outsl
mov
inc
fisubl
hlt
jnp
imul
out
cli
les
pusha
jle
dec
mov
mov
movsb
sbb
jb
lods
aaa
cmpsb
lahf
insb
sub
jo
mov
aad
or
add
mov
add
mov
mov
add
pop
and
sbb
jmp
dec
gs
dec
xor
stc
fbstp
adc
lea
or
addb
sti
xchg
pop
adc
int
fisttpl
lods
std
mov
lahf
insl
frstor
int3
xchg
aaa
pop
in
sahf
in
push
jge
sahf
aaa
sub
dec
pop
sbb
popa
jne
fcoms
push
cmp
loop
dec
push
in
add
mov
out
pop
les
clc
or
inc
imul
adcl
mov
sub
xchg
sbb
and
xchg
mov
leave
pop
mov
mov
sub
mov
scas
stos
dec
idivb
fs
xor
adc
xchg
stc
lahf
mov
lock
pop
mov
fistl
test
addr16
cmp
aam
push
data16
xchg
mov
xchg
cs
sub
pop
iret
loop
inc
das
or
stc
push
push
fdivrs
fcoms
pop
rcrl
xchg
cwtl
pop
inc
jae
inc
in
lret
adc
test
out
jnp
rcrl
fimuls
mov
shll
sub
fiaddl
cmpsb
lock
cld
xor
push
add
add
jecxz
mov
adc
add
ret
or
mov
mull
mov
xlat
fisttps
ret
sub
pop
test
cmp
ja
xchg
sub
shll
scas
scas
sub
inc
xchg
repz
jne
jns
inc
sub
xor
popa
imul
inc
int
cltd
adc
inc
sbb
js
into
enter
xorl
mov
aaa
and
lcall
mov
outsb
xchg
into
mov
in
popf
mov
js
movsl
aam
sub
cli
mov
ds
and
mov
iret
jmp
aad
mov
inc
mov
xor
mov
shll
sbbl
sbb
loopne
mov
jp
hlt
pop
ret
adcb
in
inc
ret
repnz
inc
aaa
pushf
hlt
scas
sti
mov
inc
popf
imul
cwtl
xchg
js
mov
lcall
inc
aaa
sahf
and
jl
inc
jae
mov
into
pop
cmp
and
push
aam
cld
pushf
mov
cmc
insb
negl
scas
outsl
mov
sahf
pop
push
pop
mov
sbbl
jg
inc
or
arpl
out
aaa
ds
xor
outsb
aaa
shll
sub
sahf
add
mov
push
jg
xchg
and
out
xchg
push
inc
sarb
stos
mov
fstl
mov
xchg
jo
mov
pop
and
add
jl
movl
push
sarl
push
in
mov
cmpsl
mov
jg
cltd
jp
xchg
push
out
push
xor
pop
xchg
enter
daa
and
outsb
push
adc
xor
mov
mov
ret
mov
cwtl
fdivs
or
adc
push
mov
and
sub
mov
test
pop
inc
mov
sbb
jl
pop
sub
mov
pop
xor
dec
repz
mov
repnz
fcomp
lahf
lock
testb
jmp
fsubrs
add
mov
mov
mov
pop
and
loopne
xor
imul
inc
adc
xchg
push
icebp
jg
mov
nop
inc
pop
jl
jmp
test
adc
cmp
inc
adc
es
xchg
push
imull
add
mov
inc
repz
or
mov
pop
sbb
mov
fs
pop
in
cmp
jge
add
out
or
xor
jbe
cmp
sbb
leave
imul
fcoms
call
inc
inc
mov
sbb
imul
dec
cmp
xor
jecxz
cmp
fwait
and
lret
rorb
insb
jne
pop
stc
sahf
and
lret
cmc
into
inc
ficomps
inc
clc
loope
pusha
shl
test
pushf
xchg
or
xchg
sub
mov
jl
scas
int3
inc
cli
les
incl
cmp
negb
pop
mov
or
daa
enter
scas
pop
mov
pop
rcll
mov
stos
cmp
and
mov
push
or
jns
sub
or
xor
sbb
andl
fcoms
pushf
adcb
adc
into
ret
jns
in
out
divl
and
or
cltd
pop
imul
lock
jle
ret
divb
leave
cli
rcll
sbb
push
jl
pop
pop
mov
and
rorl
fwait
lret
test
xor
fildll
bound
dec
pop
cmpsb
adc
xor
xor
mov
xchg
push
inc
icebp
mov
out
cmpl
mov
inc
jl
divb
mov
mov
orl
pusha
int
push
insl
pop
xchg
jne
push
ds
cmc
push
mov
or
or
in
sub
xor
insl
nop
inc
cmp
xchg
enter
adc
stos
mov
xchg
sbb
or
mov
xorl
movups
jbe
fildll
addr16
decl
adc
fdivl
jmp
xchg
jnp
adc
out
jns
mov
test
clc
dec
pushf
sbbl
push
aam
das
sub
pop
and
mov
pop
popa
nop
mov
xor
xor
shll
jnp
nop
jb
pop
and
aas
lods
ja
into
insl
fwait
dec
add
scas
add
shrb
and
iret
adc
fiaddl
lods
dec
sahf
xor
xchg
shrl
jle
ss
rorl
cmpsb
add
outsb
dec
insb
dec
rcrb
jne
ret
es
hlt
lret
mov
daa
and
xor
cmp
fs
jnp
sub
inc
pop
mov
sbb
rolb
fisubrl
pop
and
jne
xchg
popa
fnstsw
cltd
push
lock
push
jnp
dec
jno
cmp
push
ja
jmp
dec
jecxz
lock
push
pop
jne
lcall
fdiv
rolb
xchg
mov
in
mov
movsb
xlat
cmpsb
fistpll
outsl
mov
cs
push
cmp
ljmp
pop
rclb
and
cli
cmp
push
push
xorl
mov
push
imul
popf
testb
cmp
and
sbb
push
mov
aad
pop
aad
cmp
adc
pop
xchg
xchg
push
jae
imul
aam
or
mov
adc
inc
add
pop
fiaddl
add
push
push
ret
loope
into
cmpsl
jecxz
ret
xchg
mov
sbb
mov
shrl
inc
outsb
daa
hlt
out
inc
mov
jle
cwtl
pushf
sub
inc
and
lock
sub
jb
ss
js
dec
mov
insb
out
dec
push
mov
push
inc
xchg
adc
xchg
dec
pop
mov
push
hlt
popa
mov
popa
in
bound
popf
cmp
fidivrl
pop
mov
ljmp
and
movsb
inc
adc
scas
daa
cmpsl
pop
aaa
jae
mov
sbb
pop
inc
loope
jb
inc
or
inc
mov
sbb
xor
pop
adc
hlt
jl
mov
sbb
cmp
xor
sub
test
mov
xchg
push
cmp
js
dec
lret
jl
in
or
aaa
mov
icebp
stos
pop
ficomps
js
push
jl
in
or
les
out
mov
orb
inc
inc
fs
js
inc
ret
xor
mov
in
mov
test
call
xor
movsb
lret
imul
shrl
mov
push
push
xor
jp
icebp
xchg
dec
je
push
inc
jg
jno
ret
xchg
xchg
in
xor
dec
push
dec
nop
xchg
cmpsb
mov
mov
push
or
lea
roll
mov
sti
out
add
mov
cmpsl
cmc
mov
mov
int3
and
fistpll
nop
or
pop
pop
jecxz
dec
mov
sub
or
neg
enter
jnp
pusha
sbb
add
mov
dec
or
repz
xor
shlb
dec
sbb
std
jae
jnp
mov
mov
xlat
and
dec
pop
pusha
flds
lret
daa
lods
into
lcall
mov
int
lods
dec
adc
mov
sti
xchg
inc
jnp
addr16
sub
mov
jmp
ss
repnz
subb
push
cmp
inc
cwtl
imul
sbb
loopne
les
xor
cmp
pop
push
icebp
repz
sti
sub
sbb
ds
push
jge
in
test
in
jb
xchg
jne,pt
inc
std
mov
xchg
jnp
popf
sub
lds
jecxz
xor
shlb
or
pop
xchg
and
ud2
fcom
popa
aam
push
fs
rcll
mov
jg
outsb
sub
pop
sbb
cmp
dec
test
enter
mov
outsb
sub
mov
es
test
test
xchg
jp
cli
aaa
jge
pop
inc
dec
arpl
pop
pop
mov
push
mov
in
adc
mov
adc
ret
call
pop
adc
or
fwait
sbb
mov
ficoml
mov
mov
clc
mov
inc
je
rorb
and
es
and
mov
pop
jnp
data16
daa
push
shll
pop
call
mov
outsb
lea
ds
adcl
jne
in
lock
xchg
pop
push
stos
sub
rcrb
out
rclb
imul
xchg
gs
fdivrl
lcall
cmpsb
movntps
loop
cmc
roll
inc
push
or
movsl
lcall
add
scas
sub
in
jl
fiaddl
mov
sbb
in
test
and
lcall
sub
sub
pop
lcall
ds
push
inc
aad
cmp
push
mov
insl
in
mov
pop
mov
into
or
mov
fsub
inc
iret
push
sub
int
fcmovbe
pushf
int
rolb
test
call
mov
aas
into
cwtl
xchg
pop
dec
cld
and
hlt
jle
shlb
arpl
test
lea
sub
mov
outsl
push
xor
add
lcall
movsb
jg
jne
push
dec
push
andl
loop
clc
mov
push
js
nop
int3
loopne
cmp
dec
sti
in
lret
inc
test
sub
leave
dec
and
and
push
fidivrl
ss
dec
sbb
dec
scas
or
cmp
lds
push
lods
aaa
dec
mull
mov
in
into
out
popf
rcrl
add
cld
mov
aaa
xchg
data16
and
pop
jns
test
or
cmpsl
jne
scas
sub
fwait
mov
fisttpl
out
pop
push
jnp
lahf
stc
leave
arpl
out
fwait
add
xchg
ss
push
repz
sub
test
and
je
pop
sbb
test
push
sti
push
fisttpl
push
out
mov
adcb
aaa
pop
xorl
pop
outsl
jg
mov
jle
jp
sbb
and
lods
cmp
sbb
test
and
mov
pop
mov
mov
sub
push
push
popa
pop
icebp
enter
push
xor
out
stos
lahf
data16
add
sbb
out
sbb
stos
out
addr16
ret
cmp
movsb
pop
lcall
pop
mov
xchg
call
or
ds
dec
repnz
jle
adc
loop
mov
jg
daa
sbb
loopne
jae
jg
add
lret
inc
repz
aad
adc
xor
jo
inc
imul
push
mov
out
or
das
insl
test
pop
in
pushf
lahf
mov
out
push
adc
scas
outsb
sahf
pop
push
pop
jge
and
cmp
pusha
lods
js
push
and
sub
pusha
push
nop
jae
mov
or
and
loope
loop
cwtl
test
int3
mov
cmpsb
fcmovnb
sbb
lcall
jns
mov
cwtl
repnz
jns
dec
pop
push
pop
insb
iret
pop
test
jle
cltd
dec
clc
popa
sub
movsb
xor
xchg
outsb
inc
mov
pop
mov
add
sbb
ljmp
sbb
push
mov
pop
xchg
imul
mov
adc
rorb
adc
shlb
test
adcb
xchg
je
adc
stos
loopne
addl
and
and
rcrl
mov
lock
push
cmc
or
push
pop
adc
adc
leave
jl
sbb
pop
mov
movsl
adc
inc
cwtl
out
or
xchg
xor
enter
mov
pop
dec
push
std
faddl
out
xlat
lret
mov
lcall
aas
imul
sub
ds
repnz
lea
movsl
push
jmp
adc
mov
jne
arpl
inc
mov
aam
mov
enter
pop
addl
ret
push
xchg
xchg
cmpsl
repz
mov
das
pop
lcall
aad
out
lods
bound
add
xlat
mov
pop
xchg
shll
sub
pop
xor
add
dec
jnp
mov
repnz
addl
or
out
cmp
mov
mov
sahf
repz
enter
dec
repnz
arpl
adc
icebp
and
pop
int
xor
test
dec
test
xor
shr
pushf
in
pop
lret
xor
in
loopne
ljmp
lret
push
ja
mov
mov
push
aam
loope,pn
jge
popf
ja
sub
aam
mov
cmp
jmp
stc
fs
in
je
stos
addb
insl
and
xchg
outsl
jnp
and
adc
roll
fldt
ja
mov
cmp
push
mov
pop
iret
add
cmp
jle
fstp
mov
dec
adc
pop
xchg
js
jo
icebp
adc
lret
test
mov
lret
jnp
mov
sub
imull
push
jp
push
mov
clc
cli
loop
enter
les
popf
pop
jae
fiadds
pop
push
fnstsw
fsubrl
cwtl
mov
adc
stos
outsl
dec
jno
in
pop
imul
and
pop
lods
dec
jmp
push
sub
orl
icebp
adc
pop
leave
jecxz
stos
into
push
orl
ds
sub
xchg
pushf
mov
in
ljmp
mov
loope
das
jne
add
cmp
arpl
loope
xchg
xchg
aas
inc
sbb
pop
mov
rcrb
xor
test
mov
hlt
push
inc
mov
sbb
fmull
xor
ret
mov
push
add
add
jle
or
in
andl
inc
fistpl
pusha
sub
popaw
add
sub
pop
popf
out
daa
pop
sub
mulb
xchg
mov
icebp
sti
icebp
jo
mov
adc
add
mov
and
xor
inc
sub
fnstsw
xor
daa
or
cli
ljmp
rclb
and
jmp
dec
cmp
mov
inc
xchg
fistps
sarb
adc
ret
fisubrs
nop
jns
push
xor
ja
sbb
xchg
sub
ja
test
insb
ficompl
lock
in
and
and
lods
cmpsl
jecxz
std
insb
sbb
popa
lret
adc
push
mov
jae
xor
mov
mov
pop
test
jo
cmp
add
xor
test
sbb
lahf
lea
inc
lds
les
insb
imul
sti
cmpb
or
popf
sbb
jle
cwtl
and
xchg
cltd
jmp
jae
fsubrl
popf
std
loop
addr16
xchg
sti
ja
sub
iret
cmp
rcrl
imul
jmp
mov
push
js
xor
outsl
sarl
fdivs
pushf
push
mov
mov
sti
shll
inc
in
add
out
aad
jge
in
cmp
jle
out
lret
mov
sbb
cmc
xchg
push
jnp
xor
in
test
mov
imul
mov
or
cld
popa
mov
loop
inc
andl
jecxz
mov
mov
sub
sub
rolb
fwait
into
push
push
push
add
lea
push
movsb
or
mov
and
mov
xor
popa
ljmp
or
inc
nop
xor
jmp
int3
jno
xor
or
dec
iret
inc
movsb
insl
pushw
aad
and
push
jl
or
dec
pop
inc
push
inc
pop
jmp
lahf
inc
cmpl
sbb
push
sbbb
lret
stc
loop
iret
loop
push
mov
push
fwait
sub
sarl
sahf
out
loop
inc
and
sbb
aad
sti
and
divl
push
adc
ds
dec
jno
jge
mov
sbbb
push
fsub
outsl
add
js
lea
mov
test
sbb
lds
shll
xchg
xchg
cmpsl
movb
adc
icebp
ljmp
adc
int3
outsl
loope
cmpsb
cmp
jl
jnp
add
mov
sti
push
and
mov
mov
ror
dec
mov
sbb
fdivs
sbb
and
xrelease
jbe
mov
shlb
jg
jbe
cmp
icebp
ljmp
adc
pop
mov
enter
imul
sbb
or
or
push
icebp
iret
lods
aad
xchg
adc
fildl
sub
xchg
or
packssdw
pushf
push
loopne
xchg
adcb
push
popf
loopne
jae
push
outsl
nop
jp
cltd
or
icebp
cmc
mov
cmp
arpl
adc
test
pop
adc
adc
fildll
sub
mov
jl
mov
out
ja
cmp
mov
or
cs
adc
loope
pop
and
decl
jmp
lea
add
pop
jmp
jne
mov
push
sub
dec
movsl
dec
lock
push
popa
cmp
dec
push
into
sbb
in
fs
int
sub
jbe
jns
jae
pop
or
gs
push
aas
mov
inc
adc
pop
pop
xchg
fs
dec
push
mov
add
shrl
jnp,pt
lock
sbb
jo
out
in
and
out
sahf
in
add
jle
and
and
in
lcall
push
rcrb
addr16
push
loope
push
add
add
je
jmp
aas
out
cli
je
flds
inc
mov
out
lea
loopne
xchg
jb
pop
mov
cltd
pop
sub
test
test
lret
mov
adc
cmp
ret
enter
mov
call
push
add
pusha
out
je
inc
mov
lcall
inc
and
mov
pop
movsb
mov
loope
sbb
inc
rcrb
add
xchg
dec
mov
pusha
ds
notl
popf
lock
adc
add
add
loope
add
push
or
add
fs
imul
inc
gs
jb
arpl
fs
jae
push
imul
insb
insb
outsl
arpl
jb
jne
insb
inc
jb
add
sbb
add
add
add
add
add
add
add
push
inc
add
add
add
add
add
or
add
add
add
add
add
jo
add
add
add
add
add
mov
add
add
add
push
add
and
add
push
add
inc
push
add
dec
push
add
loopne
add
pushf
inc
add
add
add
out
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
add
add
ss
add
mov
cmpl
jne
add
mov
jmp
mov
add
add
cmpl
je
add
mov
add
push
push
push
push
pushl
pushl
mov
mov
mov
add
call
pop
pop
pop
pop
cmp
je
add
jmp
push
push
pushl
call
lea
mov
lea
mov
mov
cmp
je
mov
inc
sub
cmp
ja
mov
cmpb
je
mov
cmp
jne
mov
shr
rol
xchg
jmp
mov
xchg
rol
xchg
sub
add
mov
add
sub
mov
loop
call
lea
mov
cmp
je
mov
sub
je
mov
lea
mov
lea
mov
cmp
je
mov
add
mov
jmp
mov
add
mov
xor
mov
inc
or
je
cmp
ja
add
add
jmp
and
shl
mov
add
or
jne
mov
add
jmp
xor
xchg
mov
cmp
je
lods
or
je
add
add
jmp
xor
shr
lods
or
je
add
add
jmp
lea
mov
lea
mov
cmp
jne
add
push
push
push
push
push
push
call
pop
pop
cmp
jne
add
mov
rep
sub
sub
push
pushl
push
push
call
push
pop
sub
xor
mov
cmp
je
inc
lea
mov
push
push
push
push
push
pushl
pushl
mov
add
push
call
pop
pop
pop
pop
add
loop
mov
cmp
je
popa
popf
mov
ret
popa
popf
jmp
mov
or
je
mov
add
cmpl
jne
cmpl
jne
cmpl
jne
jmp
mov
add
push
push
push
lea
add
add
push
call
pop
pop
pop
cmp
je
mov
add
add
xor
mov
cmp
jne
inc
jmp
mov
add
push
push
push
cmpb
jne
inc
mov
and
mov
movb
push
push
pushl
call
pop
pop
pop
pop
cmp
je
mov
mov
pushl
popl
add
inc
jmp
clc
ret
jmp
push
mov
mov
mov
cld
mov
movsb
call
jae
xor
call
jae
xor
call
jae
mov
call
adc
jae
jne
stos
jmp
call
dec
loop
mov
call
jmp
lods
shr
je
adc
mov
jmp
xchg
dec
shl
lods
mov
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
pop
ret
push
call
ret
mov
adc
push
add
or
inc
cmp
add
or
ret
mov
add
adc
mov
cmpl
adc
or
push
and
rolb
add
call
enter
add
shl
or
dec
mov
jne
pop
sbb
add
mov
xor
fildl
or
sub
in
ljmp
jb
sub
or
add
adc
out
xor
inc
out
clc
dec
jne
pop
mov
bound
jp
mov
ret
pop
addr16
cs
ret
push
movzwl
mov
or
movl
jae
mov
mov
sbb
sarb
cli
sar
add
cmp
sbb
lahf
adc
loope
jno
data16
jb
jmp
inc
sub
sahf
clc
fistl
scas
mov
or
int3
shr
sahf
ret
inc
test
ds
add
in
push
push
jbe
jge
sub
jle
mov
xorb
int3
or
xor
aas
std
add
int3
dec
cld
sbb
pop
ret
add
shl
pop
pop
or
sub
cmp
jbe
mov
xchg
inc
cmp
mov
notl
jle
push
lret
inc
pop
or
call
mov
push
or
inc
cmp
jl
adc
leave
popa
fcomi
xor
inc
xchg
outsb
enter
test
or
jo
xchg
mov
push
pop
mov
sar
sub
les
jne
mov
shr
sbb
loopne
add
jbe
aaa
call
or
cmp
sti
inc
inc
shr
sbb
sbb
jbe
pop
mov
xor
adc
mov
test
push
sbbb
icebp
call
es
sub
push
lea
pop
call
cmp
icebp
xor
push
jne
lret
and
mov
lahf
and
add
push
clc
mov
inc
adc
sub
jl
cmp
or
orb
enter
mov
sbb
leave
cltd
dec
hlt
nop
push
call
movsb
data16
orl
push
in
inc
lock
shl
add
xor
dec
dec
into
cmp
cmp
push
adc
fdivl
push
sbb
mov
xorl
fcompl
rep
adc
retw
jne
inc
add
cli
cld
inc
mov
add
xchg
pop
mov
and
mov
adc
hlt
test
fwait
ret
push
les
mov
jbe
sbb
test
movsl
mov
sub
inc
add
movsl
inc
pushf
mov
add
and
leave
push
adc
jge
push
gs
push
jmp
and
or
cmp
or
movsl
sbb
into
pusha
or
divb
pusha
clc
lcall
push
sbb
push
insb
out
add
mov
fsub
mov
iret
push
sbb
push
repnz
scas
adc
add
test
cmp
sbb
sub
sahf
das
mov
inc
dec
inc
xchg
add
rorl
call
pop
cmp
je
sub
incl
setge
sub
clc
lea
xchg
hlt
shll
add
decl
mov
jmp
mov
inc
xor
xchg
jmp
sub
mov
lock
jne
leave
adc
push
mov
cmp
insl
sbb
fldl
test
fwait
push
aad
cltd
jle
mov
or
jmp
lock
in
rorl
sub
mov
xor
or
call
add
mov
add
sub
jp
dec
push
andl
sub
leave
loop
and
sti
dec
repnz
popa
mov
sub
pop
jge
dec
push
in
sub
pop
dec
pop
add
pop
jo
jmp
add
ret
psubq
ds
add
and
inc
adc
imul
nop
leave
dec
xor
dec
cmpb
cmp
sbb
rcl
inc
test
mov
addb
inc
adc
rolb
jle
cmp
icebp
icebp
iret
rorb
nop
stos
mov
shrb
int3
pop
outsb
sbb
movsb
jne
cmpl
lock
adc
jb
mov
orb
shl
dec
add
les
xchg
sbb
push
cs
sub
jb
xor
mov
mov
negb
rcll
rcrl
dec
jne
cmp
jne
dec
sbb
cmp
add
sub
add
popa
jecxz
iret
push
pushf
dec
sbb
jecxz
lcall
inc
mov
sub
mov
cmp
dec
mul
sbb
inc
outsb
addb
xchg
rolb
add
les
xor
add
add
pop
add
and
mov
xor
add
xor
pop
inc
loopne
mov
popf
xchg
push
mov
pop
loopne
movl
enter
xchg
nop
pop
lcall
cmp
sbb
inc
jbe
incb
mov
mov
icebp
popa
mov
mov
push
loope
pop
pop
insl
mov
inc
cmp
mov
shlb
mul
xor
add
scas
or
mov
in
jp
lock
notl
jae
popw
sub
mov
repnz
jbe
movsl
or
decl
das
imul
and
sbb
inc
lock
push
ret
icebp
or
push
sbb
les
cltd
inc
push
push
push
push
jecxz
nop
test
cmc
out
inc
adcl
mov
dec
popa
test
push
scas
dec
pop
cld
cmc
cmpsb
or
push
xchg
xchg
sub
mov
cmp
testl
test
mov
hlt
xchg
jecxz
fldenv
add
sahf
inc
jecxz
and
leave
and
pushf
inc
cs
jbe
jle
repz
rclb
psraw
xchg
mov
xchg
cld
mov
sub
sbb
add
pop
jb
mov
lock
ljmp
lock
ljmp
in
mov
mov
fwait
jbe
push
adc
xor
ds
rcrb
lods
xchg
iret
add
enter
or
movsb
out
js
mov
insl
push
test
mov
shrb
mov
mov
cmc
adc
std
pop
xchg
or
sub
xchg
sub
in
inc
pop
js
jo
fcomps
adc
lret
outsb
dec
cs
mov
jo
cli
xchg
cs
hlt
and
and
in
adc
jb
lods
add
fldl
gs
dec
push
pop
fadds
movsb
dec
mov
xchg
cmp
dec
test
arpl
out
jp
test
xchg
stos
enter
dec
push
fnsave
lods
mov
push
loope
lea
xchg
push
rorl
mov
xchg
push
fld
xchg
mov
cmp
int
mul
pushf
aas
lcall
arpl
sub
mov
cmc
or
sti
cmpsb
adc
xor
inc
dec
inc
ds
imul
in
test
das
daa
cmpl
jge
mov
ret
call
jl
sbb
stc
xchg
jno
stc
das
pop
xchg
mov
sub
push
push
jo
cmpsl
stos
imul
fs
pop
lahf
sub
lcall
lcall
jl
dec
adc
popf
mov
cmpsb
and
fstl
sbb
cwtl
xlat
mov
sub
lds
jb
push
inc
pop
ret
inc
rcrb
jle
lret
sub
sbb
test
xor
call
out
sbb
repz
jg
or
or
pop
mov
xchg
xchg
push
xor
inc
fimull
inc
or
dec
and
aad
test
xor
clc
dec
sbb
sub
inc
xchg
adcb
fists
scas
push
lret
cmp
sti
jg
xchg
sub
and
add
jl
mov
mov
pop
pop
sbb
test
cmp
mov
dec
lret
sbb
mov
push
mov
xor
cmp
insl
je
mov
mov
xchg
out
xor
popa
in
or
aaa
jae
lock
push
pop
jae
mov
mov
lahf
xor
sarb
mov
mov
inc
xchg
pop
inc
dec
mov
in
mov
sbbb
jae
popa
xor
lods
lcall
popf
mov
pop
push
xchg
mov
orb
out
jmp
xchg
adc
xor
push
jg
adc
and
mov
out
xor
arpl
test
js
lods
mov
cmc
and
stos
cmp
xor
jl
push
fwait
pop
lahf
shl
fbld
sahf
adc
sbb
push
rcrb
xor
nop
and
rcrb
pusha
fbld
jnp
out
rorb
loop
mov
stos
dec
mov
or
or
dec
pop
les
xor
add
and
fs
call
dec
pusha
outsl
adc
mov
in
rcrl
push
out
test
out
shl
scas
out
inc
cmp
stos
jae
test
scas
push
or
sbb
movsb
jo
cmpsb
dec
pop
and
or
xchg
pop
movsl
cmpsl
cmp
mov
pop
inc
out
fidivl
mov
mov
dec
mov
les
cld
mov
popa
xchg
mov
stos
adc
dec
dec
loopne
push
add
mov
fs
lret
loope
int3
hlt
popa
inc
push
xchg
fs
and
mov
mov
in
inc
mov
in
mov
cmp
je
or
stos
fidivrl
sbb
cs
xchg
data16
and
push
xchg
call
nop
jge
mov
insb
lret
out
jb
pop
ds
out
pcmpeqw
xchg
sub
stos
push
or
stos
rorl
pop
cmp
jle
test
sarl
shlb
fstpl
sub
mov
sbb
fcomps
in
call
pop
xchg
shrl
fimuls
and
pop
pop
jge
test
pop
ds
bound
mov
sbb
dec
sub
mov
pop
dec
jb
or
jmp
and
pop
icebp
xor
or
leave
addr16
dec
shl
lcall
sub
aas
xchg
cmp
imul
and
or
adc
lret
lds
pop
mov
repnz
test
pmulhuw
aam
xchg
dec
lret
push
jae
das
rdpmc
adc
sbb
inc
in
add
movsb
test
idiv
cmpsb
or
sbb
imul
ret
or
push
inc
jl
int
pop
mov
mov
lahf
fmulp
stc
test
inc
xchg
dec
je
cmp
mov
push
bound
imul
push
fmul
pushf
and
pop
adc
jns
out
push
out
imul
and
lods
jne
fbstp
xchg
adc
sbb
aad
fldenv
in
pusha
xchg
fwait
rclb
lds
shll
adcw
test
andl
inc
rorl
jb
mov
inc
and
inc
jne
mov
fists
lret
and
addr16
cmp
shll
mov
push
sbb
lods
mov
ljmp
arpl
sub
push
mov
test
mov
fldenv
icebp
jo
push
arpl
pop
or
or
pop
xor
loopne
push
mov
std
scas
fiadds
lcall
aaa
push
or
push
cmp
mov
or
cmp
test
push
and
pushw
jp
add
xorb
imul
xor
shl
jp
mov
pop
popf
incl
mov
and
jecxz
and
pushf
clc
lahf
mov
movlps
push
imull
sti
scas
pop
xor
cmp
inc
or
or
push
lahf
shll
jle
test
fidivs
sub
pop
add
jmp
mov
push
loopne
cs
roll
mov
mov
dec
dec
test
pop
enter
push
dec
and
cs
cld
or
mov
push
int3
jle
jo
sub
loope
lret
fistpll
cmpb
out
dec
mov
popf
dec
pop
lahf
and
mov
dec
pop
jno
push
scas
fstps
xchg
push
js
cs
js
or
fsubrs
std
cwtl
adc
in
mov
inc
rcrb
dec
push
out
xor
lret
scas
pop
jns
roll
arpl
mov
aam
iret
in
xchg
popf
icebp
rorl
xchg
cmpsl
aam
add
dec
les
xchg
inc
fisttps
out
inc
out
nop
jo
xchg
push
loop
imul
mov
jecxz
pop
repnz
ds
out
add
cmpsb
aaa
loopne
cmp
ljmp
aam
popf
loope
cli
sahf
lret
adc
jl
in
cmp
jp
dec
inc
addl
in
mov
popf
add
add
gs
pop
cli
fcompl
js
cwtl
pop
sub
cmp
push
ret
js
pop
inc
jmp
stc
pop
lret
mov
inc
xlat
and
add
sbb
enter
adc
add
jbe
addr16
popf
outsb
jne
and
jp
add
jl
mov
push
insl
loop
jae
std
or
or
xchg
imul
jae
je
shl
hlt
jne
repz
stc
ja
ljmp
inc
leave
fadds
add
adc
dec
push
in
inc
cs
jg
fcomp
jmp
daa
cld
or
xor
add
loope
inc
cmp
mov
fmul
inc
jl
repz
inc
and
int
in
cmpsl
dec
iret
cmp
cmp
jno
int3
ds
rorl
mov
xor
pop
mov
cmp
jmp
pop
sub
add
adc
sbbl
lods
lods
xchg
mov
je
mov
xchg
push
sbb
xchg
stc
or
cwtl
test
imul
sbb
pop
xor
leave
ret
lcall
pop
cmp
or
or
fcompl
fyl2x
cmp
jbe
pop
xchg
cmp
add
call
and
aaa
xchg
inc
push
fisttpl
fcoml
les
mov
lcall
sbb
jge
or
std
rcrl
pop
loop
ficompl
cltd
icebp
adc
out
int
inc
ljmp
cli
push
xchg
or
loope
pop
mov
test
roll
mov
jmp
pop
push
add
aam
roll
repnz
ljmp
push
icebp
out
pop
loopne
in
fistpl
inc
je
rcrl
ss
sbb
in
dec
sub
and
lret
nop
pop
cmp
jnp
pop
and
mov
sbb
cs
popf
add
jns
mov
push
imul
xchg
sub
pop
out
ja
and
ljmp
in
xchg
sbb
inc
sub
pop
rcll
sbb
mov
mov
push
movsb
ror
sbb
ficompl
mov
cwtl
or
sarb
fldl
xor
sbb
sbb
add
xchg
imul
iret
push
sbb
add
movsb
push
cmpsb
mov
movsl
cmp
sub
loope
add
out
loop
and
xchg
dec
xor
nop
mov
imul
aaa
mov
and
lcall
roll
pop
jo
mov
push
loop
jg
cmpsl
xor
cli
je
pop
and
xchg
sub
popa
xchg
aad
fnstsw
icebp
lock
popa
out
push
mov
insb
clc
xchg
xor
sti
nop
andl
cld
or
outsb
test
arpl
out
add
scas
jp
loope
sahf
or
mov
int3
xchg
ret
mov
into
lea
ficoml
mov
es
cmp
insb
mov
aas
sub
scas
mov
lea
ss
lds
testl
jo
stc
repnz
xchg
es
mov
jp
dec
fadd
shr
add
and
in
mov
fldt
nop
daa
ret
pushw
mov
xchg
add
fnsave
lahf
sbbl
mov
inc
shll
xor
in
jae
jae
cmc
xor
ret
movsl
clc
cmp
jmp
mov
mov
sub
in
cmp
xchg
fcompl
sub
mov
bound
mov
pop
cmp
cmp
iret
mov
in
aaa
xchg
imul
stos
inc
stos
aad
sub
scas
int
or
into
inc
xor
imul
hlt
adc
and
push
ss
cmp
in
gs
leave
pushf
jle
mov
dec
or
mov
test
insb
mov
sbb
sbb
pop
cmp
ja
mov
lds
dec
gs
jne
ss
mov
outsb
mov
loop
adc
stc
mov
xchg
adc
out
out
add
jle
movlps
add
push
mov
xchg
jne
lret
adc
negb
jo
out
and
popa
test
add
push
or
daa
mov
js
inc
jp
pusha
jmp
xor
mov
imul
cmpsb
sub
ds
mov
jge
stos
mov
enter
aas
push
xchg
insl
cmpsl
xchg
adc
pop
out
dec
mov
xchg
adc
jo
dec
sub
inc
and
mov
into
pushf
negl
ret
push
cmp
and
push
mov
dec
mov
jns
xchg
bound
or
cmp
aam
jne
mov
in
inc
rorl
sbb
fcoml
adc
sub
cmp
pop
mulb
cmp
into
mov
fsubs
push
stc
leave
adc
stos
dec
dec
pop
and
out
out
mov
adc
sbb
cmp
iret
inc
pop
xlat
les
gs
xchg
mov
mul
xchg
ret
addr16
jne
arpl
ja
or
cmp
pop
cwtl
in
adc
pop
int3
dec
adc
mov
sahf
jge
jmp
nop
pop
icebp
cltd
lea
addb
std
ret
pop
jmp
push
dec
mov
sarl
dec
jg
mov
int3
jp
jno
mov
mov
add
into
cs
mov
jecxz
sbb
sbb
ja
mov
cmc
int
ss
cmp
xchg
cmp
sub
or
sub
repz
je
inc
mov
leave
xchg
push
clc
sbb
mov
lret
or
adc
inc
or
jp
inc
push
fwait
xchg
js
xor
popa
pop
dec
rcrl
or
in
ret
or
inc
mov
inc
divl
dec
jno
mov
or
fnstenv
and
jp
cmpb
sub
push
gs
imul
add
mov
push
hlt
scas
jae
and
pop
mov
stos
push
jns
je
push
in
ljmp
push
cwtl
out
loop
imul
cmpsl
inc
mov
push
aad
jecxz
test
inc
inc
or
adc
test
mov
dec
ljmp
inc
aas
daa
repz
inc
ja
sarb
add
lret
std
or
and
lods
sti
or
loop
lods
pushf
cld
xorb
shlb
cmp
aaa
pop
mov
ja
and
loopne
inc
movsb
call
aaa
xor
mov
scas
into
out
sbb
mov
fmul
roll
js
push
out
mov
aaa
inc
out
pop
stc
out
mov
jbe
add
ds
testl
sahf
adc
cmpsb
mov
hlt
adc
in
hlt
scas
cli
mov
cwtl
in
mov
hlt
ficoms
jmp
jae
mov
mov
fwait
movsl
mov
pop
test
insl
stc
mov
sub
aad
leave
pop
scas
sti
fdiv
in
sub
enter
xchg
pop
mov
cmp
loopne
clc
jmp
adc
push
mov
bswap
mov
mov
adc
cld
push
add
gs
int3
adc
sahf
lcall
and
inc
adc
movsl
test
outsb
inc
bound
lret
or
push
cmp
adc
xor
out
push
push
in
sub
std
pop
mov
sub
out
dec
xor
dec
adc
add
fsub
mov
add
mov
test
cmc
and
fstps
add
pop
ret
cmpsl
in
call
dec
adc
inc
insb
push
push
sbb
test
cmp
out
lahf
pop
adc
push
sahf
sahf
test
inc
fnstenv
adc
repnz
push
shl
mov
lea
pushf
dec
add
push
out
bound
out
lea
test
fwait
sub
inc
xchg
dec
push
mov
sahf
stc
pop
adc
cltd
dec
adc
outsb
out
pop
jo
mov
mov
lcall
rcrl
mov
cs
outsl
mov
xchg
fdivs
adc
sar
js
subb
sub
incl
addr16
popa
sub
leave
push
bound
xchg
mov
pop
xor
ljmp
sbb
xor
cltd
inc
mov
pop
cmp
lret
mov
testl
xchg
addl
cmp
popf
cmpsl
push
sti
test
pop
rorb
pop
sub
fiadds
xor
push
pop
pop
push
into
hlt
push
sub
test
rcr
mov
test
out
mov
jb
scas
pop
sub
stos
jo
int3
dec
mov
mov
or
push
xor
lods
ds
add
inc
pop
mov
pop
repz
xchg
fdivrl
fwait
xor
int
test
sar
movsl
cltd
loopne
rorl
cli
repz
aad
stos
jmp
lods
xor
dec
cs
mov
fldenv
lds
and
xor
cli
imul
jo
in
mov
or
js
ljmp
and
flds
dec
sbb
xor
rcrb
push
stc
loope
adc
call
push
sbb
mov
xor
inc
imul
movsb
into
dec
les
mov
jo
lahf
pop
aaa
mov
sbb
imul
cmc
jno
arpl
rclb
xor
sub
fcmovb
jle
stc
adcl
dec
jle
mov
sbb
push
push
xchg
shlb
fsubs
adc
addl
xchg
je
inc
jmp
xor
jl
dec
cmp
roll
loope
cmc
cld
jo
mov
bound
mov
mov
pop
adc
int3
cli
add
push
std
mov
add
jne
leave
dec
test
and
in
jns
lret
fstpt
xchg
push
mov
cmpps
cs
fstpl
test
data16
out
inc
inc
cli
int3
inc
jge
xchg
push
ret
sbb
push
pop
aas
in
in
or
and
push
fnstenv
push
push
inc
sahf
sbbl
or
sarb
std
adc
mov
je
enter
push
shl
inc
call
stos
mov
arpl
xchg
push
call
std
push
ret
sub
nop
xchg
jecxz
mov
xor
sbb
ja
mov
icebp
imul
cmp
sub
pop
rorb
dec
pop
and
jg
fsubs
push
inc
aad
sub
sub
mov
out
sbb
lahf
das
gs
lock
negl
push
loope
sub
sahf
dec
loope
or
mov
arpl
in
lods
repnz
cmp
push
xor
jnp
insb
xor
inc
outsb
add
pop
and
xchg
cmp
movb
rol
add
cmp
ja
fcomip
clc
cmp
jge
jnp
and
jge
lret
shrl
cltd
scas
dec
jecxz
inc
xor
mov
push
or
sti
mov
or
adc
addr16
or
lahf
shl
stos
test
pop
sbb
push
out
jge
sti
xchg
into
mov
inc
inc
mov
fidivl
jl
pop
lahf
mov
xchg
cld
sti
lods
inc
mov
xchg
andb
in
call
cmp
jno
bound
inc
lahf
test
cs
andl
xchg
cmp
mov
cmpsl
xchg
pushf
inc
cmp
sub
lret
mov
leave
xchg
in
xor
jle
xlat
bound
inc
sahf
xchg
push
inc
cld
pop
and
scas
test
loop
mov
xchg
jns
and
xchg
in
clc
lods
mov
test
stos
fisubs
fisttps
mov
shrd
push
push
lcall
push
insl
jb
aad
movsl
jl
adc
cltd
or
clc
insl
mov
mov
test
sub
jo
jns
lds
xor
cmc
pop
jp
push
cwtl
cmc
jae
movsl
jmp
inc
or
ja
int
scas
pusha
outsl
imul
scas
shll
nop
shlb
out
xchg
pushf
push
sub
push
addl
mov
div
dec
into
fdivr
mov
jns
lock
leave
stos
subb
lods
and
mov
idivb
repz
jecxz
lods
add
lea
fimuls
scas
mov
aaa
les
pop
nop
out
imul
stc
pop
push
inc
adc
mov
pop
xchg
in
dec
pop
cwtl
fisttpl
push
bound
xor
sub
icebp
push
or
sbb
popl
mov
jl
lret
imul
in
inc
jmp
out
das
adc
sbb
popf
add
pushf
stos
push
pand
jp
pop
sbb
inc
out
scas
sbb
add
in
cmp
mov
repz
bound
pusha
adc
add
adc
cmp
dec
sub
and
scas
pop
inc
test
inc
in
xlat
xor
es
mov
ror
scas
stc
dec
insb
sbb
je
flds
mov
lods
mov
sbb
cmp
scas
mov
pusha
clc
cmc
mov
pusha
jl
sahf
stos
and
out
lret
xor
sti
stc
jno
and
mov
mov
cmp
xchg
lods
add
test
hlt
xor
or
iret
cmp
xchg
fsubs
ljmp
xor
dec
imul
xor
and
and
test
test
pop
cmp
push
arpl
cmp
bound
jle
mov
out
adc
push
pop
pop
stos
mov
in
pop
arpl
mov
jl
push
pop
dec
ss
data16
aaa
rcll
xchg
sub
int
fs
rorb
xor
cmp
or
add
xor
adc
cld
dec
or
pusha
nop
cmp
xchg
push
iret
xorb
hlt
inc
and
sbb
and
adc
gs
push
cli
and
dec
repz
movsl
inc
loopne
xchg
inc
push
out
int
outsl
psubd
fdiv
or
je
inc
mov
pxor
mov
sbb
scas
dec
dec
xchg
xor
or
xchg
scas
xor
dec
mov
test
scas
movsl
jg
jb
or
ja
repz
and
scas
rol
lea
mov
push
test
test
adc
adc
xor
arpl
in
adc
and
jno
rolb
xchg
and
jg
lods
sub
push
adc
jmp
jo
jecxz
fs
in
or
gs
mov
cli
in
sbb
xor
add
test
das
jp
sti
jno
mov
loop
cld
add
ljmp
in
or
fisttpll
cltd
dec
push
mov
mov
call
stos
sub
xchg
or
hlt
xor
pop
mov
cs
out
jle
stos
xor
or
dec
adc
pop
dec
adc
or
xor
mov
fistps
add
dec
ret
es
imul
leave
push
cmp
mov
repnz
adc
test
adc
sbb
rcll
rolb
test
roll
rorl
js
cmp
sbb
and
jno
xchg
outsl
shlb
gs
xchg
xor
dec
xor
xchg
hlt
push
sbb
and
in
inc
sub
inc
sbbb
sub
sti
call
push
lcall
aaa
orb
jmp
mov
cld
scas
sbb
xchg
roll
imulb
test
clc
xor
sub
and
lcall
pop
jb
or
in
and
shlb
jmp
mov
loopne
js
mov
mov
dec
jno
ljmp
call
mov
cmp
or
jbe
push
enter
push
jecxz
xchg
fidivrs
test
and
jns
jmp
sbb
add
xchg
addr16
scas
or
divb
fistl
adc
xor
bound
or
push
mov
lret
aaa
push
adcb
aad
xorb
fisubrs
xchg
mov
lea
scas
pushw
popf
lds
push
es
inc
rcrb
inc
das
lahf
bound
mov
or
xor
in
pop
add
mov
push
ret
in
xchg
pop
cmc
cmpsb
inc
adc
xchg
lcall
xchg
sub
aam
in
gs
add
fsubs
sub
sub
andb
dec
jmp
rcrl
cmpsl
ja
rcrb
lods
popa
aas
dec
setl
jbe
lcall
out
imul
jge
mov
add
jbe
inc
ss
push
lea
mov
adc
bnd
xchg
push
ss
lods
xorl
stos
push
es
mov
mov
lods
xor
popf
jge
pop
jae
pop
sub
ret
cmp
cmovp
ret
add
dec
into
and
xlat
xchg
push
dec
int3
push
xchg
sbb
adc
mov
cmp
jge
push
cmp
pusha
jno
sbb
add
jae
jg
jg
mov
pop
push
inc
ret
xlat
dec
inc
ficompl
or
das
ja
dec
push
decl
inc
xorl
inc
aaa
mov
sbb
xchg
and
inc
mov
dec
outsl
jle
in
sub
lahf
ja
clc
lahf
lds
test
xor
mov
pop
sbb
cltd
jnp
push
mov
adc
test
xchg
shlb
push
jbe
sub
popa
in
fdivrs
sbb
mov
cmp
imul
jbe
test
jno
negb
mov
xchg
enter
mov
dec
cld
jbe
in
inc
andl
int
jns
icebp
cs
lods
xor
repnz
mov
lcall
mov
mov
je
pusha
mov
loopne
andl
xorl
aaa
pop
aas
cmpsl
xchg
xchg
inc
cmp
cmp
mov
jecxz
test
mov
leave
sarl
bound
add
inc
hlt
jns
mov
push
je
mov
inc
ljmp
sahf
jb
imulb
cli
ljmp
fldl
push
fsin
aam
jbe
testl
push
cli
dec
nop
in
xchg
into
clc
sbb
cld
or
lea
lcall
pop
sbb
pusha
ja
loop
mov
push
push
sbb
dec
push
dec
cli
out
fcoms
push
push
jbe
pop
shll
data16
mov
cmp
push
push
aas
mov
pop
scas
mov
dec
or
and
aaa
or
cmp
cltd
js
mov
xlat
mov
call
sub
sbb
jae
fidivs
cmp
fidivs
leave
pop
into
pop
sbb
xor
xor
je
xlat
cmc
cs
mov
jp
push
dec
bound
adc
mov
mov
in
jno
mov
loopne
and
sarl
xorl
and
fs
movl
enter
lods
int
lea
les
insl
sub
fadds
cmp
movsl
lods
or
js
add
je
cmp
in
clc
mov
add
or
jle
das
aad
pop
inc
mov
scas
jbe
push
frstor
sub
push
jnp
jge
mov
xor
call
test
sub
cltd
cwtl
das
push
enter
pop
mov
fmulp
je
fwait
loop
jno
fisubs
jmp
stos
mov
movsb
xchg
outsl
pop
pop
cmp
cmp
cltd
and
cmp
dec
mov
mov
add
into
sub
inc
test
xchg
out
ret
jae
push
dec
mov
mov
insb
xchg
xorb
sub
xor
test
ds
sbb
mov
ds
loop
fmul
lds
jmp
lret
int
mov
orl
inc
jg
sbb
xchg
or
inc
mov
or
gs
sbb
gs
hlt
xchg
js
mov
mov
sub
adc
jecxz
jns
cwtl
push
fiadds
jp
adc
rcl
xchg
cmpsb
inc
xor
adc
bound
fwait
and
pop
add
fsubrl
jp
inc
cmp
lock
les
add
add
popa
jne
testb
and
push
xor
cmp
xchg
bound
dec
inc
lds
fstp
sbb
test
imul
sbb
inc
test
ds
stc
mov
insb
out
jle
inc
xlat
out
shrl
mov
push
ljmp
jbe
xchg
fimull
insl
in
sbb
popf
sbb
in
stc
inc
adcl
cmp
jmp
ficoms
sub
idiv
xchg
inc
movsb
loopne
clc
lds
mov
leave
xchg
dec
mov
out
push
jle
add
pop
jb
popa
xchg
arpl
iret
movsl
cmp
adc
pop
mov
imul
push
sahf
insb
nop
mov
fs
xor
sahf
insl
in
lret
es
shlb
loop
call
push
fwait
inc
clc
adc
aam
in
xor
ret
aad
dec
mov
sahf
out
out
adc
sbb
movsl
js
and
mov
cmp
iret
ds
int3
add
mov
dec
dec
or
and
std
pop
andb
push
mov
dec
cmp
scas
lock
mov
aas
jno
mov
mov
roll
fs
imul
inc
movsl
iret
sti
aad
sti
add
sarb
in
frstor
xchg
lods
dec
dec
sbb
push
into
mov
pop
dec
dec
push
sub
in
xchg
dec
call
adc
pop
inc
pop
in
xor
data16
rcrb
jg
mov
cmp
fwait
dec
cwtl
test
push
mov
cld
mov
ljmp
shll
push
js
and
sti
push
mov
out
mov
pop
push
call
or
stc
xchg
lock
into
insl
sbb
mov
mov
xchg
dec
push
push
test
daa
and
and
pop
ret
ja
jb
pop
inc
pusha
popa
jecxz
ret
pop
addb
arpl
fildll
jne
mov
inc
lods
sbb
jno
xor
add
jbe
mov
cmp
stos
out
pop
pop
jno
push
cltd
inc
add
jl
repnz
mov
in
into
incb
adc
dec
cs
add
mov
pusha
fdivrs
adc
bound
mov
jmp
mov
pusha
out
xchg
xor
inc
test
insb
call
out
mov
sub
insl
sub
sbb
fnsave
cmp
jns
mov
mov
dec
mov
ds
ds
sub
outsb
es
adc
jae
into
push
mov
das
and
sbbl
ljmp
fwait
lret
mov
gs
sahf
add
fdivrs
jmp
cmp
scas
stos
mov
add
jp
lods
int
imul
push
repz
lds
add
sub
shl
pop
inc
repnz
pushf
adcb
add
fisttps
outsl
pop
ja
xor
dec
insb
imul
lea
hlt
daa
test
fs
jne
xchg
and
jns
jp
ljmp
out
inc
dec
in
mov
ss
or
fstps
ret
inc
sbb
ffree
cmc
decb
aas
mov
packsswb
inc
mov
gs
jg
ljmp
imul
jbe
or
adc
repnz
lahf
cli
dec
imul
shrb
pop
mov
xorb
daa
jmp
cld
jg
hlt
out
daa
les
das
mov
stos
push
aad
iret
add
jl
jg
shll
test
clc
mov
hlt
mov
fbld
jo
imul
test
shrl
insb
xor
jp
mov
lea
or
fildl
sbb
pop
add
push
ret
sbb
outsb
lds
mov
xlat
mov
lock
mov
daa
int
ret
scas
fstps
ret
adc
add
fidivl
stos
sub
mov
cwtl
lahf
aad
js
test
movsl
popa
or
sub
mov
clc
jo
notb
sub
out
push
push
pop
push
shll
andb
sahf
cmp
mov
add
aam
mov
int
and
sbb
cmp
rcrb
aas
shlb
add
inc
push
idiv
in
stos
cli
add
pusha
push
push
loop
xchg
xchg
leave
incl
jl
scas
sbb
adc
inc
jge
out
data16
adc
movsb
mov
sbb
sub
js
pushl
or
mov
mov
inc
add
cld
jnp
inc
sub
add
sbb
and
arpl
decb
dec
sbb
popa
jge
notb
stc
or
mov
add
xchg
add
push
mov
dec
scas
push
data16
gs
xchg
jmp
jno
clc
jge
mov
inc
mov
pop
and
outsl
rcl
es
xbegin
jp
push
ret
outsb
cmc
js
adc
into
adc
iret
mov
mov
sti
inc
and
int
fcoms
jmp
in
imulb
pusha
xlat
ret
mov
insb
mov
jecxz
hlt
xor
add
inc
bswap
dec
push
lahf
aam
pusha
mov
lret
scas
mov
sbb
jae,pt
fnstcw
rcrl
xchg
mov
mov
out
add
fiadds
xchg
ds
and
inc
ja
ffree
rcrl
loop
xor
aad
adc
aam
out
add
cmp
or
xchg
fstps
popl
add
jecxz
inc
roll
jnp
mov
scas
int3
jp
sbb
push
mov
ss
test
xor
fwait
in
xchg
nop
jge
jge
cmpsl
outsb
pushf
xchg
ljmp
xchg
in
stos
cmp
xor
jge
cld
xor
clc
or
js
mov
cmp
bound
cmp
mov
add
push
cmp
or
sti
and
pop
lea
fidivrs
xchg
int3
sub
inc
xchg
mov
stc
sbb
mov
lahf
dec
pop
mov
jnp
xor
lret
andl
sbb
sbb
jne
lahf
adc
insb
dec
rclb
dec
adc
pop
sti
rorb
jl
add
out
push
or
fidivl
stos
std
sarl
xor
add
dec
es
and
insl
push
cmp
stos
addr16
push
das
into
jmp
jno
push
sbb
or
hlt
aad
xchg
fcoml
or
and
xor
cmp
aaa
mov
out
sbb
rcll
test
icebp
xor
mov
rcll
or
in
cmpsl
ret
adc
hlt
and
int
xor
ss
dec
aad
jnp
neg
pushf
add
shll
xchg
pop
mov
sbb
xor
in
aas
mov
pop
loope
jle
xchg
jp
xor
into
push
mov
stc
sub
nop
inc
idivl
sub
push
sahf
lods
je
orb
sbb
bound
cmp
mov
inc
shrl
test
mov
mov
push
jae
mov
cmpsl
jmp
ja
xor
xchg
or
in
push
pop
out
and
inc
push
icebp
cmpsl
mov
call
jne
pop
loop
test
mov
outsb
pop
mov
mov
fwait
push
das
out
rolb
clc
and
xor
lret
mov
dec
popf
fcom
sbb
pop
xlat
and
das
fwait
sbb
adc
out
push
sbb
out
mov
mov
or
mov
xor
mov
sub
popf
xlat
mov
push
pop
or
add
pop
ror
xchg
cmp
testb
mov
dec
xor
int
test
mov
sbb
stos
loopne
or
push
data16
mov
out
cmp
push
int
inc
add
mov
filds
mov
cmpb
mov
jnp
in
insb
dec
lds
inc
clc
stc
popa
mov
xchg
mov
lcall
push
inc
adc
or
cmp
xchg
lds
fimuls
bswap
mov
ret
mov
daa
fistpl
out
xchg
inc
jne
mov
jne
rcr
push
aam
in
ds
push
cmp
ja
pop
mov
ret
dec
sub
cmp
scas
ror
pop
add
xor
scas
xor
pop
jo
dec
int3
sub
out
fs
aaa
cs
mov
mov
add
pop
aaa
out
sub
aaa
xor
mov
repz
mov
shlb
xor
stos
sbb
ret
sbb
push
lret
shr
jg
dec
sbbl
js
xchg
sub
and
les
and
stos
adc
fisubl
rcll
fcomp
nop
inc
aad
cmp
ss
aam
push
mov
adc
mov
sub
jbe
mov
mov
push
addr16
or
roll
jp
in
jle
jnp
jp
push
shl
mov
and
int
xor
lret
std
lret
mov
call
insl
lods
insl
int3
fcmovnu
and
or
pop
mov
test
dec
shl
xor
jmp
cltd
dec
xor
inc
mov
mov
arpl
pop
dec
jae
sub
iret
lcall
shll
jns
push
and
nop
aaa
test
cmp
es
clc
dec
sbb
xor
push
xchg
je
push
xchg
leave
cmpsl
pop
out
sbb
or
push
sub
dec
bound
test
pcmpgtd
loope
cmpsb
scas
pop
loopne
cmc
ret
scas
push
add
fsubrs
repz
bound
xchg
shl
xchg
out
jae
dec
aas
cwtl
je
test
mov
std
stos
jae
lods
lds
fwait
sbb
cmp
mov
repnz
push
xchg
fsts
mov
les
jp
nop
lahf
dec
pusha
iret
ja
sub
xchg
out
xchg
stos
cli
push
jmp
jb
pavgw
xor
rcll
imul
jne
mov
mov
lock
cmpsl
xchg
daa
mov
arpl
mov
jo
sub
idivl
adc
imul
dec
push
fsubrl
push
mov
pminsw
mov
jecxz
pop
pop
xor
push
ja
out
fstl
mov
inc
mov
scas
insb
adc
add
loop
xor
bound
and
in
aaa
pop
inc
cld
cmpsl
adc
sub
or
xor
mov
dec
xchg
add
push
jnp
pop
in
xor
rorb
call
and
out
or
mov
test
sbb
int
inc
sbb
imul
xchg
lods
call
leave
mov
jne
imul
mov
jbe
loopne
decb
ss
push
leave
jbe
cmc
movzbl
pop
push
outsl
repz
bound
enter
push
aam
or
xchg
rcr
lods
iret
bound
in
pop
inc
imul
mov
pop
les
orb
push
add
push
mov
xchg
dec
lret
xor
sub
and
dec
xchg
adc
jns
popl
and
rol
fdivrs
fnstsw
pop
sub
aam
cmpsb
add
inc
data16
inc
adc
clc
jmp
xchg
roll
sub
outsb
hlt
dec
lcall
cmp
jecxz
mov
xor
cmp
mov
adc
lahf
ljmp
mov
and
test
mov
push
add
xchg
test
cli
jbe
push
inc
out
adc
jno
data16
xchg
mov
test
fs
loope
popa
cmp
mulb
test
push
or
cs
enter
dec
js
sub
dec
pop
xchg
pop
push
out
test
pop
dec
out
ret
pusha
addb
or
jns
inc
dec
call
movsl
cmpl
sahf
out
fsub
sar
retw
test
push
lret
addr16
das
mov
jmp
push
gs
sub
mov
fldl
clc
mov
pop
dec
fsub
lea
xor
jp
or
mov
jmp
mov
mov
mov
mov
pop
jp
ljmp
jb
scas
test
or
loop
test
repz
push
lds
invd
negl
adc
xchg
and
inc
add
sbb
jo
sub
mov
repnz
push
scas
sub
sbb
notb
jmp
pop
faddp
inc
shll
mov
in
lahf
xchg
and
inc
out
mov
fs
mov
add
mov
bound
fsubrs
sub
fisubrs
mov
sub
push
sbb
dec
lret
push
out
test
dec
mov
cwtl
lods
pop
movsl
push
sbb
pusha
test
sbb
push
ret
add
mov
vpsubusw
roll
sahf
aam
stc
into
jae
xchg
movsl
repz
jnp
push
mov
das
mov
or
inc
stc
xlat
add
cmp
jno
jno
pop
in
insl
inc
addr16
mov
mov
add
jbe
pusha
movsb
jbe
pop
addr16
sar
xor
inc
fstl
or
or
pop
jl
xor
jb
mov
mov
mov
cmp
or
addr16
push
jmp
out
rorl
inc
cli
pop
push
lock
stc
inc
imul
dec
test
dec
adc
cltd
imull
enter
bound
jae
mov
scas
add
roll
repnz
mov
and
repz
push
les
push
add
dec
dec
das
stc
outsl
mov
mov
pusha
jge
push
cmpsb
sub
or
push
stos
jle
sub
or
enter
or
dec
push
push
div
das
adc
xchg
jecxz
dec
sub
dec
in
sub
mov
ds
sahf
clc
add
xchg
sub
notb
out
dec
push
leave
ljmp
mov
dec
lret
ja
repnz
icebp
push
arpl
mov
sub
lret
sub
clc
jle
insb
loope
adc
mov
ljmp
insb
test
mov
push
cmc
fwait
je
jns
enter
jno
fwait
lock
mov
lock
push
lods
pop
scas
daa
pop
mov
clc
mov
int3
in
xchg
sbb
mov
subl
inc
clc
mov
push
jbe
les
mov
into
fidivrl
xchg
cli
sbb
movsb
bound
mov
ret
test
push
out
and
test
xchg
pop
sarl
stos
ret
add
stc
jp
bound
or
icebp
addb
mov
jg
test
adc
popf
push
in
cmp
nop
jo
test
mov
sub
dec
xchg
hlt
or
xchg
int3
jne
vrcpps
inc
dec
adcb
dec
jae
scas
shrl
shr
pusha
push
inc
push
jmp
cmpsl
ret
cmp
cmc
ret
repz
ljmp
push
dec
int3
xor
lds
pop
lcall
subl
int3
bound
in
mov
adc
jecxz
hlt
stos
cmp
aam
dec
ret
sbb
jbe
and
mov
or
sub
dec
pop
fstl
xchg
scas
out
fidivs
outsl
cmp
xor
outsb
rep
push
pushl
cld
ds
das
pusha
sbbb
pop
xchg
into
pushf
dec
push
cmp
cmpsl
repz
cmp
push
mov
lea
pop
les
fldt
ds
push
and
mov
test
xchg
stos
or
jns
mov
adc
or
push
lahf
cmp
adc
lahf
in
pop
mov
push
int
fistl
mov
xchg
xchg
dec
xchg
in
dec
out
cmp
and
dec
jae
in
daa
js
jge
sub
sbb
sarl
lcall
test
aam
daa
xor
mov
xor
lds
mull
adc
xor
mov
dec
sub
mov
stc
fistpl
adc
lcall
daa
aas
mov
and
adc
in
jle
out
push
xchg
movsl
roll
jno
xor
out
push
mov
push
or
out
xor
pop
test
and
sbb
dec
loop
mov
mov
push
dec
mov
mov
sbb
cmp
lahf
fistpl
ds
dec
mov
das
sub
push
sub
fwait
cwtl
mov
pop
pop
add
jl
mov
sub
mov
div
in
in
ret
fwait
inc
or
inc
pop
pop
call
stc
push
lret
clc
neg
cmpsb
adc
test
addb
pop
xchg
enter
pop
fisubs
mov
hlt
in
sub
add
or
mov
xchg
daa
in
mov
lods
orps
test
daa
shrb
xlat
fists
aam
pop
mov
lds
loope
xor
push
nop
mov
mov
ret
inc
aam
gs
mov
das
fildll
sahf
mov
loopne
cmp
push
push
sbb
loopne
sbb
adc
jmp
mov
cmpsl
test
enter
jo
xor
lret
test
jmp
fsubrs
int
mov
or
fbld
clc
inc
daa
fisubl
mov
adc
jno
jbe
out
cmpsl
fadds
int3
call
jbe
movl
repnz
jbe
rcrb
scas
cmpsl
leave
iret
push
sarb
xchg
and
sbb
movsb
cmp
mov
push
lret
sbb
sub
push
imul
add
push
inc
pop
ret
jg
fs
push
inc
mov
stos
arpl
loope
sub
sub
fisubrl
adc
ret
in
inc
inc
adc
hlt
mov
popf
and
imul
ret
mov
inc
or
pop
in
lcall
inc
dec
stc
xlat
add
inc
adc
inc
push
sub
jbe
inc
xchg
fldlg2
or
cmp
jo
push
idivl
fadd
aad
cmc
xlat
clc
pushf
jmp
cmpl
push
pop
dec
sbb
dec
sbb
add
dec
xor
loop
ss
add
add
mov
lgs
loope
add
scas
shrl
movsb
cmc
jno
adc
in
loopne
xlat
ljmp
sbb
xor
loop
pop
frstor
imul
lret
sahf
or
mov
jmp
es
cwtl
fwait
xor
cmp
movsb
inc
stos
add
mov
adc
data16
cmp
pop
test
in
das
jl
mov
data16
mov
xor
sahf
rcrb
bound
and
movsl
mov
hlt
daa
mov
or
push
mov
xchg
mov
rclb
mov
xchg
outsb
repz
mov
pop
inc
mov
test
sar
out
inc
push
and
cmp
out
or
sbb
lock
fucomp
pop
mov
clc
fs
stc
js
dec
ja
lods
stos
scas
cmp
add
scas
inc
add
je
cmpsl
aas
dec
sbb
cmpsl
jp
jae
adc
or
pop
lds
pusha
test
pop
sbb
cmp
dec
cmp
xchg
and
pop
loope
dec
mov
cltd
xor
inc
sub
arpl
aad
adc
lods
push
sbb
or
insl
outsb
in
jo
roll
mov
push
xor
mov
leave
popf
dec
jbe
test
mov
pop
test
xlat
out
mov
dec
repz
inc
dec
cmp
sub
jge
mov
inc
xchg
push
or
push
jmp
and
sub
xchg
cmp
fcmovnu
popa
add
aam
sub
popf
xchg
cs
cmc
int
and
nop
sahf
mov
add
adc
add
jmp
push
cltd
cmpsl
std
aas
fnstsw
push
iret
in
call
icebp
xor
pop
add
rcll
push
sbb
xlat
aam
mov
out
in
jl
shlb
dec
aas
iret
mov
fldt
push
and
aad
pop
push
cmpsl
sbb
vandps
cli
lods
jb
loope
fldt
das
lods
and
stos
mov
jae
dec
test
sar
insb
xchg
add
hlt
jecxz
rorl
mov
insb
jb
pop
adc
cltd
mov
dec
add
mov
push
xchg
xor
lods
inc
ljmp
js
js
insb
push
pop
imul
or
and
inc
add
aaa
stc
out
mov
xor
jle
inc
fdiv
inc
jbe
dec
scas
pop
into
sbb
and
dec
push
pop
cmpsl
mov
shlb
dec
sub
xchg
and
mov
call
nop
xchg
and
out
add
daa
add
dec
not
push
aam
call
ljmp
bound
pop
in
mov
push
jno
mov
fdivrp
xchg
jle
rorl
movsl
lock
add
mov
xlat
sub
lods
push
and
les
xchg
lock
test
jb
jo
jns
aaa
mulb
sbb
je
mov
mov
loopne
cmpsl
cld
in
jns
push
pusha
inc
xor
xchg
clc
call
in
in
js
push
jecxz
xor
jbe
ror
cld
cmp
mov
movsb
sbbl
and
mov
mov
jno
xchg
in
and
sbbb
test
mov
sub
mov
lock
out
movsb
xor
mov
cmp
jg
inc
mov
test
pushf
xchg
adc
hlt
test
or
shl
es
push
jl
sbb
out
inc
int3
and
mov
aaa
mov
cmpsl
lods
sti
stos
inc
sbb
adc
dec
aad
xchg
dec
imul
adc
cmpsb
testl
in
movsl
mov
fnstcw
mov
outsl
or
ret
mov
pusha
jns
mov
scas
mov
int3
or
jle
mov
push
adc
cmpsb
mov
ss
mov
mov
pop
jnp
mov
mov
adc
sub
pop
xchg
addr16
gs
lret
fs
or
bound
stos
xlat
daa
sbb
lret
or
mov
lods
movsb
push
jns
xchg
push
jo
flds
sub
inc
mov
gs
add
mov
sub
test
pop
sub
pop
out
loope
xor
into
lahf
push
or
mov
aaa
imul
dec
repz
sbb
dec
or
fbld
push
cmp
and
ret
xor
out
scas
stos
ljmp
cmp
pop
fs
and
shl
loopne
movsl
dec
ss
mov
and
pop
sbb
push
xorb
cmp
scas
inc
lret
dec
add
fsubr
xchg
icebp
movsl
ffreep
xor
fadd
xchg
add
scas
shlb
mov
add
in
movsl
push
inc
movsb
pop
and
mov
inc
mov
dec
add
mov
je
mov
fnstsw
cmp
pop
out
jg
and
xchg
add
shll
mov
pmovmskb
or
add
fcmovu
jg
daa
popf
pop
add
push
dec
cmp
cmc
cmpb
loope
mov
adcl
add
std
loopne
int3
in
fs
mov
daa
sahf
adc
cmpsb
idivb
xor
adc
jge
scas
shll
movsl
lods
mov
test
imul
mov
xor
scas
iret
je
scas
in
vmread
adc
jg
test
mov
xchg
mov
pop
ret
icebp
jae
cmp
les
mov
neg
push
icebp
push
fisttpll
jo
and
adc
pop
inc
jmp
mov
out
push
ds
cmp
adc
addb
sbb
aam
lods
lods
mov
mov
cmp
aaa
pextrw
pop
sbb
sti
and
enter
test
loope
pop
xor
add
mov
push
lcall
mov
outsb
add
mov
fsubrp
pop
or
sub
divb
lret
rorb
in
rep
insl
pop
and
pop
pop
sub
xchg
stc
jp
sarb
sub
cld
inc
or
push
sbb
add
fsubr
adc
inc
cltd
dec
dec
in
test
sahf
into
mov
sahf
inc
jbe
cltd
addr16
repz
mov
jecxz
xchg
or
inc
insl
loope
mov
int3
leave
lea
jno
push
outsb
movsb
inc
scas
adc
sbb
lcall
xor
jnp
popa
andb
inc
xchg
insl
imulb
jge
rcrl
pop
add
fcompl
mov
test
jle
xor
jecxz
int3
xchg
mov
add
xchg
insl
or
cltd
or
fs
imul
mov
xchg
jno
jno
mov
call
imul
or
xchg
icebp
fists
orb
xor
push
std
insl
in
cmp
xlat
dec
cmp
ret
bound
enter
mov
xor
jle
jns
shl
xor
cmp
and
icebp
jg
andnps
lock
adc
or
mov
push
fcomp
add
add
daa
mov
inc
xchg
mov
mov
and
and
jp
stc
mov
sbb
daa
jle
xor
mov
mov
sahf
mov
jg
mov
or
inc
test
insl
cmc
sahf
iret
repnz
push
stc
fs
cmp
fs
xor
xchg
insb
jo
andl
hlt
sub
js
outsl
jbe
xchg
jae
pop
pop
les
scas
lea
push
cmc
inc
jns
jg
cmp
inc
mov
mov
cs
sbb
adcb
sub
clc
scas
les
sti
imul
ret
call
sub
in
movsl
andl
mov
push
push
dec
mov
aad
or
push
inc
sub
lea
add
cmp
bound
icebp
call
lds
sbb
sub
dec
mov
pop
xchg
insl
mov
jecxz
mov
mov
xchg
lret
cltd
paddsw
pop
sti
jbe
fidivrl
sbb
movsb
mov
pop
das
mov
int
psllq
jmp
and
fisttpl
lret
and
sbb
mov
and
inc
dec
stc
jp
lds
mov
scas
inc
add
in
mov
mov
clc
enter
pop
fdivs
cmp
mov
adc
sub
mov
xchg
scas
xlat
lahf
movzbl
jecxz
push
stc
xchg
adc
dec
out
xlat
lods
push
push
lret
popa
cmp
mov
repz
sub
imul
lahf
cmc
mov
popf
push
jmp
mov
push
sarb
sbb
ret
stos
je
mov
lea
cmp
add
outsl
int3
fidivs
sahf
mov
popf
int
cli
mov
bound
out
cmp
push
in
jmp
sbb
out
adc
dec
scas
jae
sub
add
cltd
inc
out
dec
mov
xchg
dec
xchg
mov
shll
xor
xchg
mov
ss
shll
cli
pop
ja
jae
adc
int3
mov
popf
and
xchg
mov
popf
mov
xchg
outsl
cli
mov
in
mov
cltd
in
and
imul
je
pop
mov
mov
loop
jb
test
inc
sbb
lahf
mov
push
push
stc
xlat
push
sarb
ret
ljmp
pop
jmp
sbb
roll
mov
sbb
call
inc
adc
fbstp
loopne
das
cmp
add
nop
sub
inc
sub
push
sub
mov
vpshaq
fidivs
xor
stc
push
dec
neg
das
xchg
fistl
and
dec
jno
test
cmp
jae
addl
jnp
jg
cmpsl
ret
adc
and
dec
sub
xchg
std
lret
mov
and
out
test
push
andb
lret
test
ds
mov
fsubrs
mov
jecxz
sub
xchg
aaa
dec
pop
sbb
inc
jnp
mov
pusha
jno
loopne
add
jbe
imul
inc
loope
dec
mov
ljmp
jp
fdivrs
movsb
movsl
imulb
xchg
loope
pop
pop
into
ds
adc
mov
stos
mov
and
dec
push
int
cmpsl
int
iret
or
xor
sbb
out
xchg
and
xor
adc
xlat
movsb
frstor
mov
int
sbb
subb
testb
push
fldt
cmc
jns
mov
ljmp
jns
pop
in
arpl
test
nop
movb
add
mov
dec
pop
daa
mov
cld
inc
movsl
fldcw
or
int
adc
lds
pushf
xor
inc
imul
dec
cli
aaa
fcoms
sub
cwtl
jp
insb
sub
jae
jns
inc
and
and
in
cltd
mov
add
pop
rep
xor
mov
adc
repz
jle
mov
test
mov
inc
jg
cmp
or
rcrl
xchg
mov
repnz
sbb
pop
in
lock
ret
inc
aam
add
dec
push
mov
push
cld
sbb
shrb
mov
or
arpl
xor
adc
in
movsl
mov
nop
stos
lcall
mov
jbe
loop
pop
fisttpll
xchg
push
enter
daa
push
mov
add
xchg
sahf
shl
fstpt
mov
jbe
outsl
movsl
stos
ret
jns
leave
jle
addr16
fisubl
sub
pop
insb
data16
mov
leave
lahf
shr
ds
xchg
fcoml
sbb
outsl
and
pop
adc
jecxz
loop
or
daa
cwtl
xor
pop
inc
ds
or
test
decl
push
mov
inc
add
jge
pop
in
test
mov
lahf
cli
xchg
inc
imul
insl
push
test
add
scas
lret
divb
iret
fidivrs
mov
adc
rorl
pop
dec
jae
sarb
dec
push
in
jne
aas
fisubrs
mov
or
test
or
jae
xor
mov
adc
xchg
jb
mov
or
xor
out
pop
mov
push
fwait
mov
mov
nop
test
adc
dec
repz
iret
jp
inc
mov
push
loopne
mov
out
jb
in
mov
or
xchg
test
adc
dec
xor
fisttpll
dec
jbe
insb
sbb
pushf
bound
inc
sub
sbb
pop
rorb
and
mov
adc
adc
mov
cmp
xor
lds
orl
adc
add
shlb
pop
mov
inc
aas
sub
mov
push
cmp
sbb
mov
out
popa
fdivrl
cli
pop
push
pop
rorb
je
sahf
cwtl
mov
inc
movsl
stc
addr16
cmp
xor
addr16
sbb
aad
xchg
jl
jbe
fbstp
xchg
lds
push
gs
add
push
inc
mov
xchg
ror
cmp
out
rorl
in
xchg
lock
push
push
repz
xchg
arpl
and
stos
aas
mov
xor
dec
xlat
sbbb
dec
repnz
rorb
or
adc
insl
mov
jle
ds
xchg
testl
inc
mov
and
pushf
daa
out
ds
or
out
jg
out
enter
push
in
inc
sub
lret
cmp
inc
out
jmp
and
sahf
and
bound
sbb
mov
sbb
and
mov
sub
mov
cmpsb
sahf
xorb
ss
push
test
mov
int3
mov
push
out
test
lods
sub
cltd
dec
cwtl
leave
fldl
out
pop
sub
mov
subb
lahf
xor
mov
imul
pusha
xchg
mov
cmp
mov
jns
xchg
into
mov
cwtl
mov
inc
in
xor
pop
mov
vmovss
adc
movb
iret
int
cmp
aas
popa
cs
push
ds
jecxz
pop
insl
popa
iret
mov
idiv
jno
ds
jns
lret
stc
subb
add
aas
dec
sbb
xchg
add
push
mov
mov
jnp
subl
adc
add
jl
jl
loope
mov
pcmpgtw
cld
inc
push
idivl
shrb
ds
stc
pop
mov
and
mov
shl
cs
inc
testl
insb
shll
ja
push
cmp
leave
sbb
andb
shlb
nop
cmpsb
in
nop
loopne
jo
sti
enter
dec
cmc
mulb
test
or
jmp
addr16
aaa
neg
lds
in
adc
sahf
sarb
hlt
es
pop
sub
jmp
lcall
jp
nop
stos
addl
ret
push
pop
daa
sbbl
xor
pop
mov
ret
cmpsl
mov
xor
sub
push
xor
jae
ds
mov
pusha
push
sbb
lret
negb
inc
push
mov
dec
mov
jno
lods
push
outsb
jl
aaa
jnp
jae
lret
dec
frstor
pop
lcall
out
int
in
fbld
xchg
cmp
mov
scas
cwtl
cmp
int3
je
fwait
push
fmul
fisubrl
jmp
loop
sub
idivb
pop
stos
dec
inc
and
sbb
movsl
and
out
mov
outsb
ljmp
sbb
sbb
das
outsb
into
add
loop
push
jge
push
loope
dec
les
jmp
scas
js
in
jb
mov
jnp
call
mov
leave
xchg
cmp
mov
test
mov
pop
push
cld
push
sbb
pop
pop
outsl
adc
clc
sbb
xchg
adcl
push
cmp
mov
cwtl
outsb
movsb
jmp
fs
data16
lods
sub
rcrl
outsl
jmp
nop
mov
or
cmp
testb
dec
test
fisubs
inc
sub
mov
negl
shrb
faddp
xor
subb
xor
xchg
nopl
in
sbb
sub
sub
cmp
mov
dec
scas
leave
pop
cwtl
and
or
mov
orl
inc
in
dec
lret
add
or
mov
idivl
sbb
fisttpl
inc
mov
dec
cmp
ret
xor
jp
in
jne
add
inc
outsl
xchg
subb
hlt
add
dec
pop
sub
xchg
cmp
imul
dec
xchg
pop
outsl
out
out
and
mov
mov
jnp
jp
std
and
inc
sarl
jmp
imul
mov
gs
iret
imul
and
fs
iret
mov
popf
inc
sub
mov
pop
sahf
fsub
or
cs
ret
test
je
adc
jnp
dec
outsb
mov
insb
push
xlat
add
cli
cld
cli
sub
rcrl
mov
cmpsl
add
or
fnstcw
inc
rolb
xchg
insl
xor
test
and
and
imul
iret
outsb
jb
mov
xor
rolb
setg
popa
inc
mov
mov
fidivrs
mov
out
fimull
cmp
pop
ss
lods
gs
pop
push
dec
sub
jo
jg
iret
push
mov
in
pop
push
inc
adc
mov
jo
mov
repz
inc
xor
jge
cmp
inc
ja
jae
jg
xorb
jae
mov
xchg
shlb
lds
daa
sub
int3
addb
add
inc
xchg
inc
ret
jno
jmp
filds
movsb
popf
pop
xor
fistps
jne
fcom
push
jo
push
gs
sub
jge
xchg
cs
mov
jno
ja
insb
xchg
sbb
inc
repnz
in
std
mov
insb
or
loopne
cmp
mov
and
hlt
cmp
jecxz
ret
xor
xor
ror
daa
cmp
ret
inc
xor
or
pop
sub
cli
mulb
xchg
movsl
jl
sbb
xchg
mov
sbb
dec
fcoml
cs
xchg
mov
push
cwtl
negb
dec
subb
sti
ret
loope
push
out
jo
adcl
or
pusha
mov
push
or
lods
dec
jmp
jns
adc
cmpsb
jle
sub
jae
ljmp
stos
push
outsb
enter
and
xor
jns
or
mov
js
add
clc
sbb
xor
cmc
gs
fadds
or
xchg
cmp
jp
xchg
out
push
dec
dec
aad
inc
std
mov
push
add
sub
cmpsb
mov
out
lock
mov
inc
xchg
mov
imul
shl
add
popf
insl
cltd
insb
std
xchg
dec
es
adc
add
or
mov
stc
or
aam
mov
gs
sub
rol
pop
push
mov
sbb
pusha
sub
mov
mov
clc
sbb
lods
rcl
mov
mov
push
inc
in
shll
mov
ljmp
mov
add
test
mov
pop
insl
xor
outsl
inc
add
repz
push
cmp
push
or
xchg
repz
sub
jle
subl
loop
mov
insb
dec
addr16
lahf
push
fists
pop
rorl
add
xchg
cltd
mov
push
xchg
jl
test
jo
xor
dec
lahf
and
testb
bound
jno
hlt
dec
mov
dec
into
xor
inc
inc
jmp
mov
fs
outsl
sbb
xor
lods
sbb
push
jnp
dec
xchg
int
jg
ja
cmp
sbb
sti
ret
testl
pop
sbb
ret
or
sub
push
xor
pop
mov
js
cmp
arpl
inc
fsubrl
cli
mov
xchg
pusha
out
fldcw
test
mov
pusha
pushf
push
outsl
mov
sar
dec
pop
imul
mov
push
jmp
js
push
add
mov
fsubl
test
jl
adc
lret
adc
test
inc
enter
and
sub
xchg
or
insl
mov
mov
in
cmpsl
stos
xchg
add
ss
or
cli
jb
repnz
insl
cltd
imul
cltd
insb
inc
popl
mov
lods
aas
push
xchg
mov
adc
shlb
shr
jecxz
xchg
mov
pop
int3
dec
dec
insb
leave
stc
xchg
popf
sarb
out
jmp
ja
jmp
lock
dec
pop
int3
fwait
and
popa
adc
cmp
lahf
fninit
or
imul
sub
pop
sbb
pop
pop
mov
nop
outsl
mov
xchg
cmp
and
data16
push
dec
inc
in
enter
jmp
sbb
aas
out
dec
cld
out
dec
push
xchg
loope
gs
inc
sbb
repz
adc
sub
jno
and
mov
adc
fs
pop
stc
shlb
es
repz
test
inc
mov
gs
lahf
out
dec
cwtl
sti
out
pop
iret
iret
call
and
fidivrl
leave
lods
xchg
or
imul
mov
ljmp
dec
push
dec
call
add
orl
add
or
cltd
into
mov
popf
enter
dec
xchg
movb
sub
jns
jecxz
inc
pop
sti
lds
inc
ret
inc
lds
out
lods
lret
and
adc
jns
push
push
dec
inc
fstl
sub
mov
data16
cmp
jo
mull
and
xchg
stc
add
pop
xchg
inc
and
movsl
sahf
in
adc
nop
mov
frstor
and
push
mov
pop
or
call
and
cld
adc
xchg
out
sbb
sbb
and
mov
enter
jo
mov
adc
scas
xchg
negb
inc
movntq
jge
fmulp
ret
xchg
mov
xor
jb
push
xor
pop
hlt
icebp
pop
jne
push
xor
and
push
mov
mov
inc
jne
push
jp
pop
mov
mov
shrb
xor
sub
xor
out
shr
cs
inc
mov
movsb
mov
jl
add
xchg
aam
jmp
and
out
leave
inc
jns,pt
cltd
inc
add
imul
movsb
and
das
xchg
jp
inc
jl
xlat
sti
xchg
mov
jne
dec
jg
insb
mov
push
xor
pushf
mov
enter
aaa
enter
mov
jp
pop
inc
push
fiadds
adc
cmpsl
add
adc
mov
cmc
and
and
lea
jns
cmp
or
rolb
mov
push
sbb
je
loop
or
xchg
adc
jnp
pop
dec
loopne
psubsb
mov
lahf
xor
jno
and
or
jb
pop
popa
jecxz
popa
lret
cmc
scas
mov
push
sub
and
sub
mov
clc
das
and
movsb
or
test
cwtl
out
inc
xlat
rcrl
jge
jl
test
sub
enter
sub
jmp
maskmovq
idivl
cmp
gs
jns
fistpl
mov
cld
jno
leave
cli
push
div
push
push
push
sar
push
push
cmp
test
test
mov
mov
in
xor
adc
das
inc
cld
repz
in
ss
xchg
in
pop
rcrl
jbe
fs
jmp
pushf
cmpsl
pop
sahf
xor
jecxz
sub
inc
mov
popf
stos
cmp
xor
testl
test
aaa
test
or
js
xchg
roll
or
mov
dec
add
add
test
aam
loope
mov
sub
dec
lldt
test
data16
cmp
jae
dec
or
mov
repnz
lods
jo
lahf
xchg
les
shll
inc
push
mov
icebp
xor
popa
fcmovnu
inc
push
mov
push
cmpsl
arpl
mov
inc
jne
mov
mov
mov
rorb
shll
outsl
sti
mov
mov
call
out
xor
push
lahf
movsb
pop
bound
mov
aaa
mov
pop
mov
fmulp
ds
leave
lock
xchg
mov
xor
adc
inc
cmp
mov
inc
pop
push
and
lods
fmuls
add
pusha
jl
test
sbb
loopne
nop
xchg
leave
stos
push
into
pop
pop
mov
xchg
popa
pusha
pop
loopne
or
loop
pushf
mov
pushf
fsqrt
aas
pop
aas
mov
push
sti
addb
dec
das
in
nop
or
rolb
movsb
mov
js
mov
test
add
leave
and
adc
daa
or
mov
into
dec
mov
sbb
mov
mov
outsl
adc
push
es
arpl
cmpsl
sti
mov
notb
adc
sbb
mov
inc
add
mov
in
lret
outsl
sub
add
aam
and
pop
imul
jb
fstpt
addr16
push
jns
adc
stc
pop
dec
lods
mov
pop
repnz
es
int3
gs
inc
aam
push
push
sbb
cli
in
jmp
loopne
xchg
int
and
sub
mov
xor
lock
iret
xor
pop
lods
add
xorl
cwtl
pop
xchg
mov
lock
jbe
xlat
jb
jo
jo
das
cmpsb
pop
andb
clc
pop
mov
xchg
aaa
fildl
dec
mov
add
push
ret
jmp
sub
or
cmp
and
cmp
iret
lock
pop
cmp
mov
sbb
shlb
and
outsb
push
filds
iret
mov
xchg
scas
ja
xchg
repz
adc
gs
dec
insb
rorl
testb
fcmovbe
loope
xor
jp
js
jns
inc
sub
daa
cs
mov
add
pop
push
lods
mov
add
pop
add
add
add
add
add
or
push
or
or
dec
outsl
popa
fs
imul
inc
gs
jb
arpl
fs
jae
push
imul
jb
je
arpl
jb
jne
insb
inc
insb
insb
outsl
arpl
jb
jne
insb
inc
jb
gs
js
je
jb
arpl
jae
sbb
add
add
add
add
add
add
add
push
roll
add
add
add
add
add
add
and
add
rolb
add
rolb
add
roll
add
roll
add
rolb
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
add
fs
imul
add
add
je
jb
arpl
fs
jae
add
add
jb
jne
insb
push
jb
je
arpl
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
imul
jae
add
cmp
or
sub
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
add
add
ss
add
mov
cmpl
jne
add
mov
jmp
mov
add
add
cmpl
je
add
mov
add
push
push
push
push
pushl
pushl
mov
mov
mov
add
call
pop
pop
pop
pop
cmp
je
add
jmp
push
push
pushl
call
lea
mov
lea
mov
mov
cmp
je
mov
inc
sub
cmp
ja
mov
cmpb
je
mov
cmp
jne
mov
shr
rol
xchg
jmp
mov
xchg
rol
xchg
sub
add
mov
add
sub
mov
loop
call
lea
mov
cmp
je
mov
sub
je
mov
lea
mov
lea
mov
cmp
je
mov
add
mov
jmp
mov
add
mov
xor
mov
inc
or
je
cmp
ja
add
add
jmp
and
shl
mov
add
or
jne
mov
add
jmp
xor
xchg
mov
cmp
je
lods
or
je
add
add
jmp
xor
shr
lods
or
je
add
add
jmp
lea
mov
lea
mov
cmp
jne
add
push
push
push
push
push
push
call
pop
pop
cmp
jne
add
mov
rep
sub
sub
push
pushl
push
push
call
push
pop
sub
xor
mov
cmp
je
inc
lea
mov
push
push
push
push
push
pushl
pushl
mov
add
push
call
pop
pop
pop
pop
add
loop
mov
cmp
je
popa
popf
mov
ret
popa
popf
jmp
mov
or
je
mov
add
cmpl
jne
cmpl
jne
cmpl
jne
jmp
mov
add
push
push
push
lea
add
add
push
call
pop
pop
pop
cmp
je
mov
add
add
xor
mov
cmp
jne
inc
jmp
mov
add
push
push
push
cmpb
jne
inc
mov
and
mov
movb
push
push
pushl
call
pop
pop
pop
pop
cmp
je
mov
mov
pushl
popl
add
inc
jmp
clc
ret
jmp
push
mov
mov
mov
cld
mov
movsb
call
jae
xor
call
jae
xor
call
jae
mov
call
adc
jae
jne
stos
jmp
call
dec
loop
mov
call
jmp
lods
shr
je
adc
mov
jmp
xchg
dec
shl
lods
mov
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
pop
ret
push
call
ret
mov
adc
push
add
or
inc
cmp
add
or
ret
mov
add
adc
mov
cmpl
adc
or
push
and
rolb
add
call
enter
add
shl
or
dec
mov
jne
pop
sbb
add
mov
xor
fildl
or
sub
in
ljmp
jb
sub
or
add
adc
out
xor
inc
out
clc
dec
jne
pop
mov
bound
jp
mov
ret
pop
addr16
cs
ret
push
movzwl
mov
or
movl
jae
mov
mov
sbb
sarb
cli
sar
add
cmp
sbb
lahf
adc
loope
jno
data16
jb
jmp
inc
sub
sahf
clc
fistl
scas
mov
or
int3
shr
sahf
ret
inc
test
ds
add
in
push
push
jbe
jge
sub
jle
mov
xorb
int3
or
xor
aas
std
add
int3
dec
cld
sbb
pop
ret
add
shl
pop
pop
or
sub
cmp
jbe
mov
xchg
inc
cmp
mov
notl
jle
push
lret
inc
pop
or
call
mov
push
or
inc
cmp
jl
adc
leave
popa
fcomi
xor
inc
xchg
outsb
enter
test
or
jo
xchg
mov
push
pop
mov
sar
sub
les
jne
mov
shr
sbb
loopne
add
jbe
aaa
call
or
cmp
sti
inc
inc
shr
sbb
sbb
jbe
pop
mov
xor
adc
mov
test
push
sbbb
icebp
call
es
sub
push
lea
pop
call
cmp
icebp
xor
push
jne
lret
and
mov
lahf
and
add
push
clc
mov
inc
adc
sub
jl
cmp
or
orb
enter
mov
sbb
leave
cltd
dec
hlt
nop
push
call
movsb
data16
orl
push
in
inc
lock
shl
add
xor
dec
dec
into
cmp
cmp
push
adc
fdivl
push
sbb
mov
xorl
fcompl
rep
adc
retw
jne
inc
add
cli
cld
inc
mov
add
xchg
pop
mov
and
mov
adc
hlt
test
fwait
ret
push
les
mov
jbe
sbb
test
movsl
mov
sub
inc
add
movsl
inc
pushf
mov
add
and
leave
push
adc
jge
push
gs
push
jmp
and
or
cmp
or
movsl
sbb
into
pusha
or
divb
pusha
clc
lcall
push
sbb
push
insb
out
add
mov
fsub
mov
iret
push
sbb
push
repnz
scas
adc
add
test
cmp
sbb
sub
sahf
das
mov
inc
dec
inc
xchg
add
rorl
call
pop
cmp
je
sub
incl
setge
sub
clc
lea
xchg
hlt
shll
add
decl
mov
jmp
mov
inc
xor
xchg
jmp
sub
mov
lock
jne
leave
adc
push
mov
cmp
insl
sbb
fldl
test
fwait
push
aad
cltd
jle
mov
or
jmp
lock
in
rorl
sub
mov
xor
or
call
add
mov
add
sub
jp
dec
push
andl
sub
leave
loop
and
sti
dec
repnz
popa
mov
sub
pop
jge
dec
push
in
sub
pop
dec
pop
add
pop
jo
jmp
add
ret
psubq
ds
add
and
inc
adc
imul
nop
leave
dec
xor
dec
cmpb
cmp
sbb
rcl
inc
test
mov
addb
inc
adc
rolb
jle
cmp
icebp
icebp
iret
rorb
nop
stos
mov
shrb
int3
pop
outsb
sbb
movsb
jne
cmpl
lock
adc
jb
mov
orb
shl
dec
add
les
xchg
sbb
push
cs
sub
jb
xor
mov
mov
negb
rcll
rcrl
dec
jne
cmp
jne
dec
sbb
cmp
add
sub
add
popa
jecxz
iret
push
pushf
dec
sbb
jecxz
lcall
inc
mov
sub
mov
cmp
dec
mul
sbb
inc
outsb
addb
xchg
rolb
add
les
xor
add
add
pop
add
and
divps
add
rolb
add
outsl
std
jmp
dec
adc
mov
xchg
stc
out
in
adc
lds
cmp
dec
mov
leave
mov
fnstcw
jecxz
and
push
loopne
sbb
jne
loop
clc
mov
jg
push
fidivs
loop
pop
adc
mov
or
mov
sub
sub
scas
fidivrl
shr
stos
jne
mov
pop
test
dec
rcrb
xchg
push
lret
int
dec
inc
inc
pop
std
int
outsb
dec
es
ja
cli
and
mov
fdivrl
push
and
push
cmp
jnp
lods
mov
jbe
hlt
mov
xchg
jo
sub
out
mov
fmull
mov
dec
xchg
mov
in
cmpb
cs
push
pushf
out
nop
and
pusha
popl
cli
fsubrs
xorb
and
sbb
and
xchg
adc
add
push
lahf
cmp
or
ds
inc
pushf
dec
fisttps
ss
dec
lret
xor
fsub
push
pop
stc
xchg
adc
jp
mov
pop
jg
jb
dec
xor
mov
dec
mov
insb
lcall
mov
xor
shll
movsl
sbb
mull
roll
xchg
pop
je
lcall
xchg
push
pop
pop
xor
stos
addr16
xchg
dec
xchg
adc
lahf
sub
int
or
xor
pop
pop
loopne
add
mov
mov
mov
add
jno
aas
out
les
pop
test
in
js
mov
hlt
and
leave
js
push
in
sahf
bound
fnstcw
repnz
jae
jl
jp
xchg
jb
fwait
fs
mov
popa
out
add
mov
sbb
lcall
rorl
xchg
daa
lea
sbb
mov
pop
mov
out
scas
dec
mov
mov
jmp
insb
outsl
into
mov
mov
sbb
mov
fstpl
test
mov
lret
adc
pop
xchg
mov
add
mov
cmp
out
inc
outsl
rorl
enter
and
mull
lods
shl
sub
xchg
dec
push
xchg
scas
or
inc
xchg
xor
xchg
jmp
mov
and
push
jno
mov
movsb
inc
pusha
pop
adc
nop
inc
fmuls
or
mov
inc
fistl
inc
cmpsl
les
lods
out
adc
sbb
jbe
push
and
sub
sbb
adc
cwtl
pop
push
fyl2xp1
hlt
daa
call
mov
in
sahf
mov
out
add
xchg
sbb
xchg
jle
inc
pop
aas
aaa
stc
mov
mov
pop
xchg
mov
call
xchg
pop
lahf
fstl
pop
adc
leave
xchg
and
xchg
adc
in
push
fildll
mov
adc
mov
inc
add
xor
sub
test
jmp
int3
scas
jno
jne
cmpsl
inc
sbb
jnp
ss
cld
bound
pop
mov
jecxz
and
insl
int
out
mov
push
cmp
adc
paddusw
repnz
fsubrl
lahf
lcall
icebp
out
aas
cmp
hlt
les
mov
cmp
cmp
adc
cmp
js
push
mov
push
inc
std
subl
pop
popa
orl
hlt
lea
data16
jns
repz
dec
xchg
jns
jl
mov
cmpsl
mov
mov
mov
test
rcrl
pusha
sbb
data16
int3
or
iret
or
xchg
jnp
add
pop
fistpll
jae
xchg
bnd
cmpsb
test
bound
push
imul
cmpb
lret
sub
stc
mov
sub
test
stos
mov
pop
das
cmp
jnp
pop
fisttpl
push
int
cmp
stos
pop
dec
fdivrl
mov
push
xchg
jne
pop
data16
mov
aam
loopne
aam
or
mov
pop
insb
outsl
mov
pop
fists
rcr
cmp
adc
jno
adc
jb
shrb
stos
aaa
jp
add
inc
pop
sub
jp
mov
mov
rcll
jp
popa
xor
aas
push
fs
adc
pop
push
lods
cmp
shll
mov
or
push
adc
pop
cmp
sti
xor
pop
pop
xchg
lcall
fisubrs
jecxz
dec
popf
pop
mov
mov
inc
lcall
fdivl
push
mov
test
push
outsl
add
sarb
sub
testl
out
add
push
and
or
jo
jl
adc
cmpsb
lds
cmc
mov
mov
jge
mov
push
dec
sbb
or
int
outsl
scas
jo
mov
out
pop
imul
mov
in
cmp
sbb
sub
test
push
inc
inc
stos
xor
sbb
add
mov
aad
pop
call
mov
push
nop
scas
mov
and
sti
inc
rcll
std
sub
out
repz
fcoms
hlt
add
cltd
mov
jmp
mov
cmc
and
dec
sub
scas
push
cltd
movsb
and
cld
fcmovnb
sub
push
or
mov
ja
adc
mov
jo
xchg
jecxz
and
xchg
jo
fwait
scas
cli
xchg
push
roll
in
jo
sub
repnz
mov
xchg
mov
aad
dec
in
sub
rolb
sub
stos
pop
adc
sbb
ss
fidivrl
mov
pop
cmp
inc
xchg
pop
push
fdivrl
pop
jle
xor
shll
xor
inc
xor
imul
mov
push
mov
js
in
je
aas
negb
mov
sub
adc
frstor
ret
pop
cltd
loop
cli
lret
pop
dec
pop
das
fs
mov
and
add
sbb
mov
insl
push
aas
push
scas
or
jb
test
clc
push
mov
aaa
and
les
cmp
jae
cltd
add
or
adc
mov
sub
add
jns
stc
imul
xor
leave
jae
push
jnp
and
add
xchg
lretw
movsb
sbb
mov
jne
loopne
jmp
fsubs
pop
pop
sub
outsb
rcrl
sbb
xchg
sti
sbb
push
mov
popa
hlt
call
xchg
mov
pushf
dec
xor
popa
stos
jp
sti
cmp
push
sub
in
mov
lret
scas
push
dec
mov
or
lods
pop
mov
stc
pushf
loopne
rep
sub
mov
jmp
lds
xor
mov
jp
push
in
or
pop
fcmovnbe
jnp
sbbb
xor
fidivs
out
js
loopne
outsl
jmp
push
xchg
mov
rorb
aad
test
bts
in
fists
sbb
js
lahf
sub
lock
fs
test
jle
repnz
jbe
mov
inc
cmp
and
mov
test
scas
jle
ljmp
cwtl
jl
fldcw
and
arpl
dec
test
mov
test
int3
out
vpunpckhdq
jne
fwait
jno
enter
data16
pop
inc
add
pop
mov
mov
inc
push
xchg
cmp
cld
ret
lsl
insl
jnp
jmp
sub
out
xchg
pop
out
leave
ficoml
lods
sbb
pop
and
pop
les
mov
stos
mov
and
or
sub
js
mov
xchg
or
stc
jl
lret
jno
dec
or
xor
pusha
or
fnstsw
mov
pop
test
mov
mov
push
std
inc
out
cmp
test
jge
inc
xchg
mov
out
hlt
punpckhbw
adc
fistl
rcrl
push
push
xchg
outsl
mov
adcb
pusha
je
inc
pop
or
add
insl
incb
int3
sbb
popa
xlat
ja
notb
ss
push
jmp
test
dec
xor
cli
insl
int3
push
loop,pn
mov
cld
push
inc
mov
push
mov
js
xor
sti
push
stc
jne
mov
dec
mov
inc
pop
cli
or
lds
imul
xor
xor
cmp
mov
mov
pop
aad
lea
rolw
lret
arpl
sub
shlb
into
mov
and
ss
xor
stc
stos
xor
divb
repz
cmc
fnstsw
push
aam
pop
or
dec
pop
push
lret
rcrb
mov
aad
test
movsb
ljmp
or
loope
fildl
pop
add
scas
and
sub
or
addl
mov
sarl
push
imul
dec
and
cmpsl
sbb
xor
in
and
lret
lock
inc
test
cli
out
cmpsb
subl
mov
sbb
aas
js
in
jle
ss
sbb
jecxz
push
lods
les
sub
mov
xor
push
cmpb
outsl
orl
ljmp
cltd
jae
cmp
sub
mov
xchg
adc
rol
dec
jne
mov
adc
loop
pop
pusha
imul
scas
in
sbb
push
push
mov
into
lds
in
daa
mov
enter
insb
clc
in
jne
shl
jae
push
mov
outsb
cmp
fdivrp
adc
aaa
addr16
into
mov
les
jb
das
adc
shrl
pusha
xor
push
dec
scas
jge
js
push
and
push
cs
inc
pop
xchg
ljmp
cli
dec
mov
shll
shl
mov
dec
cld
push
or
xor
lret
sbb
push
xchg
push
xchg
popf
cmp
dec
xor
pop
pushf
mov
mov
mov
aaa
outsl
hlt
ja
mov
pop
scas
cmp
mov
jnp
scas
lods
mov
xchg
setns
aam
mov
jle
outsb
mov
mov
popa
mov
jb
or
jmp
jp
xchg
or
push
outsb
outsb
sbb
dec
cld
or
paddsw
jecxz
xor
inc
mov
leave
push
jle
pushf
add
rolb
popf
icebp
cmp
cmp
mov
loop
dec
scas
shll
pop
test
lahf
sbb
gs
sbb
push
inc
cmp
fsubl
stos
dec
pop
push
mov
lret
aaa
dec
cmp
xchg
cmp
cmp
les
mov
jl
cmp
sub
loop
fs
inc
xor
mov
jle
inc
insl
cmp
mov
leave
mov
sahf
leave
sub
add
push
aam
leave
xchg
lahf
cmp
jmp
xor
xchg
aad
dec
ds
mov
cmpsb
stos
call
andb
in
fistl
cmp
push
cmpsb
xchg
jae
sub
pop
sbb
scas
iret
repz
dec
dec
fwait
add
ds
push
in
inc
mov
movsl
pop
ja
fidivrs
call
mov
mov
pshufw
push
cwtl
sbb
mov
sub
mov
mov
or
outsb
cmpsb
cld
xor
adc
mov
ret
mov
adc
push
xor
and
mov
inc
pop
inc
xor
and
pop
xor
pop
mov
jmp
ret
test
divl
fucomi
add
xchg
sub
shrl
add
test
xor
or
call
test
out
ret
cltd
mov
adc
mov
lods
pop
adc
push
add
xor
imul
clc
mov
gs
pusha
icebp
or
popf
sbb
pop
dec
sbb
fcmovbe
mov
mov
jns
cmp
test
into
cmpsb
popf
and
and
push
pusha
inc
cwtl
adc
je
cmpsb
pop
xor
lds
push
mov
xor
mov
fstps
xor
out
xor
jno
divl
pusha
mov
fucomip
inc
xor
mov
lahf
mov
out
fnstenv
ja
sub
xchg
mov
into
fbstp
adc
fadds
in
cmp
pop
pop
cs
mov
ficompl
outsb
test
pop
pop
or
outsb
out
in
mov
aas
scas
xor
adc
loope
test
mov
enter
call
mov
into
xchg
das
xorb
add
xchg
mov
cs
int3
fimuls
mov
shll
cmc
insl
jne
dec
fstl
jbe
cmc
cld
loop
xor
sub
jecxz
mov
sbbl
cmp
mov
call
jmp
leave
popf
xor
inc
mov
stc
ret
cmp
mov
stc
sub
ljmp
inc
in
and
inc
cmp
push
pop
addr16
test
loope
repz
jnp
cltd
xchg
push
mov
clc
cmpsb
and
fwait
xchg
push
jne
das
pop
bound
lods
test
push
out
jne
jb
mov
and
dec
loope
and
data16
mov
std
out
stos
adc
xor
lds
push
jns
jo
mov
fs
jle
icebp
clc
aam
loopne
add
mov
imul
push
push
lock
in
or
push
push
lret
mov
in
pusha
sarb
out
add
push
lret
add
push
sbb
aad
bts
lds
div
pop
aaa
xor
cmp
ret
ret
test
addb
or
lea
and
adc
mov
icebp
cmp
jmp
pop
in
xor
cmp
shll
in
push
scas
dec
inc
sub
jne
xchg
sarb
fimuls
push
mov
dec
sbb
and
fsubs
test
hlt
repnz
mov
popa
lods
push
xchg
lds
mov
pop
insl
pusha
movsb
push
sbb
inc
mov
lds
leave
testl
in
dec
scas
mov
and
test
icebp
adc
push
xor
movsl
rcl
add
jmp
dec
xor
loop
jns
dec
inc
jle
rorl
movsb
xchg
cltd
and
and
or
std
cmp
cli
pop
mov
jg
push
xor
int3
fwait
sbb
imul
std
jnp
add
popa
bound
dec
ja
lods
fcmovnu
add
xlat
sub
es
loop
xor
dec
into
cs
add
je
cmp
mov
aad
or
ret
scas
cmpsb
stos
lret
sbb
movsb
pop
in
jnp
jge
lods
movsb
dec
xchg
adc
je
filds
mov
inc
shrb
push
mov
cmp
outsb
sbb
jmp
test
dec
pop
sbb
int
xor
aad
mov
dec
xchg
sub
fsubrl
bound
inc
addb
and
mov
cvtdq2ps
push
dec
insl
add
cli
sub
iret
pop
iret
negl
hlt
hlt
gs
scas
adc
inc
cmpsl
push
scas
sti
pop
sbb
out
dec
push
sbb
or
xor
pop
xor
pusha
loopne
std
cmc
sahf
xchg
sub
lahf
clc
ja
pusha
mov
mov
fsubl
add
xor
out
jmp
xchg
add
xchg
or
jl
mov
mov
push
sub
ffree
cmp
mov
addr16
push
lods
les
pop
mov
lea
das
test
ds
adc
loope
ret
jmp
scas
testl
shrl
je
dec
test
cmp
dec
push
jae
test
push
dec
mov
cltd
adc
jge
mov
xor
repnz
gs
mov
jb
stos
xor
cmp
xorb
loop
mov
dec
in
pop
lds
mov
add
pusha
sub
sbb
dec
addb
cltd
dec
and
push
lcall
push
mov
or
inc
push
call
test
inc
enter
popa
dec
sub
iret
ds
outsb
mov
cmc
cld
jo
fisttps
sbb
adc
test
jge
adc
scas
pop
adc
push
adc
sub
and
lods
xor
mov
xchg
jp
jecxz
push
sbb
xor
sahf
push
adc
cltd
int3
and
sti
outsb
dec
jo
pop
out
rcrl
xchg
push
jno
cmp
add
incl
inc
or
es
sub
push
mov
jae
mov
dec
cmp
pop
dec
mov
repnz
jg
ret
fdivrs
test
mov
cli
icebp
push
negl
sub
sub
fsub
leave
popa
leave
out
xchg
jle
cmp
movsl
outsl
fidivrs
adc
push
sub
shrb
scas
jo
jecxz
mov
loope
adcl
sub
jo
call
mov
lock
add
mov
int
shll
cmpsl
test
pop
sbb
mov
pop
jae
push
lds
mov
fsubrl
dec
psrld
sbb
loope
dec
nop
add
mov
adc
xchg
mov
jne
push
and
in
mov
mov
pop
xor
xor
sub
adc
ljmp
lret
cmp
xor
das
add
aad
cmp
incl
xchg
outsl
add
lret
int
lds
mov
push
lds
movsb
push
dec
test
test
pop
xorl
bound
hlt
js
stos
mov
mov
out
xlat
data16
rclb
js
push
pop
inc
aas
push
bound
mov
mov
jns
pop
scas
cmp
mov
cmp
cmc
dec
xchg
arpl
push
ds
xor
pop
and
jne
ret
jne
adc
cmp
ss
mov
jae
iret
shl
push
or
aad
mov
mov
and
inc
js
lods
out
xchg
push
fadds
sub
in
sub
xor
xchg
orl
mov
xchg
fwait
jmp
rcr
pop
add
push
or
out
out
in
insb
mov
popa
xchg
adc
mov
mov
loop
dec
jbe
aas
scas
mov
pop
orl
lret
movsb
orl
lret
and
pop
xor
mov
fs
dec
add
cld
adc
ljmp
imul
mov
nop
sub
push
sbb
loope
jle
hlt
test
enter
popa
insl
mov
pop
lods
scas
and
dec
push
or
inc
mov
cmp
push
mov
aam
xor
arpl
mov
clc
jb
sub
pop
add
mov
popf
in
rcrl
lret
mov
cmpsb
outsl
cmp
andl
adc
jecxz
mov
movsb
mov
imull
shlb
subb
bnd
jns
xchg
repz
in
inc
mov
add
mov
scas
lret
es
pop
mov
mov
repz
cs
sti
jne
insl
or
adc
push
pushf
jns
jmp
pushf
pop
pop
cmp
sbb
neg
loop
and
mov
cmpsl
sbb
js
push
or
pushl
cwtl
jne
sarb
js
mov
mov
testb
out
imulb
mov
cmp
in
xchg
mov
jb
loop
mov
push
outsb
icebp
adc
mov
adc
jmp
stc
mov
xchg
cmpl
and
pop
andb
jbe
push
in
stc
push
inc
cmp
test
dec
out
fdivrl
call
mov
mov
mov
mov
fstps
loopne
dec
sbb
lret
movsl
inc
xchg
inc
pop
mov
sub
ret
push
addr16
xor
jnp
sbb
jle
jbe
out
push
and
ficompl
mov
outsl
pushaw
mov
or
pop
dec
and
imulb
adc
add
jb
sbb
pop
xchg
pop
mov
out
loop
sub
push
pop
lock
popa
test
sub
dec
or
mov
xor
and
lods
ss
and
ret
inc
and
xchg
xor
sbb
jge
leave
in
je
sub
mov
repnz
dec
sub
lods
cwtl
mov
fcompl
push
mov
out
lret
cmp
mov
out
sub
bound
insb
mov
mov
or
sbb
mov
ret
xor
gs
cli
xchg
hlt
or
fmuls
jl
push
or
int
push
mov
inc
cmp
mov
push
push
sub
test
subb
mov
fadd
jmp
stos
std
repnz
adc
fnstsw
into
jns
ja
add
cli
adc
pop
inc
gs
add
cli
pop
aad
push
xor
or
sbb
data16
enter
aam
push
dec
lock
mov
add
push
imul
mov
add
daa
sub
enter
sahf
xor
add
fdivrl
mov
inc
and
dec
into
je
push
add
adc
imul
mov
push
repz
xchg
mov
imull
mov
stos
jb
dec
cwtl
jae
dec
jle
inc
sub
xchg
mov
rol
ret
mov
aad
adc
repnz
daa
out
out
push
imul
fisubl
nop
repnz
in
aas
and
add
and
fcomps
ret
push
lds
sub
inc
gs
mov
xchg
add
cmpsl
test
aaa
test
data16
sub
sbb
push
mov
test
push
mov
je
inc
add
dec
fld
push
je
in
mov
mov
push
inc
outsl
iret
sti
or
mov
and
pop
das
cmpsl
push
aam
iret
mov
push
cmp
ficoms
mov
rcrb
mov
ja
aaa
mov
pop
adc
pop
mov
pushl
pop
push
sbb
sbb
xchg
mov
xor
add
xchg
out
das
xchg
ret
mov
scas
adc
and
inc
aas
xor
pop
test
mov
dec
mov
stos
mov
pop
into
xchg
pushf
sub
fwait
ljmp
cmp
dec
inc
xchg
lds
mov
push
frstor
or
mov
movsl
aaa
lock
mov
aad
aad
and
adc
cmpsb
add
es
xor
pop
dec
in
fimull
xchg
jmp
sbb
arpl
add
fisttps
cltd
rcrb
mov
out
push
pusha
je
push
enter
mov
mov
xor
pop
test
rolb
movsl
nop
nopl
inc
scas
fiadds
pop
imull
iret
jo
adc
je
imul
movsl
and
add
sbb
cmp
repz
mov
xchg
xor
cmp
jmp
dec
imul
int3
xor
into
cli
lock
inc
and
dec
pop
rcrl
rol
out
loope
push
and
push
add
cwtl
pop
ja
pop
pushf
dec
test
shll
daa
push
stc
mov
jl
les
xchg
mov
mov
mov
imul
jge
mov
loopne
push
pop
mov
push
push
mov
and
mov
or
mov
xlat
or
pop
in
insl
movsb
mov
scas
sbbl
push
or
xchg
cld
lret
cwtl
mov
popf
scas
je
ljmp
in
xchg
sub
push
push
mul
inc
addr16
push
mov
pop
xchg
mov
cmp
dec
dec
jp
mov
fiadds
push
jbe
cltd
or
imul
push
xorl
add
jns,pn
adc
sub
xorb
cmp
test
insl
jae
cmpsb
out
mov
mov
in
iret
jb
sub
or
mov
add
pop
jbe
addr16
loopne
aad
repz
add
ret
sbb
pop
jno
popf
adc
repnz
push
jp
sub
fldenv
cmp
jg
int3
jb
add
dec
mov
mov
mov
out
nop
xor
jns
ds
mov
and
pop
in
in
sub
inc
jp
inc
cmp
adc
pushl
pop
mov
add
fistpll
call
mov
js
data16
lcall
and
test
xor
cvtps2pd
test
push
ljmp
test
xor
sbb
test
int
mov
push
xchg
pop
stos
aaa
xchg
mov
jns
in
dec
adc
or
mov
push
cmp
sub
jg
loope
xchg
and
in
movsl
sbb
mov
out
sub
stos
push
mov
rcl
adc
or
insb
xor
cmp
add
add
pop
xchg
sub
dec
in
into
cmp
add
pop
lods
inc
sbb
xor
inc
sar
cltd
shrb
push
scas
sub
fwait
jmp
nop
jmp
insl
mov
insb
xor
adc
repz
pop
cmp
jo
fisubrl
or
loopne
xchg
inc
mov
pop
test
mov
jae
or
mov
sub
roll
sbb
les
mov
push
loop
and
shrl
lahf
je
das
insl
push
xchg
mov
mov
dec
je
jge
gs
scas
sub
push
mov
pop
cmovne
test
push
mov
movsl
popa
adc
pushf
or
jge
sub
scas
call
lret
jno
out
les
sub
mov
push
leave
popf
stos
inc
inc
cli
movsb
mov
xor
adc
lahf
mov
roll
daa
ficoms
mov
mov
aaa
ss
loopne
mov
das
mov
shr
stos
and
out
add
aas
daa
cmp
pop
in
add
push
cmp
ja
out
mov
inc
dec
and
sbb
data16
ficoms
xchg
aad
push
pop
dec
cwtl
dec
arpl
rorb
xorb
sbb
popf
pop
cli
cli
test
xor
mov
or
adc
leave
out
jecxz
jp
je
test
mov
pop
xchg
lds
pop
sub
jl
adc
and
jmp
jno
mov
in
sahf
mov
loope
and
es
add
mov
pop
cwtl
pop
int3
cmp
movsb
pop
jae
sub
nop
add
pop
sub
mov
cmp
sbb
pop
std
loop
iret
sbb
fwait
rcll
xor
shll
test
push
mov
hlt
ficomps
leave
jns
dec
mov
bound
dec
idivl
je
cmp
push
pop
dec
xorb
negl
sub
sub
sti
add
or
lcall
test
insl
push
adc
add
adc
jno
loopne
dec
lods
push
dec
inc
xor
mov
fnstcw
mov
andb
xlat
or
jle
or
sub
jo
lds
mov
rclb
pop
xchg
xchg
jbe
mov
out
arpl
dec
rclb
mov
ljmp
add
rorb
adc
negb
out
rcr
xchg
in
test
mov
and
push
jmp
dec
fldenv
xor
test
cmp
and
mov
je
ja
imul
arpl
out
dec
jnp
mov
in
and
pop
sbb
mov
mov
pusha
xor
sbb
push
fwait
mov
add
jo
addr16
in
push
and
imul
xchg
inc
idiv
insb
push
cmp
sub
in
xchg
sbb
jo
mov
xor
mov
cli
sbb
pop
dec
pop
xor
lea
sub
sbb
pop
iret
sbbl
inc
lock
mov
inc
cwtl
sbb
jge
dec
stos
int
xor
pusha
push
mov
ja
push
push
xchg
add
lock
subb
jecxz
sahf
movsb
or
loop
div
orl
sub
mov
enter
add
sub
pop
push
cmpl
in
repnz
sbb
lock
addr16
jbe
xor
lret
aas
insb
add
hlt
hlt
fistl
lds
jb
scas
cld
mov
fsubrl
in
dec
jle
popf
cmpsb
loopne
add
or
repz
sub
loopne
mov
mov
js
pop
inc
fldcw
lds
mov
add
add
jbe
in
pop
fnstsw
cmc
std
imul
inc
mov
push
or
outsb
inc
imul
inc
mov
adc
negl
jo
inc
jle
sbb
mov
iret
rcl
xchg
ja
jecxz
and
jge
xchg
aas
and
cld
adcb
aad
xchg
roll
mov
and
lock
sbb
mov
movsl
jmp
sbb
aaa
push
inc
sub
inc
mov
push
push
inc
loop
pop
cs
push
mov
fcmove
pop
pop
ja
test
push
addr16
pop
push
aam
repz
sbbl
mov
inc
pop
mov
les
imul
iret
stos
pop
xor
push
ja
mov
dec
jmp
and
ret
push
stc
sub
and
test
and
lods
rcrl
mov
xor
mov
cmp
add
std
xchg
insb
dec
fiaddl
pop
ds
sbb
addr16
cli
pop
adc
adc
pop
mov
lds
push
fiadds
dec
jns
ficompl
add
sub
mov
xchg
mov
imul
dec
xchg
pop
data16
das
out
or
jp
sbb
add
mov
sub
fwait
mov
inc
cmp
clc
cmp
test
test
pusha
sub
sbb
cmp
mov
gs
aam
push
rcll
not
int3
addr16
sub
aas
cmp
adc
xchg
fs
pop
sarl
mov
insl
pop
push
mov
mov
shrb
mov
scas
xchg
or
in
dec
cli
mov
jp
adc
jp
sbb
addr16
inc
test
ret
sub
inc
ficoml
jg
mov
mov
jg
out
push
and
jbe
loop
adc
mov
sbb
addr16
lret
jns
push
jo
sar
mov
scas
push
repnz
aas
push
lods
out
clc
popf
decb
jg
insl
xchg
xchg
out
jle
mov
push
or
dec
movsb
dec
hlt
lea
lods
dec
ficompl
push
insl
loop
push
dec
call
jno
mov
loop
dec
jge
inc
arpl
gs
out
jae
jnp
flds
rorb
adc
dec
mov
mov
aam
testl
std
or
push
scas
and
cli
cmp
push
push
imul
outsb
and
cmp
sub
cmp
jge
push
int
mov
out
test
inc
cmp
pop
mov
mov
xlat
add
imul
je
mov
pop
add
mov
mov
iret
push
stc
sahf
loope
test
dec
insl
add
popf
in
into
in
inc
or
movsb
xchg
jne
icebp
repz
gs
loop
lret
sbb
sahf
mov
add
pop
lea
sahf
scas
jge
sub
shll
inc
mov
mov
mov
pop
bound
stos
xchg
pop
nop
je
xchg
icebp
das
in
jge
imul
push
jne
fcomp
xor
pop
jno
xchg
pop
out
div
inc
test
pop
movsb
mov
outsb
adc
mov
inc
ret
int3
dec
stos
inc
push
mov
iret
test
std
add
mov
sbbl
test
jl
aam
out
into
mov
fwait
jo
pushf
mov
and
or
sti
sahf
jmp
outsl
clc
jp
push
lcall
mov
and
sub
and
je
fwait
cmpsl
mov
test
xlat
mov
scas
add
mov
add
int3
mov
jbe
dec
aam
mov
in
add
inc
lret
jecxz
sub
push
ret
insl
sub
cmpsb
jl
dec
mov
aam
scas
sub
jmp
ljmp
es
inc
mov
adc
sbb
jo
sub
jmp
clc
insl
dec
jnp
xchg
out
in
lods
imul
bound
popf
xor
pop
xchg
pmulhuw
pop
mov
push
sbb
and
mov
inc
pushf
xchg
sub
je
mov
fwait
push
cwtl
adc
pop
lcall
stos
cmp
cli
dec
and
shll
mov
roll
jp
mov
push
xchg
shl
pop
loop
adc
imul
lret
mov
mov
pop
cli
sbb
xor
mov
mov
mov
popa
xchg
adc
pop
idiv
popf
sub
fsubs
add
or
mov
add
int
mov
lahf
loop
sub
sahf
pop
sub
ss
mov
sbb
lock
adc
push
adc
cmc
stos
cmc
push
int
rolb
mov
adc
jnp
mov
add
add
dec
jle
sub
imul
jbe
pop
or
mov
mov
pop
or
cmpsb
sub
js
addl
das
add
pop
out
cli
and
pop
aad
push
fucom
mov
or
repnz
movsb
stos
mov
fnsave
aas
cmp
push
push
xorb
push
sub
adc
shl
add
mov
inc
xchg
push
out
fmull
push
push
xchg
add
cmpsl
mov
jns
mov
js
mov
xor
ficompl
cmpsb
jecxz
or
cld
fldt
jae
fwait
xchg
push
lret
fwait
push
xor
xchg
sub
pushf
push
inc
xchg
pop
lods
rclb
xchg
das
adc
and
pop
ds
xchg
dec
scas
xor
mov
lret
nop
xor
add
push
aad
ja
fsubrs
mov
cmp
and
push
fnstsw
mov
xchg
sbb
xor
push
adc
push
out
adc
cmp
mov
mov
or
lock
into
pusha
iret
cmp
movsb
push
or
lods
push
dec
mov
add
adc
aaa
or
mov
mov
inc
xor
jne
test
dec
mov
enter
stc
hlt
xchg
adcl
push
int
out
gs
roll
cmpsb
jo
cmovp
cmp
and
fmul
lcall
test
mov
popa
and
mov
cmp
add
or
loopne
push
ljmp
pusha
jg
mov
insb
xchg
push
sub
test
out
out
rol
fimuls
or
push
mov
mov
dec
stc
jecxz
xor
add
pop
sti
xchg
fwait
or
out
jg
mov
dec
lret
push
ja
pop
push
fcmovbe
repz
jo
outsb
or
mov
test
add
adc
cmp
jmp
xor
and
push
and
pop
add
pop
pop
cmpl
dec
pextrw
xor
pushf
cmp
xchg
lret
imul
fdivrl
repz
outsl
aaa
rorl
add
pusha
imul
stc
cmp
lods
inc
xor
outsb
push
xor
sbb
mov
or
cs
jnp
sub
xchg
in
push
inc
and
push
sub
pop
lods
push
mull
rorl
nop
int3
jmp
into
enter
nop
xchg
cmp
sub
mov
mul
loopne
pop
or
push
cvtps2pd
mov
push
scas
test
gs
push
lock
lea
inc
mov
ret
add
jae
fdivrl
aam
cmp
ficomps
out
jmp
mov
xchg
lods
push
cltd
je
test
or
xchg
movsl
mov
cmpb
fldenv
outsl
cli
jns
jo
sub
je
imul
pop
rorb
in
outsb
fcomps
fisubs
int
mov
inc
pop
xor
pop
and
cltd
stos
sub
mov
dec
xchg
dec
xor
sahf
xor
lea
clc
pushf
push
pop
pop
idiv
rclb
adc
cwtl
fstpl
mov
decl
flds
pop
push
mov
mov
popa
and
xor
mov
xor
repnz
pusha
andl
repnz
leave
sub
add
fwait
or
xchg
orb
or
fstl
sbb
cld
adc
pop
push
inc
fcomps
stos
xchg
movsb
push
jo
out
xchg
fimull
dec
lods
sti
lcall
mov
push
xchg
repnz
sbb
or
lea
outsb
or
jmp
mov
jno
xor
loopne
leave
adc
test
cwtl
xchg
or
ret
inc
cmpsl
cmpsb
push
mov
cmpsb
icebp
shll
aas
int
out
mov
cmp
cmc
jb
push
dec
loop
sarl
mov
sahf
jg
cs
cmp
pop
cmp
movsb
mov
enter
jnp
cmp
out
pop
xor
and
test
and
gs
mov
int3
clc
xchg
cmp
cli
call
add
out
lcall
ljmp
call
push
mov
int3
icebp
sar
xchg
movsb
jmp
xor
sbbl
or
ja
inc
add
mov
cmp
dec
aaa
nop
xchg
adc
sub
negl
cmc
movsl
mov
mov
xchg
sahf
lock
adc
xchg
inc
mov
mov
mov
mov
and
push
in
test
pushf
out
jne
adc
fs
inc
hlt
cmp
sub
sbb
fsubs
xor
out
mov
xchg
inc
mov
movsb
mov
dec
inc
jne
fiadds
push
sbb
stos
cmpsb
or
fisubrs
stos
pop
jecxz
adc
xchg
aas
dec
push
ficoms
xchg
lret
imul
or
or
add
mov
cmpsb
sub
call
mov
adc
icebp
aaa
mov
xor
lock
inc
mov
jmp
push
xor
xchg
mov
cmpsb
cs
add
inc
sahf
iret
sbbb
pop
sub
test
js
cltd
movhps
iret
add
inc
arpl
mov
mov
ss
sbb
inc
push
mov
rolb
jbe
inc
insb
out
mov
jbe
push
mov
stos
cmp
in
and
pop
mov
mov
hlt
aad
stc
jp
dec
mov
adc
push
aaa
pop
scas
repz
jl
test
jl
rcll
sbb
test
std
in
push
stc
push
jle
pop
push
movsl
push
sub
jmp
push
jne,pt
jae
rcrl
or
cmp
sbb
fidivrl
add
inc
insb
shld
movb
mov
push
and
inc
cmp
mov
ljmp
es
jecxz
pop
mov
xchg
sbb
push
adc
jl
ror
xchg
xchg
mov
mov
enter
ja
shr
sub
scas
inc
jp
and
mov
js
loope
push
jg
stos
hlt
push
enter
ss
dec
popf
rcr
xchg
imul
dec
cwtl
mov
ss
test
xor
outsb
pusha
jb
inc
pop
xchg
or
jnp
mov
jnp
fs
xchg
xchg
pop
std
outsl
idivb
dec
xchg
outsb
sbb
or
mov
mov
mov
dec
cli
mov
cmp
outsl
fldt
xor
insl
jno
pop
cmpsb
push
mov
in
cmp
int3
popf
mov
inc
leave
repz
pop
sub
sbb
xchg
jecxz
dec
add
xchg
jmp
aam
mov
fcompl
sbb
dec
sub
pop
pusha
and
stc
ja
vpshaq
insl
in
xchg
lock
rdmsr
xchg
pop
cmp
daa
cwtl
mov
test
sub
rorl
arpl
push
pop
mov
mov
clc
xchg
filds
push
push
mov
push
shl
xchg
inc
js
mov
in
adcb
mov
mov
dec
pop
in
add
mov
and
mov
aaa
pushf
rcrb
adc
divb
hlt
jmp
popf
fucomi
loop
xchg
dec
jle
xchg
mov
dec
test
xchg
jae
mov
pop
sti
pushf
jl
lock
mov
cmc
mov
jmp
and
xor
and
mov
mov
bnd
lds
shrl
imul
push
jbe
pushf
push
es
xor
pop
dec
test
dec
test
pop
pop
lock
lahf
iret
and
pop
sbb
outsb
test
mov
inc
aam
pop
sbb
cmpsb
adc
dec
or
movsb
mov
data16
ljmp
hlt
xor
pushf
jecxz
ljmp
bound
les
sahf
jo
mov
adc
mov
xor
jo
fbld
enter
cs
push
cmp
jl
fbstp
xchg
arpl
movl
adc
nop
addl
lock
mov
push
incb
jle
das
repnz
ds
outsb
cmp
sub
push
enter
mov
pop
pop
inc
jns
jp
pop
mov
xchg
cmp
xor
jb
add
movl
or
test
dec
lods
or
fldt
xchg
xor
loop
aas
es
lock
shrl
sub
popa
fsubr
repnz
fstpl
insl
out
cmp
shrd
aad
add
gs
jo
dec
in
enter
sbb
stos
hlt
out
xchg
push
add
clc
iret
popf
andl
movsl
ljmp
fst
sub
sahf
cld
jl
aaa
dec
mov
xor
fmuls
inc
pop
mov
fists
inc
dec
inc
mov
loopne
imul
cmp
or
push
pop
push
xor
ret
cltd
rclb
rcrl
js
sbb
jmp
lea
dec
cmp
jmp
xchg
adcl
jns
stos
cmp
bound
movsb
sarb
outsb
jmp
sub
jg
call
bsf
lcall
and
jmp
call
cmpsl
stos
cmp
pusha
dec
add
pop
aas
je
jmp
cmp
cli
dec
and
xchg
std
fildl
sub
imul
std
inc
ljmp
push
sbb
fcomp
pop
insb
scas
jge
jle
mov
inc
jl
adc
pop
in
push
pop
lods
into
mov
mov
or
jmp
movsl
push
shrl
add
lahf
loopne
inc
lods
enter
pushf
pop
push
pop
and
sub
push
outsl
sbb
in
inc
mov
cmpsb
add
xchg
mov
mov
pop
loope
repz
movsl
loope
outsb
mov
sub
mov
addr16
mov
pop
aad
cmp
cmpsb
pop
mov
scas
pop
lock
adc
and
xchg
jb
scas
mov
pop
pusha
and
rolb
push
mov
pop
ret
inc
jne
movsl
xchg
pop
ja
outsb
int
adc
push
fxch
outsb
add
outsb
imul
inc
adc
stos
jnp
je
pop
fiaddl
lea
clc
stos
and
and
fst
mov
addb
sub
xor
shr
notb
xchg
dec
lods
cs
mov
ret
dec
stc
jae
loope
insl
push
and
sahf
mov
xor
test
xchg
mov
mov
pusha
xchg
pusha
sbbl
cmpsb
jl
mov
shr
pop
cmp
pop
pushf
enter
fbld
sub
adc
fwait
pop
xor
daa
dec
jge
add
cld
pop
mov
dec
xor
lret
or
dec
cli
fdivrs
inc
cmpsb
inc
enter
jecxz
adc
aas
jbe
sub
mov
xchg
int
std
cmp
xlat
cmpsl
or
fbstp
out
mov
mov
push
scas
inc
pop
sahf
daa
in
movups
ret
mov
arpl
int3
inc
cli
int
xchg
frstor
loope
adc
sahf
pushf
pop
mov
imul
fs
mov
frstor
int
cli
and
stos
js
add
push
loope
sbb
data16
gs
mov
movsl
sahf
adc
in
sub
lds
xchg
mov
sar
jle
jle
add
insl
sub
and
push
fstl
cmp
popw
aas
into
pop
pop
jmp
inc
outsb
cmp
out
sahf
add
mov
loope
lahf
cmpl
mov
dec
in
repnz
cmp
cmp
cmp
add
faddp
jno
add
loop
fisttpll
movsl
sbb
cmpsb
or
cmc
aas
negb
lock
xchg
mov
adc
inc
dec
jmp
lods
loop
sub
sub
pop
int
adc
xchg
sbbl
aam
push
sbb
ret
loop
int
xchg
and
into
sti
jge
mov
movsl
mov
pop
aas
das
adc
adc
cltd
mov
mov
adc
cld
or
dec
call
push
mov
aad
scas
push
ja
xchg
add
test
xor
xchg
outsb
and
xor
fwait
jp
sub
add
xlat
pop
lds
in
dec
insl
cwtl
rcll
sbb
inc
sub
pushf
adc
and
mov
fistl
lock
jecxz
lcall
out
push
loopne
inc
cli
add
stos
ljmp
pop
movsl
cmpl
mov
aaa
mov
mov
adc
jnp
sub
xchg
cmp
movsl
fists
adc
notl
xchg
sarl
mov
mov
lahf
fldenv
ret
push
inc
xor
sub
dec
lods
mov
and
pop
icebp
mov
add
cmp
xor
or
cmc
lea
scas
loop
cmpsl
das
int3
add
loope
in
in
adc
adc
push
push
cmp
push
mov
push
repz
sbb
add
rcrb
loope
arpl
mov
daa
es
imul
push
dec
ret
dec
push
adc
repnz
jecxz
int
or
daa
gs
xlat
mov
xchg
out
daa
pop
orb
push
lock
mov
jmp
jp
mov
or
nop
outsl
jne
mov
enter
test
lret
jne
xchg
push
ret
jl
jecxz
adc
sbb
cmp
lods
push
jg
mov
xchg
add
gs
test
cmp
cltd
clc
fnstenv
push
lret
push
cmp
call
test
cmp
pop
cmp
int3
cli
mov
shlb
mov
pop
lret
mov
mov
push
inc
push
and
dec
xchg
sub
and
add
lcall
insb
sarb
lds
dec
jge
xor
pushf
dec
add
and
icebp
sbb
or
mov
mov
jl
push
mov
fisttpl
sbbl
mov
xor
push
cli
lds
jns,pt
jl
push
scas
add
aaa
xchg
pop
repnz
dec
adc
xchg
sub
scas
bound
scas
outsb
adc
push
adc
or
inc
dec
cmp
mov
lock
outsb
mov
adc
loop
sbb
xor
fwait
aam
lods
gs
es
xchg
hlt
lock
push
fstps
lret
jnp
sbb
push
lods
daa
lret
jno
sbb
movsb
add
xchg
mov
enter
or
lahf
push
stos
add
push
loopne
movsb
pop
mov
out
cs
sub
bound
jmp
in
or
xchg
jecxz
dec
jg
pop
mov
sbb
xchg
dec
test
in
dec
mov
add
mov
add
jo
movsl
mov
dec
mov
inc
dec
inc
out
insl
loope
sbb
cs
lods
cs
xchg
fadds
xchg
mov
and
inc
test
ja
dec
mov
ja
add
adc
fnsave
mov
sbb
rcrl
sbb
push
sub
push
idivb
popf
mov
clc
xor
sarb
mov
adc
and
popf
cmc
sub
mov
inc
loopne
scas
pop
or
in
je
mov
insb
mov
ss
mov
outsb
and
in
aam
lahf
push
lea
fisttpl
in
mov
dec
push
push
outsl
cmp
add
outsl
mov
mov
push
lds
xchg
sub
and
xchg
loopne
and
rcl
out
div
bound
out
call
xchg
jb
xor
lods
les
mov
and
leave
ficoml
mov
cmp
cltd
jno
or
or
in
testl
cltd
xlat
leave
dec
ds
das
adc
adc
popa
mov
mov
mov
jne
subb
xor
lar
mov
xchg
jecxz
out
xor
push
in
sbb
dec
xlat
mov
mov
leave
cmpsl
or
popa
jle
xor
cmp
jmp
out
xor
ficomps
popa
arpl
arpl
dec
xchg
add
jg
mov
daa
xor
fcomps
cwtl
jnp
pusha
cmp
pop
pusha
adc
and
push
das
mov
sub
addr16
xchg
lds
ss
mov
sarl
xor
or
into
lret
xchg
mov
cli
jge
insl
pop
fsubl
pushf
mov
popa
mov
lret
dec
test
icebp
sbb
leave
xor
aas
gs
sbbl
int3
xchg
fcmovb
and
fcoms
xor
or
pop
pop
in
outsb
ret
popf
out
loop
push
call
in
mov
dec
inc
ret
cmp
loop
mov
addr16
out
mov
test
repnz
movsb
and
ja
xchg
push
push
sub
repz
es
insb
lret
out
or
jmp
out
push
push
pmulhuw
push
out
and
stos
fbstp
sbb
xchg
mov
add
cld
xlat
bound
movsb
jne
mov
mov
outsl
das
or
lock
leave
mov
call
and
das
aam
mov
repnz
das
push
into
jle
data16
inc
shr
or
arpl
outsb
sbb
in
xor
insb
xchg
xlat
cmp
pop
sbb
fidivrl
mov
fisubs
fwait
sub
iret
aaa
xor
mov
sti
stos
daa
setne
or
test
iret
test
inc
inc
in
loope
sarb
mov
rcll
jl
pop
add
cmp
jl
xor
sub
push
shll
fsubrp
mov
or
dec
xor
rorl
hlt
inc
jo,pt
lea
add
or
rorb
and
cmp
cmpsl
sub
rorb
fidivs
shlb
jle
sub
mov
push
mov
lcall
sahf
add
dec
loopne
out
pusha
iret
jge
mov
or
sbbb
push
cmp
mov
stc
leave
test
inc
loope
in
push
and
pop
cmc
add
mov
fimuls
jae
pushf
call
add
pop
inc
pop
shlb
testb
out
notl
pusha
sub
hlt
ret
mov
pop
add
jl
sub
push
stos
int
adc
inc
push
pop
es
mov
sub
imul
adc
ret
mull
insl
jnp
adc
adc
mov
call
int3
inc
jmp
in
stc
mov
mov
cmp
adc
and
fs
lods
mov
stc
cmc
pop
dec
jae
xor
pop
icebp
push
leave
adcb
jne
je
in
gs
pop
andb
int3
int
mov
adc
imul
int3
mov
mov
cmovno
aad
pop
imul
aam
inc
jmp
mov
mov
lret
fsubl
das
push
sub
cs
sub
loope
jns
testl
fisubrl
xchg
cwtl
in
inc
mov
loop
jb
adc
inc
mov
enter
xor
and
adc
dec
clc
je
fisttpll
and
sbb
xlat
int3
movsl
and
and
dec
stc
jo
cmp
ficoms
in
scas
std
lret
sti
push
orb
inc
in
push
mov
jno
popa
popa
je
ljmp
jbe
inc
loopne
in
iret
mov
inc
jp
mov
push
test
sub
sub
data16
sbb
adc
bound
int
js
sub
dec
inc
cs
push
jne
aaa
push
inc
int3
jnp
add
or
int
sti
arpl
movsb
nop
adc
imul
inc
pushf
push
mov
lds
fcoms
dec
adcl
mov
xchg
pop
push
sub
dec
cld
loope
and
lfs
push
mov
jp
jecxz
int
or
ss
bound
scas
or
test
int3
mov
outsl
push
sarb
add
ret
cmpl
ret
pop
or
arpl
das
pop
lret
mov
mov
insl
insb
jo
movsl
push
enter
adc
mov
add
push
clc
or
loop
and
cmp
ja
cwtl
jmp
jo
out
sbb
les
push
cmc
and
int3
jg
leave
sub
outsb
mov
imul
shl
pop
cs
mov
pop
popf
pop
mov
cmpsb
lahf
cs
dec
xchg
xchg
add
shl
shll
fadds
push
mov
aas
or
addl
mov
add
xchg
dec
xorb
pop
dec
jb
ret
sub
test
mov
inc
arpl
xor
outsl
push
shrl
out
fnop
ds
mov
inc
imul
lock
sbb
cwtl
mov
push
shll
cmp
lds
popa
ss
mov
arpl
inc
adc
mov
adc
addr16
push
lock
push
cmpl
adc
pop
lock
outsl
dec
je
mov
pop
cmp
fwait
mov
std
xor
inc
arpl
pop
lcall
mov
iret
or
jne
lahf
aam
mov
inc
mov
xorl
add
enter
in
cmpsb
sbb
loopne
pop
arpl
xchg
cld
lock
loopne
repz
jecxz
bound
sbb
cmpsb
rcrl
out
scas
dec
out
lret
sti
or
pop
xor
shlb
inc
imul
lock
add
out
cmp
adc
out
stos
xchg
fcomi
call
in
fistpl
aas
into
fsubrp
out
aad
xor
sahf
mov
sahf
out
in
xchg
rcll
jmp
xor
xor
dec
push
add
popf
jo
fists
xchg
out
rcll
scas
dec
cmp
adc
pop
pop
pop
shrl
pop
jp,pt
sbb
dec
adc
mov
idivl
mov
fs
fnstcw
leave
int
mov
add
das
cmp
negl
add
pop
fsubrs
push
dec
int
pop
mov
push
ficomps
inc
lock
sub
xchg
jmp
shll
gs
insl
cmp
jne
imul
adc
mov
in
sub
loopne
loopne
jmp
les
pop
aas
std
rclb
pushf
or
cwtl
int3
pop
fldenv
shr
ljmp
jp
and
jno
loope
faddl
fcmovnu
add
stos
jne
les
and
dec
mov
lahf
jle
ss
jne
push
icebp
or
mov
orb
jae
gs
scas
nop
sub
sbb
nop
inc
inc
cli
dec
ljmp
adc
cmp
xchg
push
cmp
pop
outsl
aaa
mov
mov
inc
sbb
test
popf
and
das
fldl
or
das
mov
lret
fidivs
add
dec
jle
add
imul
pop
or
fistpl
mov
push
jne
cmpsb
ljmp
inc
jl
mov
xchg
or
std
xor
adc
mov
cwtl
xchg
les
and
pop
or
push
int
mov
adc
test
pop
mov
out
popa
cmc
mov
and
push
pop
fadd
sub
int3
movsl
push
inc
jne
movsb
es
arpl
cwtl
cltd
pop
dec
adc
je
lods
leave
in
mov
repnz
and
add
adc
fdivrl
dec
and
in
in
pusha
xchg
addr16
nop
repnz
addr16
mov
push
xor
adc
mov
sub
inc
and
arpl
or
arpl
xor
pop
inc
inc
mulb
popf
into
shrl
push
in
add
into
lods
in
sbb
fadds
stc
repnz
in
cmpsl
out
push
mov
add
aaa
std
mov
in
mov
fistps
cmpsb
xchg
xchg
mov
or
repz
adc
movsb
mov
stos
aam
push
scas
push
cltd
jb
adc
cltd
adc
pusha
mov
adc
cld
movsl
dec
sarl
cs
fadd
inc
xchg
mov
pop
or
jmp
dec
mov
add
outsl
bound
into
xchg
in
outsl
add
cmp
test
bound
jl
roll
or
pop
clc
cmp
sbb
and
or
fcmove
dec
push
mov
jl
mov
hlt
or
mov
mov
mov
into
lret
aaa
push
je
xchg
loopne
addr16
fld1
pop
sub
cmpsb
js
dec
inc
jmp
adc
imul
and
and
or
lahf
and
cmpsl
mov
mov
and
push
mov
mov
sti
test
mov
pop
pop
inc
test
jnp
xor
mov
push
icebp
and
push
cli
dec
inc
loopne
adc
das
pop
dec
and
adcl
sub
adc
cmpl
lret
outsb
jmp
pop
add
or
scas
je
mov
or
and
lcall
test
enter
mov
sub
dec
mov
leave
xchg
aaa
sahf
dec
jecxz
cmpsw
sbb
push
out
fsubrl
insb
adc
cmp
pop
push
push
sub
repnz
out
lods
pop
and
xchg
push
fdivs
add
cmp
and
inc
fsts
pop
mov
cld
and
xchg
inc
push
imul
es
lea
xor
push
jns
or
mov
icebp
fistpll
lahf
inc
adc
cmp
mov
cmp
jl
mov
movsb
lahf
inc
push
loopne
and
mov
mov
sub
ljmp
mov
mov
lods
mov
push
pop
mov
sbb
lret
scas
inc
xchg
xor
push
das
push
jecxz
test
jmp
and
jb
lock
mov
movsb
mov
jmp
clc
adc
sbbb
and
jno
fldenv
dec
test
mov
outsb
push
neg
jl
enter
pop
movsl
stos
mov
insb
or
mov
push
mov
mov
inc
jge
sbb
cmpsb
xlat
lock
mulb
jae
and
inc
test
dec
cwtl
fildl
rolb
daa
inc
or
mov
shll
mov
pop
stos
push
pop
jmp
inc
sbb
lret
pmuludq
mov
movsb
daa
je
out
icebp
repz
stc
aas
int3
and
and
jb
adc
mov
or
fstl
fisubrl
push
mov
lea
test
cltd
sub
pop
jecxz
jge
mov
add
mov
xchg
jge
mov
cli
sub
mov
cmp
insb
mov
mov
mov
pop
repnz
inc
xchg
xor
sbb
sub
lret
movsb
push
data16
push
jb
xor
or
aas
adcb
jp
cmp
xor
jnp
mov
lods
mov
xor
scas
and
sahf
in
ds
ret
lret
pop
mov
lods
shr
and
push
subb
out
mov
cmpl
pop
dec
leave
xor
scas
mov
push
xchg
jge
sbb
push
mov
int
fwait
ror
dec
sbb
rolb
scas
and
repnz
jb
xlat
ret
cmp
pushf
push
insl
ret
or
mov
leave
mov
xor
xchg
pop
add
sbb
scas
push
xchg
pop
push
sbb
cmpsl
sbb
mov
push
xor
les
mov
sbb
sbb
inc
pop
jno
pop
mov
hlt
fcoms
sbb
cmp
sti
push
push
fisttpll
outsl
jb
das
xchg
icebp
out
or
inc
lock
push
mov
shl
lods
dec
insl
cmp
or
icebp
lods
xchg
int3
rol
imul
clc
adc
das
mov
int
adc
sbb
and
pop
push
popa
mov
xchg
dec
jmp
insb
mov
incb
test
popf
and
xor
add
sub
inc
in
or
fcmovbe
sub
sbb
mov
int3
dec
pop
stos
jnp
adc
test
cmp
inc
add
imul
imul
cltd
add
or
adc
adc
pop
movl
pop
push
popa
xor
jae
xchg
insl
int3
push
rolb
pop
mov
dec
fstp
andb
int3
add
jmp
fnstsw
push
lret
cwtl
or
sub
mov
stc
jb
nop
movsb
add
adc
adc
popa
insl
mulb
flds
xchg
mov
mov
stc
imul
or
test
clc
push
rcll
xlat
shrl
or
rclb
mov
xchg
add
mov
mov
dec
dec
mov
scas
xchg
outsb
mov
test
and
int3
xchg
sub
push
popa
int
push
fidivrl
call
and
ds
jmp
pop
push
sub
mov
in
insl
dec
xchg
xchg
or
dec
cld
outsl
push
xor
lods
movsb
call
movsl
pusha
inc
cmp
jne
cmp
inc
pop
cmp
ja
sub
inc
scas
cmpsb
sbb
mov
testl
lods
sub
sub
out
inc
sub
scas
std
cmp
xor
xor
xor
in
fisttpl
lock
pusha
pop
fimull
fbld
sbb
les
xor
fildl
push
cmp
ret
repnz
inc
jne
popf
mov
jge
xchg
bound
mov
icebp
cli
adc
xchg
fldl
inc
mov
mov
inc
and
jmp
mov
cmpl
jl
lock
xchg
add
adc
ret
scas
inc
and
pushf
loopne
in
mov
lock
adc
pop
clc
subb
fs
push
mov
imul
cld
dec
inc
or
roll
jmp
sbbb
icebp
mov
xchg
cmpsb
mov
mov
insl
push
pushf
sarb
int
pop
cmp
push
outsl
mov
or
aaa
mov
pop
lods
inc
pop
rol
stos
and
ss
aas
outsl
pushl
pop
push
cs
scas
test
push
or
cmc
bnd
int3
loopne
and
pop
add
es
arpl
das
sub
enter
test
mov
rorl
js
push
stos
stos
out
mov
or
fwait
stos
sbb
pop
dec
push
lea
sarb
pop
fistl
or
mov
push
pushf
cli
xchg
test
add
jge,pt
dec
and
mov
xor
xchg
mov
cli
xor
addb
in
vminpd
fdivrl
testb
xor
je
xor
scas
pop
add
sbb
add
and
cld
icebp
int3
mov
repz
loopne
sub
into
lods
mov
cmp
mov
fistpl
mov
loop
test
push
repz
jl
cmp
pop
aas
push
mov
pushf
loop
inc
mov
mov
fstl
xlat
test
push
sub
lret
cmp
mov
stos
out
xchg
out
mov
push
dec
cmp
and
test
push
push
out
xchg
inc
xor
adc
inc
les
roll
fdivrs
xor
adc
imul
mov
mov
push
jo
repnz
test
and
test
adc
fnsetpm(287
pop
pop
or
subl
mov
es
popf
data16
cmp
xchg
sub
pop
and
and
fstpl
sub
dec
dec
stos
pop
xchg
outsb
jl
fdivr
sbb
fisubrs
incb
sub
fsts
add
outsl
cmp
and
push
mov
mov
gs
mov
aas
jnp
cmp
ljmp
jb
mov
jp
mul
dec
test
and
loop
popf
jecxz
mov
addl
inc
and
push
inc
aam
mov
mov
push
cwtl
xchg
hlt
sub
push
outsl
enter
add
mov
xchg
xchg
mov
lds
int
scas
pusha
inc
jo
js
je
push
adc
adcl
mov
inc
xor
jae
add
sub
out
pop
pop
cli
pop
es
mov
sbb
nop
push
ljmp
adc
iret
mov
pushf
adcb
xor
add
daa
jnp
inc
aam
rcrb
arpl
js
and
mov
mov
data16
fmull
bound
das
aaa
adc
push
fabs
loope
iret
bound
cld
xlat
jno
jne
orb
lea
pop
call
bound
rol
xor
cmp
ljmp
pushf
jecxz
lock
xchg
lcall
cmpsl
shlb
xor
dec
mov
or
cmc
add
sub
dec
fidivrs
add
inc
push
mov
jbe
sti
cli
test
ret
int3
push
sub
stc
dec
rcrb
cltd
fdivrl
les
and
cwtl
push
or
pop
shld
pop
mov
and
add
and
roll
mov
mov
mov
mov
mov
inc
lahf
inc
sub
cmp
outsl
loopne
cwtl
jo
cs
dec
inc
mov
test
and
adc
sbb
sub
jmp
xchg
or
je
adc
mov
and
or
add
inc
inc
add
jmp
ds
clc
add
cld
pop
sarb
push
sub
mov
movsb
adc
scas
mov
lods
imul
aaa
daa
jmp
into
cmp
mov
clc
add
sub
enter
roll
test
lods
cmpsl
add
push
sbb
mov
mov
int3
add
arpl
pop
imul
adc
inc
push
nop
pop
add
adc
ret
cmp
jo
movsl
push
adc
or
jmp
mov
and
mov
loop
xchg
pusha
test
mov
aad
div
adc
dec
mov
adc
jg,pt
sub
lcall
add
mov
or
aas
fcoml
movups
inc
cmp
xlat
int3
cmc
xchg
jne
cmp
fbstp
dec
loop
loop
adc
fsubr
add
pop
mov
jae
mov
inc
imull
pop
movsl
enter
insl
or
sbb
pop
call
test
pop
mov
stos
pop
mov
les
mov
inc
cmpsb
out
movsb
add
push
adc
into
mov
or
stos
stos
mov
lods
repz
lret
add
sbb
test
xchg
lds
pop
sti
bound
in
sub
test
icebp
jnp
or
add
xor
aad
dec
pop
push
lods
sub
sbb
cmpsb
lea
mov
mov
adc
aaa
shrl
movsl
movsb
mov
jns
and
xor
add
inc
ja
adc
fstpt
fs
in
popf
std
xchg
cs
lcall
jp
inc
cmpsb
ret
in
fistl
ficomps
jle
push
mov
pop
icebp
ss
inc
imul
or
std
sarb
icebp
push
push
xlat
daa
lahf
fidivrl
xchg
jns
les
pop
dec
sbb
mov
push
std
mov
ds
adc
cmovp
ja
das
inc
sub
xchg
adc
mov
daa
push
stos
push
loope
inc
pusha
pop
popa
sbb
pop
xchg
mov
push
add
adc
push
jmp
add
sti
pop
mul
mov
pusha
loopne
and
pop
xchg
mov
popf
pushl
add
lods
dec
fs
aaa
jae
jg
sbb
lahf
movsl
mov
les
and
pop
sub
or
inc
cltd
xor
out
push
pop
mov
bound
testl
mov
xchg
cmc
es
frstor
push
dec
sub
mov
das
aas
sub
or
nop
popf
iret
xchg
pop
mov
inc
leave
mov
movsl
nop
jnp
push
fistpll
inc
push
imul
dec
pushf
mov
ret
jbe
mov
inc
rorl
test
scas
pop
mov
mov
pop
dec
fs
leave
pop
sti
adc
push
mov
and
cs
je
sahf
icebp
push
jb
faddl
and
into
jmp
xor
mov
inc
push
jne
pop
cmp
dec
out
lcall
jnp
mov
sahf
rcr
or
daa
dec
push
subl
mov
or
outsb
bound
add
insl
mov
jno
call
pop
rcrl
in
aaa
mov
mov
xor
adc
xchg
jp
shrl
pop
xchg
stos
aaa
or
pop
addr16
stos
test
js
dec
fs
xlat
mov
pop
push
out
adc
fdivr
mov
mov
out
roll
ja
add
in
lahf
xor
xor
inc
pop
pushf
fwait
sar
dec
sti
cmpsl
cmpsb
pop
jmp
ljmp
mov
push
pop
pusha
jle
pusha
push
mov
inc
xchg
daa
sar
mov
dec
hlt
insb
lods
jg
fnsave
sub
adc
fxch
xchg
dec
push
mov
lods
cltd
push
addl
dec
push
mov
addr16
ja
mov
jl
sbb
push
stos
bound
mov
jbe
loope
scas
sbb
mov
xchg
jle
jno
push
enter
cmp
add
fisttps
dec
fs
loop
jg
cld
adc
jg
inc
pop
mov
std
pop
arpl
xor
data16
aas
mov
das
jbe
fcoms
push
adc
subl
jne
and
mov
or
sub
stos
cmp
ja
out
mov
rcrl
ja
jecxz
mov
push
daa
dec
pop
faddl
jmp
push
dec
cmp
xorl
sti
cmp
insl
js
stos
adc
pop
xor
sub
jmp
dec
push
imul
adc
aam
inc
rorb
adc
out
push
or
jae
push
mov
or
adc
inc
int
push
dec
fidivrs
jge
mov
pop
xchg
int
cltd
into
xchg
dec
mov
fidivs
dec
mov
out
hlt
xchg
sbb
sar
cmp
xchg
xor
mov
stos
cmp
hlt
jnp
into
sbbl
dec
adc
out
shll
sub
fisubs
test
fiadds
inc
pop
mov
add
cli
insb
fidivs
stos
iret
testb
mov
xchg
je
push
scas
popa
or
fucomip
vmread
jmp
out
subb
jo
cmp
push
jecxz
iret
and
jns
daa
sahf
push
das
cmpsl
mov
push
pop
cmp
pop
sahf
data16
mov
lretw
dec
pop
add
or
adcb
scas
inc
aaa
int3
jp
in
popf
ja
outsl
scas
dec
mov
push
xor
or
scas
popa
lea
lret
xchg
idivl
ljmp
mov
scas
jo
clc
cmpsl
out
sbb
push
inc
fstpl
jae
cmpsl
mov
inc
push
xor
xor
int
jb
arpl
push
jg
loope
fmull
or
in
dec
aam
jp
aas
dec
sub
cmp
adc
insb
xor
fists
arpl
bound
mov
insb
cld
mov
pop
dec
popf
loopne
in
push
sub
dec
xor
iret
stos
sub
int
cmpsl
into
sbb
loope
mov
repnz
out
cs
or
rolb
ja
lods
mov
dec
add
cmp
sbb
mov
aad
sub
incb
mov
xor
mov
pushf
cmp
xchg
adc
les
nop
adc
jl
mov
lods
mov
xchg
fdivr
ret
pop
rclb
les
push
outsb
push
cwtl
lret
cmp
pop
jp
outsb
in
ja
das
cltd
cld
out
xlat
mov
sub
or
nop
test
xchg
repz
or
pushf
mov
rcrb
and
dec
pop
stos
sahf
or
fmull
sbb
arpl
into
daa
sbb
outsl
mov
dec
dec
adc
pop
inc
push
pop
out
aad
jmp
arpl
movsb
insb
sahf
mov
jno
cmp
mov
repz
cmp
add
enter
test
repz
fiadds
jo
xchg
fwait
loope
add
dec
inc
mov
fadds
mov
stos
les
xchg
inc
call
inc
xor
jl
mov
mov
add
mov
pop
out
sub
mov
sub
inc
call
shlb
pop
inc
enter
mov
les
fsubs
dec
int
mov
inc
push
fwait
xor
shlb
push
outsb
icebp
push
repnz
add
sbb
mov
enter
int3
bnd
cmp
outsb
and
xchg
cmc
mov
sarl
push
out
out
dec
xchg
sbb
test
push
lds
sbb
mov
ljmp
pop
ficompl
pop
decb
repz
in
test
in
pop
divl
xor
cmpsl
lret
daa
push
lock
dec
aad
arpl
call
push
cmc
inc
imul
lret
jecxz
mov
xor
jge
movsb
enter
aaa
aaa
inc
mov
dec
arpl
outsl
es
or
daa
adc
stos
test
push
mov
xlat
fnstsw
push
insl
in
lea
insl
negb
pop
aam
inc
mov
shr
fstpt
cwtl
pop
out
lea
outsb
or
sbb
xchg
sahf
push
popf
sbb
push
call
sbb
xor
daa
mov
test
or
daa
inc
xor
pop
mov
add
or
les
xchg
jecxz
adc
fldt
mov
aad
add
fdivp
jmp
push
or
add
push
mov
popa
jne
pop
xlat
jecxz
dec
loope
dec
mov
sahf
push
jns
adc
out
mov
lods
push
fsubrl
movsl
pop
inc
pop
push
cltd
cmp
mov
or
call
fildll
insl
adc
mov
mov
cwtl
pushf
push
dec
push
pop
fdivs
jne
mov
negb
and
fstpt
out
mov
movsl
mov
jo
addb
pop
jmp
movsb
mov
push
test
in
mov
daa
xchg
sub
les
rorl
call
andb
jecxz
lcall
mov
clc
cmp
int
fdivp
int
loopne
dec
iret
jne
in
pop
and
add
ds
add
and
in
lds
push
pop
clc
loop
mov
pop
push
test
jo
jnp
in
ss
lods
mov
into
dec
outsl
jmp
test
sub
lcall
mov
imul
jnp
xchg
fadds
xchg
xor
xor
sub
push
cmpsb
lods
adc
sbb
push
lahf
out
xchg
xchg
shl
fnstcw
adc
inc
mov
bound
fstps
fdivl
xor
xor
adc
rclb
pop
jae
addr16
push
cmp
aad
sbb
mov
or
cmp
fdivrl
stos
lock
lock
mov
cmp
add
imul
jne
negb
pop
clc
jle
stos
fnstenv
fistps
rolb
xor
push
cmp
mov
int
sbb
jl
ror
push
call
inc
movsb
scas
test
dec
xchg
in
ds
cmp
std
or
mov
adc
idivl
adc
sbb
cs
lahf
mov
shll
out
sbb
test
ret
cld
add
xchg
or
sub
js
rorb
sbb
xchg
jb
stos
jle
cmp
ds
pushf
jo
lret
cltd
push
xor
insl
fisubl
cmp
dec
stos
pop
push
loopne
inc
inc
fcoml
stc
adc
in
adc
and
mov
rolb
xchg
mov
fsub
jle
mul
rorl
push
pop
and
mov
pop
mov
repnz
lret
fst
and
jge
adc
ja
mov
lods
mov
in
fnstcw
sbbl
pop
cmpsl
xchg
sub
into
dec
mov
push
dec
mull
jo
adc
int3
test
mov
inc
jp
lcall
or
popl
pop
pop
pop
mov
aam
sti
mov
adc
jno
in
xlat
jp
mov
pop
dec
dec
jns
sub
push
xor
mov
out
fnstcw
mov
or
jbe
inc
enter
sub
sbb
int3
xchg
cmp
dec
or
push
xchg
stos
movsl
jno
daa
jnp
mov
out
es
mov
push
mov
and
xor
repnz
mov
and
pop
mov
daa
pop
cltd
stos
cmp
loopne
fdivrp
cmpsb
mov
stos
in
mov
sub
lds
add
inc
insb
dec
mov
cwtl
enter
cwtl
push
lods
xchg
pop
mov
sub
mov
pop
xor
adc
dec
lock
stos
cmc
sub
pop
pop
xor
mull
cmp
add
pop
dec
inc
test
add
mov
out
xorl
test
fcoms
bound
push
hlt
mov
loop
push
lahf
adc
popf
mov
push
or
inc
divb
mov
mov
sub
dec
mov
mov
ss
in
inc
push
repz
test
adc
push
cmc
push
stos
jbe
and
cmc
aaa
inc
or
cmp
push
pop
sub
ss
lods
ffree
dec
and
pop
jg
pop
andb
inc
loope
pop
adc
push
jge
in
ja
je
hlt
mov
popl
mov
jo
bound
ret
int
push
call
cs
lss
mov
out
ljmp
push
mov
daa
test
sub
stc
stos
jbe
inc
inc
inc
andl
lret
ds
shl
stc
cltd
clc
pop
and
ret
adcl
pushf
jp
jae
ret
jae
jno
inc
dec
jp
xchg
cli
xchg
repz
dec
fwait
imulb
stos
loopne
loopne
loope
or
sahf
inc
push
outsl
push
mov
pop
loop
fistpll
call
xchg
push
daa
lea
das
enter
lock
inc
mov
lock
mov
mov
das
sub
jbe
cmp
mov
mov
out
push
jno
pop
sub
jnp
xor
unpcklps
lahf
jne
jge
data16
stc
nop
repnz
gs
fisubrl
xchg
jp
push
and
jb
push
lret
stc
pop
cmp
jmp
mov
cmp
mov
std
out
dec
pop
mov
add
in
push
jbe
mov
or
daa
adcl
and
repnz
cmp
in
stos
lds
push
sbb
push
insb
inc
pop
cmc
xor
jns
repz
sbb
pop
push
dec
sti
adc
jp
xchg
lcall
movsl
sbb
add
inc
scas
mov
push
push
xor
cld
rcll
sub
jge
ja
or
mov
mov
jg
repnz
test
jns
sbb
js
pop
shlb
arpl
lods
push
pop
or
xor
mov
mov
cmp
add
mov
xchg
fildll
adc
dec
xchg
stos
mov
cmp
ret
push
test
or
ret
stos
or
das
outsl
jnp
test
cs
loopne
pop
add
add
dec
mov
or
loope
adc
jbe
cmp
ds
xor
test
jo
dec
dec
mov
cmp
xor
incb
dec
inc
mov
enter
sub
fcompp
jl
jnp
data16
mull
sbb
and
sbb
add
jle
inc
add
or
cltd
push
push
sub
mov
cwtl
pop
xor
cmp
mov
push
lods
movsb
pop
push
inc
pusha
jge
or
sahf
add
aam
test
push
jno
jecxz
push
daa
nop
mov
xchg
inc
fnsave
jle
xchg
sarl
cld
sti
ja
lahf
mov
push
inc
fs
aam
pop
loopne
mov
scas
push
xchg
jo
mov
jne,pn
fnsave
push
xor
xchg
pusha
pop
xlat
adc
pop
or
or
xor
pop
push
mov
mov
test
xor
fisttpl
jns
add
push
and
imul
fdivrl
lea
jns
cmpsl
sbb
mov
xor
pop
rclb
mov
pop
pop
jae
pop
sahf
jns
frstor
cmp
call
nop
add
dec
outsl
popa
fs
imul
add
add
je
jb
arpl
fs
jae
add
add
jb
jne
insb
push
jb
je
arpl
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
imul
jae
pushf
inc
add
loopne
add
pushf
inc
add
add
dec
outsl
popa
fs
imul
add
add
je
jb
arpl
fs
jae
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
loope
add
inc
add
add
