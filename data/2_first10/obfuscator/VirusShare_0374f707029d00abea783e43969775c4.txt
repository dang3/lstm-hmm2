cltd
mov
flds
mov
out
sub
fwait
adc
or
into
sbb
jae
test
lods
push
sbb
mov
sub
out
icebp
mov
cmp
mov
sub
xor
sti
cmc
xor
sub
mov
fcompl
cltd
enter
lret
pushf
mov
cmp
into
jns
insl
fisubrs
sub
mov
std
shrb
fwait
jbe
scas
xchg
fisttps
icebp
sbb
xchg
imul
and
mov
and
adc
inc
cmp
mov
mov
nop
enter
xor
into
call
outsl
add
and
or
mov
cmp
inc
add
mov
push
and
mov
mov
mov
ja
outsl
add
adc
cmp
dec
jae
data16
cmpsl
cmp
in
add
in
jb
sub
mov
mov
js
mov
js
cmp
gs
into
mov
stos
mov
sub
inc
sub
jmp
inc
adc
mov
das
repnz
mov
push
out
push
repz
and
stc
jb
sti
ss
frstor
decl
or
lods
sub
ficoml
and
push
out
mov
mov
dec
pop
stos
jno
loopne
shll
and
jnp
mov
push
jo
out
jg
lds
iret
or
repnz
adc
cmpsb
add
dec
pop
lcall
pop
out
test
cli
push
push
das
or
adc
xor
fwait
xor
pop
dec
imul
popf
fistpl
push
xchg
pop
hlt
dec
xchg
push
in
xchg
popa
pop
mov
xorl
xchg
out
sbb
push
xchg
rorl
js
arpl
mov
add
push
jmp
lret
adc
push
cld
xchg
rcrb
dec
mov
push
call
lahf
pmaddwd
jbe
cmpsl
jg
or
hlt
iret
rol
push
xor
push
int
lods
sbb
cltd
fidivl
pop
cmpsl
xchg
insb
pop
xchg
repnz
mov
into
jg
jbe
fistpl
push
ja
in
rorl
sbb
lock
adc
adc
jg
imul
fstps
inc
fistpl
hlt
cld
sbb
pop
aas
inc
jne
dec
fcoml
out
sub
jnp
jg
insl
xchg
sub
sbb
dec
data16
push
sub
dec
dec
pop
jmp
imul
pop
test
push
into
bswap
mov
mov
and
test
pop
movsb
aas
loope
add
add
jge
test
shrb
and
loop
and
dec
jg
loope
nop
push
testb
sar
add
aad
mov
out
sti
adc
mov
mov
add
int3
test
jae
clc
cmp
sahf
xchg
dec
enter
mov
js
ret
add
cmpsl
andb
je
jne
movsb
jbe,pt
push
lds
fdivs
ds
pop
or
lock
adc
xchg
sub
lods
ds
and
js
jge
xor
rorl
ljmp
ljmp
mov
jne
push
inc
movl
arpl
sbb
mov
lds
xchg
mov
and
mov
add
push
pop
adc
inc
push
xlat
fucomip
lock
incb
cmp
sub
leave
in
das
push
xor
movsb
out
mov
fldt
hlt
aam
ss
enter
sub
outsb
jmp
data16
jg
push
or
gs
push
cmp
and
jne
cmp
xchg
mov
inc
pop
xchg
loopne
adcl
xchg
mov
sbb
in
fcomi
pop
mov
or
popa
lahf
fstpl
push
push
aas
cli
or
inc
cmc
or
data16
int
in
xchg
dec
xchg
mov
and
adcl
adc
push
xor
mov
jg
enter
out
vminsd
cli
xlat
xlat
mov
and
jae
jbe
inc
cmp
sti
lret
or
jg
jo
out
xchg
xor
push
int3
gs
mov
pop
mov
xor
and
dec
lret
jmp
in
daa
repnz
rorb
pop
lods
jmp
std
fiadds
cmp
imul
shll
and
fldt
push
aas
ret
aas
aas
mov
mov
movsl
in
xchg
and
xchg
lock
int3
xchg
mov
fsts
push
xchg
outsl
stos
jecxz
orl
and
daa
add
ror
xchg
pop
jae
fwait
add
or
lds
dec
ficoml
adc
movsl
jmp
cmp
mov
int
sub
outsl
iret
mov
iret
mov
mov
ja
cwtl
add
ljmp
push
hlt
and
leave
mov
mov
je
xchg
adc
and
and
ficomps
ret
call
cmp
stos
iret
gs
out
inc
mov
loope
sbb
arpl
daa
stc
pop
popf
mov
imul
push
pop
dec
xchg
dec
inc
adc
imul
pop
mov
repnz
adc
lahf
aam
xor
mov
adc
sub
and
movsl
push
daa
mov
ss
dec
cmp
pop
or
leave
test
cmp
repnz
lea
pop
xor
add
gs
jmp
daa
arpl
aam
mov
lods
mov
cs
inc
xorl
mov
fadds
pop
push
jns
and
rcr
cmc
and
fxam
imul
dec
int
dec
xchg
cmpsl
fwait
outsl
pop
inc
add
outsl
push
out
stos
lret
xorl
jge
pop
mov
push
aas
adc
jecxz
jge
cld
push
cmp
xchg
outsl
add
inc
pop
in
ffreep
stos
cmp
test
fxch
mov
pop
shrb
xchg
call
and
pusha
sub
aam
movsl
mov
cmpsl
aam
sbb
faddp
sbb
push
or
push
xchg
jns
shl
push
add
jne
sbb
inc
adc
cmp
testl
or
lds
pop
clc
jo
rcll
cwtl
pop
push
adc
andl
dec
sarb
push
call
addr16
cs
popa
xlat
int
xchg
pop
jecxz
xchg
jl
popl
lret
add
das
test
out
ret
mov
lcall
cld
inc
jg
pop
cmp
add
push
lock
hlt
mov
lahf
adc
mov
mov
dec
sub
lcall
jl
std
stos
xchg
rorl
hlt
pop
push
jb
push
pusha
fwait
mov
imul
mov
call
cs
mov
rcrb
or
orl
or
jnp
test
mov
push
dec
push
and
lret
push
lcall
cltd
out
fsubrl
cmovbe
aad
fimull
cmpsb
fprem
filds
imull
stc
aaa
jne
lcall
inc
push
mov
dec
fistpll
dec
dec
stos
es
inc
push
jmp
es
mov
in
mov
movsl
pop
js
or
scas
repnz
pusha
push
sub
inc
cmpl
in
lds
sub
call
into
mov
loope
dec
add
les
nop
pop
dec
xor
and
testb
addb
scas
pusha
and
in
mov
lret
cmp
jmp
mov
cmp
scas
jb
lcall
inc
mov
push
lret
ljmp
adc
ret
mov
sbb
push
xchg
mov
cld
lock
outsl
push
jae
mov
sub
mov
pushw
call
cld
cmpb
std
xchg
pop
adc
pop
push
dec
daa
cld
adc
sbb
loop
dec
mov
mov
insb
les
arpl
rcll
sarl
decl
repnz
je
ja
jb
sbb
cld
das
inc
adc
jge
repz
xor
cmp
in
imul
fs
movsb
xor
jge
testl
inc
push
mov
dec
lcall
xor
rcll
aam
push
mov
mov
xor
fs
jge
repnz
mov
cmp
jae
jae
nop
adc
push
mov
adc
jmp
and
es
xor
fcoms
push
fs
inc
dec
bound
mov
xchg
clc
ret
je
mov
ret
outsl
std
sub
pusha
cmp
lock
push
lahf
rorb
jle
adc
jp
aas
jge
dec
push
or
nop
cmc
sub
pop
jns
adc
dec
dec
jbe
pop
inc
or
pop
pop
call
pop
add
adcb
cli
fisttpl
or
push
and
mov
stc
or
inc
lret
ret
mov
imul
lds
inc
dec
mov
pop
xor
dec
jle
int
cmp
insl
cmpsb
rolb
sahf
rclb
jle
in
arpl
inc
test
popa
lcall
out
adcl
stc
mov
jnp
cmpsb
scas
aas
iret
mov
popa
jno
fs
loope
loop
mov
fstps
inc
sub
movsl
jne
sarl
and
pop
or
fcoms
add
add
sbb
cmp
add
mov
cmp
fwait
jg
sub
xchg
inc
add
repnz
enter
fidivrl
dec
ds
int3
mov
cmp
ret
push
fcoml
mov
adc
pop
adc
mov
push
mov
mov
test
sub
ret
xlat
lcall
fiaddl
or
mov
repz
arpl
fcomps
xor
jmp
dec
sbb
mov
adc
mov
divb
je
iret
mov
stos
test
cmpsb
enter
push
aam
loop
insl
cmp
pop
stc
sub
xchg
mov
sub
flds
leave
sbb
scas
test
rorl
fs
mov
xchg
arpl
test
sub
fsub
pop
and
jne,pn
xor
mov
mov
aad
jno
sbb
stos
jb
shlb
arpl
add
movsb
iret
imul
xchg
xchg
in
mov
scas
fcomip
lock
inc
mov
cli
sbb
cli
cmp
pop
out
add
lds
loop
leave
ja
mov
jp
add
cmp
push
xorb
pop
push
jb
addr16
add
add
inc
imul
jae
data16
push
imul
popa
insb
and
jne
imul
ss
dec
inc
sbb
inc
jns
mov
push
lret
addr16
or
dec
enter
dec
mov
dec
popa
rclb
outsl
mov
fcmovu
or
mov
sub
clc
mov
mov
pop
xchg
and
movsb
repz
jecxz
add
lods
push
push
pop
add
mov
add
add
dec
dec
movsl
dec
aam
and
dec
pop
push
dec
dec
inc
sub
arpl
dec
push
push
pop
jae
jae
xor
push
dec
popa
ror
add
inc
add
repnz
mov
out
or
int3
add
inc
inc
push
inc
push
dec
push
loopne
dec
mov
addr16
insb
outsl
lcall
add
aam
rcll
mov
cltd
or
je
jmp
push
mov
cwtl
add
push
adc
inc
pushf
popa
je
pop
cmp
sbb
jo
pop
sbb
sub
adc
lret
scas
or
pusha
mov
push
int
rorl
jmp
ret
idivb
sub
cmpb
call
push
repz
add
inc
mov
call
pop
mov
dec
jo
outsb
ud2
mov
pop
inc
dec
or
insb
sbb
adc
jns
inc
cmpsb
inc
js
jge
cld
inc
inc
dec
push
icebp
stc
lret
les
push
in
movsl
sbb
pop
pusha
cwtl
cmp
mov
adc
push
dec
jle
mov
gs
sbb
or
ret
in
outsb
pop
aaa
out
pop
push
sbb
pop
jo
je
sbb
fwait
and
inc
cld
loope
jo,pt
inc
inc
sub
and
xor
imul
dec
scas
mov
sbb
mov
xchg
inc
leave
lret
mov
out
sub
jg
rcll
cmpsb
and
dec
in
es
bound
sbb
xchg
pushf
xor
lret
xor
dec
outsb
in
push
icebp
xchg
int3
ja
icebp
icebp
push
in
adc
js
in
imul
inc
pop
pop
mov
lods
mov
xor
or
call
mov
ror
insb
mov
mov
dec
test
shll
int3
xchg
das
mov
ret
and
insb
or
ficoml
sub
fwait
lret
jno
pushl
les
cltd
in
das
xor
mov
adc
cmp
sub
add
add
and
jg
icebp
dec
loope
pop
mov
and
mul
mov
xor
pop
popa
pop
cmp
xor
out
xor
pop
imul
sbb
nop
and
fildl
pop
sahf
and
gs
xchg
imul
pop
imul
jb
mov
jp
xchg
sahf
xchg
out
in
sti
dec
sbb
bound
mov
lods
jns
fsubrl
sbb
jg
frstor
xchg
fptan
cld
push
insl
imul
xchg
cmc
and
es
aaa
push
mov
in
out
insb
adc
mov
es
or
jne
insb
pop
sbb
popf
lret
jbe
lret
insb
mov
iret
dec
gs
sub
jo
cmp
jae
jle
popf
fwait
gs
cltd
xchg
daa
iret
push
inc
xor
mov
push
in
pop
mov
sahf
hlt
outsl
popa
mov
ss
ds
pop
jae
jne
cmp
fnsave
scas
out
mov
jne
idivb
lcall
inc
cmp
inc
iret
push
pop
out
fs
pushf
es
daa
inc
pop
js
lds
inc
mov
cwtl
push
jb
jmp
jno
bound
jb
pop
jo
subb
push
int3
mov
outsw
int3
adcb
xchg
fnstsw
call
dec
jb
mov
imul
inc
inc
out
pop
jae
pop
fistpl
pop
mov
mov
jnp
xor
push
sub
push
cmp
push
lret
fwait
cltd
push
iret
cs
loop
xchg
fdivr
gs
mov
jae
push
inc
ja
aas
lea
sub
in
gs
outsb
inc
pop
jmp
sub
push
fwait
push
je
ss
imul
push
mov
mov
outsb
sbb
imul
insl
stos
push
scas
inc
pop
xor
jle
inc
popa
and
in
cltd
insb
jbe
pop
gs
jp
lret
scas
leave
stos
add
inc
push
gs
insl
jmp
je
fstpt
mov
sub
in
enter
fs
pop
jmp
mov
pop
push
outsl
dec
push
dec
pop
pop
ljmp
inc
insl
xchg
push
inc
push
and
imul
loop
in
push
jl
gs
inc
aas
int
cltd
imul
test
inc
jne
fistl
xor
dec
fistl
aad
pop
movsb
testl
jecxz
gs
stos
repz
iret
xor
jae
fxch
mov
xlat
xor
aad
inc
push
shrl
out
mov
mov
fildll
into
jecxz
cmp
imull
mov
fildl
push
jae
xor
mov
ss
xchg
enter
cmp
and
adc
dec
cltd
add
ficoml
addr16
repz
xchg
mov
push
iret
sub
or
sbb
cli
xor
out
out
jne
jge
iret
je
mov
movsl
xchg
leave
inc
lcall
sbb
outsl
pop
je
mov
and
nop
imul
ja
add
fcomi
pop
inc
js
aad
mov
pop
inc
sub
xchg
stc
in
ja
xchg
jmp
gs
outsl
mov
sahf
pop
xchg
pop
and
add
sarb
aad
nop
js
dec
mov
xchg
pop
nop
insl
jo
push
call
dec
xchg
xor
inc
mov
and
xor
mov
dec
mov
push
pushf
loop
jnp
mov
adc
call
imul
mov
pop
xor
add
cmpsb
add
movsb
inc
add
xchg
lds
jmp
or
cmp
daa
add
mov
sub
enter
add
push
iret
add
cmp
push
adc
je
dec
scas
adc
shrl
lahf
add
sub
pop
out
jne
dec
scas
cmp
cmp
or
push
push
xor
xor
cltd
mov
pop
push
jne
in
pop
add
or
mov
daa
dec
mov
adc
xor
inc
sti
popa
xchg
inc
mov
xor
jb
add
lock
fnsave
sbbl
icebp
sub
sbb
stc
imul
fs
push
mov
inc
inc
ss
dec
dec
pop
pop
jbe
popa
push
popa
jb
cli
mov
inc
sbb
jmp
dec
gs
aas
fbstp
insb
dec
fs
data16
jne
dec
outsb
imul
xor
inc
jne
pusha
or
jo
dec
jb
jae
in
sbb
jne
je
push
bound
or
movd
jo
dec
outsl
jbe
rcrb
arpl
unpckhps
gs
jae
xchg
dec
sub
movsb
mov
hlt
dec
fs
fldt
clc
outsb
jne
je
xchg
push
jmp
jb
outsl
jmp
mov
popa
and
insb
push
dec
hlt
ds
imul
jne
insl
inc
jb
inc
inc
mov
sahf
int
inc
outsb
clc
add
ss
outsl
jne
fs
hlt
mov
rcl
gs
push
ffreep
gs
or
insb
outsl
ja
int3
xor
mov
rorl
pop
mov
xor
in
stc
cmp
cmp
mov
jb
fnstcw
and
pop
test
xchg
decb
sub
mov
pop
push
shlb
jns
dec
outsb
or
imulb
and
add
inc
mov
lret
cmp
aad
push
and
aam
inc
cmc
inc
jg
mov
jbe
push
fstpt
mov
lcall
cmpsb
sub
movsb
cmp
jmp
dec
loop
out
push
pop
mov
sahf
and
jg
push
dec
push
sbb
dec
shlb
or
pop
inc
jmp
push
sub
aam
pop
xchg
add
lock
lldt
out
call
icebp
ljmp
add
sub
loope
fbld
push
das
push
and
push
inc
xor
jg
adc
cwtl
pusha
pop
js
jmp
outsb
mov
jmp
add
lret
add
xchg
mov
call
sub
repz
jmp
mov
mov
jbe
sbb
add
and
filds
adc
sti
xchg
or
imul
cmp
into
add
push
mov
and
mov
scas
shlb
arpl
xor
loopne
lahf
xlat
add
bnd
xor
push
mov
mov
sbb
cmc
push
nop
add
xchg
sbb
xchg
addr16
pushf
xor
ud1
ja
xchg
addb
xor
xlat
sbb
add
iret
add
xor
push
jo
pop
pop
or
rol
sbb
xor
fildl
add
insl
mov
call
leave
popl
pop
add
and
pop
push
js
pop
sbb
lock
sub
imul
sbb
add
icebp
cmp
in
call
test
inc
pop
testl
loopne
jmp
repnz
in
loopne
or
inc
loop
rclb
stos
add
inc
add
es
addb
btc
mov
or
es
lcall
insb
sbb
add
xor
icebp
sbb
fisubs
in
subl
fxch
stos
sbb
xchg
xchg
cmpb
pop
nop
fisubrs
movsb
pop
dec
repz
xorl
je
loope
ds
in
pop
inc
push
xor
xor
adc
std
sub
or
adc
das
and
daa
cmp
clc
xchg
dec
fistps
scas
sub
mov
jg
pop
dec
jmp
cmp
dec
ss
cld
mov
sub
cmp
pop
mov
test
lock
fdivrl
pusha
inc
mov
loope
aam
inc
mov
xchg
ret
fsubs
shl
in
dec
sbb
nop
sahf
jno
inc
cmp
jmp
push
mov
repnz
xchg
aam
adc
mov
add
lock
int3
push
mov
sub
push
mov
jp
inc
mov
mov
stos
push
push
push
mov
movl
mov
pop
add
and
mov
mov
decb
hlt
mov
push
movsb
push
or
add
int3
cmp
jnp
add
cwtl
add
adc
add
loopne
jne
push
call
test
inc
aam
jmp
ficoml
jo
xchg
mov
test
aam
clc
cs
sbb
mov
mov
mov
add
push
lea
mov
add
adc
and
rcl
mov
mov
xor
add
mov
inc
xor
mov
jl
adc
mov
lret
add
xor
hlt
ret
mov
fld1
pop
xchg
push
pop
lock
data16
pop
push
jmp
sbb
xchg
cmp
xchg
push
pop
imulb
faddl
enter
xadd
push
rclb
popa
sub
xor
mov
insl
xorl
adc
ret
push
cmpb
jns
data16
ja
cmp
push
pop
and
mov
add
movswl
test
je
add
out
adc
and
imul
xor
add
jo
sub
pop
jb
jge
nop
adc
cmpl
jl
or
xor
insb
cmp
add
rcr
pop
push
stos
cmp
test
pop
addr16
push
push
insb
std
cld
inc
fisubrs
xlat
aad
jbe
add
in
sbb
or
clc
cmpsb
xor
xchg
add
popa
ret
inc
rclb
lds
adc
ret
xchg
and
pop
imul
faddp
mov
adc
imul
mov
xlat
cmpsb
outsb
imul
push
sbb
enter
addr16
fistps
lds
lahf
popf
aam
mov
jb
or
cmpl
arpl
mov
or
loop
or
pop
sbb
call
cltd
fiadds
or
jecxz
iret
or
push
inc
mov
push
sbb
pop
mov
into
iret
push
sbb
mov
cwtl
mov
cmp
add
gs
xor
inc
ljmp
mov
jle
add
orb
sbb
push
jnp
loopne
pop
pop
pop
mov
in
inc
and
adc
mov
xchg
and
lock
mov
icebp
insl
lcall
or
or
push
sub
imul
flds
and
xchg
mov
mov
push
dec
out
mov
daa
mov
add
je
jbe
push
lea
hlt
nop
jbe
jbe
adc
sbb
cmp
sbb
and
sbb
xor
sub
lahf
sbb
xchg
sbb
mov
sbb
sbb
movl
dec
add
addr16
movsb
push
mov
push
in
pop
adc
shl
mov
push
fs
push
fldcw
sbb
clc
call
cmp
jl
fmull
test
in
roll
mov
pop
addr16
jne
fsts
popf
lock
sub
popf
jne
lods
pop
dec
movsb
mov
addr16
test
lods
fdivrs
cmp
fnstenv
pop
inc
xor
push
mov
js
pushf
pop
addr16
ror
cmp
fxch
sbb
fstps
cmp
aam
fdivs
cmpsl
sbb
icebp
pop
repnz
jmp
jbe
loopne
into
cmp
call
jno
in
push
push
add
mov
filds
lods
push
test
fmulp
dec
push
sub
repz
lods
adc
jb
pop
mov
shll
shrb
mov
out
sbb
cmpsb
fdivp
add
in
cli
xchg
add
shrl
mov
sbb
sbbb
or
dec
push
jno
inc
mov
cltd
xchg
inc
bound
or
stos
movsb
pop
mov
mov
jg
cmp
or
repnz
fcmovnb
scas
cli
cltd
xor
stos
sbb
pop
jb
ret
movsb
xor
push
jg
jnp
jo
sarb
push
das
dec
xor
mov
jecxz
fstp
cmp
pop
cwtl
cmp
jp
xchg
or
push
xchg
int
adc
mov
jl
adc
push
scas
jne
in
leave
pop
sub
or
out
adc
sbb
test
mov
cmp
pop
aad
and
sbb
frstor
roll
jae
lods
clc
nop
jnp
movsl
adc
and
insl
push
jle
arpl
jge,pt
pop
pop
jne
cmc
lret
jmp
sbbl
push
push
std
rcll
in
pusha
cmp
pop
sub
loop
adc
aas
addr16
shll
adc
repz
sbb
jp
into
or
xchg
fs
xor
js
xchg
xor
sti
ror
adc
add
mov
mov
push
dec
dec
ja
cmpsb
stos
jno
xor
negb
jle
flds
xchg
inc
fnstsw
jno
push
adc
pop
sahf
jl
or
mov
pop
or
repz
imul
or
pop
sub
mov
int3
in
mov
sbb
xchg
std
mov
mov
xlat
sbb
les
sarl
outsb
or
jge
mov
ljmp
into
pop
mov
lods
or
jecxz
inc
sub
pop
imul
dec
jno
ljmp
shll
sbb
pop
mov
cmc
scas
and
mov
pusha
xchg
xchg
imul
adc
or
inc
dec
out
in
lods
cmp
or
mov
cmp
sbb
mov
adc
inc
push
icebp
popf
into
cmpsb
pop
out
shrl
mov
pushf
sub
mov
enter
xchg
jns
jmp
inc
fwait
jne
lret
mov
jbe
cmpsl
scas
inc
sub
mov
mov
jnp
lods
push
ds
nop
hlt
sub
orb
cmp
in
xchg
ljmp
pop
pop
int3
mov
lock
imul
cld
xor
not
xchg
or
fstpl
mov
add
adc
sub
std
cmpsl
enter
dec
lret
pop
stos
sarl
add
and
ret
xlat
push
lea
jl
xchg
sub
adc
sbb
push
add
mov
fcoml
sub
and
insb
faddl
cmc
ror
sbb
das
mov
pop
xor
mov
xchg
pmaddwd
inc
ret
lods
and
mov
arpl
xor
out
fdivrl
loop
lods
pop
sub
std
push
cwtl
mov
loope
inc
es
xchg
bound
mov
fidivl
sub
into
adc
addl
fdiv
push
fnstenv
cmp
shlb
xchg
in
iret
jbe
adc
add
std
cmc
inc
fmul
sbb
je
outsb
insl
mov
inc
xor
in
or
adc
int3
mov
add
shl
add
lods
jno
lret
pop
and
lock
xchg
xor
cmp
push
lea
das
cmpsb
cmpsl
xor
dec
jno
movsb
loop
add
jno
or
ret
xchg
sub
jno
jmp
orb
mov
aas
cmp
jmp
adc
scas
in
push
mov
arpl
aad
test
xchg
or
sub
inc
mov
jne
es
repnz
dec
pusha
cld
iret
and
shll
push
call
mov
pop
jnp
fsubr
test
mov
xor
mov
jg
and
ret
mov
pushf
adc
push
or
mov
xchg
jp
mov
test
mov
in
or
add
dec
add
call
xor
pop
hlt
sub
inc
xor
iret
mov
inc
stos
xchg
sub
sbb
mov
fimuls
dec
push
adc
call
fcoml
fwait
mov
adc
arpl
cli
xchg
out
jne
dec
jl
and
sbb
mov
jl
push
jl
xchg
jae
loope
mov
aas
push
mov
shl
cmp
fxam
rol
xlat
movsb
mov
dec
xchg
add
nop
jp
push
roll
mov
cld
mov
in
adc
or
mov
call
mull
or
and
mov
push
out
mov
xchg
add
rcrl
scas
xchg
mov
insl
xlat
mov
int
int3
mov
cmp
push
ss
gs
aad
test
inc
int
mov
dec
rorl
leave
push
push
lds
sub
imul
pop
hlt
sub
sbb
lods
adc
adc
xchg
sbb
shlb
rclb
lock
das
aad
ret
int
andl
lods
jecxz
ret
cmp
cs
pop
int
jge
fcoml
add
cmpsb
inc
imul
loope
fwait
jle
push
cmpsb
mov
leave
and
adc
jl
outsl
and
xor
movsb
push
lds
and
mov
pop
in
sarb
jo
les
xor
push
inc
mov
inc
icebp
inc
fwait
pop
iret
and
jg
test
ret
stc
ret
pop
jmp
scas
ret
jmp
lret
inc
xor
add
fldl
out
or
shrb
jae
das
adc
cmc
iret
test
inc
aam
mov
dec
pop
add
pop
pop
add
jbe
add
nop
pop
add
test
add
mov
add
ret
pop
add
add
add
in
pop
add
cli
pop
add
sbb
add
pop
add
cmp
add
add
pop
pop
add
add
add
sbbl
add
pop
add
int3
pop
add
jmp
add
add
add
add
add
pusha
add
xor
add
add
push
pusha
add
pushaw
add
jge
add
mov
add
add
add
add
les
add
pusha
add
fsubs
add
pusha
add
in
pusha
add
mulb
add
add
add
add
add
add
add
pop
add
lea
leave
pop
add
ja
add
lods
pop
add
jmp
add
add
add
add
pop
add
int
add
add
add
add
add
add
pop
add
sub
add
popa
add
or
add
add
add
pop
pop
add
jbe
add
nop
pop
add
test
add
mov
add
ret
pop
add
add
add
in
pop
add
cli
pop
add
sbb
add
pop
add
cmp
add
add
pop
pop
add
add
add
sbbl
add
pop
add
int3
pop
add
jmp
add
add
add
add
add
pusha
add
xor
add
add
push
pusha
add
pushaw
add
jge
add
mov
add
add
add
add
les
add
pusha
add
fsubs
add
pusha
add
in
pusha
add
mulb
add
add
add
add
inc
outsl
outsb
je
outsb
jne
add
add
push
gs
push
inc
js
arpl
imul
add
add
insb
inc
gs
gs
push
arpl
imul
je
add
pop
ja
outsb
imul
ja
jb
arpl
outsb
add
add
insb
dec
outsb
addr16
push
imul
push
outsb
ja
outsb
add
add
insb
push
outsb
imul
jb
outsb
addr16
outsl
inc
outsb
jae
push
je
imul
insb
insb
cs
insb
add
add
inc
outsl
jo
push
jb
js
add
add
addr16
jb
popa
je
inc
outsl
arpl
insb
gs
outsb
dec
dec
outsl
arpl
jns
gs
add
push
jb
addr16
inc
inc
jb
insl
inc
dec
push
dec
inc
add
add
dec
outsl
popa
fs
imul
add
inc
jb
popa
je
inc
insb
popa
jae
dec
outsl
outsb
imul
push
gs
fs
insb
gs
je
add
add
inc
dec
inc
inc
dec
push
dec
pop
push
jae
jb
outsb
insl
popa
jb
push
insb
xor
cs
insb
add
add
je
outsl
outsb
je
outsb
imul
outsb
addr16
add
inc
gs
gs
inc
js
outsb
je
js
outsl
imul
inc
outsl
jo
inc
outsb
push
inc
imul
popa
je
insb
je
add
inc
gs
outsb
push
inc
imul
je
inc
outsb
je
imul
js
inc
jae
popa
jo
add
imul
insb
add
add
je
gs
popa
addr16
popa
imul
imul
add
push
jb
outsb
jae
arpl
insl
gs
imul
gs
jb
imul
je
outsl
outsb
inc
add
add
outsb
fs
gs
jne
arpl
add
add
popa
insb
push
gs
insb
insb
outsl
arpl
add
push
gs
outsl
insb
jne
gs
outsl
jne
je
outsl
imul
push
outsb
insb
outsl
arpl
imul
inc
gs
jb
arpl
jae
outsl
jb
imul
imul
outsb
gs
xor
cs
insb
add
add
insb
gs
add
arpl
insb
add
add
bound
jo
jo
add
pop
inc
dec
insb
outsl
add
add
bound
ja
add
add
jb
outsb
je
add
add
arpl
popa
je
add
pop
ja
jo
ja
jbe
add
push
inc
push
push
cs
insb
mov
push
jnp
loope
mov
cwtl
mov
xor
sbb
add
sbb
jno
rol
mov
nop
mov
sub
mov
movsb
call
or
jns
ret
addr16
pop
xchg
fistpll
pop
mov
dec
push
add
sbb
data16
sub
xchg
mov
jb
xchg
mov
pop
lds
in
mov
and
pop
sbb
mov
hlt
inc
pop
lds
fs
out
mov
shll
adc
jno
adc
nop
inc
push
mov
mov
push
mov
movb
push
out
cmpb
imul
add
sahf
pop
xchg
ljmp
sbb
sbb
in
cmp
ret
loope
cmp
pusha
cmpsb
outsb
cmpsb
jle
mov
mov
ret
loope
cmp
add
adc
nop
xor
xchg
bound
push
xorb
repz
cwtl
cmpsb
mov
cmp
loop
adc
cmp
test
test
test
test
sbb
xchg
jb
xchg
sahf
ret
repnz
cld
cwtl
cmp
jecxz
test
xchg
ret
jb
inc
pop
jl
out
insb
pop
sbb
mov
jp
jns
out
lcall
out
repnz
or
xorb
cmp
mov
push
js
imul
and
repz
fdivp
cli
or
dec
inc
push
hlt
incl
test
insl
loope
dec
xor
arpl
xchg
sub
jae
fs
data16
popa
outsb
mov
lahf
pop
inc
scas
in
sub
out
aad
sti
add
mov
pop
insl
ss
mov
ljmp
jp
pop
movl
xchg
add
out
pop
dec
mov
lcall
or
imul
imul
mov
inc
push
inc
dec
push
pop
push
dec
movsb
cmp
add
add
inc
mov
outsl
push
outsb
jecxz
dec
out
pop
inc
outsl
icebp
mov
inc
inc
or
mov
out
iret
lret
arpl
mov
add
jae
cld
mov
jno
je
popa
sub
push
mov
mov
popa
arpl
pop
mov
inc
js
fnstcw
jp
sub
ds
les
aam
lret
out
inc
cwtl
sub
gs
popa
pushf
jle
outsl
adc
jp
bound
jmp
ds
pop
lods
into
xor
aam
xor
add
mov
pop
loope
scas
movsl
stos
daa
jno
adc
push
xchg
pusha
scas
pop
leave
adc
add
mov
call
xchg
jge
loop
xor
out
divl
testb
insl
jo
and
mov
clc
add
inc
add
add
add
add
add
add
sub
add
push
add
add
add
add
add
inc
add
add
add
add
xor
add
add
clc
add
inc
add
add
add
add
add
add
pop
add
add
lock
test
add
mov
add
clc
add
inc
add
add
add
add
add
add
addb
addb
add
clc
add
inc
add
add
add
add
add
add
cwtl
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
rolb
addb
add
clc
add
inc
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
mov
add
mov
mov
rolb
addb
add
add
add
incl
incl
add
incl
incl
incl
add
incl
mov
mov
mov
ja
ja
ja
ja
ja
ja
ja
xchg
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
mov
mov
ja
ja
ja
ja
ja
ja
ja
xchg
inc
inc
inc
inc
inc
inc
inc
add
add
addb
inc
inc
inc
inc
inc
jo
pop
jo
xchg
inc
inc
inc
inc
inc
inc
inc
jo
pop
jo
xchg
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
addb
ja
ja
ja
ja
ja
mov
mov
mov
add
incl
add
add
incl
add
add
add
inc
add
add
add
test
add
xor
add
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
xor
add
add
xor
xor
xor
cmp
xor
xor
inc
add
add
add
add
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
push
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
pop
add
add
add
add
add
add
add
add
or
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
or
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
imul
add
add
cmp
adc
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
jo
imul
add
jo
add
add
add
add
add
sti
add
cld
sti
add
adc
add
and
add
add
add
mov
add
add
fdivr
add
mov
add
add
jb
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
test
clc
dec
xlat
add
xor
gs
dec
add
sub
lods
dec
popa
push
or
scas
int
add
or
add
add
push
push
mov
jl
add
rcrb
cld
push
add
test
je
cmp
addb
mov
sub
fnstsw
and
lea
mov
jae
cmp
jae
mov
add
in
mov
lea
fbld
jg
sub
jno
cmp
out
adc
sub
cs
pop
push
leave
or
sub
shl
sub
rep
pop
mov
sub
ds
sarl
jl
rolb
rcrl
sbb
fcos
addl
or
pushl
adcb
ds
pop
pop
ret
adc
inc
add
adc
inc
jbe
add
inc
je
shrb
out
nop
jl
pop
add
xchg
and
sub
das
mov
or
fwait
nopl
xor
test
sub
adc
test
and
adc
cltd
cwtl
mov
push
push
push
push
call
or
sub
mov
or
add
loope
xchg
push
or
sbb
ret
dec
sbb
or
and
sub
sbb
jnp
add
inc
test
push
mov
sbb
inc
cli
sbb
mov
outsl
add
test
push
push
call
mov
xchg
out
dec
sub
mov
push
inc
push
call
mov
out
scas
mov
cmpsb
mov
pop
or
sbb
add
filds
xor
imulb
dec
leave
scas
mov
push
inc
cmp
aaa
je
mov
sahf
or
sbb
cmp
sub
push
push
and
or
mov
push
push
pop
sbb
xchg
xlat
es
add
add
inc
push
aas
pop
push
push
push
mov
rcrl
pop
bts
add
sub
sbb
inc
or
add
mov
inc
icebp
add
movb
add
in
mov
dec
repz
jle
fimull
test
cmpb
adc
dec
pusha
or
pop
pop
pop
pop
ret
in
add
inc
add
dec
mov
out
lods
les
add
push
call
add
jb
push
add
sar
xor
add
or
pop
test
dec
or
pop
add
jmp
mov
ret
or
mov
dec
ror
nop
sub
lret
push
sahf
dec
rorl
xchg
pop
push
mov
jmp
cltd
pop
dec
sbb
cld
clc
es
adc
add
mov
je
movsl
dec
push
mov
or
pop
mov
mov
ja
andb
lea
andb
cltd
push
cmpb
cmp
sbb
jne
cmp
jge
mov
inc
mov
je
dec
jne
mov
jmp
shll
add
xor
rorb
rclb
les
push
dec
loopne
inc
addl
pop
push
scas
jecxz
jmp
sub
incw
push
push
call
push
adc
jge,pt
out
out
inc
lods
aad
test
test
dec
add
sbb
inc
xor
dec
in
adc
mov
mov
stc
add
movsl
sbb
xchg
jnp
push
cli
pop
adc
inc
inc
rcrl
stos
lret
add
pusha
cmp
cmp
inc
mov
jne
movsb
call
inc
jg
lcall
xor
mov
adc
std
cmpsb
push
js
push
push
push
jl
mov
bound
fcoms
fidivrl
fsubs
adc
enter
and
inc
addb
mov
push
hlt
push
sbb
fisttps
aam
sub
jecxz
mov
push
in
ror
inc
je
test
gs
adc
adc
popl
jmp
pop
push
sbb
dec
nop
cli
cmp
push
stc
jmp
cmc
dec
orl
movl
or
sub
pop
testl
cmp
pop
inc
xchg
lahf
adc
fidivrl
fwait
repz
mov
cmpsl
adc
movsb
cmp
inc
xchg
dec
mov
sub
test
and
push
push
push
call
mov
pop
pop
mov
call
fldt
les
sbbl
cmp
add
not
fdivs
or
lods
ds
add
jmp
xlat
cmpsl
pop
lock
adc
rolb
testb
cmp
mov
inc
push
dec
test
loop
xchg
jmp
insb
cli
inc
jecxz
and
insl
push
inc
popa
cltd
enter
pop
outsl
adc
leave
add
in
jmp
inc
mov
sub
or
lock
call
or
fdiv
call
ss
push
mov
repz
adc
push
cmp
inc
into
xor
mov
mov
push
dec
gs
dec
shlb
push
pop
sub
fistpl
or
insb
aas
jbe
add
inc
outsb
je
jns
push
outsl
imul
iret
or
fs
push
icebp
jo
arpl
sti
fsubr
adc
jae
data16
cs
outsb
inc
bound
sti
std
ja
xor
push
push
inc
dec
inc
cs
sub
and
pop
popa
outsb
jns
jnp
test
sarl
cmp
jae
jb
xor
push
jnp
popa
addr16
outsl
js
ja
int
je
cmpsl
data16
cmp
add
imul
jne
dec
mov
push
fnstenv
dec
stos
or
add
or
or
sarb
hlt
int3
ja
jo
add
pusha
mov
mov
cld
xor
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
xchg
lods
xchg
add
inc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
add
add
call
add
add
sti
add
add
inc
add
sti
add
mov
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
mov
push
mov
mov
mov
call
mov
mov
pop
pop
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
add
add
jmp
jmp
lcall
loop
mov
mov
add
add
mov
add
jmp
lea
movsb
push
dec
lea
or
js
movsb
mov
jmp
jmp
lcall
loop
add
inc
add
mov
add
mov
mov
add
jmp
dec
inc
xor
fnstcw
test
mov
jbe
cmpsl
mov
jmp
jmp
lcall
loop
inc
push
inc
add
mov
add
mov
mov
add
jmp
push
pop
pop
jmp
jns
sub
sub
mov
adc
inc
add
loop
es
loop
addb
add
mov
add
mov
mov
add
jmp
sti
mov
in
adc
lcall
std
pop
test
add
loop
es
loop
rolb
add
mov
add
mov
mov
add
jmp
dec
xchg
pop
jmp
aas
fs
adc
out
insl
cmpsb
insb
push
mov
jmp
jmp
lcall
loop
add
inc
add
mov
add
mov
mov
add
jmp
rcl
lock
pop
mov
adcb
jne
pusha
call
pop
jmp
lcall
loop
inc
pop
inc
add
mov
add
mov
mov
add
jmp
xor
fstps
adc
jp
pop
mov
inc
push
jnp
add
pop
movsb
rcl
stc
push
movb
out
adc
pop
mov
lods
adc
faddp
mov
aam
inc
lahf
cltd
add
cmp
add
rcrl
loope
pop
cli
scas
out
pop
dec
jle
xchg
lods
mov
mov
aam
ret
jnp
out
fdiv
mov
test
fldcw
fldenv
cld
clc
adc
pop
adc
out
jbe
or
jne
or
bound
fwait
int3
stos
mov
dec
add
mov
cmp
mov
aas
xor
mov
or
jecxz
push
dec
test
mov
xchg
fsubrs
loop
add
adc
cmc
enter
sti
push
pop
fimull
incb
and
dec
mov
rclb
ret
and
or
mov
movsb
mov
decb
mov
stos
mov
or
adc
mov
dec
push
aad
cmp
es
adc
daa
stos
mov
sar
sbb
nop
xor
xlat
push
dec
imul
cmp
and
or
push
movsb
insl
mov
xor
add
inc
sub
xor
fimull
mov
jmp
in
dec
or
jb
xor
xchg
jg
data16
xchg
inc
mov
pop
arpl
lret
fidivrs
jnp
adc
cmc
add
pop
movsb
imul
push
push
in
adc
jmp
gs
sti
leave
and
iret
insl
jecxz
jl
pushf
inc
xchg
sbb
or
pushf
dec
loop
pop
pop
aas
rorl
test
scas
fcmovnb
mov
subl
mov
mov
inc
xlat
idivb
test
jno
inc
jmp
setbe
and
xor
mov
pop
inc
xchg
enter
jae
repnz
out
stc
stos
notb
push
in
pop
mov
pop
les
clc
lods
int3
mov
cmp
jb
xchg
xchg
inc
loopne
insl
not
pop
inc
xchg
cli
es
sbbl
outsb
scas
push
adcb
inc
pop
dec
dec
xor
add
lcall
cli
bound
stos
in
mov
in
sti
rclb
sbb
es
lods
cmp
or
push
push
pop
jns
ljmp
aam
and
push
fimull
insb
dec
in
in
pop
out
xchg
mov
jg
movsl
inc
sbb
inc
and
inc
jmp
es
inc
add
adc
fcomps
jl
movsl
movsl
cltd
mov
push
lods
pusha
test
sub
scas
jp
or
in
ds
or
cmp
inc
sahf
push
aaa
stc
sub
or
addl
in
sbb
stos
mov
adc
xor
dec
pop
hlt
mov
jg
mov
movq
cmp
mov
cmp
mov
sti
shrl
mov
pusha
push
nop
cmp
fnstcw
icebp
repnz
sub
add
cs
and
and
cmp
mov
xor
clc
xor
movsl
cltd
mov
imul
add
into
mov
fs
push
cltd
js
mov
imul
fcomps
icebp
add
pop
sub
sub
stc
sti
outsl
mov
sbb
mov
arpl
out
stos
shrb
mov
aad
mov
and
imul
jmp
push
bound
andl
lahf
enter
sbb
es
add
shll
loope
xchg
subl
roll
mov
push
out
addr16
xchg
jg
fisubl
mov
js
into
xchg
neg
or
or
test
jnp
or
aad
pop
lahf
in
pushf
mov
iret
fstps
xor
in
push
xorl
push
sbb
pop
mov
jge
mov
add
fwait
je
xchg
sahf
fidivrl
sub
mov
pop
fidivl
out
push
std
or
in
fdivrs
pop
cmp
es
outsb
add
mov
das
push
movsl
jb
das
shll
aad
push
add
push
sub
mov
cmp
sbb
push
out
sub
mov
mov
add
out
mov
mov
lret
js
outsb
jmp
mov
aaa
xchg
shlb
xlat
push
and
out
lods
ret
icebp
push
sahf
arpl
cmp
inc
xor
lds
jne
lock
sub
and
repnz
pop
mov
and
in
sub
sbb
int3
insb
mov
js
gs
dec
ss
push
jbe
mov
sbb
sahf
gs
pop
sub
mov
leave
pop
jne
add
subb
xchg
gs
jo
out
repz
dec
not
std
inc
inc
test
aas
loopne
fs
xchg
in
cld
imul
inc
iret
movsl
ss
jecxz
mov
push
mulb
xchg
xlat
out
cmp
enter
pop
fs
mov
adc
pusha
adc
fsts
sub
mov
out
sbbl
das
ja
inc
aam
push
pop
ja
jp
dec
rcrl
int
and
std
or
cmp
xor
xchg
fsub
xor
mov
xchg
dec
mov
fadds
repz
and
sbb
gs
jecxz
jb
addr16
mov
or
sbb
push
imul
mov
push
test
jle
jnp
xchg
out
dec
lret
in
repnz
inc
test
out
cmpsb
jns
fisubs
mov
xchg
pop
pushf
call
cld
aad
popf
xchg
es
stc
mov
xchg
or
jb
xchg
mov
outsl
popa
in
aas
cmp
cmovl
dec
lcall
inc
into
jae
inc
mov
lds
sub
dec
adc
popf
fcmove
jae
mov
or
aas
mov
scas
iret
jne
mov
mov
popf
push
mov
jnp
dec
ds
mov
outsl
out
xchg
xchg
mov
fnstsw
test
pop
lcall
iret
lret
movsb
mov
pop
push
fisubrs
cmp
fnstsw
int
or
in
add
inc
insl
xor
into
lea
cmp
jb
fbstp
mov
xchg
sbb
jo
cmp
ficompl
inc
jo
sbb
gs
fcompl
pushf
push
or
lock
mov
subl
movw
mov
fsubp
xor
test
inc
mov
sahf
jbe
icebp
dec
popf
sub
dec
mov
mov
test
mov
bound
lods
std
cltd
ret
cmpsl
inc
sbb
jnp
movsl
sbb
jl
push
push
fs
dec
xchg
fcompl
pop
addb
mov
loopne
lods
push
pop
ja
inc
cmpb
fsubrs
and
outsl
repnz
xchg
stos
jmp
mov
push
lods
pop
data16
sub
adc
xlat
pop
or
mov
mov
mov
aaa
and
repnz
in
xor
and
xchg
adc
cs
cmp
lahf
ds
push
or
fs
xchg
stos
xchg
imul
inc
sbb
cmpsb
jmp
add
push
dec
push
testb
push
mov
shll
cwtl
scas
out
push
cmpsb
orb
fcompl
into
mov
aas
loopne
rcrl
pop
lret
jb
cmp
xor
add
pop
jp
fwait
cmp
or
cwtl
sub
inc
ret
cmp
rcl
jge
ret
repz
push
add
call
lcall
pop
xchg
add
insl
ret
push
sub
fists
scas
repz
mov
add
outsl
push
stos
cmpsl
pusha
add
lret
add
xchg
insb
mov
call
je
testb
icebp
mov
icebp
mov
lcall
jnp
shrl
cmc
lret
leave
in
sbb
or
push
add
insb
inc
lahf
loopne
or
xchg
and
add
cltd
mov
cmpsl
movsl
xor
adc
push
mov
testb
pop
icebp
sub
cmpsl
test
mov
insb
lar
jge
cli
test
lock
sahf
xor
cmp
cmp
jno
test
into
lods
and
jg
leave
leave
mov
jb
and
add
xor
push
enter
loope
and
repnz
je
daa
push
mov
and
stc
movsb
push
mov
fists
in
jae
stos
fisubl
xchg
jo
test
or
mov
or
stos
dec
push
jg
and
jge
sub
xchg
push
mov
idiv
stos
aaa
and
dec
xchg
adc
adc
push
aas
fimull
lcall
daa
sar
es
gs
leave
dec
xor
out
push
into
sahf
push
xorl
outsl
repnz
cs
dec
pop
cs
fstpt
dec
and
and
stos
sahf
push
push
sbb
enter
popf
mov
cmp
pop
xchg
mov
inc
in
add
test
and
jns
or
stc
in
subb
stc
pop
stc
call
jne
test
xchg
subl
lcall
dec
fucomip
in
mov
mov
mov
test
xor
stc
korw
mov
es
iret
aas
mov
lret
ja
rcl
stos
negl
push
or
mov
cli
push
push
call
scas
pushf
xchg
fnsave
adc
pusha
and
sbb
inc
and
cmp
call
jp
xor
daa
xchg
mov
pusha
fnstsw
je
sub
mov
fdivr
adc
sbb
pusha
sbb
aas
popa
xor
ds
adc
xor
orl
imul
nop
or
in
fmull
jmp
mov
daa
jae
mov
lds
add
pop
adc
add
sub
movsl
add
jnp
push
pop
lods
mov
mov
xadd
xchg
jns
push
xchg
cs
pop
hlt
cwtl
cli
xor
js
push
mov
shrb
pop
push
mov
pop
outsl
xchg
pop
gs
sarb
xchg
sbb
je
rcl
es
insl
mov
gs
inc
in
sub
mov
lods
popa
sub
in
push
inc
or
pop
in
rcll
es
cld
xchg
aaa
and
lock
pop
push
dec
fistpll
mov
divb
lea
sbb
clc
pop
or
adc
cmpl
mov
addr16
and
lcall
jnp
mov
cs
adc
dec
jae
outsl
stos
test
mov
jecxz
pop
call
in
sub
negb
loop
jle
adc
andb
mov
mov
adcb
aad
outsb
cwtl
faddl
or
in
pop
and
mov
or
adc
dec
push
adc
dec
int
sahf
xchg
mov
adc
mov
bound
icebp
sarl
xchg
imul
or
mov
loop,pt
sub
adc
subb
in
lahf
xchg
out
jmp
mov
dec
fidivl
out
pop
mov
dec
sub
fwait
sti
cmp
cmpl
es
rorl
bound
jbe
xlat
rcl
xor
fistps
mov
lcall
push
inc
push
dec
mov
gs
jl
loope
mov
jae
push
cltd
xchg
xchg
repnz
cmpb
sub
gs
inc
imul
xor
stc
out
mov
fstl
and
test
adc
jmp
xor
pusha
lea
push
jno
sbbb
add
xor
mov
stc
repnz
jne
inc
mov
or
dec
lcall
push
out
cmp
sbb
jle
and
loop
mov
out
xor
mov
adc
gs
or
in
add
bndldx
pop
out
out
test
mov
mov
push
and
mov
or
cli
or
pop
mov
int3
cli
inc
cmp
scas
jne
dec
mov
fldt
mov
dec
adc
pop
lods
lock
fstps
mov
pop
jmp
sub
loop
pop
inc
sub
fdivrp
dec
dec
dec
pop
sbb
pop
out
cld
es
nop
and
sub
and
and
mov
cs
pop
mov
or
ja
fwait
add
stos
xchg
mov
push
sub
xor
jmp
gs
aaa
push
ror
adc
and
das
push
mov
cltd
sub
mov
xchg
push
lahf
add
and
inc
andl
xor
sub
fldl
push
mov
popa
stos
outsl
inc
lcall
lahf
mov
sbb
sbb
mov
jns
sbb
leave
sub
shrb
fcom
inc
jle
nop
call
clc
adc
inc
aad
pop
andb
xor
imul
sub
mov
mov
out
pop
xor
stc
popf
adc
cmpb
xor
cwtl
ljmp
sbb
and
gs
xchg
shl
icebp
jns
imul
push
lcall
repz
mov
jp
dec
pop
mov
les
loop
scas
mov
ja
mov
ret
jecxz
xorl
mov
out
test
inc
xchg
sub
les
je
lret
popa
repnz
sub
or
mov
and
or
cmp
or
jae
lock
es
out
mov
imull
in
or
adc
lret
dec
int3
xor
jl
call
jecxz
fbld
movsl
adc
pop
jecxz
jne
adc
dec
xor
pop
sbb
dec
nop
mov
iret
aaa
decl
hlt
enter
imul
mov
scas
fildll
push
dec
repz
dec
int3
mov
mov
dec
out
mov
adc
sub
sbb
cltd
fldl
pop
sub
jg
js
pop
push
dec
jbe
std
lds
pop
out
lahf
insb
test
jb
add
add
mov
or
xchg
addl
and
das
sarb
test
in
pop
shrb
ds
add
mov
lea
ret
leave
arpl
negl
jp
test
ret
pop
in
fstpt
std
jnp
loop
add
add
add
insb
mov
push
fxch
dec
sub
jns
cli
mov
or
rorl
fsts
int
enter
pop
sbb
xchg
dec
repnz
lock
push
fnstenv
sbb
add
adc
jp
btr
dec
cli
jl
xchg
stc
popa
push
addr16
iret
jp
insl
sub
add
les
adcl
outsb
jg
dec
enter
cmp
shl
mov
push
push
pop
cmp
jo
xor
daa
adc
cmp
jmp
cld
add
movsb
pop
mov
and
cmp
jns
fsubs
icebp
push
jle
cmovb
mov
imul
jne
sti
sarl
adc
and
jecxz
imul
and
and
loope
shll
pop
sahf
pop
adc
and
in
rorl
popa
mov
mov
jno
mov
and
cmpsl
shlb
movlhps
sbb
pushf
mov
pop
adc
shl
das
bound
push
outsl
jb
ja
mov
js
jge
add
sbb
mov
jnp
scas
mov
dec
or
push
fidivrl
xchg
lcall
mov
test
in
pushf
incb
inc
imul
sub
lods
stos
subb
aam
pop
int3
xor
into
gs
mov
pop
or
fisubrl
sbbb
dec
mov
fldt
incl
and
add
int
fcoms
pop
sbb
add
lret
jle
xchg
lds
push
jne
mov
inc
nop
pop
mov
in
and
dec
icebp
stos
and
lods
or
pop
add
inc
add
or
aas
jmp
cmp
rolb
mov
loope
jmp
mov
jno
mov
dec
rolb
js
test
jmp
sti
dec
pop
fcomip
sbb
lahf
out
pop
dec
sbb
outsb
std
nop
add
and
cltd
dec
lea
rcr
jne
imul
out
fs
xchg
dec
jne
int
bound
pop
insl
pop
mov
insl
insl
iret
arpl
rcrb
outsb
fsubrl
and
insb
decb
or
imul
nop
adc
in
lods
add
test
add
in
out
cmc
pushl
dec
call
pop
or
mov
movsb
xor
fisubrs
fisttpll
mov
jecxz
in
lods
pop
pusha
popf
dec
lds
sbb
jp
xor
outsl
pusha
aas
push
lock
in
mov
or
stc
je
or
imul
pop
adc
sub
lds
popf
xchg
pop
cmc
adc
inc
lret
lahf
sub
test
ret
sbb
movsl
in
inc
mov
lea
js
scas
sub
jo
sbbl
cmp
sarb
or
mov
inc
jle
ror
imul
or
ret
iret
sahf
xchg
xchg
je
not
jbe
xchg
arpl
jg
cmpsl
test
xor
xlat
les
inc
int3
add
sub
xchg
test
mov
ret
mov
cli
mov
testl
add
ret
pop
outsl
movsb
push
outsb
imul
push
add
mov
in
scas
xchg
sbb
mov
out
call
push
lret
pop
insb
mov
inc
cmp
or
push
test
and
outsl
movsb
mov
pushf
jae
mov
sub
call
jg
sar
sbb
and
add
pop
or
inc
iret
jle
xchg
xchg
test
add
mov
cmp
adc
out
in
sbb
loopne
mov
imul
pushf
push
scas
jno
xchg
negl
aas
imul
mov
jge
shrb
sahf
aad
clc
daa
push
inc
ret
enter
add
jle
mov
scas
add
bound
shrb
sub
add
pop
sbb
cmpl
add
into
int3
jecxz
cld
xor
add
push
stos
daa
out
xchg
cs
test
imul
pop
xor
daa
nop
adc
jb
mov
frstor
shrb
ja
lock
es
lds
inc
loope
pop
mov
sub
pop
movsl
cli
dec
or
into
out
mov
xchg
adc
js
insl
mov
jle
test
sahf
xchg
roll
fisttpl
cmp
into
imul
adcl
scas
xchg
shll
ja
fstl
outsb
in
call
shll
movsl
out
aad
add
enter
mov
dec
popa
mov
fidivrl
and
xchg
mov
push
mov
movsb
sub
xlat
lcall
push
imul
js
jnp
push
xor
jp
mov
pop
out
push
ret
cmp
adc
mov
aam
test
or
mov
and
inc
pop
aas
lret
add
or
imul
dec
outsb
inc
ja
outsl
push
addb
enter
movsl
sti
jle
mov
aam
mov
vmread
mov
shll
out
add
jns,pt
dec
inc
xor
cmpsl
cmc
push
mov
and
adc
jle
mov
sbb
pop
push
in
ret
add
pop
fdivp
pop
shlb
outsb
aaa
and
int3
adc
lret
lds
lret
pop
push
mov
stos
or
out
hlt
movsb
leave
mov
popa
adc
jne
adc
pop
loop
aam
mov
frstor
aas
cmc
test
roll
and
mull
push
pop
add
cwtl
pop
pop
mov
imul
insb
sti
int
out
mov
out
inc
pop
lock
xchg
xchg
test
aaa
or
pop
jnp
hlt
fmuls
push
or
pop
mov
loop
push
mov
fstl
loope
imul
neg
push
fwait
push
out
movsb
pushf
pop
adc
int3
mov
outsb
mov
add
shl
xchg
or
int3
cltd
xchg
scas
jecxz
mov
out
xchg
pusha
jecxz
loope
cwtl
dec
rcrb
xchg
leave
inc
pop
mov
sbbb
cmpb
cmp
jbe
das
push
and
fdivrl
rcrl
mov
sub
pop
and
cmpsl
out
call
mov
or
push
subb
mov
int3
lret
inc
andl
pusha
lock
sarb
mov
ds
dec
mov
xchg
xor
cwtl
mov
and
imul
lock
jmp
dec
mov
jne
sti
cmp
jns
popa
cli
mov
xchg
inc
imul
repnz
loop
stos
sbb
fwait
arpl
add
pop
fcmovne
or
add
push
mov
and
loop
cmp
aaa
lods
jmp
aad
lock
adc
dec
cmp
pop
sti
dec
xchg
je
jg
repz
ljmp
pop
leave
inc
out
add
fstpl
xlat
adcb
mov
bound
jne
adc
sbb
cmp
fmulp
ret
and
xchg
add
stos
int3
jle
divl
mov
into
aad
mov
aad
aas
sbb
sarl
push
clc
daa
mov
mov
or
jmp
mov
popa
adc
mov
pop
lret
and
out
shlb
jno
outsb
js
pusha
lods
add
imul
and
mov
inc
pop
imul
inc
xchg
lea
pusha
or
popa
and
test
out
lds
xchg
xor
and
mov
shr
in
nop
cmp
adc
jmp
repz
scas
dec
lret
decl
jl
dec
test
inc
lcall
insl
mov
fucomi
fistps
les
adc
mov
xor
cld
sbb
bound
hlt
sub
int3
push
ljmp
push
push
adc
int3
rol
add
push
js
or
mov
out
cmp
int3
test
lcall
cmp
pop
xor
jns
aam
mov
cmp
cmp
aad
mov
xor
or
mov
xor
cmpsl
addb
stos
add
sahf
and
insl
xchg
jp
imul
testl
mov
aas
stos
outsl
in
mov
nop
repnz
inc
pop
cmp
add
jecxz
add
pop
xabort
dec
repnz
or
xor
add
dec
shr
fldcw
add
and
cmp
xchg
popw
outsl
xchg
xchg
add
dec
cmp
mov
cmp
sbb
sar
imul
push
mov
pusha
push
imul
hlt
std
les
nop
inc
push
push
lret
scas
dec
cmpsb
dec
fstps
dec
insb
mov
pop
mov
xor
xor
sbb
lcall
adcb
cmp
mov
dec
pop
outsl
mov
sub
mov
imul
xchg
leave
jae
enter
out
pop
cmc
dec
xchg
xchg
push
insl
mov
lcall
and
xor
xor
pop
out
leave
lcall
mov
enter
sar
jp
add
test
cwtl
pop
mov
out
popa
mov
push
push
insl
mov
adc
dec
icebp
pop
loopne
sub
scas
popa
add
mov
pop
xor
xchg
jb
dec
jbe
mov
push
or
jb
mov
cmp
and
sbb
out
push
sahf
subb
icebp
enter
scas
xor
aas
push
call
mov
or
idiv
xor
inc
push
mov
push
cwtl
mov
or
dec
shll
fsubrl
adc
xchg
push
add
sbb
int
xchg
jo
dec
push
xchg
adc
add
adc
outsb
push
cli
lahf
adc
add
mov
sbb
mov
push
aas
add
adc
sub
out
cmp
and
mov
fnsave
int
fsubrl
je
ret
lods
xor
test
scas
sbb
and
outsb
push
repnz
std
jmp
ljmp
jo
in
mov
or
jge
jg
cmp
dec
hlt
push
pop
scas
jg
pushf
inc
add
popf
ret
test
popf
sarb
push
jge
jbe
daa
movsb
jecxz
add
test
dec
push
inc
rcll
lahf
mov
fs
push
cli
lock
lret
lahf
jg
jo
mov
mov
xchg
ja
mov
pop
psrld
and
add
mov
cltd
push
inc
imul
into
mov
fs
ss
test
inc
mov
xor
or
sub
aam
and
add
pop
jecxz
loop
xchg
test
data16
fs
xchg
adc
mov
pusha
cmp
addr16
test
sbb
jle
dec
icebp
movsb
push
outsl
hlt
push
cmc
pushfw
fidivs
xlat
mov
pop
dec
out
test
xor
jmp
movd
dec
xchg
or
popf
dec
mov
into
fsubs
lret
sar
push
pop
mov
and
push
in
cmp
lock
xor
daa
lods
mov
mov
popw
sar
mov
push
push
push
jb
jbe
add
add
sbb
andl
push
cs
xchg
push
sbb
inc
sbb
jb
or
xlat
push
aad
jo
adc
cltd
or
out
fdivr
aam
mov
sub
lcall
or
negl
outsb
mov
fistps
aam
mov
es
inc
sti
inc
xor
dec
jge
imul
pop
xlat
xor
inc
test
push
ljmp
pop
or
stc
int
jecxz
aam
lret
xor
and
xor
in
stos
xor
insl
cwtl
mov
cmp
subb
cltd
add
hlt
movsb
mov
es
push
std
pop
cwtl
shl
xor
test
repnz
in
push
aaa
les
das
shr
int3
rolb
movsl
mov
mov
fwait
popa
jnp
xlat
jb
push
xor
pop
arpl
xchg
daa
dec
movsb
pop
adc
add
lea
pop
cmpl
mov
mov
test
movsl
add
les
stos
push
adc
lea
bound
aaa
jno
cmpsl
push
call
cltd
icebp
ret
popa
mov
mov
and
lods
and
jge
jp
repz
nop
sbb
jno
xchg
fs
pop
jae
mov
or
push
ja
xchg
rcll
cmp
outsb
dec
jecxz
or
jb
push
mov
push
rcl
mov
push
sahf
aad
rolb
push
cli
out
pop
adc
shll
sub
mov
or
sub
testl
sbb
lcall
sbb
jb
and
aas
adc
clc
adc
leave
leave
or
xchg
movb
leave
frstor
mov
icebp
popa
shlb
mov
idiv
push
enter
add
push
rorb
add
cmc
inc
insl
dec
xor
sbb
dec
pop
movl
jae
mov
mov
jmp
aam
ss
movsl
lcall
add
pop
jae
data16
inc
int3
push
in
or
inc
test
pusha
push
mov
aam
aam
lret
addr16
mov
cli
std
adcl
xchg
aas
je
scas
out
outsl
adc
pushl
xchg
jae
pop
sti
cmp
int3
mov
mov
mov
mov
xchg
icebp
divl
das
mov
stos
sbb
mov
cmpsb
in
mov
fwait
pop
in
adc
loop
jb
mov
cmpsb
mov
mov
jbe
test
ds
mov
fstl
jmp
test
ret
cs
push
inc
jp
cmp
add
and
leave
cmp
lods
jae
dec
lock
add
mov
cwtl
sbb
lods
lds
jno
jg
aaa
lock
aas
adc
push
sub
dec
mov
push
testl
mov
adc
cmp
cmp
bnd
lods
inc
out
mov
lahf
cli
das
pop
std
ja
mov
es
std
inc
add
dec
das
xor
push
jle
push
icebp
sbb
sbb
aam
and
sbbl
sbb
lret
push
cwtl
mov
pop
pop
add
cmp
xor
cmp
pop
adc
inc
add
sbb
cmp
sub
aaa
add
mov
mov
inc
mov
pop
mov
sub
stos
and
push
mov
out
dec
xchg
sti
popf
mov
lock
xor
mov
lcall
cmp
jno
lds
dec
arpl
das
add
mov
mov
bnd
mov
pushf
push
sti
in
adc
mov
out
and
pop
sbb
cmp
mov
pop
pop
adc
xor
popa
std
push
stc
loop
inc
pusha
or
push
sti
in
movl
inc
pop
mov
xchg
vmptrld
xchg
cltd
jne
or
xor
xchg
sbb
xlat
push
inc
push
out
outsl
mov
aam
jl
test
je
aad
add
cwtl
xor
jae
fisubl
xor
iret
sub
movsb
std
jmp
stos
enter
std
cmpsl
aas
sti
sub
xor
jmp
cli
push
lock
mov
jns
in
leave
arpl
inc
add
clc
push
inc
sbb
adc
loop
pusha
mov
sarb
sub
std
sbb
bound
sbb
mov
dec
movsl
arpl
dec
mov
ss
jae
movaps
and
cli
scas
xchg
outsl
jns
mov
cld
jl
add
inc
sbb
push
mov
es
xchg
cmp
mov
jnp
xor
fldenv
cs
pop
loop
cmp
hlt
cmpsl
pop
data16
out
ja
rcr
mov
pop
lea
lods
sub
xchg
bound
mov
int3
cmp
imul
js
insl
insb
mov
jp
std
je
adc
inc
outsl
pop
mov
mov
mov
jns
adc
ljmp
ja
or
adc
or
add
xchg
outsl
mov
xor
movsb
pop
loopne
cwtl
jge
sub
or
jns
xchg
dec
mov
popa
add
fbstp
in
test
rcll
test
mov
push
push
dec
xor
outsb
add
call
xor
and
bound
nopl
cmp
and
inc
lods
cld
sub
mov
inc
sahf
cmp
pop
jecxz
dec
inc
stos
jl
ja
ljmp
das
rolb
xchg
jg
lods
lods
jne
sub
shl
push
imul
fcoml
push
mov
scas
rcrl
outsb
sub
jns
pusha
jns
mov
outsl
shll
cli
insb
lods
rcll
stos
stc
fiaddl
xor
push
out
dec
sarb
fbstp
pop
xchg
inc
xor
js
mov
je
sub
adc
mov
and
popf
leave
daa
inc
mov
xchg
push
popa
cmp
stos
or
daa
div
in
mov
pop
fiadds
push
scas
lea
lea
xchg
inc
pop
push
pushf
dec
jae
loopne
dec
mov
outsl
in
dec
fldcw
inc
fsubp
sub
jne
aas
push
incl
push
inc
bound
insb
mov
jle
pop
and
rcll
mov
lret
jae
jp
movb
aaa
movsl
jmp
ret
mov
push
sbb
sub
mov
daa
scas
lret
xor
xor
fnsave
andb
cmp
data16
sub
cmp
frstor
mov
leave
enter
cs
sbb
clc
shrb
hlt
dec
push
pusha
xchg
adc
sub
cmpsl
sub
jge
inc
mov
mov
enter
scas
or
add
call
xchg
pop
mov
int
pushf
jle
fst
lret
imul
insb
cmp
lret
cld
lds
mov
cmp
adc
pop
cmp
mov
inc
mov
lea
hlt
fistpll
sub
in
cmp
test
out
bound
stos
lods
cli
int
jae
mov
out
mov
or
jnp
mov
outsl
adc
negl
ret
dec
int3
int3
xor
fisubrs
imul
movsb
nop
cli
scas
lcall
and
sbb
stos
repz
stc
mov
or
orl
push
mov
add
lock
lea
pop
outsl
aam
pop
jno
scas
aas
arpl
add
out
lea
lock
sbb
xchg
out
arpl
fnstenv
fists
and
test
icebp
dec
sahf
push
sub
loop
xchg
in
shl
inc
aas
dec
add
sbb
movsb
mov
mov
loope
das
dec
xor
jnp
dec
xchg
sbb
mov
xchg
fstps
in
lret
cmp
gs
in
js
jnp
lea
loopne
fdivrs
cwtl
test
mov
inc
cld
xchg
xor
loope
xchg
lcall
into
gs
fsts
mov
pop
gs
shll
insb
insl
cmp
inc
cs
adc
loope
dec
mov
aas
out
xor
mov
dec
pop
xchg
or
fstpt
lcall
cmp
stos
ficoms
test
mov
cltd
pop
imul
dec
test
popf
xor
test
int
addr16
shr
dec
mov
fistps
adc
das
ret
sub
aam
ljmp
or
fcmovu
mov
push
imulb
jbe
addr16
movsb
movsb
out
orl
aaa
inc
out
mov
sub
test
fsubrl
cmp
fildll
inc
dec
mov
adc
sbb
xchg
adc
sub
clc
movsl
insl
das
mov
cmp
xchg
gs
mov
cmp
hlt
sub
cmp
sub
add
test
and
outsl
jecxz
popf
and
xorl
fwait
and
lret
mov
lds
decb
lock
push
cwtl
into
lods
xchg
rcrb
call
repnz
push
jmp
cmp
adc
iret
shl
jmp
sub
pop
stos
out
ret
in
dec
mov
and
lcall
mov
leave
pusha
test
cmpsl
adc
bound
mov
add
mov
jns
inc
push
fistl
test
cmp
adc
mov
mov
xchg
push
xor
xchg
push
nop
mov
jge
and
push
cmp
out
pop
and
nop
lahf
xor
mov
or
orl
aas
xor
enter
loope
lods
and
push
jae
movsb
sbb
iret
xor
insl
jecxz
push
inc
addr16
dec
and
stos
add
mov
fnsave
jecxz
hlt
sbb
sub
fiaddl
shrb
outsb
test
stos
push
dec
lret
mov
subps
mov
rclb
insb
dec
push
cmp
add
andps
loope
fcom
add
shll
sub
test
daa
faddp
pop
xlat
outsb
fdivrl
mov
sub
repz
in
fwait
test
mov
daa
sub
es
adc
clc
rcll
inc
imul
out
jle
int
adc
xchg
adcb
nop
push
incb
jmp
fsubs
lods
pop
insb
lcall
mov
ret
stos
sbb
ljmp
pop
cmp
mov
jmp
sbb
mov
shlb
push
popa
stos
cmp
out
lcall
insl
pop
imul
and
vpsubb
pop
push
shll
ret
loop
inc
in
clc
neg
in
mov
jnp
out
aas
ja
jp
jno
lret
adc
cwtl
sbb
fists
inc
mov
inc
lods
mov
and
out
mov
dec
inc
aaa
repz
into
aas
push
fdivrl
jns
and
mov
mov
mov
fcomps
xlat
xor
in
mov
xor
aaa
cmp
popa
into
nop
push
pop
fcom
add
cmp
inc
stc
and
dec
push
mov
fbstp
in
icebp
sbb
andb
mov
sbb
aam
xchg
stos
mov
fisubrl
dec
adc
js
jo
sti
lret
lock
addr16
pop
mov
push
arpl
or
lock
sub
.byte
.byte
.byte
.byte
aas
sub
pop
pop
outsl
cld
inc
jle
fcomi
rcrl
ret
inc
cmp
clc
xor
xor
loope
pusha
xor
aad
cmp
pop
loop
call
nop
scas
pop
addr16
pop
sbb
loopne
mov
adc
or
mov
push
or
inc
loop
pop
cld
add
mov
jl
lods
fwait
pop
pop
ljmp
out
mov
jge
iret
inc
cmp
jle
xor
int3
sub
scas
je
push
out
adc
mov
sarl
out
mov
call
scas
pop
jno
fcoml
int3
and
xchg
xlat
cmpsb
pop
cmovl
mov
stc
shlb
mov
xchg
jne
and
ja
jge
jmp
lret
jnp
mov
lock
adc
and
xchg
in
call
sbb
add
cs
pop
sarb
fnstsw
es
mov
lock
lcall
push
mov
bound
cmc
test
insb
adc
clc
inc
mov
test
adc
cli
xor
rcrb
push
aam
xor
rcrl
and
push
hlt
rcll
jmp
sub
pop
inc
push
lods
repz
outsl
jno
xor
aaa
or
shrl
data16
ds
enter
pop
imul
test
imul
mov
loop
nop
adc
add
leave
daa
stos
mov
add
push
inc
or
jb
iret
dec
repz
sub
add
mov
lcall
ds
mov
cltd
sbb
dec
xchg
lods
pop
and
je
shl
or
push
nop
xchg
jle
fdivs
cld
or
cmp
popf
out
sub
or
xlat
mov
push
repz
movsl
add
enter
call
pop
cmp
out
mov
push
bound
sti
mov
mov
je
adc
xchg
jbe
es
inc
call
test
mov
aaa
push
push
mov
mov
cwtl
pop
rolb
jno
push
xlat
mov
dec
xor
lods
inc
dec
push
and
and
adc
cwtl
dec
lret
jg
cmp
sahf
mov
stos
lods
aas
scas
lods
inc
jnp
dec
data16
push
push
dec
mov
icebp
add
cmp
aad
int3
inc
movsl
sbbb
fisubrs
cli
or
mov
cmpsb
xlat
lahf
sub
sbb
pop
inc
test
fstpt
dec
je
aas
or
jg
push
adc
mov
out
and
push
lods
cmpsl
mov
sub
mov
push
mov
cwtl
mov
popf
pop
inc
push
mov
dec
unpcklps
sbb
imul
add
mov
sub
xchg
inc
stos
js
test
outsb
sahf
call
mov
lds
int3
mov
push
scas
insl
dec
das
icebp
pop
lods
push
jns
cwtl
imul
pop
sub
push
loope
data16
xchg
pop
in
les
test
out
cli
enter
push
jge
mov
or
sbb
popa
jmp
mov
or
or
xchg
cld
push
stc
push
and
and
adc
mov
add
dec
ret
inc
stos
popf
scas
sahf
notrack
adcl
xor
mov
sub
push
fs
or
jp
ljmp
jae
xchg
dec
pop
dec
loope
cmp
shrl
shlw
sbb
into
add
insb
movsb
adc
cmp
jmp
loopne
int
add
and
push
je
xor
popa
movb
push
sub
imul
or
sbb
mov
test
jnp
pop
fmull
lret
notl
jb
pop
pop
sub
sub
xor
jl
out
rcrl
test
inc
fnstsw
add
hlt
filds
mov
and
add
addl
mov
cld
mov
sbb
cwtl
fwait
push
inc
dec
jecxz
jecxz
xor
jne
jge
adc
mov
xchg
cmp
ret
inc
mov
cmp
adc
xchg
xchg
adc
std
out
xor
mov
sti
or
ret
hlt
ja
sar
pop
inc
jle
sahf
outsl
push
mov
jl
stos
and
xchg
js
xor
int3
lods
lods
adc
or
push
adc
shrl
mov
pusha
loopne
pop
push
adc
mov
cmp
sub
scas
repnz
mov
xchg
lret
push
rclb
bound
push
mov
das
subl
inc
dec
or
or
iret
jmp
addl
sbb
inc
cmp
xor
jno
outsb
loope
es
popa
xchg
arpl
xor
dec
jb
out
sbb
popa
fnstenv
stos
dec
sbb
out
arpl
cmp
ljmp
idivl
push
mov
xchg
stos
cwtl
jl
outsb
mov
pop
and
test
inc
idivb
maskmovq
negl
add
or
dec
push
imul
shrl
lcall
jnp
mov
jnp
sub
mov
xchg
adc
cmp
loop
in
mov
pop
in
pop
sub
dec
js
pop
dec
imul
cmc
xchg
inc
jmp
gs
test
pop
sbb
repnz
jg
inc
jge
xchg
adc
and
sub
fnsave
mov
lods
mov
in
adc
imul
fildll
cld
xlat
or
ljmp
inc
cmp
xchg
push
fs
mov
xchg
dec
push
test
jo
subl
fdivs
out
pushf
fcomp
sbb
mov
xchg
pop
xorb
xor
outsl
in
xchg
sub
xchg
pop
fcompl
xchg
addl
inc
lock
int3
rclb
ds
jb
popf
pop
jecxz
or
das
sbb
in
addr16
sub
ficomps
and
mov
jo
insl
add
inc
lret
test
lret
sub
dec
mov
or
pusha
push
mov
sbb
sub
add
les
mov
dec
xor
inc
sub
into
adc
imul
dec
cli
shlb
pop
mov
push
fsts
scas
mov
mov
xor
pop
stos
adc
jg
cmp
lret
movl
std
push
inc
mov
push
adc
dec
cmp
mov
ja
imul
mov
jmp
dec
movsb
lahf
xor
int3
mov
int
adc
xor
int
fistps
aaa
push
dec
in
inc
iret
mov
jecxz
insl
xchg
popa
jl
jp
jmp
inc
in
sbb
lds
fsts
jp
jp
mov
push
jg
sub
rcll
sbb
xchg
xor
sbb
mov
daa
xchg
jp
rorl
inc
xchg
cmovb
repz
adc
lods
sub
imulb
mov
adc
lea
arpl
popf
iret
mov
iret
dec
iret
push
jge
loope
mov
dec
push
cmpsl
push
and
movsl
enter
adc
out
out
dec
jle
lds
scas
mov
xlat
push
hlt
aas
lods
movsl
nop
sub
test
xor
shl
call
pop
xor
adc
fcmovne
jnp
inc
cmp
cld
cmp
add
movsb
pop
cmp
int3
iret
jecxz
xchg
daa
sbb
hlt
push
loope
add
add
int
xchg
adc
sub
inc
fsubrl
in
je
test
das
mov
cmp
outsb
push
xchg
xorl
xchg
mull
pop
pop
dec
sub
xor
jg
lods
jae
pop
addr16
mov
outsl
je
repz
xchg
or
iret
loopne
fidivrl
gs
dec
aad
shrl
ljmpw
push
dec
gs
aas
xchg
mov
lret
push
cli
out
fsts
mov
or
ja
or
push
adc
movsl
cwtl
hlt
fiadds
or
cld
mov
ja
out
cld
shlb
push
insl
mov
add
push
decb
ja
lahf
in
sub
in
mov
mov
jnp
mov
frstor
xchg
sti
xchg
and
ss
mov
xchg
jmp
lods
cmp
aaa
fwait
jns
shlb
inc
popa
jno
les
ds
pop
mov
fldcw
adc
sahf
lahf
test
xor
stc
push
or
fwait
mov
cmp
adc
dec
cmpsb
rorl
push
mov
lds
pop
arpl
xchg
push
fstl
xor
inc
mov
jge
dec
iret
aad
clc
cmp
add
or
push
test
lock
add
imul
xchg
inc
mov
push
mov
pop
pop
out
movsb
shll
ja
and
sbb
push
sbb
movsb
jmp
pushf
cmp
rorb
fcmovne
push
mov
bound
xlat
jle
scas
movsl
dec
adc
mov
gs
sbb
push
push
.byte
dec
inc
and
sbb
iret
pop
mov
xor
out
jl
or
push
and
out
ret
push
stos
sub
mov
add
sub
jae
cmp
xor
xor
and
je
cmp
test
sub
inc
sub
cmp
add
xor
jnp
xor
xor
cmp
xor
push
xor
pop
push
add
pop
xor
push
pop
push
pop
cmp
jecxz
add
xor
and
jno
add
or
js
add
or
add
mov
push
pop
test
jne
add
add
push
pop
push
pop
sub
xor
jbe
add
push
sub
pop
test
mov
add
xor
push
sub
jno
mov
pop
mov
add
mov
add
push
sub
pop
add
dec
inc
sub
push
add
pop
sub
jae
dec
xor
and
add
mov
push
test
js
add
dec
pop
cmp
push
movl
pop
cmp
jne
sub
js
dec
sub
or
cmp
cmp
jg
cmp
and
push
xor
jno
cmp
pop
push
pop
sub
inc
push
pop
and
add
mov
cmp
jne
sub
jb
dec
push
pop
push
cmp
jg
add
pop
test
jno
xor
mov
inc
inc
sub
sub
xor
js
cmp
add
or
xor
and
jo
sub
inc
test
jne
inc
dec
cmp
jno
push
pop
xor
add
jne
mov
xor
push
or
pop
cltd
add
or
dec
adc
enter
cltd
add
nop
into
rclb
rorb
mov
cld
push
or
cmp
dec
adc
ror
cltd
add
or
fadds
insl
add
or
or
addr16
negl
sbb
or
lds
push
call
or
mov
or
add
sbb
dec
or
add
inc
adc
add
int3
sbb
or
mov
or
xchg
or
or
scas
sbb
or
lcall
orl
mov
and
adc
push
adc
adc
je
cmp
or
ds
or
cltd
icebp
xchg
roll
lret
pushf
mov
mov
shl
fdiv
rcl
out
fsubr
loop
mov
add
fdiv
fsub
out
or
out
mov
mov
fcom
fcmovbe
loopne
loop
in
out
call
imul
adc
scas
fistpll
lcall
test
test
xchg
pop
or
setg
sub
lcall
adc
es
stos
in
addr16
sub
das
test
aaa
mov
cli
dec
cmpb
xchg
cmp
stc
jp
mov
sub
sahf
pop
cmp
filds
outsb
sbb
ret
out
in
pop
and
in
cmpsl
subb
mov
mov
ljmp
leave
sub
pop
mov
pop
add
push
cld
cmc
aas
lret
mov
test
ljmp
mov
loop
cmp
pop
xor
rol
movl
into
xchg
xor
mov
lcall
mov
jmp
out
or
loop
outsb
pushl
lret
mov
std
mov
orb
gs
dec
jnp
pop
leave
xor
