jecxz
or
sbb
or
mov
jo
inc
mov
lcall
jle
mov
shr
popf
out
in
call
cmpsb
into
iret
js
popa
cmpl
rcll
insb
loop
jb
inc
mov
mov
outsb
xor
xchg
aaa
sbb
cmp
je
idiv
and
push
or
sahf
ss
add
scas
inc
add
xor
notb
ret
lahf
mov
xchg
mov
dec
cmp
in
mov
and
hlt
cld
adc
imul
pop
mulb
sub
imul
jmp
std
leave
cmp
add
mov
mov
bound
dec
mov
and
loope
and
je
pop
jae
or
daa
popa
xor
jmp
arpl
into
cmpsl
ret
cmp
insb
shrb
inc
out
cmpsl
add
mov
jl
pusha
in
repz
in
nop
inc
xchg
push
mov
mov
mov
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
test
btc
push
inc
mov
pusha
movsbl
pusha
pushf
sub
stc
bsr
lea
clc
bt
sub
cmc
movw
pushl
pushl
popl
bt
cmp
jmp
andl
pop
imul
rorl
loopne
push
ja
mov
outsb
loop
cmc
jle
pushf
or
push
std
or
xchg
and
aam
or
pop
mov
dec
mov
dec
aas
xorl
test
inc
adc
shrl
outsl
es
xchg
popa
cltd
push
test
mov
or
add
cmp
xchg
loop
enter
notl
mov
mov
das
push
stos
in
mov
sub
dec
loope
xchg
dec
add
in
dec
movsb
rcr
iret
mov
mov
push
xchg
inc
sti
and
shlb
ljmp
xor
mov
add
xchg
les
mov
nop
clc
jo
push
test
into
shl
pop
push
or
cs
lcall
pop
divl
hlt
inc
inc
ret
addl
call
xor
sub
pusha
pop
sub
jo
std
sub
adc
mov
lret
ljmp
jge
adc
ret
loop
push
out
fisttpl
sub
out
orl
sbb
mov
rclb
push
jno
or
movsb
adc
xchg
cwtl
arpl
shrd
sbb
inc
repnz
push
popf
mov
lcallw
rcrb
dec
push
stos
nop
lock
sbb
push
shll
cmp
iret
pop
sub
pop
adc
jo
push
or
gs
inc
jge
cwtl
jg
mov
mov
mov
mov
sbb
int3
xchg
mov
inc
cmc
xor
shll
xlat
js
sbbl
fdivl
inc
push
out
pop
ret
adc
push
in
mov
push
iret
push
cmp
jmp
push
movsl
inc
xchg
js
sbb
push
and
daa
push
mov
pop
cmpsb
inc
xchg
inc
test
aad
nop
add
cmp
mov
mov
repnz
divb
dec
xchg
and
add
es
int3
ljmp
fildl
outsb
jno
cmc
mov
xorb
jmp
mov
push
iret
iret
lods
out
loopne
sbb
lds
dec
lret
push
shl
adc
cmp
lods
aas
mov
xchg
dec
push
xor
imul
dec
test
pop
mov
mov
lods
test
rorb
hlt
lahf
daa
jns
xchg
dec
dec
mov
xchg
xchg
xchg
xor
mov
jl
outsl
cmc
inc
jg
ljmp
inc
mov
push
push
in
mov
js
popf
mov
xor
jbe
insl
lock
aaa
push
clc
in
xlat
jp
adc
scas
cmpsb
out
xor
or
in
std
pop
pop
arpl
movsb
cmpsb
push
sbb
mov
add
add
mov
nop
push
jle
pop
in
jle
test
sbbl
mov
mov
push
sub
scas
and
stos
push
notl
negb
pop
cmp
sub
or
into
inc
jae
mov
insl
pop
adc
xor
in
stos
test
insb
jecxz
cmc
les
stc
jmp
les
adc
mov
inc
lds
mov
mov
xchg
in
enter
and
les
ja
and
adc
sbb
inc
cmc
inc
out
and
sbb
repz
fs
repnz
in
inc
out
pmaxsw
xchg
push
ret
and
xchg
sub
aaa
int
addr16
inc
pusha
cmc
sub
call
push
dec
ror
movsl
and
dec
dec
push
mov
lods
scas
clc
mov
or
mov
mov
and
mov
cltd
je
sub
std
sarb
sbb
and
mov
repz
dec
shlb
arpl
call
icebp
fistpll
add
cmp
ja
shrl
stos
jo
sbb
push
jno
bound
sub
jnp
jge
adc
lods
out
or
stos
leave
jnp
fdivrp
out
or
pushf
pop
and
pop
fwait
pop
testl
in
push
dec
mov
outsb
fcompl
stc
inc
mul
lds
loopnew
mov
push
push
ja
xchg
mov
sub
pop
das
mov
inc
jae
data16
mov
cmpsl
xor
mov
bswap
movsl
sbb
xor
push
inc
push
out
in
push
mov
pop
and
test
shll
mov
xchg
mov
push
scas
pop
sbb
in
lret
push
nop
lea
jnp
ret
scas
hlt
stc
dec
sti
jl
loop
xor
inc
push
push
cmp
jnp
mov
cltd
fstpl
sarl
ret
or
fbld
sub
adcw
imul
cs
mov
cmpsl
pop
xchg
stos
mov
mov
repz
sbb
cs
cmc
jl
call
mov
movsl
out
push
cmc
dec
push
jmp
sbb
pop
scas
xor
fadds
lods
mov
mov
add
andl
xchg
and
rcll
mov
mov
push
in
add
and
or
dec
outsl
push
fidivrl
lahf
sbb
or
cmp
sti
cmp
jle
test
addr16
mov
dec
leave
cmpl
testb
dec
dec
sub
fisttps
mov
sahf
icebp
aam
mov
addr16
dec
push
je
cmp
ja
insl
mov
leave
jo
ja
in
mov
add
stc
mov
bt
cmc
push
pusha
cmpb
lea
jb
push
lea
jne
neg
bts
bsr
xor
aam
mov
pusha
add
mov
movw
pusha
mov
lea
jmp
cmp
and
sahf
xchg
stos
add
jne
xor
int3
push
les
xor
mov
outsl
addr16
jl
dec
xor
add
push
outsb
xchg
cmp
push
sahf
int
adc
ljmp
sbb
call
inc
cltd
adc
xor
mov
or
addr16
mov
pop
pop
stc
in
divb
popa
out
jnp
pop
adc
push
cli
jnp
mov
ret
out
dec
test
fldenv
lock
inc
std
icebp
cltd
mov
cmp
popl
inc
push
clc
add
adc
push
add
mov
adc
js
cltd
movsb
xchg
xchg
jp
pop
xchg
or
cwtl
jp
popw
fwait
cmc
add
cltd
scas
out
adc
dec
int3
fnstenv
mov
test
push
dec
mov
xchg
data16
andb
insb
mov
xchg
mull
xchg
ja
dec
jle
repz
jns
and
sbb
insb
pop
je
outsb
enter
jmp
ds
insb
into
icebp
sbb
pop
push
sbb
cwtl
cmp
xchg
ljmp
stos
push
in
pushf
cmp
or
in
mov
cmp
xor
push
pushl
lea
jmp
ds
push
adc
sub
cwtl
sbb
pop
xchg
pop
xor
cmc
add
ss
out
sbb
jmp
cmp
xor
push
jge
mov
push
adc
xchg
sbb
or
dec
and
loope
jbe
leave
push
icebp
mov
pusha
sahf
loop
inc
mov
call
in
mov
xor
adc
mov
adc
mov
push
rcll
lahf
add
cwtl
add
sbb
repnz
vmread
sub
xor
mov
cltd
frstor
mov
or
pop
pop
out
add
sbb
mov
testl
xchg
mov
in
orb
mov
mov
pusha
lea
jae
call
pusha
mov
lea
jb
cmc
bt
cmpb
jmp
pushl
lea
je
clc
sub
test
cmp
pusha
call
xchg
out
inc
add
mov
insl
repz
push
cmpl
dec
push
or
jne
call
or
icebp
mov
xchg
inc
test
stos
pop
adc
cmp
aas
stos
push
or
rolb
aad
inc
fldenv
and
shrl
inc
outsl
movb
fnstenv
fucom
pop
cltd
fcoms
repz
jl
pop
and
cwtl
das
sub
test
dec
stos
call
pop
xchg
jbe
or
xor
loop
flds
and
mov
xchg
mov
sar
jnp
inc
push
push
mov
daa
mov
js
popf
xor
push
aam
jmp
jnp
lds
mov
dec
sub
push
aas
add
cmpsb
lock
shl
das
mov
movsb
mov
mov
std
and
enter
ds
mov
xchg
not
fwait
add
sub
mov
lds
mov
xchg
cmp
icebp
xor
andl
popf
lea
xchg
ffreep
test
adc
stc
and
pop
add
sbb
and
inc
hlt
sti
cmp
lret
in
movsl
xchg
mov
cltd
jns
inc
cmpl
and
clc
mov
sbb
std
loop
call
or
or
rorl
and
mov
js
ret
mov
jl
jae
test
xchg
mov
push
mov
and
mov
stc
stc
test
call
mov
movb
pushl
ret
push
test
sub
cmp
pushl
popl
bt
stc
stc
cmp
pushf
pusha
lea
ja
neg
and
jmp
jmp
add
mov
inc
movsb
jp
push
aaa
or
aam
out
pop
popa
jb
add
aam
lds
testl
or
lock
test
pop
insb
jno
pop
addl
cmp
jecxz
mov
cmp
xlat
sti
cmp
dec
sahf
data16
dec
cmp
popa
dec
xchg
jmp
inc
lods
cltd
gs
and
testb
dec
jmp
cmpsl
dec
rolb
popf
cld
inc
pop
push
jg
mov
jb
cmp
mov
cwtl
mov
mov
xor
fisttpl
out
shll
or
lods
mov
lret
mov
test
sbb
rcrl
inc
je
mov
adc
int3
imul
pop
xchg
mov
push
mov
stc
in
push
cmp
add
push
adc
fs
cmp
or
inc
std
xor
in
mov
jno,pt
lahf
sub
in
stc
and
push
mov
dec
enter
sbbb
inc
dec
scas
sbb
arpl
mov
sub
fcmovnu
xchg
mov
xchg
sbb
mov
mov
jmp
imul
popa
fmull
lods
or
jmp
loopne
and
fwait
pusha
xor
jo
mov
mov
arpl
or
insl
xchg
dec
fwait
test
cmc
mov
adc
pop
cmc
push
out
data16
sub
or
inc
nop
add
cli
inc
lods
data16
jle
loope
sub
pop
dec
push
out
fnstsw
out
out
and
fcomps
es
sbb
xchg
in
push
lret
or
ds
adc
mov
seta
call
pushl
pusha
dec
pushf
pushf
call
scas
mov
je
xchg
lret
aaa
cmp
jno
data16
stc
dec
xchg
or
jmp
andl
mov
gs
shrb
ja
stos
test
mov
adc
daa
sub
out
clc
es
push
dec
fs
scas
ds
push
les
xchg
pop
das
cs
call
dec
sbb
psllq
xor
sbb
sbb
dec
pop
shrb
aad
imul
sbb
or
push
jge
mov
es
pop
xchg
jne
push
stos
push
test
dec
ja
or
add
jae
add
in
or
add
jmp
inc
lea
push
push
pushf
pushf
lea
call
call
pushf
lea
je
pusha
movb
pushf
adc
mov
pushf
lea
jmp
les
mov
movsb
je
gs
lret
and
xor
stc
cli
push
push
sub
pop
sbb
sub
cmp
mov
int3
mov
into
jo
sbb
lock
inc
out
push
test
call
add
xor
movsb
popa
adc
mov
mov
adc
ja
inc
adc
stc
test
fidivrl
jge
pushf
and
jae
jg
imul
mov
xchg
inc
mov
mov
in
outsb
jg
shll
jg
dec
pushf
cvtps2pi
mov
ficompl
frstor
hlt
xchg
mov
pop
jmp
and
dec
dec
addb
xlat
push
and
aaa
jo
push
sub
mov
inc
lret
inc
sbb
adc
xlat
inc
loope
nop
dec
hlt
pusha
jl
dec
popa
pop
fnstcw
loope
fsubrs
push
sbbb
imul
aad
in
mov
pushf
call
jg
lods
mov
and
adc
cmp
xor
xchg
dec
popa
test
aad
cmpsl
mov
roll
and
lods
fsubrl
leave
lock
daa
sub
push
mov
cmp
jne
mov
xlat
enter
xlat
or
jae
std
call
iret
sbb
repnz
add
and
out
inc
gs
mov
mov
lret
iret
adc
lcall
sar
xchg
pushf
cli
cs
fisubl
ljmp
add
mov
jmp
bsr
mov
xor
jo
jl
pop
lock
lods
add
in
mov
xor
cwtl
loop
push
jge
outsl
jae
loope
shlb
cmp
xchg
fstpt
dec
shrl
leave
cmp
subl
mov
out
jns
jns
pop
scas
cmp
mov
xor
push
sbb
mov
or
push
cwtl
int
inc
adc
adc
xor
arpl
lods
ret
fdivs
rcrl
pop
xor
aad
mov
cmp
adc
and
push
sbb
mov
orps
jnp
enter
sbb
xchg
adc
test
jmp
movl
cwtl
inc
mov
sub
pop
loopne
xlat
add
lahf
out
adc
out
sub
mov
call
movsb
insb
fbld
mov
movsl
add
adc
test
fidivl
popa
adc
xchg
jmp
mov
xor
xchg
movsb
mov
mov
arpl
push
push
add
fistpll
das
mov
cltd
in
repz
test
cld
loop
repnz
mov
enter
fxch
pop
mov
push
rclb
adc
mov
es
outsb
jbe
inc
in
cmp
or
inc
dec
arpl
btr
mov
inc
cwtl
xor
mov
aad
hlt
dec
rorl
cmp
sub
mov
push
mov
lahf
bswap
movsbw
lea
pusha
pushl
jmp
daa
and
lea
loope
pop
mov
jp
xchg
xor
movsl
fstpt
dec
lock
xor
push
adc
mov
mov
pop
mov
data16
call
out
pusha
push
js,pt
or
or
loopne
jbe
xor
mov
aas
cmc
push
adc
int
jae
mov
mov
pop
int3
jl
pop
push
cwtl
jne
dec
jg
sbb
xchg
fsubr
add
rcrl
xchg
adc
fs
in
rcrb
mov
cmpsl
stos
xor
jmp
stos
mov
out
add
xor
adc
xor
jmp
adc
mov
fists
mov
xchg
and
sub
mov
sub
or
imul
shll
mov
movsb
and
in
mov
jae
clc
lock
in
fcmovnu
pop
dec
push
outsl
pop
imul
mov
cmp
xchg
into
push
lea
xchg
adc
sub
push
jae
int3
xchg
les
pop
mov
sahf
je
aad
in
in
push
or
scas
repz
push
lcall
testb
sbb
adc
cmpsb
mov
adc
pop
call
pushl
sbb
in
sbb
cltd
call
movsb
mov
dec
sub
icebp
inc
ret
mov
loope
sbb
mov
mov
pop
sbb
sub
nop
xchg
inc
popf
sbb
push
inc
jbe
xchg
dec
or
std
jle
sbb
inc
in
gs
subl
mov
xor
add
jmp
in
imul
dec
js
adc
test
jnp
mov
outsl
sbb
jno
cmp
mov
and
scas
jno
incl
xor
inc
or
ret
xchg
cmp
aam
aam
and
gs
sbb
call
push
push
fstpt
out
adc
mov
pop
iretw
fnstcw
and
cwtl
sub
jne
test
insl
mov
cmpsl
mov
ja
popf
push
pop
mov
shrl
xor
mov
push
cmp
js
mov
xchg
lods
inc
sub
push
lea
mov
mov
das
paddsw
insb
cmp
stc
inc
cmp
movsb
inc
in
jg
pop
movsl
jle
inc
leave
xor
mov
sbb
leave
mov
inc
inc
jmp
test
popf
adc
add
test
out
dec
sbb
fidivrs
mov
hlt
cmc
adc
mov
xlat
cmp
fbld
sbb
push
jb
outsl
adc
repnz
xlat
sub
stos
pop
inc
arpl
xchg
xchg
test
mov
or
out
les
arpl
add
and
psubw
add
adc
mov
mov
addl
mov
adc
add
cmp
in
mov
sub
mov
mov
adc
cmp
aas
cmp
addl
cmp
mov
lods
add
mov
jg
lahf
scas
jno
fwait
ja
sbb
pop
mov
ret
into
shl
sahf
cli
jb
decb
cmp
adc
pop
cwtl
ds
and
pop
mov
or
cs
dec
loope
icebp
add
shl
sahf
cli
testb
scas
jne
push
aam
adc
add
loop
loope
lahf
jns
pop
mov
or
push
fdivs
int
sub
mulb
jg
xorl
in
mov
aaa
push
iret
scas
movsb
mov
adc
push
xlat
pop
xchg
or
sub
or
push
fcoml
in
je
or
inc
lods
mov
mov
sahf
test
jae
scas
pop
adc
lods
cltd
ret
std
mov
mov
leave
movsl
sti
pop
xor
jns
movsl
das
sbb
adc
loopne
adc
movsl
js
pusha
aam
test
cmp
ret
jae
sub
xlat
mov
fsubs
subb
jge
aas
add
int3
movsb
rcl
cmp
pop
testb
push
inc
jnp
das
xor
mov
sahf
or
std
dec
jno
push
in
mov
push
fisubrs
int3
movsl
enter
jl
push
or
sbb
hlt
mov
or
mov
mov
jecxz
loop
and
sti
in
shrb
inc
sbb
imul
cld
out
aad
or
ret
leave
lock
cwtl
push
adc
adc
ficompl
mov
mov
aad
clc
pop
mov
pop
out
push
mov
dec
dec
mov
pop
sub
mov
je
pop
adc
fdiv
movsl
cmp
fldcw
scas
mov
pop
xchg
pusha
outsl
push
sbb
in
and
cmc
mov
xchg
inc
fists
cli
mov
int3
loope
stos
jns
add
push
movsl
adc
mov
pop
aas
loop
and
mov
test
ja
data16
dec
rep
push
mov
ja
jl
inc
pop
mov
inc
data16
repz
jge
add
xorl
cltd
cmp
addb
cmp
xor
popf
andl
jnp
push
jl
popf
mov
stos
sbb
jp
pop
and
mov
aaa
jae
jns
mov
enter
adc
test
push
adc
repnz
push
pop
or
push
xchg
gs
jecxz
addb
cmp
xchg
inc
loop
jnp
pop
or
lods
mov
cmp
mov
and
cmp
test
stos
mov
rep
or
lret
clc
jle
dec
in
sarl
jno
popf
inc
add
repz
sbb
xlat
roll
idivl
cmp
jne
adcb
or
test
mov
sbb
inc
cmp
jbe
aaa
mov
pop
lret
imul
mov
pop
stc
fsubr
mov
jmp
rcl
sbb
lret
cmp
mov
pop
out
adc
lahf
mov
cmp
daa
xor
ret
mov
dec
lods
imul
hlt
imul
movsl
imul
jns
loop
arpl
jmp
adc
stc
inc
inc
adc
pop
test
pusha
dec
mov
movaps
or
adc
mov
or
jne
into
xor
cltd
ss
fmuls
call
sub
sbb
shrb
add
or
enter
inc
aaa
xor
fwait
mov
xchg
or
inc
mov
dec
test
fisubs
mov
xchg
loopne
popa
pusha
fwait
lcall
pop
mov
pop
xlat
push
dec
je
xor
jmp
stos
mov
xor
push
cwtl
push
movsl
sbb
in
adc
fs
loopne
inc
dec
xor
xlat
sbb
add
int
fisubrs
xchg
and
inc
adc
sub
add
cmpsb
mov
sub
sbb
sahf
mov
pop
mov
lods
or
pop
mov
cmc
cltd
pop
push
adcb
icebp
clc
fnstenv
insl
jne
repz
pop
inc
mov
mov
adc
imul
xchg
sub
cmp
pusha
call
or
cmc
mov
push
popa
je
pop
in
mov
jp
repz
fsubl
mov
sti
movsl
inc
and
adcl
xor
xlat
cmpsb
and
in
dec
lds
es
loop
and
jp
xchg
test
mov
cwtl
xchg
popa
jl
ret
test
and
xchg
popl
stos
inc
or
mov
loopne
mov
jmp
cmp
cmp
into
inc
rcll
inc
dec
mov
ret
cwtl
sbb
adc
lea
xor
clc
dec
sub
mov
or
jle
xchg
adc
dec
pushf
or
dec
stos
es
push
stos
sbb
in
mov
cmp
in
xchg
bound
adc
div
push
rcrl
adc
dec
dec
icebp
in
sbb
jo
xchg
scas
loop
cmpsl
lds
pusha
jge
pop
inc
inc
xchg
cld
inc
xor
js
push
repnz
xor
or
repz
cmp
test
lods
sbb
movsl
xchg
ret
outsl
adc
cmp
mov
xor
out
sbb
ret
data16
xchg
xor
test
jg
sahf
jns
adc
sub
iret
pop
adc
mov
idivb
adc
cmp
push
fisttps
sub
mov
pusha
pusha
mov
xchg
push
pushf
push
pushf
dec
cmp
shl
lea
jne
pusha
lods
pusha
stc
cmc
not
cmc
bt
pushl
jmp
push
add
sti
cmp
adc
dec
stos
setp
es
dec
popa
cmp
insl
sbb
mov
fcomps
cmpl
loopne
hlt
daa
cmc
lret
frstor
sub
mov
clc
sbb
xor
jmp
scas
mov
mov
mov
fsubrl
popa
cmp
push
jnp
lret
jle
rolb
cmp
mov
lcall
in
and
mov
stc
add
add
insb
out
push
shll
dec
jnp
pop
inc
sbb
lret
jg
sub
test
imul
mov
xor
outsb
adcb
cmpsb
in
mov
pop
ljmp
pop
jmp
inc
mov
mov
pop
adc
adc
xor
add
pop
xchg
test
lahf
jae
or
mov
push
shll
cmp
pop
mov
lods
xchg
rorl
les
mov
xchg
or
insl
push
cmp
cmpsl
es
dec
js
sub
fisttpl
cmp
mov
xchg
das
pop
mov
iret
sbb
fldt
add
rol
sbb
insb
imul
jo
cmp
rolb
lcall
das
dec
leave
shlb
insl
outsb
mov
mov
fnsave
cmpsl
push
filds
xchg
popa
sub
mov
test
or
jns
dec
icebp
jno
add
push
push
aad
mov
fistl
lahf
les
int3
testb
fcomi
jge
dec
adc
sub
test
mov
movsl
gs
in
mov
clc
test
cmp
mov
call
loope
sbb
sbb
xchg
out
mov
mov
call
out
push
mov
jo
jb
push
pop
sub
push
add
jmp
cmp
jl
repnz
xor
inc
scas
aad
and
imul
pusha
arpl
mov
dec
test
push
mov
outsl
imul
stc
outsl
sub
pop
push
mov
pusha
arpl
int3
cmp
xor
push
outsl
stos
cmp
sub
add
popa
ret
test
cmp
cmp
lea
jecxz
decb
mov
ret
inc
lock
call
pop
out
cmp
xor
inc
xchg
jno
cltd
mov
lret
xor
xor
sbb
and
add
loop
outsb
mov
in
mov
mov
repz
adc
pop
aam
jo
out
iret
adc
mov
cmp
gs
inc
out
popa
in
inc
ret
push
arpl
jge
xchg
mov
dec
push
add
mov
jo
pop
cli
mov
jae
sahf
push
mov
add
rcr
push
mov
inc
cmp
pop
shlb
add
fucom
cmpl
sub
jae
in
push
imul
addr16
sbb
mov
jnp
mov
ficoms
jmp
inc
fwait
jg
dec
lods
in
mov
push
ds
jne
inc
cmpsl
in
sub
enter
inc
mov
loopne
jno
shrb
ljmp
pop
cwtl
popw
push
shlb
push
test
jp
pop
fdivrl
ljmp
jb
cmp
mov
add
dec
dec
das
aad
xor
shll
lret
sub
outsb
repnz
gs
mov
inc
sbb
in
mov
mov
fmull
aad
mov
jmp
in
mov
pushf
lea
call
cmc
push
sub
movb
pushf
jmp
pop
aaa
out
inc
imul
into
fsub
mov
jne
pop
mov
mov
push
pop
lock
pop
push
push
in
stc
pop
xchg
scas
sub
pop
push
loopne
addr16
fldcw
cwtl
in
pop
mov
cmp
pop
out
xlat
mov
lea
fsub
movsl
sbb
pop
cmp
xchg
xor
pop
push
sbb
sbb
ljmp
mov
adc
mov
sub
rorb
mov
jb
outsb
sub
mov
pop
pushf
jp
sbb
sahf
sbb
jnp
mov
lcall
jne
mov
adcl
mov
sub
or
test
dec
mov
or
xchg
shl
call
sbb
add
xchg
jmp
pop
xor
inc
pop
incb
cmp
pop
test
mov
mov
arpl
pop
fldcw
popf
push
orl
fs
jne
rcl
shld
mov
lea
bsr
test
lea
sub
shl
not
mov
push
bt
sub
test
clc
pushl
popl
cmp
pushf
cmp
pusha
lea
ja
clc
cmp
sub
cmc
bt
shr
add
cmc
mov
xor
rcl
inc
mov
stc
stc
repnz
jmp
pushf
lea
je
pusha
movb
bt
add
movb
pushf
cmp
jmp
mov
ror
mov
push
movb
mov
ror
mov
test
pusha
jmp
inc
and
mov
pop
mov
xor
fdivl
cmp
rol
pop
test
sub
and
mov
arpl
and
icebp
das
repnz
in
fstl
push
inc
jbe
vmread
mov
sub
jp
cwtl
xor
mov
out
cmp
clc
adc
sbb
cmp
adc
or
dec
call
sub
bnd
pop
arpl
sub
pop
dec
pop
in
leave
fisubs
push
inc
cmp
jmp
push
dec
cmp
mov
repz
ret
in
mov
out
or
popf
push
inc
dec
ret
jmp
sub
inc
testb
xorb
rcrb
xor
mov
lea
pop
mov
xchg
sbb
aam
jnp
std
insl
push
aad
lock
aad
ss
xchg
je
aas
pop
fcmovnb
cmpl
jnp
cmpxchg
mov
push
xor
cmp
push
in
mov
enter
fstpl
xchg
cld
xor
das
pop
gs
sahf
hlt
pop
sbb
jo
inc
mov
clc
inc
sbb
push
or
or
adc
insb
shll
insl
mov
sti
pop
jmp
addr16
xor
push
xor
mov
jge
xor
dec
adc
pop
xchg
sub
or
push
pop
mov
jg
push
mov
cwtl
push
xchg
sbb
adc
push
xchg
add
in
mov
setge
pushf
movb
movsbw
mov
push
lea
call
dec
lret
pop
pop
mov
xchg
movsb
jne
xor
data16
sub
addr16
mov
arpl
fwait
jecxz
add
aas
les
loop
cmp
pop
jmp
xchg
push
lods
and
fstl
iret
pusha
es
jae
xchg
imul
adc
repz
jge
hlt
notb
jecxz
xor
fcmovnu
xchg
fstp
cmp
fwait
movsb
mov
popa
push
jns
cltd
in
pop
into
lea
dec
cmp
mov
std
adc
lret
movsl
mov
cld
dec
cmp
aam
add
xchg
jb
das
out
daa
or
imul
sub
cmc
mov
sub
adc
jp
std
shll
lods
xchg
out
push
imul
jg
pusha
insb
inc
pop
mov
push
in
mov
bt
cmc
repnz
pushf
pusha
lea
jne
bswap
movb
jmp
clc
repnz
pushl
lea
jne
stc
sbb
sbb
mov
shl
inc
adc
sub
shld
xor
rcr
mov
call
jle
movsl
push
cmp
cmpsb
xor
int
ret
adc
ds
add
pop
adcb
pop
daa
sbb
xchg
out
aaa
test
out
fsts
add
popa
aaa
das
or
jbe
lcall
ror
cmp
jo
inc
xchg
adc
lock
lods
mov
cwtl
and
addr16
inc
jmp
dec
push
popf
and
pop
mov
push
push
cmp
mul
jne
arpl
pop
cmp
jge
adc
jbe
mov
gs
sahf
imul
test
cmp
pop
loopne
xchg
inc
inc
test
inc
in
icebp
in
xor
mov
jmp
push
adc
mov
gs
aam
xor
ja
and
pop
xchg
add
mov
ljmp
orl
dec
notl
mov
and
fmul
xchg
fs
aaa
jl
std
shll
ja
leave
push
mov
lods
jo
or
mov
addl
xor
sbb
popf
into
push
mov
xchg
mov
int3
cli
ljmp
movsb
outsb
lock
mov
jp
subl
cwtl
fisubrl
js
cmp
popa
cs
xchg
xchg
jno
mov
aad
outsb
sub
inc
mov
dec
mov
in
fnstenv
insl
scas
jp
pop
shlb
in
mov
mov
and
add
int3
mov
xchg
mov
or
push
push
mov
shl
lods
sahf
sbb
or
or
movsb
fmull
in
sub
icebp
scas
and
jne
jno
daa
test
movb
inc
lcall
inc
jl
pop
adc
adc
lods
bound
push
jmp
cltd
sbb
insb
ss
mov
fisubs
add
cmpsb
and
jp
mov
xchg
inc
adc
inc
or
cmp
mov
cmpsb
sbb
pop
mov
ss
jp
loope
sbb
rorl
ret
push
aas
cltd
ret
addr16
sahf
mov
enter
daa
xor
sub
push
mov
jge
sbb
jge
add
add
lahf
imul
jnp
add
mov
xchg
jp
lock
les
jne
or
js
push
sbb
adc
lods
jmp
test
outsb
mov
jmp
in
mov
sub
dec
push
lock
inc
adc
shll
mov
mov
push
mov
dec
jae
mov
pop
scas
lea
addr16
ljmp
cmp
mov
mov
jl
out
push
lods
dec
xchg
je
pop
push
insl
sub
pop
mov
xchg
mov
jnp
loop
dec
in
mov
fistpll
mov
mov
call
bswap
movsbw
mov
jmp
sub
lea
rolb
das
cmp
cmpsb
aad
jne
xchg
push
je
mov
mov
js
mov
gs
das
cld
xor
ds
and
in
lahf
ljmp
inc
jne
jo
push
jl
cmc
adc
xor
mov
daa
shlb
jbe
shr
fnstsw
inc
jnp
repz
enter
jae
ret
sti
imul
stc
rcrl
xchg
lret
lret
xchg
pop
and
xchg
fs
stos
or
sarl
dec
pop
movsb
cmp
imul
push
add
dec
clc
sbb
push
mov
out
mov
xchg
push
outsl
in
mov
imul
lods
test
inc
orl
sub
ret
cwtl
cwtl
mov
inc
or
lds
fidivrs
xchg
js
sar
pop
mov
xchg
std
sub
dec
shll
inc
adcl
fsubs
and
push
imul
sub
push
mov
push
mov
int3
xchg
inc
sahf
and
mov
sti
stos
and
add
or
in
push
loop
scas
outsl
icebp
in
pop
sub
mov
add
pop
jnp
les
mov
mov
insl
iret
je
out
push
pusha
push
mov
jae
loope
push
mov
jno
cmpl
dec
jmp
push
enter
sub
popa
or
adc
or
mov
call
iret
ss
xor
cmp
out
push
roll
arpl
jp
pop
adc
lock
stos
scas
or
ja
popa
rol
cmpsb
insb
mov
popa
in
or
and
mov
lret
jns
xchg
out
mov
and
or
cs
push
push
stos
mov
mov
dec
jmp
lret
maskmovq
idivl
add
nop
imul
sub
idivb
xor
outsl
xor
xchg
shrl
jmp
mov
and
xor
sub
dec
into
xorl
jb
aad
sarb
loop
xchg
sub
lock
cmpsl
mov
dec
call
fadd
sub
pusha
sub
je
fucomip
xchg
arpl
outsb
pop
mov
push
xchg
aas
test
stos
push
scas
icebp
pop
int
bound
jno
es
sub
ret
cmpsl
push
pop
jmp
test
sbb
pop
fwait
dec
in
adc
mov
jmp
outsl
int
lret
mov
mov
out
xchg
nop
dec
dec
mov
das
inc
fcoml
adc
pop
mov
js
pop
mov
and
cmp
mov
ja
mov
dec
pusha
jae
inc
stc
push
and
scas
sub
push
sbb
mull
repz
aaa
jg
mov
dec
in
fidivs
addl
add
jg
lret
inc
daa
and
imul
adc
stos
fdivrs
les
ja
cmp
gs
cmp
and
in
mov
mov
mov
lea
call
pusha
jmp
mov
mov
dec
dec
fldcw
pop
fsubs
xchg
popa
xchg
bound
dec
addr16
inc
mov
cmpb
pushf
stos
dec
lock
and
jmp
in
or
icebp
xor
pop
sbb
cld
push
rcrl
shll
lods
pop
popf
push
mov
dec
add
jne
adc
dec
cmpsb
das
adc
and
pushf
imulb
leave
mov
test
pop
mov
cmc
push
jb
icebp
js
pop
mov
jecxz
mov
imul
popa
mov
xchg
pop
adc
dec
sub
cmp
or
push
inc
push
daa
mov
xor
mov
lahf
adc
inc
jecxz
xchg
or
mov
push
push
pop
popa
sbb
loopne
das
lods
mov
mov
call
push
xchg
aaa
jae
in
cmp
pop
add
inc
ja
xor
test
jg
pop
test
sbb
push
cmpl
mov
ljmp
daa
push
xchg
push
mov
xchg
arpl
jge
jb
jne
enter
jb
push
in
push
test
gs
js
lock
jne
cmp
xor
jge
jg
scas
rolb
mov
mov
scas
inc
push
outsl
mov
push
sub
push
cmc
in
mov
clc
and
mov
add
sub
jmp
bound
insb
aaa
xor
bound
add
shrl
movsl
push
jp
mov
ret
sbb
push
sbb
push
mov
test
icebp
cmp
mov
xchg
push
ret
shll
fcmovnu
xchg
das
pusha
fstpl
loopne
xchg
pop
cmc
nop
sbb
pop
div
mov
imul
fs
add
sbb
ljmp
repz
dec
inc
cmp
hlt
aam
xor
out
push
out
ds
mov
push
lea
out
rorl
sbb
mov
push
sets
movb
pushf
lods
cmc
clc
mov
not
clc
pushf
rol
pusha
jmp
call
lea
jne
not
movb
push
mov
push
lea
call
and
push
mov
fxch
add
repz
fstps
cmpsl
dec
lcall
and
rorb
into
xor
xchg
ret
adc
add
push
jno
popf
push
les
jg
xlat
cli
pop
mov
in
xlat
push
xchg
stc
or
addr16
mov
pushf
adc
adcb
or
es
jmp
jbe
jae
ja
sub
repz
cmpsl
out
orb
xchg
insb
push
pop
decl
add
jbe
lahf
shrb
int
sbb
pop
sar
out
xor
clc
jl
mov
ja
mov
push
xchg
sub
shl
fistpl
movsl
inc
call
cmpsl
or
sub
ret
cmp
insb
ret
dec
sahf
and
mov
lea
jne
xadd
mov
xor
shrd
test
sub
shld
inc
not
mov
test
pusha
pushf
cmc
sub
clc
pushf
pushl
popl
jmp
rol
shrd
sar
adc
mov
pusha
cmpb
call
bt
bt
cmc
cmp
push
pushf
lea
jbe
test
sar
shrd
sub
movsbl
mov
sbb
shrd
neg
jmp
pusha
xor
pusha
mov
pushf
push
lea
jmp
mov
xlat
dec
xor
jne
cmp
outsb
rcll
mov
pop
popf
fwait
enter
push
aaa
xor
add
xchg
mov
in
or
cmpsl
mov
inc
jp
fbstp
push
aaa
jg
xorl
out
mov
mov
and
mov
call
adc
scas
stos
scas
add
lods
ljmp
sub
pop
mov
pop
cld
scas
dec
lahf
test
xchg
jnp
mov
mov
cli
push
xchg
xchg
mov
dec
inc
dec
jns
pop
push
fnstcw
popa
test
mov
mov
jno
ljmp
jl
and
pop
mov
std
ja
mov
lahf
dec
cmp
repnz
jl
push
fdivrs
sub
aaa
scas
lahf
outsl
gs
jecxz
and
test
sub
stc
xchg
aaa
sub
jae
mov
stos
bound
xor
pushf
mov
insl
jnp
xchg
jne
sub
js
or
mov
dec
add
fdivs
scas
pusha
xor
mov
dec
test
jno
mov
stc
lret
fs
xorb
mov
popa
insl
cmp
xchg
pop
movsl
in
mov
jno
mov
imul
gs
xor
push
out
enter
mov
push
movsl
clc
ret
sbb
cmp
movsl
adc
jae
xor
inc
xchg
das
flds
ss
mov
push
pop
cld
je
out
jle
lea
nop
shll
and
add
daa
add
and
das
movsb
rcrl
mov
mov
jmp
push
add
out
aas
jne,pt
loope
into
in
aad
dec
repz
fsubr
jl
push
pop
sub
push
in
leave
lahf
ficompl
xor
sbb
pop
add
pop
fdivrs
xchg
lahf
aam
mov
xchg
or
jmp
pop
push
in
mov
inc
outsb
push
int
pop
loopne
inc
nop
and
lcall
xor
jle
call
push
fiadds
mov
jae
push
cwtl
mov
test
xchg
dec
repz
in
mov
adc
sti
js
mov
ljmp
fmul
sahf
pusha
sub
jecxz
bound
enter
fcmovu
stc
dec
xchg
in
mov
aaa
call
jns
push
call
stc
call
mov
xor
insb
icebp
sub
jl
movsb
in
pop
add
cld
sub
js
push
push
aam
and
stos
mov
das
icebp
nop
sub
daa
add
cmp
mov
push
mov
inc
push
mov
adc
lds
or
inc
lods
jmp
sti
movsb
daa
inc
mov
and
mov
cmp
cmp
sbb
mov
pusha
add
mov
sbb
sbb
cld
bound
sti
and
pop
repz
mov
cld
and
sub
sub
jecxz
adc
adc
cmp
mov
push
cmp
mov
cli
dec
or
icebp
or
int3
pop
stc
pop
pushf
repz
xchg
dec
scas
xor
cmpsb
add
into
das
ds
inc
dec
std
popf
mov
insl
add
les
jns
or
xchg
dec
scas
aas
sbb
ret
dec
repz
roll
call
pop
xor
popa
jge
sbb
pop
jne
fs
sbb
adc
lods
adc
push
inc
mov
add
mov
out
stc
jns
pop
rclb
pop
jp
das
mov
dec
lods
push
inc
mov
lahf
dec
es
inc
in
fldl
cmpsb
push
ret
inc
push
jnp
mov
mov
xchg
retw
pop
popa
push
inc
mov
mov
jns
sub
lds
dec
and
les
mov
int
imul
movsb
adc
icebp
ss
pusha
pushf
frstor
negl
cli
inc
pop
stos
xchg
movsl
pushf
push
pop
cmp
or
gs
int3
ja
inc
outsl
xchg
in
mov
adc
mov
test
push
mov
add
insb
in
shl
insb
jno
add
fidivrs
push
aaa
mov
je
fcmovnu
iret
out
jnp
dec
roll
xor
mov
sub
nop
push
pop
sub
adc
loopne
sarl
dec
imul
sub
and
cmpsb
inc
mov
push
fwait
jl
jmp
xchg
jo
mov
xor
lret
lahf
loop
leave
dec
pop
test
push
sub
bnd
mov
and
insb
lods
fdivrs
and
and
mov
mull
inc
aas
lds
push
cmp
shr
sbb
pop
icebp
lds
outsl
xchg
sub
mov
jecxz
stos
push
lcall
push
in
mov
jg
ret
mov
sbb
xchg
add
pop
inc
jp
sub
push
rclb
cltd
in
cmp
inc
pushf
lcall
xor
mov
or
xor
cmp
inc
dec
sarb
in
inc
ljmp
and
negb
sti
scas
inc
pop
cltd
lds
jg
scas
jb
jbe
push
rorb
mov
imul
push
jg
push
loopne
xor
adc
fcomi
aam
sarb
pushf
sbb
dec
enter
mov
aad
shl
rcrb
fadd
mov
and
jno
jnp
ljmp
adc
clc
push
loop
test
repnz
push
mov
lods
jae
in
mov
test
sub
pop
stos
movl
hlt
push
ljmp
jle
loop
dec
stos
or
adc
mov
inc
sub
sbb
lret
cs
cltd
clc
fstps
lds
bnd
cmpsb
leave
dec
sbb
pop
mov
movsb
xor
jl
and
outsb
add
fdiv
jge
in
test
adc
xor
js
adc
dec
sbb
cmpsb
and
lea
sub
xor
pusha
popa
out
xlat
or
mov
mov
mov
jle
and
cwtl
in
pop
ss
add
push
cmpsl
gs
les
sbb
nop
add
pushf
rol
push
gs
pop
push
push
repnz
lock
shrb
pusha
jecxz
cld
push
repz
or
sbb
or
mov
dec
mov
mov
test
ucomiss
leave
dec
pop
cmpsl
push
outsb
lret
sti
outsb
sbb
in
ljmp
and
xorl
stos
pop
dec
loope
dec
lea
xor
pop
mov
xchg
sbb
mov
pop
add
leave
jecxz
push
idiv
addr16
push
inc
and
nop
shlb
pop
iret
sbb
test
in
mov
stos
out
and
movsl
test
out
jnp
and
aas
aaa
test
insb
mov
cltd
aam
lock
cli
insl
js
inc
icebp
nop
cs
sub
shl
aas
sub
mov
pop
lret
jnp
ss
xchg
mov
into
push
xor
shl
push
push
push
sub
sahf
jle
clc
outsl
mov
notl
cmpsb
add
jl
sbb
xor
cmp
xlat
inc
jecxz
pop
pushl
iret
mov
sbb
bound
sarb
clc
sarb
or
mov
cmp
xor
jp
sub
xor
or
jbe
jb
jb
jnp
dec
in
mov
call
add
push
stc
clc
mov
pushf
cmc
test
push
call
lahf
cwtl
dec
jno
in
cltd
and
aas
mov
pop
dec
pop
ljmp
out
xor
pop
out
lret
lcall
cli
pusha
pop
lds
xor
pushl
mull
pop
mov
and
into
adc
inc
push
outsb
cmp
int3
int3
fisttps
and
imul
xor
icebp
sti
je
push
xchg
imul
and
inc
xchg
mov
mov
push
sub
enter
pop
movsl
iret
and
mov
xor
push
fs
ret
and
lods
enter
jge
mov
jl
imulw
pushl
cmp
mov
mov
movsb
fsubl
sub
inc
xchg
call
popa
movsb
and
cld
loope
aam
jge
lahf
sbb
pop
mov
push
popa
fs
jae
pop
push
mov
dec
ds
jecxz
mov
movsb
ljmp
jl
mov
adc
jbe
mov
inc
dec
push
xor
repnz
lods
cmp
loop
insl
inc
shl
icebp
rorb
adc
adc
into
adc
adc
sbb
lret
cli
aam
mov
rcr
js
scas
test
cmp
cs
dec
movsl
or
pop
ss
mov
and
mov
lea
dec
in
xlat
sahf
sub
xorb
adc
imul
rclb
in
mov
and
cld
lds
lret
nop
cmpsb
sahf
push
xor
rorb
fisttpl
out
pop
popf
fs
cmpsb
or
clc
repz
mov
cmpsb
and
fld
mov
push
das
sub
popa
test
or
xor
insb
and
test
xchg
mov
mov
test
jge
mov
ffreep
or
add
inc
adc
pop
in
insb
mov
mov
push
push
out
ret
fld
adc
dec
es
ss
and
mov
jns
into
sbb
aam
in
andl
mov
fistps
inc
imul
lret
or
scas
fs
xorb
imul
xchg
leave
jns
add
sub
loopne
dec
dec
scas
aas
lea
fisubrs
aam
sub
jbe
xchg
add
inc
sbb
and
insb
xchg
cwtl
mul
test
rcrb
add
jb
jne
daa
xchg
mov
dec
dec
xchg
div
imul
enter
xchg
in
adc
insl
mov
sbb
popa
jmp
sub
sub
shrl
insl
daa
leave
std
inc
rcll
dec
out
pop
jbe
fidivs
pop
mov
xchg
call
xchg
lods
add
and
lock
mov
mov
stos
test
xchg
pop
mov
mov
lods
mov
mov
mov
jb
outsl
inc
in
jns
inc
stc
sbb
rorb
adcb
cmp
and
cmp
pop
mov
in
pop
int3
add
mov
sahf
jl
add
testb
hlt
mov
fisttps
in
jbe
int3
sbb
cmpsb
pop
sbb
pusha
call
test
rcrl
in
mov
arpl
pop
sub
push
inc
pop
test
adc
mov
sbb
gs
nop
gs
and
push
fldt
ss
imul
sub
adc
hlt
dec
pop
stos
out
test
inc
mov
xor
mov
movsb
cli
pop
jnp
fiaddl
fsubrl
mov
jnp
and
or
mov
clc
js
push
jbe
fnstsw
pop
sub
sub
add
add
scas
dec
jp
insb
xor
push
repz
jno
repnz
shrb
cmpsb
cmp
js
dec
sub
rcrl
or
pop
adcb
jno
add
xchg
lds
and
pop
out
cmp
or
and
sub
push
cmpsb
adc
and
sbb
in
mov
in
or
dec
and
cmpb
ret
sbb
fistpll
and
imull
icebp
mov
stos
or
les
pop
cltd
mov
icebp
adc
jae
icebp
mov
add
xor
in
sub
mov
sbbl
sbb
mov
xlat
inc
sub
pushf
cmp
js
fsubs
neg
cmp
mov
and
jno
aas
fists
lods
cmp
in
mov
sub
mov
int3
sete
imul
rcll
out
jp
and
push
and
mov
lret
pop
inc
push
roll
jmp
shlb
jg
jne
sub
mov
dec
push
mov
int
pop
lods
adc
mov
mov
leave
hlt
mov
rcrl
test
inc
sbb
inc
dec
pushf
out
ljmp
test
inc
push
mov
adc
dec
mov
cmpsb
adc
jl
ficomps
pop
fldt
cs
jo
dec
in
mov
inc
dec
mov
cmp
lcall
sub
xor
les
mov
adc
sub
xor
aam
bound
pusha
jl
je
mov
pusha
jle
inc
outsl
pop
pop
xor
out
in
jo
jecxz
dec
or
xchg
xchg
mov
jge
std
loop
or
lock
mov
int
mov
shrl
hlt
out
insb
shl
cmc
push
and
movsl
inc
jns
lahf
mov
rcrl
push
pusha
rcr
xchg
lock
movb
jb
fidivrl
std
fdivl
shl
das
sub
adc
shll
in
sub
data16
or
fistps
add
arpl
and
pop
in
mov
inc
sbb
lods
push
aaa
mov
rcll
out
ds
xor
popf
and
adc
sbb
pop
out
inc
jecxz
inc
mov
leave
pop
sbb
jle
repz
mov
xchg
dec
ficoms
test
xor
xlat
add
xor
push
push
ljmp
xor
sbb
jmp
ret
sbb
shl
xor
imul
sbb
mov
adc
or
or
test
xchg
in
rolb
mov
orb
mov
mov
or
cmpsl
pop
cs
je
xchg
bswap
jno
sub
push
mov
mov
adc
in
mov
push
int
int3
jl
xor
jle
add
rclb
add
psubw
sbbb
adc
cli
scas
outsl
mov
adc
inc
inc
loope
mov
lock
mov
mov
lret
cmpsl
and
jmp
pop
mov
jge
push
push
lret
or
ffreep
lds
or
add
sbb
sbb
mov
ret
arpl
pop
andb
movsl
add
cmp
arpl
test
or
call
push
ret
add
push
shlb
cmpsb
inc
in
mov
dec
cmp
cld
jecxz
bound
stos
sbb
push
stos
push
mov
dec
movsb
test
sti
add
idivl
arpl
cmp
pushf
push
or
pop
cld
popa
jae
imul
pop
mov
inc
pop
fld
jmp
shl
or
inc
lret
out
ja
shll
out
push
push
inc
inc
stos
mov
shll
add
incb
mov
nopl
or
enter
enter
xor
xor
mov
cmpsb
cmc
mov
mov
add
imull
out
rcrb
fsubs
push
leave
insl
iret
add
aad
inc
rcl
out
fcompl
add
outsl
clc
xor
mov
enter
xchg
roll
xlat
sub
or
mov
mov
pop
xor
repnz
incb
dec
ljmp
jns
push
mov
and
dec
arpl
test
dec
jle
xchg
call
repz
bound
and
push
mov
hlt
inc
jle
mov
add
ss
imul
outsl
jo
std
mov
repz
scas
out
insb
loopne
mov
fiadds
fdivrl
js
jp
pop
mov
imul
xchg
ja
jg
cmp
mov
addl
cmpsl
test
pusha
jge
lds
push
mov
pop
lods
lret
xchg
leave
sub
mov
add
add
data16
add
test
cmc
clc
push
cmc
sub
pushf
cmp
cmp
cmc
cmp
push
push
jmp
dec
jbe
push
inc
je
insb
jae
aaa
push
bound
add
out
adc
sub
or
pop
and
loop
or
cmpsl
gs
xchg
test
ja
mov
sar
push
cmp
in
bound
jp
xchg
mov
xor
mov
mov
jne
icebp
or
icebp
sub
fs
es
fdivrl
out
xchg
xor
pop
xor
lock
rol
jo
mov
inc
nop
inc
adc
jp
jnp
inc
filds
xor
pop
dec
nop
shlb
testl
fstp
xchg
jns
adc
push
out
stos
sbb
or
or
nop
jg
daa
imul
pusha
add
pushl
lea
jmp
add
aad
scas
pop
icebp
cmpsb
mov
into
bound
inc
cmpsl
arpl
and
pop
addr16
out
repnz
leave
dec
stos
sub
les
jno
sbb
aaa
adc
fs
lds
in
cmp
xor
xor
add
pop
fs
insl
mov
movsl
sub
btl
in
js
mov
ss
js
mov
shr
pusha
shll
sbb
dec
imul
xlat
sub
sub
jge
fidivl
test
cmpsl
outsb
lret
test
mov
push
lret
je
dec
push
repz
sahf
and
push
idiv
mov
sub
cli
jns
dec
lods
sbb
mov
movsb
repnz
out
jbe
and
je
sbb
jmp
and
push
fcomip
add
xchg
sbb
stc
xchg
mov
shl
outsb
leave
into
fisttps
bound
ja
jg
or
pop
cli
test
movsl
add
mov
in
repz
shl
sbb
or
xor
push
xchg
stos
js
xorb
xor
add
sub
push
fstps
mul
xchg
cltd
jb
cld
cli
lea
hlt
out
sbb
pop
mov
std
popa
repnz
mov
inc
clc
roll
jg
xchg
daa
pop
xchg
je
push
pusha
fsubrl
sbb
imul
push
sbb
insl
in
pop
in
mov
sub
icebp
loop
inc
and
sub
lods
pop
fiadds
mov
mov
fistpl
sbb
sub
add
pop
xchg
rcrb
sbbl
idivl
stc
adc
mov
arpl
cli
mov
sbb
outsb
pop
or
mov
lret
inc
push
jmp
icebp
cmp
and
aas
call
lcall
subl
xchg
lcall
enter
leave
pushf
adc
sub
adc
scas
or
xchg
arpl
pop
xchg
loopne
ja
stc
mov
cmpsb
xlat
pop
or
pop
mov
mov
outsl
mov
popa
addl
pusha
mov
insb
movsl
scas
or
adc
outsb
in
xchg
or
and
scas
pop
mov
add
cmp
sub
js
pushf
movl
btc
mov
lea
btc
mov
setno
setp
mov
stc
call
ss
jmp
call
xor
push
lcall
addr16
pop
clc
in
loopne
xchg
jns
bound
rcrb
add
repz
jg
mov
ja
cs
mov
jge
inc
jb
mov
push
rclb
dec
out
xchg
lods
ss
int3
or
subl
mov
dec
push
mull
nop
das
sti
std
jge
ljmp
sti
inc
shl
scas
jne
leave
pop
mov
sti
fwait
cmp
push
mov
sub
test
ja
pop
cmpb
mov
ss
test
stos
add
ss
xor
ja
cli
shll
jae
jecxz
ret
push
negb
imul
jmp
fadds
cmpsb
xchg
push
ret
jno
in
icebp
dec
push
aas
xor
fmul
ror
xor
mov
xchg
pop
pushf
aam
aaa
icebp
sub
fcmovnu
jns
in
mov
fiaddl
inc
xchg
xor
dec
push
push
shlb
or
ljmp
loop
fnsave
mov
aad
sar
movsb
dec
pop
cs
xchg
repnz
test
pusha
and
and
mov
enter
mov
std
cmp
pop
in
mov
add
inc
inc
js
insb
inc
push
fs
jb
gs
imul
dec
push
cmp
xlat
cmc
add
scas
jo
sub
mov
push
cmp
test
pop
add
nop
cmp
movsl
ja
xlat
jmp
out
jmp
cmp
sbb
xchg
inc
mov
es
cmp
test
ret
dec
sub
xchg
lds
mov
sub
insl
push
idivb
jnp
xchg
mov
or
icebp
pop
sub
dec
fcompl
xor
cmp
idivb
mov
mov
call
cmp
mov
pushl
cmc
cmp
jmp
call
jmp
loop
arpl
rorl
fstpl
add
pop
js
sbb
cmp
scas
inc
sbb
ret
insl
out
mov
pop
mov
jmp
jecxz
cmp
xor
dec
ja
outsl
mov
mov
pushf
aad
sub
loope
add
adc
xor
or
fldenv
stc
movsb
addb
js
inc
dec
pop
scas
xchg
cmp
and
mov
aaa
mov
cmp
xchg
mov
sahf
adc
mov
push
mov
add
sbb
push
cli
pushl
shlb
incl
je
imulb
mov
incb
jg
pop
repnz
pop
in
mov
pusha
cmc
add
pusha
bt
cmp
call
lea
jne
cwtl
jmp
sub
btc
bts
sub
add
shrd
mov
stc
sbb
setg
rol
mov
jmp
ja
rcl
sub
stc
btr
bswap
add
push
xor
shl
bsr
mov
ror
shl
mov
cmc
test
repnz
push
pushf
lea
jne
jmp
in
addb
mov
and
rcrl
rclb
adc
push
jo
xchg
mov
scas
adc
out
dec
add
jle
xor
aas
mov
and
sbb
or
sub
hlt
xchg
jge
cmp
fadds
jecxz
xchg
sub
loope
bound
lret
sub
pop
jne
pop
scas
jne
loop
xchg
jp
fsts
mov
jge
ljmp
sub
ds
into
inc
cwtl
nop
insl
daa
lods
shr
das
pushf
mov
rep
adc
rcrb
xor
je
push
aaa
add
mov
test
and
out
in
mov
lea
jne
xchg
movzbw
not
lea
pop
pusha
lea
js
movzbl
movzbw
pop
pushf
mov
push
not
call
sub
push
or
cmc
xchg
xor
dec
out
dec
and
sub
dec
or
outsb
es
sti
and
mov
aas
mov
lahf
mov
dec
and
mov
mov
pop
mov
jecxz
int
dec
rcr
imul
xor
xlat
ret
mov
out
mov
jbe
pusha
cld
cmp
inc
adc
lret
xchg
mov
and
sbb
int3
cld
mov
out
adc
daa
mov
and
or
mov
inc
or
and
inc
push
sti
dec
fnstsw
xor
daa
inc
fldcw
jmp
int3
push
lods
cltd
cld
xchg
pop
outsb
nop
ljmp
rorb
stos
inc
outsl
mov
sub
mov
div
addr16
shlb
out
fimull
and
inc
ljmp
jg
jnp
push
popa
mov
pop
pop
pop
std
fs
insl
mov
cltd
pop
movsl
lea
jle
outsl
sub
cmp
sar
mov
sti
jl
repz
sbb
cmc
adc
sar
cli
int3
insl
sub
ret
rclb
xchg
out
pop
ret
push
mov
cmpsl
pop
pushf
icebp
into
lret
pop
lret
outsl
call
in
in
clc
push
jle
mov
inc
lcall
xor
cmp
xorl
cltd
and
cmp
cs
xor
dec
into
push
mov
inc
insb
adc
clc
dec
sbb
ret
inc
xchg
xchg
add
into
pop
clc
sub
test
lock
mov
jp
xchg
cs
icebp
add
mov
rep
mov
in
mov
popa
or
mov
daa
sub
mov
and
ja
enter
adc
test
dec
jg
sarb
xchg
pop
adc
rorb
jmp
aaa
jno
sub
les
cmp
xchg
cmp
xchg
add
pop
outsb
push
push
xor
sahf
pop
push
cmp
inc
xchg
out
push
xchg
inc
cmp
jae
jmp
insb
jl
in
imul
xchg
lock
mov
mov
xlat
popf
insl
fidivrl
sti
in
es
mull
jns
mov
xchg
push
scas
mov
aaa
psllw
cmc
xor
sub
pushf
cld
adc
mov
mov
xor
jmp
in
in
mov
mov
pushf
pusha
mov
mov
lea
jmp
cmc
ror
pusha
call
movw
pushl
lea
jne
pushf
mov
bt
add
clc
pushf
movl
push
movzwl
bt
mov
pusha
jmp
icebp
shll
cmpsl
mov
sbb
insl
mov
mov
inc
sbb
fstpt
rclw
sub
repz
jbe
mov
sub
sbb
ljmp
fdiv
lcall
orl
xor
in
pop
xorb
lret
mov
and
sbb
dec
lock
jge
imul
push
int3
push
shrl
cs
je
int
lods
cli
mov
jle
cmp
je
jnp
lock
insl
mov
lcall
mov
clc
addr16
push
in
mov
add
inc
push
jp
jb
data16
inc
imul
je
outsl
outsb
and
jno
jbe
jmp
lret
xor
push
dec
mov
dec
pop
xor
leave
jno
mov
lea
test
fiadds
gs
sarb
cld
inc
movsl
out
sub
in
sbb
lret
xor
dec
mov
add
popa
shrl
daa
push
pop
jge
dec
not
cld
imulb
gs
sub
int
xor
xchg
mov
dec
daa
adc
jecxz
push
lcall
nop
fwait
xor
sbb
out
scas
test
inc
jo
adc
test
mov
adc
dec
inc
add
out
jecxz
in
jbe
cmpb
sarl
ja
test
cmc
js
cmp
mov
jmp
arpl
shll
push
mov
sti
inc
jmp
sub
cmp
mov
mov
and
adc
mov
cmp
cmp
mov
stos
and
xchg
adc
pop
pop
push
std
inc
rclb
pop
jno
leave
cmp
test
xchg
das
daa
dec
sub
cmpb
inc
and
test
out
inc
and
js
mov
out
mov
pop
nop
sbb
add
loope
dec
outsl
and
xor
out
dec
lods
sub
and
aad
xchg
pop
das
mov
dec
dec
add
lods
lods
sbb
lods
js
dec
inc
and
sbb
inc
cmpsb
sbb
shll
sbbb
pushl
popl
call
adc
divps
cltd
int3
nop
mov
in
dec
mov
ja
xor
mov
adc
pop
xlat
xchg
xlat
jne
dec
xchg
test
pop
imul
inc
pop
and
or
inc
fwait
sahf
pop
dec
xchg
cmp
outsb
mov
cmpsl
movsl
or
adc
test
dec
addr16
cmp
sbb
bound
add
cmp
subl
aam
sbb
ljmp
mov
xorl
sub
int
pop
push
jl
sti
inc
mov
sti
jg
add
in
mov
es
shrb
dec
inc
cltd
xor
or
aad
mov
or
add
ss
pop
out
adc
testb
ficomps
inc
decl
ljmp
dec
dec
pop
mov
push
call
dec
push
not
scas
movsl
ds
mov
dec
test
mov
xlat
xchg
sub
sub
js
jg
push
nop
rcl
or
xchg
mov
pushf
sbb
inc
cmp
call
xchg
test
mov
push
sub
sbb
mov
xchg
inc
inc
inc
stos
jbe
gs
jns
cltd
movsb
into
cltd
jns
andl
fcomps
xchg
xor
inc
cmc
xor
adcl
xor
add
or
imul
xchg
std
loop
jns
xor
mov
sub
aad
shl
pusha
test
data16
or
test
push
pop
flds
jb
xor
gs
pop
push
push
xor
in
mov
aam
addb
mov
inc
rcrb
jno
sbb
in
mov
xlat
pusha
mov
insb
call
cmp
pop
notb
aam
movsl
cmp
sub
push
in
mov
repnz
outsb
mov
push
andb
mov
pusha
cmpl
mov
mov
pop
push
push
sub
cmovne
sbb
rcrl
lock
in
cwtl
and
push
pop
mov
inc
lock
mov
out
xchg
mov
sub
pop
mov
xchg
mov
pop
loopne,pn
fnstsw
add
inc
pop
sbb
lret
in
lcall
aam
outsl
mov
and
jae
pop
shrl
cmc
push
aaa
lahf
push
sbb
orb
push
into
enter
pusha
and
adc
icebp
and
aas
sub
in
mov
jmp
addr16
mov
mov
sub
movsb
test
lret
ds
aas
xchg
push
add
xchg
or
roll
sbb
in
jbe
mov
add
scas
sub
jno
nop
inc
inc
jle
jo
rcl
lock
lds
dec
pop
dec
lret
insb
push
arpl
mov
xor
fisubrl
std
frstor
lods
aas
adcb
shl
or
in
dec
gs
add
sub
fldl
sbb
inc
arpl
shr
push
and
sbb
and
test
mov
addl
mov
mov
push
js
add
cmp
dec
scas
lahf
sahf
push
mov
add
fwait
mov
cmc
in
add
mov
mov
mov
ficompl
mov
push
pop
cld
jge
adc
sbb
and
xor
fbld
push
call
in
mov
shlb
lea
and
jns
pop
lcall
sub
mov
mov
es
cmp
jbe
add
and
jne
cld
adc
xor
cmp
fstpl
mov
or
xchg
add
adc
enter
pushf
cmpb
lea
stc
dec
sub
ja
fs
das
add
in
ficoml
cmpsb
push
push
or
push
jle
mov
jl
fisubl
pushf
push
iret
cmp
push
inc
cmc
jno
mov
into
repz
push
push
in
jle
xor
pusha
inc
test
jnp
imul
fcompl
cmpsl
in
mov
jmp
jmp
jl
loope
cwtl
xor
or
mov
mov
jle
aam
xchg
in
inc
shlb
inc
jb
cmp
jle
jne
inc
xor
adc
jns
fisttps
mov
scas
dec
cmc
and
jmp
pop
sbb
xchg
mov
je
addb
cli
leave
lods
adc
test
lret
add
fimuls
or
mov
sbb
sbb
psubd
mov
test
cmpsb
dec
push
inc
cltd
decb
repnz
sub
jecxz
dec
cmp
mov
xchg
adcb
jnp
mov
add
xlat
adcl
inc
or
pop
in
push
ljmp
push
in
in
mov
movzwl
clc
or
add
mov
pushl
add
jmp
mov
test
aas
push
clc
inc
xchg
sub
enter
xlat
daa
fstpl
push
dec
dec
arpl
mov
test
fisttps
pop
sub
loop
xchg
repz
lret
sbb
push
iret
neg
test
stos
scas
mov
int3
in
scas
dec
jnp
push
pop
mov
mov
mov
out
imul
push
popl
sbb
xchg
test
andl
fcompl
fnstsw
push
aas
pop
sbb
add
fstpl
mov
xor
adc
iret
movsl
call
add
mov
inc
loop
pop
adc
mov
std
clc
int
mov
cmp
xchg
inc
add
adc
dec
idivl
jbe
ja
jb
and
sbb
sbb
adcb
popa
insb
cwtl
fnstsw
xor
push
imul
out
out
loope
pusha
sub
les
cltd
repz
xor
or
ljmp
pop
dec
or
sub
mov
add
push
jg
mov
aam
mov
mov
scas
fs
push
test
outsb
shlb
rorb
jno
push
push
pop
xchg
xchg
or
fxch
and
into
inc
les
call
ljmp
aaa
stc
xchg
mov
inc
add
push
sbb
call
stc
loop
aam
adc
leave
dec
lret
sub
cmp
mov
mov
test
add
clc
clc
call
orl
mov
push
lret
lahf
mov
outsl
lret
int3
or
xor
mov
mov
push
mulb
es
inc
pop
fstp
cmpsl
ret
in
jns
sub
mov
mov
mov
arpl
loopne
add
ljmp
out
int3
iret
shrl
test
gs
pop
push
jp
hlt
shr
and
inc
mov
out
pop
in
push
mov
aad
lods
or
cmp
mov
fnstcw
pop
lret
inc
out
cmpsl
jmp
push
lods
or
cmp
xor
bound
jg
jge
mov
cli
push
push
sarl
lods
pusha
fdivrs
insl
loope
shll
mov
mov
icebp
lret
rclb
movsl
sub
and
outsb
push
repz
pop
into
xchg
cltd
dec
pop
ja
cli
out
std
fdivl
dec
push
sbb
repz
sti
sub
imul
xchg
enter
inc
sti
rol
in
int3
fidivrl
mov
sub
fnstsw
leave
cmc
lret
pop
in
unpckhps
out
jnp
xchg
and
push
add
sahf
inc
lret
push
dec
cmp
sbb
cmpsb
push
out
sub
mov
movl
mov
push
add
push
les
loop
shl
repnz
int
insl
mov
push
xchg
jno
test
mov
inc
xor
call
sbb
pop
ss
jnp
cltd
push
hlt
repnz
test
cmp
jp
cmc
imul
pop
cmpsl
or
push
cmp
dec
inc
je
rorb
mov
xchg
ja
adc
loop
mov
or
leave
repnz
sub
xorb
or
sti
cmpb
mov
dec
shlb
adc
and
shl
insl
js
lahf
mov
xchg
xchg
addr16
shr
mov
inc
xchg
xor
std
out
jo
daa
loopne
mov
cli
adc
cmc
pop
mov
outsb
shll
imul
inc
sub
in
fwait
dec
jg
cltd
std
shrb
mov
fnstenv
dec
lods
call
insl
mov
es
and
arpl
js
sub
in
mov
cmp
cmp
movb
jmp
add
mov
inc
pop
fs
imul
inc
clc
out
negb
shr
cmp
and
push
push
pushf
xor
lcall
mov
cmp
out
ljmp
stos
test
in
aaa
sub
dec
mov
mov
test
inc
sti
movsl
push
rcr
addb
jno
or
lahf
cmp
jb
mov
dec
add
clc
cli
mov
mov
mov
out
and
das
xchg
cs
dec
enter
xchg
fiadds
push
hlt
in
pop
mov
mov
push
sub
mov
cwtl
andb
xor
mov
or
mov
jb
inc
ja
fucom
jle
fwait
jg
jne
cwtl
xchg
hlt
mov
lret
jbe
sub
and
pop
pop
psraw
adc
jmp
jge
ja
es
or
movsl
pusha
jecxz
addl
cmc
fadd
hlt
mov
iret
in
cmpl
xchg
xchg
ret
mov
pop
adc
xlat
push
int3
xor
mov
mov
movsl
test
xchg
clc
mov
mov
ljmp
in
mov
ficompl
jp
fs
out
xchg
inc
dec
jmp
jno
pop
xchg
sub
push
pop
dec
dec
mov
fdivl
int
mov
push
in
adc
dec
je
clc
dec
pop
or
repnz
icebp
enter
adc
adc
arpl
out
pop
pop
in
repz
xchg
jle
lds
fistpl
mov
testl
and
xchg
pop
sbb
mov
mov
pop
cltd
mov
sbb
mov
inc
fs
dec
pop
pop
dec
int
cmp
or
ljmp
cmp
or
sub
lods
cs
and
in
mov
test
popa
daa
jo
sub
add
jle
add
mov
sahf
pop
or
jb
adc
xchg
and
loope
sbb
loope
adc
or
xchg
loop
and
outsb
push
insl
or
ss
xchg
adc
subl
rclb
aam
es
aam
sub
push
rclb
repz
sub
jl
adc
jne
sbb
sbb
add
inc
fists
mov
or
ds
mov
jnp
shrl
xchg
pop
adc
insb
iret
push
mov
jecxz
leave
pop
inc
mov
in
loop
movsb
cs
mov
outsl
jmp
adc
jp
jo
xchg
sub
xchg
jne
mov
sub
push
xchg
clc
testb
adc
sub
cwtl
gs
xor
shll
scas
mov
push
mov
xchg
mov
clc
scas
push
pop
cmp
cmc
ret
sbb
mov
mov
fdivrp
shlb
inc
test
sub
movsb
and
xchg
push
sar
pop
pop
dec
push
push
push
mov
fstpl
cld
cmp
sbb
mov
dec
mov
mov
call
ret
push
out
sub
and
dec
std
ret
in
mov
call
mov
mov
mov
loopne
cmp
adc
ds
fisttpll
jl
jl
loopne
pop
and
shl
ret
fs
scas
adc
lock
sti
std
inc
lock
sub
jo
pop
fstpt
in
mov
jo
xorb
ljmp
pushf
sub
mov
outsl
xor
addr16
and
pop
sub
pop
adc
adc
jecxz
dec
sbb
mov
out
pop
sub
imul
lea
push
shr
mov
push
sub
js
dec
negb
lea
into
add
dec
xor
mov
cmpb
mov
push
jns
repz
or
inc
cmpl
cmp
clc
sarl
and
mov
mov
setnp
add
add
inc
and
in
mov
je
push
hlt
stc
movsl
mov
sub
push
sub
hlt
dec
in
mov
add
inc
push
jne
je
popa
arpl
popa
jb
imul
imul
and
jno
jbe
and
repnz
mov
test
inc
mov
pop
imul
stos
dec
lret
popa
lcall
outsl
sbb
pushf
es
sbb
into
dec
jecxz
cmpsl
cmp
std
sahf
xor
bound
pop
nop
cmp
push
stos
push
cli
jl
or
mov
out
flds
add
mov
ljmp
mov
clc
call
cmp
sbb
xchg
rcr
lods
xlat
xor
mov
xchg
out
daa
ljmp
mov
push
mov
in
mov
xchg
ljmp
stc
cs
fsubs
jbe
fst
xor
add
shrl
jg
popf
adc
inc
repz
adc
das
call
xor
xor
or
outsb
dec
decl
in
in
pop
pop
das
sbb
sub
cld
dec
test
adc
push
hlt
imul
bswap
ja
or
testl
jp
outsl
loop
in
mov
pushf
call
dec
dec
ret
shl
add
xchg
leave
xchg
mov
sbb
sub
lret
sub
cmpsb
jnp
cmp
xchg
or
inc
mov
aam
iret
mov
ljmp
xchg
scas
fistps
push
jns
test
jb
xchg
push
fnstsw
inc
inc
stos
xorl
mov
dec
inc
out
loopne
mov
out
test
mov
shlb
subl
daa
fsubr
cmp
pop
or
add
cmpsb
lret
lock
fwait
rcrl
and
ss
lock
push
fildll
dec
lods
fnstenv
add
or
adc
jl
add
int3
arpl
movsl
cltd
mov
inc
mov
outsb
lret
int3
or
mov
xchg
movsl
mov
xchg
stos
shll
xchg
xchg
sbb
mov
cld
sbb
mov
jg
cwtl
mov
fmuls
sbb
andl
push
inc
into
pusha
mov
imul
mov
add
cmpsb
outsb
add
dec
aam
sti
sbb
pop
mov
enter
pop
jle
lock
arpl
outsl
jp
sahf
mov
outsl
mov
mov
pop
jae
test
ds
cltd
popa
hlt
sub
sbb
pop
xor
and
sti
or
roll
loop
repnz
rorl
or
mov
inc
adc
jp
jle
sub
xchg
loopne
adc
mov
inc
jns
pop
pop
icebp
inc
xlat
movsb
cmp
xchg
inc
sbb
mov
outsb
xor
pop
test
cmpsl
inc
jmp
ss
mov
mov
inc
out
nop
fdiv
xchg
jg
pop
les
imul
jb
pop
insl
push
leave
mov
fs
and
pop
ss
jge
inc
jmp
in
mov
repz
or
out
popf
jns
cs
xor
jp
mov
jle
gs
xchg
mov
sti
adc
enter
bound
in
cld
movsb
add
cmp
imul
push
mov
ret
in
call
rorl
movsl
mov
sbb
pop
scas
mov
addr16
dec
lcall
lcall
and
sub
push
pop
loop
rcll
sub
aad
mov
sarb
dec
stos
ds
in
insb
in
test
test
mov
cmp
ror
and
subl
popa
out
jmp
and
fidivrl
cwtl
call
pop
push
dec
xorb
popa
jge
push
dec
mov
in
pop
add
sbb
pushf
stos
pop
ret
ss
or
jmp
fistl
push
rcrl
sbb
pop
arpl
nop
lea
int
push
arpl
and
nop
xchg
sub
xchg
and
xchg
incb
std
sub
jbe
inc
shll
push
in
mov
pusha
push
lea
call
jmp
push
aaa
jne
in
inc
mov
mov
sarb
and
mov
sub
sbb
rolb
data16
insl
pop
int
inc
dec
xor
mov
leave
fisubrs
and
enter
les
jo
push
mov
mov
lret
mov
loope
or
pop
sub
dec
push
cmp
jbe
repnz
inc
fldl
xchg
mov
jae
pop
pusha
mov
shrl
in
push
dec
lods
sbb
into
or
xchg
cmpsb
stos
into
je
push
test
jae
add
loopne
mov
in
mov
movb
cmpb
push
lea
jne
push
test
pushf
stc
sub
pusha
push
pushl
lea
jmp
adc
les
sahf
adcb
fs
lret
push
mov
out
and
pop
jg
idivb
imul
out
cmc
das
leave
insl
insl
push
rcl
pushf
jae
bound
callw
dec
jae
and
jbe
mov
sahf
mov
repz
fisttpll
lret
aam
inc
xchg
mov
ror
push
sahf
or
je
int
inc
shlb
in
mov
imul
dec
iret
aad
mov
xlat
lods
and
inc
fldl
frstor
paddsw
dec
or
inc
xor
fdivp
xchg
cld
or
ss
xchg
mov
outsb
mov
int3
sbbl
cmp
popa
rorb
call
scas
out
jnp
add
out
mov
aad
clc
stos
lods
adc
push
jno
sbb
in
xchg
mov
into
xor
jno
xchg
mov
mov
out
xchg
push
mov
hlt
mov
mov
ljmp
inc
outsb
sub
cltd
mov
push
pop
pop
xchg
ja
xchg
nop
jbe
sub
cmp
fstpt
mov
add
loopne
mov
inc
cmpsl
lods
mov
cli
out
popf
fists
ja
mov
push
popa
clc
iret
in
daa
arpl
push
jns
or
xchg
test
cmc
cld
mov
sbb
push
mov
lret
push
mov
mov
mov
push
and
push
test
bt
mov
jmp
bswap
ja
movb
setbe
push
lahf
mov
lea
movzbl
pushf
lea
call
pop
lcall
stc
vmovaps
push
rcrl
adc
hlt
xchg
aam
sub
movsl
into
mov
out
sbb
pop
ffree
jns
rol
dec
fstl
mov
es
xchg
out
negb
sbb
setge
mov
in
dec
mov
scas
lods
enter
inc
inc
sahf
iret
icebp
fdivrl
test
jo
ret
dec
leave
aam
sbb
lods
mov
js
add
inc
xor
jg
mov
sarl
sarb
jmp
sbb
out
fisttpl
sti
in
mov
adc
sbb
lock
roll
outsl
ljmp
jge
outsl
and
movsl
mov
js
in
push
jge
jecxz
sub
fcoms
popa
pop
xor
cmp
arpl
jge
loop
jnp
cwtl
xor
fimuls
arpl
push
add
enter
sub
xchg
mov
xchg
in
out
and
adc
mov
mov
imul
ret
adc
addr16
jecxz
xchg
adc
loopne
ja
or
dec
fists
outsl
xlat
mov
das
iret
push
jmp
jae
lcall
mov
jecxz
mov
into
enter
popf
loopne,pt
out
pop
test
mov
push
pusha
xchg
sti
inc
cmp
cwtl
loope
lods
out
into
bound
cmp
scas
inc
push
sbb
in
aam
pop
adc
loop
imul
js
loop
dec
ja
mov
mov
dec
mov
andl
mov
mov
push
jnp
xchg
push
dec
push
jnp
loopne
ljmp
dec
sub
pop
xor
jnp
dec
jno
jge
popa
push
mov
push
mov
sahf
sub
mov
mov
ficoms
pop
jo
in
and
rcll
inc
xchg
pushf
xchg
ds
adc
popa
shr
inc
sbb
cmp
addr16
in
mov
bound
lock
test
jae
adc
imul
mov
push
jae
imul
push
mov
hlt
iret
test
xchg
and
add
ret
fisubrs
or
sub
xor
xorb
and
pop
cmp
jg
inc
mov
mov
lret
dec
out
lret
mov
dec
lea
fisubrs
jbe
andb
dec
outsb
iret
jg
cmpsl
mov
cld
adc
mov
aam
idiv
or
imul
sbb
fwait
xchg
sahf
xor
push
mov
inc
push
clc
shll
or
out
pop
js
mov
or
clc
adcl
xlat
adc
dec
fistpll
outsl
mov
in
mov
pushf
jmp
aad
imul
roll
or
cmp
or
inc
in
jo
ds
fcmovnbe
add
jg
aaa
outsl
mov
notb
jo
lds
mov
jmp
popf
int3
and
adc
test
jb
lret
adc
mov
or
push
fwait
sub
lahf
pop
or
cmp
cs
pushf
pop
sub
lock
sbb
adc
inc
mov
cmp
mov
add
lock
mov
scas
mov
negl
jnp
les
pop
clc
enter
adc
push
daa
inc
std
sbb
xchg
mov
jg
cmp
shrl
cmpb
mov
repz
sub
into
push
add
dec
outsl
arpl
inc
jb
add
test
add
mov
jmp
out
lret
into
scas
pop
and
out
pusha
std
les
pop
ret
punpcklbw
icebp
dec
jo
sbb
jne
popl
mov
xor
or
mov
rclb
fbld
inc
mov
int3
or
mov
xor
dec
cmp
inc
roll
mov
jo
xchg
popf
jns
ss
in
je
rorb
das
insl
and
adc
xor
mov
mov
arpl
inc
int
lahf
sub
pop
mov
insb
in
mov
rol
add
add
shl
jmp
call
outsb
std
pusha
inc
out
add
add
movsl
push
les
insb
in
sub
dec
xor
es
fstl
lcall
call
pop
xchg
pop
std
xchg
mov
pop
stos
inc
sbb
mov
rcrb
and
jo
jno
aad
pop
mov
jle
or
rcll
in
sub
pop
jecxz
dec
cmpsb
xchg
nop
mov
jecxz
xchg
jmp
mul
add
lock
xchg
ja
ljmp
fs
mov
adc
inc
into
icebp
scas
mov
loope
dec
addr16
ret
jae
mov
and
test
fldenv
mov
ljmp
xchg
rcrl
cmp
shrb
stc
gs
in
mov
outsb
sub
lret
cs
mov
pop
std
jne
xchg
mov
pop
pop
xchg
lahf
mov
lea
xchg
imul
or
cmp
fcomip
mov
mov
movsb
pop
inc
imul
icebp
test
and
adc
sbb
icebp
push
xorl
mov
cmp
xor
ds
in
dec
icebp
push
push
pop
aaa
mov
jp
pop
mov
and
and
push
enter
adc
aaa
jp
mov
fcmovbe
test
add
stos
and
push
test
cmp
adc
xchg
mov
inc
imul
sub
outsl
int3
push
ret
mov
lods
int3
test
ret
roll
mov
outsl
mov
inc
cmp
mov
nop
xchg
mov
out
out
sbb
sub
lcall
testb
in
outsb
out
fidivrs
add
and
mov
push
pusha
mov
jmp
add
ret
fdivrl
in
xchg
mov
mov
pushf
sbb
dec
sti
add
test
inc
xchg
in
adc
push
or
jle
mov
dec
int3
mov
xchg
jg
out
push
and
pop
inc
mov
xchg
outsl
fbld
pop
add
jns
test
push
dec
in
cmp
jb
jp
pop
jae
icebp
mov
add
movsb
and
mov
sub
jg
aad
and
add
mov
cld
pushf
dec
jbe
and
negl
adc
pop
jns
js
test
dec
shrl
movsl
aas
add
add
ljmp
aam
xchg
mov
and
in
mov
sub
mov
sub
pop
push
out
dec
mov
jecxz
movsl
pop
fcoml
call
subb
data16
push
jae
lock
and
xor
sub
mov
gs
push
iret
ja
sbb
lods
leave
dec
add
mov
cld
cmp
ljmp
in
sub
rorb
sbb
mov
sub
mov
in
movsl
push
cmp
jo
mov
jbe
sub
jp
and
out
xchg
ja
outsb
dec
movb
mov
and
ret
and
jae
mov
sahf
push
gs
pop
nop
sbb
sahf
std
in
lods
cmpsb
aas
aam
xchg
mov
pmaxsw
in
mov
inc
pop
cmpsl
xchg
xor
cwtl
fisubrl
inc
popf
xor
xor
out
push
adc
pop
sarb
jecxz
rolb
cmp
in
cmp
ss
and
test
push
push
in
pushf
outsl
or
lock
or
fadd
dec
sbb
test
repz
add
jp
inc
cmc
pop
fstpt
cmpsl
stos
inc
movsl
mov
cltd
mov
mov
xor
ja
orb
mov
jb
mov
mov
or
int3
and
inc
mov
mov
cmp
cmpl
xor
addl
cmp
mov
je
push
xchg
jle
inc
loopne
jle
mov
add
jae
lods
xorl
mov
test
gs
add
cmp
mov
stc
imul
mov
pop
pop
pop
push
dec
sub
mov
mov
loopne
out
addl
cld
cmp
hlt
inc
inc
ret
push
cmpsl
jmp
leave
rcr
and
cmpsl
les
jp
in
jmp
inc
sub
shrl
push
lea
cmpsl
lods
aas
lcall
shr
outsl
into
push
and
mov
ret
out
jecxz
rclb
fcompl
jle
xchg
mov
enter
adc
mov
pop
pop
or
sbbl
shll
add
mov
fists
addb
test
mov
je
in
inc
mov
and
push
xchg
xchg
push
pop
jbe
dec
in
mov
notl
cwtl
jge
imul
mov
and
xor
clc
inc
hlt
cli
imul
push
mov
add
inc
and
jo
or
cmpsb
das
xor
mov
adc
cmp
sbb
bound
in
sbb
inc
push
dec
mov
xor
in
iret
sbb
aas
lods
daa
adc
push
test
ds
fstl
adc
into
mov
inc
mov
push
pop
shll
decb
cmp
jb
adc
imulb
mov
mov
lock
pop
sub
orl
mov
mov
pop
cwtl
hlt
subb
adc
loop
je
push
mov
sbb
aaa
sub
ror
clc
lret
pushf
insl
inc
aaa
push
push
pop
movsb
imul
repz
orb
addr16
cs
and
loopne
out
push
stos
adc
ds
sbb
mov
mov
push
pop
js
pop
xor
push
push
into
dec
xchg
cs
neg
jb
jmp
add
dec
cmp
call
ret
ja
fistpll
js
sbb
sbb
xchg
xor
sbb
scas
js
testb
addl
fnsave
int
xor
icebp
jl
adc
rcl
aaa
mov
lods
loope
jno
adcb
subl
adc
fisttpll
inc
mov
pop
mov
xor
mov
sub
sbb
inc
cltd
or
fstpt
jmp
xorl
jmp
sub
bound
in
mov
pop
xchg
push
ret
push
mov
clc
sub
in
mov
fsub
jo
mov
mov
arpl
push
out
sub
lret
mov
sti
in
xor
push
xchg
lret
cmpsb
jge
mov
rcrb
int
test
push
push
dec
les
adc
js
jns
fwait
lds
dec
idivb
loope
addr16
jmp
mov
pop
cld
imul
push
push
push
pop
orb
inc
mov
mov
iret
xlat
and
out
scas
mov
jp
xlat
icebp
mov
fcmovnbe
dec
out
add
push
inc
in
stc
test
push
adc
movsl
push
mov
pop
lock
pop
mov
repz
dec
out
sub
in
mov
stos
imul
xchg
sti
or
lahf
adc
dec
aas
shrb
xor
push
xchg
div
dec
jo
aam
lods
adc
aad
xchg
in
pusha
loop
push
and
jne
clc
fnstcw
inc
sti
stc
out
jns
push
inc
cmp
fwait
pop
xchg
enter
shll
sub
es
fcompl
adc
or
pushf
int3
inc
add
xor
jp
push
enter
fnstsw
sub
fdivrl
dec
cmp
mov
es
push
cwtl
mov
add
ds
js
mov
push
fsubrp
movsl
out
into
les
add
leave
and
mov
rorb
push
sarl
or
and
push
add
mov
add
inc
gs
outsl
fs
gs
imul
add
mov
lods
jl
and
stc
sbb
xor
int3
in
or
lret
cmp
leave
adc
mov
push
sbb
lcall
add
nop
shr
jmp
adc
fcmovbe
in
add
jne
mov
inc
ja
xchg
outsl
ljmp
and
pushf
mov
push
cmpb
dec
sub
iret
out
enter
adc
dec
insl
mov
in
lods
cli
lcall
js
imul
dec
mov
fwait
cmp
mov
cmp
mov
lret
push
sbb
cli
sbb
outsb
nop
push
ret
inc
xchg
jl
xchg
imul
rorb
cmp
iret
cmpsb
mov
jnp
push
sub
loope
jle
sbb
out
pop
pop
popf
loopne
inc
repnz
add
dec
paddsw
inc
add
jp
aaa
data16
push
shr
addb
inc
icebp
stos
cmp
jnp
inc
testl
lret
adc
mov
sar
push
roll
in
loope
xor
sbb
out
mov
sbb
sbb
adc
dec
lcall
push
jo
xor
jb
scas
mov
cmpsb
sub
out
in
mov
mov
sub
loope
repz
sahf
arpl
movsl
mov
inc
cmc
pop
ja
jnp
push
xorl
mov
push
out
fstpt
insb
clc
in
mov
cltd
outsl
cmp
pop
jge
jne
call
loopne
call
movsb
mov
cmp
jbe
addr16
mov
push
jge
sarb
sar
popf
push
push
idivb
ds
or
inc
or
add
outsl
mov
xchg
or
pop
mov
jmp
rcrl
xorl
jge
dec
adc
std
aas
mov
adc
cmp
ret
imul
bswap
ret
mov
add
shl
mov
stos
push
test
mov
int3
push
addb
and
ss
push
and
and
leave
cmp
sbb
dec
in
addr16
stos
mov
cmc
add
pop
cwtl
mov
cwtl
jg
sub
dec
movb
mov
les
xor
outsb
xchg
movsb
jl
fsubs
into
stos
push
jns
jbe
scas
stos
inc
in
jns
fcmovbe
gs
sti
cld
pop
les
cmp
cs
mov
jle
dec
in
mov
call
sbb
or
out
aam
negl
add
xor
in
gs
jmp
sub
push
in
jge
imul
loopne
loopne
dec
aaa
jge
jns,pt
pop
outsl
cwtl
xchg
icebp
movsb
bound
stos
scas
inc
test
cwtl
aad
mov
int3
fs
jecxz
mov
lret
mov
mov
dec
inc
push
hlt
xchg
cwtl
shrb
ds
mov
cltd
popa
cmp
pushf
or
sahf
inc
aad
jb
sti
push
dec
jo
fistpll
jge
pushf
jbe
add
push
cmpsl
or
sbb
sub
xchg
jae
inc
push
sbb
fnstsw
fldenv
pop
in
inc
mov
add
sub
cmpl
neg
call
push
adc
mov
test
mov
xchg
push
mov
lea
push
popf
dec
dec
in
or
shrl
adc
les
test
mov
dec
adc
imul
fwait
pushf
in
mov
mov
mov
aam
cwtl
xor
sbb
stos
pop
pop
rcl
mov
lea
and
fldln2
push
push
cmp
enter
es
xchg
or
rclb
aad
hlt
int
and
test
stc
aad
fwait
in
lods
sbb
cmp
cmp
sub
mov
cmp
mov
push
xor
mov
loope
lea
xor
jbe
in
pop
xor
push
push
arpl
mov
jecxz
or
xchg
or
adc
mov
jns
cs
aad
aas
sahf
shll
mov
push
sbb
cmp
adc
add
push
push
mov
xchg
popf
sbb
lods
adc
pop
push
mov
imul
pusha
ja
mov
dec
lea
out
cmp
pop
dec
jmp
mov
loop
in
aam
push
fcmovb
lds
sub
mov
and
and
mov
cltd
stc
adc
jb
xor
loopne
push
xlat
hlt
xor
pop
jae
es
std
pop
add
int
mov
cmp
pop
out
mov
inc
insb
sub
cli
cmp
jmp
ficomps
adc
pusha
cld
xchg
insb
inc
sahf
and
popa
lds
lods
mov
jne
dec
push
adc
mov
clc
into
sub
xor
fisttps
sub
jno
fbld
adc
lods
les
js
adc
mov
loopne
push
adc
cmp
mov
inc
loopne
out
addr16
pop
ret
roll
std
jl
std
insl
inc
mov
cmpsl
les
push
sub
inc
pop
and
cltd
popa
data16
fwait
cmp
sbb
xor
add
mov
pop
lods
mov
mov
cmp
fisubrs
sbb
add
adc
repnz
ret
lcall
and
mov
push
pop
sbb
xchg
andl
out
in
or
negl
fwait
arpl
push
jp
test
inc
icebp
adc
push
jmp
adc
jle
jle
inc
xchg
inc
fidivs
in
mov
cmpsb
movsl
sbb
int3
fnstenv
mov
sti
push
lds
inc
lret
out
xor
xchg
lret
xchg
add
sbb
sub
fstps
cmp
xor
pop
data16
mov
push
jbe
adc
leave
arpl
xchg
movb
dec
or
jle
cmpsl
jne
and
cmpl
into
dec
mov
pop
push
fldl
leave
stos
or
lock
mov
sbb
jg
test
push
js
sub
sahf
push
fisttps
rep
jo
gs
fs
test
std
inc
psllq
mov
mov
repnz
jae
mov
adc
pop
inc
or
xor
push
push
cltd
popf
insl
xchg
or
jns
lret
aas
push
fildl
loop
inc
mov
fs
mov
inc
ficomps
inc
sbbb
icebp
sub
int
sub
incb
dec
sti
xchg
mov
xchg
fsub
into
mov
es
mov
dec
test
pop
pop
and
sti
pop
xchg
je,pn
add
or
dec
data16
out
cmp
rcll
and
lret
ds
es
fwait
sub
adc
push
shlb
push
push
pop
xchg
mov
push
arpl
out
mov
xchg
and
enter
mov
fwait
pusha
sahf
inc
popa
test
adc
repz
pushf
push
adc
or
fidivrl
pushf
movsb
push
pop
fnstenv
loop
sahf
sub
in
mov
lahf
push
not
lea
lahf
mov
movb
lea
ja
pushf
jmp
out
es
ret
aas
bnd
dec
adcl
cmpb
sahf
lret
ds
jmp
add
leave
outsb
xor
repz
sbb
mov
jmp
and
inc
mov
popa
sub
outsb
xor
data16
sahf
cmp
int
inc
jmp
dec
pop
dec
adcb
xor
std
adc
pop
cld
mov
dec
jmp
inc
in
cmp
insl
or
sti
dec
jo
xchg
mov
cmpsb
push
add
jnp
mov
ds
cmp
and
and
rcl
fidivs
ficoml
mov
xor
inc
in
mov
call
pop
mov
inc
mov
xor
mov
bound
ret
inc
and
sbb
int3
mov
stos
das
leave
or
stc
push
xchg
mov
js
jnp
cmp
push
xor
dec
fwait
sbb
mov
bound
jnp
enter
jl
push
pop
aam
int3
mov
inc
bound
mov
cmc
mov
dec
and
sbb
std
mov
xor
inc
insl
and
mov
lods
ds
mov
or
jbe
push
in
ret
add
in
mov
adc
fldt
xchg
jmp
inc
push
lods
dec
lock
std
idivl
enter
cs
jmp
sub
pushf
xchg
ficompl
adc
jl
sbb
and
ficoml
fisubrl
out
add
int3
repnz
dec
pop
pop
pop
dec
inc
push
xor
jne
rcr
pop
mov
add
cmp
pusha
movsl
or
xor
cmp
xor
or
les
sti
mov
ret
ficoms
mov
std
mov
pop
lock
sbb
push
cmp
call
stc
pop
das
lods
fsubl
les
sbb
push
cmpsl
sbb
jp
cmp
call
clc
call
mov
or
cwtl
clc
push
sbb
mov
jmp
and
test
jmp
pmulhw
jle
es
cmp
leave
andl
pop
pop
bnd
loope
adc
push
in
jmp
loop
adc
call
scas
mov
add
pushf
sbb
pop
cld
push
inc
cli
sub
in
add
dec
bound
mov
stc
repz
adc
sub
xor
push
adc
loopne
daa
and
mov
sbb
mov
add
add
shlb
lcall
push
jecxz
mov
and
fs
call
pushf
call
in
pop
sub
jb
scas
xchg
pop
jnp
add
push
mov
in
xchg
cmp
mov
push
cmp
div
push
hlt
add
push
adc
cwtl
cmpsl
xchg
out
jle
out
mov
jmp
push
stos
jae
clc
ds
dec
cmpsb
jo
jle
stc
push
ret
cmpsb
fldl
push
jl
in
and
push
mov
sbbl
das
es
push
js
xor
adc
das
pop
xor
aaa
inc
jb
iret
in
out
gs
mov
mov
push
outsl
mov
push
aas
push
daa
lahf
pop
sbb
loop
jo
fdivrs
enter
mov
incl
adcl
and
out
lcall
dec
jns
pop
das
lds
push
push
mov
inc
mulb
sbb
ds
jo
sti
push
lods
mov
ja
dec
push
movsl
mov
neg
repnz
lock
stc
fnstcw
lret
mov
cwtl
incl
call
mov
mov
ljmp
arpl
xchg
inc
int
adc
mov
mov
in
jmp
inc
mov
xchg
scas
in
movntq
mov
or
dec
and
fbstp
stos
popf
es
inc
adc
popf
pop
test
dec
adc
xor
inc
jbe
cwtl
sarl
scas
sbb
dec
fistpl
roll
les
in
mov
mov
fcmovnbe
mov
aam
gs
inc
ret
push
bnd
sbb
push
push
mov
adc
xlat
adc
shr
add
cmpsl
add
cmpsl
js
cmpsl
iret
or
jae
dec
dec
add
xchg
fisttpl
loope
les
mov
mov
dec
call
loop
je
pop
shlb
ds
and
jl
decb
stc
mov
mov
pusha
cmp
cltd
push
popf
insl
push
jns
cmp
or
cmp
fwait
aas
xlat
iret
mov
je
ret
jge
mov
outsl
in
mov
mov
xchg
jae
pop
mov
mov
mov
ficompl
lock
ret
adc
inc
aad
jmp
aas
pop
lea
jb
adc
inc
unpckhps
cmp
repz
sub
mov
les
dec
in
or
fucomp
mov
pushl
lea
jne
cmp
shl
mov
cmc
call
sub
testl
stos
sub
addr16
push
sti
out
test
lds
push
out
adc
lret
ljmp
into
jle
xchg
jl
dec
in
mov
sbb
hlt
gs
repz
shrb
mov
pop
popa
mov
in
in
mov
in
lds
push
aaa
ds
enter
push
shlb
movsl
leave
mov
or
cwtl
lock
add
push
xchg
xchg
cmp
or
dec
dec
bnd
push
pop
mov
mov
mull
or
rcll
imul
cltd
xchg
jl
int
inc
scas
jo
arpl
int
ret
adc
xchg
insl
leave
jg
subb
or
mov
jns
shlb
dec
lock
xor
add
ret
sbb
mov
jl
adc
add
add
leave
dec
and
add
add
out
and
add
add
fildll
and
add
add
cld
jmp
add
add
add
add
sbb
and
add
add
cwtl
fcoms
add
add
add
stc
and
add
add
pop
mov
add
add
add
mov
add
add
add
adc
add
add
or
add
nop
cld
and
add
add
push
mov
add
hlt
cmp
add
add
push
add
add
add
add
add
add
push
add
add
add
jno
add
push
add
push
add
adc
add
adc
add
add
pushf
lea
je
jmp
in
push
add
pop
pop
pop
push
sbb
mov
sbb
out
clc
add
out
push
push
sbb
cltd
icebp
testl
mov
jl
and
pop
clc
repnz
dec
orb
pop
mov
movsb
jge
dec
push
inc
mov
pop
in
repnz
stc
push
push
jae
jle
dec
je
mov
mov
jge
mov
mov
hlt
xor
or
mov
stos
out
mov
loope
test
dec
stos
ds
mov
sub
inc
fwait
push
push
dec
call
loope
inc
aas
xchg
dec
mov
test
push
jmp
mov
xchg
mov
sti
pop
mov
dec
xchg
cmp
jb
mov
imul
pushf
cmp
arpl
add
and
stc
dec
fwait
mov
jl
inc
loope
xlat
fsubrs
jg
arpl
ret
add
data16
pop
enter
cmc
insl
pop
cs
cmpsl
inc
jecxz
rcll
jp
test
in
and
mov
daa
cwtl
fwait
jge
sbb
scas
inc
or
test
mov
push
stos
cwtl
lods
xchg
imul
stc
pop
jne
jmp
test
push
out
gs
addr16
inc
cltd
lods
sub
lcall
clc
ret
je
xor
js
mov
shrb
out
test
adc
inc
ljmp
mov
mov
aaa
and
cmc
fmull
insl
loope
mull
jae
push
jns
jnp
cmp
mov
andb
ss
test
jno
mov
movsb
lods
les
mov
in
stos
mov
movsl
jg
je
xchg
lcall
jno
mov
push
addl
jecxz
pop
inc
lock
fs
cmc
jge
test
int3
mov
xor
jge
outsl
sbb
outsl
int
jb
dec
leave
test
notl
cmp
adc
add
test
adc
mul
insb
jg
popf
insb
shl
jno
ja
add
sub
in
mov
xor
out
push
xor
and
mov
push
jecxz
jl
sub
hlt
sub
mov
pop
loope
ror
fdiv
hlt
and
pop
iret
sbb
add
movsl
or
popfw
push
into
insb
mov
mov
adc
lret
sub
shlb
stc
dec
jbe
dec
in
das
xor
xor
xor
std
mov
std
cltd
add
dec
addl
mov
pop
decb
adc
push
adc
mov
sar
stos
inc
sub
out
fndisi(8087
loope
popw
ds
test
sbb
xor
dec
loop
mov
pop
pushf
push
ljmp
pop
insl
mov
out
jmp
mov
or
and
lret
lods
roll
sub
add
std
mov
data16
xor
xchg
pop
push
popl
push
cmp
movsl
or
imul
gs
adc
push
mov
pop
inc
mov
mov
xchg
add
std
push
inc
ret
or
cmp
mov
leave
inc
stos
inc
aaa
movsl
jo
pop
subb
and
sarb
data16
xchg
and
sub
adc
pop
or
in
out
xchg
scas
pop
cli
adc
int
fidivrs
out
gs
dec
push
dec
shlb
xchg
xor
add
pushf
jo
bt
jmp
lods
clc
push
pushf
sub
pushf
xor
lea
jl
stc
ror
jb
pusha
cmp
pushf
neg
jmp
cmpsb
std
push
dec
imul
sub
dec
ficoml
daa
xchg
mov
jae
rorl
and
aad
test
and
aad
repz
es
pushf
and
xlat
jbe
div
sub
pop
adc
aad
xchg
lods
inc
jge
insb
ret
fbstp
push
dec
xor
mov
lods
jae
sbbb
xchg
adc
lahf
xor
pop
mov
aaa
dec
xchg
hlt
in
pop
fbstp
xchg
mov
inc
adc
and
or
pop
xchg
outsb
mov
push
in
int3
mov
popf
sub
shrb
insl
jne
xor
leave
dec
test
in
jnp
in
ja
add
mov
lret
xchg
sbb
rorl
sub
in
mov
mov
and
insl
ljmp
sahf
or
or
into
sti
mov
mov
and
test
mov
pusha
cmc
push
orl
imul
data16
pop
sub
lods
xchg
hlt
add
faddl
sbb
test
fimull
or
maskmovq
mull
out
push
lds
pop
imul
push
pop
clc
lea
aad
xor
test
fs
cmpsl
fimuls
out
mov
xor
mull
sub
call
testb
jle
in
rcrb
scas
jno
aas
in
fisubs
xor
jecxz
fistps
mov
imul
int
inc
insl
jno
shll
mov
ror
ljmp
pop
mov
mov
and
sbb
mov
andl
es
mov
cmpsb
pop
mulb
xor
pop
loop
fcmovnu
dec
popf
test
jge
dec
push
lret
and
jmp
lods
or
adc
stos
push
mul
in
ja
cld
inc
sub
sbb
or
arpl
xor
jb
mov
and
mov
adc
sub
mov
stos
into
fcompl
sbb
and
adc
add
ror
mov
les
in
lock
lods
bsf
pop
movsl
adc
jg
mov
jb
sub
aaa
xchg
mov
int3
scas
cmpsb
je
pop
lret
lea
aam
jb
push
push
inc
das
or
out
pop
mov
popa
cwtl
pop
pop
in
mov
aaa
jl
mov
xchg
inc
stc
jnp
push
mov
jae
in
call
xchg
pop
jno
mov
cli
xor
iret
xlat
cld
mov
daa
pop
fstpl
push
aad
clc
xlat
xor
add
mov
dec
xchg
or
loopne
hlt
jns
add
pop
mov
cmp
mov
mov
fidivs
push
test
dec
rorl
or
fucom
movsl
inc
clc
inc
int
pushf
insl
cli
push
xor
ror
rolb
push
loopne
out
lahf
scas
mov
pop
insl
loopne
push
mov
jbe
enter
sbb
mov
loopne
lds
test
mov
push
das
cmpsb
aam
pop
xchg
aaa
insb
push
outsb
popf
and
push
pusha
mov
cli
jg
pushl
xor
mov
popf
mul
add
popf
lahf
mov
rcrl
inc
lea
xchg
into
popa
es
ret
adc
mov
pop
test
in
sbb
scas
pop
and
enter
push
xorb
fmull
frstor
icebp
mov
ret
insb
hlt
imul
lahf
rorb
or
mov
mov
mov
xchg
in
mov
pusha
pushfw
popw
sets
mov
push
not
call
pushf
in
aas
aaa
test
aam
scas
inc
fisubrl
int
jp
cltd
in
dec
mov
jg
xchg
and
jmp
daa
lcall
mov
pop
jnp
mov
sbbl
inc
mov
add
mov
or
in
adc
mov
pop
data16
jp
xor
cmpl
out
idivl
cld
sbb
mov
ja
stos
xor
imul
cmpsb
lods
xor
test
out
jg
add
cltd
mov
test
notl
loop
rcrb
pop
in
leave
add
insl
jmp
movb
jmp
push
mov
mov
call
dec
pop
jmp
sub
xor
mov
pushf
daa
jmp
fidivrs
cltd
in
or
cmp
mov
stos
fnstsw
sti
testb
push
les
pop
sub
nop
xchg
mov
jns
pop
pop
cmp
je
fsubrl
jns
xchg
lods
aad
mov
imul
add
lret
daa
or
cld
pop
jl
repz
fs
push
imul
shll
outsl
push
mov
cld
fidivrs
xchg
addb
inc
lods
pop
push
enter
mov
inc
lret
adc
cwtl
cli
les
xchg
cmp
addb
sbb
stc
push
inc
popa
outsb
incb
int3
mov
sub
shrl
jl
pop
cli
std
lock
and
fs
insl
dec
in
mov
movb
movw
lea
call
test
cmp
jmp
pop
dec
clc
lahf
cmpsb
dec
lds
dec
loopne
into
dec
fldl
scas
shrb
push
dec
cwtl
into
xchg
push
lcall
lahf
jns
lds
insl
cmc
pop
lahf
enter
lret
xlat
fidivrs
xchg
cltd
aam
mov
mov
sub
cmpl
sti
cli
pop
pop
lock
xchg
mov
gs
movsl
andb
sub
out
and
inc
fiaddl
dec
mov
lahf
mov
sbb
add
nop
inc
fisubl
jnp
sbb
mov
out
int
iret
xchg
loop
xchg
sub
adc
mov
pop
jl
movl
lret
hlt
jl
xchg
mov
lahf
lods
das
xor
es
jge
ja
mov
or
movsb
clc
xchg
repz
lret
pop
mov
or
dec
ja
mov
clc
test
jmp
call
mov
pop
adc
clc
jmp
call
gs
lods
sbb
repz
fstp
jbe
shrl
repnz
jo
mov
cmp
dec
mov
iret
jo
mov
add
xlat
pop
testb
push
inc
cmpsb
mov
lcall
add
insl
pmulhuw
cmp
idiv
pusha
cmpsl
mov
arpl
out
xor
xchg
add
mov
leave
icebp
sbb
iret
or
repnz
adc
outsl
sub
or
mov
popl
jno
nop
sahf
push
aam
mov
pop
jae
loop
les
add
pop
mov
pop
mov
icebp
and
adc
dec
mov
lea
call
call
lea
je
push
sub
test
call
dec
add
inc
mov
xor
int
push
stos
dec
call
or
xchg
bound
jno
scas
mov
into
xor
jnp
push
push
aas
int
in
mov
lds
pop
popl
lahf
sbb
insl
int
pop
cmp
fsubl
ss
test
xchg
or
push
leave
aaa
lahf
adc
mov
dec
cmp
inc
sarb
dec
jo
enter
inc
outsb
mov
jae
mov
jbe
push
jb
repnz
loopne
rcrb
inc
push
inc
test
insl
les
clc
fisubrs
jp
daa
call
sti
xchg
xchg
jae
lods
imul
aaa
das
leave
sbb
pop
mov
out
xchg
sub
mov
das
xlat
xlat
mov
and
inc
pop
pop
test
fdivr
cmpl
dec
pop
sub
cwtl
xchg
jbe
lods
inc
pop
shlb
ljmp
into
sbb
cld
push
cmc
movsl
lret
roll
lds
rol
add
fistl
xchg
xor
dec
andb
in
in
mov
mov
imul
aad
out
dec
mov
aaa
mov
xor
jge
in
in
fisubs
fbld
pop
loope
stos
and
cmp
pop
adc
fwait
jl
idiv
in
fildll
sbbb
ret
pusha
mov
mov
test
xor
pop
mov
cmpsb
stos
out
xchg
repz
sub
cli
testb
jo
clc
cmp
inc
rclb
add
cmp
test
shll
sbb
jmp
sub
int3
inc
push
jo
inc
lock
bound
sbb
ds
mov
test
pop
jbe
mov
cmp
sub
outsl
push
ret
add
push
stc
and
int3
dec
lds
inc
icebp
in
mov
pushf
pushf
push
lea
call
pusha
pusha
mov
lea
jae
call
clc
cmp
push
call
je
and
xadd
add
mov
sbb
pushf
add
or
mov
bt
cmp
test
test
pusha
call
dec
rcl
movzbw
cmc
push
pushf
shr
lea
lea
lea
xchg
or
push
ror
shrd
btr
cmc
push
pusha
xor
lea
pushf
mov
shld
mov
bsr
cmc
movsbw
shl
mov
pusha
setbe
shld
mov
push
clc
or
jmp
cs
mov
cmc
insb
pop
xor
xchg
and
gs
mov
mov
adc
or
inc
or
imul
repz
add
adc
cmp
push
and
movsl
cmpsl
sbb
lcall
cmpsl
and
ss
push
xchg
xchg
mov
jo
and
stos
jge
or
mov
dec
scas
xor
cmp
clc
pop
xor
adc
mov
inc
xor
jbe
xor
subb
dec
stos
mov
adc
xchg
clc
sbb
aam
adcb
repz
das
cmpsl
nop
jge
or
mov
cwtl
or
das
scas
mov
lcall
xchg
push
inc
push
pusha
mov
sbbb
into
js
test
jnp
jb
mov
jno
mov
or
bswap
cmpsb
pop
rorb
incl
xor
pop
in
or
dec
lods
and
dec
jnp
pop
jo
xchg
mov
jg
or
mov
pop
inc
push
push
adc
sub
xchg
mov
jmp
xchg
data16
and
inc
cvtdq2ps
aad
loope
dec
fstl
mov
shlb
fwait
popa
push
enter
aam
or
rolb
and
rolb
jne
and
jnp
sub
test
lock
xor
les
std
xor
test
jp
add
sti
push
sbb
mov
fcmovnb
inc
out
les
imul
jbe
cmpsl
dec
sub
shll
das
out
in
or
in
mov
pusha
movl
pushl
call
cmpsl
mov
mov
inc
xor
pushf
inc
mov
jo
loope
dec
push
xor
movsl
insb
sbb
adc
outsl
xchg
stc
clc
daa
popa
jbe
mov
rcrl
sbb
je
mov
sbb
jo
push
test
stos
mov
shlb
shr
aas
popf
xchg
pop
call
neg
call
ljmp
ficomps
je
xor
inc
cld
add
cmp
data16
int
stc
cmpl
cmp
sti
cmp
daa
shll
stos
call
cmp
fldl
pop
shlb
sbb
ficoms
scas
xor
push
mov
lods
shll
push
push
push
cmpsb
cmpsl
popf
or
pop
pop
push
add
out
andl
popa
pop
movsl
out
mov
jno
add
mov
sti
imul
addr16
std
sar
test
pop
movsb
fiadds
cmpsb
in
jp
movsb
jo
fneni(8087
cmp
in
insl
push
mov
sbb
cmp
shr
in
mov
mov
mov
push
pushf
mov
pushl
ret
mov
movb
push
lea
jmp
lret
fisubrs
inc
inc
gs
pop
pusha
gs
aad
cld
xor
cmp
vcmppd
sub
hlt
call
mov
jp
loope
dec
sub
pusha
mov
js,pt
mov
sbb
pop
mov
dec
leave
pop
stos
mov
jl
xchg
movsl
xor
adc
pop
test
outsl
xlat
das
jbe
push
adc
loopne
icebp
sub
lods
out
xchg
xchg
jmp
and
aaa
pusha
cmp
mov
mov
xor
lret
aaa
fidivrs
mov
paddb
fbld
mov
pop
mov
and
sti
inc
lock
test
into
jle
repnz
cmp
lds
mov
in
pusha
mov
and
in
mov
movsb
mov
push
out
mov
xor
lret
popa
test
jnp
mov
cwtl
enter
jnp
mov
mov
call
daa
lahf
insb
lahf
dec
inc
push
repnz
test
repz
iret
mov
jb
lock
cld
stc
add
rorb
push
lods
xchg
sbb
outsl
call
imul
aaa
jecxz
int3
lods
cmp
pusha
dec
mov
addr16
and
lret
insl
call
test
mov
test
test
shl
mov
jae
les
ljmp
inc
icebp
ljmp
adc
push
gs
pop
xchg
popl
push
stos
inc
notb
jmp
push
mov
and
outsl
mov
jl
sub
jnp
ljmp
lea
dec
lret
pop
jmp
push
add
jo
out
movsl
aam
icebp
jl
ficoml
xchg
test
jmp
aad
cmc
sbb
push
ret
aaa
jae
test
pusha
xchg
icebp
cmp
xchg
add
popl
xor
fldenv
fwait
sbb
xchg
mov
bound
sahf
inc
mov
aam
mov
addr16
add
push
idivb
add
shl
add
nop
test
mov
test
sbb
xor
sbb
lock
push
push
insb
jmp
jg
pusha
cmpl
push
outsb
sti
incb
sbb
jno
out
and
inc
stos
dec
icebp
ja
aas
stos
pop
fstpt
sbb
sub
cmp
scas
xlat
loope
shrl
mov
dec
lock
lcall
into
lret
fwait
cmpsb
das
push
mov
icebp
mov
add
mov
out
int
push
or
mov
cmp
shl
or
aam
ss
dec
in
ds
dec
jb
out
adc
sub
sub
push
cmp
mov
push
lahf
fsubs
movsl
fidivrl
mov
fcoml
ret
dec
in
xchg
sub
push
pop
pop
xor
push
ret
cmc
loop
pop
xor
fmulp
popf
cs
pop
xchg
add
cmp
xchg
movsl
xchg
jnp
aas
out
push
pop
adc
cld
in
xchg
lods
sarl
and
cli
lock
sbb
pop
cwtl
stc
ret
icebp
jecxz
jns
jl
out
pop
enter
ret
cmp
inc
clc
dec
scas
scas
mov
and
subb
vcvttss2si
dec
xor
sub
mov
mov
mov
test
inc
jbe
fildll
outsl
mov
sbb
cmp
xor
or
out
out
movsb
popf
std
and
mov
fcomp
loope
pop
pop
and
gs
mov
stos
jecxz
sub
jmp
loop
pop
mov
inc
mov
xchg
add
xor
inc
cmpsl
insb
enter
mov
movsl
fs
cs
cmpsl
mov
std
sarl
push
gs
call
jge
sahf
jp
rol
jno
mov
fiadds
test
insb
ret
test
adc
test
movsb
fbstp
and
outsl
cmp
pop
fdivrp
lock
stc
and
sbb
and
mov
dec
test
dec
xchg
jne
arpl
cmp
add
inc
js
je
jb
arpl
jae
mov
jle
mov
fs
or
cmpsl
imul
push
pop
in
or
push
push
jmp
stos
push
add
and
aad
sub
loop
bound
and
lods
mov
sbb
into
xlat
cmp
xor
ds
leave
sbb
enter
in
and
jle
pop
std
and
cmp
xchg
fldl
pop
sbb
dec
inc
or
inc
or
enter
test
xchg
xchg
lods
insb
pop
cmpsb
outsb
mov
and
push
in
mov
mov
clc
test
jmp
int3
in
inc
jg
mov
data16
sub
stos
sahf
cmpsl
sbb
xor
fimuls
in
push
mov
mov
cmp
inc
xchg
lods
lcall
push
lock
mov
mov
sbb
xchg
imulb
out
ja
mov
pop
and
mov
ret
rorl
aas
adc
pushf
pop
sbbb
repnz
mov
jge
sarb
inc
xor
xchg
inc
or
shlb
aaa
int3
fidivl
ljmp
jne
data16
les
sbb
jmp
ret
xlat
sub
ds
cmp
pop
mov
dec
mov
mov
ljmp
iret
lea
je
add
dec
scas
bound
loope
bound
dec
adc
adc
ror
inc
sbb
sbb
add
aas
cmpsl
add
or
loopne
sbb
fs
stc
ss
insb
ficoms
adc
mov
cwtl
cmpsl
rcll
and
divl
adc
or
mov
fnstcw
aas
lock
and
sub
xchg
or
xor
pop
bound
jae
push
sbb
insl
insb
or
inc
jno
cmp
aad
xchg
mov
dec
xor
ss
fisubrl
std
ds
mov
adc
sub
push
ljmp
mov
filds
repnz
pop
xor
jb
jne
jae
sub
dec
jl
fistpll
fimuls
jp
fidivrl
push
xor
dec
mov
xchg
daa
dec
insl
fldl
pop
sbb
xchg
jb
outsb
icebp
call
pop
adc
lahf
mov
pop
add
pusha
hlt
std
inc
push
adc
dec
inc
mov
lahf
cwtl
adcb
lcall
xor
shll
out
iret
inc
mov
imul
or
scas
movsl
cli
dec
dec
add
mov
inc
sbb
cld
push
popa
aad
cli
insl
jno
fisubs
mov
dec
into
dec
sub
bound
sahf
fimuls
pop
dec
mov
imul
add
test
and
fisubrl
gs
pop
push
lahf
adc
ret
xchg
push
cmp
sahf
cmp
sbb
add
in
mov
lea
je
pusha
clc
movl
push
or
push
movw
lea
je
mov
lahf
sbb
neg
xor
xchg
das
xchg
clc
mov
push
cmc
dec
shr
add
bt
clc
shl
mov
jmp
jbe
insb
aaa
xor
bound
add
iret
in
pop
add
dec
pop
stc
repz
mov
sarb
push
fstl
push
call
bnd
cmpsl
inc
imul
and
mov
mov
aas
cmp
scas
test
cwtl
shrl
or
loop
pop
jno
mov
arpl
hlt
inc
sub
sti
sbb
stc
sbb
cltd
test
jg
cld
adc
add
and
dec
dec
dec
lods
mov
fdivs
imul
jecxz
arpl
dec
mov
push
dec
inc
std
dec
push
xor
dec
mov
sbb
call
dec
hlt
stc
push
in
mov
imul
xchg
fisubl
mov
mov
mov
cld
pop
ret
inc
mov
mov
aas
lock
ljmp
jns
jae
repz
mov
mov
push
scas
ljmp
ss
lock
jno
lahf
jg
into
xlat
or
jle
test
jns
testb
sbb
stc
xchg
jno
and
pop
cmp
clc
cmpsl
rolb
fwait
ja
and
push
dec
sti
mov
sti
inc
pop
push
inc
xor
cs
ficompl
insb
mov
outsb
push
in
mov
jbe
repnz
call
test
mull
test
dec
mov
and
lcall
movsl
leave
xchg
dec
pop
xor
arpl
push
jmp
fabs
sbb
or
mov
push
add
pop
inc
sbb
push
inc
push
push
iret
sar
std
adc
mov
mov
dec
iret
dec
test
pop
pop
mov
or
inc
inc
out
mul
test
xor
fisubrl
jbe
enter
push
ja
or
mov
cvtpi2ps
daa
push
adc
mov
mov
or
xchg
adc
mov
sbb
fistpll
loopne
out
mov
shrl
adc
dec
mov
aas
into
sbb
pop
pop
cs
sub
and
cmp
je
or
shl
add
xor
fs
loopne
xchg
pop
or
push
int
inc
shlb
adc
lret
aaa
dec
pop
orl
dec
popa
shrl
jp
xor
cbtw
xor
and
jmp
inc
push
cltd
shlb
test
shll
rcrl
push
mov
ja
repnz
or
scas
push
stos
lret
sti
pop
xor
lcall
push
shll
xchg
pop
leave
and
mov
push
push
dec
push
popa
arpl
xor
add
mov
xor
xchg
xor
mov
pop
push
and
subl
outsl
inc
and
mov
add
xchg
mov
inc
mov
pop
in
dec
push
adc
sbbb
cltd
imul
cbtw
sbb
push
jne
out
sub
loop
xor
or
fwait
cmc
adc
xchg
orl
popa
dec
arpl
jb
lea
lea
sarl
and
out
lds
mov
int
imul
out
pop
and
add
inc
mov
cmc
mov
xor
mov
cmp
aaa
or
jbe
pop
cs
and
or
pop
stos
lods
addr16
bound
in
in
lock
cmp
pop
ret
ds
lcall
jp
jbe
sub
lcall
sbb
testb
pop
mov
push
popf
pop
mov
dec
into
fdivrs
lods
pusha
scas
scas
pop
and
push
ss
pop
mov
mov
sub
movb
dec
bnd
cs
imul
test
movl
jae
hlt
or
aad
shlb
add
add
out
xchg
mov
nop
popa
push
in
mov
mov
jp
jno
ret
stos
pop
loop
test
mov
mov
cwtl
jb
xchg
hlt
inc
pop
arpl
mov
xchg
and
xor
mov
and
jno
jle
fwait
je
negb
push
pop
and
mov
pop
jae
fcmovb
inc
sarb
mov
pusha
insb
mov
out
or
call
adc
jg
rcrl
or
xlat
lds
repz
xchg
mov
xchg
sub
jle
pop
pop
sub
cmp
mov
fildl
pop
sbb
add
cmp
cs
dec
loop
scas
xchg
or
sub
jbe
out
ja
xchg
enter
xor
addb
jne
and
xor
int
lahf
mov
add
dec
insl
jno
xor
mov
pop
in
lahf
aad
pushl
shrl
mov
mov
lock
mov
aas
fucomip
dec
in
inc
mov
loopne
pop
xor
faddl
mov
nop
dec
cltd
aad
stos
add
pop
sti
push
enter
fdivrl
stos
into
mov
add
repnz
pushf
inc
mov
hlt
or
xor
inc
dec
jbe
mov
xor
xchg
pop
scas
mov
push
call
sbb
int
pushl
rolb
ja
in
mov
movsl
int3
push
cmp
or
push
les
std
or
aam
mov
imul
inc
clc
push
icebp
mov
seto
adc
test
and
lret
std
adc
sti
mov
pop
rol
dec
push
ljmp
xchg
vmovaps
loop
es
ja
cs
fisubl
xor
mov
insb
inc
clc
out
in
adc
push
outsl
das
test
push
jp
add
repz
push
into
fldenv
jg
adc
adc
mov
stos
lahf
cmp
and
shll
enter
mov
or
xor
mov
pusha
dec
stos
shll
cmpb
jmp
push
icebp
es
out
jae
sub
pushf
cmp
rolb
inc
sub
fs
lret
push
add
mov
int3
ss
les
pop
and
mov
xchg
inc
inc
pushf
out
faddp
inc
inc
pushf
fcmovu
cltd
dec
inc
lods
xchg
rol
inc
je
dec
inc
jg
and
pop
jmp
ja
fs
mov
xor
in
mov
push
js
mov
push
cs
test
xchg
pop
mov
iret
inc
mov
sti
stc
pop
sbb
xor
leave
sbb
push
enter
or
les
mov
sbb
inc
xchg
cmp
sub
orb
xchg
mov
sarl
cmpsl
push
xor
push
cmp
jno
push
or
scas
dec
repz
jno
leave
or
sbb
and
lea
mov
mull
je
jno
dec
in
mov
mov
cmp
pushf
mov
stc
sbb
sbb
sbb
lret
sar
push
mov
shrl
fs
adc
fcompl
sarb
and
popa
pop
inc
push
cmc
dec
dec
push
add
mov
shlb
js
adc
in
mov
jmp
shrd
and
and
add
sub
movzbw
xchg
push
mov
seto
xchg
mov
pushf
movsbl
lea
mov
pushf
mov
pushf
mov
pusha
push
bswap
mov
mov
movw
pushl
mov
pushl
ret
push
call
cmp
cmp
movb
lea
jb
cmc
cmc
cmp
pusha
movb
push
lea
jae
not
rcl
lea
mov
adc
inc
sub
mov
pushf
mov
stc
test
sub
jnp
sub
jmp
xchg
test
jp
sbb
iret
rcl
push
rorl
lcall
push
push
push
ljmp
inc
inc
sbb
sarl
inc
pop
fisubrs
inc
mov
sbb
xchg
adc
dec
fisubl
sub
push
fidivs
fs
sub
and
dec
jno
ret
stos
pop
rolb
ffree
pop
jecxz
scas
jno
sbb
push
xor
call
sub
adc
and
roll
leave
adc
into
and
cmc
shll
xlat
and
add
int3
dec
pop
cld
push
push
inc
xor
leave
xor
cwtl
aad
pop
adc
popa
pushf
mov
mov
inc
js
movsl
addr16
sarl
sbb
adc
dec
and
xchg
stos
fs
xchg
repz
int
mov
in
mov
jmp
push
add
jnp
cmp
jmp
jmp
dec
sub
mov
and
add
jnp
inc
adc
aas
sub
xchg
imul
xor
mov
or
cli
and
sbb
push
lods
outsl
pop
movsl
mov
cmpsb
je
mov
jno
test
ret
xchg
movsl
loop
dec
adc
data16
cmp
or
mov
sar
subl
movsl
jo
cs
jmp
inc
pop
pop
and
call
push
push
mov
xchg
mov
enter
std
sbb
jecxz
xchg
adc
lock
je
shll
sub
and
inc
add
xchg
jle
aad
repnz
or
inc
pop
push
and
sarl
xlat
out
add
arpl
decl
pop
push
xchg
mov
or
xor
mov
and
inc
hlt
jecxz
or
sub
pusha
mov
outsb
leave
sub
xor
jae
loopne
sub
sahf
aaa
mov
cmp
xor
dec
mov
sub
mulb
insl
outsl
pop
adc
jmp
insl
test
push
in
mov
sub
scas
sbb
shlb
push
enter
popa
sub
xlat
pop
fdivrs
inc
popl
dec
xchg
jno
sub
mov
and
in
scas
int3
leave
outsb
lock
mov
mov
cmp
mov
in
je
test
stc
addr16
lods
test
stc
popf
cmc
pop
scas
sub
stos
pop
dec
and
xchg
sarl
xorl
sbb
ret
sub
xor
xchg
test
popf
jns
int
insb
fstps
sub
or
cmp
test
lcall
pop
ljmp
adc
arpl
sti
push
jno
push
ret
imul
ret
mov
hlt
addr16
sub
data16
pop
jae
cmp
fsubs
push
mov
lcall
mov
push
mov
jae
into
pushf
fldenv
cmp
pop
cmpsl
adc
jne
add
sub
cwtl
lahf
add
ljmp
lea
das
loopne
pusha
arpl
in
push
and
jle
dec
sbb
ljmp
mov
xchg
xchg
insb
push
mov
and
inc
out
push
xor
pop
inc
push
in
movb
pop
dec
sub
add
notl
mov
adc
adcb
les
movsl
aas
fsubrl
mov
jecxz
into
sub
stos
pop
mov
and
sub
adc
loopne
cwtl
push
cmp
inc
dec
dec
ret
jl
mov
rclb
les
int
push
adc
jno
testb
xor
xorb
add
inc
test
cwtl
dec
ss
cmp
adc
or
cmpsb
mov
pop
ror
lods
shl
and
add
dec
inc
sub
xor
push
jmp
xorl
icebp
test
dec
mov
pop
xor
inc
stos
adc
pop
sbb
test
sbb
adc
mov
adc
mov
mov
lea
jns
jnp
xor
test
xor
fsubs
push
int3
dec
add
fisubl
xchg
or
sub
sbb
bound
es
fists
cltd
xor
cmc
mov
cmpsb
xchg
mov
mov
fldt
aas
cmpsl
mov
and
pop
pop
push
hlt
loop
clc
pop
pop
sbb
mov
rol
add
popa
sub
mov
mov
push
fdivrl
ss
fidivrs
inc
sbb
jecxz
test
inc
aad
loopne
loope
aam
ljmp
sub
adc
bswap
movsbw
lea
lea
pushl
mov
mov
pushf
movl
jmp
xor
pop
push
es
jno
or
test
incb
mov
aaa
fildll
lcall
pushf
mov
decl
mov
mov
jmp
mov
mov
push
lcall
mov
jmp
fnstcw
mov
jo
add
inc
mov
push
mov
repz
and
filds
adc
jg
dec
sbb
lret
jbe
sti
dec
paddq
mov
jbe
rcll
js
imul
fsubrp
rolb
add
add
in
mov
adc
fcmovnu
mov
or
add
jns
ret
or
fcompl
or
cltd
popf
aas
adc
repnz
pusha
sbb
add
sbb
or
jae
adc
pop
sbb
sub
jge
push
loop
jnp
hlt
bound
iret
inc
cld
dec
pop
nop
aam
test
add
rcll
dec
out
pop
xchg
lea
adc
inc
aam
rcll
jno
jg
mov
and
push
repz
ds
pop
pop
rcl
push
xor
mov
mov
mov
xchg
mov
inc
std
push
subb
pop
enter
or
fsubl
add
stos
sub
xchg
dec
lock
xchg
sub
push
in
mov
sub
pop
sti
dec
add
add
adc
and
jp
push
test
cmp
xchg
pushf
std
cmpsb
dec
inc
loope
mov
jbe
daa
mov
pop
cmp
fs
icebp
mov
pop
sti
dec
sub
jae
add
cwtl
sbb
dec
dec
xchg
adcl
xor
out
loop
mov
insb
jo
lds
inc
int3
ss
or
pop
pop
sbb
out
mov
gs
pop
inc
bound
mov
add
dec
loope
out
lret
sbbb
sbb
cmp
add
jb
ja
dec
inc
cmc
push
sbb
sub
xchg
add
mov
pop
lret
fs
mov
and
xor
fs
xor
add
push
les
cmpsb
mov
in
adc
fwait
lds
test
pop
ror
adc
pop
dec
insb
rolb
incl
insl
cli
stc
es
stc
add
repz
addr16
sub
jmp
and
jl
jle
push
scas
xchg
inc
lods
mov
push
adc
and
stos
sbb
outsl
in
or
sub
enter
cwtl
iret
in
adc
cmp
and
aad
and
shll
adc
shl
imul
testb
and
or
push
or
stos
scas
xor
pop
in
adc
dec
orb
pop
leave
dec
push
lods
stos
jg
subl
in
push
adc
cmpsb
xchg
sub
push
out
pop
test
pop
and
mov
push
mov
subb
ret
daa
imul
xchg
clc
mov
in
xchg
ja
or
jecxz
rolb
jecxz
jmp
jle
test
jbe
lea
test
in
mov
mov
data16
fcmovnb
ja
fidivrs
in
mov
popf
push
mov
scas
mov
mov
jnp
push
ljmp
outsb
sub
mov
push
cmpsb
popa
push
dec
push
dec
je
icebp
aad
and
mov
xchg
popf
out
dec
sub
cmpb
xchg
pop
loopne
stc
leave
and
mov
xor
push
lret
mov
or
xor
mov
pushf
cmpb
pusha
jmp
pop
insl
shlb
arpl
paddsb
gs
jmp
xchg
shll
jg
iret
push
and
dec
cmc
pop
jne
pop
mov
sub
adc
sub
sbb
sbb
push
fadd
jg
lret
and
fs
or
fnstsw
push
ret
cmpl
push
arpl
jp
ret
pushf
sub
dec
cmpsl
jo
hlt
mov
jno
inc
xchg
inc
repnz
aad
sub
jnp
jecxz
aam
inc
daa
pop
loopne
lea
rorl
mov
jp
fists
fisubl
jb
pop
sub
push
cltd
dec
lret
adc
dec
jno
mov
mov
lods
ja
cmp
inc
and
imul
rclb
int3
xor
inc
outsl
ffreep
push
aad
inc
pusha
out
ffree
inc
inc
dec
pop
sub
shll
cs
pop
out
sub
add
jge
jns
xor
ret
jmp
orl
icebp
sbb
inc
cmp
jo
cmp
lock
xor
pop
and
mov
inc
popa
mov
repz
and
push
cmp
lret
cmc
ficomps
push
in
orb
scas
stos
lods
cltd
js
clc
dec
inc
xor
sbb
jbe
inc
ds
sbb
and
aaa
shlb
addl
xchg
push
in
mov
pop
inc
int
popa
fadd
lods
iret
jmp
in
aad
scas
call
mov
sbb
or
icebp
lret
pop
sub
repz
sti
cmp
dec
je
jb
xchg
mov
call
inc
and
mov
sub
xor
mov
pop
out
inc
push
mov
jge
ds
adc
std
rcrl
out
push
sbb
mov
cmp
or
lock
cmp
push
loop
jbe
or
loope
xchg
xchg
in
pop
negb
loopne
shl
inc
jmp
jp
mov
push
and
mov
pushf
out
fadd
cmp
push
out
dec
inc
lret
outsl
push
push
test
fnstenv
daa
pushf
inc
and
negb
lret
cmp
mov
mov
push
jmp
sub
stc
mov
bt
jmp
cmp
xor
dec
mov
push
movsl
and
insb
sti
and
ror
or
nop
mov
ret
inc
adc
call
adc
mov
idivb
sub
je
dec
push
push
pop
stos
lcall
push
jno
adc
in
xchg
xchg
roll
dec
call
fdiv
out
pop
xchg
ffreep
dec
push
mov
sbb
xor
imul
xor
cmp
inc
scas
lcall
inc
xor
mov
into
fldl
aad
or
jbe
test
mov
or
int
and
cli
xchg
and
cs
dec
fisubl
in
into
jnp
jl
mov
call
pushf
lea
je
pusha
jmp
ljmp
out
out
push
pop
mov
push
push
cmc
stos
jno
lcall
lret
fisubs
xchg
jmp
scas
push
add
fidivrs
cmp
mov
push
f2xm1
fdivrs
mov
push
in
mov
aam
jne
push
jae
or
test
mov
mov
fwait
pop
mov
lret
mov
mov
mov
pop
fucomp
pop
pop
insl
or
or
cmp
jo
or
dec
imul
sub
jp
jne
sarb
push
mov
jmp
mov
cmp
pop
mov
sarb
xor
or
add
sti
fldenv
insl
test
jecxz
mov
xor
adc
movsl
nop
cwtl
out
or
pop
xorl
pop
mov
add
enter
les
hlt
xor
sub
orl
enter
mov
pop
fidivrl
movsb
push
scas
inc
pop
fildll
cmp
xchg
sbb
push
mov
out
scas
sub
nop
push
fsubs
inc
aad
je
pmaddwd
sbb
xor
pop
fstpt
mov
cmp
mov
shl
shl
mov
mov
addr16
data16
dec
mov
or
add
ret
fdivl
subb
fldl
or
dec
push
inc
fidivs
sub
add
or
xchg
das
jmp
pop
repnz
je
cmp
mov
add
clc
xor
add
push
sbb
jmp
add
xor
gs
js
pop
mov
das
add
xor
push
sbb
mov
incb
jns
jo
shrl
es
dec
xchg
jmp
ret
loopne
inc
mov
cmp
test
inc
add
mov
sub
pop
jecxz
xor
adc
outsb
xlat
testl
mov
add
mov
scas
mov
add
test
and
or
adc
arpl
xor
push
cmp
or
ds
cmp
adc
pushf
adc
pusha
mov
mov
cs
jp
out
pop
add
inc
inc
add
lahf
in
or
sub
mov
addr16
scas
dec
add
call
xchg
das
cmp
je,pt
pusha
pop
movsl
add
mov
dec
filds
ret
stos
test
add
xor
fld
jno
std
add
mov
jge
loop
es
pop
cmp
sbb
aad
nop
shlb
scas
testl
mov
ret
loope
add
push
jl
or
and
imul
fiaddl
shrb
sti
int3
xchg
mov
shlb
mov
imul
add
add
roll
mov
add
mov
inc
loope
mov
test
xor
xor
lock
stos
xchg
addr16
add
jbe
subl
add
push
pop
jge
pop
iret
or
in
xchg
add
loop
fildl
add
movsl
jmp
iret
roll
jnp
insl
cmp
test
mov
ja
movsb
rolb
std
pusha
and
xchg
add
xchg
lret
into
and
sti
mov
or
pop
shlb
fbstp
sub
dec
sub
and
stc
mov
sub
popf
pop
add
push
mov
xchg
je
add
jmp
roll
icebp
inc
sbb
add
fsubrs
sti
sbb
inc
arpl
sbb
sub
pop
ret
mov
pop
ficoml
mov
and
sbb
mov
shlb
pop
shlb
jns
mov
mov
decl
ljmp
shlb
notb
add
loope
jo
stc
mov
dec
sbb
outsl
add
mov
popl
movsl
in
mov
add
fs
cmovae
mov
ficoml
xchg
jp
jbe
xor
daa
mov
dec
adc
and
test
add
sub
ss
pusha
negl
adc
jmp
sbb
jg
popf
push
es
sbb
stc
cli
inc
cmp
insb
mov
xchg
cmp
add
int
lret
into
mov
pop
mov
inc
outsb
scas
fdiv
clc
subb
xor
and
cmc
jo
imul
jmp
dec
push
das
add
rcr
repnz
shrl
loopne
mov
add
rol
jbe
movsl
popa
and
mov
ds
or
ljmp
or
jp
stos
inc
add
inc
enter
and
add
cmpsl
push
or
rcrb
divb
sbb
test
and
push
adc
add
mov
add
scas
adc
pop
movsl
xchg
or
sbb
add
pusha
push
push
pop
mov
movsb
and
mov
add
fwait
xor
dec
add
and
stos
jb
test
inc
test
aaa
sbb
xor
mov
ffreep
arpl
test
scas
fdivrl
add
stc
cmp
and
pop
xlat
out
lock
add
ret
les
xchg
add
jno
dec
sbb
mov
jle
imul
addr16
add
movsb
ret
push
dec
cmp
inc
sbb
pop
fidivrl
les
rorb
pop
sub
dec
or
pop
push
lea
push
xor
sbb
xchg
mov
pusha
shlb
add
cmc
flds
add
sbb
lahf
in
call
ret
or
shll
sbb
and
bound
xor
insl
hlt
ror
sub
stos
sub
and
jae
aas
inc
filds
adc
mov
scas
add
add
pop
mov
push
mov
xchg
std
out
pop
add
mulb
aaa
sub
jle
hlt
mov
push
les
mov
and
and
into
or
mov
add
andb
jle
mov
mov
xchg
mov
xor
adcl
je
push
leave
bound
sbb
sahf
adc
xchg
pop
and
mov
cmp
add
xchg
mov
or
cld
inc
add
mov
inc
movsb
out
repz
xor
push
shlb
mov
das
stc
loope
push
push
xchg
or
fwait
xorb
inc
mov
int3
loop
xchg
sub
inc
and
add
xchg
fdivl
and
mov
mov
and
loopne
add
rcrb
les
xchg
addb
enter
sbb
inc
add
and
add
mov
jmp
xorl
data16
stos
lods
mov
mov
cwtl
xchg
sub
or
pop
mov
push
sbb
add
mov
sbb
xchg
mov
std
cmpsb
or
push
mov
mov
call
outsb
add
adcb
push
addb
clc
push
cmpsb
or
xchg
mov
add
xor
shl
xlat
mov
or
ss
add
and
mov
and
ljmp
adc
mov
dec
testl
loopne
add
add
mov
add
sub
add
addr16
inc
xlat
push
mov
xchg
popf
xchg
fdivrl
test
ljmp
sub
sbb
add
push
push
out
divl
add
iret
test
mov
lcall
jbe
insl
icebp
subb
in
push
xor
adc
add
add
xchg
imul
fildll
add
mov
pop
sub
test
mov
sub
pop
xchg
add
stos
cmp
ret
jb
mov
loopne
lret
enter
aas
lods
addl
xor
push
add
repnz
add
pop
roll
insb
stc
mov
xor
jg
add
jns
and
mov
std
in
add
adc
add
test
mov
cld
cltd
pop
add
mov
mov
push
pop
push
xchg
ret
push
lods
adc
cmc
adc
mov
cli
pop
push
sub
out
lods
add
scas
xchg
int
call
push
add
push
sarl
cmpsb
jns
into
and
cli
jl
add
outsb
lahf
lods
adc
pop
sbb
das
nop
ficoms
repz
add
aas
cmp
xchg
sbb
mov
insl
inc
jnp
bound
add
out
test
push
and
pop
out
jb
sub
test
inc
mov
xor
test
mov
add
jmp
and
mov
popf
fwait
add
dec
fnstenv
and
sub
imul
rorl
ja
and
dec
add
add
mov
sub
mov
add
push
and
xchg
add
inc
das
sub
pushf
mulb
dec
mov
mov
dec
add
and
or
sti
nop
aad
push
add
inc
inc
repnz
jbe
pop
popf
pop
xchg
inc
mov
pop
rcrb
mov
xor
mov
stc
lea
in
xor
nop
rorb
hlt
mov
add
push
addr16
lds
mov
cmp
mull
pop
xor
sub
inc
or
lods
mov
icebp
add
popa
in
xchg
sbb
fstl
add
mov
jl
shlb
xchg
pop
dec
test
scas
xorl
adc
push
jle
fiadds
int3
add
in
test
or
ret
cmc
jns
rorl
push
cmp
mov
addb
xchg
jno
jl
addr16
aad
or
pop
fdivl
data16
lea
cmc
or
lret
loopne
add
cld
mov
inc
iret
and
in
mov
cmp
push
gs
movsb
cmpl
mov
repz
addr16
jbe
and
ja
test
pop
xor
lret
lock
push
mov
inc
or
cmp
add
out
dec
adc
sbb
repz
xor
insl
adc
add
xchg
popa
insb
push
pop
add
lcall
sarl
iret
add
mov
jbe
lods
and
jo
add
push
inc
inc
mov
popa
sub
rcr
add
dec
sbb
pusha
lcall
mov
sbb
xor
add
jmp
adc
int3
nop
inc
xor
call
push
cmpxchg
mov
push
into
add
mov
add
movsl
in
add
jno
push
es
ljmp
hlt
pusha
push
push
xchg
jb
mov
movsb
xchg
jge
cmp
adc
jbe
add
in
xor
int3
sbb
mov
jle
mov
cmp
adc
pop
pop
cli
sbb
push
xchg
outsl
mov
sahf
and
jle
mov
fldt
xchg
pop
mov
push
or
stc
std
lret
iret
ljmp
mov
in
movb
sbb
xchg
call
stc
movsl
and
lahf
roll
sbb
daa
sbb
mov
pop
shl
loop
adc
enter
ret
or
mov
stc
cmpsl
dec
repnz
in
int
pop
fdivrs
mov
add
pop
stos
loope
shlb
hlt
sbb
sub
dec
inc
adc
mov
iret
addps
add
inc
push
repnz
add
or
movsb
pop
lods
add
dec
les
push
aas
movb
pop
adc
xchg
cmp
xorb
push
cld
test
leave
and
xchg
imul
inc
jg
mov
sub
sub
nop
fists
add
mov
mov
je
adc
rol
xchg
andb
pop
jmp
jnp
adc
inc
dec
shll
lods
dec
xor
pop
ret
mov
enter
adc
movsl
xchg
fcomps
and
xor
stos
test
inc
addb
jne
ficompl
cmp
out
mov
aam
sub
iret
inc
imul
or
int3
dec
xor
jnp
add
rolb
shll
in
dec
sti
es
mov
cs
mov
jl
mov
jge
push
ss
int
lcall
dec
jns
cli
test
popf
mov
xor
roll
adc
daa
rolb
push
sub
movl
push
xchg
add
in
lret
mov
jecxz
les
add
jbe
sub
cmp
mov
aam
testl
imul
and
xor
into
test
daa
jmp
sbb
mov
stos
pop
loopne
in
jle
push
mov
xor
push
and
xlat
cld
cmp
cwtl
mov
push
lock
inc
sbb
add
jns
mov
cwtl
test
sarl
pusha
adc
scas
daa
mov
push
and
mov
push
cltd
movsb
addr16
xor
test
mov
movsl
repz
out
xchg
inc
ljmp
fcomps
push
sbb
push
adc
and
add
andl
jle
ret
add
jne
mov
cli
or
or
leave
add
inc
rcl
add
lds
mov
fsubrs
jge
insl
xchg
xchg
fwait
mov
add
shlb
jo
mov
jle,pt
jns
icebp
dec
insl
or
sub
imul
mov
stos
sbb
daa
sub
xchg
fdivrl
shrl
or
xor
aad
adc
sahf
stos
or
call
add
xchg
mov
bound
lret
add
scas
cli
cmp
pop
inc
push
pop
mov
nop
rcrb
and
aaa
insl
ret
lcall
pop
add
mov
in
xchg
jo
adc
adc
enter
dec
aas
push
push
adc
adc
inc
andb
dec
push
xchg
scas
cmp
push
xlat
loop
mov
nop
sbb
loope
and
inc
push
mov
loop
lret
pop
or
xchg
mov
mov
shll
push
ja
mov
mov
mov
shll
scas
fists
cmp
sarb
ds
sub
sbb
xchg
push
sub
sub
loopne
into
push
ljmp
push
add
adc
arpl
test
or
rcrl
inc
xor
push
push
mov
cmp
push
out
cld
jecxz
add
add
inc
push
or
lods
add
fwait
dec
push
cmc
movb
push
cmp
jb
add
loope
jge
out
js
enter
xchg
add
in
cs
sub
jl
push
in
out
call
add
sbb
jmp
mov
jmp
icebp
sti
es
cs
cli
scas
andb
mov
daa
and
sub
sub
mov
icebp
adc
add
cmp
add
and
or
les
mov
sub
in
adc
ror
pop
cmpsb
add
and
push
pushf
loop
pop
add
mov
cs
iret
add
fbstp
mov
aaa
adc
inc
ja
cmp
subb
bound
daa
adc
testl
in
nop
jne
fwait
notb
loop
add
jge
out
ljmp
test
add
push
icebp
jo
add
sbb
jno
jmp
inc
add
sub
cmp
out
jne
mov
inc
sub
pop
add
sahf
test
les
cmp
sub
add
popf
fsubrp
rcrl
mov
testl
push
test
mov
sub
js
dec
cmp
dec
into
push
stos
add
int3
xorl
add
sbb
push
add
test
or
lea
push
mov
and
test
insb
mov
sub
mov
mov
ret
dec
std
xchg
add
sbb
push
pop
add
xchg
mov
push
mov
add
pusha
repnz
pushf
cmpsl
stc
rorb
xchg
jg
jp
mov
add
xchg
into
jge
out
out
add
pop
mov
adc
add
xor
push
sbb
push
push
mov
fsts
xchg
mov
mov
cmp
adc
stc
add
cmpb
sub
jge
daa
cli
xorl
add
and
idivb
inc
dec
push
mov
mov
dec
cmp
mov
cmp
icebp
cmp
cmp
rcrb
jmp
inc
mov
mov
stos
cmc
add
imul
popa
lcall
popf
scas
pop
add
mov
inc
clc
in
popa
xor
push
lea
push
rol
mov
jg
jge
mov
scas
xor
pop
in
hlt
jns
add
arpl
fcoms
aaa
lret
pop
faddl
sar
popf
scas
aam
add
add
iret
or
mov
cltd
sub
and
push
inc
addb
fildll
sub
aas
xchg
and
addl
call
xchg
add
mov
jnp
mov
testl
ret
mov
cmp
rorb
dec
fstps
mov
jmp
dec
xchg
fidivrs
popf
jmp
ret
fchs
push
jge
mov
sahf
sub
mov
cmp
out
or
mov
arpl
add
dec
repnz
out
loopne
pop
repz
jmp
mov
shrl
add
inc
cld
mov
push
and
cmpsb
movb
inc
cmc
rol
mov
xchg
cmp
or
dec
je
jmp
dec
scas
adc
int3
cmp
jae
sti
jmp
aam
icebp
mov
sbb
fcmovnu
or
stos
mov
mov
aad
cmp
sub
subl
dec
inc
mov
and
into
in
inc
es
or
and
in
lds
add
add
fdivrl
dec
xor
add
and
xor
les
pop
add
xor
jmp
js
enter
xchg
cmp
cli
into
shld
das
loop
ficompl
filds
rolb
ss
movsb
repz
push
pusha
or
lea
roll
or
dec
mov
sbb
ds
dec
out
cmc
icebp
add
pushf
adc
push
pop
lods
mov
stos
mov
xchg
sbb
lds
cld
add
loope
xor
inc
inc
stos
sbb
das
mov
pop
mov
sub
lods
inc
jne
mov
jno
insb
sub
cmp
mov
dec
xchg
or
inc
add
addb
or
testl
xchg
mov
in
mov
out
push
and
inc
jl
sbb
mov
inc
test
addb
out
adc
mov
inc
cmp
cmp
push
jmp
sar
push
xor
clc
mov
mov
xor
add
scas
xchg
and
js
popw
mov
add
movsl
imul
add
test
push
nop
popa
xchg
sub
aad
out
add
scas
dec
pushf
out
add
out
xchg
sbb
push
add
fldcw
sbb
into
movsb
pusha
pop
jl
leave
add
cmp
divb
mov
bound
add
pop
fstpl
inc
shll
adc
addl
mov
adc
adc
call
and
rcrb
push
dec
push
cmp
icebp
mov
cli
or
mov
stos
pop
push
inc
pop
add
inc
sbb
cmpsb
cmp
mov
mov
mov
mull
mov
in
add
push
xor
scas
push
cmp
xor
pop
outsl
pop
out
cmpsl
movsb
int
iret
adc
sbb
dec
mov
xlat
insb
es
add
jbe
popa
mov
add
shll
add
in
and
jp
sbb
sub
je
and
dec
sub
mov
mov
xor
adc
lahf
xor
xchg
insl
mov
shrl
imul
xor
ret
sahf
mov
lret
jmp
push
xlat
mov
inc
pop
nop
inc
loope
fsubrs
subl
jle
imul
add
adc
dec
stc
pop
mov
popl
jo
lcall
pop
addr16
std
cmp
fnsave
xchg
push
jecxz
and
xchg
cmp
js
mov
lock
cmp
or
and
insb
xor
add
cmc
push
mov
add
push
inc
or
inc
add
testb
lea
xlat
aam
fisubs
js
add
push
cmc
sub
dec
jns
push
inc
sbb
pop
mov
call
or
xor
cld
stos
jae
insl
pop
and
lods
add
push
pop
stos
aam
mov
cltd
push
add
aad
js
jp
stos
lcall
adc
and
arpl
mov
add
cmp
rclb
ret
insb
pop
fstpt
dec
roll
adc
decl
or
pop
add
addr16
clc
arpl
xchg
mov
sbbl
in
xor
jecxz
testl
push
sar
push
inc
into
icebp
pop
mov
mov
lds
rol
insl
bound
xorl
pop
shll
cmpsl
hlt
cmp
inc
add
es
dec
out
add
cmp
gs
repnz
shrl
add
lods
mov
sahf
out
cld
jnp
adc
lcall
rcrb
fists
jp
scas
cmp
lds
pop
jnp
add
in
imul
repnz
jo
movsb
arpl
subb
clc
outsl
pop
add
aaa
inc
stos
dec
push
add
movsb
xchg
xchg
add
push
aas
cmp
pop
cld
inc
iret
dec
out
add
les
add
dec
jge
nop
movsl
mov
inc
mov
add
into
sub
out
bound
aaa
pop
pop
mov
lea
pop
push
xchg
pusha
add
sbb
xadd
inc
mov
or
adc
and
lods
js
inc
adc
adc
aas
jg
xchg
icebp
daa
stos
into
add
xchg
imul
dec
fmull
mov
xchg
add
sbb
fs
inc
inc
jp
xchg
cmp
add
shl
enter
xchg
inc
mov
and
mov
fstps
mov
cltd
add
cli
inc
rclb
push
jl
sub
xor
add
leave
ljmp
ja
mov
xchg
sub
out
outsl
sub
add
sub
aam
std
inc
add
jmp
mov
test
out
xchg
push
sub
sbb
add
aas
xlat
ficomps
jb
add
lret
mov
in
jmp
enter
add
ret
rcl
inc
outsl
adc
ret
lea
sbb
inc
jns
xor
add
mov
push
and
add
and
mov
adc
add
cmp
mov
ret
jns
pop
sbb
dec
xchg
rcr
mov
add
inc
dec
cmpsb
filds
dec
inc
adc
adc
sar
das
sub
xchg
addb
add
dec
jecxz
cmc
in
add
int
das
loope
jnp
iret
popf
add
pop
je
jmp
jecxz
addb
xchg
dec
orl
cwtl
jno
int
add
std
add
cmp
mov
cmpsl
pop
pop
and
roll
cmpb
int
add
mov
je
iret
mov
sub
inc
push
divb
fcoml
hlt
aas
incb
insb
push
mov
add
cmpsb
pop
pop
sub
data16
lahf
rcrl
mov
pop
xchg
arpl
sbb
rorb
jecxz
out
add
loop
jge
sbb
and
adc
adc
add
ja
mov
push
jmp
clc
mov
movsb
lcall
add
das
mov
aas
sub
mov
push
inc
jae
rcll
loope
push
cmp
call
in
sub
sbb
add
or
test
sub
xor
mov
gs
add
cltd
movsl
mov
je
add
jp
hlt
popa
push
xor
add
mov
mov
inc
inc
add
add
negl
outsb
add
sub
mov
add
sarb
sbb
jne
je
pop
test
sub
inc
inc
into
push
mov
shl
aas
in
cmp
pop
test
add
cli
push
dec
shr
rcrl
dec
jbe
add
add
mov
push
aas
sbb
jae
mov
mov
xor
lods
sahf
jne
sbb
push
mov
int3
xrelease
mov
lea
fdivrs
mov
out
int3
sub
scas
adc
rolb
mov
in
sbb
mov
stc
xchg
add
andl
push
lock
pop
push
sub
jecxz
add
std
add
mov
incl
cmp
loopne
mov
cld
adc
aas
fwait
test
add
cmp
ss
cltd
inc
pop
std
jnp
sarb
cmp
test
add
inc
lahf
fstl
jno
add
xor
das
add
dec
arpl
mov
mov
movsl
jle
movb
flds
xchg
or
sbb
cmp
mov
lea
or
inc
call
adc
aas
adc
sti
idiv
inc
xorb
jno
mov
push
scas
outsb
adc
std
add
aam
push
jecxz
mov
aaa
xchg
ret
in
les
rorb
mov
jl
clc
and
cwtl
fwait
xor
incl
push
inc
cmc
fcmove
call
adc
mov
add
shl
sub
insb
sub
mov
inc
add
data16
dec
xor
js
stc
push
sbb
push
dec
adc
sub
out
add
jnp
push
cwtl
mov
inc
adc
cmp
add
sub
arpl
mov
mov
dec
push
add
sub
ljmp
jp
nop
xchg
sub
outsb
pusha
or
in
push
ret
pop
and
scas
jg
imul
pop
sub
mulps
stos
add
das
mov
push
je
and
popf
mov
xor
mov
cmp
jbe
imul
inc
or
push
mov
les
cmp
in
fiadds
shll
sub
push
xor
gs
les
pop
cmp
pop
mov
pop
out
cmp
ficoms
pop
popa
ds
cmp
jmp
push
jle
xchg
enter
test
outsl
stos
cmp
stc
sbb
cwtl
insl
subb
jg
dec
adc
or
aaa
fisubrs
pop
popa
int
lret
loopne
sub
ds
testl
pop
adc
jp
adc
mov
inc
add
je
lods
inc
iret
push
add
out
sbb
rcrl
mov
mov
push
into
add
xor
push
inc
inc
xor
add
cmp
in
pop
push
and
add
in
lahf
mov
jne
dec
mov
xchg
rolb
in
outsb
jp
or
jnp
pop
lret
int3
add
sbb
mov
mov
jns
or
imul
out
nop
loop
xchg
cmc
add
adc
mov
enter
push
mov
incl
loopne
cmpsb
idivl
pop
ds
mov
hlt
stc
or
sbb
sahf
in
lahf
ja
mov
fisubrs
sub
xchg
inc
xor
and
aam
xchg
add
xor
cs
jmp
mov
orb
add
mov
call
mov
inc
imul
inc
lds
or
jnp
add
mov
push
movsb
aas
sub
fstl
cmp
lret
jns
pop
push
cmp
or
mov
sub
jnp
ljmp
add
mov
sub
fs
push
add
jge
pop
clc
scas
and
test
fiaddl
testb
pop
and
cmp
shr
lods
pop
xchg
stos
push
adc
dec
add
js
sub
and
aaa
dec
enter
dec
cmp
adc
in
rclb
xor
test
cmp
popf
aas
ljmp
jno
jmp
xor
mov
sub
sbb
push
data16
mov
test
fwait
sahf
dec
sub
add
scas
add
push
pop
xor
inc
lahf
fimull
stos
gs
shrl
sub
addr16
cmp
dec
fs
cmp
inc
inc
ss
add
imul
xchg
add
movsb
sarl
pop
dec
inc
incb
pushf
push
movsl
dec
js
cmp
bound
shll
add
lock
clc
mov
add
sbb
cmp
popl
test
hlt
jne
in
cmpl
adc
out
add
lock
nop
outsl
or
inc
scas
pop
xor
ds
push
xor
mov
pop
or
push
mov
dec
mov
incb
jne
shlb
enter
movsb
cmp
add
add
fimuls
xor
nop
pop
jno
in
adc
and
mov
lock
push
andb
jo
imul
das
mov
xlat
rep
scas
push
xor
mov
jnp
ljmp
arpl
or
jo
aad
clc
jnp
nop
repz
xchg
cmpl
incl
inc
mov
sti
lods
cmp
in
jle
mov
ret
cmpsl
pop
jne
pop
inc
mov
sub
mov
out
daa
popf
fiadds
loop
inc
mov
hlt
xor
sbb
fnsave
xchg
sbb
sarb
cmp
es
add
fsubrs
push
push
imul
add
scas
sbb
xor
pop
and
je
mov
inc
mov
daa
sbb
add
adc
adc
jns
sub
add
mov
pop
arpl
testl
or
dec
lret
mov
add
xor
rcrl
int3
fs
and
mov
add
sbb
imul
es
sub
test
push
dec
inc
cltd
jae
adc
xor
lcall
daa
pop
xor
cmp
and
jno
add
pop
jbe
mov
xchg
fnsave
sub
adc
inc
sbb
or
fcomp
int
subl
sbb
push
mov
frstor
cs
rolb
dec
xchg
daa
jg
add
xchg
sub
xor
das
enter
iret
inc
or
fs
push
lods
add
fwait
mov
mov
faddl
bound
mov
cmp
fstl
push
inc
lock
ret
lahf
mov
inc
cmc
in
insb
pop
cmp
jp
mov
testl
add
fbld
outsl
mov
test
adc
popl
inc
inc
adc
loopne
fldenv
xchg
faddl
dec
lret
mov
sbb
cmpsl
dec
add
dec
int3
rol
mov
jge
enter
popf
mov
or
add
outsb
mov
test
in
in
mov
loope
jno
loopne
sbb
add
lahf
fs
ret
and
xor
lcall
imul
mov
mov
test
mov
daa
addl
and
sbb
cli
jg
test
mov
xor
push
and
mov
mov
and
or
mov
loopne
popa
dec
repnz
outsb
mov
adc
fst
fbld
sub
jnp
add
idiv
push
movsl
sbb
or
mov
and
std
jge
push
jp
ret
lahf
xchg
adc
test
popf
insb
add
dec
sbb
stos
cltd
jns
stc
adcb
mov
xchg
dec
ja
sahf
xor
dec
sbb
es
xor
jg
jne
push
daa
aam
push
mov
bound
fadd
nop
dec
sub
popf
test
sub
jmp
lahf
and
out
jo
subl
pop
ja
es
test
insb
add
hlt
dec
mov
or
or
add
xor
and
inc
cmpsb
sbb
je
movl
mov
xor
pop
je
stos
outsb
add
es
lods
test
or
xchg
mov
ja
mov
psubd
add
mov
testl
jmp
lea
xchg
lods
pop
scas
xchg
mov
les
shlb
add
mov
mov
push
lds
or
test
push
mov
add
fbstp
add
dec
jmp
fimuls
subl
out
add
and
pop
pop
pop
add
enter
inc
fimull
push
xor
add
and
ljmp
adc
or
mov
stc
sarl
stos
and
sbb
outsl
push
mov
inc
and
sbb
jne
sbb
pop
cmp
shll
cmp
leave
xor
rcl
add
ds
add
aad
inc
add
jecxz
lret
sarb
ss
push
xor
sub
aaa
xchg
jecxz
xlat
pop
push
insl
push
iret
pop
and
cwtl
cmp
xor
sub
mov
sahf
xchg
xor
add
shll
jle
scas
and
jb
xor
test
int3
cmp
add
clc
xor
pop
add
pop
cltd
test
inc
adc
rclb
in
stos
or
sbb
rol
jb
and
sbb
addb
in
push
pop
js
iret
aaa
cmp
mov
push
inc
add
xor
jecxz
sbb
fs
jbe
ss
xchg
inc
mov
adc
repnz
cmpsl
xlat
outsl
lcall
mov
dec
adc
mov
xchg
push
ds
add
ss
in
pop
lret
push
out
ret
jg
dec
pop
xor
mov
mov
jl
sub
mov
mov
adc
fstps
arpl
add
fmuls
pop
mov
xor
pop
in
dec
popf
or
xchg
jg
pop
ja
mov
rcrb
or
daa
mov
flds
ds
addr16
push
push
jbe
add
mov
jg
clc
aad
or
push
mov
scas
xor
fcmovne
or
std
pop
mov
sti
inc
adc
test
lret
inc
mov
into
mov
aaa
loope
add
add
xor
cmp
xor
cwtl
inc
add
shrb
adc
ss
push
push
add
add
addb
xchg
outsb
sbb
insb
sub
mov
inc
jle
xchg
adc
mov
dec
aaa
int3
xor
sbb
rolb
jp
mov
pop
add
mov
iret
cmp
idivb
mov
or
cmpsb
incb
add
xor
adc
mov
add
pop
xor
xor
add
jne
ja
dec
ret
pushl
cmp
push
push
test
jge
adc
xchg
add
mov
xor
jmp
fistpll
movsl
cwtl
mov
mov
sahf
stc
xor
add
mov
xor
aaa
push
arpl
and
rcrl
lods
mulb
pop
dec
fisubrl
lods
and
icebp
jle
sub
pop
pop
lahf
cmpsb
mov
out
cld
push
mov
aas
iret
push
inc
js
int
ljmp
xor
sbb
xorl
push
sub
xlat
push
rcll
cmp
shrb
loope
ja
pop
jl
add
cli
dec
push
sub
cmp
pop
sbb
add
xchg
xchg
lret
rcr
push
inc
jmp
es
push
add
mov
adc
bound
cmp
sahf
mov
mov
daa
cltd
add
ljmp
movl
aas
mov
repnz
and
pusha
push
dec
cmp
sbb
sbb
dec
test
popf
rcrb
mov
inc
int
cmp
xor
out
jno
push
sbb
mov
xchg
adc
rol
fs
xor
into
sbb
xor
pusha
gs
faddl
mulb
mov
sub
xor
xor
mov
insl
flds
push
cmp
aam
loop
lret
xor
out
mov
dec
or
xor
and
dec
add
sub
sbb
add
mov
adc
lcall
or
std
cld
aas
jne
jo
mov
inc
sub
pop
mov
sbb
mov
mov
iret
mov
mov
push
andb
and
rcr
add
lock
ret
shll
push
sbb
and
ret
fsts
and
sbb
mov
cmp
xor
or
cmpsb
loopne
add
scas
dec
data16
jae
jmp
sbb
xor
sub
xchg
cmp
push
xor
mov
xchg
inc
dec
cmp
jne
rcll
inc
fcmovb
cwtl
sub
adc
cmp
ficoms
xchg
adc
sbb
jle
out
sub
daa
popl
xchg
inc
scas
pop
outsl
cmp
push
or
add
mov
jmp
or
insb
pop
xchg
add
sbb
mov
insl
pop
test
out
cld
loop
add
cmpsl
mov
mov
add
loopne
xchg
fistpll
andl
cmp
gs
xchg
sbbb
push
dec
fisubs
les
imul
in
xchg
std
int3
inc
add
loop
or
clc
xchg
push
jbe
into
arpl
add
sub
movb
cld
mov
mov
xor
add
xchg
jnp
add
fwait
bound
movsl
lret
jg,pt
mov
jl
testl
leave
or
dec
jbe,pn
cmpb
les
adc
loopne
sbbl
pop
rolb
push
imul
inc
jl
repz
add
xor
out
sbb
xor
rcrl
or
add
cmc
rorb
inc
js
rcrl
ds
and
xor
icebp
fdivp
add
or
insl
adc
and
jns
xor
imul
mov
fiadds
and
sbb
mov
int
fists
insb
popa
rolb
xchg
add
cmp
mov
add
push
sti
dec
dec
pop
and
addl
popa
stc
adc
adc
nopl
sub
mov
out
lret
adc
add
jbe
mov
adc
inc
jecxz
es
aad
loope
clc
xor
pushf
jp
sub
nop
fbstp
mov
in
mov
fdiv
rcll
stos
adc
pusha
bound
aaa
fcompl
mov
and
dec
or
mov
push
cmp
xchg
insb
and
lock
add
loopne
sub
aam
cli
inc
movsb
test
or
test
push
and
adc
dec
xor
mov
shlb
aaa
aad
add
dec
push
shl
mov
add
jnp
jb
add
add
mov
mov
add
ljmp
add
fiadds
cmp
cwtl
xchg
add
test
inc
xor
fisubrs
lock
and
fnstsw
dec
add
mov
add
xchg
movsb
adc
push
or
cmp
or
icebp
cmpsb
push
jp
jne
insl
aas
bound
test
jo
sbb
movsb
cmpsl
mov
add
fcomps
add
sbb
add
and
xor
pop
std
mov
pop
loop
es
clts
fxch
mov
push
mov
rcl
jmp
dec
dec
jo
xchg
add
aam
mov
mov
xor
xchg
add
pop
fcoms
cltd
ret
jns
xchg
sahf
dec
cmp
add
xchg
dec
ror
out
mov
insl
in
rcr
add
sub
push
outsb
add
loop
add
nop
add
insl
scas
dec
adc
jge
and
jb
filds
cmp
jbe
and
jne
cmpb
inc
imul
es
popa
sub
das
fidivs
sub
leave
inc
sbb
add
jo
outsb
outsl
roll
mov
cwtl
test
or
es
stc
xchg
mov
jp
xor
flds
and
pop
mov
add
pusha
stc
push
outsl
repz
mov
stos
push
pop
push
lret
mov
into
call
and
sti
jns
sbb
sar
rcrb
push
lcall
add
inc
dec
sub
movsb
dec
outsl
sub
ss
int3
add
jnp
lock
inc
rol
push
jne
fisttpl
jge
push
adc
test
pop
adc
add
out
xor
lahf
xchg
push
outsl
adc
cmp
jl
pusha
sub
test
int
push
imul
cmp
sub
inc
push
lret
mov
xor
add
and
add
in
xchg
pop
or
and
push
jno
in
roll
cmp
lret
inc
or
addr16
pop
loop
cmp
subl
inc
aam
jnp
xchg
loope
sbb
in
add
in
addr16
sub
jge
inc
mov
adc
add
mov
jg
mov
addb
addr16
fisttpll
rcrl
rolb
xor
insb
mov
je
dec
sbb
sub
dec
ljmp
and
add
sti
or
pushf
mov
stos
vmread
add
and
mov
jle
add
out
pop
xor
repnz
mov
test
add
insb
adc
ret
xchg
or
mov
and
or
jp
sub
sbb
inc
push
movsb
pop
mov
scas
add
lahf
hlt
jecxz
sub
adc
mov
mov
add
outsl
dec
cmpsb
mov
add
and
mov
das
fisttpll
sub
add
dec
push
and
inc
push
bound
aaa
rcr
and
mov
jae
lock
push
idivl
mov
jl
lret
aad
add
call
test
jb
inc
xor
add
lods
in
add
in
mov
in
and
lahf
cld
xor
pop
cwtl
dec
sbb
xchg
sub
lods
loop
add
cmp
sbb
adc
add
sbb
add
pop
push
mov
or
int
icebp
ficomps
pop
outsb
jne
je
mov
popl
mov
push
inc
add
adc
ficoml
lea
call
add
inc
add
ret
mov
and
lcall
in
mov
mov
sub
sbb
rcrl
inc
jl
sub
add
jle
xlat
xor
fadds
pop
outsl
pop
inc
and
push
rcrl
xlat
mov
jnp
lock
push
addb
push
jbe
repz
movsb
add
fwait
inc
lret
mov
inc
leave
dec
lock
or
xor
fcoms
or
loopne
jbe
or
jno
rorb
insb
lock
xor
hlt
adc
mov
cmp
add
pop
jmp
sub
add
mov
add
sub
push
and
shlb
das
cmp
cmpsl
les
in
inc
ds
pop
cmp
shlb
popa
sub
in
or
sbb
insl
push
sbb
cmp
jne
test
add
data16
shll
mov
xor
inc
and
add
add
cmc
shll
jnp
cwtl
call
pop
cmp
add
adc
std
mov
add
cmp
mov
inc
mov
xor
stos
add
iret
cmp
mov
inc
inc
mov
xor
push
pop
inc
xor
lcall
add
push
addr16
push
xor
mov
mov
test
push
imul
sbb
cli
pop
lods
push
mov
sahf
into
out
push
jl
xor
outsb
xchg
scas
adc
jp
faddl
sbb
cmpsb
lahf
lods
mov
ret
leave
jge
and
dec
add
addl
mov
lods
adcb
out
fistpll
and
mov
lea
fdivr
mov
xchg
movsl
cmp
add
repz
out
call
xlat
mov
adc
sub
pop
and
rcrb
add
insb
lods
pop
jp
sahf
dec
pop
xchg
scas
mov
repz
scas
ss
loopne
jo
arpl
jge
in
imulb
mov
fisttpll
adc
mov
cmpl
rcrb
mov
sub
xchg
rolb
mov
xor
cmp
or
sub
stos
mov
fwait
add
mov
jge
pop
fildl
mov
lea
adc
push
or
enter
shll
inc
divl
dec
xchg
aas
sub
mov
dec
mov
sub
pop
add
cltd
or
dec
cmp
fwait
stos
xchg
xchg
jmp
rcr
add
cmpsb
outsb
int3
mov
and
cmp
inc
popl
insb
xor
ss
xor
movsb
aas
dec
mov
cmpb
out
aas
jne
xchg
mov
push
shlb
dec
adc
sub
int
fwait
jle
xorb
into
xor
jp
out
adc
ret
cmp
scas
lret
addr16
addr16
loop
mov
test
add
das
dec
adc
mov
mov
xchg
xchg
shlb
aam
and
loop
jnp
movsb
das
adc
mov
lret
add
and
pop
cmp
add
fisubrs
pop
out
inc
mov
js
movsl
sbb
ds
jne
pop
cltd
mov
sarb
jnp
iret
xor
xor
jecxz
sub
lahf
lock
add
add
nop
out
xor
gs
adc
in
cld
rorl
dec
out
xor
bound
xorb
in
adc
daa
push
repz
shrb
or
adc
push
jno
movsb
xchg
std
xor
pop
or
cmp
and
dec
xorb
xchg
call
rclb
pop
icebp
popf
sbb
pop
and
les
lret
mov
add
add
fwait
and
roll
sub
mov
xor
cmp
fildl
insl
lret
jo
rolb
xor
in
add
xor
ret
mov
pop
push
cmc
xor
cli
add
inc
push
push
shl
and
xchg
and
mov
xchg
roll
xadd
fnclex
pop
mov
or
scas
add
lahf
out
movmskps
shll
ret
jbe
sub
in
rcrl
add
ret
push
push
cmp
pop
dec
mov
ss
inc
push
sbb
pusha
movsl
sahf
jecxz
bswap
push
adc
out
push
jl
and
mov
lret
pop
fs
into
cmp
inc
mov
pcmpeqw
pop
jns
dec
lea
les
pop
xchg
test
lods
mov
pop
add
outsl
add
scas
push
lret
lods
mov
or
in
pop
xor
imul
add
xchg
cmp
adc
mov
mov
stos
rcrl
cmp
arpl
add
sahf
push
neg
repz
add
or
fidivs
inc
cmp
sub
jge
push
push
sub
add
aas
jp
out
stos
xlat
add
bound
push
out
add
popf
cmpl
rorb
push
xor
dec
dec
ret
pop
and
sbb
cmp
mov
roll
sub
leave
arpl
add
mov
xor
push
xlat
jne
sahf
outsl
or
mov
mov
popa
push
fdivs
sahf
add
adc
bound
test
jae
pop
xor
mov
iret
sbb
mov
sub
jecxz
adc
and
add
pop
mov
adc
jne
cmpsb
rcll
add
cmp
insl
cmp
add
sarb
or
xchg
pop
jg
into
test
aad
push
sbb
add
outsb
fcmovb
xor
leave
pop
cmp
cwtl
push
nop
bnd
mov
mov
lods
cmp
add
xorl
jp
repnz
xchg
rorb
push
stc
mov
rorl
jl
adc
sub
pop
sahf
iret
mov
je
xor
sbb
jp
mov
adc
inc
and
cmp
jmp
and
jo
sbb
js
push
str
popf
insl
in
xor
icebp
jmp
cli
cmp
flds
pusha
test
lcall
mov
notb
xlat
iret
pop
xchg
add
mov
sbb
daa
sbb
xchg
and
lret
adc
add
dec
rsqrtps
pusha
fcomi
dec
and
ds
mov
mov
test
and
or
jns
add
add
dec
or
sahf
mov
xchg
inc
lret
pusha
and
add
cld
mov
mov
add
popw
addl
in
cltd
xor
xchg
and
or
mov
sbb
rcrb
add
clc
cltd
add
and
adc
jns
jno
xor
dec
inc
xor
sub
xchg
int3
loope
rolb
xor
push
cmp
mov
xor
add
fistl
xchg
xchg
ret
loop
dec
test
and
jb
clc
sarb
xor
jno
orl
cld
fisttpl
pop
cmp
ror
sbb
dec
pusha
mov
cmp
sub
and
shrl
hlt
outsl
sbb
mov
mov
neg
sbb
sub
add
int
mov
lret
add
sub
imul
orl
out
adc
lcall
jnp
fstpt
dec
pushf
add
das
jb
jmp
in
push
cld
adc
mov
xchg
xor
mov
test
push
jl
jle
add
dec
lret
mov
js
fcomps
pusha
mov
mov
rorb
mov
cmp
push
xor
and
mov
dec
pop
sbb
test
sub
inc
aaa
add
lea
push
push
adc
bound
lahf
gs
shr
iret
jne
cmp
ds
cmp
fstl
dec
add
xor
xchg
adc
mov
jne
aam
insb
testl
lret
inc
scas
pop
int
or
or
pop
add
mov
clc
mov
add
inc
das
add
sub
add
dec
inc
cli
into
push
pop
ret
mov
adc
push
lcall
cmpsl
cmp
inc
inc
stos
lods
fs
jmp
std
push
daa
add
lods
jp
je
lcall
adc
lock
scas
inc
ret
mov
dec
xor
dec
mov
sbb
fldl
xlat
mov
test
mov
fisubl
push
outsl
xchg
shr
push
sub
shlb
imul
cmp
loopne
or
nop
inc
mov
subb
aaa
or
dec
mov
jno
aam
addl
xchg
add
xchg
inc
or
fwait
imul
jns
aam
lcall
ss
rclb
mov
aaa
add
jecxz
cmp
sti
adc
cmpsl
mov
push
lods
aad
jne
inc
fcomps
mov
shrl
mov
inc
icebp
dec
add
xchg
ret
xorl
daa
mov
sbb
jb
int
add
std
rcr
adc
roll
push
add
add
aaa
int3
xchg
adc
and
push
cmp
cld
adc
fisubrs
and
fcoml
test
jg
fld
js
sbb
sub
ljmp
xchg
test
stc
xor
jne
fidivl
into
add
lcall
add
mov
outsl
mov
aaa
cmp
mov
div
mov
jo
cmpsl
ret
lahf
xchg
das
call
or
xor
push
rolb
sbb
jge
dec
roll
mov
mov
xor
faddl
push
fiadds
inc
cmc
xchg
outsl
xor
movsb
and
pop
jl
mov
fnstenv
popa
notb
imul
inc
xchg
pop
andl
ljmp
inc
cmc
jae
xchg
imul
lahf
sbb
push
xlat
pop
decl
mov
adcl
leave
pop
dec
mov
sahf
adc
lea
pop
xor
cmp
sarb
mov
add
mov
rorl
jo
xlat
in
repnz
data16
add
cwtl
pop
outsl
pop
mov
add
aam
add
inc
cli
pusha
dec
jge
adc
cmpsb
xor
rol
and
lcall
xchg
jns
mov
cmp
inc
inc
mov
adc
add
push
and
mov
jbe
add
imul
pop
fstl
fcmovnbe
jle
dec
popa
add
cld
jbe
add
add
xchg
add
hlt
nop
rol
inc
insb
push
shrl
push
inc
add
push
lods
dec
fdivs
xor
add
fwait
iret
imul
pusha
cmp
das
stc
clc
sub
add
inc
pushf
sub
add
insl
dec
sbbl
xorb
mov
push
add
aam
test
nop
inc
mov
mov
pop
push
movl
xor
sbb
int
or
add
add
outsb
fldenv
cmpsb
lahf
imul
lods
jp
rorl
repz
es
add
sbb
push
loopne
add
mov
push
cmc
mov
outsl
add
jl
icebp
sub
fisubrl
add
enter
scas
shrl
mov
xor
subb
nop
lcall
cmc
cmp
bound
mov
mov
or
ret
or
xchg
xchg
pop
std
scas
pop
movsb
pushf
inc
outsb
sbb
push
xchg
xor
cmp
pop
aas
movsb
roll
lods
xor
add
rorb
dec
or
ret
mov
mov
vmaxsd
mov
xchg
xor
jle
pop
mov
mov
clc
jle
mov
mov
rcrl
sub
mov
das
fiadds
movsb
inc
xchg
push
cmp
arpl
pusha
fnstenv
jle
mov
add
jnp
and
loope
pop
cld
inc
scas
inc
aas
sub
mov
jne
dec
xchg
and
stos
jo
or
rcrl
dec
mov
jp
ficomps
inc
xor
idivl
mov
mov
pop
xor
cmp
pusha
dec
ds
sub
inc
jl
jno
and
sti
and
mov
mov
enter
test
imul
loopne
push
pop
flds
xor
cmc
cwtl
add
int3
pusha
jle
stos
cli
hlt
add
test
add
push
fsubrl
push
shl
into
pop
and
xor
adc
repnz
dec
vmread
loope
jg
mov
fbstp
ret
add
je
adc
pop
insb
lds
mov
arpl
adc
ror
pop
lods
cmc
xor
and
inc
add
inc
out
mov
scas
inc
mov
xor
mov
add
jmp
ret
cltd
and
mov
push
add
add
or
adc
ret
cltd
sti
add
mov
ljmp
inc
lea
lock
or
ud2
loope
push
bound
add
add
cwtl
lret
push
and
fnstenv
sbb
push
inc
xor
xchg
push
bound
jo
add
push
movsl
ret
cmpsb
inc
xchg
fistl
dec
subb
repz
ret
xchg
push
iret
xor
and
rol
out
into
lcall
aam
ds
pop
sub
das
clc
xchg
movsb
xorb
xor
cmp
pushf
cld
add
pop
lcall
aam
jae
mov
cli
lret
mov
shlb
inc
cmp
dec
popa
fmul
fs
mov
xchg
add
xorl
cmpsl
outsb
jp
nop
add
jb
popf
mov
sbb
cmpxchg
loope
fs
mov
or
fidivl
mov
iret
add
insl
loop
jl
mov
test
sbb
cmovg
insl
inc
mov
jg
aas
les
add
sbb
mov
and
fbld
jle
fistpl
enter
push
clc
daa
in
divb
push
xchg
or
jle
loop
stos
add
mov
hlt
jg
cwtl
cmp
push
ret
adc
rorl
stc
add
mov
xchg
icebp
jge
mov
lcall
sub
addl
sbb
inc
mov
add
or
les
in
pop
xchg
cmpb
fistpll
and
mov
inc
push
or
scas
das
or
add
jb
and
add
inc
and
add
push
dec
mov
out
jns
jmp
mov
xchg
sahf
adc
into
cmp
add
add
mov
fstps
pop
dec
and
pop
out
ret
or
push
xchg
loopne
fwait
jnp
stc
sub
iret
je
add
cmp
pop
xchg
xlat
mov
or
repz
stos
jle
mov
inc
xor
sbb
hlt
scas
cwtl
add
lock
rclb
add
leave
push
repnz
cltd
sahf
movl
lcall
push
cmp
xchg
inc
add
test
pop
or
lcall
data16
inc
push
loope
pop
rolb
test
loop
add
xor
push
add
popf
sbb
pop
nop
filds
into
cmp
jecxz
les
and
add
mov
add
addr16
add
rolb
inc
xorb
mov
cmp
xchg
clc
andl
inc
adc
loope
cli
lret
pusha
jp
inc
outsl
pop
pop
mov
jne
add
cmp
sub
adc
lahf
faddl
test
mov
sbb
pop
xchg
jb
jnp
sub
sahf
scas
push
mov
add
push
fwait
popa
sbbl
ret
adc
pop
push
sbb
lret
add
shll
das
xchg
xchg
inc
lea
sub
lret
lods
fstpl
stos
cmc
xchg
xor
add
cmp
add
test
popf
sti
add
add
mov
leave
push
mov
pushf
clc
lods
frstor
sbb
xor
mov
cmpsl
xchg
push
xorb
out
sbbl
jae
fcmove
loope
xchg
loop
shll
addr16
cmp
nop
test
orl
call
jp
rcrb
movsl
push
add
es
inc
push
jmp
inc
xor
jecxz
call
sarl
lahf
inc
inc
add
jnp
sbb
dec
mov
sub
stc
mov
inc
or
pop
in
movsl
stos
xor
inc
movsb
jp
lds
insb
cmp
pop
add
fstp
fadd
add
sti
and
add
pop
inc
inc
flds
ret
xchg
sub
xor
mov
sbb
mov
out
sub
sub
inc
repz
pop
movb
les
mov
fists
and
sbbb
push
sub
mov
add
movsb
sbb
pop
popf
mov
in
inc
sub
pop
ds
ja
and
cmp
cmp
add
int
xlat
shll
adcl
in
fadds
pop
cmp
mov
inc
pop
addl
and
jns
test
mov
imul
sarl
xchg
rcll
mov
fdivs
enter
add
sbb
pop
sar
fildl
add
add
xchg
xor
lods
mov
adc
xchg
add
movsb
rcrl
add
stos
cli
mov
ficompl
add
pushl
ficomps
mov
xor
imul
addr16
mov
inc
mov
sub
sarl
fstps
ja
rcll
push
inc
add
or
orl
test
pop
add
lea
std
inc
inc
add
jge
adc
add
cmp
xchg
mov
or
ss
out
imull
mov
lret
push
fldl
mov
mov
cli
adc
or
sbb
add
or
mov
xor
dec
jecxz
sbb
xor
loop
mov
popf
xchg
dec
adc
pop
add
mov
lods
add
and
dec
movl
push
outsb
add
cltd
dec
sub
fs
pop
ja
mov
inc
mov
push
dec
xchg
ss
sbb
ss
adc
add
in
sbb
xlat
and
aas
test
inc
dec
mov
xor
pop
fisubrs
and
pusha
andl
inc
sub
aad
addl
push
dec
leave
jl
and
iret
fcmovnbe
loop
mov
xchg
cld
out
xor
push
aas
enter
pop
xchg
mov
fldcw
jae
repnz
xchg
inc
arpl
pop
pop
xor
cs
sub
mov
or
bnd
scas
sbb
es
xchg
imul
insb
dec
rcrl
mov
popl
sbb
rcrl
push
lret
inc
add
xchg
sub
sbb
aas
xchg
ret
sub
mov
dec
adc
cmp
daa
adc
cmp
sub
or
icebp
mov
sub
xor
vpandn
inc
sub
adc
popl
ljmp
aam
enter
xchg
jle
pop
pop
and
jb
push
xor
dec
in
inc
xlat
inc
inc
add
cmc
std
add
or
inc
in
xor
outsb
xchg
inc
and
jbe
xchg
inc
pusha
icebp
jno
loopne
ljmp
sub
faddl
cmpsl
sub
gs
or
adc
aas
xor
out
mov
add
movsl
xor
cmc
gs
sbb
mov
inc
enter
push
xchg
out
push
or
mov
pop
ja
mov
inc
pop
adc
inc
add
sbb
and
jb
outsl
lods
ret
push
adc
xor
or
add
dec
movl
fcoml
xor
xor
andb
jno
pop
mov
jnp
push
shrb
ds
add
inc
ret
and
push
push
xor
jle
xchg
fiadds
pop
mov
mov
imul
out
jge
push
outsl
mov
xor
xchg
dec
xchg
xchg
cmp
lcall
push
je
push
push
testb
dec
mov
int
shrb
adc
mov
outsb
add
lret
mov
add
adc
mov
jbe
jg
pusha
push
movsb
jb
scas
mov
popa
ror
out
leave
add
inc
fldl
mov
and
lret
or
in
adc
add
aad
inc
daa
sti
in
add
jnp
mov
ds
add
dec
xor
sub
cmp
add
push
out
insl
pop
xchg
imul
cmp
nop
lret
jb
push
xor
sub
cmpl
inc
mov
xchg
add
mov
add
sbb
addl
and
test
hlt
jnp
arpl
loop
jle
call
rorl
cmpsl
jmp
mov
mov
std
pop
add
scas
push
jo
mov
inc
dec
xchg
fwait
or
sub
insb
scas
lock
xor
lods
add
sub
add
ja
loope
and
pusha
rolb
movsl
xlat
mov
push
xor
pop
inc
pop
and
ljmp
sub
cmc
cmp
inc
fistpl
sbb
in
cmpsl
aaa
hlt
mov
pop
pop
out
push
add
incb
xchg
mov
mov
outsl
hlt
fs
or
inc
jbe
inc
xchg
loopne
jl
repnz
stos
push
and
cmp
leave
and
sbb
cmp
mov
dec
jae
iret
pop
scas
movsb
or
lds
add
pop
cli
sub
dec
movsb
dec
pop
stc
inc
push
pop
mov
and
or
sbb
add
fbld
adc
pop
sahf
add
subb
mov
sbb
adc
pop
jae
sbb
push
ret
stos
js
add
and
pop
xor
push
add
stc
ljmp
mov
add
js
push
cmp
rol
dec
rclb
sbb
loopne
jns
xor
mov
pusha
es
stos
mov
xor
addr16
push
inc
inc
fldl
or
jg
dec
loope
xorb
aad
aaa
ja
fisubs
inc
out
xor
je
inc
jl
jp
adc
push
aam
jmp
fildl
repnz
dec
cmp
xchg
and
scas
pusha
loopne
enter
xchg
mov
sbb
adc
jle
xor
cltd
addr16
in
mov
add
adc
loop
outsl
push
in
cs
sarl
inc
jno
xlat
add
mov
dec
movsb
sub
jns
ret
pop
add
mov
fisubrl
ds
mov
add
movsl
jg
add
test
adc
push
shll
je
add
into
sbb
out
xlat
xchg
test
adc
jo
ljmp
push
jbe
lret
sbb
add
xchg
add
jle
add
ud2
fmull
inc
mov
iret
add
divb
add
scas
add
cmc
adc
xor
inc
pop
les
pop
xchg
mov
sbb
repz
lret
dec
and
pop
push
test
sub
push
stos
dec
mov
mov
lock
sub
jmp
fiaddl
xor
pop
or
jnp
mov
sub
popf
adc
add
jmp
mov
pop
sbb
push
and
js
popf
outsl
xchg
jbe
add
sahf
mov
and
fisubrs
cmpsb
add
sbb
push
lahf
and
push
cltd
pusha
add
push
les
mov
add
mov
inc
inc
xchg
icebp
push
pop
mov
stc
inc
jp
or
push
pop
shld
xchg
xor
repnz
dec
ret
pop
out
inc
add
push
inc
test
lock
push
mov
sub
sub
pop
pop
adc
fld
ds
push
push
mov
pusha
xor
cs
xor
dec
shlb
push
push
xorb
repnz
rorb
fwait
ret
paddw
ljmp
cld
out
mov
fwait
rorb
sub
jne
add
lods
iret
sbb
mov
lret
jecxz
jb
add
push
sti
inc
in
fwait
ljmp
add
push
jnp
gs
add
in
sub
rdpmc
mov
fdiv
and
and
push
sbb
movsb
iret
sbb
add
pop
lods
fimull
and
aaa
or
sbb
jb
mov
or
add
popf
push
mov
mov
dec
loopne
insl
adc
add
and
add
cmp
inc
fiaddl
or
insb
dec
leave
and
and
sub
cmp
jle
inc
inc
sbb
add
fwait
xor
hlt
std
push
fiaddl
mov
test
add
sahf
push
andl
cmp
arpl
cmpsb
pushf
mov
xor
mov
cmp
add
and
pop
xorb
mov
add
test
fildl
test
jae
xchg
jns
xor
add
mov
movl
stos
hlt
or
popf
nop
rolb
ds
dec
sub
sub
and
cmp
lret
imul
out
shrb
add
loop
pop
xchg
ret
cwtl
dec
mov
dec
inc
sub
test
int3
in
enter
inc
push
mov
js
add
sbb
mov
mov
lods
xor
push
add
and
mov
lret
and
rol
loopne
add
sbb
nop
test
add
xorb
in
push
cmp
sarl
outsb
stc
sub
xor
add
cli
or
mov
push
jle
nop
movsb
rclb
cltd
or
and
xchg
in
mov
dec
adc
leave
into
jle
push
nop
repnz
sahf
cli
cmp
icebp
out
das
adcb
lods
add
repnz
mov
push
sub
addr16
std
insb
daa
jg
leave
jge
xchg
pop
cli
add
mov
push
push
stos
outsl
bound
dec
or
xor
jbe
nop
in
scas
and
sub
aas
loope
shll
shll
xor
stos
iret
cmp
add
insb
das
dec
or
out
add
push
lretw
adc
call
add
cmp
pop
push
test
decb
mov
inc
daa
bound
enter
xlat
push
add
push
lods
sub
add
adc
push
dec
test
cli
add
std
add
cmpsl
data16
icebp
insl
sub
test
dec
dec
sarl
inc
pop
into
add
jno
sub
inc
add
xor
inc
rol
sbb
incl
in
mov
xchg
cmp
cmp
andl
pushf
inc
daa
mov
ljmp
dec
add
jo
sahf
mov
aad
js
ds
fstps
dec
pushf
mov
mov
mov
enter
fiadds
add
jb
add
mov
pop
inc
leave
out
int
inc
jle
xor
or
inc
mov
lea
and
jmp
rorb
add
add
mov
andb
add
push
dec
mov
add
loop
jge
lods
sub
xor
or
xchg
dec
push
sbb
insl
imul
xchg
cmp
cmc
xchg
dec
insb
add
sub
fwait
daa
sbb
jp
add
outsb
data16
add
into
and
adc
xlat
rcll
add
add
loop
lldt
arpl
inc
sbb
js
loopne
adc
ficoml
loop
xor
scas
xchg
pop
and
lahf
aam
jae
cli
or
xor
mov
xor
shrl
test
add
pop
cmp
add
cmp
lret
cwtl
mov
mov
jecxz
inc
les
inc
dec
shll
outsl
sbb
leave
shl
jae
sbb
dec
mov
jecxz
ljmp
mov
std
outsl
mov
dec
mov
adc
arpl
mov
aad
insb
ret
inc
adc
insl
add
xchg
and
ljmp
mov
pop
jl
add
and
data16
add
icebp
xor
xchg
mov
test
stos
std
sbb
adc
aad
xor
outsl
xor
cmp
mov
mov
gs
pop
mov
adc
das
add
orb
fwait
sub
mov
pop
pop
mov
out
add
fadd
dec
shll
adc
or
ficomps
shl
sbb
jmp
sub
or
push
nop
push
std
into
sbb
jle
add
cmp
pop
lret
test
adc
pop
rclb
push
enter
jbe,pn
sub
add
and
push
add
or
mov
pop
or
jl
or
lret
pushf
xor
and
xchg
call
sub
ljmp
into
sbb
or
xlat
mov
mov
and
push
jmp
out
xchg
jp
dec
inc
lret
pusha
scas
sub
pop
pop
hlt
xchg
mov
fldt
mov
or
cwtl
cld
jbe
sub
dec
clc
dec
sbb
mov
push
xchg
jne
and
jo
mov
dec
mov
scas
and
adc
ds
ljmp
add
sbb
outsl
shrl
fs
add
mov
addr16
stos
in
push
push
sub
add
pop
cmp
sub
cmp
xor
jl
sbb
loope
sti
push
shrb
xchg
xor
add
jno
hlt
je
cmp
aad
jp
mov
aaa
psubusb
xor
pop
add
xor
xchg
in
inc
add
lods
rcrb
pop
sti
incb
push
call
adc
xchg
inc
cli
mov
add
lret
aaa
xorb
cmpsl
mov
arpl
adc
adcb
xor
rcl
scas
sbb
xchg
outsl
add
fcomps
mov
sbb
imul
mov
add
mov
out
rclb
mov
jnp
lret
xchg
ror
ja
or
inc
adc
add
mov
sahf
xchg
cmp
or
icebp
add
lahf
jne
mov
pop
daa
loop
mov
ret
adc
add
inc
enter
or
sbb
jae
dec
mov
add
add
mov
rcll
mov
mov
mov
gs
inc
add
sbb
jbe
test
dec
push
jo
dec
add
pusha
movsb
out
mov
js
add
sbbb
add
insl
bound
and
pop
jb
popf
lods
add
push
add
ficompl
or
scas
adc
pop
mov
pop
cmpsl
push
dec
add
jbe
ror
into
push
inc
ja
scas
inc
jae
sbb
xlat
add
addr16
add
xor
cmp
xor
pop
rcll
iret
js
mov
dec
mov
cmp
adc
stos
imul
cmp
jnp
in
pop
push
jmp
lds
add
mov
jle
or
mov
int
cltd
cmc
inc
js
fs
dec
or
cmp
push
push
aas
mov
les
sub
rcrl
inc
and
popf
lods
add
cs
add
dec
inc
add
inc
cmp
repnz
xchg
push
and
add
ja
cmc
and
ljmp
add
and
rcrb
and
popf
icebp
cld
and
pusha
jae
sbb
xor
scas
mov
add
lods
cs
mov
add
mov
shlb
pop
dec
call
inc
rcl
cmc
jno
add
cmpsb
out
adc
inc
xchg
dec
cli
cs
gs
adc
push
add
and
mov
jp
push
imul
clc
jmp
shll
sbbb
mov
cmp
data16
mov
aaa
mov
hlt
sarl
jmp
pushf
pop
into
scas
ss
cmp
xor
jno
cmp
addb
fistpll
lea
leave
xchg
inc
push
mov
popa
push
add
jmp
out
xchg
addl
cs
dec
add
inc
loope
and
fcoml
test
jb
shll
add
pop
mov
inc
xor
inc
sti
rcll
add
lret
cmp
mov
xor
pop
xor
rclb
hlt
int
je
cmp
sbb
push
movl
dec
mov
adc
cmp
lods
iret
mov
jnp
add
pop
into
pusha
lds
out
dec
inc
sub
push
lahf
push
sub
add
jbe
cs
add
es
icebp
pusha
addl
or
dec
add
scas
das
mov
lds
add
repz
pop
add
imul
les
xchg
add
adc
ficoms
loope
and
mov
hlt
add
imul
idivb
icebp
inc
add
mov
je
inc
or
pop
test
scas
push
push
pusha
add
insb
dec
add
bound
add
adc
adc
mov
add
or
pop
xchg
pop
lock
insb
add
pop
dec
mov
jb
fadds
adc
adc
mov
push
mov
xor
pop
andnps
popa
aam
dec
outsl
sub
test
test
into
ret
icebp
pop
sahf
sub
mov
inc
cmp
shl
test
sbb
orb
roll
cmp
jne
movsb
xchg
adc
mov
add
jmp
vdivps
cmp
mov
es
loopne
sub
lcall
jo
lret
ficoml
or
aad
rcrb
and
sbb
xor
push
testl
and
fnsave
mov
ja
xor
add
scas
ds
sahf
mov
dec
pop
frstor
xchg
sarl
and
insl
cmp
sub
add
push
popf
add
fbld
add
ss
jmp
or
lock
in
add
add
push
inc
fildll
or
repnz
lahf
loop
jle
faddl
incl
repz
jnp
inc
xchg
cmp
pop
js
sahf
loope
sub
jmp
adc
push
jge
adc
or
std
mov
dec
cmp
and
lret
insl
addr16
pop
mov
out
sarl
imul
repnz
popf
add
rcrl
lret
out
pop
mov
hlt
add
xchg
fdivs
and
push
sub
adc
xchg
xor
pop
sahf
xor
push
or
mov
add
sarb
xor
in
inc
mov
ljmp
shlb
pushf
ret
in
lret
sub
add
pop
inc
notb
xor
aam
push
rep
xor
or
add
out
inc
xlat
adc
ret
add
fadds
andl
loopne
imul
stos
pop
repz
adc
dec
fcomip
rorb
js
mov
js
jbe
call
test
adc
ja
inc
jb
repz
sbbl
mov
add
cmp
mov
xchg
movl
jl
sti
fbstp
mov
loopne
in
add
cmovb
xchg
push
dec
cld
mov
pop
xchg
out
into
sbb
jnp
fsubrs
cli
lea
xchg
xor
daa
cmc
push
aad
push
mov
or
push
and
jb
dec
dec
mov
sbbb
and
mov
add
push
xor
jo
out
in
xchg
imul
add
fcoml
adc
ja
and
addr16
hlt
inc
cmpsl
or
popa
add
xchg
sbbl
add
sub
loopne
cli
iret
shrb
movsb
hlt
lds
jnp
adc
ds
mov
arpl
add
sbb
xor
push
scas
fs
and
jae
pop
push
ja
icebp
inc
out
add
xchg
rcrl
cmpsb
cmp
xchg
mov
push
in
ja
unpcklps
jne
sub
scas
mov
roll
push
mov
push
dec
loope
xchg
fcmovb
add
inc
ret
js
pop
adc
fwait
pop
sub
push
sbb
add
mov
adc
push
lret
outsl
nop
or
icebp
cmpsb
rorl
dec
mov
adc
out
lods
push
mov
sahf
enter
js
out
and
xchg
imul
pop
jne
xchg
inc
lret
pushl
inc
js
nop
push
add
fs
mov
pop
bnd
jg
add
incb
stc
jecxz
scas
add
lret
jge
hlt
cmp
mov
sarb
or
add
mov
popf
sahf
shrb
cmp
in
fcomip
incb
add
loope
sub
sub
mov
push
and
fs
shrd
hlt
push
ljmp
out
push
ror
or
and
inc
loope
shlb
lds
test
sbb
movl
ret
fs
jnp
flds
push
out
inc
and
xchg
inc
add
push
aaa
ror
ffree
dec
mov
and
adc
pop
mov
insl
fwait
jg
xchg
lods
repnz
out
stos
fistpl
add
xchg
xor
jb
pop
pusha
sahf
imul
pop
mov
dec
cmpl
pop
or
push
cld
push
xchg
pop
mov
push
cmp
gs
iret
enter
pop
clc
add
test
popl
pop
push
mov
sbb
sbb
sbb
cmpsl
jp
add
mov
test
lahf
cwtl
adc
xorl
adc
dec
inc
adc
add
mov
fldl
dec
mov
sbb
and
xor
or
cmp
xchg
out
loope
dec
add
mov
mov
jb
dec
xorb
xor
push
into
pop
add
jg
addr16
jae
cmp
fidivrs
insb
xchg
add
addr16
andl
xor
stos
jae
pop
dec
ljmp
pop
and
imul
cs
loope
cmp
filds
inc
cmp
dec
pop
or
adc
lods
mov
or
and
ret
push
add
rclb
inc
loop
movb
jp
push
mov
fnsave
sbb
test
mov
add
inc
mov
iret
ljmp
and
aas
loop
mov
pop
loope
mov
dec
lock
sbb
cmp
and
dec
xchg
and
cmp
stos
js
icebp
iret
sbb
xor
fcom
jmp
lea
add
loope
pop
js
pop
add
repnz
mov
movsb
insl
add
shrb
bound
and
pop
out
add
outsl
jno
add
std
js
imul
add
xchg
insb
sbb
cmp
cmp
sub
in
ret
cmpsb
ds
cmpsl
lock
mov
jmp
mov
mov
mov
stos
scas
dec
add
jbe
stc
in
mov
out
and
in
push
sti
mov
jl
cld
push
and
or
sahf
add
jbe
fists
andb
mov
dec
or
sub
adc
cmp
stos
iret
sub
mov
sub
in
mov
xchg
xor
rcr
scas
sti
pusha
xor
sub
push
shrb
jl
jne
add
push
dec
sub
insb
or
xchg
cmp
add
addr16
dec
lock
add
xchg
scas
into
cmp
cli
sar
xlat
fstl
out
test
fsts
xor
addb
mov
xchg
jp
jns
stos
fsubrl
pop
fdivs
mov
sahf
and
pmuludq
out
jbe
push
inc
cmpsl
es
add
cmp
out
pop
adc
pop
leave
cwtl
fistpl
lds
mov
xchg
pusha
push
popa
mov
fcomps
lcall
add
imul
std
ret
lods
shll
sbb
stos
adc
cmp
add
sbb
mov
cmp
insl
es
xchg
and
test
test
cli
add
push
cld
call
lret
pusha
add
std
fnstsw
es
sub
sub
fs
sahf
jbe
cmpsb
lcall
outsl
imul
fs
mov
int3
cmpl
out
orl
jmp
call
pop
add
mov
add
mov
ss
and
addb
iret
lods
into
stos
pop
or
inc
add
pop
sahf
ljmp
clc
add
lods
inc
mov
xchg
nop
cmp
inc
loop
sbb
mov
adc
jne
cmp
jmp
call
lods
jl
aaa
add
stc
dec
dec
jae
pop
dec
mov
popa
je
lock
popf
fiaddl
daa
pop
adc
add
push
jle
es
in
rorl
call
xchg
mov
data16
movsb
dec
test
icebp
jbe
adc
rclb
sar
mov
enter
sub
std
lea
sbb
mov
sub
test
or
test
addr16
sub
shrb
xor
fidivs
loopne
scas
in
cmp
repz
outsb
cld
and
mov
or
inc
mov
shrb
and
mov
push
push
jge
lods
jmp
cmp
lea
aam
outsb
or
mov
mov
xchg
adcl
ficomps
push
xchg
add
inc
xchg
cltd
mov
and
mov
aad
xor
mov
and
xlat
xor
imul
mov
jb
sub
add
mov
sbb
enter
cs
and
or
inc
es
cmp
pop
and
aad
comiss
in
add
inc
jae
add
inc
add
add
fiadds
pop
loop
add
xor
rcll
add
xor
shlb
mov
add
inc
or
dec
or
aad
mov
xchg
xor
mov
les
jge
hlt
int3
sub
loop
std
or
push
orl
add
push
xadd
ds
xchg
fistpll
mov
sbb
frstor
daa
mov
roll
addr16
jp
pushf
inc
dec
lea
insb
je
fsubl
sbb
pop
in
pop
ja
mov
daa
and
push
sub
fisttps
add
jns
popa
push
pop
hlt
mov
pop
addb
mov
jmp
mov
cmpsl
shll
and
lods
pop
test
movl
repnz
ds
push
add
push
cmp
in
out
dec
addb
push
cmp
xor
jge
inc
xor
xchg
and
and
enter
fldenv
bound
std
popa
add
push
jle
mov
xchg
mov
scas
inc
divb
and
rcll
pusha
add
xchg
add
les
aad
add
insw
mov
aaa
or
xorb
and
or
mov
imul
add
gs
mov
cltd
dec
push
stos
movsl
add
fdivs
sarl
pop
mov
mov
mov
xchg
and
dec
sahf
out
cwtl
lret
loope
in
enter
lds
push
cltd
shl
insb
or
dec
shl
add
pop
push
cs
add
les
imull
pop
sti
popl
add
mov
add
insb
stos
mov
push
adc
xorb
je
sarb
dec
outsb
mov
es
cmp
sbbb
jbe
ret
sbb
cmp
int3
and
jl
cltd
lahf
add
pushf
nop
push
pop
std
push
cmpsb
add
cmp
cmpsl
inc
mov
repnz
arpl
inc
xor
daa
cmp
cmp
adc
inc
sahf
cltd
call
scas
xchg
jbe
scas
shlb
jns
and
fisttpll
iret
pop
push
and
adc
outsl
xchg
sub
stc
mov
cmpl
pop
pop
nop
add
movsl
popa
cmp
out
mov
mov
sbb
shl
mov
leave
push
or
je
test
fwait
cmc
xchg
adc
test
mov
sub
adc
inc
sub
cmpsb
cmp
shl
xchg
push
mov
lods
mov
dec
je
inc
add
jl
and
aad
add
dec
pop
push
arpl
pop
pushf
movb
xchg
lods
mov
sub
addb
fdivl
cmp
xchg
inc
pop
icebp
push
inc
fldt
push
mov
xor
iret
sarb
sbb
rcll
lahf
test
xchg
xchg
fmul
sbb
add
imul
lods
sub
out
fwait
jne
mov
adc
or
and
test
lods
int3
pop
xchg
outsb
rclb
dec
adc
les
pop
out
push
int
pop
or
outsl
cmpsl
xor
inc
or
mov
add
sub
cmp
fimuls
leave
fsubr
xor
mov
jnp
aad
add
xorl
cmpsl
add
xor
mov
or
cmpsl
shll
sub
and
rcl
movsb
add
subb
loop
pop
sti
sahf
cmp
sub
mov
jmp
ret
enter
pop
mov
sti
add
lock
xor
ljmp
ds
movsl
sbb
dec
cmc
add
fsubr
dec
sub
icebp
imul
cld
xchg
in
jmp
out
dec
packssdw
ret
cmp
mov
test
xlat
add
es
adc
xchg
mull
sbb
pop
push
add
insb
or
lret
adc
add
testb
xchg
mov
xchg
sub
cwtl
sub
popa
mov
xchg
and
add
mov
sbb
add
xchg
stos
add
push
addr16
shlb
pushf
aad
fcomp
out
add
test
call
js
xor
lret
ja
dec
stos
add
push
xor
roll
dec
add
pop
sub
in
loopne
hlt
or
ret
pushf
mov
mov
out
imul
aas
adc
mov
jge
movl
ss
test
mov
inc
sub
add
cmc
sbb
inc
faddp
mov
fnclex
add
lock
sbb
loope
jbe
inc
ss
lahf
hlt
dec
push
rcrb
inc
fdivr
xchg
and
dec
scas
mov
or
xor
dec
cltd
add
lret
sbb
sbb
push
mov
sub
shlb
pop
xchg
push
add
sub
fs
pop
or
and
imul
mov
int3
pop
jmp
add
cmp
icebp
test
scas
sbb
sub
das
lds
movsl
xor
loopne
push
inc
aas
sub
jmp
add
daa
jnp
mov
add
jl
lock
cmpsb
or
rclb
loope
cwtl
outsb
jo
xor
lods
add
dec
movaps
pop
lret
cmp
pop
xchg
mov
xor
test
es
pusha
push
rcr
and
cs
push
add
imul
inc
or
fwait
pusha
es
push
jne
sub
pusha
mov
cmp
dec
shll
lcall
or
addr16
inc
repz
mov
inc
lret
xchg
sbb
push
add
push
cmp
push
jo
sub
test
sub
out
jp
mov
xchg
pusha
add
loop
nop
mov
aas
jmp
or
loopne
add
jl
cmp
add
in
jge
mov
and
add
cmc
cmpsl
pop
js
jne
or
insl
mov
mov
sub
addl
aaa
xorl
mov
mov
mov
pop
sub
jns
xor
add
xchg
aaa
add
out
mov
jno
cmp
shl
sub
shl
pop
imul
dec
call
add
jmp
cwtl
sarl
fmull
dec
and
mov
stos
push
dec
jns
jo,pn
inc
ficoml
movsl
add
adc
add
mov
cmp
jb
lods
cltd
adc
adc
adc
sbb
dec
std
negl
fsubl
add
iret
mov
lret
xor
movsb
int
cmp
add
cmp
repnz
mov
adc
pop
mov
sarl
mov
out
sarb
aaa
dec
ja
and
add
shll
cmp
jmp
imul
add
jp
cmp
push
mov
and
gs
inc
add
das
lds
cmp
cmp
je
mov
js
jmp
pushf
jae
adc
sub
test
fiadds
xchg
mov
add
cmpsb
pop
rcrb
push
add
mov
dec
cmpsl
xchg
and
inc
hlt
mov
aas
scas
add
call
fiaddl
sbb
jns
popf
iret
add
pop
lcall
xchg
add
mov
or
lret
icebp
jne
mov
mul
xchg
add
sarl
mov
aas
popf
push
daa
ret
xchg
test
ds
add
clc
insb
or
pop
int3
iret
push
inc
xor
rclb
sarl
out
inc
add
leave
cmpsb
fiadds
bound
pusha
jge
pop
lock
pop
test
add
push
testb
xor
sub
lcall
inc
push
pop
inc
mov
lret
mov
cmpsl
mov
mov
pop
sbb
aas
rcll
sbb
pop
xor
aas
add
add
adc
ror
enter
pusha
mov
or
or
mov
sahf
pcmpeqd
jp
cmp
bound
jle
mov
adc
pop
pop
add
inc
add
pop
inc
ljmp
adc
out
add
push
addr16
pushf
add
push
mov
lock
inc
lahf
fwait
aaa
adc
sub
sbbb
mov
sbb
xor
imul
movsb
scas
mov
add
mov
add
jge
or
cmp
aad
rcrl
push
dec
push
jno
bound
outsb
push
or
ret
cmp
sahf
dec
dec
xor
imul
xor
push
mov
in
stos
add
fsubrs
add
imul
inc
pop
shll
shrl
cli
into
cmp
mov
cmc
js
sub
xchg
mov
sbb
and
jns
add
call
jl
shl
cli
ret
ret
in
xor
add
orb
push
inc
mov
cmp
or
minps
outsl
ret
inc
push
mov
pop
ds
mov
lcall
addr16
cmp
add
adc
jns
dec
adc
add
jle
sbb
addb
sti
cmp
sbb
push
shll
xor
pop
xor
add
or
adc
test
push
flds
sub
or
outsb
adc
mov
bound
push
cmp
clc
movsb
repnz
rol
sbb
dec
out
scas
dec
dec
add
xchg
in
maxps
arpl
or
lods
and
xor
fistl
nop
jns
push
movsb
or
and
ja
xor
test
and
jge
test
iret
data16
and
adc
or
les
cmpsl
lret
xor
loope
int3
xor
jb
lds
add
or
mov
add
xchg
mov
iret
mov
jne
jo
out
push
insb
add
cmp
add
add
mov
mov
lea
add
push
cmpsl
pop
je
mov
pusha
aaa
add
repz
stos
out
or
xor
aaa
fwait
stos
int
xor
or
cmpl
push
flds
mov
and
rcl
push
in
jle
and
and
stos
addb
lret
jp
lock
popf
movsl
add
and
movsb
leave
xchg
push
es
ret
stc
sub
ss
add
int3
inc
mov
pop
mov
addb
and
pop
push
add
mov
xchg
lret
cli
inc
sbb
add
jnp
imul
je
pop
lock
push
shrl
add
or
add
sub
sbb
add
xor
or
icebp
cmpsb
mov
or
insb
ffree
int
and
cmp
jne
rcrl
adc
sbb
add
cmpsl
fcomps
add
add
lcall
sbb
repz
cmp
add
and
mov
les
dec
cli
and
jmp
jmp
orb
add
test
sarb
add
cmp
xchg
pushf
movsb
add
clc
es
sbb
shl
mov
sarb
cmpsl
movsb
ljmp
adc
ret
jg
xor
lods
cli
push
add
add
call
cwtl
cmp
rcr
dec
sbb
dec
jae
mov
js
xor
aaa
push
sbb
cmpsl
cmp
dec
push
lcall
jns
jo
insl
lock
and
mov
adcb
fld
cwtl
push
xchg
inc
inc
ss
in
rcll
int
lods
rcrl
ss
push
rclb
outsb
ja
cmp
add
mov
inc
cmp
xor
hlt
sub
inc
into
add
cwtl
int
jae
push
enter
add
daa
aaa
add
mov
out
push
cmp
inc
in
sub
clc
outsb
gs
subb
jnp
pop
xchg
lret
add
add
adc
xor
and
cli
std
mov
test
xlat
add
push
mov
dec
orb
push
and
out
adc
fwait
mov
in
push
add
push
mov
xchg
xor
adc
add
jne
sbb
out
sub
std
lock
add
mov
ret
push
out
cmp
xor
setb
cli
xlat
aam
add
jns
mov
and
scas
arpl
add
xor
xchg
in
cmc
shl
fistps
hlt
sub
dec
xchg
lock
push
sbb
out
lret
push
bound
inc
cmc
add
sub
movsl
sbb
fisttpl
or
sub
pop
jl
inc
scas
jp
dec
inc
mov
shlb
aaa
dec
sarl
fcoml
add
pop
jno
push
repz
daa
je
add
sub
add
out
in
add
sar
or
ret
fcomps
popf
add
and
imul
add
push
rcrl
testl
push
add
or
push
ficomps
xchg
loop
xchg
mov
adc
add
add
test
add
pop
pushf
pop
sbb
push
stc
lods
rcrl
and
mov
fidivl
mov
cmp
adc
sub
add
or
add
iret
test
or
mov
cmp
xor
inc
mov
cmp
jo
out
jl
ret
mov
add
jae
inc
jno
cmc
pushf
mov
add
or
inc
inc
adc
or
dec
scas
xchg
ret
inc
sahf
fs
dec
mov
lret
das
incb
mov
gs
adc
inc
mov
inc
sub
and
shll
add
and
fmull
dec
mov
add
or
stos
push
cmc
mov
cmpsb
je
call
xor
pusha
and
dec
rorl
add
out
out
movsb
mov
push
add
cmc
xlat
out
mov
push
orl
add
ret
dec
xor
imul
push
lahf
add
sbbl
fwait
pushf
add
and
stc
movb
mov
adc
icebp
test
xor
xorl
stos
shlb
pop
jnp
lock
inc
clc
lods
push
xlat
xor
and
cld
and
fiadds
arpl
lods
xchg
push
iret
out
inc
aam
mov
test
cmp
sarl
testb
aaa
je
stos
adc
or
or
dec
leave
repz
mov
aam
sub
xchg
lea
ret
in
cmc
mov
adc
xor
sub
shll
je
ja
add
xchg
push
push
ret
push
test
inc
jg
mov
enter
test
movsb
pop
sbb
xchg
jg
andl
sub
push
cmp
dec
adc
jae
add
mov
push
add
mov
xor
call
and
sub
lret
add
fcoml
inc
mov
int3
shll
and
push
adc
filds
sub
aad
in
push
xor
insb
ret
pop
xchg
repnz
add
mov
insl
mov
inc
js
inc
fidivrl
decb
out
pop
ret
xbegin
jo
inc
pop
add
daa
xor
stos
inc
cmc
add
sti
add
test
mov
add
pop
pop
inc
sbb
cmpsb
add
out
out
ja
scas
testb
cwtl
loope
scas
sbb
xchg
xor
pop
fadds
dec
test
jae
push
pop
jle,pt
ret
pop
js
popf
add
jp
test
rorl
sbb
pushf
jno
add
pop
jb
enter
sub
add
call
fldt
add
je
lds
mov
push
sbb
sbb
inc
push
push
jb
push
cmp
aas
or
fnstsw
cmp
and
add
loope
xchg
outsb
inc
xor
addr16
adc
pop
pop
dec
xor
arpl
addb
popf
add
std
push
xchg
movsb
sbb
roll
shlb
pusha
mov
in
lock
add
fstpt
ret
outsb
add
enter
inc
fwait
add
ret
sbb
add
jns
les
dec
xchg
xor
lods
movsb
out
mov
repnz
mov
loopne
push
cmpsb
adc
adc
inc
add
inc
mov
add
push
pop
out
aaa
rcrl
add
mov
mov
mov
and
sbb
shrl
shlb
mov
movnti
mov
mov
cmp
test
dec
sti
pop
sub
add
inc
cli
ret
pop
sbb
jno
loope
jmp
and
fldl
add
mov
fmull
jns
lds
pop
add
sbb
push
jl
fstpl
mov
pop
repnz
mov
cmp
sahf
add
divb
xchg
rcl
incb
adc
mov
add
sub
lret
add
dec
cld
sub
add
lds
add
jmp
repnz
ret
mov
mov
or
jns
push
pop
movsb
mov
loopne
popf
es
jno
xor
arpl
roll
outsb
inc
xchg
and
out
or
es
xchg
scas
fistpll
add
sub
jno
out
mov
inc
cli
pop
push
pop
add
out
xor
ficoms
inc
sub
and
idivl
xor
lret
xor
push
test
sub
and
xchg
xchg
popa
pop
mov
or
daa
lods
jne
add
stc
dec
adc
shrb
test
sbb
jne
inc
cmp
in
sarl
ljmp
adc
movsl
fldenv
clc
jno
pop
fistl
pop
jg
mov
mov
ss
popf
add
mov
mov
in
lret
mov
add
sub
cli
mov
cmp
fildl
push
insl
xlat
scas
aaa
pop
xor
xor
je
xor
mov
incb
add
pop
flds
mov
roll
or
sub
jle
je
sbb
adc
push
adc
push
add
jnp
mov
and
mov
outsl
add
pop
xor
mov
mov
shll
mov
push
negl
jecxz
sub
sub
lods
pop
add
lea
adc
out
rol
mov
add
daa
xor
roll
loop
xor
push
sbb
andb
fcoms
cmp
pop
jl
sti
add
or
xchg
xchg
mov
push
pusha
ds
mov
addr16
inc
cmc
iret
fistpll
ret
and
pop
and
mov
jns
das
adc
cmp
repz
in
dec
jge
or
nop
push
std
add
mov
movsb
cmp
incb
or
or
add
stos
punpckhbw
cmp
jb
arpl
adc
jl
and
sub
iret
lcall
in
xor
adc
sub
pushf
inc
pop
enter
push
and
push
xchg
cmp
test
icebp
rcl
stos
or
or
push
jno
mov
sbb
cltd
or
jne
scas
jle
and
hlt
mov
daa
outsb
jae
lds
adc
movl
mov
add
shr
jle
and
jg
fidivs
pop
or
sahf
cld
add
xchg
faddp
mov
das
pushf
jg
sub
mov
push
inc
or
repnz
jb
lods
or
mov
pop
inc
pop
add
jns
and
sbb
pop
loop
push
cmp
jnp
out
cmp
adc
pop
sti
loope
cmc
and
push
pushf
pop
jle
xchg
inc
or
lds
push
popw
add
mov
cmp
lds
loope
add
xor
inc
in
and
cwtl
fnsave
stos
and
lahf
insl
lds
or
and
shll
aas
repnz
jns
scas
cmp
add
mov
push
xlat
push
fdivrl
adc
arpl
mov
push
icebp
lsl
pop
out
scas
jbe
aam
adc
dec
movsb
cmp
ljmp
adc
rcrb
cmp
pop
faddl
out
int3
mov
sub
jno
out
and
inc
push
jbe
inc
or
and
imul
lock
imulb
lcall
cmp
jmp
rolb
outsl
jne
addr16
jecxz,pt
xbegin
leave
mov
out
sbb
ljmp
icebp
or
sbb
dec
addr16
repnz
sub
and
ja
rcll
rcr
jbe
dec
dec
shrb
mov
in
test
jecxz
push
sub
filds
and
rorl
flds
and
adc
add
adc
mov
ja
sbb
add
sbb
push
imul
mov
jecxz
mov
fisttps
shrb
push
js
add
incb
dec
dec
sti
stos
and
lds
cltd
ret
mov
ss
dec
popa
xor
or
es
and
sti
pop
mov
andb
push
mov
sub
rolb
xchg
xchg
les
iret
add
ljmp
mov
or
mov
mov
add
dec
add
out
mov
dec
xchg
add
and
stos
dec
jp
lret
and
sub
cmpl
iret
mov
cmp
or
jg
add
popa
dec
push
adc
fadds
sub
test
xor
loop
add
mov
cli
stos
sub
jbe
mov
movsl
cmp
imull
jb
inc
pop
inc
adc
hlt
and
outsl
or
ljmp
not
loope
xor
add
jns
in
sub
int
addr16
inc
lods
sbb
test
or
push
adc
xor
jb
mov
xchg
sub
in
shlb
xor
mov
and
sti
mov
adc
add
adc
add
cmpl
int3
lds
add
pushf
sbbb
sbb
pop
loop
adc
ret
cmp
lods
adcb
mov
sbb
sahf
push
int
pop
mov
out
les
mov
leave
sub
cltd
dec
or
insl
iret
and
mov
lds
scas
arpl
jg
jle
pop
mov
mov
sub
add
sar
cli
int
cmp
out
or
xor
js
push
mov
in
mov
mov
icebp
mov
adc
and
and
das
cmp
cmp
stos
add
push
adc
or
xor
pop
das
lahf
add
pop
push
out
aaa
add
add
pop
mov
fstl
jo
mov
push
pop
push
adc
loopne
pop
in
jecxz
aas
lret
and
repz
and
outsb
fdivl
jo
lea
sahf
pop
jo
sub
aas
inc
pop
add
popf
mov
mov
or
adc
pop
add
jb
pop
mov
pop
add
scas
mov
sbb
pop
add
jge
xchg
add
xorl
testl
mov
adc
stos
movb
cmpsl
sub
lods
cmpl
cmp
xor
rcrb
and
mov
data16
add
sti
pusha
ljmp
pcmpgtd
xchg
adc
jae
cmc
add
add
adc
mov
aas
in
sbbl
add
mov
push
or
out
adc
insb
add
cmpsb
insl
mov
rcll
into
out
sbb
mov
xor
add
sti
dec
pop
test
shl
cmp
data16
jns
lahf
movsl
arpl
add
fldl
adc
test
pop
xchg
mov
push
cmp
dec
rol
and
mov
pop
cmp
add
mov
outsb
push
dec
pusha
mov
sub
push
shl
push
add
sbb
imul
add
mov
add
cmc
jae
fimull
mov
and
int3
inc
pusha
cli
jne
mov
sub
inc
rol
push
inc
inc
mov
push
test
jae
xchg
and
ljmp
add
adc
enter
sbb
adc
adcb
pop
xchg
lea
or
adc
add
cmp
fsts
andl
test
adc
or
pop
cmpsl
and
sub
mov
or
inc
enter
xor
push
scas
aas
insb
pop
jae
or
push
cmp
add
pop
sbb
sbb
adc
fcoml
push
into
js
movsl
add
sar
lock
pop
mov
pop
sbb
add
cli
mov
push
out
cmpb
dec
inc
nop
jo
pop
movsl
cmp
add
cmc
addr16
scas
xorl
jns
dec
pop
jp
add
mov
mov
das
mov
add
and
rorb
cmp
call
inc
pusha
mov
int3
lret
and
cmp
mov
mov
iret
add
adc
jno
dec
mov
push
xor
cwtl
xor
xchg
addl
adc
push
sub
leave
or
cmp
xlat
xor
aaa
add
clc
pop
test
fadd
subl
ret
cmpl
add
clc
dec
or
out
test
dec
xor
cmp
and
xchg
mov
aad
add
jl
push
cmp
push
mov
sbb
loopne
and
rol
inc
add
ret
enter
repnz
sbb
add
shlb
js
or
addb
inc
push
je
outsl
push
push
inc
popa
push
inc
mov
xor
lcall
in
stos
or
mov
push
add
movsl
pusha
sub
mov
mov
jnp
inc
mov
mov
cmp
lds
jbe
mov
add
jno
pop
out
add
add
dec
and
jg
aas
pushf
js
es
fildl
movups
popa
lds
push
add
insb
mov
xor
out
ja
stc
and
inc
and
mov
pop
add
stos
xor
popa
and
fldl
fnstenv
and
mov
shrl
fildl
fcoms
add
inc
jmp
xor
test
ret
cmp
and
cmp
fadds
icebp
insl
and
inc
imul
test
mov
cmpsb
mov
sbb
jl
repnz
xchg
cmp
push
add
mov
mov
fiaddl
pop
ret
sub
sub
add
hlt
andl
adc
sub
jecxz
imul
shll
gs
xlat
sbb
inc
mov
fimull
add
fistl
outsl
add
sub
push
dec
mov
repz
clc
outsl
pop
dec
cltd
xchg
and
jp
mov
push
adc
cmp
adc
sti
push
cmpl
xor
ficoml
cmpsl
mov
sbb
mov
push
int3
loop
enter
add
test
add
inc
nop
ret
aad
and
out
popa
ljmp
out
pop
data16
add
jle
xor
jg
sbbb
pop
mull
jle
sbb
xchg
and
mov
out
jge
pop
cmp
add
sub
mov
cmp
pop
inc
ss
mov
and
jle
pushf
add
in
enter
fiaddl
pop
push
ret
lea
je
les
addl
iret
jge
lret
insb
mov
out
cmp
add
mov
inc
adc
pop
sub
call
je
push
dec
into
and
cmpsb
jns
sbb
jmp
and
and
mov
sbb
fldcw
push
inc
add
insl
add
inc
push
inc
and
movsb
xchg
adc
add
push
mov
add
cmp
sub
jge
dec
mov
outsb
test
aas
out
js
call
inc
xchg
int
shrb
jnp
andl
push
add
jo
out
iret
rclb
xor
or
cmp
add
lahf
mov
mov
shrl
into
push
mov
xor
sbb
cmp
out
adc
in
enter
pop
cmpsb
add
popf
mov
mov
xchg
adc
int3
cld
stos
add
xlat
aam
xchg
jns
mov
push
add
jae
in
ret
sbb
test
loop
sbb
add
test
push
in
jo
xchg
add
ret
adc
sub
inc
push
jl
ja
shrl
add
loope
in
test
pop
push
pop
gs
les
cmc
shl
mov
sub
stos
insb
outsl
push
or
lahf
jb
inc
arpl
add
mov
fcomi
sub
and
sbb
or
add
and
sbb
add
mov
test
inc
mov
call
jo
and
and
push
arpl
andl
in
mov
loopne
add
add
movsl
and
outsb
sbb
cmp
or
sub
xor
mov
bound
add
and
add
in
leave
hlt
aad
pop
mov
pop
test
xchg
inc
sbb
push
adc
jno
add
xchg
cmp
push
dec
inc
out
pop
and
into
adc
mov
loopne
aam
rcrl
movsb
ja
and
add
and
loope
inc
ficoml
mov
pop
push
jnp
cmp
inc
push
xorb
mov
loope
cld
lcall
lods
rol
jno
call
add
popa
push
mov
sub
imul
push
inc
ret
scas
mov
add
or
arpl
push
cmp
sub
xor
pop
icebp
mov
or
out
int
xchg
fwait
xor
and
dec
test
mov
gs
add
cmpsl
shll
aam
pop
add
imul
movl
pop
push
inc
mov
fs
mov
ljmp
or
inc
xor
inc
pop
xchg
paddw
jnp
loope
mov
push
xor
fadds
js
jecxz
mov
xor
test
dec
mov
sahf
add
maskmovq
testl
jl
les
add
add
rolb
mov
or
and
pop
mov
pop
mov
mov
add
cmpb
pusha
add
sarl
add
sub
pop
fdivs
mov
jecxz
xor
rolb
imul
andb
test
and
jle
rorl
mov
push
rcrb
pusha
mov
push
enter
jnp
in
pop
adc
push
popa
and
fistpll
push
dec
mov
rolb
adc
mov
xor
mov
data16
mov
mov
imul
xor
in
xor
add
jnp
jb
js
lret
adc
fistpl
in
sahf
pop
jecxz
das
sub
xchg
sahf
or
xchg
add
and
inc
andb
xor
out
into
sub
xchg
inc
mov
imul
push
mov
pop
dec
rorb
xchg
repz
or
cmp
add
cltd
in
cmpl
push
aaa
adc
ljmp
add
pop
shrl
stos
loop
add
adc
add
js
rol
aam
xchg
mov
stos
stos
add
aaa
rolb
mov
dec
pop
cmp
cld
xor
cmp
ret
mov
pusha
aad
cmp
in
insb
cmp
sbb
inc
jbe
mov
addb
xor
inc
cmp
popa
mov
orl
mov
fwait
add
pop
and
shl
repnz
push
cmp
cmp
loopne
xor
jp
sti
mov
das
je
pop
cmc
add
ficoml
add
repnz
rorb
sub
mov
test
jg
mov
fsubrl
les
fwait
outsb
pushf
xor
movb
push
rorb
cwtl
mov
test
cli
or
inc
out
cmpsl
inc
sbbl
and
andb
fildll
and
sub
stc
mov
pop
pop
xor
andl
aad
xchg
or
xchg
enter
sbb
pop
das
add
sbb
arpl
mov
sbb
lock
add
std
cmp
shll
pop
sub
je
or
addr16
mov
fcoms
inc
lcall
add
popf
inc
sbb
sbb
pushf
pop
fcoml
and
fnstcw
xchg
or
fcomip
xchg
pusha
push
push
inc
xor
aas
es
shl
in
test
sub
add
cmc
iret
jns
pop
or
jno
xor
in
aas
cmp
inc
jns
push
sarb
dec
sub
repnz
xchg
fs
add
or
adc
mov
flds
jnp
sub
ret
xchg
adc
nop
xchg
or
add
pop
out
add
lock
mov
inc
ss
inc
lahf
mov
inc
pusha
xor
dec
and
push
popa
pop
loope
gs
in
sub
and
neg
addr16
dec
mov
lods
jp
cmpsb
push
mov
cmp
fcomps
ss
imul
in
mov
sysret
aam
xchg
js
push
loopne
int3
add
xchg
push
pop
dec
flds
out
leave
mov
xor
ret
sbbl
xchg
cmp
mov
addr16
cwtl
pop
adc
test
clc
ljmp
rorl
mov
add
sbb
add
xor
int
rorb
jp
adc
mov
add
scas
xchg
sbb
push
aaa
push
ror
sbb
pop
mov
loop
es
mov
lret
adc
sub
sub
loopne
or
nop
movsl
dec
mov
lods
sub
jnp
mov
mov
bound
sbb
or
mov
inc
repz
xor
push
pop
jnp
mov
jecxz,pt
adc
sub
dec
adc
aam
add
pop
jno
pop
add
inc
lahf
or
xor
push
js
enter
inc
or
or
aas
pop
cwtl
cmp
rclb
ficoms
ret
shlb
outsb
or
or
jns
push
add
xlat
lods
jbe
int3
scas
cmpsl
inc
xor
mov
dec
and
mov
fidivrs
loopne
xchg
inc
or
xchg
push
inc
mov
cmc
cmpsb
mov
daa
add
in
ds
push
add
std
clc
cmp
cs
cld
fdiv
lret
mov
xor
mov
jecxz
clc
inc
pop
jns
and
xchg
pop
ds
lds
pop
cs
push
or
lret
push
sub
push
mov
test
sarb
movsb
pop
adc
sub
pop
gs
out
add
cli
jle
pop
rclb
orb
push
xor
fs
frstor
sbb
dec
or
pop
jle
sbbb
and
mov
mov
adc
jmp
dec
inc
test
test
cmpsb
aam
cmp
mov
jp
and
adc
dec
sbb
test
xor
insb
and
mov
jge
mov
rolb
cmp
fsubrs
jnp
pop
add
test
sahf
push
or
xchg
xchg
scas
mov
out
add
lods
inc
inc
adc
add
or
mov
setg
clc
loope
out
mov
pop
call
rorl
decb
xor
add
jg
add
dec
incl
fwait
pop
test
or
jl
lcall
fildl
mov
jl
ss
add
hlt
adc
lret
std
sahf
jne
and
inc
ljmp
mov
popf
mov
sbb
sub
push
int3
mov
shl
fiadds
mov
sub
cmp
push
mov
push
sub
cltd
xor
or
psrlq
pop
inc
xorb
xlat
xorl
and
add
stc
stos
jl
std
out
cmp
mov
dec
ljmp
test
std
add
and
mov
xchg
stos
mov
lods
xor
push
jl
jo
xchg
pop
sbb
cmp
cmp
cmpl
subb
mov
dec
inc
sub
cmp
xor
es
xchg
push
add
js
push
outsl
inc
ljmp
and
jg
adc
bound
add
js
lcall
mov
popa
ljmp
mov
pop
mov
xchg
lcall
pop
add
test
rolb
lea
hlt
mov
push
test
inc
lods
cmp
shl
mov
dec
add
es
test
andl
cmpsl
insb
rclb
repz
aas
xor
cmp
pop
push
lret
dec
and
mov
das
sub
xor
mov
add
out
dec
int
add
mov
aad
xor
and
jb
mov
jp
sub
adc
scas
mov
add
add
mov
fstps
cltd
int3
xchg
arpl
push
sbb
pop
cmp
mov
xchg
add
adcl
pop
pop
popa
add
ud1
lahf
adc
add
pop
push
mov
cmp
iret
dec
ret
mov
cmp
xchg
push
ficoms
add
js
adc
mov
into
add
ret
jp
lock
jnp
aas
enter
dec
pop
mov
inc
aaa
int
sti
lcall
sub
sbb
cmp
mov
les
jne
sahf
xor
mov
lea
cmp
push
dec
fidivrl
jl
pushf
jo
rcrb
repnz
dec
pop
add
sti
mov
mov
mov
std
push
pop
fistpll
sub
xlat
test
sub
or
testb
divl
test
andl
aad
and
andb
loop
jmp
hlt
cmc
loopne
into
push
sub
aad
stos
dec
pop
add
sbb
add
dec
shr
lods
xchg
shlb
and
fwait
ret
cli
data16
ret
add
mov
out
imul
test
xor
add
repz
in
sbb
mov
adc
cwtl
adc
ds
in
inc
inc
int
shrl
loope
aad
pusha
repz
jne
cmp
and
int3
in
sbb
popa
pop
addr16
jl
jbe
dec
add
jne
bts
xchg
pop
outsl
push
cmp
push
jns
pop
jae
popa
xor
jno
jb
sub
adc
scas
icebp
push
rcll
and
je
push
push
decb
xor
adc
lds
leave
add
xchg
dec
movsl
add
jp
xchg
rorb
inc
adc
fnstsw
dec
lds
loopne
jle
pop
mov
inc
dec
jecxz
aaa
popa
or
sub
in
bound
cltd
fwait
repz
pop
and
loope
das
push
out
pop
add
adc
sarl
xchg
sub
or
mov
cltd
stc
add
add
in
and
xchg
arpl
add
jb
adc
add
xchg
outsl
sahf
xor
xchg
test
adc
mov
cli
cmp
roll
mov
cmp
in
cli
push
jge
xor
cltd
es
sahf
rclb
mov
and
and
sti
xchg
add
lock
sub
add
lret
push
inc
adc
sbb
leavew
pop
jnp
fbstp
push
pop
sbb
push
and
lret
mov
sbb
insl
ja
add
test
xchg
addb
sbb
into
lret
in
sub
shll
test
leave
cmp
loop
sub
mov
shlb
inc
mov
or
dec
xor
add
imul
clc
stc
sarb
mov
sbb
inc
add
les
sbb
xchg
imul
sbb
add
rcrb
fwait
or
adc
or
adc
pop
push
jns
cmc
pop
test
mov
mov
add
dec
adc
mov
xchg
mov
add
dec
lret
arpl
jo
es
loope
rcrl
add
sbb
xor
lcall
inc
add
icebp
mov
ret
int
shlb
add
notl
in
iret
addb
fsubs
sti
mov
push
mov
loop
pop
fs
mov
or
cmp
jbe
inc
sub
cmpsb
mov
int
mov
xchg
dec
mov
jb
add
and
xchg
jle
inc
imul
sub
push
pop
das
dec
adc
mov
jg
adc
sub
add
xchg
shrl
mov
cmpsb
push
test
sub
adc
inc
pop
cltd
mov
inc
push
cmp
enter
out
fchs
xor
in
adc
and
outsb
mov
sub
add
mov
pop
add
and
jo
imul
loop
pop
xchg
xlat
pusha
nop
cmp
add
push
ss
dec
testl
pop
sti
movl
push
ljmp
icebp
jae
out
adcb
push
adc
and
addb
or
sbb
add
lods
push
pop
push
mov
loopne
inc
lcall
mov
inc
lods
jge
inc
popa
inc
pushf
xor
add
je
add
push
subl
bswap
jnp
or
das
rolb
loopne
inc
rorl
repnz
xor
cmp
daa
push
mov
add
mov
add
jbe
jns
mov
push
pop
fisubrl
add
out
lock
jae
inc
int
cmp
test
dec
es
divb
out
add
xchg
ds
popa
and
stos
inc
mov
and
adcb
leave
movsb
shl
cmp
scas
dec
outsb
dec
and
popf
cld
add
daa
shlb
call
and
add
push
mov
mov
lret
xchg
adc
push
inc
inc
lods
jnp
add
sbbb
mov
sub
cmp
pushf
xor
mov
popa
push
xchg
add
inc
xchg
and
mov
sbb
mov
mov
cmpsb
mov
repnz
sbb
cli
adcb
in
in
xor
ljmp
stos
inc
cmpb
inc
add
cli
lahf
stos
or
push
add
leave
ret
into
andl
test
ret
pop
jo
ret
inc
pushf
sub
stos
xlat
ljmp
or
test
lret
add
sbb
push
xchg
sarb
scas
out
subb
fwait
leave
sub
add
xor
push
mov
xchg
je
stc
pop
or
btc
int
xor
jno
inc
add
imul
mov
xor
pop
test
push
sbb
xchg
int
test
jno
inc
xorl
fisttps
adc
je
cmp
shll
dec
andl
lcall
mov
in
adc
or
mov
jnp
ror
stos
cmp
jl
inc
cs
pop
add
loopne
aad
lods
movsl
add
adc
test
mov
pop
add
adc
test
aaa
in
or
pop
out
jnp
xor
ret
fistps
mov
and
notb
or
mov
add
pop
and
subb
or
repz
jno
loop
arpl
adc
push
jmp
ds
repz
sbb
loopne
in
add
jbe
mov
adc
mov
jg
movsb
rcrl
add
bswap
movb
xchg
xor
dec
xor
pusha
ljmp
sti
mov
ret
jo
inc
repnz
into
xchg
add
pop
add
cmp
fdivrl
adc
cmp
jno
mov
leave
inc
sbb
scas
push
aam
add
in
popf
mov
mov
mov
adc
or
jg
lcall
std
xor
xchg
jnp
push
enter
js
cmp
rcll
out
adc
mov
sub
jp
cmp
aaa
ljmp
les
movsl
or
inc
shll
sub
pop
jp
ds
out
int
add
or
jo
add
adc
add
push
fidivrl
mov
dec
rcrl
gs
add
xchg
movsb
add
mov
inc
jecxz
push
sbb
int
push
add
xor
repnz
dec
dec
add
fldt
shl
cmp
dec
or
cld
movsb
jle
dec
pop
cli
pop
imul
repz
inc
leave
loopne
mul
push
dec
adc
arpl
xor
shll
aam
xchg
add
push
fs
mov
outsb
or
dec
leave
and
xor
test
stos
add
mov
addr16
stos
shr
loopne
jecxz
xor
mov
test
push
add
js
scas
rcll
cmpsl
jmp
leave
jno
nop
add
loopne
xor
inc
mov
mov
xchg
outsl
js
cmp
mov
and
add
dec
pop
lea
sub
mov
das
ds
xchg
cmpsb
pop
repz
mov
add
mov
out
pop
lret
mov
add
jno
les
aaa
in
xor
add
or
xchg
fmul
idivb
outsl
or
addr16
movsb
ltr
pushf
and
inc
cmpsl
jmp
stc
shrl
or
jl
xchg
dec
loop
jb
inc
cmp
or
lock
roll
xor
addr16
mov
sbb
daa
stc
mov
push
jmp
ret
cmp
cmp
lods
push
out
sub
cwtl
jne
stc
add
adc
add
jge
mov
sarb
add
push
push
aad
stos
into
inc
test
sarl
push
ret
and
cmp
add
push
sub
inc
outsb
not
add
add
or
insb
or
ss
out
and
jle
lods
pop
call
add
fwait
cld
sub
and
push
xor
cmp
mov
stos
out
jnp
pushf
xchg
cmp
inc
fwait
rep
aad
cwtl
add
sub
mov
mov
sbb
jo
add
leave
push
js
sbb
rolb
mov
pushf
mov
movsl
add
aaa
sub
mov
stos
inc
ret
loop
sub
dec
adc
rcrb
inc
xchg
push
out
adc
jnp
cmp
addr16
cmp
xchg
lock
cmp
xchg
sbb
movsl
fnstsw
push
and
sub
jg
xchg
loopne
sahf
in
mov
std
add
push
mov
push
fisttpl
add
loop
add
jns
sbb
add
arpl
mov
jno
inc
cmpl
mov
cmp
imul
hlt
and
in
sub
sbb
push
mov
data16
les
sbb
popf
mov
cmp
inc
xchg
pop
cmp
add
repnz
add
mov
movsb
dec
add
ss
mov
and
lahf
dec
cmp
rcll
dec
sbb
rcl
icebp
cmp
test
and
sub
xorl
rol
mov
imul
divb
cmp
add
mov
std
pop
in
daa
rorb
xchg
les
fdivrs
jge
and
adc
addr16
and
fs
push
imul
fdivrs
sbb
shll
cmp
es
sbb
jg
or
adc
push
sbb
sbb
cmp
cli
les
and
jecxz
ret
orb
sarb
inc
sub
outsl
push
pop
dec
cmpb
sbb
loopne
pop
pop
dec
mov
aas
xchg
dec
jge
pop
mov
shrl
inc
xchg
push
add
mov
mov
pop
mov
aas
jge
ljmp
cs
cmp
xchg
push
lock
cli
inc
sbb
repz
dec
fsubrl
jle
mov
dec
jge
mov
mov
ret
cmc
adc
enter
dec
add
lahf
jbe
imul
cmp
sub
inc
fnstenv
int3
cmc
inc
shll
aas
out
pop
inc
into
std
stos
and
push
and
fnsave
cmp
sbb
push
pop
rolb
push
lea
add
fs
sub
xchg
add
in
cld
mov
jp
add
fnstcw
cwtl
dec
and
leave
dec
mov
jl
pop
in
ljmp
pop
sti
and
inc
popa
add
in
and
mov
aad
in
lea
fucomi
adc
or
ja
das
xchg
lds
add
clc
adc
mov
mov
jl
add
divl
xor
add
insb
add
sbbl
sbb
aad
add
xchg
mov
jae
out
jmp
mov
xchg
jae
push
cmp
insl
dec
fiadds
add
in
jg
inc
mov
add
mov
aaa
nop
add
lds
pop
mov
loopne
cmp
xchg
fcomps
sbb
in
fidivs
subl
xchg
adc
mov
cmpsl
mov
lds
push
insb
cmp
push
fidivl
adc
add
cli
push
js
jb
sbb
pushf
jp
les
out
xchg
mov
mov
shll
push
das
mov
sbb
mov
and
fwait
mov
cmp
popf
sbb
pop
popf
xor
ret
addb
add
inc
xchg
lods
fists
pop
outsl
pop
leave
gs
adc
movsl
adc
and
mov
inc
repnz
in
pusha
xchg
arpl
cs
lods
outsl
or
lock
add
fildl
lea
outsb
shrb
cld
add
xor
jp
add
mov
cmpsb
stc
clc
sbb
xchg
outsl
ds
leave
and
mov
aam
or
sub
test
dec
and
cmc
movsl
mov
sbb
mov
sbb
xor
cmp
stc
pop
push
push
dec
jp
in
sub
add
cwtl
pop
clc
sbb
adc
xorb
repnz
dec
add
pusha
pop
and
fisttpll
push
das
loop
adc
xor
fldcw
stc
dec
push
and
lock
and
add
adcl
inc
cld
jae
hlt
pop
adc
mov
or
add
mov
mov
faddl
leave
xor
and
jnp
and
rorl
xchg
add
inc
inc
rolb
mov
cmc
add
outsb
push
mov
inc
pop
aad
hlt
rorl
sbb
xchg
das
inc
loope
into
sahf
dec
daa
jns
mov
imul
xor
lahf
test
adc
sar
add
add
inc
pop
enter
inc
fistpl
mov
in
and
pop
shll
adc
sarl
std
mov
ss
sbb
add
jg
mov
inc
sbb
xchg
add
pop
adc
jbe
inc
add
inc
push
sbb
repnz
out
push
cmovo
mov
into
add
xchg
mov
popf
bound
movsl
in
pop
ljmp
inc
xchg
cmp
add
bswap
js
and
inc
loop
mov
push
xchg
add
ss
xor
imul
add
mov
ljmp
mov
mov
mov
add
jmp
subl
add
mov
mov
mov
int3
call
mov
mov
sub
movsl
cld
add
lods
ret
loopne
inc
pop
mov
fnsave
jecxz
les
push
scas
mov
mov
add
push
aam
push
xor
in
sub
enter
insb
mov
test
imul
jg
decb
in
inc
push
add
jns
test
pop
in
cwtl
jmp
fld
aas
mov
jb
add
or
shll
pop
adc
sbb
mov
faddp
mov
pop
add
popf
add
dec
add
lods
xchg
int3
jg
xchg
adcb
iret
jle
inc
xchg
and
movsl
push
inc
add
push
pusha
push
fmuls
push
les
int
outsb
rorl
xchg
js
ja
aad
xchg
fs
xchg
add
mov
add
andl
adcb
jg
stos
inc
inc
frstor
je
xor
bound
data16
mov
test
cs
dec
pop
ret
jmp
fcmovnb
lea
xor
inc
sub
jae
into
adc
rorl
enter
std
pop
pushf
cli
jg
test
jo
add
pop
add
and
sbb
sub
stc
inc
adc
int3
cmp
and
sahf
sbb
sti
xchg
lret
push
xor
stos
bswap
cld
add
stc
add
cmpps
mov
and
mov
xchg
pop
ret
jo
hlt
jp
adc
pop
lock
jmp
cmpsb
fisttpll
xchg
push
xchg
loopne
in
fisubl
add
mov
pop
iret
leave
inc
add
xlat
out
sub
pop
push
add
movsb
inc
dec
ret
mov
add
call
aam
rcrb
mov
sub
jecxz
mov
jae
dec
inc
xor
push
add
test
stc
es
rolb
cld
cltd
shlb
push
xchg
add
mov
add
mov
sub
cmc
pop
es
add
xchg
sub
stc
cmc
fnstcw
or
das
jp
push
fcomp
and
arpl
lret
xor
enter
aam
push
movsb
in
repnz
inc
rclb
flds
shlb
xchg
les
dec
add
and
inc
mov
loop
lahf
shrl
and
sbb
into
sub
inc
push
subl
and
xchg
icebp
inc
mov
insb
mov
and
testl
add
pop
arpl
es
xchg
cmp
xlat
fdivs
push
jecxz
sbb
pop
outsl
add
scas
push
dec
adc
add
sbb
add
cltd
mov
mov
xchg
add
fwait
loop
aas
shrb
adc
arpl
stos
dec
mov
sub
pop
scas
mov
pop
sbb
xor
dec
sub
cmp
mulb
ret
lea
mov
inc
jmp
and
and
jge
imul
mov
pusha
decl
sub
adc
jg
inc
out
and
aaa
jne
pop
mov
scas
loope
jns
add
xor
mov
aas
mov
adc
xchg
pop
pop
aas
adc
add
add
in
outsl
fsubrs
add
test
ds
add
or
add
mov
mov
addl
xor
cmp
pop
ror
lea
mov
jle
jge
addl
add
cmp
lods
push
or
sub
add
bound
add
lret
movsl
cmp
std
subl
icebp
add
and
jbe
gs
jge
and
add
sbb
jnp
movsl
push
outsl
add
jmp
insb
jge
add
lds
fcmovne
xchg
inc
xor
sbb
mov
into
add
inc
jns
cmp
adc
mov
je
add
pop
ret
bound
outsl
sub
arpl
notl
adc
and
mov
das
lret
repz
dec
cmp
push
shrb
out
ds
scas
mov
sbbl
add
int3
add
sub
adc
mov
add
idivl
and
adc
ds
xchg
push
inc
inc
lcall
cld
sbb
jmp
xor
faddl
leave
cli
pop
jbe
add
sbb
jne
repnz
aas
push
jecxz
add
mov
inc
add
jae
xlat
xor
push
movl
jnp
mov
and
sub
test
int
xchg
pushf
and
cld
pop
fcomp
xor
or
adc
and
sbb
add
cmp
inc
or
dec
andb
movsl
sbb
xchg
mov
mov
and
xchg
pop
dec
xor
daa
or
popa
or
add
mov
lods
add
mov
pop
cmp
push
call
inc
or
add
inc
add
cmp
cmp
or
xchg
shl
mov
push
add
ret
pop
pop
iret
pusha
repnz
and
mov
push
stos
in
std
xor
xchg
rcrb
das
xlat
shlb
mov
loop
add
ss
das
adc
xor
fiadds
test
dec
fstl
clc
out
push
dec
sbb
xor
pop
aad
pop
sbb
popa
cld
subl
sbb
stos
mov
pop
sub
xchg
rcrb
sbb
mov
adc
adc
pushf
out
test
mov
push
xchg
movsl
mov
add
dec
test
pusha
stc
fnstenv
push
adc
or
jmp
mov
jbe
js
scas
mov
lea
cmp
addb
cwtl
xlat
sub
sti
jge
xorb
push
popf
add
inc
mov
stc
inc
test
nop
push
push
sbb
popf
jecxz
sahf
xor
mov
jmp
xor
adc
sahf
pop
rorl
leave
cmp
jl
and
push
fadds
fistpll
mull
jmp
dec
sahf
jmp
xchg
and
lds
xor
sbb
movl
cld
aam
jns
push
add
ljmp
inc
js
mov
pop
pop
sahf
aaa
out
and
clc
inc
popf
sti
jo
push
movsl
xor
fxch
aaa
loope
adc
je
lret
xchg
cmp
test
arpl
ret
inc
xchg
loopne
movsl
and
and
fadd
and
sahf
adc
mov
aas
inc
xor
fcmovu
push
add
mov
sub
push
subl
sub
dec
mov
icebp
jg
dec
xchg
mov
outsl
inc
xor
imul
pushf
sti
add
cmp
mov
mov
add
sub
add
movsw
addr16
hlt
sbbl
jle
daa
ja
filds
bound
dec
mov
jns
fs
add
cmpsl
lcall
into
insb
mov
out
mov
cmp
sbb
add
push
push
add
repnz
push
jge
add
nop
push
pop
loopne
adcl
inc
in
lods
xor
in
sub
or
adc
xor
xlat
hlt
inc
add
jle
loopne
dec
mov
or
push
frstor
add
jp
or
sbbb
and
xor
imulb
std
xchg
mov
filds
jae
or
pop
imul
or
add
faddp
xor
ret
and
rcrl
add
sti
cmp
jge
mov
and
push
inc
add
xchg
add
scas
lcall
in
xor
xor
or
shll
pop
mov
add
jle
add
pop
movsl
ret
pop
cmp
pop
jae
xchg
sbb
cmpsl
call
sub
out
test
add
mov
jle
idiv
cmp
lds
aas
popa
sub
jg
ret
fsts
fistpl
jae
lcall
popa
add
cwtl
jno
test
roll
out
cmp
aaa
sarl
aas
je
jbe
dec
rol
mov
imul
clc
inc
add
test
pushf
std
dec
mov
sbb
loopne
mov
dec
inc
pop
das
sarb
lcall
out
xor
movsl
push
pop
mov
out
in
les
mov
enter
xor
add
cmpsl
in
pusha
jae
mov
test
mov
add
adc
inc
sbb
fs
popf
or
repz
push
xor
mov
outsb
cmp
inc
inc
ds
shll
or
push
rcrl
dec
xor
add
mov
add
aam
push
out
fwait
mov
enter
xor
ret
cmp
xor
cmpsb
mov
inc
stc
adc
lret
cld
and
test
add
fwait
shl
push
lcall
and
lods
shrl
sub
inc
lahf
cmp
sar
test
adc
cmp
mov
xor
xor
fisttps
cld
adc
and
and
inc
sub
or
cmp
or
cmp
adc
mov
push
test
or
or
mov
dec
cli
loope
add
inc
sti
inc
fsub
jge
incb
adc
cmpsl
cmpsb
lahf
shll
psubsw
rorl
mov
xor
lds
jbe
jo
movsb
in
iret
xor
cmp
adc
hlt
stos
insl
je
mov
sbb
cmp
xchg
xor
lods
out
fisubl
rcr
jne
mov
dec
add
scas
jmp
xchg
add
inc
cmpsb
dec
aad
mov
sub
mov
out
fs
inc
cmp
add
mov
mov
xor
jp,pt
fistps
js
sbb
enter
pop
mov
add
sarl
pop
dec
es
mov
jecxz
mov
movsl
xor
sahf
or
js
enter
imul
mov
daa
sub
mov
pushf
jne
add
orb
sahf
lods
add
in
loop
add
out
ret
std
test
sbb
inc
hlt
fldl2e
jnp
mov
ficoms
push
ficompl
test
and
lret
mov
in
inc
jo
adc
cmp
dec
iret
ret
jl
sti
lret
add
dec
adc
insb
cld
cmp
inc
out
push
inc
sub
dec
add
roll
xchg
fnstcw
out
cmp
pusha
lahf
hlt
jmp
pop
sub
scas
movsl
into
ret
or
inc
add
in
add
outsb
into
idivl
lea
pop
cmpsb
ss
or
push
inc
js,pn
enter
xor
jno
jo
adc
lret
ss
add
add
adc
scas
add
jl
in
out
jns
pop
mov
sub
inc
push
add
je
stos
cmp
sbb
and
repz
sbb
adc
movsl
ljmp
js
push
dec
add
fdivl
pop
sbb
add
jns
xchg
inc
mov
gs
test
dec
mov
adc
jmp
mov
sub
dec
jae
and
ret
into
je
mov
sub
es
hlt
dec
int3
insb
movsl
jp
cmp
mov
das
imul
sub
test
pop
inc
inc
add
pusha
jecxz
fdivp
sbb
add
push
stos
sbb
and
test
fs
sub
xchg
add
adc
addl
and
pop
out
add
and
cs
push
lahf
mov
mov
pop
lods
mov
movb
inc
xlat
add
fwait
and
repnz
rorb
push
cmp
bound
xor
adc
mov
mov
xchg
pop
jmp
sti
cmp
pop
arpl
push
stos
jg
mov
aad
pop
std
pop
add
push
pop
cmp
pop
lods
and
or
pop
pop
inc
ret
packssdw
movsl
add
mov
inc
or
inc
mov
xchg
mov
cmp
inc
sub
xor
es
push
stc
out
xchg
addl
and
aad
add
sub
sbb
xchg
and
jl
xchg
or
cmpsl
bswap
dec
mov
xchg
xor
cmpb
outsl
add
cmp
imul
jge
enter
jg
and
adc
dec
cmc
inc
popf
mov
xchg
or
ret
fs
hlt
shll
dec
dec
movsb
into
shl
mov
fcoms
cltd
adc
dec
repz
jb
or
ss
push
shl
repnz
push
add
ds
cmove
pop
xor
inc
repz
popf
pop
add
xchg
sub
sub
test
jae
imul
fdivl
mov
enter
cld
loop
add
bound
pop
inc
jp
jmp
inc
push
xchg
clc
arpl
pop
add
xchg
adc
mov
fcmovbe
jge
xor
jl
and
shll
mov
mov
and
dec
pop
bound
and
add
repz
loopne
push
out
ja
leave
mov
fwait
sbb
xchg
jl
rclb
xor
add
or
and
mov
rolb
or
pop
and
loopne
icebp
pop
jl
outsb
add
jb
daa
testl
sarl
jbe
mov
jecxz
xor
inc
cmp
lcall
rcrb
scas
out
xor
ss
sbb
iret
mov
adc
push
leave
movsb
push
les
and
add
fildll
or
stc
stc
int3
inc
scas
test
aad
sbbl
jp
mov
aaa
cmp
cmp
lahf
xor
int
dec
adc
mov
sub
dec
jg
test
add
mov
stos
pop
inc
lret
mov
pop
lods
pop
inc
arpl
test
repz
adc
push
ds
sub
mov
cmp
scas
xor
aas
adc
cs
jne
loopne
adc
mov
test
mov
les
pop
shll
add
pusha
rol
fists
jl
outsl
or
es
ja
ret
mov
loopne
aaa
push
filds
sbb
mov
pop
cli
in
add
fistpl
mov
movb
cmp
xor
push
mov
cmove
jge
cmp
test
lods
ret
add
popa
pop
push
lret
int3
push
sub
je
in
pop
xor
fsubrp
adcl
imul
sbb
xor
add
sbb
mov
add
add
flds
outsl
je
cmp
ret
adc
xchg
out
add
inc
jmp
daa
lea
push
notb
jb
cmc
push
push
cmpb
cmp
lcall
leave
jns
sti
lds
movzwl
adc
jns
nop
push
lea
fdivs
decb
fwait
divl
rcr
std
add
dec
pop
cmp
add
push
inc
pop
mov
data16
flds
pop
xchg
lock
insl
jecxz
xor
cmc
dec
push
inc
push
push
adc
sub
in
push
add
xor
push
cli
pop
xchg
inc
jnp
add
rol
and
test
lret
test
in
xor
loopne
xor
inc
jecxz
dec
sub
test
pop
xor
and
call
test
fadd
aas
and
sarb
ljmp
lods
xchg
xchg
or
sub
xor
cmp
lea
sub
xor
mov
unpckhps
jmp
cmp
subb
aam
jne
push
xchg
sub
filds
pop
and
iret
stc
pop
ljmp
inc
aam
and
pusha
stos
out
scas
clc
cmp
dec
xchg
adc
mov
ds
das
xchg
rcrb
mov
mov
pop
daa
and
jge
lret
inc
mov
sbb
push
cli
inc
inc
xor
leave
mov
arpl
clc
sub
leave
fwait
mov
mov
outsb
lret
sub
ss
gs
mov
xor
stc
repnz
lea
jg
pushf
movw
push
lea
jne
shrd
jmp
lock
ljmp
mov
cmp
jl
mov
mov
in
loop
lret
jnp
mov
adc
insb
sbb
mov
inc
stc
fmulp
sub
mov
cmp
orb
xchg
xor
sub
add
push
scas
shrb
mov
cli
dec
sub
mov
clts
jge
popf
pop
das
dec
cmpsb
scas
andl
xor
imul
shlb
mov
mov
pop
arpl
loope
cltd
int
les
cmp
xchg
or
dec
repz
roll
mov
roll
sub
jo
rorb
adc
aad
dec
pop
mov
and
add
mov
jns
jl
mov
ds
aam
dec
popf
loope
bound
popa
xchg
push
xchg
dec
mov
mov
cs
sub
or
push
pop
adc
out
out
push
sub
movb
fists
lods
adc
push
adc
pop
adcb
sub
popf
sbb
add
shrb
jo
mov
push
push
jge
xchg
fsubrl
shl
sub
adc
ss
mov
mov
push
out
imulb
and
sbb
les
data16
dec
pushl
cld
pop
lods
mov
inc
jbe
xchg
or
xor
and
jns
rcrb
lahf
cltd
jne
or
clc
mov
and
fidivrl
pusha
xor
std
or
orb
pop
push
hlt
lret
cmp
mov
mov
cld
js
mov
mov
xlat
dec
pop
sub
push
mov
lret
dec
dec
aam
imul
nop
and
jge
lret
les
in
sub
cld
dec
in
sub
repnz
mov
in
in
lods
cmp
mov
cmp
nop
xchg
or
gs
xchg
fisttpl
aaa
and
lcall
and
imul
mov
xchg
inc
pop
test
iret
mov
cmp
stos
leave
push
cmc
push
in
push
adcl
stos
mov
push
in
mov
pop
or
adc
data16
pushf
je
clc
push
lods
sbb
in
mov
movw
movw
lea
jle
dec
jmp
mov
sbb
shll
test
cltd
pop
lret
pop
mov
daa
add
add
mov
xor
cmc
xchg
stc
lret
js
xchg
jne
inc
mov
out
sahf
mov
mov
dec
mov
add
dec
mov
mov
push
clc
cmp
sbb
xchg
js
cmpsb
xchg
je
out
jnp
sub
cmc
pop
scas
es
inc
dec
cmp
xchg
repnz
cmpsb
test
sbb
lods
mov
lea
add
pop
cli
std
xor
adc
sub
lret
imulb
lret
aas
movb
adc
outsl
jne
jp
iret
sub
test
ss
sub
mov
ds
dec
lahf
arpl
jnp
jnp
xor
push
sbb
insb
push
jle
fs
xchg
fwait
adc
daa
loopne
add
sahf
xchg
cmpsb
add
mov
dec
dec
mov
pop
cmp
rol
and
mov
cmp
js
dec
inc
xor
adc
in
inc
mov
in
cld
fsubs
sub
xor
test
push
mov
ss
or
lcall
pop
je
rcrl
push
in
sub
cmc
aad
or
out
fwait
pusha
jo
imull
in
lcall
mov
sarl
outsb
pusha
push
mov
scas
add
enter
pushf
cmp
jmp
pop
sbb
outsb
roll
sub
mov
outsb
xor
call
xor
jnp
rorl
int
pop
push
out
add
pop
mov
test
or
jnp
adc
adc
lock
push
fsubl
pop
das
cmc
popa
jo
and
hlt
subb
cmp
jno
lea
out
push
sbb
iret
cmp
fbld
fxch
pop
dec
mov
dec
lods
jmp
or
sub
lock
stos
cld
mov
fmuls
add
jnp
pop
xchg
scas
in
mov
and
mov
out
mov
sbb
cmpsl
jbe
and
jae
dec
fmul
out
inc
loopne
jns
mov
and
xchg
and
cmpsl
pop
lods
outsb
fwait
scas
out
xchg
pushf
adc
and
add
sbb
stos
out
inc
add
mov
cmpsb
fwait
fwait
sbb
loop
call
sub
xchg
inc
int3
int3
add
push
dec
jae
in
out
sub
dec
mov
xchg
and
adc
adc
push
sub
ret
xor
push
mov
mov
negl
mov
test
inc
xchg
push
cmpsb
dec
lock
mov
fwait
lods
sbb
mov
es
xorl
shlb
mov
mov
sub
jno
xor
idivl
mov
incl
lods
out
sti
dec
dec
sbb
xchg
push
fstpt
or
and
or
mov
leave
je
dec
scas
cmpsb
imul
add
sbb
mov
jmp
sbb
pusha
jle
jg
repz
pusha
mov
insl
pop
pop
fwait
dec
shll
jecxz
adc
in
insl
dec
sarb
jnp
movsl
test
cmpsb
test
icebp
jmp
mov
into
cmp
xlat
jae
or
cld
xchg
lcall
enter
cltd
and
inc
loope
mov
sub
push
add
out
jg
xlat
mov
sbb
adc
pusha
pop
repnz
inc
add
xchg
dec
dec
xor
xor
xchg
out
popa
add
test
xchg
cmpsb
inc
lods
mov
cmpsb
xor
jnp
mov
push
dec
out
sbb
daa
adc
inc
out
ret
iret
lret
xor
ljmp
mov
fldenv
decb
or
jnp
shlb
lcall
test
stc
mov
jae
mov
hlt
xor
inc
sub
inc
xchg
xchg
in
mov
xchg
mov
cmc
mov
xor
arpl
push
lock
daa
cmp
pop
or
pmullw
ret
scas
shll
nop
xchg
out
push
jae
aas
pushf
mov
idivl
hlt
insl
mov
fistps
std
call
xlat
jmp
dec
sbb
push
sbb
pop
and
dec
ret
in
aaa
cmp
inc
ret
mov
sbb
adc
inc
arpl
loop
int
or
test
pop
jb
stos
mov
pop
clc
testb
push
jb
mov
nop
add
leave
pop
fwait
test
out
loopne
mov
inc
shrb
out
stc
inc
mov
in
mov
bt
movb
mov
bt
pushf
bt
mov
ror
mov
pusha
inc
cmc
stc
neg
mov
clc
rol
bt
xor
mov
add
bt
mov
bt
stc
call
pushf
lea
ja
pushf
stc
shl
sub
setp
pushf
call
add
inc
inc
insb
popa
jae
gs
push
dec
imul
popa
jb
jno
jb
add
add
js
jb
popa
je
inc
imul
imul
and
jno
jbe
or
and
sti
mov
roll
adc
and
mov
das
or
sti
out
push
xor
ret
les
les
or
adc
std
cld
cmc
popa
jns
shl
adcl
das
cmpsb
add
sub
sbb
dec
inc
sub
clc
push
mov
push
lea
push
movsb
inc
into
mov
cmp
fcmovnb
imul
dec
xor
sti
jge
arpl
jbe
fisubrs
int3
pop
idivl
mov
add
mov
lea
fsubr
push
jo
adc
es
pop
cmp
shl
testb
xor
xor
adc
adc
dec
ret
testb
and
pop
add
jno
test
pop
fsubs
lods
and
daa
addr16
bndstx
push
fistps
stos
push
es
lret
insb
or
inc
mov
das
add
dec
int
or
loopne
mov
fs
test
or
dec
pop
lods
loope
mov
jb
popa
xchg
xor
or
cmp
xchg
jbe
mov
xor
sbbl
imul
insb
imul
xor
mov
cmp
pushf
rol
xor
outsb
mov
push
arpl
mov
or
lret
lcall
sub
sbb
inc
xchg
stos
push
in
mov
jmp
jne
movsbl
movb
setne
push
cwtl
mov
jmp
pop
lds
or
jl
push
mov
push
out
jmp
les
lahf
test
dec
fcmove
rcll
cwtl
jp
out
movsl
mov
dec
dec
shll
sbb
push
push
push
pushf
out
inc
fiaddl
push
fsts
inc
andl
pop
fildl
mov
sub
jno
inc
into
inc
ljmp
in
mov
in
fsubrl
imul
and
inc
dec
in
or
mov
dec
mov
je
test
sbb
mov
inc
lcall
mov
movaps
sub
jecxz
mov
outsl
push
in
and
cmpsb
inc
out
mov
fcomp
sbb
outsb
and
mov
lcall
or
enter
gs
icebp
dec
mov
jecxz
jae
jne
pop
jb
xchg
enter
adc
sub
jb
test
in
test
sbb
fbld
pop
inc
jmp
imul
movsb
outsb
add
sbb
xlat
sbb
repz
mov
jle
mov
cmpb
push
pushf
lea
jne
clc
sub
pushf
lea
jmp
xor
xlat
in
int3
adc
or
cmp
mov
adc
int3
test
add
rol
daa
icebp
enter
mov
sub
and
cmp
test
push
or
lcall
enter
lcall
sbb
imul
or
xlat
mov
adc
mov
movsl
mov
xor
scas
pop
pop
hlt
and
ret
addr16
sbb
lcall
xor
pop
add
clc
xchg
add
icebp
or
inc
xor
cmp
lea
adc
popa
mov
ss
addr16
cmp
stos
jle
xchg
int
push
push
mov
test
and
ss
aam
jae
jno
out
jle
inc
fwait
mov
cwtl
dec
lea
aas
jbe
in
mov
cltd
shll
pop
ljmp
push
subb
insl
aam
jmp
xchg
ret
inc
aam
push
in
ss
add
sub
xchg
push
sbb
jbe
jns
repz
and
fisubrl
cmp
out
mov
lock
xor
ret
mov
fcoml
sbb
addr16
loope
fcmovb
adc
cmp
adcl
adc
ljmp
lods
or
push
push
pop
jmp
xchg
mov
aam
push
lock
push
dec
data16
mov
lock
mov
stc
and
lock
mov
loopne
shlb
and
enter
sub
fdivp
adc
scas
int
push
dec
fwait
cli
stc
sbb
xchg
aaa
push
scas
lods
push
mov
adc
push
sbb
pusha
adc
iret
jae
and
cmp
pop
aam
out
arpl
inc
arpl
mov
jnp
fcmovu
js
sar
mov
add
and
jle
push
aaa
xchg
insb
mov
dec
pushl
sub
cmp
sarb
push
sbb
ss
lods
sub
jle
fidivrl
sub
shll
push
sbb
mov
scas
mov
mov
jne
repz
mov
pop
jge
arpl
cs
fnstenv
xor
mov
adc
rolb
or
mov
add
dec
scas
xchg
shl
fs
and
sub
mov
lret
jns
adc
ss
xchg
das
mov
repnz
fdivs
in
mov
jmp
fdivr
adc
inc
push
cmc
lods
mov
flds
xor
cld
mov
out
jne
inc
out
push
fwait
pusha
sbb
jmp
js
das
xor
test
popa
dec
inc
jp
fwait
xlat
popf
fdivrl
fs
outsb
daa
sub
jmp
out
inc
insl
mov
pop
push
cltd
cmp
jb
ret
xlat
repz
scas
mov
jae
push
jecxz
xchg
xor
mov
lret
push
jbe
repz
je
test
inc
xor
fildll
ja
mov
jecxz
test
es
stc
or
addb
outsb
call
fs
mov
mov
test
imul
xlat
icebp
and
jl
adc
mov
pop
add
jnp
jo
scas
xchg
ss
cld
scas
and
roll
inc
inc
xorb
mov
push
mov
pop
xor
push
push
outsb
xchg
sbb
jnp
adc
inc
mov
xchg
mov
mov
add
and
leave
imul
in
inc
fwait
add
push
jmp
pop
push
testl
mov
inc
movsl
dec
mov
mov
rcl
sub
adc
adc
imul
es
lcall
gs
fmuls
insb
inc
push
ret
push
sbbl
call
lea
ja
bound
pop
xchg
jb
jge
push
sarl
sbb
mov
addr16
scas
push
movsl
mov
xchg
sbb
mov
pusha
and
or
ljmp
jle
sub
leave
into
pop
lods
leave
or
sbb
ljmp
pusha
psubsb
leave
or
into
adcb
mov
clc
rolb
and
lock
gs
enter
xor
dec
and
sub
aad
inc
es
cli
shlb
dec
xor
adc
lgdtl
mov
loope
cmp
ret
dec
xchg
test
adc
adc
inc
mov
test
push
in
in
mov
jmp
push
clc
cmp
pushl
pusha
pushl
pushl
lea
jae
neg
not
bts
cmc
mov
sub
sar
mov
or
mov
call
movw
movw
lea
ja
cmc
sar
clc
sub
sete
neg
cmc
add
add
clc
mov
pushf
ror
bt
mov
pusha
jmp
dec
mov
inc
loope
lcall
jnp
jo
add
sub
add
xchg
pop
push
shlb
dec
imul
icebp
imul
xchg
mov
out
add
mov
mov
push
cmp
and
aam
filds
loop
fdivrl
push
outsb
aad
in
cs
gs
push
in
into
mov
aam
sbb
popf
es
mov
repz
in
push
xchg
jbe
or
test
cmp
dec
faddl
push
mov
mov
dec
inc
mov
lods
sbb
dec
lock
imul
jo
push
jns
wrmsr
xor
dec
or
cltd
ljmp
movl
mov
pop
nop
or
shrl
mov
dec
jbe
je
inc
je
insb
jae
aaa
push
bound
add
je
add
je
push
ret
bt
call
jecxz
insl
xor
mov
cwtl
movsb
mov
in
fstpt
pop
in
and
push
dec
jo
cwtl
pop
push
lret
fnstcw
movsb
mov
fildl
out
fisubs
stos
fisttpll
pushf
in
dec
gs
push
dec
inc
xchg
in
arpl
adc
sbb
fdivrl
add
popa
jecxz
xor
bound
movsl
shll
xchg
pop
mov
addr16
ja
in
mov
xchg
shlb
fildll
dec
fisubrl
add
inc
mov
shrl
pushf
repz
decl
mov
ret
popf
inc
imul
fcoml
stc
lds
repnz
push
mov
push
mov
es
cli
sti
add
or
mov
or
dec
mov
int
sti
pop
and
insl
xlat
or
ret
loopne
xchg
inc
xor
in
mov
mov
mov
das
push
bound
aam
inc
mov
mov
addr16
loopne
fldcw
mov
xlat
lds
pop
lods
xor
in
mov
cmp
cmc
sub
pusha
cmp
call
movb
rep
movl
movsbw
mov
mov
movb
pushf
lea
jmp
call
jmp
mov
fndisi(8087
adc
pop
dec
dec
add
push
test
call
out
lahf
out
xchg
outsb
add
dec
mov
call
jg
cmp
inc
add
test
fsubrs
add
xchg
cmpsb
push
lret
neg
push
in
loope
arpl
pop
sub
jmp
ret
mov
dec
cltd
and
adc
jo
push
fistpl
cld
push
lods
mov
mov
aas
adc
shlb
pop
dec
cli
in
outsb
xor
push
sub
push
fists
je
fists
jne
stos
out
sbb
mov
mov
adc
jae
pop
mov
and
pop
mov
pop
and
mov
setno
lahf
lea
mov
pusha
pusha
movl
pushf
call
mov
pop
popf
popa
int
adc
aas
lea
or
cmpl
cmpsb
mov
lret
movsb
sahf
pushf
lock
dec
xchg
mov
subl
dec
or
jle
sub
unpckhps
das
xchg
ljmp
sub
jbe
orl
sahf
fistl
add
dec
cmc
xchg
fwait
push
push
out
fnstsw
cmc
inc
js
ficomps
push
imul
subl
cmp
iret
popa
xchg
hlt
gs
js
out
cmpsb
xchg
cs
jns
gs
outsl
cltd
inc
cmpsb
jbe
jmp
les
mov
test
and
sbb
xor
mov
xchg
pop
shlb
mov
inc
std
jmp
cmp
gs
jbe
push
frstor
scas
and
mov
pop
add
add
xor
mov
outsl
rcl
add
into
les
fidivrl
arpl
adc
sub
pusha
and
sbb
push
pop
inc
sub
lcall
aas
bound
mov
jo
lods
and
add
data16
das
inc
icebp
ja
stos
or
mov
fdivs
adc
and
test
pushl
sbb
jns
enter
loopne
cs
rcrb
fs
push
inc
in
mov
fisubl
rclb
jl
inc
shrl
loop
cmpsl
pop
lcall
daa
js
mov
adc
gs
ret
out
mov
or
addl
mov
cli
adc
fxch
dec
push
jecxz
test
nop
add
cmc
sub
mov
out
push
out
cmp
mov
mov
aaa
sbb
or
hlt
out
jne
int3
lret
mov
mov
and
aam
rclb
std
inc
dec
fdivrl
ljmp
xchg
and
pusha
fcoml
bound
sub
rol
add
sahf
dec
jmp
lock
pop
mov
nop
ret
jae
into
mov
sbb
lea
outsl
in
sub
sbb
xchg
mov
aad
mov
and
or
es
mov
mov
pop
ds
in
ss
or
icebp
cmpsl
and
cmpsb
inc
xchg
scas
dec
aad
push
testl
ss
ja
je
test
movsl
mov
jcxz
xor
out
loop
xchg
dec
mov
xor
js
sbb
dec
cmp
xchg
shrb
mov
push
mov
addl
mov
es
adc
das
pop
sub
jb
fisttpl
aaa
fsubs
jbe
or
mov
lea
ret
sbb
sbb
rol
mov
bt
cmpb
call
adc
cmp
and
push
mov
sbbb
sbbl
push
fwait
nop
push
push
mov
and
inc
mov
jecxz
pop
mov
inc
mov
movsl
int3
je
fcompl
push
xor
push
aaa
mov
call
ret
inc
or
xchg
movsb
repnz
xor
sub
mov
fisubrs
test
inc
lret
cs
sbb
scas
xor
frstor
jmp
mov
pushf
cmp
jmp
mov
sti
add
lea
in
in
test
pop
add
and
in
push
in
push
mov
xchg
in
mov
push
jmp
pop
mov
or
leave
rcrb
jo
data16
insb
nop
mov
mov
jbe
das
push
cmp
shrb
insl
jne
dec
adc
ljmp
push
pusha
adc
cli
push
clc
outsb
xchg
lock
push
sbbb
sbb
aam
cmp
inc
insl
repz
add
test
cmp
lea
popf
call
rcrb
mov
lea
stos
nop
inc
mov
xchg
repnz
jno
push
sbb
int3
es
mov
sarb
jo
push
xlat
adc
rorl
jl
in
mov
xor
shll
sub
push
and
cmp
ror
out
add
or
dec
dec
mov
and
dec
inc
push
sti
loop
jecxz
shrl
pop
sub
mov
std
sahf
mov
fsts
mov
insl
or
xorb
pop
add
mov
or
shlb
fildll
dec
stc
mov
jne
mov
dec
ds
push
mov
out
repz
fiadds
mov
cmpsb
push
cmp
jge
sbb
pop
filds
sub
jg
dec
dec
and
popa
adc
pusha
jl
stos
push
mov
pop
mov
test
cwtl
insb
push
shlb
jecxz
loope
testb
mov
dec
cwtl
and
insb
stos
dec
mov
cmpsl
pop
in
mov
icebp
aad
es
xchg
sbb
fidivrl
jnp
xchg
xor
push
sarl
sub
push
fisubl
imulb
xor
and
fisttpll
std
mov
es
mov
dec
sbb
mov
int3
cwtl
sub
sbb
call
in
cmpsl
aas
stos
push
or
push
and
or
rclb
fsub
or
ficompl
pop
pop
inc
mov
xlat
and
ret
cmpsl
mov
mov
dec
cmpsb
dec
sub
shlb
add
stos
idivb
lods
ret
dec
pop
stc
testl
adc
call
or
movsb
mov
aam
divl
inc
test
arpl
mov
dec
jge
cmpsl
add
ficoml
shl
cltd
jns
jg
xor
jmp
sbb
mov
cmp
pop
in
dec
pop
ficomps
pop
rcrl
das
movsb
subl
jle
das
dec
imul
sub
inc
imul
sahf
sbb
xorb
push
outsb
inc
or
jecxz
xor
lret
dec
mov
jbe
dec
stos
dec
repz
and
enter
aas
int
in
or
mov
push
popf
sbb
cmpb
jae
lcall
fnstsw
es
xchg
repz
clc
sub
push
dec
lahf
mov
in
mov
add
inc
inc
outsl
arpl
jae
inc
inc
imul
je
outsl
outsb
and
jno
jbe
pop
sub
jns
inc
jbe
push
fidivrl
push
mov
in
jnp
cld
loope
sbb
cmp
inc
or
mov
lret
mov
es
xchg
add
int3
jae
in
lcall
dec
cwtl
sub
aad
insl
enter
push
data16
call
jno
scas
aam
sbb
fldl
scas
stos
shll
mov
jo
loope
aad
leave
jb
push
int
mov
lds
outsb
out
addr16
or
pop
jecxz
cli
and
cmc
fwait
pop
lret
jb
in
js
scas
shl
jmp
cmpsl
andl
ss
shrl
and
mov
jb
and
sub
pop
adc
push
jmp
test
mov
cmp
mov
out
and
dec
or
mov
arpl
xchg
in
xor
movsb
sbb
popf
jbe
leave
cmpl
rcr
nop
fisubl
aam
arpl
movsb
scas
lcall
sbb
or
ret
mov
adcl
xchg
push
in
mov
adc
cmovbe
dec
mov
sbbl
sub
pop
out
dec
outsb
inc
dec
nop
iret
movsb
mov
inc
cltd
stos
fdivl
xchg
xor
leave
cmpl
stc
idivb
out
adc
cmp
loopne
cld
push
loopne
jl
adc
mov
out
fcom
popf
popa
mov
inc
xchg
and
jnp
out
adc
popf
movsl
mov
push
mul
mov
sub
clc
int
flds
nop
das
cld
icebp
push
and
xchg
jne
pop
or
ja
adc
je
mov
jmp
jmp
sub
daa
dec
scas
mov
push
nop
sub
gs
stos
and
mov
pop
add
movsl
addb
adc
mov
scas
into
mov
mov
and
xchg
xor
popf
ret
pop
mov
adc
cmp
fdivrs
scas
imul
ss
adc
dec
mov
mov
xor
inc
inc
fisubrl
push
pop
xor
cs
jmp
or
ja
push
outsb
cmpsl
mov
stos
shrb
lcall
add
cmp
leave
fimuls
mov
push
stos
xor
add
in
mov
mov
and
mov
sbb
adc
gs
das
movsl
mov
inc
xchg
fdiv
movsl
nop
outsl
inc
xor
bnd
inc
nop
inc
cmc
data16
xchg
out
scas
mov
mov
ss
push
ja
scas
or
loopne
push
outsb
cltd
add
sub
push
daa
das
jl
roll
or
pop
fwait
sbb
insl
popf
sub
or
dec
in
cmp
mov
shr
pop
icebp
rcrb
fs
and
nop
cs
in
mov
mov
cld
dec
scas
or
cmp
addl
idiv
push
mov
ror
lret
mov
jae
xor
mov
frstor
outsl
pop
sub
sub
mov
out
arpl
outsb
push
xor
pop
fwait
adc
icebp
xchg
int
xor
test
orl
rorl
mov
lahf
das
aad
pop
jae
sub
insb
repnz
in
mov
stc
cmp
push
pushf
lea
jbe
jae
pushf
pushf
add
call
sub
testb
sub
inc
popa
aam
std
pushf
xchg
test
push
in
or
mov
xor
sbb
ja
inc
mov
rcrl
pop
int
sbbl
lcall
push
xchg
push
into
rorl
push
mov
popf
sbb
mov
fwait
jl
sbb
inc
negl
jnp
jo
sub
stos
sub
test
push
pushf
push
pushf
lea
jne
lea
pushf
cwtl
xor
btc
ror
test
xor
mov
cmc
sbb
sar
add
adc
shr
shr
mov
jmp
jb
insb
aaa
xor
bound
add
sbb
pop
cld
out
lods
jo
push
adc
aas
push
adc
xchg
sub
add
inc
rcrl
jmp
test
test
inc
pop
sub
mov
scas
mov
js
push
pop
inc
push
scas
fisubs
loope
push
inc
clc
xchg
test
sti
sbb
or
adc
xchg
addb
mov
adc
iret
in
je
pushf
call
pop
es
pop
orb
push
lods
pop
jg
test
outsl
push
ds
inc
jne
ret
push
push
int
mull
sbb
push
in
mov
repnz
movb
mov
lea
jne
lea
movb
push
call
fcoms
mov
loop
inc
jno
and
imul
lcall
adcb
nop
jl
adc
mov
inc
loop
repz
out
and
pusha
and
sti
aad
nop
sarl
adc
mov
int3
mov
fldcw
nop
cmpsb
adcb
clc
mov
or
pop
stos
jns
out
cltd
or
inc
std
dec
inc
ljmp
es
mov
cmp
adc
sbb
outsb
pop
mov
mov
in
mov
imul
xorb
mov
std
jge
push
add
sbb
cwtl
mov
pop
xchg
fwait
mov
repnz
mov
pop
jg
sub
push
push
stos
mov
cmpsb
insb
jg
cld
pop
aas
ficoml
data16
out
pop
dec
scas
sub
adc
jl
mov
std
ja
mov
out
jle
shrb
pop
cmp
insb
and
jne
adc
jmp
push
lock
cmp
daa
scas
or
mov
arpl
jae
stc
mov
dec
pop
mov
push
test
add
push
mov
cmp
jno
jns
aam
or
stc
cmc
punpckldq
jge
xor
out
xchg
lcall
add
cmp
sbb
sarl
jmp
cmp
pop
mov
xchg
sbb
and
in
pushf
enter
sub
bound
or
in
int
pop
mov
or
add
add
ss
sbb
mov
mov
push
jns
shr
aam
jle
cmp
outsl
jno
cmp
xor
ja
sub
mov
mov
cmp
push
mov
add
inc
mov
cmpsb
mov
scas
aas
adcl
call
sub
in
into
int
lcall
inc
mov
mov
dec
scas
cmpsb
push
lahf
loopne
add
por
jnp
jge
stc
cmp
or
and
in
mov
pushl
xchg
mov
push
xchg
pop
mov
jmp
mov
jmp
push
cmpb
lock
mov
xor
loopne
pushf
or
mov
adc
adc
or
in
lods
push
mov
aad
push
decl
in
sub
sbb
repz
in
xor
mov
ret
setl
push
in
js
xor
and
pop
or
stos
and
and
fsubs
push
sbb
xor
lods
mov
mov
inc
notl
and
fdivrs
and
jns
int
adc
fidivrl
hlt
das
fwait
inc
andl
dec
dec
mov
inc
xor
push
mov
enter
clc
sub
jne
jecxz
jmp
rclb
popf
insl
mov
inc
movsl
xchg
in
mov
cmp
clc
pushf
cmpb
mov
call
pushf
mov
mov
push
pusha
push
lea
jmp
shll
inc
and
fsubp
imul
push
sahf
xor
dec
adc
sbb
cmp
shl
es
dec
adc
mov
xchg
jb
bound
iret
mov
rcrb
mov
es
fdivrp
sub
mov
popf
sub
shl
add
jle
cmp
dec
pop
sub
leave
adc
fisttpl
sub
ja
shrb
jecxz
inc
jecxz
pop
aad
mov
dec
lret
jae
sub
fldl
arpl
lret
clc
roll
xchg
and
icebp
push
mov
in
fildl
add
js
fs
mov
push
and
push
icebp
shll
sub
and
and
push
shll
add
aad
adc
xor
ss
or
imul
fwait
mov
pop
leave
jns
ficompl
loop
icebp
sahf
in
cmp
mov
xor
cwtl
into
call
xchg
push
dec
mov
xchg
pop
test
rcl
cmpsl
scas
aam
cld
outsb
xchg
mov
rclb
lea
lret
test
lock
loope
mov
inc
mov
ja
notl
fmuls
sub
mov
mov
push
lea
jb
call
pop
and
stc
or
or
xchg
push
push
movswl
inc
xor
addr16
sbb
repnz
cli
push
jecxz
xchg
test
rorb
mov
scas
push
pop
mov
mov
xlat
sbb
mov
fwait
sub
lds
sub
jo
test
insl
cmpsl
scas
mov
outsb
enter
adc
or
lret
popa
fwait
shrb
es
lock
push
out
add
lcall
pop
inc
inc
vmaxss
dec
jno
movsl
cmp
bound
rorb
inc
pop
repz
mov
push
xchg
mov
fadds
push
insb
xlat
mov
pop
add
push
sub
sub
and
ret
jnp
mov
rcl
stc
btr
mov
stc
jmp
push
jmp
into
xchg
je
mov
mov
lea
inc
imull
leave
les
rcl
jns
xor
sub
cltd
mov
lcall
loopne
out
mov
sbb
mov
test
dec
pop
in
je
dec
lea
mov
mov
aas
pop
aad
jp
notl
mov
inc
imull
das
add
sub
jl
or
repz
add
jp
sbb
dec
push
xor
shl
mov
add
mov
pop
cmpsl
popa
mov
aam
mov
nop
lret
outsl
ljmp
jmp
je
aaa
xor
bound
add
cwtl
jp
fwait
mov
inc
mov
or
sub
fimull
add
shl
xor
lret
dec
les
mov
repz
mov
dec
rcr
jl
lea
lods
popf
jnp
sbb
xor
gs
or
lods
adc
mov
js
stos
pop
mov
mov
fists
sbbl
mov
and
jmp
xchg
sbb
std
jbe
lcall
inc
mov
hlt
xor
inc
dec
clc
add
aas
arpl
shll
xlat
xchg
cmp
cmc
mov
lcall
dec
mov
push
gs
xchg
pop
daa
push
int3
lock
in
loop
mov
sub
or
outsl
clc
mov
xchg
lds
add
ds
mov
cmc
inc
int
pop
add
ds
hlt
fidivrs
inc
das
test
mov
fcomp
into
inc
inc
sbb
rcll
ret
lds
mov
sbbl
out
in
mov
cmp
xchg
fsubrl
cltd
add
repnz
and
jecxz
leave
jmp
jp
push
jecxz
incb
daa
lds
xlat
int3
imul
pop
push
out
or
in
int3
fs
sbb
les
lahf
pop
jp
popa
aam
adc
repnz
push
inc
icebp
scas
pop
ss
jp
jae
xor
ror
add
leave
lods
leave
mov
add
sti
mov
pop
push
mov
jecxz
sbb
stos
pop
fdivr
adc
scas
pop
sti
imul
xchg
dec
mov
aas
jg
sar
lret
shlb
jo
lock
or
dec
cld
pop
cwtl
cmp
xor
stc
mov
jns
js
and
sbb
cli
test
push
pop
and
ds
cmc
aad
push
xchg
cmpsl
mov
fsts
daa
ret
in
les
cmp
push
xor
stos
mov
cmp
mov
mov
out
or
int3
or
and
mov
stos
in
or
sub
add
add
inc
inc
pusha
mov
jmp
cmp
push
dec
pop
into
lahf
xchg
mov
sbb
arpl
ljmp
push
xor
pop
mov
xor
add
sbb
push
jbe
jnp
adc
cli
adc
aas
dec
js
shl
arpl
sbb
dec
inc
test
cmp
sbb
cwtl
mov
or
jns
push
mov
std
arpl
sub
pop
nop
jo
pop
out
pop
in
mov
clc
jmp
rorl
push
jl
pusha
into
pop
mov
add
pop
dec
loope
orb
in
clc
fldl
mov
mov
pop
xadd
sbb
std
sbb
mov
pop
out
ja
out
and
mull
and
dec
js
mov
push
or
xchg
lret
in
inc
mov
dec
outsb
aaa
pop
mov
shll
cmp
or
and
inc
dec
stos
int3
pop
mov
sti
fsubs
pushf
shrl
das
sub
sub
add
shll
addl
dec
into
sbb
mov
mov
mov
pushf
pushl
pushl
ret
bt
stc
ror
cmp
cmp
stc
bt
neg
mov
call
mov
das
xchg
enter
test
cmp
inc
mov
jge
mulb
fbstp
mov
push
lea
xchg
jno
mov
sbb
mov
insl
push
movsb
test
out
outsl
sub
mov
test
and
and
dec
enter
mov
xor
xchg
jns
adcb
lcall
mov
push
ljmp
mov
mov
add
movsl
test
cs
fistl
mov
sub
aad
xchg
and
das
jo
mov
xchg
aaa
inc
sub
lcall
or
js
mov
mov
filds
mov
fucomp
das
cltd
jg
pop
inc
and
mov
xor
inc
imul
pop
flds
scas
cmp
jmp
mov
shll
push
es
fstpl
add
adc
fcomps
int
cmp
js
adc
call
add
pop
mov
in
mov
cmpsl
stos
sbb
jb
loopne
cmpsl
sbb
clc
inc
in
addr16
js
repz
mov
leave
mov
inc
and
loope
add
cmc
out
sbb
enter
xor
mov
add
shll
clc
insl
mov
push
xchg
and
inc
cld
loop
xor
in
mov
lahf
jne
out
cli
int3
insl
inc
pop
ja
lea
dec
shll
insb
cwtl
pop
sub
sbb
rcrb
mov
xor
adc
xorb
sar
add
arpl
lods
incb
imul
mov
mov
insl
mov
cmp
shll
cltd
rclb
push
in
and
sbb
push
aam
and
dec
and
xchg
lret
cmp
int3
or
add
paddd
shrb
mov
sbb
push
inc
mov
dec
ret
and
sub
nop
nop
jmp
out
icebp
push
ficomps
mov
xor
test
mov
fbld
loop
mov
fsubl
xchg
js
aaa
xor
stc
popa
imull
in
mov
xor
flds
inc
sub
iret
std
test
outsl
scas
dec
lods
xlat
sub
adc
dec
jno
sbb
fildll
insl
pop
repnz
insb
sbb
sbbl
push
adc
lds
jecxz
jbe
jnp
sti
inc
gs
fcom
in
mov
pop
xchg
sarl
shrb
gs
cld
cltd
addb
jp
and
add
pop
fdivrs
popf
in
xor
fldt
inc
mov
aad
rcrl
adc
xchg
or
call
add
push
jl
adc
xor
inc
in
mov
mov
into
cmpsl
stos
scas
adc
inc
and
jno
loopne
push
jmp
xchg
pop
bsf
adc
out
xchg
addr16
nop
int
ljmp
and
sub
dec
mov
int
mov
fimuls
adc
leave
repz
jmp
arpl
and
loope
ficomps
pushf
out
dec
xor
pop
pop
dec
inc
test
ss
xor
sbb
mov
xchg
jne
xor
add
call
or
je
mov
add
add
push
movw
lea
ja
pushf
inc
inc
push
call
mov
add
inc
repnz
mov
es
cmp
ret
push
icebp
mov
xlat
subl
bound
int3
xor
and
dec
cwtl
xchg
mov
pop
test
insl
xchg
clc
xor
jmp
int3
into
adc
fstpl
xor
xchg
xchg
jo
add
mov
dec
push
shlb
mov
push
rolb
hlt
popf
clc
adc
pop
js
mov
enter
cmc
out
imul
daa
adc
mov
mov
in
jno
in
mov
cmp
call
add
hlt
int
lods
mov
jns
insb
flds
mov
pushl
in
das
push
test
push
mov
or
mov
pop
cmpl
je
ror
out
push
dec
xorb
dec
sub
fbld
xor
sub
sub
imull
sub
rorb
cmpsl
sbbl
pusha
dec
pop
mov
sbb
inc
fistps
jae
stos
mov
ds
push
aas
loope
popf
je
or
jno
cli
test
add
incb
push
jmp
sbb
addr16
mov
call
movb
lea
jb
pusha
movw
cmp
push
movb
pusha
lea
jae
pusha
mov
rol
ror
jmp
mov
xchg
lcall
stos
pop
jns
dec
mov
aad
shll
lea
and
jg
pushf
out
sahf
test
fistpl
das
inc
and
pop
fidivrl
jbe
dec
mov
mov
jmp
push
js
jae
lods
xchg
popf
pop
in
sub
and
dec
hlt
mov
iret
addb
stc
push
ss
sti
dec
mov
inc
out
jae
int
pop
in
hlt
lods
and
stos
lret
popl
ret
mov
inc
fmull
scas
sub
inc
les
inc
nop
sbb
sub
xchg
push
push
mov
call
and
fistpl
pop
lds
clc
clc
mov
jg
mov
aas
push
scas
mov
xlat
imul
bound
dec
int3
daa
cmpsl
fists
in
push
xor
mov
sub
adc
aaa
sub
jnp
sub
repnz
pop
adc
mov
mov
es
icebp
and
xchg
or
ror
dec
push
mov
xchg
subb
pop
pop
scas
pop
xor
insl
pop
and
popf
out
ret
clc
into
cld
pop
sbb
fdivrl
or
mov
test
mov
xor
outsb
icebp
and
in
mov
and
ret
bound
cmp
xor
in
sub
nop
mov
sbb
adc
dec
pop
cmpsb
es
xchg
xchg
jge
stos
mov
stc
dec
bound
insb
mov
xor
pop
dec
or
fwait
xchg
int3
shrb
jmp
push
mov
dec
jb
sbb
in
add
jge
mov
sbb
ljmp
fs
push
add
pop
das
mov
je
addr16
int3
mov
jecxz
sub
inc
push
jmp
xor
mov
adcb
iret
and
mov
or
xchg
movsl
cmp
jb
movlps
stos
push
xchg
lret
add
in
xchg
or
inc
pop
lahf
xchg
cltd
xor
cli
pushf
decl
and
mov
shrb
stos
rclb
js
hlt
inc
jae
mov
add
add
push
pop
in
imul
jnp
mov
cli
movsb
repnz
repnz
mov
lret
inc
and
lock
push
cmp
and
scas
push
idivl
cmp
lock
cmp
test
cmp
hlt
test
adc
movl
sub
pusha
test
imul
sub
mov
clc
cmp
bt
test
pushf
movw
mov
pusha
lea
je
stc
test
pusha
clc
add
push
pushf
call
lods
subl
in
movsb
mul
sbb
pop
mov
sbb
cmp
mov
lds
fdivr
inc
mov
sbb
mov
pop
sbb
and
sti
adc
dec
xchg
loopne
in
inc
iret
es
in
in
and
shl
lods
mov
lret
std
cmp
mull
jb
mov
cmpsl
cs
dec
inc
push
pop
in
jmp
ds
loopne
int
nop
shll
sub
xchg
sbb
sub
fisubrl
dec
popf
aas
or
and
dec
add
mov
scas
mov
xchg
and
fistpll
cmp
adc
sbb
into
pop
add
cld
adc
iret
or
rorl
mov
ljmp
or
in
mov
sbb
lods
lea
pop
mov
leave
xchg
cwtl
popl
mov
sbb
cmp
cmp
xchg
inc
fidivrs
in
ds
stos
int
jecxz
es
pop
pushf
aam
stc
in
sbb
mov
sub
or
pop
test
outsl
sbb
movsb
es
push
leave
push
shlb
cld
and
in
mov
lea
call
out
mov
pushf
and
insb
jecxz
sarl
or
push
pop
xchg
data16
les
mov
ds
push
mov
xor
daa
xor
sbb
or
and
sub
jmp
push
mov
mov
pop
inc
mov
push
push
fs
xchg
lods
pop
sbb
in
fidivrl
lcall
lds
push
sbb
popf
test
dec
inc
and
push
pushf
cmc
add
ljmp
lods
leave
cmp
int3
fiadds
mov
inc
or
xchg
or
push
std
jns
sbb
pusha
ret
xor
add
cmp
in
mov
push
xor
jno
in
sub
in
pop
xchg
cmp
jl
pop
jecxz
push
stos
push
jno
push
imul
test
mov
adc
inc
clc
pop
js
mov
inc
push
sbb
dec
daa
test
or
jge
cmp
jmp
xor
adc
roll
and
lret
mov
mov
mov
test
jp
inc
das
fidivrl
cmpb
outsl
cwtl
iret
in
push
mov
jnp
mov
sti
xor
xchg
dec
nop
pop
pxor
push
cs
dec
sbb
cmpsb
add
cmpsb
dec
xchg
inc
sub
inc
add
cli
sub
pop
in
sub
mov
movsb
in
mov
sub
je
lods
iret
hlt
arpl
imul
mov
mov
inc
pop
ret
imul
insb
jno
loop
jno
sbb
out
test
sub
rol
pop
rcrb
inc
movsb
insl
or
mov
sbb
adc
movsl
inc
lock
cltd
shrl
push
ficoms
jmp
sbb
sub
outsb
sub
or
lahf
inc
movsb
pop
adc
movsb
sub
xchg
sub
pusha
pusha
test
fstl
dec
std
out
push
data16
jge
lds
or
negb
sbb
add
gs
or
ret
xchg
add
push
scas
out
pop
jmp
ret
cmp
jmp
movsl
testl
lcall
cmp
lock
dec
mov
mov
test
bt
cmc
repnz
call
mov
lods
pusha
not
cmc
mov
rol
jmp
push
inc
lret
lea
add
cmp
inc
mov
push
or
jno
mov
cltd
cld
cmp
sti
stos
imul
inc
jge
gs
arpl
das
inc
inc
xchg
and
mov
sub
and
vpaddw
je
mov
sahf
sub
adc
adc
push
sbb
adc
inc
lret
rcrb
outsw
out
jo
cmpsl
aam
stc
mov
or
lock
repz
scas
movsl
adc
adc
ficoml
lret
cmp
loope
mov
pop
sub
lret
xchg
cmp
xchg
jne
pop
loopne
mov
push
in
mov
hlt
mov
pop
in
mov
cmc
fsubs
adc
mov
and
adc
pop
imul
lret
sbb
inc
ret
pusha
pop
cmpsl
mov
fmuls
rcrb
fisubrl
lret
dec
jecxz
jl
daa
ds
sbb
sti
cmp
pop
or
sbb
sarl
add
loopne,pt
fcomps
idivl
mov
sbbb
inc
jp
hlt
or
dec
sub
cli
xor
sbb
adc
scas
add
lret
lcall
xor
in
sub
and
or
bnd
xor
bound
dec
das
or
mov
mov
pop
push
and
jmp
jmp
jge
mov
cmpsl
fldt
dec
leave
cmp
cwtl
imul
jo
dec
idivl
outsb
rorb
xor
in
shll
out
rolb
cmp
cmp
frstor
fsts
scas
add
push
gs
xchg
add
jne
lret
xor
mov
dec
xorb
and
and
dec
adc
adc
iret
adc
test
add
dec
outsb
cmpsb
sbb
cltd
inc
push
cmp
mov
push
mov
incl
inc
cmc
sarl
xchg
test
mov
das
out
lret
pop
addr16
mov
bt
cmpb
push
pushl
lea
jne
bswap
and
bsf
sub
btr
adc
mov
jmp
movl
movb
pushf
call
lea
jns
pushf
dec
pushf
pushf
push
pusha
not
mov
push
dec
cmc
jmp
aas
pop
in
aam
add
js
ds
push
sti
jp
outsl
xchg
adc
push
xchg
scas
or
ret
in
ljmp
aam
cmp
arpl
or
cwtl
daa
lock
sub
lret
andl
outsl
push
cltd
shll
pushf
into
aam
lret
iret
out
cmp
mov
scas
cmp
mov
std
mov
sbbl
aaa
xchg
dec
int3
cmp
popa
andl
xor
rclb
sub
mov
fiadds
add
insl
lret
jl
lds
and
fstl
movsl
cwtl
inc
lahf
xor
aam
dec
test
pop
test
setp
loop
pop
pop
or
je
in
and
inc
mov
cmpsb
ss
cmp
xlat
test
in
repnz
xor
in
mov
dec
dec
xchg
in
push
inc
filds
inc
mov
mov
push
subb
push
mov
out
es
repnz
repz
sbbl
sarl
lods
cli
bound
insb
jne
and
sbb
push
fwait
mov
aam
scas
mov
ja
sbb
dec
sbb
push
stos
fsubrp
or
pushf
out
mov
ds
aaa
dec
inc
stc
add
xor
ljmp
pusha
lea
aaa
mov
mov
mov
call
pushf
dec
movb
test
jmp
cs
push
imul
sub
mov
arpl
ss
lea
ffreep
or
in
pshufw
popa
xor
lahf
fistpll
xchg
idiv
lods
test
stos
and
inc
dec
aam
cli
dec
pop
test
sub
stos
push
or
mov
push
bound
mov
jbe
cmpsb
lcall
mov
dec
fistpll
cmp
and
xchg
rcrl
mov
mov
pop
dec
jg
xchg
mov
out
and
mov
inc
loop
adc
push
mov
push
loope
daa
in
add
mov
pop
add
dec
mov
sti
fiadds
fwait
cmp
dec
or
aas
pop
out
mov
imul
fs
ljmp
out
push
fcmove
insb
or
in
ss
jmp
ss
sub
daa
sbb
dec
jmp
aad
mov
sub
mov
jmp
lea
ja
pushf
pushl
lea
jb
stc
cmp
stc
pusha
cmpb
jmp
inc
cmp
jp
adc
fcoms
or
pop
cltd
inc
mov
pop
lods
scas
lahf
es
incl
lea
lret
loop
adc
mov
xlat
jne
out
xchg
dec
add
hlt
stos
shll
enter
push
lods
mov
test
leave
int3
jbe
nop
cmp
or
mov
and
jns
shl
jno
jb
sbb
xchg
xchg
movsl
scas
xchg
adc
or
ds
dec
testb
or
cli
dec
pushf
and
in
mov
pushf
movl
movb
jmp
test
pushf
mov
shld
btc
shr
stc
mov
bt
stc
test
test
jmp
xchg
rcr
jle
cmc
sub
test
jmp
ss
mov
idivl
rorb
stos
mov
outsb
dec
test
aam
push
jb
jp
mov
add
fildll
mov
jb
sti
out
add
dec
xchg
movsl
jno
outsb
bound
xchg
push
xor
rcrl
mov
and
xchg
mov
jge
shll
loope
pop
inc
insb
outsl
popa
cmp
inc
stc
cmp
orl
es
insl
mov
dec
test
test
in
loopne
aas
or
lea
in
mov
aam
jae
les
or
pop
sbb
push
test
mov
sub
mov
sbb
push
jns
and
xchg
jmp
mov
or
ja
adc
mov
das
pop
pop
xor
push
das
mov
xor
xchg
jbe
ret
dec
jne
sarl
fstpt
aaa
mov
add
or
mov
xor
jb
lcall
pop
push
mov
xlat
fstpl
lods
cmp
inc
inc
sti
stc
out
xchg
lods
push
dec
cmp
insb
pop
cmp
cmp
xchg
and
sbbb
ljmp
sub
mov
add
notb
xor
cmp
daa
sbb
sti
cmp
adc
sbb
insb
mov
in
mov
shrb
loop
lds
hlt
fcompl
ficomps
into
std
pop
cmp
aam
in
cmpsb
or
jle
das
mov
push
inc
mov
loope
lods
dec
nop
out
lds
cmpsl
test
in
insl
xchg
rorb
push
jo
test
xchg
mov
xor
cmp
test
sbb
ret
sub
out
sbb
sahf
sub
and
jl
pop
xor
cli
in
or
jb
aad
je
fsubs
flds
push
mov
sti
cmpsb
inc
sbb
dec
sub
add
jecxz
stos
lds
push
adc
ror
jns
dec
xchg
lcall
movsb
lret
jae
ret
fwait
lods
xor
fcoms
xlat
push
jo
mov
jp
jne
pop
test
rorb
es
push
mov
hlt
cmp
dec
jecxz
ds
fldlg2
sti
and
pop
out
or
aad
push
in
jo
rcrl
loopne
ds
stos
or
sub
xor
xchg
mov
mov
inc
mov
dec
push
jmp
jae
fisubs
rol
cmp
push
loop
ja
mov
push
add
in
mov
pusha
or
pop
lea
mov
and
inc
insl
fdivp
adc
jne
pop
inc
jle
mov
aaa
sub
arpl
aam
cmpl
mov
sub
sub
adc
call
and
push
mov
sbb
dec
fst
dec
dec
rolb
fsts
dec
mov
cmp
imul
xlat
aaa
mov
xor
imul
xor
xchg
push
imul
and
jne
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
push
dec
test
jge
dec
mov
push
mov
and
sub
jle,pn
mull
dec
mov
addr16
std
lods
ret
shrl
cwtl
mov
rorl
push
es
out
cmp
cmpsb
test
add
pop
adc
repnz
out
jno
shr
test
mov
pop
inc
outsb
add
fidivrl
pop
jecxz
mov
js
mov
and
dec
cmp
mov
jmp
push
lret
iret
sub
jae
cmp
in
lret
mov
insb
mov
pop
in
int
sbb
jge
lcall
or
pop
adcb
xchg
mov
push
in
in
mov
rcrb
xorb
aad
xchg
inc
mov
outsl
mov
dec
mov
fidivrl
inc
subb
mov
inc
icebp
fsub
arpl
mov
mov
nop
and
outsl
xchg
les
pop
jbe
and
lcall
enter
popf
stc
mull
ljmp
fdivrs
cmp
push
je
mov
daa
insl
rolb
xchg
subl
cmp
dec
jns
cmp
xchg
std
inc
xor
push
and
xchg
push
int3
sub
mov
and
xor
pop
in
mov
pusha
call
pop
mov
pushf
pushl
ret
mov
movl
push
movl
pushf
lea
jmp
cmpsl
rcrb
cld
sub
cmp
and
filds
jno
adc
cli
fwait
mov
pop
cltd
add
sbb
std
icebp
cmp
aam
sub
cltd
sti
and
sub
pop
add
mov
pop
mov
jne
scas
push
dec
inc
mov
xor
inc
loop
jge
shr
adc
ljmp
push
mov
xchg
les
fs
fwait
push
fmuls
inc
inc
out
cld
aas
mov
insl
test
sarb
push
fmul
pop
dec
leave
lods
mov
pop
hlt
inc
mov
divb
jl
add
inc
cmpb
lea
jb
bt
pushf
cmp
cmp
movb
pushf
lea
jae
push
movl
lea
jmp
cmpl
adcb
jecxz
aas
stos
or
cmpsl
jae
mov
mov
pop
movsl
mov
sub
add
test
inc
sub
xchg
xchg
rolb
enter
xor
mov
aad
mov
ljmp
insl
movsb
lea
rol
pop
xchg
stos
pop
push
cmp
int3
stos
xor
push
or
mov
popf
ds
or
xor
stos
pop
repnz
cmc
cmc
sahf
xchg
xchg
adc
aam
inc
adc
out
mov
in
mov
shl
data16
cltd
int3
movsl
push
inc
mulps
pop
int
cld
lock
addr16
sub
leave
je
jge
mov
je
out
fnstcw
sub
bnd
jb
push
aad
adcl
xchg
ret
xor
xchg
int
mov
jg
jno
pop
sarb
mov
xchg
xor
mov
dec
pushf
vunpcklps
std
sbb
cmp
cmpsl
inc
scas
adcb
test
cmpxchg
pushf
rcrb
jne
jl
adcl
hlt
lea
xchg
int
push
mov
mov
movsb
dec
mov
mov
adc
push
call
in
mov
shl
daa
sbb
jge
cs
jle
das
lea
cltd
adc
cmpsl
cli
or
sbb
and
sbb
fs
and
jne
xchg
fisubrs
nop
fcompl
push
and
add
fidivrs
sub
scas
xchg
sbb
das
test
sbb
and
clc
cltd
les
mov
lcall
inc
jo
jne
sub
cmpsb
mov
sub
movl
sub
mov
sbb
ja
mov
add
je
jns
icebp
js
pop
push
push
jo
dec
inc
fildll
aaa
popa
pop
pop
inc
mov
leave
jg
pcmpgtb
in
test
jo
sahf
fsubr
lods
bound
and
lret
test
insb
jle
imul
stc
push
cmp
repz
inc
in
in
shlb
test
movntq
pop
adc
add
jae
jae
insl
arpl
jmp
mov
push
xchg
xor
and
mov
add
iretw
outsb
mov
cmc
and
in
clc
ror
ss
pop
icebp
inc
push
fwait
data16
shrb
je
dec
or
inc
mov
push
fnstcw
mov
fnsave
mov
lcall
mov
jno
mov
push
pop
imul
mov
pop
mov
es
idivl
shll
out
in
cli
lods
aas
loop
jnp
dec
mov
jmp
inc
popf
sarl
push
filds
push
sahf
xor
jle
inc
mov
mov
sbb
pusha
jecxz
out
adcl
ljmp
out
jb
divb
je
in
push
sub
add
cmp
repz
push
mov
jns
sub
mov
xchg
aam
adc
pop
movsl
push
pushf
mov
xor
test
test
xchg
icebp
popl
out
push
inc
cmp
jno
ljmp
xor
cmp
inc
scas
mov
sbbl
cmp
jnp
fstp
cmp
jae
pop
out
push
inc
js
xorb
test
and
adc
push
xor
sbbl
es
arpl
insb
mov
push
sub
loope
inc
dec
add
out
scas
jecxz
dec
icebp
push
negb
adc
jge
dec
dec
cs
ja
sub
sbb
aaa
jmp
sbb
in
mov
push
lea
jne
test
clc
cmp
stc
sub
pusha
mov
movw
lea
jmp
lret
and
jae
in
leave
add
inc
mov
inc
mov
pop
daa
ljmp
push
jno
jmp
add
je
stos
inc
int
jl
mov
xchg
out
xchg
outsb
xchg
mov
inc
stos
inc
xchg
mov
or
inc
add
imul
addr16
sbb
scas
dec
inc
xor
repnz
mov
pop
xchg
add
dec
lods
sbb
in
mov
cltd
dec
dec
mov
pusha
out
pop
sub
mov
mov
lock
adc
call
push
dec
dec
je
hlt
cmp
ja
mov
inc
stos
scas
icebp
arpl
sbb
pop
out
repz
mov
orl
jecxz
xorl
repnz
cmp
jp
shll
mov
mov
fs
scas
loopne
add
inc
loope
es
push
add
and
sbb
icebp
loopne
hlt
mov
bound
xor
dec
icebp
inc
xorb
or
pop
out
sub
add
daa
popa
or
mov
arpl
mov
lsl
add
pop
negb
sub
in
and
sub
jle
dec
jge
and
xor
rcr
sbb
or
test
scas
add
cmp
mov
cltd
dec
push
lret
daa
cmp
js
xor
mov
add
aad
jp
in
add
mull
loopne
cmpb
das
mov
add
fstpt
lock
dec
imul
test
xchg
loop
loopne
sbb
inc
push
repnz
add
sub
cmp
pop
je
addl
std
ja
incb
cmp
hlt
cwtl
iretw
pop
pushf
sbb
sub
fwait
adc
repz
jle
ss
and
cmp
jp
inc
inc
arpl
test
or
or
lret
orl
mov
inc
jl
add
mov
shrl
jne
xor
mov
mov
addl
test
add
test
or
adc
je
clc
ret
loopne
bound
xor
inc
add
inc
pushl
add
mov
or
push
mov
dec
add
inc
add
lcall
jae
and
xorl
add
xchg
add
xor
or
jp
xorl
xchg
nop
popa
sarb
mov
loopne
incl
mov
inc
leave
dec
sbb
and
mov
jae
cmp
and
mov
push
into
lds
fcoml
jp
push
aas
add
mov
stos
adc
test
fcompl
rcll
adc
pop
sbbb
fmuls
add
movsl
inc
and
push
and
fiadds
ret
mov
mov
aad
cmp
arpl
mov
inc
xor
inc
cmp
add
lds
pusha
std
mov
jb
add
lea
push
pop
inc
mov
pop
or
aaa
sbb
ja
pop
and
rcll
add
and
shll
mov
sub
lret
cmp
test
sti
orb
inc
or
je
add
dec
xlat
xchg
inc
testl
inc
test
loopne
shll
rolb
adc
cmp
adc
std
popf
testl
add
cmc
mov
adc
rclb
sahf
inc
adc
xchg
movsl
mov
int
or
xchg
add
das
fcom
call
and
scas
popf
sub
insl
sbb
add
pop
addl
lods
ror
lds
mov
jg
arpl
pop
mov
sahf
incb
dec
pop
add
cmp
push
icebp
or
sahf
sbb
mov
dec
leave
or
lea
add
jle
aam
dec
xchg
adc
mov
test
fildl
aas
negl
outsl
add
adc
rclb
aaa
les
pusha
fs
sub
cmpsb
std
cli
add
hlt
idivb
int3
lods
mov
movsb
andb
loope
inc
add
inc
and
jle
movsb
addl
pop
sbbl
cmp
lds
inc
jp
push
lock
xchg
push
pusha
or
mov
xor
jp
add
inc
add
push
pop
andl
popa
xor
inc
add
pushf
sub
push
loop
aad
ret
add
and
xchg
sbb
sbb
jb
jmp
inc
int
fstps
add
insb
leave
out
es
movsb
insl
adc
pop
scas
pop
daa
insb
xor
arpl
dec
rcrl
and
jo
sbb
and
or
pop
gs
jne
inc
dec
xchg
ret
mov
adc
jno
andl
leave
add
sbb
push
iret
es
xor
ljmp
roll
mov
icebp
xchg
arpl
in
inc
dec
mov
mov
jo
pushf
adc
ret
outsl
mov
cmp
add
mov
pop
ret
popf
and
in
mov
daa
mov
cwtl
out
add
bound
test
shlb
fdivrs
cmp
adc
jl
jo
test
add
push
cli
sub
xchg
jae
mov
dec
imul
shrl
cs
dec
andb
sbb
sarb
inc
dec
or
test
adc
sub
dec
pop
and
sbb
jp
jo
loope
adc
add
or
mov
inc
fbstp
in
cld
add
cmp
jo
pushf
cmp
leave
xchg
icebp
xchg
xor
rolb
adc
sub
sbb
daa
and
rcr
cmpsl
add
ss
stc
fnstsw
jge
mov
subl
dec
jo
sbb
test
mov
pop
sub
dec
leave
mov
mov
popa
rorb
push
repz
clc
decb
jecxz
sbb
nop
mov
pop
add
andb
dec
push
dec
shrb
lea
sub
jo
dec
xchg
es
adc
mov
mov
loop
mov
inc
aas
dec
lea
and
sbb
movb
pushw
test
repz
mov
int3
or
lds
lea
add
outsl
sbb
push
xchg
mov
and
sub
rcl
repnz
xchg
arpl
adc
sbb
inc
ja
shlb
sub
mov
sahf
inc
test
mov
mov
les
xlat
xor
insb
in
sub
sbb
adc
test
inc
xchg
push
inc
test
lret
cmp
sbb
incl
cmp
bound
std
add
out
dec
inc
adc
mov
xchg
shll
jle
adc
addr16
adc
or
xchg
roll
xchg
sbb
sbb
or
jl
pop
jge
std
pop
test
dec
rcl
mov
xchg
mov
mov
or
fs
mov
daa
and
insl
adc
adc
push
xorl
cltd
cmp
out
ret
fcmove
and
add
std
dec
xor
fmuls
mov
sbb
xchg
stc
adcl
aam
mov
sub
add
adc
or
das
cmpsb
rclb
fnstsw
add
nop
iret
cmp
movsb
jge
mov
xor
bound
js
inc
ret
mov
inc
icebp
out
pusha
mov
movsl
lods
jp
xchg
ret
int3
sbb
insl
xor
outsl
in
dec
dec
cmpb
pop
gs
ret
loope
out
scas
es
mov
push
les
lcall
cmp
xor
cs
pop
sub
testl
roll
nop
jp
sub
add
stos
dec
or
pushf
test
mov
mov
xchg
fcmovnu
or
mov
pop
push
sbbb
and
inc
into
out
imul
xor
or
daa
sub
idivl
mov
jb
test
add
mov
imul
aaa
inc
sub
or
arpl
inc
lahf
or
inc
lret
in
push
push
movsb
icebp
cmp
je
lods
clc
movsl
xchg
adc
pop
call
add
stc
xor
lock
add
mov
shrl
nop
jg
adc
add
jbe
xor
mov
or
cmp
and
or
adcb
pop
fxch
mov
sub
add
add
pop
lcall
or
and
mov
test
rolb
cmp
outsl
aam
and
add
inc
inc
adc
jo
test
jle
inc
std
outsb
stos
sub
and
add
in
dec
fwait
adc
loop
inc
hlt
mov
es
popa
stc
adc
jb
mov
pop
cmp
inc
or
adcl
incl
cmp
push
orl
lret
xchg
cmp
aad
xor
repnz
mov
in
and
sbb
jo
shrl
push
sbb
lods
mov
stos
and
insb
add
outsb
jmp
shll
ljmp
popf
and
cmp
or
bound
jnp
cmpsl
push
push
clc
ss
add
daa
test
sbb
xchg
pop
imul
or
pushf
divb
ljmp
add
out
jge
lock
bound
sbb
pop
push
or
push
mov
mov
or
mov
in
add
sbb
mov
jo
push
nop
jle
mov
fisttps
and
xchg
sub
sub
in
inc
xor
test
pop
syscall
inc
add
mov
add
xchg
adc
jecxz
mov
mov
mov
sub
outsl
orb
out
xor
jecxz
push
push
mov
lock
mov
repz
popa
add
xchg
xor
sbb
pop
mov
mov
add
aad
aaa
add
pop
je
int3
xor
in
fs
cmp
mov
cmp
xor
mov
and
lret
iret
hlt
cli
sbb
cmc
ficoms
add
xchg
out
dec
rol
and
pusha
jp
std
add
jmp
xlat
push
mov
jmp
lods
xchg
sub
pop
and
rorb
mov
and
idivb
or
ret
add
lret
es
loop
add
dec
or
outsb
jae
pop
jge
in
into
push
stos
cmp
or
add
push
int
add
cmp
ss
xor
ljmp
pop
sbb
add
es
xchg
add
mov
xorl
sub
lea
xchg
push
stos
out
pop
mov
cli
arpl
aaa
push
repz
rclb
sub
add
add
in
jg
shll
or
xor
jns
mov
push
xadd
add
loop
ds
pop
and
inc
div
pop
arpl
cmp
push
add
sbb
out
popa
xor
xor
pusha
filds
pushl
sub
mov
sti
mov
dec
pusha
cmp
adcl
cmp
stos
push
js
mov
inc
add
outsl
sbb
cmpsb
test
cli
adc
mov
pop
cmpb
push
mov
or
jmp
inc
inc
jbe
ficoms
add
xchg
lds
dec
stos
aaa
lahf
push
xor
dec
add
shrl
sub
or
das
popf
add
adc
mov
xor
xor
sub
insb
sti
or
out
lds
icebp
cmp
xchg
sar
or
std
pop
clc
push
cs
cmp
add
addr16
cmpsb
cmp
jmp
mov
lea
xchg
popa
cld
add
fadds
or
mov
lahf
or
push
mov
cmp
xchg
mov
loop
pop
jp
outsl
xorl
mov
shrl
pop
ffree
into
mov
push
lea
bound
imul
test
divb
iret
xor
push
add
cmp
jb
adc
lahf
ljmp
inc
sub
popa
push
adc
inc
enter
cmp
movsb
pop
outsl
sub
push
ret
ffree
test
xor
mov
cmp
cmc
add
ja
sub
push
add
or
add
jmp
or
insb
daa
mov
dec
lcall
xchg
xchg
int3
inc
dec
or
add
xor
outsb
pusha
mov
or
xor
scas
cmp
and
outsb
fisttpl
jp
xchg
cltd
add
out
xor
push
jo
dec
xchg
mov
ret
cmpsl
xor
fwait
pop
mov
mov
adc
lea
cmp
pop
sbb
cld
inc
mov
stos
pop
xchg
pop
movl
pusha
cmpl
mov
mov
shlb
nop
imul
mov
push
add
lcall
ja
bound
cmpsl
inc
inc
xchg
imulb
mull
imul
fisttps
push
loope
cmp
add
les
dec
push
adc
ret
cmpsl
shlb
int3
jl
xchg
std
mov
or
daa
ss
or
inc
pushw
lret
inc
fiadds
sti
and
and
xchg
cs
or
movsl
in
rorb
mov
mov
pop
mov
sbb
gs
movsb
jno
data16
add
push
bound
in
inc
inc
pop
and
and
mov
loopne
jns
inc
jb
add
repz
xchg
jg
arpl
jae
add
pusha
out
adc
lea
cmp
inc
and
out
mov
mov
ds
inc
dec
daa
dec
fistps
ret
shl
add
call
movb
faddl
scas
or
cld
add
mov
inc
add
orl
test
sbb
xor
lea
jbe
mov
pusha
inc
lahf
incb
push
jmp
stc
add
pop
loop
rcrl
ficoms
shrb
loop
and
jns
or
or
out
pop
jl
jnp
cmpl
lods
rolb
pop
jp
xchg
repz
xor
sbb
leave
ret
sbb
ja
inc
out
sub
in
mov
cmp
pop
aam
and
adc
lret
xor
ret
mov
add
pop
jo
loope
mov
inc
stos
xchg
std
lret
or
cs
imul
sbb
mov
sub
jb
pusha
cmp
dec
xor
and
pop
subb
cmpsl
nop
hlt
jbe
insb
stos
paddq
popa
mov
pop
cwtl
add
xchg
sbb
push
call
xor
loopne
hlt
je
andl
lods
pop
push
add
cmpl
xor
shlb
jle
fdivp
aam
inc
loop
and
sti
and
mov
or
add
insl
and
push
add
jno
sbb
xchg
or
ret
inc
mov
and
daa
xlat
js
bound
lods
fcomip
jecxz
push
jp
adc
scas
or
xchg
addl
roll
imul
out
dec
test
test
xorb
loope
in
or
clc
add
cs
repz
mov
xlat
push
out
lcall
push
adc
inc
inc
push
mov
jp
jnp
ss
sbb
int3
aas
push
add
sub
push
insl
es
cmpl
pusha
or
and
jp
jb
jecxz
sub
mov
push
cmp
in
ret
daa
sbb
mov
sbb
out
stos
pop
nop
pop
add
sbbb
mov
mov
xor
sub
inc
out
cmp
mov
xor
test
test
iret
nop
xlat
lds
pop
add
xchg
shlb
inc
add
sbb
add
sbb
scas
push
mov
mov
inc
sub
push
scas
mov
ja
aam
push
std
insb
out
jae
sbb
inc
cmp
roll
sbb
xor
pusha
loop
aam
and
and
subb
jp
dec
add
loop
insb
ret
lcall
sbb
inc
cmp
push
xchg
adc
adc
cltd
stc
scas
cmpsb
and
clc
add
xchg
lods
dec
movsb
mov
pop
repz
sub
xchg
xor
cmp
je
mov
ljmp
push
sti
sub
ss
cmp
adc
notl
daa
or
jo
out
xchg
pop
pusha
pop
mov
daa
push
test
mov
mov
xchg
inc
mov
mov
add
push
into
and
je
xchg
mov
unpcklps
pop
mov
inc
xor
pop
ret
mov
loope
sbbb
aad
sbbb
adc
push
imul
and
pop
adc
sbb
add
pop
adc
xchg
aam
mov
rolb
mov
sbb
pop
mov
aam
rclb
jp
mov
pop
inc
dec
in
sbb
mov
cmp
stos
xchg
xor
pop
sub
test
cmp
mov
mov
rcll
lods
jae
add
jp
pushf
sub
sahf
sbb
mov
xor
dec
adc
add
inc
cmp
outsl
pusha
pop
xchg
cmp
jg
xor
push
movsb
adc
xchg
mov
adc
or
popa
adc
inc
or
int
ret
loopne
jge
adc
ud0
stc
sbb
jp
dec
sbbb
je
push
mov
daa
cwtl
shlb
and
xchg
pushf
insb
cs
and
in
adc
sbb
ljmp
push
mov
mov
out
inc
xchg
rcl
arpl
push
and
add
add
in
aas
mov
test
jp
ljmp
xchg
add
stos
push
movsl
into
sbb
cmp
lret
std
xor
pop
add
mov
dec
filds
clc
or
mov
jecxz
add
idivb
dec
add
adc
add
lret
lock
sti
std
add
rorl
loopne
lds
clc
mov
and
or
mov
or
adc
add
cmp
add
stc
add
lcall
add
and
loopne
add
clc
or
inc
int3
pop
xchg
add
mov
enter
jl
bound
mov
xlat
popf
jmp
imul
pop
fidivrl
nop
sub
movsl
add
xor
js
data16
add
outsl
sbb
repz
repnz
in
lahf
ret
push
pop
jg
and
inc
adc
add
xchg
mov
cmp
stc
or
lods
adc
inc
nop
rcr
cmp
int
pop
lea
xor
mov
imul
sub
sahf
mov
and
int3
iret
cwtl
cmp
sub
outsb
mov
and
mov
add
adc
dec
fmul
inc
movsb
push
xor
mov
xor
push
push
mov
mov
inc
cmp
leave
xchg
or
xlat
jle
orl
in
arpl
add
pop
shl
inc
dec
out
xor
or
mov
imul
mov
add
mov
push
rdtsc
shlb
and
add
add
push
mov
lods
mov
or
xor
push
fwait
jmp
add
push
push
negl
outsb
popa
add
les
mov
rcrl
aad
rclb
imul
iretw
sbb
inc
xchg
fstps
jbe
testb
add
xchg
out
add
mov
stos
fs
add
ss
inc
pop
pop
fldenv
sbb
or
rorb
xor
xchg
sbb
pop
repz
mov
inc
inc
sbb
arpl
and
xor
call
leave
roll
ret
jmp
xor
stos
sub
or
and
push
idiv
xor
rcll
mov
cmp
mov
test
mov
out
sarb
ss
lea
cmc
xchg
inc
shlb
sbb
aas
cmp
int3
xor
test
mov
add
pop
cmp
adc
cmp
rcll
jmp
inc
inc
xorl
std
push
inc
fildll
idivb
cwtl
push
sarl
adc
daa
xor
leave
jmp
fcmovu
mov
ja
dec
sbbl
xchg
xor
ret
repz
ret
sbb
adc
add
jae
lods
sbb
bound
or
mov
xorb
sar
cmp
inc
shlb
dec
jle
int3
add
repnz
fidivrs
and
nop
pop
out
xorb
sbb
dec
lock
aad
add
es
cmpsb
int
enter
add
dec
ret
nop
inc
sbb
jb
hlt
push
add
in
sub
es
ja
xor
push
pop
imul
cmp
mov
sbb
ds
jge
sbb
dec
xlat
mov
add
lcall
add
ss
lea
add
xor
sub
into
mov
xor
cmpsl
ror
bound
mov
and
dec
add
lock
adc
jmp
sub
xchg
call
insb
lods
push
cli
jp
aas
add
sub
inc
lret
mov
mov
mov
xchg
loop
and
enter
inc
sbb
add
stc
and
shrb
push
xor
mov
pop
mov
xor
xor
pop
xchg
ret
movsl
jae
dec
sbb
lret
add
cwtl
cltd
lds
cmpsl
jp
fwait
jns
fucomp
adc
insl
add
pop
sbb
cmp
fld
into
lock
imulb
xor
sbb
add
and
sarb
icebp
and
push
adc
movsb
sub
jle
jecxz
frstor
stos
in
neg
add
mov
flds
jns
outsl
adc
sbb
mov
lds
lret
xlat
add
daa
mov
inc
cmp
inc
add
push
pop
mov
in
dec
add
cmc
popf
xchg
ret
push
xor
mov
fistps
xchg
orl
test
enter
push
cmp
in
jbe
jp
out
xor
xchg
sbb
aad
sub
rol
xor
mov
sbb
mov
flds
push
inc
jle
imulb
dec
lcall
jecxz
add
sbb
mov
orb
cwtl
call
xor
shlb
ds
lea
sub
sbb
jg
sahf
hlt
fstpl
xchg
in
movsb
inc
jmp
push
pop
cmp
add
icebp
adc
aam
mov
flds
mov
loopne
aad
mov
sub
aas
or
xchg
push
fcoms
pop
sbb
pop
and
outsb
dec
add
jns
add
mov
xorb
data16
xor
mov
test
lods
mov
lcall
ljmp
sub
dec
or
fidivrs
cmp
add
addl
push
addr16
cmp
add
ljmp
jge
arpl
add
sbb
dec
add
or
add
test
aaa
add
test
sub
adc
jmp
add
add
jecxz
sbb
or
inc
sub
call
or
add
lret
mov
pop
out
jp
jmp
rol
xor
sub
cmp
push
add
mov
add
fbstp
add
inc
mov
jb
shrb
cmp
rcl
repnz
push
out
cmp
movl
mov
cmp
outsb
pop
inc
fbld
jns
add
mov
add
cmp
add
lods
push
pop
push
pop
jbe
subb
adc
int3
lods
xchg
and
pop
clc
aaa
iret
mov
imul
es
or
mov
mov
jbe
push
xchg
dec
adc
aaa
add
lahf
fs
adc
pop
pusha
add
jbe
sbb
cmpsl
popf
sub
pushf
push
add
in
loop
mov
cmp
loope
mov
dec
fadd
pop
in
scas
sub
push
pop
outsb
sub
aas
inc
sbb
xchg
movsl
rorb
popa
cltd
mov
xor
inc
repnz
aaa
cmpsb
sub
lock
ret
ljmp
push
dec
dec
ret
add
jno
pop
sbb
cli
lods
add
xchg
push
sub
inc
mov
loope
xor
mov
add
xchg
insl
pop
add
jno
jge
inc
or
push
cs
testl
in
and
inc
xor
mov
test
xor
mov
dec
fadd
cmp
sbb
dec
sarl
mov
movsb
jp
sub
dec
push
add
out
add
xchg
cmp
add
cmp
sbb
out
pop
and
xchg
ret
push
sti
fcom
cmp
add
dec
repz
std
daa
pop
add
adc
mov
jg
test
add
cld
xor
jle
xchg
popf
inc
icebp
lret
push
sbb
mov
add
addr16
mov
mov
mov
stc
cmp
inc
jge
fiadds
jae
icebp
mov
inc
jno
insl
test
add
xchg
verw
dec
shrl
jg
roll
repnz
lods
das
xchg
and
add
or
sbb
and
lret
les
cmp
add
adc
xchg
xor
test
add
or
dec
xor
outsl
fldl
push
jp
pop
cmpb
bound
push
insb
imul
test
mov
cmpsl
fs
inc
push
rcl
shlb
adc
out
or
les
dec
jo
pop
mov
sbb
mov
sbb
es
jae
arpl
jns
fdivl
jp
lds
push
pusha
pop
mov
or
fwait
lea
mov
dec
cmp
fnstsw
jmp
adc
xchg
push
jo
or
aad
outsl
push
jne
jmp
dec
mov
push
mov
fisubrl
cmp
fiadds
lods
das
pusha
or
loope
bound
adc
loop
lea
repnz
add
jp
sub
dec
mov
mov
adc
loope
jp
clc
in
xchg
jo
test
push
mov
inc
dec
adc
loop
add
nop
call
pop
adc
sbb
subb
push
es
dec
test
test
lret
aad
xchg
cmp
cmpsb
sbb
inc
mov
add
adc
orl
add
fimuls
sub
cmp
dec
add
icebp
sbbb
popa
inc
scas
and
xchg
fwait
ret
xlat
xchg
jb
sbb
add
fsubs
mov
cld
xchg
daa
and
js
leave
lea
jo
cltd
lret
or
sbb
data16
sub
pop
data16
inc
les
out
mov
sbb
int
ret
rol
cmc
pop
push
test
fadds
mov
stos
push
jno
and
sbb
mov
dec
adc
pop
add
int3
xor
jp
stc
inc
nop
ret
add
push
pop
or
jae
lcall
mov
ret
in
bound
push
mov
outsb
pop
adc
shrb
sbb
leave
jle
shll
jo
cmp
pusha
std
xlat
andb
pushf
cmp
push
or
iret
push
push
aaa
stc
out
add
inc
or
dec
inc
iret
out
shll
cmp
push
rorl
movsb
movsl
xor
mov
sbb
and
loope
out
xchg
pop
adc
sbb
mov
and
add
stc
pop
and
dec
dec
lea
add
clc
insb
out
ret
mov
popf
pop
inc
inc
lock
push
inc
jge
xor
mov
add
stos
xor
jmp
mov
add
in
gs
in
mov
xor
add
mov
mov
or
sub
jae
or
or
cmpsb
xor
add
cli
notb
and
dec
mov
or
pop
hlt
testl
xor
add
jge
stos
mov
mov
xor
xchg
stc
roll
in
push
mov
add
pop
dec
ret
add
xor
sbb
add
fs
rorl
mov
xor
pop
inc
dec
dec
in
sbb
xor
pop
imul
pop
dec
aad
add
sarb
sub
fistpl
mov
add
pop
aam
jbe
inc
add
lret
add
ja
cmp
mov
add
fucom
add
js
mov
inc
orl
clc
mov
adc
test
pop
inc
bound
add
mov
ret
cmp
fnsave
xchg
xchg
mov
and
imulb
and
pop
sahf
add
dec
xor
push
cwtl
add
dec
dec
jbe
sarb
xor
bound
add
or
rol
sub
add
mov
push
mov
and
add
jp
push
shl
mov
inc
aaa
adc
rorl
sti
mov
mov
push
add
push
mov
imulb
adc
sahf
xlat
cmc
add
int
imul
out
pop
movl
inc
std
sbb
adc
xchg
and
fs
jae
aam
add
enter
jle
and
dec
sub
ss
aad
imul
cmp
lods
add
adcl
mov
mov
icebp
jbe
int
jno
mov
orb
inc
int3
shrl
dec
mov
into
pop
mov
ret
mov
and
cmp
jne
add
adc
mulb
mov
push
xchg
out
fidivs
shll
rorb
outsb
bound
pop
arpl
adc
xchg
inc
jg
pushf
adc
pop
sbbb
sbb
imul
arpl
mov
jne
or
cs
push
pop
or
addb
add
add
add
pop
insb
jne
shll
mov
sbb
mov
add
mov
mov
mov
movsl
mov
pop
addl
cmpsl
mov
outsl
add
inc
dec
jae
lock
mov
popf
sbb
inc
repnz
add
jge
stos
add
adc
jmp
orl
adc
and
sub
adc
arpl
fstps
add
push
cmp
scas
adc
and
icebp
jmp
mov
pop
push
js
lock
ret
lret
test
pop
sbb
out
mov
or
mov
add
cmp
and
out
add
insb
mov
cltd
iret
and
cmc
rorb
cwtl
jmp
xor
and
cmp
and
cli
or
call
or
lds
repnz
add
jcxz
add
jp
push
out
add
test
mov
push
pop
add
and
gs
xchg
jnp
lret
cld
rol
jb
scas
fiadds
sarl
adc
scas
std
insl
mov
add
pop
outsb
cmpsl
mov
push
lds
or
arpl
and
and
fldt
xchg
xor
jb
es
stos
outsb
lahf
pop
lcall
xor
lods
jo
add
in
loopne
js
push
incb
sbb
inc
mov
insl
pop
stos
add
adc
pcmpgtb
sbb
les
roll
sub
lret
add
jg
and
adc
ret
jmp
movsb
fdiv
sbb
xor
dec
mov
dec
je
inc
add
xor
cmp
sub
inc
dec
lahf
outsl
add
orl
gs
add
loope
testb
or
jbe
ljmp
xor
aam
sbb
xchg
mov
adc
outsb
xchg
stos
flds
bound
aaa
ljmp
lock
icebp
enter
xchg
inc
fiadds
add
mov
push
cs
jne
sti
mov
push
mov
dec
test
jo
dec
and
fiadds
jno
fdivr
xor
pop
mov
jae
loope
sub
bound
add
lret
add
mov
dec
inc
cmc
jl
repz
sbb
add
xchg
xor
aas
dec
mov
in
fstp
pop
xor
xor
imul
les
add
cmp
push
lds
sar
dec
push
push
and
lgs
adc
push
ljmp
cmp
adc
xor
hlt
movsb
lods
out
cwtl
rol
ss
mov
add
adc
lods
cmp
jge
lock
mov
jle
lds
lds
and
in
xorb
sti
div
and
mov
jbe
movsl
mov
outsl
stc
mov
add
rcl
popf
lahf
mov
insb
insl
add
jmp
shlb
jle
cmpsb
sbb
in
out
add
jge
inc
inc
std
cmc
add
lds
xchg
and
jb
clc
popf
bound
push
outsl
js
ja
insl
icebp
add
cmp
push
fimull
imul
int
daa
mov
loop
or
ret
dec
pop
xchg
cmp
xchg
pop
cmp
gs
sub
and
in
push
popf
dec
ljmp
sahf
jno
mov
pop
adc
xor
sarb
mov
call
xor
sbb
jnp
cmp
cwtl
scas
add
jg
adc
cmp
mov
les
cmpsb
add
jle
jns
fnclex
cld
shlb
cs
ja
xlat
fsubrs
leave
popa
scas
lret
add
jge
mov
and
inc
add
sub
pop
mov
add
scas
jle
adc
dec
std
jae
cmc
lret
jo
sbb
mov
clc
xchg
xchg
data16
mov
sbb
cli
imul
notb
rclb
and
gs
or
js
shlb
add
mov
mov
mov
arpl
nop
loop
mov
mov
jl
add
aaa
faddl
dec
mov
jno
inc
cmpb
jo
aas
test
ljmp
das
sub
inc
xchg
jno
pushf
xor
push
or
ss
iret
push
icebp
add
inc
bound
ja
lods
loop
sub
push
sub
push
add
cli
push
cmp
inc
inc
add
shrl
popa
mov
shlb
mov
dec
es
sub
adc
adc
into
xor
pop
fdiv
add
incb
out
into
es
add
or
mov
or
shrl
pop
std
fs
subl
cmpsl
cmp
scas
cmp
add
pop
shl
pop
std
out
subb
sub
dec
movb
dec
fs
ja
add
stc
mov
cmp
add
xchg
arpl
mov
icebp
sub
and
add
push
mov
add
add
mov
jp
mov
mov
xchg
and
mov
dec
shlb
cltd
inc
and
xor
sub
les
cmp
rol
andb
ret
fcmovnu
cmp
pop
ds
fsubs
dec
iret
in
jns
stos
ljmp
mov
mov
cltd
sarl
mov
lock
mov
daa
add
out
sbb
xor
cmp
or
movsb
jmp
mov
and
push
pop
or
or
subl
movsb
data16
push
jp
pop
dec
iret
xchg
push
out
inc
test
add
rolb
push
mov
cmp
xor
ret
xor
cwtl
xchg
and
ret
push
jmp
out
mov
push
dec
fcomps
jg
xchg
cmc
add
pop
jmp
xor
gs
and
or
sbb
pusha
inc
je
jp
sub
push
movsb
mov
sbb
and
sbb
xchg
arpl
pop
inc
es
jp
movsb
mov
dec
and
lret
cltd
adc
xor
add
loope
xor
jno
popf
roll
jnp
mov
mov
sub
adc
add
ljmp
add
pop
loope
adc
aaa
jbe
aaa
ljmp
cmp
aas
loopne
scas
sub
cmp
push
mov
jmp
mov
test
mov
or
test
mov
call
aad
out
cmpsb
adc
dec
xchg
xor
loop
out
aas
push
adc
add
jns
xchg
nop
daa
adc
faddl
jp
fdivrl
in
xchg
push
int
cli
jl
adc
or
adc
out
lret
dec
jae
adc
bound
out
xchg
out
mov
mov
xchg
test
add
lods
cmp
mov
frstor
dec
push
loope
in
ljmp
inc
cmp
sub
jl
aas
rclb
dec
jle
addr16
jmp
int3
adc
dec
jbe
add
mov
cli
and
jb
adc
jmp
loope
cmpsb
dec
or
cltd
loop
lret
xor
test
repz
pop
shll
mov
add
pop
dec
or
adc
and
sub
scas
and
cwtl
dec
push
rorl
jno
fldt
xchg
mov
cmpb
mov
sbb
add
add
cmc
sbb
xchg
xchg
xchg
and
in
adc
or
aad
lea
add
inc
pushf
imul
pop
in
sub
or
or
add
dec
mov
or
push
add
and
push
pop
orl
imulb
cmp
jg
add
jmp
xor
xchg
das
mov
and
lret
mov
add
in
addr16
sub
pop
sbb
loope
fistl
lds
adc
add
xchg
pop
push
lcall
add
jg
dec
mov
pop
mov
pop
jmp
stos
rol
sub
mov
or
mov
add
dec
popf
mov
les
mov
inc
call
test
ja
clc
ss
or
mov
loopne
andl
and
or
jae
stos
roll
insb
push
lods
std
xor
mov
fsts
pop
jecxz
mov
dec
jl
lcall
add
push
std
xchg
shlb
movsb
mov
and
mov
data16
inc
and
iret
pop
daa
lods
scas
xor
fstpl
loope
push
int
mov
jb
add
lret
mov
gs
mov
mov
bound
cmc
fwait
xchg
jge
outsl
sbb
pop
mov
sbb
push
cmpsl
jnp
clc
add
add
xor
cmpsb
push
inc
add
cmpsl
xor
adc
jbe
mov
push
imul
pop
pop
dec
xchg
loopne
pop
mulps
cmp
and
roll
cld
lahf
xor
jnp
ja
mov
push
cs
call
hlt
cmp
pop
sub
ret
mov
mov
or
shr
sub
sub
test
add
add
insl
and
aas
rcl
das
or
hlt
mov
std
adc
movsb
lret
xor
mov
rorl
adc
nop
pop
xor
push
jmp
and
mov
ret
add
cmp
add
jbe
mov
cmpb
movsb
or
lea
inc
push
mov
jnp
cmp
out
sub
andps
sbb
es
jb
je
jae
rolb
or
add
ds
mov
je
sub
sub
push
adc
sub
dec
push
push
xchg
jb
cmp
nop
inc
lods
dec
aaa
mov
dec
into
cmp
ljmp
fbld
cmpsl
sub
int
outsb
test
dec
idiv
loopne
in
push
loopne
sub
andl
dec
or
stos
and
mov
cmp
sbb
add
into
sub
lahf
cmp
push
pop
xchg
mov
sub
sarb
mov
cmpsl
cmpl
repz
fstps
xchg
and
pop
ret
pop
push
dec
pop
inc
shlb
xor
and
add
xor
mov
add
inc
adc
sahf
inc
lods
insl
mov
adc
sti
loopne
cld
mov
out
rcl
bound
pop
ret
dec
pop
sub
pusha
mov
xchg
push
cmp
sub
repz
xchg
adc
jmp
scas
adc
aas
insl
orb
add
decl
mov
fmul
lret
sbb
rcrb
cmpl
stos
repz
xor
dec
add
mov
pop
push
test
add
repnz
and
jns
aad
cmc
test
mov
rcr
add
bound
add
fwait
in
add
ret
mov
push
add
xor
jg
pop
sub
sbb
cmp
add
add
rorb
ret
out
and
popf
or
inc
shr
mov
jnp
sbb
add
xchg
push
or
fnstsw
mov
mov
daa
cmp
hlt
cmp
and
leave
adc
add
cmp
out
add
jge
les
shlb
adc
ss
loopne
sub
mov
cmp
add
jle
mov
pop
jbe
sub
cltd
add
shll
rorb
push
adc
inc
in
rolb
sub
add
clc
mov
jnp
mov
or
pop
fnstenv
pop
loopne
es
out
and
cmpsl
sahf
shll
sub
push
fwait
jne
jecxz
xor
pop
add
je
add
xchg
aas
addb
push
clc
inc
dec
outsl
in
add
jae
push
sub
jns
xchg
push
and
rcll
xor
cmp
bound
and
cli
test
movsl
mov
pop
faddp
push
nop
cmp
push
pop
add
imul
cmpsb
js
insb
test
popf
lock
sbb
mov
ja
aas
cmp
add
add
sub
mov
movsl
jmp
xor
add
stos
add
and
cmpsl
jns
add
rcrl
jbe
sbb
roll
inc
sub
or
negb
in
cvttps2pi
and
popa
push
aas
mov
pop
add
lahf
cmp
push
push
cltd
ja
aas
mov
sbb
jmp
into
jo
ds
cmp
cmp
int3
in
rolb
push
into
add
pop
add
and
add
jecxz
push
xor
test
push
xchg
inc
bound
out
push
stc
imul
lahf
xor
mov
push
cli
nop
sub
sbb
xor
fsub
pop
mov
arpl
vxorps
call
dec
aam
or
filds
cltd
shrl
cmp
push
add
divl
jne
and
sub
repz
xchg
in
fcmovb
in
mov
jg
mov
dec
dec
smsw
xchg
jp
das
sub
ss
cwtl
adc
and
sbb
mov
ret
dec
lret
out
negb
loop
cmpsl
add
push
xor
mov
ficomps
add
add
dec
sub
loopne
push
add
dec
flds
sub
iret
sbb
lret
out
add
add
xchg
sub
push
xor
push
jb
pop
cwtl
mov
inc
ljmp
stc
cmp
repz
or
dec
xchg
mov
add
inc
loopne
mov
or
lret
iret
sbb
pop
adc
mov
pop
push
push
or
loop
ljmp
and
je
fldenv
jg
pop
add
test
add
bnd
add
xor
loopne
push
adc
mov
arpl
mov
or
add
mov
sarb
lea
iret
pop
adc
orb
mov
aad
int3
adcl
in
and
and
test
or
jne
mov
mov
or
cwtl
inc
in
xchg
lods
pop
outsl
inc
xor
sub
xchg
pop
addb
jle
push
in
dec
mov
cmp
scas
xchg
fwait
mov
popa
sbb
add
filds
les
xchg
rorl
lods
in
inc
rcr
mov
sbb
test
mov
movsl
dec
shrl
adc
pop
xchg
mov
sub
call
loope
rorl
add
aas
iret
es
gs
add
int3
roll
rep
jbe
stc
data16
adc
mov
mov
dec
dec
jns
xor
xor
sbb
fistl
or
add
test
sbb
ret
jne
sbbl
cmp
cmp
lret
mov
ror
add
pop
in
scas
je
add
jne
jge
rcrl
or
dec
movsl
xor
add
fdivp
dec
test
mov
rclb
xor
daa
adc
dec
adc
jo
cmp
push
xchg
inc
aas
push
ret
shrb
cmp
xchg
or
adc
sbb
mov
jo
loop
pushf
ljmp
mov
sub
add
jp
mov
jl
scas
fwait
cmp
lahf
fwait
jl
sbb
movups
aad
sub
and
or
mov
xchg
add
je
sbb
cmp
out
adc
shlb
loopne
push
sub
daa
cmp
and
call
popa
sbbl
jbe
jle
lahf
test
adc
xchg
cmp
lret
ja
add
ljmp
pop
or
outsl
jo
daa
test
pop
jns
pop
out
push
add
and
or
pop
stos
rorl
cwtl
test
mov
es
in
fildl
cld
and
pop
xchg
mov
mov
inc
mov
filds
ret
sbb
and
test
add
jmp
insl
add
mov
dec
fbld
scas
sbb
pop
pop
and
mov
in
adc
dec
dec
lods
cmp
add
and
mov
sbb
cmp
mov
insl
pusha
adc
fldl
xor
sbb
jecxz
aad
and
pop
stos
andl
loope
sub
mov
sbbb
cmp
js
sbb
ds
es
dec
jge
push
mov
xchg
sub
or
jl
das
mov
pop
push
cmp
das
in
cmp
test
xchg
xchg
and
mov
and
mov
jo
lock
xchg
dec
push
test
sbb
gs
adc
loop
push
and
in
or
les
cltd
inc
sub
test
addb
push
mov
stc
cld
cmc
icebp
in
daa
cs
lahf
sbb
dec
push
nop
fiaddl
and
lcall
cmp
or
cmp
leave
mov
loop
inc
daa
adc
mov
sbb
push
sbb
std
xor
es
add
test
push
push
add
les
nopl
sub
dec
xor
push
in
sub
xchg
xor
aad
push
dec
lret
mov
and
jmp
jl
pop
inc
cmp
or
push
fdivrs
xor
inc
fcompl
xor
push
jno
cld
es
add
out
sub
push
cmp
shrb
ja
inc
and
shlb
xchg
mov
sub
add
xchg
fucomi
push
xchg
xor
ret
mov
cmp
dec
std
rcr
cli
divb
push
lret
int3
loopne
cmp
data16
icebp
cld
push
mov
inc
adc
stos
add
outsl
push
mov
jnp
outsb
rolb
adc
adc
sbb
lods
sbb
xchg
adc
or
pop
sarb
mov
sbb
sbb
xorb
rorb
bound
adc
xor
add
and
add
es
jecxz
lret
add
inc
sbb
stos
shrb
mov
mov
cmp
sti
sub
mov
test
or
data16
mov
push
das
int3
sbb
sti
mov
cmp
aad
data16
in
and
and
adc
daa
or
xor
jl
or
aam
sarb
fwait
jp
sar
push
add
pop
lds
mov
iret
in
movsl
rorb
out
call
cwtl
hlt
mov
mov
jmp
mov
push
and
jge
or
xchg
lods
les
cmp
loopne
scas
cltd
mov
enter
movsl
fildl
lock
jnp
cmp
pop
sbb
push
es
test
add
push
inc
mov
out
roll
cli
add
fiaddl
jle
aaa
and
nop
lods
pop
adc
aam
lock
inc
push
sub
mov
or
mov
jmp
push
mov
adc
js
inc
add
push
mov
add
pop
enter
out
adc
jp
movsl
add
and
sar
mov
mov
fxch
or
test
jle
loop
sbb
inc
add
das
fildl
xchg
mov
sbb
lret
and
ret
ljmp
add
fsts
pop
cmp
jbe
add
stos
jo
arpl
sbb
pop
dec
mov
xchg
and
fcomps
adc
es
xor
add
mov
ds
jne
pusha
scas
push
xor
xor
out
and
lock
and
cmpsb
movb
aam
pop
fld
sbb
lock
dec
insl
fwait
add
inc
push
bnd
mov
test
vprotb
adc
loopne
sub
push
add
arpl
imul
and
stc
push
add
cmp
xlat
add
daa
imul
or
fadds
test
lahf
adc
mov
xor
insl
out
add
lds
aam
jne
sbbl
inc
add
push
cwtl
xor
mov
jmp
mov
bound
rclb
mov
push
shll
dec
std
pop
or
push
cmp
or
out
pop
pop
mov
and
fwait
mov
add
rcl
inc
aad
xorb
call
sarl
decl
push
cwtl
jae
add
aad
stc
xchg
movsb
or
xor
mov
mov
jo
icebp
mov
ret
or
dec
mov
jo
push
rclb
ja
pop
xor
sbb
out
sbb
mov
or
leave
mov
in
int
filds
sub
inc
xchg
adc
push
scas
mov
test
popa
add
xchg
gs
setbe
and
pop
call
fisttps
pop
stos
addr16
jg
in
in
inc
or
add
jbe
stos
jl
xchg
jle
jmp
add
loopne
push
sub
fadds
mov
inc
pushf
and
mov
add
push
xor
push
jae
jl
xorb
push
inc
insb
cmpsl
mov
aaa
inc
imul
lds
outsb
xor
push
add
xchg
xchg
out
cmp
dec
lods
xchg
jle
pop
adc
lock
xchg
or
cld
mov
push
clc
lds
dec
out
icebp
add
ds
gs
add
test
jecxz
inc
std
ret
int
add
icebp
add
jnp
inc
cmpsl
mov
mov
pop
xchg
add
jb
fsts
mov
sub
add
push
mov
lret
pop
pop
push
jle
push
jge
inc
sahf
pop
ljmp
add
mov
rorl
mov
jmp
mov
pop
push
add
mov
popa
lcall
push
sub
aas
movsl
add
push
xchg
movsb
addr16
xor
sub
inc
test
xchg
popa
push
and
inc
inc
fs
sbb
and
adc
push
jle
inc
cmp
test
pusha
or
lahf
rcrb
mov
sub
cmc
sbb
pop
outsb
mov
cmpsb
and
mov
movsw
sbb
hlt
iret
add
sahf
pop
mov
add
in
inc
adcb
jb
add
push
adc
sbb
sbb
ret
or
data16
or
scas
fsubl
fdivs
ja
mov
xchg
push
loopne
insl
xchg
jecxz
add
lds
inc
lea
mov
push
imul
and
xchg
inc
cli
loop
out
mov
inc
jmp
ja
or
movsb
lret
or
push
add
sti
dec
push
out
pusha
xchg
mov
xor
xchg
int3
movl
jbe
icebp
pop
add
into
and
rclb
add
loop
pop
xchg
in
jle
add
xor
add
push
sbb
jns
mov
sub
and
repz
mov
lahf
and
dec
push
fistl
fadd
add
mov
sub
out
shll
dec
pop
and
fwait
cmp
mov
in
nop
push
fstps
icebp
add
push
mov
xchg
jg
ds
cli
inc
sub
jp
add
loop
es
push
aas
leave
add
and
push
add
xchg
into
dec
std
adc
dec
outsb
daa
add
out
xchg
jl
fstpl
add
fidivl
js
addb
fsubl
test
sahf
call
inc
fsubrs
leave
aad
push
xor
jge
lock
sub
pop
mov
rorl
sbb
add
xchg
aaa
repnz
or
cli
sar
jmp
loopne
ror
jne
jo
jnp
add
mov
mov
add
push
jge
add
outsb
mov
movsl
fs
daa
scas
sti
push
test
pop
das
dec
jge
mov
xchg
scas
jnp
sarl
xchg
push
add
push
push
lods
cmp
loope
pop
or
add
add
stc
jp
cmpsl
or
and
jbe
loopne
push
gs
xor
repnz
add
ljmp
aas
pushf
jg
and
mov
jb
pop
imul
out
mov
mov
sbb
or
push
pop
or
in
add
int
xchg
mov
dec
mov
adc
sub
js
adc
mov
pushf
add
adc
shlb
enter
and
ret
add
cmp
pop
ss
or
addr16
push
xor
in
cli
adc
mov
add
push
rclb
and
in
incb
pop
cmpsl
or
add
lds
jnp
subb
xor
add
mov
into
pusha
ss
sub
jnp
fadds
mov
and
fisubl
std
je
ret
jb
xchg
loope
addl
and
sub
jb
mov
cmpl
inc
add
adc
ja
add
loope
addr16
mov
popf
ljmp
inc
insl
out
outsb
pop
mov
add
push
addr16
pop
cmovle
loop
arpl
and
add
daa
jbe
addl
sub
outsl
sub
cltd
ret
aad
jae
aas
nop
add
cwtl
dec
jo
inc
mov
ret
stos
mov
cltd
sti
cmp
mov
mov
nop
mov
xchg
add
push
js
in
mov
daa
imul
imul
dec
dec
ljmp
aas
cmp
test
dec
cmp
enter
inc
aaa
jbe
xchg
sbb
fprem1
mov
jl
cmp
mov
dec
add
and
scas
pushf
inc
and
repz
cmp
add
imul
add
imul
dec
enter
inc
adc
shll
sub
mov
cmp
pop
lods
push
add
or
repz
and
out
lock
xchg
or
enter
jmp
sbb
daa
add
or
ret
jmp
stos
mov
xchg
gs
xor
int3
add
mov
add
cmp
hlt
xor
mov
mov
arpl
cmp
notl
add
push
bnd
lret
cmpsl
int
pusha
or
add
les
push
rorb
in
push
sarb
xor
stos
sub
sbb
rcrl
cs
inc
call
add
cmp
cs
add
pop
inc
inc
sub
fcompl
add
addb
jne
mov
repz
test
sbb
movsl
test
in
lret
fists
mov
fimull
jle
dec
loopne
out
xchg
inc
cmp
or
aad
sbb
xor
outsl
and
scas
das
mov
rcll
stos
in
push
mov
out
orb
cmc
sub
mov
repnz
adc
int
lcall
cmp
rolb
jl
jp
xor
aam
adc
fisttpll
xor
add
out
stc
sbb
inc
xchg
add
and
jo
sub
add
test
hlt
mov
movsl
ljmp
arpl
cmp
jb
or
mov
add
mov
rol
jbe
out
and
xchg
dec
mov
xchg
je
cwtl
mov
jge
push
popf
adc
out
icebp
pop
add
inc
jnp
xor
add
ficoms
pop
add
orb
inc
mov
xor
xchg
add
lcall
cmp
sub
or
in
jo
mov
xchg
dec
mov
mov
or
sub
mov
adc
cmp
pop
or
mov
cmp
fsubrs
std
add
mov
cld
enter
dec
pop
pop
add
test
dec
movsl
flds
xor
xor
sbb
fistps
shlb
push
lods
cmp
and
add
add
sub
nop
add
into
mov
pop
in
ror
mov
pop
push
negb
ss
lahf
sbbl
loopne
and
add
xorl
add
lcall
add
jmp
es
xor
repz
cmp
inc
cmp
or
fiaddl
add
pop
repnz
dec
addl
pusha
adc
ret
jbe
neg
mov
repz
pop
ja
pop
add
push
pop
mov
in
add
outsb
imul
cmpsb
mov
dec
jb
test
xchg
pop
add
lds
loopne
testb
movl
add
sbb
add
sub
cmp
adc
and
inc
jl
or
pop
pop
push
in
cmp
push
pop
incl
jecxz
fmull
xor
es
daa
int3
into
nop
adc
add
ds
repnz
add
jmp
add
mov
xor
sub
jmp
pop
add
addb
shl
inc
das
adc
pop
jb
add
imul
dec
repz
jle
nop
sbb
jmp
addl
popl
inc
dec
mov
aam
push
mov
mov
xor
ds
inc
sub
sbb
rclb
cmp
lret
jne
repnz
push
sbb
les
add
add
jp
rclb
lds
xchg
pop
addl
push
pop
sarl
rcrb
aas
mov
subl
adc
mov
xchg
arpl
mov
xchg
pop
or
movsl
gs
test
loopne
sbb
add
fwait
out
jg
ds
mov
shl
repnz
adc
out
push
inc
imul
mov
call
jno
inc
loopne
pop
rol
leave
ret
cli
xor
stos
jb
sub
add
lret
jmp
mov
adc
sbb
mov
mov
std
mov
inc
icebp
jne
leave
in
sbb
or
cmc
sub
xchg
sbb
aam
dec
or
dec
push
inc
ret
enter
add
mov
lret
fstps
adc
push
sub
stc
mov
hlt
imul
add
je
mov
shrl
push
mov
std
lea
dec
les
mov
and
cmp
add
cmp
hlt
pushf
xchg
dec
mov
jg
pop
or
push
push
or
outsl
pushf
cmpsb
add
nop
inc
and
dec
add
insb
stos
jg
aas
rolb
cmp
data16
imul
mov
mov
mov
or
lcall
dec
mov
cmp
jp
sbb
js
gs
es
nop
push
call
xor
inc
dec
fisttpll
xor
and
nop
mov
push
dec
add
dec
xchg
adc
inc
enter
cmp
repz
add
orl
imul
mov
add
mov
out
add
shlb
cmc
addr16
subb
adc
add
inc
xchg
inc
mov
and
cli
add
sti
push
fcmovne
mov
cmp
stos
pop
jne
or
repnz
cmp
add
cmp
pop
sbb
adc
sub
push
loope
xchg
jmp
lods
or
daa
jne
int3
aaa
fcompl
inc
jo
push
addl
mov
int3
pop
fistpl
dec
aaa
mov
movl
clc
pop
fld
cmp
shll
icebp
xor
sub
mov
or
mov
pop
jae
jno
dec
xor
push
mov
popa
sbb
mov
add
or
aam
cmc
pop
int
jo
inc
mov
in
popf
xchg
xor
test
add
cli
mov
shll
push
addr16
jo
mov
sub
xchg
in
push
jg
add
inc
jbe
mov
loop
into
out
arpl
fidivs
or
mov
bound
or
and
push
pop
in
loop
add
push
cmp
add
push
imul
popf
pop
cmp
mov
mov
push
nop
faddl
lds
aaa
shrl
out
repz
pop
divb
dec
imul
das
inc
xchg
and
xor
fdivs
lcall
rorl
cs
xor
test
add
jecxz
cmp
sub
into
xlat
lods
out
pop
add
xor
dec
dec
cli
test
dec
add
loopne
out
cmpsl
and
gs
push
add
cmpsb
call
add
mov
mov
pop
shrb
xor
mov
rcrl
aad
push
xor
sub
jge
and
sbb
mov
and
inc
xor
pop
aas
add
push
data16
pop
xchg
xor
outsl
jge
inc
insl
mov
scas
fistps
push
div
lret
lahf
pop
push
hlt
add
jmp
dec
das
cmc
xchg
mov
jnp
and
mov
push
out
push
sbbl
jge,pt
jmp
xor
jge
pop
jbe
pushf
jp
shlb
idivb
add
addr16
aam
jo
and
push
and
jbe
cmp
daa
sahf
hlt
inc
sbb
ret
sbb
xchg
inc
lods
mov
or
sbb
inc
bound
outsl
ja
aaa
lahf
adc
loop
in
push
scas
add
shll
inc
cmp
into
jl
ret
push
popf
sahf
mov
in
cli
stos
push
mov
movsb
and
jmp
jl
and
pop
dec
gs
mov
imul
mov
or
lret
cmp
mov
dec
jle
enter
dec
dec
xor
add
pusha
jmp
pop
stos
sbb
movsb
in
or
inc
jle
xor
subb
mov
inc
sbb
and
mov
rolb
add
mov
daa
mov
idivb
sub
inc
or
inc
imul
mov
and
and
cmpl
roll
add
mov
sub
push
rolb
and
or
bound
add
mov
and
add
mov
in
mov
ret
lret
pop
rcrb
repnz
lock
sbb
icebp
push
xor
jge
cmpl
fcmove
cli
mov
imul
adc
shll
mul
mov
xor
lock
das
or
sub
xor
mov
push
flds
dec
lock
sahf
lock
push
cmp
test
mov
sbb
icebp
ljmp
add
rsqrtps
mov
adc
lahf
pusha
lock
xchg
repz
jecxz
lock
and
js
mov
daa
sbb
fdivp
cmp
sbb
pop
pop
sbb
pop
and
repz
push
xchg
and
add
nop
or
sbb
inc
fcmovnu
cmp
fidivs
xor
je
inc
push
sti
ret
out
pop
inc
aam
insl
repz
out
xor
cltd
aas
add
adc
sbb
rcr
or
push
popf
sbb
test
sub
and
or
xor
and
js
sbb
mov
or
xchg
adc
cmp
nop
daa
sub
cmp
lods
add
adc
dec
add
loopne
fcmovbe
sbb
push
fisubrs
out
stc
sbb
test
inc
lret
sub
enter
or
daa
add
and
or
xchg
sub
push
push
fisttpl
adc
mov
and
adc
mov
inc
or
orb
es
sbb
sbb
sbb
xchg
pop
mov
cmp
cmp
push
push
sub
inc
cmp
adc
push
and
cmp
xor
lret
and
or
inc
into
mov
rcl
sbb
or
dec
and
push
add
inc
pop
and
or
adc
xor
cmp
mov
inc
push
scas
call
ss
xor
adc
shlb
loopne
pop
xchg
in
adc
xor
test
jl
jno
or
into
and
or
sub
shl
or
and
rcll
mov
sub
and
add
xchg
lcall
test
push
insl
adc
xchg
mov
int
aas
add
lret
ret
and
call
jecxz
xchg
shrb
jl
loopne
and
sbb
popa
dec
fcompl
add
insl
cmp
push
sub
mov
inc
lret
push
fsubs
scas
mov
ss
outsl
xor
add
or
ss
and
pusha
cmp
dec
cmp
loope
lea
mov
or
and
adc
sbb
ret
out
mov
in
repnz
pop
das
add
add
sti
mov
sub
pop
and
rol
pusha
dec
popa
inc
adc
cli
shll
rorb
pop
xor
or
mov
es
repz
fwait
xor
dec
aaa
xor
add
sti
movsl
or
push
mov
ss
jae
inc
jae
or
add
int3
popf
pushf
int3
xor
push
arpl
and
cmpsl
mov
scas
or
add
jo
lock
or
push
daa
loop
nop
sub
sbb
and
add
outsb
in
jl
or
and
and
testb
mov
dec
mov
shll
dec
inc
inc
or
jge
push
pop
cmp
and
adc
jle
rcll
pusha
ss
inc
jae
and
cs
pop
add
cmp
bound
sub
mov
repz
pusha
ljmp
test
es
dec
or
into
push
sbb
and
add
or
xor
pop
fstpl
or
push
stos
test
push
inc
and
das
ficomps
popf
push
mov
pop
inc
mov
cli
and
and
add
enter
adc
add
jne
lret
fs
xlat
sbb
adc
and
in
lcall
cmp
and
mov
push
sub
add
pop
call
and
cmp
clc
rorb
lcall
pop
mov
push
add
icebp
dec
cmp
outsb
adc
mov
mov
xor
dec
das
mov
adc
sbb
adc
lea
aas
adc
ljmp
mov
adc
xor
stos
sti
enter
mov
daa
pusha
xor
xor
into
push
in
mov
cmp
adc
das
arpl
xchg
sbb
push
test
add
sbb
mov
ret
xor
adc
adc
adc
sbb
mov
cs
inc
leave
dec
dec
xor
pop
add
sbb
or
xor
sub
and
pop
or
and
repnz
xchg
sub
inc
shl
adc
push
addl
adc
fldt
sbb
sub
cmp
ja
adc
repnz
adc
repnz
mov
add
xor
out
pop
ret
movsb
rclb
xchg
sbb
push
sbb
cmp
ret
pop
and
jae
mov
xlat
fcoms
and
adc
or
scas
inc
and
or
pop
adc
adc
and
mov
and
mull
mov
push
pop
pop
test
dec
or
xchg
sub
xchg
leave
adc
jecxz
data16
push
fnstsw
xor
into
mov
andb
ret
sbb
sbbb
pop
and
sbb
pop
bound
pop
push
or
xor
insl
xchg
lret
dec
pusha
push
pushf
jae
jp
shlb
or
aas
add
das
je
sub
xor
mov
ret
pop
pop
pop
cmp
sbb
adc
sbb
dec
sbb
cmp
add
mov
test
inc
sub
sub
test
insb
pop
ret
and
loope
sbb
cmp
mov
inc
enter
cmp
and
pop
cmp
cwtl
or
fists
sub
sub
and
aas
sbb
subb
mov
or
xorl
popa
mov
xchg
aad
sbb
pusha
fistpll
clc
sbb
lret
cmp
lods
inc
cmpsb
sbb
out
pop
out
and
xchg
sub
mov
aaa
jns
xchg
adc
pop
push
push
cltd
add
in
dec
bound
out
and
inc
stos
mov
mov
and
lahf
in
sub
dec
popf
test
ret
add
jb
jns
cmc
or
sbb
add
in
dec
hlt
adc
push
push
subb
sub
jo
fcoml
push
xor
sbb
arpl
mov
xor
sub
lods
jge
add
xor
mov
add
inc
jmp
and
push
pop
sub
jnp
cmp
cmp
adc
xor
xorl
clc
das
decb
fidivrl
rorl
push
cltd
mov
pop
or
ficoms
pusha
ss
lcall
push
inc
dec
in
mov
or
test
out
dec
sub
push
mov
shll
out
mov
push
jno
lret
daa
fpatan
cs
add
or
adc
mov
or
add
dec
sub
shlb
push
lods
mul
dec
xor
or
or
sub
push
pusha
xor
inc
daa
jo
pop
fiadds
aaa
push
push
aas
inc
fisubl
into
sbb
popf
or
sbb
mov
adc
andb
push
jb
lds
xor
add
inc
sub
ret
loop
mov
daa
loopne
dec
xchg
stos
test
aas
ljmp
push
cli
faddl
adc
es
sbb
into
lds
and
mov
cmp
or
test
dec
and
aad
pop
sbbl
pushf
and
xor
ds
mov
iret
push
aaa
adc
fbstp
cmp
sbb
push
into
mov
ss
cmp
add
popaw
xor
push
pop
es
mov
adc
or
adc
and
inc
repz
insl
xor
mov
or
and
or
aaa
xor
add
add
imul
inc
cvtps2pd
push
sbb
stos
sub
add
or
sub
and
mov
xchg
cmp
shr
add
push
test
pop
push
ds
and
xor
add
sub
or
insb
movsl
popf
invd
push
lret
adc
inc
imul
xorl
cmp
out
sbb
add
or
ja
das
inc
lds
pop
adc
xchg
add
js
aas
dec
jecxz
shll
cmp
cs
pushf
aam
adc
lcall
mov
sbb
ljmp
lods
in
shl
or
das
or
aas
sbb
sub
adc
and
fisttpl
or
sub
js
jle
sbb
jp
cmp
mov
adc
ds
call
xor
sub
add
out
push
dec
push
sbb
pop
and
cmpb
cli
insb
mov
mov
and
cmp
push
cmp
dec
cmovle
fnsave
sbb
stos
loopne
push
test
jecxz
add
sbb
adc
sub
roll
or
xor
pushf
sub
mov
sub
std
lock
les
cmc
jmp
or
aas
inc
in
dec
fwait
or
nop
mov
push
push
adc
idivl
push
sbb
cmpsb
adcb
out
leave
or
int
or
sbb
add
add
sub
outsb
sbb
cmp
adc
les
inc
add
fidivs
sub
add
adc
or
xor
adc
and
pop
fmul
popa
or
pop
add
inc
rol
xchg
and
hlt
test
adc
mov
inc
stos
loop
adc
das
and
dec
lods
sbb
out
rorl
pop
mov
dec
movsl
jbe
or
or
xor
adc
inc
andb
movsb
sub
sub
mov
leave
aaa
cmp
jp
gs
pop
xor
and
popa
pop
mov
push
dec
adc
jg
loop
sbb
pop
scas
test
push
les
mov
aad
sbb
or
cmp
adc
xor
ja
or
pop
push
mov
or
test
leave
and
ljmp
pop
fwait
or
ror
movsb
test
xor
arpl
repz
pop
adcb
addl
daa
cmp
and
push
adc
inc
sbb
sub
or
daa
add
inc
dec
and
sub
rdpmc
lcall
sub
push
es
sbb
jo
dec
popa
cmpl
add
cld
mov
dec
sbb
das
test
or
push
adc
xor
lret
sub
into
jg
cmp
fidivrs
mov
sbb
jg
pop
cmp
scas
or
repnz
popl
pop
aas
xchg
and
inc
xor
mov
dec
daa
or
adc
dec
inc
jl
sbb
mov
jb
adc
dec
sub
pop
adc
sub
sbb
and
pop
or
xchg
add
or
ficomps
out
lcall
inc
sub
dec
out
incb
or
clc
nop
fildl
cmp
mov
mov
adcb
sub
sub
cmp
or
push
and
jg
sti
sub
lock
arpl
mov
and
xchg
or
mov
xor
ljmp
xor
lahf
or
and
jg
push
sbb
xlat
add
adc
xor
adc
pop
inc
mov
sbb
adc
or
sbb
sub
push
movsl
mov
ret
stos
daa
mov
push
jno
mov
sti
fdivrl
push
or
push
cmp
add
push
mov
add
jne
mov
mov
adc
aaa
push
lret
jb
adcl
or
jmp
push
dec
fstl
or
push
push
out
and
sarb
mov
mov
add
mov
ret
mov
or
xchg
fbstp
idivb
daa
pop
test
test
es
and
and
sub
das
sub
ss
sti
xor
pop
dec
and
xchg
cld
adc
movsb
inc
xchg
pop
mov
sub
jl
adcb
ret
adc
subb
adc
fsts
cmp
jge
es
sbb
pop
ss
inc
add
sbb
xchg
add
cld
sbbb
sub
sbb
inc
fisubrs
add
je
shlb
xchg
or
and
and
sbb
pusha
xorl
cld
in
mov
xor
cmp
pop
nop
sub
or
sbb
or
ret
adc
mov
jge
cltd
ret
add
mov
les
xchg
imul
add
adc
enter
push
jmp
fs
scas
push
mov
mov
or
js
mov
adc
jb
jns
add
lcall
adc
lds
int3
mov
push
cs
cli
dec
daa
test
and
push
inc
ficoms
pop
and
xchg
sbb
insl
clc
add
lret
sub
or
add
push
lea
int
sbb
mov
adc
adc
add
rcll
adc
and
add
dec
mov
xor
sbb
inc
add
lods
pop
mov
pop
sub
movlhps
leave
xor
aaa
out
adc
adc
add
das
adc
mov
stos
xor
inc
sub
xchg
mov
adc
pop
jne
adc
or
mov
add
cmp
rorb
mov
and
lret
mov
sbb
push
add
stos
jmp
add
fisubrs
and
pop
daa
fsubr
lods
adc
pop
mov
sbb
or
sbb
xlat
les
or
cmp
push
sub
inc
dec
pop
divb
mov
add
mov
and
and
add
sbbb
add
fisubrs
sub
dec
add
jbe
inc
ret
hlt
push
push
loope
adc
mov
and
adc
imulb
xchg
cmp
push
popa
add
adc
pop
int3
adc
pop
or
add
add
loope
jno
inc
push
pop
fld
add
cmp
push
mov
and
and
fsubrs
or
mov
xor
add
and
mov
push
sbb
jge
cld
test
and
sbb
adc
mov
shrl
add
mov
in
cmc
cmpsb
loope
push
test
inc
aaa
call
adc
adc
sub
adc
lret
push
daa
xor
dec
call
push
sbb
adc
aaa
fbld
adc
jbe
pop
or
mov
dec
mov
pop
sub
ja
mov
aas
adc
pushf
arpl
pusha
hlt
add
das
sub
mov
push
xchg
das
out
ret
mov
and
jo
or
loope
orb
pusha
inc
fwait
mov
and
xor
bound
cmp
and
cmp
aaa
shll
pop
sub
rolb
lods
outsl
and
or
mov
das
jnp
add
cwtl
repz
loopne
lret
dec
dec
sbb
sub
xor
xchg
out
cmp
jns
pop
cmp
sub
insb
push
xchg
iret
leave
shrl
sbb
fists
fs
cmc
cmp
xor
and
mov
push
outsb
add
xor
mov
xor
xor
cli
lods
sub
jge
and
and
repz
jge
out
sbb
push
cwtl
pushf
push
movb
push
adc
xor
push
sahf
cld
mov
inc
and
add
les
sbb
ret
cltd
dec
xor
push
dec
sahf
mov
ljmp
adc
dec
push
xchg
and
cli
mov
sbb
mov
add
and
add
and
dec
test
mov
mov
inc
mov
lds
add
add
mov
add
xchg
cmp
mov
inc
out
aas
cmp
add
xor
movsl
rclb
daa
inc
jns
xor
adc
adc
addr16
pushf
xchg
xlat
aas
add
pusha
and
mov
jle
or
pop
ss
mov
addr16
xchg
ss
jle
jp
leave
xor
je
or
les
insl
fwait
pusha
xor
mov
in
or
jb
fstpl
ss
test
hlt
add
sbb
adc
inc
sub
mov
xchg
inc
adc
lds
push
mov
sub
jno
add
adc
adc
aaa
sub
dec
lret
sbb
add
addb
shlb
xlat
mov
popf
sbb
divb
jo
loopne
sbb
rcll
dec
or
in
inc
or
adc
and
jb
lea
or
fadds
aas
and
or
dec
mov
adc
out
and
es
pop
cmp
test
jge
sbb
jl
push
loope
test
xor
pop
sub
mov
ss
add
mov
inc
ljmp
sbbb
fisttps
subl
add
pusha
add
lds
or
test
add
xor
dec
jae
or
sub
mov
inc
xor
add
icebp
lock
inc
in
sbb
pop
out
add
adc
push
push
stc
adc
orl
adc
inc
sub
sbb
sbb
dec
xor
imul
cmpl
orb
push
add
or
and
sahf
add
and
xchg
out
in
xlat
cmp
out
repnz
sbb
mov
and
adc
int3
jbe
icebp
and
pop
inc
in
xchg
sbb
adc
jl
lret
add
add
or
xor
xor
subb
inc
cmp
push
frstor
cmp
sub
mov
addb
pop
lds
cltd
in
push
lock
fisttps
repnz
and
push
add
test
daa
adc
pop
and
cltd
outsb
les
or
adc
inc
and
decl
ret
dec
mov
out
lcall
out
or
and
stc
ret
inc
imul
hlt
cmpsl
or
xlat
pop
pop
mov
or
aad
jg
movsb
ds
xor
aaa
outsb
es
pop
and
mov
push
nopl
pop
rol
cmp
cmp
push
jb
inc
add
stc
inc
mov
xor
out
cmp
movb
cmp
add
out
mov
sub
ja
stos
xor
mov
xor
lahf
xor
xor
repnz
and
add
ret
or
xor
mov
sbb
daa
mov
lahf
fs
out
popl
and
or
xchg
cmp
and
out
movsb
or
sub
xchg
lods
xor
and
lods
inc
les
test
add
test
mov
push
int3
adc
xor
lahf
scas
vxorps
dec
add
adc
xor
sti
fwait
xlat
adc
adc
and
movsl
lret
or
push
pop
sub
je
popl
mov
or
ss
xor
mov
jo
repnz
pop
xor
dec
pop
push
cmpsl
arpl
add
sub
cmp
jp
or
repz
or
mov
ret
and
pop
cmp
out
lahf
ret
add
sub
xor
cmc
adc
mov
ret
in
sub
roll
push
sub
sub
jnp
adc
and
adc
in
pop
xchg
jb
shll
push
out
mov
push
and
and
mov
sub
out
cwtl
pusha
and
hlt
adc
dec
iret
lods
cmp
mov
adc
jnp
add
idivl
rcrb
fwait
loop
push
enter
sbb
xor
cli
push
pop
int3
or
xor
rorl
decb
jge
test
sarb
or
pop
mov
cmp
mov
inc
adc
and
sbb
lea
rorl
loop
xor
mov
and
add
adc
sub
inc
pop
jp
rcll
ljmp
push
daa
fisttpll
or
adc
dec
adc
adcl
adc
daa
xchg
ds
test
jp
sub
sbb
inc
repz
pop
or
or
push
imul
mov
push
or
cmp
cmp
ret
pusha
adc
mov
sbb
ret
mov
loop
push
adc
pop
push
add
jnp
mov
mov
fsubrl
sbbl
push
icebp
outsl
sub
in
scas
fistpl
lret
and
or
pop
push
leave
repnz
adc
mulb
shlb
das
mov
sbb
or
adc
dec
rorb
push
test
lret
mov
ret
loopne
mov
xor
pusha
cmp
adc
inc
cli
sbb
xrelease
es
and
aam
sub
mov
push
mov
and
adc
mov
add
ljmp
or
cmp
pusha
mov
adc
fs
pop
loopne
imul
gs
push
in
mov
sbb
shrl
ret
adc
inc
in
mov
adc
push
fsubrp
xchg
cmp
or
cmp
or
xor
cmp
rorb
dec
pop
sbb
and
jge
mov
add
mov
jno
hlt
enter
jge
sub
jo
lock
xor
pop
popa
and
push
nopl
lds
das
cmp
and
pop
lcall
pop
lods
lret
adc
cmp
adc
cmp
sub
lds
xchg
mov
or
mov
fwait
mov
cs
fildl
mov
int3
sub
and
hlt
jae
in
xor
xchg
cmp
cld
push
sbb
inc
dec
jmp
or
xor
push
push
push
adc
adc
and
repnz
sbb
cld
push
out
inc
and
push
push
pusha
daa
ljmp
rorl
test
pop
out
repnz
add
xchg
adc
bound
mov
shl
sahf
aaa
add
call
pop
aad
add
jb
cwtl
jp
sub
add
mov
inc
cmp
mov
sbb
sub
adc
or
adc
fdivl
or
and
sahf
or
lret
inc
adc
movsl
sub
push
insb
and
sbb
shrl
adc
sbb
jl
adc
mov
inc
and
arpl
mov
mov
jno
and
sub
jb
push
pop
test
pop
rdmsr
jbe
jbe
out
je
pop
nop
push
jmp
push
cmpsl
movsb
jno
jb
mov
cmp
andb
adc
ret
and
roll
and
push
lds
divl
or
sbb
mov
push
or
sarl
xor
daa
addl
shrb
push
push
hlt
fwait
stc
lds
and
xchg
in
xor
or
add
cmp
fcmovb
das
cs
pop
mov
and
pop
add
push
in
rclb
cmp
add
and
jecxz
subb
inc
and
xchg
sub
jno
rolb
or
into
fstpl
or
adc
cwtl
adc
repz
stos
bound
ds
shlb
inc
pop
xor
outsl
or
xchg
mov
and
andb
and
fisttpll
inc
inc
leave
sbb
add
jle
cmpl
outsb
adc
sbb
adc
inc
stc
adc
das
push
mov
xchg
push
inc
daa
movsl
adc
dec
imul
mov
cltd
xor
or
cld
xor
testb
daa
pop
sbb
std
sub
and
out
pop
adc
xor
mov
adc
inc
xor
cmp
or
mov
and
insl
fs
orb
or
stos
and
ret
add
ja
lcall
xor
loop
das
adc
stos
inc
mov
movsb
mov
call
push
movsb
sub
dec
or
lcall
add
iret
es
xlat
enter
sbb
and
std
sub
sub
dec
jle
cmc
push
mov
repz
ds
mov
lods
sbb
jle
pop
test
cmpsb
scas
jae
adc
add
pop
sub
repnz
movsb
cmp
cmp
loop
add
test
idivl
push
test
sub
in
sub
sub
adc
xor
fwait
pop
mov
pop
sbb
fdivrl
insb
inc
daa
and
add
adc
test
pop
sahf
rclb
adc
dec
and
std
push
ljmp
adc
push
sbb
cmp
xor
rolb
shl
pushf
lcall
js
shlb
xor
in
xchg
lret
sub
pop
add
adc
pop
ret
arpl
das
out
inc
sbb
push
cwtl
cmpl
outsl
jbe
pop
or
mov
jb
sub
movsl
mov
add
add
into
xlat
push
sbb
cltd
or
push
or
test
lods
jo
xor
push
mov
inc
push
mov
cmp
es
cli
dec
pushf
sub
cwtl
inc
gs
mov
pusha
cmp
mov
adc
push
or
in
sbb
sub
cli
dec
xor
adc
push
pop
xor
xchg
xor
bound
and
in
shl
jo
out
dec
xor
lcall
test
sub
cmp
outsb
pop
inc
mov
movsl
push
shl
ds
lods
mov
leave
into
data16
arpl
es
adc
sub
stos
or
xchg
add
jnp
cmp
or
clc
fldcw
and
sbb
dec
ret
add
xchg
add
inc
das
test
and
cmp
push
ror
ss
fstp
pop
jnp
pavgw
push
and
iret
inc
sub
cmp
mov
or
stos
cwtl
sub
popa
bound
or
xchg
sub
in
cmpsl
or
dec
push
addb
call
sbb
in
or
daa
jecxz
pop
in
orb
je
scas
rclb
sbb
das
out
jne
push
aas
ret
adc
in
mov
cmp
and
push
cli
mov
add
xchg
jmp
adc
sub
dec
leave
push
jmp
xor
imul
cmp
adc
mov
incb
or
inc
fists
cs
xchg
or
rcll
das
inc
pop
pop
jl
in
insb
clc
xor
dec
sub
jns
inc
adc
sub
inc
xchg
adc
sub
jecxz
mov
ja
xor
cli
mov
and
andb
mov
aaa
add
mov
xor
mov
or
or
add
mov
xor
ret
or
jmp
stc
das
pop
sub
mov
cmp
filds
in
popf
or
mov
inc
xorb
push
or
lret
das
or
xor
adc
into
jp
or
fstps
add
xchg
das
xor
stc
mov
pusha
out
mov
popf
call
adc
or
leave
or
adc
adc
add
inc
test
aaa
aaa
jmp
nop
inc
shlb
push
and
fldcw
xor
cs
push
xor
mov
imul
sbb
inc
adc
rorb
imul
fs
fimull
or
mov
or
or
out
xor
or
pop
fs
out
xorb
jmp
adc
into
sub
add
loope
mov
adc
push
sbb
leave
repz
cmc
inc
into
xchg
pop
push
aam
add
push
push
ja
xor
or
adc
push
or
in
movsb
sub
dec
jbe
in
push
sbb
and
adc
xor
ret
push
wbinvd
jo
push
mov
adc
rep
js
push
pop
and
jns
cmp
imul
mov
addl
xorb
sti
add
cmp
jle
lcall
xchg
xor
push
ss
cwtl
xor
test
pusha
and
cmp
lret
or
cmp
nop
call
mov
cli
in
or
or
and
or
pop
sbbl
and
sub
sbb
add
and
adc
mov
sbb
mov
push
pop
xor
mov
sbb
fistl
mov
les
xor
pushf
xlat
mov
cmp
push
shl
es
cmp
xor
and
jb
pop
and
jg
add
lahf
scas
add
aam
in
inc
dec
and
lcall
mov
ret
or
rolb
inc
iret
inc
jne
xor
pushf
pop
loop
dec
and
sub
sti
dec
or
xor
out
and
fwait
das
xchg
cld
sbb
lods
ss
or
push
mov
aaa
sub
adc
mov
add
mov
out
xor
pop
test
daa
mov
rcll
jb
in
cwtl
xchg
add
pop
ljmp
xchg
xor
or
loope
fbld
sbb
aam
xor
mov
and
pop
lods
or
and
mov
fldl
mov
adc
cltd
mov
xchg
out
fildl
cwtl
lods
or
dec
and
jns
add
or
push
push
out
mov
call
push
popa
and
add
push
mov
lods
push
mov
pop
call
repnz
mov
lods
add
xchg
mov
pop
xchg
mov
sbb
test
sbb
jg
or
jmp
imul
les
push
inc
jns
movl
pusha
pop
orl
sub
pop
or
movsb
add
popa
inc
jo
mov
out
lea
inc
movl
sub
fcmovnb
sbb
scas
daa
cmp
push
adc
jge
lahf
out
pop
nop
add
icebp
sub
mov
add
xor
push
push
mov
push
sub
int3
adc
pop
ret
lea
dec
aas
xor
sub
testb
sub
into
leave
xchg
or
jo
push
mov
pop
inc
mov
mov
jnp
lds
add
ss
xlat
lds
adc
mov
imul
mov
or
ja
in
push
push
ds
mov
outsb
mov
inc
dec
fsubrs
mov
sub
iret
inc
adcb
adc
adc
sub
sub
add
adc
or
pop
inc
fcmovbe
add
cmc
icebp
aaa
inc
cmp
mov
ds
insb
daa
inc
push
sub
aad
in
xor
adcb
mov
test
das
add
sub
cwtl
pop
add
int3
cmpsb
push
pop
cmp
jns
sbb
or
adc
test
push
adc
cs
inc
scas
inc
lret
mov
dec
aaa
mov
fadd
and
adc
adc
enter
adc
shll
push
and
shlb
inc
fldcw
xchg
and
repnz
mov
adc
dec
mov
mov
adc
jo
in
pop
jecxz
nop
daa
jbe
cmp
rclb
fiadds
sub
insb
sub
sbb
pop
inc
imul
subb
push
push
and
mov
push
pushf
push
sbb
xor
dec
mulb
push
adc
mov
es
ret
add
pop
sub
pusha
jnp
xor
test
adc
movsl
add
push
cmp
push
shlb
sbb
ret
add
push
dec
pop
inc
or
jp
inc
shll
dec
fstps
xchg
cmp
cltd
pop
cmp
or
add
mov
loopne
or
movsl
xor
or
andl
jbe
testb
loop
or
loopne
xchg
enter
daa
inc
push
and
push
push
add
or
mov
sarl
ja
mov
cmp
add
add
mov
rorb
xchg
sub
cmpsb
pop
dec
gs
pop
ljmp
stos
jno
cmp
pusha
cmp
sbb
adc
mov
add
pop
sub
fisubl
xchg
xor
jl
sbb
add
call
lds
movsb
pop
in
adc
or
ss
mov
sub
cmp
xor
pop
movsb
push
add
sub
cmp
movsb
sub
jmp
into
lret
jae
mov
out
sbb
rorb
adc
out
adc
xor
xor
stos
sbb
push
in
in
and
cmpsl
push
mov
pop
add
ja
dec
imulb
push
inc
jmp
dec
or
mov
and
adc
test
add
dec
xlat
sbb
push
push
mov
sbb
mov
in
test
sbb
into
pop
push
sbb
lret
clc
mov
mov
stos
adc
dec
lods
cmp
mov
inc
push
insb
pop
cmp
adc
push
popl
or
into
shrl
inc
mov
adc
jb
je
sbb
cmp
bound
subb
in
and
call
leave
ljmp
and
add
xor
push
xchg
es
faddp
pop
rclb
clc
xor
push
daa
push
mov
add
jl
mov
pusha
xchg
stos
or
sub
sahf
cli
lcall
inc
das
mov
lock
cmp
dec
push
and
addb
out
inc
mov
and
out
sub
test
mov
test
sub
cmp
jl
xorl
inc
popf
das
add
cmp
xchg
ret
push
push
xor
sub
cmp
xchg
push
pop
dec
adc
and
ljmp
rolb
out
loope
or
lods
or
repnz
jl
mov
repz
fisubs
xchg
inc
sub
subb
mov
aas
and
sbb
sarl
aaa
adc
punpckhbw
sub
sub
pop
pop
xchg
hlt
jno
testb
aad
stc
clc
popa
out
add
out
insb
mov
xor
xchg
stos
push
sub
or
inc
out
cmp
insl
fnstcw
adc
and
mov
dec
jmp
and
leave
dec
dec
jnp
pop
aas
xchg
push
add
pop
das
movsl
mov
add
add
xor
fcmovb
fisubrs
or
test
cs
jne
mov
inc
sub
xor
in
sbb
lret
sahf
popf
or
fistpll
sub
jo
loope
pop
xchg
adc
mov
and
mov
or
jmp
sti
int3
pop
test
push
and
dec
sbb
push
scas
add
repnz
xor
add
daa
push
adc
test
cmp
pop
or
movsl
ret
and
lret
or
dec
and
das
fdivl
lret
sti
sub
cmp
sbb
movsl
movsl
sbb
dec
push
out
mov
and
push
int3
fmul
sub
or
in
and
jecxz
xlat
adcl
lret
push
sbbb
cmp
ds
dec
and
lock
dec
mov
pop
and
mov
mov
jo
or
ret
adc
sti
bound
dec
and
nop
sub
dec
cmpsl
sub
push
mov
push
or
sbb
sbb
andb
pop
fidivrl
iret
add
ret
out
push
aas
sbb
inc
cld
push
or
bound
popa
push
cmp
out
fiadds
pop
and
daa
or
sbb
das
sarb
repz
scas
add
push
sub
jnp
inc
or
mov
rcll
jae
cmp
sub
or
add
into
or
pop
les
inc
movsb
and
loope
sub
sbb
orb
mov
xor
add
jg
inc
pop
inc
ss
add
inc
sub
pop
rorb
xorl
adc
xor
lret
outsb
mov
sbb
mov
pop
cli
pop
xor
bound
xor
xor
lods
mov
add
sbb
or
mov
sbb
and
jmp
jo
mov
sub
cmp
and
loop
and
jle
mov
fidivl
push
adc
sahf
sub
dec
out
and
mov
mov
jb
clc
dec
pop
xchg
adc
popf
sbb
adc
das
xor
mov
sbb
inc
ret
xor
push
or
loop
mov
bound
push
popf
or
mov
push
ror
push
adc
pop
loop
mov
loope
xor
icebp
push
mov
mov
aaa
add
and
or
jecxz
subb
sar
fs
pop
lods
sub
mov
mov
sub
dec
pop
jp
ljmp
cld
cwtl
or
ret
adc
mov
mov
rcrl
insb
push
daa
add
ljmp
cs
cs
xchg
jle
or
or
xchg
loopne
push
cmp
mov
xor
sbb
mov
cmp
insl
or
add
push
sbbb
or
xlat
and
add
int3
imul
cmp
mov
pop
cmp
push
cmp
adc
lcall
or
loopne
jl
and
dec
push
das
push
ljmp
xorb
cld
mov
rcrl
and
dec
jp
sub
sub
inc
ds
mov
cmp
adc
js
or
sbb
mov
xor
adc
cmpsb
rol
cmp
sbb
push
adc
or
sbb
das
sbb
insl
dec
sub
out
test
jo
inc
sbb
loop
mov
mov
aad
cmp
add
into
mov
insb
pusha
push
add
mov
pop
cmp
insb
adc
or
inc
xor
mov
ds
popf
das
or
es
and
add
out
xlat
jne
inc
lret
mov
cs
sub
sbb
dec
insl
mov
in
and
and
push
dec
xor
ljmp
mov
sub
das
dec
jl
in
lcall
mov
and
lret
movsl
push
jge
daa
loope
pop
mov
and
pusha
cmovns
mov
outsb
adc
cmp
push
jb
lea
rcll
and
cmp
lahf
dec
or
or
jb
xchg
dec
mov
int
add
jge
fsubrs
aam
mov
fbstp
push
jae
mov
inc
push
shll
outsb
or
add
sub
andl
add
xorb
and
adc
cmp
mov
sarb
aas
repz
aas
adc
sbb
sub
fcoml
test
into
pop
inc
and
in
mov
in
or
sbb
and
mov
add
mov
test
rorb
and
or
lods
add
call
inc
mov
add
mov
push
cmp
or
pop
or
pop
mov
es
xor
mov
pusha
sbb
inc
ss
ret
add
pusha
inc
push
movl
adc
cmp
popf
pop
xor
mov
das
pop
push
into
sub
add
sbb
xor
push
push
dec
adc
das
mov
cmp
inc
clts
xchg
dec
dec
sub
dec
mov
or
cmpsl
adc
xor
ret
daa
or
xor
push
sub
xor
push
and
pop
cmp
dec
jl
je
xor
mov
roll
leave
iret
or
andl
xchg
or
xor
or
add
std
or
pop
inc
cmp
cmp
scas
lret
test
adc
icebp
test
adc
cmp
dec
push
lahf
push
sbb
inc
sbb
aas
dec
xor
xor
and
mov
cwtl
push
xor
mov
mov
pop
popa
xor
or
lods
pushf
mov
or
sbb
inc
jne
push
test
or
in
and
ret
and
mov
dec
push
cld
pop
or
fistl
dec
out
bound
out
xchg
xchg
aas
das
popa
popl
cmp
adc
addr16
sbb
and
jnp
pop
test
add
mov
push
cld
push
les
das
rcrb
int3
lahf
or
fstl
ss
xor
inc
jmp
add
adc
sub
ss
sbb
sbb
sub
cmpsl
pusha
cwtl
jle
call
and
test
pop
push
test
cmp
ds
movl
add
xor
adc
and
lahf
and
push
mov
xlat
sbb
xor
stos
and
push
rcl
xor
push
sbb
fdivrl
dec
push
rorb
sub
shl
cmp
movsl
leave
push
dec
inc
cmp
cmp
inc
aam
push
inc
add
or
lret
rcll
add
or
xchg
aad
xchg
cmp
das
push
daa
sub
mov
add
stos
out
clc
pop
xchg
into
pop
or
andb
or
loopne
jns
cmp
xchg
and
int
push
loope
and
or
pop
sub
and
jg
sub
xor
enter
xchg
arpl
push
mov
lea
sbb
rol
adc
scas
add
adc
outsb
outsl
sub
into
mov
ja
and
popa
cwtl
jb
mov
sub
add
or
or
pop
and
pushf
xchg
outsb
jl
sbb
jp
sub
leave
mov
push
cltd
jns
cmp
loope
mov
cmpsl
pop
sti
repz
cmp
jae
and
fiaddl
pop
jmp
dec
xchg
add
shll
push
ret
adc
jo
adc
pop
inc
push
mov
and
inc
dec
xor
adc
rcrl
push
ss
mov
cmp
loopne
dec
mov
lret
xor
inc
dec
test
popa
adc
lds
adc
fldenv
and
push
cmp
pop
in
add
aad
or
xchg
mov
xor
test
mov
inc
jl,pn
or
and
stos
rcll
mov
pop
movsb
cmp
xchg
and
jmp
push
aaa
pop
jle
shl
xor
sbb
daa
sbb
in
adc
mov
rclb
jb
and
adc
sub
pop
cmp
push
sub
mov
xchg
sub
lds
sub
pop
jns
inc
push
mov
and
jno
rcrl
push
pusha
sbb
mov
cmp
mov
inc
loopne
adc
add
fdivp
sub
js
cmp
dec
xorb
nop
cwtl
mov
sub
fldl
imul
cmp
pop
add
test
repz
cmp
data16
xorb
dec
or
test
xchg
mov
adc
dec
pop
mov
add
mov
adc
or
shr
mov
push
xchg
lahf
in
mov
pop
add
mov
cli
inc
adc
adc
test
sbb
fmulp
cmpsl
pop
daa
push
jnp
add
pushf
icebp
xchg
adc
pop
push
cmp
add
iret
sub
xor
notb
lds
cmp
fsub
dec
sub
test
pop
push
in
cwtl
push
add
adc
pop
shll
mov
pushf
xor
daa
pop
adc
cmp
cmp
add
shll
xor
les
fs
adc
cs
mov
sbb
mov
xchg
aas
iret
dec
xor
add
cs
pop
inc
xchg
or
pusha
sub
pop
mov
sub
cmp
int
pop
jp
pop
or
sbb
or
xchg
jmp
andb
push
dec
lcall
sbb
push
fdivl
aas
rcrl
jle
xor
cmpb
loop
sbb
cmc
ror
scas
mov
inc
adc
imul
shrl
push
sub
mov
sbb
test
pop
fisttpll
lret
adc
testb
aam
push
movsb
and
xor
xchg
leave
loopne
mov
xor
cmp
testb
pop
push
dec
cmp
adc
mov
sub
xor
lcall
out
mov
and
mov
les
pusha
sub
dec
aaa
nop
cmp
xlat
ljmp
jo
adc
repnz
pop
test
or
ret
or
push
pop
sub
xor
cmp
out
and
or
sub
out
stc
and
scas
test
pop
cmp
mov
inc
dec
clc
or
add
rcrl
cmpl
add
and
and
inc
push
pop
nop
aas
inc
and
das
js
mov
andl
mov
pusha
aas
mov
dec
ss
adc
push
push
and
je
rcll
add
add
and
inc
dec
sbb
cmp
xchg
mov
es
add
into
out
or
mov
mov
adc
xchg
leave
and
sarl
add
sub
push
nop
aas
sub
sub
ficoms
shlb
scas
ss
hlt
inc
push
inc
push
mov
sbb
add
pop
push
inc
pop
scas
aad
cmp
adc
push
js
mov
das
mulb
inc
cmc
aas
pusha
cmpsb
lods
call
mov
pop
jns
push
ds
jge
add
pop
push
dec
mov
and
lahf
mov
gs
add
inc
push
in
xchg
mov
and
sbb
jge
iret
sarl
test
call
sbb
mov
sbb
lods
cmp
testb
daa
pop
fmuls
outsb
jge
daa
les
mov
in
push
sbb
xor
xor
mov
packuswb
inc
sub
push
pop
and
stos
mov
cmc
cmp
jle
cmp
test
dec
lock
or
cmp
inc
leave
das
sbb
mov
lcall
sbb
les
xchg
popa
or
cmp
push
mov
xor
xchg
sbb
loopne
or
xor
imulb
inc
dec
adc
and
push
or
insl
popa
adc
bound
xor
dec
call
adc
in
mov
or
lcall
movsb
or
xor
sub
faddl
sbb
call
sub
mov
jbe
push
adc
mov
loop
push
mov
mov
cmp
and
jo
sbb
push
push
pop
or
movsl
pop
jg
cmp
add
das
jmp
pusha
ss
sar
fnsave
push
out
int3
adc
xor
dec
fsubs
decl
jne
push
jb
mov
sbb
int
je
ret
xor
or
mov
mov
rorb
cmp
sbb
cltd
push
or
sub
adc
pop
sarb
xor
sarb
imul
pushf
adc
ficoml
or
loopne
repz
xchg
adc
dec
movsl
es
inc
cs
adc
aaa
cld
add
sbb
fisttpll
divl
mov
loope,pt
lcall
push
fisubrl
cltd
in
xor
pop
adc
sub
dec
dec
shrb
adc
sbb
push
or
subl
push
ds
xchg
sub
adc
inc
xor
and
test
and
addr16
ficoms
inc
xor
sub
inc
filds
jg
shlb
sub
push
adc
lds
loope
mov
cld
ja
cmp
jo
pop
and
mov
into
lahf
and
arpl
test
jle
or
cmp
pop
or
les
sbb
xchg
pop
jns
or
inc
pop
jl
pusha
xor
add
out
mov
sbb
add
clc
bound
test
mov
add
je
and
cld
pop
xchg
add
push
mov
cmpsl
mov
add
in
sbb
sbb
into
xchg
sub
aaa
imul
cltd
adc
int3
pop
add
std
jne
mov
xlat
push
add
ret
cld
xchg
es
and
adc
sbb
rolb
or
add
sbb
dec
sub
xchg
pop
push
and
or
adc
sbb
lds
cmc
push
cmp
add
pop
orl
xchg
sahf
adc
hlt
nop
inc
or
cmp
movsb
movsb
cmpsb
sbb
push
fstl
or
mov
jecxz
data16
loop
test
sub
adc
insb
sbbb
adc
ss
inc
sub
cmp
dec
mov
lret
pop
xchg
push
mov
inc
cmp
adc
inc
loop
pop
push
rorl
jmp
add
inc
xor
push
pop
test
loopne
and
jp
cwtl
push
sbb
sbb
adcl
or
into
dec
ret
xchg
inc
sbb
mov
mov
pop
add
inc
pop
movsl
sbb
mov
xor
jb
fistps
aam
add
push
xchg
adc
push
ja
cmp
outsb
sub
test
iret
cmp
frstor
add
das
fsubp
xor
das
xor
stos
mov
int3
outsb
sub
cmp
shlb
add
mov
xor
scas
push
mov
and
adc
pop
pusha
bound
shlb
pusha
dec
jg
les
sub
ds
jp
lret
arpl
or
pusha
ret
xor
popf
repz
cs
sbb
sbb
arpl
jb
jmp
fstpt
xchg
xor
in
mov
and
xor
pop
mov
les
and
push
sbbb
jge
xchg
push
add
imul
and
test
push
cmp
mov
fcomps
out
movl
add
and
sub
mov
mov
xchg
push
sub
xchg
pop
xlat
and
sub
push
mov
sbbl
and
jno
mov
add
ret
pop
mov
add
adc
stos
insl
inc
push
add
popf
fcmovb
and
xor
pop
mov
hlt
subl
adc
subb
inc
ds
add
aaa
mov
fucomip
pushf
inc
ds
lds
cmp
or
mov
inc
xor
cmp
or
mov
shlb
xor
add
push
cmp
xchg
xchg
cmp
aas
add
pop
push
add
mov
stos
test
sbb
adc
jae
and
and
insb
outsb
and
repnz
or
pop
inc
and
adc
adc
pop
push
lret
push
dec
push
sub
or
cmp
es
dec
push
lret
jne
pusha
xchg
cs
dec
xor
or
or
out
adc
mov
xor
leave
sub
addl
enter
inc
xor
das
or
cmc
xor
inc
sbbl
out
add
inc
adc
sarb
fwait
xchg
cmp
sbb
adc
mov
and
ss
push
sub
das
xor
frstor
or
ret
nop
into
lcall
or
sbb
adc
and
aad
dec
and
shll
mov
xor
xchg
adc
cmp
fsubrl
inc
imul
andb
jo
sbb
dec
pop
loope
sub
lds
pop
insb
add
mov
int3
and
mov
aas
repz
pop
fbstp
adc
pop
enter
sub
inc
test
inc
lahf
cmp
add
mov
add
lret
inc
sub
cmpsl
cltd
mov
xor
jmp
add
and
lock
cli
adc
mov
push
jo
push
aaa
mov
scas
cmp
aad
pop
xchg
sbb
inc
iret
cmp
adc
rol
xor
dec
push
push
loope
sub
and
mov
pusha
test
adc
mov
fldt
and
and
sub
cmpsl
adc
jge
mov
pop
aad
das
js
or
adc
outsl
xor
mov
js
push
push
scas
mov
fcomps
and
push
cli
js
popl
mov
das
arpl
and
and
lea
pop
inc
int3
int
loope
sbb
push
add
pop
inc
pop
jle
push
xchg
jnp
xorb
sti
sbb
adc
std
mov
mov
mov
mov
aaa
add
pop
push
inc
test
ds
shrb
ret
adc
testl
dec
scas
push
xchg
adc
imul
or
fldenv
sub
les
xchg
fs
fdivl
int3
mov
imul
cmp
mov
std
sub
insb
add
lea
leave
jo
or
out
sub
or
test
leave
inc
push
dec
mov
and
push
jo
lock
xchg
push
popa
sub
or
ficoml
insb
dec
aam
add
pop
pop
adc
cmp
add
cvtpi2ps
ds
push
xlat
sbb
shrb
sbb
sub
and
sub
sahf
inc
push
fdivrs
mov
pop
adcb
jmp
pop
and
adc
inc
xor
and
ds
push
imul
cmp
popf
cmp
test
adc
push
lds
mov
inc
adcl
aad
sbb
repnz
lea
test
or
mov
jb
jb
iret
call
mov
andb
fadds
or
repz
add
sbb
out
cmp
cmp
mov
adc
push
xchg
sbb
pop
cs
cmp
mov
imul
pop
adc
das
rolb
mov
or
sbb
and
xchg
and
dec
cmp
pop
and
cs
adc
cmp
cmp
out
sbb
ss
xor
arpl
test
aad
sub
shl
adc
pop
lahf
cmp
addr16
xor
aad
dec
xor
adc
push
cli
cmp
xchg
outsl
add
andb
push
add
lea
add
aad
sub
push
cmp
lea
xor
pop
in
shlb
cmp
cwtl
adc
xor
adc
jno
addb
xor
cld
in
lret
dec
push
or
xlat
or
cmp
sub
je
pushf
sahf
fimuls
or
sbb
push
xchg
adc
push
out
cmp
ret
xchg
push
pop
xchg
and
jle
cmp
and
pop
and
pusha
sbb
jne
jg
mov
adc
dec
lcall
mov
stos
pop
cld
and
sbbl
or
xor
cmp
cmpsb
or
in
push
aas
icebp
ret
push
call
adc
stos
ss
pushf
xor
icebp
js
jnp
nopl
or
pop
sbb
sub
push
sbbb
lcall
sbb
mov
stos
test
sbbl
push
xor
lret
push
sbb
push
sbb
pop
push
or
pop
jb
test
sub
int3
xor
pop
sbb
push
imul
lods
adc
leave
add
daa
or
jnp
add
xor
pop
js
pushf
cmp
jb
cmp
push
sub
cmp
sub
xor
add
pop
adc
jecxz
arpl
push
mov
sahf
mov
mov
or
adc
sub
push
or
cmp
adc
adc
or
and
cwtl
rorb
add
cmp
xorl
fimull
adc
scas
and
inc
testl
sbb
insl
nop
dec
jbe
ret
add
mov
mov
add
je
push
sbb
cmp
add
sub
test
pushf
or
loope
push
cwtl
jp
lret
adc
pop
in
cmp
lcall
movsb
push
loop
or
pop
ret
cmp
adc
leave
mov
daa
push
push
xchg
and
shlb
add
jo
sub
sar
das
test
cmp
notb
aad
jmp
xor
adc
jmp
das
insl
rorl
mov
sbb
incb
into
add
ss
orb
std
and
jb
mov
aam
pop
push
mov
dec
out
aas
cmpb
mov
cmp
or
push
mov
cmp
lcall
jae
push
idivl
das
sbb
pop
cmp
loopne
mov
shlb
sub
shll
mov
and
sti
adc
sbb
les
sub
add
xor
inc
push
movsb
xor
mov
inc
das
dec
or
dec
in
push
cmp
pop
and
sti
test
jno
nop
xor
fiadds
and
push
adc
inc
test
jmp
sarl
push
test
xchg
adc
add
xchg
xor
sub
mov
adc
and
and
insl
leave
push
push
xor
shlb
das
outsb
lock
adc
xchg
and
pop
lcall
adc
je
sbb
cmp
pop
test
roll
sub
ret
xor
xor
mov
push
or
mov
mov
outsl
add
xlat
xor
xor
out
push
add
xchg
sbb
adc
orb
lods
xchg
xor
mov
mov
or
out
ret
jl
sbb
jmp
jp
push
push
xorb
mov
into
jnp
inc
aas
dec
xor
aas
cmp
and
pop
sub
and
call
push
xor
movsl
roll
sbb
adc
fsubs
and
or
sbb
push
xor
mov
sbb
outsb
mov
pop
daa
jb
nop
xchg
adc
add
mov
cwtl
pop
push
rclb
sbb
loop
sbb
ficomps
xor
lret
xor
lahf
ds
mov
cmp
out
pop
sbb
test
leave
rcll
push
ror
xchg
and
mov
dec
jb
scas
sub
call
push
imul
sub
xor
mov
sub
lods
bnd
cmp
test
sub
mov
sub
mov
sbb
arpl
xor
sbb
adc
adc
sub
jecxz
sbb
loop
test
jge
adc
ja
mov
push
int3
sub
adc
add
stos
add
fs
inc
push
cmpsb
lcall
or
cmp
lock
mov
adc
xor
repnz
or
aad
pop
shlb
cmp
jbe
or
in
mov
das
stc
or
mov
xor
xchg
or
cmp
sub
ss
and
and
loopne
xchg
add
repnz
and
pop
fmulp
mov
pop
dec
fiaddl
and
sub
xchg
push
mov
adc
adc
add
sub
aam
dec
or
add
and
in
push
add
lock
add
loop
fs
aaa
xchg
and
or
lret
pop
xchg
lods
sbb
les
stos
add
fisttpl
sub
mov
pushf
cmp
mov
mov
mov
cs
enter
xor
add
mov
adc
sahf
pop
loopne
test
xor
xchg
push
sub
in
fisttpl
sub
mov
mov
es
xchg
jb
and
jno
or
les
test
mov
push
shlb
pop
call
sub
das
imul
add
pop
sbb
xchg
sub
jg
mov
ret
or
lock
movsl
and
push
sub
cmp
daa
mov
sbb
push
add
popa
add
cmp
or
cmp
dec
and
or
cmp
ret
gs
dec
cmp
cmp
roll
sbb
mov
or
mov
sub
or
fcmovu
rcl
inc
or
and
jmp
and
bound
scas
les
cmp
adc
jno
aam
lret
pushf
dec
add
jmp
sub
mov
ss
mov
and
xor
mov
cmp
dec
mov
lret
xor
adcb
adc
push
mov
popf
xor
push
or
jecxz
popa
and
lret
ret
or
pop
push
mov
mov
ret
test
incb
into
mov
out
fldt
sbb
xor
mull
testl
cmpsb
add
repnz
xor
stos
add
cwtl
in
adc
in
mov
sbb
xchg
int3
xchg
popf
push
daa
sbb
dec
push
adc
add
mov
adc
add
or
add
mov
or
and
cld
leave
iret
mov
or
js
jg
cmp
daa
push
insl
xchg
sbb
push
sbb
popa
pop
jg
push
lahf
xchg
adc
sbb
pop
or
rcrl
adc
fcoms
bound
and
pop
int
inc
jb
push
cmovno
mov
dec
daa
das
pusha
sbb
and
lcall
aas
ret
xor
pop
setp
fmul
sub
push
clc
mov
pop
das
sahf
xor
pop
and
add
daa
fldl
lods
mov
inc
sbb
cmp
ds
jne
cmp
scas
mov
rorl
call
pop
nop
cmp
push
jl
and
add
adc
adc
out
mov
lds
mov
xor
pop
mov
dec
inc
das
push
repnz
pop
adc
cs
nop
int3
cmp
dec
call
scas
bound
push
or
fwait
cs
dec
rorb
ret
xor
adc
sbb
xor
or
sarb
loopne
xor
fidivs
push
jp
cltd
cs
notl
adc
dec
push
add
dec
das
cmpsb
into
inc
mov
pop
sub
pop
add
xchg
adc
dec
dec
push
jmp
in
sub
cmp
and
adc
movb
cmp
daa
sub
addb
shlb
aas
jle
inc
push
or
ds
dec
fcoml
into
ltr
mov
inc
cmp
leave
shlb
or
dec
jg
push
shll
cmp
or
pop
es
sub
jo
icebp
jnp
fiaddl
dec
push
cmp
pop
test
jp
sub
leave
loope
xor
xchg
jo
cmp
test
xchg
notb
ds
pop
dec
sub
cwtl
adc
push
push
sahf
ret
adc
and
js
xor
sbb
pop
pop
scas
inc
ds
xchg
or
aas
and
mov
add
jbe
cmp
add
movsl
jo
xor
sub
adc
jge
lret
test
not
add
shr
ret
pushf
pusha
cmpsb
jl
adc
ljmp
or
stos
push
dec
test
mov
mov
add
ficoms
add
cmp
das
test
lret
inc
pop
sahf
xor
loop
and
xor
fidivrs
and
jle
pushf
stos
mov
test
fimull
movsb
rcrl
xor
sub
inc
sub
mov
xchg
add
clc
inc
sub
sbb
and
or
adc
out
sbb
and
call
cmp
and
jecxz
in
testb
rorl
or
xchg
jno
out
call
clc
shlb
mov
or
push
int
popa
in
cmp
das
addr16
xor
and
mov
and
mov
xchg
mov
xchg
sbb
mov
sbb
ret
add
out
xor
add
test
xor
cmpb
repz
add
sbb
and
dec
iret
sub
out
or
pop
or
call
enter
sbb
int
in
jns
xor
sub
sub
xchg
xor
pusha
and
pop
mov
cmp
inc
in
movb
adc
push
adc
xchg
loopne
cmp
ljmp
sub
ret
sub
shll
or
sbb
imul
jno
add
mov
cmp
cmp
xchg
jae
sub
ss
ljmp
jo
lock
inc
fstpt
sub
xchg
lods
or
adc
push
xchg
ret
push
xor
retw
push
dec
mov
ret
mov
add
xchg
push
adc
lret
sbb
sbb
sbb
lret
int
adc
mov
rcrb
sub
push
cmp
or
add
sbb
sbb
dec
adc
loope
xor
adc
dec
pop
jo
sub
xchg
mov
or
rcrl
mov
dec
scas
or
addl
adc
and
or
push
or
adc
pop
mov
cmp
idivl
cmp
jb
cld
lds
ss
add
shr
or
lds
int
xchg
cmp
cmp
xor
xchg
sub
jnp
xor
out
xorb
push
pop
sahf
or
ljmp
pop
xor
cmp
adcb
mov
test
fld
xchg
rcrb
mov
add
cmp
movsl
adc
ds
cwtl
ds
pop
pop
or
std
aas
sub
inc
daa
adc
daa
mov
sub
es
pop
sarb
fdivl
inc
xorb
adc
fisubrl
xorb
cmp
adc
push
xchg
scas
test
pop
sbb
cltd
pop
das
or
dec
cmovo
and
xor
sub
add
add
mov
aas
pop
jg
shlb
ret
pop
lcall
mov
lds
xor
xor
fisubrl
roll
lods
push
lret
xor
addr16
std
roll
fcmovnbe
lods
push
push
mov
or
push
pop
sbb
dec
pop
inc
mov
fwait
shlb
or
adc
dec
cmpb
add
dec
or
and
jg
rcll
xor
dec
add
push
cmp
movb
or
mov
cli
mov
and
sbb
insb
hlt
mov
sarl
adc
dec
push
inc
and
jae
rcll
pop
xchg
jmp
and
xor
pop
das
scas
lds
pop
ds
or
jo
pusha
adc
sub
test
xchg
push
xlat
add
out
pop
inc
push
cmp
xor
and
aam
popa
ds
pop
push
and
add
pop
sub
sbb
sub
mov
adc
inc
das
and
or
inc
fiaddl
cmp
adc
aas
aam
push
inc
xchg
aaa
test
xlat
or
daa
add
loopne
xor
lods
and
push
add
or
mov
add
jae
pusha
or
pusha
lret
and
sti
sarb
pushf
push
shrb
jg
adc
inc
scas
out
cmpsb
mov
loop
adc
dec
xor
jo
sub
push
adc
or
jne
adc
jl
stc
xchg
push
xchg
adc
add
lret
ret
pusha
cmp
sbb
sbb
jnp
cmp
das
jne
or
mov
and
out
adc
cmp
inc
jmp
and
mov
cmp
scas
jno
sti
or
pushf
testl
mov
or
ds
mov
xor
xchg
leave
out
je
shl
das
jecxz
or
movsb
enter
xchg
int
sbb
push
pusha
xchg
xchg
sub
and
and
mov
aas
adc
ret
and
pop
inc
and
out
push
add
cmp
xor
or
rcrl
mov
and
add
sub
lahf
in
mov
outsl
mov
sbb
notb
cltd
jns
pop
sub
scas
sub
add
ljmp
fistps
es
ds
ss
cmp
iret
pop
mov
loop
add
incb
dec
and
movsl
punpcklbw
mov
mov
sbb
sub
and
add
push
sbb
push
cmp
ret
cmp
adc
xchg
and
ds
mov
mov
and
cmp
cwtl
sbb
aas
dec
jo
and
and
sub
aas
into
shrb
mov
cmp
or
jae
flds
jo
sbb
push
gs
adc
pop
popf
mov
int3
ret
cmpl
sub
lea
jmp
les
dec
inc
andb
push
dec
test
test
adc
les
and
inc
xor
adc
pop
sub
adc
add
int
and
dec
or
pusha
or
mov
push
or
xorl
sub
sbb
xchg
xor
outsb
and
sbb
or
cmp
in
repnz
pop
jo
dec
adcb
push
lcall
adc
pop
insb
jbe
push
add
or
xchg
push
jns
xor
cmpb
adc
icebp
sub
into
push
insl
or
out
inc
pop
dec
test
add
adc
in
ss
xor
popf
test
add
es
xchg
or
or
or
mov
inc
addb
test
cltd
push
xor
push
dec
loop
popf
adc
pop
fisttps
add
adc
clts
imulb
cmpsl
push
adcl
push
adc
adc
inc
std
or
hlt
stos
push
sub
mov
pop
or
xchg
loope
fbld
adc
idivb
data16
nop
sub
xchg
test
push
xchg
push
mov
adc
pop
popa
xor
and
mov
push
lret
jl
enclu
jg
add
and
dec
cmp
into
adc
fisttpl
mov
and
das
or
mov
mov
push
adc
mov
ror
lcall
sub
pusha
sbb
and
insb
imul
inc
push
adc
mov
adc
sub
or
sub
pop
scas
adc
dec
fbstp
add
sub
mov
add
into
scas
adc
pop
cmp
adc
xlat
stos
mov
and
mov
sbb
cmp
call
adc
cmp
sbb
cmp
mov
inc
or
and
mov
sub
cmp
test
ds
pop
popa
aas
repz
mov
adc
sub
into
xor
pusha
in
dec
fwait
lods
inc
xchg
adc
popa
faddp
int3
jnp
push
aam
push
cmp
or
repnz
dec
xchg
sbb
xchg
pop
inc
das
scas
shl
push
jo
cli
rorl
dec
and
add
stos
cmp
fwait
jl
loop
pushf
aaa
pop
ds
mov
ficoms
push
and
mov
and
pusha
popa
adc
mov
jmp
or
push
sbb
std
push
dec
inc
out
js
add
inc
cld
cmp
mov
cmpsl
inc
icebp
repnz
jne
add
jmp
mov
sub
sbb
add
and
mov
aad
and
mov
outsb
fs
jnp
and
add
pop
add
rcr
popa
push
push
and
and
and
pop
shlb
std
pusha
or
jp
cs
stc
or
subl
incl
repnz
mov
test
filds
fstpl
shrb
ret
xchg
je
sbb
adc
adc
inc
cmpsb
jecxz
ss
xor
rolb
das
inc
js
in
loop
ret
xor
das
mov
cmp
mov
xchg
jl
dec
cmp
loopne
aaa
loop
popf
add
xor
add
pop
mov
mov
xor
mov
repnz
pop
push
inc
pop
pmullw
addb
scas
lahf
jg
and
push
mov
adc
imul
xor
into
mov
push
repz
adc
sub
adc
adc
outsb
mov
mov
test
test
add
inc
sub
sub
sub
xchg
or
xchg
inc
out
xchg
out
push
inc
cmpsb
pop
and
adc
leave
fwait
pushf
sbb
fisubs
in
bound
lods
xor
lods
or
sahf
push
daa
adc
fimuls
sub
subl
adc
mov
add
dec
repnz
cmp
or
mov
sahf
xor
mov
test
mov
mov
loope
cs
idivb
sub
mov
and
cli
sub
in
lods
xor
out
mov
xorb
bound
adc
and
lahf
add
loop
cmp
in
xchg
cmpsl
adc
push
bound
mov
iret
push
inc
sbb
push
add
xor
push
test
insl
cmp
xor
ljmp
xchg
and
xor
test
push
shl
dec
cmp
push
jge
mov
and
inc
inc
out
sbb
mov
or
adc
mov
mov
mov
idiv
pushf
add
es
sbb
xchg
cmp
sbb
and
push
and
adc
xor
or
int3
clc
or
pop
shrb
addr16
adc
mov
pop
xchg
push
xor
mov
jg
repnz
inc
mov
cmp
push
dec
push
or
push
adc
dec
insb
pop
xchg
mov
add
adc
addr16
xchg
das
cmp
xorb
adc
sub
ret
and
ret
add
popa
pop
or
cmc
sahf
push
cwtl
out
shr
add
popf
leave
add
add
shlb
pop
xor
out
add
lahf
das
inc
jae
push
or
xchg
cmp
hlt
or
lret
repnz
mov
out
adc
loope
push
pop
xor
sbbb
aad
pop
mov
xorb
adc
sub
lds
and
bound
pop
test
xor
outsb
js
loop
ret
add
mov
xlat
cmp
sub
or
add
inc
js
mov
fiaddl
testl
xchg
inc
adc
dec
or
cli
push
push
sahf
jecxz
out
and
leave
pushf
push
subl
push
rorl
fs
adc
sbb
pop
mov
xor
ss
xor
sub
daa
subb
cs
add
xor
inc
sub
xchg
sub
test
dec
add
popa
data16
out
or
pop
pop
shll
std
ret
repz
jmp
add
cmpb
and
jno
mov
dec
mov
imul
push
cmpl
movsb
jbe
xor
cmc
mov
sbb
sbb
jl
cs
or
pop
xchg
mov
xor
pop
cmp
pop
pop
test
or
push
rolb
aad
leave
dec
sti
pop
or
cmp
push
popf
and
xor
mov
mov
adc
into
stos
adc
and
or
call
cmpb
xor
fcmovnb
mov
add
in
bound
ds
mov
leave
popf
or
jmp
ss
xor
dec
cmp
js
dec
dec
sbb
aas
push
arpl
or
xor
mov
or
scas
subl
mov
and
inc
ss
ficoml
jmp
inc
jno
adc
fistpll
rcrb
fs
push
xor
inc
mov
pop
inc
aas
dec
addl
inc
sub
incb
dec
cmp
xchg
mov
incb
xor
outsb
adc
xchg
jb
adc
push
nopl
sub
fidivs
pusha
notl
cmp
cmp
xor
stos
or
loopne
scas
rcll
es
or
push
xor
cmp
inc
dec
sub
dec
sbb
push
xchg
sub
dec
cli
jno
sub
add
repnz
adc
lret
push
and
sub
push
mul
ss
lods
sub
jp
mov
fisttps
and
or
xor
pop
mov
adc
shl
imul
jmp
lahf
mov
lret
push
xlat
mov
rclb
and
sbb
js
std
insl
push
adc
notb
pusha
push
rcll
add
jne
jo
loop
cmp
cwtl
pop
andnps
pop
lahf
xor
or
test
sbb
pop
xchg
mov
or
xchg
add
jno
stos
and
stc
sbb
cwtl
push
and
ja
cmp
rol
cmp
pusha
jecxz
mov
or
cld
data16
push
scas
into
popa
push
imul
out
je
push
into
and
pop
pop
xchg
in
lods
cmp
test
mov
or
xor
ficoml
and
int3
xor
jnp
mov
roll
or
addr16
arpl
aaa
xor
pop
xchg
or
adc
ret
mov
xorb
mov
sub
xor
sub
jbe
and
pop
imulb
scas
inc
cmp
or
ss
invd
sbb
and
sahf
add
inc
xchg
stos
dec
cmp
add
add
into
rcl
jne
or
fcoms
jo
into
xchg
and
add
cli
fsubs
andl
aas
lods
sbb
push
pop
or
addr16
lds
or
ss
sbb
pop
mov
cmp
jg
dec
push
push
aaa
js
shll
daa
add
subl
dec
push
inc
jno
movsb
or
xor
je
out
dec
adc
cmp
sbb
cmp
push
add
sub
sahf
test
aaa
daa
push
sub
pop
inc
je
gs
fmuls
cmpb
in
add
sub
adc
inc
pop
sti
aam
shll
sub
inc
ja
or
bound
fisubl
inc
ds
es
mov
inc
or
js
push
or
xor
sbb
mov
ret
adc
pop
pop
xor
orl
mov
add
aad
shll
and
daa
xchg
xchg
adc
sahf
movsl
lret
stos
bound
jne
xor
dec
dec
enter
mov
sub
xchg
sub
data16
stc
int3
das
rcrl
pop
ret
sub
and
fisubrl
add
test
mov
cmp
into
and
shr
jae
mov
test
ficompl
dec
adc
inc
imul
das
inc
repnz
and
ret
gs
cli
mov
push
scas
jns
cmp
and
mov
xor
sub
mov
ljmp
scas
inc
add
jno
sbb
push
mov
adc
adc
mov
xchg
fistl
subb
push
xorb
add
cmpsl
sbb
and
filds
and
or
adc
add
add
pop
lahf
andb
les
das
fidivrl
mov
adc
xchg
push
add
adc
dec
mov
or
mov
fiaddl
jo
jne
inc
mov
xchg
popf
fnstenv
cmp
repnz
push
and
xor
incb
int3
dec
lret
ficompl
std
add
mov
add
and
xchg
test
and
xchg
add
and
sbb
adc
sbb
mov
or
dec
or
imul
sub
jo
in
and
sti
or
mov
fwait
or
fwait
in
ds
ds
adc
push
repz
push
ret
das
cmp
icebp
into
outsb
fstl
and
xor
add
movsb
push
adc
aas
xorb
les
testl
dec
push
cmp
lods
xor
xor
pop
or
and
cwtl
sub
sbb
adc
in
insl
mov
add
loope
orb
les
stos
push
adc
sub
ret
push
pusha
mov
lods
in
jb
pop
adc
inc
pop
push
cmp
testb
jl
inc
and
pop
push
ret
cmp
fucom
sub
pop
sub
inc
das
xchg
cmp
jbe
adc
les
add
or
inc
and
sub
fildl
cmp
lock
leave
dec
mov
jle
xor
pop
inc
mov
cmp
das
lea
mov
sbb
xchg
mov
adc
pop
sbb
add
rclb
mov
or
xchg
and
rcr
sub
jmp
mov
push
pusha
cmpsl
pop
dec
lahf
jl
aas
dec
push
or
mov
push
not
or
mov
xlat
js
inc
pop
enter
jno
repnz
xor
xor
ljmp
fisubrs
jmp
das
jle
adc
ret
filds
xchg
jns
cmp
pusha
add
pop
dec
andb
sub
nop
rolb
decb
xor
movsb
inc
add
lahf
and
mov
icebp
or
ds
push
push
jg
cmp
dec
movsl
psraw
icebp
loop
xor
inc
jae
lea
cmp
cmc
or
add
pop
push
test
cmp
xorl
fisubl
push
idivl
addb
inc
nop
add
adc
sub
pop
mov
and
bound
frstor
inc
xor
add
jo
jne
fcoml
inc
lahf
adc
sbb
xor
cs
dec
push
add
mov
pop
test
inc
xorb
add
mov
and
add
or
in
and
adc
sbb
push
sub
pusha
lds
rolb
in
cmp
jmp
daa
jb
or
lock
dec
cmp
mov
xchg
lea
and
cs
sbb
xor
push
push
ret
and
pusha
test
push
inc
cli
js
add
bound
and
iret
cmp
inc
mov
test
xchg
or
pop
or
adc
test
xor
sub
mov
cmp
mov
adc
pop
push
jecxz
push
fdivr
daa
adc
arpl
scas
pusha
sbb
inc
adc
aam
fwait
adc
cmpsb
sbb
sbb
out
ret
sub
lea
ljmp
in
cmp
cs
das
mov
hlt
push
or
lods
sub
fucomp
jl
movsl
cmp
jp
cmp
jbe
xchg
pop
inc
sbb
pop
data16
xchg
and
addl
adc
pop
sub
pop
dec
out
popf
cmp
and
dec
mov
pop
notb
add
mov
push
or
or
add
inc
and
cmpsb
arpl
mov
in
cmp
push
xchg
jb
fldt
jp
sbb
rclb
lret
ror
xor
std
mov
pusha
aas
push
shrb
xchg
and
mov
cmp
xor
inc
orl
pop
and
loopne,pn
imulb
test
mov
dec
sbb
pop
cmp
mov
push
pusha
movsb
rcrb
js
cmpb
sbbl
cmp
xchg
test
fidivs
imul
jmp
xor
mov
call
xchg
shll
pop
pop
add
fwait
call
inc
mov
ds
ret
das
pop
cmp
and
shlb
push
or
add
pop
or
scas
or
and
pop
push
mov
push
pop
ret
or
xor
ja
cmp
aaa
gs
sub
ficoml
test
leave
sub
ss
lret
xchg
in
adc
sub
push
lahf
cmpb
adc
xchg
or
fistpl
repnz
ja
inc
fcoml
adc
add
adc
pop
cmp
inc
pop
lods
push
leave
inc
xor
mov
orb
ret
imul
rorb
xor
pop
mov
sub
sbb
pop
aad
push
outsl
or
in
sti
mov
cmp
jge
frstor
inc
pop
push
dec
lds
cmp
lret
jbe
inc
sub
xchg
jae
fiadds
push
ret
icebp
xlat
ret
adc
push
mov
std
int3
loope
test
xor
cmp
and
inc
es
cmp
movsb
add
aam
and
add
ret
in
jne
ss
mulb
mov
outsb
aas
push
filds
or
cmp
cmp
cmp
clc
mov
inc
cld
and
ss
dec
lret
add
add
jae
mov
fstps
xchg
sub
loop
and
dec
iret
dec
out
cmp
adc
pop
cmp
sub
push
or
fistpl
xor
pushf
cmp
ja
adc
fstp
cmpsb
cmpsl
daa
or
sub
cmp
inc
push
pop
xor
adc
loop
adc
das
leave
xchg
or
stos
int3
orb
xor
mov
sub
xor
or
or
popf
insb
loop
sahf
cmp
inc
and
mov
sub
cmp
lahf
cmp
stos
inc
add
out
jmp
aad
pusha
or
push
xchg
jmp
sbb
jecxz
add
xlat
add
pusha
add
rorl
les
xor
add
sbb
and
mov
xchg
sbb
xor
sbb
or
loope
movsb
push
insl
adc
mov
jnp
and
add
xor
mov
inc
cmp
pop
adc
add
push
xchg
or
das
add
or
inc
ss
adc
push
xchg
adc
and
push
mov
in
sbb
add
add
xchg
sub
loop
sub
sub
ljmp
sbb
call
cmp
sub
adc
and
test
sti
repnz
xor
sbb
and
sub
mov
inc
stos
cmpl
sbb
insb
fnstenv
adcb
pop
jl
bound
and
adc
and
subb
sub
or
mov
cltd
push
xor
cmc
push
mov
and
add
sbb
xor
and
push
rorl
out
mov
cmc
pushf
mov
sbb
fwait
add
inc
dec
mov
shlb
rolb
xchg
ja
inc
xor
sbb
pop
pop
lcall
mov
lret
incb
dec
in
popa
and
adc
dec
je
es
adc
xchg
sub
pop
xchg
mov
daa
fmul
into
mov
lret
movnti
sbb
xchg
and
cs
test
les
pop
or
adcb
in
daa
add
jl
sub
lahf
jg
and
lea
cmp
adc
jge
out
shlb
xor
xor
out
inc
shrb
sbb
mov
xchg
cmp
xchg
push
movsl
lahf
or
push
repnz
ret
sbb
sahf
sbb
or
sub
rorl
inc
daa
and
lahf
sbb
adc
vcvttss2si
ss
and
inc
ja
int3
cmp
icebp
loopne
shlb
and
inc
jle
dec
xor
add
cmp
cmp
mov
push
mov
jb
pop
xchg
and
dec
fnsave
mov
scas
iret
sbb
jne
adc
jg
inc
xchg
out
sub
btr
mov
jne
add
sub
adc
sbb
out
xchg
popa
mov
adc
inc
pop
mov
sub
movsl
sbb
or
push
adc
subb
cmpsb
daa
in
and
loope
loopne
pushf
cmp
inc
movsl
aas
mov
mov
adc
cmp
test
cmp
adc
popf
cltd
shll
cmp
in
nop
xor
and
aas
out
mov
in
pop
add
fst
pop
jno
cmp
mov
cmp
xor
cli
pop
call
cmp
pop
mov
or
pop
aas
imulb
cmp
xchg
js
pop
stos
es
push
push
lds
xor
mov
push
cmp
sub
mov
xor
dec
jae
mov
cmp
mov
xchg
inc
icebp
mov
mov
xor
xor
cmp
cwtl
and
into
movsb
test
or
xor
imul
add
gs
cmp
call
and
js
pop
idivb
sbb
adc
subl
push
xchg
adc
xchg
cmp
ja
leave
jp
and
jbe
and
add
into
xchg
add
xchg
stc
dec
push
lock
xchg
cmpsl
pop
lcall
cmpsb
cmc
mov
mov
andb
mov
pop
popa
cmp
mov
jp
xlat
xor
pop
dec
cli
shll
mov
push
mov
rcrl
cli
or
ds
mov
nop
or
and
inc
mov
mov
shll
xor
int
lds
sub
or
clc
adc
adc
int3
add
cmp
test
dec
cmp
in
mov
aad
or
aad
movsb
adc
or
add
shrb
sub
add
push
push
mov
push
mov
into
insl
sbb
outsb
inc
or
adc
sub
arpl
inc
cmp
push
add
fbstp
push
add
fidivs
sub
and
add
adc
fdivs
sub
bound
and
jo
ret
rolb
cmp
inc
mov
sub
mov
push
adc
mov
test
cmp
xchg
adc
movsl
popf
cmp
or
rcrl
dec
fsts
ficoml
inc
ds
xlat
sub
and
aaa
sub
inc
leave
cmpsb
pop
rcll
add
orb
inc
cld
mov
shll
pusha
mov
pop
inc
lcall
lret
ret
add
add
xchg
adc
rclb
jns
leave
mov
cmp
sbb
and
xchg
adc
stos
inc
adc
pushf
aas
push
sbb
inc
bound
pop
pop
and
or
xor
insb
dec
cmpsl
std
inc
cmp
xor
shlb
add
pmulhuw
mov
push
jno
xor
and
jb
adc
mov
and
jecxz
and
adc
pop
pop
inc
push
cmp
lahf
andl
xor
push
pop
and
sub
pop
leave
or
push
lods
inc
cmp
rcll
jmp
test
cmp
xchg
mov
sti
les
scas
or
daa
pop
inc
or
fs
test
dec
or
add
aad
outsl
jle
or
or
mov
inc
sahf
or
scas
pop
jmp
and
lret
add
lret
test
pop
pop
cltd
mov
add
mov
popa
jno
push
scas
cmp
jl
jmp
mov
inc
es
fdivl
in
adc
adc
hlt
sbb
sub
dec
xchg
pop
jp
jne
add
outsb
sub
mov
popf
rcll
lret
sbb
into
inc
inc
fsubrs
xor
push
mov
adc
int3
push
dec
mov
sbb
ja
lea
cmp
data16
pop
loope
adc
mov
adc
add
jl
imul
sub
push
ljmp
adc
lahf
add
and
das
xchg
and
adc
sbb
cmpsb
es
inc
mov
enter
and
fst
dec
push
pusha
mov
xor
sub
sbb
sub
or
xchg
or
and
cld
mov
and
sbb
or
push
popa
adc
mov
lcall
adc
cmp
push
adc
lods
push
adc
ds
and
sub
and
sbb
and
popf
xchg
sbb
mov
sbb
sub
and
jns
add
or
jecxz
sbb
das
mov
test
adc
ljmp
dec
pop
pop
push
je
adcb
popf
aad
adc
outsl
push
add
add
mov
es
inc
aas
fnstcw
cmp
pop
jp
or
or
cltd
ss
sub
ja
dec
xlat
adc
and
xor
adc
sub
std
mov
cwtl
sbb
addr16
or
cmp
or
push
in
sbb
cltd
or
jae
movsl
inc
and
mov
cmpsl
imul
movsb
and
fistl
push
bound
adc
or
adcl
sbb
js
pusha
jl
sub
inc
sub
cmpb
adc
adc
mov
sbb
ss
imul
fstps
aas
pusha
xlat
pop
push
xchg
mov
lcall
cmpsb
xor
xor
imulb
push
orl
sub
adc
adc
and
cmp
add
cmp
and
test
js
sub
and
lods
xor
add
cmp
andb
and
pop
sbb
push
xchg
adc
cmp
add
sarb
adc
arpl
test
and
adc
in
test
ret
cmp
jbe
sarb
cmpsb
cmp
push
into
pop
outsb
push
sbb
dec
inc
in
es
xor
dec
or
mov
ss
adc
push
cld
in
or
out
jle
or
data16
or
ficoms
dec
das
pusha
push
mov
xchg
mov
adc
sbb
addr16
jg
out
repnz
cmp
lret
outsb
push
pop
or
pop
pop
aad
js
mov
lret
out
mov
iret
adc
daa
dec
out
push
or
lret
xor
fwait
xchg
mov
mov
or
or
jb
xchg
cmp
subb
add
or
lret
push
fdivrl
dec
rclb
sub
pop
push
cli
adc
jno
and
xchg
test
mov
es
xor
jp
cmpsl
lods
dec
dec
or
cmp
jns
inc
sbb
xorl
push
fisubrs
fld
fbstp
mov
shrb
in
andb
xor
jg
mov
fstl
and
es
sub
js
sub
out
pop
cmp
ljmp
sub
and
jecxz
inc
sub
hlt
ss
stos
sbb
cmpsb
or
mov
test
xor
test
push
xor
and
leave
mov
jo
cmp
addb
dec
adc
adc
xor
addr16
add
cmp
daa
pop
push
and
xor
xchg
add
addr16
xor
push
out
jbe
cmpb
lahf
add
adc
mov
sarb
inc
and
dec
mov
int3
lahf
sbb
inc
aam
pop
mov
dec
xor
cmovo
arpl
or
movsl
push
mov
shr
mov
cmp
pop
push
or
js
adc
and
or
lahf
popf
xor
or
lret
aas
adc
call
adc
daa
fwait
push
mov
or
adc
das
ds
pop
dec
ss
sub
js
mov
mov
xlat
sbb
add
in
sub
lahf
das
rolb
adc
test
jno
push
cli
mov
ret
cmp
or
push
xchg
daa
xchg
cmp
mov
sub
adc
xor
stc
test
addb
iret
bound
push
sub
sub
insl
jb
add
out
sbb
xor
xor
cmp
jb
pop
cs
cmp
cwtl
aas
pop
or
aad
add
add
xchg
fcomps
out
and
nop
sub
fiadds
push
pop
stos
les
sbb
jp
xchg
lock
jge
or
inc
icebp
mov
and
add
cmp
sbb
scas
cmpsb
xchg
or
mov
sbb
mov
aam
pop
sub
mov
add
and
fs
into
xchg
and
jne
and
adc
mov
in
mov
cmp
out
push
xor
sbb
cmp
mov
mov
std
cmp
and
sub
out
jo
push
out
int3
jno
cmp
jge
sub
push
push
sub
or
push
inc
daa
add
gs
sub
cmc
add
sbb
sub
sbb
push
dec
add
sub
and
add
jns
adc
mov
push
adc
and
scas
pop
ss
sbb
push
mov
push
adc
int3
push
cli
jno
xor
and
cmp
sub
and
leave
add
fcoml
or
xchg
std
xor
inc
dec
shll
xor
pusha
notl
les
mov
mov
loop
movaps
mov
pop
adc
push
xchg
data16
loop
xchg
adc
pop
cltd
or
lds
xor
rcr
jnp
and
das
sub
adc
cld
aam
aas
pop
sbb
into
iret
mov
lds
add
dec
xchg
cltd
es
stos
fnstsw
push
adc
dec
loopne
repnz
sahf
or
mov
ds
adc
jp
push
test
add
ret
xor
rcl
jb
push
cmp
and
xor
xlat
or
mov
cmp
or
adc
daa
fs
pop
xor
and
sub
jmp
add
jne
mov
cmp
mov
and
mov
call
adc
mov
lea
out
push
outsl
and
mov
jle
or
rorl
rclb
cmp
cld
das
pop
std
lds
sbb
ret
fsubrl
cmp
fldenv
push
xor
cmp
xor
sarl
xor
pop
inc
mov
inc
fs
or
das
pop
jo
adc
movsb
push
lock
push
xchg
cmp
mov
xor
add
cmp
mov
insb
add
add
xor
or
dec
pop
cmp
stos
add
aam
add
ja
sarl
add
cmp
adc
and
sbb
test
inc
xor
lahf
movl
inc
pop
cli
stos
add
xchg
addb
imull
rcll
cmp
jne
add
inc
insb
sbb
por
fcomip
in
fcomps
cltd
jb
loope
jp
jbe
xchg
out
arpl
xor
xor
ss
mov
les
inc
shll
cmpsb
sbb
mov
push
lock
cmpsl
pop
rcrw
cwtl
popf
sub
and
sbb
ja
daa
dec
add
leave
into
jmp
sbb
stos
dec
add
jns
rolb
push
ficomps
aas
sbbb
shl
sub
cmovno
rclb
jnp
pushf
sub
adc
add
adc
add
scas
xchg
or
stos
out
lret
add
imul
push
ljmp
js
setg
add
vcvtps2pd
add
cmp
push
dec
push
pop
mov
fwait
mov
test
add
imul
iret
xor
jecxz
movsb
insl
xor
outsb
add
inc
loope
cmpsl
fwait
scas
adc
lea
lock
push
inc
sarl
cmpsb
sbbl
stos
or
shlb
add
mov
insl
xchg
mov
mov
lods
xchg
add
inc
fbstp
and
ret
iret
das
popa
push
xor
cmpsl
cli
cmp
xor
sti
xchg
jo
jne
add
movsb
fisubrl
decb
push
ret
pushf
lea
sarb
les
testl
test
add
jl
cmp
in
cmp
ret
orl
shll
dec
push
loope
mov
xor
scas
inc
and
cmc
or
arpl
imul
fidivrl
mov
out
xlat
inc
xor
or
add
jmp
inc
adc
imul
sarl
mov
movsb
and
push
addr16
inc
out
sti
ja
fbld
cld
push
add
xor
jbe
inc
aas
fwait
nop
xor
jb
and
pop
mov
add
and
mov
and
sbb
sub
cmp
xor
add
push
maxps
push
movsb
scas
adc
add
push
out
sbb
or
inc
xchg
push
adc
loopne
pusha
test
mov
in
test
jle
inc
in
add
xchg
xchg
mov
hlt
das
mov
cli
add
outsb
sbb
test
lods
inc
xchg
lret
bound
iret
cmp
pop
pop
insl
pop
dec
test
repnz
cmpsl
pushf
aas
or
rclb
scas
sub
mov
adc
aam
cmp
mov
xchg
mov
sbb
jnp
jg
xor
xor
mov
gs
outsb
adc
decl
stc
mov
mov
rcrl
add
pop
loopne
out
and
in
mov
mov
ja
adc
in
shlb
in
ds
mov
mov
add
adc
inc
add
or
daa
ljmp
les
xchg
and
loope
push
in
sub
dec
clc
mov
sub
add
iret
addr16
and
or
mov
sub
inc
dec
ret
popl
outsl
mov
or
xor
ss
test
mov
daa
arpl
outsl
jl
popa
inc
lods
sub
cs
aaa
or
push
add
pusha
pop
jp
insb
cwtl
fnstsw
lret
and
sbb
pop
fmulp
lahf
loope
push
je
loop
into
sbb
mov
sub
mov
adc
xor
mov
into
cmc
mov
mov
shll
jp
pop
xor
mov
imull
and
sub
jmp
dec
sarl
faddp
sub
add
pop
sbb
in
xor
stos
sub
orb
aas
test
repnz
xor
in
ja
push
and
mov
repz
inc
add
add
add
ds
pop
mov
xor
or
es
mov
jge
call
sub
fsubrs
add
test
insb
pop
ret
jb
inc
mov
mov
xor
cmpsb
add
not
test
mov
add
data16
shll
clc
sub
mov
fstpt
push
fiaddl
jl
pop
in
push
popf
js
or
or
or
pushf
fisttps
ja
mov
cmpsl
outsl
jmp
ret
mov
sub
jae
mov
xorl
xchg
leave
add
into
pop
dec
sbb
fdivrl
xor
xchg
jnp
add
bound
mov
cmp
adc
loope
xchg
incl
jle
xor
cmc
or
leave
movzbl
sub
enter
fadd
cmp
mov
aas
push
push
add
dec
mov
xchg
stos
int3
jne
push
adc
mov
add
xor
pop
aas
ret
pop
xor
xchg
addr16
add
fwait
xchg
and
sbb
adc
adc
inc
sbb
rcll
pushf
add
ss
xor
xchg
push
add
xor
add
rorb
xorb
and
dec
int3
popa
cmp
and
out
jno
fldenv
push
add
shll
push
sahf
mov
mov
popa
jp
pop
cmpsl
add
sub
mov
cltd
sbb
mov
mov
xor
push
out
or
test
lret
lods
fbld
ret
dec
scas
sete
dec
ret
ja
mov
stc
repz
sti
cmp
inc
inc
xor
cltd
add
inc
fwait
cmp
push
pop
mov
cmpsb
pop
add
or
test
mov
mov
pushf
add
iret
push
mov
jecxz
je
inc
add
pop
add
mov
sbb
movsl
nop
incl
cld
or
xor
shrl
jbe
enter
mov
pop
and
in
stos
fbstp
mov
cli
jge
inc
xchg
and
xchg
mov
lret
dec
add
mov
pop
arpl
add
clc
leave
and
sbb
push
inc
sub
pushf
xchg
test
mov
aas
and
jnp
cltd
push
mov
dec
sahf
xchg
cmc
js
testb
lods
adc
push
xor
add
mov
pop
sbb
and
mov
push
hlt
lcall
subl
dec
test
push
or
sbb
push
les
std
into
insl
or
scas
mov
mov
subb
add
imul
adc
xchg
test
lret
mov
fs
xchg
lock
icebp
xor
scas
add
ljmp
cs
cmp
cmp
mov
mov
mov
pop
xor
mov
in
push
and
mov
ja
add
in
pop
in
add
add
and
or
data16
xorb
mov
add
sub
das
sub
gs
pop
jno
mov
ret
clc
pop
mov
mov
jge
sti
push
jle
push
lahf
loop
adc
add
scas
cmc
mov
call
mov
sarl
mov
pop
jmp
pop
lock
data16
aam
or
out
mov
push
add
scas
mov
fldt
cmp
push
aad
clc
outsl
add
std
pushf
lods
cld
loope
in
xchg
and
or
cwtl
mov
iret
jg
sub
pop
add
nop
pop
sub
loop
add
xchg
das
flds
fcoml
ret
roll
add
movsl
jle
popa
fstpt
mov
loopne
js
and
jp
loopne
movsb
jg
sub
out
stc
add
jns
inc
add
lahf
aaa
xor
fidivs
cmp
dec
stos
adc
xor
pop
cmp
movsl
out
inc
cmp
test
and
adc
out
cmp
nop
cmp
rcl
mov
inc
push
call
inc
jle
je
pop
sbb
inc
fs
int3
mov
xor
jb
les
lea
sbb
jo
jmp
jge
cmp
adc
ret
repnz
xor
pop
sbb
xor
shrb
inc
pop
push
pop
roll
fisttps
fstpl
scas
aad
or
pushf
adc
ljmp
mov
ret
inc
out
jmp
inc
and
and
dec
and
loopne
push
pop
test
pop
xchg
lds
fs
add
aad
xchg
add
leave
sti
mov
add
xchg
test
shrb
mov
push
push
ds
es
add
or
les
popl
xchg
ror
mov
sbb
or
aad
imul
mov
xor
inc
inc
lock
filds
sti
bound
sub
sbb
and
xor
sbb
add
fdivrp
adc
push
pop
std
adc
fwait
jo
xchg
lret
scas
aaa
out
adc
cmpsb
xor
sbb
aam
mov
add
fiaddl
hlt
add
sub
mov
mov
push
ffreep
add
and
jne
fiaddl
into
sub
cmp
rcl
jo
xor
cmp
std
add
shll
or
cmp
mov
les
stos
jns
jle
sub
test
jmp
inc
or
lods
mov
add
push
pop
add
pop
jno
dec
mov
xchg
cmp
sbb
iret
imul
in
add
jg
and
stos
pop
jbe
lret
test
cmp
add
roll
push
cmp
ficomps
pop
pop
adc
add
dec
add
and
cmpsw
jns
dec
add
sahf
mov
add
dec
push
sub
add
or
std
pop
sub
shr
mov
fadd
sar
jecxz
and
jno
jne
xorb
rcrb
andl
outsb
xchg
cmp
shl
mov
idivl
push
or
divb
clc
lea
pop
sbb
inc
and
pushf
push
iret
out
aaa
adc
add
std
push
imul
xchg
sbb
bound
adc
jo
pusha
adc
mov
or
sub
loopne
inc
jg
aad
mov
outsb
rorb
or
jb,pn
jns
test
test
jecxz
cmp
enter
insl
std
push
movsl
mov
repnz
inc
aas
stc
cmp
inc
scas
in
ret
call
outsl
adc
dec
lds
or
cmp
and
sub
mov
outsb
cmp
std
sbbl
and
test
into
popa
mov
adc
add
mov
adc
adc
ja
mov
pop
xchg
rcr
in
loop
or
mov
adc
lret
xor
movsb
add
ljmp
iret
gs
sarl
xlat
pop
cmp
mov
push
xchg
test
cmc
mov
mov
mov
xor
or
lahf
xchg
cmpsl
mov
nop
inc
add
aad
inc
lret
sarl
xchg
pop
cmp
ret
add
stos
das
mov
pop
xchg
leave
or
fstpl
outsb
push
test
add
push
lods
lea
push
pop
in
ficoms
cmp
bound
lret
jp
sti
xchg
leave
add
fisttps
inc
xor
add
cmp
add
movsb
dec
mov
push
pop
or
sahf
sbb
data16
xchg
fisttpll
xor
xor
adc
gs
jp
mov
xchg
divl
mov
movsl
jns
add
mov
sbb
rcll
dec
jo
dec
stos
add
dec
aad
push
shrb
je
jecxz
pop
lds
push
stc
nop
ret
mov
adc
loopne
push
mov
int
aas
test
jb
add
fdivr
push
mov
cli
imul
fs
rolb
movsl
and
cmp
cltd
add
pop
ja
fsubrs
shrl
xchg
jb
pop
mov
mov
lcall
cmpsl
jno
pop
int3
mov
add
std
pusha
dec
xor
inc
jge
inc
add
cld
cmpb
cmp
js
xchg
pop
push
add
popf
fxch
jnp
pop
pop
mov
add
push
xchg
rorl
xor
cmc
push
dec
outsl
cmp
add
aaa
add
dec
add
in
mov
ja
xor
add
test
adc
dec
inc
adc
mov
gs
imul
pop
sbb
push
dec
ret
mov
and
into
popa
loopne
inc
or
push
and
cmpb
push
adc
lea
test
push
mov
fdiv
xchg
add
add
inc
cmp
loop
mov
xchg
xor
sub
mov
pop
shlb
daa
dec
aaa
lcall
dec
adc
imul
dec
std
movsl
or
mov
fidivl
jb
sbbl
mov
jnp
bound
dec
in
lods
shl
adc
mov
pop
push
xchg
popa
mov
xor
sbb
andl
lret
push
and
mov
sub
add
adc
ss
aam
les
leave
push
push
and
jae
sbb
dec
mov
sarb
mov
je
jge
cmp
xchg
add
adc
sub
add
mov
jae
add
imul
add
cltd
test
push
add
ret
gs
xor
lds
fwait
adc
into
pop
rorb
add
xor
test
add
pop
push
shll
sub
sarl
inc
add
iret
sbb
mov
xor
lods
inc
add
jbe
xchg
bound
roll
cmpl
mov
or
dec
push
cmpsb
loopne
dec
fs
and
adc
nop
icebp
push
xor
cmp
xor
scas
arpl
sub
mov
mov
ds
sbb
push
std
mov
aas
and
sub
adc
cltd
pop
mov
or
dec
mov
and
mov
xorl
negl
adc
sub
xchg
add
push
mov
outsb
add
enter
js
lret
add
or
shll
in
sti
aas
test
mov
test
jmpw
lods
adc
adc
inc
pop
jle
or
inc
in
popa
lock
mov
das
mov
mov
mov
dec
cld
dec
add
adc
out
gs
jle
sarb
pop
rcrb
sub
scas
pop
and
pop
sub
fucomip
or
pushf
sbb
insb
xchg
inc
add
in
xchg
mov
xor
data16
inc
cmpb
mov
mov
stc
mov
ljmp
in
je
imul
loope
add
sub
mov
push
xchg
add
mov
jp
sub
or
jge
cmp
sub
inc
push
or
add
add
add
mov
add
fwait
push
addr16
xchg
xchg
imul
icebp
ss
jae
inc
popf
outsl
mov
cs
cmpb
repz
cwtl
xor
sti
jg
mov
sub
sub
pop
xor
push
add
sar
sbb
das
outsl
add
or
sahf
in
sub
push
rolb
push
add
test
dec
aam
sarl
cmp
fxtract
add
jp
dec
aaa
movsb
call
jg
pop
sbb
add
xchg
aam
lahf
mov
add
or
sbb
adc
aad
and
add
add
test
xor
sbb
cs
add
xchg
xchg
inc
adc
jge
push
jmp
push
dec
push
xchg
inc
fidivl
es
add
movnti
xor
roll
out
inc
mov
sbbb
faddl
arpl
jae
sarb
mov
mov
inc
or
push
xor
into
jno
hlt
add
fwait
les
mov
add
lret
inc
call
int
leave
or
add
add
sbb
pop
cmp
cmp
aam
add
sub
daa
or
dec
scas
cmp
jmp
ljmp
mov
loopne
cli
sarb
sub
daa
pop
scas
mov
jg
and
out
jnp
mov
dec
mov
adc
push
adc
rolb
cmc
lret
jecxz
adc
lret
push
call
xor
imul
ret
or
jge
hlt
js
sub
lcall
mov
add
bound
jae
sahf
mov
pop
ror
nop
mov
pop
inc
cmp
adc
sti
mov
jecxz
mov
xor
xlat
popa
pushf
inc
call
loope
sti
lret
movsl
aaa
mov
pop
cmp
cmpsb
mov
cltd
roll
sub
jae
fs
sahf
addl
iret
sub
jecxz
cmpsb
gs
push
adc
stc
and
fistl
test
adc
pushf
inc
cmp
jo
pop
mov
test
leave
std
add
ss
add
add
movl
push
sbb
pushf
js
jle
push
mov
fistpl
lock
add
add
jno
mov
aad
add
loope
das
pmuludq
push
add
dec
mov
stc
xor
pop
mov
cltd
data16
adc
mov
iret
add
lods
jo
arpl
dec
xlat
xor
pop
add
nop
adc
pop
xchg
jno
add
fiadds
cmp
std
lods
push
mov
adc
push
add
movsl
loop
sub
cmp
xor
pop
arpl
pop
lret
ret
movsl
push
shrl
and
pop
in
jne
sahf
cli
mov
mov
sub
stos
xor
lea
test
icebp
cmp
pop
insb
and
scas
loope
jl
call
test
push
fwait
pminsw
jbe
jg
jne
push
out
out
and
xor
xchg
arpl
mov
lret
lret
mov
in
cmpsl
push
pop
add
jae
lock
cmp
inc
aad
xchg
shll
xor
ljmp
lret
adc
sbb
insl
popa
cmp
mov
repnz
aas
dec
inc
rcrb
pop
jp
out
add
jo
iret
cmc
adc
stc
mov
lcall
or
and
sbb
dec
jnp
sub
bound
cmp
mov
sub
inc
xor
mov
in
lods
in
ds
and
cmp
pushf
dec
lahf
push
pop
sub
andb
pusha
cmpb
ss
test
adc
jge
add
andl
pop
cli
cmp
xchg
je
sub
cmp
add
in
push
inc
jno
cmp
call
or
sbb
sbb
jmp
or
dec
sub
cmp
les
out
mov
add
or
pop
jp
inc
adc
push
and
pop
outsl
add
dec
lods
das
sub
in
ret
cmp
push
pop
add
xor
add
lahf
adc
add
fcomps
in
and
scas
add
mov
insb
cmp
jg
mov
movsl
fsts
in
add
xchg
call
daa
loopne
mov
out
cmp
mov
mov
pop
mov
cmpsl
mov
and
lahf
add
mov
sbb
dec
pushf
rorl
in
ror
sub
mov
cs
aas
add
test
repnz
jg
pushf
adc
pop
rcll
sbb
es
sub
repz
scas
xor
push
add
sbb
stos
insb
mov
fiaddl
mov
xorb
rorl
and
loope
inc
iret
insl
add
fdivs
movb
cmp
push
ret
movsl
mov
sub
sub
call
add
push
xchg
xorl
mov
out
int
inc
iret
mov
mov
adc
popf
jnp
jl
add
movsb
sub
mov
add
sbb
xor
es
cmp
adc
add
scas
pop
add
pop
gs
shlb
cmp
es
xor
leave
add
test
rcrb
lret
push
fldenv
out
adc
aas
mov
bound
adc
stos
inc
mov
sar
cwtl
or
sbb
sahf
lcall
add
push
cmp
dec
jno
int3
inc
pop
add
inc
xchg
ljmp
jecxz
jbe
movsl
xor
lcall
fwait
ret
inc
dec
lret
inc
aaa
xor
pop
movsb
cmpsb
js
jo
add
les
cmpb
aam
add
lahf
leave
adc
lods
jnp
rorb
cmp
mov
xor
popa
cmp
add
cmpsl
xchg
mov
pusha
cmpsb
add
and
xorl
add
mov
imul
shll
pop
push
ret
addb
lea
xor
ja
sub
test
fildl
imul
sahf
test
mov
loope
cltd
ret
lret
add
dec
fisubl
or
stc
repnz
mov
cltd
pop
dec
jecxz
pop
stos
add
cwtl
cmp
scas
cmc
inc
in
sbb
xlat
sub
pop
cmp
ja
xor
xchg
mov
decb
rcrl
sahf
int3
add
cmc
jae
test
pop
mov
jno
add
movsl
xchg
bound
cld
sbb
shll
xor
into
jbe
or
rclb
jle
and
mov
dec
jne
fstl
mov
sbb
inc
cli
lret
daa
loop
rol
stos
aam
xchg
sub
inc
icebp
mov
mov
jb
mov
cmp
sbb
add
jns
add
push
inc
popf
adc
inc
test
icebp
out
xchg
fdivrs
ljmp
add
insb
pusha
inc
sbb
lret
push
loopne
inc
es
aaa
cltd
mov
hlt
test
movsb
ja
outsb
mov
xchg
cmp
or
xchg
sahf
mov
pop
add
fcoml
add
cli
shll
add
fmuls
lock
aam
xor
dec
daa
test
mov
add
xor
xor
add
stc
cld
scas
iret
lea
scas
add
sub
mov
mov
jg
dec
out
aam
fidivl
inc
xchg
xchg
out
leave
in
cmp
ljmp
addb
loopne
adc
add
or
arpl
mov
mov
icebp
add
pop
movsl
jge
je
add
iret
xchg
int3
xor
in
adc
hlt
push
or
mov
fld1
shr
or
inc
cmp
mov
iret
adc
push
leave
xchg
icebp
add
fisubrl
pop
and
imul
mov
lods
incl
aaa
in
fnstenv
cmp
ljmp
out
add
or
pop
xchg
xchg
and
dec
mov
popf
insb
mov
repnz
rcl
mov
popa
dec
dec
and
mov
loopne
lret
hlt
and
jp
and
add
into
sub
ljmp
mov
sbb
fisubs
and
outsl
dec
xorl
jne
pop
push
inc
mov
jl
or
fdivl
icebp
movsb
adc
out
shll
repz
push
ss
xchg
cmp
add
call
pop
add
mov
add
les
pop
sbb
je
xor
incb
movsl
fdivr
inc
mov
loope
or
mov
add
arpl
cltd
jo
jno
popa
mov
mov
xchg
frstor
and
rolb
inc
je
cmp
inc
sub
pop
push
test
and
fcmovnbe
xchg
pop
xor
cmc
sbb
add
mov
sbb
jmp
sbb
sbb
cmpsl
testl
adcl
rorb
sub
les
add
mov
add
hlt
jnp
add
sti
test
jge
jbe
adc
vpaddusb
xchg
xchg
and
fsubrs
jae
sbb
into
movsb
push
iret
or
repnz
rcrb
and
push
jl
push
add
cmp
xor
mov
cmp
add
dec
movsl
loop
bound
push
andb
pop
add
fsubs
fwait
push
in
lret
push
xchg
aaa
fcmovbe
call
int
and
add
xchg
or
rolb
jle
lds
enter
push
sub
cmpsl
inc
and
lods
adc
dec
dec
and
pop
add
jg
cmpsl
outsl
add
xor
and
mov
jge
test
inc
mov
movl
xchg
or
mov
lea
rclb
mov
rcr
jle
aad
scas
shl
mov
arpl
or
jmpw
and
dec
ljmp
cmovp
dec
mov
stc
mov
jg
movsl
add
cltd
out
mov
adc
pop
add
add
int3
mov
cmp
pop
sbb
bound
pop
inc
stos
ja
add
sub
push
mov
inc
or
loopne
cmpsl
cmp
movsl
inc
mov
or
add
jbe
loopne
nop
mov
pop
add
jne
ss
dec
mov
add
daa
lea
popa
xchg
pop
in
xchg
icebp
add
sub
les
add
aas
push
xchg
aam
xor
jb
pushl
push
xor
pop
xchg
add
fsubrs
adc
decb
ret
pusha
daa
aaa
out
mov
in
pop
xchg
sub
add
dec
mov
mov
mov
hlt
jge
or
shl
outsb
ret
imul
add
cmp
inc
push
insl
les
add
mov
cmp
add
aas
in
mov
aad
iret
inc
scas
add
enter
mov
add
mov
stos
in
mov
or
mov
xor
dec
add
add
faddl
icebp
sub
imul
mov
test
pop
int
add
adc
cmovnp
add
clc
pop
xchg
add
or
and
lods
paddusb
or
sbb
add
mov
adc
stc
pop
cmp
add
lahf
inc
movsl
ljmp
mov
je
cld
jmp
push
loope
xor
adc
ret
shl
mov
test
add
inc
xchg
pop
orl
add
add
adc
inc
add
mov
loop
add
bndstx
xchg
aas
and
add
iret
push
fnstsw
addb
push
mov
aad
fisubrs
add
cmc
cmp
out
pop
int3
shrb
cwtl
jp
xor
cmpsb
fwait
pop
sub
daa
loope
dec
ret
in
cmp
loop
loope
das
scas
lods
insb
imul
fcompl
xchg
jmp
roll
subb
mov
imul
movsb
icebp
xor
or
jmp
sbb
fmuls
aas
mov
fiadds
dec
lods
negl
mov
in
mov
shrl
js
subl
inc
mov
push
mulb
test
dec
add
adc
add
mov
xorb
xchg
sti
add
cmp
add
mull
add
pcmpgtb
sub
sub
movsb
xor
cmp
lahf
inc
mov
sbb
mov
lret
jbe
in
add
xchg
cmp
pusha
mov
aad
movsb
aam
in
mov
cltd
inc
sbb
pop
dec
int
stos
hlt
push
jae
enter
into
push
popf
faddl
sub
inc
iret
fmull
add
mov
add
add
inc
enter
add
or
mov
fwait
pop
rorb
mov
pop
or
out
scas
mov
ret
iret
jnp
or
test
andl
mov
push
repnz
jl
add
sahf
add
lret
int
cmp
push
add
lea
mov
das
xor
xchg
add
push
nop
add
sub
int3
jmp
in
add
xor
jo
or
adc
sub
add
inc
push
clc
adc
add
aaa
test
xor
cmpsb
shrl
mov
xchg
jns
sahf
or
cltd
popf
mov
xchg
pushf
sub
inc
inc
dec
into
lods
in
aaa
fisttps
sbbl
subl
testl
test
imul
mov
push
inc
std
xor
testb
inc
dec
lret
mov
test
je
adc
adc
cmpsl
xor
fildl
add
xor
add
lock
xor
ret
fbld
inc
or
mov
stc
jb
add
cltd
mov
shlb
add
add
sub
add
or
les
add
mov
and
lods
subl
pop
mov
cs
add
rcr
push
div
sub
sub
sar
xorb
xor
jnp
jg
inc
shrb
mov
addr16
mov
jne
cmpsl
mov
mov
push
xchg
cli
inc
pushf
movsb
daa
add
push
inc
pop
xor
lret
sbb
cmp
lods
arpl
dec
jns
cmpsb
insb
pop
gs
pusha
dec
add
hlt
adc
mov
cmp
shl
lods
push
adc
sub
push
ret
notb
jbe
pusha
add
pop
outsl
mov
add
sub
rcl
jg
cs
and
adc
scas
outsb
add
xchg
lret
mov
mov
push
add
repnz
push
aas
scas
call
add
jmp
adc
push
pop
ds
mov
sarb
icebp
mov
stos
xchg
xchg
add
movsb
ss
sub
add
jb
in
popa
xchg
add
fcoml
pop
add
rorl
add
sub
jb,pt
mov
mov
dec
cmp
inc
add
jo
or
das
orb
adc
mov
pop
gs
mov
ljmp
cmpsb
inc
je
mov
xchg
dec
jb
loope
cmc
cmpsl
sub
filds
inc
push
mov
stc
add
dec
jnp
or
inc
je
jno
dec
inc
push
lcall
das
add
mov
inc
xchg
xchg
push
daa
xor
jle
and
rcl
fldl
lret
push
outsb
sub
add
jae
in
ds
mov
jbe
pop
mov
mov
dec
test
cmp
ss
popf
xchg
out
ret
in
pop
jge
insb
and
cltd
sahf
add
test
push
loopne
add
ret
stos
push
dec
sti
xchg
cs
scas
add
in
and
fsubr
sub
add
xor
sbb
add
lcall
fiadds
cmp
xchg
sbb
or
ror
mov
lea
iret
xchg
test
testl
push
inc
adc
shl
pop
push
ret
test
mov
stos
mov
pop
movb
jb
pop
int
sbb
loop
xor
cmp
inc
pop
ret
popf
mov
lcall
aam
xchg
fadds
jg
scas
addr16
inc
jb
int3
mov
out
popa
addl
test
push
mov
jle
mov
out
inc
inc
pushl
ret
mov
int
iret
aas
push
and
add
pop
and
pop
aam
cmp
sub
cmp
je
lock
loope
mov
sbb
xor
dec
xor
addl
imul
sbb
add
lahf
je
add
push
leave
jp
add
rorl
jnp
xor
test
rol
mov
lahf
popl
add
cs
pop
imul
lds
mov
or
push
pop
lock
enter
flds
mov
pop
lea
mov
lahf
jns
add
mov
out
inc
std
imul
into
out
clc
and
and
mov
fcompl
fwait
les
negl
aaa
jo
add
cmpsb
mov
je
popf
or
dec
dec
jae
and
addl
add
pop
lea
and
xchg
lods
mov
mov
out
sarb
popa
lea
std
cmpsl
rclb
and
rcr
shlb
je,pt
movsl
add
out
mov
int3
leave
cmp
add
or
cwtl
sarl
sarb
add
loopne
shll
sbb
stc
push
inc
ret
pandn
or
mov
mov
and
cwtl
inc
mov
cltd
imul
inc
add
call
lret
aaa
pop
add
stos
scas
push
pop
fwait
mov
jns
and
data16
add
jmp
inc
cmc
mov
rcrl
hlt
add
loop
in
lret
cld
je
jecxz
mov
mov
rorl
pop
and
pop
add
sbb
mov
lock
fs
inc
shr
or
xor
cmp
int3
cld
das
arpl
xor
mov
sbb
push
xchg
mov
pusha
push
iret
push
sbb
adc
cmc
xor
negb
xchg
sbb
xchg
test
mov
mov
cmpsb
fisubrs
add
jns
add
not
mov
hlt
in
out
or
int3
mov
test
xchg
mov
lea
push
cmpl
push
sbb
repnz
scas
jl
aas
jp
jecxz
inc
cmp
js
jns
cmp
cmp
add
lret
pop
pop
push
xor
lock
lds
dec
pusha
add
mov
or
dec
insb
jbe
sub
push
dec
xor
inc
scas
sub
test
popf
mov
jmp
pop
xor
in
scas
in
cmp
add
ja
pop
inc
jge
adc
pop
cmpsl
add
data16
sbb
rol
jns
sub
outsb
or
gs
js
mov
ljmp
lret
cmp
xchg
xor
xlat
and
push
pushf
add
mov
call
in
jp
add
jne
mov
inc
cmp
cmp
fs
inc
push
enter
jne
arpl
dec
lock
orb
notb
loopne
mov
rolb
fnstsw
cld
add
dec
loope
lods
xor
mov
shr
sarl
pop
add
pop
push
out
mov
push
subl
pop
call
add
cwtl
loop
test
das
and
fiadds
adc
aaa
add
xorb
mov
loopne
sbb
jb
movsb
mov
mov
pusha
xchg
jns
sbb
sbb
dec
lock
out
mov
add
aad
mov
cmpsl
add
test
movsb
fcompl
xchg
adc
push
jp
sbb
jbe
aaa
xacquire
add
mov
dec
add
out
pop
mov
xchg
aad
or
sub
icebp
sbb
imul
xor
push
add
pop
cmp
popa
add
adc
or
push
add
in
sbb
and
inc
add
inc
xor
into
stos
add
push
repz
rcr
dec
pop
int3
ja
xchg
into
sbb
sub
ret
or
dec
fcmovne
ljmp
dec
inc
cmp
dec
inc
and
cmpl
test
filds
mov
jl
dec
mov
imul
xor
sbb
jnp
add
shrb
into
mov
scas
leave
xchg
in
popf
jecxz
sub
or
pop
jnp
imul
mov
sub
add
orb
push
xchg
js
add
loop
das
cwtl
mov
mov
adc
push
test
push
and
add
int3
push
cmp
add
adc
xchg
test
xchg
scas
inc
inc
sbbl
xchg
lret
mov
aaa
sbb
into
push
and
dec
cmpsb
imul
inc
rcll
jae
add
orl
add
add
add
mov
add
xchg
cwtl
add
dec
xchg
inc
and
movsb
jo
imul
xchg
add
std
push
clc
add
push
or
pop
lea
sbb
inc
sahf
add
pop
mov
xor
adc
jge
adcl
mov
scas
ret
inc
orb
gs
dec
icebp
xor
ljmp
andl
imul
cltd
or
mov
mov
mov
adc
dec
add
add
xlat
and
pop
cmp
ret
pop
push
mul
mov
add
mov
out
add
jb
mov
adc
mov
xchg
sub
cld
sub
xor
pop
rclb
and
jne
add
ljmp
int
push
inc
addb
std
xchg
sahf
mov
push
les
sub
xchg
xor
xor
daa
negb
push
jo
ss
mov
cmp
or
adcl
int3
sbb
mov
stos
sub
mov
adc
jmp
pusha
pop
mov
fs
push
mov
sub
out
mov
hlt
mov
loop
outsb
mov
ja
xchg
loope
sbb
cmp
stos
inc
popf
insl
sbb
cwtl
clc
cmp
and
add
aaa
mov
cmpsb
jecxz
testb
fdivrs
je
push
xor
pop
add
xor
push
pop
nop
inc
mov
movsb
data16
xor
mov
rorl
add
out
popf
add
sub
mov
pop
pop
push
idivl
in
nop
stos
ds
jo
ja
add
mov
or
cmc
daa
arpl
pop
push
loope
xor
adc
fldenv
mov
loopne
push
iret
pop
nop
and
je
jl
xchg
dec
mov
sub
push
push
xor
and
or
inc
out
loope
mov
pop
fldl
add
pop
mov
cmp
mov
xchg
xchg
movsb
out
cmp
popa
push
leave
push
stos
add
push
lock
lret
mov
shrb
dec
lods
ret
in
roll
cmp
fs
push
cltd
cmp
test
fwait
idiv
int
fildll
sahf
lds
cmp
iret
shlb
out
testl
sahf
ret
push
or
add
rorb
outsl
xchg
pop
gs
mov
cld
xchg
fstpt
repnz
in
sub
loope
push
addr16
lahf
cmp
nop
ret
nop/reserved
add
cmp
xchg
cs
push
addr16
arpl
aam
add
add
push
fnsave
add
into
xchg
addl
xchg
notb
pop
stos
xchg
add
pop
arpl
ss
out
add
mov
jnp
rol
scas
or
add
mov
xchg
pop
mov
mov
cmp
jb
jno
mov
inc
lock
xor
rcl
adc
add
bound
insb
push
xor
push
mov
add
dec
jge
or
mov
rclb
jp
xor
mov
test
add
cld
fsubr
add
add
sbb
xor
shlb
add
sarb
add
pop
stos
and
mov
push
push
stc
lcall
loopne
xlat
jo
sbb
hlt
inc
int3
adc
cld
or
xchg
test
mov
or
pop
cmp
xchg
dec
add
push
and
inc
out
fldl
pop
js
in
lcall
mov
push
shll
push
in
sbb
mov
shrb
lret
aad
cmp
mov
mul
paddusb
jae
push
xor
test
fisubs
dec
add
movsb
je
fiaddl
cmpsb
rcrl
jo
repz
or
jb
mov
popf
push
or
rolb
push
sub
sahf
scas
add
lods
and
sbb
mov
jne
and
cmpsl
lahf
push
pop
lcall
lods
inc
jo
push
add
push
ret
push
std
add
mov
add
dec
or
jbe
imul
scas
adc
ret
mov
add
cli
rolb
jmp
shlb
push
mov
add
ret
mov
jne
sar
cmpsl
dec
fnstsw
mov
sub
push
ret
imul
cltd
ljmp
loop
push
and
dec
or
test
fisttps
xlat
sarl
cmp
cmp
pusha
pop
pop
into
sbb
popaw
inc
cmp
jl
mov
jnp
stos
mov
adc
rolb
jge
movsl
sub
cld
add
incb
xor
nop
xchg
jbe
movsb
push
pop
and
test
ss
rol
mov
xchg
sbb
add
mov
pop
call
dec
push
icebp
and
cmp
adc
jge
jb
rcrb
dec
sbb
jecxz
add
pushf
push
adc
in
iret
cltd
adc
push
jns
cwtl
xchg
movsb
sub
ret
ss
cmp
fnsave
es
add
popa
mov
repnz
or
mov
test
lret
add
push
es
xchg
lds
cld
pushf
mov
daa
stos
arpl
iret
add
cld
scas
rolb
ret
jmp
shrl
add
into
das
add
jbe,pt
inc
xor
cld
mov
fmulp
ret
stc
or
mov
in
shrl
popa
sti
sub
xor
jae
sbb
sbb
push
xchg
and
sahf
fbstp
divl
xchg
fwait
add
in
rorb
and
inc
jnp
sbb
cmp
call
fldt
aaa
add
pushf
and
pop
jnp
std
je
push
xor
xchg
mov
sub
lret
pop
in
or
scas
call
dec
inc
mov
inc
lea
imul
inc
flds
dec
xchg
js
out
push
popf
add
sbbb
push
scas
mov
in
fstpl
jl
rcll
adc
dec
lods
xchg
les
push
cmp
jnp
add
sti
inc
cwtl
dec
popf
dec
cmp
mov
mov
cmp
push
add
das
mov
add
sahf
ds
fsts
add
orl
das
shlb
adc
mov
jb
mull
pushf
cmp
xor
sub
add
fidivrs
dec
sbb
arpl
pop
std
jnp
jns
inc
or
sub
mov
test
incl
js
cmc
and
add
scas
push
stos
ret
pop
repz
xor
mov
sbb
stos
rclb
ret
xchg
cld
pop
adc
jmp
lcall
stos
add
sbb
jl
inc
push
add
xchg
popa
dec
pop
fmuls
out
push
jb
cmp
add
cwtl
mov
xor
sub
or
mov
add
ror
daa
pop
int3
inc
push
xor
xorb
dec
xor
inc
dec
push
ret
negl
sbb
mov
jbe
and
mov
ja
dec
mov
inc
jmp
mov
ficompl
sahf
gs
inc
in
mov
jbe
xor
sbb
pop
out
je
add
in
leave
mov
xchg
jnp
dec
and
test
add
insb
lods
adc
add
cmpsl
int
sarl
inc
imul
xchg
test
jg
add
or
mov
pop
inc
lds
loop
push
push
or
push
add
std
jl
add
outsb
in
add
and
andl
js
sbb
rcr
pop
fimull
fwait
setle
lret
and
mov
push
push
cmp
and
xchg
xor
aaa
add
adc
push
enter
sub
jl
add
lods
notl
fildll
adc
sahf
sub
out
and
fisttpll
dec
cmc
mov
inc
idiv
xor
lea
and
dec
repnz
pop
cmp
punpcklbw
imul
cmp
add
jnp
fildl
sbb
iret
jge
lret
rcrb
stos
or
add
dec
pop
cld
scas
mov
stc
jno
pop
and
add
lds
or
rolb
roll
and
dec
test
add
cmp
cmp
pop
loopne
add
or
adc
dec
cmp
add
push
add
out
cmc
roll
or
inc
adc
movsl
add
pop
lock
in
xor
adc
jb
into
nop
push
fiaddl
mov
xchg
int
and
jns
push
push
out
mov
add
cli
jno
gs
arpl
xor
xchg
cmp
icebp
add
in
sub
cmpsl
arpl
pop
cld
and
outsl
adc
add
jmp
add
pushf
and
push
addl
sbb
add
xchg
dec
cltd
inc
testb
jne
pusha
jecxz
into
mov
cmc
lds
test
out
mov
hlt
add
inc
or
push
push
mov
lret
xchg
sahf
insl
xor
mov
add
out
bnd
aas
add
xor
jmp
mov
and
pop
dec
xchg
add
add
xchg
arpl
add
inc
jmp
lret
and
dec
jns
iret
jmp
and
mov
sub
stos
out
arpl
dec
in
pusha
inc
ds
xor
ja
jl
mov
dec
enter
add
data16
sarb
dec
loope
sub
adc
xchg
dec
repnz
aas
mov
ljmp
jne
je
call
add
arpl
sub
pop
inc
in
movsl
or
leave
aaa
cmp
les
in
add
ss
bound
shrl
or
add
mov
movsb
out
lods
mov
add
stos
xchg
push
push
adc
aas
pop
sbb
shrl
outsl
xchg
xor
add
xor
mov
sti
add
pop
sub
lock
fldl
add
addb
das
push
inc
sbb
or
aas
or
add
jl
dec
sub
mov
sbb
loopne
inc
cli
and
pop
add
movsb
into
or
idivl
adc
sbb
mov
ror
lahf
mov
loopne
sub
and
test
dec
and
add
stos
push
bound
stc
scas
add
mulb
test
popl
dec
push
jns
xchg
aas
mov
jle
pop
cmp
mov
push
add
hlt
stos
cltd
data16
pop
dec
add
clc
inc
mov
adc
dec
pop
mov
jno
cwtl
sub
call
fcoms
xor
jb
cmp
cmp
push
out
inc
dec
mov
jno
jmp
lret
or
cmpsl
dec
shll
rorb
xor
ds
in
scas
jmp
pop
rorl
popf
mov
std
aam
repnz
inc
fdivrs
and
jae
sbb
sbb
add
dec
xchg
iret
mov
shl
cmpsl
jnp
and
pop
inc
popf
inc
add
jns
add
jnp
imul
rcl
xor
add
push
mov
inc
adc
inc
ja
cltd
add
pop
add
into
sub
add
js
push
pop
test
popw
lds
xchg
aam
adc
sbb
ficoml
test
fcoml
xor
loope
add
xor
aaa
sar
mulb
fwait
add
in
movsb
lret
sar
and
notl
cmp
shll
or
jb
test
add
fildll
inc
sbb
push
test
and
add
insb
push
xchg
cmpsl
add
sbb
cmp
inc
cwtl
movsl
sahf
jo
or
cmp
out
add
mov
test
jle
pushf
xor
les
pop
sti
cmp
pop
icebp
push
jle
push
lock
pop
or
or
out
add
jge
into
shlb
ret
arpl
lret
dec
add
jne
mov
add
lahf
sbb
push
push
std
imul
insl
test
insb
rcrl
mov
pop
add
mov
test
fildl
xlat
popa
bound
cmp
add
mov
std
add
sbb
push
mov
mov
and
add
movsl
call
mov
dec
pop
aaa
add
rclb
push
fisubl
idivb
add
adc
mov
sbb
push
xchg
cmp
inc
ret
and
xchg
in
stos
icebp
xor
imul
inc
cmp
push
xor
adc
push
mov
xchg
je
int
test
lds
sub
cmp
add
pop
test
pop
add
movsl
mov
fildl
incb
add
repz
addr16
add
outsb
sti
and
lret
jg
mov
std
xchg
insl
sub
add
repnz
fiadds
int3
aas
gs
jl
lock
das
scas
insb
js
jmp
add
out
pop
push
pop
mov
lock
fidivs
dec
push
cmp
nop
ds
add
in
jge
push
scas
sub
popa
out
mov
mov
xor
mov
in
aas
dec
add
xor
in
push
mov
fwait
inc
dec
add
pop
lea
adc
daa
xor
mov
mov
push
and
and
int3
into
xchg
add
add
xchg
sti
mov
lock
mov
sbb
mov
cmp
fstpl
aaa
push
mov
jg
mov
inc
push
jnp
js
add
ss
ja
push
cmp
imul
pop
cmp
add
outsb
lods
xor
loopne
mov
add
cmp
cwtl
dec
dec
add
xor
sub
rcrb
add
lea
stos
sbb
pop
add
jb
xchg
mov
fsts
fadds
add
xor
cmp
and
jp
push
or
add
mov
aas
lahf
sbb
fimuls
adc
sbb
inc
dec
jmp
repnz
aad
fldl
std
cs
jbe
sbbb
test
dec
fcompl
and
pushf
push
mov
add
push
add
add
ja
push
sub
mov
stos
jb
push
fimull
add
push
pop
mov
add
xchg
mov
mov
shll
add
sbb
dec
sbb
sub
jmp
cmp
jb
cmp
mov
out
sub
in
enter
jno
jle
add
nop
jae
ret
pushf
mov
mov
popf
add
and
lret
mov
pop
repz
aas
cltd
xor
pop
jbe
adc
rorb
and
sbb
mov
in
sbbl
push
mov
pop
push
movl
rol
add
cmp
test
shlb
add
push
xchg
xlat
xchg
clc
pop
outsb
shl
sbb
or
ds
fildl
in
mov
sbb
ret
mov
or
add
js
cmp
add
mov
sahf
add
mov
xchg
push
add
repnz
out
add
orb
cmpsb
add
jmp
call
fwait
cmpb
adc
ds
push
mov
cmp
shl
inc
or
out
mov
orl
push
mov
lods
lahf
notl
ret
cmp
mov
cmpsl
mov
jle
clc
and
xor
lss
sarb
inc
push
out
lea
mov
mov
jmp
mov
mov
fistl
pop
xchg
or
add
gs
sub
mov
mov
mov
lds
add
stc
lock
faddl
and
cltd
or
jg
rorb
bound
pop
popf
ret
aas
test
ljmp
cmp
into
add
mov
test
popa
loope
push
adc
mov
and
add
jno
ljmp
movsl
dec
pop
sbb
andb
sbb
aad
roll
sbb
add
jns
jne
pop
test
mov
enter
imul
clc
push
sbb
leave
add
sub
cmpsb
jae
arpl
add
mov
and
push
addr16
ja
mov
add
adc
push
sahf
in
inc
js
fidivs
jge
sbb
aam
ret
sbb
pusha
sbb
sbb
push
in
push
pop
lea
and
mov
test
mov
hlt
xchg
mov
lods
outsb
test
cli
lret
add
lret
add
push
insl
add
sub
mov
add
sub
xor
mov
scas
cmp
std
jmp
adc
add
lock
xlat
add
mov
sbb
ret
pop
jne
and
push
sub
xor
inc
dec
cld
int
scas
aad
cmp
add
loope
dec
inc
mov
jge
jb
add
xchg
in
ja
int
xchg
cmp
xlat
and
insl
xor
imul
ret
xorl
dec
adc
lret
jno
inc
jge
int3
dec
mov
iret
sbb
pop
mov
out
push
xchg
pop
add
loope
xor
sub
add
push
sbb
outsl
mov
call
orl
push
mov
js
incl
int
fldl
push
popa
pusha
xor
inc
cmp
rolb
mov
add
sub
lock
ret
in
push
loopne
sub
add
cmc
push
dec
and
subb
mov
sarb
and
pop
or
mov
testb
ret
addr16
cmp
add
push
das
fisubrl
cs
add
pop
mov
add
rol
add
dec
adcl
mov
pop
and
sarb
shll
js
xchg
test
push
dec
jns
push
add
and
inc
cmpsl
sbb
add
add
in
adc
test
dec
test
jnp
fcoml
mov
add
mov
hlt
cmp
add
out
and
std
dec
push
stos
or
push
movl
add
mov
aaa
dec
roll
ret
sbb
jge
inc
add
into
leave
fdivrs
and
inc
jb
out
sarb
mov
mov
push
mov
fidivrl
into
insl
ljmp
js
cmpb
imul
dec
and
push
mov
dec
mov
cs
fdivrs
add
lret
mov
dec
cmpb
add
repnz
mov
sbb
dec
push
dec
cmp
pop
sbbl
xor
push
add
pop
or
sbb
add
mov
fiaddl
jnp
sahf
pop
test
rcrb
nop
adc
repz
out
out
pop
roll
xchg
fcoms
imul
cmpb
enter
js
ljmp
inc
add
add
jb
mov
add
push
jmp
int3
push
ret
mov
push
and
push
xchg
jecxz
fsubs
jnp
jle
inc
pop
inc
add
lret
aaa
lock
dec
cmpsb
or
shl
loop
vcvtsd2si
jae
add
lret
sub
enter
add
int3
mov
xchg
push
xchg
add
and
imul
push
add
or
add
push
shlb
in
inc
cmp
ss
xor
fyl2x
add
mov
mov
out
ret
data16
mov
enter
pop
adcl
dec
es
ret
jb
mov
jae
mov
mov
xchg
push
and
ret
pop
aas
cltd
in
or
insb
mov
enter
js,pt
test
and
ja
cmp
dec
pop
es
add
push
setge
push
ds
cmc
add
rcl
push
xchg
xor
push
hlt
movsl
dec
add
cmp
adcb
add
outsb
jbe
pop
lds
rcr
add
and
add
loop
xchg
test
cli
movsb
pop
sub
mov
outsl
add
xchg
jle
cmpsl
pop
icebp
mov
and
inc
mov
xchg
clc
mov
mov
roll
pushf
arpl
ret
sub
stos
inc
in
add
xchg
mul
adc
xor
pusha
cli
dec
and
stos
data16
add
leave
into
jg
push
fstpl
pop
fidivrl
cmp
loope
outsb
push
or
dec
add
out
or
subl
cmc
mov
repnz
adc
aas
cli
mov
inc
out
scas
ktestw
ss
or
add
sub
xchg
mov
push
notb
lds
cmp
fsubl
fimull
add
and
add
pop
sub
adc
pop
add
popf
cmc
mov
jp
loop
sbbl
in
xchg
sahf
and
add
fstp
and
aaa
imul
add
jae
gs
stos
mov
ljmp
roll
outsl
test
sbbl
mov
lods
mov
mov
push
shrl
test
mov
mov
daa
add
inc
or
xchg
inc
mov
jmp
lods
and
add
push
and
fstpl
push
add
add
pop
imul
cmp
std
fists
cli
lret
cmp
add
and
push
push
nop
xchg
ljmp
xor
movsl
jmp
stc
js
xor
fstp
add
dec
hlt
dec
rcll
test
loopne
dec
pop
and
jp
xorb
testl
add
lahf
call
sti
add
sbb
sbbb
add
stos
insb
adc
aad
faddl
lahf
cs
addr16
rorl
or
cmp
add
adc
dec
adcb
ret
mov
aad
add
inc
sub
jbe
stos
jecxz
xchg
fiaddl
cmp
add
mov
cmpsb
mov
stos
xor
lahf
inc
push
arpl
mov
and
cld
cmp
jb
cli
pop
mov
out
mov
stc
xor
out
daa
jno
ds
jbe
lret
sbb
adc
adc
xor
int
cmp
inc
pop
inc
dec
inc
popf
loop
mov
aam
movsl
les
scas
add
adc
mov
mov
or
and
jae
rolb
lods
pop
pusha
rcll
fimull
insb
xchg
adc
leave
mov
add
into
ss
aas
mov
movsb
pusha
jg
mov
mov
imul
or
cltd
incb
pop
lret
or
into
outsb
repnz
mov
enter
inc
mov
push
sahf
add
cmp
negb
arpl
and
pop
ret
xor
pop
jecxz
loope
add
test
cli
push
fwait
inc
leave
ds
lds
cmp
fiadds
push
xchg
out
notl
cmp
or
pop
xor
mov
dec
movsl
push
sub
sub
jae
add
adc
dec
mov
add
shlb
xor
adc
movb
xchg
and
test
jo
xor
push
mov
inc
add
data16
or
pushf
lea
adc
loop
sub
rolb
fildl
pop
loopne
jge
scas
stc
mov
mov
inc
ret
and
sub
push
je
xchg
hlt
mov
jo
and
pop
cmp
in
int
mov
add
rclb
pop
add
pop
sbb
test
mov
insl
pop
pop
out
add
sub
adc
test
sbb
outsb
mov
inc
test
decb
in
jne
inc
cmp
andb
stos
add
jbe
and
not
jno
stos
and
mov
pop
repz
js
cmp
inc
add
sub
jle
push
mov
mov
arpl
cmp
cwtl
ret
clc
jle
add
sbb
loop
add
iret
stos
incb
mov
push
and
cmp
or
and
popl
cli
ja
mov
in
hlt
mov
lea
cmpb
cmp
sarl
das
xor
or
jp
in
outsb
add
sbb
data16
cmp
imul
add
imul
js
cmc
adc
add
rorl
and
cs
mov
and
mov
mov
dec
inc
or
repnz
and
cmp
lock
subb
clc
dec
and
fcoml
xchg
ja
jns
xchg
pop
dec
movsb
in
adc
dec
stos
data16
fwait
xorb
cmpsb
pusha
adc
and
add
dec
xor
jle
and
add
mov
adc
je
push
outsb
adc
loopne
sub
repz
mov
mov
call
add
xor
mov
jne
sar
loop
add
or
xchg
int
xor
rorl
lahf
cmc
daa
fisttpll
sub
fs
cmp
lods
add
ds
sbb
cmp
test
gs
add
pop
clc
push
sub
or
pop
or
add
xchg
mov
sub
inc
insb
psrlw
add
iret
ljmp
pop
mov
es
add
ret
insl
dec
jo
ret
xlat
pop
aaa
movsb
and
mov
sub
outsb
mov
jns
std
inc
mov
mov
add
pop
pop
and
scas
cmpsl
add
cmp
or
add
aad
in
sbb
xor
push
test
mov
mov
mov
movd
push
jo
sub
repz
jo
add
push
aam
popa
cmp
imul
adc
sbb
jecxz
jp
out
outsl
add
inc
add
roll
lahf
fwait
add
push
xchg
add
mov
cmp
jb
mov
mov
out
pop
loop
xor
repnz
in
mov
loope
mov
xchg
xchg
inc
xor
pop
sbb
in
js
and
loope
sub
add
pop
xor
ret
popf
mov
add
aam
add
sub
movl
inc
decb
cwtl
mov
popf
mov
sbb
lea
add
pop
mov
sub
leave
js
sbb
inc
outsb
and
xor
daa
test
add
subl
sub
push
lods
or
lahf
ror
and
sub
adc
mov
popf
add
jle
jo
inc
mov
cmpl
add
cmp
push
cmpsl
mov
int3
mov
stos
add
hlt
stc
jle
and
add
fwait
lret
in
stc
add
inc
mov
push
pop
adc
jbe
movsb
sbb
shll
or
inc
mov
pop
add
imul
ret
push
bound
push
fldt
out
pop
mull
mulb
pop
popa
jae
enter
repz
mov
xchg
inc
stos
jo
mov
and
dec
cmp
lea
iret
roll
sbb
push
or
test
js
call
sarb
add
ret
xor
pop
dec
add
xor
add
gs
add
xchg
and
jl
imul
jne
cltd
outsl
push
mov
add
insl
xor
ficompl
mov
pop
orb
add
mov
pop
add
xor
incb
fsubl
sbb
fisttpll
add
cmc
mov
mov
xchg
add
push
cmpsl
rorl
aaa
roll
pop
and
mov
sahf
add
sub
mov
cltd
xchg
cli
sbb
shlb
cmp
pop
inc
add
inc
jae
xlat
add
add
or
ret
arpl
jmp
fnstenv
add
mov
das
xchg
test
orb
or
push
aaa
add
adc
mov
call
jl
into
insl
adc
mov
pusha
mov
and
jo
outsl
mov
jg
in
test
ret
xor
add
mov
repnz
dec
test
mov
lret
pop
mov
stos
cmp
dec
cmc
insl
jbe
add
repnz
cmp
push
fdivrs
add
pop
lods
cmpsb
jmp
adc
clc
adc
sbb
add
jbe
xor
dec
dec
xor
mov
xchg
add
push
mov
cmp
adc
xor
add
out
iret
push
cmp
mov
mov
fidivrs
inc
lods
pusha
fdivrs
jge
xorb
push
sbb
xchg
in
adc
aam
xchg
mov
add
insl
ret
adc
dec
adc
add
enter
mov
pop
rcr
ljmp
cmp
ss
xchg
in
jmp
add
into
add
xchg
pop
aaa
push
dec
mov
and
sub
inc
fiadds
push
xor
add
dec
mov
push
and
inc
out
pop
daa
cmp
add
pop
push
adc
leave
xchg
pop
add
das
fnstsw
fists
outsl
pop
cmp
lods
cmp
or
in
fs
inc
cmp
pop
push
in
add
adc
fiaddl
sub
mov
pop
cli
mov
repz
loop
jl
add
cmp
insb
repnz
sahf
mov
fsts
lret
add
xchg
outsl
mov
loopne
dec
adc
jp
sbb
mull
sub
cmp
lahf
xor
add
dec
ret
aas
dec
rolb
stos
in
out
mov
add
cs
cmpsl
push
js
fsubrl
adc
ds
jns
add
imul
and
lcall
test
pushf
roll
and
sbb
popl
les
and
add
bound
add
outsb
mov
add
mov
ret
jno
xchg
loope
mov
mov
adc
xor
xchg
adc
mov
pushf
stos
inc
push
movb
fimull
fwait
popf
pop
inc
sub
scas
sub
add
dec
leave
inc
mov
rorl
sbb
add
pop
ret
dec
dec
mov
bound
mov
cmc
push
mov
cltd
mov
rorb
and
lret
test
inc
xchg
adc
sub
lret
pop
add
cmp
add
stos
sub
aad
popl
xchg
stc
pop
into
lds
or
sbb
or
add
notl
xor
clc
int3
jno
adcl
push
adc
jecxz
mov
xor
lldt
fwait
mov
add
add
xor
cmpsb
push
int
pop
rcll
mov
jae
xor
xor
pop
sub
imul
push
inc
lods
je
add
fistps
xlat
enter
add
popa
adc
loope
cmp
insl
xor
jle
hlt
jo
in
pusha
mov
xor
ss
dec
insl
mov
cmp
add
out
repnz
popa
mov
add
mov
int3
mov
mov
aad
pop
sarl
push
jo
fists
sbb
xlat
add
pop
imul
cltd
adc
cmc
dec
xchg
and
add
xchg
add
insl
test
loope
xlat
or
xchg
hlt
cmp
and
cmp
sbb
add
mov
jle
mov
push
sahf
into
cmc
jo
pop
inc
push
dec
sub
inc
mov
in
pushf
cmpsb
mov
cld
push
mov
xor
xor
jbe
in
add
add
and
and
xor
mov
mov
pop
and
xlat
add
daa
jecxz
adc
icebp
push
xchg
test
pop
sub
std
fiadds
cmp
push
cs
clc
xor
sbb
push
pop
out
pushf
mov
cmp
jle
addr16
add
inc
mov
shll
pop
testb
and
add
add
jg
loope
jp
push
rorb
es
add
cmp
mov
hlt
xchg
dec
pop
add
test
mov
mov
lret
push
rcrl
push
push
lea
insl
sub
mov
repnz
pop
jl
pop
and
testl
jns
pop
out
clc
xor
js
sub
xor
or
jnp
add
sub
add
mov
xor
clc
ret
out
popa
out
mov
lods
inc
add
lea
arpl
and
or
vshufps
enter
lock
push
in
sub
inc
and
inc
outsb
pushaw
mov
int
ret
insb
adc
mov
gs
add
ljmp
sbb
je
push
cmp
pop
loope
xchg
sub
les
push
sbb
dec
add
call
mov
in
pusha
inc
sbb
mov
push
inc
push
add
jno
and
jb
xor
popa
dec
add
jg
push
testl
sar
xlat
mov
sarl
outsl
add
mov
jmp
xor
cmp
pop
pop
add
add
sti
lret
inc
int
jmp
sub
outsl
sbb
loop
incl
dec
insb
mov
mov
xchg
fxch
leave
addb
sbb
inc
jge
loopne
pusha
js
xor
and
push
les
push
imul
pop
push
add
out
adc
dec
mov
push
fisubrs
and
movsb
arpl
aad
xor
mov
test
adc
push
arpl
add
pop
mov
adc
push
into
add
rolb
push
rolb
pop
cs
ficoml
cmc
adc
pop
jns
rorb
pop
mov
mov
ret
mov
adc
pop
inc
sahf
movsb
add
xchg
cmpsb
into
mov
or
sub
inc
jb
insb
pop
mov
jmp
arpl
out
adc
popf
jecxz
jbe
mov
push
pushf
icebp
adc
andl
ret
mov
cmp
mov
inc
pop
mov
add
jno
sub
sub
mov
and
jmp
ret
icebp
sbb
mov
pusha
dec
add
add
push
inc
nop
pop
cmpb
mov
add
mov
sub
mov
aam
rol
push
adcl
add
loop
or
lods
jp
imul
lds
or
repz
iret
add
lcall
ret
bound
insl
and
lret
mov
or
mov
insl
cmp
inc
rolb
mov
fiaddl
mov
inc
popa
movsb
rol
jl
out
cld
cmp
aaa
fcomi
add
enter
outsl
iret
push
rcrl
in
int3
mov
push
or
or
sub
bound
add
rol
and
cmc
popa
div
push
cmpsl
fcomps
cmp
mov
add
jo
mov
stos
loope
add
lds
cmp
xorl
jno
imul
rol
adc
xchg
shlb
add
sbb
out
in
or
rorl
jge
add
jno
push
ret
sti
add
dec
rorl
pop
mov
add
jo
imul
outsl
test
rcrb
andb
push
add
add
scas
cmp
negb
fmuls
inc
leave
add
incb
cmp
add
imul
push
nop
cmc
add
add
inc
inc
push
mov
jmp
xor
ljmp
nop
mov
adc
sar
insl
push
and
xor
jne
add
or
lcall
add
mov
mov
mov
mov
mov
cmp
xor
xor
mov
clc
mov
sbb
push
cmp
mov
loop
insb
adc
add
push
inc
repz
stos
cmp
not
dec
add
sti
frstor
shr
mov
add
aaa
es
shll
mov
hlt
push
sub
push
add
add
add
jle
int
push
sub
hlt
imul
flds
jecxz
mov
shl
sbb
incl
aas
in
inc
jl
push
pop
add
mov
pusha
ret
adc
outsb
sub
add
lock
xchg
xor
dec
leave
sub
mov
add
inc
sub
add
test
xlat
scas
addl
scas
mov
ss
rol
or
add
or
sarl
out
add
data16
xchg
mov
fsubp
cmp
cmp
cmpsl
inc
cmp
ret
out
test
dec
out
or
aas
ljmp
xchg
in
je
add
rolb
cmpl
adc
shr
sbb
mov
shll
aas
inc
add
outsb
ds
cmp
add
cltd
mov
jmp
xchg
into
cld
push
popf
inc
movsb
xchg
aad
adc
sbb
addr16
inc
mov
and
jo
lods
cltd
xor
cmpl
add
adc
jae
dec
sti
inc
addl
sbbb
pop
adc
std
jne
xor
ss
add
popl
sahf
andl
fnstcw
testb
outsb
dec
inc
aaa
dec
pop
mov
or
test
jp
xchg
shll
aam
sbb
in
mov
add
ficomps
lcall
dec
push
stos
pop
lahf
add
cs
pop
ret
cmp
pop
xor
testl
mov
pusha
mov
add
rep
ret
fadds
xchg
inc
push
xchg
mov
add
fidivl
add
xor
add
shll
dec
inc
cmp
sbb
fadds
stos
sbb
std
orb
or
in
mov
xchg
xor
xor
test
add
stc
and
cmp
pop
pop
jge
sbb
ljmp
pop
outsb
add
push
rcl
sub
lods
xchg
mov
daa
sbb
inc
xchg
add
jbe
xorl
add
xor
push
dec
mov
stc
fmull
leave
mov
fnstenv
mov
pop
rcrb
push
enter
mov
push
mov
cmp
out
lea
or
imul
in
test
pop
xorl
js
fisttpl
inc
push
add
adc
pop
push
cmp
sahf
add
dec
shlb
int3
fsubrs
imul
cmp
inc
adc
outsl
lods
ret
jecxz
nopl
or
lahf
fwait
cmp
mov
and
push
sahf
add
cmp
xchg
pop
lret
rorl
adc
xor
cmp
enter
sub
bound
shrl
test
and
add
cmpsl
add
jne
mov
dec
and
or
mov
adc
xor
out
and
ss
add
lea
mov
in
les
jnp
jp
mov
test
fistpl
push
jge
popa
add
mov
dec
mov
add
add
movhps
dec
dec
mov
es
push
add
imul
add
pop
ss
adc
xchg
pop
adc
test
xchg
mov
cmp
pop
add
pop
out
mov
mov
xor
add
int
add
cmc
iret
lea
out
inc
and
mov
cmp
lods
inc
add
xor
pop
rol
jl
mov
sub
xor
jne
push
fisttps
cli
ficompl
add
push
inc
add
les
cmp
pop
sub
add
xchg
add
addr16
mov
hlt
pushf
or
mov
adcl
call
inc
loopne
mov
add
mov
rep
inc
inc
es
or
mov
add
jo
or
in
stos
outsb
add
pop
test
lcall
mov
add
loopne
cmpsl
add
mov
pushf
jl
sbb
sub
inc
into
adc
popa
pop
mov
fstp
add
mov
xor
mov
jo
sbb
mov
or
mov
out
adc
xor
fildl
je
pop
cwtl
add
or
in
ret
test
arpl
ja
mov
xor
xchg
repz
and
dec
pop
data16
mov
mov
adc
ret
or
mov
ljmp
sti
add
scas
xchg
mov
mov
out
or
mov
mov
iret
ljmp
or
inc
pop
das
mov
push
dec
inc
shrb
or
out
cmp
inc
push
or
xchg
xor
push
add
enter
push
shrl
pop
lods
fstl
cmp
sub
add
stos
ss
lahf
test
cwtl
sbb
mov
mov
adc
mov
xchg
inc
loop
cltd
and
pop
enter
pushf
mov
sahf
lock
mov
add
push
and
ret
loope
pusha
loopne
dec
int
js
inc
jp
into
push
and
push
add
jns
rolb
lahf
xchg
sbb
push
test
jge
and
dec
adc
xor
cmp
adc
aad
and
in
les
xchg
test
xchg
adc
add
push
adcl
repz
mov
jle
add
push
cmp
or
insl
addl
fs
int
mov
xor
add
repz
adc
jge
sub
daa
fadds
outsl
xchg
cmp
adc
jmp
add
cmp
and
rol
jl
cmpsl
add
test
ja
add
xchg
jecxz
les
mov
loopne
std
push
adc
dec
pop
add
mov
lods
aam
sub
sub
dec
rcll
ret
inc
xor
inc
cmp
sbb
aaa
loop
dec
movsb
jnp
subl
add
into
cwtl
nopl
mov
pop
ret
mov
out
xor
test
shlb
add
lock
and
icebp
add
repnz
data16
add
movsb
imul
out
inc
daa
into
or
jb
or
pop
popf
js
or
lcall
scas
inc
push
lret
push
dec
cmp
push
popf
int3
mov
add
sbb
xor
dec
sbb
sbbb
cmp
ss
jno
outsb
push
cmp
shlb
js
mov
jecxz
adc
sub
enter
sub
add
leave
push
lods
mov
mov
sbb
shrl
add
fisubl
add
push
in
add
jge
mov
cmpsl
add
add
push
je
iret
stos
outsb
add
xor
sbb
insl
cmp
fistl
rorb
add
jge
lods
pop
mov
insl
add
loopne
add
mov
stc
das
and
pop
imul
add
ret
add
pop
int
add
cmpsb
iret
mov
pop
mov
ret
mov
fistl
add
push
inc
aad
cmc
add
dec
sub
jmp
adc
cld
add
pop
xor
inc
jbe
cs
nop
add
push
shrl
shlb
xchg
fdivs
mov
cli
add
jb
daa
and
repz
inc
icebp
mov
xchg
lret
aaa
xor
cmp
push
mov
stos
cmp
adc
sbb
push
mov
ficomps
jb
mov
add
cmp
xchg
add
adc
mov
loope
sbb
fsubrp
add
dec
pushf
jg
int3
idivb
add
lcall
add
xchg
gs
imul
cmp
mov
add
sub
js
jnp
test
cmp
jmp
sar
hlt
pop
adc
mov
cmpsl
lock
or
dec
inc
adc
bnd
and
fstpl
or
add
dec
add
pop
pop
dec
add
mov
xchg
add
xor
inc
ja
lret
add
add
test
inc
cmp
and
push
add
mov
lea
dec
push
filds
jg
lods
sbb
pop
sub
enter
loop
out
je
outsl
pop
xchg
test
aaa
loope
jl
sub
outsb
ficoml
dec
sti
ja
nop
es
call
or
add
sahf
inc
mov
and
fiaddl
jne
cmc
inc
imul
add
out
dec
push
add
or
push
sub
inc
lods
fnsave
cmp
mov
in
mov
cmp
dec
in
mov
mov
jnp
sti
xor
cmp
xor
test
shrl
mov
cmp
out
das
xchg
sub
add
int3
cmc
add
pusha
pop
addb
cs
xchg
inc
sub
jge
mov
movsb
xor
add
add
jns
and
pop
scas
add
fdivp
push
sub
jne
test
dec
xlat
add
aad
xchg
cs
xchg
dec
orl
sub
mov
adc
lcall
arpl
push
repz
fwait
add
sub
push
add
adc
js
sbb
add
cmpsb
dec
pop
mov
pushf
fstpt
sarl
fiaddl
sbb
insl
mov
add
xchg
call
pop
add
jb
cmp
sub
mov
jns
jno
push
add
push
jle
push
jae
mov
mov
or
lea
stos
int
outsb
cmp
dec
rorl
popf
inc
test
add
aad
sub
scas
fimuls
rorb
mov
push
xchg
jmp
cmp
nop
addl
push
pop
inc
loopne
stos
mov
es
pop
sahf
loopne
xchg
pop
inc
jg
mov
roll
sub
cmp
addr16
test
and
in
add
xchg
addr16
ficoms
xchg
shl
push
or
in
imul
mov
xor
add
or
mov
js
outsb
sub
lds
push
sbb
call
mov
jl
pop
cmp
pop
adc
add
xor
aad
inc
xchg
aam
out
xchg
in
xor
xlat
aaa
sbb
ss
or
add
inc
mov
fcompl
xchg
das
andl
mov
outsl
cmp
in
jge
add
loopne
cmp
and
cwtl
lret
or
cmpsl
add
dec
push
and
imul
mov
lods
sub
std
dec
xor
ss
xchg
push
jns
jmp
mov
gs
sbb
out
jle
shrl
pop
lcall
pop
add
jge
nop
jne
fwait
dec
add
ret
out
bts
add
dec
testb
ret
stc
mov
add
repz
imul
cltd
add
dec
xor
cmpsb
shr
add
pop
mov
jb
and
add
daa
cmp
arpl
mov
adc
xchg
add
adc
cmp
jne
inc
dec
mov
mov
mov
movsl
dec
add
adc
push
aaa
pcmpeqd
out
xor
roll
mull
pusha
cmp
jne
push
inc
add
ja
add
into
lds
dec
xchg
mov
mov
rclb
cmp
jmp
mov
add
out
sbb
push
push
imul
mov
sub
and
notb
inc
mov
push
lods
out
xchg
in
pop
mov
adc
nop
and
pop
ja
add
push
sarl
cmc
jg
loopne
inc
mov
movsl
xchg
xor
nop
add
ret
test
or
lret
xor
test
adc
add
repnz
inc
in
aas
push
add
cmp
xor
pop
bound
jmp
mov
int
push
mov
es
inc
aas
xor
pop
ret
dec
add
out
mov
adc
jno
dec
lret
scas
fildl
push
enter
out
sub
punpckldq
mov
ret
out
jnp
inc
rolb
ja
adc
xchg
or
inc
add
cmp
xchg
inc
push
in
orb
cmp
add
push
gs
xchg
push
sarb
sbb
in
or
add
xchg
cmp
je
incb
xchg
cmpsl
shl
or
add
insb
cmp
push
daa
movsl
arpl
mov
std
sti
test
testb
aad
mov
fsubrl
cmp
gs
or
movsb
out
and
xchg
dec
add
jnp
push
into
pop
aas
add
addr16
mov
add
mov
lret
dec
add
xchg
pop
cmp
xor
cmp
test
mov
ljmp
pop
mov
add
inc
add
das
lock
insb
xchg
dec
sahf
addl
iret
jbe
jb
inc
cmp
mov
loopne
cmp
add
lds
pop
sbb
lret
xor
pushf
inc
jns
sbb
out
int3
ficomps
adc
dec
and
inc
outsl
add
jo
mov
sub
fwait
test
int3
xchg
sbb
adc
lahf
enter
ret
jge
mov
xor
repz
mov
push
lret
sub
stos
adc
bound
pop
fs
addr16
add
rolb
inc
sbb
gs
test
in
mov
xchg
test
jb
roll
incb
add
int
shlb
int3
mov
jno
mov
mov
or
sbb
xor
push
inc
xorb
or
dec
mov
jmp
pop
stos
shl
add
cltd
inc
add
loope
push
add
lock
stc
add
sub
dec
or
add
inc
out
imul
mov
negb
scas
add
pushf
sbb
sarb
pop
adc
push
cltd
sub
aam
inc
or
add
inc
movsl
out
into
mov
fidivrs
fdivrl
and
aad
lds
mov
outsb
push
loop
daa
mov
xor
call
addr16
jle
inc
mov
jecxz
mov
and
inc
push
shll
jmp
jge
add
or
mov
add
sti
mov
jae
mul
add
ljmp
add
cmpl
shrb
inc
mov
popa
std
xor
cmpsl
inc
jnp
inc
sub
mov
push
outsb
inc
sub
mov
xchg
push
std
mov
outsl
add
xor
sub
cmp
cs
pushf
or
push
inc
jle
mov
dec
mov
ljmp
jge
or
rcll
push
inc
mov
dec
inc
lods
fmuls
nop
sbb
xchg
and
insl
imul
sti
cltd
add
subb
dec
xlat
mov
add
je
dec
adc
test
fmul
pop
and
mov
cs
add
int3
incb
jae
and
jge
daa
push
mov
sub
add
and
push
adc
lods
inc
add
cmp
add
je
xor
iret
xlat
jbe
mov
cwtl
shll
daa
and
pop
mov
jne
inc
inc
mov
mov
insl
inc
daa
inc
mov
loope
xchg
movsb
aas
icebp
add
jge
arpl
jb
js
leave
mov
cwtl
pop
push
sbb
mov
xchg
add
pop
push
iret
sarl
adc
or
push
dec
out
aad
pop
lea
adc
ljmp
jl
fmuls
in
xor
dec
pop
jg
xor
hlt
inc
jns
in
or
icebp
mov
test
adc
xor
cmp
in
inc
pop
insl
loopne
jnp
lcall
test
rorb
mov
shl
jg
jmp
aad
xor
sti
adc
jns
rcrb
test
xlat
push
pop
sbb
add
shlb
in
fsubs
add
fcomi
xchg
cmp
xor
out
push
cmp
add
sti
mov
inc
in
push
jne
popl
cmp
add
xchg
movsb
mov
jae
and
add
mov
lds
add
sub
jns
mov
test
roll
je
and
xchg
cmpb
sub
mov
add
mov
adc
imul
add
mov
lods
addb
into
xchg
add
adc
in
lret
mov
addl
jnp
xchg
enter
fstl
mov
xor
cld
add
movsb
and
in
inc
sbb
mov
and
sti
mov
popf
movsb
icebp
pop
gs
sub
and
and
insb
inc
mov
add
mov
xor
add
pop
jbe
push
pop
or
mov
sbb
xlat
adc
or
notw
rcll
hlt
test
inc
rcr
dec
pop
sbb
bound
add
stos
push
cmp
aad
pop
inc
clc
ret
pop
pop
mov
and
addl
stc
and
push
nop
mov
pop
add
inc
addb
or
pusha
call
fidivl
xchg
lret
syscall
in
or
repnz
mov
ljmp
add
mov
enter
rcr
cmpl
stos
xor
push
jno
and
mov
sbb
add
call
cmc
mov
aam
adc
pop
int
dec
mov
add
pop
cmp
add
aam
add
dec
pop
roll
push
mov
add
sbb
xchg
sub
lret
sbb
pop
inc
jbe
sbb
ss
or
add
jnp
aam
test
rcrb
push
inc
pop
push
mov
dec
cmp
ret
outsl
aam
imul
xor
fs
jno
mov
or
lcall
movsb
cmp
add
cmc
mov
imul
pop
cld
inc
popa
int3
out
cmpsl
add
xchg
pop
inc
cmpsb
add
jecxz
add
inc
cmp
icebp
int3
fwait
cmp
ffreep
aaa
mov
sub
cmpsb
sbb
nop
add
or
inc
push
out
adcl
mov
pop
bound
jne
lods
lock
mov
and
fldenv
mov
repz
push
and
add
inc
add
xor
and
lret
movsl
ss
lret
out
sub
add
jo
hlt
sbb
roll
lahf
pop
push
mov
fstpt
sub
in
or
add
jbe
add
cwtl
mov
outsb
add
cmp
imul
test
shrb
scas
sub
pop
jg
inc
test
xorb
lock
mov
xchg
pop
mov
pop
push
sub
push
add
mov
bound
cmc
into
add
pop
push
loop
jg
pop
add
xchg
movsl
add
mov
dec
xor
aas
sub
mov
scas
fsubrs
add
test
mov
idiv
jle
xor
daa
fs
inc
xor
add
push
mov
mov
arpl
insb
add
cmp
sbb
push
shlb
add
test
cmp
push
xor
push
mov
add
xchg
js
add
mov
repnz
es
mov
cmc
jg
jo
mov
or
push
jno
outsb
xor
sub
movsb
cmp
adc
ficompl
xchg
mov
jne
repnz
sub
cmp
fwait
cltd
cwtl
jl
mov
inc
scas
mov
outsb
mov
clc
pop
inc
pop
inc
mov
hlt
pushaw
lock
sbb
xor
dec
mov
out
or
addb
dec
xor
insl
pop
inc
out
add
je
cli
and
iret
xor
add
add
mov
in
add
pop
jge
add
out
ja
cwtl
mov
push
loopne
mov
loop
cmpb
movsl
xchg
pop
add
jnp
xchg
loope
lret
pop
add
jmp
sbb
call
aas
add
loop
pop
inc
sub
incl
mov
ret
cwtl
fcoml
add
push
or
fpatan
ffree
mov
pop
push
add
adc
std
pop
lods
insl
add
cmp
mov
xchg
or
cmp
test
sub
sbb
pop
pop
push
mov
add
fmuls
subb
sahf
jecxz
pop
mov
dec
clc
gs
push
mov
dec
xlat
and
incl
jmp
lea
add
mov
negl
mov
rcrb
mov
fidivs
add
stos
das
push
mov
data16
pop
std
test
add
xor
and
cmp
call
jns
pop
addb
push
outsl
scas
or
ficompl
xchg
pop
stc
jno
fnstsw
pushf
mov
jp
roll
and
add
sub
add
aam
fdivrs
mov
jb
mov
sbb
pop
add
xor
adc
jno
mov
mov
mov
lahf
xor
loop
in
inc
fstpt
jae
int
add
push
push
fadds
sub
sub
popf
mov
aaa
xchg
push
sub
jns
add
push
fisttpll
add
call
dec
shrb
and
std
enter
add
daa
pop
mov
xor
or
xor
xchg
andb
test
rol
lret
or
push
shll
fs
mov
imul
mov
push
or
add
lods
cmp
loopne
adc
mov
jbe
add
jns
xor
adcb
or
add
imul
add
es
fwait
sarb
mov
aaa
pop
hlt
outsb
push
dec
out
xchg
shll
or
push
jae
scas
mov
add
inc
and
lahf
andb
jp
test
rcr
outsl
add
js
in
dec
xor
dec
cmpsl
int3
cmp
mov
cltd
pop
push
jo
out
aaa
mov
add
les
xchg
inc
clc
xchg
dec
add
imul
sbb
dec
into
jle
add
outsb
mov
jbe
mov
stc
sbb
push
mov
lds
sbb
int3
and
add
test
mov
jp,pn
and
inc
int3
imul
add
roll
cwtl
mov
pop
les
xchg
fadds
pop
mov
or
push
add
popa
and
repnz
add
imul
inc
mov
and
mov
adc
add
jo
sub
xor
cwtl
jbe
add
nop
adc
sub
inc
ret
or
mov
mov
fiadds
das
inc
mov
daa
btc
popf
xchg
std
insl
adc
xor
cmp
cmp
adc
arpl
movsb
jb
mov
pushf
lods
sbb
inc
sbbb
scas
pop
inc
cmp
movsl
jae
iret
push
shrb
xchg
cli
lret
mov
xchg
pop
lock
fstpt
inc
in
mov
push
mov
in
add
jno
sbb
fiadds
sbb
loopne
mov
clc
mov
cmpsl
test
out
incl
lret
pop
inc
jmp
pop
add
stos
test
aas
popw
jnp
pop
outsl
cmpsb
add
ss
add
testb
dec
mov
inc
scas
and
jl
shll
push
xchg
xor
adc
in
ss
mov
add
xchg
sbb
mov
jne
jbe
lods
enter
rolb
ds
ret
xchg
push
xchg
adc
push
repnz
inc
pop
jb
data16
xor
add
ret
jne
jmp
adc
mov
add
repz
shll
clc
adc
cmp
mov
hlt
push
je
fcompl
dec
call
or
add
aaa
pop
mov
and
incl
add
mov
sub
inc
lea
add
test
aam
add
xchg
inc
fsubrs
fisttpll
mov
and
or
inc
outsl
push
add
in
sbb
sub
pop
adc
pop
inc
imul
add
or
sub
imul
bound
adc
lcall
push
insb
bnd
sahf
mov
add
scas
add
dec
xchg
jp
mov
loopne
jnp
and
mov
cmp
add
or
dec
sbbl
or
pusha
add
insl
stos
lret
add
aad
xchg
adc
clc
add
pop
addr16
test
rcrl
dec
adcl
out
xchg
insl
push
sub
cmp
jbe
out
repz
adc
xchg
stos
pop
cmpsb
lret
pushf
addb
movsb
shlb
mov
mov
aaa
shll
jge
add
push
pop
in
xchg
add
fadds
outsl
mov
pop
jb
push
cmc
mov
add
fldenv
add
xor
xorl
into
push
sbb
sbbl
or
lcall
pop
call
dec
rorb
mov
jno
dec
idivl
das
push
jmp
stc
and
out
dec
pop
or
orl
and
pop
lret
pop
popf
rorl
push
lds
sub
int
negl
ljmp
adc
sbb
frstpm(287
out
arpl
dec
imul
add
into
jecxz
flds
or
rcl
js
jg
mov
lds
pop
adc
and
and
dec
pop
dec
add
orb
cmpsl
shll
mov
xor
push
xor
add
loopne
popf
xor
test
pop
dec
mov
push
and
add
cmpsb
ja
jo
adc
sbb
sub
add
mov
adc
sub
pop
adc
filds
pop
add
mov
add
loop
mov
movb
addr16
jo
loope
nop
mov
xor
dec
out
lea
inc
xor
cmp
xlat
stos
in
lret
fnstcw
add
and
inc
fildl
cs
or
shll
les
add
and
int
pop
xor
loopne
stc
in
ss
dec
roll
fisubrs
popf
push
cltd
push
filds
xor
mov
in
add
add
jg
xlat
add
shl
jle
cwtl
pop
add
inc
mov
add
addl
mov
insl
pop
cmc
outsb
fnsave
push
inc
mov
jle
mov
and
sub
add
nop
fdivrs
mov
and
fsubrl
add
cmc
xor
ja
inc
sahf
stos
xor
xchg
add
icebp
iret
idivb
xchg
add
jmp
adc
mov
add
stos
sbb
push
dec
rcrb
cmp
adc
mov
add
jbe
mulb
test
gs
je
cltd
mov
in
push
test
es
mov
xlat
mov
hlt
mov
sbb
mov
jb
test
inc
and
cmp
add
add
cmp
repnz
push
es
xor
pop
mov
sub
ljmp
hlt
sbb
lcall
xor
cmp
add
adc
add
adc
stos
dec
shll
add
cltd
into
addl
pop
cmp
dec
jbe
jp
push
add
sti
sub
add
or
lds
loope
add
dec
pop
outsl
andb
cmp
ret
or
sarb
inc
and
sub
addr16
fdivrl
dec
pop
mov
jmp
add
in
data16
loope
nop
cmp
addr16
int
push
push
pop
hlt
mov
call
movsb
arpl
dec
mov
addr16
ljmp
inc
adc
cmp
xchg
or
adc
xlat
push
add
pop
out
push
in
cmpsb
add
data16
add
idivl
outsl
adc
jo
lods
into
lahf
xchg
mov
cmp
pushf
pop
xor
cwtl
mov
and
leave
mov
cmp
mov
and
das
fistpl
add
int
and
add
pop
mov
inc
add
inc
and
inc
pop
inc
movsb
jno
mov
sbb
add
aad
cmp
lahf
or
adc
mov
add
dec
mov
cmpsb
stos
test
mov
aad
scas
enter
fadds
jg
add
ds
push
stos
shr
push
stc
add
mov
call
sbb
mov
rolb
stos
xor
pop
fcmovbe
flds
rorl
fs
adc
jle
ljmp
sbb
ret
lods
dec
scas
xchg
add
dec
fadd
ret
xor
jb
addr16
mov
out
in
inc
shlb
lret
add
mov
iret
orb
sbb
xor
das
sbb
addr16
mov
int
js
push
add
mov
or
aam
shll
add
push
xlat
dec
movsl
adc
add
daa
insb
jmp
test
sbb
mov
adc
shlb
cmp
xchg
fiaddl
cmp
pop
cmc
add
jnp
push
add
test
dec
daa
shrl
aam
adc
xchg
pop
xchg
xsha1
cmpsb
into
out
and
imul
arpl
pop
dec
or
testl
xchg
cwtl
add
push
push
add
fcmovbe
mov
adc
das
jmp
inc
in
inc
add
fsubl
add
add
xor
outsl
sbb
inc
leave
sub
fiaddl
or
push
mulb
cmpsb
add
sti
shr
testl
jae
dec
jns
aam
add
enter
sub
bound
loope
das
aas
xor
std
and
and
and
aaa
pop
dec
push
and
pcmpgtb
mov
pop
xchg
cmp
ds
cmp
add
or
dec
and
ja
test
stos
push
movsl
sbb
mov
mov
mov
add
or
mov
jge
mov
sub
ret
inc
rorl
popa
shlb
cmp
mov
pop
lods
shlb
add
mov
clc
add
into
cmp
test
jmp
and
int
and
sahf
pop
cmp
sarb
bound
push
or
jl
mov
pop
cmpl
rorl
xchg
sub
imul
test
jmp
add
or
std
nop
popf
or
shl
xor
in
and
pusha
fwait
jne
sahf
out
mov
mov
das
mov
add
test
add
push
icebp
scas
push
jmp
pcmpeqd
in
pop
add
clc
add
popa
add
add
or
iret
mov
lahf
testb
inc
push
push
xor
xchg
pop
mov
add
icebp
cmpsl
call
or
sbb
mov
add
jo
es
jg
inc
cmc
or
dec
cmp
orl
jl
pop
enter
lret
fistl
ljmp
jl
mov
and
aas
sti
or
cmp
scas
fidivrs
pop
adc
je
aad
push
xor
xchg
xor
sahf
test
mov
xor
sub
testb
xchg
and
scas
add
cmp
sub
pop
jno
pop
rolb
mov
in
cltd
ljmp
mov
push
in
cld
ss
and
adc
and
sarl
and
sbb
lods
ljmp
cld
je,pn
mov
xacquire
inc
outsb
sub
add
int
mov
call
ja
add
mov
xchg
jbe
add
mov
add
out
adc
inc
add
add
xchg
sti
popf
push
fstl
inc
add
cmpsb
sub
lods
add
mov
cmp
fbld
inc
pop
sti
orl
scas
pop
add
xchg
shrl
cmp
aas
pop
imul
sahf
or
fldenv
pop
mov
jge
mov
loopne
adc
and
jp
jno
movsb
movsl
add
mov
int
cwtl
in
pusha
jns
test
lahf
roll
fidivrs
sbb
aad
add
dec
jp
push
stos
inc
test
adc
es
shrb
lods
out
fmull
add
fdiv
dec
add
insl
sub
push
xchg
dec
nop
mov
pop
addr16
add
mov
fildll
fimull
cmp
jp
aaa
adc
lahf
add
sbb
pop
fiadds
scas
add
fmuls
rorl
jb
daa
add
cmpsb
xor
add
jno
mov
or
xlat
add
push
inc
cmp
call
cltd
int
push
cmp
pop
mov
fistps
ss
jmp
add
jb
lea
xor
dec
push
mov
add
push
cmp
ljmp
cmp
outsb
rclb
pushl
push
pop
ret
cmpsl
out
add
push
mov
xor
or
scas
sbb
dec
add
xor
xchg
test
xchg
pop
into
xlat
out
mov
stos
fisubrs
je
push
sub
adc
add
pop
or
ds
lds
adc
push
xor
and
xchg
pushf
add
mulb
push
inc
and
mov
add
jns
jecxz
fldenv
sub
fwait
sbb
lret
hlt
loope
pushf
pushl
cmpsb
rolb
sarb
jae
mov
adc
enter
adcb
bound
add
out
push
popa
xor
mov
xor
push
inc
inc
jo
mov
test
add
xchg
dec
adc
into
out
lea
es
fdivrs
sbb
pop
jle
add
sbb
fistpl
add
movsl
jge
sub
dec
mov
mov
pop
cvttps2pi
cmp
mov
stc
insl
push
dec
and
mov
jns
cmp
cmp
add
ds
ret
mov
ljmp
ds
add
ret
and
push
or
daa
push
add
test
cmc
int
in
add
adc
inc
cs
movsl
add
shlb
scas
xchg
inc
nop
add
sub
and
fdivs
dec
mov
cvtdq2ps
add
dec
dec
into
inc
inc
or
and
lret
pushl
cmp
xor
mov
xchg
add
clc
imul
jge
add
pushf
xor
loop
adc
sbb
mov
aaa
push
mov
idivb
adc
test
cmp
mov
in
icebp
fdivrs
es
mov
adc
inc
sbb
pop
or
les
sbb
shll
lret
js
subl
test
insl
add
sub
repnz
xlat
aas
xchg
fistpll
add
scas
stos
mov
inc
mov
xor
sub
xor
mov
test
pop
xor
test
xchg
sub
mov
popf
loop
dec
push
cmp
xlat
out
xor
xchg
sub
icebp
pop
repz
xchg
mov
in
dec
cmpb
pop
push
jb
pop
repnz
xchg
cmp
mov
jns
addr16
data16
iret
subb
add
adc
mov
gs
addr16
ljmp
adc
clc
xchg
cmp
pop
dec
inc
sub
jge
push
or
lock
push
mov
or
inc
inc
sub
sbb
jp
lds
movsb
lcall
xchg
jg
addl
sub
xchg
mov
lds
push
sti
push
fisubrs
popf
push
lods
jo
push
scas
cmp
add
adc
jns
pop
sub
jle
pop
push
pushf
dec
inc
xchg
mov
xchg
loop
push
or
insb
adc
cmp
dec
add
fs
dec
adc
mov
into
add
push
jp
pop
xor
add
jns
stos
sbb
fldl
lahf
lcall
imul
and
push
stos
add
add
aad
mov
add
jae
test
mov
into
out
adc
xor
push
push
or
add
dec
add
je
xor
js
movsl
iret
add
pop
in
add
mov
push
add
sarl
scas
sbb
mov
xchg
cs
fadds
dec
fists
add
pop
out
add
xor
imul
and
lods
mov
mov
xchg
jne
inc
repnz
ljmp
pop
cmp
mov
cmp
or
lds
aam
adc
sub
inc
arpl
xor
jg
sbb
cmp
add
mov
out
xor
or
in
dec
pop
mov
pop
mov
add
leave
jne
xor
and
jnp
les
sub
enter
mov
push
cmpsb
push
xchg
adc
cld
out
add
or
insb
adc
add
hlt
addl
add
std
js
add
and
loope
xor
lods
push
pop
and
mov
add
icebp
int3
stos
gs
add
ret
shl
inc
shrb
mov
jecxz
out
and
stc
bound
inc
shlb
fwait
repz
adc
lret
enter
icebp
push
bound
sub
mov
sbb
fnstenv
or
adcl
sub
bound
cmpsb
shrb
xchg
add
mov
popa
dec
pop
push
inc
cmpsl
out
xchg
or
scas
out
cmp
add
test
inc
std
popf
or
mov
subl
pop
sbb
fldt
sbb
push
das
add
add
jge
or
add
sub
psadbw
out
dec
das
test
xor
sub
ret
pusha
outsb
imul
mov
shl
dec
add
pop
sti
jle
test
int3
add
pop
ljmp
pop
mov
nop
push
stc
int3
pop
cmp
inc
pusha
push
push
aas
cli
cmc
popf
cmpl
lods
rcrl
in
movsl
hlt
mov
inc
cld
jg
adc
jno
out
sbb
fwait
dec
nop
daa
or
shll
icebp
iret
and
add
adc
into
adc
daa
cmp
aaa
inc
fistpll
repz
das
lods
cmp
arpl
cmp
mov
sahf
xchg
add
das
pop
and
les
fildl
lds
xchg
iret
ss
mov
push
fsubrs
xchg
add
mov
testb
adc
arpl
add
mov
mov
add
jg
or
imul
or
dec
outsb
mov
xlat
and
cmp
lret
jnp
les
inc
int
insl
dec
out
mov
repnz
lahf
jl
and
scas
js
xor
xor
icebp
mov
int3
mov
mov
push
testb
or
mov
daa
xchg
movl
mov
mov
xchg
sub
out
faddl
imul
pop
dec
pushf
loopne
lahf
jo
in
and
add
sub
ja
push
xchg
or
push
inc
in
fs
aas
add
cmp
jo
inc
cmp
add
test
stc
xor
fadds
adc
ret
add
push
je
xor
xchg
cmovbe
sub
push
lahf
pop
add
mov
sbb
add
or
and
add
sbb
or
mov
aas
or
out
add
mov
dec
and
fnsave
add
add
jbe
dec
adc
add
fmull
lds
fs
add
inc
cwtl
loop
jmp
jp
test
pop
iret
sub
loop,pt
add
scas
das
cmp
xchg
insb
leave
add
mov
add
cwtl
add
add
mov
mov
ljmp
mov
popl
push
xor
sbb
add
jo
jg
jecxz
arpl
fst
fmulp
shlb
add
pop
mov
add
test
push
repz
ret
addr16
clc
fstpl
insl
sahf
enter
pop
aad
repnz
dec
push
and
jns
mov
stos
repz
fimuls
cmp
ljmp
fiaddl
scas
fwait
mov
rorl
xor
out
fcompl
arpl
jp
out
push
sbb
adc
pop
cmp
je
sbb
inc
jno
xor
lahf
sti
sub
insb
icebp
mov
outsl
push
add
mov
inc
cwtl
idivb
cmpb
jnp
notl
mov
popf
dec
or
or
add
out
inc
xchg
mov
scas
inc
sbb
jl
rorb
fadds
add
xlat
insb
pop
shrb
mov
inc
cs
xor
xor
jnp
and
test
add
xchg
cmp
adc
stc
out
or
test
test
ds
cmp
pop
or
sbb
js
mov
inc
lds
inc
add
push
daa
or
mov
fistl
aad
add
pop
add
sahf
or
mov
add
xchg
xor
xchg
mov
movsb
popa
mov
lret
add
xor
dec
push
cmp
push
cmpsb
push
jne
movsbl
jns
adc
imul
pop
cwtl
repnz
xor
rcl
dec
lods
insl
xor
fbstp
nop
mov
test
cmpsl
add
popf
jo
inc
jg
adc
jmp
or
mov
ss
add
dec
bound
leave
out
rcrb
aad
add
jle
inc
mov
fisttpl
sbb
stos
jge
jbe
mov
cmp
jo
jno
in
sbb
stc
in
xor
imul
mov
cmp
fiadds
pop
jle
cmp
pushw
sti
roll
fistpll
pop
out
stc
xor
add
movsl
rolb
cmp
pop
rorb
insl
stc
scas
cmc
sub
dec
push
add
movsb
inc
xorl
shll
std
fldt
xor
jg
add
popa
out
jmp
adc
push
add
and
enter
cltd
add
ljmp
jbe
add
cs
mov
jg
add
imul
rclb
ss
xchg
adc
repnz
mov
mov
inc
bound
iret
add
sub
adc
cwtl
push
add
in
push
imulb
nop
add
adc
mov
xchg
mov
add
inc
fistpll
outsb
pop
mov
add
cmc
or
or
pop
lret
xor
cmp
ds
cmp
out
mov
sub
jl
mov
ret
xor
mov
dec
add
xchg
add
gs
xor
dec
xor
mov
xchg
jo
mov
cmp
ss
scas
loope
ljmp
sbb
add
notb
shl
fisubl
sub
ja
add
xchg
stc
stos
lock
sbb
cmp
inc
imul
pop
cmpsb
xor
inc
popf
add
mov
lret
add
pop
cmpsl
push
pop
je
add
stc
xchg
xor
es
bound
mov
add
fildl
or
or
ret
mov
rolb
loope
test
lcall
shrb
xor
and
push
cld
push
hlt
xchg
xor
cmp
repnz
lods
rol
lock
mov
add
pop
mov
aas
cwtl
xchg
jbe
sub
sarl
addl
std
mov
gs
push
add
int
insb
mov
jo
and
int3
lret
add
push
jb
sbb
loopne
push
and
add
mov
movsb
inc
leave
dec
add
enter
int3
in
add
sahf
stos
lahf
sub
movsl
add
mov
or
das
stos
fwait
inc
adc
xchg
subb
jns
push
pop
pop
pop
fcoml
mov
push
lock
push
repz
loope
aas
push
and
lods
stos
pop
rolb
fcmovb
xor
sub
aam
add
into
mov
lds
sub
add
popl
and
fcom
add
push
cmp
adc
fsubrl
in
shr
lret
add
int3
xor
add
xchg
mov
inc
imul
xor
popa
inc
jle
inc
stc
cmpb
int
add
push
push
cmpsb
push
sbb
mov
push
inc
dec
aam
fcompl
inc
sub
stos
jl
xor
mov
add
jne
out
jle
sbb
cmp
and
inc
lret
mov
xor
push
xchg
pop
and
stos
jo
leave
hlt
popf
jne
xor
pushf
push
jnp
pop
cmp
pusha
adc
push
stos
bound
push
popf
xor
sbb
shlb
or
add
inc
cmc
ret
pop
into
sti
ds
add
xlat
lcall
loop
std
into
xchg
mov
ret
int3
push
filds
add
pop
inc
insb
nop
cmp
mov
negl
add
leave
ret
inc
jbe
lret
aas
xchg
ret
daa
in
aaa
fsub
in
add
adc
shr
in
icebp
mov
sbb
cmp
enter
sub
bound
mov
pop
add
xchg
push
mov
popa
add
mov
cmpsl
inc
sub
movb
test
jo
addr16
mov
lahf
repnz
ret
cmp
add
add
or
mov
mov
or
ja
cmp
push
or
sub
jge
jp
sub
inc
jae
inc
cmovl
xchg
mov
lods
pusha
ret
cmp
aas
xchg
cltd
and
pop
add
pop
ja
out
test
jo
xlat
in
cmc
pop
cmp
sub
ret
mov
cmp
fs
push
in
aam
push
mov
inc
dec
mov
es
cmp
ret
cmp
or
movsl
push
or
cld
add
out
xor
leave
mov
add
aas
sbb
add
mov
and
and
jne
mov
add
cli
add
ds
inc
rorl
xchg
dec
add
icebp
scas
lret
cmp
out
arpl
dec
scas
mov
sbb
clc
mov
addr16
and
xchg
lds
add
repnz
bound
push
pop
mov
fs
loopne
and
pusha
xor
push
xchg
add
adc
std
mov
jg
add
mov
push
mov
iret
sub
jae
sub
lret
ljmp
insl
out
andb
lret
sahf
aas
inc
pop
cli
jl
xchg
jno
rorl
add
mov
les
outsl
sub
lds
dec
add
sbb
mov
push
dec
out
fmul
dec
mov
ret
call
sub
pop
fwait
add
sbb
pmaxsw
sub
popa
pop
xlat
add
int
sbb
jl
or
repnz
movsl
push
add
and
fbstp
scas
jnp
adc
pop
cmp
add
jbe
loop
out
gs
mov
mov
xchg
pop
push
sub
roll
fldl
add
arpl
sbb
sub
lahf
sub
orl
leave
and
lods
mov
mov
fadds
clc
cwtl
stos
inc
cld
sbbb
arpl
rolb
scas
pop
push
mov
addl
push
mov
loopne
or
in
cs
cmp
adc
popf
pop
add
cwtl
insb
insl
mov
mov
xchg
arpl
pop
jae
je
testb
xor
add
sahf
jne
push
sub
in
inc
cmp
int3
mov
cmp
mov
and
add
movsb
cmp
notl
mov
loopne
ret
lahf
hlt
add
fisubs
rcrb
rolb
lds
ret
in
rcl
in
jo,pn
xchg
addr16
cmp
into
and
fadd
jae
adc
sbb
push
mov
lods
cmp
repz
jno
push
stos
dec
inc
sbb
push
lods
fidivrl
and
rcll
rcrl
loopne
sub
cld
faddl
xchg
jo
inc
fcomps
fiadds
mov
jmp
mov
lea
inc
add
jno
or
mov
add
leave
into
xor
add
mov
add
cmp
std
push
push
inc
testl
popf
out
lahf
or
aam
divb
add
pop
scas
mov
add
xchg
sbb
pop
adc
inc
jecxz
sbbl
mov
add
xor
leave
mov
lcall
mov
test
sarb
aaa
inc
adc
push
xchg
fwait
xchg
outsb
nop
cmp
lcall
cmpsl
imul
push
into
dec
xchg
je
cmp
daa
push
sbb
aas
in
sub
mov
js
int3
lds
adc
jge
cmp
fldenv
ja
xor
push
cmp
or
in
lret
and
xchg
sbb
rorl
xor
add
jmp
enter
and
dec
es
lods
add
xchg
sbb
jno
lods
add
aas
add
rcrl
hlt
xor
mov
xor
std
in
popf
push
add
fadds
add
dec
mov
nopl
sbb
repz
mov
fstpt
xchg
add
cltd
cmp
rdtsc
fsubl
dec
push
adc
mov
stc
insb
xor
popf
inc
add
imul
setns
or
addr16
add
xchg
xlat
inc
mov
icebp
cmp
das
or
ret
lds
mov
cmp
cs
or
inc
rorl
cmc
int3
push
inc
push
fdivrs
enter
cmp
cld
lcall
jbe
inc
sub
jne
mov
icebp
and
mov
ror
pop
cwtl
idiv
sub
add
inc
jp
pop
inc
and
scas
or
aad
mov
cmp
mov
fiadds
and
jp
add
dec
cld
mov
icebp
pushf
add
stos
iret
cmpsl
jns
mov
lds
push
ds
pop
adc
jl
das
imulb
add
icebp
sub
add
test
lods
pop
repz
sbb
cmp
add
dec
orb
push
enter
jl
lret
add
mov
insl
add
xor
add
hlt
inc
aas
mov
mov
add
cld
inc
jmp
adc
lock
pop
dec
or
sub
in
dec
ss
dec
lods
jp
mov
scas
add
sub
pop
adc
in
ret
and
clc
sub
cmpb
cmp
je
add
data16
fsubrs
mov
outsl
xchg
pop
mov
jl
mov
mov
or
fwait
add
add
movsb
shll
push
mov
inc
popf
pop
pop
cmp
outsb
mov
xor
pop
pop
negb
push
test
sbb
mov
arpl
jle
inc
or
rorb
pop
popa
lock
mov
je
xchg
or
sbb
push
das
repnz
push
dec
xor
xchg
stos
mov
add
push
xchg
mov
push
jae
sarb
mov
out
enter
add
sti
pop
or
sub
mov
and
xchg
scas
stc
lods
dec
loop
and
das
pop
fs
sub
in
roll
inc
mov
in
ljmp
push
and
jp
push
dec
movsb
in
cmp
negl
aas
sbb
jle
lahf
add
or
adc
cmp
sbb
fcompl
lods
aad
sti
cs
adc
add
aas
test
iret
mov
add
pop
jge
dec
inc
cld
add
pop
mov
in
jecxz
jge
add
jp
shll
lret
jp
jg
iret
icebp
cmpsb
or
sahf
sbb
pop
aas
ss
xor
and
pop
jecxz
cmp
pop
lea
mov
out
pop
add
or
add
push
aas
xor
clc
dec
cmp
addb
cmp
call
adc
or
mov
fs
sub
jge
orb
mov
add
popf
jmp
loopne
sbb
or
dec
mov
aad
ja
fcmovnu
lods
pop
add
xor
pop
nop
mov
xchg
test
je
push
ds
sub
cmp
push
fidivrs
adc
push
mov
add
or
add
imul
pop
sar
push
lock
testl
add
loopne
pop
stos
push
sti
rcl
push
pusha
mov
inc
int3
lahf
mov
jmp
inc
aam
or
adc
xor
inc
insb
movsl
flds
mov
add
lods
aaa
jb
mov
pop
cmpsb
mov
lods
roll
mov
or
fbstp
jne
sbbl
aas
push
sub
mov
stos
fwait
xchg
insl
jne
and
loop
add
dec
lock
popf
and
sub
sbb
fdivl
std
pushf
fmuls
add
arpl
les
inc
or
pop
jle,pt
and
test
add
or
xchg
add
fst
nop
mov
aaa
and
add
fcmovb
psraw
insb
dec
add
andb
add
scas
xlat
and
and
xorb
in
out
cmpl
stc
push
lret
add
test
add
jl
add
cmp
movsb
outsb
xor
call
xor
inc
lea
inc
pushf
ret
and
cmpsl
adc
mov
cld
dec
out
into
xor
call
add
and
push
add
jne
mov
mov
sbb
int
and
mulb
jl
cs
add
mov
mov
pop
clc
jg,pt
sbb
push
pushf
imul
imulb
iret
dec
subl
xchg
push
fistps
or
mov
jbe
add
mov
in
mov
stos
add
mov
hlt
incb
or
in
mov
test
sub
lret
add
or
xchg
adc
push
xchg
mov
inc
mov
dec
aas
jl
lret
sub
adc
xor
add
adc
pushf
ljmp
fwait
add
xor
dec
push
or
sub
dec
push
sub
scas
cmp
add
lret
adc
mov
lds
pop
arpl
popa
mov
add
subb
or
xchg
or
jo
insb
pop
rorb
pushfw
cmp
addb
ret
add
mov
addr16
adcb
shlb
aas
ljmp
lret
add
ret
xchg
mov
mov
sub
inc
and
mov
call
out
pop
xor
mov
push
std
shll
stc
cmp
inc
or
stc
add
mov
and
or
inc
xchg
xchg
push
xlat
imul
aas
or
outsl
je
lods
add
rolb
xchg
cmp
bound
pop
add
icebp
cwtl
cmc
and
sub
adc
in
adc
psrad
daa
pop
dec
insb
loopne
test
fiaddl
pop
movsb
dec
call
mov
loopne
stos
mov
xor
mov
xor
and
sbb
je
jns
jne
repnz
add
cli
sbb
jbe
add
inc
nop
stos
icebp
xor
mov
cs
jp
mov
addl
test
movsl
faddl
push
scas
test
sbb
pop
repz
sbb
mov
daa
stos
popa
inc
out
fiaddl
ss
pop
mov
mov
or
loop
pop
sarl
arpl
push
cmp
jb
inc
mov
and
movsl
out
add
std
xor
ljmp
mov
aaa
jge
pop
repz
inc
scas
arpl
mov
push
dec
repnz
popf
adc
mov
add
loop
sub
fs
dec
add
adc
lods
jmp
push
mov
and
nop
jnp
imul
mov
and
mov
inc
loope
cmp
mov
leave
xorl
jnp
push
outsb
test
rolb
bound
in
or
add
out
lea
repnz
mov
sarl
add
es
mov
add
scas
xchg
push
add
push
repnz
movsl
and
and
add
add
push
add
mov
aas
jmp
adc
inc
stos
lahf
add
cmp
cmp
sbb
ljmp
rorl
mov
or
push
cmp
sub
aaa
sub
lret
lods
inc
inc
retw
fists
or
frstor
ret
cmp
imul
orl
xchg
jb
add
ss
orl
pop
call
cmc
and
fwait
xchg
jle
add
lds
sub
inc
or
mov
add
cmc
out
movnti
mov
stc
ljmp
imul
sbb
decb
add
pop
orl
or
add
rolb
inc
lahf
pop
inc
pop
xor
xchg
mov
and
iret
push
xchg
and
out
insb
push
in
add
jbe
ret
inc
test
sbb
mov
xor
push
jbe
xchg
lods
nop
incb
adc
and
add
mov
jno,pt
roll
and
daa
iret
lret
mov
enter
out
xchg
mov
iret
ds
adc
je
shll
xor
xchg
fcomps
aaa
mov
mov
mov
mov
testb
pusha
rolb
mov
push
add
mov
jg
in
sarl
hlt
xchg
mov
add
lods
mov
imul
lock
add
xor
repnz
pop
and
inc
jl
loopne
scas
cmp
cmp
repz
mov
stos
insl
scas
pop
ret
dec
mov
lock
cmpsb
shlb
cmp
cs
cmp
push
dec
sbb
mov
out
mov
inc
sub
or
sub
stc
in
mov
js
mov
ds
test
ja
xchg
mov
cld
add
in
daa
mov
jnp
data16
movsl
orb
push
ret
or
lods
adc
shrl
gs
mov
mov
ljmp
pop
shlb
xchg
and
dec
sub
out
push
sbb
push
lds
ljmp
filds
pushf
mov
jmp
call
add
add
or
xchg
rolb
das
push
test
add
in
xchg
and
add
mov
in
cli
inc
outsl
push
sarl
lods
aam
xor
mov
adc
scas
pop
and
mov
push
sti
jle
add
jne
pop
mov
jmp
loope
das
icebp
into
movsl
insb
xchg
add
add
lret
rcrl
add
dec
pop
or
mov
loopne
aam
and
jp
test
movsb
push
inc
lcall
je
mov
pushf
lahf
add
fisubrs
rorb
negl
or
push
pop
sub
inc
mov
stos
test
pop
aas
add
sbb
xchg
adc
out
adc
and
cmpsb
repz
add
mov
xlat
xor
icebp
add
mov
fs
out
movsl
sar
mov
stos
rolb
test
out
popf
ret
fsub
lret
sub
pop
jg
jb
add
mov
ljmp
inc
jno
dec
push
adcl
sub
xor
out
inc
push
adc
mov
test
dec
and
hlt
xchg
popf
and
jb
sub
popa
push
lahf
dec
add
bnd
add
sbb
xor
dec
sbb
xor
lret
or
and
mov
leave
repz
xor
mov
jnp
xor
test
adc
addb
adc
jne
inc
mov
push
adc
loopne
imul
mov
aas
sub
test
test
test
in
test
sbbl
imul
xchg
test
mov
jp
inc
cmpl
pop
daa
addr16
test
xor
xchg
test
imul
loopne
or
pop
rorb
repnz
sbb
sub
aam
call
cmp
pop
xchg
xorl
movsb
jg
cmp
jp
roll
std
jnp
mov
ret
jae
push
or
or
out
pop
add
pop
lret
ja
xchg
xor
jb
fiadds
dec
fwait
push
outsb
pushf
dec
push
adc
jp
push
xor
daa
arpl
fldenv
adc
scas
add
push
test
mov
arpl
sarb
and
dec
mov
arpl
xchg
sbb
testl
scas
andb
inc
and
push
mov
adc
or
fs
sub
les
daa
sbb
gs
lock
xor
inc
out
ss
div
xor
or
jp
cld
ds
testl
std
unpcklps
and
test
enter
jb
ret
daa
push
add
and
jbe
sbb
daa
sub
bound
dec
pop
xchg
iret
test
adc
xor
pop
add
jb
fildll
fsubrp
fldcw
xchg
dec
mov
jp
arpl
int
sbb
loope
imul
mov
stos
jo
or
sahf
daa
mov
sbb
roll
cmp
add
or
fistpl
lea
rorl
cmp
cli
shrb
add
lods
xchg
shll
lret
add
add
orl
mov
test
pop
sbb
mov
sub
add
add
xor
push
add
enter
pop
xchg
movsl
jne
sahf
mov
scas
test
es
daa
in
inc
cmp
ja
fwait
pop
movsb
ja
sbb
pop
inc
pop
imul
cmp
mov
push
push
and
fistpl
xlat
xchg
test
add
and
push
pusha
fldenv
and
xor
cld
or
jbe
lcall
mov
ss
test
imul
add
jge
push
add
xor
popl
dec
ret
pop
stos
sbb
and
inc
and
jmp
mov
add
lea
jae
clc
rcrl
sbb
into
pop
popf
jne
and
push
stc
icebp
adc
fwait
cmp
int3
nop
popf
adc
js
jle
jbe
fstpl
ljmp
add
or
add
lock
dec
cmc
hlt
xor
add
lret
lret
pop
mov
jns
adc
jmp
pop
sbb
rcr
sbb
ds
jae
jecxz
xor
dec
xor
add
inc
and
aaa
pop
add
icebp
sar
add
sub
sahf
cmp
jle
xor
and
cmp
lret
add
je
cmc
loope
insl
add
call
ja
pop
sub
insb
xor
daa
add
sub
jb
add
fisubl
pop
test
mov
sub
adc
jno
xchg
and
pop
les
add
mov
daa
je
jnp
rcl
and
mov
and
addl
jbe,pt
add
mov
inc
str
adc
jne
rolb
mov
insl
xchg
add
inc
out
loope
cld
inc
jecxz
fnclex
imul
adc
es
adc
mov
xor
test
shlb
lcall
rorb
das
cld
mov
sub
jge
add
xchg
repz
pop
mov
pop
int3
in
add
aas
add
aaa
add
xchg
mov
inc
ds
and
scas
add
cmpsl
arpl
cs
fwait
ret
imul
sub
add
mov
movsb
ret
ja
test
inc
sbb
inc
cmpxchg
in
pushf
nop
cmp
push
jp
pop
push
pushl
mov
fdivl
js
xchg
mov
fiaddl
jno
mov
sub
mov
out
adc
mulb
mov
popa
xor
push
cmc
pop
aad
xor
sbb
add
inc
push
fcmovb
ljmp
push
pop
loope
dec
jb
xchg
aas
pop
lcall
dec
or
add
mov
xchg
pop
push
add
mov
adc
push
dec
and
aas
cmp
into
add
xchg
xchg
or
insb
cld
lcall
das
orl
out
cmp
and
cld
inc
icebp
push
je
add
imul
jge
rcr
inc
movl
aad
xor
dec
mov
jmp
cmp
test
push
xchg
xlat
fbstp
dec
and
jl
fldl
lods
ss
cmc
std
push
xchg
pop
adc
add
xchg
enter
or
push
inc
adc
pop
shrl
push
lcall
lods
clc
idivl
leave
lods
cmp
pop
pop
sub
add
sarb
ret
sbb
or
cmp
mov
push
das
data16
pop
push
into
mov
lret
out
cltd
pop
test
xchg
mov
mov
mov
je
gs
add
mov
sub
inc
add
jecxz
xor
cwtl
shrl
push
pop
mov
push
mov
push
add
je
stos
popf
rcll
ret
mov
int3
inc
xchg
jp
shll
xchg
push
dec
pop
xor
mov
and
cmp
fildl
jmp
imul
repnz
inc
mov
mov
leave
push
shrb
mov
ja
add
or
add
xchg
sbb
or
pop
xor
xor
fdivs
mov
xchg
mov
cmp
shr
cld
outsl
jp
cmp
dec
fwait
xor
es
mov
add
ja
adc
sbb
cmp
inc
mov
dec
adc
arpl
add
cmpsb
fnstsw
sub
mov
inc
movsb
cmp
or
mov
dec
arpl
test
pop
dec
sbbl
sub
daa
loopne
int3
lret
faddl
push
mov
sub
fistpll
cmp
pop
ss
rol
outsl
out
inc
add
in
repz
sarl
aad
jp
add
add
hlt
mov
push
pusha
or
add
lahf
push
adc
cli
and
shrb
fidivs
std
cmp
outsb
xchg
pcmpeqd
sti
push
add
lret
outsl
dec
inc
pushf
add
jne
sbb
and
test
test
sbb
push
add
in
xor
push
push
lea
mov
rcr
or
popf
cmpsb
movsb
push
test
or
das
popa
add
jb
mov
pop
fdivs
bound
inc
jno
inc
cmp
sbb
cmp
add
sti
and
mov
sub
in
sub
cmpsb
ljmp
pusha
fwait
das
jmp
push
add
push
out
jle
cmp
imul
repz
xor
add
inc
jg
adc
jnp
inc
inc
inc
cwtl
dec
xor
loop
or
daa
popf
lret
push
mov
jne
mov
test
xchg
sbb
sub
add
adc
shll
push
fisttpl
or
add
lods
mov
lahf
into
push
or
sbb
scas
mov
mov
add
add
xchg
fmull
ljmp
test
xchg
add
incl
jno
out
mov
mov
pop
sbb
add
inc
outsl
icebp
add
pop
dec
sub
mov
adc
test
into
add
inc
push
add
daa
mov
add
sub
add
push
aas
scas
add
sahf
ffree
cltd
and
movsb
cli
rclb
push
sbb
mov
xchg
pushf
and
sbb
faddl
je
sti
mov
jl
mov
notl
jo
push
push
add
lods
leave
movl
inc
jecxz
sbb
hlt
sub
inc
sahf
lcall
rol
decl
jae
std
xchg
roll
adc
push
add
mov
aad
or
cmc
pop
sub
inc
or
and
shll
add
jne
cmp
sub
mov
xor
add
mov
js
inc
mov
hlt
push
sarl
fidivl
cmp
or
loop
mov
cltd
mov
sub
notl
jbe
xor
psraw
mov
or
lods
and
lret
inc
pop
mov
adc
addr16
jne
lea
pop
add
xchg
and
mov
pop
sbb
cmp
rolb
ret
jno
and
lret
cmp
add
in
xlat
rolb
inc
cmp
enter
jbe
stc
imul
push
jle
adc
fcompl
push
out
mov
fmul
push
pop
add
lret
sbb
add
cmp
movb
cmp
movsb
mov
inc
ds
add
cmpsb
stos
movsl
add
movsb
std
mov
pop
verw
pop
lcall
mov
gs
in
pop
sbb
cmc
push
loopne
sub
mov
out
add
add
or
inc
popf
jmp
lds
loope
cmp
cltd
add
inc
dec
inc
dec
fmull
ret
out
jo
sbb
popf
add
cld
jbe
or
mov
int
pop
sub
bound
sub
cld
and
add
mov
sbb
mov
pop
sub
pop
rclb
scas
subl
mov
xor
jbe
add
mov
sub
insl
dec
push
lret
test
test
test
int
mov
jbe
outsl
inc
popf
adc
jg
xchg
shlb
in
push
ss
addb
insl
mov
inc
sbb
adc
fwait
sbb
sbbb
cmp
and
leave
pusha
pop
jp
dec
into
out
aam
add
mov
out
jmp
and
xor
ret
lods
jbe
pop
int3
nop
adc
sbb
push
ja
loop
out
cmp
sub
push
ret
cld
pop
sbb
pop
pusha
and
mov
or
dec
scas
shll
adc
cmp
sbb
ret
inc
adc
inc
mov
adc
pop
mov
daa
sbb
movsl
xor
jp
sahf
jle
jmp
pop
sub
mov
hlt
push
out
sub
or
xorl
int3
sbb
das
cmp
add
mov
loop
xchg
and
stos
loopne
add
sub
xor
or
stos
xor
out
cmp
xchg
leave
shll
or
rcl
cltd
arpl
notl
mov
lods
ljmp
jle
adc
iret
sbb
jp
push
loope
loop
test
add
popa
lods
push
pop
push
aaa
cltd
adc
adc
inc
xchg
or
or
loope
hlt
aad
add
pop
xor
nop
or
jb
add
jp
xor
leave
sub
xor
cltd
in
cmpsb
dec
add
pusha
daa
pop
xchg
jge
dec
jns
movsb
sub
pusha
push
inc
adc
cli
andb
inc
stos
addl
or
jle
sarb
insl
sbb
or
aad
inc
jg
xor
cmp
push
cltd
pusha
pop
add
sbb
xlat
mov
jge
and
pushf
jmp
icebp
jle
add
xchg
lret
cmp
and
cmpsl
rorb
iret
outsb
sub
jge
arpl
or
int3
cmp
push
arpl
loope
and
xlat
cmp
add
pop
cmc
adc
orl
jle
dec
hlt
clc
or
ljmp
fisubs
dec
mov
aas
sahf
xor
mov
out
fmull
ret
nop
outsb
das
aaa
adc
add
push
lret
adc
cmp
rcpps
and
jnp
pop
mov
or
add
hlt
scas
leave
fnsetpm(287
stc
fwait
mov
mov
outsb
pop
xchg
fnsave
int3
pmullw
mov
pop
das
insl
sti
adc
sub
jns
out
xchg
sbb
and
mov
dec
sub
pop
fadds
ds
call
dec
xor
inc
or
gs
and
jns
add
cld
pop
dec
out
inc
and
lahf
add
adc
rcr
addl
xchg
jp
movsb
js
add
sbb
push
push
adc
cmc
imul
dec
push
jno
fcoml
cmp
mov
or
addr16
enter
rcll
pop
into
scas
xchg
and
mov
ret
and
cmc
add
adc
adc
sarl
xor
gs
mov
pop
data16
dec
sub
sbb
pop
add
pop
dec
imul
xor
les
mov
sbb
arpl
jmp
sub
push
or
cmp
mov
pop
adc
je
lds
and
cmpsl
sti
dec
fnsave
aad
pushl
inc
shl
out
bound
xlat
xor
pusha
sbb
data16
xor
xchg
js
or
repnz
outsl
xor
rolb
xor
cmp
and
push
in
mov
sub
popa
negl
or
push
popa
add
lcall
jl
imulb
inc
dec
xlat
mov
les
and
les
pop
leave
jb
idivl
sbb
adc
stos
out
repnz
mov
mov
iret
addl
cmc
movsl
cltd
shll
sarl
push
xchg
insb
in
aas
pop
fisttpl
rcl
addb
and
dec
cmp
arpl
and
addl
and
mov
add
sahf
aam
jp
mov
bound
xor
xchg
inc
xor
sbbb
or
xchg
shrb
outsb
sbb
pop
push
aam
or
jns
jo
sbb
loopne
mov
ljmp
nop
add
push
pushf
cmpb
push
daa
mov
cmp
push
xchg
pop
das
andb
xor
jecxz
and
inc
incb
pop
jp
mov
dec
push
or
add
daa
clc
int
push
mov
jne
outsl
mov
or
xchg
rcr
out
xor
ret
xlat
incb
xchg
mov
mov
cmp
repz
dec
push
mov
vcvtss2sd
sub
mov
aad
ljmp
pop
add
in
pop
jle
add
fsub
add
cmp
ret
xorb
subl
inc
cmp
fdivrl
adc
adc
outsb
and
sub
vmwrite
popf
mov
dec
pushf
adc
inc
lahf
test
add
leave
cwtl
cs
xchg
aad
or
jmp
push
add
out
sub
loop
cmp
add
sbbb
add
xor
add
jno
dec
add
int3
pop
cltd
pop
out
push
lcall
fstp
aam
xor
shr
inc
or
sbb
push
jge
imul
inc
sub
mov
xchg
push
inc
cltd
sub
pop
sar
shrl
cs
or
fdivs
cmp
add
xchg
and
cmp
movsl
or
add
dec
inc
add
inc
xlat
dec
popf
addl
and
imul
mov
mov
cmc
mov
pop
xchg
and
mov
mov
and
loope
popa
inc
lock
mov
shlb
enter
or
or
inc
fcoml
aad
in
mov
xor
adc
and
arpl
es
mov
jo
add
lahf
jmp
cmc
cmpsb
lods
adc
mov
add
imul
pop
push
xchg
xor
mov
jp
ficoms
cmpsl
xchg
adc
lods
pop
sti
xchg
sub
es
dec
cmp
movsb
add
inc
shlb
xchg
test
pop
jecxz
inc
enter
icebp
cmp
sub
cmp
lahf
or
cli
xchg
and
cmp
iret
clc
cmp
add
push
or
add
jnp
jge
rolb
fnsave
jecxz
push
or
and
add
sahf
les
push
lret
mov
sbb
pop
push
mov
and
mov
sbb
mov
or
push
jmp
mov
inc
add
repnz
fnstenv
add
mov
out
inc
push
fcoms
pop
loopne
les
jbe
lds
in
xchg
nop
xchg
jb
stos
add
icebp
sahf
pop
add
sub
lods
inc
add
sub
cmpsb
add
xchg
std
in
lcall
mov
add
aaa
adc
adc
inc
jno
pop
add
adc
push
fbld
ficoms
xchg
loope
mov
aam
push
mov
cmc
test
outsb
add
xorb
call
inc
nop
int
in
push
jle
xor
cli
iret
mov
mov
pop
mov
mov
sbb
std
inc
dec
arpl
into
adc
jl
sbb
jmp
cmp
dec
int
add
add
and
dec
sbb
in
xor
push
subb
mov
mov
fs
sbb
push
xchg
mov
mov
fldl
popa
xchg
or
dec
or
cwtl
add
xlat
fildll
add
xchg
int3
add
sub
xor
jns
or
inc
lea
fisttps
jge
cmc
add
inc
push
popf
or
mov
cmp
or
sar
cmp
push
cli
lcall
and
jae
dec
or
add
sub
pushf
loopne
ret
imul
inc
adc
xor
test
out
imul
xchg
pslld
xor
daa
lock
jmp
pop
mov
andb
sbb
out
add
xchg
push
sub
add
pop
and
dec
or
mov
xor
mov
shr
sbb
roll
jbe
add
mov
or
mov
test
inc
xchg
fs
mov
subl
loopne
str
imul
daa
add
mov
push
lcall
loop
pop
jae
xor
movsb
add
movsl
mov
subb
pop
xor
jo
fldenv
mov
dec
xor
fistl
or
mov
es
mov
add
jns
popa
add
pop
xchg
cmp
or
mov
xchg
ret
out
or
scas
sub
mov
out
ret
ss
inc
inc
cmp
aaa
in
add
cmp
mov
or
ja
sub
mov
pop
rcl
dec
xor
sub
aad
add
push
xchg
add
mov
ss
push
add
inc
xchg
stos
shlb
leave
or
int3
inc
and
and
movsl
xchg
jo
or
push
xor
adc
cmp
loopne
cmpl
inc
adc
aas
or
cltd
imul
roll
mov
aaa
mov
out
add
not
xor
push
cmc
movsl
aam
inc
test
add
cmp
add
fsubs
imul
adcl
stc
addb
insl
sahf
xor
xor
enter
jbe
outsb
out
loopne
rolb
pop
fldenv
mov
and
mov
mov
test
cmp
aam
add
jbe
orl
nopl
add
imul
cwtl
inc
lea
and
add
cmpsl
lcall
scas
lds
adc
cmp
hlt
inc
add
or
popf
rorb
lea
nop
imul
out
xchg
mov
fldl2t
xlat
mov
add
pusha
jns
add
test
hlt
sbb
fadd
xchg
divb
movsbl
add
xchg
sub
ds
sub
dec
rolb
imul
push
cltd
xchg
outsl
add
and
addr16
sbb
cmp
jl
iret
add
inc
add
push
xor
aas
lock
mov
cmp
fisubl
jae
cli
out
pop
dec
icebp
and
push
sub
sub
sti
js
mov
adc
pop
sub
arpl
sbb
aam
xchg
rorb
ret
jae
xor
dec
add
cmp
sbb
rcll
aad
cmp
dec
add
jo
aaa
sbb
aam
xor
cltd
lret
add
jne
inc
fadds
sti
lea
movsb
mov
inc
mov
cmp
xchg
dec
or
push
push
dec
cli
push
lahf
inc
test
rcrb
dec
daa
add
out
mov
or
out
xchg
xor
insl
add
add
lods
lahf
sarl
mov
xor
xor
mov
jnp
je
sbb
sbb
add
ds
cs
add
dec
insb
add
bound
inc
add
clc
jno
push
jecxz
cwtl
add
rcl
popf
pop
rolb
data16
push
and
cmc
aas
adc
movsl
add
lret
jmp
data16
mov
movsl
xor
push
sub
add
mov
dec
push
and
add
mov
xorl
sti
dec
fidivs
shl
scas
es
dec
shlb
xor
adc
add
bound
pop
in
mov
push
sub
outsb
ss
sbbl
pushf
or
mov
xor
or
in
test
xor
fcoml
add
imul
jecxz
push
add
test
sbb
outsb
stos
add
icebp
adc
sbb
mov
les
shll
cmp
cwtl
pop
dec
leave
sub
adc
les
jnp
int
rolb
add
jge
sti
jg
cmp
lcall
addl
mov
ret
jb
call
jp
pop
inc
les
pop
xor
fwait
mov
js
movsb
push
mov
cs
daa
cmp
sub
xor
lods
mov
sbbl
pop
jp
rclb
aam
add
mov
sbb
shr
sbb
adc
cmp
adc
and
pop
pop
or
add
ret
mov
dec
aad
add
mov
cmp
jne
xchg
add
test
push
insl
xchg
pop
inc
or
pop
stos
push
imul
cmpb
add
daa
mov
pop
bound
int3
push
sbb
imul
add
push
mov
adc
leave
inc
and
mov
cmc
mov
adc
xchg
loopne
adc
mov
loopne
and
xchg
shlb
sbb
inc
popf
xlat
fcomps
inc
or
add
ret
xchg
or
inc
jnp
dec
adc
add
adc
pusha
and
cmp
popf
ss
out
dec
test
cs
inc
or
daa
xchg
stc
in
in
mov
or
mov
push
jo
jae
xlat
mov
arpl
ds
arpl
into
orl
jg
out
or
add
adc
icebp
aad
enter
test
dec
sub
xchg
hlt
adc
mov
js
rol
mov
xor
jp
mov
loopne
movsl
adc
adc
adcl
test
hlt
sbb
popa
pushf
add
jo
testb
stc
add
je
dec
enter
push
add
xchg
orb
loopne
xchg
xor
mov
sahf
inc
push
ret
sbbb
xchg
stos
inc
add
xchg
jle
inc
push
lcall
dec
mov
lock
cmpxchg
adc
lock
push
jno
aas
mov
mov
test
xor
push
out
add
mov
sbb
fisubl
subl
push
or
leave
lret
enter
inc
xchg
add
jge
xchg
add
out
adc
ret
adc
add
out
xor
pop
add
jo
push
xor
fidivrs
imul
test
cli
js
jmp
pop
ja
shlb
rorb
repz
scas
adc
stc
mov
and
jns
aam
fsts
mov
push
mov
add
lret
mov
lods
add
dec
fmul
jo
dec
dec
dec
lret
mov
add
lahf
add
cmpl
rclb
fisubrs
icebp
popf
xor
testb
scas
mov
addl
push
shl
and
mov
xor
cld
and
mov
test
into
pop
add
push
inc
out
addr16
js
xor
movb
xchg
mov
pop
pop
in
xchg
dec
and
popa
das
or
xchg
push
xchg
push
adc
pushf
sub
xchg
sub
cwtl
cltd
mov
filds
mov
jle
daa
arpl
aas
xor
or
sub
dec
dec
out
rorb
andl
aam
rorb
int
insl
mov
and
pusha
loope
xchg
jbe
lods
jg
out
add
push
loopne
ret
mov
push
test
add
cmp
inc
cmpsb
adc
push
addb
xchg
popf
xchg
mov
mov
dec
out
loope
xchg
or
fisubs
fldcw
inc
cmpl
cmp
stc
push
push
lahf
add
lds
fdivrl
aad
sub
pop
jb
aaa
fcoms
orb
inc
xor
pop
data16
jno
fiaddl
insb
hlt
sbb
push
pop
mov
sub
sbb
push
push
xchg
cs
sbb
out
sub
out
loope
nop
mov
inc
mov
and
rcrl
add
add
dec
pop
scas
mov
frstor
fists
sbbl
mov
in
add
jl
sbb
and
or
push
inc
fdivr
inc
sbb
add
shll
push
popa
adc
iretw
adc
add
pop
int
ficoml
aas
das
add
xchg
cmp
pop
jl
mov
cmp
add
jae
sub
sub
test
inc
in
rcll
mov
aam
js
push
clc
and
cmp
sbb
cmp
popf
sbb
add
push
in
js
cmpl
sahf
inc
and
xorl
popa
and
pop
scas
out
xchg
inc
filds
jg
or
cmp
rcrl
aaa
cs
jge
sub
sub
ds
jg
int
inc
imul
or
test
inc
ds
xchg
stos
mov
cs
push
orl
rcl
movsb
ja
push
pop
out
popa
js
add
mov
add
call
mov
std
inc
test
cmp
pop
xlat
mov
stc
xor
or
adc
add
push
push
popa
add
ja
mov
add
insl
mov
add
out
fs
dec
jbe
and
aad
scas
jb
adc
ret
hlt
mov
hlt
xor
out
sbb
lret
inc
xor
ret
fwait
imul
sbb
mov
iret
sarb
adc
enter
ficomps
add
push
fiaddl
mov
add
shl
jmp
cmp
daa
cmc
lret
in
mov
lahf
roll
mov
jl
popf
push
mov
inc
imul
add
cld
lret
es
add
repz
bound
sub
xor
repnz
int3
dec
mov
pop
cmpsl
mulb
scas
sbb
arpl
outsb
iret
mov
mov
sarb
enter
ret
push
inc
imull
inc
xor
xor
or
lcall
fdiv
sti
adc
cmpsl
add
lret
xor
fistl
jg
in
mov
cld
js
xor
push
mov
and
outsb
lret
orb
xor
fsts
in
pop
mov
sub
sub
or
addr16
jg
mov
sbb
or
jp
pushf
fwait
pop
jns
mov
cmp
pop
xor
dec
imul
fs
xor
add
dec
roll
imul
add
or
xor
inc
add
jno
xchg
jecxz
adc
ljmp
mov
add
add
inc
add
arpl
pushf
jmp
cwtl
cmp
mov
inc
out
add
dec
negl
pusha
je
add
rcll
mov
sbb
loope,pn
jno
xor
add
pop
xlat
inc
mov
dec
aas
push
shll
test
rorl
add
adc
jecxz
daa
scas
and
fucomp
orb
fcomip
add
cmp
xor
sbb
int3
decl
in
cs
and
add
iret
movsl
fildll
call
cmp
lahf
in
add
mov
xor
aas
hlt
movsl
adc
pusha
rclb
popl
fs
add
jo
xor
popa
adc
fistl
js
jge
sub
cmp
loopne
mov
rcrl
sbb
add
mov
jge
mov
and
ret
cmp
ficoms
lret
mov
out
fstps
inc
pavgb
mov
add
mov
int3
cmpb
imul
sbb
jl
xlat
leave
mov
sub
push
add
dec
in
ret
and
add
inc
sub
cmp
fstpt
arpl
loope
push
sbb
cli
fisubrs
xor
jecxz
add
cmpsl
xchg
mov
loop
pop
mov
data16
and
pop
in
shrb
push
dec
sbb
push
cmp
inc
aam
and
or
jb
lea
jo
js
test
dec
jg
xchg
rcll
mov
or
pop
out
add
mov
jbe
mov
xlat
add
out
icebp
bound
orl
mov
xor
push
in
pop
pop
pop
outsl
cmp
inc
push
dec
inc
arpl
sti
xor
add
cmc
add
es
dec
cmp
or
mov
pop
std
mov
and
outsb
jmp
mov
mov
xlat
dec
icebp
add
mov
loop
out
pop
imul
or
les
insb
lcall
cmp
gs
lea
andl
xchg
shlb
sub
call
ret
lock
add
add
bound
push
pop
pop
int
stos
mov
nop
mov
add
les
jle
adc
cmp
test
pop
adc
sub
sahf
sub
pop
in
aas
xor
or
jno
dec
add
out
pop
incb
push
icebp
jg
xor
shr
add
cmp
inc
pop
fcomi
rorb
jp
ss
dec
dec
sar
loop
jle
mov
cwtl
add
jl
shl
push
jbe
mov
insb
dec
inc
call
add
mov
and
movl
mov
xor
mov
sar
mov
xchg
jnp
dec
test
jp
xchg
pushl
hlt
mov
setae
cmpsl
dec
adcl
mov
cmp
jecxz
mov
or
adc
xchg
into
xorl
pop
add
mov
xchg
aam
xor
mov
adc
jp
sub
icebp
push
add
loop
das
mov
iret
shrl
rolb
jns
cs
shlb
sub
ljmp
xor
pop
or
cmp
and
jp
cmp
loop
sub
testb
movsl
xorb
test
mov
sbb
out
mov
push
ret
cmpsl
mov
mov
inc
add
sub
inc
in
xchg
push
ret
stc
inc
movsl
bound
sbb
cmp
xor
and
push
ret
pusha
imulb
sub
xchg
rcll
movsl
add
dec
and
aad
addr16
test
sub
inc
and
out
xor
dec
popf
fwait
inc
pop
jno
xor
aas
adc
jne
jae
int
adc
icebp
push
jl
adc
js
cmp
mov
mov
and
xchg
jg
sbb
ds
movsl
lods
mov
ljmp
cmpsl
sub
jmp
out
insl
int3
xor
in
mov
pusha
lds
xor
and
sarb
pop
sbb
dec
lahf
xor
mov
jl
inc
int
sbb
sbb
test
sub
cwtl
and
sbb
dec
imul
or
or
dec
lea
adc
add
pop
or
push
popa
cli
mov
xchg
daa
pop
jno
inc
sbb
push
rolb
scas
divl
inc
and
mov
xor
inc
jne
add
adc
and
in
scas
mov
test
xchg
mov
xorb
sub
mov
lods
lds
push
loopne
add
in
and
mov
mov
mov
rol
xor
cmp
push
mov
popf
and
cmp
push
adc
pop
xchg
xor
ficoms
add
dec
push
inc
rcl
test
push
bound
out
arpl
aaa
add
adc
jo
clc
inc
shll
ret
pop
sahf
push
mov
jne
les
mov
sbb
cmp
mov
add
xchg
add
push
aad
les
dec
arpl
or
inc
in
sub
dec
adc
ret
push
cmp
add
inc
ss
xchg
push
incb
arpl
insl
and
inc
xchg
cs
lods
dec
lahf
sbb
sub
mov
cs
movsb
mov
sbb
mov
push
jno
xorl
cmp
xor
xor
xlat
push
popa
ret
and
sahf
das
jae
add
or
fs
inc
or
or
adc
mov
sub
jno
pop
add
daa
and
popa
mov
std
inc
add
mov
or
cmpsl
in
cmp
lods
out
mov
jo
inc
aam
sbb
inc
bound
movsl
fiaddl
fs
xor
loopne
sbb
xchg
add
sbb
add
fidivrs
pop
xchg
xor
or
cmpsl
shr
push
mov
xchg
fldt
fiaddl
pop
sbb
neg
out
lods
jno
pop
movl
xor
testl
mov
ret
fildl
inc
xchg
arpl
js
mov
jp
xchg
mov
push
adc
lods
pop
mov
test
fiadds
ja
jno
stc
push
push
aam
jne
or
inc
or
sbb
mov
daa
imul
pop
jp
stc
shll
adc
adc
push
das
add
cmpl
sbb
sbb
inc
test
fisubs
dec
sbb
mov
xor
loopne
cmp
lds
push
jns
test
mov
movsb
les
ret
mov
sbb
or
inc
inc
cs
add
dec
aam
scas
rolb
fsubl
ret
mov
xorl
ret
arpl
jbe
mov
lods
xor
mov
inc
cwtl
hlt
addb
cs
sbb
jo
ret
mov
and
std
jne
movsb
daa
sbb
jbe
mov
imul
rorl
cmc
aas
inc
inc
imul
out
pusha
mov
lods
cmp
imul
or
insb
lret
cmp
mov
subb
loopne
daa
inc
pop
sub
xchg
adc
rcrb
mov
adcb
test
or
xchg
and
loop
jge
not
cld
mov
add
scas
xor
adc
test
push
push
push
jns
xorb
xorl
nop
sub
ja
scas
ret
imull
cmp
outsl
xor
or
add
in
jbe
cmpsb
push
fs
test
jp
and
sub
movsb
testl
inc
jp
es
xor
enter
jp
sub
cmp
scas
mov
xchg
push
adc
arpl
pop
cmp
sbb
std
mov
je
push
xchg
ret
scas
xor
adc
test
or
sbb
dec
adc
daa
xchg
xor
or
jg
enter
jl
roll
pop
mov
loope
sub
mov
hlt
divb
sbb
aaa
jbe
and
in
jge
jecxz
add
and
idivl
inc
sub
adc
lcall
rorb
ja
outsl
es
sbb
ret
lret
jne
push
pop
adc
addl
push
stos
rolb
dec
mov
mov
testl
xchg
push
pop
pop
or
mov
out
sbb
mov
imul
adc
inc
push
rolb
ret
jecxz
jl
test
insb
std
inc
sbb
or
inc
addr16
mov
test
in
cmp
xchg
cmp
daa
sub
push
in
ret
jle
rorl
adc
repnz
or
add
adc
std
sub
xchg
mov
mov
dec
fsts
cltd
bound
adc
mov
pop
inc
push
add
daa
mov
fisubs
pop
cmp
je
inc
daa
sbb
cmpb
jle
sbb
loope
cmp
ss
leave
add
fldenv
ficoml
push
and
push
stos
add
cmp
sbb
inc
push
pop
fstpl
pop
cmp
push
xchg
sbbb
and
jp
ds
mov
jnp
bound
jne
and
sbb
pop
jp
mov
loopne
imul
jp
or
add
adc
add
lret
adc
adc
les
sahf
fsubr
or
je
push
movsb
cmp
cmp
cltd
mov
mov
xor
mov
add
mov
orb
inc
cld
fidivrs
add
das
dec
int
adc
leave
xor
sub
sbb
jnp
mov
popa
add
loopne
pop
mov
outsl
inc
jnp
pop
or
inc
movsl
clc
sub
dec
add
xor
clc
xor
add
push
sbbb
mov
mov
fcomps
pop
xor
sub
insb
hlt
or
fdivp
dec
inc
add
mov
pop
rcr
cwtl
sbb
loopne
aaa
test
es
push
add
data16
add
in
jle
cmp
xchg
add
jbe
lea
cmp
ret
insl
mov
xor
xor
dec
xor
mov
adc
in
and
adc
sahf
inc
add
xor
add
movsb
xor
arpl
iret
xchg
cmp
mov
push
lods
mov
loope
or
add
fcoms
add
and
xor
cs
andl
insl
mov
fistpll
mov
hlt
stc
scas
xchg
and
cmp
sar
rcr
loopne
jb
int3
sbb
test
sub
jecxz
jnp
ret
mov
add
loop
mov
addl
jp
pop
or
fwait
or
dec
das
add
sti
xchg
adc
inc
cltd
mov
rol
das
jb
or
xchg
ja
mov
jmp
adc
scas
xchg
clc
jecxz
sub
push
mov
push
out
jae
add
fnstcw
xchg
sti
add
out
enter
jnp
mov
addl
cmp
xchg
scas
xor
xor
jle
inc
add
stos
adc
add
sbbb
add
in
addl
xchg
adc
test
jae
add
xor
mov
faddl
insl
or
jne
out
outsl
and
mov
xor
or
in
add
jge
mov
pop
jns
sub
inc
pop
pop
cmp
repz
scas
inc
add
jmp
jb
mov
mov
pusha
dec
je
lcall
mov
jecxz
scas
xor
sub
lods
cs
mov
divl
adcb
and
mov
scas
add
ja
sbb
mov
mov
dec
xchg
xchg
inc
lcall
pop
in
out
xchg
mov
push
push
sub
pop
jmp
add
cs
jle
in
pop
cmpsb
add
mov
icebp
sub
fwait
inc
outsb
in
cwtl
add
pcmpeqd
data16
or
cmp
xor
mov
or
les
fs
sub
mov
pushl
dec
xor
add
dec
mov
xchg
inc
das
pop
roll
sarb
fidivl
ret
das
scas
mov
add
lock
test
xor
mov
add
xor
add
shr
jg
jl
add
add
cmpb
rolb
ds
mov
lldt
pop
out
lock
add
adc
adc
jo
xor
xor
adc
into
lret
sub
and
std
and
loopne
test
xchg
cld
add
jecxz
stc
clc
adc
dec
shll
adc
xor
addr16
jno
sbb
add
inc
mov
pop
sbb
push
xor
and
mov
mov
cld
mov
pop
sub
adc
add
orb
rcll
dec
add
mov
and
jg
into
mov
adc
int
mov
and
push
dec
jmp
aaa
xchg
test
sar
imull
mov
add
pop
aaa
mov
xor
shll
xchg
pushf
xor
scas
inc
pop
andl
cmp
test
divl
punpcklwd
pop
mov
aad
mov
sub
push
or
rcll
adc
xor
add
fwait
bound
dec
lret
pop
fistps
addr16
outsb
add
pop
push
shll
or
push
lods
loop
scas
xchg
xor
add
inc
add
outsl
sub
xchg
lret
in
lods
xor
add
lds
ficompl
and
pop
iret
add
push
sbb
add
push
out
test
jmp
add
cmp
mov
aam
movsb
inc
and
jp
xor
fwait
ss
rcr
into
sbb
ja
mov
out
xor
dec
enter
pop
sub
addl
or
add
lods
stos
insl
dec
ret
iret
cmpsl
sub
call
jg
pop
add
jmp
inc
xchg
mov
adc
xlat
xchg
lahf
rorb
pop
mov
inc
stc
roll
sahf
idiv
xor
sbb
and
loope
iret
adc
mov
xchg
test
filds
jns
pop
dec
stc
jp
xchg
or
movsb
add
lods
and
call
cmpsl
push
into
xor
insb
cld
add
or
pop
fwait
outsl
xor
inc
add
ss
add
jge
cmp
jns
push
int3
xchg
iret
bound
fiaddl
jecxz
arpl
add
out
inc
rorb
jle
pusha
and
out
cli
ret
ret
in
mov
cmp
and
pushf
and
pop
jmp
add
adc
sub
inc
dec
cmp
mov
and
test
inc
rcr
lds
and
stos
sub
adc
push
test
xchg
cltd
add
jno
loopne
shufps
sbb
mov
pop
test
add
pusha
or
out
rorl
mov
xchg
js
xchg
int
dec
shlb
cmc
jne
fildll
test
add
sbb
lret
aaa
ret
repz
push
iret
add
push
sub
or
lds
mov
dec
cltd
push
add
push
or
aad
out
inc
out
fldcw
es
shr
jae
in
push
vpextrw
mov
leave
ljmp
aas
add
insl
ret
outsl
or
dec
xchg
ret
imul
xchg
mov
js
pop
loopne
add
mov
add
out
xor
adc
pop
add
and
outsl
fstl
lods
pop
or
add
int3
mov
lret
mov
outsl
or
cmp
movsb
loop
mov
scas
jecxz
xchg
xor
add
repz
fs
incb
sub
add
cmp
inc
loope
lret
dec
cmp
popa
pop
adc
les
test
add
jns
inc
andl
rorb
mov
inc
shl
cmpsl
jno
adc
sbb
frstor
in
mov
or
out
in
in
push
xor
mov
dec
and
int3
add
outsb
add
in
sbb
inc
mov
es
inc
adc
scas
xchg
stos
add
dec
jb
loopne
sbb
ret
or
jecxz
inc
xor
std
cmp
xchg
inc
fidivs
ret
push
push
pop
outsb
add
jo
filds
add
jge
sbb
cmpsb
pop
pop
cmc
shrb
add
xchg
push
cmp
dec
mov
loopne
enter
shll
sub
xor
in
lret
pop
cmp
mov
cmpsl
call
stc
and
mov
loope
popa
jae
jmp
mov
ror
movsb
xorl
adc
inc
adc
add
and
cmp
mov
movsb
xchg
jnp
jno
push
lret
add
jp
test
and
add
or
loope
adc
in
jp
and
mov
pop
xor
add
sbb
movsb
shll
in
inc
outsb
push
enter
std
int
jle
xchg
push
mov
js
aad
loope
pushw
test
sub
xor
jge
fwait
movsb
stos
outsb
fcom
add
cmp
inc
inc
cs
divl
xchg
push
lahf
mov
jnp
bound
cmp
pop
rorl
cli
mov
inc
mov
mov
add
jp
add
dec
les
cwtl
inc
sbb
hlt
nop
and
xor
xchg
or
adc
stos
sbb
aas
jno
or
jmp
std
inc
sti
pop
inc
jnp
jb
pop
and
retw
bound
xor
iret
push
pop
add
fmull
push
inc
push
cli
jle
jge
jl
stos
addl
xchg
or
mov
mov
xor
cmp
xchg
add
inc
lods
rolb
sub
xor
roll
cmp
loopne
in
mov
or
xchg
jmp
cwtl
cltd
pop
pop
pushf
mov
xlat
mov
adc
lret
pop
loopne
fwait
dec
fisubl
sub
xor
jmp
inc
leave
test
cmp
and
fistpl
repnz
iret
sbb
test
xor
cmpsb
add
push
mov
cmp
inc
cmp
dec
ds
arpl
sahf
push
xchg
xor
add
out
pop
inc
rcrb
sub
arpl
lret
movsb
add
jle
sub
add
aam
lods
stos
call
push
mov
fstp
popl
push
outsl
mov
xlat
shr
jge
sub
in
jecxz
scas
add
aam
imul
mov
inc
ds
in
cmp
rcll
repz
dec
stos
mov
add
rcrb
mov
jbe
movsl
and
es
cltd
lret
inc
inc
mov
mov
xor
aam
ja
dec
mov
sbb
xor
fnstenv
jecxz
add
sar
jnp
lcall
pop
int3
cmp
cmp
add
jg
adc
add
pusha
idivl
arpl
sahf
cmpl
cli
lahf
loop
or
insl
jne
nop
inc
lods
add
jb
jl
mov
gs
iret
jno
or
in
sub
adc
mov
add
push
push
sub
out
inc
lahf
cmp
ret
mov
add
cmpsb
push
daa
inc
adc
js
add
push
std
cmp
lret
push
inc
jmp
icebp
unpckhps
iret
sbb
cmpb
sti
or
add
cwtl
push
movsl
loope
sub
sahf
inc
sub
xor
ror
add
shl
loopne
aam
inc
out
das
repnz
adc
sbb
push
js
dec
and
dec
mov
inc
mov
test
and
mov
rolb
jnp
or
xor
inc
pop
pop
sarl
jae
lret
push
inc
xor
scas
shlb
aaa
out
mov
lock
and
es
add
loopne
inc
dec
and
mov
sbb
icebp
and
iret
out
insl
das
add
je
sbb
fisttpll
arpl
rcrl
rcl
aam
imul
push
inc
es
push
mov
shrb
jns
sub
andl
fwait
xchg
fdiv
inc
add
sub
out
mov
jle
push
jne
int3
and
sarl
dec
add
mov
xchg
push
add
cmp
pop
mov
testl
add
adcl
jmp
data16
out
add
dec
das
fs
aam
add
fwait
lds
or
inc
jecxz
mov
cmp
inc
popf
xor
lea
std
mov
cmp
fsubs
mov
sbb
sub
inc
add
jp
jecxz
in
daa
aam
dec
ret
cmp
inc
in
jl
test
dec
fidivrl
add
pop
fs
pop
mov
push
ret
shl
sbb
mov
das
orl
adc
mov
stos
adc
dec
rcr
sarb
or
outsb
jmp
addl
test
and
pop
inc
mov
in
xchg
insl
cmp
jmp
and
or
or
jne
jo
jo
loope
mov
inc
add
jmp
scas
add
in
gs
sbb
fiaddl
sbb
and
pop
cmp
push
mov
mov
jb
mov
add
pop
sub
add
aas
mov
xor
jbe
movb
xchg
sbb
ss
adc
imul
push
mov
push
jno
mov
add
fisttps
and
push
insl
shl
out
scas
and
fsubrl
push
add
cmp
add
mov
andl
notb
icebp
cmc
stc
pop
sub
jnp
out
outsb
bound
insl
xchg
add
and
testl
rcll
add
js
or
sbb
jb
add
jo
insb
add
sub
xor
mov
lcall
push
ja
or
insl
and
push
mov
xor
add
pop
je
dec
loope
cmp
mov
test
jnp
cli
dec
xor
jecxz
cmp
adc
jle
or
or
pop
add
out
mov
add
inc
add
or
or
and
arpl
pushf
pop
and
cld
sarl
rol
cmp
lcall
push
or
inc
add
xchg
scas
call
subps
aas
fmull
sub
dec
sti
into
and
xchg
sbb
jg
mov
pop
test
jle
add
pop
and
test
in
add
popf
add
mov
pop
add
sti
lods
testb
dec
or
lds
stos
shr
xor
out
out
adc
loope
cmp
dec
pop
pop
add
loopne
shlb
add
movsb
sub
ret
adc
jae
ljmp
sub
into
xchg
mov
ret
mov
and
push
mov
add
insb
jecxz
or
mov
xlat
sub
ljmp
adc
hlt
add
loop
pop
pop
fs
sbb
xlat
jg
cmc
cli
mov
repz
add
pop
sub
fwait
dec
or
add
cmpsl
xor
add
add
mov
jge
sub
sbb
mov
dec
adcl
ja
adc
xchg
and
mov
nop
inc
jg
ror
mov
lcall
jo
in
cmpsb
lock
pop
xchg
and
pop
es
inc
sub
xchg
xchg
lahf
sbb
adc
sub
pusha
fnstenv
rorb
test
mov
add
fs
icebp
popa
adc
test
rorb
mov
cmp
jne
cld
out
or
cmp
aad
int
adc
cmp
cmp
adcb
sahf
fcomps
out
or
mov
dec
sbb
add
test
aam
cld
fldt
fwait
subb
xorb
jns
lock
roll
mov
fidivrl
jmp
push
xchg
mov
outsb
test
or
hlt
testb
cmp
add
orb
push
dec
or
daa
adcl
push
or
xchg
iret
and
adc
xchg
popl
jmp
clc
stos
scas
rorl
add
xor
pop
push
add
stos
test
testb
pop
mov
dec
add
je
and
mov
cltd
mov
add
sbb
shll
daa
test
add
and
mov
lock
dec
add
add
inc
inc
insl
jge
fwait
inc
cmc
cmp
popf
gs
fildl
inc
into
loop
es
jo
psrlw
mov
xor
and
dec
and
outsb
dec
lods
jg
nop
add
or
in
add
or
adc
fimull
lods
in
add
lock
iret
subl
imul
add
xor
adc
int3
add
jg
and
je
or
mov
or
xor
adc
aam
sub
mov
sub
stos
and
outsl
fst
push
add
dec
icebp
mov
add
lods
adc
mov
loope
add
push
cmp
testl
push
cwtl
mov
xlat
xchg
add
pop
data16
lcall
xor
xor
popf
mov
adc
dec
add
fstl
inc
loope
lds
punpcklbw
and
xor
xorl
mov
insl
sbb
std
jmp
mov
iret
daa
pop
add
addr16
add
rorl
ljmp
test
mov
jne
fisttps
daa
scas
test
push
push
add
or
outsl
mov
adc
shl
dec
outsb
jecxz
lods
add
jle
inc
enter
in
mov
sub
hlt
imul
and
lcall
xchg
mov
adc
cmpsl
dec
addl
fwait
inc
add
mov
xchg
cmp
sbb
inc
add
jae
adc
stc
lahf
fiadds
ljmp
mov
cmp
lret
mov
pop
ret
clc
cs
daa
xchg
sub
jbe
movsb
enter
and
xchg
imul
scas
push
mov
loop
push
stos
and
push
add
add
ja
aam
inc
sbb
pop
ss
fwait
adc
push
sbb
xor
mov
test
mov
or
mov
adc
add
das
stos
dec
fwait
out
roll
jne
mov
testb
lea
dec
and
subl
jp
mulb
jnp
add
mov
aad
int
out
add
fnsave
je
add
sbb
sbb
pop
mov
mov
xchg
stos
push
stos
xor
incb
mov
cmp
add
shll
mov
and
cs
lods
js
xlat
popf
imul
mov
loopne
fcomip
fidivrl
mov
cld
push
dec
jecxz
add
and
sar
add
cmpsl
das
push
bound
mov
add
and
adc
shl
xchg
add
inc
std
add
pop
mov
and
xlat
in
add
pop
pop
sahf
adc
jo
xor
add
fnstsw
dec
int
lahf
add
push
jnp
add
fcmovnbe
lods
add
sbb
pop
mov
and
jp
push
cmpb
fs
mov
adc
push
cmpl
cmp
imul
in
icebp
mov
cmp
mov
add
pop
ja,pt
outsl
in
pushf
mov
fisttpll
and
xor
call
push
inc
ljmp
jp
aad
shll
out
mov
das
stos
inc
and
add
js
adc
jmp
lods
enter
and
sbbl
cmpsl
lahf
bound
xor
cmp
mov
nop
and
mov
or
add
cmp
mov
pop
cmp
or
add
inc
popa
sbb
ret
jle
rclb
nop
mulb
out
mov
and
pop
add
dec
or
or
mov
cmpb
jl
pop
outsl
mov
mov
or
jp
dec
inc
insl
push
mov
ret
cmp
inc
mov
into
and
in
sbb
lahf
inc
test
stc
repnz
push
lcall
pop
push
jnp
arpl
insl
fidivrl
sbb
pop
adc
lods
mov
arpl
les
frstor
mov
pushf
xchg
cmp
jp
xlat
mov
daa
aam
out
xlat
aam
test
jnp
xor
dec
inc
adc
sbb
push
test
or
inc
iret
dec
bound
inc
std
mov
outsl
jg
test
add
and
jl
icebp
clc
out
sarl
mov
pusha
mov
dec
loop
and
pop
add
sbb
xchg
mov
mov
cmpsb
sbb
sbb
ss
popf
mov
jb
xchg
mulb
pop
out
or
mov
dec
add
dec
xor
adc
daa
cltd
fs
aam
jo
xlat
adc
hlt
data16
sub
inc
or
and
or
repz
iret
mov
add
out
cmp
inc
cwtl
push
push
sbbl
lahf
sub
sub
std
inc
inc
sbb
dec
push
ret
add
mov
inc
outsb
xor
fld
mov
and
loope
xchg
jecxz
aam
mov
jl
ja
mov
add
xor
popa
cmp
mov
std
ret
dec
inc
pop
or
data16
xchg
adc
mov
jnp
inc
jge
lret
cmp
sub
popf
sbb
sbb
adc
push
inc
mov
mov
les
imul
add
jbe
pop
add
incl
inc
out
std
lahf
aam
xor
jae
pop
mov
sbb
xlat
rcl
fs
pop
cmp
in
cwtl
xchg
add
push
insl
testl
adc
orb
sub
sbb
lret
mov
push
lock
adc
pop
add
dec
and
cmpsb
pusha
and
add
popf
pop
adc
dec
jge
insl
test
hlt
stos
xor
pop
pushf
add
pop
mov
pop
rorb
cmc
movd
cs
or
xor
add
adc
add
pop
data16
mov
enter
jns
sub
mov
bound
vpsubd
sub
dec
movsb
ret
xchg
adc
cmp
add
mov
jnp
mov
add
or
stos
add
xorl
cmp
sub
cmp
mov
xor
lret
or
adc
sbb
add
xor
scas
pop
add
add
icebp
sbb
inc
in
lahf
rorb
in
xlat
out
add
mov
lods
add
js
mov
rclb
lds
mov
dec
scas
aam
addb
jle
mov
addl
fs
adc
pop
mov
bound
in
push
inc
addr16
or
sub
add
rcrb
imul
lcall
pop
add
jle
mov
icebp
mov
test
pop
ficoms
add
dec
imul
or
mov
adc
cli
inc
iret
sub
push
andb
insb
jle
rcrl
adc
pop
xchg
fwait
repz
cmp
sub
inc
loopne
cmpsl
addl
mov
popf
out
add
ljmp
add
fistps
inc
add
loop
adc
scas
ficompl
mov
and
stc
cmpsw
add
push
jp
lret
mov
subl
jne
ret
jae
add
push
pop
sub
js
shl
cmc
jmp
es
cmp
scas
pushf
add
adc
aad
into
fsubl
lahf
add
out
fiadds
or
jp
xor
repnz
rol
inc
or
adc
sti
fs
aaa
xor
mov
mov
dec
sub
cwtl
inc
insl
add
movsl
jb
add
add
pop
adc
dec
pushf
mov
mov
sahf
push
add
jmp
mov
add
mov
ljmp
inc
pop
call
push
adc
sbb
iret
push
and
sbb
sub
add
xor
in
sbb
lret
xor
adc
cld
add
push
mov
stos
push
inc
addb
mov
cmc
sbb
add
and
or
xor
sahf
dec
jnp
cmp
daa
inc
pop
cltd
ret
jge
rorl
jae
xchg
shrl
push
xor
sbb
push
add
mov
push
adc
loope
cmp
add
xor
outsl
add
test
xchg
ljmp
and
cs
dec
cmc
nop
xchg
cmp
dec
rclb
mov
or
xchg
add
or
dec
inc
repnz
rorb
inc
inc
call
push
cmp
mov
pushf
or
test
jecxz
add
add
pop
sub
pop
add
push
fadd
and
sarb
push
cmp
mov
shll
addr16
aaa
inc
mov
xor
push
mov
mov
jle
sbb
pop
pop
int3
jg
or
mov
lock
cmpb
fwait
popa
and
mov
call
rcrl
test
iret
mov
fwait
test
and
sub
sub
mov
dec
stc
pushf
cmc
iret
inc
jb
adc
dec
xor
cmp
inc
sub
xor
test
xchg
sub
mov
and
cmp
mov
xlat
cli
mov
xor
sar
cmp
sub
fadds
jno
cltd
xlat
or
rcl
fwait
testb
jp
inc
add
divl
inc
dec
ret
repz
xchg
imulb
ret
outsb
mov
push
pop
add
add
repz
xchg
add
lcall
pop
mov
dec
rolw
cmp
xor
cmc
inc
add
mov
jo
filds
mov
es
or
insl
mov
adc
xchg
adc
js
lret
push
sbb
cmpsb
pop
pop
add
sbb
inc
add
adc
pop
in
rolb
cs
fstps
lods
jecxz
orb
in
push
daa
xor
jle
cs
add
and
add
sbb
cmp
lods
add
mov
arpl
push
cmpsl
inc
and
out
outsb
fnsave
mov
and
or
xchg
jp
xor
fwait
dec
or
xlat
int3
or
jle
or
lds
mov
xchg
cmp
bound
ljmp
adc
jmp
jae
daa
mov
add
outsb
adc
cmpsb
out
add
mov
loope
dec
cld
movsl
add
push
pop
mov
add
mov
cmp
xor
aaa
add
inc
inc
xor
mov
imul
ret
add
sub
push
mov
jg
pop
add
repz
mov
cmp
pusha
js
clc
ret
mov
and
negb
loop
and
rorb
push
ds
jo
mov
push
jl
cmp
mov
mov
dec
cli
pop
repz
jb
int
aas
cmp
faddl
imul
lea
xor
je
sti
push
repz
mov
or
or
rclb
fld
or
mov
cmc
mov
or
out
std
stos
mov
into
and
and
mov
mov
or
fistpl
jl
movsb
sbbl
adc
xor
jle
sub
outsl
add
jno
aam
in
sub
cltd
inc
je
inc
xchg
add
in
jns
xchg
mov
out
call
arpl
push
add
xchg
mov
stos
nop
mov
dec
inc
fisubrs
cmpl
add
mov
dec
inc
loope
mov
loop
push
add
dec
icebp
push
sbb
imul
fwait
and
movsb
xchg
adc
mov
inc
cwtl
out
pop
cli
add
jo
rorb
sahf
add
inc
mov
mov
aas
jb
roll
cmp
cmp
call
push
addb
push
test
pop
movl
fidivl
sbb
jge
pop
and
aad
xchg
hlt
and
sub
cld
sub
loop
inc
jo
ret
sbb
js
push
gs
or
arpl
push
mov
mov
add
jno
or
mov
cmp
loopne
jnp
in
add
sbb
xchg
pushf
sbb
xchg
add
test
cmp
pop
cli
icebp
aad
inc
data16
insb
flds
or
pop
sbb
mulb
push
add
pop
wrmsr
pushf
jns
lock
sbb
and
cmp
jnp
ljmp
add
pop
notl
sarl
sbb
add
xor
je
shlb
fimull
add
testb
rclb
into
adc
add
shrb
in
cmp
xchg
adc
dec
ror
sarb
cli
cmp
aad
inc
inc
jp
push
mov
push
and
mov
push
pop
cs
jg
cmp
or
lret
jno
stos
mov
add
add
movsb
popf
xchg
cmpl
mov
pop
pop
mov
mov
ret
vmovsd
imul
mov
sub
stos
sub
mov
imul
outsl
add
xchg
hlt
dec
add
clc
lcall
int
xor
stos
bound
sub
add
mov
ficomps
mov
jmp
lods
adc
pop
scas
sbb
ds
lret
outsl
add
insl
jl
loopne
repz
jecxz
adc
xor
push
push
test
or
movsl
mov
xchg
xchg
faddp
daa
lcall
mov
jbe
ret
pavgb
adc
jns
or
xchg
shll
orb
sbb
cmp
mov
sbb
adc
cmp
enter
ds
fisubrs
lods
gs
lcall
mov
lds
into
mov
jmp
pop
add
adc
lret
call
shr
andl
cld
xchg
add
adc
mov
fstpl
add
scas
ret
push
jb
bnd
jl
call
negb
adc
xor
ss
jne
add
push
pusha
sbb
mov
jecxz
and
rolb
add
sub
mov
or
pop
in
inc
fwait
hlt
in
jmp
cmp
push
mov
xlat
mov
adc
rcr
or
inc
icebp
sub
mov
imul
mov
push
cmpsl
mov
cmp
pushf
call
cmp
add
push
jne
pop
ss
subl
sbb
negb
lahf
sbbl
js
dec
add
addr16
pop
bsf
and
dec
popf
jo
inc
sub
outsl
add
adc
sbb
jno
dec
xchg
xchg
test
mov
pop
fcomi
aas
pop
fiadds
std
xchg
imul
add
fisttpl
sbb
out
in
outsb
xchg
xchg
test
cld
insb
adc
loope
add
sbb
inc
cmp
push
vsqrtps
push
or
mov
pushf
mov
cld
dec
push
xchg
aas
push
loop
xor
jp
jl
cmp
inc
mov
pop
push
sbb
lret
hlt
es
cld
xor
xor
push
pop
jmp
jecxz
pop
adc
js
mov
mov
jle
jnp
les
sarb
or
iret
jns
and
aam
sti
test
aas
push
outsb
jnp
cltd
or
push
int3
divl
xor
mov
inc
sub
test
inc
aad
pop
or
call
and
dec
scas
and
psllw
jb
add
jecxz
mov
or
loopne
shlb
fsubrl
dec
add
adc
xorb
and
cmp
xor
add
mov
outsl
sub
and
ret
mov
pop
push
dec
xchg
jl
rorb
sub
mov
sub
cmp
hlt
adc
adc
not
adc
mov
sub
insb
push
lds
add
or
inc
dec
inc
add
rcl
out
mov
push
int3
lret
or
inc
mov
jecxz
gs
push
testb
out
ret
add
fisubs
jno
movb
pop
mov
push
shrl
pop
fdivs
xchg
xchg
dec
es
mov
add
lahf
das
cmp
loopne
cmp
mov
add
sbb
stos
add
cli
fs
imul
add
xchg
inc
jge
push
fucomip
xchg
xor
repz
popaw
daa
sbb
iret
loopne
inc
cmpsb
mov
mov
cmc
xor
and
bound
xchg
jge
lret
lods
test
jae
sahf
jp
out
inc
push
in
iret
or
and
add
popa
mov
ds
rclb
sub
dec
clc
cwtl
stos
cltd
jnp
subl
roll
js
mov
pop
pushf
fldt
clc
test
in
lds
add
in
jmp
xchg
mov
or
sub
cwtl
ret
jle
mov
inc
sahf
jbe
loopne
mov
xchg
jns
inc
je
push
sub
or
or
or
inc
cmp
and
fdivrs
rorl
int
stc
movsl
lahf
cmp
mov
add
mov
xor
cmp
mov
dec
add
aaa
dec
gs
dec
mov
sub
adc
daa
sahf
ret
add
stos
mov
sub
sub
lds
pop
jecxz
and
cltd
mov
xchg
mov
ss
fwait
sbb
imul
dec
mov
sub
inc
mov
mov
das
mov
stos
sub
fiaddl
mov
lds
sbb
addl
pop
sbb
mov
inc
fldl
and
jb
mov
push
js
jno
out
dec
rcrb
jb
std
mov
icebp
jne
repz
fdiv
add
punpcklbw
lods
sbb
pop
dec
icebp
add
dec
xchg
push
adc
enter
inc
std
xor
xor
test
adc
inc
out
xchg
adc
scas
out
fadds
push
into
das
xchg
call
dec
cmpsl
xor
sub
icebp
mov
cmp
add
add
insl
movsb
ja
add
cmp
mov
mov
clc
mov
nop
mov
jae
enter
imul
leave
icebp
test
mov
fnstenv
lods
outsl
xor
aaa
push
sub
hlt
out
jg
test
pop
add
std
adc
sbb
pop
fcoml
add
ja
xor
and
add
jle
and
mov
out
dec
sbb
cmp
das
xlat
inc
cmp
cmpsb
pop
mov
xchg
cld
push
jmp
xchg
add
pop
or
sbb
add
mov
fimuls
iret
lea
sahf
out
gs
idivb
faddl
mov
or
jno
pop
repnz
jmp
push
jnp
add
fisubs
stos
nop
push
push
sti
rorb
and
rcl
pop
sub
mov
add
dec
arpl
jmp
aad
jo
ret
insl
sti
aam
mov
dec
xor
int3
in
orl
xor
push
sbb
sub
cs
sub
and
add
sub
add
mov
aad
add
out
cli
insb
mov
pushf
fwait
stc
xchg
xchg
push
mov
fisubl
pop
les
mov
clc
sti
xlat
jnp
jbe
add
icebp
fidivrl
popf
lods
cwtl
cs
and
adcb
mov
ljmp
mulb
sbb
rcr
popa
leave
push
or
test
adc
out
fisttpll
ret
mov
sbb
add
mov
data16
add
pop
int3
packuswb
jmp
lds
add
cmpsl
in
arpl
shll
test
jns
inc
dec
ljmp
fstl
cmp
in
or
xor
sub
xor
sub
mov
cltd
ret
jle
add
or
xor
mov
add
push
int
inc
pop
mov
out
jns
push
dec
test
dec
jecxz
xor
repnz
pop
jmp
sub
dec
pop
cmp
mov
or
add
addr16
mov
add
popa
mov
movsl
or
ret
and
cwtl
cmp
jb
inc
add
jl
cmp
xchg
sub
sbb
shrb
movsb
popa
push
jle
cltd
je
add
mov
jp
sub
loopne
loopne
push
inc
and
ja
add
cs
add
add
jmp
mov
and
arpl
mov
push
push
cmp
add
dec
mov
dec
add
shll
xor
into
xchg
mov
lds
fists
je
add
jl
test
in
roll
jnp
movsb
sub
xchg
pop
dec
lods
jns
js
lea
fidivs
add
mov
xchg
aad
jnp
aas
in
out
jecxz
int3
cmp
inc
push
push
stos
sbb
cmp
or
sbbl
mov
arpl
lock
scas
test
add
jp
mov
xlat
mov
imul
mov
in
xor
xor
test
sbb
pop
ret
rcll
es
xor
sbb
jmp
shlb
and
push
fsts
add
lock
fimull
add
xchg
pop
and
sbb
fsubr
pusha
mov
mov
arpl
testb
cmp
fistps
sahf
xor
lods
movsb
add
add
add
aam
std
adc
inc
jno
mov
pusha
cltd
bound
aam
jae
pop
jne
jae
stos
pop
enter
loop
sub
pop
and
or
mov
jl
sbb
add
sbb
jae
cmp
adc
mov
movsl
movsb
out
or
fistpll
ss
out
out
adc
xchg
out
frstor
jle
cwtl
repz
sahf
cmp
and
les
push
cmp
lods
sbb
subl
test
stos
cmc
cmp
dec
inc
in
push
in
sarl
shl
gs
push
andb
jle
shll
jecxz
and
mov
cs
cmp
shll
shll
loop
fnsave
jmp
into
cmp
and
push
xchg
lcall
cltd
stc
bound
and
cmc
out
jb
cmp
push
loopne
mov
movsb
out
pop
shrb
insb
cmp
movsb
int
stos
add
jae
imul
cmpsb
mov
cmp
xchg
mov
imul
stos
xor
int3
inc
ficomps
pusha
lcall
or
and
mov
add
shl
adc
arpl
pusha
popa
dec
mov
push
jns
sub
es
xchg
fidivrl
add
bound
ret
idivl
xchg
out
mul
cmpsb
repnz
call
addr16
lcall
cmp
pop
push
sub
sbb
or
insl
xor
lds
hlt
push
sti
insl
cmp
insb
add
sbb
dec
or
mov
jmp
stos
push
pop
cmp
add
lcall
or
sbb
mov
fstpt
or
sarl
mov
add
add
aad
or
and
outsl
test
add
jl
and
or
lds
sub
cmp
mov
mov
dec
mov
outsl
ljmp
or
and
jge
or
nop
rolb
or
mov
inc
ret
dec
jp
int3
imul
sbb
out
gs
jp
jbe
pop
aas
dec
adc
add
add
adc
xchg
lock
orb
nop
loopne
out
loop
xor
aam
pop
sbb
cmc
cli
xor
test
mov
pop
cs
push
cmc
mov
in
rcll
mov
lds
dec
mov
js
int3
dec
aam
std
or
jp
scas
dec
sub
pop
mov
das
in
inc
mov
cmc
sbb
sbb
jp
and
push
sbb
ret
xchg
mov
insl
imul
mov
mov
cmp
rclb
xchg
cmp
aaa
xchg
shrl
fisubl
jb
jl
and
hlt
cmp
fdivp
xor
mov
outsb
push
push
sbb
push
pop
cmpb
lods
and
mov
jae
movsl
aam
shll
idiv
push
das
loopne
cs
xchg
push
add
push
push
mov
es
out
and
dec
jl
imul
xlat
mov
adc
lcall
out
cmp
mov
sti
fdivrs
std
loop
push
jo
mov
fsubrl
mov
outsb
test
xchg
arpl
das
aaa
popa
sbb
test
outsl
aaa
ja
mov
or
cmc
mov
nop
and
test
push
sbb
cmp
adc
scas
or
test
xor
rcll
add
xor
xchg
or
test
shlb
loopne
aad
arpl
and
jmp
mov
mov
cmp
iret
or
jb
mov
add
or
lret
les
jne
push
ret
adc
outsl
fdivs
sbb
push
outsl
sbb
push
daa
stc
movsl
add
xor
mov
jmp
add
pop
push
out
push
rcrb
cmp
jae
mov
xchg
out
scas
add
lcall
inc
test
add
xor
inc
sub
or
fbld
xlat
push
sub
jae
sbb
mov
sti
mov
loopne
jo
add
aaa
or
jp
push
ss
sbb
mov
xorl
sahf
add
and
std
dec
sbb
adc
mov
mov
sbb
lods
into
xor
xchg
adc
lea
stos
fmull
inc
loope
mov
xor
out
sbbb
je
push
xchg
test
adc
popa
inc
add
hlt
fcompl
clc
cmp
lds
or
movsb
jne
or
mov
or
add
xor
or
xor
out
fsubl
push
in
mov
insl
cmp
push
jae
inc
repnz
shr
pop
stos
outsb
idivb
sbb
jle
inc
arpl
ret
pop
push
jge
xor
add
cmp
sub
fwait
outsb
and
movsl
sub
jp
sbb
inc
mull
test
or
in
stos
jl
les
aas
mov
add
cld
adc
dec
rcll
sub
adc
aaa
adc
pop
shlb
adc
dec
add
imul
and
dec
jecxz
jns
nop
mov
sahf
lcall
popa
int
ret
popf
int
adc
push
cltd
dec
icebp
mov
ret
mov
lods
fwait
dec
fnsave
sti
push
lahf
test
pop
xchg
rcrb
add
mov
ja
stos
mov
in
cmp
int3
add
arpl
in
and
sarb
xor
sbbb
clc
stos
adc
cmpsb
scas
into
push
and
daa
rorb
insb
xchg
or
cmp
or
stos
dec
xor
cs
bound
std
loope
xchg
test
and
sbb
sub
aam
inc
xchg
std
inc
jle
push
sbb
adcl
mov
and
push
xor
out
mov
call
inc
push
push
hlt
lret
pop
ljmp
in
mov
adc
lods
popl
andl
clc
loop
popf
loop
mov
push
jg
jne
push
add
movsl
das
add
movsb
lock
jp
and
fs
xchg
adc
sbb
mov
bound
xlat
push
lret
jbe
popf
mov
std
fsubs
push
mov
scas
pusha
std
cli
pop
out
sbb
fists
or
push
add
cmp
stos
mov
imul
repnz
fisttpl
mov
rcl
mov
sbb
pop
loop
cmp
sbb
aaa
mov
mov
mov
pushf
int3
push
mov
jne
inc
sub
cmpsl
inc
mov
mov
aaa
mov
mov
rolb
xchg
pop
jnp
xor
pop
data16
enter
and
lods
add
jb
jns
xchg
shll
add
or
add
and
add
jmp
ds
ja
aaa
push
fadds
lcall
repz
push
imul
aas
inc
push
add
dec
pop
xchg
fisubs
rorb
cmp
cltd
xor
mov
cmc
pop
mov
cmpsl
add
xchg
inc
jne
mov
mov
lahf
mov
add
or
xor
jae
and
rclb
pop
add
orl
mov
push
add
push
sti
add
fwait
jne
je
sub
ret
xor
add
bound
push
and
data16
lds
add
aam
add
aaa
cmpsb
push
xor
std
out
daa
xchg
rolb
pop
push
lds
inc
imul
movsb
xor
mov
inc
sbb
mov
sub
aad
ror
sub
pushf
and
xchg
in
pop
xchg
xchg
mov
jmp
pop
push
add
sub
add
sahf
movsl
das
push
ficoms
jns
sarl
mov
fildl
dec
sbb
cmp
add
incb
fisubrl
inc
cld
pop
push
js
add
arpl
jmp
loope
ret
cwtl
sti
outsl
movsl
add
ja
loopne
mov
mov
adc
xorl
insl
mov
test
xor
adc
mov
fstpt
mov
andl
mov
jecxz
inc
push
es
add
out
ss
faddl
adc
out
lret
dec
loopne
and
lahf
mov
or
sub
loope
sti
inc
xchg
outsl
xchg
faddl
inc
nop
dec
and
cmpsl
fstl
cmp
push
add
mov
add
sbb
pop
and
mov
mov
xchg
std
add
jl
pop
add
mov
push
iret
inc
mov
and
xchg
xor
sti
pop
add
and
xchg
push
rcrl
in
xor
mov
sub
mov
aas
ficoml
sbb
pop
insb
add
gs
lods
add
test
add
inc
lods
xor
test
add
sbb
add
sbb
in
int3
push
push
das
in
mov
in
shlb
scas
xor
lret
add
lar
xchg
jp
imul
insb
and
inc
sub
sahf
inc
popf
testb
pop
hlt
xlat
lahf
dec
ret
push
int3
outsb
pop
cmp
add
into
popa
mov
inc
mov
mov
pop
out
test
adc
push
add
outsl
xchg
pop
flds
les
repz
jecxz
and
jge
insl
lea
xchg
dec
aaa
arpl
test
insb
inc
cs
sub
in
out
pop
jmp
add
inc
xor
ret
or
adc
xchg
addl
shl
repz
rcrb
in
dec
sub
popa
ret
inc
mov
pop
add
repz
xor
sub
jb
roll
inc
out
inc
ja
adc
addb
xor
sbb
push
popa
jae
dec
or
pop
mov
lock
inc
push
add
out
nop
shlb
jmp
pop
ljmp
fisttpll
stos
mov
dec
cmpb
sti
jne
repnz
xor
fwait
push
shll
dec
and
in
add
cmp
out
jp
and
imull
or
add
mov
out
push
add
int3
js
add
jb
nop
push
pusha
repz
push
enter
aas
add
popl
lods
lahf
xor
add
sub
sarb
add
jle
stos
dec
mov
and
mov
push
pop
addl
inc
out
adcb
xor
sbb
out
cmp
lret
add
outsb
pusha
mov
jge
cltd
sbb
jmp
es
add
fimull
mov
cmp
les
xlat
ret
and
or
cld
shll
push
and
sub
test
test
jb
jo
add
fucomi
add
fwait
and
rcll
or
adc
rorl
push
jg
add
js
push
test
add
cltd
jp
add
outsl
lret
add
aaa
xchg
out
adc
add
xchg
mov
insb
imul
xor
or
xchg
xchg
into
mov
add
or
ja
pop
imul
lahf
sbb
sub
sbb
imul
into
add
lds
push
push
addr16
call
pop
adc
loope
sub
cwtl
push
add
lds
pop
pop
jne
xchg
fsts
push
push
testb
fnsave
push
repnz
repz
add
add
sbb
push
add
fldcw
cmp
mov
test
sbb
ret
inc
sub
sbb
push
and
push
cmovae
lcall
aas
out
pop
push
out
iret
mov
fldt
mov
cs
cwtl
sub
pushf
pop
fldenv
sub
mov
adcb
sti
repz
jb
popl
int3
sbb
inc
mov
cmp
inc
add
mov
push
leave
rcll
shlb
popf
insl
mov
stc
fimuls
mov
sub
mov
xor
sbbl
pop
sub
lock
xlat
addr16
out
cwtl
popa
inc
xchg
icebp
push
cmp
xchg
push
ds
jns
pop
sbb
lods
roll
inc
sbb
dec
std
incb
push
mov
or
mov
test
testb
jecxz
cmpsl
mov
es
and
repz
pop
and
and
int
scas
and
inc
jmp
sbb
rcrb
js
or
dec
in
push
add
jo
cltd
clc
sbb
and
inc
aaa
pop
in
movl
cld
sarl
push
filds
aam
sbb
mov
xchg
lds
add
cltd
shll
inc
dec
push
std
and
adc
insb
daa
push
fwait
pop
add
iret
add
push
sldt
jns
icebp
test
idivl
in
or
add
mov
test
into
pop
mov
add
in
xor
jno
push
hlt
inc
filds
add
jbe
call
das
sub
movsb
ja
add
xor
leave
inc
aaa
icebp
cmp
add
mov
loope
adcl
sbb
scas
sub
add
les
or
xchg
mov
jle
mov
add
push
out
das
bound
hlt
inc
and
add
cld
cmp
ja
mov
aad
xlat
fcoml
mov
xchg
loopne
cmp
rorb
in
mov
in
ret
js
or
push
cmp
dec
loopne
add
call
dec
mov
into
mov
aad
mov
out
xchg
stos
push
mov
adc
pop
mov
adc
push
shll
loopne
dec
data16
lahf
andl
xlat
cmp
and
gs
pop
and
pusha
subl
jnp
cli
pop
test
xor
mov
repz
sub
outsl
xchg
add
cwtl
cmpsb
cli
inc
in
sub
out
sbb
dec
add
mov
dec
fnsave
cmp
into
jbe
inc
adc
jg
ja
add
push
mov
cmovo
xchg
pop
cwtl
pop
fwait
and
and
add
cld
je
jo
out
sbb
xor
jp
mov
and
movb
rorb
jp
ret
sbb
jo
inc
and
ret
out
lock
mov
cmp
inc
nop
stos
add
cmp
fdivl
addr16
xchg
mov
loop
out
rcr
mov
daa
mov
and
loopne
leave
out
mov
push
loop
sub
cli
imul
or
sub
daa
and
push
test
das
cwtl
dec
sbbl
ds
mov
popl
scas
cmp
pusha
mov
imul
shl
cmp
push
in
and
insl
mov
fisubs
cli
sub
xchg
lahf
jmp
loop
xchg
pop
mov
shlb
jns
test
adc
dec
sub
rorb
mov
cmpl
lds
shl
pusha
in
mov
and
leave
sbb
xchg
adc
push
sub
scas
add
sbbw
adc
jp
mov
cmpl
adc
cmpsl
inc
pop
push
movlps
dec
or
mov
pop
gs
xor
test
add
mov
mov
inc
lods
mov
ret
pop
push
pop
pop
adc
ss
mov
and
jns
daa
xchg
fsubs
adc
or
jmp
mov
mov
jp
sarl
add
pushf
lock
mov
push
shlb
scas
ret
and
dec
scas
sbb
jecxz
lret
fiadds
loop
cs
and
je
fisubrs
std
jmp
inc
mov
daa
or
clc
pop
addb
les
add
jp
leave
mov
push
lods
inc
sbb
lret
dec
movsb
adc
test
pop
pop
lods
or
inc
dec
jp
orl
sbb
adc
inc
iret
sub
movsb
dec
inc
pop
mov
xlat
xchg
scas
sbbl
movsb
sbb
in
ljmp
pop
aaa
adc
and
mov
addr16
jl
push
mov
add
gs
jo
inc
outsb
lret
popa
adc
add
add
xchg
xchg
add
mov
loope
pop
scas
outsb
dec
push
pop
jp
jnp
loopne
sub
scas
dec
lds
flds
push
push
jnp
ficompl
mov
and
jmp
cwtl
ret
fst
data16
cli
lcall
fdivs
data16
adc
mov
mov
loopne
push
lea
daa
adc
adc
mov
aad
in
into
and
sbb
cs
cmpl
dec
inc
shrb
mov
jo
or
sub
pop
push
jbe
adc
or
ret
mov
call
cmpsl
cmp
push
in
or
loope
adc
sbb
andl
inc
movsb
rorb
subb
fimuls
push
mov
jecxz
daa
out
add
pop
push
ret
lea
pop
pop
flds
and
int
mov
xchg
push
subl
or
cmp
adc
add
es
sbb
adc
cmp
xchg
push
sbb
cli
enter
test
adc
add
mov
mov
lea
subl
dec
pop
push
das
test
mov
fld
mov
aad
mov
sbb
add
pop
cmp
or
jb
add
cwtl
js
out
rorl
je
sub
repz
add
mov
add
outsl
jnp
dec
sbb
inc
out
or
jl
es
xor
and
inc
push
leave
in
daa
lods
mov
ss
lods
fisttps
addb
sbb
pop
xchg
aas
shlb
jle
ret
scas
add
mov
push
out
stos
jmp
push
dec
push
gs
loopne
dec
and
aaa
mov
cmc
add
fbld
sarb
add
xor
fists
dec
push
das
push
lock
xor
div
fildl
sti
icebp
and
mov
cli
add
aad
aaa
ret
in
mov
or
call
int3
add
fcmove
jg
out
or
jbe
cmp
mov
and
add
je
sahf
test
mov
push
pushf
test
sub
pop
dec
push
mov
in
push
cmp
in
scas
je
mov
pop
sbb
push
xchg
xor
cmp
cwtl
outsl
into
jg
sbb
add
sarl
jl
rcrl
sbb
popf
and
cwtl
bound
shrl
sub
sahf
cmpsl
push
data16
cmp
xchg
pushf
ljmp
inc
inc
or
lock
stos
pusha
movl
pop
ljmp
or
push
ret
xchg
add
inc
pop
addr16
call
sbb
loope
pop
out
movsb
add
inc
mov
add
fcoms
iret
mov
rorb
loopne
mov
hlt
aaa
sbb
or
cmp
test
fcoml
push
add
ss
mov
jp
add
call
getsec
pop
and
adc
cmpb
and
test
imul
push
ret
imul
cltd
mov
fdivrl
bound
xor
inc
and
dec
outsb
idivb
adc
addb
adc
xor
cmp
movsl
aas
and
movsl
rclb
addb
pop
test
mov
push
fidivrs
add
xor
add
add
sub
xchg
pop
add
bound
cld
sti
test
mov
repnz
gs
fcomp
xor
test
nop
rcrb
neg
xor
aam
mov
stos
es
lret
and
sbb
push
leave
ja
hlt
inc
lret
fstpl
mov
pop
dec
mov
push
rolb
mov
cmp
push
jge
adc
mov
cwtl
shll
add
inc
mov
inc
inc
mov
add
push
dec
mov
push
jp
aam
adc
cwtl
sub
mov
repnz
vmptrst
lods
jle
sarl
sbb
or
or
aad
xor
fsubrl
rolb
lea
pop
xor
dec
daa
aad
add
pop
aam
cmc
and
cmp
jo
mov
testb
mov
add
fbld
cmp
push
pop
jg
and
pop
xor
fwait
jle
inc
add
shll
sbbb
cwtl
repnz
jbe
add
js
and
or
rorb
sbb
inc
mov
lock
xchg
out
imul
or
xor
ficompl
mov
xchg
adc
adc
rolb
sbb
mov
pop
add
mov
dec
cltd
or
add
arpl
stos
add
jns
pop
pop
xor
mov
test
insl
lahf
cmp
int3
push
arpl
add
adc
or
jmp
or
lret
add
ds
iret
jecxz
pop
add
add
into
flds
cmp
sbb
and
es
mov
jbe
div
xor
outsb
jge
dec
add
repnz
mov
enter
test
lods
cltd
xadd
push
push
xor
in
or
ficomps
jbe
js
push
push
shlb
xor
repnz
xor
mov
movsl
adc
xor
pop
add
sarb
in
dec
call
daa
jbe
add
mov
aaa
add
inc
inc
jae
add
fildll
adc
into
add
pusha
sbb
outsb
cmpl
sbb
ss
push
add
out
cwtl
cmp
inc
push
pop
inc
imul
xor
add
cmpsl
mov
orl
cmp
arpl
xchg
lds
scas
lock
cltd
sub
add
testb
sahf
inc
push
jbe
in
js
xor
adc
imul
inc
scas
jno
iret
sbb
mov
rcrb
sbb
repnz
fs
add
scas
int3
mov
inc
add
mov
push
data16
call
dec
rcrl
subl
in
aad
push
mov
xor
add
lahf
scas
jg
adc
add
nop
imul
jmp
daa
add
dec
or
jno
pop
addb
std
sar
xor
mov
add
and
out
roll
cmp
movsb
aas
and
addl
inc
stos
pop
loope
hlt
xchg
stc
xor
add
test
ror
xchg
popl
scas
jge
push
mov
push
iret
aam
shlb
pop
mov
test
mov
dec
add
into
subl
add
cld
out
and
mov
push
lods
fcomps
jg
xchg
out
js
lock
mov
add
pop
pop
movsb
jmp
add
movsl
jge
jo
xor
inc
xor
std
add
pusha
aad
lds
sahf
xchg
add
loope
xchg
push
add
or
daa
scas
push
pop
add
test
cwtl
addr16
ret
into
xchg
orl
inc
mov
pop
rcrb
add
and
adc
add
jle
sub
cmp
sbb
push
cld
sbb
add
fwait
cli
inc
je
mov
sbb
test
xor
cmp
and
imul
fiaddl
push
fmul
xlat
jae
in
add
adc
add
ss
das
pop
cmp
jle
mov
xchg
xchg
mov
std
je
lcall
jl
cmp
dec
lock
sbbb
add
mov
dec
xor
sub
jp
xchg
add
mov
rcll
loopne
loope
shrl
xor
mov
and
xor
xchg
scas
adc
add
mov
js
and
push
add
dec
cmp
gs
inc
iret
pop
push
adc
roll
aad
jl
jp
into
mov
aas
pop
jnp
mov
mov
fsubrs
aas
shrb
scas
lds
inc
inc
mov
shl
mov
sahf
and
adc
sub
mov
loop
int
xchg
dec
pop
clc
stos
enter
sub
xchg
push
inc
mov
fs
and
or
add
into
scas
or
pushf
or
outsb
inc
sbb
jge
ds
fcmovb
jo
push
add
pop
xchg
fcomi
add
shlb
fs
fsubrl
pop
adc
ds
sub
push
aas
mov
mov
rsm
lret
popf
jp
cmp
out
std
cmpl
test
addl
jg
pop
divl
xorb
aad
xchg
mov
testb
fistps
and
sub
sub
adc
xlat
dec
setb
fdivs
clc
inc
cmc
add
popa
mov
add
ret
adc
add
push
cwtl
inc
in
in
rcrb
and
cmp
add
add
cli
or
insb
jge
lret
jbe
rcll
or
movsb
adc
mov
ret
inc
push
xor
push
pop
icebp
cmp
dec
sti
popa
add
hlt
cld
add
jae
imul
pop
sub
xchg
add
es
mov
xchg
add
fnsave
daa
mov
add
sbb
bound
add
jl
sti
inc
cmp
and
cmp
fdiv
pop
add
xchg
xchg
stos
jae
add
add
jnp
test
or
add
jecxz
adc
addr16
adc
jo
es
test
inc
mov
mov
lock
dec
or
mov
fsubrl
add
clc
ret
es
mov
jmp
inc
shlb
ss
add
lds
push
jge
lods
scas
add
das
cmpsb
xor
repz
stc
pushf
mov
stos
and
and
xor
add
adc
mov
inc
sbbb
cmovl
xchg
jo
xor
jne
mov
movsb
dec
inc
aam
xchg
scas
ret
push
sub
test
or
iret
xchg
add
mov
add
ja
test
jp
push
jmp
add
adc
rcll
inc
cmp
cmp
dec
adc
mov
sub
gs
mov
cs
shlb
sub
jns
push
jae
out
lret
mov
lds
es
bound
sub
movsb
or
and
and
bound
insb
dec
add
xchg
test
inc
or
lods
mov
xchg
lods
mov
mov
jecxz
cmp
or
pop
jnp
push
ret
xor
lods
xorb
xor
dec
sub
push
adc
roll
push
arpl
xlat
sbb
gs
xlat
xchg
cmp
add
sub
and
mov
mov
outsb
aam
stc
rol
jp
sub
fistps
js
and
push
sbb
xchg
adc
lret
dec
in
xchg
stos
inc
push
cmp
cmp
add
jg
push
pusha
std
inc
pop
sbb
fdivrs
mov
rcl
jbe
ds
xchg
xchg
outsl
int
in
jp
stc
adc
mov
sbb
mov
roll
pusha
inc
out
adc
pop
adc
cmp
or
fistl
jo
mov
inc
sub
test
jne
sbb
mov
pusha
pop
adc
or
ret
xor
mov
in
cmp
mov
les
loope
dec
cmp
add
cmp
mov
adc
ljmp
cmp
inc
cmp
shl
lea
pushf
or
roll
mov
sub
add
mov
cmp
call
inc
push
push
inc
sbb
rcr
xchg
pop
add
cs
add
gs
adc
dec
push
or
mov
inc
ja
subb
leave
andb
adc
mov
icebp
and
faddl
fldl
imul
dec
add
xchg
add
or
push
ret
imul
xor
pop
pop
stos
pop
add
incb
pop
add
add
adcb
test
sub
iret
adc
je
test
scas
sti
add
es
mov
iret
sub
fildl
lret
inc
xchg
xchg
enter
inc
lock
jns
add
inc
icebp
and
inc
add
fistpl
scas
jne
pop
call
inc
mov
push
mov
js
or
pop
mov
add
sub
mov
inc
and
jno
data16
cmp
mov
shrl
sub
add
push
out
sbb
inc
push
leave
inc
test
shrl
dec
sbb
sub
and
sub
add
scas
mov
inc
xchg
push
sub
std
jle
rorb
addr16
out
add
dec
daa
test
mov
mov
mov
lea
inc
cmpl
ja
push
or
jge
add
pusha
mov
jp
pop
jl
out
cmpsb
sub
jno
or
pop
mov
loope
insl
cmp
xorb
xor
jno
clc
lods
xchg
cmp
and
mov
cli
add
movsb
and
add
xchg
arpl
sarl
and
lock
mov
cmp
popl
lods
cmp
xor
leave
cmpl
test
pop
sarb
cmp
ret
inc
adc
dec
mov
cwtl
cmpb
loopne
mov
movsl
and
mov
out
or
push
cmp
adc
lcall
sbb
jl
bound
jmp
adc
pop
sub
les
cmp
xchg
and
jp
test
out
xor
aas
cmp
cmc
xchg
xorl
push
dec
pusha
pop
sbb
sarl
lock
add
mov
imull
sub
dec
xchg
push
pusha
popf
movsl
sti
and
adc
adc
mov
inc
loop
scas
push
or
push
loopne
pop
mov
bound
popa
je
mov
inc
andb
int
inc
adc
push
mov
clc
dec
imul
cmpsl
sbb
test
inc
sbb
popa
dec
idivl
clc
std
fwait
hlt
sub
lock
les
cmp
pushf
sub
sahf
add
push
fbld
mov
ss
push
and
jmp
push
addr16
mov
add
fistpll
and
fisubs
sbb
sarl
inc
sbb
test
cmpb
in
add
or
sbb
sbb
pop
pusha
mov
and
es
push
adc
push
cltd
dec
mov
cld
adc
into
pop
jns
mov
and
lret
jge
and
pop
outsl
adc
imul
mov
jmp
repnz
xor
insb
in
dec
sub
test
int
inc
fs
xor
dec
adc
pop
cmp
xor
imul
jo
sbb
jle
incb
mov
movsb
roll
jp
push
xchg
jne
push
mov
xchg
addl
add
lahf
call
movsl
lcall
lret
pop
or
mov
cwtl
and
imul
xor
add
cmpsb
jae
stos
stos
test
mov
movhps
push
ret
dec
inc
jp
pop
lret
dec
and
mov
jns
cld
sbb
push
test
and
add
std
adc
scas
sbb
or
push
fs
push
or
sahf
cltd
add
push
jp
jge
idiv
xor
lock
cmp
inc
dec
lods
sbb
packuswb
mov
mov
scas
dec
push
lods
rorb
lds
sbb
es
mov
pop
sbb
out
jne
push
adc
loopew
adcb
clc
push
push
sbb
or
scas
imul
push
out
rclb
loope
add
lods
popf
push
incl
sbb
inc
cmp
sbbl
mov
movl
or
nop
cmp
xchg
sbb
iret
lock
mov
sub
sti
add
mov
adc
xor
cmp
lahf
lret
les
fnstsw
je
fdivp
bound
fxtract
sbb
call
sbb
adc
mov
push
mov
imul
pop
frstor
popf
cmp
jp
and
scas
add
iret
add
sti
or
jne
lcall
xor
in
pop
xchg
int3
inc
sub
sbb
push
sub
inc
inc
in
jbe
je
mov
bound
aam
test
pop
outsb
test
test
nop
ljmp
push
add
dec
or
mov
fsubl
lock
jge
ds
and
mov
mov
sbb
or
addr16
mov
lods
out
xchg
std
push
cmp
push
flds
cmpb
fidivrs
pop
xor
jb
push
lods
cmp
sub
jnp
cmp
xchg
aas
xor
dec
mov
lcall
mov
mov
jns
jnp
sbb
add
aam
add
imulb
inc
dec
sahf
xlat
cmpsl
out
mov
xchg
inc
in
sub
das
or
int
xchg
adc
jl
mov
sahf
and
andb
in
add
test
or
inc
jp
aaa
jp
cmpsb
or
xchg
jno
and
mov
push
jge
push
jne
xchg
pop
cwtl
push
jp
xchg
xor
cmp
mov
je
scas
add
pop
mov
fdivrl
push
gs
ljmp
adc
imul
inc
adc
add
rclb
imulb
xchg
adc
mov
mov
in
add
dec
push
data16
xchg
and
stos
add
roll
roll
sbb
inc
cmpsl
mov
adc
xor
mov
lock
clc
inc
inc
jp
push
and
icebp
or
fstl
scas
inc
cmp
sub
call
mov
xor
repz
mov
and
adc
scas
loop
jecxz
aad
push
and
scas
mov
xor
push
pop
push
sub
test
adc
cli
mov
and
push
sbb
jmp
pop
jp
inc
jno
add
shll
dec
dec
ret
addb
adc
rcrb
mov
js
and
inc
cmp
mov
add
dec
jle
test
pusha
mov
sahf
sub
ds
fisubs
inc
insl
xchg
mov
mov
cmp
or
or
push
clc
in
in
jge
or
dec
and
mov
jg
jp
add
aaa
or
jne
bound
push
adc
ficoms
mov
inc
push
sti
sbb
sub
fimuls
adc
push
mov
mov
es
popf
xchg
fdiv
xlat
push
pusha
xchg
jo
mov
ret
mov
mov
sti
adc
push
leave
mov
add
mov
and
xchg
mov
sub
xor
cmp
mov
cmp
cmp
adc
push
dec
idiv
xor
dec
ret
js
or
push
lcall
xchg
add
jns
push
inc
xor
cmp
or
rcrl
fmuls
jp
jno
mov
lds
adc
cwtl
movsb
mov
push
popf
sbb
pop
mov
add
lock
xchg
push
adcl
scas
inc
int
movsb
fiadds
xchg
sbb
fadds
fsubl
inc
mov
jge
mov
inc
rorl
or
movsl
nop
pop
push
das
lahf
orl
ret
push
sbb
fsts
cmpb
stos
sub
aas
adc
scas
push
add
mov
push
dec
or
call
sub
cltd
mov
xor
inc
push
xchg
sbb
mov
add
mov
daa
mov
mov
pop
in
mov
arpl
jg
stos
mov
mov
jg
sbb
cld
add
inc
ja
add
out
and
xlat
andl
lods
les
inc
arpl
jmp
popa
add
push
xchg
jp
fwait
mov
pop
or
je
adc
dec
loope
cmpsb
xor
jmp
imul
sub
add
xor
shlb
add
cmpsb
xchg
push
or
push
mov
push
jae
les
out
push
ret
test
and
popf
les
cmpsl
mov
jecxz
push
mov
push
addl
mov
xchg
out
add
and
and
les
push
dec
inc
das
lret
rcll
test
jle
call
cmp
cltd
push
lods
add
mov
les
and
push
push
movsl
pop
das
sarb
and
pop
arpl
lahf
popf
aad
adc
clc
fcomp
cmc
mov
fcmovnb
sub
xchg
cld
cmp
int
cmp
sbb
add
nop
xchg
push
xor
and
iret
xorb
add
cmpsb
stos
adc
mov
movsl
enter
fcomip
cmp
add
adc
dec
pop
cmpl
loopne
lock
adc
aad
fiaddl
mov
dec
and
daa
xor
dec
hlt
mov
pop
sahf
cmp
push
roll
jle
nop
mov
add
out
mov
add
xchg
mull
cltd
add
inc
inc
or
add
push
test
fidivs
cmp
mov
pop
pusha
lea
inc
push
mov
in
mov
xchg
add
stc
pop
nop
mov
leave
lret
pop
add
mov
mov
dec
push
rorb
sti
loopne
in
pop
mov
cmp
pop
sbb
ja
pop
pusha
mov
add
call
sbb
push
pop
out
push
hlt
and
mov
mov
jo
cld
sub
scas
cmp
std
popa
in
or
or
loop
movsb
stos
mov
xor
add
adc
ret
dec
ja
inc
xlat
mulb
dec
pop
dec
sarb
pop
xor
pop
add
jle
mov
icebp
and
frstor
call
jge
add
aaa
dec
dec
pcmpgtd
fwait
jno
xchg
ja
or
jb
add
adc
scas
and
ret
sti
add
jne
lds
cmpsb
add
cli
xchg
lods
pop
lldt
inc
sub
cwtl
daa
add
lahf
pushf
adc
jo
pop
mov
popf
gs
cmp
fmuls
cmp
jbe
out
mov
stc
sub
add
incl
jg
cmpsl
ficomps
or
loopne
addl
push
cmp
cwtl
jbe
lret
aad
mov
into
push
popa
cmp
shlb
or
das
insb
test
add
ja
dec
sbb
mov
mov
aaa
mov
lock
jae,pn
insb
add
jmp
xor
mov
and
add
fbstp
sbb
les
shld
and
test
add
je
and
mov
add
pusha
out
push
add
push
add
pop
adc
inc
addl
xchg
cmp
ror
mov
repz
pop
jmp
test
cli
add
xor
sub
stos
fmull
xchg
sub
addr16
add
in
pop
mov
add
sahf
pop
mov
mov
and
mov
xchg
add
cmp
inc
rol
push
bound
jb
popa
xor
cmp
jmp
cmpl
add
jnp
repnz
lds
mov
sub
lock
jle
ret
add
jbe
sbb
rcll
lea
lds
pop
aam
inc
add
sub
xor
dec
fsubrl
call
adcl
xchg
data16
jo
mov
in
roll
xchg
pop
mov
mov
inc
cmp
enter
adc
es
xchg
cmp
lret
or
mov
out
dec
or
loop
or
pop
pop
jb
inc
push
fmuls
push
xchg
xchg
daa
and
adc
mov
mov
jl
push
outsl
pop
mov
and
add
pop
imul
lds
xchg
mov
daa
jp
in
jmp
jl
out
xchg
xchg
inc
sbb
push
cld
inc
mov
and
xor
dec
movsl
scas
jnp
adcb
imul
dec
bound
sub
ljmp
std
pop
pop
push
adc
and
cmpb
js
sbb
xchg
insl
pop
xchg
test
adc
loopne
mov
rolb
xor
shrl
sub
sub
rcr
xchg
mov
or
pop
sbb
inc
test
in
test
add
mov
sarl
shl
movl
outsl
test
jo
orl
xlat
inc
xchg
push
test
add
push
or
mov
cwtl
lds
sub
lret
sbb
test
or
mov
mov
mov
out
sub
sbb
xchg
dec
sub
xor
imul
and
ret
push
sub
fistpll
icebp
xchg
daa
sbb
mov
pop
jbe
jns
cmp
cmpsb
mov
jp
pop
das
cmp
or
aam
inc
decb
dec
sub
fwait
test
and
outsl
scas
mov
or
vpavgw
ret
mov
arpl
jp
mov
mov
mov
out
pop
and
test
and
dec
fsubr
and
and
inc
pop
mov
aaa
shl
jo
andl
xorl
clc
sbb
aam
movsb
add
in
jbe
or
pop
jne
or
cmp
jo
lret
push
xor
adc
sub
sbb
lods
mov
adc
addl
push
pop
aaa
outsb
jl
and
test
cmp
inc
cmpsb
pop
xor
add
jmp
mov
mov
popf
loop
out
daa
sbb
xchg
jno
dec
push
mov
out
dec
outsb
test
or
add
pop
arpl
addr16
xor
mov
or
addb
stc
xlat
mov
sarl
mov
xchg
repnz
daa
xchg
aam
movsb
test
addr16
add
shl
arpl
mov
dec
push
ret
loope
shl
mov
movsb
flds
dec
inc
inc
mov
push
jp
orl
adc
test
adc
xchg
ja
and
outsl
pop
mov
adc
jle
inc
jp
pop
shlb
jno
cmp
call
xor
ret
out
jg
test
and
in
adc
add
movsb
xor
popf
lret
jmp
pushf
stos
xor
push
dec
lcall
add
mov
in
stos
xor
cmpsb
jp
and
outsl
shll
lods
cmp
adc
jo
lods
xor
and
sub
stos
sahf
ficomps
dec
sbb
movsl
pusha
test
dec
incl
sti
in
or
jmp
and
subb
aaa
imul
hlt
popa
cmp
sub
sbb
rcl
mov
xchg
inc
jae
and
push
and
jl
or
pop
push
push
or
iret
push
daa
sbb
cs
rol
bound
std
js
jl
lahf
shlb
or
mov
xor
fcomip
daa
push
cmp
js
dec
add
adc
cmp
cmc
orl
ljmp
xor
sbb
in
pusha
mov
mov
pop
inc
adc
add
in
add
fs
cmc
xchg
pusha
push
imul
andl
or
fisttps
jbe
cmp
pop
push
std
pop
loopne
and
xor
adc
jo
cmp
push
push
add
push
aad
jno
adc
je
dec
shrl
repnz
push
sub
adc
jp
mov
ljmp
dec
add
inc
cmpsb
cmpsb
cltd
shlb
popa
fwait
xor
and
jl
es
aaa
daa
mov
cwtl
sarb
cwtl
fadds
js
inc
push
movsl
sub
cmp
cmp
xchg
gs
jg
sbb
cld
and
add
jbe
jo
inc
jle
iret
xchg
jbe
xchg
adc
inc
and
test
jge
pop
es
add
lea
mov
push
std
sbb
push
sahf
push
jge
ljmp
xlat
xchg
mov
jno
sub
add
and
out
pop
out
jnp
sub
rolb
push
and
inc
into
xor
andb
pop
stos
lcall
sbb
and
xchg
jo
jnp
loopne
or
cmpl
std
adc
pusha
jge
cmp
rcrl
jl
dec
sbb
daa
loopne
mov
inc
and
shrl
mov
push
stc
or
scas
inc
enter
push
pop
adc
lahf
fsubp
inc
jmp
movsb
or
scas
adc
fs
pop
mov
jp
pop
jno
ret
data16
subb
mov
clc
scas
jne
out
adc
icebp
xchg
push
stos
cmp
fdivrl
in
popf
inc
sbb
push
cli
lea
out
inc
dec
mov
adc
dec
pushf
add
add
or
addr16
scas
xor
mov
lds
test
call
push
sub
inc
aaa
int3
mov
mov
lods
lds
adc
xchg
push
leave
movsl
adc
psadbw
loope
push
xor
mov
jne
sbb
push
xchg
sub
arpl
pusha
iret
ljmp
int
out
xchg
inc
shr
push
clc
addl
ret
inc
mov
out
lcall
jecxz
insl
dec
sub
hlt
bound
jno
outsl
push
aam
lods
imul
bound
cmp
inc
xor
add
hlt
xchg
cmp
add
push
jb
jp
dec
xorl
in
fisubl
push
mov
sbb
mov
pop
jp
aad
lods
pusha
dec
lret
mov
dec
inc
cmp
inc
xor
lcall
mov
mov
mov
mov
jle
xchg
ds
xor
lcall
jecxz
and
jle
insb
mov
push
xor
lret
jp
xchg
lret
xor
mov
dec
xor
inc
dec
lods
ds
jp
xchg
dec
jbe
in
mov
sbb
jg
and
add
cmp
jns
cwtl
ret
and
mov
or
add
and
sbb
cmc
sbb
jp
popa
and
jg
shll
scas
daa
push
cmp
aam
mov
mov
in
imul
and
rcrb
out
push
mov
lret
add
shlb
dec
dec
sub
xchg
arpl
fs
jmp
mov
scas
dec
push
adc
ret
rcrl
popa
xor
add
xchg
cld
scas
jge
mov
fbstp
xor
push
negl
xor
xor
xor
push
and
mov
mov
xlat
ss
jp
or
pop
or
inc
sbb
arpl
xchg
roll
and
ret
loop
add
not
mov
inc
lahf
ss
daa
mov
and
sbb
xchg
daa
cmp
leave
lret
inc
fbstp
dec
cmp
sbb
mov
xchg
jo
lahf
mov
push
dec
add
cmpl
or
inc
adcl
and
stos
pop
in
sbb
sub
jbe
arpl
jge
iret
rcrb
xchg
fwait
sahf
int
push
or
and
cmpsb
push
cmp
mov
scas
test
mov
dec
imul
add
xor
xor
and
lcall
rcrl
out
mov
imul
mov
mov
mov
xchg
and
push
in
js
pop
inc
jp
jne
bound
ja
cmp
jle
in
lods
outsb
mov
mov
hlt
cmp
push
inc
jbe
stos
mov
arpl
jecxz
cli
sbb
push
adc
sub
cwtl
lods
cmp
lahf
jge
jp
cmp
dec
inc
or
lods
pop
jno
insl
lods
push
aaa
cs
and
in
pop
push
shlb
popa
loope
out
pop
int3
fldenv
and
sarb
nop
lock
and
sbb
and
inc
scas
pop
pop
sbb
inc
mov
mov
lods
iret
movsl
or
add
fstl
adc
inc
out
cs
dec
mov
nop
adc
sbb
sub
add
sub
cmp
es
out
lds
pop
cmpb
add
bound
enter
xor
xor
cmp
lahf
or
push
sbb
pop
xlat
subl
pop
jne
outsb
test
jmp
cmc
pusha
jbe
xor
or
or
adc
lahf
sbb
cltd
mov
jb
into
or
ja
add
jmp
jl
les
test
nop
or
insl
sub
sub
out
push
push
fcmovu
sub
jb
roll
loop
icebp
jle
mov
add
aaa
test
xor
shll
in
bound
mov
inc
pop
pop
pop
cmp
loopne
jmp
test
clc
dec
dec
jl
sbb
stos
sub
invd
repnz
mov
xchg
xchg
loopne
ss
mov
mov
cmpsl
gs
rcrb
out
jge
adc
popa
inc
pop
add
test
fisttpll
cmp
push
inc
popf
mov
sub
pop
dec
neg
adc
add
xchg
xchg
mov
inc
pop
cmpsl
add
jle
dec
sub
sti
call
leave
aaa
inc
in
out
xor
dec
shrl
fsub
add
xchg
bound
push
dec
dec
sub
xor
out
add
cld
mov
pop
add
xlat
int
xchg
out
bound
leave
stos
mov
add
adc
repz
ja
jne
push
add
mov
jecxz
mov
xlat
add
aam
dec
add
test
cmp
clc
add
cmp
pop
sub
sbb
xchg
out
out
repnz
xor
faddl
inc
pop
jecxz
sbb
adc
test
add
push
cs
pop
add
scas
xor
outsb
iret
push
xchg
ja
sub
dec
xor
push
int
lock
sbb
xchg
rolb
icebp
pop
cli
add
repnz
add
mov
dec
repz
or
loopne
pushf
dec
push
mov
clc
inc
adc
inc
in
nop
and
sub
test
shll
sahf
aad
repz
pop
add
jnp
lods
sbb
sub
xchg
incl
cmp
inc
jle
test
pop
fstl
add
xor
lods
jecxz
add
xor
add
jl
movsb
dec
call
jp
pop
hlt
notl
cmp
pop
mov
add
sub
mov
sbb
inc
push
inc
pop
jecxz
cmp
pop
loopne
add
cmp
jp
cmp
lret
jg
into
js
outsb
mov
shll
aas
addr16
xlat
xchg
sub
push
sub
xor
repnz
notl
and
aam
test
shll
hlt
nop
sbb
sbb
inc
les
mov
jno
push
pop
stc
xor
pop
iret
inc
xor
fimuls
push
stc
or
test
cmp
inc
les
pop
std
xor
xor
fistps
lds
test
mov
add
stc
lods
testb
and
inc
sahf
aaa
jmp
call
add
das
out
mov
ja
mov
add
cmovae
int3
mov
pop
inc
mov
fisttpl
addb
xchg
nop
ucomiss
rorb
mov
cwtl
xor
and
roll
shll
xchg
inc
insb
mov
ds
fcompl
test
into
cld
movsl
inc
daa
rcll
dec
xor
clc
sbbb
outsb
test
inc
cli
sbb
add
int
int3
leave
mov
popf
loopne
dec
adc
incb
test
push
cmp
mov
into
push
and
ret
imul
jne
jmp
int
out
pop
fcmovne
add
cmpsl
test
jle
sbb
add
pusha
clc
add
and
mov
push
push
push
stos
shl
pop
and
test
jns
cmp
shrl
rclb
je
neg
fistps
pop
lea
in
mov
cmp
into
mov
cmc
and
mov
add
int3
adc
jge
xchg
inc
xchg
cmp
popa
add
jp
out
pop
sub
push
leave
enter
cs
les
mov
fidivs
dec
push
and
iret
mov
add
or
add
jecxz
dec
add
pop
mov
and
cmp
jb
sbb
ds
int
bound
mov
jp
add
jg
rolb
cmpsb
test
and
dec
add
pop
cmc
loope
pop
mov
sub
int
cli
idivl
mov
inc
orl
push
shl
add
out
aam
xchg
dec
stos
pop
and
mov
lods
pushf
movsb
inc
dec
lahf
or
push
jae
aaa
sbb
mov
adc
movsb
add
jecxz
sub
inc
sti
je
xchg
mov
jle
push
sub
push
pop
outsl
sub
sub
sbb
lods
mov
pop
lcall
sub
add
sahf
xchg
dec
dec
shlb
data16
adcb
movb
insb
lret
xor
fwait
xor
iret
dec
xor
push
test
inc
scas
pop
cs
xchg
mov
xchg
in
jmp
xor
or
dec
movb
jne
int
and
mov
or
xor
sbb
pop
xchg
inc
fcoms
add
cmpsl
cmp
cvttps2pi
mov
int3
pop
cwtl
jecxz
mov
test
dec
scas
inc
sbb
cmp
push
into
jns
ret
cli
inc
mov
stc
cmp
xchg
or
sbb
pop
inc
int3
inc
out
into
xor
bnd
sbb
mov
mov
int
hlt
scas
fimuls
and
dec
push
add
sub
pusha
add
dec
loopne
jle
rcrb
add
fcompl
addl
mov
jmp
sub
in
sti
mov
jnp
push
cli
aam
mov
mov
sub
cmp
xor
sarl
pop
ret
xorl
iret
xchg
and
ljmp
pop
negb
add
std
cmp
mov
sbb
loopne
insb
push
mov
subl
add
mov
jge
fsubrl
mov
add
jne
dec
add
cmpsl
push
or
inc
sbb
push
jbe
cmp
add
push
mov
popa
add
sbb
push
adc
fiadds
test
or
cmpsl
add
imul
lcall
stos
jp
add
xlat
jmp
call
js
inc
xchg
add
daa
mov
and
dec
ret
add
jecxz
cmp
cli
push
lods
add
imul
mov
adc
push
movsb
or
push
int
mov
mov
cmp
fldcw
add
push
popf
mov
sar
and
cmp
lahf
jg
and
or
daa
jae
inc
push
xor
mov
pop
add
pop
mov
add
xor
add
cmp
roll
hlt
cltd
adc
mov
add
outsb
jae
push
push
mov
ja
xchg
pop
rclb
and
jbe
inc
mov
add
nop
stos
es
jle
mov
mov
push
in
xlat
add
lock
xor
dec
cwtl
aaa
mov
sbb
roll
push
movsl
jl
fwait
sub
mov
int3
test
aas
fcmove
sub
inc
inc
mov
jbe
mov
mov
jg
mov
mov
add
loope
add
scas
cmpl
stos
repz
xor
ret
iret
sarl
or
popa
fistpl
adc
addr16
pop
inc
das
je
stos
js
and
xor
in
push
and
insb
add
fildll
jle
call
xor
mov
xchg
inc
jl
in
je
ljmp
sub
add
roll
jg
test
mov
shlb
pop
push
or
test
adc
fcoml
add
sub
dec
mov
sbb
cmp
subl
push
pusha
xchg
ss
jnp
stos
lods
cmp
push
mov
lret
aaa
and
loope
pusha
or
add
mov
repz
push
in
push
rol
mov
dec
jne
cmp
dec
inc
mov
xor
out
cld
shll
jecxz
add
dec
xor
pop
mov
loopne
pop
lcall
leave
inc
sbb
test
push
sub
add
sbb
cmp
addb
arpl
xor
or
and
jmp
and
pushf
add
adc
pop
ja
stc
lods
and
pop
das
shrb
aaa
xor
jno
cmp
adc
or
ficompl
and
xchg
push
pop
xor
adc
pop
adc
ret
push
into
and
int3
push
xchg
mov
add
pop
in
loopne
les
mov
ja
add
scas
in
cmp
xchg
pop
fadds
jnp
rclb
mov
das
add
push
loop
int
outsb
rol
sub
adc
pop
mov
push
mov
es
add
and
cmp
dec
dec
shrl
add
mov
sbb
jl
adc
cmpsl
sahf
insl
or
inc
rorl
xchg
sub
dec
mov
add
add
add
addb
and
cmc
pop
sub
jl
jo
or
sbb
mov
sub
nop
mov
or
lret
sub
add
mov
je
add
xlat
adcb
and
adc
add
popa
add
inc
mov
orl
rcll
sub
sbb
mov
add
int
fisubrl
test
fidivrl
icebp
push
movb
jb
add
shlb
cmp
or
stos
add
ret
or
add
pop
mov
jl
fadds
loope
out
in
in
arpl
xlat
rclb
and
inc
add
imul
adcl
rolb
add
inc
ljmp
ret
scas
shrl
xchg
je
arpl
mov
add
pop
jae
cmc
icebp
sub
stos
negl
push
sahf
add
xor
cwtl
hlt
aad
adc
rolb
daa
push
cmpl
nop
and
sbb
dec
shll
add
pop
scas
add
sbb
movsl
pop
mov
fbld
je
cmp
add
negl
add
inc
cmc
mov
popa
dec
dec
cld
inc
inc
jmp
xchg
or
cmp
add
pop
jo
sti
cmc
mov
ljmp
imul
xchg
andb
loopne
pop
or
xor
into
add
xchg
push
add
pop
imul
loope
adc
add
adc
shlb
out
aad
jge
lock
lret
mov
cmp
inc
xchg
cmpb
add
movsl
ret
stos
fld
push
imul
jmp
xchg
int
cmp
adc
lahf
inc
vmovups
push
push
sbb
sbb
sbb
test
int
sbb
adc
loopne
and
push
inc
cmp
sub
iret
loope
das
jae
sbb
add
and
jl
out
mov
jo
add
test
inc
inc
int3
push
mov
and
xchg
fdivl
out
sbb
or
in
sub
jne
xor
pop
sbb
popa
mov
xor
add
fstps
decl
sbb
dec
cmp
test
fiadds
cmp
mov
xor
xchg
jge
xor
pop
fdivl
test
lcall
insb
mov
in
je
jns
test
jno
dec
fdiv
and
push
jae
shlb
movsl
xor
xchg
test
rolb
lock
imul
rorl
mov
outsb
sbb
leave
mov
ucomiss
and
rcrb
add
cmp
fiaddl
pop
es
les
loopne
add
pop
mov
ffree
add
jmp
jbe
sti
clc
adc
aam
insb
adc
mov
fistps
add
ljmp
insb
lahf
pop
std
ret
cmp
mov
dec
push
sahf
or
mov
and
stos
inc
xchg
into
adc
add
mov
loop
sbb
cmp
push
stc
push
outsb
pop
jmp
cmc
add
inc
cmp
and
sub
int
mov
mov
add
out
in
xchg
mov
js
fwait
inc
test
aam
andl
add
sub
fisubrs
jl
jae
jno
pop
mull
add
sub
movsb
sbb
add
scas
loopne
pop
xor
ret
xchg
pop
sub
mov
add
cmp
jmp
addl
orl
or
adc
mov
outsl
jbe
pop
leave
iret
xor
jno
pop
mov
stos
inc
cmp
mov
je
lret
ss
mov
into
rclb
test
adc
xor
roll
sbb
add
and
and
mov
sub
and
das
outsb
sahf
pop
push
ror
mov
adc
sub
orl
jmp
jne
cmp
aas
xlat
cmp
dec
les
flds
sar
dec
cmpsb
lock
lahf
test
or
xor
test
cmp
mov
add
sub
fcompl
adc
mov
pusha
add
rolb
mov
fbstp
xchg
dec
adc
dec
rorl
fwait
and
add
ret
movsb
add
push
pusha
and
push
adc
mov
push
and
xchg
push
cmp
scas
in
and
xchg
add
rorl
xchg
inc
hlt
aad
shl
lock
add
aaa
push
fiaddl
shrb
mov
pop
mov
mov
scas
cmp
jae
dec
xchg
ffree
xor
enter
fstpt
add
call
rcr
daa
cmp
add
add
mov
adc
sub
stos
push
out
fdivrs
pop
cmp
and
mov
mov
adc
pop
in
test
addr16
sbb
cwtl
sbb
out
lods
xchg
fs
sub
lret
pop
adc
sbb
mov
mov
mov
outsb
and
adc
icebp
add
mov
jle
push
pusha
out
and
pop
sub
xor
or
mov
jb
jge
subb
xchg
cmp
add
mov
loope
and
push
ljmp
cmp
fiaddl
pop
xor
inc
inc
cmp
jno
aas
insb
fs
mov
inc
dec
fxch
scas
sbb
xor
shl
jae
ss
cmp
push
add
lret
jge
add
inc
xchg
cmpsl
addb
inc
sub
call
lock
push
dec
jbe
push
ret
popf
cvtps2pd
add
mov
sub
add
fcompl
test
jne
stos
jmp
mov
mov
js
sub
mov
ljmp
iretw
arpl
lods
into
shrb
jle
repnz
jnp
dec
add
jae
mov
add
popa
aam
fs
xor
push
adc
roll
sub
cmp
jbe
push
popa
add
xchg
nop
mov
adc
ds
add
mov
sbb
repnz
pop
jno
fbstp
iret
movsb
sub
xor
pop
cmpsb
scas
loop
int3
out
negb
int
and
and
adc
shlb
jmp
push
pop
adc
fidivrs
int3
add
xor
rolb
pandn
jnp,pt
push
leave
push
pop
sbb
outsb
add
repz
jne
outsl
das
push
aas
mov
mov
xor
pop
inc
aam
cmp
mov
adc
push
pop
js
aaa
adc
daa
pop
fists
xor
mov
pusha
xchg
xchg
xchg
pop
xchg
jle
pop
add
cmp
xchg
mov
and
xor
xor
pop
dec
rorb
je
movsl
cmp
popa
pop
and
sbb
aas
inc
jnp
sub
cmp
cmp
mov
inc
xchg
jbe
and
fnstsw
ret
add
mov
pop
fildl
mov
mov
cmpb
xor
data16
add
faddl
cs
push
cli
stc
arpl
jno
out
dec
scas
pop
insb
aam
jmp
stc
scas
inc
add
push
ret
lds
push
iret
jecxz
shlb
or
adc
shrl
xor
loope
sub
or
push
cmp
and
push
aaa
inc
mov
testb
pop
imul
inc
lret
dec
push
std
rolb
out
les
xchg
adc
scas
adc
out
mov
sub
inc
mov
cmpb
push
add
sti
xchg
push
enter
mov
loope
mov
xor
inc
sar
xlat
ror
leave
es
xchg
outsb
mov
jle
cmp
sub
inc
rclb
xor
stos
cmp
lcall
add
iret
add
add
mov
pop
jl
roll
repz
lret
cmp
sbbb
out
subb
in
adc
into
or
push
es
push
sbb
add
cmp
mov
add
push
lcall
sbb
mov
sbb
cld
hlt
cmp
xor
or
xlat
sti
push
cli
mov
mov
xorb
add
add
adc
xchg
add
adc
jecxz
in
pop
add
sub
mov
mov
add
ss
aad
pop
into
pop
pusha
idivb
inc
test
add
cmp
mov
lds
cmp
in
inc
lahf
orl
sahf
outsl
inc
sub
xchg
pop
fwait
add
int3
mov
popf
lods
js
add
fs
ja
cmp
add
jns
sbb
in
rol
sbb
repz
cmp
subl
mov
or
mov
fldl
popa
cmp
sub
pop
adc
clc
fiaddl
adc
jp
ret
mov
movsb
outsb
inc
xchg
sti
mov
insl
cmp
int3
sbb
xchg
add
sbb
push
ds
inc
ret
cmpb
ja
scas
add
add
pusha
xor
mov
sbb
xor
pop
in
cmpsl
rcl
add
lret
out
pop
pop
add
push
add
cs
pop
loop
insb
inc
test
or
push
jno
xchg
jae
xlat
cmpsb
and
pusha
pop
lahf
sub
add
pop
cmp
add
dec
mov
push
xchg
and
ret
into
inc
dec
jle
xor
jmp
rcl
cmp
mov
inc
cltd
ja
push
repz
mov
add
sti
stc
jp
jmp
imul
jo
push
mov
and
fistpl
inc
dec
pop
in
dec
fstl
add
popa
mov
jae
adc
push
js
lds
pop
imul
test
inc
rorl
mov
sbb
daa
rcll
fucom
inc
sub
sub
jae
mov
xchg
clc
idiv
rcrb
adc
adc
add
mov
repnz
dec
iret
clc
sahf
xorb
inc
sbb
pop
or
lahf
int
je
std
mov
pop
xchg
cwtl
and
loopne
push
jo
or
addl
lods
ret
jl
daa
add
dec
push
xchg
add
xor
and
or
push
aam
push
dec
add
push
repz
xchg
add
repnz
adc
add
mov
add
insl
mov
sbb
add
jmp
popa
push
add
inc
les
inc
and
sub
lea
xor
fdivs
aas
cld
mov
sub
stos
add
ja
jle
inc
hlt
faddl
xor
filds
jp
jne
pop
xor
add
in
dec
pop
cmp
cmpsl
setge
jp
stc
scas
add
xor
sahf
pushf
ret
xlat
aas
sub
sbb
mov
loopne
inc
clc
push
outsb
cmp
cli
into
push
cmp
sbb
and
add
and
cmp
popl
into
jns
pop
jecxz
test
add
in
ja
lret
popf
add
inc
push
inc
rcr
sub
xchg
and
and
xchg
push
test
pop
jnp
sbb
sub
cmpsb
sbbb
add
xchg
aaa
subl
inc
testb
out
mov
mov
lret
int
fs
add
lret
mov
sub
daa
mov
inc
push
cmp
inc
roll
nop
sub
addr16
ret
das
xchg
adc
and
push
or
cmp
xor
rcll
mov
rcll
sbb
and
lahf
add
dec
imul
xchg
lahf
in
test
cltd
push
aaa
mov
add
adc
mov
scas
repz
mov
lock
mov
add
lret
in
les
add
cli
xchg
aad
sbb
add
clc
cmp
mov
pop
push
adc
bound
shl
pushw
aad
add
lahf
ficompl
add
ficomps
stos
repz
mov
inc
xor
jl
sarl
std
cmp
sub
ss
xor
xor
cmp
addl
pop
and
dec
ret
add
dec
xor
add
lods
imul
scas
push
dec
mov
jns
cmp
dec
add
push
lret
add
pop
and
and
ljmp
push
jmp
or
adc
nop
or
adc
cs
imul
add
outsl
add
mov
sub
adc
push
out
add
xor
push
xchg
or
inc
pop
add
xchg
jmp
and
or
sbb
and
inc
add
shl
adc
lret
add
test
push
call
push
inc
cmc
add
fidivrs
add
sub
cmpsb
adc
enter
pop
loope
cmc
cld
jl
cld
xor
rcrb
lahf
or
add
pushf
add
jmp
add
negl
cwtl
add
enter
insl
into
mov
and
sub
leave
sbb
sub
test
push
mov
leave
test
sbb
inc
inc
dec
mov
jmp
add
loope
jg
sub
in
add
inc
fdivs
xor
mov
jl
les
icebp
inc
ret
pop
loopne
pop
cmp
cld
rolb
aad
into
jae
push
and
pop
je
inc
pop
jnp
jmp
in
sbb
sarl
xor
fdivrl
jo
repz
ret
repnz
hlt
and
sbb
lock
mov
or
in
ds
sub
ljmp
add
lock
ds
dec
loop
xchg
push
adc
push
rol
mov
cmp
xchg
cmovae
ljmp
mov
jne
movsb
ficomps
ljmp
repnz
js
jge
xor
inc
andb
mov
xor
or
add
cmp
xchg
dec
out
fwait
in
clc
aas
add
ror
sub
sahf
cmpl
cmp
scas
and
das
mov
xor
es
add
jg
aam
mov
add
lods
in
int3
sbb
mov
es
roll
arpl
add
test
inc
adc
fsubrl
push
mov
dec
jge
jae
xor
jp
stos
and
pusha
dec
lock
push
pop
lods
rcr
jns
gs
cmp
add
les
mov
xchg
mov
mov
and
cwtl
ja
int
push
mov
push
outsb
and
jae
jne
rclb
mov
and
in
aad
mov
pop
js
fnsave
add
loop
pushf
push
add
pusha
xor
repz
sub
jb
add
cmpsb
mov
add
daa
mov
in
lret
int3
loopne
movsl
aad
icebp
shrl
inc
test
jo
jg
cld
pop
cmp
fcoms
mov
xlat
push
insl
sub
sarl
add
js
pop
add
fcompl
scas
jg
inc
sar
mul
stos
insb
cmp
int3
lret
ret
and
or
sarb
mov
sbb
pop
xchg
push
sub
rcl
xchg
repz
pop
mov
mov
push
add
in
sbb
mov
adc
xor
cmp
insl
shll
sub
lret
mov
sub
xor
inc
inc
in
pop
ficoms
iret
sbb
dec
fisttps
sbb
inc
adc
jmp
sbb
in
push
imul
xor
dec
mov
daa
xlat
sti
mov
mov
add
xchg
outsl
and
cmpsl
fadds
popf
push
add
push
dec
mov
add
insb
jg
pop
test
pop
xor
sub
push
xchg
stos
rol
adc
loope
add
push
dec
insb
cld
out
xchg
mov
ljmp
push
add
xchg
push
cmp
dec
jp
jne
test
rorb
jecxz
push
movsb
pop
mov
push
jns
movl
mov
mov
jle
out
or
or
fsub
rol
push
leave
cwtl
lret
or
jnp
popf
or
ljmp
push
mov
pop
add
test
sub
into
mov
sar
jb
int
adc
pusha
cmp
mov
je
mov
add
out
popf
add
cmp
orb
cltd
add
ja
jg
mov
and
and
mov
mov
jle
push
mov
test
add
shl
fildl
push
call
sub
inc
add
daa
or
xchg
jp
arpl
adc
aaa
inc
xchg
data16
gs
shrl
aad
and
fnsave
inc
xchg
jge,pn
ret
add
sbb
subb
pushf
add
bound
add
sub
ffreep
push
je
or
lods
cmpl
adc
mov
and
adc
add
add
inc
mov
or
sub
call
orb
fimuls
mov
mov
cmp
jne
stos
jge
add
mov
repnz
fwait
mov
add
pop
cmp
and
stos
xor
sarl
xchg
pop
pusha
add
lods
mov
jo
push
or
ret
xchg
push
loopne
add
pop
popa
jp
add
inc
cmc
mov
es
cmpsl
ja
add
xchg
fidivrs
adc
addr16
clc
js
dec
xor
add
inc
imul
filds
sbb
popf
stc
add
or
mov
popa
add
pop
xor
mov
xchg
mov
cmp
fldenv
or
in
pusha
add
lcall
add
mov
leave
fs
xchg
arpl
or
cli
inc
mov
ret
pushf
add
ficompl
add
idivl
add
cmc
cli
add
stc
fsubr
xchg
daa
add
push
add
adc
mov
xchg
add
push
or
xchg
imul
cmpsl
mov
pop
cmpsb
call
in
cmp
in
and
sbb
ret
mov
dec
inc
out
inc
dec
add
mov
add
sbb
mov
mov
testb
mov
ret
mov
cltd
sbb
rcrl
cmp
sub
shrb
call
add
xchg
mov
insb
add
imul
add
clts
fmul
jae
sbb
add
je
add
andl
iret
xchg
pop
mov
bound
movsl
outsl
lahf
pop
stos
test
sahf
mov
dec
add
ret
cld
jno
xor
scas
sbb
jmp
and
loop
inc
ja
leave
cmpsl
cmp
push
mov
xchg
sub
jp
insb
sub
pop
into
das
in
movb
cmpl
or
sbb
push
icebp
insl
xrelease
cmp
int
mov
jbe
add
mov
loope
sub
mov
add
adc
pushf
scas
add
leave
out
mov
enter
out
sub
aaa
mov
fildll
jg
leave
shlb
mov
aam
cs
mov
xchg
jmp
out
mov
xchg
rol
dec
pop
add
sahf
pop
fcomip
add
ss
pop
pushf
add
int3
mov
pop
jnp
test
adc
stos
sub
cmp
mov
popa
inc
fwait
sbb
fstps
scas
pop
fs
add
int3
or
scas
jecxz
lcall
out
fwait
xchg
lcall
out
frstor
pop
add
adc
dec
sub
fdivrp
imul
cmpsl
pop
xchg
loop
add
in
clc
mov
pop
dec
ret
xor
sbbb
insl
daa
pop
add
popa
mov
rcrb
push
sbb
xchg
lds
ret
into
sbb
add
mov
leave
movsl
sbb
cmp
and
faddl
ds
pusha
call
add
aaa
mov
ret
data16
popa
sbb
add
loopne
adc
or
leave
jecxz
sarb
mov
mov
dec
ror
push
jge
sbb
cld
lret
shl
shrl
mov
cmp
xchg
imul
repnz
fs
cmp
pop
stos
insb
xchg
or
add
sbbb
leave
inc
lret
xor
faddl
add
orb
rclb
adc
mov
in
and
ret
push
add
push
sub
in
hlt
pop
add
xchg
test
jns
in
loop
cmpsb
int3
jo
mov
test
test
xor
inc
aas
jle
push
add
outsl
in
dec
adc
mov
and
cmpsl
sbb
cmp
ret
sbb
dec
adc
add
add
into
frstor
loopne
stc
add
inc
pop
cli
aaa
jns
pop
add
popl
mov
das
ds
adc
cmpsl
arpl
pop
push
adc
sbb
lret
pop
push
add
cmp
cwtl
add
push
cmc
push
cs
mov
in
and
xor
int3
cmc
add
xlat
divl
out
inc
xorl
aad
cmpsb
inc
roll
shl
sub
and
add
pop
cmp
imul
mov
mov
cmpsl
cmp
lds
adc
cmp
aam
push
sub
push
ficoms
xlat
out
pop
dec
inc
add
mov
xor
scas
inc
lds
data16
xor
ret
aad
aam
push
out
mov
jmp
jb
jge
test
mov
pop
xchg
add
dec
or
mov
adc
push
icebp
mov
push
hlt
in
rcl
add
stc
cmpsl
movsl
scas
bts
add
jp
or
ds
filds
pop
fcoms
fmull
and
cmp
and
fwait
in
pop
stos
add
in
repz
dec
push
or
shrl
jae
jge
ret
jbe
xor
mov
movsl
sarb
aad
jns
test
jbe
lea
sub
bound
xchg
add
out
fistl
add
repz
dec
std
aaa
mov
clc
lds
and
inc
jge
dec
lods
aam
andb
ljmp
add
mov
xchg
add
xchg
push
mov
mov
mov
dec
addb
xor
pop
bound
insb
pop
clc
adc
out
lds
ss
mov
pop
xor
sub
sbb
and
add
add
and
movsl
jb
sbb
mov
inc
xchg
sahf
sub
leave
ret
pushw
add
sbb
int3
inc
in
cmc
lock
or
jae
fucomp
test
enter
add
pop
lock
call
loope
mov
fwait
mov
pushf
add
sbb
dec
loope
pop
add
out
inc
lret
add
inc
pusha
cmovo
and
add
rcll
aas
fwait
inc
jmp
inc
mov
aaa
out
in
push
cs
pop
sbb
lahf
and
xchg
jbe
inc
or
adc
data16
icebp
mov
inc
fs
sti
and
cmp
xor
bound
jecxz
enter
sub
inc
ljmp
add
and
and
repz
inc
pop
and
mov
mov
and
sbb
xlat
push
mov
pop
mov
rclb
xor
xchg
mov
das
cmp
push
cmpb
scas
test
outsl
sarl
mov
mov
add
in
testb
push
adc
cwtl
mov
add
shll
xchg
cltd
mov
cmc
add
testb
stc
inc
imul
mov
ljmp
ret
xchg
test
sub
sahf
cmc
add
not
imul
ds
jb
stos
daa
cmp
in
loop
call
and
jp
mov
pop
add
push
jmp
and
mov
add
sub
incl
sbb
or
jo
jno
xchg
sbb
cmp
jmp
adc
pushf
out
loope
popf
push
mov
bound
cli
bswap
jecxz,pn
cld
adc
xor
scas
or
gs
shll
daa
lock
push
and
add
cmp
xor
sbb
dec
ljmp
pop
and
cmp
push
and
inc
inc
and
ljmp
push
roll
fimull
shll
ret
dec
cmpsl
lahf
xchg
mov
rolb
and
arpl
test
jo
xchg
ret
daa
xor
xor
imul
push
mov
iret
add
adc
push
inc
add
out
cmp
or
lret
repz
push
shll
sbb
mov
addr16
leave
add
cmpb
loop
push
mov
sub
out
out
dec
popa
mov
and
pop
add
gs
mov
arpl
and
cmp
adc
loope
add
in
inc
scas
pop
xchg
scas
xchg
push
loop
pop
cmpsb
and
add
outsb
adc
adc
pop
mov
pop
push
jmp
jne
in
xor
vpaddq
rcrl
cltd
dec
xor
and
stos
add
sub
mov
mov
xor
inc
repnz
fwait
xor
push
js
aaa
cld
aaa
and
mov
call
or
jle
jns
shlb
or
mov
inc
and
adc
mov
jmp
dec
pusha
sbb
fisubs
jl
sbb
shl
ret
pop
xchg
loopne
and
cwtl
xor
mov
aas
bound
daa
fildll
ficoms
mov
and
ja
add
mov
adcl
jge
mov
flds
std
or
xor
fidivrs
inc
add
jmp
jne
mov
xchg
xor
inc
xor
pop
mov
mov
sub
outsl
inc
mov
je
xchg
stc
jmp
add
mov
cmp
jg
rorl
inc
xchg
out
aaa
dec
stc
sahf
cmp
xor
sbb
adc
mov
or
pop
pop
or
mov
xchg
inc
add
jp
adc
cmp
and
test
or
add
cmp
or
jecxz
sahf
stos
xor
inc
mov
mov
sub
mov
mov
mov
dec
add
dec
loope
arpl
cld
rcrb
or
adc
pop
mov
xchg
xor
push
add
lods
adc
shrb
orb
ds
jecxz
and
mov
aad
add
enter
push
sbb
movl
dec
ret
rorb
aas
push
mov
and
add
hlt
pop
inc
repnz
roll
data16
loope
movsl
add
xchg
push
fcomi
cli
add
pop
fldt
adc
xchg
sarl
add
stos
inc
jno
je
sbbb
fwait
jne
mov
inc
adc
negl
push
std
add
lea
inc
push
mov
jmp
or
adc
add
jo
xchg
shrl
xor
adc
in
pop
add
shlb
xchg
push
cltd
ret
arpl
adc
pop
sbb
cmp
aam
loop
mov
test
shl
mov
push
inc
and
jl
add
push
pop
sub
xorps
ret
dec
sub
pop
ret
movsl
rorl
int
loope
cli
clc
add
shlb
add
lds
loope
xor
cmp
inc
add
mov
fldl
inc
sbb
jge
pushf
cmp
mov
sub
fidivl
outsl
xlat
cmpsb
sub
loopne
lods
pop
dec
and
xchg
mov
lahf
adc
cmp
and
lret
insb
inc
jge
icebp
std
mov
add
jecxz
xchg
jl
je
mov
in
pop
in
ficomps
testl
adc
mov
xchg
fadds
pusha
gs
adc
imul
push
dec
popa
sar
jg
add
cmc
test
pop
pop
ljmp
shrb
add
cmpsl
xchg
test
push
xchg
xchg
inc
xor
gs
stc
push
xchg
fs
cmc
test
jns
pushf
jge
cmp
mov
aad
pop
add
es
pop
movsb
mov
lret
inc
jecxz
push
ds
or
or
fistpll
aam
jge
outsl
fldenv
mov
sbb
fwait
dec
push
xchg
push
xor
xor
aad
in
mov
xchg
sub
jecxz
ficoms
mov
adc
cld
add
mov
xchg
adc
js
add
mov
push
xor
lock
xchg
and
xorb
jge
push
inc
mov
decl
mov
fidivl
sbb
jle
ja
aam
lea
loope
cmp
cli
es
add
push
add
out
add
lcall
fcomps
daa
fisubs
cmp
xor
add
add
sahf
mov
dec
outsb
dec
scas
and
popa
inc
test
fcoms
dec
cld
sub
ret
mov
sbb
sub
add
cwtl
mov
dec
add
ret
xor
int3
xor
leave
dec
xor
cmp
les
add
ret
xor
add
leave
aaa
cmpsb
fisubs
add
add
sbb
test
shl
repz
jns
push
inc
push
cltd
ja
jecxz
cmp
inc
repz
in
or
adc
bound
cmpl
test
xor
cmp
mov
stos
lcall
mov
sbb
outsl
jp
push
fcmovb
or
jmp
jne
fs
loope
push
add
sbb
fmul
sub
push
xlat
daa
cs
push
or
test
jp
push
sbb
xorb
xlat
out
out
jg
cmc
xor
cmpsl
jp
mov
popa
cmp
sbb
sbb
dec
jge
pop
adc
xchg
sub
push
sub
push
mov
je
adc
or
inc
nop
gs
in
leave
jg
push
mov
into
xchg
cs
xor
mov
fldl
jp
add
ret
add
jg,pt
push
orl
add
arpl
jnp
cmp
cmc
dec
add
and
inc
or
push
cmp
inc
mov
jbe
mov
lods
xchg
lds
ds
push
add
movsb
stc
cmp
out
or
xor
mov
push
fstps
mov
je
adc
push
pop
adc
pushf
fwait
sub
in
lods
adcb
push
cmpsb
sbb
add
cli
mov
mov
aas
pusha
add
pop
loope
adc
addb
in
push
negb
jp
xor
jnp
add
xchg
lods
in
and
inc
sub
shrl
mov
ficompl
and
lock
stc
and
add
dec
dec
push
xchg
jno
into
cmp
loope
cmp
xchg
or
js
add
and
popf
mov
adc
mov
mov
shl
outsl
push
adc
aaa
push
add
or
sbb
add
je
loop
xchg
add
dec
pop
or
mov
sub
or
pop
hlt
cmp
adc
idivb
sarl
mov
mov
pop
popf
idivb
lock
cmc
xchg
add
and
mov
xchg
mov
inc
daa
test
sub
insl
add
push
adc
enter
pushf
fsubrl
xchg
movsb
push
fwait
add
aaa
jl
add
dec
xchg
add
popa
lret
fdivp
movsl
inc
rorb
ds
mov
mov
loop
repnz
mov
fwait
jb
add
sub
in
xor
popa
xchg
xchg
sbb
add
aaa
inc
sti
xchg
dec
mov
out
ds
jp
into
or
loopne
sarl
loopne
lahf
inc
jb
push
inc
adc
negb
jg
clc
pop
add
shlb
add
pop
fsub
add
sub
mov
add
cmpsb
jecxz
aas
pop
loop
daa
dec
and
or
push
flds
mov
mov
lds
out
dec
sarb
jb
je
lahf
sbb
roll
pop
cmp
add
enter
cmpsb
in
add
popa
and
push
adc
mov
pop
inc
into
xor
pusha
push
fisubrl
mov
add
cs
inc
movl
inc
push
pop
push
rolb
and
xchg
inc
cmp
dec
inc
call
lea
jno
insb
inc
add
add
mov
lds
mov
pusha
mov
dec
loopne
add
mov
push
xchg
jne
inc
push
xor
cmp
lea
pop
mov
aad
or
add
daa
movsl
lahf
insl
push
jg
push
add
roll
xchg
add
shlb
sbb
stos
xchg
nop
push
inc
jmp
sbb
shll
add
das
mov
lods
lods
pop
outsl
add
int3
sarl
xor
add
jmp
pop
loopne
jo
mov
cmp
adc
sub
les
enter
or
xor
mov
insl
inc
cmp
sub
in
mov
pop
out
jne
aad
fwait
cwtl
pop
and
pop
push
lock
dec
rolb
js
xlat
jbe
and
push
add
repnz
jae
mov
adc
xchg
or
mov
pusha
cwtl
pop
pextrw
lods
pmaxub
mov
xor
cmp
data16
mov
incl
xchg
movsb
inc
xchg
xor
inc
add
aaa
mov
cmp
cli
pop
mov
std
add
sub
add
jb
and
arpl
sbb
and
xchg
cmpsb
shlb
in
or
mov
push
pop
and
adc
cmpl
jbe
cmp
ret
sbb
ljmp
pop
sarb
pop
inc
addr16
cmp
fistpll
aas
xchg
push
out
or
adc
xchg
mov
cmp
ret
test
lds
adc
mov
pop
fisubs
add
loop
daa
pop
sbb
test
add
sub
bound
ja
jmp
dec
push
out
cwtl
sti
cli
movsl
fiadds
inc
adc
xchg
shrb
mov
insb
cmp
jecxz
or
add
push
clc
push
jns
popf
xor
xor
jl
adc
cli
add
sbb
xchg
pop
fidivrl
outsb
add
cmpsl
inc
and
jno
push
testb
add
fdivrl
xchg
test
mov
rcr
jns
dec
xor
push
dec
pop
repnz
aam
rcrb
inc
pop
mov
roll
push
pop
ja
popa
rolb
in
adc
mov
test
bound
push
xchg
std
out
jge
aam
mov
dec
lds
repz
adc
add
sub
shrb
jp,pn
mov
mov
test
xchg
add
gs
aam
mov
aad
ret
or
sub
into
negl
scas
inc
int
pop
ret
aaa
and
add
lahf
adc
add
mov
xor
sbb
icebp
movsl
mov
mov
mov
out
das
lcall
out
add
sbb
mov
add
inc
in
push
mov
mov
lea
jno
test
jne
cmpsb
xor
fildll
out
mov
enter
fidivrs
pop
movsb
inc
xor
jns
cmp
out
add
insb
inc
lret
mov
es
mov
pop
das
mov
les
push
or
or
adc
ljmp
push
sub
lret
adc
dec
in
inc
lahf
fldl
enter
sub
scas
vpand
popa
insl
pusha
call
or
add
pop
das
pop
sbb
rorl
popa
hlt
dec
fisubs
sbb
movsb
mov
repz
ds
pop
dec
pop
inc
xchg
popf
bound
lea
icebp
add
icebp
std
insl
rclb
add
push
cli
ja
ss
jb
add
pop
lds
ret
add
loope
test
cmp
sub
or
icebp
mov
xchg
add
stos
rcll
iret
fwait
add
insb
pop
dec
sub
dec
out
cmp
sub
lds
push
push
mov
sub
xor
into
flds
sub
and
lods
inc
mov
test
jge
push
mov
pop
mov
sub
add
hlt
mov
xor
ret
xor
mov
mov
aad
xchg
add
push
sub
in
inc
cmpsl
inc
cmc
jnp
faddl
lods
pop
sbb
cmp
nop
adc
jmp
pusha
stos
loopne
add
push
xchg
cmp
adc
shll
inc
inc
pushf
shl
divps
cmp
add
into
iret
add
pop
sbb
add
mov
add
pop
push
es
mov
fwait
pusha
xlat
dec
sbb
adc
mov
xor
jb
push
sub
add
repnz
aam
xchg
adc
add
decl
cmp
add
push
repnz
ret
and
loope
out
and
shlb
out
cmp
cmp
in
cmp
inc
sub
push
push
add
add
outsl
sti
rcrb
xchg
add
push
test
int
and
rcrl
hlt
mov
lds
aaa
sbbl
sti
add
mov
fstps
push
pop
testb
out
es
mov
lahf
add
xor
sub
sub
inc
xchg
push
and
stos
in
xor
add
cmp
sti
add
add
inc
lods
add
insb
mov
pusha
lcall
or
xchg
xchg
ljmp
hlt
inc
lds
sbb
nop
push
js
ss
jecxz
fadds
jo
imul
mov
add
cltd
gs
inc
add
mov
or
fcomi
xor
call
push
sub
js
stos
arpl
in
inc
or
jp
cli
add
push
testb
inc
xchg
outsl
xchg
fsubl
lcall
imul
sbb
lret
mov
inc
push
dec
addl
ret
out
inc
insl
cmp
push
adcl
ds
or
dec
jp
inc
xchg
scas
ret
bound
jne
js
cmp
jecxz
imul
mov
lock
outsb
add
mov
inc
or
lods
fimull
nop
aad
in
adc
dec
dec
fsts
and
jg
lds
subl
out
cltd
mov
in
gs
cli
jp
loop
dec
or
clc
push
jmp
push
insb
xor
sbb
daa
cmp
imul
or
xorb
mov
dec
lret
inc
mov
add
lods
lods
inc
pop
arpl
into
sbb
sub
insl
popf
jle
jp
cwtl
mov
xor
aas
jo
outsl
jp
dec
lock
testb
fnstsw
leave
xchg
push
mov
mov
or
and
in
jle
and
cmp
sahf
movq
xchg
negl
or
mov
cltd
and
jmp
adc
int
add
mov
mov
pop
push
shll
repz
and
adc
scas
ds
into
inc
push
cmp
add
mov
insl
jo
xchg
and
cmp
push
clc
inc
les
dec
movl
in
mov
cli
and
jp
push
aad
add
push
and
mov
sub
inc
add
movsb
jbe
addb
int3
sbb
cmp
xchg
andl
or
rcll
mov
or
aad
sbb
inc
push
xchg
fnstenv
lret
jp
adc
bound
lods
push
cmp
sbb
movsb
push
fucomi
xchg
shl
sar
addb
mov
add
mov
dec
sti
les
sub
add
out
fs
lea
xchg
mov
cmp
mov
fs
aam
std
add
bound
xchg
jmp
cmp
into
sarl
or
adc
cli
es
pmulhw
pop
out
int3
popa
cmp
jp
push
or
lret
fwait
aaa
push
lahf
fldt
rorl
sbb
or
xchg
pop
loopne
pop
fmul
push
rolb
out
js
hlt
lcall
or
ret
and
rcl
xor
push
cmp
adc
aam
sbb
lods
cmc
xchg
push
sbb
dec
loope
and
pop
das
cmpsl
cmpsb
scas
mov
mov
daa
cwtl
jecxz
data16
stos
cmp
push
add
decl
mov
mov
jp
les
jg
movsb
pop
adc
out
in
cmp
dec
inc
bound
jge
or
es
and
aad
mov
inc
xor
mov
jno
popf
fisubl
jp
scas
cmpsb
push
leave
adc
sbb
sbb
add
and
inc
lret
cmp
ret
iret
mov
int
into
les
movb
mov
dec
and
dec
movsl
pop
fisubrs
sbb
jp
push
addl
jno
decb
lcall
mov
fstl
mov
and
int
adcb
mov
es
out
xchg
pop
pop
fisttpll
pop
addr16
push
mov
adc
mov
push
mov
bound
outsb
xchg
dec
mov
jp
push
stos
dec
lea
xlat
out
into
push
test
fs
pop
into
flds
andb
scas
into
pop
inc
mov
jp
sbb
sub
cmp
out
in
scas
push
or
jo
cmp
orl
mov
out
shll
dec
mov
or
xchg
or
jbe
pop
sbb
cmp
mov
sbb
cmc
out
push
or
fildl
mov
adc
ret
movb
cld
cltd
xlat
inc
jmp
pop
sub
lret
jp
xchg
cwtl
loopne
sahf
sbb
ret
cmpsl
icebp
push
jge
mov
sbb
xchg
sbb
mov
push
or
es
int3
push
xchg
cs
or
iret
cmp
and
insl
add
cmp
pop
pushl
inc
jge
int3
jle
jg
imul
jmp
cmp
leave
inc
dec
xchg
cmc
cwtl
adc
ljmp
mov
cmp
lahf
je
add
bound
mov
add
call
imul
and
and
push
sbb
gs
ret
xlat
push
xchg
add
and
mov
push
push
push
mov
fisttpl
and
ja
and
add
inc
je
mov
push
aaa
sahf
fiaddl
dec
push
and
ja
xchg
movl
push
mov
mov
ret
add
inc
orl
stos
roll
cmpsl
pop
loop
sub
and
or
jne
mov
dec
leave
idivb
sbbb
and
xchg
repz
repnz
fbld
cmp
or
lods
cmp
mov
adc
lock
mov
mov
rcrl
dec
into
shr
xchg
lds
add
lods
cmp
call
push
outsl
xor
sbb
xchg
push
hlt
dec
sub
orl
fadd
add
and
mov
js
leave
cmpsl
test
xor
stos
add
sub
xor
lahf
cli
add
enter
pop
sbb
mov
jmp
and
xchg
fcmove
mov
add
mov
mov
mov
outsl
scas
add
xor
cmc
shll
and
jae
imul
into
int
jle
add
sbb
inc
cmpl
mov
cmp
cmp
xor
cltd
sbbb
ja
pop
mov
pop
jmp
filds
das
and
xchg
mov
sub
mov
test
cmp
push
or
jge
into
sbb
and
gs
add
call
cltd
cmp
xchg
inc
js
shlb
or
and
mov
rorl
movsl
pop
insb
or
roll
popf
push
enter
mov
mov
outsb
xor
mov
or
push
jb
cmp
inc
inc
add
andl
mov
out
and
inc
sub
mov
jge
call
add
outsb
out
inc
pop
and
lret
test
in
pop
clc
jne
adc
xor
mov
sbb
lds
jnp
push
add
add
add
dec
jne
insl
ds
add
inc
lds
inc
xchg
jo
je
aad
cmp
andl
mov
pop
mov
jnp
sbb
adc
xor
ja
movsb
stos
les
enter
or
xchg
inc
jbe
push
fucom
mov
stc
or
dec
jmp
dec
popa
adc
add
mov
or
inc
out
adc
test
outsb
je
cmpsb
xor
dec
mov
gs
mov
rcrb
push
add
out
cmp
mov
jg
rcrl
mov
fcoms
adc
and
push
add
cld
mov
cmp
or
enter
fs
adc
repz
add
jne,pt
mov
loop
sub
rclb
les
inc
pop
add
mov
xchg
inc
or
int3
cs
jmp
sub
mov
mov
push
bound
fdivrs
jmp
add
jns
jle
aas
mov
ja
inc
dec
leave
add
std
sbb
and
repnz
add
jo
xchg
dec
sbb
add
movsl
mov
jb
add
jo
cmp
es
mov
sbb
mov
outsb
gs
xchg
std
add
enter
movsb
call
subb
and
rorl
cmp
adc
ljmp
inc
inc
cmpl
shrl
jb
fldenv
push
add
mov
jp
mov
pop
aaa
out
add
cmpl
pop
jmp
sub
ss
movsb
pop
sub
shll
ret
and
inc
xor
filds
in
fstpl
pop
mov
stos
out
add
or
aaa
rcrl
add
fistpl
mov
shrb
aas
fsubr
ret
scas
subl
sub
pop
pop
jmp
iret
leave
fwait
jb
sub
xor
inc
push
and
dec
push
out
add
mov
push
add
cmp
sub
and
popf
stos
aas
push
std
fildl
xchg
jl
mov
add
and
push
mov
add
daa
pop
aas
nop
sbb
add
fcmovbe
xchg
push
jmp
mov
stos
aaa
sbb
stc
sahf
push
aam
cwtl
das
add
fldt
add
add
lock
and
inc
inc
aas
call
clc
es
xchg
dec
jns
aam
fsubl
shr
push
add
and
cli
rcrb
mov
add
popf
sub
or
out
add
aam
dec
insb
stc
add
shrl
out
stos
subl
psllq
jle
mov
add
mov
cmpsl
nop
xchg
mov
test
bound
add
shll
adc
sbb
adc
jno
add
dec
jne
rclb
lock
addr16
mov
pop
bound
or
insb
or
test
pop
xor
lock
pop
jns
mov
lret
clc
add
dec
cmp
push
add
popa
mov
jge
test
add
insl
adc
rcr
arpl
aaa
adc
not
out
add
xlat
jmp
mov
test
cld
call
add
mov
rcrb
sub
out
add
or
cmpsb
inc
pop
lret
cmp
cld
mov
ret
jb
jl
sub
fwait
sar
les
cmpl
add
into
int3
es
xlat
add
mov
shl
mov
lods
sub
stos
push
out
mov
jmp
ret
out
and
fsubl
add
sub
mov
mov
dec
adc
xor
adc
cmp
xchg
add
loopne
pop
jl
push
pop
inc
xor
shrb
add
lret
aas
inc
iret
or
adc
or
sub
jae
cmp
push
add
xor
jne
cmc
into
add
cltd
xlat
sbb
and
add
aam
fisubs
and
jle
mov
lods
adc
or
jo
inc
scas
push
mov
cmp
mov
aas
insb
inc
sbb
js
add
dec
pop
incl
icebp
xchg
je
xor
cmp
sbb
leave
fs
adc
cli
push
inc
fstpl
add
adc
cwtl
add
jmp
inc
mov
push
sahf
sbb
jl
dec
xor
add
push
jae
scas
loope
shlb
pop
loop
xor
repnz
xorl
inc
push
scas
in
sarb
dec
insl
mov
loope
mov
jecxz
sub
inc
dec
adc
add
mov
test
mov
daa
lahf
pop
add
hlt
sbb
call
cmpb
mov
push
dec
jo
push
xor
add
mulb
out
scas
inc
dec
mov
les
mov
xlat
push
add
clc
push
pop
mov
scas
cmpsl
bnd
in
les
mov
jbe
shll
adc
xchg
movsl
xchg
cmc
lret
cmp
imul
pop
xor
addr16
cmp
fisubl
nop
sbb
pushf
pop
std
xor
push
ljmp
mov
out
and
mov
orl
add
mov
loopne
sbb
mov
inc
mov
inc
fucomip
sti
fistl
ret
jns
cmp
fwait
push
cmpl
sbb
rclb
sarl
push
out
xchg
shlb
xchg
stc
lods
addl
imul
jae
or
mov
dec
aas
mov
jbe
clc
aad
lret
push
sarl
add
mov
roll
xchg
mov
jns
adc
add
gs
cltd
mov
cmp
add
adc
push
mov
in
or
push
jg
stos
or
andb
mov
mov
stos
lahf
add
mov
test
and
lahf
jns
jp
cs
std
je
xchg
sarl
das
cmpsl
in
jge
iret
sub
je
push
mov
ret
or
out
cld
adc
and
inc
int
movsb
mov
cmp
icebp
arpl
mov
out
cs
out
xchg
enter
mov
adc
dec
inc
loop
aam
sub
movsb
inc
lret
in
xchg
jp
push
rcrb
add
jp
xlat
insl
mov
out
pop
cli
fldpi
ret
xor
inc
fs
les
nop
pop
lock
mov
push
ret
xchg
fidivs
fidivrl
cmp
mov
dec
subb
lahf
fsubrs
dec
dec
int
hlt
push
bound
arpl
pop
addr16
push
add
sarb
jle
mov
push
test
mov
sbb
mov
aas
jp
das
jbe
pop
je
fbld
xchg
add
jmp
aam
imul
into
inc
mov
ja
pusha
test
int
add
leave
rcr
and
incb
repnz
test
inc
cmp
and
adc
mov
jle
cmpsl
popa
xchg
scas
dec
jae
stos
mov
addb
lret
out
and
daa
jp
xchg
data16
adc
aad
loope
outsb
sbb
push
inc
cs
cltd
adc
add
std
in
mov
xacquire
sbb
inc
xchg
push
add
es
jmp
xchg
dec
popa
cmp
faddl
mov
inc
jp
incb
daa
xchg
and
stos
xor
mov
xlat
cmp
loop
xchg
cmp
popa
popf
dec
aaa
idivl
sub
nop
imul
enter
in
mov
xchg
pusha
sbb
push
lcall
ljmp
lods
dec
cmp
cltd
jb
or
pushf
add
imul
out
add
add
outsl
cmp
adc
cmc
sti
xor
mov
pop
xor
loop
add
adc
sar
das
cmp
rolb
mov
cs
fs
dec
push
cmc
inc
mov
inc
xor
scas
loop
or
loope
dec
mov
test
jno
inc
pop
aam
je
inc
pusha
jg
cmp
hlt
imul
pop
lahf
les
xchg
mov
pop
and
data16
xchg
pop
xchg
and
push
mov
and
pusha
jl
inc
jne
shr
ja
adc
mov
sbb
fadds
lret
ds
jp
scas
xor
sbb
adc
call
or
je
in
jb
je
imul
data16
xor
add
push
aas
fistps
test
sub
scas
lret
ret
add
mov
and
test
mov
rorl
ljmp
cmp
in
into
cmp
insb
cmp
dec
mov
dec
addb
or
adc
mov
add
lock
iret
repz
push
lods
clc
bound
push
and
xlat
das
inc
fs
ljmp
scas
lods
add
fnstsw
push
mov
push
enter
sti
fnstenv
jnp
mov
enter
cmp
sbb
in
out
lret
out
cltd
arpl
repz
xchg
mov
jp
xchg
mov
sarl
jp
jge
stc
push
pop
scas
adc
test
lock
inc
or
test
jp
ret
out
jno
and
and
ficompl
pop
pushl
lcall
xor
out
std
push
mov
pop
sub
pop
dec
fwait
push
pusha
cld
subb
xchg
lahf
jno
push
addr16
mov
xlat
mov
cmpsb
call
mov
add
sbb
repz
cltd
sub
addb
or
or
inc
or
push
lods
pop
daa
xlat
xchg
dec
cmp
and
sbb
xor
scas
shlb
inc
inc
repnz
add
mov
jne
daa
lret
jp
cmp
xchg
jecxz
cs
pop
movsl
aad
sub
das
cmp
push
add
cmc
ja
stos
movsb
inc
mov
call
movsb
inc
sbb
dec
sub
add
cmp
mov
and
sub
or
jg
mov
inc
repnz
adc
cmp
jns
in
sub
lock
outsl
outsb
mov
pop
inc
jg
addr16
inc
enter
faddl
popf
cmp
jbe
lcall
push
rcrb
sub
mov
dec
sub
adc
rolb
insl
clc
add
adc
jb
jecxz
push
movsb
xor
cmp
cmp
ret
pop
sbb
mov
rcrb
xor
xchg
add
shrl
jg
xlat
out
fs
mov
clc
adc
adc
loope
push
add
mov
cmp
inc
inc
sub
addl
push
inc
push
bound
les
xchg
pop
push
inc
mov
cwtl
dec
or
clc
ret
std
outsl
shl
xchg
ss
leave
insb
mov
or
stos
inc
push
int
xchg
mov
stos
lret
add
xor
push
push
shrl
shlb
in
inc
pop
xchg
sub
push
sub
add
aaa
add
jns
xchg
push
pop
sbb
test
jle
sbb
lods
outsl
xor
sub
inc
movsb
adc
cwtl
test
pop
inc
cmp
jbe
xchg
or
outsl
mov
in
jb
ds
add
jmp
daa
mov
imul
and
inc
add
push
inc
jecxz
xor
xchg
and
jns
mov
lahf
rolw
add
fiaddl
add
cmp
or
dec
lcall
sub
inc
ljmp
xor
aaa
xchg
lret
dec
jmp
mov
test
negb
fstp
setge
inc
cmpsb
xchg
stc
sub
xchg
pusha
mov
cs
outsb
add
add
add
loop
add
or
sbb
call
sbb
ja
loope
add
int3
and
movsl
add
cmp
adc
cmp
mov
add
roll
sub
bswap
mov
cmpsl
add
outsl
daa
pop
dec
add
lds
add
fabs
sub
adc
jo
stc
das
sbb
xchg
pushf
add
fwait
cmpl
faddl
cmp
or
iret
xor
test
sbb
loopne
lret
roll
sarb
roll
mov
or
xlat
test
mov
or
loope
inc
add
ret
jns
cmp
inc
rolb
cmp
fwait
and
inc
and
incl
sub
pop
mov
and
mov
adc
jle
add
aaa
adc
bts
subb
or
ud2
ss
jge
cmp
bound
mov
cmp
outsl
into
xlat
and
add
dec
jno
xchg
rol
popl
outsb
subb
sub
add
in
pop
jmp
xor
and
xchg
mov
push
xchg
cmpsb
lods
sbb
xchg
fnsave
sti
jno
sub
outsl
test
in
cmp
orb
mov
lcall
sbbb
fdivs
mov
or
add
fs
stc
idivl
rcrb
sbb
sub
cmp
mov
icebp
cmp
arpl
mov
mov
push
lret
xchg
sub
mov
insb
cmp
xchg
mov
or
mov
mov
inc
cmp
sbb
cmp
add
fwait
cwtl
out
ficompl
push
test
sub
int3
and
add
imul
mov
sub
xchg
fcmovne
out
add
or
push
cli
inc
adc
mov
test
pop
or
cmp
stc
mov
repz
call
push
or
popa
iretw
xor
or
scas
push
and
xchg
add
insl
pushf
movsb
or
nop
adc
xchg
inc
cmp
jne
xor
gs
loope
add
fnsave
fsubrl
ss
inc
pop
loopne
int
xor
add
inc
lods
jg
inc
sub
push
adc
add
jle
cs
add
std
es
arpl
xchg
xor
ss
add
or
or
push
add
int3
and
xchg
xor
lret
cmp
cmp
add
test
fiadds
js
std
inc
mov
shlb
push
popa
rorl
and
or
cmp
add
sarl
rolb
and
out
pop
shl
int
sbb
in
in
mov
inc
or
mov
cmp
jl
pop
mov
mov
lret
fcoml
mov
add
fistpll
add
jp
cmpsb
push
sub
add
cmp
aaa
pop
addr16
loope
fbstp
sub
ret
cs
add
add
push
adc
lahf
xor
push
in
add
test
jae
or
icebp
push
cltd
mov
adc
xor
pop
dec
adc
movl
or
cli
xor
mov
xor
cmp
imul
cld
xchg
fld
lret
mov
or
and
ljmp
adc
mov
mov
sbb
dec
sahf
add
jp
sbb
pushf
inc
imul
and
or
xor
push
adc
add
add
dec
pop
xchg
sti
xchg
subl
in
into
inc
and
xor
pop
jecxz
cmpsl
pop
test
lcall
mov
and
sub
pop
jae
mov
sarb
shr
add
or
dec
adc
mov
inc
mov
inc
ja
mov
int
jnp
addb
inc
lret
in
ret
push
jmp
filds
push
ss
add
or
mov
pop
ret
jae
xlat
sub
popf
rorl
xor
les
push
test
mov
mov
cmp
shll
in
fadd
popa
dec
repnz
in
pop
scas
sub
pop
stos
add
lahf
icebp
mov
pop
push
movsl
mov
mov
add
flds
sbb
and
es
scas
nop
dec
cmpsl
test
add
xor
fadd
out
repz
cmc
sbb
add
cmp
or
or
add
test
push
lods
pop
mov
xchg
push
insl
das
add
and
in
shr
ss
stos
shrb
fidivrs
test
jge
lret
add
xchg
outsl
add
cmp
pop
nop
arpl
str
jnp
leave
mov
push
lcall
add
pushf
push
dec
jl
inc
sub
and
cmp
inc
pop
inc
xor
insl
rorb
dec
es
sbb
add
mov
fimull
add
adc
push
loope
sub
hlt
dec
cmp
cmp
call
adc
repnz
pop
pop
sub
ror
repz
stos
clc
cmpsl
addl
add
xchg
out
and
ss
shll
loopne
stc
adc
pop
xor
sub
rcr
sub
add
xlat
add
outsb
push
inc
mov
int3
into
sbb
xor
add
fcomp
or
jne
inc
mov
and
add
lock
call
add
push
fcomi
mov
sbb
mov
aad
add
jnp
sbb
add
fisubrl
xor
sbb
ret
inc
xchg
data16
mov
or
in
pop
sbb
jecxz
lret
ucomiss
imul
xchg
rolb
add
xlat
mov
adc
pop
stos
cmc
push
test
lahf
xchg
popa
add
mov
stc
fldcw
add
sbb
lods
into
addb
repz
adc
mov
sub
and
clc
mov
pop
add
dec
ds
aas
outsb
pop
add
cmp
lret
add
sbb
and
ret
add
jb
testl
xor
cwtl
imul
mov
stos
stos
add
jp
add
test
push
insb
push
or
and
inc
dec
cmp
loopne
mov
sbb
mov
inc
fwait
add
in
in
imul
adc
add
movsl
jg
push
dec
pop
aas
add
or
inc
dec
decb
adc
xor
scas
add
mov
ja
pop
mov
add
sarl
or
int
jae
inc
dec
addr16
bound
xor
mov
inc
stos
aam
add
push
sub
aad
fidivl
popl
dec
repz
stc
mov
add
and
dec
and
iret
mov
xchg
fcoms
aad
enter
and
repnz
cmp
pusha
testl
dec
xchg
lods
loop
sbb
xchg
inc
test
push
adc
push
outsl
cli
add
call
xchg
add
jo
data16
mov
jno
fildll
cmp
adc
and
inc
add
mov
xchg
and
add
enter
orl
push
dec
nop
sti
scas
adc
mov
mov
dec
aas
lods
loope
jge
or
mov
mov
dec
jecxz
add
mov
xchg
cmp
push
xchg
stos
incl
lea
icebp
out
fildl
out
cmp
mov
jl
cmp
inc
add
incl
add
in
je
or
or
mov
ljmp
push
mov
push
jno
add
out
cmpl
stc
fsubrs
xor
inc
xor
inc
sbb
testl
add
outsb
out
cmp
pop
cmpsl
sbbb
cmp
xchg
xchg
pushf
mov
inc
mov
icebp
test
dec
jg
sub
adc
cmp
mov
incb
cmp
mov
decl
lcall
cmp
jge
mov
in
lock
jnp
or
repnz
push
pop
roll
out
pop
out
push
mov
js
dec
dec
mov
pop
imul
inc
and
and
leave
movsb
mov
push
loope,pn
add
and
xchg
push
inc
rcl
xchg
xor
aad
sbb
pop
cmp
stc
add
push
xchg
xor
hlt
es
xor
cmp
mov
mov
cmc
adc
push
out
dec
cld
adc
fwait
les
leave
mov
clc
stos
push
inc
mov
inc
sub
adc
add
in
xor
adc
add
outsb
add
and
push
cmc
cltd
and
fimuls
jne
mov
jb
and
push
lret
push
cmc
aas
jmp
pop
imul
add
add
imull
sbb
and
cmp
loop
sete
bound
dec
lods
mov
lock
inc
inc
scas
add
in
push
and
rcl
icebp
cmp
xor
test
movsl
bound
fwait
jl
pop
inc
inc
insl
and
push
std
or
inc
xchg
mov
pop
xchg
cltd
clc
add
mov
add
in
fbstp
or
push
std
call
cmp
mov
ljmp
mov
adcb
mov
mov
loope
aam
pop
jae
and
xor
and
fistps
test
fsubrs
add
bound
fstl
cmp
cltd
cli
inc
adc
scas
cmp
mov
jle
scas
mov
testb
js
ljmp
mov
lods
subl
mov
sbb
cmp
sub
outsb
sub
or
add
cmp
or
fildl
icebp
add
lcall
test
scas
mov
mov
pmaddwd
adc
dec
push
mov
sarb
shlb
shrb
test
ret
dec
rorb
mov
mov
cmp
cmc
xor
and
jmp
es
loop
cmp
push
lahf
sarb
mov
lods
cmp
movsl
adc
loopne
aaa
dec
shrl
jecxz
jecxz
mov
sub
scas
xchg
cmp
pop
sub
cmc
cltd
adc
addr16
mov
popa
inc
jle
sbb
sahf
fbld
enter
jne
add
js
notrack
cmpsb
std
mov
loop
lret
add
or
pop
add
mov
xlat
adc
movsb
fadds
stos
adc
inc
sarb
inc
aas
rcll
notb
mov
cmc
ret
cmp
mov
ret
pop
scas
pop
jge
xchg
stos
movsb
es
fmul
or
movsl
cmp
clc
jl
mov
push
int3
mov
push
loopne
push
js
inc
jo
xchg
add
loope
mov
mov
filds
cltd
sub
sub
hlt
xchg
js
adc
push
xchg
xor
jp
push
roll
pop
push
or
sub
push
ja
mov
cltd
cmpsb
pop
xor
mov
adcb
pop
pushf
gs
not
loop
outsl
pop
jp
cmp
inc
cmp
pop
cwtl
inc
test
inc
pusha
sub
cli
clc
dec
sub
mull
push
adc
add
aam
fst
mov
or
cs
xchg
sub
lds
dec
xchg
sti
test
divl
push
outsb
dec
lcall
adc
mov
out
sub
xchg
and
or
or
or
mov
mov
bnd
push
dec
push
mov
mov
xchg
add
add
stos
xor
fstps
cwtl
cmc
add
pop
adc
or
sbb
sub
dec
xchg
sub
sub
out
add
js
repz
adc
sub
dec
sahf
dec
and
aam
or
aas
dec
add
clts
adcl
jae
inc
cmc
or
mov
adc
rorl
jmp
popa
cwtl
lods
cli
xor
leave
scas
mov
inc
fstps
fcmovnb
cmpsb
movsb
insb
out
add
jmp
mov
push
sub
sbb
ret
xchg
jne
mov
sbb
add
add
push
aam
shll
pop
sub
lea
xchg
mov
dec
les
andb
xor
jg
mov
lcall
mov
in
test
es
pop
sub
add
adc
rolb
and
ficoms
add
cmp
mov
filds
or
add
aaa
or
xchg
and
xor
pushf
in
jbe
add
jge
insl
inc
sub
pop
pusha
jns
cmp
shlb
jmp
sbbl
dec
mov
add
xchg
jg
cld
push
call
mov
inc
push
inc
jmp
and
cmc
mov
outsb
insl
xor
sbb
sub
cmc
ljmp
out
outsl
js
adc
add
shll
jne
int3
scas
popa
sbb
dec
lods
xchg
sbb
jno
adc
scas
and
hlt
iret
mov
jnp
mov
test
aaa
je
or
faddp
ret
adc
sub
xchg
push
movsl
lods
sub
mov
ss
xchg
sarl
aad
popf
test
push
mov
add
adc
cmpl
jns
jnp
sub
mov
insb
mov
enter
adc
aam
add
dec
faddp
cmpsl
push
pop
mov
xchg
inc
and
jbe
and
mov
add
nop
lcall
cli
or
addr16
out
inc
add
dec
inc
ja
sbb
cmp
and
fs
inc
stos
sbb
add
jge
jmp
enter
ss
cmp
clc
inc
ss
popa
cmpsb
adc
xchg
or
ds
in
test
ljmp
push
leave
popf
cli
add
sbb
pusha
mov
push
sbb
test
xor
xor
mov
sets
int
test
sbb
testb
pop
add
inc
cmp
cmc
cmpsb
sbb
add
mov
xchg
inc
inc
cmp
or
and
in
xor
xlat
cmpsl
rolb
sbb
and
cmp
add
pop
ret
in
pop
stc
adc
xor
inc
lcall
cmp
mov
adc
ret
scas
loope
dec
add
mov
add
rolb
cmp
add
popf
rcrl
stos
mov
rolb
cmp
xor
cmp
push
popa
add
xchg
cmpsb
mov
punpckhbw
add
xchg
sarb
pop
imul
xlat
lret
cmp
sti
add
shl
mov
add
loop
mov
pop
jmp
pop
ret
push
sub
mov
arpl
sbb
add
pop
sbb
outsb
out
stc
pop
aam
push
push
jg
dec
or
hlt
pop
shrb
cmp
ret
popf
push
jg
xor
mov
jbe
xor
xor
fldl
add
mov
inc
stos
mov
lret
fcmovu
cwtl
add
ret
mov
sub
int
rolb
adc
sbb
jle
push
push
xor
lods
fdivl
test
dec
add
fcomp
scas
add
jbe
outsb
pop
pop
popf
mov
addl
jecxz
mov
inc
pop
sub
dec
xor
add
hlt
push
enter
dec
jmp
daa
mov
or
jle
shl
push
jl
adc
xchg
js
inc
jecxz
scas
dec
in
xor
lock
push
add
sbb
inc
push
cli
cmp
jle
pop
cmpsl
add
jnp
pop
insb
ficoml
sti
in
sbb
and
test
jno
ds
jmp
sub
dec
loopne
int3
fisttpl
xor
mov
inc
jo
stc
ds
ret
shlb
lcallw
add
jne
mov
pusha
out
xchg
fcoms
add
pop
enter
sub
into
sub
cmp
sub
xchg
repnz
add
repz
or
dec
pushf
ret
mov
push
test
lcall
add
sti
push
sub
add
aam
mov
adc
in
scas
out
dec
sbb
cmp
data16
test
jg
mov
je
ret
xchg
push
imul
jg
sbb
imul
jns
add
jmp
pop
add
pushf
loope
cwtl
mov
std
mov
pop
fimull
jecxz
inc
and
rcr
out
mov
rorl
mov
lahf
scas
stos
push
ss
fnsave
iret
and
add
call
add
lcall
sbb
gs
rcl
xchg
adc
xchg
push
and
ret
xor
add
out
lret
ret
clc
aas
mov
adc
cmp
aam
or
cwtl
jmp
push
dec
or
in
hlt
dec
dec
add
or
aam
add
ss
mov
gs
or
and
add
push
popa
sbb
mov
push
xor
push
pop
add
out
pushf
sti
imul
inc
inc
cmp
movsb
dec
adc
faddp
add
fimull
mov
add
fs
int3
lret
cmc
dec
sub
fidivl
rclb
ljmp
xchg
movb
shrb
je
or
dec
test
add
ljmp
cmp
fscale
stos
sub
lods
add
aas
cmc
and
add
and
sub
cmovbe
add
and
jp
jno
pop
add
mov
jmp
add
jbe
cwtl
lods
xor
jo
outsb
xchg
ret
loope
jle
out
roll
pop
movb
fidivs
add
pop
sub
jp
push
pusha
mov
or
adc
add
xchg
test
insl
mov
dec
cmp
jae
pop
out
cwtl
pop
mov
dec
addr16
or
add
mov
xchg
or
std
sbb
pop
pop
loope
into
fisttps
mov
cmp
adc
sub
dec
xchg
jb
lock
ss
les
das
dec
xor
ret
inc
js
lea
leave
mov
mov
arpl
stc
stos
cmp
xor
add
scas
jecxz
test
aad
jbe
sbb
or
mov
aas
push
add
mov
in
add
xor
or
pop
push
shll
rorb
cmc
xor
shrl
movsl
mov
cmp
ret
and
mov
sbb
push
cmp
add
jb
arpl
mov
xchg
comiss
sbb
out
jns
or
lea
ret
push
mov
lcall
je
dec
inc
js
add
xchg
in
adc
sub
pop
mov
add
jmp
adc
or
mov
rolb
sbb
movb
cmp
aam
or
push
push
add
iret
push
add
jae
inc
addb
cmp
imul
push
gs
mov
xor
cmp
lahf
pushf
and
mov
jbe
scas
andl
adc
out
add
stc
add
adc
add
movsl
add
pushf
in
add
push
mov
sbb
push
sbb
das
cmp
rcrl
add
jb
sub
out
stos
sbb
cmp
fidivrl
das
imul
lret
pushf
add
mov
add
pop
add
mov
inc
aam
sub
add
cld
mov
and
aam
jecxz
jp
repnz
inc
fistps
nop
daa
leave
add
pop
ret
aad
dec
cmp
mov
movsl
ds
and
out
scas
cmp
lret
inc
sbb
push
outsl
jle
in
pop
sarb
or
sbb
jne
cli
test
xchg
ds
push
jp
xor
sub
and
xchg
jle
adc
cmp
jae
cmp
or
faddp
ret
loop
add
mov
mov
faddl
push
aad
lahf
lods
out
inc
nop
and
and
fistpll
adc
adc
and
xchg
lret
fisubl
aaa
xchg
mov
out
add
test
push
jo
mov
cmp
xor
sbbb
int3
test
frstor
insb
repnz
mov
sbb
jo
adc
jecxz
lods
fld
lds
jp
inc
mov
push
xchg
cmp
cmp
add
sbb
cmp
lds
add
sub
xchg
jp
mov
mov
mov
push
cmp
cli
sbb
popl
push
inc
out
cwtl
sbb
arpl
cld
rorb
mov
xchg
xor
movb
or
and
lahf
mov
sbb
inc
xchg
insl
bound
and
add
outsb
lret
fldcw
daa
aaa
inc
push
jbe
sub
or
sbb
push
inc
es
inc
out
pcmpgtw
mov
adc
pop
add
imul
jmp
cmpl
push
pop
adc
shll
notl
bnd
mov
lods
lds
add
sbb
adcb
mov
xchg
loopne
test
inc
mov
mov
sub
cmp
mov
aas
clc
jno
lods
mov
test
fimuls
movsl
xor
sahf
jge
movsl
popa
jp
mov
lock
mov
je
adc
and
popf
pop
sti
adc
mov
jp
inc
les
or
push
pop
mov
inc
cmp
mov
ffree
popa
cmc
cltd
mov
pop
and
cmp
jnp
push
es
loop
sbb
add
lds
cmp
cwtl
or
inc
decl
pop
cli
out
aaa
lret
outsb
js
push
popa
xor
cmp
ret
outsl
arpl
mov
fs
out
lret
pop
fnstsw
cmp
push
push
in
sub
hlt
jge
cmc
inc
scas
repz
jne
cmp
dec
lods
lahf
or
lock
stos
subb
movsb
jl
adc
jb
std
jmp
mov
test
inc
mov
fs
mov
fdiv
loop
rcr
pop
imul
jne
mov
jp
mov
cmpb
stc
insb
data16
adc
and
orb
in
rcll
in
test
and
inc
add
scas
std
inc
jne
in
imul
test
aam
sub
add
imul
in
mov
test
insl
add
loop
icebp
sub
and
out
adc
mov
orl
add
and
sbb
ret
cmpsb
xor
cs
and
sar
stos
cmp
ret
sbbl
in
and
and
cmp
popf
icebp
add
mov
nop
scas
jl
aaa
or
ret
aam
pop
push
cmp
xchg
sbb
arpl
insl
sbbl
pop
dec
mov
push
add
mov
daa
xchg
lds
sub
inc
or
dec
ret
dec
jmp
fildll
inc
sub
xchg
add
or
cltd
jno
xchg
and
push
test
ret
sbb
xchg
jecxz
mov
mov
mov
loopne
jp
pop
sub
cmp
daa
inc
cmpsb
or
or
cwtl
pop
push
cmp
mov
push
and
cmp
out
cmpl
or
jo
dec
addr16
push
inc
push
fisttps
dec
cmp
popf
mov
xor
sbb
stc
cwtl
and
test
les
test
mov
jle
pop
adc
cltd
dec
xorl
cmp
push
inc
sub
and
enter
and
ret
lods
push
xchg
out
pop
xor
pop
add
aas
mov
sarl
bound
dec
pop
rcrl
shll
push
aad
add
xlat
inc
cmp
scas
jo
adc
daa
lret
es
mov
out
sbb
pop
std
incl
stos
lahf
jns
sbb
push
repnz
ljmp
jle
fidivrs
scas
test
xor
or
in
dec
icebp
int
pop
or
dec
jp
pop
sub
test
xor
fsubs
mov
imul
mov
cmp
fcmovnb
scas
dec
icebp
jne
cwtl
add
lock
lahf
pmulhw
add
xchg
rolb
pop
loopew
pop
andl
pop
aam
mov
or
inc
mov
mov
jno
fstl
push
mov
jns
jnp
pushf
rorl
adc
pop
pop
xor
xchg
jb
daa
scas
dec
xorb
sbb
test
jne
mov
sbb
outsb
mov
inc
mov
adc
fwait
gs
jmp
aaa
pop
mov
fidivrl
mov
inc
imul
cmp
cmp
insb
mov
ds
sub
adc
mov
jne
jbe
jp
dec
sbbb
sbb
in
adc
addr16
or
xchg
xchg
sbb
in
xor
fcmovb
dec
push
mov
cli
xor
ret
sbb
or
add
stos
push
jns
leave
and
push
push
ret
hlt
push
jmp
inc
and
sbbb
daa
cmp
push
add
out
mov
mov
popa
es
push
xchg
jmp
xor
rorb
insl
sbb
dec
lods
iret
xchg
cmp
sub
add
push
leave
fistl
or
cs
out
cmp
cmp
jle
add
inc
mov
insl
mov
pop
jp
mov
add
jmp
cmp
and
jecxz
xchg
mov
add
les
or
ja
aad
nop
rcll
rorb
dec
dec
add
mov
sti
xor
jl
jne
pop
aam
aad
jecxz
mov
loope
xchg
or
xor
adc
xlat
cmp
in
imul
outsb
add
add
sar
mov
test
or
es
and
ja
xchg
clc
cs
pushl
xchg
xchg
test
mov
jle
jae
and
cmpsl
mov
mov
mov
das
and
faddl
clc
xchg
and
push
xor
out
cltd
mov
mov
xlat
add
mov
lods
sub
add
cmc
jg
out
cmpsl
sbb
mov
push
sub
push
arpl
and
stc
push
sub
xor
cmp
jg
pop
enter
xorb
sti
xchg
sbb
hlt
inc
in
mov
inc
loop
pop
fildll
cmp
fdivrl
sbb
or
add
in
sub
je
add
in
pop
mov
enter
mov
xchg
mov
sub
xor
or
pop
adc
dec
jecxz
add
lret
stc
stos
push
sbb
mov
dec
sub
popf
fadds
and
test
pop
scas
add
daa
gs
jbe
loopne
std
cmp
cli
int
and
mov
or
mov
lea
inc
cmp
incl
jecxz
add
insb
sbb
dec
mov
aaa
ds
sub
xchg
out
inc
shrl
mov
adc
jmp
je
add
lock
fsts
shll
inc
cmp
loopne
fwait
sbb
outsl
jbe
fists
rsqrtps
mov
add
sbb
dec
and
inc
cli
mov
inc
or
insl
inc
repnz
cmp
add
into
mov
aam
add
aaa
sbb
adc
add
enter
clc
adc
int
fidivs
inc
pop
hlt
lcall
adc
xor
inc
inc
adc
lods
push
dec
cld
arpl
pop
add
rolb
or
daa
aaa
cs
add
lods
sbb
add
add
xchg
pop
fdivs
gs
adc
lods
xchg
and
xchg
lcall
jns
pop
dec
loope
add
mov
inc
add
dec
push
dec
add
je
jg
stos
xchg
rcrb
pop
bound
push
pop
iret
xor
add
and
or
mov
sahf
rcrl
fisubs
add
and
nop
add
sarl
mov
rorb
lds
das
add
sbb
sti
add
shll
outsb
jecxz
scas
add
add
jne
push
add
add
push
fmul
lock
stos
push
adc
mov
mov
lret
lods
aas
cmp
sbb
xor
out
scas
xorl
sub
mov
or
cltd
mov
add
mov
aam
std
inc
out
xchg
push
dec
push
es
pop
and
test
add
bnd
into
cmpsb
imul
pop
add
push
dec
cpuid
xlat
add
aas
sub
fdivrl
and
incl
add
push
jg
inc
fcoms
mul
cmp
repz
fwait
test
inc
nop
mov
mov
cmp
jle
xchg
add
emms
shrb
dec
mov
mov
sbb
aas
fcoml
xchg
arpl
jp
add
inc
ds
inc
add
push
loop
call
push
dec
popf
outsb
jno
xchg
sarl
mov
es
in
cmc
icebp
js
lods
sub
mov
xchg
repnz
cmp
mov
cmp
add
mov
mov
fsubr
xchg
ret
jp
ds
out
add
add
xchg
pop
aaa
sar
inc
xchg
dec
aad
insb
shr
ds
iret
pop
dec
aas
outsb
in
mov
adc
dec
imul
testl
add
add
iret
popf
ja
add
jbe
out
imul
daa
add
mov
add
or
jge
rclb
test
adc
add
mov
xchg
add
dec
je
inc
sahf
in
pop
xor
mov
mov
fsub
bound
or
movl
mov
movsl
das
mov
add
lret
mov
pop
add
inc
jb
mov
imul
sbb
mov
mov
jnp
pop
xlat
cld
add
fisttpll
add
sbb
ficomps
mov
ret
shufps
out
dec
dec
pop
inc
sub
pop
rcll
xchg
xor
push
inc
lds
into
movsl
add
inc
fistpll
add
cltd
loope
jl
jno
pop
sub
or
sbb
daa
push
sub
jne
jge
mov
adc
movsb
xchg
xchg
pop
lods
jbe
ret
in
mov
addr16
aam
fbld
push
cmp
push
lret
fmulp
cmpsl
or
mov
hlt
sub
push
stos
cs
out
je
xor
cmp
mov
hlt
imul
inc
mov
add
addl
adc
push
es
add
lods
outsb
adc
cmp
rol
pop
dec
rorl
push
out
mov
or
mov
add
xchg
out
xchg
arpl
les
outsl
mov
mov
jle
inc
adc
jle
pop
cmpsl
out
clc
dec
cwtl
push
push
pushf
fiadds
daa
scas
inc
mov
dec
add
mov
fcoms
mov
sbb
cmp
andb
sbb
inc
sti
mov
testl
lock
xchg
lods
out
out
jl
pop
bound
mov
jbe
leave
mov
cmp
int
dec
push
cli
xchg
mov
xor
int
fisubl
xchg
pop
or
add
push
or
pop
arpl
push
jecxz
test
add
fists
in
lret
mov
or
jb
jbe
and
sbb
cmp
add
pop
addl
lods
lea
iret
out
add
mov
roll
das
mov
fiaddl
fnsave
sub
push
call
mov
out
mov
cmpsl
lock
mov
lahf
fcoms
jns
pop
jbe
add
cmp
testl
or
shll
pop
dec
and
loopne
dec
cmp
adc
bound
push
fildl
arpl
jae
add
inc
jb
leave
push
pop
dec
xchg
aad
adc
xor
cmpsb
aaa
in
imul
addb
rcll
jns
call
and
or
cmp
jno
jle
ret
add
ret
push
push
add
pop
imul
sub
and
and
cltd
rcll
cmp
ret
inc
jge
xchg
mov
add
pop
cvtdq2ps
std
roll
sub
lret
rorl
add
jae
jnp
add
mov
inc
inc
call
cwtl
adc
pop
cmpsb
aaa
pop
leave
into
add
add
cmp
jae
mov
movsb
mov
rcrb
or
ret
arpl
dec
pop
in
pop
push
lods
cmp
or
pop
pop
rcl
mov
and
xor
scas
out
add
sub
xor
faddl
ds
mov
add
xchg
and
jb
mov
add
or
pusha
inc
jp
or
mov
inc
ret
js
jns
mov
addl
popa
enter
divl
push
jg
cmp
out
sbb
push
cmp
add
xor
fildll
mov
jmp
ret
add
cmp
hlt
pop
add
cmp
test
movb
jne
push
push
mov
lds
gs
mov
fidivl
shl
pop
mov
cmp
sub
stos
cltd
mov
roll
mov
ret
and
mov
push
xchg
add
jnp
sbb
xchg
dec
bound
add
push
cmp
rol
push
mov
sub
pop
pushf
sub
dec
loopne
nop
inc
or
mov
push
icebp
push
jp
add
mov
add
ss
push
enter
outsl
les
insl
je
loope
xchg
insb
repz
inc
mov
lds
xor
pushf
and
add
sahf
jg
aas
jge
inc
and
rolb
mov
dec
movsl
cltd
inc
daa
dec
cmpsl
lret
add
fldl
or
cli
aaa
std
sbb
cmpsl
addr16
fwait
xor
add
push
lock
add
add
lahf
pop
add
mov
out
sbb
aad
test
aam
mov
insl
mov
xchg
dec
jmp
icebp
sahf
movsl
sub
pop
fdivs
repz
sarl
inc
adc
in
divps
pusha
xchg
nop
xchg
pop
add
push
cwtl
xchg
lock
xchg
lahf
push
ret
mov
mov
pop
lcall
xchg
add
sbb
add
insl
dec
sahf
sbb
movsl
stc
inc
xchg
pop
dec
insb
lret
xor
add
sub
and
xchg
hlt
adc
cmp
and
push
ret
inc
sub
add
sbb
std
inc
pop
fiaddl
cmp
cmp
ret
push
or
or
aam
les
lcall
adc
cld
dec
xor
push
jnp
fbstp
mov
xchg
dec
add
scas
add
stos
xchg
mov
cmp
adc
lods
add
popf
out
shll
jns
add
shlb
add
inc
arpl
mov
cmp
and
add
jecxz
add
fistpll
adcl
add
cmp
mov
cmp
std
push
sub
add
or
testl
les
push
add
bound
mov
inc
xor
add
cmp
pushf
gs
mov
int3
dec
loope
dec
jl
rorb
dec
cmp
mov
imul
pop
jb
and
shrl
add
ljmp
movsl
sub
ret
xor
xchg
jmp
shl
sbbl
inc
add
ljmp
clc
rolb
jnp
jne
and
ja
xor
mov
jo
repnz
xor
shrl
movsl
cmp
dec
dec
rorl
cli
cmp
xchg
xchg
data16
pop
out
xorb
push
mov
inc
sub
xor
add
ss
add
pushf
int
add
shrb
inc
sub
push
cmp
cmp
flds
test
in
rcl
inc
outsl
test
add
popa
cmpsb
or
adc
and
add
and
sarl
jnp
cwtl
mov
rep
pop
push
add
lock
mov
add
sub
push
add
push
cmpsl
dec
movl
add
cmp
add
mov
xchg
xchg
test
dec
aaa
add
icebp
repnz
add
mov
xor
push
or
cmc
inc
inc
mov
or
adc
lods
push
add
sub
add
inc
push
in
test
jmp
imul
sbb
fnstenv
sub
add
pop
inc
jnp
shr
enter
and
cli
lret
inc
jle
jecxz
and
rorb
ds
mov
out
mov
shll
dec
inc
mov
sbb
aam
sbb
pop
out
xlat
loopne
add
xor
add
sbbb
adc
add
mov
add
add
mov
or
cmp
das
add
pop
jge
cmp
pop
sbb
daa
adc
rol
mov
sub
sub
call
loop
adc
std
aad
inc
mov
xor
ret
stos
add
negl
mov
add
and
inc
lock
mov
xchg
lods
inc
push
loope
popf
flds
cmc
dec
push
rclb
add
daa
push
bound
and
ret
rorb
xchg
jo
shrl
and
fsubrs
pop
add
push
aad
add
push
mov
sbb
push
pop
add
stc
test
nop
stos
out
lahf
sbb
mov
aaa
aam
jmp
mov
test
sub
jg
add
xor
and
sub
iret
add
loopne
push
iret
leave
dec
and
test
out
adc
xor
sbb
scas
jl
push
sahf
dec
add
mov
mov
sti
add
xchg
fwait
outsl
faddl
aaa
mov
lahf
xor
pop
das
in
lods
pop
rcll
out
add
idivl
push
add
xor
or
cmp
bnd
inc
push
adc
xchg
push
sbb
jp
je
add
outsl
lcall
jmp
mov
sahf
inc
test
sbb
negl
movsb
lahf
xor
repnz
nop
arpl
fisttps
scas
popa
fisubrs
in
test
add
jg
outsl
fs
outsb
cmp
loopne
add
nop
add
cmpsl
jg
or
xlat
add
je
test
ficoml
jl
scas
add
jae
push
ret
sub
xchg
or
faddp
subb
scas
xor
sub
mov
mov
dec
add
lret
loop
add
aaa
xchg
rcrl
gs
test
daa
add
cmp
or
ss
movsb
add
out
add
psubusw
das
xchg
add
into
loope
add
jl
ret
cmp
jbe
or
jae
adc
add
jnp
or
add
push
in
dec
add
idivl
dec
arpl
pop
add
icebp
out
test
jb
pop
add
dec
daa
dec
popa
je
mov
loopne
add
shrb
ret
sub
and
stos
xchg
dec
cmp
sbb
popa
pop
cmp
mov
inc
adc
ds
dec
sar
stos
sbb
cmp
add
dec
fmuls
icebp
ljmp
sbb
push
cmp
loop
xor
jp
xor
add
pop
add
pop
out
jnp
rcl
data16
iret
jne
ds
jge
aad
cmp
xchg
xor
mov
fs
orl
ss
ret
test
xchg
push
rolb
pop
icebp
add
aam
int3
xlat
and
xchg
mov
lret
stc
fcmovb
cmp
enter
sub
sbb
cmp
xchg
mov
into
sbb
mov
sbb
mov
jmp
nop
out
mov
push
bound
push
inc
sub
lahf
xchg
and
dec
shr
jb
fwait
mov
test
and
repnz
adc
mov
add
lock
popl
bound
jbe
sub
inc
sbb
adc
and
ret
out
cld
dec
add
repz
or
sbb
out
jno
imul
negb
lret
popf
add
addb
imul
in
insl
insb
in
mov
lds
fidivrs
pop
popl
loop
sbb
daa
adc
pop
imul
cmp
jge
push
bound
cs
enter
add
test
mov
add
jle
dec
out
leave
repnz
adc
push
pop
push
fnstsw
xchg
repz
mov
jbe
and
mov
cmp
mov
and
pop
push
push
push
xchg
add
rorb
push
or
jg
inc
out
out
xchg
ss
dec
push
test
mov
sahf
mov
out
inc
xchg
mov
lret
inc
shll
add
mov
xchg
gs
jno
es
test
clc
xor
sbb
js
das
mov
jp
aam
subb
hlt
or
cmp
xchg
jp
ljmp
inc
orb
mov
jo
add
test
and
popf
and
jne
sbb
xlat
xor
cmp
scas
adc
mov
mov
mov
sbb
inc
ja
add
jecxz
in
sub
test
or
loope
adc
sbb
movsb
ljmp
inc
fs
mov
aam
lods
out
mov
pop
rorb
addb
pop
sar
stos
loopne
inc
mov
add
jb
loop
lcall
mov
pop
push
add
mov
pop
mov
js
into
adc
xchg
nop
mov
movsb
mov
xor
mov
add
lret
adc
lea
sub
arpl
mov
push
mov
roll
mov
xor
ss
bound
cli
movsl
cmp
inc
ret
and
mov
or
outsb
aaa
test
add
stos
push
ja
push
out
and
adc
outsb
inc
aad
pop
adc
mov
cmp
push
sub
xchg
inc
xor
outsl
push
rcll
bound
inc
rol
loopne
loope
sbb
or
push
outsb
imul
and
sub
push
nop
inc
lahf
iret
sub
ret
add
dec
inc
and
and
pusha
mov
mov
rcrl
andl
decl
fwait
inc
jp
sub
scas
cltd
or
push
add
xor
lahf
mov
fcompl
dec
cld
jmp
jnp
mov
sbb
mov
es
xchg
hlt
lock
or
insl
mov
lods
out
jne
outsl
sub
lahf
cs
cmp
jge
cmp
loop
mov
cli
xchg
movsb
rcl
lods
cmp
push
push
cmp
leave
aad
or
aas
mov
add
imul
mov
inc
stc
jge
and
lds
push
sahf
mov
jl
dec
nop
lret
xor
shr
jbe
repnz
inc
nop
pop
pusha
or
lods
aam
shrb
mov
inc
cmp
test
adc
xor
pop
or
dec
cmpsb
lock
push
push
mov
or
aas
imul
in
adc
jbe
xchg
xchg
movb
inc
test
add
mov
pushf
add
push
sahf
push
or
imul
dec
in
lret
jno
cmpsl
mov
sbbl
xlat
jnp
add
ja
or
mov
and
out
inc
rorb
push
or
sub
fnstsw
sub
movsl
push
dec
add
pop
cmc
sub
push
mov
adc
add
movsb
inc
mov
es
popf
pop
inc
es
add
dec
inc
test
ret
inc
add
add
mov
inc
add
dec
stc
push
sub
push
adc
push
sbb
movb
ret
mov
jmp
aaa
add
pushf
lret
adcb
btr
add
jecxz
loope
mov
add
or
mov
sub
fdivl
jecxz
hlt
xor
inc
cmp
mov
je
lds
dec
dec
popl
xchg
insb
lock
cs
cmp
push
in
sub
fwait
jo
adc
in
sbb
test
mov
dec
xor
sti
addl
xor
pop
lret
popf
out
loopne
xor
rcr
clc
cs
and
or
xchg
sbb
pop
or
cmp
mov
mov
loopne
sbbl
xchg
dec
or
push
push
popf
add
popa
in
pop
dec
mov
pop
mov
arpl
pop
mov
lret
jle
inc
rcr
add
test
adc
or
insb
and
shrb
addr16
mov
test
cmpb
pop
and
bound
fsubr
shlb
dec
pop
cmp
int
aas
mov
jae
sub
popf
pusha
cmpsl
mov
mov
jmp
add
movsl
mov
pop
adc
jbe
fldcw
das
sub
mov
lcall
sub
cmp
andl
pushf
leave
add
mov
repnz
ja
pop
into
cwtl
lahf
es
sbb
adc
xchg
xor
push
ljmp
test
cmp
iret
addr16
jns
mov
loopne
add
xchg
mov
jecxz
and
or
test
cmp
inc
clc
fs
into
jae
repz
repz
add
out
add
je
mov
loopne
jmp
xchg
inc
or
and
add
cmc
pushf
ret
mov
and
xchg
arpl
adc
add
mov
lahf
jne
data16
xor
xlat
xor
cli
mov
sub
lods
sbb
lret
jge
popa
adc
adc
stos
cvtps2pd
hlt
sbb
je,pn
fmuls
mov
lods
imul
mov
jb
jg
jmp
outsb
add
fcmovnbe
jecxz
repnz
aad
mov
pushf
sbb
sti
add
push
nop
push
jecxz
xlat
aas
add
stos
fcmovu
mov
pop
mov
jb
pop
sbb
xchg
stc
into
lea
fwait
add
lods
aaa
and
sbb
add
das
cmpl
idivl
nop
add
notb
dec
mov
add
in
test
xchg
aam
xchg
inc
jle
outsl
inc
sbb
add
inc
xor
xchg
loope
mov
mov
cli
sarl
and
ja
push
sub
xor
fmull
xorl
decl
add
push
dec
xchg
add
aad
adc
or
and
jp
fbld
mov
cmp
in
loope
aam
jno
loopne
cmp
ss
lds
jae
and
xor
cld
pop
mov
cld
or
out
scas
xor
jle
push
xor
loope
cmp
lret
mov
jge
loop
outsb
jo
add
imul
jae
mov
adc
adc
mov
fstpl
pop
mov
xchg
jno
ret
and
adc
cld
cmpsb
shrb
fcompl
adc
dec
pop
mov
add
jp
inc
xchg
icebp
loopne
and
pop
pause
and
push
add
dec
mov
pusha
mov
mov
and
push
or
jnp
pop
fs
or
repnz
testl
nop
lcall
enter
mov
inc
gs
sub
add
andb
fistps
or
aaa
and
in
inc
pushf
dec
and
stos
ret
into
sbb
loopew
jle
movsl
lret
pusha
sub
jle
inc
std
jne
jmp
sbb
adc
lea
rolb
mov
sub
dec
lcall
xchg
mov
sub
mov
mov
dec
jne
aas
and
or
fsubl
pop
daa
push
test
push
call
xchg
jp
sub
dec
out
aas
xchg
test
cmp
mov
mov
out
mov
jbe
mov
sbb
shll
mov
jge
inc
mov
cmpl
mov
push
sahf
scas
jp
loopne
mov
mov
inc
push
inc
aas
sub
mov
dec
cmp
push
rcrl
cmpb
push
ret
jae
les
outsl
sub
dec
out
sub
movsb
inc
xor
shr
sub
iret
lea
inc
insl
sbb
mov
mov
pushf
cs
push
sbbl
test
ds
lock
aad
cmp
adc
xlat
mov
jp
in
mov
xor
add
add
xor
push
sti
add
loop
arpl
cmp
and
jne
jge
test
testl
mov
ficompl
inc
ds
int3
mov
outsl
push
loope
scas
ret
and
je
push
mov
jns
sub
inc
sbb
daa
pop
jp
call
fnstcw
add
sbb
out
cli
xlat
aas
or
pop
inc
jl
mov
or
fs
das
mov
aaa
push
xor
pop
rolb
les
addr16
cmp
dec
cmp
fucomp
movsb
fsubrs
mov
int3
adc
scas
push
push
popa
mov
lds
jle
add
sbb
sbb
stos
jne
cmp
lret
lds
lock
push
or
in
cmp
pusha
or
std
inc
and
outsb
cld
leave
outsl
lds
push
subl
jmp
mov
sbb
insb
mov
xchg
lret
pop
ljmp
dec
jbe
mov
popa
hlt
jns
sbb
jnp
ret
outsl
lea
mov
xlat
sub
rolb
test
jecxz
xor
imul
dec
addb
push
ret
sub
scas
lods
rorl
in
rcrb
dec
xchg
sub
popf
mov
ret
clc
mull
in
jae
iret
lahf
ficompl
inc
sti
bnd
or
lods
test
mov
or
or
aas
xchg
add
xor
add
mov
adc
mov
das
add
pop
call
or
mov
mov
pop
add
mov
or
lea
in
and
in
ljmp
aas
inc
and
lods
insl
dec
icebp
ret
clc
pop
imul
mov
out
pop
and
cmc
in
xor
sub
pushf
sbb
add
xor
jmp
in
add
fwait
jnp
adc
adc
iret
aad
int3
cmp
sub
inc
in
std
add
mov
xchg
test
clc
push
cmpsb
mov
shlb
add
cmp
js
mov
dec
add
popf
stos
xor
cmpsl
xchg
add
lea
sbb
in
add
add
lds
loopne
or
cmp
in
fs
mov
adc
mov
in
rolb
stos
ret
pop
dec
jp
add
xor
adc
add
adcb
dec
sub
adc
sbb
jmp
insb
or
into
or
sub
ja
test
orl
loop
pusha
mov
sub
roll
movsb
add
ret
xchg
popa
dec
xchg
out
jecxz
mov
es
test
shl
pop
add
dec
or
pop
xchg
add
es
mov
mov
ljmp
and
rorl
xchg
ret
cli
loop
jno
cmp
mov
loope
cmpb
add
push
out
or
add
clc
xchg
sbb
and
inc
ffreep
inc
jle
in
je
les
adc
movsb
in
jne
arpl
leave
cmp
push
jg
add
fldcw
loope
mov
push
cmp
and
cmp
loop
outsl
cwtl
inc
fs
add
invlpg
or
fisubl
sub
push
add
scas
mov
repnz
dec
insb
sbb
loopne
rolb
pop
popf
jae
stos
fcoms
cltd
add
or
jmp
out
gs
sahf
rolb
cmp
bound
sbb
xor
xchg
xchg
in
push
adc
cmp
mov
int
iret
rolb
aaa
mov
lock
sub
test
adc
adcl
pop
pop
fists
jbe
es
mov
insb
aaa
push
or
dec
cmpsl
or
addl
fiaddl
iret
adc
dec
aas
lea
mov
stos
test
push
cmp
push
loope
pop
jne
mov
cmp
xchg
inc
ja
inc
pop
insl
cmc
mov
sahf
lock
xchg
fsubl
shrb
xchg
fstpt
pop
jg
in
ja
ss
jl
mov
push
hlt
pop
popa
adc
xchg
fs
dec
mov
roll
sub
les
add
adc
jmp
insb
add
pop
sbb
enter
add
jp
mov
add
lds
ror
or
stc
mov
add
outsb
shr
add
fstpt
dec
mov
sub
test
shl
push
mov
mov
lds
iret
loopne
bnd
or
xchg
inc
cmc
jae
inc
lret
xor
adc
add
pop
and
pop
inc
mov
add
lret
movl
arpl
out
jae,pt
sbb
mov
sbb
movl
out
add
cmc
cs
arpl
out
fildll
xor
movsb
jne
cmp
push
call
cwtl
andnps
inc
jg
inc
mov
cmp
rcrl
jg
in
inc
push
and
out
xchg
fdivs
rcl
pusha
out
imul
arpl
dec
pop
or
popf
push
or
popa
inc
jge
orb
xchg
daa
sbb
popf
or
fadds
gs
pop
jle
imul
cld
stos
jmp
iret
addb
sti
xor
les
adc
mov
or
push
mov
mov
cwtl
lret
cmc
adc
cs
adc
or
jmp
jmp
add
jp
gs
jecxz
pop
fistpll
insl
cwtl
dec
jmp
push
sbb
loopne
push
test
jae
xchg
or
js
ss
aas
sub
jo
lods
or
sarl
mov
and
adc
movsl
jb
aaa
push
pop
shrb
outsb
scas
xor
inc
mov
cmpsb
xchg
and
pop
arpl
data16
mov
xchg
bound
jecxz
xchg
jp
cwtl
rolb
and
daa
mov
mov
cmpsl
adcl
xchg
sbb
inc
sub
inc
mov
adc
dec
lds
add
ret
mov
pop
addr16
cmc
into
mov
jl
int
mov
push
inc
add
sti
addb
rolb
sbb
jge
adc
test
cmc
xor
xchg
add
sub
cmp
add
insl
out
add
dec
bound
jb
insl
sbb
sbb
and
and
mov
sbb
mov
or
rcrl
xchg
clc
cli
add
push
iret
icebp
rcrl
adc
and
pop
shll
mov
and
and
xchg
xor
add
nop
out
dec
jns
adc
add
and
aad
jmp
xchg
icebp
xchg
push
fimuls
push
and
lret
add
mov
mov
mov
jmp
add
cmp
add
lret
repz
or
jae
out
add
cmc
add
push
cmp
in
subl
mov
int3
inc
addb
and
pop
repz
mov
std
test
adc
pop
push
mov
xchg
xchg
pop
add
aas
testl
ret
enter
sbb
add
rcrl
sbb
add
jae
inc
ss
negb
dec
rorl
sub
outsl
xlat
add
mov
jb
add
rcrl
cli
add
das
mov
outsb
mov
cmp
mov
rcr
mov
mov
or
adc
add
enter
loope
mov
nop
xor
shlb
push
jb
loop
bound
add
ja
jl
xchg
fdivrl
add
mov
out
sbb
in
sub
push
adc
pop
jge
repnz
je
sub
popf
cmp
add
xor
inc
cmp
adc
pop
movsl
ljmp
enter
mov
pop
and
aad
or
decl
bound
add
mov
cwtl
cs
or
sbb
add
fwait
xor
jne
add
push
enter
add
and
js
sbbl
sub
add
rcll
ss
and
shl
or
out
js
cmp
mov
jecxz
test
pop
fiadds
xchg
mov
push
add
mov
add
movsl
dec
and
adc
dec
ja
push
movsb
into
outsb
push
add
pushf
repz
xchg
add
push
movsb
xorl
mov
ret
dec
push
popa
mov
jecxz
ss
jl
sbb
cmp
hlt
outsb
add
divl
push
pushf
mov
nop
cwtl
test
pop
cld
sbb
or
cmpsl
xchg
stc
popa
sti
inc
sahf
sbb
and
inc
and
fwait
in
mov
inc
stos
rcll
add
ss
jb
push
push
mov
in
push
sti
ljmp
negb
add
sub
lea
mov
cmp
data16
add
push
sub
mov
jne
insb
adc
push
ret
loope
movsb
or
mov
sti
cmp
xchg
std
roll
inc
mov
add
jo
pop
mull
jae
sbb
or
inc
in
and
and
sbb
or
push
loop
ret
pop
sbb
and
jae
jb
xchg
inc
fdivrl
fisubrl
aam
push
dec
add
mov
mov
js
add
es
and
out
repnz
mov
aas
xchg
xor
lmsw
in
pusha
jecxz
testl
add
aaa
mov
idivb
setl
xchg
cmp
pop
xchg
jge
adc
adc
inc
xchg
test
js
lods
lahf
cmp
add
jl
xorl
or
inc
test
loop
dec
add
mov
jne
sahf
add
mov
jno
pushf
test
pop
add
cmp
push
add
push
sub
inc
mov
push
std
add
or
cwtl
add
incl
push
dec
xor
and
xchg
cmp
add
out
fcoml
imul
ljmp
adc
fwait
pushl
stc
push
shr
shlb
mov
pop
push
add
scas
and
shr
push
loope,pn
cmpsl
dec
pop
nop
add
adc
add
or
cmp
mov
xor
mov
xor
pop
jmp
jb
mov
cmp
insb
lock
mov
adc
popa
mov
rcrl
or
sbb
mov
cmp
jne
cmp
mov
movsl
jnp
pop
call
dec
es
pop
jne
movsb
jp
inc
mov
dec
ja
add
rorb
shrl
mov
add
call
xorl
inc
cwtl
sbb
and
aad
push
out
adc
addb
rcrb
cmp
mov
mov
test
je
add
xor
hlt
cmc
jnp
shll
mov
inc
add
xchg
sbb
add
lahf
popf
rcll
push
outsl
test
and
stos
mov
or
pop
and
adc
cmp
clc
nopl
xchg
insl
and
dec
fidivrl
add
xchg
fsubl
jbe
pop
jb
jno
add
mov
cmp
scas
add
push
cmp
push
and
adc
test
aam
or
add
pop
inc
hlt
add
clc
insl
loop
inc
cmp
aas
adc
pop
enter
idivl
cmp
cmp
or
or
xlat
add
dec
jecxz
xor
sbb
mov
xor
xchg
add
jg
dec
jl
mov
fs
shlb
out
sbb
shll
out
inc
mov
add
dec
testb
mov
jl
jb
filds
inc
xlat
cmp
mov
fiaddl
mov
cltd
aaa
mov
add
cmp
pusha
add
mov
jbe
leave
rolb
int
or
xor
lods
ror
imul
push
add
dec
clc
jbe
cmovo
insb
cmp
add
das
or
inc
add
test
pusha
xor
out
jae
inc
jbe
jno
dec
cld
ret
in
sub
fnstsw
test
push
jnp
mov
or
stc
xchg
addb
add
jno
arpl
mov
popf
inc
rolb
xor
cmp
cli
add
mov
inc
add
cltd
sbb
inc
addr16
add
out
fldt
add
ss
push
icebp
rol
out
ljmp
pushf
mov
sbb
mov
bound
jecxz
mov
pushf
sbb
mov
adc
sarl
mov
cmc
lods
add
arpl
cmp
cmpsb
jl
dec
or
xchg
jge
xor
add
xchg
push
mov
adc
add
sahf
mov
or
mov
xor
cli
lret
es
inc
fimull
movsl
jge
ds
std
add
mov
je
rolb
and
cmpsb
out
jl
out
jo
fwait
iret
dec
adc
mov
jae
jne
test
test
int
fildll
xor
into
rcl
in
mov
repz
or
inc
out
loope
pop
movl
xchg
test
leave
add
je
dec
mov
adc
jle
mov
or
jnp
adc
dec
sbb
repnz
dec
sahf
arpl
call
cmp
lds
shlb
mov
fcompl
push
inc
scas
lods
leave
push
daa
add
ret
lock
fildl
xchg
xor
or
inc
pop
mov
dec
mov
add
cmpsl
movsl
in
mov
push
jo
cmp
inc
add
ret
mov
sub
rcrl
mov
int3
inc
xor
xchg
jle
mov
push
imul
mov
test
add
jnp
lret
inc
loope
push
jp
xlat
orl
sub
push
jnp
jo
mov
add
cmpsb
in
xchg
arpl
pop
inc
fildll
push
mov
ds
xchg
mov
add
sub
inc
insl
aas
adc
stos
xor
cmp
and
mov
popa
adc
lods
dec
add
sbb
xchg
inc
xor
repnz
cmp
in
cmpsl
push
and
mov
inc
rcll
mov
jae
xchg
les
cmp
jmp
arpl
rcrl
mov
or
jge
sbb
rorl
pop
dec
cmpsb
sub
dec
lret
les
test
or
sbb
dec
inc
lock
adc
cmpb
add
sub
das
xor
mov
dec
or
mov
pop
dec
fildl
sub
inc
jae
xchg
ja
adc
mov
sbb
cmp
nop
loop
in
and
addb
jge
fiaddl
or
stc
adc
inc
daa
cmp
imul
jl
mov
mov
inc
mov
dec
inc
shll
mov
inc
int
push
ret
and
in
or
sahf
and
xchg
fisubrs
nop
xor
sbb
aaa
into
sbb
cwtl
test
mov
xchg
mov
add
pop
jp
das
and
mov
push
lock
pushf
dec
mov
jbe
xor
dec
arpl
sub
pop
add
jns
push
jnp
leave
push
pop
inc
imul
and
xchg
dec
movsl
lock
cmp
push
dec
sub
push
out
add
jp
loope
sbb
dec
cmp
lds
pop
cmp
or
and
xor
push
add
or
mov
dec
aad
cmp
pop
xor
add
sbb
movd
cmp
ja
adc
rcrl
xor
add
add
loop
cli
ljmp
in
daa
popf
lods
jmp
stos
or
scas
scas
sbb
push
jnp
sar
call
inc
sbb
mov
lods
mov
imul
xchg
dec
nop
cmpl
leave
xor
scas
xor
repz
sub
pmaxsw
cs
jns
xor
sub
das
mov
add
movsl
mov
scas
xor
imul
add
sub
jns
jnp
pop
fidivrl
jo
dec
sbb
jbe
xor
loop
ret
jecxz
roll
insl
cmpl
jp
inc
mov
xchg
push
inc
cld
cmpsl
loope
jecxz
aad
pmaxsw
mov
fs
int
mov
ja
mov
in
mov
test
dec
sbb
ds
and
mov
adc
pop
push
add
inc
sub
sbb
and
cld
mov
shll
xchg
in
add
in
stos
sbb
popl
adc
jo
jmp
in
loopne
xor
and
int3
add
leave
xlat
dec
adc
push
xlat
test
andb
sbb
fldt
lret
outsl
xor
lods
cmpl
fidivs
inc
push
xchg
out
popa
mov
out
mov
mov
movsl
xchg
cmp
inc
or
add
paddw
push
bound
or
xchg
jo
xor
xchg
push
jecxz
and
in
ljmp
xor
cmp
mov
mov
inc
push
jp
pusha
pop
ja
scas
push
fists
pusha
xchg
jmp
imul
cmp
adc
aas
pop
subb
cmp
mov
xchg
add
pop
jb
outsb
and
fistpll
adc
stc
pop
mov
lcall
add
or
jnp
aad
xor
inc
ret
jmp
push
fsts
mov
cmp
cld
orl
test
stos
out
dec
adc
orb
cmpsb
or
mov
sbb
jg
sbb
xchg
add
jne
sbb
mov
repnz
arpl
out
icebp
push
addr16
sbb
leave
push
push
jp
jb
lods
jae
nop
loope
adc
cmc
add
mov
shr
or
cmp
les
movsl
mov
es
add
mov
pop
lds
cmp
sub
test
imul
sbb
aad
mov
notb
adc
cmpsl
sarb
xchg
mov
cmp
std
xor
cs
cmpsb
pop
xchg
pop
mov
and
push
jo
lret
jns
pop
test
sbb
adc
pushl
mov
mov
and
mov
mov
adc
fwait
jp
mov
fidivl
sbb
popa
inc
les
outsb
and
inc
in
cmp
push
mov
test
mov
dec
cmp
cmp
out
jnp
shll
out
xchg
push
lds
mov
movsl
fisttpl
jecxz
add
xor
push
push
inc
xchg
mov
dec
xor
xchg
std
inc
push
jp
mov
mov
mov
mov
pop
push
lret
mov
bound
jae
mov
ret
or
xor
rcrl
and
movsb
insb
xor
call
inc
or
jbe
xchg
or
fldl
add
aam
bound
out
dec
mov
pop
or
push
adc
repnz
xor
xchg
xchg
or
arpl
pop
cwtl
popf
fiaddl
push
add
mov
and
mov
call
jmp
loopne
rcr
dec
mov
add
or
adc
mov
addl
scas
mov
or
adc
add
jge
and
xor
stos
ss
sbb
int
std
mov
jnp
rcrb
push
inc
bound
jb
adc
push
xchg
inc
mov
ret
in
mov
or
scas
xchg
cmp
dec
push
sbb
test
das
loopne
aas
dec
jl
insl
or
adc
sbb
dec
ja
push
sbb
jo
ret
pop
mov
aas
sub
cmp
insb
mov
mov
adc
arpl
or
sbb
add
mov
das
inc
jp
shll
or
sar
inc
and
add
push
mov
cmpb
add
inc
mov
orb
pop
sbb
insl
or
push
pop
jo
loope
mov
dec
sub
jp
mov
insb
stos
adc
nop
xchg
sub
push
mov
pop
mov
loop
daa
xchg
add
xor
out
pop
imul
and
pop
movsb
push
jecxz
xchg
mov
sub
ret
mov
or
jmp
sub
adc
xor
test
and
cmpsl
sub
push
mov
xor
adc
outsb
add
cmpb
gs
popa
fdivr
inc
daa
lahf
in
or
push
inc
xchg
movsb
lods
ja
dec
or
lahf
and
mov
mov
push
aam
lahf
jp
cmp
cmp
dec
and
sub
or
sarl
enter
scas
xor
roll
jmp
push
inc
cmp
cmp
into
dec
ret
ss
les
inc
xlat
nop
es
sbb
call
push
int3
add
cmp
mov
pop
lods
add
arpl
adc
ss
add
mov
js
push
pop
in
pusha
ljmp
inc
sbb
je
jmp
outsl
cs
add
ficompl
add
ss
jp
in
add
repz
cmpsl
sub
sub
add
outsl
dec
xor
sub
out
insl
adc
and
mov
out
xchg
add
push
sahf
bound
inc
stc
add
push
add
mov
call
mov
movsl
xor
dec
mov
jle
push
sbb
in
xor
fbstp
jle
and
mov
xor
dec
je
jmp
xchg
inc
inc
add
cmpl
imul
mov
aas
insl
inc
xor
shll
aam
mov
mov
int
jbe
fldl
cli
push
add
inc
pop
jg
stc
ret
xor
daa
es
jle
adc
and
movsb
sbb
popa
jbe
aam
mov
sarb
orb
push
loope
mov
stos
ret
fnstenv
push
add
cmp
add
in
mov
xor
sbb
das
repnz
aad
push
lret
sbb
lock
inc
pop
add
dec
hlt
idivb
jmp
sahf
mov
lods
xchg
scas
adc
push
inc
fbstp
mov
insb
or
inc
cmpsl
aaa
lret
adc
push
inc
dec
inc
in
aas
mov
xchg
xchg
jbe
push
nop
mov
sar
add
outsl
hlt
sbb
add
cmpsl
sub
or
pop
jp
mov
and
sar
rorb
dec
add
hlt
in
lcall
je
xor
sub
out
test
fmuls
movsl
add
add
mov
jecxz
enter
pop
mov
loopne
in
dec
shlb
or
das
pusha
insb
nop
sbb
xor
sbb
cmp
shrb
pushf
mov
mov
jle
sti
packuswb
dec
cmpsl
mov
xor
lods
sbb
push
stc
mov
test
popf
mov
pop
aam
mov
cmp
cmc
cmpsb
js
clc
divl
loopne
mov
orl
jg
add
scas
pop
pop
inc
and
push
movsl
fdiv
iret
cmc
loop,pt
int3
add
mov
fldenv
into
or
adc
xchg
test
in
add
out
pushf
sub
adc
ja
dec
inc
rcll
cli
andb
jge
mov
add
cld
lahf
push
add
dec
js
lcall
nop
add
inc
push
adc
bound
rolb
sub
loope
mov
xor
mov
mov
mov
sub
in
aam
xor
cmp
orl
and
mov
mov
sub
addr16
dec
dec
in
cmp
addl
inc
arpl
xor
ja
jge
push
cwtl
ret
sbb
pop
lahf
into
jg
add
iret
and
div
cmpsl
add
jp
int3
lds
add
shlb
aaa
add
std
mov
cs
xor
add
mov
sbb
call
xor
fs
int
xlat
cmp
dec
lea
jp
das
jbe
xchg
xchg
sub
in
cmpsb
inc
paddsw
aas
inc
or
fcmovb
pop
mov
mov
jno
data16
nop
add
add
lcall
enter
xor
cmp
les
out
jle
mov
pop
dec
push
cmp
add
lcall
xchg
pop
inc
pop
adc
push
and
add
mov
mov
popf
mov
int
fstl
addr16
cmpsl
test
xchg
jae
add
clc
mov
rol
or
in
movsb
ja
sbb
fisubl
push
fbld
push
xchg
cs
mov
divl
add
mov
inc
or
mov
push
add
loope
push
hlt
mov
addb
xchg
dec
sbb
rolb
cmp
xor
sub
jnp
dec
div
mov
push
pop
xor
mov
push
xchg
add
inc
cmp
add
xchg
mov
sbb
les
cwtl
push
inc
ss
push
sub
dec
inc
cld
jbe
add
pusha
cmp
sbb
test
mov
mov
add
popf
cmp
icebp
sti
cmp
and
aad
faddl
hlt
enter
insl
xchg
addl
int3
jne
int
jmp
pusha
mov
push
cwtl
maskmovq
testl
and
movsb
sarl
fstpl
jbe
sbb
mov
sbb
cmp
fwait
repz
mov
int3
lahf
cld
push
mov
xchg
aaa
xor
or
sub
add
mov
in
inc
scas
jne
and
dec
outsl
cld
xor
cmp
jmp
push
pop
inc
mov
js
loope
xchg
outsb
cmp
sbb
add
jno
in
push
dec
add
ds
imul
inc
add
sti
loope
and
cltd
pop
xor
mov
and
or
cmc
sub
rorb
and
push
push
adc
and
rcrb
and
jb
int
arpl
xchg
cmp
adc
add
adc
add
lods
lahf
movsl
int
pop
add
xor
roll
sbb
or
and
cwtl
imul
push
shrb
cmp
shll
or
pop
pop
arpl
push
je
aam
lods
inc
lret
jnp
cmpsl
stos
js
jne
push
and
xchg
cmp
roll
mov
or
push
inc
fidivs
mov
bnd
aam
add
adc
cmp
pop
adc
insb
sub
and
mov
nop
scas
addl
add
scas
mov
imul
add
lods
push
fs
test
mov
cmpsb
push
xchg
and
xchg
cld
in
in
mov
out
cmp
push
insb
add
sub
mov
jp
inc
call
test
xor
xchg
pop
jno
cmpsl
adc
in
imul
aad
add
in
fisubrs
sbb
insl
stos
push
cmp
push
out
add
inc
mov
mov
lds
call
jle
ficoml
or
xchg
dec
xchg
cs
je
xchg
push
or
ret
add
ss
lahf
pop
add
pop
cmc
jnp
dec
dec
mov
mov
mov
inc
incb
xchg
aaa
ljmp
sub
sub
int
xor
popf
imul
iret
jle
cli
pop
adc
hlt
push
addr16
pop
adc
add
cmpsl
es
jecxz
cmp
js
clc
shl
cli
scas
add
pop
ret
cmp
xor
fnstsw
lds
cmp
cmp
dec
aaa
roll
pop
subl
and
dec
pop
shr
sub
lods
cmp
jmp
test
add
jp
sti
mov
xor
inc
ljmp
sarl
mov
mov
or
xchg
mov
and
std
or
xchg
cwtl
add
pop
nop
inc
lods
sub
push
add
popf
mov
add
fstps
mov
dec
lcall
mov
gs
addb
ret
cltd
push
daa
mov
jecxz
push
inc
cmp
add
xor
xor
jns
push
mov
pop
add
cmp
mov
xchg
cld
mov
aad
lcall
or
inc
lahf
outsb
add
mov
cli
add
dec
in
mov
add
dec
or
sub
pop
jb
cmp
insl
in
stos
jl
or
jmp
add
xchg
rcrl
sub
jns
push
sub
sub
add
scas
mov
dec
pop
or
stc
inc
in
and
ret
add
push
adc
lock
dec
mov
push
add
or
push
mov
stc
fidivrl
jl
mov
xor
stos
mov
adc
sbb
subb
ja
sbb
add
push
and
mov
adc
jne
mov
inc
jp
pop
inc
sbb
jne
cmp
outsl
cmp
pop
mov
xor
and
movsb
adc
and
or
imulb
adc
shll
cmp
pusha
sarl
dec
xlat
xorb
mov
in
insl
mov
add
mov
add
lahf
xor
fiadds
sub
lods
out
dec
popa
xchg
roll
inc
das
push
cmp
test
cmp
mov
push
incb
xor
sbb
adc
or
aas
lods
sbb
insb
call
xchg
xor
add
mov
mov
dec
pop
mov
mov
push
je
cmp
adc
sbb
ja
mov
pop
cmp
daa
popa
pop
pop
out
add
mov
sbb
jno
or
pusha
jb
inc
dec
iret
cmp
lock
xchg
push
dec
and
adc
arpl
or
sub
test
xchg
pop
cmpl
cmp
imul
inc
mov
mov
mov
inc
scas
adc
lcall
leave
stos
or
add
jg
daa
cld
out
pop
into
add
out
sub
cmc
ror
in
push
mov
jns
dec
xor
sahf
sarb
sub
out
add
xchg
adc
ret
and
test
mov
add
push
add
imull
shll
xchg
nop
fdivrl
shlb
and
jae
add
and
or
lods
stos
sub
std
add
and
add
adc
inc
push
fsubs
add
ss
push
adc
add
mov
loopne
test
lea
add
xchg
out
sbb
xor
lds
mov
ffree
orl
test
mov
mov
out
dec
lea
pop
jg
dec
mov
or
push
xchg
xlat
pop
dec
add
inc
inc
jg
push
sub
inc
and
test
add
xchg
leave
jnp
add
jmp
dec
cwtl
add
cld
add
add
test
jle
neg
add
mov
pop
add
into
ja
popw
dec
add
pop
xorb
notb
add
jge
and
aam
and
push
scas
mov
dec
xlat
pop
bound
mov
add
push
jg
xchg
fisubrl
or
push
cmp
push
xor
add
xchg
dec
mov
cmp
push
and
insb
sub
cwtl
inc
add
in
add
jns
push
in
lods
lock
fcmovne
mov
fisubrs
shl
add
bound
adc
ret
shl
pop
addl
repz
inc
mov
cli
jo
lret
loop
enter
in
push
push
in
aaa
add
jbe
push
adc
xor
mov
pop
lock
xor
cmp
subl
add
jg
loope
push
mov
add
outsb
pop
jge
adc
sarl
dec
pop
lahf
shlb
or
pop
push
ss
jnp
out
fsubrl
out
sbb
imul
xor
jno
es
psrlw
and
xchg
mov
push
push
imul
inc
icebp
dec
mov
nop
lea
in
test
add
cmp
mov
enter
pop
repnz
and
xor
mov
inc
rcll
and
cmp
xor
imul
ss
inc
ds
push
mov
cmp
loop
xor
adc
jp
scas
testb
xchg
push
neg
pop
sub
or
pop
jns
test
add
mov
ror
adc
data16
cwtl
adc
aaa
aad
rcrb
pop
cli
call
dec
add
or
sbb
xchg
jp
arpl
popf
repz
push
xor
mov
mov
cmp
movb
pop
lods
and
shl
xchg
scas
inc
push
stc
sahf
in
add
add
lods
insb
push
rcr
fidivrs
adc
popf
xor
js
jmp
push
mov
fstpt
rol
lret
mulb
add
xchg
add
aaa
xor
mov
cwtl
popa
shlb
push
jecxz
jae
bound
and
push
cmp
divb
scas
pop
add
das
jo
sarl
mov
test
cmp
dec
or
and
jnp
mov
inc
lret
and
test
jmp
pop
xchg
mov
and
out
stc
roll
ffree
pop
mov
fisttps
ret
pusha
leave
pop
xor
ds
add
cwtl
imulb
rcrl
fildl
mov
add
jbe
fwait
push
dec
inc
test
inc
jp
xor
pop
pop
add
lock
inc
stc
xor
stos
and
popa
and
test
pop
pcmpgtd
inc
movsb
stos
pop
xchg
mov
lret
mov
mov
aas
pop
test
cld
add
test
repnz
imul
pop
cs
add
xchg
test
aaa
xchg
lret
movsl
sub
mov
scas
test
icebp
add
in
xchg
xor
jae
push
adc
divb
popf
mov
push
loopne
add
push
sub
pushf
scas
add
lea
pop
mov
imul
cmp
mov
jle
mov
lret
cmp
cmpsb
loope
imul
rcr
dec
or
shl
sarl
mov
adc
popf
test
jnp
inc
int
or
mov
mov
add
notb
imul
lret
xor
and
add
repz
fwait
xor
dec
insl
add
jne
fistpl
and
popa
enter
add
outsb
jmp
push
std
jecxz
jne
les
cmc
or
ret
insl
insb
lods
nop
rolb
in
adc
add
movsb
sbb
add
xchg
xchg
mov
mov
stos
insb
mov
adc
sbb
stc
mov
inc
mov
sbb
push
add
xor
mov
daa
fwait
hlt
repz
lret
test
sub
sub
mov
mov
xchg
adc
jge
fisubrs
mov
test
shlb
scas
pusha
fldl2t
dec
add
cmp
jne
inc
adc
xor
hlt
xor
mov
sbb
add
jne
bound
nop
push
lock
dec
mov
push
pop
pop
into
stc
add
bswap
cmp
hlt
popa
in
lret
add
es
shlb
add
and
push
adc
into
mov
or
adc
xlat
add
repnz
xor
out
ret
data16
jle
out
int
jo
out
loopne
jae
mov
cmpb
test
add
xlat
sbb
imul
scas
andb
lahf
mov
jno
add
repz
lods
push
push
mov
xchg
push
mov
gs
rorb
out
js
add
mov
lret
stos
insb
cmc
jo
sub
push
pop
and
push
in
fxch
mov
fs
sbb
sub
xchg
test
sbb
incl
es
mov
mov
cld
imul
popa
adc
mov
jae
sub
mov
imul
inc
add
mov
inc
mov
dec
xorb
jne
inc
fstl
mov
sti
repnz
nop
inc
test
add
mov
and
jmp
dec
cmpsl
add
dec
cs
adc
pop
jno
outsl
push
das
xchg
into
jg
jns
aas
repz
sbb
fstl
mov
inc
inc
mov
sbb
fildl
add
loop
mov
cmp
rcll
sub
orl
lret
add
xor
sbb
or
and
mov
jne
in
pop
ds
outsl
and
xor
ja
push
pop
sar
clc
out
and
lods
and
or
jmp
mov
addr16
xor
roll
cmp
mov
sub
xchg
push
scas
loop
xor
lds
jecxz
leave
mov
lret
cmp
xor
adc
cmp
std
add
mov
xchg
rcr
enter
ss
jp
imul
xchg
pushf
mov
dec
stos
pop
xchg
sahf
cltd
aas
jnp
add
pop
call
add
sbb
pop
dec
mov
or
xor
out
movsl
lods
ret
pop
fucomip
xor
push
jg
mov
add
idivl
in
add
out
lods
add
sub
add
les
mov
sub
mov
outsb
rcr
out
cld
jno
inc
cmc
in
sub
rcrl
test
shl
mov
push
fwait
or
dec
mov
xchg
xor
mov
movl
enter
cs
mov
lret
lods
out
inc
test
push
jo
std
jmp
xchg
divps
add
pop
or
add
or
mov
outsb
movl
add
into
fisubrl
mov
lahf
inc
loope
add
add
sti
xchg
movl
mov
ljmp
push
xor
sub
fbstp
dec
jnp
cmc
add
adc
idivb
inc
sbb
mov
jg
test
repnz
xchg
fists
cwtl
test
fadd
xorb
lret
mov
fists
je
aas
cmp
inc
pop
jg
mov
rorl
jle
mov
inc
mov
incb
xor
rol
xchg
sbb
test
sar
les
mov
add
ffree
dec
std
cmp
mov
pop
mov
mov
cmp
or
or
mov
aad
bound
mov
and
xor
mov
adc
push
andb
xchg
bound
add
push
inc
inc
jg
push
aad
and
aad
imul
mov
mov
test
jno
rorl
push
xchg
add
xor
push
pop
xor
mov
daa
add
pop
in
mov
sub
sbb
sbb
pop
dec
sub
movsl
xor
push
fsubp
mov
ret
es
aaa
or
cmp
scas
inc
lret
andps
add
cs
cmp
inc
sbb
push
and
inc
mov
or
mov
repnz
xor
iret
push
loop
out
repz
bound
ret
jae
xor
sbbb
cld
and
loope
push
jp
jg
andl
jmp
push
mov
negb
cmpsl
pop
or
jl
sub
mov
cmp
andb
ss
sub
sub
aas
pop
gs
cmp
and
shll
push
push
xor
mov
add
mov
or
sub
and
adc
add
incl
add
fstps
cmpsb
mov
test
add
aas
and
pop
ret
mov
ljmp
ret
or
dec
push
repnz
dec
into
hlt
add
rcll
call
inc
jae
inc
inc
in
adc
jmp
xchg
insl
push
lods
dec
adc
inc
mov
je
lods
mov
push
enter
lods
scas
xchg
push
aam
inc
push
push
dec
in
and
and
add
cmpsb
adc
inc
test
or
ret
aaa
out
ret
lea
mov
outsb
ss
add
dec
adc
fs
add
xchg
push
push
mov
sub
add
mov
mov
imul
push
jmp
clc
add
adc
pop
jno
pop
mov
lock
or
mov
mov
je
cmp
pushf
add
shrb
and
icebp
add
and
mov
cmp
cmpsl
aas
mov
out
add
int3
push
cmp
in
repz
mov
hlt
add
std
jo
mov
or
or
cld
pushw
ljmp
mov
pop
sahf
insl
push
xchg
add
in
fnsave
subl
es
xchg
js
xor
and
adc
xchg
push
add
xchg
addr16
and
into
add
lods
and
jb
cs
aas
stos
sub
adc
add
sbb
mov
rol
and
mov
cmpsb
loopne
inc
add
cmp
xchg
and
cmp
add
push
loop
pop
add
scas
inc
aam
and
sub
mov
lahf
xchg
cmp
sar
sbb
aam
xor
and
in
inc
xchg
lock
mov
fidivl
pushf
cltd
ret
data16
sub
push
xchg
js
outsl
test
fmuls
je
addl
addps
test
les
mov
sub
shl
add
mov
push
jns
arpl
or
lods
dec
sarb
adc
data16
cwtl
push
mov
add
dec
jno
pop
pop
addb
filds
test
and
lahf
rol
mov
cwtl
and
lods
add
xchg
add
incl
mov
insl
mulb
dec
in
test
aaa
dec
dec
ja
cmp
into
add
inc
daa
inc
lahf
inc
or
cmp
xchg
sysret
icebp
test
dec
sbb
mov
add
lret
scas
add
lock
push
repnz
add
fwait
stc
sbb
je
xchg
add
push
xor
sub
ret
das
lock
out
sub
dec
nop
pop
add
bound
jae
jp
push
mov
add
adc
mov
or
into
inc
xchg
scas
lcall
dec
cmp
dec
mov
ss
lods
ja
xor
mov
orb
rorl
mov
in
es
mov
lahf
add
icebp
aaa
jg
xchg
inc
fisttps
scas
pushf
sbb
push
and
les
out
insb
in
pop
push
in
repnz
cltd
mov
mov
repz
icebp
xchg
sbb
and
loop
xor
dec
fwait
pop
pusha
jnp
xor
add
jne
bswap
icebp
scas
insl
add
dec
daa
add
addr16
outsb
loop
push
mov
dec
int3
add
cltd
movsl
and
ds
xchg
clc
popa
cmp
loopne
inc
pop
sub
lock
mov
add
aam
sbb
add
inc
sub
mov
movsl
cmp
and
jl
xor
mov
jno
cmp
into
lcall
je
add
das
rcrb
inc
test
imul
insl
shlb
add
outsb
shl
add
mov
arpl
mov
add
out
sbb
ffree
inc
adc
xor
ret
pop
cmp
dec
into
mov
in
push
repnz
or
cli
adc
add
xchg
imul
xor
adc
addr16
cmp
mov
mov
xchg
ja
add
aas
and
add
inc
xor
popa
add
stos
add
add
shr
xor
add
inc
test
or
mov
inc
fbstp
mov
enter
xor
or
jle
add
sub
ds
mov
add
sahf
pop
cmpsl
pop
xlat
mov
and
push
fildll
ja,pn
mov
push
mov
xor
xchg
push
outsb
les
mov
xor
sti
dec
shlb
sub
loopne
adc
das
push
scas
nop
add
mov
and
and
clc
xchg
add
pop
lock
jmp
pop
jl
pop
fs
mov
add
add
pop
rol
aas
inc
xchg
jg
inc
jmp
repnz
inc
hlt
push
mov
add
adc
sub
inc
push
clc
add
fwait
aas
or
push
xorl
cmp
xor
push
inc
mov
shll
out
into
insl
mov
cmp
adc
add
shl
movsl
add
clc
inc
push
push
imul
scas
add
ja
into
js
pcmpeqd
cmp
hlt
add
or
loop
cmp
out
les
add
pop
xor
subl
push
into
sahf
xor
call
add
push
faddl
push
lea
add
adc
imul
lods
roll
lret
xchg
push
xchg
shlb
sub
out
insb
xor
mov
arpl
cmp
pop
pop
add
dec
mov
lahf
xor
call
xor
jecxz
sbb
push
imul
scas
inc
pop
xchg
insb
jge
adc
fs
pop
jg
xor
push
call
add
imull
add
mov
loop
adc
push
shrl
mov
pop
leave
and
test
rorb
jnp
jl
xor
push
xchg
rolb
jmp
popa
fiadds
enter
adc
sub
insl
int3
cmpsb
lock
add
pop
cli
push
in
sbb
jo
es
mov
loopne
hlt
push
xchg
sbb
ror
std
adc
and
popf
pop
test
xor
loope
and
jle
test
xchg
sub
rcrb
xor
in
jb
lret
pop
daa
add
jns
add
xor
orl
add
pop
cmp
sbb
mov
test
dec
xchg
pop
repnz
mov
int
repz
pop
bound
sbb
add
imul
add
lret
inc
jbe
fdivl
mov
clc
pusha
lods
xor
or
xor
inc
sub
jnp
inc
lahf
cs
xor
fdivrl
mov
jecxz
imul
inc
add
js
call
movb
add
scas
rorl
mov
ds
add
or
je
xchg
cld
fcomp
test
stos
lds
and
test
inc
int
pushf
dec
shrd
or
mov
add
inc
lock
and
jmp
outsb
aaa
xchg
movsb
sub
jge
adc
sbb
mov
test
add
mov
add
sbb
mov
aad
addr16
lret
sub
add
fsubs
loopne
aad
add
mov
pop
xor
or
cltd
dec
int3
mov
mov
and
push
adc
mov
lret
je
outsb
jmp
popa
das
inc
pop
dec
add
lods
inc
int3
repnz
add
stos
push
pop
pusha
cmp
add
add
push
cltd
fdivs
scas
cmp
in
pop
push
in
cmp
ret
sbb
daa
ret
fwait
adc
add
mov
stc
out
add
insb
imul
jg
ss
mov
jne
rolb
je
push
aam
push
adc
insb
loopne
mov
dec
xor
xor
and
js
or
call
cld
and
iret
xor
fiadds
pop
ss
add
lock
push
fstl
or
cmp
mov
lcall
or
loope
shrl
add
xor
add
and
xlat
ret
iret
jns
and
sbb
mov
pop
jp,pt
jp
inc
inc
add
repnz
stos
cmpb
add
outsl
mov
xchg
jp
pop
int3
add
jbe
jmp
mov
lahf
outsl
mulb
or
jo
mov
out
inc
add
xor
pusha
or
inc
adc
data16
outsb
cmp
pop
dec
inc
cmp
mov
out
mov
sbb
test
sub
xor
aaa
sub
inc
xchg
loope
jmp
sub
mov
cmp
stos
into
dec
mov
jmp
repz
and
mov
ret
add
add
dec
adc
daa
mov
push
cltd
incl
or
insl
jae
or
add
cmc
push
cmp
mov
sarb
mov
nop
imul
dec
mov
fcoms
sbb
leave
and
add
push
push
sbb
lds
mov
aam
pushl
or
cmp
sarl
xor
rcll
adc
jno
enter
and
mov
inc
jae
jne
mov
xchg
sbb
cmp
push
das
test
mov
inc
sbb
adc
add
mov
jmp
test
mov
sarb
push
cmpb
div
mov
mov
add
aaa
push
mov
xchg
sbb
jbe
outsb
mov
in
or
or
add
push
inc
push
mov
ljmp
push
lret
push
mov
jl
or
xchg
push
sub
and
sbb
lds
dec
movups
push
lods
sahf
adc
dec
adc
xor
fstps
shll
jmp
into
andl
popf
cmp
lret
add
pop
jecxz
xor
or
jae
test
cmp
inc
cmp
mov
stos
addr16
mov
popa
push
jge
jmp
outsb
and
push
data16
fwait
sub
xor
lods
push
stos
ja
scas
xchg
nop
sbb
mov
lret
outsl
cmp
test
ret
iret
repnz
int
cmp
dec
decb
jg
jno
test
mov
xchg
inc
fwait
aas
leave
frstor
sub
icebp
mov
sub
xlat
rol
cmc
add
lret
add
cld
lret
out
cmp
adc
rolb
and
inc
cmpsl
cli
add
push
out
add
and
int
imul
pop
pop
xchg
jle
pop
es
add
das
cmp
adc
sbb
push
pop
addl
jno
and
sbb
inc
push
ret
loope
push
xchg
sahf
shl
mov
sub
mov
xchg
xchg
push
outsb
xchg
bound
xor
adc
push
lret
adc
and
jg
insl
aas
test
mov
xor
mov
call
xor
add
sbb
lea
jb
imul
fcmove
jecxz
in
rcrb
loope
push
or
mov
es
rep
dec
leave
idivb
sbb
push
mov
xchg
in
cmp
insl
push
out
aas
jo
cli
daa
mov
fcmovne
bound
sbbb
mov
pusha
xor
stos
xlat
in
adc
inc
mov
out
mov
mov
sub
sub
add
and
ja
out
mov
dec
loop
inc
setae
or
lret
mov
es
push
xchg
dec
and
pop
dec
loope
rolb
cmc
div
insb
mov
or
or
mov
test
mov
pushf
push
hlt
ret
or
jmp
stos
sub
cmp
popa
xchg
xor
mov
in
or
gs
mov
pop
pop
mov
jns
sbb
rolb
or
popf
arpl
inc
inc
subb
push
fiadds
and
adc
loopne
insl
push
inc
push
xchg
mov
or
sbb
cmpl
cwtl
adc
jno
cmp
adc
inc
subl
fildl
pop
mov
shrb
fwait
les
and
inc
ret
inc
push
add
pop
ljmp
cld
and
add
aad
movsb
mov
inc
movsl
sbb
cmpsb
xor
xor
test
jno
add
and
imul
xor
xor
add
sbb
xor
es
lds
push
dec
mull
cmpsb
push
scas
data16
jp
xchg
add
sbb
add
adcb
aas
mov
daa
or
push
sahf
hlt
fwait
cmc
sbb
add
jbe
mov
gs
xor
pop
out
mov
jbe
imul
ret
scas
test
dec
adcl
outsb
mov
das
xchg
sti
stc
je
inc
inc
xor
lods
hlt
ss
rcl
xchg
sub
adc
data16
lea
cmpsb
add
jp
lcall
pop
dec
push
mov
pop
inc
dec
cmp
cmpsl
add
in
inc
imul
repnz
cmc
adc
leave
pop
add
pop
jp
add
inc
inc
pop
add
lret
sbb
add
mov
pop
lock
shll
ljmp
add
and
out
rorb
cmp
pop
mov
movb
addr16
stc
add
xchg
aad
fadds
add
mov
mov
cs
cmp
mull
and
or
inc
xchg
pop
data16
mov
adc
sub
push
daa
add
add
js
mov
cwtl
aad
cmp
repz
jl
insl
sbb
aam
lea
dec
bound
pop
xchg
or
mov
pop
insl
add
sbb
inc
dec
xchg
cmp
ret
dec
into
xchg
js
or
mov
cmpsl
daa
mov
inc
pop
out
aaa
jne
dec
insb
or
cmp
test
sbb
inc
loopne
insl
mov
dec
sub
pop
cltd
iret
cwtl
xchg
and
dec
es
cmpsb
jle
jne
cmp
lea
add
and
lock
pop
xchg
add
test
in
loopne
repz
les
inc
sbb
cs
fwait
dec
mov
xchg
rcrb
jmp
jnp
andl
pop
test
out
test
imul
push
jge
push
popf
test
aam
push
icebp
jns
xor
test
ret
sbb
mov
and
cld
es
fdivl
dec
test
js
cltd
daa
addr16
jecxz
xchg
push
and
dec
pushf
adc
sarb
es
cmp
sub
add
cmp
fildl
sarl
mov
push
pop
lods
ret
insl
push
xchg
pusha
shlb
test
sbb
adc
aaa
popa
cld
pushf
mov
sbb
iret
pop
and
std
inc
mov
adc
add
inc
fldcw
lret
fcmovnu
into
test
add
dec
in
div
std
add
lods
xor
je
mov
roll
sub
and
test
lahf
fists
pushf
jle
dec
mov
ret
mov
push
sbb
loope
dec
test
test
test
pop
xlat
stc
sbb
sub
and
push
fwait
and
cmp
or
xor
jmp
add
shrb
test
shll
stos
test
hlt
lock
cli
inc
add
mov
test
aas
filds
or
sbb
add
notl
roll
xchg
dec
ret
jp
xchg
xor
mov
sub
insl
in
push
push
and
lock
aad
pop
cwtl
das
pop
mov
lcall
xchg
jmp
lds
inc
call
inc
in
add
roll
js
push
jne
add
sarl
mov
jmp
pmullw
pop
in
outsl
inc
mov
pop
shll
pop
into
add
pop
and
push
mov
add
in
pop
add
cmp
mov
shlb
adc
xadd
xchg
and
push
mov
iret
lret
repz
add
es
and
push
ret
sbb
mov
add
jge
xchg
shll
mov
cmp
sti
add
sub
inc
pushf
roll
push
push
add
cmp
xchg
adc
xlat
sub
jbe
aam
loop
and
add
popf
and
sub
ret
stos
lods
pusha
scas
pushf
mov
add
mov
mov
add
adc
inc
rolb
or
sub
inc
mov
and
push
pop
mov
add
mov
dec
jno
cltd
js
inc
add
stos
add
call
sarl
add
mov
add
cmp
jno
inc
pop
imul
push
pop
xchg
jmp
push
or
add
mov
cmp
lret
loopne
cmc
hlt
jns
movsl
dec
add
jl
jecxz
inc
iret
lock
pop
pop
repz
enter
xchg
cmp
xchg
sub
jg
add
div
arpl
aas
out
push
mov
xor
mov
outsb
shll
or
mov
addb
rclb
jae
xor
cld
bound
dec
leave
add
cmp
mov
add
add
and
iret
sti
hlt
jecxz
pop
fstpl
mov
cmpsl
mov
dec
add
sub
ficoml
in
xorb
pop
add
xor
lods
jne
in
add
cmpsl
sub
fisttpll
xor
lret
dec
pusha
dec
add
mov
mov
ds
jae
dec
ss
xchg
xor
mov
sbb
pop
cmp
xchg
sbb
add
js
fs
and
out
mov
mov
loopne
or
imul
sarl
xor
add
xor
xor
push
inc
jl
pop
jno
inc
loope
mov
sbb
hlt
orl
add
loopne
pushf
les
xor
xchg
or
or
mov
xchg
add
dec
sub
mov
mov
push
xchg
repnz
xlat
dec
ds
mov
push
jnp
movsl
mov
mov
icebp
rcll
xchg
loopne
cmc
sub
mov
sbb
push
aas
pop
xchg
mov
out
xlat
xorl
out
test
or
add
mov
notb
pop
add
jne
xor
cmp
and
test
and
pand
xor
ficoml
jae
pop
and
jo
movsb
sub
insb
cwtl
mov
adc
add
pop
mov
dec
lods
mov
push
and
ret
mov
push
sahf
dec
add
js
movsl
add
xchg
in
add
loop
call
add
popa
into
fwait
mov
lds
xchg
mov
imul
lret
ret
pop
sub
cmp
faddl
imul
adc
mov
xchg
popa
fmuls
push
mov
push
stos
lds
adc
jbe
stos
mov
frstor
out
push
inc
sbb
or
inc
ret
xor
xchg
adc
sar
test
cmp
xor
dec
mov
jbe
add
xchg
loopne
ret
das
mov
repz
sahf
in
cmc
add
cmp
add
and
das
fwait
cld
adc
add
fbld
jnp
es
mov
sbbb
fstl
sub
into
les
fsubrl
movsb
sbb
ds
ficoms
or
push
cmp
jmp
inc
mov
mov
mov
lahf
push
movsl
sub
loopne
push
cmpsl
les
int3
xor
ret
jb
aad
adc
out
call
icebp
insl
arpl
lret
pop
imull
cmp
sbb
mov
adc
dec
ljmp
bound
ret
hlt
add
adc
shlb
addr16
fnsave
adc
jg
jecxz
lds
dec
and
andl
mov
fists
lcall
test
dec
mov
mov
sub
mov
ds
rorl
mov
xor
outsb
mov
push
addr16
and
das
push
pushf
add
shrb
aad
cmp
add
dec
mov
mov
xor
pushf
jl
sar
aaa
test
shl
jl
cmpsb
lcall
pop
arpl
inc
jg
rclb
xchg
sti
pop
fwait
scas
imul
cmp
push
add
lea
cmp
jmp
adc
mov
cmc
sub
lods
je
scas
dec
and
lods
xchg
icebp
push
pusha
cld
push
or
dec
dec
cs
dec
mov
enter
add
pusha
jl
pushf
jnp
call
fs
cs
das
xor
xor
in
aad
outsl
orb
jae
adc
and
pop
insl
aas
mov
sbb
ret
test
inc
add
mov
mov
mov
shll
les
xchg
lods
xlat
jp
xchg
sbb
out
lcall
out
jb
pop
sbb
movsb
loop
push
pop
movsl
jmp
jp
cs
icebp
mov
pop
and
or
stos
xor
pop
ljmp
pop
in
jmp
test
mov
jp
pop
mov
pusha
ds
loop
adc
and
inc
jnp
int
fbld
ljmp
js
mov
daa
mov
push
pusha
inc
data16
xchg
les
cmp
mov
push
loopne
xor
hlt
xchg
mov
pop
adcb
or
aam
xchg
mov
aas
out
loop
mov
jne
cmpsb
fdivp
xchg
push
stos
jge
loopne
nop
adc
and
insl
xor
in
mov
sub
adc
and
sbb
or
imul
clc
add
bound
xchg
push
popf
data16
aam
insl
mov
jno
into
mov
cmp
cmp
sub
xor
or
enter
orl
mov
pop
sahf
sub
cmp
les
mov
test
ja
notb
daa
push
pusha
cmp
cmp
aad
fmuls
push
insl
xchg
lods
roll
inc
xchg
cmp
in
sbb
mov
mov
xlat
addl
mov
mov
mov
incl
xlat
cmp
shl
testb
popf
iret
clc
shr
jo
sbbb
loopne
int3
scas
test
ret
push
mov
loop
aaa
cmpsl
ret
loop
scas
xchg
mov
cwtl
xor
mov
and
lods
int
cmp
test
cmp
lret
push
mul
arpl
add
inc
add
bound
out
mov
pop
xchg
pop
adc
xchg
xor
stos
mov
lret
push
jge
dec
jae
jne
test
push
pop
inc
adc
pusha
fidivrl
and
adc
mov
scas
ja
sub
addl
dec
cmp
imul
or
sbb
mov
push
movb
outsb
fisubs
gs
xchg
jns
inc
jl
ret
les
push
and
mov
xchg
and
push
ds
mov
jne
sbb
mov
imul
push
push
mov
lods
rolb
aad
testb
inc
inc
xor
imul
loopne
sbb
adc
rcr
jne
js
and
push
fsubrp
mov
add
mov
ret
stos
sti
pop
dec
cmc
or
ds
js
jbe
lock
lret
xorb
mov
test
stos
jp
mov
dec
scas
add
daa
pop
mov
scas
xchg
cmp
lea
fidivs
jo
daa
inc
sbbb
test
and
inc
jp
mov
call
jge
mov
and
inc
es
jp
inc
loopne
push
push
loop
adc
test
outsb
aad
icebp
sbb
cmpb
xor
adc
add
xlat
inc
test
stos
adc
add
prefetchw
push
dec
ret
inc
ret
and
add
xor
jbe
push
xchg
daa
insb
and
jnp,pn
xor
mov
les
subb
out
loope
sbb
push
add
jg
mov
inc
cwtl
sub
adc
push
ficomps
leave
xchg
cmc
fsub
add
arpl
fs
sbb
adc
inc
ds
shrd
mov
sub
xchg
bound
add
sub
mov
lret
out
and
sbb
test
out
xor
xchg
mov
jmp
call
sbb
jp
add
dec
imul
mov
mov
stos
in
mov
loop
jo
cmp
mov
add
and
mov
or
mov
push
mov
push
sarb
ljmp
cmp
lret
mov
daa
adc
xchg
jno
cmp
sbb
adc
or
movb
mov
lret
loop
lret
xchg
pop
ja
scas
sub
pop
jg
inc
cld
es
rcl
add
cmp
insb
imul
and
lret
das
ljmp
mov
jmp
xchg
cmp
mov
adc
pushf
push
test
out
cmp
jle
mov
dec
or
adc
movsb
int3
or
xor
jp
xor
aaa
std
sarb
daa
mov
xchg
adc
sbb
mov
movsl
add
insl
cmp
jbe
dec
cmc
clc
cli
or
adc
mov
inc
adc
add
lods
aas
push
push
pop
jp
movsb
jno
hlt
insb
aaa
jp
push
sahf
data16
or
or
aas
dec
xor
push
lds
pop
ljmp
jmp
sub
imul
sbb
roll
jae
loope
loopne
hlt
and
lods
cmc
sbb
fs
mov
sub
bound
mov
daa
sbb
and
jnp
aad
dec
fwait
inc
push
cmp
sbb
adc
xchg
test
cmc
sbb
cmpsb
filds
jp
scas
xor
sti
mov
push
stos
addl
pop
add
or
add
dec
xchg
and
and
sti
vmovdqu
cmp
fiaddl
mov
xchg
mov
mov
push
cmp
xorl
ljmp
cli
inc
das
cld
cmpsb
and
xor
mov
fwait
je
lods
rolb
pop
xorb
add
dec
or
xchg
enter
sbbl
iret
inc
dec
add
in
ret
push
push
test
add
cmc
mov
inc
mov
dec
adc
mov
mov
xlat
jns
xchg
ja
out
jecxz
jmp
in
jno
dec
mov
mov
mov
pop
movl
or
das
inc
mov
or
mov
adc
mov
xor
icebp
dec
fucomip
ret
addr16
push
sbb
bnd
add
cmp
push
dec
ljmp
xlat
add
mov
scas
shl
jo
iret
hlt
cmp
or
cmp
lea
sub
testb
sub
pop
addr16
jne
jae
call
rolb
mov
xchg
and
mov
dec
mov
inc
call
and
rorb
and
xor
cmp
rolb
int3
add
xor
dec
mov
insl
cmpsb
xorb
andb
lcall
sub
and
inc
sbb
bound
add
frstor
xchg
jecxz
add
aas
mov
add
add
inc
add
mov
popf
add
pushf
lock
mov
jp
rorb
xor
xor
mov
cmp
ret
es
pop
aas
ficompl
jmp
inc
fsubs
sub
sub
add
inc
mov
inc
cltd
insl
push
stc
or
adc
movsb
cmpsb
mov
add
jb
fwait
add
jmp
sahf
rcll
xchg
sti
pop
mov
ljmp
add
jg
psrld
stc
pop
xrelease
cmp
roll
xlat
pop
or
popa
push
adc
jo
dec
aaa
xchg
inc
cmp
je
cli
add
addb
push
and
add
jecxz
push
mov
outsb
aaa
testb
adc
movsl
into
lods
aad
push
xchg
test
mov
cli
les
xor
and
adc
push
and
jl
push
repnz
and
push
xor
add
repz
pop
add
jl
push
xchg
pop
mov
movsl
xor
sub
add
inc
or
inc
subl
jge
or
dec
add
pop
add
mov
sbb
aaa
bound
out
and
and
dec
stos
push
or
xor
ret
cs
lcall
adc
or
xchg
mov
add
insl
jmp
and
dec
add
xor
pop
adc
hlt
test
add
cli
sub
add
loope
mov
rolb
lods
stos
cltd
mov
xchg
insl
and
xlat
popa
aad
mov
cmp
push
or
xor
int3
sahf
xchg
jg
stc
loope
push
sbb
pop
and
test
sbb
test
or
add
stc
and
dec
add
cltd
sub
jnp
sbb
dec
icebp
lods
add
sbb
xchg
inc
adc
loope
rcrl
or
inc
into
pop
pop
add
dec
aad
cltd
or
cli
mov
ret
rcr
stos
cmp
fucom
jbe
add
adc
pop
mov
jl
mov
aam
and
mov
or
cmpsl
aas
add
insb
les
xchg
xor
lret
add
fs
mov
add
hlt
mov
xchg
push
adcl
bound
add
sbb
data16
insl
xchg
mov
sub
add
into
dec
out
stos
mul
add
and
or
test
insl
mov
add
popf
mov
ret
in
adc
mov
fisttps
sbb
add
jl
jecxz
cmp
push
pop
mov
pop
mov
je
sub
add
lea
mov
fimull
and
push
icebp
cmpsb
sbb
add
dec
mov
xchg
push
repnz
or
rclb
add
sub
xchg
inc
and
mov
leave
jns
fldl
int
cmp
adc
movsb
mov
sub
mov
xlat
imulb
mov
cmpsl
sti
mov
in
sbb
movsb
dec
xor
jo
aad
xor
in
sbb
jb
insl
hlt
sbb
ret
add
dec
pop
or
xchg
and
nop
pop
movb
lods
data16
mov
inc
pop
gs
cld
push
or
lds
mov
xor
add
and
adc
bnd
add
adc
push
scas
xchg
push
mov
push
push
mov
ret
in
add
adc
xor
mov
adc
mov
add
ficoml
test
ds
add
inc
sarl
inc
inc
inc
shr
mov
xor
cmp
insb
mov
jl
dec
inc
xorb
shll
add
test
stc
inc
sub
jnp
inc
pop
dec
add
or
lcall
ret
and
les
cmpsb
cmp
push
mov
jmp
jae
aaa
pushl
ret
cs
xchg
stos
adc
xchg
stos
cmp
add
sub
es
pop
push
push
inc
divb
push
pusha
add
push
sub
add
mov
inc
mov
ja
add
mov
ret
fnstcw
xchg
sub
scas
mov
mov
int3
mov
add
loop
push
clc
in
cltd
add
sbb
in
call
xor
cli
arpl
and
jns
fbstp
mov
outsl
adc
push
dec
lcall
cmp
jae
cmp
jl
pop
scas
addr16
add
shlb
and
xor
ret
inc
jp
push
or
or
cmp
arpl
add
es
les
xchg
lret
addl
add
xchg
mov
nop
in
push
daa
sbb
popf
pop
andl
and
and
scas
std
pop
push
add
loope
mov
aas
mov
mov
fcmovnu
pop
sub
or
add
inc
rolb
aad
clc
add
adcl
rolb
movsl
cmp
mov
pop
jns
add
push
xor
repz
jbe
pop
ljmp
jo
in
roll
nop
mov
test
cmpsb
add
in
dec
js
mov
pop
inc
insb
shlb
sbb
xchg
les
stos
fs
das
movb
dec
add
mov
or
add
shl
adc
add
test
imul
into
add
or
jl
sbbb
jne
shrl
fimuls
push
lahf
nop
outsl
xchg
dec
push
test
inc
push
rclb
aad
je
mov
in
or
push
popf
ja
pop
ljmp
ret
add
mov
cmp
sub
js
or
jo
and
jns
xchg
loope
add
rcrb
inc
cmp
xor
add
push
icebp
mov
add
xlat
xchg
lahf
xchg
and
lds
push
pop
push
pop
daa
push
addr16
into
mov
xchg
add
adc
add
imul
je
pop
add
mov
out
sarl
cmp
mov
add
nop
or
pop
fwait
add
jmp
in
push
sub
xchg
xor
add
mov
mov
jnp
mov
ret
adc
jp
pop
cltd
add
hlt
pusha
mov
mov
push
push
xchg
mov
fwait
xchg
sahf
mov
decl
xchg
cmp
sbb
xorps
stos
lds
cltd
sahf
mov
jle
adc
push
inc
dec
or
add
leave
daa
rclb
pop
cmp
xchg
push
gs
pop
arpl
and
xchg
cmpb
xchg
arpl
aas
mov
stos
lods
mov
loopne
cmp
loop
adc
icebp
add
push
sbb
inc
add
and
inc
popf
out
ret
scas
cmp
pop
pop
add
mov
mov
adcb
lds
jg
and
add
or
adc
ja
loopne
sbb
xor
inc
hlt
dec
scas
jmp
or
adc
mov
cmp
es
push
addl
mov
bound
mov
jp
mov
loop
fcomip
pop
aad
xchg
cmp
mov
sbb
sbb
rorb
aaa
mov
mov
mov
sahf
icebp
inc
add
sub
sub
mov
call
add
ret
in
out
mov
inc
movsl
mov
mov
arpl
jo
sub
and
cmpl
lods
in
jbe
pusha
push
ss
popa
mov
push
cmp
arpl
lcall
and
mov
mov
outsb
ljmp
inc
sarb
push
xlat
popf
cmp
pop
fucomp
out
es
adc
shll
fucomp
xchg
jg
mov
bound
sahf
std
enter
jb
stc
lret
mov
test
lods
lret
adc
nop
and
pop
sbb
add
add
xchg
lods
dec
test
nop
push
add
add
pop
sbb
dec
jp
cmp
pop
mov
aaa
add
mov
imul
stos
cmp
icebp
ret
push
cmp
clc
pusha
cmp
xchg
mov
dec
jp
movsl
mov
rorb
mov
dec
inc
mov
fs
xchg
test
add
loope
leave
mov
xchg
shr
inc
add
aam
mov
adc
jp
scas
pop
mov
daa
add
shr
fidivl
call
and
cmp
dec
jnp
fucomi
adc
in
shl
pop
dec
mov
jge
aaa
aaa
lock
mov
jle
inc
ret
movsl
xor
inc
pop
movsl
add
rcl
std
out
pop
sub
sub
and
lods
jl
ds
pop
pop
stc
jns
ret
xchg
mov
push
cmp
push
adc
outsl
out
fistl
aaa
lahf
das
add
dec
movsl
js
cmp
sub
jbe
adc
data16
jp
je
adc
addb
cmp
jp
or
dec
cmp
push
mov
inc
mov
lock
inc
insb
lods
lds
and
sbbl
adc
std
fxch
sub
les
filds
xchg
add
add
in
cmpsl
inc
and
dec
iret
sbb
inc
int
jg
or
xchg
xor
jecxz
aas
movsb
or
mov
sub
jae
and
leave
adc
test
addl
sbb
or
stos
sbb
xlat
mov
and
push
das
push
cmpsl
bound
dec
movsb
loopne
jnp
mov
test
sarb
xor
xchg
and
inc
loope
repz
sbb
jp
lds
notb
and
mov
jg
sbb
mov
inc
dec
mov
mov
or
lds
cs
mov
adc
cmpsb
out
xchg
or
cmpsb
aad
dec
lea
into
inc
adc
leave
movsb
add
bound
xchg
sbb
and
adcl
sub
loopne
popf
hlt
mov
cmc
xchg
xor
pop
movsb
les
clc
xor
cmc
lock
scas
test
daa
mov
popa
add
mov
pop
ret
call
ljmp
test
sti
inc
ret
jle
mov
adc
add
gs
fmuls
xor
sub
clc
stos
es
inc
push
pop
push
sbb
sbb
inc
xchg
dec
lret
jae
and
cmp
push
daa
movsb
mov
mov
sbb
movsl
or
cs
movsl
cmp
in
ficoms
fcompl
jp
out
dec
xor
mov
dec
push
rclb
cmp
xchg
push
sti
mov
cmc
mov
mov
sarl
mov
or
ficoms
mov
ret
sbb
pop
test
push
rolb
mov
ljmp
andb
icebp
leave
mov
mov
or
ja
inc
test
xor
inc
push
movsb
or
cltd
cmpb
ds
bound
mov
lods
fdivl
pop
repnz
inc
mov
pop
or
push
or
add
mov
shlb
add
fisttps
mov
lcall
mov
sar
sbb
sti
jno
and
xchg
push
push
dec
test
add
add
loope
sbb
jp
or
xlat
or
out
lret
pop
in
adc
adc
jl
iret
dec
adc
sub
jne
sub
jb
cmp
cltd
sub
mov
mov
mov
cmp
xchg
pop
in
mov
shll
jns
scas
bound
sub
cmpsl
pop
add
scas
add
in
out
arpl
mov
push
adc
stos
inc
aaa
fdivrl
test
sbb
or
jmp
inc
and
pusha
dec
add
mov
xchg
scas
push
push
pushl
cltd
jp
jae
jle
cwtl
adc
and
xchg
cmp
popa
and
xchg
test
mulb
cmc
lds
cld
or
hlt
or
jl
adc
add
mov
stos
jne
xor
jg
dec
cmp
aaa
daa
ret
mov
inc
sbb
fildll
lock
add
jae
inc
inc
iret
icebp
outsl
out
adc
xchg
and
adc
sbb
les
jp
push
xchg
add
mov
push
mov
pop
push
or
mov
pop
dec
cmp
jecxz
out
lret
scas
fidivrl
and
sbb
jo
xor
fimull
mov
jns,pn
pop
xchg
mov
rolb
add
std
cmp
push
daa
xor
loopne
sbb
jno
pop
ret
mov
shll
andb
aad
pop
mov
push
test
add
addb
and
in
mov
sbb
adc
sbb
fwait
sbbl
jo
lret
mov
adc
in
call
rorb
adc
addr16
sub
cmp
jae
sub
faddl
dec
jg
clc
mov
fidivrl
sub
add
ss
andb
lds
std
lret
mov
pop
lock
cltd
dec
cmp
sub
leave
jge
cwtl
scas
bound
sbb
add
jecxz
movsb
movsb
mov
sbb
loopne
adc
cmp
dec
movsl
dec
jb
lods
stc
jne
ss
dec
add
mov
xchg
cmp
and
dec
sub
fiaddl
shl
jo
daa
clc
sahf
outsl
cmp
push
mov
add
xlat
es
mov
shrb
pusha
sub
dec
ret
insl
test
jne
test
cmp
std
xor
arpl
add
pop
mov
lcall
scas
mov
cmp
mov
inc
push
add
scas
mov
dec
inc
insl
in
inc
test
and
lcall
cmp
inc
je,pn
out
jno
sbb
idivb
adc
adcb
and
popf
testb
and
xlat
roll
cwtl
mov
scas
loop
lods
adc
jmp
or
mov
xchg
sub
mov
test
dec
mov
cmpsb
loop
pop
aam
lods
rcl
and
xchg
imul
lahf
dec
add
add
and
dec
ret
pop
sub
inc
mov
cmp
cmp
sbbl
pop
and
add
dec
popf
push
push
dec
ret
mov
add
clc
mov
push
and
pop
idivl
pusha
add
push
sar
addr16
and
imul
mov
inc
lds
pusha
fsubl
imul
pop
lock
rcr
jge
or
or
adc
sub
jae
add
je
lret
add
fstpt
fstps
jne
xor
pusha
es
add
hlt
mov
cmpsb
add
xorb
or
xchg
add
dec
inc
iret
and
adc
inc
jl
addr16
jl
lods
mov
ret
push
xchg
push
add
mov
sub
adc
pop
xchg
mov
xchg
add
mov
add
dec
xor
cs
jg
inc
outsl
add
stos
push
sub
add
cmp
ficoml
push
push
pop
pop
loope
in
dec
cmp
xor
ja
xchg
sub
shl
jl
movsl
stos
dec
addr16
dec
mov
fadds
std
cmp
in
push
cmp
mov
adc
or
gs
add
fs
jae
sahf
mov
add
jmp
dec
add
inc
add
push
or
popl
add
xchg
das
jmp
ljmp
shrb
insb
and
mov
dec
xchg
jecxz
mov
rclb
pushf
cmpsl
mov
add
movl
sub
jmp
dec
inc
aad
outsb
jne
xor
enter
ret
shll
sbb
dec
popa
popf
add
ljmp
xor
sbb
movaps
loopne
dec
xlat
mov
scas
cmpsl
pusha
xor
sbb
or
sahf
mov
xor
repz
pushf
inc
pop
pop
fwait
js
xchg
mov
xor
push
and
imul
movsb
lods
jle
mov
sarl
adc
jmp
push
sahf
xchg
mov
mov
into
jb
jg
dec
add
scas
sub
inc
add
mov
out
add
jb
insb
push
repz
cmpsl
pop
mov
dec
inc
and
insl
add
pusha
sub
sbb
and
mov
jl
jbe
mov
ljmp
inc
repnz
movsl
push
pop
and
lret
xchg
daa
shrl
jnp
inc
add
movsb
push
lds
lock
ret
ffreep
cmp
movsb
adc
jbe
ret
pop
or
roll
push
int3
pusha
mov
aas
xor
rcll
cmp
dec
cs
bound
cld
ss
push
les
push
add
pushf
pop
pop
ds
notb
nop
sahf
add
adc
rcr
inc
sub
cmp
shrb
xor
nop
jecxz
inc
jle
add
sub
add
fdiv
mov
cwtl
out
mov
in
xchg
adc
mov
ret
push
cmp
and
inc
push
push
or
idivb
cmp
add
loopne
lods
inc
pop
sub
fisttpll
add
fadds
mov
inc
inc
sarb
jg
test
push
mov
and
add
cmp
mov
dec
or
mov
sbb
ds
outsl
add
mov
lds
loope
sbb
jle
xchg
fadds
mov
fst
pop
lahf
insb
ret
roll
lcall
popf
and
or
cld
mov
ficompl
pop
cmp
gs
pop
arpl
and
mov
sub
scas
push
aas
or
add
jecxz
fucomi
xor
dec
adc
rol
inc
mov
add
cmpsl
imul
out
pushf
dec
aas
gs
dec
es
subl
sbb
popa
mov
mov
pop
insb
rcrl
add
push
mov
movsb
enter
cmp
inc
dec
push
add
into
lahf
add
fldt
popf
pop
cmp
adc
loop
xor
xchg
pushf
jg
sti
add
sub
ljmp
insl
add
sbb
mov
pusha
dec
and
aam
or
mov
add
fildll
outsb
sub
push
cli
adc
call
pop
test
ret
out
inc
inc
repnz
add
leave
icebp
sbb
xchg
rorl
xchg
std
cmpsb
test
pop
mov
jecxz
cwtl
fwait
das
and
out
jle
xlat
lret
test
inc
popf
mov
out
repnz
sub
shlb
and
jae
add
pop
sbb
sub
out
pusha
cmp
dec
xor
lahf
mov
testl
test
mov
inc
mov
pop
in
jge
push
xchg
jno
clc
or
addr16
add
sbb
ret
mov
les
adc
add
pop
pop
mov
or
lods
xchg
push
daa
dec
sar
and
loop
inc
mov
gs
pop
jae
jb
xlat
sbb
sub
add
jp
out
lea
jae
test
mov
xlat
stos
sbb
push
xchg
inc
bound
cmp
cmp
fucomp
sbb
push
pop
and
sub
lds
cwtl
xchg
cltd
enter
and
pop
popa
sbb
inc
add
xchg
push
repz
xor
cwtl
mov
mov
shlb
add
mov
xchg
push
cs
add
scas
dec
xor
inc
add
push
cld
inc
clc
popl
add
cmp
sahf
leave
sbb
lods
mov
mov
add
cmc
sub
mov
loop
sbb
outsl
add
je
and
or
cld
adc
lahf
sbb
leave
lods
or
test
xorb
add
and
add
adcl
xor
scas
into
inc
loopne
mov
rorl
add
sarb
rcr
mov
fidivrs
mov
hlt
jecxz
pop
mov
pop
fiaddl
out
mov
jbe
cmp
fists
pop
jmp
ror
cmp
hlt
mov
xchg
js
mov
dec
pop
add
lds
push
sti
xor
adc
mov
add
xchg
jae
mov
popa
int
add
and
outsb
fdivs
mov
pop
shlb
fs
mov
add
sub
add
xor
sub
add
pushf
imul
fwait
clc
mulb
lods
sub
or
pop
cli
les
cmp
jl
mov
cld
pop
nop
into
add
inc
icebp
rep
dec
sbb
inc
insb
xor
lods
push
dec
movsl
int
xor
add
mov
rorb
add
and
cld
and
or
push
pop
inc
jne
loopne
sub
out
jbe
inc
out
lods
in
iret
mov
add
fidivs
test
int
rol
fs
test
test
js
and
adc
xchg
mov
push
or
cmp
pop
mov
xchg
imul
jmp
lods
arpl
mov
pushf
lcall
lods
cld
insb
nop
mov
aaa
add
sub
aas
imul
add
and
or
jp
sbb
icebp
pcmpgtb
daa
push
cmp
clc
cmp
in
mov
ret
outsl
pusha
pusha
sahf
inc
rorl
sbb
out
and
or
push
mov
paddd
mov
or
sar
add
icebp
lds
lret
int
add
cltd
jecxz
add
xlat
mov
daa
xor
retw
dec
enter
daa
add
mov
sub
movzwl
add
fcmovnb
xchg
lea
or
adc
xlat
push
test
dec
rcll
pop
mov
hlt
in
or
pop
lods
cmpl
push
loopne
ret
aaa
adc
fnsetpm(287
mov
inc
test
add
lds
adcb
arpl
repz
xchg
daa
and
jbe
fcompl
sub
xadd
xor
shll
mov
into
jb
jbe
fstpl
add
jo
mov
imulb
popa
fidivl
sub
xor
cmp
push
adc
pop
jne
icebp
movsb
add
adc
cmp
jl
inc
lcall
loope
xchg
xor
jecxz
or
repz
jmp
mov
mov
les
mov
cld
add
pop
mov
add
pusha
and
add
fiaddl
mov
popf
orl
sbb
xchg
loope
cltd
filds
cmp
stos
pop
add
fldcw
lahf
test
outsb
movsb
xor
cmp
add
in
sarl
mov
addl
jns
push
es
sbb
bnd
and
push
push
add
popl
loop
std
insb
add
dec
mov
inc
cmp
sub
jb
jmp
cmp
mov
xchg
sbb
inc
inc
int
test
sarl
pop
fwait
sti
mov
add
jne
mov
mov
pop
fstp
pop
loopne
cwtl
pop
mov
cld
add
xor
lahf
jge
stc
rol
adc
xchg
add
or
xor
out
add
add
fldl
test
in
stos
rol
adc
std
stos
sbb
xor
adc
mov
dec
xor
mov
pop
in
outsl
add
dec
cltd
inc
add
cmp
lahf
mov
mov
int3
add
sub
aas
jl
push
add
or
cltd
inc
movsl
cwtl
inc
and
and
inc
ljmp
sbbb
rcll
sub
push
ja
shl
clc
add
jmp
mov
push
fldcw
out
xchg
jo
add
adc
popf
out
mov
add
sub
sub
movsl
filds
mov
mov
add
fsub
gs
data16
cmp
fistps
mov
dec
cli
aaa
push
push
push
popa
mov
std
stc
lret
pushf
fists
test
mov
pop
je
add
pusha
out
adc
std
mov
adc
sbb
add
push
sbb
dec
std
pop
clc
leave
daa
loop
sub
pop
and
push
jmp
or
mov
ss
lret
ds
test
push
jnp
mov
add
xchg
push
ja
cmp
ret
push
mov
inc
add
iret
add
xor
cmp
inc
enter
popw
shlb
cmpsb
into
add
or
mov
loopne
lock
arpl
mov
mov
cltd
or
add
pop
jl
or
cwtl
xchg
ss
rcr
lret
cmpsl
push
inc
sub
mov
xchg
sahf
ret
outsb
or
cwtl
imul
idiv
loop
pop
mov
ja
loope
and
repnz
pcmpgtw
cmc
jnp
pop
cmp
jge
shlb
in
push
nopl
sbb
inc
push
out
or
xchg
and
sub
je
xchg
push
push
aas
ret
pop
out
sahf
adc
or
sub
xor
add
fsubrl
pop
jecxz
push
outsb
add
mov
add
aad
pop
push
push
in
mov
in
mov
movsl
cs
lcall
rcr
jb
addr16
cs
sub
dec
cmp
push
or
sbb
test
add
push
cmp
or
scas
pop
test
jbe
xchg
fnsave
pop
inc
lahf
add
or
test
cli
adc
add
push
rclb
stc
std
inc
aam
add
and
add
sarb
pop
sub
daa
iret
xor
and
gs
add
push
pop
es
sub
cli
add
push
pop
xor
mov
mov
inc
mov
stos
sub
add
jmp
xor
sub
sub
test
inc
add
pop
nop
fcoms
dec
cmpl
xor
loop
inc
lahf
xchg
jae
cltd
cmpb
mov
les
and
add
stos
leave
pop
inc
scas
pusha
pop
bound
xlat
fadd
xchg
jmp
js
push
jl
pusha
pop
add
inc
or
lahf
add
flds
push
addb
inc
in
fwait
xchg
aaa
sub
les
mov
imul
jmp
outsb
mov
jp
cmp
add
cmpsl
sbb
mov
mov
addr16
mov
push
loope
mov
subb
stos
lahf
sbb
roll
fisttps
pop
loope
mov
pop
xchg
mov
and
jl
mov
push
inc
jae
adc
and
add
xor
cmc
xchg
inc
jo
ret
xor
cmp
or
mov
out
xor
out
xor
sahf
pop
out
bound
sub
and
daa
add
mov
or
xchg
cmp
ret
or
adc
adc
enter
cs
in
les
inc
jmp
pop
loop
shll
sub
lret
sub
call
insl
outsl
push
inc
inc
inc
dec
sbb
jno
je
or
jge
adc
icebp
mov
pop
add
arpl
inc
cmp
mov
cmp
cmp
jge
sbb
mov
or
mov
inc
cld
dec
rcl
mov
loopne
js
xor
sub
or
popa
mov
mov
jns
rcrl
les
add
xlat
xchg
adc
lahf
push
hlt
mov
sub
jg
add
movsl
mov
mov
cmp
sbb
andb
and
push
test
sbb
inc
subb
ficoms
stos
test
scas
and
inc
inc
inc
jb
movsl
pop
pop
or
lret
pop
mov
xor
push
add
dec
packuswb
loop
ljmp
enter
dec
cmp
push
add
xchg
js
mov
rcll
int
jb
pop
lret
mov
xchg
push
and
imul
dec
dec
fstps
and
jb
dec
insb
add
xchg
popf
and
test
testl
lea
mov
mov
int3
mov
into
push
xor
fnsave
test
or
dec
mov
mov
es
jnp
pop
sbb
mov
roll
call
push
and
mov
addr16
iret
out
add
jb
adc
cmc
jno
add
movsb
out
mov
mov
cltd
faddl
faddp
aad
and
jl
sub
push
loope
scas
cmp
xchg
add
add
xor
mov
lret
leave
jno
das
mov
add
out
or
pop
dec
fs
int
add
push
scas
and
xor
add
sbb
incb
fwait
aam
sbb
test
xor
rorl
mov
mov
stos
add
push
xchg
add
pop
nop
add
xchg
mov
mov
sub
inc
push
xchg
cmp
or
sbb
cltd
xchg
outsb
data16
popf
subl
test
lock
test
push
add
xor
and
push
rorl
mov
fwait
pop
add
sarb
adc
cmp
ror
push
and
push
ret
add
and
repnz
sbb
push
push
loopne
ss
sahf
add
mov
dec
jb
shl
movsl
mov
adc
jle
loop
cmpsl
inc
cmpsb
dec
out
adc
push
cwtl
jmp
push
bound
clc
adc
mov
push
xor
psrlw
add
nop
xchg
repz
dec
add
xchg
fistps
fs
add
mov
ds
jg
add
dec
mov
in
jle
arpl
push
or
hlt
cmpsb
sarl
lret
add
add
inc
push
shrb
out
push
push
push
and
out
mov
jp
clc
fstpt
mov
stos
add
fildll
or
into
insb
or
orb
cwtl
pop
sarb
je
insb
cmp
mov
movsl
push
shll
fiaddl
and
adc
add
add
cmc
add
dec
mov
sub
dec
out
jle
cmpsl
cltd
stc
out
sbb
sbb
sub
popa
movsl
sahf
fcoms
inc
test
and
xor
mov
ret
add
add
xor
loop
sbbb
bound
xchg
imul
sub
mov
ret
push
shll
in
push
dec
jge
lret
lods
jl
pop
mov
cld
loopne
jle
shl
adc
cmpsb
mov
add
cmp
and
jge
enter
sbb
add
or
out
xchg
xchg
pop
roll
pop
mov
lret
std
iret
jp
xor
or
jg
and
js
mov
cmp
dec
xchg
lahf
test
add
jle
cmp
adc
xchg
ds
mov
or
scas
shl
jo
pop
and
adcb
pop
ret
ja
sarb
in
add
dec
cmp
add
imull
add
pushf
stos
in
je
adc
mov
dec
ja
shll
push
lret
pop
push
mov
mov
dec
xor
pop
adc
ds
jmp
and
push
mov
shlb
lcall
pop
or
cli
arpl
jp
das
shll
mov
jns
stc
loop
pop
inc
fsts
pop
cmp
inc
sub
scas
movntq
out
cmp
imul
sub
adc
or
iret
jae
mov
add
clc
nop
aad
sbb
cli
out
jecxz
pop
sbb
adc
push
jno
and
and
add
sub
push
xchg
or
add
ljmp
push
mov
push
add
mov
sarl
cmp
arpl
add
outsb
jnp
sti
or
fldt
adc
fsub
pushf
mov
xchg
mov
adc
insb
stc
or
pop
and
xchg
push
add
push
xor
or
pop
inc
xchg
xchg
mov
nop
mov
pop
out
imul
lds
push
shrb
lock
iret
hlt
cld
dec
loope
cli
xor
aas
xchg
das
into
inc
pop
rol
int
cmp
xor
out
sub
sub
adc
xchg
sub
inc
push
fiadds
in
dec
jae
shlb
into
fwait
cmpsb
lcall
std
pop
mov
std
sbb
cmpsb
mov
pushf
push
lods
mov
or
xor
loop
into
incb
mov
lods
push
dec
dec
out
and
and
xchg
outsl
sub
fcoml
pop
mov
push
aad
mov
sub
dec
and
in
xchg
add
mov
int
pop
dec
add
pop
sbb
xchg
sbb
jns
jb
and
sub
gs
popl
mov
sub
add
cli
in
jmp
mov
lods
addl
rclb
pop
add
jg
add
jecxz
or
mov
lcall
adc
adc
sti
out
insl
lcall
loope
inc
pop
jne
mov
mov
hlt
int
sub
lahf
outsl
cmp
xor
mov
mov
xor
hlt
inc
mov
and
inc
cltd
add
mull
and
jns
jo,pt
inc
outsb
inc
sahf
pop
add
jb
or
mov
cmp
pop
idivb
rcrb
out
pop
aas
mov
add
faddp
in
cmp
jnp
push
push
mov
sbb
daa
outsl
add
leave
add
mov
adc
cmp
add
pop
sub
flds
out
loop
bound
push
xchg
dec
jmp
insb
repnz
fiaddl
bound
rorb
nop
sbb
mov
aas
hlt
push
xchg
lcall
xchg
push
out
sub
add
sbb
lcall
dec
sahf
cmp
add
pop
inc
cmp
xor
mov
xor
xor
and
xor
call
jne
mov
sbb
addr16
fimull
mov
add
pop
into
add
aas
and
push
jb
and
inc
xchg
pop
sub
cmp
mov
adc
leave
mov
sbb
lret
add
pushf
fucomip
add
pop
jmp
add
sbb
aam
dec
add
stos
pop
iret
inc
rep
lods
dec
ret
adc
lock
cmp
add
pop
add
dec
adc
sub
dec
push
addr16
movsb
pop
adc
and
and
mov
ret
repnz
cmp
into
add
jns
daa
test
pushf
dec
add
push
cmp
mov
sub
sahf
cmp
stc
repz
stc
cmp
push
ret
xchg
in
inc
and
sub
out
xchg
push
sbb
lock
test
stos
loopne
shl
and
lret
mov
add
mov
dec
cwtl
sbb
mov
jno
xchg
and
test
pop
aaa
ror
hlt
xchg
cmp
mov
fcomps
or
adc
in
add
hlt
inc
or
adc
mov
sbb
out
xor
pop
jno
lss
fidivl
mull
cmpb
ja
add
cmp
ds
add
ljmp
js
push
lahf
pop
jne
aas
inc
mov
cs
or
rcll
and
sub
dec
aaa
sub
xor
pop
xor
add
or
sub
xlat
hlt
pop
push
mov
add
lret
sub
arpl
roll
je
aas
xor
fstpt
cmovle
dec
rol
push
cmp
and
loop
add
cmp
in
xchg
mov
clc
imul
push
mov
and
add
cld
xchg
and
and
lcall
sbb
ss
imul
add
sbb
lds
in
cmp
das
add
jle
dec
dec
insb
and
xchg
add
leave
mov
pop
jg
rolb
pop
int3
xor
lahf
xchg
add
fistps
or
mov
orb
mov
push
add
rcll
jle
add
in
dec
add
pop
fcomp
jo
jb
inc
out
mov
mov
popf
jle
and
int
dec
adcl
mov
xchg
leave
clc
mov
mov
cmpsb
add
and
mov
fcmovb
jl
clc
jg
adc
shr
out
push
rcll
xchg
dec
mov
push
loope
roll
mov
sti
test
mov
dec
fcoml
adc
popf
pop
xor
aaa
sahf
xor
xor
push
push
or
mov
jl
xchg
add
pop
lods
xor
loop
imull
testb
add
lahf
add
sub
and
cmpsb
xlat
add
push
xor
mov
xor
inc
sti
mov
xchg
sbb
inc
add
enter
in
repz
jb
sbb
cmp
push
lcall
shrb
cmp
js
add
rcrl
movsl
pop
jnp
sbb
mov
push
xor
lcall
shlb
jp
jecxz
mov
pushf
dec
enter
or
pop
adc
in
imul
xchg
inc
scas
pop
xor
sarb
insl
add
aad
mov
and
add
lock
and
pusha
lds
sub
cmp
and
pop
dec
mov
fcmovnu
mov
mov
insl
inc
inc
cmp
out
xchg
add
pop
pop
and
lock
xor
je
and
icebp
fisttps
scas
mov
push
movsb
add
push
fildl
or
vmwrite
adc
jne
in
add
in
sbb
xor
jb
add
out
inc
add
cmp
xchg
pop
fcmovnbe
stc
add
stos
cmp
and
add
pop
xchg
jne
sub
inc
cmp
push
adc
stc
fisubrl
inc
adc
mov
jbe
std
sub
dec
lret
cwtl
and
test
mov
xor
repz
sub
out
push
lds
sub
lea
mov
and
cmc
jae
aam
and
and
daa
shlb
scas
dec
xor
xor
push
add
add
std
test
jp
xchg
les
sbb
cltd
mov
add
data16
mov
loop
push
jge
jecxz
mull
aas
xchg
push
and
xchg
mov
mov
les
adc
iret
jne
dec
dec
jecxz
add
frstor
leave
add
outsb
or
sub
lcall
sbb
xchg
cmpsb
add
push
test
imul
add
negb
xchg
mov
cld
add
insl
and
mov
inc
dec
pop
das
in
fildl
in
mov
xlat
pop
jle
add
addl
ret
sub
sbb
arpl
xchg
add
jp
push
leave
movsl
add
ret
insl
cli
out
pushf
lds
bnd
dec
jecxz
pop
movsb
ljmp
rcll
clc
add
sub
mov
aas
sub
dec
inc
fisubs
push
xchg
jg
rcll
add
sub
xor
mov
and
ret
xchg
sbb
outsl
jp
insb
add
shlb
xor
mov
pop
sbb
out
addl
pop
ret
mov
inc
mov
nop
mov
fwait
sub
cli
pushw
or
test
mov
lret
add
add
jmp
add
sahf
jmp
inc
dec
ss
pop
add
fsubl
push
mov
hlt
add
insb
ret
cltd
add
out
xchg
jecxz
roll
pop
jne
mov
clc
add
sbb
jg
imul
fwait
shl
add
jle
mov
add
or
dec
mov
sub
xlat
clc
cmp
fdivs
xor
push
movsl
xchg
pop
gs
push
ret
add
xor
sub
adc
iret
lret
fs
and
das
call
push
push
inc
fldl2e
cltd
add
test
fbld
movsb
inc
imul
dec
mov
into
jb
cs
and
cmp
add
or
add
arpl
mov
cltd
add
pop
int3
pop
sub
movl
adc
repz
scas
xchg
dec
roll
sbb
sahf
mov
dec
push
fildl
xchg
adc
sbb
in
push
mov
bound
and
mov
cmp
and
mov
stc
daa
jnp
pusha
loope
push
bsf
pop
dec
cwtd
add
jo
cmp
inc
dec
pop
sub
jg
cmp
out
add
icebp
add
in
add
cmc
popf
lret
ja
shlb
ss
cwtl
out
in
sub
aad
repz
add
out
push
add
pop
sbb
add
je
cmc
or
pushf
mov
mov
ja
aad
mov
push
adc
stos
adc
fnstenv
cltd
sahf
icebp
push
xchg
pop
jg
push
cmp
xchg
push
xor
and
adc
mov
outsl
xor
call
repnz
loopne
sahf
add
lds
inc
inc
mov
push
cld
fildll
sbb
cmp
xchg
cmpsl
popf
sub
sbb
test
stc
dec
gs
add
cpuid
add
sbb
ror
cltd
repz
call
add
mov
inc
pop
cmpsb
xchg
mov
add
mov
xor
or
push
mov
iret
push
out
dec
xor
inc
or
dec
fldl
shll
add
dec
sub
inc
fidivs
clc
js
or
cmp
icebp
mov
push
decb
mov
lds
xor
or
pop
or
test
mov
add
add
sbb
cmp
jbe
aaa
mov
into
mov
gs
leave
add
adc
push
add
mov
mov
pop
push
aam
ja
inc
xor
mov
mov
es
arpl
pop
das
xchg
rcrl
mov
and
push
loope
nop
lds
ss
mov
loop
xor
not
sub
scas
popa
dec
dec
mov
sub
add
shlb
mov
push
mov
push
subl
stos
fadds
dec
or
cmp
mov
add
incb
jecxz
stc
pop
xchg
xor
push
aad
add
scas
cld
dec
addr16
add
in
mov
xchg
in
ds
fsts
or
add
ja
in
mov
fildl
xchg
pop
cmp
stc
fiadds
jns
or
rorb
xchg
push
mov
aas
add
daa
and
adc
add
push
mov
sti
pop
rol
aas
xchg
jmp
xchg
mov
jns
fidivrs
movsl
or
lret
xor
push
sar
pop
popa
mov
jmp
ss
out
cltd
add
stc
popl
pop
cmpl
cmp
sbb
push
xchg
decb
ret
lods
and
and
fwait
add
shrl
jp
lahf
sarb
daa
mov
pop
nop
add
xchg
dec
sbb
inc
jo
add
dec
daa
out
push
movl
dec
add
mov
and
nop
mov
add
jl
scas
inc
iret
or
mov
cli
test
cmp
adc
inc
pushf
sub
push
add
iret
ficompl
flds
jns
or
mov
sub
mov
adc
add
xlat
aam
cmpsl
cmp
shrd
xor
in
or
enter
xor
pop
jbe
mov
fisubrs
jp
xchg
push
mov
cmp
lret
xor
cmp
push
in
test
lret
dec
xor
stos
shll
pop
jp
xor
xchg
push
fildl
outsl
push
in
movsl
cmpl
sti
addb
aad
out
and
or
test
sbb
andl
jo
mov
adc
cld
shlb
cmp
mov
aas
mov
gs
add
daa
bound
inc
or
rorl
inc
scas
mov
arpl
outsl
dec
divb
inc
ret
repz
lods
jmp
sbb
jne
test
frstor
add
test
loope
scas
mov
jecxz
js
das
lods
scas
jle
fwait
mov
arpl
and
movsb
ds
icebp
pop
mov
cmpsl
and
inc
sub
sub
or
sbb
addr16
push
mov
mov
or
loop
sub
mov
jp
cli
jo
loop
xor
lret
jo
jge
loopne
cmp
roll
les
leave
pop
mov
aaa
lcall
xor
fidivrl
push
dec
jae
add
fildll
cmpl
sbb
dec
pop
fstpt
lds
mov
cmp
mov
call
xchg
jge
das
loope
cmp
pop
and
cltd
bound
lcall
mov
push
in
sub
les
fildll
cwtl
sbb
cld
imul
adc
mov
add
js
lods
shll
testl
lcall
lods
sub
rolb
xchg
and
xor
inc
push
mov
movsb
jb
movl
mov
mov
mov
aam
mov
mov
sub
push
and
mov
bound
gs
add
mov
int
sub
pusha
mov
lcall
fwait
lods
aad
fadd
dec
or
adc
push
cmp
lret
add
adc
mov
add
aad
lea
insl
push
add
call
push
lret
repnz
jmp
cli
insb
addr16
xchg
dec
sarb
dec
inc
and
cmp
loop
lret
out
push
movsl
push
mov
xor
or
xorb
lcall
adc
bound
cmp
push
lcall
push
dec
fisttpll
xor
mov
insl
loop
scas
adc
push
mov
and
in
push
add
push
xor
cltd
mov
mov
pop
nop
lds
jb
fdecstp
add
stos
cmp
sub
and
add
mov
inc
or
lea
sbb
dec
mov
and
mov
lea
xor
pop
mov
or
xor
add
jmp
repnz
ret
sbb
movsb
sub
out
loope
adc
add
movsl
and
rorl
add
test
cmp
ss
mov
cmp
jne
sub
shlb
add
filds
mov
test
add
imul
dec
testb
arpl
out
shrl
imul
jge
add
fdivl
add
fldenv
insl
or
lock
imul
out
push
or
in
mov
push
mov
out
mov
or
scas
int3
call
repz
clc
inc
jle
mov
loopne
jecxz
outsl
dec
jmp
mov
dec
clc
mov
enter
inc
push
std
ret
push
stc
jmp
hlt
fldt
insb
mov
into
mov
mov
add
sub
ret
ficoms
mov
test
jno
ret
push
sub
inc
sub
cwtl
add
outsl
xorl
add
call
add
std
stos
pop
sub
paddd
lock
mov
test
add
sub
add
mov
ret
dec
adc
pop
add
loop
es
cmpsl
xchg
mov
sbb
aam
popl
mov
lods
adc
test
mov
rolb
and
inc
add
icebp
in
xor
and
add
push
lret
stos
verw
pushf
cltd
jg
sbb
add
rcr
xchg
jle
lea
cs
pop
icebp
add
and
cli
pop
mov
lods
push
sub
les
sub
test
ja
xor
int3
jo
xor
negl
mov
and
out
xor
sbb
pop
sub
add
jecxz
and
lret
pop
outsb
push
add
mov
mov
mov
cltd
repz
jno
dec
inc
cmp
or
add
les
dec
or
xor
dec
sbb
in
and
ret
pop
add
iret
shr
mov
mov
adcb
fmul
cmp
or
add
or
pop
es
cmpsl
sbb
sub
scas
xchg
mov
icebp
dec
or
out
or
jbe
push
cmp
dec
inc
add
push
mov
mov
and
xor
inc
out
in
ret
js
add
push
xchg
mov
stos
sahf
mov
mov
inc
cmpb
sbb
xchg
adc
int3
add
fbld
dec
add
shll
pop
pop
push
adc
cwtl
out
jecxz
cmp
cmp
pushf
inc
ret
pop
xor
rorl
sub
ja
mov
fs
sbb
inc
scas
and
jmp
jbe
sbb
dec
xchg
sub
cmp
in
aas
mov
push
xor
out
cmpsb
jmp
push
dec
cmp
iret
cwtl
lret
pop
leave
xchg
adcl
sbb
pop
push
dec
mov
add
lods
add
and
add
or
imul
pop
mov
rolb
outsb
shrb
jle
popa
dec
scas
dec
adc
dec
pop
mov
sbb
adc
jle
fbstp
out
jb
mov
sub
into
jne
inc
xchg
scas
aas
adc
ret
inc
xchg
cs
xor
test
lods
add
outsl
ss
or
sub
ljmp
ret
mov
sbb
jbe
lods
sub
mov
adc
sub
rcl
jl
fwait
cmp
cmp
mov
imull
mov
out
lds
and
sbb
mov
loop
out
push
inc
pusha
or
and
push
dec
adc
movsl
push
mov
jp
divl
insb
iret
inc
movsb
jle
xor
cmp
aam
arpl
jbe
and
in
mov
add
sub
imul
movsb
jp
aam
xchg
inc
mov
or
arpl
and
bound
jl
jle,pn
test
popf
scas
xor
loop
out
pop
les
fwait
jmp
push
adc
dec
call
out
push
sbbb
mov
les
aas
cltd
mov
cltd
add
aas
in
xchg
xchg
add
xor
sbb
fld
add
scas
enter
sub
xchg
orl
push
cltd
add
jp
sbb
mov
mov
cmc
pop
out
or
sub
dec
adc
cs
fildl
jnp
repnz
fcompl
jo
inc
mov
shll
lods
stos
shll
dec
popf
cwtl
mov
fistpl
nop
jo
fwait
mov
ja
push
push
and
jo
mov
outsl
xchg
mov
ljmp
mov
das
ret
jp
and
sub
bound
pop
jb
mov
push
adc
adc
pop
pop
add
js
lret
and
xchg
shrl
adc
jmp
decb
push
out
lock
inc
add
test
test
imul
inc
jp
iret
cmp
and
xor
mov
push
sbb
sbb
jnp
test
add
or
pop
out
sarl
cmp
leave
cmpl
fcmovb
aad
pop
jo
or
push
xchg
adc
pop
pop
outsb
xorl
xor
inc
out
imul
jp
sub
mov
push
push
xchg
or
adc
push
inc
cmpb
xlat
sbb
cmp
loopne
and
sbb
jp
adc
lret
push
fdivr
and
xor
jg
outsl
add
mov
nop
jns
mov
push
mov
ficompl
cwtl
or
lcall
into
inc
mov
adc
std
adc
lahf
lods
inc
subb
or
mov
sub
push
lods
repnz
jp
adc
add
pop
pop
push
mov
push
out
dec
inc
fs
cld
lcall
sub
insb
in
and
test
js
in
mov
push
push
into
add
mov
ret
jne
aas
scas
sbb
rolb
cltd
inc
mov
sub
mov
add
push
inc
push
loopne
rclb
mov
scas
repz
jo
add
pop
adc
push
arpl
add
andl
lea
inc
xchg
stos
sub
push
fdivrl
ja
mov
or
jo
mov
pop
or
cmp
dec
pop
sub
mov
jnp
jns
pop
pop
jg
jo
sbb
xchg
scas
jmp
jl
icebp
ljmp
add
xor
add
xlat
pop
push
out
xor
dec
pop
pop
add
fisubrl
mov
fwait
cmpsb
int
xor
jmp
es
add
jle
adcl
push
repz
rorl
hlt
dec
inc
loope,pt
out
hlt
imul
inc
mov
aaa
aas
mov
dec
jo
lahf
pop
lods
add
add
je
movsb
add
adc
or
or
pop
jge
mov
iret
cmp
and
out
movl
nop
into
fwait
push
push
add
dec
jo
add
cld
mov
jecxz
js
idivl
pop
xchg
roll
jae
arpl
sub
icebp
add
xor
xchg
pop
push
aam
push
cmpsl
add
in
pushf
pop
mov
pop
ret
mov
shlb
jbe
inc
push
in
and
or
cmp
dec
mov
imul
mov
xchg
mulb
jg
sbbb
xor
int3
mov
xor
pop
outsl
rcll
push
dec
sbb
repnz
insl
push
and
cld
and
enter
xchg
lret
popa
sub
idivl
test
addl
add
dec
add
inc
add
add
add
pop
pop
jle
sarb
fidivs
jns
dec
adc
and
pop
out
add
pop
push
add
sbb
arpl
push
divl
mov
lret
loop
jns
xchg
mov
jo
or
add
sbb
mov
xlat
out
cmp
inc
add
mov
testb
jmp
xor
subl
jbe
dec
inc
xor
adc
ss
sbb
add
mov
mov
jl
push
cld
xchg
rol
pop
insb
add
adc
inc
dec
sbb
mov
add
sbb
jmp
ret
add
lret
mov
xor
mov
jne
rol
cmp
mov
ja
jp
add
add
repnz
pop
imul
xor
sub
pop
aam
ja
pop
jl
jle
mov
dec
hlt
push
popa
call
adc
lds
sub
add
push
mov
jmp
cli
add
push
decl
ljmp
add
imul
notl
loope
ret
pop
ret
mulb
adc
jp
cwtl
mov
fxtract
cmp
movsb
fildl
push
pop
cltd
add
pop
push
inc
dec
inc
inc
push
cmpsb
jmp
lds
and
adc
dec
test
mov
jg
sbbb
ret
add
in
sub
push
sub
add
sbb
mov
xor
inc
inc
pop
add
popfw
movsl
xor
cli
push
loopne
out
add
fmuls
add
addr16
fwait
push
jecxz
push
add
dec
cmpsb
js
mov
cld
mov
or
xor
cmp
add
stos
repnz
sub
popa
adc
daa
sbb
xchg
push
ds
sarl
pushf
dec
inc
nop
pop
pop
test
jmp
inc
cmpsb
mov
and
nop
hlt
mov
je
and
mov
es
sbb
ret
mov
mov
icebp
popf
lock
scas
add
inc
and
test
je
dec
add
aam
xchg
xchg
jns
push
popa
mov
add
loopne
jb
lea
push
ljmp
jmp
or
xchg
sub
outsl
push
ss
adc
out
sti
push
and
out
test
add
jg,pt
mov
push
add
or
es
loope
pop
or
les
aad
movb
insb
ret
sub
imul
jno
xor
shll
mov
add
xor
mul
mov
in
into
xchg
jae
jge
xchg
adc
nop
add
lods
and
and
jo
pop
into
cli
aas
inc
add
loop
sbb
xchg
out
fcoms
popa
loopne
and
or
jae
and
add
push
sbb
pop
sub
jo
xlat
add
adc
test
repnz
pop
add
mov
and
mov
inc
cmp
in
pop
xor
faddl
sub
fwait
jno
fstl
add
push
mov
mov
add
sub
inc
add
in
jnp
add
adc
xorl
gs
loopne
cli
sub
push
call
in
sbb
add
mov
xchg
push
add
ja
xchg
xchg
sub
add
cmp
jg
outsb
push
add
and
dec
pop
lret
adc
test
popf
and
out
mov
sub
or
data16
lahf
cld
and
inc
aam
ret
pop
popa
rcll
imul
nop
lret
mov
insl
push
dec
into
xchg
cltd
shlb
pop
addb
fcmovb
int
lcall
aad
sub
mov
fcoml
pop
icebp
addl
xchg
mov
cli
divl
ret
aam
iret
adc
lock
mov
add
jg
movl
mov
pop
or
cmp
imul
cmpb
mov
and
stos
add
push
jne
add
jp
jg
and
push
mov
mov
call
shll
test
add
lret
popa
push
in
add
mov
cmc
pop
mov
leave
mov
xor
or
cmp
mov
xchg
test
add
mov
ds
in
sbb
sahf
mov
jns
inc
jp
cmp
add
dec
je
pop
bound
jmp
xchg
sti
dec
movsb
add
lods
cmp
add
xor
inc
jne
test
mov
sbb
add
in
push
repnz
rcr
push
mov
xchg
test
es
cmpsb
mov
lahf
fdivrs
scas
mov
adc
inc
jecxz
push
decl
movsb
sub
xchg
or
or
push
push
add
dec
xor
add
cltd
push
rolb
test
repz
loop
leave
pop
and
sub
inc
insb
ret
push
nop
mov
je
mov
mov
fldl
sbb
gs
scas
add
popa
add
dec
pop
sub
fstpl
sub
repnz
dec
xor
dec
sbb
add
push
add
mov
or
add
outsb
movsl
sti
jl
mov
xorl
ja
subb
inc
inc
xor
cs
ficomps
mov
ds
vunpckhps
push
mov
and
out
rolb
push
ja
jns
inc
hlt
popa
addb
mov
xchg
mov
add
pusha
add
push
xchg
cld
jge
adc
iret
repz
jl
loopne
add
push
out
cwtl
pop
mov
add
mov
sahf
xor
inc
lock
jno
push
dec
cmp
sarl
es
cmp
add
sbb
cmpl
pop
movsl
and
or
mov
sbb
push
out
test
jp
fstps
gs
add
outsb
adcb
dec
sbb
fisubs
xchg
jle
jb
add
repnz
in
jp
add
iret
aas
nop
fdivl
pop
add
xor
push
mov
xchg
push
mov
sub
je
add
out
sub
fistpll
add
imul
data16
out
lock
jnp
fsubr
leave
mov
lods
roll
and
aas
xchg
jmp
push
xor
dec
add
cld
xor
xchg
sbb
repnz
cmp
pop
sahf
shl
popa
inc
ret
cmpl
and
popf
aaa
outsl
pop
sahf
sub
adc
cmp
sub
leave
sub
pop
sub
lret
jp
add
adc
cmpsb
fs
dec
bound
jne
es
xor
mov
sarl
or
and
cmp
rcrb
jp
outsb
das
movb
jge
cmc
loopne
out
inc
cltd
and
and
jp
roll
cs
add
mov
dec
cmp
xlat
jnp
dec
imul
or
mov
or
or
je
ret
scas
jns
sub
arpl
fwait
aad
cmp
lds
mov
stos
add
icebp
lret
call
sub
jle
sbb
jge
fbstp
add
jle
and
addb
lods
fdivrs
push
lds
addr16
sub
std
xor
wrmsr
inc
arpl
fstl
jl
jecxz
inc
lahf
roll
cmpsb
mov
loope
jle
cmpb
mov
jge
xchg
test
imul
jg
sti
dec
xor
cwtl
lahf
jne
sti
adc
mov
and
loop
sbb
pop
ja
scas
subb
jge
outsb
popl
mov
cwtl
xor
gs
cmp
xchg
dec
cmp
imul
pop
jne
jmp
cmp
jp
jae
push
xchg
cmp
faddl
and
add
adc
incl
or
stos
cmpsb
in
pop
imul
jp
cmp
xlat
aas
cmc
hlt
cmp
xor
daa
ret
mov
mov
push
sbb
add
xor
sbb
fldenv
xchg
fisubrl
xor
and
lahf
sub
std
lock
test
and
add
lock
subb
pop
adc
daa
adc
or
adc
add
jmp
mov
push
daa
push
lcall
pusha
cmp
shll
je
aaa
popa
mov
jp
cwtl
adc
es
out
out
xchg
adc
cmp
xchg
cld
decl
xor
mov
popf
xor
add
imul
and
push
nop
ss
and
jecxz
inc
sub
sub
lods
and
ret
fnsave
out
pop
rol
jge
pop
or
scas
dec
fwait
rclb
aas
hlt
xor
aas
je
xchg
jmp
lock
ret
in
ds
sbb
testb
adcb
or
out
xchg
xchg
xorl
lock
sbb
jl
jecxz
cltd
jecxz
lds
sbb
in
adc
inc
mov
pop
or
iret
dec
mov
and
add
mov
xchg
cwtl
out
out
mov
mov
cs
pop
mov
xchg
sbb
push
sbbb
aam
es
test
fnsave
vpshlw
sub
mov
mov
push
or
mov
cmp
dec
push
add
sub
jp
iret
loopne
or
mov
test
insb
or
add
scas
cmp
xor
in
add
push
shll
pop
pop
mov
dec
jp
ds
jb
daa
aas
fsubrl
xchg
gs
push
jl
mov
or
scas
es
pop
std
xor
bound
cmp
in
mov
sahf
cmp
and
xchg
sbb
inc
lods
cli
ja
push
pop
xor
outsl
mov
sbb
repz
dec
jle
out
ds
lods
repnz
inc
and
adc
inc
sbb
sbb
repnz
dec
jne
mov
aas
cmp
loope
push
xor
adc
adc
pusha
in
fdiv
jns
pop
outsl
adc
mov
push
ret
outsb
sub
add
in
jae
stos
inc
mov
mov
mov
loopne
dec
mov
inc
dec
test
add
push
rcl
cli
pushf
pop
addr16
sbb
aad
mov
or
mov
mov
sbb
scas
cmp
push
cmpsb
insb
out
sbb
lahf
jecxz
shr
sbb
mov
pop
pop
and
scas
jle
inc
or
add
icebp
mov
inc
or
cwtl
cmp
mov
or
mov
pop
push
cmpb
pop
icebp
jmp
sarb
pop
sub
xor
and
ret
movsl
xor
pop
mov
popf
in
mov
add
xchg
lods
or
addb
scas
push
add
lock
xchg
sbb
or
push
ds
sbb
sbb
add
pusha
mov
in
add
inc
cld
ficoms
add
xlat
lahf
cmp
mov
mov
rclb
ret
rolb
xchg
adc
or
je
ficompl
or
in
lret
mov
or
xlat
js
jp
inc
leave
push
cmp
pop
push
push
or
push
xchg
and
sbb
pop
push
iret
test
add
imul
sbb
jne
xor
lock
out
inc
in
and
or
addl
jbe
jns
mov
xchg
cwtl
orl
mov
dec
cmp
cltd
mov
sub
cmpsb
roll
daa
ja
ljmp
add
push
or
in
push
scas
push
sub
push
adcl
push
push
mov
std
xor
xor
js
push
es
cli
and
in
jo
mov
or
aad
shrb
pop
xor
leave
sahf
pushl
sbb
push
repnz
adc
and
mov
std
mov
leave
movsb
popa
add
mov
or
icebp
sub
arpl
or
push
out
imul
push
pusha
mov
lahf
mov
cmpl
adc
in
outsb
push
add
test
subb
sbb
push
outsl
cmp
dec
in
mov
xor
adc
inc
rorb
adc
or
cmpsl
rcr
jmp
dec
cmp
sahf
jns
add
out
mov
mov
cmp
rcr
cwtl
add
or
daa
mov
push
and
xor
push
xchg
mov
addr16
push
sarl
jb
mov
push
sbb
and
sub
insl
mov
iret
shll
mov
xchg
add
mov
cmp
insl
cmpb
pop
lahf
call
mov
js
mov
loope
xchg
rcrb
xchg
idiv
cmpb
cmp
sub
inc
sbb
mov
aas
jp
ja
mov
xchg
jecxz
sub
jge
xor
cmp
shrb
push
mov
loopne
add
xor
test
and
cmp
int
cmpl
inc
jle
andb
and
xlat
sub
loopne
insb
jp
testb
shrl
adc
loope
out
stos
fprem1
and
push
rorb
jp
push
mov
mov
ret
cmp
pop
mov
inc
jne
icebp
outsl
sub
test
repnz
jge
mov
fcmovnbe
mov
mov
mov
sub
outsl
sub
sbb
jne
scas
lods
repz
mov
mov
xchg
push
sbbb
test
push
push
mov
mov
pop
push
rorl
inc
call
in
sub
stos
pop
shlb
sub
pop
cmc
testb
and
jecxz
lcall
popa
cmpsb
add
cmp
outsb
or
add
add
imul
mov
repnz
xchg
mov
add
sub
aaa
mov
xor
sbb
sbb
and
gs
and
jecxz
pop
adc
cmc
idiv
test
ss
sti
ds
add
pop
sbb
inc
add
dec
lret
mov
add
add
add
addl
mov
cmp
loopne
push
and
filds
inc
pop
mov
ret
repz
xor
sub
inc
ror
stc
imul
aam
fisubs
push
out
lods
add
sub
repnz
inc
and
lods
js
adc
ficomps
lahf
js
xor
out
es
out
pop
arpl
iret
addr16
lcall
add
jmp
data16
cs
dec
sar
cli
mov
std
sub
test
scas
adc
mov
pop
pop
add
inc
mov
inc
ret
dec
add
jle
add
int
addb
ret
pop
sub
add
sub
and
sub
in
adc
scas
shrb
scas
sbb
xchg
xchg
xor
dec
aas
testl
shr
iret
xor
cmp
test
add
adc
inc
jns
and
ja
cwtl
inc
add
cmp
add
sub
outsb
push
mov
sub
cwtl
fsubl
fwait
mov
lock
enter
sbb
mov
ja
add
addr16
adc
mov
call
lods
cld
ss
ja
mov
sbb
adc
sbb
popa
je
repz
dec
push
or
outsl
je
cmp
int3
inc
add
aad
in
push
rolb
rcrb
aas
es
pusha
pop
cmc
jae
add
mov
jns
sub
add
fists
jge
adc
jne
fstl
outsl
mov
aad
mov
sbb
fists
add
jnp
mov
add
fcoms
into
ja
sahf
insl
call
push
inc
add
stos
pop
lret
cli
add
fbld
jle
jns
scas
add
shll
push
movsb
mov
es
ds
fcmovu
mov
addr16
pop
xchg
push
add
pop
jl
aad
cmp
mov
sbb
hlt
mov
push
adc
jns
pop
add
aam
imul
push
in
mov
mov
xor
pop
cmp
rcrb
loope
mov
cltd
dec
adc
pop
xchg
mov
add
cmp
fucomp
out
or
or
cmpsl
sbb
ds
pop
xchg
fimuls
aas
lahf
push
in
in
add
inc
sbb
pop
out
scas
mov
jbe
push
push
xor
xchg
sarl
pop
cmpsl
adc
pop
lods
mov
mov
mov
mov
xor
push
lahf
addl
jl
jge
add
mov
in
ret
mov
pop
add
sbb
addl
aas
add
or
cli
mov
mov
xchg
pop
sub
fcmovne
xchg
js
shlb
std
out
sarb
adc
cmpsb
movsl
sbb
jp
rorb
jb
xor
and
addb
repz
mov
add
push
sbb
inc
in
flds
cs
repnz
xchg
lods
dec
add
sub
mov
dec
icebp
lret
pushf
outsl
ret
inc
sbb
add
nop
dec
mov
and
popf
sbb
xlat
push
jle
jo
roll
sbb
inc
adc
push
sub
ficoms
push
mov
fstpt
jnp
dec
sub
add
xchg
mov
add
outsl
and
add
pop
scas
pop
sahf
cmpsb
add
push
dec
arpl
mov
aas
hlt
ss
pop
in
add
clc
mov
jno
popf
mov
imul
cld
rcrl
shrb
xor
jbe
inc
pop
cwtl
inc
add
sub
daa
mov
sbb
push
jg
movsb
xor
popa
add
dec
mov
cmp
xchg
nop
outsb
test
loop
stos
popf
out
stc
jnp
inc
add
aas
mov
pop
dec
inc
pop
rclb
loopne
push
es
ret
sub
popa
in
test
pop
jo
cmp
movsb
add
fcoml
fcmovb
dec
jns
mov
std
jle
sahf
out
ret
loope
xor
add
imul
adc
adc
mov
enter
mov
add
jb
into
aam
sub
xchg
rolb
add
sbb
cmp
aaa
adc
sub
repnz
iret
aad
inc
addr16
movsl
in
test
data16
rcll
sahf
cli
loopne
gs
adc
clc
add
inc
aas
cmp
cmpsl
daa
cld
adc
mov
adc
aaa
sbb
dec
hlt
cmpsb
inc
sbb
and
dec
mov
sbb
loope
or
xor
in
add
mov
sbb
sarb
push
push
mov
out
mov
add
jae
xor
add
or
je
jecxz
daa
or
ds
sbb
aam
lods
rclb
stos
mov
add
lea
add
stos
cmpsb
push
add
mov
pop
in
scas
inc
and
add
fistl
shlb
loop
cmp
dec
dec
jl
push
ds
incb
jle
xchg
xchg
and
mov
xor
aaa
add
fisubrl
lds
fstl
mov
stos
mov
adc
data16
xchg
faddl
shrl
cs
pop
sbb
cli
inc
add
pop
push
lock
add
shll
mov
and
scas
add
xor
imul
xor
mov
cmp
movsb
fldt
inc
aad
rclb
and
inc
ss
add
pop
into
outsl
div
sysexit
movsb
into
imul
pop
pop
adc
add
or
jmp
push
stc
xor
mov
and
cmp
stc
mov
jmp
ja
xchg
ret
ljmp
cmp
xor
dec
adc
fst
or
aad
push
xor
sbb
add
testl
subl
call
stos
daa
rol
mov
sbb
mov
outsb
xchg
sahf
int
mov
leave
or
add
popf
lret
add
scas
inc
sti
lock
xchg
aad
scas
adc
or
mov
pop
xor
fdivrs
inc
or
and
inc
or
fldcw
int3
mov
loopne
xorl
sahf
adc
push
scas
es
add
pop
dec
fimuls
mov
cld
ret
pusha
mov
stos
xor
pop
sbbl
hlt
aas
fmuls
mov
sahf
rcr
cld
and
aam
fdivl
lods
addr16
lret
pop
add
movsl
std
dec
pop
add
xchg
push
jnp
cmp
aad
mov
enter
jle
test
inc
xor
fcmovbe
add
sub
jmp
lock
movsb
and
icebp
in
data16
dec
pop
mov
add
push
sti
pusha
sahf
dec
das
cmc
lret
push
iret
sbb
lret
int3
int
add
push
sbb
call
sub
add
psubd
insl
adc
out
inc
negb
cmp
jne
cmp
je
mov
pop
dec
sarb
sahf
or
out
mov
add
lea
in
stos
pushf
xchg
in
iret
movsl
dec
sarb
insl
xor
sub
jle
icebp
out
ljmp
les
daa
ljmp
mov
fwait
mov
jp
andb
out
push
and
outsl
popf
dec
loop,pt
aad
add
sub
sahf
inc
sti
pusha
and
xchg
jno
push
aas
sub
or
pusha
loopne,pt
add
inc
loopne
xor
pusha
mov
jmp
insb
lret
add
ds
dec
int
inc
bound
push
mov
inc
je
cmp
jle
xchg
push
aaa
mov
roll
arpl
adc
mov
loop
test
cmc
out
add
jno
lods
fistpll
cmp
fs
lret
pop
lret
ret
cmp
imul
jns
stos
cmp
std
push
rolb
bound
jo
mov
ret
adc
pop
push
pop
cwtl
lock
mov
mov
inc
inc
lret
hlt
mov
lahf
orl
jno
mov
mov
add
inc
addl
jb
push
movsl
aaa
loop
xor
add
in
and
dec
fwait
adc
sbb
je
out
popa
pop
dec
sub
int3
cld
add
mov
leave
xor
inc
inc
add
add
cld
pop
popf
adc
or
mov
xchg
add
mov
push
dec
repz
adc
mov
rcrl
clc
pop
mov
sub
xchg
insl
mov
inc
enter
add
inc
dec
push
js
fucomip
or
add
es
inc
jns
adc
ret
cmp
or
add
push
sbb
and
scas
icebp
js
push
cltd
add
rclb
cwtl
push
rcll
mov
das
test
in
nop
pop
dec
std
cmp
mov
sahf
jae
mov
mov
inc
insb
jp
mov
dec
mov
dec
and
mov
cmp
fbstp
mov
mov
push
dec
jb
xchg
add
xlat
lret
movsl
sbb
add
or
pop
cltd
sub
push
fcmovnu
fistps
and
add
notb
xor
mov
shl
out
mov
cmp
add
cmp
sub
add
or
mov
adc
and
add
xchg
clc
xchg
mov
test
ja
repz
loop
in
push
je
and
cmpsb
fistpll
iret
push
add
stos
xchg
xchg
jns
xor
lock
bound
jnp
adc
cmp
ret
adc
jo
xorb
cmp
inc
or
ja,pt
sbb
sbb
mov
es
push
enter
pop
xor
pop
jmp
pushf
inc
dec
push
add
clc
rol
pop
or
loop
leave
xor
aam
jl
jmp
push
dec
jnp
movsb
shr
jae
xor
jbe
shlb
in
and
repnz
sub
cmp
xchg
add
cmc
xor
xchg
rol
push
xchg
mov
cli
into
add
ret
jle
addr16
dec
incb
cwtl
push
dec
mov
inc
in
xchg
sbb
xchg
dec
ja
adc
push
inc
lret
scas
imulb
cli
or
stos
or
adc
and
in
jno
pop
lock
mov
cwtl
iret
inc
imul
pop
jns
jl
add
popa
adc
pusha
imul
add
or
mov
xor
imul
aas
stos
sti
add
jbe
and
in
gs
cmp
add
testl
lret
dec
pop
cmpsl
repz
stos
int
lahf
add
mov
mov
fsts
test
clc
shll
loopne
rorl
lock
mov
xchg
sub
test
or
add
push
jle
xor
jecxz
pop
push
jb
out
outsl
clc
inc
inc
xchg
repz
xor
inc
sub
sbb
xor
xor
and
sub
adc
daa
ret
and
xor
and
fdivs
cmpl
inc
add
sbb
and
add
cltd
pop
pop
mov
cli
mov
add
shl
mov
push
or
add
in
jno,pt
inc
add
pop
pop
stos
dec
jmp
xchg
fwait
inc
enter
pop
mov
pushf
mov
or
cmp
dec
addl
or
cltd
add
testb
jg
xchg
subl
adc
mov
inc
insb
ficompl
sbb
sub
xchg
movb
lods
pop
dec
add
push
xchg
xchg
add
fiadds
mov
dec
insb
sahf
mov
or
cmovb
add
jnp
inc
jno
mov
fsubp
xorl
es
pop
pop
fnstcw
xchg
stc
cmp
dec
in
sbb
jne
adc
mov
push
push
fldl
mov
int3
sahf
fcomps
xchg
add
and
sarl
hlt
fisubs
shr
sti
dec
add
f2xm1
add
mov
jne
pop
add
roll
aad
sub
fistpll
add
mov
lret
xchg
dec
add
sbb
cmp
rorl
fs
mov
add
mov
cli
jae
das
xlat
mov
push
push
jns
or
icebp
scas
adc
pop
bound
and
fwait
push
in
out
mov
adc
push
cmp
enter
add
inc
dec
adc
xchg
sub
pop
out
mov
cmc
push
xor
dec
rolb
add
in
xchg
cmp
into
inc
sub
jno
xor
add
cmc
in
xor
mov
dec
cmp
mov
sbb
outsb
out
sub
add
mov
lods
add
xchg
dec
lcall
add
gs
jne
xor
dec
add
hlt
add
outsl
sub
add
dec
cli
add
add
aad
jg
jo
rolb
rcll
popf
add
sbb
cli
sbb
ljmp
cmp
rcl
testb
sahf
adc
push
jnp
or
sub
or
aam
xchg
icebp
mov
fdivrs
push
insl
add
add
xchg
repnz
jmp
aad
sbb
clc
xchg
mov
or
and
imul
mov
mov
shlb
dec
cmpl
xchg
orl
adc
movsb
das
cwtl
add
outsb
push
inc
enter
nop
test
cmp
xchg
jno
jp
cmp
add
xlat
mov
gs
fcmovne
enter
lock
xchg
add
stos
add
cmc
push
cs
add
sub
adc
or
mov
imul
mov
cwtl
lods
dec
loope
and
lock
rcrb
xor
inc
sti
add
dec
and
xor
pop
pop
pop
mov
neg
movsl
add
mov
sub
mov
inc
insb
rol
fidivrs
or
add
mov
pop
dec
rorl
mov
lods
mov
andb
inc
fwait
xor
add
in
int
mov
adc
imul
sbb
ret
imul
rcr
out
sub
dec
add
leave
shrl
faddl
inc
hlt
pushf
lahf
ds
fmull
mov
sub
dec
add
or
fisttps
mov
sti
test
negw
in
push
and
push
ret
add
sub
jae
popf
pop
push
shll
push
popl
adc
lea
xor
cmp
xor
mov
jecxz
ret
inc
mov
xor
inc
lcall
aas
enter
sub
cmpsb
test
aam
xor
cmp
gs
add
mov
add
xor
mov
pop
xchg
in
add
inc
das
pop
sbb
leave
push
cmp
xchg
add
sti
sbb
xor
pop
adc
xchg
scas
test
and
xor
pushf
popa
shrl
in
add
in
movsb
inc
inc
popa
pop
inc
dec
add
andb
addl
jae
pop
inc
add
addr16
add
ja
dec
push
sbb
lods
xchg
and
cmp
cmpsb
gs
add
cwtl
xchg
fwait
mov
xchg
xchg
cmp
lock
push
pop
sbb
jnp
inc
vmovdqu64
icebp
into
mov
scas
sbb
sub
incb
stos
pop
es
fadds
dec
cmc
pop
notb
lds
mov
sbb
popf
jb
sub
fcoml
repnz
movsb
mov
pop
add
or
shrb
daa
rcrl
ss
mov
inc
cmpsl
and
in
push
mov
adc
jae
and
add
mov
pop
jmp
test
sbb
fldcw
dec
es
add
mov
je
dec
add
mov
add
test
addr16
in
fldl
or
add
push
jo
jmp
xchg
push
add
cmpsb
loope
test
adc
loopne
repz
and
in
sbb
mov
mov
cld
ret
sahf
rcrl
ret
dec
insl
imul
mov
sbb
mov
push
adc
push
mov
mov
out
and
lea
test
add
xchg
jecxz
mov
and
pushf
inc
inc
add
jp
ds
aas
fildl
sbb
loop
arpl
lahf
mov
and
addl
sar
mov
sub
mov
fnstsw
cmp
add
je
outsb
push
jbe
pop
add
int
lods
xchg
cmp
jp
lock
and
add
pop
inc
lahf
popf
mov
xchg
aas
xchg
jo
cmp
pop
ds
push
add
or
mov
pop
add
fnstsw
pop
jg
sub
insb
loop
fisttpll
sbb
cmp
inc
aaa
pop
ret
imul
cs
outsb
pop
lds
ljmp
or
add
mov
sbb
fs
sbb
call
add
add
or
or
lods
push
leave
imul
xor
aaa
inc
test
aas
cmp
xor
or
pop
mov
cmc
test
test
push
push
jbe
add
leave
fstps
lret
popf
cli
ss
jle
shll
xor
lea
adc
inc
into
ret
mov
add
stos
frstor
mov
lcall
jle
aaa
enter
faddp
std
out
mov
dec
xor
mov
pop
add
ljmp
cld
ja
lds
mov
loope
dec
idivl
lahf
scas
ret
add
push
bnd
in
jb
inc
dec
pop
inc
and
sahf
mov
mov
divb
out
xor
in
cltd
dec
pop
inc
and
bnd
inc
sub
orl
jecxz
xor
inc
cmp
mov
pop
push
xor
cmc
add
dec
jl
loope
cmp
add
aam
test
xlat
add
cmp
pop
add
jl
addr16
pusha
js
jge
sbb
roll
push
push
mov
jle
push
add
sub
out
mov
cmp
jg
add
mov
pop
and
push
jo
shll
mov
jae
fsubp
sub
mov
cmp
addr16
push
cmp
pop
daa
pop
and
pop
xor
and
nop
inc
repnz
mov
or
hlt
cmp
arpl
cmp
in
or
mov
mov
dec
shll
cmp
pop
and
out
xor
fsubrp
sbb
xlat
popf
scas
flds
cmpsb
inc
test
scas
cmp
and
add
adc
sub
or
fdivrs
lods
mov
mov
pop
sub
adc
lods
mov
outsb
or
xchg
sub
push
scas
insl
rcl
fsubl
jecxz
xchg
push
or
sbb
into
bound
dec
incl
lods
pusha
cltd
cmpsl
fnstcw
fidivl
call
jecxz
lds
cmpsl
cmp
les
push
scas
mov
add
ljmp
cmp
fildl
loopne
and
and
xor
mov
imul
xorb
fnsave
out
scas
xor
frstor
add
sub
movsb
pop
dec
bound
adc
repz
pop
adc
rol
pop
add
scas
repz
xor
and
inc
lods
jle
loop
pop
es
dec
rolb
add
xchg
xchg
scas
nop
inc
cmp
cld
icebp
or
or
or
pop
scas
add
adc
add
pop
shlb
pop
jbe
je
ljmp
movsb
outsb
add
test
sbb
sub
jmp
xor
adcb
add
stc
cmp
push
fdivl
repz
xchg
xor
and
jg
rorb
fistl
add
das
and
call
mov
add
fsubrs
imul
jo
adc
in
sbb
add
in
cltd
sub
lock
mov
xchg
mov
stos
jno
jp
imul
fcoml
and
cmpsb
add
inc
int
mov
pop
sub
in
add
incb
or
aad
inc
push
dec
dec
xor
or
divl
ret
aam
push
mov
pushf
add
lods
inc
testb
roll
push
dec
leave
mov
xchg
sub
xchg
mov
or
and
jns
pop
xchg
ja
jbe
and
jmp
dec
dec
inc
pop
push
jle
add
scas
test
aam
int3
in
outsb
das
faddl
and
xor
aas
sub
mov
mov
jae
push
sbb
inc
lret
imul
decl
pop
add
cs
data16
sti
push
fadd
or
in
addr16
cli
ret
mov
sbb
out
test
shlb
es
testb
xchg
and
cs
mov
ss
cmp
mov
flds
mov
xchg
add
ret
ds
xor
shrl
add
icebp
sub
rorb
ss
dec
dec
inc
lret
add
imul
xchg
push
sub
mov
test
and
pop
roll
sahf
shrb
ljmp
adc
add
push
filds
sbb
pop
or
addr16
loop
repz
and
mov
add
jb
sbb
sub
add
inc
loope
insb
ret
pop
xchg
into
cmp
add
mov
dec
ror
mov
jge
pop
cmp
test
mov
add
push
pusha
dec
rcrl
into
push
jnp
stos
mov
and
lret
stos
out
push
bound
add
mov
mov
pop
sti
cmp
add
add
cmp
add
ret
xchg
xor
aad
add
rcr
imul
adc
mov
nop
out
mov
in
add
push
stos
pusha
rcl
add
pop
repnz
xor
sub
rorl
cmp
rcrb
cs
xor
jne
add
out
pop
ret
dec
push
data16
ja
cmpl
xchg
jl
movsb
add
adc
pop
in
or
sub
jns
sarb
jnp
icebp
outsl
xchg
idivb
shrl
pushf
xchg
sahf
or
fs
add
add
and
add
jne
rcrb
xchg
rcll
out
dec
imulb
js
add
jecxz
inc
aaa
adc
daa
fbld
mov
not
inc
es
enter
sbb
icebp
add
repz
xor
dec
bound
jb
mov
out
xor
inc
xor
sbbl
cmp
cmp
add
lods
xchg
push
lds
rcrl
dec
mov
cmp
jns
repnz
push
and
inc
or
cli
ret
sarb
pop
repz
add
xchg
iret
arpl
inc
aam
outsb
add
ja
bound
lcall
pop
pop
js
xor
shrl
mov
cmp
xor
mov
sbb
mov
mov
sahf
mov
nop
popf
push
pusha
adc
add
adcb
sub
add
jnp
popl
dec
cmpsb
das
jno
imul
lea
push
xor
add
mov
sub
add
sbb
sbb
sbb
lea
jb
nop
bound
add
js
gs
push
mov
sbb
daa
xchg
push
pop
pop
pusha
test
in
inc
pop
pop
xor
aad
cmpsl
or
cmp
or
and
sbb
cmp
dec
iret
push
aas
add
sub
nop
inc
add
mov
inc
call
mov
fldl
push
add
test
hlt
add
ficoms
fcompl
fstl
lods
lock
add
mov
arpl
add
dec
pushf
jno
fldl
mov
jge
and
inc
push
cld
inc
test
inc
fcomi
jle
psubd
xchg
mov
add
add
jg
mull
jp
rol
aaa
push
les
cmpsb
adc
and
xor
inc
enter
aas
lcall
into
mov
inc
xlat
pushf
xor
jle
add
ja
fldt
mov
cmp
push
icebp
or
jae
lea
std
xrstors
add
shll
test
js
ljmp
adc
xchg
mov
adc
fmul
cwtl
add
mov
fcmovnbe
dec
aas
scas
cli
aad
ret
repz
in
push
outsb
arpl
and
fwait
icebp
sbb
or
out
jnp
add
xlat
stc
cmp
addr16
jmp
add
and
rol
stos
scas
loop
and
in
cli
les
and
roll
clc
in
subb
add
sub
push
xor
cmp
add
adc
popa
cmpsb
inc
sbb
sbbl
clc
cmp
xchg
and
cwtl
movsb
out
dec
mov
jge
or
sbb
jbe
sbb
mov
push
cld
mov
cli
mov
adc
pop
pop
mov
ljmp
inc
aad
aaa
arpl
lods
xor
dec
add
adc
test
dec
subb
outsl
add
push
cmp
repz
dec
addr16
adcb
sbb
sbb
je
gs
cmpsl
lock
mov
push
push
add
or
stos
mov
cwtl
rcrl
pop
mov
roll
add
mov
cmovp
lock
hlt
mov
xlat
sti
fucomp
xor
xor
ljmp
xacquire
pop
jae
ret
gs
orl
mov
outsl
loope
add
xor
add
pop
sbb
fadd
jne
dec
pop
in
scas
lods
xor
inc
adc
imul
imul
ds
add
mov
insb
and
push
xchg
sub
cmp
cmc
testb
ja
rclb
add
cmp
popa
inc
pop
adc
or
les
aad
cmp
mov
push
cmp
push
adc
mov
xchg
xchg
fcoms
call
adc
cmpsb
add
sbb
mov
pop
xor
les
mov
add
addr16
pop
les
sbb
push
pop
loop
ret
cmp
fistps
addr16
xchg
mov
inc
inc
in
dec
jecxz
fisttps
mov
and
subb
sbb
add
cmp
call
test
shlb
xchg
jno
inc
add
fsubs
jae
lcall
add
sbb
mov
mov
pop
lods
inc
iret
scas
aaa
orl
rorl
sub
jp
loop
call
add
xor
sub
pop
adc
push
add
dec
movsb
add
fwait
push
mov
mov
add
cmp
add
sub
cmp
add
mov
push
rclb
and
jae
add
shlb
or
stc
daa
inc
sbb
mov
scas
ds
cs
add
int3
fistps
lods
push
add
jp
imul
sbb
nop
scas
or
and
sub
mov
hlt
jg
lea
addb
xor
lods
pop
cltd
add
mov
xchg
add
xor
add
std
je
and
int3
xchg
cltd
push
xchg
push
les
add
test
nop
dec
adc
and
jo
add
lds
dec
popa
cmp
inc
sti
imul
push
sbb
ds
lcall
test
lea
or
outsl
xor
sbb
pop
ss
push
push
add
lahf
mov
add
adc
push
rcll
clc
xor
movsl
or
add
int3
sti
scas
mov
lret
ja
push
fstp
dec
xchg
hlt
inc
push
xorl
xor
sbb
mov
mov
in
jnp
cmp
add
jae
pop
repz
inc
adc
and
out
mov
cmpsb
test
incb
sbb
dec
mov
jns
inc
outsb
loopne
add
clc
pop
cmc
and
std
sarl
adc
cmp
sbb
imull
jne
jno
or
or
lods
xchg
fcoml
data16
or
rclb
xor
cmpsl
add
je
sahf
dec
and
and
orb
push
push
out
add
je
mov
sbb
sbbb
adc
mov
test
dec
sub
dec
ss
arpl
mov
testl
sbb
pop
mov
sbb
imul
cmp
push
notl
push
es
sub
and
pushf
test
jl
mov
pop
fcomip
cmp
roll
imul
dec
cld
add
xor
cmc
aaa
gs
rorl
cmp
lods
add
mov
xlat
testb
mov
das
cmp
adc
subl
sbb
add
arpl
mov
ret
cmp
and
in
clc
and
aaa
testb
into
and
jb
mov
int3
and
dec
cmp
xchg
mov
adc
add
xor
ds
inc
add
std
int
or
xchg
xor
push
addb
adc
std
fsubr
mov
and
mov
imulb
pushf
inc
pop
ficompl
adcl
js
scas
out
lods
xor
mov
inc
lahf
sarb
xor
add
ja
rcrl
push
mov
sahf
pop
add
outsl
pop
xor
lods
jnp
inc
loopne
fstpt
mov
dec
push
mov
xlat
add
jmp
in
inc
push
lahf
xlat
fwait
and
mov
pop
iret
push
and
daa
xchg
andl
inc
mov
sbb
inc
inc
movsb
pop
add
mov
cmp
rol
or
lahf
leave
mov
dec
jp
pop
cmpl
leave
add
je
push
sbb
cmp
ds
xlat
adc
mov
or
mov
push
scas
jbe
outsl
daa
jmp
outsl
inc
std
mov
push
sbb
loop
jmp
loop
xchg
arpl
sti
sub
jp
sub
cmp
dec
adc
mov
mov
xchg
cli
push
dec
cmp
insl
push
ja
adc
adc
add
mov
lods
cmp
sahf
repnz
mov
mov
into
daa
stos
and
je
sbb
int
popl
insb
aas
sarl
mov
and
cmpb
sbb
in
cmp
sub
xor
lahf
lcall
xlat
mov
pop
fs
test
mov
scas
sub
adc
inc
aas
add
into
cli
mov
add
ds
sub
mov
shll
mov
loopne
add
imul
dec
divl
adc
mov
add
iret
dec
arpl
and
add
dec
mulb
cld
jp
jbe
adc
int
scas
mov
mov
fmul
ss
pop
cmp
data16
imul
sub
pop
cmc
pop
subl
xor
inc
mov
int
add
ljmp
sub
mov
js
pop
sub
rcrl
cmpsl
dec
movsb
lea
mov
adc
or
lret
cwtl
xor
inc
and
stc
clc
ror
sarb
es
movsl
push
sbb
cmp
sarb
jmp
mov
xchg
mov
jge
jnp
add
in
mov
add
and
cmpsl
sarl
ljmp
add
outsb
xor
inc
cld
shr
jge
adc
xchg
add
sbb
add
add
cmpsb
pop
negb
fsubr
ret
add
test
add
rcrb
test
mov
int
mov
add
dec
and
dec
and
mov
sbb
das
ret
inc
rorl
fldt
mov
add
jae
andb
mov
adc
addr16
xchg
sub
cmp
push
cmp
stos
add
mov
cmp
dec
add
add
and
inc
ret
cmpb
fdivl
repnz
mov
test
jg
popf
lret
mov
add
hlt
and
inc
push
shlb
cs
xchg
ljmp
je
ret
adc
loop
aaa
and
dec
xchg
lock
imul
mov
popa
stos
xchg
xchg
pop
cltd
mov
add
cwtl
popf
ljmp
pavgw
add
shlb
in
add
pop
subl
das
mov
mov
daa
dec
add
or
test
pop
jmp
cmpsl
ret
out
into
or
add
jae
xor
fwait
es
in
jo
sub
jns
ss
shll
mov
or
push
into
sub
and
adc
dec
add
cmp
dec
pop
mov
stc
lret
iret
jp
enter
add
rcrl
data16
xor
and
add
mov
jb
out
push
and
mov
inc
add
iret
push
push
imul
out
shl
adc
insb
hlt
mov
mov
mov
and
mov
fs
push
xor
out
xchg
cmp
xlat
xor
add
rcrl
add
sahf
push
add
ficomps
mov
add
leave
cwtl
cmp
sub
test
add
mov
cld
jno
mull
int
leave
icebp
adc
hlt
idivb
out
sub
cmp
add
add
add
cmpsl
xchg
outsl
mov
rorl
daa
repnz
adc
and
jg
pmulhuw
enter
or
sbb
pop
xor
andl
mov
add
push
popa
dec
ds
loope
sbb
cmp
mov
sti
shrl
jg
mov
addb
dec
pop
cli
xchg
add
je
cmpsl
lret
dec
mov
ficoml
cwtl
mov
pusha
sub
idivb
cltd
lds
xor
icebp
out
stos
test
jg
jae
clc
jb
xor
lcall
pop
ret
sub
sub
mov
pop
xchg
push
jnp
add
adc
subb
repz
pushf
add
mov
jecxz
mov
call
repnz
pop
cs
add
enter
and
jmp
cmp
add
cmpb
mov
add
addl
stos
xor
cmp
and
sbb
cmp
aas
mov
inc
jge
cwtl
xor
dec
cmp
jmp
test
inc
mov
push
adc
add
fwait
mov
xor
leave
xor
notl
adc
sbb
pop
int
xor
pop
jle
inc
insb
dec
rorl
sbb
inc
pop
aam
int3
loopne
imul
in
add
mov
sarl
iret
mov
jge
sbb
mov
push
out
xor
and
mov
fldl
nop
sub
add
lock
movl
sbb
push
in
ret
shll
dec
movsl
insb
dec
movsb
loope
out
add
cwtl
sub
add
cmp
sbb
jno
sti
push
loop
insl
pop
and
cmp
xchg
inc
ret
icebp
ret
ja
xor
test
aad
arpl
xlat
stos
shl
js
and
mov
add
inc
jge
rol
push
orb
and
xlat
jno
inc
cmp
test
cltd
pop
aaa
mov
jno
jl
dec
ljmp
cmp
add
mov
jp
or
adcl
adc
iret
mov
sub
mov
jns
ds
insb
pushf
pop
int3
sbb
sbb
jb
test
cmpsl
add
and
iret
mov
pop
fs
pop
ljmp
add
ret
clc
ret
add
cld
xchg
adc
adc
sbb
andl
push
lods
inc
les
pop
jl
and
clc
in
test
cmp
xor
xchg
fs
push
out
inc
pop
sbb
mov
mov
shlb
xchg
xchg
mov
test
imul
xor
stc
adc
icebp
sub
mov
jge
pop
push
mov
add
inc
aad
ret
mov
push
cmpsl
dec
mov
imul
movb
shlb
ljmp
push
pop
cli
pop
adc
ret
mov
outsb
push
sbb
add
sub
jg
andb
mov
cmp
add
ret
cmp
loopne
push
push
and
ljmp
push
aam
inc
dec
inc
pop
sbb
and
jae
xorl
pop
fidivs
add
or
xor
add
flds
aad
cmp
test
test
ret
lds
inc
lock
inc
mov
adc
shlb
loope
je
lods
fiadds
adc
jle
lods
rcll
add
push
int
pop
rorl
pop
adc
mov
add
mov
popf
mov
or
test
imul
jecxz
pushf
xor
xchg
adcb
jnp,pn
ret
fildl
pop
sbb
or
arpl
adc
divb
stos
add
hlt
pop
mov
push
mov
add
sbb
or
add
lds
jno
std
movsl
rcll
and
dec
pop
add
mov
add
ljmp
or
jnp
aaa
loopne
cmp
stos
add
pop
idivl
pop
pop
mov
into
add
hlt
int
dec
cmp
sub
lret
lock
jnp
sahf
dec
adc
and
sub
jge
sarb
stos
pop
push
dec
js
push
cmp
int
pop
es
loop,pt
out
push
jns
jp
dec
mov
daa
sub
cs
sbb
movsb
xor
add
cmp
sub
add
ds
sub
imul
repnz
dec
pop
fnsave
xor
stc
ret
mov
cmp
loope
enter
sbb
xchg
xor
in
je
imulb
adc
push
jmp
and
inc
stos
or
sbb
xchg
aad
and
sbb
filds
in
pop
push
push
jp
sbb
fistl
mov
divps
lods
insl
or
aad
dec
pop
adc
xchg
add
pop
adc
jp
pop
sahf
test
sets
push
arpl
ss
or
int
pop
or
add
xor
jp
pop
call
lods
stos
push
loope
mov
xor
insl
insl
xor
scas
push
xor
mov
into
cmpl
in
adc
add
inc
mov
std
mov
daa
scas
mov
push
adc
xchg
jl
push
ret
add
jecxz
loopne
adc
sbb
fimuls
push
arpl
push
pusha
out
adc
xchg
aaa
imul
mov
xor
xchg
xor
jp
loope
mov
int3
cmp
adc
lods
add
ss
sub
inc
mov
xchg
xchg
push
insb
mov
daa
int
into
scas
or
inc
in
mov
or
mov
or
adc
xchg
xlat
xor
inc
add
in
pop
push
inc
shll
sub
int3
mov
push
mov
dec
or
cmp
iret
jp
xchg
mov
push
adc
mov
jp
rorl
add
out
outsl
adc
push
xor
add
pop
jle
movsb
cmp
or
out
xchg
pop
sbb
outsb
and
iret
xor
cltd
push
dec
mov
sbb
and
or
outsl
mov
scas
jo
add
push
je
xor
test
test
mov
sbb
sbb
lods
int3
adc
mov
sbb
mov
cmp
xor
shrl
loope
vpmaddwd
dec
add
lds
mov
das
jo
daa
bound
pop
cld
xor
data16
xchg
mov
jne
inc
movb
cmp
dec
enter
fcmovne
rorl
ret
hlt
xchg
arpl
decb
movsl
xchg
cmp
arpl
mov
flds
xchg
iret
add
mov
push
imul
sarb
sbb
pop
xchg
ljmp
xchg
aas
xor
in
jp
out
sub
scas
fs
test
inc
xor
jmp
les
sbb
rorb
xor
es
in
add
and
stos
imul
jno
cmpsb
leave
test
pop
fisubs
fcomps
sbb
inc
shll
mov
testb
pop
rcr
mov
fisttpl
push
outsl
rclb
flds
jnp
pop
inc
sahf
sbb
mov
adc
and
das
add
pop
repz
dec
mov
ljmp
adc
inc
cmpl
mov
pop
outsl
add
ljmp
shrb
sub
cmp
lods
stos
mov
xorl
lock
sub
xor
testb
sub
out
mov
dec
dec
mov
xchg
lret
fadds
cltd
imulb
jecxz
js
roll
ret
fisubl
jae
shlb
clc
idivb
ds
jne
push
jge
inc
mov
add
pop
xor
push
mov
subb
sbb
shll
mov
add
rclb
enter
popf
pop
cs
mov
push
jbe
lcall
lods
inc
or
cmp
mov
push
mov
mov
not
outsb
add
add
inc
inc
aas
fdivrs
jl
pop
stc
shll
shl
or
add
and
test
mov
push
shr
mov
cmp
xchg
jmp
inc
mov
mov
dec
ja
mov
cmp
pop
add
sub
jb
fs
push
fnstenv
in
add
cmpsb
adc
xor
cmp
push
jg
std
xor
call
mov
push
add
lret
push
dec
repz
pop
add
xchg
jecxz
mov
xchg
mov
sarb
xor
push
add
hlt
jne
pusha
inc
rcrb
ret
add
jl
arpl
les
and
mov
cmp
inc
inc
jp
jo
loope
cmpsb
or
movsb
call
ljmp
inc
aaa
sbb
scas
sahf
pop
mov
mov
shrb
sub
push
add
fistpl
push
rol
stos
mov
cmp
scas
cmp
fldenv
repnz
xor
in
ret
mov
cmp
enter
inc
lods
icebp
out
incb
and
loopne
adc
test
es
jl
inc
jbe
add
push
jns
add
std
mov
add
cmp
jno
mov
ret
sbb
cmpl
inc
test
cmp
add
cmpb
and
mov
jne
lret
roll
out
xchg
shrl
sub
push
inc
jmp
sub
adc
cmp
add
shll
aam
push
mov
in
dec
aas
pop
jno
add
outsl
fdivr
sbb
inc
pop
push
jnp
and
test
mov
mov
mov
adc
cmpsl
lods
jl
loope
or
adc
lret
cwtl
add
out
int
add
dec
adc
push
adc
mov
stos
aaa
mov
mov
jo
adc
jl
fldt
sbb
mov
adc
jb
sbb
cmp
dec
jle
add
cmpsl
in
shlb
jp
ret
cwtl
push
gs
jg
addb
out
pop
mov
das
push
jl
and
push
xchg
mov
cmc
cwtl
cmpsl
add
bound
rolb
xor
mov
add
inc
cmp
imul
cwtl
addb
sar
or
mov
and
rcrb
enter
and
add
shr
sub
lret
and
mov
bound
push
mov
es
subl
test
pop
cmpsl
clc
ss
add
aaa
add
sub
adc
stc
int3
jecxz
roll
sbb
adc
cmp
fadd
jns
cmp
pop
stc
and
movsb
or
test
stos
faddl
rolb
mov
dec
loopne
dec
js
adc
sbbl
push
popf
mov
fsub
das
xor
cmp
movb
add
or
xchg
cltd
leave
add
push
mov
adcb
cmp
cmp
sbb
cli
pop
nop
pop
push
xlat
adc
add
and
insl
push
xchg
mov
lods
jle
shrb
int3
mov
sbb
in
push
adc
fstps
push
adc
xor
inc
push
jmp
gs
cli
cmpsb
cs
add
push
pop
test
jl
popa
hlt
jp
xchg
adc
data16
cmpsb
mov
dec
std
adc
ficoml
xor
mov
les
ss
add
cmp
addr16
dec
lret
in
cli
nop
mov
xor
jb
dec
sbb
dec
add
mov
aas
arpl
xchg
dec
orl
cmc
leave
or
in
insl
xor
inc
stc
inc
inc
jb
sti
add
dec
and
jp
adc
movsl
fcmovu
mov
inc
and
mov
dec
aaa
std
and
jnp
sbb
jo
fiadds
bound
pusha
or
mov
sub
dec
ss
add
push
lods
sub
bound
popa
fst
scas
call
inc
add
and
adc
jne
lahf
pop
mov
jno
cmp
cltd
dec
out
repnz
ret
insb
sub
loopne
pop
cmp
jmp
and
xor
in
mov
add
popf
mov
and
cltd
mov
push
inc
dec
cmpb
mov
int
jnp
lahf
add
sub
adc
rorb
ds
xchg
jg
jmp
out
cmp
push
sub
gs
mov
inc
outsb
mov
xchg
and
cld
int3
add
cmpsl
ljmp
aam
gs
fwait
add
in
das
xlat
sbb
aas
and
inc
jo
mov
cmp
sahf
stc
mulb
push
add
add
es
shll
sub
jo
js
or
addl
adc
dec
add
push
das
testb
add
fistpll
fisubs
clc
aas
fadds
pop
add
and
out
inc
dec
outsl
mov
sbb
ret
jl
movsl
ret
xchg
or
cmp
or
enter
push
outsb
sub
mov
dec
lret
in
push
sub
push
xor
xchg
mov
adc
fwait
add
jne
inc
mov
mov
incb
and
adc
cmp
push
outsl
xlat
mov
dec
sti
into
add
xchg
das
movl
inc
cmp
add
sbb
push
sbb
into
or
lret
int
jmp
in
push
pop
sbb
out
mov
loop
mov
xor
orl
xchg
dec
aaa
pop
or
mov
lahf
or
mov
loopne
mov
jle
mov
and
mov
add
cmp
add
sbb
mov
dec
add
inc
push
loop
xor
jae
add
jl
cmp
iret
jg
loope
inc
mov
push
jb
repnz
or
test
add
pop
xor
rcrb
xchg
jp
andb
add
pop
test
fstps
bound
cmp
or
lods
dec
cmp
cmovs
jp
out
decl
cmp
fildl
mov
mov
pushf
add
sbb
scas
xchg
std
stos
xor
cltd
or
je,pt
js
cmp
sub
loopne
add
jle
in
test
int
and
cltd
add
xchg
cmp
dec
inc
ss
or
movsl
idivb
xor
ret
hlt
shll
subb
lahf
sub
mov
xchg
dec
jnp
add
popw
add
dec
xor
lods
lea
rorb
loopne
arpl
pop
push
xor
js
mov
dec
push
lods
wrmsr
mov
xor
xlat
add
add
stc
pop
daa
add
call
add
rcrl
or
jl
push
pop
and
ja
ljmp
pop
iret
xor
pop
mov
mov
push
outsb
scas
mov
inc
mov
pusha
jo
xchg
jle
in
cmp
repz
test
scas
sbb
add
cmp
shll
test
push
or
leave
cmp
xchg
sub
out
jns
iret
outsl
or
in
ljmp
sbb
ja
cmpsl
mov
dec
bound
mov
cs
lret
jg
cmp
pushf
test
jmp
add
pop
or
adc
ret
repz
lods
out
mov
add
loopne
shl
and
outsl
push
push
fidivrl
push
out
scas
mov
daa
sbb
jp
in
sahf
fists
arpl
adc
xor
ja
ss
out
ss
insl
sbb
jno
sbb
sub
or
push
in
popf
fsubr
mov
fmul
fistpll
add
test
lsl
ret
jb
mov
adc
xor
stc
lret
into
mov
jne
cmp
or
and
test
sbb
mov
jns
dec
rorl
jbe
xchg
std
xor
mov
lea
mov
xchg
jp
adc
sbb
inc
fcoms
cmp
scas
dec
dec
push
xlat
rorb
xor
ret
inc
sub
xor
cmp
inc
pop
cmp
test
popa
outsb
sub
push
or
or
push
adc
vfmadd132ps
xor
jne
stos
mov
loop
cmp
jp
dec
gs
int
nop
push
std
and
cmp
adc
pop
nop
xchg
mov
push
sbb
sbb
sti
movsb
jle
pop
cmp
mov
inc
or
dec
inc
lret
fbld
jle
cmp
in
cmp
mov
push
push
jmp
jl
out
lods
and
arpl
adcb
daa
and
dec
push
es
mov
mov
dec
fisttpll
mov
xor
or
xor
arpl
add
adc
out
xlat
pop
cmp
mov
adc
ss
or
mov
xchg
pop
cmp
loop
sbb
lcall
push
and
test
add
fistps
or
test
sub
and
or
and
in
mov
xchg
xor
mov
jmp
andb
filds
std
bound
inc
fisubl
mov
sbb
mov
xchg
test
in
pop
and
sti
es
push
aam
or
popf
and
clc
cltd
lahf
ds
xor
xlat
jg
inc
jp
or
mov
movsb
jp
sub
aad
in
cmp
sbb
sbb
adc
movsl
push
add
loopne
inc
lock
es
xlat
sbb
mov
xchg
mov
je
cmp
and
jne
fs
ret
pop
adc
push
out
pop
call
scas
std
push
sar
mov
int3
lods
push
decl
andl
lods
les
mov
dec
sub
cmpb
inc
loop
mov
aad
or
xchg
mov
in
sub
aam
popa
jmp
jmp
fsubs
jmp
arpl
test
inc
in
out
pop
jle
pop
xchg
mov
movsb
mov
jle
inc
fbstp
shlb
test
adc
out
leave
jne
test
push
nop
test
or
loop
repz
imul
jbe
sti
ret
or
inc
jnp
rep
fcmovne
or
test
mov
lods
stos
xor
adc
in
jnp
xchg
sbb
cmp
jecxz
add
add
mov
add
sbb
sub
mov
jb
dec
cs
add
popa
mov
add
inc
adc
fisubl
andb
sub
outsl
inc
jno
fadds
adc
pop
push
add
in
xchg
out
popa
jp
mov
adc
mov
mov
add
mov
dec
pusha
ret
str
lods
shll
pop
push
add
divb
popf
aam
insb
mov
cmpsl
mov
addb
mov
add
push
repnz
jnp
fistl
and
jb
aad
mov
sub
sti
push
cmp
data16
out
ja
into
sarl
rcll
std
xor
add
test
inc
cmp
data16
add
ret
mov
iret
xor
cmpsl
sbb
dec
inc
or
dec
das
xor
fs
mov
dec
fcmove
incl
test
mov
push
sub
fdivrl
add
lods
daa
pop
push
jmp
push
push
lock
adc
ret
add
out
data16
jnp
add
mov
es
repnz
or
xor
in
adc
out
les
mov
add
xchg
xor
push
jl
ss
sbb
shrl
orb
push
add
rcl
fs
daa
out
xchg
jns
sbbb
adc
hlt
pop
jge
or
adc
xlat
clc
aam
dec
cmp
jb
add
icebp
adc
test
cs
mov
ret
add
dec
mov
cmp
rcrb
or
jno
cmpsb
mov
jbe
push
add
jb
call
add
sbb
add
add
push
add
cmp
adc
mov
push
add
scas
or
xchg
push
mov
out
movsl
dec
add
cmp
mov
popf
mov
stos
add
sbb
jl
jbe
mov
ljmp
cmpsl
add
aad
mov
xlat
cmp
hlt
stos
int
gs
sar
popf
test
cmp
mov
sub
xchg
rol
insl
aaa
scas
inc
cmp
push
mov
ss
out
cmp
or
testb
push
clc
add
out
push
insl
movsl
cs
xlat
adc
stos
je
add
in
aad
push
xlat
xor
cmp
mov
loopne
orb
addr16
mov
popa
fidivs
out
jge
loop
lea
mov
or
add
jl
jne
adc
dec
add
jecxz
loopne
imulb
add
cmp
das
in
fisttpll
test
add
xchg
jae
pusha
fildll
fnsave
lcall
jnp
cli
jl
fwait
add
push
sarl
movl
inc
jle
cmp
push
or
xchg
cmp
std
add
addl
pop
mov
jns
icebp
mov
pop
in
jp
adc
sarb
aaa
cmp
add
divl
dec
dec
sub
xchg
lcall
test
push
push
jo
aas
cmpsl
or
mov
bound
jl
test
nop
scas
arpl
mov
push
dec
nop
shlb
pop
dec
mov
cmp
mov
and
int
shrb
add
fwait
add
add
xor
flds
addr16
jg
into
and
mov
add
loopne
stc
cmp
ret
fsubs
mov
cmp
stc
inc
aad
mov
mov
dec
imul
bound
movsb
add
sub
cmp
loope
sahf
xor
arpl
pop
ret
iret
fldcw
dec
pop
fwait
pop
sub
xchg
sub
test
xchg
loop
in
and
mov
ss
cmp
orl
xlat
imul
pop
mov
cld
pop
je
lock
pop
lret
cmp
icebp
cld
jae
aas
aad
in
arpl
mov
pop
push
adc
mov
stos
push
ljmp
mov
sub
dec
jecxz
insl
ja
mov
nop
add
cli
jp
xchg
in
xchg
rcrl
add
and
mov
sub
sub
sub
push
sahf
cmp
dec
jmp
adc
pop
jl
flds
ds
jbe
dec
mov
add
sub
sti
in
add
popaw
jecxz
iret
push
incb
aas
cwtl
jbe
cmp
cmp
pop
loope
popa
adc
scas
sbb
fsubl
imul
xor
ljmp
cld
add
and
jb
jg
mov
xor
out
pushf
adc
xchg
add
js
inc
or
mov
mov
cmc
jnp
inc
add
add
add
shlb
or
mov
lods
in
negb
pusha
xchg
or
jg
and
in
sub
std
clc
add
jo
dec
das
ss
pop
add
push
mov
mov
stc
or
lods
pusha
insb
mov
mov
call
add
sti
mov
xchg
push
inc
inc
inc
mov
add
ret
stos
inc
jbe
ljmp
rcl
cmp
add
mov
js
inc
fwait
dec
ficoms
pusha
loope
jmp
xor
adc
pop
int3
add
xchg
add
fcoml
lds
hlt
aam
jp
nop
ds
add
inc
js
push
add
cmp
out
push
insb
inc
add
mov
add
jns
add
lds
test
add
lret
lea
and
les
fs
or
sub
add
and
dec
pop
cmp
add
jae
sub
loope
inc
or
xor
push
loopne
mov
stos
sbb
icebp
add
dec
pop
mov
nop
repz
arpl
es
rcr
test
notb
stos
add
push
add
int3
xchg
scas
mov
stos
xor
cmp
push
pop
loope,pn
pop
sub
mov
sarl
out
cli
or
add
mov
mov
pop
rcrl
add
xchg
and
orl
adc
or
add
in
inc
ret
lahf
jge
popa
xor
sub
sub
dec
and
mov
push
xlat
ja
sub
mov
push
jae
jmp
out
mov
inc
adc
xchg
hlt
into
or
bound
xchg
mov
testb
xlat
inc
xor
adc
faddl
hlt
bound
negl
shll
fildll
add
loopne
xchg
or
mov
fsub
outsl
lds
dec
push
in
cmp
cs
jp
int
jmp
popa
sub
nop
fiadds
lret
dec
push
clc
xchg
add
cmp
rolb
sub
mov
add
fdivr
inc
add
test
sub
jl
sbb
and
cmp
dec
ja
mov
pop
daa
mov
add
push
sub
sarb
lahf
xchg
add
cmpsl
sub
repnz
jnp
fyl2x
jne
aaa
pop
in
add
inc
test
pop
shlb
and
dec
sbb
jb
inc
ret
xor
add
add
add
ret
dec
mov
pushf
mov
xor
add
movups
dec
sbb
fstl
and
dec
aas
cwtl
add
mov
icebp
push
ja
push
inc
in
popa
pop
test
aas
push
cmp
or
mov
add
bound
mov
roll
pop
pop
out
add
and
mov
add
sbb
jne
mov
push
repnz
std
add
bound
mov
lret
cmp
cmp
sbb
in
add
arpl
imul
jecxz
inc
inc
out
aas
inc
outsl
imul
xor
or
cmc
inc
cmp
pop
mov
mov
in
sbbb
shl
add
xchg
lock
xor
push
lds
leave
pop
jo
xchg
negb
mov
pop
fisttpl
rorb
cmp
adc
push
daa
movl
xor
loop
filds
lods
daa
jp
andb
push
adc
or
push
push
test
fwait
jb
ljmp
inc
inc
and
sbb
xor
movsl
xor
loopne
dec
xor
imul
dec
lock
jg
out
mov
xchg
and
orb
aas
sub
repnz
xchg
loop
sbb
ja
daa
and
sahf
sub
adc
ds
ja
movsb
aam
inc
dec
adc
xchg
sub
dec
cmp
xchg
pusha
inc
jp
dec
scas
mov
cmp
xchg
sbb
adc
sbb
mov
sbb
mov
test
cmp
or
fldcw
test
xor
test
push
inc
shlb
sarl
dec
jns
jle
inc
pushf
pop
iret
jecxz
jp
pop
add
cmp
jp
or
int3
test
test
aam
ljmp
inc
cs
adc
std
stc
adc
xchg
xchg
push
sub
xor
inc
jl
mov
nop
xchg
inc
mov
push
das
inc
and
add
rcrl
outsl
or
mov
xchg
loop
or
int
xchg
aad
or
fchs
mov
inc
pushf
pop
cmp
andl
jno
mov
icebp
xlat
xor
push
std
cmp
fstl
dec
add
mov
lret
sbbb
sbb
adc
aam
and
adc
test
adc
ret
sub
xor
mov
incl
js
lret
or
xlat
fistps
mov
mov
arpl
cmpsl
sub
push
or
cmpb
push
cmpsb
push
test
dec
add
std
adc
rorl
push
pop
jne
jp
fisubs
lea
sub
mov
cmp
fwait
dec
cmp
in
and
add
out
mov
dec
sub
mov
mov
xor
imul
shr
xor
sbb
pop
in
scas
daa
and
scas
cli
scas
or
pop
sbb
popa
jge,pt
aad
es
dec
rol
mov
xor
or
loop
loope
filds
sub
int
mov
daa
out
shrb
push
push
and
cvtdq2ps
add
push
sbb
ljmp
xchg
mov
bound
push
mov
mov
ret
scas
dec
rclb
or
mov
sub
loopne
and
test
lock
pop
inc
mov
int3
xor
loope
mov
pop
push
jle
shrb
jb
push
lret
sub
shl
jp
xchg
push
ret
fcomip
je
add
sbb
cmp
mov
lods
mov
sub
push
inc
cmp
lods
push
push
test
adc
push
push
lret
mov
jns
loope
cmp
lods
adc
rclb
cmp
out
and
adc
sbb
iret
inc
xor
jae
adcl
test
scas
dec
rolb
push
fwait
outsl
testb
imul
sbb
push
jle
pop
cwtl
dec
and
add
cwtd
lret
stos
lret
lret
or
cmp
icebp
out
bound
aas
cmp
pop
outsb
cmpsl
add
cmc
xchg
faddl
mov
cltd
push
das
shlb
and
aaa
mov
sub
inc
push
pusha
or
xor
aaa
add
insl
or
call
lcall
adc
and
jno
jecxz
cmp
add
add
leave
pop
pop
add
hlt
and
cmovle
xchg
xchg
xchg
cmp
aaa
push
mov
aad
dec
lock
sbb
jne
mov
jg
rcl
repz
enter
add
test
fisubs
mov
call
add
cmpsl
sbb
bound
pusha
xchg
out
and
sbb
mov
mov
xor
fstps
xor
lods
mov
sahf
add
lds
std
add
in
jo
xor
dec
add
adc
add
push
push
pushf
add
nop
aas
xchg
call
repnz
loopne
inc
ja
shrl
and
fdivl
mov
das
inc
fadds
adc
movsl
fiadds
into
mov
mov
pusha
jge
fistpl
cmp
cltd
lahf
aas
cmpsl
mov
sub
pop
xchg
push
scas
mov
xchg
add
rorb
testb
into
push
sub
add
out
jno
aas
notb
dec
ds
add
or
jecxz
inc
addr16
mov
cmp
lahf
dec
xor
iret
cs
sbb
xchg
pop
add
int3
xor
icebp
add
and
dec
mov
jmp
loop
std
mov
loopne
stos
imul
add
push
lret
jle
sbb
sub
inc
or
and
andb
xchg
push
sbb
or
cmp
test
test
add
push
push
and
jg
and
pop
mov
jmp
or
or
mov
inc
xchg
pop
push
xor
cmp
mov
cmpsb
les
sub
jle
enter
cmp
add
out
mov
cmp
outsb
aaa
cltd
outsl
cmc
add
sbb
lret
jbe
imul
xchg
into
cmp
jp
add
xchg
pop
jne
push
xchg
add
adc
lcall
and
cmp
add
idivb
outsl
mov
add
xor
inc
sbb
add
shll
inc
cli
mov
adc
mov
cmc
dec
xor
mov
adc
mov
arpl
bound
mov
testl
push
xor
mov
and
xor
pop
add
jmp
aad
fmull
xchg
inc
adc
in
push
add
add
ret
movsl
out
add
jne
xor
sbb
clc
sub
push
outsl
or
pop
and
sbb
xchg
cmp
lods
mov
in
cmp
add
inc
lret
and
xor
xor
mov
or
scas
xlat
mov
iret
pop
mov
int
data16
test
xchg
out
lock
mov
add
mov
jecxz
clc
jbe
call
shlb
and
repz
inc
stc
pop
sarb
ds
xor
or
xchg
sub
push
cmp
mov
xchg
out
mov
aam
mov
add
bound
test
jne
add
imul
cmovns
ss
add
scas
sub
pop
mov
cs
cmpsl
push
cmp
xchg
pop
push
cli
jo
xor
pop
pop
adc
mov
int3
leave
int3
test
std
lcall
loop
add
push
loop
push
or
inc
push
and
mov
mov
and
fldt
sub
add
adc
cmp
gs
arpl
mov
cld
pop
call
insl
pop
inc
or
flds
mov
cmp
daa
cmc
pause
out
cmpsb
aad
test
lahf
js
cmp
ja
adc
sarl
xchg
cmc
out
in
lret
xchg
jp
aam
xor
fildll
sbb
out
mov
scas
arpl
add
push
shlb
push
xchg
push
cwtl
jmp
hlt
pop
std
out
xchg
sub
rcr
cmpb
add
and
jo
mov
popf
outsb
mov
and
test
bound
push
fwait
test
test
daa
mov
add
pusha
mov
fdivr
lret
or
mov
cmp
cs
sub
mov
add
inc
addb
add
mov
ret
pop
inc
aad
inc
cmp
mov
or
and
ret
xorl
push
mov
jp
pop
add
xchg
in
xor
sub
push
mov
and
lahf
mov
out
fnstsw
xchg
cmp
push
scas
shlb
je
pusha
xchg
arpl
mov
cmp
adc
xchg
xchg
xor
xchg
subl
lods
jl
sub
das
test
mov
iret
sub
xor
mov
rcrl
es
push
mov
cmp
shr
mov
adcl
add
xor
sub
sub
lea
xor
inc
leave
and
leave
mov
test
add
and
jp
dec
sbb
fwait
cmc
inc
pop
cmp
pop
jp
mov
or
rorl
and
xor
add
and
xlat
adc
add
sarl
das
aas
es
aas
inc
in
cs
sbb
jp
mov
push
xor
popl
push
mov
inc
lea
add
mov
cltd
mov
test
dec
addr16
mov
mov
inc
sbb
push
cmpsb
ja
pop
btr
add
sbb
xchg
ret
jp
inc
sub
mov
cmpsb
jo
cmp
mov
mov
jp
dec
daa
or
loope
dec
in
cltd
scas
movsl
inc
cmp
fadds
jnp
pop
hlt
pop
inc
push
ja
inc
mov
out
add
push
ljmp
mov
push
cmc
push
popa
xchg
add
dec
mov
insb
jo
adc
leave
test
jnp
xchg
stos
clc
xchg
inc
loop
xchg
mov
inc
inc
mov
in
sub
dec
fnstsw
stos
sbb
push
adc
cltd
xorl
pop
sahf
add
bound
cmpsl
scas
jle
out
mov
lea
notl
loopne
dec
fadd
adc
aaa
pop
in
jmp
cmp
sbb
dec
out
xor
adc
jbe
sbb
les
scas
jo
mov
es
xlat
movsb
push
sbb
xchg
scas
stos
xor
ret
adc
mov
adc
xchg
das
pop
les
push
lcall
roll
pusha
pop
cmc
sahf
push
or
inc
adc
sti
cmp
jo
outsb
cmpsb
xor
icebp
ltr
mov
jg
sbb
popf
sub
mov
movsb
sbb
cmp
dec
sbb
dec
sbb
xchg
xchg
sbb
push
inc
inc
or
iret
cli
add
imul
test
xchg
clc
or
test
xchg
scas
insb
xchg
pop
jae
movsl
push
fisubs
mov
add
enter
pop
arpl
mov
sbb
adc
jle
xor
sbb
pop
in
pop
mov
inc
or
loopne
or
es
rcrb
out
std
sarl
popf
movsl
repz
iret
in
fists
popf
popa
std
xor
mov
xor
out
notb
sbb
inc
and
fwait
lods
inc
cmc
dec
lds
dec
cmpsb
movsb
sbb
in
fisubs
jg
dec
inc
notl
mov
in
mov
addb
mov
gs
adc
enter
repz
and
dec
sbb
xor
jno
imul
hlt
mov
mov
push
sub
lea
pop
ret
mov
adc
mov
jns
in
xchg
ja
pop
xchg
jge
xchg
mov
sbbl
add
bound
pcmpeqd
sbb
scas
sbb
xchg
mov
ljmp
pop
test
adc
xchg
mov
dec
jle
das
sahf
push
sub
mov
sbb
adc
and
mov
leave
cmp
addr16
ss
je
adc
lock
xchg
sbb
xchg
sub
js
mov
or
xor
cs
push
sub
mov
inc
push
inc
push
xor
int3
inc
gs
sbb
pop
jo
cmpsl
rorl
rorb
mov
test
cld
sbb
add
shrl
or
cmp
cmp
gs
rcl
adc
or
aaa
mov
mov
in
or
jp
aaa
mov
push
push
cmp
add
xchg
adc
adc
pop
inc
and
cwtl
jo
xchg
sbb
in
push
aas
adc
test
mov
xchg
xchg
iret
xor
imul
popf
xor
cmp
cmp
repnz
adc
cmp
mov
shrl
repnz
test
iret
mov
icebp
mov
mov
jp
sub
pusha
jnp
pop
mov
adc
je
cld
mov
jle
cmp
sub
aam
xor
movsb
pop
sbb
push
jp
ret
jg
sahf
aam
subb
pop
je
mov
jle
mov
imul
and
dec
mov
cltd
mov
cmpsl
std
ret
inc
repnz
and
dec
pushf
ja
jl
mov
inc
add
shlb
jmp
sbb
lret
mov
or
into
test
ret
cmpl
out
aas
sub
pop
xchg
orl
int3
mov
aad
in
mov
xor
mov
adc
hlt
ret
ja
jg
aaa
inc
sarb
mov
sub
fildll
mov
addr16
insb
shll
outsl
adc
movsl
or
loop
imul
sub
in
cmpsb
sbbb
in
movsb
pop
sbb
or
cmpsb
pop
push
out
sub
push
xchg
cmp
test
cmp
jp
dec
loopne
stos
mov
iret
mov
sbb
inc
xchg
xor
jno
add
in
je
cmp
mov
imul
cli
inc
xchg
add
aam
sbb
adc
add
les
mov
xchg
xchg
lds
sar
lods
jecxz
fisubs
inc
add
test
stos
test
or
jne
mov
cs
inc
in
jno
add
jp
mov
sub
loop
xchg
scas
jns
loopne
or
in
dec
lds
sbb
ret
std
rclb
outsl
addr16
inc
aad
jp
sub
lods
sbb
jmp
loop
mov
mov
out
in
out
and
jae
icebp
adc
mov
cmp
es
int3
sarl
mov
xor
and
xor
push
ret
mov
data16
inc
sub
fnstenv
or
xor
jle
and
std
or
mov
movsb
pushf
or
leave
popf
cwtl
stc
mov
cs
fadds
mov
inc
add
fistpll
inc
inc
mov
inc
push
or
pop
cmp
cltd
xor
out
xor
jne
mov
mov
mov
mov
sub
inc
adc
std
jl
aas
push
lds
fadds
scas
les
shlb
sarl
out
flds
pop
mov
rclb
xor
or
inc
adc
pop
push
jp
bound
inc
adc
icebp
loop
xchg
push
mov
or
dec
adc
adc
outsb
xchg
lods
sub
sbb
cmpsb
add
into
outsb
into
and
push
add
inc
push
sbb
test
push
out
adc
and
inc
pushf
or
add
cmp
or
jae
clc
out
in
fsts
out
xor
adc
xchg
xlat
int
out
xor
sbb
dec
fst
xchg
xchg
add
pop
std
xor
sub
dec
call
insl
sbb
and
test
dec
or
xlat
ja
leave
jp
pop
cmp
cmp
xor
cmpsb
xchg
xor
out
pop
aam
or
or
mov
pop
push
mov
xlat
enter
mov
add
mov
movsl
idivl
inc
push
mov
cmpsb
sbbl
loope
xchg
pushf
inc
pop
mov
inc
gs
sbb
sub
pop
mov
inc
adc
es
into
xorl
and
decl
roll
inc
xchg
outsb
scas
pop
outsl
pop
xchg
in
xchg
dec
iret
hlt
lods
bound
jl
add
sub
and
rclb
mov
pop
lock
xor
jp
mov
push
dec
or
xlat
add
lahf
add
out
mov
mov
mov
lret
push
in
lds
inc
inc
mov
lret
jl
xor
scas
mov
or
das
andl
dec
xor
mov
popa
inc
sbb
rclb
sub
mov
adc
lret
or
mov
xorl
sub
push
cmp
dec
inc
mov
inc
in
cli
inc
add
je
inc
lock
sub
push
xlat
sbb
push
mov
popf
push
cmp
test
xchg
mov
jno
loopne
inc
or
imul
xchg
adc
in
add
or
test
jge
movsl
adc
and
es
out
or
imul
jge
sub
xchg
leave
and
sbb
adc
add
mov
inc
cmovb
mov
push
out
outsb
lret
sbb
ret
jmp
fcoml
push
es
push
or
scas
pop
push
xchg
push
data16
xor
mov
outsl
adc
or
fs
or
jp
cmpsb
in
push
sub
dec
outsb
sbb
push
inc
data16
in
add
stos
cmp
xchg
xor
cs
mov
test
sbb
inc
repz
dec
xchg
insl
mov
aam
mov
movsb
or
xor
push
test
pushf
mov
adc
js
lret
ret
pop
cmp
mov
outsl
pop
mov
cmp
ss
xchg
sub
push
nop
pop
push
add
dec
push
jp
sbb
xor
push
inc
out
jp
xchg
rorb
xchg
adc
dec
jmp
dec
pop
aam
fldt
ljmp
por
aad
adc
push
gs
imul
scas
fwait
adc
orb
dec
shlb
xlat
fcoml
sbb
and
jb
jle
mov
cmp
sub
mov
dec
push
scas
das
les
daa
std
stos
adc
loop
mov
sbb
pop
sahf
inc
ror
push
mov
aad
jne
add
jp
mov
add
adc
hlt
add
and
dec
push
dec
scas
pop
dec
inc
jp
sti
push
xor
mov
cmp
jge
pop
dec
out
test
into
adc
int3
and
adc
cmp
sub
test
or
sbbl
in
aas
pusha
jb
and
sbbl
push
ret
push
pop
mov
mov
jecxz
inc
and
loope
loope
mov
dec
xor
xchg
inc
dec
xor
lds
inc
cmp
xlat
out
dec
in
cwtl
ja
adc
unpcklps
hlt
popa
adc
or
bound
out
push
or
xchg
sub
xchg
test
cmp
xchg
movsb
and
ret
insl
xor
fs
leave
xor
movsb
mov
setae
and
jo
movsl
scas
and
dec
mov
mov
mov
sti
fnstsw
cli
pop
aad
addl
imul
arpl
sub
mov
scas
xchg
les
push
rcl
sbb
pop
mov
test
add
and
data16
adc
sub
xchg
inc
mov
popa
ret
stos
push
jne
add
enter
icebp
stc
arpl
ja
push
cmp
or
ret
and
iret
fistps
push
jmp
mov
sub
je
cmp
inc
pop
xchg
out
or
inc
inc
pop
lock
shr
lds
out
mov
sahf
xchg
xlat
es
xor
inc
add
rcll
clc
stc
push
adc
or
jo
setns
xor
addr16
add
add
inc
jecxz
mov
cmc
test
inc
sub
in
cmpsl
jbe
or
inc
add
loope
out
scas
adc
add
mov
popa
cmp
inc
xlat
shlb
adc
xchg
cmp
enter
aas
cli
sub
add
nop
and
clc
push
pop
hlt
xor
ret
push
sub
nop
iret
cmc
lock
cli
pop
pop
adc
adc
or
add
cmp
jge
dec
jae
ja
add
xor
add
les
and
in
add
xor
outsb
sbbl
sbb
and
mov
add
fmull
push
add
insl
inc
fwait
testb
sub
nop
mov
pop
dec
add
fisubs
inc
shlb
jne
enter
jecxz
call
shr
add
push
xchg
bound
push
adc
pop
int
push
test
sbb
cmp
stos
add
mov
mov
xor
sbb
fstl
bound
dec
shlb
pop
subl
mov
mov
test
add
push
jno
les
or
sub
add
call
mov
loop
inc
mov
mov
or
sub
add
shlb
test
jmp
cmp
loope
popf
sahf
mov
sub
sbb
xor
xchg
add
and
fwait
mov
pop
fs
or
mov
jmp
imul
mov
insl
inc
mov
jb
fstp
dec
sti
mov
pop
pop
push
and
fcmovnb
pop
les
repnz
cmp
outsl
movl
je
jecxz
cmp
insb
xor
cmpl
pop
iret
cwtl
push
jbe
rcll
xor
and
fcmovu
pop
jmp
mov
add
mov
mov
in
repz
rcrb
or
sbb
gs
cmp
sahf
fstl
test
jmp
push
les
bound
sub
jge
shlb
jl
mov
insb
iret
xor
into
pusha
cmp
add
xlat
push
negl
sbb
int3
cli
lods
pop
adc
and
ljmp
sbb
cmpsb
xor
into
jne
add
push
pop
je
lods
adc
add
push
bound
mov
jnp
mov
sti
sub
testb
pop
pop
fdivrs
iret
inc
inc
and
outsb
dec
stc
js
jl
mov
xorb
cmp
adc
fistpll
inc
add
testl
cmp
fld
mov
and
jns
loop
mov
add
test
xor
add
push
push
daa
pop
add
and
int3
mov
add
dec
dec
mov
iret
not
and
pop
stc
mov
fiaddl
jo
xchg
xchg
push
mov
inc
mov
out
jns
movsl
test
gs
stos
les
inc
add
enter
insl
jecxz
fstps
sti
mov
lret
rolb
shrb
push
lahf
addr16
js
pop
add
and
cwtl
testb
rolb
xchg
add
sbb
iret
cmp
xor
jno
mov
push
int
xchg
stos
mov
add
mov
in
filds
dec
push
add
dec
cmp
add
lock
mov
sbb
les
sub
dec
or
sbb
cltd
inc
iret
aaa
cmp
add
or
outsl
add
lds
xchg
sub
daa
xor
add
mov
mov
in
inc
pop
or
jo
fldl
fbstp
inc
pop
pop
mov
add
push
test
sbb
lods
add
in
and
mov
xchg
or
sbb
lea
xchg
fucom
push
or
loopne
vpand
sbb
mov
popf
cld
rorb
mov
xor
fiadds
inc
mov
or
xor
into
mov
mov
daa
push
mov
sub
mov
mov
je
dec
ret
add
outsl
sbb
pusha
inc
ja
pushf
add
jns
cmp
push
lahf
pushf
movsb
add
roll
push
add
jmp
ret
or
mov
rcr
shll
add
popa
or
or
mov
shl
and
push
faddl
lahf
mov
xchg
push
cltd
xchg
adc
inc
sti
es
push
and
test
lcall
aad
dec
mov
pop
mov
push
xchg
lods
fwait
cmp
mov
flds
mov
into
leave
das
scas
adc
cmpsl
rep
inc
dec
inc
xor
jle
jae
jl
ds
mov
scas
jb
pop
pop
add
mov
cmp
std
pusha
dec
sub
cwtl
jl
mov
add
and
jns
pop
inc
into
push
sarb
sub
mov
ret
and
mov
xor
insb
add
push
outsb
add
fucom
xchg
mov
dec
mov
or
js
cld
fnstsw
dec
add
cwtl
push
incb
enter
mov
fsubl
pop
mov
adc
inc
movb
shll
mov
adcb
fs
cli
dec
mov
add
aaa
jge
jg
cmpsl
push
or
add
pop
add
ja
ret
jmp
dec
add
pusha
notl
insb
cmp
push
add
leave
xor
dec
rcll
mov
data16
xchg
mov
shl
add
or
mov
sub
cmp
jb
popf
add
xor
pop
fwait
lock
add
cmc
dec
inc
ds
mov
jle
xchg
xor
push
add
pop
xchg
imul
fcomps
arpl
pop
push
in
mov
sti
add
jbe
hlt
inc
dec
test
cmp
negb
add
int3
xor
in
dec
scas
jnp
in
lahf
sbb
outsb
xor
rcrl
test
mulb
shrb
mov
and
jp
cmp
add
inc
test
pop
divl
repnz
mov
pop
lods
stos
dec
push
add
xor
shll
pop
inc
xchg
pop
sbb
lods
std
popa
lds
xor
mov
mov
dec
sbb
push
and
clc
add
cmp
nop
mov
pop
stc
scas
inc
cs
pop
mov
imul
iret
cmp
das
dec
mov
push
popa
xor
fcoms
jae
or
add
sbb
pop
test
lock
pop
imulb
mov
add
mov
xor
addl
xor
inc
aas
add
ljmp
clc
mov
adc
in
add
mov
imul
lret
push
pop
mov
in
addb
mov
xchg
int3
push
roll
mov
mov
xor
add
adc
fadds
dec
imul
popa
mov
jae
push
repnz
sti
push
jbe
lcall
aad
sub
mov
hlt
xor
lods
add
add
mov
lcall
and
test
push
adc
add
int3
jmp
push
lds
arpl
in
sbb
xor
cmp
je
psubd
mov
adc
cmpl
inc
int
add
das
lcall
pop
and
cmpsb
add
in
in
leave
add
push
pop
les
fadd
xor
mov
mov
sahf
sub
mov
push
xorl
fisubs
in
jns
jnp
movswl
and
cmp
insl
mov
adc
sbbb
inc
jp
sti
jns
fildll
or
roll
insl
sbb
jle
pop
outsl
sarb
arpl
ja
add
ret
mov
cmp
jne
fldcw
in
push
jb
mov
hlt
xor
cs
jno
ret
lock
popw
cmp
pop
faddl
rorl
fxch
xor
cmp
sbb
inc
std
aas
shll
out
ljmp
pop
stos
inc
pushf
xchg
add
add
pushf
fcoml
mov
sub
dec
jns
cmp
sbb
jg
xlat
and
and
and
loopne
add
ds
add
sarb
arpl
dec
repnz
test
cmp
sbb
fadd
push
enter
fscale
xchg
inc
ret
jge
push
mov
out
cmp
cmp
mov
repnz
nop
mov
inc
test
shrb
loope
cli
push
pop
add
call
push
xchg
lcall
sbb
cmp
jb
mov
out
call
mov
shr
xor
adc
iret
out
aad
inc
cld
add
xchg
mov
dec
add
mul
mov
sub
pop
push
xor
add
adc
xchg
mov
cmp
sar
push
out
dec
out
add
dec
add
ljmp
mov
dec
out
and
add
sub
cmp
lret
aam
inc
js
lods
or
lods
add
jo
mov
adc
cli
inc
data16
sbb
xorl
and
aaa
mov
cmp
fwait
xor
imulb
xor
dec
pop
rcl
lahf
mov
ja
inc
push
cmp
fiaddl
or
xchg
test
inc
pop
pop
adc
hlt
xchg
pushf
bound
sub
dec
push
ror
add
imul
inc
stc
aas
add
mov
lret
mov
ds
ror
cmpsb
and
loop
fistps
add
hlt
std
pop
fwait
push
pop
xor
inc
jmp
out
fmull
movsl
mov
mov
cmp
lods
or
push
inc
loopne
ret
lds
add
inc
cmp
jno
inc
push
add
push
addb
dec
jb
test
ret
pop
xor
push
and
std
jge
nopl
fisubs
repz
or
mov
and
mov
cmp
add
xor
add
lock
add
pusha
imul
sub
fisubrl
xchg
dec
out
in
push
mov
dec
shrl
push
mov
subl
xchg
fcompl
stos
mov
jns
ss
push
add
jb
xchg
push
push
fiadds
sub
aaa
fisttpl
pop
loopne
lock
mov
inc
mov
pop
jae
jo
cmp
mov
lahf
ss
add
dec
add
inc
and
add
imul
pop
sbb
and
repnz
fld
xor
inc
aas
outsb
or
int3
mov
lahf
push
and
popa
jno
add
or
dec
in
dec
push
rclb
inc
inc
lret
sub
int
sub
add
and
jmp
fcom
lds
adc
orl
and
icebp
mov
adcb
rorb
ficompl
idivl
mov
sub
inc
addl
or
add
or
loopne
or
adc
and
add
stos
add
arpl
mov
sub
adc
sbb
mov
in
push
add
jmp
mov
add
mov
cmp
add
or
ret
jne
add
cltd
mull
iret
imul
add
dec
pop
call
jmp
add
pop
test
mov
sbb
add
pop
data16
mov
ret
fs
sub
pushf
mov
dec
enter
test
xchg
cs
add
ja
add
add
jle
into
ret
test
add
mov
xor
and
test
test
xor
insb
es
mov
sbb
add
dec
push
or
inc
outsb
or
jo
add
insb
popa
into
mov
cs
pop
mov
sub
jne
or
inc
lret
jb
add
xchg
mov
adc
in
and
fs
add
mov
ljmp
flds
pop
testl
data16
or
iret
daa
movsl
fcmovnbe
pop
and
xchg
dec
vfmaddpd
lock
jl
loopne
shll
xchg
pushf
rcrl
loopne
clc
shl
xchg
mov
xchg
add
mov
sarl
xor
add
int3
ja
push
mov
cltd
outsl
pop
pop
xchg
add
push
dec
push
jecxz
pop
push
shrl
shrb
pop
cs
add
pop
and
mov
imul
jnp
jge
pop
shll
cltd
sarb
out
pop
mov
pushf
pushf
add
in
adcb
enter
adc
jg
and
mov
add
mov
xchg
into
das
xchg
popa
adc
mov
lea
mov
jnp
shll
push
add
mov
mov
add
sahf
dec
mov
inc
or
rolb
push
and
ret
insb
add
jmp
xchg
add
mov
cmp
jge
inc
add
ficoms
mov
repnz
sub
leave
sbb
mov
and
inc
out
int3
jmp
lret
loop
push
cmp
test
add
cmp
lea
divb
insb
ret
cli
ljmp
clc
jmp
inc
fdivrl
fdiv
decl
testb
mov
or
add
aaa
and
movsb
pop
add
inc
rorb
js
push
add
xchg
add
sbb
xor
push
ret
and
adc
sbb
adc
lea
xchg
int
je
scas
mov
movsl
push
imul
jle
dec
cmp
add
or
cmp
sub
icebp
test
jecxz
ret
mov
in
adc
add
fwait
mov
xchg
ffreep
ret
push
push
and
bound
pop
addl
xchg
xor
mov
sub
push
inc
cmp
sub
mov
or
pop
inc
mov
adc
pop
add
cmp
mov
pop
push
inc
insb
jb
jo
pop
aas
jns
cltd
lock
into
es
jne
add
sti
push
push
int
outsb
add
or
add
cmp
stos
lcall
pushl
and
ret
shll
xchg
lock
lahf
inc
add
aad
fwait
mov
imul
add
dec
sbbl
add
cltd
addl
add
mov
dec
add
fdivrs
fisubrs
lret
mov
rorb
out
inc
stos
and
xchg
mov
add
ds
dec
shl
scas
add
pop
xor
add
jno
xchg
xlat
lea
sbb
mov
imul
and
sti
scas
xchg
loopne
sbb
add
or
push
push
add
jo
add
es
popf
pcmpeqb
and
sti
insb
add
adc
xchg
jnp
btc
add
mov
add
sbb
jo
mov
sbb
mov
mov
push
cmp
add
mov
mov
cmp
push
hlt
mov
or
lret
les
jae
imul
pop
ss
lods
add
sub
add
je
jl
or
adc
cwtl
aaa
rolb
cld
std
sub
fisttps
adc
mov
cltd
andl
and
sub
cs
dec
jne
push
and
out
adc
or
lret
invd
pop
test
mov
mov
lea
out
and
mov
int
mov
inc
cmp
jecxz
ljmp
add
pusha
fisttps
movb
popa
jmp
mov
mov
mov
xor
ds
adc
cwtl
push
sub
cmp
inc
inc
or
shlb
adc
sbb
outsb
addr16
mov
mov
xchg
cmp
inc
fwait
loope
cmp
push
out
sbb
jb
xchg
pop
jno
int
add
cmp
pushf
mov
dec
mov
jbe
jno
stc
push
ret
loopne
jnp
or
add
push
call
cwtl
add
sbb
mov
test
or
or
out
lds
ds
fldln2
and
icebp
mov
inc
js
pop
fmul
add
sbb
outsl
mov
lret
fldt
ljmp
push
push
push
adc
sub
mov
fadds
dec
dec
mov
fcmovu
shrl
mov
ret
mov
gs
ret
and
xor
imul
movsb
out
shll
cmp
stc
sub
push
or
loopne
out
roll
add
aam
pop
push
mov
and
pop
sbb
mov
adc
jp
bound
pop
add
or
int3
add
sbb
pop
fbld
xlat
cltd
pop
out
sub
add
sub
sub
ret
push
out
jns
inc
inc
lahf
mov
addr16
imul
pop
ret
jae
jb
rcl
jae
inc
adc
mov
jo
dec
jp
mov
rclb
lcall
mov
ret
inc
cmp
addr16
scas
pop
sub
outsl
dec
xchg
ret
repz
cmp
outsl
mov
cmp
inc
loope
cwtl
shl
mov
push
mov
test
js
cmp
xorl
stos
mov
out
mov
xor
ja
adc
ret
mov
rclb
cmpsl
and
hlt
and
push
xchg
js
aam
out
xor
push
dec
dec
dec
pop
mov
insb
adc
jp
cmp
bound
mov
pop
fwait
push
ret
pop
adc
xor
cmp
push
loopnew
or
outsb
call
pop
xchg
lahf
cmp
imul
out
fs
fwait
pop
fnstsw
cmp
inc
cmp
aaa
and
jb
inc
mov
or
and
ret
jge
mov
lods
xor
test
cmp
and
sbb
lds
add
out
mov
sbb
dec
jo
cs
insl
and
pusha
cld
cmp
sarb
ret
stos
dec
call
call
lods
nop
add
adc
into
adc
and
and
mov
scas
fldt
pop
les
and
repnz
testb
jp
xor
out
mov
jno
xor
aaa
iret
jns
sbb
ret
dec
adc
or
dec
add
jg
in
shl
arpl
push
cmp
je
jp
jmp
out
or
loope
xchg
das
cmp
dec
es
cwtl
inc
shrb
pop
je
aad
and
ret
dec
rcr
mov
sbb
cs
jnp
add
repz
and
xchg
mov
mov
sub
daa
add
mov
adc
es
or
cmpsb
movsb
dec
nop
mov
inc
pusha
dec
inc
daa
out
cltd
mov
push
inc
lahf
aam
shl
jle
and
adc
mov
ret
mov
fisubs
jbe
orl
mov
inc
inc
and
lcall
mov
stos
jecxz
in
pop
add
mov
ret
test
stc
mov
inc
xchg
pop
xorl
sbb
jp
inc
insl
shrb
push
and
sub
push
test
xlat
cmp
mov
inc
cmp
cmp
movsb
add
sbb
jne
lds
add
xchg
sub
inc
xchg
sti
push
outsb
or
xchg
mov
dec
inc
push
cmpsl
movsb
or
inc
sbb
xorb
das
add
filds
mov
inc
addr16
imul
pop
xchg
cmp
je
xchg
xchg
roll
mov
test
inc
aad
xor
leave
sarb
sub
lds
mov
mov
mov
fbld
add
cmp
out
jbe
movsb
inc
add
outsb
jo
xchg
mov
and
push
sbb
loopne
mov
cmp
xchg
test
addl
arpl
and
lcall
push
pop
fnstcw
cwtl
rolb
lds
outsl
lea
adc
pop
mov
sub
scas
mov
outsl
push
xlat
inc
jns
push
mov
sub
int
cmpsb
cs
leave
and
push
sub
sarb
ja
test
sti
push
pop
mov
in
adc
mov
push
mov
xchg
jle
mov
dec
lock
pop
jno
mov
adc
divl
pushf
mov
mov
mov
dec
add
les
add
popa
mov
or
push
in
add
fistl
pop
add
es
jo
movsb
mov
dec
jbe
ljmp
and
adc
add
sub
dec
in
ss
add
aam
rcr
add
or
lods
stos
and
add
xor
add
mov
pop
push
jge,pt
outsl
cs
fcompl
js
inc
dec
fistpll
rorl
adc
adc
push
aas
dec
mov
sub
insl
mov
jnp
push
mov
mov
jo
into
std
add
scas
dec
icebp
dec
inc
rcrl
sbb
sbb
and
cli
jl
add
dec
dec
outsb
add
xchg
mov
inc
sarb
add
insb
add
cmpsb
jle
loopne
sub
jno
stos
mov
ret
xor
stos
xchg
adc
inc
mov
inc
push
or
add
repnz
mov
icebp
ret
out
xor
out
mov
xor
faddl
loopne
xlat
cmp
jmp
iret
jo
pop
mul
shll
shrb
push
enter
mov
xchg
pop
sub
adc
mov
scas
mov
mov
fimull
lock
int
cmp
xor
aas
fisubs
sahf
rol
pop
pop
mov
xor
popa
dec
and
jg
adc
add
xor
imul
test
lret
push
adc
insb
std
jno
mov
dec
movsl
test
push
push
mov
cmp
and
mov
mov
loopne,pt
je
int3
add
and
sahf
scas
jne
or
mov
out
sub
fisubs
mov
icebp
and
push
pop
cwtl
pusha
inc
sub
add
clc
in
mov
pop
push
add
and
aam
rcll
cmp
imul
inc
jnp
stos
data16
push
mov
cmp
divb
add
xchg
push
jae
fidivs
flds
sbb
sub
fisttpl
add
or
stc
cmp
sub
add
outsb
adc
in
leave
test
cld
push
and
and
mov
je
loop
pop
sbb
or
inc
imul
ja
icebp
int3
xchg
mov
and
enter
jmp
cs
push
push
adcl
xor
ss
mov
push
dec
call
test
inc
sub
outsl
pop
push
dec
iret
stc
test
aam
xchg
and
insb
add
xchg
or
mov
rcrb
ret
push
cld
pop
mov
les
cmp
icebp
dec
in
xchg
in
pop
dec
add
adc
movsb
inc
outsl
mov
imul
xor
scas
imul
ja
andl
jmp
sub
jno
add
dec
xchg
adc
js
imul
mov
popf
cmp
inc
call
pop
rclb
dec
adc
or
test
or
push
add
ss
dec
add
and
insl
mov
pop
aam
push
xchg
icebp
and
mov
push
int
push
test
xlat
add
lahf
jle
js
fdivs
sbbl
insl
daa
loopne
pop
addb
nop
jb
dec
cmp
jnp
xchg
adc
scas
pop
in
or
ljmp
test
repnz
add
outsl
push
dec
push
adc
into
add
int
mov
push
sahf
dec
inc
sub
je
or
add
pushf
loopne
adc
das
cmp
inc
stos
mov
icebp
pop
loop
xor
add
arpl
xchg
add
cmpsl
xor
sbb
adc
mov
and
inc
xchg
call
add
adc
sub
inc
sbb
xor
scas
lea
pop
enter
xchg
jne
pop
xchg
xchg
sbb
sbb
mov
shll
mov
stos
add
call
dec
loop
dec
pop
popf
xor
fsqrt
push
push
ja
add
mov
subl
dec
mov
xorl
add
cmp
and
add
inc
push
lahf
push
test
es
add
fimuls
rolb
cld
and
push
shll
in
repz
xchg
sti
cmp
jne
sarb
sbb
fisubs
push
call
cmp
test
ror
push
aad
push
testl
dec
shr
push
aaa
mov
or
xchg
fistl
and
out
push
add
xchg
mov
adc
mov
adc
sbb
fcom
sbb
cmp
test
add
pop
pop
out
xchg
inc
lods
ret
insb
ret
xor
and
pushf
lea
cmp
jg
sbb
and
notl
call
and
inc
orb
sbb
lret
js
std
dec
nop
xor
daa
xor
addr16
movntps
loop
and
shrl
sbb
sbb
pop
add
movsl
aam
cwtl
dec
addl
mov
inc
lea
lahf
lret
add
xchg
ljmp
pop
jo
cwtl
inc
xor
lea
add
std
mov
jle
dec
bound
push
push
cmc
xchg
cmp
cli
aas
xchg
aaa
jbe
adc
gs
out
lret
sti
and
push
lea
lods
rolb
cld
xchg
addr16
xor
icebp
arpl
cmc
out
adc
mov
push
dec
repnz
and
movsb
pop
jne
mov
cld
stos
movsl
leave
ljmp
ret
cmp
mov
jb
dec
fmul
lcall
loop
fcompl
cltd
xor
xor
icebp
dec
pop
push
and
fldt
mov
out
and
or
test
add
xchg
pop
cmp
lock
inc
test
or
popa
scas
and
cmp
mov
xor
cmpl
cmc
pop
or
mov
rolb
fcoml
icebp
or
jbe
and
push
push
inc
pushf
gs
pop
cmp
inc
add
fs
arpl
mov
out
sbb
sbb
aam
movsl
sub
inc
ja
push
mov
push
fmull
pop
xor
xor
adc
mov
jle
js
pop
lds
fisubrs
and
push
sub
arpl
mov
mov
inc
scas
rep
mov
fs
xor
xor
rcr
add
subw
cmpsb
cmp
cli
push
add
stc
out
pop
subb
out
mov
lea
scas
and
xchg
flds
sti
pop
sbb
data16
rcl
cmp
and
mov
xor
sub
and
add
imul
aas
clc
push
loope
sbb
mov
mov
lcall
xor
cmp
push
lods
add
outsb
test
add
in
rcl
pusha
push
inc
mov
jo
sbb
add
lock
adc
dec
add
mov
push
pop
fwait
ret
sbb
fnstenv
mov
mov
and
push
nop
pop
shlb
aaa
jne
mov
or
add
ss
std
shll
out
xor
push
ljmp
jnp
pminub
add
adc
lcall
sub
gs
jecxz
sbb
inc
xor
mov
cltd
cli
add
inc
dec
stos
pop
fidivl
pop
daa
jmp
pusha
add
mov
adc
xor
push
mov
adc
mov
mov
fcompl
adc
inc
xchg
dec
pop
adc
push
add
call
lea
jmp
stos
mov
imul
add
movl
sarl
js
sbb
repnz
pop
imul
dec
or
pop
lahf
or
add
ljmp
cmp
jo
cmc
jbe
popl
stos
addb
pop
dec
test
and
add
das
and
iret
montmul
cmpsb
add
mov
add
aaa
int
nop
mov
addl
js
push
add
cmp
and
sub
lret
mov
jns
xor
int
mov
add
inc
imull
add
repnz
push
lcall
ficoml
or
jmp
inc
dec
fisttpll
add
pop
clc
or
xchg
add
cmp
sbbl
pop
adc
pop
push
cld
dec
outsl
xchg
fiadds
add
and
or
push
aaa
push
inc
or
and
mov
adc
rolb
pop
std
jnp
xchg
mov
mov
pop
insl
or
repnz
imulb
out
push
mov
add
pop
repz
dec
push
pop
add
inc
mov
sub
mov
push
lods
out
cmp
cmp
sbb
mov
cli
pop
ljmp
mov
dec
jae
push
daa
in
adc
jl
xchg
mov
xchg
jo
lcall
jecxz
adc
mov
add
and
insl
adc
bound
xlat
test
fbld
sub
daa
arpl
sarl
aas
in
int3
push
mov
scas
or
mov
and
xchg
adc
cmc
aam
mov
xlat
mov
in
xchg
adc
fs
xor
adc
dec
in
xor
and
shll
jle
mov
inc
sti
outsl
jl
add
out
or
outsb
pop
and
daa
sub
mov
sbb
push
cmp
dec
mov
push
addr16
cmc
lret
dec
cli
mov
xchg
dec
frstor
add
loope
or
inc
sbb
imul
cmp
and
sbb
in
stos
push
lahf
jno
in
hlt
jecxz
and
add
add
sbb
movsb
jle
xchg
cmp
jp
add
mov
movsb
push
cltd
jmp
test
adc
icebp
popa
mov
sarl
ret
popf
cmp
addr16
sbb
xor
sub
xor
mov
mov
addr16
adc
dec
push
cmp
and
jp
faddl
add
push
gs
test
cmp
repnz
orl
and
add
stc
inc
adc
sbb
aas
out
aam
stos
iret
push
lret
das
sub
decl
rclb
or
cmp
jp
xchg
fsubs
pop
loope
sbb
dec
xlat
cmp
push
mov
sub
jne
add
cmp
sti
out
das
jne
jp
cltd
jge
mov
loopne
cltd
scas
pop
push
cld
in
mov
sbb
dec
inc
ljmp
outsb
push
lcall
das
cmp
sbb
in
xor
xchg
sbb
xchg
scas
test
mov
rolb
add
xchg
jmp
lock
das
sub
mov
pushf
mov
push
add
cmc
lods
or
push
jne
pop
leave
sub
pop
lcall
cmp
xor
xchg
dec
add
sbb
popa
dec
jae
xchg
mov
sti
out
in
or
inc
filds
arpl
jmp
jae
test
jg
movsb
lea
bsr
dec
repz
mov
push
inc
sbb
bound
fidivs
inc
cmp
cwtl
inc
movsb
sub
cmp
addr16
imulb
inc
das
add
in
test
xor
in
mov
push
cmp
inc
mov
add
loopne
jno
int3
ret
fistpll
cmp
das
mov
andb
jg
stc
and
mov
adc
inc
mov
mov
sbb
test
cs
imul
add
mov
aaa
jo
popa
loope
test
dec
add
sbb
movsb
cmp
insb
add
push
jno
insb
lods
xchg
ret
icebp
xchg
sub
hlt
sarb
out
add
mov
jp
sub
adc
xchg
inc
mov
dec
or
rcll
nop
xor
sbb
pop
jecxz
adc
or
test
jne
push
sub
jne
mov
pusha
add
inc
jnp
je
fs
leave
cmp
arpl
push
inc
cmp
xlat
push
fildl
jns
or
sbb
jp
aaa
mov
mov
mov
adc
ret
mov
mov
lret
pop
sub
daa
and
sbb
push
je
xchg
fisubs
mov
sub
shrb
and
adc
jge
pop
rcrb
dec
mov
sbb
call
cs
mov
bound
pop
imul
and
loope
loop
out
bound
aas
aad
add
fsubs
mov
cmpl
inc
or
js
mov
sub
in
popf
cmpsl
nop
movsb
dec
adc
int
pusha
aam
gs
cmp
or
mov
and
xor
pusha
das
cmpsl
call
js
jl
jbe
lods
cmp
ljmp
sbb
and
or
adc
scas
push
pop
mov
sbb
movsl
sahf
xor
aad
imul
stc
push
inc
gs
cmp
sub
jmp
push
cmp
ret
xchg
sub
aam
ret
xchg
push
addb
test
sbb
loopne
mov
lods
pop
dec
sarl
scas
push
aad
sbb
jp
lods
pusha
test
ljmp
clc
add
mov
push
add
push
mov
sbb
loopne
jb
xchg
scas
rcll
stos
inc
push
jp
sbb
lret
xchg
xor
loopne
rolb
push
mov
lock
enter
sti
cmp
leave
cmp
pushf
dec
daa
mov
lods
or
jp
push
pop
jg
mov
inc
add
mov
pusha
fiaddl
std
or
inc
aaa
cld
imul
or
test
dec
add
sbb
lahf
adcl
fucomip
sbb
call
jp
cmpsb
jnp
pop
cltd
in
ret
call
mov
inc
addr16
repz
cmp
mov
inc
cld
and
sarl
cmpsl
pop
mov
shll
aam
dec
popa
flds
leave
pusha
pop
std
inc
cmp
jle
jmp
and
and
mov
aas
or
and
push
data16
xchg
movl
or
repnz
rcrl
movsb
xchg
aad
ffree
or
push
adc
xchg
adc
cmc
in
cmp
push
pop
roll
fisubrs
insb
pop
out
mov
and
adc
mov
mov
arpl
rep
adc
mov
sarb
loope
jmp
scas
cmpsl
dec
xchg
cltd
sbb
xor
cmp
std
mov
or
inc
and
mov
clc
cmc
dec
clc
or
insb
sbb
movsl
orl
pop
nop
fistl
fistps
or
and
sbb
sarl
dec
sub
dec
insb
ret
add
push
test
mov
inc
ret
arpl
jbe
jbe
lret
pop
loop
jns
jp
jp
pop
pusha
frstor
jns
ret
dec
push
sub
bound
repz
fildll
test
xor
ja
adc
in
sbb
sbb
or
mov
cmp
cltd
pop
outsb
popf
xchg
xor
leave
sbb
sub
insl
cmp
or
daa
mov
sub
dec
clc
sahf
sbb
or
push
mov
movq
andl
cmp
and
add
hlt
xor
sub
mov
lahf
data16
jp
pusha
imul
out
adc
push
adc
push
pcmpgtw
push
and
sbbb
dec
stc
mov
rolb
test
inc
in
inc
inc
fs
push
rcrl
jo
aas
pop
mov
clc
outsl
loopne
xchg
sub
adc
fstl
jae
or
shlb
cwtl
inc
cmp
add
pop
lret
adc
arpl
pavgb
cs
pop
enter
xchg
lods
lods
inc
into
jle
push
cmp
or
jno
inc
shrl
adc
ss
fidivl
js
cmp
and
xchg
and
sbb
jp
adc
jle
or
rclb
dec
icebp
add
sub
andb
dec
jae
push
jo
sbb
dec
push
rcl
pop
cmp
push
nop
pushf
movb
addb
jp
push
mov
sub
adc
mov
xor
push
mov
repz
roll
pop
cmp
or
das
push
repz
sbb
adc
mov
add
sub
and
into
mov
pop
and
orb
lret
lods
xchg
scas
mulb
sub
mov
leave
daa
aas
ds
push
pop
add
stc
add
nop
test
out
aas
insb
aas
adc
xchg
outsb
jns
jp
xor
cmp
out
xchg
pop
add
mov
push
lods
push
leave
jge
push
and
pusha
dec
xchg
add
popf
outsl
xchg
pop
sbb
pusha
loope
jne
pop
cmpsl
lds
and
cmc
sbb
dec
or
dec
into
daa
cmp
lret
push
add
addr16
mov
inc
or
add
das
dec
adc
cs
movsb
jo
imull
or
add
cli
les
icebp
jb
js
or
sbb
pop
adc
push
push
push
fstpt
push
mov
jne
das
stos
or
sbb
cmp
testl
adc
std
or
call
jp
dec
insl
cmp
je
dec
add
pop
adc
sbb
inc
fisttps
xchg
adc
popf
push
adc
push
sbb
hlt
adc
cmp
fstpt
or
and
mov
dec
arpl
les
lods
adcb
pop
inc
cmp
and
xlat
jp
jmp
cmc
loopne
cmp
dec
das
ds
roll
pusha
sbb
mov
scas
js
jmp
jg
sub
xor
and
cmp
push
push
rclb
add
add
sub
sbb
pusha
and
into
fildl
xchg
pop
out
cmp
call
repz
xlat
sbb
sbb
outsl
add
or
inc
test
test
shrl
mov
push
rcl
hlt
outsb
mov
test
mov
and
inc
jb
arpl
add
cmp
adc
stc
sbb
imul
inc
add
adc
pop
inc
add
push
add
arpl
bound
sbb
lds
adc
sbb
push
adc
sarb
jg
dec
lock
push
ret
pop
and
notl
inc
sub
inc
xchg
dec
inc
cmc
pushf
add
add
repz
fsubr
or
add
test
mov
or
sarb
add
xor
adc
xchg
in
xchg
and
sbb
loop
mov
push
sbb
ja
lret
out
bound
jp
add
in
ss
loopne
push
push
add
pop
sbb
add
jmp
test
stos
xor
adc
mov
test
loope
jne
ret
sarb
out
xor
pop
sahf
int3
call
shll
orb
lcall
ret
js
xor
pop
mov
test
jecxz
xor
pop
mov
and
lea
ljmp
xor
mov
push
gs
fxch
pop
mov
mov
add
test
out
mov
push
clc
pop
icebp
cmp
gs
ret
dec
cli
xor
sub
add
cmp
add
out
xor
add
insl
sub
bound
mov
scas
push
xlat
mov
add
mov
inc
xor
lods
insb
xorb
dec
add
movsb
and
scas
aas
and
inc
sub
ret
das
out
data16
and
xchg
loope
cmpsl
xor
and
mov
ffree
sbb
add
test
add
jl
cmpsl
test
mov
mov
and
and
outsb
jp
mov
inc
scas
nop
js
add
xor
mov
aaa
and
xor
cmp
fildl
aad
lret
les
push
push
push
addb
add
inc
inc
scas
lods
inc
ja
add
mov
mov
push
push
gs
testb
test
add
jmp
movsb
xor
or
ret
jno
push
jb
int
cmpl
fwait
sbb
cmp
cmc
jbe
add
ret
sub
or
xor
mov
iret
shrl
ds
jbe
out
fsubrs
cs
adcb
pop
add
out
adc
push
push
wrmsr
mov
pop
add
push
orl
xor
xchg
lock
inc
add
push
mov
gs
movsl
or
daa
loopne
or
lahf
cwtl
pmaxub
xor
int
cmp
adc
xchg
lahf
sub
add
push
hlt
pop
outsb
adc
addb
and
in
mov
fdivrs
add
fisubs
add
sub
je
or
loop
fsubrl
fwait
jo
inc
xchg
scas
add
insl
sub
shrl
es
fcompl
inc
adc
or
stos
add
push
add
out
pop
hlt
cmpsl
push
fcmovb
mov
adc
cmp
in
je
adc
mov
jb
cmp
inc
push
jle
movsl
aaa
add
xorb
jl
add
add
cli
roll
add
aam
ss
xor
and
aas
fldl
cmpsl
gs
jmp
in
lods
shlb
ret
mov
js
movsl
mov
xchg
out
add
imul
and
fdivrl
rol
add
sub
pop
cmpsb
mov
pop
mov
arpl
lock
xor
sbb
or
cmp
imul
adc
jg
xor
mov
arpl
jge
jbe
push
and
pushf
add
push
mov
push
cltd
rol
movsb
dec
mov
pop
xchg
inc
add
sub
das
adcl
ljmp
add
stos
aaa
inc
mov
sar
movlps
lock
dec
xor
fwait
dec
pop
pop
add
push
xchg
aam
shlb
or
push
in
xlat
sub
add
pand
dec
push
cli
insb
add
push
stc
add
mov
push
mov
loope
inc
push
xchg
jo
sbb
sbb
jl
push
lea
add
in
cmp
inc
push
lods
add
sbb
in
dec
pop
mov
add
ja
jae
rclb
flds
and
out
nop
arpl
jg
imul
test
mov
push
mov
cmp
push
or
test
push
pop
add
mov
inc
stos
and
fnstenv
xchg
add
hlt
mov
add
xor
inc
sbb
stos
sub
fcompl
int3
addb
dec
jnp
test
mov
imul
sub
or
shrb
pop
sub
or
xchg
cmp
xchg
inc
cld
adc
and
sbb
iret
aam
lahf
jae
cmpsb
inc
adc
lahf
js
jp
xchg
repnz
push
sbb
mov
mov
lods
sub
pushf
sub
test
test
jmp
into
mov
cltd
and
call
mov
push
sbb
lret
mov
paddb
dec
or
sbb
inc
mov
pusha
xchg
inc
cs
push
inc
and
aas
jl
mov
sbb
int3
cmpsb
lds
fistps
fs
jmp
adc
xchg
xchg
clc
inc
aaa
jnp
iret
arpl
xchg
popf
cmc
stos
xor
mov
out
andl
test
lcall
pushf
jg
addr16
cmp
jge
fs
mov
or
adc
mov
and
in
xchg
mov
into
jp
xchg
scas
dec
nop
push
xchg
xlat
adc
and
inc
push
adc
popl
and
pop
mov
xor
scas
sbb
stos
dec
inc
cli
mov
pop
mov
jl
fisubrs
and
sbb
test
aad
rolb
repnz
mov
mov
sub
jns
mov
sahf
test
push
jne
leave
cmp
stos
pop
xchg
fs
lret
sbb
adc
push
sbbl
and
inc
sarb
jl
mov
mov
sub
jg
cmpsb
mov
adc
lds
push
and
repnz
nop
and
dec
push
pop
fisubs
jl
fidivs
xor
test
fisttpll
xor
cmpsb
lds
cmpsb
test
les
inc
jp
bound
cmp
loopne
xlat
push
repnz
enter
loopne
adc
jo
cmpsl
lea
xor
bound
mov
fstpl
xchg
mov
andnps
jne
lds
aaa
or
pushf
and
test
and
sbb
insl
dec
mov
xor
and
bound
fwait
jg
adc
or
stc
leave
ss
sub
dec
xchg
jp
and
insl
mov
mov
cmp
ret
das
push
jnp
in
sahf
test
adc
lods
addb
vaddsubps
adc
repz
push
pop
and
cmp
add
mov
add
rep
dec
mov
xor
sbbl
fldenv
stos
aam
loope
adc
test
pop
iret
adc
mov
lods
pop
dec
sbb
rolb
pop
mov
adc
adc
mov
jp
mov
push
es
push
aas
addl
and
rcrl
xor
sbb
mov
mov
sahf
xor
pop
outsl
rolb
jo
aaa
inc
rcl
test
mov
mov
mov
imul
cmp
push
sub
sub
clc
call
loop
dec
inc
cmpsl
andl
lcall
es
jno
cmp
or
push
adc
cld
add
bound
rorb
in
push
out
aaa
fsts
addr16
inc
and
xchg
sbb
icebp
es
or
add
mov
aam
add
adc
dec
outsb
sarl
mov
imul
rcll
out
mov
xchg
out
add
jle
pop
nop
fisubrs
jb
out
inc
mov
fs
cli
mov
adc
hlt
in
adc
adc
adc
test
repnz
sbb
add
mov
rolb
mov
lret
arpl
inc
xor
jne
mov
cwtl
adc
add
add
xlat
sbb
fadds
pop
push
add
add
dec
add
imulb
insb
sub
add
inc
lods
xchg
add
add
xor
and
lret
pop
popa
add
xchg
je
add
fucom
shrb
jmp
cwtl
aaa
xchg
rcrb
jns
mov
jb
sahf
sub
adc
xor
shll
in
pushf
mov
cwtl
and
lock
mov
clc
push
xchg
fistpl
stos
adc
and
push
data16
add
mov
ffreep
lds
out
mov
cmp
inc
xchg
dec
iret
pushf
xor
inc
cmp
in
add
lret
xor
fldz
add
jmp
ja
adc
mov
xor
sbb
fisttpl
inc
mov
es
or
pop
adcb
sbb
pop
fdivp
dec
sub
xchg
add
nop
outsl
cltd
push
mov
add
int3
jae
repz
ljmp
out
cmpl
loop
stos
dec
add
mov
and
mov
add
pop
and
sub
in
sbb
cmp
sahf
repnz
push
popa
bound
popf
movsl
inc
push
negb
push
dec
cmpsb
xchg
add
cmp
push
test
mov
sarb
mov
add
mov
call
imul
or
sub
leave
icebp
insl
js
or
dec
insb
mov
outsl
fwait
jae
xor
inc
shrl
add
jg
sbb
imul
ss
and
loope
jnp
insb
mov
inc
jl
mov
or
call
ja
out
add
push
jmp
jae
repnz
adc
xchg
and
mov
daa
mov
add
ljmp
cmc
int3
sbb
and
hlt
sbb
add
pop
xchg
mov
mov
addr16
in
ret
inc
add
push
call
or
testb
dec
sub
mov
or
imul
add
inc
cs
mov
inc
pop
ret
mov
xchg
mov
aam
les
call
sub
push
add
adc
cmpps
cmpsb
imul
ss
repnz
sub
push
adc
jl
push
mov
scas
movsl
add
jb
arpl
pop
sbbb
nop
outsb
jl
ds
cmp
and
pop
mov
or
or
rcll
jp
pop
mov
ljmp
mov
cltd
inc
xchg
add
stc
ljmp
jb
pop
shll
jle
in
filds
leave
pusha
add
bswap
int3
lret
add
push
jns
ja
and
out
add
mov
pop
push
testl
inc
adc
ret
jnp
push
mov
cmp
pop
sbb
cmp
xchg
test
call
add
cmp
lret
or
pop
jns
sub
jbe
sbb
lods
pushf
push
test
xchg
add
fmull
pinsrw
cmp
pop
aas
xchg
into
mov
and
fwait
lock
insb
sldt
out
and
add
add
mov
add
xor
cmp
mov
lahf
stos
xor
add
xchg
add
nop
in
fiadds
sbb
mov
mov
in
inc
add
xlat
jecxz
ret
pop
popa
mov
and
into
in
add
inc
fwait
orb
and
divb
xchg
pusha
cmp
add
frstor
sahf
add
insb
mov
xor
jne
add
xchg
adc
dec
int
add
test
stos
xor
cltd
andl
adc
cmp
ds
addl
sbb
out
xchg
push
sbb
jmp
jae
jne
fcoms
jno
test
push
xor
xor
andb
lret
and
rcll
or
and
repz
add
sahf
and
pop
xchg
lahf
std
imul
add
outsb
jo
call
push
adc
bound
jp
cmpsb
xor
cli
addl
push
out
outsl
and
add
aaa
cmp
mov
popa
xchg
sub
adc
add
rcrb
addb
adc
outsb
sub
jae
sahf
or
fldenv
mov
mov
loop
mov
adc
test
add
popl
aad
pop
mov
and
sub
lds
add
add
shlb
cmpl
add
out
xchg
pop
out
in
rorb
lock
jae
out
jmp
aaa
inc
mov
in
insb
sub
testl
movsb
mov
rclb
ss
add
insl
subl
inc
push
out
mov
push
xor
testl
inc
into
popa
mov
inc
inc
lret
mov
add
cmp
pop
dec
jno
cmp
insl
cmp
shrb
ja
add
fidivs
dec
loop
and
adcl
test
jecxz
pop
xor
jb
add
push
sarl
out
pop
stos
add
inc
rcl
cs
add
sub
fimull
inc
sub
icebp
in
shll
bnd
dec
cmpsl
jnp
lods
lds
mov
icebp
insb
fs
push
sahf
jb
or
cmp
xchg
pmaddwd
and
andl
adc
and
out
jns
or
add
inc
fsubs
iret
jnp
push
dec
lret
inc
add
mov
scas
test
ljmp
mov
subl
clc
xorl
stc
adc
lcall
pop
cli
add
gs
inc
add
fldenv
lret
outsb
cmpsb
dec
xchg
jbe
mov
pop
call
inc
add
pop
int
add
in
fstps
sub
mov
add
inc
es
xor
fstpl
pop
mov
sbb
push
sbb
pushf
add
int
hlt
sbbl
fadd
adc
fildll
lea
mov
jb
loop
adc
add
pslld
les
shll
popf
adc
push
inc
mov
shrl
insb
jne
test
js
add
adc
xchg
std
rorb
int3
inc
inc
pop
add
aam
stos
pop
imul
sbb
inc
fiadds
insb
cmp
inc
cmpsl
dec
xchg
faddl
sbb
loopne
shrb
xchg
lock
adc
addr16
cld
outsb
bound
add
hlt
out
sub
mov
mov
loopne
and
xchg
pop
insb
xchg
sarl
movsb
cmc
adc
call
repz
aam
add
pop
sbb
js
adc
test
inc
add
aaa
jns
shlb
sbb
pop
int3
add
xchg
jg
push
pop
lods
out
xor
jge
pushf
cmp
or
mov
scas
ljmp
sub
adc
cwtl
or
shlb
cmp
es
xchg
sub
jecxz
mov
add
jl
add
mov
pop
mov
add
nop
addb
hlt
iret
sbb
movsb
gs
jmp
pop
inc
add
cmpsb
in
inc
mov
jae
sbb
test
lret
aad
add
sbb
cmpsb
shlb
add
fcoml
call
add
into
push
inc
add
mov
movsb
xchg
pop
push
pop
mov
sarb
adcl
push
push
add
ljmp
movl
mov
inc
push
adc
clc
add
jg
mov
add
xlat
sub
sub
mov
andl
pop
and
xor
gs
jg
je
jne,pt
add
xchg
rcrl
fwait
inc
inc
sub
int3
jle
and
cld
lods
arpl
shll
fisubrs
mov
push
push
pushf
fs
add
jge
or
add
movsl
loop
mov
pushf
aaa
adc
iret
push
add
stos
stc
push
mov
outsl
mov
sar
add
inc
jo
push
fwait
and
dec
and
cmpsl
jg
push
xor
sub
hlt
adc
xchg
jbe
aas
pusha
movsl
adcl
push
fcmovnb
add
jno
test
mov
popa
add
jns
negb
xchg
icebp
or
inc
add
fiadds
sti
pop
addr16
mov
shl
mov
jle
test
insl
mov
cmpsl
xor
repnz
mov
mov
es
inc
mov
fldenv
add
mov
int
and
mov
out
add
out
iret
ja
pop
add
lds
mov
clc
lods
inc
inc
cltd
mov
pop
lock
inc
mov
lds
mov
xchg
xchg
scas
adc
jmp
testb
cmp
nop
decl
xor
or
popf
roll
add
pop
xor
pop
add
inc
pop
push
fs
xor
add
push
shrb
pushf
addl
or
add
add
xor
add
aaa
dec
pop
sbb
mov
jl
pop
xor
sahf
mov
mov
ret
add
push
js
mov
scas
cmp
test
inc
dec
call
and
xor
adc
dec
or
sarb
subb
repnz
data16
push
fs
scas
mov
add
add
sbb
pusha
stos
sub
add
adc
mov
mov
inc
icebp
mov
out
scas
les
jnp
dec
movsb
push
sub
jmp
movsl
add
add
jle
dec
push
or
xchg
and
inc
dec
inc
ljmp
lret
add
test
cmp
loope
aaa
stos
xor
in
mov
insl
test
inc
jb
sti
and
call
push
fstpt
stos
jmp
inc
pop
rcrb
testb
mov
push
mov
js
popf
and
aaa
cmp
rclb
rcl
or
dec
lret
inc
sbb
mov
jnp
jmp
lods
inc
add
jne
pop
lock
ret
ret
pop
or
inc
shll
fucompp
test
push
xlat
mov
lea
dec
mov
pop
sbb
sbb
sbb
andl
push
cmp
loope
hlt
cld
jge
sbb
sbb
lahf
xor
mov
ss
mov
mov
inc
cld
lock
pinsrw
push
icebp
mov
in
aas
jmp
add
out
int
fwait
mov
call
lret
adcl
xchg
mov
in
add
sbb
iret
push
push
leave
sbbl
add
lcall
pop
movsl
or
jnp,pn
pop
mov
pop
jae
sti
insl
std
push
imul
mov
xchg
cmp
add
scas
lcall
into
adc
jnp
mov
jbe
mov
mov
dec
std
lcall
push
roll
xor
jg
dec
or
mov
pushf
push
xor
aad
pop
jg
adc
jne
cmp
jp
outsl
or
movsb
scas
sti
mov
sbb
adc
mov
adc
aam
jle
ret
and
cmp
inc
xorb
mov
scas
gs
jo
pop
pusha
xor
and
es
es
push
scas
out
out
shrl
jle
das
faddp
inc
adc
scas
fnstenv
js
add
cmpb
ret
add
or
cmp
sbb
cltd
popa
adc
inc
add
push
inc
arpl
jb
adc
mov
into
outsl
lea
sub
xlat
stos
in
int
add
push
sub
filds
xor
or
in
xchg
cmp
fbstp
inc
loop
aam
xor
data16
inc
push
push
js
or
pop
cld
jno
das
cmpsb
jnp
dec
xor
je
outsl
test
nop
aad
adc
stc
mov
leave
pop
jp
push
adc
adc
adc
pusha
test
in
mov
xchg
cmpsl
add
cmp
cli
push
mov
int
fs
adc
or
adc
dec
imul
gs
mov
xorl
xchg
arpl
push
and
cmp
push
push
je
ret
push
adc
cmp
push
xchg
dec
call
cmp
outsl
cmpl
jmp
sbb
xlat
xchg
jmp
adc
bound
push
ret
loopne
sbb
mov
pop
jg
inc
mov
in
mulb
sbb
bswap
aas
nop
pop
sub
out
mov
sbb
lods
ds
insl
sub
movd
push
stos
daa
push
aas
mov
or
lret
xchg
les
in
int3
punpckhbw
das
cmp
jmp
push
pop
fadds
push
leave
push
add
fcmovnb
inc
sbb
lret
icebp
xor
into
enter
das
mov
mov
push
or
jnp
int3
pop
xchg
inc
adcl
mov
scas
das
pop
or
inc
push
xor
jg,pt
add
jle
pop
mov
xor
pop
pusha
cmp
ret
add
push
mov
fdivrs
inc
test
jae
xor
add
nop
and
sarl
jge
dec
push
pusha
sub
push
push
cmp
pushf
mov
jno
shlb
mov
xor
xchg
sub
mov
xor
add
sub
push
adc
sub
mov
lds
out
adc
jno
inc
nop
and
jb
xchg
into
push
add
jmp
loopne
pop
add
in
shrb
jl
xor
pop
popf
add
mov
ljmp
out
aaa
aas
insb
jp
add
sbb
leave
ret
sub
jl
and
in
lea
fistl
mov
mov
arpl
add
fisttps
sbb
xor
test
rclb
imul
shlb
mov
ds
push
xchg
fbstp
dec
cmp
add
ret
lcall
shrl
push
add
clc
mov
adc
rorb
mov
roll
push
xlat
imul
push
outsl
add
pop
pushf
push
divl
sarb
nop
sbb
insb
jmp
add
xor
cmp
mov
mov
adc
cmp
int3
imull
and
inc
push
je
roll
xor
sub
jle
test
in
ss
cltd
cmp
and
pop
or
xor
ss
add
addr16
add
mov
jmp
dec
xor
cmp
pop
mov
or
test
pop
inc
adc
sub
push
xchg
cmp
fmul
out
out
fwait
dec
add
jbe
lret
xor
xor
add
pop
data16
ret
and
dec
add
lcall
mov
add
sub
rdmsr
sub
push
pop
cli
pop
cmp
andl
xchg
xor
fistpl
and
xchg
add
stos
outsb
push
pop
jbe
cmp
push
dec
ja
loope
fdivp
lods
arpl
adc
mov
add
push
add
mov
dec
or
xor
cmp
cwtl
add
mov
nop
add
les
pop
xor
pusha
aaa
loopne
add
fisubrs
add
clc
jns
fdivr
pop
shrl
pop
leave
shlb
pop
fmulp
sub
push
aaa
xchg
sbb
add
fwait
aad
sbb
daa
pop
lods
mov
pop
add
sbb
pop
add
and
rcrl
xchg
cwtl
sub
and
out
scas
andb
add
into
cli
mov
ss
outsl
ret
pop
je
sub
dec
cmc
lret
jbe
aaa
fbld
orl
sub
test
inc
in
stos
cs
adc
cmp
and
push
xor
mov
add
xchg
mov
dec
sub
push
aad
inc
nop
lcall
dec
sub
mov
icebp
xorb
shlb
sbb
pop
lods
add
xor
fnsave
mov
in
push
aad
add
dec
out
xor
and
daa
int
leave
test
in
xchg
sbb
out
xchg
add
and
mov
dec
mov
out
and
outsl
lcall
cli
stos
out
adc
mov
inc
movsl
scas
jle
sub
data16
pop
shll
xor
lods
ds
hlt
cmc
data16
sub
scas
and
lea
mov
iret
scas
add
mov
xchg
je
imul
push
cmp
jmp
xor
xchg
mov
add
enter
rorb
movsl
dec
subb
or
enter
xchg
loopne
ja
rorl
and
jecxz
and
loope
aad
add
call
test
xorl
fists
loopne
sbb
xchg
aaa
dec
add
pop
data16
insb
add
mov
push
mov
ror
mov
dec
or
cltd
sti
filds
sub
cs
pop
adc
xor
hlt
rol
loop
cltd
xchg
ss
icebp
roll
adc
movsb
fiadds
shlb
mov
and
xor
add
sub
int3
stos
std
adc
lock
outsb
popf
push
add
push
xchg
aad
xor
fildl
out
sbb
push
nop
das
push
inc
sub
jle
stc
into
test
or
inc
in
in
out
mov
lods
sbb
movsb
inc
ffreep
mov
or
push
and
enter
and
push
sub
out
add
in
xchg
mov
add
mov
mov
add
pop
fwait
in
lods
mov
add
aas
xor
lea
inc
inc
popa
jmp
loope
pop
xor
xchg
in
add
mov
mov
sub
idivl
add
xchg
out
sub
add
push
mov
fisttps
jno
sub
movsb
pop
iret
add
imul
dec
sbb
push
fs
inc
pop
sub
iret
sbb
xchg
shl
dec
cmp
pusha
fwait
int3
sbb
push
sbb
add
add
mov
and
test
sub
ret
add
push
push
cmpsb
pop
and
inc
je
mov
out
xor
dec
les
cmpsl
dec
pusha
stos
adc
ficompl
scas
mov
sub
addr16
les
dec
in
cmc
xor
insb
jne
es
fcoms
lret
xor
aam
xchg
roll
dec
sbb
xchg
dec
cmpsb
or
jbe
add
adc
mov
add
mov
es
test
mov
push
rorb
in
popa
xchg
js
das
loope
inc
sbb
test
jl
push
pop
jne
cmp
incb
sub
mov
sub
int
mov
lret
add
and
jl
add
pop
in
mov
movl
cmp
cmp
xor
fistl
stc
aaa
nopl
or
shrl
or
les
cmc
inc
dec
inc
imul
and
add
insb
add
inc
pop
in
cmpsb
inc
mov
jecxz
or
jae
shlb
pop
cmp
sub
adc
pusha
adc
call
pushf
pop
mov
adc
in
jnp
cmp
add
lods
cltd
scas
in
lret
add
test
xchg
pop
xor
les
sub
addr16
sahf
add
inc
pusha
sti
or
mov
add
adc
inc
push
or
sarb
xchg
fistpl
inc
add
push
inc
pushf
jp
push
jne
mov
inc
icebp
jo
aad
ss
jb
mov
add
sbb
and
add
xor
fisubrl
lods
xchg
lods
jbe
mov
dec
pop
add
adc
int
add
cltd
test
mov
aam
jb
inc
mov
leave
loop
dec
lock
push
add
adc
adc
pusha
add
or
xchg
rcrl
lock
pusha
jge
stos
std
sub
clc
add
fcmovne
mov
rcrb
jmp
sbb
xlat
mov
and
add
xchg
adc
add
pushf
add
sbb
adc
lds
sbb
pushf
and
or
mov
pop
adc
jbe
adc
cmp
xor
in
cmp
inc
lods
cmp
and
mov
add
xchg
fwait
jecxz
adc
loope
push
adc
fcomp
loop
xor
cmpsl
push
pop
fisubrs
call
flds
push
outsl
or
add
mov
pop
fwait
inc
arpl
sarb
es
aad
lods
loop
stc
das
pop
mov
test
xchg
nop
jns
frstor
int
push
and
jecxz
mov
add
add
pop
or
and
dec
inc
aaa
add
jmp
and
sarl
daa
ja
jno
mov
sbb
pop
add
mov
pop
ret
sbb
das
and
loope
leave
adc
imul
ret
icebp
lahf
imull
cli
mov
cltd
std
xor
stos
push
adc
inc
sbb
push
xor
in
into
daa
mov
xchg
les
test
jp
cld
jge
add
movsb
sbb
pop
movsl
insb
push
sub
sbb
add
push
out
icebp
ret
stc
push
roll
ds
jle
ds
and
roll
adc
jo
jmp
pop
cmp
das
inc
add
fsub
rcrb
test
into
dec
cmp
mov
pop
mov
adc
xchg
or
xor
adc
pushf
xchg
aad
push
inc
ret
fidivl
lahf
js
addr16
sub
inc
bound
push
sahf
mov
ds
fcompl
lahf
loopne
mov
sbb
xor
sbb
pushf
xchg
sub
inc
cmp
stc
pop
mov
popf
in
cmpsl
jo
sarl
sbb
outsb
jmp
out
pop
pushf
sub
mov
lret
inc
js
add
pop
scas
sbb
xchg
mov
data16
popf
and
in
adcl
jae
mov
popf
flds
adc
jge
mov
and
xchg
dec
or
xor
add
rcrl
loope
add
ss
mov
in
rolb
xor
inc
add
aaa
fisubs
hlt
cmp
stc
sahf
xchg
sti
adc
push
fstpl
jge
rcrb
repz
cmp
add
loope
xchg
inc
xchg
out
jo
jnp
adc
inc
lock
and
mov
cmp
stc
cmp
out
pusha
adc
call
cmp
pop
jl
scas
push
sarl
push
cmp
mov
loopne
adc
lret
dec
test
shlb
sub
push
xchg
jl
sti
or
add
loopne
xor
movsb
addr16
add
inc
inc
pop
xchg
scas
inc
mov
or
data16
jae
in
test
dec
in
pop
and
or
adc
sub
dec
jb
mov
inc
add
cmp
push
sbb
xlat
inc
nop
fimuls
jns
xchg
cmp
add
jmp
lods
cli
push
xchg
add
sub
aad
rclb
imul
in
sti
js
sub
cmp
outsb
jnp
sbb
repz
add
imul
sbb
cld
fwait
les
test
pusha
push
pop
test
mov
je
jmp
and
xchg
jbe
fidivs
mov
iret
lds
dec
inc
ds
aad
fbld
push
loop
add
shl
inc
add
fiaddl
rol
mov
cmpsb
outsb
sub
mov
or
mov
pop
dec
out
cmp
xor
or
add
jns
xor
sub
clc
and
sub
pop
out
subl
cmp
jle
icebp
jg
xchg
xchg
xchg
sub
add
and
test
mov
xor
jne
ds
addl
sub
stos
repz
cmp
jmp
hlt
mov
mov
arpl
push
add
push
mov
pop
test
mov
iret
mov
lods
xor
rol
test
xchg
cmp
mov
gs
adc
and
and
insl
inc
das
mov
xor
push
add
sub
pushf
mov
pushl
or
jle
mov
jl
shrl
push
mov
lret
popa
inc
pushw
movsl
cmp
shll
lods
xchg
lds
gs
int3
pop
mov
roll
inc
enter
sub
xorb
popf
and
mov
sar
mov
dec
add
mov
jbe
mov
cltd
lea
gs
sbb
les
repz
dec
test
push
aam
lds
repz
adc
or
dec
add
lcall
xchg
out
lods
in
sub
orb
loopne
mov
dec
add
in
call
add
dec
sbb
lods
and
cmpsb
sub
or
out
add
movsl
ja
adc
dec
sub
xor
adc
xor
sbb
test
lock
dec
add
rolb
add
pop
mov
into
cmp
add
push
fcmovb
leave
test
sbb
addl
lock
mov
mov
pushf
rcl
lds
into
xor
les
adc
clc
add
and
push
ret
pop
fsub
add
dec
into
add
pop
mov
std
xchg
lahf
repz
cmp
inc
ja
lods
jl
cmpsl
push
or
adc
xor
sbb
mov
pusha
negl
fistps
adc
loopne
scas
xchg
add
pusha
lds
cmpsl
add
rolb
ss
addr16
push
sub
in
inc
icebp
push
test
sbb
rcrb
jno
xor
push
sub
insl
stos
or
out
jmp
faddl
jp
jno
sub
pop
leave
fnstsw
pop
jecxz
jo
cld
adc
cmp
std
inc
lcall
out
sub
xlat
out
push
cmc
sub
sbb
ret
xor
pop
inc
gs
cmp
and
shr
or
arpl
sahf
add
and
cmc
and
xchg
mov
clc
push
cld
loop
or
icebp
add
cmpps
xchg
jecxz
jp
popa
jmp
ljmp
or
in
addl
scas
ja
jno
push
cltd
or
xchg
loop
movsb
dec
rol
stos
push
cmpsb
into
in
lret
cmpl
inc
gs
cmc
adc
xor
sbb
jp
mov
les
adc
adcl
out
fdivl
andb
xchg
xor
and
pushf
inc
insl
push
adc
subl
sub
cmp
lcall
stos
ljmp
push
mov
cmp
daa
xchg
push
jns
mov
stc
xchg
mov
pushf
sub
and
daa
sbb
xchg
and
mov
mov
dec
add
xor
jp
push
sti
xor
pop
cs
or
into
and
inc
std
in
je
rclb
sbb
mov
sarl
popl
rcl
adc
aaa
sub
lods
int
inc
scas
popa
mov
jg
lahf
sbb
sbb
cmp
sub
pop
adc
out
xor
fnstenv
test
pop
adc
test
mov
and
cs
sbb
daa
jp
call
or
mov
sarb
ficompl
add
and
xchg
jp
inc
xor
sbb
rorb
pushw
rorl
mov
mov
cmp
sahf
and
mov
hlt
sub
xchg
or
sar
repz
ret
and
inc
insl
xor
xchg
add
jmp
test
and
dec
bound
or
std
lahf
cmp
sbb
pop
mov
fnsave
mov
add
popf
mov
clc
inc
mov
pop
mov
insb
loopne
sbb
lods
jmp
mov
push
pop
push
and
lods
dec
and
mov
inc
and
packssdw
or
aam
adcb
pop
push
arpl
inc
xchg
xor
stos
stos
aaa
lcall
into
jo
repnz
imul
leave
mov
mov
mov
mov
sbb
fisttpl
shll
adc
jle
lods
inc
add
add
jb
iret
test
or
lods
repz
lret
mov
adc
mov
push
rcll
and
or
cmpb
jecxz
mov
andps
cs
jbe
mov
mov
sahf
cld
and
dec
lds
push
push
addb
or
mov
mov
sbb
mov
push
mov
sub
decb
cmp
cld
cmp
insl
jge
outsb
dec
pop
push
aad
jge
sbb
sub
jge
push
or
lcall
mov
add
mov
sbb
pusha
jns
aaa
inc
mov
scas
adc
and
mov
dec
fcomp
or
jge
and
add
inc
adc
mov
xchg
daa
or
vfmaddsub132pd
stos
in
push
rorl
cli
mov
xor
mull
sti
and
jnp
inc
adc
jmp
icebp
mov
cmp
popf
add
xor
pop
aad
repnz
jns
lret
mov
push
test
out
imul
repz
cmpl
pusha
mov
mov
repnz
add
mov
icebp
pop
rclb
int
jle
sbb
push
dec
xor
aas
add
imul
data16
inc
pop
cld
lds
inc
mov
popl
sub
outsl
insl
xlat
ret
add
popa
cmpsb
or
rcrl
mov
in
outsl
mov
xorb
pop
movsb
ret
dec
inc
push
fistpll
sbb
inc
in
inc
addr16
sub
add
hlt
ret
jecxz
xchg
add
stos
paddq
xchg
dec
pop
inc
adc
and
lea
jo
pop
pop
fsubrl
mov
rorb
jb
dec
xor
xor
ret
es
or
divl
jns
cld
stos
movsb
inc
adc
adc
jo
sub
xchg
add
stc
sub
mov
mov
mov
pop
cmp
mov
push
and
cmc
add
add
nop
push
idivb
add
dec
lods
sbb
pusha
ss
test
xlat
adc
sahf
into
loope
dec
add
or
movb
shlb
lock
nop
repz
dec
test
in
insb
cs
mov
xor
sbb
mov
cli
pop
pop
and
sub
daa
cmp
inc
adc
int3
add
aam
sub
enter
push
clc
faddl
jne
cmp
jno
aas
les
sub
and
xchg
jg
ret
loope
test
test
loopne
pusha
int
popf
lds
jg
call
pop
popl
rcl
xchg
add
lahf
mov
adcb
fidivrl
loop
xchg
std
shlb
mov
aad
mov
jbe
daa
fsubrl
shlb
adc
push
repz
gs
lret
sbb
movsb
dec
inc
fldl
pusha
jl
pop
sbb
shlb
cmp
sahf
sub
popl
jp
rcll
adc
push
stc
ljmp
fidivl
call
cmc
pop
cmp
sub
roll
push
fbld
dec
or
jmp
mov
roll
data16
roll
or
add
aas
mov
int3
add
mov
ret
cmp
mov
xor
rcll
mov
test
shlb
popl
sahf
adc
xor
xchg
repnz
add
lock
jae
add
lcall
sbb
pop
xor
add
jns
ljmp
xchg
mov
ret
lods
iret
dec
imul
and
cld
pop
lock
dec
jl
shll
mov
add
mov
add
adc
in
les
lock
add
outsb
aaa
fdivl
inc
mov
pop
pusha
mov
mov
ss
or
repnz
push
jle
jge
pop
add
in
add
mov
push
les
or
push
xchg
jge
sub
mov
stc
sbb
clc
pop
mov
insl
mov
add
mov
xor
sbb
mov
outsl
std
clc
adc
xorl
add
inc
jge,pt
add
pushw
lcall
stos
divl
mov
dec
add
jmp
lcall
pop
sub
fwait
int3
push
rclb
sub
cmp
lret
test
cltd
or
pusha
jae
mov
dec
loop
and
js
shr
jp
mov
or
lods
aas
add
call
xchg
shll
test
rcl
sti
xor
xchg
pop
inc
pop
les
add
or
inc
sub
cmc
nop
mov
cmpsb
scas
loopne
in
add
inc
sbb
out
jbe
sub
jnp
lcall
xor
add
sti
mov
add
or
mov
or
xorb
add
data16
std
sub
jmp
add
xchg
lret
mov
dec
add
loope
push
aaa
add
jp
add
inc
dec
aam
or
xchg
add
mov
add
sub
jle
mov
mov
mov
popa
dec
push
mov
jmp
push
lcall
lods
adc
frstpm(287
testl
dec
fnstsw
mov
mov
jo
dec
inc
add
out
sub
mov
adc
dec
inc
fcmovnu
popf
add
ds
pop
imul
scas
and
int
xor
shrb
sub
cs
addb
aad
pop
or
jns
mov
mov
cmpsl
pop
rcll
testl
add
aaa
push
movl
out
cmp
cmp
cld
add
fnstsw
pop
mov
fld
repnz
test
push
pop
fldt
sbb
mov
sub
nop
outsb
xor
aad
call
adc
icebp
pop
clc
add
aam
dec
pop
adc
add
push
jge
dec
mov
push
pavgw
test
xchg
inc
iret
repz
aam
cmp
lock
test
nop
mov
pop
mov
rorb
add
xchg
xor
jbe
and
stos
mov
dec
adc
and
outsb
nop
test
add
aad
xchg
jp
test
popa
add
jo
aam
pusha
stc
jg
mov
sbb
jle
sbb
sbb
sbb
jns,pn
pop
xchg
and
mov
int
pop
scas
and
sbb
in
mov
add
pop
inc
ffreep
xor
push
shlb
ret
xor
fistpl
pop
xorl
add
push
loope
js
cs
lods
jmp
shrb
and
mov
leave
xor
ja
ljmp
and
cmc
jnp
sub
jae
cmp
xor
push
dec
add
cmp
jg
into
or
sub
ds
mov
jge
xchg
push
sub
inc
mov
or
sti
push
fnstsw
inc
icebp
push
xchg
inc
repnz
xor
mov
shrb
fdivl
cld
in
add
adc
adc
jnp
ret
add
repnz
stos
add
push
sub
aaa
cmp
arpl
mov
or
xor
cld
into
pop
popf
push
sub
mov
cmp
mov
rolb
movsl
pusha
sbb
shl
pop
jb
cmp
ret
cli
bound
and
add
rcrl
je
cwtl
add
andb
lds
rclb
cs
push
mov
xor
mov
add
test
scas
inc
xchg
and
push
lret
sahf
daa
xchg
lahf
roll
add
dec
jle
xchg
in
add
push
sub
mov
xchg
cmc
jbe
mov
iret
mov
mov
rclb
and
pop
rclb
cmpsb
pushl
sbbl
cbtw
xor
fsubl
cli
add
add
js
in
clc
rclb
testl
jg
lahf
push
ljmp
les
sub
out
hlt
pop
add
sar
adc
daa
cmp
add
xor
lret
push
lahf
negb
xor
insb
mov
push
roll
gs
ss
je
jecxz
repz
sbb
xor
push
xchg
in
add
enter
jl
xchg
adc
das
jns
adc
push
rolb
shlb
jae
cli
repnz
xchg
scas
mov
fwait
push
add
add
xlat
mov
enter
cmp
push
inc
sbb
adc
adcb
fisubl
aam
pop
lahf
imul
jmp
cmp
inc
jae
mov
in
inc
pop
sbb
jbe
mov
and
aam
sbb
push
xchg
ret
rcll
nop
dec
sub
inc
dec
addl
mov
adc
cmp
lods
xchg
sub
sbb
add
inc
cmpsb
pop
fldcw
mov
and
sahf
add
lock
cmp
hlt
mov
sbb
xchg
shll
mov
xor
sbb
ret
add
ret
xchg
xchg
inc
subl
cli
push
or
lret
cmp
xor
outsl
adc
or
clc
and
icebp
insb
sub
cmp
jl
pop
aam
or
dec
add
xchg
cltd
es
cmpsl
xor
in
faddl
and
loop
test
sahf
cmp
adc
add
popf
jmp
inc
sbb
or
cs
add
arpl
mov
out
xor
xchg
in
pop
cmp
or
cld
icebp
and
inc
mov
xlat
call
pop
dec
cmp
sbb
lret
add
shr
shrb
fidivs
std
int3
cmp
outsl
inc
add
push
das
ret
cmpb
mov
out
cld
mov
pop
jo
out
aad
cmp
mov
test
jp
push
aas
in
lock
stc
add
or
loop
out
xrelease
push
daa
leave
push
cmpsb
xchg
js
addl
call
push
inc
inc
ret
and
data16
ret
lea
hlt
js
sbb
sbb
aam
dec
xor
xor
aas
adc
ret
test
sbb
idivl
cmpb
out
inc
push
jp
into
lock
mov
pop
add
pop
dec
fidivs
lock
add
arpl
fnstcw
xor
adc
mov
mov
xchg
xchg
mov
cmp
dec
cmp
rclb
or
stos
rclb
push
shl
pop
fbstp
and
mov
test
sbb
insb
stos
imul
std
xor
shll
push
jp
inc
mov
xchg
cwtl
fstl
and
in
stos
outsb
lea
jp
movb
add
mov
stos
push
jnp
test
dec
lret
sub
pusha
adc
sahf
dec
test
xchg
cmpsb
push
ret
sub
loope
mov
add
xor
dec
push
ficompl
outsl
addr16
pusha
xchg
adc
ds
xchg
and
stc
and
pop
inc
mov
add
fnstenv
mov
push
xchg
aas
fdivr
push
adc
cmp
and
popf
or
jp
test
test
sarl
dec
add
jp
and
pop
lods
lret
pop
sarb
inc
icebp
and
add
inc
and
sbb
test
daa
lock
xor
in
mul
add
bound
movsb
ss
gs
movsl
inc
add
xchg
pop
stc
and
or
sub
xchg
std
xchg
inc
hlt
xor
and
lret
es
inc
pop
call
filds
stc
ja
xchg
mul
add
out
push
sahf
push
test
add
jecxz
or
outsl
stos
nop
sarl
data16
cli
pop
adc
mov
and
add
mov
jns
xor
mov
or
cmpb
daa
dec
pop
daa
mov
bound
cmp
push
add
lret
aam
mov
cmc
pop
fwait
clc
loop
cmpb
flds
shll
jp
cltd
xor
xor
lahf
popa
mov
and
adc
test
push
daa
addr16
xchg
cltd
pop
outsl
sahf
push
mov
mov
xchg
imul
test
sbb
sub
add
adc
jle
cld
popf
daa
ret
and
mov
xchg
add
call
sbb
or
and
dec
push
lcall
inc
jl
popf
jp
xchg
jg
inc
push
jg
out
cld
js
sub
out
or
repnz
js
push
or
lret
or
jns
xchg
add
mov
or
adc
xor
cld
inc
sti
and
adc
mov
out
or
mov
scas
sub
fldenv
ljmp
dec
adc
addr16
or
cmc
xor
mov
xlat
and
push
cmpsl
and
lds
push
or
xlat
sbb
and
ljmp
int3
and
jl
sbb
add
gs
mov
mov
cmp
std
sub
sbb
insb
or
pop
and
and
rorl
je
outsb
jb
lret
inc
movsl
sub
push
push
ret
dec
orl
pusha
and
xor
inc
mov
jge
xchg
xchg
jmp
and
loope
jnp
xor
push
jle
xorl
xchg
cmp
sub
cld
pop
test
rcrl
les
add
jmp
mov
mov
std
xor
xlat
mov
jno
push
je
jle
in
and
cmp
adc
pop
xor
mov
imul
pop
and
arpl
movsb
or
sbb
out
mov
imul
incb
lds
jle
decb
xchg
mov
and
sbb
cmp
xchg
movhps
into
mov
cmp
es
insb
adc
inc
and
inc
mov
inc
adc
cmp
add
cmp
mov
push
orl
or
add
jge
pop
mov
std
aas
xchg
push
jp
mov
movsb
adc
inc
and
cwtl
add
insb
or
iret
fildll
jb
hlt
rclb
call
je
arpl
xorl
and
sbb
lret
inc
pop
cmp
push
daa
arpl
mov
les
xchg
jl
clc
in
mov
inc
xchg
dec
sbb
or
inc
cmp
into
fs
mov
bound
roll
and
push
bound
mov
xchg
iret
mov
add
sbb
out
aad
loopne
push
mov
sbb
in
gs
mov
mov
fdivrl
pop
or
add
jp
lahf
subb
and
push
cmp
mov
leave
sub
adcl
inc
popf
add
es
cmc
adc
mov
dec
mov
inc
and
out
sub
dec
jp
mov
movsb
inc
xor
mov
xlat
mov
aad
repnz
cmp
inc
cmp
pop
push
inc
ret
jne
sbb
hlt
mov
sbb
add
data16
movsl
pop
nop
fldl
lret
cmp
xchg
pop
adc
fcoms
mov
in
mov
les
pop
xchg
jmp
aad
mov
mov
enter
in
and
les
adc
daa
push
jge
shr
in
jb,pt
push
cmp
inc
mov
dec
ret
jl
xchg
sub
cmp
xor
mov
pop
mov
jp
cmp
adc
js
mov
and
sti
jg
inc
sbb
jo
mov
adc
aam
inc
popa
and
int3
push
adc
xchg
or
xchg
incl
stos
pop
mov
mov
jge
sub
int3
and
imul
sbb
test
arpl
mov
es
adc
mov
nop
dec
lahf
jl
cld
jns
lret
ljmp
xchg
xchg
sbb
add
incb
pop
cmp
jnp
sbb
or
sbb
arpl
jle
fcoml
ret
shlb
mov
inc
xor
sbb
and
fs
dec
adc
jmp
mov
mov
push
sbb
add
insb
decl
and
daa
jns
ja
jb
add
jl
out
push
icebp
fldt
sbb
arpl
leave
loopne
push
mov
lods
pop
nop
loope
test
lods
clc
stc
pop
cmp
movsl
sbb
sbb
mov
lcall
sbb
cltd
xchg
dec
lds
or
test
jbe
xor
or
es
rorl
test
xor
loop
inc
mov
hlt
sbb
fwait
or
adc
and
jnp
inc
xchg
andl
fucom
data16
jbe
test
mov
lret
mov
adc
stos
and
out
mov
cld
jbe
cmp
jne
adc
pop
je
or
les
inc
and
aad
mov
add
bound
testb
sub
addr16
add
pop
mov
bound
icebp
cmc
inc
dec
movsl
xchg
or
xor
inc
mov
test
dec
pop
add
jg
scas
and
aad
and
xor
fwait
jnp
jo
jne
mull
xchg
aad
add
xchg
pop
lock
mov
push
sbb
fwait
inc
repz
pushf
xorl
add
std
aad
pusha
dec
mov
lahf
jp
inc
pushf
xor
mov
mov
or
cmp
ja
ret
jo
jae
jp
lea
outsb
mov
je
dec
jo
sbb
pop
aaa
ret
pushf
mov
jp
mov
jbe
into
sbb
sarb
jp
pop
add
xor
or
sbb
idivb
cmp
js
outsl
fistpll
mov
mov
mov
sbb
mov
jmp
or
xchg
adc
imul
ja
push
add
dec
rorl
je
jge
jno
inc
out
stos
adc
add
cmp
xchg
xchg
mov
mov
and
sub
iret
imul
pusha
mov
shl
cmp
xchg
fcoml
push
dec
lahf
das
outsl
sbb
test
xchg
test
out
xchg
aam
inc
xchg
and
fsts
dec
lods
adc
jmp
aam
or
mov
xor
lret
jl
in
aad
lock
aas
rcrb
in
push
loopne
xchg
adc
cltd
jge
or
jno
ss
dec
inc
imul
dec
fsubl
cmpl
xchg
add
shll
data16
sbb
cli
add
cmc
mov
pop
or
xchg
pop
add
push
xchg
mov
adc
push
add
aam
add
in
mov
or
and
lret
cli
push
add
daa
into
inc
inc
scas
xor
xor
sbb
call
out
mov
add
cs
adc
add
loope
adc
aas
add
cld
push
sti
outsl
cmp
ret
ret
add
aas
mov
std
add
out
ret
cmp
add
lds
popa
iret
nop
icebp
add
inc
rclb
and
shrl
loope
lods
cli
mov
add
adc
movsl
inc
fisttps
in
cmp
adc
lahf
xor
mov
filds
inc
sub
inc
or
adc
test
adc
outsb
add
mov
lret
jp
pop
andl
sub
adc
jp
sahf
xor
xchg
jno
outsl
aad
repz
sbb
ret
xchg
cmp
pop
pop
jecxz
stos
jmp
sbb
scas
cmp
ljmp
add
dec
insl
hlt
test
xlat
sbb
and
outsb
add
xor
push
add
ljmp
mov
lahf
into
out
and
sbb
or
push
fstps
imulb
adc
inc
dec
scas
out
aas
mov
into
mov
sbb
xlat
pop
rolb
movsl
cmpsb
and
aas
xor
mov
pop
mov
cmp
aam
scas
movsl
push
popf
mov
inc
test
push
repz
inc
leave
js
sbb
jo
pop
fidivrl
ret
mov
stos
add
inc
cwtl
cmp
jecxz
test
add
sub
icebp
adc
add
or
sub
out
add
ret
cmpb
dec
pushl
xchg
xchg
inc
movsl
pushf
adc
pop
popf
testb
adc
mov
adcl
ja
aaa
cwtl
and
sbb
mov
pop
xor
add
dec
add
lret
cmpb
add
mov
std
or
and
xchg
add
inc
cmp
add
aam
popf
insl
push
add
jle
int
cmc
sub
add
movsl
push
lret
jmp
jo
pop
rcr
jg
or
sub
loop
cmp
add
cmp
sub
and
int
jo
add
loopne
pop
mov
or
mov
xor
add
jmp
push
repnz
inc
sbb
add
dec
xchg
incb
insl
push
mov
lods
xorl
inc
cmp
inc
inc
or
jl
and
pop
cltd
popf
add
insb
push
or
movsb
xchg
inc
and
jb
repnz
subl
mov
movups
repnz
into
gs
mov
mov
popf
mov
inc
jmp
inc
insl
sbb
fcmovu
gs
add
mov
shll
add
fadd
sbb
add
incl
pushf
ljmp
ret
ret
jl
jne
out
and
dec
add
idivl
add
and
push
add
mov
ja
std
add
mov
test
inc
push
and
adc
add
arpl
sbb
jnp
aad
inc
popf
mov
stc
pop
push
stos
ret
lods
inc
pop
add
lahf
mov
in
cltd
ror
outsb
dec
rolb
cmp
lcall
fldenv
mov
mov
repnz
popl
or
scas
mov
idivl
sbb
jnp
jne
sub
add
out
jp
mov
shrb
ds
rcll
or
sub
add
cmp
shrb
mov
push
jnp
mov
je
add
jmp
cltd
mov
sbb
jno
inc
sysret
divl
cmp
xchg
xor
xlat
and
cli
sarb
cmc
add
enter
xchg
icebp
and
outsb
and
push
push
cmp
xchg
rol
jp
add
mov
pop
jns
cmc
test
ds
xchg
add
in
sub
subl
lds
pop
xchg
xor
xchg
mov
or
ss
cltd
mov
inc
mov
jb
and
int3
add
mov
sub
insl
xchg
xchg
push
inc
add
loop
cmpl
inc
loopne
sub
sarb
sbb
and
out
jo
cwtl
lock
cmp
das
sti
int
ret
pop
mov
lds
rcl
das
xchg
stc
add
inc
mov
mov
mov
ja
sbb
aas
mov
and
mov
mov
dec
pop
mov
add
jne
pop
xor
lock
jno
scas
push
imul
leave
add
and
dec
sbbb
add
fbld
inc
addr16
adc
add
push
pop
adcb
mov
xor
add
push
mov
icebp
jno
push
dec
dec
repz
add
nop
std
lahf
xor
adc
mov
lock
sar
adc
jl
inc
dec
inc
cmp
xor
lcall
lret
cltd
rcr
push
fmuls
arpl
jl
pop
add
movsb
jmp
loope
repz
jg
or
xor
inc
sub
negl
mov
add
or
shlb
fwait
ret
aad
daa
push
lea
cmpsl
cwtl
add
out
or
aad
mov
aas
add
xor
iretw
mov
popl
add
cwtl
in
pop
jnp
mov
enter
data16
push
aaa
mov
stc
mov
in
ja
push
add
push
mov
add
movsl
into
test
mov
inc
add
mov
scas
pop
or
add
outsb
pop
inc
add
mov
pop
add
mov
mov
inc
cld
and
lret
adc
mov
pop
dec
dec
jbe
mov
jne
popa
push
inc
pop
aad
int
and
add
sub
movsl
push
test
cmp
mov
aam
mov
push
out
dec
daa
add
mov
inc
mov
dec
test
add
fld
cmp
stos
andb
sbb
push
dec
add
push
pop
in
xor
mov
xchg
cmc
repz
rolb
iret
sub
and
sbb
cmp
dec
imul
add
scas
push
repnz
daa
shll
or
mov
pop
sbb
add
sub
add
pop
mov
push
xor
add
ljmp
faddl
inc
fildl
int3
jo
cmpsl
stc
xor
add
aad
pop
aam
fcmovbe
ret
sbb
mov
sbb
add
and
shll
adc
das
dec
xchg
fdivrl
stos
add
push
sbb
xchg
jns
sar
ds
gs
pop
mov
inc
xor
lret
xchg
jg
add
mov
out
add
into
mov
xor
inc
xorl
movb
push
add
lods
sbb
loop
mov
add
mov
mov
inc
sbbl
dec
push
loopne
xor
or
arpl
in
lahf
jne
jbe
rolb
lret
lret
pusha
sub
or
xchg
cltd
cmc
lods
push
in
pusha
nop
addr16
inc
jge
adc
in
mov
xchg
or
js
out
jb
adc
pushf
movsl
ror
loope
mov
adc
xchg
dec
rol
adc
in
pusha
imul
xor
xchg
scas
movsl
das
outsb
mov
pop
ror
adc
xchg
fstps
loop
sub
add
jae
or
enter
mov
and
in
stc
adc
ror
nop
sub
jmp
dec
add
push
cmpsl
jl
movsb
out
add
js
fists
mov
xor
pop
out
scas
inc
lcall
xor
mov
mov
push
sub
int3
add
loope
lds
push
jne
das
push
mov
sub
scas
pop
jb
ja
stc
pop
sbb
jp
adc
mov
sbb
mov
xor
repz
push
sbb
jp
or
push
mov
nop
addb
mov
cmp
push
aaa
add
sbb
xor
jb
inc
test
cmp
jno
inc
xchg
mov
add
cs
mov
out
cmpxchg
dec
cmp
pop
das
bound
xchg
loopne
dec
cmpsb
cwtl
flds
dec
lahf
mov
scas
mov
xor
jmp
arpl
pop
add
stc
push
jnp
mov
add
sub
xor
mov
fwait
daa
jp
imul
das
das
fstpt
xchg
gs
mov
add
data16
dec
aas
call
add
jno
scas
add
pop
adc
xchg
rorb
shlb
call
stc
push
mov
dec
cmpsb
add
lea
add
not
xchg
jle
and
jne
sub
jp
mov
xchg
insl
aaa
and
hlt
pop
scas
dec
mov
jecxz
or
in
ljmp
flds
push
das
or
aam
loop
cld
daa
add
out
add
ljmp
and
mov
inc
jp
daa
sbbl
xchg
mov
xchg
xchg
inc
push
test
pop
add
aam
push
test
pop
sub
jl
std
pushl
jl,pt
and
sbb
leave
test
xor
inc
adc
shlb
and
or
mov
jp
sub
inc
adc
inc
scas
jl
adc
jb
nop
xchg
out
ja
aaa
out
bnd
pop
scas
adc
ret
loope
rcrb
inc
outsl
ja
push
in
out
incl
inc
add
out
movsb
xor
cmp
xor
pop
test
maskmovq
testl
xor
dec
scas
dec
inc
fwait
mov
ffree
xor
test
test
pop
add
push
cmp
inc
stc
push
sub
xchg
mov
paddusw
cmpsl
addb
jle
jmp
xchg
filds
sbb
cmp
aad
leave
cs
jge
or
mov
test
and
hlt
scas
xchg
sbb
inc
mov
adc
fstpl
movsb
xchg
movsl
flds
pushf
adc
jmp
in
mov
sbb
popf
and
push
add
xchg
add
call
pop
loop
jbe
clc
jae
and
es
sub
pusha
mov
xchg
push
daa
mov
pop
je
adc
dec
jge
inc
cltd
ret
sbb
mov
out
aaa
or
push
xchg
mov
and
nop
jp
add
lods
add
shrl
ds
or
in
mov
pop
sub
dec
fildl
mov
loope
pushf
addb
faddl
sbb
push
cmpsb
into
inc
icebp
enter
ret
shlb
adc
mov
pushl
sahf
cmp
jnp
fwait
jb
or
dec
test
jge
jp
mov
push
jecxz
xor
mov
shlb
dec
and
movsb
lahf
sbb
out
sbb
sub
popa
inc
movsl
aaa
add
lcall
enter
or
jle
mov
outsl
or
cmp
out
adc
mov
leave
scas
mov
xchg
adc
test
pusha
dec
sub
inc
repz
xchg
or
outsb
adc
pop
out
and
inc
xchg
sbb
ret
mov
or
xor
xchg
cmc
sub
movsb
gs
dec
inc
aam
mov
inc
sbb
mov
pop
ret
data16
fnsave
sub
xchg
add
arpl
movsb
lahf
sarl
pushf
jle
pop
aam
sbb
aaa
cmp
jo
scas
adc
jge
int
xchg
fcoms
int3
pop
mov
leave
cmp
movl
addr16
inc
stos
data16
mov
sbb
cmp
test
enter
adc
xor
movsb
sti
xor
add
fsub
cmp
hlt
cmp
and
mov
pop
ds
sub
aam
fs
repnz
lcall
and
add
or
ficoms
sub
jb
ret
and
adc
out
sarl
mov
sub
xorb
inc
es
xor
lods
push
mov
add
sbb
into
mov
pusha
bound
add
out
mov
mov
orb
rol
outsb
inc
arpl
test
arpl
scas
pop
xchg
out
dec
hlt
or
sbb
lret
mov
inc
xchg
gs
push
sahf
ret
dec
cmc
insb
xlat
push
xlat
mov
sti
jmp
cwtl
or
int3
mov
adc
mov
lea
sbb
ret
popa
adc
inc
ljmp
sub
out
pop
mov
test
bound
movsb
daa
adc
hlt
ret
scas
cld
cmp
or
push
aam
cmp
adc
jecxz
xchg
jecxz
sub
icebp
cmc
arpl
out
jns
jno
outsl
ja
sbb
adc
roll
lret
ror
stos
xor
xchg
addr16
mov
dec
dec
mov
and
adc
add
inc
inc
pop
or
arpl
adc
ret
clc
outsl
mov
loope
mov
sbbl
jp
mov
add
ret
jb
pop
iret
lret
scas
mov
push
cmp
inc
cmc
jno
bound
fs
xor
not
scas
repnz
dec
nop
arpl
test
adc
xchg
stos
or
repz
inc
xor
ret
sub
in
mov
cmp
es
mov
lods
test
scas
push
fwait
dec
lahf
sub
add
adc
filds
jno
addr16
lret
add
pop
test
in
dec
mov
int3
lret
jg
add
mov
xor
ja
xchg
mov
mov
dec
pushf
outsl
sbb
add
je
xchg
add
inc
add
lret
add
and
loopne
nop
dec
outsl
dec
xor
notb
and
sub
push
pushf
xchg
lahf
cwtl
jno
ljmp
mov
jl
cmpsl
int3
add
pusha
lods
fiaddl
sahf
es
negb
addr16
test
ss
loop
sbb
add
xchg
ret
daa
insl
mov
add
and
mov
popf
add
adc
fildl
dec
data16
xor
loopne
jl
popa
dec
add
iret
pop
add
mov
movl
loope
int
inc
pop
in
in
cmp
mov
add
mov
fs
leave
jb
inc
test
pop
dec
je
aaa
int
dec
pop
adc
lcall
fistps
dec
cld
scas
pop
out
cmp
pop
pusha
dec
subl
test
outsb
xor
add
into
xchg
dec
or
add
pop
addb
sti
push
or
in
pop
insb
push
ret
mov
xor
add
pop
jle
adc
adc
push
xor
imul
lock
push
mov
les
int3
add
and
aam
dec
cmp
xlat
xchg
outsl
push
sbb
fwait
mov
cmpsb
pop
jno
push
loop
verr
outsl
nop
jo
icebp
mov
xchg
and
cmp
xchg
jne
push
add
mov
mov
fwait
jl
jo
pop
push
test
inc
push
insb
or
das
push
sbb
adc
cmp
stos
loope
mov
pshufw
push
cltd
stc
xor
xchg
jbe
add
fs
pusha
in
les
mov
shll
mov
xchg
push
incb
jmp
pop
jecxz
or
leave
jnp,pt
call
ret
mov
mov
loopne
sbb
repz
lcall
pop
cmp
jg
cmc
add
call
and
inc
pop
cmp
pop
and
xchg
fsubs
inc
fwait
push
mov
jg
rolb
mov
inc
xchg
push
shll
mov
iret
cmc
flds
add
ja
jg
pop
mov
cmc
dec
pop
adc
add
xor
in
mov
ud0
or
sub
jne
pop
push
xchg
inc
repnz
int
xchg
dec
loopne
mov
gs
notl
inc
mov
sti
xchg
mov
and
xchg
add
or
lods
xor
rcl
pushf
xlat
or
rcrl
pop
and
out
xchg
jge
sub
sbb
pushf
loop
mov
orl
rorb
ret
cmp
jbe
into
jle
ret
inc
in
inc
jnp
fisttpl
mov
cmc
dec
cmp
stc
add
push
lret
pop
data16
ljmp
add
push
add
jge
pop
sub
mov
das
add
test
sbb
mov
scas
scas
pop
add
pop
je
mov
jbe
add
mov
aad
add
fs
add
mov
enter
fldln2
sub
mov
add
popf
mov
cmc
fldt
mov
dec
mov
dec
fildll
mov
fwait
roll
sbb
xchg
lcall
mov
lds
cld
pop
movups
adc
fsubs
sbb
sub
sub
lods
rcrb
rclb
imul
call
xchg
addr16
mov
push
inc
or
jo
ficoml
jae
mov
shl
add
adc
jmp
cvtpi2ps
repz
jl
inc
push
push
inc
add
cmpsl
fstpt
xchg
mov
stos
mov
rorl
cmp
adc
test
add
mov
into
bnd
add
cmp
dec
test
jb
adc
adc
sub
xchg
mov
jle
fs
repz
adc
jns
and
scas
add
inc
xchg
mov
iret
push
leave
adc
and
jle
xor
add
push
sbb
add
xchg
mov
and
mov
push
ret
push
stc
xchg
add
std
add
popf
call
mov
jmp
inc
mov
es
adc
xor
adc
mov
insb
pop
inc
add
daa
rol
aas
testl
scas
adcb
adc
push
sbb
shrl
xchg
cwtl
mov
jo
js
fisubrs
cmp
dec
sbb
out
dec
mov
mov
fstl
outsb
adc
enter
xchg
jmp
mov
subb
cwtl
leave
xlat
push
pop
push
pop
add
jbe
inc
pop
push
add
dec
sbb
add
addr16
xor
mov
rolb
inc
cmpsb
sahf
push
add
or
mov
mov
out
lds
and
je
dec
das
mov
sub
sti
in
lds
in
jne
sbb
xchg
sbb
sahf
cltd
dec
cmp
and
or
lahf
outsl
add
insb
popf
std
add
stos
mov
sbb
push
xchg
xor
sub
loopne
jnp
jmp
mov
sbb
pop
or
xchg
icebp
lea
add
dec
push
jle
or
iret
cmp
push
sub
jmp
inc
xlat
les
lock
repz
gs
fisubl
fiadds
xor
jno
lcall
sbb
sbb
lret
add
data16
cltd
jne
pop
jmp
mov
ja
movsb
loopne
inc
add
mov
enter
test
pop
adc
mov
inc
imull
xor
mov
pop
xchg
add
scas
mov
stos
iret
inc
mov
and
repz
jo
mov
inc
adc
adc
ret
jb
sub
andl
inc
and
mov
add
and
sti
add
fdivrs
xchg
test
push
pop
add
and
add
mov
adc
add
push
in
mov
cltd
popa
test
sub
xor
xchg
cmp
popf
incb
push
dec
push
push
cmp
add
inc
jg
in
push
mov
mov
mov
push
add
dec
and
inc
out
icebp
sub
or
xchg
add
adc
dec
jl
adc
cmp
add
push
scas
xor
out
in
outsl
cmp
or
cmp
ds
pop
cmpsb
pop
inc
je
sub
inc
and
outsb
repz
mov
add
je
cltd
sub
shll
inc
add
xor
outsl
fdivl
add
xchg
sub
cmp
or
scas
dec
mov
in
cs
fcompl
cmpsl
lods
dec
mov
pop
inc
movsl
jne
add
js
into
cmp
leave
add
dec
int
add
test
add
adc
cli
out
cmp
pop
dec
ret
push
scas
jo
xchg
adc
subb
add
aam
lds
mov
jge
lea
mov
jno
scas
and
push
cli
add
push
rcrb
jns
pop
scas
add
xchg
jb
sbb
cmp
test
jl
addl
rorb
enter
in
js
sahf
cmp
into
dec
or
or
repnz
jg
fdivrp
cltd
xchg
movsb
aas
sub
add
add
add
mov
push
push
or
inc
push
aas
add
iret
xor
cmp
lret
add
ljmp
add
cltd
fdivrs
out
filds
pop
cmp
or
sub
adc
mov
push
lock
pop
ja
mov
cmp
sub
or
ja
or
aas
cli
cmp
adc
cmpsl
jg
js
roll
leave
mov
mov
dec
dec
or
jge
xchg
xchg
lds
cmp
xor
std
inc
lcall
rcrb
pushf
pusha
loope
sub
mov
xchg
mov
pop
or
fldcw
xchg
int3
rclb
in
push
mov
sub
jp
pop
movsl
arpl
xchg
cwtl
mov
pop
pop
or
aas
cmpsl
sbb
sti
and
les
sar
sbb
and
and
add
sbb
stc
testl
js
std
movsb
cltd
cmp
scas
and
push
or
divl
fistpl
or
je
inc
jmp
stc
xor
fildl
pop
mov
pusha
xor
ds
push
xor
outsb
cmp
cmpsl
mov
and
movsb
arpl
fs
add
rcl
cmp
mov
popf
xor
push
int
mov
or
xchg
ds
cmpb
jbe
jp
xchg
or
cmpsl
daa
mov
test
insb
add
push
gs
xchg
jb
push
ret
add
movsb
orb
ret
cmp
mov
xor
or
fistpl
inc
stos
jbe
imul
push
out
jmp
pushf
push
push
sub
shr
push
push
lahf
scas
mov
pusha
sbb
in
cmp
jmp
lods
push
push
mov
or
imul
fnstenv
in
es
jp
sbb
xor
into
add
mov
mov
lea
and
ljmp
and
stos
pop
and
pop
jnp
xor
in
es
cmp
adcb
inc
jecxz
lret
xchg
cmp
mov
add
sbb
ja
pop
lret
jp
mov
popf
in
shrl
adc
inc
jnp
xchg
out
std
jmp
out
ret
mov
adc
sub
jl
adcb
and
push
jp
cld
rcrb
pop
xchg
in
loope
aaa
add
outsb
and
sub
out
loop
xor
nop
rcll
sub
cmp
inc
out
cmp
fnsave
daa
repnz
mov
shll
mov
mov
es
inc
dec
pusha
or
arpl
jp
adc
dec
fs
jp
addr16
std
pushf
fwait
lds
inc
sbb
adc
out
xchg
sbb
add
imul
ljmp
or
jmp
subb
popa
cmp
test
jnp
push
dec
push
xor
fs
jmp
xor
or
dec
testl
sub
xchg
xor
add
cltd
roll
adc
xchg
dec
mov
xchg
jns
add
cmp
movb
mov
cmp
jne
fistpll
test
or
adc
cmpb
test
ficompl
jle
insl
adc
xchg
adc
popa
cmp
or
add
arpl
sub
sbb
dec
sub
mov
push
daa
pop
repnz
xchg
jo
dec
fisttpll
cmp
xor
stos
add
add
iret
pop
and
icebp
add
cmc
or
or
add
clc
data16
into
lret
aas
jo
pop
sbbl
pop
sbb
inc
add
fdivrl
movsb
call
aas
sub
arpl
add
cmpsl
pop
cwtl
ret
and
cmp
xchg
xchg
add
xor
mov
push
pusha
pop
dec
roll
xchg
dec
and
adc
cs
cwtl
push
xor
push
cmp
lock
add
scas
sbb
xchg
popa
inc
jb
push
pop
push
sub
dec
add
jo
mov
add
jno
std
popa
cwtl
xchg
mov
repnz
mov
lahf
mov
cmp
xchg
nop
in
rorl
pop
xchg
push
inc
sti
sbb
push
call
mov
cli
jge
push
inc
test
cld
shll
xor
xor
cli
js
mov
sbb
out
mov
mov
xor
cmpsb
mov
cli
dec
push
sub
jle
rcll
js
adc
scas
rclb
lahf
outsl
add
xchg
xlat
sub
inc
fwait
pop
push
mov
inc
dec
mov
cltd
dec
cmp
jle,pt
daa
ljmp
add
scas
adc
ja
lahf
mov
push
add
frstor
mov
xlat
out
sub
mov
add
stos
inc
repnz
xorb
add
pop
es
mov
xchg
add
mov
imul
sahf
js
outsl
addr16
push
inc
mov
sbb
pop
arpl
gs
push
cmpsb
daa
jbe
pop
aaa
xor
pop
ljmp
sti
mulb
lods
or
fxch
mov
pop
fnstsw
cltd
and
out
cld
addr16
loope
cmp
jns
xchg
xor
clc
rolb
lcall
das
add
mov
enter
aas
add
in
xor
sub
shl
xchg
pop
jmp
xchg
jae
nop
test
testl
and
add
gs
cmp
fmul
lret
xchg
jnp
into
push
pop
mov
and
fiadds
lahf
push
inc
pop
pop
mov
aas
inc
movsb
cmp
push
lret
pop
xorb
xchg
jne
bound
adc
paddusw
and
and
mov
sub
mov
loopne
add
repnz
jo
push
and
push
shl
lds
pop
mov
rol
mov
outsl
bswap
or
add
mov
cmp
fistl
ss
cmpsb
sahf
pop
jne
imul
scas
aam
inc
negl
sbb
dec
iret
fsubrs
jbe
xchg
sub
and
punpckhdq
rolb
mov
leave
inc
roll
and
in
int3
rolb
jo
push
je
add
add
mov
push
push
les
inc
mov
push
fnstenv
mov
pop
sar
sbb
cmp
xchg
ds
jns
cmp
add
pop
fisttpll
or
sub
pop
lock
adc
and
inc
es
mov
sub
int3
arpl
xor
sahf
adc
sub
add
dec
incb
add
rcl
hlt
cs
lea
inc
cmpsb
push
jmp
popa
jne
add
mov
or
inc
outsl
add
xor
inc
lcall
test
fstps
shrb
push
scas
jecxz
mov
jp
add
pushf
call
push
addl
inc
shll
inc
js
jnp
or
loope
add
jecxz
sbb
adc
divl
mov
ljmp
call
xchg
mov
out
movsb
in
mov
add
sbb
jns
aam
mov
add
in
in
roll
mov
subb
test
jae
pop
fldt
add
jecxz
sub
dec
loop
sub
fnstenv
add
out
cmpsl
dec
shl
lods
add
sbb
enter
xorl
ret
add
aas
iret
add
sub
pop
push
insl
add
adcl
fs
movsl
imul
pop
cmp
es
xor
popa
add
fyl2x
sbb
mov
add
call
test
sub
sbb
push
lahf
add
stos
shll
xlat
mov
sub
push
adc
pop
aam
add
pop
repz
lods
jg
push
push
lea
inc
into
xlat
out
and
gs
cmpsl
int3
aam
add
mov
cmp
sbb
mov
or
mov
clc
pop
push
add
imul
lock
add
add
pop
cmp
pop
test
inc
dec
sahf
add
fcoms
adc
ret
add
lods
and
push
push
sub
and
out
imul
add
in
inc
sbb
jp
mov
cwtl
clc
xchg
pushl
add
mov
std
adc
mov
push
ss
jp
pop
add
dec
mov
fisubrs
repz
add
push
inc
sahf
lea
pop
aas
popa
mov
push
adc
arpl
pop
or
xlat
subl
sahf
cmpl
cmp
and
or
ret
fidivl
add
xor
cmp
jnp
sub
and
cld
ret
adc
rcrl
fcoml
jno
xor
fldenv
ret
xchg
and
movsb
and
iret
jge
add
push
pop
orl
ret
dec
cmc
xor
cmp
mov
inc
orl
ret
fidivrs
enter
cmp
push
sbb
pcmpeqd
add
aad
mov
and
jns
push
mov
inc
andl
sarl
cld
cmp
insb
xchg
add
test
cmp
into
std
and
dec
or
mov
add
jnp
stc
adc
push
mov
and
adc
or
aam
add
add
dec
daa
jns
hlt
xchg
push
pop
fistpll
push
pop
sub
icebp
pop
incl
jl
test
pusha
add
adc
inc
cmc
inc
pop
mov
add
outsl
pop
xchg
lock
sub
sbb
out
sti
gs
cmp
cmc
decb
add
cli
mov
xchg
add
cs
xor
mov
push
xor
iret
mov
jns
rcrl
jnp
aad
fprem1
shrb
pop
add
cmp
repz
fiaddl
jno
and
pop
test
sbb
push
inc
in
adc
std
inc
add
aam
push
adc
mov
add
jecxz
inc
adc
movsb
pushf
jb
push
xchg
cmp
push
mov
or
mov
inc
pop
ret
sub
int
add
js
inc
xchg
sbb
loope
out
sbb
jecxz
xor
fidivs
sahf
fcoml
and
pusha
or
push
add
enter
repz
add
mov
movl
sbb
cmpsb
aam
in
push
cmc
or
pop
add
pop
adc
mov
roll
sbb
fld
shll
and
and
stos
push
popf
pop
cmp
sub
scas
les
sahf
add
std
and
jmp
movsl
loope
imul
push
aad
mov
push
inc
add
addl
adc
popf
or
movsl
add
scas
fbld
shll
fiaddl
mov
lock
jle
add
dec
pushf
jmp
add
scas
sub
add
jo
jg
stc
add
adc
jp
add
or
or
xchg
mov
adc
mov
add
adc
lahf
test
dec
lcall
add
test
les
inc
jnp
in
jne
enter
sbb
test
dec
insb
mov
sar
inc
inc
jne
lret
les
arpl
pop
shl
fldt
jge
outsb
scas
rorb
ret
and
pop
fildl
and
andl
xchg
sbb
cmp
and
outsl
sti
xchg
push
repnz
sbb
mov
cmpsb
sarb
stos
push
fildll
je
jmp
and
inc
dec
adc
jp
mov
xchg
out
or
pop
pop
and
or
les
sbb
mov
mov
sbb
xor
sbb
jp
adc
pusha
sbb
lock
scas
xchg
xchg
scas
and
addb
rorb
pop
gs
repnz
mov
add
jae
mov
sub
sub
daa
rcl
ja
cmp
das
sti
cmp
arpl
orb
or
loopne
aas
lahf
jle
mov
and
cld
aad
out
pop
mov
cmc
mov
add
loop
pusha
test
push
lods
shll
add
pop
and
cmp
loopne
mov
add
and
out
cmp
xchg
or
cwtl
int3
xchg
or
sahf
sahf
mov
sbb
in
call
ret
mov
pop
add
push
push
xlat
sbb
jmp
mov
leave
push
idivl
and
daa
push
shlb
mov
mov
mov
dec
in
scas
or
imul
sub
movsb
or
dec
and
lea
cli
loopne
xor
jo
nop
and
sbb
popa
add
or
dec
xor
loopne
int3
cmp
fstps
mov
mov
add
push
ss
int
rolb
xlat
pushf
mov
je
push
add
sub
add
fsubs
inc
gs
cmc
add
push
jmp
mov
jecxz
rorl
out
pushf
inc
jae
test
scas
xor
mov
cmpl
and
inc
mov
xor
repnz
xor
leave
add
jno
sti
push
cmp
ret
lret
movsb
sbb
push
inc
dec
rolb
sbb
repz
clc
insl
mov
pop
mov
in
push
xlat
popf
sub
faddl
negb
in
add
and
insb
and
pop
iret
inc
mov
pop
xor
aam
in
adc
movsl
mov
push
mov
sub
sub
ret
adc
add
fwait
mov
cmp
in
pop
addr16
cwtl
or
push
add
mov
ja
subb
push
mov
aas
inc
sub
sbb
xor
cmp
lahf
mov
mov
lret
imul
mov
rcll
pop
fwait
add
sbb
mov
repnz
jbe
fwait
rcr
adc
mov
cli
push
xchg
or
sbb
cmpsl
add
cmp
stos
jo
inc
add
jmp
mov
hlt
fadds
and
or
inc
add
repnz
xlat
sarl
call
sbb
not
iret
pop
mov
sub
es
add
imul
add
or
sahf
pop
add
inc
aas
shlb
pop
mov
dec
outsb
push
pop
pushf
jecxz
pusha
inc
push
adc
or
sbb
leave
mov
add
lock
pusha
outsl
cmpb
popa
fidivrs
pop
sub
jbe
add
push
inc
adc
cld
xchg
jle
dec
iret
sub
adc
mov
sahf
pop
dec
add
adc
mov
dec
cmp
jl
dec
pop
test
addl
sub
sub
pop
add
sub
mov
mov
add
pop
jns
rcl
lods
ret
ret
push
pop
mov
iret
jb
daa
adc
popf
add
incb
push
pop
and
add
inc
cmp
add
jg
out
jae
xchg
ss
xor
mov
fs
shlb
add
jl
add
xchg
or
cmpb
fldcw
adc
aam
adc
shlb
fbld
add
and
cli
mov
gs
sub
xor
mov
mov
js
sub
loopne
rolb
inc
stos
sub
inc
mov
push
popa
add
or
adc
in
out
fisubrl
push
aas
add
or
mov
mov
pop
and
je
mov
enter
jne
push
xor
and
xor
ss
fs
dec
cltd
mov
add
in
mov
adc
ret
adc
imul
imul
addr16
mov
mov
jnp
lahf
outsl
push
cld
and
push
inc
outsb
adc
sbb
in
aas
ljmp
rcll
bound
repz
into
insl
jle
enter
sub
repz
std
mov
in
int3
lods
xor
fistpl
ffree
adc
jno
dec
xor
insl
xor
lret
out
sub
ret
scas
xor
mov
out
decl
lods
mov
popf
hlt
adc
pop
push
and
cld
aaa
cmpsl
bound
xor
aad
int3
inc
frstor
adc
rclb
cmp
xor
sub
and
lods
outsl
mov
sub
cmp
sub
or
pop
gs
cmpsb
ret
mov
loop
or
cmp
clc
popa
add
fwait
out
mov
data16
jecxz
js
test
or
xor
arpl
pop
stc
pop
push
orl
test
and
xchg
popl
enter
mov
mov
insl
adc
in
repz
pop
mov
sub
xor
and
sbb
mov
and
repz
aam
lods
sbb
out
mov
xlat
cmp
xchg
inc
jg
cmpsl
mov
sub
xchg
lea
add
aam
flds
je
mov
cmp
js
rcll
mov
xchg
xchg
jg
aas
adc
mov
push
clc
inc
sbb
cmpb
push
jae
add
jle,pn
pop
dec
sahf
es
xchg
push
xor
or
push
jno
pop
outsb
jmp
or
sbb
andl
fs
inc
xor
sahf
pcmpgtb
add
lret
jl
sub
sbb
push
jae
in
pushf
test
dec
loope
dec
les
insb
sub
add
shlb
cmp
cmc
pop
sbb
lahf
test
std
sbb
rclb
xor
mov
mov
add
add
sarl
test
xchg
scas
pusha
xlat
dec
mov
and
mov
xor
jns
mov
dec
cmc
jl
sahf
mov
test
loope
sub
fidivrs
or
cltd
jp
push
pop
cs
popa
subl
call
pusha
dec
into
mov
xchg
cmpsb
cmpl
stc
test
movsb
add
nop
jp
hlt
in
cmp
sarb
mov
lret
aad
mov
push
aad
mov
mov
lods
sbb
lcall
mov
iret
ret
push
bound
test
sbb
ss
cmp
and
and
jp
cmpsb
jmp
decb
roll
sbb
movsb
les
xchg
mov
add
pop
cmp
inc
and
inc
ror
add
jae
fiaddl
jp
js
daa
movsb
jnp
push
sub
xchg
cmp
loopne
jp
inc
add
jecxz
xchg
cli
lods
pusha
sbb
mov
arpl
sub
addr16
or
inc
or
adc
les
jae
cmp
push
push
mov
pop
adc
xor
ljmp
mov
inc
mov
ja
xor
push
movsb
xor
addr16
dec
pushf
push
and
lahf
mov
stos
xchg
nop
jg
es
mov
leave
mov
pop
mov
imul
mov
jle
out
adc
xchg
lahf
and
daa
xchg
div
and
push
outsb
jp
mov
int
xor
pop
addr16
cmp
enter
sub
mov
fnop
out
fs
out
int3
xlat
lahf
inc
dec
jo
cmp
push
and
and
add
stos
xchg
cli
xor
dec
jmp
fninit
cld
cmp
xchg
and
cmovge
outsb
test
mov
push
int3
jge
jp
add
leave
pop
or
mov
and
cmp
lock
lea
sub
xor
popf
lock
addr16
and
mov
sbb
add
lahf
lcall
xlat
add
stos
insl
push
std
loopne
add
cmp
xchg
jecxz
shr
fsubl
add
mov
fdivs
or
and
add
or
xor
push
sahf
mov
adc
cwtl
and
push
xchg
sbb
ja
stc
lea
and
push
idivb
imul
jo
xor
push
add
nop
xchg
cmp
rolb
pop
es
scas
mov
mov
pop
xchg
add
pusha
iret
je,pn
mov
lcall
test
mov
popf
dec
add
push
nop
jno
fistps
shrl
pop
ss
add
mov
cmc
pop
lcall
xchg
xchg
xor
ficoml
xchg
flds
add
cmpsl
rolb
shrb
dec
sub
jnp
jecxz
sub
push
aas
mov
xor
or
loop
or
dec
xor
stos
std
das
lods
lcall
pushl
sbb
ficomps
hlt
scas
sbb
inc
push
mov
add
xlat
lahf
jle
xor
lock
push
mov
inc
movsl
xor
jg
andl
mov
mov
in
leave
jl
cmp
jg
fadds
sbb
add
mov
sbb
ret
pop
mov
sahf
sahf
pusha
loope
ficoms
mov
push
adc
or
inc
js
pop
mov
cmc
or
dec
arpl
add
pop
fwait
dec
pop
cmp
or
inc
pop
add
or
and
adc
shrb
ret
ss
dec
test
mov
js
rolb
and
mov
pop
add
hlt
pop
jle
lret
into
cli
lahf
add
sub
cwtl
adc
repnz
std
xor
hlt
adc
inc
push
sub
push
or
filds
add
cmp
xor
push
lcall
sti
xchg
loopne
data16
push
popf
hlt
negl
addb
jg
pop
xchg
fwait
sub
add
into
sarb
iret
cmc
mov
repnz
pop
push
dec
add
and
fstps
icebp
inc
aam
xor
loop
jge
dec
dec
jmp
xchg
ret
add
in
xor
sub
sahf
testb
fwait
inc
push
pop
adc
pop
inc
test
dec
mov
fnstsw
and
adc
test
and
daa
incb
lods
and
roll
das
sbb
push
test
inc
in
mov
hlt
pop
lcall
add
das
jno
pop
or
in
mov
outsb
and
add
fbld
popa
mov
pop
push
insl
hlt
and
xor
das
enter
sub
fcoml
sbb
add
fmuls
add
testl
repnz
inc
in
nopl
mov
jns
insb
je
aam
cmp
das
pop
and
mov
add
loopne
add
int
fnstsw
movsl
sbb
lds
inc
mov
cmpsb
adc
sbb
lret
mov
xchg
shr
js
adc
xor
pop
lods
push
scas
rcll
fnsave
add
stc
inc
add
mov
add
cwtl
dec
roll
push
out
scas
cmp
inc
mov
mov
mov
mov
pop
add
add
push
mov
sahf
add
mov
loop
movl
pop
add
sti
ljmp
jmp
pop
push
in
repz
jmp
test
pushl
divb
xchg
aaa
pop
xor
push
jg
cmpsb
add
movsl
clc
adc
cltd
fildl
jne
mov
add
push
pop
mov
outsb
pop
jo
mov
insb
inc
test
stc
xorb
add
loop
sarb
lret
rcl
cmpsb
stos
jmp
popf
stos
iret
mov
sub
pop
and
in
cs
cwtl
mov
sarl
lret
je
and
xor
add
cs
ret
stc
xchg
push
sbb
mov
imul
enterw
jno
inc
nopl
dec
inc
popf
leave
jmp
push
rorl
mov
cmp
out
or
add
mov
sub
push
sub
add
ljmp
and
out
loop
rorl
xchg
cwtl
push
mov
push
int
push
lds
rorl
pop
mov
imul
repnz
xlat
es
outsb
pop
iret
dec
inc
adc
mov
add
movl
and
dec
aaa
mov
outsl
jmp
sub
push
mov
dec
pop
adc
add
inc
and
dec
inc
ljmp
and
dec
int
dec
pusha
sub
push
and
cmp
es
pop
inc
and
repnz
outsb
add
add
int
cmp
jno
lret
testl
pop
adc
jo
pop
cmp
inc
inc
lods
and
pop
pop
add
xchg
jmp
add
inc
and
lods
imul
ljmp
inc
pop
movl
mov
out
add
mov
popa
and
dec
in
mov
add
out
and
jle
test
add
bound
mov
fldt
add
mov
xor
sub
add
in
cmpsl
rorb
and
pop
jp
add
maxps
insb
repz
das
addl
mov
incl
aaa
imulb
fldpi
pop
sbb
add
popw
sub
mov
movsb
push
or
pop
sbb
gs
aad
fcom
mov
mov
adc
jl
dec
xchg
aas
orl
mov
in
pop
iret
roll
mov
out
lret
aaa
incl
jb
mov
add
dec
fistl
xor
and
ljmp
int3
mov
mov
mov
lret
adc
sbb
subb
fstl
dec
push
roll
mov
push
lahf
cmc
add
or
addr16
jb
mov
adc
je
mov
add
aam
add
rcr
or
add
sbb
jne,pn
dec
dec
jns
add
inc
cmpsl
mov
add
mov
popf
scas
xchg
mov
add
or
cld
sarl
mov
and
pop
ja
leave
mov
divb
xor
jg
bound
fldt
filds
rclb
cmp
mov
lahf
cmpsl
test
imul
inc
out
test
ds
mov
mov
cmp
jmp
xchg
mov
mov
aad
shl
add
or
mov
xlat
xchg
add
lds
dec
sub
cmc
inc
into
or
and
add
ret
rol
loop
cmp
xchg
subb
adc
jb
cmp
adc
cs
mov
xchg
inc
ja
test
cmp
movsb
mov
sub
sub
popf
mov
pusha
sbb
xchg
or
jl
xor
pop
xor
xor
push
ret
ljmp
sub
inc
push
sbb
je
add
rorb
or
inc
inc
push
cwtl
or
add
push
pusha
aaa
ljmp
add
rol
test
add
out
adcl
je
add
leave
xchg
push
in
add
outsl
jp
add
aaa
shll
push
andl
push
pop
mov
repnz
jo
dec
sbb
add
cltd
xor
aam
pushl
mov
str
cmp
push
add
xchg
divb
lods
mov
mov
xchg
mov
lcall
push
jnp
sub
add
cmp
popf
xchg
iret
mov
dec
jl
out
adc
xor
aas
add
push
movsb
hlt
sbb
hlt
mov
mov
scas
inc
cs
filds
imul
nop
mov
dec
test
push
dec
cmpl
cmc
clc
lock
push
cltd
sbb
xchg
dec
lds
add
test
cmp
push
loopne
repz
sahf
test
jg
mov
cmp
sbb
jmp
arpl
sbbb
inc
add
jne
dec
mov
pusha
lret
cmp
andl
adc
inc
add
test
sbb
lcall
inc
sub
mov
je
push
dec
mov
and
iret
movsl
adcb
std
loop
rcl
dec
idivl
xchg
leave
add
cld
or
sbb
movsl
iret
bound
pushf
shrb
je
xchg
pop
mov
lret
outsl
sub
add
rclb
mov
mov
add
jae,pt
test
xchg
inc
xor
inc
xchg
sub
add
filds
pushf
and
add
pop
lcall
mov
push
scas
call
loopne
or
add
test
outsl
push
scas
jge
and
icebp
xchg
and
cmp
sub
xchg
pushf
movb
daa
gs
xchg
mov
ss
sbb
bound
push
sbb
ja
mov
adc
mov
pop
std
mov
add
adc
pop
cs
xor
mov
inc
jo
xor
add
mov
insb
outsl
push
clc
and
int3
add
mov
jno
mov
push
insl
clc
pop
mov
xchg
repz
or
sbb
ret
add
fists
add
mov
add
out
jns
cmpsl
aaa
sahf
roll
loopne
add
push
pop
jge
filds
push
push
lods
lret
mov
fidivrs
arpl
fisttps
adc
mov
xchg
jle
movl
add
aaa
clc
jge
or
in
add
test
vorps
mov
es
dec
dec
mov
mov
ja
fistps
xchg
mov
lods
adc
cmp
inc
enter
push
shrl
xchg
loop
add
xchg
jle
cli
add
sub
jne
jmp
inc
mov
jno
jnp
add
xrelease
or
add
xlat
ret
sub
xchg
out
push
and
sub
cmp
es
fdivl
clc
mov
lcall
xor
and
insb
add
jnp
in
inc
loop
sbb
ds
popl
mov
ret
ret
jbe
ficoms
in
or
push
add
mov
inc
mov
add
push
popf
sub
add
jle
or
scas
or
pop
mov
pusha
cwtl
int3
mov
les
sbb
in
pusha
jb
cld
dec
imul
aas
xor
fldl
ds
movsb
pop
lret
cmp
adc
inc
andb
aaa
out
popf
xor
push
mov
add
jl
add
scas
jge
fwait
daa
cmc
pop
dec
add
shlb
xchg
popa
fidivrs
inc
xor
imul
pop
xchg
sbb
arpl
mov
and
repnz
aad
push
call
dec
mov
addr16
fdivs
push
hlt
loopne
pop
fistps
cmp
cmpsl
rorb
add
outsl
mov
add
notb
add
popa
pop
lea
cwtl
xchg
jmp
sbb
stos
xor
mov
pop
loopne
ret
es
stos
jno
mov
clc
dec
out
pusha
lods
xchg
fwait
jle
mov
ljmp
ret
sub
nop
data16
rorb
aam
push
sbb
and
out
pop
lods
addb
xor
jb
add
daa
push
imul
aas
fimuls
add
sahf
call
fwait
shrl
repz
pusha
hlt
add
imul
shrb
adc
adc
xchg
xor
insl
add
inc
cmp
or
pop
add
sbb
fsub
rol
sahf
jb
fsubrl
mov
bswap
sub
inc
or
jle
cmp
push
inc
push
or
cmp
sbb
or
adc
mov
dec
mov
add
add
xchg
add
pushl
pop
sbb
add
loope
addb
iret
pop
push
sub
cmp
mov
add
inc
dec
repz
mov
out
adc
add
shll
jnp
ds
jbe
xchg
cli
and
ss
imul
jns
scas
into
fcompl
or
sub
xchg
lods
jle
xorl
mov
test
add
push
inc
in
cmp
popf
shll
sbb
lds
and
loope
push
adc
inc
xor
stos
lods
xchg
daa
sbb
int
pop
add
pop
xchg
out
sub
sub
dec
jmp
rcl
xchg
push
jnp
ds
movsl
fsubl
lret
scas
iret
icebp
sbb
fbstp
xchg
dec
push
push
jge
outsb
lret
sub
add
cmc
mov
cmp
xchg
sbb
loopne
sbb
add
pop
repz
ds
push
pop
xchg
xor
inc
imul
xchg
bswap
imul
cmp
icebp
rclb
inc
lods
popf
and
mov
inc
mulb
and
fstpt
mov
pusha
std
jnp
push
mov
xor
add
xchg
mov
stc
lock
mov
xchg
aad
mov
add
pop
sub
pop
cmpsl
xor
xor
pop
cmpsb
jne
lcall
jbe
adc
ljmp
xor
mov
xlat
lahf
add
xchg
cld
and
hlt
enter
jecxz
lahf
cmp
push
jbe
add
xchg
add
push
xchg
mov
dec
aaa
cmpsb
mov
cmp
cwtl
jl
int
add
pushw
sub
fistps
jb
into
inc
or
push
sbb
jnp
popa
arpl
mov
cmp
and
lret
into
mov
and
inc
adc
xchg
int3
outsb
mov
ret
add
add
aas
icebp
enter
add
sahf
movsb
lock
ret
mov
add
add
out
ds
pushf
stos
mov
cli
add
out
cmp
into
mov
mov
adc
mov
add
and
pusha
imul
daa
jmp
test
adc
dec
mov
pop
enter
or
rcr
xor
lods
js
pushf
rcrl
jbe
jae
mov
int
and
leave
aas
pushf
inc
lods
pop
nop
add
jo
fnstsw
cli
cmpsl
xchg
out
or
inc
bt
jnp
loope
mulb
dec
jge
lcallw
movl
dec
test
hlt
add
xor
jbe
mov
mov
adc
mov
add
pop
sbb
shlb
and
dec
flds
push
fsubrl
out
in
jbe
and
cmpsl
dec
add
mov
cld
add
inc
pop
dec
daa
cltd
add
rolb
push
xor
sbbl
inc
xchg
add
inc
push
jb
add
stc
adc
cmpsl
xchg
sub
add
bound
sub
pop
ud0
outsb
cmpsb
mov
xor
or
fs
xchg
mov
mov
cld
jb
fldl
lea
add
pop
adc
insl
bound
mov
aad
leave
pusha
call
daa
ror
add
mov
loopne
mov
cli
ret
ljmp
mov
jo
subb
pop
add
pop
and
movsb
inc
mov
xor
mov
cltd
nop
movb
cmp
push
mov
fwait
add
inc
out
jne
inc
icebp
les
push
mov
ret
lock
dec
and
xchg
jns
loop
mov
sbb
loopne
pop
adc
nop
xor
xorl
cmpsl
mov
add
aaa
xor
cli
mov
addr16
lock
mov
xchg
mov
sub
xor
test
push
add
popa
dec
cmp
cld
add
push
jbe
imul
sar
shrl
lahf
popf
test
sub
lods
xchg
fbstp
aas
pop
test
and
imul
push
add
and
xchg
mov
aam
ds
sbb
and
repz
lahf
push
push
dec
rorl
cmp
add
fwait
adc
js
jg
and
fistl
pop
cmpsl
mov
mov
mov
push
mov
dec
lcall
jno
into
sbb
adc
inc
pop
add
loope
dec
test
sarl
pop
cmp
cmpsl
subl
and
inc
movsl
mov
std
jno
les
cmc
xor
fisubrl
es
add
bound
jmp
mov
mov
iret
push
mov
aad
xchg
bound
mov
mov
pop
adc
xlat
insl
imul
ret
pop
shrl
mov
sbb
mov
cmp
test
movsl
push
lcall
pop
das
insl
mov
lock
cltd
test
and
ds
out
aas
ret
add
add
sub
xor
xorl
add
xchg
andb
push
push
repnz
and
and
cmc
push
cltd
add
xor
lret
cmp
pop
outsl
aas
mov
mov
mov
adcb
jne
movsb
pop
jle
adc
jbe
jg
fsts
xor
jp
pop
addb
dec
loop
cmc
popa
outsl
inc
dec
js
inc
mov
daa
mov
xchg
sub
adc
daa
add
jae
cmp
insl
insl
xchg
push
add
scas
mov
inc
mov
inc
sbb
inc
mov
push
push
mov
or
mov
add
sbb
arpl
and
rolb
cmp
subb
les
and
out
jo
xlat
push
add
jae
jp
and
dec
cmp
push
jle
outsl
es
int
imul
aas
adc
add
sub
mov
fs
adc
adc
nop
fmull
sti
sub
push
in
clc
popf
rolb
add
mov
iret
jnp
adc
flds
xor
jecxz
lds
lret
popf
shlb
shr
imul
pop
or
cmp
frstor
pop
adc
bound
sbb
cmp
jle
lods
sti
xchg
xlat
mov
inc
jp
outsb
inc
mov
sbb
add
popf
mov
sahf
repnz
out
test
fisttpl
pop
push
sub
stc
scas
andb
hlt
pop
ret
and
in
add
fsubrs
jge
movsl
dec
push
jmp
std
adcl
push
and
incb
sbb
arpl
repnz
imull
sbb
adc
movsl
out
cmp
lods
xchg
fs
movsb
adc
ja
or
jbe
orb
push
sbb
imul
mov
adc
sarl
adc
loope
adc
inc
arpl
shll
cmp
les
cld
std
push
cmc
mov
cmp
rcrl
lods
nop
add
add
mov
cli
sbb
insb
adc
jb
shrl
int
aam
cmp
inc
incl
push
jle
andl
jns
sub
xor
adcb
loope
adc
cmp
adc
xlat
adc
jp
int
outsl
cmp
add
sub
bound
xor
add
test
xchg
xor
or
and
adc
sbb
push
bnd
shrl
adc
scas
dec
jo
stc
xchg
mov
test
fisubs
push
stc
pop
add
push
push
jbe
testl
cld
add
pop
inc
fs
out
pop
mov
in
or
lds
test
dec
adc
div
lcall
xor
mov
shr
outsl
shl
stos
loopne
cmp
mov
mov
and
jle
jo
inc
jb
add
rcl
adc
adcb
jg
mov
into
xchg
movsb
inc
shl
add
daa
or
sbb
fwait
mov
sub
flds
push
scas
les
push
add
and
nop
adc
jbe
aaa
mov
sbb
lods
sbb
arpl
cwtl
fdivrp
addl
and
mov
dec
or
scas
adc
and
lcall
lea
dec
rep
mov
es
mov
les
push
push
loope
ret
out
xor
mov
lcall
dec
add
rorl
push
subl
push
sbb
into
pop
push
js
inc
sub
dec
ret
iret
mov
daa
sub
test
data16
mov
xor
pop
js
inc
inc
stc
aad
add
ja
push
push
cmp
cmp
insb
lock
xchg
and
add
xor
inc
pop
lods
icebp
inc
cli
sbb
add
data16
cmc
loop
mov
in
jecxz
inc
fldt
shll
xchg
cmp
dec
loop
adcl
inc
dec
sub
imul
stos
add
shrl
maskmovq
mull
mov
rcl
out
and
hlt
push
add
xchg
push
lods
pop
call
cmp
int3
nop
scas
sub
add
clc
test
jecxz
mov
ljmp
sbb
add
outsl
insb
xchg
fdiv
cmc
popf
add
mov
stos
add
sub
shll
addl
nop
insb
sub
add
and
cmp
mov
push
aas
pop
cmp
mov
inc
xchg
ss
dec
adc
cmp
out
and
sub
mov
mov
cmp
aaa
xor
aam
add
inc
imul
adc
test
pop
cmpsl
movsb
lock
add
dec
lahf
lods
pop
popf
jp
push
ret
xchg
mov
and
and
scas
fistps
cwtl
xor
mov
addr16
and
out
rol
mov
sbb
jg
push
cmp
cmp
adc
push
or
jb
call
lods
fldl
lret
inc
jle
pop
imul
mov
stos
outsl
je
push
add
adc
cld
leave
call
xor
or
or
aam
adc
mov
cmpsl
add
mov
std
orl
push
mov
xchg
fwait
dec
mov
pusha
push
or
inc
add
xchg
popf
ret
int
addr16
mov
push
cmp
push
inc
add
loopne
add
out
cmpsb
add
mov
mov
mov
add
lods
push
loop
xchg
movsb
mov
rorb
fcoms
popa
and
ljmp
pop
fsubrl
dec
mov
cwtl
ret
jne,pn
jge
aas
push
js
add
adc
jmp
clc
mov
mov
decb
fsubl
adc
jb
dec
and
dec
mov
dec
adc
aas
popl
xchg
mov
stos
js
xor
std
sub
sbb
push
and
shrl
sarb
add
cmp
std
gs
sub
lds
hlt
loope
fstl
add
dec
les
insb
add
fbld
ret
push
add
adc
sub
push
sbb
ss
pop
testl
pop
rcrl
dec
cmp
cmp
cmpsb
lcall
mov
or
add
push
adc
mov
sbb
add
adcb
jle
sub
mov
add
fninit
insl
loop,pn
hlt
mov
and
adc
shll
test
fimuls
cmp
or
mov
test
gs
sub
add
in
int
mov
pushf
add
ss
iret
inc
nop
sbbb
push
pop
dec
add
lahf
sbb
int
mov
dec
mov
sbb
cltd
dec
and
aam
test
inc
int
mov
xchg
scas
dec
mov
jno
ret
mov
sbb
add
mov
add
icebp
addl
mov
ficoms
push
enter
jg
xchg
dec
pushw
iret
loop
mov
jnp
fildl
mov
rcrl
movsl
mov
outsb
roll
xchg
push
pop
cmp
pop
add
imul
faddp
pop
and
jmp
sub
rolb
repnz
fiaddl
dec
pop
or
mov
mov
cmp
cmpsl
add
cmp
ret
add
mov
sub
xchg
inc
mov
or
scas
push
mov
add
mov
adc
loope
icebp
out
adc
jmp
add
mov
push
sub
push
out
cmp
flds
fsubs
outsl
inc
mov
xor
rclb
scas
jmp
dec
pop
xor
add
int3
and
push
icebp
inc
leave
add
sbb
imul
cli
lods
stos
xchg
jns
pop
dec
pop
int3
pop
ret
add
mov
fnsave
test
out
in
flds
loope
inc
xchg
movsl
push
pop
stc
add
push
hlt
mov
aaa
fs
add
je
add
xor
jnp
xor
icebp
ljmp
and
add
out
xor
out
lcall
add
or
mov
add
lds
es
mov
addl
xor
stos
or
cmp
and
sub
sbb
xor
inc
add
mov
inc
mov
lea
adc
pop
add
mov
enter
rcl
mov
stc
push
call
sub
add
adc
sbb
add
jno
insb
pusha
cmpxchg8b
std
adc
stc
icebp
fcmove
cmpsb
add
repz
add
roll
mov
jo
sti
xor
xor
sub
fadds
add
lret
pop
loopne
int
shlb
ss
outsb
pop
cwtl
sub
fsubrp
add
mov
jge
sbb
enter
xchg
inc
call
mov
lock
sbb
sub
jne
dec
dec
add
and
adc
mov
pop
add
iret
add
testl
cmp
adc
stos
mov
inc
add
adc
dec
jmp
lret
into
pop
jb
cs
cmp
fmuls
and
roll
scas
cmp
push
pop
test
push
push
add
stos
out
adc
out
inc
movb
and
in
add
movsl
xor
add
rorl
add
ret
cmc
je
aas
icebp
out
adc
ds
incl
inc
pop
mov
lea
add
jmp
add
movsl
push
imul
ds
and
add
inc
xor
jle
lret
pop
out
pop
jno
add
faddl
les
cmpsl
xchg
or
pusha
push
add
cld
mov
je
and
xchg
stos
out
adc
orb
stc
lret
dec
adc
mov
jno
jmp
paddusb
add
mov
daa
cmpsb
aaa
pop
fcmovb
fldl
dec
jnp
shrl
int
orl
mov
outsl
cmp
ficomps
arpl
jmp
jg
ljmp
in
lahf
push
leave
sbb
add
xchg
jp
je
fildl
push
cmp
or
std
ds
cmpsl
test
mov
fdivl
in
cmp
mov
roll
or
xchg
xchg
sbb
or
imul
cmp
aam
pop
cmp
dec
mov
pop
add
pop
fldt
movsb
arpl
stc
inc
sti
xor
aas
jo
cmp
push
cmpsb
aad
jo
lods
popa
mov
pop
loopne
pop
testl
int
adc
and
sbb
cld
cld
pop
mov
add
xlat
cmp
add
jg
pusha
decb
sbb
je
xchg
jne
dec
xchg
pop
pop
or
popa
inc
scas
ja
sbb
scas
scas
movsl
arpl
in
repnz
stos
sahf
adc
and
hlt
fsubs
scas
xor
add
arpl
addb
pop
adc
daa
jle
inc
add
cmp
jnp
mov
jmp
sarl
es
xor
clc
pop
dec
inc
add
lds
jno
mov
nop
xor
jns
xchg
adcl
add
mov
cmc
jl
adc
sbb
clc
leave
movsl
mov
adc
cmp
js
imul
push
lods
out
orb
dec
int
std
bound
ret
add
sbb
test
stos
dec
mov
jb
aaa
mov
arpl
jp
lcall
and
jmp
jb
popf
cs
sub
shrb
pop
mov
dec
adcb
jbe
sbb
loop
cmp
xchg
mov
cmpsl
sub
add
inc
fadds
jp
pusha
imul
sbb
pop
andl
sbb
outsb
sub
xchg
out
ss
outsl
mov
or
jmp
test
jbe
xchg
fwait
push
dec
shrb
cmp
inc
and
pop
mov
cmp
xchg
lock
jne
mov
add
in
add
cmc
out
gs
cmp
incl
mov
jmp
mov
or
jmp
aam
insl
cmp
mov
and
mov
pop
in
lock
inc
adc
inc
adc
jmp
fwait
inc
es
sub
in
pop
adc
sbb
sub
mov
clc
or
scas
mov
pop
daa
les
out
xor
addb
shrb
jmp
xchg
inc
sbb
cmp
and
sub
scas
loopne
imul
clc
pop
mov
lods
popa
popf
mov
dec
ss
push
adc
iret
pop
mov
mov
jnp
std
inc
pop
cmpsb
adcl
xor
ret
fnstsw
mov
repz
xchg
sub
xchg
add
mov
inc
add
mov
in
jne
dec
add
rol
add
in
iret
xor
add
test
sub
aaa
loopne
add
jbe
loope
cmp
add
add
add
push
xchg
add
pop
stos
dec
out
xchg
add
sbb
xor
pop
int3
rcll
out
loop
and
popa
cmpsb
push
pop
clc
mov
subb
out
popa
aas
jb
fmul
xchg
cmp
daa
stos
xor
adc
iret
dec
stos
movsl
add
in
pop
test
or
push
and
mov
lret
dec
mov
fsts
push
inc
cmovnp
pop
jbe
xor
sbb
jl
pop
iret
cmp
add
mov
xchg
in
cmp
divb
adc
add
add
adcb
push
nop
jg
fnsave
mov
push
pop
mov
std
int
arpl
ror
jne
daa
sub
add
jo
verr
cmp
add
movsb
orb
in
cmpsb
test
sbb
leave
scas
leave
sbb
xchg
shll
mov
aad
scas
xchg
shll
push
add
test
or
repnz
push
lds
push
add
adc
outsb
inc
orl
clc
ret
shr
sub
pushf
cmp
iret
mov
inc
in
ds
push
jp
mov
test
sarl
movsb
and
xchg
push
clc
orl
mov
test
mov
jmp
test
push
jecxz
add
push
mov
add
cmc
jle
cwtl
iret
mov
xchg
adc
pop
test
pop
add
mov
clc
sub
mov
xor
or
test
shrb
mov
add
and
add
add
mov
mov
jmp
scas
shlb
xor
xchg
andb
lds
push
dec
sbb
or
sti
mov
dec
or
cmp
and
movsb
sub
xchg
or
adc
mov
jle
call
and
push
sarl
and
idivl
lea
test
ljmp
fldt
and
mov
rcrl
mov
jnp
and
imul
sub
rorl
stos
cs
push
dec
cs
xchg
shlb
lea
fwait
das
cs
pop
stc
xchg
icebp
push
aam
movsl
in
sub
ret
jo
mov
loope
xor
ret
andb
adc
leave
cmp
es
sbb
jp
or
mov
repnz
xchg
std
cmp
cmpps
std
mov
in
inc
sbb
inc
test
and
loop
mov
cwtl
add
mov
jmp
daa
fmuls
mov
cmp
mov
and
arpl
push
stos
cmc
cmpl
cmp
clc
pop
mov
and
ret
and
outsl
sub
js
add
sbb
je
dec
pushf
popf
and
ja
das
add
or
mov
les
push
jmp
aam
iret
sub
add
into
xchg
sahf
fsubl
inc
jbe
bnd
sub
rcl
fildll
out
testb
sbb
es
cmp
sbb
popf
add
xor
jbe
xchg
movb
add
mov
add
and
pop
mov
inc
mov
aad
pusha
and
sarl
loop
add
fists
into
add
cmc
ss
add
sbb
pop
mov
daa
add
mov
pop
mov
fs
int3
into
pop
add
loop
xorb
add
mov
adc
mov
shll
xchg
push
fs
dec
and
adc
sbb
movsl
lret
sub
rolb
jo
data16
addr16
leave
mov
add
dec
adc
es
pop
dec
add
fndisi(8087
mov
aas
shrb
loopne
lds
add
out
inc
sti
adc
cmpsl
xchg
sub
sub
cmp
pop
mov
mov
pushf
shll
dec
in
inc
shrl
les
mov
inc
cmp
add
add
jl
and
mov
inc
rolb
jb
jno
daa
add
addr16
lock
in
mov
out
jmp
xchg
cmp
aas
sub
rorb
cmp
iret
aad
movsb
inc
test
div
repz
cltd
mov
inc
sub
add
adc
push
add
sahf
inc
cmp
in
fdivl
add
adc
or
push
inc
mov
add
and
popf
lret
cltd
fildll
add
lahf
ljmp
mov
pushf
sarl
cwtl
decb
ret
rclb
adc
sub
imul
push
add
std
cmc
fnsetpm(287
enter
mov
sbb
add
icebp
call
shrl
push
xchg
push
pop
outsb
cs
adc
sub
ret
jmp
mov
jo
ss
or
mov
dec
xor
pop
addb
fwait
dec
dec
jle
enter
or
add
mov
push
lret
mov
inc
imul
loope
ljmp
xorb
pop
add
imul
cwtl
into
jno
mov
ficoml
inc
addl
cwtl
cmp
mov
inc
push
imul
dec
and
ret
jbe
and
add
out
roll
jmp
add
fildl
lds
inc
mov
jb
flds
or
loope
decl
ret
icebp
lret
lret
lahf
add
push
fs
adc
shl
sbb
in
pusha
mov
xchg
add
or
pop
jmp
filds
test
add
out
test
mov
cmp
lret
mov
ss
mov
fwait
mov
mov
daa
pop
jge
cmp
ljmp
mov
cmp
ja
sub
cld
bound
rcrb
sti
or
or
aam
jl
repz
fsubl
icebp
ror
ja
or
out
lods
rcll
xor
mov
push
cmp
dec
cmp
sbb
sbbb
movsb
out
aas
and
stos
imul
imul
adc
sbb
aaa
xchg
outsb
push
enter
bound
ret
stos
sahf
loop
sahf
jge
xchg
xchg
roll
js
and
inc
stos
scas
sbb
out
xor
push
mov
pop
andb
sahf
lret
arpl
ret
mov
sahf
dec
sbb
mov
jp
dec
add
pusha
mov
lods
rcr
sub
xchg
repnz
jno
xor
sub
push
cmp
jecxz
add
jae
test
imul
adc
lods
adc
jbe
inc
add
in
pop
popa
out
ret
lds
xchg
hlt
add
xchg
clc
int3
shll
lret
fdivl
add
pushf
push
loopne
out
dec
addb
push
incl
fcoms
loop
bound
inc
mov
inc
adc
mov
mov
jle
jo
hlt
sub
sbb
sub
imul
popa
sub
xchg
or
mov
mov
test
in
mov
add
add
movsb
dec
pop
shlb
add
movsb
mov
jne
push
pushf
pop
test
xor
punpcklbw
adc
int
call
xlat
dec
xor
add
or
add
push
andl
xchg
ja
xchg
subl
sub
or
adc
repnz
lret
out
rcrl
cmp
mov
ret
pop
inc
mov
aad
adc
ds
jle
xchg
jp
mov
adc
fdivr
or
cmp
pop
xorl
leave
int3
xor
and
outsb
or
stos
daa
sahf
xchg
repz
lret
stc
cltd
loop
or
mov
push
inc
rorb
fildll
setne
popf
and
into
scas
mov
sbb
cmp
mov
sbb
insl
inc
pop
adc
add
push
sbb
jp
xchg
in
add
add
imul
sub
movsb
sbb
add
les
adc
dec
add
xchg
cmpsb
cmp
popf
or
fs
or
fnstsw
sub
push
jns
and
or
and
mov
ret
movsl
xor
stos
xor
es
cmp
mov
xchg
pop
loope
std
mov
dec
nop
add
ss
lods
push
and
sbb
pop
repnz
pop
inc
es
les
push
popa
out
enter
aaa
std
insb
adc
jbe
sbbb
inc
sub
dec
lret
xchg
ja
jbe
movsb
fdivs
dec
push
out
pop
mov
push
inc
jne
inc
wbinvd
inc
sbb
cs
daa
pop
mov
sbb
pop
mulb
std
adc
add
xorb
outsl
notl
cmp
aaa
pop
cs
mov
dec
and
mov
scas
shlb
or
lods
das
ret
and
into
mov
and
dec
movsl
adc
add
pop
jecxz
or
pop
lret
dec
push
into
xchg
les
insl
aas
stc
push
test
mov
and
xchg
insb
and
inc
cmpl
or
stos
inc
fimull
sub
inc
in
faddp
das
or
add
insb
lahf
lcall
push
scas
push
cmp
ret
xchg
adc
jl
pop
cmpsl
loopne
mov
adc
push
fcoms
jb
mov
add
or
mov
push
fnstenv
sub
cmpsl
lods
inc
mov
lds
xchg
outsl
xor
jl
cmpsl
rcrb
adc
outsb
fisubrl
inc
cmp
inc
mov
add
inc
push
push
or
movsb
add
stos
lds
jecxz
subl
clc
jb
xlat
add
mov
pop
dec
call
pop
mov
lods
adc
testl
gs
cmp
jb
xor
loope
pop
shrl
mov
sub
pop
movsb
sbb
jnp
mov
lret
xchg
mov
cli
notl
adc
sub
fcmovnu
push
icebp
dec
cwtl
add
imul
cld
jge
pushf
sbb
inc
aas
add
lods
mov
pusha
or
lret
iret
roll
cmc
mov
cmp
testl
mov
add
xor
cmp
mov
aas
sbb
lret
and
add
lock
add
bound
push
out
fisttpll
and
cmp
mov
jmp
cmpl
push
shl
mov
mov
jns
mov
pop
mov
add
sarb
pop
or
jge
pop
mov
mull
ss
addr16
pop
add
cmp
shl
xorb
out
stos
cmp
fwait
add
or
or
or
loope
aaa
nop
pop
popf
sbb
add
mov
cmp
mov
mov
xchg
cmp
mov
testl
roll
add
test
int
loop
add
mov
add
jmp
in
push
test
clc
push
stos
push
icebp
add
or
sbb
scas
sarl
sbb
add
xchg
cmpb
mov
xchg
je
xor
insb
adc
jno
mov
mov
inc
mov
pop
pop
lcall
jnp
add
jle
xchg
sar
lea
rorl
adc
jnp
scas
xor
inc
ret
xor
push
int3
inc
inc
insl
or
lods
inc
xor
repnz
pop
rcll
lock
xor
fisubrl
add
sub
and
pop
std
rcll
jmp
cwtl
mov
nop
repnz
rorl
push
mov
push
add
divb
jnp
repz
or
cs
call
mov
sarb
repz
std
adc
sub
dec
test
add
xor
xor
call
xchg
nop
jne
inc
test
cld
mov
and
mov
mov
sub
add
mov
call
cs
xor
mov
push
jl
cltd
push
push
roll
cmp
lea
mov
sub
in
test
push
dec
xor
test
push
add
stos
leave
pop
or
cmp
cs
fdivl
mov
xchg
jns
and
inc
in
add
xchg
add
or
sub
fdivrs
in
sbb
orb
int
cld
in
xor
gs
or
icebp
xor
xchg
add
outsl
xlat
cmp
mov
fsts
xchg
and
out
add
sahf
pop
push
jae
leave
or
inc
or
mov
jle
aam
lcall
sub
mov
int3
or
addr16
add
pop
push
aas
dec
insb
loop
out
and
lock
aad
add
xchg
aaa
cmpsb
cmp
jg
insl
sbb
sarl
mov
mov
int3
testb
cmp
out
aaa
lret
and
stc
sub
adc
mov
ja
push
add
gs
scas
sub
jb
xor
inc
shll
or
cmp
popa
or
and
test
out
xchg
sub
faddp
into
xor
mov
andl
or
xchg
fcomp
mov
sbb
inc
inc
inc
mov
rorb
xor
in
dec
js
sbb
mov
pushf
lock
mov
and
and
add
dec
test
push
mov
sub
jns
and
test
inc
inc
mov
inc
xchg
aaa
add
scas
ret
add
cmp
sub
in
pop
stos
cmp
dec
push
sti
imul
int3
jmp
jp
sbb
jo
adc
mov
fistpll
testl
adc
jg
iret
pop
popf
andl
xor
out
movsb
outsl
sti
add
xchg
add
adc
faddl
repnz
insl
pop
shll
add
jp
imul
pop
aaa
stos
push
orb
sbb
jno
or
cld
add
inc
add
mov
cmpsb
outsl
rcll
add
xor
or
mov
stos
sub
and
push
mov
adc
addl
aas
mov
xlat
add
sub
jb
fisubl
and
push
mulb
ljmp
fadds
gs
add
cs
sbb
jae
sub
cmp
push
or
lcall
inc
inc
mov
mulb
lahf
xchg
scas
add
int3
mov
push
mov
jns
add
mov
sahf
add
imul
add
cmpsl
out
sti
ljmp
out
fisttpll
jmp
orl
test
scas
daa
push
ret
imul
cld
fs
cwtl
push
out
dec
inc
cmpsl
inc
xor
mov
push
dec
xor
sbb
mov
pmullw
and
rorb
jb
push
cmp
in
jo
roll
lods
mov
push
mov
ljmp
jmp
addr16
jbe
ja
xchg
add
pop
loope
mov
mov
sub
xchg
gs
jp
xor
je
or
sbb
inc
outsb
mov
mov
daa
out
jle
in
and
scas
jg
mov
mov
xchg
add
mov
js
sbb
pop
cs
inc
filds
lret
es
insl
dec
sub
xor
xchg
inc
and
jo
xor
jne
mov
sbb
outsl
sahf
xchg
fldl
push
pop
mulb
aam
inc
std
add
mov
popf
les
mov
sub
in
lods
or
subb
mov
cli
lea
pop
mov
rcll
cmp
and
insl
loop
fucomi
jae
loope
mov
test
ljmp
stos
aad
fbld
in
loopne
fwait
jl
or
leave
bound
push
sub
or
jge
and
aad
shlb
imul
dec
cmpl
and
mov
int
sbb
inc
mov
dec
xchg
cmpsl
addr16
stc
lock
loopne
fisttpll
cmpxchg
popa
cmc
cmp
nop
div
sub
aas
jp
mov
sbb
cmp
mov
in
dec
adc
test
call
cmc
cmp
jge
arpl
mov
cmpsb
sub
shrl
outsl
sbb
push
loop
cmp
ret
add
pop
test
orb
aad
lahf
adc
hlt
adc
in
movsl
jae
lret
leave
jmp
arpl
add
pop
sbb
or
cltd
out
shlb
test
adc
repnz
aad
leave
pop
loop
add
outsb
cltd
inc
int3
inc
push
std
pusha
ja
or
movsl
fistl
mov
sahf
jg
xor
inc
jle
dec
cmpsl
mov
mov
fwait
xor
xor
loop
jbe
lcall
jns
insl
and
mov
cmp
lcall
lea
inc
xchg
adc
lret
xchg
aas
in
div
cmp
mov
push
cli
sub
enter
mov
add
mulps
loop
sbb
pusha
call
pop
loope
scas
jp
sahf
jno
out
gs
mov
rclb
and
add
gs
cld
mov
inc
push
sbb
adc
push
rclb
or
pop
insl
cmp
xor
lea
out
pushf
sar
int
movsb
and
inc
out
das
ret
pop
add
aas
push
sub
in
jmp
adc
jecxz
test
cli
rolb
dec
nop
mov
sbb
sbb
lret
pop
sahf
cmpsl
add
or
lret
ror
imul
add
pextrw
outsb
test
xlat
sbbl
sbb
inc
jne
testb
std
popa
orb
cmp
and
lcall
push
loope
xchg
lds
or
cmp
mull
push
popf
mov
mov
inc
stc
sti
push
adc
es
test
push
int3
push
addr16
je
or
push
or
add
jne
inc
fistps
cs
lret
xor
sbb
ja
mov
xor
mov
daa
outsl
pop
rcll
cmp
pop
cwtl
mov
push
test
mov
push
adc
sub
rclb
mov
and
rorb
in
jmp
fwait
pop
insl
mov
sarl
outsl
mov
sub
or
jae
scas
xchg
mov
repz
xor
andb
xor
test
jp
xchg
adc
arpl
or
sahf
scas
outsb
jp
mov
popa
xor
add
inc
test
cmp
add
add
in
add
or
mov
cmp
mov
and
movsl
push
xchg
push
pushf
cmp
sti
add
jp
lods
addb
mov
or
push
mov
jg
sbb
mov
cmp
ja
inc
lahf
cmpsb
sbb
enter
aam
add
push
int
outsb
sub
pop
fisubs
test
pusha
scas
cmp
aas
xchg
add
add
sub
inc
popf
testb
push
sub
add
sbb
inc
jbe
ret
and
ds
iret
cmp
and
das
out
jo
lds
push
std
inc
dec
mov
pop
cmp
cli
cmc
xor
in
cmp
movsb
lret
lahf
sti
xchg
mov
ljmp
xor
inc
sbb
push
popa
sti
scas
mov
and
fisubrl
add
push
add
shll
pop
inc
push
adc
add
sbbl
lcall
jle
daa
fwait
hlt
jns
imul
jb
inc
test
dec
xchg
addr16
cmp
push
hlt
mov
pop
xor
outsb
mov
lahf
shlb
pushf
inc
cmp
ja
add
dec
cmp
xchg
and
jl
das
cmp
cmp
bnd
mov
mov
xlat
int
cmpsl
or
add
xchg
pop
pop
and
add
int3
fdivrl
clc
mov
push
popa
add
jp
in
and
fisubl
hlt
mov
rclb
cmpsl
push
jae
lahf
push
adc
in
xchg
push
cmp
fnstenv
stc
or
inc
out
mov
dec
pop
icebp
stc
push
add
mov
notb
jo
xchg
aam
add
push
mov
add
test
sti
rcll
xchg
mov
pushf
inc
or
scas
xchg
pusha
mov
pop
add
cmp
mov
out
add
mov
testl
addb
sbb
xchg
jg
jb
or
popa
mov
adc
mov
out
inc
mov
push
shrl
jno
sub
call
add
xor
dec
or
xlat
sarl
adc
jle
adc
lea
mov
xor
mov
out
push
xadd
inc
and
shll
into
push
shll
and
push
mov
repz
test
int3
testl
mov
cmp
xor
or
loopne
sbb
in
js
add
mov
sbb
icebp
filds
pushf
faddl
jl
mov
mov
push
add
or
add
out
in
movsl
rsqrtps
pop
in
add
xor
cli
inc
mov
jno
push
cs
cmp
aas
ss
jle
ljmp
inc
add
ret
cld
bound
mov
ret
lret
mov
pop
out
add
pop
xor
inc
add
loopne
outsb
sub
rorb
cltd
pop
es
fadds
sbb
cmp
push
push
add
adc
fucomp
inc
in
add
insl
push
xor
inc
mov
adc
cwtl
lock
hlt
and
mov
iret
pop
and
call
adc
gs
jns
lahf
fidivl
xchg
sti
and
add
xorl
or
mov
jo
cmp
cli
cwtl
jb
jmp
add
lret
jnp
js
fiadds
sub
xchg
adc
xchg
int3
test
fidivrl
push
std
cs
fiadds
aaa
sbb
in
in
dec
stos
push
jmp
or
ja
decb
popf
mov
sub
inc
andb
mov
push
push
imul
mov
xor
rcl
mov
xor
loope
jmp
je
andb
jmp
insb
test
popf
ljmp
jl
enter
adc
loope
jne
push
clc
inc
shll
add
and
adc
sub
mov
insb
add
fmuls
lret
pusha
ds
test
sbb
mov
imul
xlat
dec
cmp
jecxz
mov
roll
call
cmpsb
xchg
inc
lea
xor
mov
sub
pop
jae
cmp
cmp
das
in
pushf
inc
mov
xor
cmp
popf
rolb
and
pop
incb
xor
xchg
pop
push
or
std
sarl
xor
mov
push
lcall
dec
lea
mov
imul
add
dec
xchg
and
adc
xor
mov
add
mov
adc
xor
cmp
mov
mov
aas
and
fcompl
xor
add
fcoms
or
jmp
add
cmp
add
push
lds
shrb
lods
scas
loopne,pn
filds
inc
mov
ret
into
movsl
push
mov
outsl
cmpsb
xor
add
fs
push
add
outsb
divl
les
fimull
sbb
dec
adc
aaa
jp
add
stos
rorb
add
mov
test
leave
dec
add
inc
pop
jle
push
pop
test
adc
jne
adc
loope
sbb
push
add
cltd
mov
loopne
mov
mov
pusha
ss
add
mov
sti
stc
xor
ret
xchg
hlt
pusha
cmpsb
jne
inc
enter
add
jo
imul
shll
insl
in
cltd
inc
ret
loope
pop
inc
xor
jae
ds
sti
pop
mov
and
pop
out
sbb
aas
mov
pop
sbb
add
loopne
inc
mov
jb
imull
dec
subl
xlat
push
cmp
popf
push
add
mov
sbb
sbb
add
cwtl
data16
popa
or
bound
outsl
adc
mov
add
push
cmp
xchg
pop
ret
out
push
mov
pop
mov
jl
jp
xor
jns
pop
xchg
arpl
out
pop
icebp
add
adc
sub
ss
gs
add
stos
inc
insb
rclb
ss
icebp
lds
js
sbbb
nop
and
lcall
jge
xor
xchg
imul
addb
pusha
inc
mov
jbe
adc
push
out
add
iret
push
push
push
outsb
sahf
rclb
jg
xchg
stc
mov
add
push
js
add
adc
add
fiaddl
add
jo
stc
add
or
dec
adc
call
add
fiadds
xor
jge
xchg
add
stos
mov
add
imul
ja
sub
mov
test
call
hlt
movsb
jmp
popa
and
mov
mov
sysexit
es
fwait
idivl
xchg
jno
pop
xchg
sub
addr16
pop
incl
aas
jmp
aad
ret
xor
stc
ds
sub
outsb
add
or
imul
mov
and
dec
mov
mov
push
cmp
xchg
test
add
sub
out
mov
inc
out
mov
repnz
or
sub
cmp
push
cmp
jmp
and
add
xor
mov
mov
js
addl
test
pop
sub
xchg
dec
add
loop
pop
pushf
pop
xorb
cmpsb
push
ss
iret
add
cmp
adc
js
mov
enter
adc
adc
sahf
adc
out
rolb
add
or
add
fadd
stc
add
rcr
sub
mov
push
cmpsb
into
add
or
pop
loope
inc
dec
movsl
and
out
rcll
shll
jmp
xor
imul
das
stos
xor
cmp
mov
cmc
and
add
and
out
add
sub
jmp
cmp
loop
jb
lret
pop
lahf
shrb
inc
sbbl
iret
mov
loope
mov
ret
mov
push
and
add
or
ret
mov
or
cli
in
iret
leave
adc
scas
jb
xor
lretw
adc
sahf
dec
ljmp
in
and
cmp
scas
inc
data16
clc
push
sbb
xlat
shrb
inc
xlat
mov
test
cmp
test
test
lret
add
movsl
inc
cmp
movsb
cmp
roll
or
out
mov
pop
or
mov
cmp
mov
cs
push
cmp
xchg
inc
sbb
insl
xor
loope
and
cmp
sub
pop
xlat
sbb
je
add
add
iret
adc
cmp
cmc
in
ficoml
sbb
sbb
or
les
std
rcll
push
cli
and
add
mov
push
daa
outsl
cmp
cmp
adc
lods
sbb
sbb
push
adc
in
aaa
pop
ret
call
imul
gs
inc
rorb
cmp
mov
fistpl
add
xchg
aad
mov
add
inc
mov
pop
sahf
mov
in
and
aad
sub
xor
insb
inc
sub
testb
loopne
fcomp
push
inc
pop
sub
icebp
add
mov
dec
lret
inc
or
xor
and
xor
inc
in
jmp
cld
shll
cmpsb
daa
mov
jno
xor
popf
sbb
mov
filds
pop
xor
mov
fcomp
dec
fnstsw
fnstenv
add
sti
popa
data16
add
jne
push
xchg
fwait
pop
sbb
jnp
adc
pop
cmc
xor
pop
lds
cmp
cmp
scas
jge
cld
fnstenv
out
imul
outsb
arpl
lea
mov
call
popa
fstpl
jbe
scas
out
add
fsubrs
rcr
rorb
in
add
or
xchg
ret
subl
pop
sbb
cmc
insl
enter
aas
pop
jne
test
fldcw
and
pop
mov
aad
stc
cmp
add
dec
adcb
test
sub
jnp
cli
stc
push
add
icebp
std
test
cmp
add
pop
jbe
add
cmpsl
adc
adc
xor
dec
pop
test
inc
or
repnz
loop
and
fstl
scas
psraw
sbb
push
js
mov
xlat
add
je
cmpsb
add
mov
les
idivb
add
or
xlat
pop
pop
xchg
mov
jg
popf
inc
pop
femms
mov
stc
cmpsl
adc
add
add
or
nop
xor
pop
add
inc
sub
loopne
clc
inc
and
adc
inc
insl
orl
ds
into
cwtd
arpl
sub
lods
add
add
xor
xor
cmp
cmp
mov
cld
ret
or
aaa
mov
mov
mov
and
and
dec
add
mov
jmp
imul
das
ret
sub
lds
pushf
nop
or
or
insl
pop
pop
and
aaa
clc
ljmp
shrl
in
inc
cmp
xor
cltd
adc
nop
pusha
xlat
pop
movsl
adc
pop
shlb
cmp
loop
add
cmp
cld
add
mov
popl
adc
gs
cmp
into
inc
dec
aaa
int3
mov
add
pop
addl
inc
jecxz
ss
push
mov
repnz
iret
mov
xchg
cmpps
xor
xchg
filds
sbb
add
sbb
ficompl
cltd
add
test
loop
and
add
fs
add
mov
dec
add
out
sbb
add
rcrl
incl
flds
pop
adc
sbb
push
sbb
cmpsl
add
inc
pop
out
cmc
mov
fdivp
sti
mov
add
push
dec
cmp
push
das
add
add
lea
pop
cmp
loopne
mov
sbb
and
mov
subl
and
mov
mov
cmp
shrl
cmp
in
sbb
pop
xchg
hlt
test
out
add
push
insl
inc
add
test
inc
imul
jns
iret
add
cwtl
lret
cmp
dec
rolb
lock
aam
inc
cltd
sbb
jb
cmp
in
int
mov
sbb
sarl
ljmp
mov
stc
test
sbb
rolb
stos
dec
cmp
sub
add
data16
sub
insb
stc
sbbl
pop
sub
push
or
out
cmc
std
push
xor
mov
and
fmulp
repz
fldenv
addr16
dec
push
jg
xchg
clc
jp
cmp
sub
imul
xor
jns
inc
push
and
add
mov
add
mov
data16
pop
std
and
rorb
xor
jnp
jp
inc
test
sti
pop
out
mov
mov
add
addl
insl
inc
scas
test
mov
sbb
jbe
jae
xor
xchg
flds
dec
sar
jl
pop
dec
int
daa
adc
sbb
add
mov
mov
call
dec
cmpsb
dec
pop
xor
cmp
gs
aaa
repnz
cmp
fsubrs
cmpsb
and
rcl
rol
xchg
jae
ljmp
jge
cltd
push
xchg
mov
cld
inc
sysret
xlat
jo
xor
shll
lea
adc
add
movsl
adc
xorb
or
cmp
add
hlt
sbb
outsb
lods
fiadds
cwtl
pop
mov
jg
adc
lods
scas
fisubl
xchg
fidivs
sbb
dec
mov
pop
or
pushf
lods
ljmp
inc
insb
push
or
mov
pop
in
add
xchg
xchg
inc
add
sbb
movsl
test
daa
add
rorb
cmp
sub
push
fisttpl
iret
xchg
cmp
jmp
xor
push
repz
jne
gs
mov
inc
push
jmp
cmp
add
in
add
ret
add
jmp
std
pop
out
cmp
sub
xchg
pcmpgtw
jmp
cmpsl
sub
add
xchg
scas
jb
jae
and
inc
push
add
mov
or
inc
inc
cmp
xor
cltd
lods
cs
mov
flds
sbb
and
add
lret
pop
sbb
cltd
inc
xor
test
fptan
aaa
popa
mov
jns
xor
inc
lret
sbb
dec
scas
fcomp
test
xor
mov
popl
mov
lahf
add
add
jle
dec
imul
jae
ja
leave
movl
jne
fisttpll
adc
fsubrl
leave
push
xor
mov
loop
sub
mov
pop
in
xchg
sbb
leave
lds
cltd
xlat
jne
js
dec
mov
jge
call
shr
push
adc
inc
cmp
stos
dec
shrl
push
aas
and
lret
stc
rcr
cmp
sbb
or
cli
add
jp
loopne
daa
inc
fildl
inc
gs
sbb
push
pop
loope
scas
rcl
addl
cmpsl
movsl
fs
repz
or
mov
add
fwait
stos
mov
iret
ret
or
jmp
add
shll
mov
adc
lds
inc
das
fldl
orb
inc
mov
rcrb
lahf
aaa
or
test
in
xor
int
dec
lds
ficoml
enter
cld
mov
adc
mov
stos
sub
out
sub
xor
ja
addb
sbb
cmp
push
add
adc
shll
dec
adc
jo
cmp
in
and
and
pop
aas
add
lods
or
dec
addr16
fs
popa
cwtl
inc
inc
or
add
lods
or
ret
test
out
mov
sbb
or
fwait
movsl
scas
sbb
shr
cmp
ret
shrb
or
stc
xchg
adc
sub
leave
cmpsl
and
push
cmp
sbb
out
repz
add
iret
sbb
mov
sub
hlt
rolb
repnz
jecxz
jae
mov
inc
lea
jmp
inc
lret
insl
cmc
lcall
rcr
ss
jne
popf
push
add
pop
and
inc
ret
sbb
sbb
add
das
add
adc
imul
mov
fsub
repz
or
xchg
pop
in
jo
fwait
mov
mov
orb
xchg
icebp
jecxz
dec
std
adc
out
in
add
lcall
add
mov
and
add
add
lds
add
mov
xchg
rcr
loopne
add
call
insl
in
pop
mov
inc
jge
jns
in
in
xor
cmp
test
add
adc
add
scas
xor
aad
add
cwtl
and
sub
lock
sub
loope
add
xchg
jecxz
jp
stos
xchg
add
inc
test
add
sub
int
add
cs
cmp
add
add
dec
enter
inc
push
add
stos
outsb
cmpsb
stos
inc
add
inc
pushf
jmp
imul
movsl
in
pop
add
aam
roll
loope
sbb
add
sub
xlat
xlat
mov
stos
imull
ljmp
mov
add
in
or
and
add
dec
stos
pop
jg
mov
add
sub
dec
mov
add
sahf
bound
enter
jnp
mov
mov
add
push
jb
icebp
mov
mov
xchg
and
dec
xchg
daa
dec
in
add
jno
sub
push
mov
xor
cmpsl
mov
mov
mov
xchg
imul
testb
pop
pop
adc
mov
or
popf
add
mov
pop
mov
frstor
notb
outsl
mov
mov
xor
fs
aas
repnz
testb
and
pop
inc
add
xchg
xlat
fldt
mov
pop
and
aad
mov
sbb
cli
xor
adc
jecxz
jae
into
insl
std
inc
jb
and
inc
mov
jne,pt
mov
pusha
fcomip
mov
mov
cmp
ja
out
bound
xchg
mov
ljmp
insb
cmp
out
and
mov
mov
clc
pop
xchg
add
sbbb
enter
jne
icebp
mov
jo
push
xchg
sbbb
adc
enter
inc
sti
mov
lea
cmp
out
popf
xlat
xor
add
insl
gs
mov
adc
xchg
mov
inc
jno
mov
cmp
cmp
stos
movb
insl
arpl
jne
pop
add
imul
adc
or
sbb
jo
cli
jae
add
ret
lock
ljmp
std
inc
imul
dec
or
jmp
adc
mov
add
stos
dec
adc
or
addb
inc
cmp
out
cmp
std
test
shlb
xor
fs
add
mov
mov
enter
add
in
mov
and
out
fwait
mov
add
push
mov
aas
lods
mov
scas
dec
scas
pop
sbb
adc
push
mov
pop
dec
ljmp
xchg
das
test
call
out
sub
scas
mov
dec
and
pop
xchg
faddp
jge
jae
mov
cs
mov
cmp
rolb
sub
xor
jg
and
stc
xchg
push
mov
dec
dec
das
movsb
filds
fadds
je
dec
xchg
fdivp
dec
add
pushf
negl
stos
fwait
int
add
insl
js
inc
data16
cmp
mov
push
into
jb
ficomps
fidivl
movsl
pop
cmp
mov
jecxz
and
and
xorb
lret
jp
pop
inc
inc
loop
cmp
pop
jno
mov
addr16
leave
ret
fbld
add
insl
inc
jp
xchg
in
pop
divb
ret
in
outsl
pop
sbb
sub
and
arpl
cltd
jb
aas
std
je
ret
cmpsl
jno
xlat
test
cltd
inc
bound
call
shlb
popf
arpl
inc
xor
loope
test
cmpsl
or
fwait
test
lods
test
mov
rol
or
push
cltd
mov
adc
cmpsl
es
adc
jnp
imul
push
cmp
jl
mov
and
mov
aas
pusha
jo
stos
mov
and
cmp
cltd
add
jp
jno
mov
out
mov
insl
pop
fsubrp
mov
inc
mov
into
push
add
xchg
push
mov
cmp
testb
mov
mov
fldl
add
ds
add
cmp
sbb
loope
add
xor
mov
add
or
sbb
inc
and
test
sarl
jle
xchg
jg
sti
jl
adc
xlat
inc
shrl
cmpsb
mov
sbb
data16
and
das
xchg
lods
or
add
xor
sbb
lahf
push
add
mov
add
orb
pushf
fwait
mov
or
test
add
jp
fsts
pop
xlat
xchg
rcrl
add
bswap
mov
add
leave
pop
cli
mov
repz
xor
add
sub
cmpsl
pop
inc
xchg
add
shl
lcall
mov
sub
and
inc
out
fiaddl
cld
jnp
fwait
in
cs
adc
and
lret
lea
mov
inc
or
icebp
lock
or
adc
jns
mov
add
mov
push
fisubl
sti
xchg
iret
and
mov
and
nop
dec
fiadds
dec
or
mov
push
mov
ret
add
shr
add
pusha
inc
dec
xor
inc
inc
in
leave
enter
xor
roll
jle
and
incl
sub
stos
fcmovu
mov
rol
jne
push
ret
inc
xor
fdivr
xor
cmp
mov
and
add
pushf
and
mov
hlt
pop
adc
stos
aaa
add
es
push
push
adc
daa
pop
add
xor
out
int
jno
mov
fxtract
fiaddl
mov
jno
cmpsb
mov
imul
sub
icebp
mov
verr
adc
xor
adc
sub
lahf
mov
stos
idiv
rcl
fucomip
lcall
sbb
fucom
fcompl
roll
pop
xor
adc
outsb
fisubrl
sti
adc
add
or
test
fdivrp
and
push
sarl
jne
cld
adc
stos
dec
lea
int
arpl
sub
add
cmp
add
mov
mov
push
test
imul
or
pusha
adc
inc
test
and
pop
sbb
insb
add
xor
lock
fcmovnbe
mov
test
sub
dec
push
test
pop
dec
mov
add
ret
rcrl
in
xchg
loop
lods
stos
mov
adc
xchg
fdivrl
outsb
add
lahf
jns
out
dec
add
stos
sub
cld
add
push
call
shr
cs
sbb
fisttpl
and
lcall
sub
adc
das
cmpsb
shrb
and
out
lds
enter
sub
scas
fcom
add
xchg
push
imul
push
pop
addr16
push
xchg
into
loopne
bound
dec
and
add
adcl
and
daa
add
lcall
insl
add
push
jle
push
add
sbb
xor
inc
mov
and
add
mov
sub
and
mov
loopne
dec
pop
jp
sbb
push
mov
jmp
test
push
sub
mov
in
stos
rcrl
cmp
sub
or
in
xor
add
or
popa
mov
test
push
imul
xor
dec
add
ret
push
faddl
fwait
inc
sbb
stc
push
fst
adc
adc
and
enter
addr16
sub
add
lods
rolb
rolb
lret
xlat
lods
add
insl
push
stc
xchg
scas
dec
xor
mov
les
imul
add
mov
inc
and
fcoml
xor
fwait
dec
scas
lret
adc
pop
lods
loop
ss
cmp
sbb
sbb
jge
rcll
mov
pop
xchg
dec
push
cmp
pop
leave
cmp
bswap
popf
push
mov
dec
cmp
cmp
jb
fists
loopne
test
add
daa
xor
das
xchg
pop
out
nop
inc
jp
cmp
fsubl
iret
cmp
and
int
dec
out
adc
loope
ret
lret
daa
inc
ja
cmp
imul
or
test
dec
pop
cmpb
mov
or
outsl
aaa
pop
and
mov
gs
test
shr
mov
jmp
out
in
shrb
mov
lods
push
scas
scas
xor
outsl
lret
jno
mull
popa
xchg
pusha
sbb
add
jp
sbb
mov
mov
lods
dec
pop
dec
popf
cmp
subb
dec
dec
outsl
ret
and
fists
xchg
repnz
mov
ret
loop
push
cmpsb
inc
or
inc
adc
lret
inc
outsb
mov
inc
mov
or
xlat
in
lods
cwtl
mov
dec
xorl
add
cmc
mov
movsb
stos
je
loop
sarl
push
and
cmp
adc
leave
or
out
or
or
add
js
cmp
in
jge
jb
add
adc
mov
jb
sub
mov
mov
sbb
xor
notl
add
in
aad
ret
push
loopne
sbb
scas
or
dec
in
or
pushf
pushf
in
mov
pop
xchg
dec
rcll
aas
cmp
rcrb
mov
enter
add
inc
daa
cmp
add
and
and
cltd
popa
cmp
lea
pop
xor
filds
ret
jecxz
int3
fmuls
push
cmp
fwait
or
and
or
ljmp
rolb
call
out
add
dec
inc
push
pop
xor
divb
repnz
cmp
sqrtps
add
test
add
fldl
mov
scas
xlat
cmp
jge
mov
jne
orl
dec
shll
loop
dec
andb
loopne
ss
imul
jnp
xor
lods
sbb
and
jp
imul
addb
mov
cld
xlat
cmp
out
lcall
push
adc
pushl
das
push
jp
pushf
out
dec
popa
inc
or
xchg
inc
js
es
hlt
push
aad
or
push
sbbl
adc
std
dec
into
sbb
mov
data16
sar
jp
add
push
mov
stc
mov
dec
nop
and
iret
and
push
and
int3
or
or
insb
aad
or
and
or
sub
inc
lds
xchg
sbb
jbe
scas
inc
cmp
test
mov
inc
mov
push
test
pop
push
push
and
dec
xor
test
out
fiadds
add
int3
std
push
and
lret
in
sbb
gs
test
inc
mov
fisttpl
stc
imul
loop
xchg
adc
add
mov
nop
sbb
sub
dec
ds
add
mov
mov
lcall
orb
mov
sub
mov
mov
test
fcomp
sbb
aaa
lods
sahf
fwait
mov
and
mov
rol
gs
cmp
and
cmpsl
fwait
pop
dec
cmp
rcr
rolb
popa
and
cmp
data16
jge
rcl
sbb
insb
push
push
or
jecxz
cmpb
das
cmpsl
cmpb
adc
xor
pusha
aaa
enter
dec
int
shll
pusha
daa
sbb
xor
cmp
fldenv
stos
pop
pop
mov
lods
mov
repnz
iret
sub
xchg
push
xorb
sbb
push
jg
and
xor
add
scas
xchg
mov
mov
stos
inc
jp
and
cmc
aas
jge
dec
sub
adc
pop
mov
fldl2e
fnsave
and
jp
cmp
push
aam
adc
jmp
inc
es
jp
push
inc
xchg
movb
hlt
arpl
stos
xor
mov
sbb
jecxz
sbb
popa
xor
andb
ret
dec
enter
ffreep
or
decb
jge
adc
and
outsb
sbb
ss
xor
push
fmull
and
bound
adc
cli
sub
outsb
and
cmc
dec
lcall
js
mov
shll
adc
pop
mov
test
cmp
inc
pop
inc
xor
jl
cwtl
test
test
or
lock
xchg
lds
push
push
stos
dec
xchg
cmp
sub
ja
test
xor
in
dec
xchg
lods
jmp
stc
in
repnz
push
xor
out
cmp
outsb
loope
add
add
fnstcw
pop
notb
cmpsb
add
fidivl
push
pop
cmc
and
jne
scas
nop
stos
push
add
and
sbb
lds
mov
add
mov
in
ss
or
jmp
inc
int
jge
and
inc
mov
and
loop
gs
xchg
movsb
mov
or
xchg
out
addl
int3
mov
push
inc
js
mov
add
pusha
sub
xchg
jg
stc
pop
pop
add
add
repnz
dec
lret
cmpsb
data16
fsubrl
cmp
lock
or
imul
dec
push
dec
mulb
jnp
popl
inc
cmp
nop
mov
data16
mov
inc
mov
mov
jnp
aaa
adc
cs
mov
andl
mov
aad
push
add
out
mov
icebp
pop
scas
sub
mov
sub
cltd
shrl
iret
mov
into
stos
sbb
mov
pop
add
cs
jo
inc
fsubs
and
adc
add
sbb
xchg
aam
fs
daa
ss
roll
lcall
add
fcom
and
leave
xlat
xor
mov
stos
mov
add
jmp
lods
add
xchg
inc
lea
mov
cld
movsl
xor
add
mov
xorl
pushf
cmp
loopne
filds
and
sbb
out
mov
jge
mov
cmp
push
or
lods
xchg
cmpb
adc
fimuls
cmp
rclb
test
pop
xchg
sub
cmp
add
lods
push
push
cld
adc
fmull
dec
xor
add
mov
and
idivb
and
ds
int
add
daa
aaa
add
sbb
negl
pusha
insb
and
pop
adc
subb
or
iret
mov
push
dec
sub
mov
xchg
sbb
jle
mov
shll
xchg
jecxz
push
dec
add
stos
push
insl
mov
outsb
call
and
jo
ja
add
inc
adc
cmp
cmpsw
movsl
or
fadds
test
jp
repz
enter
aas
mov
outsb
ret
lods
xor
sbb
cltd
xchg
add
sbb
jb
or
test
sub
cmp
movsl
add
push
push
aam
rolb
mov
add
xor
rcrl
mov
cmpsb
bound
jae
inc
mov
add
lcall
mov
pop
mov
cltd
insl
nopl
add
lret
mov
push
aad
pop
add
xchg
mov
pop
mov
sarl
mov
insb
movsb
push
xchg
and
pop
adc
jle
push
push
adc
or
mov
add
stc
add
shll
add
lret
scas
stos
add
jmp
sarb
adc
loop
add
xchg
mov
dec
cli
cmp
add
js
mov
divl
inc
aaa
sbb
popf
add
xchg
fstpl
lock
add
movsb
mov
stc
and
rolb
rcrl
cmpsb
sub
mov
mov
xor
shll
iret
adc
sbb
jmp
push
add
pop
cmp
add
nop
outsb
scas
mov
mov
mov
push
rorl
mov
mov
sub
shl
mov
dec
lds
add
aam
cmpsl
add
js
out
sti
movsb
or
jb
sub
mov
xchg
push
imul
mov
je
loope
shlb
addl
sbb
adc
js
int3
cmpsb
icebp
lahf
in
test
jg
fadd
ds
incb
mov
repnz
add
mov
jae
push
jne
rol
sub
push
jmp
aam
andl
ss
cld
inc
xor
cmpb
adc
cld
add
ret
xorb
cmp
mov
rcr
repz
pop
mov
inc
popfw
cmp
add
ss
fs
aaa
xor
xchg
and
dec
or
popa
sub
scas
push
or
add
daa
xchg
add
inc
and
ss
movsb
movsl
and
dec
dec
es
roll
push
add
dec
mov
rorl
adc
lock
mov
scas
xchg
aad
jge
cmp
mov
jp
push
sub
mov
add
cmc
aaa
fsts
add
push
in
dec
incl
iret
mov
add
and
mov
xor
dec
out
mov
xor
sub
xor
add
jns
mov
movsb
cmp
mov
pop
pop
sahf
xor
sbb
cmp
mov
clc
add
cltd
push
fs
sub
stos
ret
jg
pop
enter
add
push
sbb
imul
jl
push
mov
dec
repnz
add
stc
ljmp
les
adc
pop
adc
sbb
insl
das
xchg
in
mov
rcll
inc
dec
pop
or
cmpsl
inc
lret
in
outsb
jg
sub
scas
nop
add
mov
popf
test
jae
xchg
sbb
out
add
popa
sahf
int
movsb
sarl
xor
push
add
es
push
cmpl
rorl
push
pop
pop
and
pop
mov
jns
cwtl
cli
cmp
ja
xorl
pop
addb
jg
xchg
dec
add
mov
add
cmp
subb
or
enter
jnp
iret
mov
add
sbb
or
xorb
sbb
fdivr
cmp
stos
xchg
jmp
fistps
cli
jae
pop
adc
pop
out
adc
push
jmp
pushf
inc
inc
add
pop
pusha
xor
adc
nop
btrl
push
push
sarl
fcmovnb
dec
sbb
xorb
fwait
in
pop
scas
test
pop
or
or
daa
fmul
fisubrl
mov
adc
or
lahf
sti
jge
xchg
aas
and
je
mov
rclb
inc
std
daa
data16
inc
add
xchg
jae
add
enter
xor
jns
dec
xchg
out
mov
in
jecxz
or
xlat
cld
xchg
fstp
pushf
mov
xchg
sub
inc
add
rorb
insb
or
inc
movl
push
xchg
out
xchg
jno
mov
or
fildll
stc
pop
rcrb
add
xchg
jb
ret
mov
lds
mov
jle
ret
out
sbb
rolb
xchg
cmp
popf
jne
jnp
push
mov
in
rorb
mov
sbb
cmp
mov
xchg
sub
pop
frstor
in
add
adc
mov
enter
lock
loope
sub
adc
add
xor
mov
push
leave
dec
sbb
dec
in
ljmp
cmp
dec
out
popa
add
and
jb
mov
test
and
push
jnp
add
and
add
in
jge
add
pop
sti
xchg
mov
push
cwtl
mov
push
test
shl
mov
mov
mov
add
sbb
movsb
repz
adc
daa
das
inc
orl
or
jae
andb
mov
xlat
lea
ret
movsl
add
jnp
ret
sbb
push
lock
push
inc
jno
les
testb
scas
or
mov
int
orl
adc
add
mov
dec
pop
cmp
shl
bound
fidivrl
mov
cwtl
rclb
cmp
mov
jge
inc
xor
icebp
lds
xchg
push
jno
in
jmp
push
add
test
sti
cwtl
fadd
push
popf
sbbl
lahf
mov
add
in
add
add
aas
lret
pop
sbb
inc
ret
xchg
and
xor
jae
cmp
fiaddl
sub
dec
add
imul
push
movsl
mov
mov
add
bound
push
cmc
sbb
subl
sarb
in
loop
and
inc
sub
je
in
jo
mov
jg
sbb
and
jecxz
cmpsb
sbb
adc
lahf
mov
pusha
mov
enter
loopne
mov
cld
add
inc
mov
jle
iret
mov
mov
mov
pop
loop
dec
or
adc
js
jmp
sbb
out
adc
dec
arpl
inc
jp
cwtl
add
and
xor
outsl
dec
cmp
xlat
cltd
add
arpl
mov
adc
test
xor
bound
adc
mov
cmp
jge
pop
add
js
fcomps
gs
push
xlat
mov
scas
jb
add
sbb
sbb
stc
mov
out
ljmp
aas
adc
jp
cmp
jo
rorb
sub
add
ret
and
out
adc
scas
aaa
cmp
nop
rclb
mov
jp
jecxz
pop
sub
lret
cmp
roll
push
loope
inc
add
rcl
imul
rcll
push
cmp
aas
cmc
out
mov
sub
dec
jne
insb
sbb
mov
xor
mov
and
jae
pop
sub
pop
add
xor
ret
shl
jne
xor
pop
addr16
shl
push
imulb
add
adc
push
mov
push
add
incb
jne
sub
ds
add
iret
dec
jg
fcomps
sbb
add
xor
pop
xor
outsl
jmp
inc
andl
adc
ss
and
loop
dec
jns
inc
inc
xchg
add
les
daa
cmpsl
pop
or
lret
cld
icebp
into
rclb
lods
mov
sub
sub
pop
std
add
xchg
lea
xor
in
aaa
jns
inc
inc
cs
mov
or
inc
add
push
sub
mov
mov
ljmp
mov
mov
jecxz
lock
add
lret
adc
pop
cli
sbb
jl
popa
add
mov
out
or
add
push
call
adc
fildll
jmp
adc
add
pop
adc
lock
and
stc
je
sub
std
push
jl
cmp
lock
jecxz
lods
adc
aaa
pop
pop
and
nop
xlat
mov
or
fs
lods
je
jno
lock
and
sarl
roll
pop
dec
mov
xchg
push
xlat
sti
push
rcl
lock
inc
push
popf
data16
add
cwtl
pop
xor
fisttpl
fcoml
data16
stc
mov
lcall
inc
bound
push
adcb
rcrb
test
add
fwait
mov
sbb
mov
sub
fnstsw
push
mov
mov
lret
cmp
rcr
rcll
cmp
sub
jle
shlb
inc
dec
and
cs
and
scas
adc
lds
cmpsl
fadds
loope
mov
fxch
in
dec
sub
pop
popf
lea
pop
loopne
mov
jg
mov
addb
cmp
sahf
pop
and
not
mov
add
mov
or
mov
jle
bound
pop
inc
cmpl
sbb
orl
dec
sbb
sub
add
inc
jge
test
add
pop
shll
movl
mov
shll
mov
xchg
orl
testb
xorl
into
aaa
pop
xchg
push
add
jnp
mov
add
adc
add
cmp
sbb
mov
arpl
inc
dec
dec
stos
rorb
add
repnz
pop
popf
pop
xlat
lahf
addl
and
adc
add
sahf
dec
mov
inc
imul
mov
xor
add
outsb
cmp
test
push
orl
push
lcall
add
in
fld
les
sub
jae
add
inc
insb
cmpsb
jmp
loop
mov
push
lret
jb
push
aam
push
cmp
pusha
mov
and
inc
mov
and
fbld
stos
inc
pmaxsw
inc
imul
adc
sub
add
inc
lds
lods
pusha
test
add
loope
sbb
adc
add
and
push
rolb
mov
rcr
scas
mov
addb
inc
das
dec
and
mov
add
xor
mov
sbb
sarl
cmpsl
jmp
lea
rolb
in
sub
lods
cmpsb
cwtl
rcll
movaps
loope
stc
loop
int3
sbb
ds
rcll
aad
enter
mov
ret
inc
imul
pop
lcall
iret
inc
jne
dec
clc
inc
imul
fdivs
push
push
add
cmp
dec
scas
jns
pop
testb
sbb
shll
or
mov
loopne
sbb
mov
cmp
negb
inc
add
in
jae
inc
mov
fwait
mov
or
xor
jo
adc
xchg
scas
lods
sahf
adc
jns
and
dec
lahf
andl
hlt
mov
adc
mov
push
jbe
xor
fldl
call
das
adc
movsb
sub
shrb
out
in
add
push
mov
mov
ljmp
pop
aaa
call
sub
xor
mov
bound
lods
mov
xchg
add
fistps
roll
mov
mov
pop
xor
dec
add
xor
add
cmp
xor
test
jmp
je
aaa
gs
aaa
adc
mov
and
or
or
testl
inc
cmpsb
sub
lret
add
mov
popl
jo
es
faddp
movl
pop
jle
lret
add
fimull
cmpsl
fwait
out
push
and
push
test
sub
in
and
inc
repnz
icebp
push
leave
and
dec
inc
popf
and
inc
dec
lods
add
push
add
jmp
mov
sub
cli
adc
xor
loop
loope
pop
xor
int3
xchg
xchg
inc
stos
lds
add
pop
in
xchg
mov
lock
xor
daa
movsb
ds
mov
sub
scas
inc
add
lock
pop
jne
mov
cmp
pop
scas
in
mov
and
cwtl
int
and
jns
out
dec
add
sub
or
movsl
test
rolb
mov
add
lcall
xchg
cld
cmp
js
xlat
cmp
repz
jle
std
shl
sbb
mov
out
xor
push
xor
mov
test
push
mov
fwait
incl
push
sbb
sub
xor
sub
jae
fadds
inc
sub
in
add
push
aas
in
mov
xor
dec
inc
and
push
sbb
xchg
lds
adc
loop
jnp
xor
in
js
mov
cmpsl
add
add
add
xor
roll
ret
sub
call
ds
lret
jl
aas
dec
or
jnp
inc
nop
arpl
pop
sarb
cmpsl
in
xor
mov
lods
enter
clc
cmp
jnp
push
div
cmp
add
xchg
lcall
mov
xor
sub
test
mov
mov
pushw
and
fbstp
jb
add
aam
mov
lahf
adc
xchg
sub
lods
add
mov
mov
pop
and
push
fsts
out
fistps
sbbb
adc
jne
dec
je
push
mov
clc
dec
cmp
jmp
inc
orl
add
adc
xlat
nop
sar
js
mov
xor
cld
lret
and
add
scas
xchg
pop
mov
in
rolb
aad
or
adc
mov
and
idiv
sbb
dec
push
add
or
jmp
sbb
shlb
add
sbb
rorb
xchg
iretw
inc
lret
mov
jp
jl
and
mov
mov
add
andb
pop
sbb
movsb
jmp
les
cmpsl
popa
mov
add
xchg
and
popf
jnp
sub
pop
aaa
ret
jns
push
and
xchg
xor
add
daa
shrl
sbb
rcll
aaa
and
ror
add
loopne
mov
repz
pop
es
add
mov
add
popa
sbb
lock
cwtl
dec
mov
jp
in
xchg
sub
pop
xor
push
cmp
jmp
jmp
pop
adc
icebp
scas
cmp
mov
loop
sub
bound
rclb
aaa
sbb
dec
js
xor
jbe
mov
add
push
clc
fcompp
pop
add
sub
arpl
sub
rorb
leave
fs
popa
sub
add
pusha
jge
mov
sub
mov
xchg
and
jp
nop
lods
pop
je
dec
jg
jno
fcoms
icebp
ljmp
pop
lret
pop
mov
ds
pop
sbb
jb
lods
xor
xor
outsl
inc
adc
popf
adc
add
out
cmpsb
scas
aaa
sub
idivl
dec
xchg
ss
adc
pusha
mov
ljmp
mov
adc
popa
popf
xor
and
and
cmp
ljmp
inc
cwtl
int
aas
cmc
nop
mov
mov
dec
loope
mov
repz
je
lock
sbb
into
add
adc
cmp
push
xor
imul
mov
aaa
xchg
sti
cmpb
pop
aad
cmc
adc
jp
shlb
test
add
cld
cmovb
ret
xchg
pop
adc
adc
mov
fidivrs
sbb
fwait
pop
sbb
ds
and
mov
cmp
insl
test
andl
mov
dec
xlat
push
xchg
or
leave
jbe
aaa
push
jp
sbb
arpl
push
push
int3
sub
and
lock
jl
xchg
lods
dec
mov
adc
adc
daa
adcb
mov
mov
jp
sub
test
push
pusha
push
cmp
sahf
sub
inc
outsl
sbb
packuswb
dec
mov
aas
mov
adc
or
pop
mov
scas
call
popf
test
sbb
test
insl
aaa
pop
adc
incl
inc
lock
cli
add
lret
test
sbb
pushf
mov
or
fwait
rcrl
hlt
push
ja
sub
in
aad
subl
nop
sub
fstpl
add
jle
lock
lahf
popf
inc
fists
mov
cmc
add
pusha
add
out
fidivrs
ss
clc
or
cld
add
arpl
sbb
lds
add
adc
inc
add
repz
sub
insl
adc
sar
fidivl
cmp
inc
and
cmovae
rorb
subl
jo
sub
mov
and
dec
add
insl
adc
ret
sub
das
mov
cmp
rcrl
xor
push
add
dec
scas
lds
push
add
popa
int
pop
clc
inc
out
dec
into
or
add
pop
cld
fnstsw
idiv
jecxz
leave
into
add
sub
popl
mov
pop
aam
ss
mov
out
xchg
dec
add
stos
and
xor
and
mov
or
pop
and
shlb
nop
inc
xor
inc
rcrb
cwtl
cmpsb
jle
cmp
xor
repnz
add
in
rep
shl
out
test
add
loope
sbb
push
fsubs
ja
cmpsb
insl
sti
add
arpl
outsb
lock
aam
pop
push
dec
adcb
cmpsb
jl
push
push
add
dec
cmp
shr
popa
and
sti
push
loop
cmp
ror
sbb
push
push
xor
int3
or
mov
orl
pop
cmpsl
rorl
add
sbb
jb
inc
imul
lret
ds
pop
mov
inc
cmp
adc
pop
and
pop
and
push
test
mov
sub
and
shl
repz
xor
mov
pushf
push
mov
fcom
ljmp
sub
lock
subl
pusha
fsub
in
or
xor
add
jge
mov
sbb
cmp
mov
xlat
add
push
mov
shrb
out
xor
add
int3
iret
add
into
push
rcrb
xchg
ret
ja
shlb
sub
pop
xor
test
jg
dec
push
inc
add
inc
or
sub
repz
xchg
call
pop
add
test
sub
out
mov
out
push
es
sbb
sub
jle
ffreep
mov
add
pop
and
and
add
lock
mov
pusha
mov
xor
xor
pop
into
mov
testl
movsl
jecxz
arpl
ss
inc
mov
bound
ds
push
movsbl
jg
in
push
lds
ffree
xchg
cmp
add
pop
pusha
adc
scas
cmpsb
pop
cmp
sub
jne
add
xor
fadds
outsl
lea
adc
add
sbb
test
popa
shll
fcoms
fcompl
cli
add
rcll
sbb
sbb
jo
fistpll
add
lods
cmp
add
xor
lock
scas
and
sbb
adc
add
insb
out
imul
cmp
pushf
xlat
jns
les
or
insl
sub
aam
mov
in
add
hlt
aas
js
out
ret
in
fiadds
adc
push
push
rorb
stos
int3
xchg
scas
jmp
pop
das
xor
cmp
rolb
lcall
add
insb
push
ret
pop
push
add
and
jl
mov
pop
add
mov
inc
and
icebp
test
daa
rcrb
and
nop
cs
mov
hlt
push
ret
pop
xor
scas
outsl
fisubrs
sub
loop
aas
pop
push
sbb
js
test
and
orl
sbb
in
mov
pop
ja
sarl
and
cmp
sbb
and
lods
bound
mov
add
and
mov
xor
xor
leave
mov
cltd
sub
fistl
mov
mov
stos
sub
or
jbe
xor
xchg
sahf
fsts
inc
push
push
fistpl
add
rolb
ljmp
inc
cmp
cmc
out
mov
in
rolb
xor
call
aas
addr16
data16
arpl
cmpb
xchg
frstor
pop
jge
aas
addl
jmp
adc
push
adc
add
xor
inc
imul
pop
adc
and
inc
pusha
jae
push
dec
or
xor
loope
popf
hlt
inc
push
shll
xchg
sti
jp
add
xchg
mov
or
stos
ret
cmp
aad
add
mov
sub
or
sbb
cmp
loope
mov
flds
ret
aaa
sub
or
xchg
mov
aad
fwait
xor
cwtl
pop
sub
and
xor
mov
fwait
dec
out
decl
xchg
test
jb
mov
adc
hlt
add
dec
shr
jp
repz
jmp
inc
cwtl
rolb
add
or
add
scas
aas
xchg
add
into
mov
xor
dec
enter
arpl
add
pop
pop
push
xlat
xchg
loope
in
sbb
inc
xlat
ja
into
add
sbb
das
xor
rolb
ficompl
les
loopne
and
or
pop
sbb
aam
push
mov
lret
shlb
push
add
dec
push
push
xchg
das
out
sub
cltd
jne
add
mov
test
jae
mov
repnz
vrcpss
fsub
call
daa
pop
sub
sarb
lea
stos
iret
pop
add
pop
mov
iret
rcll
lock
jbe
cltd
adc
roll
outsb
lds
add
lods
aaa
xchg
cltd
xchg
push
mov
cmp
inc
lds
add
inc
sbb
push
sbb
aam
lahf
add
nop
add
jp
adc
inc
ret
pop
sub
xor
mov
jg
mov
or
js
roll
mov
enter
mov
sub
add
sub
sarl
xchg
cli
rorl
and
mov
mov
es
jle
jg
repnz
cld
mov
xchg
cmpsl
test
lret
xchg
or
add
imul
aad
cmpsb
insl
aas
hlt
shrl
push
dec
mov
add
in
into
test
add
mov
xor
or
push
xchg
dec
adc
adc
mov
add
push
push
xchg
dec
inc
push
add
xchg
sbb
and
xchg
dec
dec
add
sub
adc
sbb
mov
les
cmc
pop
add
mov
cmp
sbb
lcall
inc
add
shl
test
xlat
adc
mov
insb
ljmp
add
mov
push
mov
jo
inc
xor
fcompl
jmp
add
insb
and
add
pushl
call
mov
roll
and
test
mov
mov
lret
es
sbb
neg
cmp
rcl
sub
pop
lds
loop
mov
xor
add
xchg
aaa
loop
jg
cmpsb
inc
xor
lcall
ret
aam
xchg
in
aas
xor
adc
loopne
mov
aam
mov
jecxz
or
jo
fcoms
loope
push
push
add
js
movb
mov
xor
inc
push
add
shlb
push
or
scas
sbb
xchg
out
jmp
add
jl
inc
dec
and
dec
lea
mov
xchg
lock
popf
or
and
lods
mov
jbe
loopne
push
ljmp
cmp
mov
dec
mov
jge
shrl
inc
aam
cmp
pop
lods
sbb
insb
add
xor
cmp
sub
aam
cld
loopne
sbb
lcall
xchg
pop
in
pop
xor
xlat
out
in
les
in
pop
push
inc
ds
add
xchg
sbb
mov
or
ffree
leave
pop
sti
repz
sub
flds
and
add
push
cmc
xor
scas
lret
sbb
cmp
and
pop
insb
mov
out
adc
xchg
insl
add
cmp
into
and
add
into
dec
sub
lahf
lods
shrb
mov
dec
divb
dec
or
pop
test
jno
cmp
push
mov
adc
add
mov
pop
je
fidivrl
mov
jecxz
jns
lahf
sub
sbb
repnz
or
daa
test
push
xorb
mov
or
or
mov
rorb
inc
ljmp
jmp
adc
xchg
and
dec
inc
jp,pt
fwait
insl
xchg
jmp
andb
gs
pop
sbb
inc
cmp
xlat
mov
sbb
cli
sub
call
pop
aaa
mov
jmp
fidivrs
inc
mov
ja
sub
ficoml
jge
sbb
push
scas
mov
inc
xor
arpl
push
xor
test
outsb
sbb
lea
leave
cli
mov
pop
test
mov
dec
add
bound
out
jo
hlt
shl
ljmp
out
sub
outsl
rcrb
addl
test
jno
out
dec
addr16
incl
ljmp
imul
cmp
add
sub
pushf
mov
xchg
adc
pop
sbb
ret
das
call
jne
or
lds
mov
addb
and
test
out
push
jecxz
js
lods
aad
jns
ror
iret
xor
mov
in
movsl
mov
sub
addb
ljmp
lahf
scas
add
xor
inc
inc
icebp
hlt
push
inc
shlb
add
add
inc
lods
scas
pop
aam
pop
fsubl
sub
push
push
scas
mov
repnz
sbb
cmp
pop
and
sbb
lock
and
je
roll
lods
add
faddl
jnp
test
pop
add
jmp
adc
sbb
mov
rolb
in
fistpll
shrb
inc
push
or
and
lods
jecxz
cs
add
movb
shrl
test
dec
cmp
iret
and
or
cmp
dec
mov
sar
mov
and
add
repnz
or
loop
pop
jl
push
movsb
ds
mov
cmpsl
daa
add
mov
mov
add
dec
xchg
stos
push
call
into
mov
mov
notl
and
add
jl
imul
push
sbb
mov
lock
cld
leave
iret
add
dec
pop
lahf
outsb
jecxz,pn
pushf
cmp
push
inc
rorb
stc
add
test
and
inc
bound
hlt
add
inc
mov
test
imul
jl
mov
arpl
rolb
cmp
aaa
sti
shlb
mov
aaa
data16
add
popf
add
pop
movsl
stc
sub
xor
mov
xchg
xor
push
mov
xchg
xor
xchg
jmp
int
ret
xchg
dec
daa
pop
adc
int3
xor
mov
jnp
adc
std
and
lods
leave
dec
in
sbb
add
inc
mov
add
push
sub
dec
xchg
push
xor
pusha
mov
mov
and
dec
fbstp
add
add
jo
pop
in
xchg
jno
sub
jp
shll
mov
mov
mov
aam
sub
in
sahf
add
out
fadd
movsl
cmp
je
pop
pop
movsb
imul
loopne
xchg
xchg
pop
push
outsl
add
pop
lock
inc
cmpsl
int
add
mov
das
cs
ficomps
rcl
dec
inc
test
insl
out
jne
add
sub
mov
sbb
lea
inc
movnti
add
push
push
imul
sub
inc
add
je
leave
nop
pop
popa
dec
scas
out
add
cmp
lea
clc
cs
andb
mov
push
add
push
dec
fsubs
loopne,pn
jo
sarb
out
mov
and
push
pop
lcall
pop
test
mov
fcoml
add
pop
adc
sahf
add
repz
xchg
cltd
pusha
and
gs
inc
mov
repnz
movsb
add
push
lcall
xchg
scas
jmp
pop
add
incb
jg
cmpsl
lods
outsb
rorl
rorb
push
or
faddl
cmpb
pop
xlat
or
jl
xchg
add
mov
and
add
call
mov
sub
mov
cmpsl
and
add
cs
out
cwtl
sbb
stos
ljmp
mov
ds
inc
xchg
adc
nop
jno
sbb
inc
push
mov
movsl
sbb
xchg
lret
leave
dec
push
loope
sahf
jno
sarl
aas
dec
mov
pop
xchg
add
sbb
mov
enter
fidivs
mov
cmp
xchg
ret
push
test
cmp
sub
adc
testl
dec
fcompl
add
mov
scas
rol
mov
mov
std
inc
jno
lods
out
cmp
dec
sbb
outsl
mov
adc
mov
popa
fs
mov
xchg
mov
mov
cmp
add
insb
add
loope
dec
jecxz
cld
ret
mov
and
mov
fistpl
dec
mov
rclb
jnp
testb
int
cmpsb
lahf
ret
mov
or
mov
dec
cmpsl
cmp
push
pop
mov
and
adc
fisttpll
mov
lods
insl
incb
pushf
arpl
std
xor
movsl
sahf
sarl
js
scas
jno
add
mov
pop
jbe
movl
out
pop
faddl
xor
aad
clc
mov
test
and
sub
sub
push
insl
and
jae
sbb
add
mov
add
icebp
pop
js
push
sub
ss
xlat
pop
xor
adc
pop
mov
dec
test
std
aaa
add
add
cmp
inc
dec
add
push
push
sub
js
movsl
shrl
adc
sbb
mov
pop
xor
icebp
js
das
negb
gs
jg
insb
add
xchg
orb
or
push
iret
xor
push
sbb
mov
push
or
push
and
push
sbb
dec
loopne
mov
dec
adc
or
xchg
push
pop
xor
iret
or
imul
xchg
pop
outsl
xchg
add
jge
add
dec
incb
mov
pop
cmp
sbb
mov
push
ds
nop
loop
add
mov
push
cmp
iret
jns
or
out
mov
imul
sub
add
pop
push
xchg
sti
dec
pop
add
aas
frstor
scas
fsts
cli
sbb
mov
enter
ficompl
inc
ret
xlat
imulb
ret
cli
dec
fdivl
aas
jae
popf
int
mov
mov
push
sbb
stos
shr
pop
repnz
testl
repnz
repz
cmp
xorl
push
aad
into
fcoml
pushf
stos
outsb
fcoms
add
test
mov
cmp
sub
inc
add
andb
dec
mov
xor
fnstcw
addl
cmp
xchg
mov
add
ret
mov
add
mov
jle
popa
add
and
ret
ret
notl
cmp
mov
cli
scas
add
mov
inc
mov
push
xor
test
insl
add
add
xchg
add
test
daa
xchg
lahf
mov
out
stos
sahf
and
add
or
in
ret
test
lcall
rorl
fs
mov
fidivs
in
add
push
pop
xchg
xchg
add
test
roll
xchg
sub
aas
jne
add
cmp
int3
cld
daa
sarb
xor
frstor
inc
in
sti
movsl
negb
cmp
add
popf
add
mov
mov
mov
mov
out
mov
mov
or
add
lds
mov
dec
add
data16
add
sub
cmp
mov
add
mov
dec
add
push
clc
sbb
fiadds
sbbb
movb
jo
jg
xchg
push
mov
cwtl
pop
adc
addb
xor
lret
je
xor
cld
faddl
mov
push
push
pop
sahf
sti
sub
add
imul
pushf
aas
scas
add
fwait
cli
das
leave
and
inc
push
pusha
sarb
ljmp
lea
icebp
adc
mov
popa
add
lds
cmp
stos
jno
test
pusha
ret
or
out
lea
out
bound
add
loopne
xor
mov
rorb
push
dec
sbb
add
es
push
jae
mov
into
fstl
outsb
add
imul
clc
jo
test
lock
les
mov
imul
add
adc
cld
lret
push
nop
and
sub
mov
pop
outsl
push
sbb
pusha
sbb
fwait
jmp
xchg
and
leave
sarb
ret
dec
and
getsec
add
jbe
mov
add
xor
inc
rcrw
xor
mov
sub
fcomps
dec
and
jns
xorb
xor
add
sub
mov
fstpt
cld
mov
ror
cwtl
nop
dec
mov
iret
cltd
jbe
scas
sub
mov
loop
mov
pop
insb
je
xchg
clc
cld
leave
and
push
adc
imul
add
mov
pop
arpl
xchg
mov
sahf
and
push
scas
xchg
ret
add
fdivr
pop
add
jne
and
fidivrs
mov
lods
jo,pn
add
push
mov
ds
filds
mov
faddl
xor
out
mov
je
insb
rcll
insl
adcl
xchg
imul
mov
cmpsl
testl
and
maskmovq
testl
test
adc
push
cmp
add
inc
jae
faddl
sub
xor
pop
add
and
daa
jno
inc
addl
popa
jp
pop
sub
mov
rolw
xchg
sbb
push
jno
cwtl
xor
mov
adc
mov
leave
bound
mov
cmp
sub
cwtl
pop
lret
push
pop
pop
fisttps
and
dec
cwtl
sarb
jmp
adc
jp
adc
loopne
jns
xor
xor
ja
into
mov
dec
dec
and
cmpsl
inc
shrb
xlat
pop
adc
inc
inc
dec
xor
test
imul
sbb
jb
push
loopne
mov
or
mov
jns
cmp
pop
sahf
aas
add
mov
rorb
pop
cli
std
jnp
mov
xchg
add
and
fwait
out
aas
mov
sbb
shlb
leave
pop
mov
and
out
clc
daa
aam
jmp
inc
out
into
sub
inc
ja
inc
in
adc
and
arpl
pop
and
test
mov
cli
cmp
nop
inc
push
mov
inc
fcmovbe
adc
jo
sub
imul
cmp
cmpsb
das
rcrb
mov
adc
push
jns
sbb
lret
mov
add
gs
add
mov
xor
pop
mov
pushf
outsb
cmp
xchg
test
xor
ficomps
add
hlt
sbb
push
add
lahf
mov
add
pop
stos
push
add
xor
dec
or
add
je
lds
dec
push
mov
fstp
roll
mov
fxch
aad
in
lcall
push
shl
xor
add
lahf
xlat
adc
pop
sbb
jl
into
dec
adc
xchg
std
mov
in
loopne
fcoms
movl
mov
cmpsb
sbb
inc
in
lds
mov
out
add
jnp
and
dec
xor
and
push
and
add
pop
cli
cmc
xor
xchg
add
std
inc
adc
cmp
inc
pop
add
jl
int
sbb
pop
add
es
aas
push
dec
pop
xor
pop
inc
in
inc
and
ret
imul
icebp
inc
jbe
add
xor
cmp
and
pop
pushf
sbb
lahf
or
pop
test
fcmovbe
lcall
movsb
pushf
fwait
mov
and
sub
cwtl
mov
fisttpll
xchg
mov
xlat
aad
xchg
mov
xor
mov
add
pusha
push
push
add
das
loopne
cs
xchg
inc
std
add
xchg
pop
adc
lcall
loopne
insb
bound
inc
push
jmp
in
xchg
dec
inc
shrl
cmp
in
jmp
pop
xor
add
shrb
scas
in
jmp
loop
jae
arpl
xchg
cld
ret
push
dec
add
add
pop
addr16
cmp
repz
jecxz
dec
mov
out
stos
ss
adc
mov
cwtl
sbb
std
add
in
dec
filds
add
inc
aad
icebp
jg
insb
mov
sbb
imulb
call
sub
xchg
or
sbb
loopne
sub
xchg
pusha
and
push
xchg
inc
push
js
add
mov
setge
add
push
xor
mov
sbb
inc
repz
xchg
push
movsl
lods
push
pop
pop
add
clc
cli
adc
cmpl
mov
lock
dec
push
dec
mov
inc
push
adc
pop
sbb
xor
mov
lods
jecxz
dec
xchg
sbb
cmpsb
or
lcall
inc
xchg
icebp
rorb
add
int
pushf
pop
add
lods
out
outsl
daa
lds
cli
inc
into
negl
insl
out
cmp
cld
sbb
push
orl
mov
sti
mov
orb
cmp
and
cmp
ljmp
addb
in
mov
pop
mov
pusha
inc
push
es
inc
inc
cmp
dec
cmp
or
rcll
pop
je
in
sarb
icebp
inc
push
stc
cmp
lmsw
add
or
imul
xchg
cmp
leave
out
cmc
cmp
iret
mov
adc
imul
mov
and
sbb
sub
hlt
adc
orb
enter
les
pop
add
jae
inc
add
mov
das
cmp
cli
add
fimull
inc
inc
mov
add
addl
adc
int
xchg
cmp
push
in
inc
loope
ret
js
cltd
inc
xchg
inc
and
jmp
mov
add
xor
xlat
add
add
lods
inc
ljmp
xor
idivb
fdiv
or
inc
andl
mov
or
xchg
cmp
mov
mov
ss
repz
fwait
rcrl
cltd
stos
inc
sub
pop
les
rep
or
inc
lds
xor
add
stc
add
iret
arpl
or
cmp
jnp
fsts
sbbl
test
leave
test
dec
ja
cmp
sub
cmp
pop
mov
outsb
mov
out
and
sub
push
adc
ret
add
hlt
push
clc
js
or
dec
subl
or
aam
mov
pop
ja
mov
loop
push
and
dec
out
dec
or
js
int
xchg
add
inc
in
jg
out
sub
and
inc
testb
es
sbb
mov
mov
lock
jg
mov
in
testl
scas
movsb
add
fwait
enter
push
push
loopne
popf
sbb
ret
cmpsd
test
std
fists
cmpsl
inc
xlat
outsl
stc
ljmp
sbb
or
lds
rcr
mov
push
mov
pusha
pop
pop
dec
push
mov
sahf
mov
sbb
and
ret
cld
inc
dec
jb
and
jbe
ds
es
push
and
jge
add
jbe
jb
inc
lea
faddl
jl
cwtl
xchg
mov
mov
push
pop
arpl
lahf
sbb
out
push
push
pop
xchg
adc
mov
jns
push
pop
mov
add
mov
test
shrb
bound
xor
int3
ret
push
push
in
into
jns
sub
bnd
sbb
shr
addr16
or
and
stc
jmp
and
into
jg
add
xor
jge
call
cltd
shrb
imul
sub
add
xchg
je
jl
incl
adc
jns
scas
inc
jae
cmc
fists
mov
add
in
or
lret
cmp
xor
popa
jl
test
lcall
ret
add
lds
jne
push
loope
push
aad
xchg
add
cltd
adc
lods
faddl
inc
inc
clc
xchg
xor
dec
jp
lock
fisubrs
sahf
cs
mov
and
cltd
icebp
addr16
rol
xchg
repnz
or
mov
pop
adc
cli
rcrb
mov
int
dec
add
inc
add
test
or
rcrl
dec
cmp
ss
sahf
xchg
rolb
and
out
popa
pop
mov
cli
adc
xchg
mov
push
push
push
jle
movsl
shrb
add
pop
push
gs
pop
push
lea
jo
add
lock
fwait
inc
dec
dec
out
xchg
mov
loop
pop
std
inc
incb
or
rclb
icebp
in
add
stos
push
mov
push
movb
dec
cmp
mov
sub
mov
mov
arpl
mov
sbb
inc
addr16
dec
les
jne
stos
daa
rclb
and
xchg
adc
jl
call
sbb
ret
inc
xor
add
cmp
add
andb
mov
aam
in
pop
faddp
jne
bound
xchg
pushl
cld
xor
mov
in
iret
pop
mov
push
jns
and
add
pop
pop
enter
repnz
add
in
cld
std
sarl
pop
sbb
jne
and
jo
adc
xchg
pop
push
cmp
jmp
imul
xor
add
or
mov
cmp
push
les
push
scas
cmpsb
mov
add
in
push
js
rolb
movsl
pop
sbb
lcall
add
mov
pop
adc
add
cltd
push
sub
call
rol
inc
push
out
aas
sub
add
cs
mov
sub
sbb
in
adc
inc
xor
loopne
jle
into
loop
mov
xor
pop
int
add
dec
roll
inc
les
aaa
add
push
jne
movsb
outsb
fsubs
imul
add
add
loope
jecxz
stos
inc
rolb
adc
xchg
add
jle
xor
je
inc
sub
rclb
and
mov
popf
lea
cmc
bound
and
mov
inc
daa
repnz
xor
sub
adc
leave
sub
ret
sbb
add
push
in
jg
mov
mov
mov
xor
xchg
xor
pop
das
and
sarb
imul
add
je
and
sub
loope
push
mov
test
jecxz
insb
loop
xor
shlb
push
inc
sub
adc
lahf
sub
add
or
daa
iret
xchg
fisubl
testb
push
or
rorb
sub
cs
and
cmp
pop
cld
add
icebp
mov
nop
rol
aaa
xor
insl
and
mov
inc
repnz
std
fstpl
add
aam
adc
scas
shr
push
sar
cmp
js
jnp
stos
shll
add
stos
xchg
sbb
lahf
cmpl
xor
lret
test
lods
lods
sarb
adc
adcb
into
test
xor
jns
jp
sti
int3
gs
sub
add
fnstsw
xchg
std
jnp
fwait
jae
xor
push
ficoml
dec
add
xor
ret
or
dec
imulb
loopne
lods
mov
cs
jo
iret
sti
cmp
add
cmp
out
in
xchg
ret
jg
or
xor
adc
mov
add
xor
fwait
xchg
fnstsw
jno
mov
mov
out
inc
dec
dec
or
xchg
arpl
or
cmp
out
mov
or
outsl
rorb
mov
fbld
jns
pop
inc
xor
int
jmp
imul
push
add
out
sub
mov
loope
popf
sahf
scas
inc
loope
sub
fcmovnbe
jmp
xor
inc
cmpsb
mov
xor
lods
mov
jnp
movsb
inc
test
inc
ret
adcb
cli
or
loop
xchg
cmp
cmp
push
xorb
mov
cli
imul
pusha
inc
sbb
pop
add
test
dec
arpl
push
aad
add
or
mov
xlat
xchg
jnp
orl
inc
sarl
ljmp
out
mov
pop
push
mov
cmpb
pop
int3
ret
mov
jge
hlt
adc
idiv
pop
xlat
lods
cmp
scas
xor
ds
inc
sbb
and
jnp
xor
cmp
xor
out
nop
lahf
sub
and
add
xchg
aad
pop
xor
xchg
ret
xchg
test
and
jp
pop
sub
fidivl
cmp
jle
mov
jg
adc
xchg
pop
add
mov
mov
je
inc
fidivl
in
cld
xor
jp
test
sub
inc
popa
ljmp
lahf
sub
push
xadd
inc
push
mov
xchg
stos
or
cmp
mov
or
es
sub
mov
mov
sub
adc
loope
dec
outsb
push
jle
pop
cmp
add
adc
lds
jb
mov
push
add
pop
mov
adc
leave
fwait
jmp
repnz
mov
and
add
cmp
leave
std
fdivrl
add
test
add
mov
and
pop
addr16
mov
hlt
fs
mov
in
out
sbb
xor
stos
jo
rcrb
sub
or
scas
push
and
push
in
adc
jnp
add
jp
cmpsb
pop
cs
add
and
sub
fwait
sbb
add
rcrl
arpl
lock
orb
pop
add
nop
stos
mov
add
int3
adc
lds
dec
inc
or
lahf
out
cmp
pop
addr16
int3
xor
cmp
cmc
shrb
lret
into
dec
and
pushf
xchg
cmp
mov
sbb
push
cmp
sub
cmpsl
dec
adc
daa
test
add
inc
dec
adc
mov
outsb
shl
fstpl
add
lods
fistps
add
out
xor
adc
add
mov
xor
inc
imul
sete
test
push
cmp
icebp
repnz
insl
in
and
ljmp
sub
rcrl
mov
pop
mov
jg
fadd
cmpsl
std
cmp
rorb
nop
jnp
cmp
stos
add
not
inc
dec
out
es
mov
xor
dec
add
lret
neg
cmpsl
cmpsb
cmp
add
and
cld
add
aaa
cwtl
dec
xor
add
and
sbb
movl
jne
xchg
xchg
idivb
dec
xchg
shlb
test
out
add
fs
mov
in
adc
lcall
sbb
pop
push
mov
daa
xor
mov
push
xchg
inc
aad
loope
sbb
add
push
lahf
add
ljmp
movsb
loop
jbe
mov
test
inc
ss
loopne
mov
jae
push
es
dec
imulb
pop
in
sti
subl
and
adc
mov
outsb
pushf
pop
adc
mov
jo
ljmp
ficoml
clc
add
lahf
push
sahf
ja
xchg
inc
dec
arpl
out
orb
push
bound
mov
mov
sahf
or
push
movsl
subl
sbb
inc
pusha
scas
xor
mov
fdivrl
xor
jne
lock
mov
inc
cmpsb
mov
add
lahf
repz
movsl
mov
stos
cmp
add
fcomps
inc
adc
xor
sbb
insl
add
jge
loopne
push
push
imul
shrb
add
pop
aad
push
add
or
add
test
pop
cs
test
mov
pop
rcrl
dec
add
push
jecxz
pop
jmp
jae
xor
xchg
lock
or
mov
sub
add
or
xor
leave
and
mov
roll
cmpsl
fists
shl
jbe
dec
repz
rorl
mov
inc
add
sti
fisubrl
push
clc
fildl
xor
xor
add
or
inc
push
incb
fists
sub
loopne
add
sbb
xor
jno
or
adc
add
ret
adc
push
loope
cltd
out
jo
orb
and
adcb
cmp
cmpl
and
mov
adc
sub
xlat
pop
out
add
adc
pop
adc
add
int
pop
mov
scas
add
dec
or
fwait
ret
cmpsl
xlat
mov
adc
ret
sti
xchg
and
xchg
mov
sub
popf
add
and
inc
pminsw
pop
cmc
or
sbb
loope
adc
sub
sbb
sbb
stos
test
sbb
sti
push
in
movsl
cmpsl
pop
or
aaa
xchg
js
jno
cwtl
xor
mov
mov
outsb
aaa
pushf
sub
push
addr16
jb
cli
ret
sarl
nop
repz
mov
loopne
mov
jne
dec
push
rclb
int3
mov
sbb
adc
sub
jp
or
sti
cmp
fistl
pop
outsb
or
cmp
cwtl
push
cmp
xchg
adc
mov
inc
stos
add
dec
xor
mov
inc
gs
add
jg
xor
inc
outsb
add
adc
fnstsw
sahf
rcl
xorl
inc
push
xchg
xchg
ss
movsb
sub
sub
dec
add
push
imul
loope
or
nop
inc
xor
mov
push
mov
add
inc
repz
pop
loopne
pop
hlt
push
mov
add
dec
ret
arpl
ror
scas
push
stc
push
add
dec
and
push
loop
add
pop
cmpb
lock
xchg
dec
mov
sub
ret
add
out
inc
ds
js
cmp
std
add
shll
enter
mov
rcr
ret
pop
sub
add
cmpsl
test
inc
pop
mov
and
inc
dec
out
jns
cmp
add
lcall
sbb
orps
pop
movsb
xchg
insb
inc
mov
push
xchg
stc
rolb
xchg
and
mov
and
mov
pop
cmp
mul
lret
int3
and
push
push
add
or
add
cmpsl
movb
mov
mov
xor
leave
in
ds
popa
xlat
mov
xor
adcl
or
mov
pop
sbb
sti
das
aad
push
shll
cmp
inc
cltd
xor
pop
sbb
cs
stos
xchg
je
xchg
add
test
or
push
mov
sub
insl
add
fld
dec
and
mov
add
mov
push
add
call
imulb
push
aaa
fidivrs
cmp
xor
je
cli
mov
divl
dec
pop
lret
outsl
hlt
aas
cld
in
mov
mov
insl
in
or
mov
pop
lods
adcb
call
test
sub
into
mov
cmp
imul
or
sarl
add
fincstp
ja
clc
adc
mov
fsubl
add
sbb
shlb
add
aaa
mov
mov
jo
insl
and
xchg
mov
cmp
cmpsb
add
mov
adc
mov
cmp
push
xchg
lcall
jecxz
out
lds
sbbl
mov
jg
mov
pusha
cmp
push
cmpsb
push
mov
in
ret
sub
push
cmp
pop
add
mov
out
inc
lods
outsb
add
jle
pop
scas
and
add
gs
inc
insb
inc
mov
les
cmp
push
insl
pop
push
inc
pop
out
out
and
addl
and
fildl
clc
pop
es
outsl
arpl
test
shrb
iret
and
into
add
xor
out
jl
fsubrl
test
mov
jg
sbb
insl
stos
sbb
add
push
repnz
mov
add
pop
iret
cmp
cmpsb
cmp
mov
sub
xchg
add
push
fsubrp
add
popf
fistpl
inc
sahf
lcall
ret
push
shll
ljmp
inc
mov
test
push
inc
xlat
add
jne
pop
loop
inc
imul
pop
js
mov
pop
jecxz,pn
out
cmp
xchg
lcall
sahf
pusha
cmpsb
popl
loopne
outsl
stos
mov
in
vmovsd
ret
fidivl
xor
subl
jge
jg
add
cmp
sub
adc
es
rorl
cmpl
xlat
loope
jo
or
cmp
aaa
sbbb
mov
pop
adc
cld
int3
add
sahf
bound
scas
pop
fisubl
add
cmp
inc
cmpsb
into
adc
out
add
mov
and
repnz
cmp
fsubrs
insb
pop
inc
jo
mov
ja
or
mov
jmp
xor
add
std
pushf
scas
pop
in
mov
out
pop
fnstenv
call
pop
jne
data16
addl
jecxz
or
mov
roll
js
adc
inc
add
popa
jno
ja
add
call
ret
pop
sbb
adc
adc
jg
sub
sub
xor
mov
xor
or
popa
add
jnp
test
sbb
clc
cmp
or
push
sbb
inc
push
addb
aaa
adc
rorl
mov
xchg
xor
sbb
and
sti
scas
mov
cmpsl
mov
xchg
sti
aas
out
xchg
outsl
cmp
cmpsl
gs
add
cmpsl
inc
orb
daa
jp
aad
mov
sbb
test
sarl
xchg
mov
popf
fstpl
inc
xchg
imul
scas
cmp
jae
cmp
test
push
sub
jp
xchg
push
sub
sbb
inc
stos
loopne
jne
ret
cmpsl
sbb
adc
and
ror
mov
js
cmp
push
insl
or
jp
adc
nop
inc
sub
popa
jg
mov
cmpb
cmpsb
pop
daa
out
push
mov
loop
out
mov
jb
pop
xlat
or
jg
lret
addl
pop
add
sbb
sahf
push
mov
cwtl
jle
or
adc
sbb
ret
andl
sbb
mov
aam
shll
ss
cmp
jno
adc
mov
push
sahf
or
mov
cmp
adc
lods
pop
and
inc
ret
loopne
adc
mov
cmp
movsb
adc
pusha
sub
mov
mov
enter
and
mov
les
popa
jp
mov
lret
loopne
adc
popa
push
sub
xorb
push
aaa
sbb
pusha
sbb
cs
add
ficomps
add
ds
loopne
mov
fs
je
pop
inc
or
and
jp
sub
movnti
push
outsl
cltd
mov
test
and
rcrb
push
and
pop
lods
cmp
imul
andl
movsl
aam
std
dec
adcb
cmpl
mov
mov
loopne
pop
lds
mov
call
push
xchg
mov
insb
push
arpl
test
or
imul
cmp
fidivrl
mov
mov
int
rcrl
scas
daa
sbbb
or
rsm
adc
pop
pop
sub
sbb
sub
cmp
gs
dec
std
lea
adc
or
negb
or
cmp
bound
jecxz
add
and
mov
test
decl
movl
xor
nop
push
popf
xlat
ret
addr16
std
pop
push
lret
push
dec
bound
jle
xor
sub
xchg
sarl
aas
lahf
and
sbb
mov
sub
push
mov
movsb
test
inc
in
popf
fldl
inc
add
orb
ja
lret
clc
andb
jp
or
lods
add
ja
dec
addr16
std
loope
mov
mov
ja
pop
cltd
sarb
sub
lcall
add
pop
adc
arpl
out
add
mov
out
xor
inc
pop
mov
adc
divb
xchg
pop
lods
pusha
jecxz
das
jo
filds
ret
add
jle
fs
dec
ret
mov
mov
add
aas
jge
repz
rcll
movsl
sub
in
arpl
stos
out
test
jno
test
inc
flds
cmp
std
into
pop
and
insw
in
jmp
lret
or
jle
sbb
add
movsl
fcomps
test
bound
sbb
inc
mov
std
cmpsl
xor
fiadds
call
xchg
inc
push
loopne
sub
jne
jp
ss
xchg
dec
les
into
dec
shrl
and
rol
push
pop
mov
mov
xor
and
mov
aam
jmp
je
incb
mov
pop
jae
add
mov
sub
aas
rcrl
jb
xor
cmp
push
popa
xor
scas
jl
icebp
cwtl
movsl
add
push
push
ret
sarb
add
push
sahf
lods
ds
imul
fcomps
ds
sbb
fisubs
fiaddl
adc
pop
add
sbb
jge
mov
inc
sub
mov
xor
mov
setne
imul
gs
pop
ss
pop
sub
je
jb
push
in
mov
aaa
dec
dec
add
adc
push
mov
mov
add
add
sahf
dec
fsub
cwtl
icebp
lahf
jno
and
mov
add
loopne
test
outsb
inc
inc
push
push
mov
and
mov
xor
bound
add
insb
add
xchg
stos
adc
or
into
mov
add
or
stos
icebp
outsb
add
ret
xor
jae
jno
inc
sbb
rorl
mov
jns
or
xor
pop
fdivrs
in
lock
add
orl
imul
add
dec
ret
ss
dec
fdiv
sub
cmpl
xchg
call
out
xchg
cmp
mov
xchg
add
sbb
xorb
test
arpl
ret
fiaddl
adc
leave
mov
cmpsb
fwait
adc
cmp
cmp
cmp
insb
rclb
dec
enter
icebp
sbb
mov
inc
add
sub
sub
loop
shlb
jne
mov
add
push
mov
fwait
add
mov
xor
jmp
lret
roll
xchg
mov
mull
mov
xchg
lods
pusha
or
add
mov
ds
rol
add
fcompl
scas
pop
add
fxch
sbb
ja
lock
or
xor
lea
out
pop
add
jmp
cmp
inc
add
pop
sahf
jo
ret
pop
xchg
fstpt
pop
jg
cmp
ljmp
dec
add
jle
ret
or
xchg
and
test
jg,pt
icebp
adc
hlt
outsb
and
xor
push
fisubs
int3
sahf
movsl
lahf
push
push
add
cmpsl
arpl
cmp
sarb
call
dec
add
push
xor
xchg
adc
inc
nop
std
pop
mov
pop
les
adc
jecxz
pop
inc
popf
push
aas
aas
add
out
std
xor
add
add
ficompl
jne
jae,pt
add
nop
in
movsb
add
or
mov
rcl
cld
add
nop
test
lods
loope
mov
push
cmp
jl
sahf
mov
dec
addl
lcall
jbe
out
cmp
mov
add
nop
jns
dec
ja
inc
rcrl
xchg
inc
loopne
and
and
mov
mov
push
sub
xor
cmpsb
add
stos
pop
add
add
incb
addb
mov
pop
imul
sbb
and
add
mov
and
and
dec
rcll
push
es
aad
xchg
test
icebp
and
dec
imul
sbb
pop
mov
pop
in
add
pop
hlt
daa
ljmp
dec
aas
stos
leave
mov
fwait
adc
mov
loopne
scas
daa
dec
pop
inc
ror
jge
mov
ret
fiaddl
ret
test
cmpsb
and
int
enter
adc
jno
inc
pop
sbb
mov
ret
ret
ret
add
adc
fcmovb
ficoms
inc
push
fadds
ja
lret
pop
repz
in
add
scas
jmp
dec
ret
add
or
popf
pop
add
inc
and
fildll
jb
ljmp
adc
jbe
test
cmp
sbb
add
pusha
shr
rolb
inc
or
inc
xchg
and
push
cmp
ror
popa
ret
out
cmpsb
inc
lret
shll
add
xor
adc
ret
mov
inc
mov
mov
roll
push
mov
out
xchg
fisttpl
insb
mov
mov
cmp
dec
shl
add
inc
cmp
or
adc
add
rcrb
mov
insl
add
test
push
mov
add
mov
cmp
adc
test
insb
jbe
jae
orb
cmp
xor
ror
icebp
es
push
add
mov
int3
cmp
sti
jmp
cwtl
sbb
pop
push
imul
int3
roll
scas
xchg
cmp
icebp
xor
add
data16
jge
inc
add
add
mov
sahf
mov
ds
inc
adc
shll
std
lods
add
addr16
aas
mov
pop
rolb
push
int3
ret
push
push
cli
sub
fs
add
xchg
sub
aas
add
cmp
aam
add
leave
repz
in
sbb
adc
andl
fcomi
xor
push
std
shlb
adcb
lcall
jae
ds
lock
in
add
mov
mov
imul
mov
sahf
and
dec
loop
sub
xor
stos
or
pop
lods
cmp
mov
flds
cmp
dec
iret
movsl
bound
add
push
pop
push
aaa
mov
pop
add
jnp
adc
push
mov
lds
mov
scas
and
rorl
arpl
xor
push
in
inc
mov
fistl
aas
sbb
aas
cltd
dec
and
mov
mov
frstor
jl
xchg
addr16
out
push
add
cmp
cmp
add
int3
enter
add
mov
dec
lock
mov
bound
adc
add
rorl
add
fcoml
mov
or
jl
ret
mov
sahf
fcoml
fistps
jbe
cmp
in
fiaddl
mov
mov
cmp
insb
lock
jo
sub
mov
enter
dec
fmulp
add
mov
sti
inc
add
jg
jmp
add
sub
lahf
js
add
dec
aad
mov
mov
std
rcrl
inc
add
imul
lock
mov
arpl
loop
sub
sub
in
sub
jmp
add
ja
adc
lock
inc
lods
and
push
cwtl
cmpsb
cmp
ret
xlat
ret
push
mov
cwtl
or
and
cli
sar
js
mov
mov
arpl
cmp
xor
xlat
jb
jae
inc
fcompl
xchg
mov
add
inc
movsb
xchg
add
mov
mov
test
les
fcmovne
movsl
or
hlt
jle
mov
add
pop
inc
jecxz
test
adc
inc
rolb
sub
mov
add
mov
sub
sub
sbb
mov
cmp
mov
imul
add
lret
rcll
into
pusha
push
gs
add
jb
mov
sbb
subl
jae
stos
push
xor
xchg
cmp
pop
or
ret
sarb
fistpll
testb
test
rcrl
jnp
cmpl
mov
jp
jnp
cmp
adc
inc
mov
bound
daa
aas
jnp
sbb
cmp
mov
scas
jmp
dec
cmp
out
dec
push
pop
ffree
je
sbb
jnp
insb
sbb
stc
leave
pusha
aad
in
cmp
aas
sub
je
ja
jp
addr16
xor
sbb
push
xchg
sub
test
push
and
sbb
adc
daa
cmc
cmp
mov
cmp
cltd
dec
cmp
cmp
and
or
jp
pop
clc
cmpsl
cmp
popa
pop
xchg
or
cli
leave
pop
in
jl
pop
and
push
adcb
aam
and
add
fwait
insl
shrb
dec
sbb
sub
loope
cltd
std
jne
int3
xlat
push
movsb
aam
jg
scas
das
scas
sub
or
popa
jp
fsubrl
lds
mov
sahf
mov
dec
bound
lret
cld
adc
jae
imul
and
fildl
shrb
xor
sub
mov
loope
mov
add
imul
cltd
scas
push
xor
std
stos
jg
mov
push
push
adc
mov
cld
cmp
xor
loop
gs
call
add
sub
jge
xchg
ret
loop
aad
movsl
insl
pop
popf
fabs
cmpl
or
rclb
mov
and
inc
lcall
cld
inc
rclb
mov
lcall
daa
push
xor
sbb
insl
fwait
popa
int
movsb
sbbl
lahf
pushf
pop
inc
pop
ret
xor
gs
push
pop
mov
or
dec
and
daa
bound
mov
push
out
and
loope
mov
xlat
loopne
mov
mov
push
add
cs
push
ret
loopne
daa
jge
cmpsl
imulb
jb
xchg
mov
adc
add
mov
sub
mov
jmp
xchg
push
in
pop
stos
lods
xchg
adcb
jo
out
cwtl
xchg
fs
int
jne
lahf
adc
leave
ret
loopne
test
cwtl
cs
cmp
xchg
mov
cli
or
aas
imul
imul
add
mov
mov
je
pop
arpl
mov
fwait
sub
pop
add
sbb
inc
movsb
jge
xchg
and
cmp
adc
add
orb
xor
lcall
rcll
loop
sbb
mov
decl
fbld
in
xchg
popa
rorb
out
xchg
jmp
mov
scas
or
mov
pop
xor
cmp
les
dec
pop
sahf
sub
sbb
mov
lds
aam
addb
js
daa
and
add
inc
mov
xlat
insl
aas
out
loop
and
stos
lods
cmp
adc
loopne
and
ret
cmp
pop
mov
cmp
pop
jg
lds
in
mov
cli
xchg
fldt
notb
lret
cmp
sub
call
jbe
mov
xor
seta
addr16
inc
shlb
call
or
inc
stc
add
and
xchg
sub
adc
adc
sub
push
mov
dec
cmc
jne
mov
pushf
push
push
mov
xor
cs
lahf
inc
pop
sbb
push
cmp
mov
sub
out
aam
adc
gs
or
sbb
mov
jmp
xchg
push
out
xchg
je
mov
lret
pop
rorb
sub
push
adc
fdivl
add
stc
addl
cli
or
and
mov
dec
lods
and
int3
pop
loope
leave
lcall
cmp
es
cmpsb
out
leave
mov
add
notb
loopne
and
dec
ljmp
sbb
out
imul
ret
pop
fimuls
sub
mov
mov
jp
pop
jns
jl
dec
xchg
push
dec
data16
loope
sbb
daa
inc
imul
jbe
mov
mov
lock
jl
lret
adc
jo
daa
pusha
add
jae
scas
clc
lahf
add
jge
fucomip
aad
mov
lahf
std
cmp
rcrl
fisubs
mov
push
jne
jp
or
add
jno
gs
les
or
lret
sub
dec
push
movsb
pusha
inc
add
sahf
ljmp
push
sub
and
aaa
inc
jae
mov
mov
push
mov
shlb
or
les
mov
jno
lea
aaa
pop
push
xlat
xorb
add
icebp
clc
bound
jge
lods
orb
je
adc
pop
addr16
scas
pop
jge
repz
fwait
mov
jg
andl
lds
cmp
xchg
push
cmp
ret
cmpsb
mov
and
push
xor
rcll
mov
add
mov
lock
dec
hlt
xchg
lret
push
jmp
mov
lret
sbb
es
add
arpl
jl
repz
fdivrl
cwtl
fldt
js
js
xchg
inc
and
aad
or
popf
lcall
cs
and
and
push
outsb
jae
push
dec
popa
sbb
sarl
lcall
adc
lock
out
bound
das
lods
stc
cld
pop
lods
push
shrl
push
add
dec
adc
jnp
pop
add
fisttps
xor
xor
mov
jle
mov
lods
mov
lds
or
xor
mov
ret
out
pop
push
or
cmp
enter
adc
jp
adc
ffree
cmpsb
mov
scas
xchg
pop
add
test
xchg
sbb
lds
mov
mov
push
sbb
das
repz
xchg
shrl
loopne
xor
fs
or
jnp
les
lea
xchg
insl
pop
xchg
int3
xor
hlt
xor
lock
adc
ret
add
out
and
outsb
xchg
repnz
pop
push
aad
inc
test
inc
inc
orb
xchg
mov
movb
jo
testb
jg
fsubl
cmp
xchg
fistpl
push
aaa
sub
mov
mov
push
cs
cld
movsb
add
or
and
std
jae
sbb
add
push
jo
inc
test
mov
sbb
std
xor
fidivrs
mov
adc
mov
cmpsb
pusha
push
sub
mov
mov
xor
in
scas
fadds
push
cmp
cld
add
and
pop
or
or
je
addl
sarb
icebp
jecxz
jo
or
cmp
or
repnz
test
mov
aaa
pop
dec
add
test
inc
sub
add
mov
iret
lods
inc
cwtl
pop
test
add
clc
lock
lods
out
cmp
add
mov
inc
xchg
pop
and
xchg
jle
cmp
xlat
push
push
stc
pop
mov
call
pop
shll
movl
add
iret
fnstcw
push
mov
push
mov
scas
xorb
xchg
add
jmp
pop
pop
sti
aad
push
and
or
icebp
cmp
cmpsb
aas
push
ret
das
out
or
jo
in
xorb
push
sbb
lea
cmp
fwait
lock
xor
add
orb
add
nop
mov
cld
scas
push
mov
out
xor
sarb
add
cmp
xchg
inc
mov
fbstp
push
inc
push
mov
sbb
sub
sbb
xor
xchg
fwait
mov
loop
test
out
lahf
fldl
or
cmp
popa
cmp
mov
jne
add
sub
leave
rorl
pop
in
mov
adc
je
xor
xor
cmp
mov
lret
mov
outsb
add
cmc
push
add
and
outsl
mov
or
aas
adc
shll
cli
and
cmp
pop
jo
outsl
push
xor
aaa
popa
sahf
pop
aam
jl
loope
lcall
push
and
inc
xorb
mov
in
add
xor
xchg
das
cmp
dec
xor
push
lock
out
hlt
cmp
add
pushf
push
loop
iret
aad
dec
xor
pop
or
inc
adc
mov
es
lcall
push
push
adc
inc
inc
lods
mov
jns
iret
rcll
adc
outsl
mov
stc
int3
jno
and
test
inc
pop
push
jp
inc
jns
insl
and
mov
add
pop
cli
popa
mov
cltd
mov
adc
dec
add
aam
popa
clc
ds
mov
jecxz
enter
adc
and
xchg
mov
mov
add
xchg
insl
clc
push
xchg
rorl
add
lcall
pop
add
jb
mov
ret
pop
ret
adc
ljmp
fcompl
pop
test
jp
lock
or
adcb
mov
ds
sub
das
adcl
cmp
movl
mov
ret
add
cmp
add
inc
mov
add
ja
scas
fs
out
popf
and
mov
pop
loopne
mov
jb
pop
push
add
insb
shll
lock
inc
popa
mov
xorl
mov
or
ret
xchg
add
push
mov
or
jbe
ljmp
int3
adcb
aas
insb
add
or
jp,pn
sub
add
jne
hlt
mov
clc
sub
push
lock
xchg
dec
loopne
icebp
in
xor
or
cmpsl
leave
scas
and
roll
cli
adc
cmp
adc
xchg
mov
sub
rorb
imul
lods
add
add
je
sbb
inc
dec
das
mov
in
dec
popa
mov
daa
shrb
scas
pop
aas
out
add
pop
pop
inc
rcr
jp
xor
int3
xor
add
mov
inc
push
pop
loop
test
rolb
cmp
jo
jne
clc
fildl
call
lds
inc
lock
and
es
repz
jne,pn
mov
mov
dec
add
mov
add
cmc
jae
test
jl
adc
faddl
arpl
mov
add
add
call
add
cmp
pop
pusha
das
xchg
mov
jmp
ds
sub
enter
adc
sub
aas
js
mov
cmpb
add
mov
ret
call
add
mov
and
subl
inc
cmp
jp
pop
pop
rorl
dec
pop
data16
cmp
adc
xor
sbb
cltd
out
and
jns
and
vpshrdw
mov
add
adc
mov
sub
into
mov
sub
or
scas
push
cmpb
imul
rcl
and
or
insl
cmp
ja
and
jae
add
dec
sub
rolb
add
push
mov
cmp
cwtl
sub
cmp
jmp
jle
mov
shr
mov
add
add
pop
jae
cmp
xor
pop
fidivrl
add
or
push
in
xchg
je
rclb
loop
mov
dec
xlat
sti
adc
pop
fwait
xor
rolb
lahf
add
das
int3
pop
pop
pushf
gs
xchg
stc
sub
add
pop
out
out
fdiv
ss
pop
cmp
jg
xchg
inc
incl
jo
fisubrs
pop
roll
add
enter
add
lcall
or
push
push
movsb
ljmp
push
push
fidivrs
mov
add
loop
fs
dec
ss
adc
mov
push
sub
lcall
adc
push
add
xchg
fbstp
push
inc
stos
pop
gs
add
sub
inc
push
movsb
and
lods
mov
shll
push
movsl
add
inc
shlb
xlat
int3
xor
out
outsb
pop
pxor
xchg
pop
jnp
stc
cmp
repnz
xchg
jg
addr16
ret
dec
mov
add
xbegin
cmpsl
orl
jp
xor
cmp
cmp
and
rol
addb
inc
mov
sub
loopne
inc
push
inc
xor
pop
xor
jo
mov
xor
orb
out
fsub
mov
mov
ss
push
or
mov
mov
imul
add
ds
mov
insb
add
push
jns
add
xchg
xchg
add
pop
movsb
cmpsl
cld
ds
fadd
leave
and
in
icebp
popf
mov
and
sub
outsb
xor
add
orb
cld
xor
into
lcall
mov
stc
call
mov
daa
sub
mov
xor
rcrb
ret
cs
and
push
shrb
sub
add
jbe
loope
push
adc
adc
sbb
mov
inc
dec
pop
sbb
add
dec
lret
scas
fs
insb
rorb
xor
inc
sub
cmp
mov
loope
in
fs
push
jecxz
add
mov
insl
sbb
daa
inc
jno
repnz
mov
inc
imull
ret
jle
cmp
push
loop
in
jecxz,pn
inc
add
push
call
sar
sbb
and
in
pop
inc
jo
cmp
inc
add
pusha
aam
in
push
sub
fsubp
das
adc
mov
push
ljmp
outsl
cmp
in
add
incb
lds
push
or
mov
add
jp
pop
pop
cmp
mov
add
stc
inc
sahf
fcoms
lret
push
fnstcw
mov
insb
xor
mov
pop
shll
testl
jnp
inc
jge
xchg
in
cld
push
mov
xchg
mov
decl
movsl
test
and
mov
shr
sbb
dec
fs
sti
sahf
jg
int
pop
or
outsl
sub
inc
repz
es
and
add
xchg
insb
pop
add
cmp
lods
cmp
push
lahf
pop
in
xor
imul
jno
pop
push
mov
or
sub
xchg
or
add
mov
outsl
mov
pop
pop
cmp
mov
daa
mov
mov
adc
push
addr16
fisubrl
mov
pop
mov
push
pop
imul
adc
inc
std
xor
adc
sbb
push
scas
jns
fsubr
pusha
into
mov
mov
mov
movsb
iret
mov
or
push
and
xchg
decl
sbb
leave
inc
stc
adc
add
adc
add
jg
insl
push
dec
or
push
jp
pop
stos
cmp
push
inc
scas
lods
out
cmp
mov
pop
cmp
add
pop
push
xor
je
inc
pop
sahf
test
repz
mov
xchg
adc
push
jge
popf
mov
aaa
or
daa
ljmp
inc
icebp
mov
xchg
xchg
fwait
cmp
cmp
xchg
aam
popa
jp
mov
pop
test
xor
cltd
bound
scas
mov
pop
push
cmc
jg
scas
nop
jbe
mov
mov
add
mov
or
pop
ds
xor
mov
data16
in
pop
pop
xor
add
or
std
add
xchg
pop
enter
sti
popa
xchg
cmp
adc
cmp
je
mov
sub
mov
mov
mov
scas
add
cld
mov
push
xor
jecxz
lahf
cmp
mov
mov
add
mov
lcall
or
in
add
and
dec
enter
xchg
fnstenv
pop
test
mov
adc
cmp
repnz
iret
inc
lds
or
aaa
ja
lahf
into
ss
and
sahf
pop
stc
cmp
adc
pushf
add
mov
lds
aaa
jns
mov
adc
cs
sbb
sarb
dec
fisubl
add
cmp
sti
imul
hlt
mov
fucomip
repz
jge
ret
sbb
inc
in
test
loope
dec
sbb
fwait
inc
mov
xchg
shll
and
mov
lret
popa
inc
xor
in
mov
sbb
mov
je
add
imul
roll
scas
add
jbe
add
push
add
cmp
scas
cmp
xchg
orl
sbb
orb
repz
pushf
add
inc
out
pop
add
lea
inc
loopne
dec
loope,pt
adc
mov
dec
aam
and
leave
push
stc
mov
or
adcb
sub
add
adc
mov
or
jb
mov
loopne
pusha
repnz
in
mov
add
sarb
addb
roll
jnp
icebp
add
orl
add
cmpsl
mov
add
push
jle
into
es
call
fsubrs
adc
in
add
lret
jmp
ret
pop
add
repnz
push
call
in
loop
inc
push
cmp
mov
xor
mov
mov
or
test
fmull
push
adc
sbb
jle
popf
shrl
out
xor
divb
lods
jmp
push
enter
push
outsl
mov
out
je
adc
lds
mov
pop
xor
add
inc
push
and
lock
ds
mov
xor
movsl
insl
push
iret
inc
addl
pop
loopne
xchg
push
cmp
sub
inc
mov
inc
jns
aaa
sbb
adc
rorl
mov
pop
add
stos
pusha
pop
mov
jl
xchg
mov
add
daa
movb
adc
movsb
ss
mov
repz
fcmove
in
cmp
xlat
out
insb
dec
test
int3
mov
pushf
hlt
jle
pop
mov
add
adc
cld
das
adc
jno
cmp
jle
add
mov
pop
in
dec
adc
sbb
add
push
out
lods
sti
fldl
popf
je
xor
ret
add
aas
pop
or
inc
jne
inc
popa
gs
fistl
jg
ds
jno
adc
cmp
aad
sbb
das
sub
arpl
add
ret
xor
xor
and
mov
into
xchg
in
xchg
add
loope
in
inc
mov
push
add
leave
shr
lds
xor
shll
jno
and
dec
mov
aam
push
mov
aad
mov
sub
iret
divl
xchg
cmp
jge
fisttpl
std
loopne
pop
add
add
out
push
inc
insb
add
inc
xchg
pop
movsl
test
and
pop
add
mov
push
ret
in
cmpsb
ljmp
rol
add
cmp
dec
cs
rcl
mov
push
cli
jno,pt
or
adc
mov
repz
cltd
jo
addr16
add
popf
push
insl
dec
jmp
aaa
xorb
and
inc
mov
bound
sarb
int3
loopne
mov
shrl
sub
pop
popf
and
mov
add
shlb
xor
cmp
lret
out
xchg
in
leavew
mov
mov
cwtl
jbe
dec
in
std
shl
enter
sahf
add
jmp
stos
dec
insb
add
jge
sub
imul
addr16
lret
es
push
test
jl
dec
cmp
add
push
sub
add
out
ret
sbb
pop
add
test
add
mov
std
into
mov
iret
cmp
pushf
lahf
cltd
sarb
mov
sbb
fiaddl
cmc
adc
lock
ja
mov
jo
mov
dec
gs
ret
movsb
push
mov
mov
adc
cwtl
roll
outsl
bound
lds
push
pop
add
adc
daa
insb
inc
push
sti
jns
add
loopne
add
sbb
movsb
jno
dec
inc
mov
sahf
into
cmpl
cmp
jnp
not
xor
addl
or
mov
push
pop
ret
add
aaa
sbb
insl
rol
dec
mov
pop
jbe
jecxz
mov
mov
adc
add
mov
push
sbb
rcll
cltd
daa
pop
test
add
adc
lock
popf
ret
or
ljmp
jp
mov
inc
add
inc
fmull
push
cmp
add
or
xor
cmc
andb
rcrb
add
add
or
push
cmp
es
add
ds
jge
into
mov
mov
test
add
adc
dec
push
lods
mov
xor
pop
jp
xor
stos
add
dec
adc
aaa
pop
lret
fcoms
div
push
ss
sbb
dec
loope
mov
into
ds
lahf
mov
adc
adc
aad
movsb
sti
fnstsw
jmp
je
inc
or
pop
dec
das
sbb
ret
add
lea
sub
inc
add
lods
popa
add
out
sbb
adc
add
jl
vsqrtps
cli
int3
sub
loop
xchg
add
orl
or
jne
add
mov
push
adc
xchg
add
loopne
mov
pop
jge
cmp
out
add
inc
sbb
xchg
add
pop
and
push
and
fsubs
ja
sub
ret
dec
adc
pop
aam
inc
rorb
xor
jl
rclb
pop
in
adc
fiaddl
loope
fcmovne
and
out
xchg
add
pop
push
shr
jnp
push
loope
stos
or
add
mov
push
das
jle
inc
cs
or
push
add
js
and
insb
mov
xlat
pandn
pop
adc
add
mov
push
mov
mov
cmc
add
jmp
cltd
sub
pusha
imul
or
mov
fdivrl
out
inc
popl
xchg
pushf
sbb
clc
and
fiadds
imul
adc
push
or
es
pop
inc
jo
sub
gs
jb
rclb
and
sbb
aam
push
out
inc
add
jp
jl
leave
xchg
add
or
or
adc
incl
es
lea
mov
rorb
icebp
push
jo
mov
xchg
fnstsw
inc
ljmp
in
mov
xor
in
faddp
sbbb
add
push
rcl
cmp
sbb
sub
scas
mov
sbb
inc
shll
test
out
pop
add
popf
xchg
mov
push
lods
dec
sub
rolb
push
pusha
or
mov
mov
add
popa
add
sbb
lods
xchg
add
test
test
and
add
cs
xchg
sarl
push
lds
repnz
icebp
aaa
add
popa
mov
sti
dec
stc
fistpll
xor
lods
lret
shrl
cmpl
pop
ret
xor
je
pushf
aas
pop
xchg
faddp
dec
ja
call
pop
pop
pop
leave
push
int3
adc
add
addr16
imul
and
adc
jne
and
adc
add
negb
add
andl
push
cmp
xor
inc
cmp
or
int
sub
add
in
dec
les
jae
mov
inc
and
xchg
jp
mov
pushl
push
adc
jbe
and
or
sbb
lock
pop
sti
inc
or
stc
add
ja
xor
dec
mov
addr16
idivb
pop
xor
scas
push
add
mov
imul
ret
bound
xor
lret
push
pusha
std
pop
xlat
cmp
insl
imul
cs
imul
jge
fsubl
push
cmp
rol
addr16
loopne
es
push
imul
xor
dec
fs
push
jmp
subl
outsl
jo
and
xor
and
out
xor
mov
lret
push
daa
dec
cmpb
add
adc
fiaddl
xchg
sub
add
in
clc
sti
sub
aad
stc
sub
sbb
aaa
pusha
fisubl
mov
jmp
in
fistl
sub
fst
out
popf
jae
add
loope
imul
cmp
addl
jbe
and
xlat
xchg
inc
jle
out
mov
lock
xchg
cmc
adc
out
popf
or
inc
lods
out
popa
jmp
cmp
adcl
jg
inc
fstpt
mov
dec
xorb
lcall
jne
cmp
xchg
jbe
jae
adc
pop
xor
sbb
in
and
and
cmp
xchg
orb
and
jg
jne
adc
aas
outsl
cmpsb
sarb
and
mov
push
clc
movsb
rcrb
push
gs
cmp
sbb
mov
out
or
inc
ret
cld
jo
data16
in
mov
sub
adc
adc
cmp
aam
daa
add
mov
and
push
scas
xchg
sbb
and
jmp
into
shr
pop
and
frstor
push
mov
in
sahf
mov
inc
rorl
jl
xor
or
out
jnp
or
cmp
dec
je
addb
add
mov
sbb
push
les
jle
adc
cmp
loope
repz
int3
movsl
cltd
add
mov
andb
add
and
push
fdivrs
add
das
cmpsl
pop
sti
add
or
addl
or
jbe
fadds
scas
test
cmp
cmp
push
dec
sbb
and
or
add
into
dec
fisubl
add
jbe
sub
adc
jp
xchg
push
add
movsb
mov
xchg
lcall
xorl
push
aas
add
sbb
dec
inc
fistpl
pop
cld
inc
fs
shll
sbb
xor
data16
push
dec
add
loop
pop
adc
adc
and
pop
cmpsb
ds
sarb
adc
je
shlb
sub
and
add
mov
push
loop
xchg
xchg
pop
int
adc
pop
inc
add
xor
mov
add
and
push
addb
daa
fimull
inc
pop
jo
adc
xor
fsubs
out
add
mov
mov
bound
sti
xchg
sub
xor
sbb
mov
add
ror
lret
xchg
xchg
or
je
scas
sub
jbe
or
or
sub
test
jmp
adc
fucomip
repnz
sbb
or
cmp
sbb
shll
cmp
or
nop
push
add
push
pop
adc
jnp
test
ret
orb
negb
popa
das
or
adc
sub
ljmp
add
rorb
adc
add
lahf
jbe
jmp
mov
cmp
mov
fdivrl
flds
mov
loopne
push
stc
addl
mov
shl
repz
popa
add
or
xor
adc
xor
jo
push
lahf
or
xor
shrl
sub
lock
cmp
inc
xlat
mov
ret
add
cmp
jle
push
imul
jns
or
push
add
cmpsb
and
in
lahf
add
rcl
add
in
mov
dec
aad
jno
pop
push
imul
xchg
jae
xchg
add
jp
sub
test
pushf
and
pop
dec
dec
sub
mov
ret
insl
sub
aaa
adc
and
mov
pop
lret
fwait
xor
inc
cli
out
and
cmp
enter
or
leave
and
mov
sub
add
es
inc
addb
cld
mov
repz
rcrl
xchg
lds
out
dec
pop
pop
sbbl
cmp
sahf
aam
cmp
sbb
mov
inc
add
fwait
push
sbb
into
mov
enter
iret
sub
mov
sbb
mov
add
fistps
insl
add
push
enter
dec
ljmp
shlb
and
or
pop
iret
scas
push
jno
xor
dec
pop
add
test
fistps
cmc
sti
adc
mov
lods
mov
pop
lds
xor
pushl
adc
push
es
scas
dec
rcrl
aas
mov
xor
mov
add
sub
adc
clc
dec
xchg
dec
jle
xchg
xor
add
ss
lret
inc
bound
sbb
stc
add
jns
push
or
stos
jecxz
pop
bound
or
xchg
pop
add
es
inc
add
loope
hlt
jne
sub
loope
mov
stos
add
push
lret
and
mov
lea
adc
mov
iret
ret
sbb
loop
shll
icebp
or
xor
stos
add
rcrl
adcl
cwtl
adc
xor
sub
xorl
lds
cmp
insl
xor
pop
ret
push
shrl
addr16
mov
cmp
xor
sbb
adc
xor
cmpsl
cwtl
add
mov
dec
pop
mov
sti
add
out
loopne
cmpsl
hlt
sbb
push
add
mov
je
out
hlt
into
jnp
lds
ds
add
add
aam
sarb
jl
inc
mov
mov
sbb
mov
in
test
add
stos
add
lcall
test
clc
cmpsb
add
loopne
jle
mov
popf
cmc
sbb
mov
out
push
stos
cli
leave
xor
xchg
popf
dec
xchg
dec
in
loopne
shlb
or
xor
inc
cs
mov
bound
dec
les
add
add
fsubr
repnz
xor
xchg
xor
data16
lret
rcrl
dec
leave
pop
adcl
je
inc
add
jne
pop
out
pop
fnstcw
in
or
cmp
push
inc
jo
scas
pop
add
push
insl
xor
push
fldcw
fadd
rolb
lahf
jo
lock
and
outsb
dec
lds
rcrl
push
sbb
out
cmp
lahf
xorl
lret
xor
mov
dec
inc
add
shlb
push
add
and
pusha
inc
inc
fnsave
cltd
addl
dec
mov
mov
movsb
popf
add
fidivs
xor
cmp
cmp
subl
bound
test
pop
cwtl
pushf
add
cltd
in
pop
push
nop
and
enter
pop
pusha
add
inc
out
add
jl
inc
mov
cmpsl
cmpsb
maskmovq
cmp
repz
movsl
add
ljmp
lret
push
ds
arpl
rorl
in
ss
shrb
xor
pop
jo
xchg
into
rclb
loope
fstpl
fstpl
mov
mov
in
test
xlat
cmp
adc
xchg
iret
cmp
cmpb
pop
ficomps
int
dec
mov
mov
fcompl
call
pop
add
in
jl
adc
jae
outsb
sti
pushf
aaa
xor
lods
cmpsb
andl
add
in
xchg
jne
push
ret
int3
rolb
mov
add
jl
inc
cmp
add
jb
mov
mov
in
add
xor
das
lods
outsl
add
scas
add
addr16
or
roll
adc
and
jmp
push
and
test
dec
fildl
clc
bound
fimuls
or
je
add
mov
add
lods
inc
xchg
push
sub
sub
repnz
cmp
int
add
xchg
xchg
dec
mov
add
cmp
stos
mov
add
pusha
movl
addl
bound
scas
pushf
adc
fwait
std
add
push
stc
pop
fiadds
shr
movsb
stos
lods
aam
push
push
in
data16
mov
add
jnp
pop
xor
fsts
mov
sub
mov
xchg
sub
mov
lea
and
jae
xor
add
xchg
push
cld
adc
scas
mov
loopne
ds
add
dec
notb
ret
xchg
mov
mov
inc
add
jae
ja
sub
pop
and
insl
clc
sbb
ds
repz
jbe
enter
lret
ja
addl
orb
add
mov
sti
pop
sahf
or
fstpl
sub
cmp
mov
fwait
adc
add
call
cmp
in
and
mov
popf
pop
movsb
sub
push
xchg
xchg
fldenv
add
enter
or
add
call
xor
scas
ret
sbb
mov
call
gs
mov
rclb
jl
pushf
rolb
popa
mov
xchg
leave
mov
js
mov
and
push
mov
test
sahf
xchg
int
call
xor
push
ficoml
mov
insl
lods
add
lods
mov
mov
push
add
or
jg
mov
shll
jnp
jl
jmp
mov
cli
sbb
lret
outsl
mov
push
ja
and
leave
in
and
dec
jmp
lcall
mov
adc
ja
pop
add
add
push
es
mov
push
into
add
daa
jp
pop
arpl
lods
das
add
ret
movsb
xor
xchg
push
lods
sbbl
push
jle
int3
test
mov
xor
push
decl
rclb
fnstsw
mov
call
mov
gs
mov
xchg
pop
scas
iret
std
mov
inc
std
imulb
js
cmp
add
lahf
push
mov
mov
push
cmp
daa
or
in
fiadds
mov
imul
out
pop
shlb
pop
and
add
add
and
jl
movsb
or
pop
loopne
dec
sub
push
xor
xor
cmpsb
mov
mov
andb
push
notl
arpl
fwait
cmp
lret
jp
flds
decl
hlt
push
xlat
or
xor
cld
jp
sbb
xor
arpl
imul
es
adc
jo
sbb
jp
clc
aas
shl
add
or
ds
adc
add
pusha
cld
xchg
jns
and
xor
dec
hlt
aas
pop
ret
mov
inc
mov
repnz
sub
out
adcb
jecxz
and
in
aam
inc
dec
test
sub
and
loopne
jbe
sub
or
pop
leave
outsl
cmp
imul
sub
imul
imul
xchg
je
leave
mov
or
arpl
insl
sbb
data16
adc
repnz
and
je
and
movsb
and
ljmp
lret
es
aam
add
lds
aad
scas
push
or
add
lods
cmpsl
ja
sub
xchg
dec
das
fcmovb
sbb
add
sti
sub
and
mov
add
inc
inc
and
in
jp
or
add
out
popf
add
fwait
push
sub
es
add
fucomip
shll
xchg
dec
mov
xor
imul
cmp
add
push
jg
sbb
call
inc
add
mov
test
nop
cwtl
add
addr16
aad
xchg
test
mov
dec
add
inc
inc
testl
push
jmp
sub
enter
and
inc
fwait
push
aam
mov
rcr
cmp
mov
add
sub
sarl
ja
repz
js
inc
lret
movsb
mov
loopne
pushf
cmp
insl
pop
test
jecxz
and
jmp
cmpsb
fldl
cwtl
push
add
push
push
xchg
dec
pop
gs
ret
mov
push
rcrl
xor
stos
pmullw
ljmp
sub
iret
cmp
pop
xor
test
rorb
cld
mov
int
lock
push
sub
sbb
cmp
xor
popf
sub
mov
sub
ret
pop
stc
mov
add
popa
scas
mov
fisubl
mov
or
cmc
outsl
mov
mov
lods
lahf
fnstenv
add
iret
repz
jecxz
add
shll
leave
ds
out
and
add
je
das
add
pop
pop
pusha
orl
sub
or
lcall
int3
jg
inc
adc
push
add
xchg
cmp
xchg
cmp
repz
mov
aad
mov
add
btr
std
ljmp
repnz
les
out
movsb
popl
push
xor
adc
adcb
pop
xor
or
pusha
es
mov
inc
fistps
cmp
mov
or
cmp
adc
fistpl
ss
mov
and
push
popf
add
sbb
loope
call
fs
sub
lcall
add
out
push
add
pop
idivb
push
jb
shrb
jo
std
ds
out
iret
imul
frstor
out
popf
rclb
loope
les
add
add
cmp
icebp
mov
sub
push
dec
mov
shrl
sbb
sub
xchg
xor
mov
js
icebp
cltd
insl
jo
jmp
mov
and
jns
popa
cmp
fcomps
popf
ja
pop
add
in
ret
add
xor
and
loopne
imul
pop
add
and
jnp
fimull
lds
adc
add
mov
add
and
add
sub
jbe
je
imul
jb
fidivrs
in
fisttps
add
jno
cmp
es
mov
aam
mov
sub
lea
mov
inc
xor
cltd
mov
test
jmp
xchg
pop
sub
mov
icebp
jb
inc
cltd
push
cmp
jmp
mov
push
into
add
data16
jmp
add
std
je
push
add
out
shrb
lret
dec
int3
cmp
xchg
roll
fildl
sarb
aam
add
sub
mov
mov
incb
jne
stc
dec
mov
daa
add
fcoms
popf
ret
dec
loop
xor
xchg
dec
and
mov
jmp
sbb
push
inc
push
cmp
ficoms
sub
mov
add
fisttpll
jge
stos
push
fcmovnb
inc
cmpsb
inc
and
push
nop
mov
push
cmp
or
inc
add
das
lret
and
cwtl
sub
imul
roll
xor
out
or
push
call
fiadds
sub
add
adc
xor
push
int
xchg
adc
in
lret
roll
push
repnz
loopne
sub
pop
addl
or
add
das
xchg
repnz
xchg
and
pushl
and
sub
loopne
fcmovb
lahf
stos
cmpsl
cmp
add
nop
pop
add
sub
movb
movsb
push
mov
enter
cmp
sahf
pushf
dec
or
add
nop
movsb
xchg
dec
je
add
xchg
daa
mov
lds
subb
les
push
jp
jmp
pushf
inc
insl
pop
xchg
xor
popf
push
inc
jp
jne
cmc
pop
xor
es
std
mov
lret
adc
rorl
xchg
cld
and
stc
mov
jo
sbb
add
out
bound
cmp
mov
loopne
rcll
cmp
xchg
push
mov
push
inc
sbbl
pushf
dec
add
insb
insl
lret
add
cmp
xor
in
cmp
repnz
lret
add
or
clc
xor
jp
push
in
jo
cmp
adc
rolb
and
test
jge
ds
nop
out
outsb
jae
cmp
cld
ja
dec
mov
jmp
aam
sub
and
ja
add
xor
rorb
add
clc
adc
or
and
and
xchg
jns
stc
das
rorb
ds
lret
inc
add
jg
gs
xchg
jmp
push
add
pop
fwait
cwtl
aam
jo
adc
hlt
ffree
jae
push
push
lahf
and
mov
je
roll
pop
cmp
xor
ret
add
flds
mov
jns
inc
jl
dec
pop
je
jle
jge
imul
mov
sti
add
pop
add
leave
out
out
andl
in
std
mov
inc
cmc
out
and
sub
icebp
fsub
daa
imul
dec
push
scas
adc
ret
mov
popf
mov
das
cld
mov
jmp
sbb
test
sub
xchg
add
fmull
ja
insb
inc
xor
lahf
loopne
and
sub
inc
incb
push
leave
lahf
outsl
add
mov
adc
movsb
xor
add
in
negb
push
sub
cmp
sbb
sub
jae
out
xchg
jle
add
mov
mov
xor
jl
or
lods
xor
inc
dec
mov
je
push
mov
or
iret
fldenv
out
inc
inc
jp
mov
add
or
sarl
cmp
pop
xchg
cmpsb
sbb
add
cmc
daa
cwtl
mov
adc
xchg
add
loopne
int3
ja
sbb
movsb
cmpsl
lahf
adc
clc
cli
stos
add
rcrb
mov
mov
sbbb
xchg
fwait
jb
popf
test
push
xchg
pop
jae
jp
pop
test
int3
xor
jns
test
xchg
add
popl
in
ret
fwait
sbb
inc
jbe
inc
ds
inc
sbb
sti
cmp
into
jl
cmp
roll
cmp
idivb
xchg
shl
jns
test
add
sub
jmp
adc
mov
icebp
or
out
ror
fidivrl
ret
stos
mov
das
cmp
lcall
xchg
dec
inc
repz
andl
out
mov
or
mov
js
fwait
sub
jp
xchg
test
mov
fwait
jg
pop
add
add
cwtl
mov
dec
int
xchg
sti
gs
and
fstl
cli
xor
or
repz
adc
ret
je
aas
out
adc
aam
out
lret
sbb
push
jp
decb
test
mov
and
iret
mov
pushl
pusha
adc
push
cmp
es
outsb
inc
pushf
in
lds
clc
shr
imul
adc
xorb
or
add
fildll
adc
inc
cli
leave
iret
push
cmp
test
iret
mov
lock
sbb
pop
or
stos
add
push
pop
xor
sbb
es
push
mov
mov
aad
xchg
and
daa
push
add
xchg
ret
mov
out
or
sbb
cmp
aas
or
addr16
jmp
in
js
ret
jp
sbb
repnz
imul
mov
stc
or
mov
faddl
jmp
cwtl
dec
mov
or
pusha
jns
fdivrp
dec
adc
push
mov
add
or
lods
dec
loopne
jp
mov
les
aad
cmp
and
in
jp
lods
sbb
inc
dec
lods
and
push
rorb
aam
cmp
jmp
cmpl
int
repnz
imul
cmpb
loop
jne
rolb
fisttps
cmp
pop
sbb
pop
xchg
sbb
sbb
icebp
mov
int
inc
mov
scas
shlb
cmp
xchg
cmpsb
pop
lahf
inc
mov
rol
push
test
out
imul
cld
push
mov
or
inc
add
lahf
test
pop
arpl
insl
sarl
inc
enter
ds
push
add
cmp
in
stc
pop
fistpll
add
inc
dec
sbb
fistpll
cli
popf
mov
adcl
aam
pop
and
out
pop
bound
lret
mov
jp
js
test
sbb
inc
lock
dec
add
gs
mov
cld
push
jp
popf
push
imul
and
pop
out
inc
aad
xor
mov
int3
aam
sbb
les
dec
inc
mov
and
pop
lds
hlt
jge
std
outsl
int
inc
pop
xor
and
push
loope
mov
cmp
test
pop
nop
add
pop
adc
and
aam
shll
je
push
fmuls
inc
pop
add
addl
jae
ret
mov
fstl
mov
xor
cld
mov
and
sbb
or
aam
ljmp
adc
jp
xor
inc
sbb
add
mov
movsb
daa
and
mov
fidivrl
dec
xor
mov
leave
icebp
dec
xchg
or
jnp
ds
jbe
cmp
mov
jmp
push
pop
jmp
out
jnp
lea
fs
mov
inc
lea
mov
jl
loopne
push
jbe
cltd
adc
scas
push
dec
add
test
jg
mov
sub
mov
fwait
imul
mov
add
mov
add
cld
rorb
or
push
sahf
inc
mov
or
sbb
insb
jns
ret
xchg
leave
push
push
lods
loope
xor
jp
or
into
into
xchg
movsl
mov
fsubr
inc
out
movsb
cltd
cmp
add
or
dec
mov
mov
daa
scas
dec
je
mov
inc
cmp
adc
xor
dec
mov
in
add
xor
dec
push
in
cs
pop
mov
js
rclb
cmp
arpl
aad
lods
mov
pusha
push
or
scas
scas
push
xchg
or
inc
je
push
stos
dec
jne
cmpsb
movsb
mov
mov
and
sbb
je
out
les
stos
cmp
repz
add
push
and
inc
jo
fs
xchg
or
push
pop
insb
lods
test
cmp
mov
inc
jp
movsb
xchg
aad
ret
and
or
pop
loopne
mov
pusha
adc
popf
mov
jo
loopne
icebp
add
xchg
pushfw
add
loop
xor
scas
lods
shlb
test
cmpb
test
add
xchg
dec
repz
jmp
push
cmp
fs
cmp
jnp
out
jae
jmp
out
outsl
out
cmpb
test
pop
arpl
in
fwait
int
mov
pop
and
ret
int3
xchg
push
cmp
into
mov
rcr
imul
push
lret
push
and
cmp
pop
pop
data16
mov
xchg
outsb
add
and
hlt
scas
mov
loope
cmp
pop
incl
call
or
or
enter
les
jle
mov
mov
inc
mov
fwait
pop
test
jecxz
jle
repnz
push
cltd
inc
xor
jne
rorl
sarb
ss
ret
out
and
sub
in
cmp
inc
cmp
test
pop
mov
xor
sub
dec
scas
test
push
push
mov
aam
jns
and
jno
fistpll
mov
icebp
enter
pop
inc
or
lahf
cmp
loopne
pop
icebp
daa
cmp
cmp
out
inc
call
adc
int
out
sub
ficompl
add
add
andb
lcall
add
arpl
fcmovbe
jno
push
leave
jns
xchg
daa
fildl
loop
lahf
or
cmp
mov
sbb
arpl
pop
outsl
push
add
jno
stos
sub
add
cmp
pop
shlb
ret
add
mov
xlat
and
fs
or
sbb
xor
pop
push
adc
adc
jno
cmpsl
jbe
cmp
int
xor
inc
pop
inc
sub
push
fwait
push
pop
push
adc
adc
cmp
test
bound
rcr
hlt
xor
xor
xchg
adc
add
mov
fsubrs
int3
sub
dec
std
fwait
jns
jp
mov
mov
xor
loopne
add
cmp
jnp
adc
push
mov
sbb
mov
mov
or
aam
test
pop
fistps
jb
hlt
movsb
sub
or
add
addr16
inc
dec
xchg
jl
inc
jge
push
add
out
sub
aam
mov
insb
aam
dec
xchg
loopne
jp
adc
adc
push
mov
cmc
cmp
or
push
jne
out
xchg
and
push
dec
mov
leave
jo
ja
push
outsb
pop
sbb
jge
dec
mov
sahf
je
xor
and
rcr
ret
movsl
xor
enter
imul
inc
bound
adc
and
cmp
cmp
mov
fildl
pop
and
inc
call
int3
xor
add
gs
lods
divb
shrb
incl
sbb
lods
cmp
aam
aas
adc
adcb
adc
js
jmp
mov
push
sub
cs
sub
les
push
jne
mov
mov
imul
arpl
ret
xchg
std
mov
sub
in
les
fldenv
push
loop
adc
sub
cmp
fwait
pop
popf
outsl
add
sti
push
aas
mov
jp
fucom
insl
and
add
iret
xchg
cmp
lahf
test
rcrl
inc
pop
adc
mov
pop
iret
inc
mov
mov
adc
and
out
leave
fcoml
push
push
js
jl
lcall
cmp
popf
push
jmp
jb
mov
push
lds
rcll
dec
cmp
sbb
cli
sub
mov
iret
sbbl
xchg
adc
mov
push
sbb
add
icebp
lods
jmp
cmp
pop
movsb
jp
or
gs
fldcw
out
and
lods
repnz
nop
and
or
stos
popa
loope
adc
mov
pop
hlt
icebp
add
jp
adc
enter
inc
add
je
sub
jbe
lret
or
jp
repz
cs
push
in
and
les
sbb
leave
jle
xor
jns
mov
xor
xchg
or
ds
jo
xchg
shll
scas
or
mov
ja
jo
push
push
scas
mov
jp
cwtl
mov
sub
mov
nop
movsl
or
and
lock
dec
inc
lods
jbe
stc
pop
or
cmp
mov
rcrl
aam
lret
cmp
sti
cmp
cli
mov
sbb
cmp
loop
imul
mov
cmp
aaa
jnp
fstps
ror
fcomps
loop
ret
andl
fcom
pop
add
out
test
or
add
inc
stc
push
out
lea
adc
adc
lret
and
jmp
ret
sarl
aam
sbb
into
dec
xchg
mov
iret
jo
jbe
xchg
out
arpl
fldl
sub
push
push
shl
outsl
in
and
add
push
leave
out
pop
mov
add
or
out
mov
sahf
cmp
inc
sbb
inc
daa
in
sub
lahf
adc
ljmp
das
push
jo
leave
sbb
negb
add
mov
xor
sub
push
inc
pushf
in
ret
repnz
in
mov
popa
jb
sti
jbe
mov
or
adc
inc
add
subl
xchg
int
adc
scas
adc
fmuls
js
retw
or
mov
sbb
sbb
xor
movsb
aas
dec
jp
cmp
sbb
fcoml
xor
outsl
sub
inc
stos
cmp
ljmp
mov
mov
aam
cli
dec
xor
jle
aaa
enter
movsb
mov
inc
hlt
sahf
lods
test
xor
inc
loope
dec
inc
aam
mov
dec
xchg
je
pushf
push
sbb
sahf
and
cmp
sbb
scas
or
test
out
adc
sbb
inc
and
cmpsb
out
or
adc
movsb
rcr
mov
in
push
cmp
push
sbb
mov
fidivrs
mov
cmp
mov
mov
mov
adcl
inc
lds
data16
pop
mov
dec
jb
gs
mov
jnp
xor
pop
lods
pop
fcmovnbe
xlat
jl
in
mov
clc
scas
xchg
sub
and
sbb
jmp
pop
mov
jp
movsb
xchg
mov
aaa
mov
addr16
lret
subb
jp
adc
test
jmp
xchg
subb
sub
stos
cli
ljmp
out
xor
in
fiaddl
jno
xchg
sub
js
mov
and
incb
jo
or
sub
lock
push
andb
xchg
jp
mov
push
push
jb
or
out
ja
movsl
mov
and
dec
ret
nop
loop
ret
cmpsb
xor
fsts
adc
jno
mov
fsubrl
pop
jne
push
sbb
or
jb
ret
rorl
mov
inc
jp
imul
pop
add
movsb
cmp
sbb
dec
dec
add
out
xor
loop
cmc
and
xchg
sarb
jb
movsl
inc
mov
les
jae
mov
fnsave
fstpt
push
sahf
in
pop
sbb
loopne
sbb
xorl
cmp
adc
lahf
ljmp
cwtl
and
push
add
sbb
clc
lds
jecxz
mull
inc
jns
int3
adc
lret
mov
cmp
nop
insb
ret
repz
cli
cmp
cmp
push
lahf
mov
push
push
jp
jbe
adc
lods
rcl
sbb
cmpb
bnd
adc
adc
jp
fnsave
into
sub
cmpb
ret
mov
xchg
jle
andb
add
pop
mov
dec
sbb
push
in
ret
jmp
loop
lods
inc
cmp
or
cmp
std
push
cmp
xchg
and
and
jge
cmpsb
inc
clc
dec
mov
jnp
mov
jmp
inc
aad
xchg
cwtl
xchg
aad
icebp
pusha
sbb
ds
pop
inc
xchg
lahf
jp
push
inc
popa
sbb
push
push
out
jecxz
jge
jl
aad
pop
cmp
or
lcall
lcall
or
ret
roll
cwtl
or
cltd
es
mov
jl
inc
adc
mov
pop
test
dec
adc
mov
ja
in
xor
cli
rcll
sar
mov
loop
xor
mov
pushf
shlb
scas
test
or
cmc
sbb
jl
xchg
and
cwtl
push
popa
insl
push
add
lret
jo
jo
clc
push
addr16
and
dec
lods
sbb
cmpsl
push
sbb
cmpb
pop
mov
jne
xlat
movsl
pop
mov
rcrb
and
dec
jl
or
pop
roll
popa
and
mov
adc
in
cmp
movsl
pop
out
stos
push
jp
lods
xchg
and
lahf
hlt
add
movsl
adc
stos
scas
xchg
xorb
es
ficompl
je
inc
dec
bound
sbb
xchg
xlat
leave
orl
xchg
adc
into
lods
dec
daa
inc
jo
sarl
cmp
pop
dec
mov
sub
xor
sarl
mov
or
lret
adc
in
out
push
mov
jmp
mov
fmuls
sbb
push
mov
sub
ror
push
cld
sti
dec
mov
incb
inc
push
out
in
sbb
test
sbb
movb
adc
sub
cmpsl
sbb
jle
mov
sub
out
cmp
xchg
lahf
push
or
xchg
push
sbbb
dec
dec
outsb
mov
dec
cmp
sub
sbb
mov
xchg
jp
add
shlb
sti
lcall
cwtl
lret
mov
out
lods
or
mov
add
ret
or
ret
add
mov
fs
or
dec
rolb
cmpsl
xchg
fidivrs
aas
mov
pop
rep
scas
repnz
or
xor
and
ret
xor
jp
sub
inc
inc
add
push
cmp
sbb
out
add
push
ret
and
out
lods
xchg
adc
push
push
mov
adc
add
pop
mov
inc
push
inc
mov
or
adc
les
mov
sbb
fwait
sbb
outsl
clc
hlt
lcall
jp
adc
push
out
mov
jp
cli
adc
mov
cmc
and
adcl
inc
sub
mov
fcomp
inc
or
movb
iret
fs
sbb
inc
leave
stos
cwtl
lods
mov
xchg
or
push
jmp
and
rcl
rcr
adc
xchg
cwtl
pop
cmp
aas
shlb
and
cwtl
pop
xlat
inc
xchg
jp
push
and
movsl
das
add
mov
insl
sbb
rolb
and
add
pop
lds
mov
outsb
roll
mov
dec
fisttpll
xor
popf
add
mov
push
adc
lret
xor
cmp
sub
repz
jl
cmp
pop
mov
outsl
or
push
ffree
add
imul
std
or
mov
mov
adc
jae
and
fisttps
ljmp
add
test
xlat
inc
add
mov
es
int
lods
loopne
jmp
and
nop
xlat
or
scas
imul
mov
push
ja
add
int
ret
test
mov
loop
mov
repnz
pop
lcall
add
xor
push
xchg
js
dec
sbb
fucomip
cmpsl
adc
cmpsb
xchg
mov
sarl
mov
lods
in
add
popf
xor
aaa
lds
or
sub
mov
mov
push
sub
bnd
mov
xchg
ret
testb
icebp
xchg
cmp
ljmp
dec
xchg
xchg
or
mov
cld
add
adc
mov
aad
das
hlt
and
add
push
cli
push
xor
rol
cmp
and
sub
mov
xor
inc
mov
xchg
add
adc
nop
xchg
stos
cmpsb
ret
mov
and
pop
push
inc
mov
adc
mov
fwait
jne
adc
ljmp
sbb
add
lea
and
cmp
add
push
mov
jnp
cwtl
lods
out
movsb
jl
and
mov
mov
testb
fildll
adc
shll
adc
add
add
xchg
add
les
inc
push
lods
push
jge
mov
arpl
jae
dec
flds
xor
mov
repnz
jno
add
pop
xchg
add
mov
xchg
mov
leave
cmp
pop
adc
mov
imul
sub
xchg
ds
aad
add
adc
jnp
dec
scas
mov
pop
clc
jb
add
pop
mov
ret
adc
cmp
in
loopne
es
roll
adc
push
or
sbb
je
sub
sbb
aaa
jne
add
xchg
rcll
inc
orb
jnp
add
aas
jae
pop
mov
neg
adc
jmp
mov
pushf
in
and
sahf
xor
add
mov
in
mov
sahf
inc
push
jge
loope
and
or
insl
push
jmp
lods
inc
adc
fisubrl
inc
bound
jge
dec
sub
sbb
pusha
inc
imul
xor
es
jmp
mov
adcl
xor
add
inc
sbb
add
sub
jmp
aam
fnstenv
add
push
cltd
in
or
add
push
adc
adcl
or
cmp
nop
inc
sub
cmc
bound
xor
and
xchg
add
xor
push
out
add
iret
adc
mov
ja
inc
inc
sbb
sbb
pop
mov
push
pop
ret
and
jnp
ja
shll
add
inc
fwait
pop
inc
add
rclb
lret
mov
dec
xorb
std
ss
imul
pop
push
and
or
push
mov
es
int3
cmp
adc
hlt
push
leave
sbb
jns
outsl
xor
outsl
add
idiv
mov
xor
mov
mov
add
into
xchg
ret
inc
das
loope
adc
arpl
out
test
popf
mov
inc
add
sahf
test
sub
stos
xlat
push
call
pop
mov
testb
and
cmpsl
sahf
cmpsb
add
sub
fists
js
lock
lret
cmpsl
add
test
mov
test
insl
je
add
mov
nop
or
pop
inc
rolb
aas
inc
popf
cmp
bswap
adc
popf
add
enter
add
push
mov
mov
test
out
inc
mov
push
push
arpl
inc
lds
call
and
mov
in
and
mov
cmp
jl
or
fstpl
inc
or
lret
jb
and
cmpsl
push
sbb
add
mov
push
cmp
or
cmc
pusha
lods
cmp
in
dec
or
cmp
mov
jns
sbb
adc
call
es
test
cmc
inc
add
jge
mov
cmp
add
ret
add
inc
jae
in
xchg
add
push
mov
push
cmp
add
lods
jnp
test
or
and
push
xor
add
dec
fadd
and
shlb
cmp
push
adc
xchg
xor
cltd
push
testl
arpl
adc
xlat
aaa
test
xchg
data16
jp
jg
insl
les
clc
ljmp
add
mov
jbe
sbb
jl
ret
rolb
sub
pushf
add
mov
or
stos
jns
push
fwait
ret
lea
mov
push
xor
and
pop
pop
xor
xor
shrl
xchg
mov
mov
lds
or
pushf
dec
fwait
jnp
push
add
jae
rol
aaa
xchg
addl
inc
imul
cmp
add
pop
pop
pop
xchg
or
sbb
and
xor
mov
sbb
add
jae
pop
aaa
mov
lods
popf
mov
in
add
mov
jne
add
sub
add
fwait
icebp
clc
mov
mull
xchg
adc
inc
adc
outsb
fisubrl
mov
push
pop
lahf
mov
in
push
cmp
inc
and
add
sbb
mov
jge
sbb
or
jo
sbb
ror
cld
mov
cs
add
and
xchg
int3
or
ja
jle
mov
loop
outsl
jp
pop
and
xlat
dec
push
int
bound
into
dec
add
jns
xchg
movsl
add
jge
or
mov
andb
add
jno
adc
and
add
int3
or
xchg
dec
dec
sub
lahf
add
sahf
nop
jle
es
repnz
div
mov
cmp
mov
mov
adc
rcrb
pushf
jno
les
dec
adc
pop
add
xor
mov
fcoms
dec
or
movsb
iret
sbb
sub
imul
cmp
and
mov
lods
add
test
sbb
rcrl
loope
pop
pop
out
stos
add
mov
jne
aaa
fwait
mov
pop
cmp
mov
fisubs
cmp
push
lret
add
mov
push
xchg
daa
pop
or
iret
sbb
pop
popl
test
out
out
imul
add
scas
rdpmc
in
and
xchg
lret
and
stc
int
rcrb
fmuls
mov
cmp
mov
or
fwait
test
jle
jo
jge
jnp
mov
xchg
or
out
add
in
dec
dec
add
js
adc
mov
roll
sarl
mov
add
es
add
std
sbb
insb
mov
cmc
dec
cmpsw
add
sbb
add
mov
push
rorb
sub
lods
add
fcmovu
rorb
mov
mov
dec
jno
xchg
add
mov
inc
mov
mov
sbb
cmp
fisubrs
fbstp
lahf
inc
add
xchg
aad
cwtl
iret
xor
sub
push
mov
sbb
sub
add
jg
sti
jns
sub
add
adc
addb
mov
add
out
mov
les
add
sbb
lods
mov
dec
xchg
scas
shlb
xchg
xor
inc
cmp
rolb
push
outsl
fs
stos
or
and
popl
sbb
push
pop
scas
xchg
pop
mov
push
pop
ret
fists
scas
xor
pop
rcll
jo
cmp
sub
mov
jb
mov
and
pusha
std
adc
xor
fsubrs
push
adc
adc
into
mov
xor
popf
mov
ret
pop
popa
adc
or
cmp
xor
mov
lods
and
lock
movl
mov
pushl
jle
xor
mov
xor
add
jnp
mov
out
xchg
fildll
cmp
aaa
xor
int
ret
mov
sbb
lods
mov
rclb
fiadds
lahf
jo
xchg
add
mov
and
mov
sysexit
pop
out
out
ret
sbb
test
bound
test
popf
stos
ret
adcl
add
repnz
dec
add
dec
jecxz
stos
mov
test
arpl
sti
mov
push
and
mov
adc
les
mov
jb
jmp
add
sub
mov
push
dec
psrlw
push
lock
sbb
int3
mov
add
mov
pop
dec
adcb
sub
jb
xor
mov
and
pushl
push
or
test
rcrb
jmp
xor
out
fiadds
xchg
lods
mov
mov
lea
xor
push
ret
inc
aam
sbb
fidivl
adc
dec
int3
add
push
pop
push
imul
jge
popf
stos
cmp
mov
shrb
sbb
jp
cmp
sub
roll
mov
fadds
dec
cli
xchg
add
imul
shrl
or
cmp
repz
push
nop
arpl
add
mov
ss
mov
loop
inc
add
js
xchg
add
std
es
imul
fnstenv
adc
or
push
popf
and
add
xorb
pushl
lock
push
in
inc
rcll
push
add
ret
sub
fwait
jae
xchg
fs
test
mov
cmp
cmp
cmp
cmpsl
inc
das
inc
or
jns
xchg
jno
fsts
enter
add
add
add
mov
addb
test
mov
mov
mov
inc
sub
mov
cltd
mov
cmp
outsl
add
clc
leave
inc
inc
int
mov
mov
or
rolb
mov
jae
pop
add
xchg
inc
outsl
test
add
cmpsl
and
add
daa
call
lcall
push
inc
imulb
sbb
shrl
dec
adc
into
pop
subl
mov
inc
fldenv
ret
add
scas
pop
mov
adc
cld
adc
subb
fiaddl
sub
scas
sarl
sbb
cmpsb
xor
inc
push
add
pop
cmp
jmp
add
faddl
mov
and
cltd
xor
sub
or
mov
cmp
shll
inc
fmull
jl
jne
cs
add
xchg
mov
jle
cmp
mov
mov
or
filds
arpl
pop
jp
in
add
lea
add
adc
or
mov
setp
push
adcl
dec
or
xchg
pop
das
xor
mov
scas
dec
mov
cmp
push
add
jno
rorb
inc
sub
add
jo
mov
add
sub
xadd
aam
call
or
add
jno
lea
adc
push
fsubrs
js
add
jmp
imul
mov
sbb
fisubrs
mov
mov
mov
or
call
push
pop
dec
cmpsb
pop
add
xor
fisttpll
pop
rcr
xchg
dec
inc
mov
cltd
lret
iret
inc
mov
pop
push
xor
fs
ret
inc
push
aam
add
mov
daa
inc
adc
add
and
adc
cmc
int
mov
inc
mov
or
jno
cli
sub
in
add
mov
mov
jmp
lods
clc
imul
inc
mov
dec
xor
inc
push
pop
add
push
mov
add
push
pop
sub
popa
sub
cmpsl
sbb
mov
inc
or
les
fisubrs
addl
mov
das
inc
std
iret
cmp
and
cmp
hlt
mov
inc
mov
inc
icebp
dec
mov
in
mov
outsl
sub
mov
aad
outsb
fildl
popl
or
add
out
push
add
xor
push
mov
ljmp
dec
sti
add
add
cwtl
jbe
data16
les
adc
push
xorl
sahf
add
inc
dec
mov
mov
wrpkru
loop
add
push
fstl
mov
in
adc
aad
iret
mov
pop
add
aas
std
pop
cmp
rorl
imul
in
stos
inc
aad
push
in
pop
or
sub
xor
subl
push
test
pop
aam
xor
pop
sub
outsl
sub
int3
cmp
xor
ja
sbb
ds
adc
subb
sub
add
icebp
scas
mov
in
outsl
test
pop
dec
test
add
mov
enter
xlat
test
mov
inc
lea
das
add
push
nop
xor
and
ficomps
sahf
out
or
lods
sahf
aam
leave
ret
pop
dec
xorl
push
jne
cmp
jg
pop
push
cld
pushf
and
pusha
push
sahf
outsl
adc
or
mov
lock
orl
pop
mov
jnp
daa
mov
inc
or
sbb
xor
inc
cs
rolb
fcomip
and
rcll
mov
fildl
rcrl
scas
mov
push
inc
sbb
shlb
xchg
inc
sub
ljmp
push
addr16
cmp
gs
cmp
jae
xchg
pop
mov
add
mov
inc
add
lods
inc
add
cmp
add
int
aam
pushf
xchg
std
stos
and
clc
jp
add
pop
mov
cmp
sbb
inc
push
pushl
inc
ss
pop
leave
add
ret
lods
mov
adc
nop
cmp
add
push
adc
ds
jnp
sbb
xor
add
lahf
mov
test
mov
les
push
imul
mov
pop
add
add
pop
icebp
xor
das
int
clc
dec
inc
cmp
add
sbb
sub
repnz
dec
ficoms
xchg
icebp
xor
pmuludq
cmp
out
sbb
into
inc
cmp
xchg
or
add
mov
movsb
push
loopne
jecxz
or
cltd
sbb
fbld
popa
jmp
jp
fs
inc
aaa
add
add
out
sub
cmp
mov
into
loop
rclb
and
jg
nop
xorb
xchg
cmp
repnz
incl
shlb
into
mov
dec
cli
mov
mov
pop
adc
xor
push
loopne
fwait
pop
hlt
or
mov
cmp
loop
pop
roll
jge
push
cmp
add
mull
add
fs
insl
fcomps
add
lods
cmpb
xor
inc
fldt
nop
jmp
cmpsl
jo
add
dec
jecxz
add
cmp
pop
xchg
dec
xchg
lcall
jmp
mov
scas
cwtl
pop
je
xor
aas
push
pop
sub
das
mov
xchg
jne
fldt
add
inc
lret
jmp
cs
adc
pop
push
rorb
jmp
repz
addl
jecxz
push
sbb
rolb
sub
sbb
repz
mov
repnz
adc
js
add
sbb
fwait
cltd
lret
out
jb
pop
sub
add
arpl
int
aam
mov
dec
cmpsb
orb
jg
jmp
and
pop
inc
scas
add
outsl
pusha
and
xbegin
dec
add
psadbw
loop
mov
into
dec
sub
lahf
cli
or
sbb
int3
mov
les
test
lcall
inc
mov
and
insb
adc
stos
xlat
push
enter
es
mov
out
pop
cmp
jbe
xor
sbb
and
push
push
and
fxch
push
lcall
pop
adc
xchg
and
leave
sbb
and
inc
mov
inc
mov
inc
jp
cmp
xchg
or
add
xlat
sti
cmpsb
cs
lds
pop
lods
push
addb
je,pt
inc
adc
and
into
leave
fnstsw
xchg
add
mov
scas
iret
push
mov
adc
ror
add
aam
mov
xchg
sub
xor
out
fstps
jg
dec
sub
xchg
fsub
cwtl
jmp
jbe
sub
aaa
mov
inc
and
repnz
inc
rolb
lahf
sbb
xor
or
sbb
mov
add
or
add
xchg
pop
push
pop
sub
pushf
fimuls
push
adc
and
mov
jae
jbe
mov
or
cmpsb
daa
out
xchg
mov
icebp
push
pop
xorl
add
mov
imul
aaa
or
push
inc
inc
add
xlat
push
ret
test
test
movsb
popa
mov
gs
inc
add
aam
adcl
xor
jp
cs
dec
add
jl
repnz
inc
in
sub
add
fmuls
sbb
rcll
xor
xchg
ss
dec
lods
pop
scas
add
push
aas
xchg
push
mov
dec
cmp
and
in
fistpll
sbb
add
icebp
neg
mov
inc
sub
outsl
test
mov
inc
or
pop
cli
inc
mov
add
xchg
pop
sbb
mov
lret
ret
push
lahf
xchg
push
cli
add
lock
loop
sbb
mov
clc
add
pop
fnsave
add
and
in
stc
mov
int3
arpl
dec
imul
jae
sub
loopne
and
aas
adc
scas
cwtl
test
pop
cmp
mov
sub
aas
or
and
pop
sbb
out
xlat
xor
push
mov
aas
inc
pop
popa
loope
mov
rorl
fdivrs
pop
rclb
cmp
mov
jmp
testl
into
dec
std
iret
rcr
and
mov
idiv
xchg
ja
cmp
test
clc
shll
and
lahf
mov
jbe
addb
add
mov
sbb
jno
xchg
inc
dec
ret
adc
sti
xchg
mov
mov
jp
add
in
mov
push
cltd
add
into
add
sbb
push
mov
daa
add
insl
jae
movsb
cmp
iret
loopne
lods
cld
xchg
and
out
loope
mov
jecxz
xchg
stc
fstp
inc
cmp
test
add
movsl
jmp
mov
les
pusha
out
jp
or
ss
ret
pop
sbb
pop
lock
adc
mov
cs
or
xor
sbb
aad
stc
add
nop
cmp
enter
rcr
pop
cs
jb
adc
add
popf
xor
mov
add
push
mov
in
xchg
adc
sub
aaa
lea
lahf
mov
loopne
sub
das
or
negl
xor
xor
cmpsl
jb
mov
sahf
push
and
xor
lahf
cmp
add
mov
xchg
add
out
int
aaa
test
roll
sahf
pop
shlb
push
push
xor
jle
outsl
add
inc
lea
mov
or
iret
js
xchg
xor
adc
sarb
jp
and
fs
dec
cmc
flds
ja
idivl
push
mov
and
and
jmp
inc
into
mov
xchg
sarl
mov
cltd
mov
jae
ret
sarl
out
add
fs
mov
dec
jno
pop
cli
sbb
divl
inc
into
and
movsb
outsb
add
xor
int3
jmp
lods
inc
out
push
add
in
das
jnp
inc
cmp
int
out
and
fisubl
cli
cmp
mov
movsb
mov
add
or
shll
adc
testl
lahf
dec
inc
add
jle
addl
ret
jo
or
or
jg
testl
ss
cmp
add
add
sub
add
dec
inc
leave
daa
add
clc
push
mov
mov
add
pop
mov
mov
lahf
jns
int3
jne
xor
pop
cmp
loope
add
enter
cli
xchg
add
xorl
inc
or
mov
bound
test
mov
sarl
lret
or
inc
loop
adc
lcall
inc
add
shrl
mov
cmp
lods
and
mov
arpl
aam
xor
jae
popa
mov
pusha
pop
in
adc
xchg
imul
fldl
nop
test
jo
add
ret
repnz
push
ds
dec
sarb
testb
int3
add
mov
outsb
add
sub
int
xchg
lock
inc
out
call
fimuls
push
pop
ret
mov
fisubrl
cwtl
inc
pop
push
lds
aaa
aam
into
inc
fmuls
icebp
cmp
adc
lods
sub
mov
inc
mov
aam
notl
jle
adc
dec
movsb
pushf
pop
mov
js
add
push
lea
inc
fldl
or
xor
add
orb
or
rolb
adc
aas
leave
mov
jecxz
mov
lods
popa
mov
movsb
jge
inc
and
pop
pop
adc
scas
aas
and
sarl
popa
dec
mov
sub
lahf
bound
orl
cmp
aad
xchg
jle
inc
cs
je
mov
mov
mov
popf
lods
pop
pop
xorl
iret
in
cmp
xchg
xchg
jns
jp
in
xchg
arpl
jge
sub
mov
repz
jnp
jbe
iret
roll
jb
adc
in
test
fldl
fiaddl
out
ds
and
fmuls
cmp
cmc
pushf
gs
movsb
mov
mov
sahf
sti
aad
nop
add
push
popf
cmpsl
fwait
or
and
and
test
cmp
shll
inc
sub
mov
iret
add
or
shlb
ljmp
orb
dec
movsl
fld
mov
adc
shrb
add
lods
bnd
ljmp
xchg
cmpsl
add
sahf
pop
fidivs
test
aam
mov
add
shll
inc
mov
mov
shlb
leave
pop
push
loop
add
aam
addr16
stc
pop
incl
test
dec
imul
aad
shr
xor
aas
push
add
or
xchg
dec
js
repz
inc
sub
shlb
cmp
add
inc
sub
mov
add
jae
sbb
arpl
xchg
adc
add
dec
test
ja
shlb
stos
fwait
std
pop
mov
add
shll
nop
stc
lret
int
pop
adc
sub
sbb
ret
jle
adc
add
cmp
cmp
mov
push
pop
rcll
adc
sub
es
add
shl
arpl
or
add
sbb
jl
cld
adc
or
loopne
add
xlat
std
mov
ret
fldenv
dec
lret
xorb
aam
out
fmuls
aas
add
cmp
pop
sbb
shlb
repnz
or
fisttpl
dec
in
mov
and
or
jnp
lds
call
xchg
aam
push
insb
fucomp
add
sbb
push
mov
inc
js
jo
fildl
xchg
mov
sub
push
ret
and
add
mov
lcall
pop
jo
add
jmp
and
cmc
mov
and
xchg
inc
test
call
pop
pop
sub
and
sub
add
cmp
xchg
fisubs
dec
cli
aam
or
lret
bound
cmp
fdivrs
mov
sbb
add
test
cmp
test
mov
xchg
dec
jno
xor
add
adc
jnp
mov
and
imul
js
ds
movsl
cmp
inc
rcrl
es
in
mov
jecxz
in
and
fs
ret
sarl
adc
jp
adc
cmp
sbb
fstpt
add
inc
int
push
dec
daa
fstl
jp
out
inc
xlat
sub
out
adc
and
and
jnp
xor
lods
adc
rorl
hlt
push
and
vhsubpd
jle
bound
dec
jo
mov
mov
adc
mov
int3
adc
pop
lret
add
rorl
sbb
jmp
stc
jp
mov
and
jp
lds
inc
or
test
push
ret
out
lret
push
popa
loopne
xchg
and
sbb
xor
dec
xor
stos
insb
mov
inc
pop
addb
fld
mov
jnp
inc
push
jno
jno
mov
adc
inc
adc
sub
lret
mov
pop
ret
test
jp
xchg
lods
xlat
xor
out
xchg
les
cmp
mov
jg
sbb
lods
and
xor
dec
inc
dec
sbb
adc
leave
rcrl
add
sahf
mov
jmp
ss
push
xor
clc
xchg
arpl
adc
leave
ss
add
daa
jp
out
adc
repnz
lret
bound
fwait
imul
bound
xor
and
cmpsb
icebp
sbb
aaa
sub
jbe
mov
pop
js
aam
in
xor
sub
adc
and
pop
add
aam
pop
repz
sbb
mov
mov
jp
sub
jmp
inc
jno
test
jne
cmp
popf
or
mov
imul
outsl
imul
movsb
out
lock
add
ja
xchg
arpl
imul
int3
rol
repz
adc
fst
push
fisubl
ret
movsl
dec
push
mov
out
add
sbb
jp
cwtl
xchg
sub
mov
pusha
and
xor
mov
push
xchg
push
jle
bound
cmp
jnp
aam
bound
push
xor
mov
movsl
fsubrl
jmp
les
lret
xchg
dec
subl
inc
cmp
xor
daa
mov
jge
add
stc
xor
xchg
ret
mov
jbe
mov
mov
mov
sbb
mov
inc
inc
add
xor
cmp
sub
add
add
push
test
or
imul
ljmp
test
adc
arpl
inc
adc
xchg
jmp
stos
pop
aam
jo
icebp
xor
add
cmp
sub
pop
rclb
cld
inc
rcrl
pop
ss
push
sub
cmp
add
pop
je
jns
shrb
push
mov
hlt
fmul
js
or
xor
testb
out
leave
repz
ret
ja
and
in
sub
add
dec
pushf
aas
mov
into
je
std
cmpsl
jmp
js
int3
dec
movsl
loop
aaa
dec
mov
xchg
add
xor
cmpsl
push
add
call
cltd
add
jle
add
dec
ret
mov
je
add
test
in
ret
mov
mov
pop
xor
push
js
sbb
loope
sub
lock
ret
fldl
lret
inc
add
loope
adc
mov
adc
je
cmc
inc
mov
xchg
mov
inc
mov
ss
subb
sub
push
mov
stos
mov
fs
dec
sub
imul
inc
imul
sub
sub
or
add
mov
xor
and
gs
push
jno
cli
cmp
jg
inc
ret
dec
and
repnz
movsl
movl
cli
call
add
add
addr16
dec
inc
popf
or
outsl
ret
xor
push
call
push
mov
push
nop
mov
and
mov
scas
out
out
adcl
pop
mov
outsl
xor
aam
loop
fwait
pop
mov
insl
les
stos
mov
loop
add
lods
jp
pop
je
add
sub
aas
cmp
mov
add
int3
fdivl
push
xchg
scas
push
ficompl
mov
imul
test
add
xchg
out
xor
dec
les
and
ss
je
and
or
inc
xchg
dec
fistps
arpl
jb
cld
mov
mov
add
pop
mov
aam
jge
loope
dec
js
jle
adc
inc
sub
xor
scas
int3
cmp
mov
jnp
push
xchg
or
jp
popa
or
rcrb
std
mov
mov
les
out
push
add
daa
aad
sub
cmp
mov
outsb
ret
jo
cmp
xchg
mov
ja
jmp
pop
add
addb
cmp
or
and
pusha
jnp
add
add
jle
adc
dec
loop
push
cmpsl
add
ucomiss
mov
cmp
xor
repnz
sbb
xor
xlat
push
fiaddl
into
js
daa
add
scas
popf
int3
mov
cmp
rclb
clc
ds
add
jmp
push
push
cs
and
fsubrl
scas
cld
add
sbb
mov
rclb
inc
inc
mov
outsl
shrb
add
outsb
push
aas
push
addb
mov
xor
pop
sti
adc
add
cmp
cmp
aad
or
ss
inc
inc
mov
sarl
mov
pop
mov
push
and
fadds
sub
mov
repz
push
loope
adc
jns
or
es
inc
sub
add
push
stos
cmp
hlt
ljmp
std
fxch
fs
jmp
jne
pop
pushf
lods
add
fimuls
test
add
cli
xchg
pusha
insl
mov
add
dec
into
dec
pop
ja
xlat
loop
inc
sub
and
mov
clc
sub
add
repz
add
xchg
pop
dec
add
xchg
mov
and
arpl
push
ljmp
lret
and
adc
enter
pop
wbinvd
xor
and
into
adc
cmpsl
dec
inc
mov
aas
mov
test
jl
ffree
aam
mov
adc
testb
in
add
pop
std
push
cmc
mov
ret
ljmp
jo
and
and
mov
cmp
lods
push
mov
sti
add
hlt
add
jb
xchg
or
arpl
add
cmpsb
jnp
dec
sbb
dec
inc
xchg
jns
and
loop
jl
mov
mov
xchg
mov
in
add
lds
les
pop
adc
inc
and
push
data16
cli
in
insb
mov
fsubs
push
cmp
lods
inc
pop
push
cmpsb
adc
andb
mov
push
test
or
sub
fwait
and
pop
mov
fbld
jp
rcll
xor
sbb
push
sysret
cmpb
jg
pop
roll
inc
add
mov
add
mov
pop
dec
pop
xorl
sub
add
xor
je
adc
mov
xor
xchg
int
scas
and
or
add
mov
hlt
xchg
mov
adc
mov
push
jg
idivb
xor
mov
xchg
shl
clc
mov
insl
add
gs
mov
jmp
nop
and
loopne
stc
xlat
xor
add
pusha
into
mov
add
fs
push
clc
int3
xchg
subl
sbb
rorl
enter
cmc
mov
pop
inc
sub
push
rcrb
inc
fildll
icebp
cmp
mov
dec
popa
pop
mov
mov
loopne
mov
dec
rolb
push
test
add
sub
and
fidivrl
outsl
ja
add
dec
aam
add
bts
rolb
sbb
or
cli
pop
dec
cmp
or
sbb
fistps
mov
push
clc
cld
js
pop
or
imul
movsb
icebp
mov
push
xchg
cmpl
lods
inc
mov
mov
or
mov
popf
movsb
cmp
insl
ret
leave
ja
xchg
cmp
add
arpl
out
addl
xchg
aaa
push
add
add
pop
test
push
rorb
rorl
popa
jl
aam
add
add
or
lds
xor
sbb
pop
nop
mov
mov
incl
das
adc
sbb
sub
jp
pop
push
jb
das
mov
pop
mov
sbb
xor
jle
push
or
jp
add
lret
roll
popl
mov
shl
aaa
rcl
sub
xchg
xchg
pop
mov
cmpsb
out
into
fwait
pop
mov
mov
xor
jns
jg
add
imull
inc
cs
popf
hlt
fisubs
and
pop
inc
push
add
jge
test
sub
cmpsb
dec
mov
cld
icebp
inc
lcall
pop
imul
repnz
repz
adc
jb
mov
cmp
in
clc
in
inc
rorl
xchg
pop
adc
enter
lods
mov
popa
negl
mov
lods
daa
das
cltd
add
mov
add
cmpsb
pusha
cmp
add
aad
clc
push
or
add
shll
mov
jge
pop
lahf
inc
add
mov
movsl
xor
jae
push
push
add
scas
add
cli
add
in
cmpsl
iret
push
mov
sub
inc
cmp
stc
inc
adc
adc
arpl
sub
mov
xchg
test
push
mov
sbb
adc
inc
dec
loopne
and
pop
xor
xchg
pusha
movsl
jg
mov
mov
into
pop
lods
and
xor
fnstenv
mov
in
lahf
cmc
mov
jb
outsl
push
add
ret
cmp
lahf
jae
pop
lret
mov
arpl
jle
pop
dec
push
mov
les
out
and
movsl
pusha
clc
add
cmp
lods
lock
mov
xor
cli
add
mov
xchg
daa
add
adc
add
adc
mov
mov
sarb
add
lea
out
mov
mov
xor
inc
mov
mov
aam
or
dec
lods
add
test
ret
add
cld
add
or
cmp
add
push
movsb
adc
inc
sub
mov
pop
xor
in
lds
xchg
xchg
fiadds
push
ljmp
mov
sub
cs
incb
dec
jle
out
fsubs
add
add
mov
imul
add
xchg
add
push
loopne
add
xlat
arpl
repz
jecxz
push
xor
aaa
pop
arpl
inc
iret
inc
imul
xchg
std
jo
cmp
fists
inc
dec
and
or
scas
mov
fldcw
pushf
add
ljmp
addb
ret
jne
fisttpl
inc
xchg
and
mov
neg
shrb
pop
mov
ljmp
inc
lret
dec
ljmp
push
pop
add
xor
cmp
inc
into
add
aam
pop
cmc
jmp
add
cmp
cld
jp
add
scas
in
cmc
negl
xor
add
idivb
shrb
add
lock
jne
imul
push
pop
popf
shl
addr16
adcl
add
out
pop
pop
push
ljmp
xor
sti
ret
jge
faddl
stos
in
cs
mov
movl
fucomip
es
jb
loope
in
repz
mov
sti
out
xor
std
test
inc
xor
xor
cmpsb
or
cltd
cmc
sahf
pop
incb
shr
aaa
cmp
pop
and
adc
add
mov
cmpsl
fld
nop
test
std
add
dec
mov
imul
adc
pop
inc
popf
cmpl
push
or
sbb
popa
test
fsub
dec
add
sbb
lea
and
shll
iret
sub
movswl
sbb
inc
xchg
les
and
das
cmp
add
fldcw
lret
mov
pusha
push
pop
iret
stos
or
sahf
inc
scas
outsl
mov
mov
inc
mov
pop
xchg
cmp
pop
jge
loop
add
pop
addr16
pop
rcrb
add
outsl
out
push
mov
std
shll
mov
movsb
add
mov
jo
test
pop
push
mov
int
pop
adcb
out
mov
mov
leave
pop
cmc
mov
lahf
add
gs
inc
or
sar
sub
dec
test
xor
jns
mov
push
and
hlt
sub
xchg
sub
popl
xchg
sbb
fwait
or
mov
je
xlat
es
jg
mov
ja
push
sub
cmp
insl
sbb
icebp
sahf
sub
ljmp
sbb
std
xchg
and
cmp
aad
daa
loop
clc
int3
stos
add
iret
xchg
movsb
mov
int
jg
mov
and
jnp
loop
int3
cmp
and
jbe
aaa
inc
mov
pop
ret
in
icebp
repnz
jge
push
movsl
in
test
inc
xchg
sbb
aas
push
cmp
loop
pop
mov
daa
test
adc
pop
adc
mov
sbb
and
add
testb
movsb
push
sub
mov
daa
xchg
dec
sti
rcrl
sbb
add
aas
scas
jo
aad
mov
push
stos
insl
mov
scas
dec
adc
push
lock
mov
or
mov
mov
mov
push
pushf
push
fstpt
gs
xor
ds
pop
cmp
mov
inc
lds
sbb
xchg
pushf
dec
mov
jp
cmp
add
mov
cld
sbb
add
sbb
hlt
or
lret
shrb
imul
jmp
test
stos
sahf
ret
loope
and
fbld
mov
jp
in
mov
outsl
xchg
call
lcall
push
jne
mov
lcall
test
cmc
imul
imul
sub
bound
push
std
lods
es
stc
fwait
es
push
sub
mov
xchg
dec
and
lret
cmc
sub
cmc
nop
repnz
frstor
add
lret
jne
pusha
mov
pop
andl
imul
lret
daa
call
ror
ds
pusha
cld
outsb
xor
std
call
mov
push
daa
ss
mov
push
sub
cmp
sub
imul
jnp
aad
and
push
and
movsb
test
pop
add
inc
jp
adc
cmp
push
repnz
jmp
lret
push
mov
ret
outsl
mov
xchg
inc
add
fmuls
mov
cmp
cwtl
fsubs
fstps
jle
mov
addr16
sub
push
ret
inc
adc
mov
push
cmp
jnp
pop
gs
xor
lds
mov
mov
inc
push
mov
xor
cmp
repnz
mov
mov
pop
nop
popa
scas
fbld
leave
cmc
dec
pushf
jp
data16
testb
push
mov
inc
addr16
cmpl
sbb
cmp
or
mov
mov
movsb
and
orb
sbb
and
mov
loopne
xor
mov
cs
sub
push
out
mov
sbb
or
mov
ret
jge
lret
add
adc
inc
scas
test
xor
rorb
aam
xchg
lock
add
inc
cmp
or
or
inc
and
scas
aam
xchg
adc
xorb
sbb
aad
xor
and
adc
adc
repz
or
push
hlt
fldenv
in
xor
movsb
xor
jmp
outsl
xor
stos
cs
xor
lret
and
int
icebp
ret
out
popa
ss
addr16
sbb
xchg
cmp
push
daa
arpl
rcrl
outsb
or
mov
adc
xchg
adc
imul
popa
jp
mov
addl
ret
repz
ds
cmp
fsubr
jmp
xchg
leave
mov
xchg
cltd
mov
or
nop
stos
cld
push
xchg
stos
xorb
scas
jge
or
sbb
sub
xor
rcrb
repz
scas
jp
jmp
and
and
es
dec
pop
adc
and
mov
push
out
jle
loopne
lret
jg
test
cmp
push
gs
adc
add
jbe
int
mov
imul
out
jnp
ljmp
je
or
fimuls
add
hlt
lret
rcll
xor
cmp
aaa
xchg
adc
sbb
mov
xor
sub
dec
add
adc
enter
jl
rolb
push
ss
movsb
add
imul
pushf
hlt
enter
cmp
xor
push
rol
addr16
dec
xor
jle
jnp
and
ret
test
dec
or
mov
mov
sub
movsb
in
cmp
add
js
ds
daa
and
sub
xchg
inc
int3
cmpsl
loopne
push
sbb
lea
lods
es
popf
lods
add
mov
xchg
inc
xchg
cwtl
xchg
add
out
add
or
sbb
push
int3
sub
filds
mov
repnz
ja
lds
insb
jg
sbb
dec
sbb
das
repnz
mov
addl
js
sti
scas
add
fistps
pop
movsl
push
ret
lock
aaa
push
adc
pop
adc
add
xchg
jb
pop
xor
sub
inc
sub
test
imul
or
add
push
shlb
add
mov
insb
lods
add
inc
adc
xchg
aad
jle
roll
xor
pop
inc
lldt
jg
faddl
push
cmp
xchg
in
pop
stc
add
cmpxchg
sarb
outsb
add
lods
cli
pop
cmp
inc
xchg
and
in
xchg
jl
or
scas
fcomps
jmp
dec
addb
gs
push
aas
push
addr16
inc
pop
loop
xor
loop
call
fwait
test
inc
push
int3
leave
mov
test
cltd
adc
cmp
add
das
and
lret
mov
adc
bound
mov
leave
int3
dec
push
ja
mov
or
add
ljmp
roll
push
mov
mov
dec
and
and
mov
add
das
outsb
push
add
scas
mov
imul
movl
xchg
add
pushf
neg
push
xchg
push
add
jmp
add
lcall
shlb
jb
xor
popa
jge
mov
notb
jno
sbb
inc
xchg
sbb
cmp
dec
xor
fmull
repz
xor
and
loope
cmpsl
cmp
scas
add
adcb
jnp
fs
pop
xchg
out
jle
nop
mov
mov
outsb
xor
jae
dec
cmp
jle
inc
idivl
aas
add
lahf
xchg
mov
pop
mov
pop
xlat
mov
inc
cwtl
xor
fcmovnb
xor
push
mov
push
add
popa
mov
outsb
movl
hlt
movsb
add
sbb
fnstsw
das
jbe
ljmp
sahf
xor
pop
add
push
add
xor
orl
lret
push
in
pop
fs
shl
sahf
push
xor
mov
jnp
ds
inc
add
icebp
js
sbb
cmpsl
jns
xor
cmp
sbb
sahf
push
mov
jl
and
xor
jns
adc
xor
jle
inc
leave
out
xchg
fistps
test
xchg
addl
decb
sub
add
js
das
fcomps
add
out
aam
int3
and
sub
or
mov
in
and
cltd
or
mov
xor
xchg
push
stos
rcrb
cwtl
orb
jbe
mov
push
add
and
hlt
idivb
nop
xchg
and
in
repz
aam
pop
sub
pop
iret
rol
cmpsl
mov
sub
jbe
in
cmp
sbb
lods
pop
sbb
sub
call
pop
rcl
mov
adc
xor
int3
lock
xchg
add
loope
and
lea
add
stos
mov
repnz
push
add
jge
sbb
sbb
stc
loope
cwtl
call
sahf
aaa
xor
imul
lds
repnz
mov
insl
sub
repz
mov
push
add
imul
xchg
xor
add
push
mov
aaa
inc
addl
pop
std
xor
cmpsl
or
subl
ret
inc
mov
nop
sbb
add
mov
cmp
add
lcall
add
test
test
dec
pop
jmp
xor
mov
cs
out
cmp
inc
mov
pop
aam
rcr
ret
pushf
into
jo
add
lock
xchg
ret
fldt
movl
shrl
lods
mov
sar
loopne
scas
xor
roll
and
test
sarb
cmp
cltd
add
pop
gs
pusha
or
iret
mov
add
jno
imul
add
sahf
ds
sarb
shll
aaa
out
inc
add
jo
pushf
sbb
jge
sbb
lods
push
push
insl
fcomps
add
aam
mov
cmp
imul
add
lret
ret
fdivs
xorl
cmp
pusha
xchg
add
push
mov
inc
into
pop
pop
lds
call
add
imul
inc
hlt
mov
pop
cmp
sub
stc
movsb
sbb
cmp
xchg
pusha
mov
incb
loope
xchg
mov
mov
sub
cmpsl
push
incl
test
mov
in
sbb
or
mov
dec
rolb
out
mov
inc
adc
add
xorb
mov
pop
or
add
cmp
shlb
xor
mov
and
mov
adc
push
add
loopne
jl
in
xchg
and
cs
add
fwait
adc
pop
add
inc
mov
xchg
add
insl
cld
pop
mov
jl
inc
incl
aaa
sbb
add
push
mov
inc
mov
stc
push
sbb
stos
in
add
in
and
sub
jmp
nop
gs
xchg
add
leave
imul
inc
dec
xor
cmp
lock
xor
jo
sar
jns
stos
test
in
dec
xchg
inc
mov
popl
sarl
sbb
push
popf
jae
mov
jbe
jo
xor
pushf
movl
lret
ret
sub
cld
xchg
xor
lock
seta
repnz
cmp
pop
jle
shl
add
ja
and
addb
add
outsl
jl
add
pop
xchg
cmpsl
xchg
cmpb
mov
and
cltd
ret
add
mov
push
iret
cltd
mov
add
addr16
dec
lea
stos
push
aam
mov
addb
dec
data16
add
loope
jno
xchg
pop
outsl
inc
mov
sub
cmp
inc
fdivrl
fsubrs
and
xchg
xchg
fiaddl
adc
mov
sbbl
pushf
cli
adc
loopne
sub
pop
sahf
pop
fists
mov
ret
dec
or
rcrl
ret
je
and
fisttpl
imul
sub
mov
mov
pop
fisubs
inc
idivl
into
fwait
mov
mov
or
inc
and
dec
push
push
or
pop
cmp
faddp
mov
lret
jb
cmpsl
xchg
add
add
negb
cmp
fldt
mov
add
xchg
sub
cmp
loopne
ficoml
cmp
mov
jl
add
jp
jbe
or
add
dec
cmp
add
cmp
mov
add
std
jp
int
xchg
mov
add
mov
and
pop
pop
lahf
or
xor
dec
add
ret
sti
sbb
leave
sbb
xor
scas
rolb
push
stos
les
pop
arpl
dec
xor
jmp
adc
adc
xor
std
test
add
mov
xchg
jg
or
test
int
stc
and
add
loop
mov
lods
divb
sbb
arpl
adcl
rcrl
push
dec
add
fsubs
add
jl
mov
sub
cmp
cmp
pop
add
and
stos
add
out
inc
mov
push
out
pop
fdiv
pop
dec
cmp
add
mov
or
inc
push
add
mov
push
sti
add
data16
xlat
subb
mov
out
add
movsl
ret
xchg
push
sub
mov
add
pop
inc
mov
pop
lds
add
cmp
out
test
arpl
xchg
addb
xor
into
scas
sar
aas
sar
sbb
push
addl
and
pushf
mov
ret
jmp
roll
xor
sti
outsl
dec
jmp
add
xchg
dec
filds
xor
xchg
mov
adc
adc
jp
clc
jbe
sahf
cltd
push
leave
cwtl
adc
daa
cmp
inc
xor
lret
dec
daa
pop
nop
jge
mov
sbb
ret
sbb
jle
sti
ja
cli
adc
mov
dec
lret
frstor
insb
loopne
cmp
stos
or
add
lcall
daa
out
mov
leave
pushf
sbb
xchg
cwtl
xchg
dec
or
pop
push
push
mov
test
and
cwtl
loop
mov
lcall
pushf
in
mov
mov
arpl
fs
mov
and
sbb
pop
sub
add
dec
iret
jp
sahf
xchg
mov
adc
mov
mov
adc
ficomps
mov
fbstp
out
ss
lea
pop
pusha
mov
fbld
cs
jle
push
pop
push
xor
addr16
out
sub
sbb
into
mov
mov
jmp
clc
fildll
sbb
cmp
or
sar
dec
inc
fimull
fisttps
fidivs
jo
mov
imul
hlt
cmp
mov
adc
test
test
sahf
mov
mov
scas
in
pop
leave
xor
loop
sbb
cmp
xor
les
adc
mov
rolb
xchg
add
hlt
xchg
rcrl
xchg
scas
add
and
cmpb
add
inc
lods
gs
mov
mov
pop
mov
xchg
ret
push
xor
lahf
push
add
daa
sti
ret
pop
mov
lea
popf
hlt
add
in
cmc
and
scas
push
mov
insb
pop
xchg
jp
xchg
adc
addr16
test
rclb
int
inc
xchg
jo
popa
jg
push
pop
jo
mov
and
sbb
xchg
mov
icebp
sbbb
fsts
push
call
adcl
dec
vpsubb
inc
pop
jne
xchg
mov
outsl
addb
shr
je
mov
push
mov
add
sti
lds
pusha
ficoms
loop
scas
aam
pop
sbb
fldl
bound
inc
test
jns
push
aas
jl
daa
bound
lret
dec
sub
les
out
leave
jmp
add
add
ss
stos
fs
in
pushf
in
imul
jp
scas
iret
push
sbb
icebp
lret
jnp
movl
mov
push
outsb
pop
decl
cmp
imul
xchg
je
jecxz
adc
out
adc
add
or
mov
int
jae
jg
jnp
or
idivl
les
mov
add
fs
dec
sbb
xchg
pop
loope
aam
fsts
and
add
push
sbb
and
sbb
inc
or
loop
jp
adc
mov
movsl
mov
sbb
dec
dec
ror
rclb
gs
out
jns
cmp
hlt
mov
fistps
mov
or
mov
xchg
shr
xchg
test
dec
test
ror
scas
into
mov
or
pop
adc
push
addr16
push
xor
data16
ja
cld
arpl
cmp
dec
addl
int
inc
mov
sbb
cmpsb
sub
adc
push
add
push
mov
mov
dec
sbb
ret
movsb
dec
jno
mov
sub
xor
outsb
pop
test
push
shrl
sti
adc
movsl
xchg
fs
inc
or
pop
addr16
sbbb
xor
test
cmp
in
sti
das
pop
insl
and
leave
enter
setl
es
ret
mov
mov
lcall
into
add
mov
cmp
and
sahf
lods
adcb
hlt
inc
push
cld
push
mov
xchg
adc
outsb
jnp
inc
mov
orl
pop
push
in
dec
sub
addb
subb
mov
in
push
idivb
xor
xchg
jg
mov
dec
addl
fnclex
mov
jp
test
imul
call
rolb
adc
mov
sbb
aaa
sbb
inc
popa
mov
mov
add
stc
ja
adcb
subb
fs
sbb
rorl
xor
aas
mov
fisttpll
add
js
mov
jg
push
push
out
cmp
mov
inc
sbb
cmp
push
jae
pop
mov
sbb
stc
push
add
xchg
jb
daa
dec
ret
insl
lds
scas
mov
aas
jge
ja
js,pn
fisttps
leave
jne
or
daa
aas
pop
sarb
cltd
jp
insl
cmp
daa
cmp
inc
add
repnz
stos
and
movsb
push
mov
adc
mov
add
adcb
cmp
andb
es
arpl
andb
lock
jbe
adc
dec
test
test
adc
daa
mov
pop
and
jp
rol
push
push
inc
add
adc
rorl
sbb
aam
mov
and
inc
xchg
rolb
push
leave
mov
and
cmp
mov
and
ror
push
xchg
adc
nop
mov
fidivrs
cmp
sbb
pop
add
lods
sti
pop
fsubl
mov
gs
jp
xor
insb
ret
or
add
arpl
adc
pop
mov
fidivl
jbe
or
mov
jno
insl
mov
stos
arpl
outsb
xor
cltd
movsl
rcll
mov
fldenv
or
lods
xchg
orl
ret
pxor
movsl
xor
sub
mov
in
cmp
mov
ror
adc
pop
movsl
enter
mov
mov
aad
dec
and
mov
lret
ficoml
xorb
push
shll
and
outsl
daa
out
jp
rcl
popa
xor
mov
jl
add
and
stos
xorb
adcl
jbe
addb
mov
fsts
inc
ror
cmp
mov
mov
sbbb
scas
jp
outsl
popf
repz
sbb
add
add
sarb
xchg
push
cmpsl
bound
out
ret
and
leave
lock
addr16
inc
lock
movl
jnp
mov
pop
push
addb
xchg
cmp
scas
insb
lahf
aas
push
inc
cmpsb
mov
bound
lods
adc
pop
mov
in
push
jp
push
push
jmp
jmp
pop
push
add
cmp
testl
icebp
aaa
in
pop
in
sub
or
xor
sbb
push
mov
cmp
cmp
sarb
jge
sub
lock
jp
pop
pop
daa
mov
int
testl
rorb
sub
add
xchg
addr16
lds
movsb
adc
push
scas
add
cmp
dec
xor
xor
and
stc
cmp
push
lods
and
push
push
add
repz
adc
dec
add
mov
add
loope
xchg
cs
das
pop
dec
xchg
jns
add
mov
lock
mov
add
jle
mov
stos
xchg
les
pop
outsl
jb
roll
jbe
add
mov
scas
lcall
inc
sbb
add
int
mov
mov
subl
je
fdivrs
cmp
out
popa
dec
sub
enter
push
repz
pop
cs
rcl
movsl
mov
aaa
sub
jb
iret
add
es
lods
fbstp
sub
cmove
jl
pop
loopne
cwtl
bound
mov
and
repnz
jne
push
rol
dec
rcrl
mov
aas
xchg
shlb
subb
aad
fcomps
push
cmpsl
stos
data16
inc
cltd
sub
cwtl
subl
xor
add
frndint
fimull
int
mov
push
and
adc
popa
jmp
ret
and
mov
lea
in
dec
cmp
ror
daa
xor
or
dec
inc
dec
ret
xchg
sub
hlt
repnz
clc
pop
fnsave
sub
xor
lock
jmp
fs
adc
or
pop
aaa
add
arpl
mov
pop
cmc
int3
add
sarl
jbe
mov
mov
mov
sbb
mov
les
adc
xchg
test
add
roll
add
out
xchg
and
inc
jne
mov
or
iret
fisubl
xor
loop
or
sub
add
sub
test
cmc
push
lahf
or
hlt
add
jg
push
and
and
jns
or
ret
test
inc
xlat
inc
mov
cmp
or
push
bound
sbb
add
loop
out
and
jmp
ret
pop
mov
xchg
jns
jg
push
fstl
cmp
mov
and
dec
xor
in
loop
mov
and
mov
add
into
out
shlb
cmc
mov
or
hlt
sub
mov
xor
xor
inc
wrmsr
add
and
fwait
outsb
and
sbb
stos
dec
cmp
xchg
fwait
add
cmp
movsb
les
add
cmp
cmp
push
ss
js
inc
xor
stc
xchg
mov
xor
push
sti
popa
mov
xor
pop
dec
cmp
or
fdivs
movsl
add
jne
lods
and
loop
in
shll
dec
dec
pop
sub
movsl
cmpsb
xor
and
sti
mov
shrb
pop
dec
xor
inc
sub
stos
cltd
leave
add
js
xlat
jecxz
insl
mov
roll
cwtl
popf
mov
add
dec
jle
add
fldpi
sub
cmpsl
pusha
idiv
push
mov
scas
add
filds
and
jge
inc
cmp
xchg
test
add
in
pop
rcr
xchg
xor
insb
inc
add
cmp
aaa
push
push
sub
xor
lock
lods
lahf
xor
andl
ljmp
out
push
cmp
pushf
sahf
test
and
add
in
stos
jne
mov
or
incb
jo
xor
inc
call
ljmp
adc
mov
insl
pop
lock
dec
addb
inc
iret
sbb
adc
xor
pop
outsl
jb
dec
jo
dec
xlat
or
lods
adc
int3
add
mov
leave
das
test
adc
cmpsb
jno
dec
icebp
shll
sub
add
push
js
rcrl
cmp
ret
pusha
xlat
jns
add
mov
or
add
dec
fstp
add
mov
popf
or
stos
rolb
leave
xor
fs
xchg
mov
jg
adcb
mov
add
jns
jle
shl
pusha
repz
lock
jmp
add
int3
out
int
stc
rorl
push
mov
dec
rcr
cwtl
outsb
mov
fs
inc
xor
arpl
jo
mov
mov
icebp
stos
xchg
or
jno
add
and
jle
cli
push
adc
add
ret
repnz
add
test
inc
pop
add
pop
sub
add
xorb
inc
mov
jg
dec
inc
dec
or
notb
or
mov
mov
out
and
mov
jecxz
jno
xor
inc
hlt
pop
mov
or
arpl
bound
lods
pop
cld
lret
mov
inc
pop
clc
adc
sub
sub
in
jb
inc
daa
mov
cmp
and
inc
xchg
scas
sub
sbb
daa
enter
adc
ficoms
inc
movsb
cmc
sahf
sbb
insl
jge
pusha
les
ret
and
movsb
and
push
inc
adc
push
jp
mov
sahf
leave
lods
in
jge
xor
mov
cld
cmc
xchg
dec
pop
daa
scas
int
push
xchg
xor
sbb
out
lods
shlb
adc
push
sbb
or
push
dec
add
push
dec
jo
les
sub
cltd
lret
or
xlat
aad
in
mov
jbe
insb
bound
adc
inc
add
fdivs
outsl
add
je
sub
dec
outsb
jge
mov
loop
sti
inc
out
jb
pusha
nop
cmp
cmpsb
jbe
cmp
mov
and
addr16
mov
daa
push
jp
sbb
dec
test
int
or
sbb
imul
fcoms
push
or
sbb
or
bound
repz
push
sti
and
test
stos
xor
out
daa
adcl
jle
ja
inc
and
outsl
sub
cmpsl
lea
xor
addb
ret
pop
jecxz
sub
imul
sub
add
int3
push
repz
cmp
out
hlt
mov
and
push
jne
jle
cld
inc
mov
ljmp
les
cmp
cmp
scas
push
in
call
add
mov
push
int3
jg
stos
repz
add
or
fimull
jae
mov
mov
cmpsb
cli
test
mov
data16
fcomip
out
cs
pusha
inc
test
mov
mov
aas
bound
jnp
pop
adc
je,pn
test
mov
lahf
or
lock
adc
aad
stos
xchg
cmpsl
and
xlat
ret
push
and
sbb
outsb
jp
movsb
into
lods
icebp
push
lods
in
lds
test
test
push
jo
and
jnp
mov
jnp
xlat
xor
jge
cmp
mov
jno
insb
push
repnz
sbb
js
push
and
or
and
sbb
mov
pop
cli
adc
lock
add
xchg
in
xchg
cmpb
add
xchg
icebp
and
or
push
push
jg
out
rclb
inc
mov
xchg
and
sbb
mov
xchg
shlb
rcll
enter
cmpsb
add
shll
mov
addr16
fimuls
pop
pop
cmc
xchg
pop
sub
xor
push
je
adc
cs
push
leave
shll
inc
cmp
pop
das
mov
aad
pop
ret
xor
repnz
adc
xlat
jge
jns
mov
shlb
arpl
and
mov
out
push
xchg
dec
jle
out
adc
sbb
jg
push
jp
imul
out
or
test
sbb
jne
cmp
out
shl
mov
mov
pop
mov
pop
popf
cmp
or
sbb
bound
aad
pop
add
mov
insb
push
test
jbe
add
and
dec
outsb
inc
cmp
or
lock
out
jns
test
clc
xor
movsb
ljmp
xchg
cmpb
xor
aaa
mov
cmc
sub
inc
cmp
adc
sbb
cmp
dec
jne
xor
test
mov
push
cld
adc
cmp
and
sbb
sbb
idivb
orb
pop
cmp
rcrl
inc
mov
mov
aaa
adc
inc
mov
push
addr16
inc
inc
push
push
jbe
sub
cld
lock
test
mov
add
and
jp
ljmp
mov
mov
imul
jnp
fiaddl
mov
js
dec
dec
add
and
mov
dec
div
fwait
sbb
gs
out
sbb
sbb
jno
pop
jb
cs
push
test
mov
outsb
fisttpl
cwtl
ljmp
xchg
inc
inc
cmpsb
mov
shll
adc
pop
sahf
shl
stos
test
or
jg
pusha
and
sbb
std
inc
cwtl
test
sbb
push
insl
pop
add
xor
outsl
shll
daa
ljmp
pop
mov
mov
mov
cmpsl
ljmp
and
nop
add
loopne
jo
outsb
dec
push
add
mov
sub
xchg
mov
int
sub
ret
cwtl
add
shrl
lret
mov
insb
pop
xlat
roll
mov
adc
nop
pop
sbb
gs
push
aam
movsl
pop
or
lock
adc
or
sarl
sbb
push
xor
and
movsb
add
jp
jmp
add
aaa
in
ret
addr16
jl
push
cmpsl
dec
mov
fcomip
fistps
rcrl
sub
std
cmp
cltd
inc
adc
adc
outsb
xor
ret
pop
add
fucomp
add
dec
push
stos
lds
push
shl
das
sbb
imul
push
dec
mov
pop
lods
add
pop
cmpsb
dec
xchg
push
sbb
cmpsl
mov
mov
push
fcmovb
int3
mull
cmp
insl
rcll
mov
js
pushf
add
lea
das
pop
inc
add
add
adc
dec
test
add
xchg
add
cmpsl
cmp
popf
dec
add
hlt
and
sbb
cmp
sub
sahf
cmc
roll
or
sbb
mov
adc
sarb
push
jecxz
stos
inc
cmc
ret
ret
mov
xchg
jnp
inc
shll
or
xor
jge
cmpsb
shll
lcall
sahf
fwait
punpcklwd
add
dec
push
iret
enter
add
mov
daa
inc
add
mov
jbe
push
cltd
add
mov
aas
cmp
jmp
test
rol
imul
std
add
adcl
addb
mov
inc
jne
loop
je
cmp
add
and
lods
into
push
jmp
sbb
cmpsb
pop
jno
mov
lret
rcr
imul
pop
add
dec
ret
xor
sub
add
sbb
repnz
dec
push
cmpl
insl
push
pushf
popl
shl
in
mov
inc
xor
dec
sub
xchg
add
dec
fistl
jp
fistps
loope
add
push
jbe
inc
outsl
pop
lret
add
repz
add
lcall
clc
cmp
and
mov
daa
cli
cmpsl
std
jmp
inc
popa
cmpxchg
adc
mov
lods
or
mov
cmpsb
mov
hlt
add
sbb
mov
mov
push
xor
mov
inc
jno
inc
int3
mov
addr16
divb
sub
add
out
repnz
rolb
mov
dec
and
add
push
sbbl
mov
shlb
fwait
outsb
mov
dec
out
add
push
icebp
lock
cli
sbb
mov
mov
push
add
enter
insl
add
mov
popf
add
dec
cmp
sbb
pop
inc
jg
scas
mov
mov
inc
inc
push
and
add
inc
das
mov
std
dec
add
lds
enter
sbbb
pop
mov
sbb
aaa
fisubs
sub
repnz
xchg
mov
sub
sbb
test
loopne
hlt
add
idivl
call
sub
xchg
ja
jae
cmp
sahf
test
dec
es
xor
loopne
push
dec
mov
cmp
inc
sub
cmc
notb
mov
xchg
cld
inc
ficompl
add
mov
loopne
or
outsl
ljmp
push
mov
xor
jns
pop
subb
xchg
ds
scas
xchg
rorl
je
js
push
ds
fbld
xchg
test
sbb
add
dec
pop
mov
loope
fsubl
xlat
cmp
mov
adc
and
aad
mov
leave
fbstp
jnp
sbb
adc
inc
pushf
gs
pop
xchg
jl
leave
fmull
or
in
ret
and
sub
fnstenv
outsb
lock
xchg
rcl
lds
popa
mov
imul
jne
mov
test
xchg
call
fcomps
cli
sub
rcl
nop
je
add
aad
add
in
xor
sub
push
push
lds
rolb
pop
std
sub
out
add
enter
lods
add
jb
or
xor
add
dec
push
and
pop
mov
scas
add
pop
stos
insl
mov
inc
mov
gs
or
add
dec
shll
hlt
std
push
add
out
out
mov
out
movsl
fsubl
pushf
mov
sub
or
test
les
mov
sub
cmpsb
sbb
stos
add
fs
push
add
adc
cmp
push
inc
inc
fmuls
pop
push
add
mov
add
sti
adc
push
rcr
and
pop
inc
add
fistps
cmp
fstpl
mov
push
into
sub
jnp
adc
add
lcall
lock
sub
fs
subb
daa
add
sarb
cs
mov
add
push
ficoml
test
xchg
push
cli
or
popa
mov
add
jg
add
pop
xlat
bound
adc
sbb
mov
add
arpl
mov
test
out
out
cmpsl
or
jbe
xchg
and
dec
outsl
sub
sbb
pop
pop
xor
sbb
jp
add
add
mov
pop
jmp
ss
repz
add
cmp
es
addl
lods
das
cmp
add
std
push
out
add
add
jp
lock
shlb
xor
xor
lret
adc
xor
inc
add
shll
adc
int
add
iret
mov
xchg
js
jns
cmp
into
mov
add
push
push
mov
sub
dec
push
movsb
xchg
sbb
and
test
push
in
sub
pop
dec
inc
jnp
shll
pusha
sar
sbbb
mov
and
mov
inc
cmp
std
sbbl
add
push
fildl
dec
cmp
add
dec
and
add
idivb
jno
mov
jmp
inc
sahf
pop
shrb
ss
xchg
jne
inc
cmpsb
or
lahf
push
pop
cmp
imul
shll
fisubrs
gs
add
ljmp
hlt
bound
inc
and
int
insl
mov
test
and
add
lret
in
cmp
sti
in
push
xchg
sbb
adc
addl
dec
xor
mov
int
pop
repz
cmc
mov
sbb
ret
sbb
cmpsb
add
shll
roll
out
arpl
outsl
inc
scas
inc
add
lret
adc
cmpsl
outsl
sahf
jl
xchg
test
mov
and
scas
inc
bswap
pop
adc
rcrb
rolb
data16
xor
enter
dec
sub
push
fs
dec
sbb
sub
push
sbb
seto
iret
push
xlat
lock
cli
add
push
jle
push
cmp
add
pop
and
outsb
xor
das
popl
xlat
pop
adc
push
cmp
inc
cmp
les
push
cmp
loope
add
push
int3
pop
inc
mov
andl
and
ja
data16
sbb
pop
pop
sbb
push
enter
xor
mov
add
pusha
mov
add
push
nop
pop
das
insb
mov
add
addr16
rolb
cmc
sub
cs
add
xchg
lds
mov
inc
lods
add
xor
leave
add
push
xchg
xchg
andl
mov
loopne
mov
ficompl
jecxz
xor
sub
push
xlat
test
and
push
loop
inc
lret
insb
bound
cmp
jb
pushf
pop
sub
dec
inc
mov
sub
cltd
cwtl
into
push
dec
sbb
test
inc
aaa
lea
add
stc
pop
xor
sub
add
or
and
scas
js
popf
rolb
cmp
fsubl
xchg
ret
es
iret
jg
mov
sub
ret
jnp
mov
jmp
pop
add
push
sub
mov
stos
loop
aam
sbb
pop
stos
mov
nop
jge
mov
cmp
movsb
add
sub
fcompl
dec
sbb
movsl
pushf
scas
sti
out
or
adc
lret
pop
loope
push
sarl
jnp
cmp
push
aad
scas
push
fildl
aaa
jns
ds
dec
mov
push
mov
movb
sbb
dec
mov
inc
ret
pop
mov
pop
daa
sbb
mov
add
sub
shll
push
aaa
add
ss
sub
cmp
add
ljmp
rclb
test
sbb
lea
sbb
pop
stos
pop
adc
mov
cli
lret
xor
adc
add
mov
jecxz
add
imul
cwtl
cmp
push
fnstenv
pop
add
add
dec
ret
fsubrl
cmp
push
ljmp
add
rcrl
push
sub
xor
sbb
xchg
aas
sub
jge
aad
xchg
sub
pop
jecxz
ret
fdivr
jbe
into
jo
pusha
lcall
sbb
loopne
inc
adc
call
inc
add
or
outsb
lcall
lcall
inc
mov
dec
dec
test
add
pop
fisubs
sbbb
pusha
sbb
push
add
test
in
mov
rolb
cmp
pop
dec
or
frstor
cmp
push
movsb
xchg
mov
xchg
mov
arpl
in
or
cs
xor
xor
inc
jge
cltd
ret
push
cmp
and
add
jl
pop
pop
cmpsl
dec
rcl
add
or
push
cmp
filds
sbb
ja
jbe
add
imul
push
mov
add
mov
mov
fstpt
mov
test
add
fsub
mov
xlat
sti
bound
je
mov
cmp
and
xchg
mov
xor
inc
push
xor
pop
fmuls
movsl
jecxz
rcll
fs
mov
addr16
and
sar
inc
or
add
sbb
aas
pop
add
stos
adc
cmp
or
jne
dec
jno
inc
dec
add
and
add
sahf
mov
repnz
es
cli
fcomps
cmpsb
mov
out
out
xchg
jbe
loop
pop
add
les
jg
add
adc
je
icebp
xor
push
xchg
and
jl
cmp
mov
push
or
fmulp
dec
jns
mov
rcrl
rclb
cmp
imul
sub
add
rol
mov
add
xchg
jnp
jmp
xchg
jp
mov
and
add
cwtl
clc
jmp
lds
sti
adc
mov
inc
cli
inc
pop
add
inc
cmc
mov
cmp
xlat
pop
aam
jecxz
inc
jne
frstor
sbb
add
lea
jno
jecxz
or
jns
gs
cmc
jl
and
mov
lret
cld
ljmp
scas
add
movsl
and
mov
inc
dec
lods
adc
cmp
mov
test
pop
cmp
add
xstore-rng
cmpsl
les
mov
mov
adc
push
fdiv
repnz
aas
inc
rcll
cmp
xor
cmp
add
in
in
inc
push
jno
pop
adc
loopne
add
cwtl
es
fistpll
mov
lods
mov
mov
mov
add
les
lret
sub
xor
ja
add
stc
xchg
je
mov
call
push
add
stos
cmc
pop
xchg
mov
mov
push
mov
test
lods
inc
add
cs
popl
dec
test
jo
dec
mov
and
fidivrl
dec
push
lcall
test
mov
and
cs
leave
push
mov
and
cwtl
pop
mov
lods
jmp
add
int3
mov
movsb
icebp
cmpl
mov
pusha
or
push
andb
outsb
mov
scas
stos
adc
mov
add
sub
xorl
es
and
cmp
inc
mov
push
xor
and
arpl
mov
xor
mov
cmp
inc
push
pop
rcl
ret
jne
loop
mov
hlt
and
ret
sbb
mov
mov
add
incb
push
push
movsb
sbb
enter
xor
and
inc
xor
push
dec
je
test
cmp
jae
pop
push
jle
or
adc
add
pusha
mov
sbb
push
ss
pop
and
loopne
stc
cmp
mov
cltd
mov
dec
ss
push
or
adc
add
cmpsb
jns
mov
cmp
dec
xor
jo
addb
sub
pop
and
xor
add
nop
je
pusha
filds
add
inc
pop
cs
xchg
inc
ret
xor
jno
outsb
push
add
ja
push
add
idivl
int
iret
jmp
xor
test
and
popa
xor
enter
pushl
mov
inc
pop
lahf
xor
bound
lret
or
push
add
xor
scas
and
cmp
scas
sub
jle
jno
jae
data16
push
sbb
cli
push
mov
dec
lahf
add
js
jae
mov
xchg
dec
daa
clc
stos
mov
in
adc
stos
addb
mov
insb
xchg
add
mov
mov
cmc
push
fadds
sub
xor
cmp
loope
inc
adc
or
jns
add
iret
data16
mov
xor
stos
push
mov
lahf
call
jecxz
ss
stos
scas
dec
es
add
ficoml
add
lods
pop
test
sbb
cmpsb
shl
scas
add
xor
add
cmpsb
call
pop
inc
rcl
call
and
test
xor
call
shlb
pop
les
hlt
pop
in
add
push
inc
enter
sbb
xchg
mov
into
sub
test
inc
sarb
sub
dec
inc
inc
jo
pusha
into
jns
test
sbb
dec
cmpsb
mov
push
pusha
bound
js
push
ficomps
cmpsl
jmp
xor
insl
add
into
and
cmp
inc
and
lds
lret
cs
jp
mov
aad
or
push
sbb
push
popa
add
mov
insb
add
push
mov
in
or
dec
ret
xchg
popa
lahf
xchg
mov
fiaddl
or
cmp
pop
ljmp
insl
dec
fs
psadbw
xchg
gs
mov
mov
loop
inc
dec
sbb
mov
or
add
adc
dec
mov
popf
cmpsl
cmp
cwtl
aas
out
hlt
xchg
xor
loope
mov
xchg
mov
xor
dec
add
sbb
add
jp
cmpb
add
add
sub
cmpb
mov
sub
mov
outsl
xchg
push
ficoms
mov
flds
cmp
push
or
mov
cmp
inc
js
hlt
fcomp
pop
popf
mov
or
mov
inc
inc
movsl
add
mov
fwait
ja
cmp
sti
icebp
fdivrp
and
into
test
add
lods
inc
inc
jmp
int
mov
aam
add
and
add
ja
inc
xor
dec
add
mov
xchg
cmp
fstl
shrl
cli
xchg
jns
inc
mov
test
add
push
inc
sbb
sbb
arpl
dec
push
add
ss
cmc
pop
popf
pop
inc
adc
in
cli
dec
jb
and
xchg
adc
fidivs
cmp
add
adcl
push
lret
sbb
into
add
or
dec
xchg
add
das
sbb
mov
jno
push
pop
pusha
inc
mov
fbld
sbb
sbb
test
bnd
and
lret
or
lea
adc
cmp
das
add
sahf
add
cmp
sub
popa
in
mov
xor
mov
adc
fists
inc
inc
jecxz
fidivs
push
lods
xlat
add
and
jl
pop
mov
inc
and
jge
rcll
fists
test
subl
pop
mov
lret
mov
mov
pop
or
pusha
sbbb
repz
add
icebp
test
xchg
data16
popf
jmp
lds
adc
xlat
cmp
and
mov
and
cld
inc
pop
add
adc
jo
cmp
pop
fisttps
sahf
jbe
add
mov
and
roll
and
pushfw
movl
aas
cmpsl
adc
mov
in
mov
fdivrp
sbb
repnz
mov
repz
and
adc
cmp
mov
fldt
mov
out
add
and
lcall
sbb
adc
movsb
fwait
and
imul
std
jmp
int3
mov
xchg
push
dec
and
sti
lods
push
mov
sbb
lret
addr16
mov
lods
insl
data16
lods
fs
fstl
inc
stos
adc
inc
es
in
das
rcrb
rclb
js
mov
cmp
xchg
rclb
lea
mov
lcall
ja
flds
sub
lock
popa
add
outsl
fcmovb
bound
add
add
xchg
lods
mov
scas
sbb
push
push
mov
jmp
lahf
pop
add
mov
cmpb
sbb
add
int3
adc
in
rcll
jecxz
adc
iret
or
add
stc
jge
sub
add
xchg
jbe
popa
pop
or
cwtl
fldcw
and
leave
add
pop
xor
pop
flds
iret
and
je
add
pop
sarl
out
ja
jmp
iret
pop
dec
add
jno
or
cmpsl
adc
aad
pop
fmuls
mov
notl
ss
cmpl
mov
imul
sbb
fbstp
add
jp
test
ds
add
lds
mull
add
stos
movsl
call
fcomps
jle
or
ja
pop
stos
xor
xor
add
xchg
pop
mov
rol
mov
adc
jno
xor
int3
dec
pop
popf
jo
mov
xor
rolb
pushf
ljmp
fndisi(8087
mov
inc
std
les
push
xorb
mov
je
hlt
add
out
xor
push
xchg
cli
mov
push
xlat
aaa
jge
mov
mov
stos
sbb
enter
ss
std
jo
fisttpl
and
mov
aad
xor
icebp
enter
or
pop
jnp
xor
sub
cwtl
push
cmpsb
in
ljmp
jo
mov
rcrb
sbb
mov
popf
push
aam
outsl
adc
jp
shll
push
mov
pushf
cmp
pop
lret
push
pop
jg
pop
push
and
rolb
jge
popf
data16
and
dec
mov
das
fiadds
movsb
pushf
mov
scas
dec
or
int3
adc
xchg
jne
std
adc
shr
sbb
xor
jp
sbb
pop
dec
test
in
mov
jne
push
dec
or
in
sarb
in
jmp
push
xor
and
sbb
stc
xchg
inc
sti
aad
test
mov
xor
sahf
adc
ret
cld
push
xor
and
mov
push
mov
sarb
mov
out
pop
mov
mov
les
inc
adc
lahf
jg
cltd
xchg
adc
in
and
test
add
mov
add
dec
adc
out
push
mov
pop
sbb
adc
aaa
cmp
nop
fwait
push
push
cmp
pop
and
dec
fistl
mov
inc
stc
outsl
scas
adc
add
imul
ljmp
outsl
fcompl
sub
xchg
ret
sbb
movsl
sub
mov
js
ss
xor
mov
inc
add
jg
mov
ds
mov
aad
or
in
gs
mov
adc
sub
mov
mov
pop
push
dec
orl
sti
int3
filds
or
out
mov
mov
dec
dec
push
cmova
ret
push
loop
outsb
push
out
pop
into
add
mov
xlat
add
jg
push
add
stos
lret
lret
inc
imul
mov
jge
cs
lret
shll
inc
call
mov
push
shlb
and
nop
pusha
add
sahf
les
gs
out
push
add
lcall
lock
or
mov
add
outsl
and
cmpsb
add
sbb
mov
je
mov
add
stc
or
xor
movsl
add
cmp
mov
ret
sahf
hlt
xor
push
in
mov
dec
cs
add
mov
jne
and
xor
sbb
dec
push
cmp
xlat
xor
rorb
daa
pop
test
add
pop
sbb
fs
imul
pushf
add
mov
stos
add
aad
fsubr
insb
mov
test
or
fstps
xor
les
movsb
testl
dec
mov
lds
imul
add
cmp
popa
add
orl
inc
inc
repnz
aad
aas
mov
sub
jb
fnstenv
add
out
inc
jge
mov
add
fistl
xor
outsl
add
scas
stos
inc
mov
aaa
and
xchg
inc
addr16
mov
xchg
cmc
shrb
rcr
mov
xor
and
add
adc
add
cmp
and
icebp
cmp
jns
dec
push
sbb
shll
xchg
add
je
ljmp
push
xor
int
testl
dec
adc
aas
ds
in
or
pop
js
loop
add
popa
push
pop
push
and
xor
std
bound
adc
test
rol
fnstcw
lods
in
sub
cmp
jg
push
mov
jb
add
xchg
lahf
mov
rolb
adc
add
cmp
add
sbb
scas
shr
push
and
or
imul
aad
cmp
jg
das
and
add
and
mov
std
push
sub
dec
inc
lds
mov
inc
sbb
scas
xor
cmp
jnp
inc
lcall
js
or
call
cmp
in
pop
loopne
mov
sbb
int
mov
dec
outsl
mov
xchg
inc
sbb
jmp
mov
ds
xor
add
movsb
add
sarb
xchg
or
sub
mov
mov
jne
add
leave
and
iret
pushfw
or
and
mov
jmp
mov
and
mov
int
data16
jp
vmwrite
add
push
xchg
int3
mov
mov
adcb
shr
mov
stos
or
aas
pop
ror
sub
movsl
lcall
or
mov
push
dec
xor
mov
loope
popa
int
add
arpl
scas
testb
mov
aaa
pop
fdivs
sar
dec
pushw
inc
divb
aas
mov
and
and
push
call
out
cmp
push
subb
add
std
or
inc
scas
push
add
jl
lret
ja
push
pop
sahf
add
inc
dec
loop
adc
inc
out
pop
push
mov
fwait
xchg
add
pop
sti
or
cmp
adc
or
push
inc
out
dec
insl
and
xor
mov
lret
jo
xchg
mov
mov
ss
movsb
push
xchg
fsubl
lcall
jle
xor
arpl
stos
mov
sub
fldl
xor
or
mov
push
int3
bound
jnp
mov
cltd
das
jmp
and
hlt
cmpsb
iret
add
jp
cmp
pushl
fs
out
add
mov
xchg
or
js
jl
push
aam
adc
sbb
xchg
xchg
dec
rorb
or
arpl
filds
aas
dec
les
fwait
add
pop
in
add
push
pop
dec
adc
test
lds
add
out
shlb
add
sahf
adc
pushf
sub
cmp
add
test
mov
shlb
push
adcl
stc
loop
mov
dec
int
shlb
ret
bound
xchg
xorb
lock
push
sub
add
or
ljmp
dec
and
adc
xchg
fcoml
mov
dec
pop
mov
adc
lahf
push
mov
aad
bound
add
cmp
pop
cmc
ja
jmp
and
std
xor
add
ret
out
shlb
negb
call
adc
mov
test
dec
add
insl
mov
add
and
add
in
cmp
add
add
add
sti
xor
sub
fildl
lret
add
dec
aad
mov
mov
subl
mov
jmp
mov
iret
sub
inc
sbb
cmp
arpl
pop
movsl
pop
jae
orl
inc
inc
mov
and
lods
out
add
clc
int
orl
daa
dec
rcrb
addr16
cs
xchg
int
cwtl
pop
push
ret
outsl
adc
nop
sub
sub
or
sarl
and
mov
push
dec
adc
bound
js
dec
xorb
add
int
sbb
and
push
in
imul
aas
mov
push
add
movsb
ret
out
repnz
loope
sbb
adc
or
ljmp
mov
cmpl
mov
jnp
ret
fdivs
or
mov
aam
sar
fsubl
js
sbb
lods
sti
inc
nop
add
adc
mov
xchg
mov
add
scas
orb
inc
stos
test
xchg
cmpsl
pusha
insl
fidivs
fs
mov
jbe
xor
add
aad
rdmsr
xchg
gs
repz
fndisi(8087
and
pop
ret
mov
adc
jbe,pt
mov
cmpsb
lahf
jp
rcrl
loopne
mov
mov
pop
pushf
mov
and
add
daa
push
insl
es
dec
cmc
sbb
xchg
mov
sub
insb
cltd
pop
mov
es
sti
mov
push
daa
push
xchg
pop
fwait
shrl
mov
ss
scas
add
and
test
pop
scas
in
add
iret
shrl
sbb
push
adc
mov
sbb
repnz
rclb
and
and
xor
lods
add
push
rcll
mov
and
xchg
xor
les
jle
int3
mov
fmul
push
inc
test
inc
ficomps
fimull
cmp
inc
mov
daa
das
cmp
movb
dec
pop
hlt
fisttps
add
xchg
std
loope
popl
cs
movsb
shll
add
sbb
pop
addl
add
int3
inc
icebp
jl
mov
pushf
movsl
inc
add
bound
add
pop
jg
sti
or
jnp
push
jne
jo
sub
and
incb
push
sbb
xor
pusha
std
push
push
testb
xor
rcrl
hlt
sahf
ret
cmp
daa
aas
aaa
add
icebp
pop
cltd
jle
inc
movsl
lret
jp
addr16
jle
in
jns
in
cmp
les
jl
cmp
rcrl
jne
js
scas
iret
lcall
xor
mov
sbb
lcall
sahf
faddp
loop
inc
jg
xlat
sbbl
dec
mov
lret
or
xchg
mov
dec
cmp
les
scas
ret
pop
ds
push
cmp
incl
daa
sbb
adc
sti
call
sti
into
stc
dec
mov
pop
loop
sub
or
adc
jp
xorb
rcl
mov
or
in
inc
xor
insl
or
mov
aas
xor
mov
out
cmp
arpl
push
aad
add
jmp
sub
cmp
xor
sub
xlat
call
cli
or
mov
stos
fsubrl
mov
inc
filds
sbb
inc
inc
mov
xlat
cmpsl
loope
or
pop
testb
and
ret
adc
sbb
mov
movsb
test
push
test
sub
fildll
mov
ficoms
les
and
and
in
xchg
or
leave
sbb
inc
mov
loop
icebp
bound
lods
dec
arpl
push
mov
or
stc
bound
push
mov
into
nop
cmpsl
mov
add
pop
lods
and
addb
inc
les
or
xor
inc
dec
pop
add
shrb
jnp
add
mov
aad
mov
or
mov
add
xor
add
scas
inc
jno
sub
pop
shlb
mov
cmp
iret
into
dec
inc
xchg
or
mov
cmpsb
das
xor
pop
add
pop
repz
xor
fstps
cld
dec
and
shlb
add
mov
xlat
es
add
add
sahf
pop
popa
loop
mov
sar
in
shl
lods
sub
jmp
lods
add
pop
mov
and
dec
mov
push
imul
add
sahf
aas
push
jbe
dec
shll
jle
fsubs
add
aad
dec
hlt
movsl
nop
add
and
pop
rorl
mov
sub
add
inc
push
ficoms
sbb
fbstp
jae
repnz
sub
jmp
sarb
cmp
cmp
push
push
addr16
dec
adc
add
sbb
rcrl
xchg
add
dec
sbb
pop
xor
shll
adc
xor
add
cmp
add
in
add
add
cli
pop
xchg
stos
xlat
out
inc
inc
cmp
add
call
out
ficoms
inc
cmp
jecxz
push
jge
add
add
and
andb
sbb
dec
push
mov
pop
outsb
rorl
pop
sbb
pop
sbb
imul
jno
adc
negl
xchg
enter
and
dec
and
pop
add
sub
lcall
rep
xorb
out
fcompl
push
push
or
inc
mov
lods
scas
lock
push
sbb
jecxz
sub
inc
cmc
jp
cmp
xchg
pop
xor
shll
pop
pop
sbb
push
aam
ret
cmp
mov
es
xor
das
fdivrl
fwait
sbb
ficoms
fcoms
xlat
pop
push
add
test
jo
adc
add
test
movl
xchg
fimull
xchg
jmp
out
popa
push
shrl
ss
add
xchg
xor
subb
and
lret
jb
movsl
inc
pusha
test
sub
pop
jns
int
clc
loop
mov
je
xor
decb
mov
push
test
inc
aaa
sahf
movb
push
cmpsb
xchg
or
shl
xchg
fwait
sub
ja
mov
jge
jo
xchg
aad
xor
pop
loope
sbb
add
xor
cmp
jecxz
mov
outsb
shrb
push
fwait
insl
xor
lcall
lods
std
push
adc
ds
add
mov
add
mov
mov
js
add
jbe
add
jo
bound
adc
dec
sar
in
push
mov
push
ss
fldt
mov
add
jne
mov
sub
das
pusha
xor
testl
adc
adc
dec
and
mov
ret
dec
clc
jb
sti
dec
adc
pop
xor
and
scas
pusha
xor
rorl
or
dec
add
mov
ja
mov
stos
cmpsb
push
add
out
xor
lcall
xlat
in
and
inc
mov
pop
inc
test
xchg
xor
add
mov
bound
dec
rcrb
push
aad
xor
into
jecxz
popf
int
and
dec
inc
mov
xchg
shll
xor
fldenv
repz
mov
das
add
orl
ret
into
cmpsl
repz
push
and
cwtl
movsb
push
stos
mov
test
mov
cmp
add
cmp
rclb
add
push
and
cmc
adc
sbb
inc
xor
rcll
jae
cltd
sub
push
sarb
add
adc
cld
out
xor
in
pop
xchg
push
add
out
xor
aad
add
nop
stos
jmp
sub
and
mov
ret
daa
mov
dec
add
push
es
fcmove
ret
jge
fnsave
movsl
dec
cmp
adcl
inc
sub
mov
divb
xchg
mov
xchg
sub
and
xlat
imul
xchg
cmp
popa
mov
repz
dec
nop
xlat
mov
sub
push
scas
imul
xor
or
mov
out
mov
push
cld
add
pop
xor
cmp
add
loope
pusha
mov
in
loopne
je
xor
mov
stos
sbb
cmp
push
rorl
jns
add
rcll
dec
loop
fidivs
and
sbb
ret
lock
pop
leave
clc
in
and
dec
dec
add
push
frstpm(287
jo
maskmovq
notl
das
and
push
call
add
shr
loope
in
sub
lods
sub
imul
pop
in
add
cmovge
ret
test
add
mov
faddl
loop
mov
xchg
dec
int
daa
xlat
or
and
mov
ret
pop
imul
rcrb
adc
xor
push
jge
sbb
fcmovb
add
shl
scas
inc
push
and
lret
sbb
ljmp
js
xor
inc
pop
in
out
sbb
add
sub
or
testb
mov
jno
xchg
mov
scas
pusha
or
jmp
and
cmp
mov
ja
sahf
cmpsl
push
data16
fcmovnu
add
jns
mov
rolb
frstor
push
add
pop
pop
rclb
xor
mov
add
nop
lods
sti
inc
cmpsb
pushf
dec
add
jg
xchg
gs
adc
cli
imulb
out
daa
cltd
add
aas
mov
add
je
testl
push
jmp
or
repz
mov
pop
cmp
test
mov
adc
sbb
rolb
and
mov
ss
rclb
or
mov
xchg
shrl
add
leave
jp
cmp
roll
mov
rcl
les
xchg
add
lds
lock
mov
ret
sbb
cmp
add
test
push
outsb
xor
fnstcw
inc
in
sahf
outsl
inc
jge
int
out
pushf
iret
fs
push
ret
popf
cmpsl
lods
add
add
into
sbb
in
cmp
shll
je
sbb
cli
pop
xor
call
out
lret
dec
loope
cmpl
pop
ficoml
xchg
and
inc
cmp
cltd
loopne
mov
orb
ficoms
pusha
call
jbe
add
mov
dec
xchg
stos
inc
add
xor
jnp
mov
mov
faddl
mov
push
pop
sub
mov
inc
push
mov
lcall
or
inc
xor
mov
and
js
imul
mov
or
xchg
nop
outsb
pop
pop
clc
add
inc
shrl
shrl
mov
cmpsl
bound
inc
out
add
jmp
pop
sub
in
mov
jo
pop
aam
add
mov
push
mov
mov
push
xor
push
push
leave
xchg
hlt
out
add
mov
jbe
lds
lcall
xchg
pusha
jp
gs
sub
jecxz
push
inc
cmp
adc
or
roll
incb
xor
mov
sbb
sub
lea
pop
out
cmp
xchg
jnp
inc
xchg
lret
sbb
mov
pop
lret
or
push
xchg
jg
add
xor
cmp
and
lods
dec
jmp
jg
jno
lahf
fs
pop
lahf
mov
out
jg
test
mov
jns
and
movsb
inc
fwait
cmp
sbb
mov
movsb
roll
mov
or
lahf
cmp
inc
mov
decb
lahf
pusha
sti
jo
fildll
pop
xorl
lds
loopne
mov
pop
add
inc
lret
and
adc
mov
cmp
adc
sbb
mov
mov
lods
loop
and
movsl
jg
add
mov
in
mov
cld
dec
cmp
iret
xor
nop
and
ret
mov
add
jns
inc
loop
and
imul
sbb
inc
inc
in
sbb
daa
adc
sbb
sbb
mov
ds
int3
daa
pop
mov
xor
loopne
sbb
xchg
adc
and
pop
dec
xchg
mov
adc
inc
sbb
jne
pop
adc
aaa
sbb
jp
and
repnz
cmpl
pusha
repz
and
inc
outsl
lds
mov
mov
cmp
lcall
scas
or
test
mov
add
cmp
push
adc
xchg
mul
movsb
or
inc
mov
and
mov
sbb
scas
ds
push
xchg
ret
sbb
push
mov
lods
lock
leave
test
in
in
shrb
push
dec
jae
sub
jne
les
add
nop
push
push
pop
addl
or
jecxz
jle
dec
dec
stc
mov
rol
loope
xchg
addr16
leave
loopne
mov
sbb
outsl
cmc
add
fnsave
and
xlat
mov
pop
xor
push
jbe
lcall
and
clc
ficomps
orb
inc
cmpsb
call
xor
pop
sbb
cmp
pop
add
imul
scas
sti
add
push
adc
scas
mov
popl
mov
jno
pop
sbb
sub
add
repnz
stos
sti
or
dec
lds
jmp
std
add
fistl
addb
jecxz
daa
adc
imul
sub
mov
push
push
stos
add
es
add
loopne
mov
nop
add
shll
cld
pop
push
dec
add
pushf
lods
dec
pusha
lods
outsb
add
mov
add
cmpsl
out
test
mov
mov
inc
pop
lds
add
sti
xchg
std
adcl
mov
cmc
mov
pop
scas
push
cmp
cltd
jo
push
push
and
xchg
pop
jmp
dec
mov
add
out
daa
mov
add
mov
adc
ret
sbb
in
lret
inc
cmc
ss
mov
add
push
xchg
test
pop
xchg
mov
scas
test
add
insb
mov
ret
sbb
push
ljmp
outsl
xchg
data16
cmp
add
jbe
ss
pop
inc
add
stos
loopne
lret
pop
mov
inc
sub
icebp
add
mov
jmp
push
hlt
jne
test
cs
jecxz
adc
loopne
mov
jmp
adc
cmc
ds
inc
pop
fdivrl
add
lcall
icebp
cli
pop
cltd
dec
add
and
movb
push
jo
or
push
dec
jge
mov
iret
add
in
push
xchg
sbb
pop
inc
add
fs
sub
pop
rolb
mov
mov
sbb
cmp
insl
cmpsb
and
cmp
add
decl
mov
lea
pop
pushf
and
aad
add
adc
loope
xchg
fwait
sub
xlat
and
pop
and
insl
pop
loopne
les
xor
xor
add
sbb
mov
inc
inc
jns
cmp
inc
insb
mov
push
xor
mull
mov
loopne
and
xchg
xchg
stc
cmp
dec
add
jmp
fistpll
jbe
push
add
add
pusha
jne
mov
jle
push
add
add
push
scas
outsb
mov
test
cmp
push
hlt
divl
mov
add
enter
cltd
jg
xor
loope
popa
add
push
push
sub
filds
cmp
scas
push
jmp
xchg
jg
mov
ja
pushf
mov
add
cld
lods
insb
punpckldq
add
outsl
in
inc
ds
add
lea
xchg
int
movsl
and
add
xchg
notb
jns
imul
pop
add
push
ss
adc
loop
push
xchg
gs
andl
cmovp
aaa
add
std
pop
faddl
mov
cmp
shll
push
orb
sbb
sub
or
ja
inc
adc
rcr
sbb
jmp
movsl
mov
mov
inc
nop
pop
and
iret
cmpsb
jnp
or
fiaddl
mov
lcall
jge
or
scas
adc
add
sbb
int
mov
insl
jae
fcoml
lcall
add
ja
dec
dec
jecxz
out
add
and
jb
popa
push
lret
add
inc
mov
pop
and
mov
and
push
dec
pop
lds
mov
lea
xchg
add
jmp
push
sahf
lds
std
xor
ficomps
ret
loope
mov
sbb
addr16
fldl
xlat
cmp
out
pusha
in
clc
cmovge
subl
daa
dec
pop
push
scas
stc
push
mov
sarl
xchg
fldl
stc
ror
cmp
int
add
mov
sbb
lret
xchg
pusha
jge
jno
pop
cmp
xchg
ret
and
xor
xchg
movsl
pushf
jnp
xor
add
add
push
mov
or
mov
sub
add
mov
aas
push
pusha
ret
scas
cmp
pop
or
test
je
and
adc
das
mov
jecxz
and
and
popa
cmp
cmp
ds
and
loopw
out
dec
inc
sahf
ret
aas
push
sbb
add
ret
lock
fidivs
pusha
inc
jp
in
add
push
and
push
jg
ljmp
out
xor
cli
mov
sbbl
mov
arpl
pop
add
push
movsb
adc
push
pop
scas
decb
mov
push
sbb
and
cmp
ljmp
xor
aam
push
add
sub
mov
add
shlb
mov
xchg
movsb
out
ret
adc
arpl
jp
xlat
movsl
outsl
lds
jp
mov
sub
imul
mov
mov
sub
or
outsb
test
sbb
in
ficoms
mov
shlb
push
push
cmp
or
inc
aad
xor
mov
xchg
in
mov
andb
mov
adc
rcll
sub
xchg
jmp
data16
xchg
add
mov
sbb
add
pusha
xor
adc
inc
iret
inc
add
mov
cmp
xlat
add
inc
pop
jno
pusha
fs
push
inc
adc
ljmp
xchg
adc
push
pushf
inc
inc
sub
imul
adc
fs
sub
cltd
into
icebp
add
sarb
stos
xchg
add
xchg
mov
ljmp
sbb
inc
mov
mov
mov
in
outsb
push
pushf
mov
xchg
push
mov
cmpsl
xor
test
ja
adc
int3
mov
cmp
dec
fistpl
or
lods
cmpb
clc
lock
movsb
test
xor
sbb
fs
or
shr
sbb
stos
js
push
and
pop
mov
sbb
cs
add
mov
push
xchg
js
dec
add
xor
negl
lar
jae
insb
sub
add
mov
push
xchg
jmp
adc
cmp
fs
inc
movl
dec
fdivs
pushf
and
xchg
jecxz
inc
pop
sub
or
mov
aad
jne
sahf
test
out
cmpb
adc
adc
int3
lea
add
dec
pop
ret
enter
pusha
fcomp
cltd
cmpl
jnp
sbb
mov
cmp
inc
jbe
stos
aam
sahf
xchg
sbb
rorb
cwtl
add
adc
mov
or
add
adc
ja
xor
popf
mov
adc
pop
lahf
add
ret
das
jae
lods
inc
int
add
dec
push
pop
xor
dec
add
inc
sti
ds
out
dec
js
add
push
mov
mov
fldl
cwtl
idiv
cmp
jae
and
jge
roll
mov
add
dec
or
mov
adc
add
mov
mov
or
add
mov
jns
lcall
add
sub
add
inc
jmp
inc
inc
aaa
xchg
cmpsl
add
add
arpl
sbb
add
mov
test
cmpsb
xchg
inc
jbe
jmp
jecxz
repz
cmp
imul
adc
lcall
cmp
sub
push
mov
stc
dec
xor
xor
xchg
xchg
add
ss
in
add
jl
adc
daa
inc
mov
rorb
or
lret
cmpb
add
out
in
jne
add
push
lods
rcll
cmp
roll
in
or
cli
jp
shrl
inc
mov
pop
lret
mov
daa
sbb
jle
test
push
dec
jecxz
inc
sub
and
xchg
aad
pop
and
out
les
aas
pop
adc
cmpb
xor
mov
dec
cmpsl
cli
add
fnstsw
ret
lods
test
in
out
sbb
ss
test
inc
outsb
pop
and
add
lods
push
mov
add
push
enter
aam
hlt
pop
js
sub
sub
xchg
dec
mov
sbb
add
add
add
push
cmpsl
xchg
mov
bound
xor
cmp
add
xchg
jno
mov
dec
push
jnp
jg
cmpsb
push
add
negl
xchg
nop
das
xchg
mov
imul
add
mov
jg
dec
add
and
out
xchg
int3
or
mov
stos
stc
inc
cmp
insl
add
lahf
push
add
nop
cmpsb
cld
mov
and
jge
add
insl
mov
sub
and
test
fsubrs
inc
int
xchg
lret
sbb
in
add
mov
jnp
add
pop
call
repnz
jle
add
add
mov
ljmp
pop
and
ror
lock
in
push
push
popa
pop
xchg
fiadds
idivb
ret
imul
mov
inc
clc
jne
data16
adc
arpl
fisttps
call
movb
cwtl
pop
shll
fsubr
test
rcrb
add
xchg
mov
mov
xchg
lods
loopne
test
xor
jno
ret
bound
inc
xor
scas
lods
out
xor
cmp
test
clc
pop
sti
add
mov
aaa
sub
fsubp
add
fmul
lcall
outsb
sub
xor
fwait
add
std
cmc
lods
cmpsb
mov
adc
mov
test
stos
jb
leave
idivb
adc
xchg
or
cltd
mov
sbb
add
mov
and
add
outsb
sahf
adc
int3
add
add
sbb
cli
push
pushf
or
push
push
mov
xchg
mov
add
sti
out
xor
push
mov
out
dec
and
jecxz
repnz
mov
mov
popf
xchg
lds
cmp
adc
daa
aad
stc
cli
test
sub
mov
insl
out
cwtl
push
sbb
stos
add
xor
xlat
dec
outsb
ja
add
mov
add
movsl
iret
cmp
xor
sub
rclb
jge
and
xchg
jbe
outsb
or
add
test
das
add
sub
sbb
cmp
pop
cmp
mov
lock
dec
jle
sbb
jp
fldl
das
cmc
shll
rorl
test
icebp
imul
add
add
arpl
bound
sbb
and
mov
and
loope
jmp
lret
adc
push
add
sbb
xchg
and
add
test
or
and
popa
shrb
fcmovnb
test
and
orb
mov
xor
mov
pop
add
mov
sbb
cmp
shl
dec
jo
int3
sub
repnz
or
add
and
xor
or
xor
inc
add
fs
and
inc
fcomps
lret
or
xor
arpl
xor
movsb
inc
shlb
jnp
dec
pop
and
sti
and
lds
add
inc
fiaddl
sahf
add
test
cmp
jmp
bound
aas
out
xchg
test
add
xor
cmp
jbe
bound
std
lock
cli
pop
xchg
add
sub
adc
leave
repnz
mov
pop
add
pop
loopne
or
mov
and
pop
xchg
pop
dec
mov
xor
in
inc
add
sti
outsb
inc
adc
jns
add
mov
repnz
mull
dec
scas
push
clc
mov
lods
push
xchg
pop
into
pop
cltd
add
or
fdivs
aas
push
add
fwait
and
xor
add
in
shll
lods
popf
addr16
pop
lea
adc
jg
popl
cmpb
mov
mov
lds
ja
and
mov
repnz
add
sti
imull
popf
pop
lods
cmp
jmp
es
add
sub
test
call
sarb
insl
jnp
ret
add
dec
cmpsl
mov
mov
inc
sbbl
inc
xchg
rol
rcrb
xor
add
into
adc
pop
and
subb
adc
ret
add
jbe
lret
test
push
pop
jne
mov
fs
jecxz
sub
xchg
rcll
mov
test
sbb
mov
inc
fidivs
add
mov
jge
rclb
shlb
push
and
lock
cmp
mov
mov
and
push
aas
gs
adc
aad
xlat
or
ljmp
jecxz
ror
repnz
pop
fucomip
mov
sub
adc
mov
or
xor
mov
add
mov
js
lods
fisubl
mov
adc
jns
xchg
inc
dec
repnz
sbb
add
dec
cmpl
sbb
mov
sbb
push
dec
in
aad
jo
and
scas
or
add
test
in
ret
pop
dec
cmp
or
inc
mov
lods
pop
popf
mov
lcall
mov
in
adc
sbb
dec
add
test
imul
and
inc
loopne
sbb
movsb
jmp
aam
fmul
and
adc
iret
ret
add
and
bound
mov
repnz
es
sbbb
fists
sub
in
imul
push
int3
xchg
out
aad
lock
dec
cmp
jl
orl
lahf
mov
addr16
jg
rorb
clc
insb
sub
mov
int
lahf
dec
jmp
xor
jecxz
jns
or
cmc
test
add
pusha
aaa
or
imul
out
in
add
cmp
lret
test
adc
clc
fildl
cs
dec
xchg
cmp
xchg
xchg
and
adc
push
lea
mov
rolb
daa
lds
cmp
adcl
dec
fbld
sub
adc
std
hlt
out
ficoml
aad
sub
out
push
xlat
in
imul
lret
add
mov
fisubrl
or
popa
jg
xchg
insb
mov
xor
repz
addr16
fmulp
insb
sbb
scas
out
out
and
test
add
jns
push
mov
nop
or
imul
pop
imul
xor
pusha
jge
mov
inc
jp
sar
mull
or
mov
sbb
pop
mov
out
jo
push
push
inc
push
int
iret
jne
sbb
xchg
add
mov
dec
cmpsl
jl
mov
pop
and
xchg
xor
and
popf
adc
scas
xchg
cli
mov
in
call
pushf
sub
or
pop
mov
mov
rolb
ret
mov
cmp
jnp
loope
lret
out
mov
add
divl
popf
dec
lret
les
pop
out
and
cmp
xor
push
inc
aad
push
test
shll
sarl
mov
push
stos
les
adc
pop
add
pop
inc
jp
xchg
daa
mov
xchg
sarl
lds
add
lods
xor
mov
xchg
adc
xlat
aam
mov
cs
mov
je
gs
sbb
or
pop
mov
mov
jp
xchg
add
sbb
cltd
mov
pop
aad
mov
test
cmpsl
mov
mov
xchg
and
arpl
ficomps
fnstcw
sbb
jg
jle
adc
out
ss
and
cmp
decb
mov
enter
jl
adc
lahf
jo
sub
sub
ljmp
or
and
jb
inc
mov
push
sub
je
insb
and
test
sub
xor
fwait
and
push
sub
xchg
xchg
ss
jp
rorb
stos
sub
daa
pop
mov
add
push
push
inc
mov
add
jns
aaa
sub
sarl
push
loopne
repz
mov
and
push
mov
add
fildll
sbb
imul
lds
cli
add
jno
loope
js
adc
cmp
lds
inc
add
cld
repz
add
fnstenv
sub
sbb
cmp
and
add
mov
cmp
scas
xchg
movb
xchg
das
outsl
xor
fmuls
stc
repnz
mov
sbb
dec
cmp
add
sarl
mov
sub
xchg
je
bound
aam
xor
add
addr16
mov
wrmsr
and
int3
mov
push
stos
lret
xchg
insl
push
outsl
lods
pushf
sbb
lea
add
jecxz
nop
add
imul
mov
lahf
clc
loop
mov
daa
jnp
xchg
push
cmpsb
test
divb
and
cmp
add
inc
clc
add
andb
sti
lds
test
sub
jge
lds
add
cs
roll
mov
stc
xor
mov
pop
sbb
inc
inc
mov
mov
cmp
mov
jo
mov
pushf
lret
push
ret
js
insl
roll
mov
adc
inc
sbbl
addb
push
and
shlb
inc
test
or
iret
cmp
adc
cltd
dec
add
inc
cli
mov
test
loope
stos
sub
cmpsb
dec
loope
lock
xor
mov
hlt
sbb
xchg
outsl
clc
push
mov
push
push
add
fcompl
je
push
xor
cmp
lret
and
movsb
sti
jp
cmp
inc
aas
sarb
outsb
jl
aam
sub
xor
mov
test
sbb
dec
add
or
outsl
xchg
and
cwtl
push
popa
mov
fsubp
add
rcrl
in
cld
cmp
inc
mov
jno
fistpll
jae
fisubrl
jl
xchg
imul
cmp
pop
insl
and
icebp
add
xor
out
mov
jnp
mov
cwtl
enter
and
mov
sub
xlat
inc
insb
icebp
add
xchg
pop
test
outsl
fistpll
jne
js
cmp
push
dec
inc
aas
mov
mov
das
mov
xor
mov
push
adc
leave
inc
sub
add
dec
fldl
mov
icebp
rcrl
cmc
lds
jp
add
mov
add
cwtl
push
popf
loope
sbb
pusha
or
xchg
or
mov
int
cmp
jb
jl
aam
inc
and
push
inc
lea
js
xlat
ja
loope
in
mov
xabort
pusha
pop
cwtl
aam
sbb
mov
ds
ret
mov
shrl
in
fs
jl
dec
adc
adc
movl
imul
loopne
and
js
sub
cmp
mov
xchg
insb
leave
out
and
push
jbe
call
ret
xchg
add
and
cmc
in
and
mov
inc
pop
lret
pop
shl
mov
movsb
clc
mov
bound
mov
lret
pop
pop
icebp
add
lods
push
and
dec
movsl
das
mov
fmulp
jno
mov
icebp
test
xchg
mov
add
aaa
xchg
add
scas
sub
add
in
insb
sarb
xor
jb
add
sub
roll
mov
adc
mov
pop
ret
mov
pushf
cmp
outsb
ds
add
dec
dec
je
xor
sarl
lret
popa
push
repnz
xchg
cmp
xchg
xchg
lahf
sub
push
add
push
or
sti
and
adc
addl
je
mov
pop
pop
xor
imul
sub
sahf
push
add
mov
testb
scas
and
add
xchg
sub
movl
fcoms
sub
loope
or
xlat
push
and
mov
jg
loop
iret
mov
shrl
push
aad
repnz
fadd
sub
mov
inc
fnstcw
sbb
je
cmpsl
xor
gs
bound
or
outsb
add
movsl
mov
cmp
push
mov
adc
ret
dec
mov
add
shr
aam
cmp
data16
scas
fadds
subb
jge
push
mov
add
inc
push
aas
frstor
cmp
lcall
test
adc
aas
pop
xchg
roll
faddl
fnsave
pop
mov
pushl
loopne
daa
sub
add
pop
aad
mov
add
cmc
cs
dec
or
add
fstl
dec
add
rorb
push
mov
inc
ss
cmpsb
add
loop
je
lods
cli
popf
add
sbb
jo
fsubs
aas
ret
push
dec
mov
add
std
jae
jge
outsb
add
mov
xor
test
cmp
push
sbb
enter
and
fnstenv
lahf
mov
mov
rol
dec
jae
jecxz
fnstsw
movsl
mov
icebp
jo
stos
push
mov
mov
or
inc
outsb
pop
rcll
fidivrs
xchg
xor
rcr
xchg
dec
jg
inc
les
push
sbb
mov
adc
out
cmp
or
xchg
add
shrl
stos
sbb
mov
add
mov
push
and
inc
test
dec
cld
cwtl
repz
push
xor
nop
and
lcall
orb
xor
sbb
pop
mov
push
adc
mov
mul
pusha
testl
and
or
push
sbb
call
pop
or
outsb
scas
add
test
cltd
pop
mov
push
test
inc
frstor
in
mov
mov
mov
inc
mov
icebp
rcl
jmp
pop
add
insb
test
hlt
pushf
cmp
mov
in
and
int3
sarb
add
cli
push
lahf
and
add
xlat
imul
insb
shlb
lock
test
mov
and
in
pop
add
inc
jp
clc
int3
jns
adc
fcmovnu
out
or
push
stos
xor
jns
xchg
adc
inc
jmp
loope
sub
sarb
outsb
mov
push
push
add
xor
repz
pushf
lock
aam
shrb
mov
aad
stos
xchg
mov
inc
fidivl
mov
repz
add
mov
pop
lahf
add
mov
popf
add
xor
and
loop
aad
daa
ret
in
adc
xor
dec
and
ret
pop
inc
mov
and
inc
in
jp
add
testl
inc
mov
sti
push
ret
mov
add
inc
cmp
adcb
dec
sub
and
out
loope
push
popl
int
mov
subb
pop
xlat
xchg
mov
pop
flds
sbb
jmp
or
incl
ja
xchg
sbb
test
adc
sbb
inc
shll
xor
gs
rolb
pop
and
loop
push
pop
cmp
cmp
xchg
lahf
aaa
mov
xchg
test
je
testl
sub
sahf
add
sub
push
add
mov
stos
mov
inc
mov
inc
bound
push
mov
jecxz
into
jns
xor
xchg
mov
jnp
mov
mov
subl
and
pop
fisubs
pop
cli
pop
rcrl
xor
into
jmp
ljmp
outsl
or
adc
pop
xchg
fdivl
out
sub
or
jmp
push
shrb
repz
and
dec
sbb
push
fwait
inc
sub
repnz
jp
lods
mov
addr16
pop
mov
pop
cmpsl
push
loope
cmp
mov
jb
or
and
cmc
jg
mov
outsl
rcll
daa
std
jne
sahf
fcoms
add
loop
ljmp
lock
jp
lret
sub
adc
jp
lret
mov
mov
cwtl
add
fstps
cmp
stc
add
cmp
fldlg2
sbb
push
imul
stos
add
mov
mov
pop
inc
fucomp
pcmpeqw
sbb
sbb
jp
in
and
pusha
mov
and
jbe
dec
dec
jle
push
mov
std
fisttpl
arpl
cs
lock
and
popf
clc
or
ds
adc
or
jge
jle
pop
xor
and
mov
cld
sbb
pop
lret
push
pop
fwait
rorl
xor
inc
sbb
fstpl
push
std
movsl
or
add
adc
out
fistpl
mov
adc
jp
popa
daa
arpl
add
xlat
push
add
sbb
jno
cmc
mov
test
adc
or
jno
sbb
decb
sbb
mov
lret
xor
mov
xor
xchg
jnp
scas
xor
leave
xchg
mov
inc
sbb
lret
xorl
scas
jb
xorb
jp
xor
and
aaa
pop
icebp
or
adc
aaa
daa
adc
sbbb
dec
negl
sub
hlt
jae
pop
arpl
movsl
mov
mov
cli
or
push
xchg
in
bound
or
ret
mov
push
and
rclb
add
ret
cmp
testl
sub
fdiv
pop
rorb
add
mov
mov
or
sahf
jo
add
leave
adc
mov
mov
add
lds
dec
and
ret
sub
adc
xor
jecxz
push
jnp
add
inc
mov
je
and
sbb
adc
mov
pop
pop
je
fidivrs
data16
xchg
xchg
adcb
mov
imul
xchg
loopne
sbb
xor
xchg
cltd
rorb
or
cmp
push
imul
std
je
test
and
fwait
rcll
sbb
dec
cwtl
cmp
mov
or
push
push
xchg
mov
out
aas
jg
jmp
add
es
jno
or
and
into
std
jb
daa
pop
jle
test
or
insb
xor
leave
imul
insl
push
jg
pop
sahf
fcoms
cmp
push
xlat
cmpb
lret
mov
dec
xchg
sub
xor
in
sbb
push
fisubl
fsqrt
adc
cmp
push
mov
aas
movsl
push
imul
mov
add
push
push
mov
pusha
pop
xor
push
movsl
cld
push
int3
add
or
sbb
fsubrl
jge
xlat
ljmp
mov
aam
das
cmp
adc
and
out
lcall
arpl
fdivrl
lock
fnsave
sub
cmp
sbb
push
lret
push
dec
jnp
mov
mov
pushf
in
push
push
call
mov
mov
bound
jge
lods
pop
xchg
nop
fisubrs
out
loope
rcrl
cmc
aas
gs
cli
adc
mov
ret
sub
lods
cmp
push
ljmp
data16
adcb
adc
mov
inc
and
adc
or
sbb
push
fldt
cmp
or
push
xchg
jne
adc
test
xchg
lret
loope
lods
mov
jns
fabs
sti
sub
mov
and
push
and
fisubl
dec
lcall
xchg
int
loopne
xchg
popa
out
xchg
pop
add
and
add
mov
popf
lret
add
sub
ss
aaa
fidivl
add
xor
xchg
jo
xchg
ljmp
jg
xor
orb
add
fs
call
inc
mov
cmp
aas
or
xor
into
xstore-rng
cmpsl
pop
dec
adc
adc
call
adcb
ret
push
push
test
test
add
xlat
push
push
shrb
xor
fildl
mov
popf
push
loope
roll
daa
sbb
fiaddl
mov
inc
hlt
inc
or
adc
cld
cmp
lahf
add
cmp
stos
ret
leave
and
imulb
mov
pop
scas
adc
out
cmp
mov
or
fldl
int
ret
shlb
in
pop
add
inc
shrl
in
sahf
popf
rcr
and
andb
push
cld
add
add
add
movsb
mov
mov
mov
into
inc
xchg
mov
inc
add
push
jmp
add
testb
daa
pop
adc
ljmp
mov
add
cmpb
shlb
sbb
sub
xor
and
popa
inc
enter
dec
test
inc
add
ss
push
push
icebp
cltd
mov
xor
add
lcall
dec
dec
jg
push
pop
dec
cmp
inc
or
mov
or
sbb
std
add
ljmp
cmpsl
sbb
adc
arpl
shrb
cmp
add
enter
sbb
or
push
jmp
adc
dec
dec
test
inc
add
xor
add
icebp
rclb
sbb
or
jbe
inc
add
data16
mov
movb
adc
scas
fstl
mov
xchg
sbb
insb
icebp
jge
jmp
adc
mov
outsb
nop
pushf
inc
sbb
bound
sub
rcll
mov
out
cmp
leave
pcmpeqd
cmp
jnp
xor
push
testb
sbb
aas
mov
mov
movsl
pop
cld
fdivrs
adcb
cmp
or
ljmp
jmp
fucomp
fwait
mov
shrl
xlat
mov
std
mov
addr16
lds
test
lock
rcll
xor
or
jmp
dec
add
and
test
push
jp
lds
xchg
sbb
cmp
mov
in
sbb
insl
xor
call
and
push
push
mov
mov
movsl
neg
out
jns
dec
ja
sub
jp
push
std
mov
cmpsb
in
xor
stos
sbb
rcll
inc
jecxz
faddl
lock
add
addb
mov
pushw
or
aad
lret
fsubrl
cmp
inc
xor
imul
in
roll
pusha
ljmp
rorl
xchg
xor
sbb
inc
mov
stos
inc
test
iret
adc
adc
lods
shll
pop
popa
cmp
dec
adc
daa
inc
adc
stos
icebp
xchg
mov
add
pavgw
in
popa
jno
es
inc
scas
cmp
cmp
cwtl
test
addb
clc
push
fwait
mov
add
mov
shlb
xor
mov
pop
add
cmc
fcompl
test
pop
sub
dec
and
add
cmp
and
jge
into
xlat
fstl
outsl
outsb
sarb
es
add
pop
dec
std
les
dec
mov
jmp
xor
out
lahf
mov
inc
adc
cmp
in
shlb
cmp
jo
aad
fnsave
in
sahf
aam
scas
add
add
pushf
mov
js
mov
popf
in
push
out
or
xchg
inc
dec
lret
or
in
out
inc
insb
xor
repnz
mov
push
js
fs
cmpsl
scas
popa
push
ds
add
into
lahf
or
arpl
lock
cmp
xchg
ds
ja
test
popa
pop
insl
mov
cmp
push
lret
mov
mov
je
add
or
xchg
inc
jl
in
pushf
mov
jp
sbb
jmp
ret
xlat
xchg
je
add
clc
ret
mov
aad
mov
sahf
es
inc
pop
inc
rsm
mov
adc
push
pushf
in
sbb
inc
mov
ss
sub
pop
int
and
in
push
and
mov
xor
inc
lea
mov
cmp
outsl
flds
and
cmp
add
sbb
xor
xor
add
in
jp
bswap
and
insl
in
rcrb
jecxz
loopne
xchg
push
or
inc
lahf
jo
lret
aad
or
dec
add
dec
xor
add
push
mov
mov
jb
sub
cmp
daa
cli
xchg
fwait
test
sbb
roll
sub
mov
loope
dec
adc
and
mov
xchg
pop
pusha
lods
dec
ds
adcl
out
cmp
stos
add
sti
and
scas
lcall
les
add
xchg
sti
sub
and
xchg
add
pushf
ljmp
sbb
negl
add
int3
add
dec
pushf
adc
mov
push
imul
ljmp
nop
pushf
lret
outsb
mov
rorb
pop
inc
adc
loope
fs
or
sahf
pop
gs
cmp
or
adc
fwait
jecxz
ret
mov
xor
lret
dec
xchg
mov
pop
mov
cmp
mov
pop
jmp
lcall
xor
cwtl
shlb
cmp
xor
jg
movsb
out
hlt
add
jne
mov
rol
or
jnp
xchg
rcll
cli
jns
leave
push
mov
jle
lock
add
push
dec
pop
fwait
adc
mov
mov
inc
lods
popf
stc
add
or
mov
xchg
mov
add
iret
and
mov
stos
add
mov
fidivrl
pusha
mov
test
rcll
inc
loopne
jl
cld
add
mov
lret
cmp
add
push
pop
jge
cmpsl
inc
shll
jmp
add
mov
push
and
bound
imul
fadd
mov
mov
cmp
fildll
jp
fdivrl
sbb
add
jb
inc
add
jg
rolb
frstor
out
mov
cmp
sbb
xchg
popa
cmpl
mov
and
aas
xchg
inc
push
jle
in
mov
flds
push
leave
xchg
enter
insb
or
jo
andb
lahf
movsl
adc
shlb
sbb
sub
xlat
arpl
ljmp
ret
dec
std
out
mov
or
or
test
insb
mov
hlt
and
push
orl
inc
jae
add
pop
xor
test
inc
add
nop
add
or
add
pop
daa
mov
xchg
add
call
add
repz
cmp
or
mov
dec
add
arpl
mov
add
pop
sub
add
lock
sub
cmpsl
jns
pushf
add
cmpsb
mov
fsts
pop
pop
sub
pop
popf
add
cmp
daa
push
mov
roll
inc
fsubrl
sbb
add
inc
sub
xlat
xchg
mov
inc
iret
xchg
shrb
sbb
add
push
adc
cmp
outsl
imul
cmp
sbb
mov
add
mov
ret
jg
pop
push
and
in
mov
sbb
sub
pusha
pop
fldl
leave
or
add
push
sub
sbb
add
test
adc
jecxz
jle
add
jmp
jp
mov
roll
push
ret
popa
scas
lock
call
add
push
mov
pop
aas
add
jmp
iret
dec
out
scas
inc
and
mov
aaa
fstpt
movsl
outsl
jl
sbb
pop
xor
cld
sbb
xchg
lods
mov
cmp
cmp
in
daa
xor
or
or
ss
movsl
add
inc
add
jg
pop
ret
lret
mov
xor
ljmp
loopne
push
mov
das
lret
sub
repnz
stos
or
add
xchg
sub
inc
add
test
push
jo
clc
xlat
cmpsl
add
and
xor
lods
ds
pop
fcmovne
sbb
iret
add
sti
ret
mulb
insl
adc
aam
jmp
add
sbb
shrl
imul
push
mov
enter
rcrb
aam
mov
push
lock
leave
mov
cmp
add
popa
js
popf
mov
cmpsl
lahf
xlat
push
add
cld
xchg
shlb
sbb
sub
add
jle
add
add
jecxz
daa
out
nop
cmp
les
arpl
cmp
mov
xchg
les
jae
clc
ljmp
sub
sbb
mov
adc
lret
inc
inc
add
testl
std
add
inc
jbe
mov
aaa
and
sub
cmp
lahf
or
adc
pop
jne
repnz
cld
adc
fcoml
push
add
stos
inc
sub
call
cmpsl
popf
outsb
add
int
or
rcr
sub
sahf
add
bound
mov
add
insl
pop
clc
ret
push
loopne
sarl
adc
daa
push
mov
mov
xor
and
mov
inc
mov
mov
inc
cs
lahf
rcll
add
repnz
add
and
cmp
loopne
mov
jmp
shrb
sarl
sub
mov
sbb
cmpsl
push
icebp
inc
cltd
dec
lahf
adc
iret
add
stc
ljmp
repnz
pushf
cmp
pop
xchg
jmp
and
xor
into
mov
mov
std
cmpsl
adc
xchg
fcoms
pop
add
mov
sbb
and
xchg
gs
pop
cs
add
adc
dec
call
jbe
mov
shll
sbb
add
in
dec
cmp
iret
shlb
shrl
pop
gs
jmp
add
pop
push
and
adc
pop
cwtl
cmpl
lahf
test
jg
push
clc
mov
add
xchg
add
ret
mov
adc
je
and
dec
jmp
mov
pop
sti
mov
add
in
lahf
xchg
inc
and
pop
add
out
call
int
out
add
inc
les
and
leave
sub
add
stos
or
add
push
sahf
mov
in
mov
and
add
add
jo
mov
jne
out
xorb
or
dec
aaa
adc
mov
xor
xlat
jle
mov
shlb
je
iret
ds
add
leave
fcompl
dec
dec
sbb
lret
or
pushf
mov
rclb
mov
add
es
inc
lods
loope
mov
pop
arpl
jne
cmp
mov
movsl
mov
sub
push
mov
mov
jne
add
out
shlb
push
pushf
xor
lods
add
ds
or
cmc
sub
cmp
movsl
adc
mov
cli
test
sbb
sbb
mov
ficompl
mov
fs
fs
push
add
stos
std
adc
and
es
jne
into
mov
xorl
ljmp
push
mov
mov
jnp
and
xor
push
adc
mov
rcll
into
cs
in
add
mov
insb
lea
add
push
mov
out
rolb
pop
rcrb
adc
jecxz
or
xor
and
add
sub
or
and
add
sbb
add
outsl
or
adc
imul
icebp
mov
mov
or
sbb
and
sub
sub
mov
sub
cltd
mov
jo
ret
adc
dec
subb
int3
shrb
arpl
lcall
add
and
sarb
fwait
dec
imul
cli
sbb
and
es
ret
int3
jo
mov
imul
xor
adc
mov
add
mov
push
aaa
pop
xor
in
xor
out
mov
test
jmp
scas
xor
shrl
xor
inc
jno
xchg
mov
xchg
xor
in
xchg
cs
sub
pop
sbb
mov
and
arpl
xchg
inc
push
push
sub
dec
pop
sbb
fwait
adc
inc
int3
lcall
into
xchg
xor
mov
jmp
repz
sub
mov
pop
repnz
and
inc
stc
aaa
mov
adc
pop
sub
cmpl
inc
add
movq
repz
pop
gs
test
jnp
xchg
jo
aam
pop
push
xchg
fxtract
icebp
cmp
add
scas
xor
add
adc
data16
push
dec
cmpsl
shl
ja
dec
shlb
cmp
rol
xchg
hlt
adc
data16
shrl
adc
call
and
add
sarb
test
cmpsb
das
arpl
into
add
jmp
leave
fsubs
mov
jbe
cmp
movl
xor
adc
xor
ficompl
ss
stc
or
leave
add
das
and
arpl
or
pop
enter
popf
cmp
add
stos
mov
imul
add
sub
icebp
addl
adc
mov
push
mov
dec
test
popf
jle
bound
adc
fcoms
xor
ffreep
call
sbb
xchg
add
add
pop
shrl
mov
sub
ss
add
mov
movsb
ret
inc
mov
sub
mov
sahf
add
sbb
insb
aaa
xchg
nop
add
cmp
pop
dec
cmpsl
ret
adc
sbb
popa
add
jl
int3
inc
pushf
jns
into
imul
shlb
cld
dec
pop
adc
dec
test
subb
std
lea
mov
dec
cltd
push
sub
cmp
add
imul
and
xchg
or
out
xor
test
testl
push
stos
adc
push
sub
and
adc
mov
sahf
inc
ds
or
xchg
outsb
out
add
scas
pop
test
aas
pushf
popf
pop
adc
lret
add
punpcklbw
pop
xlat
or
int3
pop
std
fmull
xchg
shl
xchg
repnz
jno
adc
cmpsb
in
nop
sbb
or
fwait
jmp
inc
sub
idivl
mov
sbb
loop
dec
inc
add
xchg
test
shlb
xchg
push
adc
push
inc
xchg
xor
ret
pop
dec
ret
sub
andl
mov
fildll
out
jb
addb
int
clc
inc
and
rcll
movsl
jg
roll
add
sbb
add
cmp
xchg
adc
shrl
dec
jmp
xor
popf
inc
lds
mov
rcrb
gs
adc
imul
and
mov
lcall
daa
outsl
fadds
shlb
cwtl
int
dec
das
dec
test
daa
pop
lret
add
shrb
sbb
enter
mov
jo
testb
mov
int
inc
insl
add
cwtl
pop
out
sbb
adc
and
jno
inc
add
xchg
arpl
sbbl
sbb
push
loop
pop
cmpsl
inc
sub
add
scas
mov
std
add
mov
add
pop
insl
push
int3
icebp
jecxz
sbb
sub
lahf
push
or
add
cmp
jmp
xchg
pop
pop
and
ja
rcl
adc
and
hlt
jge
sti
add
jae
mov
pop
cmp
outsl
mov
fwait
or
mov
ljmp
ds
cmc
or
jle
cmp
js
imul
dec
pop
out
lods
adc
mov
cs
sub
inc
inc
aam
cmp
add
mov
nop
push
pop
mov
ret
cli
push
xchg
mov
cmp
add
push
dec
dec
daa
fadds
adc
imul
xorl
pushf
js
xchg
jp
aam
pop
xor
shll
sbb
cli
push
xlat
lds
mov
inc
xor
repz
push
popf
mov
insl
js
add
pop
sub
enter
sbb
xor
jmp
dec
add
rcl
push
sbb
ljmp
cmp
test
and
add
mov
scas
mov
sbb
add
fnstenv
mov
ljmp
xchg
out
pushf
pop
movsl
xor
in
add
mov
jge
movb
pop
mov
mov
jnp
xchg
mov
pushf
test
gs
xor
fdivs
mov
and
lds
mov
lret
outsl
mov
mov
push
or
jmp
cmp
mov
push
jmp
xor
add
adc
xor
xchg
xchg
pop
push
jp
cmp
hlt
std
dec
push
xchg
pop
sbb
stos
insb
mov
rorb
sahf
loopne
xchg
xchg
arpl
push
test
add
gs
cmp
or
mov
inc
mov
movl
mov
stc
push
leave
jbe
add
mov
lods
cmpsb
and
dec
inc
xor
loopne
fcmovnbe
xor
push
add
cmp
cwtl
inc
xlat
push
nop
add
cmp
xchg
vmovaps
xor
aaa
pop
mov
lds
xlat
cmp
shrl
adc
fstl
pop
test
lea
xor
mov
out
mov
inc
add
mov
add
pop
pop
mov
jbe
mov
and
adc
xor
mov
insl
outsb
xchg
clc
addb
fwait
mov
movsb
push
jmp
popa
aas
jl
push
ss
jecxz
mov
push
add
inc
mov
test
jae
jns
mov
fildl
test
adc
pop
mov
shrl
sbb
es
push
push
and
fstp
adc
cmpsb
ret
mov
popf
jle
inc
movb
push
ss
imul
add
scas
inc
in
jo
mov
jno,pn
icebp
jmp
jnp
push
fiadds
daa
div
ss
dec
add
add
jp
lcall
mov
in
test
loope
ret
sbb
xchg
sbb
fstps
es
add
repz
mov
or
mov
cmp
mov
iret
sbb
outsl
addl
ljmp
js
inc
mov
mov
mov
jmp
clc
cmp
push
add
cmc
gs
mov
sub
pop
outsl
adc
loope
mov
and
les
lcall
call
ficompl
cli
pop
loopne
dec
rolb
repz
sbb
stos
shlb
xor
popf
sub
fmulp
cmpl
mov
xchg
dec
sbb
cmp
xor
adc
adc
jno
inc
daa
in
aam
cmpl
jge
dec
cwtl
fstps
lcall
int
cmp
imul
add
fldcw
lcall
aaa
push
add
push
iret
xor
das
push
cmp
out
add
mov
or
mov
xchg
add
test
out
popf
add
push
mull
pusha
jmp
xchg
ficoml
mov
push
aas
test
mov
mov
data16
xor
mov
aaa
xchg
movsl
add
push
icebp
cmp
fwait
add
outsb
js
adc
mov
mov
ret
xlat
fisttps
sti
push
cmp
rorb
inc
mov
push
mov
or
jo
pop
sbb
add
mov
sub
add
xchg
add
fs
je
pop
fsubrl
out
roll
sbb
in
je
ja
cld
cmp
roll
dec
xor
add
ja
adc
xchg
cwtl
push
jbe
popa
sbb
pushf
mov
lahf
mov
inc
xorb
push
xchg
push
ds
inc
shrb
popa
and
sbbb
cmp
stos
xorl
or
pusha
cs
dec
lock
aam
push
inc
shll
orl
in
movsb
xor
aaa
and
movsl
mov
int
add
mov
add
leave
icebp
or
cli
aad
push
stos
pop
ss
add
pop
lcall
shlb
dec
cmp
out
add
cmc
push
leave
addl
sub
rolb
cmp
orl
inc
xchg
mov
fnsave
xor
mov
xchg
jnp
jno
mov
aam
mov
pop
repnz
add
cmp
push
imul
mov
popa
dec
and
mov
rcrl
push
lcall
push
imul
jmp
xchg
cld
mov
stc
xor
inc
add
andl
sbb
lods
hlt
mov
mov
mov
sbb
ret
or
push
xchg
cmp
jo
pop
inc
xchg
jl
fcoms
inc
cmpsb
cmp
jns
lret
or
mov
push
add
sahf
arpl
xor
fnstcw
add
test
mov
lcall
cs
dec
hlt
or
add
adc
loopne
dec
aam
fdivs
jbe
mov
add
mov
pop
push
aam
or
aad
nop
add
add
or
add
cmpsl
xor
pop
out
mov
dec
inc
movsl
dec
and
pop
je
rolb
or
push
in
adc
rorl
lds
add
out
das
rorl
adc
inc
dec
ljmp
dec
mov
jl
or
adc
or
mov
cmp
lahf
xor
lods
and
out
pop
push
leave
es
add
push
and
iret
fstpl
dec
test
insl
inc
enter
pop
movsb
mov
mov
lea
scas
mov
jle
js
sbb
mov
test
sbb
add
jns
stos
in
xchg
jmp
pop
inc
orb
cmpsl
inc
sub
xchg
and
fwait
jmp
xor
into
add
pop
xchg
out
in
aas
loop
mov
pop
add
test
mov
add
fidivrs
ret
push
sub
sbb
aad
inc
jb
sbb
mov
loope
adc
add
sub
rorb
mov
test
sub
xor
mov
inc
xor
test
incl
push
ror
addb
mov
sub
jmp
aas
and
xor
addr16
sub
sbb
jo
inc
adc
add
gs
mov
sbb
pusha
test
jg
xor
scas
add
sub
pushf
push
sub
and
adc
adc
jmp
add
or
pop
adc
xor
std
xor
fiaddl
xor
call
loopne
roll
jae
add
xor
pop
jmp
cmp
bound
xchg
xchg
inc
add
out
fdivrl
ss
test
jmp
ret
mov
push
xchg
or
or
fnstsw
xlat
and
rclb
or
scas
ss
outsl
mov
xor
cmp
scas
push
sub
lahf
and
mov
mov
push
adc
sub
daa
dec
sbb
sub
add
jo
arpl
xchg
push
cs
je
scas
add
and
movsb
push
nop
mov
xchg
xor
push
lods
ret
add
and
imul
add
jg
in
pop
or
mov
cmpsb
fnstsw
hlt
fdivrp
or
jp
xchg
xchg
fbstp
shrl
test
jns
out
int
sti
cli
push
dec
dec
xor
ret
lret
aas
add
sbb
fdivrp
and
mov
jb
jl
mov
xchg
cs
nop
lods
adc
es
pop
fwait
sub
jecxz
xchg
inc
jbe
shlb
mov
xorb
int3
shr
pop
aad
or
mov
push
push
loope
sub
cs
inc
dec
adc
iret
mov
dec
mov
ret
adc
fwait
adc
xchg
mov
popa
shr
fadds
inc
lahf
addl
cmp
add
movsb
je
sub
ja
sbb
push
test
mov
mov
loopne
dec
mov
mov
lahf
sbb
stos
adc
aas
pop
xchg
sarb
std
add
and
mov
stos
leave
mov
add
xlat
push
addr16
out
mov
sub
jnp
cmc
shr
sub
loopne
xor
jo
or
xchg
sbb
or
cmpsb
mov
pop
fdivrp
loope
es
xor
pop
add
mov
stos
movl
mov
xor
inc
cmpsl
addb
pop
add
jns
pushf
push
jp
mov
xchg
add
outsl
pop
push
adc
and
outsb
inc
popa
lods
sbb
push
aas
jp
xchg
inc
pusha
xor
xchg
sbb
jl
aas
data16
jbe
mov
in
lret
xor
mov
imulb
mov
ret
jmp
inc
test
std
addl
rcll
cld
adc
and
mov
ret
and
pop
xlat
add
je
dec
mov
daa
cmpsl
outsb
add
ret
insl
cmp
popf
and
ret
mov
xchg
jno
or
add
ljmp
cld
into
fdivl
cmc
lods
lcall
push
aas
lods
or
sar
xchg
jg
dec
sub
mov
mov
ret
push
xlat
ljmp
scas
add
stc
outsb
inc
push
xchg
rolb
push
pop
xchg
imul
sub
fsubs
out
xor
outsl
lret
daa
sarb
cmp
scas
int3
mov
jne
sub
mov
insl
dec
adc
xchg
orl
sub
add
sbb
sbb
pop
adc
shl
mov
sbb
scas
in
add
aam
popa
inc
adc
cwtl
mov
push
mov
push
pop
or
add
dec
cltd
mov
pop
jg
rclb
daa
movsb
in
loopne
cld
push
add
push
lret
inc
leave
inc
pop
mov
xor
mov
or
jb
fstps
adc
xor
pop
iret
idivb
adc
rorl
scas
sbb
divb
outsl
call
nop
pop
int3
sbb
stc
add
and
jbe,pt
scas
push
inc
repnz
xchg
outsb
aad
lahf
jae
das
xor
dec
mov
test
mov
sbb
xor
aam
sub
jne
test
leave
add
imul
out
outsl
add
and
nop
sti
data16
ret
mov
leave
jle
cmp
inc
cltd
in
and
sub
fsubrl
mov
cmpsb
xor
mov
pop
fimuls
xchg
mov
in
jmp
in
stc
movsl
mov
fimuls
lret
outsb
jne
into
ret
loopne
add
mov
icebp
add
push
fiaddl
add
inc
sbbl
in
xchg
ffree
mov
pusha
cmp
imul
and
cmpsb
std
sub
xor
in
xchg
int
shll
hlt
nop
jb
inc
ds
loope
inc
popf
xchg
dec
repnz
scas
lods
andl
arpl
aaa
pop
lahf
test
jp
or
add
jno
nop
shl
jmp
inc
sbb
mov
xlat
pusha
and
add
jl
mov
scas
mov
add
mov
rclb
jb
push
cs
dec
add
xchg
cli
jbe
cmpsb
cmp
pusha
dec
add
fnsave
adc
add
ret
outsb
test
xchg
lret
jno
fwait
cmp
cmp
add
lret
and
jmp
pop
mov
dec
xor
andl
jae
or
daa
push
push
fists
add
pop
xor
lods
adc
scas
xchg
push
das
in
xor
xchg
outsl
inc
aas
add
add
jae
in
mov
jp
pop
pop
sbb
add
jl
dec
ret
jae
add
fsubr
imul
cmp
iret
inc
xor
add
and
outsl
push
mov
movsb
shrl
add
les
add
xor
rcl
cmp
add
jb,pn
xchg
push
sub
ljmp
add
xor
movsb
push
add
mov
inc
mov
stos
fisttps
push
push
int
push
and
mov
lds
or
sub
cli
sbb
adc
stos
add
mov
and
jns
or
pushf
and
out
and
mov
mov
lods
inc
ret
imul
adc
mov
mov
ret
in
movl
shll
jnp
push
jae
leave
outsb
mov
xchg
out
fbld
out
popf
fadds
punpcklwd
hlt
loopne
fldl
inc
repz
fidivs
gs
dec
repnz
sub
jno
pop
or
rolb
ljmp
add
and
pop
ret
mov
sub
insl
pxor
or
adc
stos
and
in
lahf
xor
or
jb
jge
sbb
xchg
pop
sub
xchg
std
inc
add
and
inc
xchg
jmp
pop
inc
xor
add
aad
inc
popa
xchg
add
cmpsl
adc
add
jmp
loop
push
push
lret
add
fildll
shll
sub
jne
es
sbb
mov
xchg
cmp
xor
push
jg
leave
inc
insl
push
pop
jl
dec
rcrb
and
aad
mov
test
cwtl
add
outsb
dec
jmp
jecxz,pt
test
push
sbb
leave
mov
cmp
add
push
mov
jle
call
rcll
jne
add
xchg
pop
dec
cld
sub
jg
jb
and
jns
shrl
sar
repnz
xchg
mov
pop
xchg
xor
jmp
mov
out
and
mov
add
sbb
inc
test
fst
add
and
inc
shr
xor
loope
cmpsb
adc
popa
xor
lret
dec
rcll
push
or
shrb
pop
adc
ss
add
xlat
cmpsb
imull
nop
xorl
or
loope
adc
jmp
ret
fwait
jp
xor
jo
testl
pushf
lcall
cwtl
mov
int3
leave
ds
arpl
in
dec
into
xchg
test
and
ljmp
inc
insl
out
outsb
ret
lea
xchg
out
sarl
mov
shll
insb
and
fistpll
inc
adc
add
ret
mov
sub
sbb
sub
dec
outsb
or
add
mov
and
dec
jle
roll
xor
xor
inc
js
fcmovnb
jne
push
je
dec
cmp
add
fldenv
daa
xchg
fisttpl
stos
iret
loope
or
lcall
jle
ja
fcoml
cmp
decl
pop
add
mov
loopne
add
out
mov
and
rcll
fisubs
or
outsl
and
dec
or
das
nop
pusha
jae
dec
out
or
pop
loopne
loopne
es
mov
add
add
cmp
xchg
push
cli
add
aas
xor
or
addr16
fstpt
pop
aam
pop
dec
sbb
pop
inc
ljmp
inc
cmp
add
adcb
dec
adc
scas
or
stos
sub
cmc
gs
adc
xchg
movsl
add
push
addr16
dec
sub
push
cmp
jb
mov
fnstsw
test
subb
sbbb
xchg
add
cmp
cmp
add
and
push
cwtl
lods
mov
sub
fwait
cli
sbb
sbb
outsl
cmpsb
push
in
xchg
daa
xchg
pop
xor
ret
test
test
sbb
sub
xchg
or
popf
mov
cmp
cmpsl
cmp
mov
outsb
lds
pusha
jl
test
popf
scas
or
sbb
mov
ret
or
std
repnz
or
stos
test
add
arpl
lods
sahf
pop
inc
cmp
sbb
inc
mov
cmpsl
pop
fildll
add
int
je
out
in
es
dec
out
sbb
mov
inc
adc
daa
xchg
bound
xchg
lret
lock
sub
shrl
fildll
out
pop
test
ret
add
pop
jo
and
add
in
adc
and
fwait
leave
int
xchg
add
shl
pop
cmp
icebp
add
push
inc
in
sbbl
mov
add
dec
pusha
lds
dec
sbb
imul
xor
mov
add
or
cmp
inc
add
inc
xlat
icebp
add
lods
lods
sub
dec
pop
push
mov
and
lea
adc
jbe
jns
or
popa
add
clc
ljmp
xor
inc
mov
and
jbe
stc
inc
mov
add
sti
adc
loop
jle
add
inc
lds
mov
inc
mov
fldl
sbb
jg
xor
xlat
dec
xchg
addl
jo
cmpsb
lret
and
push
xchg
push
icebp
add
imulb
aas
popa
cmp
and
mov
add
fstpl
mov
call
sbb
or
imul
jbe
fwait
sbb
xchg
add
push
aas
loopne
shrb
test
cmpb
pop
cli
fs
adc
add
add
out
add
mov
mov
movb
push
jno
int
add
push
aam
xor
negb
mov
lock
leave
or
inc
pop
push
jmp
cmp
mov
scas
pushf
addl
test
sub
jp
loopne
adc
cld
cmp
xor
adc
push
dec
sub
jo
mov
nop
sbb
add
jno
sub
rolb
jmp
rorb
sub
jle
clc
jge
ret
and
jo
add
daa
mov
rclb
cmp
mov
or
jmp
insl
arpl
enter
and
cld
int3
jae
fiaddl
popa
push
test
add
add
in
lea
xor
ds
sbb
dec
jne
sbb
jge
cmp
sub
mov
mov
or
cmp
add
lds
imulb
pop
icebp
push
or
jb
add
scas
push
int
in
add
adc
pop
pop
mov
push
test
scas
jecxz
fdivrs
aas
ljmp
jg
cld
into
dec
insl
mov
sub
ret
pop
mov
push
ss
mov
fcomps
stos
in
and
out
push
roll
nop
addb
xchg
scas
sbb
add
lods
inc
aad
adc
into
push
sub
pop
test
xor
ja
imul
push
sti
mov
cmp
leave
sub
add
sarb
ss
adc
ds
add
xor
cmp
add
arpl
ss
sub
hlt
dec
add
inc
xor
xlat
mov
add
leave
xabort
movsl
xchg
add
dec
pop
sub
adc
fdivrs
insb
push
cmp
fistl
add
pop
enter
add
adc
test
ret
inc
hlt
lret
cmp
add
daa
in
popa
xchg
fdivrs
mov
outsl
push
add
mov
mov
mov
mov
shlb
loope
cs
hlt
jl
loopne
psllw
ret
add
jnp
into
xor
movsl
cmp
in
add
mov
and
mov
push
and
mov
sub
add
sar
cmp
bound
or
mov
inc
push
je
test
inc
repnz
ja
xchg
push
shlb
sbb
je
mov
sbb
sbb
pop
adc
xchg
add
xchg
and
xor
mov
or
enter
test
fsubl
xchg
push
mov
pop
dec
mulb
dec
xor
add
scas
inc
cmp
push
fwait
and
test
cmpsb
sbb
inc
fisubrs
sbbl
popf
xlat
cmp
mov
fwait
adc
sbb
xor
scas
adcl
mov
cmpsb
popa
es
xor
inc
push
ja
add
stos
add
sbb
jg
add
imul
pop
add
leave
lds
dec
ja
stos
sbb
roll
cmp
je
lahf
add
mov
pop
mov
mov
cmp
push
jb
and
mulb
std
in
data16
in
inc
int
mov
mov
sbb
inc
add
cwtl
js
gs
push
lock
faddl
add
push
sub
addr16
inc
cmp
pop
data16
lret
push
adc
test
sti
cmp
mov
jl
es
add
dec
repz
mov
sub
or
lea
les
lahf
push
rol
repz
popf
add
sub
xchg
into
lcall
aas
inc
loope
rorb
aaa
mov
lods
rorl
xchg
and
push
add
dec
mov
ljmp
xchg
rcll
aas
outsl
cltd
push
and
add
add
or
inc
jl
push
divl
adc
sub
popa
push
out
and
jns
add
js
in
jne
dec
or
movsb
add
mov
mov
inc
cmp
push
push
roll
testl
loopne
addl
push
in
cltd
fldenv
add
loopne
dec
add
xor
popf
add
mov
in
bound
daa
sarl
iret
xor
push
dec
inc
add
jo
std
mov
and
pop
push
dec
ss
lds
add
test
mov
lcall
or
push
cmpsl
add
add
cmp
insb
mov
loope
mov
in
mov
add
push
mov
and
hlt
add
add
inc
loopne
rolb
cmp
cmpsb
stos
xchg
push
add
pop
or
or
adc
cmpsl
into
sbb
jns
aas
add
test
mov
add
push
mov
push
cld
or
sub
pop
jecxz
std
addb
mov
mov
fiaddl
dec
lret
and
sbb
sbb
add
push
xchg
test
mov
les
shrl
idivb
xor
dec
out
inc
or
and
push
cld
inc
pop
lods
insl
sbb
in
movsb
add
lea
aaa
or
hlt
test
push
adc
mov
cmc
pop
je
mov
adc
out
stos
sbb
add
insl
cmp
dec
inc
std
je
loop
inc
mov
mov
sbb
aam
stc
mov
jg
leave
inc
add
jnp
rolb
cs
add
add
cmpsb
inc
testb
sub
js
jb
pop
cs
adc
add
xor
lods
rclb
pop
lcall
mov
scas
xor
ss
cwtl
add
lret
or
lcall
aas
das
mov
xor
push
imul
add
lods
int
rcl
pop
adc
pushf
jge
ret
xor
add
sbb
jl
mov
and
add
sub
fmuls
shl
js
inc
mov
loopne
cmp
jge
addr16
setp
sti
push
add
or
cwtl
fstl
subl
daa
cli
adc
jnp
push
das
add
call
mov
and
add
add
add
cmpsl
inc
mov
sbb
mov
data16
mov
aad
add
gs
nop
jge
addl
cmp
dec
cs
ds
sub
and
test
mov
inc
sub
jbe
sbb
es
sub
lock
mov
mov
std
and
testl
adc
ret
lret
sub
push
adc
jne
loopne
dec
mov
mov
xor
outsb
loop
pop
ret
mov
scas
iret
mov
flds
pusha
push
cmpsl
inc
ds
int
movsb
jnp
inc
loope
dec
lahf
clc
mov
movsb
call
adc
mov
xchg
or
sbb
call
sbb
pop
hlt
add
and
pop
dec
shll
data16
dec
loop
inc
add
movsb
or
rcrb
loopne
adc
sub
mov
fsubrs
in
push
lahf
or
aaa
sub
ljmp
pop
dec
daa
add
mov
loope
test
std
add
lods
mov
shlb
lahf
add
and
loopne
fnstsw
adc
ds
add
push
das
adc
add
push
les
lcall
mov
lods
and
cmovl
int
pusha
arpl
stos
aad
test
or
icebp
daa
fldl
test
mov
cmp
lods
bound
inc
mov
push
aaa
leave
orl
pop
mov
push
imul
jns
dec
popf
cmp
add
push
faddp
sahf
adc
xor
loop
test
inc
push
test
mov
ja
fidivs
xchg
movsl
call
add
or
and
shrb
jmp
bndstx
loope
dec
and
sbb
add
filds
pushf
add
shl
or
ja
inc
aaa
adc
pop
psadbw
cmp
sti
add
pop
xchg
dec
cltd
mov
push
sbb
fidivs
testl
sub
add
fcmovnb
hlt
mov
sub
dec
ret
cmpl
mov
arpl
mov
add
mov
aas
xchg
or
xchg
bswap
jg
je
shll
adc
fdivl
add
out
xor
popa
scas
add
sub
jle
pop
repnz
push
cmpsb
add
aaa
pop
mov
pop
jb
das
rorl
jbe
mov
dec
inc
hlt
push
xor
nop
lea
jle
and
push
in
cmp
rorl
sub
roll
ficoms
stc
add
xlat
test
pop
cld
not
xor
adc
aam
jno
repz
idivb
mov
nop
adc
push
and
add
jmp
mov
sub
add
jnp
loope
out
lds
pushf
scas
outsl
daa
ret
xor
dec
push
fadds
add
out
loopne
adc
fdivs
xlat
inc
xchg
mov
imul
or
sub
or
popa
rcll
nop
aad
sub
imul
mov
mov
sbb
mov
scas
add
adc
cltd
cmpsb
add
push
sbb
fstl
or
imul
insl
mov
shrl
mov
pushf
xor
fiadds
mov
int3
add
add
loope
mov
mov
dec
xchg
fs
jne
inc
cmpsl
push
or
dec
add
cwtl
adc
sbb
push
movsb
sbb
push
mov
mov
mov
popa
cmp
ljmp
dec
and
addl
roll
arpl
push
pusha
xor
xchg
aad
cmp
inc
dec
test
cmp
hlt
xchg
add
das
clc
jno
sbb
add
fnsave
add
inc
daa
pop
mov
jp
xchg
jne
lret
pop
xchg
add
xchg
mov
jbe
xor
jae
add
mov
xor
fistpl
add
dec
mov
add
cli
mov
mov
xor
aas
andb
push
adc
out
or
shld
cwtl
test
xchg
add
cmpsb
ljmp
loopne
mov
lret
pop
add
push
enter
cmp
aad
cs
mov
mov
repz
in
je
ds
fcompl
or
dec
xor
bound
cmpsb
push
sbb
mov
stc
dec
test
shll
sbb
mov
push
push
lret
in
fsts
icebp
sarb
jnp
sbb
mov
jp
pop
jge
ret
cmp
jae
pusha
lods
sub
adc
outsl
jmp
enter
sbb
cmp
cmp
bound
decl
mov
sbb
insb
xchg
int3
out
add
ja
jmp
out
add
andb
sbb
pusha
cld
mov
jge
xor
jl
inc
mov
jmp
cld
xchg
loop
stos
cmp
or
sub
test
pop
xchg
dec
xor
pop
and
xchg
iret
sub
mov
in
add
clc
movsb
loopne
cmp
jp
aas
and
mov
adc
jbe
cmp
sbb
dec
add
leave
xchg
mov
mov
and
fadd
outsl
das
add
popf
fsubr
sub
addb
sti
or
bound
push
mov
fwait
xor
in
lods
mov
iret
dec
inc
add
jmp
call
cwtd
fildll
and
and
add
bound
add
cwtl
jecxz
sbb
jge
lock
shlb
sti
mov
mov
lock
push
inc
mov
xchg
rcll
pop
add
mov
pop
repnz
nop
cld
je
scas
fisubrs
outsl
or
es
adc
jne
adc
sub
daa
fsubrs
adc
cli
mov
pusha
je
add
push
ret
fisttpll
dec
rcr
mov
and
loop
stos
add
int
or
sub
mov
sbb
add
sarl
subb
insl
add
fwait
lcall
shr
mov
std
mov
cld
sbb
test
out
jns
push
add
cmp
add
lods
testl
pop
xor
jb
test
orb
mov
imul
pop
pop
and
push
out
out
rcll
jg
sbb
dec
mov
push
add
loope
push
dec
adc
sbb
popa
fldl
fadd
adc
enter
add
mov
add
mov
inc
jne
shl
in
push
xor
jb
dec
cmp
movsb
mov
pop
pop
adc
pop
inc
scas
stc
mov
and
mov
sub
or
add
js
popf
sbb
xor
add
rcrb
inc
inc
incb
add
and
mov
mov
xlat
push
lret
adc
mov
testl
cmp
out
push
jge
addr16
fwait
pop
add
fmul
frstor
repz
add
lret
dec
lock
in
ds
rorb
sbb
test
cmpsl
mov
add
cmp
xor
xchg
or
mov
xor
adc
fnstsw
fcomi
add
aaa
and
movl
and
xchg
ret
add
test
dec
iret
xchg
inc
mov
adc
push
jno
fs
inc
add
mov
mov
dec
add
cmp
lcall
test
movsb
inc
cmp
add
inc
jg
push
shlb
outsb
loop,pt
add
jp
or
neg
inc
add
out
sti
dec
add
fchs
repz
pop
lods
cmp
jo
xor
int3
add
or
and
mov
xchg
loopne
out
lods
and
iret
ret
lret
int3
add
add
mov
jbe
dec
mov
mov
dec
or
pushf
add
push
xor
xchg
mov
sub
add
push
pop
and
cmp
loop
push
push
xchg
mov
cwtl
orb
pop
add
inc
int
mov
pop
jmp
jne
sub
mov
jle
ret
icebp
lods
inc
pop
out
push
add
dec
scas
cmc
bswap
pop
iret
shlb
mov
mov
xchg
push
pop
dec
add
dec
repz
inc
fwait
hlt
mov
or
js
lods
stos
cmc
push
adc
cmp
push
cmp
xlat
add
cld
iret
pop
xor
call
pusha
ss
test
repz
push
add
adc
sti
add
sbb
hlt
jl
insl
int3
add
and
cwtl
inc
xchg
das
testb
divl
sbb
scas
rol
add
pop
xchg
stos
sbb
pusha
pop
pop
dec
js
add
clc
xor
inc
or
aam
fistpll
test
inc
adc
xlat
aad
popl
loope
and
mov
dec
xor
and
add
push
adc
outsl
mov
sub
add
addr16
add
repnz
and
out
add
ret
mov
and
and
rorl
cmp
jecxz
dec
movb
dec
mov
aad
dec
xchg
ja
sub
lock
mov
int3
add
add
jnp
out
sahf
dec
xchg
rorb
and
sbb
cmp
mov
cmp
sahf
notb
add
dec
pop
pop
fisubs
roll
mov
lds
std
jl,pn
mov
push
cmp
rorl
fwait
add
xor
push
adc
mov
sbbl
mov
fildll
fwait
mov
add
dec
int
sub
fistps
ret
xor
push
lods
cmp
roll
arpl
test
dec
and
add
mov
jae
cmp
add
insb
add
mov
outsb
add
dec
imulb
pop
push
and
sub
xor
xor
mov
adc
jns
or
mov
mov
mov
cs
subl
adc
cld
mov
sub
sbb
xchg
and
inc
pop
inc
dec
add
mov
or
mov
add
shrb
push
and
add
rcr
cmp
pushf
dec
sbb
jge
push
test
add
and
add
int
cmpb
aas
inc
insl
xor
sbb
cmpsw
xchg
cli
lods
scas
xchg
fists
xor
iret
repnz
mov
add
adc
ja
mov
lock
divb
push
faddl
loop
mov
and
push
jnp
add
shlb
mov
xchg
cwtl
lock
or
xor
mov
lcall
popa
das
jmp
lods
xor
leave
mov
jl
lea
lods
fiaddl
push
pop
push
or
mov
in
out
add
and
add
push
push
xchg
sti
addr16
jg
aaa
or
lock
fcompl
pop
xchg
pop
pop
lds
cmp
pcmpgtb
push
add
push
divb
sahf
push
cld
jbe
lea
and
inc
fbld
fadds
dec
arpl
xchg
cmpsb
sbb
adc
push
mov
pop
add
ret
pop
push
push
sub
xor
mov
call
loopne
mov
add
sub
jae
xor
aaa
fildl
fs
imulb
cmpb
adc
das
pop
jne
iret
push
ret
sub
nop
xor
add
push
add
sahf
pop
sub
dec
cmpl
add
sub
stc
les
adc
in
ja
or
dec
xchg
sub
negl
jb
push
add
outsl
add
pusha
and
mov
or
push
mov
push
sub
divb
push
lahf
loopne
or
cmp
sbb
and
rolb
sti
adc
sbb
add
into
repz
es
cmp
stos
imul
addl
push
insl
mov
mov
mov
sub
mov
sbb
and
add
cli
cmp
mov
add
fidivrs
sarl
mov
subl
sahf
push
subl
outsb
jae
mov
push
dec
mov
pop
push
ds
scas
subb
mov
repnz
and
pop
pop
shl
lods
shl
xor
lahf
sub
popl
and
out
pop
iret
add
mov
xchg
pop
jns
das
add
scas
and
dec
add
ret
dec
movsb
in
mov
pop
popa
stos
add
xor
stc
scas
add
push
dec
sahf
jae
xchg
add
gs
xchg
add
push
add
xchg
add
enter
xorl
xchg
lock
cmp
dec
fwait
movsb
xchg
je
pop
dec
inc
mov
adc
sbb
mov
sbb
add
negl
es
dec
mov
xlat
jge
xchg
movsl
lds
mov
jne
add
jp
push
add
aad
jae
push
lret
insl
add
arpl
inc
pop
add
rorl
cltd
ss
inc
cmp
adc
mov
mov
mov
js
jp
fdivs
add
int
pop
inc
sub
es
test
iret
xor
arpl
jne
sbb
mov
and
out
jle
xor
scas
daa
mov
jg
jmp
shlb
mov
mov
imul
pop
or
adc
jb
dec
inc
ss
in
hlt
xor
jns
cmp
xor
js
add
mov
mov
add
aas
subl
adc
sub
popa
aas
add
adc
daa
inc
cmp
add
ds
sbb
or
sbb
sarb
rcll
mov
lret
popf
lret
or
xchg
push
add
loopne
jge
int
out
add
push
cmovle
popf
pop
jo
icebp
xor
jl
xchg
add
dec
and
xchg
lea
int
leave
icebp
loop
pushf
add
fisubrl
imulb
test
clc
push
add
or
inc
outsl
xchg
xchg
adc
xor
inc
into
stos
mov
sbb
inc
repnz
popa
push
adc
cmp
insb
sub
mov
fnsave
and
ds
gs
mov
adc
dec
xchg
jmp
pop
jo
pop
add
xchg
das
lret
add
in
mov
and
adc
mov
mov
push
xor
es
outsl
inc
sub
add
dec
ljmp
in
or
fnstcw
pop
add
push
mov
jo
popf
mov
xchg
push
cmc
std
sbb
push
add
sbb
lods
lods
jbe
xor
pop
sbb
mov
cmp
repnz
add
orb
push
ret
jl
cmpsl
cmpsb
mov
cmc
mov
lods
enter
cwtl
xorl
pop
add
fsubrp
inc
push
dec
xchg
jae
clc
and
arpl
mov
sbb
or
adc
addl
pop
mov
cmpb
dec
adc
add
fsubl
into
scas
outsb
addb
icebp
xchg
ss
movb
cmc
out
in
jmp
add
rclb
mov
mov
popa
in
sldt
cmp
subl
lock
jae
fstps
mov
add
inc
push
test
in
push
loop
add
fstpt
test
in
dec
add
scas
jmp
adc
xor
in
adc
mov
icebp
dec
xlat
adc
dec
mov
ret
pop
lock
sti
pop
mov
addb
cwtl
mov
aam
xor
add
outsl
jnp
push
mov
inc
inc
mov
mov
clc
push
mov
mov
or
jbe
shlb
jb
adc
pop
cwtl
mov
pushf
repz
xchg
sub
mov
xor
cmpsb
dec
cmp
add
leave
les
sahf
testb
sub
mov
lcall
fwait
mov
xor
adc
sbb
loop
jge
sub
lods
xor
mov
sbb
fldt
lock
adc
in
add
cltd
dec
add
or
mov
rcl
xor
mov
cs
push
mov
jnp
fwait
insb
adc
das
ljmp
add
xlat
xorl
es
or
inc
mov
add
in
outsl
das
shl
movsl
add
and
stos
ret
ds
ret
inc
jl
stc
mov
test
mov
jge
addb
cmp
add
clc
mov
lcall
add
pop
mov
movsb
cmpsb
testb
rolb
lods
adc
lock
loop
dec
or
stos
cli
ror
fiaddl
fsubl
cmpb
je
inc
divb
mov
test
xor
add
sbb
cmp
inc
pushf
add
fxam
lret
ljmp
xor
leave
in
push
adc
add
mov
popa
daa
mov
in
inc
jo
and
add
xor
into
jnp
stos
pushf
add
aam
mov
aaa
cmp
fs
jo
arpl
cmp
xor
neg
scas
inc
jge
dec
aas
lcall
mov
mov
or
out
inc
pop
aad
aad
call
xchg
loop
lods
rcrl
aad
xor
inc
test
dec
or
popf
insl
add
cmpb
hlt
ucomiss
repz
sar
cmp
seta
daa
sbb
les
scas
cld
jae
mov
icebp
cmc
fnstsw
test
dec
add
icebp
sbb
inc
into
xlat
pusha
add
sarl
mov
xor
sub
cmc
ret
scas
cmp
std
rcr
es
adc
jl
adc
xor
xchg
stos
mov
data16
add
mov
andb
push
mov
and
lcall
aad
enter
mov
xor
ret
scas
mov
in
xchg
mov
and
lods
mov
jne
mov
push
test
jmp
lcall
outsl
sub
push
ja
sbb
and
mov
xchg
sub
outsl
xor
cmp
add
mov
repz
push
sarl
or
inc
lahf
jle
xlat
dec
sub
outsl
inc
add
jp
jnp
imul
pusha
arpl
push
repnz
inc
in
pop
mov
and
sbb
loope
in
inc
out
ss
add
dec
or
pop
lods
cmp
test
dec
add
out
inc
loope
push
sbb
mov
cmp
adc
cwtl
jp
xlat
adc
or
addr16
adc
arpl
sbb
clc
enter
mov
mov
es
out
and
push
push
pop
les
add
xor
cmp
pop
ds
xchg
xchg
fldl
and
pop
xor
add
push
jp
in
sahf
and
ljmp
cmp
popa
xor
pop
push
mov
xchg
pop
jg
adc
xor
jp
fsubr
jmp
cmp
mov
bound
iret
mov
xor
out
and
loopne
add
pop
inc
push
cmp
cld
mov
adc
mov
cmp
sub
pusha
aam
pop
add
pop
add
int
sub
aam
insb
stos
insl
aas
mov
shrb
jo
aad
int
sbb
cmp
or
inc
mov
iret
jg
pop
adc
sub
cs
push
lret
sbb
into
and
shll
sub
stos
sahf
testl
sti
out
or
mov
mov
lret
add
stc
fidivs
stos
in
testb
loop
push
jp
mov
loopne
outsl
adc
in
cwtl
fcmovnb
cmp
push
or
scas
jg
dec
add
jbe
std
hlt
pop
push
test
sub
popa
add
out
push
push
push
fisubrs
lret
cmp
cmc
add
inc
or
movsl
subb
dec
inc
call
loop
lods
test
loopne
jmp
add
in
jl
and
in
and
push
xor
mov
and
dec
mov
pop
push
or
sbb
std
dec
sub
sbb
sarb
and
push
xchg
in
jl
bound
dec
roll
in
addr16
testb
xchg
out
gs
mov
inc
xchg
out
aas
aad
push
data16
and
in
dec
mov
imul
and
in
cmp
mov
adc
leave
xchg
jle
jp
jle
mov
sbb
inc
mov
ret
mov
dec
push
or
scas
sub
mov
push
lock
adc
addr16
push
or
out
jp
adc
mov
dec
dec
push
add
adc
xchg
fisubs
jg
fisubrl
xchg
sarl
movsl
nop
hlt
jp
pop
push
jl
addl
or
xchg
push
xchg
cmc
sti
mov
pop
and
ljmp
sub
dec
decl
jle
bound
outsl
mov
js
pushf
and
add
sub
ret
repnz
cmc
cltd
adc
mov
sbbb
aam
push
adc
mov
movsl
mov
popa
add
jge
cli
ds
add
or
dec
cmp
xorb
sbb
scas
out
cmp
daa
jge
shr
into
jns
jge
fdivrp
or
or
inc
jne
cli
add
mov
ret
sub
push
das
mov
insl
popa
pop
out
and
les
and
mov
adc
movsb
ret
imul
cld
out
xchg
mov
out
cwtl
inc
sbb
xchg
mov
cli
ss
inc
adc
scas
lahf
jg
popa
or
and
sub
pop
xchg
mov
iret
aam
mov
cwtl
pop
push
sub
add
cmp
imulb
inc
daa
lods
andb
xor
or
mov
inc
jmp
ljmp
pop
cmp
inc
int
sbb
mov
cmp
mov
xlat
jecxz
cmpsl
inc
add
mov
call
scas
and
pop
push
sub
inc
hlt
push
je
add
or
adc
in
add
pop
or
xor
mov
shrb
add
aad
rcrb
fcoms
stc
hlt
pop
cli
and
leave
iret
dec
dec
cmp
outsl
sbb
inc
hlt
sbb
dec
pop
icebp
pushf
sub
cli
dec
movsb
inc
pop
jno
xorb
cld
je
xor
inc
add
out
adc
or
add
dec
cli
jl
xchg
sbb
inc
leave
xchg
mov
add
in
out
int
shll
in
fadds
xor
cmp
fcompl
or
in
add
adc
add
test
pop
pop
data16
adc
out
cmp
pop
dec
dec
adcl
aam
pop
add
sub
push
push
and
inc
int3
or
fnstsw
cmp
std
add
xor
movsl
ret
fstps
or
mov
rolb
jmp
pushf
jae
cwtl
lock
sahf
xchg
les
cmpb
xor
xor
jp
cmp
pushf
or
and
andb
push
sbb
inc
push
add
and
inc
insb
xchg
sbb
push
jnp
scas
add
ljmp
add
loop
adc
pop
xor
mov
ret
mov
shll
jge
cwtl
mov
adc
pop
pop
les
xor
sbb
dec
xchg
xor
push
add
pusha
or
addr16
bound
mov
cltd
fadds
pop
mov
mov
add
xchg
sbb
xor
pop
mov
adc
or
mov
jbe
inc
xor
lea
add
jne
rcrb
jb
aad
pop
sbb
test
and
mov
inc
icebp
in
fadds
sub
addl
or
inc
stos
push
inc
scas
ja
jae
je
or
add
push
loope
xor
xor
inc
in
lcall
jb
cld
inc
xchg
pop
adc
fwait
jge
ret
mov
lahf
lret
sahf
cmp
je
icebp
gs
jmp
sbb
xor
test
je
int
push
movb
sub
add
call
insb
add
aam
enter
add
movsb
jmp
or
sbb
cmp
ret
sub
ret
add
call
data16
mov
out
je,pt
pop
jecxz
pop
insb
fdivl
sti
testl
addl
inc
mov
xor
xchg
mov
mov
cltd
inc
add
nop
xchg
sub
xchg
iret
stos
leave
fcmove
hlt
lcall
and
mov
push
jmp
add
outsl
pushf
shrl
aaa
xor
xchg
xchg
and
cli
add
add
inc
mov
repnz
push
pop
sbb
pop
jmp
sub
ret
fprem1
daa
fwait
cmpsb
testb
jns
push
mov
cmpsb
sub
dec
cmp
push
into
loope
or
lahf
push
jecxz
add
insb
nop
loope
mov
or
cmp
data16
adc
jle
sbb
add
push
lock
xorb
cmpsb
mov
cmpsb
inc
and
je
popf
repz
sti
es
add
gs
dec
outsb
ss
cs
add
scas
jne
xor
xchg
xchg
mov
loopne
lret
mov
add
sub
xlat
jbe
pop
jne
xchg
lahf
aaa
ror
shr
sbb
push
out
add
popf
or
push
sbb
add
jnp
jns
movsb
lods
out
mov
push
out
and
mov
in
mov
lds
je
push
push
rcrl
dec
push
mov
xchg
dec
mov
inc
sbb
clc
addb
repnz
push
fwait
in
sub
fidivrs
andl
xchg
dec
pusha
movsb
xor
add
rcrl
sbb
dec
xchg
cmc
sbb
scas
loope
cmpsb
xor
fsubrs
addb
pop
sahf
inc
jo
xor
push
aas
push
cmc
popa
imul
sbb
xor
pusha
out
repz
hlt
or
sbb
adc
xor
xchg
arpl
test
in
xor
sbb
xchg
cmc
cmp
or
das
imul
out
jmp
push
cmp
packsswb
dec
mov
or
mov
and
or
sbb
pop
push
insb
lcall
jns
fldt
xchg
call
fadds
xor
adc
stos
lret
daa
shl
push
push
add
out
pop
adcb
sub
jp
xchg
out
lods
test
pop
push
and
add
add
pop
lcall
xchg
cmp
cmp
loop
imul
xchg
and
push
aad
xchg
and
fdivrs
leave
adcb
or
lcall
mov
lahf
push
gs
or
push
jp
std
movsl
push
mov
aas
bound
sub
xchg
push
das
rcll
pop
movsl
iret
or
rcrl
out
cmp
pop
pop
adc
out
xor
hlt
insl
cmp
in
rclb
push
shlb
add
sar
xchg
lds
or
xor
out
loope
sub
mov
push
push
sub
sbb
cmp
bound
mov
sarb
cs
mov
jp
push
adc
arpl
mov
inc
inc
iret
push
fnstenv
bound
inc
dec
pop
mov
addb
jmp
cmp
mov
xchg
test
push
sub
je
and
sbb
add
inc
cmp
xor
ja
add
mov
inc
je
and
xor
ret
loopne
dec
and
adcb
pop
aam
mov
pushf
adc
or
cli
cmp
push
or
je
mov
repz
add
sbb
mov
rolb
sahf
leave
mov
addb
clc
cmp
xor
push
mov
ljmp
iret
add
mov
xor
dec
lea
add
sbb
outsl
cs
add
add
fistpl
movb
cmpsb
mov
add
das
scas
and
add
int3
lea
insb
xchg
push
dec
fiaddl
mov
push
jmp
stos
js
sub
es
and
ljmp
push
mov
scas
test
add
rcll
in
mov
pushf
outsl
push
push
divb
push
add
dec
rsm
pop
mov
dec
pushf
and
pop
popa
mov
fdivr
ret
jno
mov
mov
fbld
mov
roll
push
and
inc
sub
repz
xor
pop
movsl
pop
add
cmp
testl
push
push
push
cmp
mov
js
scas
add
out
inc
aas
sub
andb
loopne
add
push
inc
sub
lret
fdivrs
cmp
dec
lcall
add
cltd
rclb
and
jle
cmp
xor
sbbl
xchg
xor
nop
std
arpl
sbb
fwait
imul
out
lahf
stos
mov
add
je
inc
jmp
push
inc
add
fstps
stc
pop
sahf
push
add
shll
cmp
add
jle
lods
push
sbb
add
aad
inc
and
dec
add
pop
cli
fmull
add
inc
pop
add
int3
xchg
in
add
add
xchg
scas
xchg
sub
or
add
out
xchg
imulb
adc
adc
add
mov
xchg
insl
fs
ret
inc
mov
je
xchg
sbb
sub
cmp
mov
jle
loopne
mov
pop
dec
lahf
mov
enter
pop
pop
add
push
shr
adc
xor
iret
in
mov
xchg
add
pop
sbb
cwtl
add
out
lds
mov
fs
or
movsl
inc
aaa
inc
lcall
push
bts
shl
insl
insb
out
push
aad
push
stos
cmc
add
sbb
in
inc
ljmp
sbb
sub
insl
and
lock
xchg
lods
cmp
shrl
hlt
lea
dec
pop
arpl
jge
adc
push
add
mov
es
dec
push
sbb
sub
mov
add
adc
xor
add
push
fmulp
mov
in
mov
shlb
aaa
mov
imul
jge
add
inc
jns
cli
jp
add
ds
jmp
push
sbb
addr16
shrb
loop
cmp
inc
jb
push
lret
sbb
or
xor
mov
jp
jg
jae
pop
test
mov
arpl
lea
push
out
je
xchg
out
inc
leave
sub
mov
mov
inc
test
sbbb
nop
fbld
adc
int
xor
pop
std
push
add
jnp
adc
add
inc
lods
in
xchg
scas
mov
cmp
push
jbe
out
inc
or
mov
repz
fmul
mov
xor
adc
cmc
popf
dec
and
leave
mov
shrl
scas
lret
and
or
popf
sub
and
xor
pop
xor
push
test
ud0
andb
mov
or
add
loope
cmp
lret
or
sbb
mov
hlt
add
leave
sar
sarl
lods
cmp
test
sub
faddl
in
dec
je
and
xchg
test
movntps
pop
aaa
xchg
inc
add
jae
or
fildll
mov
fmull
or
repz
or
push
sar
jl
lods
push
pop
fnsave
jae
xor
cmp
rcll
testb
scas
and
arpl
loop
xchg
imul
pop
daa
add
mov
fcmove
mov
push
rorb
adc
sub
aas
lcall
jl
inc
mov
sub
les
int
enter
mov
insl
and
test
pop
sub
mov
inc
fsubl
add
scas
push
push
rol
cs
and
fbld
mov
add
out
adc
ret
mov
xchg
add
mov
inc
xchg
test
xor
fdivrl
jge
xchg
pop
add
hlt
xor
ja
out
mov
lds
cmpsb
sar
fld
mov
inc
std
pusha
je
sbb
fdivs
and
add
xchg
push
popf
mov
fs
cmpsl
dec
push
stos
adc
movl
dec
jae
cs
push
dec
push
jmp
lahf
push
inc
adc
jbe
and
add
pop
data16
bound
dec
repnz
push
adc
sub
data16
test
in
out
mov
movaps
sub
xor
sbb
push
addl
ret
insl
ret
add
inc
jne
or
arpl
pop
xor
add
xchg
adc
into
push
jecxz
inc
xor
rolb
cli
pusha
inc
jmp
fwait
movl
mov
xchg
sti
fsubrs
ret
sbb
mov
or
sub
mov
aam
into
loop
push
call
testl
icebp
outsb
setnp
xor
and
lret
xchg
movsl
add
and
mov
int3
or
mov
xchg
push
pop
push
imul
jo
hlt
rol
scas
cmp
cmp
or
lds
dec
add
push
sbb
sbb
ja
aas
add
leave
mov
inc
push
mov
xor
stos
mov
js
rcrl
sbb
push
add
idivl
test
imul
int3
add
stos
out
xchg
inc
sbbb
test
out
add
stos
inc
sub
shlb
sbb
test
mov
out
bnd
testb
divl
in
add
into
shll
adc
mov
ds
test
cmp
push
shrl
mov
pop
xlat
push
add
cmp
inc
inc
add
add
pop
cmpsb
aas
mov
mov
mov
cmp
mov
out
sahf
push
outsb
aaa
movsb
add
xchg
lcall
sub
xchg
add
push
mov
add
out
rol
decl
or
fmull
clc
push
push
sarl
mov
and
lods
pop
in
add
jmp
push
jmp
and
pinsrw
push
bnd
sbb
add
mov
test
jl
mov
xor
or
add
mov
jno
lock
xchg
outsl
sbb
pop
cmp
pop
xor
movsb
inc
xchg
js
ljmp
fiaddl
dec
inc
jae
imul
or
pop
cmp
pop
stos
mov
fiadds
cmpsl
xor
cmp
mov
add
mov
add
or
loop
jp
pop
sti
mov
add
leave
mov
jecxz
cmp
inc
sbb
sti
call
fwait
rolb
jns
jp
imul
sbb
inc
scas
rclb
push
stc
rorl
ds
dec
inc
jne
dec
in
xor
rcrl
aaa
or
fcmovbe
stc
jns
subl
test
cld
sbb
xchg
inc
shrl
cmp
add
dec
push
aam
adc
shrl
sbb
inc
cs
add
loopne
arpl
mov
scas
out
sbb
mov
das
pop
insb
imul
pushf
int3
push
xchg
add
ja
mov
push
xchg
popf
add
insl
or
pop
pop
mov
mov
inc
out
movsb
sbb
xchg
mov
sub
cmpsl
inc
jb
jns
test
fs
sti
pop
xchg
xchg
xor
add
add
or
das
shll
dec
push
sbb
movsl
dec
stos
jb
dec
sub
xor
iret
xchg
sub
shlb
push
cmp
cmp
jp
push
cmp
clc
or
jne
int3
aad
pop
cmp
out
jb
dec
inc
int
pop
jns
add
jns
neg
push
sbb
out
push
loope
leave
push
and
add
mov
push
mov
mov
stos
mov
sarb
aaa
lea
sub
and
mov
cmc
or
das
or
xor
sub
stc
cltd
xchg
push
add
cmp
inc
adc
cmp
add
lds
adc
add
stos
jnp
sub
cmpb
sub
cwtl
cmpsb
fistps
jmp
sbb
cmp
rolb
and
cld
cltd
add
orl
add
cwtl
mov
xchg
nop
cli
add
lcall
jae
mov
rcll
das
subb
add
mov
sbb
testl
pushf
sahf
xor
fcomp
addr16
or
jp
les
jno
ja
xor
mov
sbb
mov
pusha
add
add
dec
adc
add
or
aaa
push
in
mov
xchg
sbb
ffree
mov
push
sub
cs
jl
adcl
dec
fs
je
in
test
test
push
mov
lds
mov
add
xchg
adc
inc
sub
pop
add
js
mov
xor
stos
mov
inc
push
cs
and
out
cltd
addr16
xor
mov
mov
add
adc
test
mov
inc
int
bound
dec
inc
sbb
in
mov
or
mov
inc
stos
movsl
repz
dec
sub
push
adc
or
cmp
pop
pop
add
add
lds
fwait
sbbb
mov
aam
cmp
fcmovnb
push
xchg
push
sub
dec
rclb
pop
add
clc
add
movsl
lret
mov
fldenv
sti
push
adc
test
ret
inc
push
xor
or
push
arpl
ds
inc
es
andb
cwtl
xor
xchg
pop
insl
and
jne
push
xchg
add
pop
lock
push
jnp
add
jle
add
xchg
ds
mov
inc
or
xchg
test
pop
cmp
add
cmp
out
les
mov
and
add
je
adc
xchg
fdiv
ret
test
mov
cwtl
cmp
pop
dec
daa
sub
xchg
push
rol
aas
xor
fs
pushl
inc
incl
xchg
ljmp
out
ret
xchg
fimull
pushl
sub
inc
rcr
or
ja
ss
pop
add
push
mov
or
mov
adc
iret
scas
inc
and
inc
add
cltd
mov
enter
jns
dec
sbb
xor
shll
adcb
add
ficoms
jae
xchg
xchg
in
or
sti
add
popa
ret
inc
shlb
push
in
xlat
sub
adc
adc
or
xchg
jg
xorb
lea
or
add
imul
mov
addl
jno
add
jae
movsl
add
adc
fs
mov
lds
mov
rdtsc
push
ret
sub
shll
mov
into
add
mov
pop
shll
dec
mov
sbb
cmp
test
repz
ret
outsb
out
lahf
sub
jne
aaa
insb
or
sbb
neg
fisubrl
out
jg
add
xor
fstpl
inc
rorl
jle
add
add
aam
mov
or
out
test
jp
inc
mov
add
inc
hlt
int3
and
mov
fsubl
sub
push
jne
pop
data16
push
add
pop
fmul
sbb
retw
sti
jl
push
add
icebp
out
sbb
out
add
ret
pushl
inc
es
jp
fists
push
xor
or
int3
adc
jecxz
test
enter
sahf
pop
xchg
or
ret
and
pusha
cltd
and
mov
pop
xchg
mov
enter
cmp
xor
sub
cmp
sbb
cmp
inc
mov
mov
push
aaa
ret
clc
ss
outsb
roll
pop
jmp
cmp
jge
add
cwtl
test
push
add
repz
mov
cmp
test
cli
jbe
mov
push
sahf
inc
sub
cmpsl
mov
fucomip
call
push
cmp
cmp
jecxz
mov
push
cmp
xor
adc
pop
les
cli
stos
sbb
leave
arpl
adc
add
std
xchg
bound
js
adc
cmp
mov
int
xlat
adc
push
sbb
push
jg
cmc
sub
cmc
popf
sbb
shrl
adc
add
xor
xchg
inc
lret
aam
aas
xor
dec
add
adc
rol
jmp
push
stos
pop
pop
aam
movsb
add
ljmp
adc
add
push
test
aaa
xchg
and
xorb
cmc
cmp
mov
std
les
push
inc
add
inc
fldt
jle
and
mov
add
push
mov
add
ja
out
ficomps
adc
sbb
stc
add
add
pop
and
adc
inc
xchg
cltd
in
add
addr16
pop
pop
xlat
pop
stc
inc
adc
sbb
ds
adc
aam
movsl
mov
or
adc
lds
orb
sbb
cltd
adc
pusha
jo
add
mov
jb
lret
fildl
dec
sub
mov
loope
mov
popf
je
out
or
xchg
push
vphaddubw
ds
negb
sbb
sbb
xchg
out
and
das
fcompl
cs
loop
mov
lods
xchg
aas
ficoml
and
inc
fstps
jnp
int3
aad
sahf
stos
sub
mov
xchg
pop
call
js
daa
inc
cmpsb
or
pop
mov
and
mov
loop
fldl
mov
gs
pusha
pop
ret
frstor
mov
pop
xor
loopne
sub
outsl
adc
test
das
add
ja
mov
add
xchg
test
sub
add
adcl
inc
xor
lock
add
sub
outsb
pusha
fsubl
sbb
addb
into
sbb
ja
add
jp
mov
jo
and
mov
lret
inc
leave
xchg
and
push
push
xchg
loopne
stc
mov
mov
stos
lret
sbb
cli
pop
mov
add
push
adc
sub
fcmovbe
orb
lods
popl
mov
push
imul
push
in
popa
xchg
xor
bound
test
add
and
sbb
sbb
mov
cmp
lret
add
leave
xchg
push
cld
jo
outsl
cmp
add
maxps
in
lahf
into
stc
or
inc
ret
xor
in
push
sub
add
mov
enter
mov
adc
stos
sbb
xor
add
mov
jmp
sti
mov
call
addb
sub
test
das
mov
xchg
cmp
mov
mov
xor
sbb
ret
mov
adc
iret
pushl
outsl
mov
test
shlb
push
test
add
push
mov
stos
cmp
pop
and
push
test
sub
repnz
xchg
xchg
cmpsl
cmpsb
shrl
cmp
cmpb
cmp
mov
into
arpl
jns
lahf
push
lods
jp,pn
orl
pop
sbb
sbb
mov
stc
in
mov
jp
jg,pt
inc
ret
or
xlat
sahf
lds
cs
pop
pop
lds
add
and
scas
arpl
ja
out
add
aad
std
add
inc
fdiv
lcall
cmp
loope
jp
cld
mov
sub
cmpb
or
mov
inc
jp
scas
mov
dec
sub
and
flds
mov
sub
gs
pusha
loop
clc
and
cld
jg
nop
ljmp
sub
fs
and
daa
adc
push
mov
pop
inc
jp
xchg
push
mov
std
pop
popa
add
movsb
shlb
inc
inc
cmp
xchg
cmpps
ds
dec
repnz
fs
inc
mov
xor
adc
ja
arpl
add
xor
outsl
scas
add
jp
testb
lock
add
and
inc
setae
cmpsl
aad
lcall
cmp
xor
shlb
add
das
mov
xor
out
and
hlt
mov
jbe,pn
pushf
pop
sub
jp
sahf
out
insl
mov
lret
gs
and
bound
sbb
rcrb
dec
push
jg
fdiv
jge
add
leave
out
js
adc
int3
and
and
and
xchg
daa
in
out
add
mov
hlt
bound
out
xchg
pop
jg
fldl
mov
jp
adc
cmp
sbb
mov
rorl
jp
mov
leave
push
dec
mov
outsb
loop
jecxz
daa
rorl
in
mov
out
sub
xor
mov
xchg
mov
mov
xchg
xorb
and
or
xchg
cwtl
mov
aaa
notl
test
push
in
stos
adc
ljmp
imul
inc
arpl
inc
lods
out
mov
adcb
adc
cmp
xor
push
ret
add
pop
xchg
imul
or
cmp
cs
push
inc
outsl
xchg
fwait
xor
stos
sub
pop
movsb
out
or
sbb
mov
mov
inc
dec
xor
cli
xchg
push
pop
sahf
int3
jne
pop
loop
fcompl
mov
in
jmp
pusha
push
xor
mov
lds
xlat
ret
outsl
rcrb
mov
inc
sub
inc
fs
adc
mov
cltd
hlt
pop
repz
add
out
lods
sbb
dec
int
mov
lcall
vsubpd
fs
loope
or
add
adc
push
adc
cmp
mov
pop
ret
mov
xor
repz
sub
pop
add
out
add
fld
add
mov
rcrl
add
xor
filds
inc
test
xchg
push
add
mov
add
test
mov
arpl
add
rolb
or
cmp
dec
add
aas
mov
test
xor
das
test
adc
insl
mov
lahf
insb
xor
repz
shrb
add
push
stos
bound
adc
mov
repnz
fdivrl
nop
ds
movsl
loope
jmp
cld
add
mov
adc
xchg
cmpsb
addr16
inc
mov
shrb
add
repnz
cltd
pop
incl
add
xchg
enter
xchg
inc
mov
sub
jno
xor
adc
pop
rcr
push
or
iret
test
add
aas
mov
inc
pushf
adc
aaa
add
xor
adc
dec
cmp
push
shrb
and
xchg
xor
mov
mov
or
mov
and
xor
mov
es
jno
jb
loopne
hlt
stos
inc
xchg
add
push
lods
jecxz
pop
fisubrl
testl
mov
dec
pop
mov
out
outsl
mov
or
mov
xchg
das
jle
and
jmp
pop
popf
sbbl
push
adc
sub
push
jle
bound
sahf
add
inc
stc
sarb
mov
add
insb
gs
add
inc
loope
leave
repnz
ret
xchg
sub
push
test
lds
fsubl
loop
mov
pop
or
mov
stc
inc
rclb
iret
outsl
jp
push
sbb
das
sub
sub
test
cmpl
mov
inc
lcall
lods
xchg
dec
add
or
outsl
dec
stos
js
arpl
adc
daa
add
rcr
mov
andb
jo
ret
in
cmp
divb
sub
imul
push
mov
je
rolb
sub
rorb
lods
stos
add
xor
cwtl
add
mov
push
sar
and
sahf
scas
push
cltd
fidivs
jle
push
jg
orb
xchg
and
data16
pop
out
fistl
adc
jo
aam
mov
push
inc
cmp
add
fstl
cmp
adcl
loopne
mov
pop
int
jg
jno
cmpsb
cmp
adc
xchg
adc
or
sbb
add
xchg
dec
inc
in
push
xor
ror
add
sahf
adc
add
jge
les
or
lret
xchg
push
and
cmpsb
cmovbe
mov
and
push
mov
jae
fildl
aas
ret
xchg
mov
in
adc
mov
pop
or
iret
pop
cmc
xor
add
rcll
push
add
or
xchg
mov
negb
xor
std
pop
fisubrl
sbb
inc
enter
jl
jle
ds
aad
add
cwtl
cmp
aam
int
add
and
push
pop
lods
xchg
xchg
add
scas
ret
pop
sbb
mov
push
xchg
inc
incl
add
push
cwtl
ljmp
xchg
outsl
mov
mov
faddl
xchg
inc
scas
pop
nop
out
jl
or
add
cmpsl
addb
insb
lds
pop
fiadds
lret
mov
adc
mov
jnp
roll
push
cmpsl
lods
mov
std
sub
mov
call
cs
adc
pop
add
jns
dec
and
or
testl
mov
push
mov
adc
jae
gs
and
mov
sti
xor
mov
inc
jb
incb
rclb
shl
cmp
pop
std
call
mov
aas
ljmp
sbb
adc
popa
out
jo
ret
jne
mov
fnstsw
add
sub
mov
int3
inc
push
adc
stos
pop
sbb
pushf
lds
xor
scas
push
cltd
in
dec
add
and
cmp
add
ret
sub
push
ret
imul
pop
and
enter
inc
push
push
jns
xor
dec
sub
ss
aam
fldcw
and
adcb
shll
xchg
push
jg
bound
jbe
sub
jo
jp
jo
sbb
lret
fwait
bound
cmp
ret
aad
ret
test
pop
adc
push
and
negb
xchg
xchg
push
lds
in
sub
es
fnstenv
addl
fcomps
mov
mov
lods
jns
sbb
pop
loopne
add
xor
sub
mov
and
decl
sub
je
add
sbb
enter
shlb
xchg
dec
cs
xchg
popf
lcall
mov
std
and
dec
outsb
popf
js
arpl
or
fistl
sbb
xlat
mov
cmpsb
adc
xchg
sub
popf
dec
aad
sti
push
mov
xchg
ret
out
cmp
sbb
mov
stos
out
fdivrs
mov
dec
repz
pop
shrb
push
js
out
loopne
jnp
cmpl
pop
push
adc
test
mov
mov
pop
push
add
fwait
xor
lret
dec
adc
js
add
cmp
sub
add
enter
xor
ret
add
add
orl
dec
mov
pop
out
xor
ror
xor
xchg
and
pushf
imulb
shl
xchg
lods
int
cmp
repnz
sub
into
mov
or
or
scas
jne
cwtl
cmp
mov
sub
mov
into
mov
xchg
mov
lds
sbbb
add
jne
negb
add
mov
jbe
and
out
xchg
mov
and
repnz
sbb
adc
insb
std
in
add
imul
push
add
mov
jns
dec
gs
add
push
loopne
add
bound
xchg
sub
and
fisubl
je
cmpl
add
dec
outsl
imul
add
push
xchg
mov
and
insl
dec
cmp
scas
test
jg
xor
inc
push
or
ds
icebp
aaa
int3
scas
aas
mov
shlb
mov
xor
cmp
gs
nop
insl
adc
and
adc
xor
sub
daa
xchg
std
add
icebp
jbe
daa
repnz
add
xchg
mov
sub
sbb
insl
jo
testb
arpl
mov
xchg
xor
add
mov
pop
adc
ror
loopne
outsb
aam
out
mov
and
imul
icebp
dec
jb
ja
stos
bound
sub
xor
shl
ret
sti
lds
call
inc
mov
xor
mov
add
inc
or
xor
insl
add
es
test
mov
mov
jo
inc
cmp
dec
push
or
or
daa
or
pop
inc
aad
nop
cmpsl
shll
test
aam
cmpl
inc
lea
sahf
fldenv
inc
inc
dec
mov
rcl
loopne
add
add
test
mov
fs
jbe
push
cmp
add
stos
pusha
gs
test
and
xor
jno
xor
subl
out
loop
xor
push
fildll
add
cmpsl
in
pop
test
ljmp
repz
add
inc
out
in
xor
ficoms
and
fisttps
mov
loop
mov
sub
pcmpgtw
popl
or
and
sbb
mov
xchg
add
sbb
rcrl
add
xchg
mov
lcall
jne
aam
lds
gs
add
xor
jp
adc
pop
pop
rcrl
scas
jno
fimuls
cmp
in
fs
mov
int
xor
jp
movhps
sub
gs
stos
add
dec
mov
mov
les
and
inc
ret
add
push
loope
stos
jbe
add
mov
pop
mov
iret
sub
inc
add
enter
mov
hlt
pop
outsl
insb
aas
mov
mov
add
xor
pop
cmp
pop
jae
push
pushf
pop
mov
pop
sbb
add
or
mov
data16
mov
add
leave
adc
aad
lahf
add
push
out
sbb
inc
rolb
sub
fldenv
xchg
jmp
and
sbb
outsb
lds
pop
stc
insb
iret
leave
mov
mov
aas
andl
cmp
jg
call
lock
pop
cmc
lcall
insl
push
ret
mov
lods
mov
cmc
cmp
addl
mov
push
jp
sti
test
pop
fs
push
imulb
jmp
cs
fcomps
lods
mov
mov
cli
mov
loop
push
fcomps
or
ror
bound
rcrb
les
mov
and
sub
lods
jo
adc
and
pushl
xchg
sub
not
test
pop
subl
mov
insb
mov
ficompl
lods
mov
sbbb
ja
pushf
daa
add
lret
xchg
sbb
inc
adc
mov
inc
or
xor
outsl
jb
mov
mov
inc
pop
push
and
aam
daa
arpl
sbb
pop
pop
sbb
loopne
mulb
and
add
hlt
test
pop
mov
test
mov
adc
sti
dec
icebp
subb
lcall
and
sbb
jp
pop
jns
lcall
in
xor
inc
fldl
data16
add
jo
jle
mov
jmp
adc
and
in
mov
cmpsb
or
roll
test
out
xlat
push
ljmp
lds
sbb
mov
dec
dec
lcall
xor
or
xor
ficoml
xlat
or
cmp
repnz
add
jo
pop
gs
sub
add
sbb
mov
sbb
cmp
das
out
gs
mov
adc
and
out
js
mov
loopne
push
popf
or
mov
push
mov
test
in
inc
stos
aad
in
sbbb
cld
shlb
cmp
dec
inc
mov
jge
sub
add
or
dec
dec
or
cld
imull
sti
xor
cmp
js,pt
jle
add
inc
add
sbb
pop
nop
stc
mov
adc
adc
add
btsl
xor
xchg
sub
cmp
xchg
jo
cmp
xor
test
and
xor
cmp
addr16
and
push
lret
pop
cltd
fiadds
jno
jp
roll
push
aaa
or
imul
push
inc
xchg
ja
cs
sub
cmpsb
ret
add
xchg
and
xor
mov
loop
popf
divb
aam
sbb
cld
pop
fldl
data16
les
add
mov
push
je
cmpsl
shlb
iret
gs
mov
cli
rorl
and
cmp
add
lea
out
bound
cmp
pop
add
negl
lods
imul
pop
and
xchg
add
xchg
pushf
lahf
mov
shll
sub
cmp
mov
mov
lock
mov
xchg
dec
add
lods
xchg
pop
movsb
add
fnstenv
roll
sub
or
or
adc
xchg
xor
ss
mov
ds
sub
xor
addl
test
out
movl
mov
roll
dec
cld
push
cmp
inc
mov
xor
lahf
adc
mov
mov
mov
and
mov
add
mov
mov
and
mov
mov
and
outsl
scas
push
add
aaa
mov
leave
subl
dec
mov
push
ret
lock
pop
xlat
mov
jge
notb
cli
scas
adc
inc
mov
fmuls
cmpsl
or
jno
pop
xor
and
loop
mov
jge
add
add
add
lea
cmp
add
mov
mov
andl
sbb
cmp
add
add
dec
and
jp
cmp
data16
shlb
call
inc
mov
inc
mov
jp
fcomps
jns
call
addr16
sbb
mov
xor
inc
sbb
push
adc
jecxz
stos
cmp
popf
mov
mov
push
aaa
mov
rep
add
lods
out
pop
inc
in
mov
dec
pop
push
js
and
loopne
dec
mov
pop
clc
jae
cmp
cmpl
pop
inc
adc
mov
adc
push
and
sub
pop
pop
and
jae
nop
aam
shlb
xor
xchg
lods
aaa
cmp
inc
sbb
aad
ljmp
add
mov
stos
fstpt
sahf
jb
jle
adcl
mov
jae
xor
fs
adc
shrb
jae
jns
and
and
add
add
loopne
sub
in
xchg
mov
ret
sahf
xchg
pushf
mov
outsl
addr16
jl
adc
dec
mov
mov
xchg
sub
pushf
jle
in
jnp
sbb
in
pop
inc
xor
adc
pop
icebp
cmp
mov
mov
xor
arpl
cmpsl
push
inc
mov
out
ss
subb
add
mov
stos
fdivrs
or
add
mov
jae
addb
int
jecxz
in
cmpl
sub
add
sbb
inc
dec
cmpsb
jle
sarl
add
push
or
icebp
push
loopne
mov
cli
add
clc
cmc
push
add
mov
mov
das
arpl
mov
inc
cwtl
dec
sbb
and
out
or
hlt
adc
cmp
stos
outsl
es
cmp
dec
mov
push
les
add
insb
mov
add
negl
loop
insb
sub
add
mov
dec
vpackuswb
scas
sbb
rclb
es
cmp
fisubrs
add
mov
es
jno
iret
and
out
dec
xor
xor
fldcw
adc
sarl
lds
incl
add
xchg
push
xchg
add
pop
outsb
data16
mov
add
jl
lahf
outsl
add
sbb
arpl
push
rclb
mov
sbb
mov
dec
mov
xor
push
cmp
mov
and
test
mov
mov
mov
lds
cmp
clc
add
shl
pusha
push
inc
push
sbb
jb
lcall
enter
xchg
and
push
add
imul
jle
rolb
adc
out
push
fs
add
mov
xchg
jg
rcrb
inc
sub
inc
outsl
add
mov
inc
sub
cmpsl
dec
ret
adc
xor
push
xchg
flds
stos
cmp
cmp
ret
lods
std
ljmp
and
popa
addr16
roll
or
negb
cmp
add
mov
dec
subb
repnz
pop
test
xor
sbb
pop
mov
pushf
sarb
aaa
pop
xchg
movsl
mov
rol
ds
sub
mov
xchg
jge
sbb
mov
jp
mov
in
lds
daa
pop
inc
arpl
dec
cltd
inc
fdivrl
jns
pop
test
inc
ljmp
lahf
mov
cmc
push
dec
xchg
fisttpll
fcom
clc
ljmp
leave
add
xor
testb
mov
xor
out
sub
movsl
imul
sbb
int3
aaa
jg
add
adc
insb
add
sub
add
or
sbb
add
xor
cs
imul
icebp
das
testb
into
inc
icebp
out
add
aad
mov
sbb
and
lret
hlt
jbe
out
lods
sub
setbe
inc
dec
adc
add
add
out
nop
pop
cltd
cli
add
das
outsb
enter
out
mov
imul
add
lods
pop
cmp
inc
sub
inc
mov
daa
xchg
add
cmp
stos
mov
cmp
add
icebp
mov
sbb
mov
movb
add
add
and
xlat
std
dec
inc
das
sbb
cmp
test
push
in
inc
cltd
pop
cmpb
inc
cmp
hlt
push
nop
jg
shrb
pop
and
add
jle
pop
add
ds
mov
mov
cmp
mov
les
mov
mov
add
std
out
daa
imul
es
mov
add
xor
push
jmp
xor
mov
test
jg
in
cmp
aas
das
sbbl
gs
xchg
cmpsl
movsb
jl
add
push
jmp
mov
or
in
rcrb
dec
xchg
push
and
repnz
pushf
xchg
jns
push
mov
leave
aaa
push
sbb
add
lock
ret
cltd
mov
cmp
mov
xchg
mov
std
adc
cwtl
in
and
lods
jmp
mov
cmp
xor
stc
pop
roll
pop
sub
add
pop
loop
mov
jl
xor
or
add
je
testl
sub
ds
in
push
push
or
sub
insb
mov
movsb
in
in
dec
es
push
mov
push
mov
adc
mov
clc
ss
lret
jae
inc
cmp
test
gs
stos
scas
xor
mov
adc
inc
jl
outsl
loop
xchg
mov
incl
jl
fistpl
add
hlt
subl
xor
out
test
sbb
mov
dec
paddw
jg
pop
xchg
adc
sbb
add
arpl
js
jge
adc
mov
mov
xor
push
cmp
add
inc
push
sbb
scas
sbb
ret
popf
cs
out
orl
cmp
mov
sbb
mov
insb
stos
xchg
mov
inc
xlat
inc
incl
nop
dec
mov
xor
fistps
add
mov
cmc
dec
lock
add
nop
lahf
add
mov
mov
mov
ret
jno
xor
and
popf
cmpsb
roll
pop
jnp
scas
jns
int3
sbb
jp
or
jmp
sbb
dec
mov
loopne
cmpsb
xchg
ret
mov
inc
and
ret
and
and
rcrb
xlat
scas
andb
mov
xchg
push
call
jle
sub
push
ret
mov
jmp
cltd
daa
mov
jmp
pop
cmp
aad
pop
int3
add
inc
xchg
scas
lods
sbb
inc
sbb
pop
scas
out
cmp
cmp
cmp
sub
cli
and
pushf
pop
lods
and
xchg
int3
ljmp
insl
sbb
dec
mov
dec
and
pop
loop
into
mov
outsb
je
stos
je
and
lret
pop
sub
add
in
and
out
dec
xor
call
xor
stos
cli
sub
fcomps
push
and
in
jnp
xor
out
inc
into
adc
mov
and
or
xchg
arpl
das
jb
aad
adc
ret
mov
jl
aas
jo
fsub
adc
mov
and
daa
sub
xchg
xchg
ret
sbb
shrb
loopne
mov
cltd
mov
adc
inc
sub
push
inc
ret
jge
fs
inc
xor
loope
mov
mov
sub
jge
mov
ds
rcr
inc
inc
xor
out
xor
pop
push
pop
pop
add
stc
lea
or
jmp
add
add
inc
fimuls
mov
xor
adc
jbe
add
dec
outsb
mov
adc
imul
in
add
orl
mov
insl
insb
jmp
stos
fstps
ja
pusha
test
cmpsl
add
arpl
es
pop
cwtl
cmp
es
mov
sub
adc
add
das
scas
lods
add
jecxz
add
xchg
or
push
ljmp
sahf
rolb
subb
rcll
testb
add
sub
data16
adc
xchg
fnstsw
jae
stos
xchg
xchg
inc
lds
aad
push
in
inc
loop
call
jmp
sarb
add
rcll
icebp
adcb
xchg
imulb
inc
into
jp
mov
pop
cli
lahf
mov
mov
and
in
mov
rcll
mov
mov
xchg
and
add
cmp
rolb
mov
dec
lcallw
aam
mov
or
mov
pop
fwait
jno
cli
pusha
enter
xchg
sbb
sub
add
xchg
mov
mov
inc
mov
std
rcrl
lods
pop
sbb
xor
lock
xchg
inc
or
lea
cmp
sarb
sub
pop
mov
lahf
rcll
adc
daa
aas
xor
int3
and
cmp
aam
sub
cmp
xor
push
cmpl
int
mov
inc
cmp
insb
add
lds
jg
mov
sbb
lret
or
inc
xchg
and
push
aaa
in
or
xor
sbb
cmpsl
and
mov
and
pop
pop
test
test
pop
mov
test
aaa
cli
rcrb
cmp
dec
ja
adc
sbb
call
add
cmp
nop
sti
xorl
mov
into
pop
add
add
scas
icebp
mov
xchg
jg
push
cmp
and
in
mov
clc
dec
dec
add
rcl
cmc
pop
add
mov
add
fsubr
add
test
int
add
negb
mov
loop
or
sahf
push
movsb
outsl
and
fptan
das
loopne
add
hlt
lock
sbb
push
sub
fisubrl
test
loopne
aam
adc
std
insl
roll
jl
fistpl
xor
dec
push
cmp
or
jnp
push
pop
testb
inc
imull
bound
lret
inc
pop
add
pop
add
cmpsl
pop
xchg
lods
xor
cmp
jg
dec
jns
aad
pop
sbb
xchg
add
and
outsl
movsl
mov
add
mov
add
pop
cmpsl
add
rolb
mov
or
dec
aam
and
mov
call
inc
and
xchg
aaa
cld
xor
xor
and
rcll
mov
pop
and
jnp
jl
stos
dec
pop
fucom
addl
mov
dec
mov
mov
popa
lahf
scas
and
add
and
mov
leave
mov
pop
and
or
ret
dec
mov
cmp
xor
dec
inc
lcall
and
rorl
pop
repz
dec
mov
and
es
ret
pcmpeqd
add
jge
or
stos
pop
and
pop
sub
fdivrl
or
add
mov
call
adc
cmp
push
sub
add
jae
jmp
or
pushf
xchg
add
cmp
cmpsl
mov
jmp
dec
push
inc
or
add
mov
fcomps
push
fsub
add
out
dec
js
into
add
fstl
das
test
aaa
add
xchg
shl
shrl
jp
aam
repnz
mov
stos
movsb
fs
adc
mov
inc
sbbl
in
xchg
stos
cmp
idivl
xor
adc
add
inc
jp
std
add
mov
ss
movsl
adc
xchg
jbe
iret
or
fsubr
nop
inc
es
mov
das
mov
mov
call
rorb
ss
mov
push
mov
pop
mov
jb
xor
stos
add
imul
rcrb
pushf
leave
sub
mov
add
pop
movsb
mov
les
ljmp
std
jg
repnz
lods
add
jp
xor
sbb
dec
stc
inc
add
out
adc
ljmp
inc
jo
pop
add
shl
mov
xchg
add
xor
cwtl
maxps
add
stos
imul
adc
xchg
in
cmp
push
add
test
lods
add
or
push
push
addb
repz
lret
cmpl
subl
inc
lcall
fwait
outsb
xor
push
xchg
mov
add
sub
add
movsb
jp
stos
xchg
shlb
not
and
add
push
or
mov
arpl
dec
aam
fildl
testb
nop
lods
pop
and
mov
xor
add
test
sub
push
add
in
xchg
fidivs
shlb
and
and
repz
addb
scas
out
push
xchg
jmp
xor
add
inc
xchg
cmpl
xchg
pop
adc
fiadds
mov
mov
pop
inc
adc
ss
add
mov
shlb
shr
dec
fsts
mov
pop
cli
or
push
or
inc
mov
jo
sbb
add
movsl
pop
xor
ja
inc
push
jnp
loope
pop
rcrb
add
das
or
les
shl
popf
aas
cli
add
mov
mov
pop
pop
imul
dec
rcrb
pop
es
add
add
push
ret
sbb
add
adc
jne
mov
shrl
add
lock
sub
imul
sub
add
adc
adc
gs
jbe
pop
test
jp
ss
test
cwtl
pop
out
testl
sbb
jbe
jmp
xlat
xchg
dec
loope
jns
shlb
xchg
mov
or
inc
fidivrl
fmull
outsb
xor
sub
push
stc
lds
jmp
mov
mov
pop
xchg
and
pop
rcll
push
lahf
xor
adc
nop
aas
add
mov
xor
xchg
xor
rolb
lea
xorb
repz
ss
sbb
push
addr16
xchg
push
shll
mov
mov
push
aam
subl
jmp
inc
xor
cmova
or
cmp
add
sbb
movsb
add
xor
nop
shlb
push
add
jb
sub
orb
out
jno
xchg
add
sbb
xchg
adc
addl
and
or
fcmovnbe
add
lret
sarb
mov
adc
jmp
push
ret
mov
push
adc
dec
popa
add
insb
mov
faddl
xor
sub
sub
add
cmp
scas
fnsave
mov
lea
ret
mov
mov
cmc
sbb
sub
mov
add
pop
leave
pop
inc
pop
push
xchg
sbb
int
add
out
jl
mov
pusha
add
push
testb
in
stc
sbb
or
jb
cmpsl
pusha
in
cli
aam
mov
pop
lret
and
sub
arpl
out
movntps
push
and
shll
cmp
subb
nop
cmpsl
push
push
test
add
aaa
xchg
inc
add
bound
imull
shlb
cmp
and
mov
add
push
mov
aas
jnp
inc
sub
mov
xchg
xchg
daa
cmp
sbb
xor
rcrb
cmp
ret
pop
jle
mov
jmp
cmp
mov
cmp
add
imul
gs
out
cli
cmp
pop
and
lds
inc
pop
sub
push
out
push
push
and
loop
in
jecxz
xor
cld
lret
xor
jle
dec
bound
adc
iret
mov
cwtl
mov
std
clc
inc
add
int
jae
sub
jae
pusha
aam
adc
std
dec
adcl
xor
xor
loop
out
addb
das
jp
sbb
into
jmp
add
mov
imulb
cs
mov
add
inc
movsl
and
lahf
mov
adc
xor
push
sub
inc
mov
xchg
add
cld
push
stos
clc
jns
std
adc
push
xor
sbb
fnclex
and
pop
sbb
pop
out
xor
sub
pop
lcall
mov
fldt
dec
data16
inc
fstps
xor
inc
ffreep
ja
xchg
sub
add
xor
int
lret
push
mov
jg
repnz
sbb
mov
add
lods
xor
aas
xchg
push
push
inc
xchg
popf
cwtl
add
loop
into
adc
mov
pop
add
add
pop
or
add
cs
cmp
aam
ret
shll
add
mov
push
add
int3
icebp
mov
decl
add
and
sub
pop
pusha
out
push
xor
repz
mov
mov
jne
add
dec
xchg
mov
xchg
inc
cmpsl
and
jl
push
dec
mov
cli
sti
sbb
add
jecxz
inc
add
mov
xchg
add
outsb
and
inc
xorl
stos
cmp
push
mov
mov
insb
pop
mov
rcrl
in
mov
cmp
testb
popa
push
mov
popa
pop
pop
test
add
jne
imul
js
iret
mov
inc
xchg
aam
cmp
dec
fadds
stos
sarl
pop
pop
icebp
shrb
loop
sti
jl
mov
mov
pop
sahf
or
test
roll
xchg
inc
dec
adc
sbb
and
sub
mov
mov
inc
jg
hlt
sub
fsubr
add
out
scas
sub
lcall
and
adc
data16
orl
movsl
insl
aam
xor
jp
popf
hlt
lcall
sub
or
and
sub
push
mov
popf
ret
movsl
add
add
fnsave
cld
sub
push
add
vmread
xor
dec
mov
movb
loopne
shrl
mov
mov
pushf
pop
sub
daa
leave
or
jae
dec
jne
jp
jns
lock
xor
shr
add
pop
int3
add
jo
or
daa
ret
xor
add
addr16
and
mov
pop
repz
and
cwtl
push
mov
leave
adc
repz
sbb
inc
or
cmp
mov
dec
xchg
dec
mov
jbe
gs
add
mov
add
sbbb
cmp
stos
les
pushf
mov
daa
add
mov
test
mov
je
dec
clc
or
jmp
in
popf
lret
stos
inc
outsb
xorl
insl
sahf
xor
sub
dec
int3
clc
xor
jnp
and
mov
sbb
lods
mov
inc
scas
adc
add
sbb
sbb
add
pusha
insl
mov
pop
out
aam
mov
add
push
push
dec
pop
xor
add
fdivrl
negl
lock
jmp
shrb
faddl
ja
int3
xor
aad
or
ljmp
imul
xchg
out
mov
sbb
pop
push
fwait
subl
sti
add
iret
and
inc
test
mov
testl
dec
into
mov
aam
lret
xchg
out
rcl
xchg
ficomps
cmp
lahf
iret
sub
dec
pop
fbstp
je
jns
test
xor
dec
fisttpl
add
xor
cmp
xchg
cli
xor
fstps
fucom
in
push
hlt
arpl
mov
inc
movb
xor
fadds
jmp
sbb
and
cmc
ds
imul
aaa
icebp
rclb
arpl
jno
cmp
andb
pushf
cmp
xor
jns
inc
sarb
pop
pop
cwtl
loope
int
popl
lods
pop
fidivrl
xor
outsb
adc
inc
outsl
pop
sti
lea
add
jg
aad
push
push
or
addb
sahf
roll
cmpl
mov
push
sub
int3
orb
jle
sub
xlat
adc
sbb
sub
aad
repnz
add
cmp
push
mov
xchg
push
fimuls
ret
push
or
test
outsl
add
sbbb
cmc
loopne
add
decl
mov
lds
aad
cmp
inc
xchg
sahf
pop
inc
rorb
ss
icebp
cli
movsb
add
je
sets
pop
xor
push
add
call
jmp
xchg
sub
pop
sbb
jae
xor
or
add
into
cmp
mov
mov
adcb
add
lods
ret
mov
aam
xor
cmpsl
cwtl
push
cmp
xchg
sbb
or
pop
ljmp
hlt
and
cmp
pop
dec
dec
int
ret
and
mov
inc
imul
cmp
and
mov
pop
push
cmpsb
test
dec
add
lahf
shll
pop
xchg
sub
or
cmp
xor
add
xchg
jg
fstp
int3
add
cmp
pop
mov
cld
pop
ffreep
lret
ret
ds
pop
cmc
rcll
dec
add
xor
cmp
cmp
sub
mov
test
stc
push
sbb
xchg
mov
push
das
ljmp
lods
bound
add
and
mov
test
pop
xchg
les
arpl
inc
popl
xchg
add
adc
sub
mov
pop
shr
add
das
pushf
sbb
xlat
add
test
fs
pop
jnp
jecxz
enter
and
add
arpl
roll
xor
cmp
and
add
idiv
rorb
xor
jae
mov
lcall
pop
xchg
ret
jge
imul
test
add
jl
stc
insl
lret
inc
call
mov
push
dec
or
inc
xorl
pop
cld
adc
add
loope
inc
inc
cmpl
insb
iret
add
jne
xchg
add
push
cld
daa
inc
out
xchg
jb
sbb
ds
pop
sar
roll
cwtl
push
jbe
add
ficoml
movsl
or
inc
cli
fwait
add
and
adc
and
xor
inc
std
inc
dec
test
cltd
mov
or
orb
xor
mov
inc
or
mov
and
test
and
xchg
fs
popa
aas
ja
inc
push
fmull
out
leave
out
stc
mov
mov
les
jl
fdivs
inc
sub
mov
mov
dec
pslld
sbb
jns
or
and
mov
adc
adc
sub
repnz
xlat
adc
imul
mov
xor
inc
or
js
add
out
dec
xchg
push
push
inc
test
mov
pop
push
xchg
or
aaa
movl
fisubrs
mov
call
add
xchg
sbb
add
mov
push
pushl
add
adc
jne
dec
mov
mov
jae
cmp
call
repnz
add
lretw
add
sbb
or
mov
add
ret
inc
loop
jbe
mov
xor
out
int
jb
inc
insb
addb
and
pushf
inc
lods
add
push
pop
xor
addr16
iret
jmp
dec
or
pop
scas
and
je
in
leave
add
inc
imul
rcrb
add
add
mov
popf
fnsave
cld
mov
std
insb
push
outsb
imul
add
test
int3
lock
dec
and
and
sbb
jo
movsl
or
aad
cld
push
sub
add
pop
fiaddl
inc
add
mov
jg
jo
movsb
mov
and
jmp
mov
int
add
or
dec
iret
sbb
cmp
add
rolb
mov
add
add
movsl
cmpsb
inc
or
in
lods
dec
push
sbb
rcll
push
cmp
int
add
fwait
out
or
pop
inc
sub
jg
ss
dec
fcompl
frstor
mov
lcall
mov
imul
nop
fwait
and
aad
add
push
push
inc
cmp
ds
add
pusha
push
incl
xor
and
add
aas
sbb
std
xchg
lcall
lret
mov
push
outsl
mov
and
inc
sbb
and
fcoms
pushf
insb
pop
and
leave
cmpsl
addr16
cmp
jo
loope
xor
mov
jbe
call
pop
aaa
testb
outsl
jo
and
xchg
rolb
repz
xchg
add
cld
or
add
movsl
pop
andl
mulb
popf
pop
mov
test
fadds
inc
shrb
xchg
movsb
aaa
add
xchg
pop
jp
or
popf
pop
int
mov
cmp
incb
or
fmull
add
xchg
mov
pop
je
idivb
push
sahf
movl
scas
fcoml
imul
pushf
sahf
cltd
imul
add
fdecstp
sub
sbb
cmp
lds
shrl
sub
cmc
int3
sbb
dec
sbb
ja
inc
imul
xchg
es
xor
dec
cltd
nop
add
adc
sbb
sarb
hlt
cmp
js
popa
ss
ret
outsb
lock
out
mov
add
mov
sahf
sbb
mov
push
xchg
cmp
arpl
xchg
xchg
rorb
daa
sub
and
jb
add
pop
jo
xchg
idivb
add
jecxz
push
adc
ja
and
lret
or
add
pop
push
mov
or
shrl
mov
int3
outsl
aas
popf
jne
fs
xchg
cmp
mov
loope
jecxz
sti
fiadds
dec
inc
scas
mov
dec
gs
subl
test
jbe
and
add
cmc
inc
inc
jg
stos
add
mov
sbb
dec
inc
jmp
mov
pop
int
es
xor
push
iret
repnz
pop
xchg
or
cmp
shrb
loopne,pn
cmp
mov
mov
mov
mov
pop
sbb
push
add
rcll
or
dec
jp
pop
adc
jo
xchg
stc
add
dec
outsl
int
jae
mov
jnp
je
pop
ret
push
jecxz
mov
sub
sub
stos
mov
cmc
sub
add
and
fmuls
xchg
shlb
or
mov
cwtl
mov
add
jmp
lcall
mov
sbb
int3
arpl
cld
add
fwait
sub
sub
adc
imul
cli
dec
add
mov
mov
in
es
adc
push
lret
dec
addb
leave
mov
popf
in
jg
cmp
add
jbe
dec
mov
xor
mov
lea
adc
add
bound
mov
out
add
fwait
mov
add
nop
adc
add
and
dec
pop
xor
add
pop
pop
addr16
imul
out
popa
test
ret
cmpsb
flds
test
sbb
sbb
mov
xchg
add
xor
dec
cmpps
std
push
loop
add
iret
lock
mov
jnp
in
int3
cmp
mov
push
pop
xchg
pop
cmpsl
add
scas
jae
dec
iret
and
fs
xor
lods
push
jecxz
lea
ds
pop
movsb
jge
loope
sub
stc
testb
test
out
out
push
je
cmc
xchg
sbb
or
movsl
add
xchg
xlat
cmp
cmp
sub
sbb
jb
push
or
cli
push
add
popf
sti
adc
pmulhw
add
and
shlb
and
add
pop
fiadds
pop
insl
xchg
mov
add
mov
lcall
xor
jae
and
and
add
fwait
dec
out
stos
and
scas
shrb
adc
xorl
pop
mov
es
sbb
ret
nop
daa
sbb
push
addr16
xor
xchg
and
add
xchg
add
mov
push
daa
sbb
xor
dec
sbb
loope
js
sbb
clc
call
mov
and
inc
arpl
push
mov
imul
stc
jle
dec
sbbl
cmp
std
xchg
xor
sub
inc
mov
cmp
adc
xor
inc
in
fwait
dec
cld
aas
mov
xor
jo
insb
in
outsl
add
mov
outsl
and
cmc
push
jp
and
out
cld
sbb
inc
leave
cmpsb
or
movsb
in
add
xor
inc
int
aad
add
inc
fisubrs
inc
stos
pusha
and
and
lret
bound
aaa
mov
and
and
push
fdivrs
add
add
sbb
fildll
mov
or
pop
adc
mov
fildl
sbb
add
scas
inc
negl
or
add
call
push
int3
ret
inc
pop
lods
lret
push
xor
add
jo
icebp
adc
xor
xor
and
mov
sbb
xor
sbb
movsl
xchg
cmp
adc
aam
cld
xorb
jle
shlb
sub
arpl
stos
pop
sbb
movsb
inc
mov
mov
addb
mov
cmp
cmp
sbb
fs
lret
push
rcrb
out
or
add
sbb
lret
mov
ss
mov
sbb
sub
push
cs
sbb
test
xchg
push
nop
add
dec
mov
mov
cmpl
imul
les
repnz
push
and
mov
outsl
inc
xlat
cmc
jnp
jb
in
ds
add
or
data16
and
xchg
test
adc
sub
in
push
sbb
or
cmpsl
fildll
adc
aas
rcrl
mov
loope
jne
adc
adc
and
roll
fs
dec
subl
dec
mov
mov
jbe
movl
test
jg
pop
xor
and
pop
aam
add
xchg
ss
sbb
jmp
cmp
add
sub
add
dec
test
add
add
in
jb
mov
std
imul
xor
pop
inc
test
xlat
pop
sbb
mov
fwait
xor
aas
add
xchg
subb
sahf
shll
fildll
sbb
lds
movsb
out
adc
mov
es
jg
add
imul
inc
mov
dec
xor
dec
ss
movsl
mov
aas
add
mov
mov
sbb
popf
fldt
bound
shll
les
xchg
cwtl
mov
in
push
outsl
sbb
dec
fldl
xchg
add
inc
and
add
mov
pop
and
jns
cmp
pop
nop
loop
xor
add
cmpsb
xchg
xor
lea
push
xor
adc
in
push
stos
push
inc
fcoms
lds
das
dec
inc
mov
fldl
pusha
pop
mov
sbbl
dec
adc
cmp
mov
add
sbb
cwtl
sbb
push
shrb
jecxz
cmp
jg
cmp
jno
mov
mov
shlb
inc
lods
clc
adc
sbb
mov
repnz
aad
push
add
sub
mov
add
fs
jmp
ljmp
or
aaa
pop
ret
frstor
fmull
and
xor
sbb
pop
insb
xchg
movsb
das
aad
mov
jne,pn
jo
add
xchg
push
lds
and
dec
out
movsb
inc
rolb
ret
push
fistl
add
cmpsb
mov
rcl
sbb
mov
xor
out
xor
fsubrl
inc
xchg
jp
add
pop
pop
and
mov
stos
add
es
divb
sub
add
in
outsb
into
ret
pop
mov
fdivrl
or
jl
mov
add
repnz
loope
lcall
mov
bound
fdivrs
rorb
cs
jg
add
inc
sub
pop
xor
add
push
imul
dec
in
inc
int3
js
pop
sbb
push
sbb
mov
lods
add
cmp
mov
push
test
popa
das
sub
push
pop
jl
and
dec
enter
insl
add
insb
arpl
orl
mov
push
pop
pop
ljmp
jecxz
mov
scas
mov
andb
jne
jb
jg
mov
cmpsb
arpl
inc
xor
add
jge
pushf
add
and
inc
lret
add
push
dec
add
inc
fistpl
lock
jmp
aad
pop
xchg
push
rcr
cmp
or
cmpsl
fwait
adc
push
cli
mov
sub
popa
adc
int
push
dec
in
pop
pop
add
push
je,pt
pop
mov
ret
sub
fstps
xchg
mov
test
mov
add
outsl
mov
ljmp
dec
inc
data16
rcr
stos
mov
and
or
stc
rcrb
ficoml
loop
out
fwait
add
and
mov
mov
dec
stos
ds
dec
gs
test
movsb
mov
int3
jecxz
addl
xor
mov
jmp
sti
inc
lock
int3
cmpsl
loop
inc
jmp
repz
cmpsb
add
inc
add
test
add
push
pop
push
add
mov
adcl
xor
and
popf
xor
rcl
cmp
add
add
mov
lock
add
jg
pop
sbb
jle
add
push
cld
and
add
and
stos
cs
out
aaa
mov
add
add
mov
outsb
daa
sub
and
mov
or
jnp
popf
and
iret
dec
inc
cwtl
roll
cmpsb
mov
mov
pop
dec
lea
adc
cmpsl
mov
jnp
into
add
push
mov
inc
cmp
mov
mov
outsb
fld
inc
es
or
inc
loope
xor
sub
add
stos
neg
lods
add
addr16
insb
sbb
jecxz
push
in
sarb
enter
jg
and
cmpsl
fbstp
scas
loope
add
mov
push
rorl
sbb
push
repnz
push
jmp
shll
ljmp
movsb
test
int
int3
arpl
adc
add
daa
push
mov
sub
and
dec
inc
adc
add
add
insl
pusha
and
pop
jo
outsl
mov
ja
or
test
mov
jo
sbb
xor
push
add
jne
cmpl
int
and
add
arpl
xchg
add
fiadds
popf
add
mov
pop
sbb
add
jbe
mov
mov
xor
inc
hlt
push
mov
aaa
fidivrl
stc
push
xor
xchg
xor
repnz
addl
xchg
and
mov
add
and
sub
add
fidivl
sub
gs
push
add
adc
jp
cmc
lcall
neg
dec
and
mov
inc
adc
xor
jae
xor
mov
movsb
mov
daa
push
cli
or
add
mov
cs
shll
inc
fcompl
push
js
inc
push
add
or
lods
lret
mov
popf
mov
jne
add
jge
lahf
pop
cmp
jno
movsb
add
xchg
mov
pop
xor
cmp
fcomi
and
lods
insl
mov
ror
cltd
add
push
lret
into
adc
xchg
xchg
xor
daa
xor
test
jnp
lret
and
xor
mov
cmp
rcrl
sub
inc
dec
jo
inc
add
adc
jmp
scas
jmp
loope
dec
push
sbb
data16
cmp
cmp
mov
popf
daa
mov
rcrl
iret
sbb
aad
str
test
sbb
pop
daa
aam
int3
jbe
addb
jns
incb
inc
sub
mov
or
mov
add
out
mov
pop
sub
jg
xor
inc
pop
jo
rolb
jns
dec
out
push
add
lcall
dec
sub
mov
adc
sub
ljmp
out
cmp
roll
add
out
addw
xchg
mov
xor
add
cmp
mov
fiadds
outsl
aam
mov
aas
ja
mov
loope
mov
out
and
dec
mov
pop
add
rol
mov
mov
and
mov
add
mov
call
adc
js
push
xor
into
mov
sbb
lods
rol
add
inc
xor
adc
xor
pop
cmpsl
lds
xchg
mov
in
daa
add
push
movsl
sbb
subw
adc
add
sub
movsb
mov
mov
xchg
mov
adc
xor
dec
jl
xor
inc
sub
sbb
in
es
cs
push
cmovge
add
pushf
ror
jnp
outsl
adc
inc
mov
sbb
sbb
add
or
or
aad
add
push
pop
rolb
pop
add
xor
mov
mov
cmp
and
fiadds
jno
cmp
insl
mov
adc
stos
push
call
mov
add
mov
insb
sub
xchg
inc
outsb
aas
push
add
push
add
jnp
dec
xor
arpl
adc
cmc
jns
add
push
jne
mov
cld
add
jb
or
scas
and
dec
xchg
jmp
dec
mov
jnp
out
ss
dec
repnz
imull
aaa
xchg
pop
call
int
pop
js
jle
pop
inc
sub
xor
inc
add
jl
sbb
mov
push
push
lds
and
dec
cmp
mov
dec
lahf
push
jle
dec
rol
sub
jns
stc
xchg
test
negb
mov
out
rorb
lret
fstpl
pop
sbb
addl
mov
cwtl
addr16
pushf
mov
inc
jmp
je
outsl
fs
cmp
cmp
ficoml
sbb
mov
xchg
or
jp
cld
das
sub
xor
or
lcall
call
add
xchg
mov
add
leave
sbb
inc
in
xor
pop
mov
lock
mov
imul
lods
add
mov
push
fisttpl
or
dec
add
sub
into
add
test
add
and
test
loop
cmp
inc
rorl
sub
jne
and
movsl
and
scas
sub
shll
call
rcr
movsl
jb
arpl
hlt
inc
xor
push
adc
aam
ss
loopne
inc
add
xor
nop
sub
insl
xchg
mov
and
les
not
movsb
lea
dec
jbe
test
lret
add
loope
mov
fsubrl
nop
out
xor
mov
pop
inc
jge
mov
jp
repnz
movsb
inc
bound
fstps
inc
jle
jmp
sbb
lock
ljmp
fildl
stos
std
dec
rol
xchg
and
cmp
add
mov
mov
inc
inc
sbb
mov
add
loop
xor
or
out
addr16
jle
push
fildll
mov
cli
mov
pop
sub
pop
push
xchg
cmp
outsb
ret
js
test
add
mov
jge
or
mov
cmpsb
test
inc
xor
jecxz
xor
pop
sbb
fs
in
mov
xor
add
or
cwtl
es
inc
dec
clc
outsb
imul
or
cld
rcrl
mov
or
cmp
shlb
leave
mov
orb
push
call
pop
xor
jl
inc
adc
sbb
jo
out
or
cmp
xlat
inc
inc
and
pop
into
inc
call
das
popf
sbb
dec
xorl
mov
imul
rolb
xlat
jmp
cmp
cld
sub
ss
test
in
xor
add
inc
mov
pop
test
roll
jne
movsb
sub
jne
je
ficomps
or
sarb
loope
xor
gs
add
pop
and
xor
or
add
dec
pop
rcll
stos
into
shll
xor
loopne
popf
ficoms
lods
in
push
push
lock
nop
add
mov
pop
add
inc
mov
cmp
add
test
ret
frstor
jge
ja
data16
cmp
and
add
lcall
add
popa
shlb
test
dec
sub
les
mov
add
sub
add
push
adc
lds
incl
add
test
es
mov
add
mov
data16
add
popf
pop
add
jae
and
ror
out
icebp
xor
cmp
insb
add
fisubrl
pushf
add
mov
ficoms
data16
pop
and
mov
repz
mov
add
aaa
in
mov
aad
cmp
sub
movsb
popf
push
jns
add
sbb
nop
ds
sub
jge
inc
xor
mov
call
jns
cmpsb
shlb
cmp
mov
and
out
in
notl
jg
inc
cmp
mov
mov
push
xchg
pusha
inc
movsb
jmp
repz
ret
rcrl
into
fstps
rol
mov
mov
ret
pop
inc
jns
addr16
and
mov
add
pop
mov
mov
push
push
ret
mov
xchg
cmc
and
scas
add
ja
xor
les
imul
das
loope
aaa
adc
pop
jno
ja
xchg
shrl
pop
bound
lahf
xchg
mov
adc
add
push
outsl
pop
into
iret
shll
dec
daa
inc
int
and
aas
add
fadds
push
add
dec
cmp
push
adc
mov
popf
lods
movsl
add
sahf
leave
popa
lahf
mov
and
xor
popl
add
sti
aad
fcmove
and
scas
shl
push
frstor
jnp
and
dec
jmp
sbb
mov
mov
sti
imul
les
sub
cmc
pop
pop
repnz
pushf
add
push
scas
mov
xchg
add
dec
addl
mov
sub
push
lar
xor
sub
mov
jecxz
fwait
sarl
add
inc
ret
mov
jmp
add
enter
aad
arpl
cld
cmp
mov
mov
dec
mov
dec
and
js
xor
rolb
sbbl
jns
call
push
aad
mov
repnz
add
pop
lods
test
sti
lods
aas
xchg
movsl
add
std
lock
aaa
mov
inc
xor
or
push
faddp
mov
movsl
xor
add
mov
xor
pop
sbb
dec
cs
adc
mov
scas
and
js
gs
inc
icebp
xlat
push
in
cli
jnp
stc
push
cwtl
daa
lret
cld
add
icebp
mov
mov
sarl
mov
in
lea
pop
adc
in
sbb
out
inc
cmp
xor
out
push
add
jo
add
inc
adc
aaa
bound
mov
fwait
fs
jmp
xor
int
ss
stos
fimuls
icebp
stc
sbb
mov
testb
sahf
jno
and
cmp
lahf
test
jae
add
rcll
xor
xlat
xor
or
loope
outsl
ss
and
out
stos
dec
add
xchg
xchg
inc
mov
cmpsb
lds
cmc
fiadds
and
and
testb
push
mov
jle
or
shl
fcmovne
mov
xchg
dec
or
sbb
and
aam
xor
push
mov
mov
cmp
add
mov
inc
push
out
push
add
add
sbb
fstpl
enter
xor
inc
in
sub
jge
jo
loopne
hlt
je
push
adc
xor
xchg
xchg
jnp
imul
dec
add
mov
mov
fld
je
repnz
xor
std
adc
cmp
push
mov
pop
mov
out
ds
dec
mov
sbb
aam
dec
fistl
int
popf
push
cmp
icebp
cmpsb
fcomip
add
out
sub
xor
or
or
pushf
jae
mov
cmp
push
enter
sbb
add
sahf
cs
inc
jnp
rolb
ds
jp
and
ret
dec
xchg
add
sub
lods
add
mov
add
sbb
int3
dec
aas
jg
or
fsubrs
xchg
jbe
mov
jl
pop
sub
mov
jge
push
jo
xchg
lods
js
cmp
or
incb
add
out
enter
daa
add
and
cmp
lret
ljmp
sub
inc
pop
xchg
inc
or
cld
shrl
jge
xor
xor
mov
mov
in
ss
or
ret
adc
and
repz
xor
movsl
inc
cmp
dec
pop
xor
jno
ret
or
push
repnz
sub
pop
add
pusha
and
jmp
xor
xlat
sub
shlb
sbb
add
ljmp
inc
imul
data16
shl
or
mov
xchg
hlt
mov
mov
add
out
sarb
int
add
aas
in
add
fcomps
push
or
pop
push
mov
pushf
je
xchg
add
jg
ljmp
lahf
pop
ret
loope
cmc
dec
sbb
pop
push
aam
pop
cmp
xor
push
xchg
or
popa
daa
lods
xlat
cmc
incl
jecxz
sarb
mov
mov
and
xor
add
pusha
rol
insb
insl
mov
enter
nop
sahf
frstor
jb
sbb
cmp
movsl
popa
daa
add
subl
fsts
sub
fcomip
adc
popa
into
ljmp
out
lods
mov
mov
in
pop
cmp
add
imul
pop
popf
test
frstor
icebp
cmp
or
repz
and
lahf
adc
lret
fsubl
push
cmp
cmc
add
mov
lea
loop
loope
aaa
pop
ret
aad
iret
and
mov
aas
mov
push
push
and
push
xor
add
inc
jo
jne
add
push
mov
add
insl
dec
rolb
mov
mov
jno
pop
outsb
mov
and
in
fs
stc
flds
inc
outsl
mov
ljmp
mov
or
xchg
gs
or
jmp
add
jnp
arpl
shll
push
bound
mov
mov
xor
sarl
sbb
out
mov
sbb
iret
scas
mov
lods
adc
iret
mov
dec
xchg
add
jae
add
insb
cmp
ret
sbb
jg
push
dec
cld
pop
jle
loop
dec
aaa
orb
adc
jae
and
cmp
jecxz,pt
pusha
dec
lret
vphsubdq
jp
pop
scas
xor
cmp
daa
cmpb
mov
ljmp
leave
inc
test
xchg
mov
xor
out
dec
stc
pop
mov
jp
sahf
lock
push
adc
out
mov
or
andl
push
dec
and
add
xchg
add
sub
or
out
sub
and
xchg
and
add
dec
lret
add
inc
xlat
inc
push
push
cmp
cmc
sbb
in
mov
rcll
cmp
pop
push
cmc
cmp
add
bound
xor
xor
sbb
lret
fistpll
mov
add
fcmovne
pop
and
inc
add
mov
outsb
mov
and
jp
inc
mov
cwtl
pop
test
shlb
sub
xor
dec
add
fdiv
xor
loopne
sbb
or
aad
push
inc
sub
repz
pop
movsl
lock
cs
pop
xchg
daa
call
sub
pusha
add
push
adc
out
stos
xchg
and
cmp
movsb
mov
js
shlb
and
maskmovq
testl
lcall
inc
jae
xchg
xchg
jle
and
cld
and
sub
cmp
sarb
mov
or
xchg
and
imull
iret
xor
mov
inc
data16
sub
or
sbb
jno
faddp
push
mov
jp
addb
and
inc
pop
adc
inc
push
scas
cmpsb
xchg
jp
movsb
nop
imul
arpl
pop
inc
or
nop
xor
fmuls
sbb
jno
test
imul
enter
aam
sub
jns
add
xchg
adc
jb
add
imul
sbb
pop
push
mov
sti
imul
or
testl
adc
or
push
outsb
jl
push
cmp
cmp
repnz
pusha
adc
fdiv
loope
inc
dec
jnp
lret
push
jmp
cmp
add
pop
call
dec
mov
and
lea
xchg
or
ret
pop
push
lcall
add
sbbb
inc
or
push
sub
repnz
cli
inc
neg
mov
adc
sbb
pop
add
fucomip
xchg
push
push
and
cltd
add
rcrl
mov
add
adc
mov
daa
inc
cmp
fnstsw
cmpl
push
shl
pop
and
jecxz
xchg
pop
je
add
cmp
xchg
aad
rcrl
xchg
push
sub
ss
add
out
mov
dec
mov
aaa
add
fnstcw
sbb
add
mov
insl
add
cwtl
fs
cmp
in
pop
pop
xor
xor
roll
lea
fisttpll
mov
sub
jbe
adc
sbb
dec
push
xchg
cmp
in
xor
xchg
sti
aad
rcrb
addb
into
out
mov
ficoms
add
add
cmp
xchg
mov
and
push
mov
add
adc
ljmp
pop
jb
pop
or
dec
add
sbb
mov
sbb
sub
add
dec
or
dec
rol
mov
push
loop
dec
cmp
sbb
jmp
mov
lock
cli
sti
add
je
adc
in
add
or
ljmp
cmp
jb
mov
jo
adc
adc
xor
cmp
scas
add
loopne
inc
lahf
push
inc
sarb
je
cwtl
adc
add
inc
leave
ret
cmp
cmp
dec
inc
iret
adc
mov
mov
mov
lret
lods
popa
add
xor
xor
mov
inc
and
inc
sbb
pop
movsb
and
ret
in
cmpl
sub
jnp
push
out
add
in
mov
insb
addr16
icebp
gs
push
shll
les
inc
xor
lock
fdivrl
sbb
and
mov
pushf
rcrb
sbb
dec
or
inc
pop
loop
xor
pop
pop
xor
movb
add
lret
lret
cld
popf
add
xchg
aam
mov
jge
pushf
stc
xchg
xchg
popf
ds
add
cmp
pop
cmp
sbb
mov
sub
or
ja
shll
cltd
mov
aaa
add
ret
sar
push
pop
inc
add
out
addb
sub
cltd
lods
push
leave
dec
shl
xchg
jo
sbb
decb
add
push
mov
add
mov
in
rcrl
outsb
shll
mov
movsl
cmp
add
enter
jns
mov
fdiv
cmp
pusha
out
daa
inc
and
imulb
mov
inc
cmc
add
dec
loop
sbb
adc
inc
lds
sub
add
mov
pop
mov
xchg
test
inc
or
vcmpsd
mov
cmpsl
scas
adcl
add
ret
rcl
xchg
pop
add
push
push
add
ss
and
mov
dec
lret
es
add
jg
lcall
and
mov
lahf
add
add
sahf
sub
add
jmp
sbb
sub
xlat
fwait
jo
rolb
pushf
andl
bound
xchg
push
lods
int
call
mov
add
div
dec
add
xchg
mov
test
push
xchg
add
leave
imul
add
loope
cmc
lret
inc
and
clc
fidivrl
cmp
mov
and
out
jnp
pop
les
xchg
pusha
sbb
out
cs
mov
and
dec
jmp
pushf
sub
popf
cmp
sbb
clc
ret
push
mov
sbb
dec
sbb
pusha
add
jbe
jae
cs
add
insb
jb
sti
sub
push
dec
popf
mov
push
mov
or
out
mov
xchg
push
or
lods
ffreep
mov
push
lret
lods
xchg
out
or
cmp
jp
push
xchg
inc
sub
out
mov
scas
sbb
ja
clc
or
pusha
pop
mov
push
and
pop
js
jp
cmp
or
popa
cmp
sbb
or
pop
mov
int
add
mov
bound
xor
add
mov
jge
xor
repz
mov
mov
and
push
sub
and
pusha
mov
sbb
cmp
xchg
jl
mov
cmp
int3
repnz
jp
in
aas
mov
bound
push
icebp
adc
mov
add
imul
test
push
add
arpl
arpl
mov
shr
lock
jle
fcomps
inc
jl
popf
jmp
insb
out
ret
lret
or
mov
lea
jb
jge
insb
hlt
notl
xor
cmp
push
inc
sbb
iret
or
in
sbb
mov
lcall
xor
enter
push
loope
int
leave
subl
sbb
test
mov
cmp
jno
outsl
in
sbb
add
xlat
jecxz
cwtl
repnz
sbb
inc
pop
int
mov
adc
lock
cmpl
popf
and
dec
mov
bound
ret
aas
xchg
std
jo
insl
lods
add
mov
dec
test
add
insb
xor
lcall
bound
outsl
stc
push
jbe
inc
popf
pop
movsb
aas
aaa
add
fs
inc
xchg
mov
test
insb
iret
add
inc
dec
mov
mov
sub
pop
push
imul
sbb
and
in
add
ds
inc
loope
pop
push
inc
push
xorb
hlt
add
inc
imul
sbb
pop
mov
sub
push
movl
mov
mov
xchg
inc
add
or
test
pop
loope
jne
cli
xchg
ret
out
je
call
mov
jo
lret
lret
rorb
shlb
stos
inc
push
push
sub
fmulp
or
add
adc
lods
inc
cmp
nop
push
stos
jmp
mov
add
adc
push
std
incl
loope
adc
add
in
cltd
stc
cli
inc
add
and
jp
or
fldenv
std
mov
jle
scas
adc
dec
pop
add
les
fildll
or
pop
pop
and
add
pushf
add
aas
psubd
sub
inc
aam
and
fistpl
inc
pop
mov
or
loope
push
xor
or
add
push
cmc
movl
mov
aas
mov
mov
ss
es
push
cltd
lock
add
test
rcrl
fbld
dec
push
mov
mov
adc
inc
inc
mov
push
mov
andl
mov
insb
std
les
mov
lods
aad
add
jno
test
fsubl
push
push
cmp
fiadds
pop
cmp
inc
or
xchg
into
add
loop
cltd
add
sbb
push
add
xchg
mov
adc
ss
pop
mov
pop
aad
sub
addr16
das
push
add
call
xchg
adc
or
adc
out
and
arpl
mov
cmp
pop
add
rolb
arpl
and
fcmovne
adc
sti
mov
mov
rcr
jbe
sarb
int
shr
repnz
es
aaa
fstl
cmp
mov
sar
inc
ja
xor
pusha
lahf
adc
arpl
inc
shlb
or
push
and
pop
adc
add
ja
jb
mov
lock
loopne
cld
add
loope
icebp
add
sub
push
and
movsl
ror
insl
xlat
and
add
mov
sbb
ror
jns
push
mov
mov
pushf
test
xchg
and
mov
outsl
and
ds
inc
push
xchg
lcall
push
mov
popf
adc
push
cltd
pop
mov
shr
push
sub
adc
push
sahf
or
mov
mov
add
cmp
mov
ret
test
repz
popa
pop
enter
cmpsb
mov
and
xor
dec
rcrl
sub
mov
sub
adc
repnz
sbb
scas
mov
add
aam
dec
pop
mov
ss
adc
cmp
dec
subl
adc
mov
jo
pop
xor
leave
js,pt
add
inc
mov
daa
jecxz
rolb
add
xor
out
movb
fsubs
push
xor
cwtl
nop
mov
add
mov
or
aad
push
es
bswap
dec
inc
movsl
add
sbb
iret
adc
fidivl
add
xor
mov
js
jnp
cmp
mov
add
and
xor
xchg
lcall
test
pusha
andl
les
imul
add
add
add
lods
insl
dec
and
repz
inc
scas
bound
mov
stos
mov
add
pop
mov
add
add
insb
pop
mov
fcoml
pushf
xlat
add
paddb
and
adc
add
js
imul
les
add
repz
cmp
add
cmp
cs
add
add
popl
push
add
xabort
pop
adc
les
je
add
adc
add
mov
sbb
xchg
rorb
repz
xor
push
jmp
sub
cld
pusha
shlb
fwait
call
jmp
mov
divl
and
mov
fwait
inc
insb
or
jo
adc
scas
sahf
jg
xor
aam
int3
add
xlat
mov
lods
add
je,pt
or
cmpsb
push
add
jp
fldl
mov
enter
mov
pop
pop
in
fmull
or
push
xchg
cltd
xor
je
push
jecxz
repnz
ret
dec
jne
cmpb
add
xor
inc
add
scas
dec
and
dec
cmp
sti
imul
jo
xlat
xor
fdivrl
and
cmc
push
shll
add
in
sbb
js
push
jbe
push
fisubrl
repz
inc
sub
add
cmp
dec
inc
add
and
or
in
cmpsl
dec
add
or
inc
add
test
jae
jp
mov
cli
add
fsts
loope
mov
ret
dec
xor
dec
and
iret
das
test
xor
xor
pop
lea
mov
add
lcall
loop
das
lock
repnz
add
add
pop
jg
gs
cmpsl
aam
test
jae
xchg
fnstenv
insb
push
sub
ret
pop
adc
add
sub
adc
push
mov
enter
dec
add
aaa
jl
loopne
add
cld
add
add
nopl
fcomps
inc
sbb
inc
loope
add
mov
inc
gs
cld
addr16
mov
lret
dec
or
pusha
gs
cmc
and
inc
add
mov
popa
loop
inc
lea
and
inc
pop
push
pop
or
int
sub
scas
sarl
add
out
test
shlb
adc
push
sbb
sub
mov
add
push
fldl
sahf
inc
add
jbe
fistps
inc
xchg
lods
sarl
lods
mov
es
and
cmp
mov
fsubr
popf
dec
pop
adc
push
pushf
add
pop
jb
stos
rcrb
shrl
push
mov
jbe
xchg
stos
in
pusha
add
ror
ljmp
clc
std
sub
ret
xor
dec
push
sbb
xor
add
js
sbb
mov
push
inc
dec
cmp
sub
aad
adc
test
pop
fcmovbe
mov
add
aas
cli
xorl
pop
add
xor
mov
pop
popa
cmp
xchg
or
rcll
sbb
add
gs
mov
or
or
dec
leave
cmpsb
adc
cmp
inc
ret
stc
and
pop
test
add
cs
dec
add
cmp
push
add
jmp
imull
das
add
mov
clc
incl
push
sub
push
add
pop
bound
jnp
pop
add
inc
vmload
mov
add
inc
lcall
xchg
out
and
mov
mov
aad
pop
rorl
divb
cs
push
or
add
dec
rorl
lret
xchg
adc
inc
add
pop
push
jo
jno
dec
xchg
mov
or
sub
push
sbb
and
jnp
mov
add
cld
inc
sbb
clc
dec
add
dec
js
gs
int
and
jmp
add
sub
jnp
inc
dec
ret
push
std
aaa
fisttpll
mov
inc
and
pop
iret
push
popa
jp
sub
ret
pop
and
push
sbbb
push
or
mov
in
push
cmp
stos
cmp
inc
aas
pop
push
mov
adc
add
inc
sarl
inc
xchg
lret
sbb
loope
cld
loope
in
pop
add
movl
test
push
frstor
scas
imul
push
adc
or
out
dec
pop
push
pop
add
xorl
or
jo
sbb
sub
sub
adc
and
and
outsl
inc
jg
in
sub
dec
xchg
push
and
and
imul
jp
pop
sahf
sub
mov
adc
int3
jnp
inc
dec
jp
nop
sub
mov
and
sub
iret
push
daa
xor
xchg
cs
std
lea
cmp
in
mov
pusha
and
shrb
std
jl
repnz
dec
mov
xor
mov
gs
cltd
pop
dec
mov
add
and
repz
mov
aas
out
in
inc
sub
cli
or
ja
cmp
add
xchg
push
fstpl
cmp
add
mov
mov
and
and
stc
daa
jo
jbe
sub
aas
imul
dec
sub
ret
cmpsb
pop
add
sbb
add
cmp
sub
iret
add
inc
mov
cwtl
push
sbb
sbb
shrl
cmp
sub
xchg
imul
fisttps
dec
lods
add
jbe
int
cwtl
xchg
sar
sub
push
cmp
icebp
repnz
sub
imul
pushf
das
shrl
rorl
mov
cmpsl
sti
stos
xchg
sub
push
repnz
lret
pop
add
sbbb
rolb
ret
mulb
loopne
clc
out
in
add
mov
rcrb
imul
outsb
jae
or
jge,pn
ja
jecxz
and
push
add
mov
sub
inc
xchg
xor
xor
or
cmp
add
lds
add
mov
jmp
add
mov
repnz
add
jns
ss
lea
out
inc
and
dec
outsl
push
pop
fisttps
add
notb
mov
pop
fstl
lahf
push
jo
mov
insb
in
into
cmp
xchg
jl
mov
sub
adc
ret
pop
push
sub
int3
popf
pop
addb
das
into
ljmp
fbld
xchg
and
add
cli
push
out
leave
bound
jnp
lret
add
js
xor
jbe
push
loope
stc
scas
fwait
xchg
sub
jns
add
sarl
sub
mov
and
and
inc
add
dec
and
jne
sub
push
pop
lahf
xchg
sbb
add
dec
add
push
mov
mov
adc
sbb
sub
adc
out
fdivl
jo
add
lcall
add
add
loopne
xor
adc
and
out
and
rolb
add
jmp
out
loopne
sbb
add
xor
mov
add
adcb
add
stos
imul
sbb
das
cmp
icebp
add
inc
stc
aad
test
jmp
aas
and
pusha
jae
dec
pop
add
jno
adc
sahf
sbbl
loope
shrb
mov
inc
jl
sbb
xchg
ds
xchg
les
pop
dec
jmp
notb
addb
ret
fs
jmp
and
loop
cld
outsl
mov
cmpsb
adc
inc
push
rcl
rcrl
sub
sbb
arpl
test
movsl
sbb
sub
adc
addr16
data16
inc
xor
mov
bound
mov
mov
adc
jnp
popf
out
mov
das
movsl
sbb
pop
pop
dec
arpl
subb
popa
ja
inc
subb
add
xchg
das
out
out
and
repz
dec
pop
or
jo
rcrl
adc
push
xchg
lret
pop
push
push
mov
jle
jnp
fcoms
js
mov
xor
add
pop
add
sub
ja
or
data16
jp
adc
popf
fcom
stc
push
in
leave
data16
adc
inc
jp
rcrl
lods
adc
stc
ljmp
lret
ss
push
inc
pusha
and
xor
scas
and
leave
test
pop
fwait
daa
xchg
imul
dec
or
mov
fldt
inc
ljmp
and
xor
sbb
push
adc
or
in
jne
fiadds
jae
ret
aas
es
sahf
inc
xchg
loop
les
jb
xor
add
adc
or
aas
dec
popa
add
stc
fnsave
repnz
or
movsl
add
in
insl
adc
gs
imul
jg
int3
nop
xchg
aaa
add
mov
pusha
pop
mov
xchg
cld
loope
mov
aaa
mov
repz
nop
add
enter
or
mov
test
push
cmp
add
test
mov
loopne
cmp
mov
clc
mov
scas
mov
lar
inc
mov
pop
add
and
inc
lcall
bound
dec
adc
xor
ret
add
out
add
dec
loope
sub
cmp
in
fildl
cli
arpl
dec
lret
add
add
popf
mov
mov
pop
aad
mov
andl
mov
adc
jle
arpl
outsb
and
dec
sub
or
xor
add
test
test
xchg
nop
popa
mov
cmpsl
add
or
and
push
pop
pop
arpl
xchg
mov
push
sbb
jge
mov
ss
test
test
mov
mov
jle
xorl
or
dec
outsl
cs
out
test
cmp
mov
xor
test
cmp
into
mov
ss
lret
push
faddl
xorb
and
add
push
int
addr16
add
loopne
in
shll
push
cmp
das
push
out
add
xor
sbb
dec
popf
mov
jl
add
add
add
test
into
add
pop
and
xchg
dec
push
add
pop
mov
and
or
pop
mov
inc
loope
std
cmp
js
add
adcb
mov
loop
xor
adc
push
clc
add
inc
add
leave
fxch
mov
push
inc
or
ljmp
xchg
call
cmp
add
xor
add
movsb
sbb
mov
outsl
leave
pop
or
ret
stc
push
xor
popa
mov
and
cs
xchg
and
jle
add
rclb
ficomps
jno
add
add
dec
or
inc
pushf
xchg
dec
add
add
loop
add
add
push
cli
mov
aam
adc
bt
adc
rclb
add
adc
mov
mov
loop
and
fwait
jge
pusha
js
add
loope
in
call
mov
daa
stc
jns
cmp
shll
stos
add
push
lods
rolb
movsl
inc
iret
xchg
xor
cmp
aaa
mov
out
dec
aad
add
xor
xor
loop
test
daa
xchg
lock
and
pop
or
aaa
xor
or
mov
xchg
je
cmp
xlat
and
pop
test
jb
imul
mov
jno
stos
add
es
adc
jge
lds
and
jnp
xor
in
add
stc
sub
and
popa
xor
sub
cmpsl
nop
es
movb
ljmp
popa
add
mov
test
push
mov
pop
enter
sbb
push
jmp
pop
outsl
in
hlt
shll
in
cs
add
call
inc
mov
cmp
pop
test
test
ret
jbe
or
cwtl
adc
fists
scas
cmp
pop
mov
call
jp
mov
jb
cs
mov
sbb
stc
cmpl
ret
pop
scas
sbb
mov
adc
jmp
mov
add
ds
sub
sub
aaa
dec
scas
int
jmp
into
mov
sbb
insb
mov
aaa
mov
add
lret
and
bound
xchg
mov
add
inc
push
and
and
mov
sub
inc
jle
orb
pop
int3
pop
pushf
push
push
cmp
pop
jbe
test
or
add
mov
and
push
icebp
cmp
sbb
inc
mov
xchg
xor
sbb
and
jecxz
gs
out
add
lcall
xor
add
inc
outsb
popf
lods
or
ret
shlb
addl
imul
mul
fadds
xchg
sahf
lret
jecxz
imul
hlt
inc
add
jnp
fmull
pop
and
or
cmpsl
cmp
pop
or
cmp
addr16
add
pop
sbb
or
sub
jl
sbb
jmp
ret
xor
xor
jbe
sbb
leave
mov
in
pusha
arpl
in
and
bound
shlb
loope
ret
sub
mov
leave
mov
sbb
add
call
mov
push
pop
sti
int3
mov
lods
pop
cmp
xchg
sbb
inc
mov
fnsave
pop
jp
jg
decl
inc
sbb
cmp
and
out
pop
mov
loop
or
and
add
inc
inc
cmpsl
subl
mov
div
add
xchg
sub
lods
stos
lds
lods
push
and
add
repz
or
pop
jb
jp
adc
pop
jl
jns
pop
adc
xlat
xchg
adc
and
loope
pop
add
fstp
xchg
mov
repnz
jl
sbb
mov
mov
sub
adc
jnp
cmpsl
mov
pop
in
add
sub
xchg
iret
fisubl
loope
pusha
add
fcom
push
test
mov
jae,pn
movsb
sub
add
out
movsl
mov
rcll
jle
rclb
aas
outsl
ljmp
mov
mov
aad
lds
icebp
fdivs
sarb
adc
int3
add
test
push
xchg
mov
or
mov
bound
cltd
push
jle
ljmp
sub
outsb
mov
popa
dec
dec
inc
into
or
repz
lods
gs
xlat
mov
mov
and
add
ss
pop
loopne
sub
and
js
rcrb
xor
ljmp
jno
std
add
mov
jle
xor
add
iret
lret
pusha
inc
int3
jl
outsl
cmp
sbb
and
mov
sub
mov
jg
andl
ret
insb
cmp
dec
dec
pop
cld
add
mov
cmpsl
mul
pop
nop
inc
shll
fisubrs
add
sarb
push
lret
ja
cmp
add
loopne
add
pop
pushf
mov
inc
mov
push
add
out
push
inc
jp
sar
adcb
outsl
sub
xchg
or
push
adc
hlt
sub
pop
add
inc
adc
add
push
rolb
dec
add
jmp
faddl
repnz
call
mov
scas
add
mov
xor
stos
add
sbb
cltd
mov
sbb
dec
shll
inc
ds
mov
mov
hlt
pop
imul
gs
lea
mov
pop
pop
jae
jo
dec
sbbl
mov
ret
das
and
cmp
inc
mov
inc
insb
add
icebp
push
pop
adc
inc
push
add
sti
testl
jnp
incb
incl
pop
xor
cmpsb
xchg
add
icebp
add
out
scas
or
dec
xchg
insl
rcll
popa
iret
shrb
shlb
add
sbb
cmp
call
lods
scas
add
xchg
and
fnstcw
mov
popf
mov
repz
fs
ret
pop
fistpll
add
hlt
repz
ja
xlat
sbb
xorl
mov
movsb
ss
mov
mov
std
test
jmp
cld
cmc
lock
sbb
ftst
icebp
shlb
xchg
out
in
ss
les
lods
ja
shrl
stos
mov
cmp
loop
test
add
imul
add
mov
push
add
les
enter
add
fildll
lret
sub
pop
xor
inc
mov
stos
test
add
loopne
into
sub
enter
insl
ljmp
push
push
inc
lods
sub
mov
mov
cmc
xor
cmpb
repz
mov
xchg
pop
sbb
push
jno
xchg
or
icebp
sbb
je
ret
sti
jg
loope
or
ljmp
test
and
add
push
sbb
xchg
cltd
xchg
add
pop
out
add
add
sysenter
in
add
add
loop
mov
and
xchg
ret
gs
lds
jmp
adc
or
loope
cmp
inc
or
xor
int
outsl
push
or
dec
aad
pop
add
js
or
push
aam
fs
sbb
add
push
pop
push
lea
inc
dec
inc
mov
xchg
movb
arpl
test
jmp
shrb
test
in
xor
mov
repnz
aas
add
in
sub
xor
or
cmpl
das
mov
jo
mov
add
rol
std
mov
iret
mov
sub
pop
test
xor
pop
lods
mov
cmp
and
inc
inc
mov
jo
jl
dec
pop
sbb
jnp
add
xor
fisubrl
push
xlat
mov
push
clc
testb
inc
adc
aas
mov
add
adc
aaa
aad
jge
inc
add
push
imul
rolb
push
jg
dec
rclb
mov
jns
adc
inc
pushf
int3
and
out
movsb
out
pop
add
scas
in
inc
add
jle
jno
sub
sarb
or
subb
subl
mov
sub
dec
mov
ja
rol
inc
test
push
and
lock
and
cwtl
ds
add
in
mov
rorb
push
aas
lahf
xchg
add
lcall
sahf
push
sbb
xchg
adc
aam
mov
sub
mov
cmp
mov
sbb
jbe
push
mov
sub
add
mov
lods
xchg
rclb
xor
pop
inc
add
int
stos
mov
fldl
mov
je
clc
ror
xchg
xor
cmp
or
dec
pop
std
mov
jle
inc
out
push
in
add
fadd
aad
mov
adcl
cmp
mov
gs
leave
pusha
aaa
jmp
test
mov
fsts
andl
mov
pop
add
test
cmc
dec
inc
outsb
subb
cmp
pop
je
push
adc
lcall
push
add
sbb
into
aas
inc
hlt
shll
inc
jbe
sub
mov
jecxz
push
movsl
add
mov
daa
mov
imul
jecxz
inc
mov
push
shlb
xor
or
cld
add
inc
cmp
pop
xorl
pop
rcrb
sub
shlb
push
mov
sub
les
push
push
add
fimull
jecxz
mov
add
jmp
adc
inc
mov
xor
xchg
fstpt
jmp
rcrb
xlat
mov
sub
sahf
sbb
dec
mov
adc
fnstenv
add
jne
add
loopne
jp
enter
add
daa
fwait
pop
icebp
jo
fs
fadd
mov
scas
cmp
push
loopne
add
sub
cmpsb
inc
movsb
inc
dec
sbb
sub
adc
add
lahf
jmp
xor
daa
cltd
mov
imul
lds
jne
mov
adc
mov
sub
jmp
pop
sti
shl
pop
inc
test
xor
dec
jmp
das
je
int3
push
cli
and
or
pop
add
loope
xor
xchg
xchg
lcall
test
in
add
sti
mov
or
pushf
fnstcw
gs
ret
jmp
fidivl
xor
nop
or
jg
js
push
jno
out
adc
in
fdivl
pop
jno
mov
mov
into
push
daa
test
cwtl
xchg
push
mov
xor
mov
je
fistpll
cmp
arpl
mov
push
cmc
loope
imul
push
ljmp
filds
jnp
push
adc
adc
lock
inc
mov
sub
xlat
dec
inc
clc
mov
push
sbb
mov
cmpsb
cmpxchg
dec
add
mov
or
rclb
pop
xor
mov
sti
xor
sbb
cmp
add
ljmp
jmp
push
mov
shrb
xchg
lret
lahf
and
leave
outsb
add
lods
jae
jge
daa
test
outsl
in
and
jg
mov
int3
data16
add
pop
mov
xchg
add
jnp
lcall
in
add
push
js
lahf
or
daa
out
inc
xor
mov
mov
xor
out
sbb
imul
mov
lds
pop
inc
nop
jp
call
es
lds
incb
out
push
jbe
mov
and
ds
jge
mov
jle
bound
iret
add
fimuls
test
inc
sub
mov
fwait
lds
cmp
jmp
in
jne
sub
adc
sub
xchg
cmpsb
pop
sbb
pusha
fisubrl
and
cmp
xor
push
inc
aas
dec
add
mov
mov
add
imul
push
imull
adc
add
jp
xchg
mov
push
fdivp
lods
loopne
subl
scas
inc
cli
and
imul
lds
mov
mov
lret
jg
notb
addr16
sti
stos
es
loop
out
inc
mov
outsl
sub
cs
iret
insb
stc
xor
sbb
loope
mov
dec
add
ljmp
mov
dec
iret
es
pop
popf
inc
fadds
test
loop
pop
sarb
or
pop
or
sbb
or
pop
pop
fiaddl
adc
std
mov
xchg
dec
mov
xor
cmp
out
xchg
add
pop
or
icebp
std
jge
shlb
or
std
inc
out
pop
subb
jnp
mov
cmp
js
decb
push
xchg
jb
addr16
dec
ret
or
loopne
into
decb
fisubl
insl
enter
cwtl
push
jb
lahf
mov
or
je
and
ljmp
loope
sbb
or
pop
sbb
dec
decl
loopne
lahf
xor
iret
jb
jp
movsb
dec
pusha
gs
ja
lock
iret
and
cmp
jns
outsb
push
xor
iret
out
in
bound
mov
push
pop
dec
les
push
push
add
mov
or
xor
jle
add
sub
mov
outsl
pop
sbb
dec
dec
mov
loop
pushf
int3
xor
mov
pop
pop
aaa
pop
cmp
repz
cld
or
jp
movsb
sbb
and
gs
lods
inc
adc
sahf
cmp
sbb
jge
cmc
aad
mov
jmp
fwait
dec
dec
push
iret
xchg
mov
imul
cmp
add
add
or
push
add
pop
aaa
or
mov
lret
bound
sub
add
movaps
iret
js
ds
into
stos
add
push
dec
push
stc
xor
ja
lock
shll
xchg
add
jge
pusha
adc
mov
dec
imul
inc
push
cmp
in
xchg
sub
adc
outsb
mov
and
inc
ret
ss
pop
leave
add
imul
cmc
loopne
jle
inc
sub
mov
pop
aaa
add
xor
mov
and
pop
adc
and
or
add
daa
nop
jl
mov
stos
rcrl
and
add
mov
mov
mov
cmpb
push
test
shrl
inc
or
loope
inc
imul
add
shlb
xor
lea
add
xchg
inc
adc
adc
xor
add
sub
aad
push
add
fsubs
pop
or
inc
clc
push
icebp
cli
inc
jns
mov
ljmp
ret
add
call
sub
mov
cmpsl
daa
add
stos
iret
loope
arpl
cmp
pop
mov
fiaddl
int3
mov
jo
inc
cmpl
insl
sub
subb
sbb
fwait
dec
inc
gs
push
mov
adc
pop
jg
pop
inc
into
xor
arpl
lods
xor
orl
mov
adc
mov
pop
xchg
js
cmp
jb
std
lcall
sbb
and
jae
jge
pop
dec
add
lret
inc
xchg
rcll
dec
fildl
dec
in
xor
push
iret
or
es
mov
fldcw
add
test
and
push
push
or
push
inc
rcrb
pusha
dec
adc
mov
cmpsb
jae
daa
add
inc
aaa
dec
js
xchg
mov
imul
daa
in
mov
scas
cmp
add
sbb
ljmp
insl
xor
movsb
add
cwtl
pop
nop
add
pop
pusha
jp
popa
mov
cmpl
xchg
gs
add
sti
mov
js
cli
xor
outsb
in
jmp
push
sbbb
and
dec
cmp
enter
push
data16
ja
adc
mov
sub
fstps
outsb
cmp
sub
jno
mov
scas
lret
xchg
add
xor
sub
scas
popa
test
incl
rorl
lock
sub
push
icebp
out
stos
sub
push
add
jp
and
sahf
inc
jo
push
add
push
fisttpll
xchg
ret
insl
ret
push
mov
jp
xor
add
insl
faddl
inc
test
repz
movsl
jge
add
push
jbe
mov
or
xor
je
imul
sbb
sub
mov
xorl
imul
lret
in
mov
xlat
mov
cmp
jle
popa
xchg
dec
push
arpl
or
ds
jmp
sbb
mov
jp
ljmp
shrb
push
mov
pop
inc
add
xchg
and
pushf
ror
add
iret
mov
mov
shlb
dec
clc
xchg
inc
mov
mov
das
in
sti
les
xchg
cwtl
decl
cmp
sub
and
inc
test
inc
or
addl
addb
ja
cmp
stos
cmc
lds
mov
repnz
jb
outsb
sub
dec
into
mov
pop
sub
mov
xchg
push
sahf
ss
fdivrs
test
insl
out
insl
mov
ds
jp
adc
dec
sbb
test
jle
dec
push
inc
fwait
add
jb
sub
jp
orb
and
and
or
or
add
aaa
negb
test
test
cmp
ss
inc
sub
xor
shr
jp
leave
xor
hlt
insl
cmp
adc
aam
mov
xchg
stos
and
or
sbb
push
aaa
or
add
in
mov
xchg
xlat
xor
mov
pop
sub
sbb
lods
aaa
and
imul
ret
jmp
call
or
arpl
data16
enter
mov
dec
mov
data16
into
adc
push
jmp
add
xor
add
popf
orl
jl
mov
cmpsl
xchg
mov
leave
dec
jl
sarb
das
xchg
stos
jns
into
and
psubsb
les
nop
adc
popa
xor
rorb
fiaddl
fsubrl
adc
lods
sub
or
outsl
pusha
inc
cmp
out
adc
and
dec
add
cmp
inc
bound
xor
out
add
into
adc
jmp
dec
pop
mov
push
xchg
and
mov
mov
dec
jp
jns
shl
cwtl
push
pushf
jecxz
cltd
pop
jae
and
cs
nop
test
bswap
adc
push
in
sbb
dec
lods
inc
add
sub
outsb
repz
sbb
rorb
adc
test
inc
adc
rol
loop
adc
lahf
int3
or
push
push
dec
fidivs
in
daa
xor
xor
stos
add
fcmovbe
sbb
dec
mov
inc
daa
out
test
subl
sub
dec
sarl
pop
mov
push
mov
add
movsb
shll
adc
fisttps
xchg
push
in
jns
adc
in
or
dec
sbb
dec
xor
lods
cmp
int
mull
add
es
insw
cmp
or
mov
jge
jo
scas
sti
cwtl
jbe
inc
adc
xchg
insl
adc
and
or
jmp
push
out
adc
push
pop
sub
xchg
mov
mov
mov
sbb
push
fiadds
mov
add
sbb
mov
aas
mov
loop
sub
inc
cmp
add
sub
mov
sub
dec
push
loope
cmpsb
loopne
loop
leave
xchg
cmc
inc
jp
pushw
fldl
pushf
ljmp
adc
cmpsb
pop
fldl2e
mov
adc
inc
xchg
pop
imul
add
add
shr
hlt
cwtl
push
js
jp
aad
test
ja
adc
cmpsl
insl
sub
jecxz
ret
in
mov
adc
cmp
lods
lock
mov
push
mov
cltd
daa
dec
adc
lock
ss
hlt
adc
lahf
mov
push
mov
fcomps
shll
jb
push
and
xchg
cmp
add
fcmove
or
scas
lods
pop
or
xor
xchg
push
mov
or
cli
xor
movsb
insl
adc
in
sub
xchg
cld
jmp
loop
out
ja
insb
cmp
std
rorb
in
sub
jecxz
dec
mov
cmp
adc
and
into
div
add
mov
xor
mov
jp
mov
pop
push
mov
popa
jnp
in
dec
add
cmpsb
mov
push
or
cli
shr
mov
cmp
cmovs
adc
clc
js
inc
xchg
cmp
add
test
call
sub
cmp
lahf
movsb
pop
imul
jp
lcall
sub
sub
or
cmp
mov
adc
inc
lahf
hlt
add
and
or
mov
cli
and
jp
dec
out
xor
daa
xchg
or
xchg
arpl
out
push
das
fldl
scas
lods
cmpb
rclb
pop
mov
aaa
add
ret
ret
cli
iret
mov
stc
int
mov
cmp
push
push
ret
pop
xchg
sub
and
jp
push
leave
and
clc
xor
jl
cli
or
xchg
lock
lret
mov
aas
sbb
add
inc
roll
or
in
pusha
adc
lods
shll
fnstsw
movsl
jecxz
pusha
std
mov
push
mov
add
ret
test
mov
sbb
jne
sahf
outsb
mov
xor
jo
dec
pop
push
test
test
movsb
mov
push
fsubrs
and
mov
sbb
adc
or
test
xorb
mov
mov
jp
aad
or
jb
adc
aam
inc
scas
aas
jo
or
and
jae
or
out
and
ljmp
mov
sbb
fldcw
cld
roll
xchg
ja
and
sti
xchg
xor
loopne
repz
cltd
bound
imulb
fdivr
pop
jp
xchg
or
icebp
dec
push
add
adc
test
in
rorl
outsb
and
cmp
scas
and
xchg
lcall
mov
test
test
jne
xor
pusha
xor
sbb
push
dec
xchg
repz
data16
adc
cmpsb
lock
mov
push
pop
lahf
or
ret
call
addb
sub
and
lods
inc
push
inc
js
jmp
sub
jne
sub
shl
in
ret
aam
add
xlat
and
mov
sbb
mov
xchg
adcb
and
push
rcrl
jno
add
icebp
out
mov
aam
ret
push
je
das
les
cmc
cmpsb
faddp
sbb
xchg
xchg
sti
or
inc
mov
add
jb
sub
mov
cltd
sub
and
out
loope
int
divb
lock
insl
add
mov
aam
cmp
cmp
stos
add
jle
rcr
mov
movsl
push
xor
ljmp
add
lods
je
aaa
sub
in
or
cmp
ds
arpl
push
sub
cmp
jl
loopne
mov
dec
insl
fstps
mov
jp
mov
not
add
cmpsb
test
out
leave
push
addb
dec
dec
pop
inc
xor
xchg
lret
imul
xchg
inc
inc
sbb
push
push
inc
sti
cmp
sub
mov
clc
and
dec
add
adc
popf
add
dec
ret
rol
icebp
add
or
aaa
lock
jo
jecxz
scas
push
andl
fwait
push
stos
xor
xchg
jmp
in
stos
aas
sbb
cli
mov
stc
sbb
out
mov
dec
xor
cld
ret
rcrb
sub
dec
fnstcw
push
push
inc
imul
sbb
push
sti
out
add
push
insb
arpl
dec
pop
cs
loopne
push
flds
jle
jo
pop
mov
ljmp
add
sahf
pop
and
mov
cld
sarl
xorb
pushf
sbb
xchg
add
out
dec
loope
add
iret
cwtl
flds
cmc
adc
notb
cmp
push
add
imul
fs
jo
sbb
iret
cmp
adc
fidivs
into
cwtl
push
add
lods
and
xchg
setae
adc
inc
lcall
xor
popf
cmp
xor
jae
cltd
cmpsb
sub
imul
outsl
add
lock
andl
faddp
push
imul
ljmp
adc
mov
cmc
add
xchg
pop
iret
repnz
stc
push
mov
je
test
lods
sbb
movsb
addr16
sar
sub
pop
js
mov
pushf
test
jge
mov
dec
call
rol
dec
add
lods
icebp
or
add
and
ret
arpl
cmp
pop
rorl
sbb
and
in
adc
js
sub
cmp
cmpsl
xor
push
sub
jg
pop
pop
adc
leave
orb
cwtl
sbb
and
xchg
jmp
cmp
xor
andl
and
jp
enter
push
rorb
cmpsb
pop
lods
sarb
or
pop
dec
test
aad
enter
adc
push
int3
jne
mov
mov
add
xchg
inc
pop
int3
adc
lret
sbb
xor
sbb
push
add
mov
inc
push
daa
rclb
cmp
outsb
jg
lock
adc
xor
test
pop
stos
fadds
imul
rorb
int
outsb
and
inc
push
aad
test
jmp
pusha
add
jae
cmpsb
or
jl
out
and
push
roll
or
enter
pop
mov
or
xor
pop
add
lret
push
jo
clc
sub
sbb
leave
orb
cmp
js
and
push
jns
mov
inc
push
test
cmp
sub
cmp
filds
and
jecxz
cmp
popf
push
insl
fwait
jl
add
jp
cwtl
sbb
push
mov
xor
popf
test
mov
ss
xchg
xchg
or
xchg
jp
pop
fildll
outsb
sbb
and
popa
subb
daa
pushf
jne
add
jns
mov
nop
cs
push
jge
jle
sbb
sti
push
shll
popa
pop
cmp
xor
stos
dec
sbb
inc
fists
iret
mov
je
and
xchg
mov
push
adc
ret
mov
adc
xchg
fidivs
jp
into
and
jo
mov
and
and
es
sbb
sbb
jl
and
or
in
jle
arpl
testb
mov
adc
jmp
pop
and
mov
and
leave
mov
ret
push
mov
jp
lmsw
inc
lret
adc
adc
imulb
sbb
xchg
or
test
cmp
addl
sub
cmp
out
mov
in
mov
mov
xchg
lret
jecxz
loop
dec
cld
sub
pop
and
mov
adc
ljmp
pop
adc
add
and
lret
mov
inc
add
ret
cli
call
je
imul
movsb
andb
xor
xchg
and
imul
ret
add
ljmp
enter
int3
dec
push
mov
bound
dec
or
leave
push
mov
inc
scas
pop
fsubrp
sbbb
mov
es
push
sbbl
sbb
insl
xor
aam
sbb
jp
lds
dec
loop
adc
add
gs
sbb
push
les
mov
imul
aam
dec
or
loop
out
cmp
sbb
push
xor
ja
cmp
sbb
or
pop
subl
mov
add
cmp
xor
push
mov
out
dec
mov
loop
cltd
roll
inc
jp
cmp
mov
outsb
fwait
inc
xlat
cmp
cmp
pop
mov
jno
xchg
filds
jbe
lret
rsm
push
ficoml
inc
std
jmp
push
xor
bound
mov
je
jno
mov
dec
sub
aas
xlat
cmp
adc
mov
and
lret
or
cmpsb
test
pop
add
jbe
jp
cmpsb
xchg
adc
test
dec
fs
scas
movsb
mov
push
loop
pop
outsl
pop
ret
das
dec
mov
mov
out
adc
std
cmp
xlat
add
into
jp
js
jg
and
mov
jmp
scas
add
movsb
popf
nop
xchg
pop
pop
add
mov
cmc
inc
pop
sti
fwait
daa
dec
sahf
sbb
aam
loop
and
mov
sub
jno
jne
rcrb
sub
xchg
xor
jno
add
add
roll
popa
pop
push
hlt
fildl
mov
loop
add
dec
out
push
aaa
or
and
rorl
sbb
push
daa
movsl
jmp
movl
cmp
mov
std
and
or
mov
dec
daa
mov
jmp
xchg
in
lods
cmp
out
push
je
dec
xor
cmp
and
and
or
xchg
pop
push
inc
repz
and
add
inc
imul
cmp
mov
popf
adc
lods
ret
sar
imul
fcoml
cmp
inc
sti
mull
in
pop
mov
add
sbb
and
adc
gs
pusha
insb
push
xchg
or
daa
sub
pop
cmp
sbb
adc
add
pop
sarl
add
jge
lods
add
inc
clc
cli
dec
imul
loopne
orl
dec
pop
inc
outsl
insl
jge
adc
jbe
jl
add
into
add
jnp
ret
das
add
or
mov
int
xor
add
stc
xlat
cmp
test
ret
add
movsl
and
jbe
iret
andb
xchg
das
sbb
into
xchg
imul
pop
xchg
inc
sbb
leave
daa
cmpsl
or
mov
inc
loop
mov
and
xchg
mov
into
xlat
cmpsb
shrb
mov
cmp
inc
rorl
push
shll
cmp
sub
xchg
rolb
jl
js
sub
and
shlb
and
pusha
sbb
divl
jo
or
xchg
inc
adc
and
push
popf
cld
scas
add
pop
decb
mov
add
pop
fsubrl
popf
inc
insl
or
pop
pop
add
gs
aaa
cmp
movb
jecxz
jno
cmp
clc
xchg
sub
or
enter
or
push
nop
jp
les
add
cs
dec
mov
add
jp
mov
mov
push
add
into
or
cmp
test
add
jae
xlat
imul
pop
mov
sub
adc
out
fbld
mov
sti
inc
inc
movb
arpl
pop
pop
push
loope
add
inc
cmp
popf
push
jp
push
fcomps
shrb
add
arpl
mov
movl
sahf
cmp
adc
jo
loop
sbb
xor
jl
add
fdivrl
cmp
jnp
mov
daa
shl
mov
cmp
jecxz
aad
pinsrw
add
cmpl
popa
divb
cs
xor
add
mov
mov
aad
das
jns
dec
mov
ja
cmp
shrb
pushf
fwait
inc
xor
dec
pop
xchg
push
xchg
adc
fs
bound
ds
push
add
add
popf
mov
mov
ja
test
out
or
loopne
add
jns
es
pop
filds
inc
inc
mov
jne
cld
rol
in
adc
popa
dec
insb
cmp
shl
jmp
mov
dec
cmc
sub
sbb
push
popf
add
sahf
in
adc
dec
pusha
inc
fs
sub
xchg
jno
mov
sub
rorb
xor
rolb
mov
cmp
add
mov
shlb
adc
mov
jae
les
or
push
int3
cmpsl
add
iret
cld
mov
ret
repz
lret
mov
xchg
mov
jae
xlat
int
sub
in
push
xchg
shl
cmp
push
flds
shrw
mov
adc
inc
mov
xor
xchg
arpl
mov
mov
addl
mov
add
mov
jne
pop
cmpxchg8b
lret
shlb
int
ss
es
ret
fldt
cmpb
jo
add
std
mov
fnstsw
push
push
out
in
stos
imul
pop
pop
lods
cs
pop
fs
cmpsl
add
dec
mov
mov
push
and
add
pop
cs
push
lldt
imul
inc
shll
mov
xchg
mov
jl
jne
adc
rclb
andb
mull
xchg
pop
cmp
subl
or
lods
std
add
dec
jb
mov
outsb
xchg
subl
imul
je
push
jecxz
xchg
cmc
add
mov
test
jnp
push
lea
mov
pop
pop
ret
dec
inc
and
out
or
dec
sub
xchg
nop
add
push
lret
xchg
pop
push
std
add
and
mov
jmp
or
sahf
push
add
dec
inc
popf
xor
xchg
add
adcb
push
xchg
add
add
and
into
lock
fcompl
mov
add
imul
pop
xorl
pop
sbb
sarl
or
popa
fidivrs
mov
incl
sbb
and
pushf
xchg
push
into
sub
bound
lock
mov
xorb
insb
xor
pop
das
dec
sub
mov
add
mov
pop
mov
mov
add
mov
jge
mov
xchg
loope
and
dec
mov
daa
add
test
and
test
cmp
outsb
addr16
rorb
and
les
into
push
popf
pusha
push
arpl
sbbl
add
mov
adc
scas
sbbb
loope
sbb
cwtl
ficompl
orb
movsl
into
addr16
je
sbb
add
cmpsl
ja
mov
inc
jb
lea
jo
ss
test
add
in
and
add
loop
mov
scas
scas
xor
and
dec
repnz
push
xor
int
inc
stos
mov
and
mov
rcll
rcrb
mov
cwtl
stc
sbb
pop
inc
addb
lock
dec
leave
dec
or
and
or
ffreep
inc
lods
sbb
mov
sbb
and
sub
add
test
dec
pop
mov
in
xchg
cmpsl
xlat
js
jmp
add
mov
xor
pusha
out
daa
ficoms
test
aam
or
mov
mov
dec
push
or
sahf
add
mov
sub
push
jg
add
mov
mov
into
fdivs
cmp
clc
cmp
dec
dec
movsb
or
and
add
lcall
fs
mov
xchg
pop
lahf
sub
pop
pop
aas
into
mov
test
fldl
add
shrl
add
sbb
push
icebp
mov
add
test
jnp
dec
ja
cmp
pop
push
into
in
inc
and
daa
pop
xchg
out
add
arpl
sti
and
out
dec
mov
sub
addr16
jl
and
push
xlat
cmp
xchg
lods
add
addr16
aam
push
cmc
jo
cmp
bound
add
cltd
imul
rolb
sub
mov
ja
xor
mov
imull
loopne
jnp
leave
aad
dec
xlat
mov
sarl
bound
or
sbb
ss
test
or
jg
sbbl
out
add
add
mov
xor
shlb
mov
out
icebp
shl
xchg
and
ljmp
xor
scas
cmc
pop
rclb
aam
sub
push
aaa
popa
loop
or
pop
cld
pop
aas
addr16
inc
mov
popf
scas
sbb
ss
adc
add
fisubl
push
adc
frstor
in
repnz
repnz
xchg
out
xor
sbb
sub
jge
pop
add
mov
sub
ret
jae
jbe
cmp
loop
xor
loopne
or
std
lret
pushf
lods
sbb
testl
mov
jp
sbb
js
mov
mov
scas
or
mov
ljmp
inc
les
js
movsb
mov
cmpsb
leave
jbe
hlt
sub
jg
inc
add
shll
outsl
sbb
adc
xchg
je
stos
sub
or
mov
jecxz
pusha
fdivs
cmp
pop
or
add
mov
add
pop
shll
cltd
daa
or
shr
sub
cmp
xor
aam
pop
mov
mov
and
repz
sbb
push
popf
orl
cmp
add
push
add
add
mov
jmp
cmp
aas
or
lods
sub
cmpsl
cmpsb
test
pushf
mov
das
xlat
ja
add
movsb
xchg
lret
dec
sbb
push
outsl
or
test
inc
int
pop
sarb
es
mov
loopne
sti
add
push
adc
sbb
inc
imul
push
add
or
cmp
add
cmpb
popf
or
and
les
dec
pop
add
push
enter
fldt
sahf
mov
clc
push
in
xor
pop
sbb
push
push
push
mov
inc
sub
add
addl
mov
mov
std
pop
jmp
hlt
push
mov
xchg
stc
cli
bnd
lds
lcall
xchg
sbb
in
cmp
repnz
add
mov
iret
pusha
sbb
cmc
jbe
outsl
xchg
mov
add
sub
adc
dec
adc
and
sti
add
sbb
xor
mov
fwait
add
or
loopne
pop
add
adc
inc
lea
ja
test
mov
add
clc
xacquire
aam
adc
add
addr16
push
xchg
mov
mov
call
or
popf
fs
add
jne
xor
jle
sub
movsl
inc
jg
cltd
inc
ds
shr
ret
out
xor
xchg
sbb
mov
cmp
stos
sarl
lods
xor
mov
add
lret
testb
jp
jae
into
ret
pop
xor
inc
or
call
fadd
rolb
hlt
and
pushf
je
aam
adc
xchg
mov
in
or
dec
mov
add
std
xor
mov
xchg
mov
cmp
fs
lss
lahf
lea
inc
inc
and
sbb
adc
add
ret
or
in
out
mov
pop
or
jmp
std
cmp
xchg
push
sbb
cmp
xor
or
sti
push
adc
int3
cs
pop
loop
dec
add
imul
subb
pop
mov
mov
rorl
mov
subl
lret
push
aam
xchg
imul
mov
mov
add
nop
add
sbb
loop
cwtl
orl
jmp
or
in
ror
ds
shlb
aaa
imul
loopne
push
lahf
add
pusha
or
mov
xchg
in
enter
adc
and
shrl
or
sbb
out
pop
mov
or
inc
stos
cmpsb
call
or
les
imul
or
repz
std
lds
movsb
xchg
xchg
mov
cmp
in
mov
sbb
sbb
in
lahf
pop
xorl
and
das
out
xchg
cmp
push
and
adc
jae
pop
dec
add
das
xorb
fistpll
popa
int3
jmp
xor
cs
mov
cs
data16
cmp
add
push
cmp
add
aad
mov
loope
cmpsl
call
sub
jno
xor
inc
mov
cmpl
mov
into
push
bound
cmpsl
add
mov
jl
cmc
adc
or
jmp
cmp
jns
sti
mov
sahf
sub
sarb
cs
xor
and
mov
xchg
rorb
loope
xor
dec
sbb
pusha
cmp
or
push
add
push
dec
push
lcall
stc
xor
xchg
jnp
and
xchg
test
cmp
imull
and
js
in
rcll
inc
in
negb
aaa
decl
shr
sub
subb
mov
add
je
mov
adc
or
add
mov
loope
cmp
and
lahf
add
xor
cli
and
push
enter
inc
xchg
outsb
dec
out
cmp
mov
mov
lahf
jecxz
jmp
loope
sbb
in
call
sahf
inc
push
mov
inc
sub
jle
and
sub
leave
testl
xor
and
mov
add
pop
xchg
ljmp
addr16
ret
cmp
jge
or
add
ficompl
and
mov
add
or
inc
leave
fcomps
enter
pop
ret
es
xchg
std
cmp
sub
shll
add
pop
and
push
dec
outsl
ret
inc
popa
or
pop
mov
fisubrl
leave
push
dec
mov
sub
push
add
popa
out
bnd
add
sbb
mov
shrb
scas
sub
stos
sub
sbb
pop
push
jo
jmp
mov
mov
aam
popa
sarl
pop
andb
sbb
add
xor
jo
fists
xor
jecxz
imul
add
movsb
insb
rolb
inc
mov
mov
js
or
arpl
lret
inc
jmp
popf
ret
outsl
push
add
pushl
sbb
enter
mov
aas
xchg
shlb
stos
cmp
out
sub
inc
inc
mov
cmpl
jbe
mov
add
rorl
loope
jp
insb
add
test
clc
bndldx
in
mov
enter
fucomi
stc
addl
loope
sub
cmp
icebp
cltd
cmpl
lret
add
sbb
add
into
sub
std
pushw
pop
out
dec
ds
test
aaa
mov
sarl
fnsave
mov
mov
push
and
push
fwait
xchg
inc
xor
mov
insl
inc
out
les
outsl
aas
sub
sub
add
jle
inc
das
push
clc
xchg
add
adc
enter
cmc
cmp
fisttps
fwait
xor
pusha
xor
iret
sbb
sbb
addl
push
add
mov
pop
daa
cmp
lahf
sarb
xor
lret
adc
pop
mov
jbe
imul
loopne,pt
mov
inc
pop
jge
cmpsl
add
jnp
cmp
inc
jmp
pushf
stos
sub
adc
into
add
cmc
jae
add
pop
mov
call
inc
xor
rcl
stc
aaa
push
loopne
cmp
sub
and
lods
out
data16
or
aas
add
out
add
jb
scas
das
xchg
pop
add
push
mov
inc
insl
stos
sub
js
sbb
push
add
pop
data16
adc
add
repnz
xchg
rorl
inc
ljmp
pop
loopne
mov
addb
sub
pop
add
scas
xchg
addr16
filds
test
jne
and
js
dec
popa
cmp
push
std
jnp
ja
xor
enter
rorb
cmp
pop
xor
jp
pop
xchg
test
scas
in
shll
and
jl
push
sbb
insb
iret
xor
xchg
call
shlb
mov
in
jmp
rolb
imul
pop
in
imul
leave
data16
mov
jnp
shlb
or
iret
cmp
pusha
hlt
xchg
xchg
and
addr16
mov
ljmp
pop
sub
jb
and
cmp
int
sti
scas
xchg
cmp
mov
mov
pushf
push
dec
sahf
in
out
jmp
cmp
call
dec
adc
stos
add
popf
sarb
addl
xlat
push
xor
adc
testb
pop
jle
or
jg
adc
cs
and
aaa
sbb
and
sbb
push
xchg
sub
add
mov
fs
adcb
mov
push
test
outsb
std
cs
fisubl
adc
iret
subl
inc
xchg
mov
aad
inc
cmp
jbe
add
sbb
add
gs
jp
fdivrs
add
cmp
cmp
imul
bound
or
push
std
cld
test
movsl
lahf
sbb
mov
inc
push
test
gs
leave
je
add
fmul
sahf
inc
outsb
addr16
pop
jae
shll
add
push
rcrb
mov
hlt
shlb
pop
daa
jo
dec
mov
add
movsl
adc
arpl
lds
xor
sbb
popa
dec
cld
push
cmpsb
cmp
mov
xor
xadd
mov
and
gs
leave
gs
popf
add
loop
adc
sbb
pusha
std
jle
mov
jge
pop
xor
cmovbe
gs
add
inc
xchg
lods
push
mov
mov
mov
inc
lods
push
pop
cmpb
pop
addr16
jle
test
jge
out
mov
xabort
iret
cmp
push
jp
xor
iret
dec
sbb
and
mov
fdivrp
in
das
fnstcw
ficomps
dec
or
inc
push
push
aad
arpl
out
push
pop
pop
xchg
inc
shll
cmp
and
fisubrs
inc
cmpl
ds
add
out
mov
xchg
xchg
outsb
iret
aaa
xor
mov
jns
ficompl
sbb
jl
lcall
push
shll
ds
inc
cli
lds
jmp
pop
xchg
xchg
adc
inc
mov
add
or
les
rorl
fdivp
ljmp
push
aas
and
xor
xorl
sbb
xchg
cmpsl
movsl
adc
push
add
push
popf
adc
cmpsb
sub
dec
add
pop
gs
xchg
inc
xlat
mov
xor
add
arpl
in
jmp
popa
cltd
outsb
mov
mov
mov
ss
repz
inc
adc
and
xchg
lods
add
imul
and
cmpsb
xchg
inc
out
adc
data16
push
jo
lock
pop
ja
add
push
dec
mov
std
shl
in
jnp
repz
cmp
nop
ret
fldl
addr16
xor
mov
cltd
push
cmp
xchg
sbb
sarl
repz
aam
and
jl
inc
mov
fidivrs
sub
or
adc
add
imul
fcomp
repz
inc
scas
add
clc
int
rorb
cmp
es
scas
or
fbstp
cmp
cmp
stc
test
fsubl
mov
mov
sbb
in
loopne
test
outsb
push
push
or
push
lods
xchg
jns
inc
mov
sub
pop
add
dec
incb
out
xor
gs
sahf
nop
add
mov
sbb
dec
aam
or
cmp
mov
leave
adc
add
imul
ffreep
leave
movsl
pop
jl
add
cmpsb
or
mov
lret
or
add
pop
in
sub
adc
imul
adc
mov
rcll
mov
cmpsl
add
imul
xor
add
loop
lcall
jmp
pop
and
outsl
loopne
and
mov
sub
sub
stos
add
and
ss
sbb
jge
add
aam
mov
and
sarl
pop
cmpsl
mov
adc
lods
push
xchg
add
bound
ja
sbb
mov
add
push
mov
add
pop
in
sahf
aam
mov
and
xor
jg
jp
adc
bound
push
repz
and
lret
dec
incb
mov
mov
out
test
add
inc
push
push
addl
sub
sub
jae
add
lret
sbb
push
sub
lcall
pusha
xchg
rcrl
pushf
repz
add
mov
mov
dec
xchg
cmc
shll
outsb
push
movsl
fists
add
lock
jmp
xor
andb
cld
mov
shl
xor
rcrb
stc
and
xor
xlat
scas
cmp
nop
out
aam
ficompl
add
cwtl
loop
sarb
xor
cmp
add
dec
cmpsl
stos
cmc
es
add
aas
std
inc
mov
outsl
rolb
pop
sbb
cs
stos
adc
addr16
loope
fcmovu
inc
jmp
iret
pop
popa
xor
mov
jb
dec
cmp
jg
dec
jns
pop
lcall
jne
test
mov
addr16
push
in
and
loope
fisubs
add
dec
and
lds
or
nop
add
xor
mov
or
cmp
call
fiaddl
es
add
jo
sbb
pop
nop
xchg
mov
mov
jbe
jecxz
add
adc
add
xor
daa
push
lahf
ffree
jecxz
push
lods
inc
mov
sub
add
insb
fsts
jmp
out
mov
cs
mov
testl
push
sahf
xchg
lcall
push
or
sbb
mov
jp
leave
lods
xor
cwtl
add
pop
sbb
cld
inc
or
sar
mov
out
cmp
xlat
pop
lret
mov
rorb
enter
cmc
addb
sub
dec
add
add
pop
inc
xor
mov
bnd
verr
add
add
xchg
and
xor
pop
cmp
add
jnp
rol
lret
or
shll
scas
add
xchg
sub
cmpsl
outsl
pop
push
mov
jno
xor
add
out
scas
movsb
add
mov
imul
adc
dec
xchg
push
add
gs
leave
std
fwait
pop
fstpt
loopne
insl
push
shrl
or
inc
cwtl
push
into
int3
add
mov
daa
mul
adc
jle
mov
push
mov
mov
add
nop
jl
mov
mov
movsl
mov
or
mov
pushf
inc
xchg
mov
rorl
incl
pop
add
insl
out
sahf
add
jns
fsubs
hlt
dec
int
cli
add
xor
jmp
add
xchg
insl
pop
push
add
jnp
and
outsl
push
or
ficomps
bt
push
jno
push
out
cmp
cmp
or
int
in
xor
xor
out
sbb
shll
pop
add
in
sub
movsl
cmp
add
sub
rclb
and
rclb
push
and
scas
add
je
xor
add
sbb
push
mov
xor
pop
mov
iret
and
lahf
jo
dec
cmp
mov
push
inc
imul
negb
clc
sbb
cmp
shrl
xchg
inc
sbb
add
daa
enter
xor
jmp
add
out
ljmp
xchg
add
bnd
pop
idivb
xchg
add
or
add
dec
jb
hlt
jmp
sub
add
push
lret
pop
adc
loopne
add
pop
push
adc
mov
xor
jmp
pop
fstps
and
fsubs
out
sbb
pop
sbb
movsl
popf
loope
jo
push
arpl
fcmovnu
add
jl
fnstcw
ljmp
sbb
jmp
push
mov
mov
xchg
loopne
add
data16
pushf
dec
pop
test
inc
adc
je
cmpsb
mov
or
iret
inc
bsf
mov
fldl
mov
xor
or
jae
les
clc
mov
mov
or
add
lret
mov
add
test
push
xchg
into
ret
idivl
pop
mov
sbb
push
lcall
testb
sub
dec
pushf
add
sub
push
add
or
shlb
xchg
sbb
adc
push
add
std
xor
add
adc
je
jae
sarb
xor
add
adcl
add
add
xchg
or
mov
fs
push
aaa
jecxz
mov
xor
arpl
sahf
ljmp
ja
icebp
lahf
add
insl
clc
xor
mov
sub
inc
into
shrb
es
xchg
adc
jp
movsb
dec
lret
xchg
cwtl
mov
xor
add
test
sahf
out
add
ret
cmc
cmpsl
shrl
add
ljmp
sub
into
cmp
test
cmp
movsb
xchg
pushf
sub
mov
rolb
pop
mov
insb
fmull
in
scas
iret
es
sbb
jne
jp
aas
jg
mov
push
mov
push
inc
jno
add
movsl
insl
or
fldcw
inc
testl
arpl
dec
lret
pop
shrb
push
mov
mov
xor
enter
add
adc
rolb
cwtl
outsl
and
add
cld
jnp
out
xchg
shll
je
push
rcll
mov
cmp
push
addb
push
movsb
mov
pop
inc
shlb
das
or
xor
jge
adcb
push
lret
outsl
ss
jge
loopne
sbb
sub
or
mov
xor
scas
jne
shl
mov
and
sub
push
lods
adc
sbb
icebp
or
shrb
and
xor
and
inc
jb
out
xor
dec
iret
sar
push
repnz
push
dec
sub
cli
pop
mov
in
and
out
shll
pop
scas
sbb
push
jge
inc
inc
or
xlat
repnz
dec
leave
xchg
test
testb
jbe
or
in
fcmovbe
xchg
push
jbe
cmp
sub
pusha
cld
inc
sub
out
stc
sbb
push
push
adc
int3
stos
pop
adc
lods
mov
cwtl
sti
push
mov
sbbb
outsl
sahf
stc
out
outsb
adc
jbe
sub
add
cmpb
or
bound
add
sub
xchg
or
mov
daa
jp
rcrl
push
popa
dec
or
adc
fs
push
jg
cltd
sbbl
jmp
sarb
add
sbb
dec
and
push
adc
pop
xchg
testl
push
dec
leave
loopne
sbb
shl
inc
adcl
push
push
mov
aad
ja
or
or
add
popf
inc
mov
mov
xor
push
jnp
data16
push
xor
gs
sbb
clc
into
ss
cmp
stc
rep
sti
inc
mov
and
in
pop
mov
xor
add
xor
mov
repnz
daa
adc
negl
in
or
out
and
ds
pop
or
int
or
add
cmpb
and
dec
pop
dec
sbbb
in
jl
outsl
rcll
xchg
mov
push
xor
dec
daa
and
ret
lods
mov
xorb
add
ds
cmp
out
cmp
mov
push
cld
add
add
cmpb
inc
and
movb
dec
test
xor
cmpsl
mov
xorl
pop
lcall
xor
sub
add
inc
ds
dec
or
xchg
shll
sbb
clc
popa
adc
inc
jp
leave
cmpb
in
loopne
sbb
sbbb
lcall
clc
std
xor
cs
repz
adc
inc
jne
inc
lods
cld
jecxz
adc
shl
out
lret
push
lods
and
xchg
and
cmp
push
pop
frstor
in
and
fstpt
outsb
cmp
mov
cmp
or
cmp
dec
lcall
pushf
das
jg
jp
repnz
xchg
mov
xorb
stc
shrb
sbb
adc
loop
les
inc
scas
xchg
sti
xor
jp
sbb
jnp
mov
fnstcw
das
stos
adc
push
ja
push
inc
leave
and
push
jp
xchg
in
push
dec
mov
add
mov
mov
std
add
daa
shl
jae
es
cmc
or
daa
insb
sbb
add
jne
mov
sub
out
push
addr16
push
adc
out
movsb
outsl
movsb
xor
incb
xchg
pushf
stos
sbb
mov
stc
or
xchg
stos
push
mov
inc
jnp
shlb
and
js
leave
and
int3
arpl
and
xor
jp
mov
sub
sbb
adc
sub
gs
mov
gs
out
jb
out
jmp
cmpl
das
and
fiadds
imul
ret
push
push
cmpsb
and
loop
insb
in
sbb
fwait
cmp
roll
cmp
pop
gs
popf
pushf
addb
xor
fistpl
cmc
add
aas
fisubs
scas
sbb
out
aam
mov
or
xchg
orl
inc
xchg
mov
ja
popa
hlt
lret
mov
inc
add
sbb
pop
adcl
and
movl
dec
lcall
sbb
mov
mov
movsb
jp
xor
jle
ret
mov
test
dec
sti
dec
pop
push
stc
jle
lds
faddp
dec
mov
xor
add
push
sbb
cmp
outsb
mov
jl
or
mov
and
or
in
xchg
cmp
mov
inc
push
push
test
or
dec
aad
out
add
push
in
mov
cld
mov
fucomip
cmpsb
std
pop
sub
cmp
inc
sti
mov
jb
sbb
bound
mov
push
or
cmp
jge
fxtract
inc
outsl
push
jg
push
repz
pop
add
mov
push
out
or
sub
imul
les
or
mov
in
in
push
push
jg
xor
add
rcrl
and
push
lods
or
jp
scas
aas
jmp
pop
scas
mov
pop
bound
stos
push
movsb
std
inc
inc
xor
xchg
push
ret
or
lock
outsb
out
in
ret
lock
lret
xor
push
xlat
scas
test
add
icebp
out
adc
jns
and
mov
popa
orb
mov
mov
lret
std
inc
lock
adc
xchg
or
push
call
leave
push
or
add
cmc
xor
les
add
or
ljmp
mov
pop
sbb
test
gs
or
inc
xchg
sbb
cli
js
nop
pop
lcall
notb
ret
xchg
mov
jle
hlt
or
mov
aas
or
jnp
int3
cmc
xchg
and
stos
dec
movsl
adc
jno
ltr
jo
fistpl
test
repnz
clc
add
gs
push
jbe
or
and
pop
mov
leave
cs
rol
adc
sbb
sti
add
jb
sub
fcmovnb
lahf
loopne
int3
pop
add
loop
cmp
ds
dec
aaa
add
mov
hlt
dec
add
ja
jb
scas
test
add
sbb
aaa
xchg
dec
dec
dec
iret
nop
add
and
jle
in
add
lret
xor
fs
sbb
push
pop
add
jne
popa
add
cmpsl
pop
or
push
jmp
mov
and
add
out
cmp
repnz
add
sub
or
je
adc
popl
sbb
mov
aaa
push
jl
data16
inc
in
mov
or
jbe
rcrl
out
popf
sbb
jge
inc
add
scas
shll
sarl
gs
xor
lahf
and
mov
push
hlt
adc
mov
add
mov
add
push
and
mov
inc
shl
jbe
cmp
loopne
push
cld
dec
adc
pop
cmc
out
shl
add
jp
imul
int
out
js
pop
test
pop
imul
push
jae
fwait
cmp
mov
stos
insb
add
sub
mov
call
cmp
js
icebp
xor
or
mov
adc
xor
mov
nop
sahf
sub
pop
loop
imul
sbb
enter
test
flds
push
mov
sahf
add
lcall
cmp
test
pop
adc
cmc
pushf
pop
add
pop
sbb
sub
ss
mov
scas
and
sbb
jle
or
push
xor
cmp
outsb
rclb
cmp
or
add
dec
cmp
fld
mulb
or
jecxz
mov
xchg
aaa
arpl
int
cmp
lea
test
rcrb
mov
and
ds
add
stos
or
mov
dec
add
sarl
lods
mov
sbb
fwait
dec
je
jo
dec
or
mov
test
std
jl,pt
in
in
nop
test
andl
pop
repz
xchg
add
jecxz
add
jmp
xor
xor
push
pop
mov
leave
jns
xchg
test
xchg
roll
adc
add
movsb
test
loopne
xor
xor
fidivrs
xchg
sub
add
cmp
fwait
xchg
fsubrl
ss
and
cmpsb
sbb
incb
in
mov
cmp
repz
add
push
pop
xchg
lods
iret
je
rolb
jbe
xor
xchg
cmc
pop
add
mov
pushf
or
call
add
icebp
cwtl
sahf
add
push
xor
dec
les
mov
lods
pushf
adc
add
bound
add
sub
inc
iret
inc
outsl
or
push
aaa
push
dec
popf
inc
xchg
push
xor
or
push
jecxz
xor
pop
add
add
mull
add
arpl
add
fdivrp
insl
and
add
add
popa
call
pushf
adc
xchg
cmc
int3
adc
xchg
lds
ds
mov
out
add
or
adc
add
outsl
push
or
clc
cmp
mov
cmpsl
mov
xor
add
push
repz
push
rorb
push
add
outsl
jae
test
std
out
cmp
mov
faddl
cmp
es
cmc
mov
stos
xor
in
orl
or
pop
jb
mov
jns
adc
add
and
out
hlt
out
int
push
lock
ds
idivl
icebp
add
xor
clc
or
aaa
fildl
xor
cwtl
mov
pusha
ror
insl
mov
fwait
cmp
mov
mov
in
lods
scas
mov
push
inc
sub
sarl
cmp
jge
out
push
sub
xor
mov
xchg
sub
aam
dec
mov
dec
add
mov
pop
fistps
ss
std
iret
xchg
fsts
pop
jbe
mov
pop
sti
add
inc
xchg
cs
xor
aam
mov
arpl
and
add
sarl
add
adc
lds
in
add
sbb
jge
outsb
and
add
fs
adc
enter
lcall
add
cld
out
nop
sbb
xor
xor
rol
cmp
xor
out
push
in
addb
gs
aam
jns
add
adc
shlb
es
out
mov
push
and
xchg
in
lcall
loopne
jg
push
rcr
cmp
push
add
mov
add
mov
leave
jae
xchg
roll
mov
push
sbb
jns,pn
push
mov
jmp
xor
enter
push
add
leave
repz
mov
out
push
not
add
loopne
push
sub
lock
add
pop
aam
dec
jbe
and
lahf
push
add
mov
mov
mov
push
fdivr
idivb
add
cld
pushf
xor
add
mov
cwtl
rorb
xor
rorl
in
xchg
or
cltd
shrb
sbb
push
inc
imul
mov
push
popa
pop
xchg
insb
test
xchg
sub
xchg
mov
pop
mov
push
add
mov
push
stos
lret
pusha
pop
orl
adc
sbb
test
mov
mov
dec
push
mov
je
mov
ljmp
pop
shll
push
xor
test
sbb
add
add
inc
imul
outsb
je
fistpl
rclb
mov
pop
xchg
jle
daa
es
enter
scas
popa
xor
xchg
movsb
jae
mov
popf
xor
fwait
mov
mov
add
test
rorb
jbe
orb
lods
mov
pop
lahf
test
xor
push
ret
loop
push
push
or
adc
add
into
mov
xchg
or
push
aas
add
dec
mov
mov
add
dec
aam
sar
movsb
dec
outsb
adc
dec
dec
pop
add
jmp
push
add
bound
add
les
rcrb
data16
cmp
pop
push
cld
dec
xor
xchg
inc
shl
lods
add
xchg
pop
mov
fstl
test
js
std
lcall
popf
jne
push
sub
fs
or
mov
and
inc
cmp
test
or
and
aas
add
orb
inc
test
inc
xor
mull
xchg
jp
loope
pop
into
pop
sub
xor
inc
dec
dec
or
mov
xor
arpl
add
xor
fsubl
push
add
xchg
add
or
jge
gs
dec
cmp
stos
ret
or
and
pop
loope
lahf
bound
mov
frstor
int3
push
outsb
sub
mov
pop
cmp
nopl
sbb
mov
mov
ret
or
xchg
inc
xchg
jo
mov
repnz
enter
mov
and
out
push
push
and
data16
es
push
ret
fwait
sub
cmp
cmp
mov
xchg
mov
cmp
mov
int
shrl
xchg
in
adc
test
cltd
adc
rcrl
xchg
adc
arpl
pop
sbb
add
jae
in
lahf
mov
mov
xchg
xor
les
cwtl
mov
in
pop
add
sbb
add
mov
and
test
shll
fdivr
add
xlat
mov
rcrl
mov
ret
repnz
fs
out
dec
push
xor
jp
jg
stc
movsb
adc
jbe
xchg
lods
mov
ja
mov
pop
loop
dec
scas
fs
sti
in
lock
jp
daa
mov
mov
lcall
sarb
jle
xor
mov
xchg
push
loope
xchg
add
outsl
sahf
push
ret
dec
jg
mov
lds
sti
adc
push
daa
imul
mov
dec
movsb
push
pop
es
mov
pusha
jge
xlat
andb
sub
and
faddl
aaa
sub
sbb
adc
add
es
sbb
xor
adc
out
add
js
outsb
gs
sub
rolb
xor
jp
andl
push
push
inc
outsl
mov
dec
adc
nop
xchg
mov
test
call
out
bound
sbb
and
lods
mov
jnp
pop
or
add
sub
rcrl
add
out
andl
push
gs
shll
cmp
cmp
cmp
pop
jecxz
and
mov
test
push
inc
imul
pop
pushf
adc
clc
data16
cmp
movl
lds
add
in
jge
lret
add
jg
inc
mov
cmp
push
cmp
movsb
leave
pop
adcb
dec
pusha
shlb
iret
fnstcw
addb
mov
xchg
jmp
movsb
cld
inc
and
mov
push
je
push
frstor
sbb
xchg
fildl
jae
addl
mov
dec
pop
sarl
sbb
mov
lret
add
pop
sub
dec
aaa
push
pop
rcrl
jle
sbb
bound
mov
lods
repnz
lret
movsb
test
sub
lahf
jae
sub
dec
xchg
xorb
out
sub
out
mov
ret
push
cmp
pop
mov
or
lods
cmp
shlb
aas
fwait
ljmp
pop
int3
fwait
outsl
add
clc
xor
xchg
les
xlat
mov
aaa
imul
movups
aam
jle
mov
dec
sub
xchg
sub
pop
add
xor
add
push
sub
pop
xchg
jnp
inc
sbb
int
add
movsl
dec
cmp
jecxz
stc
add
cwtl
mov
outsb
add
xchg
les
mov
dec
mov
shr
sti
std
test
xor
dec
add
sbb
cmp
cmp
test
mov
fiadds
dec
add
hlt
jle
cld
dec
jno
cmp
arpl
and
inc
les
fildl
cwtl
pop
and
pop
push
mov
xchg
scas
sarb
test
sbb
hlt
push
adc
push
ja
js
aas
mov
cmp
sbb
imul
adc
inc
lock
cmp
pusha
mov
sti
mov
mov
pop
loope
into
rorl
out
add
lret
xor
add
jo
or
stos
popf
add
mov
xor
mov
add
mov
std
call
sub
adc
outsb
outsl
nop
xchg
pop
add
enter
lods
add
mov
sbb
mov
dec
fs
inc
add
mov
and
adc
jl
js
xchg
mov
mov
mov
xchg
lret
and
dec
xchg
and
dec
xchg
push
not
xchg
rclw
mov
stos
and
sahf
sbb
je
call
xchg
mov
sbb
sub
pop
add
jle
or
shlb
mov
es
pop
xor
add
sub
cwtl
cltd
push
push
fiadds
int
adc
out
negl
and
add
jl
jne
js
push
test
inc
adc
loope
and
adc
add
lahf
push
mov
dec
cmp
cld
jb
add
xchg
in
pusha
fsubr
add
jmp
and
aad
jnp
push
inc
sti
adc
mov
ss
mov
dec
push
dec
xor
in
cmpb
cli
scas
pop
add
push
add
cwtl
push
xor
ret
adc
add
jge
add
lret
inc
das
orl
cmpsb
out
outsl
add
dec
repz
cmpb
mov
popf
inc
add
shlb
jns
imul
mov
mov
sahf
shr
sbb
mov
or
or
and
push
jnp
xchg
or
inc
add
mov
das
xlat
inc
js
incb
and
cmp
pop
shlb
mulb
add
ds
mov
add
mov
inc
test
or
adc
popa
rorl
iret
sbb
imul
fdivrp
dec
cmc
add
das
sbb
int3
inc
scas
loopne
lock
daa
lret
testl
mulb
shlb
addb
sti
push
jns
aam
testb
inc
scas
jmp
pop
sub
inc
pop
stos
fwait
xchg
mov
add
sbb
not
push
adc
popf
rorl
add
xor
in
mov
mov
jge
jb
popa
enter
and
aad
inc
mov
or
mov
cli
xor
xchg
popa
or
lea
out
mov
es
mov
or
add
mov
dec
pop
stc
push
add
in
and
add
sti
xorb
loope
mov
inc
jg
add
jecxz
testb
popa
movsb
inc
cld
mov
test
mov
std
jns
pop
add
dec
sbb
rcrb
jbe
cli
mov
orb
mov
cld
mov
cmp
jnp
test
stc
mov
inc
out
xchg
shll
das
daa
mov
mov
rcrl
jmp
push
rcrb
leave
or
pop
xor
cmp
jo
lock
int
subb
test
add
add
pushf
sarl
into
xchg
mov
aas
adc
pop
push
xchg
sub
pop
lret
out
out
inc
and
adc
xor
cwtl
and
cmpsb
sbb
lock
arpl
add
fucom
cmp
leave
mov
popa
loopne
sbb
cmc
xor
jb
cmp
mov
jg
rcll
test
sbb
sbb
lds
push
add
add
outsl
add
in
add
dec
dec
cmp
pop
mov
jae
push
push
xor
in
rolb
dec
enter
rorl
sti
adc
xchg
push
incl
push
push
lahf
jno
pusha
mov
add
adc
push
int3
shlb
mov
popf
or
lret
arpl
jg
fidivl
jmp
add
jne
lret
out
mov
push
out
nop
movsl
cwtl
imull
sub
mov
in
add
lret
mov
jae
add
adc
jns
test
pop
cld
pop
aaa
add
les
pop
and
add
loopne
mov
push
ficoms
pop
dec
sbb
pop
mov
push
rcll
xor
mov
xor
into
mov
pop
cmp
das
test
inc
or
int
clc
mov
or
negl
xchg
jnp
into
pop
leave
ja
daa
adcb
mov
jp
jg
dec
or
rcll
sub
mov
xlat
scas
repnz
adc
stos
and
loop
cmp
inc
in
inc
pop
mov
add
jl
pop
mov
idivb
faddl
addb
mov
cmp
cmp
add
xor
enter
jo
icebp
sbb
fdivs
in
test
adc
adc
jo
jae
stos
divb
sbb
nop
add
push
cmp
leave
in
add
lods
sbb
std
inc
test
mov
add
add
add
mov
stos
inc
cmc
sbb
mov
loop
inc
sarb
cmp
iret
inc
rorb
out
xor
cld
and
cmp
xchg
ds
push
cmp
xchg
call
aam
add
or
add
xchg
sub
repnz
lcall
add
mov
sub
rcr
ret
sbb
xor
inc
add
push
hlt
jge
or
mov
pop
lock
xor
cmpsl
loop
insb
sbb
insl
add
dec
jbe
hlt
add
jb
adc
rorl
daa
repnz
aaa
add
pushf
js
dec
insl
stos
mov
and
loopne
cmp
mov
gs
add
mov
mov
mov
jne
dec
enter
mov
sbb
cli
add
push
sti
add
into
pop
inc
lret
gs
sar
shrl
jl
jo
pop
in
call
insb
jne
roll
je
js
test
mov
iret
xor
jle
mov
mov
and
andb
mov
sub
cmp
jns
fidivl
pop
adc
mov
xor
arpl
inc
mov
add
test
jl
xor
mov
imul
call
pop
or
push
fsub
add
loopne
lock
test
dec
sti
add
mov
dec
and
pop
ja
mov
and
rcl
cli
lods
arpl
add
daa
xchg
fmull
dec
mov
add
orb
cmc
xor
sbb
push
icebp
les
adc
mov
push
mov
mov
add
sub
jg
jge
or
push
inc
add
mov
stc
jbe
in
mov
sbb
xor
clc
add
in
lahf
adc
and
add
inc
arpl
test
gs
push
mov
add
xorl
add
mov
or
sub
mov
js
sbbl
push
cli
mov
dec
mov
inc
shl
jns
out
decl
fnsave
fsubrs
movsl
jecxz
and
inc
pop
fidivl
jb
mov
sub
dec
inc
jle
xor
pop
cmp
pusha
mov
cwtl
ret
jae
test
cmp
add
add
push
add
stos
jnp
pop
jecxz
ret
inc
adc
pop
insw
add
outsb
dec
add
adc
adc
test
je
ret
add
lcall
inc
xor
pop
push
sub
push
adc
inc
adc
dec
sbb
imul
mov
out
adc
std
icebp
add
adc
cmp
push
daa
out
jo
cs
pop
pop
hlt
jnp
add
mov
cs
les
cmp
push
jg
push
and
sbb
pop
xchg
shlb
xor
ret
or
fcmovb
test
jge
mov
add
jne
pop
enter
push
cmp
imul
mov
xor
mov
jp
jge
inc
ss
mov
sbb
arpl
dec
outsb
push
push
and
sbb
push
add
mov
xchg
adc
cli
rcrb
mov
out
sub
call
rcrb
enter
mov
sbb
ret
out
test
dec
sub
mov
sti
std
int
stos
bound
scas
shlb
xor
outsb
les
imul
pop
xchg
adc
popa
and
stos
aas
cld
sub
adc
jb
push
push
mov
inc
je
imulb
mov
xchg
add
push
sbb
adc
fstpl
insl
mov
pop
mov
or
aaa
mov
jmp
mov
sbb
jp
xor
xchg
out
sub
inc
test
push
push
test
push
sbb
sbb
vmovaps
addr16
and
out
sub
or
sbb
sub
pop
incb
lret
adcb
daa
subb
adc
mov
and
icebp
ret
scas
sbb
push
mov
mov
rcll
add
push
mov
jl
inc
aas
mov
fiadds
pop
in
loop
cmp
lret
mov
sub
cmp
fisubl
push
xchg
or
sbb
sti
and
xchg
push
stos
cmp
jp
pop
mov
mov
sbb
xchg
loope
cmc
fiadds
mov
imul
addb
and
push
or
jle
jle
pop
popa
or
jae
loopne
jnp
dec
adc
call
scas
int3
loop
adc
mov
leave
movsb
mov
lret
jg
cmp
cwtl
movsb
sub
nop
xor
xor
aaa
add
daa
mov
jecxz
and
movsb
mov
adc
fstpt
nop
movsl
fdivrl
sbb
ljmp
aaa
jg
rcr
ss
bound
xor
xchg
scas
clc
sub
aad
fs
orb
and
arpl
dec
push
xchg
xchg
and
repnz
lods
sbb
scas
ja
jmp
push
mov
sbb
add
insl
aas
push
loop
loope
push
mov
loopne
mov
adc
cmp
sub
cwtl
andb
pop
je
add
inc
push
xor
cmp
mov
add
mov
popa
inc
cmp
pop
push
mov
pop
pop
or
adc
scas
in
lahf
jno
add
xor
mov
lahf
and
adc
mov
mov
xor
add
or
or
mov
adc
cmp
adc
cs
nop
outsl
addb
jae
cmp
pop
jp
rorl
flds
fbld
sbb
push
xchg
xchg
xor
sbb
inc
jb
loop
sbb
sub
xor
push
mov
loop
xor
jp
out
jne
push
mov
push
std
cmc
cltd
sub
ret
xchg
je
sbb
xor
push
int3
out
stos
mov
inc
jp
jg
pop
sbbl
dec
jp
imul
sbb
incb
lock
idivb
xor
add
push
out
push
incb
push
inc
xor
sbb
test
cmp
or
cltd
fisttpl
or
outsb
lahf
mov
pusha
inc
cmp
and
pop
xor
mov
mov
test
test
xlat
rcrl
mov
mov
loopne
push
enter
stos
adc
inc
ja
pusha
dec
and
ss
fistpl
add
xor
int
div
inc
fs
push
iret
xor
dec
loope
or
sti
mov
inc
xlat
sbb
bound
rclb
test
inc
cmp
mov
aam
test
cmp
lret
cmp
gs
dec
cmp
fs
arpl
xor
inc
fwait
lods
iret
add
sbb
add
xlat
mov
out
jge
jo
loop
mov
push
jnp
lock
and
cmp
sti
adc
pop
jno
xchg
test
add
out
addb
addr16
jg
xchg
cmpsb
lds
inc
push
lret
xchg
mov
pop
insb
outsl
cli
jbe
mov
insb
loope
es
sbb
cmp
imul
push
inc
sbb
mov
scas
sub
jp
insl
push
out
add
divl
and
adc
xor
mov
aaa
pop
push
bound
sahf
lock
shl
jbe
sub
and
mov
and
es
jg
mov
insb
mov
push
push
mov
out
jge
dec
pop
jbe
or
lods
inc
aam
sbb
rorl
outsb
std
popa
test
pop
mov
or
pop
add
sarb
incb
fidivl
mov
and
mov
je
xor
pop
add
mov
or
sub
pop
rcrl
xor
ds
mov
and
xor
pop
jb
jno
mov
sub
xor
or
push
add
arpl
mov
and
pop
test
mov
and
lahf
xchg
inc
fdivl
adc
ja
ret
push
shlb
add
pusha
add
rcrl
loope
add
pop
mov
mov
imul
mov
pop
aaa
add
jbe
adc
xchg
or
hlt
es
inc
daa
adc
mov
fwait
push
xor
pop
xchg
mov
fldenv
add
or
lods
sbb
aam
mov
pop
mov
xor
pop
sbb
push
fdivl
jecxz
push
xor
xchg
icebp
and
ja
jg
fcom
aaa
popa
add
jbe
shll
mov
cmp
or
popf
or
hlt
xchg
icebp
adc
cwtl
xchg
cli
add
sub
cs
hlt
sbb
inc
fmull
adc
and
into
dec
movsb
or
pop
or
in
jns
adc
sbb
jmp
ret
loopne
jnp
cmpsl
jecxz
sahf
xor
sbbl
dec
lret
cmc
inc
je
xchg
mov
test
roll
icebp
pop
pop
ret
and
and
adc
inc
sub
jmp
lret
xor
dec
inc
addb
mov
pop
mov
jb
addr16
add
and
es
and
ja
sub
cmp
cmp
push
jnp
test
jmp
std
pop
sbb
mov
mov
and
insl
sub
add
notl
jge
out
pop
out
mov
das
xor
out
mov
fldpi
fsubrl
pop
arpl
out
outsl
add
lods
pop
inc
push
sbb
push
pushf
xor
rclb
jmp
lods
xor
xchg
mov
repz
sub
push
xchg
repz
loop
hlt
fs
cltd
add
mov
sub
daa
into
fnstcw
xchg
ret
mov
in
jmp
add
imul
loop
enter
jp
shrl
xor
add
or
sbb
cmpl
hlt
jmp
inc
jecxz
sbb
push
popl
mov
stc
push
jb
cmp
and
pop
jle
lock
pop
stos
sub
push
scas
loop
gs
test
dec
scas
jns
adc
jmp
nop
mov
out
out
cmp
mov
push
jp
pop
sahf
test
loop
inc
add
and
xor
lcall
push
add
cmpl
in
ja
push
subb
pop
jg
subl
jmp
outsl
and
stos
mov
inc
push
adc
decb
inc
repnz
sbb
inc
js
adc
imul
add
sbb
xor
lock
pop
jnp
inc
or
or
mov
cmp
push
pop
pushf
sub
mov
add
pop
or
mov
test
push
scas
shlb
jge
scas
imul
loope
adc
mov
out
mov
pop
cmp
sub
mov
js
sub
and
fiadds
out
test
mov
sbb
lcall
and
sub
cmp
cmc
icebp
sbb
pop
cmp
fwait
sbb
adc
dec
in
add
cmp
mov
add
adc
sub
push
dec
and
ret
test
dec
dec
inc
xchg
aad
sbb
and
sub
ss
inc
sbb
out
mov
std
lcall
fdivrl
or
xor
inc
add
movsb
cmpsb
jp
fs
add
push
sub
push
sbb
les
test
pop
movsb
imul
lods
sub
loopne
jne
push
or
add
sbb
push
lods
cmp
enter
mov
add
add
call
add
arpl
add
mov
out
inc
clc
cmpl
ljmp
jl
adc
pop
jg
jno
and
repnz
push
lock
add
mov
call
push
jne
xlat
push
and
ret
push
fstps
inc
ret
xor
jp
test
test
push
fcmovne
test
and
inc
jecxz
lret
fistpll
mov
push
pop
push
nop
lods
sahf
inc
or
das
dec
test
pop
cmc
dec
daa
pop
sbb
loopne
cmp
sti
je
sti
push
inc
ljmp
fcoms
cmpb
scas
add
dec
fdivr
adcb
mov
add
call
and
shrl
push
inc
repz
sahf
jp
sbb
xchg
mov
cmp
shrb
gs
and
out
leave
sbb
leave
movsb
mov
test
aas
mov
xor
xchg
push
sbb
sbbl
dec
ja
and
mov
lods
ret
call
mov
push
mov
cs
sbb
add
adc
sbb
push
cwtl
adc
cmp
in
testb
in
pusha
loope
cmc
adc
mov
jle
sub
aas
sbb
clc
jns
stc
notb
cmp
cmpsl
inc
les
push
push
mov
roll
test
movsb
add
cmp
xor
xorl
lret
xchg
adc
and
cmc
lds
jp
jle
aad
xor
mov
cltd
xchg
stos
lock
xchg
add
sub
cltd
sbb
mov
jle
jo
mov
dec
cmpl
out
lahf
aam
in
ljmp
adc
scas
xor
and
call
movsb
mov
adc
mov
and
sbb
inc
pop
mov
into
push
pushf
aaa
cmp
bound
push
inc
mov
and
add
add
rclb
cmpsb
jbe
or
inc
push
adc
inc
mov
je
sahf
das
cmp
les
or
or
and
andl
mov
pop
push
incl
pop
sbb
int3
cld
mov
int3
dec
adc
cmp
ret
cmp
rcrl
fs
pop
or
adc
in
add
xor
adc
jg
pop
ds
pop
sbb
icebp
in
or
divb
mov
sub
mov
jb
shlb
out
bound
add
mov
les
jb
xchg
dec
add
in
sbb
xchg
loope
mov
movsb
loop
cmc
or
jp
sub
hlt
cmp
sub
push
lods
inc
xchg
mov
push
sub
lds
dec
or
add
insl
aas
dec
mov
and
and
jo
test
and
or
mov
dec
mov
jne
shrb
fs
xor
mov
jnp
addr16
das
cmpl
cmp
loope
jne
shll
push
adc
pop
dec
push
jo
sbb
and
add
aas
add
jp
adc
cs
push
aaa
frstor
inc
and
mov
mov
push
jp
xchg
lahf
cmp
shlb
push
sub
cmp
sbb
dec
in
movsl
cld
mov
push
inc
jp
scas
andb
push
pop
sar
ss
dec
or
icebp
out
int3
pop
xlat
rcrb
cmp
or
mov
inc
mov
pop
push
jmp
and
sbb
fst
inc
mul
imul
cmp
popf
fwait
cmc
and
pusha
cltd
and
jmp
mov
jns
fildl
movsb
inc
jno
sub
xor
loop
pop
repz
mov
add
imul
clc
les
outsl
inc
inc
lods
and
xor
or
jp
int3
push
std
or
add
icebp
test
cmp
adc
mov
add
mov
add
cwtl
jbe
jmp
scas
add
inc
push
sahf
rol
push
add
adcl
add
jle
cs
mov
test
iret
rcr
sub
fdivrs
nop
popf
or
lds
pusha
add
add
adc
add
mov
or
movsl
test
dec
adc
pop
sub
cmpb
repz
mov
mov
push
pop
gs
cmp
lods
cwtl
add
adc
jg
push
xchg
rclb
add
jo
rorl
sub
adc
je
imul
push
mov
add
scas
stos
das
mov
add
add
fstps
test
inc
sub
shlb
das
push
adc
jne
addl
in
lock
rolb
cmp
sbb
leave
dec
xchg
daa
add
push
inc
mov
pop
sti
jmp
shrb
push
lock
sub
mov
test
jp
stc
icebp
scas
adc
pop
pop
add
fucompp
inc
cmp
ds
sbb
sbb
repz
clc
lock
add
aam
inc
and
inc
loop
xchg
das
into
js
mov
sub
in
mov
inc
add
pop
in
cmp
mov
inc
icebp
dec
ja
push
mov
and
lods
cld
ds
xchg
aas
xor
mov
fildll
cmp
pop
icebp
out
pop
adc
aam
test
js
dec
les
jle
push
adc
in
mov
or
ret
lods
addr16
xchg
enter
outsb
mov
or
and
aas
inc
pusha
mov
pop
enter
aaa
adc
scas
xchg
push
mov
sub
xor
rolb
popa
mov
and
add
add
lcall
sbb
pop
out
ret
mov
push
sub
cmp
std
int3
mov
sub
and
shll
xor
jp,pt
rcl
cmp
std
pop
jo
jbe
stos
adc
jae
xchg
outsl
cmp
add
push
loop
rorb
jecxz
add
iret
scas
sub
sbb
cmp
pop
adc
xchg
push
popf
loop
outsl
lret
into
das
mov
sub
out
mov
fcoml
movsb
sub
inc
cmc
mov
push
push
cmpsl
test
insl
mov
push
lods
test
mov
sub
sbb
popa
dec
mov
lods
dec
adc
sbbb
or
ret
out
mov
push
xor
push
outsl
dec
and
ret
outsl
cmp
imul
stos
insb
outsb
adc
sub
xchg
mov
daa
push
pop
sti
jp
adcl
mov
mov
nop
sub
or
daa
inc
std
jne
aad
scas
mov
imul
add
cltd
loop
andl
hlt
jg
packuswb
loop
cmp
and
sbb
adc
or
mov
cmp
pushf
mov
mov
and
dec
mov
aam
mov
jns
loopne
xor
push
and
mov
cs
xchg
addl
jecxz
mov
lahf
sbb
jle
cld
divl
fwait
add
cmp
mov
pop
add
cltd
mov
cmp
sbb
cmp
mov
in
xor
add
adc
insl
mov
adc
xor
mov
out
stos
add
mov
inc
dec
or
add
jbe
stc
jecxz
add
out
jmp
mov
xchg
add
xor
addb
fwait
xchg
popf
add
arpl
jecxz
xor
cmp
inc
push
sub
xor
lahf
popf
ret
or
pop
pop
out
push
sub
add
push
in
or
icebp
fldl
push
or
gs
push
adc
ret
imul
gs
lcall
xchg
sub
imul
subb
das
pop
ficoms
pop
add
mov
push
xchg
pop
jge
in
jecxz
adc
add
push
out
enter
mov
add
ret
add
dec
pop
ss
sub
and
arpl
add
popa
fstpl
sbb
inc
subl
push
mov
jno
shrb
mov
je
and
repnz
dec
aam
add
aas
insl
shll
inc
mov
adc
cwtl
es
push
add
sbb
sti
mov
aaa
rorl
pop
pop
cltd
adc
imul
add
cwtl
xor
mov
lods
sbb
inc
or
cli
cmpsl
and
ss
mov
mov
and
aas
inc
or
xor
cmc
inc
xor
jnp
push
sbbl
imul
xchg
or
push
lret
push
push
add
xchg
shrb
shll
into
enter
repnz
push
jnp
ret
hlt
and
subb
out
in
ds
push
add
int
in
dec
add
mov
dec
add
xor
cmpsw
ja
inc
add
mov
es
mov
popf
in
sbb
cmp
add
jnp
jne
or
mov
dec
ljmp
mov
addb
sub
popa
lcall
jne
hlt
xchg
sub
and
iret
repz
fmull
js
addr16
xor
scas
out
add
or
mov
or
sub
sti
adc
dec
pusha
leave
loopne
add
mov
cmp
add
xor
paddb
inc
fildll
movsl
inc
sub
push
xchg
xchg
nop
jns
repz
scas
in
add
cwtl
adc
aaa
or
cmp
jo
orb
movsb
loop
sub
push
rcll
xor
and
cwtl
mov
divb
in
stos
add
iret
xchg
dec
add
testb
sahf
lcall
sbb
adc
test
cmpsl
stos
shll
push
sbb
rcrb
pusha
fwait
xor
or
test
sbb
into
or
push
adc
add
fisttpl
add
cmp
xchg
xchg
dec
imul
icebp
movsb
dec
and
in
adc
stos
mov
pop
sub
divl
ja
jmp
fnstcw
popa
lea
dec
jge
mov
mov
stos
adc
inc
inc
adc
aam
sbb
push
mov
fucom
clc
or
mov
mov
lods
movsl
adc
add
dec
out
repz
cld
test
fdivr
wrmsr
out
add
outsl
xor
shll
and
jne
test
mov
push
fcmovu
add
movl
int
insl
pusha
shlb
lret
adc
enter
mov
dec
test
add
jne
xor
jno
or
ja
jae
or
and
add
mov
add
pop
adcl
mov
test
stos
add
mov
in
je
mulb
pop
out
pop
repz
sub
mov
pop
mov
push
cmpsl
scas
stc
push
add
mov
pop
add
fdivs
fldl
orps
inc
and
add
lret
movsb
adc
push
add
jae
cmp
dec
iret
ficomps
lods
xchg
subb
aaa
push
sbb
jae
add
push
mov
dec
insl
sub
mov
jno
test
dec
cmp
subb
xchg
mov
fsubl
int3
push
pop
push
clc
xchg
cmp
filds
xchg
dec
sbb
inc
lcall
cmp
int
sub
xchg
stc
jg
add
or
dec
jecxz
mov
rolb
int
add
pop
pop
inc
ja
fucomi
loopne
ret
xor
lcall
neg
mov
add
dec
mov
sbb
aas
push
lock
insb
lods
cmp
add
js
nop
sti
sub
add
pusha
add
add
and
cmp
sbb
incb
inc
ffreep
mov
addl
sarl
and
adc
and
inc
cmpsl
cmp
inc
add
repnz
lret
pop
xchg
sbb
adc
adc
stos
bound
add
xlat
movsb
inc
das
and
lcall
rolb
mov
mov
mov
adc
mov
jne
inc
add
adc
mov
add
arpl
mov
jge
add
outsb
jmp
inc
push
xor
aaa
mov
rolb
adc
aad
andl
jnp
insl
add
arpl
add
push
adc
cwtl
or
shrl
shll
inc
push
lods
add
and
test
repz
add
add
subl
inc
in
mov
sbb
sbb
ficompl
aaa
imul
inc
nop
out
add
bound
fsubrs
loopne
filds
cmc
mov
nop
xchg
mov
push
mov
xchg
xor
aad
jp
add
inc
xchg
push
push
add
divl
inc
pop
jno
jle
add
dec
mov
inc
add
cli
lcall
adc
test
sti
xor
pop
push
add
int
dec
lcall
lods
xchg
jns
adc
add
es
add
iretw
insb
mov
add
dec
mov
inc
sbb
inc
test
sub
mov
mov
cmp
shll
mov
push
or
lea
dec
xor
and
scas
je
jecxz
xor
sbb
pop
addr16
xor
jge
add
ret
ljmp
push
add
jnp
shl
sub
ss
iret
lock
in
loopne
push
fsubs
mov
scas
xor
lea
push
add
cltd
adc
ds
add
scas
and
add
daa
movsl
je
lock
pop
bound
inc
out
adc
cmp
cwtl
ljmp
popa
pop
xor
sub
sbb
or
roll
add
in
and
shll
sub
insl
sbb
push
ja
rcr
cmp
inc
fmull
xor
sub
rcll
aad
pop
repnz
xor
roll
push
mov
xchg
xchg
add
inc
scas
test
add
imul
mov
add
jge
popa
loop
sbb
into
xchg
outsb
lahf
jp
cwtl
sarl
stc
sbb
testl
loope
roll
mov
mov
jp
sbb
rcll
or
mov
int3
sub
mov
add
jg
jnp
cmp
std
stc
stos
xchg
jmp
mov
sbb
dec
add
cmp
outsb
mov
mov
mov
test
int
mov
or
cltd
mov
lds
cmp
js
mov
arpl
inc
mov
call
lret
push
mov
loop
or
or
fs
gs
sub
cwtl
lret
cli
das
xlat
lahf
dec
push
pop
fsubr
les
jp
sarl
scas
enter
jae
xchg
adc
scas
mov
xor
setle
repz
test
js
or
ret
call
nop
mov
pop
jmp
adc
jp
outsl
mov
popa
adc
mov
add
jne
sbb
cmp
or
sbb
push
nop
cmp
addr16
les
mov
jbe
rcrb
inc
sub
cld
stos
and
out
enter
ja
loopne
and
and
clc
movsb
xor
add
cld
xor
cmp
mov
push
ja
mov
push
clc
test
add
add
sbb
or
xor
jo
inc
or
test
es
js
insb
adc
test
dec
fcompl
add
mov
push
xchg
loopnew
sbb
aas
xor
mov
fs
aaa
ret
mov
stc
mov
xchg
mov
xchg
fwait
add
outsb
pop
or
shl
jns
stos
jae
jb
ret
mov
es
mov
or
filds
adc
xchg
sbb
cmc
jns
jl
xchg
mov
and
leave
dec
xor
pop
xchg
hlt
mov
adc
jecxz
mov
adc
or
or
daa
adc
mov
fdivs
scas
cmp
xchg
adc
je
adc
push
or
aas
rcrb
jp
mov
xchg
aam
and
inc
cmp
popl
scas
iret
jp
pop
jb
jb
cmc
mov
xor
and
or
xchg
adc
test
sbb
pop
push
outsl
cmp
jmp
shll
xlat
and
push
loop
out
mov
icebp
jbe
inc
andl
xchg
jp
push
jb
movsb
xchg
mov
cmp
test
cltd
stc
or
mov
and
arpl
mov
cmp
add
xor
ficoms
int
cmp
gs
sub
cmp
sub
lods
fldcw
xor
cmpsb
push
es
rcl
enter
test
cmp
sbb
out
cmc
jmp
out
lods
xchg
xorb
aad
add
out
xchg
inc
sub
or
xor
and
pop
xor
cmpsl
add
add
jmp
pop
nop
xchg
sub
clc
test
jg
sub
mov
insl
scas
popa
movsb
adc
jbe
nop
or
and
pushf
jl
ret
in
mov
stos
dec
push
adc
or
loope
dec
inc
pop
sbb
add
mov
gs
nop
lfs
cli
pop
jecxz
insb
shlb
mov
std
roll
or
jge
rcl
loopne
cmp
add
addl
addr16
mov
test
adc
xchg
in
lcall
xchg
pop
imul
fisubrs
jg
ret
mov
pop
std
inc
leave
jl
or
je
ds
stc
aad
adc
fcmovb
bound
cmp
adc
ret
daa
test
ljmp
sbb
adc
fs
xchg
imul
cmp
ret
mov
push
nop
pop
lea
fisttpl
addb
imul
adc
out
or
mov
and
add
fs
idivl
test
adc
jmp
insl
and
cmp
add
mov
mov
cmp
mov
add
loop
dec
inc
das
push
mov
repz
out
ja
jmp
dec
pop
mov
add
popa
mov
hlt
mov
jne
inc
dec
adc
push
leave
push
inc
mov
rorb
cmp
add
insl
jno
inc
sub
rcrb
scas
pushf
cmp
push
cmp
nop
shll
sub
lret
sbb
push
push
arpl
mov
insl
clc
mov
psubsw
int
cmp
add
cmp
adc
loopne
shrl
fidivs
popl
int
jns
add
dec
in
add
stc
inc
adcb
add
push
jle
dec
jp
push
mov
jno
xchg
pushf
add
pop
add
ja
jbe
jmp
fwait
push
je
scas
add
mov
sbb
inc
jb
daa
out
xchg
scas
inc
adc
xlat
popf
mov
inc
lds
jge
or
cmpsb
movsb
clc
outsl
inc
add
xchg
push
jg
push
cmc
add
push
and
add
xor
mov
add
cmp
sti
xchg
mov
add
lds
add
sub
and
add
jns
cmp
das
data16
gs
cwtl
sbbb
mov
sbb
and
cli
sub
add
add
mov
pop
in
call
inc
and
movsb
cmp
xor
cmp
add
fcmovu
addr16
xlat
add
and
loop
or
sub
ja
orl
mov
rcrb
push
add
xor
mov
shr
lcall
ror
and
cmp
xchg
sbb
jmp
inc
add
shll
and
jmp
ret
out
insl
aaa
pop
ss
je
and
gs
cltd
aad
stc
test
mov
ja
and
sub
mov
lock
lds
lahf
add
fsubrl
push
cmc
rcll
and
mov
sub
jbe
pop
negl
mov
jno
out
add
add
xor
and
jge
mov
clc
shrl
add
xor
pushf
fildl
arpl
je
pop
add
jg
jge
in
xchg
repnz
push
and
lahf
jns
popf
pushf
ja
mov
test
bound
je
cmp
or
add
fwait
loopne
mov
or
lahf
mov
xor
add
sarb
jno
insl
mov
ja
xchg
jecxz
xor
add
adc
push
add
pusha
mov
adc
cmp
sbb
fsubs
insb
in
rolb
and
dec
add
test
add
iret
cmpsb
xchg
add
lcall
outsl
fs
dec
hlt
adc
pop
xor
adc
mov
cmp
pop
sub
jo
dec
add
insb
or
test
jle
mov
jge
repz
sub
in
xchg
into
inc
shll
ret
icebp
in
jmp
test
imul
dec
add
xor
dec
inc
pop
aaa
fsts
lea
mov
mov
daa
mov
test
mov
cmp
out
cmc
movsl
daa
outsb
xlat
add
imul
mov
and
cltd
sbb
lock
ret
repnz
mov
push
push
jg
inc
push
add
mov
movsl
add
shlb
pop
add
in
dec
test
sbb
add
daa
inc
add
enter
in
adc
pop
imul
sbb
xlat
cld
xchg
cli
cmp
inc
pop
out
aam
cmp
testb
mov
popf
jl
jecxz
cmp
push
rclb
push
nop
and
mov
mov
test
mov
adc
or
sub
js
test
sub
add
rcrl
adc
mov
or
out
mov
loop
inc
xchg
add
adc
call
addb
in
mull
jge
fwait
add
jl
mov
rorl
sub
add
lea
and
arpl
in
stc
mov
push
inc
mov
dec
fsubr
cwtl
pop
xor
daa
add
out
int
mov
sahf
fildll
ljmp
mov
cli
adc
sbb
aad
stos
sbb
inc
add
lods
sbb
mov
mov
dec
icebp
shrb
ret
jnp
inc
sub
add
test
repz
add
lods
daa
dec
push
hlt
int3
aas
aam
jbe
test
jne
add
mov
loope
or
aad
add
xlat
jp
addr16
add
dec
inc
inc
xchg
loope,pn
adc
jle
lret
add
loop
sbb
scas
adc
mov
dec
cmp
ret
aas
ret
es
roll
push
push
mov
sbb
lods
xlat
aam
add
int
out
xchg
orb
in
ds
sbb
iret
pop
add
jb
or
out
bnd
in
jl
mov
jno
push
mov
test
out
aam
test
add
adc
fs
fstp
lds
add
dec
insl
pop
add
cwtl
mov
and
bound
lahf
pop
mov
clc
inc
movsl
cmp
cmpb
dec
rcrb
cmp
pop
loopne
shrb
int
add
adc
insb
jg
xorl
or
mov
sbb
add
aad
xor
sub
add
push
mov
add
lahf
sarb
sahf
cmp
mov
iret
scas
ret
inc
xorb
popa
arpl
jl
std
cmp
cli
add
mov
icebp
negl
dec
addb
hlt
push
sbb
daa
mov
dec
or
fldcw
pop
jmp
cltd
sarb
mov
push
sbb
dec
xor
std
pop
mov
xchg
add
cmp
lcall
dec
add
adc
int
sbb
int3
add
xchg
pop
adcb
mov
add
fcompl
enter
movsl
add
adc
xchg
aas
cmpsb
add
daa
jne
adc
test
push
cli
int3
add
lret
sbb
jae
sub
add
inc
xor
dec
inc
dec
cmp
das
repnz
lahf
cmp
pop
add
fidivs
imul
les
cmp
xor
add
aad
cmp
or
pop
add
testb
cs
and
add
inc
and
add
aaa
add
mov
shrl
xchg
les
add
cwtl
fcomp
sahf
pop
add
iret
scas
repz
in
out
pop
mov
add
mov
add
loopne
in
jne
pop
sub
and
and
shll
les
mov
xchg
add
js
leave
icebp
cwtl
add
jne
xor
subb
aad
ljmp
fcompl
add
sbb
aam
shrb
fsubr
shl
or
jp
add
jecxz,pn
xchg
fistpl
inc
stc
sbb
jo
mov
pop
push
and
mov
mov
cltd
ret
inc
scas
adc
add
rolb
outsl
push
shrl
int
pusha
fwait
adc
ds
jnp
push
jb
add
inc
xchg
or
dec
mov
fadds
stos
in
fists
jecxz
jns
mov
cmpsl
add
jl
cli
xchg
arpl
sbbl
jo
or
repz
inc
scas
mov
rcrb
cmp
adc
in
ds
add
inc
push
add
cmp
ret
inc
xchg
shr
std
adc
push
cmp
dec
pop
pop
and
les
je
imul
sub
subb
mov
jl
cli
xor
xor
imul
xchg
sub
shll
test
add
or
ret
fs
dec
inc
cli
aam
sbb
repnz
lcall
pop
add
add
mov
rclb
add
adc
cmp
dec
jae
shr
mov
popa
imul
cld
jle
xchg
pop
pusha
sub
aaa
sbb
sbb
ret
dec
sbb
mov
ss
pop
test
pop
rorb
movl
stc
inc
repz
or
lahf
stos
add
rcl
push
movsl
mov
roll
push
or
mov
inc
push
mov
addr16
mov
dec
sub
sub
add
pushl
jno
cmp
imul
pop
rcll
popa
or
dec
rol
xor
cs
in
stos
adc
sbb
or
pop
pop
mov
icebp
push
or
mov
and
mov
sarl
mov
jb
inc
jp
jmp
dec
addl
push
js
mov
add
xor
xlat
hlt
push
adc
lcall
cmp
sbb
mov
dec
jmp
js
push
jp
mov
add
sbb
sti
dec
scas
leave
pop
mov
test
loop
cmp
movsl
jge
test
icebp
mov
push
fdivrs
cmpb
sub
test
movsl
sub
inc
sub
sbb
leave
cmp
dec
xchg
test
sbb
inc
movsl
cmp
in
cmc
push
jno
insb
mov
sbb
mov
in
sahf
int3
cwtl
and
loop
filds
cmp
push
inc
pop
cmp
mov
lods
and
lret
or
ret
mov
pop
std
mov
mov
cmp
inc
jecxz
jmp
ret
pusha
and
cmp
aam
xor
mov
fildl
sbb
cmp
sbb
mov
loop
sahf
or
pop
in
sbb
ret
push
loope
sbb
gs
pop
pop
and
cs
xor
push
inc
dec
mov
mov
xor
adc
add
push
pop
mov
jg
out
xor
aad
sbb
mov
push
out
loope
jno
leave
scas
inc
divb
addr16
daa
adc
out
sbb
shl
cmp
sbb
imulb
xchg
divl
dec
mov
dec
jns
cmp
stos
sbb
pop
test
lods
fsub
push
sahf
aad
xor
rcl
mov
or
mov
es
movsb
daa
cmp
xor
sub
mov
lods
mov
frstor
xchg
xor
xchg
sbb
mov
test
cs
cmp
fistps
or
imul
cmp
xchg
sarl
arpl
mov
sbb
repnz
cmc
lcall
iret
dec
ds
jns
pop
inc
pop
inc
xchg
inc
sbb
mov
dec
sbb
lahf
fidivl
mov
or
mov
jecxz
inc
jmp
push
popa
out
jg
xor
jp
test
mov
cmp
lea
insl
ret
movsl
adc
movsb
jp
and
fs
ja
mull
or
sbb
xchg
xchg
jo
and
cmp
push
adc
stos
add
es
jge
mov
add
imul
add
pop
mov
xchg
rcl
mov
add
xchg
cld
jmp
in
xlat
add
mov
cmp
add
pushf
nop
dec
xor
lret
int3
xlat
jnp
cmp
das
lods
jmp
jecxz
shrb
xor
cmp
shl
lods
addl
sbb
sub
out
xchg
or
test
insb
inc
add
arpl
xorl
loop
adc
inc
xchg
hlt
push
jbe
aam
cli
push
sbb
imul
inc
add
iret
inc
in
jae
aas
shlb
xchg
ds
add
dec
xchg
inc
cmp
mov
xor
hlt
sub
cs
pop
cld
mov
adc
pop
and
cwtd
rclb
ljmp
ret
rcrb
clc
enter
xchg
das
sti
push
test
fiaddl
add
pop
js
cwtl
push
dec
int
cmpsl
push
jmp
rorb
cmp
mov
jge
mov
mov
mov
sub
jmp
add
sbb
xchg
add
es
ds
nop
lahf
mov
cli
out
cld
adc
es
push
add
jne
mov
inc
dec
xor
arpl
add
daa
aad
jno
add
and
pop
xor
add
adc
rorl
std
rcll
aad
clc
add
inc
stos
lds
mov
xchg
add
xlat
dec
out
and
movsb
cwtl
inc
dec
or
cli
push
inc
sub
mov
subl
mov
push
add
sbb
pop
jno
or
or
fsubrs
enter
cmc
faddl
rcrl
lret
add
out
xor
sti
and
add
sub
mov
or
add
mov
mov
and
out
lea
add
sub
add
and
cmp
xchg
ljmp
push
push
lock
xchg
syscall
sub
mov
add
movsb
jmp
divb
inc
incl
adc
and
push
push
jecxz
and
pop
dec
push
xchg
add
mov
and
cmp
jg
cmp
sub
add
jge
test
add
mov
int3
and
out
and
xorb
add
cmp
sub
jge
push
imul
sbb
mov
mov
sbb
pusha
into
mov
or
in
jge
call
mov
sub
mov
lock
sarb
cmp
cmpsb
xor
and
fs
repnz
dec
xchg
cmp
add
jle
mov
idiv
mov
scas
add
xchg
xchg
mov
arpl
je
std
sbb
and
sbb
add
xor
hlt
add
pop
cmpsb
loope
inc
fdivrs
add
jmp
in
add
stos
add
fucomi
adc
and
add
in
xor
mov
outsl
or
sti
xchg
pushf
test
add
out
jg
adc
dec
js
or
pop
mov
inc
ds
rcrb
xor
arpl
ss
sub
pusha
jl
adc
out
push
inc
jge
out
mov
mov
sbb
fcomps
sub
jb
iret
sub
adc
fdivrl
aam
push
cli
add
insb
inc
and
loop
cmp
adc
sub
rolb
popa
dec
and
mov
mov
inc
addr16
lock
add
pop
or
adc
cmp
mov
fists
pop
adc
packsswb
xlat
shrb
movsb
fwait
cmp
add
mov
jp
cli
and
sub
mov
sbb
lret
ds
inc
imul
shll
mov
aad
jno
je
insb
lret
lods
scas
test
aad
xchg
cmpsl
dec
lret
sbb
fldcw
call
push
sbb
int3
xchg
ljmp
inc
xchg
and
notl
sarb
xchg
dec
add
sub
hlt
push
mov
dec
push
xor
cli
jg
push
inc
scas
shll
ret
and
jle
shrl
pop
shlb
fsts
and
dec
mov
and
sbb
sbb
movsb
jg
sbb
sbb
jne
jp
push
rolb
add
inc
addr16
movsl
pop
adc
dec
adc
dec
sti
sbb
cwtl
lds
and
mov
repnz
sarb
mov
or
xchg
aaa
and
movsl
cmc
inc
mov
inc
mov
loopne
fsubr
sbb
mov
cmpsb
push
fldl
aas
or
pop
inc
loopne
sbb
in
adcl
fcom
jg
or
add
sub
inc
outsb
aas
addb
test
scas
leave
add
fdivl
mov
out
sub
and
jns
jle
out
inc
iret
clc
push
xchg
add
roll
int
inc
xor
ret
xchg
ret
and
add
mov
std
fisubs
arpl
push
pop
dec
pop
leave
into
mov
dec
divl
in
les
sub
lcall
add
cmp
dec
lds
jle
out
out
mov
add
or
mov
xchg
and
adc
cmp
adc
out
mov
lret
mov
cmp
add
nop
scas
mov
jl
test
popa
out
xor
outsb
jecxz,pt
in
fsts
mov
xor
inc
xchg
add
push
sub
add
lds
cmpl
mov
xor
fwait
sti
dec
mov
sub
movsl
sub
add
mov
cmp
jns
addb
pusha
mov
pop
nop
fcomps
adc
add
int
ds
sub
test
add
push
mov
add
fwait
mov
mov
outsb
add
inc
sub
subb
outsl
out
jns
sahf
repz
mov
lahf
and
add
loop
leave
enter
mov
pop
cmp
push
xor
add
xchg
sarl
sbb
dec
lret
loop
fimuls
inc
sub
add
test
or
push
xchg
mov
add
xchg
ficomps
cmp
test
pop
and
add
cmp
push
pop
fmull
mov
rorb
daa
dec
daa
leave
nop
adc
incb
jecxz
cltd
mov
add
sub
mov
cmp
repz
cmpsl
add
or
add
xor
adc
or
xor
xlat
inc
aam
mov
incb
add
subl
add
repz
addps
add
lock
pop
stos
cli
cmpsb
rcrb
lea
sub
adc
mov
push
sbb
mov
mov
fucomip
in
xor
cltd
imul
cmp
xor
xchg
shll
insb
mov
popa
cmp
fildl
in
outsl
jmp
pop
adc
in
into
loopne
rcll
mov
push
lock
movsb
xchg
inc
ljmp
xor
retw
icebp
mov
and
xchg
cmp
add
cld
cmpsb
xor
in
cmp
or
mov
ds
inc
call
out
cs
imul
repz
mov
cmp
mov
jno
addb
ds
mov
dec
pop
dec
bound
and
lds
jmp
sub
mov
xor
push
mov
scas
iret
mov
sar
fisttpll
push
add
mov
pusha
push
cmpsb
mov
imul
pusha
scas
inc
sub
add
or
sbb
and
addb
pop
mov
jae
xchg
or
add
xchg
loop
loopne
inc
mov
stc
mov
xor
dec
xchg
add
pop
bound
rcll
xchg
daa
aad
add
loop
adc
stos
xchg
fcomi
xlat
sub
int3
mov
and
test
rorl
and
xchg
add
and
fistps
xchg
ja
mov
imul
call
dec
push
dec
lock
rorl
test
jp
lock
mov
inc
sbb
into
arpl
cmp
es
inc
jmp
lret
push
add
shr
clc
adc
mov
repnz
int3
pop
add
fcmovnbe
xor
jmp
add
cmc
jne
dec
in
xchg
add
iret
nop
into
sub
gs
xchg
enter
sub
xchg
or
movsl
jl
stos
adc
sbb
mov
dec
dec
push
ror
mov
lcall
lods
popa
or
and
push
mov
xor
es
push
jmp
add
in
mov
dec
roll
icebp
cmp
jecxz
int3
dec
push
scas
push
and
loopne
fists
jns
inc
lea
mov
pusha
loop
js
test
lret
sub
cmc
stos
roll
sbb
dec
mov
jnp
cmp
incl
addr16
jo
mov
pop
xor
inc
enter
mov
add
data16
xor
in
pop
sub
aas
sub
add
adc
call
ret
add
adcb
jnp
add
ret
mov
lds
add
inc
fiaddl
movsl
gs
lods
jge
mov
jo
sub
test
addb
movsb
mov
push
roll
xchg
mov
or
mov
adc
ja
testb
nop
gs
in
ret
push
or
push
test
jp
test
call
xchg
shlb
mov
or
movsb
jmp
adc
int
test
roll
mov
shrb
call
out
adc
add
xchg
fisubl
or
inc
jne
sarl
pop
mov
push
or
or
into
jno
cmp
movsl
cmp
cwtl
add
add
inc
pop
ficoms
in
outsb
add
dec
out
fcmovnu
stc
nop
inc
xchg
stos
add
dec
loop
jns
add
aas
jle
add
dec
dec
into
jg
pop
out
insl
add
mov
cmp
add
push
arpl
in
mov
sub
mov
cmp
mov
jl
inc
mov
add
xchg
cmp
outsb
lods
add
fwait
paddb
jns
cmp
add
pop
xor
movb
lahf
cmp
rolb
xor
lcall
sub
int
or
jns
shrb
ja
daa
push
xchg
push
jg
pop
data16
stos
pop
add
bound
add
cs
mov
add
push
sub
add
leave
mov
add
inc
mov
iret
adc
and
cmpsl
sub
cld
sbb
mov
xor
mov
pop
pop
inc
in
arpl
lret
outsb
mov
aas
add
sahf
out
or
idivl
sbb
fnstcw
imul
enter
jo
int
add
mov
nop
lahf
movntq
mov
lods
xorb
movsb
mov
pop
data16
aas
fldl
jnp
lea
adc
in
adc
hlt
movsb
cli
cltd
pushf
idivl
push
add
mov
fdivl
add
loopne
iret
gs
inc
inc
lds
jle
sub
sti
cmp
icebp
arpl
aas
das
or
pop
daa
add
or
mulb
jmp
rorl
andb
jbe
dec
or
and
add
sbb
mov
popf
aas
mov
test
adc
fstpl
jge
xor
sbb
add
sub
int
pop
sbb
scas
mov
add
rolb
mov
mov
cld
aad
mov
sub
sub
stos
rolb
pusha
add
repz
mov
xchg
pop
insl
subl
rclb
sub
std
cmp
and
xchg
xlat
nop
inc
add
mov
out
cmc
in
or
add
xchg
cmp
lock
fs
mov
lods
push
movsb
push
lret
shrb
aas
fwait
xchg
dec
sub
mov
pop
xor
addb
inc
insl
mov
daa
add
pop
jne
jge
test
push
aas
add
lret
cli
xor
mov
mov
ds
add
jae
mov
test
int
mov
fdivrl
test
mov
call
mov
xchg
lds
shll
scas
mov
mov
mov
xor
or
aaa
arpl
ret
add
add
add
lods
xor
dec
daa
lahf
shrb
and
adc
clflush
leave
and
cmpsl
mov
sahf
pop
pop
js
pop
cmp
negb
adc
cld
inc
jne
aaa
jg
jp
pop
stos
sahf
sub
sbb
dec
addr16
mov
pop
cmp
xchg
nop
out
jge
xchg
lods
adc
iret
add
insl
mov
push
pop
rcrb
arpl
aad
jg
xchg
sbb
jg
sbb
gs
adc
adc
mov
cs
mov
xchg
mov
cmpb
or
in
int
sub
mov
lahf
das
pop
repnz
ret
imul
jb
add
sbb
sahf
push
outsb
dec
loope
pop
pop
sbb
bound
mov
cwtl
decl
push
dec
lds
sbb
mov
mov
jge
xchg
push
fnsave
fwait
add
sarb
hlt
mov
cmp
sbb
je
mov
push
add
inc
cmp
pop
aad
scas
inc
mov
and
xchg
and
leave
nop
inc
mull
pusha
mov
pop
icebp
pop
jecxz,pn
and
movhlps
sbbb
add
fcoms
push
dec
mov
sbb
mov
jg
fs
add
cmp
mov
cmp
xor
xor
jecxz
adc
lahf
cmp
mov
jne
movsb
ret
subb
sub
bound
sbb
bound
lahf
jbe
and
push
jge
xorl
pop
clc
popa
rorb
outsl
pop
and
add
mov
mov
xchg
add
jp
sbb
mov
xchg
cld
fwait
cwtl
loop
xchg
jle
mov
adc
repnz
fidivs
or
das
xorb
mov
add
mov
fsts
sub
imul
mov
add
ficompl
mov
clc
mov
push
into
or
pop
cld
sub
sar
add
adc
test
gs
push
cmpsl
add
ret
aaa
mov
inc
and
xchg
pop
cmp
daa
mov
out
jmp
pop
cli
test
stos
add
repz
sbb
cmp
xchg
sti
and
pop
sbb
mov
js
push
hlt
pop
sbb
call
jnp
xchg
scas
mov
and
pop
popa
xchg
xchg
mov
ds
and
add
mov
stos
dec
dec
xchg
aad
fs
mov
jno
dec
bound
mov
pop
add
dec
out
mov
mov
adc
test
fcompl
test
add
jo,pn
fwait
clc
xor
push
jno
pop
cmp
loopne
aad
ljmp
adc
inc
shr
loop
add
daa
movsb
mov
push
andb
scas
ja
mov
in
push
sbb
or
pushl
orb
mov
add
pop
push
xchg
jp
in
adc
and
sbb
orps
roll
cmc
pop
imul
jp
in
stos
push
fidivrl
mov
sbb
dec
adc
loop
push
push
into
aas
xor
pop
xchg
and
out
adc
jp
mov
pop
out
cmp
lahf
loopne
lods
in
cld
in
mov
movsl
jle
adc
mov
mov
adc
cmp
cmpsb
mov
adcb
push
xchg
jmp
into
cmp
aam
and
fsubrs
inc
shr
aad
xor
ret
add
das
sub
lds
xchg
loope
push
arpl
xor
pop
outsl
aam
jl
addr16
ret
popa
cmp
push
xchg
adc
add
sbb
sbb
ret
push
iret
das
or
sub
int3
sbbb
cmp
mov
into
xchg
xchg
push
add
inc
inc
jns
push
sbb
sbb
or
imul
jae
xchg
call
jp
mov
sbb
mov
cmpsb
stos
cmp
push
and
xor
outsb
add
sub
je
popa
and
out
adc
aaa
shrb
lret
enter
inc
ljmp
adc
stc
adc
ret
xor
xor
or
inc
mov
jae
xchg
out
push
pushf
cltd
rcr
shlb
push
mov
push
mov
ret
dec
lahf
cmp
xchg
in
and
ds
xor
add
xor
mov
sahf
mov
cmpsb
sbb
jl
js
mov
and
std
loop
and
fistpll
inc
cld
sub
mov
adc
mov
cli
and
fisubl
ret
sub
cmp
sbb
mov
and
push
push
mov
lea
xor
push
hlt
pop
testl
pop
mov
jne
adc
and
cmp
mov
inc
xor
push
ret
cmp
clc
lret
jg
push
mov
arpl
outsl
adc
xor
aas
loope
test
xchg
data16
xchg
clc
and
testl
jnp
rcll
fldlg2
push
aam
and
dec
scas
cwtl
cmpsb
push
sbb
adc
rcll
jns
loope
push
adc
shlb
out
psrld
test
sahf
add
out
push
mov
cld
xchg
pusha
clc
jbe
or
add
push
idivl
pop
rcl
mov
fildll
sbb
cmp
test
xor
leave
je
faddl
cmpb
mov
mov
mov
add
pop
pusha
ret
lret
pop
clc
pop
stos
call
mov
and
mov
add
test
xor
and
cmp
pop
sub
lds
sarb
mov
shl
pushf
in
dec
lret
sbb
dec
cmpsl
cmp
lret
sbb
jns
push
adc
jne
aam
sub
push
jp
aaa
cmpb
movsb
icebp
xchg
pop
or
add
lods
mov
push
leave
mov
cmp
xchg
dec
jb
icebp
sub
les
test
add
pop
add
in
cli
fs
out
dec
repnz
sub
stos
ljmp
adcb
je
sbb
repz
push
call
adc
dec
inc
cmp
mov
and
pop
daa
jmp
adc
jmp
push
pop
inc
aam
sbbb
push
sbb
daa
pop
push
mov
call
add
in
jno
and
das
dec
inc
cld
dec
insl
push
cmpsb
scas
xchg
loope
bound
or
xchg
push
xor
popf
repz
mov
add
outsl
and
rcrl
and
adc
les
adc
daa
lock
ds
bound
adc
call
loop
mov
daa
orl
adc
aam
mov
rcl
nop
pop
popa
push
test
mov
and
adc
push
pushf
or
inc
sub
and
pop
mov
es
fcom
lods
mov
xchg
test
aad
adc
rorl
incb
js
rcll
mov
loope
les
out
cmp
xor
add
clc
imul
or
mov
pop
push
add
std
test
mov
cltd
outsl
inc
xor
push
in
cmp
pop
xchg
lods
push
ret
xchg
imul
dec
sub
outsl
jl
arpl
loope
xor
mov
fldcw
bound
add
cmp
jp
sub
jecxz
cld
sbb
movsb
sbb
or
testb
loope
add
push
inc
cmp
sbb
add
push
decb
push
push
sti
sub
scas
jg
inc
lods
xchg
mov
scas
jno
test
inc
test
das
jae
push
xor
dec
movsl
add
mov
stos
push
push
add
les
mov
mov
pop
and
and
in
sahf
daa
jp
jb
and
fldcw
icebp
jae
push
in
push
sahf
add
push
push
jns
outsl
adcb
jp
je
add
pop
arpl
ret
cmp
filds
cmpsb
pop
push
aam
push
pop
es
lock
es
in
cwtl
loop
jp
cmc
clc
jno
into
ret
hlt
or
cmp
sbb
push
inc
adc
fwait
das
add
and
cmp
sbb
inc
push
cmp
negl
lock
sbb
cmp
sub
std
adc
push
add
insb
inc
push
xchg
movsb
rol
sbb
aad
adc
arpl
mov
das
mull
push
or
xlat
cmp
js
andb
filds
pop
sbb
sbbb
pusha
cmpsl
jp
push
dec
xchg
and
add
or
cmp
std
pop
jp
imul
mov
mov
outsl
or
jb
aas
add
out
std
clc
inc
sbb
aam
cmp
or
repnz
call
sub
or
inc
xorb
cmp
daa
or
ljmp
wbinvd
inc
push
add
jnp
pop
mov
int3
into
lcall
mov
shlb
into
and
xor
cltd
push
inc
mov
jecxz
icebp
cmp
mov
adc
push
add
and
lock
leave
test
ss
xor
pushf
or
adc
adc
lods
pop
inc
sbb
and
or
dec
pop
lods
push
and
aad
add
test
push
xor
xchg
jns
cmp
and
sub
or
dec
inc
pop
mov
pop
aam
pop
sti
inc
hlt
scas
cmp
insb
sub
or
add
push
lods
mov
dec
lods
shll
and
test
add
mov
push
loop
repz
adc
xchg
inc
scas
add
scas
mov
jnp
xor
lock
adc
or
mov
pop
ret
aaa
jns
mov
push
lock
mov
rorb
inc
lcall
fdivs
adc
dec
js
add
into
fisttpll
push
cli
rorl
ret
jno
push
aad
sbb
outsb
ljmp
popf
sbb
mov
aam
and
std
inc
fwait
sahf
rcll
xor
outsb
pop
push
cwtl
add
testb
xchg
mov
test
jecxz
test
add
and
xchg
inc
jg
mov
divl
sahf
cmp
xchg
sub
xor
lock
xchg
stos
ljmp
imul
dec
dec
pop
shlb
ret
sbb
mov
add
iret
in
movsl
insl
int
cmp
fadds
int3
loopne
sub
inc
aam
xor
lods
fdivrl
mov
imul
mov
cmp
int
sub
ja
out
add
lods
add
arpl
dec
lret
add
xor
fcoml
inc
inc
jl
rorb
xor
sbb
pop
pop
add
jbe
arpl
and
or
paddw
inc
rolb
out
adc
cmpsb
mov
rol
addl
lret
sbb
insl
xorl
add
shrb
add
push
std
mov
pop
je
ret
xchg
cmp
cli
or
rolb
jae
mov
std
popf
out
xchg
imul
inc
add
rorb
sub
dec
test
sbb
mov
mov
pop
loopne
add
notb
ficoms
cwtl
and
roll
sbb
sti
add
mov
ja
add
enter
or
inc
bound
adc
mov
inc
jmp
push
lcall
or
ds
sarl
cli
jmp
rorl
insl
outsl
push
sbb
movsb
add
xchg
cs
sub
iret
add
fildl
xor
push
ds
arpl
sub
mov
inc
rcrl
pop
int
mov
lea
daa
add
push
je
sub
sarl
into
sbb
mov
adc
xor
lock
decb
sahf
sahf
or
cmp
jno
je
out
cmp
or
shrd
add
imul
cld
stc
test
push
add
lret
add
xchg
cs
arpl
push
out
cmp
daa
inc
in
add
rorb
inc
mov
lahf
insb
or
xor
psrld
xchg
rcll
imul
sub
mov
add
mov
add
outsl
dec
fcmovnb
or
dec
insb
jbe
or
and
into
dec
xchg
and
jae
inc
sbb
mov
rorl
and
push
push
mov
jp
jmp
xchg
or
jns
mov
jnp
xor
scas
repz
inc
test
add
jp
mov
pop
data16
add
cmp
mov
inc
mov
pop
xchg
loopne
mov
cmp
push
jbe
add
lock
add
mov
jae
aam
mov
mov
in
push
cmp
push
and
push
icebp
aas
adc
push
inc
movsl
mov
rolb
xchg
push
dec
lock
fcomi
cltd
jle
insb
mov
inc
mov
sbb
add
cld
adc
rclb
rcrb
xor
int3
popf
imul
push
mov
dec
add
ret
cmp
rolb
dec
test
inc
fs
mov
jo
sub
ss
or
out
mov
jae
adc
pop
clc
arpl
ds
xchg
int
rorb
sti
pop
out
filds
mov
and
lock
sbb
clc
popa
mov
and
sub
shl
fs
xchg
or
add
cld
fwait
jne
cmc
in
cs
pop
sbb
mov
lods
xor
rol
push
adc
or
add
inc
inc
cmp
cmp
xchg
xor
inc
xchg
xchg
adc
or
inc
rcll
out
inc
aam
popf
out
cmp
pushf
sbb
add
adc
add
enter
cmp
jo,pn
aaa
cmp
pop
pop
jns
adc
es
sbb
clc
cmp
lea
rcll
lahf
aam
in
cmpb
add
xor
test
fsubl
and
jp
mov
dec
mov
xchg
or
jp
cmp
iret
add
loop
loope
xor
inc
sar
jl
push
imul
sub
jmp
jb
ret
stc
pop
dec
xor
std
mov
call
int3
sub
lds
pop
lea
sbb
je
push
lods
adc
mov
orl
in
add
mov
cmp
xchg
cs
mov
jg
les
inc
mov
dec
ja
sbb
mov
mov
pop
add
cmp
xor
add
subb
sub
add
mov
pop
sbb
add
outsl
icebp
jb
xchg
ret
xor
inc
sub
sarb
cmc
fildll
pushf
add
jnp
addl
stos
or
add
push
inc
push
pop
orb
popf
xor
xor
add
shrb
xor
dec
add
lock
nop
add
mov
cmp
stos
and
adc
cwtl
in
loop
out
adc
cmp
pusha
cs
mov
test
inc
mov
in
into
cmp
rol
sbb
pop
inc
notb
dec
fildl
cmp
add
mov
in
push
sub
idivl
rclb
ss
repz
fnstcw
imul
shll
loope
in
xchg
pop
movl
add
ds
push
xchg
pop
add
sub
mov
dec
pop
pop
data16
adc
sbb
ds
sbb
add
push
mov
jae
xor
add
inc
ror
fabs
and
push
pusha
xchg
mov
push
mov
int3
ret
and
xchg
fwait
xchg
adc
xor
mov
or
ja
add
dec
movsl
rcl
ret
mov
push
nop
add
stos
xchg
dec
or
fistpl
and
cmpb
sbb
mov
add
pop
sbb
add
push
adc
js
stos
add
sbb
pop
sbb
mov
mov
ret
jp
add
out
pop
cmp
fnstenv
out
adc
sbb
shll
add
xchg
adc
in
lcall
pusha
add
stos
dec
mov
sarb
mov
push
fdivp
add
cmp
cltd
add
je
lods
sub
inc
arpl
popa
cmp
out
in
lret
daa
popl
xchg
or
test
popa
inc
sahf
lods
movsb
rorb
and
test
sub
add
pop
cmp
stos
movsb
add
ljmp
loope
mov
add
sbb
mov
cmpb
push
jecxz
repz
add
sub
or
and
pavgb
repnz
andl
or
add
add
mov
push
dec
or
sbb
fwait
add
push
icebp
mov
cmc
pop
cltd
ret
je
cmp
mov
cwtl
andl
decl
js
push
cmpsb
jbe
les
push
pop
inc
out
orl
mov
ror
sub
test
je
sub
sahf
lds
push
xchg
out
inc
int
mov
out
arpl
mov
lock
decl
pop
ror
jecxz
jo
sub
push
into
faddl
xchg
fmuls
and
sbb
dec
add
and
subb
inc
adc
shll
movsl
addr16
push
add
jge
jl
bound
ret
or
pop
popa
push
mov
add
sbb
dec
sahf
xchg
add
or
add
arpl
add
pop
jnp
imul
fldcw
jecxz
mov
add
in
mov
inc
lret
push
out
mov
andl
addr16
xor
mov
mov
and
sarl
bound
mov
mov
push
enter
xor
pop
shlb
repnz
dec
inc
fmuls
mov
or
inc
xchg
cltd
mov
sub
mov
sbb
mov
les
jo
sub
lret
or
adc
sbb
dec
push
in
mov
dec
hlt
jge
movsb
adc
sbb
test
fisubs
cmp
cmp
rorb
dec
iret
inc
cltd
mov
mov
rcrl
aad
pop
and
les
mov
cmp
xchg
fldenv
sbb
inc
adc
cs
and
pop
popa
dec
mov
jg
xorl
push
push
std
ret
dec
xchg
mov
test
sub
cmpsb
imul
arpl
pop
ds
sbbb
jg
sub
gs
mov
sbb
and
or
xchg
cs
cld
push
out
cwtl
insl
adc
mov
mov
adc
push
loop
lahf
sub
xor
fs
add
sbb
aam
inc
xchg
mov
push
mov
jne
gs
imul
stc
test
arpl
cmpsb
ds
push
sbb
inc
sbb
inc
jp
fbld
push
mov
xchg
mov
lods
sbb
mov
dec
movsb
mov
jg
mov
jnp
and
cli
lods
adc
mov
mov
push
mov
push
xchg
lahf
xor
add
arpl
mov
ret
ret
xchg
mov
jle
and
mov
je
cld
jl
jp
or
mov
jmp
arpl
cmp
bound
dec
or
sub
mov
movsb
sub
xchg
outsl
mov
lret
jge
xchg
jns
sbb
sbb
xorb
sbb
addr16
les
sahf
mov
test
xchg
loopne
mov
sti
add
es
mov
cmp
out
xchg
mov
add
dec
cmpb
mov
sub
aaa
mov
aas
xor
xorb
mov
movsb
mov
inc
mov
sahf
sbb
push
xor
outsl
or
testl
ss
cmp
adc
fiaddl
jb
jnp
pushl
or
inc
leave
and
jne
sbb
aam
and
aaa
cmp
enter
xchg
and
aad
es
or
add
jmp
adc
out
jmp
out
push
testb
add
xlat
ret
shlb
out
pop
sbb
std
or
sbb
loope
xlat
inc
inc
andl
mov
pop
lods
fdivrs
repnz
insb
pop
fisubs
sbb
mov
sub
movsb
daa
xchg
push
lods
ficoml
cli
cli
clc
dec
sub
ret
sarb
mov
push
pop
or
and
cmpsl
cmc
aam
aas
sbb
mov
into
dec
mov
dec
cmp
xchg
jae
and
pusha
ret
popf
clc
and
sbb
mov
xor
and
jle
push
insb
inc
sub
add
in
int3
mov
push
imull
xor
imul
shrb
sub
xor
les
or
sub
inc
arpl
or
mov
sub
xor
fisubl
leave
call
jp
mulb
push
cld
mov
testl
xchg
push
mov
cmp
or
jnp
adc
add
sbb
xchg
je
andb
lret
ss
mov
dec
or
int
test
cmpsl
sbb
sbb
inc
repz
minps
ret
mov
pop
mov
fwait
pop
test
or
test
cvttps2pi
or
xor
sarb
pop
fstl
js
repz
inc
sub
ja
adc
xchg
mov
test
es
leave
ret
les
rol
inc
jno
dec
fidivl
sub
and
push
testb
mov
or
fsubrs
push
sub
lcall
and
jo
test
lock
hlt
and
pushf
inc
jg
leave
push
push
hlt
mov
leave
adc
sub
mov
pop
idiv
addr16
out
push
bound
cmp
iret
or
sbbb
rorb
dec
sub
jnp
add
aad
jp
sbb
push
sbb
outsl
xchg
adc
adc
clc
cmp
movsb
ja
popa
lds
subb
inc
aad
cmp
gs
in
mov
pop
into
cltd
lcall
xor
dec
in
loopne
jmp
add
sbb
or
and
popf
push
add
mov
cmp
and
inc
out
xor
xchg
mov
jmp
cmp
jo
mov
out
out
or
cmp
sahf
mov
and
dec
xor
ja
test
jle
sub
and
or
sahf
xchg
mov
add
jp
xchg
mov
test
outsl
jo
test
test
inc
popa
arpl
adc
loopne
insl
or
stos
les
mov
xor
mov
ret
loop
add
mov
pop
adc
insl
ret
gs
add
or
loop
clc
enter
clc
loop
sub
mov
inc
stc
cmpsb
xorl
ret
scas
push
inc
mov
test
mov
xorl
cmp
jbe
inc
add
and
pop
dec
add
enter
outsb
xlat
test
or
mov
inc
sbb
mov
daa
insl
sub
sbb
dec
loop
push
imul
cmp
xchg
xor
or
add
mov
xchg
cmp
subb
mov
mov
inc
sbb
cmp
shll
int
sub
add
and
cmc
mov
imul
outsb
adc
packuswb
and
leave
cmp
sbb
ret
and
mov
roll
jg
fidivl
aaa
andb
test
sbb
inc
mov
pop
jmp
leave
xor
es
pusha
pop
ss
adc
in
or
sub
les
pop
das
cmp
push
inc
add
movsb
dec
mov
jl
stos
or
xchg
std
rorb
outsl
mov
outsl
jle
sub
scas
dec
scas
adc
out
insb
aam
addr16
lcall
aaa
repnz
es
out
or
loope
inc
test
add
adc
jno
fsubrl
cwtl
or
sbb
test
sti
xor
dec
push
or
inc
jp
cmp
add
fisttpll
pop
sbb
cmpsb
or
test
lods
mov
mov
or
pop
sub
fiadds
mov
loop
push
xchg
es
pop
xchg
xchg
aad
out
mov
mov
cwtl
mov
dec
sub
ja
and
outsl
movsb
cs
and
and
rclb
popa
cli
sbb
mov
add
ds
imul
and
aas
out
or
loop
add
jg
xor
outsb
adc
mov
sub
mov
and
fs
test
xchg
jge
shrb
scas
adc
adc
scas
movsb
nop
mov
popa
lods
ds
cmp
outsl
into
dec
rclb
xlat
cwtl
loopne
adc
adc
addr16
lds
sbb
inc
mov
loop
xchg
loope
cmp
pop
push
add
xchg
adc
aad
adc
add
out
movsl
xlat
js
lods
mov
add
mov
daa
mov
xor
dec
push
fmuls
jns
xor
or
jp
mov
xor
and
lods
adc
adc
cmp
sbb
inc
ds
into
and
gs
out
aas
xchg
pop
pusha
test
cmp
mov
lret
insb
pusha
mov
dec
push
mov
mov
push
and
sbbl
cmp
inc
pop
pop
cs
dec
push
sbb
or
jmp
shrl
push
fwait
xor
out
repz
mov
or
imul
das
sbb
ss
stos
adc
jmp
inc
pop
xchg
pop
aad
dec
sahf
mov
mov
test
sub
aad
xchg
sub
adc
mov
cli
dec
sub
add
rcll
icebp
or
cltd
in
sub
lcall
xchg
jp
jge
scas
out
xchg
xor
les
adc
inc
cmp
test
mov
or
jmp
xchg
and
xor
dec
jp
stc
cmp
sub
js,pn
aad
pop
xchg
sub
adc
test
arpl
cmp
xlat
mov
lock
repnz
adc
mov
test
sbb
ret
js
cld
popa
push
ss
xor
jo
xor
xchg
adc
rorb
rcll
xor
push
cmp
pop
jp
pop
aas
cmpsb
cmc
pusha
jb
les
popa
dec
sbb
push
push
inc
mov
jl
cmp
inc
adc
ds
loope
cli
out
mov
fst
jbe
or
pop
fcmovbe
pop
lret
leave
push
cmpl
pushf
outsb
mov
cmp
add
pop
ret
test
mov
mov
out
push
adc
sbb
sbb
je
pop
add
scas
cmp
cmpsl
adc
lds
inc
xlat
filds
sbb
jns
jle
movsl
ret
arpl
dec
fs
push
mov
inc
imul
ljmp
cmpsl
cmpsl
pop
cld
ret
xchg
lret
add
sub
sbb
mov
add
std
inc
mov
and
out
xchg
out
ret
aas
es
xchg
loop
jp,pt
and
icebp
std
ret
mov
mov
pushf
push
fbld
pop
inc
test
in
inc
in
inc
addr16
push
jp
pushf
or
push
dec
imul
add
lret
ljmpw
shlb
xchg
jecxz
repnz
mov
shrl
call
inc
hlt
pop
es
push
pop
xor
lock
push
fstpl
ja
add
fsqrt
add
movsb
es
jg
xor
test
daa
adc
adc
mov
mov
sarb
pop
jl
sub
mov
loope
ja
sbb
das
pop
xor
ret
push
cmpb
aam
bound
xchg
and
sub
test
sub
jmp
inc
jno
and
mov
fidivrs
out
sub
and
pusha
jge
adc
js
adc
mov
sbb
xor
lret
cli
lea
xchg
fstps
push
push
inc
int3
add
outsb
xchg
xchg
sbb
daa
add
lods
mov
mov
movsl
push
and
bound
or
jo
push
rolb
fwait
shll
adc
adc
jmp
adc
fildll
int3
add
cmp
es
add
into
xchg
in
test
xor
add
aad
push
lods
lods
sarl
out
lock
data16
jg
mov
test
loopne
repz
shrl
pop
incb
gs
add
add
leave
inc
sbb
add
mov
jl
add
xchg
pop
push
sub
and
fstpl
sub
aaa
add
adc
add
lds
pushf
add
cmpb
out
sbb
jo
shl
aam
iret
add
push
movsl
adc
mov
insl
dec
js
jo
dec
pop
pop
sub
xor
add
in
sbb
fsubr
and
jle
ret
add
xchg
arpl
mov
fnsave
ficoml
or
pop
mov
mov
cld
je
negb
sbb
add
test
mov
addb
xchg
pop
pusha
negl
dec
mov
test
pop
loopne
mov
fcoml
jp
in
jo
adc
jae
cmp
cmc
test
adc
add
rcrb
pop
in
jmp
addb
jmp
sub
test
in
icebp
sub
pop
xchg
mov
outsl
push
inc
pop
sbb
add
dec
pop
mov
ljmp
cmp
andb
add
out
dec
nop
decb
add
jb
push
mov
je
shrl
cmp
cmp
leave
xor
rcll
inc
mov
and
ljmp
push
push
xchg
mov
dec
ficomps
aas
fiaddl
fwait
out
mov
jge
and
stc
clc
and
add
and
vmwrite
add
je
sub
mov
add
rclb
daa
xor
add
push
cmp
test
inc
cmpl
pusha
aas
pop
cwtl
movsl
xlat
lahf
xor
pop
jmp
inc
jg
cmp
fbstp
mov
call
pop
mov
inc
outsl
push
in
js
push
xor
add
sbb
inc
rcll
and
sarl
xor
push
sbbb
add
bound
dec
insl
outsb
adc
and
hlt
in
fidivrs
ret
add
insb
jp
cmp
loop
sub
daa
jae
roll
cmp
loope
je
mov
cmovg
out
and
push
imul
xor
pop
aaa
or
jbe
sbb
stc
rcrb
movsl
arpl
dec
add
in
orl
orb
faddl
jo
imulb
je
mov
add
notl
cmp
test
cmp
std
jne
inc
loopne
sub
stos
sub
pushf
and
add
test
into
mov
or
sbb
fdivl
lahf
sub
dec
lds
push
mov
add
lret
cmpsb
sub
mov
fbstp
sbb
xor
push
add
out
inc
mov
sub
sarl
clc
or
mov
inc
and
cmp
data16
pop
mov
in
pop
arpl
pop
fildl
out
fucom
faddp
repnz
pop
dec
add
add
sub
add
cmp
out
cmp
add
daa
mov
fisubl
adc
mov
sbb
cmp
shlb
iret
jg
add
sbb
xor
fiaddl
xor
xchg
out
add
cs
jmp
loopne
lods
repz
cmp
insb
cmp
lcall
sub
mov
fmuls
add
ljmp
test
int
sbb
rol
clc
into
pop
cmc
mov
popf
dec
inc
add
mov
cltd
jmp
popa
scas
sahf
dec
add
jae
mov
push
iret
xor
ds
loopne
mov
in
out
rolb
xor
add
cmp
in
sbb
ss
je
add
gs
mov
push
push
loopne
in
push
adc
dec
ret
mov
add
xchg
adc
fildl
add
mov
jmp
loop
into
fdivp
xchg
adc
mov
mov
test
aad
movsl
sub
jl
adc
ds
jae
ds
stos
shll
inc
iret
add
and
std
imul
add
sub
loopne
xor
out
into
aas
inc
ret
aam
pusha
or
sahf
ds
add
jp
cmp
add
ror
pop
insl
add
inc
cmpsl
mov
dec
adc
arpl
add
ljmp
aas
adc
sbb
push
adc
jne
movsl
lds
lahf
mov
je
xor
add
sub
sbb
int3
out
mov
mov
ja
call
out
rclb
cmp
data16
add
cmp
push
lret
je
inc
fadd
xor
push
cmp
mov
cmp
mov
add
xchg
aad
bound
or
mov
lds
push
add
cli
sbb
hlt
sub
add
xchg
test
inc
and
rolb
test
xchg
jb
ret
std
or
insl
jle
fnstcw
int3
add
sarl
decb
in
std
orl
in
cmp
add
scas
movsl
fists
xor
pop
sahf
ret
mov
inc
jnp
ljmp
cmc
sarb
stc
adc
cmpsl
dec
mov
mov
xchg
mov
andb
adc
add
or
inc
sbb
outsb
lret
and
push
int
and
popf
pop
add
dec
pop
ss
scas
out
xor
loopne
push
subb
or
out
add
test
iret
cltd
and
cmp
or
jb
cmp
add
cs
push
jg
mov
sbb
icebp
out
std
xlat
mov
inc
or
cmc
cmp
xchg
lods
inc
pop
mov
mov
xor
dec
pop
inc
outsl
mov
sub
mov
ret
shlb
mov
inc
fcoml
in
addb
mov
pop
or
jge
push
cwtl
inc
add
js
rol
hlt
inc
xchg
sbb
or
mulb
aaa
xlat
add
arpl
mov
xor
adcl
sub
daa
cmp
xchg
or
xlat
ljmp
jmp
jnp
add
add
sarb
lock
xlat
mov
adc
mov
xchg
cmp
or
fnsave
xchg
push
mov
in
icebp
shlb
inc
inc
insb
adc
or
add
rol
movsb
and
cmc
dec
mov
loop
xchg
fs
mov
gs
leave
dec
sbb
mov
add
fsubl
in
jno
xlat
push
cmp
xorb
cmp
and
sub
add
push
push
add
push
push
rcr
jns
ret
mov
fiadds
mul
aas
and
gs
add
lods
mov
inc
into
mov
ret
mov
clc
lea
test
mov
cmp
dec
adc
add
and
inc
xchg
pop
add
push
dec
lret
cmp
gs
push
pop
lock
cmp
push
rorb
stos
jnp
xor
dec
lret
add
sub
int
rol
cvtdq2ps
pusha
pop
adc
fcmovnbe
push
or
xor
adc
mov
add
push
fwait
sbb
push
inc
ljmp
cmp
add
fnstsw
sub
jae
cmpb
push
add
inc
lret
fnsave
push
rorl
into
pop
outsl
add
insl
aam
xchg
sti
insb
popa
cmp
mov
add
inc
dec
rorb
push
mov
cmp
jb
fs
xchg
xor
movl
cld
push
mov
into
nop
push
adc
add
movsb
mov
lret
pop
pop
sbb
daa
cmpsb
popl
inc
repz
push
jmp
aas
and
push
cli
out
lea
or
xor
xor
in
stc
mov
repz
stos
dec
int
cli
xor
sbb
add
mov
mov
mov
fstpl
jg
sbb
cmp
add
mov
pop
add
scas
iret
insb
dec
dec
inc
mov
arpl
lcall
incl
sbb
jl
dec
lahf
mov
cld
mov
pusha
lret
add
inc
test
add
movb
add
cld
mov
stos
fidivs
mov
and
das
add
jmp
cli
add
jne
cs
dec
fstps
add
xlat
add
ss
mov
xor
jbe
cmp
push
and
sbb
loope
lods
fildl
jns
push
mov
hlt
pop
mov
or
push
ror
pop
fdivr
xchg
or
aas
out
cmp
push
test
add
out
pusha
fisubrs
mov
jmp
and
fistpll
movsl
or
test
ret
sub
jb
pushf
inc
es
mov
ds
subl
add
aas
call
fisttpl
sub
cmp
pop
into
inc
sbb
movsb
xlat
pop
mov
jg
ret
and
mov
and
or
cmp
mov
ret
and
adc
push
sti
push
sbb
ret
stos
cmp
std
adc
pushf
cmp
xor
in
push
rcll
in
mov
sbb
lahf
std
mov
ja
bound
xor
adc
in
mov
pop
add
sar
hlt
jo
outsl
fadds
sbb
or
pop
mov
rolb
clc
push
addl
cmp
rcl
cltd
subl
adcb
ss
sub
adc
sub
cmp
xlat
cmp
into
inc
mov
or
push
mov
pop
jb
in
enter
sbb
out
mov
in
xchg
and
insl
sub
adc
daa
test
das
pusha
and
xor
cmp
and
fld
ret
lods
pop
pop
jp
mov
dec
jmp
pusha
scas
adc
in
cmp
lock
addl
insb
jo
ds
inc
inc
xor
wbinvd
mov
xor
out
out
out
sub
xor
das
xchg
or
nop
cmc
or
icebp
arpl
sub
pop
loope
out
dec
bound
push
mov
mov
push
cmpsb
cmp
lods
inc
sub
movsl
mov
lret
cmp
adcl
push
and
sbbb
xchg
xchg
enter
hlt
add
orb
imul
inc
or
sbb
test
push
and
mov
lea
and
mov
adc
adc
cld
jle
ret
xor
sbb
cwtl
lea
or
add
sbb
insb
cmpsb
mov
clc
inc
aam
stc
add
rcrb
or
xchg
mov
lods
lds
jbe
mov
mov
sub
sub
fcomps
movsl
addr16
clc
arpl
mov
or
pop
cmp
fwait
inc
lahf
xor
push
divb
lcall
btr
mov
or
test
out
add
fisubrs
sub
jae
int3
mov
mov
xor
sub
mov
add
mov
ret
fwait
sbb
divl
jge
pushf
ret
or
adc
fcoml
test
pop
iret
jbe
add
mov
leavew
or
add
sarl
add
sub
xor
js
lds
sub
mov
imul
jmp
addl
mov
mov
and
pop
xchg
mov
fstl
inc
jmp
fmull
shrl
insb
iret
aam
inc
pusha
mov
fs
inc
push
movsb
or
xchg
push
xor
add
rolb
lahf
rorl
mov
arpl
jle
cltd
fidivl
sub
sub
pop
cmpb
sub
push
out
xor
cmp
std
stc
pushf
add
pop
xchg
addr16
add
cmp
xor
pushf
mov
dec
outsb
rol
repz
xlat
ret
or
mov
add
cmpsl
xchg
jbe
mov
add
in
and
ja
adc
jns
mov
lods
adc
repz
or
add
stos
mov
push
mov
insl
ret
add
and
mov
adc
inc
inc
sub
add
test
cmpsl
rorb
fwait
pushf
das
add
insb
xor
or
cltd
pop
adc
xor
inc
add
mov
stos
sti
mov
add
or
stos
insl
aad
xchg
sub
outsl
jg
and
jge
aaa
cmpsb
sahf
add
and
fwait
fs
les
jmp
dec
repz
ss
pop
pop
sbb
mov
mov
adc
ja
in
fbld
js
sarb
shl
es
mov
pop
inc
rorb
fstps
add
mov
insb
mov
loopne
outsl
adc
jmp
cmp
adc
mov
mov
int
push
push
mov
sub
mov
nop
movsl
pop
push
inc
push
cmp
xchg
push
push
add
dec
pusha
addb
push
add
jp
loop
adc
mov
add
pop
dec
test
and
xor
mov
add
lds
pop
neg
inc
add
sub
or
pop
pop
sbb
jl
movsl
insl
and
push
pop
mov
jns
ja
xchg
or
shrb
xchg
add
cmpsb
xchg
dec
and
jge
sbb
adc
mov
dec
mov
jmp
mov
or
mov
add
mov
mov
jg
adc
push
xor
add
sarb
ljmp
mov
icebp
xlat
int
cli
sbb
inc
call
xor
inc
add
hlt
dec
sub
mov
mov
or
adc
lret
add
out
cmp
add
push
add
sbbl
enter
mov
rcr
xchg
inc
xlat
adc
aad
sbb
mov
mov
and
push
jns
mov
fildl
adc
add
stos
daa
add
sbb
cltd
adc
ret
js
movsb
int3
mov
mov
inc
pop
imull
add
in
xor
lods
jl
and
add
inc
cmp
mov
xlat
add
jp
in
adc
andl
jl
sti
inc
push
clc
pop
incb
gs
and
je
cmp
push
push
lcall
adc
mov
jb
cmp
add
outsl
sarl
rcrb
push
jl
add
add
jg
daa
sub
push
add
jnp
cmp
stc
mov
lods
cmp
xlat
add
push
sbb
ret
mov
push
and
pop
out
add
insb
cs
out
fidivl
lock
xchg
add
or
scas
or
shlb
push
test
or
add
xor
fimuls
test
jns
lret
and
neg
pop
shlb
add
stos
push
pop
fiaddl
arpl
cmpsl
xor
mov
mov
or
xchg
add
push
add
outsl
test
ds
aad
lds
addr16
add
int3
pop
jg
jnp
inc
inc
pop
icebp
push
data16
je
add
inc
stos
inc
in
and
add
pushf
mov
mov
out
ret
out
xchg
mov
xor
dec
sbb
adc
mov
push
push
dec
pop
cmpsl
sahf
cmpsb
add
stc
jmp
inc
dec
test
adcl
dec
and
sti
loope
sarl
xchg
out
js
movsl
shll
movb
stos
cmp
inc
cwtl
fstpt
inc
mov
inc
pop
sti
sub
std
add
xchg
xchg
addl
add
xchg
mov
add
mov
sub
mov
xor
inc
imul
add
xchg
dec
dec
jne
ja
cmc
pop
aad
js
movswl
imul
and
cld
jl
and
loop
xor
je
mov
push
mov
add
inc
roll
js
jg
gs
dec
mov
and
scas
bound
pop
cwtl
inc
xchg
dec
and
and
cmp
or
mov
xlat
ret
pusha
jo
gs
cwtl
test
pop
mov
mov
push
divl
and
mov
ss
cmp
adc
and
add
fcoms
cmp
stc
adc
cltd
js
fstl
inc
ret
mov
sbb
or
pop
mov
fdiv
xchg
push
sbb
mov
rol
mov
jecxz
jge
add
cmp
outsb
add
cmpsb
jle
add
cs
leave
insl
mov
mov
icebp
sbb
ret
shll
mov
test
jae
lret
xor
add
arpl
jo
subl
or
cmp
dec
xor
leave
cmp
and
and
bound
xor
lods
in
adc
jb
pop
or
add
lods
repnz
inc
ret
xchg
je
jge
jp
cmp
and
adc
fsubs
pop
mov
or
adc
loope
sar
cld
inc
sub
sbb
xor
adc
jnp
xor
cs
ficomps
loopne
cmp
out
add
stos
stos
cmpsb
push
inc
add
lret
sti
adc
in
pushf
add
mov
out
push
movsl
mov
cwtl
in
add
jo
daa
lea
push
mov
rorb
movsb
add
cltd
cmp
daa
sar
test
adc
sbb
sbb
mov
add
mov
aad
dec
dec
and
insl
pusha
lahf
das
loopne
dec
or
adc
rorl
sbb
fucompp
push
nop
cmp
xor
shlb
fildll
or
or
imul
bound
cwtl
mov
ret
ja
add
and
xor
and
sub
mov
pop
add
imull
jo
nopl
in
mov
add
mov
mov
sub
push
mov
pusha
insb
mov
cmp
xchg
add
divl
ret
cmpsb
adc
cmp
rcll
sbb
dec
pop
xchg
int
adc
jmp
jnp
fadd
adc
mov
popa
int
inc
cld
adcl
or
imul
add
inc
sbb
mov
sti
mov
frstor
out
pop
add
bswap
lock
sbb
push
stos
jae
faddl
push
mov
xor
pop
call
xchg
ljmp
shll
sbb
pop
and
cmc
fldcw
add
xchg
cmp
mov
stos
std
add
jge
sub
or
mov
in
add
cmp
sbb
fstps
loopne
mov
mov
adc
pop
add
mov
jne
inc
inc
lock
lcall
fiadds
jle
data16
mov
pop
lret
mov
or
add
daa
data16
gs
mov
add
sub
hlt
addr16
je
lret
push
out
leave
dec
lea
push
push
cli
dec
ret
mov
push
adc
sub
mov
stc
adc
mov
add
int
dec
aaa
or
mov
filds
sarl
stos
call
adc
push
inc
push
pop
add
xor
std
add
pop
stc
pop
lods
push
sub
xchg
cltd
out
pop
add
fs
add
dec
sarl
add
cld
adc
mov
sub
stc
movl
or
test
shr
addb
loope
sbb
dec
mov
mov
fcmovu
xor
popf
mov
ss
jle
mov
imul
mov
cld
arpl
jns
push
js
or
mov
loop
sub
mov
inc
pusha
sbb
adc
fiadds
xor
in
mov
inc
push
lret
cmpsl
mov
lahf
imul
scas
jnp,pt
mov
mov
or
insb
add
jle
stos
int
ss
cli
jnp
ret
lock
add
hlt
push
aad
inc
ss
scas
ffree
jle
or
and
mov
push
jno
call
aas
nop
lret
add
or
cmp
mov
jl
add
hlt
xchg
push
push
icebp
mov
in
mov
jmp
fisubl
pop
je
shr
xchg
sbb
jle
pop
test
push
rcl
das
sbb
add
cmpsb
outsl
add
or
dec
add
mov
adc
int
mov
int3
daa
fnstcw
add
sti
pop
and
test
mov
lahf
cltd
sbb
dec
push
cwtl
xor
clc
pop
fldcw
mov
fidivs
aad
outsl
xor
jge
in
adc
ret
addl
cmpb
insl
mov
jb
xchg
or
sarb
or
xor
and
adc
and
mov
cmc
outsl
data16
leave
and
stos
nop
repz
movsl
push
shrb
add
pop
jbe
sub
test
jecxz
insl
bound
mov
jns
sub
jmp
xchg
inc
cmp
mov
dec
dec
int
push
sub
xor
jns
in
mov
std
dec
add
decb
out
push
arpl
lods
mov
rolb
push
mov
jbe
pop
or
std
inc
ret
mov
daa
out
aas
in
in
cltd
cmp
sbb
out
sub
cmp
gs
test
sahf
movsb
bound
or
jp
xor
add
xor
loope
pop
cwtl
pop
das
aas
clc
add
imul
lret
fldl
mov
daa
test
sub
adc
sub
ss
add
push
add
mov
add
cltd
testl
add
outsb
pop
inc
xchg
inc
xor
adc
push
jg
mov
add
xor
pop
popa
roll
cmp
stc
mov
add
jb
sbb
mov
add
lods
rcl
aas
mov
dec
shl
pop
fisttps
loope,pn
cmpsl
add
inc
cmp
dec
out
jle
lahf
and
bound
jo
fstl
add
scas
mov
iret
sub
add
aas
push
push
adc
sub
add
daa
imul
fdivrs
test
push
push
fs
mov
pop
nop
push
pop
cmp
push
lods
popa
movsb
mov
sbb
pop
or
mov
cmp
mov
addb
jp
jbe
inc
inc
mov
and
push
cltd
cmc
imul
push
lcall
sub
aad
fimuls
aas
add
icebp
loop
test
into
xchg
stos
ss
icebp
xchg
or
pusha
jge
clc
and
sub
scas
mov
and
and
jnp
mov
mov
imul
and
enter
call
sub
popa
xchg
cmp
outsl
cmp
ds
in
outsb
xchg
and
lcall
xor
cmp
and
xchg
pop
mov
xor
sahf
std
jne
sbb
outsl
ljmp
or
js
or
xchg
jp
xchg
push
cmp
bndldx
mov
outsb
sub
leave
inc
inc
and
sahf
sub
daa
mov
outsl
int3
aaa
shlb
xchg
xchg
divl
leave
fwait
cs
ja
sub
call
push
mov
mov
inc
mov
leave
scas
xor
insb
loopne
pushf
ljmp
mov
mov
rcrl
or
mov
add
fs
popf
into
and
cmp
in
and
inc
scas
jns
mov
test
and
inc
add
addl
cmpsb
mov
dec
in
cmpsl
sub
sub
add
mov
or
fiaddl
mov
xlat
push
out
or
cmc
inc
sbb
push
xchg
sub
xor
enter
push
xchg
sub
ss
jnp
or
and
pop
es
fists
xchg
mov
mov
cs
shll
jo
add
jmp
lods
jns
leave
mov
mov
dec
and
lret
pop
jp
sti
cmpl
scas
or
add
outsb
lock
and
pop
pop
add
ret
divb
mov
pop
das
sbbl
and
xchg
lock
add
ja
mov
add
pop
jge
mov
mov
rclb
ret
sub
add
xchg
ret
ja
testb
shll
pushf
daa
xor
adc
in
das
sub
inc
mov
mov
pop
xor
cmp
roll
test
push
xor
shl
aad
icebp
push
dec
es
ret
scas
out
ret
mov
add
fnstcw
mov
and
sti
mov
xchg
clc
inc
pushf
adc
fwait
xchg
test
pushf
outsl
mov
jmp
and
ds
dec
mov
or
int
int3
adc
shrb
hlt
sarl
push
mov
ljmp
dec
add
push
adc
inc
fucomi
call
cmp
and
and
pop
loope
aam
add
sub
ficompl
roll
imul
adc
outsb
jno
push
shrb
mov
mov
sahf
psadbw
and
xchg
jg
or
ret
int3
sbb
in
rclb
dec
cmc
xchg
stos
add
jnp
rcrl
inc
repnz
dec
add
jae
das
and
mov
arpl
add
jp
jb
pushf
add
or
mov
dec
inc
xchg
jp
repnz
cmc
add
add
xchg
push
adc
inc
sub
adc
xchg
mov
subb
nop
or
xchg
add
pushf
add
sbb
or
dec
cmp
stos
xor
inc
jp
xchg
ljmp
or
mov
imul
push
xor
add
cmp
shrl
pop
lahf
add
xor
aam
addl
fsubs
addl
or
push
jmp
imul
jle
add
xchg
mov
bnd
xor
js
inc
pop
jmp
cmpb
cmp
nop
sti
push
dec
push
aas
cmp
add
mov
stos
enter
pop
sbb
mov
or
sub
xor
mov
mov
xchg
cs
cltd
xor
xor
add
loop
pop
fimuls
xchg
dec
mov
movsl
cmp
ret
into
jo
iret
xor
fdiv
mov
stc
cmp
add
xor
push
lret
jbe
mov
push
adc
or
xor
outsl
add
in
mov
test
jno
lret
imul
sub
and
sti
lahf
les
int3
clc
xlat
int
test
or
jmp
and
cld
ret
movb
aaa
xchg
jg
mov
push
jbe
pop
cmp
aaa
cmp
mov
pushf
dec
bound
repz
inc
inc
push
mov
xor
add
xchg
popf
pop
fdivl
add
jecxz
es
mov
shll
lock
mov
pop
aaa
enter
es
rcrl
cwtl
or
xor
jbe
pop
add
pop
in
test
add
dec
mov
rolb
push
and
aaa
pop
mov
push
mov
jg
dec
dec
lods
add
mov
addb
cs
jb
je
imul
jmp
loopne
sahf
cmp
and
pop
ret
jae
rorl
jge
int
mov
jmp
cmpl
mov
mov
lods
add
mov
sub
stos
add
add
mov
xchg
dec
mov
fbstp
insl
sub
sub
rcll
std
test
jo
cmp
andl
xor
jge
mov
in
jb
push
xor
imul
std
adcl
adc
scas
push
add
mov
xchg
cmpsl
add
cmp
dec
pop
cltd
js
adc
and
xchg
ds
cmp
loop
xor
dec
fdivrs
adc
rcrl
jno
sbb
dec
inc
xchg
cmp
push
xor
push
pop
push
ss
popf
xchg
ljmp
loopne
add
cmpl
sub
jl
xlat
popf
push
mov
cmpsl
stc
dec
cld
adc
insb
dec
xchg
push
fbld
sbb
daa
cmp
push
add
outsb
add
shrl
pusha
dec
dec
loopne
roll
xor
fmuls
dec
pop
mov
inc
xchg
inc
lock
jo
xor
cmpsb
test
loop
inc
ret
adc
ret
jne
dec
sbb
stos
test
mov
mov
test
lcall
add
inc
sub
add
insb
movsb
sahf
fisubs
lcall
lods
pop
in
jle
test
daa
fistpl
leave
jmp
pushf
sbb
fwait
lret
cmp
and
xchg
scas
mov
mov
mov
cmp
jl
xlat
pushf
sub
adc
mov
xor
adc
and
jo
pop
ret
lds
or
into
xcrypt-ecb
cmpsl
dec
add
ds
mov
roll
cmpsb
push
adcl
repz
pop
xor
shrb
and
rclb
dec
mov
dec
sub
mov
flds
gs
addr16
adc
xor
imulb
push
pop
add
pop
std
mov
into
sti
jb
outsb
add
push
lcall
adcl
test
xlat
ret
mov
add
mov
push
add
roll
cmp
sti
cmp
es
add
loope
and
sub
pop
mov
pop
bound
add
shr
mov
push
pop
sbb
jno
mov
js
add
popf
adc
add
aas
decb
sarl
jmp
and
cld
and
leave
pop
add
shrb
sbb
sbb
testl
xchg
test
int3
or
cmp
lock
ret
dec
sti
std
aas
mov
push
lahf
repz
and
xor
jno
mov
cld
jo
dec
fcmovb
lret
inc
cmpb
cs
jns
mov
xor
outsb
sbb
shll
jnp
add
pop
adc
add
pop
or
pop
add
test
jae
fidivrl
loop
cmp
add
sbb
out
jle
add
mov
sbb
aaa
in
test
and
add
xchg
dec
test
and
mov
cmpsb
xor
add
mov
fcomi
inc
test
lcall
pop
leave
and
test
lock
or
xchg
dec
jge
popa
les
wrmsr
cli
and
rol
mov
or
in
inc
ds
add
sub
or
adc
push
iret
stos
clc
out
ds
add
cld
dec
out
popl
scas
add
jo
popa
or
mov
cwtl
sbb
rclb
jl
test
xchg
ret
inc
sub
test
cltd
insl
and
dec
push
sub
mov
roll
jmp
imul
dec
or
cltd
inc
and
add
clc
fwait
push
xlat
sbb
ret
mov
shlb
loop
or
or
pop
add
sti
clc
popf
mov
mov
lea
enter
pcmpgtb
test
xchg
aas
fidivl
repnz
dec
jnp
imul
lret
ds
or
outsl
inc
and
rolb
push
pop
adc
push
pop
ret
addr16
mov
outsl
add
dec
cltd
loope
adc
test
inc
adc
mov
in
test
out
add
fwait
or
leave
push
or
in
clc
lcall
es
pop
add
push
push
xor
sbb
aas
shll
and
lcall
mov
add
dec
push
and
inc
and
pop
lods
rolb
adc
cli
sbb
adcb
add
daa
gs
adc
dec
or
shll
out
and
or
inc
xor
inc
iret
out
xor
ds
andb
jle
mov
xchg
test
push
fidivs
leave
pop
xchg
pop
addr16
xchg
push
cld
ret
mov
scas
jns
pusha
std
push
and
shr
ds
fsub
xor
jge
aad
decb
ret
mov
xchg
test
push
pop
ds
pop
fsubs
mov
sbb
add
ret
jb
pop
pusha
cmpb
insl
mov
xlat
adc
dec
lods
push
mov
adc
sbb
mov
or
inc
repnz
xor
cmp
leave
push
and
insb
and
cmp
xchg
sbb
pop
iret
xchg
pop
cli
mov
sub
pop
movsl
in
fisttps
stc
adc
dec
mov
xlat
pop
sub
xchg
loopne
sbb
xchg
xor
out
mov
push
adc
popa
cmp
imul
sub
out
mov
fwait
bound
mov
inc
loopw
xchg
iret
mov
adc
loope
es
mov
sbb
dec
dec
add
xchg
inc
jg
cmc
aaa
cld
stos
add
sbb
jp
add
mov
loopne
popa
add
dec
xor
add
mov
pop
dec
xchg
adc
aas
dec
or
out
in
xchg
xor
mov
insb
adc
cmp
inc
shlb
sbb
add
cmp
add
das
call
rclb
and
mov
rolb
and
scas
out
or
imul
mov
test
pop
pop
and
movsb
movsl
cmpsl
mov
lahf
shrl
call
aas
push
enter
rclb
sbb
cs
or
add
lea
jo
bnd
ljmp
add
pop
scas
add
sbb
cmp
inc
or
xchg
cmp
sub
bound
mov
sub
scas
xor
jbe
pop
dec
lea
add
sbb
xor
add
sbb
mov
cs
add
mov
das
jmp
lods
add
sub
add
cld
stos
inc
jo
sbb
add
adc
push
shl
insl
xor
jbe
dec
gs
fnstsw
mov
pushf
push
es
ret
add
lods
adc
bound
mov
std
dec
fucom
add
add
xor
not
inc
aad
push
jns
incl
repz
jbe
add
add
flds
cmp
inc
roll
pop
ja
lcall
add
pop
fstps
add
cmp
push
les
xorb
addr16
lcall
subl
add
aaa
sbb
mov
in
sbb
adc
add
jae
cmp
mov
out
cltd
add
add
lods
and
add
nop
outsl
out
xor
inc
sbb
insl
aas
xchg
testb
scas
mov
ret
and
aad
dec
rcrl
sbb
lds
insb
xchg
add
les
frstor
sub
arpl
sbbb
verr
fcomip
aaa
sarb
adc
adc
inc
xor
add
mov
lock
mov
mov
or
pop
movb
dec
ret
mov
les
mov
push
dec
adcl
std
rcrb
xor
jecxz
movl
and
adcb
dec
and
imull
daa
cmpsb
sbb
cmpsl
imul
rcrl
mov
cmp
cwtl
pop
add
xor
push
push
fistpll
push
cmc
pop
xor
shll
in
add
xchg
loop
or
scas
std
xor
cmp
mov
inc
flds
inc
or
sbb
dec
add
cmpsl
add
int
subb
loop
add
xchg
addr16
add
xor
jle
add
pop
add
push
out
rcrl
ret
shlb
mov
add
gs
repz
pop
cmp
jne
jae
dec
insl
lret
ror
ljmp
sahf
add
lods
xchg
pop
jae
push
push
je
and
addr16
cmp
add
dec
mov
add
inc
std
clc
and
shlb
xchg
imul
adc
or
mov
mov
push
add
add
int3
jecxz
pop
leave
dec
or
mov
or
cld
xor
add
jl
icebp
les
scas
shrl
cmc
shll
aas
pop
add
fidivrl
and
pop
inc
roll
xor
add
lods
cmc
add
jle
jge
orb
pop
je,pn
add
sub
cmp
shlb
and
leave
pop
adc
jnp
pop
movsl
dec
cmp
cmp
add
push
inc
xchg
pop
push
inc
and
out
xor
repz
andl
jbe
lock
xchg
cwtl
sbb
mov
adc
jnp
repz
or
push
push
stos
mov
lahf
out
outsl
imul
push
push
fldt
fcompl
add
mov
add
push
xor
add
cmp
and
add
stc
push
cmp
xor
push
add
out
loope
jle
shrb
fwait
je
shrl
lock
icebp
cmp
jns
ja
pop
out
add
cmp
jecxz
jle
sub
add
fstpt
push
call
leave
add
rcr
mov
test
lret
std
add
adc
or
fadds
mov
outsb
sbb
cmp
and
daa
shll
push
lea
xor
push
sub
and
fs
in
lods
and
ret
dec
mov
mov
inc
cmpsb
add
in
out
jo
shll
push
retw
adc
repz
xor
mov
or
and
js
call
outsb
sahf
insl
sbb
add
or
les
or
xchg
call
sbb
inc
lret
cmpsl
jle
add
and
mov
and
cli
dec
pop
mov
sbb
enter
xlat
aam
add
outsb
jmp
mov
inc
mov
add
mov
loopne
add
in
jae
xor
in
mov
cs
idivb
pop
jo
push
jp
notl
sahf
mov
out
das
lcall
mov
cmpsb
jmp
mov
jge
cmp
psllw
xor
sbb
add
int3
loop
inc
imul
add
push
mov
sub
inc
inc
cmp
xorb
cli
js
pop
fsubp
or
test
mov
scas
sub
das
in
ret
pushaw
in
mov
sub
xor
sbb
mov
insl
sbb
cmp
add
pop
xchg
ret
subl
adc
mov
cli
addr16
shrb
ds
mov
cmpsb
push
add
idivb
push
sub
pop
push
pop
arpl
mov
fst
dec
xlat
inc
xchg
push
mov
pop
data16
mov
rcll
sarl
std
push
fsubl
lahf
adc
adc
xor
jne
aam
cmc
movsl
push
add
jl
ret
rorb
and
lods
xchg
fdivrl
and
mov
stos
inc
lock
pushf
add
insb
jne
inc
shrd
pushl
lds
add
loope
inc
add
sbb
sub
data16
outsb
push
add
mov
stos
pop
and
add
mov
or
pop
add
sbb
xor
fisttpl
negb
add
gs
shll
syscall
in
popf
pushf
cmp
shlb
xor
dec
and
add
stos
xor
add
mov
jo
xchg
lret
push
aaa
movsb
adc
add
jecxz
add
pushf
lds
push
stc
aas
addb
mov
les
jae
add
sbb
shlb
sub
rol
add
mov
jge
add
pop
lds
mov
mov
and
inc
ret
adc
ret
push
lods
iret
icebp
hlt
add
xchg
int
dec
mov
xorl
outsl
push
mov
sbb
add
pop
jl
xchg
mov
mov
and
mov
in
clc
cld
imul
rcrb
movsb
xorl
adc
in
push
popf
mov
rcrl
adc
sbbb
lahf
sbb
mov
sbb
jecxz
xchg
das
stc
sahf
xorl
ret
add
aad
push
addr16
mov
push
mov
cmp
js
call
push
enter
aas
inc
test
push
dec
ficoml
xor
dec
filds
push
test
addb
sbb
xor
aad
add
loopne
leave
mov
jl
subb
mov
xor
adc
mov
add
addb
sbb
insl
mov
rclb
cs
pushw
jns
inc
sub
add
pop
pop
and
sbb
add
mov
xchg
ja
or
push
loope
rorl
test
cmc
inc
dec
mov
addb
add
enter
iret
pusha
sbb
pop
lahf
daa
ljmp
add
dec
ja
fwait
in
gs
mov
loope
notb
push
add
jnp
loop
adcb
and
adc
jp
cmp
sbb
shrb
adc
sub
cli
insl
xor
cltd
in
xor
insl
cmova
ret
adc
add
pushl
and
loope
pop
das
and
cmp
jno
sti
adc
outsl
out
mov
pop
int3
lret
ror
sarl
fisubrl
adcb
das
je
test
outsb
push
adc
loopne
insl
sub
mov
bound
jae
sti
cmp
in
xchg
fisubrl
cmp
js
jnp
pop
jp
sbb
aam
xor
shl
add
dec
push
call
fwait
mov
loope
xor
push
cs
adc
jmp
fistpl
or
aad
lahf
sbbl
adc
adc
sbb
adc
and
add
jb
jns
fwait
push
fistl
enter
test
pop
enter
stos
xor
pop
insl
cmp
xchg
out
clc
mov
sub
or
inc
out
xchg
sbb
xlat
pop
pushf
out
arpl
loop
sbb
movsl
pop
cmc
testl
iret
loope,pn
xorl
fwait
and
xchg
jae
add
into
jno
cmp
xlat
lcall
add
loopne
add
xchg
jge
sahf
jb
xchg
add
jle
fwait
mov
sbb
mov
and
push
test
aas
in
lcall
scas
cmpb
filds
push
jg
fcmovnbe
out
mov
rcl
mov
out
xor
je
dec
inc
out
stos
incl
xchg
mov
and
sbb
mov
or
lods
orl
sbb
sub
dec
add
add
rcll
mov
sahf
cmp
notl
xor
xchg
out
popa
pop
inc
mov
add
adc
rcr
imul
outsb
lods
or
xchg
ret
jno
insb
xor
or
xchg
jo
pop
pusha
ror
inc
das
pop
pop
xor
ficompl
jge
add
outsb
mov
aas
inc
add
sbb
cli
inc
ljmp
jmp
cld
push
add
mov
pop
mov
bound
push
xchg
push
xor
cmpl
dec
push
or
and
sub
sub
fisubrs
repz
test
cmp
lahf
mov
mov
sub
ss
repz
add
and
xchg
fisubl
neg
fs
outsl
iret
dec
mov
shll
xor
in
cwtl
add
cmp
mov
push
mov
mov
nop
or
mov
sub
cmp
test
andb
outsb
je
cmpsl
inc
xor
sub
xor
ret
jbe
sub
pop
push
pop
mov
xchg
xlat
and
or
stos
pop
push
adc
xor
ret
and
cmpsb
and
or
rclb
cmp
adc
pop
mov
cwtl
scas
dec
and
into
add
sub
test
or
icebp
mov
and
shlb
loop
mov
js
lret
push
mov
jge
or
imul
dec
mov
js
std
add
mov
addr16
add
cmp
add
jecxz
mov
mov
retw
sub
stc
clc
mov
push
mov
pop
sarb
add
push
jmp
adc
cwtl
add
loope
dec
adc
add
sti
push
jns
xchg
xchg
sbb
hlt
add
cmp
jecxz
scas
fcomip
jmp
add
test
leave
jns
and
push
inc
xchg
jg
cmc
shrb
clc
sub
add
add
cmpsl
xlat
aad
stos
mov
test
or
popf
pop
xlat
jp
xchg
pusha
inc
xor
xchg
shlb
imul
sarb
push
mov
arpl
ret
pop
push
insb
xor
push
andl
mov
sub
add
movsb
add
mov
in
lods
xchg
int
xor
push
xlat
mov
ss
push
enter
add
inc
xor
adc
push
dec
inc
xorl
jnp
or
roll
add
pop
sbb
and
jecxz
mov
lcall
pop
lds
mov
cmpsb
inc
sub
inc
pop
pop
add
cmp
push
cmp
mov
les
sub
xor
add
outsl
mov
mov
cmpsb
add
subl
cmp
xchg
xor
push
add
xchg
loop
inc
pop
add
add
jecxz
adc
push
scas
shrb
dec
inc
jb
adc
push
aaa
xchg
mov
movsb
add
clc
dec
fnstenv
jecxz
add
insb
leave
out
push
mov
lcall
mov
pop
mov
push
sbb
insb
lret
sub
jl
lahf
xor
imul
push
lods
int
mov
incb
sbb
out
fnsave
xlat
outsl
movsb
sub
popf
hlt
push
push
pop
or
dec
xor
push
bound
xchg
out
jne
mov
in
and
add
out
cmp
js
and
or
pop
cmpsb
xchg
adc
jns
lahf
lods
mov
sbb
sub
pusha
les
int
xchg
lahf
sub
ficoml
jp
dec
and
and
ret
cmp
mov
mov
xor
sbb
fcompl
in
jg
cmp
jle
mov
sahf
xlat
scas
lods
cmc
or
xchg
cmp
add
sahf
xor
add
fimull
sub
mov
into
in
inc
pop
addr16
and
das
xor
add
or
mov
lahf
rolb
mov
ljmp
mov
lret
jl,pt
sarb
xor
inc
sub
repz
scas
mov
subl
add
repnz
push
sbb
loope
lret
inc
mov
xor
and
sbb
xchg
loop
push
cmpsl
jge
roll
mov
or
outsb
inc
mov
mov
lds
rcr
and
dec
or
rolb
add
xor
shlb
dec
xchg
lahf
mov
add
icebp
mov
dec
add
dec
xor
stc
shr
xchg
push
mov
xor
jp
int3
outsl
mov
lock
jne
scas
push
jp
sbb
ja
dec
fwait
jge
add
pusha
inc
push
mov
into
lods
push
adc
push
stc
cmp
int
xchg
adc
adc
fsubr
adc
push
arpl
enter
lods
out
mov
sbb
int
cs
pop
data16
sbb
or
stos
xlat
stos
jbe
test
or
pop
mov
push
mov
roll
es
rcl
pop
jmp
and
jmp
and
bound
in
int3
cwtl
arpl
mov
jp
das
cld
or
mov
out
xchg
aaa
ljmp
fwait
dec
aam
mov
inc
mov
int
dec
mov
sub
mov
sbb
and
cmp
mov
fdivrl
add
fbld
cmc
lret
outsl
jp
lret
sbb
pop
push
inc
mov
popa
daa
mov
inc
sti
loop
mov
call
jb
pop
inc
fsub
mov
lods
add
loopne
movsb
fcmove
sub
add
mov
dec
add
sbb
rcrl
add
sbb
sti
aaa
outsl
pop
add
jns
ss
adc
or
cmp
dec
inc
add
cmpsl
xchg
std
and
inc
add
push
xchg
add
xchg
xorl
cltd
cmp
test
popa
adc
mov
jecxz
mov
roll
ja
pop
cmp
movsl
dec
xchg
shlb
jne
mov
xchg
sbb
movsl
xchg
ret
pusha
jp
xchg
inc
dec
xor
add
add
fs
cmp
mov
data16
subl
xlat
aaa
adc
inc
das
mov
mov
adc
adc
inc
sahf
mov
pop
test
and
cmp
inc
pusha
mov
xchg
fnsave
push
mov
mov
lahf
pusha
sbb
sbb
jbe
push
loopne
sahf
lcall
add
outsl
lds
sub
or
mov
in
sbb
xchg
leave
push
fsubs
test
popf
in
jbe
cltd
add
inc
cld
jo
inc
pusha
mov
adc
sti
cmp
push
and
and
xor
inc
repz
sbb
outsl
xor
push
sbb
mov
lret
inc
fsub
dec
call
add
lds
xorb
in
lret
cmp
and
add
lahf
adc
fdivrs
push
lods
pop
in
fst
jg
cmpsb
ret
stos
or
xorl
add
shll
test
scas
add
pop
lds
and
data16
add
fiaddl
ret
ljmp
cmp
add
and
cmp
mov
add
loope
xchg
aad
add
push
add
pop
jecxz
je
jle
stos
pop
cmp
stc
xchg
call
mov
mov
xor
mov
pop
ss
imul
mov
dec
jae
add
subb
add
clc
hlt
mov
test
mov
add
dec
add
jle
or
cli
add
je
loop
push
in
add
popa
rcll
test
dec
xor
mov
iret
adc
addr16
add
cmp
push
add
mov
add
push
push
add
mov
je
add
loopne
bound
xor
mov
sub
mov
ja
repnz
ja
add
cmp
inc
or
xchg
push
xlat
arpl
jno
cli
ss
add
std
adc
adc
in
pop
mov
add
lret
and
xchg
sub
repnz
add
add
clc
bound
jmp
push
nop
inc
dec
adc
stos
pop
add
mov
mov
das
jg
push
xchg
cmp
inc
dec
inc
dec
sbb
add
xor
fmuls
in
cmpl
inc
add
or
adc
das
mov
sbb
pop
ss
pop
shl
lahf
and
popf
into
loope
mov
mov
push
leave
data16
in
mov
adc
call
mov
rcll
mov
add
out
and
push
fnstsw
add
dec
inc
lahf
sbb
adc
lock
insb
inc
mov
hlt
mov
sub
sbb
ret
cmpsb
mov
mov
jo
filds
movsl
cmpsl
out
loopne
mov
scas
cs
in
add
bound
xchg
mov
xor
jne
push
ficoms
test
imul
imul
iret
fcomip
loop
push
cmp
loopne
js
in
sbb
lcall
sbb
inc
add
sbb
pop
add
nop
ficomps
pop
push
lock
xor
pop
mov
into
pshufw
popf
out
inc
loop
bound
jecxz
data16
inc
xor
mov
cltd
ss
add
repz
test
repnz
in
andb
xor
mov
jecxz
add
pop
jmp
mov
test
push
cmp
mov
inc
add
add
popa
mov
dec
push
push
xor
xor
lret
inc
fwait
and
dec
shrb
mov
fs
popa
jle
or
xchg
add
fstpt
in
sub
movsl
mov
stos
insb
add
adc
mov
add
fcmovu
jo
push
cmp
ljmp
cli
js
dec
add
jp
xchg
lock
mov
test
sbb
adc
add
out
lret
inc
and
nop
dec
fistl
rolb
xchg
rorb
ficompl
aam
dec
imul
mov
rcll
cmpl
adc
pop
add
lods
insl
repnz
push
push
ss
mov
repnz
scas
cmc
pop
jmp
pop
movsl
sbb
lods
aam
sbbl
cmp
js
fidivl
pop
popf
cmp
rorb
adc
mov
repnz
or
stos
in
adc
push
add
pop
lds
sbb
mov
add
loope
mov
lret
cmp
push
sbb
lcall
push
jnp
mov
data16
pop
mov
iret
insl
mov
pushl
mov
inc
adc
aaa
imul
sbb
push
decb
outsl
or
cmp
pop
daa
and
call
inc
scas
cld
cmp
jecxz
mov
mov
cmpsl
mov
fsubrs
fucomip
adcb
pop
push
outsl
jae
jmp
mov
ds
out
jb
pop
jle
cmpl
pop
mov
push
and
add
push
or
in
xor
mov
fst
add
add
popf
jp
or
add
imul
jp
mov
inc
mov
daa
bswap
outsl
cmp
loope
add
aad
movsb
nop
sti
lret
sub
sub
add
adc
add
and
dec
jmp
scas
push
dec
scas
pusha
lock
data16
jo
dec
xchg
pop
mov
sti
cmp
xor
sbb
pop
inc
or
lea
add
xor
jp
shlb
ss
or
cs
out
sbb
mov
xor
dec
add
mov
xor
out
sbb
movsl
push
jno
out
out
movsb
adc
sbb
mov
or
jno
data16
xlat
fwait
pop
test
das
push
iret
aam
cmp
jmp
sbb
mov
jb
inc
add
or
mov
push
cmp
addr16
icebp
jle
pop
bound
jmp
addr16
out
cmp
jge
mov
loop
sbb
or
lds
sbb
add
mov
mov
andb
sub
gs
cld
int3
lods
movsb
xorb
jecxz
adc
addr16
arpl
mov
or
bound
mov
add
sbb
push
nop
sbbl
jp
inc
shrl
outsb
inc
cmpb
in
mov
scas
add
fsubrl
adc
or
mov
sbbl
scas
mov
or
dec
lcall
push
in
lcall
xor
incl
aam
jg
push
and
inc
sbb
dec
outsb
test
or
fisubl
ja
push
sbb
jmp
outsb
rcll
cmp
xchg
push
jo
cli
test
pop
sub
mov
push
adc
or
push
push
jmp
pusha
cmpb
int3
mov
mov
dec
push
ret
loopne
cli
sub
sbbl
dec
ret
jb
add
test
add
sbb
xchg
je
into
sub
jp
insl
cmp
mov
into
and
add
fists
sbb
mov
mov
fistpll
pop
inc
or
mov
jge
dec
push
or
ret
mov
movsb
mov
and
dec
xchg
mov
add
lods
shlb
add
xor
or
mov
mov
mov
xor
pop
cld
dec
sub
sub
insl
jl
add
sbb
dec
sti
or
xor
xchg
cmp
xchg
xlat
dec
sbb
jp
insb
xor
outsl
or
sbb
mov
cmp
dec
inc
mov
test
mov
es
xchg
ret
xchg
decl
aas
dec
jne
push
gs
and
imul
adc
sub
test
int3
repnz
xchg
push
mov
rclb
or
cmc
xor
push
movsl
jns
adc
push
mov
stos
sub
mov
cmp
and
orps
leave
aas
and
addb
adc
repz
mov
push
inc
test
lret
sbb
daa
or
mov
add
push
outsb
jge
ds
loop
or
xor
lods
insb
mov
ja
push
xchg
mov
adc
push
int
ret
mov
hlt
xorl
mov
ficoml
ljmp
rcrl
std
ficomps
xchg
outsl
subb
out
and
inc
add
xchg
adc
xchg
icebp
divb
add
push
xchg
add
xor
push
rorb
in
loopne
mov
pushf
add
and
mov
adc
pop
inc
or
addr16
call
jbe
fs
aaa
xchg
cs
add
xchg
cwtl
xor
rcrl
and
and
xor
mov
pop
es
mov
in
mov
stos
add
and
pop
shlb
and
loope
add
cmc
movsl
and
xchg
mov
inc
test
fstp
cmp
shr
and
sub
jb
cmpb
testb
add
xchg
add
push
cli
insl
add
jge
cmp
sbb
ret
sbb
mov
dec
in
inc
mov
ror
je
add
nop
cmc
sti
insl
icebp
fildl
iret
cwtl
push
sbb
inc
sarl
add
push
out
arpl
js
mov
sahf
xor
mov
push
pmulhw
add
data16
inc
mov
cwtl
adc
jae
xor
and
fwait
scas
stos
jmp
addb
enter
pop
ret
add
sahf
sbb
xchg
xor
int3
cmp
mov
pusha
data16
xlat
sub
add
mov
mov
jecxz
test
pop
mov
xchg
adc
lret
movsb
loope
aad
jg
inc
call
cmc
inc
sarl
clc
out
cli
adc
xor
add
bound
imul
sbb
adc
popa
lea
roll
ss
icebp
clc
mov
sub
sbb
pop
and
enter
into
aaa
pop
out
add
pop
icebp
xor
aas
cmpsw
adcl
aam
cli
fsubrs
idiv
loop
cmpsb
xor
inc
roll
xchg
cmp
mov
adc
into
push
push
add
call
shrb
cs
add
adc
test
inc
push
cmpsb
dec
ss
add
dec
ret
popf
call
mov
xlat
inc
xchg
or
adcl
or
mov
jmp
pop
int
xchg
xchg
inc
pop
or
xor
cli
add
loop
xchg
jne
out
testl
test
add
int3
mov
pushf
dec
or
push
jnp
loope
dec
rolb
leave
nop
add
test
jle
in
adc
popa
and
push
cmp
add
pop
mov
add
int
lret
push
insb
add
add
rcll
dec
add
mov
mov
add
sbbb
xor
shl
add
scas
sub
push
inc
pop
addb
rorb
fistpl
bound
add
out
sbb
data16
inc
stos
fwait
daa
jle
lods
loopne
cmp
pop
rorl
cmpl
jbe
ds
in
jge
pusha
pop
mov
cmp
cld
popf
pminub
hlt
mov
inc
xor
sbb
xor
jecxz
mov
sbb
and
push
les
in
loope,pt
sahf
ret
mov
add
add
sub
inc
push
enter
or
ljmp
and
cmc
mov
loopne
insl
adc
add
fadd
push
lcall
cld
pop
inc
adc
and
iret
add
mov
add
mov
shlb
add
movsb
xchg
stc
cmp
jmp
lds
out
int
xchg
outsb
popa
scas
ret
and
add
sbb
sbb
adc
xchg
enter
lds
or
mov
add
clc
adc
add
mov
scas
add
lret
and
add
lods
mov
shrl
inc
gs
or
jae
and
jecxz
add
rcrl
bound
inc
dec
jl
adc
push
ret
mov
cltd
inc
push
daa
sbb
adc
sub
insb
add
xor
add
cmp
sub
mov
inc
add
pop
add
sbb
push
aam
scas
add
pop
push
pop
mov
pusha
pop
lods
mov
push
test
fidivl
in
sub
add
sub
dec
push
sub
leave
gs
inc
scas
insl
arpl
add
dec
add
mov
sti
cmp
movsb
jnp
add
roll
mov
roll
mov
loopne
and
in
add
xchg
popa
repnz
mov
add
add
xor
sub
push
addr16
loope
cmpb
push
add
js
daa
cmp
roll
and
xchg
or
nop
enter
ficompl
add
into
int
inc
add
push
xor
mov
adc
inc
add
or
jmp
jge
or
add
scas
pusha
lret
lods
shl
or
loopne
mov
jbe
out
jnp
icebp
add
sub
ret
ror
push
lahf
sarl
adc
cli
mov
mov
add
leave
and
sbbb
call
das
xor
jge
dec
mov
orb
mov
add
push
pop
push
aad
add
stos
outsb
cmpb
inc
sysret
fidivrs
and
dec
iret
roll
pop
and
test
add
adc
dec
call
mov
in
dec
mov
or
out
leave
push
add
cmp
mov
call
addb
cmc
jp
fwait
ret
gs
lcall
lods
adc
xlat
aad
ret
aas
or
mov
xor
orl
roll
mov
add
iret
je
pop
jae
aad
sub
enter
jbe
aas
xchg
jecxz
jns
mov
mov
sbb
das
rcll
cmp
call
push
mov
mov
xchg
add
arpl
sbb
mov
jo
dec
rcrb
and
shrb
xchg
jl
out
test
aam
mov
push
stc
push
roll
leave
xor
orl
adc
mov
xchg
cltd
stc
add
mov
repnz
add
mov
add
inc
push
ficoms
shrb
push
loope
dec
inc
dec
les
inc
dec
mov
lods
rcrb
mov
jnp
insb
jbe
arpl
pop
inc
add
mov
add
cs
aas
or
fildl
aam
push
mov
jae
mov
rcl
pop
xor
add
and
adc
ror
xchg
inc
jns
xor
sbb
xor
lcall
les
int3
pop
xorb
jo
cmp
mov
sti
les
jmp
push
enter
add
push
std
and
insl
pop
pop
xchg
cmpb
or
in
mov
and
aam
or
jmp
push
scas
add
popf
add
js
mov
xor
lahf
and
push
add
jle
fldl
add
int
mov
inc
jmp
add
data16
jg
and
mov
sti
gs
movl
jb
push
mov
push
shlb
mov
mov
mov
bound
iret
xor
dec
mov
sahf
push
adc
daa
das
pusha
into
mov
pop
iret
mov
xchg
cmp
lods
inc
test
xor
sub
mov
mov
pusha
adc
ret
sbb
fs
fsubp
popf
or
sarl
je
negb
xor
add
out
out
pop
mov
and
pop
sbb
push
and
retw
add
in
cmp
shll
aaa
ficoml
mov
mov
cmp
stos
aas
add
add
into
std
filds
mov
adc
xchg
or
rol
push
sbb
scas
je
test
or
and
xlat
mov
clc
aaa
push
push
jp
cmpsb
lret
add
cmp
repnz
push
mov
gs
cmpsb
cmp
cwtl
push
or
xchg
mov
stc
out
xchg
mov
stos
push
inc
push
mov
ljmp
xchg
stos
sti
mov
adc
sbb
mov
decb
add
xchg
jg
iret
addr16
imul
fwait
jo
and
into
orb
xor
test
pop
cli
scas
test
gs
add
mov
sub
scas
loope
mov
cs
xchg
inc
decl
out
push
iret
xchg
mov
icebp
decb
cmp
jb
sub
inc
adc
inc
mov
hlt
add
add
lret
mov
jge
jle
fiaddl
push
mov
and
sub
rclb
es
mov
jl
and
sbb
test
jae
call
adc
mov
rcl
pop
xor
outsl
add
sbb
addl
xorps
loopne
jge
pop
scas
add
orb
cmpl
cmp
jge
cmp
add
add
fs
mov
add
lods
out
ret
mov
ret
lock
sbb
push
cli
rclb
push
sbb
add
push
aad
mov
stos
test
add
or
test
sbb
stos
bound
fldenv
add
loopne
add
inc
mov
pop
fbstp
add
pop
sbb
add
push
ljmp
stos
or
into
leave
lret
lret
imul
popf
out
cld
adc
ss
data16
test
pusha
std
adc
cli
push
aas
icebp
add
or
into
push
mov
mov
daa
ficoms
mov
cmp
incb
cwtl
iret
js
add
mov
out
add
sub
push
out
jecxz
enter
push
xchg
or
sbb
inc
xchg
add
dec
mov
lea
inc
inc
add
lcall
dec
daa
out
mov
mov
inc
enter
repz
sub
lahf
xchg
loop
lods
xor
negl
imul
pop
jae
add
mov
sub
scas
add
ret
shrl
call
and
jg
mov
out
adc
clc
jmp
icebp
cmp
mov
lds
bound
mov
fcmove
mov
stos
stc
add
push
jecxz
data16
ret
add
dec
fmulp
and
mov
cmp
add
lods
stos
shrb
or
je
push
and
in
jno
sbb
add
inc
cmpb
rorb
dec
add
pusha
push
adc
pop
push
scas
int
clc
jne
jmp
adc
push
pop
stos
mov
mov
push
ds
add
inc
and
inc
adc
add
mov
xorl
and
cmp
pop
out
mov
add
fidivrs
iret
add
testl
and
add
mov
mov
add
loope
mov
push
fldl
popf
pusha
cmp
incb
cmp
inc
out
sub
and
add
orl
insl
shll
stos
sbb
inc
fldt
in
sub
push
push
xor
add
icebp
popf
xchg
add
rorl
mov
lods
ret
sarb
int
add
pop
add
lds
iret
sti
sub
and
inc
testb
mov
aam
arpl
add
into
aas
jle
and
add
push
inc
js
jb
push
repz
fnsave
and
mov
rcrl
xchg
addr16
call
mov
xchg
xchg
shrl
stc
loopne
mov
shr
mov
cmp
ds
jge
pop
add
xchg
fldenv
hlt
inc
or
cmpl
xor
xchg
aam
sbb
pop
add
xchg
jb
add
add
and
pop
jbe
popf
or
add
pop
lods
add
dec
jne
inc
stc
add
dec
add
push
or
and
add
cmp
addl
add
insl
mov
testl
cli
jg
je
add
dec
xchg
jmp
pop
add
ret
jne
lahf
push
stos
mov
pop
mov
add
push
jg
repz
js
cs
adc
jl
sahf
push
test
sbb
loope
leave
je
sbb
mov
dec
scas
mov
cmp
cwtl
push
repz
insl
mov
push
xor
iret
bound
adc
pop
add
out
mov
shr
lods
sub
popa
sbb
and
or
xchg
add
inc
adc
iret
mov
jp
mov
jmp
sub
mov
pop
lods
mov
xchg
jo
cmpl
and
add
stc
dec
bound
cs
cmc
xchg
mov
add
cmp
xor
sbb
mov
ss
pop
sub
add
xchg
mov
inc
scas
jmp
xchg
ds
push
mov
mov
fistps
pop
add
clc
test
inc
lods
mov
xor
xor
hlt
movsb
inc
xchg
push
loopne
jns
out
cmp
push
or
das
pop
dec
add
roll
add
out
mov
rolb
jo
mov
stos
aas
dec
xor
pop
jl
mov
add
in
and
push
data16
std
rcl
push
gs
iret
mov
xor
aas
inc
add
test
int
cmc
push
xlat
inc
or
cmp
or
rcl
push
add
rcrb
divl
pop
jne
add
push
push
cmp
cmc
mov
mov
popf
fiadds
outsb
aam
and
or
fxtract
aad
mov
fmul
into
loope
jecxz
js
sbb
ret
outsl
cmp
out
cltd
xor
addl
push
test
es
call
addr16
daa
xchg
out
push
das
arpl
sub
inc
call
les
and
ja
addl
sbb
repz
sub
push
mov
add
push
pop
leave
lods
into
adc
pop
je
test
cmp
add
adc
stos
sub
mov
js
arpl
movsl
push
or
mov
adc
sub
fiadds
push
or
clc
sarb
fs
mov
sub
push
sbb
sarl
push
call
cmp
xor
inc
push
sub
inc
xor
inc
add
pop
pop
sub
mov
repnz
fnsetpm(287
jbe
test
push
add
subl
out
cmp
mov
adc
pop
mov
sbb
sarb
dec
outsb
sarb
dec
aaa
add
stos
add
mov
sub
shlb
xor
pop
hlt
scas
inc
js
sbb
loop
out
xchg
adc
inc
mov
pop
xchg
jns
movsb
mov
in
pushf
clc
inc
dec
mov
sbbl
jns
push
cmpsl
sub
pop
dec
push
sbb
and
dec
add
xor
unpckhps
bound
inc
add
mov
sbb
roll
jns
cli
test
mov
and
out
popa
add
and
cmp
mov
push
test
ds
aaa
add
push
cltd
sub
push
add
mov
icebp
adc
inc
adc
xchg
add
inc
mov
out
sbb
testl
repnz
cmp
xchg
mov
lods
jle
cld
inc
ret
add
movsl
xchg
cmpsb
add
and
push
add
jnp
int3
or
sbb
ds
and
push
cwtl
loop
xor
stos
mov
shlb
out
rorl
lods
mov
jmp
and
adc
mov
or
sbb
cmp
sub
add
jmp
add
je
call
dec
cmpsb
add
vaddss
movsl
sub
xchg
in
stc
ret
test
int3
push
sti
mov
jnp
add
pop
mov
add
adc
hlt
xchg
aam
cli
add
mov
mov
sahf
mov
dec
gs
test
enter
mov
push
adc
xchg
jae
nop
sarl
sahf
popa
mov
outsl
sub
cmp
pop
jo
jmp
jno
andb
sub
add
sub
in
stos
jne
and
js
pop
jp
sahf
mov
outsl
mov
jecxz
arpl
adc
scas
inc
mov
test
inc
roll
insl
loope
sbb
data16
cltd
cmc
inc
jae
mov
addb
adc
jmp
xor
addl
add
dec
jnp
inc
cltd
sub
push
paddd
into
xorb
inc
ljmp
xlat
inc
inc
cmc
sbb
jp
ds
hlt
or
rclb
les
test
jb
cmp
jb
xchg
mov
or
nop
inc
xor
imul
push
pop
or
ja
dec
sbb
add
add
xchg
jp
sti
jo
adc
mov
pop
out
test
add
cmp
add
out
cmpsb
pop
std
adc
outsl
sub
cmp
sbb
subl
hlt
clc
and
jb
mov
adc
xchg
ja
stos
hlt
cmp
xorw
add
xchg
sbb
negb
nop
aam
pop
leave
inc
and
in
add
out
mov
sub
jns
adc
leave
data16
push
pop
mov
inc
adc
push
dec
ss
aaa
repnz
jp
jne
rcrb
pop
inc
ret
lahf
jns
arpl
repz
xor
xlat
lret
decb
and
imul
and
or
stos
add
outsl
inc
sahf
adc
sbb
jecxz
xchg
out
addr16
or
fs
ds
sbbb
cmp
adc
or
mov
mov
or
aas
xlat
pop
cmpl
arpl
dec
adc
or
daa
and
sub
lcall
xchg
push
mov
js
sbb
outsb
in
add
mov
pop
pmaddwd
out
jge
xchg
jp
xchg
jle
in
or
or
dec
aad
out
fs
dec
push
mov
xor
movsb
lahf
out
push
loop
push
push
mov
adc
call
nop
sbb
add
aad
cs
lock
int
mov
insb
lods
mov
push
addr16
mov
add
adc
and
fildll
jnp
add
setae
add
into
stos
jle
stc
bound
mov
cmp
add
and
mov
adc
xlat
add
xchg
adc
movsb
cmp
fldl
inc
rcl
mov
push
rcrl
popa
jo
xor
inc
std
gs
mov
lea
jno
add
addr16
mov
add
scas
loopne
cmpsb
sub
addb
test
xchg
xor
sbb
or
mov
jnp
xchg
mov
and
sbb
mov
je
test
bound
adc
sarl
add
insl
stos
and
into
andl
repnz
stos
roll
stos
aam
roll
sbb
or
mov
sbb
lret
cmp
mov
in
fistpll
mov
inc
addr16
ljmp
sbb
mov
cltd
dec
mov
into
mov
dec
add
stos
lods
pop
add
xchg
jb
cmp
mov
mov
add
daa
xchg
fidivs
rcll
pop
testb
test
mov
jno
push
add
inc
sbb
ds
lods
dec
lahf
and
loop
add
dec
inc
bound
daa
subb
imull
inc
movsb
sub
hlt
std
sub
popa
push
adc
add
mov
push
lods
mov
add
push
pop
test
inc
enter
in
cld
into
bound
xor
scas
jmp
sbb
fdivr
adc
data16
mov
and
inc
add
loop
mov
test
scas
dec
ss
addr16
lret
test
jbe
idiv
add
lods
adc
bnd
or
cltd
pushf
movsb
mov
test
lahf
add
dec
sbb
add
orl
and
cmp
add
cmp
das
cmpsl
loopne
add
inc
adc
or
dec
lods
and
outsb
jecxz
jno
or
rolb
int3
cmp
subl
test
out
dec
lock
and
adc
cwtl
addl
and
pop
pop
lret
or
jns
or
xlat
pop
and
fwait
in
mov
add
sbb
add
push
movsb
in
xchg
add
xor
icebp
jl
aas
inc
add
mov
rorl
mov
and
inc
test
sub
sub
roll
cwtl
xchg
orb
sbb
fs
iret
mov
sbb
nop
add
cmp
adc
adc
push
in
add
movsl
sub
and
test
shl
jne
xor
xor
sahf
andl
fildll
adc
shll
pop
jo
fwait
jl
cmp
xchg
ror
aaa
repnz
rdtsc
cli
add
pop
adc
sbb
out
push
out
es
mov
mov
fnstsw
inc
xchg
js
mov
xor
int
pop
aaa
rolb
ja
pop
xor
mov
push
and
int3
cmp
shlb
push
or
and
in
jne
in
imul
sbb
ja
pop
jno
dec
call
fcmovbe
or
add
hlt
jae
mov
add
cmpsl
xor
adc
pop
push
es
rolb
jp
mov
orl
lret
movsb
pusha
dec
add
sbb
mov
jp
add
mov
add
mov
negl
sub
push
test
fstps
pop
push
add
sub
jmp
imul
popf
push
aam
out
and
xor
add
sarb
adc
pop
add
arpl
test
stos
pushf
add
or
add
pusha
cmpsb
sti
sub
pop
outsb
inc
rcr
mov
add
or
shrb
repz
mov
fxch
ret
popl
ljmp
add
push
inc
ds
scas
cmpsb
movsb
icebp
add
sti
repz
add
fsubrp
push
adc
idivb
ret
jmp
icebp
xchg
mov
lods
pop
sbb
push
aas
push
fisttpll
add
mov
shrl
add
or
loope
add
ljmp
movsb
stos
jl
push
cmp
mov
add
adc
push
lds
xor
ret
adc
push
push
sub
dec
jno
dec
std
inc
pop
pop
cmpsb
jne
lcall
sar
stos
popf
pop
xchg
jp
add
rolb
fmulp
cmp
ss
jae
add
or
ret
mov
inc
aam
mov
pop
ja
mov
pop
rolb
repz
out
sarb
xor
push
es
or
fdivl
enter
fiaddl
lea
repz
xor
mov
lcall
pop
cmp
jnp
or
push
pusha
test
outsb
ret
das
pop
xor
repz
jp
mov
inc
fldl
imul
stos
lock
in
arpl
pop
pop
call
add
stos
out
push
adc
mov
inc
jl
and
loope
rcl
jo
ret
clc
cs
rol
sub
sub
lret
push
or
add
aas
and
add
data16
stos
cmc
dec
add
mov
testl
and
pop
mov
add
mov
test
mov
sub
xor
inc
faddl
call
xor
int3
add
mov
jb
movl
ffree
add
jge
cld
mov
movsl
push
dec
jge
adc
dec
cmp
out
sbb
jne
filds
push
mov
rolb
ljmp
inc
push
dec
lods
or
imul
into
jl
aas
lods
cmp
adc
cmpsb
mov
das
mov
ret
stos
int
imul
mov
jns
inc
adc
add
mov
lods
popf
pop
jmp
pop
push
xchg
sbb
push
pop
push
fdiv
mov
adc
dec
sub
dec
jno
loope
inc
testb
js
push
roll
pop
and
es
in
lds
aad
fwait
xor
cli
jge
int
jo
imul
test
xor
std
insl
xorl
adc
or
mov
test
neg
shlb
repz
sub
jg
add
nop
arpl
push
mov
sbb
jb
add
push
movsl
add
test
push
pop
xlat
add
jne
inc
fildll
add
and
mov
inc
pop
cmpsl
jmp
mov
xchg
push
fcmovnb
sarb
jne
jp
push
sbb
lods
add
dec
aam
and
mov
jae
lds
xchg
loope
dec
cmp
xchg
mov
loopne
xchg
popa
push
sarb
dec
lret
dec
incb
subb
xchg
cwtl
call
stos
addb
fsubrp
inc
dec
cli
in
and
js
int
dec
add
push
aad
mov
scas
mov
mov
add
cld
lds
and
jb
cmp
ret
adc
inc
xor
sbb
inc
xor
sub
arpl
mov
or
les
xor
inc
push
jge
imul
cmp
pop
add
adc
mov
sub
sbb
xchg
sub
iret
sbb
shlb
xor
lock
jnp,pt
out
fisttpll
sbb
push
sub
push
subl
cmp
sar
scas
xor
dec
add
pusha
cwtl
mov
enter
inc
push
dec
fs
outsb
add
movsb
lock
pushf
sbb
add
popf
addr16
pusha
shlb
dec
jne
subb
cwtl
mov
dec
add
sbb
cs
xchg
incl
sub
loope
add
jp
mov
movsl
xchg
push
imul
pop
sbb
mov
mov
xlat
popf
xor
aas
cltd
push
jg
ret
push
adc
sbb
mov
xlat
jmp
das
arpl
and
leave
sub
lahf
inc
js
js
lahf
xor
out
inc
adc
rol
popf
into
in
mov
fisttpl
mov
cmp
pop
scas
in
mov
rorl
test
pop
inc
xchg
pop
leave
xchg
ret
mov
rcr
cmp
cmp
xchg
sbb
jp
jmp
jnp
outsb
scas
push
dec
inc
add
push
inc
mov
pop
pop
add
imul
add
push
mov
rolb
mov
loopne
adc
xchg
test
imul
leave
iret
sbb
jle
adc
gs
push
shlb
daa
inc
roll
scas
or
jecxz
mov
jbe
and
xchg
iret
xchg
ja
sbb
js
cmp
scas
pop
mov
lret
addr16
inc
mov
repnz
cmpl
sbb
xor
jge
aaa
jae
hlt
and
ret
mov
adc
add
iret
fiadds
add
decb
add
or
test
rcrb
and
jp
add
push
cmpsl
loopne
popa
add
add
sbb
cmp
push
clc
add
pop
cmpsl
add
adc
mov
jp
pop
stc
cs
into
cmp
mov
adc
pop
add
int3
xchg
mov
or
pop
xchg
aam
add
cs
iret
pop
pop
repnz
shr
inc
movsb
and
mov
es
xchg
movsl
jo
les
clc
cmp
aaa
and
push
push
add
inc
fmull
mov
insb
add
ds
cmp
and
nop
cmp
rcll
icebp
repnz
dec
push
mov
loopne
aaa
faddp
fnstenv
cltd
pop
mov
cs
into
daa
add
xor
shlb
out
mov
fnstenv
jno
mov
or
mov
cmpsb
mov
xlat
cwtl
mov
xor
call
ss
cmp
leave
xchg
scas
xor
sbb
pop
lock
pop
bound
data16
adcb
sbbl
adc
cli
mov
adc
stos
out
das
add
mov
popa
mov
inc
addl
js
rcrl
mov
push
xor
sbb
lea
mov
mov
add
adc
xchg
jg
pop
roll
icebp
in
mov
lods
insb
enterw
sbb
roll
ljmp
mov
clc
pop
or
or
ds
jo
add
or
shrl
shll
push
pop
inc
pop
mov
mov
dec
test
movsb
or
cltd
cmp
add
mov
addr16
lock
and
add
stos
cmpb
cmp
cwtl
mov
xor
xor
adc
cmp
sbb
mov
sub
sbb
push
shlb
add
mov
je
icebp
inc
roll
adc
cmp
add
lods
fcmovbe
popa
jb
pop
add
mov
fisubl
shll
pop
push
xchg
inc
jg
test
mov
popa
xchg
dec
mov
daa
mov
das
lea
fcoms
push
cmp
add
pop
rolb
cmp
pop
daa
mov
pop
mov
add
es
xchg
mov
push
xchg
mov
and
aad
add
inc
jmp
xor
xor
inc
add
pop
sahf
xor
in
xchg
xchg
add
mov
and
leave
aam
adc
jnp
mov
fldl
mov
mov
xor
xchg
push
rclb
fst
ss
inc
mov
icebp
add
adc
mov
icebp
add
mov
popa
dec
into
mov
and
addb
sub
xchg
pushf
jmp
int3
cmc
cwtl
hlt
bound
aad
pusha
push
push
cmp
adc
and
out
lds
mov
cmp
jno
fisubrs
mov
push
rcll
jg
add
and
add
mov
add
pushf
repnz
ss
inc
test
idivl
and
or
loope
add
pop
in
add
arpl
mov
add
mov
sub
cwtl
iret
push
arpl
push
add
test
into
scas
stos
popa
adc
sub
lcall
mov
mov
pop
sub
and
sub
jg
sub
add
cmp
push
scas
roll
out
pop
jns
insb
push
mov
and
mov
movsl
mov
shlb
pop
popf
shrb
cmp
jl
cli
dec
jne
mov
cmp
les
add
dec
and
push
push
aam
in
pop
fst
repnz
jbe
nop
ljmp
jmp
mov
lcall
je
push
pop
or
popa
js
loopne
cli
push
pop
cmp
sub
sub
xlat
mov
jmp
lds
add
sub
inc
out
jge
and
scas
popf
push
sbb
in
idivb
inc
xchg
ss
rol
sub
sub
push
add
inc
scas
outsl
xor
or
inc
ljmp
xchg
movsl
iret
pushf
addl
daa
cmp
xor
jl
mov
inc
adc
push
add
fidivl
insl
fcomp
das
add
out
mov
jns
test
xor
outsl
sbb
rclb
lcall
movsl
add
cmpsl
ljmp
pop
pop
imul
adc
jmp
sub
pop
mov
stos
adcb
js
test
icebp
xor
mov
mov
mov
popf
fstl
mov
dec
pusha
add
ret
mov
leave
jp
pop
jecxz
add
xor
mov
in
xor
add
out
inc
leave
xchg
add
lock
shrb
pop
or
xor
shll
dec
in
sbb
cmp
xor
or
test
mov
cs
popf
jmp
or
xor
add
cmp
and
fldl
push
mov
xchg
mov
bnd
or
mov
mov
fstpt
add
hlt
inc
pop
ret
cmp
jl
dec
sti
xchg
insl
pop
jge
test
push
jae
filds
mull
add
add
das
add
sub
stos
sbb
test
adc
cmp
in
and
iret
inc
mov
das
out
jl
std
ds
add
push
inc
iret
sbb
mov
pop
add
or
rcrb
ss
loope
push
daa
add
pop
jb
bound
ljmp
add
in
mov
ret
mov
cltd
inc
cmp
inc
in
insl
jge
dec
sbb
movsb
mov
sub
inc
das
sbb
pop
xchg
test
gs
jno
inc
xorl
rorb
out
add
andb
inc
add
cli
fwait
cmp
or
shr
jbe
push
and
outsl
sahf
loopne
ficoml
push
stc
add
mov
hlt
add
testb
pop
test
sub
out
jecxz
adc
push
enter
xorl
outsl
mov
hlt
adc
icebp
repnz
sbb
dec
sub
xchg
mov
inc
xchg
sub
int
clc
fwait
xchg
add
stc
inc
arpl
cmpsl
jae
add
mov
xor
rcll
cmp
ja
lret
data16
xchg
mov
push
push
add
sahf
mov
push
andb
mov
aad
fstps
lahf
push
inc
into
movsl
xchg
enter
sbb
cmp
sub
int3
test
cmp
cmc
sbb
pushl
pop
adc
sbb
stc
and
pop
mov
cmpsb
ficoml
jne
in
mov
repz
or
push
outsl
jge
rcrb
inc
xor
mov
pop
mov
xor
je
ja
outsl
add
popf
lret
xchg
xor
sahf
and
adc
pop
shl
imul
add
outsl
cwtl
dec
pop
inc
pop
pop
movsb
adc
jge
imul
daa
out
adc
xor
aaa
test
add
dec
inc
hlt
imul
jl
add
shlb
pop
push
xchg
add
notb
add
mov
cmp
cmp
xor
dec
sub
sahf
lods
sti
add
cmovb
inc
cs
dec
mov
scas
or
cmc
xor
mov
lock
cmp
rolb
leave
rcrb
stos
push
ret
loope
sahf
or
dec
pop
mov
or
xchg
or
xchg
loope
mov
jl
dec
test
mov
push
sub
xchg
jae
and
sub
mov
or
mov
mov
cmp
add
mov
in
fwait
cmp
sbb
inc
sub
rorl
cmp
fdivrp
and
jge
inc
cmp
sbb
sbb
cltd
sbb
and
inc
pushl
into
push
sti
sbb
aad
repnz
and
arpl
jg
cmp
or
and
dec
mov
fisubl
push
mov
mov
adc
loope
ret
jp
iret
xchg
jl
jmp
movsb
dec
or
dec
mov
jg
aaa
sub
inc
cs
stc
lods
or
inc
adc
lret
cld
and
xchg
leave
dec
pop
aam
pop
cmp
or
xor
xor
ret
and
xor
fwait
out
xor
and
imul
add
mov
orl
xor
stos
cmp
mov
xorb
cmp
push
sub
xchg
and
pushf
ret
gs
dec
std
lcall
fbstp
daa
adc
push
mov
aad
call
pop
clc
xchg
cmp
sub
scas
adcb
call
pop
int3
sbb
fildl
lds
sub
lods
mov
shrl
and
adc
popa
pop
sbb
jp
test
adc
add
fwait
jbe
mov
xchg
leave
mov
dec
hlt
pop
ss
xor
xor
or
jne
dec
lahf
out
xor
outsl
pop
xor
inc
cmp
sub
setno
mov
int
sub
xor
dec
popa
mov
cmp
sbbb
bnd
jb
or
cmp
stos
sbb
dec
leave
ret
inc
mov
push
xor
jp
pop
push
ret
or
cmp
cld
cmp
dec
pop
sub
dec
jge
dec
jge
cmp
jns
jbe
or
loop
mov
lods
imul
cld
push
shlb
stos
dec
xor
sahf
test
xlat
mov
shlb
gs
stos
fs
xchg
adc
add
push
mov
ret
ret
loope
ficoms
or
lret
xchg
nop
push
cmovo
jp
xchg
mov
mov
jmp
std
dec
jp
cwtl
push
cmp
dec
cmp
jno
adcb
imul
or
repz
pop
adc
pop
sbb
stos
shll
mov
popa
mov
decb
insb
daa
pop
inc
adc
jp
adc
loope
in
dec
bnd
aad
adc
pushf
daa
mov
sub
xor
jp
sarb
sbb
cli
dec
xchg
push
sub
imul
repnz
dec
push
ds
scas
push
ja
inc
mov
sbb
rcr
pop
cmp
mov
sub
mov
xor
and
cmp
shll
mov
int
stos
sbb
or
lret
movsl
add
fstl
fsubrs
scas
xchg
push
xlat
add
in
and
and
dec
push
pop
movsb
ret
imul
mov
sbb
lea
push
std
lods
mov
push
aam
repz
sub
jmp
mov
mov
ret
arpl
loop
cld
sbb
out
inc
cmp
inc
lods
push
das
jl
xchg
xchg
enter
sbb
stos
xor
movsb
cmp
jp
pusha
unpckhpd
or
inc
ret
repnz
aad
call
sbb
inc
jp
jle
push
test
stos
cmc
xchg
add
lret
stos
add
les
sbb
jae
cmc
adc
test
hlt
scas
pop
push
cld
bound
cmp
adc
pop
sti
std
mov
push
or
add
shl
not
xor
mov
stos
shrl
cmp
daa
ljmp
push
xchg
push
sbb
out
push
cmp
cmp
lret
and
mov
add
stc
pop
insb
sarl
test
je
pop
inc
mov
pusha
or
mov
test
dec
cmp
sub
cmp
int
mov
pop
sub
add
pop
mov
jp
dec
and
shll
cmp
in
dec
and
mov
mov
xlat
adc
jge
adc
aas
push
push
daa
pop
mov
fnstenv
dec
orl
mov
shl
sbb
test
cmp
adc
fidivrs
and
movsl
cmp
push
shl
loopne
sbb
jp
xchg
sbb
adc
cmp
iret
cmc
jne
fiadds
mov
fsubr
pop
sub
in
mov
jmp
jp
cmp
lret
sbb
dec
gs
repz
push
fwait
pusha
adc
sbb
cmp
daa
dec
mov
lret
sahf
mov
jge
imul
jecxz
push
sbb
xlat
cmp
mov
xchg
cs
mov
out
xchg
jg
insb
and
xor
leave
icebp
lahf
ja
mov
cmpsb
jmp
cmp
cmp
and
jp
adc
pusha
jp
ja
rorb
inc
insb
and
cmp
jbe
outsl
fs
sahf
xor
cs
adc
ss
cmpsb
movsb
aaa
add
orb
add
fmul
lahf
insb
add
fbstp
cs
dec
pop
sub
adc
sarl
lret
out
adc
add
xchg
fwait
rolb
gs
and
setne
add
pop
jmp
stc
xchg
and
add
iret
push
cmp
pop
mov
insb
or
add
lods
inc
dec
roll
or
popa
ljmp
mov
sar
call
jo
call
jnp
and
pop
xchg
mov
cmp
cwtl
add
lahf
jne
stc
sbb
add
sub
xchg
push
mov
imul
sub
mov
fnsave
fs
jle
out
push
ret
cs
jecxz
lcall
orl
daa
mov
pusha
into
mov
outsl
arpl
sub
inc
lods
lcall
xchg
lcall
popf
shlb
in
push
xchg
insb
stos
xchg
pop
cmp
gs
aam
add
mov
bound
and
pop
adc
sbb
sar
ds
aad
or
inc
dec
adc
loope
jb
adc
fdivrp
and
insb
mov
dec
xchg
sbb
not
lods
or
repnz
cmp
add
ljmp
leave
jecxz
inc
pusha
fpatan
pop
mov
jo
mov
jne
pop
pop
imul
sub
or
ja
or
xchg
jge
adc
push
loope
push
mov
pop
aas
popf
divb
fwait
and
outsb
cs
sarl
ss
jnp
mov
adc
std
mov
mov
sahf
mov
in
xor
mov
lret
cmp
sarl
imul
scas
pop
xchg
and
or
xor
leave
inc
xor
xchg
and
stos
ds
and
sbb
aas
mov
imulb
sbb
addr16
dec
add
pusha
mov
in
xor
pop
mov
cmp
cld
mov
sti
les
aas
jge
ss
mov
ja
out
adc
test
jb
subb
call
dec
sbb
addb
jp
pop
rol
jne,pt
push
push
inc
push
and
subb
xor
cmp
fnstcw
out
shl
xlat
adc
movsl
xchg
and
or
imul
push
cld
pop
repz
pop
pop
ret
mov
shl
es
jo
divl
push
mov
push
mov
xor
cmp
or
xchg
push
jle
jl
push
jecxz
imul
pop
add
fcmovnbe
jl
cmp
mov
add
xor
insl
nop
mov
push
sub
sub
xchg
sub
xchg
sbb
sbb
cmp
cmp
lahf
inc
add
xchg
xchg
int
adc
adc
loope
sub
jge
cld
icebp
cmp
xchg
or
or
hlt
add
push
adc
inc
pop
add
rcr
inc
add
cmp
outsl
xlat
rorl
dec
dec
inc
and
in
nop
add
pop
enter
addl
push
and
shll
inc
dec
je
adc
sub
sub
rolb
lcall
xchg
in
jmp
lods
js
cmp
insl
arpl
repz
call
loope
adc
jo
mov
mov
mov
cwtl
inc
push
sbb
add
addb
mov
pushf
andl
xchg
rclb
jo
adc
push
jp
or
inc
in
cmpb
jle
adc
add
jp
divl
inc
cmp
jbe
xchg
cmp
icebp
jbe
stos
cmp
push
pusha
and
cmp
std
data16
cmp
test
adc
lods
out
and
jp
mov
scas
and
cmpsb
inc
xchg
and
outsb
call
lods
or
mov
xchg
arpl
aad
adc
jecxz
fwait
clc
pop
adc
jbe
stos
jg
lret
mov
insb
adc
mov
cmp
fwait
jne
pop
jae
jmp
dec
xor
jecxz
jno
scas
push
add
xchg
mov
ret
int3
inc
inc
arpl
clc
and
jbe
cli
sub
test
xchg
jns
iret
add
adc
push
fcmovne
mov
xor
jne
movl
adc
out
inc
in
decl
cld
sahf
vpmacsdqh
jmp
scas
push
xlat
mov
call
fisttps
cmp
cmp
jg
mov
pop
or
rcrl
sbb
jno
pop
add
dec
add
les
mov
mov
bnd
pop
pushf
add
test
lcall
fisubrs
mov
lahf
sahf
add
xchg
pop
cmpsb
dec
arpl
mov
jmp
xor
add
cs
cli
mov
add
or
ret
and
ret
scas
mov
fs
sbb
lods
jle
or
and
in
out
cmp
push
out
sti
cltd
loopne
iret
and
mov
scas
dec
insb
xchg
jp
or
popa
pop
mov
std
and
mov
dec
xchg
in
sbb
or
adc
push
push
push
jo
fdivrl
and
cmp
push
test
stos
cmc
cltd
int3
addr16
mov
cmp
push
cmpsl
jg
pop
xor
shll
mov
add
xor
inc
inc
jbe
outsb
out
pop
push
scas
dec
xor
into
je
add
jo
mov
pop
lods
mov
ja,pn
inc
jp
cmp
fs
or
cltd
sub
mov
stos
and
or
xorb
adc
dec
sar
sub
and
push
jp
dec
adc
js
adc
loop
hlt
in
ret
and
pop
pop
mov
cmp
nop
inc
test
pop
xor
ret
jg
sbb
mov
push
rolb
ljmp
sahf
or
add
sbb
or
imul
mov
repz
xchg
in
cmp
imul
std
xlat
pop
cmc
in
jbe
fidivrl
mov
sbb
sub
movsb
lea
inc
repnz
stos
movsb
loope
push
ds
xchg
mov
dec
adc
sarb
xor
sub
xchg
jmp
je
sub
mov
pop
rcrb
mov
xchg
fcom
sbb
lret
cmp
pop
sarl
or
sbb
rclb
fs
mov
gs
int3
pop
inc
cmp
adc
lock
sub
lods
jp
push
mov
and
js
adc
push
test
loop
scas
pop
sti
incb
mov
lock
xchg
mov
cmp
cltd
outsb
inc
fistl
adc
pop
lods
mov
jno
dec
mov
pop
cli
xor
bndldx
mov
xchg
in
test
jb
push
lock
push
jp
xor
ljmp
jle
leave
xor
mov
ljmp
dec
mov
xchg
aas
or
mov
cmovb
mov
adc
mov
cmp
icebp
push
sbbl
aad
mov
icebp
xor
inc
or
push
add
sahf
fildll
sbb
lahf
cld
inc
imul
inc
mov
mov
movsb
cmp
adc
mov
mov
mov
ss
xor
add
adc
xchg
lcall
lds
jp
movsl
sarb
cltd
mov
mov
inc
out
or
outsb
lock
addb
pusha
insl
call
and
subl
insl
mov
jae
lret
cwtl
clc
add
scas
add
sbb
or
adc
xor
xchg
xchg
imul
sbb
int
lea
mov
test
into
imul
sbb
cli
scas
loop
test
pop
sbb
je
dec
leave
addb
lods
ljmp
cwtl
in
outsb
xor
into
inc
push
and
ds
adc
push
pop
mov
inc
dec
lret
iret
push
jae
jg
xor
sub
test
pop
fstps
xor
fidivs
lods
mov
xchg
cmpsb
scas
xor
mov
shrb
push
lods
push
in
add
xlat
insl
sub
or
std
jecxz
jb
sbb
adc
xlat
push
adc
insl
ja
push
shrl
mov
sbb
add
std
stc
js
test
test
clc
adc
push
pushf
out
xlat
and
pop
and
arpl
mov
or
and
scas
fs
test
cmp
pusha
jo
cmp
test
mov
cmp
add
loopne
cmpl
push
adc
sub
or
xchg
xchg
movsl
sub
push
xchg
and
enter
addr16
add
les
xor
mov
add
and
inc
add
in
lock
mov
and
add
pop
add
sbb
cmp
or
lds
cmp
mov
rolb
pop
xchg
xchg
imul
arpl
jae
pop
repz
fsub
push
mov
sub
je
mov
stos
ja
push
dec
sbb
inc
push
out
and
imul
outsb
push
sbb
mov
test
xchg
inc
jae
jo
in
shrl
jbe
push
pop
cmp
ss
adc
les
jnp
cmp
repz
leave
ficompl
add
aaa
adc
jo
sbb
and
xchg
mov
mov
ficomps
pop
add
mov
les
call
mov
clc
mov
pop
pusha
sub
test
inc
mov
sbbb
stos
jb
and
test
sub
mov
in
addr16
and
dec
jge
rcrl
mov
out
and
into
cli
aaa
xchg
add
leave
dec
jp
call
cmp
aad
sub
sbb
cli
or
int
les
test
adc
add
sti
mov
add
outsb
inc
addb
je
sbb
mov
add
out
add
aaa
mul
mov
loopne
add
pop
mov
subb
aad
bnd
out
jns
cltd
loope
inc
int3
sbb
iret
in
shlb
iret
inc
aad
jmp
filds
loopne
or
dec
out
rcll
dec
fmull
cmp
test
scas
scas
inc
push
ret
pop
xchg
add
and
subl
rcrl
cmc
mov
push
cld
mov
adc
mov
mov
sbb
sbb
mov
js
or
add
add
mov
lahf
pusha
adc
xchg
xchg
jno
cs
dec
push
xchg
or
push
fisubl
jle
adc
pop
jne
outsb
scas
jecxz
mov
xor
mov
adc
push
cmovb
adc
test
dec
xchg
sarl
ret
adc
add
adc
add
cmc
shll
xchg
lret
or
mov
fnstcw
add
or
gs
fdivr
xor
rolb
iret
pop
push
mov
loope
testb
test
jmp
aas
jg
or
push
add
scas
push
dec
and
xchg
xchg
mov
sbb
int3
sti
pushf
cs
add
ret
sarb
add
aas
test
lea
js
dec
data16
pop
pop
sub
sarb
lods
sub
sbb
aam
jmp
dec
stos
mov
andb
es
sbb
add
adc
sbb
ret
sbb
mov
inc
test
arpl
xorl
mov
data16
pop
xchg
or
aas
add
rclb
mov
push
out
adc
ja
sahf
pusha
inc
bound
jns
xchg
test
leave
add
fisttps
ret
push
pop
dec
sbb
and
call
push
fnstsw
jo
sar
cmp
cmp
xchg
adc
stc
push
add
hlt
xor
repz
dec
pop
push
loope
pop
shll
xchg
addr16
dec
outsl
cmp
adc
fisubrl
or
add
stos
push
idivl
std
lret
cmp
xor
dec
jno
lahf
add
cmpsb
sbb
jmp
sub
lea
mov
adc
imul
or
inc
cmp
xor
xor
mov
adc
add
fxch
sub
jo
iret
ljmp
mov
ds
stc
inc
adc
out
ret
xor
and
or
cmp
and
mov
add
lahf
xchg
inc
sbb
sub
mov
fsubrp
ror
or
push
xchg
fsubl
mov
mov
add
shrl
dec
imul
xor
add
cld
dec
test
nopl
mov
ss
outsl
in
add
pushf
test
jp
mov
fwait
pop
add
aas
into
add
push
les
inc
push
jecxz
adc
lret
or
lahf
imul
push
xor
add
cmp
test
pop
add
into
xor
push
mov
cli
and
push
cmc
add
fld
scas
into
fwait
into
sub
pop
jbe
add
adc
add
jns
dec
add
mov
std
mov
cld
jl
pop
and
add
loopne
push
inc
ret
add
hlt
add
mov
adc
or
inc
aas
out
popa
add
imul
lock
test
and
add
filds
inc
adc
sbb
lcall
fsubrs
imul
mov
xor
movsl
jmp
jmp
aaa
pushf
rcrb
or
xchg
mov
add
out
aad
sarl
sub
mov
jne
jbe
jb
mov
add
mov
ret
push
mov
insl
daa
repz
add
loopne
bound
dec
sbb
cmc
inc
or
sarl
mov
push
or
mov
add
call
add
imul
dec
push
fs
pusha
add
into
mov
add
xchg
sub
inc
jp
lcall
fs
cmpb
jp
push
shrl
out
sbb
add
clc
hlt
test
addr16
gs
mov
pop
push
and
add
xor
test
jne
iret
int3
mov
mov
push
out
sub
outsb
push
je
mov
or
mov
or
sbb
sbb
call
cli
mov
adc
scas
cmp
xchg
sbb
or
cld
shl
xor
mov
adc
xor
jnp
adcl
popf
pop
repz
imul
add
jnp
cs
rclb
and
in
mov
scas
lea
push
subb
xchg
pop
das
add
sbb
mov
hlt
inc
and
aas
std
xchg
jl
jg
divb
jnp
and
mov
sub
mov
pushf
mov
add
pop
mov
add
daa
shrb
lret
arpl
ret
std
test
and
xor
pop
incl
cld
mov
shrb
gs
repnz
mov
or
loop
int3
adc
jae
dec
cmp
ret
inc
inc
and
add
enter
adc
movsb
iret
mov
adc
imul
mov
lcall
shrb
aam
hlt
add
lret
jecxz
gs
inc
adc
out
and
cmc
push
pop
and
or
dec
ljmp
int3
cmp
sub
insb
inc
ret
jp
into
lahf
iret
roll
es
add
enter
pop
push
add
js
shl
sub
cmp
test
fisubs
xchg
addr16
outsl
or
fnstcw
cmp
shlb
cmp
dec
or
xor
js
xchg
aas
push
xor
sub
mov
mov
add
sub
mov
fldt
ret
lcall
inc
jns
push
inc
adc
cmpsl
fcmovbe
pop
aas
push
fs
xchg
add
nop
cs
jnp
int
add
xchg
push
ss
adcb
mulb
arpl
gs
int3
mov
xchg
push
mov
pop
sub
xchg
sbb
lret
iret
mov
outsl
fiadds
xor
cmp
xchg
xchg
lds
popa
inc
mov
add
das
xchg
push
andb
fcmovnb
or
notb
dec
jns
xchg
add
or
cmp
into
shll
cmpsl
cmp
shr
jg
scas
aam
lret
pop
adc
pop
xor
stos
movl
daa
pop
cmp
sti
push
sarb
testl
jns
in
lods
inc
add
xor
inc
je
adc
nop
jp
fistpll
or
cmp
jg
add
xor
and
pop
andl
test
femms
jp
jne
movsb
push
add
divl
push
inc
jno
mov
imul
cwtl
je
lcall
out
xchg
cmpsl
cmp
cmpb
aas
cmp
ss
sbb
push
xchg
loope
fdivrs
inc
xchg
insl
xor
ret
loope
cmp
leave
inc
xchg
das
cmc
xor
ret
movsl
jns
cmp
inc
inc
cmp
sbb
fisttps
stc
push
pop
add
movsb
stc
lcall
repz
sbb
and
sbb
add
add
nop
xchg
fwait
adc
lods
cmp
fistpl
and
lahf
pop
imul
out
xor
mov
mov
stc
add
inc
and
sbb
pop
scas
bound
mov
or
sub
xlat
movsb
mov
mov
sbb
stos
xchg
shlb
sub
xchg
push
adc
or
ss
inc
mov
cmp
dec
inc
sar
sarb
mov
jmp
add
adc
push
xchg
movsb
gs
mov
jbe
lret
add
mov
jns
push
inc
or
ficompl
push
in
in
scas
sub
sub
adc
or
scas
sbb
sub
out
rcr
jne
add
cmc
xchg
push
or
xor
sbb
imul
sbb
js
and
mov
ret
cmp
push
lret
push
pop
push
insl
inc
sbb
cmp
out
ret
repnz
imul
cmp
push
outsb
adc
adc
xor
add
xchg
sti
inc
inc
adc
mov
push
shr
push
adc
mov
mov
mov
mov
outsb
inc
jno
das
xchg
aas
xorb
cs
adc
mov
fsts
cwtl
add
enter
pusha
adc
mov
cwtl
jp
push
hlt
mov
scas
imul
leave
and
pop
sbb
mov
stc
mov
add
push
test
jmp
fstl
cltd
out
adc
mov
pop
sub
repz
mov
xchg
mov
call
mov
lcall
aad
test
sbb
sbb
cmpsl
fstl
xor
cmp
push
scas
adc
push
scas
stc
adc
inc
loop
mov
dec
mov
add
and
push
pop
insb
dec
pop
push
ljmp
fcoml
or
scas
jb
shl
dec
test
roll
fs
adc
das
mov
imul
loop,pt
fisttpll
sub
push
cs
and
dec
lcall
mov
adc
cmp
inc
sub
test
pop
cmp
and
je
or
push
aaa
push
add
ljmp
push
jno
push
jp
lret
mov
xchg
ljmp
mov
ljmp
adc
lds
cs
outsl
ret
mov
jle
shr
add
adc
les
jl
xor
mov
sahf
ljmp
fimuls
xor
lods
xor
add
inc
and
sub
fwait
mov
mov
pop
push
cmpsb
stc
push
inc
push
jo
or
repnz
into
loop
aad
scas
int
cmc
xor
add
cmp
adc
cmp
in
add
out
cli
sahf
pop
cs
inc
jge
stos
in
pop
movsb
pop
xor
sbb
dec
fs
and
add
add
rcr
subl
loop
or
or
push
pusha
add
push
pop
adc
dec
cmp
pushf
xor
aas
add
and
add
std
mov
mov
sub
pushl
cmc
dec
add
call
mov
jae
add
lret
popf
pop
scas
insl
xchg
add
adc
or
xor
jb
pop
les
ds
xor
cltd
popa
lret
jecxz
fsubl
inc
xor
jb
shrb
sbb
add
xchg
push
fdiv
cmpsl
leave
cmp
mov
in
scas
cmp
out
cmp
rorl
pusha
push
lret
add
add
mov
xor
insl
adc
inc
ljmp
test
push
into
imull
adc
cmp
dec
mov
cmp
cmpsl
add
iret
xchg
and
inc
push
pushf
mov
add
jnp
incb
ficoms
inc
adc
xchg
add
adc
xor
fstps
mov
mov
dec
movsl
and
mov
rcrb
ds
addb
mov
popf
xchg
andb
cld
cmp
dec
or
and
add
sbb
lahf
jae
cli
mov
jecxz
pop
jns
inc
pop
inc
shrl
add
and
jge
inc
xchg
testl
push
push
sahf
xchg
or
mov
adc
les
push
add
jp
insl
ss
lods
jbe
jnp
pushl
jae
add
in
jns
clc
push
popf
cmp
sbb
jne
or
in
imul
pushf
loopne
and
cld
jmp
dec
je
push
xor
and
pop
and
dec
xchg
ja
jg
andl
and
and
inc
or
pop
ja
jle
mov
cmpsl
test
mov
or
xchg
push
add
mov
idivl
lds
inc
scas
cmpsl
push
pop
cmp
mov
cmpsb
pop
mov
test
jl
mov
ret
add
push
imul
add
add
arpl
jmp
mov
add
push
pop
inc
cmp
stc
pmuludq
sarb
add
jne
fnstcw
dec
ss
add
outsl
push
inc
push
or
iret
add
out
sub
inc
pop
or
push
addb
xchg
or
add
jmp
inc
fistps
test
inc
cmp
sarb
xchg
icebp
call
mov
movb
and
cwtl
aaa
jne
pop
xor
movsb
nop
mov
pop
xchg
ss
pop
jae
into
std
pop
cli
add
and
push
sbb
pusha
sbb
pop
inc
adc
cmc
mov
dec
or
dec
jecxz
push
xchg
add
add
jle
adc
ss
icebp
into
call
das
add
pop
stos
push
add
add
jnp
inc
shlb
cld
outsb
es
and
str
pop
mov
mov
in
add
divb
jp
fdivl
popf
xchg
out
mov
push
addb
shl
nop
or
jg
dec
pop
and
or
sub
inc
xor
xor
add
dec
jge
add
inc
pop
inc
add
clc
xchg
std
lock
push
pop
sub
aas
xchg
adc
ja
push
add
pop
push
stos
fcoms
add
loope
nop
insl
bound
dec
and
push
mov
jg
sub
xchg
mov
dec
mov
jno
lret
and
imul
mov
add
dec
adc
rol
mov
sbb
mov
pop
fsubrl
jb
iret
pop
lahf
add
add
idivb
cltd
xchg
inc
mov
in
or
xor
xchg
add
cmp
dec
and
lea
stos
jp
cli
jmp
dec
cs
jl
rol
mov
jle
sar
rol
xchg
cmc
lea
mov
and
seto
cmpsl
jl
push
dec
xchg
fstpt
add
or
add
jnp
and
jecxz
inc
lods
inc
jno
pushl
or
dec
add
add
add
and
or
cmp
mov
jns
push
aas
iret
js
push
mov
pop
hlt
pop
sub
icebp
cmp
push
fwait
push
cltd
inc
mov
dec
sbb
adc
test
in
mov
inc
in
out
leave
push
mov
push
cmp
cmp
in
jae
add
lds
addl
jb
push
out
add
ret
mov
mov
add
lret
imul
push
test
and
add
mov
dec
add
xchg
bound
xchg
xchg
hlt
add
pop
fucomp
into
inc
out
dec
mov
inc
mov
add
jbe
xchg
inc
or
movsb
xchg
mov
mov
arpl
fmull
cmp
inc
sub
sbb
add
mov
jae
mov
jne
or
push
imul
scas
lea
out
addb
sub
cmp
add
cmc
fwait
adc
add
sbb
xchg
les
and
sbb
mov
sbb
xor
or
add
cmp
cmp
xchg
mov
inc
sti
pop
jo
mov
jg
popf
test
push
mull
cwtl
gs
daa
addr16
add
in
sub
sub
cmp
add
dec
sub
daa
cld
sti
xor
fs
jno
sahf
dec
pushf
lds
mov
add
mov
dec
lods
sbb
dec
push
imul
mov
clc
rol
pop
scas
and
jo
fbstp
out
sahf
cmp
cli
adcb
mov
add
movsb
add
int
fs
stos
clc
ret
sbb
repnz
lret
sarb
xchg
roll
xor
in
testb
fistps
adc
loope
mov
push
into
cmp
adc
lahf
mov
dec
leave
ds
rorl
in
xlat
xor
cs
and
and
add
sub
adc
fdivs
add
mov
mov
inc
mov
push
in
and
jg,pn
pop
pushf
xchg
sbb
mov
mov
mov
and
mov
add
adc
or
ljmp
push
in
add
sahf
sub
dec
and
adc
jne
add
sbb
jns
xor
test
loopne
sbb
ret
pop
sbb
movsb
jecxz
jp
mov
lods
xor
loop
jmp
jne
add
adc
pop
dec
imul
inc
popa
sub
pop
hlt
jns
std
xchg
add
js
mov
imul
je
push
or
push
inc
stos
inc
out
pop
call
sub
and
bound
mov
mov
adc
hlt
je
movsl
pop
ds
jg
out
push
mov
pop
out
add
imul
sub
cmp
lret
sbb
sarl
cmp
sar
mov
jge
adc
and
or
add
cmpsb
cld
rcrb
pushf
mov
mov
cmp
adc
add
cs
xor
add
scas
notb
jo
add
ja
add
mov
mov
xchg
and
movsl
jmp
sahf
cwtl
add
pop
jecxz
sarl
ficompl
and
adc
cmpsl
or
add
dec
mov
ss
push
push
aad
test
sbb
sbb
dec
add
lret
mov
sbbb
shr
pop
fst
call
andl
rolb
pop
sahf
and
fidivs
push
jge
mov
or
imul
lret
mov
repz
sbb
mov
pop
sub
cmpb
ds
ja
jecxz
imul
fildll
xor
insb
adcl
mov
ret
ffreep
loope
xchg
in
or
xchg
adcb
adc
cmpsl
outsb
xchg
mov
and
sub
test
mov
add
or
fdivrl
add
test
pop
push
aad
sub
cltd
mov
sub
sbb
shlb
pop
fldcw
add
xchg
push
xchg
mov
test
add
sub
sbb
je
fstpl
out
add
cwtl
adc
stos
enter
cld
mov
add
outsl
push
push
mov
iret
push
mov
int
dec
mov
or
lods
test
mov
mov
stos
inc
xchg
gs
inc
sub
cmp
push
sbb
sbb
subl
pop
inc
outsb
add
testl
sarl
or
pop
data16
cmp
cmpsb
shlb
fs
fldl
mov
int3
imul
xchg
add
shrl
orl
pushf
fwait
outsl
adc
ds
mov
pop
add
dec
dec
inc
out
repz
inc
fistpl
add
fcoml
stos
stos
cmp
jno
pop
adc
jmp
push
popf
movsb
mov
out
rol
int3
inc
call
mov
sub
out
shld
xor
push
xchg
sub
add
inc
roll
negb
cmp
icebp
mov
sbb
mov
mov
xchg
ret
andb
cmp
inc
adc
xchg
pop
cli
add
rorl
mov
mov
outsb
int
jmp
mov
jge
incb
in
pushf
jb
ss
push
rolw
xor
jp
iret
sub
leave
jns
add
pop
imul
mov
cmp
mov
loope
mov
mov
int3
add
enter
push
pop
fiaddl
fsubl
xor
out
add
mov
mov
pushf
loop
fnsave
aad
aam
sarb
and
imul
ret
loope
pop
mov
xchg
mov
cltd
popa
inc
out
ret
icebp
lock
aas
cmp
insb
sbb
push
div
jp,pt
in
cmc
xchg
add
mov
out
rep
dec
aam
rol
into
cmp
add
xor
pop
pop
jne
and
repnz
adc
jmp
out
sbbb
inc
push
cmp
sub
bound
jl
push
push
scas
sub
call
rclb
mov
and
and
add
jl
mov
into
into
jle
mov
cltd
pusha
stos
add
cmp
push
push
aad
fisttps
lock
jbe
push
rcl
ds
scas
out
and
push
xor
loopne
call
mov
cld
jge
pusha
cmp
fwait
jnp
dec
rcr
dec
fisubs
test
subl
fdivr
xor
or
mov
je
mov
aaa
mov
or
repz
bound
add
loop
test
xchg
mov
pusha
and
or
repz
fiadds
and
dec
shll
lea
cmp
sbb
inc
leave
in
fidivl
sbb
mov
std
mov
les
cmp
popa
sub
repz
in
jge
call
dec
test
adc
add
mov
mov
add
xchg
aam
dec
add
cmp
bnd
inc
inc
inc
sbb
jbe
pop
cmpl
xchg
shl
punpckhdq
dec
add
adc
or
rcrl
scas
push
push
cmp
sub
dec
xor
cld
pop
sbb
addr16
push
jae
nop
or
jne
adc
xor
lods
rolb
sbb
add
cmp
jle
push
pop
aad
lods
add
in
addb
pop
sbb
in
das
hlt
loope
pop
fadd
sti
adc
cld
sbb
cltd
xchg
xor
add
inc
test
dec
jg
dec
add
call
sub
add
movb
lret
lea
jnp
sbb
add
aaa
cmpsl
sbb
add
dec
js
inc
add
add
stc
mov
out
lds
enter
test
fldl
fildl
pushf
or
insb
add
hlt
inc
aad
pop
cmpsl
cmp
cli
mov
addr16
jns
int3
dec
xchg
xor
xor
mov
dec
dec
bound
sti
movsb
arpl
repnz
call
pop
int3
add
xor
push
in
mov
adc
add
loop
and
rcrl
insb
fidivrl
add
xchg
lret
dec
xor
or
pusha
loope
or
push
mov
lods
insb
shlb
or
cs
xchg
loopne
mov
shr
bound
add
mov
add
xchg
ljmp
fisubrl
loopne
mov
lret
pop
in
sbb
jo
dec
jmp
mov
xchg
leave
mov
adc
insb
into
je
pop
mov
xlat
js
xchg
fisubrs
adc
add
loop
mov
adc
mov
fildll
jne
mov
imul
testb
fsubl
add
push
aad
jp
flds
sbb
mov
adc
aas
and
orb
inc
sub
sbb
shl
mov
jmp
rolb
add
and
shrb
arpl
lea
sbb
jg
push
mov
xlat
inc
iret
push
pop
adc
add
jnp
dec
shll
and
adc
loopne
addl
cmp
xchg
outsb
push
push
xchg
out
loope
add
xchg
cmc
in
ljmp
add
cmp
push
into
fldl
fcmove
or
ds
cmp
je
pusha
fcmovnb
or
xchg
adc
ficoml
loop
add
dec
outsl
push
xor
mov
pusha
movsb
movsl
and
sbb
andb
pushf
loope
adc
sti
ds
jmp
add
movsl
sbb
cmp
test
pop
sbb
xchg
and
loopne
inc
or
sbb
iret
inc
adc
fildll
ja
shlb
or
adc
sbb
out
xchg
int
mov
testb
add
es
cmp
pop
add
imul
mov
dec
into
add
dec
inc
inc
ret
dec
cmp
and
lea
push
xchg
add
in
ja
jae
stc
add
enter
mov
add
ljmp
jg
push
mov
mov
mov
roll
call
sbb
adc
shrb
cmc
stos
int3
jb
inc
or
add
mov
lods
add
rcl
stos
scas
mov
test
insb
inc
or
lahf
lods
cmp
movsb
or
mov
add
pop
mov
fadds
inc
jnp
cmp
ror
mov
sahf
add
pusha
aam
scas
lcall
nop
push
mov
sbb
addb
or
push
shr
sub
sub
loopne
cmpsl
add
sahf
pushf
and
inc
sbb
andl
jbe
add
pop
jno
pop
jg
sarl
push
gs
neg
loope
mov
stc
add
dec
icebp
inc
or
xchg
push
mov
adc
std
sbb
sbb
sub
pop
js
ds
leave
pop
mov
cmp
pop
idivb
pop
inc
pop
add
sub
or
jne
rol
cmpsb
lock
inc
and
xlat
jae
add
mov
sub
dec
add
lock
add
enter
sub
movb
clc
mov
xor
data16
pop
mov
pop
push
fwait
xlat
add
mulb
nop
sar
std
or
in
mov
and
cmp
lds
add
ja
int
shrl
jp
or
lahf
push
movsl
pop
dec
pop
mov
cmp
jbe
cld
mov
xchg
pushf
insb
or
cmp
mov
inc
cmp
sbb
xlat
into
jl
add
jbe
sahf
das
pop
xchg
add
mov
lods
dec
or
test
sub
rol
and
mov
mov
add
loope
xchg
ss
pop
sahf
and
ficomps
mov
add
mov
add
ret
data16
mov
xor
ret
inc
dec
popf
xor
push
push
lcall
pop
outsl
adc
adcl
and
push
add
and
xchg
bswap
pop
add
cltd
and
and
mov
arpl
test
enter
and
add
out
mov
loop
jo
mov
fmull
cmc
xchg
add
jmp
dec
add
push
or
mov
sbb
fsubp
add
mov
cmp
in
jge
lahf
mov
aas
test
jae
pop
pushf
shl
testl
mov
call
icebp
cli
push
mov
jecxz
pop
and
insl
test
into
add
pop
ret
xor
or
and
daa
je
add
dec
pop
outsl
xchg
test
inc
add
and
cmp
enter
push
shlb
call
pop
push
inc
add
mov
sbbb
mov
push
dec
cmpsl
adc
sub
ffreep
std
cmp
rcll
pop
sbb
add
add
jmp
add
xchg
jl
hlt
sub
imul
xchg
mov
inc
sbb
or
add
subps
or
add
movsl
daa
out
dec
xor
mov
adc
filds
pop
push
xor
sahf
cmc
mov
lcall
adc
or
cmp
pop
dec
xor
or
pushf
add
incl
inc
insl
ds
sbb
inc
call
and
jmp
setns
rcr
ss
add
cld
fimull
fdivs
cmp
std
out
inc
sbb
mov
dec
inc
or
aad
aam
ret
push
cmp
addr16
push
test
cmp
fcoml
sbb
and
cs
add
outsl
sub
cli
imul
sarl
test
and
jbe
incb
mov
and
add
add
pop
sub
inc
shll
pop
xchg
jae
xchg
add
ret
fcomps
mov
cmp
pushf
jae
jnp,pt
xor
cmpsl
mov
popa
test
into
dec
gs
jae
std
sub
in
bound
mov
es
rclb
sbb
and
add
dec
sbb
jecxz
lea
ljmp
push
inc
inc
push
and
js
xor
pop
rclb
add
nop
int3
adc
ret
lods
add
insl
shrl
xor
add
lds
out
jbe
pop
das
aaa
add
mov
stc
std
inc
sub
mov
inc
aas
push
ja
mov
inc
cmpsb
cli
mov
or
mov
loopne
movsl
inc
outsb
insl
add
push
mov
mov
arpl
push
or
les
ror
out
scas
and
das
add
lock
inc
push
scas
inc
rcl
adc
fisttps
jbe
std
bound
ljmp
xchg
add
inc
into
push
and
xchg
lds
out
add
roll
xchg
lahf
aaa
iret
push
adc
and
call
add
imul
scas
push
nop
subl
shrb
jecxz
add
jbe
xchg
xchg
jo
add
loopne
incb
xor
faddl
pop
pop
push
lds
ret
mov
js
ficompl
lock
andl
xlat
stos
mov
add
xor
jp
inc
lods
adc
call
dec
mov
mov
loopne
xor
jnp
inc
bound
pop
sbb
clc
fisubs
dec
xchg
cmc
sub
fcmovne
mov
xchg
sub
pop
inc
mov
sti
popa
jle
jb
sbb
cli
jo
dec
lds
mov
gs
mov
pusha
cmp
andl
sbb
or
test
ret
adcl
mov
xlat
leave
jmp
pusha
cmpl
mov
jno
lret
nop
and
outsl
mov
ret
jne
mov
cmp
adc
frstor
dec
xchg
cmp
lods
jp
mov
stos
push
jns
inc
mov
les
bound
sub
cltd
inc
sbb
mov
stos
daa
jbe
adc
out
add
into
mov
and
scas
pop
mov
addb
rcrb
in
or
add
push
sub
dec
pop
xchg
inc
add
fucom
je
cwtl
les
sahf
jo
fildll
and
xchg
mov
mov
push
fcompl
test
out
cmp
clc
dec
cmpsb
pop
es
mov
pushf
push
and
lldt
sub
test
iret
xor
insb
add
lods
aad
sbb
daa
scas
add
and
dec
outsl
out
imul
ret
pop
push
lcall
and
and
enter
xorl
add
pop
nopl
sbbb
aad
push
pushf
jne
mov
stc
jo
or
rorb
push
shrl
and
lock
jmp
lret
call
lcall
xor
popf
aaa
scas
bound
mov
arpl
mov
sub
sbb
xchg
out
inc
add
jge
iret
pop
cmp
pop
push
cli
pop
mov
push
inc
jmp
cwtl
inc
mov
jns,pn
jo
xor
test
push
mov
and
stc
inc
jl
decl
mov
aad
ret
xor
or
and
dec
cli
in
leave
sub
ret
lods
jp
add
jne
mov
push
cwtl
push
jmp
add
insl
cmp
into
aad
xchg
add
cmpsl
notl
mov
cmp
add
xor
js
sbb
cmp
pop
add
test
rolb
xchg
sbb
jae
add
mov
adc
add
jge
mov
and
push
lods
scas
leave
lret
add
ret
mov
cli
insb
and
or
xor
std
loope
popa
ret
aaa
nop
lcall
sarb
inc
std
cmpsl
aas
xor
push
push
mov
rcl
pop
push
or
sahf
inc
or
arpl
mov
out
in
jge
fsubrl
in
dec
or
dec
sub
mov
stos
add
push
pop
xchg
push
mov
dec
add
xchg
sarl
popf
sbb
ja
jp
aas
mov
xor
ds
je
sub
pop
dec
cmc
jg
mov
pop
cmp
add
sub
jmp
mov
pusha
dec
xchg
add
inc
adc
in
test
addl
pop
push
into
lods
dec
and
fwait
out
xchg
add
push
pop
aam
xchg
les
jecxz
cmp
into
roll
int3
loopne
cld
icebp
push
add
add
pop
dec
sbb
sti
xchg
jge
mov
push
push
pop
and
mov
push
and
mov
xor
or
xchg
pop
inc
int3
pop
repnz
loopne
out
adc
int
mov
inc
lock
cmp
sub
add
rcl
and
dec
xchg
xchg
lahf
testb
mov
pop
add
stc
ljmp
jno
pop
xchg
cmp
pop
das
out
test
in
ljmp
sub
push
into
dec
fidivrl
test
ret
dec
imul
and
mov
fcmovbe
cmp
pop
loopne
data16
sbb
aad
add
popf
add
pop
add
test
and
adc
mov
add
and
loop
inc
add
adc
inc
xor
js
xchg
out
popa
andb
sub
mov
idivb
xlat
ljmp
cmp
lret
fwait
sar
push
sbb
push
mov
mov
inc
cmp
xchg
or
jae
inc
pop
mov
jae
lods
jo
cli
outsl
mov
mov
adc
aam
add
popa
mov
leave
outsb
ret
fisttps
mov
sbb
dec
jge
fistpl
int3
or
mov
loopne
push
push
icebp
mov
in
jp
dec
mov
out
and
mov
aas
hlt
fsts
outsl
cmp
jbe,pn
push
xchg
arpl
iret
insl
jns
cmpl
mov
add
mov
inc
add
test
mov
cmp
add
sbb
andb
xchg
daa
add
es
sbb
add
mov
daa
and
cld
adc
sub
xor
imul
js
mov
nop
xchg
cmp
mov
add
bound
movsb
dec
mov
aas
cmp
cmpl
xchg
insl
jnp
or
and
out
loope
cmpsb
leave
xorb
push
push
push
or
dec
xchg
and
ret
in
pop
jno
cmp
cmp
sbb
jns
mov
test
push
scas
xor
cs
adc
idivb
call
sub
inc
cmp
jno
stos
enter
call
push
cmp
add
mov
scas
and
mov
sbb
push
repnz
js
pop
sub
fistpll
cmp
xchg
or
or
jp
div
mov
and
aam
insb
stos
adc
pop
cmp
push
frstor
rclb
cmp
rorl
cmpsl
data16
mov
jp
add
push
test
pop
push
xchg
imul
sub
cmp
xchg
loope
or
cmp
sbbb
push
xor
add
bound
cli
xchg
inc
or
jnp
push
popf
pop
mov
loop
mov
add
push
sbb
xor
adcb
out
fisttpl
sbb
mov
mov
std
xchg
sub
or
cmp
movsb
aas
adc
pushf
int3
sbb
mov
xchg
jle
add
push
lds
mov
add
aas
adc
cmp
pop
outsl
lds
mov
daa
scas
call
addr16
sbb
or
cmp
sbb
movsb
mov
and
js
push
sbb
cs
mov
xor
cmp
dec
fimuls
pop
jno
imul
adc
cs
fistpll
jle
cltd
pop
add
jmp
xor
rclb
or
lods
dec
inc
jp
mov
shll
mov
adc
lods
add
sbbb
stos
fsubs
addr16
add
mov
hlt
mov
lods
xchg
push
jl
xor
loop
pop
sahf
inc
in
in
push
push
inc
out
lahf
push
negl
stos
sub
push
or
push
jle
mov
das
jle
jmp
mov
pop
sbb
mov
lods
outsb
mov
dec
scas
cmp
adc
xchg
cmpsb
aam
lret
jmp
inc
add
and
xchg
sbb
jo
push
imul
jns
push
fldl
xchg
fwait
jp
in
roll
clc
push
in
xor
out
sbb
sbb
leave
mov
jp
leave
xchg
jg
cmp
and
in
mov
mov
pusha
pop
xor
jnp
inc
pop
pop
dec
in
cmp
cmp
and
popf
and
push
shll
add
push
insb
mov
lret
cmp
cmp
jne
xchg
add
dec
jns
add
mov
lea
cmc
addl
xchg
jb
push
and
inc
jo
add
iret
divb
mov
into
xor
popf
or
sahf
out
test
call
mov
fisubrs
stos
sub
add
inc
fcmovnb
dec
enter
add
ja
xchg
xchg
or
add
mov
pop
bound
fldl
or
dec
add
pop
mov
pop
pop
lock
add
mov
adc
add
iret
ret
inc
rclb
xchg
add
ss
add
xor
out
add
fmuls
rcl
pop
pop
dec
test
jno
outsl
push
or
pop
arpl
ret
sub
push
sbb
jg
addr16
mov
and
fnsave
out
sub
add
sbb
stc
xchg
lahf
push
and
or
dec
add
jno
jg
xchg
adc
or
xchg
ds
add
test
cli
inc
sub
rcrb
sti
mov
jne
enter
add
sbb
add
mov
mov
cmpsb
xchg
sub
or
test
aas
movsl
jb
enter
push
out
repnz
les
sbb
lret
bound
std
adc
xor
mov
aas
cmp
and
clc
lret
and
mov
sbb
pop
cmpl
add
in
sub
add
mov
mov
and
pop
mov
orl
addl
push
add
test
sahf
xchg
cld
test
inc
mov
add
and
nop
add
lea
xchg
lcall
push
mov
addb
fmul
icebp
pusha
fists
repz
rolb
dec
ds
and
adc
mov
cmp
mov
aam
inc
push
adc
sarl
mov
xchg
dec
scas
and
or
add
jmp
xor
outsb
cmp
out
std
jmp
mov
add
jae
jbe
xchg
lcall
sbb
clc
add
test
add
jno
inc
xor
les
push
and
repnz
test
insl
add
pop
mov
add
add
pop
and
call
sbb
fstpl
cmpsl
add
fcoml
and
xor
in
int
and
jne
mov
cmp
das
js
mov
repnz
xor
sbb
adc
mov
dec
adc
fimuls
push
mov
jp
jo
or
loope
jmp
je
popl
mov
lds
add
push
add
push
lret
cmp
add
xchg
sahf
or
insb
cmp
push
hlt
sti
and
imul
add
adc
ja
and
add
shr
mov
loopne
nopl
jnp
sbb
mov
add
xchg
std
lea
cmp
xchg
push
add
fs
add
dec
popl
adc
leave
add
addr16
js
and
pop
mov
aad
jbe
stos
aas
int
aaa
pop
mov
fwait
dec
mov
popf
mov
into
pop
popl
jne
adc
xchg
inc
add
out
ljmp
xchg
dec
push
jmp
inc
jl
adc
xor
pushf
add
call
imul
xchg
ret
ret
pop
jae
addl
into
leave
adc
xchg
mov
cmp
cmp
mov
int
cmp
xor
cs
sti
push
fsts
pop
xchg
pop
pusha
jae
pop
cmc
xchg
sub
in
imul
jl
sbb
lds
out
int3
add
ja
lods
insl
int
add
outsb
xorb
movb
adc
push
xchg
adc
rcll
jns
mov
add
sub
or
xchg
push
cmpl
jle
mov
cmp
sub
stos
sub
sub
and
add
push
out
add
ret
ficomps
ljmp
xor
add
insb
sbb
sub
xchg
cltd
fmull
mov
shlb
hlt
push
in
and
mov
mov
and
mov
add
std
add
addb
and
xlat
sbb
dec
shrb
int
cwtl
add
enter
jmp
in
add
ficompl
mov
and
lahf
rcrb
mov
outsb
pusha
pop
sub
sub
shll
pop
jmp
pusha
add
xchg
mov
sbb
jg
adc
inc
rolb
adc
data16
mov
xor
mov
and
sub
push
pop
faddl
inc
addr16
push
mov
lret
lahf
pushf
cmp
add
pop
repnz
add
arpl
push
rolb
jne
sbb
notl
add
int3
add
dec
sub
add
mov
rclb
orb
pop
cld
faddl
push
mov
gs
into
dec
or
add
sbbl
sub
inc
jne
popf
pop
jo
test
and
add
jno
add
cmc
inc
sub
pushf
test
stos
mov
or
push
movb
ficoms
ret
add
loopne
mov
cmp
sub
lock
adc
icebp
add
push
test
cmpsl
lret
rorb
cmp
mov
out
fistl
xchg
xchg
into
or
pushf
sub
jne
push
ficompl
jne
arpl
idiv
cmp
ja
fs
mov
add
dec
or
icebp
add
subl
dec
fmuls
inc
xor
imul
inc
push
push
add
adc
out
mov
enter
jnp
push
inc
mov
mov
ljmp
jne
cmp
daa
aaa
hlt
adc
test
cmp
and
in
mov
add
and
jecxz
enter
push
add
lahf
inc
xchg
or
flds
fisubrs
cltd
mov
test
shll
hlt
fdivr
stc
sti
adc
out
ret
data16
enter
iret
inc
pop
sub
int
dec
mov
add
js
xor
inc
dec
xchg
cmp
pop
inc
ljmp
xor
sbb
adc
sub
sub
add
mov
cmp
stc
es
ja
mov
pop
out
repz
lock
fcoms
add
loope
jo
push
xchg
mov
aaa
add
mov
mov
imul
add
xor
ds
lea
loop
lahf
jns
push
adc
add
aas
and
lods
test
mov
and
mov
aaa
sbb
xchg
popa
inc
cmp
push
push
insb
and
mov
sarb
sbb
sti
inc
stos
cmp
out
sub
subb
mov
int3
popf
outsl
scas
sbb
push
push
sbb
mov
stos
cmp
cmp
inc
into
int3
inc
mov
in
popf
xchg
out
sarl
mov
cmp
dec
call
adc
mov
iret
test
lock
jb
add
jmp
xchg
dec
in
add
lahf
xor
xchg
rorl
xor
cs
add
rcrb
mov
pop
mov
pop
loop
stos
shrl
add
in
test
iret
jecxz
ja
add
fdivr
into
add
push
lcall
mov
les
mov
in
inc
popa
xor
shrl
xchg
xor
jns
clc
or
ret
mov
xor
push
add
call
sbb
xchg
add
jmp
sahf
stos
add
out
out
pusha
mov
addb
pop
lods
add
jno
shll
mov
pop
lock
inc
pop
add
les
mov
faddl
std
adc
mov
add
cld
sbb
pushf
xor
cmp
mov
xchg
add
add
cltd
jns
or
add
stos
cmc
lds
mov
popa
mov
add
jg
aam
jnp
sti
or
in
dec
push
in
ja
xor
mov
leave
cmpb
adc
imul
repnz
mov
mov
jp
cmp
dec
xor
cmpb
jl
dec
mov
ss
and
adc
inc
pop
inc
sub
inc
enter
add
fists
and
or
jle
roll
push
or
adc
insl
shrl
subl
push
inc
bound
clc
shrb
mov
mov
push
xchg
lcall
bound
sbb
loopne
loop
imul
push
out
add
stos
lods
push
inc
rclb
cmp
imul
mov
leave
pop
mov
es
add
pop
aaa
enter
cmp
jae
cmp
es
add
in
jge
addps
and
cmp
mov
outsl
xchg
sub
test
pop
jmp
imul
xchg
ljmp
inc
into
and
cmp
xchg
mov
addl
push
arpl
jae
push
mov
xor
jmp
jns
aad
cmp
cltd
insl
lret
cmp
scas
ss
lret
loope
and
pop
cltd
add
stos
cmp
lods
sbb
sub
mov
nop
ret
sbb
push
mov
sarl
int3
scas
and
dec
mov
push
cmp
sbb
xchg
ss
scas
ret
adc
or
sbb
imul
pop
add
fistpll
ret
add
nop
mov
ljmp
dec
dec
xchg
idivl
rorl
sbb
mov
xchg
jb
std
mov
ds
daa
loop
leave
jne
lods
push
and
cmp
push
sbb
or
negl
adc
sahf
sub
daa
sub
cmp
test
lahf
cltd
pop
and
nop
mov
add
loope
add
xchg
inc
lea
insl
punpckhbw
fwait
cli
addl
leave
pop
cmp
fsubr
add
repz
ljmp
or
jns
sti
cwtl
add
daa
das
push
adc
jno
in
sub
stc
jns
cmp
ficoml
outsl
out
and
shl
sahf
adc
mov
sbb
jl
xchg
push
loope
push
adc
cmp
sti
sbb
add
test
inc
mov
test
jae
add
pop
mov
addb
leave
stos
xchg
cmp
dec
adc
sahf
jno
shr
fs
and
mov
and
loop
push
inc
cmp
xchg
mov
in
mov
ret
fiadds
xchg
flds
ds
lock
jle
cs
mov
stos
sub
cmp
and
inc
cwtl
cmp
cmp
lret
add
fldcw
inc
cmp
sbb
in
dec
inc
mov
loope
pop
clc
cmp
mov
rcrl
add
inc
or
jno
jl
or
push
xor
sub
test
insl
add
std
nop
lret
sbb
adc
sbb
xor
icebp
enter
pop
pop
and
sbb
icebp
add
adcl
shll
xchg
jl
loopne
test
jb
mov
call
mov
jne
das
in
jle
xor
idiv
dec
jecxz
iret
push
or
popa
fildl
imul
int3
lds
mov
js
sbb
arpl
cmp
jmp
aas
cltd
sarl
cmp
or
xor
dec
jle
test
and
out
outsl
enter
cmpsb
into
popf
push
add
ret
cmp
icebp
add
jmp
pop
mov
pop
test
je
out
inc
lret
loopne
leave
js
xchg
repz
xor
mov
daa
add
es
sbb
add
lahf
lods
and
cltd
cld
inc
xchg
xchg
lret
out
notb
loope
in
cmp
pop
jl
pop
and
jo
adc
lret
ret
and
sbb
mov
jge
jns
pop
jne
pop
xchg
pop
or
mov
movsl
sbb
outsb
xor
dec
fiadds
mov
dec
or
lahf
or
clc
dec
sub
or
in
xor
or
movsl
sti
and
or
add
nop
mov
add
mov
mov
lahf
cli
ret
loopne
in
mov
xlat
rcll
or
adc
lret
add
jl
mov
pop
movsl
push
adc
faddl
clc
mov
pop
and
mov
addb
and
mov
xor
dec
lods
scas
mov
icebp
sub
cld
iret
dec
add
fadd
sarl
pop
inc
subl
add
add
xchg
cli
stc
movsl
add
and
sahf
popf
in
add
popa
dec
xchg
add
mov
fsts
sub
adc
arpl
cli
mov
add
aas
xor
daa
fistps
movsb
jne
push
rcrb
loop
out
mov
int3
xor
push
mov
dec
xchg
adcl
test
sbb
push
nop
repnz
sbb
arpl
clc
movsl
dec
add
imul
add
push
jge
dec
mov
dec
test
add
sbb
xchg
shlb
inc
pop
adc
out
and
icebp
fwait
mov
lock
jl
negl
repz
das
ds
inc
dec
outsl
jo
popf
xor
add
sbb
setb
fiadds
fwait
shll
ljmp
xor
xchg
sub
adc
jmp
hlt
pop
mov
das
pop
pusha
enter
imul
ja
lret
jmp
sbb
mov
inc
xchg
sbbb
dec
iret
mov
pop
inc
mov
inc
push
push
ret
movsb
js
or
sbb
out
dec
xchg
add
out
dec
shrb
xchg
mov
std
push
push
fsub
pop
pop
cmp
mov
stc
roll
sar
aas
iret
add
ja
add
out
and
mov
popf
mov
out
push
test
test
negl
es
dec
pop
xchg
adc
data16
jge
pushl
lret
ja
jmp
cmp
mov
mov
notl
and
pop
jp
pusha
roll
adcl
jno
xchg
lcall
inc
cmp
inc
add
das
push
gs
lea
jl
pop
daa
test
xor
clc
xor
leave
add
ja
mov
add
pop
pop
std
sbb
hlt
add
lods
add
dec
jae
mov
inc
push
shrb
mov
sub
pop
sbb
mov
subb
sti
xchg
popf
and
add
movsb
pop
in
mov
or
movsl
dec
adc
push
add
sbb
in
outsb
xchg
in
icebp
cmp
pop
flds
stos
pop
loopne
out
jnp
mov
jb
cld
adc
mov
fadds
aaa
add
xor
add
pop
test
pusha
mov
pop
lcall
aam
into
cmp
pushf
add
sbb
fcmovnu
or
and
lahf
shlb
cmp
jno
add
mov
jae
add
and
cmpsb
enter
mov
fmuls
sbb
xlat
fiaddl
adc
inc
push
sbb
cmp
fcom
gs
add
jae
subb
incl
rcrb
lods
add
mov
sti
js
mov
adcb
dec
xchg
sbb
and
std
test
mov
fstpl
ljmp
add
mov
cmp
mov
pop
xor
inc
je
clc
xchg
ljmp
movb
push
jbe
lods
loop
push
mov
dec
and
es
pop
and
ret
aas
fiadds
test
ljmpw
jg
test
clc
mov
insl
add
add
repz
lahf
add
sbb
dec
and
iret
pop
mov
movsl
or
inc
test
aam
repz
sub
adc
lea
add
test
add
mov
xlat
add
jbe
adc
dec
mov
divl
jle,pt
jecxz
push
push
addl
lods
push
inc
mov
int3
nop
add
or
rolb
push
repnz
pop
pop
jo
add
push
es
leave
rcrl
add
xchg
xor
setb
fbld
je
jb
sarl
popa
sbb
pop
jns
fs
arpl
add
pop
pop
stc
out
mov
add
xor
and
je
jns
andl
loopne
adc
xchg
das
xor
cmp
addr16
in
jae
xor
sar
mov
or
xchg
or
add
and
jmp
pushf
popf
test
xchg
cs
inc
lock
mov
loop
rolb
test
xchg
inc
cmc
sub
or
mov
inc
in
push
jne
leave
loope
mov
pop
mov
pop
add
push
icebp
andb
add
data16
xor
loope
incl
cs
jecxz
xchg
xor
inc
mov
or
std
mov
cld
xor
inc
mov
repz
arpl
sub
cmc
incb
mov
xchg
add
test
movsb
add
lret
inc
or
cmp
dec
xor
pop
bound
andb
sti
xor
jo
pop
cwtl
xor
lods
add
leave
out
mov
push
inc
inc
and
mov
xchg
and
cwtl
dec
sbb
jns,pt
cmp
xchg
shrl
shlb
xor
in
xor
add
leave
out
gs
pop
inc
adc
or
clc
mov
into
fistl
inc
jno
push
dec
out
fyl2x
aas
outsb
add
repnz
add
sub
addr16
add
stos
fcomi
mov
add
mov
ret
add
mov
xor
jo
xor
ljmp
mov
inc
test
pop
add
pushf
lcall
fstp
subl
out
sub
sub
sbbb
dec
lahf
cmp
sti
sbb
lea
das
cmp
inc
fs
push
iret
push
push
stos
lds
les
cli
ds
mov
fbld
mov
je
mov
jp,pn
or
add
inc
hlt
jmp
mov
loopne
push
lock
rcr
add
fisubrl
and
imul
pusha
xchg
leave
push
jb
mov
popa
jmp
mov
jg
push
push
out
add
test
jno
movl
ss
nopl
mov
imul
in
stc
sub
icebp
inc
mov
adc
mov
push
ljmp
xor
mov
rcll
test
add
mov
sub
xor
xchg
inc
and
add
movsl
xchg
ds
jns
xorl
and
int
add
mov
ret
jmp
lods
mov
add
leave
fcmovb
mov
mov
insl
mov
or
pop
jmp
mov
xor
icebp
inc
xlat
and
mov
sarb
int3
arpl
jb
lds
je
sub
lods
and
add
punpcklwd
sahf
das
movb
pop
add
cwtl
xchg
popf
jno
mov
lds
push
sbb
and
jmp
add
test
outsl
fadds
subl
xchg
add
add
push
popf
and
add
pusha
aaa
fadds
rcrb
push
mov
xor
mov
lds
jecxz
sub
int
mov
and
fldl
cmp
jl
xchg
mov
ja
cmp
jne
cmpl
or
cmp
js
lods
aaa
mov
jb
pop
mov
std
add
jle
inc
ret
sub
ror
dec
mov
insl
mov
int
stos
data16
lods
aaa
jge
aas
leave
add
repnz
push
add
pop
pop
xchg
out
arpl
sahf
cltd
loopne
inc
and
add
mov
flds
xchg
cmp
xchg
inc
inc
jmp
cmp
into
ret
jp
rcrl
icebp
mov
in
mov
rolb
cmp
rep
push
outsl
fs
dec
pop
mull
je
pop
add
lea
outsb
mov
mov
out
je
sub
sub
stos
cmp
sti
adc
mov
in
xor
xchg
push
jle
ret
adc
or
add
cld
push
fistpll
adc
pop
pop
sahf
pop
add
lock
jno
sbb
pop
and
pop
push
lcall
jmp
dec
xor
add
adc
cmp
and
jne
cmp
adc
es
jle
jl
and
pop
rcl
add
push
xchg
push
nop
test
pop
or
rol
inc
mull
push
or
jl
inc
pop
das
jno
jo
cld
aas
add
mov
sar
call
sub
jle
ret
cmp
jp
mov
rcr
daa
outsb
mov
outsl
icebp
dec
ja
xor
mov
jg
lcall
sub
rcll
nop
daa
jae
add
cli
jp
mov
mov
sbb
push
stos
lods
dec
cmpsl
aaa
lds
fldt
add
shl
cmp
mov
ss
cld
and
das
pop
in
and
and
add
test
dec
sub
cmp
int
js
pusha
ficoms
ljmp
mov
data16
fidivrs
and
dec
outsl
mov
add
xchg
push
add
mov
les
push
shll
push
jae
pop
cmp
xchg
xor
hlt
add
inc
pop
pop
mov
scas
xlat
mov
lahf
and
jle
mov
or
enter
dec
aam
add
mov
and
adc
add
out
sub
inc
cmp
add
add
add
mov
adc
add
sub
cltd
sti
cmpl
jg
xchg
xor
repz
fistpll
in
xor
sub
push
adc
add
ftst
lock
lcall
rclb
mov
inc
jge
dec
add
mov
xor
clc
or
pop
loopne
add
and
arpl
into
in
fisttpl
arpl
sbb
sahf
and
cltd
bound
hlt
sahf
inc
sbb
sahf
mov
cmp
hlt
stos
xchg
mov
scas
mov
and
jp
inc
aas
jmp
outsb
shlb
cs
jg
aam
add
das
dec
lret
push
sbb
add
jle
jp
test
leave
jns
mov
pop
and
sbb
enter
sbb
nop
nop
push
aad
xor
pop
dec
add
mov
divb
out
dec
pop
aas
scas
adc
inc
in
mov
andb
jne
sub
sbb
sub
ret
loopne
sub
stos
cmp
lea
and
push
sbb
iret
imul
add
mov
pop
inc
scas
mov
loop
mov
add
pushf
jae
add
pop
out
cmp
xorb
add
mov
orps
adc
xchg
jo
mov
mov
dec
jnp
sbb
cmp
cmp
and
nop
add
or
cli
xchg
and
pop
inc
in
fisubrs
mov
push
aaa
sub
outsl
testb
and
stos
loop
sbb
xchg
push
xor
lock
adc
icebp
mov
pop
fstpl
mov
stos
jecxz
test
addb
mov
and
xchg
sbbl
pop
mov
cmpsl
jge
xor
ret
mov
insb
xchg
imul
repz
bswap
rcrl
roll
mov
outsb
lea
and
fisubs
in
jp
mov
int3
jecxz
cmp
add
jae
jle
adc
stos
jb
inc
push
loop
and
std
jmp
add
gs
in
lods
sar
clc
sub
ficoml
inc
pop
jns
sbb
xchg
xchg
xchg
outsl
mov
cld
imul
imul
cmp
adc
rorl
fisubs
push
mov
clc
rorb
ss
iret
sbb
cli
dec
es
xchg
sahf
jl
add
into
mov
cmp
adc
dec
pusha
scas
sbb
pop
jno
iret
add
insl
or
cld
es
add
add
aam
and
mov
imul
es
pop
lock
call
mov
shl
xchg
cmp
orb
pop
popf
jp
mov
push
pop
push
outsb
jmp
adc
push
inc
lret
adc
mov
xlat
lahf
jle
in
and
add
pushf
cmp
rorb
es
lods
mov
flds
pop
mov
outsb
cmp
aas
and
pop
fildl
pop
mov
xchg
add
cmp
lahf
inc
push
xchg
sti
add
enter
out
lret
dec
inc
and
flds
mov
jb
mov
sub
jo
mov
mov
or
lock
inc
inc
es
add
and
push
add
ds
cmp
adc
jg
inc
mov
lods
and
xor
leave
ret
dec
cmpsb
out
jno
mov
clc
or
lock
add
adc
push
aam
add
jle
inc
adc
lret
pop
cld
push
in
in
add
inc
sbb
sub
sbb
jge
enter
jmp
stos
mov
dec
jg
les
cmp
pop
pop
mov
jo
lods
cmp
icebp
sarb
add
fwait
aam
mov
pop
daa
mov
inc
add
test
mov
mov
pop
out
loop
jp
sub
sbb
repnz
mov
adc
cmp
popf
or
jle
outsb
lret
fwait
shl
cmp
push
insb
and
xchg
adc
adc
inc
movsb
shrl
imul
and
and
and
sbb
jb
pop
xchg
sub
ljmp
std
cmp
leave
inc
aaa
mov
ljmp
dec
add
enter
fldenv
popa
xor
add
mov
mov
sahf
add
jo
arpl
mov
sar
jno
push
aam
jmp
jne
js
rcrl
and
or
add
xchg
lahf
mov
std
dec
js
arpl
test
ret
in
pusha
jecxz
mov
dec
out
inc
dec
pop
jne
aas
jge
add
scas
std
jno
movsb
pop
pop
ds
inc
jle
loope
jo
insb
jno
cli
push
xor
xorl
or
xchg
cltd
dec
xlat
je
sti
mov
jno
pop
mov
sub
addr16
es
sahf
add
cmp
xlat
add
pushf
lcall
ficoms
adc
mov
mov
or
inc
mov
add
cmpsl
sarl
xor
push
cmp
sbb
ret
xor
lcall
pop
out
out
cs
cmp
lcall
sbb
inc
shufps
daa
adc
push
or
bound
ret
jbe
out
pop
fisttps
loopne
xor
incb
sahf
or
cmc
add
arpl
out
add
shrb
out
pusha
mov
orb
push
xor
sbb
xchg
imul
daa
push
popf
out
into
mov
les
cmpsb
or
add
enter
inc
daa
cmpl
mov
das
or
and
cmp
pop
adc
xor
pushf
and
lcall
add
xchg
adc
and
cmp
mov
mov
xchg
sti
shlb
adc
jo
add
out
adc
jp
sbb
and
movsb
xchg
sbb
int3
push
sub
xlat
adc
add
orl
mov
cmp
sub
adc
add
test
sbb
jp
mov
fsubs
je
mov
in
daa
push
xchg
sahf
add
fldl
pop
mov
fwait
jge
or
sbb
out
mov
jmp
outsb
mov
icebp
cmp
inc
dec
sbb
ret
inc
or
jp
test
fnsave
leave
jne
pop
stos
ss
addr16
push
adc
in
add
outsl
sbbb
or
lea
sub
loopne
mov
dec
test
push
inc
push
jle
pop
jae
fisubrl
out
or
push
out
rcl
repnz
pop
ja
sbb
mov
sbb
or
xchg
cmpsb
inc
cmc
and
sub
mov
shrb
cmp
pop
mov
adc
std
lock
in
add
xor
mov
mov
jne
jno
sbb
test
mov
ds
leave
mov
icebp
jp
fwait
xorb
out
push
aas
jge
lea
sbb
pop
test
sbb
mov
stos
hlt
jp
inc
js
sbb
roll
dec
and
pop
push
mov
dec
fcoml
push
mov
adc
cmc
dec
xchg
jmp
test
cmp
cmc
add
repnz
aas
dec
fcoms
mov
scas
arpl
rorl
stos
push
mov
mov
push
mov
sti
pusha
aaa
pop
pop
in
sbb
push
inc
pusha
test
lds
aas
xchg
push
jp
mov
sti
out
shlb
mov
sbb
mov
test
mov
xor
xchg
mov
adc
and
fidivrs
sbb
add
cmpsl
jo
jl
add
pusha
lret
xchg
push
add
out
aad
mov
adc
mov
cmpsb
mov
mov
mov
push
add
add
xchg
pop
cmp
loope
repnz
cmp
mov
out
mulb
mov
daa
push
fstl
mov
mov
adc
jbe
test
xchg
add
add
dec
fdivrl
jne
aaa
mov
adc
ss
into
cmp
adc
xor
cmp
in
das
jb
add
cltd
rolb
dec
mov
mov
cmp
mov
xchg
ljmp
push
outsl
mov
push
sahf
dec
fdivrs
jne
mov
add
mov
add
test
xor
out
int
in
jno
adc
push
ds
xor
mov
daa
cmp
jns
fisttpl
cmp
cwtl
xchg
shl
fisubrs
pusha
and
int3
mov
xor
pushl
mov
mov
clc
adc
out
iret
push
and
mov
jo
inc
sub
data16
or
cmpsb
sbb
bound
push
inc
das
sub
js
sub
xchg
adcb
cmp
aam
cmp
leave
add
push
sbb
daa
test
aad
push
jge
mov
lods
push
icebp
xorb
cmp
popf
push
cmpl
mov
sbb
sub
dec
pop
mov
push
or
xor
mov
pop
lret
add
jns
bnd
pushf
jne
in
or
stos
push
pushl
push
or
arpl
push
in
std
mov
xor
jp
push
push
push
add
xchg
cmp
sub
mov
xchg
cmp
mov
or
mov
sarl
int
loope
imul
sub
cwtl
dec
fistpl
loope
lret
mov
ds
jmp
repnz
jg
into
add
repnz
sub
mov
mov
adc
cmpsb
mov
cmp
addr16
xor
or
cmp
loop
push
idivl
ret
and
jg
out
mov
push
mov
adc
mov
jbe
sbb
in
scas
sarl
stc
shrb
leave
ljmp
shrl
hlt
test
adc
enter
inc
xor
add
sbb
rolb
fcomi
or
or
in
subl
cmp
data16
jbe
jle
push
pop
mov
add
lock
add
movsb
dec
pop
inc
mov
faddl
fstp
push
push
pop
stos
add
repnz
pand
incb
cmpsb
outsb
loope
mov
pop
out
or
jle
cmp
xor
mov
xlat
xchg
dec
addl
pop
cs
les
lcall
jbe
add
cmp
loopne
inc
int3
popa
add
push
and
sbb
mov
gs
cltd
in
rolb
xchg
jle
sub
hlt
mov
and
inc
push
cmp
inc
xor
mov
rcr
sti
insb
out
lock
add
aas
pop
push
xor
mov
fbld
jne
les
hlt
sub
cmp
jo
pop
add
mov
sbb
add
sub
int3
sar
push
ret
xchg
add
scas
outsb
loopne
rcll
pop
xlat
cmpsl
mov
sub
js
adc
cld
add
subb
sbbl
jno
push
jo
add
stos
sub
jbe
mov
gs
mov
repz
dec
scas
loope
dec
sahf
lock
pop
imul
sub
mov
rcrb
movsl
insb
fiadds
and
in
incb
rorb
add
pop
mov
loopne
dec
cmp
xchg
xchg
rorl
jnp
inc
pushf
fisttpll
push
cmpsl
shl
mov
pop
roll
sub
lret
adc
inc
xlat
push
das
adc
sbb
and
jo
mov
mov
sbb
jmp
add
xor
cmpsb
add
es
and
fsubs
in
inc
sbb
ja
sbb
in
movsl
xlat
lods
jbe
and
inc
cmp
sub
lock
sbb
add
push
xor
add
andl
mov
shll
pop
leave
inc
out
xchg
std
dec
xor
push
add
pop
xor
adc
nop
mov
sbb
fs
addr16
dec
and
mov
dec
testl
out
arpl
data16
das
daa
imul
or
add
cltd
clc
outsb
mov
adc
rcrb
filds
and
mov
pop
push
dec
shrl
hlt
sub
test
addl
mov
in
sar
inc
rclb
add
adc
pop
sub
add
and
push
sub
ror
mov
stc
shlb
and
enter
pop
mov
inc
xchg
push
js
xor
aas
jb
ret
cmpsb
xchg
loope
ret
popf
sub
mov
and
sub
cpuid
rcl
sbb
mov
and
insl
ret
pusha
adc
and
xor
das
fsubl
or
popa
sarb
jecxz
or
pop
cmp
jl
xor
andl
notl
aad
pusha
add
and
fcmovnu
add
dec
push
and
fadds
mov
inc
test
pop
fbld
popf
andl
out
test
loopne
ret
add
inc
dec
pop
shrb
push
inc
and
sbb
adc
lcall
lods
jne
push
outsb
inc
loope
fucompp
inc
add
cli
jge
mov
adcl
iret
xor
bound
test
scas
pushf
test
popf
lea
leave
and
cltd
imul
repnz
and
pop
jge
pop
dec
cmc
add
push
icebp
lea
ljmp
and
movsb
addl
pop
das
mov
clc
lcall
addr16
push
dec
movsb
cmp
pusha
rclb
imulb
jle
rcll
cmc
xchg
jmp
push
outsw
adc
test
lods
mov
push
mov
sub
out
jp
andl
test
pop
cmp
mov
mov
jp
adc
cmp
insb
push
cmp
movsb
rol
shrl
sbbb
jle
cmpl
xor
and
in
lret
and
or
mov
cld
pusha
or
pop
nop
aas
test
sbb
jp
aaa
jae
mov
dec
mov
in
and
ja
adc
sbb
mov
cmc
rcll
mov
mov
in
adc
pusha
dec
xor
aaa
and
ret
mov
push
lret
mov
xor
outsb
fidivl
mov
cmp
lods
sbb
ret
sub
sbb
into
cmp
add
addb
xor
fcompl
sbb
xchg
push
test
aas
in
adc
mov
xchg
enter
inc
or
test
add
pop
jno
out
and
pop
lods
xor
out
test
pop
add
fcom
and
add
sbb
mov
push
cmp
xchg
hlt
scas
or
fisubrl
pop
dec
daa
xchg
cwtl
repz
mov
jl
das
and
pusha
or
sbb
cmp
pop
lret
gs
push
inc
add
ljmp
orb
out
bound
addl
xor
into
adc
sbb
and
aad
arpl
xlat
push
push
mov
les
push
bound
and
sbb
adc
mov
mov
fbld
cmp
clc
or
adc
xor
add
fldt
sub
dec
xchg
jle
call
addr16
cmpsb
mov
ds
imul
cmp
rorb
andl
in
inc
pusha
mov
adc
jae
sbb
daa
sub
daa
aas
adc
pop
sbb
sbb
fstpt
test
jne
lcall
lods
xor
add
imul
sbb
push
cmp
fdivl
or
cmp
icebp
inc
inc
push
pop
and
stos
xor
mov
sahf
push
jg
jns
dec
pop
sub
xor
sarl
sti
cmp
xchg
jmp
shl
in
adc
pop
xchg
gs
std
jb
jp
adc
or
movsb
sbb
mov
dec
data16
ret
pop
outsb
loope
cmp
mov
or
jp
pushf
xchg
lods
push
dec
daa
ja
test
pop
xchg
or
cmp
movsl
call
aaa
mov
pop
ja
add
or
fidivrs
push
fildl
cltd
mov
stos
add
stos
dec
and
sbb
test
out
xchg
dec
jmp
test
in
push
mov
push
outsb
cli
push
or
js
mov
shl
mov
fisubs
orb
push
or
adc
fcmovnb
or
bound
call
cmp
xlat
adc
sbb
fwait
dec
xor
add
dec
jmp
dec
sub
and
cmp
mov
andl
dec
push
cmp
and
pusha
out
push
sub
or
jne
mov
adc
and
pop
sbb
jns
inc
std
xor
inc
ds
mov
es
push
adc
rclb
into
pop
cmp
dec
add
outsl
aaa
lock
add
xchg
lret
leave
stos
sub
lahf
arpl
push
cli
loope
add
divl
push
ret
mov
or
in
mov
sarb
ljmp
adc
icebp
neg
test
add
scas
aas
les
or
stc
push
add
scas
mov
jge
pop
add
rcll
mov
fdivrl
xor
fbstp
lret
mov
sub
push
rorl
cltd
enter
add
out
add
je
clc
sbb
push
cmp
test
sbb
add
outsb
xor
xchg
aam
stc
add
clc
xchg
sbbb
mov
xchg
das
inc
lahf
cmc
mov
sbb
sub
idiv
loopne
cmpsb
je
insb
pop
inc
sub
add
cmp
flds
cmp
sub
shr
mov
cwtl
mov
dec
push
push
ret
mov
out
clc
inc
mov
adc
pop
jge
pop
insb
daa
iret
repnz
scas
pop
inc
pop
in
dec
negb
add
bound
push
rol
jge
cmpb
aas
jno
jae
adc
adc
call
pop
jb
sbb
xor
shll
insl
add
or
sarl
and
jp
sbb
incb
jle
sub
lods
add
add
into
mov
fdivrl
pop
inc
inc
sub
cmpb
rol
mov
sbb
shl
mov
push
inc
dec
arpl
pop
inc
add
cmp
sti
popf
fcom
add
jbe
adc
cmc
push
add
cwtl
pop
insl
sbb
sub
cmp
stos
add
arpl
lret
scas
rorb
push
adc
add
cmpsb
and
sbb
lea
dec
mov
testl
or
push
ror
inc
jns
sub
add
stos
jne
pop
call
push
add
fidivrl
add
aad
mov
mov
mov
jnp
add
mov
sahf
add
rol
aaa
xor
jmp
mov
fldl
add
or
pop
fildl
into
test
iret
jne
jl
std
mov
adc
popf
pop
xor
cmp
insb
mov
int
xchg
xor
add
rcrb
add
and
popa
fiadds
or
add
push
es
lea
add
insb
sbb
push
add
aad
das
mov
mov
mov
ret
mov
ret
or
jo
add
loop
mov
jecxz
aam
or
xor
pop
push
fmull
jl
mov
leave
lret
inc
mov
sbb
mov
mov
test
das
push
popa
xchg
mov
jle
mov
inc
mov
aad
test
inc
cmp
jb
adc
inc
adc
or
clc
addb
fiadds
and
cmp
in
xor
and
fmull
or
sub
out
inc
dec
lret
dec
into
sub
nop
add
mov
sahf
rcll
xor
adc
mov
cmp
cmc
jp
add
mov
mov
xor
add
repz
jge
add
push
sbb
jb
mov
mov
xor
cmpsb
scas
cmp
loopne
cmp
loope
jle
hlt
add
xchg
xor
xor
jl
loopne
punpcklbw
and
jge
add
pop
mov
mov
movsb
add
dec
push
clc
mov
and
test
std
shll
add
lods
mov
inc
incb
mov
imul
gs
sahf
rolb
std
pop
push
xor
mov
int
in
aas
add
fwait
hlt
gs
sbb
add
scas
imul
pop
ss
or
or
imul
std
cmp
dec
and
sahf
push
xlat
rolb
daa
adc
push
cs
mov
inc
xor
fiadds
pop
mov
cmp
jmp
outsb
outsl
movsb
pop
lcall
push
jge
cmp
or
lahf
lods
jnp
stc
enter
jno
xchg
sub
add
mov
out
jecxz
fimuls
xchg
jecxz
mov
shll
in
or
mov
add
and
lds
add
iret
shrb
cmp
add
dec
cmc
pop
ja
shl
je
inc
or
into
in
aam
cmp
fcom
js
pop
add
pusha
addr16
roll
push
fwait
sbb
push
mov
lret
cmpsl
lods
inc
sahf
cltd
mov
imul
and
cmp
push
mov
sbb
xchg
fldl
fdivr
je
mov
sbb
inc
add
stos
push
aas
add
or
adc
clc
testl
add
jne
cmpb
adc
out
repnz
add
sbb
lods
cmp
add
add
mov
int
push
jbe
mov
adc
arpl
sub
add
rcr
jae
fbstp
xchg
cmpsb
add
jl
fisttpll
sub
add
mov
mov
out
sub
shlb
cmpsl
incb
xchg
jno
and
cmc
shlb
nop
mov
test
cltd
divb
add
ja
stc
adc
test
lahf
cli
and
fmull
lods
add
rol
jne
push
outsb
inc
add
subb
cltd
xchg
pop
add
fmul
jmp
pop
mov
adc
out
loop
mov
add
xchg
movsl
dec
daa
push
pop
filds
sub
mov
rcll
hlt
sbb
pushf
jmp
mov
mov
dec
mov
mov
add
or
mov
out
add
dec
or
adc
sub
sub
mov
cld
out
lods
stc
xor
inc
dec
ljmp
and
cmp
mov
mov
inc
pop
add
pop
sbbb
lahf
div
jo
push
dec
sub
outsb
add
xor
idivl
int3
dec
jl
jge
fiadds
lods
cmp
sbb
mov
bound
rolb
jns
jo
add
dec
loop
sub
add
lea
jb,pn
add
enter
inc
push
pop
sahf
add
push
push
test
fisubs
adc
dec
cmp
mov
ja
sbb
add
sarb
jmp
xor
add
fdivrs
add
ret
jmp
sti
jp
aas
add
mov
sbb
or
jb
cmp
lds
jo
add
push
inc
movsb
cmp
mov
jmp
lock
hlt
add
xlat
inc
sbb
jmp
and
pop
addr16
push
xchg
mov
add
sahf
mov
sti
mov
dec
psllw
imul
add
mov
lds
sub
xchg
mov
jbe
popf
mov
ret
pop
dec
inc
dec
jno
cmpsl
and
movsb
ljmp
push
lock
jne
repz
jb
jge
mov
add
cmp
add
xor
push
mov
adc
pop
test
je
dec
xor
inc
imul
das
loope
xchg
and
sbb
mov
stos
outsb
jb
sub
adc
stos
mov
daa
cmp
scas
inc
sub
ret
jl
pop
mov
imul
ror
xor
xchg
cmp
cmovo
lea
lret
and
daa
push
sar
lds
cmp
gs
cmp
std
mov
sbb
sub
mov
aad
fmull
sti
add
movsl
ljmp
xor
mov
sub
xor
test
lcall
mov
sub
out
xlat
ret
sbb
cli
add
or
sbb
push
fwait
lods
ds
xchg
lahf
xor
sbb
dec
leave
in
push
sub
mov
jmp
jne
ja
xchg
pop
xchg
into
shrl
sbb
inc
sti
popf
cli
imul
arpl
sarl
test
xchg
fdivs
adc
xchg
andb
xor
jp
stos
add
push
sub
xchg
lds
cmp
in
and
pushf
out
idivl
xchg
push
adc
bound
xchg
mov
mov
jge
jl
roll
hlt
jne
sbb
loope
lds
mov
add
cli
xchg
xor
lret
shll
adc
mov
adc
adc
mov
pop
insb
int3
inc
mov
xchg
lret
cltd
aaa
and
mov
add
cwtl
push
scas
mov
mov
in
daa
xor
das
ret
and
repnz
adcl
or
cmp
mov
add
fbld
pop
xchg
xchg
insl
lods
jae
mov
add
jnp
loop
xlat
add
and
inc
pop
xchg
sbb
jp
fmulp
incb
mov
stos
jns
mov
cld
movsl
shl
and
sub
js
cmp
addr16
aaa
fcomip
arpl
and
rolb
xchg
and
bound
push
and
cmp
jno
jbe
inc
push
fimull
cmp
and
sub
enter
jp
movsb
sub
sbb
dec
cmp
sub
aam
outsb
stc
push
movsl
test
cmp
xchg
fcmovbe
shlb
lock
sub
iret
or
mov
inc
dec
inc
push
cmp
and
dec
lahf
fstpl
add
js
jle
cld
shrl
cmp
inc
iret
and
or
pop
mov
test
jge
xor
cmp
insl
xchg
sub
xchg
pusha
es
iret
xchg
out
dec
cltd
sbb
cltd
testb
jp
rcrl
and
or
daa
cmp
mov
cs
xlat
sub
psrad
push
xchg
dec
add
movsl
xor
nop
test
sub
mov
sbb
inc
pop
je
movsb
add
jo
jno
xor
ret
cmp
mov
inc
or
and
dec
loope
dec
and
rol
pop
iret
xchg
cmp
push
adc
adc
push
fabs
sbb
jbe
push
mov
mov
cmp
mov
aam
adc
adc
stc
cs
pop
fs
push
cmp
insl
inc
andb
loop
arpl
add
cmp
adc
repz
cmp
jle
mov
sar
mov
or
pusha
imul
stos
adc
outsb
aas
xchg
and
cmp
in
xchg
rolb
push
or
lods
cmp
fsts
lret
or
and
mov
adc
sub
xchg
aas
sbb
pop
jmp
add
hlt
mov
cmp
push
mov
jl
add
out
cmp
jle
add
es
loop
xor
outsl
stos
aad
sub
cli
shrl
push
pop
inc
mov
jp
dec
lock
cmp
cmp
xor
imul
out
aas
js
push
jle
mov
sbb
jo
dec
xor
lret
and
imul
or
xlat
out
repz
sarb
xchg
and
mov
fs
scas
and
mov
sbb
xchg
inc
dec
outsb
cmp
cmp
jne
and
cwtl
fiadds
mov
inc
icebp
sbb
insl
mov
addb
xor
or
mov
sub
jle
insl
mov
dec
mov
out
cmpl
or
jg,pn
cmpsb
pop
xchg
cmp
dec
and
cmpsb
cmp
ficoml
pop
sbb
out
jnp
daa
arpl
fisttpl
into
out
enter
lds
cli
add
in
push
xchg
rolb
and
es
sub
sbb
icebp
pop
push
add
and
and
xchg
xor
dec
or
inc
popf
pop
shrl
lock
les
cld
cmp
mov
or
fcmovne
cmp
iret
adc
dec
test
aad
enter
xlat
jno
sahf
test
xchg
rorb
inc
out
mov
rcll
dec
jbe,pt
bound
nop
push
inc
push
dec
sbb
mov
nop
int3
inc
xchg
mov
jns
movb
fbld
xor
add
or
enter
dec
lret
adc
pop
xchg
addr16
cmp
mov
lret
sub
jg
adc
and
mov
inc
ficoms
lods
adc
or
push
mov
push
xor
sbb
inc
outsb
shrb
sti
cld
xor
aam
xchg
xchg
inc
xchg
pop
jl
pop
inc
adc
test
sub
es
out
mov
jge
push
cld
jl
adc
mov
mov
in
movsb
daa
jb
cmpsl
mov
leave
jno
movsb
or
mov
out
or
push
loop
scas
inc
add
lahf
jns
bound
push
call
inc
mov
push
and
mov
stos
mov
hlt
inc
mov
sub
inc
out
jo
repz
stos
mov
data16
inc
mov
jbe
sarb
push
mov
loopne
inc
mov
mov
cld
test
ds
xorb
rcll
mov
inc
inc
xchg
pop
data16
or
ds
shlb
sbb
or
scas
mov
cld
dec
fisttps
adc
movsb
int
movsb
mov
jp
sub
fwait
or
or
in
popa
mov
mov
test
add
mov
and
push
adc
bound
popa
subb
in
xor
shl
test
jbe
movsb
xchg
or
adc
adc
nop
aad
lret
repnz
mov
bound
aas
or
mov
lods
stos
mov
push
test
and
aas
dec
subl
pop
jle
test
popf
rclb
or
and
mov
xor
push
je
mov
cli
fstpl
lret
adc
xchg
sbb
clc
cmp
jno
sub
jecxz
inc
enter
hlt
inc
inc
add
cltd
mov
mov
jo
adc
inc
xlat
dec
and
popf
seto
xcrypt-cfb
cmpsl
popa
dec
dec
lcall
pop
loop
dec
or
cmpl
sbb
sbb
nop
call
mov
out
in
inc
or
push
pusha
pop
daa
sti
sbb
stos
pusha
cmp
adc
loope
pop
add
ret
movsl
jo
cmp
xlat
sbb
fisubrs
push
pop
xlat
mov
add
push
push
xchg
loop
les
add
jp
fbstp
and
cmp
bound
imul
mov
and
sbb
sub
pop
adc
sub
nop
add
sbb
adc
jnp
mov
stos
lods
and
push
dec
jmp
jge
xchg
fsubp
push
cmp
push
cmpsl
adc
mov
in
xorb
lea
inc
push
mov
sbb
add
jne
rorb
pushl
dec
sbb
add
enter
cmp
sbb
mov
xor
mov
das
std
ret
ds
lods
rclb
int
mov
xor
data16
push
push
nop
mov
and
or
inc
cmpsb
adc
adc
mov
pop
inc
push
outsl
popf
push
add
xor
mov
sub
dec
push
push
lret
sbb
mov
outsb
inc
add
inc
sbb
jns
dec
addb
gs
jl
jle
mov
pop
add
or
out
les
adc
add
cmp
cmpsl
jp
aam
fidivrs
mov
mov
pop
add
and
outsb
push
add
or
nop
add
fs
cld
add
pop
pop
enter
sub
jecxz
ficoms
push
ljmp
jns
lcall
scas
add
cltd
inc
test
inc
stc
xor
outsl
mov
push
cmp
add
dec
iret
adc
cld
add
sti
lods
into
mov
add
add
adc
mov
shrb
xchg
into
enter
dec
repnz
sarl
and
sbb
rcrl
fnstenv
fstpl
or
lods
scas
idivl
mov
cmp
or
push
or
je
adc
jo
xor
loopne
std
cmp
sbb
js
and
jle
sbb
xor
ret
fsubr
fldenv
adc
inc
std
out
ss
lret
popa
js
loopne
loope
mov
inc
mov
and
add
push
jecxz
lods
js
shrb
ds
aam
push
cmpsl
or
jnp
dec
sar
push
aaa
add
jb
sbb
jno
out
push
andl
aam
sbb
sub
cli
and
mull
xor
jns
pop
xchg
sbb
dec
lret
andb
or
adc
stos
and
idivl
inc
popa
and
aam
push
or
sub
sbb
or
cmp
cltd
frstor
bound
sub
repnz
xchg
fistpll
popl
into
or
divb
loope
pop
jae
lret
sbb
clc
lcall
test
add
loopne
cli
add
xor
xchg
in
pushf
add
imul
je
outsb
adc
std
adc
rol
aas
mov
rolb
call
add
mov
xor
sbb
rol
aas
push
adc
dec
fcompl
clc
cmp
ja
shll
roll
sti
lock
sub
dec
add
push
adc
xchg
out
loop
xchg
xor
ja
xchg
and
add
bound
in
out
fs
mov
pop
cmp
push
mov
jle
mov
add
movsb
stos
xlat
vpminub
sbb
xchg
insl
adc
mov
fistps
not
cmp
push
add
sti
mov
add
and
pop
jmp
push
pop
rep
adc
stos
cmpsl
ret
cmp
mov
xchg
gs
mov
xor
add
xchg
inc
cmp
add
js
add
xchg
insb
dec
or
xchg
addr16
push
out
xlat
jns
and
fs
add
fdivs
ret
push
decb
rolb
rcrb
ss
dec
mov
fwait
pop
test
adc
in
xchg
sub
pop
dec
mov
sbb
add
jno
push
mov
das
cmp
cmp
int
out
jnp
inc
stos
test
iret
and
fsubrs
fst
clc
loop
aas
movsl
add
addb
popa
push
sbb
cmpl
cmp
jecxz
and
add
sbb
mov
sub
andb
in
add
cmp
push
scas
jb
lock
or
pop
fs
les
ljmp
push
pop
dec
sub
pop
pusha
add
fbstp
leave
inc
push
inc
rcl
jp
mov
mov
add
scas
pop
mov
cli
pop
mov
fisttpll
mov
or
mov
int
sbb
cmpsl
pop
inc
jo
add
repz
pop
inc
push
mov
xor
add
int3
cld
add
lods
dec
shll
in
jle
popa
mov
pop
lcall
push
mov
cltd
mov
in
push
pop
xchg
into
pushf
testb
ret
je
adc
cltd
add
adc
add
mov
cmpsl
jns
mov
in
xor
ficoml
or
rcrb
sbb
mov
mov
cmpsb
fidivs
push
adc
ffree
js
xor
ffreep
dec
and
xchg
mov
notl
push
jecxz
stos
lahf
add
insl
fistl
jo
sub
xor
cmp
dec
mov
fidivrs
frstor
popa
jae
or
sbb
fadds
mov
dec
add
pop
cmpsb
pop
and
add
mov
fisubrl
sbb
add
mov
adc
sahf
xor
test
inc
imul
fistps
adc
cmp
sbb
add
mov
fldl
xor
pop
ja
cmpsb
jmp
xchg
nop
and
sub
cmp
mov
cmp
dec
arpl
roll
pop
cmpsl
mov
pop
add
test
das
cld
inc
int
mov
dec
pusha
jp
xor
xchg
cmp
pop
inc
add
repz
dec
mov
fwait
sbb
and
add
ds
pushf
pop
gs
sub
ret
mov
arpl
add
sub
add
mov
arpl
push
xor
rolb
ficoms
push
dec
jnp
push
iret
add
sub
aaa
mov
popf
testl
stos
mov
add
ret
cmp
xchg
mov
jbe
cwtl
sbb
pop
outsb
push
jmp
insb
movsb
fistl
cmp
jecxz
sbb
adcl
jge
push
push
inc
aad
xlat
add
pop
pushf
jo
les
testl
adc
pop
iret
mov
daa
fidivrs
popl
inc
lods
daa
cmpsb
pop
and
add
sub
stc
sbb
inc
outsl
testl
mov
jno
int
mov
and
std
ljmp
fiaddl
stos
sbb
push
popa
xchg
mov
jp
in
mov
add
add
and
push
dec
xchg
add
bound
das
test
sbb
sbb
jl
sbb
cmp
lret
mov
sub
shll
xchg
fstl
cwtl
cmp
add
or
loop
mov
dec
xor
cmpsb
fs
dec
mov
rorb
jecxz
mov
aaa
mov
sub
mov
fisttpl
cmp
dec
sub
xor
sub
push
mov
test
mov
xchg
sub
sbb
outsb
xlat
add
jns
outsl
add
int
data16
insl
in
xchg
add
xor
adc
cli
xor
les
call
cmp
jl
push
lds
packssdw
push
aam
iret
sub
add
adc
fcomps
xor
inc
push
enter
and
std
cmp
add
aam
addl
lock
loop
and
mov
add
add
imul
pushl
mov
mov
inc
sub
push
xchg
inc
movb
and
xor
test
xchg
lahf
mov
ret
arpl
inc
rorb
add
inc
scas
xor
jle
lahf
mov
pop
sub
out
popf
loope
mov
mov
jbe
dec
lds
xchg
add
mov
jo
jns
xchg
mul
outsl
sub
cmp
adc
mov
popl
mov
aad
xchg
add
iret
data16
push
add
cmp
xor
std
leave
adc
pusha
inc
add
mov
ss
test
add
mov
movsl
popf
lahf
jae
jno
xchg
cmp
pusha
pop
jnp
dec
add
jns
aas
inc
test
cmp
add
mov
in
add
pusha
pop
xchg
pop
rcrl
into
mov
negb
rcrb
xchg
add
or
or
jnp
pop
cmp
test
xchg
jge
adc
mov
sarl
addb
cmpsl
add
repz
lea
dec
push
imul
dec
mov
mov
test
ss
cld
ret
pop
and
icebp
xchg
jns
mov
pop
hlt
daa
mov
cmc
mov
mov
cmp
ficoms
lock
xchg
jl
test
sarl
sbb
and
nop
paddd
xchg
rorl
aas
push
add
in
add
or
insb
sub
mov
jl
add
hlt
mov
lcall
ds
add
jae
rcr
inc
push
cli
cwtl
add
dec
fsubl
sahf
insl
test
cmp
xchg
fldl
sbb
adc
dec
repnz
and
jb
pushl
xchg
les
inc
outsb
div
addl
pop
insl
aas
mov
add
cmp
add
jl
adc
add
xor
add
and
xchg
jbe
stos
xor
xchg
jno
inc
dec
fs
add
pop
fistpll
mull
cmp
add
fstps
and
or
cmp
scas
jl
insl
rcrl
gs
mov
mov
repnz
movsl
xor
into
in
jnp
adc
sti
pop
jo
mov
mov
cmp
mov
add
mov
sarl
ja
or
adc
das
iret
outsl
mov
jp
loopne
inc
cmpl
in
ret
rorl
add
loop
push
pop
mov
and
and
int
add
pop
test
dec
lret
mov
add
dec
and
fsubrp
jns
add
call
stos
sahf
adcl
adc
test
test
jno
aaa
imul
pop
and
jge
mov
xchg
cmp
sub
out
cmpsl
shlb
ret
add
popa
scas
scas
js
mov
fucomp
addb
jbe
sub
adc
mov
cmp
in
lds
dec
sbb
inc
fsts
into
add
repz
sbb
add
jp
cmp
outsl
push
les
cmp
int3
or
cwtl
arpl
stc
sub
jp
data16
out
and
movsb
stos
add
int3
and
daa
sarb
fistpll
mov
dec
add
loop
sbb
fisubrs
cmpsb
mov
fcmove
jnp,pt
jo
dec
shll
sbb
sbb
cmp
xor
and
jo
jo
add
or
mov
sbb
pop
loope
xchg
sbb
in
or
lea
adc
lea
test
outsb
sub
push
fisttps
push
and
and
cmp
scas
and
jns
xor
scas
loopne
push
push
movsb
add
xchg
fdivl
mov
pushf
and
mov
inc
les
xchg
adc
mov
ss
or
mov
outsl
les
inc
jp
mov
in
gs
dec
cli
adc
sbb
nop
mov
xor
mov
das
push
xlat
pop
xchg
dec
insb
sbb
lods
jle
std
loop
pop
and
push
inc
pop
or
jle
inc
insl
std
xor
loop
jb
lcall
sbb
cmp
push
jne
xor
sbb
inc
sbb
fs
adc
out
andl
and
mov
dec
ds
scas
sub
lgs
xchg
dec
imul
xchg
loope
fcoms
sbb
test
stos
adc
xlat
push
add
push
icebp
loope
mov
sbb
or
lea
out
mov
and
imul
xchg
shr
jp
jge
adc
frstor
lock
push
add
ret
orb
pop
sbbb
aad
jmp
and
xchg
pop
pop
loopne
cmp
mov
bound
dec
cmpb
or
lods
mov
sbb
mov
push
and
mov
cld
nop
fistpll
jae
or
cmp
jl
ret
xor
insb
add
js
fisttpl
aad
pop
pop
lret
adc
mov
or
into
jle
fistpll
gs
and
mov
sbb
jne
jae
adc
jns
pop
int
sbb
fwait
sub
aad
lret
adc
add
ljmp
fisubrs
cli
xor
filds
lcall
out
pop
nop
imul
stc
orl
int3
and
mov
cmp
add
pop
ret
imul
cmp
insl
adc
shrl
mov
push
jo
aad
push
sahf
aas
or
jge
scas
xor
and
inc
rorb
pop
or
jne
rorb
clc
lahf
addr16
sub
sub
mov
add
sbb
pop
cmp
xchg
into
add
xchg
stos
jp
jmp
movsb
fstpt
cmp
insb
addl
inc
fstl
testb
data16
and
shll
lea
ret
pop
dec
pop
mov
cmp
add
mov
sub
xor
cmc
sub
xorl
orb
mov
or
sbb
fwait
sahf
dec
loopne
adc
sbb
add
cmp
xor
add
fstpt
push
test
inc
jmp
dec
test
jle
imul
sarb
pop
adc
or
cltd
outsl
xor
adc
mov
or
adc
ret
mov
pop
inc
and
add
pop
rcll
cli
imul
das
in
and
mov
cwtl
adc
jmp
pop
hlt
in
out
xchg
outsl
sub
and
mov
and
ret
in
xor
notb
mov
es
stc
and
clc
ss
out
sub
mov
rcrl
mov
scas
dec
sub
es
push
dec
jmp
mov
mov
add
scas
call
push
sbb
mov
shl
jnp
add
lahf
test
test
sar
stos
sbb
fists
das
sub
inc
popa
inc
data16
insb
push
sbb
xchg
sbb
fidivrs
jecxz
xchg
inc
daa
jp
pop
adcl
scas
xor
scas
sbb
sub
sbb
adcb
ds
and
cmp
mov
push
gs
add
push
mov
es
cmpsb
sbb
pop
and
or
or
repnz
adc
mov
mov
dec
mov
push
jp
insl
sub
sub
push
cmc
loopne
fiadds
inc
insb
cmp
and
leave
add
mov
dec
sarl
xorb
mov
xor
fcoms
aaa
adc
call
aas
das
add
imul
shl
test
cmp
add
push
scas
sbb
push
xlat
adc
popa
add
push
shll
sbbb
push
dec
cmp
gs
pop
jo
push
add
jp
adc
cmp
out
add
lds
xchg
outsl
repnz
sbb
inc
nop
xchg
fisubl
push
mov
xchg
pusha
sub
les
call
push
jp
sub
inc
or
fimuls
lahf
add
addb
push
or
cli
cmp
fstpt
dec
fdivrs
js
es
add
sar
jno
dec
lods
add
mov
addl
dec
pop
clc
call
gs
movsl
adc
mov
or
mov
xor
mov
shll
or
leave
fstpl
add
add
and
and
add
fstpt
add
push
lret
addl
adc
mov
inc
fistpl
insl
mov
cmp
out
adc
add
sbb
daa
cmpsb
adc
addb
out
pop
je
dec
fldl
mov
clc
sub
add
or
in
pop
call
cmpsb
and
sahf
sbb
adc
in
push
xchg
arpl
sti
add
mov
cld
decl
inc
dec
and
add
stos
jae
push
mov
ret
adc
jg
and
or
testl
jno
add
ss
adc
sarl
cltd
mov
cmp
xchg
das
outsb
ds
cmp
xchg
xchg
fs
add
fwait
inc
jne
dec
outsb
add
add
add
adc
das
push
jno
add
in
addl
add
dec
fcmovne
or
and
push
mov
insb
sub
add
leave
sub
inc
add
pop
imul
mov
add
push
adcb
add
push
pop
xchg
xor
clc
test
mov
repnz
and
roll
ljmp
dec
int3
cmc
imul
out
pop
mov
jo
popf
cmp
int3
fidivs
andl
mov
and
mov
cmpsl
aad
xor
loop
dec
add
mov
sbb
iret
mov
out
jnp
inc
mov
add
clc
xor
mov
add
xchg
les
adcb
xor
xor
rcrb
in
add
testl
daa
cmc
and
pop
addb
cli
adc
add
rcll
scas
jne
xchg
add
cmp
sbb
lea
pop
daa
cld
mov
adc
xor
nop
mov
mov
xchg
add
push
jne
lock
and
dec
jecxz
add
sti
mov
add
cmp
jmp
sub
leave
xor
push
les
and
daa
sub
xchg
sar
cltd
inc
xor
sub
add
adc
lcall
cwtl
mov
add
imul
add
sbb
sub
mov
lcall
loopne
leave
add
testb
ret
orl
inc
xor
add
mov
xor
cmp
push
inc
mov
pop
cmp
paddusb
xchg
into
aad
add
dec
add
cmp
es
aaa
pusha
and
xchg
lds
mov
movsl
xorl
sub
loopne
movsb
sub
dec
add
pop
jbe
imul
mov
es
out
xchg
dec
inc
adcl
or
or
ds
scas
xor
pop
jne
pop
shll
xor
pop
int3
jbe
add
movsl
mov
mull
add
fstl
and
fiadds
sub
mov
movsl
lods
btc
jb
sub
nop
mov
add
dec
ds
rolb
jo
and
cmp
adc
add
bound
push
cmp
push
mov
jae
ja
sbb
ret
ds
pop
add
cli
mov
dec
scas
mov
mov
add
fnstsw
dec
cmp
loopne
hlt
sahf
pusha
test
jl
jecxz
adc
stos
lds
mov
add
icebp
sub
inc
dec
addr16
int
shlb
push
lock
scas
sbb
sub
add
cmp
pop
shrb
adc
loop
arpl
lds
pop
sub
icebp
pop
gs
mov
pushf
add
mov
add
dec
arpl
add
push
jp
repnz
cmc
or
test
mov
add
sbb
add
mov
mov
add
sti
int
xor
and
mov
inc
push
pop
xor
xchg
insl
push
addr16
subb
inc
sbb
pop
adc
mov
mov
clc
push
repz
movsl
aam
add
mov
pusha
push
sub
fwait
cltd
rclb
dec
pop
add
test
mov
je
in
dec
or
add
xor
clc
insl
add
jmp
cwtl
push
or
push
ss
pop
lahf
lods
inc
fbstp
mov
sub
inc
push
sub
inc
imul
or
mov
or
jo
push
mov
push
aam
jns,pn
mov
add
outsb
rcrl
xor
fadd
add
loope
lcall
int3
insb
ret
enter
in
sti
inc
pushl
inc
jp
out
pushf
pop
out
shl
mov
lds
leave
xor
pop
aad
or
and
in
mov
xor
adc
mov
push
push
in
inc
pop
stos
dec
inc
dec
jg
pop
mov
incl
mov
push
pop
ret
cmp
jb
mov
fimull
add
int
inc
pop
xor
xor
repnz
aaa
inc
fs
inc
in
ss
cmpl
cld
xorl
mov
inc
or
jmp
xchg
or
rcrb
stc
xor
mov
dec
xchg
lret
pushf
xchg
add
repnz
mov
push
addb
lret
pop
mov
sub
enter
sarb
push
add
sbb
xor
outsl
xchg
icebp
jge
mov
out
test
add
daa
xchg
xchg
lret
fstl
mov
ret
add
xchg
out
lahf
loope
add
mov
mov
add
fisttps
sbb
movsl
xchg
mov
sub
inc
inc
fidivrl
or
sub
xor
jge
jecxz
sahf
push
xor
cmp
sbb
inc
add
inc
mov
mov
pop
mov
or
mov
pop
xlat
and
or
sub
cmp
int3
in
test
inc
jne
push
push
lcall
aas
or
add
dec
mov
jmp
mov
inc
repz
add
nop
lds
in
mov
lock
jmp
xor
jecxz
leave
mov
scas
cmp
popf
mov
mov
pop
pop
pop
mov
jle
loop
jne
and
popa
je
orb
xchg
add
hlt
adc
and
int3
inc
add
imul
in
rcrl
pusha
in
lds
mov
mov
idivl
subl
es
enter
mov
adc
lret
adc
int3
lcall
add
mov
add
les
dec
mov
es
add
lcall
add
push
iret
add
push
add
xchg
test
xchg
or
bndldx
add
or
test
clc
and
add
loopne
cwtl
add
pop
cmp
jnp
mov
dec
mov
add
add
cmp
mov
ss
icebp
xor
rorb
in
jle
leave
sub
inc
les
mov
xor
cs
add
inc
cmp
add
outsl
mov
jno
xor
test
ret
ret
mov
or
push
push
fs
aad
mov
hlt
inc
out
push
mov
inc
push
movsb
cmp
or
push
mov
ljmp
and
sbb
inc
ja
xchg
ficomps
divl
hlt
fidivrl
fadds
jl,pn
dec
mov
test
ret
cmpb
xchg
jl
mov
add
subl
mov
ds
xor
sbb
loopne
sahf
dec
ret
jp
or
pusha
loope
add
and
add
jns
mov
out
sbb
push
inc
test
out
push
imul
rcrb
jle
push
add
bound
int3
adc
and
add
mov
or
mov
mov
cli
sti
push
andb
sbb
add
insb
mov
dec
mov
out
movsb
add
aas
cmp
add
mov
mov
jle
insl
mov
mov
pop
inc
shll
cmp
add
and
jle
int3
jne
add
or
rcrb
cwtl
mov
jns
fstl
repz
add
mov
lods
gs
insb
xor
cmc
rcrl
adc
add
test
lock
test
cmp
jecxz
aad
movsb
mov
add
fdivp
pop
sbb
inc
test
loop
inc
add
int3
out
and
into
sub
jg
jge
sbb
mov
and
mov
add
sti
roll
add
mov
and
ss
push
and
sti
pop
add
xlat
repz
pop
in
mov
xor
stc
add
out
fs
sub
sub
add
pop
fwait
sbb
movsl
dec
pop
ja
push
push
out
flds
inc
fcoml
dec
add
push
clc
push
add
jmp
mov
out
fimull
out
adc
out
adc
ret
in
add
dec
dec
lods
add
repnz
aad
test
sbb
cmc
add
pop
xor
xorb
mov
mov
or
aas
mov
fwait
mov
and
cmp
add
push
jb
xchg
cs
xchg
pop
sub
inc
add
dec
stc
lahf
xlat
jb
add
pushf
aad
xchg
lock
test
iret
adc
push
insl
and
addb
std
push
add
lcall
and
rcrb
shl
stos
lods
pop
leave
ss
push
add
sbb
and
mov
add
xchg
xor
sahf
push
idivl
jns
cmp
inc
add
lods
mov
mov
push
stc
dec
cmp
jnp
imul
clc
add
mov
mov
dec
pop
inc
ret
xchg
add
ss
daa
xchg
lea
in
test
xchg
js
add
stc
xchg
mov
mov
popa
xlat
das
add
in
cltd
insl
iret
mov
or
mov
add
sarb
in
xor
sahf
push
dec
cmp
test
mov
or
add
and
into
xor
jne
mov
vandpd
test
in
shll
inc
shlb
std
adc
xor
add
inc
ja
xchg
in
xchg
scas
fcmovnbe
aam
and
int
shrb
adc
cmp
jne
les
dec
movb
dec
sbb
inc
sbb
aam
cli
cmp
mov
xchg
in
add
push
stos
mov
mov
imul
clc
mov
cmp
lcall
test
push
aam
xlat
jno
nop
pop
xchg
add
sbb
sti
enter
jo
jbe
fdivrs
std
leave
addl
and
dec
mov
cmp
lock
cmp
insb
push
sub
pop
or
add
inc
mov
dec
fwait
cmp
add
rcrl
push
push
fildl
in
loope
sbb
adc
lret
subb
add
loope
cmp
add
lahf
mov
sldt
rorb
fmull
insb
add
xchg
daa
test
sarl
cmp
je
and
or
pop
out
jae
inc
stos
xchg
insb
and
pop
mov
adc
aas
mov
add
xchg
fwait
jp
adc
cs
insb
lds
jg
rcll
mov
jnp
cld
aad
adc
outsb
mov
add
lock
hlt
jno
lahf
add
fistps
adc
test
xchg
mov
daa
hlt
cmpsl
out
sbb
mov
or
and
bound
xchg
xor
scas
pop
sub
add
out
mov
shll
scas
addb
sub
dec
sbb
lods
fnstcw
test
xor
mov
dec
pop
nop
adc
out
sarb
and
add
movsb
xlat
movsl
shlb
stc
jmp
in
ds
add
xchg
mov
mov
outsb
test
pop
out
add
fcomi
mov
mov
add
das
pop
mov
cmp
dec
and
sbb
add
ljmp
push
sbb
mov
fbld
jg
add
mov
mov
add
lea
frstor
mov
jmp
and
filds
cmpsb
cmc
repz
bound
add
pop
adc
add
pusha
inc
gs
movl
nop
mov
mov
scas
out
sar
push
lret
jecxz
jb
and
sub
idivb
adc
push
adc
inc
xorl
mov
mov
lods
loope
dec
into
or
pop
mov
add
fwait
adc
in
or
arpl
dec
mov
xor
ret
test
mov
sbb
xor
sub
add
cmp
push
mov
sbb
aaa
sti
ret
frstor
sbb
rclb
xor
movsl
stos
cs
push
pop
mov
pop
js
stc
lods
rcll
jo
mov
jl
xor
sbb
or
sub
mov
int3
movsb
ret
jecxz
scas
lea
stc
mov
sub
jle
add
pop
es
mov
into
jecxz
jg
test
shrl
lcall
rolb
shrb
fisubrl
pop
cltd
adc
mov
inc
faddl
add
out
test
jle
xor
xchg
enter
cmp
lods
addb
cmp
push
add
dec
adc
push
movsl
loope
pop
mov
jno
flds
rcrl
std
mov
imul
outsb
popa
adc
add
testb
arpl
inc
mov
cmp
iret
and
incl
add
hlt
push
xor
add
js
jle
pop
aas
rclb
sub
and
xor
and
cld
dec
xor
xchg
mov
add
scas
cwtl
adc
rorb
adc
add
jmp
sub
inc
dec
cmpsb
jmp
loope
repnz
add
cmp
mov
mov
push
push
into
nop
enter
add
and
mov
mov
sub
mov
xchg
repz
imul
inc
or
lds
and
add
test
jbe
call
js,pn
jne
or
adc
mov
mov
add
jge
into
xchg
push
adc
add
das
ljmp
popf
xchg
enter
shrb
add
jge
pusha
andb
adc
popa
add
arpl
jle
dec
dec
mov
cld
pop
imul
add
cmp
add
es
xchg
shlb
fadd
push
xchg
pslld
and
mov
pushf
stc
inc
sbb
jge
sbb
xchg
add
shl
jno
cmpsl
mov
shrb
jne
dec
add
cmc
inc
addl
outsb
and
int
add
stc
fsubl
jl
xchg
inc
pop
cmpsl
bound
xor
lods
sbb
leave
cmp
jl
icebp
repnz
and
dec
pop
mov
imul
push
sub
shll
pop
je
and
mov
xchg
cld
and
fisttps
aam
add
sbb
ret
dec
daa
pusha
and
addr16
into
sbb
add
leave
imul
repz
add
fwait
dec
outsl
insb
xchg
test
shlb
test
pop
xor
mov
mov
add
scas
and
loope
ja
cmp
add
fsubr
add
in
pop
add
dec
es
add
mov
fs
add
cmpsl
dec
mov
jns
cmp
xor
enter
xlat
add
aad
orb
rcrb
vpackssdw
xor
mov
test
mov
sub
sub
mov
popf
in
adc
ret
add
jb
mov
dec
int
popa
push
xchg
in
add
sbb
sbb
add
sbb
pop
aaa
mov
adc
sub
ss
xor
rcr
add
mov
sbb
gs
inc
add
loop
push
inc
or
dec
xor
inc
sub
testb
mov
cmp
pop
xor
in
sbb
lds
cmp
sbb
ret
cs
jl
and
inc
sub
inc
xchg
cmp
add
jge
in
sbb
iret
cs
add
call
inc
inc
jl
jnp
cmp
pop
add
int3
sub
inc
pop
add
mov
mov
bound
repnz
add
into
xor
in
xchg
jnp
sub
gs
dec
cmp
lods
sahf
pop
scas
pusha
mov
in
into
repz
add
mov
cltd
mov
lahf
outsl
nop
push
movsl
jl
and
ret
fwait
out
cmpsb
movsl
les
adc
setbe
nop
in
xchg
insb
ss
dec
fwait
mov
or
xor
iret
push
add
lock
test
dec
add
das
sbb
roll
push
in
dec
dec
fwait
out
test
inc
cmp
push
ja
push
push
orb
xchg
sarb
lods
mov
jecxz
rolb
js
add
mov
add
test
jae
sub
mov
test
add
out
jns
and
imul
sub
inc
add
mov
mov
shl
xchg
ret
push
rolb
and
dec
dec
data16
pop
faddl
jbe
popf
add
outsb
test
dec
int3
xchg
mov
mov
push
mov
mov
cmpsb
inc
jmp
js
testl
jecxz
mov
and
subb
dec
cmpsb
mov
jg
stos
push
or
add
push
push
ja
arpl
lcall
stos
add
add
imul
jge
lods
inc
sub
add
mov
xchg
and
nop
xchg
push
add
gs
mov
add
xor
sarb
xor
das
ds
adc
pop
es
cmp
mov
inc
mov
jnp
xor
sti
scas
sbb
into
inc
addb
loopne
adc
in
add
mov
mov
jno
arpl
add
stos
and
push
adc
roll
xor
pushf
add
push
pusha
shrb
cld
xchg
outsl
push
js
rorl
dec
outsb
scas
cmp
nop
repz
mov
jnp
mov
fnsave
popf
and
sub
pop
add
pop
sbb
add
jp
push
mov
xchg
add
pop
mov
inc
clc
push
test
dec
push
and
pop
out
add
insl
scas
shll
test
dec
and
cmp
add
sbb
loop
hlt
sbb
and
add
and
je
add
movsb
clc
mov
ss
adc
incb
inc
into
xchg
mov
imul
xchg
test
loope
jg
aaa
pop
xor
push
inc
push
sbb
movsb
add
orb
jecxz
add
adc
movsl
sbb
jnp
pop
rcll
cmp
and
in
out
sti
add
shl
push
adc
hlt
jne
jg
dec
add
test
popf
daa
fisttpl
sbb
and
arpl
sbb
sarb
scas
xor
sub
js
add
xor
add
cmpsl
leave
fmuls
cmp
or
addr16
push
or
and
ljmp
and
insb
decb
test
scas
lcall
jmp
in
ret
hlt
addl
faddl
pop
adc
aas
cmp
add
or
and
pusha
add
add
stc
hlt
int3
shrb
xor
xor
out
ret
outsl
je
cmpsb
and
loope
fwait
cltd
jbe
lock
push
insb
mov
mov
add
enter
sahf
xor
push
add
clc
jl
lcall
pushf
push
mov
fidivl
test
pop
loop
add
sbb
jl
cmp
add
fildll
xchg
or
push
cmc
int3
pop
sbb
ljmp
pop
icebp
mov
loopne
rorl
ljmp
sbb
sbb
xor
pop
fidivrs
adc
pop
lahf
xchg
lds
push
fst
add
dec
xor
shrb
or
inc
jecxz
cmpsl
xchg
push
sub
cmp
fmuls
cmpsb
mov
or
addl
cmp
add
push
xchg
add
inc
xchg
faddl
push
fstps
ret
lret
les
cmc
out
jnp
rep
and
and
sub
fnstcw
mov
lahf
rcrl
test
xchg
pusha
and
ljmp
push
stc
pop
and
jg
bound
scas
andb
lds
or
out
out
mov
push
sahf
jg
es
push
cmp
mov
addr16
add
out
jns
stos
sbbb
xchg
mov
or
call
test
cmp
outsb
jg
mov
cmp
aaa
subl
add
stc
inc
scas
test
imul
adc
dec
mov
xor
and
fcmovbe
lret
add
subb
pop
cmc
popa
aad
pusha
into
das
xor
cmp
lock
xlat
mov
bound
loop
dec
hlt
mov
jb
repnz
push
je
mov
cmp
hlt
cmp
sbb
roll
xor
mov
jbe
cmp
mov
and
push
xor
sbb
jecxz
pushf
push
adc
rolb
sti
in
lahf
adc
lods
push
or
icebp
xor
repz
add
push
xlat
sbb
ret
or
stos
shll
add
vhsubpd
call
mov
iret
pop
mov
das
popa
dec
fyl2x
movsl
in
in
mov
incl
push
xlat
jle
clc
mov
pushf
scas
es
je
int
into
and
and
iret
add
add
lods
mov
add
sbb
mov
lret
lcall
jne,pt
stos
inc
push
xchg
lods
ds
pop
in
ffree
rolb
leave
roll
movsl
and
pushf
pop
fs
add
int
pusha
add
fadds
xor
cli
aam
rol
push
daa
push
add
outsl
lds
jbe
neg
leave
mov
scas
add
shlb
shr
pop
incb
mov
push
xor
pop
cwtl
test
mov
mov
repz
push
add
test
cltd
fbstp
inc
shl
imul
repz
shr
inc
lds
loope
cltd
sahf
in
xlat
or
xchg
jle
or
dec
sub
inc
sbb
cmp
enter
xor
or
movsl
mov
out
aaa
test
cs
mov
ljmp
pop
mov
shlb
or
inc
into
ds
mov
cmpb
stos
push
ja
mov
stos
das
inc
push
in
outsl
cmp
push
lods
sarl
dec
add
push
insb
add
add
aam
jb
and
pop
add
mov
movsl
ljmp
xchg
add
setns
mov
jbe
jmp
cvtpi2ps
inc
sbb
stc
xchg
cli
xchg
adc
adc
dec
inc
add
xchg
divb
adc
or
sbb
cmc
xchg
mov
inc
add
popl
call
jno
mov
jbe
mov
ds
add
insl
ljmp
cmp
stos
dec
subb
pop
fstps
inc
leave
js
pop
ja
loop
ds
cmp
into
jl
mov
test
mov
sbb
cmc
mov
push
pop
jb
sub
je
ljmp
in
mov
int3
mov
pop
or
not
sub
xor
int
sub
and
mov
setno
add
ljmp
repz
dec
inc
xorb
shufps
mov
movsb
sbb
add
cmp
shrl
sub
ds
push
or
xor
fadds
jp
mov
push
fldln2
pop
rolb
pop
jbe
sub
add
roll
ret
ret
lock
sub
inc
push
add
xchg
push
popa
add
dec
push
testl
push
imul
mov
js
pushl
inc
rclb
pushw
mov
add
cmp
mov
std
xchg
mov
jp
jno
aad
mov
faddl
mov
jmp
mov
inc
out
fwait
leave
push
pop
scas
movsl
out
dec
adc
add
test
dec
fld
fistps
mov
add
cli
and
shll
outsb
adc
popf
push
jnp
sub
and
cmp
iret
and
pusha
das
cmpsb
jns
add
test
test
push
mov
xor
pop
js
into
stos
adc
cltd
loop
lods
sbb
ret
lods
nop
paddd
cs
jp
sbbb
sbb
mov
daa
and
out
and
xchg
popa
mov
cmp
out
jp
clc
jmp
sbb
xor
scas
imul
add
daa
jp
xlat
pop
jo
ds
mov
mov
adc
add
shlb
mov
cmp
sbb
pop
xchg
sbbb
sbb
inc
add
cs
loop
sbb
xorb
xchg
mov
sub
mov
leave
adc
jmp
and
cmp
daa
add
lret
out
movl
push
inc
add
testb
es
cmp
add
lods
movsl
cmp
inc
les
aam
or
jbe
sbb
sbb
push
in
inc
dec
xor
ret
jns
mov
add
xchg
jbe
nop
add
jns
add
xchg
outsb
add
pop
push
cmp
xlat
inc
popa
into
repz
or
call
cmpb
cmp
cwtl
test
js
add
imul
nop
sbb
cmp
cmp
mov
sbbb
int3
fs
imul
pusha
add
rorl
jl
testb
cmp
cmpsb
xchg
mov
ja
adc
testl
jbe
mov
push
cmp
cs
sub
ja
add
and
add
cmpsb
int
sub
add
arpl
jnp
mov
sbb
add
and
add
xor
mov
rorb
push
mov
inc
sbb
jmp
scas
aaa
or
loope
adc
lcall
xor
sub
out
sub
push
mov
jl
jb
inc
push
lret
or
cmp
and
cmpsb
jge
mov
cmp
loopne
daa
xlat
les
xchg
scas
sahf
gs
pushf
adc
push
cmp
cs
cmp
add
lock
lret
jns
pop
mov
xchg
jne
sbb
scas
jnp
push
inc
call
out
mov
xchg
cmp
cmc
insb
jno
dec
or
stos
push
jle
cmpsb
out
sbb
lahf
inc
xchg
gs
data16
xor
jp
jbe
ss
outsl
adc
daa
in
filds
or
sbb
test
test
aad
not
lcall
sbb
clc
mov
and
sysexit
xchg
add
xor
cs
dec
mov
lea
sbbb
inc
int3
mov
xchg
ja
adc
scas
jg
fidivrl
dec
pushf
fidivs
scas
enter
lret
aaa
cmp
xor
push
shll
pushf
ret
cmp
inc
pop
sub
sbb
cmpsb
stos
mov
insl
es
addr16
inc
jo
mov
inc
sarb
cmpsl
inc
mov
mov
push
pusha
sbb
cld
rcrb
add
or
jecxz
fstpt
or
adc
mov
mov
sahf
sub
sbb
xor
dec
cmp
mov
dec
adc
insl
lret
adc
mov
ffree
jo
cmp
cs
cmpb
imul
dec
scas
test
sbb
add
js
test
push
jne
cmc
bound
fbstp
push
test
push
pop
jecxz
add
push
xchg
adc
lret
xor
xor
and
sbb
or
lods
xor
aam
push
add
or
loop
push
insb
inc
cmp
in
cmp
jno
xor
idivl
lret
ljmp
and
cltd
jnp
xor
push
test
sbb
dec
sbbl
aas
cmp
pop
call
mov
mov
or
ljmp
xchg
and
bound
push
xchg
dec
mov
rorl
out
dec
dec
in
bound
cltd
add
inc
add
sub
jg
sub
scas
and
and
scas
in
pop
loopne
jp
or
call
pop
repnz
bound
addr16
lea
loop
out
inc
pushf
aad
sub
jae
lds
and
ja
hlt
pop
and
mov
jbe
push
sbb
xor
and
rorl
inc
stc
ret
dec
int3
add
ja
add
and
jecxz
mov
add
adc
movsb
insb
clc
xor
jbe
cmp
je
in
pop
sub
sbb
xor
and
jle
mov
dec
add
adc
pop
add
mov
cmp
idivb
push
jge
add
fildl
inc
mov
cmp
cmp
and
ljmp
stos
cwtl
dec
adc
inc
sbbb
mov
adc
popa
and
rcl
cmp
jg
and
and
mov
ja
jnp
xchg
add
dec
outsl
jne
cmp
imul
test
es
out
test
pusha
xchg
outsb
dec
add
out
aad
adc
test
das
dec
aam
sti
cmpsl
icebp
jo
mov
mov
jo
jae
push
pop
push
add
xchg
jno
jbe
fld
enter
and
sub
push
or
fs
and
add
enter
mov
sbb
das
cmp
rcrl
neg
bound
sbb
cmp
add
jno
dec
es
add
cld
xlat
popl
cmp
dec
bound
aad
inc
ja
cmp
xor
dec
call
data16
xchg
inc
idivb
inc
hlt
add
jle
out
xor
pusha
mov
add
lods
call
fstl
push
add
push
sub
mov
sub
stc
mov
jl
or
bound
inc
lds
pop
imul
test
add
mov
mov
pop
icebp
mov
jnp
or
loopne
mov
xchg
xchg
and
ret
pop
nopl
pop
xor
xchg
and
pop
add
js
fmul
mov
cmpsl
stos
xchg
inc
mov
inc
cmp
addb
pop
and
shlb
insb
add
in
cmpsl
mov
roll
cmp
popf
xchg
add
jl
sahf
fidivs
mov
fwait
test
lret
add
add
xchg
clc
dec
xchg
cld
mov
add
movsl
pop
pop
cmp
push
jns
subb
outsl
inc
jmp
orl
xchg
and
push
jo
add
xor
ret
jne
stos
dec
add
and
clc
js
das
iret
adc
cs
add
mul
fisttpll
sbb
clc
jmp
jg
inc
aad
dec
test
xor
inc
out
xor
sub
outsl
pop
mov
add
mov
clc
and
add
xchg
jo
or
pop
pop
aas
pop
and
or
cmp
fstps
adc
push
push
popl
fbld
stos
js
or
stos
adcl
sar
stos
push
push
sbb
adc
das
add
inc
lret
arpl
push
roll
xchg
inc
icebp
jns
push
fwait
add
add
xor
stos
movsb
aas
adc
add
aam
scas
mov
add
movsb
sub
fmuls
ror
adc
jne
fiadds
test
xor
dec
fldenv
jp
add
push
and
into
icebp
shl
sbb
aaa
push
jmp
jl
add
adc
xchg
cmpsl
loopne
add
das
pop
sbb
mov
xor
out
sbb
flds
lods
les
add
cmp
insl
movsl
dec
xor
pop
sbb
dec
mov
inc
pop
in
in
icebp
xor
xor
mov
or
or
inc
negb
push
popf
jnp
cmp
xor
shll
sub
push
iret
sarb
xor
lds
ljmp
cmp
jne
call
cmp
push
loop
lret
mov
sub
rcl
cmp
es
addr16
in
jne,pn
push
sbb
adc
cmpl
pusha
adc
xchg
mov
or
and
daa
dec
cmp
out
xor
sub
cmp
mov
aas
pop
or
adc
sbb
push
cltd
les
inc
into
lods
jl
inc
repnz
insl
lods
jg
shlb
fcmovnu
popa
fdivr
jb
lahf
inc
loopne
mov
add
cmp
push
lcall
subl
ret
sub
ja
xlat
add
xlat
mov
outsl
mov
inc
jb
scas
dec
fisttpll
js
ffreep
push
mov
mov
lahf
aas
leave
push
nop
hlt
std
movsb
adc
lret
jmp
push
sti
pop
mov
xchg
std
add
push
sub
aam
sti
cmovno
cmp
incb
movsb
pop
xor
mov
and
jnp
mov
inc
pop
and
and
jle
test
data16
in
mov
sub
out
loope
mov
scas
pushf
mov
xor
arpl
dec
mov
sub
repnz
fadds
jg
jae
lahf
leave
or
arpl
mov
add
cmc
push
mov
push
ja
jbe
es
sarb
dec
jb
sub
mov
push
push
and
rol
mov
lds
add
enter
jmp
mov
std
or
lret
add
outsl
jp
mov
push
xor
sarb
outsl
adc
sub
mov
dec
push
xchg
pop
std
ss
or
and
test
cmpsl
sbb
sbb
popf
xor
add
push
pop
lahf
add
lret
mov
push
cmp
add
cwtl
and
scas
add
dec
es
rcrb
mov
rorb
xor
pusha
and
stos
jae
inc
adc
mov
ds
add
pop
dec
sub
sahf
push
push
add
sbb
std
mov
or
add
pop
cmpsl
jbe
mov
push
mov
jae
add
fistpl
mov
push
aaa
jno,pt
loope
pop
and
mov
rorb
push
daa
add
insl
jl
popf
mov
cwtl
dec
jne
cmp
stos
push
pop
addr16
sub
xchg
mov
mov
mov
mov
roll
cwtl
xchg
arpl
loopne
fnstenv
icebp
add
aaa
fisubl
inc
pusha
nop
cmpsb
ficomps
jecxz
add
add
dec
and
ret
testl
add
popa
addb
jns
aas
mov
mov
cmp
in
ret
pusha
adc
sbb
cmpsb
add
or
mov
lock
add
mov
out
test
repnz
jg
jl
or
hlt
add
xchg
cmp
dec
rorl
test
push
int3
add
jp
in
inc
mov
adc
xchg
clc
pushf
xadd
stc
imul
cmp
mov
jae
push
je
loop
std
add
stc
add
lret
rclb
data16
cmp
shlb
push
jne
xor
aas
xlat
or
dec
rcr
lret
or
mov
xor
fucom
cmpsb
push
jbe
jecxz
adc
in
inc
testl
push
sub
sub
jo
data16
out
in
jle
movsl
or
sti
lret
adc
pop
leave
cmp
mov
dec
out
sbb
dec
mov
testl
xor
pusha
jge
jl
add
ds
jno
mov
xlat
jp
dec
sbb
out
fcmovb
cmp
xchg
cmp
or
cmpsb
lock
mov
test
adc
sbb
jg
lods
adc
pop
lahf
and
and
out
std
jae
xlat
mov
xchg
out
push
cmp
test
lret
loope
mov
inc
lock
cmp
or
xchg
adc
and
repnz
cmp
cwtl
shrb
pop
andb
ret
and
lcall
and
dec
shlb
push
mov
dec
outsb
xchg
fs
sbb
push
add
xchg
mov
bound
xchg
xor
in
shlb
mov
je
fcmove
icebp
or
sbb
les
adc
mov
gs
mov
mov
xor
jnp
push
fbld
cmpl
loope
xchg
rcrb
js
sbb
das
xor
push
subl
add
xchg
sbb
add
xor
scas
lods
aam
sahf
jge
pop
push
cmp
sub
lock
lds
xchg
lods
add
fidivl
sbb
shlb
imul
sub
push
das
rcr
pusha
stos
repnz
cmp
flds
pop
jg
lds
cld
inc
xor
mov
cmp
bound
and
dec
movb
mov
mov
sahf
cmp
shl
push
lock
in
dec
call
cld
cmpsl
xchg
fsts
add
data16
mov
lahf
add
icebp
sbb
sbb
rolb
enter
imul
subl
push
call
outsb
cmp
scas
add
lods
adc
xchg
test
cmp
cltd
stos
or
add
scas
pop
xor
hlt
jne
add
push
sub
or
dec
lods
lcall
jmp
pop
jecxz
and
add
mov
fcomps
sbb
das
test
adc
lods
bound
stos
inc
mov
add
loopne
pushf
xchg
loop
pushf
add
push
lcall
or
std
into
lods
outsb
or
xchg
mov
cltd
mov
pop
lret
sub
xchg
cmp
rorl
fdivp
ja
xor
lock
jecxz
nop
mov
jl
sbbl
test
mov
fs
sub
cmc
or
cmpl
add
leave
cmpsl
addr16
xor
fadds
add
push
jb
push
aaa
into
jmp
add
cmp
and
xlat
ds
mov
out
add
shlb
mov
and
pop
sbb
xchg
jecxz
mov
mov
lret
leave
lds
mov
mov
out
push
jno
xchg
adc
popf
cmp
inc
add
mov
scas
pop
subb
shll
cmp
inc
loopne
jecxz
scas
cmp
xchg
add
and
sti
subb
sbb
daa
push
addr16
ss
mov
ret
mov
int3
shlb
or
dec
rcrb
sub
icebp
mov
out
movsb
inc
pop
sar
xor
sub
jmp
dec
xor
push
inc
inc
ds
aad
clc
loope
push
mov
stos
jg
fists
mov
add
or
divl
push
ficomps
pop
xchg
mov
sbbl
inc
stc
mov
cmc
push
addr16
mov
leave
dec
and
in
in
pop
xchg
cmp
hlt
movsl
vcomiss
cmp
xchg
out
sahf
add
fbld
inc
jae
loope
mov
lret
mov
inc
loopne
add
mov
add
imul
mov
xchg
fwait
xchg
and
mov
call
xor
pop
test
and
fcompl
mov
lock
roll
aam
cmp
das
lods
xchg
sub
lock
cmp
inc
loope
cmp
rcrb
in
xor
jle
andl
sub
or
cmpsl
jns
mov
adc
lds
adc
add
push
sar
es
out
push
ja
adc
int3
jne
fprem1
cmp
stos
jb
ds
sub
fldl
jno
add
adc
sbb
daa
pop
push
add
or
add
add
aad
jnp
es
cwtl
xchg
cmp
push
ret
cmp
je
mov
out
dec
xchg
push
cmpb
mov
cmp
or
fnstenv
mov
mov
dec
dec
cmp
loope
add
jmp
xlat
cmp
and
and
lock
mov
daa
add
lds
ja
add
adc
fs
jle
inc
mov
xchg
inc
ds
sub
jge
aas
ss
dec
out
mov
xchg
add
aas
and
mov
aam
xchg
out
addb
adc
je
and
inc
adc
pop
add
mov
xchg
daa
jns
std
pop
adc
sbb
addb
enter
mov
iret
in
add
sbb
or
mov
js
push
aam
add
inc
adc
movsb
das
and
das
jae
scas
jle
push
sub
mov
jg
xor
repnz
sbb
addl
dec
adc
xchg
test
pop
mov
icebp
std
aaa
mov
aam
lods
push
mov
popf
push
adc
cmp
adc
jbe
jmp
arpl
sbb
fildll
cmp
or
int
aaa
in
cwtl
pop
es
jp
sbb
das
add
push
pop
mov
jmp
popf
ret
cmc
cmp
pop
ret
push
and
cmpb
or
iret
jmp
cld
inc
sbb
inc
cmp
xchg
adcb
icebp
pop
aad
or
cmp
pop
pop
jnp
or
jle
adc
jb
fwait
gs
scas
insl
pop
adc
cld
cmp
mov
xchg
outsl
or
cmc
adcl
bound
inc
mov
jp
das
and
push
push
xchg
cmp
dec
cmp
cmc
inc
in
sti
sub
mov
pop
push
pushf
xchg
lcall
xchg
and
js
test
push
mov
ss
and
mov
idivl
mov
dec
fbld
push
fdivrl
xchg
jmp
cmp
xchg
cmp
jecxz
sbb
xor
adcl
and
pop
mov
fcomps
leave
mov
xor
jo
jp
aam
mov
loopne
sub
fcmovne
push
xchg
adc
fwait
cmp
adc
aas
sbb
xchg
mov
in
imul
aad
fucom
les
scas
mov
mov
insl
and
sbb
repnz
pop
xor
xor
insb
jne
add
stos
mov
xchg
pop
icebp
outsl
arpl
pop
add
roll
xchg
mov
sbb
jp
fwait
jb
imul
ficoms
sbb
fimuls
dec
xor
or
add
or
add
adc
leave
inc
pop
je
and
outsb
fs
mov
pop
rol
mov
das
sbb
jne
pop
add
xor
aaa
inc
add
mov
cld
add
out
call
jg
jnp
jecxz
aam
jmp
fsubrp
or
adcl
add
add
hlt
mov
jae
dec
pop
add
lods
adc
je
cmp
aaa
add
hlt
and
add
jmp
push
lcall
out
in
mov
xchg
out
ror
sahf
pusha
idiv
fistpll
or
int
sbb
xchg
mov
daa
cmp
add
xor
int3
add
add
xor
jg
pusha
into
out
and
test
xor
add
xchg
add
push
add
mov
push
loopne
push
jge
cs
clc
and
push
or
push
int
inc
sub
jb
popl
sub
sbb
sub
add
xchg
les
cmp
add
aad
fwait
cmc
in
test
insb
adc
inc
sub
cmp
dec
rcrl
fsubrl
inc
or
push
add
add
sbb
and
mov
adc
insl
and
dec
mov
cltd
mov
push
ret
in
xor
daa
and
inc
subl
jo
or
adc
mov
mov
adc
aam
scas
xchg
test
jmp
fmull
fwait
fs
roll
jo
add
popf
lret
add
in
js
ds
sub
cld
testb
cmp
fs
cli
xchg
cld
mov
lea
xchg
lods
ret
adc
fcmovbe
add
loop
dec
or
or
js
sub
sub
das
mov
cli
icebp
test
cmpsl
dec
add
mov
lahf
enter
pop
sub
jecxz
fs
inc
cmpsl
out
adc
jnp
cld
xor
inc
cmp
fiaddl
pop
push
and
mov
adc
fs
or
pushf
aam
mov
inc
jbe
dec
bound
adc
add
push
inc
mov
mov
add
mov
add
cld
loope
add
dec
pop
pop
imul
inc
sub
cmc
mov
movaps
shr
add
mov
lcall
add
adc
add
mov
addl
repz
pop
out
mov
push
sub
icebp
xor
test
dec
out
das
push
cmc
inc
movsl
push
jbe
and
pop
xlat
cltd
cli
mov
jp
adc
outsl
add
frstor
ret
add
xchg
int3
and
dec
test
add
or
lock
xchg
add
mov
adc
cltd
xor
push
dec
aas
test
js
mov
pop
add
sub
adc
mov
movsb
or
pop
loopne
add
xor
nop
pop
mov
add
inc
inc
add
add
xchg
jno
mov
add
xor
ficoms
add
sbb
jbe
adc
jno
push
pop
jecxz
adc
dec
aam
fmull
mov
and
adc
push
in
inc
xchg
enter
rorb
push
push
dec
addr16
push
subl
pop
loope
je
loope
inc
or
cmp
and
push
cmp
aaa
add
sbb
flds
adc
call
pop
sub
das
and
dec
addr16
loop
cmp
ljmp
fidivl
push
movsl
repz
adc
inc
and
add
and
xlat
xor
add
xor
xorb
push
add
add
add
cs
out
movsb
dec
int3
add
mov
add
insl
iret
icebp
inc
xchg
pop
pop
lock
pop
inc
pop
xor
shlb
xchg
xchg
stos
sub
frstor
lret
std
sbb
dec
add
imul
add
loope
xchg
mov
ret
scas
or
lea
shrl
fs
andl
fdiv
lea
in
add
ljmp
cmp
fdivl
fs
inc
aaa
imul
test
adc
mov
add
imul
mov
es
add
mov
ret
lods
sahf
aas
jmp
adc
add
push
add
xchg
lods
mov
lret
mov
add
dec
push
pop
ret
lret
das
sub
test
mov
lock
lcall
hlt
les
popf
jne
and
add
xor
ja
leave
and
std
iret
adcb
je
lcall
rorb
sbb
arpl
incb
ret
sbb
stos
pop
in
rol
mov
rcl
cmp
dec
jnp
std
sub
add
add
xchg
fldl
mov
out
inc
fnstenv
adcl
shll
mov
add
lahf
iret
inc
dec
adc
push
pop
pop
aas
xchg
fisttpll
and
pusha
dec
shrb
cmp
ret
cmc
cmp
orl
sub
dec
loop
add
adc
insl
sbb
xchg
mov
add
scas
aam
cmp
pop
popa
in
xchg
insb
xor
pop
sbb
pop
test
lret
in
repnz
xchg
repz
lods
and
push
push
jmp
icebp
add
movsl
cmp
ds
mov
mov
mov
add
pop
test
cmp
mov
and
enter
data16
xchg
nop
pop
sbb
sbb
mov
pop
cmpsl
dec
iret
add
jno
dec
nop
stos
in
test
insb
xchg
adc
add
imul
pop
add
inc
add
das
xor
or
adc
sti
cld
add
imul
add
out
scas
pop
packssdw
rclb
or
jge
mov
xlat
stc
inc
add
nop
pop
imul
mov
pop
mov
test
adc
fcmovnbe
inc
shll
ret
in
or
inc
add
fwait
cmp
inc
jg
jo
cmp
mov
fcoms
icebp
sub
mov
add
cmpleps
xchg
jp
les
push
int3
add
fs
adc
ss
add
pop
mov
popf
push
js
out
div
ds
shlb
es
and
out
and
data16
sbb
fwait
add
nop
lds
add
sub
dec
or
lcall
lock
pop
mov
mov
jp
cmp
add
imul
add
outsb
cmp
add
fcomps
std
shlb
cmp
push
adc
shrb
mov
xchg
aaa
pop
adc
movsb
mov
add
xchg
shlb
jns
push
outsb
cmp
add
jge
int3
aad
or
insb
mov
test
add
sahf
aaa
in
loopne
rcrb
cs
dec
cmp
mov
xchg
push
add
mov
and
mov
xchg
dec
inc
mov
jecxz
aad
cmpsb
adc
push
repnz
mov
xor
outsl
inc
add
push
sub
jnp
arpl
jmp
lret
pop
pop
std
dec
addb
dec
lods
adc
mov
clc
and
aas
ret
inc
out
sbb
ret
xchg
nop
xlat
push
jo
cli
scas
mov
and
lret
cmp
sarb
sahf
pop
mov
dec
and
and
jp
les
sbb
jmp
sbb
mov
mov
mov
mov
scas
gs
popa
add
ret
mov
push
sub
cmp
xor
ret
dec
cmp
addr16
push
cmp
inc
push
mov
loopne
icebp
out
jecxz
ja
cmc
or
pop
sbb
cmp
add
pusha
adc
jmp
lods
clc
xchg
pop
lds
mov
aas
inc
aas
imul
add
out
and
das
sub
aad
ljmp
pushf
sti
cmp
and
and
cmp
mov
add
cli
and
cmp
sbb
pop
add
repz
or
lret
das
imul
and
fsubl
xor
nop
scas
add
arpl
cmp
inc
inc
repz
xchg
adc
pop
negl
dec
ret
mov
roll
setge
add
icebp
mov
sub
nop
imul
aas
sbb
fiadds
inc
sbb
add
movsb
aad
or
and
sbb
add
inc
into
cld
imul
xlat
cmp
pop
sahf
fistpl
movsl
add
jp
xor
mov
add
pop
sub
mov
add
mull
add
rorb
add
jmp
adc
insl
ret
xor
push
jl
or
cmpxchg
aaa
cs
cmp
add
jno
sub
bound
dec
dec
add
lcall
mov
adc
add
adc
out
dec
add
cmp
lods
incb
es
fadd
xor
dec
aas
mov
inc
repnz
loop
adc
add
pop
movsb
stos
dec
mov
std
lea
dec
or
xchg
in
add
mov
bnd
nop
mov
pop
add
loopne
mov
inc
cli
sahf
sarl
into
inc
sub
fwait
push
hlt
add
scas
sub
adc
sbb
mov
fmull
lods
test
mov
sub
dec
cmp
push
xchg
hlt
sbb
and
fdivrs
in
add
ret
add
hlt
lret
mov
cmpsb
xor
dec
mov
adc
jg
insb
push
push
loop
cmpl
repz
inc
pop
xchg
out
sbb
shrl
roll
xchg
insl
add
push
dec
add
sub
lahf
shll
jb
ret
pop
push
add
mov
push
movsb
or
faddl
fdivrs
jge
add
xor
adc
jne
inc
repnz
push
sbb
push
xlat
push
xor
ss
pop
cmp
mov
or
lret
sbb
or
add
sub
fisubrl
ret
outsl
jecxz
cmpl
add
jge
xor
lods
addr16
xor
add
pop
cmp
lds
sub
push
push
je
and
add
cli
pop
or
dec
daa
adc
and
pop
adc
add
repz
adc
popa
xchg
xor
nop
lock
outsl
fwait
add
cwtl
xlat
pop
jne
flds
xchg
in
adc
pop
mov
bound
sbb
and
fisubrl
mov
test
push
cltd
out
and
enter
testl
or
add
xchg
add
insl
inc
jne
je
add
lds
xor
out
pop
stos
mov
mov
jg
in
pop
jge
inc
add
xor
sbb
push
cmc
fsts
loop
pop
test
add
jle
adc
sub
lret
cmp
sub
mov
dec
ret
or
loop
xor
cld
loope
lret
mov
xor
inc
xor
rcr
popf
jmp
xchg
and
xchg
pop
es
cmp
sub
sub
push
adc
push
iret
dec
inc
cld
push
pusha
adc
lahf
jo
sub
push
mov
sbb
and
add
ja
dec
adc
jne
mov
jg
sbb
hlt
imul
arpl
xchg
add
fidivl
jnp
add
dec
loope
mov
dec
in
jb
pop
and
lret
add
movlhps
mov
jno
mov
negl
add
shrb
add
sbb
inc
jne
jmp
aaa
xchg
pushf
jb
gs
add
in
sbb
ud2
mov
and
push
aad
jle
adc
add
or
dec
cmpsl
daa
js
add
xchg
sbb
jb
bound
fwait
add
dec
mov
pop
cmp
out
mov
jns
sbb
adc
addl
xchg
xor
pop
sbb
mov
lahf
cmpsb
add
cs
mov
mov
into
mov
push
sahf
ds
lret
shr
test
lret
fbstp
add
xor
push
sti
mov
lock
add
cmp
ja
add
mov
adc
pop
add
stos
test
jp
xor
das
push
inc
xor
add
in
xchg
inc
push
movsb
mov
pop
inc
shll
rcll
mov
xchg
fucom
add
mov
xchg
mov
idivl
mov
inc
xor
inc
lret
sarl
cmp
add
mov
lret
pop
addl
sar
icebp
mov
sub
sbb
gs
loope
add
pop
and
sub
add
inc
mov
scas
pop
aas
faddl
int3
ja
orb
std
mov
pop
cmp
add
leave
push
jmp
xchg
or
xchg
js
push
roll
jno
mov
andl
inc
mov
xor
xchg
inc
adc
jg
sbb
incl
jbe
data16
or
lods
add
sbbl
dec
vucomisd
add
sbb
pushf
gs
repnz
add
mov
je
jmp
pusha
add
mov
rclb
jb
jne
mov
sbb
push
fnstcw
sub
lcall
clc
pop
jo
push
test
stos
mov
ss
push
pop
shlb
jmp
cmpsl
jae
aas
mov
dec
dec
inc
into
subb
clc
dec
in
loopne
add
dec
add
mov
xlat
call
push
mov
stos
adc
sarb
flds
mov
push
jmp
ja
pop
leave
xor
lcall
dec
subb
aas
add
jo
cltd
test
pop
push
pop
xchg
and
xor
jecxz
mov
fcmove
loop
mov
cmpb
push
xor
shll
fnstsw
dec
xchg
bswap
into
inc
mov
or
sbbb
dec
jae
add
shlb
lods
into
test
add
popf
in
add
lods
inc
repz
filds
popf
shll
loop
mov
int3
repz
sbb
push
insb
pop
add
or
pop
ret
in
fidivrl
add
in
jns
cmp
shll
stc
mov
add
sbb
add
jae
int3
lea
ret
adc
or
mov
inc
mov
add
ljmp
jne
insl
mov
call
ficompl
enter
xchg
lcall
into
jl
in
iret
movl
sbb
aas
adc
ss
mov
or
adc
scas
add
mov
imul
shlb
mov
iret
in
add
orb
mov
fld
lahf
xor
insl
sbb
mov
xor
add
push
daa
add
ret
jmp
xchg
cwtl
add
les
int3
divb
popa
cmp
mov
mov
push
ret
add
mov
dec
inc
add
inc
cmc
lock
hlt
dec
dec
sbb
mov
aas
ret
stc
dec
sbb
mov
jge
out
push
cli
movsb
ret
cmpl
push
enter
cld
subl
mov
leave
outsl
add
sbb
fsubs
rcr
lret
xor
add
mov
push
adc
es
add
sti
pop
and
add
hlt
push
cmc
xlat
gs
jnp
and
loope
pop
scas
mov
pop
inc
sbb
inc
sbb
int
ja
add
and
fistps
lcall
or
cmpl
je
mov
inc
sub
jno
fimuls
rcl
je
stc
add
sbb
cmp
std
fs
push
cli
xchg
cmp
mov
insl
cmpsb
cmp
mov
pop
pop
push
add
cmp
pop
inc
add
dec
or
xor
push
mov
cli
or
sbb
in
cmp
sub
lods
fimull
lret
incb
aas
inc
pop
test
add
sbb
xor
iret
dec
leave
and
cs
lds
xchg
xchg
sub
sbb
pop
fistps
rorb
mov
and
test
pop
xor
adc
inc
xchg
dec
push
sbb
mov
scas
add
mov
lock
movsl
aaa
aad
repz
push
push
js
add
hlt
imul
lret
mov
mov
jmp
add
pushf
mov
cltd
cmpsb
lds
add
jg
xlat
push
inc
stc
mov
fcompl
sbb
test
in
mov
add
outsl
pop
xor
jp
movsl
pop
sbb
dec
daa
js
mov
cltd
xor
stos
fdivs
roll
in
fisubs
bound
push
popf
sti
inc
loop
cli
sub
mulb
or
xor
sbbb
mov
fldt
sbb
leave
mov
add
sbb
add
in
xchg
bound
mov
fistpl
sub
pop
fcmovb
add
stc
push
daa
mov
movsb
inc
divb
mov
popa
mov
negl
mov
xor
shll
mov
fld1
ljmp
push
cmp
lock
mov
jbe
sbb
lea
mov
out
add
mov
aad
popa
dec
add
lcall
mov
cmpsb
xchg
sub
jg
push
subl
bound
cmpsl
out
add
xchg
test
jg
ror
stc
adc
or
jmp
mov
mov
mov
pop
adc
cltd
lods
insl
test
in
mov
out
rorl
jns
adc
ja
cmp
jg
and
add
mov
pop
add
enter
dec
jne
fstps
add
pusha
and
push
pop
add
push
sub
add
movsl
add
arpl
mov
xchg
cli
inc
jns
and
incl
mov
test
push
rorb
jb
xor
dec
sbb
add
mov
add
std
ljmp
pushf
test
add
mov
pop
incl
stos
or
int
inc
xchg
ss
mov
jb
cmp
sub
or
xlat
fcoml
and
in
pop
mov
add
imul
ja
aaa
jle
add
clc
jae
add
xor
mov
loopne
sub
mov
add
ret
out
ret
add
in
test
pushf
enter
std
dec
push
sbb
push
in
cmp
gs
mov
out
ja
ss
pop
sub
mov
fdivs
ljmp
lods
pop
add
andl
inc
jg
add
outsl
in
inc
push
enter
jnp
inc
jge
fisubs
aas
jecxz
add
mov
jl
adc
cmp
rcl
cs
and
sub
sub
in
inc
pusha
cli
mov
or
aaa
inc
sub
es
shl
ljmp
ss
je
arpl
scas
inc
int3
ret
lea
push
jecxz
stc
mov
add
xchg
icebp
sub
adc
test
clc
fmuls
shrl
add
mov
adc
sar
cmc
cs
sub
add
jbe
fisttps
jns
andl
outsb
subl
xchg
lret
loop
hlt
sti
loopne
mov
jb
fldl
sub
gs
lods
add
aas
lcall
pushf
lfs
add
add
mov
sahf
jo
fiadds
dec
mov
fists
mov
mov
add
mov
ljmp
clc
xchg
jp
ret
mov
mov
dec
cmp
fcoms
test
add
mov
add
arpl
jmp
out
repnz
or
mov
subb
add
mov
pop
sbb
xchg
mov
nop
sarl
add
mov
lar
inc
mov
stos
add
cmp
mov
rcrl
jae
dec
mov
mov
inc
out
imul
pop
bound
cltd
rclb
ret
add
cmpsl
rcrl
out
inc
add
outsb
mov
repnz
getsec
mov
fisubrl
jmp
imul
cmpsl
add
jp
xchg
sbb
lahf
mov
pop
lock
and
sub
out
mov
cmp
out
mov
aaa
xchg
add
icebp
test
push
add
jmp
jne
mov
pop
arpl
mov
and
mov
pop
xchg
into
pop
das
xchg
add
cwtl
mov
stos
in
cmp
inc
mov
sbbl
inc
sub
add
dec
das
cmp
fnsave
cli
dec
jb
and
lock
xchg
int3
loop
sbb
mov
sbb
jle
add
lahf
leave
pop
les
cs
repnz
jecxz
lea
cmp
lret
add
into
mov
xchg
in
or
cmp
fnsave
in
ret
dec
push
add
imull
cmp
dec
fsubs
fstps
mov
mov
clc
jl
mov
ret
cmp
sub
inc
jns
clc
mov
jl
add
and
mov
jmp
es
outsl
repz
in
sub
and
jge
in
add
lds
push
jl
mov
inc
dec
sbb
xor
into
pusha
insb
jb
mov
add
push
xchg
xchg
adc
cmp
push
and
add
outsb
xchg
sbb
movsb
inc
out
clc
add
ss
xor
jo
push
push
sub
jmp
and
inc
inc
mov
add
jae
lahf
add
jle
hlt
inc
and
sbb
add
icebp
inc
in
sub
inc
jl
dec
jno
cmpsb
call
movsb
and
shlb
add
jno
mov
jne
aaa
out
cmp
add
lcall
xlat
insl
jle
xor
test
icebp
jl
roll
mov
jnp
adc
sarb
ljmp
popa
push
mov
pop
jmp
dec
and
inc
push
inc
minps
aad
cmp
popf
sbbl
mov
loopne
push
inc
push
add
imul
inc
mov
fidivrl
aas
add
sbb
aad
add
lcall
adc
fidivrs
or
cmp
add
pushf
push
scas
shll
jb
or
incl
add
mov
mov
sbb
adcl
insb
shl
test
and
xchg
lea
movsl
enter
cmp
pop
loope
xchg
adc
in
jmp
add
stos
sub
dec
mov
sar
sarb
mov
fdivrl
or
add
ljmp
xor
sarb
fldt
jne
dec
loopne
cltd
mov
jmp
ds
into
fs
repnz
int
dec
pop
insl
mov
dec
xchg
and
dec
add
jno
push
in
and
sbb
xchg
xchg
and
cli
ficoml
sbb
inc
or
xor
movb
sub
mov
sbb
ds
mov
lock
jne
les
fs
add
fcmovne
or
fdivrl
xchg
mov
cmp
sub
rclb
cmp
hlt
mov
or
cmp
xchg
or
mov
leave
out
outsl
popf
movsl
lds
jp
pop
or
ja
cmp
push
add
int3
push
fprem1
xor
lret
push
xchg
push
adc
mov
jnp
and
hlt
xor
mov
add
xchg
pop
lcall
ljmp
dec
stc
cmp
sub
cmp
mov
add
adc
dec
or
repz
fcmovnbe
add
cmp
jbe
xchg
stos
repnz
mov
mov
cmpsb
jb
and
les
add
imul
jle
hlt
dec
movsl
sub
adc
jg
rcl
mov
lahf
adc
xor
inc
xchg
stos
xchg
push
movsb
lret
outsl
cmp
add
lahf
xor
les
and
add
and
js
add
jp
jg
mov
notb
movl
pop
cld
jle
add
and
pop
xchg
clc
cmp
jne
push
inc
scas
fimuls
js
jmp
int
rorl
fisttpl
mov
sbb
pop
leave
add
adc
jp
dec
pop
jo
jb
sub
or
inc
pop
add
daa
loop
outsl
xchg
subb
cwtl
lret
ret
jp
testb
std
push
lret
push
mov
insl
shl
dec
dec
or
cmp
cmp
jns
jg
add
divb
mov
aaa
jp
jecxz
xor
add
and
decb
roll
mov
mov
jb
inc
mov
add
lcall
inc
inc
call
je
jg
mov
add
inc
push
aad
cli
xor
test
sahf
mov
mov
lods
pop
add
int
xchg
sbb
adc
test
and
insb
add
je
inc
add
inc
icebp
mov
outsl
pop
call
mov
lahf
pop
cwtl
mov
addl
add
xor
xchg
or
xchg
pop
ret
fnstsw
decl
outsl
mov
daa
leave
jle
pop
xchg
adc
push
sbb
xor
call
addb
sbb
jg
jno
das
stos
and
jp
outsb
xchg
jle
sbb
jle
lods
mov
popa
and
imul
cs
pop
inc
mov
push
cmp
sahf
jge
adc
jns
shll
mulb
in
and
mov
adc
filds
push
in
sub
lds
fisubrl
test
test
mov
mov
add
xor
mov
jne
xor
pop
pop
jecxz
aad
dec
and
sub
cmp
pusha
inc
cmp
cmp
sub
xchg
sub
imul
and
out
add
mov
ss
jo
push
lea
add
push
shrl
mov
lahf
test
popa
inc
add
sbb
cltd
lret
mov
stos
pop
mov
mov
cmp
std
movsl
movsb
sbb
and
mov
mov
sub
mov
loop
je
in
add
or
adc
clc
lret
adc
cltd
addb
cmp
add
mov
cmp
out
and
dec
add
or
add
jle
lock
inc
in
push
inc
scas
push
sahf
xor
jae
test
add
jle
mov
loop
add
cmpsb
movsl
and
add
cli
cld
jl
jno
test
cltd
add
cmpsb
add
pop
xchg
cwtl
fdivrs
sbb
mov
sub
pop
mov
sub
das
sub
sbb
fidivrs
or
cmc
inc
repnz
ja
sub
mov
sbbb
xor
add
cmp
fbstp
shrb
sub
mov
rcr
sbb
dec
or
push
xchg
pop
add
cwtl
cmpb
pop
fstps
cmp
cmp
add
inc
push
incb
shlb
push
sahf
sbb
sub
add
daa
xor
push
into
jge
shr
xchg
cmp
add
mov
addr16
addl
imul
insb
xchg
sbb
sbb
in
push
fildl
jl
rolb
imul
pusha
loope
out
and
pop
add
inc
jbe
dec
loop
sub
mov
pop
add
pop
in
add
sbb
sbb
mov
sub
fucom
into
and
inc
inc
hlt
pop
jmp
add
mov
loop
arpl
or
cmp
js
daa
outsl
bound
sarl
mov
inc
mov
ds
dec
out
cwtl
notl
cmp
shl
sbb
add
addr16
insb
dec
lock
xor
pop
pushf
add
sti
cmp
cltd
xchg
pop
in
add
js
mov
sub
xor
cmp
add
inc
dec
mov
cmpsb
into
in
and
lcall
or
std
sbb
lods
xchg
add
xchg
lret
imul
pushf
push
adc
divl
inc
mov
xor
bound
adc
loop
mov
shlb
aad
mov
add
push
lock
divb
popf
mov
or
leave
daa
pop
xor
popa
lahf
inc
add
push
fwait
jecxz
xchg
roll
arpl
divb
add
jle
dec
and
mov
mov
call
xor
fnstenv
inc
pop
outsl
fstl
sarb
xor
mov
aaa
addr16
mov
rol
pop
add
add
xchg
out
mov
ss
add
sub
mov
adc
lods
lds
outsl
jecxz
shlb
mov
ret
fcmovnb
mov
push
push
faddl
lock
cmc
ret
cmp
add
mov
flds
mov
pop
int3
hlt
subb
add
xchg
xor
cmp
data16
jg
scas
dec
cmc
cmpsb
adc
arpl
xchg
push
sarb
das
inc
call
test
aam
inc
mov
add
or
mov
ret
fstpt
pop
and
daa
es
lret
aaa
xlat
cmp
rolb
inc
repnz
std
sub
xor
lods
sbb
popl
stos
inc
lret
jns
sub
loop
cmp
sub
or
mov
insb
add
into
mov
mov
sbb
xchg
inc
add
push
popf
or
cwtl
add
filds
mov
inc
xor
xchg
rcl
push
loope
data16
sbb
cmp
mov
lea
les
inc
add
mov
rcr
pop
test
int
iret
rol
pushf
sub
add
mov
pusha
inc
leave
add
sarl
addr16
mov
xor
mov
aad
fs
out
int3
shrl
ret
mov
cmpsl
and
nop
sbb
jmp
out
push
sub
out
add
retw
filds
movsl
mov
adc
or
mov
gs
sub
sub
push
sarb
pop
adc
fdivrl
test
cmc
add
mov
lds
clc
sub
call
inc
and
mov
cs
adc
add
jne
pop
xor
cmp
adc
add
loope
fistpll
jb
xor
leave
in
rclb
orl
shl
enterw
nop
push
mov
andb
adc
jecxz
std
push
xor
dec
js
mov
push
lahf
push
xchg
cmp
and
inc
cmp
mov
pop
xchg
add
sahf
cmpsl
add
dec
cmp
push
inc
loop
pop
adc
loope,pn
repnz
add
shl
mov
dec
iret
arpl
xor
adc
leave
add
sarl
mov
std
or
aaa
add
sbb
inc
xor
adc
dec
or
or
lock
add
int
fisubl
lea
sbb
jae
testl
adc
daa
ljmp
scas
movsl
iret
pop
jle
mov
mov
add
cmp
js
notb
lahf
sbb
mov
adc
or
inc
push
dec
add
jge
cs
fiaddl
clc
mov
cmpsl
insl
inc
rcrb
jo
xchg
mov
fsubs
jb
add
les
add
rcrb
adc
add
sti
addr16
in
sbb
cmp
pop
mov
add
cwtl
pop
and
jp
mov
pop
std
mov
sub
in
adc
cmp
jmp
das
hlt
jp
cmp
pop
clc
dec
adc
add
sub
push
mov
sbb
imul
and
pop
incb
dec
inc
add
das
rorl
movl
bndldx
dec
ror
push
push
in
andl
sbb
pushf
addr16
fldl
mov
add
mov
push
inc
add
lods
stc
sub
pop
or
rclb
out
jmp
jge
push
add
pop
ror
xor
and
in
add
pushf
pop
shl
mov
test
push
sub
shlb
fnstcw
mov
sbb
in
cmpsb
iret
xchg
rclb
add
hlt
fists
mov
mov
sti
pop
pop
dec
lret
sbb
jge
add
pop
adc
cltd
jecxz
negl
loop
xchg
add
stc
fnstenv
xchg
loopne
sub
je
inc
faddp
jo
xor
les
xchg
imul
cmp
or
mov
or
mov
sti
sub
outsb
sbb
cwtl
inc
xor
mov
lea
add
scas
insl
filds
inc
sahf
push
pop
jb
and
fdivrs
xchg
dec
js
add
mov
or
mov
push
push
mov
dec
mov
imul
inc
insl
les
rolb
or
add
jl
push
imul
adc
decb
dec
jbe
jnp
sbb
and
mov
fisubrs
les
cmp
push
add
iret
xor
and
enter
nop
ds
clc
ret
pop
xchg
mov
or
add
sti
xchg
dec
cli
ss
pop
add
outsl
clc
out
sbb
jnp
insb
jge
fs
movsl
add
cmc
xor
ret
cltd
sbb
iret
jecxz
xor
jecxz
push
push
inc
stos
loop
pusha
int
dec
cmp
lret
dec
mov
inc
lcall
dec
push
add
cmpsb
popa
cmpsl
inc
inc
divl
cmp
orb
xlat
add
test
mov
jmp
and
rorb
sbbb
sub
mov
sahf
inc
pop
xor
xor
cmp
add
add
jnp
sbb
les
ret
sbb
fnstenv
or
shll
adc
cmc
adc
lds
pop
jle
shrb
sub
fnstsw
pop
ret
jmp
pop
leave
mov
es
jb
xor
jmp
lea
jbe
jge
aam
adc
xchg
test
sahf
adc
or
sbb
mov
mov
int
scas
mov
lods
jns
cmp
mov
ss
in
xchg
and
push
or
daa
and
popa
xchg
xor
inc
xchg
adc
inc
dec
ja
mov
loopne
cmp
dec
outsl
xor
and
jle
pusha
jge
mov
out
xor
xor
aad
push
mov
fistpll
xlat
xlat
out
inc
lock
cmp
lret
int3
lock
sub
and
inc
xchg
pop
daa
or
mov
sbb
leave
sbb
or
vandps
je
sub
jp
bound
or
xor
fwait
lret
or
add
gs
fidivs
enter
adc
push
xchg
or
pop
in
scas
mov
movsb
push
xor
xor
sbb
push
movsl
call
ret
loope
rcll
je
pop
bound
lcall
fstl
cmpl
push
and
movsl
loop
lret
cmp
inc
nop
sbb
inc
sbb
js
fstpt
xchg
pop
pop
add
test
push
arpl
fidivrs
aas
out
leave
jl
pop
inc
jne
mov
ss
jne
mov
add
loopne
xorb
es
pop
test
cmp
mov
mov
hlt
pusha
sbb
gs
xlat
adc
or
loope
push
pop
adc
leave
test
inc
rcrl
cmp
cs
in
sub
jp
add
mov
sub
mov
jp
loop
mov
sarb
jo
pusha
outsl
mov
fstl
sbb
shrb
out
pop
enter
adc
mov
and
or
xor
mov
inc
pop
jl
lret
loope
in
cltd
adc
push
and
dec
insb
inc
dec
scas
add
adc
test
pop
adc
adc
test
push
lods
push
cmp
sbb
mov
loope
sbb
scas
pop
aad
jp
icebp
or
jbe
or
push
and
cs
movsb
cli
adc
xor
mov
adc
addr16
mov
int3
jns
leave
jbe
add
adc
push
mov
out
adc
xor
pop
sub
jp
outsb
out
jne
xor
ljmp
mov
mov
inc
jne
adc
jl
stos
sub
lahf
and
in
movsb
sbb
test
mov
pop
ret
adc
repz
inc
mov
rol
imul
rcll
pop
dec
add
inc
push
xchg
adc
loope
add
outsb
cmp
mov
inc
sbb
popf
aad
add
jae
js
xchg
pop
mov
cltd
push
jmp
and
xchg
jmp
inc
add
and
fwait
cwtl
xor
inc
mov
and
mov
dec
jle
rol
sbb
mov
xor
inc
fsubrs
inc
lds
jge
push
pop
adc
mov
push
imul
xchg
sbb
and
adc
enter
and
push
add
xor
pop
sbb
xlat
shl
sub
out
push
mov
push
inc
mov
mov
sub
mov
andb
mov
shll
jo,pn
and
or
subb
out
cltd
adc
loope
mov
mov
mov
pop
sbb
push
add
xchg
into
and
cmp
adc
or
je
inc
sbb
mov
mov
test
loop
imul
mov
leave
adc
nop
into
adc
adc
mov
cmc
out
push
fs
ljmp
sbb
and
jae
nop
lock
je
movsb
or
repz
jnp
cmp
arpl
mov
cmpsb
fmuls
sbbb
cmp
sub
mov
adc
icebp
push
pop
cmpsb
cmp
push
roll
ds
inc
adc
cmp
out
jae
push
es
ret
bound
cmp
or
and
pop
in
in
mov
cmp
xor
mov
push
inc
adc
xor
scas
mov
mov
aam
int3
mov
xchg
xor
push
jne
push
adc
mov
icebp
mov
outsb
int3
adc
jb
inc
sub
in
into
aas
hlt
inc
add
add
mov
xlat
jge
xor
adc
mov
sbb
in
fiaddl
divl
xchg
jb
xchg
adc
mov
repnz
cmp
adc
add
clc
inc
adc
sub
xrelease
dec
flds
cmpsb
cmp
arpl
cmc
xchg
jecxz
jb
hlt
mov
mov
add
loopw
sbb
adc
xor
xor
add
inc
lds
push
and
inc
mov
dec
dec
or
add
xor
push
sbb
push
shl
popa
xchg
cli
mov
xchg
lock
nop
add
jo
cld
add
popa
cli
dec
sbb
add
xor
inc
and
gs
inc
add
adc
mov
lods
add
xor
xchg
out
ret
mov
and
xor
test
add
lds
or
jnp
cmp
add
push
es
fstpl
push
mov
dec
fs
stos
test
inc
sahf
add
cmp
orl
imull
add
adc
mov
ret
es
lret
sbb
std
mov
push
sub
and
stc
cltd
inc
jecxz
push
jge
add
cld
mov
jno
mov
lock
test
add
iret
dec
testl
xor
fld
mov
ss
jmp
cmpsl
pop
test
sar
pop
jge
or
mov
in
int3
fcoms
mov
and
sbb
mov
inc
sti
or
dec
mov
add
test
pushf
repz
jns
imul
test
xor
cmp
mov
loop
aam
pop
in
daa
xor
mov
mov
mov
mov
dec
add
adc
lret
xchg
in
mov
inc
aaa
test
sbb
xchg
adc
add
add
js
xchg
inc
push
and
int
mov
xor
push
mov
inc
vpxor
aam
aas
stos
jns
aaa
loop
mov
and
inc
icebp
add
push
popl
in
outsb
cli
mov
ss
inc
mov
pop
imul
rcrl
inc
fistpl
and
cmc
inc
stc
sub
insb
push
dec
add
testb
fistpll
cmp
and
dec
lret
push
add
sarb
mov
add
aas
shll
xchg
cmp
out
and
push
xchg
mov
ss
add
orl
sub
xchg
ret
popf
xor
sub
scas
push
xchg
les
js
add
cltd
xchg
loope
xor
out
jl
fwait
push
mov
add
cmc
jns
mov
dec
mov
cmpsb
mov
outsb
clc
add
add
fwait
add
mov
dec
scas
add
rcrl
inc
sti
in
push
add
test
add
pop
imul
add
push
out
addb
dec
xor
cld
ror
cmp
inc
imul
insb
sub
lret
test
xchg
add
enter
jb
xchg
dec
out
imul
cld
mov
jecxz
pop
sti
sbb
in
xchg
dec
into
jmp
cmpb
stc
inc
mov
call
scas
jecxz
loope
addl
or
or
jo
in
pop
add
je
nop
into
dec
daa
or
leave
and
frstor
rcr
dec
inc
icebp
rclb
lcall
and
mov
xor
pop
jb
pop
in
pop
sar
lret
int3
mov
adc
int
jns
mov
adc
xlat
sub
or
orb
push
add
imul
add
add
aam
ds
jge
or
pop
shlb
adc
push
daa
cmp
sub
mov
mov
dec
or
add
lret
xchg
scas
jns
add
rcr
dec
cmp
out
xor
pop
roll
jmp
ret
push
cs
add
cmp
in
add
mov
cmp
inc
cmpsl
sbb
pop
push
int3
test
mov
rol
outsl
or
mov
daa
scas
int
out
fildl
and
das
rcrl
scas
adc
inc
sub
fnstenv
test
adc
imul
dec
loop
dec
jle
aas
pop
sub
jbe
mov
lock
add
rclb
call
enter
lods
arpl
mov
lods
inc
inc
add
ret
pop
inc
sbb
std
sub
cli
and
push
xchg
jbe
dec
add
popf
imul
mov
cmp
cmp
push
rclb
insb
fsubr
cs
orb
adc
jbe
add
fnstsw
imul
add
movsl
sbb
add
dec
inc
mov
decl
out
xchg
xorb
mov
jns
push
pop
mov
mov
daa
sub
push
ret
fdivs
loope
cmp
cmp
add
sbb
add
xor
popa
fnsave
ret
add
das
mov
arpl
mov
pop
add
fbld
call
iret
sbb
adc
and
jge
cmp
cld
mov
arpl
adc
jle
xchg
sub
jo
pusha
mov
jl
sub
shll
xor
testl
arpl
mov
popa
clc
mov
fiaddl
aas
push
adc
repz
inc
in
data16
sarb
iret
int
add
ss
sub
cmpsl
push
loopne
push
mov
xor
add
jns
dec
addr16
js
add
outsl
jnp
pop
inc
xchg
lcall
mov
cmp
and
inc
xchg
inc
insl
xchg
sub
inc
add
jl
push
add
fidivrs
add
inc
jb
dec
pushw
movsl
sarb
std
imul
xor
cli
rol
sti
dec
out
xor
out
outsl
cmp
mov
rorl
add
into
dec
je
call
mov
enter
pop
lea
pop
push
sub
int3
subb
jbe
jae
data16
hlt
shlb
jns
push
add
imul
in
dec
ret
push
mov
sub
or
test
dec
sub
lret
add
jmp
loop
add
lock
cmp
add
sbbl
popa
pusha
fs
icebp
sub
js
mov
add
sbb
jno
push
daa
popf
in
pop
outsl
add
jmp
fcom
push
popf
inc
cmp
push
add
sub
movsb
aas
cli
mov
stc
add
lock
out
ret
sbb
adc
idivb
scas
sub
test
cli
lds
jp
inc
jg
xlat
sbb
jg
stos
push
addb
iret
sbb
aam
testb
ret
add
add
and
add
dec
movsb
out
add
add
aam
add
xlat
jnp
add
adc
xchg
push
jge
mov
cmpsb
add
sti
cli
or
cmp
fbstp
aad
jae
add
divl
fidivs
sub
add
mov
jl
cmp
hlt
sti
adc
mov
ss
rorl
aaa
cmp
ficomps
insb
lret
mov
int
cmp
add
cmpsl
jnp
xchg
add
leave
adc
push
sub
mov
jo
rcrl
dec
xchg
add
in
xchg
mov
lods
cli
loop
xlat
add
gs
scas
loope
clc
add
xor
outsl
ds
push
sub
popa
push
in
dec
pop
cmp
pop
add
les
dec
dec
push
xor
pop
imul
clc
add
xlat
dec
cmp
ret
repz
sbb
add
shlb
mov
add
jo
scas
push
negl
rclb
sub
inc
inc
test
mov
cmp
add
popa
in
fnstsw
ds
push
adc
lret
add
fmuls
out
sub
scas
fistps
sbb
aaa
ds
mov
add
adc
insb
add
jl
out
cmp
enter
outsl
inc
or
test
jae
or
inc
adc
add
imul
movsl
sbb
add
clc
xchg
jmp
hlt
fwait
cmp
add
push
add
jno
cld
es
push
fisttpll
mov
shll
fisubl
iret
mov
push
xchg
cmp
push
dec
ja
dec
fs
and
repz
jecxz
push
in
add
ja
mov
inc
shrl
dec
cltd
sbb
jp
stc
add
mov
std
xchg
add
xchg
orb
cmp
fs
fcmove
das
add
pop
jns
pop
or
and
mov
ljmp
add
add
pop
fcoms
ss
rcll
pop
xchg
mov
mov
add
sarb
xor
jo
ret
sti
in
sub
hlt
and
add
xor
dec
add
das
jl
add
subl
cmpsb
mov
and
call
xchg
add
ljmp
dec
xor
mov
mov
jecxz
push
sub
arpl
popf
mov
test
pop
aaa
cmp
out
add
push
and
in
dec
add
push
cmp
xor
lahf
ret
pusha
xchg
inc
call
xor
or
testb
rcrl
fwait
out
shl
lea
mov
pop
add
cmp
in
xchg
into
repz
xor
jmp
cmp
add
add
lds
lods
cld
add
mov
mov
xor
shrb
cmp
add
ret
jo
cmpsl
rol
dec
iret
fidivs
mov
popf
jno
xlat
test
pop
fidivrs
int3
jle
jo
mov
xchg
daa
add
pop
inc
push
cmp
ss
xor
ror
stos
inc
icebp
adc
popa
shll
cmp
bound
lret
sbb
xor
push
std
imul
test
sub
jnp
mov
out
pop
and
push
sbb
cmp
adc
movsl
les
sbb
push
xchg
sub
repz
add
xchg
sahf
sub
in
scas
mov
js
or
dec
inc
outsl
cmp
out
add
add
dec
fisubrl
inc
add
add
push
pop
cmp
cmp
and
leave
pop
add
shll
push
xlat
mov
jnp
cmp
add
mulb
scas
add
dec
xchg
rorl
pushf
ret
inc
adc
pop
xor
outsb
push
xchg
xor
push
stc
ljmp
pop
mov
add
mov
sbb
add
sub
enter
call
push
adc
mov
movb
xchg
xchg
mov
jo
inc
dec
add
push
ret
loopne
push
push
cmp
pop
pop
push
ret
jne
out
dec
push
insl
outsb
dec
aaa
xchg
out
add
pop
les
or
stos
push
popa
mov
add
mov
jmp
test
sbb
sar
loop
mov
ret
fwait
add
adc
sub
or
dec
inc
xchg
mov
in
sub
sub
or
jne
pop
or
mov
inc
pop
enter
cmp
dec
add
dec
push
gs
mov
inc
fwait
lds
xor
jb
push
jns
shrb
sbb
add
jmp
test
popa
mov
icebp
lahf
mov
dec
mov
xor
cmp
and
in
outsb
dec
or
mov
mov
jns
sub
add
call
cmp
pop
stos
add
mov
mov
movq
dec
inc
mov
cmp
enter
or
scas
rol
daa
test
out
add
and
clc
mov
pop
popf
pop
add
nop
loopne
pop
sub
popf
cwtl
add
cmp
pop
add
out
inc
outsl
push
cli
pop
add
rcll
xor
inc
imul
dec
sbb
insl
repz
and
mov
mov
sbb
cmpsb
fcmove
nop
add
adc
test
mov
pop
cld
xor
sahf
pop
add
jbe
add
imul
xlat
fwait
shll
pop
jb
cmp
popa
pop
inc
or
mov
arpl
jne
add
add
lock
in
aad
stc
cmp
sub
or
add
lahf
sub
testb
mov
dec
das
mov
sub
sub
rcrl
jle
or
loopne
cmp
xchg
orb
sub
sub
lcall
fwait
and
cmp
cwtl
add
pop
pop
bound
mov
inc
test
ljmp
cltd
lcall
roll
push
sbb
jmp
sub
test
and
adc
lock
ljmp
mov
shrl
xchg
sti
xor
rorl
shrb
cmp
mov
pop
mov
jno
cmp
cld
xchg
push
add
rclb
lods
adc
and
xchg
roll
sbb
add
das
adc
xor
mov
sbb
popf
sbb
ror
arpl
aaa
testb
add
test
cmp
push
xor
xor
rcrb
or
add
sub
faddl
jo
sub
add
insb
jecxz
dec
mov
sbb
cmp
sti
cld
add
push
push
add
cmc
bound
xor
push
adc
add
out
cmpl
fcmovb
mov
mov
xor
fucomi
push
add
cmp
aad
add
sbb
fcoms
jle
pop
add
data16
and
lods
jne
xor
fs
mov
lds
xchg
push
repnz
in
lahf
stc
out
orl
cmp
pop
xorl
lods
adc
xchg
push
push
lods
add
and
ret
fwait
stmxcsr
fidivrs
sub
add
sub
sahf
jb
in
add
cmp
cmp
mov
mov
scas
data16
mov
movsb
fidivrs
add
or
out
jae
sbb
jle
dec
add
add
rcl
xchg
sub
adc
outsl
or
hlt
and
mov
adc
adc
int3
xor
jg
or
sub
mov
addr16
sbb
ret
add
xchg
jo
cmp
inc
or
inc
inc
call
cld
in
hlt
test
lcall
sarb
pop
mov
push
inc
rclb
inc
in
movsb
or
ror
cmpsl
loopne
mov
mov
sub
repnz
jnp
aas
and
mov
pop
mov
scas
jno
stc
cmp
pop
add
in
leave
in
dec
add
pop
push
test
add
iret
bound
adc
aas
stc
inc
push
ljmp
sarl
push
out
dec
test
popa
lods
insb
pop
data16
mov
imul
pushf
pop
fimuls
sub
popf
add
clc
cmp
inc
test
jg
and
pop
les
sub
rcrb
sti
cli
ret
mov
insb
inc
mov
rcrb
loopne
mov
sub
add
push
cmp
adc
jae
enter
insb
or
sbb
cmp
mov
lret
or
popf
dec
gs
add
jle
sarb
lds
lods
mov
pusha
pop
adc
push
pop
popf
inc
sbb
scas
aas
fstps
add
add
push
pop
rcrl
lods
test
test
mov
or
sub
movsl
fnstcw
movb
jmp
pop
xchg
repz
lret
cwtl
jne
or
push
inc
xor
daa
leave
scas
add
jle
push
add
push
dec
mov
test
add
xchg
aam
pop
add
popf
loope
mov
mov
lods
xchg
test
outsl
cmp
xor
cs
fwait
popf
and
shll
lahf
out
lret
repnz
add
xchg
cmp
stos
push
cmp
test
adc
cltd
adc
cmp
fcmovne
mov
sahf
nop
or
inc
pop
sbb
shll
lcall
jmp
cmp
es
lea
imul
add
ror
jb
shl
mov
lahf
jmp
dec
xchg
addr16
ret
xchg
mov
fwait
add
scas
mov
insb
cmp
pop
xlat
mov
add
or
add
fmul
and
push
add
mov
xlat
add
sub
sub
push
mul
and
xchg
push
jns
add
popa
sbb
push
test
sub
insb
dec
pushf
pop
ds
or
mov
sbb
or
rorb
adc
or
inc
mov
ret
sti
call
repnz
push
xchg
or
xchg
jo
stc
push
and
cmp
je
add
xor
pop
jle
pop
add
ror
aad
mov
pushf
ret
in
std
push
cmp
dec
dec
push
loopne
lret
and
sbb
in
xchg
mov
aas
xor
jo
rolb
xchg
cmp
cld
push
mov
push
mov
push
test
fisubl
testl
xchg
fistpl
lret
out
cs
xchg
adc
push
les
adc
sub
sub
inc
fisttps
mov
cmc
add
add
push
jg
cs
outsl
call
inc
pop
loopne
movsl
pop
jae
ds
cli
inc
sub
mov
test
psllq
cmp
jmp
adc
sbb
push
rorl
adc
shld
mov
add
or
inc
xchg
fdivr
cmpsb
add
shll
cltd
add
xchg
sub
or
ds
push
mov
mov
mov
or
and
jnp
loopne
mov
xor
test
mov
adc
les
dec
sbb
sbb
inc
cmpl
call
dec
data16
pushf
scas
fwait
cmpl
les
aad
and
mov
outsl
sbb
add
es
iret
jge
mov
push
mov
sbb
dec
mov
roll
dec
add
cmc
push
out
hlt
push
adc
mov
std
ss
dec
or
or
cmp
xor
ret
scas
jle
xchg
add
gs
out
push
jg
xchg
xor
xchg
jb
les
fistpl
fucomp
stc
ja
notb
std
sbb
decb
in
test
push
or
lods
mov
es
cmp
and
xchg
xor
test
scas
ljmp
or
les
cmp
shrl
test
stos
sub
mov
in
add
xor
icebp
arpl
imul
jns
jp
or
daa
dec
xchg
sbb
jg
sti
push
popa
addl
xchg
in
mov
xlat
mov
xchg
cmc
outsb
mov
push
mov
leave
fildll
test
ds
cmp
mov
and
inc
cmp
xchg
jno
lret
loopne
pop
adc
mov
mov
cli
adc
test
into
adcb
pop
mov
lock
leave
in
aad
xor
and
mov
cmpsb
add
lods
xchg
adc
stos
mov
jl
pop
das
push
xchg
nop
fsubl
sbb
outsl
or
outsl
mov
mov
push
jp
or
add
scas
push
addr16
dec
nop
loop
in
sub
int
imul
dec
stos
or
std
cmc
mov
out
in
adc
cs
jmp
sbb
xchg
mov
int
or
jg
fstl
push
iret
rcrl
popa
add
adc
addr16
in
xchg
mov
clc
jae
or
cmp
out
in
std
les
xor
inc
movsl
and
mov
sarb
mov
fisttpll
push
jg
sbb
push
shr
imul
les
mov
add
stos
fcmove
cmp
mov
imul
lahf
es
add
gs
movsb
jle
lret
lds
dec
pop
ss
sub
imul
rcrb
xchg
lea
arpl
mov
scas
prefetchnta
jp
cmpsb
lahf
inc
enter
mov
cli
mov
rclb
mov
testl
or
sbb
insb
cmpsb
sub
pushf
iret
or
xchg
loop
or
inc
andb
int
mov
or
leave
outsb
jo
jnp
aad
cmpsb
les
hlt
jmp
test
push
in
sahf
leave
sbb
imul
add
push
mov
test
cmp
incb
mov
adc
push
or
jp
cld
out
aas
mov
pop
inc
push
xlat
sti
pop
sub
ret
mov
dec
push
std
adc
gs
bound
ja
imul
les
jl
adc
sbb
shll
jmp
mov
mov
mov
arpl
ret
adc
push
add
outsl
insl
push
and
cmp
adc
loop
loop
rorl
dec
xchg
sbb
ds
sbb
push
jne
fildll
fisubs
add
jp
sbb
loopne
aas
push
push
push
das
int
jp
mov
loop
or
cmp
adc
xor
movsb
jo
sbb
sub
mov
push
iret
lret
dec
adc
push
mov
popf
push
in
out
pop
adc
jp
push
or
lods
addr16
js
clc
out
xcrypt-cfb
cmpsl
and
pop
xor
jle
and
aaa
xor
out
inc
or
movsb
cld
lock
or
sbb
into
cmp
mov
add
push
es
cmpsl
loop
or
outsb
pushf
push
adc
roll
inc
mov
repz
pop
lcall
test
out
sub
and
xlat
pusha
gs
enter
and
push
in
jmp
cmp
outsb
arpl
or
adc
adc
xor
mov
nop
jns
test
leave
scas
lcall
add
mov
sub
jp
sub
cltd
daa
xlat
jno
or
test
mov
adc
fstpt
xchg
sub
or
insb
shl
jp
or
mov
idivl
out
std
xchg
gs
out
jnp
xchg
and
xchg
sub
mov
jp
xchg
and
push
pop
xor
and
sub
xchg
push
add
xchg
sbb
add
jne
dec
or
inc
fldcw
out
xor
add
shll
ja
inc
add
dec
int3
mov
nop
fadd
cmp
rolb
mov
add
mov
scas
jmp
adc
inc
cmp
lods
jle
popa
add
int3
sub
inc
cmpps
arpl
add
push
jbe
mov
movl
cmp
push
fprem1
clc
mov
scas
ret
inc
cld
enter
jl
insl
cmp
inc
add
ja
jb
ret
inc
shl
xchg
sub
xor
add
int
in
mov
pop
lea
sbb
andb
dec
push
cmpsb
mov
repz
lahf
jb
cli
add
adc
ja
sarl
dec
nop
xor
aaa
mov
mov
jg
add
cs
add
in
arpl
jle
adc
mov
in
and
fsubr
test
movb
popa
or
add
push
clc
xor
xor
mov
and
cmp
add
stos
lds
mov
pop
mov
add
test
xor
repz
jno
ficompl
push
insb
inc
and
push
rolb
addb
push
cmp
rorb
shl
stos
in
and
adc
dec
mov
out
es
into
lods
icebp
popa
push
mov
push
mov
scas
xchg
add
js
adc
dec
jmp
adc
cmp
mov
adc
shll
ss
lahf
and
cld
loopne
xchg
ljmp
jecxz
and
enter
test
dec
inc
clc
and
push
mov
gs
jb
pop
sar
add
fstps
gs
xlat
pushf
aad
notb
jecxz
shll
les
add
mov
dec
fnstcw
cld
mul
add
add
add
push
sahf
imul
fwait
mov
add
je
mov
ret
xchg
lahf
pop
jo
xchg
and
cmpsb
movsl
fistpll
lret
into
scas
adc
pop
mov
sarl
pop
aam
dec
aaa
mov
sub
mov
push
lods
ss
lock
sar
pop
jge
add
xchg
nopl
push
enter
clc
aam
add
std
and
in
add
xorl
stc
cmp
jl
xchg
rcll
sub
shll
or
outsl
dec
shrb
into
ljmp
inc
cltd
dec
mov
sub
imul
mov
adc
mov
cltd
inc
or
adc
pop
push
sahf
orl
loope
fiaddl
in
popa
mov
add
repz
lret
jnp
mov
or
mov
push
lcall
mov
lock
das
add
icebp
dec
xorb
nop
popf
inc
cmpsb
and
mov
mov
out
add
mov
sub
out
ret
mov
cmc
fstl
xchg
add
nop
adc
jmp
mov
adc
out
add
mov
push
cmpsb
inc
xor
jecxz
adc
ror
pop
inc
add
push
jle
jbe
fldenv
adc
jns
stos
ss
cmp
lret
and
outsl
add
imul
mov
or
and
add
mov
insl
adc
sub
dec
xor
rolb
lcall
mov
add
xorl
insl
popf
push
stos
inc
test
icebp
and
in
sarl
lods
std
xchg
add
filds
pop
adc
ud2
es
add
sbb
push
and
mov
dec
cmpsl
cmp
rcrb
iret
add
test
pop
xchg
xor
or
test
mov
inc
mov
enter
imul
xchg
pop
popa
testb
adc
ret
sub
dec
ret
jmp
sub
fidivl
insl
das
hlt
xchg
fbstp
shrb
cmp
push
fwait
or
jge
xor
add
xor
dec
add
cwtl
or
sub
mov
cmp
adc
int
cmp
inc
sbb
in
out
add
movsl
cmpsl
scas
inc
jmp
add
and
adc
loop
pusha
mov
push
std
add
mov
mov
popf
das
sub
rcrb
ds
test
adc
jb
stos
inc
adc
or
push
xorb
and
or
stos
roll
ljmp
faddl
cmp
jl
int
mov
jg
adc
jmp
pop
push
cmp
mov
adc
ficomps
aam
cmc
lret
into
pop
stos
sbb
add
xchg
out
and
iret
add
lea
incl
aaa
dec
xor
push
and
in
ds
pop
mov
add
and
pop
inc
lods
loopne
pop
mov
stos
add
test
ret
sub
cmp
data16
add
xchg
bound
dec
testb
cmpb
adc
imul
fmull
inc
jp
inc
loope
addl
out
cmpb
pop
add
pop
stos
fsubrl
test
add
inc
mov
ficomps
inc
add
mov
rclb
jge
or
rol
mov
adc
cmp
adc
loopne
adc
shl
pop
outsb
adc
inc
stc
jmp
iret
rorb
outsl
cmp
fldl
mov
add
adc
jl
pop
add
aad
mov
in
insl
add
imul
pop
and
sub
sub
xchg
sahf
imul
jns
loope
xlat
xchg
push
lcall
mov
nop
dec
xor
sbb
adc
pop
cli
add
mov
pusha
mov
and
xchg
inc
fmul
out
xchg
and
lds
inc
dec
cli
add
pushf
fwait
dec
andl
add
ret
test
dec
push
fiadds
pop
and
rolb
mov
pushf
or
dec
and
jp
xchg
dec
add
movsb
int3
and
xlat
dec
shr
xchg
repz
pop
cli
push
loope
lock
nop
sub
or
add
add
pop
fcomip
cwtl
mov
push
inc
sub
adc
sbb
dec
inc
std
pop
jmp
jnp
pop
cmp
stc
into
adc
arpl
insl
and
jnp
lret
or
pop
cld
add
cmp
fldenv
cmp
xor
out
dec
add
fwait
adc
inc
pop
mov
dec
push
out
fidivrl
jne
repz
jmp
cs
xor
cmc
cmp
movsb
mov
lahf
fstl
mov
xchg
xchg
cmp
dec
adc
add
lods
hlt
imulb
ret
lret
fisubs
jge
cmpsl
mov
add
leave
mov
ds
shlb
lret
add
xor
adc
jno
fcoms
rol
imul
je
dec
ret
aad
call
add
stos
pop
mov
or
mov
sbb
lods
mov
add
shlb
icebp
lret
pop
icebp
or
fistl
insb
jecxz
and
push
fisubs
pop
sbb
jmp
pop
push
faddl
decl
sti
test
inc
and
aas
out
mov
add
mov
add
pop
nop
jb
mov
inc
xchg
aad
cld
insl
insb
add
int
adc
sub
lock
adc
and
stc
adc
popa
and
clc
pop
mov
cmp
jmp
test
test
jg
scas
addl
insl
xorb
lahf
cltd
add
xchg
mov
add
jnp
cwtl
or
mov
push
inc
dec
add
cmpsb
and
ret
fmuls
add
test
incl
add
add
jno
fs
je
jbe
add
push
pop
test
xchg
lcall
add
jp
sub
mov
push
xchg
add
lods
and
lods
test
xchg
add
xlat
pusha
dec
add
mov
inc
add
mov
sbb
xchg
mov
gs
fisttpl
xadd
cld
lcall
xchg
scas
sub
mov
and
or
pushf
xchg
cs
leave
mov
add
xor
cld
fidivl
jmp
es
leave
mov
jp
fsubp
pop
std
or
dec
popf
stos
mov
and
aaa
push
inc
jns
lahf
in
inc
pushf
and
das
inc
push
imul
lahf
push
scas
cmc
cmp
jp
and
sbb
lahf
mov
mov
push
loop
sbb
arpl
add
scas
ds
pop
mov
in
sub
mov
and
rcrl
lods
lcall
ret
mov
js
add
jp
dec
cmpb
je
sbb
sub
decb
xor
push
lods
outsl
dec
mov
add
mov
mulb
cmp
sub
dec
pop
outsl
mov
sbb
sbb
test
jp
mov
mov
js
cwtl
insl
mov
or
mov
sti
cwtl
sub
movsl
rcll
outsl
daa
xor
jnp
ds
xchg
xchg
je
repz
popa
xchg
shr
push
cli
inc
sbb
in
xchg
inc
imul
sub
add
xor
push
cmpsl
and
lret
adc
pusha
cs
mov
sbb
cmpb
sbb
imul
vmovaps
enter
sbb
xor
ret
call
test
andl
or
adc
rcl
jmp
add
sbb
ljmp
pop
xchg
int3
push
rorl
jae
loop
test
inc
cmp
sub
and
sbb
lds
xlat
test
add
xchg
ret
mov
mov
mov
in
sbb
mov
pop
mulb
adc
jl
mov
incl
xchg
xchg
cmp
fadd
call
add
mov
push
jnp
pop
push
lret
shrl
inc
roll
and
sarl
test
mov
or
cwtl
or
lahf
pushf
sbb
cmp
mov
icebp
jp
jle
add
add
cmp
out
insl
or
inc
push
jle
ret
rcrl
stc
or
add
pop
das
cmp
sub
sbb
push
das
pop
add
cmp
mov
mov
ret
sbb
cmc
lcall
std
rcll
inc
push
xchg
je
dec
popf
addr16
sub
adc
out
or
ret
dec
in
shll
adc
in
out
in
xor
icebp
stos
movb
hlt
push
xchg
adc
bound
mov
mov
jl
xchg
or
sbb
pop
shl
mov
or
xchg
pop
pop
xor
mov
fnstcw
xor
loope
or
xchg
daa
fdivr
mov
mov
daa
call
mov
jg
popf
jge
cmp
lea
push
fwait
test
rol
add
dec
jnp
lss
sbb
ds
hlt
aas
push
mov
or
add
xor
cltd
test
out
icebp
jp
icebp
loop
popa
jg
cs
nop
les
mov
test
jle
xlat
pop
mov
pop
jns
inc
rcrl
adcb
push
flds
or
icebp
sarl
insb
adc
push
inc
int
mov
adc
and
cmp
pop
sahf
add
inc
insl
fidivrl
cmc
sbb
inc
sahf
fimuls
out
pop
out
or
out
fildll
adc
cmp
lcall
les
mov
fidivrs
mov
test
push
cmp
in
sahf
add
jns
loopne
xchg
jge
testl
add
inc
lret
std
jne
xor
into
or
mov
pop
jecxz
fsubs
push
adc
sbb
add
movsb
push
push
pop
push
sub
test
inc
scas
push
or
inc
movsb
cmpsb
inc
xlat
inc
xchg
decb
fs
mov
add
pop
test
adc
push
dec
into
jecxz
jns
add
and
lahf
shrl
pop
outsb
mov
and
mov
or
add
mov
lods
testl
pusha
push
cmp
add
mov
pop
scas
fldcw
fcmovbe
or
mov
lea
push
loop
scas
and
sarl
jecxz
pop
popa
jp
es
aam
shll
cmp
add
enter
xor
jmp
or
inc
and
mov
loope
or
dec
mov
mov
bound
mov
or
pop
mov
ffree
rclb
pop
add
push
xchg
jne
adc
dec
add
jbe
es
or
loopne
and
mov
mov
adc
pop
addr16
cmp
sub
add
out
stos
fnstenv
add
jb
mov
enter
nop
sbb
pop
mov
ja
cmp
mov
xchg
ret
and
add
fnstenv
jle
pop
adc
xchg
add
fdivrs
push
or
inc
testb
in
test
out
loop
xchg
inc
push
pop
sbb
loopne
xchg
pop
add
lds
add
stc
js
daa
pop
clc
ds
pop
lods
lea
add
add
pop
leave
je
jl
ret
add
mov
inc
inc
xchg
lahf
push
in
stos
sbb
mov
mov
dec
das
cli
outsl
and
or
gs
pop
inc
mov
mov
in
daa
pop
add
fidivs
add
stc
jecxz
cmp
xlat
add
push
je
add
lock
add
jle
inc
mov
pop
push
sahf
adc
scas
add
mov
icebp
pop
lahf
outsb
sbb
cld
xrelease
bound
add
pop
test
inc
sbb
and
add
fs
dec
add
hlt
pushf
gs
ret
in
sub
test
arpl
sub
nop
add
rcr
inc
add
mov
frstor
xor
xlat
fcmove
inc
inc
add
mov
repz
or
sub
push
out
xchg
push
loopne
push
jle
dec
ret
pop
inc
clc
shrb
mov
popf
aad
ds
divl
push
cmp
add
int3
jecxz
inc
adc
rorb
jg
push
shll
arpl
lea
roll
jb
add
unpckhps
jmp
jns
mov
pusha
xor
imul
mov
dec
jne
mov
add
adc
add
cs
cmp
fs
int
push
jmp
ja
sbb
leave
jns,pn
sarl
inc
lcall
xchg
mov
xor
inc
aaa
sub
and
out
ret
fwait
repz
mov
sbb
xlat
jg
jns
stos
inc
enter
mov
imul
mov
add
push
or
xchg
or
adc
or
jmp
leave
xchg
xchg
sub
es
mov
push
ja
dec
std
stos
sub
add
icebp
pop
cltd
sub
outsb
aas
add
aam
frndint
mov
imul
inc
ret
cmp
cmp
in
inc
mov
test
outsb
cmp
xchg
add
jle
add
add
adc
or
xchg
dec
mov
or
and
add
lcall
xchg
xor
cmp
test
xchg
sahf
dec
mov
notl
iret
ret
xchg
xchg
std
and
mov
push
rcrb
or
outsb
or
movl
jmp
xor
xor
add
repnz
ja
lods
dec
fwait
or
adc
cmpb
cmp
push
push
cs
test
mov
ljmp
mov
test
dec
sahf
or
sub
lahf
fwait
out
cmp
push
sbb
jno
pushf
push
xchg
ja
pop
and
paddsb
fdivs
mov
in
mov
lds
inc
push
bound
popa
inc
loopne
sbb
xlat
lcall
sbb
and
sbbb
mov
xchg
stos
lock
push
xor
inc
cmp
push
and
mov
ret
mov
push
push
mov
add
pusha
adc
bound
add
out
fs
jl
jo
and
cld
lahf
push
fcmovnbe
push
push
pop
fstps
add
add
lret
and
jp
sub
clc
jo
inc
adc
pushl
cmp
test
out
add
add
pop
adc
rclb
mov
gs
mov
ja
add
cmp
xchg
sbbb
sbb
insb
push
cmp
ja
adc
popf
lods
subb
test
add
xchg
add
push
ret
mov
xlat
mov
add
xor
xchg
bound
jle
jmp
sub
mov
dec
popa
or
movsb
rep
cmp
xor
je
outsl
sarl
push
add
imul
jle
xor
fldcw
daa
daa
ljmp
cwtl
pop
xor
iret
xor
and
jae
push
push
loope
clc
cmp
add
stc
stos
dec
mov
dec
push
cs
xor
mov
sarb
fstl
pop
pushf
fildl
push
leave
clc
add
sbb
add
xor
xor
fxam
es
outsl
rorb
iret
and
xor
and
rorl
andb
cmpsl
sub
les
shlb
add
pop
lret
pop
cmpsb
mov
xchg
movsb
add
popa
add
mov
je,pn
ret
xchg
out
xchg
mov
cmp
xor
jmp
push
aam
iret
add
inc
rol
or
cmc
gs
loop
cld
cmp
test
push
pop
ja
add
lds
rcl
push
jne
mov
and
fbstp
fdivrs
mov
xchg
repnz
lods
xor
xchg
push
int3
std
mov
inc
add
outsl
sbb
adc
jae
inc
ljmp
sti
push
push
cs
add
ds
je
or
dec
mov
mov
jmp
and
subl
arpl
mov
stos
add
mov
mov
add
mov
rol
stos
sbb
sub
sub
dec
inc
jle
rcl
cmp
sarb
or
push
sbb
jbe
pop
fdiv
into
push
shrb
add
sahf
addr16
orl
dec
sbb
mov
imul
sub
rcll
cmp
or
pusha
sbb
sbb
mov
mov
ds
or
popf
sbb
add
pop
jge
leave
add
aam
cltd
je
push
or
fucomi
sahf
sbb
dec
fcompl
pop
pop
pop
rcrl
add
cli
xor
lea
std
inc
push
out
add
pop
data16
enter
sub
cwtl
sub
jns
pop
inc
push
int
fwait
xchg
sar
xor
cmc
jns
mov
in
mov
hlt
mov
je
scas
cld
xor
pop
mov
mov
les
add
pop
or
add
ljmp
andl
cltd
iret
add
stos
inc
aaa
pop
and
stos
nop
sub
add
adc
leave
add
jns
repz
aad
cld
mov
sub
push
and
cmpsb
lods
add
fildl
xchg
adc
cwtl
push
addr16
mov
adc
js
and
or
imul
push
lds
mov
aam
sbb
out
fsubr
ror
adc
pop
push
cmp
loop
fcoml
lcall
ret
sbb
add
dec
add
adc
add
test
xchg
mov
shr
testl
inc
dec
adc
cmp
rolb
pop
xchg
or
xor
test
insl
fyl2x
sub
lahf
ss
lret
xchg
push
bound
roll
fisubl
ljmp
sub
rdpmc
mov
pop
rol
gs
sub
add
dec
mov
out
jmp
pop
jg
pop
mov
les
lret
push
sub
sti
xor
cmp
das
mov
mov
push
add
add
loopne
je
push
sar
push
out
and
push
sub
push
sarl
jp
ja
cwtl
cltd
jg
jmp
xchg
sbbb
das
xchg
xor
jmp
enter
xchg
cmp
mov
add
scas
inc
sub
or
rcr
popl
test
add
dec
mov
lret
aas
jle
insl
push
pop
jae
divb
jmp
cwtl
sub
and
jmp
lods
xchg
pop
adc
adc
popa
xor
push
in
cmc
js
inc
xchg
fiaddl
icebp
mov
fimuls
and
inc
pop
sti
add
ret
add
mov
xor
push
and
add
sbb
cli
pop
hlt
jno
adc
out
rclb
add
mov
repnz
cmp
loop
int
arpl
in
add
cs
sub
add
mov
and
andb
add
repnz
cmp
and
xchg
leave
in
jg
push
inc
push
xchg
inc
out
and
je
lret
fbld
and
insb
in
push
mov
sbb
int
and
adc
cmp
xchg
xchg
popf
push
pop
insl
xchg
lret
clc
xor
and
rcr
push
lock
add
fmull
mov
inc
or
rclb
adc
rorb
push
add
test
push
xchg
les
in
sti
stc
outsb
add
push
sbb
jae
adc
mov
ret
add
and
add
mov
adcl
ljmp
arpl
xor
fadd
nop
cmp
and
in
cwtl
jp
dec
cmp
shl
scas
mov
cmp
add
xchg
add
sub
popa
jo
jle
mov
lret
add
push
icebp
scas
adc
loop
push
mov
cmp
xor
xchg
aaa
adc
pop
add
mov
add
jle
pop
fwait
cmpsl
sbb
add
popl
pop
ds
fsubrp
and
and
xchg
add
mov
add
sub
add
and
xor
mov
mov
in
jnp
push
xlat
and
cmpsl
movsb
cmp
inc
ds
dec
add
pop
adc
andb
push
cli
jge
xchg
push
movsl
out
sub
mov
add
inc
int3
push
push
paddw
dec
shl
xor
jne
cmp
xchg
or
mov
adc
das
jmp
pop
scas
sbb
jo
mov
movl
call
stos
sub
inc
enter
mov
sbb
testl
iret
pause
mov
fadds
ss
rcrl
faddl
pop
lea
add
dec
jg
pop
xor
and
jns
into
mov
push
mov
mov
add
aam
mov
jns
lret
adc
cmp
jbe
movl
dec
or
or
into
call
dec
push
scas
jae
jl
push
jnp
out
mov
add
lods
daa
sbb
call
push
push
and
jno
add
inc
xchg
cli
sbb
add
push
dec
pop
arpl
cmp
lret
xchg
ret
mov
shl
sbb
imul
push
and
add
mov
add
ret
xor
daa
add
jle
test
and
xchg
adc
adcl
rclb
jmp
add
add
add
mov
and
andb
inc
push
call
adc
xchg
pop
push
out
shlb
mov
add
sub
mov
mov
cmp
mov
aaa
mov
pop
pusha
dec
sub
rcll
cmp
add
jl
js
jle
ljmp
mov
jmp
add
shl
sub
pop
jl
mov
sbb
popa
dec
jle
add
andb
fnstenv
into
push
cmp
lds
push
push
les
roll
xor
mov
fisubs
arpl
jb
pop
xlat
add
and
pushf
in
testl
and
popa
jmp
out
push
mov
fistps
daa
hlt
call
jno
loopne
adc
inc
add
pop
mov
mov
mov
sahf
sub
cld
and
imul
daa
inc
out
and
adc
add
push
outsb
out
xor
mov
xchg
hlt
into
pop
xor
sub
lahf
add
imul
leave
mov
fsubrl
jo
mov
pop
inc
sti
dec
mov
cmp
mov
add
out
mov
rclb
mov
xor
cmpsb
movsb
imul
fisttpll
add
inc
sub
cmp
in
cmp
das
and
aam
inc
xadd
add
cmp
test
bound
sub
add
pop
mov
add
adc
mov
pop
sar
in
pop
jle
cmp
outsb
pop
xchg
xchg
pusha
sbb
or
push
mov
les
sti
dec
mov
gs
add
mov
mov
enter
insl
mov
mov
xor
xchg
cld
dec
xor
add
leave
and
inc
adc
xor
dec
incl
cwtl
pop
loopne
jle
xchg
rcr
mov
add
cltd
sub
into
loopne
add
adc
test
pop
jl
lock
jb
sub
xchg
mov
aas
test
and
sbb
and
aaa
jp
mov
jle
test
cli
xor
paddq
xchg
and
bound
and
push
rep
movsb
pushf
cltd
loop
popl
add
add
add
lds
inc
xchg
adc
cmp
xchg
icebp
xchg
jecxz
adc
or
sahf
lret
jmp
jp
pop
mov
ds
pop
add
ss
fcmovbe
cmp
cmp
aas
mov
int3
js
ljmp
add
mov
inc
idiv
cmp
ret
jl
cmc
jne
sub
pop
jmp
in
cmp
nop
add
sbb
inc
fisttps
add
and
sbb
push
fisttpll
dec
add
cmp
add
push
mov
mov
jmp
call
hlt
movl
xchg
pop
jae
stc
inc
add
sbb
pop
push
sbb
xorb
or
out
imul
adc
fs
pop
mov
push
push
sbb
pop
cmp
xchg
enter
xchg
shlb
add
adc
ret
clc
rcrl
cs
jnp
xor
inc
ja
sub
pushw
mov
add
mov
movsb
dec
push
push
stc
xor
stos
in
test
inc
add
lcall
sub
push
int3
adc
sbb
hlt
add
and
push
test
or
shrb
pop
jo
inc
add
add
movsb
test
xor
pop
fildl
clc
dec
sbb
pop
dec
inc
push
add
cltd
mov
rclb
loopne
add
das
cmpsb
lea
mov
dec
sbb
mov
add
sbb
add
out
lods
sbb
mov
icebp
fwait
aad
inc
add
and
jl
jg
rorl
jl
mov
or
add
cmpsb
gs
xor
cmpb
jne
lret
shlb
out
jg
jge
inc
roll
fistpll
adc
push
sub
fadds
inc
add
repz
stc
mov
jo
cmp
addr16
jg
push
add
mov
ret
sbb
in
movsl
mov
enter
mov
dec
push
add
cwtl
leave
or
in
mov
fistpll
push
sub
arpl
add
in
ret
xchg
and
sbb
push
stos
fmull
mov
bound
push
lcall
and
ja
loop
dec
jno
xor
mov
pushf
loopne
cltd
bound
mov
adc
outsl
pop
xchg
movsb
daa
scas
sub
inc
imul
rclb
add
and
loop
and
aad
sbb
adc
jmp
sbb
pop
test
jnp
add
add
pop
mov
cmc
pop
pminsw
jp
add
scas
adc
scas
xor
adc
dec
scas
sbb
or
movsb
jp
pop
lock
rorl
es
jg
jmp
and
pop
mov
jp
pop
cwtl
shrl
push
dec
adc
mov
pop
pop
add
movsl
or
ja
aam
lds
int
cs
out
mov
sub
cwtl
ficomps
xchg
sbb
ret
cmp
push
xlat
jle
dec
jg
jae
xor
mov
rorl
mov
movsl
add
lcall
bound
pop
shlb
int3
mov
enter
adc
out
adc
pop
outsl
cmp
cmp
inc
sub
movsl
cmpsl
jbe
outsb
dec
jo
xorl
popl
push
ret
cmp
or
loope
pop
mov
stos
sub
add
inc
inc
adc
fists
popf
cltd
fimuls
add
mov
movsl
in
push
std
jl
lahf
mov
rol
lret
dec
add
and
xor
inc
push
mov
jle
xchg
push
add
xlat
aaa
sti
mov
jge
jno
std
imul
jo
sub
jmp
testb
mov
pop
inc
add
daa
mov
add
into
test
adc
jno
cmp
sbb
add
icebp
jns
loopne
adc
and
mov
or
sub
stos
add
mov
rorb
cmp
adc
aam
fcomps
jae
aad
je
repz
adc
mov
inc
jmp
movsb
ret
xchg
push
sahf
sbb
push
mov
or
xor
jecxz
jno
les
roll
cld
mov
mov
xchg
dec
xchg
add
scas
call
dec
inc
gs
add
sbb
inc
out
stos
xorb
pop
pop
stos
aad
mov
add
imul
inc
pop
sarl
push
roll
jno
lock
repz
xor
mov
inc
into
mov
and
sub
and
pop
pop
test
subb
cmp
lahf
idiv
mov
or
pop
push
sarb
sbb
adc
ret
aam
cmpsl
stc
mov
mov
fidivrs
sbb
fs
push
push
add
and
dec
jb
mov
lock
les
pop
inc
test
loope
mov
jp
das
in
add
mov
pop
bound
arpl
lret
sbb
mov
and
aaa
jno
loope
add
push
push
jbe
shlb
adc
rcll
pop
dec
leave
out
mov
sub
add
insl
pop
mov
adc
faddp
cmp
lret
and
rcl
jmp
jne
ljmp
dec
sti
inc
data16
test
add
add
sub
xlat
cmp
das
mov
inc
mov
in
cmp
and
out
jo
xchg
test
xlat
xchg
cmpsl
jne
pop
adc
pop
jbe
jmp
add
cmp
fisubrs
xor
sahf
fldt
std
dec
loope
or
sub
aas
xor
jns
mov
dec
outsl
add
jp
cmp
pop
xchg
hlt
push
and
push
data16
adc
mov
add
popf
mov
ud1
cmp
add
xchg
fdiv
add
mov
into
sub
and
mov
push
repnz
jl
loopne
aad
adc
or
add
xchg
mov
mov
out
inc
adc
add
add
outsl
add
adc
mov
sub
cld
int3
fdivrs
andl
inc
sbb
into
shlb
pop
mov
mov
push
inc
mov
repz
clc
add
sahf
jno
test
push
pop
push
push
adc
pop
lea
pop
out
xor
add
mov
jmp
pop
add
and
flds
push
aas
sti
into
sbb
cmp
sbb
outsl
pop
pusha
shrb
pop
add
jnp
jne
or
adc
imul
ret
repnz
add
and
jge
add
out
cmp
mov
sbb
fs
pmaxsw
mov
and
add
xor
ret
add
mov
je
inc
add
in
shlw
add
rolb
dec
xchg
cmp
lods
adc
test
adc
sar
sbb
subl
mov
pusha
add
inc
mov
add
and
cmpsb
cmp
jo
dec
inc
and
sbb
pop
add
popa
add
cmp
sub
push
jmp
and
out
inc
pop
mov
lret
loopne
mov
pop
mov
int3
or
xchg
sbb
lcall
das
adc
sub
dec
jl
icebp
mov
mov
xor
pop
ja
add
dec
das
pop
xchg
enter
cmpsl
cmp
cs
xchg
xchg
and
lds
pop
rolb
cmpsb
and
fidivl
xor
mov
pop
fucomi
int3
jecxz
movaps
xor
push
movsl
lahf
mov
or
and
xchg
cmp
in
jae
in
jecxz
add
xlat
mov
push
mov
leave
add
add
arpl
cmp
iret
mov
jnp
sub
nop
cwtl
push
pop
ja
inc
or
mov
xchg
lods
cli
loope
sbb
sbb
daa
mov
jno
fldl
out
inc
push
sahf
scas
push
mov
int3
fdivl
cmp
add
lods
loope
rol
pop
test
xor
and
xor
or
mov
mov
push
xor
loope
scas
xlat
cld
outsl
sahf
and
pop
sbb
and
mov
rclb
std
arpl
add
add
mov
jle
pop
ret
sub
add
mov
inc
das
mov
push
mov
pop
popa
add
fmul
mov
pop
xor
mov
lret
fwait
mov
add
repz
in
and
pop
xchg
mov
cmp
jmp
mov
dec
push
addr16
lcall
out
mov
push
sti
pop
into
repnz
jb
fadds
enter
std
loop
push
ja
in
daa
dec
mov
and
inc
push
add
cmp
cwtl
jmp
out
iret
orl
mov
enter
xor
shll
popf
je
insw
dec
inc
add
test
mov
cmpsb
add
out
in
push
add
outsl
loope
data16
int
mov
je
push
ret
mov
pop
js
loope
pushf
lds
push
add
add
inc
cmp
pop
xor
add
mov
add
pushf
add
dec
xlat
in
ret
pop
iret
cmp
push
hlt
mov
jnp
sar
inc
add
mov
add
lcall
push
or
adcl
and
cmovle
add
into
or
and
insl
scas
popa
cmp
sahf
sub
adc
push
les
and
mov
mov
push
pop
and
mov
cmp
add
dec
cmp
and
nop
insb
cmp
mov
add
xor
mov
jecxz
shl
mov
enter
dec
xor
adc
cmpb
sti
mov
sbb
test
ficompl
xor
or
jnp
dec
dec
push
sbb
cmc
xchg
jo
push
xchg
add
aad
jno
xorl
sub
push
adc
add
add
scas
and
mov
loopne
jl
jge
add
rorl
addl
jmp
scas
out
lcall
out
jle
add
arpl
and
les
sub
cwtl
and
in
mov
jl
loop
lds
adc
xchg
push
ffreep
mov
xchg
sub
xorb
jae
pop
mull
dec
add
fstps
ja
nop
add
imul
les
pop
push
fs
or
mov
add
imul
popf
mov
adc
pusha
mov
pop
cmp
add
adc
push
cmc
lret
push
cmpsl
movsl
cltd
dec
cmp
mov
ret
aam
sbb
inc
inc
xor
outsl
daa
mov
mov
insb
add
and
add
sub
pop
shrb
xor
jl
cltd
mov
test
repnz
add
dec
mov
add
fldenv
incl
out
nop
add
ds
mov
add
dec
stos
test
leave
fildll
cmp
push
outsb
fmuls
add
inc
lods
mov
enter
add
insl
inc
pop
repnz
decb
mov
mov
test
cmp
std
lods
xchg
mov
imul
sti
pop
xor
and
rcr
test
add
int
pop
in
pop
fwait
dec
add
sub
push
inc
or
enter
pop
or
call
addl
ret
push
cmpsl
scas
or
rolb
and
pop
jnp
inc
lods
inc
sub
xor
insb
outsl
jl
or
add
jno
add
jg
in
push
test
adc
lock
jp
test
sarl
mov
fdivrs
jge
gs
add
daa
sbb
shrl
popa
mov
nop
cwtl
adc
out
adc
iret
popa
push
loopne
repnz
out
jne
cmp
rcl
mov
rcrl
push
jno
push
es
in
or
movsb
fisttps
cmp
mov
in
xor
cli
sub
arpl
out
fwait
xchg
xlat
enter
stos
es
js
ss
insl
and
in
sbb
jo
sbb
xor
and
aas
call
scas
test
dec
cmp
cltd
pop
jp
imul
or
cmpsl
inc
out
xchg
cmp
pop
or
mov
sub
dec
gs
mov
lds
out
cmp
mov
pop
or
mov
lcall
je,pn
jno
ret
arpl
xor
cli
iret
xor
cmp
and
push
push
mov
leave
and
mov
inc
out
xchg
xchg
in
xchg
mov
add
mov
pusha
mov
in
and
sbb
in
fsub
pushf
in
out
pop
subl
ret
pop
sbb
mov
icebp
jnp
pop
inc
adc
push
pop
ss
call
sarl
mov
sbb
sbb
fwait
xor
out
xor
cmp
and
jb
pop
testl
in
aaa
and
jp
lcall
push
pop
and
cli
test
out
and
push
sbb
jo
sti
jbe
mov
adc
jae
fldcw
mulb
sahf
mov
movsb
outsb
test
lods
sub
movsb
adc
pop
cmc
jmp
mov
incl
or
rorb
aas
sahf
mov
sub
dec
mov
movsb
xor
xchg
fcoml
pop
pushf
jecxz
or
mov
sub
xchg
daa
in
cld
popf
inc
mov
xchg
add
xor
aas
test
jecxz
jnp
pop
mov
push
adc
and
loop
adc
hlt
sub
call
lret
lahf
rolb
inc
fisttpll
sub
mov
and
adc
or
or
into
data16
ds
dec
or
mov
popa
out
test
xor
or
xor
mov
cmp
insl
adc
inc
cmpsl
xor
ds
and
inc
les
and
lret
jg
push
sbbb
dec
ja
aad
adc
sbb
adc
xor
lods
test
mov
aam
sub
scas
adc
bound
xchg
push
pushf
loope
jle
sti
add
mov
rolb
jae
push
inc
cmp
pop
fsubrs
clc
jmp
andl
mov
bound
test
into
loopne
sbbb
xchg
dec
add
out
push
sbb
adc
ja
out
sbb
xor
inc
mov
lock
and
mov
and
push
es
pop
inc
lret
push
xchg
and
push
jmp
lret
inc
jp
sbb
cmp
push
out
push
jg
fldt
out
jp
dec
mov
rclb
test
mov
cs
jp
or
nop
stc
cmp
xchg
shrl
sub
loop
and
imul
lods
adc
cmp
out
shlb
arpl
mov
adc
xchg
jge
jnp
int
inc
add
pop
sbb
push
push
sub
in
jmp
rolb
test
or
dec
fcmovne
pop
add
mov
pop
inc
outsl
ja
scas
test
rsm
pusha
add
adc
mov
mov
jno
pop
insl
jl
xchg
cs
icebp
or
sub
add
mov
addl
in
repz
rol
xor
mov
mov
leave
stc
mov
insl
ss
popf
mov
repz
xchg
or
mov
movsb
mov
pop
pushf
fmull
dec
clc
out
and
cwtl
test
xlat
xor
lea
lods
push
add
std
push
loopne
mov
call
cmp
pop
push
add
adc
lods
sbb
add
pop
xor
pop
pushf
bound
jbe
and
dec
adc
out
imul
lret
cli
pushf
mov
daa
fldenv
dec
dec
cmc
pop
fdivl
or
and
add
imul
pop
add
adc
mov
bound
push
mov
movsl
pushf
mov
inc
add
adc
cwtl
not
ror
stos
scas
shrb
xor
add
ret
xor
stos
and
add
jmp
pop
icebp
cmc
xchg
shll
int3
inc
add
lret
cmp
data16
stc
rcrb
add
push
fisttpl
jbe
xor
inc
imul
cmp
add
repz
clc
dec
xor
add
loope
xchg
xchg
mov
cmp
add
sbb
movsb
pop
and
add
xlat
mov
cs
add
das
popf
std
add
dec
jne
add
clc
mov
in
sbbl
pop
fisttpll
push
cmpsb
dec
mov
sbb
fwait
popf
cmp
aam
push
rclb
ljmp
add
sbb
pop
jo
mov
jb
aas
lahf
jo
inc
es
inc
mov
aaa
sub
xchg
xor
fisubrs
gs
adc
cmp
xchg
lahf
dec
repz
cmpsl
jae
add
pop
test
lcall
lea
pop
insb
addl
mov
scas
in
rcrb
icebp
ret
jae
pushf
pop
and
mov
add
or
push
fistps
dec
add
pop
mov
add
ret
enter
roll
sbb
jmp
scas
fidivs
xor
fistpl
inc
mov
fsubrs
in
mov
push
fdivrl
scas
add
mov
add
mov
jo
add
pop
stc
into
pop
and
adc
xchg
loopne
or
add
addr16
lcall
cmp
addr16
notb
jl
imul
mov
dec
shr
subl
jo
mov
scas
fimull
and
cli
pop
cld
or
add
imul
jne
add
inc
into
push
inc
cmp
push
mov
xor
out
daa
shrb
cmp
clc
add
enter
push
jg
ret
pusha
outsl
aad
jecxz
and
ds
pushf
inc
out
cs
rorl
lods
cmp
sbb
or
xor
xor
inc
lods
aam
and
dec
add
subb
add
je
fisttpl
and
xorl
lret
stos
and
insb
in
lret
add
adc
imul
jl
shr
je
test
push
push
add
lods
ret
inc
pop
mov
inc
mov
add
xchg
sbb
push
jle
jns
push
sub
test
rclb
cmp
pop
push
add
jg
movsb
and
fstpl
push
aad
and
xchg
cmc
cmp
int
scas
mov
orl
jo
sub
adc
jbe
add
cmc
dec
dec
xchg
mov
cmp
imul
test
jle
fs
enter
imul
or
push
sbb
mov
mov
in
mov
jp
cmc
popf
pop
adc
int
xchg
jbe
loop
xor
cmpb
movb
addr16
dec
outsl
jb
daa
mov
out
pop
addl
cmpsl
lea
inc
int3
add
stos
add
dec
sbb
das
gs
inc
dec
insb
ret
mov
stos
adc
jns
mov
repnz
add
shll
lds
enter
add
jle
mov
cmp
stc
aam
add
ror
daa
out
in
cld
add
cmpsb
lds
pushf
and
add
cmp
mov
adc
movsl
xlat
adc
in
add
pop
or
xchg
in
xor
cmp
and
add
int3
shrl
push
mov
mov
sbb
faddl
inc
inc
push
cmp
pusha
push
clc
xor
ret
inc
sbb
jmp
add
int
jle
in
sub
add
mov
mov
movsb
lret
movsl
nop
or
shlb
je
xor
pop
xor
add
and
ljmp
jae
xor
shll
xchg
mov
divb
pop
pop
xor
add
pop
sbb
mov
gs
test
outsl
add
xchg
cmp
pop
mov
pop
xor
pushf
mov
cmp
js
mov
inc
push
push
sub
add
cmp
jnp
adc
cltd
in
add
mov
mov
sub
in
call
inc
cmp
xor
test
mov
out
dec
cmp
jle
add
xlat
cmpsb
loope
fildl
add
lods
xchg
rol
and
or
pusha
jnp
xchg
mov
pop
xchg
sub
push
xor
sbb
cmp
add
inc
data16
sarb
push
cvttps2pi
scas
popa
jno
add
cmp
or
or
xor
pop
jne
push
push
out
pop
into
add
xchg
movsl
bound
shrl
ret
xlat
cmp
rcrl
into
insb
lds
and
adc
add
xchg
adc
mov
sahf
jns
pop
mov
rcrl
jo
xchg
sbb
mov
sbb
negl
sbb
add
dec
stc
cwtl
dec
ret
add
gs
sahf
in
jns
mov
dec
cmp
movl
movsl
loopne
adc
sbb
push
loopne
sub
stos
cmp
pop
push
add
imul
lods
push
mov
cwtl
add
sub
inc
jge
jp
in
pusha
and
add
sarb
stc
mov
jae
shll
and
insl
insb
xchg
jge
sub
mov
pop
movsl
add
inc
sub
or
aas
add
leave
and
mov
insb
sbb
ret
inc
adc
mov
mov
pop
iret
loopne
sbb
add
inc
jne
xchg
ror
mov
mov
sbb
in
ret
gs
dec
dec
inc
mov
xor
xlat
pop
fadd
cmpsb
out
sbb
mov
inc
sbb
hlt
in
and
data16
mov
add
pop
incl
shl
xchg
mov
outsb
adc
push
outsl
and
adc
lret
rolb
adc
sub
sbb
xor
inc
nop
mov
xor
add
mov
jbe
das
push
pop
add
add
cmp
add
cmp
daa
outsb
inc
out
ror
cli
push
cld
jb
pop
push
jecxz
adc
sahf
inc
in
add
rcr
int
adc
leave
add
dec
cmpsl
incb
push
lods
add
subb
sub
or
add
and
sub
push
add
rcl
mov
pop
loope
sarl
lahf
mov
das
jecxz
movsb
movsb
lods
cmp
add
xorb
add
sub
out
mov
inc
aaa
orb
and
jge
add
repnz
rcr
push
inc
repz
ret
xor
xor
inc
mov
in
insb
add
jbe
jg
xor
stc
mov
mov
and
sbb
ret
call
dec
lds
pushl
push
rclb
cli
sahf
loope
lret
add
cmpsb
sbb
sbb
add
xor
setne
mov
pop
rol
les
xchg
xchg
or
fwait
sbb
cmp
add
xor
movsl
add
pop
push
push
jne
inc
add
ffree
xor
cltd
mov
lds
aam
xor
negb
push
add
out
loop
lods
iret
mov
add
cmpsl
jb
mov
add
adcb
add
mov
xchg
add
repz
add
or
call
inc
xlat
ja
mov
sbb
js
add
push
xchg
jne
jnp
xchg
push
jecxz
xchg
xchg
jg
mov
adc
mov
orl
mov
sar
mov
pop
xor
mov
sub
mov
dec
or
out
add
daa
add
add
jns
mov
mov
xchg
push
in
mov
xchg
scas
popl
cltd
add
xlat
int3
std
cmp
in
jae
les
mov
jl
stc
das
lods
sahf
shrb
cwtl
lock
xor
add
stos
xor
xchg
push
nop
add
test
mov
xchg
adc
lret
in
mov
and
or
mov
dec
jl
mov
and
cmc
fistpll
std
mov
inc
push
sbb
jmp
inc
dec
add
pop
nop
out
addr16
fbld
mov
rcll
fwait
cmp
inc
fdivrs
dec
adc
xor
pop
movb
sub
cmp
add
fnstenv
inc
pop
mov
cmp
outsb
loopne
in
cmp
imul
inc
pushf
cli
into
gs
xchg
int3
dec
and
mov
stc
dec
pop
cmp
inc
in
aam
inc
adc
mov
inc
jp
out
cmp
inc
cmpsl
cs
ret
fildl
and
pusha
jl
sarl
xor
mov
jg
and
pop
paddusb
cmp
mov
pop
mov
inc
sbb
add
ds
or
incb
push
imul
icebp
xchg
inc
sbb
adc
ret
mov
fisttpl
cmp
dec
xchg
xlat
inc
nop
add
aam
cmp
push
ret
fisubs
adc
xchg
push
push
pop
jns
sahf
pop
pop
cmp
sbb
adc
ljmp
jmp
or
inc
daa
dec
sub
xchg
pop
out
or
addr16
stc
sbb
cmpsb
sub
xor
mov
loop
leave
cmpsb
jecxz
es
int3
insl
jg
adc
inc
or
sub
test
je
cld
and
loop
mov
ret
or
push
loope
ljmp
adc
popf
inc
cwtl
jp
cltd
xchg
lcall
mov
lfs
adc
std
test
sbbb
cmpb
mov
ret
imul
mov
and
mov
pop
and
daa
add
or
jne
push
inc
aas
in
pop
push
rcrb
push
fisubs
jg
and
and
sub
jp
sahf
xor
fstpl
mov
push
movsl
push
xchg
jmp
into
std
and
adc
mov
lods
mov
jns
ljmp
out
add
push
aad
xlat
cmp
test
mov
xor
sbb
mov
add
in
fildll
mov
and
xchg
dec
add
scas
cs
or
lods
mov
cmp
push
dec
or
push
fcomip
rcl
sti
jb
inc
iret
add
fisubl
pop
pop
jb
push
ja
add
jp
dec
jg
into
clc
daa
add
pop
rcrb
xchg
loop
fs
mov
push
xlat
or
int3
adc
mov
pop
inc
xor
xchg
jno
sbb
dec
jno
lret
and
scas
xorb
push
aas
out
subb
adcb
fs
push
sbb
es
jp
out
lret
mov
or
ret
mov
fldenv
movsb
adc
sbb
adc
ss
push
pop
andl
push
sub
out
pop
add
mov
mov
add
push
cmc
test
or
jo
adc
out
inc
sbb
and
stos
nop
add
cwtl
cld
mov
jl
cli
in
cmp
and
bound
aaa
aas
inc
push
pop
pop
pop
pop
shll
mov
fisttps
push
pop
outsl
in
sbb
cmp
out
jne
mov
call
lret
lods
stos
shlb
push
sbb
pop
inc
push
aad
pushf
fldenv
adc
sbb
cli
add
inc
rcl
add
mov
mov
stos
jle
inc
hlt
add
inc
rcll
fsqrt
dec
cmp
mov
add
shll
cli
sbb
cs
add
popl
jl
push
dec
xor
pop
xchg
orb
sarb
ss
mov
mov
sub
movsb
or
add
pushl
ds
push
ja
push
mov
jge
sub
xor
inc
xchg
xchg
push
xor
sub
mov
jp
add
addr16
lret
xchg
shll
push
add
adc
in
inc
xchg
jp
jg
xor
ror
cmc
lods
in
and
insl
flds
shr
js
lds
arpl
test
dec
mov
add
jo
push
mov
int
add
movsl
jmp
subl
decb
mov
pop
inc
add
jecxz
int3
fs
adc
cmpsl
mov
add
lods
mov
subb
cmp
es
and
divb
add
and
mov
inc
inc
mov
sarl
add
mov
pop
inc
ret
inc
pop
idiv
cmp
movsb
filds
push
fldt
adc
dec
mov
leave
add
cld
add
add
cmpsw
push
clc
outsb
loopne
pusha
jbe
xchg
lea
xor
gs
and
imul
fnsave
sbb
cmpsl
mov
in
cs
jo
pushf
mov
mov
pop
sbb
inc
je
rolb
mov
and
roll
sub
xor
out
shlb
cmp
sub
iret
xor
movsb
add
lahf
scas
mov
sub
add
xchg
jp
cmpsb
xor
cmp
add
jmp
jge
rclb
add
pop
mov
rolb
js
xor
mov
in
popf
pushf
inc
xor
rcrb
sahf
adc
bound
sub
adc
add
movsl
aaa
mov
mov
je
adc
xor
repnz
push
pusha
jl
add
popf
xchg
add
xchg
cld
ds
leave
int3
push
mov
shl
enter
mov
pop
add
mov
jp
add
pop
dec
repz
push
add
test
xchg
and
pop
movsb
mov
mov
push
imul
push
icebp
orl
pop
mov
cmp
sub
add
mov
shll
pop
inc
add
stos
popf
out
add
mov
and
push
pop
inc
pushf
loopne
lret
mov
sbb
les
cmc
inc
xor
lea
push
fld
sub
jg
popf
cmp
fmuls
subl
jg
js
aad
and
sub
lods
in
pop
push
add
cltd
sub
add
jmp
add
shrl
es
pop
leave
push
psrad
ret
repz
xchg
sub
add
cmc
mov
repnz
ss
add
add
mov
fdivs
xor
sub
xchg
and
lds
in
pusha
lret
arpl
add
jno
ret
mov
xor
sub
aas
push
add
add
loope
pushf
jmp
sub
fstpt
das
in
mov
add
jb
das
lret
push
ret
lds
and
adc
lahf
addr16
popa
pusha
mov
lret
in
cmpsb
cmp
mov
jns
pop
stc
mov
add
loop
fimull
dec
inc
inc
jmp
xchg
stos
xor
adc
in
pop
nop
gs
jp
rcll
sub
lcall
add
jb
decb
addl
lock
add
ret
loope
add
cmpsb
in
inc
pop
mov
mov
xor
xor
cmp
jp
enter
jo
push
cmp
lret
adc
pop
jno
sbb
xor
or
push
xchg
cmpl
imul
call
add
add
dec
mov
xor
aaa
aam
xchg
in
xchg
lods
add
fbstp
pop
sar
jb
jo
iret
push
jno
inc
add
mov
inc
xchg
mov
rol
inc
loope
jo
dec
mov
je
inc
repnz
and
js
sbbl
xorb
repnz
inc
test
pop
jbe
jmp
test
js
test
cli
aad
dec
popa
inc
fsub
stos
inc
aam
mov
inc
aas
add
add
push
sarl
xorl
jge
xchg
xchg
stc
adc
fnsave
scas
mov
dec
outsb
insb
add
cmovo
add
ja
jbe
cmp
push
fisubl
push
loop
enter
scas
add
cli
xchg
repnz
jecxz
add
jmp
pop
faddl
cmp
add
ffreep
mov
lret
dec
mov
js
jmp
add
mov
daa
sub
cmp
mov
fnsave
movsl
cmpsl
push
inc
lea
pop
inc
fidivl
add
xchg
test
cmc
lcall
sbb
mov
push
out
scas
mov
and
add
cmp
xchg
stos
jnp
dec
inc
xor
lock
xchg
pop
xor
inc
push
cmp
add
push
mov
mov
inc
int3
pushf
sub
hlt
stc
call
adc
add
rorl
lds
enter
test
jbe
dec
jo
jns
push
adc
aas
lods
xor
and
nop
lret
loopne
mov
call
adc
xchg
roll
xor
or
popf
add
sbb
xchg
push
fildll
add
xor
mov
popa
mov
mov
dec
testl
icebp
push
dec
mov
jbe
dec
adcb
sub
das
les
popf
fildl
cltd
adc
roll
push
imul
movb
pop
and
mov
add
fidivrs
sub
inc
loop
shr
ja
pop
sti
les
call
lcall
imulb
popl
shll
iret
and
push
inc
pop
ret
cmpsb
aam
xor
icebp
jae
sbb
add
movsl
das
add
jb
jmp
rclb
jl
jle
cmpsl
xchg
add
lcall
add
mov
xor
xlat
or
push
lea
add
std
sbb
push
lret
jge
sahf
jb
stc
ljmp
leave
ds
jbe
add
mov
rolb
sarb
mov
xchg
jl
stos
adc
pop
fcmovnb
inc
mov
jecxz
and
pop
add
mov
out
push
lahf
sbb
ss
ja
and
into
data16
pop
ficomps
daa
and
mov
add
jbe
ja
pop
loope
inc
aaa
xor
out
pop
out
cld
add
add
sbb
and
arpl
cltd
dec
or
jno
push
add
cld
sbb
movsl
push
fldt
scas
inc
pop
pop
and
xorb
jmp
jno
mov
out
addr16
pop
and
jg
mov
add
jmp
adc
nop
add
mov
add
mov
push
mov
je
imul
mov
push
cmp
jbe
adc
xchg
fsub
jne
add
adc
xchg
fnsave
shll
push
and
xorb
sbb
adc
repz
add
lcall
or
add
repnz
shlb
xchg
mov
mov
pop
rcl
cmp
sti
sub
addr16
mov
jnp
xchg
mov
push
mov
push
aaa
fiadds
ret
andl
repnz
addr16
test
loope
pop
xchg
push
sub
scas
adc
in
and
icebp
inc
mov
cmpsl
xchg
add
fbstp
add
dec
mov
sbb
subps
pusha
icebp
add
pop
dec
and
bound
test
add
clc
iret
fstpt
fiadds
stos
subl
ja
xor
cmp
nop
aaa
psubsw
fadd
xor
je
mov
cmp
jmp
ja
ljmp
incl
inc
rcr
adc
in
sahf
xchg
cs
test
and
das
pmulhw
rclb
xchg
jle
lds
iret
xor
push
jb
lods
add
jmp
add
jg
cmp
addl
stos
xor
dec
cli
cmp
sti
scas
rclb
cmp
in
xchg
sahf
add
sbb
add
push
adc
mov
or
out
sub
dec
setg
int3
or
sbb
inc
loopne
lret
add
aam
mov
ljmp
cmc
dec
or
insb
lods
lock
lahf
adc
mov
mov
xchg
push
mov
stos
xchg
jnp
ljmp
and
popa
push
sbb
add
or
push
push
imul
xor
in
sti
inc
std
into
mov
push
repz
insl
xor
cmp
pop
shlb
add
int
mov
outsb
add
push
cltd
and
jmp
rclb
mov
and
push
inc
stos
daa
fsubs
lods
adc
mov
cltd
clc
movsb
ljmp
pop
cmp
pop
in
cmpb
mov
das
pop
mov
jge
and
pop
dec
cmp
stos
xchg
xchg
fdivs
pop
add
jno
jp
xchg
call
out
insl
adc
mov
add
cmpsl
adc
fcoms
and
out
mov
rcrl
add
jbe
int
cmp
cmpsl
enter
loop
cmp
jne
mov
push
pushf
aas
sbb
add
mov
ret
ret
and
jp
pop
cmc
mov
out
inc
pop
inc
or
adc
js
fdivl
mov
add
push
mov
add
xor
sub
out
scas
lea
incl
in
or
mov
stc
add
push
jne
and
add
lods
mov
sbb
and
or
sti
mov
negb
add
sub
mov
rcrb
add
clc
sub
imul
mov
aam
add
ljmp
add
into
inc
push
shlb
cmp
ds
jbe
jg
or
pushf
add
mov
xchg
add
rcl
aaa
js
pop
jmp
jns
sbb
or
xchg
enter
loop
insb
or
adc
loopne
fs
dec
faddl
cmp
test
and
mov
mov
inc
lret
fadd
dec
push
xchg
test
jb
xlat
mov
rcr
jns
jge
adc
testl
iret
lea
test
adc
cld
fiadds
push
dec
ror
push
js
mov
jl
xor
mov
cmp
in
ret
insb
sarb
pop
add
cmpsl
iret
pop
push
mov
cmp
ret
xor
mov
adc
js
adc
or
test
cmp
ja
add
pop
notl
cmp
push
pop
add
or
push
mov
stc
lret
cmc
repz
cmp
sub
push
add
loopne
dec
adc
mov
add
xor
test
popa
bound
inc
sub
xor
repnz
pop
xchg
insl
add
jbe
and
jne
imul
lods
aam
jo
add
imul
sub
insb
js
cmp
cmc
es
in
repnz
lea
add
fsubrs
pop
inc
and
and
mov
lock
test
popf
xchg
mov
xor
push
mov
and
das
jmp
mov
push
and
rolb
sbb
push
or
stos
fisubs
add
lea
ds
daa
cmp
gs
movsb
pop
jb
repz
sbb
push
cli
inc
jmp
xchg
sbb
xlat
cmp
xor
add
dec
mov
and
sar
mov
add
popl
sbb
and
mull
or
je
fistpl
add
shl
ljmp
jp
ja
in
cmc
add
add
add
push
shlb
xchg
sub
xor
push
stos
shrl
add
inc
out
dec
cli
pop
and
imul
jo
pushf
lahf
add
mov
out
add
pop
test
and
add
ret
sti
sbbb
xlat
pop
and
cmp
jo
fsts
sub
add
xchg
add
jge
mov
lcall
jmp
add
jb
popf
add
stos
ror
jmp
xchg
sbb
aaa
imul
jo
push
stc
xor
mov
xchg
loope
mov
adc
es
dec
dec
shlb
pop
test
sub
xor
mov
ret
sbb
clc
adc
into
push
into
inc
inc
imul
cmp
popf
add
push
adc
dec
push
pop
jle
loop
jno
adc
add
enter
lods
inc
shlb
mov
cs
mov
and
shll
xlat
sub
insb
arpl
and
mov
or
xchg
inc
and
xlat
in
aas
cmp
jno
mov
loopne
cmp
add
pop
xor
inc
or
ss
mov
add
fptan
sub
sbb
scas
add
push
addr16
xchg
or
sbb
enter
push
cwtl
pop
testl
pop
inc
sub
jge
pusha
push
in
aam
sbb
fbstp
and
test
add
pop
xchg
daa
sbb
add
sti
ljmp
and
outsl
sbb
add
mov
cmp
xchg
inc
cmc
add
push
mov
cwtl
or
mov
push
int3
or
shrb
adc
mov
js
push
xchg
or
mov
stos
cmpsb
rolb
pop
push
jb
ret
cmp
clc
into
dec
or
add
jnp
xor
mov
jp
and
pop
sub
rol
sbb
test
inc
imul
scas
gs
add
psrad
into
mulb
mov
sahf
mov
in
imull
push
pop
mov
dec
pop
dec
daa
fcoml
inc
ret
mov
test
andl
mov
adc
rolb
aad
and
inc
test
push
jmp
jge
dec
xor
mov
rcl
pop
and
mov
add
fcoms
pop
push
adc
clc
inc
sub
pushf
add
dec
push
push
and
fisubs
lret
lcall
jo
or
and
out
add
add
and
add
mov
push
sbb
xor
out
cmp
sbb
popa
scas
add
fwait
addb
xlat
sbb
fstpl
and
lcall
push
xchg
shl
xchg
sbb
jno
pusha
rol
sub
mov
and
push
inc
push
inc
lds
sarb
adc
mov
loopne
shll
pushf
inc
popf
and
lea
or
cmpsb
in
outsl
mov
mov
or
ret
sbb
scas
push
addb
loopne
fsubrl
xlat
aam
add
lods
mov
loopne
jnp
xor
mov
mov
shrb
adc
mov
sbb
bnd
divl
and
out
negb
fbld
add
fnsave
iret
xor
pop
pushf
xor
inc
fldt
in
cld
xchg
lods
push
adc
inc
popf
movsl
add
jge
xor
rolb
psubsb
mov
add
stos
adc
add
fisubs
pop
enter
push
cltd
add
jno
ret
add
fcom
jmp
and
pop
mov
adc
dec
mov
pusha
add
dec
popa
insb
add
mov
adc
mov
and
ja
mov
inc
in
out
sub
sub
mov
repnz
into
xchg
add
cmp
or
xlat
and
add
lcall
cmc
imul
sbb
outsb
mov
enter
mov
add
frstor
dec
mov
mov
arpl
cmp
std
xchg
sub
in
lds
add
push
xacquire
daa
add
in
jecxz
jbe
push
addl
mov
sbb
in
mov
nop
sahf
out
and
pop
pop
cmp
cmp
dec
cmp
add
jmp
loope
xor
jl
inc
ret
jp
incb
test
fst
cltd
incb
sbb
rcl
sbb
js
fidivl
sbb
daa
arpl
es
sbb
in
gs
loopne
aas
mov
dec
sub
xlat
push
repz
jp
imul
stos
out
dec
out
xchg
test
ffreep
xor
and
addr16
gs
imul
aas
scas
or
add
out
cmp
and
mov
inc
mov
es
out
cmp
loopne
jmp
in
add
push
dec
loop
insb
imul
jbe
hlt
inc
imul
or
adc
or
js
sbb
mov
xchg
mov
iret
mov
jecxz
xchg
inc
jp
mov
test
inc
andl
loop
test
sti
aam
inc
outsl
aas
push
sub
adc
lea
xor
mov
cmp
pusha
lret
fs
into
mov
add
adc
dec
cmpsl
ret
xchg
into
cmp
add
cmpl
adc
xchg
jns
lods
push
xchg
mov
adc
push
lods
adc
out
pop
add
push
mov
or
imul
mov
pop
mov
enter
and
add
sub
cli
add
add
sbb
bound
orb
pushf
aad
shll
testb
pop
rcrl
test
push
sbb
or
dec
into
xchg
std
insb
mov
pop
outsb
into
scas
sti
and
mov
iret
push
adc
pusha
clc
mov
mov
stos
mov
arpl
hlt
aas
mov
roll
jae
and
stos
xchg
addl
jbe
lahf
mov
xchg
sbb
scas
fdivrl
adc
pop
adc
cmp
add
in
das
test
dec
fadds
jp
xor
lods
sarb
add
imul
out
ret
or
xchg
clc
dec
lahf
adc
jo
sbb
test
lea
and
jmp
jmp
mov
dec
push
aam
data16
nop
pusha
cltd
cmpsl
fldcw
and
xor
inc
popl
pop
fldt
jp
iret
sub
xchg
jp
in
push
and
shufps
daa
push
sub
adc
add
mov
addl
jp
adc
add
in
insl
andb
loopne
jl
lret
mov
jge
jp
imul
stos
sbb
push
jbe
mov
jb
xchg
sub
add
sahf
mov
push
add
insl
sti
adc
lret
adc
mov
lock
sub
cmp
test
jno
enter
cmp
dec
cmp
add
mov
icebp
xor
rcll
inc
in
rcr
test
and
and
push
push
push
aas
pusha
cld
ret
mov
sub
hlt
pushf
out
jge
push
pop
adc
cli
sub
and
jle
sub
lock
out
lahf
cwtl
or
in
cmpsl
mov
add
lret
dec
out
add
and
xchg
cwtl
cltd
sub
lcall
fs
lea
mov
xchg
out
or
addl
or
aad
push
and
and
xor
inc
test
fisttpl
xchg
test
lret
push
shrb
insl
adc
jp
sbb
xchg
inc
add
adc
mov
aas
pop
data16
sbb
inc
cmp
pop
aas
push
inc
ret
lods
jp
and
adc
mov
int
add
or
or
sub
pop
xlat
dec
lahf
cmp
xchg
cmp
std
fstpt
ja
int
sbb
ret
xor
xor
add
pop
dec
lcall
xchg
scas
fsubp
pop
sub
xor
outsl
mov
adc
pop
adc
jns
add
sbb
mov
es
mov
or
mov
and
mov
jne
daa
sub
in
push
xchg
mov
cmp
jp
cs
cmp
in
and
lds
sub
sbb
cmp
jbe
dec
out
fdivrp
adc
or
xorb
scas
or
popf
and
shll
fucomp
jo
mov
jno
dec
and
sarb
outsb
loop
jo
mov
cmp
xor
lods
std
jle
cld
and
sub
in
xor
push
or
xorb
cs
push
aad
adc
cmpsl
sbb
adc
adc
sub
jmp
ss
inc
mov
adc
outsb
or
test
push
add
xchg
add
ljmp
jno
arpl
jg
xor
mov
pop
inc
and
lcall
pop
test
fimull
daa
cmc
adc
xor
xor
sbb
sbb
out
loop
or
cmp
add
sbb
orb
jbe
aaa
popa
or
fldl
fstl
add
pop
rcll
daa
out
dec
stos
sbb
xor
add
mov
cmp
or
sbb
adc
sti
adc
arpl
jb
cmp
adc
testb
outsl
inc
mov
shl
push
sub
or
ficomps
movsl
repnz
cmp
add
adc
sub
shrb
adc
test
orl
jg
popa
ret
repnz
test
into
push
push
shlb
or
cmp
into
mov
sbb
lea
out
and
test
mov
pop
test
fldz
mov
sbb
mov
scas
pop
push
add
push
pushf
sbb
cwtl
fstp
psrld
bound
addr16
and
push
and
add
jl
cmpl
not
cmpsb
push
sub
rcrl
dec
push
cltd
add
and
ret
gs
arpl
sbb
push
leave
inc
sbb
in
or
cmp
push
adc
sub
les
xchg
or
dec
and
and
sbb
sub
and
dec
add
pop
add
xor
imul
fdivs
fmuls
jne
adc
xor
bound
dec
test
sbb
pop
push
mov
lods
fimull
in
ss
or
xchg
or
xlat
cltd
dec
mov
pop
dec
daa
push
lock
clts
add
mov
data16
aad
popf
leave
add
and
cmp
dec
cmp
enter
xlat
add
rcr
lcall
dec
aaa
fstp
lret
fistpl
sbb
jnp
aam
ja
lret
jb
ds
es
xor
outsb
and
and
lods
push
les
in
cs
push
jge
add
and
mov
out
lret
inc
fiaddl
cmp
jge
push
arpl
push
and
hlt
cmp
out
and
jmp
jp
xor
push
je
adc
add
dec
sbb
push
shlb
mov
leave
dec
je
inc
xlat
lcall
test
sub
add
ret
xor
add
jp
stos
pop
clc
gs
and
and
push
lret
jmp
push
push
adcb
scas
jno
add
xor
lock
cmpsl
pop
mov
mov
cmpsb
mov
or
and
ds
jno
mov
and
cmp
sahf
lods
adc
and
jae
test
jp
and
inc
add
mov
cmp
jb
jns
cmp
das
adc
xor
add
fsin
sub
loope
inc
or
mov
add
or
dec
add
lcall
dec
hlt
arpl
or
push
repz
enter
sbb
sbb
popa
sbb
filds
repz
inc
sbb
push
adc
cmpsb
insl
push
xlat
dec
aam
push
mov
jp
sub
mov
out
xchg
mov
addl
fs
mov
adc
push
xchg
mov
mov
mov
orl
scas
add
xchg
add
jo
das
jp
pop
xor
out
fsubs
push
cmp
push
dec
out
adc
push
movsb
xor
pop
push
insl
cmp
jg
push
dec
xlat
push
in
sub
bound
or
cmp
sub
mov
stc
lods
mov
and
sub
dec
adc
jecxz
jnp
jle
mov
or
push
add
mov
add
jp
addb
push
dec
add
mov
push
fists
add
in
and
lret
add
inc
fs
push
xchg
ret
jp
adc
daa
test
sahf
mov
pop
mov
inc
inc
push
xor
and
inc
mov
cmp
jns
add
push
aad
cmp
test
jge
icebp
add
mov
nop
add
pop
xor
push
jle
add
inc
ja
and
push
xchg
fstl
shrl
lods
mov
inc
xor
pop
mov
and
mov
aam
xor
jge
lea
add
xor
inc
dec
inc
pop
movsb
xor
adc
sbb
add
cld
push
test
xchg
lret
rol
add
clc
add
cs
add
xchg
cmpl
ss
add
ja
fsubrl
cmc
xor
adc
outsb
jb
pop
int
adc
push
out
loope
or
xor
movsb
mov
sbb
xchg
imul
enter
stos
xchg
sbb
rol
ret
mov
shll
frstor
xor
call
xchg
adc
repz
gs
and
fisttpl
test
sbb
jbe
pop
fwait
cmp
faddl
inc
inc
scas
cmp
and
add
jb
sbb
mov
or
mov
mov
jg
add
add
dec
mov
rolb
push
add
mov
mov
jg
dec
jns
add
add
insb
and
push
add
stos
shrb
cli
outsl
push
add
cmp
adc
sahf
out
imul
test
add
frstor
mov
pusha
dec
ret
inc
add
int3
dec
loop
roll
std
xlat
je
sti
mov
and
les
faddl
sbb
or
testb
scas
xchg
rclb
jecxz,pt
out
mov
push
dec
mov
jp
bound
insl
fs
adc
pop
pop
mov
mov
jbe
fadds
dec
add
loope
leave
daa
imul
mov
and
or
adc
mov
lea
in
leave
mov
xchg
inc
mov
je
iret
push
add
outsb
movl
push
leave
jg
add
mov
lahf
mov
dec
pop
call
dec
loopne
add
adcl
fisubs
pop
xchg
adc
divb
adc
test
repz
sub
loop
inc
add
xchg
pop
and
and
mov
into
sahf
mov
jb
ss
pop
pop
incl
xchg
xchg
imul
movsb
push
lods
into
loope
inc
add
push
inc
xor
add
dec
xadd
or
loope
ret
mov
cmpl
dec
adc
push
leave
sub
mov
inc
icebp
push
xchg
or
mov
and
test
enter
popa
add
bound
add
clc
jo
and
pop
leave
add
xchg
dec
or
nop
add
insb
add
jbe
adc
mov
push
shll
jb
fnstsw
and
adc
cs
mov
fidivs
lahf
fdivrl
ss
out
fnsave
pop
jae
inc
loope
dec
xor
xor
sub
adc
pushf
repnz
enter
sqrtps
push
xchg
mov
jb
dec
mov
pop
fdivrs
add
subl
pop
cli
xchg
bswap
inc
inc
insl
adcl
push
shlb
in
decl
adc
adc
add
adc
aad
jl
xor
imul
lret
and
test
cmp
mov
add
mov
inc
cmpsl
out
fldl
or
lds
sbb
popa
mov
fs
pusha
mov
add
neg
insl
jo
pop
cs
mov
push
mov
inc
int
mov
loope
cmp
dec
loop
std
fsubr
xor
mov
cmp
imul
roll
rorb
xor
aaa
icebp
jge
aas
add
mov
andb
xchg
dec
pop
xor
push
jae
int
xor
hlt
ret
mov
mov
cmp
frstor
ds
add
clc
push
roll
test
in
out
add
or
mov
add
adcl
or
pop
mov
stos
sub
xorl
mov
repnz
xchg
add
lock
pop
pop
mov
enter
add
sub
daa
out
aam
mov
inc
inc
mov
ds
movsb
fcoml
inc
or
punpckldq
mov
push
and
mov
je
cltd
shll
lea
sbb
or
jnp
inc
inc
loop
je
jge
xor
sti
add
sbb
push
cmpsl
mov
adc
add
or
or
int
ss
loop
or
pop
lock
add
aaa
mov
dec
test
xchg
push
pop
lcall
xor
xchg
sub
int
pop
dec
ljmp
or
mov
bound
lahf
push
iret
push
popa
add
gs
rolb
lea
sub
jbe
imul
adc
adc
test
cltd
mov
lcall
cs
xchg
add
loope
add
pop
mov
xchg
pop
mov
push
fcmovbe
frstor
push
inc
dec
cltd
sub
shrb
loop
pusha
scas
dec
add
push
nop
push
jns
jge
or
mull
shl
sbb
mov
push
sahf
inc
sbb
das
pop
into
push
icebp
fs
mov
in
cmpb
outsb
ljmp
push
ret
repz
lret
push
stos
inc
inc
add
in
dec
and
cmp
icebp
popa
push
and
jmp
mov
pop
jge
xor
rcrb
dec
aas
and
pop
push
mov
ret
es
clc
iret
lret
push
scas
and
arpl
test
pop
mov
shll
add
pop
jbe
es
mov
lahf
mov
sbb
iret
mov
test
mov
pop
lds
and
out
mov
mov
imul
imul
or
into
addr16
mov
bound
dec
push
ret
scas
decb
ss
out
add
fildl
aaa
ficomps
mov
repz
sbb
push
pop
pop
popa
pop
add
xorb
or
push
sti
pop
mov
sub
cmp
loope
cltd
lret
lret
push
ljmp
add
add
pop
pop
ret
inc
mov
or
mov
mov
sbb
add
or
xor
xchg
iret
add
fists
jecxz
outsl
stos
xchg
dec
sub
or
inc
push
enter
faddl
sbb
add
fdivs
negb
mov
pop
and
pop
push
out
push
cmp
add
mov
stos
jecxz
jl
sahf
sbb
ljmp
add
inc
dec
into
jno
jge
add
mov
fisubs
inc
pop
mov
cmp
xor
cmpsl
or
add
push
inc
xchg
add
mov
lret
mov
cwtl
add
pop
pop
mov
add
adc
sbb
jmp
xchg
add
adc
mov
push
mov
loopne
jp
test
jp
mov
xor
addl
push
jno
in
int3
push
push
dec
rclb
pop
and
daa
js
pop
hlt
neg
in
jecxz
adc
int3
mov
add
jle
out
xchg
push
repnz
roll
orl
add
inc
jle
sahf
ret
inc
rol
push
and
sub
or
dec
cmp
jg
ret
std
pop
add
loope
cld
mov
add
test
roll
mov
xor
cmp
add
mov
lea
dec
shlb
push
cld
push
add
imul
das
mov
pop
ljmp
sbb
add
int3
push
fbld
aas
add
pop
mov
sbb
imul
push
mov
sar
push
test
ret
xor
gs
scas
call
push
inc
cs
insb
out
jae
dec
xlat
sub
and
dec
test
add
negl
ja
inc
in
jnp
push
jb
aas
inc
pop
cmp
fsub
add
jnp
cmp
ret
insl
mov
mov
outsb
lods
pusha
jo
xor
ret
add
sub
push
popf
scas
mov
das
mov
leave
shll
inc
arpl
mov
jno
loope
scas
pop
mov
ds
or
lret
push
mov
push
add
xor
sbb
mov
iret
in
aas
jo
rclb
and
pop
mov
xor
addr16
fidivrl
test
imul
mov
incb
inc
jmp
ret
mov
sbb
dec
jle
add
andb
imul
sbb
sbb
push
sbb
cmp
outsl
cltd
add
adc
adc
mov
sub
ret
mov
ds
cmp
sbb
js
ds
out
sbb
xchg
dec
mov
mov
cmp
jecxz
cmp
mov
cli
sbb
push
loope
jecxz
dec
int3
xorb
or
test
pop
cltd
lods
push
or
shll
lods
out
ret
mov
push
cmp
dec
cmpsb
sarb
jns
xchg
addr16
adc
mov
out
test
dec
daa
loopne
shrb
and
push
arpl
je
scas
cmp
aam
sbb
js
cwtl
push
lret
or
jp
lcall
mov
sub
fsubl
imul
int
sub
scas
or
std
push
or
and
xchg
outsl
aad
adc
test
inc
add
pop
out
dec
sub
rol
in
cmp
ljmp
pop
and
test
push
jle
add
inc
arpl
ret
mov
cwtl
inc
ja
inc
pop
add
testl
cmp
ret
ret
sarl
adc
repnz
xor
inc
std
sbb
or
fadd
outsb
inc
xor
out
mov
jp
frstor
mov
mov
jle
add
movsl
inc
jp
mov
rorb
cwtl
jecxz
imulb
push
and
cmp
mov
in
lahf
push
cwtl
fucom
gs
sub
ret
adc
in
xor
sbb
sbb
cmp
loop
shlb
xchg
mov
loopne
std
insl
iret
aaa
cltd
ret
mov
scas
mov
ret
add
out
jo
inc
jp
out
sbb
data16
rol
inc
cmp
fists
mov
inc
and
mov
outsb
xor
ret
subl
and
jge
sub
dec
lret
outsl
in
ret
push
mov
hlt
ret
pop
shrl
dec
into
in
rolb
mov
mov
add
xchg
ret
adc
stc
cmp
orl
xlat
les
sub
cmp
rcr
jae
repnz
or
cmc
ss
push
inc
add
jmp
frstor
inc
adc
inc
and
push
call
jnp
ret
cmp
fs
repz
test
jmp
or
jmp
and
add
add
inc
xor
jno
sbb
mov
jp
pop
lret
ret
leave
loopne
push
flds
jae
out
int3
aaa
imul
inc
rol
addb
add
mov
jae
das
imul
push
in
popa
dec
iret
addb
add
adc
jmp
sbb
mov
icebp
test
mov
lods
jecxz
push
addr16
add
movsl
pop
pop
pop
xchg
clc
outsl
loopne
xor
lock
rcrl
je
cmp
xor
nop
ret
icebp
stc
inc
and
add
mov
cs
add
sahf
mov
and
sub
dec
and
sub
add
mov
mov
cli
popf
or
xor
scas
xchg
cmp
jo
dec
dec
out
push
dec
sub
aam
xchg
pop
iret
mov
mov
aaa
loop
adc
push
cmpsl
fucomip
add
add
arpl
sti
jnp
les
sbb
std
cmp
pushf
xor
add
aaa
mov
cmpsb
in
mov
mov
bound
call
lds
jmp
daa
test
sbb
shrb
sub
xchg
add
jge
lds
aaa
cwtl
pop
jle
and
movl
test
mov
popl
sbb
mov
dec
pushf
inc
push
adc
xor
and
jno
add
in
push
cmp
rdtsc
jmp
adc
sarb
and
adc
add
mov
inc
fsts
and
roll
xor
jne
add
inc
imul
pop
adc
xor
mov
leave
cmc
add
push
push
add
ret
sahf
loopne
loop
fnstsw
mov
dec
push
adc
jge
pop
lret
xchg
sti
add
adc
rcrl
es
sbb
pop
aaa
add
leave
inc
iret
loope
ljmp
jne
add
ss
cltd
xchg
lahf
aad
fdiv
pop
jl
gs
lock
mov
add
hlt
mov
inc
add
adc
pop
lret
mov
sbb
jbe
add
lcall
add
push
jle
and
roll
xchg
sbb
or
movsb
roll
je
pandn
imul
dec
and
rdpmc
paddw
sbb
xchg
or
ret
int3
test
test
je
jg
or
jb
add
mov
int
push
in
xor
sti
add
mov
lret
fisubs
push
add
add
push
add
add
and
inc
push
movb
fs
xchg
iret
sbb
loop
xor
sahf
cmp
fwait
or
cwtl
adc
pop
mov
repz
loop
add
addr16
aam
test
outsl
add
sarl
push
repnz
sbb
xor
nop
adc
adcb
enter
loopnew
pop
insl
pop
ret
add
sti
cmp
hlt
sub
int
jecxz
and
sub
rolb
jmp
cmpsb
sti
mov
test
jg
rcrb
imul
or
mov
cmp
scas
fnsave
cmp
lahf
rorb
adc
pop
add
dec
jbe
add
mov
fnsave
mov
add
sahf
dec
imul
pop
add
inc
cwtl
push
lock
inc
ficomps
in
mov
int3
add
inc
jo
in
xorl
ds
cmp
popf
mov
mov
xchg
adc
add
ja
dec
xchg
pushl
out
mov
clc
xor
jbe
sahf
ret
jl
pop
xor
xor
or
xor
xor
cmpsb
add
aas
int3
xchg
jnp
add
add
fiaddl
insb
dec
bound
inc
mov
lea
add
xchg
dec
insl
jle
rcrb
inc
repz
sarl
clc
add
sub
adc
lods
xchg
rcrb
pusha
and
lret
stc
dec
jo
out
ret
ror
jnp
stos
mov
add
or
lcall
xor
xorl
adc
push
test
cld
inc
je
and
push
rol
mov
push
dec
mov
mov
xor
orb
cmpl
ljmp
add
out
cmpsb
in
imul
loope,pn
movups
and
pop
mov
mov
lods
enter
adc
pop
xor
stos
and
push
in
outsb
addb
add
test
lahf
xorl
add
and
mov
inc
cld
loop
push
mov
add
fdivp
stos
inc
ss
xchg
xchg
xor
icebp
mov
and
rcll
loop
cmp
std
inc
negl
xchg
xor
and
lea
jp
sub
pop
adc
loopne
lret
add
and
outsb
aam
rorb
xchg
popf
imul
or
std
enter
lods
cmpl
add
cmpsl
mov
xchg
and
data16
aas
hlt
add
lds
rolb
ss
inc
lret
lea
pop
xor
cmovo
out
pushw
xchg
sbbl
jg
ror
fwait
xchg
xchg
add
outsb
inc
jb
xchg
arpl
xor
add
out
sti
lods
xchg
ds
lahf
test
pop
jecxz
mov
rcll
xor
fnsave
fbstp
or
addr16
in
hlt
pop
xor
aas
push
add
and
push
mov
pop
dec
sub
loope
mov
inc
popa
cmpsl
and
orl
roll
xchg
push
subb
sub
add
test
in
mov
cltd
andl
lret
mov
or
xor
jge
inc
push
pop
sub
fs
out
jae
mov
imul
adc
adc
add
xchg
cs
and
mov
and
les
cwtl
push
adc
inc
mov
xchg
mov
cmp
leave
into
stc
in
add
mov
or
fstpt
mov
ret
xchg
add
pop
dec
stos
aaa
outsb
cmp
add
sbb
aas
add
cld
mov
mov
gs
clc
push
aam
es
add
in
shlb
pushl
mov
cmc
into
xchg
insl
and
jbe
lods
adc
ret
mov
pop
inc
pop
add
jae
faddl
pop
lcall
add
and
addr16
out
add
pushf
shr
aad
leave
stos
add
mov
add
pop
lds
xor
add
mov
loop
pop
cmc
iret
cmpb
ja
pop
pop
mov
ret
xchg
clc
mov
scas
add
sbb
push
out
int3
jns
add
movsb
sub
jp
imul
shr
mov
lcall
cmc
sub
orb
adc
add
ds
xchg
add
mov
js
add
mov
xor
pop
in
add
add
leave
xchg
and
push
add
aam
aas
incb
jae
aad
and
cmp
jmp
or
sti
xor
imul
mov
repnz
push
aas
rcrb
outsl
add
xor
sbb
out
mov
pop
add
jmp
jne
add
jns
mov
cmp
add
push
xchg
shl
shlb
or
rcll
push
repz
cmp
sub
insb
jnp
jns
inc
stos
sub
leave
div
push
jnp
ja
jle
xor
push
mov
daa
cld
popa
iret
jb
bound
pop
add
and
clc
stc
pop
fidivrs
and
adc
push
not
mov
and
in
pop
cmpsb
mov
fwait
mov
push
int3
cmp
loope
push
or
rolb
push
pop
lahf
dec
hlt
add
lahf
aad
mov
jge
in
xchg
cmc
cmp
adc
sbb
cmp
inc
mov
cmpsb
test
test
shll
leave
cmp
lahf
dec
pop
ja,pt
out
sbb
adc
xchg
pop
adc
rorb
and
sbb
loop
mov
ds
call
pushl
cmp
ret
inc
iret
mov
notl
cmp
adcl
sbb
adc
ret
and
jp
and
arpl
in
adc
lret
push
pop
xchg
xor
ret
sbb
adc
push
loop
pop
mov
cmpsb
scas
and
ja
daa
enter
loope
xchg
bndldx
mov
xchg
push
dec
pop
add
mov
and
sbb
cmp
repnz
mov
out
cld
neg
mov
or
jp
adc
push
cmp
push
leave
aad
mov
mov
jecxz
mov
out
or
jp
xchg
std
jb
mov
cmpsb
or
xchg
add
imul
add
push
xor
loopne
rorb
cltd
add
pop
insl
mov
sub
dec
push
mov
enter
xor
jbe
add
add
fwait
aaa
les
int
pop
and
lret
inc
cmovns
inc
fisubl
xlat
adc
dec
insl
pusha
pop
inc
in
insb
js
rcrl
stc
mov
cmp
out
adc
push
add
push
les
mov
jecxz
mov
test
and
xchg
xor
rclb
jmp
push
iret
add
cmpsl
lcall
loopne
dec
call
inc
push
rclb
xor
rol
pop
and
add
mov
add
xchg
sbb
sbb
test
inc
sets
lds
push
sbb
or
add
repnz
push
push
jne
ljmp
in
sub
sub
adc
cmc
xor
add
nop
insb
mov
dec
xor
sbb
sub
repz
loop
lahf
mov
push
stos
roll
fisubrs
mov
je
rcr
mov
int3
sarb
jp
adc
add
jl
faddl
cmp
jns
mov
add
sbb
pop
pop
rcl
scas
push
or
mov
lods
punpckhbw
mov
inc
inc
jnp
mov
bswap
in
ds
fsubrs
fldt
add
stc
dec
jbe
pop
sbb
aaa
xchg
mov
pop
xchg
add
jnp
mov
xchg
loop
cli
lahf
nop
mov
mov
and
pop
inc
hlt
mov
mov
loop
add
inc
pop
sub
mov
mov
jb
mov
es
add
leave
cmc
pushf
sub
in
movsl
int
sbb
mov
mov
sbbl
push
repz
rcr
xlat
or
in
add
lret
js
xchg
adc
inc
scas
popa
push
mov
ret
inc
and
das
in
pop
sbb
mov
lds
sub
add
rolb
rolb
cmp
loop
cmc
cmp
test
scas
or
add
movsb
add
jno
dec
fs
pop
fildl
insl
add
mov
add
sbb
xchg
fmull
sbb
xor
les
test
pop
data16
jl
scas
add
jg,pt
or
push
dec
add
imul
sbb
xor
in
jo
inc
push
imul
add
add
movsb
lea
shlb
xor
mov
gs
movl
mov
test
and
cli
xchg
mov
hlt
and
rcr
enter
pop
fldcw
xor
ret
insl
cmpsl
push
lods
add
add
test
nop
sbbb
std
adc
adc
out
sbb
iret
out
mov
xchg
mov
cmp
sarb
inc
loop
icebp
add
pop
mov
sub
add
outsw
push
addb
lods
les
popf
add
out
cli
mov
fmuls
and
out
add
scas
or
mov
sbb
push
jg
pop
jle
jmp
add
push
mov
add
repz
outsb
test
xchg
sbb
icebp
pop
or
add
inc
cmp
lods
and
mov
xchg
sbb
rorb
xchg
int3
cmpsb
leave
shlb
mov
push
andl
gs
rorl
mov
push
push
pop
testb
fs
or
fidivrl
add
push
cmp
cmp
les
sarb
mov
mov
adc
xchg
sarl
divl
pop
add
sbbl
out
add
shrb
and
dec
add
subl
out
movsb
in
add
xchg
mov
mov
push
cmp
inc
popf
aas
in
rcrb
cwtl
js
adc
test
les
adc
dec
add
fwait
mov
push
inc
fs
scas
idivl
mov
dec
sti
jb
mov
add
lea
mov
push
cwtl
iret
cmpb
or
jbe
adc
outsb
add
dec
or
ljmp
inc
sub
pop
jmp
jo
sbb
nop
mov
cmp
jp
cltd
inc
jl
clc
add
lods
push
adc
cmp
mov
sub
rol
ss
je
pushf
add
sbb
sbb
adc
fadds
mov
push
in
add
or
xchg
ficomps
jecxz
pop
sub
adc
test
xchg
xchg
push
sub
jmp
ror
jle
mov
or
movsb
cmp
out
mov
jbe
daa
jge
mov
data16
cmp
inc
ficoml
addb
mulb
imul
add
mov
subb
jp
addr16
inc
inc
lret
loope
jo
cmp
xor
fistps
dec
dec
loopne
add
ds
addr16
loop
add
lea
rcrb
ss
add
jmp
mov
scas
xchg
rorb
das
and
push
push
or
out
outsl
xlat
sbb
push
pop
ja
inc
or
mov
scas
nopl
ret
mov
repz
popa
pop
or
aam
sbbl
mov
sbb
fs
and
mov
jg
push
movsb
loopne
mov
call
mov
push
add
scas
loope
aas
enter
mov
mov
add
inc
jp
pusha
sub
ds
pop
cmp
pop
dec
arpl
inc
test
cmpsb
out
adc
icebp
add
push
push
pop
pop
mov
jp
mov
data16
and
add
arpl
lret
push
mov
mov
mov
mov
mov
movl
mov
arpl
dec
mov
mov
push
pop
add
lods
jns
jl
test
jmp
ljmp
fldcw
xchg
add
xchg
sbb
add
mov
mov
lods
add
sub
stos
out
xchg
dec
inc
bound
sahf
daa
xor
rcrb
ja,pn
rcll
std
imul
add
lods
mov
rcl
inc
jge
adc
sub
mov
adc
fldenv
insl
add
jg
jge
popa
mov
out
mov
push
jae
pop
jle
rcrl
aas
pop
add
fisttps
pushf
add
xlat
push
add
shlb
fidivrl
sahf
add
int3
aam
pop
jnp
add
pop
scas
cs
addr16
and
adc
xchg
cld
mov
xchg
jmp
cmpsb
insb
jo
cmp
add
ret
fimuls
mov
imul
add
push
push
pop
in
adc
mov
add
subl
push
jle
xchg
cmp
leave
inc
sbb
sti
mov
add
scas
out
mov
enter
xor
add
and
and
iret
aam
jnp
xor
sbb
push
lahf
pop
mov
cmp
arpl
adc
scas
xchg
cwtl
add
insb
hlt
xor
ret
mov
cmp
xor
and
xchg
mov
inc
push
iret
sbb
movsb
sbb
add
cs
push
fsubrl
mov
add
repnz
add
jg
mov
jbe
jnp
testb
jl
jge
daa
bound
ret
les
cmp
jge
in
lock
sbb
call
iret
movsl
xchg
push
aas
scas
xchg
pusha
mov
lret
sub
cmp
nop
push
jle
cld
sbb
jp
pop
aas
pop
in
push
in
jnp
jp,pt
sub
and
mov
cmpsl
mov
mov
test
loop
push
addr16
sub
and
outsl
sub
jp
shlb
cmp
add
mov
faddl
mov
cmp
push
add
pop
test
adc
and
sbb
xor
mov
shr
repnz
aam
xchg
jp
cld
movsb
adc
jg
iret
or
jle
mov
sbb
les
lods
xchg
push
sub
cmpsl
mov
and
daa
ljmp
jae
mov
inc
les
pop
inc
into
decb
xchg
dec
stos
lods
out
add
xchg
push
jg
fstpt
cmp
add
xor
fdiv
inc
xchg
jne
cmp
dec
jg
aas
lea
ret
in
out
or
cs
outsb
cmp
in
cmp
movsb
add
insb
add
mov
and
or
call
sbb
mov
test
push
ljmp
mov
in
mov
dec
add
in
adc
aaa
sbb
aas
mov
fisttpll
or
mov
ret
movsl
lods
outsl
dec
lret
mov
jle
add
and
fisubrs
inc
mov
iret
adc
pop
xchg
pop
leave
or
xchg
push
sahf
mov
xchg
push
push
pop
inc
push
int3
lods
mov
cmp
shll
push
imulb
cmp
popa
inc
adc
in
inc
mov
and
ret
mov
int3
clc
divb
adc
addr16
popa
data16
sub
add
push
popf
and
dec
xchg
rclb
mov
js
sete
add
xor
add
mov
lds
hlt
sbb
jne
movsl
mov
inc
push
pop
sbb
adc
rorb
fsubrs
lret
pop
stc
or
inc
add
xor
mov
shll
xchg
fwait
sbb
mov
cmc
pop
xor
scas
add
lods
push
pop
adc
add
add
mov
add
inc
stos
rorl
rolb
js
xchg
dec
les
jp
int
adc
out
push
nop
mov
xchg
addb
aad
mov
fldenv
or
xor
mov
add
jge
cmp
rol
lods
adc
cmp
data16
add
test
xchg
dec
popa
clc
add
xor
push
repnz
adc
test
imul
and
mov
dec
jecxz
inc
mov
add
nop
mov
lods
add
insl
mov
jmp
or
hlt
inc
ficompl
insb
inc
and
je
lea
jecxz
arpl
test
lret
repnz
shl
fisubs
dec
mov
jl
std
cmp
scas
xchg
add
jns,pn
int
and
insl
xor
pop
int3
dec
cmpsl
in
push
sub
lahf
out
jne
fstpt
iret
mov
cmpsb
out
push
xchg
ja
and
or
fmuls
adc
push
mov
iret
add
cli
xchg
dec
mov
jae
sbb
sub
mov
lahf
int3
lret
add
xlat
jle,pt
in
xchg
mov
lret
mov
add
nop
es
adc
into
ret
test
push
push
add
xchg
lea
rcr
pushf
jne
adc
inc
adc
add
aad
add
cwtl
mov
js
mov
add
int3
jmp
loopne
inc
imul
mov
jb
push
or
mov
shlb
mov
insb
pop
loopne
scas
add
add
mov
clc
pop
push
and
adc
sahf
inc
shlb
sti
adc
add
add
idivb
mov
shl
jge
mov
out
xor
adc
adc
outsl
inc
and
popf
inc
jmp
cmp
cmpl
sub
or
cmp
mov
inc
not
push
in
xchg
nop
sub
dec
call
fildl
cmp
adc
mov
or
leave
inc
or
mov
ja
xlat
mov
addr16
scas
cmpsl
adc
in
loope
loopne
lods
or
ret
adc
sahf
pop
cmp
push
add
xor
push
mov
shrb
lods
sbb
enter
xorb
or
loop
dec
fstpl
test
ret
mov
into
add
int3
cli
and
sbb
hlt
shr
gs
push
sbb
add
aaa
cmp
inc
movd
and
push
adc
or
mov
cmp
in
sub
and
inc
fsubl
insb
fwait
add
mov
add
inc
and
cld
add
push
lock
sahf
and
mov
and
sbb
aas
hlt
adc
jns
rdtsc
lock
inc
mov
lods
and
inc
addr16
jge
notl
xor
or
inc
lds
cs
incb
sub
imul
test
mov
add
nop
xchg
shrl
fwait
add
mov
inc
lea
pushf
flds
mov
jno
or
out
test
push
adc
push
adc
mov
add
sbb
dec
out
mov
insb
int
ficompl
add
pop
or
xchg
xchg
cmp
outsl
dec
pop
fldenv
mov
mov
and
sub
xor
dec
sbb
and
push
fildl
mov
arpl
lcall
cmp
add
leave
xlat
ficoml
rcrb
cmp
lods
pop
je
int
xor
push
scas
inc
mov
les
ss
pusha
pop
mov
xlat
sti
cmp
pop
push
daa
cmp
mov
int3
pop
frstor
add
hlt
fdivrs
stos
dec
andb
xor
mov
mov
and
dec
fisubrs
pop
mov
or
mov
or
out
push
add
lods
out
xchg
leave
pop
lret
xchg
xor
push
add
fdivp
xchg
adc
add
je
mov
or
cli
std
mov
push
push
scas
loop
cmp
add
push
lret
mov
jmp
shlb
sbb
push
lock
jno
sahf
xchg
add
xor
add
test
in
jmp
test
je
out
adc
add
or
imul
mov
mov
add
xor
out
popf
add
aaa
and
js
push
nop
xor
jle
jo
xor
rcr
test
mov
push
add
jmp
sub
popf
test
pop
popa
add
shlb
add
xor
inc
cmp
rcrl
sub
pop
scas
xchg
aaa
inc
add
imul
add
push
adc
icebp
inc
cmp
jno
sbb
adc
push
test
dec
add
sub
ss
add
mov
sub
xor
jl
add
mov
add
sar
leave
or
xor
stc
pop
add
repz
lret
add
das
pop
add
addb
xlat
outsb
inc
jl
sbb
pop
aas
sahf
mov
shr
mov
push
sub
add
xor
or
jno
xchg
add
lock
add
sub
cmp
add
jbe
mov
pop
push
rol
sbb
dec
cmp
enter
inc
jmp
and
les
lahf
roll
sub
add
divl
add
aam
lret
or
mov
sub
or
add
jbe
dec
or
inc
ja
lods
add
mov
jnp
sbb
and
xchg
pop
cmp
add
cmc
mov
xchg
icebp
mov
pusha
cmp
lret
aaa
inc
adc
rcrl
jb
nop
sbb
mov
mov
xchg
lahf
cmp
cwtl
fisttpll
jmp
add
push
add
adc
sub
jb
lds
xor
lock
jmp
rcrl
adc
shrl
sub
sbb
add
call
fwait
and
fnsave
sbb
add
iret
sarb
fildl
mov
aam
ret
or
jle
adc
repnz
stc
enter
testb
add
xor
das
push
or
sub
aad
shll
dec
insl
add
mov
lea
mov
mov
incb
aaa
stc
sub
mov
out
mov
stos
dec
add
pop
rcr
js
cld
add
cmp
orb
call
pop
repz
jmp
inc
jmp
sub
cmpsl
shrl
std
cmp
jg
fst
lahf
ret
ret
jnp
pop
pop
sbb
xchg
imul
sbb
fiadds
stc
popa
add
cli
pop
sbb
adc
jnp
xchg
or
sbb
jge
jno
xchg
add
mov
aam
out
sahf
clc
outsb
adc
testb
stos
xchg
repnz
push
in
ret
push
jb,pn
adc
insl
xor
pop
or
sbb
pop
mov
fstpt
xor
xor
mov
aam
and
xor
dec
cwtl
je
jg
pop
xor
inc
rol
add
add
dec
mov
ljmp
movsb
ret
xchg
pop
add
andb
mov
mov
and
fs
add
cmp
in
cwtl
jbe
sbb
fbld
add
out
mov
jb
nop
shll
pop
push
or
das
xor
push
add
mov
es
je
xchg
jmp
xor
ret
pop
inc
pop
shll
inc
js
add
jae
or
push
pop
std
pusha
out
cmp
testl
repnz
in
ret
and
into
sahf
data16
add
sub
push
rorl
pusha
xchg
add
and
mov
call
std
adc
loop
bound
or
mov
imul
dec
push
sbb
add
mov
inc
and
cmp
out
xor
or
ret
mov
push
lea
mov
repz
lock
cmp
shlb
or
push
sbb
jb
pop
xchg
mov
bound
add
mov
flds
lea
mov
outsb
xchg
dec
rcll
jnp
mov
fsubl
lock
push
jb
loopne
shrl
sbb
cld
mov
or
xor
test
inc
leave
aas
or
addb
xor
xchg
jno
or
js
aas
int
push
sub
inc
mov
push
lods
arpl
das
test
or
dec
scas
hlt
mov
xor
add
jl
xchg
aaa
fwait
cmp
mov
jne
lcall
in
mov
movsb
mov
mov
rolb
leave
fisubrl
sarb
jmp
mov
lcall
pop
pop
xor
andb
ds
push
push
and
cmp
cmpsb
enter
popf
fistpl
rcrl
es
push
pop
mov
addl
adc
and
popl
xor
mov
xor
ja
jecxz
pop
mov
jge
add
repnz
push
adc
pop
adc
bswap
mov
les
movsb
and
sbb
insb
insl
cmpsl
push
add
outsl
xchg
xchg
imul
xchg
ret
jno
movsl
inc
xchg
pop
jl
insl
aam
dec
repz
xor
ss
mov
mov
stos
mov
movb
xchg
cmp
mov
int
mov
repz
mov
roll
sbb
cmp
or
shlb
push
pop
jae
repz
jns
incb
sub
ljmp
push
cmp
inc
rol
or
mov
cli
adc
push
sbb
mov
sbb
pop
rolb
push
pop
leave
fildll
sahf
add
and
shlb
and
mov
or
mov
pop
fnstenv
insl
cltd
test
test
jbe
js
jecxz
sbbb
add
cld
leave
icebp
mov
xor
cmp
stc
mov
push
xchg
add
mov
push
aad
mov
imul
loop
pop
add
rep
stos
add
sbb
xchg
add
push
popf
dec
test
movsl
sahf
mov
add
cmpsl
insl
jo
mov
cmp
jl
movsl
push
jb
popf
fs
div
push
enter
cmpsl
stc
and
dec
aaa
push
test
inc
das
cmc
add
lods
xchg
addl
mov
sub
popf
popa
xchg
repnz
fsubr
pop
cs
sub
in
xor
test
sbb
mov
add
loope
mov
xchg
mov
mov
shr
pusha
sbb
add
adc
ficomps
cmp
cmp
adc
adc
push
add
bound
mov
dec
add
inc
scas
call
adcl
xchg
add
and
repnz
std
push
inc
je
xor
idivl
out
pop
shll
andb
icebp
nop
test
mov
lds
or
stos
adc
push
xchg
inc
xchg
push
sub
push
sbb
pop
adc
loop
push
fldl
int3
inc
mov
popf
mov
and
cmp
addb
mov
stc
mov
adc
inc
test
fidivrs
push
add
xor
lock
dec
sub
rcrl
dec
pop
sub
scas
xchg
sbb
add
stos
sarb
inc
insb
jbe
sbb
and
xadd
imul
jmp
mov
popa
shlb
aam
sub
sub
xor
fnstcw
dec
sub
mov
sarl
cld
add
outsl
mov
xor
arpl
mov
into
xchg
add
inc
sub
jg
ljmp
add
rolb
dec
sti
xchg
iret
pop
xor
je
pop
test
repnz
je
jmp
das
mov
dec
jmp
or
frstor
imul
add
xorb
or
add
xchg
out
aaa
fdivs
mov
ljmp
push
fdivrp
insl
arpl
andl
ja
pop
cltd
adc
dec
sbb
js
sbb
mov
mov
sbb
and
std
cmp
add
add
dec
inc
leave
jo
loop
out
hlt
adc
andl
cmp
cmp
dec
jecxz
pushf
repnz
fwait
add
mov
ja
jo
mov
sarb
pop
aaa
sbb
cmp
add
fldt
cmp
maskmovq
and
mov
sub
xor
nop
sub
sbb
add
jbe
xchg
pop
lcall
mov
sbb
cmp
jmp
leave
push
push
mov
jo
mov
js
fldt
xor
pop
add
inc
xor
add
mov
and
sub
pop
test
rolb
movsl
rcll
jmp
and
repz
inc
jle
inc
shll
or
xor
push
xchg
inc
subl
and
pop
cmp
stos
add
xor
stos
movsl
inc
pusha
dec
rorb
push
mov
pop
mov
add
int3
lret
xchg
push
pop
inc
shl
push
fistpl
loopne
out
test
sarb
insb
xor
mov
sbb
fsqrt
push
cs
or
push
lods
dec
inc
add
xorl
jl
call
adc
sub
inc
adc
jmp
sub
push
leave
inc
add
imul
inc
xor
add
roll
dec
pop
dec
jae
sbb
dec
inc
enter
jl
add
nop
mov
rorl
dec
scas
inc
outsb
mov
mov
add
cmc
arpl
or
mov
push
adc
xchg
adc
aam
mov
lret
xchg
pusha
dec
outsb
repnz
ja
rolb
fld
push
add
fwait
mov
lods
in
inc
add
stc
cmpsl
xor
push
addr16
insb
pop
push
clc
shl
sbb
fmuls
shlb
filds
imul
xchg
das
add
lock
lret
or
repnz
and
in
mov
xor
sbb
leave
add
mov
xrelease
jl
pop
lods
movsb
outsl
pop
add
xor
sub
ret
dec
add
add
cli
jge
bound
imul
jae
sub
gs
loope
pop
lds
pop
adc
jns
jecxz
scas
pop
fadd
int
pop
icebp
lock
imul
or
mov
jae
bswap
dec
add
in
ret
lods
mov
add
xchg
adc
add
or
popf
add
mov
je
add
jp
test
push
in
sti
aam
or
movb
cli
jae
ljmp
popf
lret
and
xchg
stos
cmp
push
aam
enter
sti
add
xchg
cmp
push
outsb
add
jecxz
mov
push
jb
mov
mov
add
call
pop
fstpt
pop
add
jle
mov
or
xchg
xchg
into
mov
jb
outsl
pop
movsl
add
cltd
and
push
push
je
cmp
scas
add
mov
vhsubpd
mov
je
or
mov
es
movsl
ror
sub
lahf
or
scas
cli
add
jo
jns
mov
dec
add
aaa
imul
hlt
and
mov
sbb
add
int
mov
xorl
jge
enter
or
mov
mov
imul
loopne
push
imul
add
mov
gs
ficoms
repz
dec
getsec
aam
rcll
rcll
add
sahf
stos
fdivl
xchg
lock
inc
lds
cmpb
sub
in
and
mov
jmp
sub
loopne
push
mov
insl
lds
inc
adc
cltd
sub
aad
aaa
iret
jle
and
push
js
cmp
push
add
add
cmp
xchg
aaa
rorl
dec
add
int
xor
add
movl
rcrb
hlt
sub
leave
fadd
push
add
sub
in
loopne
cmp
add
xor
pushf
or
lcall
incl
inc
jge
std
ret
jae
add
sub
mov
sub
lea
add
lcall
and
leave
addb
inc
rcrb
dec
mov
out
test
xor
in
sub
inc
andl
lret
movsl
testl
loope
push
in
xchg
add
or
ret
jmp
into
add
jbe
std
test
add
insb
out
adc
or
or
mov
rorl
daa
dec
cmp
push
and
sub
leave
pop
pusha
jecxz
rclb
push
add
pusha
mov
lods
sub
sub
add
jecxz
gs
popl
mov
rorl
ds
mov
inc
sbb
xor
jb
fs
inc
outsb
xor
jae
inc
lahf
jne
fldenv
out
arpl
sub
or
or
or
rolb
andb
sbb
das
sarl
jb
loope
cmpl
push
xor
sbb
mov
iret
imul
insl
sub
rclb
inc
xchg
ds
and
jp
cld
jl
or
sbb
ljmp
jae
cs
add
es
adc
addr16
arpl
in
adc
mov
add
fsubs
jp
jae
mov
add
mov
adc
jp
sti
xchg
ds
adc
aad
add
scas
mov
ffreep
ret
inc
or
daa
adc
fdivp
leave
push
ret
push
mov
push
add
shll
jno
xlat
faddp
and
jno
frstor
es
je
lods
cltd
adc
adc
cmp
sub
dec
ret
fstpt
cli
into
xor
movsl
cmp
icebp
jb
std
fidivs
push
clc
stos
sbb
in
mov
rcrl
sarb
movsb
scas
ds
scas
or
jecxz
insb
add
mov
scas
sbb
stc
bound
arpl
adc
sbb
xlat
pusha
xor
scas
add
in
sarl
pop
clc
pop
add
jle
cmp
mov
std
push
adc
orl
inc
mov
aad
add
mov
test
or
cmpsb
jbe
pop
xchg
xchg
scas
insb
xor
add
popf
pop
cmc
imul
stc
movsl
sbb
xchg
sbb
xor
lds
push
ret
mov
ljmp
xchg
data16
cmp
bound
imul
mov
mov
inc
out
add
mov
rcrb
jne
push
xchg
sub
jg
add
xor
xchg
lcall
sti
or
pop
jb
cli
lret
push
jg
popf
je
cmp
ljmp
and
mov
ret
push
and
and
add
fcmovnbe
cltd
xchg
push
in
add
cmpsb
loope
lock
jnp
jb
mov
mov
adc
mov
shll
inc
jmp
pop
mov
dec
sbb
adc
sub
dec
add
mov
push
imul
leavew
or
add
inc
sbbb
mov
mov
je
in
mov
aas
lock
mov
jnp
cmpsb
or
pop
push
lea
add
sahf
sbb
sub
rorb
imul
ss
mov
stc
jnp
xchg
test
outsb
add
sub
xlat
js
sbb
call
add
frstor
or
or
mov
js
aas
pop
loopne
sbb
cli
fdivs
xchg
or
lock
aam
adc
divb
pop
sbb
pop
sbb
add
cmpsb
test
lea
sub
jp
add
mov
xor
dec
out
in
ffreep
adc
lds
add
mov
mov
and
jg
add
cmp
adc
movb
aam
fisubs
ja
add
ss
cmp
sbb
and
cmpb
add
inc
sbb
jl
popa
add
and
mov
sbb
ror
fisubl
and
data16
dec
jecxz
lret
add
xchg
sbb
push
inc
movb
jne
mov
fistpl
cmp
test
mov
fiaddl
or
in
sbb
daa
jecxz
outsl
negb
enter
and
pop
loope
mov
push
add
std
into
div
jns
add
mov
movsl
aad
in
push
sarl
mov
movsl
pushl
mov
out
iret
pop
add
mov
out
xchg
or
inc
or
jp
in
rorb
fnstsw
inc
cmp
push
sub
adc
mov
and
adc
xor
fidivs
sub
gs
ret
hlt
pop
pop
mov
cltd
ret
sarb
xor
out
xchg
lea
mov
and
pusha
or
mov
dec
std
fdivrl
ret
jg
jl
cmp
push
fldl
stos
and
movsl
or
packsswb
leave
int
xlat
insb
push
inc
fstp
dec
add
fldenv
addb
ja
adc
orl
shl
inc
add
mov
adc
xor
mov
roll
scas
add
lahf
jo
mov
call
cmp
loop
push
adc
pop
and
cwtl
pop
aaa
sub
rolb
stos
out
js
aas
insb
fildl
push
stos
out
loopne
popa
pusha
mov
add
in
dec
xchg
or
pop
add
cmc
aaa
les
sar
add
call
fstpl
mov
scas
push
adc
sbb
push
mov
popf
cmp
clc
int
lea
movsl
or
loop
adc
sbb
ds
incb
dec
mov
sbb
cmp
and
nop
inc
add
xor
scas
xchg
fldenv
xor
add
cmp
pop
xchg
jbe
cmp
push
cmc
das
loope
ret
rcr
xchg
fucomp
sub
jmp
adc
jp
movb
and
push
pop
out
sub
testb
cmp
out
adc
mov
mov
inc
stc
lock
add
cltd
mov
test
icebp
add
loopne
sub
cmc
mov
mov
add
test
jg
mov
ds
pop
sub
negl
dec
jecxz
test
sbb
and
addr16
sbbb
push
xor
pop
mov
add
fmul
cmp
fstp
pop
insl
adc
jl
mov
and
mov
or
pop
add
shlb
cmp
add
loop
insl
mov
sub
in
js
cmpsb
jb
cmp
push
pusha
add
and
push
mov
inc
sub
enter
mov
add
sbb
pop
jmp
mov
lcall
dec
js
xchg
mov
add
mov
arpl
sub
iret
mov
mov
repz
or
imul
pop
test
add
stc
hlt
xor
loopne
nop
in
xor
add
adc
sbb
or
cmp
mov
daa
add
out
cmc
out
testl
cmp
cld
in
pop
fdivp
add
sub
in
and
adc
insl
mov
ds
add
push
push
aaa
mov
cmp
repnz
add
les
xchg
in
mov
push
and
add
push
jp
test
rol
lahf
nop
pop
and
lret
cmpsl
or
jo
sbb
xor
mov
or
fsubs
adc
xchg
sbb
sub
cmp
dec
push
fldenv
stc
and
push
dec
aad
ja
sub
inc
in
idivb
add
mov
mov
filds
notb
jb
cwtl
mov
stos
mov
out
lock
inc
icebp
cmp
sub
or
add
pop
cld
push
cltd
ja
jne
mov
sub
popa
movsl
adc
testl
push
in
incb
lods
ret
sti
xor
iret
or
add
add
add
xor
incb
int3
or
out
imul
and
fidivrs
or
in
xchg
mov
pop
jno
jb
dec
mov
cmpsl
and
xor
fsincos
mov
enter
pop
cs
pop
xlat
sarl
jecxz
xchg
mov
push
fwait
inc
jmp
or
cmp
iret
mov
jge
jmp
roll
lods
and
inc
mov
inc
shll
incl
ret
or
filds
fsubrs
pop
adc
and
add
cmp
xchg
jb
sbb
adc
dec
leave
xor
sbb
adc
sbb
fiadds
cmpsl
xchg
push
jmp
aam
add
mov
mov
cwtl
jb
popa
lcall
out
xchg
mov
mov
aam
popa
jo
add
imul
std
adc
xor
inc
lcall
add
inc
and
add
mov
cld
mov
xchg
lret
pop
cmp
adc
leave
adc
xor
add
and
fs
sbb
lahf
push
adc
rcl
mov
mov
push
cwtl
mov
stos
aas
shrb
inc
mov
mov
xor
add
or
adc
jbe
subl
call
out
mov
pop
and
daa
cmp
push
pop
inc
jp
fldt
out
fs
push
jmp
aas
and
ret
mov
or
pop
js
ds
sbb
xchg
ljmp
adc
sub
dec
jmp
jo,pn
mov
add
sbbl
cltd
std
roll
and
mov
and
insl
fists
loope
test
push
adc
and
cmp
jecxz
and
lock
shll
popf
xchg
push
fbstp
cmp
testb
adc
pushf
mov
bound
and
ja
jb
sbb
inc
jg
adc
and
hlt
add
bound
fstpl
out
mov
loop
add
test
inc
and
push
add
popf
pop
insb
adc
leave
mov
test
ds
cwtl
xor
push
xchg
mov
add
das
jecxz
cli
aad
add
xchg
insl
xchg
and
dec
push
xor
or
das
push
and
mov
std
sub
imul
push
fcompl
inc
push
jge
dec
cmp
and
add
aad
jno
push
jmp
fwait
xchg
add
test
push
pop
inc
jp
mov
jns
mov
dec
jle,pn
xlat
fdiv
pop
mov
movq
lahf
imulb
dec
mov
out
pop
lods
popf
outsl
add
movsb
dec
pop
add
ss
in
inc
bound
dec
xor
clc
adc
mov
std
inc
mov
xchg
add
fisubrs
pop
jnp
xchg
push
scas
cmp
sahf
fidivl
mull
je
jo
push
stos
mov
or
jae
out
jne
addl
sub
loope
movsb
cwtl
aaa
sub
and
push
lock
sub
jmp
or
daa
out
andb
std
and
xor
cs
jae
sbb
jns
push
xchg
rcll
aam
add
jp
dec
inc
xor
int
and
inc
orl
xchg
movsl
gs
into
and
inc
and
cld
add
hlt
cmp
add
aaa
inc
ja
ljmp
cs
mov
cmp
adc
out
and
and
ljmp
cmp
scas
and
jp
adc
cli
fimuls
cmpsl
push
stc
mov
dec
daa
bound
adc
call
jge
xchg
test
cmp
pop
sbb
aam
pop
mov
adc
pop
in
sub
icebp
out
cs
out
mov
mov
out
and
movsb
addr16
pop
mov
shrb
shll
stos
push
imul
out
dec
cmp
add
dec
pop
or
shll
std
imul
roll
xchg
sahf
jo
outsb
xor
lret
pusha
imul
lock
mov
dec
shll
movsb
or
ds
std
fnsave
cltd
call
int
mov
cmp
inc
pusha
adc
pushf
dec
cmp
je
jp
fs
or
notb
mov
js
fldenv
clc
addb
sahf
shlb
dec
xchg
roll
add
xchg
shlb
mov
sbb
push
in
mov
jp
stos
push
cmp
push
fs
fildll
insb
out
loopne
mov
xor
pop
add
data16
rcll
or
cs
xchg
jp
cmp
adc
push
inc
lret
mov
leave
out
out
cmp
in
mov
inc
xor
add
push
push
inc
cmp
les
daa
stos
and
sbb
and
popf
lds
xchg
je
lock
mov
dec
andb
cld
fdivs
adc
or
outsl
pushf
and
push
jle
repnz
aas
and
pushf
pop
mov
sbb
ret
or
sub
or
sbb
mov
sbb
sbb
jp
or
or
out
test
jle
xchg
jb
je
outsb
mov
cmpsb
add
and
jp
stc
aaa
popl
push
inc
mov
aas
fidivrs
sub
mov
cmp
cld
push
out
dec
adc
incl
cmc
mov
test
inc
push
pop
inc
dec
sbb
insb
sub
aad
icebp
adc
jnp
adc
dec
lret
inc
push
dec
pop
jo
add
xchg
imul
xor
mov
mov
add
ret
mov
push
xchg
mov
and
inc
fistpl
jo
sub
into
repnz
shlb
xchg
pop
lcall
rorb
xchg
push
adc
or
neg
dec
lret
orl
and
js
mov
xchg
mov
jecxz
cmp
test
add
mov
leave
cmpsb
mov
sarl
jo
fldenv
daa
pop
imul
lret
xchg
push
jns
add
int
cmc
jb
test
add
repz
mov
sahf
mov
ljmp
add
imul
cwtl
out
inc
inc
add
sub
arpl
lods
jmp
dec
xchg
cmpsl
cmp
aad
ret
hlt
outsl
clc
inc
or
add
popa
fs
aas
ljmp
repnz
inc
add
sbb
outsl
pop
push
loopne
inc
cmp
addl
int3
stos
icebp
sbb
or
adc
jmp
fildll
dec
cmp
xor
out
cmp
add
insl
mov
and
loope
jecxz
out
mov
push
cwtl
iret
add
sbb
and
dec
in
cli
and
add
mov
inc
jnp
fcomps
add
sbb
pop
and
cmp
aam
ds
jp
add
stos
mulb
rcrl
and
mov
icebp
and
hlt
stos
push
xchg
sti
add
xor
mov
add
inc
sub
std
cld
hlt
xor
lods
lahf
inc
ja
out
rol
je
dec
cmpsl
xchg
add
sub
adc
sub
imull
jmp
pop
inc
inc
mov
lcall
add
addl
push
loopne
add
push
insb
rol
or
pop
leave
jbe
xor
dec
fisttpl
pop
push
cmpsl
xor
out
or
lret
mov
ljmp
or
jbe
xchg
dec
xor
xor
adc
ffreep
or
lcall
mov
test
adc
cmp
inc
cmpl
cmpsb
mov
dec
popa
scas
test
sub
or
xchg
add
mov
movsb
cmp
add
cli
test
lea
sbb
mov
push
jecxz
or
inc
sarb
mov
movsl
push
xchg
cmp
adc
imul
mov
ja
mov
cmp
xor
lahf
mov
push
add
jb
hlt
push
mov
mov
push
push
cli
inc
xor
outsb
add
xlat
dec
mov
add
es
scas
shr
xor
jl
cmp
dec
add
push
jmp
rcrb
ss
mov
cmp
filds
inc
lods
aaa
insl
mov
xorl
out
xchg
test
lods
mov
adcb
ljmp
push
xlat
inc
xor
xor
jp
pop
add
cmpsl
scas
dec
fstl
loope
jo
push
xor
or
xchg
cmpb
pop
cmp
cli
or
rorb
and
pushf
dec
dec
adc
daa
bound
mov
cltd
cwtl
push
cmp
test
nop
pusha
sub
xchg
xchg
add
push
jecxz
add
fwait
or
inc
cwtl
sub
mov
das
in
add
xchg
scas
push
add
fdivp
mov
sbb
imul
or
xor
push
sub
sarb
sub
mov
add
add
stc
adc
mov
xor
popf
hlt
add
fdivl
dec
test
add
imul
or
push
popa
dec
js
xchg
icebp
pop
sbb
aam
add
movsl
dec
sbb
cmc
mov
inc
jno
xchg
xchg
mov
pop
cmp
add
in
je
shlb
add
mov
sti
lods
push
shll
leave
nop
cmp
inc
add
adc
add
mov
arpl
add
pop
pop
fnstenv
xchg
cmpl
inc
dec
dec
xchg
adc
add
sbb
mov
push
sbb
push
add
ljmp
xchg
add
out
out
int
je
push
sub
mov
mov
push
sbb
jge
add
stc
dec
and
jl
faddl
cmp
sbb
mov
int3
lret
je
or
push
xor
outsb
add
sbb
inc
push
cmp
cli
jne,pt
xchg
test
sbb
xlat
imul
enter
mov
pusha
mov
stc
mov
mov
les
mov
testb
add
jle
xor
jne
filds
es
push
pushf
in
and
bound
fadds
mov
addr16
cmp
mov
and
push
mov
test
das
xlat
add
out
adc
adc
push
outsl
mov
and
test
add
leave
and
xlat
cmp
fiaddl
adc
xor
iret
mov
lods
insl
pop
mov
xor
lahf
shl
mov
sbb
mov
dec
xor
mov
std
inc
push
sub
sbb
add
out
cltd
push
pop
into
shlb
ds
fidivs
add
fldl
pushf
jno
je
push
and
les
addb
insl
insb
lods
adc
xchg
and
inc
mov
sub
cmp
add
push
cmpb
push
aaa
inc
sarl
jbe
fwait
cmp
add
adcl
lods
push
pop
pop
stos
ret
xchg
imul
orl
mov
repnz
push
stc
filds
inc
ret
dec
adc
push
aad
shl
cli
jge
insl
xchg
test
push
fisubs
aas
pop
adc
inc
pop
push
lret
sbb
xlat
or
imul
scas
pop
pop
dec
mov
inc
popa
je
ret
fldenv
int3
and
lret
addr16
leave
in
loopne
in
es
xor
outsl
shlb
inc
push
xchg
loop
jo
cmpsl
cmp
push
cmpsb
mov
add
pop
aaa
sub
loopne
inc
mov
ror
sub
movsl
xor
mov
hlt
inc
shll
sub
mov
shl
shll
pop
aas
and
dec
sbb
mov
pop
lcall
and
insl
add
rorl
mov
cmpsb
sub
test
pop
push
stos
setns
mov
sbb
aas
and
shl
jne
adc
xor
push
rol
dec
or
mov
inc
jns
aas
stos
enter
faddl
and
divl
lahf
or
inc
and
xor
xchg
ret
mov
push
push
sar
cmp
roll
or
add
fstpt
adc
and
icebp
add
cmpsb
divb
sbb
cld
add
mov
jl
je
xor
stos
mov
push
adc
cmpsb
sbb
push
lds
sub
and
aas
lahf
iret
inc
enter
pop
aas
lea
dec
jne
popf
add
in
cmp
mov
cmp
inc
fists
aas
add
arpl
fisubs
and
test
pushf
sub
sti
sub
loop
popf
fsubr
adc
in
ret
xor
mov
and
fnsave
pop
cmp
nop
cmp
popa
pushl
fiadds
xlat
hlt
movsb
sbbb
push
xchg
and
inc
cld
xor
pop
ss
mov
sbb
push
lcall
nop
pop
dec
add
inc
shlb
cmpsl
lahf
insb
lock
dec
add
and
push
mov
testl
push
xchg
add
cli
lahf
pop
jl
int3
lea
mov
mov
lahf
mov
sub
add
dec
pop
popa
lods
sub
mov
fistps
or
jmp
sarb
push
sbb
or
fcomi
stc
sub
mov
mov
shrl
mov
iret
cmp
inc
cmpsl
ljmp
fstpl
cmpsb
push
xor
add
loope
xchg
loop
add
pop
inc
pop
stc
scas
xchg
fdivr
pop
xchg
jp
xor
roll
rcrb
cmp
in
int
push
push
sub
and
push
sbb
mov
ficoml
inc
sub
xor
inc
push
add
cmc
add
mov
sbb
shlb
filds
jns
jae
adc
pop
fldt
mov
shrb
inc
push
and
jecxz
rorb
outsb
jp,pn
jmp
inc
sub
loopne
cmp
lods
add
push
xchg
aam
add
xor
sub
mov
push
mov
in
nop
add
add
aad
mov
add
aam
stos
jecxz
inc
jmp
cmp
lret
lea
push
inc
add
hlt
or
cld
cmp
mov
cmpsl
mov
in
pop
inc
push
frstor
sar
lahf
xor
push
add
movsl
jl
jns
add
sub
and
or
pop
stc
add
and
lahf
mov
fstpl
jb
adc
xor
or
add
adc
xchg
mov
pusha
insb
mov
mov
roll
mov
jnp
add
mov
data16
and
mov
fistps
outsb
es
cli
notl
ss
int3
push
inc
cmpsb
add
das
addl
out
mov
jb
rolb
cwtl
mov
loope
mov
or
daa
pop
cli
fwait
sub
jae
icebp
orl
cltd
sti
mov
xor
aas
cmp
mov
xlat
push
add
mov
and
inc
imul
stos
dec
loop
adc
icebp
fmulp
lahf
cmp
pop
inc
shlb
mov
dec
add
push
sti
mov
mov
out
cmp
idivb
cwtl
daa
aad
ficomps
leave
xchg
shrb
mov
lret
cwtl
xor
jge
mov
sub
sahf
call
add
jo
loop
xor
mov
cwtl
fcmovu
cwtl
cmp
adc
mov
ja
bound
pushf
xchg
das
sahf
add
and
ds
or
ficoml
xchg
xor
push
sbb
std
fs
xchg
mov
sahf
inc
jl
cmp
push
xor
mov
aam
mov
stos
addr16
jle
push
or
and
loop
lret
js
xor
or
ficomps
xchg
out
mov
mov
mov
jno
sbb
and
or
xor
cs
xorl
js
and
shr
or
cmp
ss
adcb
mov
cmp
and
loop
mov
jo
pop
and
jg
inc
into
push
jb
pop
add
ret
outsl
loopne
dec
test
popa
adc
loope
push
pop
roll
aam
test
push
cmpb
daa
inc
sbb
inc
fistpll
mulb
dec
jmp
pusha
xor
or
outsb
ss
add
repz
jle
repnz
cmp
sub
or
pop
sub
orb
lock
push
call
andb
or
and
pop
fstpt
add
inc
pop
adc
test
cmp
mov
xor
repnz
in
shll
adc
gs
push
sbb
sbb
mov
rorb
sub
pop
in
mov
les
test
inc
mov
mov
inc
mov
or
incb
pushf
faddl
push
loop
out
fidivl
cmp
jmp
sar
xor
shll
shrl
flds
and
push
ret
stos
pop
add
xor
lods
pusha
sub
jae
or
add
cltd
in
inc
stc
inc
int
clc
or
xor
and
lods
std
cmp
add
cmpsl
sub
inc
cmp
insb
adc
xor
add
imul
inc
mov
or
sbb
push
push
aas
cmp
rolb
lds
adc
mov
inc
das
orl
push
inc
sbb
cmp
dec
jle
fisubrs
hlt
inc
sbb
add
subl
adc
scas
arpl
shll
pop
sub
mov
mov
and
rol
lods
pop
cmp
stos
sarb
mov
leave
push
add
cmp
add
mov
in
mov
mov
rorl
or
pop
pushf
imul
xchg
or
lods
mov
add
push
xchg
push
xor
mov
pop
sar
inc
cmp
sbb
push
stc
cmp
insl
add
orl
mov
cmp
pusha
clc
push
add
inc
mov
add
stc
iret
dec
inc
cmp
add
ja
add
sbb
mov
sub
or
ficompl
pop
inc
mov
fiadds
xchg
jmp
addl
lds
sub
mov
daa
sbb
mov
inc
nop
adc
or
mov
xorl
jecxz
daa
cmp
push
addb
loopne
dec
add
mov
ret
sti
and
add
std
enter
ljmp
mov
push
or
cs
out
lea
loope
mov
jnp
out
cmp
mov
pop
xor
inc
negb
xchg
fwait
into
outsb
inc
sub
adc
shrl
add
inc
sub
popf
cmc
lods
pusha
sbb
add
xchg
fmulp
dec
xchg
sahf
ds
stos
add
or
test
lahf
push
js
jge
mov
ljmp
inc
xor
dec
mov
adc
scas
mov
sbb
dec
test
and
push
add
mov
shl
sub
out
jmp
incl
sbb
cs
icebp
sahf
cmp
cs
or
shll
mov
outsb
sub
xchg
or
imul
aam
in
mov
mov
push
add
xchg
xchg
xchg
push
testb
add
push
rcrb
daa
mov
fisttpll
pop
les
mov
mov
in
bound
adc
pop
pushf
ret
jle
push
int3
ret
outsl
mov
ss
je
sbb
adc
mov
pop
sub
inc
scas
pop
int
movsb
repnz
add
mov
mov
shll
mov
xor
or
jnp
sub
mov
add
sbb
push
mov
add
cmpsb
loop
fwait
js
outsl
outsb
out
jmp
ljmp
add
xchg
dec
jg
xchg
cmp
xchg
out
adc
arpl
stos
and
adc
incl
lods
xor
shr
mov
adc
sub
adc
cmpsb
push
sbb
xor
push
jle
rorb
or
testl
outsl
xlat
pop
pop
sbb
push
mov
inc
out
imul
sbb
in
or
push
push
or
mov
mov
gs
insb
pop
ja
push
pop
pop
jg
ljmp
jmp
mov
cmp
sub
cmp
and
xor
mov
arpl
jp
fcmovnu
mov
jecxz
mov
and
sbb
and
add
inc
std
jmp
cltd
cs
push
pusha
and
push
ret
movsb
xor
mov
int
fisubs
and
cmp
out
iret
rcr
pop
into
adc
sub
mov
daa
aad
fldcw
mov
and
add
fs
imul
lretw
add
mov
push
mov
xor
pop
sbb
ret
mov
adc
movsl
pop
ret
adc
xlat
add
iret
xchg
aad
shll
mov
add
jmp
nop
hlt
mov
stos
inc
sarl
aas
adc
pop
rcrb
xlat
int3
adc
push
dec
pusha
pop
pop
fidivl
test
testl
sldt
cmp
adc
ja
add
lcall
add
in
push
incl
stos
sub
or
and
jecxz
mov
mov
mov
notb
xlat
pop
jbe
cmp
lea
ja
icebp
ds
and
leave
sub
jo
xorl
in
add
aaa
lods
fwait
pop
sahf
jg
pushf
fstpt
test
jl
verr
clc
aad
pop
cmpsb
add
in
cli
lcall
xor
cmp
mov
stc
push
ss
andb
mov
xchg
inc
sbb
sub
pop
inc
add
in
aad
rclb
jae
ret
xchg
sub
inc
cmp
pop
push
xchg
mov
sahf
inc
inc
pop
and
lahf
add
add
mov
ret
movl
repz
xchg
push
popa
jb
nop
inc
mov
jecxz
jl
dec
pop
sub
mov
sub
es
stos
cmp
in
add
mov
repnz
sub
mov
xor
imul
inc
pop
jae
cld
insb
jb
jecxz
mov
out
scas
lret
push
cmpb
or
rolb
xor
pop
xchg
push
sahf
mov
cltd
add
fildl
mov
pop
or
fidivrs
mov
in
dec
ss
aas
sbb
push
jp
and
add
push
push
test
data16
dec
sti
adc
je
push
and
inc
add
outsl
sub
out
loopne
add
xchg
push
addl
aaa
jns
cltd
add
pop
push
inc
sahf
out
lds
add
nop
mov
aaa
popl
jge
iret
into
jb
rolb
xor
add
sbbb
add
in
js
pop
pop
lods
add
scas
popa
or
adc
icebp
sub
mov
pop
push
and
repnz
fcoms
hlt
adcb
dec
mov
xchg
leave
out
ret
pop
add
pop
inc
mov
mov
and
push
sarb
fsubrs
pop
stos
ret
fcompl
sbb
and
mov
adc
arpl
push
inc
sbb
rcr
xchg
fisubrl
rcrb
add
add
dec
cmc
jg
pop
or
push
dec
mov
sub
gs
add
aad
imul
mov
cmc
test
adc
je
das
cwtl
lret
add
xchg
out
inc
jno
jbe
add
cmp
sarl
add
sbb
dec
in
and
add
lcall
pop
jo
stos
in
add
xchg
inc
xchg
outsl
mov
loopne
add
mov
mov
mov
xchg
mul
popa
fdivs
dec
dec
flds
xchg
jge
dec
pop
call
loope
mov
shrl
shll
mov
dec
add
xchg
pop
mov
pusha
shr
lret
das
cmp
and
adc
mov
xor
and
popf
leave
movsb
cmp
cmp
dec
pushf
mov
cmp
sbb
iret
dec
cmp
pop
or
outsb
mov
mov
cmp
xchg
add
jg
pop
add
enter
jle
fwait
sbb
lds
or
aaa
popa
aas
ss
call
ficoms
mov
sbb
add
arpl
mov
xchg
inc
daa
cmp
shll
bound
add
je
dec
ljmp
std
mov
lret
pop
sub
pop
sbb
dec
cltd
pop
push
mov
pop
adc
add
mov
scas
or
fwait
lods
test
aas
lea
and
fs
stos
or
xor
mov
ljmp
sti
push
adc
xor
cmp
mov
dec
inc
jle
inc
jp
dec
out
adc
push
fld
jp
mov
jl
mov
inc
std
mov
int
lahf
js
xor
mov
pop
mov
imul
mov
iret
jns
jmp
xor
cmc
xchg
daa
xor
adc
xor
xor
inc
and
xchg
xchg
jmp
push
sbb
aas
cmp
lcall
icebp
xchg
fcomps
imulb
lret
loopne
fwait
add
ficoms
mov
adc
cmpsl
pop
in
xlat
test
aad
mov
ljmp
cli
jl
out
jb
add
xchg
ret
ror
dec
mov
xor
out
add
cld
and
pop
push
inc
push
testb
xchg
push
adc
push
int
into
enter
rorb
pop
mov
stos
shrl
ficoml
pop
add
aas
dec
or
pushf
lahf
pop
add
nop
push
jecxz
jnp
sbb
or
mov
and
add
jle
int3
cmp
add
mov
add
pop
sti
pop
add
adc
test
push
mov
ret
jb
inc
mov
pop
sub
pop
cmp
inc
xor
fmul
shll
add
in
rdpmc
pop
pop
stos
add
adc
jno
mov
test
pop
xchg
mov
cmp
je
out
add
adc
xor
push
popf
mov
sbbl
sahf
mov
mov
jns
xchg
push
loope
xchg
pop
jae
add
push
test
or
dec
ljmp
or
mov
loope
nop
and
aaa
push
push
icebp
mov
inc
sbb
adc
fwait
cmpsl
jg
xchg
add
sub
sub
add
and
pop
jge
cmc
les
ja
inc
imul
scas
enter
shl
test
jae
arpl
add
mov
mov
add
push
dec
add
loop
out
rolb
insb
sub
es
std
add
cmp
xchg
push
sbb
pop
rcrb
mov
nop
repnz
enter
pop
inc
xor
fwait
loopne
dec
or
movsl
add
sbb
shr
jg
loope
ret
nop
or
sub
pop
sbb
add
addr16
movsb
fildl
pop
or
lahf
test
sbb
subb
clc
mov
mov
scas
lods
dec
jno
dec
addl
mov
adc
jmp
in
imul
rcr
and
ss
push
shrb
loope
lcall
jns
mov
out
push
dec
fldenv
js
dec
lods
inc
lret
fnsave
add
hlt
adc
xchg
xor
inc
scas
push
lcall
add
inc
sbb
cmp
push
cmp
dec
call
leave
dec
cli
dec
add
cmp
pop
jno
sahf
add
pop
in
lret
mov
jae
ret
fadds
add
or
jbe
sti
repz
inc
test
sub
inc
cmp
cmp
push
ret
push
add
cmpsl
loop
test
shll
mov
out
push
adc
push
add
push
pop
cmp
shrl
inc
push
and
loope
movsl
int3
cmp
add
int
pushf
jecxz
in
fiaddl
dec
je
mov
test
cmp
xor
dec
loopne
mov
into
and
mov
dec
mov
or
ret
roll
lret
dec
fwait
cmc
sub
add
test
add
lods
xor
testb
jecxz
sti
mov
movsl
cmp
je
xchg
pop
xchg
or
jecxz
ret
pop
sub
add
dec
pop
movsl
sbb
adc
into
shl
and
cld
push
add
ret
add
mov
sbb
rol
stos
xor
test
mov
xchg
pop
sbb
add
add
cmp
lret
aas
jl
xor
fadds
jo
add
loope
out
mov
jecxz
mov
dec
cmp
add
pop
push
aas
lahf
insb
mov
add
mulb
je
xchg
cwtl
add
mov
mov
and
add
outsb
or
loope
dec
pusha
lret
sub
sub
enter
dec
push
add
mov
stos
fisubrl
add
adc
push
add
cmpsb
call
jecxz
xchg
icebp
push
inc
in
add
sbb
enter
xchg
xor
dec
es
add
or
icebp
add
and
add
inc
pop
scas
adc
adc
push
sti
fnstcw
push
inc
or
fadds
mov
push
jne
in
sub
xchg
in
lods
rclb
xchg
push
into
rcrb
popl
ljmp
dec
add
test
add
lds
std
inc
lea
shll
fldenv
xor
mov
call
add
addr16
mov
jbe
test
mov
xor
adc
push
popl
sbb
jle
dec
xchg
inc
sub
sub
stos
aam
stos
lcall
xor
push
add
mov
jge
inc
cmpsl
out
inc
scas
dec
aas
xor
movl
cltd
decb
push
add
lsl
loopne
imul
mov
dec
iret
and
imull
call
sub
mov
or
gs
js
cmp
dec
aam
cmp
add
imul
hlt
mov
mov
loop
ret
sub
or
mov
push
addb
fidivl
add
or
push
mov
mov
lahf
mov
stc
cmp
and
xor
add
aas
push
sub
imul
data16
iret
pop
xchg
int
jge
mov
xchg
orl
dec
daa
mov
push
sbb
push
mov
mov
push
cmp
lret
xchg
jmp
jmp
inc
inc
addl
ss
sub
orb
sub
xchg
add
imul
add
xor
cmp
add
shll
sub
cmpsl
and
std
rcll
scas
inc
fmulp
mov
mov
adc
or
mov
popa
aaa
call
push
rol
jo
outsb
sub
pop
cmp
xchg
rcrl
fabs
in
int3
fbld
cmp
mov
mov
sub
mull
adc
fnstenv
adc
mov
lods
cmp
push
mov
movsb
rolb
jp
dec
mov
pop
addb
scas
sub
xor
jo
pop
xchg
repz
inc
mov
cwtl
ret
lods
add
test
pop
mov
ret
lcall
stc
cmp
adc
stos
push
cmpb
cwtl
imul
xor
jae
jg
add
or
cltd
pop
ja
add
inc
cmp
pop
pop
lahf
cmp
jbe
dec
iret
fstl
push
push
inc
or
xor
add
addb
fidivl
scas
mov
fwait
or
clc
add
and
adc
ljmp
ficoml
jno
or
int
icebp
push
push
inc
lods
ret
and
push
mov
or
mov
shlb
int
mov
xor
clc
cmc
cmp
outsb
mov
jbe
addb
adc
and
xchg
pusha
add
push
mov
mov
add
addr16
cmp
pop
add
test
or
adc
add
sbb
ror
in
jbe
cmp
bsf
ds
sbb
fiadds
out
pop
push
cmc
mov
or
aas
shrl
jl
pop
sub
push
pushf
arpl
sub
dec
mov
outsb
add
lahf
jecxz
hlt
std
add
nop
lock
mov
sbb
sbb
inc
adc
add
xor
lahf
in
and
rol
mov
add
sahf
aam
add
adc
int
jo
les
jbe
pop
xchg
xchg
dec
or
xchg
and
clc
inc
add
xor
jg
pop
popf
popl
fsubl
fdivrl
add
std
mov
or
lret
push
leave
and
sbb
jno
inc
xchg
jl
imul
rcr
sub
enter
mov
pop
mov
stos
pushl
mov
jne
hlt
push
stc
loop
add
xor
call
gs
inc
add
cwtl
cmp
cmp
lret
pusha
push
push
cmp
addl
add
jp
mov
shll
shlb
aas
les
bound
dec
icebp
mov
sub
icebp
dec
mov
sarl
inc
xchg
shl
dec
fiadds
ds
daa
push
ret
test
aad
cmp
fisubl
or
les
push
sub
popf
add
hlt
mov
jp
and
ret
es
std
repnz
add
and
sahf
dec
dec
out
sub
jp
leave
cli
fs
and
pushl
js
add
movsb
enter
and
fsts
add
add
das
movsl
test
imul
pop
lret
cmpb
movsb
xor
jecxz
push
adc
and
jnp
pop
add
ret
insb
out
add
and
in
stc
sbb
in
js
add
dec
mov
mov
scas
and
lahf
add
repz
xlat
xor
inc
and
cmp
jno
adc
std
mov
mov
inc
add
and
xchg
lds
cwtl
xor
lahf
movsb
jne
cmpsl
adc
andl
jo
inc
dec
imul
stos
call
jl
out
fnstenv
test
ljmp
sub
leave
or
mov
pop
iret
movsb
pusha
repnz
inc
cmp
mov
xor
sub
and
mov
inc
mov
pop
dec
outsb
rcrb
dec
mov
inc
inc
xchg
test
bound
or
scas
rcrb
pop
xor
cmp
mov
sbb
out
adc
cmp
cmp
ss
movsb
scas
push
daa
out
leave
add
mov
mov
and
xchg
mov
dec
xlat
lds
daa
andl
ficoms
mov
jbe
cmp
lcall
jl
leave
push
pushf
jp
cmpb
jbe
push
sub
add
test
or
jb
pusha
popw
inc
jp
mov
dec
mov
rcrb
mulb
jl
and
cmp
push
or
mov
pusha
outsl
dec
lahf
sbb
mov
scas
shrl
dec
push
cmp
sub
adcb
icebp
mov
add
out
mov
hlt
and
cmp
testb
shlb
cmp
leave
loopne
rolb
imull
les
and
in
or
movsb
fisttps
lods
int3
imul
leave
add
adc
cmp
outsl
adc
lcall
xchg
cmp
movsb
cmp
cmc
xlat
dec
xchg
mov
int3
fidivs
dec
repnz
clc
mov
mov
outsl
rcl
lahf
and
mov
test
jno
dec
dec
inc
push
add
and
imul
mov
lock
and
lahf
mov
or
adc
xor
imul
inc
fisubrs
xor
ljmp
cmp
and
cs
push
inc
nop
pusha
mov
dec
popf
jae
mov
gs
pop
pop
adc
and
ret
and
lods
push
mov
aad
fwait
shlb
aam
xchg
fadds
adc
xchg
jns
or
mov
cltd
outsb
push
ret
dec
lods
es
and
test
pusha
adc
sti
xchg
mov
jb
mov
and
push
adc
add
lahf
push
movsb
aad
push
cs
loopne
mov
pop
mov
or
xchg
test
enter
cwtl
in
das
cmpsb
add
cmp
vpsubusb
sbb
push
or
not
aad
xchg
xchg
and
repnz
ljmp
pop
fstl
and
pop
sbb
push
pop
adc
subl
bound
mov
mov
cmp
shll
jle
cmc
mov
xor
mov
xchg
loop
or
jnp
aam
push
and
inc
scas
ds
push
push
adc
arpl
mov
mov
bound
dec
sbb
fcompl
xchg
leave
outsl
loop
jle
push
leave
popa
pusha
mov
mov
cmp
int3
xor
jp
lds
add
out
push
ret
and
or
addr16
orb
shrl
aas
pusha
cld
xor
jecxz
adc
jns
sbb
sbbb
xor
lods
push
ret
jle
add
dec
sub
jp
add
jecxz
aas
adc
pop
jp
fbstp
inc
add
call
mov
imul
cs
cwtl
cmp
fstp
mov
adc
in
ds
push
mov
imul
loopne
imull
cwtl
inc
xor
and
xlat
stos
or
stc
push
dec
fs
mov
mov
jg
pop
fidivl
lods
pop
add
in
xor
stos
aam
testb
xlat
sti
jne
add
xchg
add
nop
xchg
sub
addl
cs
cmp
faddl
shll
in
add
inc
xor
adcl
pop
and
mov
insb
and
movsl
pop
dec
dec
inc
out
subb
add
mov
cmp
sub
pop
push
pop
movsb
sub
dec
dec
roll
adc
mov
pop
sbb
test
cmp
jnp
fldt
rcl
xchg
stos
cmp
push
add
clc
mov
aam
sub
xor
pop
sbb
jmp
call
mov
push
sbb
mov
faddl
jge
mov
jg
fs
dec
mov
xor
mov
add
js
out
and
or
cmp
shrb
cmp
mov
xchg
or
add
mov
xor
jb
es
pop
cmp
mov
shl
inc
xchg
rcr
xor
shrl
test
in
rolb
stc
push
mov
mov
loop
clc
out
inc
or
push
jecxz
adc
test
cmpsb
or
insb
ret
dec
add
mov
xor
icebp
add
aas
ja
call
dec
cmp
push
add
mov
xlat
add
and
inc
mov
xor
es
and
sub
add
push
pop
jp
push
sub
push
int
push
add
sub
aam
in
popl
out
imul
dec
adc
jg
cmp
hlt
jecxz
stos
add
inc
decl
out
adc
inc
fidivrl
leave
and
or
movsb
sbb
push
push
fadds
clc
push
sbb
add
pop
xchg
add
loopne
dec
jmp
add
icebp
xor
fists
push
mov
out
push
test
inc
mov
add
push
mov
push
test
dec
inc
push
int3
test
in
rcr
mov
adc
iret
outsb
mov
rcll
jbe
push
loop
push
popf
jae
sbb
dec
add
out
repnz
adc
or
test
mov
addl
push
mulb
data16
mov
inc
roll
xor
sub
lea
int3
packuswb
xorl
loope
mov
and
jge
pop
in
inc
sub
aaa
lret
in
dec
jnp
cmc
jl
idiv
sub
pop
sbb
mov
das
xchg
aaa
incb
mov
push
jbe
nop
lret
ret
add
xor
in
mov
sbb
push
call
mov
mov
mov
mov
inc
insb
jns
jnp
filds
sbb
pop
mov
xchg
jmp
lock
lcall
shll
test
xlat
pop
and
loopne
add
mov
xchg
or
insl
add
imul
test
cld
and
in
rclb
xor
sbb
in
mov
es
add
cmp
lock
dec
dec
jne
mov
and
or
pop
mov
jmp
pop
lds
popa
jmp
mov
fsubr
add
push
mov
aam
xchg
mov
hlt
mov
and
add
dec
sti
sarl
fcmovne
inc
addb
xor
loope
test
sarl
jmp
and
pop
rcrb
out
enter
sub
mov
test
dec
popa
pcmpgtb
sti
stc
adc
jno
push
into
rclb
push
shrb
add
inc
sbb
mov
lret
rcrl
adcb
mov
push
fwait
sbb
xchg
lods
add
ret
xchg
shll
fs
gs
adc
les
out
xor
add
jbe
in
into
bound
cs
js
ds
adc
mov
pushf
pop
insl
add
in
cmc
xor
fldl
pmaxub
jns,pn
add
xor
ja
call
stos
and
dec
inc
adcl
xor
and
cmp
cmp
push
daa
add
clc
xchg
or
hlt
cmc
je
insl
inc
sbb
mov
jb
les
test
mov
xor
fs
adc
lods
repnz
mov
sbb
aas
into
sub
je
sub
add
cmp
cli
jecxz
mov
inc
push
test
loope
mov
sub
add
ja
lret
add
mov
jnp
movsl
out
and
ret
pop
and
cmp
shr
in
add
lahf
or
add
lods
fcoms
ja
xor
jmp
and
xlat
sar
mov
adc
inc
imul
push
fwait
inc
jle
inc
mov
mov
pop
push
mov
cmpsb
dec
movl
imul
idiv
mov
inc
shlb
mov
flds
addr16
pop
mov
xor
int3
adc
cmp
lret
inc
call
add
clc
stc
ja
js
jbe
insb
mov
dec
insl
add
mov
mov
sti
mov
cmc
add
mov
addr16
jno
xchg
xor
mov
push
push
and
mov
nop
or
out
xor
xchg
ljmp
movsb
lret
add
cli
dec
xor
repz
fcoml
and
mov
jl
aaa
sub
adc
pushf
pop
mov
stc
pop
adc
inc
jb
sbb
inc
jns
out
lea
pop
dec
repnz
test
mov
mov
test
cmc
nop
jecxz
adcl
add
mov
ss
mov
add
pop
xor
push
xchg
and
test
in
rclb
ds
mov
mov
sbb
jl
cli
out
xlat
jp
imul
lods
fdivrl
add
push
jmp
ret
or
stos
cwtl
adc
in
pop
sub
add
in
lret
add
pop
xor
repz
add
mov
add
mov
mov
dec
or
popa
rcl
sbb
or
pop
mov
xchg
add
test
xchg
repnz
inc
push
scas
cmc
cmpb
cmp
dec
daa
add
and
add
sti
mov
jne
sbb
shl
into
xchg
mov
out
jg
add
inc
mov
and
test
fsts
imul
stc
scas
xor
sub
inc
add
clc
add
imul
or
cmp
movsb
das
rorb
push
pusha
sbb
lcall
cmc
aas
sti
push
add
mov
add
stos
sub
add
popa
mov
js
ss
popf
add
stc
add
arpl
pop
flds
ljmp
sub
push
cmp
test
movsl
xor
adc
cmp
mov
sbb
inc
push
fadds
xchg
std
jecxz
rcr
int3
and
sti
xchg
add
rolb
pop
fstpl
stos
add
jns
cmp
pop
mov
add
repnz
test
loope
addr16
or
push
add
push
pop
lods
add
movq
aam
in
add
jb
adc
mov
and
jl
fs
movl
push
fdivl
and
cmp
mov
xchg
add
add
outsl
sarb
lock
mov
cmp
stos
clc
cmp
mov
sub
and
jns
cs
psubb
jno
add
jnp
mov
dec
cmp
mov
iret
add
mov
mov
and
cmp
insb
add
out
leave
lea
idivb
incl
jp
xor
add
push
aas
ja
and
lods
das
push
pusha
loop
sub
mov
xlat
jbe
movsl
or
xor
sub
lcall
ret
out
xor
enter
add
cmpsl
ret
xchg
movl
adc
add
ss
not
xchg
xor
andl
ss
mov
negl
testb
mov
ljmp
xchg
shll
sub
mov
pop
ret
lret
jp
and
and
cmp
divb
pop
xchg
lret
lahf
xchg
dec
imul
sbb
lods
and
xor
adc
xlat
in
loop
adc
xchg
jnp
test
in
jg
adcl
mov
cmp
push
addr16
xchg
sbbb
pop
cmpl
xchg
xor
add
mov
fstps
sbb
insb
add
dec
mov
push
roll
cmp
jno
std
xor
jae
lock
ljmp
jbe
hlt
add
xchg
sub
sbb
cli
mov
xchg
or
add
sub
add
mov
mov
pop
in
into
incl
xchg
sbb
sbb
lods
inc
or
add
xchg
mov
lods
cltd
jl,pn
addb
jbe
divl
data16
nop
into
addl
fisubs
aas
clc
jmp
das
add
inc
mov
inc
repz
or
in
negb
sbb
and
insl
jge
xchg
mov
and
adc
add
cli
out
idivb
xor
cmp
push
and
cld
jb
or
mov
and
mov
lret
mov
or
dec
in
shll
pop
fs
sub
push
mov
scas
lock
add
adc
and
add
and
mov
sub
scas
push
clc
mov
into
dec
fsub
sub
ret
add
or
enter
loop
mov
ficompl
add
fbld
inc
js
sub
mov
ja
cld
decb
cmp
mov
add
popa
rcll
fwait
push
add
inc
or
cld
out
ds
adcl
dec
lods
sub
sbbl
mov
ret
lea
sbb
or
add
and
mov
stos
push
out
add
stos
push
push
add
sahf
xchg
aad
out
hlt
adc
xchg
mov
out
add
inc
sub
test
lds
xor
mul
lcall
out
mov
add
xchg
dec
pop
xchg
mov
int
pop
inc
imul
lods
inc
aad
add
lods
jbe
jecxz
sbb
xlat
in
jle
sbbb
and
in
fsubl
pop
push
fildll
es
sarb
iret
jecxz
std
cwtl
sbb
jb
inc
cmp
add
mov
fldl
stos
push
fldt
mov
lret
movsb
add
rorl
cmp
lahf
les
push
inc
add
dec
mov
fsubrl
insb
add
mov
push
cmp
jp
push
xor
mov
jmp
sarl
xchg
les
loopne
cmovns
cmpsl
sbb
iret
pushf
dec
add
scas
test
adcl
add
pop
lret
sub
adc
dec
sbb
add
jmp
jo
cmc
jns
loop
xor
clc
xor
sahf
pop
sbb
stos
add
rorb
nop
and
cmpsl
fstl
add
xor
mov
adc
cs
in
pop
jp
hlt
dec
popf
mov
notb
repnz
shlb
sub
loopne
add
jae
adc
pop
and
nop
fsubr
mov
push
add
lods
adc
mov
jl
fistl
add
xor
es
dec
lock
xlat
test
mov
sbb
cmp
lock
inc
add
repnz
mov
pop
je
adc
pop
arpl
cs
out
int3
cmc
push
mov
push
into
add
std
inc
xor
ja
and
jmp
pop
lahf
sub
add
fwait
sti
ret
fadds
jno
ja
xchg
sbb
add
repz
sar
ja
jge
mov
inc
add
mov
icebp
popa
pop
mov
add
lret
or
jl
and
stos
or
lods
add
dec
xor
iret
adc
mov
adc
pop
and
test
push
mov
xorb
xor
cmp
push
mov
stc
ret
and
add
lods
cmpsb
jl
pop
jp
cli
mov
cmp
jo
sbb
dec
or
cmp
fidivl
pusha
pop
xlat
and
int3
and
mov
imul
in
inc
fwait
mov
cmp
inc
cmp
cld
add
es
lcall
cmc
add
in
loope
aaa
out
frstor
sub
add
fdivl
or
in
and
roll
pop
jp
sbb
ret
push
cli
shrb
dec
shlb
inc
dec
das
out
and
in
nop
sub
add
jmp
push
lods
loop
mov
jl
mov
inc
add
add
cmp
mov
xor
push
out
push
lock
jl
inc
loopne
push
pop
sub
insl
and
pop
mov
lahf
ret
add
rolb
adc
mov
mov
mov
into
das
sbb
sub
push
add
inc
mov
fsub
push
pop
dec
or
add
mov
aam
loope
add
std
push
popa
and
jmp
cmc
xchg
inc
pop
jb
jnp
or
hlt
pop
push
dec
and
mov
cmpsb
push
insl
mov
fdivs
mov
jp
xor
pop
push
add
sub
cmp
add
or
add
or
into
dec
cmc
add
add
and
pop
std
test
aam
and
insb
cmpsl
lret
pop
ret
leave
add
mov
rcll
add
adc
dec
add
mov
stos
fwait
rcrl
adc
call
xchg
or
and
and
or
push
shll
stc
out
lds
sbb
jb
mov
lods
cwtl
or
add
pop
das
cmpsb
cmp
add
inc
test
mov
cltd
ds
ret
mov
pop
push
sbb
ss
imul
mov
pop
push
xorl
out
and
rep
sub
pop
movsb
jbe
mov
stos
pusha
inc
jp
or
andl
sbb
shrl
sub
add
shlb
xchg
orb
pop
jno
and
or
mov
adc
decl
or
mov
xor
push
pop
aas
jp
jo
add
add
icebp
hlt
pop
dec
push
add
fildll
std
adc
cld
push
sbb
stc
pop
cmp
pop
lods
push
xchg
add
sub
sub
inc
dec
cltd
ss
test
lret
cmp
pop
add
push
push
add
xchg
sbb
mov
std
iret
mov
push
in
inc
call
add
adc
std
ds
push
cmp
lock
sbb
adc
testl
fiadds
jmp
and
inc
fmuls
in
pop
mov
fisubrl
orl
add
push
test
and
jl
cmpsl
and
jge
or
outsb
stos
sub
push
inc
mov
pop
xor
cmp
bound
pop
sti
fwait
aad
lret
loopne
jle
and
dec
xor
subl
cmp
ret
pop
inc
test
or
cmpsb
cmc
lahf
add
lods
insl
inc
cmp
das
rolb
mov
in
or
fisubl
dec
mov
adc
sbb
add
loop
push
mov
dec
add
xchg
mov
fistl
mov
jecxz
iret
rcll
and
fwait
scas
sbb
add
jb
lea
movsb
into
add
xor
jecxz
lods
push
jnp
lds
popa
mov
adc
or
inc
inc
sarb
pusha
push
or
pop
clc
leave
add
cpuid
int3
fstpl
les
and
mov
add
mov
xchg
inc
mov
out
mov
push
mov
ds
cmp
and
push
add
das
in
outsb
aad
sbbb
sub
mov
sbb
fdivrs
dec
fnsave
push
add
mov
test
lds
ds
or
xor
mov
sti
aad
cmc
add
cwtl
mov
add
stc
nop
dec
arpl
mov
adc
jp
push
add
in
insl
jb
dec
and
push
jne
repnz
scas
mov
mov
inc
in
insl
str
clc
test
mov
mov
imul
shll
loope
push
jg
mov
daa
inc
notl
int
push
out
sbb
sbb
fnstcw
jg
xchg
cltd
mov
jo
pop
clc
jnp
mov
add
rcll
add
dec
push
pop
add
adc
push
stc
rolb
insl
lcall
add
lret
fnstenv
push
jmp
sbb
inc
or
xor
mov
shlb
or
icebp
sbb
adc
sub
push
jbe
shrl
iret
mov
jmp
xor
popf
add
and
xor
jb
fnsave
lea
inc
enter
add
and
addr16
dec
cmp
or
mov
scas
pop
push
jmp
and
pop
dec
adc
pop
add
add
aam
in
mov
and
push
pop
sub
add
mov
incb
cmpsl
jmp
or
push
xchg
ja
and
jge
push
xor
adc
jb
add
adc
mov
fists
cltd
jb
stos
leave
aad
and
loop
xchg
dec
xchg
add
or
cs
xchg
in
sbb
xlat
sbb
jno
rorl
loope
mov
leave
push
cmp
or
lods
lahf
je
pop
shlb
mov
xchg
shl
cmp
lods
add
add
fiaddl
ss
or
mov
sbb
xchg
adc
jecxz
jp
pop
loop
cmp
insb
ficomps
mov
rcrl
xor
movsl
xor
and
and
add
popl
push
daa
testl
add
shlb
sti
nop
aam
push
and
sbb
ret
fcoms
pop
jbe
scas
dec
and
popa
fwait
lea
dec
cmpsb
add
lcall
jecxz
rclb
and
inc
sbb
arpl
mov
lcall
daa
mov
ds
inc
mov
sub
sbb
pop
or
xchg
cmpsl
inc
or
arpl
gs
pusha
aad
xchg
pop
test
ret
loop
adc
xor
xchg
in
and
das
jne
push
adc
mov
cmpsb
xchg
adc
int3
xchg
mov
add
add
mov
pop
popa
call
mov
push
xlat
or
bound
addr16
inc
xor
cmc
jae
gs
mov
out
inc
or
ljmp
into
xor
push
repz
vpdpbusd
dec
lret
jl
popa
and
sbb
fsubs
sbb
pop
hlt
add
jbe
ret
inc
out
cs
inc
mov
cmpl
faddl
in
sub
xchg
inc
xchg
sub
stos
cmpsb
ret
add
ja
xchg
cli
adc
cs
adc
gs
das
pushf
movsb
ds
push
cmp
es
pusha
mov
mov
daa
xor
jnp
sub
sbb
cmp
jp
out
into
mov
mov
shrb
jg
sbb
jge
adc
rol
aas
mov
negb
push
adc
incb
pusha
enter
lcall
pop
in
jl
outsl
test
andb
jp
mov
scas
daa
add
pop
mov
inc
cmpsb
lock
mov
or
mov
popa
int3
test
iret
jo
inc
stc
add
lods
xorb
sub
fwait
inc
mov
or
daa
and
cmp
add
mov
jp
xchg
mov
mov
mov
dec
inc
cmp
mov
incb
mov
inc
movsl
imul
mov
dec
mov
scas
lahf
sbb
ljmp
rcll
xor
stc
and
loopne
or
sub
mov
push
andl
xchg
loop
mov
xor
sbb
in
arpl
ret
mov
mov
pop
adc
movsb
push
sub
cmp
dec
push
shll
sbb
xchg
rcrl
mov
mov
je
shlb
nop
cld
adc
lret
ja
clc
ret
scas
popf
xor
test
scas
lds
leave
repz
inc
push
mov
xlat
nop
jl
std
pop
cmc
sahf
pop
in
xor
cmp
mov
adc
scas
enter
push
fcompl
cld
or
out
lods
pop
ret
ficoml
xchg
and
inc
jb
outsl
jp
fisubs
imul
movsl
int
jl
mov
int3
adc
xchg
sub
inc
jl
shll
and
in
mov
aaa
and
cmp
or
aas
and
dec
loopne
add
dec
ret
mov
adc
sbb
fisttps
or
cmp
push
aaa
jp
sbb
add
and
gs
jmp
icebp
and
inc
mov
iret
std
inc
and
nop
aam
cs
jo
daa
sahf
dec
cmp
loopne
or
jp
fldenv
test
pop
andps
xor
jnp
add
jae
mov
loope
adc
std
enter
inc
and
fwait
xchg
aad
stos
mov
inc
adc
mov
sbb
stos
dec
mov
cmp
push
xchg
test
or
cmpl
cmpsb
movsl
or
aam
adc
sbb
lea
mov
int
aam
test
mov
call
std
cltd
pop
dec
jno
xor
and
in
out
or
fnsave
inc
rolb
jp
scas
dec
mov
sbb
pop
mov
jne
cmp
popa
cltd
xchg
jecxz
xor
nop
inc
push
gs
and
cs
outsl
sbb
cmp
and
scas
addr16
xchg
or
jns
or
or
imul
jne
in
jns
test
popa
inc
cmp
inc
push
loopne
lds
cmp
xchg
sub
inc
outsl
sub
dec
or
push
dec
mov
inc
sbb
fcompl
rorl
dec
add
movsb
mov
sbb
mov
jbe
hlt
adc
iret
test
pop
sbb
es
sub
xchg
push
jg
and
adc
js
rorl
loope
pop
jns
mov
or
cmpsl
sbb
cmp
sub
fstps
out
jmp
and
ret
adc
ljmp
xchg
inc
cmp
in
imul
ja
or
mov
loopne
lods
ret
pop
mov
xlat
mov
mov
test
jmp
fisttps
dec
mov
or
sbb
inc
sub
outsb
lret
loop
gs
inc
push
mov
aas
push
xchg
int
bound
pusha
nop
es
push
mov
or
sbb
lret
mov
jne
push
loope
repnz
daa
or
mov
mov
push
add
pop
jle
and
mov
sti
cmc
fsubrs
sub
sbb
push
inc
cwtl
xchg
out
adc
push
dec
xor
stos
jl
add
xchg
sub
aaa
add
es
scas
cmp
movq
lahf
dec
or
cmp
mov
mov
adcb
mov
inc
ret
loop
push
xchg
jg
mov
xchg
push
sub
xchg
mov
lret
add
push
leave
sub
stos
or
inc
pop
sbb
vpsubusb
sti
xchg
int
in
mov
xchg
lret
xchg
cli
adc
inc
inc
out
pusha
xchg
jp
push
cs
add
and
lods
dec
in
mov
mov
sub
add
inc
fwait
jae
fstpt
daa
out
sbb
jnp
fnstsw
or
pop
mov
dec
add
or
add
stc
add
inc
cmpsl
xchg
std
inc
and
pop
and
dec
or
xchg
popf
outsl
in
sub
lea
test
jns
inc
mov
jecxz
mov
imul
sub
rol
cmp
subb
and
loop
jl
in
andb
cli
and
movsb
xor
sbb
lds
pop
testl
dec
mov
cmp
out
pop
push
adc
xchg
cld
sub
lahf
xchg
push
add
arpl
shll
pusha
lcall
push
or
dec
les
je
call
cmp
shll
push
mov
jae
sub
add
fsubr
or
push
ret
test
stos
sub
loopne
mov
inc
rcrb
add
or
xchg
add
cmp
mov
push
pop
scas
cmpsl
cmp
cmp
sbb
sahf
js
push
and
mov
jno
dec
cmp
cwtl
and
sbb
je
and
mov
add
sbb
fwait
push
popa
pop
loopne
jb
popf
js
jecxz
add
inc
inc
mov
add
cmp
fs
rolb
ja
cmc
movsl
pop
add
mov
test
add
push
out
imul
or
mov
mov
psubw
arpl
jecxz
inc
in
rol
cmp
and
pop
mov
mov
hlt
inc
jne
shll
push
add
jo
sub
out
aas
xchg
es
and
cmp
jno
mov
add
lods
cmp
testl
pop
inc
sbb
push
add
mov
dec
push
icebp
pop
imul
push
mov
movl
mov
pop
cmp
loope
stc
lcall
das
cli
les
xchg
jnp
add
iret
cmp
sbbb
and
mov
add
cmp
arpl
dec
mov
dec
in
cmp
enter
mov
xrelease
add
push
mov
add
mov
insl
in
call
out
sub
test
lret
fistps
enter
sub
dec
jmp
leave
gs
int3
add
test
xchg
add
xor
mov
add
and
stos
rcll
inc
shll
adc
adc
stc
dec
jo
lods
sar
je
cmp
call
jnp
pop
xchg
aad
sbb
dec
and
out
icebp
mov
mov
addr16
mov
sbb
in
pop
dec
arpl
xchg
jbe
in
idivb
pushf
xchg
daa
scas
dec
mov
add
in
or
push
je
sub
loopne
ret
cmpsl
jno
outsb
lods
or
ret
ret
call
mov
xchg
cli
aad
ljmp
or
push
stos
jge
pop
lret
adc
mov
sub
sbb
decl
lods
and
loop
and
fwait
or
je
adc
mov
je
ss
mov
lds
inc
iret
das
pop
fldt
jbe
cli
inc
adc
mov
push
cltd
xchg
pop
mov
xchg
sar
rolb
or
out
mov
push
mov
gs
leave
push
pushf
xlat
adc
push
xchg
pop
das
sub
sbb
pop
addb
pop
popf
mov
faddl
nop
scas
push
stc
and
sbb
add
mov
dec
out
scas
mov
popa
and
loop
nop
int3
pushf
dec
mov
dec
mov
jns
jno
inc
add
and
cmp
addl
lds
popa
test
icebp
iret
sub
js
cmp
dec
mov
xor
sub
ja
stc
mov
xchg
popf
or
in
add
insl
add
add
clc
xchg
push
mull
adc
out
inc
test
jae
dec
ret
dec
das
add
fsub
xor
imul
inc
push
xchg
xor
cmp
lock
mov
xorl
in
pop
jae
pop
rorb
stos
nop
xor
arpl
ljmp
scas
sbb
into
das
mov
pop
and
rorb
cmpsl
push
xor
test
mov
cmp
inc
dec
xchg
mov
sub
ss
das
add
fs
cmpsb
add
jg
outsl
push
push
pop
sbb
or
xor
mov
add
test
ljmp
sub
pushl
dec
xchg
loope
push
pushf
add
sbb
push
push
xchg
andb
or
fidivrs
add
push
jnp
jecxz
rorb
xchg
lcall
add
outsl
ds
jmp
out
into
xlat
jge
aam
inc
pushf
aam
push
push
in
and
pop
cltd
and
idivb
add
sub
jnp
jge
addr16
aaa
xor
pop
sub
roll
int
loop
shrl
mov
xchg
jnp
fisttps
subb
je
cli
mov
add
sub
movsl
inc
popa
popf
jbe
ret
or
sarb
jnp
and
bound
jmp
or
add
jns
sbb
add
cmpsl
leave
ljmp
pop
cmp
dec
mov
rcr
dec
sbb
mov
mov
fidivrl
adc
sub
ret
loopne
xchg
and
fidivs
out
adc
scas
in
xchg
pop
xor
pop
es
pop
movsl
add
out
pop
sub
inc
scas
xchg
inc
cmpsb
imul
jmp
mov
adc
mov
ret
cltd
mov
xor
add
stc
xchg
mov
inc
mov
out
add
xchg
clts
xchg
push
rcr
cmp
or
testl
push
push
add
inc
jge
jns
push
aaa
lds
int3
incb
lret
ficoms
xchg
subb
add
pop
adc
adc
inc
and
mov
push
push
xor
flds
out
adc
pop
sub
in
shll
jmp
cmp
aam
fdivs
aad
mov
add
sub
add
lahf
mov
jno
mov
or
sub
jb
jne
add
iret
jge
ja
lret
push
mov
pop
add
test
repz
lods
cmp
add
inc
arpl
pop
cwtl
leave
add
pop
daa
and
adc
loop
dec
mov
int3
mov
test
shrl
add
jbe
jno
aad
mov
sbb
shrl
ffree
pop
pop
vcvtss2si
jmp
push
jae
repz
sarb
and
lds
fsubrl
pusha
jne
xchg
jo
add
and
and
add
ret
add
inc
push
mov
fldt
cs
xor
add
cli
mov
bound
sub
jl
adc
push
mov
sub
aaa
or
push
outsb
and
add
pop
add
inc
shll
iret
pusha
push
cmp
sub
jnp
shrl
push
add
shrb
add
mull
add
bswap
jmp
dec
and
ret
mov
cmp
stos
or
cmp
pop
jne
mov
add
xor
and
and
mov
xchg
scas
movl
fsubr
mov
dec
and
mov
test
cmp
xor
jp
jnp
jmp
mov
loopne
xchg
and
fscale
sbb
mov
mov
jp
and
or
fisubs
add
icebp
and
push
stos
fnstcw
outsb
xchg
lret
adc
call
outsl
add
add
fnstenv
push
fidivs
mov
lahf
shrb
arpl
add
mov
std
adc
ljmp
cwtl
and
es
std
dec
or
xchg
add
out
add
lcall
add
mov
mov
inc
add
and
mov
adc
sti
mov
mov
xchg
jge
rol
mov
sahf
xchg
mov
fstpl
mov
inc
stos
imul
mov
pop
sub
sub
add
scas
arpl
ljmp
imul
inc
and
xor
out
aas
or
mov
pop
dec
add
out
insb
aad
fidivrs
ds
inc
incl
std
lods
dec
fwait
add
cld
mov
pop
adc
mov
orb
xchg
mov
arpl
mov
jmp
xchg
fistpll
adc
ret
mov
imul
dec
ja
rolb
cmp
adc
xchg
xchg
xlat
add
xor
daa
leave
push
fildl
out
dec
xor
adc
jo
enter
cmp
mov
testl
cli
xor
and
mov
lea
cmp
adc
repz
gs
loop
rolb
xor
popf
fwait
inc
in
nop
cmp
xchg
xchg
test
mov
pop
xor
xchg
inc
jbe
add
mov
shlb
push
xor
add
ja
incl
rep
add
mov
enter
cmpsl
add
testl
clc
iret
mov
out
dec
xlat
jne
mov
inc
movsl
mov
lds
dec
mov
cmp
sbb
adc
ljmp
mov
sbb
int
es
push
fstpl
lret
int3
jb
push
call
xor
aaa
pop
imul
add
jl
add
sub
sahf
repz
mov
clc
cmp
add
or
push
or
add
out
test
in
inc
rorl
pop
jle
and
mov
sbb
pop
adc
loopne
sti
aad
fidivl
inc
jns
flds
int
aaa
sbb
push
add
ret
in
divb
push
xchg
cmc
jno
pop
inc
xor
inc
jg
dec
push
inc
push
insb
xchg
out
sub
in
xchg
xor
and
je
add
out
cwtl
icebp
popf
mov
lcall
pop
pop
ret
rcrb
mov
jmp
add
lock
cmpsb
add
idivb
call
pop
or
jmp
add
or
add
ret
mov
imul
cmp
aam
and
adcb
pop
inc
push
add
pushf
dec
mov
fcoml
mov
add
jns
jo
xor
push
loopne
imul
rorb
std
xchg
add
filds
mov
and
push
sub
add
arpl
xchg
adc
push
push
ret
lock
les
xor
insl
sub
mov
pop
stos
sbb
xchg
addl
add
mov
dec
dec
pop
popf
xlat
fsts
mov
xchg
adc
mov
jp
mov
cli
push
scas
scas
dec
add
add
test
jle
stos
loope
pmuludq
push
out
sbb
cmp
sub
rolb
es
push
nop
loopne
inc
inc
cmc
and
or
insb
xor
imul
test
pushf
xor
and
and
enter
sbb
mov
pop
add
ja
mov
dec
fwait
ret
mov
loope
pop
pop
mov
pop
shrb
mov
jmp
scas
adc
sub
xchg
pop
or
lds
fistpl
jne
add
xchg
das
push
mov
push
and
cmp
sbb
lret
cld
and
add
jnp
ficompl
rcrb
es
test
add
negb
xchg
nop
cmp
mov
filds
idivl
mov
popa
add
adc
adc
dec
test
std
sub
push
cmp
std
push
orb
movsl
pusha
mov
ret
jle
dec
cmp
iret
xchg
pushf
das
cs
xchg
jl
cmpsl
lock
push
cmp
rol
and
mov
mov
insb
mov
jecxz
cmp
addr16
xchg
fmull
insb
cmp
push
and
and
push
pushf
adc
movsl
add
ret
cmp
xor
fnstenv
outsb
xor
cmpsl
pop
mov
cmp
add
movsb
push
cmp
cmp
push
pop
mov
cmpsb
dec
sbb
loop
imul
out
add
xchg
loope
sbbb
pop
ljmp
add
sbb
jbe
std
mov
les
or
addb
daa
mov
adc
scas
les
loop
test
cmp
mov
aas
inc
push
sbb
jmp
andl
ret
inc
in
cs
xchg
shll
xchg
xchg
test
aad
inc
pop
inc
aaa
cmp
mov
sub
xchg
mov
adc
sbb
and
imul
pop
mov
cmc
out
stc
lret
push
shl
jb
mov
adc
enter
orb
mov
rcr
mov
popa
hlt
or
sbb
xor
ds
arpl
mov
xor
jp
sbb
add
mov
mov
out
sarb
sbb
mov
mov
add
outsl
ret
push
mov
ljmp
out
add
aam
leave
add
data16
mov
xor
add
sub
out
cli
ja
mov
lahf
xchg
loop
inc
fimuls
push
cmp
sub
sbb
xor
or
add
xchg
jmp
dec
js
imul
pop
sub
adcl
out
imul
cmp
dec
lcall
in
mov
dec
push
lcall
lret
pusha
jge
mov
jne
popf
mov
repz
rorb
out
adc
es
xor
mov
or
jo
push
stos
test
inc
and
sub
bound
xor
sbb
orl
add
bound
pushl
and
icebp
das
fiadds
dec
jne
incl
in
push
mov
test
xor
dec
cmp
je
sub
outsb
or
loop
dec
pop
in
mov
mov
pop
add
shrb
push
shl
jp
adc
rcrl
sub
sbb
and
leave
add
in
pop
cmpsb
imul
adc
sbb
mov
repz
cli
adc
out
xchg
iret
and
data16
mov
mov
add
sbbb
inc
xchg
movsl
cmc
not
inc
jmp
insl
and
sub
mov
inc
jne
fistps
xchg
out
xchg
dec
lret
xor
jl
cmc
cmpsb
xor
inc
pop
dec
mov
sbb
add
and
xchg
xchg
daa
in
add
xor
js
lock
insb
add
or
dec
lods
jno
into
mov
fcmovbe
pop
sub
mov
mov
lahf
arpl
dec
ficoms
add
push
dec
lock
imul
shlb
std
das
out
add
xchg
negb
ret
jl
add
mov
das
shlb
ds
into
cmp
xor
subl
add
test
loop
incl
cwtl
mov
rol
add
inc
mov
mov
push
inc
fiaddl
in
dec
shrl
mov
fwait
mov
and
add
aas
outsb
rorl
dec
sbb
orl
add
sub
dec
or
jb
adc
mov
test
mov
scas
add
arpl
pop
and
sub
pop
lods
or
jo
cmp
daa
xlat
iret
jecxz
mov
push
outsl
das
mov
lods
mov
jne
add
push
dec
lret
aad
sub
add
iret
divb
inc
and
add
sbb
push
lcall
in
or
movzwl
pop
adc
add
sbb
fwait
add
mov
jle
push
ret
call
popf
std
lods
iret
cmp
pop
cmp
loope
mov
fstps
testb
add
xchg
popf
cld
shl
add
ljmp
fwait
sbbb
scas
test
pop
fsubrs
repnz
int
push
xchg
loope
dec
aaa
sub
inc
or
cmc
lods
sarb
cmp
dec
stos
movsb
add
scas
push
or
mov
leave
xor
fs
add
pop
push
sbb
cmp
in
push
and
xor
mov
into
add
stos
lods
leave
mov
bound
or
aas
jge
ja
add
jg
push
mov
xlat
mov
cli
sub
cmp
mov
mov
and
mov
sbbl
into
stos
mov
adc
std
dec
push
cmp
jo
mov
xchg
add
push
xchg
xorb
incb
lret
push
data16
out
int3
ret
or
push
add
daa
gs
push
movb
push
out
int3
dec
cmp
call
mov
xchg
adc
sti
pusha
and
es
cmp
fsubs
nop
clc
je
mov
inc
or
or
addr16
movsl
adc
outsb
test
push
sub
add
fwait
test
cmc
mov
mov
sbb
cmp
roll
imul
pop
pop
push
sbb
mov
mov
add
pop
push
dec
daa
hlt
lea
add
mov
sub
dec
push
push
mov
pop
sbbl
cs
mov
xchg
xchg
mov
pop
into
add
pop
aam
add
sub
pushf
add
inc
jl
push
mov
cmp
std
sbb
push
jmp
inc
jb
xor
jp
sbb
cli
ljmp
dec
sbb
mov
out
in
dec
loopne
or
push
add
mov
rcl
inc
xchg
loope
and
fnsave
insb
psllw
repnz
jecxz
cmpsl
mov
dec
flds
inc
xor
enter
add
mov
push
push
pushf
mov
jl
push
xchg
sub
add
dec
inc
ds
sbb
test
pop
arpl
insb
mov
cmp
insl
inc
into
fisubrl
out
imul
and
adc
stc
dec
test
pop
aaa
add
imul
push
pop
in
and
jecxz
mov
xor
int3
dec
shlb
push
mov
sbb
cmp
jp
movsl
stos
adc
leave
out
cld
mov
int
adc
les
pop
add
movsb
test
xlat
das
add
mov
imul
adc
imull
mov
sub
pushf
inc
mov
sub
mov
add
sub
lret
movsl
ret
nop
jmp
push
and
sub
add
jne
dec
call
jle
dec
cltd
mov
jecxz
xor
mov
cmpsl
pop
data16
pop
ljmp
push
pop
jne
inc
jmp
ret
mov
int
or
jo
fiaddl
jb
pusha
sub
das
push
out
cmp
in
cmpsl
aam
xor
xor
mov
add
jns
add
sbb
loopne
ret
cs
add
sub
add
mov
mov
mov
je
lcall
ret
add
cmp
jbe
ficompl
add
test
dec
pop
out
add
icebp
pushf
sbb
sbb
adc
outsl
adc
daa
movsl
add
ds
mov
add
and
mov
pop
add
stos
inc
mov
pop
cmp
xor
int3
arpl
cmpsl
cmpps
mull
xor
hlt
xchg
pop
popf
lahf
dec
fldl
mov
and
or
or
mov
xor
sub
aaa
js
mov
cmp
ljmp
sub
cmpsl
int
mov
call
mov
inc
aas
cs
xchg
push
add
outsl
test
add
push
xchg
cmp
aaa
inc
push
roll
mov
and
mov
arpl
mov
add
pop
sbb
add
and
or
push
push
cwtl
or
cmc
and
outsb
sub
add
dec
or
ds
xlat
add
adc
add
mov
outsl
int
ss
or
test
jmp
out
jnp
aas
xchg
add
icebp
mov
inc
adc
and
es
cmp
or
fldt
aaa
dec
mov
cmp
or
inc
add
xchg
and
aam
lahf
mov
push
loop
and
add
adc
stc
test
xchg
imul
and
push
and
mov
flds
lcall
and
xchg
cmp
repz
pop
insb
add
rolb
adc
xchg
out
add
xchg
rclb
shr
adc
mov
das
cmpsb
stos
add
lahf
sub
mov
push
add
fidivrs
inc
aad
sub
fmull
test
and
testl
and
scas
test
push
call
and
inc
xor
or
ds
add
notl
mov
popa
inc
xor
rcrb
nop
xor
or
sahf
mov
pop
out
and
and
mov
push
add
roll
jo
inc
jns
xorps
stos
cmp
pop
ret
pop
in
outsb
aas
es
lcall
push
jmp
xchg
loopne
repnz
ret
pop
and
fadds
xor
push
add
sbb
rcll
mov
mov
cmp
inc
push
jnp
add
jmp
cmpsb
dec
ret
je
jae
sbb
xchg
add
add
outsb
out
pop
mov
add
mov
add
cmpsl
outsl
jns
in
mov
cmp
adc
pop
xlat
movsl
mov
repnz
rol
jbe
cmc
pop
cmp
pop
roll
pop
mov
sub
inc
add
xorl
mov
push
pushf
pop
mov
dec
sti
adc
mov
cmovo
xchg
lcall
jo
shll
jae
or
mov
or
add
and
jae
insb
rolb
aaa
out
inc
xor
ret
dec
sub
iret
repnz
add
cmp
fwait
pop
inc
add
in
in
xor
pop
add
icebp
and
xchg
int
dec
mov
pop
and
test
les
subl
pcmpeqd
push
gs
add
sbbl
add
ret
mov
jae
cmpsl
add
jnp
xlat
clc
test
shrl
jo
popa
dec
sarl
daa
andb
xchg
sbb
out
ljmp
lahf
adc
ss
adc
jb
ficoms
idivl
adc
and
shlb
aas
stos
sub
mov
je
dec
rcrl
add
mov
or
cmp
pop
dec
test
icebp
aam
xchg
pop
fisttps
push
insl
xchg
sbb
adc
mov
out
inc
leave
add
dec
sbb
and
mov
mov
sub
adc
lret
and
add
jmp
or
mov
ret
push
imul
jp
push
ja
adc
cmp
out
imul
inc
out
jl
in
and
pop
push
inc
mov
rorb
cmc
idivb
pop
pop
ss
std
dec
roll
mov
stos
inc
sbb
push
jb
arpl
xor
ret
popf
mov
iret
movsb
lret
or
lods
rcrl
cmp
mov
mov
jl
rcl
sarb
je
loope
sbb
jmp
and
ds
rcr
out
inc
popa
xor
dec
fiaddl
clc
sbb
xor
repz
sub
mov
inc
ss
into
fdivrs
add
add
pushl
enter
out
insl
fsub
xchg
je
and
sub
shr
mov
pushf
fstpl
mov
leave
aas
or
mov
cmp
inc
je
sbb
cmp
sbb
int
icebp
xor
sbb
ret
popa
movsb
xchg
out
mov
xchg
push
out
inc
xor
loop
pushf
out
movsb
pushl
push
les
add
ret
lods
mov
dec
pop
cmp
add
es
push
pop
pop
and
loop
add
pop
inc
jbe
fdivrs
cmpsl
xchg
sub
mov
decl
ja
xchg
mov
mov
and
rcrb
xor
mov
sub
sbb
add
repnz
js
faddp
fmul
arpl
add
mov
add
mov
and
add
out
pushf
sbb
inc
mov
ret
push
inc
add
adc
pop
dec
aas
lahf
add
dec
pop
sub
in
push
pushf
xlat
shlb
fldl
mov
ljmp
jb
or
fisttpll
decl
xlat
dec
push
test
adc
inc
push
mov
xor
cmpsb
adc
clc
cmp
or
jle
add
int
aad
fldenv
sub
xchg
jo
xor
xor
mov
inc
sub
cli
cmp
add
test
mov
push
faddl
ja
rclb
fists
adc
stos
mov
mov
mov
xor
xor
shll
es
mov
ret
xor
xlat
add
or
add
sub
loop
push
pop
inc
std
out
push
mov
and
mov
lock
fsts
movsb
fwait
mov
and
inc
pop
loop
lods
ret
xchg
cmpsb
jmp
sub
add
insb
adc
and
and
addr16
cmp
sub
push
or
inc
cmpsb
or
add
xor
mov
lcall
inc
add
stc
jb
pop
divb
addb
insl
repz
mov
xor
and
push
pop
add
inc
cs
insl
jge
mov
xchg
sub
fdivrl
iret
adc
add
je
insl
aam
movsl
jo
es
out
shl
mov
push
inc
pop
push
pop
add
or
sub
test
and
daa
pushf
movl
and
xchg
lret
out
mov
xor
icebp
add
aas
jp
dec
hlt
or
or
les
push
cmp
sbb
in
mov
cmc
mov
mov
jg
sbb
ljmp
movsb
loopne
insb
add
aas
inc
xchg
scas
xchg
pop
das
cmp
add
ret
mov
loopne
popa
inc
pop
pusha
sbb
enter
das
icebp
xchg
cmp
push
lahf
jmp
sbb
dec
inc
loop
imul
or
pushf
dec
jbe
adc
lods
js
sub
cmp
inc
fsubrl
mov
mov
push
daa
leave
cmc
jp
push
jne
cmpsl
hlt
orb
xlat
sarb
mov
add
aad
cmp
push
pop
dec
or
jb
cmpsl
sbb
adc
shlb
add
rolb
sbb
xchg
fimull
loopne
mov
lahf
mov
mov
jmp
push
fnsave
jp
fidivl
jne
fwait
aad
push
cs
jb
daa
pop
imul
gs
mov
push
daa
and
and
xchg
jp
orl
push
fs
adcl
and
xchg
dec
sub
or
daa
je
xchg
fnstsw
or
adc
adc
in
in
xchg
ds
sub
pop
data16
roll
fwait
mov
sti
pushf
ja
movsb
and
or
xchg
sar
adc
or
jb
jne
stos
iret
cmp
or
fisttpl
gs
jb
adc
mov
mov
aaa
mov
fs
and
shr
cmp
push
push
jge
imul
js
pop
fcmovnbe
inc
jp
ficomps
out
add
push
inc
or
movsl
mov
into
jp
cwtl
cwtl
xchg
pop
popf
adc
xchg
pop
nop
out
and
xchg
mov
mov
adc
adc
ror
push
scas
adc
mov
outsb
adc
add
jno
mov
mov
xchg
cld
pop
inc
inc
jnp
xor
xor
add
fmull
add
jecxz
roll
mov
scas
imul
inc
dec
add
mov
xchg
dec
je
inc
adc
repnz
arpl
clc
in
lods
rolb
or
inc
and
mov
inc
or
push
popa
in
mov
dec
inc
stos
adc
inc
sti
ds
jae
aaa
ss
pop
sahf
add
cmpsb
in
add
pop
cmp
inc
sub
xchg
add
and
add
xor
jge
mov
dec
and
outsl
push
roll
or
add
cmp
add
pop
push
pop
cmc
mov
icebp
xor
lret
mov
mov
adc
test
add
popa
push
cli
ret
stos
rcr
in
pop
jo
pop
stos
push
dec
xchg
shll
and
loopne
mov
jo
jns
xchg
fstpt
pop
rcll
jnp
add
xor
and
xor
mov
ret
push
mov
arpl
fadd
pop
fcmovu
shll
mov
jbe
mov
dec
mov
hlt
das
pusha
or
sarl
xor
xchg
and
cmp
shll
out
mov
mov
jo
mov
cmp
inc
out
fwait
dec
lahf
and
push
push
cwtl
faddp
cmpsb
add
and
sbb
fmull
pop
mov
xchg
iret
add
mov
out
int3
or
test
rcll
or
mov
add
mov
bound
jecxz
or
je
ret
test
stos
jg
inc
jle
jecxz
add
movsb
or
add
xchg
ja
sbb
cmp
out
xchg
ljmp
add
lock
jmp
orw
dec
daa
and
mov
add
add
ror
mov
out
std
push
add
test
shl
jg
add
lock
inc
and
add
push
das
push
jnp
aaa
mov
pop
or
pop
cmp
xchg
imul
dec
mov
xchg
ds
pop
or
xor
pop
stc
pushf
nop
aam
or
mov
mov
mov
test
add
add
mov
add
imul
xchg
pop
lahf
add
cmp
lods
mov
dec
inc
sub
mov
outsb
push
and
add
push
fimuls
in
dec
movsl
and
inc
sahf
fcomps
or
test
inc
inc
cmp
add
mov
cmpsb
popf
and
lret
add
and
add
pop
add
jecxz
mov
pop
xchg
push
add
push
repz
add
outsb
add
add
popf
xlat
inc
inc
add
lock
outsl
les
add
mov
popf
add
pop
fwait
jmp
or
mov
mov
inc
les
popf
dec
jecxz
daa
jp
lea
and
dec
and
scas
xchg
inc
add
pandn
cmp
int3
sbb
mov
mov
orl
shrl
sbb
push
xchg
scas
sbb
andl
movsb
mov
in
pop
sub
call
cmp
mov
xchg
stc
pop
and
ret
pop
and
pop
xchg
aad
push
pop
iret
add
xor
outsb
jecxz
sahf
cmp
popl
orl
mov
dec
adc
rcr
dec
dec
repz
mov
xchg
in
inc
stos
loopne
add
sti
lock
stc
inc
arpl
adc
add
or
icebp
mov
pop
mov
inc
mov
xorl
daa
mov
push
out
cmp
pop
xchg
cmc
mov
cmpsb
stc
into
add
sbb
jle
dec
dec
aaa
add
xchg
inc
add
pop
movsb
add
bound
add
lock
out
scas
jmp
pushl
adc
xor
sbb
dec
sub
inc
inc
loopne
cmp
add
mov
movsl
cmp
push
cmpsl
sub
in
nop
mov
cltd
les
fcomps
and
push
mov
test
mov
xchg
pushl
push
sbb
les
push
stos
jb
xor
mov
sbb
bound
lret
std
iret
scas
jb
add
hlt
lcall
arpl
pop
icebp
cmp
add
pop
ja
adc
out
roll
lret
mov
adc
jl
and
push
mov
xchg
xor
and
not
popa
jnp
std
xor
add
in
and
add
push
loop
cmp
dec
mov
ljmp
ret
and
repnz
ffreep
or
imul
and
enter
jne
inc
mov
fidivl
inc
ds
sub
xor
and
cmpsl
je
stos
jle
push
pop
mov
add
in
stos
ret
pop
mov
xchg
gs
pop
ljmp
fstpl
aas
xchg
test
jecxz
je
mov
ret
cmp
insl
inc
sbb
lret
add
add
push
cmpb
vaddpd
adc
fildl
xchg
and
mov
mov
repz
pop
add
or
gs
xchg
mov
mov
xchg
flds
cmp
add
cmp
sti
inc
lods
out
xor
mov
push
andl
lret
sub
xchg
in
or
add
inc
ret
push
cmp
add
das
js
xor
popf
shrb
mov
xchg
add
bound
mov
scas
pop
xor
push
sbb
push
mov
std
es
xchg
rol
sbb
daa
cwtl
lret
pushf
sbb
or
mov
lods
lahf
mov
sbb
xchg
mov
dec
lret
cmpl
pop
pop
cmpsl
adc
jae
outsl
xchg
pop
roll
add
bound
imul
xor
repnz
fimuls
add
cmp
add
aaa
adc
mov
inc
jno
pop
insb
int3
arpl
add
addr16
jle
in
popf
add
cld
mov
add
inc
xor
add
aas
mov
mov
dec
repz
add
lret
xor
push
add
push
mov
inc
inc
adc
rolb
repz
pop
jno
add
repnz
push
pop
shrb
xchg
popa
flds
aam
icebp
jne
push
add
out
cmp
push
jbe
sti
in
mov
outsl
cmp
add
push
out
mov
pop
xchg
mov
aad
dec
in
in
popa
popf
ss
enter
mov
pop
cmp
idiv
add
sub
dec
push
jnp
pushf
lahf
push
adc
xor
lods
sbb
sub
imul
sub
shlb
mov
inc
out
inc
mov
insl
adc
cli
mov
stos
repz
mov
add
gs
sahf
pop
pop
xor
jnp
in
shl
cmp
ret
mov
fcmovu
jno
xchg
mov
sahf
loop
cmc
push
add
jmp
dec
adc
in
pushf
add
aam
pop
mov
aas
adc
push
add
sbb
mov
and
jp
jge
mov
lock
lock
je
je
cmp
push
ljmp
in
imul
aam
lahf
mov
inc
nop
or
cmpsb
jmp
das
or
movsl
iret
push
cld
add
mov
pop
addl
push
jge
scas
add
mov
mov
lods
sbb
add
dec
mov
cmpsb
pop
aas
mov
test
add
andb
add
add
mov
fiaddl
in
adc
leave
xchg
mov
pop
fwait
cmp
xor
cwtl
xor
inc
outsl
rol
pop
adc
add
pushf
lahf
inc
lods
push
xor
sub
rolb
outsb
out
and
mov
jl
out
mov
add
mov
mov
pop
sub
xchg
sub
es
flds
mov
pop
fcmovbe
push
pop
inc
mov
popf
ja
add
orl
or
hlt
add
iret
out
cmp
leave
add
sub
fldcw
fs
mov
shll
cltd
jg
pop
or
adc
loopne
cmpsl
push
mov
sahf
mov
jnp
adc
inc
int3
pop
dec
inc
dec
mov
push
xor
aas
pop
test
and
out
add
mov
jnp
push
mov
popa
sub
adc
add
in
scas
add
add
mov
and
add
cmc
dec
push
lods
or
movsb
add
fstl
pop
jmp
icebp
mov
fnstenv
sbb
in
or
in
and
add
xchg
aad
aad
lods
mov
jno
loope
add
daa
inc
jle
jecxz
push
add
lea
inc
push
jnp
into
add
pop
lods
mov
or
sbb
add
add
repnz
sub
or
aam
mov
jl
xor
jno
mov
leave
les
mov
shrb
lods
mov
mov
andl
and
call
mov
daa
mov
out
ret
inc
jns
lret
cld
inc
daa
movsl
pop
pop
cmp
fbld
push
mov
popa
dec
sahf
adc
arpl
lcall
inc
add
aad
orl
popf
lea
and
bound
jp
push
mov
jne
or
addb
inc
fisubl
jo
jmp
add
jnp
fdivr
scas
les
xorl
add
adc
jae
pop
out
sbb
scas
mov
jbe
inc
lods
and
outsb
xchg
mov
mov
ret
inc
pop
xor
push
out
std
cmp
ds
dec
fwait
sub
js
add
mov
or
mov
fucomp
add
fsubrs
add
cmp
pop
add
sbb
test
rolb
cmpsl
or
inc
adc
pop
xor
into
mov
add
loopne
addb
add
cltd
jmp
add
jge
insl
outsb
js
rorl
mov
test
sub
fucomp
dec
out
inc
pushf
les
daa
add
jnp
lret
sbb
ret
lret
push
test
stos
inc
jle
xor
movsl
push
cmp
std
add
xor
cmp
push
add
dec
push
adc
sub
sahf
xchg
ret
movsb
das
jmp
pop
mov
push
add
pop
addb
push
testl
mov
dec
pop
cs
test
imul
test
sti
add
xchg
pushf
or
xchg
inc
nop
xor
bound
cltd
add
jle
sbb
add
adc
data16
and
add
sbb
jne
ret
out
paddd
pop
out
add
test
negl
push
jno
mov
inc
jle
mov
cmp
aaa
add
fwait
lea
and
out
rcrl
das
mov
xlat
stos
sub
dec
add
sub
inc
sub
xchg
inc
clc
and
lock
mov
jno
xor
lahf
mov
sbb
jecxz
push
aad
arpl
xchg
xchg
pop
int3
ret
dec
inc
jge
jmp
out
or
push
push
sub
cmp
fistpll
dec
out
es
add
ds
lahf
mov
icebp
mov
xor
jmp
add
shr
les
and
out
add
lock
dec
inc
call
xor
arpl
push
sahf
scas
add
adc
sub
mov
xchg
xor
xor
sub
popa
pop
and
pushf
enter
cmp
inc
in
xchg
sbb
mov
lret
rolb
jns
adc
push
jo
sti
aam
test
cli
out
ret
push
pop
inc
fcomps
mov
dec
cmp
or
mov
les
jbe
sub
jle
repnz
mov
push
lcall
movsl
add
mov
jecxz
rclb
es
sub
pop
mov
inc
mov
scas
in
xchg
push
sbb
sbb
jmp
add
cwtl
lcall
lahf
sbb
xchg
or
sbb
movsl
mov
sub
leave
add
in
mov
pusha
out
cmc
inc
xor
xlat
adc
adc
test
cmp
fstpt
sub
sbb
fwait
xor
shrl
push
sbb
sub
out
aas
mov
pop
dec
add
scas
es
add
push
push
adc
lock
add
mov
jns
mov
test
and
mov
rorl
rcrl
sarb
outsl
test
idiv
scas
push
rolb
add
clc
imull
sub
dec
push
aam
sti
aad
insl
stos
lods
mov
mov
mov
call
inc
xchg
sti
or
mov
jl
or
hlt
push
pop
jb
rcrb
imul
mov
sub
rorb
xor
inc
cli
sub
add
mov
sbb
add
fldt
add
and
aad
xor
mov
xchg
dec
adc
or
add
inc
add
ret
jne
add
dec
cmp
add
test
cs
and
fiadds
add
das
dec
call
and
pop
mov
xor
cmc
loopne
xor
and
cmp
sbb
sub
mov
jecxz
pop
test
loope
add
aaa
add
cmp
lock
xor
xor
out
inc
sub
cmp
adc
rcrb
sub
loopne
aad
mov
pop
div
sti
add
cli
enter
add
mov
loopne
inc
ret
xor
pop
mov
les
add
xchg
cmpsb
or
jmp
cld
cmp
cmp
pop
dec
add
inc
ljmp
pop
test
ffree
pop
out
mov
aad
add
mov
popa
enter
pop
adc
add
ds
in
fldl
sub
fidivrl
add
mov
cmp
dec
xlat
rcr
sarl
sbb
cmp
lds
icebp
add
push
cli
cmpb
cmp
std
xlat
sbb
in
ret
jno
sbb
and
fstpl
outsl
add
push
xchg
inc
int
xchg
add
or
sub
cmp
js
add
scas
pusha
nop
dec
push
daa
add
mov
andb
cmp
sub
js
jo
scas
sbb
jg
push
xchg
repnz
mov
mov
add
add
xor
push
pop
push
dec
stc
adc
cmpsb
jl
add
push
cmp
aaa
or
push
cmp
or
clc
scas
cmp
add
mov
popa
pop
jb
es
add
mov
adc
clc
xchg
add
lods
subl
and
or
dec
aad
sbb
fnstenv
lcall
sub
push
pop
sti
in
pop
popa
add
shlb
and
shl
xchg
inc
stos
nop
jmp
mov
cmp
daa
add
in
sbb
mov
cmp
ret
adc
add
rcr
cmp
pop
nop
and
out
sub
sbb
inc
dec
sub
cmp
in
pusha
push
lret
leave
addr16
imul
jle
add
por
mov
je
test
sub
add
arpl
aas
clc
pop
adc
cmp
mov
sub
out
push
mov
sub
sbb
and
stos
sub
xchg
add
and
outsl
psubusb
sbb
dec
adc
call
push
fdivrs
add
add
jb
loopne
xor
aas
and
push
std
jne
test
cmp
test
add
sbb
enter
sub
xchg
push
decl
mov
imul
and
pop
sub
pop
sbb
inc
in
loop,pt
in
sbb
mov
and
fbld
adc
shrb
cmpsb
ret
xchg
xchg
inc
and
dec
test
cmpsl
add
mov
mov
ja
mov
xchg
sub
push
and
add
adc
add
pop
mov
or
jbe
dec
rcrb
iret
loopne
ss
mov
mov
mov
jo
add
xchg
roll
test
cwtl
pop
jp
pop
xlat
aaa
add
pop
stc
cli
add
gs
and
int3
inc
je
imul
movl
mov
repz
add
mov
mov
and
mov
sahf
jmp
ja
clc
pop
popl
movsb
fimuls
aam
and
jg
add
or
lcall
aaa
pop
jbe
xchg
mov
repz
jnp
sbb
add
jl
outsb
mov
mov
pusha
adc
push
test
lret
jae
leave
fstpl
add
ds
cmp
mov
mov
les
ror
cltd
gs
xlat
std
daa
inc
aas
lcall
lahf
mov
cli
add
out
js
repz
add
inc
add
mov
repnz
popa
mov
mov
pop
pop
fnstenv
jne
imul
iret
and
ret
push
add
xchg
jnp
in
push
loopne
scas
adcb
dec
xchg
sarb
xchg
data16
bound
testb
fists
jb
dec
dec
pop
pushf
adc
adc
addr16
into
mov
jg
add
add
cmc
test
in
mov
in
add
pop
mov
xchg
je
xlat
out
popa
and
cwtl
jno
clc
push
ret
jb
add
cmp
inc
je
rcrb
in
add
stos
cmp
add
imull
xor
sbb
jae
mov
pop
sbb
mov
and
pusha
jo
xchg
jecxz
or
lds
mov
xor
push
inc
iret
sarb
mov
int3
imul
sub
enter
out
sti
scas
add
and
pop
iret
orl
push
daa
mov
aad
pop
test
loopne
mov
cmp
sub
jmp
fistps
add
sub
push
fcmovnb
int3
mov
shll
repz
sub
aaa
push
cmova
addr16
mov
mov
nop
sub
movsl
out
sbb
inc
and
and
movsl
int3
mov
mov
mov
add
or
mov
mov
adc
or
addr16
add
dec
repnz
lea
shrb
xchg
pop
mov
addr16
jns
adc
mov
in
test
jle
mov
dec
add
sar
inc
inc
cmc
icebp
mov
mov
pop
lock
mov
das
sbb
cmp
sub
add
xchg
fnsave
mov
and
adc
out
mov
mov
xor
mov
or
push
nop
lahf
sub
sbb
xlat
fldt
xor
inc
sub
pop
dec
add
mov
icebp
xchg
cltd
cld
movsl
add
out
sbb
add
xchg
pop
add
dec
add
add
mov
push
push
mov
cmp
mov
out
xor
dec
lock
mov
jle
and
inc
addr16
outsb
and
outsl
pop
pop
roll
fsubr
outsb
pop
fwait
lret
scas
jmp
mov
xor
cmpsl
outsl
mov
add
and
xchg
pop
jnp
lahf
arpl
iret
scas
nop
dec
outsb
jge
mov
push
and
xchg
xchg
pop
cmp
out
rol
int
add
mov
int3
jne,pt
or
jp
and
cmpl
ret
popa
pusha
xchg
or
mov
sbb
repz
sbb
mov
addr16
jle
mov
int
popf
inc
clc
popa
add
push
divl
in
mov
or
or
jns
es
mov
inc
cltd
sbb
xchg
mov
add
and
mov
dec
add
mov
fimuls
pop
lods
mov
fisttpll
xchg
stc
xchg
or
dec
add
push
xlat
add
out
mov
ds
xchg
test
gs
add
cld
cmp
stos
out
add
bnd
push
xchg
scas
cmp
or
add
add
xchg
les
in
add
sub
mov
xchg
lock
and
mov
bound
pop
jle
stc
sbb
fsubrs
cmpsb
pop
add
and
sub
in
xor
xor
pop
ja
mov
fwait
and
movb
cmpsl
scas
loope
fistpll
add
divl
rolb
jge
scas
push
cmp
sbb
sub
push
mov
ds
adc
stos
lock
add
ret
push
push
mov
add
das
cmpl
inc
stos
in
enter
lea
subl
and
cmp
arpl
mov
andl
pop
test
cmp
scas
mov
pop
cld
shlb
cmp
jp
and
ficomps
add
lds
xchg
add
popf
jbe
rorl
xor
add
xchg
xchg
add
sub
out
dec
lcall
mov
movsb
jmp
mov
jp
mov
sbb
ficomps
icebp
fbstp
add
test
add
adc
add
imul
add
hlt
inc
xchg
sub
inc
add
mov
inc
into
addr16
shll
xlat
aas
test
shlb
jne
xorl
aaa
pusha
mov
int3
add
or
mov
push
out
repz
leave
test
stos
add
xor
xor
idivb
rorl
sub
xor
cmc
std
fidivrs
cmpsb
movsl
sti
mov
sarl
sub
cmpsl
lret
adc
add
push
sti
ds
out
mov
loopne
lds
sub
xchg
ds
cmpsl
aad
fiadds
pop
repz
push
je
pop
inc
fldl
mov
ds
neg
aad
inc
test
and
xor
incb
int3
les
xor
popa
xchg
and
pusha
push
pop
fidivrs
es
pop
icebp
loopne
push
lock
push
inc
insb
adc
xchg
mov
cld
add
push
adc
andl
jmp
sbb
xchg
popa
push
inc
cmp
leave
mov
cli
repz
lock
xchg
xchg
pop
roll
sbb
mull
cmp
rcl
dec
mov
xchg
adc
lods
scas
add
xchg
sbb
jle
push
inc
or
clc
xchg
movsl
repnz
aad
pop
fucomi
outsl
mov
rolb
addb
dec
not
add
in
pop
aas
mov
jo
sti
xorl
je
mov
xor
pop
push
add
sbb
stc
sub
cmp
out
dec
leave
into
fists
pop
iret
jl
mov
mov
dec
sti
add
or
sub
inc
push
cmc
sub
mov
mov
sbb
stos
jl
dec
outsl
push
xor
pop
negb
add
scas
sarb
dec
push
adc
mov
repz
mov
dec
mov
ja
and
mov
pop
jnp
and
int
inc
add
and
inc
imul
dec
push
add
mov
incl
pop
pop
iret
pop
cltd
pusha
test
daa
shrl
adc
add
andb
jle
cmc
mov
stos
shll
mov
xchg
mov
fcmovnu
cmp
cs
inc
mov
loop
vmovntps
addb
cmp
cmp
dec
push
out
mov
xor
jg
mov
cmp
test
dec
inc
add
jge
je
jno,pn
and
adc
xor
sarl
push
das
lret
lods
pop
jg
add
and
push
mov
int3
in
sbb
adc
test
push
faddp
xor
aaa
add
repnz
and
cmp
dec
repz
aad
and
lret
push
adc
inc
and
mov
xor
add
xor
push
xor
addl
fdiv
imul
push
add
rorb
ret
jbe
pop
nop
add
and
in
in
push
adc
mov
lret
les
pop
mov
or
sahf
push
add
inc
push
mov
fwait
repz
sub
popf
push
cmp
fists
adc
call
stos
cmp
jge
mov
cmp
fisubl
adc
pop
or
je
jmp
and
xchg
mov
pop
jnp
incl
dec
push
cltd
add
out
push
cmp
add
xchg
mov
fwait
shlb
inc
sub
ds
pop
add
aas
mov
ror
les
aam
and
and
add
out
jbe
into
cmp
movsl
mov
adc
in
dec
fadds
sbb
and
enter
subl
add
and
add
push
imul
push
adc
add
test
sub
push
add
movsb
mov
dec
cmp
adc
push
cltd
cmp
sti
add
leave
lahf
xor
lock
add
xchg
mov
in
add
ja
addr16
mov
jae
push
xor
sbb
push
daa
pop
dec
movl
pusha
dec
jp
cmp
cli
add
or
mov
dec
push
fdiv
insl
rolb
add
mov
mov
test
cmp
adc
aaa
fisttps
addr16
adc
mov
cmp
xchg
sbb
imul
clc
xchg
arpl
mov
mov
add
mov
test
and
inc
es
xchg
mov
addb
xchg
lahf
aad
xor
sub
add
cmp
xor
and
cmc
mov
mov
xchg
mov
add
stc
inc
lret
add
call
incb
repnz
andl
jcxz
ret
sbb
cmpsl
flds
mov
stos
out
lret
loop
dec
and
int
fcoms
mov
xor
mov
es
call
subl
cmp
push
push
mov
ret
div
adc
inc
aam
call
ss
fdivrs
dec
in
fists
mov
ds
sub
mov
inc
xor
add
push
sbb
push
sbb
out
jne
push
xchg
rcr
je
movsl
addl
aad
icebp
cmp
or
shlb
jecxz
inc
add
push
or
pop
mov
xchg
inc
push
ljmp
repz
out
imul
push
push
inc
rclb
das
mov
pop
les
push
dec
cmpsb
rcrb
xor
sbb
cld
mov
outsl
test
push
or
mov
es
mov
shll
icebp
dec
cmp
pushf
adc
xor
jb
mov
pop
mov
lock
mov
mov
sub
push
aaa
hlt
adc
mov
push
aam
ja
shl
and
stc
andl
push
dec
ds
clc
add
sbb
addr16
movsb
add
and
cltd
mov
out
test
cmp
leave
sbb
adc
fstl
fcompl
leave
lret
imul
cmp
icebp
add
ja
pop
mov
dec
int
mov
add
fists
cwtl
rcrl
push
popf
jbe
push
dec
outsl
adcb
ljmp
jns
mov
or
cmp
add
jecxz
loop
cmpsb
retw
test
das
pop
sub
push
sbb
sbb
dec
push
lret
mov
bound
pushf
bt
daa
cmp
or
add
test
xchg
jnp
dec
je
push
cmpsl
icebp
cmp
shlb
call
push
lcall
and
adc
js
out
push
push
sbb
sbb
mov
lock
movsb
add
mov
les
movsl
cmpsb
into
or
xor
mov
cli
pop
mov
jge,pt
sbb
xor
ret
nop
leave
mov
push
test
jns
adc
sub
xchg
xchg
cli
cmp
add
dec
in
mov
scas
lahf
adc
cs
xor
lock
xchg
imul
pop
ljmp
xchg
jmp
add
and
ljmp
cmp
xchg
lods
xor
add
lds
xor
jne
stos
inc
shlb
repnz
cmp
out
add
out
daa
test
jecxz
sbb
xor
mov
sub
jb
xor
adc
inc
push
add
push
push
popa
add
xchg
idivl
sbbb
mov
push
jp
repz
xchg
minps
or
subl
cld
ficoml
xchg
negl
jnp
mov
sbb
ret
mov
lcall
mov
mov
lds
cmpsb
icebp
and
out
mov
test
leave
push
inc
loop
fisubrl
mov
jmp
das
xchg
test
cs
pop
negb
xchg
jp
push
and
imul
test
scas
or
jp
stos
mov
cltd
aad
andb
insb
out
out
fisubrl
inc
pusha
cmp
mov
add
popl
mov
inc
cmp
std
and
mov
je
test
sub
repnz
dec
bound
lcall
hlt
lock
or
add
loop
dec
gs
test
repz
pavgb
mov
mov
adc
inc
cmp
roll
xchg
arpl
cmp
inc
dec
and
dec
xor
hlt
xchg
lret
pop
xlat
andb
int3
test
dec
and
dec
filds
and
pop
and
xchg
pop
push
scas
stc
inc
iret
sub
les
les
lcall
jl
loop
add
dec
bound
test
aas
call
add
add
xor
or
pop
bnd
es
jne
mov
and
mov
pop
adc
loope
push
mov
dec
add
fbld
cmp
adc
jge
loope
jl
loop
cmp
jmp
inc
mov
dec
push
mov
lds
imul
sbb
xorb
mov
cmp
jb
xchg
jns
pop
and
inc
sbb
or
add
outsl
insl
enter
inc
int3
xchg
pop
jne
iret
mov
xor
mov
jg
add
inc
xchg
push
jp
fnstcw
lods
or
popl
test
and
insl
sbb
nop
mov
lods
out
sbb
mov
dec
jnp
add
je
and
arpl
outsl
add
roll
hlt
mov
jp
xchg
or
and
add
jg
cli
mov
mov
mov
popl
lret
shlb
add
fwait
jb
pop
sahf
fcoms
cmp
mov
mov
mov
sbb
cli
cltd
data16
cmp
gs
sbb
jne
jle
jb
incb
inc
mov
push
push
and
arpl
lds
roll
or
jns
pop
movsb
jae
fidivl
ret
and
aas
gs
out
jno
ljmp
addl
inc
adc
xor
jle
orb
inc
cmp
and
adc
in
out
adc
es
rorb
push
addl
cli
or
mov
cmp
inc
pop
stc
jp
sbbb
aas
adc
clc
adc
jmp
test
nop
xor
insl
lret
xchg
andb
adc
cmpb
jo
xor
sub
test
and
fisubrl
cltd
repnz
dec
or
jno
test
rolb
sbb
int3
nop
test
loopne
push
sbb
push
adc
sbb
mov
ret
xchg
xchg
sub
cmp
insl
xor
mov
sahf
add
arpl
loopne
outsl
rorb
in
xlat
pushf
stos
insl
xor
clc
in
push
roll
push
sbb
decl
sub
xchg
inc
adc
and
xchg
jle
jge
sbb
dec
mov
rcrb
repnz
pop
dec
and
jno
sbb
sbb
jp
lret
mov
and
aad
xor
sbb
fnstsw
icebp
xchg
add
loopne
mov
popf
aaa
add
lods
testl
fiaddl
icebp
loopne
mov
or
add
or
repnz
mov
push
dec
fldl
scas
loope
cwtl
add
pushf
xchg
jne
ja
cltd
mov
sbb
xor
aad
cwtl
mov
in
iret
loop
dec
mov
pop
fisubrs
add
push
mov
popf
fstps
rcrl
push
xchg
ja
push
push
fwait
inc
in
into
outsb
inc
mov
dec
ja
sbb
cmpl
pop
jo
mov
ds
xchg
jg
push
jl
iret
data16
jecxz
inc
or
loop
nop
in
cmp
add
inc
sbb
fs
loope
add
shll
cmpsl
add
adc
js
adc
pop
fwait
add
decl
cltd
mov
outsl
loop
icebp
adc
pop
cmp
rorl
lret
mov
lock
js
movsb
ret
mov
pop
cmp
xor
addb
sbb
loopne
adc
lods
sbb
push
adc
mov
xchg
or
sti
sahf
and
ljmp
pop
enter
pop
in
mov
ljmp
ret
xor
sti
add
outsb
mov
mov
sbb
xor
rorl
jne
adc
adc
add
push
push
popf
nop
std
add
js
jnp
addb
call
add
push
stos
cmp
xor
xorl
mov
add
jo
jp
clc
xchg
push
add
or
fcmovnb
cmp
add
shlb
inc
imul
mov
cmpsl
mov
fsubrs
xor
test
push
inc
xchg
leave
cmp
ret
gs
or
fnstenv
adc
bound
push
cmpsl
fwait
mov
xor
push
mov
pushf
lds
push
add
jg
or
repnz
and
shrb
mov
push
mov
sub
jp
das
mov
fsubs
sub
out
dec
hlt
add
sub
pop
add
add
rolb
mov
jmp
dec
dec
and
mov
adcb
shrb
jno
ds
add
add
rcll
hlt
sub
add
and
in
clc
movsl
xchg
add
cmc
pop
cs
or
shrb
jecxz
xorl
ret
xor
dec
icebp
bound
idivl
cmp
pushf
mov
mov
call
sub
cmp
xlat
bound
filds
lds
sbb
add
imul
movsl
add
jno
xchg
dec
ljmp
pop
mov
fidivrl
and
or
les
xor
pusha
sbb
pop
xchg
mov
xor
jge
push
insb
add
ljmp
dec
xor
and
gs
in
fisubrs
add
idivl
test
xchg
dec
pop
xor
mov
shll
sti
and
into
aam
cmp
pop
sbb
int3
xchg
test
add
and
add
sbb
aaa
adc
adc
movsl
dec
ret
ds
add
pop
xchg
clc
add
dec
out
jmp
test
cmp
iret
xchg
mov
cmp
loopne
scas
ja
fimuls
adc
stos
or
add
sbb
arpl
mov
inc
cmp
xchg
imul
insb
je
xor
sbb
jo
and
nop
sub
add
lret
or
rolb
outsb
adc
xor
std
xchg
shrb
jmp
aam
inc
add
add
push
push
leave
inc
or
xor
sbb
cmp
loope
lods
jne
mov
repnz
orb
xor
arpl
or
jnp
inc
mov
ret
xor
and
leave
or
sub
mov
scas
xchg
cmp
loopne
add
enter
loop
mov
scas
adc
je
sbb
filds
test
mov
cmp
or
jno
out
loope
ror
outsl
fisubrl
xor
fcomip
jns
add
mov
sub
inc
stc
add
pop
add
std
js
add
xchg
aad
add
sub
add
dec
cmpsb
mov
scas
aaa
fiaddl
outsl
push
inc
faddp
movsb
mov
fnstsw
xchg
cmp
jmp
call
inc
call
movb
test
andl
sbb
mov
sbb
test
cmpsl
cld
cwtl
fisttpll
cmp
data16
mov
adc
push
dec
pop
push
jne
mov
lods
pop
jge
fcom
flds
xor
add
mov
xchg
jno
mov
add
pushf
jbe
loopne
out
jnp
pop
mov
inc
inc
mov
rol
and
push
int
cmp
jne,pt
add
or
lea
xor
sbb
lret
mov
sub
and
ret
or
popa
inc
sub
xor
xor
into
xor
xlat
call
enter
aaa
mov
fiadds
add
je
movsl
mov
lods
in
jo
jle
xor
add
dec
add
and
in
test
pop
add
xor
sarb
xor
js
sbb
data16
or
dec
sbb
cmpsb
scas
mov
aad
push
dec
adc
incb
das
addr16
mov
rorl
push
js
movl
mov
cmpsl
addr16
test
sti
add
repz
out
or
cwtl
pop
outsb
add
lahf
and
and
fsubs
xchg
nop
rolb
cmp
dec
add
loopne
push
rcl
mov
add
shlb
cmp
push
iret
inc
dec
and
add
add
xor
push
add
and
scas
frstor
std
adc
inc
add
sub
pop
mov
sti
add
into
fidivs
xorb
cs
push
xor
xchg
add
xor
xchg
push
cs
inc
cmp
sub
daa
add
xchg
jl
sub
aas
adc
fcoml
pushl
stos
addb
lock
push
inc
add
cmp
aaa
ret
pop
enter
je
clc
cmp
insl
or
jnp
cmp
sub
ret
cld
or
icebp
fisttpl
mov
push
xchg
and
ret
mov
testb
inc
push
mov
dec
sub
and
es
int3
inc
jo
add
aaa
js
lds
hlt
fabs
movsb
xor
das
jo
clc
mov
jbe
sbb
sub
mov
cmp
sbb
aaa
mov
sub
jl
push
and
dec
roll
xchg
fwait
adc
add
je
shr
push
sbb
or
stc
add
mov
jmp
push
shlb
and
cmc
push
add
mov
add
fdiv
cli
pop
adc
cmc
addr16
sbb
add
mov
rcpps
sarb
cli
arpl
xor
insl
jge
jecxz
mov
test
int
inc
add
out
loopne
mov
shrb
push
fdivp
add
mov
aad
xchg
fbld
in
or
jns
jbe
nop
pop
ret
ret
cmc
jnp
ret
fistps
sbb
cmp
sbb
addr16
aam
cmp
or
pusha
push
or
call
test
aam
in
les
sub
cmp
shlb
loop
std
add
daa
out
dec
inc
into
mov
in
ds
push
fstpl
mov
push
jo
mov
mov
inc
and
ret
lods
cmp
scas
in
add
sbb
inc
mov
cmc
lret
aas
lcall
rcrl
add
mov
jne
rcll
cltd
shl
mov
outsb
pop
outsb
adc
aaa
cmc
and
imul
and
out
dec
dec
sahf
ret
or
ret
sbbl
inc
xchg
rolb
in
xchg
pop
scas
pop
test
mov
mov
mov
mov
pop
stos
jb
mov
dec
jb
fstl
enter
add
out
mov
lcall
push
ret
jae
mov
jo
stos
sub
xchg
mov
mov
cli
scas
test
jg
cmp
loop
jbe
adc
or
les
stos
dec
push
and
outsb
divl
add
popf
nop
lret
and
cmp
loope
or
cmp
enter
or
dec
fisubs
jb
leave
loop
pop
scas
cwtl
add
enter
mov
fsubs
mov
sub
in
inc
pop
jmp
pop
orl
aam
sbb
test
movsb
lods
jne
bound
ret
sbb
data16
das
inc
lock
jp
cmp
imul
dec
test
lock
je
add
cld
cmp
rcll
into
mov
dec
jae
nop
fistpl
jne
clc
xorl
into
sub
inc
stc
leave
sub
das
popa
loop
hlt
sti
add
icebp
inc
and
adc
cmp
add
jno
jnp
add
lret
daa
clc
sbb
jmp
outsb
add
mov
out
add
and
mov
pop
pusha
dec
push
lock
mov
aas
ss
lock
outsl
xchg
adcb
push
xchg
jne
test
cmp
sub
cmp
mov
add
rol
adc
add
stc
push
imul
pop
lret
sub
add
cmp
push
out
subl
add
pop
dec
lods
and
add
cmpsl
shll
test
add
jno
push
mov
adc
xor
sarl
jecxz
mov
mov
add
cmp
sbb
xchg
mov
inc
xlat
push
mov
inc
sbb
in
adc
mov
add
mov
cmp
ret
ljmp
rolb
sbb
sub
xchg
aas
movsb
pop
xchg
aad
nop
adc
test
mov
js
push
or
cmc
xor
push
cmp
pop
nop
jecxz
add
mov
inc
mov
repz
or
sbb
rorb
scas
mov
imul
pop
add
or
jmp
shrl
push
movsb
pop
push
js
and
or
ret
mov
incl
jo
inc
xor
into
test
icebp
xchg
mov
mov
add
xchg
push
cmp
mov
setns
popf
sbb
mov
repnz
lcall
les
or
in
int
inc
cmc
lret
rolb
icebp
dec
jo
fwait
cmp
mov
inc
adc
jg
das
fiadds
in
jae
or
cmp
mov
test
add
pop
inc
mov
setp
add
pop
push
sbb
xchg
mov
mov
mov
add
mov
sub
cmp
dec
push
sbb
push
sub
add
inc
fcmovnu
dec
popl
inc
sub
push
lock
cs
push
add
scas
icebp
xor
inc
xor
mov
push
add
in
dec
cli
cmp
arpl
adc
adc
je
sub
out
inc
push
push
sbb
test
add
mov
push
jo
clc
nop
sbb
xor
or
add
mov
pop
push
int
add
and
jnp
inc
xor
xchg
push
jp
xchg
ljmp
add
jb
jl
fdivs
and
dec
sti
fstps
idiv
nop
aas
daa
add
in
xor
aad
push
mov
stos
adc
neg
lcall
pop
cmp
jo
dec
add
xor
sbb
adc
pushf
mov
add
movb
dec
cltd
loope
inc
adc
pushf
add
lahf
sarb
and
mov
add
scas
mov
push
pop
faddl
cld
adc
xor
add
je
lds
cmp
fwait
repz
mov
cmp
aad
les
out
pop
outsb
jne
add
sahf
adc
xchg
lods
mov
orl
aaa
in
mov
test
dec
add
adc
pop
lea
cmpsb
aad
and
add
lods
mov
cli
test
pop
sbb
iret
mov
mov
call
pop
mov
sbb
mov
outsb
mov
pop
push
push
xor
add
ret
sar
out
add
jnp
sbb
lret
add
xor
imul
xor
mov
inc
cmc
jmp
mov
inc
add
mov
xchg
out
fnsave
jle
mov
add
xchg
fadds
daa
call
add
mov
add
lret
in
add
xchg
outsb
pusha
cmp
scas
adc
add
sub
or
testl
imul
mov
test
jl
jns
dec
ds
and
sub
push
leave
call
pop
mov
dec
add
cmp
lods
add
and
and
lret
mov
mov
test
mov
rclb
dec
jp
mov
loop
pop
add
sub
jmp
sbb
mov
incl
pop
xor
xor
popa
add
iret
push
mov
xchg
sbb
pop
add
mov
stc
and
inc
jb
rclb
add
test
lock
leave
xchg
flds
push
adc
cwtl
pusha
inc
sbb
add
fistl
hlt
mov
mov
stos
push
cmp
xchg
jg
jno
jge
decl
or
imul
mov
pop
mov
lods
adc
add
inc
mov
sub
lds
jbe
mov
fsubr
cmp
fiadds
inc
leave
inc
pop
cmp
sbb
and
gs
pushf
fstl
push
ret
inc
ss
adc
or
das
sbb
clc
repz
pop
adc
add
jns
and
out
outsb
cmpsb
xor
inc
cmp
mov
xor
xchg
adc
fstp
xchg
out
inc
add
orl
lods
add
fdecstp
scas
jecxz
mov
sub
rol
cmp
les
leave
pop
sbb
cmp
and
ss
jg
roll
sub
jnp
jns
pop
insb
fiaddl
cltd
push
cli
mov
pop
mov
mov
sub
fidivrl
subb
pop
std
sbb
or
pushf
outsl
ficoms
shll
sahf
add
stos
jg
in
cmp
mov
and
fnstsw
xor
add
or
jno
cmc
mov
addr16
test
push
decb
lret
add
outsb
clc
lods
or
out
inc
out
loopne
mov
push
xor
dec
pop
add
out
fadds
cwtl
jb
push
ret
mov
or
and
add
fwait
add
sbb
paddusw
fdivr
repnz
pushf
pop
test
fstps
bound
pop
jp
cmpb
jg
fdivrl
push
xchg
add
test
arpl
xchg
ffree
sbb
push
pop
scas
push
push
adc
or
dec
loope
adc
out
shlb
hlt
lcall
jnp
sar
mov
pushf
movsb
or
in
outsb
out
mov
mov
jmp
adc
push
and
add
jo
xchg
pop
flds
jmp
in
cmpsb
push
jl
add
push
scas
into
jnp
add
icebp
test
jbe
fistpl
jmp
fwait
mov
and
dec
js
shl
test
addr16
cmp
inc
test
pop
sub
out
movsl
dec
lods
inc
dec
stc
addr16
pop
testb
add
lods
lea
mov
pop
push
push
push
xchg
addr16
lahf
pop
adc
ja
subl
push
and
xchg
cwtl
jbe
mov
repz
iret
and
and
mov
xor
outsb
es
loopne
aas
lahf
popf
or
mov
mov
das
inc
insl
push
es
in
push
je
ds
sti
frstor
and
jns
ret
pop
push
mov
js
icebp
mov
daa
mov
aas
xor
push
arpl
push
push
addb
outsb
mov
push
lahf
add
imul
les
mov
add
sar
movsl
movl
stos
mov
ds
add
adc
imul
inc
mov
jp
jge
out
mov
std
mulb
mov
mov
fistps
mov
out
pop
iret
jp
js
decl
call
sbb
test
daa
sahf
mov
add
add
out
xchg
fsubs
loopne
cmp
ret
dec
stos
sub
dec
dec
push
mov
movsl
in
jg
std
aad
and
dec
cmpsl
jne,pn
cmp
scas
push
and
sarl
xchg
add
or
arpl
pop
sbb
outsl
mov
add
cmpsb
sub
ss
lods
fwait
loope
pop
jle
cmc
pop
sub
mov
mull
mov
stc
sub
push
push
mov
mov
out
jnp
sbb
inc
lret
das
or
roll
cmp
adc
repz
cmp
xor
rcll
in
shr
inc
pop
inc
daa
es
cmpsl
movb
sbb
xchg
add
mov
and
add
mov
xor
pop
test
iret
add
push
sub
adc
ss
iret
pusha
jl
ret
leave
in
jle
adc
loopne
and
adc
push
push
and
sub
adc
sti
and
hlt
arpl
jle
leave
inc
cmp
sbb
mov
cld
sub
add
in
inc
jp
push
aas
dec
sar
lret
pop
sbb
ds
out
pop
jb
mov
mov
add
jmp
pop
notl
leave
js
outsl
cmp
mov
nop
mov
psrad
sbb
mov
test
inc
sbb
fs
cli
xchg
push
mov
cmp
mov
pop
xor
jmp
sub
jne
ret
or
aam
xor
add
int3
decl
push
add
insb
into
xor
daa
sbb
sub
rclb
push
scas
or
sbb
or
cmpsb
mov
sbb
andl
cmp
scas
mov
push
jno
lahf
and
movsb
mov
call
outsl
aad
or
daa
add
lods
stos
test
mov
push
nop
clc
jg
inc
add
ret
mov
hlt
iret
sbbb
jne
cwtl
test
stos
or
push
inc
rcl
sbb
xchg
sti
es
add
add
out
and
repnz
imul
out
in
sbb
inc
mov
add
push
cwtl
mov
xchg
ds
or
fildl
add
sbb
mov
jo
add
adc
and
imul
inc
cmp
pop
inc
and
inc
sub
and
adc
int3
cmp
sbb
xchg
loop
jmp
test
lods
cld
les
dec
aad
scas
push
xor
pop
or
repnz
sahf
jp
xchg
fsubr
sahf
mov
clc
mov
std
and
xorb
jg
pop
fs
pop
add
stos
lret
lahf
scas
push
jp
add
sar
and
jnp
les
sbb
mov
loop
push
jge
div
scas
jmp
std
jne
leave
incl
inc
pushf
addb
repnz
xor
inc
repz
loop
inc
jp
add
or
add
add
in
out
dec
and
mov
dec
sub
mov
pop
sarb
orb
sbb
push
sbbl
adc
mov
pusha
cmp
pushf
jl
lock
cmc
scas
jns
mov
push
dec
push
add
adc
jns
and
stos
aaa
push
adc
or
daa
xor
jp
mov
mov
addb
addr16
divl
and
push
aad
cmc
jae
enter
andb
adc
fbstp
mov
ja
je
xorl
or
xchg
mov
add
rorl
jp
xor
mov
test
sub
mov
xchg
mov
sub
in
mov
js
xchg
add
add
push
fdivrs
mov
adc
inc
add
sbb
mov
xlat
push
cld
mov
ja
vmread
pop
mov
pop
add
out
mov
icebp
lods
inc
jle
test
loop
jae
scas
xchg
pop
add
mov
or
adc
xchg
mov
add
jae
jns
jge
fildll
clc
rcrl
add
fisubl
mov
add
lret
xchg
mov
jg
and
adc
mov
adc
faddp
aaa
mov
aam
push
or
lea
pop
imul
push
jle
dec
adc
sbb
push
and
inc
push
and
in
cmp
insb
jge
jle
cmp
cmp
loop
fistpll
and
xchg
push
xchg
xlat
adc
andb
outsb
push
movsl
add
add
dec
aam
loop
aas
cmp
sbb
push
out
ja
and
jo
jno
setle
push
xor
add
fs
popa
or
and
pop
ds
subb
aaa
inc
xor
sub
ljmp
add
mov
sbb
dec
in
shlb
xor
xchg
stos
inc
add
and
add
sti
mov
mov
sbb
pop
jp
ljmp
and
rol
pop
xchg
sub
mov
ljmp
dec
scas
pop
sbb
sub
jnp
f2xm1
xor
push
dec
loope
push
mov
add
inc
pop
sub
pushw
lock
xor
inc
xchg
cmp
sbb
rclb
gs
aam
mov
cmc
xor
sub
ds
jns
add
enter
mov
fimuls
cwtl
hlt
imul
inc
dec
data16
add
ljmp
loope
shlb
xor
daa
leave
mov
std
pop
jecxz
mov
lds
out
daa
mov
stos
fdivrs
or
and
dec
xchg
mov
rcll
lods
sub
pop
dec
scas
and
mov
dec
mov
rorb
add
out
fs
xchg
add
pop
lcall
mul
push
ljmp
nop
pop
sub
popa
insl
mov
add
xchg
sub
add
xorps
fdivp
int3
or
into
adc
in
add
xor
xorl
repz
jge
in
add
cld
push
pop
xadd
jno
int
or
fsubr
mov
push
jge
scas
add
push
stc
cmc
cmp
jbe
shlb
cs
lret
ret
push
mov
or
stc
and
shll
dec
inc
insb
fs
inc
xor
add
call
add
stos
int3
add
sub
pop
scas
add
pop
mov
push
lret
jge
std
stc
ljmp
mov
jmp
sbb
xchg
lret
sub
inc
dec
fwait
add
dec
xchg
adc
mov
repz
in
push
pop
ja
into
mov
leave
add
adc
int
out
add
test
add
sbb
stc
cmp
cmp
shrl
and
push
sub
cs
add
ret
add
sarb
push
pop
push
enter
sbb
lods
repz
and
dec
popa
sbb
and
add
flds
push
pop
add
cmc
filds
hlt
mov
xlat
fldt
imul
insl
in
add
iret
cld
sbb
inc
js
dec
or
int3
ret
sub
pop
sbb
add
jecxz
adc
mov
sub
aam
dec
inc
sbb
add
hlt
mov
jb
out
addr16
or
shll
push
fiaddl
pop
jo
cltd
sbbb
arpl
xor
push
jne
jb
stos
xchg
or
cmovns
mov
mov
or
out
ljmp
xchg
test
xor
inc
dec
gs
and
sahf
ret
incl
ficomps
push
sar
inc
dec
lock
add
hlt
pop
xor
mov
pop
test
cmp
inc
mov
mov
push
adc
mov
dec
rcr
sbbb
mov
roll
adc
jb
pop
push
adc
pop
cld
mov
pop
add
mov
fcmovb
test
adc
out
mov
sub
jg
pop
fcoms
push
lahf
cmp
mov
fnsave
jle
inc
xchg
adc
xor
sbb
addr16
fdivrp
aaa
add
mov
lods
add
jp
addl
sbb
not
add
in
xchg
inc
push
movsl
cmp
jecxz
lahf
push
inc
lds
or
add
or
insb
hlt
pusha
xchg
dec
push
jl
fcom
pop
adc
rcll
mov
mov
cmp
call
add
outsl
jno
fsubs
test
push
fs
out
pop
add
cmpsb
adc
add
pop
dec
lcall
sub
jno
add
das
decb
fcoms
push
add
into
jb
add
push
lret
jp
aad
pop
mov
pop
add
cmpsl
xchg
loope
pop
add
adc
inc
test
dec
inc
insl
add
or
add
mov
cmp
mov
ret
subb
mov
gs
pop
mov
dec
mov
lods
mov
stc
dec
jnp
mov
adc
sbb
xor
cmp
ret
fwait
adc
daa
mov
jmp
push
shrl
in
xor
xchg
pop
add
imul
add
aaa
dec
lock
arpl
leave
lahf
dec
adc
aas
gs
fbstp
ret
fdivrp
adc
out
inc
or
fwait
add
push
push
daa
add
cmp
pop
cmpsb
into
pop
inc
cmp
mov
loop
fists
sbb
inc
lret
add
jb
ds
add
push
mov
and
movsb
cmp
push
lock
iret
add
stc
sbb
icebp
pop
mov
pop
dec
cmp
rolb
xor
movsl
aaa
fsubrs
aas
jg
icebp
jnp
jmp
pop
test
xor
dec
cmp
stos
pop
jno
jb
scas
pusha
fdivp
push
pusha
out
sarl
and
cmp
push
add
daa
cmc
out
mov
sub
fisubl
ja
ds
in
aad
mov
jp,pn
rcrl
fnstcw
fnsave
cmp
sbb
add
sub
push
inc
add
mov
xor
sbb
aas
xchg
dec
and
ds
mov
dec
cmc
jno
imul
ror
int3
pop
iret
inc
pop
and
in
xchg
fwait
nop
rcrl
sbb
jge
jecxz
pop
sbb
insb
and
xor
orl
lods
jb
add
sub
iret
pop
adc
mov
jo
out
popf
movb
xchg
jmp
pop
pop
inc
clc
and
popa
xor
adc
inc
add
shrl
fsubl
push
pop
add
push
icebp
shrl
mov
sbb
ja
testb
addr16
jns
and
sarl
out
mov
bound
jecxz
andb
fiaddl
sub
add
push
dec
mov
add
adc
filds
xor
addl
lods
sarb
jbe
cmp
xor
push
fs
lods
fdivp
ret
popf
mov
add
xor
stos
xchg
jnp
call
mov
ret
pushf
sbb
push
lock
cmp
mov
mov
arpl
popf
cmp
sbb
cmp
and
add
xchg
add
in
cmpb
scas
xor
add
xor
mov
sub
insb
outsb
scas
push
testl
pop
js
pminub
cli
mov
jns
cmp
sub
ss
sbb
je
xor
mov
fidivrl
mov
mov
cmp
cmp
jp
xchg
xlat
xor
fbld
cmp
dec
mov
and
xchg
mov
daa
jge
enter
jecxz
lods
mov
jle
stos
ret
push
sahf
popl
sbb
int
pop
out
popf
mov
rcl
adc
push
mov
and
lea
cmp
std
dec
arpl
mov
inc
subb
sub
out
mov
xor
xor
push
movsb
out
xor
ljmp
jns
aad
jnp
lcall
jp
in
jle
popa
mov
fsubs
add
mov
or
push
xchg
jns
jo
mov
xchg
xchg
notl
sub
add
mov
pop
rol
mov
cs
pop
test
push
cmp
pop
mov
push
mov
stos
mov
push
jmp
xorb
orb
iret
das
and
test
push
dec
push
xchg
or
and
sbb
fcomi
cmp
lods
out
adc
inc
xchg
inc
push
rcrb
out
inc
clc
adc
mov
cltd
mov
out
jecxz
inc
cmp
mov
dec
add
adc
cmpl
or
push
jmp
jmp
and
loopne
xchg
ret
push
inc
pop
sub
jl
outsb
imul
mov
xor
pop
or
into
dec
adc
dec
mov
in
ret
mov
pop
xchg
movsb
leave
push
xchg
push
inc
and
fsubr
inc
jp
mov
sbb
adcb
idiv
mov
scas
jmp
rorb
jge
xor
push
addr16
lret
imul
jns
fisubrs
mov
aam
in
or
dec
add
mov
add
jb
or
cli
mov
jo
sbb
fidivrl
jg
jp
stc
test
or
mov
jbe
out
mov
xlat
and
shlb
xor
push
shll
outsb
imul
loop
inc
add
xchg
or
fistpl
sub
mov
aam
adc
pop
das
or
add
xor
cmp
or
sub
dec
push
repnz
sub
mov
mov
inc
ret
adc
add
in
mov
rol
sti
or
inc
pop
andl
sbb
out
jo
inc
dec
add
pop
scas
lret
and
popa
and
in
bound
loopne
lock
cmp
inc
sub
ret
mov
fldl
sub
mov
cmp
ds
add
inc
add
or
test
xor
sub
cmp
jge
pop
or
mulb
mov
arpl
add
mov
add
sti
movsb
or
testl
pop
addr16
sbb
dec
sti
cmp
test
cmp
adc
dec
xrelease
jge
std
dec
lret
push
jp
dec
insb
dec
sbb
sahf
lret
inc
arpl
push
movsl
adc
test
pop
jle
bnd
jl
jmp
xchg
loopne
push
sub
adc
leave
pop
test
xor
sbb
in
sub
cmp
or
mov
xchg
fcmovnu
cmp
sbb
adc
leave
mov
cli
inc
stos
adc
ss
and
xor
add
fnstsw
popa
adc
sub
xlat
test
sbb
add
mov
jbe
or
mov
mov
add
movsl
test
sahf
and
cmp
addr16
xor
pusha
pop
lret
or
inc
int
sahf
jns
or
jp
rorl
inc
sbbb
mov
and
or
subb
sbb
and
lds
cmp
mov
jge
pop
or
je
outsb
mov
sbb
test
jl
orb
lret
hlt
add
scas
pusha
mov
aam
notb
jno
xor
andb
les
add
in
aaa
xchg
inc
adc
mov
inc
mov
jle
lret
int3
pop
or
add
adc
loope
aas
roll
inc
push
push
ljmp
pop
dec
pop
orb
sbb
jl
inc
iret
adc
inc
inc
daa
ret
and
sbbb
sbb
adc
and
pop
out
push
jp
repz
inc
mov
and
ds
aad
mov
test
and
jno
dec
test
xor
inc
xchg
dec
or
adc
inc
cmpsl
jl
leave
jb
repnz
test
fidivl
add
xchg
and
sbb
rsm
test
mov
lods
into
or
sub
sub
push
pusha
fldcw
push
ror
mov
jns
jo
and
jb
data16
mov
add
cs
bound
adc
lahf
cmpsl
inc
and
lods
iret
pop
stc
xchg
std
aam
scas
and
sbb
movsb
dec
jo
fdivrl
iret
xchg
bound
adc
mov
inc
leave
jp
ret
xor
sbb
les
ljmp
push
js
flds
mov
or
cwtl
inc
sbb
or
mov
or
rclb
xor
dec
add
inc
cmp
jae
fs
dec
mov
das
sub
dec
out
push
inc
gs
dec
std
xor
add
imul
cmpsb
outsb
std
roll
repnz
xchg
cmp
ret
push
nop
push
daa
sbb
adc
int
mov
mov
lcall
jge
movntq
cmp
ss
loop
insb
inc
or
or
loope
xchg
out
clc
inc
sbb
xor
leave
sub
jmp
js
xor
je
xchg
addr16
into
scas
mov
in
jb
mov
xor
jp
sbb
and
cmpsl
add
dec
and
data16
mov
inc
lods
mov
test
movsb
ja
adc
fisttps
push
push
adc
sbb
cmp
mov
daa
lea
xor
rolb
and
btl
sub
gs
addb
mov
xchg
dec
bound
test
test
or
add
out
cmpsl
mov
mov
std
je
jb
into
add
adc
sbb
xchg
mov
inc
jg
pop
xchg
or
sbb
adc
bndldx
daa
flds
or
cmp
xchg
dec
adc
and
lret
mov
xchg
xchg
push
adc
popl
xor
sti
cmpsb
add
cmpsb
and
pop
xchg
xchg
sbb
out
and
and
or
sbb
sub
lods
addr16
push
outsb
mov
arpl
insl
orb
in
dec
mov
inc
pop
cmpsb
cmp
pop
loop
std
xchg
sub
mov
popf
jbe
popf
xchg
xchg
adc
jg
insb
jge
jl
jo
xchg
mov
inc
inc
push
in
addr16
pop
les
jb
xor
pop
iret
sbb
pop
pop
xor
sub
xchg
shll
push
mov
and
inc
test
mov
jg
lea
adc
movsb
sub
mov
pop
mov
add
pop
idivl
out
rorl
add
fnstcw
shrb
adc
jecxz
jmp
add
mov
nop
add
pop
scas
or
rol
loopne
adc
mov
inc
cld
das
pop
sub
jo
dec
dec
mov
and
xchg
jmp
cld
xor
add
rorl
inc
xor
lds
mov
lret
dec
push
cmp
sarl
mov
pop
jb
out
insb
xchg
dec
jne
push
add
mov
add
loop
dec
dec
dec
inc
add
lret
fnstcw
inc
add
xor
cmp
push
and
xor
pusha
lret
add
aas
dec
lock
add
lea
mov
scas
dec
add
adc
and
push
sbb
add
push
jnp
movsb
outsb
mov
scas
mov
sarl
xchg
or
add
aas
add
into
daa
mov
std
jbe
lcall
jp
inc
or
ret
mov
les
pop
push
adc
jle
jp
cmp
lcall
or
rcl
daa
xor
jle
in
ljmp
in
cmp
insl
addb
mov
push
sbb
push
or
cmpsw
fimull
sub
mov
aaa
and
xlat
push
mov
inc
jp
iret
and
lahf
cmova
out
cmp
mov
adc
cli
inc
je
lods
dec
jae
out
or
std
arpl
jecxz
es
jp
sub
ficompl
test
jg
pop
sbb
ficoml
and
loope
repnz
cmpsl
or
sbbb
xor
repz
decl
sub
mov
dec
movsl
push
mov
adc
sbb
xchg
subb
pop
add
shll
stos
sahf
cmp
cmp
inc
mov
add
lret
mov
addr16
or
stos
adc
inc
mov
push
adc
mov
xchg
cmp
jbe
xor
and
jecxz
mov
in
ret
leave
scas
add
mov
or
sub
jo
dec
mov
clc
xor
adc
adc
pop
cmpl
cmp
icebp
mov
clc
inc
arpl
cmp
stos
addb
push
sbb
mov
cwtl
dec
cld
fwait
add
sbb
lret
dec
fwait
mov
sbb
arpl
pop
mov
adc
mov
jae
xor
dec
sahf
xchg
add
cli
in
sbb
outsb
cmp
inc
rol
mov
add
cmp
and
push
dec
jg
stc
dec
mov
mov
adc
aaa
sbb
cmp
and
fisubrl
jo
cs
mov
push
and
inc
push
loop
mov
outsl
xlat
jg
adc
enter
outsl
sbb
js
gs
shr
xchg
xor
mov
iret
bound
jp
scas
inc
pop
mov
inc
cmpsl
push
sbb
sub
sahf
dec
stos
int
imul
jge
inc
insb
push
or
mov
mov
sub
cmpsb
push
scas
aad
inc
cmp
test
xor
mov
pop
repnz
adc
roll
cmp
dec
add
push
xchg
jmp
adc
in
dec
cld
pushl
cwtl
push
cmp
stos
mov
push
or
and
sbb
inc
lods
pop
jns
sahf
imul
fadd
in
sarb
fstpt
mov
aad
or
jg
cmp
add
push
pop
shl
mov
xor
cmp
enter
pop
cmp
pop
mov
lahf
cwtl
jne
in
jge
push
and
inc
shl
scas
mov
das
cmp
add
jbe
stos
sbb
xor
ret
cmpsb
loope
pop
dec
add
add
outsl
movsl
mov
ror
inc
dec
test
and
sahf
add
insl
stc
jmp
pop
mov
imul
cli
add
fxch
daa
cmpsl
adc
jno
ret
adcl
xor
or
and
fld
das
xchg
and
pop
inc
xor
cs
jnp
les
aam
mov
inc
in
jae
dec
and
loopne
fwait
mov
movsl
xchg
sub
jle
cmp
ja
fldt
jns
aas
ficoml
add
movsl
xor
adc
flds
mov
mov
in
repnz
leave
jo
pusha
ret
fdiv
fsts
or
loope
push
fidivrs
aas
ret
incb
add
mov
cli
or
adc
dec
outsl
jge
dec
inc
xor
adcl
in
xchg
inc
shlb
cmp
sub
rcr
test
dec
shrl
sbb
mov
out
inc
popf
inc
adc
mov
data16
dec
jmp
das
xor
rorl
xchg
jo
mov
add
vrsqrtss
lcall
lods
jp
in
shl
add
outsl
icebp
sub
rorl
adc
leave
ja
ss
daa
lds
gs
mov
add
clc
push
sbb
add
stos
push
add
sbb
addl
fistl
inc
push
mov
shl
cld
idiv
cmp
pop
and
mov
jbe
inc
inc
call
push
pop
mov
orl
mov
mov
jae
sbb
stos
shlb
xor
clc
leave
sti
push
and
lods
add
scas
mov
rcl
repnz
pop
in
sub
push
in
adc
les
xchg
pop
mov
and
aam
mov
jbe
adc
pusha
shll
dec
hlt
xor
pop
xor
in
inc
cmpsl
aad
aam
ret
in
xchg
jb
in
cmpsb
sbb
hlt
jae
or
jns
mov
jo
push
loopne
mov
pop
lock
idivl
sbb
sti
inc
xor
mov
loope
or
sbb
fists
cld
pop
pop
jae
leave
or
and
add
mov
push
cs
add
dec
sbb
add
adc
jne
aaa
mov
xor
inc
xor
dec
add
add
addl
push
push
inc
xchg
sbb
mull
sub
inc
mov
mov
jg
dec
ret
mov
shr
mov
in
into
popl
xchg
mov
sbb
cmpsl
pop
inc
sarl
js
mov
in
fmuls
sub
je
out
es
mov
mov
adc
fists
add
cltd
push
mov
fisttpll
cld
mov
out
aas
sub
fwait
and
mov
add
xchg
data16
dec
ja
lds
mov
inc
lret
test
xor
mov
adc
push
xor
movsb
mov
add
jl
shlb
testb
add
jmp
cmp
shll
fdivrl
xor
add
adc
lahf
pushf
inc
lret
lret
jmp
nop
in
enter
hlt
add
sti
mov
add
das
lods
and
ror
inc
cmc
sti
pop
add
daa
cmp
xchg
cs
es
add
mov
jecxz
ds
rol
add
in
adc
cmp
add
jns
dec
mov
mov
mov
daa
gs
cmp
push
inc
js
mov
jle
jo
jl
jmp
pusha
rcrb
xor
loopne
dec
mov
jmp
call
lds
outsb
add
fcomp
mov
add
cmpsb
push
xchg
xchg
jg
adc
lock
repz
stos
add
cli
sbb
and
mov
cltd
mov
add
and
or
mov
xor
in
jle
and
cltd
sbb
and
shrl
push
adc
cmc
inc
movb
mov
sti
push
push
push
pushf
out
pop
rclb
and
gs
mov
cmc
loope
xlat
sbb
push
in
xchg
inc
ftst
xor
mov
movsl
sbb
cli
out
add
ret
les
insb
or
xor
lcall
jbe
imulb
push
clc
pusha
ja
cmp
cmp
add
pop
sbb
faddl
mov
push
ds
xchg
inc
shrb
mov
ret
fstl
movl
scas
addb
sbb
inc
xchg
xor
shrl
inc
add
lcall
test
push
xor
sub
mov
mov
jl
adc
xchg
dec
mov
loop
xor
addr16
repz
in
add
sub
je
cmp
inc
mov
add
jge
lods
push
mov
rcrb
jecxz
add
xchg
cmp
sub
sub
scas
push
loopne
adcb
xor
pop
cs
adc
add
jl
or
stos
mov
mov
xchg
sbb
hlt
add
pushf
pop
fidivl
xor
add
cmpsl
mov
outsb
jg
xchg
ds
iret
lcall
stos
test
mov
cmp
mov
imul
dec
fisubrs
or
cmp
cwtl
add
jo
mov
andl
adcl
faddl
enter
fstpt
cld
xchg
ret
inc
mov
jo
adc
add
pop
push
cmp
jmp
dec
add
push
sbb
stos
movl
inc
das
shl
popf
lret
jbe
in
add
bound
xor
call
mov
jge
test
or
cld
or
inc
ljmp
xchg
cli
cmp
add
scas
add
mov
fcmovnb
push
adc
inc
mov
loopne
jp
mov
mov
aam
je
add
add
bound
fldenv
pop
jno
xlat
mov
cmpb
dec
out
repnz
push
xor
mov
dec
rorl
xor
cmovg
bound
add
loope
xchg
cmp
cltd
jo,pn
add
xlat
jmp
dec
mov
faddl
ja
js
mov
and
push
dec
jb
xor
or
lahf
ljmp
sbb
fwait
shll
inc
fdivrl
rorl
lods
or
adc
mov
and
mov
divl
xchg
mov
add
ret
cmp
ds
sbb
xor
fs
sbb
aam
fdivrp
xor
sub
rolb
jbe
dec
sbb
dec
stc
adc
cmp
sub
or
xlat
sti
clc
movsb
pop
rcrl
pop
and
outsb
adc
ljmp
sbb
xor
gs
xchg
pmaxsw
cli
sub
stc
aad
push
sbb
lret
cmp
or
aas
xchg
add
dec
outsb
pmaxub
add
and
mov
lock
gs
add
shlb
jmp
js
pop
add
ficoms
mov
adc
arpl
jp
xchg
std
xchg
jge
xlat
add
or
lods
add
xchg
jae
jle
pop
push
daa
pop
add
test
sub
mulb
mov
mov
fmul
add
lret
jne
insl
outsb
push
pop
pop
cmpsl
add
ret
mov
repz
add
push
cs
inc
test
mov
pop
andb
fs
test
push
inc
adc
lea
sub
rorb
roll
and
inc
inc
int3
adc
shr
loope
ljmp
out
mov
mov
aaa
sbb
add
jo
mov
adc
xor
ja
or
shll
std
or
and
add
fidivs
in
inc
xor
test
fs
or
imul
outsl
mov
or
jns
les
mov
xchg
add
xor
xchg
aad
and
or
clc
ud1
inc
push
ss
pop
ret
jbe
jg
or
loopne
dec
fiaddl
mov
dec
stc
js
in
dec
mov
hlt
jo
aam
xchg
iret
jmp
shll
xchg
adc
test
jnp
xchg
dec
scas
mov
xchg
jge
xor
test
shr
ret
xor
int
add
fistl
inc
test
addr16
cmp
add
inc
fstpl
cli
cmp
xor
jmp
cmpb
pop
out
push
adc
int
sbbb
sbb
popf
sahf
xchg
scas
xchg
xchg
daa
push
test
mov
add
mov
inc
push
pop
add
xchg
add
leave
ja
fistl
movsb
and
mov
mov
add
aaa
test
add
mov
xor
aam
mov
sbb
and
shrl
pusha
pop
cmpsl
jecxz
lods
xchg
jb
add
mov
inc
add
in
sbb
mov
imul
cmp
add
cmp
cmpsb
add
fmul
lea
cmpl
rorb
mov
add
add
adc
sub
mov
sbb
sbb
subb
test
xchg
adc
lds
push
addr16
int3
mov
lcall
jecxz
pop
arpl
add
aaa
mov
ss
or
push
mov
inc
cmp
movsl
xor
push
mov
cmp
str
sarl
shrb
sub
cltd
and
stos
and
repnz
jb
fidivs
inc
adc
pop
shll
sbb
shr
mov
and
push
jb
jmp
inc
add
push
cmp
xor
nop
inc
cld
repnz
add
mov
hlt
cmp
add
xchg
arpl
aas
pop
outsb
add
das
leave
out
sbb
je
fwait
out
fisttpll
mov
adc
inc
ret
and
lds
lods
jmp
imul
mov
push
or
xor
ret
cmp
and
lahf
shl
rcrl
dec
cwtl
call
push
pop
mov
or
jnp
sub
cmpl
mov
push
cmc
jg
cmp
rolb
adc
cmp
jo
pop
jne
adc
outsb
rcll
icebp
jmp
cltd
add
add
or
add
test
or
xchg
adcl
cltd
roll
icebp
mov
shlb
xor
arpl
dec
jnp
pop
or
subl
rcr
mov
mov
fwait
loope
in
lock
add
jbe
dec
lods
cltd
mov
mov
jl
pop
lahf
xchg
cmp
idivb
in
jmp
sub
je
shrb
aas
jno
mov
cmpb
inc
adc
jne
mov
lret
push
mov
xchg
xchg
mov
cmp
push
add
cmp
leave
fildll
imul
jb
mov
test
jge
es
xor
mov
js
xchg
fwait
add
sbb
loopne
dec
add
sbb
pop
push
fcompl
int3
aad
lret
mov
cmp
cmp
dec
inc
das
mov
mov
pop
pop
adc
repz
lahf
mov
stos
shr
jp
cmp
out
clc
mov
mov
sub
mov
pop
sbb
test
daa
cmp
pushw
in
xchg
and
divb
movl
add
adc
or
test
jne
sarb
pop
sbb
clc
mov
mov
xchg
inc
or
cmp
add
mov
lcall
jno
pop
xor
inc
or
imul
inc
xchg
add
xor
xor
fstp
jnp
add
add
lahf
push
pop
sub
cli
dec
add
popf
fwait
sub
sbb
mov
xlat
cmpb
into
xor
add
add
cltd
sti
cli
and
mov
lock
fiadds
sub
std
bnd
sbb
fsubrs
xchg
andl
adc
loope
les
scas
repz
sub
cmpsb
push
fldenv
leave
add
and
inc
mov
test
loope
jo
dec
mov
add
or
filds
mov
inc
xchg
cld
mov
xor
push
dec
cmc
and
ds
add
cmc
push
adc
sbb
pop
jbe
add
xchg
stc
movsl
push
pop
push
aaa
js
jae
roll
fxch
adc
sar
sti
jge
dec
ret
push
scas
adc
xor
arpl
push
xchg
outsl
and
mov
out
push
cld
sub
pop
mov
sti
pusha
jmp
add
in
into
addb
dec
ret
pop
pop
sbb
sbb
cmpsl
dec
rclb
enter
popf
mov
pop
push
dec
and
aas
xchg
push
cmc
repz
add
inc
insb
xchg
cltd
cmpsl
cwtl
ret
push
mov
iret
sbb
arpl
stos
add
inc
shl
lods
adc
xor
add
push
iret
add
and
mov
js
or
addr16
or
pop
out
sbb
pop
pop
add
dec
bnd
aam
xchg
in
sbb
sub
inc
add
outsb
xor
jns
dec
repnz
xchg
imul
add
lods
popa
cmp
add
fstpt
cmp
std
xlat
stos
and
test
add
idivl
and
or
fstps
movsb
repz
jmp
xchg
xor
xor
cmpb
bound
int3
cmp
aas
mov
mov
adc
adcl
dec
ljmp
sti
dec
mov
scas
push
pop
repz
jg
add
mov
lret
scas
add
jle
lcall
fcoms
cmc
mov
int
add
fs
lock
xor
in
sbb
loopne
adc
popa
xchg
mov
aaa
jo
add
ja
mov
add
loop
xchg
outsl
and
push
inc
sub
sbb
or
loop
scas
add
std
hlt
mov
jne
mov
pop
sub
lds
jno
aad
mov
jnp
loop
icebp
mov
pop
pusha
bound
cmpsl
mov
pop
mov
scas
mov
sub
inc
xor
inc
jp
jb
cld
adc
clc
xor
shlb
inc
push
stos
cmp
mov
insb
enter
outsb
add
cli
ss
mov
das
add
fs
mov
cltd
jne
stc
ljmp
inc
cmpsl
mov
shrl
and
or
call
add
adc
push
scas
xchg
icebp
mov
fidivs
adc
dec
js
jns
sbb
hlt
mov
fwait
xchg
sub
out
es
or
and
fucomp
out
inc
ds
arpl
mov
dec
lock
out
aas
mov
insb
lods
xor
push
add
push
dec
add
pop
mov
add
scas
xor
movsb
add
xor
movsl
mov
inc
mov
adc
adc
fmull
notl
in
in
and
xchg
add
lock
push
inc
js
add
loopne
push
fwait
lcall
inc
sub
cmc
dec
fimuls
add
and
call
les
fwait
mov
ds
lds
std
inc
rorb
cmc
mov
arpl
xlat
xchg
popa
dec
movsb
es
jl
xor
filds
sbb
insb
std
inc
sbb
push
cmp
movsb
cmp
bound
jb
cmp
or
aam
xchg
inc
inc
addr16
inc
jbe
and
loope
scas
pop
addl
push
pop
pusha
fisttps
mov
dec
cs
push
ds
leave
ds
fisubl
inc
int3
or
sbb
insb
jnp
and
je
aad
cmpl
subl
fstpt
setae
movsl
out
addb
cmp
add
xor
outsl
mov
pop
test
xlat
cmp
sbb
das
jp
cmp
or
mov
cld
fnsave
mov
dec
rcrb
add
push
rol
lcall
lea
inc
ret
int3
int
add
inc
xchg
shl
lods
clc
mov
or
xor
add
dec
out
jp
push
add
aad
or
sbb
stos
cwtl
pop
push
inc
fisubs
cmp
dec
repnz
scas
cmpsb
pop
popf
xchg
mov
rcrl
mov
loopne
ret
cmp
into
mov
test
les
pop
cmp
bswap
dec
add
sar
ret
or
and
call
mov
add
pop
cmpl
xchg
aam
inc
mov
and
and
sti
shlb
loop
sbb
gs
shlb
andl
push
inc
sub
das
jmp
inc
push
add
movsb
test
xor
jl
shrl
fcoms
sub
xor
loope
and
rcrb
mov
adc
add
in
out
sbb
shll
adc
jb
cmp
dec
jge
dec
cmp
cltd
cmp
cwtl
pop
xor
aam
add
dec
xlat
out
adc
dec
cs
jge
inc
cmp
je
shrl
lcall
pop
push
dec
inc
push
stc
jbe
add
scas
pop
lret
jb
and
or
ja
mov
jne
xor
int3
les
xor
xchg
adc
dec
ficompl
jg
push
neg
fstpt
pop
rolb
or
xor
push
loop
outsl
mov
adcl
cmp
iret
jbe
push
pop
jns
add
movsl
xor
aad
cmpsb
dec
inc
ss
sbb
ficoms
xorl
and
fwait
popw
test
add
dec
mov
in
pusha
add
int3
inc
mov
mov
add
and
roll
mov
ljmp
and
test
xchg
xlat
fisubl
out
aaa
sahf
add
repz
popf
mov
xchg
mov
push
loopne
stc
mov
or
xchg
ja
mov
jo
jmp
xchg
pushf
push
and
lea
ficompl
mov
cmpsb
inc
push
xchg
lahf
test
xor
add
xor
loopne
push
stc
sub
stos
ret
cmp
sbb
sbb
add
xchg
rcrl
in
and
ja
add
add
xor
inc
xchg
add
arpl
jle
adc
movsl
rolb
test
nop
xor
aas
sub
jp
pushf
iret
mov
mov
dec
adc
ret
mov
orb
std
test
in
movsb
shrb
stc
xlat
mov
add
xchg
test
insb
aaa
add
cld
xor
or
add
lods
inc
inc
ds
loopne
insl
push
push
and
rcll
fsubrl
pushf
add
addr16
stos
inc
mov
ret
push
les
fstl
int
enter
scas
inc
xor
push
mov
push
add
jecxz
jl
or
mov
xor
xor
push
loopne
out
imul
sbb
jmp
sub
str
cmp
sbb
arpl
orl
cmp
lock
in
inc
outsl
pop
add
aaa
imul
fcmove
sub
add
ljmp
adc
mov
jae
pop
add
mov
xchg
mov
addl
incb
pop
mov
or
jmp
daa
xor
pop
mov
xlat
sarb
push
cltd
int
xchg
rolb
cmpl
cmp
out
sbb
sti
jecxz
enter
add
mov
sahf
adc
xor
pop
sbb
imull
inc
jp
mov
cmp
cli
push
aad
jmp
ret
leave
pop
add
in
mov
add
aad
iret
add
push
scas
repnz
sbb
jge
addr16
and
and
xchg
xor
sbb
xchg
sbbl
push
inc
cli
adc
pop
add
cmpb
pop
fwait
add
mov
ss
xor
rorl
adc
outsl
in
lods
dec
mov
call
lret
add
add
sub
and
mov
add
insl
sbb
popa
sub
jns
push
pop
xor
cmp
jl
enter
sti
xchg
fdivr
sub
mov
repnz
pushf
mov
mov
es
fs
mov
xchg
add
push
lcall
cs
iret
movsl
jl
js
jbe
leave
outsb
call
ljmp
decb
add
jmp
adc
or
add
cli
mov
add
cmp
mov
cmc
outsb
cs
int3
fdivs
push
or
pop
ret
cld
xadd
and
mov
push
test
test
add
add
mov
and
pop
mov
movl
stc
addr16
sub
gs
dec
and
fiadds
sbb
mov
push
stc
xchg
jne
in
add
jg
push
jmp
jbe
ret
std
inc
and
add
hlt
cltd
or
add
xor
ss
out
scas
fwait
add
jg
xchg
or
scas
ja
mov
xor
insb
mull
sbb
push
jb
leave
xchg
addr16
cmp
inc
and
and
in
pushf
mov
mov
jo
lods
pop
adc
jbe
sbb
and
pusha
sub
lcall
mov
cmp
ljmp
push
je
add
ficoms
insb
sub
cmc
jmp
shl
mov
gs
pushf
mov
add
jbe
push
divl
sbbl
cld
movl
xor
inc
inc
add
pop
push
fisubrl
pop
gs
adcl
faddl
popa
xchg
add
push
scas
add
rolb
inc
jp
mov
or
or
or
sbb
adc
adc
dec
add
pop
cwtl
adc
icebp
add
and
mov
xchg
filds
fstl
addl
push
popa
lock
mov
sub
add
in
notl
pop
add
pusha
std
cmpsb
dec
adc
add
push
outsb
lds
test
repz
add
rcrl
mov
lahf
les
pop
dec
subl
inc
aas
out
push
push
xlat
pop
sbb
fcompl
jns
push
pop
cmp
inc
mov
dec
mov
jbe
push
aam
xor
xchg
mov
dec
add
jne
and
dec
sbb
hlt
or
stos
sarb
jns,pt
test
mov
mov
push
add
movsb
idivl
xchg
pop
int3
adc
aad
cmpsb
lcall
adc
mov
xchg
out
ljmp
mov
stos
out
and
xchg
in
push
out
add
inc
jmp
roll
cltd
mov
in
add
ret
mov
sahf
ss
push
or
lds
mov
mov
or
lods
shr
adc
mov
je
mov
and
movsl
int3
loope
test
out
imul
dec
push
sti
hlt
adc
mov
cmpsb
inc
mov
dec
dec
mov
roll
xchg
out
add
sarb
add
mov
jle
push
orb
push
test
xlat
or
mov
and
push
fiaddl
or
xchg
adc
jbe
cmp
incb
inc
inc
js
mov
xchg
jb
popf
repz
sub
shl
add
loope
aam
int
add
mov
sub
cld
mov
sub
add
add
testb
daa
mov
jnp
rol
test
pushf
mov
sbb
cmp
cmpsl
fildl
gs
loop
iret
dec
push
lods
lds
add
lods
orl
xor
test
add
adc
dec
and
adc
xchg
fildll
pop
add
xchg
adc
or
andl
xchg
rcll
test
pop
leave
mov
xchg
mov
jge
add
lahf
dec
or
xchg
add
inc
std
lcall
gs
mov
xchg
test
sbb
sar
lea
or
lods
sarl
test
adc
lret
cwtl
ds
cmp
mov
and
add
sbb
test
movl
pop
cwtl
cs
stos
sbb
rorl
int
movsl
inc
ret
das
mov
and
and
faddl
stos
xchg
jle
pop
gs
inc
pop
or
dec
jb
in
sub
jg
add
imul
mov
xor
mov
lret
sub
push
les
lock
int
cmp
push
fldcw
icebp
aas
jle
sbb
add
into
orb
add
lea
data16
pop
sbb
or
int
cmp
addb
or
lcall
inc
mov
add
sub
push
adc
ds
jle
xor
rcll
popa
lret
add
lods
push
rol
lea
je
cmp
add
mov
sldt
pop
cld
xchg
add
and
push
or
mov
add
lret
cmpsl
xor
push
sub
adc
sub
movsl
dec
sub
cmp
sub
mov
repz
pop
lock
dec
push
xchg
sahf
loopne
scas
sub
inc
mov
leave
ds
mov
dec
rorb
jae
adc
arpl
out
out
mov
sbb
aad
cmp
sarb
jl
stos
pop
cmp
or
pop
lsl
repnz
cltd
add
dec
aad
jg
lods
lcall
addr16
pushl
mov
test
aad
sbb
mov
jmp
enter
add
push
shlb
push
jno
jp
lret
pop
sub
sbb
out
repz
sbb
out
mov
loop
push
int3
xlat
pusha
jmp
push
cmp
insl
loop
and
rcll
outsl
mov
inc
sub
push
ret
and
and
xor
pop
add
cs
roll
inc
jbe
pop
lods
mov
sbb
add
jae
ffree
stos
shrb
jmp
add
jbe
jp
divb
xchg
mov
iret
rolb
cmpb
scas
mov
dec
mov
cmp
shll
orb
fs
xor
mov
popa
xor
and
out
jp
pop
cmp
outsl
xchg
jle
pop
inc
inc
add
decb
imul
push
arpl
out
popl
mov
lcall
jbe
in
pop
push
mov
mov
pop
inc
dec
adc
sub
movsl
pop
pop
xchg
cwtl
mov
std
jae
push
add
fwait
add
mov
jecxz
adc
mov
dec
fsubrs
add
add
int3
cltd
imul
sub
jnp
push
sbb
iret
rol
push
cwtl
mov
mov
push
fldl
and
sub
mov
cmp
mov
push
mov
aaa
testb
inc
xchg
int3
dec
jecxz
and
rcrl
mov
mov
jg
fcomps
add
push
fbstp
aam
add
loopne
xchg
ret
stos
cmp
cmp
out
mov
cmp
add
roll
mulb
ror
call
scas
rcrl
test
addb
pop
add
mov
sti
out
test
rcrb
sub
loop
ret
pop
add
cmp
insb
push
scas
sbb
lcall
subl
cs
add
ds
popf
and
sbb
pop
lock
scas
out
lea
add
or
imul
cmp
jae
loope
ffreep
int3
jmp
mov
xor
ret
add
mov
je
into
jbe
and
pusha
ljmp
bound
aaa
sbb
cli
pop
aad
pop
jmp
ret
fmull
mov
add
std
or
dec
push
add
cmp
rolb
in
mov
fisttps
aam
ror
leave
iret
imul
cmp
stc
and
cli
push
fmull
cmpsb
sbb
push
add
adc
sbb
das
jne
inc
and
ficomps
xchg
repz
push
add
dec
mov
add
pop
push
sub
or
cmpsl
daa
sarb
rol
xor
add
stos
loopne
adc
add
dec
and
xor
jne
mov
fiaddl
lods
lods
sub
test
dec
adcb
mov
xchg
stos
les
push
stc
addl
sar
std
fwait
mov
pop
cmpsb
mov
pop
sub
std
into
shl
cmp
cli
imul
ror
adc
or
push
insb
pop
cmp
rcrl
pop
and
call
inc
sub
fidivs
sbb
and
aam
sbb
xchg
std
adc
inc
roll
mov
lahf
inc
add
ror
jmp
xchg
mov
add
push
popa
in
addl
mov
fsubs
stos
stos
movsl
pop
pop
mov
adc
aam
xor
mov
lds
roll
xchg
adc
dec
aas
sub
in
cmp
mov
inc
push
add
inc
out
pop
stc
lret
ds
xor
ss
jbe
push
adc
xchg
xchg
inc
xorl
mov
adc
mov
and
jo
adc
pop
sub
adc
les
jbe
sarb
add
imul
add
pop
lret
jmp
ret
and
ret
xchg
mov
into
sbb
adc
rcrl
imul
iret
add
pusha
xor
fcompl
rol
add
sbb
add
popf
and
and
ror
int3
inc
pusha
aaa
sbb
jl
mov
cmpsb
jb
push
add
mov
jae
das
ret
add
xor
or
xor
leave
pop
mov
scas
lds
jecxz
add
push
mov
xchg
cmp
fildl
lods
xchg
hlt
rcrb
inc
cmpb
pushf
faddp
stc
inc
push
or
ja
lret
lds
mov
mov
enterw
fisubrs
adc
and
and
stos
push
and
hlt
dec
out
push
xchg
js
pop
bnd
add
subl
xor
add
push
push
pop
sahf
or
add
fisttpl
shrl
add
xor
pop
add
aas
imul
or
out
xor
dec
inc
popa
ret
xchg
ret
jg
mov
and
mov
mov
push
push
loop
mov
cwtl
inc
je
sub
popa
push
popf
cmp
rcrl
mov
and
adc
inc
mov
sub
adc
hlt
mov
ja
stc
xchg
lock
pop
add
mov
rorl
push
and
std
inc
imul
sahf
fnstenv
cmp
jne
in
aas
push
push
inc
cmp
add
add
xchg
xor
add
lods
cld
mov
adc
sahf
jno
jle
add
outsb
insb
aad
sti
inc
mov
test
add
push
mov
popa
cmp
js
loope
scas
push
fsts
pop
imul
fcomi
sbb
xchg
add
ret
je
movsl
mov
inc
xchg
cmp
mov
stos
fmuls
popa
add
fcompl
je
scas
add
jp
test
inc
and
sub
add
and
orb
mov
cmp
xchg
out
xchg
and
call
or
jo
sub
fisubrl
and
mov
ret
lea
inc
fiaddl
xor
sub
and
sub
nop
lahf
pop
sbb
in
pusha
xorl
movb
lahf
loopne
ds
mov
mov
sub
or
adc
loopne
dec
sub
lock
cld
pop
fldt
dec
jp
adc
pusha
pop
xchg
push
pop
push
xchg
sbb
orl
add
out
sbbb
fdiv
adc
pusha
shrb
ss
loopne
and
dec
jmp
adc
lods
xor
shlb
xor
and
sub
outsl
sbb
jno
cli
imul
pushf
adc
mov
lods
mov
inc
ret
nop
add
loopne
xor
xchg
shl
divb
inc
sbb
lds
dec
mov
pop
add
out
popf
xor
sbbb
jns
fdivl
add
xchg
in
sbb
mov
popa
mov
jg
add
lret
sub
adc
fsubrp
mov
xor
fbstp
rol
mov
aaa
ljmp
sahf
sub
xor
add
sub
imul
repz
add
ja
add
push
add
add
daa
jmp
repnz
ret
lahf
adc
pushf
shll
sahf
scas
dec
push
pop
jns
dec
adc
push
rol
je
inc
bound
xchg
inc
dec
push
outsl
movsl
loopne
sub
lea
jl
jb
loop
fcoms
test
mov
shll
sbb
pop
popf
fisubrl
lea
add
pop
mov
leave
xchg
mov
sbb
sahf
jb
clc
sub
addr16
leave
addr16
mov
adc
inc
sbb
daa
repz
add
mov
lock
xchg
out
add
xchg
lods
xchg
add
add
mov
cwtl
rcr
divb
pop
nop
adc
cmp
xchg
and
push
jmp
inc
cmp
insb
sbb
lds
jns
mov
sbb
add
lock
lret
pop
loopne
mov
xchg
lret
sbb
xor
adc
fcompl
dec
dec
lds
inc
add
adc
push
iret
das
rcr
call
or
dec
sti
xor
sbb
and
dec
aas
mov
aaa
add
hlt
mov
pusha
iret
or
add
dec
test
mov
inc
jne
arpl
lea
cs
stos
push
cmp
aaa
fbstp
ud1
or
cmp
add
push
add
cmp
repz
mov
movsl
cmp
stos
test
inc
push
lods
sbb
sbb
add
gs
add
pop
jns
fwait
stos
xlat
add
aas
adc
std
sbb
pushf
fs
mov
add
testl
inc
jne
mov
xor
dec
bound
imul
mulb
aam
pop
jp
and
cmpsb
in
aad
adc
loopne
jge
inc
add
and
jge
js
add
sbb
ret
xor
das
xchg
sbb
call
or
insl
jp
out
sub
addb
int3
mov
es
adc
cmp
call
add
in
or
ret
sbb
add
and
faddl
inc
rcl
movsl
dec
jmp
add
or
xchg
out
sarl
xor
outsb
add
cmp
sub
and
popa
cmp
add
shrb
jecxz
lret
jbe
ja
adc
and
jnp
std
add
ficompl
pop
add
stc
sub
icebp
push
js
mov
mov
inc
sub
sub
push
inc
mov
cs
add
test
push
adcb
bound
call
insl
adcb
shrl
dec
add
cmpsb
loop
cli
gs
add
out
insl
pop
mov
and
pusha
mov
enter
xchg
cli
xchg
mov
add
push
in
ret
and
cmp
sbb
add
mov
imul
in
jbe
adc
jge
out
inc
inc
int
test
js
add
or
test
add
fisubl
int3
orb
fld
push
movsl
jns
cmpl
icebp
cmp
add
mov
stc
sbb
and
movsb
jmp
inc
fwait
jne
sub
pop
mov
xor
sbb
stos
js
sub
popa
adc
loopne
cmpsb
xchg
mov
xor
mov
add
and
insl
add
sbb
xor
add
in
ja
add
jmp
imul
stos
sub
add
pop
jns
daa
dec
fcom
pop
mov
cltd
fsts
bound
rolb
mov
push
fucomp
push
push
aaa
pop
add
leave
repnz
gs
add
sub
sub
test
inc
lea
aam
inc
inc
inc
jae
push
push
loop
mov
and
inc
lret
out
icebp
add
pop
mov
dec
push
enter
iret
and
mov
jne
add
lods
mulb
cmp
sbb
lcall
testb
lods
add
pushf
mov
cmp
jb
lret
sbb
lahf
fimuls
subl
add
aam
push
pop
imul
and
xor
inc
ss
outsl
xchg
add
dec
cld
call
inc
mov
lret
orl
and
lods
out
outsl
mov
sbb
loopne
xor
pushl
popa
add
mov
xchg
pmullw
aaa
mov
sbb
inc
mov
lds
js
xchg
stc
dec
dec
popf
or
movsb
dec
sbb
fdivp
or
mov
scas
push
add
mov
or
jnp
hlt
sub
dec
call
ss
loop
aad
add
repnz
iret
movl
push
inc
adc
adc
inc
imulb
mov
mov
in
dec
rol
mov
sub
stos
ss
out
add
pop
pushf
dec
push
or
dec
mov
or
rolb
inc
dec
jb
cmpsl
add
divl
lahf
adc
sub
mov
nop
xor
dec
xchg
add
data16
lcall
fadds
push
lds
data16
fildl
in
mov
out
xchg
mov
loop
xor
call
out
cltd
ljmp
jecxz
and
xor
mov
mov
inc
pop
add
jae
add
or
repz
push
sbb
add
lock
cs
mov
fstpl
xchg
cmp
push
cmp
shl
fidivs
add
test
ret
ss
jle
add
sbb
movsb
icebp
and
cmp
je
fimull
sub
push
cmc
mov
js
mov
xchg
add
test
notl
mov
xor
pusha
fdivr
mov
lds
cmpsb
inc
sbbb
push
adc
add
clc
cwtl
fildll
fnstcw
fnsetpm(287
mov
sbb
test
mov
mov
out
add
push
jp
movsb
xor
pop
inc
ret
ss
pop
mov
sub
rcll
pop
out
xor
mov
or
jns
pop
test
sar
mov
push
insl
xor
mov
or
fs
icebp
add
and
sahf
test
or
test
add
loopne
cs
test
out
push
push
jge
xor
add
cmpsl
mov
add
jecxz
sub
pop
add
add
std
add
mov
push
rcrl
and
xor
add
packssdw
add
daa
cltd
add
insb
dec
rcr
xor
inc
movsl
jbe
push
add
test
lret
adc
push
ja
pusha
pop
es
aas
add
xor
std
add
jbe
fcmovnu
xchg
in
inc
mov
fsubrl
loop
jns
mov
mov
jle
cmp
rcrb
push
in
mov
rcl
pop
insb
jne
loop,pt
sbb
icebp
sbb
mov
xor
or
push
xchg
icebp
and
rcrw
enter
mov
add
xchg
or
lea
mov
cmp
sbbl
js
enter
jmp
out
push
add
xchg
movsl
mov
inc
push
sarb
repz
add
push
ror
jmp
pop
mov
into
push
xor
cmp
scas
or
mov
fsubl
sub
xchg
add
mov
and
fwait
pop
in
xor
pusha
mov
incl
gs
xchg
sahf
or
jns
bnd
jne
inc
add
lods
mov
mov
je
add
push
mov
loop
or
lods
push
or
rclb
mov
mov
imul
or
add
dec
xorb
insl
fmul
add
xchg
and
mov
jge
cmp
push
mov
add
adc
xchg
iret
mov
xchg
or
pusha
or
inc
stos
cld
add
imul
add
pop
adc
rdpmc
aad
push
xor
cmpsb
inc
int
mov
mov
add
adc
stc
in
daa
or
jmp
jno
bound
dec
lds
mov
xor
or
adc
push
cmp
leave
outsb
xchg
mov
fsubr
stos
adcb
xor
leave
pop
and
jns
sub
or
cwtl
push
les
test
pop
sarl
mov
arpl
out
scas
ds
pop
or
and
rolb
xchg
xor
outsl
pop
insl
add
add
iret
mov
enter
test
addr16
sbb
add
iret
sub
and
xchg
xchg
xor
pop
mov
mov
dec
xor
and
sbb
leave
fstpt
lods
push
idivl
pop
sub
add
or
inc
xchg
push
mov
add
xchg
call
sub
add
lcall
xchg
addb
cs
mov
add
cmp
jne
xchg
xchg
loopne
aas
lcall
stos
sbb
hlt
leave
dec
mov
mov
fbld
jmp
or
jl
pop
cmc
ficompl
aas
mov
and
or
pop
adc
mov
cmp
push
dec
in
sbb
es
add
rcll
popf
adc
daa
scas
mov
adc
adc
and
xor
push
pushf
cwtl
mov
sbb
nop
ret
mov
ljmp
inc
add
fcoml
insb
pop
fs
lahf
or
aam
add
bnd
pop
jle
jl
jmp
aad
cltd
sbbb
cmpsb
stc
add
test
cli
mov
loope
mov
inc
push
loop
xchg
cmp
and
pop
adc
cmp
cmp
xor
jp
xchg
in
and
xchg
ret
and
pop
or
jle
imul
stos
dec
rcll
scas
jmp
pop
jmp
loop
mov
jp
push
dec
lret
insl
shlb
clc
in
add
or
shrb
xchg
js
jae
pop
std
test
clc
scas
pop
sbb
or
icebp
rorb
pusha
int3
sarb
dec
add
lds
mov
sub
ret
mov
movsb
add
rcll
mulb
in
fadds
jbe
jmp
sbb
mov
inc
pop
je
inc
dec
xor
ret
lea
mov
mov
fsubp
or
cmp
push
mov
mov
add
pop
or
roll
frstor
repnz
hlt
scas
and
sahf
sub
stos
adc
and
sbb
jbe
add
jmp
xorl
int
inc
rcl
mov
test
in
add
test
push
sarl
jne
inc
gs
add
add
out
or
popa
cmpsb
add
shrl
js
rcrb
jno
xchg
dec
fistl
pop
and
lods
out
push
adc
mov
mov
repz
sti
push
mov
xchg
and
push
lds
popa
es
ret
mov
add
cmp
add
inc
in
retw
mov
cmp
add
jle,pn
rcrb
fcomps
iret
add
daa
insl
mov
mov
negb
cmpl
adc
mov
adc
frstor
rcl
ss
sub
add
cmp
push
push
lret
adc
pop
and
stos
jbe
sbb
xor
lods
adc
or
insl
xchg
iret
jl
and
out
movsb
int3
or
inc
test
and
sbb
push
movsl
jo
mov
popa
jg
cmpsb
mov
test
mov
adcb
dec
add
icebp
cltd
cmpsb
add
dec
inc
jmp
adc
lock
lods
adc
call
and
stc
hlt
pushf
jl
jno
mov
sbb
lods
cltd
xor
arpl
and
cli
add
insl
mov
stos
mov
je
jg
loop
add
add
jp
lds
add
sbb
ficomps
add
jge
aad
jns
xchg
mov
push
enter
xchg
fcmovu
sbb
jne
add
push
out
push
push
jmp
mov
in
lret
arpl
add
jbe
sub
xor
dec
add
jo
mov
cmp
lock
inc
addl
scas
push
push
cmp
add
ror
out
and
test
mov
add
movsb
rcr
lahf
add
aas
mov
arpl
dec
pop
push
mov
mov
sub
sbb
add
sub
push
inc
pop
loope
pop
flds
roll
inc
xor
test
daa
jb
sbb
rol
addr16
stc
in
in
sub
icebp
mov
xchg
pop
xor
out
aam
push
and
cmp
stos
icebp
jno
dec
add
adc
dec
xlat
mov
add
pop
adc
xchg
jae
sbb
adc
test
pop
aad
ja
mov
pusha
fisttpl
pop
aam
mov
adc
push
les
fst
data16
pop
movsl
adc
ret
fwait
mov
and
fbld
std
push
dec
insl
lock
add
orb
add
xlat
inc
cmp
lods
xchg
inc
add
mov
pop
nop
add
mov
lcall
and
pop
push
pop
int3
add
out
jnp
sbb
sub
add
into
add
adc
inc
add
push
mov
add
test
es
lds
nop
add
xor
jo
idivb
cmp
dec
mov
ret
sub
mov
add
push
loopne
push
pop
pop
push
add
and
add
add
dec
notb
add
icebp
pop
adc
ds
add
mov
push
sub
xchg
inc
ljmp
loope
and
mov
cmp
inc
cmpsl
xchg
popf
mov
and
mov
mov
iret
mov
icebp
sbb
add
mov
pop
xor
orb
out
inc
lods
test
leave
loopne
aaa
repz
enter
or
xor
cmpsl
daa
add
testl
adc
dec
add
into
out
fcmovnu
call
outsb
add
dec
xchg
pop
jmp
mov
jecxz
add
inc
or
gs
xor
add
leave
andl
pop
lahf
xchg
jmpw
in
movsb
cmpsb
cmp
mov
jne
or
jecxz
sub
ja
adc
mov
daa
outsl
xor
add
cmpsb
jle
insl
ds
str
xchg
adc
icebp
and
xor
push
jecxz
pop
outsb
add
ljmp
mov
lahf
daa
jae
sarl
in
xchg
roll
and
pandn
aaa
sub
incl
shlb
cmp
and
cmpsl
iret
test
mov
movsl
cwtl
xchg
leave
xor
daa
pop
inc
icebp
int
add
and
add
cmp
lcall
adc
mov
lret
loopne
adc
mov
popa
pop
dec
insl
cmp
insb
xor
and
testb
push
dec
dec
mov
sub
add
adc
hlt
xorl
cmpsb
fdivr
dec
cmpsl
cmp
jmp
push
orl
mov
push
cmp
push
aad
add
sub
xchg
push
mov
sub
movsl
lcall
adc
push
test
sbb
jo
fiadds
test
lcall
add
loop
cltd
pop
adc
cmp
popa
adc
mov
push
add
hlt
mov
cld
fsubl
mov
int
add
sub
mov
mov
into
add
fdivs
mov
cmp
out
movsb
push
dec
add
mov
mov
sbbb
test
fiaddl
test
push
sbb
lret
add
popf
das
push
lcall
scas
outsb
xlat
pop
pop
icebp
add
pop
and
xchg
jne
xor
lea
mov
jb
int
cmp
mov
or
xor
shl
lods
mov
lahf
mov
adc
movsl
cmp
cltd
insb
or
push
ret
rclb
sbb
daa
add
push
mov
js
jle
movsl
cli
cs
pop
or
int
mov
andb
push
pop
dec
or
add
iret
outsb
push
mov
xor
lods
out
std
cmpl
add
test
sub
add
xlat
lahf
push
inc
in
das
and
je
jo
mov
lret
test
cmp
pop
std
fmull
popf
mov
add
shrl
inc
add
sub
xor
lahf
fadds
cli
sub
dec
pop
clc
iret
cwtl
mov
in
ss
cmp
pop
mov
inc
xor
push
out
popf
push
sbb
or
sahf
mov
mov
loop
rolb
icebp
adc
push
rol
stos
cmp
push
jmp
inc
mov
sbb
cmpsb
scas
dec
xor
inc
add
popf
dec
cs
add
inc
lret
mov
xor
xchg
stos
mov
mov
loop
dec
mov
aad
jne
mov
inc
add
repz
add
ss
repnz
push
cmp
cmp
add
mov
pop
sbb
mov
push
mov
add
sub
push
repnz
or
mov
add
fildl
in
loop
test
mov
inc
mov
into
imul
push
ret
and
sti
sarl
xchg
les
pop
or
ljmp
mov
pop
push
dec
ret
sub
pop
push
pushf
es
fwait
pop
sub
sub
adc
insl
lods
testl
cli
sbb
daa
cmp
inc
push
add
jnp
push
add
scas
invd
add
pushl
cmpsb
jmp
add
ficompl
inc
add
popa
imul
cmpb
sub
add
xor
sub
sarl
pop
dec
lret
test
into
cmp
add
lock
xlat
mov
mov
add
leave
push
inc
and
and
cmp
or
les
clc
inc
add
xlat
aad
sub
orb
sahf
dec
pusha
arpl
roll
add
out
dec
cmpsb
mov
add
dec
xor
iret
shrb
cmp
or
inc
cmp
and
adc
les
push
cwtl
lcall
sub
sbb
add
std
inc
outsb
pushf
mov
verr
cmp
jmp
mov
push
sti
cmpsb
in
and
outsb
add
push
stc
out
add
addb
es
xor
jne
sub
fcomps
push
bound
sbb
add
pop
pop
mov
inc
mov
daa
movsb
ljmp
mov
test
or
add
push
mov
add
mov
dec
adc
rcr
cmc
jecxz
mov
mov
sub
jp
xor
aas
add
test
add
xor
daa
std
or
add
inc
pand
into
add
xchg
das
andb
sbb
outsb
addl
xor
mov
add
clc
lds
mov
lds
je
cmpb
or
loop
dec
mov
mov
fdivrs
mov
adc
mov
loopne
scas
ss
nop
mov
lahf
push
dec
gs
jmp
lret
cmp
cmpl
push
sub
add
and
inc
mov
mov
es
fldenv
outsb
xchg
push
pop
insb
push
and
sub
test
xor
sbb
push
fcomps
gs
fdivrl
push
pop
inc
cmpsb
cmp
cwtl
or
out
and
nop
int
jl
add
pop
sahf
adc
hlt
aas
dec
leave
aas
cmp
imul
mov
and
js
xchg
jg
add
das
loopne
or
fildl
or
test
loope
cli
jle
mov
nop
stos
scas
gs
shr
stos
xlat
jp
fwait
sarl
gs
cmp
pop
add
insb
push
jno
push
test
inc
pop
inc
cmp
cmc
xchg
cmp
add
push
popa
clc
fisubs
data16
stc
insb
pop
push
adc
pop
xor
sub
fwait
dec
add
filds
xor
cmp
pop
push
push
add
test
inc
ljmp
out
movsl
mov
lret
jl
add
and
add
loop
jno
aas
stos
push
sarl
jo
add
inc
xor
mov
jge
add
and
lahf
sahf
cli
mov
jb
lock
push
dec
cmc
ret
fcmovb
int
mov
and
loope
jge
or
popf
aaa
add
xor
adc
add
dec
pop
addr16
jge
jnp
sbb
shll
cmp
xchg
lcall
pop
mov
xor
fwait
sbb
add
jmp
cltd
arpl
mov
imul
sub
xchg
mov
and
scas
aad
mov
ds
pop
inc
add
lcall
pushf
mov
test
jge
jnp
imul
lret
in
scas
insl
push
pop
shlb
mov
adc
dec
and
push
and
ss
lret
pop
test
inc
xor
rcrb
mov
sbb
adc
rcl
mov
js
mov
sub
cmp
adc
sub
shrl
mov
cmp
add
mov
rcll
subl
pop
or
mov
fnstcw
xor
incb
jge
add
repnz
stos
fsts
pop
rclb
xor
sti
sub
aam
dec
dec
lods
fstpl
and
outsb
mov
cwtl
dec
dec
loope
loop
insl
mov
fbld
or
mov
fwait
or
add
mov
add
mov
xchg
loop
mov
out
and
pop
ja
push
jbe
rol
fdivrl
add
and
filds
adc
call
or
sub
in
iret
mov
rcrb
cmpsb
js
mov
rolb
xchg
add
xor
sub
inc
or
cmp
dec
jmp
adc
mov
movsb
xchg
jb
dec
and
cwtl
prefetch
jnp
mov
aam
push
ja
xchg
add
lock
stos
fnsave
or
es
arpl
orl
daa
and
mov
mov
xchg
jl
ficompl
pop
add
sub
outsl
sub
mov
roll
icebp
cmc
add
or
dec
cmp
add
and
fildll
jno
push
imul
jns
mov
nop
add
dec
es
xchg
pop
les
data16
xchg
add
pusha
pushf
sbb
add
dec
jnp
push
dec
lcall
int3
cmpsl
or
loopne
push
mov
in
dec
add
pushf
cmp
jne
add
loope
add
shr
sbb
sarl
pop
xor
inc
out
test
sub
repnz
aas
testb
pop
mov
mov
cmpsb
cli
rcll
or
js
aaa
sbb
popa
sbb
aas
dec
jl
in
sbb
mov
xor
jecxz
inc
shlb
outsb
fdivr
jge
imul
sbb
pop
add
jge
pop
add
mov
sub
fsubrs
fwait
jp
arpl
dec
out
sub
fistl
sub
push
inc
and
xor
add
jno
mov
aad
inc
nop
sub
lahf
faddp
mov
and
or
sbb
loopne
and
iret
aad
movsb
mov
pop
pop
loop
push
dec
add
mov
testb
scas
mov
jae
dec
stc
pop
in
xor
outsl
arpl
pop
mov
decl
notb
rcl
fsubrp
repz
push
lret
xchg
dec
jae
xor
adc
stos
push
fisubrl
mov
test
iret
int
add
fsubrs
lahf
repz
xor
add
xchg
pop
rorl
sub
sub
pop
jns
add
mov
clc
jmp
adc
xlat
pop
sub
aas
test
mov
and
mov
out
jns
dec
fucomp
rclb
add
mov
mov
or
mov
pop
rcll
xchg
add
bound
cmpsl
rorb
jns
mov
push
and
cli
call
add
in
and
add
cmc
imul
enter
adc
add
and
xor
loopne
pop
push
xor
sub
cmp
lret
int3
dec
adc
add
jne
lcall
ret
stos
es
ficomps
sub
inc
inc
popa
sub
inc
and
mov
loop
jmp
push
lods
pop
add
ljmp
aas
jecxz,pn
jo
mov
jg
jl
dec
sbb
push
iret
ret
mov
inc
lds
sbb
icebp
stc
lldt
sarb
fndisi(8087
mov
add
je
xchg
add
push
pop
bound
mov
pop
mov
inc
adc
jmp
mov
mov
test
popa
push
std
add
daa
inc
repnz
jmp
pop
xchg
sar
insl
out
add
iret
loopne
push
jp
jno
mov
ja
and
adc
jle
loopne
test
add
ret
call
test
inc
xor
xchg
dec
std
icebp
sbb
hlt
pop
movsl
mov
xchg
ljmp
leave
imull
cmp
out
mov
lret
mov
ja
cmp
int3
jp
add
ds
mov
out
xor
jge
std
jne
es
out
insl
pop
and
inc
mov
add
xor
push
jns
pop
test
sub
pop
push
dec
in
je
or
mov
bnd
mov
fldcw
jmp
nop
cli
pusha
gs
sbb
sub
ror
aam
loop
in
jmp
test
in
sti
movsb
and
xlat
xor
test
or
outsl
cmpsb
and
ds
adc
std
push
in
adc
shl
sub
cld
lret
loopne
sbb
js
loop
mov
jmp
or
das
bnd
xor
or
xchg
pop
jle
push
scas
mov
fs
aad
dec
and
in
jge
loop
ss
les
adc
xchg
orb
dec
int
loope
or
daa
jns
mov
cli
lods
adc
cmp
dec
mov
gs
lods
inc
mov
and
repz
or
or
mov
push
test
adc
jnp
lcall
mov
sub
cmp
sbb
push
adc
dec
push
les
je
add
xor
xchg
lock
push
fldl
sbb
fcoms
jno
push
and
stc
lock
adc
aad
fldl
das
adc
sub
and
pop
push
ret
jo
arpl
cmp
cmp
dec
mov
or
sbb
cli
aas
cltd
leave
mov
push
cmp
sbb
popf
negl
mov
inc
jp
jnp
pusha
std
bound
mov
sub
pusha
mov
out
addb
sub
icebp
aaa
ret
loopne
pop
jnp
sbb
adc
mov
js,pn
cmpsb
jp
int3
xchg
jle
xchg
aaa
ret
sbb
push
cmp
jecxz
int3
push
mov
push
lock
fidivs
mov
out
sub
inc
arpl
jmp
inc
cmpb
jle
test
mov
dec
out
leave
mov
outsl
and
lock
cmp
sbb
mov
push
and
out
andl
or
pop
adc
jg
xchg
mov
adc
in
add
xchg
mov
out
and
mov
sbb
filds
and
fisubs
pop
xlat
cltd
cmp
stos
cmp
cwtl
cmp
push
filds
add
inc
ret
cmp
and
imul
bound
xchg
aad
fistps
lods
add
nop
daa
aad
pop
mov
add
out
clc
xchg
in
das
mov
int
push
mov
popf
fcmovb
sub
rclb
mov
outsl
push
cwtl
or
imul
adcb
arpl
or
in
or
xchg
sub
sbb
call
xchg
xchg
adc
lret
mov
outsb
loope
fsubrl
push
add
add
repz
jne
arpl
adc
dec
lock
sbb
mov
loopne
je
xor
mov
mov
adc
inc
les
mov
cmpsb
int3
dec
int
pop
cmp
inc
icebp
or
xor
xchg
cmp
mov
inc
lret
cmpsl
dec
in
dec
cmp
mov
pop
outsl
jmp
or
pop
or
and
subl
mov
push
pop
fld
std
idivl
out
inc
or
xchg
aaa
mov
mov
mov
mov
in
push
loop
inc
add
xorb
iret
xor
roll
adc
mulb
add
pop
sub
cmp
add
stos
ja
add
dec
popa
xor
jb
xchg
cmovno
inc
in
cmp
pusha
push
cmp
xorl
mov
cmp
fnsave
or
test
das
push
sar
push
es
mov
lds
dec
hlt
pop
jecxz
mov
adc
insl
pop
push
inc
cmp
call
cwtl
mov
lea
js
jl
xchg
push
mov
inc
sbb
ja
sub
add
jne
popf
inc
orb
hlt
cmp
imull
pop
adc
add
mov
es
adcb
fcmove
jmp
mov
js
add
fbstp
inc
inc
mov
mov
scas
outsb
xor
push
push
inc
sbb
inc
out
add
outsl
or
pushf
jge
push
scas
sub
jne
cmp
sbb
ret
sbb
imul
pop
fnstcw
fbstp
mov
into
pop
pop
add
add
int3
aas
adc
jle
js
mov
mov
mov
stos
jno
adc
pop
and
mov
ror
sbb
out
pop
pop
adc
shrl
das
add
cli
cmp
daa
mov
rcll
xchg
sbb
pop
out
jg
and
or
sub
cmp
lea
pop
mov
adc
adc
into
or
add
xchg
shl
xchg
daa
iret
pop
jmp
push
add
sbbb
xchg
fistpll
xchg
sti
inc
aad
cmp
lret
gs
xor
cmp
stos
scas
jmp
stc
mov
or
adc
movsb
add
lock
add
stc
and
insb
sub
sbb
add
daa
test
pusha
lret
push
dec
add
push
aad
add
xchg
or
mov
lea
add
add
sub
lret
jns
mov
add
add
out
mov
daa
xchg
push
sti
in
mov
andl
imul
mov
sbbb
sbb
mov
mov
test
pop
cmpb
add
lcall
pusha
in
gs
cs
pushl
into
cmp
ljmp
mov
fsubl
cmp
xchg
sarb
or
enter
ret
shll
fadds
pusha
cltd
fstpl
das
ja
add
jg
push
push
jecxz
hlt
int3
jo
iret
div
ffreep
jae
jno
cmp
inc
push
out
pushf
rol
sbb
into
and
and
add
lock
inc
sbb
andb
ljmp
xor
jp
add
push
std
xchg
mov
cmpsb
mov
xchg
dec
mov
idivl
loope
or
out
mov
add
repz
cmp
push
mov
and
rclb
inc
mov
test
xor
je
test
dec
lock
lea
lods
xor
and
push
in
sahf
jecxz
xor
movsb
rorb
popa
fiaddl
cwtl
mov
movl
mov
jl
dec
xor
xor
xlat
out
ret
into
ds
add
shll
sahf
mov
lods
in
push
mov
lods
add
and
jecxz
mov
add
push
pop
vmread
add
inc
pop
or
popa
iret
js
xchg
or
mov
push
test
dec
mov
dec
mov
fs
sbb
pop
mov
add
and
stc
rolb
add
hlt
and
iret
sbb
outsb
fmuls
xor
xlat
shl
lea
scas
daa
addl
je
cmp
in
lret
cwtl
add
jecxz
es
test
add
subb
nop
call
pop
pusha
xorl
aad
stos
inc
or
add
icebp
sub
enter
pop
lds
add
push
into
add
outsb
add
add
inc
out
adc
and
or
or
mov
xchg
pop
or
inc
std
add
out
aaa
pop
scas
xor
push
cld
das
gs
mov
mov
xchg
adc
add
fiaddl
lds
popf
add
ss
gs
pop
rorb
je
rolb
rorl
and
loopne
xchg
jne
jmp
mov
stos
cmp
mov
mov
scas
in
xor
mov
push
cld
and
sub
in
iret
xor
mov
adc
mov
out
and
loope
movb
jl
mov
dec
push
add
test
pusha
add
ret
and
fidivs
dec
addr16
inc
shlb
sub
push
push
xchg
daa
fdivs
inc
jne
pop
shrb
mull
addr16
rcr
inc
pop
lods
dec
and
repnz
rclb
movb
ds
in
add
mov
popf
push
gs
dec
add
outsl
adc
or
insl
add
sub
pop
cwtl
sub
mov
leave
cmpsl
int3
add
and
ja
xlat
fidivl
inc
jge
dec
xor
sarb
pop
aad
ret
ds
notl
imul
push
or
in
frstor
xchg
repz
jle
and
imul
add
test
xchg
cltd
iret
ja
and
jne
mov
jp
add
daa
pop
int
jmp
jecxz
xor
and
ljmp
lret
adc
cmp
cltd
mov
movsb
orb
insb
dec
inc
xor
call
popf
ds
lds
data16
sbb
daa
lret
mov
decb
outsb
call
add
sbb
out
js
filds
jge
pop
test
pop
sahf
and
scas
inc
and
imul
mov
xchg
leave
movb
mov
loop
mov
xchg
andb
popf
addb
jge
in
sub
add
and
cmp
sbb
push
pop
sbb
and
andb
mov
pushl
adc
movsl
pop
dec
repz
icebp
mov
stos
inc
out
pop
and
mov
das
popa
into
add
test
scas
scas
out
addr16
fildl
cmpsl
lret
sahf
mov
sub
mov
popf
ret
jmp
cld
or
sbb
ret
in
das
sti
addb
mov
ror
mov
movsl
icebp
jo
xchg
sbb
dec
lods
addr16
out
stos
movsl
pop
add
out
mov
test
pop
xchg
in
aam
xchg
mov
cwtl
dec
and
pop
add
cmpsb
xchg
in
cmp
and
rsm
nop
or
add
das
mov
popa
xchg
cmp
mov
aad
jo
xor
pop
jb
dec
pop
fimull
in
arpl
and
xlat
les
and
into
bound
lods
jnp
push
adc
call
int
inc
inc
xchg
mov
aas
loopne
mov
mov
enter
push
cmp
mov
fisttps
mov
data16
xchg
in
imulb
ret
inc
mov
sbb
leave
add
cmp
pop
xchg
and
lods
add
add
and
jp
adc
add
xor
int
mov
cmpsb
popa
xchg
cmc
out
gs
lds
into
subb
je
mov
add
insb
negb
add
push
sbb
jmp
enter
jge
int
adc
lods
add
push
pop
adc
pop
add
popf
fidivrl
add
dec
fists
andl
in
cwtl
jne
and
repnz
xchg
xor
in
add
push
dec
and
mov
xor
jp
xchg
or
push
dec
adc
loope
sub
cli
and
test
imul
pusha
mov
push
push
sbb
andl
roll
fwait
js
lret
jns
jl
mov
daa
lret
popf
lods
arpl
cltd
bound
sbb
jp
fwait
out
xor
mov
addl
mov
and
push
and
inc
arpl
pop
std
xor
and
aad
xchg
mov
es
wrmsr
cs
fiadds
ret
cmp
mov
sub
mul
sti
insb
mov
lods
imul
mov
bound
sub
pop
xor
orl
xor
rcll
and
les
pop
ljmp
or
xor
ja
cmp
add
cmp
mov
sub
inc
inc
ljmp
adc
lret
jns
sub
add
cld
lods
add
pop
sbb
aam
xor
pop
sbb
cmp
and
aas
popf
add
iret
jnp
sub
add
pusha
fxam
sbb
sub
ret
dec
es
fdivr
popa
cli
dec
aas
int
cmp
mov
xor
cmp
add
push
sub
outsl
popl
imul
lret
add
adc
pusha
dec
fsub
cltd
lret
or
daa
xor
xor
sti
or
xchg
mov
jp
mov
or
cld
adc
sub
jge
dec
jo
sub
or
mov
push
pusha
jl
mov
gs
pusha
xchg
sbb
xor
sub
sbb
lock
push
cmc
mov
incb
bound
push
loopne
loop
adc
mov
arpl
iret
test
out
adc
jecxz
xlat
stos
add
and
dec
add
pop
sub
xchg
cmp
xchg
js
jmp
ret
jp
pop
aam
scas
sbb
scas
xor
jl
aaa
aaa
cmp
je
pop
add
cmc
push
mov
adc
rclw
lods
loop
cmp
xlat
cwtl
add
sti
fistl
add
stos
enter
pop
add
push
stos
and
addb
fsub
sub
add
std
sbb
push
push
xchg
call
aaa
mov
movsb
mov
xor
add
push
push
sbb
sar
fs
or
cltd
add
xor
push
xchg
popa
adc
xchg
inc
xchg
sbb
addb
add
inc
test
filds
repnz
out
pop
add
add
cwtl
imul
or
push
xorl
test
mov
not
add
neg
push
xchg
jmp
xor
aaa
aas
es
dec
adc
xchg
stos
sbb
add
in
mov
mov
pop
xchg
push
mov
pushf
mov
ficoml
leave
push
sti
mov
dec
incl
inc
dec
lcall
xchg
pop
mov
sti
mov
sahf
dec
in
add
jnp
mov
sbb
lea
daa
test
pushf
je
add
jle
or
add
xor
les
add
orb
sub
add
int
cmp
adc
pop
add
ds
lock
mov
orb
mov
push
incl
imul
lret
fnstenv
test
mov
lahf
mov
ss
in
sub
cmp
fdivl
aaa
add
cmpsl
addr16
addl
call
insl
dec
ja
and
mov
cld
pop
fldcw
and
add
out
mov
sub
add
sbb
sbb
dec
je
lret
cmp
inc
inc
sbb
out
or
add
js
jae
leave
add
sbb
pop
sahf
rcrb
xor
xchg
out
lea
add
jg
dec
sub
cmp
stos
cld
ja
and
shrl
clc
jnp
js
pop
fiadds
cmpsl
pop
repz
lcall
hlt
loope
adc
and
mov
sbb
cmp
add
inc
inc
sub
push
shll
add
repz
dec
movntq
lods
rorl
mov
pop
push
popa
mov
dec
mov
add
in
rolb
popf
jae
mov
add
mov
xor
add
mov
sbb
daa
out
rolb
inc
js
and
add
cmp
add
subb
jb
aad
add
sarl
add
fidivs
repz
mov
mov
add
adc
add
insb
das
push
mov
enter
add
sbb
stos
adc
call
xchg
pushf
dec
mov
or
addr16
push
and
xor
pop
add
mov
in
test
push
pop
jo
jecxz
je
lods
lcall
push
or
pop
mov
sbb
adc
sub
scas
inc
scas
outsl
repz
fimuls
add
aaa
push
jnp
mov
push
or
xor
add
out
pop
adc
fidivrs
jae
das
push
sub
xor
or
adc
in
jle
cmp
add
push
or
sti
xchg
cmpsl
push
loop
insb
mov
mov
add
dec
add
insb
test
loope
nopl
mov
jle
int
and
add
sub
add
dec
sti
mov
out
shll
scas
xchg
call
stos
dec
ljmp
pop
mov
and
xchg
adc
push
add
or
add
mov
cmp
add
test
fldl
xchg
out
insl
inc
mov
popl
add
and
cmc
pop
cmp
rorl
adc
test
cmc
add
sub
mov
xchg
and
lret
cmp
clc
and
push
out
aas
mov
and
mov
add
cmp
shl
mov
test
sti
mov
fmull
pushf
out
pop
iret
mov
inc
out
sbb
aas
or
aam
xor
inc
out
inc
movl
mov
pusha
mov
add
mov
bswap
sbb
into
outsl
daa
mov
or
or
xor
jle
sub
jne
push
xchg
mov
js
inc
mov
pop
test
and
sbb
cmp
cmp
ret
xor
out
add
jne
add
add
fiadds
inc
mov
pop
and
xchg
cmp
xor
insl
sbb
loopne
out
test
pusha
cwtd
mov
mov
imul
or
cmp
dec
push
dec
aaa
cmpl
add
adc
mov
stos
inc
pushl
adcl
daa
jp
in
add
sbb
ret
add
and
push
add
mov
push
push
imull
inc
jge
mov
cmp
jp
daa
pop
xor
pop
lcall
push
pop
imul
insl
cmp
pop
stos
cwtl
nop
sbb
dec
adc
gs
cmpsl
iret
pop
or
cmp
mov
xor
mov
sahf
in
add
hlt
mov
movsb
test
leave
repz
int
out
aad
ret
cmp
lret
daa
out
enter
mov
add
fstp
sub
cli
pop
inc
add
lods
add
dec
and
add
ret
jne
out
add
fwait
add
jo
enter
or
dec
mov
pusha
push
xor
cmp
stc
cs
shr
fs
aaa
dec
add
sahf
stos
call
pop
pop
call
cmc
dec
test
inc
int
push
daa
jmp
mov
stos
aaa
xorl
insl
push
cmp
and
cmp
sbb
test
xchg
cld
add
jle
mov
fiaddl
lods
sbb
sub
inc
imul
dec
andl
je
shrd
pop
cmc
adc
pop
cld
add
fdiv
inc
cmp
push
sti
mov
cmp
cmp
in
dec
add
xchg
stos
or
popa
imul
popf
xor
pop
icebp
imul
cmp
add
xchg
scas
mov
fildl
push
add
ja
pop
add
pop
jl
xor
push
xlat
sti
cmp
in
jns
add
cmp
pop
add
pop
gs
jmp
push
in
mov
jle
inc
test
fwait
icebp
add
pop
jl
aad
neg
add
jmp
std
add
ds
rclb
outsl
test
fmull
mov
mov
test
fcompp
or
pop
pushf
pop
loopne
cwtl
fs
sahf
inc
jno
pusha
push
dec
xchg
mov
ljmp
aam
mov
push
add
lret
sahf
scas
shll
xor
popa
jns
das
add
mov
cs
or
inc
stos
add
fistps
pop
pusha
add
sti
xlat
add
cmp
in
movsl
pop
xchg
sbbb
xor
xchg
mov
out
adc
xor
push
xor
and
add
test
pop
adc
stc
lea
sarb
push
xor
pop
mov
mov
jle
inc
aas
out
xchg
fsubrl
sub
adc
dec
cli
mov
jg
in
jbe
sbb
add
xor
mov
add
mov
push
iret
push
add
out
jl
loope
xor
imul
add
mov
sub
mov
lret
xor
dec
mov
sub
jmp
pop
or
or
outsb
sbb
and
jnp
push
push
add
mov
add
mov
lds
addps
scas
cmp
mov
jge
mov
jb
ret
sub
dec
cmp
mov
add
push
dec
leave
jl
add
int
out
outsl
add
xorl
adc
test
outsl
lock
push
jle
xchg
cli
and
add
or
les
mov
inc
cmp
xchg
cmp
or
imul
idivl
jb
ja
adc
xchg
inc
xchg
int
fmuls
pop
xor
push
inc
xchg
loopne
mov
cmp
adc
loopne
sbb
ljmp
ds
or
test
shll
lea
das
std
ret
sub
js
mov
push
inc
jl
mov
movsl
sub
fs
sub
loope
fiadds
sbb
sarl
xor
push
sahf
shlb
neg
or
cli
lods
xor
flds
jno
test
mov
shrb
ljmp
mov
ret
and
imul
or
movsl
pop
add
or
into
mov
xor
push
dec
inc
out
add
fwait
xor
add
mov
inc
imul
fwait
sub
fdivl
out
lcall
ljmp
mov
les
imul
pop
dec
insb
lds
mov
leave
xchg
das
js
add
cwtl
jne
ret
shll
inc
mov
outsl
fwait
pop
aad
decl
push
cltd
int
lret
sbb
lds
adc
sbb
lods
jb
mov
mov
cmc
push
jp
out
mov
adc
rcll
rorb
inc
loope
leave
and
cmc
add
jmp
adc
push
lods
fmuls
jecxz
std
ljmp
cmp
test
xchg
pusha
cmp
mov
popa
and
pop
cmp
xchg
mov
dec
sbb
cmp
ljmp
aam
movsl
ss
jmp
xor
add
mov
cmp
sbb
jmp
mov
sub
subb
add
xor
aad
or
sbb
mov
daa
mov
and
push
and
jb
inc
xor
out
leave
loope
mov
mov
and
and
mov
insl
aas
adc
cmp
jg
mov
sbb
out
imul
cmp
cmpsl
push
rclb
pop
push
jp
inc
jmp
xlat
es
sti
dec
jb
and
xor
inc
sbb
pop
mov
insl
push
stos
negb
fisubrs
or
cmp
jp
subb
loope
mov
sbb
pop
fcmovbe
outsl
movsb
scas
mov
test
sahf
leave
mov
mov
pop
dec
push
xlat
push
test
mov
cmp
xchg
sub
ljmp
inc
shlb
push
test
or
sti
pop
sub
pop
jno
lcall
mov
and
cmpsl
daa
jle
test
fnsave
inc
mov
push
or
push
xchg
sbb
adcl
sub
mov
and
scas
lods
dec
inc
cmp
mov
mov
fnstsw
in
adc
inc
aam
jo
jp
pushf
loop
cmc
pop
push
mov
push
xchg
test
hlt
addb
dec
sbb
push
push
pop
adc
jp
test
rcrl
insb
cmp
add
mov
lods
gs
xor
cmpb
mov
and
scas
jb
adc
lret
mov
aad
shll
hlt
or
inc
add
cmp
pop
push
add
jmp
sbb
pop
and
add
jmp
push
lret
aas
sbb
and
dec
sub
jb
mov
je
xchg
mov
jg
lock
jo
add
sub
add
sbb
push
mov
aas
jle
cli
or
popf
ret
cld
mov
mov
inc
push
ja
push
push
repz
and
das
jbe
loopne
test
mov
add
andb
lret
addb
sub
jb
pop
adc
lds
add
pop
cltd
testb
and
insl
mov
adc
mov
mov
cmpsb
mov
shrl
sub
mov
sahf
enter
add
aad
jle
sub
cmp
and
add
pop
ret
stos
mov
dec
dec
adc
cmp
pop
mov
xchg
andl
outsb
pop
add
jb
xor
and
movsb
fcoms
sbbb
mov
pop
mov
sbb
fdivr
es
f2xm1
lcall
mov
jecxz
outsb
lods
xor
jl
faddl
jns
movsl
pop
loope
in
mov
lods
dec
loopne
inc
cld
shl
adc
jnp
cmp
loope
fdivp
sub
pop
add
sub
add
int
or
mov
movl
cmp
cs
fiaddl
xchg
std
cmp
xchg
add
sbb
add
mov
push
add
bound
add
push
jo
sub
shrb
out
add
push
add
push
mov
push
imul
xchg
mov
fwait
adc
add
mov
push
mov
call
out
bound
pop
xlat
cmpsl
mov
and
inc
int
and
adc
add
cmp
inc
popf
out
jno
jns
cmp
push
add
addb
aas
mov
mov
mov
sbb
add
mov
fdivrs
add
mov
lds
movsb
sbb
or
push
repz
sbb
lret
push
dec
jmp
cmp
aad
daa
xor
add
or
sub
fdivr
leave
cmp
mov
or
push
test
aas
xchg
jmp
mov
xor
mov
sub
movsb
adc
jb
fs
popa
mov
sub
fmul
inc
mov
xchg
xor
inc
daa
scas
xor
pop
popl
xchg
out
stc
test
out
add
lods
les
inc
push
sub
sbb
mov
or
mov
jb
out
ret
movsl
fs
inc
mov
mov
pop
pop
cmpsb
mov
sbb
inc
aaa
or
add
into
gs
cmpsl
dec
add
mov
jge
add
lret
cmp
aaa
add
fnstenv
pop
add
in
push
cmpb
inc
sahf
and
mov
xor
push
cmpsl
add
gs
xor
adc
ret
mov
fucom
lods
mov
mov
clc
cmc
mov
into
ja
add
jns
insl
sbb
add
out
test
jns
stos
popf
imul
inc
fmull
movl
add
stos
add
loopne
mov
add
push
shrl
push
gs
inc
fildll
and
xlat
push
mov
dec
lea
faddl
push
das
out
outsb
push
out
sub
fsub
pop
adc
and
xor
sahf
bnd
fs
testl
loop
xchg
loope
inc
repz
jg
add
cmp
imul
int
or
stc
scas
or
jl
rep
and
dec
test
jne
addl
and
adc
mov
xchg
add
inc
outsb
sbb
cmp
faddl
add
xchg
dec
test
push
add
mov
push
gs
xor
mov
inc
adc
mov
cmpsb
xor
cld
add
cld
lcall
dec
sbb
imul
jo
jae
xchg
lds
imulb
arpl
add
sub
inc
add
mov
fwait
mov
ds
mov
inc
cmp
out
and
aas
pop
inc
daa
and
outsb
rcr
dec
popa
xor
stos
mov
rol
sbb
and
loop
cs
in
xchg
ds
rcll
xlat
sub
push
add
popf
mov
sbb
cli
iret
or
ret
adc
ret
sbb
xchg
mov
stos
or
add
mov
jge
and
dec
cmp
shll
icebp
xor
or
add
outsb
push
js
and
fucom
loope
insl
je
xchg
scas
mov
add
push
mov
add
dec
mov
in
andl
jecxz
mov
push
mov
and
xchg
shll
and
push
test
cmp
jmp
jge
daa
aad
adc
and
cmpsl
iret
sbb
mov
in
xor
les
or
push
mov
dec
ljmp
sbb
insl
shll
sarl
cmp
mov
sbb
sarb
cmc
sbb
cmc
adc
pop
aad
dec
sahf
mov
js
insl
loopne
ror
dec
sbb
je
cmp
cmp
fwait
mov
jns
inc
imul
adcl
leave
fistpl
sti
mov
in
sbb
push
int
std
add
repz
inc
mov
movb
es
gs
dec
roll
pushf
jle
and
test
aam
fldl
popf
in
pop
xchg
aaa
stc
add
xor
mov
jb
inc
test
add
arpl
adc
cmp
push
shrl
and
mov
call
push
shrl
stos
or
sub
out
sub
pop
mov
dec
iret
push
and
hlt
fsubrs
sub
xor
mov
adc
inc
andb
push
xor
ss
push
add
xchg
jnp
mov
inc
loope
rcr
js
clc
lret
mov
fs
jle
shr
lds
outsl
fisttpl
arpl
lahf
cmp
nop
in
insl
pop
out
das
mov
dec
fcom
ret
pop
pop
pop
into
pop
sub
rclb
leave
rorl
mov
popa
jp
pop
xor
mov
sbb
test
cltd
outsl
mov
sbb
add
add
je
or
fwait
mov
sahf
arpl
cwtl
out
in
inc
sbb
lods
imul
and
je
adcb
inc
sahf
jg
add
aas
pop
inc
inc
mov
insl
sub
or
cmp
push
lods
adc
pop
sbb
lret
aaa
fmull
cmp
fisubrl
ljmp
test
lds
push
xor
in
xchg
roll
dec
fsts
daa
cmp
cmp
aas
push
lods
scas
jl
cmp
or
xor
cld
bound
xchg
daa
popa
icebp
pop
xorl
and
xor
mov
sbbb
andl
lret
add
and
lcall
mov
out
repnz
lods
std
fildll
push
lea
rcll
sbb
adc
sub
out
push
cs
push
cmc
mov
cmp
cli
popa
mov
sbb
and
jnp
mov
leave
jb
mov
jp
shl
imul
cmp
inc
mov
mov
aas
imul
movsb
out
popa
jp
mov
ljmp
scas
cld
stos
xlat
outsl
mov
pusha
cmp
push
stos
pop
push
shr
movsl
fbld
stos
inc
popa
add
inc
pusha
gs
mov
or
push
push
pop
cmc
hlt
push
lds
stos
or
into
imul
add
adcl
mov
or
or
dec
enter
cmp
into
add
insb
jle
mov
push
push
ret
aad
out
outsl
fsubrs
adc
or
push
hlt
sub
add
cmp
icebp
adc
push
xorb
in
push
incl
mov
jle,pt
xor
dec
xor
rcr
sar
adc
lods
xor
das
inc
or
inc
ret
bound
mov
mov
sub
stc
das
arpl
cmp
mov
out
adc
add
mov
aad
shl
rol
pushf
hlt
mov
xchg
rdtsc
daa
cli
cmp
loopne
out
addr16
mov
dec
cmp
dec
fisttps
scas
dec
jo
sbb
sbb
test
sub
stc
inc
out
ja
jp
cmpsb
jae
mov
in
xlat
jp
mov
xor
cld
xchg
fdivrs
pop
sub
ja
add
pushl
and
jnp
rcll
fldt
adc
movsb
std
jp
and
xor
adc
js
cmp
mov
bound
mov
in
mov
enter
cmp
xchg
loope
mov
test
inc
push
jmp
adc
xchg
cmpsb
jae
mov
fdiv
adc
cmp
test
in
or
mov
shrl
or
push
cmp
stc
arpl
repnz
jnp
inc
adc
out
jg
popf
inc
sahf
pop
jge
sbb
add
dec
in
add
idivl
dec
add
test
aas
adc
insb
adc
mov
and
loop
xor
lock
cmp
push
push
sbb
stos
xor
scas
mov
and
sbb
rorb
and
daa
and
cmpsb
and
lods
sbb
movsb
mov
mov
cmp
lods
cs
cwtl
mov
aaa
jg
mov
daa
mov
mov
pop
imul
jl
aam
ja
insb
inc
add
add
cmc
arpl
ret
jge
jmp
movsl
out
in
loope
adc
xor
stos
jmp
jb
into
mov
jo
aas
mov
push
daa
mov
int3
push
aam
inc
inc
or
and
mov
arpl
sbb
mov
jecxz
aas
jnp
mov
fldenv
cmp
jne
adcb
stos
or
inc
dec
test
fstpl
cmc
dec
in
sbb
dec
xor
pop
pop
jne
rcr
cs
out
push
shlb
xlat
and
out
daa
pop
loop
pop
sbb
cmpb
dec
movsb
out
xor
dec
outsb
pop
pop
sub
pop
testl
jg
jnp
mov
add
out
pop
sub
in
mov
dec
jb
fstpt
dec
test
cwtl
cltd
decl
inc
dec
stc
pop
lods
mov
push
jp
ss
adc
hlt
adc
cmp
jl
dec
mov
shl
jp
xor
out
push
orl
mov
insb
xor
push
aad
sbb
test
addb
and
or
sbb
js
xchg
pushf
sbb
mov
mov
dec
ret
fistps
jl
cmpsb
sbb
cmp
xchg
and
xor
mov
dec
cltd
adc
xchg
cwtl
xor
mov
sub
mov
orl
sub
cmpsb
xchg
jns
sbb
push
icebp
jg
ss
push
jg
mov
push
das
cwtl
push
les
cmp
outsl
ret
test
push
test
ficoms
ret
scas
test
mov
mov
jne
xchg
hlt
mov
mov
pop
or
loopne
and
leave
daa
ja
xchg
xchg
loope
push
mov
out
mov
push
sub
out
and
and
sbb
add
pop
out
jno
out
and
mov
into
repnz
sbb
fwait
mov
push
insl
add
push
cmp
lods
ss
sbb
cmp
dec
testb
and
push
sub
sbb
aas
mov
xor
test
jle
pop
inc
adc
call
xor
insb
in
push
addr16
into
aaa
mov
or
pop
js
jge
cmp
daa
and
jne
jl
xchg
sbb
mov
std
icebp
int3
cmp
pop
sarb
cld
daa
cli
or
adc
and
sbb
cmpb
test
stc
mov
mov
fnstenv
push
cmp
mov
je
mov
inc
add
push
add
movsb
inc
subb
jp
out
jae
sti
pusha
pushw
andb
lcall
test
adc
mov
adc
scas
aad
je
repnz
or
jl
add
cs
das
addr16
jp
push
mov
xchg
push
mov
add
add
sbb
sbb
lret
dec
icebp
jle
add
test
cmc
cmp
pop
mov
mov
pop
outsb
pop
sbb
test
jbe
imul
pop
inc
xchg
lahf
jle
inc
or
movsb
andb
adc
rcrl
or
jge
jne
addb
jp
cmp
into
pop
and
push
add
and
rorb
das
pusha
xor
mov
sahf
lret
mov
fimuls
inc
or
test
or
fiadds
push
mov
and
imul
add
stos
and
lods
cmp
shll
dec
push
sbb
xchg
rolb
dec
adc
stos
add
xorl
push
add
pop
push
mov
sahf
add
push
sarl
dec
int3
or
xchg
icebp
jp
cmp
stos
sbb
repz
add
stos
jbe
adc
testl
nop
jne
sahf
dec
sub
jno
scas
sub
xor
test
aas
or
aad
loop
jnp
push
addb
pushf
mov
stos
xchg
push
push
push
fistps
std
int3
jne
lods
cmpl
xor
cmp
sub
loopne
pop
push
ret
jbe
es
push
mov
pushf
jo
jmp
leave
dec
into
xchg
fdivs
xor
cwtl
roll
sarl
dec
int
mov
loopne
mov
add
push
fs
test
mov
enter
push
xor
add
cmp
and
mov
jg
call
dec
jecxz
cmc
jg
cmp
pop
add
daa
popl
xor
pop
ss
or
clc
jp
dec
xor
and
das
sbb
ret
xchg
mov
inc
add
sti
sub
or
movsl
cmpsb
mov
and
stos
xchg
inc
jb
aas
xor
xor
hlt
cmp
rorb
inc
inc
jbe
add
decb
test
leave
ljmp
push
addr16
and
popf
add
mov
orl
mov
add
rolb
add
loope
ficomps
into
mov
clc
dec
repz
add
jno
add
xor
dec
xchg
pop
add
mov
mov
loope
mov
insl
add
cmc
inc
lea
add
mov
bound
xor
inc
adc
xor
mov
js
push
jle
jp
lds
fnstsw
push
sub
xor
pop
repnz
sbb
sub
jne
ret
lahf
xor
movsl
mov
scas
add
dec
sub
inc
xor
or
cmp
pop
sti
shll
add
ss
orl
mov
repnz
sbb
jo
test
pop
mov
jb
and
int
fstpl
dec
jno
and
mov
mov
add
out
sub
add
cli
cwtl
xchg
push
mov
std
push
sub
adc
jl
ljmp
es
dec
pusha
or
jle
mov
fldl
hlt
push
out
and
mov
jp
xchg
stc
fnstcw
inc
add
je
jg
inc
adcb
mov
inc
pop
fwait
test
imul
imul
pop
movsb
add
lock
test
lret
call
mov
out
negb
and
pop
add
jnp
icebp
dec
dec
jmp
inc
in
xchg
test
mov
and
into
sub
add
sti
pop
add
add
mov
jbe
mov
add
add
out
gs
rorl
lret
hlt
add
aad
jo
dec
push
add
fsubrs
add
fcomi
nop
movsb
stos
mov
jecxz
add
and
jne
and
adc
add
xor
mov
inc
sti
imul
movsl
cmp
sub
out
adc
add
add
fdivs
or
call
or
xchg
add
scas
dec
fiaddl
cltd
xor
sub
and
pop
jnp
in
mov
xor
pop
loopne
pop
mov
insb
add
stos
fbstp
push
push
arpl
add
and
test
repnz
pop
jne
and
jnp
loopne
push
fidivs
repz
rorb
scas
cmp
filds
loop
xchg
clc
inc
dec
jg
or
fcomps
or
rcrb
jg
fisttpl
insb
add
gs
in
pop
add
add
popf
loopne
add
dec
daa
push
and
pusha
xchg
push
push
add
lds
ret
adc
or
jns
aaa
stc
push
add
popa
scas
roll
sbb
sub
dec
pushf
dec
rolb
cmp
add
jecxz
iret
sbb
dec
pushf
ret
and
cmp
inc
int3
pop
data16
inc
sub
ficoml
popf
pop
aas
cmp
push
rcrb
mov
jo
es
repz
mov
xchg
out
test
shr
push
pop
push
icebp
dec
cltd
in
das
ds
add
adc
sbb
sbb
cs
xor
ja
push
pushl
mov
add
dec
sub
add
add
push
cwtl
dec
xor
in
rcr
sbb
or
cmp
mov
add
stos
cltd
div
in
addl
sub
sub
lret
mov
pop
dec
into
cmp
lahf
xchg
jle
add
xor
sbb
jae
imul
add
xchg
stos
ret
sarb
add
xor
out
test
and
rorl
es
ja
je
dec
mov
add
add
sbb
jns
sbb
sbb
aaa
out
adc
call
aaa
scas
fadds
cltd
outsb
jge
pop
push
dec
test
leave
pop
out
and
repnz
repz
inc
jmp
sub
mov
cmp
insb
ret
adc
es
lret
pop
add
xchg
xorl
in
shrl
fadds
movsl
in
sub
add
lret
outsb
aad
sbb
pop
sub
push
inc
xor
int3
pop
stos
sahf
jno
out
in
mov
pop
cmpb
inc
xchg
inc
repz
add
orl
pushw
or
add
mov
icebp
lods
sub
lea
in
inc
add
out
mov
pushf
add
xor
add
inc
xchg
inc
dec
jns
fdiv
ret
loop
jno
add
rcrl
aad
jae
push
xchg
lds
ja
das
add
pop
out
movb
push
lock
add
sbb
add
adc
jle
cmp
sbb
ret
mov
in
inc
or
sbb
leave
jns
lahf
sbb
clc
mov
dec
push
es
fs
rorb
add
jge
mov
mov
je
xchg
loope
shlb
lods
lret
cmp
or
cmc
xor
jge
add
test
add
movsb
cltd
mov
repnz
insb
or
mov
mov
xor
mov
out
push
add
and
test
adcl
jae
add
mov
clc
sub
out
cwtl
shlb
mov
cmpsb
call
and
stc
cmp
clc
cmpsb
test
andl
dec
sub
mov
loop
rcrb
dec
pushf
popf
sub
lahf
scas
inc
push
mov
mov
cmp
je
and
movsb
cmp
out
sbb
enter
stc
fadds
sbb
inc
jp
cmp
sub
pop
sbb
mov
pop
jo
rclb
sti
sub
push
add
xorl
mov
cmc
xor
dec
pop
pop
mov
iret
cmp
lret
aas
loop
and
add
loopne
xchg
out
dec
add
subb
lock
pop
icebp
add
inc
inc
add
andb
push
call
jp
add
xor
pusha
add
subb
nop
in
add
dec
out
and
xchg
add
xor
or
ret
sbb
ds
mov
mov
es
add
adc
imul
scas
xchg
add
jl
inc
bound
add
sahf
push
cli
cmpb
add
inc
jbe
movsb
fs
lods
pop
pop
add
dec
sub
add
sbb
into
and
and
stc
int3
cltd
dec
test
add
hlt
jg
insb
sbb
jmp
xlat
int3
mov
add
push
outsl
andb
pop
jnp
gs
ret
cmp
sbb
movsb
lds
add
aam
mov
lea
jmp
xor
cs
jo
mov
jmp
cmp
sbb
mov
adc
scas
movsb
jle
cld
cs
xchg
dec
es
pushf
cli
ret
dec
cmp
fstpt
sbb
sti
push
and
in
xchg
in
adc
into
lret
aad
aas
icebp
mov
sbb
shrl
outsb
adc
inc
rolb
cmp
add
cltd
push
sub
sbb
cmc
cwtl
hlt
cmc
fcoml
add
and
cli
mov
mov
adc
or
dec
add
sbb
push
pop
dec
xchg
mov
adc
lods
sbb
mov
std
push
cmp
adc
sbb
out
clc
enter
and
aam
dec
testb
cld
adc
in
jle
mov
icebp
sahf
xor
mov
jp
pop
test
xlat
pop
xlat
arpl
xor
adcl
jg
outsb
ds
inc
mov
pop
pop
pusha
mov
incb
pop
dec
loop
pop
inc
in
es
fldenv
mov
jp
scas
push
mov
les
addr16
imul
mov
hlt
cmp
mov
add
arpl
dec
and
repnz
aaa
inc
adc
arpl
xor
or
cmpsl
sbb
fisttps
xor
into
rolb
jae
xlat
cs
movsb
or
out
fs
mov
add
xchg
jmp
aad
xchg
or
test
inc
movsl
movsb
scas
push
cmpsb
rolb
std
jne
cwtl
inc
and
xchg
loop,pt
dec
sbb
out
adc
lcall
xor
mov
jecxz
sbb
clc
lock
ljmp
cmp
and
adcl
aad
popf
in
xor
lds
cmp
pusha
lret
aam
mov
sbb
xchg
xor
xor
adc
mov
cmp
icebp
or
add
or
sbb
adc
xchg
cmp
or
and
sbb
decl
stos
icebp
adc
push
test
test
fcmovnb
push
les
popa
add
insb
rcrl
jge
mov
xlat
sbb
xor
push
add
arpl
dec
call
sahf
pusha
or
pop
aaa
scas
imul
ljmp
add
sub
xchg
pop
movsl
push
xchg
add
pop
addr16
add
in
push
xchg
ja
pusha
add
xchg
inc
and
or
cmp
decb
jp
out
xorps
repz
mov
sbb
cmp
push
inc
cltd
push
ret
jge
scas
shlb
inc
mov
xor
mov
jo
sub
push
icebp
jbe
imul
xchg
adc
mov
and
inc
popa
fs
fisubs
or
pop
shl
lcall
adc
cmp
aad
mov
subl
add
jne
repz
sbb
stc
nop
xchg
cmp
inc
push
inc
test
in
maxps
push
jmp
in
add
fstpt
dec
pop
push
cmp
out
add
adc
mov
iret
pop
mov
rolb
jl
and
or
dec
scas
or
xor
pop
xor
jnp
cmpsl
cmc
pushf
mov
jge
mov
jb
cmp
inc
ret
popf
inc
add
sub
sub
inc
cltd
jmp
add
mov
aad
inc
gs
pop
pop
add
cmp
add
and
add
dec
sub
std
sub
mov
xchg
sbb
dec
add
mov
out
sbbl
push
dec
sbb
lahf
divb
mov
inc
xor
pop
add
cmp
push
mov
jbe
dec
dec
push
xchg
add
dec
add
add
and
fs
imul
inc
mov
fcmovnbe
aas
or
pop
and
shll
mov
test
ret
add
jb
lret
rcrl
push
and
push
loope
xchg
cmp
xchg
mov
sub
inc
sub
cmp
aam
cwtl
pop
pminsw
inc
lods
jl
push
xchg
mov
add
scas
sbb
add
or
insl
clc
sub
inc
xchg
jp
fst
stos
mov
cmpsl
inc
cmp
jo
or
add
dec
add
mov
test
ss
push
inc
ret
std
mov
cmp
repnz
lret
jl
mov
scas
xchg
hlt
cmp
pop
in
cmpsb
int
or
add
pop
je
lcall
imulb
inc
lahf
aaa
sbb
out
ja
adc
sub
inc
insb
mov
das
pop
imul
les
sub
incl
leave
add
xor
xor
add
mov
hlt
add
addl
inc
cmc
fldcw
xlat
and
daa
enter
cmp
les
leave
and
test
lds
dec
pop
jnp
pop
std
or
fbstp
int3
push
xchg
xor
push
imul
jo
pop
imul
clc
sbb
lds
dec
fidivs
call
popf
push
shl
add
jb
cmp
sarb
enter
and
push
adc
mov
push
outsb
popf
shrd
dec
push
out
xor
sub
sbb
add
jg
bound
add
nop
adc
rorl
mov
movsb
push
das
mov
sarb
fs
clc
inc
mov
dec
gs
int3
in
dec
or
incl
ret
lods
fistpl
arpl
mov
pop
imul
sti
inc
jae
cli
aam
cmp
jmp
loopne
adc
fidivs
fisttps
leave
in
loope
adc
stos
jp
sub
cmp
and
ror
cmp
push
push
lahf
popa
add
sbb
jno
push
ret
add
adc
add
sub
out
es
add
iret
sub
repz
adcb
cmpsb
jo
pop
jns
cmp
popf
adc
xor
jp
cmp
rol
add
mov
mov
xor
int3
adc
cmp
jnp
jb
jl
cmp
xlat
es
mov
cltd
scas
out
mov
or
pop
push
mov
jno
or
inc
ja
xorb
adcl
or
lcall
sbb
cmpsl
xor
scas
fbld
xor
arpl
jb
push
push
xchg
cli
orl
cmp
xchg
pop
aas
mov
out
lret
pop
jo
jmp
jmp
mov
clc
mov
push
and
cs
add
imul
pop
adc
add
ja
aad
rorl
mov
addb
lea
fsubl
push
cmp
add
nop
mov
mov
in
jne
aaa
mov
add
rolb
cmpsl
cs
int3
ret
and
inc
mov
sub
lds
sbb
xchg
fildl
fsubrs
es
repz
pop
adc
add
lds
adc
subl
xchg
sbb
push
inc
dec
scas
add
lahf
sub
mov
push
mov
inc
out
loopne
add
cld
aad
rol
sahf
and
dec
and
xchg
sahf
push
rcrl
bound
adc
inc
add
push
jge
add
adc
mov
add
stos
fbstp
jl
push
sub
js
popa
lock
imul
ret
or
popw
loopne
rol
push
xlat
push
sub
dec
mov
xchg
pop
push
ss
in
out
mov
int
rol
add
popa
sub
pop
lds
mov
icebp
xor
mov
pop
imul
in
test
add
pop
dec
xchg
ficoms
mov
jns
repnz
xchg
sar
je
cmpb
fld
inc
in
sub
mov
push
mov
sub
adc
in
adc
les
inc
imul
aad
test
fwait
xchg
sbbl
jp
adc
xchg
addr16
dec
inc
insl
add
in
lods
add
inc
psadbw
adc
pop
dec
and
fdivr
add
add
inc
fmull
shrl
ret
fmuls
in
popf
xor
mov
mov
push
ljmp
rcl
out
or
hlt
lds
xchg
add
test
push
roll
push
add
ljmp
sbb
mov
xor
jns
inc
clc
cmp
add
push
repnz
rolb
inc
mov
cmp
mov
lret
movb
jmp
hlt
xchg
jnp
adc
push
push
mov
sbb
inc
add
and
and
add
add
cwtl
loop
dec
imul
add
adcl
shll
add
push
js
and
in
or
aas
cltd
sbbl
inc
adc
lahf
push
and
push
mov
std
add
mov
ficomps
ret
add
or
sub
sbb
xlat
sbb
data16
in
pop
cmp
mov
mov
call
add
clc
or
mov
mov
xchg
add
mov
imul
insl
mov
pop
xchg
add
jle
or
jbe
inc
mov
and
inc
sub
dec
xor
and
ja
xchg
adc
daa
lods
inc
aam
add
lcall
test
je
add
clc
cmp
shl
jl
out
mov
out
jb
jmp
mov
dec
lret
test
mov
loop
arpl
xor
aad
or
xchg
mov
fisttpl
dec
jmp
push
add
inc
movsb
mov
cmp
push
xchg
roll
add
cs
outsb
pushf
jno
mov
xor
pop
xchg
xor
lods
inc
stos
pop
hlt
cltd
xor
idivb
lahf
call
shll
repnz
jp
pop
pop
sub
xchg
repz
gs
push
ss
inc
fwait
or
dec
xor
cmpsl
add
call
std
lahf
sbb
inc
sub
pop
mov
jnp
sahf
mov
xorl
test
adc
frstor
loope
jge
and
cmp
clc
aas
inc
decb
shlb
imul
jnp
sbb
mov
lods
mov
cmp
fwait
xchg
in
mov
fs
out
xor
lea
addr16
jecxz
loop
mov
ja
add
ret
sub
sbb
ror
jecxz
subl
add
add
add
push
jl
xor
scas
ja
xor
push
test
sbb
idivl
push
adc
bound
xorl
mov
sar
xchg
or
insb
mov
repz
adc
add
stos
sub
aas
cmc
sarl
xchg
fstpl
sub
test
enter
insl
inc
push
iret
adc
inc
mov
mov
stc
lock
rcr
andb
xacquire
nop
xlat
xor
pop
push
pinsrw
test
cwtl
mov
insb
es
push
push
jo
xchg
ficomps
outsl
xor
pop
pop
jecxz
add
xchg
and
pop
shll
xchg
ljmp
or
and
arpl
xchg
aas
jge
inc
sarb
add
clc
roll
cs
mov
add
shll
or
data16
xchg
dec
loopne
insl
sub
enter
iret
push
and
mov
sbb
sub
int
mov
add
and
leave
sahf
inc
add
mov
pop
add
dec
cmp
push
nop
clc
add
es
daa
push
frstor
sub
sbb
cltd
push
push
lock
add
jno
xchg
add
adc
sbb
rcl
add
add
imul
adc
rol
mov
repz
lret
cmp
lods
xor
mov
and
pop
mov
mov
xchg
jecxz
and
add
inc
pusha
daa
adc
xor
call
add
adc
add
jb
add
sbb
mov
cmp
xlat
jecxz
les
add
popl
or
inc
cmc
pop
xchg
or
and
xchg
shll
test
dec
mov
lahf
cmp
and
sub
call
dec
pop
ljmp
adc
rcrb
aam
adc
add
out
es
rcrb
shll
cmp
xchg
sbb
add
nop
pop
add
mov
insl
add
repnz
xor
xor
jo
xchg
arpl
add
dec
xor
test
xchg
pop
dec
jno
aaa
push
add
aas
xor
mov
clc
xor
pushaw
xchg
add
xchg
test
add
cld
sub
add
sar
adc
mov
jns
stos
sbb
xchg
in
sub
pop
lret
lds
inc
xchg
andl
out
sbb
mov
sub
sub
and
xor
cmpsl
pop
les
ret
ja
or
fimull
sbb
mov
int3
push
stos
and
cld
jo
rcrb
mov
pushf
push
fcmove
testl
jmp
push
jne
cmp
jmp
cmp
bound
imul
mov
movsl
mov
add
in
out
add
jbe
jns
std
adc
jmp
push
es
setno
pop
mov
enter
mov
cmp
loopne
rolb
stos
cli
mov
in
add
lcall
shlb
dec
pop
int3
and
add
push
xchg
pop
jge
xor
daa
push
outsb
sbb
cmc
ficoml
rorl
add
sahf
imul
imul
iret
and
out
inc
sbb
add
pop
push
add
in
jo
bound
fists
je
pop
mov
lret
push
dec
ret
popf
lods
add
xor
repz
or
pusha
mov
loopne
fcompl
mov
imull
mov
add
mov
mov
daa
call
cmpsb
sbb
sub
sub
cmp
neg
dec
test
leave
add
mov
sub
add
clc
ja
cmp
add
jbe
cmp
mov
mov
ljmp
int
adc
movsb
jae
sbb
cmc
daa
xor
push
jne
out
ror
or
jo
cmp
loop
add
adc
add
xchg
hlt
mov
pop
pop
inc
lock
cltd
data16
xchg
mov
mov
xchg
addb
daa
mov
sub
mov
pop
loopne
hlt
xor
cmpl
cmp
xor
test
mov
mov
into
sub
std
scas
dec
add
inc
or
inc
jmp
or
call
addb
xor
and
sub
cmp
adc
or
mov
loop
inc
lret
add
leave
test
add
push
xchg
cmp
mov
pop
mov
mov
sbb
std
sub
fildl
mov
in
add
nop
add
cli
test
ja
sub
cmpl
add
cli
mov
mov
push
iret
in
lods
iret
mov
mov
inc
sbb
ltr
stos
daa
in
ja
test
subl
push
fwait
and
idivb
xor
sbb
stc
cmp
jo
add
xchg
cwtl
repnz
cmp
add
sub
ret
ret
aas
and
stc
jne
ret
and
adc
in
jge
psrlq
repz
enter
xchg
nop
and
fs
pushf
add
sbb
mov
add
inc
xor
pushl
pusha
nop
add
lods
push
jge
imul
sbb
add
xor
dec
jnp
loopne
add
gs
push
lcall
add
push
mov
adc
xchg
loop
add
jmp
xor
in
cli
push
out
add
nop
push
mov
in
popa
add
fldenv
or
inc
inc
cmpb
loop
add
push
loope
popa
cmp
jns
gs
scas
xchg
add
xchg
shll
adc
xchg
fistpll
test
aad
push
sbb
inc
fs
mov
leave
push
mov
sub
xor
cltd
and
jge
rcr
lret
push
xchg
add
add
and
out
pop
fwait
pop
pushf
inc
dec
mov
or
and
test
xor
in
stc
popf
mull
fs
add
icebp
repnz
shll
push
cmp
add
gs
icebp
es
push
mov
ja
dec
jge
pop
inc
xor
cltd
insl
les
outsb
cltd
cmp
or
add
mov
mov
inc
ja
jo
imul
push
insl
jo
stos
mov
imul
or
cmp
add
pop
cmc
mov
lock
mov
xor
dec
movsb
out
add
loopne
xor
lret
fcomp
push
jl
ror
sarl
in
jno
shlb
or
xor
sbb
ficoml
loopne
popf
insb
xor
iret
pop
inc
js
fstps
scas
dec
push
or
inc
cmp
decb
outsl
add
mov
add
mov
mov
ret
es
jbe
mov
mov
mov
jb
lahf
cli
and
xlat
or
jns
add
fstps
cmpsb
sbb
rcl
cwtl
sub
sub
or
pop
xor
je
lock
xchg
xor
aas
out
repz
mov
dec
xchg
testl
ljmp
jae
addr16
mov
hlt
cmp
pop
add
xchg
outsb
pop
pop
adc
mov
insb
pop
mov
push
movsb
fidivrs
fwait
je,pn
xchg
xor
pop
add
mov
inc
popa
add
inc
sub
add
fwait
test
data16
enter
adc
fildl
andl
xor
in
inc
mov
pop
cld
xchg
aad
add
xchg
adc
ret
pop
inc
dec
xchg
mov
out
shrb
cs
fcompl
inc
mov
lods
pop
sbb
cs
dec
pushl
jbe
pusha
roll
out
lock
mov
mov
inc
clc
xlat
inc
loop
leave
test
add
sti
dec
xchg
rcrb
sbb
add
or
xchg
xor
pop
ret
cli
fmuls
insb
lcall
mov
imul
add
mov
test
add
pusha
sti
stos
dec
xchg
fildll
movsl
add
test
data16
cmc
jg
shrl
loope
sbb
and
inc
stos
cwtl
lods
stc
mov
test
test
movb
jl
inc
daa
insl
and
mov
cmp
imul
in
fstpl
inc
sbb
add
or
xchg
or
sbbl
inc
popa
mov
sub
orb
loopne
in
mov
mov
inc
js
add
jle
jbe
ljmp
push
iret
add
sti
jnp
lods
aaa
rorl
add
enter
test
decl
cmp
xchg
mov
lcall
sub
cmp
mov
mov
xchg
sbbb
insl
or
inc
repz
xlat
inc
pop
leave
xlat
xchg
push
ret
aam
jle
movsl
decb
in
sub
xchg
in
dec
xchg
insb
and
or
pop
jb
cmp
mov
shlb
out
xlat
jbe
push
adc
int
dec
mov
fmull
out
xchg
pop
pushf
xor
lret
scas
sahf
lock
mov
jle
mov
mov
mov
and
inc
aam
sub
or
lret
aaa
in
mov
addr16
add
lock
xor
and
and
std
mov
push
cs
add
add
sbb
ss
out
or
add
adc
pop
inc
pop
mov
pop
add
bound
pop
dec
push
xchg
dec
dec
jl
loop
push
aas
or
pop
pop
ret
and
adc
jbe
mov
inc
xchg
sbb
shlb
mov
inc
inc
sbb
pop
mov
sbb
jecxz
jmp
mov
add
pop
pushf
push
iret
imul
pop
mov
rcl
repz
add
pop
jno
ficoms
sbb
dec
movsl
add
cmpsb
lcallw
mov
adc
jl
stos
addl
pushf
arpl
iret
jae
jmp
add
sub
mov
mov
popf
int
sbb
pop
fcomps
sbb
stos
rcl
push
sub
add
xchg
lds
push
outsl
fistpl
lods
mov
ret
add
inc
dec
mov
pusha
xor
sub
pop
mov
lret
adc
push
mov
dec
or
mov
cld
arpl
mov
in
sub
add
addr16
icebp
subb
test
lock
sub
mov
mov
fwait
jle
adc
in
ret
pusha
add
ret
jp
aam
sbb
addb
hlt
inc
movsl
fs
pop
push
inc
sti
xor
mov
adc
movsl
out
adc
cmp
cmp
push
sar
push
add
loop
decb
adcb
stos
sub
push
push
cmp
das
pop
femms
add
cmp
pop
mov
add
jmp
adc
leave
cmp
pop
movsb
test
add
data16
sbb
sarl
shl
sbb
sub
notl
or
popf
cmp
divb
test
add
ret
loop
push
out
leave
adc
mov
movsb
and
push
add
xchg
xchg
jge
jle
insl
add
push
rcrb
hlt
xchg
or
mov
xor
mov
push
push
xchg
push
xor
imul
add
ds
push
and
aaa
jge
xlat
lret
int
dec
jo
ret
and
mov
sub
stos
add
pop
mov
push
mov
add
add
test
repnz
add
pop
mov
inc
test
popl
add
arpl
and
int
xor
add
mov
pop
and
jo
add
gs
popl
pop
inc
addr16
cmp
pop
pop
xor
lock
and
sub
push
push
jl
jnp
imul
in
inc
pop
add
or
fidivrl
fwait
add
jnp
sbb
stos
fnsave
mov
clc
mov
mov
jnp
mov
lcall
lret
clc
inc
cmpsl
push
sub
jge
in
loopne
add
lods
push
xchg
inc
jne
fildl
mov
add
fs
xor
sbb
ljmp
push
cmp
filds
xor
and
push
mov
jb
adc
push
add
loop
or
mov
orb
cmpsb
sbb
cmp
lahf
addl
jle
addb
dec
xchg
imul
roll
dec
cltd
in
adc
and
in
out
push
xchg
push
iret
movsb
cmp
and
push
and
int
cmp
outsl
insb
dec
jecxz
push
leave
add
fmull
int
and
xchg
or
in
xor
cmovge
les
inc
mov
and
jp
fwait
and
push
sbb
and
ret
or
cmp
push
dec
xor
xor
into
add
push
jbe
addr16
add
leavew
jmp
add
inc
aad
mov
xchg
fisubrl
sbb
stos
inc
pop
xor
add
push
dec
pop
inc
push
push
cmpb
or
xor
lahf
sbb
notb
add
sub
inc
add
ds
add
and
jne
mov
cmpl
loop
sbb
jle
push
ficomps
sete
or
adc
mov
loope
jecxz,pn
push
sbb
push
mov
adc
xor
add
xor
push
xchg
nop
ret
mov
mov
aas
roll
push
mov
jne
jnp
fwait
bound
lods
movsb
cli
setns
xchg
dec
rclb
shrb
int3
or
loopne
mov
orl
test
and
mov
pop
loop
or
cmpsl
cmc
jno
xchg
test
adc
mov
rcr
imul
lock
test
fstl
sbb
mov
roll
dec
pushf
call
mov
lods
cld
insl
add
push
mov
sub
roll
jb
sti
add
in
out
add
fsubs
rorb
or
call
xchg
jnp
push
sbb
daa
stc
or
clc
sbb
sarl
pop
hlt
aam
add
addr16
sbb
mov
push
cmp
inc
popf
shrb
mov
add
mov
pop
test
xchg
cmp
xchg
xor
arpl
lds
xchg
pop
add
jo
cmpsl
inc
jnp
and
sti
inc
add
inc
jle
addr16
ds
cli
mov
aam
cmp
add
lret
lret
inc
add
xchg
cwtl
mov
cld
inc
sbb
pop
filds
push
adc
cmp
jmp
sub
inc
cmpsl
mov
popl
inc
and
dec
into
add
scas
jo
orl
stos
in
int3
fbstp
shl
mov
jo
and
popa
out
data16
cs
shll
jbe
xchg
or
jecxz
inc
pop
xor
dec
inc
push
mov
xchg
dec
cltd
cmp
std
inc
or
mov
sbb
xor
xor
lea
aaa
add
cwtl
mov
popf
push
mov
incl
add
inc
and
gs
cmp
jle
mov
mov
cwtl
sahf
sbb
addb
xchg
mov
sub
ss
std
insb
bound
pop
xor
push
btcl
lods
subb
cli
or
fcmovne
add
bound
iret
cmpsl
out
xlat
mov
aam
daa
cli
dec
andb
adc
jmp
add
sub
pop
inc
adc
pop
push
btc
movl
push
mov
push
das
movb
and
sub
jno
cmp
stos
sbb
bnd
pop
jl
mov
push
cmc
dec
inc
scas
adc
mov
jp
mov
xchg
xchg
cmp
add
shr
sub
xor
pop
ja
xor
rorl
or
sbb
adc
imul
scas
push
ds
stos
fcompp
mov
les
rorl
add
pop
adcb
mov
adcb
add
sub
dec
add
xchg
sub
in
push
nop
bound
add
add
push
mov
jbe
popf
jne
dec
xor
icebp
sub
repnz
and
add
xchg
xchg
fs
rol
test
je
mov
ss
fcmovnb
pop
mov
xchg
insb
cltd
mov
lods
jb
dec
je
adc
fldenv
mov
inc
xor
cmp
lods
jge
in
pushf
add
cld
adc
xchg
and
dec
mov
push
xchg
lcall
gs
daa
add
mov
mov
jbe
or
add
movsb
ds
jg
jecxz
in
pop
dec
and
sbb
fistpl
mov
and
mov
enter
lds
and
pop
pop
imulb
xor
sbb
test
sbb
pop
mov
out
add
cld
mov
mov
inc
cs
adc
sbb
scas
cmpsb
add
jb
adc
fnstenv
push
add
orps
xor
or
in
loop
ja
adc
les
add
sbb
cmp
movsl
mov
xchg
leave
add
dec
out
xchg
aam
fmul
xor
icebp
pop
ss
imul
shll
adc
lret
cmp
sub
pop
and
movsb
adc
fldt
mov
add
pop
add
jo
ja
push
add
dec
call
cmpsb
cmp
add
mov
fsts
mov
test
inc
shll
aad
jae
mov
push
icebp
mov
jns
pop
divl
cmp
add
in
rcll
jmp
add
and
jnp
popf
inc
cmpb
jge
sbb
std
mov
call
pop
out
daa
lock
adc
idivb
arpl
sahf
mov
add
jp
or
aas
ret
inc
cmp
jle
mov
pop
or
popl
loop
xchg
push
adc
mov
jb
xor
imul
dec
negl
mulb
mov
in
sarl
out
ja
mov
mov
sahf
cmpsl
loope
arpl
movsb
sub
scas
cld
fs
mov
and
loop
pop
jne
ret
arpl
push
punpckldq
shl
lret
dec
mov
xchg
and
das
lret
rcrl
xlat
push
data16
xchg
sbb
mov
jno
fldcw
mov
jae
dec
inc
dec
mov
add
xchg
in
daa
ret
call
xor
push
leave
cmp
scas
cmp
mov
test
mov
cmpsl
mov
mov
sbb
cwtl
addr16
fistpl
xor
or
adc
arpl
and
sbb
icebp
rol
mov
cmp
sahf
or
cmp
pusha
and
inc
in
fldl
or
fnstcw
jno
cltd
data16
sbb
mov
cmp
lahf
bound
dec
xor
or
sbbl
adc
iret
jmp
insb
add
and
mov
mov
pushw
aaa
ret
test
or
pop
jl
dec
xor
stc
add
push
aas
cs
int
add
xchg
inc
in
lock
cs
scas
add
int
call
shl
js
and
imul
fistpll
stc
ror
pusha
or
fadds
and
lods
sbb
or
jne
fidivrs
ret
aam
mov
inc
sub
rclb
and
mov
fadds
jb
and
push
or
adc
aas
andb
mov
mov
jecxz
cmp
add
or
and
daa
dec
cmp
add
push
out
sahf
testl
mov
jmp
sbb
add
mov
mov
loop
or
into
cli
shrb
push
xchg
cmp
cltd
mov
loop
mov
add
mov
in
jno
adc
lock
jl
into
mov
cmpsl
fucomip
push
lds
or
ret
lcall
pop
in
or
mov
movsb
jnp
add
or
add
mov
fmull
mov
ret
dec
fidivs
bound
lahf
aad
arpl
imul
add
orb
adc
dec
push
imul
mov
pop
clc
xor
fbld
ja
dec
ss
shrl
dec
push
str
cmp
add
cmc
outsl
daa
shl
cli
add
test
lds
stos
bound
orl
add
dec
aad
mov
push
subb
jge
insb
movsb
xchg
aad
int3
aam
pop
mov
repz
or
mov
in
adc
fldcw
jmp
mov
add
pop
lret
icebp
fdivs
add
out
shrb
lods
adc
fiaddl
dec
mov
sahf
mov
add
adc
add
mov
sbb
pop
or
push
add
push
jg
dec
mov
mov
int3
add
sub
add
jb
push
out
push
add
mov
inc
lods
add
mov
sbb
adc
shll
xchg
iret
rcrb
adc
lods
add
inc
jae
xor
fiadds
and
pop
xchg
inc
adc
and
flds
adc
push
cmp
push
cltd
cmpsl
xchg
inc
add
inc
jmp
stos
add
mov
lea
daa
pop
je
pusha
sub
icebp
add
push
push
mov
out
adc
mov
and
dec
ja
outsb
add
sbb
std
les
and
insb
int3
add
xchg
fwait
dec
mov
mov
adc
bnd
imul
cmpsl
mov
repz
dec
ltr
mov
sbb
add
std
dec
mov
popl
lea
xor
outsb
ss
cmp
jo
inc
dec
and
push
sub
into
pop
ret
fadd
rcr
mov
aad
cmp
daa
dec
push
mov
imul
adc
sub
xorb
adc
mov
mov
aam
divb
hlt
out
cmp
add
xor
jno
daa
nop
push
jnp
pop
dec
popf
sbb
movsb
into
call
repnz
ja
in
add
mov
sub
pop
scas
in
loopne
jnp
sbb
cwtl
xchg
mov
xor
lret
mov
out
inc
xchg
or
cmp
pop
test
test
ds
imul
and
test
mov
mov
jbe
inc
sbb
nop
fisubrl
mov
out
dec
and
pop
cmpsb
sbb
add
adc
sub
sbb
outsb
jno
sahf
lahf
and
mov
mov
xor
and
aas
pop
aad
xchg
ja
wrmsr
sti
sub
inc
adc
mov
xchg
stos
sbb
fistpll
xor
rorb
data16
or
cmp
repz
pop
and
adcb
or
dec
add
xor
and
cmp
test
mov
cmpsb
cmp
lods
push
xchg
adcl
adc
das
iret
xchg
std
stos
inc
sbb
lods
or
inc
ret
add
popf
bound
imul
enter
add
pop
mov
aas
hlt
add
push
add
popa
loop
ret
stc
push
pop
loop,pn
and
test
pop
inc
dec
test
pop
push
add
arpl
sbb
add
outsl
sti
mov
shll
dec
bound
cs
repnz
cmpsl
xchg
xor
js
add
inc
out
insb
or
sub
cli
decl
add
mov
adc
push
xor
mov
sarb
mov
jne
xorb
rolb
fwait
imul
push
fstl
scas
pop
jecxz
add
or
fiadds
add
out
loope
jb
add
mov
sub
xor
mov
movsl
mov
les
ret
mov
ljmp
adc
pop
push
pushf
in
adc
mov
bound
ds
stos
aaa
mov
sbb
insb
xor
ds
cmp
sub
jmp
int3
add
dec
test
mov
xchg
lcall
jb
ja
and
xchg
jne
pop
or
jbe
testl
add
sti
out
jl
lahf
mov
shl
dec
incl
pop
add
and
cmp
ret
sahf
mov
and
scas
imul
sbb
push
sbb
adc
cmp
xchg
hlt
call
add
fs
cmp
and
pop
xor
imul
push
inc
pop
outsb
push
negl
add
fcmovbe
ret
test
repnz
mov
push
in
add
sbb
xor
xor
xchg
sub
rorl
cmp
fwait
add
sub
push
nop
insb
and
jle
and
or
add
mov
popl
sub
push
add
sti
mov
outsb
testb
mov
es
xor
aaa
cli
lret
sub
xor
sbb
cmpsl
mov
add
mov
lea
std
sub
arpl
mov
fs
adc
stos
add
push
cmp
mov
arpl
incl
xchg
add
jmp
les
aas
add
jmp
into
add
inc
imul
adc
add
das
cmp
popa
sbb
inc
dec
jnp
outsl
add
pop
add
inc
lcall
lock
pusha
roll
das
in
scas
xor
cmpsl
adc
jne
fcmove
add
jl
xor
cmp
or
pop
push
and
inc
sub
jmp
data16
lock
mov
iret
and
sbb
sub
nop
mov
testl
pop
xchg
push
sbb
repnz
std
add
and
fildl
cmp
shrl
jg
enter
aad
inc
and
xchg
std
mov
nop
add
jge
pushf
or
push
fs
mov
out
mov
sub
dec
xchg
xchg
xor
sub
jmp
sbb
mov
cmp
jae
add
rolb
lahf
add
mov
icebp
mov
mov
call
stc
add
mov
aad
sub
test
adc
fadds
test
jae
je
sub
mov
pushf
idivl
movsl
add
lret
inc
dec
lahf
rcr
jnp
aas
pop
xor
xchg
mov
jmp
push
cmp
stos
daa
sahf
adc
dec
jo
inc
fldcw
push
xor
adc
pop
jno
ror
cld
ja
fnstenv
aad
fs
scas
push
push
int3
test
xchg
andb
cmp
movups
mov
loopne
fcmovnbe
sub
fwait
les
in
xorl
lahf
adc
inc
and
adc
inc
aad
xor
scas
inc
pop
cmpsb
pop
xlat
and
cmp
dec
movsb
test
jno
dec
cltd
testl
aas
add
mov
lds
add
mov
out
add
jg
sarl
lods
push
sub
mov
aaa
rol
lods
mov
xchg
dec
mov
sub
add
lds
pop
xlat
sti
bound
jo
cmpsb
aam
inc
sbb
je
shll
adc
cmpps
mov
cmp
inc
repz
adc
pop
loope
xor
mov
mov
enter
popa
add
cmpsb
push
jb
popf
adc
adc
je
outsb
das
dec
cmp
sbb
sub
mov
jecxz
movsb
sub
pop
in
xor
sbb
inc
jle
inc
and
mov
pop
lea
daa
and
addr16
dec
add
mov
xor
insl
cli
testl
rorl
add
or
add
sbb
orb
aas
dec
dec
xor
stos
loop
mov
sub
pop
jmp
add
repz
fcomps
add
lods
addr16
test
scas
sub
push
add
or
inc
inc
aas
stc
add
jne
add
hlt
scas
push
dec
iret
push
mov
add
or
icebp
repz
push
sub
cli
mov
add
push
inc
pushf
dec
add
pop
stos
fwait
loop
in
mov
push
mov
daa
sub
inc
lods
and
add
scas
inc
dec
inc
sub
pop
aaa
sbb
cmp
movsl
add
xor
mov
mov
jb
xor
jno
subb
lods
jo
sbb
inc
and
xor
mov
add
in
sbb
sub
jmp
les
icebp
fcmove
mov
lods
mov
add
jae
sbb
cwtl
dec
jp
mov
push
inc
add
shll
lods
aas
rolb
or
dec
sbb
dec
into
imul
cwtl
bound
fistpll
std
add
leave
aaa
xlat
mov
outsl
jnp
mov
mov
add
pop
iret
sub
jecxz
inc
add
adc
xor
jle
ja
add
xchg
imul
movsb
stc
gs
fs
rorb
and
mov
jp
xchg
adc
cmpsb
and
ljmp
add
dec
mov
or
lock
push
ss
sub
lcall
arpl
icebp
stc
or
xchg
int
mov
mov
test
mov
adc
xor
bound
icebp
sub
filds
cld
xchg
inc
xchg
pop
or
jg
sbb
lret
push
sti
mull
subb
xor
mov
rcll
add
nop
sub
or
pusha
scas
movsl
fcomps
xor
out
cmp
in
pushf
dec
pop
cs
icebp
inc
adc
and
lahf
mov
fistpll
add
push
stos
cwtl
shll
call
mov
sbb
or
xchg
and
add
lock
sub
mov
add
jbe
imul
and
push
faddl
add
mov
xchg
jnp
ja
adc
dec
pop
ret
add
jecxz
ljmp
inc
adc
fistpll
cmp
mov
mov
aas
push
sub
xchg
loopne
xor
push
add
adc
and
dec
inc
dec
daa
xchg
popa
cltd
adc
adc
mov
mov
or
int3
icebp
jl
std
js
fidivrs
sbb
jle
pusha
roll
xor
adc
mov
adc
ja
and
push
stc
push
add
inc
jnp
add
dec
xor
mov
dec
add
cltd
imul
pavgw
pushf
push
jle
xlat
jmp
loope
into
mov
dec
cmpb
lods
add
dec
ja
jmp
popf
mov
sbb
lock
xchg
adcl
jecxz
movsb
jns
enter
jl
popl
sbb
push
add
imul
cld
or
inc
or
orb
jle
add
sbb
sbb
inc
ds
lea
or
les
sub
mov
mov
rorb
or
daa
leave
and
fs
and
pop
mov
imul
popa
fimuls
sbb
xchg
leave
in
push
fsubrp
shl
and
sbb
fstpt
cmp
std
push
pop
add
les
jmp
jl
inc
or
ret
cmpsl
icebp
mov
daa
out
xchg
jno
inc
out
pushf
lock
cmpb
pusha
int3
mov
jp
out
and
enter
cs
push
les
or
or
or
add
loop,pn
dec
sub
inc
mov
sub
mov
push
inc
add
bound
mov
jg
out
rol
inc
adc
out
filds
daa
lret
sub
call
adc
addr16
and
shl
push
ret
subb
jp
xchg
addr16
rorl
push
imul
mov
add
repz
loop
cmp
dec
and
pushf
clc
hlt
pop
mov
inc
adc
xchg
sbb
aas
stos
aaa
out
jbe
jo
cmp
jns
sub
shlb
mov
cmp
sub
pushf
cli
cld
test
fnstsw
test
popa
sbb
jle
cmp
dec
inc
mov
loop
lds
mov
push
outsl
lea
push
std
jg
loopne
jmp
or
js
sbb
sbb
sbb
arpl
scas
clc
jp
push
pusha
xchg
out
or
jp
adc
mov
das
fldl
sbb
jecxz
pop
jp
rolb
jg
into
cmp
das
ja
daa
sbb
adcb
mov
dec
xchg
add
movsb
mov
mov
scas
sub
sub
bound
loop
lret
dec
lock
mov
push
ds
cmp
dec
jb
xor
cld
push
push
sbb
xor
mov
sub
lahf
sub
sarl
scas
pop
ds
add
out
adc
rclb
and
les
jns
cli
fs
jno
mov
pusha
or
push
imul
dec
cmp
call
inc
xlat
cld
cmp
add
bnd
aas
fs
inc
inc
hlt
jne
mov
je
add
daa
js
jbe
or
mov
insb
adc
sarb
inc
sub
inc
scas
and
sbb
push
add
mov
xchg
push
iret
xchg
add
addb
and
stos
scas
add
dec
mov
add
jecxz
sub
add
popf
dec
out
add
jmp
pop
add
mov
repz
andl
xchg
add
fists
je
pop
push
iret
add
loope
sub
outsb
loopne
add
lea
mov
adc
xchg
incl
aam
jecxz
push
cwtl
xchg
pushf
xchg
int
pop
lds
insb
faddl
lods
dec
mov
sbb
sbb
sbb
pop
xor
cmp
ret
mov
xchg
add
test
iret
and
xor
rcll
inc
add
pop
ret
ss
dec
gs
sti
sub
arpl
das
shrl
cmp
fmull
rcrb
add
cmp
aad
insw
inc
mov
scas
sbb
lods
mov
or
xchg
add
mull
or
iret
test
inc
cmp
insb
outsl
out
fcmovnb
push
inc
clc
cmpsl
les
add
fbstp
mov
pop
in
and
lcall
outsb
cmp
sub
aaa
enter
dec
fcmovnb
sub
add
fnstsw
cli
aad
jno
pop
dec
iret
pop
or
or
xchg
cmp
sbb
adc
add
lods
mov
rol
jae
fs
imul
int
jns
pushl
pop
mov
clc
xor
pop
pusha
fs
bt
add
jg
add
inc
add
shrl
push
add
xchg
fmull
ss
jmp
mov
test
pop
pop
jp
add
loopne
add
mov
and
pop
jg
add
xchg
push
add
imul
add
sub
or
inc
add
rcr
xchg
mov
imul
dec
push
pop
jns
mov
and
mov
mov
icebp
inc
mov
cmp
shr
js
inc
pushf
jne
xor
add
rcll
inc
test
scas
lds
push
fs
enter
jle
xchg
push
into
mov
add
inc
stos
add
lods
pusha
mov
clflush
cwtl
divb
push
fldcw
mov
lds
call
in
xorl
adc
xchg
push
sub
sub
mov
scas
add
loopne
pop
sub
les
negl
test
and
sub
iret
shll
ret
flds
loop
cmpsb
sbb
out
test
imul
dec
jp
mov
cmp
or
test
mov
clc
repz
add
and
fcmovb
mov
or
mov
and
xchg
add
inc
out
sub
add
sbb
negb
xlat
add
add
fxtract
popf
cmpsb
add
ja
int3
cltd
and
pop
addb
adc
add
in
adc
jne
outsb
add
xchg
fwait
dec
jno
inc
addl
mov
mov
lcall
adc
add
dec
jp
sbb
test
aam
add
dec
push
pop
cmp
cwtl
test
mov
adc
fldl
and
int
adc
jle
movl
neg
push
push
push
pop
and
faddl
rorl
dec
hlt
jp
mov
cmp
push
jl
dec
inc
xchg
cmp
sahf
scas
imull
sbb
jae
sbbl
clc
je
cmc
movsb
popf
jo
lods
shlb
mov
mov
and
xchg
xor
inc
movsl
lds
and
fiadds
jp
dec
int3
outsb
add
xor
out
stos
xchg
test
push
aaa
adc
out
cmc
dec
mov
push
mov
add
push
push
outsb
xchg
inc
pop
inc
test
cmp
cli
add
insl
mov
add
sarl
fcomip
add
shl
insl
inc
testb
sub
hlt
xlat
lcall
shrl
mov
mov
add
fnstenv
add
out
lret
ljmp
and
fxch
push
add
adc
mov
dec
dec
mov
lods
ret
sahf
loope
in
add
sarl
jmp
lock
inc
mov
add
loope
sbb
js
cmp
mov
lea
add
sti
xchg
outsl
add
test
sbb
js
test
jae
sahf
add
mov
mov
xchg
sti
jl
cmp
clc
loopne
cs
ds
shr
inc
push
scas
xchg
cmp
adc
mov
xchg
iret
mov
push
push
cmp
in
fistps
add
lcall
test
ja
in
insl
mov
lods
pop
dec
and
lret
add
lods
ljmp
loop
fidivrs
mov
fsubl
iret
jae
fiaddl
pop
push
xchg
jp
lret
inc
out
test
pop
roll
sbb
push
mov
mov
xchg
jecxz
data16
xor
loopne
cmp
adc
adcl
or
and
xorb
sbb
pop
lds
or
gs
idivb
jne
sti
sarl
pop
fcmovu
xor
not
add
arpl
pushf
ret
fadd
into
mov
push
xor
cmp
cmp
lods
xchg
cmp
sub
call
cmp
fisttps
sub
xchg
call
and
sarb
add
repz
sub
arpl
cltd
add
xchg
test
mov
cmp
addr16
sti
andl
test
adc
fcmovbe
add
add
pop
adc
outsb
cwtl
cmp
sub
lock
sub
imul
loope
daa
adc
movsl
jp
ljmp
adc
mov
in
dec
xchg
and
mov
sub
mov
mov
cmp
add
jecxz
sbb
sarl
fdivl
adc
cmc
fiaddl
popa
in
sbb
aas
jno
fs
fldcw
pop
testl
xchg
cmp
mov
xlat
jno
adc
mov
mov
ret
add
mov
sub
mov
testb
outsl
insl
push
and
ret
mov
sbb
xor
lds
sub
jecxz
inc
and
pop
mov
add
dec
test
lcall
push
mov
movsl
fs
daa
ss
add
inc
jo
mov
pop
mov
stos
lods
push
add
aas
add
and
push
jbe
push
push
test
and
pushf
cwtl
push
ret
lcall
loopne
imul
add
push
mov
ret
shl
sub
cmp
add
inc
xchg
lahf
dec
das
xor
and
scas
loope
cli
cmp
mov
add
pop
dec
and
pop
mov
je
fisubl
repnz
and
int3
xor
in
pop
les
imul
mov
or
sub
sbb
add
push
lret
inc
lods
adc
inc
cli
adc
jge
mov
cmp
pop
rorl
add
dec
mov
out
xchg
adc
mov
ret
jmp
in
jmp
ds
jnp
test
lods
fs
adc
or
sbb
jnp
ds
jnp
pusha
adc
rorl
mov
jge
loop
clc
es
or
push
xchg
rolb
sbb
xor
sarb
mov
cmp
mov
fstpt
add
cltd
stc
push
jp
mov
lcall
insb
jmp
in
push
ds
fildl
push
inc
roll
sub
cmp
pushf
ret
mov
lods
adc
xchg
cltd
and
push
aad
rcr
ds
mov
cmp
inc
data16
out
leave
adc
in
loope
add
popa
hlt
cmp
push
sbb
les
int
or
add
mul
movsb
push
dec
sbb
xchg
push
inc
or
pop
pop
sub
cmp
adc
or
lods
jle
xor
js
push
out
xor
cmp
xor
mov
xor
aas
mov
xchg
adc
inc
dec
enter
add
rcr
les
add
add
push
daa
mov
cmp
push
data16
push
jo
icebp
mov
jl
outsl
cmp
pop
jge
sti
and
jno
in
out
pop
inc
fucom
in
fidivl
xor
addl
add
lock
mov
mov
or
sahf
icebp
pop
jns
sub
cmp
add
rclb
jae
mov
jg
popf
sbb
in
push
push
pop
pop
add
stos
imul
sub
xor
daa
imulb
lret
std
lods
lea
dec
inc
cli
jmp
mov
add
mov
icebp
divl
mov
mov
jmp
xchg
xchg
add
cmp
iret
insl
repz
sbb
loopne
aaa
nop
add
jne
mov
mov
inc
test
aaa
pushf
push
hlt
out
fs
ret
ret
jl
sbb
add
arpl
fldl
cmpl
out
xchg
pop
mov
xor
mov
mov
std
push
ds
add
es
in
jle
fadds
ja
flds
push
xchg
mov
mov
ss
cmp
push
xchg
test
cmp
mov
mov
adc
sti
fwait
test
in
faddl
add
dec
leave
mov
adc
int
add
push
cmp
adc
pop
add
adc
dec
and
jo
mov
mov
cld
sbb
xor
mov
sub
cmp
push
jmp
fwait
add
jne
fisubrs
push
inc
add
dec
push
sbb
mov
dec
pushf
push
add
sbb
sarb
lods
inc
ret
data16
mov
sbb
scas
popa
in
pop
add
stc
out
aas
roll
mov
mov
dec
data16
add
nop
mov
pop
fildl
test
cmp
sbb
mov
mov
lods
sub
popl
add
scas
daa
sti
dec
jge
rcll
sub
es
xchg
aad
pop
and
mov
jb
adc
idiv
test
es
pop
mov
mov
dec
repnz
push
in
xlat
mov
xor
cwtl
cmp
mov
insl
outsl
sbb
stos
loope
xor
dec
jmp
mov
adc
adc
nop
push
loope
stc
xor
mov
out
push
outsb
shll
outsl
ljmp
ret
out
add
fistps
lods
add
sar
shlb
cmpsb
cmp
ret
xchg
enter
sbb
rorb
cmp
inc
call
fists
sub
sbb
shll
arpl
jns
aaa
cmp
cltd
add
cmpsb
mov
add
fdivrs
imul
addr16
lahf
cltd
jbe
mov
insb
sbbb
add
cld
jno
cs
repnz
sbb
dec
test
mov
inc
adc
add
movsl
cli
stos
add
lret
mov
lock
cmp
daa
out
dec
cmpsl
shr
sarl
lods
push
sub
add
sub
imul
bound
inc
inc
push
add
leave
lock
add
jnp
outsl
push
scas
jns
add
aam
int3
sbb
pop
and
fcmovb
pop
cmpl
shlb
shlb
xchg
inc
push
cmc
jg
into
or
pop
cmp
xlat
lds
mov
gs
add
sub
and
adc
inc
xchg
shrb
push
jmp
mov
cmp
mov
repz
jne
dec
fcompl
or
or
stc
cld
cmpsb
xchg
xor
in
add
mov
outsb
fldl
add
mov
pop
xchg
push
jle
ljmp
mov
xorb
or
add
lock
sbb
xor
xchg
popa
mov
cmp
and
inc
mov
mov
sbb
test
cs
or
xor
xor
dec
jge
pusha
loopne
sbb
add
iret
dec
mov
add
push
je
inc
sbb
push
sbb
ficoml
jg
loop
xor
mov
sub
gs
add
orb
lods
ret
test
mov
pop
pop
sub
xchg
aas
mov
or
cmc
dec
loop
ja
and
lcall
add
push
and
mov
mov
je
hlt
leave
xor
push
shlb
mov
daa
rcr
in
sub
outsl
cmp
dec
add
fwait
mov
cli
enter
add
or
xor
sbb
movb
add
adc
mov
stos
fs
mov
add
dec
xor
xchg
ds
mov
jae
add
lds
stos
mov
mov
inc
push
mov
cmp
scas
xchg
push
xorl
add
lock
lahf
fstps
and
pop
loopne
add
dec
inc
sub
push
sub
aas
lock
fiaddl
jp
enter
sbb
inc
fidivrs
xlat
jge
int3
add
or
orl
test
cmp
cmc
or
in
addb
imul
push
cmp
adc
add
xor
and
fcompl
add
sbb
mov
xchg
cmp
ret
pop
push
dec
cmp
mov
icebp
hlt
mul
sub
add
dec
int
loope
add
mov
jecxz
ret
imul
lods
addb
cmp
std
nop
or
add
mov
mov
imull
add
iret
pop
push
and
adc
mov
shrl
mov
adc
mov
sti
add
js
adc
and
xor
push
mov
push
cmp
cmpsb
dec
leave
sbb
add
mov
enter
and
sbb
arpl
lcall
pop
fstpl
dec
mov
push
jns
mov
rol
imul
out
add
cli
sbb
add
rcrb
sub
lock
pusha
dec
add
in
push
add
add
mov
adc
mov
es
adc
add
daa
xorb
mov
pop
out
out
mov
jbe
mov
push
rcr
or
cmp
sub
add
cli
mov
jo
cmc
fsub
decl
jno
repz
add
sub
add
int
xor
aaa
jmp
sub
add
xchg
sbb
sub
movb
sarb
inc
mov
ljmp
add
xchg
push
push
sbb
pusha
gs
rcrl
jecxz
xchg
cmp
ficompl
ljmp
mov
xchg
gs
rolb
mov
jl
sub
inc
or
mov
dec
xor
mov
repz
inc
mov
lds
dec
daa
adc
xor
rcll
lods
adc
cmpsb
mov
pop
xchg
jg
and
adc
add
and
add
jo
int
cmpsl
xchg
shll
add
cmpsb
lods
mov
ss
add
shll
mov
int
adc
lock
loope
xor
inc
dec
push
push
outsb
int
ja
xor
out
loop
mov
sub
icebp
mov
xchg
es
inc
das
dec
xor
fiadds
ret
jp
jae
and
lock
stc
push
test
rclb
jg
cmpsl
rclb
fdivrl
movsl
lods
cmp
dec
push
jo
add
mov
sbb
fcmovnbe
sbb
cmp
js
fnsave
outsb
xor
test
es
dec
inc
add
fs
cmp
pop
adcb
je
add
filds
lods
dec
xor
inc
add
or
repnz
outsl
add
sahf
xor
mov
scas
fwait
ja
cmpsl
push
faddp
add
and
imul
std
icebp
sbb
sti
adc
inc
adcl
mov
fidivl
js
inc
add
and
test
stos
push
xor
aaa
aam
ret
mov
outsb
out
mov
hlt
xchg
cmpsl
ret
or
adc
cmp
int
and
xchg
adc
jp
lock
bound
pop
mov
push
in
test
jg
hlt
jmp
or
test
lret
push
ret
jp
cmc
cmp
mov
loop
push
or
aaa
nop
xchg
iret
rcrl
mov
test
push
sti
fwait
pop
lahf
sub
mov
cmpl
fists
add
or
push
lods
push
cmp
faddl
pop
adc
jp
mov
and
push
cmp
fbstp
orb
dec
push
dec
jbe
dec
jp
pop
inc
cltd
cmc
sub
and
xor
and
xchg
adc
mov
leave
lock
and
push
push
sub
data16
les
ds
in
add
adc
xor
imul
mov
push
dec
dec
push
xchg
lret
es
arpl
bound
movsb
in
jp
xor
scas
inc
lods
xor
cs
and
into
repnz
aad
ret
and
bound
loopne
xor
dec
daa
inc
sbb
addr16
jo
inc
jb
out
nop
into
jmp
mov
and
andl
rcl
adc
out
out
fiaddl
jp
movsb
cmp
inc
and
daa
sub
sbb
pop
pop
nop
push
pusha
jp
cmp
adc
xor
rcl
enter
jl
and
movsb
xor
and
dec
and
into
popf
out
adc
daa
inc
pop
cmp
adc
scas
outsb
cmp
add
jecxz
pop
jae
adc
dec
data16
mov
or
mov
mov
push
lret
cmp
add
push
subb
mov
stos
cmpsl
shll
xchg
loop
test
adc
test
pop
mov
xor
add
fimull
inc
lds
jl
popf
dec
and
push
xor
lcall
add
pop
mov
daa
add
lret
sbb
imul
into
add
pop
sub
push
mov
lea
cmp
jae
push
ss
add
addl
push
int3
mov
lods
cmovo
and
andl
push
xor
adc
sbb
mov
jmp
movsl
xchg
aad
lds
fwait
or
test
cmp
ror
mov
sub
jb
dec
jo
icebp
orl
adc
push
or
add
insl
or
and
scas
sahf
push
jno
hlt
shrl
cli
sti
into
xor
xchg
add
out
push
pop
cwtl
add
dec
jns
xor
sldt
or
jecxz
mov
add
xor
xchg
pop
xor
mul
mov
sbb
punpcklbw
insb
popf
es
sub
into
mov
pop
jecxz
pop
adc
cmp
add
lea
push
add
xchg
mov
dec
clc
out
add
pusha
pop
in
cmpl
inc
jge
jbe
xchg
dec
cmp
cmp
cmp
inc
gs
imul
xor
pop
leave
repz
in
add
dec
xor
mov
sahf
test
out
scas
push
sbb
lret
test
inc
xchg
cwtl
adc
popa
lds
dec
loopne
repnz
add
mov
scas
fadd
or
inc
ret
xchg
pop
lret
lahf
xchg
add
pop
icebp
sub
outsb
xchg
cmc
aaa
xchg
pop
add
jl
arpl
stc
js
jnp
xor
jae
add
aas
cs
inc
repnz
or
pop
or
outsl
rorl
jns
add
fcompl
cltd
pop
mov
sti
or
mov
mov
cli
cmp
orb
add
pop
movsb
std
jecxz
or
lahf
pop
jge
lock
add
cmp
and
test
jb
pop
ss
mov
xlat
sub
mov
lret
add
xchg
mov
or
or
dec
loope
jp
jb
jmp
inc
sbbb
mov
add
aas
ljmp
sub
dec
cmp
adc
sub
sbb
sbb
mov
out
test
cwtl
ljmp
inc
pop
mov
lock
jbe
xchg
add
daa
int3
test
add
mov
xchg
add
mov
sbb
dec
rorl
add
xor
sub
inc
add
imul
add
mov
xor
jns
and
sbb
les
add
jb
mov
xor
add
push
add
mov
repz
cmp
and
and
in
add
dec
fwait
sbb
jo
add
adc
daa
mov
dec
test
jl
adc
insb
inc
fmulp
test
or
xchg
loop
data16
xor
add
into
popa
addr16
mov
pop
daa
cld
mov
icebp
jle
orl
cwtl
pop
fadds
jne
cli
xchg
xchg
and
push
xchg
push
filds
mov
imul
les
cs
push
sbb
dec
aaa
sbb
jecxz
fldcw
and
test
push
cmpsb
jp
push
pop
call
xor
fwait
sarl
adc
mov
pop
pop
addr16
orb
aas
add
cmp
iret
shrl
js
das
popa
push
sub
add
or
dec
mov
jns
xor
lock
arpl
les
pushf
incl
pusha
int3
jecxz
lods
addb
adc
or
cmp
leave
ljmp
adc
jp
pop
js
and
test
xchg
xor
in
fchs
outsb
or
xor
add
int
cltd
or
mov
lds
jp
and
std
fstl
jle
pushf
jo
mov
dec
cmp
lcall
mov
xchg
pop
xchg
test
and
dec
pop
xchg
daa
mov
ljmp
push
push
xor
sbbb
push
inc
jo
fwait
mov
sbb
or
mov
sub
xchg
add
scas
push
dec
mov
jo
aam
movsb
fildll
movsb
iret
or
std
adc
cmp
xchg
jb
jmp
ret
outsl
push
shrb
jnp
je
jb
in
outsb
cmp
xor
shrb
fistpl
dec
or
push
scas
and
les
out
sbb
fmull
shlb
cs
xchg
stos
insl
sti
add
shrb
jmp
shll
inc
adc
push
and
addr16
movl
jno
xor
jle
les
and
fsubr
sbb
cmpsb
out
pop
out
mov
push
je
push
mov
jmp
out
sub
jl
nop
loop
jle
sub
add
test
ret
lcall
pusha
sub
out
dec
pushf
xchg
and
gs
xchg
andl
pop
out
pop
inc
hlt
and
cmp
fs
xchg
stos
jne
push
cmpsb
insl
adc
xchg
jno
sti
lret
arpl
cmpsb
test
adc
add
sahf
leave
out
jl
inc
push
in
or
loope
fdivrl
icebp
add
adc
popa
loope
cmp
daa
or
sbb
daa
stc
adc
test
xor
enter
out
and
mov
test
add
clc
push
es
cmp
fs
loop
xchg
add
mov
mov
arpl
rcl
leave
xor
adc
lods
mov
movsl
in
mov
xor
popa
adc
fildl
and
shll
aam
std
inc
out
out
lds
mov
push
arpl
andb
mov
sbb
cmp
aaa
scas
cs
mov
pop
popf
add
mov
aas
cli
in
jecxz
add
cwtl
cmp
xlat
nop
sbb
xor
addr16
xchg
loopne
mov
sbb
jnp
cmp
ds
mov
std
pop
push
ret
xchg
movsl
pop
lods
jo
push
or
cmp
jne
pop
and
dec
mov
ret
cmpsb
insl
aaa
add
xor
jp
dec
jge
idivl
or
xor
lahf
add
stos
push
into
mov
sarl
fsts
rolb
mov
or
lods
sub
sub
outsb
push
dec
pop
inc
pop
sbb
mov
mov
jb
sub
add
movsl
sbb
arpl
adc
out
fbld
es
mov
into
pop
inc
ret
xchg
cmp
mov
icebp
outsl
daa
aaa
cmp
sbb
in
dec
add
loope
add
push
dec
add
mov
dec
dec
cmp
cmpl
dec
xor
inc
xchg
push
pop
xchg
sarl
aam
or
inc
sub
lahf
outsb
gs
ret
cmp
mov
mov
add
mov
push
jbe
fdivrs
mov
cmp
in
mov
sub
test
aas
xor
movsb
cltd
outsl
add
stc
mov
popa
inc
scas
push
jle
add
insl
sbb
arpl
push
dec
cmp
fwait
addr16
pop
adc
ljmp
stc
sar
out
lds
shrl
cltd
or
imul
scas
and
sub
jecxz
and
jg
add
push
pop
das
mov
repnz
and
xchg
push
aaa
hlt
pop
jg
aam
out
roll
mov
lods
add
sbb
into
in
test
and
gs
push
adc
ret
jecxz
loope
popl
ja
mov
fidivrs
or
mov
fists
and
je
roll
inc
repnz
cmc
pop
mov
jnp
mov
add
stc
cs
rcll
push
or
rcrb
aad
insl
and
add
push
dec
lea
scas
xchg
cmpsl
gs
andl
push
mov
mov
and
or
xor
jecxz
cmp
inc
fistps
jl
and
push
xchg
jne
pop
in
stos
push
jbe
fidivrs
jmp
int3
dec
dec
or
pop
icebp
enter
sbb
or
jns
insl
cmpsl
je
sub
ds
es
cmp
mov
repnz
iret
mov
adc
in
mov
xlat
add
out
fistl
jns
fcompl
lock
arpl
xchg
pop
adc
shll
mov
call
loopne
adc
enter
cmp
xchg
and
hlt
stc
out
xor
lret
mov
and
sub
aam
xor
or
out
cmpsb
sbb
mov
ss
add
outsl
bound
mov
andl
cmp
add
sahf
add
mov
inc
jae
repz
jbe
stc
cmp
test
clc
add
subl
mov
std
push
add
bound
mov
cmp
add
das
cld
mov
jno
and
pop
repz
lret
ret
pmaxsw
pop
mov
ds
pop
in
fiadds
or
mov
add
jecxz
mov
cmpsl
shlb
add
into
aam
and
lods
mov
pop
mov
xchg
cmp
stos
dec
or
xchg
call
xlat
cmc
pop
sub
and
inc
pop
or
adc
jmp
roll
mov
adc
insl
mov
sahf
fcoml
pushf
xor
adc
or
inc
cmp
neg
stc
sti
xor
add
movsb
dec
and
repnz
xchg
xor
loop
rolb
shlb
mov
cmp
repnz
lahf
push
sbb
fidivl
adc
xchg
xchg
fwait
jns
add
mulb
lret
dec
in
inc
daa
xor
mov
jbe
or
stos
inc
enter
out
add
cmp
rcll
mov
xchg
je
rcll
rolb
mov
mov
repz
in
pop
xchg
inc
add
jne
test
jge
insl
cmp
add
inc
mov
add
ljmp
jle
repz
mov
fidivs
xchg
pop
rclb
cmp
loopne
mov
mov
aam
mov
stos
pop
cmp
adc
pushf
pushf
add
jg
xchg
fcomi
inc
inc
mov
dec
aad
mov
inc
xchg
stc
mov
add
loope
inc
stos
mov
fmull
dec
or
mov
subb
sarb
lea
and
cmp
mov
cmp
mov
add
out
sub
rorl
insl
mov
outsl
jle
out
mov
inc
arpl
jns
imul
popf
pop
inc
in
inc
jmp
cltd
outsl
or
inc
pop
ss
xchg
ret
mov
or
popf
popa
pop
mov
loop
jns
insb
and
mov
cs
xor
xor
sub
pushf
sub
add
xchg
test
fsts
adc
sub
adcb
cs
daa
xor
mov
add
aad
and
jle
cmpsl
inc
sub
stos
xchg
into
out
xor
mov
mov
stc
push
jp
xor
jno
adcl
add
jo
add
out
test
and
add
aaa
jl
adc
add
and
in
add
mov
sub
nop
sbb
add
in
sub
xor
xorl
or
sub
mov
loope
push
mov
mov
in
mov
inc
xchg
repnz
shlb
push
mov
sbb
pop
push
sahf
les
or
mov
int
mov
fwait
shlb
cmp
test
mov
add
sti
jne
mov
rcll
cwtl
ljmp
sahf
add
xchg
push
xchg
scas
rcr
ficompl
xchg
sub
in
lods
inc
sbb
add
mov
fimuls
push
shll
subl
flds
jb
xchg
mov
neg
lds
test
pushl
fwait
inc
mov
lcall
sub
cmpb
cmp
cld
fwait
add
xor
ret
jl
pop
insb
negb
test
xor
inc
xchg
jns
xlat
lea
popa
shlb
cmp
das
adc
pop
inc
mov
repnz
xchg
mov
loope
inc
ja
lcall
movsb
sub
pop
adc
add
inc
sub
nop
jns
scas
add
inc
roll
lea
jle
mov
pop
add
cs
ret
iret
outsb
emms
add
add
add
xchg
sub
add
outsl
test
rclb
pop
sbb
sub
mov
xchg
sti
mov
ret
and
outsl
jbe
push
xor
add
xchg
and
ljmp
shl
add
mov
mov
add
cmp
sub
pop
mov
jmp
inc
lahf
enter
cmc
jecxz
ljmp
rcl
fwait
pop
subl
ds
xor
mov
sbb
je
xor
inc
push
jl
sbb
add
js
pop
add
xchg
push
scas
jmp
sub
add
adc
sbb
mov
inc
aaa
iret
pop
lcall
xchg
ret
sbb
rolb
pusha
adc
dec
cmc
cmp
dec
sbb
cmpsl
subb
xchg
bswap
mov
lcall
mov
out
push
add
dec
lds
adc
loope
ret
std
add
dec
pop
push
cmp
in
dec
cwtl
pop
mov
adc
out
bound
and
popf
inc
repz
gs
xor
inc
ret
das
loopne
ljmp
mov
into
mov
ds
xchg
sbb
jno
push
negb
rorl
sub
pop
lcall
cmp
mov
jmp
inc
scas
xor
es
dec
xchg
adc
stos
xorl
aas
sbb
pop
mov
testb
lods
add
or
pcmpgtw
jmp
mov
jnp
push
js
sbb
jp
cld
sub
dec
sti
ja
dec
fidivrs
xchg
scas
imul
idivb
movsl
les
ds
inc
xchg
or
add
roll
xchg
outsl
mov
pop
push
les
test
mov
add
dec
jp
sahf
xlat
sahf
xor
xchg
jno
cmp
and
push
xor
mov
dec
jg
pop
and
jnp
cmp
or
adc
mov
outsb
jle
cmp
add
inc
lock
jge
data16
fnstcw
mov
pop
or
jp
in
das
loop
cli
sbb
jecxz
adc
imul
push
hlt
dec
mov
mov
jae
out
mov
or
add
and
pusha
pop
data16
cmp
movsb
push
out
cmp
rorb
arpl
dec
cli
ret
sbb
xlat
adc
addr16
inc
adc
negl
add
mov
pop
adc
pop
cmp
pop
shlb
jbe
xorb
ret
scas
fdivrl
sbb
cmp
cmp
or
push
push
mov
mov
cwtl
sbbb
mov
pop
push
add
les
es
xor
cmp
jge
stos
outsb
rorb
push
jmp
push
sub
fnsave
fdivrl
imul
fistpl
jno
jmp
ss
adc
or
mov
sbb
ljmp
out
hlt
pop
ret
cltd
cmp
ret
outsb
push
sbb
sub
inc
add
fsts
cmp
aam
pop
xchg
xchg
les
push
in
popl
mov
mov
clc
push
cmp
mov
xchg
xorb
cmp
std
adc
pop
lea
inc
int
data16
into
xchg
fdivr
or
sbb
mov
sbb
ret
fsts
add
dec
adc
sub
sbb
push
pop
push
out
loop
adc
add
popf
pop
mov
bound
cmpsb
mov
xor
fs
push
cmp
out
pop
push
movsb
pop
or
add
inc
jl
in
lock
jecxz
and
inc
shl
and
out
cmp
in
in
test
xlat
arpl
adc
movsl
xchg
jae
or
xchg
sbb
sarb
and
pop
cwtl
cmc
or
cltd
add
mov
call
jns
xor
out
scas
push
sub
lret
or
test
inc
add
push
jecxz
mov
ret
scas
and
adc
add
mov
xchg
aam
and
lock
scas
call
rorl
adc
xor
daa
add
dec
sarb
jae
lods
xchg
jmp
imul
add
and
xlat
lods
sub
movb
cmp
ficompl
dec
or
xchg
xchg
xor
cmp
outsb
cld
xor
or
je
leave
mov
xor
jne
push
pop
into
push
cltd
add
test
adc
or
scas
pop
fiaddl
sub
pop
sbb
cmc
rcrl
adc
push
inc
arpl
xchg
or
int3
pop
cmp
sub
test
rclb
jmp
leave
and
clc
fs
iret
mov
cmp
std
js
addr16
faddl
push
scas
icebp
ret
gs
mov
rolb
outsl
add
pop
loop
add
sbb
stos
idivb
dec
sbb
adc
add
aam
cmc
mov
sbb
add
or
int3
jne
leave
add
add
loop
incb
movb
xchg
mov
neg
clc
jle
add
fsts
xor
out
mov
cmpb
inc
daa
shrd
xchg
fistpl
mov
cmp
inc
and
outsl
pushf
add
setge
pop
add
dec
lcall
arpl
dec
mov
insl
cmp
fldcw
and
xor
lcall
repz
add
mov
lahf
mov
jb
mov
mov
das
imul
fucomi
dec
cltd
js
pop
lahf
insb
pop
dec
es
outsb
add
jae
nop
inc
cld
push
pop
loope
add
ds
inc
push
push
aam
pop
or
xor
das
pushf
sbb
sub
int3
add
or
adc
push
xchg
negl
and
cmpsl
outsb
add
mov
andl
cmp
ss
add
negl
mov
and
fwait
shll
fsubr
stc
sbb
adc
push
pusha
addl
dec
add
inc
sbb
rcr
aaa
into
imul
scas
lods
add
rorl
shlb
add
and
jbe
hlt
ss
in
push
pop
iret
add
push
out
stos
mov
pop
sub
movsl
int3
stos
mov
cs
lods
std
pop
jo
fwait
add
dec
insb
mov
add
push
and
filds
mov
xchg
cmp
add
popa
add
movsb
mov
aaa
mov
push
mov
mov
in
ret
shlb
add
push
jne
pop
dec
enter
loopne
out
dec
adc
jno
xchg
cmp
add
pop
mov
mov
pop
add
inc
bound
shrl
xor
leave
mov
adc
mul
insb
inc
sub
popf
lds
repz
add
sti
or
es
popf
gs
subb
push
clc
out
push
push
and
sahf
inc
and
into
clflush
add
cmp
xchg
faddl
repz
pop
out
call
add
pop
push
fistps
outsl
cltd
rolb
dec
mov
or
std
adc
xchg
das
mov
dec
inc
insl
add
fs
mov
adc
daa
jmp
mov
cmp
sbb
push
inc
add
aad
sti
push
mov
clc
pop
add
xorb
sarb
lds
shrb
sti
xchg
push
cmp
add
ljmp
test
pop
inc
cmp
rorb
or
cmp
and
fcoms
pop
jne
dec
inc
mov
cmp
inc
bnd
pop
dec
and
and
lock
lea
inc
push
adcl
xor
push
ss
popf
or
add
push
out
cmp
dec
lret
jo
mov
sbb
sub
adc
dec
lcall
int
inc
fistps
pop
in
sbb
popa
add
push
rcrb
mov
dec
jl
add
iret
daa
add
addl
and
inc
push
or
xor
xor
cmp
jmp
in
add
sarb
repnz
addr16
pop
popa
loopne
outsl
add
mov
subb
aaa
cmp
repnz
pusha
mov
mov
cmc
mov
mov
lods
adc
cmp
add
hlt
fidivrl
cld
pop
mov
push
rorl
pop
xor
jo
or
popa
sti
and
add
jb
cld
cmp
and
sbb
testl
xor
je
or
jecxz
jmp
xor
mov
ds
cltd
pop
imull
mov
stc
xchg
xchg
dec
popa
dec
add
stos
cltd
jl
pop
and
add
scas
xchg
pop
sbb
and
in
add
mov
cli
aas
adc
mov
icebp
and
xchg
xchg
push
shrb
les
sub
incl
and
mov
iret
inc
push
ja
xlat
notb
mov
sbb
sub
cmpb
lock
std
add
jb
icebp
into
and
and
dec
fisttps
lret
sub
fstpl
adc
and
xchg
hlt
cmp
add
lds
add
js
mov
fildll
add
leave
insl
add
clc
ret
add
xchg
pop
rolb
inc
inc
add
cmp
add
stc
push
or
ret
jge
sbb
add
and
mov
and
sbb
dec
jo
ds
lahf
and
mov
add
leave
lods
jns
out
adc
push
inc
mov
and
daa
data16
pop
add
jnp
push
mov
mov
inc
push
inc
ret
mov
jns
xchg
in
add
js
jge
jno
push
cmc
icebp
mov
xchg
or
add
outsl
addr16
imul
lret
mov
xlat
jge
pop
and
lahf
es
mov
adc
imul
adc
insb
inc
xchg
push
xor
cmp
test
in
aas
xor
icebp
add
mov
adc
loope
lret
dec
pop
add
jecxz
jl
aam
filds
cmpsl
maskmovq
divl
fldcw
nop
cmp
jecxz
inc
xor
aas
outsl
repnz
mov
xchg
push
xchg
cmp
je
in
loopne
jmp
add
cmp
xchg
sbb
addr16
frstor
dec
mov
imul
mov
movsl
add
inc
call
mov
mov
dec
fidivl
jg
repnz
mov
xchg
push
cmp
pop
jecxz
pop
cli
jge
pop
sub
xlat
rolb
lods
or
shrl
adc
sbb
sub
imul
jae
push
and
sbb
add
arpl
mov
add
repnz
loope
mov
xor
cmpsl
out
inc
mov
mov
push
dec
pop
lcall
iret
lods
aad
jl
out
xchg
roll
ret
mov
iret
cmpsw
cmp
scas
add
out
sub
xchg
pusha
mov
sbb
daa
je
push
or
add
subb
add
mov
in
mov
leave
mov
jp
sahf
divl
lret
jge
cmp
add
mov
or
add
enter
mov
icebp
inc
cmp
scas
ljmp
cmp
sub
push
ljmp
jecxz
add
mov
clc
rol
adc
jne
jae
aad
mov
stos
push
call
out
lretw
sub
bound
subb
negl
mov
pop
xor
xor
out
ja
pop
add
sbb
mov
ffree
sub
pop
add
sbb
mov
out
jns
orb
jge
or
pop
popf
scas
add
mov
sbb
mov
lods
imul
and
rcr
adc
outsl
aas
sub
pop
mov
mov
push
add
or
jno
idivb
fwait
mov
js
pop
add
xor
addr16
mov
jbe
xchg
stos
adc
dec
or
inc
pusha
mov
mov
fwait
inc
imul
jge
jle
cmp
aaa
adc
mov
sub
std
shr
fwait
cmp
cmc
cmpsb
ds
jle
bound
jge
xchg
jne
and
jne
inc
cs
pop
cmp
jo,pn
shlb
fsubrl
adc
int
ficomps
inc
arpl
imul
push
cmp
mov
add
faddp
mov
das
mov
mov
ljmp
mov
jo
add
adc
ljmp
mov
enter
shrd
sbb
sbbb
push
mov
jp
mov
out
ret
jmp
jg
or
subb
bound
push
push
stos
jns
add
les
jmp
dec
adc
sub
inc
cmp
cltd
mov
stos
xchg
aas
cmp
add
add
ret
fadds
inc
fcompl
xorl
push
sbb
movl
and
scas
push
sbb
sub
pop
dec
pop
inc
cwtl
lods
fcoms
add
jge
std
add
leave
and
add
cs
jp
pop
push
fstps
add
scas
lods
lret
in
dec
ret
mov
gs
add
cmpsl
or
rolb
cmp
testb
movsb
push
rorl
bound
ljmp
iret
add
adc
jg
or
testl
add
pop
mov
data16
pop
in
cwtl
cmpl
dec
lods
je
sbb
or
add
cltd
pop
aaa
cmp
xor
cld
xor
push
adc
pop
ja
jmp
int3
push
adc
outsl
mov
push
ret
pop
dec
std
xchg
pop
mov
adc
push
adc
jle
add
movsb
pushf
dec
stos
pusha
pop
sbb
xor
add
mov
push
jp
gs
jg
or
mov
test
insl
je
mov
in
and
ja
push
cmp
cmpsb
sahf
fstl
mov
movsb
mov
test
mov
aam
cwtl
xchg
push
lret
and
imul
inc
lock
jmp
or
add
sahf
sbb
pop
mov
add
adc
int
inc
push
sbb
xor
out
add
popf
in
cmp
sti
sti
sub
jp
cmpsl
xor
xchg
pop
mov
imul
pusha
sub
jp
or
add
imul
mov
mov
cmpsl
add
fdivrp
add
push
rcrl
inc
mov
add
pop
mov
and
add
dec
mov
in
stos
aaa
add
sti
jp
sbb
cld
and
ljmp
fisttps
and
pusha
lcall
cs
cmp
orb
adc
push
lods
xor
cmpb
shrb
aad
lea
push
into
mov
daa
jle
xor
or
jge
test
or
cs
lock
mov
push
stos
inc
inc
xchg
in
xchg
cmp
ss
ljmp
jnp
inc
fistl
repnz
xchg
add
sbb
cmc
outsb
cmp
lods
xchg
cmp
fildl
scas
lock
sub
adc
rcrb
pop
loop
dec
adc
inc
push
or
insb
in
adc
cs
test
push
ret
subl
movsb
mov
mov
lock
data16
mov
lods
or
sub
push
leave
ret
jmp
cmpb
adc
out
test
ja
pop
jecxz
add
push
push
orl
aad
dec
add
std
add
lds
cmpsb
lea
push
in
ret
les
mov
and
outsl
dec
and
int
ds
lock
lods
mov
adcb
inc
add
test
loope
add
aad
push
add
dec
sti
in
std
and
mov
mov
pop
inc
mov
movsl
jmp
xor
bound
and
or
cs
aad
add
stos
or
jg
and
ud0
mov
sbb
ret
inc
adc
sbb
inc
adc
daa
and
jmp
call
mov
jp
notb
aad
fidivl
inc
shl
sbb
dec
dec
sub
push
inc
stos
pop
cmp
ret
scas
xlat
push
cmpl
adc
mov
add
mov
cmpsl
mov
sahf
xor
aas
cmc
inc
lods
mov
xchg
stc
and
mov
lret
add
imul
jb
lods
or
outsl
sbb
or
iret
push
das
add
sub
scas
addl
push
xor
cmp
call
jns
mov
xchg
aam
sbb
inc
daa
pusha
adc
push
adc
rcrl
cmpsb
mov
test
or
shrb
es
jecxz
cmpsl
in
adc
aas
addb
push
adc
test
add
mov
ret
inc
in
arpl
jnp
dec
rcrb
or
mov
ljmp
mov
and
lds
test
pop
inc
cmp
ljmp
daa
fs
ljmp
push
xchg
ret
stos
cmc
fs
jp
adc
aaa
xchg
aam
imul
inc
mov
or
inc
scas
cmc
out
loopne
mov
mov
rclb
repnz
push
sahf
cs
imul
dec
push
pop
sbb
mov
aas
and
leave
movsb
fistpll
mov
mov
jl
out
sbb
pop
lds
andl
cltd
adc
xor
cmpsl
jo
in
mov
mov
xchg
test
test
cli
pop
lret
jo
pop
loopne
shll
cltd
daa
and
cmp
xchg
xchg
movsb
cli
xchg
ja
cmp
outsl
dec
dec
mov
lds
xchg
movsl
add
xor
jl
ljmp
nop
inc
imul
dec
xor
sub
les
mov
mov
push
or
mov
dec
inc
insl
cld
add
sbb
jmp
movsb
movsb
aas
cmp
cmp
push
ftst
push
leave
out
decb
xchg
insb
adc
xchg
sbb
and
test
call
pop
fs
roll
adc
sbb
or
jne
add
ds
or
mov
and
outsb
rorb
outsl
mov
dec
sbb
jnp
jp
mov
xchg
sub
mov
sbbb
ljmp
push
jnp
loope
cmc
xchg
mov
lret
add
and
mov
jge
repz
lds
into
cmp
add
jg
push
pop
jl
cmp
popf
add
jp
pop
ja
addr16
popa
cmpb
and
cmp
in
pushf
xor
lock
inc
xorb
cmp
mov
push
jle
inc
jp
or
add
jecxz
leave
bound
mov
push
xchg
pop
popf
mov
aad
es
mov
pop
cli
and
popa
adc
ja
add
popa
jae
and
daa
add
pop
mov
jp
mov
cmpsb
arpl
lcall
or
jmp
cmp
sbb
jne
rolb
jge
mov
jle
stc
popf
sub
sbb
add
lods
pop
inc
sbb
mov
iret
hlt
adc
ds
popa
mov
minps
mov
std
in
popf
test
sbb
insb
xlat
xchg
cmp
jecxz
leave
cmp
addl
cmpsl
inc
xchg
movsl
xor
pop
bnd
adc
xchg
imul
cmp
iret
mov
hlt
dec
xchg
std
jno
mov
sbb
jge
pusha
mov
jle
xchg
mov
nop
mov
into
xor
cld
cmp
jg
fs
adc
adc
mov
push
jp
int
dec
jg
add
and
xchg
jp
or
bound
or
mov
sbb
data16
cltd
or
bound
cmp
sbb
movsb
mov
lock
xor
aam
mov
sbb
ret
mov
and
repz
dec
cmc
inc
pop
mulb
push
sbb
insl
push
adc
out
dec
je
xchg
imul
je
jle
jp
insb
adc
dec
out
jl
pusha
in
jp
movsl
fiaddl
out
xchg
and
pop
xor
mov
cmp
fmulp
add
jno
add
pop
or
jmp
cmp
aas
outsb
pop
movsb
lock
mov
mov
inc
sbb
xor
and
leave
enter
add
aad
dec
cmpsl
test
or
cbtw
add
popa
mov
cmp
xchg
repnz
add
aas
and
jp
pop
into
xor
push
mov
mov
mov
mov
es
sub
cld
fbld
and
repnz
inc
fildll
scas
lock
pop
je
rolb
add
mov
cmp
and
mov
notl
js
loope
shll
push
mov
jo
cmp
rorl
std
test
push
andb
lret
push
and
jle
dec
jmp
sub
outsl
test
sahf
fmuls
sub
sub
or
pop
sub
mov
inc
mov
dec
loop
cmp
mov
inc
add
pop
and
mov
ret
and
mov
sbb
xor
xor
addr16
push
mov
lods
inc
pop
fcoml
jge
int3
testl
inc
pusha
or
cmp
mov
lcall
lods
inc
add
mov
clc
mov
shlb
lahf
aad
and
dec
push
cmp
xchg
or
enter
jg
mov
jl
mov
or
stos
cmp
lock
push
fidivrl
mov
dec
das
inc
mov
xchg
test
mov
in
decb
or
std
mov
sahf
push
jbe
xchg
lret
lods
sub
add
scas
push
out
cwtl
add
inc
cmp
sbb
or
inc
std
push
dec
das
sbb
mov
jle
inc
add
jge
and
aam
mov
imul
sbb
inc
loopne
push
and
sahf
mov
cmp
pop
notl
mov
jno
ja
call
xchg
aas
js
push
mov
les
jmp
sbb
mov
test
cli
mov
repz
mov
push
nop
je
pushl
inc
push
mov
ficomps
aas
jmp
mov
pop
iret
sbb
xorl
test
jl
je
mov
jp
hlt
call
jb
cwtl
ret
cld
pop
roll
in
inc
test
imul
push
aam
sub
xchg
rcrl
scas
rclb
mov
dec
shrl
inc
cmc
mov
dec
push
mov
cmp
lahf
scas
add
push
test
cmp
dec
xchg
jbe
daa
add
xor
pop
xlat
xor
mov
pop
sahf
out
int3
jns
add
xchg
je
sti
faddp
pop
cmp
push
shrb
jmp
push
xor
inc
out
add
adc
xchg
repnz
cmp
inc
xorb
gs
jg
or
add
dec
andl
loopnew
cltd
stc
xor
data16
ljmp
out
add
mov
adcb
cmp
mov
mov
cmp
mull
std
stc
xchg
add
cld
mov
rep
call
ja
insl
dec
add
adc
jo
add
mov
pop
movsl
shll
lahf
or
pop
xor
mov
push
pop
push
aas
lret
push
mov
cmp
ret
inc
adc
rcll
push
jb
mov
or
xlat
mov
or
xor
inc
xorb
mov
sub
cmp
pop
jnp
dec
and
dec
add
lods
loop
insb
ss
add
xchg
movsl
mov
je
scas
mov
pop
or
cmpsl
mov
add
pushf
mov
mov
cld
add
imul
inc
cs
add
mov
xchg
add
xchg
mov
test
out
les
les
add
inc
in
mov
outsl
bound
insl
xor
cmpsb
into
roll
out
inc
repz
sahf
hlt
fwait
pushf
push
push
add
es
xor
movsl
or
jecxz
iretw
xchg
test
dec
nop
loopne
arpl
iret
cmpsb
and
cmpl
dec
add
ret
movsl
inc
cmp
push
dec
out
gs
lahf
dec
pop
and
add
add
in
cmp
or
ja
lret
movsl
into
sbb
add
stos
push
sarl
pop
mov
nop
aam
in
out
das
add
cs
lea
jb
inc
nop
dec
js
scas
xor
jl
gs
test
xchg
add
dec
mov
arpl
roll
add
or
cmp
jnp
add
aas
add
adc
movups
pusha
cmp
xchg
aas
cli
mov
pushf
mov
lock
or
insb
add
ss
inc
jecxz
mov
and
or
push
rcr
js
push
dec
out
xor
pop
lcall
add
test
push
or
movsb
shll
hlt
mov
fisttpll
add
xchg
adc
add
jo
push
add
add
and
sbbb
mov
mov
pop
sbb
adc
in
test
mov
jbe
test
test
subb
push
xor
add
push
add
jecxz
clc
add
fadds
ret
movsl
movsb
push
inc
cmp
mov
mov
add
stc
cmp
stos
mov
jge
icebp
push
cmpxchg
pop
rcr
roll
or
jo
push
in
or
imul
xchg
shl
add
repnz
xchg
mov
fildll
mov
std
enter
inc
sbb
jns
xchg
pop
stc
rorl
fucomi
adc
mov
call
add
rcrl
sbb
or
out
mov
aaa
loope
jb
pop
addb
rorl
int
mov
add
testl
sbb
add
popf
mov
in
in
testb
and
or
int3
inc
sub
and
inc
mov
lea
cltd
and
pushf
mov
inc
scas
js
mulb
mov
add
insl
mov
jecxz
add
shlb
add
js
daa
mov
push
popa
jge
scas
pop
add
xchg
add
insb
ret
mov
leave
add
mov
fadds
sbb
add
jmp
cld
mov
or
lds
and
mov
cmp
add
ret
jge
ja
call
mov
push
mov
int3
sbb
into
sbb
inc
fdivs
lcall
add
sub
jg
mov
inc
cmc
fnstcw
std
out
jle
mov
bnd
or
ss
pop
leave
fbstp
outsb
or
xchg
sbb
cmp
sub
ss
je
shll
in
cmp
pop
test
ret
fistl
sahf
loopne
pop
ret
add
pusha
pop
sub
dec
addb
std
cli
repz
ljmp
test
stos
xor
or
and
mov
cmp
mov
jp
push
data16
mov
loopne
inc
pop
xor
pop
bound
sub
xor
test
scas
loopne
mov
xor
iret
mov
pop
ss
mov
push
sar
movups
insb
lock
add
mov
mov
add
sbb
mov
add
xchg
es
repnz
jae
cld
insb
shlb
ljmp
dec
sarl
adc
loop
add
pusha
arpl
adc
adc
jl
jmp
push
les
lahf
cwtl
add
jbe
pop
test
int3
xchg
pop
xchg
xor
mov
or
popa
mov
lock
or
dec
and
bound
or
jp
mov
xor
xchg
iret
lahf
mov
dec
negb
clc
pop
shll
cmp
adc
xchg
sarb
cmc
or
mov
add
mov
pop
cvtdq2ps
xchg
push
xor
out
fidivrl
add
arpl
inc
xchg
pop
movsl
sbb
jnp
mov
cmp
adc
pop
std
mov
lds
jo
scas
sbb
daa
sub
push
js
stos
jp
lret
mov
scas
mov
sub
arpl
hlt
idivl
fs
jle
sub
nop
add
psrad
sti
sti
push
pusha
jp
inc
mov
aas
hlt
and
fs
dec
scas
mov
push
loop
movsb
jl
xorb
arpl
in
dec
dec
cmp
cmp
xchg
and
and
arpl
loop
bound
inc
divl
add
ds
andb
and
out
xchg
push
jmp
xchg
ret
repz
out
pop
not
push
jp
jb
gs
or
mov
scas
sub
pushf
nop
add
and
icebp
out
inc
mov
adc
stc
lds
xor
xor
fisubs
jns
or
add
mov
add
jnp
push
xchg
add
pop
sub
les
jns
jb
xorb
cmp
mov
cmp
xchg
add
scas
cmpsl
pop
jg
lock
or
fidivl
sbb
dec
mov
shrb
movsl
movsl
xchg
xor
inc
add
decl
mov
add
es
bound
stos
sbb
daa
outsb
dec
or
lret
push
out
or
out
xchg
cmpb
cmp
and
xchg
jb
mov
jp
nop
mov
loop
xor
outsb
jecxz
mov
cmp
xor
mov
aaa
and
adc
and
lahf
pop
cwtl
xlat
scas
cmp
mov
push
mov
push
cmp
and
in
and
test
scas
aad
mov
enter
mov
mov
sbb
xor
ror
adc
leave
sahf
xchg
out
push
mov
sbb
mov
sbb
push
std
xchg
xchg
mov
xchg
sbb
pusha
add
jns
and
sbb
pop
leave
dec
push
xor
shl
imul
mov
add
or
aad
pop
or
push
adc
test
or
leave
pop
cs
stc
mov
jno
xor
and
lock
and
or
pusha
hlt
pop
xchg
pushf
cmpsl
cmp
jp
xchg
and
pop
scas
movsl
mov
call
mov
sub
sti
sub
shlb
add
lea
inc
dec
jno,pn
mov
andb
pop
cmp
jne
xchg
das
xor
shll
dec
lret
std
jle
icebp
inc
cmp
or
imul
dec
hlt
clc
push
xor
pop
andb
fmull
cmc
enter
inc
loopne,pn
in
xor
nop
dec
shrl
in
imul
rorb
in
test
enter
adc
sub
es
out
shr
add
add
adc
mov
xor
out
add
stc
lcall
sub
xchg
inc
push
and
add
lods
dec
int3
push
std
js
add
mov
inc
mov
inc
iret
cmp
adc
mov
add
test
mov
add
popf
aam
mov
dec
add
pop
jecxz
gs
cmpl
loop
lahf
dec
repz
cwtl
pop
mov
or
rorl
xchg
jecxz
pusha
call
stos
pop
mov
cmc
push
clc
and
sub
xor
cld
das
dec
or
daa
push
jp
enter
imul
sti
and
push
mulb
mov
stc
inc
jb
push
repnz
iret
cwtl
rolb
stos
jno
xor
insl
xchg
mov
xchg
shlb
setg
test
xchg
fdivrl
cmp
loop
lods
fldl
cmp
fwait
punpcklwd
push
pop
fstl
sahf
or
ret
jecxz
jo
sbb
sti
push
fwait
nop
outsb
mov
adc
std
fwait
xchg
cmpl
xor
movsb
cmp
push
addr16
inc
fcompl
xor
in
ret
loope
sahf
xor
xor
cli
cs
jns
mov
mov
cltd
dec
in
mov
push
mov
cmp
mov
adc
mov
inc
xchg
push
das
sbb
adc
adc
popf
int3
mov
cmp
mov
add
and
movd
call
xchg
xchg
andl
mov
scas
push
xor
sbb
or
or
lds
sub
dec
add
xor
xchg
and
sahf
xchg
sub
imul
add
xor
pop
daa
cmp
gs
jno
leave
cmp
ret
and
outsl
adc
dec
loope
das
cmp
dec
jbe
inc
sbb
in
movsb
jno
xchg
shrb
pop
mov
sti
pop
pop
push
les
scas
mov
push
add
test
dec
add
cmp
or
jle
adc
js
add
pop
jge
cmp
incl
in
fisubs
gs
test
add
cs
jno
pop
xchg
je
mov
cmp
movl
sbb
js
lcall
mov
sarl
sti
sbb
lds
fstl
data16
fstpt
dec
out
ret
icebp
lds
inc
incl
jg
pop
add
jns
add
sbb
repnz
jnp
dec
inc
inc
xor
cmp
add
sbbl
mov
mov
jne
inc
push
fbld
mov
cs
cmp
mov
cmp
push
in
rclb
xlat
push
lret
ret
stc
mov
xchg
daa
xchg
stos
xor
addr16
jbe
and
xchg
push
jmp
sub
jmp
jb
pop
mov
ja
mov
cmc
out
fimull
or
mov
and
pop
sbb
mov
lods
adc
shrl
push
dec
addr16
ret
ja
pop
popf
add
into
lret
cmp
aam
hlt
pop
and
int3
jno
inc
push
in
or
aaa
adcb
pop
add
jb
add
in
push
push
xchg
or
add
aas
dec
jbe
mov
lock
fcomps
fisubrl
push
jns
push
aas
sti
fwait
es
add
cld
ret
inc
sbbb
xchg
push
push
pusha
scas
movntq
out
xor
xor
into
cltd
mov
mov
dec
cmp
xchg
cmp
rolb
dec
icebp
jae
xchg
jbe
add
into
dec
int
xor
adcl
leave
adc
add
dec
mov
mov
push
xchg
inc
add
mov
dec
add
mov
shr
adc
mov
and
filds
xchg
fwait
push
push
pushf
aad
add
jg
outsb
inc
test
lret
cltd
andb
jge
popf
adc
inc
jno
cmp
dec
leave
shlb
push
sbb
fs
shll
push
push
es
add
call
clc
add
fidivrl
lret
in
pop
pusha
popa
xchg
js
add
iret
or
add
lea
ss
les
mov
scas
mov
test
pop
fpatan
fwait
mov
push
subl
roll
push
popa
lret
cmp
dec
inc
cmc
in
ja
sub
add
outsl
pop
arpl
call
leave
fwait
in
icebp
cld
add
cmpsb
mov
xchg
mov
test
sbb
mov
push
jecxz
add
jl
and
dec
ficoml
mov
lock
add
clc
dec
fadds
push
xlat
add
in
fwait
movsb
xor
divl
cmp
jo
push
lock
sbb
sarl
or
std
add
sbb
add
sti
gs
cs
aam
cmp
loope
sub
fucom
icebp
adc
test
push
xchg
aaa
js
shlb
loopne
and
ret
jnp
inc
mov
pop
movsb
pop
pushf
repnz
aas
aas
push
in
push
shll
jge
xlat
xchg
pop
mov
add
pop
fistpll
add
test
or
fmul
xchg
ljmp
jo
xor
aaa
mov
jnp
test
movl
xchg
add
stos
push
mov
jmp
push
pop
xchg
sarl
out
and
push
add
in
push
xor
push
add
sbb
mov
dec
pop
push
jl
subl
cmp
jp
leave
or
and
xchg
mov
lods
sbb
mov
imul
shl
loope
ret
mov
mov
push
sbb
mov
loopne
rcrb
sbb
dec
cli
xchg
dec
xchg
pop
cmp
jne
popa
cmp
aas
pop
sti
inc
mov
addb
jge
cs
cmp
das
test
mov
xchg
arpl
fisttps
pop
add
mov
mov
push
in
mov
xor
mov
andb
mov
ja
cwtl
js
jmp
xchg
or
std
mov
addr16
dec
bound
repnz
cmp
cmp
sti
jnp
inc
repz
lock
pop
add
daa
cwtl
mov
add
dec
mov
mov
inc
mov
push
push
mov
lahf
call
inc
mov
ret
ror
cmp
add
push
inc
cmp
pop
fadd
and
shlb
or
mov
push
pop
add
into
xlat
hlt
mov
mov
insl
jg
ret
notl
scas
fnstcw
adc
sti
aam
pop
addr16
adc
inc
and
add
subb
adc
sbb
add
outsl
ss
loopne
scas
add
lret
xlat
je
add
fwait
mov
xchg
push
fldl
mov
ds
adc
push
pop
sbb
add
aad
mov
in
and
in
add
or
mov
aaa
mov
push
rorb
or
imul
add
shll
cmp
push
jbe
cmp
xchg
pop
cmpsl
add
test
xor
add
dec
dec
add
push
pop
cs
add
sub
add
roll
xchg
push
fcmovbe
test
inc
sub
add
mov
test
js
sub
lret
xor
fwait
mov
mov
xor
mov
and
mov
test
inc
lods
push
mov
out
xor
sbbl
jmp
add
enter
sbb
push
push
add
decb
in
hlt
lahf
cmpsl
shll
inc
scas
das
cmp
sub
dec
pop
add
es
inc
add
int
aam
bound
outsl
adcb
mov
push
inc
add
add
es
mov
fwait
push
ds
sbb
popf
mov
pop
sub
movl
jns
xor
mov
add
imul
inc
xchg
xlat
repz
pop
fnsave
cmpsb
mov
jg
outsl
add
xchg
or
dec
inc
add
mov
add
add
nop
and
aad
fcmovne
mov
icebp
test
stc
out
lahf
mov
dec
and
sbb
push
lds
gs
stos
rcll
add
mov
mov
sub
push
cmp
movsl
icebp
cmpsl
xlat
dec
cmp
and
push
fwait
popa
push
add
mov
dec
and
pop
pop
jne
out
add
mov
movsb
jmp
cmp
add
mov
sarl
inc
scas
lds
cmp
add
pop
or
ljmp
test
fwait
sub
aas
popa
ret
xchg
dec
js
add
ja
mov
out
das
es
push
mov
enter
lds
jo
xor
adc
sbb
cmp
inc
mov
adcb
filds
ficoml
in
sub
mov
filds
cmp
test
sub
insb
lahf
dec
cmp
mov
cmp
or
sbb
add
mov
cmp
lods
test
outsl
add
popf
bswap
mov
neg
add
xchg
mov
shll
jp
inc
inc
adc
lret
fdivs
jo
xchg
jo
cmp
mul
sbb
outsb
ss
sahf
out
ret
lods
popl
sbb
in
cmpsl
js
movsl
mov
bound
jle
cmc
rcrb
inc
mov
push
mov
scas
dec
cmp
lds
push
adc
ret
mov
cmp
arpl
push
fwait
add
sbb
cli
or
jae
push
mov
xchg
hlt
or
outsl
das
add
sahf
dec
add
ret
roll
or
inc
xor
lods
iret
and
and
pop
xchg
ret
das
mov
add
xchg
sub
and
jnp
cmp
rolb
pop
jg
cmp
ror
push
call
sbb
mov
cmovo
jo
fidivrs
xchg
add
jbe
add
jne
fiadds
xorl
sub
mov
sub
and
mov
or
xchg
daa
call
and
add
in
xchg
stc
jns
mov
shr
pop
add
mov
dec
imul
ja
xchg
sub
add
mov
roll
add
mov
call
add
jo
add
pop
loop
gs
sub
dec
mov
xchg
ret
sbb
mov
nop
shlb
adc
test
addl
dec
cmp
in
out
cli
inc
data16
add
rcll
lods
ret
cmp
movb
out
push
add
cmc
jno
mov
xor
rclb
mov
gs
add
into
fidivrs
rolb
add
lret
subb
mov
fcmovbe
jno
and
lds
hlt
inc
sub
int
mov
jbe
into
add
mov
testl
jp
jle
mov
outsl
and
lahf
inc
jno
fwait
test
sub
add
cmc
cli
pop
aas
popa
iret
in
xchg
loope
push
or
jb
xchg
cmp
mov
cld
je
movl
or
push
adc
in
and
mov
sbbl
dec
xor
jnp
ret
or
push
xchg
xor
rolb
xor
jmp
lods
push
inc
xchg
adc
sti
xor
and
pop
orb
push
stc
xor
stos
ret
add
in
dec
pop
jge
jne
add
addl
testb
mov
xchg
pop
je
imul
xchg
daa
or
or
jnp
add
hlt
das
hlt
add
jle
ret
or
xchg
sub
lret
dec
cmp
push
mov
adc
mov
shll
cmc
jo
arpl
cmc
cmp
mov
les
sub
addr16
sbb
out
scas
xchg
iret
mov
fidivrl
sahf
xrelease
pop
lds
inc
lea
roll
inc
xchg
mov
push
xorl
and
add
or
fisttpl
sbbl
xchg
adc
jp
push
jns
aaa
mov
mov
and
and
out
add
arpl
stos
jp
pop
das
pushf
rcrb
pop
pop
pop
lret
nop
bound
cmp
push
dec
fbld
loop
dec
xlat
ret
jne
das
and
or
mov
sbb
lds
es
into
pop
add
cltd
xchg
cli
jp
inc
loope
inc
sahf
push
leave
movsb
mov
mov
scas
dec
xor
cmp
mov
repz
xchg
add
mov
sbb
scas
jb
xor
stos
in
loop
or
push
out
or
sbb
mov
mov
ds
dec
inc
mov
and
lods
sbb
rcrl
jl
rolb
push
xor
inc
and
mov
dec
popa
mov
icebp
inc
ljmp
mov
test
add
sahf
arpl
add
jnp
fs
inc
cmp
inc
scas
fiadds
cmpsl
dec
bswap
and
sbb
jno
incb
and
lods
addl
jecxz
cmpsb
mov
popf
imul
mov
enter
sub
add
jns
leave
add
cmp
xor
adc
mov
inc
inc
cmp
push
mov
mov
out
add
pop
loop
cmc
mov
arpl
fnstenv
mov
cs
pop
mov
inc
xchg
jae
push
add
rclb
add
pop
cmpsb
push
cmp
cmp
es
add
or
push
insl
sti
gs
scas
add
mov
ja
inc
gs
push
int
fmulp
inc
and
arpl
out
les
gs
pushf
push
cld
sub
jp
fsubs
pop
mov
lds
addl
add
es
adc
outsb
fs
mov
test
jg
popf
pop
xchg
cmp
ja
fadds
adc
test
ljmp
pop
mov
mov
lds
push
aad
add
or
out
mov
shlb
sbb
sub
cmc
mov
push
loopne
add
xor
aad
sbb
mov
repnz
jle
ss
add
jp
lea
out
lret
adc
dec
pop
mov
cmc
imul
cmp
add
inc
push
and
sbb
mov
jle
and
sbb
arpl
add
jl
mov
ret
jns
dec
xchg
les
mov
lret
lds
lea
inc
int3
call
xchg
pop
mov
roll
add
inc
sub
jle
jmp
xor
sbb
lret
and
cmpsl
jge
xor
add
movsb
dec
loop
and
or
add
mov
ficomps
cmp
dec
xor
out
dec
push
addr16
aam
add
out
sub
pop
rcr
jb
xchg
stos
sub
out
pushf
xor
pop
movsb
add
jle
and
fldcw
add
es
sub
add
inc
leave
pop
stos
cwtl
jmp
sub
loop
sub
pop
add
mov
sbb
sbb
push
xchg
out
mov
xlat
cmp
in
push
push
imul
cmpsl
pop
mov
shll
mov
jg
test
adc
inc
sub
add
adc
push
insl
jae
dec
das
ret
or
add
pop
mov
js
add
fs
add
mov
sub
adc
cmp
dec
dec
stos
js
push
leave
push
clc
lret
shrb
jbe
sub
test
xchg
sbb
or
inc
add
cmp
cmp
mov
adc
add
sbb
dec
test
int3
or
lods
xchg
mov
and
dec
push
and
pop
jb
ljmp
lcall
stc
cmc
addr16
aaa
ret
clc
pop
in
test
ret
loopne
andb
adc
sti
movsb
pop
aad
mov
push
cmp
and
or
scas
es
xchg
lods
adc
inc
add
or
sub
xchg
cmp
pop
fistpll
push
daa
shrl
xor
scas
jmp
mov
cwtl
mov
jp
adc
mov
mov
push
adc
adc
lea
scas
and
mov
inc
out
ja
rorl
add
outsb
dec
scas
mov
push
cmp
add
js
nop
lahf
jp
test
pop
jno
push
mov
add
mov
mov
or
push
lods
lods
and
add
test
fs
scas
sbb
lods
imul
out
cltd
mov
stos
sbb
in
and
mov
arpl
xor
and
mov
inc
pop
ret
pop
adc
xlat
ja
loopne
leave
stos
into
add
js
les
aad
insb
pop
rclb
push
adc
dec
or
xor
adc
int3
or
push
mov
cmpsl
push
sbb
sbb
pop
arpl
adc
adc
xchg
xor
mov
jle
add
dec
add
inc
adc
daa
ret
mov
fbstp
cmp
std
mov
dec
jl
xorb
stos
and
std
sbb
push
cltd
popa
aaa
pusha
scas
enter
cmp
call
adc
jnp
or
cs
or
out
roll
push
add
cmp
pop
jge
rcr
push
aaa
cmp
or
mov
and
das
add
fdivrl
inc
xlat
cmp
adc
jae
or
sahf
mov
sahf
xchg
loop
xor
mov
outsl
mov
inc
jmp
popa
adc
je
xchg
xor
or
cwtl
xchg
std
jge
aaa
cmp
add
sbb
fstps
mov
ror
adc
sbb
leave
jp
test
out
cltd
sbb
sub
clc
adc
pop
sub
jp
dec
add
adc
mov
and
out
and
xlat
xchg
dec
jecxz
loop
in
xor
or
leave
xchg
sub
inc
cmp
leave
adc
lds
mov
ja
or
push
mov
cmpsb
add
and
bound
test
das
outsb
and
test
pop
ret
cmpsl
mov
pop
add
mulps
cmp
sarl
mov
sub
dec
leave
subb
subl
jp
movsb
cmp
cmp
push
icebp
or
in
ss
cmp
lods
bound
popa
pop
xchg
std
mov
sbb
aas
mov
pusha
adc
adc
cmp
sub
cltd
sub
mov
lahf
add
sarb
sbb
shr
mov
pop
add
pop
mov
aaa
mov
sub
mov
push
or
mov
inc
rcpps
adcl
jg
out
push
les
scas
push
les
sti
and
fwait
adc
add
add
mov
in
test
pop
ljmp
pop
jmp
add
sbb
add
adc
inc
pop
outsb
adcl
ret
mov
aas
dec
cltd
add
mov
sahf
mov
dec
lods
mov
pop
add
inc
cmp
jae
cmc
ret
jge
dec
mov
add
pusha
jb
gs
insl
shl
in
outsb
sahf
xadd
dec
rcl
push
and
dec
push
add
lret
jnp
pop
inc
gs
cmp
lret
addb
ss
pusha
ret
mov
add
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
ds
int3
pushf
dec
sbb
adc
lahf
jmp
lahf
clc
adc
pusha
lahf
roll
sbb
push
stc
jb
xor
dec
pushf
fcomps
mov
lahf
sub
lahf
negl
ret
or
cmpsl
rolb
fwait
out
loope
into
add
iret
cmp
cmp
fnstsw
and
movsl
aas
clc
aas
sti
aas
aas
aas
sbbl
or
sbb
or
mov
lret
inc
setge
cld
int
loope
push
xchg
rcl
aad
sbb
popf
jmp
daa
stc
stos
clc
or
adc
sbb
sbb
push
lahf
pop
lahf
and
and
es
daa
lahf
sub
sub
cs
das
lahf
xor
xor
ss
aaa
lahf
cmp
cmp
ds
aas
cmp
pushf
add
add
push
ds
aas
mov
mov
adc
xchg
aas
xchg
aas
sbb
and
and
aas
sub
sub
sub
sub
sub
sub
aas
xor
xor
xor
xor
xor
xor
aas
cmp
cmp
cmp
cmp
cmp
cmp
pusha
lmsw
je
jbe
js
jp
jl
jle
mov
or
jle
jle
dec
adcb
adc
adc
adc
adc
adc
iret
sbb
sbb
sbb
sbb
sbb
sbb
iret
and
and
and
and
and
and
iret
sub
sub
sub
sub
sub
sub
iret
xor
xor
xor
ss
stc
iret
cli
sbb
dec
or
or
or
adc
adc
adc
adc
adc
adc
aas
sbb
sbb
sbb
sbb
sbb
sbb
aas
and
and
and
and
and
and
aas
sub
sub
sub
sub
sub
sub
aas
xor
xor
xor
xor
xor
xor
aas
cmp
cmp
cmp
cmp
cmp
cmp
jg
popl
cmp
cmp
es
cmp
cmp
or
or
or
or
or
or
aas
adc
adc
adc
adc
adc
adc
aas
sbb
popa
aas
bound
daa
aas
das
aas
xor
xor
xor
xor
xor
aas
cmp
cmp
cmp
cmp
cmp
cmp
jg
iret
add
add
add
add
add
aas
or
adc
adc
aas
pop
aas
and
and
and
and
and
and
aas
sub
sub
sub
sub
sub
sub
aas
xor
xor
xor
xor
xor
xor
aas
cmp
cmp
cmp
aas
cmp
cmp
jg
add
lock
sti
hlt
add
add
add
add
cld
or
ss
or
push
push
adc
adc
adc
lahf
sbb
sbb
push
lahf
pop
lahf
and
and
es
daa
lahf
sub
sub
xor
mov
mov
addr16
inc
loopne
lock
dec
xchg
popf
out
mov
arpl
imul
xchg
sbb
js
cmp
dec
pushf
sbb
outsl
pop
mov
ss
enter
or
jo
mov
cmp
push
mov
scas
rcr
fs
hlt
sbb
mov
push
nop
or
xchg
mov
or
jb
je
jbe
js
cmp
popa
pop
lds
add
pop
in
call
adc
inc
orl
cmpsl
xchg
sub
jl
sub
xchg
mov
in
fs
mov
mov
cmp
and
inc
mov
lea
aaa
dec
adc
sbb
add
dec
adc
lea
adc
cmpsl
push
xchg
lahf
and
lods
out
out
out
out
loope
push
leave
rorl
imul
sbb
lods
lahf
stc
and
push
stc
mov
mov
repz
mov
idiv
cmp
sti
jns
xor
aaa
push
add
out
out
movsl
xor
cmp
cmp
cmp
cmp
cmp
cmp
leave
or
leave
add
add
add
add
movsb
lea
repz
xchg
popf
andl
push
xor
sub
lock
cmp
inc
dec
or
call
lfs
pop
adc
jle
jle
dec
mov
jle
jle
jle
ds
pushf
lret
xchg
and
jp,pn
aas
xchg
mov
mov
repz
mov
push
xchg
popf
mov
jp
loopne
dec
adc
fsubr
and
scas
lock
hlt
aas
cmp
lret
cmp
cmp
cmp
addr16
pop
push
jns
ret
pop
call
xchg
mov
cmp
cmp
pop
dec
mulb
roll
leave
sahf
push
test
xor
sbbl
call
iret
shrl
xor
cmp
mov
jb
push
and
xlat
jb
xor
or
popf
es
cld
pop
add
addr16
stc
cmpsl
jle
inc
lea
adc
cmp
cmp
dec
int
mov
mov
loopne
dec
repnz
cmp
add
lods
or
mov
addr16
cmpsb
in
rcll
fsubs
cmp
rclb
sub
or
cwtl
sub
sahf
icebp
push
mov
iret
mov
dec
add
push
ret
pop
rorl
jecxz
jb
int
out
out
out
movsb
sbb
cld
and
and
and
and
and
and
cld
sub
sub
sub
sub
sub
sub
cld
xor
xor
xor
stc
cmp
sarl
cmp
aaa
or
mov
and
popl
iret
pop
iret
or
or
or
or
or
cwtl
push
stc
psubw
stc
adc
adc
adc
adc
adc
stc
sbb
sbb
sbb
sbb
sbb
pop
push
daa
lahf
and
and
and
es
jb
dec
adc
lods
sub
sub
sub
stc
xor
xor
xor
cmpsb
xor
xor
aas
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sub
sub
popf
add
add
add
lahf
or
or
or
push
pop
jle
pop
cmp
adc
jle
jle
push
mov
push
iret
pop
iret
sbb
sbb
sbb
sbb
sbb
sbb
iret
and
and
out
out
in
rorl
sub
sub
leave
mov
stc
cs
das
stc
xor
xor
xor
xor
xor
xor
stc
cmp
cmp
hlt
adc
cmp
cmp
cmp
js
jp
jl
jle
or
or
or
or
sub
sbb
adc
adc
adc
adc
adc
out
out
in
sarl
sbb
sbb
repz
and
and
and
and
and
sub
cmpsl
sub
sub
sub
sub
xor
jle
jle
jle
je
iret
cmp
cmp
cmp
cmp
cmp
cmp
sbb
dec
add
add
add
iret
or
or
or
or
or
or
mov
out
out
stos
das
push
out
out
out
out
movsb
sbb
cwtl
sbb
cld
and
and
and
jle
jle
jle
jle
jle
jle
jle
mov
xor
xor
xor
xor
xor
cld
cmp
cmp
cmp
cmp
cmp
cmp
pusha
lea
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
dec
mov
or
aas
adc
adc
aas
sbb
sbb
sbb
sbb
sbb
sbb
aas
and
and
and
and
and
and
aas
sub
sub
sub
sub
sub
sub
aas
xor
xor
xor
xor
xor
add
out
out
out
out
out
out
out
out
out
cs
int
add
cmpsl
add
add
out
out
out
out
out
out
sub
loopne
adc
ret
stos
pop
repz
sbb
sbb
sbb
sbb
mov
jle
jle
jle
jle
jle
or
iret
and
mov
cs
in
nop
lret
sbbl
pop
add
andl
orl
jmp
cmp
dec
dec
push
cmp
iret
xchg
out
jnp
xorb
adc
adc
es
ss
bound
cli
dec
pop
iret
pop
jb
push
mov
adcl
aaa
cmp
orl
icebp
rorb
movsl
mov
or
and
or
int
mov
add
xchg
push
pushf
arpl
enter
cmp
sub
mov
dec
dec
add
popl
pop
pop
dec
les
shl
push
in
call
aam
add
push
or
leave
int
xchg
repnz
adc
sub
inc
mov
mov
dec
cmc
cmp
dec
int3
sub
add
adcl
cwtl
push
inc
mov
sbb
mov
dec
int3
fmul
jecxz
rorb
adc
sbb
adc
and
pop
int
loope
push
scas
dec
mov
popf
xor
mov
cmp
iret
sbb
adc
xchg
dec
push
pop
andl
xchg
outsl
sbb
xor
insl
int
push
pop
dec
loopne
test
stos
add
adc
or
and
inc
dec
jnp
add
mov
sbb
push
and
es
or
popa
int
dec
push
push
pop
jb
xor
dec
xchg
roll
into
cmc
in
sub
cmp
and
or
adc
push
insb
mov
bound
mov
add
cmp
push
dec
inc
cmovbe
push
add
sub
rorb
cltd
inc
pop
and
add
ret
rolb
mov
sub
xchg
cmp
push
push
cmp
outsb
js
cli
loope
add
xor
pop
inc
dec
loopne
cli
shll
mov
cs
lods
sbb
orl
adc
stc
sub
cmpsl
or
ret
or
jo
push
sub
adc
xchg
cmp
ja
adc
xchg
movsl
sbb
mov
mov
jg
mov
pushf
xor
nop
dec
iret
mov
aas
and
and
cmpsl
ret
shll
jbe
jle
xchg
andps
aaa
jo
enter
dec
inc
mov
scas
in
xchg
sbb
inc
mov
js
add
adc
mov
adc
and
sub
push
adc
fldcw
or
in
imul
movsl
jb
add
xor
inc
jae
or
or
adc
out
push
scas
push
cltd
dec
pop
adcb
pusha
xor
and
pop
pop
int
lods
sub
xor
mov
push
mov
xchg
scas
test
dec
dec
dec
pop
setae
xchg
inc
mov
xchg
sbb
or
fimull
push
cwtl
dec
dec
decl
push
movlps
dec
lods
inc
hlt
iret
mov
sbb
add
test
loopne
mov
lret
inc
and
xchg
adcb
push
or
jb
je
or
mov
sub
or
pushf
jno
mov
and
ret
int3
push
stc
dec
push
dec
scas
cmp
in
arpl
fidivrl
mov
push
mov
pop
sub
cmovl
push
inc
sub
add
push
or
test
add
outsl
orl
dec
push
xchg
lock
loopne
into
insb
movsb
aad
das
and
and
pop
imul
xchg
pop
xor
loopne
inc
dec
imul
mov
int3
mov
repnz
sub
out
lea
mov
movsb
and
or
loop
sub
mov
loope
cwtl
iret
and
mov
fisttpl
faddl
add
add
in
call
mov
cmp
cmp
shll
sbb
movsb
ss
add
subb
iret
imul
test
add
xchg
and
cwtl
or
dec
add
xchg
leave
push
jb
hlt
std
sbb
dec
push
iret
pushf
popa
adc
and
outsl
inc
or
dec
in
push
xor
popa
and
push
sub
sbb
int
setg
push
mov
fildl
lods
or
sbb
loope
push
xor
add
adc
or
or
adc
into
jl
inc
dec
pop
or
cmp
cmp
daa
mov
movsb
loopne
jb
adc
pop
out
jge
push
int3
push
sbb
push
ror
or
and
dec
les
xchg
shlb
sub
dec
idivb
push
dec
lea
sub
loop
repnz
mov
std
jb
gs
cmp
lods
pop
adc
movsl
or
ret
lcall
mov
popa
add
sbb
push
dec
fmull
icebp
int3
cmp
or
pop
add
dec
mov
sbb
int
xchg
cmp
xlat
mov
xor
rorb
sub
inc
jb
je
ss
pushf
shlb
mov
adc
add
mov
lss
xor
inc
xor
mov
dec
rorl
sub
sbbb
movsl
mov
xor
xchg
add
mov
test
xor
inc
cmovp
cmp
adc
jge
xchg
dec
movsb
das
sub
inc
xor
sbb
addr16
subl
addl
dec
lea
sbb
and
push
ret
inc
dec
xchg
cwtl
test
push
orl
lea
sbb
or
leave
mov
leave
jne
mov
mov
or
int
xchg
leave
pop
push
gs
ljmp
les
sbb
push
popf
jno
fadds
xor
dec
int3
xchg
pop
xor
dec
out
rclb
es
push
and
pop
dec
and
jg
xchg
sbb
sbb
outsb
push
dec
or
mov
pushf
imul
xchg
push
rclb
mov
push
xchg
movsb
sub
and
lea
mov
and
cmp
adc
add
adc
rcr
sbbl
shlb
iret
mov
and
lret
inc
js
pop
mov
add
mov
push
dec
push
mov
jb
pop
mov
xchg
ss
or
loope
push
into
and
test
pusha
mov
xchg
or
add
mov
jb
lahf
push
xchg
mov
test
inc
mov
inc
mov
ficoms
xor
adc
rorl
inc
push
insb
dec
xchg
dec
pop
push
lods
or
adc
enter
xchg
call
inc
cmp
push
cmp
and
or
dec
es
fisttps
daa
lock
or
cmp
mov
into
or
in
add
rorl
xor
lock
pusha
ja
adc
nop
in
das
lods
and
pop
int3
fisubrs
test
scas
jb
mov
or
mov
fwait
xchg
add
push
cmpsl
dec
daa
dec
adc
inc
mov
dec
sub
add
leave
lods
adc
or
adcl
sbb
dec
shlb
jp
sbb
test
or
cwtl
cmp
and
jg
push
pop
inc
or
or
or
or
mov
dec
sti
adc
add
or
or
popa
dec
mov
sub
push
add
and
cmp
sub
dec
jae
mov
lea
mov
xchg
addps
xor
adc
dec
std
or
push
or
jmp
sbb
or
pushf
sbb
cmp
xchg
and
ds
pop
aam
sbb
add
inc
loope
mov
js
adc
sub
push
je
adc
cmp
add
xor
inc
or
push
or
gs
xor
and
xor
lahf
dec
into
fiaddl
sub
sub
add
or
mov
loop
cmp
dec
mov
dec
into
stos
xor
psubq
push
stc
xor
or
adc
int
xchg
cmc
mov
mov
inc
aaa
inc
repz
adc
dec
xchg
mov
cmpsb
mov
or
je
adc
cmp
sbb
loope
push
aam
test
lock
pusha
jb
lret
aaa
cmp
test
adc
dec
or
ficompl
aaa
lret
sahf
dec
cmp
jno
scas
or
or
gs
addr16
mov
loopne
xchg
loop
pop
inc
mov
jns
mov
add
xor
mov
inc
mov
mov
mov
adc
stos
sbb
add
sbb
dec
pop
dec
pop
jb
xor
mov
mov
cmpsb
movsl
mov
cmpsb
xor
cmp
adc
adc
and
sub
mov
sub
mov
into
jge
mov
pusha
cmp
dec
pop
les
pop
or
and
xor
or
hlt
push
and
sub
lret
out
dec
or
mov
xor
push
loope
aas
push
dec
push
in
roll
fbld
jle
lahf
ret
inc
sbb
mov
inc
dec
push
into
or
xor
add
dec
dec
rcll
xor
add
das
mov
out
cltd
or
andb
push
pusha
pop
dec
out
pop
mov
popf
inc
ror
mov
cmp
shll
mov
clc
pop
test
or
dec
adc
sahf
adc
and
test
xchg
movsb
mov
dec
iret
adc
into
shll
sbb
push
mov
shll
add
pop
orl
dec
popf
rclb
je
aam
fldenv
or
lea
mov
int3
into
bound
sub
lretw
imul
arpl
sbb
dec
jb
mov
pop
cmp
leave
ret
and
adc
lret
and
out
add
int
push
pop
cmp
cmp
dec
mov
sub
or
sbb
cmp
test
sbb
mov
into
pushl
enter
loopne
cmp
adc
mov
mov
jg
adc
in
lret
das
add
imul
sbbl
rclb
mov
sbb
bound
or
lods
add
popa
xchg
jnp
int
mov
cltd
cmp
sub
sbb
cmp
cmp
daa
sub
xlat
and
cwtl
ds
xchg
push
mov
pushf
sahf
sbb
push
stos
test
adc
xor
and
dec
mov
mov
daa
sbb
mov
addr16
cmp
xor
cmp
add
fcoms
stos
adc
jecxz
les
sub
mov
stos
jno
or
mov
push
push
and
or
rcll
into
sub
mov
adc
or
cmp
and
lds
cld
test
rorb
push
sub
push
adc
adc
and
xchg
dec
mov
leave
ret
or
fldenv
das
int
push
arpl
aaa
sbb
and
adc
out
xchg
jbe
dec
mov
push
adc
xchg
and
push
or
adc
mov
or
movsb
or
add
pop
xorl
into
pushf
xor
pop
and
ret
sbb
mov
cmp
cmpl
sbb
setae
outsb
xor
adc
test
push
or
int3
mov
test
push
mov
dec
stos
mov
mov
stos
int
push
mov
lds
xchg
les
sbb
and
adc
cmpsl
js
jle
sbb
call
xchg
sbb
cmp
leave
mov
sub
xor
int
push
pop
mov
mov
decl
mov
in
call
insb
cmp
sub
mov
lea
loope
sbb
std
lds
sbb
xor
imul
clc
dec
push
mov
leave
dec
rcll
shll
mov
push
or
dec
pop
out
xchg
popa
mov
int3
xchg
popf
and
pinsrw
stc
fistpl
sbb
adc
sbb
test
push
movsb
lahf
or
cs
lea
add
mov
dec
push
pop
and
adc
and
repnz
sbb
test
sbbl
pop
sbb
or
push
sbb
mov
xchg
in
dec
in
xchg
fidivrl
test
mov
mov
push
or
dec
sbb
push
fwait
xchg
mov
adc
dec
mov
lds
jns
push
test
adc
push
and
mov
push
test
push
sbb
inc
xchg
sub
pop
jmp
hlt
addr16
sbb
adc
popa
cmp
jg
lea
iret
outsb
xchg
jb
inc
cmp
or
inc
or
dec
sub
pop
pop
into
lea
int
in
bound
xor
dec
dec
int3
pusha
out
mov
sub
adc
add
inc
maskmovq
testl
ss
xchg
mov
or
lcall
test
inc
clc
push
orl
pop
je
jbe
dec
sub
and
mov
jl
pusha
push
or
and
xor
dec
or
xor
addps
imul
xor
mov
xor
push
xorb
out
add
mov
adc
xchg
outsb
xchg
mov
cmp
jg
add
xchg
rclb
push
bts
push
adc
rol
push
adc
sub
mov
test
dec
and
not
mov
and
sar
mov
sub
sub
setno
pusha
lods
stc
not
clc
not
rol
pushf
movb
movb
pusha
dec
pushf
call
movb
shr
jmp
sub
mov
mov
mov
stc
daa
xchg
add
sub
testl
shrb
jnp
inc
push
push
adc
je
cmpsb
mov
fisubrs
push
inc
push
pushf
push
xor
xchg
pop
out
push
xchg
adc
sbb
js
pusha
insb
into
adc
xchg
sbb
es
or
aaa
mov
xor
int
xchg
aas
lahf
dec
and
call
cmp
imul
loope
mov
cli
sbb
cmpb
cli
and
repz
fcomps
sarl
xor
lcall
sbb
cld
jns
mov
idivb
lods
sub
xchg
push
aam
hlt
or
xchg
jno
xor
out
push
sub
test
add
arpl
push
push
scas
cmpsb
pushf
push
testb
dec
push
mov
add
sub
cmp
aam
add
or
adc
cs
mov
mov
and
ds
mov
sbb
and
loopne
mov
or
mov
dec
jo
mov
jl
icebp
mov
adc
mov
jle
clc
lret
shlb
insb
push
pop
sub
jbe
mov
rcl
int
jo
fidivl
daa
in
jae
xchg
inc
divl
sahf
adc
loopne
sub
in
xchg
jno
rorb
leave
mov
dec
mov
sbb
push
mov
and
jmp
mov
add
inc
test
sub
mov
xchg
push
insb
xor
je
and
mov
arpl
xor
das
push
push
sbb
or
aaa
add
js
sub
push
mov
inc
cmc
mov
jbe
jne
icebp
jecxz
repz
lock
cmp
mov
adc
and
push
pop
addl
lds
push
out
pop
push
mov
mov
inc
icebp
adc
nop
mov
push
popf
test
sbb
push
mov
xchg
jo
cwtl
pop
lods
imulb
jno
cs
aad
movsb
pop
lret
push
lcall
cmp
sub
dec
and
sbb
lds
push
scas
pusha
inc
test
lret
call
std
and
sub
sti
mov
dec
sub
mov
scas
mov
sub
sub
xor
cmp
sub
mov
dec
push
jmp
pop
mov
js
push
jae
sub
xor
ss
icebp
dec
push
jmp
scas
xchg
or
scas
mov
sbb
dec
out
xchg
jno
daa
js
arpl
adc
sti
dec
popa
test
or
mov
sbb
jb
mov
push
cmp
pmuludq
sbb
ljmp
mov
mov
jbe
sbb
outsl
aam
nop
mov
jb
je
mov
sub
cmp
adc
mov
fmull
ret
and
in
cmpsb
sbb
and
rolb
mov
adc
or
jp
xchg
clc
mov
cmpl
mov
mov
insw
cld
adc
sbb
jo
fsubrl
cmc
and
and
adcl
xchg
sbb
les
inc
sub
jae
mov
test
mov
push
mov
lea
dec
not
mov
ficompl
sub
nop
jae
bound
and
mov
mov
or
mov
mov
cmpsb
movsb
pmulhw
xchg
cmc
aad
xchg
mov
outsl
fists
icebp
jns
add
xchg
insl
std
dec
orl
pop
mov
out
pop
test
in
loope
inc
mov
push
inc
int
or
lds
enter
incb
add
push
sub
cs
mov
cmp
das
dec
pop
rolb
repz
push
loop
out
pop
scas
into
fistpl
mov
orb
dec
cmc
cmp
dec
fwait
popa
es
or
pop
dec
add
xor
out
test
movsl
inc
push
mov
mov
inc
jmp
stos
dec
adc
mov
pop
jge
cmp
in
enter
fincstp
imul
push
push
lock
inc
loop
enter
xchg
insl
test
fucompp
dec
xor
or
test
mov
lea
call
push
lea
jmp
sub
in
sub
xchg
aaa
or
xor
xor
jmp
mov
and
and
push
int3
insl
pop
add
aas
add
pop
pushl
lcallw
divb
xor
dec
mov
mov
dec
or
in
push
push
stc
cmp
shlb
dec
mov
or
int
xlat
mov
cs
sub
mov
ss
loope
inc
in
inc
loope
mov
lods
dec
test
ja
push
pop
sub
movsb
and
push
or
mov
mov
data16
or
lret
push
mov
inc
xchg
mov
loop
jb
and
push
sbb
pop
cli
add
daa
shll
jae
stos
stos
jmp
shl
xchg
stos
xchg
andb
fsubrl
cmp
cld
out
pop
cs
push
fdiv
lahf
xlat
inc
sti
setb
sbb
hlt
mov
gs
xor
jge
popf
in
xchg
insb
add
cltd
movsl
lods
dec
dec
push
clc
or
inc
or
or
aad
cmp
cmp
sbb
mov
or
dec
mull
or
popa
sti
int
outsl
dec
imul
mov
push
aas
je
sbb
cmp
jp
repz
stos
jmp
pop
mov
jae
mov
stc
popa
or
and
pop
xchg
xchg
shrl
call
ror
add
xchg
push
out
stc
mov
pushf
bound
mov
cmp
or
rclb
cmpl
xchg
xor
add
je
inc
in
xchg
imul
faddl
clc
ja
xor
mov
and
sbb
mov
in
in
pushf
xor
adc
inc
sub
push
or
je
xlat
insw
scas
pop
icebp
sbb
aas
lahf
cmp
or
testb
outsl
and
clc
out
lock
jnp
addr16
push
pop
inc
ljmp
les
loope
sub
inc
aaa
add
and
jecxz
push
inc
insb
decl
lret
mov
jne
dec
jb
clc
ds
sbb
repz
hlt
aaa
and
lret
pop
adc
mov
mov
addb
mov
test
mov
mov
inc
data16
cwtl
push
pop
or
cmc
stos
iret
mov
ja
out
cmc
fnsave
adc
mov
pop
jge
jbe
pop
icebp
mov
or
and
stos
cld
and
pop
loop
fsubs
aad
fistps
into
movsb
repnz
xchg
sub
and
lahf
dec
sbb
sub
iret
push
pop
xchg
scas
inc
idivb
out
xchg
sub
jb
push
incl
adc
dec
pop
outsl
jnp
imul
orl
adc
jne
int3
sub
cmpl
and
mov
pop
outsl
std
mov
cltd
loopne
dec
outsl
subb
cld
inc
mov
shlb
xor
adc
xor
pop
cs
pop
jle
mov
stc
pusha
enter
clc
jecxz
xchg
decb
jg
mov
ss
sbb
jns
jg
in
xchg
push
cmc
insl
mov
add
popa
notb
outsl
mov
xlat
out
fidivrl
xchg
cltd
pop
icebp
xor
outsl
cs
sbbb
xor
push
inc
fcmovnbe
enter
mov
mov
bound
movsl
loope
rsm
adc
icebp
adc
sub
fwait
das
add
ljmp
movl
push
xchg
loop
gs
and
in
push
and
sub
cmp
cmpsb
mov
lods
dec
mov
jmp
jne
in
in
xchg
mov
incb
sbb
push
mov
stc
sti
and
enter
cmp
enter
aad
fldenv
or
enter
lods
and
and
xor
clc
fucomp
xchg
imul
add
lods
and
jmp
les
js
push
leave
cmp
add
scas
adc
xor
fxch
pusha
push
sbb
mov
xchg
popa
sub
mov
mov
enter
and
fnstcw
mov
js
mov
xor
or
mov
fstps
dec
clc
hlt
xor
add
pop
lahf
dec
or
jmp
imul
push
sub
dec
jae
loop
sbb
fcomp
fcomps
jo
testl
xchg
mov
mov
and
aaa
test
mov
test
mov
adc
in
xchg
push
jne
mov
jnp
xlat
add
loope
cmp
out
ret
jns
in
and
mov
sahf
imul
sbb
mov
and
jg
xor
mov
arpl
inc
lods
in
or
and
fcoms
out
cmp
lcall
pop
out
sti
adc
xor
pop
fprem
lods
rorl
addb
mov
jns
xchg
lret
stos
sbb
mov
jne
gs
mov
cmp
inc
cs
jge
or
cmp
xor
push
push
mov
in
pop
in
sbb
mov
rorb
pop
lds
pop
fdivr
in
xchg
addr16
sub
dec
fidivl
cld
xchg
daa
sub
repz
sahf
cs
cmp
aam
lea
lcall
bound
mov
sbb
sub
inc
pop
mov
lahf
jbe
stos
mov
repz
dec
pusha
ret
cmpsb
jns
jne
xorb
inc
fcmovnbe
iret
sahf
ss
inc
sub
xchg
pop
cmp
xlat
pusha
repnz
sbb
pushf
mov
and
jno
out
outsl
pop
sub
imul
mov
icebp
xor
rorb
xchg
addr16
jge
fwait
sbb
lods
mov
pop
fwait
push
je
mov
sti
and
addr16
sti
enter
mov
jl
test
movd
adc
ret
add
mov
call
mov
xor
les
xchg
add
and
rorl
cmp
sub
mov
jl
adc
fistpll
and
cmp
add
mov
imul
decb
lahf
out
mov
mov
inc
mov
test
test
push
pop
rorb
sbb
test
mov
mov
cmp
lods
dec
loop
ficoml
fs
and
js
jge
js
and
fisubrl
or
xchg
movd
lods
loop
outsb
mov
and
into
pop
and
icebp
dec
gs
fiadds
pop
pop
rolb
and
mov
push
loopne
lret
mov
push
push
xchg
sbb
push
pop
sub
push
ljmp
mov
dec
jmp
jb
fucompp
lea
mov
or
xor
dec
div
mov
mov
je
push
es
add
lcall
push
or
nop
sub
xchg
jns
imul
mov
insb
jecxz
sbb
in
add
enter
in
movsl
sbb
inc
add
push
mov
inc
repnz
mov
in
xchg
gs
sbb
arpl
dec
push
pop
mov
push
loopne
sbb
test
and
jmp
mov
cmp
xchg
mov
hlt
aad
push
xor
std
ljmp
cwtl
and
shl
lea
or
dec
ljmp
dec
pop
cli
jmp
ret
outsl
rorl
inc
dec
add
cltd
arpl
fdivr
bound
movsb
int3
mov
and
mov
mov
pop
insl
adc
dec
mov
out
lcall
adc
out
int3
dec
and
outsl
cmc
dec
outsl
xchg
xorb
fistpl
cmp
jp
xchg
inc
inc
iret
sti
pop
push
cmp
ror
ss
xor
push
pop
push
ds
lcall
dec
and
push
add
into
xchg
xlat
mov
xchg
and
test
leave
data16
pop
cmp
imulb
add
or
mov
jne
imul
stos
sub
mov
jle
inc
loop
xchg
xlat
movsb
push
out
int
dec
sbb
sub
daa
enter
insl
test
movsb
pop
adc
adc
arpl
aam
jae
imul
movsl
lock
sub
or
mov
sub
push
mov
int3
repnz
fdivrl
das
dec
lock
aas
lock
xchg
in
bound
divb
cmp
and
lods
jge
push
mov
pop
xor
aad
mov
mov
xor
push
rolb
xchg
out
jnp
mov
leave
push
ret
mov
xlat
or
or
sub
test
int
popa
mov
jnp
mov
mov
inc
dec
insb
lret
xchg
stc
inc
mov
add
les
cld
jmp
mov
incb
pop
pop
data16
adc
cwtl
hlt
pop
in
popa
cmp
iret
fdivrs
adc
jge
sahf
push
xor
push
push
xchg
sbb
mov
xor
lods
mov
adc
fsubl
fadds
fldt
in
xchg
arpl
xchg
sub
das
cmpsl
cmp
sbb
jo
sbb
cmp
and
loop
stos
cmpsl
iret
lcall
pop
std
aas
jne
test
cmp
mov
ficompl
inc
sub
unpckhps
in
jl
adcl
cltd
ljmp
pop
jmp
and
xor
subl
js
sbb
xchg
xchg
sti
addb
jle
cmp
jo
test
fadd
bound
xor
jge
stos
xor
repnz
xchg
aas
add
mov
lret
rorl
pop
nop
sbb
repz
or
sub
jmp
xchg
push
fiaddl
out
repz
mov
cltd
popf
in
xchg
bound
in
inc
icebp
lods
xchg
clc
les
xor
stos
pop
rclb
push
popf
or
add
add
sbb
gs
outsb
loope
or
loop
sbb
mov
lcall
out
or
mov
aaa
icebp
dec
jne
sbb
gs
pop
pop
repz
call
lahf
testl
pusha
cli
enter
pop
es
sub
loope
popa
mov
rcrl
shrb
ja
or
mov
aam
push
aam
inc
arpl
mov
xchg
inc
clc
inc
mov
and
out
push
popa
xor
insl
lods
lock
sbb
sub
hlt
jp
push
in
ret
leave
shll
sarb
jg
add
test
sub
push
push
orb
adc
xor
dec
aas
or
aam
xor
xor
test
adc
dec
cmpsl
lret
pusha
sbb
out
popa
test
dec
and
cltd
mov
aaa
sarl
iret
ja
aam
cmp
sub
pop
mov
cmp
pop
rcrb
push
negl
insl
test
add
cltd
pop
flds
jns
jmp
popl
loop
xor
cmp
adc
and
pop
or
and
imul
mov
cli
jmp
or
mov
pop
repnz
pushf
and
cmc
pusha
les
inc
push
int3
out
xor
aad
or
lea
andb
aad
cmp
or
out
push
jnp
andb
idiv
addr16
add
and
mov
mov
or
jnp
fadds
mov
and
pop
jnp
loope
shlb
sbb
adc
loopne
xchg
add
sub
ret
pop
cmpl
xchg
pusha
ret
mov
add
adc
pushf
lea
jae
push
not
not
mov
jmp
mov
cmpsb
pushf
inc
inc
les
ljmp
jge
push
lret
inc
inc
mov
xchg
adc
iret
pop
inc
dec
imul
xchg
mov
xchg
jns
popa
xchg
cwtl
push
add
in
lds
and
fabs
nop
mull
fstpt
mov
mov
out
aad
jecxz
mov
int
cmp
inc
mov
lret
or
movsl
cmp
adc
jo
scas
push
pop
in
hlt
mov
xor
outsb
popa
sbbb
inc
stos
and
jge
scas
in
xchg
pop
adc
lods
movsl
sbb
hlt
mov
cs
ljmp
repnz
ret
loope
gs
leave
lock
jo
aam
repz
daa
cmp
incb
andb
dec
cmp
stos
cwtl
lcall
test
and
sub
repz
insb
fisttpll
sub
cmp
or
jg
sub
aam
loopne
push
pop
jmp
insb
push
inc
mov
nop
pop
mov
mov
daa
mov
ljmp
mov
xor
mov
mov
sub
sti
and
push
inc
cmp
stc
shl
cltd
cmp
sahf
inc
adc
out
sub
mov
adc
in
test
loopne
rcrb
enter
sub
jmp
lcall
push
jecxz
mov
inc
mov
arpl
dec
in
xchg
pop
xor
fisubs
dec
lock
jb
jnp
inc
int
mulb
rolb
xor
outsl
and
into
xor
scas
adc
lea
sub
repnz
dec
jecxz
nop
movsl
pop
out
shrl
jns
jo
cmpsb
cmpsl
or
adc
push
mov
pop
movl
sbb
shl
sbb
jo
ret
call
pop
jo
push
or
dec
dec
xchg
flds
mov
iret
dec
cmpsb
loope
roll
dec
stos
enter
jle
outsl
into
test
call
sbb
orb
imul
mov
in
call
cli
pop
loope
fstpt
xchg
xchg
test
sub
pop
daa
movsl
mov
subb
jo
mov
pop
sbb
sti
aad
notl
out
jmp
test
pop
nop
inc
xchg
xchg
jl
in
xchg
pop
mov
sub
xlat
mov
lret
pushf
stos
push
pop
insb
mov
rcrb
or
pop
lds
fsubp
ja
mov
ret
loope
adc
mov
jbe
sti
add
insl
jp
mov
insl
xor
xchg
or
cli
je
aaa
cmp
cmp
mov
cmc
test
dec
mov
lahf
mov
fcmovnu
xchg
jl
adc
jle
cld
cmp
sbb
lods
inc
out
pop
pusha
scas
mov
sbb
jmp
dec
inc
ficoml
xchg
mov
inc
xor
or
js
mov
ljmp
mov
enter
loop
jp
out
push
out
imul
in
xchg
pop
test
movsb
xchg
das
xchg
ja
cmp
cltd
sbb
pop
enter
jmp
mov
lods
je
rcrb
add
jmp
sbb
adc
das
xchg
dec
subl
sarl
cli
jns
std
out
dec
jo
loopne
push
shll
cwtl
ds
and
stc
leave
scas
cwtl
rorl
int3
jo
cmpsb
aaa
adc
sub
xchg
push
jl
in
into
dec
mov
in
insl
test
sahf
adc
xor
xchg
pop
dec
inc
mov
ds
and
mov
mov
gs
mov
imul
jmp
push
ficoml
pop
loop
mov
sbb
add
mov
sbb
stos
jle
add
mov
jno
ds
push
mov
mov
jmp
or
into
push
jl
int
dec
or
push
inc
out
xchg
fisttpl
js
lock
cmp
test
push
xlat
movsl
adc
mov
xor
jns
popa
aaa
test
faddl
pop
xchg
sti
leave
jnp
repz
dec
pop
pop
or
hlt
adc
cltd
mov
mov
mov
pop
fbld
xchg
inc
mov
adc
fcomip
inc
mov
mov
push
fidivl
loop
dec
stos
xchg
jle
sbb
jnp
jnp
push
loop
lret
pop
dec
int
mov
sti
adcb
jno
data16
mov
cmpsl
js
push
iret
out
mov
dec
aad
xchg
inc
fmull
dec
or
push
cmp
add
call
add
rorb
pop
mov
push
add
and
sti
and
test
push
add
mov
jno
jnp
outsb
les
jecxz
int
sub
adc
fwait
subl
mov
and
in
stc
sbb
nop
test
jne
stos
movsb
shlb
pop
cmp
xchg
incb
mov
mov
pop
jne
test
dec
xorb
pop
adc
jne
pop
jecxz
lret
mov
and
sbb
in
retw
leave
sbb
movsb
fdivl
mov
jbe
jb
mov
ljmp
cmp
xchg
pop
aas
jo
not
call
movl
pushf
lea
jne
jmp
cmp
call
mov
sub
decl
dec
inc
sub
imul
movsb
mov
insb
fidivrs
dec
imul
cltd
fistpll
nop
sbb
arpl
clc
es
pushf
clc
lods
aad
lods
mov
lea
mov
fldt
push
jae
pushf
leave
outsb
xor
dec
dec
and
dec
sbb
sub
pushf
loopne
pop
scas
push
fnstenv
add
mov
or
test
xchg
pop
adc
adc
mov
dec
mov
popa
adc
cld
dec
mov
clc
sbb
mov
loopne
xor
mov
push
and
cmp
div
mov
or
xor
jg
jge
inc
mov
test
cmpl
xor
cmp
lcall
add
enter
mov
sahf
pop
pop
or
stos
lret
ret
test
push
jle
pop
jg
outsb
pop
pop
clc
and
jns
js
push
addr16
loope
stc
push
mov
push
arpl
mov
and
pop
insl
daa
std
pop
daa
jbe
fsubl
inc
sbb
ljmp
xchg
les
mov
pop
lds
outsl
pop
and
nop
pop
shrb
fsubrs
or
jno
xchg
inc
mov
push
mov
jno
xchg
stos
or
add
outsb
push
jne
stc
sar
in
mov
cmp
pop
sbb
pop
push
inc
aaa
push
pop
adc
dec
inc
mov
mov
orl
add
in
push
and
test
xchg
pop
mov
aam
std
xor
outsb
inc
clc
fldl
and
xchg
call
inc
cld
fisubrl
outsl
hlt
pop
rcrl
pop
mov
or
mov
test
jl
mov
pop
insl
sbbb
repnz
dec
loop
xor
inc
ja
lock
and
aam
sub
xchg
lret
ror
fisttpl
add
xor
inc
mov
xlat
lods
add
shr
fs
or
rorb
adc
xor
stos
rolb
bound
xchg
push
gs
fisubs
jne
fwait
and
sbb
push
ret
and
fcompl
jecxz
int
xlat
scas
xchg
sbb
xchg
push
fidivrl
mov
push
je
push
inc
jbe
fsts
aad
hlt
jmp
mov
outsl
pop
test
mov
aam
mov
test
or
adc
mov
add
and
aad
outsl
cmp
imul
xchg
and
or
push
das
pusha
ljmp
lods
les
jbe
or
imul
add
popf
test
test
mov
faddl
movsl
aam
mov
mov
pop
lock
faddl
mov
es
xor
cmpsl
or
push
int3
cmpl
mov
hlt
rcll
nop
push
sahf
jnp
push
mov
cmpsb
jg
out
dec
push
cwtl
push
shrb
cwtl
jle
xlat
ljmp
add
xor
sbb
pop
sbb
jmp
fildll
and
cwtl
push
loope
push
pushl
popa
sbb
insl
aad
jo
cmp
xchg
repz
xor
jmp
cmp
lods
jo
insb
pop
jle
and
cmp
mov
mov
add
cmp
xchg
push
movsl
subl
movd
push
test
fistps
push
bnd
jno
out
jle
jmp
addr16
leave
mov
fnstcw
inc
sbb
shll
cmpsl
mov
roll
addl
aas
push
pop
clc
xchg
and
cmp
mov
aas
pop
stos
sub
subl
mov
dec
mov
xchg
pusha
xlat
dec
mov
in
icebp
inc
push
jp
sarl
dec
imull
sub
mov
cld
repnz
movsl
mov
push
iret
loop
xor
jle
adc
and
inc
data16
sub
push
jecxz
ret
pop
xchg
xchg
push
rorl
and
mov
mov
lds
gs
lcall
sbb
test
test
sbb
daa
sarl
sbb
gs
into
cmp
loopne
inc
sub
fsubl
cs
loop
ds
and
or
cmp
jge
test
xchg
push
inc
adc
fildll
jp
aam
sbb
jmp
fistps
scas
mov
mov
clc
mov
cmc
aas
pop
push
mov
or
pop
cmpsb
jb
inc
xchg
inc
mov
xchg
push
xor
and
ss
adc
cmp
je
enter
out
push
push
movsl
cmpsl
in
jmp
push
ds
mov
add
sar
sbbb
dec
daa
pop
test
pusha
mov
and
cmp
dec
call
mov
idivb
mulb
cli
out
add
or
xchg
ret
mov
mov
or
test
loop
and
lock
jmp
mov
or
mov
jae
xchg
jnp
stos
sub
packssdw
adc
out
pop
xor
sbb
cmpsb
fstpl
push
mov
cmc
pop
cmp
xor
dec
int
jo
inc
repz
dec
inc
push
jae
outsl
enter
pop
loopne
mov
mov
xor
xchg
push
hlt
sub
xlat
outsb
pop
cmp
cmp
inc
shlb
fwait
add
fwait
popa
imul
xor
mov
fisubs
filds
mov
dec
xchg
or
scas
pop
cmp
js
cld
sarb
mov
sahf
pop
adc
js
and
pop
or
imul
ss
add
adc
test
mov
loopne
cmpl
push
pop
loopne
mov
mov
movsb
xchg
mov
or
pop
mov
mov
frstor
and
xchg
jnp
popf
aad
movsb
sub
pop
sbb
and
adc
dec
leave
dec
ja
mov
push
cmp
cmp
shll
iret
cmpsl
add
xchg
gs
ficoml
pop
sarb
jno
lods
jecxz
lock
fstpl
or
in
xchg
push
rcr
scas
stc
or
call
pop
sbb
push
jo
cmp
jp
add
xchg
push
in
pop
adc
rclb
and
inc
jp
insb
push
xor
outsl
sti
or
insb
fistps
jne
sar
push
cmp
mov
out
and
movsl
jno
cld
sahf
daa
js
rorl
rcr
test
xchg
int3
das
addr16
adc
push
lret
insl
add
jecxz
test
push
sbb
adc
bound
int3
mov
inc
stc
rorb
test
push
rcr
ss
pop
rolb
cltd
xchg
std
mov
jecxz
dec
and
fimull
hlt
xor
rcll
out
frstpm(287
inc
rcrb
xor
or
jge
jns
fdivrs
push
adc
test
sbb
pusha
push
pop
xor
jae
aas
inc
mov
mov
push
aam
int
imul
xchg
shl
shr
dec
js
or
push
mov
cmp
in
xchg
push
scas
loopne
movb
xor
pushf
cmc
repnz
pushf
pusha
pushf
jmp
add
stc
movzwl
rcl
mov
jmp
negl
ret
mov
mov
pop
mov
dec
and
adc
test
or
cli
mov
fst
idiv
pop
adcl
scas
push
iret
lods
or
ljmp
les
lea
jg
push
mov
dec
mov
fldcw
sbb
mov
mov
test
and
jns
stc
lods
mov
test
and
jmp
xchg
and
ret
stos
jnp
stos
call
jns
jg
out
pushf
filds
mov
lock
imul
andl
outsb
adc
xchg
jp
add
inc
int3
ja
xor
sar
mov
cld
push
or
mov
xor
int
testb
push
clc
outsb
iret
arpl
sbb
cmc
sbb
sbbb
fs
jne
pushf
pushf
mov
call
push
inc
xchg
in
fisubrl
lock
mov
mov
call
pop
xchg
pop
loope
ljmp
fistl
mov
call
jl
cmp
scas
mov
cli
xor
dec
sahf
jecxz
cmp
dec
mov
xchg
bound
sub
rcr
pop
pop
data16
dec
mov
aam
rcrl
xor
sbb
bound
es
cwtl
adc
push
dec
pop
push
dec
adc
cld
sub
push
lock
jnp
sub
sub
adc
in
xchg
push
xchg
xrelease
movw
pusha
pushl
pushl
ret
mov
sbb
int3
nop
mov
pop
push
subb
or
and
subl
enter
data16
sub
jge
lahf
fisubl
mov
push
mov
fdivl
outsl
bound
inc
adc
pop
stos
sbb
test
jmp
ss
push
aas
pop
push
cld
movsb
xchg
dec
add
mov
test
jae
sbb
sti
and
add
cmc
jl
mov
addl
push
ret
add
inc
hlt
cli
mov
call
pop
add
sbb
mov
sbb
jns
or
das
sub
xor
mov
icebp
hlt
sbb
nop
sub
insb
push
mov
xor
pop
xor
stos
les
out
jo
jmp
xor
popa
or
lret
into
pop
cmp
lock
xor
addr16
sarl
add
daa
outsb
inc
dec
jne
fnstsw
push
rol
mov
dec
lods
inc
mov
xchg
je
push
std
push
and
mov
mov
jecxz
and
jl
jo
repz
sub
or
rcrb
jns
xchg
cmp
push
mov
test
fs
xchg
dec
out
mov
call
adc
lock
bound
or
enter
pop
mov
sub
es
mov
les
push
pop
dec
jmp
ret
cmpsb
nop
push
inc
popa
xor
test
sbb
mov
and
outsb
pop
sbb
cmp
aaa
cltd
das
xchg
pop
pop
cld
popf
cltd
fnstsw
add
rep
fs
adc
fwait
sbb
loopne
aaa
sbb
cmp
es
jp
mov
xor
lock
sub
xchg
jne
out
or
xor
or
std
in
jp
cmpsb
push
fwait
movsb
sub
leave
jne
lds
mov
js
sub
std
std
pop
js
ret
sar
adcl
sub
inc
xlat
sub
dec
ja
push
pop
push
iret
ret
aad
orb
mov
or
mov
ja
add
inc
cmp
sbb
and
xchg
or
repz
sbb
ja
fpatan
les
pop
sub
or
dec
ja
jae
std
and
cmp
or
xlat
pop
mov
in
lret
xor
or
in
or
test
pop
cmp
inc
repnz
in
add
rcll
cli
sarl
add
xchg
jg
in
push
add
insb
sub
jecxz
push
pusha
cmp
mov
mov
pop
sub
cmp
aam
dec
ret
daa
xchg
push
mov
in
add
xchg
dec
lock
mov
add
cltd
nopl
add
add
insl
add
add
add
mov
sbb
add
sbb
add
add
les
pusha
dec
add
inc
dec
add
enter
in
add
test
add
add
nop
inc
add
xor
add
add
add
add
inc
aaa
add
xor
add
xor
add
sub
add
sbb
add
fdivs
add
test
add
inc
add
xor
add
and
add
adc
add
mov
add
lods
xor
add
nop
xor
add
xorb
add
add
xor
add
sbb
add
sbb
add
cld
xor
add
xor
add
xor
add
add
xor
add
xor
add
add
mov
add
pop
mov
add
aam
add
mov
das
add
call
add
dec
sub
add
mov
sub
add
add
lock
mov
add
jl
add
lock
add
add
mov
jge
add
jl
add
jnp
add
jns
add
js
add
add
mov
jne
add
add
add
add
nop
je
add
add
test
add
nop
jae
add
jb
add
jb
add
jno
add
add
in
jo
add
add
pushf
outsb
add
je
add
push
outsb
add
cmp
add
insl
add
je
add
xor
dec
imul
add
bound
add
add
pusha
popa
add
cmp
les
add
lods
xchg
add
add
lods
xchg
add
xor
aaa
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
sub
sub
daa
add
add
add
adc
adc
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
arpl
add
dec
add
add
inc
add
add
pop
add
push
add
dec
add
pop
add
push
add
add
add
push
add
add
aas
add
pop
add
pop
add
inc
add
push
add
cmp
push
imul
stc
sbb
add
cli
sbb
add
cli
sbb
add
cli
sbb
add
cli
sbb
add
sti
sbb
add
sbb
add
sti
sbb
add
cld
sbb
add
sbb
add
cld
sbb
add
std
sbb
add
sbb
add
std
sbb
add
sbb
add
sbb
add
lcall
add
add
lcall
add
push
add
push
add
push
add
add
add
add
add
push
add
push
add
add
add
add
add
push
add
add
add
add
add
push
add
push
add
add
add
add
add
push
add
add
add
add
add
add
push
add
push
add
push
push
add
add
push
push
add
push
push
add
push
add
push
add
pop
push
add
or
add
or
add
or
add
or
add
or
add
or
add
push
add
or
add
push
add
or
add
or
add
push
add
or
add
push
add
or
push
add
push
add
push
push
add
push
add
nopl
inc
and
jo
xor
push
jo
imul
je
jb
push
push
arpl
imul
and
cmp
arpl
imul
imul
add
js
and
xor
arpl
imul
je
dec
imul
jo
xor
push
jo
imul
je
jb
push
inc
popa
je
dec
imul
js
and
ss
jo
imul
je
jb
push
inc
popa
je
dec
imul
gs
inc
and
jo
xor
push
jo
imul
je
jb
outsl
jb
inc
push
push
arpl
imul
add
gs
popa
arpl
addr16
outsb
outsw
push
popa
bound
inc
push
arpl
imul
je
popa
arpl
addr16
outsb
outsw
push
popa
bound
jno
jb
add
arpl
imul
arpl
addr16
outsl
popa
fs
jno
jbe
inc
push
arpl
imul
arpl
addr16
outsb
insb
outsl
popa
fs
jno
jbe
inc
push
arpl
imul
je
popa
insb
imul
and
jno
jbe
inc
push
jo
imul
je
jb
inc
imul
je
outsl
outsb
and
jno
jbe
inc
push
jo
imul
je
jb
dec
imul
insb
inc
imul
inc
push
jo
imul
je
jb
dec
imul
insb
dec
popa
outsb
fs
add
jo
imul
je
jb
push
jae
insb
insb
add
jo
imul
je
jb
push
gs
jb
push
dec
imul
xor
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
ss
insb
popa
jae
gs
push
push
je
imul
jo
imul
je
jb
push
inc
popa
je
dec
imul
jo
imul
je
jb
push
inc
popa
je
dec
imul
dec
je
insl
and
jno
imul
imul
je
jb
push
inc
popa
je
dec
imul
dec
gs
je
insl
and
jno
jbe
inc
push
jo
imul
je
jb
push
inc
popa
je
dec
imul
push
gs
fs
insb
outsl
arpl
imul
jo
cmp
popa
jae
gs
push
inc
imul
insl
imul
imul
je
jb
push
inc
popa
je
dec
imul
push
gs
fs
outsl
jne
je
jno
jb
xor
inc
insb
popa
jae
gs
push
inc
imul
insl
imul
imul
je
jb
push
inc
popa
je
dec
imul
je
jno
jb
add
jo
imul
je
jb
push
inc
popa
je
dec
imul
dec
je
insl
and
jno
imul
arpl
imul
imul
add
jo
imul
je
jb
push
inc
popa
je
dec
imul
outsb
imul
inc
push
jo
imul
je
jb
push
inc
popa
je
dec
imul
gs
add
jo
imul
je
jb
push
inc
popa
je
dec
imul
gs
inc
gs
gs
je
insl
and
jno
jbe
inc
push
jo
imul
je
jb
push
inc
popa
je
dec
imul
gs
inc
gs
gs
fs
insb
outsl
arpl
imul
jo
cmp
popa
jae
gs
push
inc
imul
insl
imul
imul
je
jb
push
inc
popa
je
dec
imul
gs
inc
gs
gs
fs
outsl
jne
je
jno
jb
xor
inc
insb
popa
jae
gs
push
inc
imul
insl
imul
imul
je
jb
push
inc
popa
je
dec
imul
gs
inc
gs
jb
je
inc
outsl
jne
je
jno
jb
xor
inc
insb
popa
jae
gs
push
inc
imul
insl
imul
imul
je
jb
push
inc
popa
je
dec
imul
gs
dec
outsb
imul
inc
push
jo
imul
je
jb
push
inc
popa
je
dec
imul
gs
dec
outsb
imul
imul
jbe
inc
push
jo
imul
je
jb
push
inc
popa
je
dec
imul
gs
push
popa
jbe
push
je
gs
insl
inc
outsw
jb
and
jno
jo
cmp
popa
jae
gs
push
inc
imul
insl
imul
imul
je
jb
push
inc
popa
je
dec
imul
push
jo
imul
je
jb
push
inc
popa
je
dec
imul
gs
jb
je
insl
jae
jno
jb
add
jo
imul
je
jb
push
inc
popa
je
dec
imul
gs
je
dec
imul
imul
xor
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
arpl
imul
je
dec
imul
je
je
insl
and
jno
imul
imul
je
jb
push
inc
popa
je
dec
imul
je
je
insl
and
jno
imul
arpl
imul
je
dec
imul
arpl
imul
imul
gs
add
jo
imul
je
jb
push
push
arpl
imul
gs
jno
jbe
inc
push
jo
imul
je
jb
push
push
arpl
imul
imul
gs
jno
jo
xor
insb
inc
push
fs
jb
gs
imul
outsl
add
jo
imul
je
jb
push
push
arpl
imul
je
insl
dec
inc
and
jno
jbe
inc
push
jo
imul
je
jb
push
push
arpl
imul
je
insl
dec
popa
insl
gs
jno
jbe
inc
push
jo
imul
je
jb
push
push
arpl
imul
gs
je
insl
and
jno
jbe
inc
push
jo
imul
je
jb
push
push
arpl
imul
gs
gs
fs
insb
outsl
arpl
imul
jo
cmp
popa
jae
gs
push
inc
imul
insl
imul
imul
je
jb
push
push
arpl
imul
gs
jb
je
inc
insb
outsl
arpl
imul
jo
cmp
popa
jae
gs
push
inc
imul
insl
imul
imul
je
jb
push
push
arpl
imul
imul
gs
jno
jo
xor
insb
inc
push
fs
jb
gs
imul
outsl
outsl
add
jo
imul
je
jb
push
push
arpl
imul
je
insl
dec
inc
and
jno
js
aaa
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
arpl
imul
imul
gs
push
gs
je
insl
dec
popa
insl
gs
jno
js
aaa
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
arpl
imul
imul
gs
imul
jb
add
jo
imul
je
jb
push
push
arpl
imul
jo
imul
je
jb
push
push
arpl
imul
arpl
gs
fs
jno
jb
aaa
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
je
imul
imul
je
jb
push
push
arpl
imul
jb
arpl
insb
and
jno
xor
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
push
jo
imul
je
jb
push
push
arpl
imul
jb
arpl
insb
gs
jno
xor
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
imul
imul
je
jb
push
push
arpl
imul
jb
arpl
insb
gs
jno
jo
cmp
popa
jae
gs
push
inc
imul
insl
xor
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
add
jo
imul
je
jb
push
push
arpl
imul
dec
gs
outsb
arpl
insb
gs
popa
insl
gs
jno
xor
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
arpl
imul
imul
inc
dec
outsb
imul
inc
push
jo
imul
je
jb
push
push
arpl
imul
je
imul
je
jno
jb
add
jo
imul
je
jb
push
push
arpl
imul
fs
jb
insl
push
je
gs
insl
and
jno
jo
cmp
popa
jae
gs
push
inc
imul
insl
imul
imul
je
jb
push
push
arpl
imul
arpl
jae
popa
jae
ss
jno
jb
aaa
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
jns
je
insl
inc
inc
outsb
jae
push
je
imul
arpl
imul
imul
inc
push
jb
arpl
jae
outsb
arpl
jno
xor
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
arpl
imul
imul
inc
push
outsb
dec
outsb
imul
inc
push
jo
imul
je
jb
push
push
arpl
imul
push
arpl
imul
aaa
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
imul
imul
je
jb
popa
outsb
jae
je
bound
xor
inc
push
jo
imul
je
jb
bound
xor
outsl
popa
outsb
jae
add
jo
imul
je
jb
imul
imul
and
jno
jbe
inc
push
jo
imul
je
jb
outsl
jb
inc
inc
imul
je
outsl
outsb
and
jno
jbe
inc
push
jo
imul
je
jb
outsl
jb
inc
push
arpl
imul
add
jo
imul
je
jb
outsl
jb
inc
push
push
arpl
imul
inc
add
jo
imul
je
jb
outsl
jb
inc
push
push
arpl
imul
inc
inc
push
push
push
and
jno
jo
ss
insb
popa
jae
gs
push
push
je
imul
jns
je
insl
inc
inc
outsb
jae
push
je
imul
arpl
imul
inc
push
push
arpl
imul
inc
inc
push
imul
jo
ss
insb
popa
jae
gs
push
push
je
imul
jns
je
insl
inc
inc
outsb
jae
push
je
imul
arpl
imul
inc
push
push
arpl
imul
inc
inc
push
popa
arpl
jno
jo
ss
insb
popa
jae
gs
push
push
je
imul
jns
je
insl
inc
inc
outsb
jae
push
je
imul
arpl
imul
inc
push
push
arpl
imul
inc
inc
jb
popa
je
dec
bound
and
jno
jbe
inc
push
jo
imul
je
jb
outsl
jb
inc
push
push
arpl
imul
inc
inc
popa
je
push
outsl
push
imul
outsl
add
jo
imul
je
jb
outsl
jb
inc
push
push
arpl
imul
inc
inc
outsb
popa
bound
jne
je
outsb
and
jno
outsl
add
jo
imul
je
jb
outsl
jb
inc
push
push
arpl
imul
inc
inc
outsb
popa
bound
jne
arpl
jno
xor
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
arpl
imul
inc
push
push
arpl
imul
inc
inc
jb
gs
bound
and
jno
jbe
inc
push
jo
imul
je
jb
outsl
jb
inc
push
push
arpl
imul
inc
inc
gs
jne
push
xor
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
jo
imul
je
jb
outsl
jb
inc
push
push
arpl
imul
inc
inc
gs
gs
jne
je
js
and
jno
jbe
inc
push
jo
imul
je
jb
outsl
jb
inc
push
push
arpl
imul
inc
inc
gs
gs
jne
je
imul
jno
jb
add
jo
imul
je
jb
outsl
jb
inc
push
push
arpl
imul
inc
inc
gs
gs
jne
je
imul
jb
add
jo
imul
je
jb
outsl
jb
inc
push
push
arpl
imul
inc
inc
gs
jo
outsb
inc
imul
jno
jb
xor
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
jae
gs
inc
inc
outsb
jae
push
je
imul
push
jo
imul
je
jb
outsl
jb
inc
push
push
arpl
imul
inc
inc
gs
arpl
imul
jbe
inc
push
jo
imul
je
jb
outsl
jb
inc
push
push
arpl
imul
inc
inc
gs
popa
jbe
inc
imul
jno
jb
xor
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
jae
gs
inc
inc
outsb
jae
push
je
imul
push
jo
imul
je
jb
outsl
jb
inc
push
push
arpl
imul
inc
dec
outsb
imul
jno
jbe
inc
push
jo
imul
je
jb
outsl
jb
inc
push
push
arpl
imul
inc
dec
outsl
popa
fs
popa
je
and
jno
xor
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
arpl
imul
inc
push
push
arpl
imul
inc
dec
outsb
push
popa
addr16
push
and
jno
jo
xor
popa
inc
push
dec
je
insl
dec
imul
arpl
imul
inc
push
push
arpl
imul
inc
dec
outsb
push
popa
addr16
outsl
jne
je
push
and
jno
jo
xor
popa
inc
push
dec
je
insl
dec
imul
jo
imul
je
jb
outsl
jb
inc
push
push
arpl
imul
inc
dec
outsb
push
jb
arpl
jae
jno
jb
imul
je
insl
inc
inc
outsb
jae
push
je
imul
jb
arpl
jae
push
dec
outsb
outsw
push
jns
add
jo
imul
je
jb
outsl
jb
inc
push
push
arpl
imul
inc
dec
outsb
push
gs
je
insl
dec
imul
jb
jno
jb
xor
push
fs
je
inc
push
dec
je
insl
dec
imul
jo
imul
je
jb
outsl
jb
inc
push
push
arpl
imul
inc
dec
outsb
push
gs
arpl
imul
data16
jb
jno
jb
xor
push
fs
je
inc
push
dec
je
insl
jo
xor
insb
inc
push
fs
jb
gs
imul
outsl
outsl
add
jo
imul
je
jb
outsl
jb
inc
push
push
arpl
imul
inc
push
arpl
outsl
push
imul
jbe
inc
push
jo
imul
je
jb
outsl
jb
inc
push
push
arpl
imul
inc
push
popa
jbe
inc
popa
je
and
jno
xor
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
arpl
imul
inc
push
push
arpl
imul
inc
push
gs
jne
jb
outsb
je
imul
jo
xor
push
jo
imul
je
jb
push
inc
popa
je
dec
imul
arpl
imul
inc
push
push
arpl
imul
inc
push
gs
arpl
imul
jno
jb
xor
inc
js
insb
inc
push
fs
jb
gs
imul
jo
cmp
arpl
imul
imul
add
jo
imul
je
jb
outsl
jb
inc
push
push
arpl
imul
inc
push
gs
arpl
imul
jo
xor
push
jo
imul
je
jb
push
push
arpl
imul
arpl
imul
inc
push
push
arpl
imul
inc
push
gs
imul
jbe
inc
push
jo
imul
je
jb
outsl
jb
inc
push
push
arpl
imul
inc
push
imul
jo
arpl
jno
jb
add
jo
imul
je
jb
outsl
jb
inc
push
push
arpl
imul
inc
push
jb
gs
bound
imul
jo
xor
jns
je
insl
inc
push
dec
bound
arpl
push
jo
imul
je
jb
outsl
jb
inc
push
push
arpl
imul
inc
popa
arpl
outsb
inc
js
arpl
gs
jno
jo
xor
jns
je
insl
inc
push
dec
bound
arpl
push
jo
imul
je
jb
outsl
jb
inc
push
push
arpl
imul
inc
popa
arpl
gs
inc
js
arpl
gs
jno
jo
xor
jns
je
insl
inc
push
dec
bound
arpl
push
jo
imul
je
jb
outsl
jb
inc
push
push
arpl
imul
inc
popa
arpl
jbe
inc
js
arpl
gs
jno
jo
xor
jns
je
insl
inc
push
dec
bound
arpl
push
jo
imul
je
jb
outsl
jb
inc
push
push
arpl
imul
inc
bound
js
jb
arpl
insb
inc
insb
imul
jo
xor
jns
je
insl
inc
push
dec
bound
arpl
push
jo
imul
je
jb
outsl
jb
inc
push
push
arpl
imul
inc
bound
js
jb
arpl
outsb
insb
gs
insb
imul
jo
xor
jns
je
insl
inc
push
dec
bound
arpl
push
jo
imul
je
jb
outsl
jb
inc
push
push
arpl
imul
inc
bound
gs
inc
insb
imul
jo
xor
jns
je
insl
inc
push
dec
bound
arpl
push
jo
imul
je
jb
outsl
jb
inc
push
push
arpl
imul
inc
bound
jb
jbe
insb
imul
jo
xor
jns
je
insl
inc
push
dec
bound
arpl
push
jo
imul
je
jb
outsl
jb
inc
push
push
arpl
imul
inc
gs
popa
addr16
outsl
dec
gs
outsl
ja
and
jno
jo
xor
jns
je
insl
inc
push
dec
bound
arpl
jae
ss
jns
je
insl
inc
and
je
cmp
popa
jae
gs
inc
insb
popa
jae
gs
pop
xor
jne
and
and
jne
and
and
arpl
imul
inc
imul
imul
and
jno
jbe
inc
imul
add
imul
add
imul
je
jb
bound
add
inc
mov
call
movl
clc
js
pop
push
xor
filds
stos
fistps
xorb
mov
out
out
shll
xor
lods
daa
scas
aaa
out
out
sub
and
push
cmp
les
jmp
pop
add
mov
adc
dec
stc
push
ja
mov
xorb
jnp
out
int
inc
loop
pop
mov
cld
ficomps
cmp
mov
dec
aas
sarb
aaa
sub
addr16
lahf
jmp
repz
rcll
bound
push
fimull
stos
push
sbb
mov
cmp
xor
pop
jae
lock
in
add
outsl
int3
imul
mov
jecxz
or
je
pop
inc
imul
inc
jns
mov
jp
sub
movb
lret
ja
or
aad
fdivrs
and
stos
cmp
outsl
cmpsl
and
xor
xor
fcomps
cmp
adc
pushf
adc
pop
mov
mov
test
jne
mov
loopne
rcl
outsl
stos
stos
push
cmpsb
cld
xor
inc
mov
xchg
add
dec
stos
negb
inc
inc
push
mov
mov
dec
mov
sbb
sbb
roll
mov
lcall
aaa
add
inc
dec
das
mov
std
test
pop
inc
mov
addl
test
or
movsl
leave
adc
jmp
repnz
icebp
sub
dec
clc
sub
dec
in
xchg
xor
shrb
jp
in
int
iret
xorb
mov
inc
fs
sbb
inc
adc
inc
pop
pushf
nopl
cld
nop
gs
out
add
je
into
stos
int
cld
outsl
jnp
scas
mov
mov
or
in
test
push
imul
sub
xchg
dec
xchg
pop
inc
int3
shr
stos
ret
aam
pushf
lret
imul
in
dec
es
out
lods
or
fucomip
dec
xor
dec
inc
cmpb
popa
stos
outsl
mov
sbb
pop
in
xchg
xor
xchg
loop
jmp
push
inc
cmp
mov
sarl
pop
xchg
dec
lret
add
jmp
repz
push
mov
stos
adc
aad
aam
stos
add
mov
jne
cmp
lret
cmp
cli
std
add
fnstcw
rorl
jecxz
outsl
jno
pop
addr16
addr16
call
sbb
lahf
scas
mov
in
jl
cwtl
inc
pushf
xchg
jl
fstpt
in
xor
inc
or
sbb
sub
cmpb
adc
jo
insl
inc
sbb
or
addr16
ja
loopne
mov
sbb
lods
xor
lods
inc
xchg
mov
cltd
daa
out
push
mov
ljmp
sub
jmp
popa
inc
fxch
xlat
call
aas
and
jecxz
pop
mov
and
in
dec
out
push
xchg
fldt
jno
dec
xor
push
or
jecxz
rcrb
jo
or
mov
jge
and
test
js
pop
mov
cld
loopne
cmpsl
or
push
fldenv
repnz
lods
repz
mov
and
xchg
popf
fsubs
pop
pop
push
test
test
out
aaa
pop
subl
xchg
sub
shll
int
rcll
sbb
jmp
dec
in
mov
loopne
les
ljmp
jle
jg
push
add
inc
movsl
push
in
cmpsb
jg
pop
popl
addr16
jle
cmpl
or
es
dec
dec
sarb
out
jg
jnp
pushl
xor
add
cmpsl
and
ja
pop
out
push
mov
cld
lods
insb
roll
inc
push
loopne
add
ret
cs
push
mov
ret
cmp
pop
inc
cld
lods
aaa
lcall
cmpsl
aas
test
mov
das
movsl
sub
dec
xchg
daa
or
xchg
stos
xchg
pop
loope
test
bnd
or
jne
sbb
sbb
jg
fistpll
out
mov
or
adc
xchg
cs
inc
mov
flds
xchg
hlt
add
mov
fisubrl
cmp
pop
out
jge
fcom
pop
pop
mov
std
dec
dec
jmp
sarl
repz
adc
ret
mov
jl
fisubrs
jb
cli
cmp
pop
mov
sahf
scas
sub
mov
cmp
push
fcompl
out
mov
jo
push
inc
or
dec
sub
sub
subb
out
push
mov
hlt
jae
ljmp
mov
popa
xchg
mov
sti
push
pushf
push
cld
scas
mov
cs
sbb
push
std
xchg
sub
clc
push
mov
outsb
push
mov
xchg
shl
cld
xchg
jne
ret
lods
je
sbb
outsb
cmp
hlt
andb
mov
dec
scas
cmp
lods
sub
pushf
jnp
cmp
aam
push
dec
fisubs
push
fnstcw
dec
adc
jnp
popa
sahf
mov
adc
fdivrp
or
into
mov
dec
testb
das
sbbl
mov
imul
xor
fs
ss
pop
lret
pop
in
testb
lods
fbld
push
mov
ss
loopne
pop
shrl
insb
ds
rcl
iret
xchg
adcb
insl
decb
test
mov
ficomps
loop
add
in
xchg
es
fists
mov
push
adc
mov
jmp
push
jne
cld
lds
mov
mov
repz
sarb
inc
test
pop
mov
je
into
mov
dec
dec
lods
dec
sbb
ss
imul
stos
cmp
aaa
repz
in
sbb
sbbb
mov
xchg
cmp
not
setae
mov
lea
lahf
pop
movsbw
mov
pushf
lea
ja
ja
jb
push
push
cmpb
pushf
lea
jb
jne
push
mov
clc
cmc
bt
add
push
cmp
pushl
stc
movzwl
btc
btr
mov
stc
bt
add
clc
stc
cmc
mov
mov
test
call
push
out
push
mov
and
or
insb
mov
data16
pop
push
sub
std
push
pop
andb
or
mov
xor
xchg
sti
or
frstor
sub
add
mov
sub
adc
loop
add
rorb
je
out
sbb
push
les
call
pop
jbe
or
shlb
pushf
fiaddl
outsb
jae
sub
dec
ss
stc
bound
dec
mov
int
pusha
sbb
sbb
mov
orb
stc
cmp
outsl
call
xchg
sub
mov
shl
xchg
ror
or
and
mov
inc
pusha
and
mov
stc
stc
push
call
pushl
lea
jne
bt
sub
rcl
mov
pushf
call
and
cmpsb
add
dec
mov
test
insb
mov
stc
cmc
fimuls
xchg
dec
cmp
imul
lret
push
loopne
rclb
cmp
mull
adc
addl
clc
std
nop
xchg
push
dec
bound
sub
clc
and
inc
sbb
add
dec
bound
jns
pusha
aas
or
or
cmc
vpavgw
imul
fcmovb
pop
enter
adc
dec
and
mov
adc
hlt
cli
cmp
stos
fsub
nop
push
and
fidivs
inc
mov
add
cli
xlat
pop
ret
mov
cs
aam
xchg
popf
jns
adc
pop
test
testl
mov
inc
and
add
add
pushl
pusha
lea
jmp
mov
pushf
mov
pushl
ret
dec
adc
shrb
rcrb
sahf
sbb
cmpsb
sbb
xor
test
pushf
push
or
int
push
mov
add
jno
lea
sbb
repnz
or
in
fildl
clc
fsubr
add
hlt
sub
cmc
cwtl
aaa
pop
popa
bound
push
pop
xor
pop
imul
popa
ret
mov
repz
and
dec
inc
js
paddb
jno
call
arpl
cmc
mov
fucomi
lods
mov
xor
push
cmp
loope
iret
ss
loopne
xchg
pminub
loopne
mov
in
xchg
sub
addr16
call
xor
lds
es
fwait
adc
xor
loopne
and
sub
in
arpl
stos
movsb
shlb
sub
mov
lcall
or
jbe
movsb
xchg
push
lods
outsl
xchg
ljmp
lret
loope
shl
sbbb
and
and
das
enter
out
xor
mov
mov
int
iret
popa
loope
aad
pop
adc
xlat
in
push
lock
outsl
jne
iret
out
inc
stos
mov
mov
mov
xor
cbtw
pop
ret
js
dec
stc
push
mov
pop
cmp
dec
insb
adc
outsl
jbe
ja
xchg
or
inc
out
gs
mov
dec
mov
es
pop
cmp
pop
xchg
into
out
iret
fildl
adc
push
cmp
sub
test
dec
leave
sub
test
je
daa
xchg
decl
xchg
test
mov
pop
cli
sti
dec
dec
ss
push
and
cmp
lahf
insb
dec
sub
fsubrs
in
imul
jg
mov
push
mov
pop
xchg
lds
out
or
test
insl
popa
cmp
mov
mov
push
cld
xor
sbb
pop
inc
std
movsb
dec
adc
arpl
inc
bnd
or
jmp
xchg
sub
sub
xchg
push
lcall
bound
add
repnz
sub
dec
hlt
lret
fiaddl
lahf
ss
pop
adc
lret
popa
jae
adc
jnp
inc
mov
fistl
popa
test
test
outsb
cmp
orb
js
jmp
test
orl
into
iret
jle
rcr
sub
pushf
lret
inc
inc
add
xchg
in
shll
mov
jle
adc
sub
popf
arpl
xor
lods
sbb
adc
jnp
insb
mov
pop
shll
xchg
daa
insb
movsl
dec
adc
cmp
out
shl
xchg
xor
jnp
repz
aam
cmpl
cld
ds
lea
adc
sbb
cmp
xchg
insb
inc
rorb
mov
or
pop
aad
xor
add
push
adc
jmp
andps
popa
mov
pop
mov
adc
push
sbbl
push
inc
cli
roll
rolb
jle
ret
xlat
mov
arpl
push
gs
sbbb
push
adc
inc
rorl
fsubrl
inc
lea
sbb
inc
add
in
adc
push
out
adc
jb
add
xchg
outsb
xchg
cwtl
into
inc
nop
jg
lea
es
push
cmpl
or
dec
repz
xor
add
push
inc
inc
insb
push
mov
sti
adc
add
shll
inc
or
mov
in
divl
xor
or
mov
adc
mov
push
es
inc
out
push
ja
nop
pusha
adc
inc
enter
push
inc
and
jo
adcl
adc
enter
arpl
shrl
sarb
addb
negb
and
or
mov
aam
lock
mov
push
popa
xor
dec
inc
fistpl
mov
adc
daa
mov
lock
sbb
psubsb
hlt
sub
pop
dec
push
jno
mov
imul
pop
mov
mov
xor
inc
adc
gs
dec
ret
mov
add
cs
adc
mov
add
add
subb
pushf
lods
xor
cmp
mov
push
add
push
add
inc
faddl
int3
xorb
nop
call
inc
inc
loop
addr16
or
mov
incb
pop
sarl
adc
inc
loope
in
inc
insl
mov
xchg
push
adc
and
pusha
inc
andb
push
inc
and
sbb
or
dec
decl
bound
sbb
push
clc
mov
int3
add
jp
jg
ds
dec
movl
cli
adc
enter
roll
add
pop
jb
pop
inc
and
xor
add
push
mov
add
loopne
mov
add
in
add
inc
rolb
cmp
pushf
syscall
mov
jecxz
mov
sti
lods
in
mov
cltd
mov
call
inc
ja
push
mov
and
sbb
and
testl
or
xor
adcl
adc
jbe
insl
ret
fwait
push
mov
in
es
inc
sbb
inc
sub
jns
pop
inc
adc
and
mov
xorb
sbb
jnp
sub
or
out
adc
in
lock
push
les
add
xchg
inc
aam
in
adc
or
add
pop
or
add
pop
cmp
sbb
ret
andl
sbb
mov
cmp
dec
xchg
jecxz
movsl
jg
ds
leave
lahf
push
add
lds
inc
mov
inc
mulb
xchg
jp
pusha
cs
push
inc
inc
sbb
dec
sti
xchg
push
sbb
cmpsl
inc
sbb
dec
cmc
sbb
xchg
mov
jp
add
ss
mov
scas
inc
push
insl
dec
sub
and
jecxz
or
and
sub
jnp
shrl
je
add
adc
jne
stos
add
or
inc
inc
ja
and
sub
push
popa
mov
xchg
aaa
or
enter
or
push
adc
scas
or
jno
les
fmuls
inc
pop
add
lahf
fs
inc
sti
sub
adc
es
cmp
add
jmp
inc
add
ljmp
testl
xorl
inc
mov
ret
and
mov
lea
jno
add
fsubr
outsb
xor
xchg
mov
fsts
sbb
or
clc
adc
jno
sbb
es
dec
mov
push
aas
pushf
cmpsl
adc
add
cmc
rcll
lods
incl
push
lods
pop
push
ret
in
aaa
xor
fmull
movsb
and
es
adc
cmp
inc
sub
cmp
inc
or
or
adc
jle
mov
jbe
sbb
mov
sub
pop
and
push
and
pop
push
xchg
lds
mov
int3
outsl
repnz
cwtl
add
mov
push
mov
loope
and
mov
push
cmp
std
daa
mov
adc
and
sarl
add
push
cmpb
push
fcoms
sub
fs
or
lods
loope
scas
adc
push
fidivrl
inc
jge
ret
dec
xor
or
jg
and
mov
push
ss
add
nop
ret
stc
add
push
fdivs
fwait
push
inc
data16
xor
sub
sbb
xchg
adc
xchg
adc
push
shlb
dec
add
fcoml
es
jmp
push
int3
data16
addl
stc
orb
add
lods
or
push
ss
xchg
dec
inc
and
andb
inc
sub
add
sbb
andb
push
pop
xchg
pop
daa
add
and
sub
push
call
ja
or
loopne
es
sar
sub
sub
sub
leave
stos
adc
jge
or
and
in
test
or
sub
or
dec
adc
andl
stc
xchg
and
add
lods
or
or
and
sbb
dec
xchg
add
xchg
xchg
pop
or
jmp
or
sub
xchg
xor
andl
push
inc
add
dec
sbb
jp
xor
mov
cwtl
addl
ficompl
or
add
mov
inc
mov
aas
lret
shlb
and
inc
add
or
and
shll
loope
or
jge
or
push
push
or
push
arpl
xor
bound
bndldx
dec
mov
cmp
adc
int3
dec
sub
fimull
divl
or
loope
shl
and
or
addl
in
cmp
pop
cmpsl
call
pushf
rcrb
enter
add
in
and
inc
out
push
fisttpll
add
inc
cs
and
xchg
jbe
adc
or
nop
incl
sub
mov
mov
sbb
dec
jno
ret
adc
fs
mov
testb
jbe
xlat
adc
shlb
aad
and
test
popa
in
xchg
adc
inc
sbbl
stc
add
adc
fnsave
aas
jle
bound
xor
add
and
xorl
mov
add
clc
adc
push
pop
jae
jb
lea
lahf
cmp
add
pop
mov
loopne
sub
add
mov
dec
ret
pop
scas
cmp
lea
cmpsl
pop
inc
sbb
push
test
mov
mov
and
cmp
and
and
aas
in
mov
mov
xor
mov
leave
test
push
cmp
inc
and
inc
dec
ds
cs
push
mov
nop
and
loopne
pop
pop
xor
pop
lahf
dec
cmp
cmc
and
jno
push
or
mov
aas
sub
lret
mov
or
les
test
adc
xor
sub
ss
gs
pop
xchg
push
es
int3
cmp
xor
nop
inc
inc
das
and
push
sbb
popa
mov
adc
cmp
mov
outsl
js
mov
mov
lret
andb
add
rcrl
int3
out
ret
out
lea
ss
mov
add
or
cmp
jp
es
repnz
or
sar
orl
add
or
pop
inc
and
jmp
orl
inc
and
test
sbb
mov
add
or
jecxz
fmuls
enter
movsb
sub
or
nop
sub
adc
xchg
hlt
push
adc
arpl
or
iret
xchg
ds
and
mov
xchg
cs
in
jbe
and
xor
sbb
sbb
jno
fsubrs
cmpsl
movsb
and
test
and
add
mov
xor
ret
aad
cmp
lret
sub
shrb
les
pop
and
sub
inc
cmpb
dec
xor
lea
pop
adc
rolb
push
scas
out
and
dec
sbb
or
pop
and
outsb
jl
nop
and
pusha
push
fists
inc
inc
add
mov
fadds
ljmp
mov
add
cmp
aam
xor
dec
or
subl
cli
xchg
adc
xchg
ja
jo
pop
add
sarl
and
ja
dec
sub
xor
popf
scas
adc
or
shl
inc
rol
adcl
int3
push
and
test
jl
mov
pop
mov
and
cmp
rolb
or
sub
out
xor
inc
mov
or
add
and
loop,pn
cli
es
xchg
adcb
testl
cmp
and
mov
mov
or
inc
and
push
pop
sub
lcall
orl
aam
and
lds
lods
inc
mov
and
das
sub
adc
inc
adc
cmpsb
and
aam
add
ret
pop
popa
and
add
insb
cmc
es
push
add
lods
or
xor
push
hlt
push
push
mov
and
test
sub
rorb
or
push
adc
add
repnz
leave
movsb
in
cmp
insl
lea
inc
ret
or
and
adc
daa
mov
jl
mov
push
mov
push
adc
push
pop
mov
add
inc
fisttpl
mov
add
lods
fdivrs
inc
xchg
gs
xchg
xchg
faddl
aaa
cmp
jmp
push
push
sub
mov
pop
cmp
add
mov
aad
je
dec
ljmp
mov
adc
or
movsl
dec
push
sub
pop
and
adc
mov
or
in
adc
or
adc
std
add
shll
shrb
inc
or
cli
add
jle
xchg
cmpsb
xor
insb
jne
sbb
push
lods
mov
dec
ffreep
push
inc
ret
and
xchg
jbe
add
xchg
sbb
inc
ljmp
fstl
sub
or
inc
lds
fisubrs
gs
lods
xor
dec
cmp
jns
pop
sbb
and
mov
sub
xchg
es
mov
and
adc
xor
push
inc
jp
int
or
sub
data16
insl
push
rcl
mov
rol
xchg
sbb
or
fimull
push
rorb
sbb
mov
ss
xchg
push
enter
cmp
add
add
mov
push
add
jno
mov
les
or
adc
cs
mov
int
sbb
xchg
dec
cmpsl
pusha
inc
adc
shrb
leave
add
and
or
add
bound
bound
stc
or
push
inc
enter
adc
add
sbb
push
add
or
or
cmpsb
cli
pop
adc
sub
or
stos
dec
mov
cmp
push
xchg
xchg
std
jmp
sbb
mov
push
test
push
jb
popf
add
push
cmpsb
out
dec
push
push
jno
and
adc
mov
shlb
nop
and
adc
or
lods
jle
and
call
adc
adc
mov
mov
add
incb
test
test
cwtl
or
pop
and
imul
adc
mov
add
pop
decl
inc
call
clc
push
test
sub
adc
popf
ret
sahf
mov
or
sbb
andb
std
jno
adc
mov
cmp
out
or
aaa
mov
or
jp
or
xor
inc
sub
inc
int3
add
cli
or
mov
and
fiadds
jno
dec
push
fwait
cli
mov
jp
and
mov
push
inc
push
test
xor
inc
push
sub
insl
subb
divl
add
mov
adc
inc
mov
rclb
test
push
xchg
inc
cmpsb
out
ds
pop
inc
push
cmp
or
xor
sbb
cmp
push
push
mov
inc
jle
es
push
mov
adc
nop
push
jae
sub
daa
or
aaa
out
cmp
or
push
adc
and
inc
jne
adc
call
xchg
and
adc
ret
push
push
mov
rorb
and
jno
in
sub
bound
pop
mov
ja
and
inc
dec
fwait
xor
fs
sub
jb
sub
xor
sbb
nop
or
cmp
xchg
inc
cmp
and
fnstcw
aad
push
dec
pop
cmp
sbb
rolb
jns
or
adc
mov
push
adc
rorl
addr16
insl
mov
push
test
scas
xor
push
push
aad
mov
pop
push
push
shrb
mov
jno
push
jl
cmp
and
xchg
push
lds
push
data16
jo,pt
sbb
andl
dec
sub
pop
scas
nop
or
inc
xchg
or
add
or
ljmp
jne
or
sub
adc
and
inc
xor
popa
scas
jge
test
add
or
ret
or
push
and
or
mov
lret
insb
adc
test
sub
sbb
pusha
adc
and
xorb
mov
xchg
adc
xor
scas
out
push
inc
shl
sub
push
js
add
popl
sub
and
sub
dec
mov
mov
sub
jecxz
std
or
push
mov
js
inc
or
lret
and
mov
add
add
adc
sbb
test
push
adc
and
xchg
aaa
or
adc
or
xor
enter
pop
int
inc
adc
sub
test
or
adc
fs
add
xor
sbb
xchg
mov
add
dec
sbb
add
xor
inc
cmp
and
inc
cmp
mov
andl
mov
push
add
pop
sbbb
and
ds
mov
sub
adc
sbbb
sbbl
xchg
imul
inc
mov
xor
adc
xor
add
add
dec
or
xor
nop
aaa
lea
dec
cltd
push
inc
adc
xor
adc
or
xor
fs
mov
or
xor
test
mov
outsb
cltd
or
sub
mov
dec
sbb
inc
pop
adc
dec
sub
inc
sbb
sbb
dec
aas
adc
cmp
xor
popw
dec
or
inc
adc
add
sub
inc
or
sbb
test
or
adc
and
adcl
pop
fdivl
aaa
or
shrl
fiadds
adc
and
sbb
jecxz
sub
rcrl
enter
enter
jle
cmpb
lock
pop
cltd
bound
mov
inc
xchg
popa
test
or
cmpsl
test
mov
mov
enter
sub
int3
sbbl
mov
bound
test
dec
orb
and
mov
roll
sub
jmp
and
mov
dec
xor
adc
cmp
mov
int
inc
sbb
sbb
cmp
ret
in
and
and
movsb
pop
shrl
stos
and
add
pusha
xor
mov
int3
mulb
inc
inc
add
push
cmp
push
aas
loop
pop
cmp
push
push
ss
popa
daa
test
mov
add
hlt
jo
sub
es
or
scas
pop
and
ret
jne
call
scas
ret
popf
push
add
pop
cmp
push
sbb
push
jbe
xchg
push
and
mov
repz
sbb
and
insl
int
and
inc
arpl
pop
scas
iret
nop
icebp
cmp
ret
lea
mov
test
and
adc
dec
add
add
mov
loopne
mov
add
dec
or
sarl
and
bound
and
cmp
mov
ret
mov
mov
or
outsb
popf
nop
cs
mov
aaa
push
gs
cmpsl
pop
cmp
push
cli
push
loopne
adc
sbb
and
add
sub
cmp
mov
movb
mov
sbb
push
or
mov
ja
jnp
inc
mov
mov
and
push
inc
mov
jl
dec
je
cmp
fiadds
cwtl
xor
ds
xchg
scas
subl
loop
repz
test
sub
pop
add
mov
or
xor
xchg
dec
faddl
js
shr
jo
cmp
pop
mov
into
fildl
mov
push
dec
mov
cli
orb
jae
inc
lods
inc
push
pop
adc
lcall
rcll
aas
xchg
outsb
clc
leave
add
imul
adc
clc
adc
and
jge
push
dec
cmp
nop
dec
and
cmp
mov
sbb
add
or
xchg
add
add
xchg
and
aad
xchg
sub
mov
inc
movsb
xchg
gs
mov
idivb
scas
xor
aam
jmp
or
enter
sub
cs
bound
mov
ja
stos
cs
aas
mov
inc
push
out
testb
dec
xor
and
shlb
jo
insb
jnp
sbb
ss
mov
cmp
push
xor
lret
push
cltd
mov
lock
cmp
or
aad
andb
mov
push
and
xor
movb
insb
jne
rolb
aam
ficomps
mov
int
add
and
ret
add
bound
push
dec
dec
mov
xchg
add
lds
pop
cmp
and
inc
lods
push
mov
or
ret
sbb
sub
add
lret
test
inc
ds
je
and
movsb
jp
sbb
sub
and
cs
sub
add
inc
daa
jne
push
mov
sbb
repz
shrb
stc
and
sbb
pusha
sbb
push
add
fsubl
rorl
push
fcompl
mov
dec
arpl
pusha
cmpl
mov
xchg
adc
test
add
or
push
add
ss
or
xchg
aad
push
and
or
loop
loopne
and
cmp
sbb
popa
push
mov
icebp
push
push
cmp
loopne
lahf
mov
or
xchg
or
adc
inc
xchg
inc
push
xlat
xchg
sbb
sbb
sub
incb
aas
gs
mov
mov
push
out
jp
cmp
mov
les
add
sub
or
xor
sbb
out
daa
jmp
hlt
sar
cmp
sbb
dec
adc
add
adc
add
jge
cmp
xchg
mov
xor
test
ja
or
and
arpl
cmpsb
ds
jge
jb
mov
shrl
xor
xchg
adcl
icebp
test
add
dec
loopne
mov
cmove
add
adc
les
sbb
or
mov
and
test
inc
or
inc
es
xor
xchg
add
pusha
cmp
inc
cmp
add
sbb
xor
and
fildll
cmp
mov
mov
sub
push
ljmp
cmp
or
mov
xorl
pusha
xor
rolb
loope
ret
outsl
mov
sub
or
and
inc
inc
dec
cmp
mov
in
mov
mov
shll
mov
stc
or
verw
xor
sub
mov
mov
add
insb
scas
lods
out
mov
jno
dec
ret
insl
mov
dec
fmul
or
dec
jle
mov
xchg
push
adc
push
push
adc
adc
mov
xor
adc
add
cmpl
clc
roll
or
ret
sub
push
mov
mov
cmp
jge
test
adc
test
xor
sub
sub
and
movsb
fs
dec
xchg
push
popf
arpl
jp
movsb
add
xchg
test
add
push
mov
mov
scas
bswap
leave
sub
add
stos
cmpsb
xor
mov
aas
add
int3
cwtl
mov
fnstcw
cmp
dec
adc
and
push
icebp
popf
mov
xchg
sar
enter
nop
loopne
std
rorb
leave
test
sahf
sbb
or
add
jo
rcrb
xorb
xor
xor
jge
jb
jae
sbb
aam
sbb
aad
fisubrs
push
cmp
imul
fdivrs
jle
es
cmp
popa
push
insb
insb
mov
out
mov
xchg
add
inc
cmp
push
sbb
dec
hlt
xorl
inc
jl
add
out
inc
xchg
ret
or
and
lods
jno
bound
shlb
test
je
out
andl
mov
jb
xor
xor
outsl
mov
icebp
pushf
ss
or
scas
cld
xor
mov
mov
adc
int
dec
add
jne
mov
xor
adc
loope
or
into
xchg
pop
inc
test
inc
push
add
sub
sbb
fs
push
cwtl
cmp
adc
inc
clc
mov
inc
mov
add
and
ret
nop
sbb
out
test
icebp
lahf
add
aas
mov
sub
xlat
sbb
add
pusha
or
lea
lds
shlb
xor
nop
arpl
add
aas
and
pop
faddl
adc
ret
cmp
xchg
adc
adc
dec
add
xchg
add
addr16
dec
jecxz
rorb
or
inc
add
cmp
loopne
jb
iret
or
jp
mov
sbb
inc
mov
or
cltd
mov
inc
daa
pusha
ret
scas
xor
push
push
cmpb
cmp
push
xor
jo
mov
add
mov
sarl
dec
or
dec
mov
dec
das
je
xor
jae
push
mov
jno
or
andb
or
sar
sbb
jp
into
sub
jge
pusha
or
add
lock
or
add
imul
mov
or
mov
jnp
jp
mov
loopne
mov
push
jp
les
pop
mov
loopne
shll
cltd
icebp
cltd
xchg
or
ljmp
sbb
cmpsl
iret
mov
out
mov
ret
xor
jo
or
jb
sbb
cmp
sbbb
jecxz
and
daa
sbb
jae
ret
add
add
sbbb
add
out
sbb
or
mov
inc
inc
dec
jle
xor
out
cmp
pusha
mov
sbb
or
xchg
mov
mov
fsubrp
xor
movsl
add
xor
mov
xor
xlat
divl
add
icebp
aad
jp
and
pusha
mov
adc
out
mov
xor
push
js
add
mov
pusha
mov
jbe
jo
ret
arpl
adc
fprem
or
jge
or
sbb
xchg
and
or
or
mov
xorl
and
cmp
jecxz
test
outsb
mov
jbe
sbb
fsubs
push
je
lods
mov
lock
hlt
or
push
adc
sarl
cmp
jle
subb
jnp
xchg
jno
lcall
inc
and
dec
xor
xor
jle
lods
inc
int
hlt
add
adc
mov
add
outsl
adc
notb
or
or
xorl
sub
faddl
cmp
mov
inc
mov
out
testl
mov
and
jae
add
jl
ffree
mov
add
xlat
dec
add
xor
sub
sbb
decl
test
and
ljmp
dec
fs
fcom
jns
pop
xchg
popa
daa
sbb
or
pop
daa
gs
add
jp
adc
jecxz
push
sbb
dec
iret
cmp
sahf
sub
fs
inc
loopne
int3
inc
outsl
stc
push
inc
cmp
dec
or
or
sub
cltd
fisttps
cli
test
push
adc
popa
cmp
add
aaa
inc
addb
inc
bound
lds
ret
dec
adc
inc
mov
dec
stc
jb
push
push
jl
pop
shll
faddl
sbb
push
push
push
outsb
inc
dec
lahf
ret
push
pop
jle
loope
aas
mov
sub
pusha
dec
gs
lret
test
add
test
nop
addb
push
adc
cmp
cmp
arpl
pop
ret
in
maxps
cmp
stos
inc
das
lds
or
ss
pop
or
xchg
or
push
inc
or
jo
add
xor
lret
lea
add
iret
rcll
std
add
or
data16
mov
xchg
adc
and
ret
mov
hlt
push
roll
xor
add
imul
ret
lds
mov
dec
cmp
test
add
xchg
popa
cltd
mov
xchg
int3
divb
inc
push
call
add
add
jle
sub
je
push
cmp
cltd
andl
or
xchg
xor
jns
or
add
loopne
test
push
sahf
pop
pop
add
mov
adc
inc
iret
or
jbe
xor
je
push
cmpb
push
das
in
ss
inc
adc
ss
inc
dec
aaa
push
add
push
cmp
push
push
sub
or
xchg
aaa
inc
aas
inc
and
xchg
leave
xchg
mov
cs
add
xor
rclb
in
push
xchg
add
cmp
dec
push
add
jge
cli
cmpb
jae
popa
test
ret
sbb
nop
daa
ret
mov
orl
ror
add
add
xor
xchg
ss
nop
xor
lcall
sbb
adc
mov
rcll
or
jl
mov
push
js
cmp
loopne
adc
pop
or
add
orb
mov
xor
adc
es
adc
cmp
loopne
add
repz
mov
add
shl
mov
lret
lods
adc
push
or
psubd
loopne
shll
push
and
dec
cmp
bound
xchg
sub
inc
adc
push
cmp
xor
push
js
add
adc
rol
push
and
cmp
rcr
lea
cli
jbe
dec
rol
and
aaa
pushf
and
sbbl
adc
out
xlat
nop
outsl
adc
scas
adc
rcrl
sarb
je
outsl
repnz
xchg
xchg
es
addb
and
nop
fdiv
das
xor
push
xor
cmpb
ss
xchg
cmp
cmp
dec
leave
push
in
in
orb
icebp
add
xchg
and
push
andl
push
sub
or
test
in
pop
or
ret
fdivl
adc
jo
inc
adc
fwait
xchg
add
loope
pop
inc
xlat
push
dec
mov
dec
sti
add
xchg
or
in
push
add
mov
sub
dec
pop
push
adc
xor
rcll
ret
add
mov
sti
add
ret
or
call
push
adc
and
nop
push
sbb
add
adcl
sub
sub
or
outsl
dec
dec
xchg
or
and
stos
add
and
xor
test
add
xchg
inc
mov
push
cmpsb
or
xchg
adc
or
mov
push
nop
sbb
add
mov
add
xchg
sbb
ret
inc
inc
xlat
push
add
pop
jno
ja
or
jne
xchg
and
push
and
ret
xchg
stos
add
xchg
cmp
or
mov
cmpsb
adc
and
xchg
mov
push
adc
pop
xor
sub
add
arpl
push
push
push
cmp
jl
adc
push
loop
push
sub
movsb
lea
adc
cmpsb
and
or
push
jb
add
test
pop
mov
xor
xor
xchg
sub
sub
sub
cwtl
sub
or
sti
sbb
sbb
xor
mov
ja
aaa
xchg
or
xor
sbb
push
sub
jo
lea
mov
mov
push
or
push
sub
or
aad
push
sub
adc
or
daa
push
add
add
bndldx
pop
in
adc
push
es
and
and
mov
or
cmp
or
pop
and
or
cmp
push
add
and
xor
cld
and
addl
cltd
cmp
cmpsl
cwtl
aaa
mov
dec
push
das
push
enter
orb
popa
adc
ss
shll
xchg
and
aas
test
sbb
mov
icebp
loop
dec
popa
movsl
test
and
cmp
loope
bound
loop
pop
jno
fldl
shrb
shll
adc
and
arpl
add
ds
or
mov
icebp
bound
lds
push
leave
mov
inc
out
cmpsb
inc
mov
adc
push
and
arpl
pop
pop
jbe
sbb
jmp
sarb
push
push
lahf
pop
lds
fadd
pop
je
js
scas
rcl
cmp
ret
push
adc
dec
test
sbb
xor
adc
push
push
push
es
inc
push
cmp
dec
xchg
pushf
xor
rorb
cmp
ljmp
fld
xor
push
cmp
cmp
xchg
icebp
mov
fdivl
xchg
adc
inc
ja
xchg
mov
cmpsl
add
mov
and
mov
insb
lret
cmp
xor
shlb
pop
ret
int3
mov
lret
movsb
sbb
fs
sbb
sub
ds
xchg
popa
mov
jns
ret
lcall
add
movl
fwait
cmp
adc
and
xlat
lret
aad
in
scas
inc
pop
int
sbbl
loope
and
es
sahf
add
jp
cmp
mov
add
adc
pop
hlt
popa
mov
and
ret
cmp
sub
add
and
in
add
mov
sti
scas
dec
cs
nop
sbb
sub
cmp
gs
cmp
insl
addb
push
push
sbb
cmp
test
test
xchg
dec
mov
nop
dec
lret
inc
xor
or
lock
sub
add
std
pop
aas
sbb
pop
in
xchg
lock
add
jle
stc
add
sbb
into
test
daa
sub
call
jb
xor
push
test
loopne
lea
aad
cmp
stc
dec
xor
pop
sbb
jo
lret
movsl
or
mov
mov
mov
jg
cmp
or
daa
loop
sub
hlt
fnstsw
test
sbb
je
and
es
in
jo
adc
xor
arpl
jno
pop
iret
mov
xor
push
test
inc
jl
roll
xchg
cmpsl
hlt
ret
ss
adc
adc
lahf
adc
mov
icebp
icebp
or
adc
movsb
add
mov
adc
or
jp
push
push
insb
jo
add
mov
dec
xchg
mov
fs
lock
das
ret
and
nop
inc
and
adc
inc
enter
orb
push
lret
inc
adc
insl
xchg
inc
add
hlt
and
enter
adc
and
fimuls
popa
ja
sbb
imul
sub
cmpl
es
sarb
cmp
daa
test
leave
pushf
mov
jo
in
xchg
je
popl
mov
inc
mov
aam
or
movsl
jle
in
push
inc
hlt
add
popa
xor
bound
jge
movsb
arpl
dec
xchg
add
adc
lret
inc
aad
inc
cmp
ret
pop
mov
ror
pop
ljmp
or
dec
xchg
cltd
loope
sti
xorl
subb
inc
mov
ja
push
add
mov
rclb
inc
inc
sahf
adc
inc
pop
add
popf
cmp
shlb
xor
jmp
add
ret
repz
aas
jl
icebp
stos
popl
test
xchg
jne
xor
data16
inc
pop
add
aaa
xchg
lods
fcoms
mov
pop
sub
fcmovbe
lret
dec
xchg
cwtl
mov
sub
add
sbb
inc
sub
bound
xchg
aad
cmp
and
xor
sub
daa
fistpll
movsb
pop
pop
aad
jb
in
mov
rcrb
arpl
dec
leave
inc
dec
nop
jns
scas
lods
xchg
push
lret
loope
or
xchg
mov
jp
mov
mov
mov
or
sbb
pop
lret
shr
stc
add
sub
or
mov
cmp
rorl
stos
mov
push
push
push
test
je
inc
out
loop
jne
es
or
fs
jns
mov
or
sbb
mov
mov
inc
sub
or
ds
mov
in
lcall
inc
jge
ret
clc
cld
mov
addb
pusha
push
sub
adc
sbb
outsl
sub
xor
popa
loop
cmp
dec
xchg
dec
push
lret
dec
xchg
mov
and
inc
push
pop
jp
enter
xor
mov
mov
repnz
es
cmpsb
add
or
int3
inc
mov
movsl
dec
cli
dec
inc
cmp
test
and
fcoms
mov
call
mov
add
sub
cltd
pusha
aas
or
daa
shl
cmp
call
jp
shlb
or
and
xchg
inc
add
cld
xchg
idivl
and
adc
mov
xchg
xchg
adc
mov
adc
add
pop
pop
add
push
jp
movl
stos
jg
movsl
or
cmp
jb
mov
bound
ret
cwtl
bound
pop
pushfw
cmpsl
bound
sahf
mov
clc
inc
std
mov
sarl
sbb
aad
adc
cwtl
dec
roll
push
push
gs
mov
inc
xchg
cmpsl
jp
arpl
inc
mov
mov
lcall
addr16
shl
xlat
add
sbb
mov
and
leave
sbb
and
sub
pop
xor
ffreep
mov
cmp
mov
add
ret
mov
ret
adc
push
sbb
mov
adc
push
fsub
mov
sbb
lcall
aam
or
or
mov
movsb
loopne
or
adc
in
loop
push
or
pop
pop
hlt
inc
fistl
jne
sbb
jbe
sub
sbb
cmc
mov
cmp
movsl
mov
jle
mov
push
push
or
adc
xor
or
and
jle
aad
inc
sbb
xor
jp
dec
dec
sbbb
jmp
dec
sahf
lret
dec
xor
add
inc
dec
inc
jne
lods
sahf
mov
aas
movsl
movl
decb
mov
int3
and
daa
pop
mov
xor
xchg
mov
mov
xchg
sbb
fidivs
ds
xchg
dec
sbb
or
out
sbb
daa
mov
or
mov
int3
jg
xor
push
add
ret
add
mov
sbb
popa
cmp
vmovd
cmp
leave
add
push
pop
and
pop
adc
add
lcall
hlt
aam
xchg
pop
add
jno
int3
push
add
enter
xchg
int
inc
sub
jp
add
cmp
sarb
popa
jecxz
pop
mov
paddb
loope
mov
add
in
in
or
aaa
and
sub
adc
ret
lods
xlat
mov
or
outsb
in
pop
and
mov
adc
mov
ret
enter
mov
fs
inc
xchg
cmp
push
adcl
xchg
mov
mov
aad
and
cmpsb
adc
std
inc
lock
daa
mov
test
pop
lret
jl
outsl
fcmovb
or
inc
fmull
cmp
outsl
xchg
sbb
ret
mov
inc
bound
insb
loop
inc
and
push
call
enter
dec
stc
jle
shll
cld
daa
nop
cmp
sbbl
nop
jno
jle
sub
xor
es
je
jmp
cltd
add
xchg
loop
and
inc
and
test
cs
les
inc
sub
ss
pop
ret
xor
cs
loop
push
sub
mov
cmp
gs
jno
stc
orb
dec
adc
or
add
add
scas
push
loopne
cmp
pop
mov
and
out
hlt
xor
jne
insl
outsl
mov
mov
sub
das
es
inc
add
fcoml
mov
repnz
and
pop
sbb
fcomps
jle
pop
push
adc
out
or
sbb
sbb
aas
sarb
mov
orb
test
jecxz
xchg
pop
fstps
int3
sbb
xchg
pop
popf
mov
jb
pop
js
cmp
xor
ret
adc
or
test
sbb
seto
call
inc
ds
sbb
call
xchg
daa
sub
mov
push
in
xor
xor
push
addb
loope
ret
and
ret
inc
jnp
sbb
outsl
and
add
outsl
sub
fidivrl
or
adc
jo
add
aad
arpl
inc
adc
repz
push
ret
adc
lcall
jo
cmp
ret
mov
adc
inc
or
xchg
mov
jo
push
cmp
xor
xchg
orb
cli
adc
jns
out
shlb
mov
pop
setno
cs
aad
pushf
mov
sub
stc
repnz
bound
mov
inc
push
stos
cmp
adc
in
mov
gs
add
cwtl
add
xchg
mov
daa
and
cwtl
lea
fcompl
sbb
dec
daa
pop
inc
jmp
rorl
test
inc
xlat
add
adcb
add
fiaddl
into
add
sub
or
xchg
jmp
mov
mov
inc
sub
xor
push
xlat
inc
orb
ret
loop
and
es
pop
scas
ret
int3
lcall
sbb
inc
sbb
sahf
and
cld
pop
inc
lcall
mov
mov
adc
dec
mov
es
dec
inc
jno
popa
aad
orb
je
inc
aaa
jp
fsubp
add
daa
inc
movl
ror
inc
rclb
in
pop
xor
add
xchg
lods
test
subl
lds
loop
scas
scas
ret
andb
xor
push
lds
aas
or
adc
cli
and
adc
fisttps
xchg
ficompl
dec
cmp
xor
and
add
add
mov
adc
add
cltd
xor
add
aad
mov
and
sub
pop
push
mov
add
fwait
sti
adc
push
ds
adc
push
xor
ret
fiadds
jecxz
pop
sub
or
outsl
mov
add
mov
mov
loope
add
icebp
jnp
and
ja
cwtl
push
inc
roll
popa
sub
rorl
out
shlb
mov
xchg
pop
in
aad
add
add
adc
adc
sub
ret
pop
lods
xor
add
fidivs
ss
aam
and
adc
inc
nop
push
pop
fildll
or
xchg
cmpsl
add
pop
push
inc
dec
or
sub
add
inc
xor
sub
add
jmp
push
mov
dec
or
add
bound
inc
add
dec
or
fs
and
data16
inc
sub
cmp
aas
mov
cmp
inc
cltd
add
dec
jl
pop
dec
cltd
add
add
xor
adc
sbb
les
mov
adc
inc
add
les
mov
mov
inc
xor
inc
mov
pop
and
mov
inc
adc
xor
mov
inc
cwtl
sbb
pop
inc
add
inc
jbe
inc
sbb
fs
mov
adc
sub
push
das
inc
xor
and
jbe
inc
aaa
fs
xor
pop
sarb
inc
add
inc
sub
push
and
cmp
dec
cs
dec
pop
push
xor
fs
mov
cmp
push
fwait
pusha
add
pop
fs
push
or
adc
or
adc
fs
dec
and
inc
sub
and
sbb
sbb
xor
pop
sbb
fadds
sub
inc
andb
or
aam
popf
mov
dec
or
int3
or
rcrl
cmc
dec
mov
rolb
lea
cwtl
addl
pop
ds
pop
adc
fcomps
xchg
pop
repz
sbb
inc
push
and
ds
fcmovnbe
adc
scas
popf
aad
xchg
scas
push
stos
adc
rcr
repz
aad
dec
nop
repz
push
sub
faddl
adc
fstps
vpunpcklbw
test
mov
xchg
jmp
stos
jns
stc
mov
dec
pop
nop
addr16
sbb
bound
sahf
dec
pop
addl
and
and
sbb
mov
add
in
inc
dec
push
jns
dec
cmp
push
add
fldt
fs
add
adc
test
xorb
mov
inc
mov
fcmovnu
call
pusha
ret
shll
scas
sbb
sub
push
cmp
sbb
inc
or
fldenv
int
push
es
repnz
cwtl
cmp
sbb
pop
pop
pusha
add
mov
rolb
and
cmp
add
lds
test
fstpl
mov
dec
sub
sbb
inc
inc
mov
jns
push
xchg
sbbl
xchg
xor
aaa
add
push
mov
push
dec
pop
mov
adc
mov
inc
or
repnz
sbb
and
push
sbb
inc
js
filds
add
aas
stos
dec
lods
sets
sahf
loopne
sub
or
jmp
das
les
push
movsl
in
mov
or
subl
inc
cmp
insb
inc
in
out
addr16
dec
aas
mov
insl
loope
mov
ds
jns
imul
xchg
test
and
inc
les
pusha
aas
cmp
int
inc
cmp
lcall
add
push
dec
or
outsb
lods
add
mov
scas
ja
dec
sbb
inc
outsb
inc
xchg
es
into
mov
nop
mov
loop
sub
mov
iret
andb
incb
sti
shr
pop
aad
in
inc
cmp
mov
bound
pop
icebp
adc
or
add
es
mov
daa
mov
leave
test
xor
repz
call
dec
pop
jmp
test
test
leave
inc
fwait
lds
or
sbb
into
inc
and
movsl
imul
iret
js
cmp
push
inc
cmp
pop
add
lds
lret
js
sbb
flds
push
sti
push
rol
mov
push
cmp
mov
cmpb
cltd
fimuls
inc
xchg
add
and
add
ss
fistpll
adc
add
xor
and
testb
xor
ret
or
out
cmp
mulb
mov
int3
adc
mov
xchg
dec
les
add
adc
cmpsl
xchg
ljmp
inc
add
push
jp
outsb
andl
loope
adc
inc
jne
sub
lcall
add
add
and
repnz
push
aam
loope
lea
cmc
test
andb
add
test
sub
sub
and
and
inc
pop
push
add
and
repnz
and
popa
pop
mov
orl
nop
add
cmp
stos
ret
or
cs
movsb
test
ret
das
xorb
popa
push
ljmp
ret
stos
orl
push
leave
addr16
lods
adc
sbb
mov
sbb
es
jb
adc
mov
add
daa
adc
or
jle
adcl
stc
xor
icebp
pusha
ret
popa
insl
jg
mov
addr16
inc
push
jle
outsl
inc
mov
gs
adc
xor
out
jg
jbe
xchg
dec
sbb
cmp
sbb
ret
test
mov
cmp
mov
adc
push
fs
pop
mov
push
lret
loope
scas
sbb
cmp
loopne
pmaddwd
das
adc
mov
call
test
inc
dec
xlat
xchg
out
or
andb
xor
push
cmpl
dec
repnz
add
ljmp
sbb
fcomp
mov
pusha
mov
out
aad
fldcw
js
ds
add
lods
xor
call
add
or
sbb
xor
andl
lea
aam
or
call
inc
and
rcrb
add
pop
dec
push
inc
lret
mov
adcb
pusha
pop
mov
daa
add
mov
iret
js
add
inc
jle
push
push
adc
stc
or
lret
ret
inc
xchg
insb
roll
add
imul
inc
add
cli
xchg
adc
arpl
jne
mov
mov
icebp
cmp
movsl
and
mov
jecxz
sub
cmp
out
stos
adcl
jnp
cs
dec
and
mov
cmp
out
adc
stc
stos
mov
add
scas
sbb
and
repnz
add
test
dec
mov
subb
jmp
jecxz
and
lods
cmp
mov
or
or
cli
imul
repnz
and
sbb
fbstp
cmpb
in
inc
cmc
lods
sbb
mov
mov
jbe
in
jge
sti
or
enter
and
nop
aaa
adc
inc
add
addr16
xchg
lcall
pop
ss
es
lock
insl
or
movsb
or
inc
mov
rol
test
ficoms
ret
xor
in
std
pop
scas
inc
pop
mov
adc
sub
jns
inc
jmp
fwait
repnz
inc
sub
out
add
adc
xor
xor
out
mov
cwtl
xor
dec
adc
pop
jge
jb
mov
inc
mov
sbb
and
out
cmp
pop
add
subb
pop
inc
divl
mov
shl
adc
inc
xchg
lahf
in
sahf
adc
call
lahf
sbb
mov
aas
dec
rolb
push
adcb
adc
inc
jecxz
inc
dec
sub
mov
test
sbb
and
in
cli
inc
out
xchg
and
jns
notl
mov
test
mov
cmp
add
pop
xchg
mov
es
xor
inc
mov
mov
xor
or
mov
in
push
add
out
jmp
dec
outsb
test
adc
xor
jnp
xchg
xchg
push
bound
inc
pop
sbb
add
sahf
inc
inc
add
cmp
xor
popf
push
cmp
xchg
add
sbb
popa
xor
lret
xor
call
and
imul
inc
bound
pop
dec
lock
xor
adc
xchg
sbb
cmp
xchg
sbb
add
fstl
fcoms
xchg
icebp
cmp
rcrl
push
jp
nop
icebp
into
adc
pop
lcall
rcl
pop
xchg
adc
fstl
adc
rcl
xchg
sahf
clc
dec
cli
fwait
jmp
pop
inc
push
push
rorl
adc
cmpsb
xchg
add
add
push
sahf
icebp
sub
adc
jp
push
inc
xchg
sbb
xor
push
adc
sbb
or
outsb
mov
fsts
mov
cmp
pop
aad
nop
add
ret
gs
ja
add
iret
and
jb,pn
mov
test
nop
aas
inc
cmpl
lods
mov
outsl
enter
dec
cmpsb
xchg
test
test
sub
jb
adc
sarb
xchg
cltd
cmp
push
pop
and
xlat
inc
les
push
inc
ds
xor
scas
pop
ss
add
lea
fldcw
mov
push
scas
sbb
test
cmp
adc
push
repz
ret
fistpl
stos
lret
add
dec
dec
add
push
lret
loop
popf
outsl
nop
or
stos
shll
sti
repz
sahf
pop
sub
shll
mov
mov
aam
fstps
and
mov
stc
jae,pn
mov
adc
mov
std
mov
add
lahf
add
adc
shll
dec
adc
push
sub
movl
sarl
or
push
adc
add
cmp
mov
loopne
mov
mov
dec
cmp
mov
ds
mov
bound
imul
inc
mov
cmp
add
or
lods
mov
unpcklps
xchg
adc
jmp
add
adcl
addb
shlb
enter
lock
add
xor
insl
inc
mov
mov
adc
lret
xor
mov
xor
sub
in
push
in
xchg
xchg
ret
or
andl
pop
jl
out
roll
cld
xor
pop
stos
jno
adc
xchg
lods
add
loop
inc
mov
jmp
xchg
daa
test
pop
and
dec
leave
out
jl
xchg
sbbb
and
cmpsl
xchg
push
mov
and
push
cmp
mov
inc
xchg
lock
sub
cmp
lea
pop
jmp
and
and
adc
inc
and
mov
cmpsl
arpl
or
bound
or
shr
xor
sbb
adc
xor
dec
xorl
mov
xlat
or
jo
mov
daa
fsts
jns
jae
cmp
incl
sbb
test
test
cmp
mov
pushf
cld
inc
popa
sub
and
lods
sub
sbb
dec
and
orb
pop
scas
push
sbb
sbb
pushf
addl
push
dec
and
out
mov
outsb
adc
das
stos
hlt
syscall
and
faddl
or
or
xchg
loop
push
pop
outsl
adc
ret
xlat
jbe
mov
faddl
mov
jae
cmp
ret
daa
loop
dec
outsl
mov
int
mov
or
lahf
mov
push
cltd
adc
inc
mov
mov
enter
lock
xor
jecxz
xchg
push
ret
daa
fcmovnbe
pop
icebp
cmp
aaa
loopne
mov
push
mulb
mov
pop
or
lds
pop
push
sub
pop
add
jge
cmp
jge
mov
jmp
mov
hlt
cli
insl
sbb
out
lahf
jecxz
scas
sti
cmp
fcomps
bound
sbb
xlat
dec
shrb
icebp
cmp
cs
cs
sbb
popa
mov
pop
dec
add
daa
jo
sarl
push
aas
jmp
cmpsl
je
push
add
decb
jmp
pop
dec
shll
aaa
mov
pop
and
add
dec
out
mov
lods
aas
push
mov
sub
ret
mov
dec
push
or
out
jl
mov
mov
sub
fisubl
pusha
cwtl
xor
add
test
popa
cmpsl
loop
sbb
arpl
sbb
fdivrs
dec
cmp
sbb
out
xor
push
movsb
imulb
test
add
fstl
std
xor
rorb
bound
pop
push
xchg
push
jmp
enter
cmp
out
rolb
inc
pop
push
jge
cmp
scas
ret
shl
movsb
dec
xlat
popa
setg
mov
nop
adc
shrl
dec
push
mov
es
jns
gs
adc
ss
rolw
cmc
gs
aam
adc
or
ds
gs
jne
inc
dec
ss
push
xchg
sbb
push
mov
xor
lock
adc
sahf
jge
frstor
add
mov
push
pop
rcrb
aam
or
aad
stos
push
dec
lahf
dec
stos
jne
sti
fiadds
xchg
ret
inc
cmpb
lods
inc
bound
scas
cltd
jmp
loop
push
adcl
or
jne
dec
mov
out
daa
push
and
cmp
pop
out
or
test
sbbl
adc
subl
mov
push
add
arpl
push
adc
adc
cmp
mov
andl
add
inc
addl
lea
cmpb
xchg
rolb
mov
dec
fdivrl
pop
mov
icebp
in
jl
lods
mov
mov
loope
hlt
cwtl
mov
sbb
inc
and
xchg
pop
and
ret
cltd
xor
jge
xor
sbb
outsl
xor
int3
sbb
enter
out
and
xor
sahf
push
out
out
xchg
pop
ss
xlat
or
and
lds
sub
test
or
xor
fimuls
in
test
shlb
adc
insb
inc
lret
mov
hlt
sbb
mov
inc
inc
or
imul
into
add
push
test
ficoms
push
sub
lods
in
inc
enter
dec
sbb
cmp
sbbb
mov
sbb
xchg
or
popa
or
push
in
leave
rcr
rolb
test
cvttps2pi
add
inc
ret
dec
fwait
cld
nop
cltd
pop
add
push
popa
iret
lock
inc
sbb
lods
test
incb
gs
inc
nop
and
push
lar
cmp
and
sbb
std
or
lret
sub
dec
sbb
or
or
shll
push
and
and
cmp
adc
mov
insl
dec
inc
andb
loop
sbb
es
daa
adc
pop
or
mov
test
lret
cwtl
adc
mov
out
popa
cmp
xchg
sbb
inc
xchg
push
dec
sub
clc
mov
cmp
mov
dec
sbbl
inc
inc
adc
and
mov
cltd
ds
xchg
in
jo
push
fiadds
adc
xor
push
outsb
xchg
cmpsl
shlb
jmp
inc
mov
push
xor
xor
jb
push
iret
cli
aaa
adc
xor
mov
jg
insl
dec
mov
push
aam
and
leave
lock
lahf
scas
bound
pop
ss
mov
jae
pushf
es
jmp
mov
adc
pop
dec
sub
or
adc
xchg
fldenv
xlat
dec
lea
push
and
ds
xlat
xchg
das
hlt
and
jno
add
pop
and
inc
or
and
add
addb
cmp
mov
pop
inc
cmp
stos
adc
adc
ljmp
dec
add
or
pop
pop
lret
lcall
cmpsb
cwtl
sbb
out
imul
mov
cwtl
mov
sbb
sbb
cmp
inc
movsl
pop
sbb
pop
jmp
mov
ss
ja
insl
jmp
xor
mov
inc
xchg
into
dec
pop
rcrl
push
xor
and
jl
aad
rolb
and
and
in
push
mov
mov
mov
mov
and
popa
rclb
push
sub
outsb
and
and
mull
and
lds
les
andl
jge
sti
pop
and
mov
adc
lret
cmp
adc
cli
lret
inc
sbb
pop
pop
fdivrs
pop
and
mov
add
das
imul
or
jmp
and
test
loope
pop
add
aaa
dec
enter
xor
pop
fistpll
sub
loop
mull
cltd
in
repz
test
jle
xor
fucom
dec
sahf
arpl
pop
das
mov
and
cltd
add
das
imul
loopne
lahf
inc
pop
add
sub
xchg
add
js
mov
add
mov
int3
mov
rolb
repz
sbb
and
cmp
fcom
das
cmp
bound
jecxz
cmpsb
cmpsl
xchg
pop
mov
add
add
cmp
add
hlt
mov
mov
add
push
rcl
cmp
sub
in
jns
push
sbb
push
push
in
add
xor
push
mov
adc
sbb
add
xor
pusha
data16
add
sbb
xor
xor
and
aaa
inc
sub
sub
daa
cmp
test
inc
push
jp
and
mov
adc
aaa
bound
xchg
movb
add
pextrw
mov
and
pop
push
cmp
inc
cwtl
sub
cmp
int3
inc
xor
int3
inc
adc
mov
adc
add
pop
jp
push
mov
inc
sbb
xor
fs
aas
push
xor
and
inc
push
or
test
mov
push
sbb
fs
mov
inc
pop
adc
adc
or
or
adc
out
xor
adc
lds
data16
and
sub
sub
mov
inc
adc
push
loop
inc
adc
je
inc
add
test
sbb
add
cmp
add
dec
add
mov
inc
xor
xor
pop
dec
sbb
sbb
bound
add
adc
inc
sub
mov
inc
add
pop
fs
inc
xor
inc
xor
add
sub
bound
adc
out
xor
call
inc
adc
xor
fs
das
dec
sub
daa
or
test
or
adc
adc
add
fs
sbb
pop
bound
dec
sbb
inc
and
mov
adc
pop
bound
adc
fs
cmp
test
or
mov
lea
mov
adc
sub
test
and
push
adc
add
int3
and
mov
adc
sbb
inc
pop
or
cmp
das
dec
sbb
fs
or
push
xor
test
or
dec
or
inc
and
adc
jle
sub
dec
daa
inc
aas
mov
cmp
inc
add
sub
or
arpl
dec
je
inc
sbb
bound
test
or
adc
adc
sbb
or
adc
or
js
cltd
sbb
adc
bound
test
sub
adc
add
mov
dec
sbb
xor
bound
lds
sub
and
aas
inc
pop
movb
outsb
add
adc
or
pop
or
adc
fs
das
bound
adc
sbb
bound
test
or
mov
adc
jbe
inc
add
scas
dec
push
inc
and
and
bound
test
or
adc
fs
or
pop
cmp
outsb
aas
mov
inc
aaa
fs
das
bound
adc
xor
fs
sub
aaa
bound
pop
mov
mov
inc
int
and
aas
sub
add
add
cmp
jmp
mov
inc
cmc
or
pop
mov
inc
cld
ficoml
hlt
or
aad
int
sti
pop
aam
icebp
and
add
mov
fcoml
popf
scas
cwtl
or
out
pop
jp
push
dec
pop
mov
cli
pushl
mov
negl
push
das
inc
xor
rep
add
pop
cmpsb
xlat
adc
cli
ficompl
mov
sahf
je
xchg
xchg
loop
adc
push
pop
mov
enter
gs
aam
inc
cld
into
mov
js
sbb
out
xorl
inc
clc
xchg
and
fcmovnu
or
lcall
jle
inc
mov
pop
sub
xchg
data16
push
lods
jb
cmp
jp
sub
loopne
das
movsl
popf
sub
shlb
mov
xor
inc
mov
push
in
pop
cmpsb
mov
push
loopne
mov
xchg
add
leave
push
dec
mov
jge
jl
mov
mov
mov
dec
jnp
dec
push
in
iret
or
idiv
sbb
mov
dec
fnstenv
pushf
jb
mov
jmp
lret
sub
push
gs
dec
movsl
adc
dec
popa
inc
push
pop
push
mov
ss
lea
int
imul
dec
xor
mov
fld
inc
cmp
ficomps
hlt
bound
dec
fdivl
imul
jns
mov
adc
faddl
imul
sbb
lods
add
jae
xchg
mov
sub
add
gs
loopne
mov
scas
inc
mov
jle
dec
in
xchg
loopne
add
repnz
out
push
lret
mov
mov
scas
daa
cmp
stc
shlb
push
push
jmp
jg
sub
lcall
xchg
dec
aas
mov
or
in
sbb
sub
insl
divb
imul
ss
imul
rcll
aaa
fdivs
cmp
int3
arpl
cld
xor
outsl
int
je
and
pop
loope
int3
jae
stos
aaa
repz
cld
jge
xlat
jno
movsb
sbb
sbb
test
dec
loop
ret
xchg
dec
mov
cmp
sub
or
les
loope
addr16
xor
sbb
pop
std
mov
imul
inc
xchg
iret
xchg
nop
pop
or
movsb
negl
cmp
xor
jo
inc
lods
jg
pop
cltd
lds
aad
clc
sbb
xlat
push
mov
stc
jle
pop
stos
jbe
add
pop
in
xchg
fistpll
ja
inc
dec
aam
xlat
pop
arpl
push
jl
jno
outsl
xlat
or
mov
cmpsl
xor
xchg
push
jle
popa
hlt
inc
je
cmp
mov
mov
mov
xor
push
jns
inc
mov
jp
ror
adc
movsb
push
das
iret
xlat
sub
jo
jp
mov
bound
sub
push
or
cli
cs
or
mov
into
adc
enter
mov
jo
cmp
shrb
fstpt
add
inc
pusha
clc
jg
enter
in
push
rol
shll
xchg
pop
push
mov
fucom
mov
cltd
adc
xchg
cmp
mov
mov
push
adc
scas
insb
stos
fnstenv
shll
sbb
je
in
xchg
pop
aas
pushf
ss
xlat
cs
sub
addr16
aad
lret
popa
subl
clc
xor
mov
add
stos
pushl
stos
mov
pushf
pusha
mov
lea
jmp
rcll
push
fimuls
dec
mov
xchg
jne
dec
clc
fs
cmc
ljmp
or
cmp
cmpsb
push
adc
into
xor
or
inc
ret
lods
xchg
cmpsl
scas
out
push
ss
ja
xor
fbld
sbb
mov
scas
outsb
jecxz
mov
movsl
inc
pop
test
loopne
or
adc
dec
cs
lods
iret
inc
push
push
hlt
pop
std
inc
hlt
jecxz
add
mov
int3
ja
jns
adc
jbe
dec
jae
movsl
cmpsl
xor
das
inc
xchg
fs
push
loop
inc
and
sarl
fcom
daa
xchg
add
out
cmp
loopne
rcrl
orb
and
mov
fistl
gs
pop
sbb
in
jmp
or
cs
sti
pop
xchg
hlt
and
push
inc
test
xchg
or
sahf
sub
cld
enter
jg
lret
in
inc
cld
pusha
test
or
dec
and
aad
in
dec
in
xchg
fnsave
mov
repnz
das
repnz
stc
pop
pushf
pop
lea
jl
jmp
rol
mov
out
popf
out
push
cwtl
mov
testl
mov
jns
add
rcrl
into
cmp
push
lahf
and
adc
ucomiss
cmp
daa
flds
mov
fdivrs
mov
lahf
inc
xchg
jmp
or
dec
cltd
frstor
add
xchg
sahf
sbb
add
dec
mov
pop
into
xchg
cmp
pop
pop
scas
ret
ret
xchg
and
pop
mov
std
ret
xchg
jne
lcall
and
add
filds
jne
dec
cmpsb
movsb
sahf
cs
insl
jno
xor
xchg
xchg
add
or
in
pop
add
xchg
dec
addr16
add
dec
push
mov
jb
lods
test
sub
insl
iret
sub
lods
ljmp
sub
fdivp
cwtl
xor
jae
xor
aaa
mov
stos
fwait
scas
jle
pop
inc
adc
adc
adc
inc
inc
popf
sbb
inc
ret
add
repz
sub
cmp
test
mov
xor
rclb
lcall
or
inc
push
js
cmc
pop
xchg
sub
push
shll
in
addr16
pop
push
cld
pop
subl
jns
out
mov
int
repz
xor
data16
xchg
fcmovnb
mov
push
add
fst
jle
pop
mov
or
es
mov
in
xor
jl
cmp
lods
push
cmpb
fiadds
cwtl
xor
xchg
jnp
inc
push
lds
cmp
bts
and
sbb
pushf
mov
cmpb
mov
push
lret
sub
insl
jp
inc
imul
ss
fstpl
mov
ret
jp
sahf
clc
cmp
leave
or
sbb
insl
enter
mov
jne
mov
and
push
or
mov
fsubrl
adc
cmp
fistpl
push
xchg
dec
mov
mov
mov
cmp
and
add
aam
jmp
cmp
push
mov
fistpll
fstps
jmp
push
mov
xchg
push
mov
fnstsw
xchg
mov
dec
jne
popa
pusha
insl
push
dec
popa
or
mov
sti
std
adc
test
xchg
lea
loopne
pop
push
outsb
jns
ljmp
pop
mov
mov
rcll
imul
dec
cltd
rolb
outsl
icebp
shlb
dec
int
mov
arpl
jl
jne
or
inc
mov
push
sub
mov
lcall
loopne
das
mov
imul
adc
xchg
mov
mov
xchg
les
and
mov
lock
stos
test
daa
mov
fimull
leave
sbb
xchg
fidivl
mov
rcll
popa
enter
in
xor
enter
xor
arpl
idivb
pop
pop
inc
fsubl
push
push
and
xor
dec
pop
les
mov
sub
clc
mov
cmp
pop
fidivrl
lcall
inc
ret
arpl
xor
jl
js
icebp
loopne
mov
imul
mov
push
xchg
mov
mov
daa
inc
lret
sbb
push
dec
rcrl
into
cld
sti
stos
mov
test
out
add
pop
xchg
js
jge
cmpsb
ss
divl
cmp
push
out
push
in
xchg
fsts
jmp
jecxz
and
adc
clc
unpckhps
ret
add
loop
rcl
in
sub
mov
xor
and
mov
jo
decl
add
lods
cwtl
clc
xchg
fidivs
push
adc
lods
xor
stc
iret
mov
sbb
dec
jmp
push
fisttpl
mov
or
sbb
into
mov
int3
mov
cmp
and
jmp
rol
sub
pop
cmp
ja
test
stc
jnp
ret
mov
mov
shl
es
mov
call
lea
shlb
inc
push
mov
pop
pop
cwtl
decl
pop
jbe
es
addr16
les
jno
xor
pop
and
mov
das
adc
inc
inc
mov
pop
and
shrb
add
jle
insb
es
mov
hlt
mov
stc
mov
sbb
outsb
push
popl
xchg
mov
cwtl
fisttpll
pop
jge
loope
loopne
sub
test
pop
in
adc
xlat
imul
push
scas
pop
or
insb
cmpsl
xor
sub
in
xchg
fcomp
aad
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
add
dec
outsl
popa
fs
imul
add
pop
scas
lret
out
xor
iret
xchg
mov
pusha
push
js
mov
jl
sub
inc
inc
mov
out
out
mov
cmpb
ret
or
test
cli
icebp
sbb
out
mov
rcr
popa
or
xchg
pushl
or
xchg
add
xchg
mov
sbb
sbb
jb
pushf
nop
andb
cmp
sbb
int3
pop
jmp
pop
popa
fisubrl
mov
aad
inc
sub
or
pop
mov
inc
popa
outsb
inc
add
loop
in
sbb
arpl
xchg
jl
data16
inc
adc
cs
orb
enter
enter
ljmp
sbb
mov
adc
mov
mov
ss
mov
pop
dec
mov
xorb
int
gs
mov
ljmp
mov
repz
jp
push
fcoml
js
push
leave
outsl
loop
shrb
add
in
xchg
xlat
mov
in
or
aas
aam
out
movsl
jno
rcll
xchg
mov
or
mov
xchg
inc
inc
xchg
ss
dec
xor
sbb
aam
testl
or
mov
enter
push
sbb
test
retw
out
out
test
add
sub
adc
scas
sub
sub
xchg
ds
push
jp
mov
push
fsub
pop
dec
popf
popf
push
mov
cmpsl
push
mov
mov
mov
xor
lcall
adc
xor
adcl
add
sti
shl
iret
dec
pop
xor
mov
icebp
sub
femms
int3
pop
sbb
inc
iret
pop
mov
pop
or
xchg
jmp
hlt
mov
inc
or
add
and
lahf
andl
repnz
insl
adc
test
mov
std
push
jecxz
jmp
jmp
push
jnp
adc
add
sahf
jb
jecxz
das
fldcw
mov
bound
or
hlt
push
push
sbb
scas
jb
sbb
push
add
ja
push
jp
and
lock
xchg
or
mov
jmp
jecxz
icebp
faddl
daa
pushf
push
xor
push
addr16
cmp
imul
hlt
inc
mov
fnstcw
in
xchg
aad
outsl
scas
add
es
fcmovnu
arpl
rcrb
addl
das
xchg
jmp
test
in
mov
aaa
adc
adc
push
sub
mov
ret
and
cwtl
adc
xchg
inc
adc
adcb
ror
lret
cmp
xor
mov
jecxz
lret
jle
sbb
insb
loope
mov
aam
out
or
dec
push
xor
push
sbb
les
jno
mov
add
push
lock
jae
out
mov
mov
loope
cmp
lea
jo
dec
mov
rol
inc
aas
cmp
pop
dec
imulb
push
test
push
hlt
xlat
jo
dec
sub
mov
xchg
adc
mov
ret
ss
stos
mov
inc
xor
ds
jmp
pushf
cmp
mov
cmp
or
mov
sbbl
js
lahf
xchg
icebp
insl
mov
dec
push
cli
pop
push
fldt
movswl
lock
outsl
pushf
cs
xchg
clc
lcall
jge
mov
and
sbb
pop
shl
pop
out
add
or
mov
ljmp
sub
popa
sbb
decl
int3
push
xchg
into
add
mov
jmp
cwtl
sti
or
push
aaa
lea
ret
jns
inc
xlat
dec
jmp
dec
jns
arpl
lcall
testb
mov
clc
add
into
sub
lods
jne
lahf
cli
bound
pop
stos
mov
inc
bound
inc
loopne
push
movsb
pop
lods
mov
mov
rcrb
add
inc
mov
cmpb
fsubr
xor
sub
into
dec
cli
mov
sub
sbb
xor
in
idivl
aas
loopne
mov
xchg
mov
mov
or
push
mov
sub
movsl
pop
xchg
fwait
in
xchg
sarl
add
cli
inc
sbb
dec
pushf
mov
mov
mov
and
mov
cmpsl
adc
adc
mov
pusha
ret
push
leave
aaa
xor
or
and
cltd
inc
aas
push
in
add
inc
lcall
lret
jg
xor
adc
lahf
mov
push
push
and
aaa
mov
test
popf
push
pusha
and
sbb
xorl
dec
inc
dec
pop
iret
out
xchg
shr
and
fs
mov
xor
inc
mov
xsaveopt
xchg
stos
push
pop
cmp
pop
lea
sbb
push
lds
inc
mov
rol
sbbb
shl
cmp
or
push
add
inc
pushf
outsb
stc
sbb
jno
jbe
fcomi
incl
cwtl
mov
daa
stos
xchg
addr16
lahf
sub
mov
adc
push
repnz
popa
fstps
enter
test
mov
pop
push
lret
mov
pop
lcall
inc
mov
jp
xchg
bound
and
sbbb
outsl
jb
mov
and
ret
or
sahf
aam
ja
or
aaa
mov
daa
stos
or
cmp
in
shrb
mov
xchg
inc
stos
xchg
push
xor
cmp
fldcw
push
xorl
xor
xchg
shll
jb
ror
not
mov
call
movsbw
movb
lea
lea
push
mov
mov
lea
pushf
pushf
pushl
pushf
movl
pushf
mov
push
pusha
movb
pushl
ret
fists
ret
mov
rclb
scas
mov
cmpsb
add
pusha
lcall
fisttpll
push
mov
lahf
jne
stos
xlat
aas
and
push
mov
jb
jb
ret
mov
dec
cmp
loope
sti
xchg
dec
popf
fcomip
lea
mov
dec
icebp
cmp
loop
jnp
fstp
cmp
mov
leave
shlb
leave
inc
test
dec
mov
test
sub
mov
mov
stos
xchg
fs
xor
mov
mov
repz
xchg
xor
test
ja
mov
dec
fsub
aad
push
lret
lds
pop
or
test
stos
into
cld
pushf
inc
int3
dec
jb
pop
insl
je
cli
and
adc
jmp
scas
dec
icebp
in
xchg
shr
cmpsl
push
leave
into
js
cs
or
pop
push
bound
dec
xchg
je
xor
adc
mov
mov
loopne
cmc
daa
cmp
lea
fwait
push
cli
push
lea
int3
mov
adc
dec
test
jae
add
jns
dec
mov
sbb
add
pop
pop
add
movsl
xchg
sarl
pop
mov
mov
scas
in
mov
sub
jo
test
adc
push
out
jecxz
mov
and
cmpsl
jae
mov
cmp
add
push
inc
int
addr16
je
push
ljmp
pop
loopne
fisubs
mov
jae
mov
push
mov
ljmp
cmp
pop
roll
in
xchg
iret
and
hlt
out
push
cs
dec
in
jnp
into
les
test
mov
xor
pop
dec
mov
jae
cli
dec
xor
mov
pusha
xchg
cmp
jle
pop
inc
mov
or
pop
xlat
scas
adc
sti
mov
aaa
xor
xor
dec
and
and
dec
cmp
das
and
add
lods
int3
jle
aaa
mov
fchs
dec
test
pushl
lock
stos
sub
inc
repnz
rcl
cltd
pop
mov
inc
sub
stc
shr
jp
sub
in
mov
pop
cwtl
test
shr
ja
adc
push
inc
imul
loopne
and
in
inc
je
jecxz
in
xchg
pop
in
cld
pop
fsubs
or
inc
test
jb
pop
xchg
sub
cli
ja
add
push
stos
pop
out
loope
dec
ds
in
inc
lods
sbb
or
push
inc
adc
rclw
mov
dec
mov
mov
aad
xor
sarb
ret
jnp
sub
sbb
ja
jge
sarb
dec
mov
idivb
push
jne,pn
pop
loopne
add
int3
fdivrp
aas
mull
lods
divb
out
repnz
insl
sbb
sub
mov
push
mov
fsubrl
add
hlt
xchg
cmc
pop
aas
pop
add
mov
fsubrs
mov
mov
movsl
pop
xchg
push
xor
test
pop
andb
repnz
stos
mov
dec
lcall
push
lods
push
in
xchg
int
addr16
iret
push
sbb
xchg
jae
xor
inc
in
dec
dec
stos
imul
stos
xchg
pop
add
adc
xchg
rolb
mov
sbb
int
pop
dec
sub
mov
jge
mov
out
jmp
mov
inc
sti
repz
pop
push
inc
popa
out
mov
mov
jo
dec
inc
cmp
jns
mov
dec
in
jbe
sub
xor
nop
mov
push
mov
add
jle
pop
in
dec
sub
xchg
and
xchg
in
mov
xchg
push
adc
push
push
mov
int
adc
mov
inc
xchg
bound
int
into
sbb
mov
adc
pop
jbe
callw
fs
arpl
jmp
or
sbb
xlat
int3
cld
inc
js
add
xor
sbb
hlt
rorl
cs
gs
movsl
mov
jae
jge
out
shl
sbb
popa
insb
sti
sahf
lret
xor
push
data16
pop
sub
loope
mov
xchg
aaa
addl
daa
push
jo
test
dec
aaa
scas
rorl
jle
and
mov
dec
or
sbb
test
stc
ret
jg
test
imul
push
int3
push
mov
dec
inc
scas
push
mov
in
ret
sbb
int3
jno
aad
push
pop
mov
imul
add
cmp
xchg
xor
mov
fildl
push
test
mov
add
fisubs
xchg
mov
mov
or
add
mov
pop
addr16
enter
gs
dec
insl
jb
fcmovne
je
mov
les
sarl
or
cmp
pop
cmpsl
out
cli
pop
repz
sub
add
push
fisubrs
adc
mov
clc
push
sbb
test
stc
adc
jnp
out
xchg
orl
and
mov
adc
in
push
mov
dec
aas
test
ss
test
dec
sub
cs
fmuls
shlb
dec
int
sahf
ljmp
addl
shrl
insl
aad
in
xchg
lret
push
xor
rol
lods
loopne
pop
fwait
and
inc
fwait
pop
fwait
call
and
sbb
add
sbb
xchg
add
sahf
dec
mov
mov
mov
xor
std
sti
lds
loopne
pushf
jnp
push
pop
xor
push
adc
pop
movsb
mov
mov
fisttpll
pop
push
mov
pop
or
outsl
in
or
shll
repnz
dec
sub
dec
add
push
mov
ss
adc
scas
dec
lcall
cs
xchg
lret
adc
inc
pop
ret
mov
xor
and
pop
cmpsb
mov
push
fldl
xor
lods
popf
mov
xor
sbb
sbb
out
push
pop
movsb
gs
or
filds
xchg
addr16
mov
cwtl
cmp
sbb
pushf
sub
dec
or
popf
and
push
test
mov
bound
mov
mov
dec
pushf
fninit
out
sbb
xchg
pop
adc
bound
inc
jmp
add
jle
xlat
popf
nop
pop
push
fidivrl
jb
cmc
sub
push
test
das
idivl
in
xchg
lret
inc
neg
call
dec
push
scas
icebp
dec
cmp
mov
jge
sbb
push
jle
xlat
fneni(8087
cmc
loope
dec
jg
cmp
sub
pop
push
push
addb
or
mov
jno
xor
ljmp
gs
pop
mul
enter
stos
xchg
in
sub
mov
loope
push
adc
dec
out
mov
dec
xor
sbb
jecxz
dec
inc
js
xor
test
ss
xor
rcll
insb
or
int
mov
dec
inc
mov
dec
cltd
jne
push
or
popa
mov
nop
pop
push
mov
fnstcw
mov
int
xor
hlt
dec
mov
or
in
out
cmpsl
jnp
pop
inc
dec
adc
cmp
or
sub
int
push
mov
xor
cwtl
cmp
xor
in
xchg
leave
jae
test
mov
pop
ds
dec
lea
add
aad
repz
xchg
add
movb
stc
xchg
movsl
xchg
or
lcall
sub
or
lods
movsl
mov
arpl
scas
sub
xchg
pop
popf
insl
and
mov
addl
xchg
lea
lods
in
scas
frndint
adc
inc
pushf
imul
and
cld
cli
sbb
sahf
imul
js
outsl
leave
xrelease
out
fists
adc
mov
pop
mov
inc
ss
ret
adc
ret
mov
sub
std
ret
jae
inc
sbb
cmpsl
dec
mov
imul
cwtl
inc
inc
in
xchg
enter
call
sti
lcall
add
jp
push
jmp
incb
fldenv
sbb
in
call
or
inc
xor
incl
or
cmpsl
mov
test
cld
xor
or
stos
pop
rcll
imul
negb
ret
cltd
xchg
rep
stos
int
sbb
add
jmp
sub
ret
add
xchg
cmpsb
in
loopne
jp
sbb
iret
fcmovne
mov
cmp
cmp
sub
cs
push
mov
icebp
or
shlb
movsb
repz
and
xchg
enter
push
cmp
loop
jecxz
jecxz
int
jecxz
mov
cs
push
fistpll
iret
icebp
or
dec
out
add
adc
push
rorl
daa
jns
fldenv
scas
push
movsl
bound
mov
pop
pop
xor
mov
ret
xchg
in
xchg
or
test
xor
lret
popa
fisttpl
mov
push
subb
scas
sub
mov
test
clc
sbb
pop
xchg
or
dec
and
mov
sahf
jo
mov
lret
in
xor
rcrb
test
lods
repnz
hlt
xchg
stos
cmp
xor
pop
cs
mov
mov
icebp
and
imul
mov
mov
xorb
inc
ss
mov
mov
lods
lea
enter
jne
insl
inc
xor
xchg
xor
in
and
or
jg
xor
dec
xchg
mov
adc
inc
and
and
mov
repnz
sub
lret
aad
fwait
xor
pop
in
aad
loope
orb
in
xchg
pop
push
into
mov
sar
sub
or
adc
shrd
mov
mov
cmc
cmp
pusha
sub
pusha
pushf
stc
pushl
popl
pushf
mov
bt
clc
cmp
push
lea
ja
clc
sub
rol
stc
shl
add
mov
shld
bts
mov
call
pop
outsb
sar
ret
jecxz
out
pop
ss
orb
xor
jo
adc
int
sub
adc
push
sbb
cmpxchg
mov
lock
xlat
lret
mov
sub
arpl
mov
leave
andl
cmp
out
ljmp
jecxz
sub
inc
inc
cli
jl
add
dec
or
add
xor
aaa
ret
jmp
sbb
mov
es
shufps
mov
pop
sub
xchg
insl
stos
jb
leave
jmp
mov
mov
or
mov
enter
arpl
or
icebp
dec
fs
or
cmp
sbb
or
mov
aad
adc
in
push
xor
repnz
dec
ret
jg
pop
pushaw
imul
xor
dec
dec
dec
sti
dec
pop
pop
xor
push
xchg
outsl
mov
in
xchg
lds
lret
out
cmovbe
and
push
mov
pop
fistpl
add
jae
je
or
call
pop
cmpb
sbb
enter
xorl
sbb
jge
mov
fldenv
and
push
jns
lea
jge
je
mov
popa
insl
lret
adc
out
inc
xlat
inc
push
sbb
test
sub
mov
aaa
in
out
adc
sub
sbb
out
mov
pop
adc
push
or
lds
mov
mov
and
jne
push
fisubl
pop
sub
sbb
sbb
fstpl
cmp
xor
sub
fwait
loop
pop
jmp
out
scas
bound
outsb
in
xchg
les
mov
and
mov
loop
nop
pop
cld
jne
jg
mov
dec
pop
stc
mov
cmpsl
xchg
mov
fcoms
mov
cmpsb
ficomps
roll
push
dec
or
shr
mov
gs
mov
mov
sti
dec
add
sub
sahf
mov
adc
pop
loopne
inc
xor
outsb
xchg
jp
and
cwtl
xchg
es
cld
jbe
dec
adc
cltd
sub
xor
nop
lahf
outsb
lret
inc
push
push
test
sbb
push
mov
ss
sbb
push
mov
add
xor
sbb
movsl
dec
adc
dec
cmp
jp
out
icebp
cmp
lods
call
sbb
aad
lods
push
mov
repnz
rolb
icebp
mov
fiaddl
insb
mov
cmc
jecxz
fidivs
ret
loope
xor
sbbl
iret
and
add
enter
stc
mov
cld
add
lret
hlt
mov
push
sahf
xor
adc
mov
lret
sarb
in
mov
out
inc
dec
mov
xor
and
sub
in
xchg
ret
mov
and
rcrb
pusha
cs
inc
adc
addl
scas
pop
inc
sub
jge
and
or
pushf
fcmovnu
repz
pop
sbb
fwait
out
repz
pop
xlat
cmpsl
pop
out
or
adcl
rcr
pop
mov
orb
adc
push
int3
add
add
sub
cmpsl
inc
in
aam
iret
ret
nop
jmp
and
fs
mov
pop
pop
or
lods
add
movsl
xchg
sarb
aad
stos
and
jmp
or
hlt
lods
push
inc
inc
cli
and
push
inc
xchg
pop
fcomps
inc
pop
xor
adc
push
adc
inc
roll
rcrb
dec
ret
xor
add
orb
rol
mov
adc
pop
push
orl
int3
shl
cmp
sub
and
sub
orb
add
rorb
and
and
cmp
shlb
pushf
sbb
and
add
push
leave
or
and
aaa
adcl
adc
fdivl
nop
inc
sbb
cmp
mov
inc
pop
sbb
fmuls
add
dec
lds
push
pop
sbb
fcomp
jl
cmc
adc
test
push
ret
xor
aam
iret
inc
stos
xor
add
mov
inc
test
into
mov
cltd
adc
loopne
mov
add
add
push
lret
adc
and
push
inc
bound
add
cmp
arpl
nop
add
mov
push
imul
imull
rolb
mov
xchg
lods
test
sbb
or
gs
jnp
xor
mov
add
adc
ret
mov
rcll
out
inc
loopne
pop
repz
sub
mov
outsl
sub
xchg
stos
testb
lcall
and
daa
mov
xor
aam
rclb
test
or
xchg
add
aas
mov
mov
ret
add
cmp
dec
fwait
rclb
idiv
and
arpl
cld
cmp
int3
rolb
out
shll
mov
adc
xchg
rolb
sub
or
add
shrb
and
rcr
cli
cld
cmp
sub
xchg
in
and
std
mov
bound
faddl
into
add
xor
cs
lahf
add
dec
xchg
in
jge
push
lcall
pop
add
dec
xchg
inc
mov
mov
jne
add
aaa
jp
iret
loopne
and
pop
xor
loope
and
repnz
add
or
inc
popa
js
xor
pop
add
mov
mov
aas
sbbb
mov
lods
add
inc
xor
xor
xchg
pusha
jae
pop
xchg
sarl
rcrl
inc
add
pop
cmp
add
push
sbb
add
jb
shll
add
cmp
movsl
add
push
adc
inc
leave
jge
jle
out
shll
xchg
dec
add
cld
pop
xchg
aas
sbb
push
inc
add
or
mov
dec
fcomps
js
fcompl
xchg
add
lret
jg
cmp
mov
and
mov
or
xchg
cmp
xor
in
pop
mov
sbb
fistpll
jmp
jp
fwait
xor
mov
pop
add
sbb
inc
cmp
push
cmp
cmp
mov
sub
add
subb
inc
jmp
sti
xchg
in
insl
loop
pop
ret
push
ja
and
ret
lret
add
sahf
mov
add
test
or
jbe
lods
aas
daa
dec
es
or
add
and
cmpsb
insl
jb
dec
add
xchg
cmp
or
loopne
xchg
scas
mov
cmp
add
inc
lret
push
add
sub
fidivl
mov
addl
xor
mov
inc
popa
lret
mov
sti
xlat
add
outsl
inc
xor
jbe
xor
cmc
lret
cmpsb
fs
push
push
inc
test
addb
mov
and
add
fs
xchg
lea
test
nop
add
out
leave
sub
push
aad
daa
pushl
or
subl
adc
jmp
push
test
add
scas
cld
sub
fildl
mov
cmp
xor
adc
lret
push
movsl
aas
popf
pop
add
mov
filds
jg
iret
sbb
pushf
push
add
mov
and
leave
testb
or
adc
xor
outsb
inc
mov
fs
repz
mov
inc
gs
lds
dec
clc
inc
cwtl
push
sbb
ja
or
fcomip
ret
xchg
lock
sub
test
mov
outsb
and
jno
mov
pusha
xchg
cmp
lea
andl
add
jae
addl
test
add
cwtl
rcrb
fnsave
add
lods
mov
push
call
insl
xlat
sub
es
jbe
add
fmulp
mov
aas
xlat
mov
idivb
lret
pop
inc
les
iret
add
testb
or
mov
sub
mov
xchg
popl
mov
adc
push
sub
leave
fistpl
imull
mov
add
mov
xor
xchg
push
fwait
adc
popf
and
inc
add
add
mov
sub
sub
push
shl
pop
push
jbe
in
fucomp
and
shrl
roll
add
push
cmp
pop
fimull
addr16
and
ret
xchg
or
sbb
push
cli
imul
jb
aad
lods
sub
jle
cltd
aam
inc
pop
fadds
es
and
add
dec
dec
out
nop
jmp
mov
xor
push
rorl
xchg
xor
lea
les
mov
xchg
cmp
sbbb
ljmp
xor
xchg
jle
fldl
lahf
mov
push
call
cmp
cmp
out
jo
aaa
sti
shll
imulb
xor
adc
scas
push
les
ret
xchg
inc
je
inc
push
fsubrs
das
pusha
rol
fs
push
fwait
inc
test
push
mov
ljmp
lea
add
jno
jnp
pop
hlt
sub
out
xor
jg
xchg
and
xor
stos
int3
add
jno
cmp
lods
add
idiv
mov
jmp
mov
mov
cmpsl
hlt
xchg
xor
xor
cmp
fiadds
adc
lock
loop
add
pop
inc
or
mov
jae
xor
int
cmp
ljmp
inc
add
jb
pop
add
push
adc
cwtl
shll
adc
cmpsb
cmpl
clc
cmp
fdivs
add
sbb
out
add
mov
gs
and
aaa
cmp
icebp
add
mov
sbb
test
jbe
and
inc
and
add
shl
jp
fnstsw
push
mov
or
inc
lods
sub
ja
dec
les
loopne
or
inc
clc
ret
enter
or
add
inc
pop
jo
lahf
ds
subb
push
out
dec
mov
sbb
cmp
cmp
mov
adc
or
into
addl
add
loopne
mov
or
fimull
add
adc
mov
test
imul
fwait
inc
push
jno
xchg
filds
pushf
fs
add
test
stos
jnp
adc
popf
mov
and
outsb
bound
lret
adc
or
aam
xor
pop
add
and
adc
add
jg
push
and
jno
or
mov
sbb
mov
xchg
stc
cld
mov
test
jmp
fdiv
push
or
jecxz
cmpsl
dec
popa
cmp
inc
adc
sub
sbbl
sbb
and
repz
pushf
inc
inc
movq
or
xor
movsl
or
rcll
push
cmp
push
mov
pop
sti
adc
push
xchg
or
fmul
jecxz
or
add
jmp
add
inc
cmp
xchg
arpl
fs
inc
das
testl
or
std
or
or
cs
notl
push
into
adc
adc
sbb
jbe
out
in
jle
adc
add
push
mov
inc
cmp
mov
and
jb
cmp
insl
mov
add
dec
mov
xor
in
rolb
sub
cmp
test
fwait
cmp
xor
push
mull
repz
adc
ret
sti
icebp
add
cld
xor
lock
pop
pop
add
outsb
mov
orl
inc
fdivl
add
dec
lret
in
cmp
add
jl
jg
movsl
inc
lds
dec
shlb
or
inc
cs
push
lock
sbb
jmp
mov
repnz
imul
sbb
dec
xor
test
popa
icebp
xor
push
setns
jae
loop
lcall
out
jb
jno
push
inc
enter
cmp
dec
fucom
push
add
mov
sub
leave
js
mov
push
add
pop
fisttpll
xchg
not
add
push
pushf
mov
add
test
push
icebp
jo
insl
add
mov
pushf
es
lock
addr16
and
cld
shr
mov
adc
orl
cli
jg
or
cld
cmp
fwait
sub
or
push
test
and
addb
cld
lahf
jo
outsb
or
cwtl
mov
pop
pushf
add
loope
push
sbb
rorl
jge
sub
shrl
sub
xor
loope
ret
add
arpl
in
int3
cli
out
add
xor
add
clc
xorl
xor
pop
ss
add
in
sub
je
xchg
sbb
aaa
push
or
popf
cmp
add
cmp
cmpsl
pop
mov
nop
jnp
out
push
mov
push
data16
push
fildl
inc
iret
inc
ret
aas
shrl
je
mov
mov
cmp
mov
ret
outsb
cmp
js
lock
es
jns
add
pop
push
outsb
cli
in
add
jno
xor
cmp
mov
outsb
scas
add
daa
sub
push
call
mov
fcompl
mov
add
inc
repz
aad
lahf
dec
jmp
inc
push
add
int3
addl
xchg
sarl
add
iret
pushf
cmpsb
and
idiv
dec
mov
mov
bound
jecxz
add
pushf
rcrb
dec
in
add
clc
loopne
dec
das
xor
test
outsb
rorl
enter
loopne
add
aaa
mov
sbb
fdivr
insl
jmp
sbb
pop
mov
mov
lock
into
add
xchg
and
aam
xor
mov
lods
movsb
hlt
sbb
repnz
sbb
fdivl
fidivrs
jbe
mov
test
std
jno
lahf
mov
cs
fadd
add
testl
or
jmp
loopne
pop
add
sahf
add
mov
js
mov
adc
out
adcl
xchg
movsl
cmp
add
add
fsubl
std
add
jbe
roll
adc
push
pusha
outsb
sub
add
pop
es
xor
push
dec
cmp
cltd
into
out
dec
mov
movsl
jne
mov
push
lods
and
or
sbb
add
fdivrs
test
jl
imul
add
mov
adcl
xor
add
popf
movsb
sbb
inc
mov
pop
insb
aam
pop
add
cld
shlb
ja
add
in
pop
jae
jnp
ret
nop
mov
sbb
out
fsubrs
mov
add
inc
xchg
mov
jbe
dec
jne
cli
add
in
ljmp
incl
mov
imul
mov
cmpb
aaa
dec
add
inc
mov
and
push
add
dec
mov
fisttps
sahf
cmp
addr16
out
rolb
cwtl
adc
mov
add
into
add
cmp
push
outsl
pusha
cmp
add
add
add
dec
fstpl
mov
xchg
add
pop
es
sbb
sbb
dec
std
fcoms
ret
ror
cmp
add
pusha
xchg
push
mov
fs
push
jl
xor
add
cmp
fildl
sbb
xor
mov
movsl
add
add
lea
leave
add
dec
popf
mov
mov
pop
sub
add
fwait
dec
inc
and
xchg
inc
and
cmp
roll
fucom
scas
pop
cli
push
mov
repnz
je
cmp
popf
into
out
aas
add
orl
shl
sub
push
popf
daa
add
push
jp
aas
fiaddl
gs
loope
imul
mov
test
mov
xchg
add
sar
or
dec
les
push
jno
cmp
add
jne
shl
andl
add
xorb
inc
add
loopne
sbb
ret
mov
cwtl
int3
cmp
add
pop
andb
sub
pop
cmp
in
shrb
or
xor
push
pushf
nop
jecxz
push
dec
inc
add
sahf
lds
add
xchg
adc
sub
push
add
jl
pushf
fmulp
mov
out
mov
daa
testb
or
nop
dec
inc
cmpsl
dec
jle
lods
lcall
and
xchg
outsl
lods
add
add
inc
dec
mov
fisttpl
push
cmc
push
loop
rclb
xlat
and
bound
lret
mov
mov
jle
mov
mov
inc
fistps
outsb
jno,pn
aas
cld
xor
aad
nop
je
and
cmc
adc
xor
xor
out
cltd
addr16
arpl
sub
inc
iret
shrb
lods
stos
jge
and
cmp
add
in
sub
push
mov
mov
sub
mov
jnp
lods
add
inc
push
insb
sub
hlt
adc
sbb
jno
shll
or
adc
leave
aas
mov
mov
int
sbb
add
cld
add
add
dec
mov
lock
sbb
cs
add
cltd
mov
push
in
dec
jne
add
push
xchg
or
pop
popa
and
add
stc
in
iret
negb
pop
dec
das
inc
lea
sub
int3
out
jns
fisttpl
into
sub
add
cmp
cmp
adcb
shlb
dec
sub
sub
push
pop
je
out
ffree
lods
adc
loopne
sti
mov
jo
xor
add
adc
add
cmp
and
xchg
add
mov
inc
xchg
movl
sbb
mov
mov
les
cs
cmp
ja
insl
ret
fisubs
mov
mov
rcll
xor
add
mov
mov
stc
jne
int3
pop
mov
push
add
gs
xlat
or
xchg
pop
xchg
rorl
aad
test
std
mov
add
sbb
les
repz
mov
adc
lods
aad
sbb
mov
cwtl
mov
pop
mov
les
mov
bound
xchg
inc
movsb
fiadds
push
and
cmp
jle
ret
pusha
or
add
pop
xor
push
and
enter
inc
dec
or
and
push
test
scas
jmp
lods
pop
jecxz
mov
pop
daa
out
xchg
dec
adc
sbb
lahf
mov
sete
callw
or
frstor
adc
and
jo
fxrstor
add
xchg
stos
jmp
mov
push
inc
mov
sbb
jge
xchg
aam
rol
lret
push
dec
outsl
jb
inc
test
add
cltd
jg
pushf
fmuls
scas
in
push
fs
adc
and
pop
gs
inc
push
mov
xor
and
mov
daa
cmpsl
xor
cmp
jns
inc
sub
dec
mov
mov
or
enter
les
sub
movsl
push
lret
and
jne
std
add
imul
push
imul
nop
pop
add
fmuls
ret
or
inc
inc
aas
and
mov
loopne
add
js
stc
add
inc
push
fcmove
dec
cmp
call
test
mov
cmp
sbb
stos
jecxz
cwtl
imul
lahf
dec
and
pop
xchg
sbb
add
in
jnp
subb
mov
mov
lahf
je
inc
add
fs
mov
add
sbb
insl
push
add
mov
repz
jae
xor
in
test
xor
mov
and
add
aas
lahf
mov
pop
push
fldlg2
outsl
xchg
add
add
pop
movb
fsubr
in
mov
add
imul
add
ret
dec
dec
fwait
push
xchg
les
pop
test
jae
cmp
or
mov
jecxz
inc
aad
add
mov
xor
loopne
xor
stc
addr16
cmp
sbb
push
pushf
loopne
jp
and
ds
cmc
or
or
call
cmp
mov
cmp
mov
jb
sahf
sub
mov
fbstp
testl
inc
ljmp
or
aas
adc
sub
xlat
arpl
ret
mov
sbb
add
iret
ret
lahf
rcll
cld
repz
sbb
inc
pop
push
push
pushf
mov
sbb
aaa
mov
jns
lcall
adc
inc
addr16
or
ffreep
dec
int
and
insl
enter
and
sub
mov
fdivl
add
sbb
add
push
inc
enter
ret
pop
mov
out
mov
and
cmp
data16
repnz
pop
testb
scas
pop
adc
shl
iret
aaa
cmpl
cmp
add
dec
mov
mov
cmp
dec
adc
ss
and
xor
in
or
cmp
out
pop
add
out
iret
mov
lahf
xor
fistps
push
fnsave
shll
cmp
lret
inc
mov
inc
jle
cli
xchg
xor
pusha
adc
dec
push
ja
stc
pushf
xor
hlt
addl
call
xor
pop
sti
les
popa
jne
pop
pop
cli
in
fldt
into
pop
inc
stos
fiadds
popf
adc
pop
jle
cmpsb
cmp
sub
inc
repz
sbbl
adc
movsb
sbb
ret
out
mov
or
pop
rorl
in
shll
add
outsb
mov
cmpsl
mov
jbe
sbb
dec
sub
rclb
adc
mov
ja
out
jl
gs
dec
adc
inc
dec
stos
jb
xchg
sbb
loopnew
mov
xlat
jge
sti
cld
jle
add
inc
std
mov
out
mov
mov
add
mov
jmp
sahf
cmp
into
mov
xchg
mov
fcmovne
int3
push
pop
int
pop
fnstsw
cmp
faddl
jmp
jge
scas
dec
xor
adc
aas
push
jg
loop
push
scas
ret
incb
jbe
cmp
inc
into
ja
cmpb
ljmp
testb
or
dec
or
in
mov
xchg
repnz
sbb
es
imull
jg
fsubrl
mov
cli
add
cld
jbe
aaa
xor
mov
jnp
in
loope
pop
add
xlat
clc
cwtl
add
inc
or
sbb
icebp
stos
cmp
add
cs
out
dec
rcrl
push
stos
mov
cli
jl
push
sub
divb
movsl
or
sahf
int3
rcrb
pusha
jnp
add
xchg
rcll
lret
sbb
int3
stos
scas
sbb
cmp
test
je
jne
jmp
xor
and
cmp
aas
cmpsb
xchg
jno
pop
mov
add
shl
jae
pusha
pop
add
inc
stc
cmpsl
jmp
add
xchg
jmp
sbb
adc
adc
mov
dec
add
xchg
jno
xor
add
arpl
adc
push
aas
add
scas
clc
sub
daa
add
adc
iret
and
add
jnp
and
int3
pop
dec
nop
loopne
fwait
sub
hlt
test
clc
std
xor
icebp
ret
popl
and
add
xor
inc
les
mov
cmc
scas
nop
mov
pusha
mov
lds
cli
aas
add
stc
dec
xor
inc
or
rcrl
icebp
push
mov
iret
push
cwtl
xor
cmp
test
lock
testl
call
stos
mov
push
scas
sahf
aas
mov
test
pop
dec
add
arpl
adc
into
push
inc
xchg
rcll
xor
test
add
in
pop
push
mov
and
dec
add
mov
mov
fiaddl
stos
and
xchg
xor
mov
pop
add
sbb
add
cmovns
mov
es
add
jl
lea
add
sub
add
mov
inc
cmp
add
push
adc
orb
inc
orl
add
sbb
mov
pushf
scas
faddl
cmpsb
xchg
sbb
add
ret
call
mov
icebp
xor
sbb
std
add
push
or
add
shlb
call
ljmp
lret
add
push
movsb
jnp
adc
es
iret
rcrb
or
push
sbb
or
call
mov
xchg
cmp
ret
cmp
add
sbb
test
ret
mov
cvtdq2ps
adc
jg
inc
pop
lret
stos
add
sub
add
inc
dec
dec
sub
imul
add
clc
xor
cmc
ror
mov
xchg
stc
mov
aam
stos
lock
cmp
call
cmp
es
test
add
cmc
xchg
xchg
aam
or
add
push
test
push
sbb
rcr
cmc
std
sbb
popf
lahf
data16
scas
pop
adc
sbb
add
jbe
cmp
push
or
mov
lret
hlt
add
mov
les
out
icebp
jnp
jle
or
pushf
push
test
je
pop
in
aad
repnz
lods
add
mov
nop
mov
rcll
ret
fldl
fiadds
push
in
xchg
cld
add
mov
ret
jb
aam
rcr
ficoms
mov
stos
fdivs
insb
xor
xor
test
ret
mov
push
hlt
shrb
in
and
adcb
pop
mov
dec
lcall
add
add
movsb
sub
orb
add
js
xor
aas
mov
sbb
outsl
cs
sbb
nop
add
cmp
and
jo
dec
adc
and
lcall
les
ljmp
push
xchg
lods
and
mov
imul
adc
lds
inc
add
or
or
mov
lcall
and
shlb
pop
aam
add
cwtl
std
rcl
and
add
and
add
pop
test
push
aas
leave
add
mov
ljmp
fldl
sbb
dec
pop
sbbb
movsl
mov
aaa
push
repnz
cmpl
push
and
xor
dec
cmp
add
sub
dec
add
jp
jge
cwtl
jne,pt
loope
jmp
adc
mov
xor
inc
stos
clc
test
cmpsb
call
addb
add
pop
fwait
ret
sub
test
and
outsb
pop
addr16
add
arpl
xchg
push
add
pop
push
insb
pusha
jo,pt
inc
sub
add
stos
sub
test
mov
cmp
fwait
testb
cmpsl
jnp
mov
inc
out
js
cmpsb
xor
and
dec
pop
push
mov
addr16
es
outsl
mov
add
inc
jne
inc
mov
xchg
sbbb
or
cli
cmp
xorl
dec
adc
and
mov
add
jns
insb
nop
ret
and
sbb
das
push
sub
iret
sbb
sub
cmp
mov
add
fistpl
daa
add
mov
jle
pusha
push
fs
icebp
ds
push
dec
and
and
pop
and
add
xor
rolb
push
fs
dec
xor
cmp
add
or
cs
xorb
add
sub
xchg
cwtl
movsb
and
adcb
mov
lds
popl
ret
int
fiadds
push
pop
xor
sbb
test
or
clc
pop
dec
out
lcall
sbb
mov
xchg
ja
xor
inc
push
insb
std
imul
add
mov
xor
pop
fiaddl
adc
test
add
add
push
pushf
fs
ljmp
xor
mov
arpl
movsb
ja
sbb
loopne
mov
and
mov
inc
pop
repnz
or
cwtl
pop
lret
mov
aad
shrl
sbb
xchg
jne
add
aas
mov
cmp
jbe
sub
and
leave
inc
addl
daa
and
sbb
sahf
add
push
cli
and
fdivl
sarb
mov
jmp
cmp
loop
add
adc
mov
xchg
clc
dec
sbb
sub
icebp
in
mov
sub
movsl
cld
frstor
adc
test
inc
sub
pop
or
data16
inc
lcall
cltd
sub
push
sbb
mov
cmpsb
mov
add
dec
scas
pop
aas
push
inc
loope
pop
inc
add
inc
push
jmp
pushl
inc
xor
lds
pop
popa
es
mov
inc
jns
mov
mov
gs
fstps
xor
inc
in
add
aam
sbb
sbb
lcall
pusha
adc
inc
aad
mov
cltd
jp
xchg
sarb
jle
leave
pop
xchg
es
inc
out
cmp
lcall
cmp
les
mov
jbe
mov
cmpsl
add
sbb
in
test
out
and
add
daa
int
add
fwait
shlb
cmpsl
pop
stos
xlat
out
xchg
sub
shr
dec
mov
or
popa
pop
mov
push
add
movsb
and
add
sub
push
push
jp
xchg
add
outsb
add
sub
add
sbb
jge
dec
cltd
cmp
mov
int
lret
push
shl
xor
push
and
arpl
xchg
pop
and
mov
adc
mov
cs
je
and
gs
cltd
leave
adcl
popf
add
mov
andb
fldt
sbb
mov
popf
ja
jg
cmp
jnp
inc
push
mov
test
sub
mov
stos
cmp
cmp
stos
pop
add
xor
fstl
push
pop
hlt
push
mov
mov
sbb
adc
inc
xor
dec
pop
inc
jne
jns
cmp
stc
icebp
test
add
loope
adc
sbb
sbb
fs
lods
add
andb
mov
sbb
dec
jge
add
clc
ds
in
jb
dec
scas
xor
subl
dec
ret
mov
add
out
xor
test
ficompl
fisttpll
addb
loopne
js
cs
or
sub
rcrl
mov
mov
arpl
sbb
in
add
push
xor
xchg
jmp
pop
sub
push
push
add
inc
test
out
dec
add
aaa
fsubs
es
pop
add
outsb
jbe
in
mov
ds
shr
mov
into
aaa
add
adc
adc
lods
adc
pusha
add
sub
mov
repnz
mov
pop
rolb
in
inc
pusha
fidivrl
cmpb
push
cs
add
int3
push
movsl
jne
mov
and
and
add
adc
sbb
push
add
in
jmp
jo
mov
add
fcompl
sub
and
fistps
into
movsb
jbe
outsb
bound
pop
or
nop
ret
dec
stos
scas
cmp
and
add
ficoml
add
nop
popf
insl
daa
je
inc
mov
cmc
fsubrl
lcall
mov
pop
add
and
ret
adc
shlb
insb
xchg
cs
pop
xchg
rcl
mov
pop
sub
and
inc
aaa
jge
ror
ret
stc
sti
mov
inc
cli
test
add
adc
mov
dec
in
cmp
cmpsl
mov
add
daa
xchg
adcb
cmp
jmp
jge
fildll
pop
dec
iret
lods
add
mov
pop
add
movsl
pop
cmp
out
or
mov
pop
add
push
fsubrs
mov
cwtl
sahf
aaa
lods
push
sbb
xchg
shll
mov
mov
cmp
xor
mov
ret
fidivrs
jge
cmp
flds
add
shrl
jl
lea
repnz
inc
loope
cmp
xchg
int3
aas
and
xor
insb
cmpsl
ja
and
push
add
ljmp
je
lret
mov
add
sbb
push
mov
arpl
xor
mov
fwait
inc
or
dec
icebp
inc
addr16
push
aad
mov
push
sbb
add
pop
add
ljmp
push
test
adc
int
fisubrs
push
jmp
daa
call
call
sbb
imul
nop
les
jmp
push
xor
adcb
sbb
add
ret
add
or
pop
iret
add
sub
popl
mov
sti
add
pop
daa
add
mov
xor
movsb
flds
pop
mov
and
das
sub
mov
fsub
xchg
add
mov
test
inc
stos
and
in
pop
or
inc
jne
xor
repnz
mov
pop
pop
loopne
sub
add
ljmp
leave
pop
jns
inc
cmp
in
lret
std
clc
mov
sub
fsubl
lock
cwtl
popa
inc
jne
scas
sub
stc
cmp
mov
mov
cmp
sub
mov
lds
lahf
cmp
movsb
mov
loop
pop
add
xchg
xchg
into
in
inc
add
xchg
xor
jmp
dec
dec
in
addl
popa
call
cld
mov
add
fsubp
add
inc
adc
xchg
pop
push
pop
xor
sub
dec
les
xchg
rolb
ljmp
dec
rcrl
push
mov
push
or
push
leave
ds
rcll
jl
dec
mov
cmp
add
loope
xchg
repz
add
add
insb
sub
repnz
add
xchg
sub
and
add
dec
lods
add
sub
dec
add
aam
or
loopne
dec
aad
insb
add
jl
xor
add
push
mov
ret
sahf
or
nop
test
sub
rol
jge
cmp
fldl
or
push
pop
cltd
adc
add
pop
inc
mov
push
push
test
js
pop
and
lds
movsb
popa
mov
jns
dec
mov
sbb
inc
fistpl
adc
cmp
adc
or
adc
test
insl
loope
je
ljmp
nop
jge
leave
iret
lahf
js
add
mov
into
jmp
xor
mov
xchg
lret
scas
imul
xlat
adc
add
leave
jl
les
inc
bnd
add
mov
movsl
arpl
add
jae
es
jmp
lret
pop
cmp
insl
add
and
stc
aas
sbb
outsb
shll
xor
inc
jne
shlb
sbb
push
sub
rolb
jnp
mov
cwtl
dec
out
dec
or
jp
ds
sbb
out
add
inc
mov
rcl
jno
repnz
mov
add
aaa
bound
add
cmp
stc
lret
in
pop
add
fstps
cmpsb
icebp
cmp
pop
mov
inc
bound
insl
add
mov
mov
test
mov
cld
rclb
gs
std
or
inc
and
dec
mov
aam
test
test
push
or
shll
js
mov
pop
inc
pusha
mov
flds
and
mov
xchg
or
add
add
xor
addr16
xchg
jecxz
push
mov
loop
jl
lcall
or
or
dec
and
movsl
movsb
test
sbb
in
pop
test
sub
subb
xchg
mov
push
add
loop
sbb
pop
push
add
les
aaa
roll
lods
sahf
push
inc
xor
stos
movsb
fistl
add
nop
xlat
loopne
lcall
push
add
enter
xchg
repz
test
data16
xchg
gs
clc
xor
sub
mov
mov
sbbb
jmp
xchg
jbe,pn
push
mov
int
jecxz
mov
lahf
iret
adc
push
gs
movsl
xchg
aas
or
mov
and
and
rcll
pop
das
fldenv
add
xor
fwait
mov
pop
jae
mov
xacquire
mov
shll
push
cmp
ja
mov
insb
jno
js
sub
enter
rcll
movsl
into
nop
or
das
xor
sarl
cmp
push
pop
mov
mov
add
or
pusha
add
xor
loope
out
leave
in
popa
out
add
push
cmp
add
inc
jg
adc
dec
add
jge
test
sub
add
ja
lret
jno
aaa
push
add
xchg
les
jae
mov
and
das
add
xchg
in
jbe
fildll
dec
pop
mov
jo
sbb
cmp
arpl
push
mov
out
adc
mov
movsl
sahf
push
and
push
into
sbb
inc
in
in
or
add
int3
stc
dec
int
add
dec
pop
pop
movsb
mov
insl
push
fsubrl
cmp
push
dec
sbb
cs
dec
fsubs
push
insb
or
std
out
add
loope
mov
lock
dec
cmp
outsb
loopne
std
pop
fnstcw
testl
imul
push
mov
pop
dec
movaps
call
push
imul
adc
xchg
mov
fnstcw
add
xor
add
or
jo
add
pop
fs
xchg
loopne
mov
add
sub
addb
in
jo,pt
mov
mov
loop
loope
mov
mov
sbbl
cmp
sub
mov
xlat
addb
add
js
sbb
and
push
test
inc
cld
rol
ja
add
loope
test
pop
mov
mov
or
adc
push
sbb
add
repnz
push
lret
or
std
add
scas
aaa
js
sbb
dec
sbb
in
lcall
mov
and
sbb
add
shlb
stos
add
and
or
and
ljmp
jno
std
add
inc
hlt
and
ja
test
sub
pop
cmpsb
xchg
enter
cmp
fstpl
ss
xor
xchg
addr16
es
test
fidivrs
cmp
or
add
mov
cmp
and
and
into
sarb
or
scas
in
pop
xchg
int
jns
add
adc
adcl
cmc
loope
sub
lods
hlt
add
push
setno
cwtl
fildll
inc
sbb
pop
pop
sbb
inc
add
cmpsb
je
les
dec
push
add
cmp
sahf
mov
or
and
cli
jbe
loop
imul
fcmovb
fidivrs
lahf
test
hlt
mov
pop
pop
movsl
js
outsl
push
mov
rcrl
cmp
add
jl
cmp
sbb
mov
orl
das
mov
mov
push
test
dec
mov
and
rolb
dec
mov
icebp
pushf
mov
rolb
pop
lock
xchg
loopne
movsb
scas
and
int
enter
aaa
sub
add
les
adc
fldl
sbb
add
test
push
jbe
lds
sub
notl
xor
int3
pop
adc
cmp
repz
dec
clc
and
subl
or
lret
mov
push
mov
xor
sub
push
int3
imul
inc
sub
cs
or
jp
add
sbb
scas
add
mov
mov
mov
push
int
and
push
in
or
add
push
add
xor
dec
lea
adc
movsb
push
adc
xchg
lods
sbb
stos
addr16
mov
sti
jge
add
mov
mov
leave
stos
nop
mov
mov
xchg
xlat
add
inc
pop
insl
aam
xchg
xchg
cli
pushf
ret
add
xchg
xchg
pop
in
push
mov
push
sub
add
push
sbb
mov
movsb
repz
add
das
sub
xchg
mov
dec
add
lock
add
add
jp
xchg
dec
rclb
push
mul
adc
inc
add
adc
xor
jl
add
mov
mov
or
mov
lock
jo
repz
or
sahf
movsb
cmp
pop
add
lret
add
fisttpl
fdivl
cmp
xchg
popf
lods
adc
cmpsb
mov
loop
sbb
jbe
les
sbb
fs
lea
outsl
or
add
adc
loopne
cmp
fxtract
popa
inc
ds
add
add
add
or
push
ds
data16
out
cmp
dec
rcrb
repz
cmpsl
adc
mov
xor
sub
add
xor
arpl
popf
shlb
dec
int
inc
daa
push
sbb
or
lcall
xor
mov
cltd
cmp
loop
add
enter
shrl
cwtl
xchg
mov
stos
sub
pop
daa
cmovno
pusha
xor
adc
aaa
ds
and
fsubl
mov
in
cmp
insl
add
inc
xchg
mov
flds
andl
out
into
stos
stc
mov
outsl
mov
fisttpll
adc
das
or
mov
in
add
adc
mov
imull
add
daa
lock
dec
clc
inc
xor
and
mov
lods
scas
xor
ljmp
jo
rolb
cmp
push
push
add
jns
sbb
push
loopne
mov
out
pop
aam
xadd
adc
jb
cmp
outsl
int
mov
add
sbb
lods
adcb
fcmovne
push
aaa
rcr
jl
xchg
and
sub
stos
and
mov
sarl
dec
lods
mov
adc
fcmovnbe
dec
and
lds
cmc
inc
dec
mov
inc
or
xchg
shll
sub
fldl
outsl
xor
dec
in
popw
pop
sub
inc
inc
out
add
inc
jp
mov
mov
fcmovb
cmp
vphaddbw
dec
clc
int
adc
xor
imull
push
dec
mov
add
add
push
inc
aad
jb
add
mov
jo
in
rol
xchg
lret
cmp
ret
mov
jmp
xor
add
mov
dec
sbb
jno
bound
add
sub
mov
push
fs
dec
hlt
test
icebp
add
cltd
inc
fists
push
addl
lcall
push
hlt
or
sbb
adc
pop
pop
and
ret
jecxz
jg
xchg
inc
cltd
stos
test
mov
out
mov
and
leave
fistl
pop
add
cmp
and
pop
push
push
and
test
push
shlb
aas
dec
mov
mov
je
fs
bound
int3
cwtl
push
fdivrs
mov
cmp
inc
add
loope
sub
movsl
cmp
push
inc
push
lahf
jmp
or
jae
jp
push
shrl
lret
test
mov
jp
div
test
shl
out
push
push
out
mov
or
mov
popf
cmp
test
mov
vmovupd
add
out
fwait
into
jge
das
ret
mov
and
sahf
lds
add
test
outsl
addb
push
fsubr
add
sub
mov
cmp
mov
sub
ret
scas
notl
lock
add
int3
xchg
in
add
add
inc
ja
xor
dec
lods
add
outsb
dec
fnstenv
clc
test
pop
fnsave
test
hlt
xor
rorb
xor
loop
add
out
push
xchg
mov
xorb
lock
add
jl
dec
inc
daa
add
xchg
sbb
jnp
dec
or
cmp
cmpsl
imul
push
jecxz
into
add
jl
insl
jae
test
pop
add
lods
lcall
nop
mov
jb
sbb
add
xchg
ret
xchg
xlat
add
in
jno
sbb
jmp
int3
rcrl
rolb
xchg
add
push
imulb
push
aas
outsb
mov
pop
rolb
scas
inc
es
mov
inc
rcrb
mov
mov
insb
mov
add
or
int3
adc
push
out
dec
pop
and
add
xor
adc
mov
sbbl
sti
arpl
repnz
cmp
data16
xchg
cmpsb
pushf
loopne
inc
push
mov
das
test
jns
mov
xchg
dec
pop
sub
movl
movsb
aam
aaa
mov
or
push
push
cmp
out
add
popa
push
push
dec
dec
sbb
shlb
mov
lcall
cmp
push
loope
imul
mov
mov
jmp
call
adc
in
add
mov
mov
adc
or
pusha
xor
cmp
xchg
mov
dec
add
mov
outsb
dec
add
andl
imul
xor
sub
fidivrs
xor
mov
stos
les
add
mov
cmpb
add
test
popa
add
in
pop
mov
push
add
mov
lods
in
add
pop
lcall
aaa
mov
mov
push
outsl
inc
addr16
xor
testb
mov
jbe
push
imul
mov
std
and
sub
sbb
fsubp
cld
cmp
fldt
dec
pushf
and
add
cmp
into
aad
ret
xor
add
sub
or
add
insb
and
ret
daa
fcomps
xor
sub
in
sbb
add
loop
mov
int
inc
mov
fildll
cmpsl
test
jo
jb
cmp
mov
sti
adc
ss
aaa
xchg
jns
idivb
jnp
add
and
and
xor
inc
cmp
pusha
and
add
push
push
icebp
iret
scas
ficomps
shll
pop
shll
ljmp
sbb
js
shlb
inc
mov
pop
mov
inc
daa
dec
sbb
sbb
add
inc
pop
pushf
repnz
lds
clc
imulb
inc
mov
push
add
xor
aam
out
mov
pop
or
rolb
xchg
mov
add
movsb
fs
shlb
adc
jl
inc
out
sbb
testb
js
enter
xor
imul
mov
sbb
jmp
out
add
xchg
outsl
sub
scas
dec
or
adc
lods
and
sbb
mov
or
daa
inc
adc
dec
mov
fimuls
xor
fsub
add
add
push
jae
js
outsb
jecxz
test
sub
test
aas
addb
adc
addr16
pop
hlt
add
push
or
loop
imul
fiadds
push
int3
cli
repz
xor
jns
movsb
mull
cwtl
add
fnstsw
stos
add
int
sbb
cmc
mov
repz
jmp
inc
aaa
xor
add
mov
jnp
test
inc
dec
and
aaa
es
sub
mov
ret
adc
cltd
add
out
clc
and
sub
lods
add
jg
inc
add
dec
push
out
sub
pop
xor
and
and
cmp
pop
adcl
mov
xor
jnp
dec
cmp
roll
or
xor
lds
leave
sarb
inc
push
les
and
mov
add
je
fwait
xor
scas
rcl
dec
mov
cmc
xchg
pop
ja
call
mov
enter
pop
data16
cmp
jp
add
dec
or
fdivrp
rorl
int
outsl
mov
outsb
add
inc
out
add
std
daa
mov
inc
push
adc
sbb
roll
cmpb
fldl
lock
ds
mov
mov
fs
iret
pop
xor
imul
xor
mov
or
int
js
cmp
add
adc
popa
rcl
pop
cmp
cmp
in
push
into
push
cmp
test
std
mov
sub
repz
rorl
push
sub
sbb
fldenv
or
ja
and
mov
insb
popa
or
cmp
adc
add
xor
push
or
les
mov
add
mov
push
or
filds
cmp
add
lar
sbb
sbb
mov
xchg
jg
pop
xchg
push
mov
cmp
jle
jo
pop
pop
outsb
aaa
xor
shl
or
cmp
push
enter
adc
xchg
inc
adc
inc
syscall
orl
xchg
mov
cmp
or
mov
aas
cmpsl
sbb
jecxz
lea
and
adc
inc
xor
push
fnsave
ret
ljmp
inc
push
xor
inc
dec
les
xchg
out
add
lock
call
out
adc
lea
jbe
call
xchg
xor
add
gs
ljmp
data16
mov
mov
fdivl
aas
shl
adc
inc
lret
add
inc
mov
inc
in
das
int3
movsb
xor
mov
inc
aaa
loop
stos
daa
mov
movsb
jns
jecxz
add
push
sub
mov
and
cmpsl
add
cs
or
xchg
mov
rorb
xor
mov
pop
dec
add
cs
sub
mov
add
std
sarl
addr16
add
cs
incl
fisttps
cmpsl
aas
jns
test
push
bound
jmp
xor
sahf
or
xchg
mov
xor
mov
xchg
cmp
rcll
push
xor
outsl
or
inc
or
and
or
insl
dec
ret
outsb
xor
or
add
push
pop
repz
mov
inc
lock
in
ss
stos
ja
xor
mov
add
rcll
mov
pusha
nop
ret
jg
adc
push
lock
xchg
push
std
push
jp
scas
xchg
mov
xor
ret
jl
or
push
roll
pop
mov
cmp
sub
sub
enter
inc
cwtl
repz
dec
idivl
inc
jecxz
xor
loopne
mov
mov
fdivrs
aaa
hlt
push
movsl
push
loop
jo
add
ret
or
push
or
adc
push
push
mov
sarb
ds
scas
push
add
inc
and
jno
fistpll
repz
cmpsl
add
stc
jmp
lods
add
rclb
cmp
inc
mov
cmp
add
nop
mov
lods
cli
lock
bound
es
cs
hlt
or
and
pusha
in
and
mov
nop
mov
adc
mov
loope
pop
in
inc
fiaddl
sbb
mov
lret
pop
xor
xlat
test
shlb
xor
and
pop
mov
add
mov
jp
andb
addl
push
jg
inc
and
js
into
lods
cmp
std
xchg
cmp
add
lods
inc
js
insl
sub
fidivs
mov
ss
iret
fld
pop
fcmovb
into
dec
out
popf
fsubrl
dec
sti
push
sbb
lock
out
leave
cmp
push
fdivr
inc
repnz
inc
mov
jns
mov
leave
lods
add
cmpsb
mov
rclb
dec
or
test
push
mov
mov
xchg
mov
and
dec
andl
into
jne
and
hlt
leave
xor
flds
sbb
push
add
test
mov
cltd
push
pop
por
pop
cmp
loop
outsb
arpl
add
mov
adc
mov
fisttps
add
ja
xchg
add
or
adc
push
add
jecxz
mov
hlt
imul
std
cs
xor
pop
add
mov
int
xlat
xor
aas
mulb
mov
rolb
pop
ljmp
bound
xchg
dec
cwtl
lret
scas
repz
sbb
testb
popa
jnp
jb
jmp
add
xorl
jo
nop
add
int
pop
xor
inc
adc
add
sub
add
inc
adc
loopne
test
addb
cmp
mov
in
add
cmp
cmp
sub
inc
push
bound
rcl
and
loope
lahf
sbb
ret
mov
jns
rcrl
xor
sub
lea
scas
xor
lahf
push
add
mov
push
xchg
add
leave
out
adcb
nop
sti
ljmp
push
push
out
inc
icebp
testb
jb
rolb
rcl
adc
xchg
push
push
inc
pop
ret
out
sub
pop
call
aaa
jnp
add
call
mov
inc
movsb
sarb
xchg
adc
add
and
cmp
das
rep
loop
aas
push
add
negb
add
dec
push
sub
add
test
sub
add
ljmp
repnz
cltd
es
sub
and
xor
imul
out
arpl
mov
jns
xchg
cltd
xor
mov
dec
and
lods
lea
es
add
pop
xlat
adc
ss
pusha
push
jae
aad
nop
cmp
lahf
inc
aaa
lret
mov
lock
inc
dec
inc
scas
push
jbe
out
mov
jge
jecxz
push
sub
imul
push
mov
out
addb
mov
inc
gs
cs
push
lock
js
xor
cmp
rolb
pop
sub
push
sbb
cmpsl
lret
movsb
inc
addr16
add
cmp
pop
loopne
iret
lods
outsl
mov
and
fwait
add
addr16
adc
mov
in
xchg
push
shrb
jo
dec
idivl
lods
shll
outsl
pop
adc
or
inc
adc
add
and
incl
add
out
mov
aam
rorb
test
ja
or
xchg
xchg
xor
add
pushf
add
cmp
mov
sbb
inc
inc
push
shll
movsl
xchg
xchg
lret
inc
dec
sbb
jmp
ljmp
fwait
pop
add
push
xchg
lahf
lret
push
dec
fistps
or
adc
dec
fldl
std
lock
rclb
dec
jecxz
jns
shll
add
dec
adcb
xchg
add
push
sub
cmp
push
add
std
jo
mov
jmp
pop
loopne
dec
and
pop
mov
jae
mov
fisubs
xlat
test
shrl
pop
inc
xor
fmull
and
sbb
mov
adc
lret
sub
cmp
add
xor
add
or
cmp
xor
call
test
xor
outsb
hlt
mov
loope
or
add
pop
popa
or
stos
sub
mov
mov
rorl
sbb
xchg
cmp
enter
mov
icebp
bound
and
or
sbb
mov
dec
dec
mov
cli
and
popf
loopne
add
pop
ret
and
mov
pop
rcrb
sbb
cmp
je
in
fwait
pop
loop
arpl
mov
sub
and
or
dec
inc
jecxz
out
add
push
adc
xor
mov
add
test
stos
add
mov
jl
rolb
push
fs
add
dec
pop
push
addr16
mov
negl
adc
ret
push
sbb
add
jle
rolb
outsb
out
push
lods
sbb
scas
int3
mov
xchg
inc
adcl
jp
cmpsl
push
xor
dec
enter
mov
in
add
mov
insb
add
outsl
mov
fistpll
sbb
xor
adc
add
rcrb
rorl
ljmp
cmp
pop
dec
pop
into
cli
cmp
inc
mov
cmc
dec
ss
data16
sub
inc
out
mov
adc
out
pusha
gs
iret
mov
or
stc
mov
fsubrl
lods
xor
add
xor
and
mov
mov
mov
scas
mov
or
adc
scas
pop
add
add
loopne
push
add
pop
push
test
shll
sarb
lret
leave
movsl
ret
outsl
out
in
mov
cld
push
xchg
xchg
mov
les
subb
sbb
sub
pop
mov
clc
add
xchg
cld
cmp
mov
addr16
add
cmp
fcoml
xor
sarb
and
sbb
add
out
test
push
mov
cltd
rcrb
in
dec
and
and
mov
add
add
xlat
or
jo
add
pusha
dec
jl
jb
imul
mov
mov
fistl
add
xlat
dec
sbbb
mov
inc
inc
das
pop
popa
lods
stos
cmp
div
and
ljmp
pop
mov
subb
fwait
push
gs
mov
jbe
imul
fs
cmp
inc
sbb
cmp
hlt
imul
rol
clc
xchg
test
and
icebp
in
xchg
out
adc
mov
and
gs
xchg
inc
add
cld
lret
ljmp
jmp
cmp
out
test
sbb
bound
add
emms
std
gs
sarl
sub
dec
xor
data16
cwtl
push
fwait
add
jb
je
adc
test
xchg
sub
mov
sarb
and
push
ja
ret
in
testb
pop
add
jp
add
mov
jns
sub
push
xchg
js
and
movsl
dec
leave
pop
push
lahf
lahf
and
test
and
inc
scas
inc
mov
shrl
push
mov
inc
xchg
xor
dec
jl
sub
mov
mov
xchg
lret
aam
mov
or
and
movsb
push
das
enter
sbbb
daa
adc
xchg
jp
push
mov
pop
int
mov
jecxz
or
add
mov
je
pop
xchg
pushf
mov
and
add
cld
call
roll
enter
add
out
adc
fisttpl
in
jmp
inc
xchg
jo
decl
bound
testl
add
push
lret
test
in
aad
jnp
xchg
cmp
push
add
shlb
movsl
jne
cwtl
add
out
ret
mov
add
and
jge
sub
add
push
inc
adc
dec
leave
push
fmull
cwtl
xchg
addl
mov
aad
les
fstps
pop
xor
add
xor
push
add
ds
push
outsb
jmp
xor
pop
lret
adcb
add
in
pop
stc
fcoms
cmp
in
mov
inc
gs
and
add
inc
adc
add
sub
push
jo
pop
jmp
cmp
pop
stos
addb
adc
aam
xchg
cmp
add
pop
test
mov
pusha
push
ret
imul
add
sub
sarb
test
inc
or
inc
into
mov
add
arpl
jb
scas
cmc
dec
in
add
mov
test
jae
or
sar
rcll
js
cmp
sahf
ds
add
movsb
xchg
cmp
dec
in
inc
loope
pop
push
lds
jne
sub
data16
cmp
dec
jmp
push
mov
popa
mov
test
jae
rclb
inc
aaa
inc
and
dec
cmp
jle
cs
stc
mov
rcll
pop
out
loopne
or
es
addl
push
popf
xchg
or
sbb
xor
cmp
std
add
inc
shll
daa
add
test
jo
add
jp
filds
inc
add
es
xor
mov
add
rorl
push
sub
add
xor
add
jmp
test
sub
add
out
das
lret
ret
out
cmp
inc
les
mov
adc
inc
aad
ficoml
test
pusha
rcrl
adc
add
sbb
ljmp
cmp
add
mov
xlat
ja
test
adcb
aaa
bound
adc
mov
add
sbb
dec
pop
xor
pop
xchg
orl
out
scas
add
fbstp
xchg
ljmp
sti
add
aaa
daa
iret
mov
dec
fwait
and
jbe
add
inc
adc
add
sbb
jecxz
add
clc
mov
mov
and
add
test
sbb
imul
or
pop
add
cmp
pop
xor
and
dec
jl
dec
add
imull
xor
push
add
sub
mov
fiadds
lret
js
adc
lock
adc
pop
add
out
xor
test
push
add
and
add
enter
daa
xchg
ret
pop
shl
push
sbb
or
or
fiaddl
mov
test
push
inc
jg
inc
fsub
jns
mov
int
mov
xor
add
jp
pusha
out
add
dec
xchg
jbe
test
or
sbb
jle
out
add
out
test
push
leave
jo
dec
xchg
add
and
add
les
rcrl
mov
stos
xorl
aam
mov
xchg
sub
push
and
and
js
push
loopne
jnp
sub
push
jle
push
call
add
and
faddl
repz
movsb
out
and
pushf
add
mov
fiadds
mov
mov
jo
lcall
push
cld
and
aad
add
or
std
andl
iret
dec
push
ljmp
pop
es
fdivr
ss
aas
sarb
lea
sub
cmpl
add
clc
decl
bound
pop
call
js
inc
add
stc
dec
loope
cli
or
xchg
pop
sub
jnp
cwtl
inc
iret
mov
shufps
nop
sub
add
aam
or
mov
add
xchg
daa
xor
out
in
addb
das
pop
inc
mov
fcmovb
xlat
jno
fldt
jecxz,pt
pusha
out
xchg
sti
sub
add
jnp
inc
lock
es
rolb
sbb
sbb
xchg
push
jl
pop
loop
testb
cmp
ds
and
inc
out
mov
push
xchg
pop
in
andl
adc
mov
test
xchg
xchg
fcomps
inc
inc
shlb
imul
add
jnp
mov
std
cmp
push
sub
and
xchg
adc
stos
clc
nop
stc
popl
rdpmc
scas
sbb
or
xchg
xchg
and
or
push
cltd
lock
test
mov
iret
dec
push
or
les
inc
stos
jno
pop
and
addb
insl
mov
pop
fisttps
inc
imul
xchg
loope
mov
xchg
stc
add
push
mov
imul
fmul
xchg
je
das
stos
lea
mov
js
aas
mov
sub
cli
aad
adcl
fldl
dec
sub
stc
jbe
arpl
outsb
push
and
adc
push
mov
cld
adc
cmc
addl
mov
inc
xchg
imull
stos
dec
test
andb
cmp
leave
dec
or
cmp
mov
add
test
pop
rcr
pop
sbb
cmp
mov
mov
push
mov
mov
xlat
push
adc
dec
xor
jecxz
and
add
faddl
add
sahf
fs
ret
pop
mov
add
push
in
loopne
mov
mov
inc
mov
adc
add
cmp
nop
aaa
imul
inc
cmpb
rcr
push
aam
dec
add
add
sbb
fidivrs
call
push
nop
sbb
push
scas
mov
clc
mov
mov
push
mov
out
roll
xchg
or
popf
into
mov
aam
pusha
mov
fldt
xor
xor
js
addl
sub
add
inc
popf
fiaddl
jl
idivl
adc
push
negb
test
cmp
pop
xor
mov
inc
nop
add
fdivs
dec
adc
sbb
sub
or
jle
jmp
cmp
mov
add
dec
pop
push
xorl
jle
mov
sbb
scas
lods
mov
roll
mov
jg
and
aas
test
add
jge
jmp
lea
shlb
cmpsl
mov
adc
stos
mov
data16
ret
pusha
jns
je
inc
mov
out
stc
adc
fstpt
pop
add
push
xlat
mov
xor
nop
and
dec
or
push
shrb
sbb
cmp
or
xor
inc
dec
add
in
add
loopne
movl
or
xchg
clc
sub
ja
dec
pop
fsubl
pusha
mov
fs
jmp
out
mov
push
sahf
add
ret
lds
inc
add
add
mov
xor
xchg
shll
xlat
add
data16
xchg
add
pop
jo
lahf
xor
js
inc
inc
pop
dec
push
mov
and
jp
jecxz
add
jbe
jno
int
xchg
jo
sub
mov
dec
or
pop
jle
and
clc
stc
sub
and
repz
pop
pop
add
add
int3
cmc
add
gs
or
repz
sahf
sbb
add
pop
dec
dec
mov
mov
ret
loop
xor
dec
add
rclb
add
test
mov
jbe
int3
cmp
push
add
pop
cmp
push
xor
lds
pushf
fnstsw
rcrl
aad
test
xchg
add
dec
xor
xchg
inc
mov
adc
xchg
and
subl
data16
mov
imul
rcrb
xchg
add
push
jg
shll
add
add
mov
mov
lds
sub
ret
sti
mov
or
dec
inc
inc
adc
mov
adc
int
mov
adc
decb
pop
mov
insb
lods
adc
adc
int3
mov
push
in
xchg
addb
das
imul
add
andb
stos
scas
mov
dec
add
lea
sbb
mov
adc
test
and
xchg
dec
push
in
bound
push
ljmp
cmp
pop
add
mov
inc
fistps
add
cmp
inc
add
xor
inc
test
add
xorl
popa
std
cmc
xchg
xchg
shlb
or
xchg
and
ret
mov
dec
add
cmp
adc
dec
add
lcall
adc
loope
das
pop
jg
addb
je
add
sub
mov
sbb
inc
xor
add
mov
or
in
fs
lret
or
jl
add
pop
pop
mov
adc
mov
sti
pop
js
xchg
cwtl
out
sbb
mov
xor
rorl
add
mov
movsb
loope
outsl
push
inc
iret
push
cmp
imul
hlt
rorb
pop
out
adc
incb
xchg
pop
add
ja
adc
popf
and
push
inc
or
inc
mov
push
in
popa
push
sub
mov
rorb
leave
xor
sbb
and
cmp
sarl
mov
pop
in
mov
jbe
icebp
or
in
out
add
dec
cld
add
int3
mov
dec
mov
or
add
sbb
ret
mov
mov
sbb
mov
and
jbe
in
adc
add
fs
shl
sub
sahf
xor
mov
pushf
adc
lds
inc
js
push
xor
fnstenv
loop
or
addb
arpl
or
loop
jle
inc
aaa
cltd
mov
repz
cmp
xchg
outsl
mov
pusha
pop
cmp
sub
xchg
xchg
pop
dec
test
repnz
push
repz
sarl
inc
xchg
jg
pop
and
call
mov
push
fs
sub
mov
mov
loope
in
outsb
sub
bound
xchg
or
rcll
pop
dec
nop
es
xchg
push
mov
cmpsl
rorl
adc
or
fnstsw
out
mov
sub
sub
sarl
cli
mov
xchg
add
or
cmp
or
sub
fisubl
ret
loope
nop
jbe
aad
data16
cmp
add
adc
push
xor
add
sub
rcr
cmc
xchg
push
sub
insb
movsb
sarb
fucomi
jnp
and
adc
call
xor
shl
ficoml
stc
xor
js
xchg
inc
sbb
xor
xor
xor
cmpsb
test
xchg
mov
nop
sbb
mov
mov
add
xor
popa
ds
ljmp
add
xor
pop
add
xchg
pushf
jl
test
fldl
xor
jp
mov
dec
es
pop
inc
loop
add
lock
dec
or
mov
fs
nop
inc
insb
int
mov
lds
mov
sub
mov
sub
mov
jmp
outsl
sub
mov
movsl
outsb
roll
and
fwait
in
pop
lock
ret
lds
into
jnp
or
out
lret
add
roll
subl
or
or
add
cwtl
adc
shll
adc
movsl
pop
and
pop
int
add
popa
popf
add
xor
sub
ret
and
mov
mov
mov
popf
xor
cwtl
out
push
add
mov
push
scas
cmp
mov
push
mov
es
add
in
jge
fs
movsl
mov
cmpsb
rorl
adc
xor
push
outsl
gs
sti
sti
cmp
xor
popa
pop
in
jecxz
xor
aam
jle
pop
popl
les
pop
int
fsubrl
clc
jno
inc
jb
pushf
fildl
jne
push
cmp
inc
arpl
dec
add
aas
stos
mov
or
addb
int
lret
negb
cmp
mov
jmp
cld
popl
mov
or
mov
shrl
push
mov
fs
inc
xchg
cmc
out
add
pop
outsl
mov
adc
and
add
fdivrs
es
mov
add
fwait
pop
add
mov
outsb
popa
mov
jg
call
sbb
xor
stos
addl
out
hlt
movb
pop
pushf
jecxz
jo
cmpsl
fldl
aaa
sbb
sbb
xchg
movsb
jbe
jle
xor
add
mov
ss
add
and
ret
add
push
cmp
and
mov
jb,pt
rol
pop
addb
jle
jnp
sub
add
in
pop
inc
cmp
cmpsb
add
jle
inc
sti
and
adc
movsb
lods
cli
push
int3
stos
mov
outsl
lret
cmp
gs
add
sahf
jle
je
imul
pop
xchg
ret
dec
add
fildl
data16
in
leave
cld
add
movsb
inc
xchg
dec
add
mov
outsl
add
loopne
jp
inc
pushf
push
add
jg
sti
dec
cmpb
xor
push
lods
add
push
ss
stos
daa
inc
push
xchg
add
xor
loop
add
aam
mov
inc
mov
popf
pop
cs
add
les
inc
out
sti
movsb
enter
sbb
mov
jg
mov
xchg
es
mov
inc
push
movsb
inc
out
ret
xor
scas
aas
pusha
cmp
add
sbb
add
adc
fsts
add
hlt
popf
iret
add
mov
ljmp
or
shl
push
cli
shl
cmpsl
adc
jl
or
sarl
divb
jecxz
subb
out
or
or
mov
or
mov
mov
push
pop
das
ljmp
addr16
cmp
and
jns
mov
xor
inc
and
setg
sub
push
jmp
je
add
sti
jg
fnstenv
lcall
incb
add
ret
imul
xor
fnsave
rcr
int
dec
add
xor
pop
and
loope
adc
cwtl
cmpsl
mov
add
mov
sub
fcoms
lea
jbe
sub
stos
mov
xorl
cltd
add
push
fdivrl
xchg
and
bswap
and
call
xchg
add
outsb
dec
xchg
adc
rorb
lods
xor
inc
mov
dec
shr
xor
add
cmp
call
add
xor
add
cld
xor
fcmovnu
insl
pop
int
mov
sbb
adc
add
inc
add
popa
cmp
cmpsl
mov
or
mov
push
out
aaa
clc
fisttps
enter
inc
jbe
adc
dec
adc
lcall
adc
xor
and
mov
or
outsb
inc
add
imulb
lods
sbb
sbb
test
xor
mov
mov
add
inc
nop
sbb
add
mov
inc
sub
test
inc
je
dec
iret
daa
and
push
push
aaa
js
add
cltd
stc
or
cld
mov
add
imul
lahf
xor
xor
push
scas
sbb
jp
fwait
scas
call
inc
je
cmp
sbb
leave
lahf
jmp
mov
popf
mov
gs
fucompp
mov
mov
sbb
lods
xchg
into
add
jle
xor
and
insl
jmp
mov
fdivr
add
sbb
testb
arpl
pusha
cs
inc
sub
lock
shll
in
fistpl
add
lret
aas
adcb
jp
mov
dec
lret
mov
lret
mov
negb
add
orb
faddl
add
jle
jge
icebp
dec
fwait
adcl
sbb
leave
inc
aas
jo
jecxz
push
out
iret
sti
psubusw
and
mov
loopne
inc
in
lock
les
push
or
lcall
push
inc
mov
add
add
and
popa
add
sbb
int3
or
ret
adc
add
xor
jmp
xor
test
shl
sbb
pop
add
xchg
imul
dec
xor
jno
jmp
pusha
in
call
loop
mov
aaa
dec
push
inc
xor
adc
mov
add
mov
bound
mov
mov
out
scas
in
sbb
rcll
push
add
or
push
fwait
iret
js
mov
les
jae
ljmp
flds
mov
and
jmp
clc
enter
lods
sub
add
add
mov
xchg
jmp
inc
or
push
clc
data16
cmp
add
mov
pop
or
inc
je
dec
or
mov
icebp
pop
push
adc
push
push
adc
sub
add
rcrb
inc
in
cld
jp
mov
out
add
testl
fldl
jp
imul
xchg
sub
aas
jl
mov
or
jg
js
int3
sbb
cwtl
insl
faddl
stos
mov
xchg
mov
xchg
hlt
add
stos
pop
jno
out
add
push
mov
test
sbb
subl
adc
inc
jmp
rclb
shrb
notb
sub
mov
and
or
imul
arpl
lock
cwtl
add
inc
or
add
loopne
xchg
add
xchg
mov
pop
add
mov
loop
cmp
and
or
sub
daa
and
sbb
ret
sbb
mov
mov
jbe
inc
shll
loop
cmp
and
and
mov
enter
in
adc
dec
scas
popl
add
int3
test
xor
sub
mov
adc
cmpsb
mov
mov
push
add
sbb
das
jbe
dec
xor
lret
fldl
mov
mov
sbb
fcmove
adcl
out
filds
add
xor
loope
xorl
lods
mov
sahf
jns
mov
out
dec
xor
xchg
lret
add
and
push
mov
xor
scas
jmp
add
mov
jns
pop
and
pushf
stos
ja
xchg
xor
add
mov
inc
test
add
imul
mov
xor
sbbb
add
test
data16
xor
mov
inc
mov
sbb
add
addb
or
and
enter
add
cli
dec
std
jge
ljmp
fsubrs
xor
sbb
test
imul
jmp
repnz
fsubrs
or
xor
push
sbb
in
loopne
pop
leave
fwait
js
inc
mov
lret
mov
cld
inc
pusha
mov
mov
push
stc
shll
or
clc
fwait
xchg
shrb
fstpt
mull
sub
cli
or
mov
fiadds
mov
cwtl
lock
xchg
sbb
jp
in
add
jns
rorb
ret
and
inc
jmp
aaa
aad
pop
ss
and
fists
inc
add
xor
pop
stc
add
cmpsl
push
add
and
fmull
or
mov
loop,pt
add
sbbb
inc
ret
mov
jge
and
cmp
movsl
dec
adc
ljmp
popf
popf
add
adc
dec
add
inc
shll
dec
cmp
sub
fcompl
jns
push
insb
mov
push
shr
mov
adc
inc
pushf
in
call
in
or
xchg
pmaxub
out
lods
addl
jge
push
xor
pop
adc
clc
rcrb
aas
shlb
movsl
les
or
jbe
loopne
std
add
sub
xchg
cmpsl
imul
jmp
nop
xor
mov
dec
bound
inc
mov
mov
or
mov
jle
adc
xchg
mov
mov
and
jo
loope
mov
test
add
mov
shrb
lret
rcrl
add
ss
mov
adc
jo
mov
xchg
xor
insb
adc
sti
xchg
pop
xor
pop
test
pop
divb
mov
sbb
into
imul
inc
inc
test
jbe
lret
sub
je
ds
shlb
add
xchg
in
and
outsb
mov
daa
mov
and
sub
add
push
repz
lods
xchg
or
lret
add
and
inc
add
cmp
jg
jno
fnstenv
or
mov
xor
add
enter
imul
int3
clc
adc
sbb
repnz
loope
scas
jle
pop
mov
mov
cmp
ret
add
shlb
jg
pop
jne
xchg
icebp
leave
add
outsb
push
mov
push
fildll
jp
mov
outsl
pop
shr
call
cmp
mov
and
pop
fnsave
mov
add
mov
push
push
jno
adc
pop
add
les
cmp
lds
and
inc
aaa
or
and
adc
fsubrs
hlt
mov
pop
imul
fwait
int3
iret
sbb
iret
sbb
sysexit
inc
and
push
mov
int3
add
fdiv
cvttps2pi
add
and
lds
sti
stos
ret
and
jo
stc
ret
mov
sub
and
icebp
aam
add
loopne
sub
push
addr16
outsb
out
adc
test
lret
rcrb
mov
aas
pop
fwait
add
ljmp
mov
adc
in
ror
mov
in
sbb
test
mov
insl
and
ss
faddl
push
push
cmp
ffree
cs
sub
and
sbb
xlat
adcb
mov
pop
inc
inc
push
rorl
jb
inc
xchg
sub
lock
jg
daa
cltd
pop
loopne
xor
fisttpl
test
sbb
add
fistps
popf
mov
dec
loop
roll
sub
sub
ljmp
sbb
shlb
shll
xlat
mov
and
jecxz
shr
iret
sbb
mov
ret
cs
cmpsl
push
loop
movsb
push
mov
or
sbb
cmp
fneni(8087
push
mov
inc
das
loope
dec
mov
cmp
popa
add
cmp
add
rcrb
cmp
test
xchg
aam
pusha
lcall
in
popl
fstpl
cld
ficoml
mov
dec
jnp
and
shll
inc
xchg
testb
mov
mov
cmp
jge
aaa
mov
out
push
cmpsb
adc
xchg
inc
sbb
pop
dec
ljmp
cmp
sbb
gs
movsb
jg
fs
add
sti
dec
adc
in
push
xchg
cmp
pop
je
mov
mov
pop
push
das
add
dec
dec
mov
movsl
sbb
addl
rorl
lea
sub
fwait
push
xchg
std
add
nop
pop
xchg
flds
add
rol
and
mov
mov
aaa
and
add
push
mov
dec
dec
add
scas
lret
add
add
sbb
mov
addl
pop
out
inc
loopne
ss
push
das
pusha
test
clc
xchg
fiadds
sub
add
mov
or
popa
mov
sbb
std
jl
ds
and
pop
pop
cmp
xor
add
adc
sub
sub
pop
sub
push
negl
jb
add
test
jp
inc
ret
inc
nop
push
xchg
add
mov
adc
std
in
movsb
push
add
or
fdivl
dec
cmp
add
lds
stos
in
jmp
push
pop
push
mov
stc
push
or
dec
pusha
int
pop
sbb
jecxz
xor
xchg
subl
aaa
ret
out
push
lock
xchg
into
add
inc
lret
fidivl
fldt
jecxz
xchg
rcl
xor
pushf
sub
and
ret
je
testl
mov
mov
jns
xchg
pop
sahf
add
adcl
into
mov
push
test
sbb
andl
add
movsl
cmpsl
jl
arpl
les
push
cmp
or
sub
dec
rol
xchg
sbb
add
std
adc
aam
mov
aaa
inc
sbb
mov
lods
fldt
jle
out
add
inc
sti
cmp
mov
adc
push
cld
data16
lcall
xchg
fcmovb
jecxz
adc
ja
inc
xor
mov
jmp
add
cmp
out
sbb
add
aam
jo
sub
add
xlat
in
lret
add
fsubrs
movb
mov
cmp
jecxz
add
mov
add
cltd
test
xlat
push
add
orb
cs
pop
mov
pop
int3
xchg
mov
sarl
test
js
add
push
inc
in
xchg
mov
mov
push
add
lret
jnp
jns
movsb
push
sbb
adc
dec
fsubrl
pop
add
clc
push
dec
in
fsubl
arpl
cmp
ret
add
mov
jp
add
out
stos
sub
repz
scas
xchg
sub
loop
pop
add
push
std
dec
dec
sbb
and
lahf
or
sar
shl
and
xchg
jmp
cmp
in
pop
dec
and
add
negb
pusha
xchg
into
faddl
mov
sbb
lea
nop
andnps
add
pop
lock
xlat
cmp
je
sub
add
jae
xchg
in
inc
leave
inc
sbb
enter
push
jbe
adc
add
add
adc
aas
repnz
xor
imul
add
addr16
outsl
fstpt
jle
push
insb
iret
adc
sbb
dec
xchg
cmp
inc
divb
cmp
jg
push
pushf
lret
jmp
pop
mov
jle
fs
and
xchg
int
cmp
je
add
imul
pop
stos
lahf
incl
aaa
mov
sarl
sub
mov
jo
ss
add
popf
stc
daa
sbb
popa
mov
mov
outsb
mov
mov
stos
pop
sub
je
and
fistps
enter
js
cmp
sarb
ret
add
lcall
fidivrl
mov
stos
dec
push
jmp
shrl
xorl
in
mov
add
rol
jns,pt
mov
inc
popa
xchg
add
les
fdivrs
out
mov
cld
scas
loop
push
je
add
adc
add
imul
stos
xor
cmp
lods
xchg
shr
out
add
push
dec
or
cmp
add
mov
mov
push
push
inc
pop
xchg
mov
and
bound
inc
int3
sbb
jge
lahf
dec
add
or
inc
xor
test
movsb
mov
sub
sbbl
dec
loopne
les
pop
mov
cli
xor
dec
add
mov
lock
pop
inc
sub
inc
add
mov
pusha
push
jmp
test
sub
pop
shll
nop
fs
add
inc
jmp
push
adc
and
sbb
aad
mov
adc
imul
xchg
jg
cmp
inc
push
ss
sub
and
popf
jecxz
mov
ljmp
sbb
adc
inc
repnz
repz
pop
add
cmp
cmpsl
dec
sub
cld
adc
out
pop
sbb
adc
jg
or
out
cmp
mov
xor
push
inc
cmp
push
add
lods
sbbb
test
das
add
pop
mov
or
push
mov
out
idiv
pop
sar
fwait
jge
jmp
aas
dec
cmp
movsb
or
mov
fcompl
add
mulb
rcll
jno
in
jbe
xchg
add
adc
push
movsb
inc
add
lock
fnstcw
addb
sahf
xor
jnp
and
and
aaa
or
orb
popa
mov
jbe
mov
fnstenv
insl
mov
pop
stos
pusha
sbb
xorl
push
lock
or
inc
mov
jno
repz
cmpsb
shrl
dec
mov
jb
or
and
jmp
pop
enter
dec
ret
into
lcall
jo
or
xor
popf
or
push
cmpsb
icebp
add
test
adc
dec
mov
iret
jl
cmp
push
lds
enter
dec
inc
shll
cmpsl
pop
inc
xchg
mov
jge
or
roll
push
inc
and
pop
pop
ret
cltd
mov
arpl
sub
and
iret
jb
cmp
dec
adc
sbb
jmp
dec
ret
push
lock
push
cmp
xchg
es
dec
jo
scas
jbe
add
cmpsb
sub
inc
xor
dec
cmpb
dec
xor
add
pushf
pop
nop
add
push
jge
stos
push
outsl
out
jge
dec
sub
sbbl
sub
into
in
inc
pushf
xchg
push
pop
or
scas
lea
in
jg
jne
sbbl
int
mov
std
movsb
lret
push
mov
and
inc
fcompl
in
add
dec
add
inc
sub
ljmp
mov
aaa
push
xor
and
arpl
stc
sbb
cmp
push
nop
shll
sbb
aaa
jg,pn
rolb
sub
in
jae
inc
rclb
add
pop
xlat
inc
add
add
movsb
bound
xchg
pop
lret
mov
or
aad
inc
add
btc
or
sbb
flds
cmpsl
xchg
add
xchg
xchg
into
inc
stc
inc
dec
fs
and
push
lea
cmpl
shrl
add
xchg
lret
fidivrl
testl
rorl
adc
popa
pushf
cmp
add
sub
add
ja
cmp
clc
mov
inc
fstpt
dec
pop
mov
aas
cld
or
cmp
push
adc
add
aam
and
jb
pushf
cld
jno
ljmp
dec
sub
xor
imul
cli
xchg
movsb
jb
adc
test
fdiv
repz
add
lods
or
lock
push
sbb
fsubl
adc
push
xchg
jmp
jns
add
pop
pop
adc
add
mov
mov
scas
add
jno
jb
lahf
addr16
inc
frstor
fs
lock
mov
pop
test
jnp
xor
xchg
fstpt
sbb
dec
mov
or
add
fstpl
nop
add
arpl
idivb
add
pop
in
and
mov
stc
xchg
shlb
or
testb
mov
pop
adc
faddl
dec
loop
mov
cwtl
adc
push
adc
les
hlt
inc
dec
add
rcrb
pop
sub
pop
fadd
sbb
pop
call
mov
insb
xchg
jbe
xor
call
sbb
cli
divl
ret
dec
into
cmc
add
sub
push
add
movb
repz
sbb
cmp
scas
pushf
add
cli
push
pop
mov
mov
jb
and
or
cmc
xor
mov
cmp
add
inc
shlb
adc
jo
fnstcw
jl
lods
scas
mov
cld
cwtl
cmpsl
aam
ret
rcrl
mov
in
add
stos
gs
mov
cmpsb
stc
add
add
loope
cwtl
cmp
ss
shlb
fwait
push
dec
movsl
mov
test
xchg
pop
dec
xor
or
pop
rclb
or
nop
sti
add
fists
pop
add
push
jle
mov
xchg
fsub
test
mov
mov
cmp
jae
dec
sar
lds
add
xchg
jecxz
fnstenv
cmpsb
fldl
clc
iret
shll
sub
addr16
push
add
enter
incb
cld
add
lret
and
cmp
cmp
mov
pop
shrl
add
in
mov
xchg
inc
gs
int
add
xchg
loopne
test
scas
dec
jle
add
dec
dec
and
leave
jb
jp
sub
mov
xchg
push
sub
mov
cmp
jne
pusha
mov
and
add
pop
jp
dec
dec
add
inc
xchg
cmp
enter
outsl
cmpl
dec
xor
add
fwait
popa
xor
dec
loopne
pop
add
pushl
xchg
out
testl
pop
inc
call
and
jbe
fiaddl
pop
cmpsb
int3
sbbl
mov
cmp
loopne
mov
mov
std
xor
xchg
mov
inc
jge
enter
mov
sahf
ret
dec
or
cmp
push
outsb
pop
mov
cmp
rcrl
mov
xor
xlat
es
add
sub
lret
add
aaa
test
pop
andl
jmp
sbb
movsb
push
jecxz
cmp
fdivl
cmpsl
movl
sarb
xor
sahf
push
and
incl
mov
add
ss
add
mov
inc
pop
in
ret
cmp
xchg
inc
push
sbbl
adc
fwait
mov
add
pusha
push
dec
gs
pop
add
mov
inc
enter
xor
js
mov
pop
push
ja
and
xchg
pop
push
lods
adc
add
mov
in
psubq
cmp
pop
xor
cli
test
std
pop
and
loop
push
nop
inc
xchg
sbb
and
pop
mov
xor
and
or
push
push
aad
loopne
push
das
add
jns
cld
out
pop
std
jnp
scas
mov
cmpl
mov
rorb
xchg
sbb
sub
sub
pop
adc
sub
adc
xor
cmpb
add
int
push
cld
jle
jae
out
mov
pop
cmp
inc
inc
leave
into
xchg
xchg
mov
roll
add
xor
jecxz
jo
mov
lret
rorb
push
les
sbb
std
cld
mov
mov
jle
lods
lds
xchg
add
in
pushf
test
cmp
add
daa
pop
gs
loopne
mov
outsb
int3
dec
mov
cmc
lods
js
inc
enter
add
adc
or
inc
mov
and
jne
out
inc
add
imul
pop
mov
push
add
lret
xchg
add
adc
mov
testb
pop
dec
sbb
rclb
cwtl
inc
cltd
add
xor
add
sub
mov
add
adc
adc
add
cltd
xor
mov
sbb
es
insb
mov
push
pop
add
mov
bound
add
in
dec
sub
aam
pop
mov
mov
add
push
fldl
pushf
cmc
stc
jle
jl
xor
pop
cmp
cmp
add
bound
out
pop
cmp
mov
add
pop
adc
loop
sub
inc
xchg
sbb
sbb
mov
js
pop
test
jo
add
xor
cwtl
sti
and
cmpsb
sbb
add
push
fstpt
shll
in
and
subb
jl
xor
mov
adc
mov
pop
jle
fwait
add
add
and
mov
pop
push
lret
loop
mov
shl
clc
push
fiaddl
jp
xorb
test
aaa
adc
sbb
dec
pop
scas
sbb
in
arpl
and
xchg
pop
aam
int3
adc
je
jl
pop
push
mov
or
sti
ret
stos
push
loopne
je
jge
cmp
xchg
rorl
divl
add
inc
adcl
mov
push
dec
ret
mov
add
mov
out
pop
push
sbb
cmp
call
cmpsb
in
jmp
test
xor
sbb
ret
or
imul
xor
sub
xorl
adc
add
jno
cmp
test
lods
sub
rorb
push
lret
and
loope
dec
bnd
adc
scas
pushf
daa
mov
rolb
add
add
lods
int3
jo
pop
push
into
or
subl
pop
add
int
mov
adc
lret
xor
jmp
mov
shlb
ja
shl
fldl2t
and
or
add
push
cmpsb
xchg
push
mov
sahf
push
jge
repnz
adc
xchg
mov
pop
jmp
push
add
mov
mov
addb
inc
cmp
inc
popa
hlt
sub
lcall
cs
js
cmp
cmovno
or
mov
push
add
int
xchg
xchg
pop
inc
fdivrl
test
out
mov
clc
push
mov
xchg
mov
adc
fwait
aam
adc
add
mov
aas
pop
mov
ret
and
cmp
je
push
xchg
jns
aas
push
into
add
add
mov
jl
inc
mov
call
scas
xchg
sub
int3
jnp
xchg
or
aas
sahf
jecxz
fisubs
mov
xchg
jo
xor
mov
jmp
adc
sub
jle
lock
int3
shl
leave
dec
fbstp
add
out
std
movsb
adc
jno
fstpl
test
roll
xchg
mov
mov
in
aaa
push
sub
and
add
and
inc
lcall
pop
sbb
pop
sbb
push
sbb
jae
mov
mov
inc
inc
mov
push
ret
subl
sarb
add
mov
aam
add
into
jmp
add
inc
or
xchg
add
orb
inc
dec
jp
pop
and
pop
outsl
enter
sub
xchg
stos
push
icebp
rorb
ds
push
inc
xchg
rolb
and
push
jecxz
inc
add
popf
mov
add
sub
mov
sahf
add
fcoml
and
fwait
mov
clc
pop
and
iret
fdivs
add
loopne
jl
jl
xor
add
pop
fldenv
sbb
xor
xchg
rorb
and
dec
mov
out
pop
xchg
mov
lds
imul
dec
xchg
mov
add
inc
loop
shl
and
mov
inc
loope
add
push
insb
cmp
or
cs
shlb
and
xor
cmpsb
in
out
mov
and
sub
xor
or
or
push
mov
xchg
gs
push
xor
hlt
shl
insl
xchg
push
aas
cmp
scas
add
sti
adc
jnp
movsb
xor
mov
adc
add
mov
dec
jbe
push
ds
ljmp
testl
int3
mov
popf
add
roll
sub
cld
push
cmpsb
push
push
xor
cmp
out
inc
mov
xor
xchg
pop
jno
dec
js
mov
fwait
jo
cwtl
test
and
fsubs
divb
adc
sub
test
and
cmp
repz
add
push
mov
jns
test
sub
pushf
or
in
test
xchg
adc
and
mov
mov
add
aad
add
lds
lods
ds
add
ja
xchg
jns
sbb
stos
mov
gs
test
pop
loop
clc
fnsave
jb
mov
lret
pop
jg
popa
inc
sti
push
pop
add
add
sub
mov
add
xlat
ret
ret
push
add
mov
mov
inc
or
ret
cmp
out
outsl
xor
cmp
outsb
or
shlb
pop
gs
sbb
mov
jg
and
push
ficoml
aam
add
test
cmpsb
shrb
dec
out
add
jecxz
mov
movsl
jo
push
xchg
sub
sub
fldl
rcll
nop
into
addl
mov
add
push
add
adc
imul
xchg
cs
jo
add
xor
dec
pop
je
outsl
pop
push
or
movsb
add
cmc
nop
dec
aas
mov
mov
mul
lods
stos
mov
mov
mov
and
inc
adc
mov
cmp
fisttps
cmp
pop
and
imul
pop
inc
xor
sahf
mov
sub
adc
dec
sarb
push
sbb
stc
test
mov
insb
lds
xchg
cld
inc
pop
shl
test
adc
ljmp
xor
popf
add
sub
pop
enter
and
sub
mov
loopne
leave
in
lret
add
ret
sbb
ret
fildl
or
mov
fwait
xchg
into
adc
xchg
add
adc
int3
lcall
mov
stos
mov
loopne
add
inc
jbe
adc
ss
or
jmp
cmp
movsb
lahf
fdivrl
jbe
adc
mov
mov
sub
loop
add
rcrb
push
jns
roll
jnp
out
hlt
mov
mov
xchg
pop
cmp
add
leave
inc
push
cmp
outsl
pushf
dec
fsubs
push
pop
add
imul
inc
test
dec
dec
into
push
or
pop
lds
mov
jne
xor
rcrb
popf
jl
xorb
xchg
fdivs
or
xchg
cmpl
mov
stc
fisubrs
cmp
fnstenv
add
inc
lock
iret
cltd
imul
gs
je
mov
add
das
inc
mov
ss
leave
jge
push
out
pop
add
mov
pop
add
push
call
push
jb
rolb
pop
pop
icebp
dec
cmp
fnsave
add
push
sarl
add
lcall
jb
lahf
mov
dec
jl,pn
fisttps
jg
xor
xor
or
repnz
imul
ss
imul
movb
mov
sub
add
fsubs
mov
iret
je
and
pushf
cmc
sbbb
add
mov
xorl
scas
add
push
lahf
add
sbb
add
pusha
iret
mov
add
add
xchg
es
out
lock
repz
sub
adc
mov
mov
shll
adc
aam
andl
add
sbb
push
ret
addl
mov
cmp
inc
push
or
jmp
inc
cmp
arpl
jno
add
out
les
mov
sub
popa
test
cmp
ret
jge
int
sbb
adc
add
aaa
add
repnz
out
rol
mov
dec
arpl
cmp
add
aas
clc
stos
lahf
jb
popa
add
lods
sarl
cltd
es
add
xor
lahf
inc
xchg
ret
cmp
pusha
fs
xchg
and
roll
sbb
mov
popa
add
cmp
or
jb
pop
add
xor
sub
fwait
sub
sub
leave
xchg
add
fadd
jl
and
or
add
xchg
imul
adc
testl
jnp
icebp
or
mov
add
rol
add
push
push
pop
xchg
add
popa
sti
pmaddwd
scas
add
ds
into
sbb
cmp
add
stos
test
xorl
in
jmp
loope
lahf
sarl
or
clc
bound
outsl
sbb
scas
sub
add
scas
mov
cmpsb
adc
or
repnz
or
sub
pop
mov
add
movl
add
jb
lock
dec
add
xor
test
es
dec
lods
dec
dec
outsl
add
shlb
mov
mov
stos
adc
mov
add
icebp
push
gs
xor
push
cmp
or
xchg
mov
jle
jl
and
or
popl
push
xchg
lahf
lret
inc
jle
ss
insl
repz
hlt
add
pusha
mov
mov
xchg
call
movaps
mov
mov
or
divl
jbe
sub
and
mov
xlat
and
mov
xor
and
cmp
push
js
arpl
jne
xchg
test
push
add
sahf
xor
add
jnp
stos
gs
jge
xor
add
bound
test
nop
pop
arpl
and
in
fistl
dec
pop
faddl
mov
fdivrs
cmp
mov
mov
mov
pop
les
or
cmp
popa
add
loope
les
pop
add
sub
add
push
jmp
icebp
sbb
mov
inc
pop
pop
and
pop
rorb
pop
or
mov
add
push
add
add
cmp
cmp
pop
ss
fiaddl
jg
adc
cmp
xor
mov
cmpsl
lcall
adc
push
and
sarb
cmpsl
int3
inc
and
aam
sbb
xchg
add
dec
repz
fcompl
mov
xchg
cmp
rcll
add
jle
mov
add
shlb
je
nop
mov
add
pop
shr
andb
sub
add
add
mov
clc
mov
jg
leave
lock
loop
rcll
data16
ja
push
rcll
mov
ss
cmp
dec
idivb
data16
xor
pop
es
sarb
or
push
sub
mov
bound
jns
adc
push
jne
rolb
fcmovne
sbb
loopne
mov
xor
or
std
sub
xchg
add
fldenv
dec
add
addr16
add
test
pusha
push
arpl
lcall
sahf
addr16
in
add
sub
jmp
add
dec
and
add
lcall
xor
jo
and
sub
sub
add
inc
jbe
fistpll
xchg
xchg
sub
rorl
cmp
adc
sbbl
add
inc
inc
unpcklps
add
add
sbb
std
sbb
das
fadds
ds
ret
stos
mov
push
dec
mov
jge
add
add
shll
or
fnstenv
add
outsb
xchg
inc
and
add
xchg
sub
pop
out
inc
ffree
test
mov
or
xchg
add
popf
jbe
cmp
mov
stos
rcrl
push
jb
dec
test
scas
adc
jb
orl
or
mov
sbb
xor
sbb
or
add
sahf
out
xor
fcmovbe
inc
lret
pop
push
push
imul
push
enter
pop
push
aas
pop
js
jmp
sbb
test
cli
inc
push
je
mov
pop
stc
pop
pop
and
inc
mov
daa
dec
pusha
xor
inc
push
xor
and
cmp
mov
add
mov
add
jae
insl
mov
jo
push
push
fiadds
mov
sub
add
out
data16
add
addr16
add
pushf
mov
add
pop
popf
roll
insl
and
pop
add
cltd
inc
adc
and
push
rcl
lret
lock
add
mov
imul
dec
sbb
in
movsb
pop
add
add
adc
mov
sti
or
dec
cmp
pop
sbb
adc
das
push
inc
int3
es
push
or
idivl
add
stos
xchg
sbb
xor
add
push
xor
mov
add
push
cmp
ret
mov
add
fcoml
hlt
sbb
dec
jb
xor
push
inc
imul
in
inc
in
in
repnz
add
push
fsubl
ret
sub
shlb
shrb
in
add
shrl
sbb
xor
add
jo
aad
outsb
rcl
push
or
pop
out
push
pop
add
xor
pop
inc
ljmp
mov
mov
add
adc
fdivrl
mov
pop
xor
lock
add
sbb
inc
sub
stos
xor
sub
mov
in
loope
cld
xlat
mov
inc
dec
add
adc
jbe
or
ror
sti
push
sbb
ds
add
fs
imul
aam
sub
dec
xchg
dec
data16
ret
out
lcall
jecxz
mov
xchg
or
inc
sub
mov
cmp
xchg
mov
add
gs
cmc
and
mov
cmp
cmpl
cmp
scas
xchg
in
inc
inc
fldt
and
mov
es
add
xchg
xchg
sub
sbb
aas
cmp
mov
loop
jmp
sahf
mov
les
aam
xchg
and
cld
adc
jnp
mov
xor
faddl
ss
xchg
add
push
iret
or
or
scas
xchg
sti
pop
inc
and
inc
cmp
imul
dec
add
xchg
movsl
lret
push
mov
cmpsl
sub
add
test
mov
test
adc
cmp
xor
fists
inc
aam
test
pop
fdivs
imul
jge
sub
and
fstpl
fldl2e
add
push
cs
xor
mov
jg
jle
pop
push
in
xlat
pop
push
rcl
js
or
sub
lcall
add
or
hlt
xor
movl
and
lock
les
xchg
lahf
add
pop
cmpsb
cmp
cwtl
sub
lret
jns
push
into
add
adc
jmp
add
shll
pop
push
dec
mov
int
inc
sahf
icebp
xor
mov
pop
pop
gs
push
inc
cltd
mov
rorb
cmp
pop
jnp
repnz
movsl
mov
and
add
cmp
mov
mov
add
xchg
xchg
inc
add
jnp
les
enter
repz
iret
mov
filds
gs
je
cmp
jg
mov
inc
lret
xor
xlat
stos
or
add
cmp
jge
pop
stos
dec
or
scas
and
jno
je
xchg
aaa
ja
cmp
push
imul
test
ret
cmp
addb
ljmp
inc
or
mov
pop
pushf
sub
int
pop
push
out
mov
or
pop
add
push
test
add
mov
xchg
popa
and
or
lret
mov
add
mov
sbbl
pushf
cmp
inc
lahf
add
mov
and
mov
cltd
add
xor
xchg
xchg
or
insl
xor
pop
jmp
cltd
popf
and
add
cmp
add
cmp
mov
mov
xor
fldl
xor
cmc
cmpsb
add
mov
ret
cmp
add
cld
mov
adc
mov
add
xchg
les
shrl
inc
imul
cmp
jl
sub
mov
mov
dec
sbb
jle
or
sbb
mov
pop
fcmovbe
jecxz
repz
in
and
js
sbb
xchg
and
mov
out
dec
pop
jge
mov
scas
loope
adc
add
psadbw
mov
fcmovb
dec
and
sbb
or
mov
cmp
bound
popl
mov
cmp
fidivs
adcl
xor
test
aad
add
adc
aam
push
idivl
add
mov
inc
sbb
mov
sbb
lock
dec
loope
aaa
cmp
popf
mov
xor
sbb
push
cmp
faddl
add
adc
int
add
adc
xchg
mov
and
in
jb
inc
dec
mov
lods
dec
inc
lds
popf
cmp
out
mov
mov
andb
popf
addb
fdivs
in
or
jecxz
ret
mov
add
or
xor
mov
push
je
push
popl
mov
rorb
pop
mov
imul
mov
pop
xchg
mov
dec
subl
and
leave
outsl
add
int
add
ds
mov
ret
jl
pop
push
xor
push
add
outsb
xchg
sti
mov
push
pop
add
das
repz
es
iret
push
ja
mov
insb
push
add
sbb
push
loop
inc
sub
cltd
shlb
sbb
mov
push
xor
lds
in
decb
ja
icebp
andl
addr16
xorl
rep
ret
adc
stos
inc
fbstp
andl
xor
jb
push
addr16
cli
loopne
pop
jbe
leave
ds
sbb
nop
dec
into
mov
xchg
scas
nop
movsb
lods
cs
cmp
fiadds
push
sub
mov
test
jp
pop
inc
sahf
xor
xchg
fidivl
add
xor
lods
pop
dec
ljmp
xchg
daa
loopne
jle
cmpl
xor
xchg
push
ret
xor
inc
mov
shrl
sti
cmp
int3
loope
jl
xchg
add
cmc
scas
mov
insl
add
push
icebp
call
add
test
pusha
add
jbe
hlt
inc
mov
out
daa
mov
push
cmp
adc
inc
push
add
sbb
mov
call
xchg
std
cmp
jne
ljmp
loopne
pusha
or
mov
outsl
out
sbb
test
fdivrs
xor
in
fbld
es
pop
pop
push
aaa
nop
jle
push
std
mov
adc
xchg
and
mov
rcrb
test
movsb
sti
cmp
cmp
aad
add
mov
push
pop
jb
add
sbb
test
addb
add
aam
mov
pop
add
xchg
add
xor
mov
push
pop
jae
push
js
mov
lea
imul
dec
adcl
xchg
sbb
xchg
inc
out
add
ret
add
mov
cltd
js
and
push
lret
rcll
lea
sti
add
adc
push
add
mov
cmp
pusha
jns
movsw
std
jp
pop
das
int3
rcl
cmpb
mov
mov
mov
inc
outsl
jecxz
filds
imul
out
dec
and
push
arpl
mov
push
jg
ret
aad
add
adc
stos
pop
xor
shrl
cmp
or
pop
dec
iret
mov
lret
add
and
aas
in
jbe
mov
roll
fmulp
mov
add
mov
and
outsb
or
sbb
adc
cs
scas
inc
dec
dec
insb
inc
ss
mov
enter
pop
rcrl
adc
sub
mov
repz
cmpsb
or
sbb
lods
lahf
add
dec
sub
add
mov
lds
add
movsl
lcall
mov
sub
xchg
loop
sub
bnd
xor
pop
push
add
in
test
in
jmp
add
pop
xor
xor
jae
push
inc
stc
cmp
popa
cli
adc
out
push
data16
jno
filds
lret
fnstcw
pop
xor
sub
imul
fldl
add
sti
xchg
mov
stos
add
stc
movsl
sub
test
push
add
or
add
lds
jae
shl
pop
cld
cmp
xchg
std
mov
es
add
mov
mov
inc
add
stc
add
push
or
adc
pop
ret
insb
stos
mov
iret
mov
xor
jmp
dec
push
jbe
adc
mov
xlat
mov
xchg
data16
and
push
cltd
es
in
jmp
and
ret
out
jecxz
mov
pushf
xchg
scas
xor
sub
dec
shll
push
push
testl
inc
shl
cmp
cli
std
iret
xor
aam
movsl
test
add
xor
mov
xchg
cmp
test
pop
add
xchg
jmp
andb
roll
mov
les
mov
mov
add
sbb
hlt
aad
cltd
mov
sar
push
cmp
shrb
mov
jmp
pop
lds
push
xor
int3
std
add
and
rclb
pop
adc
xlat
mov
or
sub
dec
sti
lds
inc
and
add
mov
inc
fstpl
add
cmp
fisttpl
jae
mov
xor
incb
scas
out
xchg
out
jno
add
clc
push
or
add
std
and
sub
mov
lret
or
movsl
rol
sbb
cmp
mov
cmp
mov
sbb
mov
mov
ds
xor
int3
shrb
cmp
xor
add
push
out
push
cmp
dec
mov
sub
out
cli
sbb
cmp
int3
add
loop
clc
aaa
inc
stos
sarb
cmp
into
xor
sarb
mov
cmp
inc
insl
clc
jne
or
enter
aam
push
int3
push
fiaddl
decb
xchg
mov
outsb
movsb
mov
dec
cmpsl
bound
mov
adc
add
sbb
pusha
cltd
daa
pop
adc
movsb
add
xchg
or
sti
sub
cs
add
ja
stos
adc
imul
pop
cwtl
dec
movsl
xor
jns
lret
dec
int3
mov
outsl
or
popa
mov
pop
push
xorb
cmp
js
xchg
add
lock
test
pop
inc
ds
sub
jmp
add
xor
sub
mov
push
or
push
cmpsl
das
call
xchg
jg
movsb
repz
sub
xchg
je
scas
add
pop
jae
inc
fsts
sarb
jge
cmp
mov
sub
cmp
xor
fstp
xchg
cmp
add
das
in
push
insb
roll
out
lock
add
adc
adc
in
pushf
dec
mov
int3
add
loop
movsb
imul
enter
or
xchg
add
pusha
mov
lock
add
push
sub
ja
repz
mov
addr16
lret
cmp
add
sbb
mov
mov
add
adc
jecxz
add
sub
lock
xchg
test
sub
mov
and
sti
test
aas
adc
lods
enter
jle
add
jo
jne
js
mov
mov
icebp
mov
sub
imul
test
loopne
push
mov
cmpsl
push
sbb
dec
xor
shll
pop
mov
or
add
mov
or
jmp
lock
xchg
repz
test
sub
add
cwtl
mov
std
inc
jmp
jo
popf
ficomps
mov
hlt
add
cs
pusha
add
movsl
sbb
sub
pop
mov
add
xor
pop
xchg
mov
and
andb
lahf
adc
pop
mov
xor
mov
sub
repnz
ffreep
ds
and
and
mov
orl
add
push
sbb
mov
mov
add
xor
pushf
or
je
jo
std
add
jl
inc
shlb
add
or
mov
fcmovnb
mov
add
sbb
sahf
pop
lea
popf
mov
mov
add
sub
ret
add
cmp
popf
adcl
push
pop
jg
add
popa
pop
ds
nop
xor
adc
dec
mov
sbb
add
jo,pt
or
sbb
outsl
xchg
adc
bound
inc
cmp
sarl
cmp
dec
cld
pop
add
mov
daa
jbe
push
gs
cmp
cmp
add
pushf
mov
dec
stos
andb
jle
or
sti
push
xchg
adc
add
and
lods
orl
push
test
jmp
in
ljmp
jg
das
lret
test
xchg
fdivrl
add
mov
pop
cmp
add
iret
std
mov
and
jl
cmp
movsl
into
xor
rep
hlt
movl
push
and
jbe
adcb
jg
and
xchg
xor
add
fs
dec
ss
add
mov
ljmp
out
sub
and
push
rolb
cmp
or
jnp
dec
add
mov
inc
xor
jae
addl
add
mov
xorb
or
jno
rcr
add
jp
xor
imul
add
jecxz
popa
sbb
sub
fwait
int
add
inc
dec
aam
or
bound
cmp
dec
xchg
addb
push
imul
call
in
test
leave
sti
add
and
or
and
loop
dec
xchg
mov
mov
test
sub
fldt
pop
jle
dec
add
loope
mov
and
ss
enter
bnd
dec
sbb
sbb
add
fiaddl
add
add
inc
mov
mov
ljmp
fcmovnu
jae
jecxz
sbb
out
mov
sbb
dec
add
mov
scas
clc
jno
enter
push
rorl
mov
and
mov
add
gs
leave
add
adc
mov
out
xor
or
lret
pop
loopne
dec
and
push
xchg
push
pushf
xor
sti
push
paddusb
add
mov
pop
lret
jb
jl
push
loopne
shlb
fstps
cmp
loop
shlb
outsb
xor
in
add
outsb
fs
insl
or
inc
jl
iret
mov
mov
xchg
or
cmpsb
cmc
inc
subb
in
mov
and
push
idivb
test
jle
enter
or
cmp
cmp
outsb
pop
mov
cmc
add
ds
loopne
test
add
inc
pop
xchg
mov
jge
roll
sub
adc
and
mov
stc
pushf
adc
hlt
dec
lret
sub
dec
flds
fstpt
cmp
repnz
xor
mov
add
cld
mov
cmp
xor
pop
add
or
xchg
hlt
call
std
pushf
enter
ret
push
and
jo
jmp
lods
stos
push
in
lcall
fistps
add
ds
or
mov
and
push
cmpsl
mov
adc
inc
sub
add
push
je
jmp
cmp
clc
xchg
scas
loopne
test
mov
xchg
sub
ret
push
movsb
out
and
dec
xchg
mov
push
add
or
stos
cmp
push
lods
mov
jl
mov
adc
xor
sub
imul
mov
fcmovnu
daa
mov
sub
ljmp
leave
popf
sub
mov
mov
add
lcall
hlt
fisubrl
mov
inc
test
loope
add
test
inc
dec
ret
pop
dec
out
add
cltd
popa
aaa
je
mov
dec
insl
aas
push
enter
insb
hlt
fs
add
mov
jnp
jmp
xor
add
cmp
test
aas
arpl
add
lods
pop
roll
dec
jno
ffreep
lock
pop
add
pop
mov
add
aam
jbe
cld
inc
add
mov
imul
mov
mov
add
fbstp
in
pop
ret
loop
and
stc
mov
dec
adc
lea
lcall
mov
pop
movsl
int
test
das
adc
loop
push
clc
jbe
cmp
mov
mov
hlt
and
xchg
add
jnp
add
test
pop
fwait
and
jmp
and
in
add
add
fs
pop
jae
sub
add
mov
enter
cwtl
add
loope
pushf
sbb
jne
and
jecxz
lret
arpl
or
push
je
mov
add
inc
cmpsl
pop
iret
movsb
push
popf
out
stc
mov
pop
add
cs
bound
inc
rol
push
jl
iret
lods
inc
cwtl
pop
and
mov
fidivs
push
into
sub
cmpb
scas
add
inc
sti
in
mov
mov
pop
cli
push
jae,pt
sub
jle
adc
adc
faddl
add
mov
inc
jecxz
xchg
cmpl
cmp
and
jns
or
lcall
and
iret
out
pop
sbb
lods
jecxz
movsb
xchg
add
dec
xor
sub
add
rclb
add
or
neg
popf
jg
loop
xchg
adc
stos
jns
sbb
dec
and
jmp
xor
xor
cmp
xor
inc
adc
imul
in
or
repnz
stos
cmp
push
add
pop
or
psubd
nop
inc
insb
pushf
pusha
fidivrs
test
movsl
sub
adc
xchg
adc
fsts
push
xor
test
mov
push
xor
or
daa
sbb
call
jp
add
int3
push
sti
aaa
mov
jo
arpl
fmull
and
or
push
enter
push
add
pop
testl
sbb
add
ss
sti
and
and
test
fisubrs
dec
dec
inc
dec
sub
les
xchg
loope
add
mov
gs
add
in
ret
dec
fwait
and
clc
ret
addr16
das
inc
pop
ja
mov
jmp
inc
movsl
and
push
sbb
jl
add
mov
xchg
outsl
inc
lret
adc
aaa
and
sbb
xchg
cmp
jp
jmp
cmp
sbb
lahf
in
scas
push
pop
add
add
mov
int3
or
nop
xchg
or
add
inc
les
add
pop
aad
pop
mov
xchg
arpl
inc
repz
ds
cmpb
inc
inc
push
dec
icebp
sti
leave
sbb
cmp
stos
inc
push
sbb
fs
in
movhps
and
add
mov
add
adc
pop
or
jne
inc
dec
inc
push
lea
add
fiaddl
dec
xor
pop
inc
imul
sar
jno
in
pusha
icebp
xor
xlat
push
push
add
stos
pop
xor
jmp
lea
xchg
pushf
inc
je
jecxz
mov
outsb
sbb
xor
pop
clc
jo
and
in
scas
mov
dec
push
test
push
sbb
adc
xor
iret
outsl
int
jo
and
cmpsl
jnp
std
add
loopne
sti
ja
dec
cmc
add
push
mov
mov
xchg
mov
pop
mov
pop
mov
push
jo
ja
add
repz
mov
jnp
mov
sub
rcll
add
lea
push
mov
push
es
and
push
cmc
mov
je
lea
enter
outsb
dec
sbb
test
sbb
jne
loop
or
push
punpcklwd
and
cwtl
inc
outsl
cmp
adc
sbb
xlat
fsubs
dec
ljmp
js
decl
adc
xchg
push
popa
add
mov
and
mov
mov
outsl
dec
sub
lahf
fcom
divb
fsubp
sarb
or
scas
cmpsl
add
shll
cmp
dec
xchg
push
bound
xor
mov
andl
shrl
xchg
fildll
test
cmp
in
add
pop
arpl
cmp
or
mov
pop
mov
inc
mov
push
repz
xor
inc
xor
mov
sub
into
push
stc
pop
add
or
jge
or
mov
cmp
add
stos
push
lds
push
sub
into
test
xchg
in
add
pop
into
pushf
rcl
push
mov
fiaddl
adc
ja
mov
in
sti
mov
xchg
add
outsb
pop
dec
ret
add
sub
arpl
mov
cltd
pushl
mov
sbb
cmc
loope
push
and
mov
lahf
lods
leave
inc
and
outsb
inc
and
xchg
fsubrl
mov
and
push
icebp
sbb
push
pop
repz
iret
push
shlb
jns
pop
pop
xor
add
push
adc
pop
shrb
cs
jp
rorb
add
push
nop
mov
rcrl
sbb
addl
sub
aas
or
jo
sub
pop
stc
add
add
cmpsl
loop
mov
out
roll
pop
push
sahf
arpl
stos
mov
sbb
rorb
ja
imul
sti
les
ljmp
and
mov
cli
insl
add
dec
pop
cmpsl
inc
dec
jl
popf
aam
jb
xchg
add
inc
xor
and
out
dec
sbb
ret
dec
cltd
fdivrs
mov
push
inc
dec
js
test
push
xchg
pop
insb
lret
aas
mov
daa
loopne
outsb
sbbb
pop
in
mov
xor
insb
xor
adc
mul
mov
inc
or
or
push
sub
and
adc
mov
xor
rcr
add
lods
filds
iret
and
mov
sbb
es
and
add
sbb
addl
mov
cmp
mov
jae
mov
pop
mov
pop
cmpsl
jl
mov
sahf
inc
add
addr16
sub
xor
xchg
pop
clc
popf
addb
inc
xor
inc
fs
sbb
cmp
mov
shll
in
or
movsb
scas
cmp
ret
cmpsl
add
bound
rcrb
popa
inc
test
push
push
ret
sub
or
ss
shll
es
add
stos
mov
add
aas
icebp
imul
and
add
aam
jnp
stos
mov
ja
aas
cwtl
push
add
lcall
add
pop
mov
push
sbb
mov
insb
lret
push
lds
std
add
dec
jecxz
mov
outsl
add
nop
push
or
cltd
rcr
out
out
lds
sbb
and
leave
mov
xchg
xor
add
mov
inc
push
mov
pop
mov
movsb
sbb
cmp
add
sub
add
push
je
shrb
and
xchg
popf
add
pop
shrl
in
ja
subb
cmp
lods
add
jp
scas
or
nop
call
mov
jle
lcall
inc
mov
xor
sbb
push
and
cmp
xor
push
dec
mov
cmp
ja
aas
movsb
add
fcompp
addb
fcomp
xor
push
add
add
adc
xchg
mov
xor
scas
and
mov
dec
sub
cs
sub
ret
addr16
popf
or
roll
cmp
clc
or
int
cmpsl
sbb
xchg
les
pop
add
cmc
cmp
dec
sbb
aaa
aad
xor
add
dec
sub
iret
add
xchg
mov
add
xchg
add
pop
mov
push
add
movsb
insl
or
jbe
jge
lds
and
xchg
mov
lret
dec
xor
outsl
inc
sub
push
test
add
xor
xchg
rol
mov
jnp
inc
inc
pop
ja
inc
jne
xchg
xchg
pop
icebp
xchg
add
fldenv
xor
xor
out
xlat
in
adc
mov
add
sub
mov
les
xor
or
jo
cmpsb
add
cmp
shlb
imul
mov
and
sbb
push
add
mov
outsb
inc
cmpsl
in
jo
stc
clc
in
xor
jo
je
out
cmp
jbe
jg
push
add
dec
mov
jecxz
cmp
add
iret
push
xchg
fwait
add
imul
add
lock
jne
add
mov
ds
cmpsl
ret
scas
mov
adc
push
add
inc
clc
cmp
xchg
lock
inc
xchg
scas
fsts
sbb
mov
add
enter
bound
add
mov
adc
pusha
xchg
push
and
in
call
add
add
stc
dec
add
ret
and
call
roll
sub
add
ljmp
fildl
sbb
iret
test
mov
add
sbb
mov
or
mov
movsb
out
adc
xor
mov
mov
fsubrl
iret
lcall
xor
mov
fwait
mov
adc
adc
daa
mov
negb
jecxz
add
scas
pop
rcll
test
adc
xchg
add
arpl
mov
cmp
test
push
push
sub
shl
dec
push
iret
int3
sub
add
les
xchg
aas
xor
and
pop
fadds
push
pop
popf
add
push
insb
fwait
cmp
rorb
aaa
andl
pushf
mov
ljmp
mov
repz
in
add
idiv
hlt
loopne
xchg
aas
jno
mov
test
fldl
or
adc
mov
movsb
mov
pop
xlat
add
sub
jge
push
lock
and
and
xchg
repnz
ret
inc
pop
popa
leave
adc
add
cmp
lcall
lock
loopne
aaa
xchg
add
shrl
mov
arpl
pop
push
xchg
clc
shll
cs
les
add
clc
addr16
std
iret
jo
cltd
jge
in
add
insl
inc
sbb
xchg
ret
data16
cmp
adc
aaa
inc
pop
sub
call
cmc
shr
cmpxchg
xor
xchg
xchg
or
fildll
add
sbb
pop
fs
setp
shll
loopne
cli
inc
popf
lret
cmc
ficompl
dec
push
dec
xor
loop
es
fiadds
inc
movsb
cmp
rorl
pop
sldt
loopne
push
ret
push
outsl
loop
add
add
into
mov
cmpsb
pop
xchg
iret
adc
pushf
fwait
aaa
cmp
iret
mov
push
mov
push
xor
cmp
ds
mov
iret
lods
dec
int3
add
push
rorb
fwait
loopne
or
out
lcall
push
or
adc
in
add
mov
es
sub
add
loope
cmpsb
fwait
sub
out
cmpsl
cld
int
sbb
popf
fldl
mov
cmc
sub
xlat
icebp
pop
nop
jbe
jmp
jne
das
stos
testb
add
xor
aam
aas
dec
std
inc
cmp
jns
stc
mov
add
hlt
sbb
pop
idivl
int3
add
mov
cli
stos
pop
jg
add
jno
jae
pop
xchg
aam
into
je
insl
push
push
add
ret
imul
push
or
test
add
icebp
outsb
mov
divl
cmp
add
stc
mov
mov
sahf
cmp
inc
sbb
mov
jge
ss
iret
push
and
rcll
xor
push
add
xor
inc
add
xchg
loop
int3
inc
imul
repz
ss
dec
add
adc
stos
cmp
mov
inc
push
sub
or
dec
add
jmp
jno
stos
ljmp
lds
add
ret
xchg
sbb
loope
loop
mov
xor
mov
mov
lods
in
add
jns
leave
subb
xor
jne
jg
pop
addl
into
sbb
fisubs
jb
mov
sub
pop
repnz
outsb
dec
fwait
push
xor
pop
or
jecxz
rclb
cmp
fsubrl
aaa
xor
hlt
adc
add
testl
and
icebp
and
dec
xchg
les
fdiv
test
mov
add
pop
dec
ss
rclb
sub
lret
outsl
loope
mov
ss
pusha
push
imulb
aas
xchg
clc
shrb
out
pushf
loopne
je,pn
fstps
adc
mov
ljmp
add
add
fadds
fidivs
sahf
mov
cmp
rol
out
idivb
cmp
jbe
cmp
arpl
push
add
xor
cmp
orb
inc
adcb
mov
dec
xorl
lahf
and
mov
xor
cli
add
sbb
lcall
loope
push
xor
mov
mov
mov
pop
ds
and
dec
push
inc
pop
popa
sbb
jbe
xor
aad
ja
mov
jecxz
mov
jb,pt
push
add
dec
lods
jae
movsb
bound
gs
mov
lret
push
mov
js
sub
popf
je
jmp
pusha
cmpsl
xor
jge
repnz
push
xchg
divl
add
fnstsw
ja
push
xchg
inc
lock
test
cli
pop
mov
sub
mov
mov
xor
scas
mov
add
xlat
pop
popf
dec
pop
pop
movsl
mov
mov
imul
addb
push
jl
inc
scas
call
or
and
lea
fiadds
enter
or
test
lock
dec
or
out
out
pop
notb
inc
addl
cltd
cmpsb
mov
cmp
add
rclb
pop
shlb
fistpll
mov
out
push
add
fmul
mov
or
dec
sub
sbb
push
push
das
lock
enter
sub
add
inc
sbb
inc
iret
in
adc
js
lds
and
adc
mov
in
rcr
sub
mov
jae
xlat
les
jl
cli
fbstp
stos
bswap
dec
add
sub
push
add
rol
xor
jmp
and
fwait
jae
sbbl
adc
push
shlb
add
in
sub
push
xchg
push
add
addb
push
stos
add
ljmp
jbe
add
stc
cmpsb
dec
jne
loop
push
xchg
dec
xor
bound
add
and
mov
mov
enter
pusha
mov
lret
and
xchg
xchg
test
iret
inc
scas
adc
out
inc
pushf
ret
fldl
in
xor
add
dec
pop
or
inc
lds
fld
add
outsl
inc
mov
sub
roll
mov
sub
arpl
dec
cmpsl
and
or
add
push
orb
add
mov
aaa
push
cmp
dec
jns
repz
movsl
sbb
push
aad
xor
ret
add
mov
pop
xor
inc
mov
cli
scas
cmp
add
push
xchg
xchg
and
iret
cmp
cmp
ljmp
lods
pop
cld
cli
jnp
sub
dec
clc
in
insb
add
and
jl
fnstcw
pop
pop
add
mov
pusha
mov
mov
rolb
cmp
out
cltd
adc
add
dec
stos
pop
sub
mov
loope
stos
sarb
inc
add
cld
aad
dec
xor
arpl
bound
cmp
adc
xchg
fs
adc
fldt
inc
divl
add
adc
cmpsb
pop
shrl
repnz
adc
jmp
arpl
ficoml
add
mov
inc
call
imul
dec
push
les
xchg
cmp
fmuls
mov
nop
roll
cmp
popa
out
xchg
shlb
ror
insb
das
adc
fiadds
push
mov
lcall
xor
cld
sbb
mov
cmpsb
subb
repz
add
addr16
orl
mov
sbb
dec
in
xor
fnstsw
std
je
repz
fcomps
xor
add
push
add
cmp
xor
jge
stc
and
inc
xor
and
ret
aad
cmpb
push
jae
mov
repz
stc
or
jg
sti
xor
mov
cli
xor
aas
mov
cmpsl
fidivrs
enter
cmp
inc
jo
fnstsw
data16
sub
xchg
iret
enter
jbe
icebp
fdivl
sbb
xchg
in
rol
js
inc
shll
xor
out
add
cmp
aaa
mov
sub
outsl
add
cmc
das
mov
lods
mov
clc
xchg
or
out
xchg
int
xchg
fstl
rcrl
adc
push
call
mov
stc
push
jb
in
or
test
ja
lock
adc
inc
or
fmul
mov
imul
aaa
rcrb
cmp
icebp
cmp
jbe
jb
movsl
or
lcall
add
mov
inc
and
add
pop
gs
add
inc
mov
sub
add
int3
cmc
fs
xor
es
xchg
mov
sahf
sbb
and
or
cli
jns
sbb
add
aaa
stos
ss
aas
dec
pop
mov
insl
sub
data16
ss
inc
push
arpl
mov
jb
sbb
mov
stos
xchg
imul
add
or
shll
mov
and
cmp
int3
in
add
orl
dec
xor
sbb
fdiv
add
add
mov
mov
inc
add
sub
mov
cmpsb
fmuls
pop
imul
or
dec
pop
mov
mov
push
xchg
imul
andb
pop
sbbl
jp
mov
add
cli
cmp
dec
cs
in
ret
sarb
ss
sahf
add
icebp
sub
add
outsb
pop
leave
testl
in
xchg
cwtl
out
addl
or
push
outsb
lret
rorb
je
add
xor
jbe
and
imul
and
fcmovb
add
loope
mov
sahf
lret
or
cwtl
shl
mov
repnz
std
jge
add
fdivs
xor
push
sub
xor
inc
or
mov
das
xor
pop
add
xchg
xorl
and
xchg
outsl
in
mov
lahf
and
add
pop
cmp
add
cmp
gs
or
je
add
mov
jne
cli
sub
ja
pop
lret
push
xchg
pop
inc
mov
mov
aas
clc
add
jno
bound
in
pop
add
pop
and
mov
add
cmp
push
fisttpll
sbb
popa
hlt
add
pop
jne
addl
mov
xlat
sbb
shrb
sub
lahf
in
ret
mov
lret
cmpsb
hlt
push
jae
add
test
int
clc
imul
lahf
fsubs
xchg
add
hlt
cld
nop
jns
loop
push
std
push
add
cmp
fdiv
les
dec
adc
jecxz
mov
push
fiadds
insl
xor
lcall
cld
adcb
dec
lods
pop
and
popa
int3
xlat
pop
add
push
jge
negb
inc
dec
pop
inc
mov
xor
xchg
fdivrs
std
ret
loop
pop
push
or
dec
scas
movsl
push
add
inc
sbbl
mov
rorl
inc
and
or
jo
or
inc
add
cs
adc
outsl
mov
ljmp
rorl
add
in
es
into
add
or
loope
sub
xchg
rcrl
add
xorb
sub
ljmp
push
add
sub
inc
js
push
je
fcmovnu
leave
push
xchg
sbb
mov
lods
xchg
pusha
jbe
xchg
into
and
in
out
add
pop
xchg
mov
test
out
cmpsl
fcompl
mov
out
mov
ss
or
rorb
xor
out
clc
lock
mov
add
incl
fnsave
pop
cld
xlat
jl
push
ds
and
dec
aas
cmpsb
les
test
sbb
scas
adc
mov
roll
jae
and
out
adc
fs
dec
enter
fdivrl
sub
pop
pop
mov
inc
xchg
scas
inc
push
dec
or
and
hlt
pop
or
outsb
lcall
add
fbld
mov
aaa
inc
movups
or
add
pop
fs
dec
push
adc
movb
or
and
push
pop
xor
and
fwait
in
mov
mov
push
cwtl
das
mov
movsb
pop
adc
mov
pop
pop
movsl
sbb
lahf
and
and
pop
add
pop
mov
add
insb
call
sbb
xchg
nop
and
jb
sub
add
dec
sub
aad
push
add
cmpsb
int
push
pop
xchg
ret
stos
inc
and
jne,pn
jl
in
sub
rcr
aas
das
lods
adc
sbbl
push
insb
popf
imul
dec
aad
sbbl
sbbl
and
add
mov
xor
xchg
imul
adcl
jge
fiadds
push
cltd
fmuls
add
js
imul
sub
popf
jg
xchg
insb
add
sahf
aaa
in
bound
or
hlt
push
andl
icebp
or
aas
push
add
xchg
stc
add
jg
jle
int
scas
add
jae
jecxz
loop
xchg
test
rcrb
cmp
repz
pop
jo
loopne
jl
pop
aaa
lret
jp
cmp
gs
das
mov
and
dec
mov
pusha
cmp
jno,pt
and
add
in
add
rorl
mov
push
stc
les
or
cmp
adc
shll
mov
add
repz
ret
std
push
lea
sbb
mulb
push
xor
js
push
fldt
loopne
mov
add
out
mov
add
shl
inc
push
push
icebp
bound
adc
adc
jle
jecxz
in
jbe
neg
inc
fdivrl
fadd
jne
mov
rorb
popa
sub
add
xor
arpl
push
adc
push
fistpl
ss
les
or
xchg
mov
dec
out
rcrb
push
movsl
out
mov
lds
scas
add
jo
ffreep
xor
jg
imul
jno
fists
and
lods
add
xorb
xchg
dec
xor
xlat
xchg
add
loopne
adc
outsb
dec
pop
or
and
jae
addb
sbb
mov
and
lods
add
xchg
and
not
in
pop
ljmp
add
stos
or
insb
dec
xchg
pop
and
rolb
outsl
pusha
pop
add
addr16
sub
lret
enter
mov
or
ss
loop
sbb
push
ja
mov
pusha
jne
shl
xorl
and
sbb
push
or
decb
adc
sbb
scas
adc
mov
jle
cmc
pop
jp
mov
rcl
adc
cmp
inc
mov
add
fidivl
pop
popf
sub
mov
mov
jb
mov
sub
xor
icebp
add
inc
jecxz
add
sub
xchg
mov
add
ret
negl
shlb
clc
dec
ret
mov
cmp
sbb
xlat
or
out
jne
fisubrs
lods
frstor
dec
xchg
add
mov
adc
and
adc
mov
mov
mov
jmp
repnz
xchg
cmp
mov
cmp
mov
cmp
movsb
mov
sbb
pop
leave
xor
lret
inc
push
jo
sbb
rcrl
sbb
xor
sbb
pop
push
pop
mov
add
or
add
jo
movsb
xchg
imul
cmp
mov
data16
xorb
adc
sarb
mov
inc
or
cmpsl
jecxz
cmp
out
xor
in
add
dec
cli
sbb
mov
rolb
inc
imul
adc
jge
ficoms
add
pop
mov
out
mov
mov
fwait
add
push
lcall
push
and
jle
fstps
fists
mov
test
mov
dec
data16
adc
test
cwtl
jae
lods
mov
xchg
pop
ret
pop
stos
les
inc
movsl
add
ficoms
and
lods
das
int3
push
rcll
and
loop
cmp
inc
pop
aam
push
inc
repz
add
jle
mov
adc
shlb
push
cwtl
mov
push
inc
mov
ljmp
or
cmp
icebp
mov
lds
addb
stos
rorl
xor
scas
icebp
push
xor
dec
rorl
push
aam
and
pop
cmc
fldl
xchg
mov
adc
push
pusha
cmpsl
add
jg
push
aas
mov
adc
fdivl
add
xlat
lock
or
in
jno
imul
cmp
cmovs
rcr
or
rcrl
adc
and
xor
ret
pop
mov
mov
or
sbbl
dec
add
shlb
mov
shrl
mov
daa
xchg
add
test
bound
js
je
dec
jae
pop
add
or
mov
add
lcall
cltd
test
sub
fcmovnb
data16
lock
std
add
pushf
add
add
fwait
mov
push
adc
ljmp
sti
lret
add
dec
in
push
pusha
jl
pop
pop
xchg
sbb
xor
push
loop
shll
std
fnsave
pop
bound
add
jb
pusha
or
iret
leave
push
rolb
add
jae
aad
inc
ljmp
lea
cltd
aaa
add
cmp
push
or
push
cmp
data16
leave
call
add
pop
loop
add
nop
jge
xchg
popf
mov
outsb
rol
lcall
add
mov
call
jbe,pn
js
push
xlat
out
lods
xchg
inc
mov
xchg
inc
add
stos
popa
ffreep
inc
into
adc
sbbl
cwtl
add
aaa
xchg
and
mov
add
insl
sbb
xor
inc
inc
and
shll
nop
enter
popa
or
add
lea
push
pop
loop
push
inc
cmpb
adc
aad
or
xor
lods
popf
and
inc
shl
pop
sti
js
cmp
sbb
add
and
add
and
bound
fs
movsb
data16
inc
rorb
test
les
out
cmp
push
dec
and
and
jno
mov
jb
les
xor
scas
add
cmp
mov
push
push
adc
mov
adc
mov
into
and
out
sbb
aaa
rol
or
dec
icebp
roll
cmp
jge
enter
mov
les
mov
enter
adc
loope
xor
jnp
loop
ficoml
ret
repz
inc
xor
lea
jnp
aas
or
test
pop
movsl
and
imul
xor
add
sub
jge
add
mov
test
call
push
add
or
sub
cmc
add
je
scas
in
jmp
rcr
adc
ret
loop
mulb
daa
and
xor
in
push
inc
pusha
add
movb
adc
jnp
shrb
or
and
dec
rcl
sbb
pusha
cmc
popf
jae
mov
or
addb
pop
cmp
lahf
add
mov
movsb
out
repnz
mov
sahf
inc
push
ret
push
and
outsl
and
jno
add
jle
or
or
adc
cmpsb
aaa
rol
outsb
mov
movsb
iret
lock
mov
lods
roll
jb
imul
fnsave
inc
mov
inc
jg
flds
arpl
call
sub
lea
or
test
xchg
leave
sub
pop
dec
test
xor
add
pop
or
data16
nop
adc
mov
aam
mov
sarb
roll
out
add
aas
push
adc
xchg
mov
add
mov
sbb
add
pop
scas
cmp
cmp
cmp
add
sub
or
mov
punpckhdq
or
dec
add
sti
fldenv
jge
sub
mov
aaa
shrb
xchg
mov
test
push
mov
mov
mov
pushf
xchg
or
filds
inc
xchg
inc
data16
xchg
push
js
bound
int3
aaa
nop
dec
lret
sarl
xor
popa
inc
mov
xchg
add
pand
jg
xchg
and
bound
shrb
push
push
sub
jno
push
push
add
pop
dec
add
jle
fldl
rolb
push
call
aaa
add
mov
adc
out
mov
inc
cmp
push
sub
cmc
std
add
jg
adc
repz
mov
lds
inc
or
insl
mov
ret
mov
adc
mov
and
sub
movsb
cmp
mov
sub
add
fs
leave
lcall
cld
push
movsl
fadd
xlat
cltd
mov
int
ss
add
mov
lret
cmpsb
mov
add
adc
pop
push
inc
addl
test
aad
adc
pop
add
sub
aam
dec
sub
and
push
mov
jae
subb
cmp
addl
pop
or
out
mov
add
mull
rol
cmpsb
xor
cs
add
adc
dec
hlt
push
fiaddl
mov
mov
shl
pop
sti
push
inc
and
or
arpl
xchg
mov
dec
add
cmp
rep
rolb
sbb
pushfw
ja
add
sub
inc
add
icebp
ljmp
cmp
loope
int
cmp
lods
and
lahf
sub
jl
in
xchg
push
or
addr16
pop
aas
pop
movsl
insb
mov
fistl
loop
cmp
add
jb
imull
orb
adc
aas
sbb
jle
jne,pn
cmp
aaa
add
pusha
std
xor
push
icebp
push
dec
mov
inc
dec
test
cmp
flds
in
ljmp
jmp
jns
ret
ret
loope
cmp
sub
sarb
xchg
adc
sbb
test
add
adc
pop
pop
jg
add
lods
inc
cmp
add
or
lcall
nop
rcrl
push
fldl
and
push
aam
mov
and
notb
repnz
nop
outsb
mov
mov
xchg
and
dec
mov
cmp
into
inc
xlat
and
inc
cmp
cmp
jns
ror
and
adc
add
cmpl
out
dec
mov
aad
mov
stos
dec
popl
in
repnz
call
rcll
add
pop
pop
jecxz
xchg
scas
js
or
pop
push
jl
movsl
ret
xchg
cmp
sbb
cmc
roll
ds
pushl
lods
filds
jmp
call
ret
test
cmp
mov
cmp
inc
out
sbb
mov
mov
xor
push
add
sbb
imul
add
add
push
sbbl
xchg
push
cmc
outsb
cmp
test
mov
push
shlb
or
xchg
add
cmpl
add
add
inc
jl
and
sbb
int3
dec
and
cs
add
out
inc
add
out
dec
cltd
xchg
addb
imul
jg
adc
adc
adc
pop
les
adc
aaa
push
nop
ljmp
dec
int3
mov
pop
jmp
mov
movsl
add
adc
sub
call
ss
or
jge
lock
sbb
shr
mov
test
mov
pop
mov
inc
adc
jo
cmp
add
jge
cmp
ret
faddl
stc
popa
shr
scas
fwait
xor
xor
cltd
and
sahf
push
enter
rolb
xlat
lret
das
sbb
pop
insb
mov
cltd
std
shl
jae
sbb
add
add
popf
lock
mov
dec
sbbl
and
scas
pop
pop
sub
orl
push
out
xor
cmp
adc
xor
or
subb
adc
hlt
mov
lret
in
jmp
fisubs
xchg
pop
sbb
add
pop
lock
mov
and
inc
add
sahf
xchg
sbb
insb
jecxz,pt
cs
add
mov
lret
xor
faddl
add
adc
in
in
add
aas
lea
xchg
mov
test
jp
jno
add
inc
je
or
push
cmp
dec
ret
mov
adcl
adc
es
scas
ss
out
add
mov
dec
inc
xchg
and
into
ret
xchg
jns
inc
fisubs
add
mov
add
push
xchg
mov
jl
mov
gs
xchg
xor
enter
push
inc
mov
iret
inc
and
push
add
cmpsb
lods
xor
add
ljmp
lea
xor
cmp
testl
xor
pop
sbb
jge
adc
fidivs
add
mov
add
jno
arpl
adc
outsl
add
inc
movsl
xchg
ret
jecxz
test
fnsave
mov
mov
jmp
and
xchg
add
into
test
xlat
leave
movsb
push
popf
call
in
fs
xor
xlat
sbb
mov
add
push
jp
add
sbb
mov
push
stos
mov
aad
ret
jecxz
add
inc
dec
xor
imul
add
movsl
xchg
inc
jge
hlt
popa
pushf
add
ljmp
cmpsb
sub
pop
addr16
sub
add
out
mov
xchg
daa
add
add
cmp
dec
mov
lods
out
sub
cmp
cmp
push
pop
mov
aaa
sub
mov
xor
push
rcrl
dec
repnz
jae
popf
jb
daa
xorb
shrl
push
push
cmp
cwtl
xchg
shrd
repz
pop
mov
mov
xor
adc
adc
sub
ds
pop
jo
mov
add
mov
jne
add
or
jnp
sbb
ljmp
loope
xchg
testl
bound
into
fldl2t
mov
add
mov
mov
cmp
ds
imul
and
sub
dec
xchg
push
and
add
rolb
and
fdivrl
test
or
inc
mov
xor
call
int3
ds
add
cmpsb
cwtl
loop
pop
cltd
fcmovu
xchg
push
add
lea
jae
mov
andb
add
inc
mov
adc
push
jno
add
sbb
adc
arpl
and
and
mov
pop
and
cmpsl
nop
cmp
cmc
xor
jno
lods
shlb
inc
imul
mov
sub
nop
xchg
sub
cwtl
sbbl
push
or
lcall
sbb
add
mov
dec
mov
and
mov
rorb
jbe
mov
cmp
add
mov
ja
in
pop
mov
sub
add
dec
jmp
add
insb
fldcw
js
lock
lds
mov
lret
fbstp
cmp
xlat
adc
arpl
ficompl
push
jae
mov
or
les
add
cs
mov
jl
loope
mov
in
or
pop
push
dec
loop
fdivs
fisubrl
cs
xor
sbb
or
mul
or
xor
dec
outsl
cmp
sub
movsb
mov
xchg
lahf
test
push
pushf
jecxz
enter
dec
aad
xchg
sbb
mov
xchg
out
add
lods
test
arpl
add
into
push
add
cmpb
add
dec
in
cli
adc
xor
add
out
bound
adc
push
add
clc
lods
xor
daa
mov
inc
jnp
mov
mov
push
add
mov
dec
popf
rolb
mov
leave
cmp
sub
cmpsl
shlb
cmp
sbb
out
add
loopne
push
xchg
adc
xor
dec
add
inc
daa
aam
rcll
mov
fsubs
add
lcall
push
rclb
sub
add
gs
add
pop
fsubp
lcall
jp
popf
outsl
lret
inc
add
mov
xchg
pop
add
pop
iret
adc
mov
adc
mov
xor
xchg
bound
in
push
dec
xor
add
lahf
cltd
adc
mov
aad
mov
inc
push
push
add
cwtl
xchg
push
dec
jb
and
pusha
in
xchg
xor
fcoms
lret
and
add
xchg
jg
pop
xor
in
jecxz
roll
inc
ret
popa
mov
repz
les
pop
pop
inc
cs
push
lahf
testb
jge
cmp
and
xor
orb
push
sahf
pop
shrb
rcl
nop
aas
pusha
icebp
push
fdivrl
mov
add
clc
int
call
inc
cld
stos
nop
mov
daa
add
sub
neg
dec
rcrl
loope
rorl
and
lcall
sti
imul
aam
pop
mov
shlb
xor
push
pop
xchg
push
add
mov
mov
jne
scas
xchg
out
add
aam
pop
xor
fwait
add
shrl
fidivl
pusha
leave
pop
rcr
dec
and
mov
add
add
mov
movsb
popf
jae
fildl
das
xchg
sahf
fsts
xor
inc
test
cmpsb
sbb
into
xchg
ljmp
adc
xor
add
xor
cmp
fisubrs
add
outsb
add
mov
pop
ds
sbb
psllq
lret
jle
sbb
or
aaa
push
das
neg
push
addl
or
sub
and
add
xor
loopne
pop
cltd
adc
inc
nop
sbb
mov
sti
in
in
scas
push
lds
jle
pop
and
test
pop
jl
adc
or
or
add
or
jno
std
add
insl
xor
out
fldcw
add
scas
outsb
fwait
add
sbb
mov
push
dec
pop
sub
mov
jb
pop
xorl
push
sub
or
imul
cmp
jns
push
sbb
mov
fdivs
lock
sub
aaa
imull
sbb
ror
lret
dec
pop
and
mov
push
dec
xchg
mov
aaa
xchg
add
xor
mov
sub
lods
fsubs
scas
nop
mov
cmp
js
cmp
push
aad
jnp
icebp
xchg
mov
cmp
push
cmp
cs
sahf
add
ljmp
pop
cld
faddl
or
incb
xor
daa
inc
xorl
and
jno
add
aas
ja
pusha
out
xchg
leave
cmpsb
testb
mov
cmp
fldl
cld
mov
out
xor
dec
test
aam
aam
cmp
cmp
loop
repnz
mov
mov
adc
push
loopne
enter
xchg
mov
xchg
add
insb
mov
adc
sahf
add
movsb
faddp
jns
push
add
mov
in
push
pop
popf
inc
xchg
push
push
fwait
mov
aad
int
and
push
call
inc
mov
mov
jp
fstl
in
sub
jmp
rolb
sub
add
xlat
sbb
sub
cmp
std
ret
dec
push
pop
out
cld
cmc
ss
stos
cwtl
jo
lret
and
and
mov
pop
mov
inc
push
iret
push
xchg
lret
adc
push
and
jne
add
andl
cmp
add
imul
xor
mov
loop
mov
stc
sbb
cmp
outsb
bound
lret
push
push
iret
outsl
or
cmc
inc
jmp
mov
aam
lds
and
add
call
mov
popa
add
clc
in
mov
add
inc
pusha
cmp
sahf
mov
inc
mov
sub
jmp
or
cmpsb
in
pop
lret
das
imul
inc
sti
nop
pop
and
aaa
mov
ret
lods
add
lret
or
mov
add
xor
movsb
push
sub
push
xchg
push
sub
add
pop
rorl
mov
and
stos
shll
aas
ror
movsl
mov
inc
ja
ljmp
out
xorb
cmp
inc
sbb
or
in
fidivs
subb
out
pusha
jl
sbb
pop
incl
jno
mov
cmp
pop
iret
mov
ds
add
mov
push
outsl
jb
out
add
jmp
iret
push
insl
dec
xchg
imul
inc
int
cmpsb
ds
cs
loope
gs
js
mov
lahf
and
femms
sub
adc
mov
jmp
xchg
insl
imul
addr16
mov
movsb
jne
xchg
shrb
and
push
jp
mov
out
repnz
push
xchg
scas
ja
push
cmovo
ret
pop
ss
xchg
add
add
in
test
jp
cmpsl
xchg
mov
je
lret
jae
sbb
sub
sub
in
clc
bound
mov
sub
mov
jmp
jmp
test
inc
inc
xorl
cli
aaa
add
jbe
adc
jge
in
popf
mov
add
inc
sar
adc
cmp
inc
mov
mov
dec
leave
add
outsl
hlt
fiadds
inc
rolb
cs
jle
add
add
xchg
dec
in
xchg
adc
inc
fwait
mov
mov
add
sub
push
and
loopne
xchg
stos
add
jo
mov
arpl
cs
push
add
push
xor
out
sbb
jg
adc
xor
xor
jmp
sbb
mov
xor
cmpl
mov
je
add
sbb
jno
ret
out
dec
cmp
cs
je
ret
adc
orl
mov
xchg
addb
mov
lret
push
or
add
adc
mov
add
or
lret
roll
and
cmp
xor
rolb
jae
dec
sub
testl
jecxz
mov
inc
add
fs
dec
imul
addl
setbe
mov
mov
xchg
jg
jbe
sarl
shrb
push
pop
loop
and
sbb
inc
and
jb
repz
xor
testb
xlat
mov
sbb
sbb
xchg
addl
lds
int
push
mov
hlt
outsb
adc
jl
sub
add
rcpps
add
dec
in
mov
add
fisubrs
push
add
loop
cmc
add
lea
daa
inc
filds
imul
cwtl
ds
sbbb
sbb
sti
sbb
mov
or
add
cltd
sub
adc
pusha
rcr
jge
inc
or
cltd
add
outsb
push
add
inc
push
mov
adc
mov
push
xchg
jmp
in
ret
xor
or
pop
jmp
rorb
incl
sub
lret
ljmp
jmp
mov
repnz
and
mov
push
and
mov
xchg
push
sub
cld
les
cmp
mov
fstl
ret
and
cmpsl
lds
inc
mov
ror
xchg
pusha
int
sub
gs
add
ror
ds
fwait
add
movsb
cwtl
xor
rcl
sub
test
stos
xchg
mov
lret
pop
mov
rcl
xor
scas
and
shrl
cmp
mov
xor
cs
out
scas
pop
cmp
dec
mov
in
incl
jb
dec
push
xchg
xor
push
cli
test
imul
fsts
inc
faddp
add
scas
or
ljmp
sti
fisttpl
sub
push
bound
adc
inc
add
cmp
clc
add
adc
add
jl
rolb
pop
or
fwait
mov
cmp
fadds
push
add
xor
insb
idiv
add
nop
jge
push
jbe
inc
mov
int3
aas
cmc
adc
scas
imul
sbb
mov
lret
hlt
jo
jno
xlat
lock
push
std
add
cmpsb
cmp
mov
lret
ja
cs
mov
outsl
test
hlt
inc
mov
add
lods
inc
leave
dec
inc
push
and
stc
or
add
push
in
mov
push
pop
mov
push
xchg
stc
pop
and
pop
mov
push
sbb
imul
stos
shll
aam
xchg
rorl
mov
cmp
ret
adc
pop
lods
jae
add
jb
incb
in
leave
mov
insb
scas
lret
ret
push
xchg
cmp
add
xchg
imull
adc
lods
push
dec
add
shlb
jl
into
dec
jmp
fiaddl
dec
inc
imul
pop
pop
mov
sahf
iret
push
ret
ja
cmp
mov
scas
ret
sbb
popa
mov
movsb
or
shl
add
add
roll
jge
fnstsw
addl
lret
mov
adc
add
icebp
out
add
inc
pop
shr
outsb
flds
adc
loop
es
mov
add
adc
pop
add
mov
xchg
add
mov
into
ja
jle
add
and
cltd
adc
dec
cmp
mov
mov
test
inc
rorl
inc
pop
and
jns
xor
xchg
sub
inc
js
xchg
jae
into
or
rep
pop
mov
sbb
and
mov
jge
rolb
test
xchg
mov
cmp
add
lcall
shlb
clc
cs
cmp
ja
lods
mov
iret
or
inc
repnz
sbbl
rcll
je
xor
dec
testb
pop
dec
jmp
cltd
fidivrs
loopne
mov
inc
ds
data16
lock
inc
cltd
mov
lret
cmp
mov
jne
call
sub
sub
inc
mov
inc
jns
arpl
sbb
push
add
clts
cmc
pop
iret
cld
fs
loopne
imul
or
mov
rolb
sub
bound
lock
mov
add
cwtl
cmc
mov
add
jl
inc
lods
outsl
roll
mov
mov
cmp
sbb
add
fwait
iret
pop
jmp
jmp
in
sbb
dec
cwtl
test
push
insb
xlat
outsb
ret
shrl
rcl
mov
aam
jne
mov
xchg
iret
add
mov
and
xchg
inc
dec
pop
int
add
outsb
xor
inc
adc
lret
mov
push
mov
imul
dec
cltd
inc
cmp
sbb
jbe
cmpsl
xchg
mov
ds
pushf
sub
lret
pop
int3
jp
test
sub
inc
movl
push
push
sub
sub
nop
in
into
dec
inc
adc
mov
out
cmp
test
jno
ficompl
bndldx
jae
sahf
dec
shrl
cli
mov
incl
ds
rclb
data16
add
rol
mov
and
hlt
jp
and
leave
sahf
and
mov
stos
and
inc
arpl
lock
mov
push
mov
mov
int
filds
or
and
add
ss
xlat
repnz
in
jb
pop
in
push
cmc
inc
inc
mov
aaa
insl
dec
or
ljmp
push
fcomps
test
scas
mov
adc
and
add
aas
push
dec
cli
add
in
gs
cmpsl
ret
mov
xor
lcall
sahf
jns
pushf
mov
jp
xchg
cli
and
mov
add
daa
pop
insb
dec
in
add
mov
fsubs
mov
and
cmp
lds
mov
mov
add
pop
rcrb
sbb
cmp
ss
add
sub
inc
adc
mov
dec
pusha
ret
sbb
insl
xor
nop
jne
dec
imul
leave
cmp
jnp
push
inc
push
add
mov
sahf
lahf
cmp
subl
adc
stos
push
add
cli
pop
dec
jnp
movsb
add
jno
popl
lsl
xchg
stos
imul
push
out
enter
ret
outsl
mov
push
xor
pop
sbb
mov
jo
stos
and
jae
add
mov
cli
and
and
add
push
insb
xchg
je
subl
repz
xchg
push
jecxz
mov
cmp
movsb
shll
outsb
fdivs
and
add
aad
cli
imul
sahf
mov
ret
cs
lods
push
xor
sbb
and
repz
mov
loop
xchg
sub
sub
dec
or
cmpsb
out
ret
push
and
cmp
rcl
imul
int3
test
or
add
mov
fimuls
mov
pop
add
dec
ds
adc
inc
adc
xor
xchg
sbb
inc
push
jmp
loopne
cmp
add
fwait
xor
add
lahf
sarb
sbb
pop
mov
es
xchg
notl
xor
push
add
js
sub
in
lret
add
jno
xchg
rorb
int
mov
inc
addr16
push
imul
add
movsb
or
add
and
fstps
cmp
pop
jae
inc
mov
in
mov
ret
jle
and
xor
rcrl
leave
std
cmp
mov
and
add
daa
jne
mov
or
sbb
xor
add
jno
testb
scas
xor
into
push
call
xchg
stos
sub
sub
and
add
rcll
or
ret
dec
jns
shl
jg
or
cmp
xor
sbb
pop
bound
xchg
in
adc
popf
jmp
shl
jp
in
and
gs
add
pop
decb
mov
mov
lcall
leave
xor
pop
xor
xorl
or
pop
add
pop
cwtl
sahf
xchg
jns
shll
scas
loopne
add
adc
add
and
nop
add
add
adc
push
jno,pn
sub
add
int3
in
add
mov
sub
cwtl
lods
cmp
int
rol
xor
add
mov
adc
ss
leave
cmc
pop
push
shr
ficoml
and
fcoml
mov
and
ljmp
adc
decb
cmpsl
mov
movsb
rcr
mov
cld
add
nop
ds
pop
jg
pop
inc
mov
test
push
mov
add
sub
int
dec
jnp
sbbl
ret
outsb
dec
mov
jno
and
sub
inc
add
lcall
sbb
and
sub
add
sahf
and
jge
dec
inc
mov
jnp
cmp
stos
leave
mov
xchg
and
push
adc
inc
fisubrs
add
pop
sbb
decl
jl
out
fyl2x
stc
pop
fdivrs
xchg
add
scas
push
inc
bound
test
and
popa
and
pushf
push
xchg
lret
jne
add
cmp
int3
ret
mov
inc
sub
mov
pop
xor
in
faddl
stc
imul
jbe
adc
cmp
aaa
mov
std
es
add
cs
adcl
jmp
sbb
clc
aad
cli
mov
push
add
xor
ret
push
inc
add
jecxz
sub
aam
data16
in
ja
fldenv
fdivl
cmp
add
add
mov
mov
mov
add
jg
add
xchg
loope
jl
xchg
or
add
int3
or
pop
add
nop
stos
add
addr16
lret
shll
sbb
push
cmpsl
pop
fadds
mov
xor
xor
jle
cmpsb
xor
roll
dec
rcr
mov
dec
mov
test
add
pop
xchg
int
cmp
in
jmp
out
push
outsl
cmp
ja
mov
or
or
test
jnp
dec
add
pop
test
das
add
cs
divb
loope
loopne
insl
popf
cmp
add
adc
rol
sarl
xor
imul
sbb
stos
sbb
sub
and
mov
cwtl
inc
aam
or
fimull
inc
jo
mov
xor
push
or
or
inc
add
repz
sysret
mulb
jmp
jmp
jl
pop
lahf
jno
les
rcr
sbb
int3
sub
xchg
bound
in
dec
loopne
or
add
sbb
fldl
add
sub
out
push
and
ret
push
xchg
xchg
sub
mov
add
mov
xlat
pop
push
insb
xor
ss
lds
add
loope
and
pushf
cwtl
data16
out
pop
fldenv
ret
push
ljmp
cmp
jmp
loope
sbb
pop
pop
movsl
lds
cmpl
push
movsb
add
loope
add
jmp
divl
cmpsl
and
fcmovne
or
bound
lahf
es
rcll
jnp
rorb
xchg
and
data16
add
inc
stc
test
add
cmc
pop
add
add
scas
xor
call
std
loope
push
es
enter
int
dec
add
pop
inc
addr16
ret
and
pop
or
cmp
pop
popa
pop
push
and
cmp
sbb
gs
mov
mov
add
daa
cld
out
iret
sbb
mov
cwtl
addl
xchg
cmc
jns
stc
inc
dec
jl
cmp
repz
pop
lret
add
es
cmp
mov
sub
in
sti
data16
sub
and
adc
pop
ficompl
jno
popf
sbb
add
shrb
mov
add
jbe
in
xchg
lods
jns
das
pop
mov
pop
pop
xchg
sub
addb
cmp
inc
or
rol
push
out
movsb
mov
or
push
dec
dec
shll
shrb
mov
jae
add
xchg
ja
stos
repnz
and
sub
gs
xor
mov
dec
icebp
addb
popa
flds
cli
mov
dec
movsb
or
add
xchg
xchg
xchg
and
mov
mov
fstpl
jae
loopne
jmp
sbb
xor
test
jne
mov
add
lret
mov
cmpsl
cwtl
das
sbb
aas
xor
outsb
pop
or
out
mov
mov
add
pop
nop
ja
mov
sbb
stos
popf
ror
inc
std
cmp
add
push
adc
mov
loop
push
mov
in
fs
and
sbb
add
jmp
jmp
ds
mov
scas
pop
sbb
pop
lods
nop
pop
lds
jnp
add
push
mov
jo
leave
mov
test
subb
mov
andb
ffree
jne
shll
sub
pusha
add
push
ljmp
xor
jge
or
cwtl
add
push
insb
lock
data16
cmp
inc
jmp
and
and
les
rorl
xor
xchg
add
pop
adc
cmc
mov
rclb
push
ret
xor
pop
es
in
lahf
add
push
lret
add
pop
mov
xchg
fldl
cmp
addb
pusha
jns
inc
cmp
mov
test
lahf
pop
nop
add
and
dec
out
jge
scas
ret
in
fimuls
in
add
fstpl
push
lea
leave
lahf
aaa
in
mov
test
insb
addr16
fnsave
pop
add
mov
sbbl
pop
jg
mov
pop
insl
in
bound
cmp
sbb
pop
and
adc
cmp
mov
mov
sbb
mov
mov
lock
and
fldl
ret
inc
mov
or
arpl
sti
into
add
cld
fs
popa
inc
adc
insl
mov
dec
sub
or
and
add
test
loope
adc
leave
pop
int3
sub
inc
dec
movsb
rolb
sub
and
test
cvtps2pd
cltd
fs
dec
add
aaa
ret
jae
movb
ficomps
mov
cmp
stos
daa
cmp
cld
and
dec
sub
add
push
jge
mov
and
mov
sbb
add
xlat
je
dec
add
pop
and
mov
add
xlat
fdivrs
mov
push
or
out
or
and
int3
mov
ret
add
dec
bound
in
add
lea
rol
sbb
and
sub
and
movsb
pop
xchg
lret
inc
add
sbb
xchg
add
inc
das
filds
fdivrl
sahf
in
lret
jne
add
rcl
lock
std
and
adc
add
out
xchg
ljmp
fwait
loop
jo
push
addl
cmpsb
arpl
mov
lock
adc
fadds
push
inc
xchg
fwait
repz
sbb
ja
adc
inc
pop
mov
add
xchg
xor
mov
test
sarb
ljmp
pop
scas
sbb
cmc
sbbb
xor
inc
icebp
mov
jae
pop
cmp
add
icebp
out
lea
and
dec
or
xchg
add
mov
mov
mov
add
sbb
add
inc
inc
add
push
and
inc
add
aad
cmc
cmp
jnp
sub
adc
test
add
or
loopne
lahf
add
sub
nop
inc
fs
pop
cs
lret
clc
push
add
cli
push
outsb
mov
shr
sbb
out
xchg
xor
mov
mov
jne
mov
xchg
insb
dec
fimull
in
xor
mov
and
and
adcl
inc
push
xor
dec
inc
pop
or
loop
add
and
sub
or
mov
insl
mov
add
jg
gs
rorb
mov
xor
xchg
add
and
cmp
mov
dec
outsl
data16
and
popf
roll
fwait
mov
mov
push
rcr
js
dec
sbb
imul
out
inc
test
add
jns
mov
popa
mov
add
fcomi
jmp
sbb
xor
dec
popa
inc
add
mov
out
hlt
push
inc
repnz
mov
inc
mov
nop
jnp
xlat
scas
ds
add
push
aaa
jle
in
inc
mov
aam
xor
rol
mov
fnstenv
clc
add
dec
cs
outsl
xchg
add
std
mov
pop
movsb
incl
dec
paddsb
push
dec
pop
mov
cmp
sarl
and
inc
dec
or
addr16
popa
inc
test
call
xor
rol
sbb
adc
xchg
insb
movsb
stc
mov
adc
lods
les
mov
ret
dec
sbb
or
sub
imul
clc
sub
add
mov
add
mov
loope
jae
add
cmp
lds
xchg
add
arpl
cmpsl
push
dec
lahf
popa
cmp
add
rcl
aad
pop
xchg
in
insl
jns
inc
ret
sbb
cli
scas
rclb
sbb
jp
and
ljmp
add
cmp
rcrl
add
out
jnp
pop
mov
sub
pop
sbb
and
lea
jo
lret
mull
jmp
cld
leave
mov
shlb
loopne
mov
xchg
movb
cmp
add
sub
test
popf
lahf
jnp
adc
stc
out
test
adc
jns
and
mov
inc
testb
repz
xchg
mov
out
add
pop
loopne
add
fistl
dec
inc
fsts
add
inc
out
shlb
add
repz
mov
dec
shl
dec
sub
add
jo
lea
jmp
inc
push
cs
daa
dec
pop
mov
popl
lea
jo
or
mov
cli
aaa
jne
cmp
cmp
or
jmp
and
mov
push
loop
mov
clc
mov
pop
imul
dec
pushf
inc
roll
in
stos
add
xor
aam
clc
add
je
pop
pop
dec
ljmp
adc
mov
lock
outsb
pop
fists
push
mov
add
cmp
xchg
je
shl
and
popa
jae
cmp
sbb
ja
adc
xor
loope
mov
cmp
and
sbb
nop
fdivrl
repnz
push
and
cld
jl
inc
mov
dec
fists
and
aam
movsb
hlt
xchg
call
adc
dec
adc
push
sub
and
adc
flds
cltd
aad
pushf
data16
xchg
adc
fcmove
adc
cmp
mov
mov
or
adc
lea
dec
addb
fisubrs
add
jg
add
sbb
add
or
mov
adc
xor
insb
xor
mov
sub
aas
sub
cmp
push
pop
cmp
fiaddl
inc
leave
enter
jne
add
ss
or
jns
cwtl
add
sti
loopne
mov
add
shr
dec
inc
notb
insb
sbb
jle
mov
inc
lahf
mov
shrb
out
cmpsl
push
add
push
or
add
cli
int
and
aam
dec
cld
mov
or
loop
aaa
xchg
ror
scas
xor
adc
and
rol
stos
arpl
push
push
out
mov
sarl
jae
pop
push
add
adc
cli
mov
add
mov
add
popf
movsl
gs
cwtl
jno
loope
fsts
loopne
xor
and
push
inc
arpl
mov
or
lcall
fsubp
testb
push
mov
stc
push
sbb
jmp
xor
pop
pop
ret
es
ss
rcl
sub
in
adc
and
clc
jmp
inc
pushl
icebp
adc
int3
scas
add
push
cmp
loope
mov
and
stc
inc
xor
out
pop
lods
adc
pop
outsb
arpl
xchg
pop
jle
movsl
leave
cmp
push
fstpt
pop
add
inc
mov
loope
andb
popa
fs
push
cmp
sbb
test
add
loopne
in
or
add
ljmp
xlat
in
leave
stos
cmc
sbb
and
add
jge
lahf
pop
and
add
dec
xchg
js
mov
mov
push
sub
test
add
or
bound
inc
inc
cmp
jle
ret
ds
add
mov
call
mov
cld
add
add
xchg
addl
inc
arpl
cltd
lea
cwtl
fs
mov
xor
fcoms
push
ret
rcll
js
and
fmull
das
or
cmp
or
and
sets
clc
xlat
xchg
scas
cli
jmp
out
int3
cmp
jl
add
jne
shl
or
sub
int3
push
roll
outsl
mov
push
rcrb
loopne
loop
sub
lods
inc
inc
push
out
jae
lea
push
clc
loope
inc
mov
push
add
sbb
imul
incb
mov
or
popf
xor
mov
dec
adc
pusha
add
add
mov
divb
jecxz
je
add
pusha
loop
movsl
icebp
cwtl
add
xchg
jge
ret
clc
call
test
in
mov
mov
dec
scas
mov
das
add
and
mov
mov
add
sbb
fbstp
subb
in
mov
jo
daa
cmp
mov
push
adcl
add
xlat
ss
add
jle
shlb
nop
adc
jp
add
ret
pop
xchg
inc
outsl
or
push
pop
jo
orl
and
cmp
xor
adc
add
mov
jp
adc
in
and
test
rorl
std
loope
negb
popl
gs
mov
jnp
ljmp
into
add
fidivl
shr
stc
filds
mov
adc
lret
push
rcrb
lods
pop
icebp
cmp
jb
mov
jge
testb
lock
in
mov
mov
cmp
mov
push
sub
cmp
and
sub
cs
test
adc
js
cmp
into
cmp
mov
outsl
xchg
pmaddwd
sub
sti
cmpsb
pop
sbbl
jecxz
sub
add
sub
push
jno
add
jge
mov
add
icebp
movsl
xor
rolb
shrb
ljmp
pushf
lods
cwtl
leave
loop
jno
dec
sub
xchg
adc
add
dec
sbb
out
push
add
push
or
or
add
aad
inc
bound
in
inc
inc
xor
cmp
subb
jbe
mov
pop
push
les
fcoml
fs
insb
xchg
add
imul
cmp
test
aas
add
insb
mov
add
stos
push
nop
fisttpll
stc
adc
mov
mov
adc
mov
ret
add
xlat
xor
mov
jne
xorb
jno
mov
jb
mov
cmp
aam
in
lock
and
sub
movsb
int
loop
repz
dec
test
inc
cmp
ret
insl
gs
imul
cmp
je
pop
mov
add
sbb
mov
into
movsl
adc
jp
jecxz
jmp
es
add
xchg
ss
add
push
pop
ret
jle
sub
mov
add
imul
inc
pop
and
pop
sbb
cmpsl
add
add
das
lods
in
aam
call
divb
lret
sub
push
pop
mov
pop
sahf
nop
xchg
movsl
add
fcoml
leave
shlb
and
loop
cmp
insb
roll
aad
orl
add
xchg
push
fiadds
xchg
inc
jnp
jp
repz
pop
rorb
lds
inc
sub
push
movl
xor
mov
enter
xor
push
mov
dec
imul
add
xor
pop
and
rolb
pusha
call
xor
push
test
jle
mov
push
stos
add
jns
ds
and
xor
or
add
into
cmp
sbb
out
sub
mov
mov
xchg
rcrl
out
mov
dec
stos
add
testb
enter
cmp
sbb
andb
jg
lret
cmp
add
lahf
inc
leave
sbb
add
cwtl
repz
mov
sti
inc
sbb
rcr
push
adc
jb
sub
lods
and
cmc
lcall
in
inc
mov
add
hlt
je
aad
add
mov
bound
js
xor
ret
xchg
out
pop
and
icebp
ds
adc
pop
jp
push
sbb
xchg
cs
jbe
or
xor
inc
sahf
adc
sub
xor
add
lcall
and
inc
cmp
testl
mov
xchg
and
adc
jmp
push
add
mov
jmp
aad
mov
mov
test
adc
call
sbb
or
jmp
sbb
mov
cmp
popf
add
aam
sub
xchg
ret
mov
lahf
and
loopne
inc
ss
dec
xor
jg
cmp
add
ja
ds
sbb
mov
lock
inc
cmpb
lret
cmp
lcall
orb
and
dec
inc
add
pop
pop
mov
xor
in
inc
stc
fsubrs
xchg
repz
flds
add
lcall
add
push
aad
add
ja
or
fiaddl
pusha
mov
inc
or
or
in
stc
inc
loopne
dec
xchg
sahf
lahf
sbb
pop
add
inc
push
or
xchg
sbb
lock
dec
add
mov
mov
shrl
xlat
rep
in
jmp
jnp
push
scas
jg
or
mov
add
lods
mov
ret
jnp
pop
xor
fwait
dec
cmpsl
add
sbb
aaa
add
pop
add
adc
push
bound
lock
mov
lret
dec
or
mov
pop
pusha
mov
and
shll
inc
cmpsl
sbb
fsts
in
rolb
mov
dec
lret
pop
adc
loopne
add
push
sbb
and
sbb
loopne
pop
fnstsw
mov
mov
or
rcl
insb
jmp
clc
jmpw
cmp
mov
ret
push
test
sub
adc
mov
adc
inc
xchg
jno
jbe
mov
adc
jl
cwtl
daa
lret
sub
add
jno
sbb
xor
sbb
orb
inc
test
fdivs
pop
cmp
sub
add
es
xchg
and
nop
mov
repnz
cli
sar
mov
push
fcoml
into
int
push
add
mov
out
cmpsb
inc
xchg
xchg
bound
or
test
add
mov
xchg
mov
je
lods
insl
mov
mov
pop
insb
bnd
or
mov
add
mov
call
int
add
dec
mov
mov
sub
fdivrs
add
gs
mov
ret
icebp
pop
mov
addr16
mov
mov
sbb
out
sbb
clc
fwait
xor
rolb
mov
sbb
xorb
les
and
xchg
lds
add
xchg
lret
dec
daa
mov
inc
inc
add
jle
or
push
ds
les
xorl
adc
mov
filds
scas
xor
jg
aaa
pop
test
lcall
js
and
jmp
enter
xor
loop
xchg
sbb
fwait
add
out
dec
cmp
xchg
inc
sarb
mov
mov
xorl
adc
mov
jl
ficoms
movb
out
ds
jns
or
cmp
xor
xor
in
jbe
inc
sbb
ficompl
addr16
push
mov
inc
adc
loope
mov
imulb
sahf
add
xor
jmp
inc
jns
popa
imul
mov
scas
push
loope
std
mov
rolb
xchg
jge
cmpsb
mov
repnz
insb
pushf
sub
int3
outsb
ljmp
inc
mov
adc
aad
add
divb
pop
call
jge
mov
dec
sub
test
sub
pop
int3
add
sub
xchg
cmc
sub
add
lcall
repnz
sub
or
sbb
mov
rcr
xchg
aas
aas
out
mov
stos
push
icebp
and
add
push
rcl
cwtl
ret
add
sbb
ss
sahf
shll
sbb
pop
pop
adc
out
loopne
in
rolb
add
sti
pop
imul
popa
adc
add
sbb
cmp
push
aaa
int3
and
sbb
aam
pop
mov
out
int
push
jmp
in
and
ret
pop
sarb
dec
inc
mov
fildl
dec
inc
arpl
mov
adc
les
shr
or
sbb
cmp
sub
push
dec
mov
lock
add
push
xchg
mov
rorl
mov
adc
cltd
int3
divl
pusha
jp
add
inc
in
pcmpgtb
shll
repz
add
mov
js
ret
and
fists
mov
sbb
xchg
add
mov
outsl
xor
movsl
mov
rclb
es
cltd
fs
mov
arpl
pop
xor
pop
cs
pusha
or
inc
lret
xor
adc
add
ficompl
std
data16
cmp
push
xchg
roll
test
fxsave
std
push
and
mov
sahf
add
and
ret
cmp
stc
add
sbb
push
sbb
inc
int3
jo
and
loope
mov
push
aad
or
push
or
sbbl
faddl
pop
fadds
mov
aad
add
repnz
enter
call
cmpsb
stos
ja
mov
out
dec
add
or
mov
pop
in
cmp
xchg
mov
mov
add
ljmp
getsec
xchg
outsl
push
add
xor
add
pop
push
lret
adc
jnp
add
dec
stc
mov
adc
pop
and
cmp
or
aas
mov
out
fmull
out
push
sbb
fs
dec
add
xchg
dec
stos
push
or
adc
push
push
in
add
jecxz
clc
add
lcall
add
or
mov
or
lret
ret
pop
jbe
outsl
mov
cmp
stos
add
dec
and
dec
xor
xor
sahf
sub
xchg
mov
inc
daa
jle
mov
lods
xchg
push
jge
add
imul
xchg
pushf
jg
mov
ja
add
nop
jge
and
adc
lds
push
jae
test
fxch
push
cmp
stos
cltd
aas
and
dec
or
pop
in
sbb
hlt
fsubrl
mov
sub
jmp
add
mov
inc
cltd
rclb
add
scas
add
stos
inc
push
sbb
mov
adc
pop
lds
or
inc
sub
sub
xchg
mov
idivb
add
ret
js
xor
lea
test
incb
mov
add
inc
scas
inc
shl
loopne
pop
dec
sbb
jle
xchg
add
mov
pop
addr16
mov
add
test
mov
push
add
rorb
adc
insl
sbb
fstpt
shll
add
test
jp
aam
inc
push
das
shrb
loopne,pt
daa
jg
ret
xor
mov
popf
jecxz
add
jl
dec
shrl
cmp
out
add
std
dec
and
add
or
divb
mov
inc
fisubrs
fldt
mov
pushf
pop
out
aam
loope
adc
popf
inc
clc
jl
sub
outsb
lret
xor
pop
add
pop
jne
frstor
pusha
dec
sahf
pop
cmpsl
aam
xor
pop
mov
cmpsl
rclb
cs
sahf
adc
mov
xchg
popa
out
jge
shrb
xor
pop
hlt
rclb
adc
js,pn
fadd
mov
mov
inc
insb
fcmovnb
push
cmp
pop
in
mov
xor
inc
es
inc
dec
sub
or
add
int3
push
insl
fldt
push
loop
add
push
sub
mov
leave
in
xchg
and
jns
repnz
cmp
cmpsl
xchg
out
adc
cmp
call
jl
sarb
push
push
cmp
cwtl
fwait
icebp
es
fs
es
cli
add
xorl
cmp
add
popl
mov
ret
int3
fisubs
lcall
mov
jnp
dec
bound
lock
lahf
xchg
movsb
cmp
popf
cli
es
insl
fstps
fs
movsl
sub
fwait
pop
pop
pop
add
mov
roll
jne
stc
add
sbb
lret
shll
aas
iret
pushl
xchg
add
addb
dec
xchg
scas
ret
repnz
push
mov
jo
js
ret
mov
inc
pop
insb
rolb
out
out
hlt
and
outsl
roll
mov
mov
jg
add
filds
push
cs
ret
add
es
stos
imul
sbb
shrb
mov
fldl
push
jo
pop
mov
mov
add
or
repnz
mov
leave
dec
daa
outsl
mov
in
inc
add
dec
xlat
cwtl
adc
add
and
add
pop
xchg
sub
xor
or
mov
mov
sahf
push
js
stos
adc
mov
movsl
sbb
add
xchg
add
dec
mov
sahf
inc
xor
add
insb
adcl
mov
stos
add
xchg
movd
pop
jnp
loope
leave
sbb
adc
xorl
push
xor
loope
lret
xlat
xchg
sub
jle
sbb
xor
jns
inc
dec
aaa
push
das
mov
cmp
xchg
jge
sbb
inc
mov
loopne
mull
xlat
sbb
and
popl
cmp
addl
or
cs
ret
or
inc
shr
rorl
nop
dec
xlat
roll
adc
xor
jo
fisttpll
push
and
push
aad
jp
add
or
js
mov
pop
or
pop
add
xchg
sub
fstps
xchg
call
mov
fidivrs
xor
xchg
adc
test
and
add
and
insb
imul
jmp
pop
and
adc
clc
adc
movsb
add
xor
lods
ret
shl
xor
jne
aas
into
test
sbb
loope
enter
or
fwait
mov
mov
xor
fcomip
ret
mov
and
out
inc
ss
and
cmp
verw
cmp
incl
scas
or
jne
mov
pushf
xchg
testb
xchg
scas
mov
mov
cli
cmp
frstor
add
movsb
push
mov
xor
jmp
fimull
lds
adc
and
or
add
inc
pop
into
add
cmpsl
iret
mov
lret
cmc
jns
and
xorb
xor
ja
xchg
cmp
xchg
inc
mov
sub
insl
cmp
jmp
shlb
loopne
lock
dec
lahf
add
add
sub
push
sahf
add
mov
add
and
cmp
push
mov
add
sbb
inc
and
fs
xchg
ds
push
testb
cmpsl
xor
mov
adc
int
cwtl
movsl
jle
cmp
shrl
rorb
out
or
loope
mov
add
cmp
sbb
pusha
pop
ficoms
add
subb
jmp
mov
shll
cwtl
idivb
mov
scas
inc
xor
push
shll
sbb
sbb
add
and
add
subb
pop
lds
push
add
jne
pop
or
in
and
add
lret
mulb
pop
dec
stc
bound
pop
ja
mov
psubsb
add
js
enter
bound
inc
outsl
jae
mov
mov
mov
add
mov
cmpsl
outsb
xor
add
lret
sbb
xchg
inc
xchg
and
cld
out
dec
mov
movsb
incb
jle
and
popf
or
pop
pusha
inc
jae
add
movsb
mov
pop
ror
mov
mov
and
fistpl
pop
sbb
out
cmp
add
add
push
subl
and
lahf
add
ret
cmp
pop
add
cltd
cmc
out
add
xchg
sbb
sub
sarl
icebp
jge
mov
fwait
test
ljmp
add
xchg
loop
fcmovnu
lret
sbb
cmp
xchg
push
jge
xor
jnp
add
jbe
push
int
jae
inc
push
iret
aad
mov
mov
inc
jl
pop
out
inc
sbb
in
leave
inc
xor
lret
mov
std
in
xor
pop
xchg
into
aam
add
mov
add
mov
sahf
stc
clc
cmp
scas
add
and
rcrl
mov
cmpsl
aaa
out
add
gs
mov
mov
mov
lods
cmp
call
pop
inc
and
fcmovu
imul
scas
inc
sbb
loop
data16
sub
add
xor
stos
jbe
insb
fisttpl
add
push
into
call
data16
aaa
lret
ja
std
and
xchg
add
mov
fs
add
inc
push
mov
sbb
xor
add
adc
lock
jg
xor
mov
inc
movsl
dec
pop
in
add
bound
mov
pop
sub
mov
xor
or
loopne
add
into
push
jne
enter
mov
dec
sub
add
lds
jmp
iret
xchg
jnp
imul
sub
sbb
add
add
add
sub
pushf
add
data16
mov
imul
inc
ljmp
out
aad
dec
sbb
shlb
in
int3
jge
aad
mov
mov
cmpsb
aas
fsubl
jo
mov
add
lods
aad
rorb
sub
stos
cmp
cltd
sub
xlat
sarb
inc
add
out
mov
add
fimuls
popf
ss
inc
add
sarl
repz
push
sbb
sub
shrb
sub
into
std
jns
mov
cwtl
add
movsb
mov
sahf
out
inc
sbb
int3
cli
add
jno
lds
add
icebp
mov
inc
dec
fwait
xor
gs
loop
adc
sub
into
add
loop
mov
out
fs
sbb
mov
lds
mov
cmp
mov
inc
sub
cli
rclb
cmp
mov
inc
sbb
test
mov
and
mov
addl
icebp
out
test
jp
jne
cmp
mov
mov
pop
add
fwait
mov
add
mov
inc
xchg
adc
push
pop
xor
cmp
cmp
and
mov
jns
sarl
xchg
test
cmp
mov
xchg
push
call
inc
pop
adc
push
enter
fsubrs
lods
dec
rclb
inc
sub
adc
cmc
int3
rcrl
cmpsb
pop
iret
fadds
sbb
mov
aad
dec
add
cmp
cmpl
aad
into
data16
mov
sub
and
cmp
adc
jecxz
stos
mov
add
sbb
aad
and
iret
and
out
mov
lock
inc
add
lods
scas
inc
ss
xchg
adc
repz
lods
push
adc
stos
xchg
mov
add
cmpsl
or
xchg
sti
dec
or
les
add
ret
neg
xorl
int
cmp
cmp
es
lret
push
mov
xor
adc
popf
adc
clc
add
jl
xor
sbb
lret
stc
cmp
cmp
sar
test
xchg
in
cltd
in
cli
les
push
adc
addl
lods
lds
fdivs
sbb
js
mov
jecxz
sub
inc
dec
icebp
movsl
xchg
inc
sub
rcrl
add
popw
mov
push
scas
jg
outsb
cmp
stos
push
or
out
mov
fadd
and
mov
cs
mov
inc
rcrb
adc
js
xor
fisubrl
lret
sti
jp
dec
sub
jo
aas
xchg
and
pop
fadd
pop
adc
dec
inc
mov
into
sti
das
iret
orl
cmpsb
xor
push
std
js
add
push
int
jmp
or
fiadds
fistps
dec
test
adc
or
xor
mov
add
adc
sbb
dec
movsb
dec
jno
lea
ljmp
stos
jmp
pop
mov
sarl
jle
test
arpl
cmp
iret
sbb
mov
push
mov
mov
movsb
add
inc
fwait
add
mov
inc
scas
add
jno
bound
cltd
cmp
dec
mov
and
test
pop
gs
fcmovnb
jp
push
mov
stos
fnstenv
out
das
cmc
pop
pop
inc
or
mov
lret
lahf
sbbb
aaa
add
scas
ficoms
push
inc
cmp
xor
pop
xchg
ds
xor
rolb
mov
inc
pop
gs
rolb
cmp
mov
andl
and
pushf
repnz
inc
and
aam
fwait
mov
fsubr
push
add
lds
inc
inc
das
lret
add
divb
mov
test
pop
jae
scas
adc
mov
popf
sub
cmpsl
jno
push
popf
roll
push
push
stos
loope
cmpsl
js
and
adc
fisttpll
iret
add
sbb
add
inc
inc
repnz
data16
cltd
inc
inc
fdivp
add
dec
and
cmp
or
sbb
addb
cmpsb
in
push
add
xchg
sbb
rolb
push
xchg
dec
fidivl
xor
add
xchg
ljmp
xchg
adc
insb
mov
lods
push
jge
stc
xorb
cmp
jnp
mov
decb
arpl
das
fmulp
and
add
hlt
movsb
xchg
or
dec
add
repnz
loopne
arpl
lods
shll
adc
mov
into
bound
je
cmp
mov
pop
daa
inc
or
int
and
xchg
pop
adc
add
xor
push
sub
lret
and
aas
push
add
sub
movsl
popf
ljmp
adc
arpl
insb
add
fisttpll
jns
into
lods
mov
adc
inc
add
aam
ffreep
mov
xor
add
pop
pop
in
jo
or
and
pushf
mov
rcll
adcl
add
cwtl
call
add
jecxz
and
ss
add
add
addr16
push
pop
add
stos
enter
jecxz
mov
xor
xor
adc
sbb
shll
iret
js
jl
pop
std
add
dec
add
das
fadds
add
and
and
cmp
dec
jns
mov
shlb
cmpsl
push
dec
add
loop
xchg
insl
aas
stc
add
maskmovq
notl
cltd
popa
nop
es
into
lds
adc
pop
gs
jmp
inc
dec
decl
xor
add
loop
lret
inc
add
jno
adc
test
fistpl
or
pop
cmp
jge
add
or
dec
jns
push
mov
testb
rolb
lods
jmp
sub
pop
push
add
scas
leave
add
mov
je
ljmp
xor
and
push
inc
mov
xlat
or
pop
xor
inc
stos
rclb
ss
pop
push
rorb
notl
inc
cmp
fsts
pop
rcrb
loope
xor
mov
xor
clc
adcb
inc
pop
cmp
lahf
outsb
fisttpl
mov
sbb
stos
insl
cmp
into
daa
or
cmp
lret
dec
add
cld
sbb
and
or
xor
rorl
cs
mov
std
add
push
xor
add
cmc
outsb
inc
lock
jb
push
add
add
arpl
pop
nop
dec
cmp
jae
mov
pusha
pop
add
std
mov
pop
ffreep
lret
lea
sbb
outsb
pmaddwd
dec
call
or
fisubs
fnstenvs
push
insb
adc
enter
mov
inc
or
in
dec
loop
popf
sbb
inc
lcall
xchg
rolb
ss
push
dec
add
insb
dec
xor
mov
mov
incl
das
gs
fcmovnu
lret
dec
jmp
insl
xlat
out
cmc
sbb
jmp
insb
add
add
mov
xor
mov
sub
jg
jge
mov
cmpsl
rolb
loop
mov
out
roll
or
cmpsl
orb
mov
and
mov
xor
add
rclb
scas
sar
pop
fs
aam
dec
fsubl
adc
nop
xchg
mov
add
insb
or
lahf
push
dec
xadd
xor
fcoms
inc
lock
add
testb
out
cmp
and
fs
mov
pop
xchg
xchg
pop
pop
mov
push
mov
cld
scas
jno
xchg
inc
test
lds
stos
sub
jns
add
outsl
mov
pop
xor
ret
push
out
jle
sbb
lock
jns
xchg
fbld
mov
in
test
or
jmp
or
ret
pop
cmpl
shld
stos
sub
adc
mov
push
das
add
or
mov
adc
scas
sti
add
jp
pop
test
fwait
jb
rol
push
pop
add
in
add
popf
hlt
scas
add
adc
andb
cs
leave
and
add
push
fsubs
or
cmp
ret
in
loope
ret
shl
orl
pop
bound
add
fwait
mov
cs
sub
js
icebp
adc
movsb
rorl
fldl
jo
add
push
pop
cmp
pushf
addl
test
add
xlat
xchg
xor
iret
movsl
mov
das
imul
call
adc
out
push
cmp
pop
add
and
jg,pn
lods
sbb
push
daa
and
js
add
sub
xor
sub
test
lahf
and
push
cmpsl
mov
and
jle
add
inc
ja
add
outsl
cmp
xor
mov
add
adc
xchg
lods
jne
cli
add
mov
mov
out
fsubrs
jno
xchg
mov
jle
adc
test
mov
cmp
and
push
scas
jmp
js
jle
sarb
add
pop
or
add
xchg
je
and
clc
bound
push
dec
out
mov
out
shl
iret
call
xchg
push
jb
test
push
dec
add
enter
adc
add
sbb
adc
frstor
fadd
push
cltd
cmp
mov
sbb
enter
inc
dec
jne
pop
push
in
rorl
loop
mov
jecxz
fwait
in
add
fcompl
jg
inc
cwtl
sbb
add
loopne
mov
add
fucom
mov
cmp
mov
mov
enter
adc
lahf
push
jbe
pop
dec
lret
je
lret
add
add
pop
sub
dec
xor
xlat
pushf
and
mov
adc
jne
les
mov
xchg
sbb
in
jp
lcall
shlb
sub
inc
mov
inc
repz
cmp
push
adc
adc
push
sub
faddl
cmp
pop
mov
jbe
cmp
cmp
testl
pop
push
jo
pop
jl
xor
rorl
js
mov
mov
movsb
cltd
xor
xchg
jecxz
jmp
daa
aam
mov
in
add
mov
sahf
icebp
or
add
pop
mov
jnp
pusha
push
inc
inc
jmp
cmp
aam
or
lahf
add
shrl
add
shlb
xchg
sahf
jo
add
cmpsl
imul
xchg
dec
xchg
loop
add
cmp
mov
out
bound
imul
imul
mov
jo
and
mov
push
in
aaa
inc
push
jecxz
test
dec
cltd
inc
add
nop
sarl
mov
xor
arpl
repnz
xchg
insb
cmc
cmpsb
stos
push
or
in
adc
fidivrs
scas
cmp
or
ret
pop
jns
mov
pop
fdivs
mov
pop
mov
aam
lds
aad
push
cmp
sbb
adc
ret
notb
sti
push
sbb
movl
or
push
cmp
xchg
loopne
push
testl
repz
es
xor
or
add
out
jb
push
clc
sbb
rol
pop
mov
xchg
push
fdivrl
xor
xchg
mov
sbb
shrb
ds
mov
or
faddl
cmp
cmp
mov
lret
cmp
and
outsl
adc
lds
inc
addr16
fs
ss
ficompl
mov
or
insl
mov
push
push
fisubs
mov
jle
rclb
mov
out
mov
and
ltr
loopew
sub
add
out
sub
jg
rorl
lods
mov
adc
and
fs
and
rorl
push
int3
xor
inc
rcrb
test
mov
adc
mov
xchg
hlt
sbb
nop
or
add
mov
dec
add
sbb
lcall
pop
cmp
cmpl
mov
push
pop
xchg
push
push
cmc
mov
mov
sbb
add
xchg
stos
fwait
add
sbb
jns
sub
test
ds
sbb
inc
stos
add
sub
and
cmp
mov
mov
jo
in
decb
push
xor
divl
mov
movsb
mov
test
and
inc
dec
repz
cwtl
dec
cmp
clc
arpl
fwait
bound
orb
popl
inc
loope
notl
jo
repz
sahf
or
mov
pop
lods
adc
pop
mov
sbb
jns
int3
xlat
mov
ret
adc
add
and
cmpsl
push
sub
add
fwait
repnz
xchg
add
push
xchg
mov
cmp
pop
dec
icebp
push
movsb
insb
fldl
jecxz
dec
pop
sbbb
add
out
rclb
sub
add
jbe
mov
iret
test
cli
xlat
rcrl
testl
stc
adc
je
ss
mov
shll
or
push
scas
push
mov
or
or
xor
aam
cmp
xor
loopne
jle
inc
pop
aas
shlb
bound
mov
out
cmpsb
cmp
out
test
sarl
add
inc
add
push
sbbl
and
jns
pusha
sbb
cmp
dec
mov
cmp
ret
sub
ss
pop
add
dec
in
scas
mov
test
imul
stc
mov
jnp
leave
aas
pop
stos
jae
mov
sbb
lea
test
enter
mov
rolb
addr16
test
inc
push
sub
xor
ja
jnp
cmp
cwtl
hlt
adc
cmp
mov
jno
add
sbb
xchg
ss
inc
loope
pop
cmc
add
dec
sbb
and
jae
add
test
mov
pop
add
rcll
xor
xchg
popa
add
lret
insb
sahf
jp
jns
pop
add
rcll
dec
in
cli
cmpl
xor
push
add
push
xchg
or
ret
push
cmp
mov
std
rclb
sub
imulb
and
and
test
pop
pop
pop
std
dec
test
sbb
rcr
mov
loope
sub
lods
pop
ret
sbb
cli
cmp
mov
shl
outsl
dec
shll
lahf
sub
adcb
sbb
aam
add
xor
mov
xor
mov
inc
and
lret
popf
in
fsubrl
mov
jmp
and
mov
repnz
out
add
mov
sub
int3
or
fdivrs
aas
add
xor
popf
cmp
in
lds
lds
mov
xor
cmp
pop
stos
xchg
es
adc
pop
pop
xorb
lret
addr16
jmp
push
and
dec
add
jne
mov
ret
rolb
add
add
cs
fstl
add
outsb
loop
xchg
or
dec
add
rclb
imul
aaa
adc
popa
add
inc
mov
add
inc
xchg
addl
andb
repnz
pop
bound
sbb
push
test
dec
mov
mov
cmp
sbb
scas
fucomip
add
mov
iret
dec
push
cmp
aas
dec
call
addr16
push
ja
ret
fildl
iret
sub
add
push
add
adc
clc
lds
repz
fistl
in
fisubs
lret
sbb
movl
jbe
and
mov
mov
add
movsl
adc
mov
adc
repz
int3
lea
hlt
insl
pop
pop
cmp
lahf
sbb
aad
fsubrl
stc
xchg
in
adc
xor
fs
mov
push
dec
jl
add
cmp
or
pop
pushf
adc
push
out
subl
and
cwtl
push
mov
xchg
pop
mov
insb
cmc
add
es
out
sbb
lret
test
mov
push
roll
add
xlat
outsl
xchg
xor
imul
out
xlat
add
aas
scas
cmc
stos
add
and
fisttpll
pusha
xchg
cmpsl
add
mov
inc
inc
shrb
inc
adc
pop
mov
fisubs
orb
mov
loope
aam
stos
in
pop
cmpsb
add
jecxz
adc
roll
mov
push
pop
into
movsb
adc
mov
scas
daa
sahf
bound
fbstp
add
cltd
mov
movsb
cmp
push
in
or
sub
pop
xchg
inc
add
mov
hlt
iret
ds
add
mov
and
lock
les
add
push
jnp
fists
sahf
lods
inc
push
out
mov
decb
adc
jmp
orl
lock
mov
jne
rorl
mov
ret
int3
xchg
cmp
aas
xchg
nop
adc
in
stos
and
cmp
pop
fiadds
cs
mov
es
mov
ret
xor
ljmp
test
xadd
sbb
loop
outsb
add
or
add
dec
mov
inc
cmc
out
dec
and
rcl
cmpsl
cmp
imul
push
loopne
sub
dec
sub
out
add
lock
and
movl
xor
mov
ret
imul
add
shlb
inc
js
std
and
cmp
adc
cmp
pop
aam
subb
test
roll
add
push
and
jns
in
popa
test
imul
dec
mov
xchg
repnz
jmp
jnp
xchg
add
jecxz
je
repnz
stc
xor
pop
jb
add
mov
xadd
mov
lods
cmp
inc
ficomps
das
mov
dec
insb
andb
rcr
addr16
sub
mov
loopne
add
pop
test
jge
jns
ljmp
pusha
mov
iret
xchg
cmpsb
mov
imulb
dec
jg
ja
mov
sbb
mov
sub
sbb
sar
and
xor
sub
enter
xchg
pop
inc
shrl
fidivrs
mov
or
add
out
bnd
sub
pop
push
adc
aad
iret
add
loopne
lea
je
outsb
test
pop
lds
in
cmp
sar
or
mov
push
imul
data16
sub
leave
pop
add
push
fs
cli
add
je
adc
add
jle
push
test
nop
lcall
mov
pusha
jp
xor
push
inc
stos
int
cwtl
and
sbb
cmp
add
jbe
jmp
daa
test
std
or
clc
adc
push
push
shl
mov
mov
push
loop
rcl
mov
inc
add
orl
add
jecxz
inc
sbb
xchg
stc
ret
or
cmp
add
dec
push
sbb
ja
sti
add
xor
repz
add
sub
and
add
and
cltd
js
mov
add
pop
rep
push
sub
or
add
lods
test
scas
xlat
inc
jns
imul
in
push
mov
dec
loopne
add
into
xchg
push
shll
adcl
add
jne
movsb
add
pop
and
mov
loop
jbe
aaa
test
and
test
push
loop
xchg
adc
mov
pop
mov
add
loopne
add
dec
add
sbb
leave
cmpsl
push
add
mov
mov
lea
jg
xchg
cmp
xlat
outsb
dec
mov
cmpsl
add
mov
dec
in
fildl
add
icebp
or
imul
or
daa
xchg
add
js
jp
sub
test
mov
mov
mov
sarb
jl
add
lods
xorb
lret
or
inc
and
xchg
fdivrl
jnp
inc
mov
push
mov
sar
cs
inc
pop
lds
nop
in
or
pop
mov
out
in
aaa
and
lds
cmp
push
nop
inc
out
pop
aam
testb
testl
and
out
push
dec
add
incb
in
repz
cmp
lods
xorb
pop
jno
xchg
adc
loopne
fs
cmp
add
xlat
mov
add
and
dec
mov
or
jns
add
divb
shlb
flds
popa
adc
in
outsl
add
filds
inc
je
mov
rcll
out
jg
movsb
jno
add
iret
test
bound
pop
rcr
arpl
xchg
sbb
dec
add
jo
cli
in
mov
add
cmpsb
dec
add
call
andl
add
lcall
xchg
xchg
mov
add
popa
movsl
in
xchg
test
inc
push
aaa
push
stos
push
lret
leave
adc
inc
insb
rolb
filds
jb
add
dec
cmp
and
xchg
mov
inc
fmuls
ret
jmp
bound
xlat
nop
stc
push
lret
add
mov
mov
push
cli
add
dec
outsl
popa
btc
cmpb
dec
hlt
sbbb
sbb
inc
fildll
add
wrmsr
in
xchg
stos
sahf
and
enter
adcb
nop
in
das
mov
add
test
pop
mov
dec
mov
sbb
ret
mov
xor
int3
cmpsb
add
push
testl
mov
cmp
loopne
jmp
ja
rol
xor
xor
add
or
cmp
and
scas
mov
cmp
cmp
inc
lcall
fs
add
mov
fstl
add
ss
xor
lds
pop
push
imul
lret
mov
ljmp
xor
xlat
sub
add
ljmp
and
and
push
lea
cmpsl
jno
stc
mov
add
cwtl
clc
roll
add
xchg
push
gs
adc
lea
push
bound
outsl
mov
gs
jns
and
xlat
push
mov
mov
xchg
in
dec
add
adcb
mov
push
lret
je
xchg
test
adc
rol
pop
or
pop
bound
mov
insb
ja
add
or
mov
jnp
nop
fidivl
add
add
cmp
push
add
adc
repnz
call
dec
sbb
jns
test
mov
fcoml
and
jmp
add
adc
idivb
mov
cmp
in
jnp
cmp
pushf
mov
mov
scas
dec
or
add
jno
jmp
iret
fstpl
shrl
mov
xor
sbb
or
xchg
add
in
movsb
and
or
call
jle
shl
lds
jns
pop
out
add
xchg
sub
mov
xor
push
rol
pop
js
push
sub
test
pop
ret
add
out
push
push
popa
iret
jp
mov
add
adc
into
or
testb
cmpsb
test
iret
push
xor
add
lret
sti
jmp
inc
popf
add
sub
scas
cmc
mov
and
mov
loope
xchg
or
fmull
adc
adc
push
stos
inc
xor
mov
lea
push
sbb
leave
add
mov
pop
adcb
mov
cli
cmp
adc
les
pop
xor
sbb
movsl
and
clc
jge
jb,pt
xor
cmp
sbb
test
cld
xchg
ret
add
ljmp
push
adc
xchg
les
and
mov
arpl
stos
push
sub
jp
add
push
inc
ret
fiadds
lret
jmp
lret
add
mov
ja
pop
shrl
xor
std
jp
pop
sbb
adc
jg
jo
call
and
add
dec
ret
out
jns
or
adcw
js
and
cmp
cltd
mov
xchg
jno
out
imul
sub
cmpl
cmpsl
add
and
mov
test
xchg
jo
push
sbb
lds
scas
mov
adc
push
aam
pop
dec
inc
scas
or
and
xor
add
dec
negb
in
mov
pop
and
lcall
or
sub
lds
cmp
and
xchg
push
pushf
or
xor
test
enter
dec
add
in
pop
mov
add
jno
lahf
xchg
fdivs
xor
adc
adc
dec
jecxz
mov
rol
sbb
add
xor
jg
mov
lcall
add
je
push
push
sbbb
pop
outsl
test
fnstcw
orl
jle
cmpsb
enter
fdivs
adc
add
mov
add
cmpsl
xchg
adc
cmpsl
imul
test
add
pop
shrl
push
cmp
add
sbb
fstpt
jl
jmp
jae
sbb
mov
jnp
sbb
jle
out
and
xlat
fstp
lcall
icebp
lods
cmpsb
push
ja
add
popa
dec
add
je
sbb
and
movsb
add
dec
sub
loopne
add
rclb
or
lahf
movsl
dec
adc
xchg
adc
xlat
xor
aad
adc
push
pop
mov
add
xlat
pushf
jbe
push
inc
dec
add
push
pop
push
lea
cmp
add
movsl
movsb
lds
repz
add
sbb
ja
or
mov
pop
cwtl
mov
aam
add
xor
pop
jne
in
mov
imul
out
fwait
add
jns
or
add
xchg
mov
jle
adc
cmpsb
add
add
mov
leave
insl
push
fisubl
cmp
add
xchg
push
pop
movsl
pop
mov
mov
push
ret
stos
adc
sbb
add
test
sbb
popl
pop
xchg
sarl
fsts
and
nop
mov
decl
mov
jmp
pop
inc
movsb
aam
add
lahf
pop
xor
ds
pop
pop
push
in
fistl
push
outsb
cmp
dec
adc
cmp
mov
jmp
push
iret
rcrl
mov
dec
jge
clc
cmp
icebp
jbe
jne
roll
cmp
xchg
test
orl
xorl
xchg
mov
dec
mov
xor
mov
inc
std
add
clc
aas
or
push
je
add
jae
fsub
gs
sub
ret
popf
clc
and
in
das
inc
mov
cli
mov
push
scas
push
lea
inc
jmp
pop
int
add
jnp
iret
repnz
add
divb
jno
and
sbb
shll
leave
push
dec
rclb
mov
mov
inc
adc
add
pop
or
cmpsl
inc
sub
cmp
mov
subl
mov
jge,pn
add
sbb
loop
inc
jae
dec
jle
cmp
add
fld
mov
or
adc
pusha
lods
aaa
pusha
clc
cmc
loop
mov
jecxz
ret
sub
push
pop
or
dec
and
loope
sarl
daa
mov
mov
add
sahf
xchg
icebp
mov
and
add
pop
mov
add
xchg
mov
jecxz
repz
imul
fdivs
cmpsl
inc
in
mov
add
dec
stos
add
xor
cmp
lret
lcall
add
repz
inc
cltd
cmp
pop
cmpsw
pusha
jb
xor
push
push
add
add
sbb
fadd
clc
mov
sub
ljmp
xchg
add
or
lret
call
scas
lods
pusha
sahf
sbb
lds
mov
scas
adc
xor
pop
xchg
popf
dec
movb
adc
xchg
add
pusha
imul
dec
jae
inc
pop
and
add
sti
movl
inc
test
andl
jecxz
cmc
fisttpll
dec
or
adc
xchg
mov
mov
scas
and
adcl
inc
adc
xor
add
jne
mov
xor
adc
mov
inc
cltd
jb
or
xchg
sahf
or
pop
mov
xor
test
divl
fwait
push
xchg
add
add
jb
adc
mov
nop
adc
cmc
jecxz
and
out
outsl
dec
pop
icebp
roll
dec
addr16
aas
mov
xor
pop
fldl
lahf
pop
cmp
test
cmpsb
sub
andps
pop
sbb
test
std
mov
add
roll
pop
roll
sbb
jmp
push
add
or
idivb
movsb
test
lock
add
cmpsb
stc
cmp
cli
inc
test
out
and
out
push
push
shl
fcomp
and
leave
sbb
fsubl
inc
stos
push
bound
or
or
jne
jge
inc
repz
mov
push
mov
mov
jae
cmpsl
lahf
out
dec
sti
filds
and
mov
shll
add
mov
xor
adc
shrl
dec
js
lea
pop
sahf
loop
pop
out
pop
and
adc
imul
add
pop
mov
add
out
fdivrp
insl
fiaddl
push
call
popa
mov
mov
push
and
mov
ja
mov
test
dec
add
rcrl
pop
frstor
jns
cmp
xor
inc
xchg
jno
scas
rcl
cmp
sub
fs
pop
sbb
ss
lods
inc
cwtl
jg
sbb
jb
add
xchg
and
inc
and
add
adc
inc
jg
or
out
xchg
sub
outsl
cmp
add
mov
inc
pop
add
int3
mov
add
push
fs
adcl
add
fildll
add
add
mov
add
mov
adc
and
mov
sbb
and
test
pop
jle
loopne
add
pushf
and
inc
fsub
stc
sbb
scas
add
rcrl
mov
cmpsl
or
fmul
inc
push
and
fstps
iret
push
jle
or
add
mov
lret
xchg
stos
push
ret
imulb
shrl
movq
insb
sar
icebp
bound
pushf
sarb
call
cmpb
mov
jo
into
xchg
cmp
jbe
mov
push
enter
xor
mov
add
push
pop
cwtl
rorl
jge
xor
out
mov
add
sub
pop
int
add
shlb
test
mov
mov
xlat
nop
outsb
aaa
shlb
mov
add
je
mov
lea
sub
mov
push
leave
inc
jmp
lret
shrl
cmp
mov
sbb
adc
mov
cmp
dec
xchg
inc
lret
xor
mov
cwtl
cmpsl
repnz
ss
mov
sahf
imul
sbb
fcmovnbe
jmp
inc
sub
mov
sbb
jge
push
add
jnp
jo
inc
inc
loopne
mov
xor
mov
or
fstl
inc
adc
cmp
xchg
xchg
add
mov
add
mov
jbe
pop
pop
shl
scas
xor
test
scas
gs
cmp
sbb
sub
or
out
add
aaa
dec
or
ss
add
shl
lods
pop
or
dec
xchg
push
cmpsl
sahf
or
les
movsb
in
sbb
adcl
out
xor
or
sub
ret
inc
stos
xor
clc
popl
fidivl
repnz
add
ret
insl
sbb
add
icebp
das
mov
mov
add
fnsave
add
adc
cmp
je
inc
insb
add
mov
out
xchg
loopne
jge
sub
sti
in
dec
sub
jl
add
pop
lea
shl
jnp
cmpl
cmp
add
sbb
push
in
add
jo
dec
or
sbb
addl
sbb
xchg
jae
shl
xor
jmp
push
cmp
stc
iret
shll
xchg
sar
stos
data16
fimull
add
mov
cmp
adc
shl
test
mov
fiaddl
push
dec
addr16
mov
mov
add
fsin
mov
shl
divb
jecxz
and
cmpsb
sbb
ljmp
gs
cmp
rorl
jo
fwait
dec
add
cmpsb
aad
mov
add
inc
aas
imul
or
adc
cltd
sub
xor
mov
pop
or
std
mov
outsb
arpl
dec
loope
adc
loop
inc
adc
inc
arpl
rcrb
dec
cmp
add
sbb
jno
call
testl
pop
gs
loope
add
daa
mov
add
xchg
cmpsl
sub
add
mov
cmp
add
iret
sbb
xchg
aam
add
das
lds
fs
filds
or
add
jmp
sbb
rcrb
and
fiaddl
jecxz
xchg
or
pusha
sbb
je
mov
add
shlb
lock
sbb
adc
xor
push
js
sub
xor
test
lahf
add
xchg
fs
call
out
jo
cmp
xchg
add
lods
loop
pop
stos
ret
push
xchg
inc
mov
and
fisubs
and
sbbl
rolb
dec
cmp
jnp
mov
inc
aam
sub
dec
imul
and
push
mov
push
add
mov
and
insl
sahf
or
cld
sub
clc
or
test
mov
add
loop
out
lods
insb
mov
add
movsb
iret
mov
cmp
lcall
inc
adc
shrb
mov
mov
scas
sbb
inc
add
mov
sub
ficomps
mov
mov
repz
rolb
pop
cmc
mov
ljmp
cs
xchg
add
out
testb
dec
pop
inc
test
ljmp
lods
cs
call
stos
or
xor
xchg
loopne
and
and
sbb
cmpsl
dec
das
leave
and
hlt
aaa
push
pop
xor
addr16
ret
call
daa
dec
jns
push
into
inc
pop
mov
das
ret
call
popa
insl
jb
pop
add
movsb
xor
in
sbb
stos
cmp
hlt
lret
xchg
pop
cmpsl
dec
push
and
mov
ja
fadds
xchg
and
test
sbb
movhps
add
xor
popf
sub
adc
insl
sti
mov
test
and
cld
add
xchg
out
xlat
icebp
aad
xor
adc
pusha
dec
push
rcrl
mov
xchg
add
test
dec
add
xchg
lods
sbbl
add
out
imul
jbe
push
popa
pop
sti
cmp
or
xchg
mov
pop
lea
cwtl
cltd
dec
popf
jnp
add
jmp
js
jno
in
movsb
dec
xchg
or
and
sub
push
lods
stc
xchg
mov
bound
fsubl
lcall
js
arpl
iret
adc
xchg
adc
add
jle
xor
add
sub
rolb
mov
adc
lock
out
cmpsl
mov
popf
rolb
cmpsb
jae
and
out
add
into
add
sahf
sub
add
sbb
inc
add
js
cs
cmpps
mov
and
push
icebp
jnp
fisttps
fcoms
hlt
call
arpl
mov
stos
jo
and
cmp
jbe
jecxz,pt
inc
enter
xchg
xchg
in
xor
add
pop
lahf
sbb
jae
pop
mov
lods
lods
int
add
sbb
cmpsl
add
push
xchg
pop
adc
addl
cmp
pop
lret
add
ret
aaa
fisubrs
iret
fimull
xor
adc
add
sbb
inc
aaa
popf
add
or
stos
rcll
and
rcrb
adcb
xchg
inc
imulb
test
or
mov
insb
test
sbb
movl
pusha
sub
cmp
cmpsb
cmp
mov
xor
mov
in
insb
add
pop
lock
push
inc
mov
sbb
cmp
cmp
pop
mul
xchg
xchg
out
adc
repnz
and
mov
push
inc
push
or
gs
clc
mov
gs
cmpl
int3
mov
jae
mov
mov
sbb
xchg
cmc
push
sbb
inc
add
push
fbld
cs
inc
mov
xor
cmp
or
je
pushf
mov
xor
or
add
sub
fsubrl
cmp
inc
test
mov
repnz
xchg
divl
jp
pop
xchg
test
fsub
xchg
cmp
adc
mov
ficoml
push
cld
ret
stc
inc
or
in
xchg
cmp
hlt
sbb
add
imul
and
lods
add
stos
push
ret
lret
orb
adc
add
sbb
add
add
add
add
mov
add
adc
pop
add
out
cmpsb
jo
stc
lret
fidivrs
xchg
add
inc
sub
inc
cmp
movsl
aam
xor
add
or
or
add
movsb
imull
add
jbe
out
add
clc
cmc
inc
imul
idivb
adc
pop
lcall
xor
int3
add
mov
add
popf
xorl
or
xor
idiv
jno
sbbb
cwtl
push
xor
mov
or
push
or
out
lea
inc
inc
adc
add
xchg
mov
xlat
pop
push
pop
pop
push
dec
les
add
push
or
imul
mov
add
or
iret
adc
fldl
jmp
xchg
les
test
xor
add
sub
pop
add
add
and
ja
in
ss
adc
sbb
maskmovq
testl
es
and
xor
or
xchg
pusha
cmp
bound
outsb
and
ret
dec
inc
push
decb
mov
add
add
push
cld
push
push
cmpsb
pop
pop
inc
notb
iret
mov
and
add
cmc
leave
fadds
add
mov
sti
fdivrp
add
pop
pop
pop
dec
fisubl
rclb
add
jbe
cmp
enter
cld
sbb
xor
push
sahf
movsl
add
fildl
pop
icebp
mov
cmpsb
sbb
cli
inc
or
popf
push
mov
cmp
pop
fsubr
pop
test
mov
mov
push
xchg
iret
add
inc
push
xchg
sub
add
movzbl
sub
add
mov
iret
dec
fldt
in
movb
or
sbbl
sub
jecxz
and
fbld
add
sarb
push
add
scas
mov
pop
cmp
mov
movsb
inc
mov
loopne
cwtl
add
cmp
repz
fisttpl
add
xchg
scas
xchg
inc
jecxz
sarl
jne
shrl
dec
or
mov
inc
xor
out
fildll
mov
mov
fidivl
mov
push
mov
enter
adc
addr16
add
loope
xchg
repnz
je
mov
cmp
add
jae
sub
jl
int3
dec
test
mov
repnz
cld
add
jne
std
add
addb
mov
lahf
add
rorb
mov
xor
lret
or
lods
mov
push
notb
incb
lods
push
insl
xchg
iret
push
jno
arpl
ljmp
pushf
hlt
cmp
inc
and
addr16
lds
add
in
mov
pop
push
add
jmp
pop
imul
pop
fstl
pop
xchg
ffree
adcb
ds
dec
xchg
xchg
std
cmp
shlb
and
push
xlat
add
arpl
inc
mov
clc
ja
das
loop
loopne
mov
hlt
and
jl
push
test
and
les
pop
cwtl
mov
popa
cmp
mov
mov
ret
out
adc
mov
add
xchg
out
cmp
popf
cmc
dec
pop
pusha
nop
dec
xchg
add
incl
add
ret
jecxz
pop
pop
xchg
lods
xor
inc
movsl
sub
ret
ds
add
xor
cmp
cmp
ret
aas
pop
inc
add
wrmsr
ret
lods
push
addb
hlt
push
add
mov
and
fiaddl
sti
mov
pusha
add
add
enter
incl
adc
in
outsb
add
push
push
shrl
enter
pop
iret
stos
mov
push
mov
ret
outsl
aaa
roll
or
pop
in
fisttpll
mov
mov
cwtl
cmp
and
or
fsubp
inc
subl
xor
add
xor
rcl
aaa
fcomps
scas
pop
mov
and
jno
incl
sbb
pop
enter
xchg
push
clc
xchg
xchg
add
jmp
imul
add
in
bnd
or
and
es
push
mov
int
js
mov
add
fnstenv
dec
movsl
pop
push
sahf
add
out
push
outsl
jns
inc
into
rcrb
fcoml
ret
pop
add
or
xchg
cvttps2pi
mov
push
ret
scas
mov
dec
xor
lret
add
xchg
sbb
jo
leave
lods
add
loop
das
les
add
mov
ret
inc
or
js
rcll
xor
sbb
in
pop
mov
add
aad
adc
pop
sarb
add
ss
mov
sbb
mov
xor
call
movsb
or
mov
aad
lods
jnp
call
addb
outsb
jp
jecxz
or
xchg
stc
add
xor
xchg
pop
add
xchg
ret
push
xorb
inc
sbb
in
insb
mov
rcll
and
stos
jbe
ds
mov
insb
adc
push
pusha
adc
dec
inc
mov
dec
fdiv
mov
repz
ja
add
scas
std
leave
xor
fidivs
and
jecxz
in
jmp
outsb
jg
push
test
lcall
icebp
add
lds
scas
and
int3
enter
sahf
subb
into
popa
pop
add
xor
ss
cwtl
pop
cltd
enter
dec
ret
jmp
or
sahf
imul
mov
push
push
cmp
test
sub
les
add
lea
push
mov
fcmovbe
sub
fists
loope
clc
jmp
mov
shrl
sti
movsl
ljmp
pushf
mov
loop
sub
sbb
pop
add
mov
clc
add
gs
add
push
mov
xor
call
sbb
nop
jns
pop
sarb
out
and
cmp
jbe
add
dec
push
ret
leave
pop
sbb
dec
mov
inc
cmp
cmp
and
mov
xchg
adc
adc
jl
push
int3
out
mov
mov
lret
and
mov
or
push
ficomps
js
adc
shlb
jge
xor
inc
cmp
and
cmp
ret
in
or
loopne
xor
or
cwtl
add
nop
ffreep
adc
lods
cmpsb
add
or
aam
pop
add
outsl
xor
repz
jge
arpl
rorl
mov
scas
into
jmp
cli
push
adc
adc
outsb
sti
mov
adc
roll
cwtl
cmpsb
inc
rorb
or
shll
push
fwait
loopne
orl
stc
pop
inc
ds
xchg
pop
loop
in
or
mov
xchg
sub
in
in
test
pop
cmpsb
pop
mov
stos
ret
mov
jp
xor
add
xchg
arpl
cwtl
enter
dec
inc
sbb
sbb
add
jno
pop
pop
fwait
adc
add
xchg
dec
repz
pop
js
sbb
sub
cmp
shrb
mov
dec
cmp
jnp
add
push
test
mov
xchg
add
mov
dec
ljmp
xchg
jae
and
es
loope
dec
or
sbbl
es
or
mov
iret
in
add
flds
xor
pop
xchg
cmp
js
cwtl
mov
insb
push
loopne
or
rcll
jns
add
dec
dec
adc
pop
inc
mov
mov
add
ret
mov
pop
add
mov
add
xchg
cmc
add
push
ret
imul
add
pusha
adc
add
jmp
sahf
test
xchg
stos
mov
inc
mov
das
mov
push
int3
mov
dec
push
jcxz
adc
inc
inc
lods
cmpsl
pop
sub
sub
repnz
iret
je
add
pop
arpl
loope
inc
pop
add
jle
into
ret
jbe
aam
out
xchg
cwtl
pop
sbb
add
add
pop
scas
cmc
add
fdivr
jle
popf
mov
rorb
outsb
enter
jg
xor
add
push
add
dec
das
aaa
add
push
jnp
pop
movsl
outsb
mov
pop
mov
outsl
xlat
add
xchg
dec
add
jmp
adc
mov
xchg
aad
adc
mov
mov
mov
inc
xchg
add
jbe
jno
mov
call
add
fiaddl
dec
into
ret
jnp
stos
je
mov
rcr
pop
adc
dec
fildll
cmp
pushf
rolb
add
mov
mov
ret
mov
inc
adc
iret
jnp
adc
inc
add
out
inc
push
push
pop
mov
rcrb
lods
sbb
dec
fimull
sbb
shll
pushf
mov
mov
lods
imul
fimuls
jle,pt
dec
inc
sub
cmpsb
enter
push
add
cmpsl
cmp
jns
dec
inc
lods
mov
and
fbstp
cmpsb
shlb
movsb
out
std
cmp
pop
mov
andl
adc
and
and
jo
movl
cmp
add
adc
sbbb
lahf
in
sub
enter
xchg
in
add
popf
cltd
in
lcall
sub
mov
inc
movsl
jnp
iret
jg
fidivrs
cmp
and
mov
xchg
xorb
pop
xor
add
cmp
add
call
sub
xchg
cmpsb
bound
pop
sarb
xchg
sbb
inc
fistps
add
mov
mov
insb
or
sbb
add
inc
ds
sahf
sub
inc
arpl
movsl
add
mov
int3
cs
pop
jecxz
or
shrb
or
movl
mov
ret
xor
pop
pop
pop
mov
dec
xor
lea
add
nop
outsl
xchg
orl
pop
add
dec
lahf
mov
push
jle
and
sub
sbb
dec
fists
add
pop
mov
test
insl
xor
xlat
mov
mov
inc
push
and
insl
mov
sub
das
in
add
cmc
add
push
or
add
loope
data16
inc
jo
xor
int3
push
cmp
loopne
outsl
lret
fbstp
jae
dec
cmp
enter
not
adc
push
xlat
cmp
mov
insb
add
mov
divl
js
loope
xchg
jnp
or
pop
mov
adc
mov
xlat
sar
nop
les
push
mov
fisttpll
or
jnp
sbb
mov
es
inc
fbld
xchg
add
fwait
add
inc
out
rclb
jo
xchg
das
cmp
push
sbb
jge
inc
jnp
xor
leave
ja
dec
mov
fcomi
pop
test
scas
sbb
add
sub
xchg
xlat
fimuls
jne
je
popf
sahf
and
fsts
ljmp
call
mov
xorl
stos
add
jb
mov
mov
cmp
fmul
jae
bound
cltd
pop
stos
mov
dec
out
and
rcrl
push
add
dec
sbbb
and
aas
cmc
mov
add
push
jg
adc
adc
jp
dec
jns
mov
add
add
loopne
xor
scas
roll
sbb
xlat
add
sahf
inc
adc
add
imul
scas
shrl
mov
mov
sbb
dec
inc
test
add
dec
fbld
mov
dec
add
mov
lods
repz
push
inc
xchg
mov
xor
mov
ja
add
push
mov
aas
sti
xor
pop
cwtl
int3
mov
mov
repz
add
sub
push
jne
or
mov
inc
add
mov
push
fnstsw
popf
out
add
jnp
cwtl
cmp
xchg
add
in
shll
inc
addr16
mov
je
push
sbb
mov
sub
push
loope
dec
push
or
add
outsl
cs
imul
in
dec
cmp
mov
push
or
loope
jmp
and
pop
add
xor
out
and
add
add
mov
cltd
je
fsts
ficomps
add
jb
in
xor
mov
movsl
repnz
or
popa
mov
dec
fldt
pop
sbb
dec
insl
inc
adcb
addr16
popa
shlb
pop
cmp
xor
and
in
sbb
fstpl
cld
enter
adc
sbb
ret
out
fwait
lock
add
adc
repnz
iret
in
push
cmp
out
adcl
lock
cmpsl
sub
mov
xchg
mov
je
cmp
roll
clc
outsl
push
and
xor
push
or
push
pop
lret
insb
push
mov
pop
xchg
and
and
jecxz,pt
add
push
add
shr
notl
add
xchg
push
dec
xchg
pop
sarl
loope
cmpsb
add
push
dec
jne
aam
xchg
mov
xchg
lret
adc
mov
and
cwtl
push
add
pusha
cmp
cmp
rcrb
hlt
pop
cmp
add
out
mov
add
add
lcall
pop
outsb
add
dec
pop
mov
add
lods
sahf
inc
add
fnstsw
imul
scas
sti
jge
hlt
cmpsl
push
cli
push
insl
mov
sbbl
out
shl
out
jecxz
mov
mov
test
xor
out
cmpsl
xchg
les
in
push
neg
add
rorl
dec
rolb
push
daa
lods
call
mov
push
insb
xchg
sbb
add
js
push
adcl
sub
add
fdivrs
repnz
imul
pushf
pop
cs
lock
gs
ret
fidivl
lds
inc
jmp
and
ret
fsubrs
movsbl
xchg
fucomi
js
out
into
repz
add
adc
mov
add
es
add
in
dec
or
rolb
adc
and
jge
decl
inc
in
sub
sub
aad
add
test
pop
sbb
and
lcall
loop
addr16
clc
sub
pusha
add
adc
int3
sbb
cs
mov
adc
aas
xor
das
or
je
scas
cli
in
sbb
add
add
cld
in
sub
push
mov
decl
pop
xchg
outsb
and
jne
sahf
and
scas
sub
and
inc
fnstenv
fdiv
xchg
and
test
cli
add
inc
or
mov
shlb
mov
sbbl
jge
in
add
jmp
xchg
mov
jmp
roll
sahf
xor
aaa
in
add
jmp
add
sub
in
and
dec
pop
mov
or
mov
add
ret
lock
popf
xchg
add
inc
lret
sahf
push
nop
movsb
cmp
add
into
xor
jle
mov
inc
xor
pop
cwtl
dec
mov
mov
mov
inc
aam
pop
ror
popa
adc
addr16
dec
add
xchg
sbb
inc
and
lods
add
sub
les
aad
fisttpll
adc
and
and
or
sbb
add
fimull
nop
pop
xor
and
ret
pop
mov
cmpsb
pop
add
push
sbb
std
xor
and
xlat
out
and
push
test
test
cmpb
adc
jb
jp
or
add
test
add
loope
cli
aas
ds
fs
mov
mov
cmp
jno
addl
das
add
cli
mov
pop
adc
inc
dec
stos
bound
xor
inc
and
jecxz
mov
sub
clc
add
mov
es
and
push
mov
jne
xchg
shrb
popa
lcall
pop
sbb
push
xchg
and
sbb
ds
adc
jecxz
inc
popf
movsb
add
inc
pop
sbb
inc
stc
insl
notb
jge
xor
ret
lods
dec
jbe
adc
inc
test
xchg
mov
insb
repz
mov
mov
lods
dec
sar
pop
mov
into
cmp
jle
test
outsl
jbe
clc
inc
inc
lds
xchg
dec
add
xchg
push
mov
or
add
xor
in
pop
js
sub
icebp
int
push
dec
aas
push
out
cld
adc
xor
je
jmp
shll
jle
into
jns
cwtl
rol
lret
push
mov
adc
push
fistps
test
mov
jo
cli
fwait
stos
and
add
xchg
push
cmpsl
xchg
dec
out
inc
test
movsb
push
xchg
xor
push
sbb
or
push
mov
mov
arpl
loopne
dec
add
adc
cmp
sub
ds
dec
and
stc
test
int
add
jbe
nop
aas
add
mov
or
data16
icebp
mov
add
adc
inc
addr16
xor
ret
out
stc
outsb
xor
pop
ss
into
or
clc
add
je
mov
mov
mov
cmc
sbb
ret
aaa
inc
aad
push
clc
enter
in
add
stos
pop
add
jnp
dec
mov
test
cli
lods
out
cmpsl
xor
test
xor
pop
movsb
dec
ret
mov
addr16
push
sub
xchg
roll
in
xor
inc
dec
pop
add
repnz
fsts
int
mov
test
cli
mov
fnstsw
sub
xor
cmc
sbb
dec
mov
xor
inc
cwtl
fs
cmp
das
cmpb
ds
add
mov
pop
out
xlat
mov
stc
popf
test
dec
enter
push
mov
xor
or
mov
aam
mov
out
stc
fistpl
jmp
pop
add
cmp
xchg
xchg
rcrl
add
add
mov
jns
leave
add
jbe
out
pop
inc
fmull
aaa
push
ss
push
into
pop
push
sarb
mov
add
push
push
loope
mov
into
add
inc
fisttpll
and
mov
mov
inc
push
sub
out
icebp
shrl
dec
mov
imull
add
xchg
aad
dec
xchg
add
jo
cs
iret
or
lds
ret
js
pop
aaa
inc
or
out
cmp
rolb
lea
pop
outsb
mov
out
inc
mov
sbb
push
clc
mov
push
jno
pusha
jae
xchg
orl
xor
sbb
je
add
mov
rcr
push
sbb
ds
add
mov
xor
jo
inc
sbb
push
mov
in
jle
xor
cmpl
push
pusha
mov
add
mov
lcall
dec
push
and
fcmovbe
add
add
dec
ret
cs
push
add
aam
inc
hlt
negb
pop
in
rcll
rcr
fwait
ds
fnstenv
movb
into
scas
cmp
rolb
mov
fbstp
add
push
rclb
jno
add
ret
fisttpl
es
subps
in
push
push
add
push
das
mov
inc
imul
pop
and
out
mov
and
xor
inc
xlat
pusha
push
cmp
inc
lds
rcll
jle
adc
and
add
xlat
test
push
jg
add
les
mov
mov
call
add
addr16
push
rcrb
add
in
lds
push
enter
push
dec
add
add
test
mov
rol
jg
jecxz
je
fadds
sub
mov
enter
cmp
mov
xor
fadd
inc
add
lahf
and
mov
movsl
xchg
add
dec
jno
loopne
mov
sbbb
xchg
popl
cltd
call
popf
jmp
push
pop
sahf
bound
dec
push
mov
or
dec
push
pop
jbe
das
test
add
mov
xor
int3
sahf
leave
or
pusha
movsb
les
cli
dec
push
roll
cltd
mov
mov
mov
and
dec
adc
pop
xchg
inc
sub
cmc
cmpsl
cs
lds
int3
gs
or
popf
dec
shlb
dec
sub
cld
push
sbb
fucom
or
push
add
pop
int3
mov
xchg
xor
jne
pop
mov
push
sbb
mov
dec
jle
shl
bound
scas
mov
add
or
jb
mov
lds
std
mov
xchg
movsb
mov
jne
call
xchg
fstpt
adc
xchg
add
pop
adc
inc
pop
repz
cld
add
in
dec
and
addb
sbb
jno
pop
clc
test
sbb
sbb
repz
mov
jmp
in
into
xchg
xchg
dec
andl
jecxz
ss
jge
add
sub
pusha
add
out
out
shrb
cmp
daa
pop
adc
jno
adc
stc
xorl
push
mov
mov
pop
and
add
adc
jo
xor
lds
cmc
add
rorl
add
mov
add
in
add
cmpsl
pop
lret
add
jns
leave
fiadds
add
shlb
adc
ret
js
push
adc
jno
xor
dec
test
lock
xor
jns
xor
and
lahf
and
fs
into
sub
xchg
cli
gs
jno
in
add
clc
or
or
cltd
add
jmp
add
xor
daa
pushf
call
sbb
push
fisubrs
mov
xchg
xlat
sub
sbb
adc
pop
ret
movsl
inc
add
and
scas
mov
sub
mov
out
mov
mov
jbe
inc
add
sbb
rclb
fildl
outsl
cmp
jns
andb
popl
adc
test
enter
add
cmp
sub
adc
and
ret
xor
loope
aam
imul
arpl
xchg
repnz
pop
repz
jge
ss
inc
mov
insl
jmp
mov
repz
jnp
shrb
xor
mov
jns
cmp
add
pop
int
push
or
sub
dec
inc
inc
mov
add
cmp
ret
or
adc
add
or
sub
nop
add
adc
or
fistl
sbb
xchg
enter
adc
dec
dec
xor
add
xor
and
push
mov
xor
and
dec
test
mov
add
push
stos
in
aam
add
xchg
mov
add
das
dec
inc
ret
adc
out
lcall
into
leave
sbb
pushf
ret
scas
sbb
test
add
mov
push
daa
sbb
enter
sbb
das
cli
insl
sahf
test
dec
mov
xor
inc
or
rcl
mov
inc
push
or
clc
adc
or
lret
xchg
cmp
push
fstpl
jge
sub
inc
sub
add
sub
mov
pop
cmp
lret
adc
frstor
add
scas
mov
popa
pop
jl
xchg
add
sahf
shrl
insb
pop
stos
cltd
imulb
add
popa
jne
xchg
add
xor
bound
test
push
xor
add
mov
out
xchg
add
test
out
addr16
daa
add
in
jns
jge
sbb
packssdw
xchg
and
in
add
shlb
cmp
sbb
add
jge
jp
jg
add
mov
inc
int
fiadds
or
add
dec
xchg
dec
add
and
dec
jbe
out
js
shr
xor
cmp
repz
test
xor
add
jge
or
xor
dec
test
movsb
inc
jo
in
std
and
fsubrs
add
cmpsb
fdivs
and
fcmovnbe
add
icebp
pop
cltd
inc
int3
jbe
adc
xor
mov
xchg
pop
mov
sbb
mov
dec
mov
mov
xor
js
rcrl
mov
outsb
add
enter
dec
add
jecxz
ret
movsl
popf
pusha
add
jae,pn
js
xlat
repnz
test
shr
pop
roll
testl
mov
mov
adc
pop
add
jge
aaa
inc
loope
push
std
daa
and
insl
adc
shrb
adc
scas
inc
pop
xchg
or
lods
test
jo
hlt
rolb
xor
daa
dec
stos
pop
push
add
mov
xchg
fdivrl
fiaddl
lds
mov
add
mov
inc
fsub
add
rorl
or
repnz
push
enter
adc
xor
add
xchg
inc
jecxz
fldl
ret
jle
or
dec
mov
add
bound
mov
mov
mov
fists
cmpsl
mov
cmp
test
mov
ret
cs
inc
lea
xor
cmpsb
mov
cltd
mov
shll
adc
add
inc
inc
jo
jecxz
add
cmpsl
mov
pop
mov
sbb
and
str
push
adc
add
cmpsb
pop
cmp
fcoms
add
mov
mov
inc
dec
scas
or
shll
loop
adc
in
sub
jnp
dec
mov
scas
dec
pop
clc
jg
pop
pmulhuw
subb
cmpsl
decl
add
sub
xor
out
pop
push
fstpt
imul
xchg
mov
fs
outsl
cmpsl
inc
xchg
lret
fdivrs
push
push
add
sti
scas
dec
inc
ds
in
jno
jle
sbb
insl
add
mov
add
daa
push
pop
out
lock
out
addr16
cmp
mov
add
bound
int
ljmp
dec
sub
iret
sub
adc
lds
cmc
jmp
add
mov
lret
or
fstl
bswap
cltd
add
xchg
mov
into
int
mov
cs
or
jb
sub
xchg
mov
xchg
outsl
bound
add
push
ret
jae
sub
sbb
sub
push
push
fsubrs
sbbb
xchg
lret
add
jo
xlat
fisubs
pop
push
inc
jnp
adc
inc
stos
movb
aad
xor
cmp
push
mov
and
dec
push
dec
push
cwtl
stos
roll
adc
add
stos
sub
adc
or
xlat
sahf
push
dec
bnd
int3
jmp
add
dec
pop
popa
gs
lods
jbe
cltd
xor
xor
add
add
shl
cmpsl
push
cld
mov
std
cmp
pushf
call
push
cmp
in
cmc
mov
jecxz
pcmpgtd
fidivs
mov
inc
lret
add
shl
cmp
xchg
add
cmp
sbb
jae
into
mov
stos
jl
nop
scas
mov
mov
fs
cmp
rolb
addr16
test
leave
add
jnp
mov
and
inc
ljmp
inc
fwait
mov
mov
test
int
sub
inc
add
jne
cmp
cmp
out
jg
stos
insb
cld
and
cmc
out
fildl
sub
shlb
rolb
add
stos
xor
stc
push
push
subl
xor
sbbl
aaa
mov
mov
and
pop
cmp
cmpl
sbb
clc
test
sub
movsl
rorl
add
xchg
bound
xor
xor
or
fcompl
push
call
dec
dec
iret
je
and
lret
sbb
sbb
xchg
xchg
les
fs
out
loope
in
or
arpl
ret
les
addr16
add
aas
push
es
xor
or
xor
push
pop
dec
aas
xchg
add
jb
loopne
push
enter
pop
adc
fisubs
xor
and
pop
decb
aad
add
repz
or
inc
aaa
rclb
cmp
cmp
scas
push
add
mov
mov
sbb
adc
idivb
pushl
sahf
sub
int3
mov
add
lods
jns
push
das
mov
test
add
xor
in
rorb
xor
out
or
cmpl
dec
out
and
xor
ret
imul
lock
mov
adc
and
shlb
cmpsl
es
cmp
jg
and
jmp
inc
push
add
fildll
ss
jnp
xchg
xor
mov
out
cmp
add
add
cmp
ss
inc
in
mov
call
aaa
mov
dec
pop
inc
mov
insl
or
and
sbb
push
stos
inc
std
mov
addb
cs
rcl
push
fistpll
xchg
add
sbb
adc
ja
fisubl
popl
in
add
lods
fistl
add
push
push
cld
ret
xchg
add
clc
pop
pop
or
lcall
adc
mov
int
inc
movsl
adc
add
fstl
jbe
pop
adc
in
cltd
add
hlt
jnp
call
int
stos
jbe
add
add
popf
in
add
ficomps
or
or
cmp
mov
test
mov
mov
clc
push
pop
aad
xchg
pushl
gs
nop
xor
imulb
add
sbb
or
lahf
push
add
stc
and
cmp
mov
filds
mov
xchg
jnp
add
xor
push
sbb
push
dec
shl
scas
or
and
js
rorl
add
inc
lds
fldl
add
xor
sahf
orl
inc
test
xor
popa
pop
in
ss
mov
shll
and
push
xchg
sub
pop
cmp
sub
add
loop
pop
sbb
jae
jb
aas
lock
add
mov
sbb
pop
cmc
pop
insb
xchg
jbe
fadd
movsl
bound
ret
pushl
mov
mov
cmp
add
push
inc
push
roll
sub
push
xor
adcl
mov
aas
inc
mov
fstl
cs
shlb
dec
insl
push
sbb
aas
jge
cmp
mov
mov
int
ljmp
fsubl
movsb
inc
std
ret
js
add
add
scas
sbb
faddl
mov
push
fadds
inc
ss
xor
call
lds
pushf
push
xor
dec
enter
jae
pop
add
lret
inc
mov
add
fdivrl
stos
or
pop
and
inc
movsb
xchg
push
add
add
xchg
inc
cld
lahf
mov
add
xchg
push
sbb
aas
sahf
add
cmp
testl
sbb
inc
pop
cwtl
add
dec
js
insb
mov
loopne
mov
jnp
clc
dec
pop
dec
popf
inc
lahf
inc
mov
adcl
in
aas
sbb
cmp
cs
jecxz
lea
xor
add
push
push
add
sbb
mov
or
sbb
lahf
xorl
es
add
inc
cmp
push
pop
adc
xor
jo
jns
subl
sub
xor
sub
xchg
push
das
in
stc
cli
pop
and
movsl
ja
imul
add
adc
add
addb
and
cwtl
pop
add
sub
jb
jp
pop
sti
pop
xor
fnstsw
push
push
shll
mov
shrb
add
xchg
gs
scas
add
and
mov
movsl
add
sub
inc
popf
jecxz
pop
cmp
sub
cmc
dec
dec
fiadds
ss
or
add
lock
mov
cwtl
add
imul
inc
cld
mov
test
pop
subb
push
xlat
cmp
mov
and
or
xor
add
sub
add
divl
add
pusha
mov
add
push
cmpb
test
fdivs
push
adcl
add
out
mov
cs
add
in
in
pop
adc
mov
and
push
xor
cmp
sbb
mov
cmp
mov
rcrb
dec
inc
adc
mov
mov
mov
fidivrl
lret
and
jb
sti
pusha
and
cmpsb
push
int3
aad
icebp
fdivrp
rcl
clc
lahf
add
jne
add
mov
test
or
cmp
aaa
push
and
mov
xchg
outsb
mov
add
sbb
sub
mov
int
stos
inc
ljmp
das
push
adc
loopne
pop
add
xor
ss
fdivrs
jmp
das
mov
fisttps
es
adc
test
jmp
sbb
cmp
ret
std
or
mov
and
sub
dec
gs
fs
and
repnz
aaa
push
sbb
xchg
and
cmp
test
pop
iret
addr16
mov
jg
lods
or
cwtl
pop
lahf
sti
add
iret
out
repnz
shl
scas
add
mov
adc
je
mov
mov
push
popa
sbb
xor
rorl
add
ds
push
loop
pop
sub
mov
jg
and
aam
icebp
sahf
and
jbe
mov
adc
jo
ret
jns
aad
xor
fst
pop
sub
jnp
mov
xor
inc
add
roll
arpl
in
cmc
mov
into
shrl
push
mov
dec
inc
cmp
leave
inc
inc
xchg
repz
mov
cmp
add
cmpsl
cmpsb
dec
mov
xchg
push
stc
mov
jle
mov
hlt
mov
and
mov
outsl
mov
and
test
mov
xchg
add
aaa
add
adc
js
out
mov
movups
jns
pop
cmpsb
popf
bound
add
movsb
pop
pop
aam
cmp
movsl
jmp
jge
sub
mov
cmp
into
iret
xchg
rolb
lret
bound
xor
arpl
dec
or
leave
sbbb
ja
xchg
adc
jl
ss
xchg
ficoms
sub
push
and
pop
and
cmp
mov
xor
es
shrl
int
sbbl
add
add
xchg
fistpll
xor
add
pop
stos
flds
loop
xchg
insb
mov
push
shlb
add
xchg
add
call
movsb
ja
cmpsb
add
jecxz
inc
add
stc
scas
shll
pop
scas
add
pop
sbb
pop
paddd
insl
add
in
ja
inc
add
mov
inc
mov
jmp
lock
jecxz
and
mov
aam
mov
sarl
call
lret
pop
adc
add
cmova
lods
rcrb
imul
mov
adc
mov
pop
xlat
ss
cmpb
fldt
sbb
push
pop
outsb
add
je
jae
fstpl
iret
cmp
add
std
mov
dec
mov
pop
int3
rol
test
data16
test
adcb
xchg
lea
clc
fsubs
mov
sbb
inc
loop
test
cmp
add
xor
repnz
loope
add
ret
inc
push
loop
andl
decl
test
stos
add
lock
cmp
cltd
or
add
dec
cmpsb
inc
cmp
xchg
cmp
or
jbe
adc
hlt
pop
shld
rcrl
jne
std
or
in
jge
ret
call
add
test
fstl
addl
jnp
jno
int
adc
push
dec
push
fs
leave
add
mov
sti
jbe
shr
inc
xchg
repnz
call
arpl
dec
sbb
mov
repz
mov
shlb
std
add
clc
xlat
int3
add
outsb
push
dec
sbb
push
jge
push
lcall
fwait
sbb
notl
sbb
aas
xchg
insl
add
out
es
nop
movsb
add
loope
sbb
mov
add
loopne
xor
add
mov
pusha
jo
std
stos
shrb
inc
xchg
or
scas
lea
dec
ret
pop
dec
pop
xchg
xchg
dec
fnstsw
jno
test
loope
addr16
ret
xchg
cmpsl
insl
enter
mov
out
cmp
add
jbe
mov
add
clc
jg
sub
jo
and
int3
gs
outsl
xor
flds
jl
imulb
cli
decl
cld
inc
test
xor
sub
xor
jg
fdivrs
lods
or
lds
add
cli
dec
xchg
add
in
pop
mov
lahf
mov
xchg
adc
ds
sbb
out
xor
add
out
sub
cs
pusha
ret
pop
fdivp
mov
imul
popf
or
dec
add
dec
inc
mov
mov
pop
test
jecxz
push
jp
pop
dec
mov
add
pop
push
stos
push
mov
jmp
mov
loopne
xchg
jb
push
dec
insb
es
jnp
add
nopl
addl
add
js
or
dec
pop
sbb
cmc
orb
daa
imul
pop
lret
pop
shll
push
adc
stos
test
fdivrl
sbb
cmp
dec
pop
int
xchg
dec
pop
rcrb
gs
outsb
in
add
das
or
add
mov
add
mov
orb
stc
push
pushl
iret
xor
sbb
loope
mov
pop
inc
push
enter
int
dec
rcll
aaa
pop
sub
or
in
add
jp
mov
cmp
arpl
push
add
mov
xor
repz
add
arpl
adc
add
add
or
stc
jo
lahf
cmp
dec
jns
std
jmp
jmp
mov
lret
sbb
jae
xor
xchg
je
cmp
test
int
push
push
dec
vmulsd
jecxz
adc
xor
mov
mov
or
sbb
fistl
neg
int3
std
rcrl
cmp
xor
test
not
insl
imull
pop
xor
xor
aaa
out
aad
push
inc
loopne
and
sub
fstl
add
call
mov
repz
xor
inc
cltd
mov
push
mov
mov
mov
and
mov
stos
cs
rcrl
fiaddl
add
pusha
add
cmpsb
jno
jle
cmp
cmc
fs
test
pusha
rcll
out
adc
imul
sarl
inc
push
sub
mov
aam
sub
pop
test
pop
mov
add
leave
inc
or
add
mov
sbb
popf
fstl
aaa
loope
bound
mov
mov
shrl
add
jle
aam
push
push
fdiv
xchg
mov
sub
adc
add
outsb
jb
xor
add
gs
and
or
cmp
rolb
inc
aas
xor
xchg
lods
and
sbb
mov
add
iret
push
jnp
les
loope
cwtl
sub
push
or
test
mov
sbb
out
pusha
adc
mov
sub
add
add
aas
aaa
push
push
fcomps
xor
adc
repz
xchg
loop
mov
loope
inc
add
popf
aam
jmp
scas
fldt
jo
lock
add
out
popf
sub
loop
cmp
and
xor
xchg
js
inc
add
pusha
call
mov
test
into
lods
and
or
mov
xchg
les
jp
mov
adc
mov
push
xchg
pusha
cmp
and
orb
lcall
add
sbb
outsl
and
adc
std
rorl
mov
inc
ja
and
pusha
pop
inc
bound
cwtl
loopne
dec
lods
pop
add
into
fs
bound
xlat
repz
sub
stc
add
adc
outsb
cmc
test
int
jge
add
push
xor
pop
xorb
or
cmp
inc
and
popf
scas
push
cmp
pop
dec
push
hlt
movsb
inc
xchg
mov
mov
jmp
dec
out
or
test
xchg
push
cwtl
aas
mov
js
vpackuswb
push
lret
mov
arpl
add
jl
call
nopl
test
xchg
mov
inc
sub
mov
pop
push
mov
sahf
inc
inc
pop
notl
xchg
cmpsl
aaa
int3
sbb
mov
add
rcr
test
mov
jg
sub
outsb
mov
popa
pop
xchg
add
and
in
or
mov
mov
pop
ret
add
hlt
into
add
pop
inc
lods
sahf
mov
dec
dec
jae
jo
rdmsr
mov
insb
push
cmp
xchg
lods
int3
add
adc
add
cld
mov
and
or
pop
or
outsb
cmp
inc
aad
cmpsl
cmp
cmp
clc
aaa
das
cs
xchg
jno
mov
dec
in
add
test
mov
dec
cmp
jo
orb
bound
mov
popa
add
pop
iret
cmp
add
jp
push
sbb
aaa
push
push
add
dec
aam
scas
stc
outsb
add
imul
mov
inc
jl
sub
xor
fwait
ret
sahf
sub
out
sub
in
jb
dec
lds
adc
jno
or
stc
aaa
jo
and
jnp
mov
fisttpl
icebp
mov
xchg
xor
adc
lods
mov
popf
sbb
outsl
pop
pop
xchg
jb
in
stos
and
dec
lcall
and
mov
jecxz
cmp
rolb
xchg
lds
es
sub
add
gs
outsl
inc
jg
add
sbb
cmp
add
and
mov
mul
sub
cmpsb
xchg
adc
aad
dec
or
inc
xchg
or
dec
or
inc
aad
and
add
pusha
cmpsb
mov
mov
out
adc
xor
mov
cmpsb
sbb
les
in
mov
fs
dec
dec
pop
aaa
xor
adc
mov
add
fsts
add
cmp
jecxz
pop
mov
add
fs
scas
push
inc
nop
add
rolb
mov
xor
mov
icebp
add
in
or
mov
and
add
inc
cld
std
fisubrl
ret
pusha
in
aam
adc
and
mov
or
xor
lods
jmp
cmpsb
and
cltd
nop
and
add
add
loope
aas
lock
movsb
jg
add
push
jmp
stos
add
xor
lods
in
add
sub
mov
pushf
roll
loope
mov
and
mov
sub
cmp
add
fidivs
add
cmpsb
jmp
ds
inc
std
shlb
mov
cld
movsl
lret
sub
add
test
jb
popa
jnp
push
imul
push
mov
dec
mov
and
mov
xchg
mov
inc
mov
test
cli
push
cmp
loop
mov
cmp
sub
andl
bound
inc
stos
pop
movsl
adc
mov
cmp
mov
inc
mov
inc
and
xchg
jb
pop
aas
in
mov
sarl
int
sbb
adc
movb
mov
fstpl
lret
rsqrtps
push
jae
dec
cmp
pop
pop
imul
cld
dec
adc
scas
mov
add
out
mov
push
lret
xchg
inc
and
pop
adc
push
test
jmp
es
scas
enter
cld
adc
sub
sbb
test
fnstenv
repnz
add
les
add
fildll
into
inc
lahf
add
jns
add
outsl
sahf
add
mov
xchg
inc
pop
loope
std
mov
or
daa
cmp
pop
and
mov
push
xor
out
xchg
in
rclb
sub
mov
leave
ret
xor
stos
mov
icebp
ja
pop
sub
mov
rcrb
fiaddl
ss
movsl
cmp
inc
sti
add
sub
inc
jnp
lods
call
divb
ss
add
and
xchg
ljmp
into
sarb
mov
xchg
inc
js
sbb
adc
and
add
or
daa
insb
fnstenv
inc
mov
xor
fwait
mov
push
iret
scas
mov
xchg
push
cmp
shrb
mov
add
jb
repz
mov
mov
je
pop
jmp
in
sbb
add
xor
cmp
push
push
xor
xchg
or
inc
add
and
and
js
outsl
sbb
addl
fs
lcall
jge
mov
notl
push
ds
mov
sbb
arpl
out
es
icebp
lea
shl
and
sub
push
pop
cltd
pushf
inc
ficomps
xor
stos
and
mov
dec
inc
jb
outsl
inc
dec
mov
inc
adc
ja
add
sbb
fadds
lahf
mov
jo
sub
movb
or
cmp
jg
outsl
imulb
cmp
add
arpl
jo
loope
dec
std
sti
sbb
or
cmp
repnz
test
push
imul
and
fnsave
sbb
jg
fldenv
cmp
add
ffreep
testl
or
xchg
inc
add
lahf
pop
inc
jg
mov
sub
movsl
xchg
shrl
leave
int3
add
das
add
loope
sbb
insb
daa
jmp
push
mov
or
outsl
cmp
fisttpll
in
mov
fwait
mov
mov
mov
mov
xor
inc
lret
ss
push
mov
rorl
xchg
xor
mov
add
ret
inc
push
pushf
loope
mov
mov
int
aas
sub
mov
and
out
test
push
adc
jae
in
sub
lahf
cmc
add
xchg
mov
mov
call
lds
jno
rcr
jl
or
or
or
add
add
int3
jp
movsl
add
push
sub
add
call
out
lret
mov
outsl
cmp
add
popa
pop
inc
stos
aad
jb
xor
sub
test
sbb
stc
pop
xchg
out
mov
movl
sbb
sub
inc
push
pop
push
repz
xchg
cmpsb
aaa
mov
jp
xor
push
pop
std
rorl
lods
pop
pop
xor
and
inc
pop
aam
and
cmp
pushf
jb
iret
cmc
jae
popf
mov
jo
lahf
add
stc
cwtl
mov
add
cld
aam
or
data16
inc
sahf
into
adcb
fists
or
jge
enter
sub
je
in
add
jmp
addb
add
xor
mov
and
cmp
mov
add
loope
push
adc
dec
sti
add
xor
ret
stos
adcl
stos
mov
push
sub
jle
add
aaa
movsl
mov
pop
adc
into
xor
and
inc
bnd
and
sub
push
pusha
jbe
faddl
add
rcrb
push
or
outsl
in
insb
add
movsl
int
test
jle
add
icebp
mov
inc
add
nop
push
shl
cld
add
jbe
ret
cmpsb
orb
mov
sbb
push
shrb
pop
les
mov
or
xchg
and
sbb
add
add
les
jmp
add
lock
clc
xor
ret
or
push
pop
push
mov
jl
jno
push
lds
inc
pop
and
lahf
out
popa
inc
mov
inc
mov
neg
add
inc
lret
sbb
jns
mov
lock
jecxz
add
add
inc
mov
adcb
add
xor
popf
mov
and
lcall
addr16
adc
movsb
or
pop
sbb
sahf
xchg
pop
int3
pop
lret
mov
mov
push
jge
and
mov
arpl
add
hlt
out
adc
out
add
aad
add
inc
mov
xchg
add
inc
into
fsubrl
or
jns
fucomip
test
inc
lret
sbb
and
in
mov
push
push
and
pop
add
inc
notb
aas
cwtl
cltd
inc
clc
shl
lea
iret
or
lahf
cvtpi2ps
add
inc
cli
shrb
and
shrl
mov
dec
in
sahf
pop
call
call
shlb
aam
add
mov
mov
jno
clc
roll
mov
mov
xor
imul
mov
shlb
cmp
jbe
and
add
mov
leave
xor
push
lret
add
inc
and
add
mov
bound
into
imul
repz
cmp
shrl
cmp
sbb
cmp
out
scas
sti
bound
xorps
fnsave
mov
xor
in
add
xor
jle
adc
ret
in
andl
pop
movb
inc
sbb
fwait
cmp
adc
icebp
stc
adc
sahf
imul
test
dec
int3
push
add
data16
adc
lds
and
test
cmpsb
shrl
ss
push
dec
pop
cli
sbb
add
packsswb
mov
filds
dec
push
lahf
repnz
leave
inc
and
add
mov
add
arpl
ret
movl
out
fldenv
inc
adc
imul
and
sub
or
push
xor
orb
pop
fildll
xchg
testl
sarb
push
inc
fs
pop
jo
xor
cmp
adc
sub
or
pop
xchg
cmpl
aas
ror
xor
lret
add
outsb
cmp
mov
jne
xchg
inc
fsub
test
dec
dec
add
cmc
aaa
ss
mov
leave
sbbl
adc
rcll
arpl
or
mov
leave
ret
sbb
adc
mov
mov
add
dec
outsb
call
add
enter
and
cld
lret
sbb
lea
stos
push
xchg
or
rcrl
out
or
xlat
xchg
int
add
jle
jnp
lds
sub
and
mov
cmp
xor
pop
aaa
push
and
addr16
and
ds
jo
scas
stos
out
xchg
loop
xor
orb
add
jl
cmp
arpl
std
dec
int3
incl
sub
iret
gs
mov
add
push
out
add
sbb
ljmp
lret
inc
stc
fprem1
dec
mov
rcl
or
add
push
push
mov
and
cld
scas
xor
xchg
add
xchg
mov
push
adc
insl
lahf
insb
test
orl
outsb
xor
sbb
and
inc
inc
push
out
inc
dec
inc
pop
aas
outsb
lods
add
push
inc
pop
xchg
lret
test
mov
jo
arpl
test
cld
sbb
add
sub
out
hlt
xchg
into
clc
mov
adc
and
rorl
cs
popa
loopne
xchg
sbbl
sub
adc
inc
int
lods
dec
mov
jge
je
adc
js
js
jb
sbb
ss
sub
sbb
sbb
scas
js
lods
in
sub
lret
dec
pop
ret
or
sbb
movsl
inc
push
sub
imul
push
mov
data16
movsl
add
movsb
lods
inc
out
add
xlat
jne
add
dec
jle
xchg
imul
rclb
add
jecxz
push
add
clc
mov
popa
dec
push
xchg
pop
sbb
call
sub
nop
bound
hlt
add
int3
jns
aam
xchg
aaa
popa
pop
inc
pop
ds
mov
adc
mov
sahf
add
and
insl
add
add
ja
decl
sub
dec
push
xchg
cwtl
int3
movsl
cmp
iret
add
insb
popf
jb
sti
add
adc
cmpb
add
pop
mov
shlb
and
mov
inc
sbb
mov
inc
sbb
mov
rcr
cmp
xorl
dec
in
cmp
pop
inc
test
mov
cmp
cmp
adc
out
ficompl
mov
cld
mov
fstl
add
out
gs
cmp
add
xchg
sub
jmp
mov
pop
xchg
push
sub
mov
dec
aad
add
push
inc
pop
add
xchg
daa
xchg
sub
push
adc
shll
lret
cmp
or
or
add
enter
movsb
or
pop
stos
scas
ret
sets
mov
xchg
lock
adc
lahf
cmp
roll
shll
cmpsl
stos
sbb
jb
and
mov
fadds
mov
mov
jns
and
mov
fs
sbb
imul
pushf
lea
test
fstpl
iret
add
movsb
addr16
inc
jmp
inc
push
xor
adc
stc
rolb
sbb
les
cmc
add
xchg
sar
inc
cmp
xorl
adc
add
add
test
cmp
push
lods
push
xor
pop
mov
stos
add
les
xchg
adc
es
add
outsb
xor
cmc
mov
add
sbb
ds
shll
dec
mov
andl
sbb
add
shlb
icebp
fwait
xchg
push
scas
pop
inc
test
ja
dec
push
cmp
aam
xchg
sahf
adc
add
shlb
call
movsl
and
sbb
popa
dec
sbb
and
clc
ss
push
push
cmp
bound
das
mov
cmp
dec
mov
add
pop
and
or
out
in
add
incb
pop
inc
js
and
int
ret
xor
push
es
pop
jp
cwtl
xchg
adc
push
cmp
decl
sbb
fisubl
xor
jp
mov
pshufw
mov
and
add
test
pop
ljmp
aad
loope
add
repz
mov
enter
push
imulb
jg
lods
loop
jae
or
sbb
sbb
repz
mov
sub
orb
jmp
jecxz
rcrl
mov
aaa
inc
roll
jo
inc
mov
jge
push
pop
cmovl
rcr
loopne
mov
ds
movsb
mov
add
push
cmpsb
push
lock
in
sub
sbb
cmp
pop
add
in
popa
loop
add
sarb
add
lret
mov
iret
and
fcomi
push
cmp
cmp
cmpsb
gs
dec
stos
ss
adc
add
sbb
movsl
out
mov
add
mov
or
add
lock
and
pop
call
push
jmp
add
mov
cmp
xor
add
ret
loopne
pop
inc
jmp
dec
aas
lret
pop
inc
pop
sub
mov
push
mov
dec
jg
jbe
mulb
mov
pop
adc
mov
xor
add
fwait
jne
roll
fxch
or
outsl
ds
popl
xchg
mov
lods
aaa
mov
inc
inc
addl
mov
xor
call
out
shll
push
pop
scas
and
xchg
sub
xor
sub
aad
push
mov
popf
push
cmovns
std
mov
loope
mov
dec
jnp
imul
scas
ja
xor
daa
cmp
sub
sub
add
ja
insl
aad
lret
mov
or
and
test
inc
jbe
clc
cs
mov
mov
ljmp
ror
popf
inc
pop
fadd
sbb
dec
movl
leave
les
or
mov
mov
pop
or
pushf
rcrl
test
mov
je
fistpl
push
clc
loop
add
xlat
push
rolb
fs
comiss
and
jns
xor
xor
add
flds
mov
add
and
adc
mov
push
add
repnz
mov
fbld
add
push
rep
addb
push
or
jnp
dec
adc
xchg
xchg
xchg
add
push
mov
lahf
and
insl
cld
pop
push
shlb
xor
rolb
rcll
cmp
and
mov
inc
cltd
jp
mov
cld
pusha
frstor
cmp
jne
gs
ret
mov
decl
and
or
and
push
idivb
rorl
mov
dec
push
idivl
ds
or
mulb
inc
cmp
add
dec
inc
jae
add
adc
jecxz
out
jns
movsl
xor
or
or
cmp
inc
dec
adc
jmp
negb
arpl
xlat
call
jne
les
push
and
cmp
cmpsb
add
xor
cmp
add
jecxz
fiadds
add
sar
add
adc
mov
lret
jb
add
iret
and
xor
mov
add
roll
adc
jp
add
lret
call
cmpb
add
popa
dec
inc
adc
scas
lock
pop
inc
add
out
inc
shll
xor
jb
ljmp
ret
test
leave
je
xor
pop
ja
add
cmp
cli
lea
ret
bound
fbld
les
cmpsb
pop
xchg
lret
leave
adc
and
add
xchg
lahf
cmp
mov
lds
add
lea
out
cmpsl
add
aam
into
mov
ret
fs
roll
xlat
jecxz
xchg
int
rol
repz
and
mov
shl
add
call
ffree
mov
jle
aas
xor
pop
mov
inc
jnp
adc
push
hlt
xor
insb
lret
movsb
jno
xchg
cmp
sar
rcr
sub
lret
pop
add
push
ja
jmp
jnp
adc
pop
mov
nop
fstl
je
sbb
clc
jecxz
adc
inc
lock
jbe
xchg
in
add
mov
xchg
inc
adc
mov
push
inc
popa
pop
ret
out
pop
sbb
test
call
xor
dec
add
and
sbb
and
or
push
or
insb
add
add
pop
jbe
andl
insb
add
out
xchg
leave
sub
push
add
imulb
call
xor
rcrb
and
sti
and
pop
ss
mov
add
pop
jmp
add
outsl
jno
jl
xor
stc
cmp
jp
scas
mov
sbb
faddl
sbb
out
dec
pop
push
sbb
lea
pushf
lret
jbe
add
dec
sub
push
add
scas
pop
es
dec
pop
repnz
or
add
jecxz
ss
bswap
out
or
fnstenv
and
insl
xchg
pop
cld
in
stos
ljmp
and
mov
adc
subl
inc
sbb
pop
roll
lahf
mov
xor
cmp
nop
fildl
mov
inc
arpl
fisttpl
cmp
xlat
aaa
int3
add
xchg
cmp
dec
and
mul
mov
rcll
fadd
inc
pop
clc
aaa
stos
frstor
jno
add
pushf
mov
inc
and
and
xor
sbb
cmp
jecxz
pop
or
xchg
lock
es
mov
lock
shll
subl
aad
mov
or
ret
dec
test
xor
lea
cwtl
orl
ret
es
sbb
dec
pop
push
ret
iret
pop
dec
xor
and
xchg
shl
rol
pop
cmpsl
cmp
pusha
cmpsb
add
and
fldl
sbb
mov
fwait
cmp
filds
pushf
or
addb
stos
cmp
lea
and
jge
inc
notb
xor
xor
jo
popa
jb
and
stos
shlb
cld
mov
pusha
push
ss
shrb
or
mov
testb
xor
push
add
cwtl
mov
iret
push
pop
xchg
jg
dec
add
aam
inc
into
xor
mov
xor
pushf
add
shll
addb
jb
movups
mov
popa
aam
fcomps
xchg
addps
add
test
add
add
sub
rcll
or
inc
xchg
jmp
aam
jmp
pop
pop
add
repnz
cmpsl
popf
stos
leave
or
push
pop
add
clc
mov
adc
add
cmp
scas
push
push
pop
cmpl
add
or
arpl
loop
mov
dec
aas
loopne
mov
pop
mov
test
pop
push
pop
pusha
repnz
add
push
add
shll
mov
out
or
push
and
sub
sub
roll
sub
sub
inc
push
andb
and
test
mov
cmp
ss
mov
fldenv
push
push
sbb
test
imul
orl
outsb
add
xor
mov
test
adc
rclb
ss
push
and
sti
sbb
popw
add
dec
nop
lcall
out
and
jo
ficompl
pusha
addb
lods
or
dec
lds
subl
shrb
loope
aaa
xchg
adc
movsb
das
mov
add
cltd
mov
jge
imul
add
add
lcall
rdmsr
dec
add
lea
popf
rcl
shl
inc
inc
addr16
xchg
lods
cmp
add
adc
add
mov
mov
add
test
pop
sbb
dec
or
aad
and
mov
jg
add
sub
jge
ds
aam
and
into
iret
ljmp
into
sbb
fiaddl
out
stc
mov
push
icebp
mov
pop
cmp
or
out
or
push
fucomi
dec
xchg
inc
fldl
dec
jl
pop
sbb
test
pop
or
mov
mov
cld
shrb
xor
addl
jecxz
xor
pop
pop
xchg
fmull
jne
call
sub
push
jb
imull
bound
mov
movsb
and
sahf
jl
mov
inc
mov
sti
add
shlb
sub
xor
std
jp
xor
add
fiadds
lret
pop
mov
shrl
inc
mov
and
sahf
add
xchg
mov
test
les
lods
add
idivb
test
pop
insb
mov
xchg
pop
add
scas
notb
arpl
add
ret
dec
popa
fisttpll
test
sub
mov
mov
xchg
cld
adc
mov
jne
or
out
pop
ret
dec
rcl
cmp
sub
shll
loope
int
add
rorl
pop
roll
mov
xlat
sti
sub
inc
pop
shl
insl
stc
mov
mov
daa
add
pusha
fistpll
cmp
ret
not
movl
fnsave
pop
int
pop
push
jne
subl
dec
fcoms
xor
ret
js
or
pop
add
roll
inc
scas
jmp
add
dec
call
adc
es
xor
and
xchg
cs
push
inc
sub
shll
lods
test
add
add
aam
jnp
scas
add
divl
iret
add
pushf
adc
add
test
fldenv
adc
jo
cld
pop
jecxz
arpl
es
mov
mov
push
mov
jmp
test
mov
add
int
kmovb
ja
sub
xor
add
lcall
add
jae
adc
mov
sbb
xchg
rcll
in
repnz
add
xchg
or
and
inc
jb
in
push
mov
xchg
mov
sbb
lods
and
pop
mov
movsl
fld1
sub
jo
lods
xchg
dec
lock
mov
mov
arpl
test
cwtl
mov
fdivl
loop
mov
sti
and
arpl
iret
mov
xor
stc
jmp
mov
sub
inc
add
dec
jle
fwait
jne
sarl
inc
and
sub
or
add
sbb
add
jnp
add
lret
pushl
jo
and
movsb
mov
xor
imul
xor
push
adc
sub
sbb
mov
push
jmp
mov
mov
mov
push
rcrb
aad
push
pop
jns
add
imul
sbb
popa
je
jle
imul
xchg
ret
add
mov
data16
rcr
ret
mov
xor
je
add
jno
jecxz
or
lds
icebp
jl
jle
push
movsl
sbb
popa
jmp
xor
mov
jecxz
dec
rcrb
jbe,pt
xor
dec
mov
cli
incl
insl
mov
outsl
cwtl
add
jnp
fxch
stos
popa
dec
es
add
imul
aaa
bound
add
cmp
test
subb
aaa
loope
inc
inc
sbb
aaa
jne
xor
inc
xor
into
inc
pop
pop
sub
rdtsc
pop
cmpsb
add
pop
in
mov
enter
clc
mov
jo
iret
rcll
testb
pop
jle
add
and
ret
adc
scas
lods
mov
addr16
add
push
add
sub
push
inc
lea
ret
stos
ret
das
cmp
push
add
arpl
xchg
popf
mov
jnp
ret
insb
stos
add
cmp
cmpsl
lds
clc
inc
add
cmpsb
xchg
jle
rcrb
ja
jb
mov
rclb
mov
gs
inc
push
push
mov
stos
sbb
addr16
inc
jae
inc
lcall
stos
cli
xor
mov
inc
sti
ret
sub
add
popf
sub
ds
xor
sarb
les
xchg
inc
test
ret
pop
and
out
in
cmp
adc
dec
sbbl
adc
mov
add
pop
fwait
xchg
or
push
out
or
jecxz
and
fistl
iret
fwait
inc
jge
lods
inc
imul
fbld
sti
jb
mov
sahf
adc
addr16
xor
xchg
mov
sub
dec
xchg
lahf
icebp
mov
call
pushf
lcall
fwait
cmp
mov
or
cmp
mov
and
das
into
movsl
sbb
sub
and
scas
test
fstpt
inc
or
popa
lahf
xor
inc
pusha
sbb
cmc
subl
pop
out
iret
sub
add
in
or
ror
add
movsl
clc
cmp
hlt
xor
lret
ja
outsl
mov
ss
inc
cmp
adc
inc
out
xor
sti
xor
mull
inc
xor
pop
nop
xchg
add
mov
aas
and
add
xor
int3
xor
inc
mov
pusha
out
add
cmp
push
jo
xor
cmp
xchg
add
inc
aas
sbb
jno
mov
add
pop
push
cmp
ja
jbe
pop
or
inc
test
or
aad
inc
aas
fstpt
add
jg
cs
es
add
popf
leave
sub
xchg
rorb
cmp
movsb
add
mov
pop
stos
mov
and
inc
in
or
xor
shlb
cli
fnstenv
push
leave
pop
add
cmp
jns
aad
push
insb
cmp
sub
add
les
jle
and
add
rclb
adc
xlat
shlb
jecxz
and
and
jae
add
jo
cmpsb
pop
adc
orl
mov
xchg
lahf
and
repz
aas
jns
jno
rorb
ja
out
mov
lret
and
adc
popw
inc
mov
popa
incl
pop
xchg
or
push
push
and
out
scas
push
inc
mov
inc
jecxz
xor
mov
and
push
sahf
jg
add
mov
sar
push
pop
pop
dec
stos
pop
xor
xchg
xlat
push
mov
xor
test
inc
mov
das
lcall
add
push
jo
aas
call
sbb
xchg
ret
inc
sbb
loopw
inc
shlb
lods
mulb
pop
repz
sub
sub
push
dec
mov
shl
rclb
pop
out
outsb
lds
cs
xor
mov
xchg
or
popa
mov
lock
add
pop
mov
add
add
sub
lahf
and
addl
outsl
adc
push
mov
or
add
jl
add
jae
add
xlat
mov
sbb
dec
in
dec
leave
in
mov
mov
insb
add
mov
xchg
add
pop
xchg
cmp
andl
sub
push
mov
mov
push
daa
mov
mov
mov
cltd
or
or
and
add
push
test
and
push
out
push
shrb
add
enter
pusha
dec
cs
jmp
xchg
mov
sbb
fists
rol
cmp
adc
pop
inc
imul
stos
fcoml
add
push
insl
cmp
mov
or
lods
add
mov
dec
mov
inc
orb
mov
aam
add
pop
andb
rolb
fs
dec
repnz
lcall
in
std
jo
xchg
and
ja
jo
jge
pop
flds
add
push
jle
xchg
mov
jo
mov
dec
add
jb
popf
push
sub
in
or
cwtl
inc
add
ret
dec
cs
sbb
lods
cmpsb
add
or
loopne
out
repnz
popa
adc
inc
ja
int3
jle
out
aas
nop
inc
sub
xchg
and
call
add
fdivrl
xchg
xor
jl
jb
and
push
adc
xor
pop
adc
fwait
ret
ficoms
mov
add
das
inc
stc
add
push
subl
cmp
aaa
jp
and
sbb
stc
shll
cmp
mov
xor
and
loopne
add
add
cli
lret
mov
sub
call
mov
or
pop
iret
ret
lods
sub
scas
mov
sub
lret
or
and
aaa
pop
or
jno
test
lods
cmp
jbe
and
rclb
xor
test
mov
rorl
push
out
lods
lahf
lcall
jo
mov
test
fldenv
mov
hlt
data16
fbstp
add
lods
outsb
sbb
or
out
fadds
push
cs
jae
xchg
mov
scas
mov
mov
adc
js
cmp
xchg
lock
lea
fs
in
leave
inc
mov
sbb
jle
filds
stos
call
mov
add
movsb
cmp
clc
pushf
into
mov
gs
sub
int
pop
icebp
add
push
jg
cmp
js
mov
add
loopne
ficoml
scas
sarl
push
add
and
pop
add
mov
xor
push
mov
stos
out
push
outsb
cmp
mov
sti
jb
add
add
jl
xor
xchg
inc
or
add
and
mov
lcall
cli
push
mov
lahf
adc
sbbb
sbb
nop
jnp
dec
pusha
and
mov
xchg
dec
dec
test
ficomps
pop
enter
cmp
adc
cld
mov
add
adc
mov
addb
cmp
pop
push
jns
or
lds
inc
fstps
pushf
shlb
jp
cmpsl
das
push
pop
bound
rcl
fstps
add
sbb
mov
add
sub
fstl
imul
test
dec
dec
mov
push
add
fxam
jp
fs
int
push
fucomp
or
andl
std
sbb
xor
lahf
and
or
ljmp
mov
add
movsb
ds
pop
fadd
dec
int3
adc
fildll
add
jp
lods
test
sahf
mov
inc
inc
jne
xchg
icebp
aas
lahf
and
add
es
adc
mov
push
cs
call
sub
pop
xor
aaa
push
imul
add
and
out
rcrb
test
imul
mov
add
inc
fbstp
add
add
mov
popf
pop
add
loop
test
jbe
inc
sub
hlt
inc
ljmp
jg
dec
fwait
scas
inc
addr16
push
std
test
add
imul
into
inc
and
sbb
outsl
xor
fildl
and
sbb
roll
fwait
je
pushf
jnp
inc
jmp
movsb
mov
fstl
add
cmp
pop
sarl
in
sub
push
fisubl
add
cltd
rcl
es
popf
sub
daa
and
add
mov
fcmovb
sbb
or
mov
push
xor
xor
aam
inc
cmpsb
jl
rolb
and
pmulhw
push
cmp
lcall
jp
pop
pop
pop
and
and
cmp
clc
add
mov
inc
inc
adc
rcr
mov
dec
sub
lret
and
add
sub
jecxz
or
jmp
out
add
inc
or
ljmp
or
pop
test
jno
push
mov
mov
ret
add
cld
mov
inc
popa
inc
hlt
scas
pusha
fistps
addl
mov
dec
iret
inc
loop
or
out
jae
in
roll
es
ss
mov
rcrl
fisttpl
or
test
mov
mov
popf
test
pop
and
add
push
sahf
adc
or
inc
fimull
fwait
rcrb
scas
ror
sbb
popl
mov
xchg
mov
ja
cmp
ret
inc
push
dec
push
cmp
jno
cwtl
cmc
aam
push
sub
add
add
hlt
mov
inc
xchg
je
push
into
mov
xor
fs
add
call
sub
leave
sti
pop
pop
pop
nop
sbb
add
js
sbb
mov
call
sbb
repnz
inc
push
mov
into
and
in
add
pop
adc
std
cmp
mov
jge
add
addb
push
cmpsl
mov
xchg
inc
cmp
repnz
mov
cmc
out
xor
pushf
mov
stos
pop
jge
aas
sub
test
popa
xor
repz
sbb
lret
push
cmc
lret
ficoml
repz
dec
push
pop
mov
xlat
addl
and
fs
inc
cmp
pop
shrl
dec
popa
dec
and
ds
ljmp
or
outsl
js
dec
sub
sahf
jg
jae
fisubs
jbe
aas
mov
jno
pop
out
add
ljmp
stos
push
repnz
inc
adc
mov
and
or
dec
inc
push
adc
jns
movsb
dec
pop
add
dec
dec
pusha
pusha
out
ljmpw
ds
jle
lods
test
sbb
xchg
jnp
inc
iret
xchg
test
sub
add
push
xor
inc
push
cmc
insb
cwtl
lahf
xor
mov
mov
and
add
das
popf
ss
sub
lds
imul
push
xor
cmpsb
lea
int3
shll
pop
mov
mov
cmp
pop
cmp
ljmp
fbld
insl
add
test
loopne
and
push
or
lock
add
xor
repz
rolb
inc
mov
hlt
add
fsubrs
inc
dec
and
ja
out
cwtl
mov
sub
mov
add
fnstsw
dec
inc
cmp
int
dec
adc
popf
add
and
aad
aas
jg
add
sar
std
mov
shll
cmpl
shll
test
inc
cmp
add
arpl
add
cmp
cmp
mov
inc
and
lea
cld
mov
shlb
hlt
jae
push
out
sub
fildl
and
add
fldcw
add
push
mov
cmc
sbb
or
test
mov
push
aaa
insl
xor
xor
outsb
cli
sbb
xchg
add
and
or
add
out
and
cmpb
and
cs
outsl
leave
add
es
lea
imulb
popf
insl
loop
sarb
push
xchg
in
js
icebp
addl
cmp
pop
push
jb
test
inc
jl
aad
test
sbb
mov
or
insl
outsl
cld
arpl
iret
imul
seta
jnp
les
and
cmp
inc
xchg
add
fnstenv
imul
add
cld
pop
out
popf
addr16
cmp
mov
mov
mov
sub
shrb
in
shll
test
call
add
loope
push
in
ret
and
rolb
mov
mov
orb
clc
xor
xor
addb
cltd
cmp
in
sti
inc
add
mov
insl
pop
jae
sbb
or
loopne
jle
imul
test
lds
pop
test
inc
adc
xchg
add
shr
sub
int3
push
mov
push
in
and
and
dec
mov
test
daa
daa
lock
jnp
xor
xor
add
mov
loop
test
add
rep
daa
xor
test
fsubr
cmp
stos
add
enter
stos
pop
add
cs
lods
inc
sbbl
lock
mov
sub
and
scas
sub
pop
into
fstl
add
add
mov
out
in
into
xchg
cmp
cwtl
inc
ljmp
les
xor
xor
inc
loopne
inc
cmp
stos
cmp
jecxz
push
stc
outsl
add
or
add
fildl
mov
push
int3
dec
mov
std
popa
jmp
cmp
sub
inc
cmp
orb
andl
scas
sub
mov
movb
lret
fmuls
test
inc
fldl
sub
nop
jns
add
pop
sbb
add
cmp
or
fisubrs
xchg
es
push
sub
add
adc
jle
dec
dec
mov
movsl
mov
push
shll
in
std
inc
or
dec
je
dec
aas
or
mov
pop
sub
cli
pushf
inc
inc
insb
jle
and
insl
test
cmp
dec
and
ljmp
mov
cmp
ror
iret
cltd
in
and
jo
pop
add
rorb
add
sbb
pop
sbbl
mov
cmpsl
movsl
ss
add
pusha
test
xor
gs
out
jno
mov
cmp
inc
xor
ja
cmp
and
das
enter
jg
sbb
cmp
mov
mov
sbb
aaa
sbb
cwtl
jp
push
loope
cmp
sub
push
and
lret
lock
inc
add
in
out
sti
sub
ja
rcrl
adc
sbb
ljmp
aad
sub
mov
mov
add
out
ret
dec
push
pusha
sub
pop
daa
adc
js
addb
cmc
pop
xchg
ret
int3
mov
cli
inc
inc
inc
xchg
ljmp
mov
add
out
int
shrb
into
inc
and
fiadds
mov
xor
pop
sub
movsb
jnp
in
xor
loopne
sub
mov
sbb
pop
ret
pop
mov
mov
xchg
sub
mov
inc
shrb
out
add
pop
aaa
outsb
hlt
inc
jo
cltd
aam
jbe
jo
xor
rcll
out
and
pushw
pop
xorb
pop
xchg
stc
repnz
cmpsb
test
or
jns
fs
sbb
dec
test
cwtl
adc
inc
add
ss
arpl
pop
lret
mov
add
mov
int
dec
inc
fisttpll
push
fdivrl
repnz
add
insb
cmp
add
cmp
sti
rol
cwtl
jge
sub
xor
add
loop
adc
pop
adc
shlb
sbb
ss
cmpsb
xchg
and
out
add
adc
inc
mov
ret
call
or
pop
sbb
pop
add
jmp
aad
pop
mov
rolb
movsb
dec
in
mov
lds
stos
or
lret
addl
lock
stos
cmp
add
scas
add
lods
xor
popf
imul
cmp
or
les
dec
pop
lret
fidivs
inc
or
cmp
or
sbb
ss
or
push
mov
pop
ss
pop
aam
iret
jge
repnz
inc
xor
or
cmp
mov
dec
add
inc
pop
out
add
and
test
popl
mov
pop
cmp
sysenter
icebp
lahf
inc
lea
fprem1
sub
xchg
add
push
inc
or
into
setb
add
pop
ljmp
loopne
out
add
mov
xor
cmpsb
cmpsl
ret
pusha
and
shlb
jecxz
and
dec
lods
pop
mov
xlat
inc
or
dec
mov
dec
xor
or
mov
mov
cmp
testb
add
rorb
mov
aam
ja
arpl
xorb
outsl
jns
adc
xor
lock
jge
push
push
inc
xor
aad
stc
pusha
jo
jp
jnp
add
xor
xchg
cmp
cwtl
cmpsl
and
and
cmp
mov
stos
ja
and
sti
pushf
xchg
mov
add
loopne
rcr
add
les
add
sarb
sbb
add
mov
inc
cmp
ret
pop
lock
js
lds
xor
ds
roll
mov
push
int
rcll
repnz
or
xor
mov
ret
out
cmp
scas
daa
shlb
leave
pushf
lods
add
pop
pop
ja
xchg
sub
inc
out
xchg
mov
dec
push
imul
cmpsb
ds
and
movsb
dec
xor
je
push
iret
mov
andb
add
stos
pop
bound
mov
push
aas
mov
push
rorl
lcall
add
cmp
push
mov
sbb
addr16
lods
or
sub
sbb
inc
andl
popf
addb
sbb
cmpl
add
scas
cmpsb
inc
jge
stos
lea
cmp
js
lcall
inc
add
ficomps
pop
fisttpl
int
clc
add
xchg
lcall
shl
popf
add
xchg
jne
addb
dec
std
push
mov
inc
adc
nop
add
add
xchg
addr16
sbb
xchg
stos
fs
dec
or
adc
pop
mov
or
les
xor
inc
adc
scas
add
mov
mov
ljmp
mov
push
sbb
rcrb
icebp
pusha
imul
jmp
sub
xor
arpl
imul
mov
inc
mov
add
xor
jecxz
lahf
cmp
sar
push
scas
repnz
aam
cmp
adc
daa
and
add
cmpsb
aaa
inc
add
mov
ret
sbb
loopne
pop
cmpsb
mov
pop
ret
jg
add
sub
int
push
test
add
jle
std
imul
and
dec
xchg
add
fmulp
out
andl
xor
sahf
push
pop
xor
stos
adc
ds
or
push
jno
ss
add
sub
push
lsl
push
stos
gs
xlat
add
sbb
in
inc
shlb
inc
add
ret
cmp
push
sub
jle
mov
icebp
ror
lea
sub
cmp
inc
adc
and
fcmovb
inc
jno
add
stos
stos
daa
mov
psrld
xor
scas
out
cmp
pop
pop
leave
rclb
rcrl
hlt
cmp
ficompl
adc
insb
call
xor
dec
sbb
push
inc
nop
jge
adc
adc
cmp
rclb
cmp
jge
inc
clc
shlb
outsb
sbb
add
sub
inc
and
xor
mov
jle
jg
jnp
add
loopne
popa
xor
push
rcrl
sub
test
xchg
add
jg
xchg
call
sbb
xlat
aas
subl
xchg
adc
xchg
xchg
add
mov
stos
sbb
jb
pushf
outsb
lods
add
push
cli
xchg
add
add
or
add
or
sub
mov
mov
sub
sbb
fwait
into
jmp
mov
xchg
push
sti
push
call
jno
loope
popw
inc
cmp
sarl
ja
adc
adc
out
push
dec
cmpsl
and
sbb
mov
mov
fwait
adc
xor
in
xchg
scas
adc
and
inc
mov
xchg
sbb
clc
rorl
add
sar
ret
ret
cmc
cmpsb
cwtl
test
in
pop
mov
add
in
ja
inc
or
cmp
out
add
cld
add
xorb
rcrb
movsb
add
loopne
daa
lods
iret
scas
aas
add
and
xor
add
pop
sbb
push
pop
jb
fdivs
adcl
adc
push
mov
mov
dec
sti
push
cmp
pop
mov
xlat
sarl
push
push
xchg
xor
xchg
sub
ret
push
xor
bswap
dec
loope
dec
mov
ljmp
xor
add
add
inc
inc
nop
pusha
mov
sbbb
stos
push
xor
and
sbb
mov
fwait
je
inc
stc
addr16
sbb
xchg
add
test
lcall
ja
jbe
faddl
aas
sub
adc
add
inc
cmp
adc
cmp
inc
dec
aas
push
sbb
and
std
push
and
mov
pusha
dec
sbb
add
fmuls
push
mov
push
pushf
adc
mov
pop
movsb
jbe
add
inc
les
aas
lock
push
bound
ljmp
inc
jbe
mov
lahf
adcl
add
jecxz
jmp
lods
push
xor
inc
adc
mov
adc
inc
imul
sub
add
sub
push
mov
sti
rcrl
and
inc
loopne
lret
subl
lods
adc
mov
or
popf
push
push
mov
xchg
jl
in
jp
fiaddl
adc
push
cmp
pusha
mov
add
jae
xor
enter
lods
jge
loope
jl
xor
jae
cltd
and
push
adc
or
mov
out
cli
fisubrs
cmp
adc
in
outsb
cld
insl
into
sbb
or
in
jae
pop
cmp
in
lcall
test
jle
out
mov
ljmp
xchg
cmpl
dec
test
jne
inc
add
cmp
add
mov
outsl
inc
cs
test
mov
and
cmp
cmp
pop
pop
pop
out
xchg
jno
pop
push
xchg
fiadds
std
push
or
sarl
cmp
call
int3
daa
push
inc
gs
std
xor
ja
repnz
add
cmp
pusha
ds
jne
push
int3
dec
or
lcall
lahf
sub
lds
sahf
inc
xchg
cmp
add
jecxz
add
and
mov
mov
rclb
into
or
stc
cmp
add
loope
outsb
mov
ja
inc
popa
out
add
mov
movsb
ret
decb
add
cmp
icebp
popf
imul
xor
sbb
rorb
add
jno
mov
mov
dec
jae
and
stc
aam
nop
adc
mov
jp
and
dec
test
leave
mov
xor
and
mov
push
imul
inc
add
dec
cltd
cmp
mov
inc
cmpsb
int3
add
sbb
or
stos
add
xor
popa
xor
mov
and
mov
rorb
xchg
and
push
xor
cwtl
jecxz
aaa
cmp
adc
and
stc
xor
imul
movsb
fdivl
lahf
mov
add
sub
push
cmp
lret
inc
cld
pop
xor
add
push
icebp
jo
in
xorb
dec
les
hlt
adc
data16
inc
push
lds
cmp
mov
and
push
pop
xchg
push
aas
add
dec
sub
cmpl
loope
inc
pop
or
scas
ficoms
mov
add
fildll
lods
pusha
data16
xchg
ljmp
mov
sbb
push
test
xchg
push
les
jmp
imul
jmp
pop
aad
mov
aam
roll
push
xchg
jl
inc
cltd
cmpsb
lcall
xor
pop
xor
xor
and
sub
xor
subb
add
js
add
sbb
inc
inc
clc
mov
add
into
das
or
inc
dec
in
mov
sub
adc
bound
add
push
add
out
lret
icebp
xchg
stc
sub
in
test
xor
xlat
add
or
jmp
sahf
ret
jle
std
pop
and
pop
sbbb
and
mov
jmp
push
idivb
inc
fiaddl
imul
addr16
negl
in
sub
pop
dec
test
add
mov
add
dec
adcl
and
jae
sbb
ja
cmpsl
shlb
mov
hlt
jbe
jg
mov
shlb
sbb
daa
and
aas
rorl
add
and
sbb
sub
clc
jmp
cmp
popf
inc
jmp
sarb
lock
xchg
pusha
mov
pop
inc
out
test
pop
pop
push
add
mov
andl
sbb
adc
inc
in
push
cmc
cmp
insb
cwtl
mov
add
mov
mov
xor
pushl
push
dec
and
out
popf
iret
and
int3
push
aaa
test
sub
push
mov
pop
fisttpll
sbb
or
pop
xor
out
fiaddl
flds
pop
adc
inc
add
sbb
icebp
sbb
mov
lret
inc
sub
cmpsb
mov
xor
cmp
sbb
ljmp
add
inc
and
add
adc
sub
dec
sub
pop
pop
movsb
xor
outsl
jge
push
xchg
cmp
sbb
pop
fstps
dec
sub
cmc
add
in
adc
ret
lcall
push
mov
xor
lahf
pop
repnz
add
and
add
xor
lret
fmull
lahf
mov
ds
mov
add
pushf
jb
pop
in
adc
pop
dec
andl
fsts
outsl
sub
add
add
pop
add
insl
add
dec
out
hlt
mov
div
mov
sbb
pop
add
jecxz
jmp
push
and
addl
iret
xchg
inc
pop
cli
rorl
into
clc
popa
sub
and
js
aad
cmp
out
jle
push
stc
out
xor
push
fs
cltd
xor
mov
out
inc
mov
fistpl
gs
in
jmp
add
into
dec
mov
jo
mov
sub
shl
inc
inc
pusha
xchg
push
shrl
xor
pop
mov
xchg
mov
aam
shr
inc
mov
imul
mov
rcrb
ss
iret
outsl
add
fisubrl
cli
and
cmp
fld1
jmp
popf
fwait
xchg
add
mov
into
addr16
add
das
sbb
faddl
push
addl
rorb
jo
jge
movsl
mov
out
or
sub
jmp
add
stos
pop
push
std
das
sub
fsubrs
pop
add
sar
ret
daa
and
xchg
cmc
or
testb
and
insb
push
cmp
and
insl
sbb
das
mov
and
int3
dec
ljmp
adc
shll
js
pop
mov
test
mov
dec
push
out
mov
cmp
add
push
dec
cmp
xchg
jo
push
jmp
xchg
rcrb
inc
stos
adc
dec
pop
enter
or
mov
ret
pusha
add
mov
inc
pop
in
data16
mov
inc
jg
add
cmp
mov
push
add
je
push
pop
mov
cmpsb
xchg
push
add
cmp
dec
pusha
pop
arpl
in
stos
roll
rolb
mov
dec
scas
ja
out
inc
ret
test
dec
pop
adc
fwait
in
pop
inc
add
xor
add
inc
push
or
je
lret
xor
pop
sarl
lret
imul
add
sarb
sbb
add
fsubl
lret
pop
and
mov
push
test
fsubl
and
sbb
mov
movsl
sub
pop
popf
add
dec
adc
jecxz
std
xchg
cmc
dec
push
gs
hlt
xchg
add
bound
adc
pop
add
popf
push
sub
dec
dec
or
add
xchg
mov
and
stos
negb
cmp
leave
lret
fs
inc
sub
mov
cmc
dec
nop
dec
sbb
mov
xor
dec
jo
and
loope
and
cmp
insl
iret
ss
mov
pop
and
aaa
inc
add
dec
jnp
mov
psrlq
jecxz
ret
std
pop
mov
fsts
pop
aam
es
into
int3
out
test
jmp
call
mov
cmp
movl
jo
mov
mov
add
push
mov
pop
es
mov
bound
cmp
jge
sbb
mov
fwait
and
push
ljmp
push
in
jecxz
sahf
loope
pop
cmp
mov
jb
movsb
mov
scas
es
sbb
xlat
ss
into
jae
sbb
arpl
lahf
dec
scas
mov
fadds
dec
out
leave
into
fxch
add
mov
mov
push
les
jg
or
adc
sarl
jecxz
push
mov
add
pop
sub
mov
jecxz
fsubr
popa
mov
pushf
dec
jno
mov
filds
pushl
mov
and
popf
add
jne
add
mov
ja
cmp
xorb
pop
mov
lret
scas
scas
add
mov
push
mov
jbe
pushf
jmp
cmp
jae
or
mov
jo
rcll
sub
sub
scas
fisttps
pop
mov
pusha
add
out
xchg
aas
sbb
push
push
sub
inc
pop
cmp
sahf
test
roll
lea
add
in
inc
push
data16
aas
idivb
sbb
rcl
xchg
enter
iret
sysret
pop
mov
stc
mov
jg
out
cmc
neg
and
xchg
mov
dec
dec
test
jmp
rolb
mov
xor
shl
das
inc
call
mov
lea
mov
push
xor
sbb
add
ret
inc
sbb
and
jb
add
mov
dec
inc
add
mov
dec
lock
mov
xor
mov
jle
and
mov
adc
loope
pop
into
xor
sub
test
jecxz
add
or
add
jl,pt
inc
in
loop
mov
sbb
loopne
or
pop
and
imul
xor
test
jmp
aam
cli
jns
and
cmp
mov
xchg
add
lock
int
cmp
rcrb
push
add
shl
adcl
cmp
repz
xor
jp
xchg
mov
push
pop
dec
cmp
rorl
popa
adcb
pushf
mov
shrb
adc
inc
into
stc
sub
mov
cli
xchg
call
add
movsb
fldt
jp
shrl
rclb
icebp
cmp
add
add
ret
sahf
clc
push
mov
fwait
imul
pusha
loopne
dec
or
ror
mov
shl
adc
shl
xchg
fs
test
add
xchg
push
xchg
sub
scas
mov
mov
push
pop
in
icebp
in
add
fucomi
push
sub
add
cli
hlt
add
cmp
xor
mov
scas
add
push
fsubrs
add
jne
test
mov
mov
and
push
out
sub
jno
xor
pop
inc
add
in
das
push
mov
and
lret
adc
add
faddl
xchg
jmp
push
ds
add
xchg
je
cmpsb
ficomps
add
inc
loopne
push
hlt
out
clc
dec
jmp
cmp
xor
rolb
jno
outsb
pop
not
hlt
test
fidivrs
add
jbe
push
add
mov
push
or
sbbl
testb
jne
pusha
lcall
std
lock
fst
jnp
add
cmp
in
loop
sti
inc
and
add
enter
cmp
mov
js
int3
jecxz
enter
test
cmp
push
inc
in
mov
mov
loop
xchg
add
stos
lahf
sbbl
js
cli
push
xchg
int
mov
pusha
mov
dec
mov
dec
pop
test
pop
stc
mov
add
aas
mov
add
fldcw
int
pushf
push
sub
add
fs
cs
into
jecxz
and
jl
in
or
and
nop
movl
cwtl
jge
in
or
aad
cli
testb
mov
push
jae
and
mov
fs
cmpb
add
sbb
lret
int
mov
push
and
jbe
aas
and
or
mov
add
jnp
xchg
icebp
gs
rorb
mov
subl
mov
js
dec
pop
out
add
mov
test
pop
jns
xchg
xchg
or
rclb
mov
dec
cmp
jmp
push
pusha
pop
push
pushf
xor
jecxz
pushf
leave
int
xchg
xchg
mov
push
into
shl
mov
xor
xor
jg
sbb
out
sahf
cs
jge
sub
mov
js
pop
data16
inc
inc
mov
sbb
cmp
xor
push
fsubrp
ds
clc
int3
push
loopne
pop
and
mov
add
ret
je
sbb
pop
cmpsb
add
xchg
sub
inc
inc
iret
inc
test
and
cmp
and
cli
scas
add
add
test
sbb
push
dec
push
inc
add
push
in
xchg
int3
cwtl
add
adc
sub
sub
andl
sarl
cmp
std
cs
into
xor
mov
mov
lahf
arpl
daa
add
push
pop
mov
add
lahf
add
clc
add
mov
stos
add
mov
out
std
adc
mov
jge
cmpsb
add
subl
sub
xchg
add
xor
inc
mov
shrb
xor
xor
das
add
push
stos
jbe
and
jp
push
inc
pushf
and
or
call
ds
adc
rcll
add
dec
mov
add
sarb
pop
mov
add
pop
je
ret
mov
ret
add
mov
mov
pop
movsl
fs
mov
pop
add
cmp
mov
or
imul
inc
push
std
jne
and
fcoml
sub
mov
or
scas
inc
dec
push
rcl
add
lds
sbb
pop
out
jmp
jbe
scas
clc
repnz
mov
pushf
xchg
dec
lahf
xor
pop
xchg
add
xlat
aas
jecxz
dec
enter
out
stos
je
jmp
adc
add
lret
stos
incl
sbb
out
mov
xor
cmp
loopne
push
inc
add
adc
ss
cmp
push
fdiv
add
xor
adc
xor
add
test
add
jmp
cmp
cmpsb
jle
andb
pop
jo
sbb
repz
jb
out
cs
lock
add
or
out
jg
xchg
ret
inc
jecxz
std
and
insl
dec
inc
mov
dec
shlb
xor
add
adc
xor
addr16
cmp
or
sub
add
or
sub
mov
add
cmc
mov
add
hlt
int
add
xchg
arpl
andps
and
call
mov
in
rolb
stos
stos
cli
jg
cld
popl
mov
or
jle
dec
xchg
inc
loop
icebp
add
fstl
ret
popa
cmp
lock
and
add
xorl
mov
push
movb
pop
inc
mov
call
outsl
imul
pop
xorl
sub
add
push
mov
mov
add
sub
push
xor
lock
enter
popf
mov
add
mov
cli
jae
adc
sub
mov
scas
cmc
xchg
pop
popa
and
mov
rclb
mov
mov
xchg
addr16
pop
stc
push
cmp
mov
clc
repz
test
pop
addr16
scas
xor
sub
xor
cmp
cmpsl
mov
add
fcmovbe
adc
jne
add
lea
addl
mov
and
cs
std
call
adc
jle
sub
add
lret
xor
sub
add
push
jmp
dec
add
jnp
xchg
xchg
adcl
mov
mov
xor
jmp
mov
inc
or
imul
dec
sbb
xchg
mov
pop
inc
clc
add
sub
jno
jmp
inc
and
rcrb
rolb
in
xor
out
loope
faddl
add
icebp
jns
test
pop
add
lahf
aad
add
stc
das
cmp
cwtl
leave
mov
dec
adc
inc
out
es
pop
sbb
int3
add
sub
ds
jne
add
push
adc
add
leave
rolb
mov
or
sbb
push
mov
add
call
adc
add
pop
test
outsl
jns
mov
cmp
add
dec
xchg
mov
and
adc
int
sub
xor
cmp
lock
dec
sbb
ffree
rol
mov
popf
push
xchg
sub
fstps
ja
call
add
push
jle
ds
push
icebp
shrb
addl
ja
addr16
iret
ljmp
lock
ret
mov
dec
in
lret
add
pop
push
add
ret
mov
sub
mov
mov
lcall
pop
mov
call
shl
ljmp
inc
pop
adc
mov
addb
pushf
je
jns
add
fdivl
pop
mul
pop
rcl
jnp
insb
leave
cmp
add
sahf
add
and
es
dec
dec
movsb
leave
and
fsts
out
cs
bound
and
and
jb
xchg
and
or
add
sbb
pop
shl
test
nop
cld
rolb
sub
out
in
xchg
xorl
shl
mov
pop
lret
add
sti
push
add
shrb
pop
imul
push
inc
xchg
add
sub
popa
xor
dec
or
leave
cmp
xchg
xchg
cs
mov
xchg
add
call
enter
sub
xor
cmc
xor
push
addl
stc
leave
adc
mov
repnz
popf
outsl
faddl
xor
xor
cmp
add
insb
push
out
sub
cmp
and
push
nop
mov
or
jns
add
push
mov
fiadds
add
push
aad
pop
push
inc
and
out
addb
inc
ret
ficoml
mov
sbb
sbb
inc
push
xor
sbb
pop
mov
arpl
jnp
lcall
std
push
mov
mov
adc
cltd
in
ret
push
add
and
mov
add
pusha
xchg
inc
iret
ret
and
push
add
stos
faddl
fs
outsl
mov
sbb
in
add
xor
iret
stos
xor
pushf
hlt
test
fisttps
or
push
dec
mov
ret
mov
add
xchg
aad
sahf
push
pusha
dec
mov
jb
jmp
or
mov
mov
lock
pushf
or
fcmovnb
fsubrs
and
jbe
xor
cwtl
test
je
aas
add
test
push
loope
loopne
and
mov
add
scas
cmp
add
sbb
adc
inc
js
out
push
pop
pop
add
xor
fiaddl
adc
mov
shll
cld
mov
sub
loopne
mov
mov
imul
faddp
aas
outsb
and
xchg
jl
mov
sbb
int
popf
dec
fbld
jp
loopne
sub
scas
idivl
loope
add
ds
dec
loop
test
dec
cmpsl
xchg
popa
and
pop
xchg
xor
mov
sbb
in
mov
insl
or
sti
adc
sbb
xor
fdivrl
popa
pop
loope
shll
rcll
stos
or
mov
sbb
in
add
add
insb
shrl
add
sti
fcompl
cmp
mov
mov
addr16
add
movsl
loope
mov
or
sahf
nop
add
mov
and
and
xor
xchg
xchg
push
stc
xor
add
pop
add
jb
xor
dec
repz
and
shl
pop
fwait
xchg
or
addl
jae
inc
add
push
fildl
inc
dec
xor
sub
mov
lods
or
jae
mov
mov
push
xlat
add
and
add
lret
mov
pushf
jg
dec
add
lea
shll
and
or
rorb
mov
push
cmp
or
jns
jecxz
aas
add
es
arpl
out
or
mov
jb
xor
and
ret
addr16
or
stos
adc
add
cs
in
adc
popf
in
ss
sub
out
inc
data16
xor
aas
in
push
sbbl
cmp
mov
fnstsw
cld
outsb
pop
inc
add
fldenv
pop
and
xchg
dec
data16
fimull
push
stos
push
xor
cli
mov
jne
mov
out
add
imul
fnstsw
mov
lods
add
insl
xchg
sahf
je
int3
inc
xchg
sbb
cmpsl
xor
mov
add
mov
imul
mov
hlt
mov
cmp
mov
sbb
jno
or
mov
test
mov
pusha
sahf
pop
add
sbb
jo
jno
rcll
cmp
ret
and
xchg
jp
inc
xlat
in
cltd
jnp
ja
cmp
fiaddl
call
jge
cmp
xor
sarl
jg
pop
out
enter
leave
add
fisttpl
mov
loopne
fdivp
inc
insb
ret
rcr
inc
cmp
ljmp
fsubs
lods
xchg
pop
out
pop
cwtl
loopne
scas
in
in
xor
gs
add
rcrb
aad
mov
fisubl
es
in
mov
dec
dec
rcr
test
scas
nop
les
adc
push
add
jl
cmp
inc
xchg
push
fwait
cmp
lahf
mov
sarb
test
movsb
add
fs
add
fnstsw
or
addb
and
cmp
mov
add
ret
mov
imull
ljmp
add
je
pushf
std
add
pop
mov
add
cmp
mov
in
int
mov
cmc
jbe
cmp
sub
xchg
cmp
push
xchg
lea
loopne
jg,pt
lretw
lock
cltd
add
cmp
rcrl
fs
das
and
repnz
pop
js
enter
mov
sub
sbb
or
and
cmpsl
cld
ret
mov
outsl
inc
call
roll
add
subb
addr16
adc
mov
cmp
push
cld
and
jge
mov
xor
out
loope
mov
roll
add
lret
push
fwait
adc
scas
imul
adc
test
pop
jge
mov
pop
out
ficoms
and
jae
loop
sahf
xchg
jle
imul
rcll
jecxz
mov
jns
push
or
push
mov
inc
loope
cmp
and
inc
ret
mov
pop
or
add
movsl
mov
add
and
xor
cmp
lods
sub
ficompl
inc
test
xor
mov
lcall
aad
cmp
push
mov
sbb
dec
add
into
aaa
rolb
sti
push
add
pop
xor
add
pop
mov
push
scas
sti
sbb
adc
push
cmp
cmp
ret
aad
xor
fldenv
mov
out
add
jle
or
pop
addb
jl
outsl
in
add
xchg
ret
icebp
test
adc
arpl
mov
in
mov
cmp
div
cmp
add
add
mov
dec
pop
sarb
push
xor
nop
cmpsb
ret
mov
cmp
adc
addb
push
mov
pop
cmp
inc
mov
mov
jno
out
enter
dec
aas
push
xor
jecxz
pop
popa
int3
adc
ffreep
pop
stos
push
fsubp
pusha
adc
pop
or
inc
add
movb
dec
stos
jns
pop
fs
fsubl
cs
shll
enter
add
xchg
insl
xchg
ja
repnz
xchg
dec
pushf
lcall
mov
pop
cmc
xchg
rcrb
xor
mov
pop
jb
dec
and
or
add
dec
and
mov
iret
jle
fcoms
and
sbbl
mov
adc
sub
or
arpl
in
leave
lcall
inc
adc
faddl
cld
pop
add
jnp
or
mov
add
cmp
sti
inc
push
mov
cli
gs
or
add
sbb
add
cmp
push
adc
rcrb
sti
mov
push
push
and
dec
test
inc
out
xchg
sub
insl
inc
rolb
lock
and
add
pushf
inc
xchg
add
jns
sub
dec
and
add
fsts
inc
int
sti
cmp
or
mov
add
lock
or
fisttpl
add
cmp
jp
jmp
call
aad
pop
sub
cmpsl
lret
pop
push
sbb
stc
sbb
jo
ss
loope
lods
sbb
xor
jecxz
popf
ds
sub
imul
shrb
sbb
dec
sub
es
push
out
xchg
lahf
mov
rcrl
sbb
add
mov
inc
add
ror
sar
iret
or
nop
push
jae
add
inc
les
movsb
xlat
ficoml
jp
iret
jno
fdivl
add
push
add
mov
inc
push
stos
jecxz
je
mov
lods
pop
sbb
jl
push
inc
cmp
in
inc
test
mov
das
fwait
nop
mov
ret
inc
cwtl
sub
sub
adc
mov
mov
cli
add
sub
loope
inc
xchg
dec
je
and
jp
pop
rclb
sbb
leave
mov
push
js
add
dec
sbb
sbb
out
push
pop
lea
test
add
sub
pause
dec
dec
lods
pop
lds
mov
sbb
and
pop
popf
cmp
mov
mov
lret
or
rorl
xchg
push
mov
pop
xlat
mov
sbb
mov
inc
dec
insb
inc
fbld
ret
jmp
or
jmp
or
int
mov
test
sbb
mov
mov
cld
test
add
xlat
sti
outsb
add
imul
inc
mov
cltd
in
pusha
mulb
add
fidivs
sub
flds
repnz
repz
test
add
add
aam
sub
sbb
ret
fmuls
stos
roll
xor
add
mov
push
in
out
gs
repz
fldt
xchg
jb
dec
lret
fmull
xchg
xlat
sub
sub
rclb
sbb
in
aas
mov
popa
inc
adcb
rclb
xor
dec
add
aam
jmp
add
movsl
les
add
pop
push
lret
lahf
in
fidivrs
jecxz
pop
inc
call
cmp
pop
incl
ret
push
push
in
add
jg
and
add
adc
pop
test
adc
sub
pop
add
out
aad
jmp
inc
ljmp
sbbl
xorl
jbe
xor
inc
add
xchg
outsb
jle
dec
test
cmp
cmp
jb
ror
add
inc
dec
imul
into
mov
xor
arpl
fidivrl
add
inc
push
inc
repnz
popf
or
ss
add
shrb
loop
das
popl
outsl
fs
jne
icebp
add
cmpl
test
shll
xchg
push
mov
and
imul
pop
fwait
jl
pop
xor
loop
dec
movsl
xor
in
stos
mov
xchg
xchg
jb
rcr
and
fiaddl
pop
sub
bound
pop
dec
adc
sub
nop
pop
out
mov
add
lock
xor
nop
sub
xchg
jo
aam
pusha
xor
jne
push
daa
mov
or
bound
repnz
add
fisubl
mov
scas
mov
mov
jecxz
mov
mov
sub
mov
sub
and
mov
push
mov
pop
push
add
xlat
or
jp
shlb
inc
jl
lret
imul
int
out
mov
sbb
and
lods
mov
cli
cmc
dec
lea
jne
int
pop
and
xchg
add
jg
xorb
jne
cmp
out
add
jmp
fs
cmpsl
cmp
adc
sbb
mov
inc
xor
add
lahf
cmpsl
or
orl
sbb
es
daa
xlat
arpl
bound
mov
cmc
mov
lds
adc
push
ja
push
rolb
ret
xchg
dec
imul
icebp
rolb
lds
lods
lea
push
aad
subb
sub
sar
sbb
and
jp
ds
imul
das
push
cmp
add
sub
add
je
leave
add
call
ja
dec
jg
idiv
sbbb
push
test
sbb
xchg
add
jnp
fldt
jo
mov
insl
inc
lds
add
jne
jg
adc
push
mov
add
bound
add
mov
ss
xor
mov
orb
xor
dec
adc
inc
shrb
xchg
and
push
dec
rolb
stos
push
or
and
adc
xlat
xchg
addl
popf
and
js
add
out
mov
scas
test
mov
sbb
das
popa
mov
add
lods
jle
sbb
insb
add
mov
pop
lret
xorl
ficoml
adc
inc
arpl
imul
adc
js
jo
jb
sbb
add
roll
cwtl
lret
push
mov
add
mov
jns
push
sub
add
outsb
inc
mov
sbb
sub
das
scas
aaa
pop
xor
push
inc
dec
pop
sbb
call
imul
cmp
mov
cmp
inc
hlt
push
ljmp
adc
xchg
xchg
sar
jo
leave
sbb
jp
testb
cmp
mov
shll
lret
test
jno
add
jp
add
rolb
pusha
xor
aam
pop
cwtl
loopne
or
sbb
andl
aad
stc
pop
push
sub
jne
sbb
and
mov
sahf
add
movsl
push
popf
fidivrl
add
jo
jno
push
jns
lods
fdivrs
inc
dec
cmp
push
rorb
or
jb
mov
xlat
ljmp
je
pop
lea
js
aas
sub
xchg
cmp
mov
xchg
test
mov
dec
mov
add
popf
inc
js
and
lret
arpl
ss
adc
mov
sti
movsb
rcl
fstpt
mov
add
jnp
loop
in
add
inc
repz
fdivl
pop
imul
loopne
cmp
fdivl
shll
push
cmp
sbb
lock
test
loopne
push
lret
mov
jecxz
lock
les
loopne
lahf
mov
imul
add
xchg
lds
gs
push
push
ds
dec
add
sub
add
into
mov
mov
cmp
xor
and
test
shlb
out
dec
stos
sbb
repnz
cmp
xor
adc
inc
add
dec
divl
in
dec
aaa
xor
loope
dec
xor
sub
add
pop
cmpsl
les
push
pushl
hlt
sbb
ds
push
shrl
jg
sarl
xchg
add
sbb
jl
jmp
pop
repnz
add
cmp
mov
pop
xchg
add
fcomps
ss
aaa
xchg
shll
repz
nop
scas
and
sub
mov
xchg
or
lahf
mov
icebp
cs
xchg
out
push
sahf
rep
and
add
lret
inc
pop
test
jecxz
jns
hlt
or
adc
xchg
out
pop
movsl
in
std
popf
pushf
jg
push
add
stos
dec
in
pop
les
add
sbb
pushf
add
cmp
lcall
jecxz
pop
and
jb
inc
push
mov
mov
mov
cmp
inc
jbe
sub
repnz
lds
loopne
sarl
es
rol
adc
sub
add
xchg
ror
and
adc
ficompl
pop
add
mov
sbb
xor
dec
iret
cmpsb
or
jb
push
mov
popa
pop
cmp
add
add
sahf
add
xchg
fisttpl
lret
mov
rorl
sub
sahf
out
adc
adc
stc
push
int3
iret
cmp
leave
sub
movsb
and
stos
mov
jle
pop
int3
cmovb
pop
pop
mov
push
in
mov
outsb
sbb
stc
mov
and
add
push
push
xchg
sbb
inc
call
add
lea
adc
mov
cmc
outsl
add
sub
adc
cld
push
iret
inc
ds
push
xchg
dec
inc
stos
pushf
or
add
cmp
pop
in
shrb
pushf
mov
lret
fbld
sti
fiaddl
sbb
xor
daa
out
and
aas
push
xor
jno
push
add
es
add
arpl
iret
addb
pusha
into
and
inc
aam
push
stos
ja
push
lea
mov
add
or
cmp
push
shll
add
cmpsl
iret
mov
or
fwait
shl
in
repnz
xor
out
sarb
rcl
mov
inc
or
and
push
mov
int3
jmp
push
cmp
out
push
xchg
pop
call
dec
push
pop
xor
mov
mov
sbb
or
loope
rclb
or
mov
cmp
lcall
movsb
stos
jg
jne
mov
and
scas
jmp
inc
mov
pop
push
fsubrs
xor
cmp
jae
aad
push
or
mov
ds
dec
lahf
aaa
xor
adc
push
lods
pop
out
pshufw
xchg
dec
and
sub
jmp
rol
cmp
mov
sarb
cmp
aad
xlat
push
les
shll
xchg
or
js
push
mov
repz
imul
mov
add
xchg
jmp
mov
jp
cmpsl
cli
jnp
rcrl
leave
std
xchg
mov
pop
iret
push
and
test
aad
mov
sub
push
ljmp
pop
sub
sub
lea
add
test
out
mov
fisubl
sub
pusha
and
mov
das
cmpsb
adc
lahf
lcall
push
or
inc
mov
mov
jb
mov
mov
add
fs
or
cmp
rcrb
cmpsl
xor
jnp
add
test
add
xchg
add
push
daa
pop
jns
push
lods
sub
and
pop
mov
add
mov
lea
repnz
sar
xor
adc
adc
std
xchg
adc
mov
mov
jl
pop
sbb
add
add
cmpsb
cmpb
and
ret
or
pop
push
add
iret
pop
pop
movsl
add
mov
dec
sub
mov
cs
add
mov
sub
dec
ljmp
mov
fsubl
push
cli
aam
inc
and
add
int3
jle
scas
bound
jmp
xchg
mov
sbb
es
scas
mov
fisubs
ja
dec
xor
adc
lds
mov
stos
add
pop
sub
cwtl
jns
sub
repnz
add
imul
sarb
ds
xor
arpl
call
aam
ljmp
hlt
add
lret
jno
mov
jo
push
mov
add
inc
mov
pop
mov
jb
inc
mov
mov
jmp
mov
fcoml
data16
adc
int3
dec
add
enter
or
sbb
dec
cmp
sub
and
add
mov
pop
dec
pop
xor
add
ficoml
mov
or
fadds
mov
or
mov
mov
lods
movsl
jmp
xor
add
loope
mov
sub
adc
les
add
dec
inc
and
andl
push
mov
insl
sbb
stos
js
lods
sbbb
incb
add
sahf
loop
ret
gs
lods
mov
aad
xchg
fwait
cmp
jb
add
mov
mov
and
hlt
cmp
movsl
add
ds
xchg
jo
daa
incl
pusha
add
stos
cmpl
add
xchg
clc
mov
sahf
lock
sub
pop
or
in
sub
xor
pop
add
adcb
inc
mov
addl
or
stc
ss
mulb
pusha
fcompl
cmp
cmp
enter
out
mov
sbb
cmpsl
rcll
xchg
push
adc
enterw
adc
xor
mov
stc
lock
xchg
bound
inc
cmp
popf
ret
or
pop
inc
test
push
sbb
add
neg
std
xchg
cmpsb
inc
add
xchg
inc
lods
add
dec
jns
sbb
xchg
arpl
and
add
loope
or
xchg
iret
pop
or
cmp
enter
std
or
cmp
inc
adc
inc
les
or
enter
adc
test
negl
inc
mov
pop
sub
mov
lahf
sarb
imul
popf
insw
pop
pop
inc
clc
orl
inc
das
push
loope
lods
xor
daa
adc
pop
cmp
sub
add
sub
add
paddq
pop
dec
mov
add
out
outsl
push
add
jp
add
mov
cmp
xchg
and
in
cmp
push
out
mov
push
jns
push
fnsave
mov
test
add
xor
cltd
push
gs
sahf
rcpps
add
inc
aas
xor
shrl
add
jle
iret
xor
leave
daa
add
xchg
mov
add
mov
scas
lret
stos
mov
and
fisubs
inc
fwait
lea
arpl
dec
out
mov
loop
addr16
or
mov
pop
push
iret
xor
das
int
addl
lods
orb
sbb
add
gs
add
sti
xor
adc
lock
lahf
xchg
loopne
nop
inc
dec
mov
adc
sbb
mov
push
rcrb
add
mov
add
push
out
cs
add
lods
mov
add
insl
xchg
add
cmp
push
inc
iret
cmp
jae
cmp
lret
push
sbb
insl
sbb
jp
lock
mov
test
rcrl
and
fstpl
push
jnp
adc
mov
adc
pop
lahf
pushf
in
pop
xchg
add
and
jp
adc
lret
movsl
test
mov
push
data16
and
repz
in
sarb
pop
addr16
jns
sahf
mov
add
repz
or
lods
sub
adc
ret
pop
cmp
in
rolb
sbbb
jle
add
xchg
mov
mov
stos
shll
adc
inc
and
in
mov
insl
pop
daa
andl
jmp
add
add
push
pusha
fs
adc
lds
and
repz
dec
push
push
add
mov
cmp
jl
sub
iret
mov
std
jle
add
push
aam
movl
fs
hlt
insl
xor
pop
out
inc
mov
and
dec
xor
pop
add
jg
in
mov
je
fdivl
push
inc
add
sbb
push
xchg
xor
add
xor
adc
nop
add
sarb
mov
push
jno
and
filds
lods
cld
stos
mov
jp
enter
rorl
sbb
add
sub
jle
lret
add
and
mov
xchg
popf
add
sbb
lock
add
pop
hlt
inc
push
imul
inc
add
sti
mov
xor
jp
out
dec
inc
aas
fstpt
das
adc
add
or
add
jae
cltd
imul
inc
scas
shrb
or
dec
add
and
push
add
addr16
rcll
leave
cmp
adc
sub
notl
mov
and
pop
jo
je
inc
inc
movb
or
sbbb
sub
pop
ret
cwtl
test
lret
sbb
sbb
les
sub
pop
rcrl
pop
rolb
xchg
in
dec
xor
mov
jmp
ret
xor
dec
js
dec
add
cmpsl
imul
int3
and
add
add
add
sub
andb
push
push
shrl
popf
lods
roll
fs
mov
or
mov
pusha
fcoml
push
add
icebp
mov
mov
pop
xchg
add
dec
mov
push
inc
and
pop
fldl2t
loop
sbb
dec
ret
imul
xor
fcoml
das
dec
out
lods
out
and
inc
mov
aad
or
repnz
movsb
add
jno
push
ds
pop
inc
push
cld
and
rolb
cmp
ret
ljmp
in
mov
add
sbb
dec
sbb
cmp
add
fwait
xchg
push
lds
add
lret
jge
xlat
clc
bound
add
adc
xchg
nop
sbb
mov
std
add
sbb
jo
repnz
pop
emms
pusha
add
testb
jmp
test
sbb
punpckhbw
pop
sbb
cltd
nop
pop
mov
orl
mov
cwtl
mov
pop
fiadds
sub
adc
jl
int
and
jne
add
cmp
push
xor
or
popf
shlb
pop
cmpl
inc
push
adc
sbb
jo
xor
mov
xor
inc
add
fisubs
aad
and
jmp
adc
add
in
scas
out
dec
rolw
ror
mov
sub
push
pop
or
lds
mov
dec
fimuls
sub
cmp
add
loope
add
jle
enter
popa
cli
icebp
xchg
pop
mov
add
mov
or
scas
or
or
cmp
cli
repnz
test
pop
shlb
xchg
in
bound
cmovo
icebp
popf
sti
pop
or
in
and
sub
dec
cmpsl
out
test
loop
push
adc
or
push
shrb
lods
and
insl
cltd
add
jnp,pt
pop
dec
mov
inc
mov
xor
mov
mov
sbb
cmp
incb
jae
push
mov
and
or
icebp
sbb
lret
pop
sti
add
repnz
sbb
fidivrl
sub
int3
mov
adcb
les
xor
mov
add
xchg
movsl
push
mov
jo
bound
jnp
push
add
scas
or
daa
sub
dec
ret
gs
or
xchg
inc
stc
out
adc
or
nop
hlt
or
cs
adc
leave
addb
and
mov
push
fcomp
jne
jle
testl
jp
add
dec
mov
daa
mov
push
mov
inc
shrl
add
stos
ljmp
faddl
pop
outsl
in
test
cmp
sub
rcrl
dec
aaa
or
in
repz
push
ret
scas
ljmp
fwait
mov
add
cmp
sbb
call
ljmp
dec
jg
sub
xor
or
inc
add
mov
pop
or
or
lods
in
aaa
add
lods
lea
xchg
adc
test
add
cmp
addb
mov
js,pt
iret
ficomps
and
aad
add
mov
pop
lahf
repnz
sub
test
cmpsl
xchg
adc
mov
out
ret
loopne
insb
inc
and
dec
inc
pop
add
sub
call
loopne
movsl
lret
dec
adc
add
jmp
adc
cmp
xor
add
mov
dec
imul
add
jns
out
pusha
mov
jne
test
test
or
test
inc
mov
and
push
xchg
fwait
and
add
outsb
scas
mov
nop
inc
loopne
jmp
lock
jg
out
mov
pusha
mov
mov
xlat
xor
imul
add
stos
mov
add
dec
pop
lea
test
imul
mov
mov
notl
in
mov
pop
dec
push
sarl
xor
insb
int3
push
adc
mov
mov
mov
jno
rcrl
cmp
dec
push
xchg
inc
pop
inc
stos
cli
ljmp
pop
cmp
lea
jo
aas
push
ljmp
test
arpl
daa
addb
xor
and
pop
shrl
inc
mov
and
add
and
add
mov
lock
jne
mov
pop
mov
mov
adc
xchg
outsl
mov
jns
xchg
inc
adc
in
sub
push
push
adc
test
and
movsl
pop
sub
test
mov
dec
add
imul
in
push
lcall
clc
sbb
aam
inc
or
int3
stc
dec
loope
and
mov
fldl
out
push
add
pop
cmpsb
mov
xor
add
or
shll
jmp
pusha
mov
mov
cld
and
es
lods
inc
mov
mov
lock
incb
sub
add
xchg
push
test
push
jle
jb
mov
mov
dec
mov
in
mov
push
cmpsl
push
pop
out
mov
sahf
add
in
jle
dec
push
cmp
jbe
cmp
stc
xchg
and
sub
pop
inc
push
pop
mov
xchg
inc
in
add
rorb
sbb
add
test
int
xchg
jmp
mov
pop
popa
dec
add
out
lret
movsb
sub
add
scas
outsl
xchg
pop
push
mov
es
mov
test
cmpsb
mov
mov
popa
sldt
sbb
aam
icebp
push
add
ss
int3
inc
push
add
inc
nop
xor
inc
jcxz
jns
aam
jae
inc
lret
add
xor
jns
mov
add
enter
sub
add
lret
iret
or
or
xor
insl
jl
imul
dec
icebp
bound
popa
popf
pop
lods
roll
pusha
push
test
adc
jp
mov
cltd
sbb
divl
add
xorb
loope
add
sbb
and
in
jns
shl
xlat
adc
cmp
pop
and
jg
popf
in
mov
cmpsb
es
cmp
popa
jmp
sub
fsubrl
dec
mov
aas
inc
in
add
jge
or
xchg
adc
rep
add
stc
fildl
fsubs
pushf
iret
or
cmp
add
sarb
pop
or
cmpsl
add
sub
mov
adc
and
or
push
cmp
add
add
loopne
test
add
inc
inc
inc
mov
leave
rcrl
inc
add
ljmp
push
add
xchg
test
insb
mov
mov
sar
and
push
mov
lods
add
inc
mov
aad
nop
add
mov
inc
add
sub
sub
shll
add
mov
xor
dec
sar
test
mov
mov
xchg
xor
or
cmp
cmp
xchg
mov
jne
inc
mov
int3
pop
lcall
or
sub
push
add
scas
sub
fsqrt
adc
cmpsb
test
mov
test
mov
mov
adc
jae
leave
xor
fwait
rcll
int3
dec
mov
loopne
jns
mov
lods
inc
adc
sub
xchg
jg
aad
or
lahf
push
xchg
int3
xchg
lds
dec
jbe
into
rolb
sbb
mov
pushf
sub
test
shrl
mov
or
addb
ja
ss
add
mov
inc
sarb
test
ss
push
sahf
add
inc
cli
adc
movsl
jge
lea
repnz
dec
jbe
adc
sbb
mov
lds
stos
cmp
subl
aad
jg
flds
cltd
sbb
dec
das
std
sbb
xor
xchg
cmp
lods
in
andl
fdivrl
sarl
mov
ficomps
ljmp
pop
test
jmp
and
data16
xchg
add
inc
inc
outsl
adc
add
dec
scas
ja
push
xor
shl
cmp
jge
cmp
hlt
les
imul
xchg
adc
add
and
sbb
insb
xor
adc
mov
repnz
sub
add
shl
mov
adc
mov
and
jl
ds
clc
sub
adc
xor
mov
decb
cmp
orl
cmc
je
jecxz
adc
add
pop
xchg
jle
sub
adcb
jmp
int
inc
xlat
add
and
inc
pushf
shr
pop
addb
sbb
add
inc
mov
lcall
cs
add
test
dec
das
sbb
sub
pop
cmp
lods
jae
cmp
and
inc
stos
jnp
add
out
sub
lods
xchg
scas
cwtl
or
or
mov
mov
out
lret
out
push
enter
add
fwait
lret
pop
sbb
sub
adc
inc
pop
scas
add
data16
leave
rolb
nop
fimull
shrl
and
outsl
test
repnz
incl
je
dec
dec
paddsb
cmp
scas
jecxz
rcrb
adc
cmp
add
add
cmovnp
mov
add
je
adc
add
jge
pop
push
out
and
dec
lcall
add
in
add
pop
xchg
icebp
inc
inc
adc
mov
sbb
mov
clc
lahf
push
mov
add
movsl
add
lret
fdivrl
mov
or
lds
pop
mov
popa
js
push
fst
into
add
repnz
adc
cmp
mov
enter
cmpb
xor
outsl
inc
shll
mov
dec
sbb
jo
lea
mov
sbb
cmp
or
jmp
add
cwtl
rcrb
imul
add
mov
fisttpl
lds
icebp
xor
cmp
loopne
ret
pop
fsubr
xor
int
dec
das
out
add
and
ds
mov
pop
adc
gs
mov
add
in
rorl
leave
hlt
add
sub
sbb
fs
pop
lret
aad
or
add
pop
mov
pop
xor
mov
add
stc
xchg
push
lea
es
add
sub
aaa
pushf
das
jp
add
in
lret
movsb
dec
mov
pop
add
loope
xchg
nop
sub
rolb
cmp
fcoml
push
test
mov
add
adc
dec
sub
jg
add
dec
xor
inc
imul
hlt
xchg
sub
iret
icebp
jmp
add
pushl
hlt
xor
int
imul
aas
testb
add
and
cld
test
scas
add
addr16
sub
add
push
aam
and
inc
xchg
cwtl
pop
xchg
push
jae
cmp
mov
imul
sub
dec
fneni(8087
aad
add
mov
jns
inc
cmp
les
add
cmp
xchg
cli
pop
mov
lock
das
xchg
xchg
add
sbb
sub
jae
loop
clc
mov
or
sub
aaa
xchg
std
scas
pop
dec
add
jl
xchg
mov
or
insl
aad
push
mov
sub
add
icebp
inc
push
mov
push
lods
fnsave
sarl
mov
movsb
jecxz
add
scas
xor
lock
and
rcr
mov
pop
add
jl
push
jno
xor
enter
add
lret
js
fimuls
inc
mov
inc
ret
adcl
jne
psrlw
jmp
xor
movsl
add
ljmp
ja
xor
je
stos
jbe
adc
sti
mov
jle
jmp
shlb
jns
pop
sbb
cltd
cmp
sbb
add
sub
inc
aad
loopne
mov
cmpb
int3
mov
mov
insl
lods
add
push
leave
rcll
dec
inc
add
stos
cld
inc
jns
adc
xchg
lret
movsb
and
push
inc
add
pop
xor
outsb
iret
pop
adc
or
dec
push
and
adc
sub
dec
nop
inc
ret
cs
imul
inc
inc
cmp
sbb
lds
movsb
stc
call
je
pop
and
mov
push
cmp
xchg
cmp
push
int3
inc
dec
and
fcompl
in
sub
arpl
inc
push
xor
inc
sub
and
add
inc
lods
ret
cwtl
add
mov
flds
orl
or
das
mov
jae
push
cld
sub
push
pop
push
push
sbb
and
adc
xchg
mov
mov
int3
in
add
dec
sbb
or
add
mov
test
mov
add
pop
mov
or
aaa
cs
add
xor
inc
int
lea
dec
daa
andl
pop
inc
sbb
push
jne
add
cmp
xor
nop
shrb
sub
push
ljmp
jge
jg
aas
xchg
rcr
and
bound
es
mov
andb
lds
push
ja
xchg
andl
xchg
add
sti
rcll
data16
ret
dec
sbb
inc
push
sbb
sbb
mov
cmp
add
adc
mov
push
xor
test
cmpsb
test
cmpb
or
push
mov
mov
jmp
dec
add
xchg
daa
mov
mov
sbb
and
popa
add
mov
xchg
add
scas
push
inc
shll
adc
rolb
lret
inc
movsl
xor
lea
jbe
adc
mov
enter
adc
sub
jmp
mov
leave
nop
add
mov
sbb
loop
pop
add
sti
mov
insb
fldl
mov
add
or
push
fwait
jecxz
jmp
in
cwtl
add
jp
mov
in
je
sbb
add
int3
insl
cli
arpl
dec
mov
popa
xor
push
icebp
js
popf
sbb
mov
push
es
jp
dec
bnd
cmpsb
add
rdpmc
iret
xor
sub
fbld
add
fiaddl
ret
adcl
loope
mov
add
lds
sahf
movsb
add
sbb
xchg
outsb
sbb
shll
fadds
dec
lods
lods
mov
cmpb
sar
pop
mov
jo
rol
fcomip
jb
sbb
push
add
aad
decl
inc
mov
leave
jl
cmp
jmp
pcmpgtb
ss
jae
add
adc
push
dec
mov
jg
divl
pop
mov
push
jle
push
add
adc
scas
pop
movsb
mov
sarl
xor
and
movsb
jmp
cwtl
inc
adc
cmp
loopne
lods
sub
call
mov
and
add
outsb
adc
enter
and
xchg
jle
mov
fcoml
into
loopne
pushf
mov
inc
in
orl
sub
add
jge
or
push
mov
mov
push
pop
add
dec
call
inc
xchg
and
pop
mov
sub
mov
sbb
nop
sub
mov
add
stos
add
add
aad
cmp
push
cmp
inc
jae
and
dec
lea
adc
sbb
adc
mov
loop
scas
sbb
enter
add
fstps
into
mov
and
sbb
pop
sbbb
sbb
pop
add
aad
cs
shr
mov
push
fistps
inc
sub
xor
shrl
or
inc
push
xchg
sbb
bound
rcrl
repnz
or
mov
das
int3
lret
push
and
add
mov
sbb
daa
pop
pop
mov
mov
gs
and
int3
dec
add
sbb
negl
addb
add
stos
enter
or
jae
fsubs
add
add
ja
minps
cmp
xor
test
dec
sbb
icebp
adc
xchg
mov
add
add
push
inc
inc
ret
push
xchg
ret
inc
js
out
or
xorl
ret
adc
jl
in
mulb
test
scas
jecxz
sti
shrl
ja
push
or
adc
sub
outsb
inc
xor
add
cmc
xchg
or
add
push
mov
out
ret
jmp
je
adc
incl
scas
daa
and
mov
fmull
push
out
inc
fucomi
cmc
jp
and
orb
bound
cmp
and
ret
add
push
sub
adc
test
fdivr
rolb
arpl
nop
repnz
sti
adc
loopne
scas
shll
les
enter
sti
cmp
cmp
test
add
into
fwait
mov
sub
mov
jp
and
sti
aaa
or
adc
outsb
sbb
jp
call
cmc
inc
in
add
stos
or
add
inc
add
adc
shrb
icebp
sub
movntq
rorl
sbb
or
aaa
fwait
adc
mov
sub
cmp
add
dec
mov
jmp
mov
jae
mov
xor
je
add
jecxz
rcrb
dec
add
arpl
xlat
cmp
test
test
xor
inc
add
fdivrs
sub
add
jbe
jmp
jge
out
lds
jo
nop
iret
inc
xchg
add
ja
fldcw
repz
sub
push
cli
mov
inc
xor
cmp
enter
add
in
jne
lds
sub
das
ljmp
daa
ret
mov
jnp
or
mov
rolb
repz
cmp
movb
dec
popl
andl
addr16
push
jecxz
xchg
rolb
outsl
sbb
or
ss
jmp
xchg
sub
fisubl
mov
dec
orb
mov
ret
clc
ljmp
pop
lea
int3
cmp
lock
sbb
rcll
push
jmp
subb
in
push
or
or
sahf
cmp
add
cltd
inc
lcall
sbb
push
add
sub
outsb
cmc
ljmp
adc
jecxz
into
cmpsb
add
pusha
xchg
sbb
insl
dec
cmc
fiaddl
push
cmp
pushf
mov
or
mov
mov
fdiv
ja
sbb
sti
xor
add
es
adc
repnz
lahf
scas
push
jno
add
mov
add
cmc
or
test
test
jg
imul
rolb
push
mov
mov
out
leave
mov
roll
cmp
cli
inc
imul
cmp
sti
add
fmull
sbb
mov
inc
mov
mov
xchg
and
push
addr16
and
mov
mov
popf
loope
add
into
cmp
popa
and
hlt
in
inc
rclb
mov
std
loop
mov
lds
adc
mov
add
aad
icebp
insb
or
loope
sub
add
sbb
dec
fmul
add
sub
sti
pop
push
push
rol
ljmp
jne
adc
sti
pusha
fstl
dec
or
jno
repnz
sbb
push
fisubrs
out
adc
or
gs
push
cmp
stc
mov
push
or
adc
lock
add
sbb
cmp
jo
ret
icebp
shlb
mov
call
xor
lea
push
fcomps
ljmp
movsl
andb
nop
lret
push
sar
sbb
jno
mov
sub
add
lahf
pop
ds
add
into
push
andb
sub
mov
shrb
cmp
add
mul
notl
adcb
lods
add
sub
and
push
inc
inc
sarl
notrack
add
es
sub
iret
stos
out
shl
dec
or
pop
in
xchg
sub
push
jge
into
xchg
shlb
adc
add
cmpsl
bound
cmc
jmp
add
add
pop
jge
add
aaa
xchg
dec
add
mov
and
adc
pushf
mov
rorl
mov
pusha
outsl
sbb
cmp
xchg
add
xchg
faddl
mov
sub
sub
dec
add
inc
icebp
inc
sbb
test
xor
mov
nop
and
xchg
push
iret
test
mov
add
lock
lods
push
push
mov
dec
add
mov
mov
add
stc
jbe
pushf
push
cmp
push
xchg
pusha
pop
repz
mov
aas
xchg
add
cli
push
popf
int3
roll
sbb
mov
aaa
out
sbb
and
cmp
mov
rcrb
xor
push
push
add
and
mov
xchg
add
int
out
hlt
or
add
popf
dec
dec
mov
icebp
arpl
pop
jns
and
adc
insb
xor
ss
add
xchg
test
mov
sbb
dec
push
push
insl
test
enter
sub
xor
or
push
rcrl
in
add
test
insl
call
fnstenv
popa
ret
mov
push
loope
push
aad
sbb
mov
xor
jne
mov
loope
mov
xchg
sub
adc
xor
mov
outsl
leave
jns
inc
xor
mov
adc
mov
flds
std
out
xchg
popf
xchg
add
cmpsl
jmp
dec
repnz
jmp
push
add
push
add
mov
dec
mov
imul
pusha
pushf
jecxz
gs
sbb
into
add
cmp
ja
ret
mov
xchg
add
test
ficomps
or
arpl
fildll
addl
in
add
mov
out
jno
vpsubw
sbb
aaa
adc
aad
into
in
and
cmp
and
mov
aaa
sti
xchg
add
adc
das
add
add
mov
pusha
add
cmp
mov
aam
je
mov
fstl
add
inc
sub
add
sbb
fidivs
and
push
jge
or
test
mov
sti
cmp
xchg
fldenv
fstpt
and
add
sbb
rol
inc
sub
sub
xor
das
mov
jo
jbe
mov
inc
push
xchg
add
sar
inc
mov
jo
add
xchg
dec
je
jnp
push
in
xchg
movsb
add
in
pop
add
leave
push
dec
add
pop
cmc
movsl
fprem
xchg
sbb
hlt
jne
xor
or
add
push
imull
add
sub
sbb
inc
rclb
shll
arpl
lods
jmp
js
mov
mov
fstps
clc
xchg
adc
add
test
jae
xor
lahf
repnz
add
mov
inc
iret
xchg
pop
fwait
add
shlb
out
aad
mov
mov
stos
adc
jg
add
lds
jb
xchg
sti
lock
flds
mov
movsl
shrb
xor
stc
int
ljmp
inc
pop
or
cmp
add
ret
and
fwait
iret
lea
out
jp
popa
testl
add
cltd
push
mov
cmp
cmp
lods
inc
sub
cwtl
or
ds
add
sbb
push
adc
push
push
ja
add
outsl
jp
in
ljmp
xor
mov
push
notb
std
ret
mov
shr
add
pop
and
inc
add
gs
add
xchg
push
add
inc
ret
or
add
add
dec
adc
pusha
pop
add
aaa
ret
cmp
flds
xchg
xchg
cs
pusha
push
and
mov
jno
scas
test
rcrl
fistpll
sbb
test
inc
adc
add
mov
aad
dec
leave
stos
les
mov
add
out
mov
lods
add
add
push
insb
loopne
imul
jecxz
sbb
popa
int3
push
fwait
pop
sbb
aas
cmp
inc
and
mov
pop
incl
shll
repnz
xlat
mov
add
push
adc
add
stos
sub
out
fwait
js
sbb
add
xor
add
nop
add
xor
lock
fiadds
jmp
and
ret
jmp
or
ljmp
add
adc
inc
mov
movsl
ja
cmp
push
icebp
xchg
add
test
in
das
fnstsw
cmpsb
outsb
add
cmp
xchg
sub
add
pop
jnp
add
mov
sbb
inc
aad
xor
cmc
pushf
ljmp
jae
dec
add
stos
ret
inc
mov
cmc
test
addb
cmp
fstps
test
lods
pop
sbb
jo
xor
dec
add
orb
lock
repz
push
dec
xchg
add
lcall
xchg
add
xchg
xchg
in
sarb
popa
mov
and
add
and
jl
adc
leave
jmp
sub
cmpsb
enter
xchg
push
call
mov
sbb
dec
add
mov
sahf
xor
inc
sti
cwtl
insb
std
add
xlat
push
jecxz
or
loope
sub
adc
into
cmpsl
xor
das
idivl
mov
movsl
cmp
rolb
jae
push
cli
inc
inc
dec
fdivrp
je
repnz
xchg
add
repz
and
adc
incb
jbe
push
jo
xor
mov
lahf
sbb
jae
add
dec
xchg
sbb
xlat
or
movsb
in
push
add
out
add
ret
inc
loopne
inc
es
cmp
push
daa
dec
mov
jmp
pop
xor
lock
mov
inc
xchg
push
lret
mov
aas
add
cmpsb
cmp
sbb
shrb
jle
outsl
xlat
inc
cmp
add
mov
sahf
push
enter
mov
fwait
xor
inc
fiaddl
addr16
mov
pusha
jle
adc
cmp
push
adc
ljmp
and
nop
dec
and
dec
decb
cmc
sbb
scas
mov
mov
adc
jecxz
mov
inc
adc
adc
xor
mov
add
aad
in
xor
lea
cmp
mov
in
subl
sbb
push
add
push
mov
sbb
call
les
jle
popf
pop
jne
push
jno
pop
pop
imulb
lret
ret
inc
and
jge
xlat
xchg
mov
xorb
frstor
stos
fists
xchg
mov
mov
and
lret
mov
add
ss
std
jo
adc
aas
ret
dec
loop
cltd
pop
mov
mov
fxch
imul
pushf
std
lds
add
jg
push
incl
add
mov
imul
cs
jle
mov
lret
cmp
movsl
rol
adc
cmc
push
orb
lea
pop
inc
insl
and
loop
adc
pop
adcl
mov
jbe
xor
in
fisubrs
mov
push
out
addr16
and
or
sbb
out
and
ljmp
add
stc
repz
arpl
cmpsl
js
test
add
cmp
scas
mov
and
fisttps
pop
sbb
rorl
mov
ss
dec
mov
add
jle
xchg
jmp
or
faddl
xor
int
lahf
leave
add
sbb
movsl
pop
test
add
push
add
xchg
push
popf
inc
pushf
jns
out
and
adc
sbb
insb
mov
or
xor
push
repz
in
xchg
mov
ret
jmp
add
loop
stos
pushf
lea
pop
test
mov
int
cmp
mov
sti
xor
and
jmp
xor
sub
sbb
imul
leave
es
xchg
mov
push
aaa
imul
add
inc
jle
dec
in
cmp
mov
or
int3
xchg
add
fiaddl
sbb
push
jns
cltd
add
jle
jmp
add
jp
dec
out
imul
dec
xor
xorb
cmp
cwtl
jl
mov
ss
test
mov
add
mov
fiadds
or
mov
dec
add
add
out
mov
movsb
xor
xor
add
sub
nop
jae
ret
repnz
cmp
jmp
xchg
mov
pop
in
and
add
mov
aam
jle
cmpsl
inc
cld
lods
aaa
mov
pop
add
mov
add
or
pop
mov
cltd
add
inc
test
fcoms
ljmp
aam
and
mov
add
jbe
dec
mov
fcoml
xchg
add
xlat
in
add
pop
mov
subl
lock
and
push
das
loopne
dec
and
and
test
add
lahf
push
cld
nop
jg
pushf
xor
sub
iret
and
ret
xchg
push
and
add
jp
add
andl
xchg
mov
rcrl
mov
dec
or
popw
idivb
iret
add
fsubr
cltd
adc
addl
jno
out
sbb
leave
sub
pop
into
adc
jne
outsb
push
add
fdiv
in
gs
add
jle
cwtl
pop
adc
mov
cli
add
xor
xorl
and
xor
sub
add
cmp
rolb
fisubrl
add
and
nop
and
pushf
push
add
lods
cwtl
subb
add
push
cmp
add
and
or
ljmp
pop
mov
xchg
xor
push
iret
and
inc
call
in
into
lea
ss
and
push
jbe
rorb
fnstcw
call
add
lods
popa
rolb
adc
add
inc
and
sub
push
jo
sti
or
loope
cmp
xor
mov
mov
dec
popf
push
mov
add
js
out
bswap
adc
add
ja
xchg
add
jl
pop
pop
sarl
mov
or
jae
sbb
inc
add
loop
push
mov
rorl
adc
dec
add
stc
js
hlt
sbbl
dec
cmp
lret
lcall
dec
insl
sbb
mov
repz
xor
inc
mov
aas
in
push
test
mov
inc
add
mov
movsl
out
push
adc
mov
add
fwait
nop
sar
mov
add
adc
hlt
js
scas
loope
jge
mov
movsl
fcoms
adc
add
pop
mov
ret
add
ja
aam
mov
xor
pushf
pop
push
pop
add
icebp
xchg
mov
es
ss
mov
jmp
jecxz
nop
xlat
or
gs
lods
sbb
enter
cmp
inc
mov
push
movsl
and
fisttpll
jle
xor
ret
notb
mov
rclb
cmp
add
aad
sub
cltd
add
xor
and
imul
xor
shrl
dec
add
test
sbb
or
outsb
cltd
fidivrs
inc
ret
or
add
xchg
lahf
lea
ja
repnz
push
jmp
inc
into
add
push
mov
xor
add
out
or
add
sbb
pop
add
adc
shll
add
jbe
dec
les
in
incb
imul
mov
xchg
addb
roll
and
and
popa
and
or
mull
nop
call
test
pop
aas
imul
inc
out
xor
ljmp
sub
frstor
push
fwait
clc
outsb
add
sub
notl
push
mov
dec
jno
js
adc
sbb
xor
cs
add
out
out
add
or
mov
xchg
pop
mov
movsl
mov
add
jns
dec
stos
lods
sub
jno
fstp
push
mov
arpl
push
pop
lret
xchg
add
mov
lahf
xor
xchg
ret
add
out
es
dec
test
pop
bound
add
inc
mov
xchg
add
rorl
std
push
inc
in
mov
les
cli
mov
mov
insl
xor
jne
cmp
xor
or
jle
mov
jge
mov
lds
pop
inc
loope
jno
mov
arpl
stos
fldl
xlat
dec
out
scas
mov
lahf
loopne
cwtl
in
and
js
add
mov
cmp
sbb
cli
xor
xchg
pusha
pop
add
imul
js
adc
xchg
xchg
stos
dec
mov
xor
das
roll
int
loop
dec
leave
fiaddl
je
pushf
xlat
inc
cltd
mov
dec
xor
enter
out
jnp
adc
repz
in
sbb
ffreep
push
sub
and
dec
adc
push
jecxz
fs
scas
adc
sbb
xchg
cmp
add
pop
hlt
push
imul
insl
arpl
imul
xchg
xor
adc
cmp
jecxz
aad
shll
int3
rolb
in
movsl
hlt
and
xor
movsb
fwait
jle
test
mov
sahf
mov
scas
rcr
out
and
push
or
jb
loop
es
inc
mov
sub
xor
and
pusha
and
jle
rcll
popa
std
into
ror
xor
shlb
xor
jbe
jo
mov
mov
fadds
add
mov
in
mov
imulb
xor
add
xor
push
ror
imul
fiaddl
test
dec
sbb
sbb
fstps
pop
push
pop
aas
add
xchg
cmc
call
andw
or
mov
stos
pop
and
lds
add
fiaddl
test
push
jge
stos
jnp
mov
es
jecxz
out
xchg
cmpsl
enter
es
inc
add
xor
scas
add
push
mov
shr
mov
cmp
inc
in
addb
dec
iret
pop
popf
cld
sbbl
cwtl
cmp
jle
dec
add
repz
jmp
adc
add
mov
mov
in
add
xchg
cmp
mov
gs
or
int3
or
in
test
inc
rolb
mov
mov
xchg
xor
fwait
or
push
jae
dec
add
dec
mov
xchg
add
mov
pop
imul
mov
xor
xor
and
mov
sahf
cmp
xchg
sub
jbe
loope
or
sbb
loopne
ret
adc
inc
out
and
dec
pop
jae
push
call
mov
repz
cs
pusha
add
iret
dec
fldcw
test
ret
add
dec
push
loopne
pop
rolb
stc
mov
mov
bnd
sub
or
jmp
sbb
and
daa
sbb
sub
cmpsl
or
mov
int
xor
out
pop
add
leave
roll
push
push
pop
ljmp
jne,pn
cmp
xlat
add
into
ret
lods
push
xor
fwait
aas
mov
sbb
shlb
stos
xor
xor
and
es
dec
cmp
movsl
rol
bound
or
add
mov
jne
inc
jb
enter
jge
imul
dec
frstor
dec
cmp
add
dec
fistl
shrl
mov
cmp
es
cmp
lret
mov
ss
add
fwait
xchg
repnz
mov
sub
jns
push
cltd
les
ret
inc
mov
sbb
test
add
xchg
adc
fimuls
sarl
xchg
je
lock
das
rcl
cmp
shl
and
int3
or
vphaddwd
add
xorb
js
xor
add
xor
icebp
xchg
addl
fsubl
imul
inc
add
cmp
xchg
stos
shlb
mov
stos
cmp
or
gs
push
das
mov
loope
add
xchg
call
or
add
dec
lds
cltd
sbb
mov
imul
add
inc
and
cltd
xlat
xor
jno
arpl
stos
xor
cmp
orl
jle
xchg
shlb
add
stos
cld
ss
adc
push
jl
mov
adc
pop
stos
adc
mov
ret
testb
shld
aam
sub
sbb
xchg
iret
fidivrs
and
pop
inc
out
inc
jmp
loopne
in
out
or
inc
scas
cmpsb
push
lea
jns
ds
sbb
pop
lods
or
lret
rolb
xor
add
testl
subb
repz
fdivr
or
jnp
das
adc
fucom
sub
add
mov
cmpsl
ds
mov
mov
mov
or
fsubs
add
es
lahf
pop
mov
mov
jb
cmc
jne
inc
lcall
sub
clc
sbb
add
jbe
adc
insb
test
dec
jb
lea
js
repnz
xchg
xchg
faddp
and
loope
lds
cli
jg
ret
mov
lret
add
js
xchg
inc
add
jle
add
sbb
adc
mov
jnp
push
mov
mov
mov
sub
xchg
lods
cwtl
test
mov
mov
popa
mov
data16
push
test
adc
push
ljmp
in
into
jg
adc
pop
mov
add
push
mov
add
rcl
xor
xlat
adc
xor
rcll
stos
sub
shl
xlat
sub
lahf
sub
and
aam
cmp
add
outsb
fs
xchg
bound
imul
out
add
pusha
popa
jo
dec
gs
loopne
jne
mov
arpl
or
incb
or
xchg
cwtl
lret
iret
xor
movsb
cmpsb
loop
and
pop
mov
out
jnp
mov
mov
dec
inc
into
sbb
cmpsb
jne
adc
mov
fidivrs
aaa
outsb
jb
aas
mov
jne
pop
scas
mov
xor
cmp
lret
inc
adc
out
mov
lods
mov
add
or
pop
lea
int3
cmpsb
add
insl
mov
xchg
mov
push
dec
mov
mov
sbb
icebp
pop
dec
sub
xor
inc
add
sbb
add
inc
adc
sub
subb
adc
pop
adc
push
cmp
shlb
rolb
dec
mov
xor
out
dec
adc
xchg
inc
fistpl
jnp
nop
or
adc
std
jmp
mov
lcall
js
add
xchg
pushf
lods
nop
sub
pop
fwait
push
and
cmp
repnz
data16
mov
add
mov
adc
cmpsb
sahf
nop
test
int
sbbb
rorb
test
imul
lods
push
jns
pop
enter
dec
shlb
or
test
pop
daa
adc
sub
add
mov
scas
in
fisubs
add
pop
add
add
insb
jns
push
inc
mov
push
dec
test
or
mov
jmp
mov
aam
push
xchg
add
jb
fisubrl
int3
lds
aad
mov
adc
out
add
mov
inc
daa
popa
pusha
lock
jl
sbb
pop
test
fmuls
and
test
push
jmp
push
rol
andb
sub
add
mov
dec
add
nop
loope
pop
pop
ds
mov
dec
add
fmulp
mov
pushf
add
lret
ret
rol
sbb
jnp
xor
jne
inc
inc
pop
es
push
adc
add
mov
adc
add
adc
lock
and
xchg
hlt
jb
and
hlt
add
stc
gs
jno
pop
incl
int3
decb
pop
into
loop
inc
cmp
and
xor
out
push
in
daa
cmp
orl
fcoms
mov
add
int
jno
mov
mov
iret
fldl
jecxz
adc
xchg
push
es
inc
pop
xchg
and
loopne
out
ss
adc
pop
repnz
rolb
mov
je
push
push
xor
leave
lea
scas
icebp
xchg
xchg
out
mov
shl
adc
mov
xor
mov
add
sahf
loope
dec
sub
fisttpll
mov
inc
inc
test
iret
loope
pop
xor
adc
lods
aaa
data16
jge
sbb
out
push
cltd
push
hlt
insb
arpl
add
stos
enter
sbb
aad
adc
jl
rolb
and
add
loopne
movsb
iret
imul
testl
hlt
dec
mov
jg
outsl
mov
add
lret
push
stos
add
add
stos
nop
xchg
xor
outsb
push
mov
mov
cmpsl
mov
jnp
test
lcall
and
push
jno
pop
ja
push
or
jno
addb
xor
jl
add
dec
enter
aas
rorb
xor
cmp
in
and
mov
push
cmp
push
dec
test
lahf
add
xchg
les
mov
mov
rcl
and
jl
popf
lock
fmulp
stos
sub
xor
pop
add
add
sahf
push
cmc
repnz
pusha
jns
adc
in
mov
xor
in
mov
decl
sbb
es
pop
adc
sbb
mov
cmp
fwait
mov
std
inc
ret
in
je
das
or
dec
add
mov
sbb
ret
add
inc
inc
push
add
jne
faddp
pop
add
gs
rolb
jp
push
sub
xor
inc
fs
lret
pop
adc
sbb
arpl
aas
test
stc
or
daa
inc
mov
xchg
mov
dec
jecxz
cmp
inc
jge
sbb
loopne
xor
dec
add
dec
test
inc
lret
aad
jns
cli
sbb
mov
test
fstps
xor
call
in
mov
int
cwtl
jne
mov
push
les
stc
push
mov
popa
xor
cmc
out
lahf
xchg
out
cs
dec
in
cmp
add
cmp
jg
lret
push
and
or
jae
add
addb
or
in
jge
jb
inc
dec
ror
lds
add
int
add
push
bnd
dec
add
test
inc
mov
jne
push
cmc
mov
out
rorl
mov
push
cwtl
add
jg
xor
das
aas
fsubl
inc
jo
sbb
int3
ja
hlt
cmp
cmp
add
mov
fdivs
shll
gs
mov
cmp
push
and
aas
adc
dec
call
aam
lods
push
pop
mov
mov
movsl
xlat
cmp
test
add
repz
icebp
pop
mov
cld
in
out
cmpsl
add
fcmovu
mov
push
jbe
push
and
sub
adc
xchg
lahf
jno
add
pop
in
dec
inc
mov
add
cmp
or
push
mov
add
sub
add
cmp
sub
ret
imul
lods
add
xor
sbb
add
mov
rorl
adc
ret
mov
pcmpeqd
ret
inc
xchg
push
adc
std
lahf
mov
rclb
sub
mov
inc
scas
fwait
jae
and
cs
data16
cmp
mov
inc
call
sub
jb
and
rorl
mov
jo
jb
xor
add
pop
mov
cmc
jp
shlb
std
inc
stc
repz
and
testl
popl
movsl
mov
adc
dec
inc
or
daa
add
or
mov
popf
xchg
xchg
mov
lock
subb
pop
iret
lret
ret
cmpsb
leave
cmp
jbe
inc
jnp
push
push
fdivr
xchg
pop
rcr
sarl
sbb
mov
inc
xchg
xor
arpl
xchg
pop
sarl
dec
loop
pop
and
lcall
and
loope
xor
testl
cmc
lfs
add
inc
push
xchg
xchg
lcall
sub
add
push
inc
test
xor
add
pop
pop
add
dec
push
xor
mov
arpl
jp
orl
sub
pusha
or
cwtl
leave
aaa
or
add
xchg
ljmp
out
dec
mov
add
add
fcmovnb
add
push
orl
mov
pop
lods
add
iret
xchg
out
add
pop
in
sub
add
add
or
sub
sub
pop
loopne
test
and
popa
psllq
rolb
in
in
notl
sti
mov
add
mov
adc
dec
adcl
xchg
add
ljmp
rol
int
adc
fiadds
pop
outsb
jb
movsl
mov
dec
jnp
xor
xlat
sahf
scas
shlb
jl
jecxz
and
out
inc
inc
pop
jmp
insl
cmp
lods
movsl
xor
push
mov
sub
fwait
verr
or
dec
mov
adc
sbb
mov
add
sbb
inc
fildll
pop
jg
cltd
hlt
push
cmp
and
dec
stos
ficomps
and
mov
lods
add
mov
jno
xor
notl
xchg
mov
pop
xor
cmp
pop
or
sbb
in
mov
add
add
mov
loop
cmp
add
jmp
pop
xchg
add
dec
xchg
lahf
ror
cmp
lret
mov
inc
adc
jno
inc
and
ret
jp
push
lret
or
pop
fs
loop
inc
ja
sub
test
push
cmp
jle
cmp
imul
add
pop
mov
mov
pop
push
add
into
lahf
add
mov
movsb
ret
arpl
mov
das
sbb
push
xcrypt-cfb
cmpsl
inc
jnp
mov
mov
pop
or
mov
adcl
cmp
pushw
xchg
cmp
inc
mov
xor
fisttpll
ret
xor
pop
inc
call
and
sbb
xchg
dec
fsubs
inc
loopne
stc
xor
out
jne
sub
cmp
sub
mov
mov
add
and
int3
testb
aad
fcmovb
lods
or
fstl
xor
jo
xchg
addb
test
sbb
mov
inc
xor
xor
sahf
xlat
in
adcb
out
dec
mov
add
aaa
jne
mov
xchg
pop
cmp
xchg
pop
mov
mov
add
pop
push
iret
inc
pop
das
add
pusha
aad
cwtl
or
dec
push
shr
pop
push
push
sub
jmp
add
dec
pusha
push
add
or
adc
in
repnz
xor
add
pop
mov
sub
mov
sarl
std
popf
testb
shll
aam
mov
addb
jno
fmul
aad
mov
into
add
and
or
cmpsb
sbbb
nop
pop
sbb
add
mov
in
add
jmp
pop
mov
into
clc
add
pop
jbe
adc
jle
push
add
test
inc
push
sub
mov
push
lahf
add
mov
fstpl
sbb
aad
pop
add
ja
aas
jmp
mov
pop
mov
push
cmp
jne
jo
sub
pminsw
into
nop
iret
dec
ret
cld
xchg
or
leave
add
push
jle
cmp
and
mov
add
pop
fnsave
cld
stos
mov
add
dec
jge
iret
fcmovnbe
sbb
scas
fadd
push
and
mov
or
sub
dec
pusha
subl
add
mov
inc
inc
iret
loop
fidivrs
pop
xor
inc
jg
pop
lcall
cmpb
xchg
inc
xorl
xchg
lock
or
push
aaa
ret
neg
xchg
loope
lds
jnp
mov
pop
mov
jecxz
add
das
shl
cmp
adc
sub
aaa
addl
in
pusha
mov
mov
lret
mov
push
dec
hlt
imulb
add
pop
repz
push
cmc
and
fidivrs
jne
mov
xchg
in
add
fwait
cmp
xor
inc
test
or
pop
mov
cmp
inc
lahf
out
iret
pusha
les
jp
jnp
mov
cs
gs
mov
push
popa
movb
and
adcb
outsl
scas
mov
ret
dec
mov
test
sub
addr16
add
inc
lret
mov
add
jae
push
loopne
pop
repnz
ret
add
nop
and
cmp
lahf
or
xorl
mov
rcrb
push
push
dec
sub
popf
add
test
sub
or
mov
out
xchg
gs
push
hlt
or
jg
cld
xchg
ret
add
ret
repz
lret
call
out
mov
data16
pop
xchg
pop
sbb
add
adc
mov
fldl
push
xchg
xor
adc
sbb
xchg
ja
push
shll
cmc
test
inc
repz
xor
stc
inc
dec
jg
arpl
adc
shll
sbb
popa
pop
add
in
mov
icebp
shll
add
mov
testb
out
sbb
sub
pop
mov
and
mov
dec
add
nop
pop
pop
and
add
pop
cmp
adc
test
adcb
jecxz
and
xor
loope
leave
test
mov
cmp
add
lcall
inc
adc
add
inc
dec
ret
inc
push
mov
xor
cmp
das
add
push
lea
aaa
fwait
out
add
jns
mov
fnstsw
lea
es
outsl
add
ret
test
sub
shrb
loopne
add
in
cmp
shll
jno
xchg
cld
iret
imul
lcall
sbb
mov
or
xchg
jns
inc
ret
mov
mov
mov
mov
add
mov
cmp
inc
pusha
mov
push
cmc
xor
jbe
rorl
push
sub
sbbb
inc
repz
cmp
cs
pop
mov
lret
ret
sbb
inc
push
lock
popa
inc
add
or
test
ret
add
xor
outsb
add
inc
mov
scas
jns
xor
popa
add
mov
aaa
mov
fdivs
or
stos
ret
cmp
xchg
sar
mov
inc
sub
jnp
mov
add
add
sbbb
and
cmp
pop
add
and
cli
cmp
add
in
mov
add
push
mov
test
jns
fnsave
fimuls
fs
xchg
cmp
jae
fxch
add
lcall
add
std
inc
addl
push
mov
call
add
dec
cs
mov
xchg
or
mov
rcrl
mov
imul
push
add
jecxz
jae
jno
add
jns
jmp
jle
into
and
pop
movsl
sub
xorl
xor
shrl
add
loop
pop
jg
ret
pop
push
jae
or
sub
lahf
cwtl
add
or
push
je
sahf
push
lret
xor
xor
jle
faddl
xor
insb
rcl
pop
pop
ss
imul
mov
cmpsb
incb
lods
loopne
mov
shl
pop
push
fidivs
sbb
or
shlb
hlt
sbb
lds
mov
push
xchg
insb
shll
aad
adc
push
pop
inc
fdivr
inc
pop
inc
jnp
cmp
mov
sbb
add
mov
pop
xchg
pop
mov
jmp
cmp
out
pop
sub
addb
push
mov
hlt
add
cmp
adc
mov
cmp
add
pop
sti
loop
and
ljmp
lock
jb
int3
push
pop
sub
sub
sub
test
mov
jl
jecxz
shrd
mov
js
sub
push
push
push
fdiv
inc
js
iret
pop
mov
jae
outsl
mov
stc
add
xor
dec
cmpsl
xorb
and
jp
lea
add
jl
lcall
out
adc
xor
mov
ret
das
rdmsr
jecxz
fadds
jl
cmpsb
rclb
mov
xchg
cmp
add
sbb
adc
xchg
ret
int3
out
adc
add
imul
cwtl
sti
lcall
mov
sub
out
ret
insl
jg
and
dec
lea
aam
sbb
lret
add
addb
les
add
clc
fadds
mov
jmp
ffree
flds
or
fbld
xor
addl
leave
les
ret
push
and
lea
xor
jge
aaa
add
fnsetpm(287
out
push
pop
nop
les
add
dec
push
sti
jbe
add
mov
jmp
ret
dec
add
ljmp
call
or
loopne
add
and
cmpsl
mov
add
push
cmpsb
lcall
cld
pop
xor
or
ja
xchg
jb
aam
add
pop
les
rol
add
roll
add
push
mov
shlb
sub
data16
ljmp
lds
ss
fsubrl
sbb
lret
dec
inc
add
ds
add
mov
push
sbb
leave
rolb
push
mov
xchg
inc
add
pop
cs
inc
and
mov
in
adc
add
jg
mov
cmp
add
jge
cltd
push
std
push
mov
push
movb
lcall
out
mov
ljmp
lea
fidivl
out
push
fisubs
xchg
mov
out
dec
fmuls
push
mov
ret
mov
test
or
js
stc
xor
lcall
dec
adc
add
add
shll
jg
push
pop
mov
les
sbb
pop
sbb
dec
imul
add
mov
xchg
xorl
mov
imulb
or
xchg
xchg
shrl
push
clc
mov
cmp
jmp
jae
xor
xchg
mov
or
out
add
out
test
inc
or
test
fisubl
insb
lahf
add
mov
leave
sbb
int
lods
add
mov
ds
cmp
push
std
add
mov
test
out
fsts
mov
fistps
jge
mov
in
jns
decl
mov
ret
add
insl
or
pop
mov
add
aaa
sbb
inc
inc
imul
or
cmp
xor
push
push
fiadds
pop
or
je
test
sarl
mov
shrb
cmp
sub
inc
cmp
mov
add
mov
push
into
les
cs
xchg
xchg
imul
mov
insl
arpl
dec
adc
sub
mov
inc
repz
add
sti
sahf
aas
aas
add
iret
sarl
or
add
fimuls
scas
inc
mov
push
xchg
insb
add
jb
sub
dec
test
jecxz
movsl
fidivl
iret
jg
pop
in
cwtl
add
jo
pop
icebp
pusha
add
test
enter
push
jb
pop
add
sub
ljmp
pusha
lahf
sti
aam
cmp
mov
adc
call
aad
or
ret
outsb
out
add
in
sbb
jbe
mov
aam
push
or
add
cmp
shl
cs
add
lds
shrb
sub
adc
mov
clc
add
inc
push
nop
cmp
repz
popl
gs
mov
stos
mov
cmp
cli
js
sahf
add
jg
xchg
roll
sbbb
sarl
push
dec
or
or
push
les
aad
stos
sub
jns
adc
xor
jmp
ja
and
mov
add
inc
rolb
sbb
xor
xlat
and
testb
test
insb
add
out
stos
in
push
ret
xchg
std
sbb
adc
adc
push
xor
jge
and
push
testb
push
mov
xor
movsb
xorb
xor
jg
xor
imul
test
xchg
mov
add
cmp
inc
xchg
push
mov
into
subl
mov
pusha
adc
jge
fcoml
repnz
add
and
or
cwtl
in
mov
roll
cmp
and
movsl
loope
push
add
xchg
jg
orl
jecxz
adc
xchg
aam
push
add
into
loop
add
mov
dec
pop
pusha
adc
test
or
nop
add
ds
push
outsb
mov
icebp
inc
jns
fs
cmp
cmp
push
xchg
out
cmp
les
cmp
or
mov
mov
add
pop
cmp
mov
sub
or
or
imul
addl
push
jp
rcrb
je
in
cmp
mov
pop
lcall
mov
add
mov
mov
adc
pop
fistpl
and
cs
sti
jns
mov
fsubl
xlat
xor
int
das
arpl
enter
adc
pop
rcll
jae
call
mov
sbb
sub
rclb
sub
ss
out
shrl
mov
or
stc
sub
movb
inc
shlb
lock
inc
dec
xchg
daa
test
push
cmp
inc
insb
jns
xor
clc
sti
aas
and
add
jmp
sub
and
in
dec
jb
out
stc
mov
icebp
lds
inc
xchg
add
lock
ds
push
rolb
xlat
xor
clc
cmp
mov
pushf
and
lods
daa
imulb
cs
lahf
add
sahf
or
add
pop
dec
inc
clc
inc
mov
int
lock
in
add
xchg
push
sub
int
aad
das
jp
lea
jg
cmpsb
cmp
add
sbb
test
loope
add
inc
fmuls
sbb
add
cmp
adc
add
imul
sahf
push
addl
sub
add
mov
clc
xchg
cmp
lods
push
and
fwait
das
push
int
adc
rol
xor
sub
add
add
adc
cmc
inc
jb
xor
int
enter
mov
pop
bound
dec
scas
in
aaa
push
int
xor
cli
mov
jg
adc
ds
iret
pop
and
into
out
dec
ja
xchg
xchg
sbb
movb
divb
and
ja
std
and
bound
lock
aas
lcall
outsb
fidivrl
test
stos
fldcw
jo
fists
mov
add
test
daa
inc
mov
add
dec
mov
pop
sub
add
popl
dec
jg
and
repnz
sbb
aas
rcl
movsl
push
pusha
fs
les
jo
movsb
popf
setl
add
iret
sbb
mov
outsl
or
jae
add
loopne
mov
mov
cmpl
xchg
add
daa
cwtl
adc
xchg
add
fistpl
popf
dec
xchg
lods
ja
xchg
mov
xchg
stc
fiadds
movsb
pop
mov
leave
call
cmp
add
mov
jb
inc
xadd
cwtl
mov
or
in
xor
pop
mov
jl
inc
cmp
push
add
jne
test
or
repnz
mov
rorb
and
rorl
push
cmp
xor
jp
mov
call
int3
jge
xchg
repz
rcr
roll
xchg
sbb
aam
add
mov
mov
jo
xor
push
outsb
or
arpl
pusha
or
sahf
push
dec
or
call
mov
mov
xchg
add
push
mov
pop
ret
add
add
movsl
adc
add
js
sarl
push
insb
shll
inc
add
enter
jmp
fwait
les
xchg
pop
testb
lods
ljmp
test
push
add
lock
mov
mov
cmpsl
outsl
sub
mov
push
fprem1
pop
in
inc
or
lcall
cmp
cmp
shrl
aad
push
rcrb
add
xor
ja
cld
iret
inc
sub
es
lret
mov
mov
cmc
das
pavgw
mov
push
push
in
int3
addl
and
cld
lcall
fisubrs
ja
and
and
adc
dec
rorl
cvtps2pd
xlat
cmpsb
push
notl
add
dec
jno
add
inc
int
pop
xchg
fidivrs
mov
repnz
in
and
push
cmp
flds
js
or
test
dec
sbb
pop
mov
xchg
cltd
push
cld
testb
ds
inc
cmpsb
inc
popf
pop
lods
inc
sti
dec
pusha
aaa
sarb
or
popa
subl
push
sbb
or
xor
xchg
adc
lock
ds
jle
out
jo
daa
cmpsb
mov
ss
inc
dec
pop
mov
jg
add
inc
je
pop
sub
dec
addb
push
pop
jecxz
cmp
mov
fistl
add
dec
shll
scas
dec
enter
fildll
mov
cmpsl
adc
inc
xchg
add
push
xchg
adc
scas
mov
sarl
std
xorb
fsub
push
cmp
mov
inc
nop/reserved
rol
and
and
fwait
xor
cmp
sub
out
jle
xchg
movsl
mov
sub
stos
pop
and
rcrb
mov
mov
add
xor
faddl
adc
pavgw
sub
push
mov
addl
in
mov
fidivrl
mov
inc
inc
xchg
fistl
pushl
xchg
and
vpsrlq
nop
mov
loope
push
push
les
movsl
inc
push
jmp
jns
push
movl
xlat
cli
jnp
cmp
jb
add
imul
nop
push
cmp
sarl
ljmp
fnclex
dec
push
jg
subl
dec
arpl
in
sarl
loope
xchg
sbb
or
pop
add
sbb
and
scas
and
jmp
loopne
cld
push
cs
mov
and
sahf
or
mov
fildl
add
pop
xor
add
adc
inc
iret
fchs
aas
push
xor
inc
shll
push
test
mulb
mov
pusha
jo
pushf
adc
jno,pn
dec
inc
rorl
add
sub
sahf
add
push
xchg
mov
add
xchg
and
pop
in
pop
and
dec
mov
loopne
adc
or
cmp
pop
shl
pop
in
loopne
leave
xchg
cld
cmp
clc
add
pop
mov
jb
xor
in
ljmpw
or
ss
inc
inc
movsb
inc
xorb
push
or
adc
sbb
dec
bnd
xchg
jbe
cmp
add
icebp
or
jecxz
popl
dec
test
mov
adc
dec
push
rol
movb
add
aas
sbb
stos
fbld
testl
dec
fsubrp
add
pushf
xor
icebp
and
or
lahf
and
cld
push
addr16
dec
add
jle
add
pop
gs
cmp
jecxz
in
cmp
out
test
pop
sub
push
sbb
jo
std
inc
mov
lea
aam
jno
mov
add
mov
cld
mov
in
sbb
scas
pop
push
sub
add
sarl
inc
faddl
stc
mov
lret
and
pop
push
in
sub
sbb
push
rcrl
xchg
pop
imul
cmc
rolb
js
and
loopne
inc
jp
mov
jge
roll
test
cmp
add
adc
cmpsb
rcrl
into
cmp
stos
int3
rorb
je
orl
jmp
outsl
movsl
mov
or
in
leave
ret
pop
or
and
add
daa
imul
test
gs
pop
icebp
test
inc
shll
faddl
lret
or
daa
add
or
rolb
pop
and
cmpsb
test
ret
sarl
nop
mov
je
cmp
add
mov
daa
sub
mov
push
pusha
ljmp
ret
mov
mov
dec
lea
xor
in
mov
aaa
bound
jae
add
xchg
cmp
inc
test
data16
mov
inc
daa
inc
test
xor
aam
and
hlt
and
movsb
cmp
nop
add
rclb
adc
xchg
mov
xchg
cmpl
xchg
adc
push
addps
sbb
add
mov
adc
jb
push
xorb
imul
roll
jae
xchg
fadd
add
push
lret
lea
repnz
rcrl
mov
mov
push
and
add
add
dec
pop
inc
push
sahf
adc
aas
xchg
jne
adc
inc
insl
add
sbb
add
jnp
in
popf
pop
add
pop
int
adc
and
cmp
add
cmp
int3
cmp
scas
rolb
mov
xchg
and
jbe
add
jmp
fsubp
add
ror
xchg
test
adc
pop
stos
mov
push
mov
aas
mov
add
dec
fisubl
pop
mov
imul
aam
inc
jne
add
repz
inc
add
and
mov
aaa
or
and
or
xchg
xor
jge
xor
sti
sub
or
add
movsl
dec
pop
xchg
adc
mov
sub
and
push
mov
aas
jg
adc
jecxz
xor
mov
addr16
push
addl
add
adc
adc
or
inc
add
mov
imul
ficoml
mov
mov
leave
clc
cmpl
push
pop
add
dec
into
mov
bound
xchg
xorl
sbb
cli
add
mov
rol
pop
push
shl
test
xor
es
dec
adc
das
xor
scas
or
mov
push
test
adc
mov
ja
out
add
inc
or
add
push
mov
jo,pt
pusha
jnp
aaa
clc
fldl
bound
js
pop
jg
jne
inc
mov
int3
sbb
lea
add
sbb
fstps
xlat
mov
out
sbb
push
or
in
xor
fisttpll
mov
cmp
push
popa
add
in
push
movb
sbb
sbbb
ret
jl
cwtl
push
dec
adc
adc
push
ss
cmp
fistpll
mov
gs
cmpsl
inc
pop
xchg
ds
dec
fnsave
jne
test
lock
outsl
sbb
fwait
add
xchg
lods
adcl
dec
mov
push
xorb
cmp
pushf
add
and
rolb
mov
out
sbb
fsubr
xlat
dec
push
cmc
mov
inc
jge
rcll
jg
sbb
sbbl
repnz
fistl
sub
sbb
scas
fs
add
fiadds
adc
sub
sbb
add
sub
inc
cltd
and
dec
frstor
push
pop
loop
inc
add
mov
aad
cmp
add
dec
cmp
add
xor
mov
add
add
pop
sbb
add
dec
add
cmp
ljmp
and
pop
push
or
xlat
rcrl
add
rcrl
and
sub
xlat
dec
arpl
fwait
loop
inc
enter
inc
movzwl
movsl
xchg
mov
mov
idiv
cmpsl
add
and
out
xor
pushf
add
sub
test
iret
andb
cmp
and
pop
inc
rorl
mov
mov
in
add
enter
hlt
or
fs
cwtl
dec
test
fidivl
inc
rcl
mov
sub
cltd
push
xchg
sbbl
rcl
and
rcr
adc
add
imul
movsb
sbb
xchg
inc
add
adc
add
xchg
xchg
push
es
add
bound
stc
mov
mov
xchg
pop
add
lret
or
inc
daa
xor
or
sub
sbb
test
cmp
inc
mov
jae
dec
xor
pop
pop
add
mov
lahf
test
cmp
cmp
int3
pop
dec
push
and
add
das
insl
daa
cmp
lock
insb
out
inc
lea
lods
scas
mov
and
sub
and
jmp
movsl
lcall
add
push
push
sahf
data16
mov
mull
sbb
aaa
inc
adc
sbb
sub
jb
jecxz
insl
or
loopne
stc
fwait
adc
mov
xchg
and
lret
mov
int
fwait
mov
inc
sub
push
and
jmp
pop
or
cmc
cmp
add
or
add
int
scas
ds
pop
cmpb
insb
xor
in
insl
aam
push
jge
sbb
push
test
pop
std
pop
ljmp
lds
push
add
fcoml
dec
aad
lcall
repz
or
add
imul
add
push
sub
es
mov
lret
rcrl
add
xor
push
out
xor
push
pop
shl
ss
and
or
popf
add
rolb
iret
das
add
int3
inc
cld
adc
add
pop
xchg
fists
rcrl
xor
sub
ret
test
add
cltd
lcall
and
out
push
pop
out
sbbl
adc
sbb
add
in
clc
inc
mov
dec
add
pop
sub
popa
sbb
sarl
add
or
jb
shr
push
push
imul
xchg
mov
insb
decl
mov
push
adc
add
push
push
cs
jb
inc
dec
jnp
sub
or
dec
addr16
aaa
fstpt
push
lret
push
mov
add
add
dec
repnz
add
mov
adc
adc
scas
nop
insl
mov
roll
shlb
add
fldl
inc
nop
push
mov
sbbb
dec
and
nop
fisubs
je
add
add
push
or
inc
mov
je
scas
inc
sbb
stc
xor
or
or
cmpsl
adc
scas
mov
insb
cmpsl
add
add
mov
daa
jns
lods
xchg
rorl
dec
xchg
mov
sub
je
xchg
mov
add
jmp
sub
inc
rcrl
fstpl
in
out
add
mov
cmp
pop
jno
push
dec
push
inc
rolb
stc
xchg
movl
mov
js
and
cmp
fwait
mov
add
ret
scas
mov
adc
imul
and
add
jb
sbb
add
pusha
inc
ljmp
inc
jbe
mov
aaa
add
mov
out
push
xor
fsubrl
cmp
rolb
cmp
dec
sub
pusha
add
mov
insb
in
mov
adcl
lods
jo
dec
push
cmpsb
mov
pusha
pushl
sub
jmp
cmp
add
outsl
daa
mov
add
or
xor
sbbb
mov
divb
fwait
aam
and
cs
dec
add
sbbl
add
sub
or
mov
outsl
add
add
sbb
sub
jo
cltd
mov
orl
inc
mov
fsubl
je
or
int3
push
aas
icebp
xorl
into
add
pop
xchg
or
jge
mov
push
add
jne
mov
xchg
dec
lea
int3
add
xchg
shlb
xor
xchg
ret
add
dec
push
fistps
mov
mov
add
leave
and
xchg
mov
inc
or
add
addb
dec
jecxz
cld
push
xchg
xor
xlat
add
outsb
jne
add
stc
lahf
inc
add
mov
lret
repz
inc
xor
inc
inc
jecxz
lods
std
add
mov
mov
and
das
push
es
roll
ja
xchg
in
stos
aad
mov
sub
dec
push
test
mov
or
adc
pusha
clc
mov
sub
jmp
mov
sub
xchg
repz
fcoml
cmpsl
jo
xor
ds
cwtl
stos
sbb
daa
movsb
ret
dec
mov
psraw
add
pop
cmc
xchg
add
movsl
mov
cwtl
inc
ficoms
loop
inc
sub
daa
jecxz
cmpsl
xor
int3
imul
jne
and
imul
cmp
mov
adc
add
in
push
sbb
mov
push
xor
xorl
jp
push
and
les
loope
cmp
mov
jmp
mov
adc
inc
orb
add
subl
mov
ja
add
xchg
xor
mov
or
sbb
push
pop
cld
xchg
or
outsl
out
out
mov
mov
jns
dec
rcrb
cmp
xor
aad
add
xor
sarb
sbb
cli
flds
xchg
test
nop
test
out
add
pusha
sbb
aad
sbb
rorb
fsts
add
push
inc
mov
mov
cwtl
add
lcall
inc
or
icebp
adc
and
cli
inc
add
or
sbb
xor
push
and
ds
add
hlt
lret
test
inc
aad
xchg
int3
insl
dec
cmp
fisubl
mov
cmp
movsb
daa
mov
inc
cmp
add
into
inc
jbe
and
fucomip
add
mov
out
add
mov
or
ss
push
add
inc
dec
iret
adc
mov
fcompl
sbb
mov
test
add
jmp
rcll
std
inc
ficoms
rcrb
add
pop
inc
leave
mov
add
out
xchg
push
inc
out
mulb
or
int3
add
movsb
stos
call
mov
sbb
inc
cmp
mov
cmp
xchg
iret
ss
push
xlat
mov
out
cli
mov
rcr
add
pop
jo
js
mov
ja
shl
in
jmp
push
cmp
or
pop
nop
sbb
faddp
ljmp
push
rcl
xor
bound
rclb
xor
insb
sub
xor
xchg
and
sbb
inc
add
push
add
into
js
fwait
movsb
add
jmp
and
pop
push
lcall
jb
lods
mov
mov
mov
js
add
dec
xor
lret
outsl
sarb
xor
pop
add
xor
pusha
push
hlt
inc
add
or
fs
mov
gs
shlb
mov
enter
push
clc
loope
xor
xlat
rolb
add
pop
je
leave
insb
out
sbb
mov
jns
jmp
rcl
test
sbb
mov
lds
add
lret
inc
xchg
and
xor
push
add
xor
mov
push
testb
xor
add
lret
dec
loopne
fbld
fstpl
add
fisubs
movsb
jge
dec
testb
inc
push
in
add
addl
xchg
mov
push
inc
cmp
je
xor
lock
pop
mov
push
sarl
shlb
imul
dec
add
jne
xchg
inc
add
out
cmpsb
pop
mov
test
inc
jb
aaa
nop
outsb
inc
in
gs
cs
incb
jno
push
addb
mov
cmp
adc
mov
icebp
rcrl
orl
mov
xor
add
jns
in
out
and
ja
jle
lcall
jecxz
jp
mov
das
push
sub
mov
popf
jae
lret
ljmp
je
out
jne
call
add
cmc
cmp
ret
rorb
mov
arpl
pop
addb
pusha
xchg
xor
pop
cmp
add
push
add
popf
xor
push
xchg
jle
mov
add
mov
icebp
jo
xlat
fs
sarl
add
jae
addb
inc
into
mov
add
cmpsl
out
repnz
or
addr16
mov
mov
mov
cs
les
fdivp
or
lcall
in
lret
aas
pop
jg
ja
stos
xor
imul
jge
xor
adc
aas
enter
icebp
dec
and
mov
push
add
jg
inc
ss
add
cmp
lgs
cld
xlat
mov
cltd
inc
out
xor
sbb
pop
xor
cmpl
push
xchg
add
add
pop
cmp
outsb
fdivs
inc
adc
sub
xchg
shrl
fildll
ja
jmp
push
in
divl
adc
call
sub
push
inc
xor
xchg
setae
loopne
testb
adc
jge
adc
bound
add
test
imul
add
mov
in
push
add
adc
jo
sub
dec
sub
cmc
add
jns
pop
cwtl
and
add
ss
lods
shrb
ret
add
jno
xor
outsb
inc
pop
sbb
push
test
aas
dec
xchg
movsb
mov
mov
scas
add
mov
inc
mov
mov
shrb
movsb
sub
pop
jne
mov
imul
jo
addr16
push
push
add
fcomi
sbb
js
dec
je
pushf
add
adc
add
jge
xchg
fildll
push
ds
loop
lea
incb
cmp
pop
jne
adc
sbb
loop
das
enter
pop
push
add
outsb
cmpsl
imul
inc
dec
hlt
cmc
pusha
mov
notl
shll
clc
repnz
mov
push
or
ltr
fsubl
or
jae
add
lds
mov
adc
jmp
loope
rolb
mov
sbb
cmp
sbb
inc
push
aaa
fistl
jp
jae,pt
cltd
dec
add
jmp
int
pusha
inc
faddl
xchg
arpl
inc
shlb
imul
and
nop
sub
pushf
andl
lahf
sbb
add
in
cmpsl
iret
addr16
test
idivb
cmp
or
ss
vmwrite
cwtl
cmp
adc
and
cmp
sub
pop
js
mov
or
mov
add
inc
jnp
inc
es
ret
adc
idivb
sbb
mov
les
movsb
pop
pop
decl
dec
andl
shl
cmp
ret
dec
push
sarl
ret
pop
sbb
mov
out
adc
push
int
pop
out
adc
fwait
sub
std
nop
xchg
cli
fidivs
js
mov
and
jg
pop
add
ss
fidivs
jge
ds
push
sbb
add
popa
insb
mov
add
xchg
rolb
mov
pop
scas
jbe
dec
sub
add
lods
jns
xor
ret
sub
add
sbb
insb
jg
lods
pop
cwtl
cs
dec
xchg
das
xor
mov
jle
adc
nop
in
mov
push
popa
cmp
mov
test
pop
popf
jno
add
pusha
mov
push
xchg
cld
push
imul
shll
daa
xchg
aaa
mov
loopne
and
sub
mov
add
mov
daa
add
pop
or
pop
icebp
addr16
mov
and
lods
mov
fnstcw
jg
add
scas
ja
add
mov
jp
pop
shlb
loopne
idivb
inc
mov
mov
push
xor
mov
jae
jmp
sbb
add
mov
add
dec
mov
push
addl
rclb
stos
add
sbb
pop
sahf
or
inc
gs
rolb
jb
mov
fs
fdivrp
add
mov
call
xchg
lock
sub
mov
fs
pop
repnz
cld
lea
mov
insl
in
mov
aas
mov
pop
or
int
xor
add
dec
ficoms
and
xchg
jne
fnstcw
add
push
in
xor
int3
loop
or
out
jg
xor
ljmp
stos
sarl
jecxz
fiadds
adc
pop
cltd
add
push
ja
mov
or
aam
sbb
pop
adc
xor
stos
dec
daa
adc
pop
shrl
movl
add
sbb
imul
aam
insb
shl
xchg
mov
mov
mov
loopne
push
and
fnstcw
mov
out
pop
xor
movsw
imul
dec
lret
cwtl
xor
mov
cmpsl
mov
int
out
lahf
push
icebp
mov
dec
pusha
nop
add
ret
sub
insb
cwtl
lea
jns
out
jb
test
andb
movsb
daa
mov
pop
mov
loopne
mov
cld
jecxz
cmp
test
out
test
jg,pt
and
pop
jae
xor
fst
leave
add
popf
insb
dec
add
repnz
mov
xor
cltd
lret
sbbl
jl
mov
xor
cmpsl
add
shll
movnti
fdiv
xor
mov
and
mov
jle
xor
inc
andb
mov
stos
pop
xor
in
cmp
aas
movaps
sbb
sbb
xor
add
divl
and
push
mov
inc
enter
fidivrs
icebp
pop
lds
add
jmp
cs
add
dec
dec
cltd
aas
stc
add
pop
fistpll
add
lods
cltd
xor
lds
or
mov
add
lret
cld
or
ret
dec
addl
lods
inc
dec
popw
mov
jle
in
mov
adc
imul
inc
popa
mov
fnstcw
psrad
iret
gs
dec
mov
rcr
inc
add
lahf
popa
adc
fcmovnu
pusha
mov
push
sub
ljmp
out
pop
int3
push
dec
jmp
sub
push
arpl
ja
xchg
add
sar
mov
push
add
lea
xchg
inc
add
mov
add
pop
cli
aam
in
add
test
xor
mov
loop
fchs
mov
out
lds
pop
add
dec
pop
dec
xor
lret
jecxz
test
stc
cmp
es
pop
jo
and
imul
movsb
ljmp
insl
mov
adc
dec
inc
xor
or
movsl
repz
xchg
pop
inc
fsubp
leave
imul
lret
into
repnz
mov
outsb
es
rcl
fwait
iret
add
add
or
xchg
sbb
pop
and
sub
jae
js
lahf
mov
or
push
mov
mov
lahf
lret
or
push
insl
cmp
adcl
pop
add
dec
fadd
add
and
sub
rol
cmp
shll
mov
mov
nop
jnp
pop
add
jmp
iret
pop
test
and
inc
xchg
lock
xchg
adc
mov
cs
mov
in
xadd
pop
pop
add
in
lock
mov
and
xchg
push
inc
sub
rorb
mov
outsb
lret
sub
mov
xchg
add
add
xchg
bound
mov
xchg
push
fmuls
les
leave
hlt
test
int3
fildll
addb
clc
loope
insb
je
dec
add
jne
dec
add
cmp
or
add
cmp
movsl
inc
imul
cmpsb
rorb
add
roll
int
mov
stos
rolb
ret
xor
xchg
xor
stos
sub
xor
mov
and
sbb
popa
cmp
jo
cltd
mov
add
push
cli
ffreep
xor
fisubrs
xchg
cwtl
and
push
cmp
mov
xor
popl
xlat
fimuls
in
adc
push
test
push
add
out
or
xchg
push
cld
loopne
jp
add
cs
add
fucomi
xchg
sbb
add
pop
pop
daa
jl
mov
or
fmull
push
pop
adc
mov
push
add
nop
ret
dec
repz
lds
cmpsl
sbb
es
loope
add
mov
dec
add
pop
movsbl
shlb
pop
and
nop
loopne
into
mov
add
aas
mov
in
mov
scas
adcl
cmpsb
inc
ffree
out
sub
pop
add
pop
xor
inc
rcl
push
add
test
ret
and
pop
adc
scas
add
sub
xor
jne
lock
add
or
add
xor
call
mov
fisttps
or
xchg
add
in
sahf
lret
sub
mov
sub
ret
mov
add
fmull
mul
insb
std
or
add
inc
aam
cmp
repz
add
add
scas
jle
popf
jecxz
add
cmp
xchg
mov
cmp
add
mov
xchg
je
push
aam
scas
mov
dec
pop
add
pop
into
scas
mov
or
cmp
movsbl
lea
mov
push
pushf
add
testl
add
jno
inc
xlat
into
dec
icebp
aaa
and
push
lock
push
test
data16
bound
mov
stos
push
xchg
mov
xor
inc
out
js
inc
cmpsb
sbb
and
dec
add
fcomi
and
rcrb
jg
add
in
xchg
popa
add
clc
inc
and
push
ds
mov
cmp
int3
ret
int
std
fs
sbbl
out
add
call
inc
mull
pushf
xor
sub
mov
mov
sbb
inc
pop
lea
lahf
xchg
testl
and
xor
mov
je
xorb
out
and
fs
cmpsb
or
loop
adc
nop
ja
jno
xor
xchg
pop
mov
addr16
and
xchg
sub
add
mov
cmpsb
mov
jo
and
cmp
lcall
and
daa
add
push
push
dec
cmp
mov
ja
mov
mov
ss
pop
sbb
add
repnz
sbb
out
test
jp
xchg
lods
pop
sbb
add
outsl
and
pop
jnp
xor
test
popf
xchg
shll
xlat
mov
cmp
mov
sub
enter
mov
jle
jne
lock
hlt
add
fisubs
pop
dec
mov
adc
add
addb
call
jns
add
fwait
incl
int3
pop
nop
sbb
or
push
out
inc
pop
xchg
xor
addr16
xchg
dec
mov
das
imul
test
xor
test
add
bnd
mov
add
or
stos
and
xchg
daa
xor
jle
mov
sbb
xor
or
or
mov
iret
push
mov
pop
std
imul
inc
aaa
inc
jle
mov
leave
or
sarl
add
add
jae
inc
pusha
ds
pop
add
int
cs
ja
stc
lods
dec
adc
aaa
addr16
lods
add
bound
cmp
or
mov
adc
xor
add
rcll
pop
ret
jle
push
jne
and
out
dec
popf
cli
sub
pop
insl
in
popa
cs
rorl
mov
sub
inc
add
call
movb
jnp
pmulhrsw
aad
push
scas
and
add
push
ss
xchg
inc
pop
jno
scas
push
mov
inc
shrb
cmpb
mov
push
push
ffreep
mov
sarb
pusha
mov
add
lahf
ja
jmp
leave
add
test
fs
dec
push
lahf
and
inc
xchg
mov
cmp
mov
push
das
pop
mov
mov
ret
stos
or
add
inc
add
xchg
mov
roll
push
xor
mov
outsl
jne
add
and
sbb
cs
add
push
insb
in
lds
dec
jecxz
ss
flds
insl
add
or
leave
adc
add
aas
xchg
pop
shll
movl
dec
popa
xor
pop
and
sub
xchg
mov
shlb
hlt
sbb
xor
scas
clc
push
sub
xor
pop
dec
test
jbe
xor
movl
mov
or
and
cmc
loop
mov
mov
cmp
pop
inc
add
dec
cwtl
dec
push
lahf
xchg
push
adcb
popa
push
dec
xor
loop
ja
rorb
mov
cwtl
push
std
add
and
and
in
and
int3
mov
fisttpll
out
xchg
inc
rolb
add
divb
push
xchg
jmp
jne
mov
fisttps
add
dec
rcrb
flds
in
push
cli
pop
hlt
dec
cmp
call
or
inc
xor
mov
stos
adc
add
or
fnstenv
es
mov
sahf
iret
stc
jl
jp
push
jmp
pop
int3
lock
add
dec
inc
mov
pop
nop
lods
add
out
scas
mov
or
fsubp
xchg
ret
rcr
mov
jmp
imul
and
addr16
pop
cmpsl
imul
mov
xchg
imul
and
xlat
add
xchg
in
fmuls
movsl
filds
xchg
out
pop
and
cld
int
pop
adc
xlat
add
rclb
lahf
ss
and
mov
inc
shlb
xchg
mov
stos
clc
mov
fisttps
das
mov
sbb
pop
xor
sub
push
inc
add
addb
xchg
xchg
add
push
mov
mov
test
mov
mov
mov
bound
pop
add
push
insb
mov
add
push
add
mov
add
lret
push
cmp
pop
add
jl
lock
xor
fcompl
rol
int3
loope
add
clc
and
jae
inc
xchg
sbb
pop
inc
movsl
cwtl
dec
pop
sbb
adc
jno
mov
pop
xlat
fbld
enter
cmp
jae
adc
int
jg
mov
dec
shl
pop
or
sub
lret
pop
mov
add
sbb
ljmp
ja
push
fiaddl
nop
fs
sub
outsb
data16
cwtl
inc
loope
cmp
jbe
push
pushf
call
lods
andb
or
inc
add
push
push
pop
inc
js
mov
adc
jb
cli
add
cmp
mov
repnz
and
xor
xor
mov
jne
pop
test
push
aas
fs
pushf
iret
add
jb
cwtl
or
pop
int3
test
repnz
mov
mov
fbstp
inc
dec
cmpsl
in
and
ret
js
inc
push
mov
repz
cmp
adc
adc
nop
adc
aas
mov
sbb
outsb
cmp
xchg
jmp
push
test
imul
imul
dec
lock
cmpsl
mov
adc
pop
or
cltd
add
jl
dec
pop
and
or
and
and
imul
shlb
push
lcall
jno
sahf
adc
mov
xchg
mov
ja
dec
or
add
xchg
fdivl
mov
mov
daa
adc
mov
and
rorl
cmp
int3
lahf
pop
mov
hlt
jl
add
push
mov
jecxz
add
sub
or
sbb
loope
lea
jnp
inc
mov
add
jp
cltd
cmp
jl
ret
lahf
insb
xor
add
fsub
test
jmp
movlps
and
cmpl
push
cmp
sub
pop
sbb
jb
jge
cltd
jns
push
add
add
inc
pop
sub
imul
pop
test
jg
mov
std
outsb
xchg
inc
mov
jmp
cmp
pop
aaa
xchg
inc
dec
mov
adc
xor
jg
or
outsb
and
and
jle
test
mov
in
mov
cs
jp
push
divl
add
dec
inc
mov
shrl
repz
add
push
ffree
nop
jne
lods
add
stos
in
xchg
fdivl
jmp
push
movsb
push
cld
add
mov
add
pop
popf
dec
sbbl
rcll
or
loope
add
inc
enter
pop
call
sarb
cltd
rolb
aas
arpl
fwait
out
adc
ror
loope
into
and
cwtl
outsb
xor
sbb
add
push
stos
lods
add
push
mov
or
xchg
push
mov
sub
dec
jle
or
sbb
cmp
cmp
test
out
rorb
xor
or
shrl
xor
fs
add
gs
push
jecxz
shll
add
jg
add
jo,pn
ja
enter
bound
out
cmp
mov
jl
push
add
inc
sti
add
and
mov
add
add
pop
cmp
orb
inc
pop
dec
notb
sub
test
mov
add
int3
jmp
sahf
xor
mov
cld
cmpsb
and
outsb
add
pop
std
inc
fidivl
test
out
scas
and
cmp
loop
iret
mov
repz
fnstcw
imul
lods
out
cmp
xchg
push
xchg
loopne
mov
xor
cmpsb
out
sub
mov
scas
hlt
or
cmp
lods
rcrb
cmc
and
lock
dec
mov
lods
inc
in
inc
inc
add
roll
and
js
rcll
and
inc
data16
sbb
push
mov
cmp
or
sbb
or
mov
add
xor
push
lret
in
pop
fldl
imul
xor
pop
sahf
add
test
je
jo
out
pop
mov
add
or
xor
repz
sub
sub
add
in
pusha
mov
sbb
movb
rcr
cld
mov
jg
shrb
enter
push
xor
jno
and
cmpsl
lret
pop
mov
cmp
xchg
inc
xchg
sbbb
pop
pop
das
movsb
mov
rcrl
jbe
fisubrl
call
es
aas
dec
insb
jl
or
sub
imul
push
xchg
add
ds
std
jbe
je
cmp
js
jne
cmp
imul
pushf
jge
mov
dec
push
push
fsubrl
popa
lret
je
mov
ljmp
std
lock
xor
popa
mull
enter
or
xor
ja
add
mov
xor
or
popa
in
pop
rolb
cmp
inc
sub
incl
int3
push
xchg
dec
sub
push
bndldx
mov
xchg
nop
pop
testb
mov
pop
ret
push
dec
out
mov
mov
loopne
mov
mov
sbb
adc
pusha
in
les
int3
sub
lea
xchg
jle
jnp,pn
call
repnz
add
mov
mov
mov
jl
jp
hlt
add
inc
lret
mov
incb
add
xchg
cs
jmp
jp
add
leave
jmp
ret
add
vmovdqu
pop
les
ss
pop
and
xor
add
sub
lcall
pop
adc
xor
in
inc
nop
stc
lock
push
cltd
cmp
and
fucomip
sbb
imul
movsl
sbb
add
in
jp
add
push
cmpsl
xchg
inc
lods
mov
aas
sub
fistl
stc
mov
adc
cmp
add
das
jle
lods
fs
adc
lods
xchg
xchg
mov
ret
pop
sub
into
jo
push
daa
dec
enter
jp
xchg
add
jbe
ljmp
dec
jmp
sti
mov
aaa
add
daa
pusha
es
cmpsl
push
inc
add
push
in
add
jecxz
adc
dec
xchg
add
in
stos
imul
adcl
or
push
inc
add
aam
xchg
xchg
jle
incl
loop
in
inc
cmp
sti
xchg
enter
lret
shlb
loop
cs
data16
add
inc
xchg
push
inc
insl
and
sbb
jno
push
adc
leave
or
dec
rorb
sub
addb
rcrl
iret
xchg
xor
test
addr16
insl
inc
pop
xchg
rcrb
fcomp
mov
fnstenv
add
mov
mov
dec
mov
add
add
mov
pop
add
test
and
scas
outsb
mov
or
fsubl
or
filds
insl
pop
aas
add
or
adc
dec
jae
cwtl
push
or
inc
push
xor
cli
xchg
sbb
mov
or
nop
adc
adc
add
cmpsb
movsl
push
pop
popa
add
rclb
fs
push
mov
mov
aam
inc
std
out
add
xor
ds
cmp
popa
jnp
pop
mov
jo
add
jns
push
dec
sub
aam
fnsave
add
mov
or
add
repz
mov
aad
dec
pop
out
fstps
aas
xlat
inc
xchg
adc
add
mov
inc
stos
insb
add
jb
daa
testb
movsl
pop
pusha
popa
mov
add
rorb
add
rorl
add
jbe
loopne
xchg
push
add
shll
movsl
add
enter
shrl
inc
stos
aam
adc
inc
ret
cmp
rorl
inc
mov
jecxz
out
popf
add
xchg
jge
cld
inc
repnz
into
test
rolb
cmp
pop
test
das
sbb
mov
arpl
out
add
mov
into
fisttpll
adc
fiaddl
cmp
sahf
adc
lret
push
sbb
mov
adc
cmpsb
dec
push
or
add
addb
add
and
jns
testb
add
cmpsl
sub
xchg
loope
xchg
add
in
pop
cwtl
add
mov
pop
add
mov
icebp
or
mov
das
sub
ret
lcall
pop
ret
hlt
fadd
lods
and
int3
sarl
test
ss
testb
pop
cs
mov
dec
jo
and
aas
insb
mov
pop
rorb
inc
add
movsl
adc
dec
std
jecxz
sbb
daa
push
add
out
loop
xchg
add
xchg
paddusw
cwtl
jb
jae
lock
aam
mov
int3
xorb
rcll
test
stos
xor
fstpl
cwtl
pushf
add
test
cmp
cmp
leave
mov
xchg
shlb
data16
add
xchg
sub
push
shrl
mov
lds
movl
push
push
loope
cmp
push
and
int3
repz
loop
cs
clc
lods
ss
es
jno
pop
and
and
adc
sub
daa
add
jle
sbb
bound
lods
mov
sarb
call
xor
mov
add
mov
sub
add
lds
or
and
xor
sbb
add
add
lcall
fwait
loopne
or
rcrl
or
lret
jecxz
add
stos
xchg
repnz
or
fldcw
add
xor
dec
sarb
sbb
jl
movsb
pop
mov
add
test
adc
xor
fs
adc
add
sbb
jb
inc
and
jecxz
je
add
pop
and
pop
adc
add
pop
xor
ret
add
mov
push
adc
jge
pop
ljmp
movl
push
xchg
movsb
test
add
enter
in
jo
cmp
push
cmp
add
lods
sub
test
xor
in
ret
mov
pushf
push
mov
mov
dec
pusha
add
xchg
cmp
add
stos
sbb
and
lldt
bound
fchs
cmp
iret
aas
mov
cmpsl
adc
mov
stos
adc
dec
lahf
adc
mov
fsubrs
xchg
add
push
or
ja
sbb
imul
in
sub
popw
sub
xor
mov
mov
pop
daa
test
mov
ljmp
dec
xor
jmp
dec
faddl
pop
sbb
inc
scas
mov
add
and
out
add
dec
xchg
add
mov
lcall
sbb
jecxz
imul
fists
xor
and
add
adc
pop
add
sar
add
sbb
add
lea
mov
mov
sbb
add
mov
and
dec
ds
out
dec
or
mov
add
cmpb
sub
add
mov
insb
add
lahf
lret
push
add
popf
xor
push
xchg
movsl
mov
and
outsb
leave
mov
cmp
or
testb
std
cmp
adc
dec
push
shlb
push
cwtl
inc
push
inc
mov
sub
add
popa
in
mov
rolb
ficoml
jne
leave
add
adc
fwait
addb
cmpsb
jbe
jae
add
xchg
shlb
xchg
sub
dec
rcrl
or
popa
cmp
mov
es
ret
lret
dec
out
outsl
int3
shlb
or
aas
add
loope
aaa
adc
psubb
add
mov
fstps
pop
add
xor
mov
popa
enter
inc
sarb
add
cmp
mov
xor
fildl
loope
jb
mov
mov
lock
and
jo
xlat
movsb
shrb
cs
xchg
cmpsl
pop
imul
xchg
cmp
lods
incb
pop
popa
sbb
faddl
sub
inc
cmp
fisubrl
add
push
je
jno
dec
adc
mov
jne
cmp
add
mov
dec
xor
dec
imul
into
and
fwait
xchg
or
nop
sbb
hlt
or
sahf
xchg
popf
and
fdiv
add
dec
notl
lods
jo
xchg
imul
insb
call
add
stc
push
fidivrs
inc
and
aaa
cmp
jbe
add
xor
adc
mov
sbb
ljmp
stos
inc
push
push
xor
loope
add
es
cmp
mov
pushl
mov
dec
add
inc
pop
dec
add
jp
pop
push
incb
iret
out
jge
cmpsl
add
sub
sahf
push
leave
xor
fdivrl
push
aaa
lcall
in
sti
sahf
add
jge
pop
mov
test
jns
ljmpw
push
push
cld
add
out
cmp
sahf
insl
cltd
pop
add
push
sbb
jnp
test
stos
inc
loop
mov
jne
cmp
pop
rorl
sbb
sub
push
xor
divl
xchg
cli
add
mov
clc
mov
cmp
add
pop
fs
or
inc
lret
push
push
stc
add
xchg
inc
sub
jns
adc
mov
sub
aas
mov
xchg
xor
ror
cmp
mov
and
inc
mov
lds
xchg
ljmp
pop
fsubrl
jo
adc
test
out
add
test
jmp
ficoms
add
add
add
test
inc
push
imul
and
push
sbbb
jecxz
pop
cmp
pushf
lcall
cmp
in
iret
arpl
mov
add
add
out
lcall
mov
dec
mov
fldl
mov
xor
pushf
cmp
add
scas
add
lahf
sbb
pop
cmp
testl
ret
xchg
loopne
add
inc
push
rol
push
addr16
loopne
ljmp
pushf
pop
sbb
sbb
sbbl
pushw
ret
aad
sbb
mov
loope
test
iret
fnstcw
mov
out
add
sub
jne
add
and
jecxz
add
xchg
aas
bound
sbb
push
lret
add
iret
adc
mov
add
orl
and
gs
adc
in
push
ret
cli
and
leave
push
out
sbb
add
mov
aad
loop
add
lock
aaa
mov
inc
fdivs
mov
add
dec
cmp
pop
cwtl
popf
xor
in
add
lret
jg
xor
stos
push
add
notb
inc
jl
sbb
and
adc
fwait
xor
jg
fsubp
jg
hlt
scas
lret
add
or
push
push
sbb
lahf
les
flds
sti
and
out
aam
add
dec
add
lret
into
cmc
insb
mov
pop
mov
dec
pop
addb
negb
push
pop
push
outsb
icebp
mov
push
inc
push
inc
cmp
arpl
xor
or
mov
imul
cmp
pop
jne
bswap
roll
jl
pushf
inc
fs
sub
adc
add
jnp
dec
mov
and
insl
jns
inc
push
shrl
adc
fdivrp
add
cmp
popa
pop
inc
jmp
loop
or
sub
ss
jl
and
out
xor
aas
les
pop
call
outsl
cmp
add
add
xchg
mov
sbb
add
cmpsl
push
add
jmp
add
jl
ret
fs
fwait
xor
jbe
sub
push
mov
add
add
xor
rolb
and
add
andb
jmp
mov
cmp
testb
and
inc
mov
xchg
add
les
xchg
leave
add
inc
repnz
in
fdivrs
test
dec
push
push
add
or
jno
lea
aad
shlb
add
nop
mov
pop
mov
repnz
cmp
pop
outsl
fwait
push
cmpsl
and
jecxz
aaa
push
ds
add
out
pop
loop
xchg
shlb
add
orb
ret
cmp
cmp
inc
xor
cld
cmp
pop
ficomps
sarb
dec
test
shll
icebp
dec
stc
cmp
pop
add
in
imul
pushf
popf
mov
out
push
dec
pop
ret
cmp
add
sub
and
pop
dec
ror
push
imull
inc
es
add
sub
std
and
jno
add
ja
push
test
loop
add
fadds
mov
ror
mov
cmp
fs
lret
jge
mov
add
pop
out
cld
test
add
rclb
mov
dec
and
inc
push
add
call
or
negl
inc
lods
mov
sbb
pop
push
in
aaa
pop
jns
mov
ss
sbb
add
out
iret
mov
into
mov
scas
je
add
outsl
sub
mov
pop
fidivrl
mov
add
adc
push
mov
out
or
push
data16
jae
or
add
icebp
repnz
sarb
cmp
cmp
adc
jb
arpl
in
mov
add
out
imul
xchg
add
mov
inc
imul
add
pop
popa
ds
popf
ret
imul
in
icebp
add
out
inc
jbe
ret
ret
clc
arpl
sbb
adc
sti
mov
cli
cmp
jmp
popf
ret
shr
inc
xor
mov
and
outsb
test
insb
data16
inc
sbb
push
pop
add
mov
das
fs
add
fnsave
ja
and
sbb
and
cmp
mov
pop
hlt
add
rcrl
pop
add
sub
ljmp
outsb
adc
push
inc
shll
sub
pop
add
jp
aam
cs
xor
iret
imul
rorl
sbb
jae
movsl
aas
fwait
ret
push
aam
testl
sbb
pushf
mov
mov
sub
std
adc
mov
pop
jb
fisubrs
mov
xor
jae
jl
jecxz
in
inc
inc
mov
cmpsl
shll
add
cmpl
aas
mov
and
inc
lahf
test
sahf
jbe
add
and
push
push
mov
pop
and
pushf
add
les
pop
and
pop
fildl
in
outsb
jno
mov
repnz
push
test
add
arpl
add
sub
jo
xor
jle
lods
xor
xchg
add
lcall
ret
in
filds
incl
out
xchg
add
dec
aaa
imul
cld
pop
jmp
fistl
orl
lea
add
out
loopne
push
stos
rcll
cmpsb
shlb
xchg
add
jne
jmp
mov
dec
sub
into
or
loopne
sbb
or
mov
icebp
mov
dec
call
add
fcmovb
or
loope
pop
arpl
bound
xlat
push
out
ljmp
data16
adc
dec
add
mov
hlt
add
or
xchg
incb
add
inc
push
mov
add
xorl
pop
mov
adc
mov
sub
sarb
mov
sub
stos
pop
pop
xor
xchg
push
xchg
roll
cltd
js
jmp
pop
push
add
mov
mov
out
pop
add
test
ret
pop
das
mov
adc
xor
fmul
xlat
sbb
addl
lds
add
shlb
in
sub
mov
nop
sub
scas
int
add
dec
pop
cli
push
pop
cmpl
xor
lock
adc
and
cmp
adc
jne
enter
loope
test
or
cwtl
mov
lahf
imul
stos
add
pusha
pop
aaa
rcrb
and
scas
push
xor
aam
cld
jmp
pop
lcall
sarb
andl
fsubr
in
stos
mov
hlt
mov
mov
shlb
inc
jns
test
mov
xor
sbbl
das
cs
lds
enter
cwtl
out
shl
cmp
pop
adc
gs
push
cmp
add
fisubl
fnstsw
xor
and
add
stos
dec
hlt
push
call
inc
std
adc
sub
jno
and
xchg
sbb
sarb
dec
mov
sub
incb
adc
cmp
push
dec
mov
sbb
push
sahf
pop
add
ret
pop
insb
inc
add
dec
lret
icebp
fs
add
not
aad
test
dec
push
xchg
imul
addr16
and
adc
jne
cmp
inc
adc
xor
inc
out
rcrl
xchg
pop
add
pop
incb
jecxz
add
int
push
and
xor
add
xchg
inc
and
add
mov
test
in
and
sahf
out
add
dec
xchg
test
and
add
or
add
inc
aaa
xor
pop
add
sti
adc
adc
pop
test
push
sbb
lock
fwait
repnz
in
loopne
std
sub
sbb
fisubs
add
lods
mov
lods
pop
out
in
adc
inc
rcr
rcr
dec
jge
add
outsb
xchg
and
dec
add
sub
roll
add
int
movsb
lret
mov
inc
mov
es
sbb
mov
adc
mov
inc
vmread
add
push
inc
movups
fsubs
xor
add
and
ret
shlb
aas
addr16
add
sub
gs
and
add
jbe
ja
ljmp
and
icebp
inc
inc
imul
cmp
jg
jge
cwtl
orl
xchg
xor
movsb
add
sbb
test
xor
push
xchg
cs
imul
test
ds
add
fimuls
pop
adc
stc
adcl
cmp
rcrb
jmp
test
lods
cmp
adc
add
cmpsb
mov
adc
dec
es
ret
enter
or
mov
scas
xor
jmp
out
into
dec
data16
mov
cmc
movb
enter
lds
stos
mov
jmp
jns
pop
ret
add
gs
pusha
pop
fldenv
pop
repz
cmp
or
mov
adc
push
mov
push
add
lcall
adc
fwait
or
jne
int3
jnp
or
adc
jb
pop
insl
and
jmp
aam
mov
les
jae
lods
mov
lods
add
xchg
pop
cmp
popa
insl
sarb
in
sub
xor
inc
adc
mov
or
in
inc
daa
fldcw
icebp
sarl
xchg
or
outsl
jnp
and
add
leave
mov
jmp
and
addl
enter
loop
and
jle
pusha
cmc
test
dec
inc
sub
scas
rolb
fs
loop
add
mov
or
and
scas
cmp
outsl
mov
mov
aaa
add
sarb
inc
cmp
popa
add
stos
and
ret
test
adc
les
push
pusha
scas
lcall
test
aaa
lahf
movsb
cmp
sub
pop
lcall
out
or
cmp
cmpsl
shlb
mov
and
aas
add
test
dec
dec
add
mov
imul
fs
aas
add
inc
jbe
cmpsl
ss
add
cvtps2pi
aam
mov
or
in
xchg
nop
adc
pop
fstpt
pop
dec
and
stos
outsb
inc
aam
dec
mov
add
cmp
push
out
add
movsl
mov
inc
push
add
shr
xor
xlat
and
mov
inc
mov
ret
sbb
dec
adcb
neg
cmp
add
sub
jecxz
lea
lock
cmpb
mov
xchg
push
add
pop
insb
dec
xor
daa
add
xor
shrb
xor
iret
push
aam
ror
scas
test
xor
rcrl
and
popa
push
inc
repnz
bound
add
ffree
push
movsl
and
sbbb
je
in
lods
pop
rolb
push
shr
inc
daa
add
mov
or
insb
ret
aaa
and
push
cmp
inc
mov
xchg
lahf
idiv
mov
cmc
or
jne
jg
test
iret
mov
xchg
add
pop
out
pop
push
pop
testl
add
ljmp
push
mov
cltd
adc
aaa
and
add
aad
mov
les
fildl
add
ss
push
pop
verw
push
sub
push
jb
sub
arpl
sbbl
popf
jge
ja
sub
xchg
jae
pop
es
push
shll
clc
popf
cld
sbb
jmp
xor
push
adc
xlat
out
adc
jecxz
jg
repz
fwait
sahf
lea
stos
add
cmp
sahf
rolb
out
loopne
mov
roll
jl
or
rep
sarl
rcrb
mov
cmp
mov
inc
xlat
add
dec
add
aas
xchg
pop
scas
mov
jg
data16
faddp
cli
fidivs
lahf
icebp
das
aam
and
movsb
add
dec
sub
out
inc
mov
jae
and
xchg
add
jl
dec
bound
je
rclb
dec
mov
mov
and
add
ret
nop
repnz
xorl
sub
pop
gs
mov
xchg
add
scas
and
push
in
sub
fidivrs
push
lret
or
push
int
cmp
push
jno
add
insl
out
scas
pop
enter
push
in
outsb
cld
test
mov
jp
sub
push
ds
faddl
adc
xchg
imul
stos
pop
xchg
xor
fcompl
inc
or
test
pop
cmp
add
js
add
adc
pop
or
sbb
push
inc
lds
xchg
dec
dec
nop
pop
sbb
adc
shl
adc
test
adc
xchg
sub
lcall
push
sti
testl
push
and
test
in
mov
mov
cmp
das
shlb
xor
lcall
sbb
pop
shlb
pop
mov
xchg
mov
jb
into
sbb
scas
daa
jae
lret
sahf
stos
aam
and
les
fidivl
add
jno
pop
loope
scas
rcrl
xchg
inc
cmpsl
mov
shl
add
xor
push
es
add
mov
add
into
lret
mov
add
loopne
imul
out
jge
xor
dec
addl
xor
mov
sub
movsb
mov
add
into
jg
loopne
and
push
ds
add
sbb
bound
insl
cwtl
lods
inc
pop
fcoms
pop
aam
loope
loopne
push
lret
add
ds
mov
and
add
mov
rcl
inc
out
xor
mov
aaa
jecxz
icebp
fwait
sbb
adc
push
mov
orl
sub
push
lock
sub
add
sbb
and
out
push
mov
fimull
frstor
xlat
push
lea
jmp
rcr
imulb
inc
es
inc
mov
mov
xor
mov
add
repnz
adc
push
mov
aam
adc
in
ja
aaa
adc
or
cmp
je
sub
mov
xchg
jle
data16
add
add
andl
mov
test
mov
dec
jb,pt
in
mov
fistl
int3
out
inc
test
test
jle
inc
shlb
mov
xor
out
pop
add
movb
lods
in
push
enter
add
push
movsb
lret
aad
hlt
mov
add
inc
popf
mov
mov
cmp
adc
jecxz
sub
repnz
inc
dec
mov
add
fadd
fcoml
push
addl
pop
inc
or
push
sarl
sub
fdivr
fstl
push
std
mov
subb
add
xor
mov
xlat
ljmp
add
sbb
popf
mov
in
adc
jo
inc
or
icebp
mov
leave
pop
movsb
add
outsb
shrl
push
out
into
fadds
mov
xor
ljmp
or
add
xor
fidivs
cmp
inc
cmp
pusha
and
mov
js
aas
gs
push
mov
push
sbb
arpl
inc
jp
cmpb
add
in
push
sbb
inc
xor
add
jae
mov
insl
add
jbe
clc
lcall
or
lds
sbb
dec
push
addl
pop
shlb
movsl
cmpsb
adc
xorl
lahf
pop
cmc
add
cmp
xchg
mov
jne
push
cld
adc
mov
shr
loop
dec
cmp
xor
add
jo
jge
add
dec
add
lcall
xorb
adc
mov
outsl
add
sarb
add
adc
add
fistps
or
leave
cwtl
arpl
cmp
jo
push
fistpll
shlb
add
mov
mov
xchg
pop
ror
add
ljmp
or
add
lcall
loope
lods
imul
add
and
or
mov
out
lea
inc
add
add
fmull
mov
sbb
lahf
add
sub
mov
inc
verr
xchg
gs
mov
add
lret
lds
add
cwtl
inc
repnz
mov
les
lret
sbb
cmp
push
or
mov
in
cwtl
int3
jp
dec
test
push
push
aas
and
rclb
pop
inc
jp
cmp
mov
loopne
fbstp
sbb
mov
test
mov
mov
mov
jecxz
mov
push
enter
and
add
inc
fiadds
arpl
orl
mov
push
xchg
xor
xchg
daa
mov
and
sub
pop
arpl
xor
add
xchg
stc
xchg
punpckhdq
xor
sbb
lock
add
push
mov
and
mov
lods
scas
add
adc
sbb
out
sbb
cmp
xor
ret
rcrl
fldcw
add
shrb
loope
xorl
rorb
rcll
cmp
out
stc
add
and
repz
lock
sub
add
rcll
and
pop
subb
aas
shlb
adc
out
mov
cltd
pop
xlat
sbb
xor
insl
add
rcrl
add
fs
rcll
dec
flds
aad
mov
pusha
mov
add
pop
push
mov
jae
clc
roll
movsl
sub
fchs
sub
push
inc
stos
add
imul
xor
add
push
add
inc
adcb
xchg
jb
mov
cmp
pop
adc
pop
add
addr16
adc
ret
and
add
jp
stc
or
mov
add
mov
dec
movsl
xchg
add
and
cmp
inc
push
rorb
sahf
add
testl
sub
sbb
xchg
add
mov
or
ret
test
out
mov
add
and
add
jecxz
sbb
inc
iret
loope
pop
pop
hlt
rolb
sub
adc
fwait
xor
bnd
pop
jo
inc
or
cmp
add
jb
dec
idivl
arpl
into
sbb
add
insl
out
es
add
fdivs
lret
andb
sbb
mov
xchg
pushf
add
pusha
insl
inc
addr16
inc
cmp
cmpb
in
sarl
mov
push
lahf
mov
movsb
mov
sub
int3
bound
imulb
les
imul
mov
pop
movl
lcall
sub
dec
xor
rcrl
pop
stc
jge
mov
or
adc
mov
scas
sbb
pop
into
jns
and
enter
add
mov
add
addr16
sbb
out
mov
dec
adc
cmc
mov
sarb
enter
pop
das
inc
and
dec
xchg
dec
adc
cmp
fwait
rolb
hlt
loope
lahf
mov
ret
cmp
in
jb
push
shrb
and
es
sub
jbe
orl
push
pop
stc
fwait
call
push
and
cmp
ret
push
negb
add
leave
push
pop
jo
or
fsubl
or
and
lods
shll
add
inc
adc
popa
lods
fisubrl
in
cmp
bound
add
and
inc
pop
xchg
xcrypt-cfb
cmpsl
jecxz
lret
sbb
or
add
inc
mov
add
xor
dec
xchg
shll
xchg
les
jge
jnp
add
pop
adc
adc
add
dec
mov
add
in
cmpsb
push
inc
pop
fs
and
sbb
testb
dec
dec
xor
scas
mov
add
cmp
ja
popa
pop
cwtl
jbe
push
mov
mov
loop
aas
cld
ja
cmp
pushf
jge
inc
or
sbb
jo
mulps
and
rcll
or
sub
dec
test
mov
xor
ja
ret
stc
jmp
pusha
push
mov
sub
test
and
and
mov
and
jno
add
es
add
fldpi
ret
leave
sub
out
addr16
sbb
popf
sbbl
add
loop
add
mov
inc
in
dec
pop
mov
xor
dec
leave
push
and
cmp
add
push
push
std
sbb
inc
add
js
push
jecxz
ss
add
dec
xor
pop
sub
cmpsb
aaa
and
dec
mov
mov
cmc
mov
int
into
out
pop
cmp
pop
pop
shlb
add
inc
outsl
add
pop
sarb
ffree
mov
pop
cld
jne
dec
cmp
mov
or
fstpt
sbb
flds
push
pop
cmp
add
stc
fcoms
or
jo
and
pop
loopne
aad
cmp
ret
pop
mov
adc
xor
sub
rcl
pop
imul
and
int
addr16
test
dec
and
add
push
adc
jo
add
test
push
add
xchg
mov
push
jl
mov
mov
test
sub
rclb
mov
fbld
call
fstpt
cmp
mov
sub
clc
pop
dec
mov
push
add
push
sub
add
in
mov
fstl
sbb
or
mov
mov
pop
and
lea
mov
sbb
xchg
xor
repnz
aas
dec
add
fsub
pop
fst
imul
jbe
mov
dec
inc
std
loope
push
add
mov
sub
xor
les
les
xchg
addl
push
ja
ror
sbb
inc
cmpsb
add
shlb
ss
lock
mov
or
popa
enter
or
pop
cmp
bound
in
scas
add
in
repz
pop
push
icebp
sbb
and
int
cmp
outsl
filds
ficoms
adc
jge
jb
rclb
into
lods
rcll
push
lcall
and
or
pop
or
jb
xor
arpl
add
xchg
rol
add
xchg
pop
outsl
cmp
ret
aas
cmp
ja
test
ret
repz
inc
cmp
test
pusha
sbb
mov
stos
cmp
jle
add
add
xlat
add
ja
lods
xor
jo
inc
inc
cli
test
aas
leave
push
cmp
add
sbb
xchg
dec
sub
add
mov
sbb
add
sbb
xchg
push
rolb
addb
inc
xchg
xor
clc
lock
movsl
inc
fcmovbe
lret
push
fdivrl
jl
lock
adc
mov
add
mov
cs
and
out
jge
inc
mov
add
mov
and
xchg
add
sub
int3
lock
mov
mov
add
jo
shrb
sbb
sub
and
jp
adc
sub
xchg
xor
fcomi
nop
movsl
enter
ljmp
jnp
pop
xlat
iret
sbb
pop
mov
add
xor
out
sbb
lock
push
negl
sub
int3
fs
sub
push
stos
ret
xchg
xor
dec
xor
bound
inc
xchg
xor
add
add
inc
and
fwait
nop
xchg
sarb
add
ret
add
mov
mov
add
sbb
insl
mov
imul
pop
jmp
loope
xor
or
push
dec
push
outsl
push
rorb
and
loop
xor
je
add
aaa
ficoms
mov
xor
imul
jnp
ljmp
fiaddl
dec
shrb
cmp
mov
xor
shll
push
or
test
xchg
ret
add
inc
std
or
lds
cmc
es
sub
and
inc
ficompl
add
add
push
push
add
and
movq
add
negb
enter
dec
adcl
or
sbb
dec
ljmp
loopne
andb
fcomps
jle
add
or
pop
adc
repnz
inc
mov
shlb
cmp
idivl
cmpsl
add
adc
incb
adc
pop
sub
xor
xor
dec
out
inc
adc
shl
lods
cmp
out
sub
das
cmpsl
rorl
addb
mov
dec
mov
pushf
mov
sbb
mov
cltd
mov
out
mov
add
jbe
add
dec
clc
inc
pushl
and
mov
and
stc
lcall
push
jmp
icebp
das
rolb
sarb
rorl
into
js
push
xchg
xchg
ficoms
sti
mov
pusha
cmp
pop
dec
add
jo
mov
shlb
fcoms
sub
add
fstl
push
imul
ja
outsb
mov
or
out
ret
jecxz
adc
mov
mov
inc
aad
sar
push
xchg
in
mov
and
ret
mov
jge
aad
test
mov
dec
rclb
js
mov
divl
stc
sbb
mov
rol
xchg
cltd
or
popf
add
pop
rcr
les
std
adc
push
ficoms
inc
dec
add
in
lea
mov
inc
sahf
ret
mov
lock
dec
cmp
mov
hlt
add
mov
inc
inc
flds
lcall
and
and
pop
push
in
push
outsl
str
sti
push
jle
cmp
mov
clc
lock
nop
add
pop
mov
or
cmp
cmp
xchg
push
rol
lret
nop
aad
add
je
add
cld
jb
or
test
insb
and
dec
les
mov
pop
pusha
push
mov
wrmsr
out
js
jecxz
stos
loope
xlat
mov
jl
pop
inc
cmp
and
cmpsb
cwtl
add
sbb
sub
mov
adc
in
add
and
insb
add
aas
fldpi
mov
imul
and
rolb
icebp
test
cmp
scas
bound
rcr
mov
push
loope
pop
lahf
mov
push
xor
pop
ljmp
push
outsb
aaa
pop
lock
and
fimuls
and
cmp
fsubrl
rorl
jno
imul
pop
cltd
mov
jae
jo
inc
push
cmc
lods
mov
icebp
add
add
clc
mov
test
pop
and
sbb
mov
je
push
cmpsb
sbb
mulb
inc
aad
and
and
mov
mov
and
cld
adc
lods
bound
lock
popa
add
addb
jle
pushf
xchg
push
mov
das
out
cmpsl
rclb
jnp
ss
add
jge
pop
dec
add
stos
fwait
mov
cmp
mov
bound
cmpsl
sbb
pop
out
mov
add
fmull
std
adc
sub
ret
mov
push
mov
sbb
cmp
mov
repnz
cmp
mov
scas
and
or
shrl
add
cltd
insl
sbb
mov
and
inc
add
cs
dec
and
xor
outsl
addr16
mov
insb
add
xlat
in
cmpsl
and
jae
mov
out
cmp
sbb
mov
movsl
push
and
ffreep
lods
cli
popa
jecxz
push
inc
loop
iret
mov
sbb
out
pop
add
inc
ficomps
xor
jp
jne
xor
sub
ds
sbb
adc
push
sbb
or
mov
dec
add
lds
push
dec
jnp
add
hlt
imul
stos
das
fstps
addb
sub
pop
inc
call
das
lea
xor
sub
sbb
push
addb
testl
fstps
add
xchg
or
sub
mov
push
outsb
cmpsl
in
cmpsb
inc
jmp
scas
adc
test
or
test
mov
stc
fs
sbb
adc
fidivrl
xor
in
and
decl
rol
pop
mov
xchg
push
xchg
bound
add
es
or
cli
sti
xchg
shrl
cmove
aam
hlt
jle
leave
clc
xchg
mov
out
and
loope
cwtl
xchg
cmp
add
lods
dec
pop
or
add
lea
in
or
and
or
and
lcall
jecxz
testb
repnz
ret
mov
mov
xchg
pop
jns
pop
add
and
outsb
and
or
ret
fldenv
jns
mov
popl
inc
imul
mov
jp
pop
dec
cmp
mov
movsb
and
data16
rolb
fiadds
incl
and
jno
enter
mov
and
push
loope
xchg
sub
mov
mov
add
pop
in
xor
jno
sarb
adc
xor
mov
pop
cmp
pop
add
mov
push
ja
ret
sub
dec
and
xchg
push
pusha
popa
sbb
cs
cmp
cmpl
push
add
lds
push
xor
insl
int3
fidivl
fs
lock
test
dec
xchg
imul
outsl
cmp
idivb
or
add
add
test
mov
xchg
les
mov
test
add
shl
xor
cmp
pop
ss
mov
ret
andl
push
or
std
pop
dec
add
ret
test
js
es
sub
dec
mov
cwtl
dec
fcmove
icebp
inc
stos
jmp
and
jmp
mov
cli
jge
pop
outsb
andl
xor
ds
adc
jecxz
mov
loop
decb
pop
push
xchg
inc
dec
cmp
jp
fisubs
add
lahf
adc
cli
shr
aas
sbb
add
aam
jle
pop
inc
daa
xorb
adc
xchg
adc
push
stos
cmp
xchg
nop
pop
fistps
add
pop
stc
mov
xchg
mov
into
xchg
mov
add
arpl
ret
invd
addl
add
sahf
xchg
movsl
push
xchg
cmp
cmp
das
pop
and
loope
rolb
cmp
mov
daa
push
pop
add
sbb
inc
lods
push
adcl
cmp
pop
dec
or
imul
pop
mov
push
add
mov
mov
and
dec
mov
jge
add
xchg
cmp
cmc
insb
add
je
arpl
test
cmp
cli
cmp
mov
pop
mov
cs
add
cmp
inc
fcmovnb
pop
movl
dec
lock
sub
rolb
popf
cmp
mov
adc
cs
mov
pop
out
xor
add
adc
lods
ret
jmp
add
or
mov
movb
flds
rol
inc
fstpt
mov
or
repz
ror
mov
aaa
mov
xor
ljmp
mov
out
stos
dec
pop
pop
fucomi
or
fsubrl
xchg
pop
xor
mov
sub
out
add
mov
movsb
inc
xchg
cmp
add
roll
pushf
and
int3
jle
mov
pop
add
and
das
adc
popa
dec
or
stc
ret
hlt
mov
or
or
add
xor
and
push
jns
or
bound
pusha
cmp
hlt
adc
jbe
jae
icebp
add
iret
in
pop
mov
mov
cld
pop
pop
sbb
push
add
xchg
inc
add
adc
push
and
ret
aaa
sbb
pop
add
add
pop
jecxz
movb
mov
fcompl
int3
add
add
fiadds
iret
xor
icebp
out
inc
ret
adc
sahf
mov
pusha
xchg
je
or
adc
add
xor
add
xchg
loop
negb
ret
mov
popf
dec
mov
push
pop
add
fmuls
and
add
iret
les
push
add
push
outsb
mov
aad
mov
pop
jnp
roll
ds
add
and
sahf
sub
stos
std
addl
xchg
jmp
iret
mov
into
xchg
cs
popf
stos
imul
jae
push
and
ss
xchg
cmpsl
push
orl
filds
mov
or
pop
add
iret
out
or
push
add
scas
fsubrl
mov
ljmp
lcall
add
cwtl
sbb
mov
cs
call
xor
or
es
out
and
pop
icebp
cld
jbe
pop
add
and
dec
add
in
shlb
and
test
ret
xor
add
push
je
adc
stc
sbb
add
jp
mov
dec
cli
dec
inc
cld
rol
or
jnp
cmp
cltd
add
outsl
pop
faddl
inc
testb
pop
inc
cli
adc
fdivrl
push
dec
sarl
push
adc
adc
into
and
and
or
incb
mov
mov
jne
repnz
and
out
cs
int3
adc
es
add
cmpb
xor
inc
pop
sub
pop
mov
add
xorl
sbb
lods
stos
shll
hlt
or
in
mov
adc
shlb
cmp
lret
mov
inc
jecxz
loopne
lea
rcr
push
or
sub
cmp
push
lcall
hlt
filds
popf
into
test
push
push
inc
jns
and
mov
push
pandn
icebp
fdivrs
js
das
pop
mov
jg
push
inc
ret
push
cmp
or
mov
rolb
divb
ffree
xchg
push
mov
sahf
push
mov
adc
mov
add
mov
imul
jmp
cmpsb
lcall
mov
xchg
mov
jno
aas
sub
push
adc
sbb
jg
jae
pushf
dec
nop
ret
dec
test
xchg
cmp
sahf
lods
add
fildl
push
sbb
enter
adc
push
cld
inc
adc
mov
sub
fdivrs
mov
test
loopne
addb
pop
es
jle
jno
or
push
mov
mov
add
cmpsb
in
lret
scas
sub
push
outsb
mov
inc
shlb
sub
jp
stc
mov
xor
push
lret
add
push
xor
jp
les
or
sbb
cmp
fmulp
add
popf
mov
or
addr16
push
fisttpl
out
inc
insl
cmp
ss
add
mov
pop
movsb
add
dec
xor
inc
stc
xchg
or
je
add
sbb
inc
lahf
cmc
lret
adc
and
adc
ret
sub
sbb
into
movsl
call
dec
in
mov
imul
xor
outsb
sbb
inc
js
cwtl
add
cmp
mov
add
or
mov
mov
add
xchg
or
jecxz
aad
lds
jbe
sbb
loope
pop
inc
add
adc
loopne
dec
lret
notl
mov
imul
cwtl
rcrb
xor
mov
xor
push
mov
dec
mov
pop
dec
test
xchg
cmc
add
std
rorb
cmp
pop
pushf
int
mov
and
inc
out
adc
pop
add
loopne
add
add
mov
cs
xor
arpl
enter
pop
cmp
mov
or
fiaddl
test
add
inc
cmpsb
dec
mov
fidivrs
mov
popa
push
add
pop
push
and
mov
mov
cmpsb
push
arpl
stos
add
cmp
add
outsb
shlb
in
ret
fnstenv
mov
mov
mov
pop
outsl
into
jo
lds
xor
inc
xchg
adc
adc
xchg
pop
inc
mov
inc
stos
lret
es
ja
cli
sbb
pusha
dec
push
add
rcr
insl
pop
sbb
adc
arpl
hlt
sarl
lds
ret
leave
add
xchg
pop
xchg
dec
mov
adc
add
pop
icebp
fdivl
push
jns
add
fwait
movsb
es
sbb
add
sbb
loopne
ljmp
cli
adc
xlat
fiaddl
pushl
xor
inc
ds
sub
cmp
sbb
adc
add
jb
inc
mov
fldcw
add
testb
je
ficoms
and
xor
dec
aad
jecxz
ja
or
push
cmc
sbb
add
adc
xlat
add
ljmp
inc
lahf
pusha
sbb
cmp
cmp
mov
aaa
cmp
lock
pop
inc
stos
cs
shrl
stc
xchg
add
rcr
int
push
into
fadds
addb
cwtl
bound
roll
pop
movsb
cmp
cmp
fildl
je
xchg
ds
lret
add
mov
test
dec
and
adc
ja
add
popf
and
punpcklbw
fstpt
and
add
stc
pop
insb
hlt
loope
add
fwait
ja
push
clc
mov
mov
or
aam
add
and
pop
and
in
sbb
pop
push
lret
push
or
lods
ret
stos
jae
addb
shl
push
rcrl
sbb
fnsave
rcrl
xchg
fisubrl
pop
testb
adc
dec
stos
push
sbbl
adcl
jns
sbb
or
mov
and
adc
mov
jg
cmpxchg
imul
mov
adc
xchg
jnp
cmpsb
rorb
mov
push
std
xchg
daa
insl
adc
xchg
push
pop
dec
xchg
add
ret
popa
movsb
cmp
add
lds
mov
inc
stos
loop
in
es
cmp
imul
mov
lock
add
xor
sbb
mov
mov
mov
inc
mov
lock
add
xchg
ret
inc
jmp
fidivrl
je
cmc
repnz
sbb
jl
stos
xchg
lds
repz
arpl
inc
lock
mov
add
sbb
add
or
and
ret
jno
add
fsts
inc
dec
add
cli
shl
add
rclb
cmp
xor
incb
stos
fistl
add
in
jbe
pop
ret
mov
jl
cltd
pop
push
add
mov
pop
add
fmul
aaa
sub
arpl
imul
orl
push
lds
and
jl
cmp
sub
add
in
out
mov
add
sub
je
enter
insl
jns
and
cs
aaa
stos
mov
pop
mov
pop
and
test
sub
sahf
push
add
inc
je
scas
jl
nop
add
xor
lods
sub
jg
xchg
add
fs
adc
xor
sub
xchg
add
std
lret
pop
outsl
int3
inc
rcrb
add
ret
inc
fsts
dec
adc
and
and
decl
mov
push
nop
movsb
aas
mov
int
jle
mov
popa
mov
cmc
mov
test
inc
dec
and
xchg
sbb
add
loope
dec
pop
stc
daa
jnp
inc
jle
stos
int3
pop
in
in
lods
xchg
addr16
sub
add
jmp
add
mov
mov
inc
jp
and
push
lcall
loope
dec
pusha
inc
rep
adc
adc
in
inc
sub
mov
jo
push
dec
sbb
int3
add
sub
lods
mov
mov
cmp
out
add
mov
loope
add
mov
add
sbbl
lret
mov
push
inc
in
and
mov
sub
ret
call
ljmp
pop
and
xor
push
jmp
xchg
mov
aas
imul
cmp
pop
cmp
lret
mov
add
push
repnz
dec
outsl
cld
cmp
mov
out
scas
xchg
adc
popa
lods
add
js
mov
mov
cs
mov
imul
inc
push
lahf
into
je
mov
ss
add
inc
or
into
pop
mov
fadd
xor
lock
jae
aas
ljmp
jne
aaa
loope
add
sti
mov
add
or
in
pop
inc
or
sub
cmp
jecxz
and
out
mov
adc
and
fmuls
data16
dec
loope
dec
lods
cmpsb
cmp
loope
xchg
jb
pop
ljmp
outsb
pop
inc
roll
fwait
aad
int
lods
js
shrl
hlt
es
sbb
xchg
sbb
pop
shll
add
movb
xor
sub
cmp
cld
scas
das
add
jnp
jns
add
idivl
lods
fucomi
and
mov
xor
mov
dec
jge
xor
ljmp
arpl
sbb
push
add
xchg
inc
outsb
add
adc
sub
add
shlb
cli
mov
push
xor
adc
addr16
xchg
adc
adc
testb
daa
xor
cmp
dec
std
movsl
shl
inc
adcb
mov
into
add
mov
jmp
add
leave
inc
adc
shll
adc
add
idivl
xor
mov
lret
es
or
add
ficomps
add
mov
js
add
call
mov
les
cltd
push
nop
insl
add
iret
movsl
jns
xor
scas
cmpl
sbb
mov
add
lock
ret
test
loopne
add
add
cli
pop
inc
dec
or
xchg
add
popa
in
dec
fldcw
rorb
popf
sub
scas
xlat
cmp
add
into
lret
mov
or
push
pop
arpl
and
je
cmp
sub
vpmulhuw
cmp
mov
ret
dec
push
mov
mov
inc
movsl
js
cmp
xor
sub
cmp
mov
or
add
xchg
xchg
sbb
fwait
push
shll
jmp
push
stos
mov
shl
mov
dec
cltd
sub
clc
incl
je
inc
icebp
mov
arpl
add
add
or
out
mov
sbb
cld
hlt
and
rorb
pop
xchg
xchg
sub
mov
cmp
mov
sub
add
inc
mov
add
xchg
or
mov
cmp
call
scas
add
movsb
add
mov
xor
add
inc
fisubs
test
shll
jle
mov
ret
cld
insl
mov
pop
sub
add
ror
sbb
jne
into
and
or
loope
jmp
out
inc
cld
in
fcoml
mov
in
sub
out
aad
adc
data16
ret
ret
mov
xlat
imul
and
lock
xchg
dec
popf
jl
icebp
mov
dec
add
leave
mov
mov
mov
mov
stos
mov
jbe
iret
outsl
ss
lret
fistpl
nop
imul
mov
cmp
daa
cwtl
test
bound
imul
inc
sti
cmp
orb
push
push
mov
xchg
add
lahf
pop
ds
add
sbb
rclb
fmul
and
std
add
xchg
xchg
adcb
cmp
fidivl
out
cltd
mov
test
mov
pop
cmpsl
add
es
sbb
add
addr16
out
imul
and
addl
mov
ljmp
loopne
rorl
enter
add
push
mov
test
pop
in
sbb
add
and
repnz
xorl
push
add
xchg
mov
add
hlt
push
mov
push
js
cli
mov
lret
jg
mov
jae
push
add
xchg
scas
mov
popa
gs
sub
mov
addb
push
pop
outsb
fmuls
add
jae
insb
add
mov
jnp
push
push
add
fdivs
add
sub
jecxz
rolb
xor
scas
addb
pop
rcl
add
xchg
jae
inc
inc
cmpsl
imul
mov
mov
pop
shll
or
xor
loopne
mov
nopl
add
pushf
xorb
pop
insb
ss
mov
gs
cmp
roll
inc
sbb
fistpl
pop
out
mov
jg
roll
lods
sbb
sub
add
mov
mov
pusha
dec
lret
jecxz
aas
mov
call
test
sarl
inc
cmp
addr16
mull
icebp
imul
dec
pushf
in
outsl
mov
xchg
push
adc
mov
mov
push
mov
cmpl
add
and
in
cmp
aad
and
insb
divl
jne
inc
lock
cmc
mov
ss
into
dec
loope
cmp
mov
sbb
lea
arpl
hlt
xchg
add
mov
xchg
add
bound
jge
decl
or
adc
jmp
add
xchg
mov
push
loope
add
or
xor
and
sub
and
int3
mov
lret
sub
pop
jno
jo
test
out
dec
into
int
add
jbe
sti
aas
scas
jmp
add
jno
shll
addr16
add
push
adc
or
cmp
mov
add
ds
scas
cmpsl
cwtl
dec
mov
dec
push
fbstp
or
jle
dec
adc
aam
test
stos
pop
xchg
sub
cmp
test
push
adc
pusha
xor
add
mov
mov
fs
add
xchg
and
sub
mov
adc
adc
cmpsl
addr16
sub
mov
adc
mov
test
jl
sbb
add
dec
pop
incb
jns
lock
pop
mov
movl
cmp
jb
sbb
pop
mov
inc
add
sbb
or
push
add
call
imul
xor
xor
mov
jae
mov
add
inc
je
add
dec
mov
dec
add
mov
in
add
lea
add
jne
lods
add
mov
movsl
xchg
clc
jbe
mov
cmc
cmp
in
daa
cmp
stc
add
pushf
jnp
add
xor
popf
repnz
xor
or
cli
sub
jnp
ljmp
sub
and
xchg
sarl
sbb
add
cli
outsb
in
sbb
pushw
add
inc
push
ret
jb
sub
jno
shlb
inc
mov
xor
adc
add
push
mov
add
insb
push
or
jecxz
inc
add
test
sbb
stos
movsl
add
pushf
leave
push
or
clc
or
push
in
add
lods
dec
or
arpl
cli
add
insl
gs
pop
fwait
xor
movsl
fs
adc
cmp
scas
and
insb
add
int
mov
rcl
cmpsb
push
push
cvttps2pi
rolb
mov
into
adc
mov
xchg
shlb
add
or
mov
add
sahf
sbb
in
test
cmc
inc
fildl
fs
push
add
sbb
inc
fsubs
daa
add
pop
std
pop
jecxz
push
in
dec
jp
mov
add
push
and
xor
mov
sub
shlb
add
popf
lea
add
pop
push
faddl
cli
and
cmpsb
andl
andl
popf
xchg
das
dec
cmpsl
int3
add
ss
aaa
adc
nop
loop
jp
dec
add
insl
sti
test
fwait
add
inc
daa
sahf
std
cli
arpl
mov
pop
mov
add
das
jae
push
xor
sub
or
lds
clc
in
xor
test
pop
sar
xchg
push
inc
scas
mov
cmp
inc
adc
stos
xor
add
in
mov
sbbb
and
arpl
popf
loop
iret
inc
adc
enter
out
faddl
push
sub
adc
mov
fstpl
add
cmp
cltd
add
mov
cmp
or
call
std
xchg
fstl
and
add
insl
in
out
es
sub
cmp
imul
dec
push
repnz
xchg
inc
push
or
mov
jecxz
add
cmc
mov
push
push
lds
or
scas
aas
add
rcll
add
lock
and
enter
xor
xchg
int3
cmp
add
mov
clc
ja
dec
lret
lahf
inc
push
daa
xchg
fwait
jno
add
fs
movsl
fistpll
add
jo
cltd
inc
negl
cmp
push
xor
pushf
sub
pop
movb
inc
and
dec
icebp
xchg
mov
test
push
dec
pop
xchg
sbb
movsl
and
repnz
mov
inc
pop
aas
test
add
int3
ret
push
nop
push
scas
lcall
sbbb
adc
add
add
cmp
addl
inc
out
popf
or
movsl
clc
adc
xchg
rcr
mov
imul
pushl
test
subl
aaa
add
es
into
stc
mov
sub
jne
or
mov
jmp
jae
enter
movsb
mov
cmpsb
pop
call
mov
scas
push
inc
rcll
add
call
movsl
cmovb
ds
and
add
je
nop
jnp
paddd
mov
mov
mov
sahf
js
stos
scas
add
and
or
cmp
fdivl
es
mov
ja
xchg
adc
leave
test
out
ds
add
shll
popf
in
xchg
cmp
xchg
and
mov
sub
dec
xor
test
mov
roll
hlt
stos
mov
push
dec
loopne
add
or
sarl
loop
lret
sub
jne
loope
mov
stos
into
add
adc
outsl
jmp
jecxz
and
sbb
aaa
mov
jg
sub
mov
scas
add
jo
lcall
nop
inc
rcll
out
insb
adc
in
xor
sbb
mov
in
jbe
jp
and
cmp
add
mov
xor
cmp
test
cmpsb
cs
test
dec
movsl
pop
xor
ds
or
lds
loopne
xor
jl
cmp
cmp
mov
push
xor
in
insb
mov
sbb
loop
lea
inc
pusha
pop
int
pop
push
or
or
decl
xchg
clc
mov
add
jo
mov
add
and
ret
jns
cmc
pop
and
cmp
push
mov
je
fwait
enter
test
lcall
lods
sbb
addr16
xchg
mov
xor
std
push
stc
cmp
pop
jg
sti
fldl
loop
sahf
les
add
push
fmuls
repz
pop
cld
add
add
repnz
sbb
mov
cltd
loop
jl
hlt
add
cs
aas
sbb
aad
add
mov
dec
mov
jnp
push
xor
jmp
data16
stos
and
pop
mov
cmpl
mov
add
mov
add
fmuls
add
cltd
out
add
addr16
sarb
fdivs
jge
pop
mov
add
mov
xor
mov
sub
or
or
inc
inc
push
jne
jp
dec
xor
lods
mov
add
jecxz
inc
mov
adc
das
nop
or
mov
out
xor
das
daa
call
pop
rol
les
cld
mov
ja
or
jno
shll
xchg
and
call
sub
dec
xor
pop
add
in
dec
add
icebp
mov
jge
cmpsl
movl
push
lock
sbb
in
dec
mov
ffreep
mov
mov
or
add
jl
mov
xor
mov
cmpsl
inc
loop
sbb
in
outsl
ret
clc
in
sub
loope
add
mul
andl
jmp
jb
shrb
mov
sub
loopne
in
subl
stos
gs
add
pop
mov
jbe
outsl
roll
mov
jl
cmp
rorb
mov
outsl
inc
inc
jno
out
mov
xor
xor
ffree
imul
sti
push
add
cmc
dec
pop
scas
and
mov
push
push
mov
cli
inc
cmp
cld
stos
stc
or
add
shufps
adc
push
movsb
cmpsb
ss
nop
fmull
fisttps
and
sub
cmp
sbb
mov
mov
inc
sahf
cmp
jbe
jmp
xor
dec
cmp
pop
jb
inc
add
fadd
push
and
adc
adc
das
test
adc
test
inc
lods
jnp
pop
adc
insb
xor
hlt
loope
push
movsb
lret
xor
sub
dec
cld
push
dec
add
test
int3
mov
stos
daa
ret
mov
cmp
or
rorb
scas
flds
add
rcl
ss
add
hlt
dec
cltd
mov
jl
mov
leave
xor
lahf
or
add
out
pop
add
mov
jp
add
mov
shll
int3
loopne
sub
lods
xor
adc
push
add
shll
mov
add
mov
push
inc
push
or
mov
xor
and
hlt
jnp
push
adc
pop
jle
adc
mov
push
rcrl
mov
in
add
push
add
popf
pop
int
jmp
fiadds
imulb
scas
mov
scas
rcrl
xchg
pop
idivb
inc
loope
xchg
pop
inc
nop
jmp
add
test
cmp
xor
cmp
sti
or
cmp
cmc
fimull
sbb
and
inc
aas
add
add
add
iret
scas
pop
int
rcrl
mov
xor
cwtl
mov
add
sbb
pop
xchg
int
mov
jo
or
xchg
inc
in
mov
inc
addl
stc
ss
ffree
out
lock
scas
adc
in
push
daa
add
xchg
inc
int
aaa
addl
cmp
pop
out
and
lock
bound
sbb
pushf
shl
jge
xchg
and
insl
sarl
mov
and
cmp
sbb
popa
ljmp
or
adc
mov
testl
dec
inc
cs
add
int
lods
hlt
cltd
iret
add
sbb
fmul
fiaddl
in
clc
daa
divb
add
jmp
jge
fnstcw
xchg
jno
inc
lock
leave
repnz
enter
mov
lds
ret
pop
and
lock
and
fisubrs
mov
mov
lods
fisttpl
push
jbe
mov
inc
popl
cld
jnp
lcall
lods
je
adc
sbb
sub
jp
mov
mov
les
add
ret
push
loope
fldl
xor
test
outsb
or
jb
adc
inc
or
pop
fmuls
aaa
lods
insl
iret
shll
arpl
inc
loop
add
add
sbb
in
xchg
popf
jecxz
jmp
ret
sbb
lahf
push
setno
and
push
mov
push
mov
add
and
movsb
adc
pushf
add
nop
adc
mov
je
mov
xorl
ret
add
std
mov
add
push
cs
mov
add
shlb
roll
jne
dec
add
cmp
xor
push
cmp
dec
test
jp
cs
ds
and
cmp
in
mov
add
les
add
sub
rolb
adc
push
push
sub
sahf
jne
add
and
mov
mov
add
mov
out
imul
jg
popf
cmp
in
rcrl
pop
jbe
add
mov
push
cltd
jg
pop
sbb
add
mov
jle
les
cwtl
add
testb
adc
mov
push
xor
cmpsb
mov
jbe
add
add
ror
cmc
mov
sahf
add
loopne
adc
pop
xor
dec
push
xchg
arpl
dec
cmpsb
mov
scas
add
sub
shrl
xchg
int3
mov
jb
add
lret
out
out
push
jmp
int
pushf
xor
rorl
add
sub
push
add
cmc
xchg
mov
and
lret
cmp
push
add
lock
sub
xor
aas
adc
stos
test
mov
pop
and
jp
jno
inc
add
fcmove
movl
xchg
out
and
adc
stc
test
imul
and
cld
pop
mov
sbb
cmp
sbb
push
clc
movsl
das
pop
add
lahf
js
rcll
xchg
xor
jae
add
pop
adc
add
lcall
fwait
pushf
lods
adc
add
int3
push
or
jmp
mov
pop
movl
or
mov
and
mov
or
add
inc
add
dec
add
xchg
sbb
outsb
in
or
xchg
sub
pop
cmpsb
pushf
push
inc
scas
sbb
into
cmpsl
pop
shrl
mov
jne
imul
mov
aam
cmp
sbb
popa
enter
add
mov
addr16
mov
xchg
lret
shrl
pusha
sti
and
adc
jp
es
mov
add
mov
int
icebp
loopne
add
jl
nop
test
cmpsl
in
xchg
sbb
das
add
into
mov
pop
clc
roll
mov
enter
imul
jl
cwtl
es
int
jo
add
add
rorb
fdivs
xor
cltd
ja
cmc
pop
cmp
mov
imul
insl
pop
insb
je
imulb
pop
loop
cmp
and
mov
add
inc
add
in
mov
add
fistpl
inc
clc
xchg
inc
push
into
add
aas
jo
xorl
xor
push
add
popf
push
nop
pop
ds
jo
push
mov
arpl
rol
sbb
xor
adcl
jg
sbb
aas
outsl
lds
add
sti
pushl
mov
push
pop
fnsave
pop
aas
jg
pop
cmp
mov
ja
cmc
add
adc
test
cmp
cmp
cmp
add
imul
ror
jb
ret
shll
mov
fdivp
cwtl
or
jmp
and
insb
loopne
outsb
pop
cmp
pop
push
out
orl
aas
xor
nop
add
in
xlat
push
fisubl
add
push
ficomps
or
mov
sub
add
iret
pop
sub
pop
xchg
das
std
and
or
mov
sbb
mov
bound
xchg
stos
in
inc
stc
ds
call
sahf
xor
or
enter
adc
push
mov
cmp
mov
outsl
xor
dec
fisttpll
add
js
sarb
ret
mov
lret
xchg
adc
or
stos
sarl
shlb
add
push
xor
subl
push
ficomps
cmp
imul
inc
es
inc
or
cmp
push
and
jnp
push
and
jle
sbb
adcl
dec
pop
inc
cmp
cmc
or
or
jb
sarl
mov
out
mov
pusha
je
fisttpl
neg
add
lret
sbb
xchg
inc
int3
out
shll
rol
inc
fwait
or
dec
and
jle
and
ljmp
lret
cmpsl
repnz
push
rol
or
fsts
iret
xchg
sub
add
vminss
test
xchg
jo
add
xor
or
aad
mov
sahf
inc
into
sub
sub
into
stos
incl
mov
lret
leave
int3
inc
cld
pop
push
sbb
add
dec
mov
stos
add
and
add
jnp
mov
insl
mov
mov
ja
rorl
pop
mov
aad
add
sub
data16
jecxz
xchg
pop
cmp
daa
and
jae
sbb
lods
jae
mov
add
int3
sub
push
pop
jnp
jb
pop
xchg
xor
repz
std
fmull
add
das
sub
mov
mov
add
jo
sub
cmp
xor
test
add
fisubs
cmpsb
xor
sub
test
test
movsl
push
pushf
inc
push
add
lcall
inc
lock
cmp
out
test
in
cmc
mov
sarb
popf
fiaddl
imul
dec
mov
dec
mov
add
cli
push
xor
std
and
sbb
push
sub
cmpl
and
add
ret
cmp
xchg
add
pop
mov
or
mov
xchg
cmp
pop
mov
gs
xchg
xchg
or
hlt
add
mov
mov
popl
jge
xchg
or
add
jno
lret
arpl
pop
add
xor
jo
out
sti
add
js
add
test
test
adc
lods
out
xchg
jg
mov
pop
mov
arpl
add
icebp
lea
adc
lock
xor
sub
rolb
or
rclb
aaa
lock
inc
int3
mov
mov
repz
outsb
sbb
add
mov
movsb
shlb
add
sbb
xchg
cli
add
inc
notl
cltd
xchg
or
jp
lcall
pop
lds
pop
xor
pop
sbb
adc
xor
sbb
sar
mov
popf
sbb
xchg
sbb
fwait
mov
add
pop
sahf
pop
inc
test
shrl
mov
lret
or
or
jmp
add
insb
mov
ret
gs
mov
adc
sar
fs
mov
stc
pop
sbb
shl
cmp
add
ror
mov
dec
cltd
sub
pop
dec
add
dec
cmp
cmp
or
aaa
xorb
adc
scas
adc
bound
in
fdivrs
add
push
and
mov
sti
in
push
dec
fadd
jae
adc
mov
jg
or
repnz
cmp
aas
ret
ja
add
and
mov
sti
push
fwait
mov
xor
pop
and
jle
jne
add
sub
fwait
adc
mov
xor
and
add
push
cmp
pop
mov
add
in
fucom
shrl
es
xchg
cli
repnz
mov
into
inc
mov
inc
ret
inc
cmp
insb
mov
xchg
add
dec
cmp
sahf
arpl
sarb
jg
dec
xchg
jne
lahf
push
fucomip
gs
incb
xor
xchg
pop
loope
cmpsb
frstor
stc
xor
ret
add
adc
sti
enter
mov
push
cs
outsl
add
mov
mov
mov
rorl
cmp
mov
test
lahf
sbb
push
dec
add
scas
xor
shrb
sti
add
out
inc
test
pop
mov
mov
sub
or
loopne
popf
and
cli
getsec
adc
push
add
roll
jmp
es
divl
or
and
fnsave
mov
arpl
jae
cltd
pop
fldlg2
add
fistps
std
add
jecxz
mov
movsb
xchg
sub
ja
pop
loopne
lret
and
fnsave
dec
push
mov
fs
dec
xor
jle
adc
inc
sub
js
xchg
rol
nop
push
lahf
xchg
pop
fmuls
mov
je
call
shll
xor
jne
sub
dec
out
mov
mov
lahf
bnd
jnp
push
lds
in
push
sahf
stos
push
lods
das
adc
mov
int
pop
jmp
in
mov
into
dec
jne
arpl
lds
pusha
or
addb
push
fisubs
push
je
cmp
aad
scas
cmp
mov
test
clc
outsl
jns,pt
es
ret
mov
jae
add
jl
lret
insl
fidivrl
push
mov
add
aaa
mov
push
inc
sub
or
dec
add
dec
sti
xor
mov
imulb
mov
mov
stos
mov
je
clc
xor
mov
int
insl
add
add
sbb
inc
iret
lods
add
ja
xor
push
shrl
cltd
add
push
mov
ficompl
cmpb
es
mov
and
lods
imul
scas
gs
and
pop
sub
and
mov
adcb
jl
sbb
jb
xchg
mov
es
push
addl
push
fstpt
push
mov
je
jnp
popf
xor
testb
or
sarb
lock
rdmsr
adc
push
cld
push
idivb
test
push
test
mov
add
pop
lods
sub
in
jl
push
sarb
dec
add
imul
jle
add
je
rcr
dec
lock
ds
rcrl
ret
fs
mov
pop
sub
scas
sbb
rcll
int3
inc
das
sub
in
test
xor
xchg
cmp
or
jle
adc
push
mov
and
dec
in
add
adc
les
push
sarb
mov
nop
mov
cmpxchg
pop
lds
popa
hlt
movsl
testb
in
inc
cld
mov
dec
rol
pop
test
sub
pop
mov
dec
loope
add
push
sub
out
push
lcall
test
inc
jge
add
rclb
outsb
push
or
sub
pop
mov
pusha
cwtl
jmp
inc
jge
lahf
cmpsb
imul
add
repnz
add
mov
or
rcll
outsl
fwait
shrl
lcall
daa
add
scas
cmp
mov
dec
adc
push
xor
add
fidivrl
or
cmp
add
dec
dec
je
jae
fiadds
testb
test
push
or
push
jecxz
and
cltd
fsubs
divl
push
jge
jae
xchg
dec
adc
in
daa
or
pop
pop
fldt
adc
xor
mov
push
loopne
inc
cmp
addl
popa
outsl
mov
adc
out
shrb
xor
jl
loope
in
rol
std
push
xor
add
mov
nop
rcl
sub
xchg
pushf
out
add
xchg
add
jno
pop
ret
push
outsb
roll
pop
cmp
out
orb
xchg
mov
mov
xor
cmc
or
gs
in
jnp
xor
add
mov
cld
mov
xchg
and
nop
clc
fstl
adc
stos
cmpl
xchg
sub
jp
lods
rcrb
lret
jno
push
ret
and
adc
pop
stos
hlt
jbe
and
sti
lret
int
loop
pop
pop
gs
jmp
ds
movzwl
and
mov
pop
mov
sbb
jle
cmc
mov
addb
and
out
jg
mov
leave
add
les
jge
push
add
gs
add
xor
aas
push
sbb
outsb
add
cmp
test
es
call
adc
inc
pop
cmpsl
xchg
stos
and
test
das
repz
cwtl
rcrb
lcall
sub
mov
xchg
cmp
xchg
rolb
adc
es
cmpsb
inc
fcoms
add
in
insl
mov
add
std
jb
stos
dec
jbe
xchg
into
pop
add
sbb
xchg
lds
lret
mov
inc
cmp
lea
dec
xor
loope
jecxz
sbb
cmpsb
pop
adc
sub
jo
mov
xchg
jnp
inc
sbb
push
mov
int3
mov
add
pop
push
mov
add
sahf
int3
dec
cmp
pop
pop
aam
loop
or
xchg
push
outsb
insl
lock
add
pop
sbbl
lahf
out
add
lcall
mov
add
lahf
lcall
movsl
or
sub
jbe
xchg
add
push
adc
pop
cs
sbb
lds
sti
mov
and
jle
enter
loop
inc
ret
add
movsl
push
xchg
rol
mov
jae
pop
adc
dec
xchg
mov
dec
shll
jp
cmp
in
add
cmp
shlb
xchg
leave
jo
scas
cmpsl
and
mov
xchg
mov
xor
pop
mov
add
cmc
jg
cmp
insl
mov
subb
insb
xorb
jo
xchg
test
bound
insl
dec
ja
jp
or
ret
add
or
cmpsb
je
mov
sarl
add
in
xchg
orl
push
cmc
imul
jle
dec
call
int
inc
add
dec
enter
and
cmp
lret
pushf
add
inc
add
sub
add
test
adc
mov
add
movsb
fwait
jp
pop
dec
add
and
test
pop
fidivrs
sbb
adc
xchg
sbb
inc
add
xchg
xchg
sub
or
shlb
jp
and
arpl
ljmp
add
add
or
adc
aaa
call
outsl
add
adc
lea
dec
pop
int
ret
and
dec
mov
rclb
lahf
and
xchg
shlb
xchg
add
adc
loopne
sub
ret
fwait
iret
pop
and
or
lret
rorb
jecxz
ljmp
test
push
test
rcrl
dec
adc
xor
add
imul
jmp
and
xor
add
xor
sbb
add
dec
xchg
pop
in
cmp
int3
cmp
mov
mov
sub
lahf
js
scas
jl
xchg
imul
out
mov
cmp
movsl
and
jp
push
sbb
sub
xchg
add
dec
pop
in
pusha
inc
cmp
add
cmp
inc
test
and
xchg
lahf
sti
testl
jge
stos
and
in
inc
cmp
enter
jp
xorb
daa
jg
loop
movb
sarl
dec
pop
std
cmc
sarl
je
js
mov
popa
data16
call
lods
add
test
or
or
ror
inc
push
add
mov
fwait
jo
jmp
fmuls
inc
test
clc
leave
xor
addr16
jnp
xchg
scas
and
cwtl
roll
sbb
and
inc
mov
sahf
adc
jge
adc
rolb
icebp
cmp
add
mov
dec
add
and
dec
daa
add
inc
pop
xchg
ret
xor
stos
or
and
jle
or
jb
cld
adc
iret
loope
sahf
subl
xor
icebp
dec
add
mov
dec
sbb
inc
mov
sarl
pop
outsb
add
hlt
dec
mov
call
out
lret
push
shll
jp
push
inc
add
push
cmpsl
and
xchg
mov
push
pop
add
sbb
ja
stc
cli
push
and
clc
fdivs
add
mov
cmp
add
xchg
sbb
in
mov
call
nop
sub
mov
mov
cmp
loopne
je
pop
jge
adc
or
in
jns
jecxz
outsl
dec
xorl
mov
and
sti
xchg
jp
cmpsb
subl
add
test
or
jg
shll
inc
add
jl
or
xchg
sub
pusha
xchg
loopne
push
bound
cmp
cmp
loope
inc
subb
sarb
jmp
add
push
adc
mov
add
lds
add
in
movl
cwtl
sbb
loopne
addr16
inc
lods
xor
ds
jge
push
stos
jecxz
add
into
adc
cld
add
mov
cltd
xor
stc
roll
movsb
xchg
stos
ljmp
sub
lahf
fbld
add
push
popf
adc
subl
xor
imul
jmp
dec
add
aas
aaa
mov
incl
xlat
dec
testb
lods
xor
pop
sbb
add
inc
cltd
pushf
fstpl
add
push
aad
add
pop
dec
nop
add
adc
pop
cmpsl
imul
dec
out
cwtl
movsl
loopne
xor
sahf
push
lret
add
inc
and
push
cltd
add
jg
fucom
xchg
mov
lret
push
xor
add
inc
sub
loopne
andl
mov
push
and
ffreep
cmp
sub
sub
add
dec
mov
or
xchg
xchg
xchg
and
cmp
inc
push
or
nop
ss
or
or
scas
mov
outsb
call
mov
mov
aaa
push
insb
inc
test
xlat
repnz
cmp
cmp
gs
push
shr
sbb
add
or
sub
add
repnz
jecxz
imulb
fs
test
add
jo
call
insb
in
loope
pop
mov
das
push
stc
sub
leave
sub
add
aad
and
inc
add
add
and
xchg
mov
bound
adc
out
add
ljmp
adcb
btr
pushf
sbb
xor
in
movsb
ret
add
orb
fwait
xchg
fdivrp
xor
sti
ljmp
add
sub
hlt
sbb
rorl
push
fisubrs
call
aaa
sahf
nop
cmpl
mov
xchg
sbb
xor
in
rolb
xlat
cmp
sub
adc
test
cmp
inc
inc
jmp
and
adc
jmp
jecxz
loope
mov
inc
ds
stc
and
mov
add
data16
pushf
ja
rcl
inc
fstps
loope
aaa
in
ds
jnp
sar
lea
cs
jmp
push
cli
or
jb
pushf
sbb
xchg
inc
xchg
cmp
sub
mov
add
and
adc
jp
push
sarl
gs
outsl
pop
roll
jle
shlb
mov
nop
subb
mov
pop
pop
xchg
shr
jmp
lret
dec
inc
add
push
jb
lret
add
stos
adc
fimull
push
mov
in
mov
pop
mov
loopne
add
jnp
xor
add
ficompl
sub
adc
jecxz
aaa
inc
nop
add
or
rolb
xchg
add
pop
mov
outsb
iret
xchg
movsb
fs
outsl
in
inc
and
xchg
and
jmp
mov
cmpsl
mov
add
inc
xor
mov
dec
daa
das
loopne
popa
insl
add
add
lods
arpl
add
jne
inc
ljmp
push
xchg
movsb
add
push
test
sarb
mov
mov
add
and
cmp
jl
add
push
inc
cli
sbb
sub
mov
jno
mov
xchg
mov
out
dec
cmp
push
dec
adc
je
and
jb
xor
push
lods
aad
mov
cmp
lahf
dec
push
add
sbb
push
sbb
jnp
mov
imul
repz
divb
cltd
and
jl
popf
add
fsubr
add
jne
dec
adc
pop
das
and
add
pop
les
adc
push
cmp
testl
loop
sub
xchg
cmp
in
mov
or
sub
fwait
out
xchg
iret
jno
fldt
lret
ss
dec
int3
jle
add
push
pop
xor
dec
mov
call
bswap
gs
in
push
add
inc
xchg
pop
roll
mov
push
test
out
lret
clc
jmp
fsubrs
xchg
cltd
mov
jbe
shll
rolb
lods
movsl
add
movsb
cltd
mov
dec
xchg
adc
enter
mull
repnz
or
inc
jecxz
aas
mov
mov
out
es
fadds
movsb
and
jecxz
push
xor
mov
js
mov
mov
fwait
or
cltd
pop
add
push
jno
xchg
adc
das
jae
hlt
push
cmpsl
sub
fucomp
xchg
lahf
ret
aaa
shlb
cs
dec
mov
mov
push
bound
lret
flds
adc
int3
xchg
pop
push
add
nop
scas
das
add
inc
push
xchg
ljmp
fistpll
jecxz
jno
fildl
xlat
test
loop
pop
test
pop
push
hlt
pop
je
mov
xlat
or
push
push
and
inc
pushf
cli
addr16
mov
int3
push
sub
adc
mov
sahf
mov
fcmovnbe
push
cmp
sbb
xor
or
sbb
xchg
cmp
push
call
aam
pop
loopne
arpl
nop
movsl
addr16
insb
push
mov
jg
call
out
dec
pop
sub
or
push
jb
add
sub
rorl
add
push
push
iret
push
pop
cmpsb
iret
fnstsw
shlb
jmp
mov
jbe
xor
mov
jg
lcall
scas
rcll
hlt
add
in
loope
adc
popa
cwtl
and
aam
iret
pop
mov
jnp
in
pop
push
aad
lahf
add
push
push
xchg
pop
sub
and
ja
fcoms
icebp
xor
lcall
mov
xchg
mov
dec
jle
lock
fiadds
test
lods
js
sub
mov
adc
popf
loope
inc
sub
xchg
out
leave
or
xor
add
mov
pop
nop
add
fistpl
iret
je
add
repnz
cmp
mov
sub
cmp
sbb
test
cmp
xor
pop
mov
movb
or
cmp
pop
lds
test
daa
jae
xor
pusha
xchg
sbb
jmp
cmp
mov
or
cwtl
mov
xor
adc
sarl
loope
adc
testl
incl
add
or
dec
add
push
pop
jle
add
sbb
mov
adc
sub
imul
xor
sub
fs
ret
ljmp
pop
movsl
xor
mov
icebp
add
repz
add
lret
adc
andb
push
dec
rcll
pop
shlb
shrb
lock
mov
push
insb
xchg
jmp
and
dec
cmp
ret
dec
sub
decl
and
mov
cli
mov
out
rep
adc
xlat
adc
mov
test
pusha
icebp
mov
sub
or
cmp
das
mov
ljmp
jecxz
call
pop
inc
xor
add
sub
shlb
adc
xor
cmp
add
inc
in
xor
lea
adc
or
inc
hlt
icebp
add
mov
dec
dec
leave
popl
into
adc
cli
cmpsb
pushf
jo
outsb
push
in
adc
add
mov
addb
jg
sub
les
push
and
push
ds
inc
jbe
clc
or
inc
xor
stos
or
and
add
popl
mov
cli
sbb
fwait
pop
orl
iret
pop
sahf
push
inc
adc
hlt
xor
xchg
add
icebp
push
xor
test
loopne
and
out
or
nop
xchg
imul
add
icebp
aas
stos
pop
pop
add
jmp
adc
into
adc
loop
sub
add
sub
push
mov
xor
pop
mov
xchg
incb
xlat
mov
aam
add
cmp
mov
cmpsl
mov
cmp
popa
add
or
repnz
add
lret
shl
xlat
dec
rol
add
jp
adc
add
dec
xchg
inc
sbb
mov
mov
and
xchg
add
lods
test
ret
aas
icebp
jmp
int
jae
mov
inc
stos
fsubl
out
sub
arpl
out
aam
das
add
sahf
add
pop
mov
add
inc
push
dec
or
ret
xor
leave
push
jne
les
xchg
lret
gs
push
popa
and
mov
pop
cltd
rcrl
stos
sub
or
mov
mov
sub
mov
cwtl
pop
mov
add
jp
push
sub
add
inc
sbb
popa
adc
add
faddl
imul
and
cmc
lods
push
adc
push
pusha
inc
adc
sahf
roll
inc
xchg
sub
cwtl
pop
sub
sbb
aad
imul
or
ss
lahf
sbb
push
mov
daa
xchg
add
or
in
push
push
add
xlat
add
add
mov
xchg
ret
push
xchg
push
xor
add
in
add
add
inc
sbb
repnz
add
sbb
add
adc
add
sub
loopne
outsb
and
adcb
test
popa
add
mov
adc
jns
ja
fisubs
ds
fimuls
lret
sub
call
loop
in
sub
fs
mov
push
cli
jmp
outsb
fbld
add
xlat
xchg
push
mov
lahf
int
xor
dec
cwtl
imul
sbb
fimuls
add
fs
push
addr16
xchg
inc
add
xchg
xor
mov
mov
imul
or
push
pop
iret
repz
mov
mov
sbb
ret
jo
cld
fs
dec
jle
sub
xchg
sbb
addl
js
ret
test
int3
pop
mov
jmp
push
pusha
js
sbb
mov
sub
fnstsw
aad
cmp
add
imul
add
das
xor
decb
push
jns
in
aaa
imul
loop
inc
das
jae
fisubs
out
lods
sahf
and
add
decl
outsl
mov
es
add
mov
mov
lcall
add
adc
rcr
add
xor
ret
stos
dec
lcall
sbb
add
and
push
jb
inc
rcrl
int
ja
cmp
pop
sub
pop
jne
add
les
pop
cld
push
shlb
test
into
cmp
pop
mov
or
rcrb
dec
sub
ss
sbb
leave
cs
cmpsl
xor
add
mov
out
xor
orl
mov
cmp
dec
int
pushf
aaa
ret
lods
es
pop
cwtl
popf
and
mov
jl
int
xor
jno
sahf
pop
fwait
add
lods
lds
xor
outsb
mov
or
push
xor
test
xorl
xchg
xor
adc
inc
ret
dec
daa
push
sub
iret
pop
adc
nop
mov
shl
imul
enter
mov
daa
mov
mov
adc
jmp
test
test
mov
add
test
arpl
add
ficoml
jno
outsb
ret
jb
and
sub
std
in
js
inc
test
add
jl
inc
xor
sub
pop
imul
stos
scas
add
sbb
movsb
lea
adc
cwtl
add
add
jae
notb
cltd
and
repnz
adc
or
push
xchg
jnp
dec
loope
dec
add
dec
push
jae
and
xchg
test
out
dec
push
push
sbb
arpl
fsubrs
and
cmp
add
mov
dec
jne
sbb
or
test
lret
test
jp
add
int3
gs
jle
movsl
inc
mov
fnstenv
and
and
lahf
mov
sub
xchg
shlb
xor
add
or
sub
ljmp
lods
sarb
dec
shlb
and
out
std
jb
shll
data16
cld
dec
bound
rolb
test
lods
mov
cmp
cmp
add
hlt
lret
jp
add
mov
lret
add
out
push
pop
add
out
adc
add
dec
psubsw
mov
xchg
add
fmull
mov
int3
addb
pop
mov
add
xchg
in
xlat
call
push
imul
loope
push
lcall
xor
push
sub
idiv
sahf
rorl
push
or
pop
add
int3
jns
dec
ja
sub
mov
inc
movsb
xor
stos
push
add
xor
test
in
add
sbb
jno
cmp
mov
outsb
nop
aaa
sbb
dec
and
adc
inc
sub
cs
lea
filds
jge
jecxz
pushf
jg
lret
pop
jbe
jp
xchg
ror
push
inc
mov
je
stos
cmp
add
incl
add
and
add
xor
inc
add
inc
jns
add
mov
pop
cmc
popl
jmp
or
faddl
loope
mov
add
jns
cmp
loopne
lahf
jbe
out
or
pusha
iret
pop
jo
ss
xor
mov
shll
mov
test
add
lahf
lea
add
sub
rol
xchg
sahf
add
insl
mov
jns
jl
mov
inc
push
scas
push
and
or
aas
cwtl
mov
lea
cmpsb
mov
rorb
dec
adc
imul
pop
xor
add
ja
xchg
mov
sbb
jne
sbb
mov
xchg
out
test
andl
mov
mov
out
cmpsl
mov
aaa
aad
shr
mov
or
jl
fldt
mov
add
insb
jne
sub
pushf
inc
fcoml
add
gs
sub
lds
sbb
jne
fwait
ret
and
add
insb
mov
jne
out
pop
insl
add
xchg
pop
jo
lret
xchg
mov
add
movd
add
push
popf
ret
pop
add
mov
add
fcomp
push
mov
cmp
jo
fbstp
add
cmp
aas
mov
xor
cmp
add
xchg
sbb
aad
js
into
inc
cmp
ret
add
stos
out
ljmp
pop
mov
flds
xor
pop
enter
dec
pop
das
mov
and
test
enter
xchg
cmp
mov
ret
int3
mov
repz
mov
sub
out
jb
in
xorl
push
add
add
cs
jbe
cmpsb
push
sub
fdivrs
xor
or
sahf
mov
sub
in
sbbb
inc
lds
adc
xlat
add
mov
test
popa
jle
inc
ja
add
jae
movsb
addb
insb
or
cltd
popf
push
push
jecxz
es
and
fwait
scas
aas
xor
xchg
sbb
jl,pt
add
mov
push
mov
imul
mov
ret
pop
bound
pop
scas
test
jle
and
pop
mov
incl
cmpl
pusha
out
xchg
push
add
dec
in
xchg
pushf
inc
lea
leave
jg
ret
xor
xor
out
mov
xchg
and
jae
xchg
sub
dec
ds
es
subl
sbb
test
mov
es
jge
add
sub
mov
or
orl
or
add
and
or
lcall
leave
mov
les
pusha
xchg
ja
lods
push
add
ds
ret
add
outsb
sbb
fldenv
gs
test
shr
add
loop
jbe
push
cltd
cmp
ja
data16
push
mov
sbb
les
mov
addl
or
aaa
neg
and
lcall
outsb
add
sar
add
dec
push
sti
sbb
add
fdiv
fistps
sbb
lods
pop
test
test
pop
aam
pop
add
dec
adc
aad
outsb
sub
popf
fsubs
lods
push
push
xchg
add
mov
pusha
adc
push
stos
xor
popf
rcrl
out
add
cs
insb
mov
push
cltd
sbb
push
push
add
pop
jno,pt
jmp
sti
add
dec
shlb
stc
mov
mov
mov
xlat
xchg
rcrl
iret
int3
pop
je
faddl
or
in
pop
insl
jg
mov
pop
jp
xchg
call
push
jge
push
mov
jp
push
loopne
push
scas
ret
pusha
fwait
adc
enter
out
sar
cmc
fiaddl
sti
addl
xchg
add
add
jnp
or
mov
cmp
fidivrs
pop
mov
push
movsb
adc
push
push
push
inc
mov
testl
nop
stc
add
test
sub
sahf
xor
sub
push
cmpsb
mov
das
sub
repnz
insb
leave
cmp
add
fistpll
add
xchg
cmc
testb
les
test
inc
jb
out
gs
rorb
cs
add
mov
add
fwait
and
dec
xchg
addb
lea
lcall
xor
and
shrl
fwait
lock
and
out
or
jo
inc
xchg
sub
add
push
fadds
pop
adc
test
int3
adc
mov
outsb
addl
mov
fmull
movsl
sbb
add
iret
in
movsb
enter
bound
ss
mov
mov
adc
mov
pop
adc
popa
aam
xor
sbbl
rorb
push
aas
mov
add
movsb
xchg
push
push
or
outsb
inc
mov
mov
add
jl
insb
inc
pop
inc
ds
stos
divb
xor
cltd
insl
sbbl
movsb
lds
push
enter
mov
dec
xorl
add
sub
ss
sbbl
sbb
inc
add
enter
and
test
cltd
movsb
inc
xor
dec
add
arpl
jne
inc
mov
cwtl
scas
and
pop
lahf
mov
imull
call
xchg
push
adc
xchg
mov
sbb
sbb
add
mov
sub
insl
dec
adc
mov
xor
shl
nop
add
mov
test
stc
add
jl
inc
sub
shll
scas
add
xor
rcll
shrb
pushf
ds
pop
add
subb
jno
imul
popa
sub
lds
push
std
jo
popa
add
xchg
mov
notb
push
jg
jecxz
add
mov
outsb
cmp
mov
push
scas
subb
jae
rcll
jecxz
mov
cltd
cmp
push
js
pop
stos
add
push
dec
inc
pop
push
scas
inc
mov
push
ds
scas
push
sbb
and
jbe
xchg
xor
pop
shl
cwtl
push
and
inc
lret
mov
or
mov
pop
mov
pop
sub
mov
mov
cmp
jl
mov
xchg
insb
xor
sbb
xchg
out
jg
in
dec
imul
xor
add
movsl
pusha
mov
popaw
out
sub
cmp
or
loopne
add
sub
in
les
jno
dec
sub
daa
cmp
rclb
repnz
fwait
arpl
jae
mov
push
mov
xor
sub
adc
mov
push
sbbl
sbbl
mov
add
pushf
sub
les
mov
pop
leave
jl
fmul
add
repnz
push
push
inc
mov
xor
outsb
lahf
push
stc
mov
pop
mull
mov
arpl
jbe
add
push
push
cmpsl
hlt
popa
clc
into
xor
insl
jl
adc
stos
mov
push
ret
or
pop
mov
xchg
fs
out
nop
imul
dec
fnsave
imul
adc
and
mov
adc
jp
daa
in
dec
add
push
adcl
push
aam
jne
push
xor
add
adc
sarb
cmp
or
add
dec
std
inc
andl
push
arpl
aaa
mov
rcrl
and
and
sbb
rolb
jp
jne
rcl
cmpsb
inc
add
xchg
outsb
adc
push
add
add
add
pop
movsb
mov
add
add
pop
inc
mov
ficoms
ret
adc
aaa
outsb
and
insl
cli
aaa
mov
push
adc
aam
add
jne
sub
mov
sbb
iret
lret
mov
mov
stos
adc
and
outsb
pop
and
lods
adc
fiadds
das
sahf
mov
push
mov
aad
in
inc
add
cmpsl
imul
inc
mov
cltd
adc
addr16
add
lret
pop
icebp
out
mov
inc
jno
pop
jns
outsl
xor
iret
ret
dec
cld
sbb
pop
sti
rcrl
push
lock
rcl
mov
aam
push
pop
xchg
imulb
add
rcll
sbb
sub
adc
test
lods
nop
and
iret
and
cmp
xor
stos
out
les
mov
mov
mov
loopne
jb
icebp
std
clc
add
fiadds
sub
cli
inc
inc
lahf
or
out
out
sub
add
pop
pusha
pop
jmp
jne
out
add
mov
xchg
jb
sub
add
mov
push
int3
sbb
lahf
and
fadd
push
lock
and
shll
add
and
xchg
sbb
mov
add
or
mov
sbb
ds
fcomps
push
sub
mov
cmpsl
js
and
cmpsb
push
add
sahf
adc
add
add
shlb
fists
sbb
pop
cmp
mov
or
fwait
shlb
push
out
and
das
add
jecxz
dec
add
and
add
cmp
mov
mov
sbb
xor
dec
insb
fidivrl
pop
daa
fs
sub
add
and
imul
test
js
push
add
mov
xchg
add
popa
cltd
pusha
inc
out
adc
mov
sti
inc
fwait
pop
dec
cmc
fst
test
jno
add
xor
push
ss
push
push
shlb
out
lret
sbb
in
lds
loope
cmp
mov
xor
orl
sub
lea
inc
adc
or
lods
mov
arpl
or
into
or
inc
add
iret
lock
cmpsl
inc
out
testl
cmp
out
push
xor
ja
adc
push
mov
add
adc
sub
lret
incl
inc
iret
sub
inc
sub
or
into
pop
add
mov
pop
jle
pusha
and
push
ret
fwait
imul
xlat
sbb
push
and
push
dec
mov
pop
out
addr16
sbbb
test
and
mov
mov
dec
popa
fs
adc
out
rol
cld
and
in
inc
jbe
mov
enter
sbb
inc
push
push
adc
push
mov
push
insb
je
mov
lods
jnp
mov
int3
fsub
cs
cmp
ret
xor
inc
ss
mov
mov
loop
add
mov
jae
icebp
xor
outsl
mov
test
lds
fcmovnu
add
sbb
pop
stos
js
sub
sbb
data16
int
scas
xlat
cmpb
or
or
int3
stos
xor
subl
push
mov
imul
fldl
fistps
andb
inc
scas
adc
mov
inc
mov
and
jg
add
std
fnstsw
inc
into
cmp
pop
sbb
xor
popf
add
inc
and
int3
xchg
xor
ss
and
adc
mov
push
pop
add
into
ja
xchg
and
pop
ds
test
push
sahf
out
add
xlat
or
inc
sarb
jmp
mov
scas
add
rcr
loope
stc
inc
out
test
repz
or
add
cmp
sub
inc
xchg
outsb
aaa
mov
ja
add
aam
mov
pop
add
jmp
sbb
shll
xor
and
pop
xor
mov
add
int
xor
cmp
mov
adc
adc
stos
filds
jp
xchg
inc
jae
ror
popf
inc
mov
dec
jno
cltd
ret
sbb
xorb
insb
out
sub
sub
inc
test
cwtl
punpcklbw
xor
add
mov
sbbl
dec
mov
popa
in
jno
clc
mov
dec
pop
popl
decl
xor
outsl
cltd
das
mov
leave
pop
sbb
clc
dec
xchg
and
push
pop
sbb
cs
add
js
inc
push
and
cmovle
pop
ret
loope
pop
or
sub
into
cmpsl
mov
repz
sbb
pop
xor
mov
xor
xor
add
mov
sub
pusha
sarb
jb
mov
clc
in
sbb
sub
add
mov
jo
jbe
repnz
xchg
push
sub
into
sbb
sbb
mov
sarb
lds
pop
xchg
rcrl
mov
cmp
ds
jecxz
add
adc
out
dec
cwtl
shll
adcl
int
rcrl
insl
sbb
add
mov
lahf
dec
mov
jne
lods
movsb
and
shll
arpl
cmp
xchg
mov
add
add
add
mov
sub
repnz
and
addr16
pushl
fisttpll
mov
push
dec
mov
add
jmp
xchg
xchg
mov
rolb
and
scas
cmp
sbb
jnp
jmp
pop
and
inc
insl
lods
in
xchg
pop
add
xor
or
scas
cmp
lods
add
xchg
ljmp
mov
or
fmull
test
enter
mov
dec
int
bound
mov
cltd
jbe
stos
add
mov
jb
mov
iret
imul
in
xor
enter
adc
inc
dec
inc
sbb
push
push
leave
imul
push
or
pushf
cmpsl
pushf
call
push
data16
inc
add
cmp
mov
add
xlat
add
scas
adc
dec
xchg
jge
stc
pusha
push
sub
dec
adc
add
cld
test
add
bound
cmp
add
enter
cmp
pop
add
les
lods
inc
cmpsl
add
or
les
js
hlt
xor
push
out
add
xchg
ret
loopne
push
and
mov
mov
xor
cmp
and
adc
adc
jae
add
lea
popf
jp
inc
idivb
xchg
leave
out
add
jae
fbstp
test
test
stos
xor
xor
xchg
sbb
xchg
cmp
sub
daa
rcll
sbb
ss
outsb
mov
dec
or
lahf
iret
inc
add
cltd
mov
add
aas
loop
movsb
add
fldl
flds
xor
hlt
mov
jae
jmp
xor
enter
fs
xor
cmp
inc
pop
mov
sbb
xorb
push
shrl
mov
rcrb
ss
xchg
pushf
arpl
dec
mov
inc
shlb
push
stc
daa
arpl
cmp
loop
inc
sar
mov
bound
cltd
xchg
pop
add
sub
add
jne
pop
fistl
jo
or
cmp
jae
shll
jmp
and
jne
ss
xchg
add
mov
fistpll
jge
add
mov
add
add
jmp
test
bound
cmpb
add
faddl
pop
sbb
mov
nop
ret
mov
jecxz
cmp
dec
add
adc
or
sub
jmp
gs
inc
or
dec
pop
xor
fs
add
pusha
mov
les
mov
addr16
add
filds
scas
es
mov
dec
repz
jge
adcl
and
mov
add
dec
pop
pop
jo
lret
fnstsw
insl
imul
fidivrl
ljmp
mov
add
loopnew
aad
cmpsb
add
test
pop
xchg
in
arpl
push
mov
jmp
test
loop
popa
pushf
jecxz
push
and
adc
add
mov
adc
jbe
jo
sbb
and
test
sub
mov
fadds
add
and
mov
call
js
pop
pop
aad
repz
imul
push
pop
out
icebp
jbe
add
lahf
xor
mov
jmp
ljmp
pop
stc
cmc
push
out
leave
sarb
popa
xchg
lret
xchg
popl
dec
mov
xchg
cmp
mov
shll
aad
lcall
loope
cld
push
lods
scas
test
mov
cmp
add
push
add
or
sahf
repz
test
scas
movsb
xchg
cmp
jp
hlt
cmp
add
cmpl
rol
add
pushf
loope
sbb
adc
or
cmp
adc
pop
sub
pmullw
in
inc
mov
xchg
movb
repnz
rep
mov
dec
dec
mov
enter
cmp
adc
in
adc
inc
add
aad
dec
add
push
xchg
rcrb
add
int3
or
add
divl
imul
nop
sahf
pop
push
add
mov
xor
jne
and
push
adc
dec
add
jns
xchg
adc
cmpsb
add
loop
push
cld
das
jle
mov
push
xchg
scas
pop
enter
test
lods
add
fdivl
mov
push
or
cmp
inc
pop
mov
pop
outsb
adc
imul
pop
and
xor
cmp
ret
inc
test
mov
fs
adc
fisttps
pop
jmp
loop
iret
lods
out
jbe
cmpsl
mov
out
sub
mov
and
xchg
js
sbb
sub
pop
jl
push
jns
in
lods
cmp
jmp
dec
repnz
shlb
lea
and
movsl
insb
out
loopne
inc
and
cmp
in
dec
add
mov
cmpsl
mov
addr16
and
xor
add
bound
add
cmpl
lahf
push
mov
cmp
xchg
not
jg
pop
cwtl
push
daa
xor
adcb
jbe
stc
mov
call
negb
add
test
mov
jb
xchg
jb
and
ret
mov
lds
insb
add
cld
movsl
cmc
cmp
adc
aad
in
and
cs
orb
rcl
or
dec
es
mov
testb
push
rcr
pop
hlt
push
mov
add
mov
xchg
fwait
or
scas
push
xor
out
add
lock
add
pop
adc
xchg
jbe
xchg
dec
ficoms
sbb
fists
fs
xlat
or
je
push
popa
lret
push
ret
sbb
and
ret
jb
cmp
icebp
xor
iret
filds
div
ret
adc
add
fs
mov
push
xchg
pop
test
or
clc
and
add
ds
mov
aad
inc
and
lret
hlt
xchg
addr16
jns
cmpsb
into
xchg
sub
push
mov
jnp
sahf
lock
pop
inc
cmp
lret
sub
adc
stc
xchg
subl
adc
icebp
rcrl
fs
sub
xchg
jl
xlat
xchg
inc
xor
lea
mov
mov
mov
fs
test
data16
and
mov
cld
mov
int3
in
iret
outsb
jl
ljmp
sti
xorl
xor
mov
test
jmp
in
xor
add
sub
add
inc
cwtl
mov
xor
cmp
inc
inc
pop
add
mov
or
cwtl
stos
cmp
lods
adc
or
bound
subl
mov
repnz
nop
add
ret
fadds
and
out
dec
mov
les
add
mov
add
push
cmp
jo
xchg
sahf
add
cltd
mov
addl
or
shlb
ds
push
add
mov
sub
push
jns
cmp
rolb
mov
mov
popa
and
lcall
jne
jg
add
xchg
and
jmp
mov
negl
and
push
js
mov
stos
loop
or
test
mov
cmp
add
push
frstor
add
dec
shll
scas
in
and
je
in
fadds
cmp
xchg
jge
add
shlb
lods
cmpl
pop
scas
outsl
add
or
stos
addr16
and
pop
pop
ret
cmpsl
xor
mov
jo
adc
scas
add
inc
adc
ret
pushl
mov
sarb
push
jae
fmuls
add
cmp
cmp
arpl
insb
and
gs
clc
test
add
js
or
or
lcall
je
cmp
mov
add
adc
add
sbb
dec
push
mov
mov
test
push
pop
push
add
mov
add
xchg
std
add
jle
adc
push
out
add
pop
repz
test
dec
inc
mov
mov
aas
cwtl
push
add
xlat
vpcmpestrm
scas
sub
add
inc
je
sbb
jo
ja
pushf
mov
mov
imul
dec
cmp
testb
hlt
jae
outsb
fwait
dec
fistpl
inc
push
mov
arpl
mov
sbb
in
jg
push
add
adc
jmp
outsl
add
mov
push
mov
je
orl
mov
mov
int
enter
pop
aas
popl
into
pushf
xchg
inc
movsb
roll
cwtl
rcll
add
cltd
lcall
test
mov
mov
inc
xor
addr16
mov
inc
mov
lea
pop
les
xchg
xor
aam
xchg
cmp
add
leave
jge
lcall
btc
add
repnz
aad
out
stos
or
cltd
xchg
aaa
test
add
mov
aam
repz
iret
jmp
mov
rorl
xchg
shl
push
dec
and
int
xor
mov
dec
cmp
ds
add
xlat
cmpsb
cmpsl
pop
stc
xchg
add
scas
ds
rcrb
mov
iret
add
xor
pushf
inc
ss
add
pop
daa
fidivrl
sbb
add
xor
mov
push
cli
inc
stc
add
inc
iret
push
inc
std
lahf
jecxz
jmp
jbe
scas
add
inc
sar
ljmp
jno
scas
mov
dec
es
repnz
xor
and
push
pop
xchg
roll
fistl
test
jno
aad
les
dec
pop
add
outsl
rcll
push
and
add
xchg
add
push
push
pushl
and
int
data16
cmpl
nop
adc
rorb
cmc
flds
outsl
or
test
or
mov
push
push
cmc
mov
sbb
mov
push
dec
lahf
pop
jae
ret
notb
cltd
sti
or
clc
add
mov
add
cmp
incb
sub
push
jnp
testl
inc
and
mov
rcll
pop
out
xor
aas
shll
pop
cmp
cmp
lret
mov
mov
test
jp
loop
pop
decl
arpl
pop
inc
jne
sbb
les
push
pushf
punpckldq
lea
out
dec
inc
inc
jnp
and
mov
and
mov
add
pop
cmpsl
ss
insb
inc
inc
xor
xor
push
mov
mov
jle
cltd
push
fnsave
test
rcrb
mov
stos
or
add
mov
lahf
dec
add
aam
add
fiaddl
xor
mov
jg
push
pop
push
cmp
push
sub
in
push
les
push
jnp
and
mov
pop
stc
adc
jne
imul
or
and
dec
pop
std
sahf
cmp
stc
mov
mov
inc
fidivrs
or
push
jmp
mov
push
enter
sbb
nopl
pop
call
mov
or
ror
mov
jl
loop
leave
adc
mov
mov
xchg
fisubl
add
xchg
sbb
lock
add
mov
add
push
in
lds
inc
or
dec
lret
aad
dec
or
in
add
aam
jo
inc
addr16
pop
dec
fs
pop
cmp
inc
lods
cmp
mov
sbb
rcl
cmp
cmp
sub
cs
sbb
sbbb
add
test
jns
adc
add
xchg
add
xlat
lods
movsb
std
ret
sub
dec
xchg
sahf
push
add
popa
outsl
daa
mov
sub
lcall
jno
and
xor
add
gs
es
lods
in
add
mov
jno
add
mov
leave
xchg
ds
mov
jl
mov
add
roll
or
ret
mov
xor
xorl
fcompp
call
mov
shl
cltd
nop
sbb
not
jne
or
int
sbb
push
icebp
data16
clc
xor
adc
mov
mov
mov
add
shl
push
fs
or
adc
add
pop
data16
aas
dec
idivl
imul
and
mov
aad
sbb
xor
sbb
loop
int
fcomip
loopne
ret
pop
xchg
xor
adc
lret
add
push
inc
rolb
subl
add
stc
xor
out
ja
mov
in
jno
xchg
sbb
cwtl
loop
incl
test
push
xchg
cld
jecxz
cmpsb
lahf
or
add
gs
scas
pop
xchg
add
inc
add
insb
push
aad
mov
pop
add
xchg
test
scas
mov
push
lods
das
mov
mov
dec
inc
mov
xchg
or
out
mov
add
push
xchg
cmp
and
aas
daa
push
stos
ret
xchg
mov
add
cmpsl
aam
mov
call
and
add
mov
lahf
adc
sbbl
xor
add
into
cmp
cmc
inc
jnp
sub
cmp
stos
jbe
jle
pop
push
jne
ret
mov
xchg
pop
imul
imul
dec
rorb
fsubs
mov
daa
xlat
aaa
adc
or
sub
xor
arpl
add
jne
cmp
in
test
rol
sbb
jp
xor
jl
mov
rol
call
sbb
xlat
cli
inc
addl
outsl
xchg
clc
add
sub
cmp
rorl
xchg
pop
adc
mov
cmp
cmpl
scas
xor
push
mov
inc
cwtl
pop
sahf
mov
pop
dec
xor
mov
mov
xor
rcl
imul
mov
add
cmp
adc
sbb
lahf
pop
ret
xchg
sub
notb
sbb
add
out
stos
mov
add
daa
xor
popl
test
mov
popf
add
sub
lret
pop
leave
cmp
xor
test
or
mov
inc
int3
and
rcl
push
cmp
cli
outsb
repz
hlt
dec
xor
daa
sub
ror
fldcw
gs
add
or
mov
add
and
mov
mov
mov
outsb
add
pop
iret
shlb
cmpsl
adc
adc
faddl
inc
dec
hlt
inc
xchg
sbb
add
sti
pop
bound
lea
or
fstl
pop
xchg
int
inc
mov
push
jmp
add
faddl
subb
movsl
pop
pusha
inc
sbb
inc
pop
pop
add
mov
cmpb
mov
xor
sti
iret
sub
pop
add
xchg
push
jae
loope
pop
mov
das
inc
add
aad
add
adc
int3
pop
jmp
ficompl
mov
xchg
cmpsl
lahf
mov
inc
imul
cmp
dec
add
inc
and
test
ja
and
cld
xor
adc
mov
pop
xchg
jl
rolb
dec
push
lret
mov
push
fcmovnb
add
xchg
pushf
jnp
je
iret
add
add
or
pusha
das
stc
mov
je
xor
jecxz
shll
movsb
jmp
sub
jle
enter
mov
cs
jb
push
lcall
dec
sub
push
or
or
cmp
push
cmp
add
add
lds
dec
out
sbb
imulb
pusha
imul
xchg
or
cmp
subb
add
int
leave
rorb
sbb
pop
push
add
loope
jmp
inc
add
lret
out
xchg
inc
push
shrl
mov
dec
neg
mov
dec
mov
fwait
mov
cs
mov
mov
or
addr16
ror
lea
cmp
and
cmpsb
mov
pushf
xchg
add
nop
and
pop
mov
movsl
inc
add
push
imul
push
add
add
lret
push
xchg
xchg
loopne
mov
dec
repz
push
je
mov
push
clc
dec
and
lret
and
sub
ret
cmc
cli
sub
add
rcpps
dec
pop
xchg
das
in
pusha
lods
fwait
movsl
push
fdivr
cmp
add
pop
lds
add
pop
lea
jp
int
out
lret
add
xchg
out
aam
testl
xor
ret
inc
add
das
push
push
call
ss
orl
loop
sub
jbe
pop
cmp
xchg
test
cwtl
fldl
mov
mov
cmp
les
and
lret
rcrl
ja
inc
mov
hlt
sbb
or
add
xchg
out
add
lods
stos
pop
add
icebp
ds
fisttps
leave
repz
jecxz
sahf
push
rcr
jnp
insl
xor
gs
adc
jae
push
notb
xor
xor
inc
jmp
dec
jp
mov
pop
push
ljmp
mov
aas
fadds
mov
test
jecxz
push
cmpsb
data16
nop
test
sbb
sahf
add
lret
add
repz
add
hlt
cld
pop
sbb
push
add
outsb
les
mov
imul
ljmp
jb
test
gs
add
jno
sub
push
inc
add
mov
pop
fwait
mov
mov
and
cmpsl
add
les
push
add
xchg
test
mov
mov
add
sarl
xor
or
sar
inc
mov
sub
push
out
add
mov
shlb
and
xlat
inc
dec
inc
mov
movsl
fistps
jecxz
bound
mov
dec
or
in
xchg
outsl
jo
xchg
lcall
xchg
jecxz
and
jmp
lock
and
add
jae
sbb
fcoml
sbb
movl
jae
js
sarl
push
adc
dec
ljmp
xor
cmc
sti
push
or
xchg
sahf
fwait
add
inc
out
push
adc
nop
cmp
cmp
movsl
flds
test
pop
xor
add
mov
jns
mov
pushf
push
add
dec
xchg
movsl
add
mov
rcrb
sbb
inc
pop
repz
insb
inc
jbe
jno
or
add
jmp
jle
push
sti
stos
and
fldl
mov
sbb
sbb
ret
pusha
cs
mov
popf
iret
in
cmp
jo
jle
inc
pop
jp
xlat
xor
stos
inc
movsl
add
add
ret
inc
rcll
adc
mov
lock
test
and
push
jle
sub
push
mov
mov
jno,pt
jns
adc
mov
dec
add
cmp
pushf
add
cmpsl
dec
add
cmpb
dec
add
jp
popa
push
xchg
repz
test
in
int3
ret
cmpsb
loope
mov
sub
jno
stos
pop
in
and
mov
out
xchg
ret
in
push
dec
addr16
pop
jl
adc
and
cmp
rclb
and
mov
dec
mov
add
push
xor
out
xlat
push
pop
add
je
jb
nop
lret
add
push
daa
sbb
cmpsb
in
jo
in
xchg
mov
adcl
add
jns
mov
jmp
lret
sbb
rol
fstpt
shll
push
mov
cmp
out
lds
inc
cmp
push
cmp
rorl
pop
nop
loop
add
adc
lods
test
mov
push
push
cmp
mov
sub
test
add
je
mov
hlt
mov
stc
add
js
mov
jmp
add
xchg
shll
mov
lret
add
repz
jle
popa
mov
push
add
orb
aaa
mov
pop
mov
leave
adc
mov
lahf
inc
icebp
push
push
fistps
sub
hlt
inc
lret
outsl
jmp
arpl
add
sub
add
mov
roll
pop
call
mov
ret
test
mov
add
dec
pop
mov
sub
rcll
adc
add
pop
xor
pop
loope
or
cmp
jb
mov
clc
insl
jbe
mov
add
add
jo
neg
jne
add
lods
fsubrs
pop
sbb
fmuls
jb
xchg
fnstenv
push
or
stc
add
repnz
pop
shll
add
ret
mov
push
add
jne
cwtl
rorl
mov
adc
rcrb
inc
pop
mov
lret
pop
adc
addr16
cmp
mov
mov
sahf
aam
insl
jae
mov
and
cmp
leave
stc
inc
test
rolb
sti
push
aad
es
adc
mov
out
mov
in
aad
cld
xchg
jp
gs
rolb
dec
pushf
out
mov
adc
ret
ss
inc
insl
and
xor
add
movsl
mov
orb
out
mov
push
mov
cltd
test
mov
mov
ja
ljmp
adc
pop
inc
mov
add
loop
test
subl
daa
popf
stc
das
mov
nop
repz
add
out
in
lods
dec
jle
and
cli
inc
addl
push
xor
cmp
mov
lods
ret
xchg
int3
icebp
rclb
sub
sti
ds
xlat
sub
pop
mov
push
pusha
sbb
push
and
xchg
scas
outsl
add
xor
mov
hlt
mov
mov
mov
stos
pop
popf
js
push
jle
add
adc
xadd
mov
imul
mov
lds
adc
or
aam
sub
movsl
xor
push
mov
add
daa
xchg
and
in
pop
lcall
dec
or
or
dec
sbb
add
in
nop
hlt
xchg
adc
fidivrl
pop
cwtl
flds
mov
jo
add
xchg
xor
ficoml
stos
jo
insl
jle
jg
adc
fidivl
xlat
sti
add
push
cwtl
inc
data16
add
mov
cmp
inc
nop
aas
push
add
adc
sub
mov
push
cs
lock
mov
lds
adc
dec
add
nop
incl
gs
xor
xlat
mov
and
aad
fs
push
adc
xor
dec
clc
scas
xor
sbb
push
add
pop
lret
icebp
je
out
scas
rcrl
and
sub
cwtl
mov
nop
or
ja
add
stc
jnp
or
mov
cs
ret
cmp
sbb
bswap
inc
jae
ret
add
rcrl
mov
add
movsl
insb
cltd
inc
sbb
adc
inc
std
in
mov
inc
scas
stos
or
jnp
cmc
ret
lcall
std
mov
popa
scas
lea
lret
mov
and
push
pop
fsubs
pusha
add
sbb
insl
jecxz
clc
adc
jno
dec
fimuls
mov
add
mov
add
adc
sarb
adcb
je
add
or
xchg
out
aam
lret
scas
add
sarl
add
out
call
and
adc
dec
cmp
sub
jbe
sub
rcrl
call
roll
aad
jmp
jl
aas
addr16
xor
loopne
inc
ficompl
rclb
adc
rorl
cmp
push
dec
cmp
sub
ret
pop
pop
or
inc
mov
xchg
xor
push
xchg
pop
and
push
mov
inc
mov
cltd
imull
dec
add
loopne
fiadds
and
loope
push
jg
jae
dec
mov
cmp
lods
dec
push
jnp
in
sbb
mov
mov
daa
cwtl
pop
hlt
js
push
jge
xchg
sub
add
mov
ret
cmp
movsb
sub
call
adc
sub
cmpsl
ss
add
push
add
mov
xchg
xor
sbb
cs
xchg
movsl
jl
and
leave
fiadds
add
xor
lcall
orl
push
mov
push
decl
fs
lret
lret
scas
jno
mov
mov
movsb
xorl
out
roll
ljmp
jnp
jns
jge
push
in
sbb
stc
cmp
cmp
sub
adc
adc
push
cmp
ds
addl
mov
jne
cltd
add
clc
mov
sub
filds
and
aam
sar
pop
aad
jbe
loopne
dec
out
pop
add
inc
sbb
pop
bound
test
add
cs
shll
lea
sbb
cmc
xor
add
mov
rolb
cmpsl
mov
loop
inc
clc
add
testl
int
push
mov
or
cmp
add
xchg
mov
out
cmp
xor
pop
sbb
mov
inc
fsts
pop
rolb
out
push
sbb
and
iret
adcb
lcall
jl,pt
mov
and
pop
xchg
lock
pop
fstpl
dec
lret
cmp
jl
xlat
add
aaa
cs
scas
mov
push
popa
sub
sbb
mov
das
jnp
into
clc
adc
jp
fistpl
ror
fadds
stos
cmp
pushf
pop
popf
jle
out
gs
mov
aas
cmp
add
inc
add
sbb
mov
inc
push
sub
dec
test
and
pop
lea
mov
push
jp
xchg
test
incl
mov
je
movsl
xor
nop
ja
sti
repz
fadds
pop
add
pusha
je
cltd
movsl
sbb
addb
mov
ffree
add
add
inc
sub
mov
xlat
add
inc
out
mov
decb
out
in
mov
adc
outsb
data16
fsubp
cmp
dec
add
mov
dec
orb
jp
adc
loopne
mov
lret
add
jno
push
sti
cmp
mov
sti
jnp
xchg
pop
clc
add
ds
inc
xchg
lret
add
sti
add
scas
repz
dec
mov
xchg
jmp
cmc
rcr
push
mov
pop
add
jmp
adc
rolb
out
xor
sahf
sbb
push
jne
mov
shl
inc
pop
jns
push
add
sbb
pop
adc
aam
mov
pop
push
rcrb
lods
and
in
push
stos
and
sub
mov
add
rcl
ja
addl
das
divb
out
add
and
in
jb
mov
testl
test
jg,pt
int3
clc
add
out
push
pop
add
pop
std
mov
mov
cltd
add
sbb
cmc
nop
xchg
out
xor
dec
fldl
pop
push
std
inc
and
push
subl
add
xchg
jmp
ret
xor
ds
popf
add
jne
mov
or
add
aam
push
push
push
outsl
add
add
adc
jecxz
xor
fldl2e
ret
jge
shll
cld
out
sarb
mov
or
add
loop
pop
sub
mov
das
out
test
inc
cmp
addr16
add
adc
fsts
aaa
mov
incl
adc
adc
dec
and
in
mov
sbb
lcall
sub
outsb
jle
or
add
arpl
sub
fcompl
push
les
ds
aaa
outsb
inc
mov
scas
push
test
inc
or
adc
and
sbb
rcl
aas
and
and
add
push
lods
add
dec
out
mov
ret
jb
and
mov
jae
add
sbb
push
pop
mov
cmpsl
mov
or
dec
mov
sti
jbe
xchg
bound
pop
dec
add
aad
fildl
call
push
scas
jae
jle
out
inc
cli
mov
pusha
and
add
xor
ret
pop
subb
sarl
sbb
cs
lret
insl
fidivs
popa
add
push
or
int3
rol
inc
lahf
add
sbb
adc
mov
push
xchg
add
add
daa
xlat
add
adc
cmc
std
add
pop
sbb
sub
adc
add
jecxz
insb
test
xchg
jno
dec
mov
xor
aad
lret
aas
push
testl
shrl
mov
jno
sub
outsb
jl
xchg
fldenv
out
fildl
js
pop
lret
in
sub
add
push
inc
pushf
incb
rolb
mov
push
sub
pop
add
test
ret
add
dec
shlb
out
imul
and
arpl
dec
xchg
lds
gs
xor
dec
or
ds
lods
movsl
cmp
es
inc
sub
xchg
mov
dec
leave
scas
scas
push
ljmp
mov
lcall
mov
lods
dec
add
mov
jle
test
in
lret
fs
movsl
addl
xor
aaa
daa
add
add
push
jl
adcb
xor
cmpsb
mov
insb
test
cmpsl
add
mov
cmp
pop
cmp
test
inc
mov
mov
pop
aam
sub
add
lods
add
sbb
fisttpll
pop
add
sbb
sub
fsts
cmp
movsb
iret
inc
push
int
fcoms
insb
shll
and
inc
cmp
mov
bnd
jo
push
xor
orb
inc
rclb
fucomi
xor
cld
pop
repnz
sub
xchg
mov
jbe
faddl
and
int
into
pop
inc
cmpsl
xchg
jp
mov
add
sahf
xadd
and
push
cmp
fimull
in
pop
adc
sub
sub
dec
rcll
imul
lahf
push
push
shll
cs
popf
mov
pop
add
cmp
add
fdivr
push
mov
fdivr
add
jne
cwtl
aas
push
add
icebp
push
and
inc
jg
jb
addb
add
add
int
fldenv
fs
ss
je
mov
inc
lret
push
pop
ja
add
cmp
es
mov
in
test
cli
ss
xchg
cmc
or
out
ret
push
xor
add
in
cmp
mov
icebp
mov
xor
shl
push
rorl
or
shl
xchg
fiaddl
nop
sbb
aad
out
push
bound
dec
and
movb
std
sub
js
cmp
icebp
popf
mov
adc
xchg
dec
out
pop
movl
or
rcr
pop
in
or
lahf
mov
test
repz
or
imul
jnp
aaa
shr
mov
jb
push
push
and
movsb
movb
dec
lret
xor
popf
mov
cmp
mov
add
mov
fldl
cmpl
adc
xor
test
and
push
mov
cmc
addr16
inc
das
sbb
cmp
xor
out
cmp
add
xor
add
add
or
lahf
inc
add
in
popa
imul
xchg
add
fs
fwait
jnp
iret
rcll
in
je
cmpl
pusha
inc
or
fwait
dec
xor
add
xor
cs
into
add
test
push
rclb
js
sub
aaa
popf
adc
and
jno
hlt
sarb
push
pop
jg
nop
inc
sbb
or
adc
fadd
dec
push
xor
sbb
cmp
inc
add
sbb
cltd
push
pop
sub
add
add
int
jecxz
jbe
mov
or
pop
ret
xor
xchg
mov
inc
jmp
in
cltd
push
cmp
add
lret
cli
and
mov
push
sub
sbb
xchg
popf
jnp
sub
or
cmp
cmp
in
sub
out
push
inc
je
repnz
into
adc
cs
inc
das
mov
push
cmpsb
pop
add
mov
dec
and
add
mov
push
sbb
or
scas
ret
add
in
xor
cmp
pop
shrl
push
sub
xor
ret
dec
add
xchg
mov
fidivl
dec
stos
push
lock
rcll
push
pop
shlb
add
push
aaa
shrl
mov
sarb
fcoml
mov
add
inc
add
out
push
shrl
test
xlat
in
pusha
xor
aas
mov
shrb
callw
cmp
roll
adc
mov
cld
fistl
insl
lea
xlat
jle
add
and
cmp
xorb
fwait
cmc
add
sub
inc
mov
scas
push
mov
repz
stos
xchg
add
pop
mov
adc
scas
mov
loop
pop
add
mov
xchg
jge
xlat
inc
add
pop
addr16
call
dec
mov
or
xlat
inc
outsb
mov
cli
and
or
mov
jecxz
jge
lock
loopne
inc
add
fsubr
mov
int
add
imul
add
dec
inc
push
enter
cmp
fildl
lahf
push
add
icebp
pop
lds
enter
dec
dec
sarb
outsl
xchg
sarb
aas
bound
leave
fnstenv
jae
inc
inc
loope
mov
sbb
dec
cmp
loopne
clc
shlb
cld
inc
adc
enter
lret
movsl
jg
push
aas
gs
add
inc
imul
jnp
roll
xchg
adcb
dec
es
mov
outsl
push
and
add
sbb
push
test
pusha
add
mov
insb
add
xchg
jmp
inc
mov
add
in
popa
add
insl
adc
dec
push
addb
fadd
add
push
das
fbstp
add
mov
lods
imul
xchg
mov
add
imul
add
test
adc
cmp
add
repz
mov
je
xor
sub
cmp
and
pop
ret
add
add
movsw
xor
lods
add
cli
lock
add
sahf
xor
test
sub
lret
call
sarb
push
mov
adc
dec
das
sub
movsl
popf
adc
jo
mov
add
lea
sub
xor
cmpxchg
test
insb
pop
add
scas
std
xlat
movsb
cs
cmp
faddl
jecxz
mov
aad
add
mov
fsubrl
add
in
add
xor
out
ret
addr16
ss
jge
add
sti
jae
in
stos
lds
adc
mov
hlt
mov
ret
add
loopne
or
adc
es
and
xchg
add
das
incl
push
add
xor
jb
dec
jge
push
cltd
pop
mov
jo
mov
adc
push
cld
lock
xchg
add
shlb
inc
pop
test
rol
and
add
in
mulb
mov
fildll
lcall
clc
jnp
add
jno
mov
mov
sub
iret
in
dec
add
dec
hlt
fistpl
jns
inc
popa
xchg
adc
jge
and
mov
xor
aaa
fwait
cmp
test
pop
pop
jle
ficomps
pushf
jbe
sbb
xor
mov
into
xchg
filds
insb
gs
arpl
and
out
add
xor
pop
xor
les
fldenv
icebp
mov
jg
sti
repnz
sbb
jb
sub
mov
dec
mov
out
rolb
dec
inc
fs
or
xchg
xor
je
adc
jae
xor
dec
xchg
xor
pop
sbb
dec
scas
adc
jp
xchg
rorb
push
lods
ljmp
nop
pop
outsb
mov
xlat
add
inc
xchg
fs
jno
dec
ja
aad
cs
dec
repnz
pop
pop
fwait
jecxz
cmp
ljmp
sbb
xor
cmpsb
jo
mov
adc
repnz
add
jl
mov
inc
enter
loope
inc
cmp
sti
and
shrl
and
dec
ljmp
or
pop
std
and
cmpsl
dec
aaa
incl
add
xlat
movsl
sbb
stc
arpl
pop
add
inc
mov
out
jbe
ljmp
cwtl
sarb
sub
fstps
and
lea
xor
aam
movl
stc
aas
inc
xor
inc
mov
out
add
mov
sbb
enter
mov
lods
inc
sub
mov
rolb
out
jg
push
inc
add
jns
orl
and
ljmp
aad
shlb
inc
popf
add
hlt
cld
stc
sarb
push
in
mov
cmp
add
mov
mov
jle
mov
repnz
xchg
mov
mov
inc
xor
loopne
or
repnz
jl
jns
lods
movsl
inc
add
out
sbb
push
adc
jge
jl
add
cmp
es
clc
je
idivl
sub
xchg
mov
loop
mov
movsb
dec
lahf
jae
popf
push
imul
test
scas
rcrl
adc
or
jnp
pop
ret
cmp
hlt
inc
push
mov
setbe
push
out
movsb
test
or
mov
mov
cs
add
movsl
cmp
add
lcall
add
mov
adc
inc
inc
add
jb
mov
in
mov
cmp
mov
shlb
scas
inc
pushf
add
test
ljmp
cmp
add
pop
or
popf
outsl
and
loope
sub
adc
ret
jo
mov
fsubs
pop
rcl
push
sbb
dec
cmp
imul
fadd
jae
ss
cmp
jmp
sub
sub
mov
dec
cmp
shlb
jbe
pop
push
sub
imul
jg
mov
inc
cld
idivl
sbb
test
mov
rol
call
fnstsw
add
add
cwtl
je
mulb
call
xchg
icebp
jmp
ja
sub
dec
inc
loope
pusha
cltd
xchg
mov
hlt
rcrl
test
mov
das
out
test
dec
add
jno
jmp
jb
cmpsb
dec
lods
iret
add
cmpsl
cld
rolb
jne
iret
je
or
inc
cmp
lds
push
sub
mov
add
repz
iret
andb
xlat
xor
push
cmp
lret
jg
test
popa
into
sbb
jo
push
imul
cmp
or
fisubrs
inc
addr16
xor
cld
popf
mov
jb
xchg
add
sbb
pop
orl
jno
repnz
sbb
clc
add
jo
dec
aam
jno
jle
fwait
cmp
sahf
stos
roll
xchg
int
lahf
add
or
or
xor
mov
xor
shll
sahf
adc
lock
scas
lds
test
xor
add
mov
xchg
add
das
jmp
cltd
adc
in
mov
and
mov
jle
rcll
test
das
or
out
xchg
add
rcll
mov
inc
and
cmpb
sbb
push
ja
mov
cli
sub
inc
ret
or
push
lods
sbb
add
roll
pop
add
cmp
sub
rolb
leave
gs
or
bound
std
and
dec
push
movsl
add
mov
push
or
or
das
jo
mov
adc
fdivp
add
daa
cltd
scas
pop
adc
imul
adc
add
sarb
mov
inc
addr16
adc
cmpb
mov
jo
xorb
mov
test
inc
iret
pushf
xchg
stc
std
cmc
int
add
mov
sahf
ret
lldt
aas
inc
ret
scas
aad
push
in
or
cmp
push
xor
jbe
dec
pop
iret
es
add
inc
inc
pop
jge
sub
rorb
cmp
add
sbbl
faddp
add
xor
es
sbb
lods
jecxz
mov
add
jg
into
bound
mov
or
push
xchg
jp
notb
cmpl
sub
add
sti
sbbb
movsb
lock
push
cmc
ret
scas
or
std
loope
jecxz
insb
cmp
jle
and
jl
or
add
rorb
ss
pop
dec
add
mov
sbbl
mov
push
add
mov
push
add
jne
sarb
jle
add
add
fiadds
stos
ret
add
pop
sti
stos
push
xor
and
dec
cmp
mov
inc
fwait
shr
addl
push
ljmp
cmp
add
insl
dec
add
dec
add
int3
call
mov
ret
sbb
jno
sub
inc
repnz
xor
sbb
arpl
or
cmpsb
xchg
cmp
add
jg
shll
int3
add
lods
test
stos
pop
xchg
cmpsb
fstl
test
sub
push
lds
jecxz
call
jo
add
sbb
das
add
jo
add
ret
loopne
scas
mov
or
mov
sti
rcrl
cmpsl
add
pop
and
push
cs
cwtl
inc
imul
imul
mov
add
xchg
jmp
sbb
mov
lea
push
dec
mov
add
push
jbe
or
jl
cmpl
lea
ss
out
movsb
or
sbb
xor
imul
adc
call
mov
xchg
jmp
add
sbb
mov
add
or
sub
cmp
inc
inc
xor
xor
call
fdivs
cld
ret
adc
inc
insb
mov
push
imul
lret
rcrl
call
jnp
mov
cli
fst
popf
in
add
pop
pop
inc
imul
in
and
es
xchg
loop
mov
jge
sub
es
daa
inc
call
jmp
ljmp
xchg
lret
out
shlb
fsub
call
mov
popl
je
add
out
jno
shr
jmp
pop
ficoms
sbb
add
pop
cmpsb
popf
xor
stos
add
out
sahf
add
mov
cmp
mov
scas
adc
cwtl
leave
lahf
fs
fildl
inc
jg
jno
pop
fldl
out
sti
sub
out
xchg
loopne
roll
pushf
cmp
andl
jbe
aaa
add
mov
lahf
nop
push
cmp
inc
mov
xchg
test
scas
cmpsl
inc
or
mov
mov
sub
push
jmp
and
sar
dec
jp
xchg
and
and
mov
aam
push
dec
pop
and
mov
mov
xchg
rorl
sbb
repnz
mov
and
sarb
ss
pusha
push
sbb
inc
cltd
push
out
popl
mov
add
lds
add
mov
ss
pop
scas
xchg
lds
pop
popa
add
push
pop
sub
test
shrl
iret
and
or
xlat
push
shlb
fldl
scas
add
cwtl
aas
mov
inc
jmp
shll
stos
mov
lcall
scas
jns
repz
test
arpl
cli
add
and
popf
and
push
mov
sub
push
repnz
mov
aaa
jle
push
inc
mov
fdivs
sahf
xchg
mov
idiv
stc
pop
stos
aaa
sbb
and
jecxz
aas
sbb
sub
push
je
shrb
inc
jl
divb
and
xor
stos
shll
shl
cmp
popf
notb
cltd
push
and
sahf
movsb
dec
xor
int
imul
add
xchg
sub
xchg
imulb
pop
or
add
mov
xor
and
in
scas
add
sub
call
add
out
jge
adc
sbb
call
shll
test
add
pop
lock
scas
push
add
mov
push
push
xor
pop
icebp
fcompl
stos
sub
in
add
push
mov
jb
xor
aas
inc
xor
in
push
push
or
push
cmp
addl
or
xchg
sahf
and
push
lods
loope,pn
fadds
fsubrs
adc
xchg
add
int
cmp
and
push
rcrb
mov
sub
sbb
mov
fidivl
scas
or
dec
sbb
mov
cmc
sti
in
test
mov
pop
jcxz
sbb
add
inc
inc
mov
or
lcall
loopne
mov
mov
inc
push
sub
mov
pop
mov
mov
push
push
sbb
add
daa
cld
lret
lcall
ret
cmp
xor
in
test
and
or
xor
ret
mov
sbb
leave
lcall
fnstenv
int3
testb
scas
pop
es
add
and
lcall
xor
and
jecxz
mov
les
inc
inc
fcomip
sbb
add
or
cmpl
sbb
xchg
xor
icebp
add
jae
aaa
negb
shll
and
call
sarb
dec
insb
push
aas
or
push
andb
inc
adcb
sbbl
sbb
and
xlat
dec
add
mov
int3
and
mov
addl
xchg
xchg
fs
inc
movsl
pop
imul
sub
out
pop
fadd
insl
cmc
and
inc
xor
sbb
aaa
mov
mov
adc
lret
add
jno
inc
test
rolb
xor
sbb
das
xor
jle
push
push
loope
inc
add
sahf
add
sub
push
add
mov
fildl
add
fidivrl
add
aam
add
mov
jnp
jecxz
pop
mov
sbb
mov
push
mov
add
pop
dec
les
aas
sub
cs
xchg
mov
pop
add
or
cmp
add
xchg
push
jno
add
dec
pop
pop
mov
je
cmp
repz
sbb
jecxz
add
test
add
rol
pop
add
cs
or
movsl
shlb
xor
push
sub
jns
add
hlt
xor
faddp
loop
dec
mov
dec
sahf
and
mov
push
roll
fidivl
aaa
ret
rcrl
ds
jb
push
shll
mov
mov
pop
mov
popf
push
push
add
inc
sub
stos
adc
jge
sbb
mov
rorb
loope
inc
dec
or
es
xchg
mov
sub
lret
cltd
nop
mov
mov
clc
insl
jmp
xlat
inc
cmp
or
icebp
mov
inc
hlt
or
add
mov
out
jo
fwait
add
out
inc
add
adc
sub
pop
pop
mov
xchg
lock
mov
sti
psadbw
mov
fdivl
insb
test
das
lcall
inc
jge
adc
fnstenv
hlt
sidtl
inc
ss
dec
mov
js
nop
test
imul
mov
int
mov
pop
test
push
out
cmp
orl
mov
mov
lods
les
test
inc
arpl
data16
sub
test
inc
test
movsl
push
icebp
jnp
cmp
add
add
pop
out
or
or
dec
fistl
shlb
fscale
push
inc
enter
in
test
cmp
sbb
dec
lock
inc
xchg
pop
push
sbbl
sub
dec
loope
xchg
add
cmp
outsb
aas
mov
ret
cmpsb
or
sbb
cld
push
xor
test
pop
jb
push
mov
sub
test
bound
xor
lods
or
sub
add
add
lock
mov
add
xor
jmp
push
push
xlat
pusha
cltd
push
push
jecxz
sbb
sub
pop
sbb
sub
inc
adcb
out
pop
push
add
pop
and
add
or
or
sbb
inc
ljmp
xor
pusha
add
mov
jge
sub
add
jle
ljmp
add
shrb
xchg
sub
movsb
jge
call
add
out
xchg
add
in
xchg
pop
fldl
outsb
fldcw
stc
inc
orb
cmp
mov
dec
sbb
push
jle
inc
add
aam
stc
cli
stos
into
in
das
sub
hlt
add
dec
and
mov
test
and
cltd
adc
push
ss
mov
add
cmpsb
xrelease
popf
psrlq
add
push
addl
je
orb
pop
add
mov
out
loope
fwait
aad
shrb
mov
incl
cmpl
adc
lret
and
scas
add
pop
test
push
cmp
ret
pop
xor
orb
sarb
xor
inc
add
pop
adc
cmp
jno
sbb
add
push
popa
add
or
rorl
and
mov
xorb
shrl
leave
out
fadds
sub
push
mov
add
test
mov
inc
jae
and
ds
add
addb
mov
dec
push
add
cmpl
lods
imul
add
ljmp
add
pushf
jo
push
cli
out
and
cmp
inc
ret
sub
icebp
push
scas
push
sbb
push
fldt
add
in
arpl
mov
adc
ss
jbe
in
pusha
ds
inc
fdivr
push
cmp
mov
aaa
stos
std
daa
flds
mov
adc
out
jge
inc
cltd
sbb
and
ficoms
mov
add
aaa
cli
inc
loop
and
daa
pop
lods
xor
mov
imul
add
dec
jbe
add
sbb
push
mov
xchg
push
add
mov
add
mov
and
montmul
cmpsb
inc
inc
add
inc
dec
ss
add
popf
jge
and
cmpl
sti
ret
sub
mov
add
mov
repz
xchg
lret
int
or
mov
inc
add
push
outsb
cmp
pusha
adc
add
clc
hlt
jmp
jecxz
cmp
xchg
pop
jae
ja
pushf
mov
out
xor
popf
add
cmp
jl
outsb
jb
pop
pop
dec
fdivl
je
subl
fimuls
nop
add
inc
aas
cli
xlat
add
pushf
cmp
ss
sub
inc
push
loop
hlt
in
xor
push
sahf
inc
jae
std
and
jp
and
mov
cli
mov
cmp
stos
sub
mov
add
push
adc
mov
loop
insl
push
insb
rcrb
inc
lcall
scas
sub
int3
jge
inc
add
icebp
sar
inc
movsb
or
cmpsb
rol
aas
je
adc
pop
mov
stc
xor
pop
mov
loop
jge
dec
mov
movsb
xor
xchg
hlt
out
pop
and
ret
and
aam
add
cmpsb
cs
or
imul
ret
movsb
fldt
int3
sub
ret
ret
int3
adc
ss
cmpsb
add
xchg
dec
push
into
or
add
mov
rcl
mov
mov
lret
stc
ds
add
test
xchg
jecxz
mov
in
mov
mov
fwait
scas
subl
cmp
test
pusha
std
xor
or
movb
mov
into
popf
ljmp
dec
sbb
addr16
rclb
test
stos
hlt
inc
mov
xlat
jmp
flds
popf
je
ror
sbb
shll
add
pop
stos
xchg
daa
adc
add
adc
jb
movsb
push
push
add
fbld
nop
push
and
cmp
cli
add
xchg
xorl
mov
rol
jle
pusha
push
mov
lret
popa
sti
jne
lock
sbb
xchg
mov
int
add
test
cmc
fildl
add
repz
add
aas
sbb
pusha
pusha
and
loope
cmp
mov
cli
test
cmp
call
popf
or
mov
sbb
mov
mov
leave
add
je
mov
subl
dec
sbb
mov
inc
lods
mov
adc
add
aas
lea
adc
dec
nop
add
sub
sbb
shrb
insl
mov
add
jno
jnp
or
into
push
movsl
sti
fbstp
inc
lcall
cmc
cmp
sbb
mov
mov
dec
cmp
dec
test
xchg
mov
stos
mov
pop
aad
pushf
sub
in
cmp
xorl
imul
sub
sub
mov
mov
ret
mov
push
pop
mov
add
or
add
rorl
inc
mov
out
mov
add
aaa
add
adc
dec
loop
enter
ja
test
cmp
mov
shlb
pop
mull
out
pushl
jne
xor
pop
aaa
adc
or
adc
xchg
pop
loope
test
mov
lcall
push
js
ss
cmp
loop
inc
subl
lcall
outsl
sub
scas
xchg
cmp
adc
cs
je
xchg
test
lods
mov
xchg
jbe
arpl
adc
cmpsb
sar
das
cli
and
pop
jl
js
in
fbld
fnsave
push
inc
into
sbb
push
xchg
or
cltd
lea
gs
daa
js
hlt
ret
cmpb
sub
pop
dec
repnz
add
mov
fwait
adcl
xchg
andl
jns
cmpsl
test
jg
mov
mov
pop
add
out
mov
inc
inc
shlb
and
fidivs
add
dec
lcall
int3
add
fstpt
lea
sarl
add
adc
or
add
imull
or
mov
mov
inc
loope
or
jbe
iret
imul
cmpsb
push
sahf
fcomps
sarb
mov
add
fldenv
mov
jmp
pop
sub
jo
sahf
push
add
jbe
test
aad
repz
lods
adc
rorl
jb
push
fistpll
jbe
in
pop
cmp
sub
mov
lods
lock
sub
popf
and
insb
ret
stos
loope
ret
fmuls
or
or
xchg
sbb
fs
imul
dec
shl
push
jge
add
or
add
bound
in
cmp
push
mov
xchg
xorl
out
in
mov
sbb
rcrl
add
and
push
imul
sbb
push
dec
xor
sahf
shr
pop
shrb
icebp
jae
push
sub
in
inc
cmp
scas
fiadds
xor
cmp
dec
iret
arpl
pusha
aaa
and
push
sarl
dec
xchg
daa
and
test
mov
data16
aad
and
mov
push
in
mov
dec
scas
inc
pop
xchg
adc
add
pop
shll
aas
mov
sbb
mov
rcrl
mov
mov
push
jns
push
std
pop
jno
hlt
adc
adc
and
lret
add
loop
xchg
push
sbb
rorb
lret
add
in
imul
mov
jecxz
inc
cmp
pop
inc
and
idivl
ret
iret
cmp
adc
fmuls
repnz
loope
test
fidivrl
or
fbld
add
outsb
in
cli
jo
inc
ror
mov
mov
push
add
fucom
xchg
push
andl
push
and
jg
test
sbb
xor
and
sub
add
hlt
xchg
mov
push
adc
lret
inc
loope
mov
add
jae
xchg
xor
mov
pop
into
push
je
adc
clc
cmp
pop
iret
sub
imul
xchg
jmp
repz
xor
pop
test
sub
cmp
bound
add
les
int
call
mov
cli
add
adc
inc
mov
sarl
pop
js
data16
add
push
int3
push
imul
mov
push
jbe
mov
inc
inc
jb
mov
ret
sbb
mov
aas
mov
add
cmpsb
inc
or
mov
or
sbb
add
or
inc
dec
jmp
or
adc
pop
inc
push
lea
fstpl
lahf
mov
fs
imul
and
shlb
jl
sbb
or
lods
xchg
in
rol
or
mov
jno
test
add
pop
xchg
dec
into
int3
add
mov
pop
adcl
or
adc
aaa
cmp
call
clc
flds
and
shlb
shll
push
and
jbe
add
pop
mov
push
mov
add
sub
lret
gs
lahf
mov
add
lgs
mov
call
inc
js
int
in
and
sbbl
cmpsl
roll
adc
cmc
fwait
or
leave
pop
data16
movsb
xor
mov
add
bound
sbb
push
scas
ret
xor
andl
pop
mov
iret
dec
mov
mov
push
mov
cmp
pop
shl
add
push
fcompl
stc
inc
jmp
leave
lret
aas
mov
dec
add
push
les
mov
push
sub
add
cmp
rcrb
cmp
ljmp
mov
cmp
cltd
pop
out
xor
add
decl
cmp
inc
or
shr
test
aad
sub
xchg
out
xor
xor
adc
sub
add
aas
nop
adc
adc
iret
jns
sbb
inc
in
add
scas
testb
adc
add
lods
jl
enter
rcrl
nop
inc
cmpsb
add
cmc
mov
sahf
or
movsb
rcll
ret
mov
add
and
and
jns
shlb
push
cmp
xchg
pop
xor
rol
lods
in
rolb
jmp
xor
test
sti
and
shr
push
mov
add
popa
test
add
loope
mov
call
pop
int3
test
insl
xor
fcmovne
into
mov
jae
shrl
andl
dec
movsb
js
mov
dec
push
add
dec
ret
push
lret
leave
loope
pop
lds
pop
mov
lock
iret
call
ret
adc
insb
and
sbb
loop
mov
lcall
push
inc
test
mov
or
jb
mov
push
fsubrs
push
push
inc
add
inc
addb
ljmp
mov
push
addr16
sub
add
bound
pop
add
add
dec
sbb
xor
add
xchg
les
test
movsl
repnz
add
stc
cli
int
jle
and
stos
pop
lcall
add
mov
sarb
mov
pop
xchg
cmp
cmp
jmp
shrl
ret
push
aad
negb
repz
jp
mov
or
pop
mov
mov
lock
in
and
mov
in
fsubp
aad
jg
jnp
in
jge
int3
pop
sbb
jo
add
sub
das
sbb
jb
push
rolb
in
mov
add
and
adc
sbb
sub
ret
add
adc
cli
sub
inc
sub
movsb
lods
mov
rolb
repz
jp
add
scas
jns
jl
add
enter
cmp
js
out
add
pop
xlat
adc
loop
push
xor
je
or
out
in
mov
add
dec
mov
pop
ds
add
movsl
mov
or
insb
sub
ja
in
add
pop
jecxz
int3
or
xchg
scas
outsl
add
adc
and
lahf
add
pop
and
test
dec
and
rol
push
or
push
inc
inc
sub
mov
cmpsl
scas
repz
imulb
xchg
loopne
ss
add
sbb
add
push
mov
sbb
movsb
add
mov
dec
mov
cmp
push
sub
sbb
or
add
jecxz
mov
neg
xchg
stos
call
xchg
add
int
adc
fidivrs
fwait
loopne
outsl
or
inc
jno
dec
xor
sarb
push
call
test
adc
xorb
adc
repnz
loopne
movsb
stos
jge
mov
stos
add
lea
jns
sbb
adc
shll
add
fabs
xor
stc
sarb
shrl
cmp
inc
stos
sub
sbb
xchg
push
ret
add
sub
into
add
sub
out
inc
outsl
daa
xchg
test
inc
add
je
push
fcoml
arpl
fiadds
cmp
cmp
push
cli
xchg
pop
jo
add
repz
pop
sarl
xchg
gs
lcall
jecxz
cmc
ret
pushf
xor
add
cmpsl
mov
mov
movsb
mov
arpl
outsb
add
rcrl
mov
and
sbb
repnz
mov
and
mov
mov
imul
jnp
cmp
mov
adc
rcrl
int3
push
jnp
ffreep
xchg
imul
dec
lds
mov
add
mov
push
add
test
mov
xchg
adc
or
mov
jns
dec
outsl
push
aaa
testl
mov
es
pop
imul
repz
inc
push
outsl
cmpsb
test
imul
add
inc
jae
pop
sub
je
cmp
pop
ds
iret
and
fldcw
fsubrp
les
in
and
sti
cmp
add
jge,pt
stos
roll
imul
mov
mov
mov
xor
mov
dec
jo
jb
add
add
icebp
pop
lea
jbe
mov
data16
pop
add
mov
add
and
aaa
pop
scas
loope
cwtl
jl
push
inc
cs
in
xor
hlt
cli
and
mov
push
testb
das
out
mov
sbbl
cmp
xchg
pusha
dec
jne
ret
or
orl
into
mov
insb
arpl
les
or
sbb
mov
fmuls
add
roll
rcrb
add
movsl
xchg
push
add
xchg
popa
and
into
mov
lcall
jp
inc
lods
test
addb
xor
int
sahf
cmp
andl
xchg
inc
xor
out
int3
add
mov
cmp
mov
nop
in
mov
and
inc
jp
sahf
add
fwait
push
add
test
rolb
cmp
stos
fiadds
jno
movsb
lret
dec
mov
mov
ja
add
cld
mov
or
flds
les
mov
sbb
add
jo
xchg
add
arpl
sbb
test
add
and
popf
and
xchg
das
fwait
pop
add
inc
loopne
gs
rol
add
sub
icebp
pop
loop
cwtl
xor
cmp
adcb
lock
push
pop
or
cli
jle
ja
mov
mov
loope
adc
add
pushf
or
xchg
mov
adc
sub
xchg
dec
sbb
pop
add
pushf
inc
or
fwait
roll
popa
mov
xor
imulb
add
scas
xchg
add
pushl
cmp
aas
and
stos
bound
xor
gs
cmp
xchg
add
outsl
sub
pop
cwtl
nop
les
pop
fistps
add
push
dec
adc
jno
sbb
inc
pop
xchg
jl
lea
cmp
xor
add
xor
hlt
inc
inc
lods
pop
bound
scas
ret
imul
inc
jno
andl
mov
popl
arpl
test
or
bound
xchg
add
dec
inc
sbb
pop
es
clc
xor
or
cmp
testb
shrl
mov
add
sub
pop
lds
xor
jae
sbb
push
ss
jne
add
push
insl
add
aam
cs
adc
adc
int
xchg
dec
insb
xor
mov
adc
mov
inc
sub
icebp
adc
xlat
out
add
in
lcall
dec
and
in
fbld
push
insb
aam
add
ret
out
stc
add
mov
data16
mov
insl
dec
flds
sti
xor
inc
sub
rol
in
cltd
jmp
in
xchg
adcl
add
jg
pop
adcb
movsl
xor
addb
cmp
fidivrl
mov
insl
pop
popf
push
adc
cmp
add
in
imulb
inc
pop
jmp
cmpsl
ss
add
mov
in
jecxz
cli
sub
imul
add
pushl
mov
push
xchg
pop
adc
xor
sar
out
or
scas
stos
sub
jmp
cmp
xor
pop
stos
mov
push
dec
or
les
pop
and
or
mov
in
test
sub
es
data16
fcomps
sub
push
test
mov
sub
and
popa
add
push
xor
rorl
jmp
mov
cltd
std
push
pop
test
sbb
fnstenv
out
mov
xchg
cmpsb
cmp
lcall
mov
mov
add
sbb
xor
or
js
test
les
xor
cmpsb
add
faddl
fadds
lcall
mov
push
js
and
sarl
incl
pop
xor
cmp
out
xchg
inc
xor
mov
mov
das
add
pop
xor
jo,pn
iret
xchg
aaa
jg
push
add
pusha
inc
mov
xor
mov
jp
pop
shll
sub
xchg
jo
sbb
add
sahf
mov
movq
and
or
enter
insl
and
ss
lret
mov
or
sbbl
fnsave
cmp
cmp
add
rol
dec
pop
dec
cmp
out
ja
mov
or
loope
std
add
jecxz
mov
fistpl
mov
xor
mov
push
dec
mov
repnz
add
nop
mov
call
xchg
or
sub
stc
inc
dec
bound
cmc
in
arpl
pop
jns
dec
add
mov
cwtl
cs
rorl
mov
push
add
mov
call
mov
push
inc
jnp
pop
mov
sub
xor
cmp
inc
push
hlt
xor
mov
or
fprem
add
call
gs
scas
xchg
filds
push
addr16
lods
jae
ja
add
jo
pop
xchg
in
add
or
sarb
dec
iret
sbb
in
cltd
add
mov
int
push
out
pushf
pop
xor
aaa
les
lds
cmp
sahf
lret
add
xchg
inc
cli
inc
mov
mov
sbb
add
pop
inc
sbbb
dec
push
cmpsb
aas
jo
sbb
repnz
les
lahf
dec
add
cmp
ja
jo
mov
xchg
xor
mov
addl
add
into
jb
in
lock
je
add
in
test
jne
add
sub
add
imul
stos
popa
pop
ret
xchg
cwtl
outsb
loopne
push
in
rorb
adc
cmp
sbb
xchg
cli
jnp
xchg
shrl
cmpsl
ficompl
xchg
mov
aam
cmp
mov
hlt
add
sub
faddp
sbb
inc
outsb
out
aas
xor
cmp
add
cmp
lds
add
xchg
inc
inc
lret
pop
or
sbb
imul
mov
pop
jecxz
xchg
jne
into
lcall
and
add
outsb
adc
or
mov
lahf
out
or
add
mov
daa
shl
leave
or
xchg
xchg
push
rolb
lret
stc
push
repz
add
adc
xor
in
das
loopne
add
popf
lds
lret
aam
mov
jbe
das
adc
mov
pop
mov
mov
jae
jge
lcall
loope
cmc
mov
cmpsb
inc
sbb
fisubl
aad
xchg
sbb
es
aas
mov
mov
aas
daa
movb
inc
mov
frstor
mov
jb
xchg
inc
sub
mov
add
xchg
cli
dec
imul
scas
aas
cltd
mov
or
sbb
lods
sbb
jp
mov
lds
and
fstl
es
add
aas
scas
pop
pushf
jno
add
mov
fidivrl
mov
or
mov
mov
insl
rcr
and
loop
out
jno
pop
aas
add
sti
shll
cmp
cmpsb
mov
leave
pusha
add
adc
add
fistl
add
gs
fimuls
sub
pop
adc
cmpsb
sbb
adc
or
lcall
mov
out
inc
push
add
add
sub
and
rclb
shrl
incb
mov
mov
cmp
fsubrs
or
jmp
ds
cmpsl
inc
add
dec
jns
mov
or
add
ss
sbbl
rclb
xor
mov
xchg
or
mov
lods
adc
lret
pop
fldenv
into
inc
aas
and
adc
xchg
icebp
fwait
insl
hlt
push
sti
sub
add
shrl
and
ja
add
jle
pop
add
sbb
ret
aaa
scas
xlat
push
xchg
mov
int3
pop
lea
pop
adc
fsubrl
aas
xchg
dec
add
pop
or
shll
testb
jno
sbb
xchg
add
jnp
pop
add
add
fisttpll
and
lret
add
and
push
or
mov
push
sub
jecxz
incb
adc
or
add
data16
test
or
test
stos
sub
cli
jb
rcll
cmp
nop
movnti
mov
mov
mov
cmp
push
dec
roll
add
lret
push
dec
pusha
ret
ret
rorl
pop
movl
sbb
inc
movb
cmp
sbb
pop
loope
imul
and
jge
adc
aas
dec
cmp
mov
fdivl
mov
in
add
mov
xor
mov
inc
push
push
inc
cmp
mov
icebp
xor
add
stos
je
cmpsl
jmp
add
xor
xchg
or
sub
add
mov
and
ljmp
test
icebp
inc
sbb
outsl
adc
fidivrl
sub
cltd
insl
inc
mov
add
sub
add
inc
mov
cmp
in
insb
add
shrl
jl
cmp
jmp
mov
arpl
fildll
mov
fbstp
xchg
insb
push
cmp
push
add
add
shl
movsl
lret
xchg
aas
pop
xor
fwait
rolb
jne
ret
pop
adc
mov
mov
sbb
push
movsb
xor
ret
add
popa
pushf
add
xchg
lahf
pop
sub
sti
loope
mov
xchg
xchg
adc
sub
cwtl
ja
pop
add
push
pop
mov
cs
add
sbb
push
stc
jge
add
ljmp
in
xlat
inc
jbe
xor
mov
or
add
xchg
scas
leave
inc
sub
clc
and
out
inc
jmpw
cmpl
sbb
test
inc
mov
subb
outsb
add
mov
rclb
add
xor
jbe
xchg
and
cmp
test
mov
xor
dec
jae
clc
sbb
and
ror
add
aaa
adc
rolb
fdivrs
insl
jo
in
lahf
add
xor
inc
scas
and
cmp
jo
xchg
pop
sbb
push
inc
loop
ss
leave
push
mov
ret
dec
sbb
xor
repnz
mov
sbb
mov
add
sub
inc
or
js
sub
jns
push
stos
jbe
mov
jae
and
subl
push
push
cmp
inc
pop
shll
aas
push
clc
add
shrb
mov
data16
aam
xor
sub
pop
add
and
jb
daa
xchg
xchg
js
adcl
hlt
loope
das
fmuls
dec
inc
sbbb
inc
cwtl
xor
add
xlat
inc
cmp
xchg
int
loope
pop
push
mov
add
add
insl
and
mov
add
sub
shlb
add
mov
push
adc
xor
mov
and
loope
in
lods
jg
xchg
and
push
cld
adc
add
shrb
in
cmp
jnp
jae
mov
cmovg
and
jecxz
sbb
add
or
add
mov
insb
call
int3
arpl
test
movsl
sub
pop
push
and
push
call
mov
add
subl
hlt
test
movl
sbbb
test
dec
in
mov
dec
std
and
in
rorb
mov
aas
sub
pop
shll
ljmp
lea
add
cmp
add
dec
sub
dec
ret
shrb
pop
xchg
pushf
ljmp
dec
je
dec
cmp
sahf
addb
add
add
and
data16
js
push
sti
ret
mov
push
cli
outsb
les
lods
ss
aam
pop
cmp
push
add
jo
push
fimull
nop
rcrl
int3
fldl
dec
mov
ss
cmp
jns
lahf
mov
add
out
insl
mov
push
push
int3
imul
jo
push
inc
rcrl
pop
adc
add
add
rorl
les
lea
sar
loop
adc
les
xor
insb
mov
lret
sbbl
fsubl
add
mov
sbb
loopne
dec
add
hlt
and
in
iret
pop
enter
repz
add
mov
iret
je
mov
ret
and
mov
sub
ds
jne
add
stos
clc
mov
jnp
ja
cltd
les
sbb
jno
adc
scas
add
add
icebp
push
inc
sahf
push
ja
es
adc
mov
daa
and
jg
sbb
dec
sbb
cmp
xchg
fildl
dec
sbb
sub
test
add
fdivl
out
sbb
xchg
outsl
pop
mov
jno
mov
xor
inc
shlb
push
sub
stc
cwtl
orl
out
sub
ret
cmp
add
mov
xchg
push
imul
dec
das
sbb
add
xchg
faddp
call
out
mov
mov
frstor
hlt
and
cs
ret
jne
cmc
inc
inc
lds
mov
xor
ltr
mov
cmpsl
mov
pop
adc
movsb
out
dec
xor
dec
xchg
add
xchg
push
loope
xorl
dec
sub
add
lock
fiadds
inc
xchg
das
ds
jne
rolb
lahf
xchg
jecxz
stc
cmp
sbb
rcrl
cmp
enter
dec
into
pop
mov
xchg
popf
add
rol
xor
pop
gs
xor
push
jp
xchg
adc
test
or
fisubrs
js,pt
mov
xorl
and
ret
cs
sbb
out
xor
ljmp
movsb
jle
scas
mov
add
push
fidivrs
jmp
popf
add
xcrypt-cbc
cmpsl
nop
add
xchg
push
test
adc
jp
loop
loopne
subl
fs
or
stos
mov
push
mov
jno
jg
jl
add
add
lahf
push
testl
lods
and
push
shrl
sbb
add
popf
popl
xchg
xchg
cmp
paddd
flds
dec
mov
fistpll
test
add
and
pop
add
not
cmp
sbb
arpl
adc
pop
xchg
xor
add
and
mov
xchg
or
mov
lods
push
mov
inc
add
mov
xchg
fildll
push
lcall
sub
das
loopne
pop
add
inc
xchg
aad
mov
jbe
out
orl
add
int3
or
add
mov
add
pop
mov
icebp
jno
add
in
jns
add
pop
inc
pop
into
jl
inc
loope
shl
sbb
xchg
out
mov
or
cmpsb
sbb
xor
sub
in
add
sub
imul
jle
sub
loop
jmp
push
aam
nop
sti
movl
jg
out
lret
sbb
pop
insb
loope
fcmovnbe
or
fs
add
ljmp
shrl
push
scas
or
lret
call
fisubrl
loopne
and
aas
push
inc
jp
ficoms
dec
jle
rcll
and
testl
das
daa
xchg
jl
add
in
dec
cwtl
inc
cmp
mov
dec
adc
lock
cmp
add
sub
hlt
dec
mov
icebp
pop
data16
sbbb
add
jae
fwait
cmpl
or
add
push
push
push
adc
or
ja
add
ret
add
arpl
cwtl
jae
adc
shl
pop
lds
cmp
ret
subb
xlat
lods
cltd
add
fcmovnb
imul
packsswb
aaa
or
mov
add
pusha
mov
ret
iret
int3
add
not
sbb
and
mov
xor
ss
jp
cmp
pop
add
push
aad
cmp
fsubl
cmpsb
in
add
test
pusha
cmp
ja
in
and
cmc
movsl
add
js
mov
or
add
push
xchg
xchg
inc
xor
mov
sbb
icebp
rclb
std
aam
sub
add
adc
adc
and
adc
adc
shlb
xor
jne
or
adc
sbb
fisubrs
das
jnp
xchg
mov
scas
jg
pop
or
les
adc
test
andb
mov
add
and
push
adc
inc
cmp
xor
shlb
jmp
shlb
lods
xchg
cmp
xchg
and
fnsave
lods
add
in
subb
jo
cltd
adc
out
sub
in
jge
test
cmp
inc
shrl
pushf
add
mov
fldcw
mov
mov
lret
dec
lock
arpl
clc
sti
in
rol
nop
push
out
add
xchg
fbstp
push
mov
fmul
lahf
ds
out
add
leave
js
sub
push
cmpl
rcrb
xchg
fwait
or
std
push
ret
pop
lds
pop
push
and
mov
sbb
sti
repz
pop
inc
cld
push
or
pop
or
add
dec
mov
push
and
sub
or
ss
lret
mov
ds
andl
jae
dec
add
add
xor
mov
and
add
scas
dec
sub
es
pop
in
ss
nop
adc
cmpsb
ds
fwait
add
repnz
mov
in
xchg
mov
add
fcompl
pop
xor
jecxz
popf
sti
sub
xchg
call
add
js
cmp
stos
xor
jecxz
movsl
mov
adc
ljmp
lret
mov
aas
cmpb
push
fistpl
in
fistl
scas
xor
add
xchg
out
inc
jg
sub
mov
pop
lcall
aad
sub
iret
arpl
aaa
cmp
ret
mov
adc
insb
dec
pop
add
pop
push
les
mov
add
stos
fwait
mov
sub
xorb
add
pop
cmp
mov
scas
inc
movsb
dec
out
ret
mov
mov
sub
fwait
mov
lds
cmc
dec
ljmp
or
sub
xor
inc
sbb
push
push
cmpsb
out
es
push
sub
add
loop
test
lret
inc
mov
adc
loope
or
xchg
dec
out
lds
xchg
out
pusha
and
sub
sahf
jmp
add
add
push
pop
int
push
fwait
pop
sarl
hlt
popa
je
in
mov
repz
jmp
mov
insb
mov
into
sbb
fcomip
pop
iret
mov
lret
popf
out
xchg
adc
lds
add
cmp
cmp
or
int
add
std
push
test
mov
add
push
sbb
adc
jae
sahf
or
push
sbb
sub
mov
sbb
or
sub
mov
mov
test
in
mov
fmuls
dec
mov
out
pusha
cwtl
dec
xchg
orb
filds
adc
mov
movsb
jge
xchg
repnz
test
scas
pop
jmp
pop
ret
movb
and
pop
jecxz
js
and
int
je
add
inc
adc
fdivl
pushf
push
or
das
mov
jbe
lds
arpl
add
fs
pop
jmp
out
lret
and
dec
mov
negb
cmp
push
sbbb
inc
popf
mov
sti
hlt
or
enter
jle
flds
add
loope
pop
adc
es
nop
xchg
or
mov
inc
ret
mov
xor
test
std
xchg
add
xchg
sbb
repz
jmp
xor
add
jnp
int3
cmp
and
je
add
hlt
lock
adc
inc
pop
lret
test
sbb
dec
sahf
mov
push
popf
mov
pop
inc
mov
add
xor
add
and
scas
mov
or
lods
mov
or
mov
in
add
gs
ret
mov
pop
cltd
stc
and
sti
inc
shll
out
mov
outsl
aas
ss
sbb
cmp
inc
sub
daa
pushf
pop
add
iret
jecxz
xor
rcrb
outsb
xor
insl
cmp
and
into
iret
dec
fldl
push
out
push
inc
int
add
aaa
xchg
push
or
loope
ret
pushf
pop
push
or
cmp
mov
mov
mov
loop
popa
cmp
fs
icebp
mov
jb
hlt
mov
add
fwait
xchg
cltd
mov
pop
test
js
stc
sub
lods
push
add
mov
add
pushf
xchg
and
sub
pop
add
sub
pop
xchg
inc
pusha
or
data16
jb
and
sub
add
out
loope
inc
xor
jmp
xor
mov
add
dec
mov
rcrb
jecxz
lock
mov
fcoml
les
push
imul
sub
add
mov
mov
out
cmpsb
fisubs
sub
movsl
add
cmp
sahf
push
dec
lret
bnd
out
mov
adc
fidivrs
dec
cmc
mov
orl
popf
int
out
out
mov
jp
dec
dec
adc
sub
dec
add
out
movsl
ljmp
insb
mov
ret
sti
and
mov
push
xchg
pop
adc
movsl
lods
xor
add
nop
mov
add
push
aad
sbb
pop
cmp
push
inc
rcrl
xchg
mov
ds
or
in
add
adc
add
sbb
inc
stc
pop
cmp
pop
flds
icebp
mov
shll
pop
push
loopne
pop
xor
adc
imul
test
xor
fidivs
fidivrl
std
add
push
pop
mov
inc
and
frstor
add
aas
in
sub
ror
xchg
adc
in
add
addb
add
xorb
jle
rorl
and
repnz
imull
mov
push
cld
in
mov
shlb
dec
aaa
mov
lret
add
pop
mov
sub
add
inc
imul
loopne
shrb
mov
add
lds
inc
jle
sub
out
rorl
fdivr
cmp
aas
andb
mov
leave
xor
dec
or
xchg
ja
in
cwtl
insl
dec
pop
sbb
xchg
push
cmp
and
push
scas
movsl
or
lods
add
mov
pop
dec
add
dec
sub
shlb
and
data16
cmp
cmp
sarb
cmp
xchg
xor
and
add
pop
add
cmp
or
scas
adc
jo
xor
cmpsl
in
insb
popa
das
lcall
fisttpll
les
xchg
add
shl
fsubl
test
mov
fs
xor
push
lcall
sbb
jle
cmp
sbb
add
xchg
pusha
lds
dec
push
mov
add
mov
inc
push
popl
mov
cmp
xor
ds
sub
mov
mov
push
dec
mov
and
inc
dec
in
out
cmp
dec
fs
icebp
cmp
mov
cmp
mov
lock
into
mov
or
dec
test
sub
bound
scas
jg
sbb
add
jbe
repz
ja
mov
mov
cmp
push
testl
sbb
jg
add
arpl
pushf
or
movl
sti
cmp
add
pop
in
add
pushf
xor
and
add
js
or
cmp
and
mov
pop
andb
adc
mul
mov
repz
adc
adc
fildl
sar
mov
xchg
loopne
add
cmp
sarb
add
pop
push
iret
sarb
inc
mov
mov
add
mov
or
ljmp
add
test
pushf
pusha
mov
inc
push
jnp
or
cmpsl
out
jecxz
pop
add
icebp
mov
arpl
mov
mov
call
add
push
xchg
sub
add
iret
add
inc
mov
mov
add
ret
pushf
lret
cmp
cmc
pop
jl
add
pop
dec
mov
insb
rcrb
xor
fadds
insl
enter
and
mov
pop
loop
movsl
insb
add
shrl
pop
add
test
loop
jge
test
ret
or
in
xchg
fstpl
add
jecxz
mov
test
les
fldl
cmp
movsb
imul
adc
xor
add
mov
xchg
push
outsb
mov
cmpsb
roll
jmp
cmp
scas
mov
fistps
add
mov
dec
pop
hlt
bound
fsubl
fnstenv
sbb
push
pop
xchg
pop
mov
ljmp
cltd
arpl
cmc
add
jg
add
xchg
test
sahf
jns
cmp
cmp
pop
sub
or
xlat
mov
add
out
lahf
mov
cmp
xor
cmpsb
mov
add
cmp
mov
add
adc
inc
add
iret
lea
call
cld
js
sbb
scas
adc
mov
jl
jnp
mov
ljmp
dec
aam
icebp
cmp
scas
cmp
subb
aad
frstor
xor
js
fisubl
daa
lods
or
xchg
cmp
push
cmpsb
imul
push
pusha
scas
push
rorl
test
insl
mov
cltd
das
add
or
jmp
add
xor
push
cmp
adc
testb
mov
mov
repz
push
dec
xchg
jg
cmp
push
xor
ret
rorb
mov
mov
inc
mov
add
fildll
pop
lods
popa
lahf
xor
pop
sbb
add
dec
adc
inc
nop
aam
adc
insb
or
aaa
add
xchg
add
xorb
adc
mov
mov
dec
dec
arpl
mov
pop
mov
adc
sti
inc
mov
or
scas
cs
xor
scas
clc
add
adc
add
pop
or
enter
adcl
lahf
out
add
push
shll
int3
std
mov
mov
jo
in
dec
pop
cltd
xor
ret
out
xor
push
pop
fs
mov
aad
mov
ror
cmp
rolb
jecxz
ljmp
addb
mov
add
add
xor
ja
and
insb
repz
pusha
pop
mov
rorl
fiadds
sub
cmc
add
cmp
out
dec
sub
cmp
repz
mov
inc
mov
add
inc
testl
add
jns
lahf
sub
and
add
shll
mov
pop
and
xor
dec
push
lret
stc
and
xchg
push
dec
xchg
and
adc
ret
aam
pop
cmp
daa
push
ret
imull
mov
js
sbb
sbb
mov
fstl
and
lcall
mov
xor
ficomps
pop
cmc
test
jg
add
in
call
add
shll
mov
mov
add
xchg
dec
sarb
sbb
movsl
push
rcrb
ret
lods
or
lahf
xor
and
sub
mov
pop
pop
gs
pop
icebp
add
jmp
xchg
push
xlat
ljmp
call
and
sbb
rcrb
aaa
mov
inc
xor
xchg
xor
add
mov
xor
cmpsl
mov
movsl
ds
add
inc
ficoms
jg
mov
xor
fs
lods
cmpsl
and
shlb
push
add
hlt
sbb
sbbl
add
inc
sbb
subl
and
jno
dec
xchg
jb
daa
movsb
add
fiadds
inc
or
inc
sbb
cmpsb
add
movsb
daa
enter
jno
fsts
int
push
add
xchg
das
push
mov
mov
shlb
lret
inc
nop
lea
aas
lods
pop
add
jl
jo
in
ss
aad
and
outsl
lods
xor
jg
dec
mov
cmp
sbb
and
lds
adc
repz
loop
xor
pop
mov
dec
add
push
push
cs
aad
shll
pop
mov
ret
pop
stos
push
in
add
mov
lret
sbb
in
xchg
add
shrl
imul
cmpsl
rcll
pop
inc
fstl
push
jge
cmp
popl
jo
or
enter
mov
sbb
dec
rcll
add
push
jl
loope
sub
lahf
pop
add
repz
inc
sub
rcrl
shlb
addb
mov
loopne
sub
sub
sar
or
mov
cmp
pop
fnstenv
or
push
int
add
test
sbb
jmp
mov
outsl
imul
andb
mov
dec
or
and
pop
ds
and
xchg
jecxz
in
jae
adc
aad
adc
mov
std
popa
fadds
cmp
insl
popf
cmpsb
or
dec
test
fstpl
iret
push
add
mov
inc
add
cwtl
popf
addb
mov
andl
ljmp
inc
insb
lcall
subl
stc
sti
sub
aam
lcall
mov
inc
test
jge
into
aas
and
std
int3
dec
jmp
adc
mov
cmpsl
jbe
xlat
add
push
jo
jnp
das
add
xor
orl
sbb
jle
mov
mov
mov
mov
lods
and
fcmovu
jae
mov
inc
add
lds
inc
push
popa
hlt
mov
dec
add
lahf
sbb
xchg
outsb
adcl
inc
xorl
xchg
mov
aam
sub
in
addr16
cmp
add
xor
add
rorb
stos
pop
mov
shrl
ljmp
inc
or
push
popa
test
daa
repz
cmp
xchg
push
and
sub
mov
or
sbb
add
shll
pusha
sub
jbe
mov
iret
ja
cmpsb
and
loop
rolb
outsb
xor
add
aad
add
scas
pop
mov
push
lock
inc
shlb
aaa
jge
adc
sub
ret
xchg
push
lcall
xchg
and
stos
int3
cmp
cmp
and
mov
icebp
icebp
cmp
lea
sahf
jno
aaa
jnp
add
arpl
mov
inc
push
pop
inc
adc
cs
jne
jns
jno
adc
xchg
ljmp
cmp
push
inc
push
or
mov
imul
nop
out
pop
daa
dec
mov
dec
dec
fcmovne
fstl
rorl
repnz
sub
arpl
push
add
lret
add
mov
fidivrl
out
add
adc
sub
lret
jecxz
xchg
sbb
clc
cmp
or
sarb
mov
push
adc
push
dec
or
or
or
sbb
add
mov
sti
xchg
sub
mov
or
cmc
lods
stc
icebp
cmp
sarb
mov
adc
mov
lahf
or
push
shll
js
mov
push
mov
adc
fidivrs
inc
push
push
dec
cmp
add
cmpsl
loop
lock
mov
pop
xor
adc
or
add
pop
inc
add
mov
pop
test
push
repnz
orl
cmpsl
out
adc
or
lret
pusha
insb
imul
fnstsw
add
es
adc
jmp
jge
sar
fs
cmp
mov
imul
jmp
loopne
inc
add
lea
jg
lcall
add
mov
std
imul
sbb
pop
xchg
add
iret
stos
xor
inc
pop
add
add
sti
adc
fwait
test
stos
mov
pusha
mov
xor
jbe
stos
fwait
inc
into
inc
cmpsb
add
decl
ret
add
xchg
cmp
cwtl
js
add
jbe
int
inc
inc
in
aam
insl
lods
cmp
add
out
jmp
adc
cmp
and
popa
icebp
notb
and
adc
scas
ljmp
mov
cltd
or
jno
jg
roll
movsb
mov
imul
lock
daa
fucomp
cmp
push
adc
nop
int
mov
roll
testb
and
scas
aam
outsl
sub
shll
add
mov
cmp
sbb
das
fwait
mov
jmp
xor
arpl
pop
xor
ds
jp
pop
add
les
int3
sarb
cmp
rolb
lods
pop
subl
andb
xchg
adc
push
mov
inc
sti
sub
sbb
sbb
inc
add
shl
mov
ss
add
test
pop
xchg
sub
lock
push
cmp
shrl
insb
fiadds
and
jb
fnstcw
scas
lret
adc
mov
data16
sbb
and
mov
cmp
repz
xlat
fwait
rclb
adc
and
out
add
lcall
sbb
lods
mov
inc
dec
push
mov
sahf
ss
add
mov
subb
push
daa
inc
pop
dec
jge
repnz
xor
sub
mov
cmp
dec
sbb
add
cli
inc
mov
imul
ja
or
add
sysexit
rorb
sub
ret
hlt
add
mov
mov
mov
adc
enter
ret
pop
pop
ss
movb
aaa
xor
mov
push
iret
jle
cmp
xchg
mov
stos
cmp
in
orl
cwtl
sub
out
mov
mov
cltd
dec
sahf
lret
repz
stc
mov
cmp
push
loope
addb
push
and
jg
pop
add
sahf
test
and
mov
icebp
adc
mov
hlt
mov
stc
cld
add
jle
inc
inc
movsl
xor
add
leave
fs
push
dec
and
cli
scas
out
cmp
push
push
pop
xor
and
jo
test
xor
add
sti
aad
arpl
lds
lret
cld
mov
pop
xchg
mov
mov
and
mov
or
ret
imul
push
in
nop
pop
pusha
cli
push
int3
dec
out
xor
cmpb
jno
mov
scas
and
mov
jae
jmp
sbb
inc
pop
lods
icebp
data16
bnd
dec
xchg
movsb
push
cmp
nop
add
fisttps
or
das
fstl
cmp
aam
lahf
adc
or
outsb
or
fwait
pop
ds
mov
mov
jae
cmp
mov
xor
sbb
jge
sub
rorl
add
mov
jns
popf
les
mov
inc
fdivl
mov
movlps
add
mov
add
data16
jg
enter
cmp
mov
add
stos
sbb
int
adc
pop
mov
xor
adcb
add
loope
push
add
out
int
inc
loopne
add
pop
push
in
add
xchg
je
dec
xchg
aaa
call
and
lahf
adc
ficompl
in
inc
pop
xor
pushf
lods
or
push
test
inc
mov
xor
inc
call
and
adc
nop
mov
adc
addr16
shll
push
cltd
pop
fdivrl
addb
mov
sub
xor
popa
adc
dec
push
xor
fisttpl
add
adc
data16
out
xchg
in
jae
jne
sbb
scas
test
cmpsb
add
cmp
repnz
in
add
jno
popf
out
loopne
lds
lcall
mov
add
mov
inc
jge
or
add
add
push
or
js
adc
mov
xor
lcall
fwait
sub
xchg
xlat
or
test
xchg
fs
das
add
cli
sbb
adc
aas
dec
inc
jbe
mov
cs
adcb
add
jns
jle
icebp
je
add
sbb
cmp
and
adc
stc
cmp
sub
sbb
cmp
push
sbb
mov
inc
mov
imul
sub
popa
mov
add
xchg
dec
mov
xchg
mov
add
or
scas
inc
pop
stos
mov
xor
and
add
push
stos
into
add
jge
inc
push
sub
aas
add
neg
stos
std
clc
hlt
cs
cs
pop
outsl
add
aaa
stos
xchg
add
pushf
sbb
test
sub
add
negl
pop
sub
add
or
pop
jnp
push
xchg
adc
sarb
test
insl
jge
cmp
lcall
adc
bound
fidivrs
aaa
into
or
sub
sbb
push
arpl
das
popa
roll
adc
adc
fisubrs
mov
mov
insl
js
xor
or
lods
xor
in
sti
imul
orb
loope
cwtl
and
xchg
cmp
add
pop
add
lock
xchg
ret
and
jbe
add
mov
rolb
and
and
sbb
les
insb
and
cld
insl
jl
movsb
jnp
pop
xchg
pusha
push
imul
loope
shr
add
adc
sub
adc
push
cmp
mov
sti
inc
cmpb
jecxz
fisubrs
inc
inc
or
andl
pop
ret
or
adc
jo
lods
sub
divb
lds
leave
or
xchg
pop
mov
jns
insb
lcall
add
cltd
and
jb
xor
add
sbbl
mov
xchg
cmp
inc
jno
and
add
cmp
aam
mov
out
mov
stos
jecxz
rorb
hlt
arpl
orb
add
fwait
sbb
rcll
dec
ljmp
insb
ror
push
add
and
decl
sbb
push
bound
xchg
fcmove
icebp
shrl
xchg
js
pop
and
loopne
mov
repnz
aad
add
jae
xchg
outsl
pop
inc
cwtl
add
call
lret
mov
mov
shrb
ds
inc
pushf
and
dec
ret
ja
push
repnz
in
sub
fidivs
pop
push
ds
or
ja
mov
ret
add
push
and
xor
ret
sbb
push
mov
test
shrl
sub
aam
jl
sarb
cmp
jno
push
mov
mov
test
popa
les
mov
jae
shrb
daa
fnstcw
insb
sub
dec
cmpsl
add
ds
cmp
ja
js
jno
add
push
mov
inc
lods
mov
ds
mov
add
lcall
ja
ret
dec
add
add
out
arpl
mov
cmp
or
cmpl
mov
sub
bndldx
add
movsl
andb
jb
addr16
adc
pop
das
xchg
and
loope
int3
mov
mov
arpl
stos
pop
add
bound
pop
xor
movsb
negb
mov
mov
mov
int
mov
add
pop
sub
jp
outsl
or
xchg
cmp
shll
or
add
and
sub
xor
pop
add
in
mov
shrl
repz
dec
inc
push
fsubs
add
or
sti
push
lock
scas
repnz
inc
fcoml
xchg
push
sbb
mov
mov
add
dec
mov
xor
call
add
inc
js
pop
mov
push
pop
icebp
mov
add
jmp
mov
shll
cmp
lcall
adc
inc
sbb
mov
add
fidivrl
neg
cmpsl
cmp
sub
dec
sub
ficoml
inc
roll
in
and
add
std
shlb
aam
repz
inc
lods
fdivrs
xor
inc
outsl
jbe
push
mov
push
push
pusha
cmp
or
cmp
xchg
mov
dec
push
add
jmp
jbe
insb
mov
stc
icebp
add
jae
jmp
or
dec
cmp
cmp
xchg
add
aas
enter
xadd
xor
leave
add
sahf
mov
popf
loop
dec
dec
adc
xlat
xchg
xor
cmp
lds
lea
cmp
push
mov
mov
mov
inc
sub
into
insb
adc
test
or
cld
inc
mov
inc
and
jmp
popf
cmp
xorl
or
inc
sub
xor
add
inc
sbb
or
add
daa
mov
inc
mov
jle
movsb
or
lods
les
jmp
mov
outsl
pop
ret
xchg
mov
adc
movsl
xchg
ficomps
and
outsb
cmpsb
cmp
sub
pushl
out
movsb
adc
into
mov
lods
add
lret
mov
and
int3
add
xor
call
xlat
mov
mov
aaa
loope
sbb
daa
dec
jmp
fsubr
cmp
xchg
sub
popa
sub
out
jle
adc
xor
cmp
dec
cmp
and
mov
cmp
pop
daa
xchg
sbb
push
mov
into
aaa
pop
mov
test
and
roll
pop
pop
inc
ret
fwait
or
cmpsb
sub
mov
les
inc
and
nop
push
push
add
inc
sub
insb
outsl
cmp
add
pop
xor
mov
cli
ja,pt
cmp
pusha
jae
sbb
out
sbb
jno
loope
xchg
sub
ss
add
dec
push
repz
cmc
and
shr
jmp
pop
inc
dec
pushfw
and
add
dec
popa
outsb
scas
lea
dec
xchg
sub
sbb
movl
rcrb
mov
pop
mov
push
lods
xor
add
adc
pop
cmpsb
dec
xor
mov
stc
cmc
mov
shlb
mov
sbbb
pop
mov
shrl
es
inc
add
dec
jmp
xlat
pop
sbb
clc
ret
mov
mov
dec
out
add
cmpsl
inc
cltd
add
adc
int3
jmp
notl
ret
mov
lea
cmpb
xlat
lds
add
out
sbb
insb
add
mov
add
into
nop
leave
pop
push
and
and
jae
idivb
cli
mov
dec
and
ja
dec
out
add
jb
mov
push
pop
sbb
sar
sub
sbb
jnp
pop
adc
adc
repz
add
scas
cmp
inc
and
out
xor
outsb
cmc
gs
inc
adc
fcoml
xchg
sbb
cld
push
push
jmp
jo
add
shll
inc
mov
mov
xor
jle
push
fsubs
jl
icebp
push
cmp
add
xlat
mov
sub
jnp
mov
out
fs
xchg
das
cmp
lret
add
xchg
aas
fmuls
xor
lcall
js
or
mov
rorb
add
xor
add
testl
sarb
xor
sub
cmc
sub
jg
lock
adc
fnsave
add
sbb
add
add
jge
and
sarl
and
pop
test
jae
or
js
mov
sti
xchg
adc
mov
xor
inc
cmc
add
cltd
add
add
sbb
jp
rol
jns
lea
dec
sub
xchg
add
sub
sahf
scas
andl
arpl
and
adc
add
stc
push
sarl
mov
fcmovb
inc
cs
sub
pop
ss
mov
mov
push
cld
add
ret
mov
xchg
push
das
push
sbb
loopne
cwtl
fildl
insl
mov
sbb
add
lahf
icebp
loop
into
inc
mov
in
int3
data16
xor
int
jg
out
push
cltd
push
ds
mov
pop
mov
push
scas
add
adc
push
into
sbb
leave
mov
mov
clc
sub
nop
sarb
sti
test
cmp
push
add
cltd
es
add
gs
or
xchg
lods
aad
cmp
inc
jo
add
jno
stos
pop
adc
xchg
push
mov
pop
inc
movsl
pop
xchg
xor
cmpsb
xor
sarl
mov
pop
stc
fistl
mov
js
jp
cmc
add
add
dec
add
cmp
adc
int3
xchg
add
pop
xor
aad
dec
jbe
testl
mov
js
sbb
cmp
add
cmp
sub
push
fwait
daa
dec
movsl
xor
adcb
jnp
in
lock
rorl
add
xor
loop
jg
pop
and
sub
shl
inc
add
gs
inc
add
es
mov
lods
pop
push
out
orb
add
add
mov
adc
pop
push
jo
and
add
nop
sbb
lahf
cltd
xor
add
js
fists
xchg
divl
dec
scas
icebp
mov
std
flds
imul
mov
lahf
sub
paddb
rclb
loope
push
insl
mov
mov
sbb
add
and
bound
push
test
or
adc
add
hlt
aaa
adc
shrl
daa
sub
fcompl
add
nop
mov
les
cmc
pop
stos
add
imul
sti
jmp
ret
pop
mov
jnp
push
je
jo
and
mov
movsb
xchg
push
sbb
pop
aam
insb
inc
mov
out
insl
lret
add
inc
clc
mov
jae
daa
add
stc
or
insl
in
mov
fsubr
int
adc
ljmp
movd
pop
cmpsb
mov
or
pop
mov
pop
pop
add
push
imul
lcall
inc
stos
outsl
push
push
xchg
push
js
andb
jmp
pusha
fadds
je
roll
mov
push
cmc
add
mov
add
jecxz
mov
push
push
in
cwtl
mov
or
lret
out
jo
adc
je
add
iret
sub
jbe
or
lea
ss
jo
or
enter
cmp
insl
or
mov
cmp
xchg
stos
call
arpl
cltd
dec
clc
xchg
xor
push
xor
std
sbb
adc
in
jns
andb
mov
ss
imul
jmp
add
ds
ja
xor
push
add
inc
add
ljmp
cltd
lds
sbb
imul
rcll
jl
shrl
rorb
jecxz
insl
add
adc
add
sbb
pop
mov
pop
cmp
add
addr16
cs
leave
add
popf
test
fdivs
mov
loop
adc
sbb
dec
ret
pop
pop
xor
adc
cmp
jle
add
out
and
int3
mov
mov
cmp
mov
outsb
cmpsl
cld
shrb
and
into
inc
add
sub
push
mov
inc
xchg
xor
sub
stos
add
pop
and
xchg
xchg
out
add
sbb
xchg
mov
sbb
iret
fldenv
and
or
add
jno
jo
dec
popf
sbb
pop
push
mov
xor
into
mov
xchg
jb
or
jnp
outsb
out
adc
ffreep
lahf
scas
add
jns
es
add
pop
shlb
xchg
and
and
add
sahf
and
add
inc
out
inc
test
inc
inc
ja
push
pop
mov
cmpsb
jg
shll
repz
shrl
lods
in
adc
xchg
sbb
push
push
fsubr
mov
andb
cmp
cwtl
xrelease
stc
add
jbe
and
xor
lret
add
add
adc
mov
inc
mov
loopne
sbb
sub
and
add
sbb
ja
pop
add
nop
fs
test
cmp
mov
jge
sbb
je
add
clc
xor
int3
cmpsb
mov
lds
js
adcl
fidivl
and
out
push
push
adc
mov
movsb
mov
pop
ja
loope
leave
imul
mov
in
add
or
fcmovnb
push
lcall
jo
pop
fmul
add
addr16
adc
hlt
pop
xor
es
shll
or
mov
das
add
mov
aaa
ret
xchg
mov
cmp
aad
sbb
sbbl
fsubl
sub
jecxz
adc
stc
in
xchg
test
inc
or
daa
cmp
jo
add
outsb
fdivrl
sub
cmpsl
add
cmp
into
and
pop
pop
ret
adc
sti
push
xorb
mov
fisubrl
add
fdivl
add
cmc
cmpb
ficoml
shll
test
cli
or
movsl
lea
push
adc
sbb
add
shl
mov
sub
add
or
or
dec
adc
lds
cmp
shrb
add
cs
add
iret
pop
in
insl
mov
or
jbe
inc
andb
add
mov
or
ja
add
adc
cmp
mov
sbb
lcall
cmp
cmp
and
xchg
in
adc
lea
ss
add
loop
popf
sbb
sub
ljmp
mov
add
mov
xor
cli
das
add
cmp
test
loopne
ja
or
mov
push
test
das
add
jo
pushf
mov
or
ja
stc
cltd
sbb
sti
daa
inc
jae
add
std
mov
sbb
inc
das
into
jmp
add
lds
xor
mov
mov
ret
and
push
jmp
pushf
sub
dec
mov
dec
xlat
insl
add
mov
mov
xchg
mov
je
sub
fisubrl
inc
inc
and
stos
and
dec
push
add
decl
fimull
jl
mov
add
xlat
xchg
shrb
mov
jb
dec
adc
add
loopne
cmpl
pop
ret
push
jmp
xor
arpl
push
adc
lods
in
add
xchg
cmp
pop
pusha
pop
mov
add
cld
cmc
pop
imul
add
and
outsl
push
cmp
fimuls
aas
add
lods
gs
rclb
sbb
sahf
adc
hlt
in
and
pop
mov
das
stc
dec
into
dec
jp
mov
movsl
jno
sbb
cld
pop
addl
div
or
ja
inc
clc
mov
loope
scas
push
test
sbb
outsl
out
push
pop
decb
or
dec
cwtl
out
cmc
das
pop
cmp
mov
sub
dec
std
or
pop
out
daa
movsl
add
test
sbb
mov
xchg
lcall
add
outsl
inc
jbe
arpl
push
leave
loopne
cs
das
sbb
rclb
std
and
add
adc
jns
add
mov
inc
lahf
sub
ret
push
add
mov
add
in
and
cmp
add
ljmp
sbb
and
adc
mov
bswap
stc
call
jae
aas
lods
mov
lcall
add
xchg
inc
das
bound
pop
fcoml
lods
jo
ficoms
pop
mov
ret
rorb
shlb
loope
fistpll
cmpsb
dec
add
leave
inc
mov
adc
push
imul
sbb
dec
aam
sbb
ret
enter
cmpl
or
mov
jge
pop
insl
add
js
add
jno
sbb
sbb
ljmp
cmp
xor
mov
pop
cmc
call
clc
popf
loope
dec
sbb
jge
or
and
xor
adc
add
cmp
mov
dec
cld
roll
nop
hlt
in
inc
mov
add
iret
xchg
scas
push
js
rorl
sti
scas
roll
gs
xchg
xchg
adc
leave
enter
scas
sub
lds
mov
inc
mov
sbb
insb
add
adc
jb
xchg
das
and
jmp
adc
jbe
cmp
add
mov
movsb
pushf
push
dec
sub
pop
add
aam
cmp
pop
ret
mov
loope
test
js
xorl
jnp
pop
dec
pop
out
adc
pop
jbe
jge
ret
scas
inc
lock
inc
movsb
into
xchg
xchg
add
int
das
and
push
sti
add
test
lds
ret
add
movsl
mov
push
sbb
cmp
sub
xor
loop
movsl
out
cmc
sub
dec
mov
arpl
or
pop
sub
rcr
or
out
ds
xchg
mov
lcall
aam
stc
inc
loope
mov
sti
sub
add
bound
mov
data16
movsb
mov
imul
filds
jle
negl
mov
test
mov
stos
inc
lahf
cli
mov
adc
scas
dec
cmp
sti
push
inc
fcoml
jo
and
push
add
movsl
pop
enter
add
std
jg
add
pop
xor
and
leave
jmp
sbb
aaa
pop
add
shll
add
icebp
and
adc
mov
mov
mov
orb
adc
out
push
inc
notb
iret
mov
rorb
xor
subb
push
xchg
mov
pop
inc
or
mov
das
jnp
xor
setle
push
xchg
idivb
xchg
add
repz
pop
dec
into
or
add
je
daa
aam
repz
enter
push
jnp
mov
or
add
call
or
cmpsl
lret
scas
mov
add
push
push
cmp
push
pop
js
mov
leave
dec
sbb
adc
shlb
and
lods
mov
jb
outsl
lret
xlat
addb
sti
adc
cmpsb
sbb
cmp
cld
stc
xchg
pop
inc
xchg
sub
xor
inc
rcl
xchg
cmp
xor
clc
and
xlat
test
gs
int3
subl
sbb
adcb
test
xchg
xchg
call
cld
rcrl
imul
jb
outsl
lds
or
sti
jecxz
sub
into
xchg
adcl
mov
in
aas
dec
sub
ret
and
sti
inc
in
fs
dec
dec
xor
adc
inc
test
mov
and
in
push
inc
enter
mov
dec
aas
sbb
add
push
push
mov
dec
shll
cmpsl
add
rclb
iret
add
jl
into
fdivs
and
adc
cli
leave
sbb
cmp
dec
ret
fsubrs
or
mov
inc
add
pop
js
mov
and
add
out
sbb
rorl
out
mov
cld
add
sub
shlb
out
or
popf
mov
shrb
jo
lock
movsl
pop
add
sub
lcall
push
les
push
add
cli
or
iret
or
sbb
xor
mov
daa
pop
push
nop
ljmp
xchg
lods
dec
faddl
loope
out
and
ds
test
cli
dec
and
clc
add
je
sarl
popf
xchg
fcmovbe
gs
inc
add
xor
add
arpl
aam
cmp
jnp
cli
pop
inc
mov
mov
xor
adc
gs
cli
shl
inc
pop
sub
cmp
xchg
into
xchg
lock
inc
mov
push
or
adc
jnp
test
rolb
fsts
dec
stos
push
jle
and
mov
lcall
outsb
add
cmp
into
pop
mov
int3
aam
add
or
lret
popl
loopne
imul
mov
mov
add
sbb
jo
cmp
movswl
pop
insb
and
fidivrs
xchg
xor
cmp
mov
mov
add
add
add
shll
adc
add
subl
stc
dec
push
dec
add
clc
movsl
cmpsl
add
aam
inc
adc
addr16
xor
pop
std
push
mov
jnp
or
shrl
and
notb
mov
adc
push
rclb
loopne
jecxz
add
push
cmp
faddl
rcr
in
pushf
pop
cld
add
ret
leave
rcrb
dec
jno
cmp
test
cmp
aas
clc
aad
dec
jecxz
lea
jbe
fmull
cmp
adcl
rcll
push
dec
enter
scas
aam
fdivrl
mov
pop
repz
inc
and
imul
fdivl
xor
lret
sbb
test
push
inc
or
push
adcb
inc
mov
mov
xchg
test
add
std
mov
cmp
jo
pop
subl
inc
sbb
icebp
mov
add
add
shl
loopne
arpl
or
lcall
nop
mov
std
int
dec
adc
faddl
repnz
js
sub
add
add
xor
outsl
pop
inc
sub
mov
js
add
shlb
fstp
test
xor
test
push
jp
aaa
jnp
in
push
fildll
cmp
jnp
ds
int
add
jp
dec
fnstsw
mov
ror
movsb
scas
and
dec
inc
pop
adc
dec
dec
fstpt
inc
popa
xorl
push
icebp
push
mov
or
shlb
cld
bound
leavew
ds
movsl
insl
sbb
add
outsl
mov
rolb
and
push
pop
dec
adc
lcall
add
pop
clc
xor
jns
dec
xor
movsb
add
pop
out
lret
rolb
xor
pop
rorl
jp
and
and
and
mov
pushf
add
sarb
add
cld
sbb
enter
add
xor
and
in
add
lds
mov
in
jg
pop
lock
lea
mov
cmp
inc
sub
push
sbb
stc
add
mull
add
testb
inc
add
push
test
fucom
aad
sbb
mov
inc
frstor
shl
mov
push
testb
outsb
add
cmp
ja
push
cmp
loope
push
lds
push
jb
ficoms
jns
rorb
pop
loop
and
into
dec
add
popa
subb
xchg
xchg
popf
repnz
add
and
popa
fnstsw
aas
rcll
dec
jl
es
push
imul
rclb
and
cmp
add
popf
out
into
mov
sar
xorb
push
adc
lcall
aam
pop
fnstenv
pop
add
or
jns
aaa
sti
in
aas
movl
lret
outsb
mov
hlt
mov
sub
pop
sbb
mov
ficoml
cmp
frstor
push
and
or
add
push
aaa
mov
dec
outsb
add
pusha
mov
inc
cmp
pop
add
add
sub
shl
push
add
sbb
sahf
pop
ret
or
arpl
in
add
dec
sbb
cmp
dec
scas
lea
or
je
sub
adc
add
xchg
xchg
mov
inc
xchg
or
add
or
popa
xchg
gs
jnp
xchg
call
inc
pop
pop
jo
into
or
xor
add
xchg
sbb
mov
lds
shlb
mov
or
mov
xchg
sub
js
pop
inc
dec
movsl
jnp
mov
xchg
sbb
out
mov
jae
xchg
inc
sbb
cmp
sub
and
add
test
sbb
jno
or
movsl
ret
and
lret
test
sub
sbbb
pop
jl
icebp
mov
lea
aaa
xchg
repz
add
jbe
cmp
mov
push
sarb
adc
pop
inc
mov
sbb
mov
shl
xor
cs
add
mov
push
rcl
adc
fmull
cmp
mov
int
and
sahf
add
lods
cli
popa
jmp
ret
dec
pushf
arpl
test
mov
test
xchg
inc
push
iret
ljmp
insl
mov
xchg
movsl
in
jo
mov
inc
scas
ss
fadds
xchg
pop
mov
sbb
mov
lea
add
mov
or
fldt
pop
ja
test
inc
and
xchg
shll
mov
mov
inc
into
out
and
adc
sarb
jp
add
lret
pop
bound
flds
xor
add
sub
notl
call
push
cmp
add
cmpsb
pop
cmpsl
es
cmp
push
aam
dec
jae
adc
mov
sub
push
sbb
dec
xchg
stc
popf
shrl
imul
vmwrite
sti
adc
fdivr
aaa
pop
mov
and
lret
fiadds
pop
mov
aas
loope
xor
mov
add
movsl
popa
mov
xchg
mov
shlb
jbe
add
into
out
inc
sbb
popf
dec
mov
add
iret
and
or
dec
fisubl
jnp
add
jecxz
pop
mov
adc
outsb
or
icebp
fldt
mov
shll
xor
xchg
add
sbb
inc
xchg
movl
rorb
add
roll
lret
sub
or
aad
or
mov
jb
mov
add
add
lds
in
fsts
xor
sbb
dec
push
pop
js
and
jp
add
adc
cmp
inc
mov
into
fimuls
inc
push
imul
das
mov
pop
add
inc
mov
or
adc
or
xor
sub
xchg
dec
rolb
cmpsb
xor
sbb
jnp
mov
pushf
sub
xchg
ja
ror
mov
int
jns
jp
cmp
xlat
inc
das
andb
and
mov
addr16
inc
add
xor
jp
incb
jmp
add
aam
sbb
jb
add
pusha
add
ja
lret
pop
shll
pop
jo
dec
jo
int
mov
ja
sbb
add
pushf
xor
jne
stc
pop
mov
inc
adc
mov
scas
mov
xor
mov
pop
popf
and
and
sbb
arpl
fs
stos
dec
add
leave
inc
repz
icebp
test
sahf
scas
inc
push
std
adcl
dec
adc
rol
dec
enter
das
xchg
mov
lcall
loopne
or
xor
jns
jae
mov
cmp
xchg
pop
mov
sub
cmc
js
mov
in
or
sbb
movsl
les
push
out
ja
cmp
xor
adc
add
mov
cmpsl
pop
push
or
push
pop
fmull
leave
inc
stc
sub
sbb
lcall
jle
xchg
leave
sbbb
loop
xchg
shlb
movsb
cld
cmpsl
mov
add
hlt
mov
shrl
sar
push
adc
mov
ja
mov
in
jge
rclb
popa
inc
jmp
inc
dec
push
sub
xor
rol
and
pusha
lods
pop
adc
add
ret
push
push
sbb
add
rclb
sub
mov
ficoml
rcrl
dec
out
test
add
cmp
pop
dec
std
xchg
inc
pop
imul
div
add
int
pop
mov
lods
xchg
sbb
cmp
imulb
enter
xchg
and
adc
inc
int
mov
push
pop
or
pop
xlat
aaa
ss
mov
out
add
xchg
hlt
add
sbb
cmp
and
cmp
ss
mov
clc
ret
hlt
push
lahf
dec
add
mov
fs
add
adc
jne
xchg
or
shrb
stos
inc
or
add
jge
daa
add
cld
xor
dec
and
mov
mov
jl
insb
jae
push
add
sub
imul
pop
xchg
xor
and
enter
cmp
paddusb
mov
inc
into
cld
push
sti
scas
popa
add
mov
sub
add
jg
mov
mov
dec
xchg
ret
daa
imul
xor
rorb
movlps
sbb
xchg
push
jae
add
filds
inc
add
push
pop
xchg
push
mov
adc
and
xchg
inc
xchg
cmc
fsubl
pushf
mov
test
xchg
test
dec
sti
sar
sbb
orb
adc
or
mov
add
and
add
fcmovne
xor
es
add
mov
push
pop
jne
scas
test
add
push
orl
rorb
dec
xchg
mov
imul
and
sub
leave
xchg
fisttpl
int3
dec
xor
xchg
test
xor
sti
das
rol
add
mov
imul
adc
add
pop
stc
mov
add
pushf
loop
test
ficomps
rorb
mov
add
insl
push
lahf
mov
mov
int3
cmp
sbbl
add
push
sahf
cmp
fisubrl
rcr
clc
gs
dec
mov
out
mov
xchg
testl
repnz
jnp
jne
xor
stc
add
dec
jl
push
mov
stos
add
pop
sub
push
inc
add
pop
arpl
pop
rolb
xor
add
into
add
cli
daa
incb
mov
sbb
pushf
nop
cmp
push
sub
addr16
rolb
push
aad
mov
fwait
add
jno
jne
test
cmp
pop
add
cltd
imull
inc
outsl
add
unpcklps
xor
jecxz
jbe
mov
rcrl
pop
sub
or
adc
mov
and
pop
rcr
das
add
subb
fdivp
enter
sbb
or
inc
out
or
shlb
xor
in
pop
insl
and
sbb
popa
sub
test
xor
add
push
add
mov
cmpsl
adc
inc
arpl
bound
cmp
add
xor
popa
fiadds
push
clc
and
mov
fwait
lods
fcmovbe
negl
lret
pop
cmp
sub
cmp
jae
and
sbb
add
rcrb
inc
push
mov
and
loop
mov
aad
pusha
jns
mov
sbb
outsl
rorl
mov
adc
rorl
add
loop
cmp
scas
inc
cltd
ret
loopne
sbb
int3
xor
and
cmp
cld
fidivrl
push
rclb
ds
ds
mov
bound
mov
pop
sub
addr16
jae
sbb
mov
dec
rolb
imul
xchg
les
mov
xchg
rclb
xor
mov
test
sub
mov
add
adc
fidivrl
mov
sub
add
addr16
cmp
cli
cmp
repz
push
add
movsb
xlat
out
ret
jp
fiaddl
xchg
ds
mov
mov
mov
dec
shlb
fisubrs
icebp
jle
lods
cmp
add
jo
outsb
sub
xor
sbb
add
loopne
jmp
test
movsb
mov
outsl
and
pop
pop
pop
out
fsubrs
pop
int3
xor
mov
ljmp
into
aam
pop
lcall
bound
sbb
sbb
push
lock
xor
in
push
out
sbb
cmpb
sbb
pop
lret
ds
add
xchg
jmp
sbb
int
pop
xchg
and
dec
sub
jnp
mov
subb
inc
call
jle
mov
add
ret
movl
pop
push
cli
push
cmc
pop
push
add
clc
or
xor
pusha
jl
and
push
xchg
xorb
push
ret
mov
test
repnz
add
dec
cld
loop
fcomp
loopne
adc
xor
dec
jnp
out
pop
xor
push
add
jbe
pop
cmp
adc
mov
divb
nop
iret
mov
int
cmpb
ss
dec
cli
loopne
pusha
ds
rolb
ja
sbb
add
sbb
mov
inc
lds
push
add
push
or
subl
xor
sub
jno
xlat
hlt
fimuls
inc
or
lods
out
sbb
adc
nop
add
fdivl
xchg
imul
dec
pop
or
add
sub
rolb
cmp
test
lcall
ja
in
push
xchg
flds
mov
or
insb
ret
ljmp
repnz
sarb
pop
imul
mov
mov
mov
cmp
sahf
add
mov
movsb
cmc
add
imul
and
inc
rcrb
call
movb
aaa
inc
rorl
mov
aam
sarl
mov
push
xchg
stos
jnp
in
std
sbb
aad
mov
mov
dec
add
add
or
dec
aad
cmp
in
dec
sub
mov
add
or
cmpsl
test
enter
out
rdmsr
ljmp
push
cmp
and
jl
mov
push
push
pop
out
pop
movsl
pop
push
or
sub
add
cmpl
jbe
add
in
xchg
inc
aam
lods
cld
fdivrp
xor
imul
pop
mov
or
dec
mov
test
loop
fadds
stos
push
shl
add
and
xchg
lock
cwtl
add
pop
lahf
adc
ret
dec
scas
push
mov
rorl
add
pop
lahf
sarb
mov
movsl
dec
fs
cmpsl
inc
add
outsb
ds
sbb
cmp
xchg
and
aaa
xor
dec
std
dec
mov
addr16
mov
dec
add
outsb
movsb
dec
cmp
or
xchg
inc
adc
mov
or
out
jg
or
push
xchg
push
add
xchg
dec
xor
add
frstor
int3
paddsb
sahf
add
icebp
jl
sbb
inc
dec
and
lods
push
inc
sub
add
and
mov
mov
push
cmp
add
movsb
xchg
adc
bound
or
add
mov
mov
adc
fidivrl
xchg
loope
mov
sub
inc
cs
int3
pusha
add
lds
add
dec
pop
jle
cmp
mov
fdivrs
imul
dec
add
nop
pop
mov
inc
mov
xor
and
test
fs
faddl
inc
and
mov
add
clc
cld
push
jl
or
dec
inc
lret
jnp
sarb
jae
jp
add
or
add
pop
adc
pop
outsl
movsb
jecxz
fcomp
push
bound
test
mov
mov
mov
and
add
xor
inc
mov
and
add
pop
iret
nop
pop
push
jecxz
cmpsb
xchg
dec
pusha
shlb
aaa
or
add
adc
stos
mov
fwait
add
dec
xchg
mov
xor
xor
bound
add
mov
dec
inc
jle
add
pop
ret
push
cltd
mov
push
sub
sbb
xor
sub
sub
adc
mov
push
adc
aas
dec
mov
lods
jno
sahf
or
ffree
cs
test
and
insb
mov
lods
movl
push
add
sub
repnz
and
out
pop
lods
add
push
stos
daa
cli
lcall
loopne
adc
mov
lret
mov
push
test
dec
outsl
add
orl
imul
jne
repnz
cmpsl
inc
outsl
shlb
adc
xchg
sbb
dec
xchg
inc
mov
pop
dec
or
jo
or
inc
pop
out
cmp
gs
cmpsl
mov
add
xor
inc
mov
add
sub
lods
add
sub
xchg
aad
xchg
add
into
cli
jecxz
or
lahf
jno
scas
test
roll
dec
and
bound
dec
shll
movsb
shr
xor
out
insb
pushf
mov
push
ret
add
mov
inc
add
mov
sbb
add
leave
jno
mov
fcmovnu
shlb
test
repnz
mov
sub
je
push
jnp
or
seta
bnd
jne
pushl
cltd
scas
std
mov
arpl
pop
add
clc
inc
fldcw
std
dec
pop
shll
int
xor
xchg
push
pop
popl
cld
add
outsb
dec
add
push
push
jmp
cmp
jno
sub
jo
fcoms
in
nopl
loop
or
add
popf
xor
pop
xor
mov
add
mov
pop
lea
sub
dec
ljmp
add
or
add
xchg
pop
test
pop
lods
add
mov
insb
ja
mov
adc
daa
xchg
push
add
jecxz
int
add
or
mov
cmp
adc
mov
movsl
add
call
lock
add
lret
inc
sbb
cwtl
dec
mov
stos
add
lea
mov
pop
icebp
inc
test
cli
xor
add
mov
dec
add
cwtl
jecxz
jge
rcll
push
xor
fst
cmp
or
xchg
add
popf
out
jp
jnp
cmp
add
sti
mov
add
popf
bound
add
aam
push
roll
adcb
dec
mov
bound
push
fwait
add
std
mov
call
adc
inc
loop
push
cmp
dec
scas
or
add
lcall
aad
add
roll
push
sub
push
push
pop
xor
adc
cmp
pcmpeqb
xor
jno
sub
movsb
inc
and
orl
int
pop
add
fidivl
dec
mov
adc
push
pop
loop,pt
lret
jp
add
push
sbb
xchg
sbb
sbb
sti
push
mov
add
inc
jp
hlt
adc
mov
cmp
and
inc
jecxz
stos
imull
pusha
adc
add
and
inc
add
fidivl
jge
outsl
pop
pop
mov
sbb
inc
or
and
inc
inc
inc
out
arpl
push
pop
lret
add
cmp
jl
mov
add
cmpsb
sub
leave
inc
jbe
addr16
fistl
iret
xadd
es
aam
sbb
shll
add
enter
xor
std
xchg
pop
mov
push
jns
ja
add
jp
inc
inc
adc
lods
cmc
add
rcrb
sbb
mov
mov
in
insl
cmp
add
add
cmpsb
daa
xor
adc
add
pop
mov
inc
or
int
mov
xchg
bound
popa
and
pop
xlat
add
stos
push
mov
jo
mov
add
es
xor
leave
xchg
aad
filds
out
lds
xor
sbb
sbb
sub
push
mov
lods
mov
scas
pop
add
mov
add
jne
ret
repz
pop
add
pop
test
xor
sub
aaa
shrl
stc
sar
add
call
cmp
sub
shll
insl
lcall
clc
and
orb
ret
fcmovbe
sbb
scas
es
xor
sbb
add
ss
cmp
push
inc
cmc
mov
sub
jne
mov
add
push
jo
int3
mov
cmpsl
push
push
xchg
sbb
outsl
out
adc
std
dec
js
inc
mov
pushf
fstps
jbe
pop
mov
sbb
jl
xchg
xchg
nop
icebp
and
jmp
jg
repz
push
in
push
jp
clc
lahf
xor
jae
xchg
ret
add
push
iret
repz
sub
popf
aaa
mov
repz
dec
push
dec
lcall
mov
sub
dec
inc
sub
daa
cmp
fmull
xlat
iret
divl
lahf
or
inc
inc
cmp
jg
ffree
add
and
dec
mov
pop
pop
inc
ss
and
xor
add
cmp
nop
testb
mov
xchg
jle
cmpsl
insb
add
or
sti
add
loope
movsb
rcpps
sbb
fldl
mov
mov
xchg
mov
addr16
fidivrl
mov
fdivrp
lock
lahf
inc
mov
dec
mov
adc
das
add
and
push
add
shrl
jns
cltd
pop
xor
xlat
or
clc
push
sub
add
ficomps
push
stc
loopne
test
mov
xor
adcb
sbb
leave
sbb
dec
fisttps
data16
out
in
push
shlb
and
iret
pop
add
mov
dec
mov
popa
ficoms
in
repnz
jp
mov
jae
or
add
adc
insl
push
hlt
and
add
dec
stos
push
lock
jne
or
add
push
cmpsb
cmp
cltd
jmp
fisttps
sub
es
push
in
xchg
or
pop
popa
testb
inc
adc
sub
pop
push
mov
jo
loop
roll
outsl
push
cld
lret
xchg
adcl
push
adc
rorl
inc
dec
rorl
sub
test
inc
std
adc
imul
pop
add
push
leave
mov
add
sub
mov
add
sub
addb
jecxz
pusha
and
pop
mov
add
lret
aaa
daa
mov
jbe
pop
inc
jne
push
mov
sub
addr16
mov
add
dec
mulb
pop
jle
push
sub
pop
loop
rcrl
je
nop
out
and
add
clc
dec
in
add
ljmp
mov
test
lahf
xchg
popf
rcl
addr16
sub
fistps
mov
call
and
out
data16
or
aaa
fcoml
xchg
add
lahf
xchg
in
sahf
xchg
and
ja
clc
pusha
add
cld
rolb
mov
xor
or
lock
lds
adc
arpl
test
xchg
dec
mov
or
cltd
mov
cli
push
ret
cmp
test
inc
shll
and
add
and
push
test
fdiv
push
dec
pop
push
outsb
push
in
sbb
cmp
push
ret
sub
outsl
lcall
mov
out
adc
pop
add
add
mov
sbb
in
addb
cmpsb
inc
fdivrs
roll
adc
jmp
cmp
mov
add
insb
xor
mov
cmpb
roll
lods
movsl
lret
cmp
add
add
scas
inc
add
push
add
dec
aaa
pop
imul
inc
out
mov
add
dec
add
xchg
cmpsl
cmp
add
shll
adc
subb
mov
cltd
mov
adc
inc
dec
jmp
mov
add
or
mov
adc
dec
jnp
inc
adc
outsb
or
ja
insl
cmpl
mull
loope
add
test
xchg
orl
cmp
std
mov
add
jo
in
add
pop
inc
cld
sar
lea
sub
add
ret
arpl
mov
mov
mov
xor
sub
add
cmp
popa
add
xchg
add
enter
sbb
fnstsw
adc
fistpl
push
cltd
sahf
xor
inc
int
push
push
add
fdivrl
es
jg
xorb
cmp
xchg
bound
dec
shlb
cmpsl
xchg
mov
flds
shll
enter
cltd
add
stos
jno
add
add
jae
js
aaa
add
imul
xchg
movsb
cmp
mov
lock
mov
cmp
mov
jg
inc
xchg
jecxz
push
setle
cmp
clc
aas
sti
hlt
xchg
test
movsb
rcr
xchg
sbb
cmpsb
movl
jg
mov
add
add
stos
jle
jecxz
add
dec
sub
adc
clc
or
rolb
cmp
orb
add
xor
lods
add
test
inc
add
lods
cmc
loop
fistps
mov
add
lret
test
shrl
or
adc
jb
sar
ja
add
add
dec
dec
mov
loope
orl
add
fsub
cmp
jae
insb
mov
dec
or
cmp
inc
rclb
loop
out
push
cmp
ror
xchg
adc
sbb
dec
add
ret
add
lock
mov
add
sub
mov
or
rorb
popa
movb
sub
cmp
das
and
inc
out
in
add
pop
sbb
mov
cmp
mov
pop
add
stos
add
add
call
insl
mov
pop
outsl
pop
and
push
cs
lahf
negl
sub
out
loope
pop
add
inc
dec
icebp
shl
scas
jg
jns
adc
mov
sbb
fcmovne
inc
xchg
sub
xor
imul
pop
pop
lea
add
aam
cmp
sahf
jl
andb
or
xor
dec
in
add
sbb
mov
inc
sbb
ljmp
inc
imul
or
cmp
fildll
add
std
jbe
sub
add
mov
mov
or
add
jmp
bound
mov
jp
add
es
addl
xor
xor
dec
and
inc
jge
nop
imul
add
xchg
pop
xor
sarl
test
out
add
jg
into
inc
sbb
in
pushf
inc
sbb
cmp
adc
mov
xchg
pop
in
aas
or
xor
shlb
and
cmc
cmpsl
shlb
sub
mov
or
subl
sub
mov
add
out
push
add
jns
arpl
movl
adc
add
jle
mov
adc
test
js
pop
add
ljmp
mov
movl
insl
cltd
add
xor
mov
ret
add
dec
pop
add
shl
int3
outsl
sub
jge
mov
ud2
jle
mov
rcrb
mov
inc
cmp
dec
add
dec
push
push
js
aad
arpl
jge
mov
cmp
add
cld
adc
add
mov
mov
pop
hlt
xor
lds
pop
clc
ljmp
mov
test
mov
jns
data16
ret
push
adc
jae
stos
cmp
mov
dec
rcrb
test
pop
and
insl
jno
mov
adc
fcmovbe
sbb
inc
push
hlt
mov
mov
sbb
ljmp
call
cmp
popa
pop
pop
adc
xor
in
out
mov
shrl
or
add
ss
mov
add
dec
sti
lods
shl
add
jmp
sbb
add
pop
ficoms
mov
cld
sti
pop
daa
xor
and
mov
or
imul
dec
fistpll
and
or
mov
cmpsb
or
add
in
mov
scas
sub
or
lret
mov
gs
mov
faddl
dec
scas
addr16
cmp
cmp
lds
mov
int3
xor
movsl
lock
push
push
xchg
add
add
inc
pop
add
sbb
add
adc
pusha
add
mov
notb
call
dec
pop
movb
jge
xchg
stos
movl
inc
dec
std
sarb
jo
enter
sahf
lods
add
sub
lods
cmpsl
lcall
fimuls
in
xadd
loopne
mov
or
fcmovu
add
ja
mov
movzbl
add
ds
les
add
mov
add
daa
lea
jo
jae
dec
out
jo
or
ljmp
mov
lcall
add
bound
mov
das
mov
cmp
and
pop
jmp
movsl
nop
and
stos
ds
sub
mov
mov
sbb
cmp
jle
inc
jmp
loope
es
data16
shrb
cs
cld
or
mov
mov
ret
loope
es
push
xor
inc
add
fsubp
mov
paddd
rclb
add
out
xchg
xor
roll
xorb
add
fstpl
mulb
xchg
sti
dec
adc
add
or
test
push
sbb
push
xor
and
cmp
daa
mov
rcll
add
in
add
xor
add
xor
sub
mov
add
cwtl
testb
xor
lods
push
add
outsb
mov
test
pusha
add
sub
cli
jl
xor
add
aas
mov
ja
add
adc
stos
jge
pop
add
pusha
sbb
add
xchg
push
test
inc
in
fs
or
sbb
add
sub
ror
out
jae
or
xor
roll
negl
mov
pop
mov
pop
sub
mov
mul
shlb
dec
cs
fmuls
push
movsb
adc
add
mov
and
jp
scas
pop
cmp
test
inc
out
add
push
lea
divb
outsl
inc
cmp
aas
mov
addb
stc
sbb
in
out
pop
out
xchg
add
inc
stos
mov
fmull
js
push
les
and
stos
lcall
jne
mov
jmp
fdivrl
cmp
push
adc
fstpt
fldl
mov
sbbl
in
dec
cmpsl
mov
xor
inc
fbld
jecxz
add
fs
repz
push
add
push
inc
fmuls
push
lea
adcl
insb
gs
test
adc
sbb
cmpsb
pop
mov
mov
outsl
jmp
or
inc
dec
out
and
sarb
add
cmp
add
sub
add
push
outsl
cmp
int3
add
fdivs
pop
cmp
movsb
jo
jmp
mov
jle
repz
sbbl
in
xchg
mov
or
das
int3
and
xchg
adc
inc
bound
adc
insb
les
pop
popa
push
dec
inc
scas
xchg
mov
ds
add
leave
andb
xor
mov
lods
mov
notb
jmp
notl
movq
sbb
mov
push
xchg
pop
or
call
sbb
dec
cld
mov
add
outsb
mov
xor
arpl
inc
vmread
sti
jo
imul
xor
ret
jmp
sarl
pop
adc
mov
and
fdivl
insl
cmp
xchg
shlb
push
xchg
popa
cltd
cmp
sbb
scas
lock
add
jmp
cmp
sub
add
sbb
data16
inc
ja
jnp
xchg
push
xor
out
pop
add
fildll
mov
sub
bound
jmp
sub
mov
addl
mov
lret
adcl
and
jnp
push
addr16
sub
mov
sbb
add
push
incb
sbbl
push
sub
xchg
dec
cmp
add
in
ja
xor
das
ret
scas
bound
add
xor
sbb
and
aaa
popl
loop
jp
dec
insb
adc
rolb
sub
xor
ja
into
mov
dec
jns
ret
pusha
div
int
loop
adc
xor
in
fsubrs
lcall
cwtl
add
fwait
xchg
xor
pop
xchg
roll
or
and
add
jmp
inc
xchg
sub
imul
int
or
mov
imul
add
lcall
mov
bsr
pusha
rcrb
jne
add
jle
insb
and
add
clc
test
dec
dec
jbe
ficompl
inc
add
mov
sbb
push
dec
in
pminsw
rorb
pop
std
add
mov
das
cmpsl
in
jno
xchg
add
mov
sar
or
cmpsb
mov
sub
mov
into
rcll
aad
cmp
sub
add
mov
gs
mov
fstpl
mov
add
inc
mov
or
adc
mov
add
or
scas
fisubrl
out
push
lret
pusha
fucomp
jle
out
push
xchg
jo
sbb
movsb
lods
xor
mov
outsb
dec
cmp
sub
adc
jge
dec
rorb
scas
xchg
scas
jno
inc
movsl
jecxz
push
daa
sti
repz
add
pop
out
xor
call
faddl
movsb
jns
in
aam
lret
inc
jle
sub
std
mov
inc
jge
add
cmpsl
push
pop
push
or
enter
dec
add
adc
movsl
movb
or
aam
outsb
jno
add
mov
lea
add
imul
cmpsb
pop
icebp
hlt
bound
add
outsb
and
xchg
fdivs
xor
mov
movsb
mov
lahf
pop
or
xchg
int3
cmp
add
aaa
stc
jne
hlt
adc
jnp
mov
add
fst
mov
push
adc
dec
imul
movsl
or
add
dec
fprem1
inc
stos
fistl
xor
testb
sbb
jnp
add
adc
lds
fwait
pop
outsl
add
mov
insb
lcall
or
lods
loop
jmp
mov
inc
dec
jp
arpl
xchg
mov
cld
rolb
xchg
and
add
fcoms
out
sub
add
in
fwait
add
jae
xchg
fdivl
incl
call
xor
negb
jo
es
shlb
fmull
dec
jge
mov
adc
add
xlat
fwait
sbb
add
jle
int3
fldl
add
inc
sbb
or
pop
jb
add
pushf
sbb
adc
pop
adc
sub
imul
movsl
cmp
ffreep
mov
sub
outsb
arpl
ret
sahf
fstpl
shlb
ja
or
int3
cmp
xchg
inc
mov
add
push
add
andl
push
sub
out
es
push
mov
and
sbb
addb
xor
mov
lods
mov
fwait
add
mov
scas
stos
xor
jecxz
int
pop
ljmp
lods
fimuls
add
mov
imul
std
push
sti
inc
in
or
jl
mov
sbb
add
mov
push
mov
scas
repz
pop
adc
sub
xor
sbb
add
ret
nop
mov
loope
cld
xor
mov
dec
addl
add
pop
cltd
xlat
jb
add
pop
dec
mov
add
loopne
xor
push
add
std
pop
push
pushf
rolb
dec
add
mov
pop
add
mov
mov
pop
fs
and
mov
mov
and
imul
jns
arpl
jb
in
cmp
sub
shl
add
insb
aam
shrb
adc
mov
inc
dec
dec
in
fldl
jle
adc
subl
xchg
lea
ja
mov
mov
cmp
pop
out
push
aas
sbb
jge
sub
clc
clc
cmpsb
xor
dec
mov
add
outsl
ss
jb
push
shll
pop
aam
jbe
xor
mov
mov
add
leave
add
dec
fstpt
dec
pop
add
xchg
out
and
jb
aaa
jmp
imul
fiaddl
popf
or
xlat
rcl
sbb
mov
push
add
je
dec
pop
xchg
push
add
cld
cmp
addl
pop
mov
subb
pop
add
insl
loopne
repz
mov
inc
cwtl
and
imul
dec
mov
ss
mov
adc
lret
add
mov
aam
add
pop
dec
pop
and
xchg
add
mov
fldl
jo
ret
mov
mov
rclb
out
add
out
in
clc
mov
cmp
shlb
xor
add
daa
rol
pop
aaa
in
or
jnp
pop
insl
pushf
pop
push
push
push
clc
inc
js
test
popf
pusha
add
cmp
into
add
push
lret
adc
jb
int
push
shlb
cmp
xor
add
inc
sbb
mov
mov
add
call
movl
xchg
mov
ss
scas
or
popl
push
fiaddl
daa
mov
hlt
mov
lret
cmpb
push
or
mov
xor
enter
dec
inc
add
aaa
mov
sbb
dec
jl
mov
pop
cmp
ss
cltd
and
inc
mov
aam
inc
addr16
stos
pop
sbb
mov
jle
stc
scas
pop
sbbl
cld
out
paddb
leave
add
sub
idiv
add
in
add
push
push
xchg
aad
out
mov
cmpsl
cs
and
sbb
push
and
or
adc
rorb
jae
icebp
add
pop
mov
mov
mov
xchg
dec
fcmovnbe
scas
add
sar
lahf
call
pushf
imul
add
movsl
xchg
dec
xor
in
adc
repnz
jp
add
pop
cmp
mov
into
push
ffree
shrb
mov
jb
push
in
dec
movsb
xchg
in
add
xchg
push
and
jae
add
sbb
push
pushf
out
cld
cmp
add
fidivrs
in
add
stos
jae
mov
add
rol
push
notb
or
add
pop
xor
lahf
lea
mov
mov
stos
add
ljmp
pop
fldcw
add
xchg
mov
push
adc
iret
cmc
imul
jne
cs
push
add
shl
xor
mov
dec
sbbl
dec
test
pop
xchg
lcall
or
add
jmp
fistpl
test
mov
xchg
call
lods
add
fistps
divb
out
dec
movsl
or
mov
jbe
aam
mov
add
mov
sahf
dec
stc
xchg
jns
ds
xor
fidivrl
dec
aad
jg
pop
in
bnd
jle
push
jmp
sub
fucom
xor
mov
lret
xor
es
sti
push
jae
add
addr16
js
jl
movsl
add
mov
in
rol
shr
sarl
adc
and
add
fcompl
daa
xchg
pop
ret
mov
aad
dec
add
cltd
push
scas
mov
add
mov
ffreep
pop
inc
sub
mov
mov
dec
xorb
jmp
shrl
mull
je
gs
and
dec
and
push
cli
fbld
jg
mov
mov
xor
inc
fcoml
add
filds
clc
ljmp
add
hlt
and
and
insl
xlat
cld
shlb
jnp
cwtl
pop
and
cmp
dec
jmp
or
mov
fdivrs
jg
ret
add
shll
dec
sub
and
mov
sbbl
call
mov
jle
jg
test
sub
push
rorb
repz
jp
pop
xor
jnp
mov
leave
lods
xor
push
add
aaa
xchg
jne
rolb
int3
repnz
cmpsl
cli
push
fiadds
popf
xor
mov
lcall
add
mov
sbb
add
insl
addr16
xchg
scas
imul
xchg
lret
sbb
dec
xchg
add
icebp
mov
cld
ret
inc
dec
mov
test
add
or
popf
adc
inc
push
test
lahf
in
add
jns
jp
cmp
push
punpcklwd
add
jg
sahf
pop
mov
add
sti
jnp
stos
imul
xor
cld
es
pop
cmp
sbbl
adc
lret
and
and
xor
mov
in
rcr
cmp
arpl
jl
test
ret
ret
xchg
cmp
xor
imul
dec
jns
bound
es
cltd
sbb
mov
mov
out
movsl
xor
xchg
mov
loopne
add
test
bound
cmp
hlt
lods
add
or
stos
mov
add
mov
out
movsb
add
sub
in
inc
cli
icebp
xor
jle
std
jnp
or
cmp
in
inc
inc
test
cmp
dec
jb
rcl
add
je
mov
add
inc
sub
sbb
add
ja
fsubs
add
add
jae
cmp
xchg
psubw
add
icebp
out
leave
add
pusha
jne
aam
cmp
push
adc
lds
ljmp
jle
adc
push
rcrl
iret
jecxz
test
pop
inc
mov
and
xor
mov
or
cltd
fnstenv
dec
cs
mov
jmp
pushf
or
lahf
add
hlt
aas
outsl
cmp
pop
push
inc
negb
sbb
xor
inc
es
bound
push
add
rorb
push
add
sub
lret
push
sti
xchg
sahf
and
jle
push
gs
int
fwait
jmp
dec
aam
push
jb
clc
sub
scas
sbb
faddl
jns
add
pop
mov
xor
adc
std
fldl
sbb
cmc
aam
lods
add
decb
pushf
add
add
and
pop
testb
lock
pop
xchg
mov
loop
ja
shll
cld
mov
pop
mov
loopne
fwait
add
add
add
cmp
sub
shrb
and
out
ljmp
shll
dec
and
rcll
les
outsb
call
mov
aaa
cmp
push
mov
fnsave
inc
jae
push
add
shr
adc
inc
xor
leave
lea
jns
mov
cld
cmp
test
ret
or
or
mov
lret
mov
test
insl
outsb
fs
and
pop
shrl
jge
xor
ja
add
out
mov
xor
jle
mov
add
pop
js
enter
cmpb
lea
add
xchg
scas
pop
dec
or
add
outsb
xchg
push
popa
and
sub
ret
jno
repnz
inc
push
cmp
out
cli
stos
adc
add
xor
add
pop
mov
mov
inc
repz
call
jge
popl
push
cmp
sub
sahf
and
outsb
mov
add
iret
or
pop
jl
in
jmp
leave
popl
inc
aaa
cs
or
xor
adc
add
xchg
xor
aam
fimuls
ss
mov
rcrl
rorl
xlat
cli
pop
loopne
lcall
xor
add
dec
in
arpl
add
pushf
sti
mov
scas
test
cmp
or
xor
insl
sub
jae
lock
and
mov
xchg
test
inc
push
cwtl
cmp
jne
adc
popf
jp
sbb
add
mov
insl
sub
mov
pusha
xor
popf
in
cmp
cmpsb
out
movsl
repz
add
es
pop
add
mov
addl
jo
mulb
add
out
add
add
cwtl
insl
testb
fs
fcmovb
mov
mov
adc
pop
mov
adc
scas
iret
cmp
add
sub
enter
push
xor
out
insl
add
int3
loop
mov
jmp
mov
mov
add
arpl
cmp
add
mov
add
test
mov
adc
push
mov
cs
into
pop
icebp
sub
pop
xlat
inc
loopne
stc
inc
jg
std
stos
mov
sbb
lods
mov
cmp
loope
cmc
add
out
fnstenv
jg
pop
loopne
pop
dec
in
jnp
lds
xchg
jns
leave
push
iret
fisttpll
fsubrp
add
fcomps
add
xchg
insb
jne
cmp
shrl
arpl
lea
scas
andl
and
push
sbb
mov
or
xchg
sahf
jae
fs
and
mov
jb
sbb
inc
nop
push
rorl
subl
clc
push
xor
pop
es
adc
cmpsb
mov
lock
and
jge
or
jnp
xor
add
loopne
cmp
lods
iret
mov
mov
nop
into
or
add
repnz
pop
sbb
xchg
jmp
push
push
ss
roll
fldt
and
add
scas
js
orb
mov
xchg
mov
sbb
sbb
ret
std
push
dec
movsl
inc
out
mov
repnz
sub
jle
jnp
in
and
outsb
xor
addr16
sti
lock
sbb
sarl
into
add
mov
sbb
add
sub
xor
pushf
add
and
adc
push
sarb
mov
loopne
sbb
in
push
add
lcall
sub
sub
insl
add
outsb
ja
dec
pop
and
sub
in
fnsave
add
mov
push
pop
popa
pop
ret
sbbl
scas
cli
and
mov
test
push
js
adc
imul
push
pop
add
shl
mov
xchg
ret
xlat
add
lock
push
cwtl
in
add
outsl
add
add
mov
or
push
cmp
mov
or
add
ret
lret
repnz
sub
test
mov
mov
mov
sbb
mov
cmpsb
bswap
jns
imul
test
xor
jae
imul
mov
outsl
popa
pop
jbe
daa
add
mov
je
fwait
and
movsl
mov
int3
scas
sub
loopne
int
add
jecxz
outsl
movsb
add
test
xchg
mov
and
inc
adc
xchg
jmp
and
lea
add
inc
aad
add
pop
imul
stos
mov
add
dec
cli
dec
add
ret
and
movb
mov
adc
pop
sbb
cmp
jmp
das
shr
je
mov
shrl
inc
add
stc
dec
js
sahf
xor
cmp
jle
push
movsb
pop
xchg
adc
aam
xor
faddl
jge
sbb
fisttpll
add
fistl
fadds
or
imul
mov
sti
fstp
addb
sbb
mov
or
lods
aad
jmp
lcall
jo
cmp
les
xor
pop
cmp
sbb
xlat
ja
sbb
xor
xor
xor
dec
cmp
jge
add
aaa
cmpsb
pop
outsl
int3
jecxz
add
rorl
jno
dec
mov
out
inc
push
lea
imul
lahf
ffree
dec
jle
cmpsb
and
imul
inc
push
repnz
insb
jmp
leave
xor
pop
cli
lods
sbb
and
mov
pop
ret
addl
movsl
and
mov
lock
notb
sarl
sahf
sub
sbb
sbb
xlat
mov
push
cmp
stos
inc
pop
jae
inc
xchg
push
clc
sbb
add
xlat
mov
aaa
sbb
fsubrs
xchg
cmpb
std
add
aam
fwait
int3
cmp
xchg
xor
jne
shl
pop
pop
pop
cmp
adc
or
cmovbe
es
stc
adc
lret
mov
mov
std
cmpl
aas
xchg
jo
or
ja
ljmp
test
data16
pop
xchg
lret
push
sarb
fsubrp
cmpl
fnsave
leave
fistps
add
in
rep
ja
out
mov
lea
addr16
shl
clc
rorl
push
enter
add
jle,pt
mov
jg
fildl
xor
ja
pop
pop
test
jae
popf
ljmp
pop
pusha
imul
sub
mov
add
leave
jns
roll
dec
adc
inc
inc
xor
sbb
rcr
sbb
fiadds
add
aam
inc
adc
stc
mov
iret
jg
mov
js
mov
popf
rcrb
ljmp
add
push
lds
sub
fimull
inc
cmp
pop
push
lock
inc
add
pop
in
add
xor
mov
fs
stc
mov
mov
or
out
fcoms
std
in
mov
or
cmp
popa
add
add
push
arpl
movsl
les
sbb
pushf
fildll
add
push
in
add
add
adc
not
jnp
mov
dec
mov
add
and
rcrb
out
cmp
sar
fwait
mov
add
sub
pop
add
rol
add
pop
icebp
xor
fcomps
xchg
xor
add
test
shr
add
daa
arpl
cmp
push
or
and
loope
mov
pop
lcall
sub
bound
add
or
and
xor
dec
adcl
sbb
or
mov
out
cmp
test
das
in
push
adc
xchg
jno
rcrb
dec
mov
cmp
sub
in
adc
test
lret
repnz
sbb
nop
jns
xor
shrl
cmp
push
cmp
cmc
or
jbe
stc
adc
xor
pop
sarl
cwtl
int
inc
add
and
mov
in
add
in
xchg
pop
movsl
stos
add
pusha
adc
daa
outsl
jns
inc
rcll
mov
and
daa
jecxz
add
loope
xor
add
pop
fwait
adc
fldenv
icebp
bound
add
mov
lods
xor
in
push
adc
cld
arpl
rolb
pop
mov
clc
or
dec
dec
push
mov
add
ret
mov
add
inc
xadd
xor
mov
into
and
add
out
add
xchg
shll
or
and
add
mov
mov
push
sub
mov
cmp
pop
xchg
nop
xor
das
or
jecxz
xchg
lods
inc
add
mov
xorl
loope
pop
jp
add
add
movl
sbb
stos
jo
jl
add
inc
push
and
or
inc
add
leave
fiaddl
adc
and
lods
adc
add
lret
pop
scas
push
add
mov
cmp
adc
xchg
sub
movsb
add
or
xor
lcall
and
mov
or
add
lea
pop
mov
nopl
add
jne
ds
xchg
mov
mov
and
mov
mov
inc
lret
pushf
aas
add
add
adc
inc
aad
sub
arpl
add
inc
call
mov
icebp
dec
ret
mov
and
mov
push
add
gs
pop
fistpll
cmp
xchg
in
ret
jo
dec
push
shlb
push
push
inc
out
or
stos
test
cmc
jp
jbe
adc
lods
shlb
sub
inc
cld
sub
mov
dec
adc
es
mov
data16
sub
jmp
cmp
or
pusha
sbb
test
fbld
js
inc
stos
lock
mov
adc
inc
and
and
inc
xchg
xor
cmp
add
stos
bound
test
fs
adc
enter
outsb
inc
xor
das
fs
mov
popf
test
mov
adc
cmp
mov
adc
adc
cwtl
or
mov
add
and
popf
inc
cmp
adc
add
popa
add
pop
test
mov
mov
or
data16
mov
das
adc
lcall
sahf
or
xchg
pop
and
inc
cltd
adc
test
mov
cltd
or
inc
sbb
fs
mov
test
cmpb
scas
mov
sub
and
fs
mov
adc
add
aas
lahf
pusha
mov
fistpl
mov
stos
movsl
bound
adc
adc
cmp
xor
mov
sub
sbb
or
mov
adc
cmp
bound
adc
xchg
xor
scas
fs
sub
sub
movsb
and
test
or
mov
mov
mov
xor
xor
cmpsb
adc
push
mov
popl
inc
adc
pusha
mov
scas
mov
das
adc
sahf
xor
and
cmp
aas
scas
lods
adc
call
or
mov
inc
or
popf
adc
and
test
or
mov
pop
test
test
fs
mov
adc
and
test
fs
cmp
and
bound
test
or
pop
xorb
stos
adc
mov
sbb
test
or
sbb
adc
scas
bound
adc
sbb
bound
or
add
faddl
xor
xor
cmpsl
test
or
adc
adc
pusha
sub
fs
mov
or
adc
fs
xor
add
and
loopne
push
test
fs
mov
mov
mov
bound
andl
or
mov
test
or
adc
push
inc
orl
mov
adc
mov
adc
bound
xchg
adcl
mov
fimuls
dec
sahf
sbb
inc
xchg
adc
adc
lods
bound
test
pop
pop
xor
fs
and
and
test
leave
add
inc
bound
add
sbb
xchg
pop
adc
lods
je
sub
mov
add
bound
add
insb
out
inc
add
out
add
or
movsl
dec
add
inc
or
lea
int
push
mov
mov
bound
test
adc
adc
bound
xlat
mov
outsl
test
adc
cmpb
nop
rcrl
sbb
sbb
adc
scas
add
push
mov
mov
ret
dec
rcrb
test
add
iret
sbb
pop
push
fcmovnu
adc
or
xchg
test
repnz
sub
pop
pop
fld1
nop
cld
jp
lock
mov
int3
adc
rcrb
pop
sbb
sub
mov
lock
fcomps
fwait
repnz
pop
aaa
push
pop
popa
mov
pop
sbb
aam
loope
fsts
push
or
cmp
inc
pop
orl
aad
mov
rorl
pop
xor
cmp
pop
mov
cmpsb
rcll
dec
add
rorb
and
and
and
add
inc
push
add
daa
dec
xchg
pusha
inc
push
dec
sbb
or
inc
sbb
cltd
mov
or
dec
stc
hlt
std
jmp
lea
daa
pop
sahf
fistps
fmul
pop
mov
insl
jae
scas
shl
xor
mov
movsl
or
add
pusha
and
inc
or
pop
sub
inc
pop
dec
and
es
sbb
xor
mov
add
sbb
pushf
inc
mov
push
pusha
adc
insb
pop
pop
sub
insb
inc
push
pop
sub
outsb
push
mov
push
inc
int
dec
adcl
rorl
xor
or
xorb
scas
movl
cmp
fbld
mov
xor
inc
or
loopne
cmp
adc
xor
inc
pushf
inc
adc
imul
stos
and
add
add
dec
clc
lret
inc
pop
or
dec
mov
popl
adc
aam
sbb
inc
ja
inc
push
aad
mov
rorb
add
adc
mov
fcoms
adc
dec
adc
adc
inc
adc
jo
push
aam
lea
or
adc
insb
push
mov
cmc
stos
out
icebp
lret
jne
add
movsb
add
lods
push
nop
rclb
add
rcll
push
xchg
rclb
add
rcll
xchg
aam
xlat
push
sub
push
add
pop
cltd
flds
sbb
ficompl
pop
fildl
sbb
pushf
fcompl
push
pop
sahf
or
sub
dec
int
dec
lret
push
enter
inc
adc
mov
push
inc
addb
jmp
cmpsb
mov
pop
dec
or
and
add
add
cmpb
push
xor
pusha
sbb
dec
or
addr16
dec
add
stos
mov
push
sub
and
test
cmp
inc
mov
and
les
xor
cmp
jecxz
adc
pop
add
push
push
jge
dec
push
mov
xor
mov
adcb
popa
push
and
inc
and
add
and
cmp
lock
xor
inc
pop
xor
outsb
add
and
daa
push
cltd
inc
iret
inc
sbb
inc
adc
mov
inc
mov
sbb
sub
cmp
push
xchg
das
push
mov
stos
inc
mov
mov
mov
movsl
test
push
push
push
cmp
daa
adc
and
inc
or
push
adc
fs
mov
sarb
and
rcrl
or
mov
inc
outsl
les
fs
adc
inc
cmpb
mov
inc
movups
subb
inc
mov
orb
loopne
xor
sub
inc
and
mov
enter
inc
adc
in
mov
and
bound
int
add
mov
add
add
imul
and
cwtl
lods
or
or
adc
add
sub
test
imul
dec
jecxz
dec
les
subb
push
jbe
test
or
lret
add
or
add
addl
mov
mov
cmp
sbb
pop
or
sub
dec
cmp
xor
xor
call
and
mov
lods
pop
dec
sbb
divl
sbb
xor
cmp
stos
and
add
or
scas
cmp
and
add
sub
add
lds
sub
shll
out
sbb
xchg
out
ds
das
clc
sub
dec
orb
les
shlb
and
cmp
das
scas
mov
arpl
xor
adc
outsl
inc
jmp
shrb
mov
insb
icebp
sub
cmp
push
mov
sub
or
xor
lcall
xor
push
sarl
or
call
ret
and
mov
lds
jo
add
xor
les
and
in
jle
fmull
js
lock
xor
dec
and
sarb
and
sub
jg
sbb
jmp
cmpsl
cmp
or
sub
dec
and
cmp
xor
push
and
xor
push
inc
or
aam
push
enter
repnz
add
jae
or
sbb
jl
bound
in
push
enter
and
jl
inc
add
push
add
je
lds
hlt
sahf
push
add
insl
mov
add
inc
inc
sbb
xor
xor
insb
sbb
dec
push
cmp
ss
js
xor
mov
movl
dec
jne
jne
add
ss
dec
and
jle
ret
and
testl
leave
adc
addr16
xor
pop
sub
cmp
inc
inc
push
and
aaa
pop
cmp
loope
adc
stc
add
mov
jbe
add
pop
cwtl
adc
inc
jmp
ja
aas
dec
and
cmp
imull
cmp
cmp
mov
cmp
add
pop
lret
or
cmp
sbb
cmp
or
jl
sbb
pop
dec
adc
addr16
and
add
adc
add
lea
xchg
add
sub
out
repnz
out
inc
sub
pop
cmp
dec
lods
push
adc
sub
add
out
clc
push
mov
jg
and
adc
add
xchg
jg
test
or
sbb
mov
das
movl
loope
adc
xchg
or
into
push
mov
jmp
xchg
sub
xor
push
xor
add
call
scas
and
loope
sub
and
xor
inc
imul
repnz
iret
add
rcl
sub
inc
insb
adc
movl
add
xchg
into
sbb
adc
adc
in
jl
mov
subb
push
xor
sub
popf
xchg
xor
cmp
cmp
sbb
xchg
and
out
popl
rcll
mov
or
out
and
push
stc
das
ds
or
pop
add
inc
mov
sahf
iret
xor
adc
cmp
mov
loop
add
sbb
inc
cmp
test
add
mov
jno
int3
mov
imul
mov
and
add
ds
jno
ja
sbb
mov
sub
jp
cmc
rorb
add
or
and
loop
and
cmp
adc
adc
test
push
shll
or
adc
inc
and
dec
popa
and
popf
fwait
or
inc
push
and
xor
adc
inc
xchg
mov
pop
iret
dec
xchg
jbe
fmuls
int3
bound
add
add
fcoml
dec
loopne
add
inc
lcall
inc
mov
xchg
push
in
or
shrl
sub
adc
and
and
add
and
cmp
ds
mov
or
and
adc
inc
or
in
in
bound
in
add
mov
or
push
loop
repnz
jno
test
adc
sub
in
adc
sub
cmp
andb
sub
xor
xor
add
xchg
cmp
adc
cmp
push
in
sahf
lret
xor
sub
lahf
sbb
dec
in
inc
jbe
imul
outsl
sbb
jno
xor
cmp
cmp
rolb
add
mov
push
mov
add
add
adc
add
rolb
dec
addl
push
test
add
inc
sbb
and
es
add
inc
popa
and
das
aaa
enter
insl
out
add
xor
and
das
sbb
rcrb
xor
lock
cmp
push
add
subl
sub
test
popa
ss
and
inc
xorl
jecxz
test
and
adc
sbb
lret
sbb
adc
add
jle
inc
or
add
add
les
cmp
or
sbb
inc
gs
sbb
or
flds
cwtl
and
adc
orb
push
jbe
test
add
xor
in
sbb
or
pop
or
clc
cmp
jb
test
sbb
jb
xor
add
or
sbb
jle
divl
add
mov
cmp
sub
inc
xchg
add
xor
adc
add
add
or
jb
inc
or
orb
adc
inc
sbb
inc
xor
add
add
and
pop
adc
cmp
insl
cmp
dec
push
movsb
inc
push
test
jl
adc
xor
enter
xor
dec
adc
add
arpl
pop
sbbb
add
outsb
rorl
jmp
sbb
call
sub
or
add
or
or
sub
testb
es
or
orb
cmp
mov
push
mov
stc
or
sbb
mov
or
xchg
adc
and
rolb
push
mov
sub
xchg
movsb
inc
movsl
loopne
add
add
sbb
cmp
xchg
sbb
add
outsl
sub
cmp
rcll
pop
or
ror
in
sub
nop
ror
inc
adc
rcrb
sbb
cmp
cmp
add
push
xor
cmp
adc
sarb
jae
es
add
adc
cmp
lret
rol
shll
shlb
xchg
dec
or
pop
add
pop
jp
and
rcr
iret
xor
sbb
xor
add
xchg
shr
xor
rcr
cmp
add
sbb
push
pop
adc
xchg
ds
or
shlb
shl
push
or
push
dec
add
add
add
daa
shrb
fs
sbb
enter
xor
dec
or
adc
adc
or
xchg
loop
lret
sarl
push
xor
nop
mov
bound
lahf
push
add
enter
dec
or
push
test
mov
pop
adc
adc
and
xchg
loop
pushf
sub
push
adc
jp
adc
push
xchg
loop
pushf
adc
sbb
mov
sbb
push
das
or
rclb
add
data16
push
and
cmpsb
data16
iret
inc
pop
icebp
pop
shll
xor
test
pushf
popa
push
mov
ret
xchg
aaa
mov
fcoms
ret
popf
pop
dec
shlb
hlt
outsb
fstpt
sarb
dec
xchg
wrmsr
addr16
jmp
jbe
and
mov
xor
adc
out
cmp
outsb
shl
or
mov
jo
xchg
ret
lods
fmul
sbb
fiadds
sahf
and
and
hlt
jp
cmp
shrb
les
dec
es
xor
push
sbb
lods
and
scas
roll
in
cmp
ds
push
xlat
sbb
add
push
in
xor
adc
push
fs
sbb
jg
hlt
or
loop
pushf
sub
pop
es
and
sbb
enter
scas
add
loope
or
jmp
add
sub
sahf
sub
push
jne
and
xor
je
ss
sub
mov
popa
push
sbb
dec
test
jl
rorb
inc
adc
or
sbb
mov
js
adc
jo
cs
mov
inc
cmpsl
sub
xchg
sub
cs
sub
mov
xor
and
sbb
xor
sub
and
push
or
mov
cmc
push
out
test
mov
add
ss
jbe
jle
mov
fs
jno
stc
cmc
add
and
xchg
or
jbe,pn
pop
lret
mov
test
stc
cmpsl
sbb
adc
sbb
and
cmp
dec
add
aaa
or
sbb
sbb
popa
pop
xor
jl
mov
and
adc
mov
les
mov
xchg
xorb
andb
movsb
cmp
mov
jg,pt
xor
leave
xchg
adc
adc
mov
push
subl
pop
add
sub
inc
dec
or
or
out
sbb
sub
xchg
adc
fs
mov
dec
lret
dec
inc
leave
sbb
sbb
movlps
lea
iret
subb
or
or
sbb
jmp
jg
jle
jl
js
jo
pusha
dec
inc
inc
mov
cmp
cmp
stos
sub
jno
add
aam
rolb
orl
fcompl
push
ret
push
sub
pop
push
pop
adc
ffreep
dec
test
sbb
push
add
into
scas
or
lock
sbb
push
xor
leave
int
cmp
or
lods
sbb
add
pop
out
test
and
sbb
sbb
pop
idivl
and
sti
pop
adc
insb
adc
mov
fs
psubw
sti
cwtl
xor
jl
or
shr
xor
jp
out
or
ret
ficomps
ljmp
add
or
add
rol
int3
cld
ret
repz
and
sub
sbb
adc
pop
loopne
in
inc
fsub
shr
fisttps
cmp
rorl
add
pop
aaa
enter
lret
add
imull
sbb
sub
sbb
pop
call
add
out
add
push
add
xor
inc
add
int
and
cs
and
adc
fsubp
add
in
fisttpll
cmp
or
cmp
test
stc
sbb
push
sub
sbb
jmp
xorb
mov
inc
add
jg
nop
lods
pushf
mov
pusha
push
insb
pop
arpl
push
outsl
pop
mov
mov
inc
je
add
ja
cwtl
movsb
xchg
stos
add
fs
imul
addr16
xorb
lea
inc
add
jge
xchg
scas
sahf
mov
bound
pop
popa
add
pop
mov
mov
inc
jbe
add
jne
lcall
xchg
push
push
imul
push
sbb
xor
pop
dec
leave
adc
add
insl
and
rcll
sub
lods
daa
or
lds
or
inc
fiadds
lock
adc
or
add
and
sarb
inc
scas
sbb
cmp
add
js
mov
push
lea
jno
scas
push
shl
insb
sub
sbb
add
imul
aaa
add
xchg
fistpl
jbe
aaa
pop
sbb
push
fcomps
pop
pop
pop
fwait
or
or
in
movsb
nop
mov
and
push
add
and
cmp
roll
or
dec
test
fs
insl
ret
dec
ljmp
xor
mov
xchg
pop
int3
sbb
xor
pop
sub
inc
mov
xchg
inc
cli
iret
sub
mov
rol
fnstsw
and
xchg
ds
cmp
pop
adc
mov
insb
leave
dec
and
or
shlb
flds
dec
and
xchg
xor
inc
lret
xor
fs
xor
data16
sbb
pop
and
and
rcrl
rcrl
test
push
js
adc
enter
adc
xor
adc
out
adcb
pop
sbb
pop
sbb
cmp
or
popa
mov
pop
les
jmp
data16
rorb
or
cmpsl
add
sbb
xor
fstl
imul
or
cmp
je
mov
or
mov
push
cwtl
cmp
sub
cwtl
mov
icebp
push
cmp
pop
pushf
in
adc
or
adcb
or
or
ret
and
push
inc
sbb
inc
pop
adc
adc
test
cmp
xchg
adc
mov
mov
mov
lds
fmull
andb
loope
out
and
lods
inc
into
xchg
and
das
enter
push
ret
pop
sbb
data16
inc
cmp
inc
adc
push
cmp
push
pusha
or
pusha
das
and
es
enter
dec
ds
cmp
dec
shr
mov
or
cmp
adc
lret
fcmovnu
pop
add
xlat
repnz
mov
lods
daa
ja
sub
sti
daa
addr16
or
std
dec
pop
shr
sbb
test
and
imul
inc
xchg
mov
js
and
xchg
test
stc
inc
test
icebp
mov
or
inc
or
push
sub
xchg
push
cmpsb
sbb
and
aas
mov
jecxz
lock
adc
xchg
popf
aaa
adcl
rcrb
fcoml
cmpb
push
icebp
in
adc
or
movd
and
dec
add
xor
aad
sbb
or
adc
adc
enter
data16
sbb
fnstsw
dec
and
aas
loope
mov
dec
int
aad
and
gs
or
popa
mov
add
xor
mov
fs
push
xor
and
mov
cmp
aas
jo
lods
push
adc
xchg
push
jb
jbe
sbb
xor
sbb
andb
and
cmp
xor
movl
mov
lret
or
cmp
xor
arpl
fwait
xor
loop
jae
jo
xor
inc
cmp
push
cltd
push
rcrl
push
sbb
jnp
orb
and
rcl
nop
orl
push
or
iret
push
xchg
mov
sub
jmp
popf
push
sub
push
into
inc
push
lret
mov
push
cmpsl
cltd
aad
sbb
cmp
sbb
pop
aam
push
sbb
pop
adc
mov
pop
xchg
push
jle
fs
adc
fsubl
or
fsubrs
sbb
aam
push
xchg
int3
jl
pop
adc
fwait
pushf
sbb
adc
fsts
sub
mov
fs
inc
in
in
adc
out
mov
adc
xchg
sbb
addb
cmp
add
into
push
rolb
jl
daa
add
push
push
shll
push
mov
adc
mov
sbb
hlt
sub
pop
adc
cmp
scas
cmp
jns
add
mov
or
sbb
and
xchg
sub
xor
add
insb
dec
adc
or
dec
cwtl
scas
nop
sub
sbb
add
pop
sbb
or
pop
aam
pop
test
daa
adc
pop
pushf
or
shll
outsb
add
aad
push
fnstenv
or
xor
or
mov
and
add
and
sub
in
cmp
lds
call
subl
adc
int
das
sbb
push
mov
mov
mov
and
flds
test
adc
pusha
retw
and
das
jge
pusha
ret
mov
and
mov
lret
mov
or
cmp
xor
je
cmp
rcrb
dec
adc
push
cld
push
ds
outsb
xor
pushf
decb
push
cmp
aas
adc
push
movsb
jns
push
dec
in
pop
enter
dec
add
sbb
jmp
inc
adc
test
inc
push
and
scas
nop
add
adc
or
add
adc
fistps
and
das
sbb
inc
call
push
push
adc
mov
xor
jle
or
mov
sbb
cmp
js
add
or
push
push
fwait
xchg
sbb
dec
test
hlt
xor
imul
add
xor
adc
pop
popf
sbb
addr16
cmpsl
pop
adc
ds
xor
add
shlb
sub
popa
push
xchg
adc
ss
mov
lcall
bound
pop
cmp
push
stos
divl
and
push
es
icebp
xor
pop
adc
mov
mov
bound
mov
inc
jmp
add
push
insb
test
bound
or
sahf
nop
or
cmp
nop
push
inc
and
in
mulb
enter
dec
cmp
add
ret
sbb
out
sub
pop
popf
lahf
jmp
pusha
mov
add
enter
push
jbe
fisubs
pop
sbb
mov
or
movhps
xchg
outsb
or
sbb
fadds
xchg
inc
ja
xchg
rolb
xor
pop
outsb
xchg
xor
and
imul
ss
push
mov
add
addl
aas
adc
sbb
cmp
mov
adc
pop
out
or
jp
cmp
cmpsb
jp
cmp
repz
cmp
and
inc
mov
and
and
test
pushf
sbb
iret
cmp
dec
cmp
and
lock
add
inc
push
dec
js
dec
jmp
mov
push
or
aad
decl
or
lret
xchg
dec
push
add
and
outsb
push
sub
adc
fs
sub
in
cmc
lds
xchg
and
mov
push
in
nop
cs
add
adcl
xchg
xchg
push
sub
outsb
es
pop
sbb
in
push
sbb
loopne
das
sbb
rclb
add
and
popa
mov
add
sub
push
addl
lahf
addr16
push
sbb
fdivs
cmc
insb
int3
mov
pop
add
push
push
jp
inc
test
inc
jb
mov
aas
mov
popf
or
push
aaa
adc
pop
fsubs
add
adc
mov
inc
pop
cwtl
push
movsl
xor
movsl
sub
gs
pop
pop
mov
push
jb
lcall
rcrb
aaa
dec
jle
add
jg
pop
and
jb
or
sbb
xlat
cmp
xchg
rcll
nop
imul
or
or
add
out
adc
adc
inc
bound
pop
out
adc
mov
shl
mov
fisttpl
cltd
pop
pusha
fdivr
in
movsl
fst
data16
or
movsb
or
stos
pop
and
xchg
cmp
ret
aas
es
add
jl
icebp
addl
js
xor
inc
fcomp
pop
cmp
into
mov
leave
or
data16
adc
jle
sbb
or
push
push
mov
inc
pop
shl
lret
pop
in
ret
rcll
push
bound
dec
push
jae
cmpb
cs
jge
inc
push
pop
fnstcw
sbb
xchg
lret
sbb
or
fwait
pop
popa
push
sbb
aas
dec
outsb
xchg
test
xor
xchg
pop
cwtl
mov
and
je
mov
or
loopne
or
mov
dec
adc
daa
pop
repnz
andb
sbb
aad
sbb
movsb
sbbb
mov
pop
add
push
or
or
or
sbb
imul
jns
add
mov
add
adc
nop
sbb
push
adc
pop
aaa
rclb
or
jge
jnp
mov
in
sbb
stc
xor
in
pop
aam
mov
sbb
shrl
sub
xchg
push
push
mov
or
push
test
or
cwtl
sbb
ds
mov
mov
or
les
adc
mov
fcoms
cltd
test
pop
dec
xchg
xchg
cmp
insl
cmpb
or
dec
push
popf
pop
mov
ljmp
or
out
xchg
xchg
or
iret
sbb
xlat
xchg
movsl
push
scas
sbb
lods
rorl
and
mov
ds
sbb
in
adc
jecxz
dec
sbb
movsl
or
inc
mov
push
sub
or
jle
iret
insl
loope
je
mov
mov
aaa
mov
lods
xlat
sub
pop
movsb
inc
sbb
xchg
jg
fistl
or
inc
dec
iret
adc
mov
add
xchg
adc
push
mov
jg
pop
dec
or
sbb
mov
testl
out
into
dec
ror
mov
xor
mov
inc
jge
ljmp
aaa
addr16
pop
imul
or
push
adc
pop
dec
or
jne
cmp
sub
ja
int3
xchg
fidivl
xor
inc
cli
inc
adc
xor
pop
loopne
in
push
mov
mov
rcr
or
rclb
xchg
xchg
jmp
lret
xchg
aaa
push
cmp
add
orb
dec
test
ret
adc
pop
mov
add
or
fildll
popl
pop
fwait
inc
dec
test
sbb
cmp
adc
pop
jge
adc
sbb
sub
xor
cltd
sub
call
inc
out
arpl
jo
pop
and
outsb
fbstp
jecxz
pushf
cmp
mov
lds
jnp
add
fcoml
lods
or
push
adc
adc
cmp
in
adc
xchg
or
bound
add
mov
mov
mov
adc
push
jae
push
add
sbb
add
lret
scas
push
xchg
int3
xor
inc
xorl
testl
addb
bound
or
rcll
add
int
std
aad
arpl
jns
and
sbb
lods
rolb
push
mov
ret
xor
ret
push
sub
in
dec
clc
add
jg
std
outsb
aam
cwtl
mov
ficoms
add
jp
cmp
aad
push
imul
test
nop
leave
adc
and
adc
and
push
out
sbbl
and
shlb
rclb
pop
mov
in
test
sub
push
add
sbbl
xlat
ret
mov
sbb
cs
mov
inc
jle
inc
dec
enter
movsl
adc
add
adcl
roll
and
jne
shll
stos
adc
or
icebp
les
das
and
test
lods
or
jle
push
add
daa
test
clc
push
in
push
dec
dec
inc
pop
push
test
rcrb
sarl
adc
cs
mov
adc
xchg
push
and
dec
push
add
adc
sub
aam
add
es
adc
adcb
mov
add
cmp
out
dec
xor
pop
adc
and
xor
sub
adc
adc
pusha
adc
adc
and
inc
sub
fistl
and
and
adcl
addb
or
and
dec
adc
and
arpl
and
adcb
add
rcll
jno
into
sbb
xor
pop
rcll
ret
and
and
aaa
enter
adc
in
cmp
push
lods
adc
and
sub
and
adc
adc
adc
add
in
add
add
or
push
js
add
pusha
adc
adc
sub
xor
mov
add
jb
movl
push
adc
xor
call
jecxz
adc
sbb
dec
and
push
and
pop
jle,pn
or
xor
ss
pushw
jl
push
push
adc
sarb
jl
addl
adc
test
xor
sub
out
inc
cs
sub
pop
adc
adc
cmp
and
ret
jecxz
adc
push
add
add
ret
add
inc
push
push
sub
pop
push
into
push
dec
es
shrl
adc
add
cmp
ficoms
dec
or
adc
sub
aam
add
xchg
add
pop
adc
adc
add
icebp
xor
cmp
jnp
mov
inc
punpcklbw
push
push
add
adc
push
cmp
cltd
push
inc
pop
add
jp
dec
inc
das
sub
and
cwtl
push
sub
adc
push
sbb
test
or
add
push
fcmovne
sbb
adc
adc
xchg
sub
adc
ds
inc
add
int
jbe
or
add
adc
jnp
jno
pop
adc
adc
add
es
adc
adc
test
lods
cmp
cs
push
hlt
add
and
push
add
adc
pop
push
in
add
sbb
adc
push
jbe
inc
mov
push
pusha
adc
adc
mov
push
inc
punpcklbw
or
add
adc
or
out
inc
sbb
cwtl
push
dec
pop
and
sub
imul
leave
xor
cmp
inc
dec
cmp
dec
cmpb
bound
test
adc
add
lahf
xchg
test
and
add
sub
push
xor
adcb
add
adc
ds
add
xor
add
adc
enter
sbb
adc
sbb
add
es
sub
and
sub
sub
fcmovnbe
mov
add
sub
mov
arpl
add
mov
mov
adc
mov
and
in
push
add
push
decb
cs
push
and
push
fldl
sbb
imul
cmpsb
adc
sbb
pop
add
add
and
add
adc
adc
add
jl
ret
mov
add
adc
xchg
stc
or
push
addl
mov
xor
add
xchg
pop
push
enter
rorb
enter
xchg
pop
xchg
cmp
movb
or
and
mov
imul
adc
xorb
int3
add
mov
xor
xchg
rcrl
xor
mov
sub
cmp
ljmp
ds
adc
or
mov
xor
pop
push
xor
pop
and
aaa
add
mov
xor
mov
cs
pop
add
xchg
or
and
add
es
sbb
add
xor
xor
testb
mov
sarl
add
and
cmp
pop
mov
mov
bound
push
test
adc
xchg
pop
inc
bound
mov
or
inc
adc
mov
sub
mov
pusha
adc
ss
pop
xor
add
xor
and
and
xor
jno
push
or
arpl
or
js
and
pop
enter
inc
mov
aam
add
imul
or
sub
cmp
enter
xchg
dec
sbb
and
or
add
xor
fimull
dec
sbb
and
dec
and
sub
dec
sub
xor
dec
xor
fisttpl
sti
add
cmp
loope
adc
or
adc
sub
mov
push
dec
sbb
adc
and
adcb
add
add
xor
pop
mov
cmp
mov
enter
or
sbb
mov
or
xor
cmp
adc
mov
sbb
dec
sbb
cmpsl
sbb
pop
add
or
ret
enter
add
pop
sbb
or
xor
pop
es
or
adc
lahf
xchg
pop
push
mov
xor
or
or
mov
adc
push
xchg
addr16
adc
sbb
fwait
outsl
adc
add
es
mov
ret
or
adc
inc
mov
ret
test
cwtl
mov
test
test
or
inc
adc
lds
lcall
adc
or
mov
scas
xchg
test
or
or
daa
inc
fsub
add
or
mov
adc
push
adc
cmp
in
xchg
xchg
mov
xchg
xchg
xchg
xchg
icebp
xchg
icebp
or
icebp
lea
icebp
adc
icebp
xchg
and
sbb
icebp
fwait
and
pop
and
mov
icebp
test
icebp
mov
icebp
xor
icebp
mov
icebp
cmp
icebp
mov
pop
push
cmp
xchg
es
and
adc
or
xor
orb
data16
sbb
shlb
pop
adc
push
lcall
xchg
xchg
add
aaa
popa
and
pushf
add
or
xchg
mov
enter
pop
lods
push
jns
or
sub
stc
bound
adc
cmp
lods
add
add
add
xor
lods
adc
and
mov
mov
mov
mov
jl
dec
and
pop
adc
aaa
test
clc
add
or
or
or
fcmovne
adc
push
nop
and
add
sub
jecxz
cmpsb
dec
pop
add
pop
sub
or
and
adc
jb
xchg
xchg
sbb
insb
or
dec
sub
sub
popa
jno
mov
dec
pop
or
push
push
sbb
fiaddl
or
aas
sbb
lret
adc
ss
fsubrs
cmp
or
leave
adc
in
or
sbb
test
and
das
sub
xchg
and
lods
cmp
cmp
cld
mov
add
and
imul
or
or
and
pop
enter
inc
mov
loopne
es
mov
add
adc
xor
dec
repnz
int
cmp
add
add
lcall
fs
xchg
sbb
dec
js
lcall
es
mov
sub
adc
or
jl
dec
into
lret
pop
mov
test
data16
pop
xor
dec
xchg
xchg
cmp
mov
xor
fidivl
sub
adc
jl
xchg
bound
fs
das
adc
rcll
enter
mov
aam
add
or
bound
test
or
adc
lods
mov
jo
sub
ficompl
enter
add
cmp
adc
jb
push
and
push
lret
aaa
enter
or
add
cmp
adc
lcall
mov
and
and
sub
push
xor
stos
xor
push
sbb
xchg
mov
push
cmp
adc
flds
inc
or
jo
ret
xchg
or
adc
test
or
sub
mov
aad
xor
mov
test
inc
orb
imul
and
sbb
xor
mov
out
add
or
mov
cmpsl
cmp
push
dec
pop
xor
add
xchg
or
adc
es
xor
xor
mov
or
add
pop
adc
or
xchg
mov
adc
and
fs
cmpsl
stc
push
pop
cmp
and
fwait
popa
sbb
mov
inc
add
dec
sbbb
sbb
jmp
push
int3
cs
lea
adc
cwtl
sbb
cs
fistl
rcrl
xor
and
push
xor
adc
cmp
lret
dec
or
inc
push
or
outsl
or
cmp
int3
lret
mov
xorb
or
or
or
ss
mov
fildl
and
lds
and
xor
and
loop
sub
shll
lret
push
xor
mulb
or
fwait
push
ja
mov
xchg
or
fadds
je
sub
mov
bound
pop
sbb
pop
mov
jns
or
push
xchg
lea
mov
mov
jl
pop
or
insb
lea
js
pop
flds
popa
push
pop
out
and
dec
push
js
push
adc
adc
jbe
xchg
sbb
push
int
addb
sbb
inc
and
mov
mov
fisubs
push
mov
and
daa
loop
and
jmp
and
outsl
loop
or
xor
push
hlt
and
mov
pushw
jp
dec
cmp
or
pushf
and
inc
and
or
push
lret
push
push
jl
adc
jl
cwtl
jl
pop
jl
push
jl
loopne
push
xor
jl
int3
push
movsl
xor
push
fsubr
xor
mov
fdivs
fdivs
mov
clc
mov
test
or
or
add
inc
dec
mov
adc
dec
or
adc
dec
mov
adc
push
or
adc
fs
mov
adc
pop
or
and
in
cs
inc
adc
and
mov
xchg
enter
xchg
enter
xchg
enter
icebp
lds
icebp
dec
and
int3
and
push
and
shll
icebp
push
and
fisubl
icebp
pop
and
loope
icebp
gs
call
icebp
out
and
jae
icebp
mulb
icebp
jp
icebp
std
loop
or
or
xchg
enter
xchg
xchg
enter
flds
inc
mov
pop
loope
mov
pop
and
or
fsubrl
test
xor
push
dec
mulb
or
or
cmp
sbb
fildl
popf
mov
mov
mov
mov
std
and
fwait
dec
sub
adc
dec
xor
sbb
enter
enter
fucom
es
adc
outsb
push
fisttpll
cmovl
jecxz
inc
jecxz
inc
jecxz
inc
jecxz
inc
jecxz
inc
jecxz
inc
jecxz
inc
jecxz
inc
jecxz
inc
jecxz
inc
jecxz
inc
mov
mov
mov
adc
push
cmp
inc
sbbb
jecxz
inc
es
inc
sub
enter
mov
jecxz
inc
sub
sbb
mov
push
repz
lds
push
clc
add
aaa
aam
push
enter
lret
push
cmp
cmp
rcrb
and
add
and
push
out
movsl
xor
dec
push
add
enter
mov
rcrl
sbb
and
adc
arpl
int
sub
sub
sbb
push
ucomiss
push
mov
xor
pop
add
data16
rorb
cs
add
and
push
loope
cmp
or
rorb
xor
adc
aaa
mov
dec
push
inc
aas
cmp
mov
add
or
and
cmp
mov
xor
or
xor
sbb
fisttpl
xor
or
enter
push
enter
xor
or
enter
add
sub
sbb
jbe
xor
mov
and
lret
gs
loop
lret
push
xor
cmp
mov
or
mov
xchg
or
adc
test
or
jge,pn
add
outsl
adc
adc
nop
jae
cmp
mov
rcrb
outsb
sbb
cmp
push
push
or
mov
nop
mov
and
add
and
and
cmc
inc
push
push
and
inc
inc
adc
rcrb
xor
xor
or
add
es
enter
sbb
or
xchg
dec
pop
cmp
rclb
cmpsl
cmp
addl
xor
add
add
and
lret
in
inc
cmp
cmp
push
push
fmuls
mov
pop
stos
add
push
cs
rol
and
cwtl
orl
xor
xchg
pusha
push
adc
add
xchg
push
lods
xor
data16
add
sarl
or
mov
inc
add
or
aaa
std
add
int
sbb
dec
or
mov
mov
mov
xor
cmp
leave
icebp
add
or
or
das
adc
mov
sbb
cs
and
or
cmp
enter
xor
and
adc
shll
mov
and
mov
es
enter
enter
daa
add
sbb
push
xor
add
adc
or
sbb
push
add
mov
mov
sub
rcrb
lret
push
xor
or
push
pop
cmp
enter
and
add
add
mov
push
enter
rorb
enter
pop
andb
int
loop
xor
and
mov
inc
outsb
sub
xchg
sub
xor
lret
and
cmp
aad
pushf
rol
mov
jno
cwtl
sbb
stc
sub
xor
cmp
mov
xor
or
pop
cmp
gs
adc
lds
fs
cmp
sbb
jno
lret
or
mov
insb
xor
ret
rorb
xor
into
and
and
sarb
push
adc
stc
adc
sub
mov
es
pop
test
psrad
lret
jmp
insl
test
push
shlb
or
int3
push
divl
cs
jnp
jecxz
inc
and
fadd
xor
dec
xor
xor
int3
inc
jecxz
inc
jecxz
inc
jecxz
inc
jecxz
inc
jecxz
inc
jecxz
test
add
fstpt
inc
sub
add
push
cltd
xor
mov
or
mov
flds
enter
rorb
enter
loopne
and
or
loopne
push
add
int
sbb
add
mov
xchg
add
mov
pushf
inc
dec
adc
or
sub
sbb
enter
arpl
pushf
and
cs
add
mov
inc
adc
test
int
or
xor
fidivs
xor
pop
adc
xor
push
pushf
inc
or
dec
and
sbb
fcmovne
sub
imull
data16
leave
or
add
rclb
add
shll
add
adc
enter
or
xchg
mov
and
adc
icebp
xchg
bound
adc
and
and
mov
xor
cmpsl
xor
pop
add
sbb
enter
loope
push
push
aaa
rorb
adc
mov
sbb
bound
xor
add
mov
pop
orb
add
push
cs
push
xor
addb
sub
mov
int
cmp
lods
push
insl
or
add
xor
cmp
arpl
sbb
and
ret
enter
pop
repnz
mov
das
add
sub
sub
mov
adc
inc
enter
xor
inc
adc
or
add
xor
xor
cmp
mov
add
and
loope
xchg
jb
dec
sbb
mov
or
add
or
mov
rdtsc
add
dec
adc
or
dec
sbb
push
fisttpl
cmp
fisttpl
cmp
fisttpl
cmp
dec
sub
xor
add
adc
mov
add
fisttpl
or
xchg
lahf
les
xchg
push
xor
xchg
aad
or
or
or
aad
ds
popa
xor
jno
fsubrl
adc
inc
push
movsb
cs
sbb
xchg
and
sub
mov
pop
add
mov
push
jbe
inc
sbb
or
sub
push
cmp
xor
pop
xor
inc
add
bound
and
loope
es
xchg
fs
xor
ret
enter
push
aas
enter
xor
in
jne
adc
rolb
add
push
movsl
ss
sub
pop
cmp
cmp
push
dec
cmp
cs
cmp
push
dec
cmp
and
aam
cmp
push
xchg
fwait
lds
mov
sub
loope
and
or
adc
fs
pop
loope
enter
ret
enter
ret
enter
pop
shlb
xor
sub
aam
add
das
add
add
adcb
pop
cs
and
loop
inc
or
sub
imul
mov
cmp
adc
dec
adc
sbb
dec
sbb
sbb
fisttpl
and
jmp
out
mov
push
sbb
xchg
stc
add
daa
stos
ss
and
xor
cmp
fimull
cmp
sbb
fistpl
and
add
or
pop
or
addb
push
push
sbb
mov
or
xor
pop
sub
xor
pop
ss
xor
mov
ds
xor
xor
jmp
imul
xlat
dec
and
adc
fs
xor
jnp
add
enter
aaa
xchg
push
or
or
adc
loop
loop
adc
push
sbb
inc
jmp
pop
sbb
sub
das
adc
sub
sbb
fs
sbb
pop
and
enter
ret
enter
ret
enter
enter
or
cmp
lcall
test
fisubs
inc
xor
ds
pop
and
cwtl
fwait
dec
cmp
inc
mov
lods
pop
movsl
or
addb
adc
fs
sbb
and
fdivs
rcrl
dec
loopne
sbb
adc
push
mov
filds
sbb
pop
dec
call
enter
mov
mov
movsl
dec
imul
or
fs
push
mov
lds
ret
xor
fwait
add
mov
cmp
xor
add
jecxz
adc
roll
push
addl
in
add
or
and
rcr
and
add
push
lods
and
loope
lea
inc
pop
xchg
push
sbb
dec
repz
jb
setns
dec
pop
and
or
mov
movsl
adc
sub
bound
rorb
mov
mov
outsb
fwait
jg
scas
out
mov
fcmovnu
fisubrl
test
xchg
pop
jmp
cmp
not
xchg
xchg
or
loopne
inc
shl
fcoms
fcmovne
pop
fwait
hlt
mov
dec
mov
pop
dec
ficoml
scas
xchg
push
push
inc
clc
inc
push
pop
sbb
jnp
cmpsl
push
imul
push
push
std
inc
ffree
add
inc
jae
fwait
cltd
insl
mov
scas
movsl
mov
addr16
cmpsl
cmp
push
pop
xor
rclb
pushf
mov
sub
mov
add
add
insb
sbb
fwait
xor
out
sbb
and
push
lods
dec
and
idivb
loop
mov
mov
ljmp
pop
fwait
cmp
or
iret
in
adc
popf
jg
rcr
jbe
lahf
sub
int
mov
mov
or
push
mov
rcrb
sub
inc
mov
cmp
and
call
add
test
adc
stos
sbb
jmp
xor
xchg
sbb
or
xchg
xchg
sub
xchg
mov
addl
jecxz
mov
pop
addr16
xchg
movsb
push
pushf
inc
andb
fcomps
pop
hlt
push
pop
dec
adc
test
dec
stos
inc
push
outsl
push
fsts
mov
call
jge
and
push
mov
popf
sbb
xor
aam
popa
pop
pop
inc
mov
and
mov
jle
or
cmc
mov
mov
gs
fs
push
aaa
cltd
add
cld
mov
aam
sbb
or
xor
rclb
and
aaa
movsb
adc
xchg
xor
cld
orb
adcb
mov
inc
shlb
xchg
cld
or
jb
popf
inc
inc
test
loopne
inc
popl
pop
mov
in
mov
sbb
iret
fcompl
sbb
mov
lea
xor
sub
pusha
and
xor
add
sbb
adc
sar
dec
inc
orb
sbb
or
movsb
push
pop
sbb
pop
rclb
mov
bound
mov
push
dec
scas
inc
in
je
jns
test
out
jae
rolb
mov
movsb
pop
nop
or
pop
or
fs
fmul
push
jecxz
movsl
scas
jecxz
sbb
adc
or
or
or
cvtps2pd
cmp
pop
dec
aad
movsl
sahf
or
push
sbb
inc
xor
jo
adcb
sbbl
sahf
insb
enter
nop
sub
or
insl
cmp
xor
popa
test
rcrb
cwtl
enter
mov
xchg
fwait
inc
xor
fadds
mov
push
sub
inc
jg
or
or
sub
testl
mov
adc
stos
sahf
iret
mov
and
lret
pop
ficoml
add
movsb
loop
into
xchg
pop
jl
int3
mov
sub
cmp
xchg
add
and
push
jp
clc
mov
adc
add
dec
pop
dec
cltd
sbb
dec
jle
fwait
sbb
push
xchg
fidivrs
mov
cmp
or
pop
and
cmp
subl
xchg
mov
adc
and
shlb
cmp
movsb
add
xchg
lcall
and
jg
pop
push
mov
js
mov
inc
xchg
cli
sbb
adcb
pop
jns
cwtl
jecxz
pop
cmpsb
mov
stos
push
imul
pop
dec
mov
bound
imul
adc
dec
cmpsb
mov
ja
inc
jbe
movsb
and
popa
push
aaa
dec
lahf
andb
icebp
xchg
jae
sub
addb
inc
in
xor
adc
push
xchg
pop
or
jno
daa
mov
dec
mov
mov
mov
mov
xor
lret
push
mov
adc
aad
ret
sub
fnstcw
scas
push
and
and
cltd
fwait
sub
shll
xlat
adc
adc
or
pop
scas
sbb
cmp
push
dec
or
adc
fistps
xor
ret
or
repnz
loopne
sbb
mov
inc
xchg
add
and
inc
sub
pop
push
cltd
lock
shl
sbb
lret
xchg
sbb
adc
stos
mov
adc
xchg
or
add
pop
test
aam
and
lea
mov
loop
adc
push
push
cwtl
or
scas
inc
les
test
mov
cmp
cmp
arpl
je
imul
sub
mov
cmpsl
mov
fcoms
mov
sub
out
sub
mov
je
dec
inc
es
int3
adcl
inc
insl
fwait
adc
mov
xor
pop
push
sbb
es
repnz
sub
xlat
fstpt
pop
mov
shr
adc
movsl
movsb
push
mov
lods
mov
mov
or
rorb
adc
mov
xor
push
inc
add
aas
add
mov
leave
adc
mov
mov
dec
add
int
rsm
movl
sbb
jae
shll
or
fldt
aas
lods
jb
test
pop
cwtl
cmp
data16
and
and
dec
sub
aas
xchg
inc
mov
test
push
jb
inc
push
cmpsl
cmp
aam
sub
mov
int3
lods
enter
xor
dec
inc
add
mov
push
bound
fimuls
jp
inc
sbb
or
add
rcll
push
xchg
xor
xchg
add
mov
pop
pop
pop
mov
iret
shrl
mov
fstpl
jno
add
xorb
insl
mov
mov
pusha
inc
mov
mov
fs
push
mov
fwait
mov
inc
mov
adc
and
push
sub
in
stos
or
xchg
cmp
dec
pop
mov
lahf
rolb
mov
add
push
mov
mov
lcall
setbe
pop
cmp
jo
dec
cmp
push
mov
adc
xorl
loope
pop
mov
out
pop
pop
xchg
pusha
push
pop
pushf
sbb
mov
insl
cld
mov
pop
sbb
dec
mov
jne
and
cmp
sub
jp
sbb
daa
xchg
and
mov
or
test
sbb
pop
push
adc
sbb
nop
pop
cs
int
bound
push
adcl
xchg
mov
add
lods
add
scas
outsb
push
add
sub
lods
insb
shlb
aas
sbb
popa
dec
and
xchg
push
xor
pop
mov
xchg
adc
fadds
lahf
mov
pop
pop
fistps
mov
outsl
dec
jg
adc
mov
or
mov
xchg
xchg
jb
xchg
cmp
fsubs
pushf
and
xchg
mov
and
call
test
pushf
pop
add
out
or
aam
and
lahf
vcvtsi2sdl
das
mov
pop
fs
mov
sub
or
aam
push
xlat
adc
aam
adc
cmpb
or
or
xorb
push
add
fcmovnbe
pop
adc
adc
scas
aaa
pop
xlat
cmpsl
mov
pop
pop
daa
mov
xlat
add
push
pop
cmpsb
sbb
mov
mov
scas
test
js
inc
fldt
shrl
xor
add
pop
test
xor
add
add
push
sub
imul
pop
cmpb
pop
lcall
pop
xchg
sbb
push
sub
das
jmp
test
stos
aaa
jg
std
adc
in
mov
movsb
call
jl
pop
sbbl
xor
cltd
sub
jmp
popf
pop
lahf
sbb
mov
es
push
stc
mov
addr16
and
adc
fnstsw
or
ja
sbb
daa
and
dec
xor
adc
inc
cmp
mov
loop
xchg
out
inc
mov
pop
imul
pop
inc
sub
xchg
push
test
mov
pop
jle
mov
dec
cmp
sbb
pop
sub
lock
das
mov
push
adc
pusha
sbb
dec
dec
or
push
sub
push
lret
adcb
dec
add
push
pop
es
pop
lods
fsubrl
cmp
pop
cmp
xchg
xchg
in
add
hlt
out
inc
xchg
bound
pop
pushf
add
pop
sahf
shrb
scas
and
iret
xchg
or
adc
pop
sbb
adc
xchg
pop
unpcklps
jbe
test
mov
xchg
sbb
xchg
xchg
addb
add
jp
cwtl
lret
lcall
addr16
sub
pop
sbb
adcb
add
popf
dec
out
inc
std
sub
data16
push
adc
adc
add
mov
mov
fsubl
push
xor
test
nop
cmp
xchg
aad
mov
jne
adc
mov
mov
xchg
test
insl
or
adc
pop
push
pop
ljmp
hlt
mov
push
xlat
test
adc
sub
sbb
dec
lret
pop
imul
sbb
sbb
xchg
adc
add
lods
imul
and
faddl
xor
rcrl
sbb
jl
dec
pop
sbb
dec
push
pop
repz
and
cld
std
les
ja
mov
xchg
pop
iret
lods
scas
pop
imul
push
jo
adc
ds
push
adc
sub
adc
in
test
sub
das
mov
mov
lret
xchg
dec
daa
lods
out
movb
fcmovnu
rcrb
stc
fdiv
mov
add
xchg
mov
xor
adc
sub
sub
push
pop
jp
inc
adc
js
dec
sbb
cwtl
loop
rclb
adc
or
call
pop
adc
test
jbe
mov
outsb
mov
mov
in
clc
jg
rclb
cmpsb
xor
sbb
xor
add
ret
pop
mov
addl
sbb
outsb
daa
lahf
pop
xchg
adc
movsb
mov
sbb
ficompl
dec
sbb
mov
xchg
dec
stos
leave
dec
cmp
sbb
dec
loope
push
cmp
add
movsb
push
jnp
cltd
or
incl
loopne
fcmovu
jno
movsb
loop
sub
sbb
lods
cli
cmp
sub
test
pop
popf
test
dec
outsb
xchg
mov
addl
cli
jmp
rdpmc
fidivrl
or
cs
add
add
pop
or
cmpsb
sub
lods
mov
mov
lods
jo
or
push
mov
xchg
or
cmp
in
ja
lret
imul
push
xor
pop
imul
and
or
mov
add
mov
and
js
into
pushf
cs
pop
push
call
xchg
pop
cmpsl
adc
pop
fsubr
and
mov
lahf
cmp
xor
das
sub
ret
ljmp
add
movsl
adc
jmp
mov
fmuls
dec
or
push
mov
dec
pop
lods
test
inc
pusha
jmp
dec
psraw
lret
and
dec
or
inc
push
arpl
test
inc
push
inc
aam
jmp
mov
shlb
outsl
xchg
sbb
mov
into
inc
aad
push
or
rorl
lret
ljmp
mov
and
dec
add
or
shlb
dec
or
call
enter
and
or
cmp
and
int3
cmp
sbb
inc
mov
stc
and
movb
push
int
jne
stc
in
nop
and
pusha
mov
and
and
pop
in
clc
push
pop
mov
stos
mov
cltd
jne
ja
add
inc
push
pop
cmpsl
inc
and
sbb
jae
int3
lea
in
int
popa
out
mov
ljmp
shll
cli
jmp
ficomps
fbld
and
mov
daa
pop
imul
xchg
fisttpl
in
out
pop
inc
fsubl
repz
jl
cmc
cs
pop
fbstp
stc
popl
fnstenv
xchg
mov
mov
xchg
mov
nop
mov
mov
inc
std
ja
sti
pop
inc
pop
cmp
clc
add
out
ljmp
das
add
pop
cmp
mov
inc
ret
cs
lret
jns
sub
jl
add
in
notl
pop
mov
stos
insl
scas
das
out
add
leave
out
add
jp
cmp
or
inc
das
les
and
jmp
push
pop
std
add
imul
sbb
cmc
mov
cmp
add
add
xor
sbb
lret
push
and
sbb
push
nop
inc
xchg
vcmpps
mov
and
sbb
push
movsb
lret
sub
push
add
mov
and
inc
sub
ret
pusha
jl
ja
mov
cmp
clc
sub
mov
and
jb
sub
jno
rcrl
lock
fstpl
pusha
shlb
aaa
sub
pushf
les
clc
inc
scas
sbb
pop
add
xchg
dec
jg
fsubl
mov
fnsave
add
or
mov
pop
scas
add
push
dec
cld
fildll
sti
pusha
lock
add
mov
add
ret
xchg
lods
repnz
fidivs
push
std
fwait
push
mov
sti
mul
icebp
popa
js
xor
rcll
lds
jo
mov
hlt
and
testl
js
faddl
jle
xor
mov
add
and
psllw
stos
rcl
lods
fsubrl
inc
scas
jmp
jecxz
xchg
dec
ljmp
in
sbb
jnp
in
inc
jge
scas
mov
cmp
aam
cmp
sub
shlb
pop
push
gs
and
and
imul
out
lret
fistl
jno
cmp
divb
mov
xor
pop
test
int3
and
cmp
ja
mov
inc
out
mov
mov
add
bound
sahf
shrl
and
push
add
mov
divl
and
arpl
pop
mov
rol
dec
jg
add
call
mov
xchg
outsl
hlt
test
scas
sbb
mov
add
testb
xor
outsb
xchg
jo
fucomi
shrb
and
rcll
rcll
or
pop
aas
lahf
shll
mov
insb
mov
xor
pop
xor
inc
xchg
pop
pop
add
adc
addr16
jne
rcll
mov
ret
insl
out
sub
aas
movsl
bound
cmp
lods
hlt
and
add
loop
xor
jnp
shrb
cmp
inc
and
sarb
popl
push
mov
add
data16
inc
jb
add
push
cltd
lea
add
shr
push
xor
jle
std
xchg
ret
dec
mov
sub
movsb
jg
or
add
sbb
add
out
add
cmp
push
aam
es
add
into
xor
ja
sahf
mov
ficoms
and
mov
sbb
fistl
loop
mov
icebp
ficomps
pop
xor
add
add
sahf
cltd
fldl
push
xlat
les
fmull
jns
or
xlat
add
cld
add
push
inc
mov
leave
nop
clc
mov
data16
ffreep
rorl
mov
pop
testl
or
repz
and
outsl
add
ljmp
inc
pusha
mov
mov
cmp
add
mov
jno
inc
scas
cmp
leave
ja
lret
xor
cmp
repz
popa
icebp
loopne
call
and
shrb
add
sarl
add
lahf
lret
mov
add
push
repz
lahf
lds
xor
roll
pop
rorl
add
xlat
mov
jge
int3
inc
aas
loop
push
movsl
movsb
lahf
push
and
stc
cmpsb
dec
or
or
es
cld
dec
icebp
mov
into
iret
xchg
int
add
dec
out
enter
roll
sbb
lds
add
or
scas
loopne
xor
add
call
roll
pop
mov
cmp
add
push
rolb
mov
pusha
in
das
mov
repnz
xchg
ljmp
mov
andb
lret
xchg
inc
or
push
jp
outsl
repnz
mov
xlat
or
lret
add
dec
jo
mov
add
lods
cmc
jbe
loop
sub
aas
or
pop
mov
sbb
stos
mov
jle
cs
xchg
call
data16
call
pop
lods
mov
in
mov
pop
test
and
push
jle
pop
adc
in
or
add
push
filds
data16
clc
int3
mov
add
pop
push
add
loopne
inc
cmp
out
add
repnz
fdivrl
adc
mov
cld
dec
mov
pop
and
fidivrs
inc
cmp
ret
test
outsl
and
shll
add
adc
add
jmp
add
jbe
testl
shlb
inc
sub
daa
cmpsl
into
rcrl
stos
adc
ret
inc
mov
xor
jnp
or
jb
mov
add
pop
mov
test
cld
adc
int3
jmp
xchg
pusha
cmp
add
into
scas
outsl
and
loopne
es
fwait
pop
or
push
fnstsw
mov
fdivrl
aad
mov
pushf
add
ret
iret
icebp
enter
inc
and
adcl
pop
or
out
rcrb
xor
mull
xor
popf
pop
dec
iret
sahf
or
aad
jmp
sbb
stc
test
cmp
bound
lahf
pop
mov
stc
in
mov
shll
xchg
cmp
sbbl
out
out
outsb
and
mov
mul
add
dec
add
lock
mov
out
add
cmpb
decb
cmp
add
fdivl
dec
sbb
push
es
cmp
rcrl
push
aad
rcrb
adc
adc
movsl
inc
push
cs
sbb
jne
push
inc
out
imul
cmp
add
xchg
mov
sbb
xchg
pop
jl
jle
pop
iret
add
mov
cwtl
shll
mov
mov
mov
imul
push
mov
xchg
xor
data16
mov
jecxz,pt
push
mov
lahf
mov
and
add
ja
jae
stc
push
cmp
mov
fistl
test
into
add
lods
jmp
int
mov
cs
add
popf
push
out
jl
xchg
add
mov
cmp
in
cmp
fs
fsubrl
ja
push
testb
idivl
insb
imul
xlat
int
xchg
aam
scas
mov
fadd
add
insl
fwait
enter
movl
or
int
inc
jnp
jbe
or
mov
ss
inc
mov
jl
pusha
loope
jo
je
pushf
cmp
ds
mov
loop
sti
fsubl
lret
dec
popf
pop
and
outsl
mov
fiaddl
fs
pop
jns
lret
cmpsl
add
ja
sti
ret
pop
add
sub
jmp
cmp
mov
or
out
fidivs
dec
stc
add
inc
pop
add
out
ja
daa
xor
add
sub
outsb
and
sarl
cmp
neg
std
push
inc
jo
in
xor
scas
pop
sbb
mov
fucomp
test
add
aaa
lea
mov
jae
shr
cmp
add
aas
mov
lods
call
aam
js
rcl
mov
cld
and
mov
or
scas
pop
mov
sbbl
and
into
xor
fwait
cmc
mov
scas
inc
push
mov
mov
fs
cmp
push
fwait
shll
mov
fdivl
mov
lods
add
jns
inc
test
es
iret
fisubs
jmp
addr16
ret
fsubl
subl
push
popf
fisubl
shrl
in
lds
and
add
jno
int
testb
ror
and
mov
out
into
add
jo
fwait
aad
mov
std
outsb
mov
stc
insl
and
sub
cli
inc
mov
dec
mov
mov
sub
sub
int
andl
sbb
mov
and
mov
jnp
notl
add
cld
and
pop
inc
adc
int
outsl
mov
aas
cmp
pop
jge
faddl
aas
xchg
enter
aaa
push
pop
cli
add
inc
jo
pop
dec
out
mov
push
mov
inc
xor
cwtl
pop
sub
or
add
pop
jnp
lock
add
push
cs
pop
cli
gs
js
push
ret
fwait
lds
addr16
sarl
leave
mov
lock
xlat
ljmp
enter
jg
inc
inc
repnz
stos
repz
fsubrp
cltd
or
les
jge
xor
add
mov
xchg
xor
loopne
in
sti
xlat
jmp
xchg
xor
outsb
test
sbb
ret
test
stos
js
aaa
popf
inc
int
dec
cmp
cmpsl
or
and
pop
mov
jge
aaa
or
push
xchg
xlat
shll
dec
shlb
in
pop
cmp
sbb
sbb
and
fisttpl
jae
jb
mov
mov
pusha
lock
aad
cmc
scas
loopne,pt
add
pop
sahf
fsubs
mov
pop
sbb
sarb
xor
and
dec
addl
cmpsl
out
add
xor
aad
mov
add
xor
rcrb
addb
cmp
sub
ficoml
mov
xchg
ret
lcall
cwtl
fdivrl
sahf
and
shrl
mov
sub
rorl
xor
inc
jge
cmp
jae
insb
mov
sbb
lahf
das
or
inc
adc
fidivrs
push
stos
add
cmpsb
xor
jbe
push
and
add
push
testl
dec
inc
or
dec
inc
sub
pusha
or
cmc
loopne
adcb
mov
pusha
movups
inc
add
cmp
mov
adc
sbb
idivl
lret
insb
mov
add
icebp
cs
lret
cmpsb
scas
jnp
mov
int
dec
jp
in
inc
xor
movsb
add
mov
fcompl
adc
inc
mov
fs
ss
in
jg
inc
imul
es
add
lods
fcoml
add
push
push
lods
and
xchg
cmp
je
cmc
insb
ficomps
cld
sbb
int3
inc
jns
out
adc
fldl
inc
loopne
insb
xor
outsb
fiadds
stc
xchg
icebp
xor
jge
add
les
and
out
xchg
pop
add
lcall
xchg
aam
in
or
jo
flds
xlat
jg
ja
das
and
add
shl
mov
aad
xor
test
vunpcklps
mov
sbb
shrb
add
and
cmpsl
pop
faddp
test
test
stos
movsl
add
push
or
jns
xor
pushf
pusha
sahf
xchg
pop
addb
add
add
ljmp
xor
cmpsl
mov
push
sbb
push
dec
aas
hlt
andl
mov
lret
rclb
mov
cli
nop
orl
shrb
dec
mov
test
es
repz
push
xor
adc
jecxz
pop
add
xchg
lcall
add
dec
jno
ss
int3
pop
rcl
jne
stos
sbb
movsb
inc
sbb
std
dec
ficoms
stos
mov
add
out
pushf
fwait
popa
imul
cmpsl
pop
cs
test
fiaddl
inc
jns
xor
mov
and
lahf
add
mov
adc
fistpll
jecxz
xor
pusha
stos
cmp
cmp
add
dec
pop
or
xchg
test
cmp
ret
push
sbb
push
dec
ret
jb
mov
movsb
cmp
add
dec
add
pop
mov
ret
leave
cs
dec
rol
and
rcl
sbb
add
mov
sub
loop
jecxz
xchg
jo
jno
xor
lcall
push
pusha
in
mov
xor
jne
ret
mov
cmp
lods
add
or
sbb
push
add
nopl
add
cmpsb
rorb
es
inc
test
and
inc
insl
mov
sub
shlb
dec
sarl
xchg
add
jne
pop
data16
add
movsl
fs
shr
sub
add
das
es
mov
out
pop
lods
jle
lcall
lock
xor
dec
add
out
xor
loop
hlt
inc
insb
dec
pop
push
fistpl
add
mov
test
mov
inc
mov
add
inc
dec
aas
jno
movsb
cld
dec
cmp
arpl
and
outsb
dec
cmpsl
sub
stos
and
popa
mov
sub
jg
or
pop
inc
aad
adc
rep
pop
add
xor
mov
jnp
jle
stc
aaa
clc
fs
mov
sub
ss
push
je
add
repz
add
rcr
xchg
inc
mov
jbe
add
jecxz
movsl
popa
jp
or
mov
push
iret
add
cld
add
cmp
pop
push
push
xor
pop
fwait
bts
pop
imul
and
push
das
xchg
hlt
clc
push
scas
movsb
cmp
mov
xlat
xchg
mov
add
mov
sub
or
lahf
sub
outsl
xchg
push
jno,pt
add
jp
cmc
add
jg
incl
mov
xchg
lds
inc
and
sbb
xchg
dec
cli
jg
das
xor
mov
xlat
jnp
adc
jmp
add
and
sbbb
add
out
loop
cmp
inc
xor
cmp
dec
addr16
add
scas
jge
jnp
sub
cmp
ja
mov
repz
mov
dec
add
xchg
aam
das
test
mov
mov
in
sub
dec
inc
pop
pushf
dec
adc
and
inc
inc
xor
dec
mov
hlt
or
sub
mov
nop
mov
std
stc
xor
mov
stos
jo
xchg
pop
cltd
popf
pmullw
pop
add
cmc
sahf
mov
add
out
pop
push
pusha
leave
push
and
mov
adc
push
shlb
das
andl
fs
add
add
into
pop
add
xchg
scas
loop
add
clc
add
cmp
fldl
insb
sbb
fwait
pop
stos
dec
xor
pop
mov
jo
inc
fldt
in
add
and
dec
push
inc
mov
fdivrs
fbstp
and
xor
pushf
icebp
add
xor
leave
xchg
mov
fmull
sub
mov
rolb
out
sahf
mov
ret
xlat
insl
dec
fcoms
roll
ds
jne
gs
xchg
cmp
xor
inc
add
and
xchg
stos
xchg
or
aaa
stc
ret
scas
mov
out
loope
rorb
insb
push
cmpb
add
push
mov
cs
int
scas
fiadds
lds
lcall
mov
push
jecxz
test
cmp
or
cmp
pop
mov
and
xchg
add
jb
mov
repnz
push
push
xchg
iret
inc
add
push
out
add
push
add
mov
pushf
inc
inc
loope
xabort
jns
mov
insl
sub
rorb
aas
pusha
pop
adc
xor
mov
mov
ljmp
adc
pusha
ja
outsb
or
mov
add
leave
mov
add
jecxz
test
sbb
fwait
adc
mov
mov
insb
mov
adc
xchg
nop
mov
aas
mov
stos
mov
sbb
fcompl
xor
into
sub
push
pusha
jmp
cmp
cmpl
sbb
test
shrb
cmp
lret
clc
add
add
add
mov
sbb
adc
push
sub
adc
or
add
sti
mov
sahf
sbb
call
shll
adc
pop
xor
insb
test
sbb
or
pop
mov
push
std
test
jecxz
adc
icebp
enter
cmp
sbb
and
add
adc
adc
subl
mov
push
add
mov
xor
add
pusha
adc
or
enter
lea
fmul
sarb
mov
jae
inc
stos
sbb
or
sub
dec
xchg
and
push
cltd
enter
add
add
stc
ljmp
inc
dec
sub
pop
mov
sub
push
mov
add
test
xor
add
shl
test
mov
ret
call
add
cmp
stc
stos
sahf
push
add
jp
inc
add
push
into
xchg
jno
lea
pop
mov
xor
imul
xor
leave
add
lcall
rclb
mov
into
ds
or
loopne
cmp
pop
lods
test
sahf
mov
jo
add
lret
and
and
inc
stos
arpl
xor
lods
int
xchg
adc
popa
jne
adc
movsb
mov
mov
lahf
sub
inc
inc
add
xchg
cmpl
or
lods
push
filds
add
jl
lret
inc
into
rcl
xchg
jmp
pop
fdiv
ret
push
and
das
mov
inc
xchg
push
xchg
xor
test
jle
adc
in
sarb
lahf
or
data16
cmp
jno
mov
inc
or
arpl
cmp
adc
fmuls
xor
lcall
les
add
xlat
sbb
add
repz
nop
adc
cmp
movhps
sbb
and
aad
xchg
push
xchg
je
and
stc
and
pop
mov
inc
fmull
add
loope
in
add
mov
inc
shl
movsb
mov
inc
add
inc
or
cmp
pop
aaa
jg
add
mov
adc
je
push
les
or
cmpsb
pop
or
leave
xor
mov
loop
imul
scas
or
dec
mov
and
in
mov
sbb
add
insb
xor
das
test
cld
ljmp
inc
push
mov
ja
in
and
sbb
lods
jecxz
adc
int3
sbb
pop
and
inc
mov
pop
test
fs
inc
add
mov
pushf
add
xchg
add
jl
cmp
sub
scas
arpl
in
mov
add
cmp
push
imul
xchg
cmpsl
inc
mov
xor
or
xchg
mov
jae
sbb
and
sbb
sub
mov
ds
add
stos
and
add
sbb
pop
add
cltd
dec
push
adc
aad
rcrb
clc
into
xchg
inc
add
or
dec
popf
icebp
add
sub
add
mov
pushf
push
add
imul
test
stos
or
or
sbb
pop
add
mov
inc
arpl
jno
jnp
push
adc
mov
out
sub
int3
jecxz
mov
xor
inc
sbbb
pusha
loope
pop
sub
inc
andl
or
adc
sub
rol
push
sbb
and
pusha
xor
mov
or
mov
xchg
and
mov
test
mov
inc
loope
inc
jecxz
sarl
pop
xor
push
repnz
add
test
les
hlt
sbb
inc
inc
and
popa
cmp
xchg
in
xchg
ss
data16
loope
cs
repnz
adc
inc
shll
fwait
pop
mov
mov
rol
sbb
lcall
in
adc
add
cs
shlb
sub
movsb
iret
cmp
jae
mov
mov
test
mov
adc
adc
cmpsl
sarb
ss
add
sub
cmp
add
pop
adcl
and
or
lods
add
and
add
pop
pop
pop
leave
pop
or
cltd
and
rorl
inc
cmpsb
stos
xchg
arpl
mov
mov
xor
int
pop
inc
insb
ds
and
lods
sub
or
push
mov
mov
inc
jne
mov
fldenv
add
enter
gs
push
jno
pop
js
outsb
adc
in
pop
add
jp
add
xchg
add
jae
and
int3
cpuid
add
cli
adc
ret
loop
popa
add
or
lahf
out
into
bound
pop
stc
cmp
icebp
adc
fwait
add
fcom
lea
insl
into
and
pop
cs
nop
and
add
faddl
es
xorl
xchg
adc
mov
std
test
inc
enter
jg
sarb
bound
sbb
push
jo
lods
mov
inc
jmp
mov
sbb
push
inc
and
mov
cmp
jmp
mov
or
xchg
out
cmp
fadd
push
add
inc
cmp
notb
mov
mov
std
aad
loopne
push
add
push
test
xor
add
cwtl
sub
aaa
inc
add
xor
stos
mov
push
add
adc
xchg
mov
push
popl
dec
pushf
addr16
lret
les
xor
into
lea
push
icebp
xchg
mov
or
and
lods
jo
das
ss
fcomps
jecxz
and
mov
call
fldenv
adc
inc
and
mov
push
in
and
adc
add
icebp
repz
or
ret
adcl
xchg
pop
inc
daa
nop
lcall
movsb
ja,pn
mov
mov
adc
push
dec
add
mov
cmpsb
xchg
mov
push
mov
xchg
dec
dec
hlt
cmp
xchg
mov
or
out
add
pop
lock
rolb
jl,pt
push
add
fisubs
lahf
xchg
add
aam
jecxz
pop
mov
int3
rol
movsl
and
dec
addr16
add
insl
add
xchg
xor
add
call
pop
jecxz
mov
fidivl
les
dec
mov
mov
add
rcll
and
dec
insb
add
mov
pop
add
inc
sub
ljmp
xor
mov
sbb
lock
jno
add
mov
mov
xor
push
dec
mov
jmp
add
xor
test
in
enter
mov
add
and
je
ret
pop
jb
or
sbb
push
iret
inc
sub
push
xor
scas
pusha
mov
mov
fisubs
popf
mov
mov
lahf
add
cmp
push
xchg
cs
lcall
add
xchg
inc
popf
pop
pop
pushf
inc
pusha
sub
pop
adc
xor
rclb
pop
inc
mov
cmp
mov
adc
shl
sahf
mull
scas
mov
roll
xchg
lret
mov
in
adc
fwait
xor
enter
push
mov
stos
js
sub
lds
in
addb
mov
dec
shrb
int3
lea
cmp
ret
bound
fs
add
addr16
rcrb
mov
sub
push
imul
daa
adc
outsl
sub
add
ss
add
add
arpl
test
push
push
cmp
enter
jb
add
jmp
movsb
mov
cmpsl
pop
call
push
popf
jl
out
add
test
sub
xchg
add
jbe
aam
xor
mov
rorl
jl
add
mov
jge
xchg
push
jno
xor
xlat
or
jg,pn
dec
xchg
xor
in
imul
push
pop
fwait
enter
int
mov
out
cmp
pop
mov
in
pop
int3
ret
lea
popl
cmp
sbb
xor
iret
lret
in
mov
movsb
movsl
xchg
push
add
loop
jl
cmc
arpl
shlb
xchg
lcall
movsl
xlat
fsubl
popa
add
xchg
jo
xchg
fdivl
xor
cmp
test
into
cwtl
cltd
mov
add
in
xchg
dec
and
add
ss
imul
add
mov
xorl
and
mov
sub
sub
adc
pop
push
dec
enter
and
aaa
cmp
jmp
add
add
movsb
mov
push
add
add
out
test
lea
inc
mov
out
pop
into
in
popa
add
push
adc
vcvtsd2ss
xchg
inc
pop
enter
test
xchg
push
push
fmull
cmp
jns
scas
dec
dec
cmp
aam
sbb
adc
lock
lcall
mov
dec
add
xchg
cmc
xlat
in
or
mov
pop
add
fisttpl
add
je
sarb
and
movsl
add
lods
negl
push
push
and
xchg
mov
jp
or
push
je
add
sbb
lods
adc
mov
pop
and
push
mov
sub
sub
repz
dec
add
std
xchg
adc
cmp
push
add
in
cmpsb
out
mov
mov
pushf
test
xchg
cmc
pop
add
or
add
imul
and
add
mov
xchg
push
arpl
jge
sub
sbbl
fdivrs
add
rcrl
out
cltd
fdivrl
jg
mov
ds
add
jns
mov
imul
inc
mov
and
dec
icebp
clc
add
scas
scas
mov
lods
pop
rcrl
add
inc
push
mov
add
pop
sbb
push
icebp
inc
sub
sub
xchg
inc
pop
test
mov
push
movl
adc
and
add
push
nop
movsb
rolb
outsb
inc
add
sub
outsl
das
add
sbb
les
mov
repz
lods
adc
insl
test
xchg
push
xlat
jnp
inc
add
mov
dec
mov
lcall
movsb
and
nop
jns
sub
or
rorl
xor
cltd
push
ds
pop
mov
inc
ja
sbb
sbb
push
or
addl
hlt
sub
and
sub
movsb
add
jbe
sahf
add
sti
adc
mov
mov
test
outsb
int3
adc
xchg
cmp
and
add
cwtl
sub
rcrl
xchg
sub
push
add
pushf
push
bound
mov
mov
cmc
call
out
xchg
add
push
push
lods
lods
inc
mov
and
jbe
cmp
push
add
test
call
imul
adc
sbb
pop
leave
sub
mov
dec
test
cmp
add
imul
push
mov
lds
imul
xor
add
xchg
fistpll
inc
and
lock
add
jnp
fcoms
mov
mov
mov
les
and
inc
or
daa
pop
push
push
imul
mov
xor
mov
sub
sub
mov
mov
push
jmp
push
je
inc
cli
js
scas
cmp
out
add
jl
mov
pop
inc
pop
jb
call
repnz
fsubp
jae
mov
aad
add
xorl
add
mov
inc
dec
add
or
outsb
sbbl
add
not
sub
inc
mov
insb
jo
cmp
ret
outsl
insl
add
lods
pop
mov
mov
xor
push
lock
insl
rorl
pushf
pop
jmp
movsl
mov
loopne
jecxz
cmp
cmp
rolb
jae
dec
call
add
pop
add
sbb
and
push
cli
rcrb
cltd
rcl
pop
lret
sub
adc
jp
jb
aam
mov
fnstenv
roll
bound
jne
add
gs
data16
push
jl
fs
add
mov
fld
call
test
ljmp
adc
add
adc
pop
add
jb
xchg
mov
xchg
add
in
shrb
push
jne
fsubrs
mov
xor
xchg
add
fstps
popf
add
xchg
mov
push
mov
mov
adcb
adc
add
adc
adc
mov
imul
add
mov
cmp
mov
push
sub
pop
rolb
jbe
filds
sbb
or
lods
xchg
cmpsb
movsb
cmpl
mov
sbb
mov
add
js
pop
dec
stc
and
dec
sub
push
fstpt
adc
add
pop
mov
lods
add
outsb
push
push
add
and
leave
pop
add
cmp
mov
out
mov
pop
clc
test
mov
in
sub
je
add
dec
pop
adc
movsb
add
mov
lret
pusha
jmp
cmpl
dec
push
cli
je,pt
into
xchg
in
rolb
add
jl
jo
push
push
dec
dec
mov
xchg
and
mov
or
clc
addr16
pop
dec
shr
add
xchg
popf
loopne
pop
xor
je
sub
jg
scas
mov
leave
sbb
inc
cmpsb
mov
fists
cltd
aaa
rcl
add
or
enter
mov
adc
mov
mov
cmpsl
shlb
jmp
mov
sbb
xchg
mov
fcos
and
inc
push
dec
add
mov
or
call
add
xchg
and
jb
xchg
inc
add
add
movsb
je
jmp
sbb
das
std
loopne
xchg
icebp
add
lcall
test
or
lods
inc
sub
push
cmp
into
sub
pop
imul
sbb
cmp
and
int3
aas
add
roll
into
loop
push
test
pop
cmp
shlb
add
sbb
xor
or
test
mov
inc
inc
movsl
add
arpl
sub
dec
fcomps
test
jo
xchg
or
ret
jbe
lock
test
and
mov
mov
das
add
mov
loop
cmp
ss
outsl
mov
and
xchg
dec
inc
loop
mov
push
adc
add
pushw
pop
jecxz
fs
cwtl
pop
pushf
loopne
loop
test
mov
gs
xor
cmp
dec
movsl
fs
xchg
sbb
ss
and
insb
sahf
xor
mov
stos
and
pushf
push
push
lods
mov
push
cmp
cli
mov
add
daa
aas
lcall
data16
inc
mov
xchg
fisttps
sqrtps
stos
push
lret
add
and
test
jno
cwtl
push
xor
jecxz
call
lds
xor
and
xor
jae
and
or
jbe
inc
pushl
arpl
push
lock
dec
pop
push
lea
stos
xchg
iret
add
ja
push
fcoml
jb
loop
or
es
insb
fidivrl
pop
cld
test
or
cwtl
add
les
lea
mov
or
sub
push
adc
sbb
add
call
insl
push
push
mov
sub
dec
push
add
into
orl
or
xor
dec
movsb
adc
data16
pop
adc
dec
jle
mov
rcll
xlat
aaa
shlb
data16
in
add
popf
or
je
xchg
add
popa
in
repnz
mov
add
in
ret
or
or
popf
into
add
mov
inc
fcomp
shl
xchg
adc
jae
sbb
pop
pop
jp
fsts
pop
push
jmp
in
imul
sub
add
xchg
std
lock
add
mov
push
mov
push
in
or
push
jb
adc
int3
sbb
lods
add
sarb
popa
mov
push
cld
mov
or
cltd
inc
or
ret
les
testb
rolb
mov
xchg
mov
cmp
sub
imul
push
add
jecxz
pushf
jae
je
add
jnp
sub
add
push
xchg
outsb
jo
pop
inc
cltd
pushf
nop
ret
fcmovbe
sbb
cmp
cmp
hlt
pusha
mov
cmp
cmp
or
adc
cmpsb
xchg
add
add
add
add
or
lods
xchg
add
repnz
mov
js
pop
pop
push
insb
push
add
xor
sarb
repz
loopne
enter
jl
or
add
xchg
push
cmp
hlt
add
inc
sub
sahf
sbb
out
lds
pop
jp
push
ja
mov
inc
mov
mov
ss
decb
je
and
and
xchg
clc
inc
adc
pop
dec
in
mov
dec
ret
mov
scas
bound
add
or
sub
mov
add
test
test
nop
cs
arpl
cmp
mov
shl
sub
and
pushf
dec
add
inc
jns
nop
xor
in
mov
push
lret
or
scas
push
sub
xor
or
inc
pop
add
xor
push
cmpsb
adc
mov
sbb
add
mov
adc
andb
cmp
and
cmp
sbbb
push
cmp
das
je
or
mov
dec
sub
and
cmp
xchg
fildl
cltd
push
inc
fnstenv
mov
jae
fs
cli
mov
shrb
and
inc
setno
jmp
daa
jle
pushf
insl
roll
pop
fnclex
flds
pop
jl
adc
adc
int
jmp
mov
pop
aaa
and
shl
add
roll
mov
sub
mov
sub
pushf
inc
pop
jg
xchg
or
sub
popa
je
mov
adc
dec
and
jbe
data16
mov
push
mov
inc
push
cmpl
xor
add
call
mov
fisttpl
scas
sbb
mov
in
arpl
cmp
or
scas
lods
lret
jle
cld
in
pop
imulb
or
sub
or
cmp
sbb
movsb
outsl
xchg
and
add
sub
jecxz
add
es
and
sarl
faddl
sbb
int3
int
aaa
ss
fsubrl
add
xchg
mov
pop
stos
int
jecxz
ljmp
jmp
ret
repnz
ja
test
test
add
push
rolb
out
fnstsw
out
jbe
std
mov
lods
sub
cmp
mov
mov
movsb
fnstcw
cmp
lods
mov
add
jne
popa
addr16
adc
push
ja
lahf
sub
mov
dec
std
scas
aad
in
mov
and
push
sahf
ds
fdivrl
insl
push
add
popf
nop
jo
mov
inc
iret
fisttpl
inc
mov
mov
gs
xchg
or
sub
inc
idivl
add
into
popa
xchg
ja
or
int3
cli
jp
xchg
xor
aaa
add
push
ret
fsubr
fsubrl
and
sub
push
ja
in
inc
test
out
cmp
popf
cmp
add
in
or
out
inc
jg
add
testb
insl
mov
mov
fists
xor
aam
mov
dec
dec
pop
sub
sbb
mov
mov
mov
pop
jg
idivl
test
mov
and
cld
cltd
mov
pop
inc
sahf
mov
lcall
or
add
adc
jmp
fistps
pusha
cmc
fcmovnb
test
sub
add
loope
add
into
cli
testl
pop
cmc
dec
adc
adc
test
push
ficoml
repz
cmc
xchg
xchg
pop
loope
inc
xor
stc
mov
je
push
xchg
or
jo
cmp
outsb
sub
cltd
outsl
add
es
pop
sbb
sub
add
push
cmc
cld
xchg
jge
dec
movsl
sub
lods
rol
jns
scas
pusha
cld
cmp
jg
movb
rorl
popa
sub
add
add
adc
fistpll
call
add
mov
and
jle
pop
xchg
add
outsl
testl
jge
mov
cmpb
aas
scas
enter
mov
inc
out
cltd
gs
jmp
and
xchg
sub
sub
stc
outsl
cli
test
xchg
fistpll
and
xchg
cmp
add
dec
and
mov
test
adc
add
adc
xchg
sbbb
inc
inc
and
rclb
imul
sbbb
jp
pusha
mov
add
inc
adcl
inc
jge
xchg
sbb
adc
ret
dec
pop
cld
repz
ret
test
cmp
mul
add
xchg
cmp
andl
mov
xorb
icebp
add
mov
push
shll
dec
sbb
pushf
cs
fwait
cmp
mov
add
jo
and
in
mov
mov
rorl
stos
pop
test
sti
rcll
mov
xchg
lahf
fxch
cmpsl
mov
call
mov
addb
pushl
insl
mov
pop
dec
inc
inc
andl
jo
cmpsb
or
gs
dec
loope
sahf
mov
popa
cli
subl
in
sub
xchg
or
lret
insb
xor
sbb
sar
fstpl
or
into
mov
or
cltd
cmp
push
call
and
inc
les
jbe
mov
mov
std
sbb
cmpb
ficoms
test
xor
lret
push
pop
mov
inc
add
ret
mov
addr16
and
dec
inc
mov
lahf
and
xlat
ja
jno
aaa
pop
out
loopne
pop
aam
cli
cmp
daa
ss
lret
mov
add
fldcw
sbb
daa
xlat
dec
add
shll
mov
cmpsl
sbbb
sbb
loopne
rcrb
sbb
aad
scas
jle
xor
cwtl
xchg
ds
xor
pushf
pop
aad
neg
ret
ret
push
add
ficompl
push
add
sahf
adc
mov
imul
pop
xchg
sub
mov
test
hlt
int3
sub
aas
test
pop
pop
mov
add
push
rorl
jbe
sahf
pop
mov
mov
add
xchg
lock
sysret
jne
shrb
mov
and
jecxz
mov
xchg
enter
xchg
xor
lret
sbb
and
mov
jge
dec
adc
data16
test
xor
cltd
add
sbb
fcoms
inc
loop
sbb
subb
and
fdivr
jecxz
out
xchg
repz
lcall
inc
clc
sbb
fnstenv
outsl
add
fs
cmp
in
cmpsb
push
pop
popf
add
cwtl
push
inc
arpl
jnp
jmp
ds
lods
and
test
loope
js
dec
mov
fcmovb
push
iret
mov
mov
lahf
imul
and
xchg
lods
add
xchg
inc
or
cld
sti
shrl
jg
ret
lods
cmp
sahf
ljmp
dec
xor
sub
add
gs
jmp
push
pop
shlb
fnstsw
lock
sahf
movsb
mov
xchg
shlb
es
repz
aad
lea
sahf
dec
ss
in
call
cld
shl
popa
add
sbb
xchg
cmp
adc
imul
lea
enter
cmpsb
outsb
pop
push
jmp
mov
mov
fmull
cld
push
xor
ret
out
pop
arpl
icebp
push
out
aam
pusha
addr16
and
push
inc
lds
fdivrs
sbb
add
sbb
cmp
mov
rcrl
inc
outsl
sbb
test
and
sbb
xor
xchg
scas
push
pop
sbbb
mov
jmp
mov
dec
cmp
mov
adcb
xchg
or
push
add
adc
les
inc
lock
mov
add
inc
mov
pop
cmc
lea
dec
xchg
jnp
in
inc
xchg
sub
jae
pop
fcmovnu
cli
adc
ret
jnp
sub
mov
sarb
add
adc
push
andl
test
xor
add
jle
gs
xor
xor
cmp
lock
add
push
stc
dec
mov
faddl
push
in
cmc
sti
dec
gs
incl
and
stos
stc
or
out
loop
mov
cmpsl
jl
lcall
je
int3
sub
push
mov
sub
out
pop
aaa
das
ss
es
jno
xlat
pop
jns
xchg
add
into
out
lods
add
shlb
cmp
mov
dec
pop
mov
out
addr16
cmp
add
add
sbb
add
sub
leave
clc
jno
push
mov
sti
pop
pop
jnp
incb
mov
cmp
mov
mov
xor
xor
sbb
pop
dec
or
push
mov
cmp
xchg
std
add
jl
cmpsb
xor
and
ss
push
push
fldt
push
inc
ret
mov
stos
mov
std
rcl
test
aam
xchg
je
fildl
int3
popf
mov
pushf
jae
lcall
inc
mulb
add
adc
addr16
add
movl
xchg
faddp
test
fwait
cli
mov
xchg
mov
xchg
pushf
add
stos
filds
add
mov
mov
pop
into
add
sub
fadds
cmpsl
ror
hlt
and
push
add
popa
xchg
pushf
bnd
add
inc
stos
dec
dec
mov
out
mov
cs
pop
and
mov
add
andl
mov
into
xlat
inc
and
clc
dec
cmp
cltd
cmc
add
mov
fldl
nop
adc
xor
add
out
dec
adc
xchg
sahf
xchg
pop
inc
push
into
scas
pusha
fidivs
cltd
or
add
adc
lret
outsb
adc
and
bound
shufps
dec
in
mov
add
fwait
push
sbbl
cli
in
adc
pop
rol
popa
rolb
loope
or
jl
dec
out
add
inc
lock
inc
pop
cmp
ror
mov
cmp
xchg
dec
pop
mov
sub
mov
mov
xchg
inc
cwtl
arpl
push
mov
jnp
cltd
into
repz
jae
in
sbb
inc
pop
sub
xlat
sub
loop
dec
cs
les
inc
das
lret
popf
push
xor
add
sub
bndldx
shl
mov
fsts
mov
lea
xor
push
test
popl
hlt
jnp
mov
outsl
test
adc
add
roll
and
out
mov
mov
aam
push
jp
pop
add
dec
mov
pusha
adc
mov
das
ret
fadds
and
fwait
shll
lret
sarl
cmp
or
push
cmpb
xchg
shlb
shll
or
add
cmp
hlt
dec
xchg
les
std
xchg
push
inc
mov
add
add
pusha
sbb
sbb
sub
and
xorb
and
roll
lcall
mov
sbb
mov
and
dec
push
lret
andb
adc
loopne
add
shlb
sub
cmpsb
pusha
cmp
out
and
ret
mov
les
adc
xchg
pop
pusha
add
add
cwtl
addr16
pop
fidivrs
scas
pop
xchg
or
scas
adc
leave
hlt
and
cmp
loopne
pop
mov
pushf
rclb
inc
loopne
cmpb
add
dec
jne
shrb
xor
mov
pop
mov
xchg
add
inc
dec
jb
sub
imul
mov
sub
inc
inc
loopne
dec
xchg
pop
or
dec
test
mov
sbb
lahf
dec
add
cmp
add
mov
fwait
adc
rolb
insb
push
sub
adc
inc
push
andl
add
fstl
push
repnz
shll
and
cmp
int3
dec
sub
add
fs
hlt
pop
cmp
add
cmpsl
jge
cmp
dec
dec
jbe
dec
cmp
or
cmp
mov
inc
dec
jo
outsb
int3
mov
loopne
ss
mov
cmpsb
sub
fsubrs
inc
inc
xor
lret
cs
dec
mov
ret
or
stos
xor
pusha
or
ret
or
pop
daa
add
mov
int3
inc
jp
loop
fstpl
out
mov
and
add
cmp
xor
jp
in
hlt
mov
mov
add
mov
inc
xor
pop
pop
sbb
mov
test
outsl
or
je
add
push
xchg
or
push
in
add
insl
repnz
jp
pop
add
inc
pop
cmpsl
and
loopne
pop
sbb
jmp
sbb
dec
add
push
mov
add
out
jbe
lret
test
inc
inc
push
je
ds
or
add
sbb
inc
or
jno
adc
in
xor
adc
pusha
push
adc
les
xor
shll
rol
sar
and
adcb
mov
sbbl
xchg
int
sbb
pop
pop
mov
add
out
add
test
cmp
xchg
pop
xor
mov
mov
stos
rorl
cmp
andb
pushf
push
mov
pop
sbb
xchg
inc
icebp
adc
inc
nop
mov
adc
xchg
xchg
ret
push
xor
mov
add
ret
sub
inc
stos
jecxz
ret
fmull
mov
or
jb
jo
or
ret
rolb
cs
and
das
mov
pusha
fwait
sbb
cmp
sbb
shrb
and
mov
inc
sub
ret
lock
cwtl
sub
lret
je
and
ret
mov
fs
mov
sub
enter
and
mov
adc
or
push
add
out
subb
xor
ret
sbb
inc
movsl
cmp
jo
cs
add
fsub
jnp
jmp
in
add
lea
test
xchg
jg
mov
add
rol
push
add
repnz
mov
nop
int
sub
xchg
xlat
lock
cmp
sub
sbb
rolb
out
outsl
xor
jb
inc
idivl
jo
andl
add
mov
add
clc
in
shl
cmc
add
fcomp
aam
in
mov
jo
push
outsb
push
jge
jecxz
jg
add
mov
jle
jne
add
xchg
pop
pop
cltd
cmp
pop
add
shll
add
es
adc
popl
lods
aaa
stos
loop
adc
sti
push
sbb
dec
inc
repz
cltd
neg
sarb
subl
lea
mov
mov
jne
imul
sahf
add
ja
lahf
pop
iret
add
sub
int
dec
ss
mov
icebp
movsb
add
sti
inc
jle
mov
and
je
and
dec
add
outsl
jbe
or
cli
xchg
out
ljmp
lock
mov
aad
cmp
loop
cmp
jno
lds
inc
insl
mov
repnz
mov
mov
sbb
mov
fimull
or
jge
pop
es
mov
inc
mov
dec
imul
mov
in
int
cmp
dec
imul
icebp
inc
test
std
cmp
sub
pop
jbe
push
mov
das
add
imul
int3
lock
add
in
add
sti
jne
dec
xchg
out
stos
xor
sub
mov
mov
out
cmpb
es
push
add
lret
stc
insb
inc
fcompl
cs
sahf
test
xchg
imul
xor
add
pop
loopne
add
push
lods
jl
inc
lds
sub
pushf
push
imul
or
repz
ds
mov
inc
out
push
cmp
addr16
fsubl
test
lock
insl
lcall
in
clc
sbb
test
jmp
es
aad
je
push
add
ret
pop
sub
ret
repnz
and
sbbl
fnstenv
call
jge
pop
movsl
fcompl
pop
mov
test
ret
cmp
add
and
inc
fwait
rorl
sub
pop
add
jb
pop
xor
subb
jl
jle
sarb
jbe
pop
add
jge
push
dec
cltd
mov
js
sbb
jl
icebp
xor
insb
bound
sub
ljmp
jp
fadd
mov
xchg
cmc
sub
inc
mov
imul
inc
ds
out
or
push
jno
cltd
mov
pop
jne
fstl
stos
adc
jmp
lret
adc
cmp
add
pop
xor
fistpll
inc
or
pushf
mov
or
xor
pop
mov
fbstp
imul
mov
fstl
aas
fcompp
lods
andb
lock
cmpsb
and
and
shr
decb
mov
pusha
icebp
push
jmp
insl
sti
push
dec
sbb
sub
mov
dec
movsl
divb
lahf
push
inc
int
std
add
outsb
add
dec
pop
inc
jns
cld
add
adc
xchg
outsl
mov
lds
mov
add
imul
push
in
add
lret
les
shll
mov
adc
cltd
add
rcll
mov
mov
dec
mov
ja
mov
mov
jge
and
insb
sub
adc
inc
loope
jnp
ja
aas
adc
fnstsw
add
mov
sbb
mov
jno
mov
outsb
or
or
into
sub
adc
lahf
add
add
or
mov
or
jae
ret
xorb
inc
iret
ret
pusha
push
fsubs
jb
jle
shrb
add
or
mov
push
mov
pop
add
ds
jbe
xchg
ja
xor
scas
popa
incl
orb
add
inc
mov
test
xor
inc
mov
sbb
in
std
or
sub
jnp
jp
jecxz
es
mov
xor
sbb
aad
dec
add
mov
jmp
xchg
pusha
imul
lcall
and
test
pop
addb
out
pop
add
sar
mov
fucomi
sub
fs
add
in
into
xor
xor
cwtl
and
add
add
ficompl
inc
or
jae
scas
iret
and
sbb
mov
ret
xor
push
insl
test
addl
sub
adcl
push
lods
adc
mov
inc
nop
aaa
add
mov
jg
in
push
jmp
and
adcb
sti
xchg
cmp
mov
mov
rolb
popf
outsl
sub
orb
pusha
add
jo
xchg
fistpl
dec
add
repnz
xchg
add
push
scas
mov
fnstenv
push
cmpsb
mov
rorl
sbb
ja
lea
add
ret
mov
mov
mov
cmp
inc
pop
pop
je
and
movsl
sbb
push
rorl
call
push
mov
adc
adc
insl
cmp
dec
cmp
out
fs
int3
dec
enter
sbb
popf
adc
bswap
xor
add
sbb
push
dec
fcmovb
mov
and
jbe
testl
cmp
xor
jle
cli
ja
dec
pop
adc
mov
dec
mov
fcomip
addb
mov
or
dec
or
cmp
mov
add
mov
mov
frstor
add
lods
pop
das
je
mov
fdivr
roll
dec
xor
add
and
xor
iret
std
addl
mov
mov
add
test
ret
ret
mov
and
add
and
pop
mov
sbb
movsb
or
arpl
xor
into
call
inc
inc
leave
outsb
pop
fs
cs
add
mov
push
inc
cmp
je
push
push
enter
add
leave
pop
jge
fs
cmp
sub
aas
mov
mov
pop
cmp
xchg
mov
xchg
nop
push
shrl
jb
cwtl
or
mov
xchg
lahf
push
mov
rorb
dec
js
movzbl
and
cmp
add
push
mov
pop
push
inc
and
add
test
int3
rcr
xchg
out
push
add
push
adc
pop
dec
or
das
lret
push
dec
push
jg
fldl
test
mov
add
setb
out
or
out
push
add
aam
add
ficomps
or
add
ss
xor
add
add
int
fwait
cmp
push
cs
add
and
sti
pushf
sbb
data16
scas
add
push
in
and
and
push
bound
push
call
sbb
xor
push
sbb
bound
mov
shll
inc
sti
cmp
fdivl
adc
sub
jmp
div
jmp
sarb
and
jne
sahf
cmc
add
and
or
xchg
ds
dec
jle
insb
mov
popf
movsb
test
inc
jo
jnp
dec
and
add
jecxz
mov
nop
outsb
xor
cs
sbbb
cltd
popf
cmp
mov
push
pop
pusha
add
mov
xchg
fdivl
mov
pop
ss
push
fdivrp
add
pop
sub
mov
inc
or
cmp
pushf
inc
mov
push
push
jno
pop
aam
dec
rcrb
jp
in
mov
shll
xlat
jne
nop
add
inc
dec
xchg
roll
sbb
rol
sub
or
insb
ds
push
aad
ds
es
movsb
push
dec
xor
add
mov
ret
sub
movsl
and
inc
aas
jb
outsl
loopne
test
mov
insl
scas
enter
mov
inc
pop
push
std
adc
sahf
cmpsb
adc
inc
and
inc
shlb
sbb
pusha
and
dec
push
ja
and
subl
or
loopne
add
adc
and
mov
lds
inc
inc
sub
icebp
or
mov
add
enter
adc
iret
jge
add
dec
lock
xor
adc
pushf
and
mov
loope
xchg
orl
push
adc
mov
xchg
push
jbe
cmp
and
jp
std
pop
sub
mov
or
xor
mov
sahf
mov
add
cmp
pop
inc
incb
leave
cmpb
sahf
jnp
and
lahf
inc
mov
or
ss
add
in
jp
mov
pop
adc
jbe
sub
sub
cmpsb
dec
xor
dec
xchg
imul
lret
add
pop
popa
int
enter
push
mull
aas
imul
add
outsl
add
cmp
in
mov
add
sub
ljmp
cmp
popf
gs
std
mull
push
sbb
mov
cmp
lret
orb
xchg
out
add
lea
fiadds
aam
pop
ret
adc
xor
add
addb
cmpsb
test
pop
xchg
fdiv
jo
mov
data16
mov
inc
subb
pusha
ret
or
or
xchg
dec
sbb
pop
call
adc
test
cltd
add
add
pop
fstps
fwait
mov
testb
pusha
test
inc
dec
out
ret
xchg
lea
push
gs
movsl
jne
jmp
fstpt
stos
sbb
icebp
sub
mov
mov
dec
xchg
sbb
mov
into
loop
add
test
pop
fidivrs
dec
add
sub
dec
outsb
pop
addb
mov
add
lret
loop
test
adc
loop
add
mov
add
add
adc
inc
inc
adcl
sbb
into
push
pushf
cmp
clc
mov
loope
sbb
sbb
push
xor
scas
inc
or
rclb
sub
xchg
pusha
add
add
bound
inc
les
mov
fs
fmul
add
xor
out
lds
mov
clc
or
add
jg
cmp
fmuls
inc
adc
sti
add
pop
or
mov
xor
and
pop
shlb
dec
add
push
adc
inc
or
and
sbb
pop
faddl
xor
test
and
aaa
lods
xchg
roll
sub
mov
lock
out
scas
pop
cmp
popf
add
sub
loopne
orl
shrl
sub
adc
add
rolb
cwtl
icebp
adc
out
nop
sub
cmp
add
rclb
mov
cmp
mov
pop
sbb
and
or
xorl
mov
push
stos
pop
popf
push
xor
xchg
and
add
sahf
cmp
outsl
and
push
sbb
nop
mov
ja
aaa
mov
imul
cmp
xchg
dec
cld
add
jp
lock
jmp
pop
add
mov
add
dec
mov
push
pop
sarl
ds
push
roll
xchg
sbb
popf
pop
test
rcrb
push
add
nop
ror
adc
push
pop
inc
clc
cmpsb
xlat
test
sarb
ja
addb
call
or
loope
pop
mov
sub
mov
mov
xchg
mov
mov
cli
dec
fucomip
pop
xor
fwait
add
pusha
fmull
or
xor
dec
mov
movb
dec
pushf
adc
lea
lock
add
add
ljmp
add
out
xchg
inc
jg
mov
cmp
stos
gs
mov
mov
incb
dec
popa
mov
xchg
xchg
fisubl
add
or
loop
stos
push
sbb
stos
rcll
mov
xlat
sub
jne
add
cmc
adc
jl
push
mov
adc
sbb
push
leave
ret
or
dec
test
js
inc
xchg
xchg
mov
pop
rorl
iret
ret
jl
add
insl
cmpsb
push
test
add
js
sub
mov
jge
scas
clc
repz
mov
pop
cmp
xchg
pop
add
mov
fiaddl
pop
inc
inc
adcl
sahf
add
mov
lret
popl
lds
leave
dec
fwait
xchg
sahf
mov
push
out
mov
adc
in
add
andl
frstor
roll
adc
repnz
sahf
into
add
stos
xchg
ljmp
cwtl
movlps
xchg
out
orl
jmp
inc
loopne
in
andb
adc
mov
data16
sub
add
push
rcrl
mov
sub
cmp
xor
in
adc
xor
cmp
fs
sub
insl
mov
inc
and
jne
cmc
or
stos
cmpsb
sbb
add
stos
pop
nop
add
mov
mov
movsb
mov
jp
xorb
repz
test
popa
into
les
pop
das
push
push
sbb
xchg
repz
ds
inc
cmp
jnp
and
pop
xlat
in
xchg
cmp
ljmp
lcall
and
push
dec
shl
push
fistpl
cwtl
bound
add
mov
out
pushf
stc
cli
popf
scas
sbb
stos
out
xor
rcl
mov
xlat
lock
cmp
lods
cmpsb
daa
add
mov
xor
and
or
in
sbb
out
mov
xor
add
or
and
xchg
xchg
jnp
inc
outsb
enter
jge
adc
out
mov
mov
xchg
mov
pop
xchg
out
add
clc
dec
jl
mov
or
filds
add
dec
or
add
jge
nop
xor
cmp
adc
popa
scas
cmpsl
add
or
dec
pop
add
enter
jnp
cmc
sbbb
pop
jne
add
xchg
negl
pop
sahf
lcall
sbb
aaa
cli
and
mov
clc
cmp
add
mov
fsubp
cmpsl
add
imul
dec
out
int
add
nop
fmulp
sub
add
xchg
fucomi
add
sti
or
rol
and
adc
sbb
add
sbb
lret
nop
pop
mov
add
mov
mov
jecxz
sub
add
mov
sbb
iret
lahf
add
lock
js
divb
sbb
ror
jl
and
mov
daa
add
leave
or
mov
jge
mov
shlb
nop
push
sub
xchg
loope
push
aad
inc
add
out
lret
mov
adc
push
push
scas
incb
sub
dec
pushf
fs
std
mov
lods
testl
dec
fistpll
sti
in
xor
mov
testl
mov
add
xor
inc
lea
dec
sbb
add
sbb
fs
orl
rcrb
sub
and
add
fcmovbe
jbe
shrb
cltd
mov
into
lahf
cmpsb
and
bound
mov
arpl
mov
jp
sub
xchg
nop
add
xchg
or
pusha
and
pop
cmp
adc
mov
icebp
inc
out
scas
lcall
pop
push
aas
add
je
xchg
or
dec
add
pop
shlb
subb
or
btr
xchg
cmp
roll
adcl
sub
mov
lahf
stos
lds
sbb
cmp
dec
xor
lock
lods
xchg
mov
mov
or
xor
lahf
mov
pop
ret
add
imulb
addl
xor
push
and
loopne
imul
inc
cmp
add
cmp
push
dec
add
and
xchg
leave
add
or
add
jo
push
mov
std
mov
dec
leave
movsb
into
in
add
fistl
mov
shll
sti
adc
cmp
arpl
push
mov
out
add
in
inc
xorb
add
adc
xor
std
mov
fstpt
sub
test
shll
add
pop
mov
iret
inc
mov
arpl
std
add
jns
or
loopne
xchg
and
fidivrl
mov
mov
int3
jbe
dec
jl
sbb
xchg
out
add
add
xor
cmp
jns
push
mov
dec
and
out
inc
scas
add
add
add
jno
rorl
aad
stos
and
inc
inc
cmp
and
outsl
xchg
sti
data16
cs
adc
inc
add
mov
inc
or
andl
push
cmpl
sbb
sub
push
enter
ss
mov
mov
sbb
mov
adc
das
or
cmp
les
mov
das
aam
push
sbb
sub
sbb
cmp
out
or
push
or
test
mov
flds
push
adc
mov
adc
aam
ss
cs
xor
xor
inc
clts
aad
popw
fbld
or
ret
gs
andb
lock
xor
and
inc
inc
shrb
xor
xor
bound
lahf
mov
addl
xchg
sbb
or
xor
rcrb
test
or
xor
inc
cmp
test
or
adc
add
or
and
les
xor
sbb
inc
pop
pusha
and
or
inc
add
adc
sub
enter
dec
xor
adc
fs
cmp
imul
pop
rolb
or
and
aas
adc
cmp
dec
sbb
ret
xor
lahf
shlb
sub
and
aas
xor
cmp
dec
cmp
ret
aaa
add
ds
cmp
iret
dec
or
adc
xor
nop
sbb
popf
shlb
mov
sub
cmp
cmp
iret
dec
xor
cmp
xor
cmp
dec
or
ret
xor
lahf
rclb
sbb
and
aas
and
cmp
dec
sub
ret
xor
lahf
shlb
cmp
and
jg
ret
add
rorb
mov
aam
or
adc
push
and
aas
sbb
sub
dec
cmp
pop
xor
pop
ss
push
inc
addl
dec
or
enter
xor
shrl
adc
add
jno
push
daa
sbb
icebp
push
add
jb
sbb
and
jae
sbb
mov
xor
movl
and
sbb
mov
imul
add
cmp
testb
or
add
adc
sbbb
pop
or
stc
sbb
loope
sub
rorb
or
xor
sahf
sbb
adc
cmpb
mov
mov
ss
and
std
xor
mov
add
mov
and
add
decb
adc
and
and
mov
sbb
aas
xor
and
add
pusha
xchg
ret
mov
jnp
adc
in
cmp
sbb
cmpsb
and
push
pusha
or
loope
sbb
and
mov
sub
ret
lret
pop
cmp
add
mov
mov
adc
inc
push
cmp
jge
mov
sbb
cltd
push
dec
adc
xlat
push
psrlq
int3
scas
inc
inc
sbb
and
xor
roll
add
jmp
loop
xor
jecxz
in
popa
test
sbb
push
sbb
cmp
cmp
xchg
rcrb
bound
or
ss
dec
aaa
mov
pop
cs
fisubrs
sub
imul
aaa
cmp
jmp
cmpsb
add
iret
fstpl
inc
or
fmull
adc
dec
xor
add
nop
addb
lods
pusha
or
xor
xor
mov
mov
add
adc
ret
loop
mov
sar
cld
ja
adc
repnz
fdivrp
pushl
shll
jl
int
aaa
cld
mov
repz
lods
inc
or
push
cmp
sbb
pushf
ljmp
je
faddp
xor
mov
sub
js
add
xor
mov
subb
mov
cmp
popa
adc
inc
mov
sahf
jg
push
ds
xor
loope
bound
and
adc
push
inc
push
fsubrs
cmc
cmp
push
fs
or
lock
push
dec
mov
inc
in
adc
and
jp
sub
pop
or
pop
lret
sbb
test
arpl
add
adc
lods
push
xchg
sub
popf
inc
xchg
cli
mov
stos
out
cmp
adc
dec
aaa
sbb
push
and
out
in
add
es
in
pop
jmp
aas
lods
or
mov
pop
cmpsb
mov
lods
mov
pop
push
add
jns
and
push
fadds
xlat
jne
adc
rolb
and
inc
mov
rol
idivl
les
test
mov
iret
iret
cltd
add
push
cmpsb
add
lock
mov
insl
scas
insb
pop
cli
outsl
adc
sbbb
sub
cmp
mov
add
pop
inc
add
and
je
push
add
ljmp
add
or
inc
add
mov
xor
gs
cmp
outsb
icebp
add
nop
roll
lar
enter
mov
add
sti
cmp
enter
sub
mov
sbb
mov
cld
xchg
xor
shl
movsb
xorl
sub
sbb
and
add
jecxz
inc
mov
scas
cmp
add
push
in
mov
jl
or
adc
inc
jp
xor
lahf
inc
sub
mov
aas
inc
add
mov
addl
out
adc
leave
addb
mov
lret
cmp
and
cs
mov
pop
stc
add
roll
mov
stos
sub
mov
mov
int3
sub
out
mov
dec
mov
inc
loope
push
enter
stos
les
add
dec
adc
sub
add
pushf
filds
cli
cltd
push
pop
sub
xor
jnp
adc
xor
jo
mov
in
dec
loope
pushf
add
jmp
inc
std
popa
movsb
push
cmp
dec
ss
cmp
add
sbb
add
outsl
cmp
add
jl
in
jnp
js
ja
and
out
fdivrp
mov
sub
mov
sti
lahf
add
xor
shlb
cli
lock
cmp
js
inc
stc
pop
pop
sub
lock
add
push
scas
les
ret
adc
add
mov
mov
lds
lea
je
add
xor
clc
iret
pusha
push
pop
cmp
incb
and
out
dec
fcomps
shrl
xor
sti
add
xor
enter
sub
adc
jo
das
add
sarb
add
mov
and
test
pop
fs
push
adc
or
faddp
and
insb
in
adc
xchg
loopne
add
dec
sti
jae
scas
pop
ljmp
cs
inc
mov
add
movsb
lea
sub
inc
test
and
or
leave
push
popl
sbb
cwtl
rolb
shrl
das
or
sbb
lds
add
stos
push
add
cli
and
add
add
inc
es
rcll
mov
sbb
or
xchg
cld
stos
push
mov
and
rcrb
push
adc
mov
add
addr16
mov
in
mov
jmp
rolb
clc
popf
sub
ljmp
sub
notb
imul
pop
out
je
out
adc
shll
js
add
or
add
icebp
pop
or
divl
dec
push
shl
adc
xor
jbe
add
fldcw
xchg
dec
dec
add
mov
cmp
or
adc
orl
and
inc
push
jmp
adc
jbe
and
imul
aad
aas
mov
iret
addr16
add
mov
scas
cwtl
inc
xor
shlb
mov
clc
jle
mov
sub
loop
inc
outsl
cmp
lea
xlat
mov
add
repnz
xor
movsb
add
ret
sbb
add
xor
add
adc
nop
xchg
add
jecxz
mov
inc
xlat
xor
jno
xchg
cwtl
xchg
pop
lahf
or
movsb
roll
adc
gs
inc
movsl
dec
cmp
jbe
add
xor
fsubrp
add
inc
int
add
mov
pop
xchg
mov
mov
ss
lcall
cmc
rolb
cmp
or
mov
and
push
js
js
orl
add
pop
jne
sub
ret
into
insb
xchg
adc
add
mov
faddl
hlt
std
cmpsb
mov
cmp
add
add
repnz
jmp
pop
inc
sbb
pusha
test
fwait
mov
ds
mov
inc
adc
or
shll
mov
sub
inc
cmp
push
sub
push
mov
and
adc
cmpsl
mov
sub
add
out
in
mov
mov
lock
imul
cmp
add
mov
loop
jl
popa
add
mov
mov
jmp
mov
mov
add
sbb
mov
xor
movl
jge
xchg
dec
in
lret
and
inc
sub
push
loop
xchg
or
mov
add
add
stos
inc
test
or
outsl
add
add
into
mov
movsb
dec
sub
add
or
negb
rcrb
jo
aad
rcr
add
mov
neg
jbe
add
int
push
xchg
mov
mov
pop
les
js
out
and
shr
mov
jb
cwtl
add
dec
mov
add
lods
shlb
xor
ucomiss
rclb
std
mov
add
les
aaa
decb
add
mov
sub
or
and
mov
or
call
cmp
sub
or
xchg
mov
lock
jg
xchg
xlat
fs
dec
sub
loopne
push
jnp
call
fnstcw
add
xor
and
mov
imull
xchg
jne
pop
add
jg
xor
sbb
popa
pop
cmc
fstpt
add
and
adc
inc
and
add
jo
hlt
jecxz
js
and
add
xchg
pop
outsb
xchg
mov
cmp
inc
push
or
nop
adc
fs
call
test
jge
daa
dec
pusha
mov
cmpsb
jl
leave
clc
aas
push
out
dec
ljmp
mov
sbb
mov
add
mov
mov
fld
cmp
cmp
in
or
mov
lock
fmull
add
sbb
dec
xor
inc
dec
and
mov
ret
fmul
les
push
mov
add
clc
mov
in
add
jns
sbb
push
fwait
and
imul
xchg
scas
test
fcmovb
lock
mov
icebp
movsl
adc
inc
push
push
inc
mov
jae
mov
popf
mov
mov
icebp
dec
shrb
xor
push
pop
jle
lea
data16
sbb
add
ret
sbb
ret
xchg
inc
cmp
test
mov
jge
ss
mov
jg
xor
adc
jb
mov
ret
push
fwait
iret
mov
rclb
or
push
out
cmp
sbbl
enter
dec
sbb
sbb
add
aad
mov
fmull
mov
inc
add
xor
add
pop
pop
stc
pop
lret
aaa
push
or
xchg
cmpsl
fwait
scas
xor
xchg
nop
pop
lahf
mov
jno
je
rcrl
in
xchg
hlt
in
xor
ja
inc
lcall
sbb
mov
pop
sub
jbe
stc
add
addb
out
jmp
sbb
add
aaa
insb
sub
pop
test
xchg
fld
push
add
mov
add
loopne
test
add
or
mov
inc
sbb
inc
mov
fwait
es
xor
mov
adc
sbb
shl
adc
sub
insb
mov
add
jmp
jl
push
outsb
loop
in
push
or
add
rcrb
mov
pop
clc
and
iret
je
addl
loope
add
mov
lods
inc
es
mov
mov
adcl
mov
inc
std
lahf
adc
sbb
test
rorl
jne
or
gs
ja
or
sbb
lea
add
lahf
xor
or
cs
test
xor
add
lds
scas
mov
stos
and
and
xor
push
mov
inc
sub
push
and
ljmp
sub
aad
xchg
in
loope
add
mov
decl
sub
outsb
mov
rorb
rcr
sub
push
or
adc
test
sub
add
scas
push
test
stos
inc
call
orl
insb
movsl
hlt
and
jne
and
jg
dec
dec
sub
inc
jae
ret
adc
cltd
add
dec
popf
cmp
inc
stc
gs
outsb
jns
adc
decb
add
out
xchg
add
test
andl
or
in
pop
pop
icebp
clc
shr
into
and
lea
xchg
or
xor
add
jae
mov
add
inc
rcrl
inc
ret
inc
sbb
rcl
dec
sti
rolb
mov
cmp
ret
dec
pop
xlat
sbb
cli
int
push
in
cld
cmpsl
outsl
xor
ret
das
outsb
sub
sbbb
inc
add
icebp
movl
ljmp
add
pusha
mov
mov
push
daa
js
inc
add
je
jmp
pop
push
test
aaa
xor
aam
sub
cltd
dec
add
mov
cmpsb
fld
sub
outsl
test
add
jl
add
lds
lock
scas
orl
out
or
add
test
xorl
gs
stos
and
mov
inc
lret
stos
repnz
adc
push
shlb
push
fadds
ss
xor
addl
jns
push
jge
and
stos
subl
adc
es
movl
xchg
pusha
test
nop
fmulp
xchg
inc
add
das
push
add
dec
jge
add
adc
fldenv
pop
jp
inc
push
les
pop
verr
xor
add
scas
mov
rcrl
ja
in
xor
add
and
cmc
fadd
aad
ficomps
push
cmp
add
std
fwait
adc
insl
push
mov
pop
pop
and
iret
add
daa
out
sbb
push
add
cmpsl
pop
xchg
jge
call
add
fildl
xor
and
adc
add
lcall
inc
out
push
iret
loopne
in
cld
lret
sub
test
mov
lods
add
call
cmc
lods
xor
pop
iret
and
add
mov
jmp
in
mov
dec
pop
lret
push
add
jo
cwtl
pop
hlt
pop
or
cltd
dec
mov
add
loop
aad
xchg
or
mov
jmp
test
and
mov
ljmp
add
pop
mov
aaa
std
fsubp
add
cmp
cli
addps
lcall
popa
add
or
mov
iret
outsb
pushf
repnz
imul
addr16
and
dec
jmp
mov
shll
push
add
subb
mov
cld
fmull
mov
inc
imul
pop
pop
add
rorb
jns
dec
adc
ljmp
lcall
ret
loopne
xor
inc
add
adcl
add
mov
movups
adc
dec
into
xchg
notb
xor
push
push
inc
hlt
mov
rclb
sub
ficoml
fmuls
addr16
push
inc
rclb
jae
add
push
mov
lea
sbb
movsl
aam
ret
and
sar
cmpsb
cmp
push
dec
lock
cmpl
stos
or
mov
mov
insl
add
pop
in
add
test
pop
stc
dec
das
mov
pop
mov
and
cmovae
aaa
push
imul
inc
dec
and
js
loopne
add
popf
sub
mov
or
push
mov
fs
pop
js
mov
add
mov
xchg
or
and
inc
in
mov
xor
push
push
dec
add
ret
sahf
adc
push
cmc
dec
ret
mov
push
repz
jg
dec
add
xchg
js
inc
push
lock
xor
les
sbb
pop
jl
in
test
loope
xchg
mov
mov
addb
sti
cmp
mov
xor
scas
inc
int
clc
and
dec
inc
mulb
test
repz
push
xor
gs
sbbl
cmp
fcmovbe
and
add
sub
aas
mov
insb
cli
mov
mov
mov
jge
xor
mov
pop
mov
jp
fstpl
aaa
lods
dec
and
jl
push
xchg
test
cmpsb
mov
fnstenv
scas
cwtl
rorb
or
and
adc
cmp
lock
lea
add
int3
lahf
sub
in
lds
subb
fisttpll
mov
cmp
andb
sbb
repz
add
adc
adc
add
dec
test
pusha
popa
jno
into
rcrl
xchg
ret
or
inc
mov
stos
cs
mov
rorb
add
mov
icebp
xor
adc
sbb
loop
jmp
push
shrb
add
push
pop
jbe
loope
mov
add
push
sti
dec
pusha
push
les
xor
xchg
add
cmp
fwait
add
outsb
in
fnstenv
adc
add
xor
inc
xchg
xor
jns
dec
sbb
xor
mov
push
add
xlat
xor
mov
push
fists
mov
mov
rcl
push
insb
dec
or
aas
xchg
add
sarb
sub
aam
xorb
xor
rcrl
lods
add
lods
popl
int
push
add
xor
mov
add
add
and
mov
sahf
xchg
pop
pop
add
lcall
insb
inc
inc
sbb
jmp
or
xchg
adc
ret
adc
pop
test
fnsave
pop
loop
adc
dec
ljmp
insl
mov
repnz
cs
push
lds
mov
insl
push
cwtl
push
fldl
ret
pop
mov
addl
lds
aad
pushf
inc
add
adc
rcr
lahf
fwait
roll
or
mov
inc
fiadds
js
lods
sub
in
mov
ret
sbb
xor
sub
mov
add
lcall
push
inc
mov
outsb
add
push
add
shl
iret
add
push
inc
xor
test
and
xchg
cmp
dec
jg
cwtl
jge
and
ja
test
icebp
negl
iret
push
and
arpl
aad
sub
pop
jge
mov
imul
lea
xchg
add
fwait
out
dec
push
rorl
xchg
and
add
pop
pop
mov
fwait
movsb
loope
lcall
arpl
pusha
mov
inc
or
test
jl
lcall
add
or
add
jecxz
adc
mov
inc
movsb
and
loop
icebp
and
cmp
and
jl
rclb
push
mov
xorb
test
arpl
cmp
add
mov
xchg
sub
xor
lods
mov
adc
jo
push
and
scas
xchg
and
pop
lret
lods
in
add
popa
fisubrs
aaa
into
mov
in
stc
and
inc
int
sbb
adcl
das
dec
inc
scas
iret
out
sahf
inc
push
push
in
lcall
or
ret
mov
hlt
cwtl
push
adc
call
jmp
sub
push
jno
in
fmuls
and
dec
fldl
push
pop
lods
bound
adcl
fmul
mov
jb
cmp
cltd
cld
sub
bound
movb
pushf
cmp
ret
in
jmp
push
ss
faddp
leave
test
cmpsl
data16
sbbb
aad
ss
jo
and
sbb
stos
add
xchg
fcompl
sub
test
cmp
mov
adc
mov
xor
mov
jmp
mov
xchg
fistl
sub
push
push
loop
daa
jg
sub
xchg
stos
pop
or
mov
jno
out
daa
dec
dec
int
iret
inc
sub
xchg
mov
aam
lods
aaa
addl
loop
mov
ds
stc
add
pop
out
jecxz
adc
jge
scas
add
push
mov
cmpsb
in
lock
mov
das
aad
cwtl
cmp
es
adc
pop
aaa
or
push
std
add
stc
in
aam
fldl
jge
popf
movsb
mov
sbb
xor
dec
cmp
ja
out
and
fmul
add
push
dec
cmc
test
test
add
sbb
add
int3
negl
das
and
lds
add
push
ljmp
in
fcmovbe
clc
rolb
lds
mov
mov
add
jb
or
insb
shll
mov
pusha
add
inc
imul
lods
mulb
mov
in
xor
test
ret
clc
adc
insb
in
or
sub
jl
into
or
add
xchg
pop
jae
cmp
dec
and
cld
xor
lods
pop
sub
push
xlat
push
cmp
cmp
fisubl
movsl
add
int3
mov
int
push
incb
pop
add
and
sub
fwait
rol
push
xchg
movl
adc
mov
push
mov
in
sbb
test
daa
outsb
mov
insb
add
pop
push
out
adc
sub
dec
andb
jbe
or
mov
test
cmp
jo
add
in
dec
outsb
inc
push
add
leave
pop
jno
mov
int3
test
ret
mov
shrb
int
pop
call
add
adc
lds
aam
and
int
pop
and
push
add
add
fadds
insl
inc
mov
and
push
jl
and
cltd
pop
xor
dec
leave
mov
add
sub
insl
stc
outsl
lea
unpcklps
jns
inc
mov
rolb
jmp
stc
xor
into
push
pop
and
adc
dec
pop
xchg
js
lock
xor
and
or
iret
inc
out
in
fwait
and
faddp
or
subl
and
inc
push
addr16
incb
iret
loop
xlat
push
popa
aad
cmp
out
lods
push
sub
leave
or
pop
sahf
sti
lock
add
mov
cmp
sbbb
js
inc
ljmp
push
xchg
and
add
add
xor
movd
das
stc
fidivs
mov
pusha
mov
add
movb
sbb
dec
fsubl
pshufw
and
loopne
retw
cmp
push
add
dec
pop
pop
sub
fsubrl
in
fcmovnbe
imul
mov
inc
adcl
push
xchg
cmp
jne
jmp
imul
insl
jbe
pop
stos
cmp
shl
pop
push
push
inc
orb
repnz
pop
xlat
dec
divl
stc
psubb
icebp
inc
xchg
stos
mov
scas
sub
jo
aaa
xor
nop
adcl
cmp
ret
pop
rorl
jmp
sbb
jle
nop
test
je
enter
pushf
xchg
shll
mov
sti
sub
xchg
std
inc
add
add
adc
shrb
pop
mov
shlb
xchg
pop
popf
daa
test
sbb
mov
aas
pop
bound
fimuls
push
xchg
push
sub
test
hlt
pop
fimull
test
mov
mov
push
mov
adc
cmp
add
jo
mov
push
ss
adc
push
fisubrs
ss
loopne
andl
adc
shll
add
cld
and
add
adc
call
mov
inc
add
xorb
add
or
shlb
adc
push
int
xchg
inc
push
adc
pop
mull
pop
out
cs
add
xchg
and
inc
add
or
pop
dec
add
shlb
add
call
pop
xor
cltd
stc
cmp
mov
rorl
mov
ss
sbb
mov
cmp
sub
iret
dec
cmp
cmp
pop
ds
push
add
imul
aam
test
jecxz
xor
ljmp
stos
out
imul
sbb
mov
aaa
fucomi
out
push
aas
es
shll
hlt
js
add
or
sub
repz
add
adc
fnsave
scas
or
je
dec
orl
pop
add
sub
in
jmp
cmpsl
inc
mov
or
icebp
ss
ret
dec
push
scas
mov
sub
pop
mov
sti
arpl
outsl
xor
cmp
rol
shr
int3
fisubl
add
pushf
js
out
iret
nop
rcr
lahf
dec
add
xor
mov
add
imul
dec
lret
pusha
or
jno
add
xor
adc
dec
lods
insl
mov
dec
lea
xor
sbb
xor
clc
cmpsb
es
jl
lds
add
push
mov
mov
sub
jo
adc
mov
jg
mov
lret
pop
and
cvtps2pi
push
or
xor
into
mov
pushf
sahf
cmp
les
insb
pop
inc
jmp
into
cmp
fcoms
push
in
ljmp
pop
bound
mov
add
lahf
out
stos
popf
jo
mov
xor
jbe
fiaddl
sarb
cmp
call
scas
add
daa
push
xor
shlb
push
mov
cmc
push
mov
into
mov
insb
push
sahf
jp
mov
fs
add
movsl
add
add
int
out
incl
add
xchg
xchg
enter
jp
mov
inc
fildll
and
imul
mov
adc
jb
test
imul
add
mov
test
adc
in
xlat
outsb
add
gs
rolb
addl
dec
and
ja
outsl
call
xchg
adcb
add
or
xor
bound
cmp
mov
sub
mov
leave
rcrb
lahf
dec
add
ret
xor
loope
lds
add
ja
stos
enter
iret
jl
sub
loopne
andl
call
repz
daa
sbb
mov
out
and
jnp
add
sbb
and
sub
sub
jmp
pushf
mov
jbe
jle
jne
out
mov
cmpsb
adc
push
and
lret
fildl
adc
sbb
shrb
ficoms
andl
adc
cmc
adc
xchg
add
mov
xor
hlt
call
addr16
add
jge
imul
hlt
or
cmpsb
push
dec
xchg
sahf
sub
mov
addr16
lcall
cmc
xchg
lods
aad
stos
js
mov
add
cmp
jmp
jns
inc
push
add
cmp
push
icebp
shlb
inc
or
nop
mov
insb
xchg
aam
cmpsb
gs
dec
mov
sbb
xor
sub
pop
insl
js
outsb
fiadds
pushw
xchg
and
jl
xchg
mov
mov
add
cltd
or
test
cmp
not
std
mov
data16
adc
or
ret
lods
pop
and
add
sbb
ret
cld
cmp
fistpl
jge
ja
dec
adc
dec
dec
xor
push
test
pushf
ljmp
cmp
jno
in
popf
add
jp
std
hlt
cmp
fwait
jecxz
inc
push
inc
ds
dec
jp
push
xor
in
out
dec
adc
dec
xchg
pushf
pop
adc
les
jns
jae
add
sbbb
ret
mov
test
cmpsl
jne
mov
push
cmp
aam
xor
push
dec
dec
adc
outsb
leave
xor
mov
dec
adc
gs
into
out
sbb
movsl
jno
dec
nop
jno
xor
add
in
xchg
pop
sbb
sub
pop
rcll
ss
cmc
jae
int
in
stos
add
out
mov
and
cmpb
cmp
inc
data16
sub
mov
jge
scas
int3
jle,pn
stc
roll
inc
sub
or
call
and
dec
mov
jae
adc
aaa
dec
iret
shll
jle
test
adc
clc
fs
shlw
xor
jecxz
das
mov
adc
add
cmp
xchg
xchg
sbb
add
and
ds
mov
xchg
in
aad
xchg
xchg
and
cmpsb
push
sub
jb
iret
movsb
and
mov
adc
add
pop
aad
fadds
movsb
mov
pusha
cmpsl
rclb
in
mov
insl
dec
rolb
and
jp
pop
pushf
shll
pusha
push
add
mov
out
popf
sbb
add
push
nop
inc
add
jno
jno
xchg
push
stos
add
aad
pop
add
into
jb
test
push
xorb
popf
imul
and
popa
cmp
sbb
cmp
cs
inc
pushf
jno
lds
mov
call
cmp
icebp
inc
or
rorb
xor
rorl
scas
into
or
sarb
add
jecxz
nop/reserved
xor
dec
jp
notl
mov
jo
pop
push
mov
gs
sbb
sbb
cmpb
clc
out
test
inc
frstor
push
add
xchg
mov
aam
and
add
clc
ret
push
add
jp
mov
fimuls
jmp
jg
loop
jl
xor
mov
jae
nop
xchg
arpl
cmpl
fcoms
aad
addb
mov
push
pop
push
mov
inc
xchg
cwtl
movsl
inc
jne
mov
xor
cmp
sub
jg
test
sbb
fiadds
mov
pop
add
add
pop
cmpsl
mov
pop
in
das
adc
std
sub
call
add
add
cmp
mov
mov
and
mul
jae
sub
push
jge
push
pop
add
clc
es
inc
cmp
xor
pop
lcall
shlb
leave
add
xchg
inc
push
stos
mov
imul
pop
xchg
scas
insb
jbe
or
aaa
push
icebp
or
call
fists
xor
or
sub
and
jo
das
mov
pop
lock
ret
int3
sbb
arpl
loope
inc
add
ficompl
dec
inc
sti
shlb
add
xchg
mov
adc
jge
jbe
shr
repz
mov
cmp
push
add
sarb
out
sub
sub
push
into
mov
nop
inc
sub
lods
sub
stc
xor
adc
loope
cmp
adc
jmp
xchg
xor
jg
inc
sub
add
xchg
and
inc
rolb
xchg
nop
sub
addb
rcr
or
add
push
xchg
and
xchg
adc
inc
sbb
xchg
std
inc
into
ret
cmc
lods
cltd
inc
stos
leave
xor
xor
shl
add
dec
cmp
stos
pop
pushf
push
jne
mov
nop
cmpl
mov
cmc
sarb
sub
pop
jnp
cli
loopne
ret
movsl
fadds
dec
les
leave
pushf
mov
in
inc
or
loopne
inc
xor
fnstcw
out
mov
sub
jno
push
test
pop
rclb
jecxz
movsl
jp
mov
cmp
add
imul
rorl
cmpsl
pop
jbe
xchg
pop
xor
iret
pop
sti
jo
leave
fwait
push
dec
and
sub
dec
cmp
sub
cwtl
in
inc
pop
addl
pop
aam
inc
mov
pop
add
fwait
repnz
faddl
repz
push
movsl
clc
ds
ret
jmp
or
repnz
inc
jp
in
sbb
and
cmc
fdivr
leave
shlb
sub
jbe
jge
loopne
and
xchg
popf
or
les
ret
pop
popa
add
dec
jns
es
mov
cmp
mov
add
repnz
ja
add
mov
bound
mov
add
subb
add
xor
rorb
sub
aam
pop
sub
mov
xchg
or
add
loope
mov
xor
pop
dec
pop
push
fmull
sbb
jp
sub
int
imul
jns
mov
insb
inc
rcr
cmp
popa
add
lea
push
push
imul
insb
ds
out
xchg
add
movsb
xor
inc
inc
cmp
mov
push
push
pop
popa
mov
arpl
cmp
add
pop
push
and
mov
dec
jl
icebp
in
or
sbb
loope
imul
mov
out
mov
jg
add
loopne
add
xor
add
rcrb
loope
mov
mov
enter
add
add
jmp
cmp
mov
cmp
dec
outsl
lds
sub
cmpsb
adc
cmp
add
cmp
xor
dec
aad
inc
mov
insb
xchg
movsb
out
sub
imull
sub
loopne
add
hlt
clc
stos
repz
pop
fdivrs
add
into
nop
inc
inc
andb
xor
push
or
sub
movsl
dec
or
fsubrl
out
and
pop
mov
movl
xchg
mov
mov
inc
sub
push
shlb
clc
jae
testb
cwtl
pop
xchg
dec
sbb
mov
add
in
push
adc
push
aaa
orl
icebp
stc
mov
aam
add
jno
cmp
push
cld
mov
lret
ret
scas
xchg
push
xor
rcll
lods
popf
mov
xchg
inc
sbbl
out
add
js
mov
aas
cmpsb
das
enter
movsl
fstpt
adc
pop
addl
add
inc
or
jo
ds
test
sbb
lcall
and
loopne
inc
xorl
pop
mov
repz
loope
movsl
or
jnp
idiv
add
cmpsl
mov
and
test
pop
add
repnz
mov
rcll
inc
xor
cs
and
add
addr16
into
dec
lds
test
xlat
sbb
cmp
add
loope
cmp
add
fisubl
call
jae
adc
repnz
adc
pop
push
inc
cmp
adc
je
add
xlat
adc
jp
push
aam
test
lods
stos
jl
ljmp
dec
in
and
sti
pop
fistpll
and
xchg
adc
aam
rorb
clc
cmpb
jl
aam
xor
inc
addb
inc
dec
xor
or
mov
movsl
jb
mov
inc
add
pop
sub
insb
fsubs
add
test
movsb
xor
add
mov
xchg
test
mov
xor
push
adc
js
or
dec
sbb
adc
sub
xchg
into
fiadds
add
or
lea
mov
adc
xorb
sub
test
push
push
leave
or
mov
cmp
mov
imul
adc
add
xor
add
jo
mov
mov
fbstp
mov
add
mov
mov
leave
cmp
xor
sub
pop
add
fs
cmp
movsb
mov
out
dec
or
jb
mov
out
sub
das
xchg
jle
aad
hlt
dec
add
xchg
mov
mov
js
test
cmp
fidivrs
into
testb
enter
xor
push
mov
addl
mov
sub
insb
cmp
decl
clc
loop
or
mov
xor
sbb
adc
stos
xchg
dec
scas
out
cmp
mov
or
push
ret
je
add
faddl
mov
loopne
ret
pushf
push
add
jp
les
inc
ds
inc
out
lods
iret
and
and
adc
sub
ljmp
push
lods
das
inc
pop
add
data16
add
lods
jmp
out
sub
push
add
leave
andl
mov
movsb
xor
mov
mov
inc
or
stos
sbb
hlt
aad
cmp
add
leave
mov
and
rorl
aaa
aas
pop
mov
add
into
dec
mov
mov
and
jno
test
arpl
cmp
jb
and
push
push
xchg
scas
add
jo
xor
es
push
cmpsb
mov
push
add
jnp
dec
shlb
mov
pop
push
add
ljmp
add
lods
in
add
pop
sarb
sub
add
fiadds
ljmp
xor
dec
push
stc
lock
ret
into
test
imul
cmp
in
cltd
cli
add
and
out
cmc
pusha
int
xor
inc
sbb
and
inc
fs
add
imul
jg
fisubs
jbe
sbb
mov
aam
jp
inc
push
movsl
cmp
daa
jno
mov
ljmp
stos
sub
fbstp
mov
lea
dec
inc
add
lods
pop
test
out
jne
outsl
xchg
cmp
mov
out
loopne
inc
xchg
mov
mov
dec
push
inc
repnz
push
or
pop
pop
pop
mov
and
sub
jne
bound
or
lret
xchg
adc
outsb
fisubs
or
leave
stc
sbb
movsb
push
prefetcht2
ret
int
ja
add
adc
je
call
xchg
inc
add
pop
pop
add
jmp
out
loop
cmp
test
sbb
fbstp
add
lock
cmp
or
sbb
add
xchg
xchg
out
push
push
inc
xchg
add
cld
pop
dec
cmp
mov
sbbb
add
jp
aam
sub
push
add
daa
imul
pop
dec
adcb
add
fcomp
inc
mov
push
inc
lods
leave
inc
stc
sub
call
loope
mov
or
fs
icebp
js
aas
add
ret
add
jp
xor
fiaddl
fcmovnbe
dec
pop
add
pop
adc
das
lock
xor
inc
scas
out
jne
xchg
lcall
outsb
xchg
and
inc
cmp
and
js
sti
aad
xchg
sub
roll
and
jns
add
inc
andb
aas
ja
in
jecxz
sbb
fwait
and
push
std
sub
push
jnp
hlt
push
or
pop
cmp
and
popa
push
ror
xchg
das
mov
scas
or
lahf
mov
xchg
hlt
xor
not
movsb
in
lret
mov
stos
sub
cwtl
add
push
fiaddl
loopne
mov
scas
cld
push
ja
jb
mov
loopne
inc
cmp
add
jnp
shrb
sub
andb
sbb
gs
sbb
mov
cmp
testl
jno
shrl
xor
push
mov
adc
test
push
push
jno
inc
lahf
cmp
xor
pushf
or
insl
add
das
shlb
xchg
int
ds
testb
pop
daa
jg
xor
or
aad
cmp
lret
mov
mov
loope
and
iret
lcall
push
ja
movl
adc
mov
push
mull
pushf
mov
cli
into
mov
mov
popf
incl
pop
add
mov
cmp
ret
ficoml
dec
mov
cmpsl
jno
iret
bound
data16
add
inc
ret
fistpl
push
aam
mov
xor
mov
dec
inc
sub
or
inc
sub
mov
dec
movsl
mov
jb
cld
hlt
xor
pop
jg
inc
add
leave
adc
add
add
xchg
xchg
jmp
rcl
mov
cmp
mov
hlt
aas
add
jns
bound
sbb
push
iret
into
inc
sub
pop
xor
out
add
sub
add
nop
inc
adc
ljmp
xlat
sarl
fisttpll
stc
cmp
cmpsl
adc
inc
fsubrp
inc
fs
and
jbe
mov
hlt
mov
mov
adc
movnti
fwait
adc
out
gs
jb
mov
mov
and
jp
sahf
cmp
fwait
xor
adc
xchg
shll
xchg
adc
dec
or
dec
cmp
mov
xchg
dec
mov
ja
ds
aad
xor
jns
inc
fiaddl
lods
xor
push
imul
jp
shll
ja,pn
xchg
mov
shr
and
outsb
lock
sub
outsl
in
in
xor
into
xchg
jb
push
adc
dec
ljmp
add
pushf
leave
xor
insb
pop
popa
xchg
imul
jns
stos
lret
adc
inc
lahf
sbb
push
cmp
mov
scas
mov
in
push
push
xorl
and
insl
mov
and
xor
ss
subb
dec
aam
stc
and
dec
xor
testl
mov
jae
push
inc
jo
loopne
inc
lcall
cmp
inc
push
loop
add
add
and
dec
les
add
fiadds
cmp
xchg
adc
call
and
lret
dec
lret
in
orb
push
scas
push
and
mov
js
rcrl
lods
sub
mov
icebp
pop
outsb
mov
sbbl
inc
push
mov
fldt
out
xchg
add
loope
mov
add
leave
es
mov
xchg
out
sysenter
bound
add
add
and
mov
pop
add
aam
test
push
outsl
mov
into
add
and
inc
enter
pop
and
test
out
lds
cmp
inc
mov
mov
out
popa
mov
add
pop
lods
xchg
sub
roll
dec
pusha
sahf
jl
in
cmp
in
lahf
xchg
rclb
inc
push
add
sub
or
jbe
xchg
cmp
fldl
mov
xor
add
lods
push
xchg
ret
test
inc
add
popf
push
ja
dec
in
loopne
ss
and
fisttps
or
jmp
inc
pop
sbb
sbb
stc
cmp
push
or
fwait
cmp
mov
inc
out
xor
and
in
push
add
mov
cmp
add
js
insl
into
sbb
and
sub
jbe
ss
mov
cmc
and
dec
movsb
loope
adc
popa
gs
test
xorb
fsubl
inc
jne
test
push
rcll
repz
inc
movsb
sub
aam
and
mov
stos
je
pusha
fdivrs
add
xor
cmp
cmc
in
rcrb
popf
push
shl
mov
and
dec
add
adc
push
ljmp
lcall
arpl
dec
and
loopne
aas
inc
sub
add
cltd
mov
lahf
lea
cmp
add
fistl
jp
jne
sub
pop
pop
or
add
popf
mov
add
dec
orb
shlb
cwtl
stos
in
push
dec
or
xchg
and
rcr
mov
mov
in
jno
dec
xor
pop
push
add
dec
pop
mov
dec
jne
add
jbe
mov
cmp
pop
mov
cmpsl
cmc
stos
das
sbb
xor
cmp
repz
fstpl
cwtl
add
pop
mov
pop
add
jnp
xchg
dec
loop
add
mov
popf
mov
inc
jnp
xor
add
mov
jmp
mov
out
add
add
repnz
add
xchg
iret
lds
mov
ljmp
jl
repz
call
test
add
orl
arpl
ret
mov
cmp
and
test
ret
mov
sub
jmp
scas
out
add
setne
pop
dec
push
imul
pop
sbb
jo
mov
dec
lret
ret
add
out
pop
movsl
call
outsl
cmp
cmp
lret
lods
xor
adc
jno
jmp
rcll
mov
dec
add
xchg
mov
test
pop
dec
jo
ljmp
mov
dec
pop
mull
ret
test
inc
mov
xor
add
stos
push
inc
and
cmp
clc
hlt
mov
or
scas
shll
push
mov
rcl
movsl
xor
mov
shll
cmp
add
push
mov
ljmp
jge
and
sbb
xchg
mov
add
dec
insb
mov
or
outsl
hlt
pop
arpl
sbb
stc
imul
cmpsb
push
les
dec
push
sub
inc
xor
icebp
add
adc
jg
and
jmp
test
aas
jb
and
mov
div
std
cld
inc
cmp
mov
jne
mov
push
add
jle
cmp
lods
dec
loope
movsb
push
and
xchg
adc
pop
clc
sbb
lret
mov
sbbb
in
and
push
pushf
xchg
sahf
ret
inc
xchg
xlat
jge
stos
or
incl
or
mov
int3
cs
into
mov
and
hlt
adc
insl
and
mov
sbb
pop
adc
cmp
fnsave
iret
sbb
push
pop
rcl
not
stos
xor
push
mov
adc
cmp
inc
jge
add
adc
inc
out
xor
cmp
inc
add
mov
inc
add
push
outsb
ret
xchg
mov
sahf
mov
outsl
ret
mov
in
les
cltd
divb
add
xor
aaa
loope
pop
test
inc
dec
add
cmc
fstpl
push
pop
add
sbb
jmp
cmpsl
mov
inc
lock
xor
test
pop
sub
add
dec
mov
int
xor
add
popf
leave
inc
ja
sarb
and
cwtl
pushf
test
jb
aaa
push
cmp
push
test
push
push
stos
scas
das
add
or
mov
jmp
insl
stc
into
mov
mov
push
jmp
repnz
inc
xor
xchg
add
pop
push
imul
cmp
stc
inc
xchg
sub
insl
dec
lcall
add
push
mov
push
std
cmp
inc
mov
in
xor
leave
xor
jp
sbb
add
int3
add
fistpl
adc
cmp
jmp
fidivrs
cmpsl
outsl
add
je
xchg
xchg
dec
mov
or
sub
inc
mov
xor
daa
cltd
push
ficomps
lods
mov
lea
mov
pop
mov
cmpl
mov
ret
and
and
mov
pusha
incl
scas
iret
mov
imul
xchg
std
sub
insl
rcrl
rolb
dec
add
int3
xor
mov
sahf
add
cs
lahf
add
push
in
xchg
add
test
inc
or
scas
add
and
sbb
imul
dec
add
ds
aas
lock
fisubl
lods
jb
sbb
dec
push
xor
ljmp
shrl
cmpsb
negb
daa
movsl
mov
lods
mov
fiadds
rorl
and
pop
and
add
xlat
cmpsl
ja
mov
popa
or
addr16
cmp
add
jbe
arpl
insb
xor
in
adc
dec
nop
xchg
popa
xchg
cmp
xchg
add
lods
ss
mov
or
push
add
icebp
add
mov
inc
rolb
xchg
out
pop
popf
dec
mov
xchg
add
call
stc
rolb
in
arpl
sub
mov
subl
sbbl
mov
or
cmpsl
push
jnp
sbb
mov
sub
xor
pop
sub
push
add
lods
xor
test
add
pop
jl
cmpps
rcrl
add
mov
sub
pusha
ret
push
cmp
dec
shrb
loope
orl
mov
add
cmp
stc
add
mov
xor
add
outsl
enter
xor
int
and
insb
leave
jp
popf
cmpsb
add
lods
call
leave
scas
push
clc
sbb
mov
push
mov
cmp
dec
inc
adc
int
push
das
xor
testb
xchg
xorb
pop
ficoms
das
aaa
popf
outsb
ret
test
and
popa
cmp
inc
aam
test
ds
adc
inc
jno
adc
mov
add
jae
and
cmp
xchg
cmp
sbb
mov
dec
sub
jae
sub
std
clc
mov
shll
enter
fwait
sub
add
jp
fcompl
or
into
mov
sbb
clc
ja
add
dec
or
xor
add
subb
add
pop
xchg
jae
ficomps
add
dec
popa
mov
add
fnstcw
gs
aam
sbb
fdivrl
sbb
mov
mov
push
mov
cmc
push
mov
xchg
jbe
add
adc
scas
mov
and
add
sub
xor
iret
push
loop
out
daa
mov
add
icebp
or
rcll
mov
je
xor
int3
add
mul
and
or
add
dec
dec
and
sbbl
scas
sub
push
outsb
cwtl
lods
adc
sbb
mov
out
xor
fwait
mov
adc
enter
into
ficompl
cs
pushf
in
adc
inc
jno
popa
xchg
xchg
add
adcl
mov
fimull
pop
decl
mov
push
bts
movb
mov
in
loope
add
add
mov
adc
fadds
shl
imul
repnz
inc
mov
aaa
cmc
cmp
inc
add
in
popf
fwait
inc
outsb
addl
dec
pop
mov
mov
mov
push
jmp
pop
add
inc
insb
mov
add
sub
rolb
push
out
int3
cwtl
mov
add
shll
and
insb
fmuls
xchg
jg
dec
mov
cmp
xchg
sahf
add
push
outsl
mov
mov
cwtl
in
ret
add
jge
pop
add
mov
test
push
pop
or
jge
cs
out
cltd
or
sub
fsubl
popl
or
inc
repz
popa
es
add
rolb
imul
xchg
lret
je
xchg
lcall
jb
mov
out
rcl
sub
je
fbld
mov
push
inc
xor
ss
fsubl
xor
arpl
shrb
sub
aaa
jbe
int
lea
dec
outsl
xchg
fidivl
cmp
fisttpll
jne
add
push
test
mov
inc
inc
push
jge
add
push
lds
mov
dec
xchg
popa
jmp
inc
add
loope
or
imul
cmp
hlt
in
rcrb
lock
push
push
fldln2
xor
xor
sub
inc
and
add
cmp
add
dec
push
xchg
add
fidivrs
mov
popa
jbe
push
jns
push
lock
sbb
push
add
call
ja
jbe
fdivl
xchg
dec
xchg
xlat
add
pusha
pop
mov
je
ljmp
cmpsb
add
loopne
mov
add
dec
pop
filds
movsb
ret
ss
jle
inc
jp
loop
mov
cmp
stos
rcll
in
and
test
xor
sub
cli
and
fistl
js
inc
add
idivb
int3
add
jl
invd
jp
cmc
pop
popf
mov
fiaddl
js
aas
pop
cmpsb
mov
orl
imul
xlat
or
add
push
xchg
lahf
iret
gs
xchg
mov
mov
inc
out
xor
add
stos
lods
les
pop
pop
jecxz
jno,pt
mov
leave
int3
push
mov
mov
xor
inc
lods
cmpsl
mov
gs
sarl
mov
out
call
mov
xchg
inc
sub
pop
testb
clc
lock
test
mov
das
roll
into
adc
lahf
add
in
pop
fisubl
jmp
inc
push
inc
addr16
popa
push
sub
sti
cltd
mov
cmc
push
jnp
or
test
xchg
insl
dec
cli
lea
aas
fldenv
and
mov
push
cmc
mov
int
add
jmp
shl
and
sarl
inc
and
in
jecxz
add
push
xor
loopne
mov
ret
lods
outsw
push
jae
pop
in
cmp
jmp
dec
outsb
pop
loopne
dec
lds
stos
cmp
push
jae
dec
inc
fcmovu
into
repnz
hlt
add
mov
adc
add
lret
inc
mov
xchg
jmp
inc
sbb
aad
jecxz
pop
jl
cmp
daa
into
cmova
pusha
jle
sbbl
int3
rol
daa
ret
sbb
jb
sbb
add
mov
mov
imul
cs
ret
xchg
call
test
cmpsl
std
xchg
add
mov
shr
mov
pop
nop
xor
lret
pop
shll
addr16
and
lds
xlat
add
push
mov
fwait
mov
pushf
sbb
push
adc
xchg
xor
sbb
arpl
faddl
aaa
ds
add
push
inc
cmp
mov
or
dec
add
jns
cmpsb
test
xchg
add
mov
in
inc
add
pop
lock
mov
out
popf
out
cmp
add
lock
aad
cmc
loop
lcall
ja
xchg
notb
sub
out
mov
mov
jo
dec
add
imul
cmc
add
mov
pop
pop
sbb
or
inc
mov
popf
inc
repnz
or
sub
insl
push
in
ret
pop
adc
movsb
push
add
add
into
xchg
add
lds
stos
ljmp
in
ja
push
test
mov
or
lret
pop
push
xchg
jg
push
cwtl
aam
sbb
lea
xor
push
lods
repz
add
jl
into
jle
sub
pusha
mov
xchg
sbb
or
jmp
loope
inc
call
addb
lds
mov
rorb
pushf
add
popf
and
clc
or
pop
stos
or
out
js
add
ret
int3
xlat
xchg
ja
adc
push
cli
loop
jo
loope
push
dec
xor
jbe
ret
stos
test
aam
xchg
ja
xchg
cmp
xor
xchg
stos
dec
fcoms
xorb
mov
stos
cmp
into
arpl
inc
fisubrl
mov
push
into
dec
or
or
push
cli
inc
in
mov
test
inc
les
cmc
or
loope
inc
and
mov
scas
pop
xor
xor
dec
inc
movsb
rorb
add
into
pusha
push
orb
je
push
fists
and
mov
add
pop
icebp
xor
jno
add
or
sub
add
cmp
sahf
jo
inc
jb
lcall
push
movsl
xorl
fcoml
movsl
mulb
incl
shl
fs
sbb
add
loopne
xor
cld
lret
and
or
adc
or
jo
mov
bound
orl
and
or
push
mov
pop
imul
adc
mov
rclb
xchg
and
ja
add
inc
add
and
lods
mov
xchg
pop
adc
flds
sbb
inc
cmpsl
gs
xchg
sbbl
stos
mov
jne
insl
xlat
iret
ljmp
dec
repnz
pop
pushf
add
xchg
cmp
adc
lods
sub
add
insb
out
mov
fmull
mov
or
pop
iret
jg
push
fists
add
nop
push
cs
dec
push
add
sbb
jg
daa
test
sub
cmp
pop
into
sbb
or
add
aas
in
add
hlt
in
add
setle
cli
lds
cmp
cwtl
fildll
add
adc
in
out
push
dec
dec
cwtl
jo
into
pop
dec
sahf
jo
sub
mov
pop
add
pop
lea
mov
sub
cmp
ja
stc
ret
pop
imul
sbb
jl
push
add
pop
movsb
or
cltd
sub
sbbl
in
xor
rorb
popa
sbbb
pop
push
push
std
cld
enter
xor
and
rorl
dec
cmp
sbb
arpl
addr16
and
mov
aad
xor
dec
fimull
dec
sbb
add
stos
push
fs
rclb
add
sub
jns
add
loopne
xor
dec
xor
ljmp
cmpsl
mov
popf
pop
inc
adc
into
push
inc
and
sbb
scas
mov
call
stos
xor
jmp
xchg
push
xor
fs
pop
insb
stos
cmpl
lods
sbb
lret
inc
sahf
lods
mov
push
hlt
add
inc
ljmp
mov
mov
daa
pop
loope
fcom
imul
aas
rol
xor
pop
fimuls
fsubrl
imul
jne
add
push
into
js
jp
jl
popa
jecxz
inc
pop
and
int3
xchg
add
jge
mov
loopne
jmp
arpl
or
pop
add
lcall
mov
scas
push
jle
mov
adc
dec
shlb
dec
mov
gs
jl
jb
mov
inc
jp
xchg
in
dec
inc
add
cmp
cmp
lea
aas
dec
xchg
pop
int3
lahf
or
popf
and
sub
push
mov
add
pop
xor
add
leave
aas
das
js
mov
ret
jo
mov
and
mov
es
fwait
push
std
dec
leave
sti
ret
out
add
add
out
aad
and
testl
scas
dec
iret
and
repnz
fsub
into
sub
dec
addr16
push
sbb
aad
cmp
mov
add
inc
jp
pop
jmp
sub
test
inc
mov
xchg
and
mov
add
push
mov
es
in
or
and
mov
mov
pop
cmovb
sbb
stos
idivl
mov
or
enter
std
mov
rcr
and
int
add
and
clc
call
addps
lods
sbb
les
cmpsl
scas
xor
dec
pop
shrl
movsb
cmpsb
add
loopne
xor
cltd
hlt
or
adc
pop
inc
mov
pop
sub
mov
leave
jne
int
dec
inc
jl
xor
push
add
mov
sahf
inc
mov
mov
adc
xor
add
cltd
sbb
fsubl
pop
mov
fwait
pop
movsb
xlat
sub
dec
add
out
and
adc
daa
xchg
xchg
inc
lea
cmp
cmp
das
pop
shlb
push
rcll
or
sub
ja
hlt
mov
or
mov
pop
add
nop
ss
xchg
sub
rcl
xchg
insb
test
aas
hlt
mov
inc
jb
sarl
xorl
in
stos
shl
dec
mov
sbb
std
jle
add
cmovbe
sbbl
sahf
dec
push
cmpsl
xlat
adcl
mov
add
inc
pop
bound
jle
cmc
cmp
cmp
stc
adc
inc
sub
sbb
cmp
xchg
push
stos
push
add
mul
mov
movsb
add
sahf
aam
fwait
push
sub
xchg
adc
add
pop
rorb
test
aaa
hlt
lret
ja
in
mov
mov
cltd
jg
outsl
cmp
fucomip
add
inc
cmp
data16
or
jb
lods
and
subb
xchg
mov
xchg
jbe
shl
dec
aas
pop
roll
dec
inc
fistps
sub
ficompl
cmp
inc
inc
jo
add
xor
push
bound
add
pusha
das
sahf
xor
addr16
or
adc
pop
add
mov
xor
pop
inc
aas
roll
lods
in
les
test
cmpb
cmp
cmp
push
lahf
imul
jno
add
sub
sub
cmp
mov
fdivrl
aaa
add
addl
pop
jno
scas
out
jge
mov
or
inc
scas
jno
jp
push
mov
shlb
icebp
out
clc
inc
jl
jae
fbstp
les
inc
xor
inc
int3
cmp
sub
sti
popf
repnz
add
movsl
fwait
loop
data16
cmp
lock
add
adc
addr16
test
lahf
mov
mov
into
add
lds
or
mov
mov
cmp
loop
pop
popa
and
mov
cld
jp
mov
add
or
cli
rcll
pop
mov
jle
dec
jnp
aas
mov
fstps
ret
push
stos
pop
in
rcr
mov
mulb
mov
xchg
lea
stos
mov
mov
mov
sbb
ficompl
cld
inc
cltd
loop
add
cmpsl
dec
mov
shll
pop
xchg
ret
push
mov
cmc
or
sarb
ret
daa
mov
outsb
std
add
popf
jg
roll
xchg
mov
xlat
adc
cmc
shl
andl
lret
lahf
out
inc
ja
add
push
aad
in
mov
sbb
mov
daa
adc
mov
adc
add
shrb
rcrl
sbb
mov
xchg
mov
pop
xor
add
iret
ja
cmp
add
mov
xor
xor
faddl
fiaddl
cmpsl
pop
push
test
add
xchg
in
negl
fcmovne
push
inc
fdivp
jge
rcrl
jnp
aam
sti
sub
mov
lods
cltd
sbb
add
sub
imul
cmp
fiadds
xor
push
adc
xchg
xchg
outsb
in
xor
mov
cmp
daa
popa
mov
add
clc
arpl
test
cmp
fdivrl
aaa
jg
or
push
mov
pop
outsb
fucomip
sbb
icebp
and
sub
lds
pop
add
movsl
and
notb
cmp
mov
add
movsb
sbb
vorpd
sbb
dec
pop
xor
add
sub
jp
pop
or
dec
add
rorl
out
jg
add
ret
mov
shr
push
pop
push
jl
add
aaa
lea
cmpsl
push
add
mov
xor
enter
adc
sub
out
sub
adcb
test
rcll
fnstsw
shlb
and
pop
cmp
mov
add
imul
sbb
outsl
fdivrl
repnz
fidivrs
sbb
mov
loope
xchg
pandn
adc
pushf
cwtl
iret
and
ja
mov
pop
xchg
add
mov
inc
cmp
xlat
pop
xchg
stos
xor
or
mov
jno
fldenv
add
sbb
filds
idivl
sbb
sub
popa
xchg
test
xor
sub
add
dec
clc
adc
lock
shr
add
push
stc
and
insl
sbb
pop
add
imul
sbb
movsb
fistpll
nop
imul
out
sbb
sub
mov
add
add
cmpsl
movsl
dec
adc
jnp
or
pushf
adc
and
dec
jg
scas
insl
into
xchg
xor
mov
sbb
add
ret
les
int3
xchg
scas
xchg
out
cmc
scas
in
or
movsl
pop
jne
sahf
addb
add
xchg
sti
adc
pop
js
movsb
add
mov
or
sub
arpl
jmp
xchg
xor
push
add
push
mov
clc
cmpsb
enter
xorb
add
fdivs
gs
mov
scas
add
jl
dec
jle
jns
add
loopne
fsts
sub
add
cli
xchg
push
jb
roll
mov
pop
dec
jle
xor
add
mov
hlt
mov
test
dec
adc
cmp
mov
push
and
mov
orl
push
push
and
sub
pop
add
push
int3
and
adc
hlt
sub
stos
mov
sbb
int3
cs
add
rorb
add
xchg
dec
xchg
or
xchg
push
repnz
pusha
ret
xlat
sub
enter
xchg
insl
rolb
fcoms
mov
in
jp
sub
dec
dec
jo
sbb
and
mov
jns
dec
add
in
jno
and
push
aam
enter
push
movb
lock
hlt
pop
and
xchg
enter
roll
fisubrs
pushl
xchg
dec
stos
sub
add
mov
dec
sti
xor
add
add
lcall
inc
in
xchg
shll
pop
push
cmp
or
add
add
dec
cltd
push
add
adc
sbb
add
pop
popf
xchg
jp
aas
shlb
mov
jg
ss
push
lock
push
mov
out
add
pop
or
pop
cmp
inc
xor
or
xchg
adc
and
adc
orl
in
and
mov
push
jp
push
jo
stos
cld
inc
pop
lahf
pop
push
insb
test
fimull
das
in
addr16
jo
fdecstp
fistl
ds
and
movsb
fstpl
mov
mov
or
and
fstp
mov
addb
jge
jo
movsl
jp
cmp
sub
inc
or
add
mov
stos
mov
in
cmpsb
aaa
inc
les
lahf
cmc
add
mov
jbe
add
sub
jecxz
sbb
adc
sbb
das
and
mov
pop
sub
pop
push
add
mov
notb
xchg
add
mov
mov
cmp
xor
xchg
jno
xchg
js
mov
and
pop
and
cmp
xchg
jle
test
sbb
aam
inc
daa
jle
sbb
sub
pop
js
in
xor
add
fstp
and
xchg
add
dec
sub
add
test
adc
cmp
mov
paddusb
in
sbb
add
stos
add
movntq
gs
inc
adc
mov
cld
lcall
and
jo
pop
das
imul
fwait
jno
sahf
sub
shlb
cmpsl
gs
add
into
out
jp
sbb
ljmp
dec
mov
stc
xchg
cld
pushf
cmpsl
add
outsl
mov
mov
sub
rolb
jl
roll
push
and
cmp
push
add
inc
lods
call
subb
mov
sbb
xchg
out
mov
push
dec
sti
movsl
jne
lret
xchg
inc
cli
xor
sub
add
jnp
mov
xchg
dec
lea
mov
lds
add
icebp
push
xor
aaa
xor
xchg
out
inc
andb
and
xchg
cmp
into
repnz
fisttpll
out
sarl
flds
sbb
sbb
pushf
mov
cmp
jb
sub
jnp
add
sti
aam
js
fstl
mov
or
gs
loop
mov
mov
or
and
scas
add
push
jo
pop
cwtl
push
rorl
inc
sbb
xor
adc
fadd
push
andl
dec
or
scas
xor
push
push
cmp
adc
and
xchg
fdivs
out
inc
popf
add
jbe
popa
and
inc
mov
movl
int
inc
sub
pop
pop
in
jp
cmp
sbb
pop
ja
nop
add
mov
rcrl
lret
mov
lods
in
dec
add
fs
sbbl
cltd
add
xor
mov
jno
xor
pop
dec
enter
pop
cltd
adc
mov
dec
and
sbb
xor
mov
add
dec
xchg
stc
mov
push
popa
pop
jp
std
push
test
or
shrb
add
dec
sbb
addb
inc
pop
dec
and
push
jae
aad
sbb
push
sub
inc
or
push
pop
mov
push
outsb
sub
xor
outsl
dec
xchg
int
faddl
mov
lret
or
jp
insb
jge
filds
add
in
pop
mov
xor
aad
scas
mov
add
je
dec
cmp
roll
xchg
pop
dec
ja
mov
lcall
ss
lret
jno
leave
push
cmpsb
or
rolb
call
dec
push
jb
xor
cmp
out
dec
pop
out
add
mov
cmp
lret
in
add
imul
das
mov
xchg
outsb
jp
in
sub
jmp
push
sahf
add
pusha
add
mov
cmp
xchg
popl
arpl
test
filds
mov
imull
pop
je
sub
scas
add
or
sub
mov
push
mov
jae
insb
pop
arpl
push
cmp
loop
pushf
adc
out
or
cmp
lods
and
outsl
or
xchg
je
mov
adc
ffree
add
mov
add
or
in
test
sbb
test
and
mov
es
push
jge
xor
add
loop
bound
out
add
mov
jne
jmp
js
mov
iret
rclb
adc
scas
loope
add
lahf
jb
test
fstpt
jo
add
and
add
jecxz
cmp
xor
mov
mov
inc
cmp
inc
gs
and
sub
mov
mov
daa
mov
test
dec
inc
lods
in
jge
pusha
hlt
jp
sbb
push
add
pop
xchg
mov
xor
ljmp
pop
es
out
fcompl
cmpl
inc
repnz
push
mov
sub
pop
in
loop
add
cwtl
ds
and
sbb
push
xchg
test
sbb
mov
and
imul
test
test
cmp
push
push
mov
push
and
inc
sub
jo
mov
lock
out
xor
inc
insb
ljmp
jo
shll
sub
fiaddl
and
pop
mov
add
stc
fisubs
and
jno
inc
dec
xor
jge
add
mov
pop
pop
mov
inc
imul
fwait
ret
mov
inc
xor
mov
mov
mov
les
arpl
fbstp
sti
and
fs
add
jnp
mov
sub
add
ja
aaa
ret
dec
sti
lods
arpl
push
adc
mov
sarl
xor
mov
shl
pop
ret
pushf
bndldx
add
test
push
shll
out
mov
decb
shrl
arpl
fstps
pop
and
add
inc
xor
inc
sub
ret
sarb
icebp
jno
cmp
push
jmp
cs
fistpll
xchg
dec
cmp
and
jge
add
add
add
add
add
mov
jae
jge
mov
inc
fs
in
dec
sub
xchg
mov
insl
cld
incb
cmc
fdivrl
mov
or
pop
mov
push
add
mov
jne
out
or
imul
pop
inc
add
pushf
in
dec
arpl
mov
mov
and
pusha
into
fs
loope
jg
adc
and
aaa
fldl
orb
dec
out
scas
mov
cmpsb
xor
sahf
out
xor
int
push
std
jnp
out
pop
add
subl
push
imul
test
adc
cmpsb
rcr
mov
cmp
sbb
aas
and
and
orb
push
dec
loopne
and
push
inc
mov
add
jne
leave
mov
lret
sub
inc
sbb
adc
fcomip
test
ss
push
add
inc
xor
add
add
and
lods
aaa
add
mov
test
popa
mov
xor
add
negl
std
insb
jecxz
adc
add
insb
xor
sbb
cld
push
scas
add
mov
nop
in
add
lret
dec
lret
mov
into
cmp
test
sub
cli
adc
push
inc
add
and
popf
sbb
stos
dec
ds
push
xor
or
push
add
inc
mov
add
dec
cli
test
cmp
test
lods
or
push
xchg
xor
sbb
xor
or
mov
add
jo
adc
pop
mov
shufps
jle
scas
sbb
cwtl
lds
pop
out
pop
cmpsb
fimuls
mov
jne
sub
mov
fildl
pop
sub
fcompl
jnp
mov
add
pop
mov
scas
sub
push
inc
xchg
and
test
mov
or
fs
data16
pop
dec
add
imull
hlt
inc
inc
das
lods
adc
ss
xchg
push
jmp
shll
int
xor
add
push
andl
out
lret
cmp
cmp
loop
mov
xchg
inc
inc
adc
fwait
ss
jnp
lds
lods
add
sbb
popa
cs
lods
mov
xchg
mov
fdivrs
or
lds
mov
mov
xchg
xchg
ret
xchg
nop
pop
add
pop
xor
push
fimuls
sub
mov
xchg
arpl
xchg
jae
mov
jno
sbb
dec
mov
popa
lods
xor
leave
jl
js
inc
scas
sti
inc
rcrl
push
shlb
dec
jg
rcrb
sbb
or
adc
shll
rol
divl
mov
or
bound
data16
cltd
inc
incb
xchg
xor
or
icebp
push
xlat
and
add
adc
test
xchg
mov
add
mov
inc
daa
adc
data16
sub
dec
mov
mov
xchg
pop
add
adc
jae
dec
in
add
lods
adc
dec
or
outsb
push
dec
mov
cmp
ret
pop
cmp
fildl
xor
out
roll
jl
push
clc
and
add
js
cmp
dec
add
xchg
das
mov
mov
inc
adcl
mov
insl
add
mov
add
mov
cmp
jae
jnp
rcrl
push
ret
jecxz
and
mov
outsb
jo
movsb
mov
adc
mov
add
pop
dec
arpl
lea
outsb
jb
push
pusha
mov
xchg
xchg
sarl
pop
mov
movb
sbb
dec
mov
add
mov
movsb
adc
les
int
popa
xchg
inc
dec
aas
adc
jp
sbb
add
jnp
xor
mov
movsb
push
mov
subb
sub
adc
ja
ret
mov
jb
das
sbb
jnp
je
pop
or
push
in
arpl
push
mov
add
sbb
dec
gs
out
push
adc
ljmp
test
cld
jo
mov
arpl
dec
pop
pop
sbb
sub
les
add
push
pop
lret
jecxz
inc
gs
push
stos
push
sbb
adc
std
sbbl
and
cmpsb
add
ja
or
adc
insb
add
je
addb
lea
cmp
xchg
mov
clc
mov
jecxz
test
repnz
es
pop
push
add
sti
inc
rolb
sbb
adc
stos
cmpl
push
or
add
sub
jne
xchg
push
outsl
add
in
xlat
cmpsb
and
xchg
add
xchg
sbb
jns
ror
and
cmpsl
fs
lret
sub
in
aam
mov
push
jmp
add
cmp
mov
add
dec
jno
inc
inc
inc
add
rorl
add
mov
cs
cmpsl
add
add
mov
ret
adc
lahf
inc
add
push
loop
cmpsb
xor
add
push
xchg
xor
cmp
mov
mov
mov
ja
xchg
int3
imul
insb
mov
cmc
lcall
xor
adc
jbe
cs
inc
mov
xchg
enter
ss
pop
xor
adc
rorl
add
test
xchg
adcb
data16
ja
call
push
pop
inc
pop
fcmovbe
add
jno
add
sbb
jo
stos
dec
dec
mov
lcall
push
dec
outsb
and
out
ljmp
inc
mov
or
xchg
mov
add
jbe
enter
jle
push
bound
ja
xor
decl
xor
add
dec
jo
push
sub
pop
test
shrl
xchg
sub
add
pop
loope
xor
arpl
dec
testl
pop
scas
add
mov
and
popa
addb
jae
js
rcrl
mov
jp
ds
dec
add
mov
xchg
stos
inc
andb
jns
shrl
leave
lcall
and
psrad
add
jne
pop
sbb
sub
sub
or
add
and
lock
iret
xor
and
or
jmp
lcall
cwtl
loope
stos
xlat
add
push
add
ljmp
sbb
loope
and
mov
jnp
fistps
jae,pn
sbb
mov
nop
mov
insb
negb
ret
mov
mov
ret
add
add
lret
push
iret
cmp
pop
mov
xchg
pushf
dec
inc
leave
pusha
push
cli
iret
and
fwait
hlt
data16
xor
movsl
jg
cmp
rorl
ret
push
inc
scas
inc
nop
sti
add
in
xor
add
cmp
jge
in
sbb
movsb
and
stos
rclb
jb
test
pop
mov
pop
rorb
lahf
cmp
bound
add
cmp
fbstp
fmul
add
sub
nop
add
pushf
es
outsl
popa
push
outsl
dec
loope
dec
jno
or
call
add
mov
inc
add
cmp
mov
push
add
cmp
shl
and
mov
movsl
push
call
add
inc
stos
gs
imul
or
xchg
ja
loopne
inc
outsb
gs
mov
sub
cmp
inc
sbb
aad
in
cmp
xchg
jl
or
sbb
mov
add
mov
ret
lret
add
xchg
in
push
or
shll
xor
cli
adc
mov
dec
je
jns
pop
adc
adc
xchg
xchg
push
push
arpl
cltd
roll
enter
add
fiaddl
sti
mov
test
push
xor
pop
jl
jge
incl
add
imul
cmp
jne
xor
repz
lds
shl
xchg
sub
sbb
rcll
sbb
dec
xchg
popa
adc
cltd
inc
xchg
inc
dec
xchg
inc
add
imul
mov
pop
push
fdivrl
mov
mov
into
stos
dec
and
ljmp
mov
inc
cli
xor
xor
push
add
push
cltd
aam
pop
pop
cld
cmp
lods
push
gs
inc
stos
popf
scas
shlb
and
sbb
add
cmp
insl
mov
leave
push
in
mov
jbe
pop
cmp
clc
adc
xchg
sub
stc
push
and
mov
xchg
and
and
push
lds
sub
add
add
sbb
push
xorl
decb
ret
rorl
sub
stos
pop
push
add
shlb
and
push
cmp
add
push
paddw
repnz
adc
sub
and
xor
mov
imul
mov
orb
cmp
fiaddl
and
sarb
loope
pop
push
xchg
mov
add
push
popf
and
jecxz
adc
dec
mov
xchg
in
outsl
cmp
push
aas
call
mov
push
ffree
inc
xor
or
icebp
or
test
jl
adc
mov
lret
mov
es
enter
clc
sbb
xor
adc
sahf
movsl
inc
adc
or
mov
in
out
and
jbe
add
scas
and
cmp
nop
fucomip
cltd
jo
xor
je
cmp
mov
flds
addl
shr
les
out
and
xchg
dec
mov
pop
loopne
add
sti
clc
iret
cmp
mov
or
add
inc
icebp
pop
dec
bswap
inc
or
aaa
andl
push
call
bound
adc
outsb
andb
push
add
mov
lcall
movsl
add
stos
jne
mov
mov
lds
mov
ljmp
xchg
mov
fisubrs
pushf
loopne
add
sahf
sarb
sbb
imul
xchg
push
pop
pop
mov
sub
test
sbb
mov
dec
fwait
scas
fiadds
mov
pop
das
mov
fnstenv
cmp
inc
mov
test
jo
stos
cmp
inc
imul
dec
xchg
sub
jecxz
add
xor
push
and
cltd
add
insl
add
add
sub
xor
add
mov
jge
add
mov
orl
jne
mov
repnz
mov
cli
sbb
xchg
mov
cmp
add
dec
ja
sub
lea
mov
mov
dec
inc
mov
adc
lods
push
in
pop
or
mov
jl
daa
and
add
xor
sbbl
add
insl
mov
pop
cltd
loope
add
mov
pusha
add
mov
das
sub
mov
or
cmc
sub
add
cmpl
addr16
js
dec
repz
xor
jmp
and
sbb
add
push
pop
sbb
pop
ja
xor
or
and
testl
ss
dec
xchg
loop
pop
cmp
dec
cmpsb
cmc
into
mov
mov
outsl
jnp
neg
mov
and
scas
fcompl
push
xor
sbb
mov
aam
out
fstps
lret
lcall
sbb
dec
test
pop
out
fiaddl
test
loopne
jno
sub
xchg
add
mov
dec
push
cwtl
flds
mov
in
mov
pop
into
pop
data16
icebp
inc
nop
pushf
sbb
push
and
jle
xor
test
std
add
jmp
push
xchg
add
xor
pop
imul
ljmp
and
xor
mov
add
mov
jl
cli
aam
pop
push
lret
lret
cmp
add
dec
mov
jl
sbb
pop
inc
data16
pop
xor
andl
into
sahf
mov
lret
xlat
or
jmp
pop
adc
iret
push
adcl
outsl
mov
push
cmp
in
ljmp
clc
shll
je
jmp
outsl
xchg
inc
pop
jge
fildll
cli
push
ss
lahf
test
daa
ds
mov
hlt
sbb
aam
outsl
xor
jp
xchg
out
iret
inc
add
xchg
int3
dec
bound
sbb
addr16
scas
xchg
pop
mov
mov
lea
shlb
pop
xor
mov
pusha
cmp
jle
and
and
cmp
ret
jp
cli
add
push
lock
inc
fiadds
out
or
incl
iret
cmp
mov
add
ret
popa
pop
xlat
arpl
out
xor
jmp
ret
test
arpl
aam
leave
push
mov
inc
push
adcb
aad
xor
fnstsw
iret
jecxz,pn
mov
sub
xchg
sbb
popa
dec
cmovbe
arpl
inc
loopne
cmp
dec
inc
add
cltd
addl
cltd
xor
xchg
add
mov
or
dec
xchg
out
mov
dec
popf
mov
iret
sbb
push
and
sbbb
popa
cmp
loop
rclb
incl
jmp
push
xchg
aam
loop
loopne
popa
inc
insl
add
sbb
sub
cmp
fs
add
push
xchg
loop
push
and
pop
pop
cld
or
jo
push
lret
bound
mov
sbb
cli
shll
push
add
and
and
cmp
icebp
jno
rcrb
mov
xchg
add
nop
popa
xchg
ret
xor
aam
gs
and
lret
sbb
cmp
cs
dec
mov
shlb
loop
sub
add
jecxz
hlt
cltd
and
jo
add
subb
cli
or
lret
pusha
clc
jmp
lock
add
jg
rol
or
fmuls
loopne
mov
sub
insl
push
adc
mov
mov
into
test
outsb
add
cli
jl
ss
stos
jmp
push
scas
inc
add
add
adcb
int
pop
mov
aam
mov
icebp
jbe
mov
push
and
cltd
adc
lcall
lahf
xchg
popa
imulb
test
push
std
lock
rorb
shrb
fildll
insl
test
adc
mov
pop
dec
inc
aad
loop
es
dec
mov
mov
jp
dec
inc
dec
loop
cmp
mov
hlt
inc
xchg
jo
addb
ret
pop
fimuls
jo
into
push
rclb
pop
cmp
sti
adc
xlat
cli
test
add
xor
xchg
loopne
insb
mov
orl
inc
add
mov
stos
test
orps
shrb
add
add
inc
and
shl
icebp
arpl
fildll
imul
xchg
xchg
xor
loop
xor
xor
xlat
lcall
jno
xchg
adc
andps
cmp
pop
pushf
fcompl
pop
jmp
pop
movsb
mov
in
xchg
mov
roll
push
xchg
or
adc
loopne
sbb
add
pop
call
das
fsubs
sbb
fbstp
push
pop
addr16
lcall
das
pop
fistps
pop
sbb
mov
fidivl
pop
bound
sbb
or
mov
xchg
scas
mov
sub
xor
sub
add
cmpsb
cld
jmp
pop
add
stc
movsb
xchg
lock
testb
orb
adc
pop
roll
stos
and
adc
xchg
inc
out
and
adc
add
dec
cmp
add
mov
and
test
dec
push
xchg
dec
add
fwait
cmp
addb
mov
sbb
add
inc
popa
pop
push
add
inc
cmp
inc
add
ds
or
adc
add
sub
cmp
inc
xor
andb
push
inc
inc
push
add
and
inc
subb
add
inc
subl
cs
inc
inc
cmp
xchg
outsb
or
dec
xchg
add
dec
aam
ds
loop
mov
pop
jmp
bound
nop
add
movl
icebp
jg
sbb
mov
sbb
into
jo
dec
mov
setl
hlt
cmp
loop
repz
cs
sar
lock
xchg
push
mov
rolb
pusha
and
inc
add
xchg
mov
mov
push
sbb
lods
aam
push
xchg
es
aad
ret
push
adc
mov
int3
xor
or
das
or
enter
xor
jb
mov
and
dec
xchg
and
rclb
into
jno
inc
sbbb
or
std
xor
int3
incl
icebp
or
loop
arpl
scas
adc
sarb
mov
inc
bound
mov
jge
or
push
xadd
xchg
jle
repz
adc
or
pop
les
pop
lea
mov
xor
mov
popl
mov
sub
jl
mov
out
dec
int
cltd
add
scas
mov
mov
sti
fcomip
stos
and
sbb
adc
jno
arpl
out
es
xchg
incl
xlat
xchg
push
mov
mov
mov
popa
xor
inc
les
sbb
push
sbb
add
into
int
xor
arpl
dec
bound
cmovo
xor
sbb
aam
popf
dec
jl
jecxz
loopne
loopne
pushf
or
adc
adc
loopne
adc
mov
sub
mov
bound
lds
xor
jmp
les
mov
jle
xchg
or
pop
mov
inc
movsl
and
xchg
test
push
jne
mov
cli
into
add
or
xor
or
mov
movsb
cld
iret
add
ret
or
dec
add
or
adc
mov
dec
loop
mov
inc
mov
movsl
out
inc
lock
icebp
adc
jo
mov
in
add
lock
or
int3
mov
adc
sbb
or
aad
mov
adc
xchg
out
mov
clc
shrb
add
mov
roll
adc
je
cmp
xchg
jg
and
pop
arpl
fldt
push
mov
andl
or
dec
or
dec
xor
sbb
push
xchg
inc
jge
ret
pop
cld
inc
mov
fcmovbe
adc
nop
mov
ret
icebp
adc
in
cmp
add
andl
addb
push
mov
sbb
mov
fs
stos
cmp
xlat
fmul
inc
add
test
jbe
dec
arpl
mov
lcall
les
out
lea
rorb
add
jb
add
loopne
les
jnp
cld
adc
repz
cmp
dec
movsb
daa
ret
xchg
inc
adcl
imulb
pop
movl
mov
xor
mov
or
or
shlb
rolb
jge
pop
xchg
mov
adc
out
push
orl
and
movsl
lcall
add
and
push
xor
ffree
mov
sbb
mov
fadd
mov
push
cmp
cmp
gs
mov
mov
adc
and
xchg
inc
and
inc
inc
push
push
xor
orb
das
add
lret
add
or
cmp
cli
rol
inc
cwtl
push
arpl
push
cld
sub
mov
das
and
and
cmp
repnz
cwtl
adc
loopne
mov
jae
dec
adc
aad
dec
daa
loop
or
add
mov
cmp
loopne
pop
xchg
dec
adc
lock
and
push
sub
jp
mov
dec
xor
inc
ret
loopne
inc
inc
mov
cmpsl
xor
cmp
jo
rclb
leave
push
daa
mov
dec
popa
and
imul
mov
daa
or
sbb
mov
xor
fdivs
xchg
repz
inc
mov
xchg
aaa
dec
xchg
add
out
sbb
mov
lahf
inc
or
cltd
mov
repz
bound
or
pop
mov
mov
rorb
ret
mov
and
or
daa
stos
sbb
mov
add
add
mov
xchg
pushf
pop
xchg
xchg
add
dec
xor
mov
dec
pop
adc
xor
leave
push
fdivs
ret
push
aad
call
fdiv
pop
inc
test
jno
sti
and
xchg
jae
pusha
stc
movsb
sti
add
in
add
pop
ds
loopne
mov
sbb
in
sub
add
cmc
lods
mov
lods
ss
and
negb
xor
call
mov
and
iret
jg
sub
xchg
fdivrs
sbbl
arpl
push
into
mov
sub
add
xor
je
inc
mov
cmc
mov
nop
and
test
shl
or
mov
std
es
pop
sbb
fwait
or
mov
rorl
bound
sbb
add
inc
add
inc
and
ret
ret
inc
addr16
aam
cmpb
das
aam
out
test
sbb
add
rorl
out
fs
mov
repz
mov
rcll
fs
mov
jmp
mov
dec
pop
lods
add
fs
pusha
cmp
icebp
xchg
inc
fsts
leave
fwait
pop
push
adc
sbb
fstpt
xchg
mov
popf
pop
fs
rcr
jmp
sbb
fcompl
mov
xlat
imul
lret
and
cmp
pushf
repz
cmp
cmp
or
dec
orl
outsl
int
ret
data16
test
pop
adc
xlat
jns
fwait
test
adc
jle
lods
addb
or
or
inc
push
scas
xor
xchg
push
add
mov
stos
mov
sub
je
sbb
mov
jno
pop
adc
rcr
pop
sbb
cltd
mov
or
push
dec
inc
or
test
inc
inc
fmull
inc
mov
fwait
pop
daa
dec
xchg
pop
xchg
inc
or
adc
add
push
sub
fbld
sbb
or
shlb
mov
mov
pop
or
lret
or
movsl
adc
shll
dec
out
sbb
dec
adc
stc
push
sbb
es
jno
test
mov
xchg
pop
cltd
adc
push
push
sbb
jbe
sbb
cmp
pushf
rcr
xchg
cwtl
inc
mov
jnp
lods
jbe
fsubrl
xchg
jb
pushf
lds
sbb
das
adc
sub
add
nop
inc
scas
imul
sahf
xchg
popf
push
adc
add
fcoml
int
mov
cwtl
sbb
fcmovbe
or
sub
inc
push
aas
jg
rorl
ret
adcb
or
adcl
ret
popf
inc
push
mov
dec
leave
lcall
and
fildl
jecxz
rcrb
xchg
das
sbb
jno
pop
fwait
mov
mov
adcl
add
pop
sti
jae
jg
pop
das
add
lea
sbb
xchg
loope
pusha
xor
push
jge
add
xchg
andl
and
inc
nop
rcrl
add
and
cld
mov
xor
sbb
dec
fmull
inc
mov
ss
adc
cwtl
cld
adc
inc
test
xor
adc
or
cmpl
dec
inc
cmpl
adc
mov
adc
adc
sbb
or
stc
out
movsl
inc
xchg
iret
pop
push
adc
popf
xor
jns
fcomps
sbbb
cmc
xor
in
ss
pop
fnstenv
sub
cmpsl
lahf
into
xor
js
je
js
push
stos
ret
lcall
sbb
fwait
roll
aaa
nop
mov
pop
popf
fwait
and
sbbl
add
inc
add
and
subb
cmc
ret
jmp
jmp
adc
mov
push
lcall
inc
xor
inc
pop
xchg
push
ljmp
add
adcb
rcll
ss
push
or
xchg
mov
cmpsl
xor
sbb
insl
cmp
jnp
mov
leave
repnz
sub
inc
mov
and
pop
fs
or
xchg
add
push
lcall
and
aas
shll
xchg
arpl
cwtl
rcl
dec
and
cmp
jmp
in
add
cli
mov
addr16
aam
cmp
pop
mov
add
mov
xchg
movsb
shll
lret
push
test
shll
fsubl
pop
call
cwtl
ret
pop
or
aam
and
adc
jge
gs
nop
mov
bound
add
and
push
nop
test
jae
xorb
in
jg
clc
pop
sbb
ds
pop
adc
mov
sbb
mov
adc
lahf
les
cs
fmuls
jmp
rolb
adc
fstl
xchg
lret
inc
bound
inc
cmp
dec
mov
sbb
sbb
pop
add
movsl
xor
push
push
sbb
sbb
or
sbbl
cmp
adc
xor
push
cmp
adc
inc
mov
push
lods
push
lret
sahf
add
and
outsb
cmp
out
mov
out
or
outsl
rcl
das
and
in
cmp
scas
incl
push
stos
ja
xchg
in
jns
aad
out
jnp
nop
outsl
dec
xor
add
lock
aad
std
push
pop
cld
rcll
int3
adc
add
adc
add
inc
flds
xor
sbb
add
mov
pushf
mov
fnsave
or
pop
sahf
aaa
jg
loop
or
mov
mov
aas
ss
or
in
inc
arpl
loope
enter
and
icebp
dec
mov
xchg
add
addr16
push
lds
xchg
inc
ljmp
les
iret
testl
inc
test
add
cld
pushf
or
dec
pop
add
or
mov
add
or
repz
and
ret
add
jnp
add
fcmovnb
subb
pushf
idivb
mov
icebp
fisttpll
inc
stos
test
mov
inc
movsl
dec
mov
dec
in
sub
inc
leave
jp
inc
insl
sbb
incl
add
lock
or
add
or
cmp
and
scas
aam
mov
orl
and
xor
out
jo
xor
dec
pop
xor
fadds
add
testl
fldl
lods
pop
push
and
pop
addb
imul
push
js
pushf
flds
jo
pop
sub
xchg
add
add
push
cmpl
sub
add
or
pop
add
xchg
pop
cmp
xor
arpl
mov
sub
pop
jb
and
push
sbb
pop
dec
xor
cs
or
sub
xchg
mov
xor
cmp
lahf
mov
pop
xor
jb
push
xchg
xor
mov
fsubr
cld
insb
cs
aas
xor
adc
add
xchg
or
rclb
cmp
jb
xchg
xor
xor
sub
jae
xchg
outsl
add
push
pop
mov
xchg
add
das
mov
mov
xor
add
push
xor
add
push
sbb
jnp
sbb
adc
scas
sub
mov
into
push
roll
and
push
and
movsb
loop
outsl
sbbl
sbb
xor
adc
movsl
or
sbb
sub
mov
and
inc
lret
ror
and
pop
dec
and
mov
mov
mov
inc
jg
mov
sbb
insl
pusha
sbb
enter
rcrl
popa
inc
jae
mov
inc
push
mov
inc
dec
inc
rol
dec
mov
xchg
push
jb
sti
into
mov
fildl
repnz
jno
inc
xchg
push
mov
mov
inc
arpl
jb
pop
inc
add
or
adcb
adc
jno,pt
xchg
lds
mov
addb
adc
into
cmc
inc
int
popf
test
popa
jl
xchg
inc
orl
cmp
lds
ret
rol
data16
rol
jbe
mov
lret
jo
xor
fbstp
iret
dec
movl
in
pop
out
add
push
or
jg,pn
cmp
inc
ja
dec
dec
rclb
stos
shl
jg
sbb
es
or
sbb
nop
sbb
inc
cmp
nop
sbb
inc
jge
or
and
cs
sub
je
in
cli
test
cmp
cmc
and
lahf
jp
xor
push
add
xor
lds
xor
jecxz
sub
movsl
and
dec
sbb
jno
cmp
sub
aad
sahf
dec
dec
mov
mov
in
push
sbb
jp
and
or
aam
pop
sub
inc
and
je,pn
les
test
lcall
out
adc
push
xchg
lock
inc
fnsave
shlb
test
loop
pop
sbb
sbb
pop
push
xor
mov
sbb
jle
xor
pop
aas
and
loope
pop
movsl
cmp
inc
test
and
and
dec
and
sar
repz
outsb
mov
and
add
mov
dec
mov
movsb
cmpl
or
paddq
popf
pop
das
idivl
pop
xlat
xchg
cmp
lods
xlat
dec
mov
sbb
mov
push
adc
or
push
aas
rol
addb
jge
inc
sub
xchg
xor
push
lds
and
xchg
aam
mov
bound
xor
inc
cltd
sbb
sub
roll
mov
push
xchg
aam
adc
fwait
imul
add
ljmp
pop
loop
dec
aam
dec
paddusb
pop
sbb
mov
les
jp
mov
adc
mov
rcll
pop
xor
sar
lret
or
or
std
in
jle
xor
xor
popa
xchg
bound
stos
flds
insl
fnstcw
add
add
xchg
aam
sbb
dec
fimull
into
aaa
adc
mov
xchg
rcll
cmp
push
jle
push
cmpb
test
shll
inc
sti
sbb
inc
dec
adc
mov
mov
arpl
or
mov
in
sbb
add
adc
dec
inc
and
xchg
rol
inc
mov
pushf
pop
rcll
pop
sub
push
pop
pop
in
pop
shrl
cld
adc
test
nop
ds
dec
fdivl
lods
inc
adc
mov
add
in
insb
xchg
fcmovnu
outsb
or
ret
aaa
lret
mov
addb
dec
shl
or
out
mov
push
ret
push
inc
andb
inc
test
daa
sbb
push
sahf
mov
sub
je
mov
fsubp
rorl
rolb
sbb
inc
adc
fildll
mov
rcl
push
and
iret
sbbl
pop
pop
xchg
add
fsts
ret
push
cmp
bound
bound
inc
adcl
js
nop
jne
movsb
xchg
pop
aad
inc
pop
or
and
mov
push
dec
enter
push
testb
mov
ret
push
mov
arpl
inc
xor
pop
dec
test
inc
sbb
pushf
arpl
pop
or
adc
fcoml
inc
push
insl
add
jl,pn
fistpll
and
jbe
sbb
push
inc
and
test
jo
push
adc
adc
push
push
adc
adc
dec
test
in
js
test
add
pushf
lods
sub
push
sub
fwait
and
xor
pushf
test
sub
and
sbb
aam
cwtl
sbb
xchg
mov
ljmp
mov
in
lods
pop
pop
jge
iret
loop
std
inc
inc
jecxz
xchg
incb
fadds
adc
xchg
std
aam
pop
imul
add
out
mov
fcmove
xor
mov
pop
pop
add
ret
fcompl
rclb
sub
sbb
imul
std
or
dec
pop
mov
adc
dec
fcmovbe
sbb
cmpl
add
fnstsw
add
push
inc
movsl
leave
push
ret
pop
mov
mov
sti
fucomip
xchg
mov
ja
push
pop
xchg
mull
xchg
dec
sbb
cmp
aam
pop
push
cmpl
inc
mov
or
adc
lahf
jb
aaa
cmp
pop
sbb
gs
iret
mov
rclb
imul
out
repnz
push
xor
inc
or
inc
inc
ret
xchg
bound
sbb
xchg
pop
mov
out
sub
adc
imul
imul
mov
xlat
inc
mov
roll
dec
dec
je
xchg
adc
sub
jecxz
imul
fnstcw
dec
ror
push
mov
shrl
fsubl
mov
into
mov
daa
cmp
lods
or
mov
ret
dec
roll
and
inc
cwtl
sub
pusha
bound
clc
pop
push
pop
push
xchg
and
add
pop
daa
pextrw
and
xchg
ficompl
rol
xor
adc
cmp
jg
mov
shlb
push
pop
jbe
pop
into
lods
push
into
pop
pushf
push
cli
dec
lahf
loope
jecxz
add
andb
mov
adc
aas
push
call
push
pop
jge
mov
movsb
jbe
and
add
aaa
int
mov
dec
mov
pop
push
in
clc
mov
out
pop
mov
js
mov
and
cmpsb
in
lea
pop
shrl
insb
pop
orb
pop
lret
jle,pt
lcall
mov
call
into
mov
cmpb
jecxz
je
dec
adc
sub
fwait
and
in
inc
jge
shrb
je
hlt
dec
mov
cmp
mov
iret
jmp
add
adc
jnp
add
xor
add
jno
scas
dec
clc
dec
in
cld
push
pop
adc
ror
push
xchg
add
and
pop
push
sbb
lea
pop
xlat
mov
push
mov
cmp
push
xchg
inc
cli
push
mov
push
sbb
push
aad
pusha
sub
sbb
fdivrs
call
cmc
jae
lods
xor
or
jne
arpl
call
not
add
xchg
addr16
out
scas
push
andb
popa
outsl
in
loop
cmp
inc
adc
push
push
je
js
pushf
mov
bound
mov
cmp
out
pop
cltd
cltd
pushf
cld
jg
push
out
pop
cmp
push
movb
scas
push
add
hlt
adc
sub
je
cmp
xor
inc
push
adc
mov
outsl
mov
jbe
xor
dec
aam
add
addr16
xor
add
arpl
and
into
imul
out
aad
inc
cmpxchg
xchg
jbe
jbe
fwait
movsl
push
sbb
xor
adc
in
insl
sbb
pop
inc
push
insl
gs
dec
dec
cmp
cmp
je
xchg
mov
inc
dec
jmp
mov
imul
adc
add
filds
test
nop
push
dec
mov
cwtl
inc
cmp
push
cmpsl
aam
xchg
lods
fwait
mov
test
pop
mov
jp
outsb
rorb
test
mov
inc
lods
dec
cmpb
int3
pop
mov
pop
adc
jp
and
and
pop
mov
loope
outsl
test
rorb
cs
into
das
add
in
pmulhw
imul
scas
adc
rorl
in
nop
addr16
rclb
pop
cmp
aas
pop
popa
pop
jns
xor
sub
cltd
lods
xorb
scas
movntps
sub
xchg
lods
movsb
xchg
aaa
pushf
out
mov
movsb
jl
mov
jmp
rcr
add
loop
pop
push
or
jp
pop
mov
mov
and
lret
ja
roll
push
loope
pop
out
dec
mov
jle
mov
lds
and
addr16
cmp
shll
mov
mov
and
shlb
ja
push
dec
jmp
pop
and
popa
sub
push
cltd
jae
lret
inc
mov
repnz
imul
pop
mov
in
loopne
lret
test
out
push
or
lret
add
jae
push
in
or
jns
in
nop
mov
inc
or
movsl
sbb
mov
cmp
stc
mov
and
test
subb
dec
sahf
cmp
repz
out
rcrb
mov
push
adc
les
xchg
jp
or
inc
int3
cmc
push
push
movsl
dec
mov
push
sub
es
fnstsw
lret
mov
mov
cmp
jb
ss
aam
push
push
and
xchg
stos
add
movsl
adc
cmp
pop
fadd
or
cld
inc
jae
and
mov
notb
dec
aaa
and
add
jmp
mov
aas
int3
mov
xchg
xor
lods
sub
xor
je
loopne
sub
pop
pop
stos
cltd
jns
inc
cmp
jecxz
inc
imul
fisubrs
adc
mov
push
add
push
imul
pop
sub
out
mov
inc
popf
add
data16
negl
mov
sub
cmc
lret
push
push
fs
rclb
pop
mov
enter
push
in
jns
jae
jo
idiv
out
dec
xor
sub
repz
das
push
pop
fcomi
or
in
sti
arpl
arpl
xor
mov
out
in
icebp
inc
outsb
aam
push
je
sbb
ds
out
in
dec
and
mov
insl
shrl
xchg
cmp
or
notb
mov
or
mov
repnz
cs
mov
mov
mov
pop
lods
int
inc
dec
xor
xchg
mov
int
sti
popa
add
pop
cmc
pop
push
inc
in
push
popa
rol
out
sbb
loopne
aam
test
fsubr
xlat
mov
jbe
das
into
cmp
push
xchg
xor
dec
lea
in
nop
fs
pop
fld
pop
bound
pop
or
jmp
inc
fsts
inc
testb
inc
mulb
nop
cltd
push
pop
push
addl
jle
xchg
sahf
out
adc
aaa
pop
pop
or
sahf
mull
pop
jle
stos
scas
hlt
cmp
jl
sub
sub
fwait
dec
arpl
mov
cmp
xor
in
push
pusha
js
sub
xor
jmp
popf
cmpsb
shr
in
mov
addr16
aas
std
xchg
inc
mov
add
cmc
inc
stos
mov
shlb
mov
jge
sub
mov
jno
in
out
xor
pop
mov
pop
lods
pop
out
push
nop
pop
in
nop
arpl
xchg
xchg
jmp
sub
push
mov
jge
loopne
loope
popf
adc
addr16
lods
sub
xchg
pop
push
das
lock
pop
push
sbb
call
xor
insb
lcall
enter
repnz
xchg
dec
xlat
nop
pop
inc
je
sbb
xchg
les
sub
push
pusha
cmp
jecxz
mov
mov
movsl
and
mov
pop
mov
xor
mov
xor
push
jb
lods
stos
dec
roll
sbbl
imul
inc
or
cmp
push
pop
add
mov
sbb
fstpt
out
or
arpl
notb
pushf
adc
shll
and
nop
bound
or
pushf
mov
movl
pushf
movw
mov
pushf
pusha
push
pushl
ret
lea
ja
pusha
pushf
inc
lea
inc
inc
not
inc
pusha
cmc
xchg
sub
shld
mov
stc
test
mov
cmp
push
stc
rol
mov
clc
pusha
mov
jmp
jb
jmp
mov
cld
flds
jle
inc
scas
dec
jmp
clc
out
inc
test
rol
rcrl
rcl
ss
xor
nop
aaa
jae
fdivrs
popa
pop
shlb
mov
xor
sub
xor
idivb
xchg
mov
in
push
insl
cmc
sub
and
push
and
jmp
es
inc
xchg
xchg
inc
mov
adcb
shll
add
roll
lcall
push
mov
clc
mov
fcoms
sbb
aad
push
cmp
fists
sbb
adcl
dec
jmp
adc
jp
push
mov
sbb
movl
lea
jmp
xchg
or
dec
and
repnz
xchg
pop
xchg
das
mov
aad
xchg
adc
pop
out
xchg
das
sub
dec
xchg
movsb
fmulp
int3
xor
cmpsl
cmpsl
js
sub
lds
jnp
adc
fisubrs
aad
aam
jae
int
aam
mov
lret
mov
mov
jns
jge
dec
xchg
fildll
int
xor
lahf
mov
xor
mov
xchg
xchg
pusha
add
popf
leave
jp
fwait
sub
cmp
xchg
and
pop
out
xchg
mov
into
inc
mov
or
loop
push
mov
pop
mov
add
push
jle
mov
sbb
xor
pushf
stos
mov
cmp
sahf
lock
je
lahf
and
pop
xor
out
push
out
push
out
in
aad
sbb
outsl
push
cmp
jl
jp
sbb
in
outsl
add
push
roll
mov
pop
imul
jecxz
inc
scas
repz
inc
iret
fwait
xchg
mov
out
lea
pop
dec
fldt
mov
mov
sub
push
dec
repz
arpl
jle
das
sub
jbe
inc
pop
dec
inc
pop
bound
sbb
in
outsl
sbb
cmpl
loop
dec
pop
sbb
insb
idivb
jecxz
xchg
inc
std
in
nop
pusha
in
and
fs
jb
cmc
cmp
call
or
cltd
jmp
imul
dec
cld
jbe
jne
cs
popf
incl
or
push
lret
mov
jo
gs
adc
xor
jmp
ret
lret
cs
cmp
mov
sub
jns
xchg
in
xor
shrb
inc
inc
cwtl
jns
push
mov
ds
lods
fwait
cmp
sbb
shr
jg
sbb
cmpsl
push
xchg
andl
sarl
repnz
popl
lock
xchg
shlb
push
data16
lds
les
in
bsr
add
aam
cmp
das
xor
loopne
insb
jge
and
jg
cmp
and
lcall
sbb
ficoml
inc
mov
push
divl
add
sbb
jnp
inc
xchg
dec
cmc
in
nop
pop
in
cmp
xor
dec
inc
in
ljmp
and
std
daa
ret
add
jle
stos
mov
push
xchg
xchg
das
movups
or
loop
ljmp
pop
gs
and
mov
and
mov
cmp
movb
xor
fldenv
xchg
negl
add
mov
jp
sbb
repz
dec
mov
sbb
mov
jl
inc
adc
loopne
cld
cmp
add
fisubl
mov
dec
mov
out
xor
imul
adc
pop
push
push
scas
int3
inc
adc
ficoml
jno
insl
in
cli
in
add
push
jns
cmp
mov
sub
mov
mov
imul
es
icebp
orb
bound
ds
inc
mov
dec
outsl
pop
idivb
insb
cmc
and
inc
push
push
pop
stos
adc
call
test
push
mov
nop
and
cmp
adc
shlb
icebp
and
push
stos
mov
mov
pusha
nop
xchg
mov
jns
mov
sbb
je
adc
rcrl
roll
adc
inc
sub
test
sub
mov
push
pop
shrl
addr16
mov
xchg
lahf
pop
outsb
lea
jnp
in
cwtl
push
pop
sbb
repnz
dec
xor
jne
sbb
inc
andb
mov
xor
sub
mov
rclb
jl
pop
testl
adc
nop
pop
xchg
pop
inc
sahf
mov
stos
dec
push
insb
xchg
sub
adc
pop
pop
push
sbb
cltd
call
pop
xchg
icebp
mov
orl
jae
aas
mov
cmp
stos
jg
out
add
xchg
or
mov
mov
cmp
jmp
add
dec
test
and
dec
out
jbe
inc
adc
push
jp
xor
push
pop
test
cwtl
adc
lea
andl
push
sbb
sbb
mov
inc
mov
mov
in
nop
pop
cmpsb
fsubrs
stos
pop
mov
add
xor
out
fs
inc
sub
lea
mov
scas
adc
int3
adc
das
and
shll
test
pop
push
mov
and
test
add
les
in
fstl
stos
out
sub
dec
arpl
cmpsl
in
push
cmpsl
es
movsl
repz
std
xor
adc
dec
adc
push
int3
pop
arpl
jbe
js
std
cmp
jo
sub
jbe
push
loop
sbb
cmp
push
cmp
ret
and
cmp
fildl
fnstenv
pop
test
decl
or
in
nop
pop
xchg
xchg
hlt
pushf
lea
jne
stc
pushf
stc
push
xor
pushf
movw
push
mov
lea
jmp
inc
or
cmc
push
gs
dec
popf
push
les
repnz
out
push
lds
push
mov
xorl
jb
sbb
ffree
rorl
pop
insb
jne
or
inc
pusha
sub
push
dec
pop
pop
xor
cs
mov
cwtl
jo
nop
repz
mov
rolb
sbb
adc
mov
push
dec
cli
sbb
shr
sub
clc
in
in
shlb
test
or
cwtl
mov
daa
jp
jle
mov
adc
cwtl
stos
sbb
push
repnz
sbb
test
popf
rcl
lea
daa
flds
xor
fbstp
jge
fsubrl
push
ljmp
xor
cmp
pop
shrb
mov
adc
or
mov
daa
lods
or
mov
aaa
orb
daa
push
jo
rol
fidivs
iret
rorb
sub
pop
loope
mov
jecxz
call
insl
mov
movswl
jne
test
addr16
sub
cmpsb
push
idiv
testl
jo
jbe
xchg
rol
push
xchg
das
negl
mov
fwait
jne
scas
sub
cmpsl
xor
lahf
push
adc
aas
mov
rolb
js
inc
fstpl
in
imul
jae
xchg
sub
addl
int3
jg
mov
dec
outsl
push
fstps
test
mov
movsb
insb
mov
push
xor
and
fsubl
push
outsl
imul
xchg
cld
and
clc
or
inc
cmc
jno
and
mov
leave
out
cmpsb
int3
fidivrs
sbb
add
cmc
pop
push
leave
ret
or
push
lods
dec
jo
mov
xor
ret
or
mov
push
push
fbld
xor
testb
xorl
sbb
pusha
mov
pushl
pushf
movb
pushf
pushl
ret
mov
test
and
push
ljmp
pop
cltd
ljmp
pop
es
jbe
sub
and
mov
pop
jne
inc
pushf
and
add
dec
mov
mov
mov
in
pop
gs
push
inc
sub
inc
insl
pop
pop
fs
xor
in
xor
fs
das
mov
outsb
mov
push
stos
stos
arpl
add
addr16
es
pop
jnp
jns
jmp
mov
test
lret
mov
push
and
fcmovne
dec
fistl
push
mov
cli
das
fildl
repz
in
nop
pop
ss
mov
lea
call
mov
inc
gs
movsb
ss
imul
xchg
and
bswap
test
adc
mov
icebp
mov
sub
pop
pop
mov
clc
xchg
cmpsl
mov
imul
into
int
aam
fadd
ds
push
hlt
sahf
mov
xchg
insb
push
fs
lret
jmp
fbstp
push
sbb
mov
xlat
mov
loope
xchg
test
cmp
jae
ret
sub
mov
sub
add
cmp
loop
loope
fnstenv
and
sbb
adc
cltd
and
add
jb
dec
ficompl
add
ret
add
jp
or
sub
push
into
sbb
adc
push
pusha
movb
lea
jmp
push
arpl
mov
add
fcoms
nop
std
leave
int3
inc
mov
inc
repnz
data16
cwtl
insb
push
int
movsb
or
int
mov
mov
fnstcw
sub
mov
push
inc
das
mov
addb
add
es
sahf
pop
roll
add
movsl
dec
push
add
cmp
inc
mov
lea
adc
push
popf
cmpsb
ds
mov
ss
sbb
pop
sbb
jg
mov
je
jnp
test
mov
pop
pop
rol
and
pushf
sbbl
repz
lret
fsubl
or
pop
loop
ret
push
mov
jbe
int3
hlt
fcomps
xor
and
mov
addb
jge
fildl
dec
mov
scas
pop
call
dec
jp
sub
push
sbb
les
and
pop
pop
bound
mov
lret
mov
add
addr16
mov
xchg
ljmp
jb
ret
das
sub
add
dec
in
scas
leave
je
cmp
fcoms
repz
inc
push
dec
cmpsb
ljmp
stos
lret
fidivs
add
push
mov
add
sub
mov
movsl
push
pusha
repnz
fs
jae
ljmp
jg
xor
cmp
fbstp
mov
imul
inc
addl
sbb
xacquire
sub
pop
stos
mov
xorl
dec
out
adc
add
pop
xchg
cmpsl
jbe
sbb
hlt
sub
insl
jo
xor
bound
add
sub
cmpl
cmp
cmp
push
call
negb
mov
push
mov
pop
shlb
mov
xchg
pop
jg
daa
ret
pop
push
mov
dec
push
dec
lock
xchg
xchg
or
out
jmp
sbb
push
data16
stc
dec
or
ret
gs
push
movsb
mov
mov
mul
push
xor
mov
dec
mov
aad
inc
jge
push
loop
lret
mov
lock
cli
packsswb
add
lock
sbb
mov
fisttps
mov
push
inc
mov
mov
repz
stos
mov
mov
adc
and
aam
pop
adc
sbb
xchg
dec
daa
push
jecxz
loopne
faddl
adc
sbb
sub
add
in
nop
push
les
jl
lret
or
xchg
call
jbe
leave
ja
jno
cmpl
shl
add
cmp
fadds
adc
enter
adcb
xor
scas
lcall
mov
xchg
xchg
mov
push
dec
jecxz
adc
mov
arpl
cmp
jnp
push
insb
stc
xchg
sub
das
and
xchg
mov
fwait
test
lods
mov
loop
push
addl
lahf
inc
in
pop
push
fistpl
push
mov
pusha
outsl
ja
ret
add
ds
ret
pop
out
or
add
in
nop
push
mov
and
movl
jmp
jmp
pushf
pusha
mov
bswap
pushf
mov
pusha
push
pushl
ret
shr
stc
cmp
pushf
lea
je
pushf
stc
pushl
cmp
call
dec
call
inc
pushf
jmp
jmp
and
mov
jle
xor
jno
xchg
aam
push
mov
lods
cwtl
cwtl
aad
dec
jnp
mov
icebp
lahf
imul
idivl
ret
jle
mov
cli
sbb
cmc
das
fstpl
mov
aaa
aaa
enter
mov
addr16
inc
mov
pop
pop
xchg
lds
push
es
ljmp
out
out
mov
push
lods
in
cmp
push
test
lds
xlat
cli
sti
or
aad
cld
aas
dec
jle
add
pop
xor
mov
xchg
cmpsl
cmp
adcl
and
lret
sub
add
imul
xor
mov
push
jg
sbb
pmaddwd
fdivrl
negl
lahf
scas
sub
mov
push
jns
jle
repnz
mov
jne
xor
push
dec
call
xor
fs
vpcmpgtd
xchg
sahf
mov
test
xchg
pop
xor
sub
repz
adc
sub
les
push
cmpsb
pusha
xchg
mov
dec
int3
mov
and
xchg
pop
jns
out
sarb
sbb
in
lock
pop
imul
in
lods
loopne
cmp
jae
enter
nop
sbb
or
jge
add
out
jno
movsb
out
xor
inc
mov
sub
in
popf
xchg
xchg
or
fnstsw
test
ja
addr16
nop
push
add
roll
flds
mov
stc
inc
pushf
imul
cmpb
sub
movsl
lock
and
sbb
sub
xlat
scas
mov
pop
cmp
jge
mov
mov
and
add
mov
or
mov
fadds
cmp
mov
rcr
sbb
jmp
dec
loope
test
mov
lods
mov
outsb
jecxz
sarb
in
jp
jnp
lock
cld
aam
xchg
in
push
ret
scas
xchg
lods
ret
push
and
pop
inc
fadd
ja
lea
dec
lods
pushf
ret
fld
cmpsl
arpl
ljmp
inc
and
icebp
adc
cmc
sbb
jo
push
rorl
pushf
cmp
inc
push
out
xchg
inc
and
es
mov
add
test
out
jmp
rorb
aam
xor
aam
and
mov
movl
test
add
pusha
movb
lea
jmp
stc
rcl
btr
adc
mov
jmp
xor
cwtl
mov
imul
mov
inc
mov
stc
pop
xchg
adc
or
mov
mov
or
popf
sub
insl
xor
sahf
je
int
push
in
sub
mov
movsb
mov
xor
xchg
xchg
ret
decb
fnstenv
inc
pusha
rcll
repnz
push
mov
pop
inc
and
cmp
jns
mov
rcrl
dec
test
add
dec
sbb
inc
dec
fwait
mov
movl
in
nop
push
push
pop
in
and
add
ss
clc
rorl
push
mov
scas
add
sbb
inc
mov
mov
inc
dec
fcomp
xchg
xchg
and
sbb
fsubr
and
mov
cltd
addb
cmpsb
pop
aam
dec
cwtl
hlt
push
xchg
subl
jg
push
adc
jg
lea
cmp
aad
in
jp
cmpsl
xchg
xchg
mov
xchg
pushf
cmp
fists
jae
dec
jl,pn
leave
push
mov
or
push
fs
jno
jno
jecxz
xchg
sub
lea
xor
je
xchg
insl
loop
push
aaa
xchg
jno
int3
adc
cmp
and
pop
cmpsb
rclb
push
jg
sbb
add
inc
cmp
push
jecxz
xchg
push
shl
das
hlt
push
insl
movsl
aaa
xchg
cmc
push
out
repnz
xchg
xlat
push
movl
mov
in
cmp
out
inc
mov
or
mov
inc
mov
push
cmp
outsl
mov
test
push
xchg
add
and
out
icebp
shrb
adc
scas
test
mov
xorb
stos
int3
repz
adc
pop
dec
and
sbb
push
fbstp
push
in
dec
ret
push
xchg
repnz
div
cmp
les
popf
xchg
out
pop
test
xlat
mov
xor
cmp
sub
aam
cld
insb
and
lds
xor
les
xchg
jg
mov
push
fwait
rorl
or
popf
jp
mov
jo
and
nop
dec
in
es
rcl
sbb
adc
or
or
or
ret
push
sbb
cmc
xchg
orb
adcb
xor
out
xchg
dec
insb
lea
jns
lock
cld
daa
or
mov
jno
das
fcmovnu
loopne
mov
xchg
inc
xchg
mov
adc
xchg
lds
pop
outsb
mov
cs
dec
test
pop
inc
into
lret
inc
inc
into
lret
jno
stc
mov
stos
imul
jmp
ret
xlat
add
mov
sub
mov
sbb
mov
jae
mov
push
push
imul
hlt
pop
adc
imul
xchg
mov
sbb
xorb
adc
call
sbb
sub
dec
and
pop
das
dec
repnz
and
repnz
lahf
push
cld
inc
fisttps
push
or
dec
in
nop
dec
lods
mov
lock
les
ss
lret
push
xchg
in
sbb
jbe
add
lods
leave
std
std
out
dec
push
test
pop
jge
cmp
imul
add
call
mov
mov
into
jmp
test
sarl
mov
dec
clc
push
and
mov
xor
add
mov
icebp
stos
adc
arpl
pop
js
mov
das
outsl
jne
mov
aam
mov
fisttps
pop
lock
arpl
dec
out
and
xlat
imul
adc
mov
es
xchg
mov
cmpsl
orb
cmp
cli
std
cmp
pop
arpl
pop
push
xchg
popf
jbe
icebp
stos
aaa
repz
pop
cmp
enter
sub
dec
cld
jmp
aaa
push
pop
sub
movsb
fists
mov
or
dec
cmp
shll
push
lret
stos
out
mov
and
inc
ja
popf
cltd
jne
divl
mov
stos
fistpl
mov
sub
lcall
sarb
mov
in
mov
or
in
add
xlat
loopne
dec
and
insl
lea
or
pusha
in
dec
shrb
or
in
nop
dec
jne
movsb
xor
jmp
add
xchg
or
jmp
or
jns
or
mov
pop
jg
or
push
lahf
call
cmp
cld
add
aad
ud2
or
mov
ret
lds
test
int3
rorb
int
lcall
or
repnz
mov
mov
repz
xchg
sub
sub
mov
lahf
sbb
xchg
pop
cmp
jecxz
and
adc
sub
or
repnz
in
jb
sbb
adc
fldenv
adc
add
loopne
push
or
push
inc
ret
mov
xor
pop
ja
pop
lods
or
lock
cmpsb
aaa
xchg
push
test
xor
push
imul
data16
out
cmpb
push
int
jmp
ret
jne
fnstsw
lds
xlat
and
jae
fld
cmpsl
push
xor
mov
mov
imul
test
in
or
sbb
scas
stos
add
cmp
mov
or
mov
scas
push
pop
mov
fcmovu
js
je
bound
xor
lods
inc
call
xchg
jmp
testl
push
loopne
cmpsb
out
shrl
out
mov
adcl
stos
xor
les
lret
mov
fldenv
call
adc
imul
rcl
push
sub
jns
lods
push
mov
dec
leave
jns
and
in
mov
mov
ds
ret
mov
push
pop
adc
dec
sub
pop
aam
mov
nop
dec
inc
jg
pushf
add
push
pusha
push
lea
jmp
dec
xchg
adc
aam
cs
scas
pop
in
pop
inc
cmpb
fstps
sub
push
adc
lock
mov
push
jb
and
sahf
filds
dec
inc
mov
xor
xor
inc
rep
outsl
xchg
out
idivb
call
nop
mov
lret
pop
pop
fsubs
mov
mov
jae
or
pop
sti
xor
bound
in
fidivl
inc
pop
loope
xor
js
mov
sub
add
les
cli
gs
add
jno
sub
pop
in
nop
dec
pop
aad
insb
and
mov
pushl
ret
add
inc
inc
js
outsl
insl
insl
outsl
outsb
inc
inc
imul
je
outsl
outsb
and
jno
jbe
pusha
dec
sahf
iret
jo
jle
nop
sbb
or
xchg
jo
dec
movsb
adc
mov
push
jg
ret
mov
pop
loopne
je
sbb
test
clc
in
lea
add
lods
adc
push
jmp
xorl
push
mov
ds
pop
stos
movsb
xor
enter
loop
shlb
xor
sub
imul
cmc
or
pusha
je
xor
pop
cmp
in
xchg
sub
rcrl
or
popa
xchg
sbb
pop
pop
mov
call
and
insb
scas
aas
dec
sbb
shll
jmp
aas
xchg
mov
mov
andl
fmulp
lods
cmpsb
icebp
movsb
cmp
sbb
sub
gs
ret
in
nop
dec
pop
adc
push
outsb
hlt
lds
fisubrl
int
das
test
popa
lock
fnstcw
int
push
pop
cmp
pop
pop
mov
bound
pop
jecxz
mov
movsb
enter
add
popa
jg
xchg
inc
call
lods
or
mov
rcrb
add
cwtl
es
mov
push
ljmp
iret
inc
cmp
scas
add
dec
cmc
jae
and
insb
movl
mov
cmc
add
ss
xchg
shr
lcall
dec
mov
cld
jge
fisubrl
icebp
jmp
cmp
dec
jmp
out
loopne
adc
mov
adc
imul
pop
sbb
ja
cmp
mov
notl
or
push
mov
sbb
lret
loope
lret
repz
rcrb
in
pusha
push
mov
lret
dec
popf
sub
mov
mov
sub
inc
sbb
andl
pop
sbb
adc
jae
fsubs
jo
aam
orb
jb
ljmp
fimull
call
sbb
jp
rcrb
jge
dec
je
repz
push
push
mov
xchg
insl
cwtl
mov
sbb
xchg
mov
fcomip
jge
pop
in
loop
ds
pop
or
shlb
jo
les
and
nop
pop
cmpsl
cmp
sub
rorb
pop
add
dec
xor
fisubrs
inc
test
test
pop
in
pushf
out
cmpsb
cmp
in
adc
cwtl
push
out
and
cmp
and
mov
cmp
pop
shlb
cwtl
sub
lcall
add
push
fcoms
add
or
pop
lea
sbb
inc
xlat
movsb
faddp
cmp
leave
data16
push
jae
push
push
in
aas
cmp
pop
pop
xchg
xor
push
into
dec
movsl
daa
lods
sbb
lock
cmc
fs
push
outsb
in
xchg
mov
mov
scas
sub
mov
mov
mov
xlat
xor
repz
xlat
mov
or
pop
and
pop
sbb
sahf
adc
test
and
insl
fs
cmp
insl
or
jmp
movsb
rorl
dec
das
push
pop
mov
daa
fs
das
js
loop
gs
jmp
hlt
jb
add
jmp
lahf
shll
push
test
jne
xor
push
dec
fidivrl
xor
mov
sbb
xor
ja
sbb
add
in
push
es
mov
sub
dec
adc
dec
popa
adc
fnsave
cmp
lock
enter
cwtl
xor
push
bound
cltd
cmp
fdivr
push
outsb
mov
and
mov
mov
xchg
movsl
stos
dec
xor
pop
pop
ja
jbe
push
pop
lret
or
mov
roll
push
lock
inc
inc
outsb
adc
shll
xchg
mov
push
pop
mov
les
xlat
pop
out
hlt
pop
lods
into
mov
pop
fildl
cs
mov
xchg
icebp
cmp
ss
mov
js
adc
cmp
dec
xlat
addr16
sub
shlb
jbe
js
xchg
pop
sub
repz
cwtl
push
aam
das
aam
iret
mov
xchg
jne
cs
cmp
clc
and
jbe
nop
inc
imul
leave
dec
push
inc
jne
sarb
pop
leave
jo
das
cmpsb
inc
loop
pushf
adc
inc
cmpb
sbb
pop
push
mov
nop
fstpl
mov
imul
loope
push
push
pusha
hlt
jmp
mov
xchg
mov
push
idiv
ljmp
inc
xchg
shll
mov
inc
das
outsl
push
xchg
rcll
sub
ret
ret
divl
push
jbe
xor
mov
push
stos
cmp
icebp
movsl
sub
in
lahf
movl
sbb
xlat
bound
jmp
and
aaa
or
dec
push
mulb
fsubrl
push
test
xchg
das
adc
cmp
sub
mov
xor
pop
add
arpl
mov
or
and
daa
pushf
pop
mov
cmp
sub
in
nop
inc
jo
add
add
push
test
call
inc
shr
mov
pushf
pushl
call
push
sub
out
dec
je
rcrb
sub
cld
pop
pushf
pop
loop
mov
xor
push
jle
das
fcmovbe
shlb
nop
shlb
pop
xor
add
add
jo
adcb
std
adc
xor
cmp
sbb
mov
jbe
scas
fdiv
or
push
pop
push
addr16
shl
andb
sbb
or
mov
dec
pop
mov
andb
adc
mov
pushf
push
lea
in
and
daa
mov
imul
popf
xor
mov
adc
mov
data16
pop
mov
add
pop
fidivs
cmp
call
push
enter
adc
jmp
std
es
sub
push
dec
dec
xchg
es
es
xchg
mov
dec
dec
jl
dec
and
sbb
mov
sbb
pushf
sbb
push
xchg
rorb
aad
shl
test
inc
push
shrb
dec
push
inc
push
imul
sub
pusha
cmp
enter
lret
cwtl
fs
nop
aaa
push
insb
and
mov
or
cmp
mov
loopne
rcrl
xchg
inc
cltd
es
nop
inc
sbb
adc
mov
movw
pushl
ret
mov
out
push
xor
notb
fsubrl
jbe
leave
popf
stos
pop
sahf
out
mov
rep
in
fs
int3
rcrb
jb
adc
imul
sbb
push
ss
jns
fistpll
mov
cmp
xor
push
btr
push
scas
mov
cmp
jns
xlat
lahf
sahf
repz
cmp
repnz
cmp
cmp
std
mov
in
test
push
sbb
xor
jne
mov
test
icebp
lcall
orl
shlb
inc
inc
sbb
xchg
lret
test
ret
jne
shr
ds
add
insb
lret
dec
xchg
scas
in
nop
inc
adc
push
or
int
fstpt
and
mov
jle
or
jl
sub
ror
sbb
push
adc
std
aaa
or
jg
mov
xchg
std
sub
lret
pop
pop
push
mov
push
sub
cmp
ffree
testb
and
or
push
in
mov
dec
push
insl
pushf
data16
xchg
xor
mov
push
iret
jle
sbb
aaa
aam
je
nop
inc
je
jg
call
std
out
push
adc
test
push
xor
push
pushf
inc
jmp
call
clc
sahf
fwait
in
xchg
lcall
les
shll
test
aad
mov
jmp
das
sub
test
loope
push
adc
lods
mov
nop
arpl
sub
xchg
pop
cmp
out
push
add
fs
mov
mov
push
out
jg
push
mov
paddw
mov
clc
aam
mov
rclb
jmp
leave
sahf
fidivl
and
and
das
mov
scas
pop
lea
das
push
pop
ficoml
cmp
and
mov
insl
pop
push
jb
jnp
and
push
inc
xor
xchg
cmp
scas
iret
lret
jg
mov
pop
lahf
stos
mov
je
mov
mov
mov
jg
add
addr16
sub
nop
inc
push
inc
pop
push
push
outsl
arpl
jne
and
je
jns
jo
imul
arpl
insb
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
dec
xor
je
fimull
add
push
xor
cmp
test
dec
xchg
sub
cmp
mov
jns
and
xor
into
pop
lret
and
and
ja
in
pop
lahf
pop
xchg
add
shrl
loopne
stos
mov
dec
push
pushf
les
out
into
out
out
insl
push
mov
inc
stos
or
adc
push
filds
xchg
sbb
sbb
jp
jle
imul
xchg
ja
outsl
jb
insb
aaa
xor
bound
add
out
jmp
inc
mov
movsl
adc
insl
out
cwtl
jp
pop
bound
test
mov
adc
mov
out
in
jne
repz
pop
stc
test
test
cmp
xor
cwtl
cltd
or
jno
dec
aas
mov
cmpsb
test
jg
out
adc
xor
repnz
sbb
sub
fdivr
pop
lea
insb
stos
decb
and
popa
cmc
jb
in
pop
movsb
mov
lret
cmpsl
pop
xor
sti
loope
adc
mov
shll
inc
fwait
sti
push
xlat
pop
arpl
pop
fdivl
add
lret
and
mov
cmpsb
sti
jbe
wrmsr
movb
push
das
rcr
out
xchg
pop
iret
xlat
xor
lods
xchg
inc
xor
and
les
loopne
lret
sbb
xchg
push
in
nop
mov
sub
shll
adc
push
sbb
mov
cmpsb
shrd
pop
cmp
movsb
cmpsl
mov
jle
pop
jecxz
jg
andb
jo
mov
xor
mov
movsb
enter
test
pop
fwait
pop
fldt
dec
push
adcb
daa
nop
adc
push
sbbl
jmp
ret
das
ja
dec
jne
outsb
inc
jne
push
das
loopne
pop
stos
inc
popa
xchg
mov
push
stos
jge
push
xor
sbb
cmp
cmpsb
out
dec
mov
les
movsb
mov
dec
cmc
xorl
adc
push
cli
or
loop
out
adc
jnp
fsubrl
ljmp
adc
add
jmp
cmpb
les
or
xor
push
mov
int3
push
jmp
nop
cmp
shl
stc
call
lods
mov
fisubl
mov
arpl
repnz
das
sarl
dec
inc
insb
inc
jno
mov
leave
mov
sub
inc
xor
mov
cmc
jo
popa
ficomps
lret
sahf
test
mov
dec
push
mov
dec
mov
rcrb
jg
enter
or
adc
dec
xor
cmp
jp
inc
adc
push
ret
mov
rclb
out
jbe
or
nop
cmp
dec
fwait
pushf
push
add
bt
push
jmp
cmc
cmpb
pusha
jmp
pushl
lea
ja
call
adc
in
popf
loopne
imul
imul
rorl
lock
js
pop
add
push
lods
clc
stos
lea
jae
cmp
xchg
push
icebp
pop
jne
mov
dec
mov
sub
or
cwtl
ret
rorl
dec
nop
jecxz
cs
je
xchg
pop
mov
jge
loop
sub
mov
jb
mov
ret
into
or
std
push
adcb
outsb
inc
or
hlt
ret
int3
inc
sub
test
into
mov
mov
jo
cmpsl
jno
setae
les
stos
cmp
sbb
mov
ficoms
dec
ret
push
mov
gs
nop
cmp
les
imul
shrb
xchg
cmp
inc
lods
jb
sbb
enter
or
lahf
cmp
add
or
sbb
or
push
ss
les
cltd
fisttps
pusha
mov
xchg
sub
mov
fidivs
push
mov
stc
pop
mov
out
cmp
ror
and
iret
movl
inc
imul
pop
jge
imul
mov
aaa
repz
shl
fs
pop
pop
call
enter
push
das
mov
mov
mov
adc
xchg
cmp
jno
jge
dec
mov
dec
into
jp
in
nop
cmp
cmpsl
add
aam
cmp
jb
test
movl
mov
pop
out
pop
sub
fcoms
xchg
xor
adc
jg
test
clc
jg
jbe
jg
pop
xchg
inc
adc
sub
jo
push
sbb
xorb
movsl
shlb
adc
jns
test
out
mov
dec
jo
rcl
enter
lds
mov
jnp
adc
mov
loope
jae
jns
mov
mov
fcmovbe
push
leave
jnp
inc
gs
dec
clc
cmp
fwait
push
lods
jl
sbb
cmpsl
les
adc
mov
xchg
sbb
sbb
in
nop
cmp
jp
sbb
adc
push
pop
loopne
xchg
imul
stos
aaa
xchg
rorb
and
pop
mov
loopne
cmpb
xor
jmp
insl
mov
sub
test
scas
xor
push
sti
cmp
test
pop
outsl
mov
push
mov
lcall
inc
pop
arpl
jnp
iret
adc
fidivs
daa
jmp
outsb
movsb
add
enter
gs
cmc
pop
cmp
aaa
pop
push
pop
fwait
sbb
inc
daa
mov
pop
push
mov
add
cmp
jmp
fimull
pop
fistpll
cmp
add
or
ret
test
fs
jp
pop
loope
xchg
push
mov
push
push
in
nop
cmp
int3
cmpsl
adc
es
test
pop
cmp
dec
and
xorb
xor
outsb
sub
dec
fcomip
sbb
stc
insl
push
and
cmp
add
cmpsl
dec
lds
cmpsl
lods
jge
dec
movsb
and
adc
push
and
mov
daa
int3
das
mov
gs
test
xchg
repz
popf
push
lock
xchg
xor
popf
popa
dec
jae,pn
cltd
mov
inc
dec
or
mov
loopne
rcr
and
cmp
sub
jl
sbb
jge
in
nop
cmp
rorb
push
fidivl
jp
xchg
jb
sbb
aad
adc
inc
insb
test
inc
mov
and
push
dec
sbb
xchg
pop
pop
or
mov
cmp
fldenv
inc
mov
push
iret
fstps
inc
lock
outsb
ret
int
inc
movsl
cs
jae
popa
inc
in
pop
frstor
scas
testb
sahf
lea
hlt
pop
aad
push
jge
cmp
sbb
mov
int
sub
cmp
and
aad
or
xchg
hlt
jl
inc
pop
loop
lret
push
xchg
jo
ret
push
sbb
int
std
out
ret
jge
pop
mov
xchg
nop
notl
pushl
call
xchg
outsl
xor
inc
mov
stos
scas
and
lds
into
popf
push
mov
dec
out
shl
sbb
mov
cmp
mov
sarl
out
aas
es
lods
mov
and
fidivl
fwait
adc
and
fistpl
rolb
jg
dec
dec
sbb
push
fsts
dec
and
cmpsb
lahf
subl
cmp
lods
pop
stc
fcmovnbe
sbb
mov
test
mov
jle
cwtl
jmp
outsb
adc
mov
popf
jno
fs
jb
clc
cmp
jmp
mov
inc
iret
xorb
pop
ljmp
inc
mov
xchg
mov
or
sbb
cmp
xor
xor
out
xchg
repz
es
sub
mov
jns
dec
fwait
inc
out
lahf
ja
inc
dec
sbb
imul
push
ffree
xchg
mov
cmp
ret
sarb
ror
je
in
dec
jns
fidivrs
adc
inc
negb
in
mov
lods
cltd
mov
rcr
xchg
xor
mov
out
lock
leave
pop
cmp
cmp
xchg
scas
nop
sbb
dec
jmp
aas
lea
lock
into
cli
jbe
mov
ljmp
in
xchg
jns
clc
lds
fdivl
sub
ds
sbb
ret
add
sub
daa
sbb
ret
ja
mov
testl
fwait
xchg
inc
fistl
mov
xor
rcrl
cli
lds
dec
mov
mov
add
sub
add
add
shll
mov
mov
or
add
add
lret
pop
roll
pop
pop
into
lea
ss
or
adc
push
xchg
sbb
xor
inc
xchg
xor
out
push
addr16
pop
lock
sub
repz
shr
dec
js
lahf
and
jecxz
jae
add
in
jo
cmp
dec
cmc
in
lret
add
mov
insb
sbb
adc
inc
and
jne
mov
je
pop
arpl
fadds
les
sbb
sbb
mov
repnz
mov
add
pushf
ret
mov
insl
mov
mov
jmp
pop
das
imul
mov
imul
icebp
pop
in
push
adc
mov
inc
loop
nop
xor
arpl
mov
cmp
sub
inc
mov
roll
jge
dec
jns
bound
imul
rcl
enter
cli
cmp
je,pn
push
jns
mov
sub
mov
add
in
pop
inc
aas
mov
call
pop
cmp
insl
inc
repz
mov
icebp
and
xchg
fcmovb
pushl
nop
mov
lahf
test
inc
xor
dec
and
xlat
in
test
mov
dec
fstpl
jle
push
push
adc
imul
das
add
xchg
jmp
or
xor
fistpll
aad
test
sbb
cmp
xor
and
ror
jne
mov
loopne
out
cmp
lahf
fiadds
add
cmp
fimull
xchg
dec
cmp
pop
repz
cmp
inc
sbb
and
dec
pop
mov
jge
daa
dec
ss
sbb
es
cmc
in
or
test
cs
mov
jl
cmp
lds
rclb
sbb
jns
fstps
push
jo
gs
outsl
pushf
sbb
out
outsl
les
loopne
imul
push
aad
mov
inc
lret
mov
into
les
lea
das
movsl
pop
xchg
xor
nop
xor
test
hlt
jl
loop
daa
cmp
mov
push
inc
cmc
xor
sbb
call
ret
enter
push
mov
fsub
subl
cwtl
xchg
imul
adc
xchg
sbb
roll
xorl
and
push
adc
es
adc
iret
inc
das
cmp
je
pop
cmpl
mov
loope
in
jne
int3
arpl
cmpsl
jmp
xor
sbb
sub
push
icebp
lock
dec
xor
jmp
icebp
insl
jl
cmp
pop
por
cmpsl
cmpsl
imul
pop
lahf
aas
popf
rorl
add
mov
inc
jnp
push
push
jns
push
lahf
push
idiv
test
out
cmp
sti
aam
push
insl
lret
movsl
fwait
xchg
roll
out
or
ljmp
mov
pop
aaa
fsin
bound
push
lods
pushf
push
les
xor
push
push
loope
imul
adc
sbb
scas
jo
jmp
lahf
xor
outsl
push
js
repnz
js
jecxz
mov
cmpsb
adc
cltd
cwtl
frstor
ror
pop
stc
out
mov
xor
divb
aam
mov
inc
xor
xor
xchg
setp
mov
popf
fwait
mov
int
arpl
es
in
nop
xor
je
enter
jl
mov
mov
push
xchg
dec
divl
pop
nop
imul
dec
sub
push
sub
mov
push
sbb
je
gs
sbb
loopne
jle
cmp
shll
imul
xor
cmp
pop
mov
cli
mov
mov
divl
lcall
xor
mov
sub
lods
and
xor
jbe
icebp
iret
push
cld
imul
push
adc
cmp
xor
xchg
aas
mov
nop
xor
jne
stos
cmpsl
mov
and
incl
sub
dec
test
lret
push
test
sarl
mov
adc
sub
mov
push
pusha
xor
mov
dec
pop
xor
lret
decb
cmp
xchg
mov
int3
mov
sahf
push
mov
mov
stc
xchg
xchg
add
test
sbb
dec
es
dec
clc
stc
add
scas
daa
adcb
pop
adc
push
mov
repz
cmc
in
nop
xor
pop
add
popf
push
dec
scas
dec
push
xchg
xlat
pop
cli
jae
aas
nop
cltd
idivl
ss
or
mov
cltd
cld
push
cwtl
xchg
sbb
lcall
xchg
gs
push
and
dec
inc
adc
mov
test
or
adc
addr16
mov
scas
dec
push
out
in
cli
shl
cltd
cmp
inc
xor
cmp
in
xchg
dec
xor
out
in
sub
into
cld
jecxz
xchg
pusha
pop
and
in
das
inc
imul
and
test
rcl
or
mov
fimull
sub
cmp
fdiv
cmp
xor
dec
mov
jne
dec
stos
insb
lea
mov
push
pop
mov
dec
cmc
mov
rol
bt
clc
pushf
cmc
cmp
call
cmp
mov
jne
pop
out
test
lds
xchg
xor
dec
mov
cmp
outsl
sub
add
and
out
test
xor
mov
dec
mov
dec
gs
cltd
shlb
xor
es
pop
outsb
jg
sbb
mov
es
inc
push
mov
scas
pop
outsl
add
adc
fwait
leave
test
jns
fcomps
into
shll
test
hlt
icebp
std
cmpsb
fwait
test
pop
arpl
jbe
sub
subl
sbb
inc
mov
nop
das
cmp
mov
roll
adc
pushf
mov
stc
cmp
cmpb
pushf
pushl
pusha
lea
jne
jmp
out
imul
loop
jg
dec
ljmp
fwait
cmc
jg
jmp
mov
push
mov
mov
adc
leave
push
pop
les
ret
xor
lcall
jecxz
lcall
bound
mov
int
stc
out
aam
jns
dec
aad
xchg
push
outsb
into
inc
std
stc
or
lock
repnz
add
mov
pop
hlt
jecxz
das
out
mov
aad
mov
dec
pop
fwait
xchg
and
clc
mov
or
mov
out
pop
inc
aam
icebp
mov
cmp
inc
imul
iret
xchg
xor
xor
pop
in
push
lods
jns
inc
pop
enter
cs
pusha
mov
test
jg
loop
aaa
jecxz
mov
jne
adc
push
sbb
mov
scas
dec
loopne
or
ds
out
sbb
adc
push
pop
or
jne
jmp
inc
inc
std
aam
pop
cmp
mov
mov
xchg
cli
pusha
fs
pop
icebp
int
sub
lods
ds
std
sahf
inc
dec
push
iret
pop
push
pusha
cmpsb
mov
aad
call
add
push
cld
jnp
mov
xchg
cld
pop
pop
mov
mov
fs
lods
gs
add
xchg
mov
fistps
stos
xor
loope
aad
call
add
cs
cmp
cmc
imul
call
jnp
fadd
out
add
xorl
pop
mov
dec
mov
cmp
dec
push
bound
or
pop
push
sub
cmp
jo
adc
jl
pop
xor
jo
mull
lea
mov
repz
xchg
push
adc
inc
mov
add
lahf
xchg
mov
jge
inc
or
mov
add
xor
sti
fldcw
into
jmp
outsl
adc
test
or
push
jge
arpl
cli
add
mov
adc
addr16
jae
mov
mov
out
cmp
add
sub
scas
mov
adc
lods
les
mov
sub
pop
jno
and
insl
out
pop
mov
test
pop
inc
out
mov
imul
jp
xor
pop
lods
cs
mov
mov
rorb
jmp
sub
mov
movsl
in
or
push
shlb
hlt
negb
adcl
jle
pop
add
lods
adc
aas
sub
or
mov
cmpsl
and
movzbl
jmp
mov
mov
nop
sub
sbbb
bound
call
je
jp
lds
push
pop
jmp
nop
or
in
sahf
and
xor
stos
dec
sub
jb
idivl
fiaddl
xchg
push
or
cmp
jae
sbb
push
jle
outsl
mov
xchg
sub
out
imul
cmpb
rorl
cmp
test
lcall
out
jb
mov
in
xchg
daa
fldcw
jb
cwtl
xor
push
or
jl
lret
lods
aad
mov
lcall
jns
sbb
mov
or
inc
or
orl
sbb
jl
lds
xor
arpl
orl
push
je
add
jnp
pop
pushl
mov
hlt
or
aas
hlt
jae
in
cmp
add
addl
jb
mov
push
lret
mov
hlt
jg
push
mov
jbe
enter
mov
ret
out
pop
jb
jg
out
cmpsl
xchg
jno
int
jne
arpl
sub
mov
jns
xchg
dec
hlt
subb
sarb
inc
push
fdivrl
stos
adc
addl
cld
mov
sub
push
outsl
mov
into
pop
jnp
fisubrl
lods
test
out
out
outsb
in
dec
into
popf
jns
je
leave
jle
aad
mov
mov
imul
jmp
pop
cld
jne
in
nop
sub
sti
sub
test
add
fiaddl
mov
out
int
push
enter
lea
sbb
int3
dec
or
ret
adc
ficoml
xchg
addr16
xor
inc
mov
stos
mov
pop
int3
mov
xchg
and
and
mov
pop
pop
dec
mov
sbb
rcrb
cs
rcrl
shr
push
mov
push
bound
sbb
xchg
adc
movsb
aas
pop
popf
mov
imul
cltd
cli
shlb
sub
jno
sub
adc
out
bound
nop
sub
push
pop
movsb
orb
rcl
test
jge
cmp
or
xor
outsb
sbb
push
jo
ds
adc
xor
push
mov
jmp
jl
pusha
mov
sahf
addb
mov
lret
ljmp
test
lock
loopne
or
mov
bound
loop
pusha
ret
es
subb
sbb
in
or
outsb
rcrl
in
push
add
add
push
sub
jmp
inc
lret
lds
mov
lock
mov
lock
add
popa
mov
inc
in
nop
sub
or
push
push
add
inc
and
push
pushl
ret
or
lea
pop
pusha
sub
enter
mov
add
cwtl
aas
and
jmp
lock
dec
test
imul
cmc
testl
xchg
ficomps
or
cltd
cmp
fs
imul
stos
mov
adc
js
mov
jle
testl
repz
xor
cmp
cs
pop
pop
or
sbb
aaa
inc
jae
jg
imul
mov
mov
add
pop
outsb
rolb
mov
scas
mov
aas
sbb
jb
inc
jg
sub
inc
and
and
nop
sub
cmp
mov
out
cmpsl
or
push
push
notl
jg
or
xor
lock
and
xchg
mov
lahf
mov
xchg
addr16
dec
adc
sahf
mov
movb
mov
mov
sbb
and
mov
jo
lock
sub
shrl
add
push
xchg
mov
icebp
nop
sbb
pop
push
addr16
lret
lock
mov
test
push
lock
movsl
dec
stc
mov
popf
imull
xor
loopne
fistpll
sub
mov
push
data16
pop
icebp
jle
imul
nop
sub
and
subl
add
jo
pushf
lea
jne
call
cmp
dec
imul
insl
jns
and
insb
mov
test
dec
mov
xchg
inc
jae
jne
cmp
adc
in
sub
cmp
stc
sbb
in
imul
mov
repnz
iret
jecxz
rolb
and
jnp
sbb
cli
insl
unpcklps
cmp
arpl
lods
and
mov
push
ret
inc
addl
mov
mov
mov
loope
jg
mov
out
push
dec
mov
mov
sbb
std
xchg
sahf
mov
mov
call
or
adc
insl
pop
cmpsl
repnz
sub
push
hlt
jge
mov
repnz
cld
mov
xor
and
push
testb
xchg
sar
mov
xchg
pop
jns
push
mov
push
jbe
xor
ss
jnp
shrl
fimull
pop
test
pushf
xor
lods
and
and
imul
pushf
add
pushl
push
pushl
pusha
lea
jne
push
mov
pushfw
popw
rcr
mov
mov
push
pushf
not
push
rol
call
mov
jl
fs
fildl
cltd
aam
sub
add
into
repnz
cmc
loop
adc
icebp
mov
ficoms
sub
mov
mov
pop
out
sbb
push
push
and
push
pop
mov
ja
stc
jno
cltd
adc
in
ret
inc
mov
or
sbb
dec
push
rorb
mov
pushf
gs
dec
xchg
les
lret
mov
pushf
cmpsl
movsl
mov
fisubrl
mov
cmc
adc
push
ds
push
enter
jg
lahf
pop
sub
xorb
push
lods
adc
jp
aas
sar
cltd
sbb
inc
popf
pushf
in
nop
and
mov
movsb
stos
leave
xchg
ljmp
dec
test
or
and
shlb
int3
push
test
sub
mov
sahf
cs
dec
cmpl
inc
xor
addr16
jmp
pop
sub
rclb
sbb
jno
call
cmp
add
pop
mov
shlb
xor
ret
dec
lock
push
ja
ja
jns
push
mov
push
mov
pusha
jl
out
mov
mov
ret
out
fs
lcall
sbb
dec
and
inc
loop
rorl
movntps
xchg
mov
js
dec
stos
insl
aam
xchg
and
pop
xlat
leave
in
nop
and
mov
loope
push
fcmovbe
push
lods
sbb
mov
sti
lods
movsl
xchg
and
jno
subl
leave
test
je
or
add
add
cmp
xchg
shl
push
jge
cltd
push
test
xchg
pop
cmp
or
cmp
sub
in
inc
push
sbb
jle
adc
xor
aad
or
pop
aaa
add
jg
pop
mov
mov
int3
cmp
push
cltd
repnz
push
negl
xor
add
nop
mov
dec
fst
into
pushf
fldenv
popf
rorb
enter
sbb
lahf
addr16
pop
fmull
pop
pushf
js
add
lahf
out
or
pushf
aad
dec
fidivrs
jecxz
loop
add
ds
movsl
leave
insb
xchg
das
xchg
sbb
and
cli
rorb
adc
or
xchg
and
mov
jns
loop
stos
pop
call
in
xor
mov
scas
pop
fwait
dec
lds
loopne
inc
cmp
lds
pop
pop
repnz
and
in
cmp
inc
leave
ret
or
mov
mov
aad
mov
lret
outsb
jo
mov
aam
fmulp
fcmove
push
pop
push
xchg
daa
mov
inc
jecxz
out
and
fdivrs
scas
jge
in
nop
and
mov
and
mov
mov
das
adc
jmp
xchg
lahf
lret
js
cmpsl
andb
aam
mov
enter
mov
and
mov
inc
icebp
jae
sbb
dec
and
push
sub
jo
mov
mov
loopne
cltd
adc
pop
scas
mov
movsb
fidivrs
pop
aas
in
jmp
add
dec
pop
loope
cmpsl
xchg
mov
or
lea
rol
fistps
jp
cmp
or
or
sub
push
bound
int3
jg
ret
inc
mov
dec
jge
rcrl
fists
test
leave
jns
es
xor
sbb
push
in
nop
and
and
inc
stos
add
mov
cmp
mov
int
int
cwtl
dec
and
cmp
scas
addb
push
xchg
das
jb
adc
cmpsb
xchg
movsl
stos
push
mov
xchg
sbb
int3
jae
in
daa
shll
sub
aaa
mov
xor
push
addr16
sahf
jle
xchg
jb
fstpt
or
loop
jl
push
add
xor
dec
xlat
cli
dec
mov
scas
ljmp
pop
inc
add
pop
pushf
aam
roll
xchg
push
pop
loopne
fwait
cli
mov
xchg
ds
sub
xorb
inc
xchg
adc
inc
sti
shl
mov
and
fwait
cld
push
movsb
mov
pop
xchg
cmp
js
adc
arpl
nop
and
xlat
aad
xlat
movsl
xchg
sub
cmp
mov
les
cmc
das
stos
or
mov
das
jge
add
mov
mov
sti
leave
test
adc
movsb
idiv
pop
lock
leave
push
sti
jb
and
in
mov
arpl
popa
jg
mov
or
lret
pusha
fistl
movsl
mov
jns
xchg
adc
mov
in
fdivr
push
jl
xor
cmp
lahf
jg
cmpsl
and
popa
pop
in
lds
cmp
or
in
shlb
outsl
enter
mov
imul
out
call
bound
arpl
gs
add
jg
add
bt
cmc
pushf
cmp
call
push
cmp
add
add
arpl
and
mul
fdivl
negb
or
enter
xchg
adc
fcomi
inc
rcll
push
add
or
movsb
mov
std
mov
sub
insb
rcll
les
call
cwtl
test
test
imul
sub
data16
sbb
into
fxch
or
shl
out
push
lods
push
aaa
jl
test
sbbb
pop
gs
and
xchg
inc
dec
cs
mov
mov
push
cmp
mov
mov
push
in
nop
and
les
jle
mov
jno
insl
bound
xchg
ds
mov
push
sbb
sysenter
sub
cli
mov
adc
xor
ja
fcom
icebp
add
add
mov
inc
push
sbb
cwtl
cmp
mov
call
stc
or
inc
out
into
gs
decb
sbb
or
jne
repz
xor
add
or
test
xchg
and
push
mov
inc
nop
and
mov
in
cmpsb
movsb
in
nop
pop
inc
jge
cmp
pusha
jmp
inc
sbb
lret
imul
cmc
loope
cmp
test
adc
mov
push
lods
jnp
hlt
cmp
cwtl
pop
or
pop
xchg
ficoms
test
je
bound
call
leave
jbe
push
pop
mov
ja
aam
faddp
or
aad
mov
mov
shlb
fldt
fs
roll
xlat
pop
fisttpll
daa
test
insl
test
adc
icebp
mov
lahf
cmp
stos
push
and
notl
pop
lods
lahf
sahf
iret
pop
lret
pop
cli
cld
jbe
xor
xchg
jno
out
pop
pop
cmpsl
mov
mov
push
dec
jo
movsl
int3
mov
cli
sub
mov
lret
imul
js
xlat
xor
sbb
fstpt
or
lahf
ja
arpl
lods
push
xor
sarb
xor
xlat
pop
movsb
stos
fs
les
hlt
jl
and
js
add
push
push
and
loope
xchg
rcrb
pushl
insl
cmpsb
mov
std
insl
add
cmp
and
cmp
mov
cs
jae
and
fstpl
gs
jg
push
xor
cmp
loop
mov
aas
pop
mov
mov
xchg
movl
mov
mov
test
aas
mov
nop
push
inc
push
mov
icebp
mov
sahf
dec
test
cld
jno
xchg
mov
inc
out
sti
int
call
lods
inc
arpl
lahf
pop
xlat
std
popl
and
adc
js
lock
into
mov
shrb
ja
stc
aaa
lret
leave
sti
shlb
mov
fistpll
ret
cltd
lods
sbb
and
popa
mov
mov
push
mov
enter
xchg
cld
pop
or
popa
aad
aad
add
out
lret
ror
je
or
mov
adc
ret
push
push
pop
adc
or
and
mov
cli
add
aas
fists
xchg
jg
push
mov
nop
sbb
sbb
out
ljmp
movsb
pushf
push
mov
jo
mov
scas
cli
xor
xchg
std
loop
icebp
lods
bound
cli
pop
pop
push
xchg
stc
xchg
push
mov
mov
push
dec
push
sub
insb
mov
call
out
test
in
sbb
lds
int3
fisubs
jno
and
rorl
lahf
stos
mov
arpl
into
fistps
inc
aaa
pop
adc
fcoml
mov
mov
es
ret
sbb
inc
jl
xchg
outsb
lret
mov
repz
pop
decb
ret
in
nop
sbb
mov
pushl
inc
test
cmp
shl
cmc
xchg
pusha
mov
test
pushl
sub
and
mov
test
cmc
mov
btc
shl
and
mov
stc
sub
call
and
imul
xorl
dec
mov
ja
shrl
jo
js
mov
sub
icebp
mov
inc
and
and
mov
mov
hlt
test
iret
dec
leave
outsl
or
rcrb
lods
dec
jns
xor
push
dec
jae
mov
testl
pop
cmp
aaa
push
jl
pop
dec
div
in
or
xchg
push
add
lods
mov
aam
sbb
jecxz
xor
dec
add
mov
sbb
xchg
push
push
sbb
xchg
out
pop
sbb
mov
or
mov
ljmp
pop
pop
repz
ds
mov
in
mov
rorl
lret
in
xor
mov
jl
nop
sbb
xor
into
add
loope
jbe
rcrb
add
movsl
in
sub
mov
dec
mov
in
fwait
mov
push
cltd
xor
sub
dec
adc
stos
fwait
push
aam
or
cmp
gs
mov
or
xchg
adc
xchg
jnp
push
push
mov
dec
outsl
add
mov
xor
rclb
pop
jecxz
add
ss
sti
sbb
sub
lock
sbb
push
and
mov
jl
dec
lods
mov
cmpl
mov
mov
xlat
sub
ss
cwtl
lcall
xchg
cmp
test
loop
leave
jle
add
gs
int3
cli
in
nop
sbb
out
lcall
imul
jb
xchg
jl
cwtl
subb
mov
mov
fstl
and
push
sbb
dec
test
cmp
cmpsb
dec
dec
jl
test
push
lods
cmpsl
add
loope
gs
push
cmp
arpl
call
xor
dec
test
jne
add
movsb
xchg
pop
jnp
ret
mov
enter
mov
bound
jbe
loop
jle
fldenv
push
test
pop
int
sub
cmp
xor
movsl
add
incb
sarb
sbb
sbb
fbld
pusha
jnp
in
nop
sbb
aas
or
mov
mov
pusha
pusha
movb
cmpb
call
into
test
or
sub
cld
push
mov
push
nop
xchg
sbb
xor
out
sahf
into
andb
pop
mov
jns
movsb
cli
cmp
popa
cld
mov
jb
aad
push
mov
inc
add
xadd
frstor
adc
jne
jg
dec
sbb
test
sub
and
mov
nop
mov
jae
rol
mov
jno
hlt
clc
nop
fnstcw
or
pusha
xor
cmp
cmp
push
shrb
mov
jmp
sub
test
outsb
jp
loop
push
push
dec
cltd
xchg
daa
int
mov
test
stos
dec
repz
cmpsb
pushf
in
nop
sbb
stc
incl
add
fs
je
inc
push
dec
je
insl
inc
inc
gs
imul
jne
inc
outsw
jb
and
jno
imul
jns
je
insl
inc
dec
insb
gs
popa
jb
popa
outsb
je
pop
push
orl
jge
daa
xchg
jno
or
sub
out
pop
call
ret
je
mov
add
jne
mov
jmp
or
insb
fistpl
adcl
adc
push
mov
mov
xchg
xchg
mov
cmpsl
pop
push
test
mov
jmp
xor
xor
push
cmp
mov
dec
xchg
jl
cmpsb
and
pop
das
pop
and
clc
push
xor
fwait
inc
imul
dec
addb
cli
test
or
sbb
imul
adc
xchg
mov
ret
jmp
add
mov
aas
dec
sub
jge
cmp
je
insb
std
pop
sub
sub
add
in
sub
shr
mov
jge
loop
and
in
pop
push
cmp
mov
pop
mov
cmp
add
nop
pop
xchg
xchg
loop
rorb
pop
addr16
inc
cli
sub
test
into
inc
push
scas
sbb
mov
mov
push
ss
jle
mov
adc
test
les
mov
sahf
ja
negl
arpl
mov
add
pop
mov
pop
jo
dec
fstpt
insl
fcoms
pop
xor
pop
bound
aas
out
pop
cmp
and
shlb
cmp
sub
lock
jns
jb
orb
aas
test
mov
in
das
lock
pop
mov
add
or
xchg
mov
call
adc
f2xm1
add
lret
cmp
dec
xorl
mov
and
cwtl
cmp
movsb
sbb
xor
push
adc
jae
testb
inc
movsl
inc
loop
testl
aam
outsb
in
nop
push
rorl
mov
cmpsb
lret
shlb
xchg
dec
sahf
xor
subb
mov
lock
lods
fcmovb
imul
outsl
imul
popa
pop
aaa
aas
inc
mov
lcall
sub
cmp
fwait
dec
andl
ret
lods
xchg
lcall
mov
cmp
mov
insb
mov
outsl
pushf
loopne
mov
leave
leave
shl
xchg
dec
cmp
sbb
sahf
sub
movsb
leave
add
roll
mov
jge
addb
ret
stos
into
push
cs
dec
sub
cmp
jo
xchg
pop
stos
cwtl
add
mov
pushf
imul
push
lock
dec
cs
cmp
aaa
mov
arpl
push
inc
stos
cwtl
pop
xor
nop
test
out
push
adc
sbb
loope
cltd
cmp
push
aad
fldcw
pop
in
nop
adc
pop
cli
movsb
cltd
jmp
dec
daa
push
jnp
cmp
mov
rol
call
fsubrl
loop
clc
faddp
out
jae
mov
in
enter
jl
loop
mov
jle
sti
outsl
cwtl
loopne
inc
ljmp
sahf
cmp
inc
mov
push
sbb
leave
fwait
push
enter
sub
pushf
mov
lock
push
movsl
pop
aaa
mov
sub
cli
test
mov
cmp
inc
int
outsl
stos
pop
pop
sbb
out
add
icebp
gs
loopne
std
push
pop
mov
loopne
lods
push
and
adc
xchg
adc
xchg
sub
movsb
int3
shlb
or
ret
frstor
add
std
loope
out
int
inc
sub
lcall
jl
sbb
pop
mov
cwtl
or
bsf
nop
adc
cmp
bt
repnz
call
aad
aas
je
test
mov
sbb
inc
or
jge
daa
xchg
and
call
pop
add
jns
repz
xchg
aam
adc
push
xchg
aas
pop
mov
idiv
jl
dec
add
xchg
and
cmp
testl
xchg
pop
and
enter
or
jge
push
cmp
pop
in
mov
out
fnsave
push
leave
mov
or
mov
outsl
dec
ficoml
pop
mov
lcall
lret
iret
sbb
add
sbbb
repnz
cmp
adc
push
jp
fs
je
push
lea
jmp
push
lea
ja
bt
imul
stc
clc
call
push
add
out
xchg
cmp
pusha
in
inc
adc
mov
adc
add
jno
test
sub
sbb
sub
xchg
mulb
movsl
jno
adc
iret
or
jnp
jle
xchg
and
adc
fcmove
push
inc
cmp
dec
inc
jecxz
mov
xchg
lret
push
sub
in
call
fsts
xchg
imul
insb
aaa
iret
hlt
sbb
mov
push
out
pusha
cwtl
outsl
filds
mov
jp
jns
adc
pop
in
nop
adc
outsl
pusha
pushf
lea
jne
call
pop
insb
loopne
aam
iret
inc
cmp
dec
mov
pop
lret
sub
pop
in
jne
cmp
pop
sub
fldl
mov
and
loope
sbb
xlat
pop
inc
pushf
shlb
mov
rorl
inc
out
or
in
dec
inc
mov
sar
pop
push
jecxz
rcll
push
enter
xor
xor
mov
test
hlt
andb
jmp
gs
fmull
sbb
ret
enter
imul
inc
cmp
dec
cmpb
and
jbe
xchg
or
add
sbb
pop
cmp
leave
ss
pop
dec
inc
jge
insl
push
repnz
push
push
xchg
pop
push
add
push
pusha
je
jecxz
leave
push
push
xorb
push
movsb
ljmp
inc
cmp
sub
add
dec
mov
cmp
loope
in
jno
xorb
outsb
mov
cs
and
sbb
addl
mov
fistpl
loope
fcmovnu
xchg
lods
xchg
dec
ja
ret
aam
dec
repnz
mov
sbbb
cld
jae
in
in
mov
xchg
in
lret
xlat
mov
cmp
inc
cwtl
decb
in
push
lret
aas
mov
loope
sbb
sbb
xor
or
cs
pop
testb
xor
push
mov
inc
out
dec
daa
jae
cwtl
filds
push
mov
cli
pop
sbb
adc
mov
mov
jl
test
cwtl
sub
xchg
test
sar
aam
js
xor
push
xor
jo
insb
call
sbb
jns
adc
adc
push
sahf
pop
mov
push
in
test
adc
fmul
outsl
xor
rolb
and
sbb
jge
cmp
out
rclb
cmc
int
mov
les
ds
mov
cld
xor
xlat
lcall
jmp
out
dec
pop
jns,pn
add
push
mov
clc
push
xchg
pushf
xor
pop
movsl
inc
hlt
add
idivl
xchg
adc
dec
in
hlt
data16
cmp
jno
pusha
rorl
or
lods
mov
aam
mov
repnz
out
out
lock
pop
out
lock
mov
arpl
imul
sbb
and
stc
and
jecxz
mov
xor
outsl
mov
lea
pop
inc
ja
test
cmp
adc
ljmp
mov
aam
xchg
xchg
pop
push
filds
push
and
dec
jp
cmp
pop
inc
push
fnstsw
jmp
mov
sub
mov
adc
mov
ja
inc
mov
adc
test
add
pushf
sbb
sti
sub
daa
filds
adc
push
loopne
fstpt
addl
adc
int
xor
lock
push
xor
jnp
out
jmp
sbb
push
in
push
pop
out
aas
addb
clc
mov
mov
mov
stos
inc
arpl
cli
adc
mov
sub
xor
adc
das
cmp
clc
out
stc
lds
andl
xchg
inc
rcrb
cmp
outsl
xor
data16
jne
popa
adc
cmp
icebp
addr16
aad
cmpsl
lock
pop
inc
je
pushf
push
jns
scas
lret
jnp
cld
test
jnp
cmpb
dec
mov
pop
inc
or
icebp
pop
out
aam
cmc
imul
in
nop
bndldx
in
into
movsl
xlat
lea
jae
clc
shld
clc
mov
cmc
rcr
mov
shld
test
btc
mov
clc
clc
sub
pushf
pushl
call
movl
pushf
call
mov
xor
cmpsb
fsubl
jne
add
inc
popf
inc
dec
add
add
out
xchg
popa
imul
pop
shr
or
in
in
rcrb
fmull
fadds
jno
ss
mov
or
pop
and
icebp
cmp
xor
jl
rcll
sub
imul
pop
mov
push
aas
jb
mov
inc
or
nop
inc
int
or
hlt
and
ljmp
inc
mov
scas
mov
or
lds
iret
lds
pop
popf
testb
aaa
or
iret
jae
add
cmp
nop
push
jg
imul
sti
call
cmp
mov
outsb
pushf
mov
sub
or
jge
jp
inc
mov
xchg
sub
loope
mov
inc
clc
scas
push
int3
out
outsb
adc
sbb
loope
das
mov
pop
sub
inc
mov
ds
inc
xlat
inc
jns
orb
imul
mov
mov
pop
and
dec
lock
jge
add
sahf
repnz
mov
aaa
or
mov
jmp
inc
pop
movsb
adc
mov
loope
xchg
push
lret
pop
sti
gs
sti
dec
scas
mov
pusha
mov
pusha
jmp
dec
pushf
stc
stc
rol
call
sub
scas
adc
adc
sbb
mov
pop
mov
xor
cmp
test
inc
add
std
outsl
xor
mov
imul
xor
lret
inc
lret
sar
sahf
sti
ret
movsb
adc
in
ljmp
mov
and
fdivl
mov
pop
push
fisubl
or
xor
jmp
test
sub
movsb
cmpsl
mov
pusha
dec
jmp
pop
scas
push
push
push
pop
test
das
mov
and
sbb
push
cli
add
nop
or
push
rcl
jge
lahf
cmp
add
or
xchg
xchg
outsl
scas
sbb
ss
and
orb
in
arpl
sub
les
or
sbbl
rcrw
pop
mov
int3
sub
sub
lret
jne
inc
inc
inc
lods
mov
add
pushf
add
mov
adc
mov
imul
std
inc
pop
fcmovne
lock
jbe
pop
cmp
adc
xchg
in
pop
out
add
lahf
les
xor
loope
and
ret
leave
push
and
cs
mov
idivb
push
iret
sub
or
rcrb
lea
jne
pushf
lea
je
neg
pushf
clc
add
setb
mov
movb
add
bt
mov
xor
cmp
cmc
mov
cmp
stc
cmc
cmc
cmp
movw
jmp
dec
jbe
outsl
jb
inc
aaa
push
bound
add
les
pushf
cmpsl
mov
lcall
sub
and
movsl
pop
pop
pop
pop
pushf
sub
hlt
adc
mov
mov
nop
or
dec
push
jl
out
fwait
cmp
xor
mov
cli
mov
decl
xlat
mov
imul
fstpt
mov
outsl
and
in
js
xchg
out
add
mov
adc
xchg
adc
shll
dec
lock
pop
inc
inc
es
mov
lea
mov
aam
clc
jmp
sbb
scas
mov
repz
jge
add
or
sub
and
add
sbb
or
aaa
imul
cmp
xchg
adc
pmaxub
xchg
insl
fldl
xchg
or
cmp
dec
or
cmp
decb
popa
or
sbb
sub
mov
xor
adc
ss
push
or
push
cmc
xchg
sbb
add
testl
int3
push
and
jecxz
fdivs
sbb
in
inc
and
xor
mov
idivl
lret
mov
test
xchg
insb
adc
jnp
push
mov
bound
out
pusha
dec
sbb
fiaddl
sub
or
lret
addr16
cmpl
enter
sbb
cmp
stc
push
push
cmpsl
test
fidivrl
mov
add
faddl
lcall
rcrb
out
mov
fsubr
or
fnsave
inc
pop
clc
enter
fidivrl
cld
or
sti
daa
adc
lock
into
push
dec
push
mov
nop
addb
es
mov
imul
push
stos
iret
je
mov
cmpl
mov
add
fidivs
in
nop
or
push
sbb
mov
out
fs
cmp
outsl
addl
movsl
jae
or
xchg
out
push
enter
fcmovnbe
mov
lret
pop
or
inc
inc
mov
fwait
pop
pop
in
cmp
in
mov
je
insl
out
icebp
sub
mov
xor
add
sub
cmp
push
or
jne
xchg
aam
nop
out
add
dec
sub
int
inc
jne
adc
out
std
loopne
test
mov
dec
sbb
repnz
in
pop
dec
pop
pusha
in
add
jge
out
repz
push
aas
pop
push
arpl
aaa
mov
outsb
orb
leave
in
nop
or
imul
xor
cld
xchg
mov
mov
mov
gs
add
mov
icebp
aad
sub
jo
inc
pop
fisubs
xor
lods
mov
lahf
lret
sbb
add
movsl
cltd
stc
pop
lods
jb
adcl
adc
xor
test
inc
push
mov
addr16
clc
pop
sub
incl
push
je
mov
cmp
mul
mov
add
and
outsl
cs
bound
repz
outsb
cmc
or
mov
sti
inc
ss
pop
mov
or
push
cmp
popf
jns
push
lret
mov
nop
xor
sbb
xlat
loope
and
mov
jmp
in
popa
cmp
sbb
bound
in
imul
sbbb
lret
dec
testl
lods
lds
cmp
scas
test
jl
dec
dec
sahf
lret
xchg
jmp
call
pop
dec
sub
rolb
stc
ds
mov
dec
ret
jle
pop
ret
adcb
js
mov
or
rol
data16
pop
in
arpl
jno
arpl
in
nop
pop
addl
out
in
insb
lret
jp
pop
nop
dec
divb
add
ficompl
or
adc
aam
jb
xchg
push
add
xor
and
mov
inc
aaa
packuswb
repz
rcrb
sub
testb
in
mov
lods
enter
inc
xchg
mov
push
xchg
push
cmc
jle
aam
cmpl
lret
icebp
cwtl
movsl
push
or
mov
leave
or
cmp
dec
cmp
cmp
or
push
push
fadds
in
push
stos
lock
push
icebp
fs
add
int3
lret
or
push
into
imul
jmp
mov
shl
dec
cmc
mov
ja
sub
aam
lret
mov
imul
outsl
ret
fwait
mov
or
dec
in
popa
ljmp
jl
nop
push
gs
mov
mov
pushl
stos
or
into
xchg
imul
jno
inc
cld
sbb
mov
xchg
mov
mul
out
je
mov
mov
pusha
cwtl
andb
dec
or
and
repz
pop
xchg
jne
enter
jg
inc
pop
ljmp
out
pop
lock
iret
inc
arpl
dec
dec
inc
xchg
loopne
imul
sbb
cmp
xchg
sbb
jo
popw
scas
mov
outsb
sbb
xor
aaa
bound
fidivs
adc
rol
or
into
hlt
cmp
mov
pushf
nop
negb
adc
push
loope
or
pop
jecxz
mov
repz
jo
push
stos
adc
nop
add
jge
mov
dec
in
cmp
outsb
enter
adcl
and
sbb
xchg
inc
inc
cmpsb
pop
ror
pop
cli
pop
arpl
mov
dec
dec
orl
xchg
xchg
lcall
inc
jl
out
ret
aaa
stos
jno
in
aaa
pop
repz
adc
push
sbb
push
adc
jo
and
aam
ja
in
lret
int
les
cmp
adc
in
xor
repz
adc
in
nop
add
aas
int3
lret
mov
pop
sub
mov
and
xchg
in
or
loopne
push
jae
pop
mov
jle
jbe
fsubrs
xchg
ret
subl
mov
push
lods
movsb
mov
mov
in
xor
fwait
test
in
xor
addr16
nop
add
dec
sarl
pop
loope
stos
mov
ss
or
and
xchg
inc
add
cmp
push
mov
adcb
sub
sub
loop
cmpsl
xchg
jae
je
mov
test
inc
xchg
cmp
es
inc
pop
sbb
out
jle
int3
div
adc
inc
sahf
lahf
mov
push
lret
hlt
xor
jo
sarb
add
cli
jae
inc
test
shl
in
jnp
dec
mov
sbb
imul
jnp
mov
xchg
imul
pop
in
nop
add
decb
sbb
cmp
or
sub
repnz
jle
ret
rorl
scas
jbe
jns
les
push
adc
add
pop
mov
cmp
addr16
dec
dec
mov
jnp
jno
dec
push
imul
pop
into
aad
jp
mov
shlb
nop
add
leave
cmp
cmpsl
inc
dec
out
popa
mov
dec
les
add
sti
clc
mov
push
inc
adc
loopne
push
gs
imul
repnz
push
stc
gs
inc
in
pop
cmp
mov
sub
scas
test
mov
xchg
fsubs
dec
inc
push
add
sbb
in
int
mov
ret
and
push
sub
push
pop
jnp
cwtl
popa
sbb
xor
cld
call
aad
movsl
arpl
mov
mov
jg
outsl
popa
or
sub
adc
pop
adc
push
ret
sarl
sbb
nop
jne
sbb
js
leave
notl
sub
sub
sbb
jns
fdivs
mov
pushf
cmc
dec
xor
pop
sub
jae
pop
mov
sbb
imul
int
rcl
je
rcr
push
dec
aas
sarb
cwtl
inc
fadds
loopne
nop
les
gs
sti
add
rcr
cmp
and
outsb
enter
in
nop
add
or
mov
lret
and
jns
lret
nop
cmp
vpxor
add
dec
mov
add
xor
pop
mov
lahf
xchg
aad
add
and
orl
popa
insl
stos
lods
add
xchg
jmp
shlb
loopne
insb
add
inc
outsl
pop
sbb
sbb
mov
add
add
lcall
popf
sub
test
add
xor
outsb
clc
das
jno
add
xor
out
add
push
cmpsl
add
cmp
pop
or
in
jecxz
push
mov
clc
rcll
pop
bound
cmp
pushf
cmp
fwait
sbb
leave
or
inc
imul
jl
mov
inc
adc
pop
add
daa
in
add
push
loopne
ret
popf
add
mov
in
mov
in
jbe
cmc
rcll
adc
dec
mov
fidivrl
xor
rcrl
mov
test
imul
jle
rol
add
add
gs
xchg
push
push
sbb
pop
imul
stos
pop
add
lahf
or
je
stos
add
dec
and
in
repz
dec
and
adc
jge
mov
inc
adc
loop
sub
push
add
jl
in
jg
xlat
cmp
xor
add
and
push
outsb
movsl
and
clc
mov
adc
xorl
dec
lret
adc
imul
lahf
cmp
push
aam
mov
add
idivb
mov
add
push
clc
insl
sbb
dec
add
fldcw
add
popa
dec
ljmp
int
cli
in
mov
leave
dec
pop
sbb
cmp
xor
into
mov
movsl
jns
es
ds
pop
hlt
mov
outsl
iret
pop
aaa
jecxz
mov
cmp
dec
mov
add
pop
call
add
or
push
enter
data16
insl
cltd
mov
jmp
adc
in
iret
pop
pop
xor
outsb
scas
xor
jmp
out
cli
mov
push
subl
mov
add
mov
ret
jg
dec
adc
and
xchg
lcall
xor
pop
add
repnz
dec
mov
mov
insl
cld
mov
pop
fxch
or
and
popf
sbb
and
or
dec
inc
pop
movsb
adc
pushf
add
ss
in
cmpsb
sub
sbb
popf
aam
xchg
cld
xor
sahf
rcll
add
or
mov
repnz
xchg
adc
xor
and
lea
mov
mov
lahf
inc
adc
repz
inc
mov
mov
pop
dec
sahf
lahf
movl
test
in
xchg
adc
test
sub
aas
cmp
xor
push
pop
ffreep
inc
add
ret
out
cmc
cltd
sarl
cmpl
addl
es
aam
into
jb
xor
test
add
jae
xor
lret
xor
out
ret
sbb
lds
xor
adc
cmp
lahf
nop
and
mov
push
loopne
insl
lods
adc
das
pusha
add
adc
or
js
cmp
xor
sarl
shlb
or
orl
fcompl
xchg
xchg
popf
test
hlt
clc
add
js
sbb
call
inc
add
adc
push
cmp
shrl
xor
in
add
sbb
add
xor
jmp
cmp
add
mov
loop
lock
or
pop
mov
dec
shrl
or
or
mov
jne
sub
pushf
xor
outsl
dec
cmp
repnz
xchg
pushf
jecxz
mov
add
cwtl
pusha
xlat
or
xchg
add
pop
dec
lea
or
jmp
gs
and
mov
xor
jp
mov
out
xchg
and
or
push
loopne
pop
xchg
cmp
inc
in
mov
push
mov
movsl
sbb
lcall
arpl
ret
loop
enter
das
data16
add
aas
cwtl
pop
hlt
lea
mov
adc
outsb
add
pusha
subl
jno
add
cli
push
mov
jne
adc
je
xor
jno
sbb
rcll
add
lea
test
mov
dec
and
xchg
push
xor
jp
add
pop
arpl
push
push
in
pop
incb
cmc
or
adc
xor
add
dec
testl
pop
movsl
mov
jecxz
sbb
insl
pusha
adc
test
loope
cmp
sub
aaa
mov
dec
lcall
xlat
lods
addl
sar
sbb
or
inc
inc
imul
add
pop
mov
nopl
and
aad
es
dec
mov
iret
into
cmp
inc
inc
sub
call
adc
dec
pusha
xor
sahf
cs
inc
xchg
fnsave
bound
sti
and
jl
stos
adc
fisttpl
dec
xchg
dec
mov
sub
pop
jmp
xor
xlat
add
mov
lds
add
dec
sbb
add
xor
loopne
push
ret
imul
sbb
aaa
cmp
push
xchg
cld
add
enter
mov
aas
mov
shll
mov
inc
stos
negb
xor
roll
fs
cmpsb
aam
es
xor
dec
inc
stos
mov
inc
push
xchg
test
xchg
jmp
lcall
add
ret
pop
in
repnz
subb
and
cmp
mov
ret
xchg
js
pop
pop
sbb
mov
movsb
push
arpl
add
sbb
add
xchg
lahf
pop
sar
out
mov
rolb
jmp
lcall
inc
repz
pusha
xchg
push
add
jb
iret
hlt
sahf
pop
lods
rcll
imulb
popf
cmpps
jo
loopne
loop
jo
cmc
xor
push
rorl
into
xor
sbb
icebp
mov
lea
add
cwtl
outsl
xchg
xor
sub
dec
mov
movsl
xor
sub
data16
ret
enter
xorb
sbb
push
add
cwtl
ret
repz
clc
push
into
pop
push
loop
mov
xchg
lods
and
mov
loopne
fs
cmp
sti
or
mov
fists
push
jns
add
mov
xlat
mov
pop
and
pop
addl
inc
or
jmp
sub
shrl
into
addb
enter
inc
inc
inc
dec
loopne
icebp
frstor
bound
adc
sbb
mov
cmp
loopne
pop
add
je
push
add
xchg
lock
mov
push
roll
mov
sbb
add
inc
push
xchg
shlb
movsb
mov
add
jb
je
pop
sbb
adc
adc
mov
xor
stc
add
daa
push
sub
clc
stos
add
in
or
ret
add
outsb
cmp
pop
aaa
add
and
mov
push
lret
sbb
xchg
mov
insb
ret
push
dec
jbe
arpl
mov
xchg
mov
data16
mov
cmpsl
add
push
and
add
pop
cmp
adc
push
add
sub
xchg
add
dec
push
cmp
sbb
mov
mov
mov
into
xor
popa
pop
push
in
add
pop
xchg
cwtl
filds
inc
mov
out
bound
jg
add
cmp
push
sub
add
xchg
div
movsl
xor
add
cmp
pop
test
or
sahf
sbb
fsubl
add
mov
test
movsl
sub
dec
cltd
arpl
jle
ljmp
jecxz
cmp
mov
mov
mov
jns
icebp
dec
inc
adc
loopne
jnp
or
cmpsl
fstpl
sub
cwtl
test
add
pop
push
out
fcmovnbe
out
sbb
stc
popf
add
std
popa
jnp
jle
mov
cmp
xchg
sub
cltd
adc
sub
mov
mov
in
lods
sbb
das
lret
dec
jmp
scas
roll
iret
mov
shlb
popa
mov
pop
mov
mov
ficompl
pop
enter
fisttpl
movl
jle
sbb
gs
push
adc
add
push
pop
cmp
mov
dec
lods
sbb
mov
jle
adc
add
les
inc
lret
add
jae
lods
add
or
and
lret
push
lcall
movb
adc
pop
lock
addb
lods
dec
push
stc
aad
xchg
add
dec
xor
arpl
sub
or
adc
jb
sbb
sbb
sahf
sbb
inc
idivl
add
into
and
jecxz
cwtl
adc
and
inc
adc
push
push
mov
jns
repz
mov
out
mov
aaa
popf
mov
pop
loopne
jae
push
mov
roll
loope
xchg
inc
ss
sub
ret
mov
cli
add
lret
mov
inc
mov
fnsave
sbb
stc
mov
and
pop
cmpsb
xor
in
add
lods
push
xchg
jge
or
sub
idivl
jp
xor
mov
dec
sub
dec
test
or
mov
hlt
mov
je
jo
cld
or
movsb
gs
cmp
mov
inc
jne
add
pushf
jo
mov
xor
aad
push
lds
pop
push
dec
add
pop
mov
in
mov
rclb
das
jmp
dec
sub
aad
outsl
and
mov
jbe
add
xchg
adc
bnd
mov
out
aam
rcll
out
inc
push
jl
ret
pop
inc
add
pop
ja
pop
adc
popa
out
jl
mov
xor
mov
xlat
cmpsl
sbb
sub
addl
or
cmp
xchg
cmpb
rcrl
ret
push
shlb
es
jl
daa
outsb
inc
lock
aad
add
in
or
cmp
inc
addr16
and
xor
jbe
mov
lret
lods
or
popf
jae
in
add
sahf
adc
adc
ret
ds
fldl
jp
icebp
pop
bound
adc
leave
das
cltd
int
add
loop
inc
cmp
jmp
rcll
aam
sub
movsl
outsl
sti
add
enter
cmpb
das
ret
jmp
adc
mov
dec
sbb
push
and
or
clc
lahf
and
scas
add
aam
loope
cltd
sarl
daa
lea
int3
and
mov
push
add
mov
xlat
add
cs
incl
shl
mov
lea
xor
scas
in
add
jge
sbb
lret
and
mov
pusha
jbe
jle
pop
pop
cmp
add
jecxz
int3
test
loop
pop
jl
pshufw
jp
pushf
je
orb
and
cmp
inc
mov
int
inc
sub
jno
pop
add
fmulp
add
sub
inc
mov
lods
add
ret
jne
push
add
inc
xchg
sbb
inc
jge
add
fcomip
inc
leave
scas
adc
ljmp
test
inc
xchg
adc
popa
jl
inc
sbb
orl
nop
out
xchg
jl
cmpsb
dec
sub
xor
pusha
repz
push
adc
subb
js
iret
pop
mov
pop
addr16
popf
das
jo
shrl
hlt
es
pop
add
sbb
adc
jne
into
xlat
xchg
lea
mov
xor
push
out
insl
loop
or
dec
imul
fwait
add
inc
es
fcoml
xor
out
add
mov
inc
stos
mov
aaa
or
rclb
outsb
mov
fisubrs
call
sbb
popf
arpl
mov
adc
mov
or
test
mov
add
add
insb
sahf
hlt
add
leave
mov
inc
sbb
nop
out
imul
inc
lret
add
and
and
and
push
fnsave
mov
fsts
dec
add
xchg
imul
mov
adc
cmpsb
lcall
ret
or
add
sbb
lock
lcall
ss
out
paddb
jno
cli
sub
loop
add
fwait
popf
push
pusha
xlat
in
jo
jns
push
mov
and
pop
add
imul
cmpsl
orb
push
into
cmp
cmp
sbb
lds
pop
add
sbb
add
mov
xchg
xor
cld
movsb
xchg
add
mov
push
js
faddl
push
cli
test
inc
pop
mov
inc
fwait
pop
mulb
mov
mov
adc
cmp
mov
and
mov
bnd
loopne
stos
pavgw
jns
xor
jg
sub
dec
cmpsb
cmp
fisubl
push
divb
and
stos
jge
out
mov
nop
add
xor
in
add
adc
into
dec
addl
xor
push
ud2
mov
out
adc
dec
add
mov
push
outsl
add
rsm
dec
shll
or
jl
bound
add
arpl
add
mov
xor
add
loope
cltd
add
xor
or
mov
jo
inc
push
sahf
mov
fnstcw
cmpsl
xlat
xor
mov
mov
add
jp
and
sbb
fcompl
cmpl
fimull
out
or
add
std
xchg
pop
mov
add
aam
lea
mov
pop
sti
pop
push
xor
dec
and
xor
xchg
fbld
imull
pop
or
shr
dec
mov
pop
mov
dec
jno
adcb
and
or
add
mov
dec
jae
pop
sarl
xchg
sub
adc
add
inc
dec
push
cmpsb
mov
je
push
pop
xchg
and
sub
insb
add
mov
jmp
jle
mov
xadd
int3
xchg
xchg
scas
fnstcw
out
or
ret
cmp
nop
or
addr16
clc
push
hlt
inc
sbb
addb
jge
mov
in
add
into
pop
add
ljmp
add
or
mov
and
loope
popa
xor
psubusw
inc
sbb
sub
add
mov
xchg
mov
push
shrb
fcoms
sbb
xor
rep
iret
adc
je,pn
scas
add
roll
and
xlat
cmp
fdivrl
dec
xor
loop
add
sub
add
test
inc
test
xor
fldcw
mov
push
js
pushf
xor
mov
pop
rcrb
add
lock
ss
sbb
shr
daa
call
fnstenv
inc
pop
dec
lahf
dec
rorl
adc
stos
sahf
divb
sbb
and
int
addb
mov
jnp
add
sahf
ljmp
inc
xchg
xchg
push
sbb
add
jne
orl
mulb
pop
inc
add
mov
lahf
mov
iret
add
ljmp
into
dec
mov
insb
nop
xchg
cmp
add
pusha
push
lahf
jl
sub
gs
roll
cmp
or
xchg
imul
insb
aam
sbb
mov
jb
scas
ds
add
mov
inc
lcall
xor
jo
mov
int
xor
stos
inc
and
jge
aas
xlat
add
call
mov
dec
adc
dec
ss
push
dec
sahf
and
and
es
cmpsb
call
cltd
sub
cli
add
mov
xor
xchg
push
lea
mov
stos
xchg
mov
divl
scas
adcl
mov
data16
sbb
rcrl
add
jecxz
sbb
jmp
or
add
inc
jl
sbb
jne
mov
pop
push
cmp
jns
dec
sysret
dec
and
test
enter
loope
mov
ret
sbb
sub
add
pop
push
ja
and
xchg
movsl
addl
popf
inc
cmc
sbb
mov
dec
fildl
stos
icebp
pop
orl
sbbl
mov
sub
pop
add
add
cmp
sub
inc
add
jb
cmpsl
pop
sbb
ret
add
cmp
push
paddd
push
jge
mov
mov
add
sub
jnp
mov
fs
push
cmp
sbb
gs
xlat
int3
pop
add
jle
es
mov
adc
xchg
int3
rcrb
es
or
mov
and
pop
sbb
xor
mov
and
dec
sub
lret
mov
lahf
cmpsb
dec
jnp
add
arpl
cmp
jb
cltd
pop
add
pusha
sub
iret
jno
jle
inc
xor
pushf
sub
add
in
enter
jmp
add
adc
cmc
mov
add
xchg
bound
cmp
movl
dec
cli
push
fdivs
pop
jb
ja
fdivrp
sub
dec
pop
in
xor
nop
push
push
xlat
cwtl
add
data16
sbb
mov
fistpll
addr16
or
push
add
loope
mov
cmp
arpl
jno
cmpsl
add
sbb
flds
out
fildll
add
jae
mov
push
incl
cld
frstor
cmp
push
xor
ret
cmp
add
daa
dec
in
or
pop
mov
jo
lea
add
add
lds
inc
inc
inc
sbb
inc
xor
sbb
orl
lret
adc
add
pop
pop
mov
test
pop
jae
repz
and
shl
mov
cli
mov
pop
and
outsb
add
hlt
subb
add
sub
aad
xor
lock
sbb
sbbb
cwtl
pushf
outsl
jg
pusha
jle
adc
cld
in
adc
xlat
xor
push
add
add
add
mov
jl
sub
das
add
imul
xchg
js
mov
in
pop
mov
mov
hlt
and
adc
cmpsl
push
add
sub
pop
add
cmp
pop
shrd
loop
cltd
icebp
jmp
add
adc
cmp
pop
les
sub
idivl
add
push
cwtl
hlt
inc
sub
adc
and
call
cs
inc
das
ljmp
and
mov
xchg
rdpmc
into
fldcw
inc
push
pop
inc
add
fucomi
out
jae
lods
inc
mov
pop
mov
push
aam
jp
push
faddl
inc
outsl
insb
cmp
addr16
lea
scas
mov
stos
dec
xchg
xor
mov
adc
cltd
pop
fidivrs
add
out
push
push
pop
cmp
push
xchg
push
xor
mov
mov
cmp
mov
cwtl
push
or
cmc
mov
loope
add
xchg
sbb
icebp
subl
mov
jno
sbb
add
jmp
mov
xchg
out
mov
bsf
add
mov
sbb
jnp
mov
mov
in
inc
ljmp
or
out
les
dec
cmp
cwtl
out
sbb
sbb
mov
mov
add
shlb
faddl
int
cmp
mov
or
in
pop
sbbl
or
repnz
dec
mov
ret
inc
dec
shrl
hlt
ja
sbb
stos
andl
inc
aaa
pop
sbb
popf
fnstenv
cmc
inc
add
cmp
and
lahf
mov
jp
xor
mov
insb
pop
mov
movsl
add
push
test
xchg
cld
in
push
or
notl
and
out
inc
inc
decl
and
fadd
pop
jne
insl
and
pop
shl
sti
pushf
jb
inc
fisttpl
push
or
repz
lcall
xorl
fucomp
repnz
lret
inc
mov
mov
mov
mov
pusha
lcall
rorb
sub
xor
cmp
shll
imul
fdivs
jg
add
sbb
scas
arpl
mov
mov
xchg
xchg
cli
popa
and
daa
into
fisubl
test
sub
add
push
loop
stos
inc
pop
add
cltd
bound
ss
dec
add
xchg
cwtl
mov
lock
add
cli
std
or
cmp
rcll
ds
jle
mov
xorl
mov
cmp
ljmp
add
sbb
repnz
pop
mov
mov
call
clc
mov
add
ljmp
fs
xor
and
lods
add
mov
aad
scas
enter
and
pop
testb
popf
cmpsb
push
lret
in
adc
pusha
cmp
xor
jp
imul
aas
pop
lcall
cmp
add
xchg
outsb
cltd
or
std
sbb
and
fdivrs
xor
fidivs
add
ds
cwtl
xchg
pop
pop
add
add
jnp
xchg
inc
dec
and
and
jmp
pop
les
adc
xor
add
mov
mov
mov
shl
push
xor
pusha
sub
xor
in
inc
add
mov
inc
add
imul
pop
and
scas
dec
add
incb
lds
mov
adc
ss
sbb
fisttpll
jne
lret
dec
add
xor
outsb
add
das
or
sub
xchg
lea
stos
adc
into
jo
lret
add
adc
sbb
test
cmp
hlt
dec
dec
adc
sti
insl
inc
cmc
push
fcompl
out
movsb
or
add
push
adc
add
mov
mov
repz
lret
mov
add
rolb
and
xor
add
std
mov
add
sbb
adc
adc
addr16
repnz
ret
jl
mov
movl
push
pop
scas
je
mov
jp
xchg
popa
pushf
icebp
call
cmp
sub
inc
pop
cwtl
sbb
ret
fiadds
and
mov
aaa
add
jns
aas
xchg
or
sub
stc
pop
in
add
or
pushf
add
mov
xchg
in
lret
or
sti
aas
add
sub
lods
jl
les
cli
fstpl
roll
cld
mov
jl
fcmove
rorb
test
xor
fistpll
push
pop
in
sub
cmp
or
mov
movsl
sub
add
sbb
push
sub
addl
or
lods
insb
pop
add
pop
fsubrp
pop
mov
add
sbb
cld
sub
pusha
adc
in
out
gs
loop
sbb
inc
and
push
cmp
jne
inc
pop
cmp
inc
leave
lret
and
add
lahf
jae
das
push
mov
aad
push
add
push
add
popl
xor
mov
roll
das
mov
ret
mov
inc
je
test
ret
in
addr16
jb
out
cmp
adc
add
clc
lds
adc
inc
sub
es
cmp
insb
mov
jle
push
mov
aas
add
mov
jae
push
jo
sub
mov
mov
pop
inc
add
out
inc
add
lahf
sub
add
lea
repz
sbb
rcrl
add
pop
push
jae
dec
in
add
jns
leave
icebp
xchg
dec
bound
jo
mov
repnz
cmp
dec
fistl
das
shlb
and
sub
adc
and
cli
add
sub
add
loopne
sarb
fs
add
pushf
loope
jns
sub
shrb
in
sub
ret
sub
and
jo
jnp
jno
cmp
add
lods
pushf
xor
test
add
mov
rolb
popa
cmc
in
jp
push
dec
cmpsb
imul
xor
pop
shr
dec
mov
xor
sbb
add
aaa
into
ret
xchg
in
jns
mov
sbb
sti
and
dec
scas
rcll
aaa
aas
adc
inc
dec
mov
and
clc
sbb
add
subb
mov
lock
loopne
roll
ffreep
ret
in
sbb
fistpl
lock
in
push
pop
hlt
enter
frstor
fsubp
mov
xchg
sub
shll
add
add
scas
shlb
add
push
das
fsubs
jne
les
cmp
mov
pop
add
stos
add
or
ljmp
fstpt
fbld
je
and
xor
inc
in
fidivrs
add
aaa
or
xchg
shrl
sub
out
sub
dec
add
cwtl
in
mov
adcl
push
and
std
cmpsb
rcr
mov
inc
testl
lcall
stos
sub
iret
cmp
das
mov
mov
stc
lds
fwait
pop
fcoms
mov
cmp
sbb
dec
push
cmp
js
in
sub
mov
stos
dec
sub
mov
out
cmpl
jae
orb
pop
filds
mov
loop
xchg
adc
dec
test
loope
sbbl
and
add
xor
xor
cmp
sub
lcall
call
fmull
mov
ds
inc
sub
mov
push
ljmp
in
iret
push
sti
cmp
pop
mov
ret
in
sbb
pushf
lea
jne
not
not
jmp
inc
xchg
add
loopne
add
sub
jne
or
cvtps2pd
sbb
lods
scas
and
pop
xchg
xchg
fptan
out
jbe
scas
fildll
aam
push
movb
loop
and
les
sub
ret
js
mov
cmpb
mov
dec
movsb
jmp
aas
lods
js
xor
div
out
or
lret
inc
mov
pop
and
lret
scas
adc
cmp
xlat
mov
insl
dec
mov
sahf
in
stos
mov
or
aad
pop
pop
fidivrs
aam
lods
add
xor
mov
dec
icebp
dec
in
fidivl
orl
adc
mov
js
dec
add
push
out
fcmovbe
loop
clc
aas
add
inc
sbb
jns
push
cmp
addr16
pop
int3
adc
adc
dec
repz
pop
xchg
je
in
jecxz
hlt
ret
fs
jae
stc
cmp
pushf
mov
push
push
lea
ja
not
push
inc
call
add
clc
pusha
cmc
movzwl
or
rcl
rol
mov
jmp
leave
insl
fsubrs
daa
sub
mov
add
std
syscall
fisubs
enter
push
push
mov
adc
cmp
xchg
idivb
cmc
aad
test
pop
dec
lahf
mov
ret
jns
inc
mov
inc
jbe
adc
and
xor
push
cmp
aas
xchg
stos
cwtl
aad
or
and
jo
cmpsl
add
pop
aaa
arpl
jl,pn
mov
dec
inc
mov
insb
mov
test
pushf
sub
jp
jb
divl
gs
mov
push
nop
xchg
push
mov
add
push
xor
cwtl
fwait
push
sub
movsl
inc
outsw
and
mov
push
rcrb
loop
enter
ret
push
dec
mov
sub
dec
xchg
jp
sahf
pop
and
push
lea
mov
mov
fidivrl
pop
pusha
push
mov
pop
mov
pop
mov
in
loop
sbb
das
imul
jmp
sub
jae
popa
pop
mov
mov
icebp
call
repz
xlat
shll
stos
lcall
nop
inc
pop
mov
push
in
popa
shlb
es
xor
int3
int
iret
adc
sub
inc
stos
mov
fcompl
xor
dec
mov
and
out
in
jge
into
rorl
jo
inc
daa
fsubrs
xchg
int3
das
mov
das
xchg
idiv
std
je
stos
enter
adc
test
int
outsl
fnstcw
mov
movsl
adc
dec
test
sti
call
xor
push
mov
cmp
pop
add
add
insb
nop
std
jne
repnz
mov
fistpll
popf
jg
mov
or
jno
aas
test
jle
ljmp
lock
xor
int
lret
pop
pop
inc
daa
xchg
insl
rorl
loopne
cmp
sub
jns
add
loop
push
sbb
pop
lea
xchg
ret
leave
pusha
push
push
or
repz
mov
sbb
push
xchg
and
fs
loope
repz
xchg
add
insl
sbb
repz
in
js
adc
mov
add
imul
in
in
xor
fsubl
and
dec
mov
shll
cmp
jmp
and
lods
mov
gs
adc
xchg
sbb
sbb
in
push
sti
test
dec
cmpsb
das
cwtl
or
or
in
dec
out
adcl
shll
mov
inc
mov
push
xchg
out
outsl
xor
adc
sarb
push
mov
adc
sub
xchg
sahf
and
shll
xor
or
js
insb
mov
fucomip
and
and
jne
jmp
push
clc
test
push
lea
je
clc
cmp
add
jmp
pushf
movb
lea
jb
call
cmpsl
and
in
gs
in
xor
les
dec
and
push
ljmp
cmpsl
cmp
mov
icebp
notl
in
insb
arpl
sbb
call
sub
lea
or
pop
lcall
nop
ljmp
pushf
iret
jo
mov
je
pusha
roll
push
mov
orl
test
xor
pop
inc
loope
aas
int3
sub
cmp
lock
dec
leave
lahf
pusha
jge
push
sbb
std
loopne
dec
cs
sub
xor
rclb
repz
lods
lea
jne
leave
dec
inc
mov
jecxz
inc
cmp
mov
mov
and
pop
pop
call
pop
out
sub
adc
lret
daa
out
cld
push
or
test
ja
sbb
sti
fidivrl
fcompl
ja
adc
les
xor
stos
mov
lcall
cwtl
shrl
addr16
ret
fwait
sahf
push
add
push
scas
cmpsb
push
pusha
xchg
lock
push
lods
dec
xor
sbb
lods
or
jo
pop
mov
sub
in
lcall
xor
push
rcr
jbe
mov
int3
jae
outsl
sbb
ficomps
cwtl
jge
pop
fstpl
out
in
fisubrs
std
lcall
lret
out
repz
fisubrl
push
xchg
into
pop
fcomps
mov
jecxz
mov
add
push
in
cmp
stos
xor
fmull
push
je
mov
enter
bound
or
cmp
push
xchg
or
push
pop
insb
rclb
or
inc
repnz
inc
jnp
idivl
add
mov
testl
rorb
repnz
imul
dec
cs
rcr
mov
adc
pop
pop
mov
adc
loopne
sbb
jg
add
fcoml
negl
xchg
stos
cltd
div
or
pop
sbb
jb
lahf
jbe
pop
test
sub
push
lret
lock
mov
out
clc
std
dec
adc
cwtl
and
iret
jb
mov
movlps
push
jle
push
inc
cltd
ljmp
adc
xchg
ja
jb
loopne
pop
push
cltd
dec
mov
out
data16
xchg
mov
adc
push
mov
aas
and
stos
add
stos
fimuls
aas
scas
popf
mov
pop
add
fcompp
test
popf
xchg
push
inc
mov
in
aaa
in
sti
aaa
pop
lret
imul
dec
call
xchg
xchg
imul
and
and
sbb
pop
cwtl
cmp
ret
outsb
rol
pushf
pushf
dec
pushl
jmp
cmc
scas
jns
int
lock
call
adc
sbb
or
movl
xchg
adc
repnz
lods
jmp
pushl
in
shrb
popf
aaa
sbb
cmc
into
mov
roll
in
in
int3
sub
jae
rclb
fcomps
mov
loope
das
das
adc
jmp
jmp
enter
pop
cmp
arpl
in
in
push
repnz
and
push
cmp
cmpsb
sub
mov
in
into
dec
lods
test
inc
pop
rol
fs
mov
lcall
ds
movsb
pop
mov
mov
jmp
xchg
push
push
pop
in
fcompl
fcoms
gs
cmp
mov
add
pop
push
out
mov
cmp
adc
cld
fdivrs
sti
lods
stos
add
fsubl
adc
mulb
and
dec
negl
cmovbe
jnp
shl
hlt
clc
push
sbb
out
cmp
sahf
mov
pop
into
adc
sub
xor
sbb
sbb
sub
jae
out
int3
movsb
mov
loope
int3
cmp
jl
sub
cmp
loop
mov
pop
jo
cmp
loopne
cmc
mov
call
jg
in
mov
pop
jno
clc
ja
shll
jae
movsl
pop
cmp
lods
sarl
push
pop
adcb
jg
and
fistl
jne
pusha
mov
sbb
mov
xlat
dec
pushf
ss
cli
or
in
call
in
dec
push
lock
cmp
pop
mov
loope
xchg
pop
jae
pop
mov
add
in
popf
outsb
adc
or
push
dec
xor
xor
and
cmp
inc
or
mov
cld
mov
dec
jns
inc
je
mov
lcall
mov
jne
cld
inc
mov
jno
loope
jne
lret
mov
jo
in
nop
jp
das
sbb
fdivrs
test
xor
clc
cmpsb
push
pop
loop
jo
sar
pop
sub
cld
lahf
xchg
xor
dec
out
outsb
lret
sub
push
adc
ljmp
fldt
bswap
mov
fwait
mov
iret
sub
fucom
scas
cmp
or
cmp
ljmp
add
repnz
push
pop
inc
jle
sub
shll
jl
cmp
sub
and
sbb
imul
jmp
push
mov
adc
adc
sub
rcr
sbb
xchg
cs
mov
pushf
mov
mov
std
stc
cmp
arpl
mov
adc
insb
inc
jecxz
rcl
fsubl
jbe
test
repnz
jb
lock
sub
test
es
push
fdivr
aas
lcall
and
daa
inc
mov
sub
out
add
int3
xor
pop
mov
mov
and
in
fimull
insb
aaa
xor
bound
add
rcrb
xchg
add
dec
pusha
lods
repz
inc
loope
push
cltd
clc
ds
xlat
out
fsubrp
adcl
mov
jnp
imul
mov
pop
and
shrl
or
dec
adc
add
and
out
dec
jge
and
add
leave
and
js
loope
int3
cld
std
out
cmpsl
pop
jo
imul
dec
dec
and
and
xchg
enter
out
shlb
fs
aad
xor
in
lock
xor
arpl
mov
jnp
add
clc
test
out
mov
loopne
cs
ret
and
jne
dec
in
adc
int3
add
stc
sub
bt
test
pushf
repnz
pusha
jmp
test
test
cmc
sub
pushf
pushf
push
movb
lea
jmp
dec
add
fdivrs
loope
mov
jns
adc
rcrl
sbb
sbb
and
dec
or
mov
test
mov
pop
test
ja
icebp
cmp
pop
scas
mov
mov
dec
fmull
dec
xchg
push
loope
fwait
jg
enter
call
movsl
fst
fldz
in
push
or
cmp
movsb
mov
mov
insl
or
mov
push
pusha
and
xchg
insb
xchg
out
les
inc
popa
shll
test
rol
mov
sbb
pushf
and
sub
lock
sbb
add
and
sbbl
out
fstpl
jecxz
mov
fmuls
inc
dec
jbe
je
je
jae
popa
jb
inc
imul
je
outsl
outsb
and
jno
jbe
jmp
add
inc
dec
insl
fs
jbe
gs
inc
imul
je
outsl
outsb
and
jno
jbe
pop
add
aad
push
push
jno
inc
xchg
ds
dec
test
stos
cmpsl
inc
mov
xchg
dec
sub
outsb
ja
push
mov
push
mov
push
pop
insb
dec
mov
nop
data16
mov
mov
popf
test
outsb
or
in
pop
std
fistpll
arpl
fadd
iret
out
xchg
and
std
loopne
and
pop
add
lahf
idivl
bound
push
out
mov
jmp
xchg
sahf
inc
mov
sub
inc
iret
mov
or
inc
add
in
lahf
es
jae
js
pop
adc
push
cwtl
jb
rcll
sbb
imul
repnz
and
mov
rcl
scas
mov
cmp
pushl
jecxz
mov
rclb
jl
mov
jecxz
inc
push
shlb
test
mov
mov
subl
sub
cld
pusha
jns
dec
pop
push
call
or
daa
or
fxch
and
pop
ja
das
in
xorb
and
lea
in
and
in
push
dec
sti
jmp
jp
stos
ror
mov
push
sbb
mov
je
loop
iret
pop
std
mov
mov
xor
movsl
movsl
rcl
and
cmpsb
popf
pushf
pop
add
sub
lds
movsb
aad
out
cld
mov
sub
and
fwait
pop
das
push
aad
adc
loopne
inc
jo
sysexit
jae
xchg
in
adc
fucomi
fucom
leave
in
sahf
hlt
and
push
and
xlat
pop
fiadds
out
push
mov
jmp
push
and
popa
shl
out
lret
pop
sbb
adc
adc
pushf
test
xchg
push
or
xor
and
scas
xlat
push
jo
pop
lahf
in
sbb
xchg
jl
in
sbb
xor
push
sub
fimull
lahf
enter
std
push
mov
push
xchg
fsts
lret
cmp
test
or
daa
push
mov
lea
dec
insb
jnp
and
push
stos
pop
jmp
lcall
mov
mov
sti
jbe
sbb
insl
cmpsb
and
cwtl
outsl
cwtl
pop
sub
arpl
mov
loopne
stc
iret
ljmp
scas
nopl
jb
jno
mov
lock
call
xchg
fcompl
clc
xor
inc
arpl
and
das
icebp
mov
adc
pushf
movsl
add
add
aaa
cmpsb
add
dec
mov
test
ret
lods
lds
jg
cmp
test
add
and
push
adc
adc
inc
dec
icebp
jnp
sbb
dec
and
dec
lods
fs
sub
push
mov
xlat
fstpt
leave
sbb
xchg
inc
sub
xchg
xchg
fisubs
xor
pop
popf
mov
cli
scas
push
xor
jmp
mov
push
adc
bound
in
rcrb
repz
pop
add
xor
sub
mov
mov
mov
inc
jp
sub
sbb
dec
mov
pop
cwtl
popf
daa
idivl
adc
dec
iret
ffree
fs
xchg
ja
lcall
add
mov
ja
adc
and
cltd
pop
mov
pop
int3
mov
cmp
and
mov
mov
inc
xchg
or
loope
and
es
in
rorl
adc
enter
xor
in
sbb
cmpsl
mov
sub
add
and
je
adc
pop
out
je
mov
xor
xor
dec
push
notl
mov
sbb
dec
ret
fistpll
cltd
mov
sbb
push
scas
or
divl
add
std
addb
movsl
outsb
arpl
ret
pop
shlb
xchg
or
pusha
jp
lods
adc
adc
xor
xchg
mov
pop
cmp
adc
and
lcall
jnp
fsubrl
pop
inc
mov
jge
hlt
stc
in
sub
les
aaa
lds
mov
xor
popf
shrl
movsl
jno
faddl
addr16
sbb
testl
shll
aaa
push
fdivrp
pop
sbb
into
mov
call
cltd
jle
xor
mov
pushf
mov
call
das
dec
int3
pop
and
clc
es
das
fidivl
jns
xorb
bound
int3
dec
outsb
mov
push
sbb
sbb
test
scas
jmp
test
push
lret
jae
ja
jne
pop
mov
lock
shr
pop
aad
push
cmp
mov
inc
mov
repz
fs
sbb
add
push
shrl
jle
cmpsl
enter
adc
das
aam
lods
inc
mov
imul
and
test
dec
enter
dec
xchg
jecxz
ficoml
or
fistps
cmp
mov
cmp
das
sub
mov
sub
xchg
enter
mov
mov
mov
push
xor
dec
mov
pop
xchg
xor
cmp
popf
mov
adcb
cmp
mov
out
outsl
bound
mov
push
stos
fcompl
loope
rclb
testl
mov
clc
icebp
das
xchg
mov
push
int3
imul
push
mov
movsb
xchg
cwtl
cmp
push
mov
xor
cmp
dec
hlt
pop
mov
rcll
shr
and
out
decl
loope
jge
aas
xchg
mov
stos
push
sahf
imul
mov
cltd
and
rcrl
lret
dec
test
cmp
and
mov
push
add
movsb
in
call
mov
fstpt
mov
daa
xchg
lret
dec
jecxz
jmp
pop
adc
loopne
fcoml
mov
test
push
xchg
rcll
dec
pop
push
add
push
lahf
inc
das
fbld
xchg
push
shll
mov
adc
bnd
add
gs
clc
ret
and
in
rorl
neg
bt
cmp
add
and
stc
jmp
pushf
lea
je
call
and
es
xchg
pop
dec
iret
arpl
sbb
jnp
jmp
dec
outsb
lahf
push
push
popa
inc
push
icebp
xchg
imul
popf
jle
pushf
mov
sbb
mov
or
adc
mov
clc
inc
mov
aam
das
in
sbb
fcomip
test
pop
scas
xorb
mov
sub
and
push
lds
adc
xor
clc
and
out
sbb
pushf
adc
jae
or
sbb
pop
repnz
mov
inc
jmp
push
jl
cwtl
sub
call
fstpt
push
in
jbe
insl
mov
mov
stc
insl
js
fs
jne
call
dec
fiaddl
enter
mov
ret
jle
inc
test
popa
mov
nop
jmp
sbb
repz
mov
adc
adc
insl
rclb
ss
jae
lret
leave
adc
push
stos
xlat
out
std
sti
imul
pusha
sbb
das
sub
dec
je
enter
lock
xchg
outsb
imul
push
mov
mov
mov
repz
bound
dec
jno
lahf
cmp
mov
inc
or
ret
arpl
incl
push
xchg
dec
mov
mov
cs
mov
movsb
jnp
inc
aam
shrl
sahf
pop
les
pop
mull
cwtl
dec
imul
iret
ljmp
pusha
sub
and
cltd
sbb
gs
or
jnp
or
mov
xchg
std
cld
adc
jmp
sub
addb
dec
cmp
popa
xchg
cmp
or
cmp
jle
sbb
inc
les
int
jl
add
inc
fdivrl
pop
inc
jg
push
sbb
cmp
data16
adc
pusha
xlat
sbb
pop
mov
iret
lret
pusha
jmp
ds
mov
mov
pop
stc
jo
inc
xchg
insb
xchg
pop
xchg
mov
jecxz
adc
shlb
pop
fsts
jmp
dec
xchg
in
out
adc
icebp
mov
pop
push
sar
pop
inc
cmpl
je
popa
mov
push
aaa
mov
sahf
push
ret
ja
xchg
lods
faddl
fstpt
mov
ss
pop
inc
cmp
int3
pop
hlt
xchg
subl
sub
gs
sub
daa
dec
dec
cmc
repnz
aaa
pop
repz
dec
arpl
aam
inc
cmc
imul
loope
jbe
daa
out
push
imul
add
xlat
add
push
aas
daa
xlat
gs
pop
inc
out
xor
xchg
jno
jae
jle
std
out
dec
mov
ss
daa
push
jae
xchg
mov
fstps
mov
mov
cmp
and
inc
xchg
push
in
int3
in
into
xor
aas
and
lea
jne
cmp
cmc
cmc
stc
xor
pushf
pushl
pushf
lea
jmp
lahf
mov
pop
cwtl
jmp
aas
or
mov
fsubl
cmp
push
xor
nop
jecxz
xchg
mov
mov
mov
cmp
jecxz
int3
in
jmp
ja
ret
pop
push
cmp
adc
mov
dec
stos
and
and
sbb
and
sbb
cmp
push
ss
stc
dec
stos
arpl
sbb
mov
sbb
adc
xor
in
and
loopne
adc
mov
lret
push
clc
inc
outsb
sbb
add
inc
sarb
in
andl
sub
jg
add
pop
push
cmp
loop
and
mov
out
dec
pop
scas
xchg
das
xchg
ljmp
xor
cmp
rcrb
jns
aad
imul
mov
dec
and
xchg
lods
or
cmpsb
push
add
mov
adc
add
xor
inc
mov
sbb
xchg
shl
call
sti
dec
mov
sbb
rcll
cmp
or
loope
arpl
in
dec
ficompl
pusha
xor
xor
adc
lcall
xchg
sti
adc
push
sahf
xor
lea
mov
and
dec
pop
mov
leave
xor
mov
fs
in
test
xchg
aaa
jg
daa
xchg
mov
cmpsl
mov
jmp
mov
pusha
adc
xor
aaa
pop
adc
mov
fldenv
push
fcomip
xchg
or
add
pop
cmpsl
and
in
int3
mov
and
adc
pushf
in
stc
dec
stos
adc
add
lods
lahf
sub
outsl
and
les
idivl
mov
cld
out
fistl
js
jnp
aaa
in
scas
cli
xor
aas
loope,pt
pop
lods
dec
sbb
addr16
push
pop
or
hlt
stc
aam
mov
adc
sahf
mov
pop
mov
inc
das
daa
inc
andb
mov
cmp
lock
fsubl
push
and
lcall
andl
xchg
mov
push
push
rcll
mov
inc
cld
xchg
and
stos
aam
data16
add
pushf
dec
xor
imul
and
push
adcb
xchg
in
lret
mov
or
jp,pt
outsl
fsub
scas
dec
mov
jg
inc
xchg
push
mov
dec
scas
mov
popf
inc
mov
inc
xor
mov
in
lcall
push
adc
cmpsl
fbstp
push
ljmp
and
xor
mov
cmp
and
into
js
lods
or
inc
jmp
xor
push
das
push
xorb
sahf
xor
clc
outsb
rcll
push
nop
jns
test
inc
mov
xor
loopne
sbbb
jne
icebp
aaa
push
adc
imul
movsb
dec
divl
out
lods
sbb
and
cwtl
arpl
jecxz
pop
dec
adc
mov
loope
leave
xor
push
in
dec
push
pusha
lea
jne
jmp
mov
fstl
jns
jb
cmp
inc
xlat
pop
xorb
fnstsw
dec
mov
dec
divb
rcll
push
or
mov
xchg
inc
daa
lret
ret
push
adcb
push
adcl
ja
add
mov
inc
pop
mov
ds
ss
and
cli
inc
adc
jnp
lods
shll
sbb
xchg
cvtpi2ps
mov
inc
loope
leave
jg
pusha
aas
mov
leave
loop
inc
mov
push
lret
xor
push
stos
mov
push
adc
cltd
xchg
push
lret
push
les
fstps
cmpsl
fs
in
movsl
xchg
xorl
push
mov
sti
cmp
int
xor
push
push
pop
pop
movsl
int
fisttpl
test
cmpsl
adc
adc
pop
push
ret
test
aad
mov
dec
fcoms
lret
push
iret
pop
leave
pop
inc
fiaddl
bsf
mov
lret
sub
jno
sbbl
andb
dec
mov
outsl
lods
stc
or
mov
bound
sub
or
mul
insb
cmp
mov
lcall
xor
iret
inc
pop
loop
loop
repnz
sbb
call
mov
inc
adc
ret
outsb
enter
loop
and
aad
test
jmp
icebp
sbb
std
movsl
adc
sub
fistps
mov
pop
loop
mov
jbe
aaa
sbb
dec
shrl
jae
ljmp
repnz
or
nop
cld
out
push
dec
shrl
dec
int
scas
and
cmp
jnp
lods
in
mov
repz
sub
outsb
aas
add
lea
xlat
push
lods
stos
daa
roll
mov
and
adc
scas
dec
lea
ret
icebp
or
push
sarl
mov
repnz
jmp
jns
xchg
cmp
cmpsb
xchg
not
sub
push
rcl
adc
inc
mov
jecxz
cmp
in
loop
push
dec
data16
mov
inc
sub
or
aas
inc
push
fsts
in
pop
sbb
dec
lret
ds
std
jp
mov
stc
dec
adc
mov
sbb
imul
add
and
pop
mov
xor
dec
int
mov
repz
das
out
ret
pop
fdivs
popf
in
pop
add
mov
repz
mov
shl
mov
stc
and
clc
push
add
push
lea
jmp
cli
mov
out
or
sbb
cmp
push
lcall
shlb
nop
nop
or
rcr
lcall
sub
cmc
jg
test
mov
les
mov
jns
fimuls
jmp
xlat
test
mov
cli
aaa
lret
xchg
sbb
cmpsl
into
xor
cmpsb
jmp
mov
loope
add
fs
dec
insl
ljmp
out
sbb
idivb
jns
adc
pop
jmp
call
dec
dec
daa
lret
cmp
dec
mov
dec
mov
or
dec
cmp
xor
sub
adc
inc
popf
and
shrb
pop
xor
in
xchg
fistpll
inc
jle
rcll
mov
cmc
popf
mov
dec
mov
fxam
add
cli
sbb
gs
pop
pop
push
mov
sbb
test
dec
jne
jb
or
jno
pop
sub
mov
popf
in
sbb
bound
pop
cld
mov
sub
push
repz
xchg
sub
pop
mov
mov
xchg
std
mov
dec
cs
ret
cmc
in
pop
pop
imul
xchg
xor
push
inc
adc
pop
lret
fcomps
mov
imul
sbb
in
pusha
mov
mov
add
hlt
lea
out
enter
add
dec
scas
fistl
enter
cmp
push
xchg
ds
push
sub
fwait
adc
and
pop
je
pushf
nop
sub
lea
and
daa
cld
inc
jns
stc
pop
sbb
mov
inc
sti
pusha
clc
std
test
rcrb
inc
ds
clc
push
loopne
adc
adc
lcall
xchg
jmp
and
xor
aaa
pop
inc
rorb
sahf
xchg
xor
and
sub
and
inc
jmp
test
int3
push
mov
lds
and
pusha
lea
jne
mov
call
jp
int3
sti
inc
add
popf
stos
data16
mov
adc
mov
xlat
inc
or
or
or
lcall
test
cmpl
cli
sbb
lahf
popf
inc
inc
fildll
outsb
pop
pop
cld
fidivrs
test
loope
mov
jmp
cwtl
lcall
fstp
fiaddl
mov
jge
cmp
mov
pop
int3
pop
xchg
insb
repz
pop
in
pop
aas
jo
jmp
sub
mov
push
add
cmp
add
nop
xchg
mov
stc
sbb
cmp
jns
iret
or
mov
lods
out
pop
jmp
xchg
add
mov
shl
xchg
xchg
sub
fldpi
add
inc
out
test
aad
ficomps
lods
mov
add
xchg
fdivs
imul
xchg
xchg
xchg
sub
adc
sub
fistps
int
mov
xor
jge
or
test
adc
xchg
add
loope
jge
int
mov
cmp
add
sbb
sub
inc
pusha
cmpsb
insl
xor
rolb
ror
add
sahf
add
fisttpll
into
pop
mov
repnz
push
pop
out
ljmp
sub
jp
add
and
or
scas
jbe
js
pop
mov
stc
sbb
mov
and
clc
lret
pushf
daa
into
dec
sub
jmp
dec
dec
test
imul
scas
xchg
es
pop
xor
pop
jbe
scas
cmp
mov
das
enter
jecxz
in
dec
ret
xlat
stos
dec
sbb
cltd
mov
shll
jl
xchg
ds
lret
cmp
stos
mov
xor
dec
sub
xchg
cmpsl
inc
inc
ds
push
sahf
pop
lods
or
dec
pop
xchg
incb
sti
ret
mov
lods
loop
ss
xchg
sub
sbb
fisttpl
loopne,pt
mov
aam
lahf
or
in
pop
nop
lcall
stos
icebp
xor
repz
push
test
cmp
addr16
fs
ret
fidivs
push
ss
leave
loopne
lds
add
mov
mov
jne
hlt
sub
pop
xchg
xchg
or
and
ljmp
lock
xchg
fildll
or
ret
in
add
mov
lret
dec
mov
ret
popf
cmp
dec
daa
sbb
sbb
or
sub
movsl
stos
add
jle
and
aad
jno
adc
out
dec
outsb
cmp
mov
imul
add
sahf
mov
or
test
in
adc
orl
cmp
mulb
std
inc
cmpsl
dec
and
adc
jp
jns
shr
push
in
out
inc
ja
stos
xchg
movsl
test
in
adc
add
push
in
out
xor
enter
xchg
arpl
mov
test
gs
pop
icebp
jl
imull
mov
push
sbb
push
mov
xlat
lahf
sti
popa
push
add
xchg
lcall
fwait
aaa
in
push
jne
int
sbb
nop
add
mov
shrb
int
cld
push
addr16
jmp
loopne
cmpsl
dec
mov
add
in
pop
stos
cmp
lds
inc
xchg
xor
movsl
imul
dec
add
loop
jecxz
dec
call
lea
rcrb
jmp
inc
jno
jge
pushf
or
mov
incb
decl
pushf
lcall
dec
push
aas
es
or
test
cmp
xchg
xor
mov
lock
adc
fisubl
push
arpl
push
inc
inc
xchg
pop
icebp
push
dec
mov
and
cli
jp
sahf
stos
xchg
xor
adc
jmp
scas
rorb
fiaddl
scas
sub
inc
pop
cli
testb
insb
dec
in
pop
mov
and
imul
mov
ja
and
sub
mov
pushw
push
pop
push
cmpsb
shrb
mov
jae
icebp
mov
mov
push
adc
mov
pop
pop
js
mov
pop
stos
test
daa
inc
xor
lret
lcall
adc
adc
cmp
enter
cwtl
mov
les
xchg
repnz
inc
movsl
mov
xchg
and
popf
aas
jecxz
scas
sbb
rorb
add
jmp
push
and
movsl
sbb
add
and
leave
jae
push
int3
sub
and
sub
mov
stos
pop
je
aaa
out
push
dec
or
cmpsl
mov
cmpsb
xchg
stos
mov
push
pop
dec
xchg
gs
and
mov
cmp
in
sbb
or
mov
sbb
adc
and
adc
mov
js
shrl
in
mov
mov
lock
dec
push
rcr
pop
cli
call
jg
dec
mov
inc
mov
fwait
sub
jne
xor
and
in
or
mov
int3
jmp
inc
mov
popf
jge
or
sub
add
mov
roll
mov
mov
aaa
mov
aad
loop
mov
sti
es
scas
cmp
ret
mov
add
jb
adc
dec
push
cltd
inc
adc
loope
xchg
pop
fnstsw
xchg
pop
fadds
out
mov
mov
mov
dec
add
clc
jb
pop
xchg
cmp
outsb
push
jecxz
loopne
xor
addr16
mov
and
js
or
dec
clc
jecxz
mov
int3
push
pop
add
add
cli
les
cmpsb
jge
mov
pop
sahf
shll
int3
stos
pop
call
shrb
add
in
cwtl
es
mov
xchg
movsl
imul
shll
cli
clc
inc
xchg
mov
les
mov
ret
xor
addr16
ret
push
dec
pop
mov
loopne
inc
mov
jle
dec
stos
adc
imul
mov
orl
aam
xchg
inc
or
loope
sarl
std
pushf
and
je
mov
insl
and
sti
fmuls
adc
sarb
icebp
ret
icebp
mov
or
sbb
cmp
mov
aam
mov
fwait
dec
aas
and
sub
loope
stc
xchg
xor
lods
mov
test
and
jecxz
jecxz
add
jle
inc
insl
call
lahf
sbb
mov
mov
or
dec
sti
loope
ret
popa
push
test
jmp
repz
ljmp
lcall
sub
fiaddl
hlt
cmpsl
jg
sbb
push
lock
add
xchg
inc
dec
cmpsl
lock
pushf
xor
stc
adc
and
mov
jo
stos
adc
inc
outsl
mov
and
mov
and
add
sbb
mov
dec
mov
dec
adc
sbb
stos
xor
and
mov
loopne
pusha
push
pop
int3
xchg
pop
das
aaa
mov
mov
adc
push
push
into
push
inc
jne
sub
xchg
int
dec
push
in
or
jne
pandn
clc
hlt
stos
setne
jb
jmp
dec
int3
leave
not
pop
jp
scas
in
xor
mov
pop
sub
movsl
hlt
aad
dec
insb
mov
xrelease
arpl
ret
sbb
jp
sbb
adc
mov
mov
jg
loope
test
lock
pop
loope
xchg
imul
xchg
iret
inc
call
mov
das
mov
lds
mov
ret
les
push
pop
dec
pop
jl
mov
pop
mov
cltd
insl
add
add
add
fimuls
subb
jle
dec
sahf
ljmp
lret
mov
push
outsb
pop
sub
leave
stos
sub
add
xlat
inc
aam
pushf
add
inc
shr
xor
cmc
sti
andb
addr16
push
imul
cmp
push
das
dec
inc
pop
xchg
mov
out
or
or
dec
insl
in
mov
jle
fnstsw
cmpsl
in
es
cs
jge
out
push
dec
pop
mov
fdivrs
push
fidivl
push
rcr
jmp
dec
mulb
hlt
sbb
sahf
data16
jne
pop
ret
push
repz
in
cmp
mov
cli
stos
call
and
je
rcll
push
mov
pop
pop
in
mov
sti
icebp
in
and
adc
ljmp
inc
mov
sbb
mov
cld
loope
xorl
test
push
in
mov
arpl
pushf
or
fadds
fmuls
lods
xor
loopne
sbb
ljmp
push
out
out
aad
push
vpunpckldq
adc
push
test
in
or
out
push
repnz
and
dec
or
xor
scas
add
mov
jp
out
push
pop
les
insl
mov
push
add
int
in
push
call
movl
loope
movsb
bound
sahf
imul
cli
xchg
xor
mov
or
fsubs
mov
les
js
push
arpl
int3
test
loope
fidivl
inc
popa
pop
xor
popf
lahf
lods
iret
dec
fnstsw
cld
and
cbtw
sub
mov
lcall
cld
mov
popf
dec
test
adcb
and
shll
xor
adc
jmp
dec
pop
fistps
test
es
dec
inc
das
adc
mov
jmp
mov
dec
stc
decb
dec
sub
fstl
popl
call
jmp
mov
and
testb
dec
inc
or
adc
ss
xor
mov
xchg
sbb
jae
jbe
je
sbb
and
jecxz
arpl
es
lcall
fstpt
pop
arpl
mov
aaa
xlat
jne
cmp
adc
jmp
inc
add
jl
adc
add
add
leave
dec
and
add
add
out
and
add
add
fildll
and
add
add
cld
jmp
add
add
add
add
sbb
and
add
add
cwtl
fcoms
add
add
add
stc
and
add
add
pop
mov
add
add
add
mov
add
add
add
adc
add
add
or
add
nop
cld
and
add
add
push
mov
add
hlt
cmp
add
add
push
add
add
add
add
add
add
push
add
add
add
jno
add
push
add
push
add
adc
add
adc
add
add
add
adc
test
outsl
rcrb
ret
add
jbe
lods
dec
int3
std
adc
sysret
cmp
mov
cmp
xchg
clc
adc
add
add
pop
arpl
push
cmpsb
adc
shll
mov
dec
subb
arpl
xchg
and
push
out
or
sbb
mov
mov
test
gs
mov
sub
out
test
pop
mov
adc
iret
mov
and
sbb
data16
fwait
push
mov
outsb
nop
popa
or
inc
dec
imul
xchg
and
sub
jb
xchg
xor
lret
xchg
xor
jle
jo
cltd
popf
sub
dec
sub
adc
mov
cmp
mov
jmp
or
sbb
sti
fwait
clc
stos
cmpsl
fisubrl
cmpsl
out
sub
test
mov
jecxz
stos
push
ficompl
fs
mov
jbe
mov
in
mov
imul
xchg
add
pop
fists
icebp
fs
es
push
mov
push
call
enter
insb
and
sub
mov
test
gs
mov
pop
cmpsl
call
popa
xor
push
or
aam
mov
popa
mov
lret
ror
aas
push
lcall
fwait
scas
out
mov
or
and
or
mov
lods
insb
jb
push
pop
mov
outsb
sarl
xlat
bnd
xor
jge
dec
popw
lahf
arpl
xor
cmp
sub
jo
sub
push
fstl
or
add
stc
inc
or
movb
xlat
adc
xchg
imul
loop
ret
sbb
sbb
xchg
mov
cmp
mov
dec
mov
cmp
mov
dec
pop
mov
ret
push
negl
push
mov
cmp
arpl
js
outsl
pushf
inc
jae
xor
lea
push
out
push
sti
sti
push
in
testb
add
sbb
adc
mov
or
inc
xchg
icebp
add
cmp
outsl
imul
hlt
flds
mov
xor
arpl
adc
leave
push
and
mov
push
iret
imul
nop
dec
or
cwtl
cmp
cmpsb
jmp
out
notl
inc
fidivrl
dec
cmp
pop
cltd
sub
jle
adc
outsb
mov
xor
mov
insb
dec
leave
mov
ficompl
sahf
dec
test
shll
jno
call
shl
fsubl
movsl
or
xchg
mov
sbb
fs
jne
mov
mov
int3
xchg
mov
clc
imul
andb
out
jl
lret
jns
cmp
ss
or
pop
xchg
or
mov
popa
imul
rorl
int3
dec
lret
cwtl
mov
mov
outsb
sbb
into
aas
or
pop
mov
icebp
outsb
lahf
jae
out
adc
call
addr16
dec
mov
das
imull
adc
inc
std
jnp
leave
inc
inc
idiv
inc
jg
faddl
aas
ucomiss
stc
in
arpl
lea
push
notb
sahf
xor
movl
dec
imull
in
mov
imul
inc
dec
loop
mov
pop
fisubs
adcb
xchg
ja
xor
imul
jo
sbbl
dec
repnz
xor
leave
add
inc
cmc
lcall
shrb
aaa
dec
dec
add
scas
sti
jnp
xlat
dec
fcomip
arpl
add
add
mov
negb
lss
xchg
push
adcb
inc
mov
aas
sahf
inc
mov
cltd
mov
test
outsb
jmp
sub
enter
data16
out
mov
or
mov
repz
in
mov
xor
inc
xchg
jae
cmpsb
orl
mov
xchg
lods
arpl
jl
in
mov
mov
imul
gs
xor
cs
insb
add
fidivs
jmp
repnz
push
inc
loope
pop
jecxz
ret
movb
outsl
scas
sbb
inc
hlt
cs
fs
xchg
xchg
xchg
adc
movsl
mov
popa
jp
stos
jo
cwtl
sub
call
mov
xlat
stos
mov
xor
cld
pop
mov
fadds
jp
mov
fs
outsb
mov
orb
jle
dec
cld
cld
pop
test
push
call
ret
gs
jmp
mov
cli
imul
insb
repz
mov
cld
cmp
jae
gs
adc
call
add
sub
arpl
cmp
or
xchg
add
mov
sahf
mov
pusha
push
xor
inc
xor
cmpsl
adc
mov
xchg
mov
pop
lahf
sub
pop
dec
or
dec
xchg
jge
idivb
xor
clc
cmp
pop
mov
fwait
lods
xlat
mov
cmpsb
push
lds
test
lea
jnp
push
cltd
mov
inc
int3
cmpsb
pop
lock
test
gs
adc
or
aad
dec
out
adc
shll
pop
mov
jecxz
loop
loope
ficoml
in
mov
movsl
push
loopne
xor
fwait
cmpsl
adc
add
push
push
sbb
out
mov
mov
adc
mov
or
bnd
mov
ror
test
mov
aam
push
jmp
js
scas
enter
inc
push
cltd
push
pop
arpl
pop
into
xchg
jne
dec
mov
cmp
scas
push
push
in
dec
enter
push
mov
les
in
or
shrd
clc
push
mov
pop
jmp
fidivrs
inc
cmpsb
mov
aas
xchg
in
pusha
or
cmc
cmp
out
adc
and
cld
jecxz
mov
test
out
unpckhps
push
or
test
dec
js
je
cmc
push
pop
test
aaa
mov
cmp
mov
mov
xor
fcmovu
mov
dec
leave
pop
inc
jecxz
cmpb
mov
add
dec
jmp
test
faddl
sub
in
mov
dec
jno
sahf
sub
pusha
pushf
pushf
pushf
lea
jmp
inc
ror
not
xchg
shr
call
and
push
sub
das
dec
shrb
lret
xchg
and
icebp
cmc
mov
inc
sub
test
sbb
mov
hlt
cmpsl
dec
inc
cmc
into
cmpsl
push
ds
mov
jmp
mov
in
outsl
sub
mov
popa
mov
test
sub
insl
and
inc
fsts
cmc
adc
or
dec
or
sarb
stos
fwait
int
add
add
ljmp
daa
enter
jl
icebp
dec
mov
rcr
push
jp
xchg
lret
sbb
xor
mov
scas
in
mov
or
sub
mov
push
or
mov
pop
jge
je
xchg
lea
sub
ret
into
mov
test
iret
add
es
mov
jo
fs
test
sahf
add
in
dec
push
and
push
enter
scas
add
or
and
sarb
dec
jle
sub
pop
mov
push
cmp
lods
mov
pusha
loopne
das
cmp
inc
lds
pop
lret
int3
mov
and
enter
lret
ds
and
cmpl
mov
std
shlb
add
sub
dec
push
insb
popa
iret
or
mov
inc
ret
loopne
shll
es
loopne
mov
sub
jns
adcb
scas
jno
sbb
pop
in
out
in
mov
jp
lds
mov
jbe
test
sub
xor
mov
xchg
dec
mov
push
dec
je
and
repnz
into
imul
lret
mov
sbb
jge
sub
jp
sbb
mov
aam
xor
test
pop
dec
mov
jge
aam
cwtl
mov
stc
popf
jbe
push
nop
out
insb
into
xchg
inc
aad
mov
jl
mov
adc
outsb
inc
add
xor
inc
popa
or
mov
xlat
gs
adc
push
sub
sarl
cmp
inc
lea
cmp
sub
and
pushf
lea
jp
jne
inc
cmp
shld
cmp
mov
cmc
add
cmp
cmp
cmc
stc
movzwl
rcr
neg
mov
push
mov
cmp
movb
add
bt
cmp
call
pop
jns
xchg
pop
nop
and
push
imul
sbb
add
les
aaa
inc
test
lods
je
insl
rorb
jmp
jne
mov
lods
lret
xchg
adc
mov
push
inc
pop
in
xchg
jmp
je
cmp
mov
mov
bnd
imul
gs
fldenv
scas
leave
test
mov
push
cmp
pop
bound
icebp
mov
int3
cmp
scas
addr16
frstor
or
shlb
inc
pusha
dec
jo
addl
orb
and
or
rcl
jno
fcomps
cwtl
loope
test
pop
rclb
mov
mov
rcrb
addr16
xor
pop
bound
negl
xor
enter
aaa
imul
cmpsl
mov
jns
int3
adcb
and
insl
push
xchg
loop
cmpl
and
cmp
sub
fistpll
mov
xor
mov
fnstcw
push
loope
ret
or
sub
popf
push
dec
dec
imul
stc
jl
fstp
add
arpl
mov
cmp
mov
pop
je
inc
xor
dec
mov
mov
xchg
mov
setae
fcomps
mov
dec
and
pop
aam
mov
dec
lds
je
jne
sub
adc
inc
std
sbb
lods
fs
xchg
adc
add
jp
push
sbb
mov
aad
push
fs
cmp
or
dec
dec
pop
dec
stos
cmpsb
sahf
mov
in
hlt
les
and
js
push
mov
jne
sbb
xchg
mov
mov
lahf
sub
cmp
test
push
and
cli
sti
sbb
stos
dec
aam
repnz
outsl
ffreep
into
adc
xchg
mov
jno
jns
jnp
dec
dec
popf
pop
lret
cs
lahf
fistpl
adc
xchg
xchg
loop
lret
add
repnz
cmp
repz
jbe
push
sbb
mov
rclb
sahf
pop
rorb
stc
jg
popa
xchg
dec
repz
lods
out
adc
inc
cmp
call
int
aam
xchg
mov
cmp
sti
adc
xor
icebp
bound
outsb
ja
clc
lock
clc
cmp
outsb
aam
loop
jnp
lcall
fimull
cld
icebp
dec
inc
repz
pop
fldenv
pop
mov
rolb
mov
push
out
push
mov
das
icebp
std
ret
xchg
mov
ret
mov
pop
mov
pusha
sub
inc
mov
push
add
mov
rcll
dec
jmp
stos
sub
in
dec
das
push
mov
aas
jle
decb
adc
jbe
mov
repz
das
cwtl
pop
out
jae
in
lods
mov
jp
imul
jne
je
and
and
jae
jo
outsl
addr16
insl
and
jae
bound
outsb
and
outsb
imul
and
and
jns
gs
and
data16
and
and
push
imul
and
popa
arpl
fs
jae
imul
outsb
daa
je
ja
jb
and
jns
outsl
jb
cs
rorb
nop
ret
pushf
dec
jmp
sub
mov
pushl
pusha
rep
pushf
mov
movw
pushf
mov
lea
jmp
pop
outsl
cli
out
repz
pop
f2xm1
jne
push
adc
shl
pop
inc
nop
xor
fwait
or
dec
sahf
fs
mov
mov
hlt
or
fwait
add
mov
ljmp
movsl
pop
jg
xchg
movsb
sbbb
mov
lea
ja
mov
mov
int3
decl
push
jge
js
xchg
popf
daa
arpl
cmp
sbb
add
aam
es
lods
cmp
outsb
sub
xchg
aaa
fnstenv
leave
cmp
dec
mov
in
movsl
out
push
and
xorb
leave
imul
push
push
or
inc
cmp
or
push
loop
clc
in
std
xchg
lds
mov
add
das
ret
push
jno
mov
xor
loopne
mov
lahf
sub
outsl
xchg
push
mov
add
imul
mov
hlt
rcl
mov
and
dec
loope
hlt
ds
sub
rol
fisubl
stc
mov
sbb
mov
pusha
aam
clc
push
fwait
mov
sbb
mov
pop
movsl
adc
mov
std
jg
ficomps
sbb
cmp
lods
mov
mov
inc
loopne
adcl
jo
pop
sbb
dec
inc
pop
mov
cmp
in
jmp
mov
fsts
in
dec
add
push
add
shl
int3
xchg
int
xchg
jae
dec
loope
mov
in
lret
fldlg2
roll
call
fidivrs
or
sbb
jg
pop
scas
pushf
cs
cwtl
lock
loop
inc
inc
imul
pop
jmp
movsb
or
sbb
xlat
or
cmp
mov
jne
and
iret
add
aas
cmp
stos
fwait
mov
mov
xor
pop
adc
jmp
in
addr16
push
aas
pushf
jg
mov
jbe
add
imul
and
loopne
adc
dec
or
mov
outsl
test
insb
sub
sub
or
lea
aaa
sbb
jne
addr16
cli
lock
and
xor
xor
in
das
into
inc
mov
test
mov
dec
lock
pop
or
adc
imul
fcmovnu
pushf
mov
mov
mov
arpl
ret
push
dec
cltd
mull
jl
ss
bound
ja
ret
aas
cmp
lds
lods
shll
mov
loopne
andl
or
pop
test
sbb
jg
lds
xchg
clc
pop
lea
in
mov
fbld
xor
xchg
bound
push
bound
sub
push
ret
jb
cmpsl
mov
sub
dec
mov
shr
xchg
or
stc
pushl
pop
negb
lea
adc
jle
cli
xchg
sub
in
cwtl
bound
test
adc
sub
fistpll
pusha
popa
push
and
sub
push
outsl
rcrl
ret
dec
mov
cltd
and
cwtl
stc
dec
mov
gs
xchg
in
cmpsb
xor
sub
inc
scas
popf
fsubrl
adc
push
dec
icebp
mov
sub
push
enter
in
add
sbb
pop
mov
cmpsl
outsb
mov
out
dec
lods
cmp
mov
cmp
lds
mov
or
sub
mov
stos
add
bound
mov
loopne
int
cmp
cld
mov
sahf
mov
mov
xor
and
test
push
inc
jae
out
popa
rcrl
cmp
mov
shrl
pushf
dec
fwait
leave
sub
mov
lods
mov
lds
pop
dec
iret
mov
aam
mov
xor
ret
mov
test
pop
pop
adc
lods
pop
scas
mov
jae
int3
jno
adc
and
sub
cmpsl
iret
push
in
addl
add
fdivl
int
cmpsl
jg
jl
jo
xor
loopne
aaa
cmp
xchg
lock
adc
aad
jl
fdivs
xchg
and
jns
jns
mov
or
xor
insb
scas
jno
inc
fisubrl
lahf
jns
sub
cmp
xor
cmpsb
bound
or
cmp
clc
pushf
adc
pop
xor
xchg
xor
pop
mov
es
lods
lahf
test
cmp
mov
or
hlt
pop
jle
fwait
cli
sub
testl
mov
inc
cmp
pop
test
pop
sub
mov
mov
sbb
xchg
or
pop
xchg
mov
cmpsb
insb
movsl
push
fwait
push
arpl
xchg
sub
cld
mov
mov
xlat
pop
cld
sub
and
xor
jg
mov
push
jo
inc
icebp
cmc
cltd
pop
mov
in
mov
push
xchg
lock
data16
jae
daa
and
loopne
xchg
out
xchg
fisubs
jnp
cmp
jae
aad
push
dec
cwtl
inc
mov
icebp
gs
adc
inc
dec
movsb
aad
dec
jg
sbb
movsb
dec
jnp
cmp
mov
arpl
cmc
sub
movsl
fnsave
mov
repz
and
xor
lret
test
push
or
shrl
repnz
icebp
arpl
sbb
dec
xchg
outsb
xchg
pop
scas
fwait
in
movsb
aaa
mov
aam
mov
jae
push
mov
pop
xchg
cs
xchg
mov
xlat
inc
push
outsl
ret
decl
mull
imul
jle
mov
nop
push
pusha
pop
sarl
jns
jno
daa
mov
testl
out
pop
pop
aad
and
adc
jo
push
push
adcl
push
pop
mov
push
loope
xor
pop
popf
pop
mov
scas
pop
call
push
je
and
push
data16
sbb
xor
fcmovne
jmp
les
lahf
push
mov
add
push
insb
adc
jle
pop
ret
or
movsb
test
out
xor
cmpl
mov
jecxz
sub
sbb
xor
xor
sbb
popf
int
rcrb
and
mov
out
bound
aam
outsl
mov
arpl
mov
xchg
jnp
subl
sbb
rclb
loop
jl
jmp
mov
sarb
or
jle
cmp
mov
fdivrs
dec
cmpsl
iret
mov
xchg
in
shrb
cwtl
addb
scas
iret
out
and
test
pop
aam
jno
dec
xchg
dec
push
rcl
je
dec
cmp
jl
cmp
dec
clc
sbb
in
movsb
cmp
jecxz
add
pop
mov
add
outsb
ficoms
inc
push
sub
xchg
sub
hlt
stos
sbb
addl
enter
lret
repz
push
jmp
xchg
pop
cmp
inc
adc
jle
mov
and
push
cmp
dec
out
xchg
mov
stos
dec
loopne
inc
xchg
outsb
bound
cld
test
dec
mov
jg
mov
pop
lods
int
xchg
orb
cli
push
jge
mov
roll
sbb
sti
in
adc
xor
lds
dec
or
sub
xchg
daa
rorb
das
aam
jbe
xchg
sbb
aam
dec
and
mov
idiv
mov
dec
loopne
mov
mov
lds
jecxz
call
mov
and
inc
and
lahf
stos
arpl
call
pop
add
in
dec
jge
pop
nop
in
out
mov
dec
scas
push
lcall
ljmp
pushf
mov
sbb
or
cld
test
pop
mov
aam
push
inc
mulb
pop
pop
aam
mov
pop
adc
mov
inc
adc
enter
sbb
stos
ds
and
inc
das
daa
sbb
mov
enter
sti
cli
mov
and
jns
mov
fsubrs
mov
js
mov
inc
push
adc
add
xor
es
sbb
pop
mov
jbe
sar
lret
insl
adc
pop
mov
sub
pop
lea
je
call
jmp
not
call
inc
cs
dec
shll
ret
dec
ret
jno
insl
mov
mov
ret
cli
push
dec
jg
jge
jmp
les
lds
insb
fs
inc
imul
ret
jge
daa
xchg
mov
je
popf
add
scas
cwtl
and
push
neg
push
repnz
ds
mov
push
mov
jo
mov
popf
mov
push
fldl
xor
and
jmp
pop
push
push
and
lret
rclb
dec
sti
push
aam
jl
rclb
in
jne
dec
inc
psrlw
fmuls
adcb
pop
insl
xchg
or
add
movsl
adc
icebp
or
adc
and
imul
mov
scas
je
mov
push
add
pop
test
mov
out
pop
pop
leave
repnz
in
adc
dec
adc
adc
xor
call
ljmp
dec
pop
dec
mov
or
cwtl
cwtl
mov
mov
pop
andb
in
add
xchg
push
movsb
out
call
sbb
mov
loop
les
stc
lret
xor
loop
test
bound
adc
xchg
out
sbb
jb
shrb
test
pushf
addr16
mov
iret
dec
lahf
ds
pop
andl
mov
cmp
inc
int3
inc
mov
or
dec
jne
lahf
in
and
or
popf
fnstcw
dec
lods
pusha
xorb
mov
mov
adc
cmp
jbe
test
mov
jae
bound
push
stos
or
jno
mov
cmpsb
add
mov
adc
addl
cwtl
loope
sbb
mov
cli
sbb
call
out
add
and
cmc
aad
inc
dec
sbb
shlb
push
mov
sti
push
mov
or
mov
sti
jl
mov
mov
push
inc
adc
push
mov
xchg
add
push
loope
sub
jbe
dec
cmp
lods
inc
mov
jbe
test
pop
xor
pushf
sahf
add
mov
pop
jle
pop
lock
gs
popf
out
cmp
aam
cmp
or
mov
inc
xchg
das
in
or
or
faddl
arpl
outsb
jae
insb
gs
inc
imul
je
outsl
outsb
and
jno
jbe
push
push
lea
je
push
add
cmp
bt
jmp
mov
pushf
pushl
btr
mov
cmp
sub
cmp
mov
mov
repnz
movb
mov
call
int3
scas
or
or
stos
and
adc
gs
push
leave
les
lret
imul
lds
cmpl
and
fcmovnb
dec
pop
dec
mov
addl
sbbl
mov
daa
xor
mov
xor
push
and
cmp
inc
dec
mov
jb
leave
bswap
adc
mov
push
insl
mov
jmp
lea
mov
xchg
int
jne
fstpt
divl
ljmp
jb
int3
es
cmpsl
jecxz
jl
lcall
fwait
jnp
mov
je
xor
and
test
sahf
shl
mov
dec
jmp
pop
dec
iret
loop
jnp
mov
adc
insl
fisubs
in
xor
pushl
testl
stc
fcompl
xor
movsl
js
pop
imulb
push
and
imul
xor
mov
addr16
cmpsb
lahf
mov
inc
push
sub
push
fstl
xchg
jl
mov
add
dec
js
push
and
mov
cltd
stos
xorl
jp
pop
mov
push
mov
and
mov
ljmp
push
lret
lret
in
imul
and
cmpsl
jle
hlt
dec
jp
fbld
inc
pop
int3
add
mov
test
add
mov
std
shlb
bound
mov
in
ss
xor
flds
lock
sub
call
cmc
enter
shll
cmp
add
sbb
popf
shl
jecxz
add
pop
mov
int3
inc
sahf
push
fsubrs
or
inc
scas
cs
lcall
jns
dec
data16
sbb
pop
fidivrl
filds
imul
fisttps
clc
xor
or
stos
push
and
pusha
pop
int3
mov
in
hlt
out
pop
mov
icebp
dec
xchg
mov
push
push
popf
lahf
into
test
repz
dec
arpl
xchg
pop
clc
sub
sahf
adc
pop
or
dec
adc
xchg
or
inc
fnstcw
and
cmp
icebp
and
and
movl
cmp
seto
lea
lea
not
movsbw
mov
pushl
jmp
not
movb
push
bswap
jmp
cmp
mov
dec
js
or
lds
es
ja
pop
add
imul
xchg
lds
jmp
mov
jb
pop
cmp
xor
into
clc
jae
shlb
add
ret
loop
dec
pop
incl
lahf
lods
mov
sbb
push
in
and
xchg
neg
jo
pop
or
dec
movsl
or
in
mov
aad
push
mov
push
outsl
call
jl
in
add
out
fsubrs
stos
xchg
mov
jl
push
cli
and
in
xchg
std
es
dec
add
or
arpl
out
shrl
clc
sub
fildl
jne
dec
cmc
aam
fwait
dec
inc
stos
out
pop
shrl
push
idiv
lods
ss
cmp
arpl
in
xchg
xor
cmp
dec
mov
cmp
int
or
fcompl
rcll
out
test
lods
pop
pop
inc
mov
js
loop
jo
jno
pushf
and
or
notl
push
int
jne
or
push
pop
sbb
adc
mov
frstor
fwait
or
mov
mov
fcom
test
movups
dec
stos
pushf
daa
mov
sarb
std
inc
sub
push
jb
roll
jne
popa
mov
lcall
das
mov
repnz
ja
cmp
lcall
lock
cmp
out
aad
rol
fcompl
jae
test
mov
aad
stos
test
add
xor
call
lret
and
mov
aam
in
xchg
cwtl
sub
test
add
popa
rdmsr
out
xchg
add
mov
mov
pop
insb
or
xor
fwait
cmc
ret
out
cmp
lods
pop
stos
mov
jge
nop
lods
xor
and
xchg
sub
setb
dec
pop
aaa
scas
call
mov
add
mov
push
popa
add
jae
les
pop
gs
push
xchg
pop
mov
add
and
cwtl
mov
dec
or
inc
lcall
sbb
popf
mov
push
jp
in
fdivs
mov
in
call
and
stos
jns
inc
addw
sahf
jg
add
iret
push
loopne
xchg
inc
cli
add
in
cltd
mov
hlt
stos
nop
int3
xlat
inc
xor
ds
mov
xchg
repnz
pop
popa
bnd
inc
subb
and
push
adc
mov
je
xor
push
shrb
in
mov
loopne
cmp
add
mov
sub
mov
mov
pop
daa
xchg
mov
pusha
retw
jno
mov
out
sbb
jns
xchg
cmc
dec
jo
pop
push
push
scas
xlat
cmpsb
into
dec
mov
xchg
cmc
insl
sbb
sti
out
int
push
addl
mov
lds
sub
lahf
stc
sbb
pop
les
inc
decb
push
repnz
sbb
xor
jl
iret
xor
out
mov
lods
sbb
push
lock
aam
sub
cwtl
mov
or
mov
loope
cmpb
mov
jae
pop
push
push
scas
je
add
pop
mov
cmc
adc
mov
jg
aam
les
sub
xchg
lahf
movsl
shl
shl
dec
int3
lods
cmc
int
jmp
ljmp
xchg
xor
fs
cs
mov
pop
add
sbbb
or
jns
lret
sub
push
sub
dec
cmp
leave
or
flds
insl
xor
mov
imul
dec
cwtl
cmc
or
sbb
jle
aas
lret
adcl
arpl
xchg
cli
insb
sbb
adc
fs
int3
and
mov
ret
jecxz
push
jo
addr16
mov
dec
lahf
lods
pop
mov
rcr
mov
add
adcl
data16
aas
sub
jmp
cmc
jg
cmp
xchg
addr16
pop
dec
cmc
pop
incl
xor
jae
pop
xchg
aad
cmp
push
pop
cmove
push
insb
sbb
push
popf
lea
lods
mov
xor
jnp
mov
push
shr
cmp
push
pop
xor
lahf
test
jmp
shl
pop
cli
mov
insb
daa
push
mov
ja
repnz
les
push
ret
jns
dec
lock
jp
in
xchg
ret
neg
bsf
btr
sar
mov
pushf
clc
cmpb
pusha
lea
jne
cmp
jmp
or
fistpll
pop
lret
pop
mov
push
insl
in
outsl
xchg
inc
movsl
sarb
sbb
push
mov
movsl
in
mov
gs
mov
xor
js
or
shlb
dec
or
enter
shlb
roll
lock
test
pop
adc
test
data16
popa
ja
add
dec
dec
in
int
jnp
fildl
xchg
push
dec
popa
cmp
jmp
imul
pop
mov
jbe
push
mov
icebp
xor
add
xchg
pop
mov
call
insl
aad
adc
pop
repz
in
xchg
inc
or
pushl
rorb
test
cwtl
add
xor
inc
or
mov
cmp
inc
xlat
or
call
gs
fadd
mov
xor
pop
jg
cltd
clc
mov
in
jl
repz
loope
daa
movd
faddp
pop
mov
pop
mov
mov
and
push
push
mov
loope
push
inc
jl
mov
jp
mov
lds
es
test
lcall
and
stos
xchg
push
and
adc
adc
negl
vpmacsdqh
cs
addr16
pop
iret
dec
mov
pushf
push
nop
adc
jae
ret
mov
ja
dec
inc
pushf
popf
sub
cmp
fmuls
lods
jbe
dec
call
mov
jne
push
movsl
adc
out
pop
mov
mov
lock
mov
pusha
cmp
movb
movb
push
lea
jbe
bsf
cmp
pusha
adc
mov
and
ror
mov
add
dec
mov
shr
stc
add
shl
movsbl
movl
bswap
cmp
adc
mov
push
bt
movb
pushf
cmp
jmp
pushf
mov
pushf
mov
lea
push
call
rolb
xchg
add
test
mov
pop
xchg
sub
repnz
int
outsb
aad
push
fstpl
lds
js
xchg
push
outsb
dec
cmp
mov
cmp
or
sahf
and
mov
loopne
call
inc
cmp
jnp
dec
idivb
lods
lcall
push
call
cli
mov
dec
stos
lahf
pop
pop
add
hlt
hlt
mov
leave
jne
push
pop
rorl
popa
sahf
aas
scas
mov
out
test
loopne
or
xchg
cmp
pop
push
arpl
push
filds
mov
mov
fistps
rcrl
std
pop
or
out
and
out
jmp
dec
popa
popa
ds
and
xchg
aaa
pop
ret
mov
add
fcomip
mov
and
movsl
cmp
fisttps
or
dec
push
in
xchg
adcb
inc
loop
js
dec
gs
scas
mov
mov
pop
and
ficoms
mul
or
and
cmp
out
sub
insb
outsl
lret
and
loope
loop
addr16
gs
xchg
cs
xchg
adc
cmp
pusha
jmp
dec
mov
add
sti
sub
pop
stc
xor
inc
call
push
push
xchg
xchg
das
inc
lret
mov
dec
mov
push
fbld
data16
sbb
xor
ret
pop
shlb
lahf
push
mov
rcrb
jecxz
test
loope
or
jg
fdivrs
pop
push
mov
js
xchg
outsb
xor
xchg
std
arpl
xor
stc
and
test
sub
ljmp
mov
xor
xor
nop
xchg
cmpsl
aam
sub
adc
ss
mov
in
xchg
imulb
ds
movsb
push
adc
lock
push
ljmp
or
lea
jno
jp
lds
xchg
stos
push
sbb
and
mov
aad
call
mov
cmp
mov
lret
jle
scas
xchg
sbb
roll
ficoms
mov
std
add
sbb
adc
dec
ret
xchg
pop
push
mov
lods
push
mov
in
sub
jbe
cmp
add
rcrb
std
xchg
test
js
push
pop
push
push
sub
adc
or
inc
hlt
notb
adc
pop
movsl
pusha
mov
test
dec
and
xchg
cmpsb
fsubp
dec
pop
in
addb
outsl
pop
pop
in
and
or
xchg
adc
jp
rclb
pop
mov
push
lea
aas
xchg
mov
addr16
xchg
mov
orb
sahf
mov
test
push
pop
pop
fsubs
sbb
jnp
cld
adc
popa
fmulp
ret
push
divb
fsubl
scas
jmp
fsubl
jp
iret
xor
pushf
lahf
pop
cmp
hlt
sbb
hlt
mov
lds
mov
mov
popa
insl
and
inc
mov
dec
xor
mov
popa
and
xchg
sub
xorb
bound
lret
fidivrl
mov
ret
jo
and
std
xchg
les
or
mov
mov
xchg
xchg
or
xor
imul
push
inc
adc
movl
xor
jmp
fs
test
dec
idiv
mov
lds
or
add
jno
jmp
inc
pop
jbe
loope
jge
add
xor
rorl
dec
leave
imul
jecxz
cmp
scas
sahf
pop
hlt
mov
or
ljmp
inc
vcvtps2pd
push
loope
test
and
mov
mov
sarb
imul
pop
sub
in
pop
inc
cld
mov
sahf
inc
add
mov
popa
xchg
in
nop
push
aas
mov
adc
add
jmp
in
adc
push
jno
es
subl
imul
xchg
movsl
cld
in
ficomps
lods
inc
aam
xor
pop
shll
sub
por
stos
push
aas
and
jae
fisubl
ficoms
pop
in
sbbl
inc
lods
mov
sub
sub
cltd
jo
test
pusha
dec
add
sti
push
pop
xchg
xor
pusha
ss
pop
addr16
jbe
gs
and
jo
jp
inc
pop
sbb
add
cmc
inc
enter
cli
and
in
mov
pop
out
add
inc
inc
push
jae
inc
inc
imul
je
outsl
outsb
and
jno
jbe
mov
btc
shl
rol
add
lea
shr
cmc
xchg
neg
shrd
mov
add
bswap
add
call
call
xchg
lret
add
sbb
pop
lds
movsb
sub
ds
ret
dec
addr16
sti
xor
mov
hlt
lods
dec
mov
imul
in
lock
mov
mov
jbe
and
xchg
xchg
mov
hlt
gs
cmc
jl
js
jno
lret
insl
xchg
xor
adc
sarl
mov
sbb
xor
push
dec
in
cmpsl
cwtl
cmp
fimuls
push
out
cmp
stc
faddl
outsl
xchg
push
cmpsb
push
in
jno
fs
loope
jns
jae
jnp
dec
into
sub
or
cmp
cmp
lods
test
push
pop
mov
andb
mov
testl
loopne
mov
hlt
hlt
dec
mov
jbe
mov
and
jle
dec
add
sarl
cmp
sbb
or
dec
jne
repnz
leave
sub
outsl
cli
cmp
stos
fwait
pop
cmc
xchg
and
cmp
cli
imul
push
stos
or
push
pop
sahf
pop
cmp
aas
ja
arpl
int3
rcrl
sub
jnp
sbb
daa
mov
xchg
or
aam
or
and
jae
pusha
add
movb
pushl
call
pusha
cmc
pushf
cmp
pushf
lea
ja
call
mov
push
fiadds
xchg
rolb
mov
fs
pop
in
dec
jns
jnp
cmp
iret
sub
js
test
sbb
int3
cmp
popa
add
ret
or
pop
and
xor
pushf
xchg
imul
gs
mov
cs
insl
cld
lcall
hlt
pusha
jmp
inc
cmp
adc
enter
adc
push
frstor
shr
or
fstl
addl
leave
jae
lea
pop
sub
lea
bsr
shl
btc
lea
cmp
sub
cmc
call
pushf
lea
jne
neg
pushf
mov
adc
ror
pushf
sub
pusha
mov
movzbw
lea
bt
stc
sub
clc
stc
pushl
popl
mov
cmp
lea
jns
ja
rol
jne
setno
inc
sub
dec
shld
add
sbb
shl
mov
pushf
and
neg
and
mov
lea
jbe
repnz
jmp
pop
push
fidivrs
or
mov
insl
inc
pop
adc
es
pop
gs
and
sbb
lds
push
lret
mov
push
lahf
xchg
xor
fisubs
fistpll
add
imul
dec
push
push
ret
inc
push
stos
nop
fidivrl
xchg
daa
or
shrb
insb
or
cmp
lds
shr
jno
lcall
mov
xchg
les
mov
mov
dec
pop
lcall
mov
jae
test
lea
cmc
dec
pop
cmp
setae
add
xlat
in
mov
sti
cmp
ror
jns
sub
or
inc
cltd
inc
movsl
jno
jmp
sti
in
addr16
clc
hlt
xorb
jmp
push
test
mov
adc
mov
xor
sub
in
mov
int
dec
push
clc
shrb
pop
sbb
repz
push
push
icebp
mov
xchg
pop
push
shr
cmp
testb
movsb
insb
stos
mov
flds
mov
mov
rorb
ret
mov
add
mov
je
mov
lret
jp
jmp
fucom
mov
mov
mov
test
push
out
jmp
shrb
ljmp
dec
dec
aad
lea
out
imulb
out
sub
aaa
fisttpl
fdivrl
sbb
jl
aam
outsb
out
adc
xlat
add
ja
fisttpll
or
pop
ja
imul
daa
sub
rolb
mov
movsb
adc
cmc
or
sbb
fisttpl
icebp
mov
mov
xor
dec
ljmp
mov
ret
lea
jmp
xor
cld
shr
stos
lods
jp
or
stc
jae
push
les
int3
lods
dec
dec
shrl
andl
sbb
mov
inc
push
cwtl
mov
shrb
or
into
or
xchg
lret
ret
cmp
fimull
je
je
in
das
ficomps
cmp
sub
idivb
xlat
jecxz
sti
iret
inc
push
push
in
jge
fwait
jae
fstpt
add
cltd
ljmp
pop
outsl
sub
and
pusha
cmc
and
xchg
jbe
int
xor
mov
pop
enter
mov
and
or
call
pop
mov
or
and
in
adc
divl
push
popa
and
leave
inc
pop
fdivrs
sub
mov
cmpsl
scas
sahf
sbb
push
xchg
icebp
imul
das
pfcmpeq
loopne
leave
test
push
xchg
out
aad
adc
xchg
movsl
xor
xchg
jl
push
icebp
xchg
fbstp
test
daa
sbb
push
push
stos
movsb
mov
addb
fmuls
rolb
hlt
inc
std
mov
rorl
pusha
gs
lret
sbb
cld
push
cmp
rorl
subl
ljmp
shlb
cld
andl
shrl
idivl
dec
xor
mov
fwait
inc
in
xor
loope
repz
out
mov
ja
sub
inc
dec
fucomip
or
push
pushfw
outsb
bound
cli
outsl
gs
jne
out
shlb
lret
pop
mov
pusha
call
adcb
cmpb
and
mov
mov
add
or
out
push
seto
bsf
mov
clc
sar
shr
mov
movzbw
xor
shl
mov
jmp
call
jae
ror
mov
and
bsf
mov
movzbw
mov
jmp
jmp
pushf
rep
movw
movzbw
mov
pushf
lea
jmp
add
bt
pushf
cmp
jmp
mov
or
push
lock
outsl
jle
and
xor
dec
nop
and
mov
faddl
xor
shrb
mov
or
push
mov
xchg
fisubrl
mov
iret
enter
adc
push
push
into
lock
and
inc
std
ret
dec
sub
inc
into
lea
mov
mov
out
imul
lahf
ret
fmulp
mov
xor
cmp
mov
aad
jp
sbb
aad
xor
scas
fadds
add
lret
inc
enter
jmp
lret
into
in
popl
test
pushw
popfw
movb
inc
jmp
movl
call
in
scas
push
add
bound
inc
or
sarb
adc
push
push
out
enter
mov
cli
into
ljmp
movsb
jne
jno
xchg
cmp
mov
out
xchg
shrb
mov
or
jg
sub
ret
test
out
jp
and
pop
xor
jge
lods
jp
or
cmpsb
pop
sbb
mov
test
pop
popf
bound
or
js
xchg
push
inc
std
sbb
sbb
loope
jp
ret
sub
stos
fldcw
pop
cmpsb
adc
fwait
xchg
fisubl
lret
lock
lds
mov
in
xor
popl
push
dec
arpl
xor
out
dec
sti
inc
repnz
pop
in
loopne
enter
ds
jmp
insb
js
lods
rcr
push
pop
cmp
jmp
fwait
sub
nop
sbb
jle
inc
repz
xchg
jns
add
add
cmp
test
xor
mov
push
cmpsb
dec
jae
lahf
pushf
sub
add
ss
adc
pop
cmpsb
pusha
push
jae
push
push
jg
insl
pop
inc
sub
pop
add
and
inc
sbb
and
test
movsl
sti
outsl
xor
mov
loope
ret
dec
cs
imul
xchg
test
test
pop
mov
mov
js
xchg
push
lret
scas
sbb
jge
jp
aam
outsl
inc
scas
popf
mov
mov
stos
or
xorl
cmp
in
outsb
shll
xchg
mov
out
int3
pusha
pop
in
ret
inc
pop
pop
push
dec
adc
add
lret
pop
daa
bound
dec
call
inc
mov
in
popl
fldl
and
xchg
and
fldt
ficomps
pushf
xchg
scas
or
sbb
xchg
cwtl
cmp
inc
sub
mov
imul
dec
test
push
adc
loopne
adc
or
and
jp
adc
negb
sub
clc
cmpl
jecxz
mov
push
inc
dec
aaa
mov
hlt
mov
jae
inc
dec
stos
add
xor
jle
adcl
dec
jae
movsl
outsl
gs
sub
sub
cltd
jge
xor
dec
aaa
inc
push
xor
sub
fstp
lods
imul
push
or
cmpl
leave
imul
push
loopne
jb
sbb
dec
mov
dec
mov
inc
repz
xchg
dec
divb
add
outsb
in
popl
sbb
adc
pusha
call
sbb
xchg
xor
lcall
loopne
scas
je
xor
adc
xchg
mov
fcom
xchg
scas
notl
cmpl
aam
cmp
pop
popf
xlat
mov
mov
lock
movsl
cmpsl
inc
ss
ffreep
or
and
lds
fiadds
test
cmp
ss
mov
pusha
out
into
in
popl
and
add
mov
call
pop
push
in
mov
sbb
testb
dec
jmp
inc
inc
lcall
repz
inc
mov
loop
pop
mov
xor
daa
aaa
sti
gs
and
push
pop
jo
subb
or
mov
mov
lcall
mov
and
inc
mov
fwait
mov
xor
fbld
or
and
mov
pushf
call
and
out
xor
mov
cli
mov
ficomps
mov
or
mov
adc
pop
push
xor
fdivl
sbb
out
sbb
ja
and
popl
rol
call
cs
int3
mov
and
movsl
mov
sub
fimull
mov
or
dec
push
sub
xor
xchg
shrb
xchg
insb
jne
pop
dec
out
pop
addb
outsb
popa
mov
imul
push
xor
xlat
push
shlb
push
and
pusha
andb
inc
xchg
inc
jmp
pop
ret
dec
cltd
jle
fcompp
mov
pop
jg
sbb
jae
mov
or
outsb
lret
pop
adc
mov
mov
out
and
pop
out
call
mov
cmc
xchg
cmp
in
mov
sbb
sbb
cmp
sti
pop
ret
out
jnp
mov
test
js
or
and
rorl
jge
push
inc
mov
or
mov
enter
mov
popf
cmp
jp
sahf
pop
sti
inc
cmpsb
or
and
in
popl
andl
lcall
pushf
lea
ja
call
jo
mov
lods
push
popa
adc
or
jo
popa
cmc
mov
out
mov
cmp
das
mov
out
cmp
sahf
fadd
sahf
jns
inc
xchg
cmp
pop
out
aas
adc
outsb
shlb
mov
jp
js
push
or
sub
loop
mov
jbe
and
xchg
xor
icebp
push
mov
push
inc
ret
out
mov
lret
mov
sub
fistl
and
imul
jg
or
xchg
imul
add
push
mov
data16
sub
addl
faddl
or
sbb
mov
popa
lahf
pop
mov
lods
popa
pop
in
popl
cmp
pushf
push
lea
ja
clc
cmc
imul
bt
pusha
test
add
mov
pushf
lea
jmp
push
ja
pop
cmp
inc
mov
adc
insl
lock
out
ss
imul
jae
mov
out
popf
sbb
inc
mov
jle
gs
dec
sub
fldt
loop
add
rolb
and
jb
xchg
cltd
out
adc
imul
addr16
sub
std
loop
in
dec
push
mov
jl
sbb
mov
aam
xor
lahf
push
cmp
ds
test
inc
jle
fsubr
scas
bound
adc
popl
lea
je
test
call
mov
pop
pop
cmp
dec
test
int
mov
lds
dec
jne
or
mov
jb
outsl
aad
or
testl
sub
dec
mov
movsl
cmp
mov
inc
inc
call
fbld
lcall
push
ret
inc
das
mov
test
add
aaa
sti
call
or
rcrl
sub
int3
push
adc
and
ret
inc
or
rolb
xchg
or
add
mov
inc
test
add
in
popl
or
gs
mov
and
cmp
sbbb
pushf
call
add
insl
xchg
push
test
mov
shlb
dec
push
xchg
or
or
scas
dec
subb
shr
jg
push
hlt
jmp
js
fiaddl
mov
mov
push
mov
jne
dec
xchg
xor
mov
rolb
and
sti
mov
sbb
adc
insl
stos
jmp
xor
dec
ja
mov
pusha
pop
xchg
icebp
ret
push
xlat
stos
pusha
popa
pop
xchg
and
mov
shrb
pop
dec
clc
cs
or
movsb
pop
dec
xor
bound
mov
jmp
or
int3
inc
out
fists
push
negb
in
adc
daa
adc
jg
mov
inc
cld
mov
push
sahf
push
and
inc
dec
outsb
in
icebp
pushf
out
sbb
and
sbb
in
jmp
cmp
dec
cwtl
arpl
inc
ret
inc
popa
jnp
add
push
mov
rol
pop
inc
movsl
dec
pop
mov
fs
lock
mov
ret
es
pop
cs
ja
into
rcr
xchg
and
shl
aas
push
add
pusha
mov
xchg
int
mulb
mov
pop
xor
sub
inc
xchg
pop
out
orl
sbb
dec
out
sub
xor
jle
jge
pusha
lea
je
ror
rcl
movsbw
rcr
add
movzbw
sar
mov
cmc
pusha
jmp
jne
std
in
cmc
fisubrs
sbb
test
and
movsb
sub
push
je
or
scas
stos
ret
aas
fs
mov
and
dec
mov
add
movsb
jbe
mov
outsl
inc
adc
repz
or
adc
pop
adc
jmp
xchg
cltd
xor
call
inc
sub
leave
push
dec
pop
push
stos
push
cmpsb
jmp
pop
rorl
pop
xor
or
addr16
jmp
push
push
stos
or
mov
lcall
pop
clc
mov
adc
xchg
or
pop
sbb
pop
out
mov
push
mov
fiadds
in
in
jge
loope
jae
mov
scas
mov
push
fbstp
jbe
pop
out
xchg
push
ret
or
mov
or
inc
loope
daa
jb
paddb
in
sti
rol
movsl
jo
jl
aaa
mov
push
mov
jo
mov
jmp
or
pop
mov
outsb
jle
xchg
das
mov
inc
dec
cmp
mov
inc
and
push
cmpsb
dec
pop
pop
imul
and
pop
mov
ds
jns
xor
jl
jp
je
cmpl
popa
mov
adc
push
aam
mov
and
cmc
jg
clc
cli
in
arpl
inc
jg
pop
out
cli
pusha
adc
and
sbb
cmp
fisubrs
mov
adc
mov
sahf
imul
mov
mov
dec
xor
push
mov
xor
btc
jb
addr16
mov
faddl
fnstcw
scas
scas
xchg
daa
loope
pop
loope
call
adc
lock
scas
dec
in
adc
add
mov
dec
shll
push
rorb
dec
inc
xor
xor
mov
sbb
loopne
data16
sbb
and
mov
inc
lea
sbb
or
mov
mov
dec
mov
pop
flds
iret
outsl
cmp
mov
mov
or
aaa
xlat
push
aam
lods
mov
sbb
jno
movsb
retw
stc
and
add
pop
mov
jnp
icebp
rorl
shr
mov
out
jmp
movsl
pop
in
mov
inc
cmc
add
xor
adc
in
aaa
dec
xlat
pop
xor
mov
fdivrl
xchg
icebp
dec
xor
mov
das
xchg
stos
es
shlb
pop
xor
test
fs
mov
xchg
insb
ljmp
cmp
test
jmp
das
icebp
ds
aaa
mov
fsubl
mov
sbb
mov
mov
push
scas
scas
pushf
aad
dec
push
arpl
ja
dec
xor
xor
ljmp
fsubl
mov
push
pop
in
jnp
mov
push
outsb
out
pusha
das
pop
testb
dec
cwtl
bound
leave
sti
mov
sbb
dec
lret
inc
test
ljmp
imul
movsb
lods
pop
outsl
ret
dec
fs
dec
xchg
ret
pop
or
inc
test
pop
popf
push
add
aad
popa
js
and
inc
out
rcl
lahf
mov
lret
adc
lret
or
imul
shll
and
fdivrp
xlat
pop
sarb
mov
pop
jno
mov
enter
sub
inc
data16
adc
test
add
pop
sub
xor
clc
pop
mov
jo
cmpsb
push
xlat
pusha
lcall
les
jne
or
and
mov
loop
xor
xor
cmp
xor
fsubr
pop
rorb
and
cmp
testl
dec
inc
iret
int
xor
jmp
or
in
mov
cmp
xchg
daa
das
mov
fldt
rcr
pop
sub
jmp
jae
lea
inc
je
cmp
mov
jecxz
addr16
jno
subl
loope
mov
fldenv
icebp
adc
pop
je
subb
mov
adc
nop
push
stos
fwait
inc
pop
push
add
inc
idiv
cld
enter
fcoms
movsb
or
push
in
jns
jp
add
out
push
pop
inc
mov
mov
pop
mov
cld
orb
jnp
stc
scas
lods
mov
rorl
sub
pop
jbe
out
add
add
pop
stc
sti
in
mov
jae
dec
jp
fldcw
sahf
test
pusha
jae
push
xchg
pop
pop
repz
xor
xchg
adcb
fnsave
in
popf
lds
push
fsubs
jne
xorb
addr16
out
popa
cs
sbb
stos
repnz
push
lahf
cmp
fucomp
ja
pop
hlt
aam
push
jecxz
push
sub
lea
add
sti
clc
ficomps
lret
dec
mov
or
pop
in
js
jno
je
mov
inc
xor
and
scas
add
push
jmp
push
addb
cmpsb
das
pusha
and
les
scas
jns
cmp
xor
leave
mov
and
fucomi
out
add
mov
mov
scas
mov
jne
jmp
jmp
arpl
in
daa
sbb
imulb
or
psadbw
mov
int3
mov
dec
scas
sbb
or
adc
fsubr
adc
xchg
jb
das
pushf
push
xor
inc
dec
lods
leave
shl
mov
jnp
pop
push
mul
cmp
sbb
out
repz
mov
lods
mov
sti
fistpl
mov
lahf
in
inc
jo
mov
sub
sbb
mov
iret
or
cs
lea
ss
push
hlt
call
mov
fldenv
bound
in
or
repz
mov
mov
rorb
cmp
std
xchg
std
leave
mov
and
insl
leave
add
cld
jecxz
add
rcll
push
mov
jne
in
ja
mov
push
test
jns
data16
jle
xor
cwtl
pop
adc
fsubr
dec
data16
or
push
xchg
push
adc
jbe
daa
push
sbb
imul
push
loopne
or
sbb
inc
sub
arpl
lods
add
out
insb
cltd
fildll
xor
addr16
cmp
shl
scas
mov
push
ds
pop
ja
cmp
sbb
cmp
cmp
adc
sarb
mov
out
mov
pop
jmp
mov
movsl
stos
add
pop
dec
inc
or
inc
xchg
mov
xchg
icebp
shl
movsb
adc
or
movsb
inc
adc
je
push
imul
jl
fldenv
sub
and
lahf
mov
and
daa
inc
jle
stc
push
xchg
mov
adc
push
iret
pop
xchg
pop
repz
sub
stos
lea
ja
clc
pusha
pusha
imul
mov
cmc
add
pushf
mov
mov
pushf
lea
jmp
fs
fs
inc
aaa
bound
add
shrb
dec
lods
outsl
xchg
test
mov
push
loope
or
mov
dec
shlb
mov
lods
adc
jae
shlb
cs
lock
mov
in
jne
push
mov
push
adc
or
shlb
lds
test
push
loopne
incb
ds
jecxz
pop
mov
sub
daa
call
in
inc
cmp
addr16
pop
xchg
mul
pop
scas
inc
jne
mov
clc
in
or
mov
push
dec
icebp
hlt
iret
xor
loop
mov
xchg
fld
aas
mov
xorb
ja
inc
stos
lds
int3
je
lret
mov
or
pop
loopne
out
lea
sbb
xchg
mov
int
mov
hlt
imul
xchg
pop
fistpll
pop
icebp
into
clc
push
pop
outsb
lea
loopne
popf
or
push
lods
in
jne
lea
pop
pop
cld
test
push
inc
cmp
jb
aam
jl
mov
sub
rorl
pop
inc
cld
sti
xor
dec
movsb
xchg
adc
mov
pop
in
mov
pop
cld
fdivp
cmc
cmp
mov
hlt
ret
mull
loopne
clc
mov
push
push
and
and
arpl
movsb
arpl
xor
enter
ds
push
lds
out
mov
outsb
fsubrl
mov
fnstsw
hlt
filds
and
jb
in
nop
movsl
inc
xchg
xchg
dec
js
jl
xchg
inc
minps
fsts
mov
ds
sbbl
insb
or
pop
daa
ret
out
xlat
push
mov
add
popf
clc
push
mov
xchg
aaa
lods
sbb
mov
ds
in
je
mov
jae
sub
pop
loopne
add
cltd
and
pop
repnz
inc
lret
int3
std
add
stc
xchg
pusha
mov
mov
shll
pop
popa
mov
nop
repnz
add
dec
lock
mov
xchg
adc
andb
bound
jo
rcrl
pop
das
addr16
mov
push
cmpsb
xor
add
and
jp
add
sbb
es
pop
in
sbb
call
mov
mov
mov
dec
fwait
jp
in
jae
test
pushf
mov
dec
jmp
test
pusha
call
sbb
sti
clc
pop
in
addr16
pushf
dec
mov
mov
inc
jg
mov
int
js
or
xchg
xor
inc
roll
xor
enter
gs
add
dec
shrl
or
inc
ret
jns
insl
cmp
adc
out
cmp
xor
xor
sub
adc
je
jns
fadds
push
insl
popa
jns
mov
bound
add
lods
daa
fs
pop
sub
xor
xchg
cmp
cmc
sub
xor
or
int
fcoml
mov
mov
inc
daa
sbb
out
icebp
imul
pop
test
jns
push
mull
mov
jno
sub
in
jnp
fidivrs
push
das
ljmp
gs
xor
out
cmpsl
add
inc
rorl
mov
and
xor
sbb
das
xor
out
cli
xor
add
fdivl
aad
push
mov
pop
aaa
xchg
lret
pop
mov
lock
pop
push
sub
inc
icebp
loopne
mov
xor
adc
in
std
leave
xor
jnp
cmp
cmc
adc
subl
or
sbb
sub
mov
or
dec
addl
in
jb
cmc
insl
xor
lcall
jne
js
cs
adc
add
je
and
mov
jne
or
std
movsb
mov
aaa
in
sbb
test
xor
cwtl
insl
sub
xlat
adc
dec
enter
in
inc
dec
stos
add
mov
dec
xchg
loop
cs
arpl
sbb
testb
mov
test
cmc
movsb
leave
ss
dec
fnstcw
fs
loop
roll
fistpl
daa
inc
rorl
fcmove
mov
and
xchg
aam
mov
mul
call
push
and
insl
xchg
popa
mov
in
jo
pop
mov
int3
jecxz
pop
jno
ret
cmp
out
movsl
test
sbb
push
adc
push
dec
pop
cli
fucom
jmp
cmp
cmpb
orb
mov
xor
push
lods
addr16
jp
roll
das
sub
fldt
xchg
sahf
stc
lods
sbb
sbb
add
data16
sahf
cwtl
mov
pushf
insb
pop
xchg
mov
sub
aam
and
xchg
subb
mov
test
and
cli
or
sbb
in
aaa
mov
add
jno
sbb
imulb
cmc
xchg
add
mov
in
adc
negb
add
cmpsb
jae
cmp
repnz
push
movl
push
movl
push
lea
jmp
sub
call
lea
jne
jmp
mov
xor
ret
leave
sbb
ja
dec
mov
sbb
insl
ret
pop
cli
dec
pop
arpl
dec
sbb
adcb
jbe
sub
push
loope
push
pop
les
enter
call
lcall
push
cmp
and
popa
and
divb
rclb
dec
loopne
mov
inc
movsb
test
cmp
dec
pop
mov
push
addr16
xchg
mov
mov
xchg
clc
jnp
addb
sub
dec
and
and
and
call
xor
in
pusha
lods
jecxz
jne
arpl
mov
mov
fsubp
in
adc
rcr
in
cwtl
inc
sub
sub
mov
jmp
xor
sub
cmp
mov
cld
sti
push
mov
es
cmpsb
ud2
and
repnz
sub
fimull
sub
cmp
jns
inc
dec
push
test
jno
inc
lahf
cmpl
int
in
repnz
mov
stc
inc
stos
in
dec
clc
shll
jge
outsb
sysexit
mov
mov
add
pop
out
int3
mov
fcoml
lret
jae
pop
jp
repz
push
out
rclb
inc
in
mov
pop
fstpl
cltd
xor
xor
les
sbb
int3
fwait
iret
outsb
sbb
lret
in
pop
aad
iret
shrl
add
ds
ret
adc
xchg
mov
adc
cmpsb
dec
or
imul
mov
mov
scas
pusha
mov
outsb
scas
stc
mov
jmp
inc
pop
scas
cwtl
cmp
std
rorl
lret
outsl
xchg
xlat
push
push
adc
jo
xor
add
mov
dec
mov
or
scas
scas
sti
dec
sub
lret
scas
sbb
cmpsl
lea
arpl
test
jae
inc
adc
lret
sbb
push
repz
icebp
xor
lods
xchg
push
test
aaa
push
sub
push
xor
mov
xchg
mov
call
fidivl
pop
inc
inc
pop
mov
cmc
jmp
out
mov
xchg
gs
xchg
in
ficompl
adc
mov
rclb
adc
iret
xor
rolb
add
repz
bnd
xor
jbe
aas
cltd
jge
dec
imul
insb
jmp
in
adc
sar
movsl
js
or
mov
lods
int3
imulb
sub
jnp
or
loop
add
pusha
mov
adc
repz
jge
mov
inc
sbb
mov
addr16
sub
rcr
mov
mov
xor
lods
cmp
shlb
xchg
fisubrs
inc
fstpl
mov
std
pop
in
cmp
in
or
ds
inc
mov
dec
dec
dec
dec
and
cld
test
int
rcrb
iret
jl
fidivrs
sti
mov
xor
cwtl
int
or
push
frstor
and
lea
add
nop
pop
mov
and
mov
icebp
addr16
jns
dec
test
mov
aas
imul
mov
jne
fwait
push
xchg
in
repz
divl
sahf
cmp
iret
int
cmp
repnz
outsl
orl
outsb
popf
das
inc
mov
jnp
mov
sbb
mov
xchg
sbb
sbb
adcb
xchg
int3
int
jg
cs
mov
arpl
xor
mov
jbe
and
outsl
adc
decl
sub
push
testl
add
inc
not
bswap
pop
call
lea
bswap
lea
push
pushl
pusha
call
jbe
push
or
push
sub
lods
iret
mov
dec
aad
jmp
stc
in
xchg
push
outsb
push
sbb
or
sbb
es
in
mov
decb
or
daa
leave
xor
and
les
mov
adc
sub
and
adc
pop
xchg
jl
arpl
adc
rclb
mov
ds
and
mov
sub
push
adc
jmp
mov
cli
roll
xchg
cmp
push
cmpsl
xchg
in
imul
fwait
lods
scas
sbb
cld
out
xchg
std
push
xor
sbb
add
and
insl
lret
int
mov
sub
jne
xchg
mov
out
mov
mov
mov
sahf
out
add
dec
mov
or
lret
dec
out
xchg
bound
test
add
mov
clc
lret
sub
call
xor
lret
repnz
or
loop
mov
fwait
sub
mov
aaa
cmp
in
jl
adc
imul
aas
fidivl
je
xchg
loop
lods
pop
in
inc
xchg
das
adcl
jo
mov
test
enter
jmp
test
adc
pop
xor
fwait
mov
rclb
mov
add
sub
inc
gs
mov
and
pusha
lea
je
call
jmp
mov
lea
xor
lea
lods
fildll
out
jmp
icebp
push
pop
fildl
test
pusha
pop
xchg
pop
mov
jns
pop
jae
mov
xor
and
cmpsl
mov
lea
jmp
dec
adc
mov
mov
lcall
push
push
negl
fisttpl
insl
sub
clc
inc
pop
cmp
jnp
pop
shl
add
pop
or
scas
enter
sbb
leave
lea
dec
jae
leave
cmpsb
fcompl
aad
jb
xchg
jg
outsl
xor
jmp
and
mov
imulb
xchg
or
jnp
inc
mov
sti
dec
dec
leave
mov
xchg
sub
dec
aaa
out
bound
outsl
rorb
xchg
pop
test
pop
insb
adc
fwait
aas
cmp
dec
gs
xchg
xlat
adc
rclb
orb
xchg
or
and
inc
cltd
movsb
in
stos
pushf
movl
movb
pushf
lea
jmp
jg
add
and
push
jle
imul
test
enter
ret
insl
add
push
inc
idivl
xchg
sarl
push
dec
cmp
std
jecxz
lds
push
ja
loop
aaa
dec
xchg
les
fwait
push
mov
sbb
add
lds
loopne
sbb
mov
sarb
pushf
mov
fidivrl
jae
mov
adc
scas
jo
cmp
nop
mov
xchg
stc
xor
add
fs
lcall
dec
or
mov
or
adc
scas
push
pop
cli
ljmp
out
call
or
cmp
sub
xor
xchg
nop
xchg
xchg
in
repnz
xchg
sub
xchg
fimull
imul
xor
jns
rcl
xor
fwait
repz
sbb
dec
orb
inc
mov
jle
shr
lods
shrb
mov
repz
and
aam
arpl
mov
fcom
test
lea
sub
pop
movsl
ficomps
out
pop
xor
ret
in
or
int3
inc
xor
call
inc
mov
and
pop
rorl
xlat
arpl
lcall
pop
ret
cltd
cmp
ja
cmp
stos
icebp
enter
out
mov
cmp
ret
lret
ror
insb
cmp
push
dec
or
jb
jae
in
in
xchg
cmp
dec
loop
lret
dec
aad
xchg
in
sbb
loop
sub
xchg
xchg
jmp
pop
lcall
push
stc
xor
lock
test
imul
sbb
jb
stos
dec
icebp
inc
jo
mov
jns
push
lahf
sbb
andb
or
outsl
cmp
xchg
push
inc
mov
arpl
add
push
cmpsl
decb
push
aas
fstl
rclb
pop
out
call
arpl
repz
push
and
push
push
mov
ljmp
into
add
movups
imul
int3
jp
add
add
test
sub
add
xchg
cmp
sub
ja
popa
loopne
scas
adc
in
xchg
mov
loope
or
pusha
test
sub
inc
movsl
jg
or
jecxz
es
mov
cmpsl
repnz
or
dec
test
fistps
roll
test
dec
test
fistl
in
sarl
mov
leave
push
push
loope
mov
repz
pop
clc
jo
hlt
repnz
cmp
pop
or
pop
pusha
je
push
aam
jo
xchg
xor
push
pop
xchg
add
push
sbb
es
outsl
pushf
add
add
pop
cmp
mov
addr16
adc
pop
imul
mov
lret
daa
xor
jmp
jno
mov
add
imul
movsb
test
mov
ljmp
paddb
push
inc
out
jecxz
in
data16
pusha
pusha
jmp
pushf
pusha
lea
call
pusha
pusha
push
push
lea
jae
push
movw
pushf
clc
xor
jmp
pusha
lea
jne
rcr
shld
mov
clc
call
add
inc
pop
insl
insb
outsl
arpl
outsb
imul
je
outsl
outsb
and
jno
jbe
out
jo
mov
aas
negl
mov
fstp
out
aad
xchg
ss
cli
out
gs
xchg
fnstsw
std
adc
jp
lahf
ss
lds
pushf
mov
sarb
out
leave
cmp
xor
enter
dec
out
rcrl
ss
sbb
mov
jo
mov
adc
out
pmaddwd
jbe
in
out
mov
int3
scas
jp
cmp
pshufw
cmp
out
pop
inc
scas
ss
xchg
xchg
insl
xchg
inc
mov
in
stos
or
out
int3
lret
lahf
ss
jo
pshufw
ss
out
out
jno
mov
mov
pop
out
jo
mov
xchg
aaa
add
mov
scas
aam
out
repnz
mov
push
sahf
clc
out
jo
mov
mov
sbb
jns
lahf
ss
mov
pshufw
cmp
lret
imul
cmp
pop
out
jo
mov
jae
inc
out
pop
mov
scas
pop
out
orb
shll
xor
xchg
dec
scas
cmpsb
out
jno
mov
stos
out
int3
jae
ss
loope
inc
outsl
sbb
ss
mov
mov
adc
or
loope
mul
push
out
lahf
ss
sbb
es
out
outsl
or
enter
psraw
mov
outsl
sub
icebp
mov
out
aad
mov
push
int3
inc
out
lcall
shlb
out
pop
shll
push
inc
out
jo
mov
jae
mul
inc
ljmp
add
shlb
xor
out
outsl
and
push
cmp
out
repnz
jge
jnp
cmp
std
push
ss
imull
mov
mov
inc
lock
pshufw
cmp
out
jno
mov
jge
cs
inc
out
ss
jg
push
mov
adc
out
or
inc
call
adc
movsl
ss
cs
jno
mov
push
mov
stc
mov
insl
mov
inc
mov
cmp
mov
sub
ds
cld
shlb
inc
loopne
out
jo
mov
jb
outsb
out
jo
mov
push
mov
mov
std
xchg
sub
dec
into
pop
in
or
push
mov
dec
jno
adc
or
mov
pop
xor
clc
lcall
or
cmp
pop
test
lods
ss
push
cs
hlt
ret
push
add
stc
scas
xor
add
aaa
sbb
decl
jns
idivl
popf
dec
test
add
pushl
nop
fs
int3
xor
adc
dec
aaa
and
xorb
popf
sub
addr16
cmc
inc
xchg
push
ja
dec
in
int3
push
sar
rcll
and
sbb
lcall
jbe
and
add
xchg
aam
out
xor
mov
mov
sbbl
xchg
ss
bound
and
dec
jmp
hlt
popf
or
mov
pop
xchg
adc
testl
xor
scas
and
pop
pop
cmp
push
popa
cmova
pop
mov
data16
mov
mov
sub
pop
popf
ffreep
cltd
ja
jl
stos
or
cmp
cmpsl
js
pop
fdivp
jl
cmp
xor
outsb
daa
push
push
out
sbb
lods
pop
inc
pop
cmp
bound
push
stos
sub
inc
data16
imul
ljmp
mov
pop
adc
sti
ficompl
pushf
mov
lahf
inc
pop
inc
dec
xchg
sub
test
cltd
js
loopne
jnp
mov
sti
dec
std
in
push
gs
mov
inc
xchg
pop
xchg
xchg
cs
popa
xchg
mov
lods
insb
or
leave
jmp
jle
mov
jbe
xor
stc
sbb
out
mov
mov
cmpb
sbb
mov
sub
mov
cmp
or
stc
mov
cmpsb
lock
clc
cli
mov
mov
ss
leave
jns
mov
cmpsl
jo
xchg
lret
sti
sbb
shl
jge
clc
xor
inc
cmp
popf
jp
rorb
push
loope
shl
xchg
inc
pop
xlat
push
and
pop
adc
icebp
cltd
fistps
lahf
mov
rcrl
data16
mov
cmp
dec
ljmp
push
sub
sbb
jns
out
lock
bound
dec
aam
orb
shr
pusha
dec
jns
call
adc
push
add
sub
inc
aam
test
add
test
sub
mov
mov
inc
jne
jge
or
dec
pop
mov
jecxz
adc
add
push
std
in
push
fwait
stc
pop
imul
leave
arpl
sbb
adc
dec
sbb
data16
jb
fiadds
or
adc
ror
xchg
loope
je
test
rcr
jp
push
cld
adc
or
fsubl
mov
pop
and
add
mov
lahf
enter
pop
aas
jl
mov
dec
ds
scas
loope
mov
fcompl
jns
dec
fwait
inc
fdivrl
jge
in
pop
xlat
popl
adc
sahf
push
mov
mov
das
test
fs
dec
lock
cld
sub
movsl
lods
pop
push
or
inc
and
pop
xchg
mov
mov
xor
inc
cltd
or
cmp
lret
ffreep
ret
jne
lahf
sahf
mov
mov
jmp
jg
or
inc
cmp
bound
pop
cltd
add
push
stos
mov
les
sarl
jg
lret
dec
shr
pop
jecxz
mov
push
iret
sub
pop
or
add
adcb
sub
and
dec
xor
push
lcall
xchg
ss
mov
xchg
inc
cmpb
cmp
out
mov
pop
cmc
fldt
stos
imul
inc
icebp
jno
sub
ss
jb
enter
sahf
push
lahf
push
hlt
lods
aad
fisubrl
pop
pop
add
inc
mov
fs
gs
std
outsb
mov
jmp
mov
inc
outsb
pop
push
or
mov
mov
mov
sbb
pop
xlat
dec
cli
mov
movd
sub
xor
cwtl
xchg
and
mov
lock
jo
xlat
dec
cld
jb
mov
loope
mov
popf
jmp
pop
or
mov
xor
cmp
push
or
lret
out
das
push
cmp
adc
loopne
ljmp
add
repnz
ret
add
and
and
adc
inc
mov
add
and
sub
adc
mov
adc
adc
and
xor
adc
scas
and
add
and
cmp
adc
mov
mov
add
adc
insb
popf
adc
sub
and
dec
repnz
das
clc
adc
xor
and
push
repnz
cmpsb
int3
and
cmp
and
pop
repnz
dec
js
add
add
adc
repnz
dec
mov
add
adc
in
mov
and
jae
adc
fcoms
add
add
adc
and
and
mov
add
add
add
add
add
mov
add
add
add
add
add
add
push
and
xchg
repnz
in
and
jl
and
fwait
repnz
dec
loop
add
adc
mov
adc
mov
adc
fwait
outsl
and
xchg
mov
add
add
add
add
add
add
adc
test
push
sub
ljmp
sub
outsl
or
inc
ja
out
push
clc
or
adc
dec
dec
int
mov
outsl
sbb
inc
inc
or
clc
sbb
push
xchg
adc
insb
fcomp
inc
negb
mov
aaa
mov
add
xor
mov
mov
sub
fisttpll
push
push
sbb
lret
fdiv
inc
mull
pusha
aaa
inc
loope
mov
mov
jge
mov
mov
in
jg
pop
int
inc
fidivrs
xor
inc
cmp
aad
and
push
fcoms
xchg
ss
repz
dec
stos
xchg
in
pop
pop
cmp
add
inc
and
push
pushf
push
pushf
pushl
ret
sbb
loope
mov
xor
fldcw
ss
popa
mov
orl
dec
cmpsb
scas
sti
jnp
pushf
mov
cmpl
sahf
mov
push
cmc
loopne
incb
aam
adc
sub
idiv
mov
movsb
cmpsb
lods
lock
mov
mov
icebp
cmp
push
or
lods
bound
xor
adc
adc
stc
dec
mov
sbb
jl
popf
dec
push
scas
mov
xlat
sbb
movsb
xor
test
mov
adc
add
repz
mov
mov
sbb
jns
std
mov
jge
sub
mov
jae
xlat
add
in
and
adc
fnstenv
inc
fistpl
loopne
lcall
fs
sbb
lea
jne
jmp
cmp
jmp
pushl
adc
lea
push
jmp
inc
sub
sti
movl
inc
jecxz
push
je
push
sbb
pop
jge
xor
add
int3
shrb
ret
cmp
add
xchg
add
pop
sbb
frstor
arpl
fs
jl
data16
fsts
aaa
jl
and
mov
outsl
ret
push
cmp
adc
xchg
ss
cmp
outsl
cmp
sub
xchg
push
inc
test
mov
jae
fldcw
fbstp
push
out
fwait
pusha
daa
fiadds
xor
cli
jle
gs
lret
imul
leave
push
mov
pushf
dec
sub
sbb
push
or
jb
inc
mov
pop
bound
lret
lahf
jbe
mov
jmp
aad
idivb
mov
mov
sub
mov
in
cmp
stc
jp
sub
lret
sub
push
out
pop
and
sub
or
andl
jno
mov
jo
imul
jl
mul
pop
in
sti
pop
push
ret
in
cmp
dec
loop
pcmpeqd
lret
std
xchg
mov
enter
pop
push
lds
fwait
jl
lods
vpmaxsw
cltd
cmc
adc
inc
jmp
rsm
enter
push
sbb
pand
divl
aam
inc
push
adcb
icebp
insb
stos
dec
lods
jb
jae
pop
mov
mov
lea
call
push
mov
movsl
loopne
jae
jb
dec
fnstsw
xor
sub
push
es
xlat
daa
jae
xchg
mov
ficoml
inc
mov
call
arpl
cmpsb
push
fdivl
xchg
push
imul
inc
push
xchg
lds
std
dec
mov
inc
dec
mov
cmp
lret
jbe
sub
mov
ja
fdivr
mov
xchg
jl
sbb
mov
cmp
jge
inc
cmp
pop
mov
sub
movsb
pop
dec
js
je
mov
cld
jle
out
mov
outsb
cld
jecxz
out
clc
frstor
negb
movsb
mov
mov
push
icebp
cmp
inc
shrb
adc
pop
xchg
cltd
hlt
sti
sbb
ret
dec
or
addr16
mov
sbb
aas
add
pop
addr16
cmp
pop
int3
cltd
bound
sahf
iret
arpl
ret
adc
pop
push
loop
add
jge
push
xor
pop
jno
daa
lret
mov
inc
sbb
mov
lret
or
xchg
lret
add
mov
daa
or
mov
shll
ret
scas
push
fmuls
jecxz
add
sbb
push
push
adc
add
fwait
aam
sbb
mov
and
add
or
lret
pop
cmp
xchg
push
aam
xor
add
or
lock
mov
xor
repz
cmpb
inc
inc
adc
mov
and
jp
mov
sbb
movsl
ds
into
mov
mov
jl
daa
mov
inc
adc
mov
lds
or
roll
adc
add
pop
scas
jnp
cmp
jae
sbb
jp
dec
mov
dec
push
jp
mov
adc
mov
jg
jle
push
sub
icebp
adc
lds
inc
aaa
popf
add
adc
in
lahf
dec
mov
hlt
jp
push
cmpsl
rcr
xorl
adc
adc
scas
cli
or
jbe
js
mov
clc
inc
mov
sbb
push
ret
inc
jl
fisttpll
loopne
add
inc
enter
xor
jo
mov
sbb
cmp
jge
mov
int3
shr
ds
inc
xor
cmp
jle
dec
movsb
sub
push
cmpb
push
je
jmp
xchg
adc
sub
sub
ret
and
stos
ljmp
test
jmp
or
push
movsl
and
jl
out
int3
pusha
mov
ret
gs
or
adc
imul
shrb
adc
inc
lods
xor
or
test
lahf
jb
adc
bound
mov
inc
into
add
adc
loopne
add
inc
xchg
or
shr
mov
pop
std
mov
dec
xor
sbb
imul
out
jp
inc
push
push
push
roll
add
jno
mov
aas
jns
adcl
xor
add
jg
lock
ret
xor
mov
inc
push
in
pop
push
into
iret
adc
adc
or
push
cli
cmpsl
loope
mov
add
xor
dec
adcl
pusha
out
dec
adc
push
adc
jb
cmp
add
mov
and
mov
daa
loopne
mov
mov
adc
lcall
test
mov
jae
and
or
shl
enter
lock
or
addr16
sbb
ror
pusha
cmp
inc
sarl
imul
ds
inc
jmp
mov
stc
inc
idivb
cld
cmpl
mov
xor
mov
jno
stc
add
jge
nop
pop
incl
or
enter
sahf
testb
test
mov
fsub
or
and
sub
cmp
cmpl
decb
add
and
mov
add
mov
sub
xchg
lret
subb
jge
sbb
mov
arpl
jl
fiadds
enter
and
les
test
jns
mov
lock
sbb
adc
rorb
mov
and
xor
andl
pusha
sbb
lds
pop
ret
sbb
sbb
mov
lods
shlb
test
pop
ret
fs
into
shrl
or
adc
jae
dec
sub
cli
jb
notb
jp
loopne
into
add
dec
xor
and
adc
test
jp
fisubl
clc
cmp
sarl
cmp
les
xorb
xchg
push
adc
cmc
dec
out
mov
subl
loop
push
lahf
push
adc
data16
or
fnstenv
inc
bnd
add
adc
push
and
mov
popa
add
icebp
xchg
sbb
jp
and
insl
or
push
aas
inc
cmpsl
dec
inc
fdivrs
ret
dec
cli
mov
shrb
lcall
fcmovb
cltd
fwait
mov
stos
adc
popf
and
xchg
xchg
cmp
aad
out
mov
push
fadds
pop
xor
ds
pop
jp
enter
mov
lea
add
outsl
mov
and
lds
pop
xor
mov
nop
ret
data16
push
mov
cmp
ss
sbb
sub
sbb
xchg
adc
adc
mov
addr16
mov
into
mov
inc
je
in
jle
mov
cmpb
mov
or
xor
push
enter
cmpb
lds
mov
sti
movsl
ret
add
cmp
dec
loop
push
mov
nop
jecxz
jge
gs
push
daa
and
or
jp
test
add
or
test
inc
sub
movsl
icebp
cltd
mov
push
sub
loopne
ficompl
add
cmp
arpl
pop
lods
ljmp
jg
ds
sbb
ljmp
and
jmp
mov
adc
cltd
mov
mov
mov
jmp
jo
loopne
xadd
addr16
cmp
out
push
and
mov
xor
push
sbb
das
xor
adc
hlt
decb
xchg
lea
add
adcb
jecxz
mov
lods
arpl
mov
mov
fisubrl
pop
rorb
ret
loope
or
cld
or
inc
add
andb
mov
loope
and
movsb
push
inc
test
add
int
pop
es
icebp
or
movsl
scas
shll
ret
in
xchg
in
inc
rcrl
push
jmp
aas
mov
push
stos
inc
ss
test
dec
jns
mov
cltd
insb
pop
adc
arpl
dec
push
pop
mov
or
pop
dec
push
mov
jb
jle
cmc
test
hlt
and
cltd
pusha
aas
into
jmp
mov
adc
or
mov
add
sbb
cmp
mov
adc
dec
xor
mov
mov
in
ret
dec
shlb
mov
cwtl
sub
dec
cli
or
add
out
and
push
mov
and
jp
aam
add
sti
shlb
push
or
subb
mov
xchg
push
pop
mov
pop
xor
cmp
aas
xor
xchg
in
mov
lahf
add
jg
movsl
aas
xor
xchg
or
hlt
es
shlb
push
out
mov
in
movsl
mov
ds
bnd
mov
out
sbb
rcrb
xchg
and
shll
push
sub
int3
xor
call
xor
bound
loope
jmp
and
stos
leave
movsl
xchg
pusha
sub
movsl
cmc
mov
cmpsb
mov
xchg
loope
ja
mov
inc
bound
push
arpl
and
scas
stc
inc
dec
iret
je
test
xchg
pop
adc
or
stc
test
jle
sub
xor
inc
gs
pop
xchg
es
setae
inc
mov
jle
mov
insl
add
mov
and
test
aam
inc
xor
add
in
mov
adc
adc
test
add
scas
jns
sbb
fdivrl
sub
cmp
enter
dec
inc
sbb
pop
cmp
aad
stos
repnz
test
jne
push
fs
xchg
mov
push
add
inc
sbb
les
and
fidivl
add
xchg
lret
pushf
push
inc
dec
mov
sub
sbb
gs
subb
or
or
dec
aam
dec
repnz
test
sarl
out
in
push
sub
popa
xchg
jae
stos
pop
pusha
add
inc
mov
push
mov
daa
sub
and
push
lretw
dec
jae
add
mov
imulb
mov
cmp
pop
ret
in
jp
ljmp
rorl
daa
xor
xor
sbb
mov
push
pop
jg
in
cmp
xchg
cli
pop
roll
cmp
dec
test
aad
scas
cmp
sbb
sbb
sub
adc
add
jp
push
ret
lock
stos
adc
add
dec
push
es
jecxz
cmc
pop
sbb
jg
sbb
cld
ss
xchg
mov
arpl
test
les
and
cli
hlt
cltd
and
movnti
jae
shl
inc
and
xor
or
lock
rcrl
cmpb
ds
or
ret
adc
sar
into
lcall
clc
jo
add
inc
daa
jle
inc
sbb
jl
enter
adc
mov
je
inc
and
adc
sbb
hlt
fcmovnb
xchg
and
sti
adc
dec
lock
add
mov
xchg
jge
data16
mov
std
push
int3
lcall
sbb
sti
sti
out
push
pop
adc
xchg
cmpl
jmp
mov
movsb
in
inc
xchg
lods
mov
jne
push
mov
lock
js
jle
xchg
aas
jp
ret
sbb
push
xor
xor
xor
aas
jp
mov
sbb
cmp
ret
hlt
iret
sbb
bound
loopne
pusha
stos
push
push
aaa
jle
popa
jb
daa
lods
jp
xchg
or
je
jp
stos
pop
stos
and
test
repz
jp
cld
mov
mov
je
add
bound
ds
xor
decb
ror
xor
adc
loop
push
dec
add
mov
stos
xor
sbb
in
sub
cmpsl
popa
xchg
jmp
pop
mov
jp
dec
cmpsb
jne
push
adc
sub
xor
ret
mov
jge
sbb
movsb
xor
dec
nop
ffree
mov
mov
xchg
aam
pop
pop
xchg
or
push
push
and
or
or
scas
enter
or
dec
cmp
add
mov
cmp
in
mov
enter
jl
fldt
mov
pushf
mov
or
xor
inc
sbb
mov
mov
dec
leave
inc
jns
xchg
mov
push
inc
mov
repz
dec
cmp
scas
sbb
inc
ds
shlb
cmc
flds
and
or
xor
add
adc
mov
scas
mov
xor
sub
pusha
icebp
outsl
xchg
es
test
jle
cmpl
mov
jl
mov
pop
pusha
xor
mov
mov
xchg
arpl
or
imul
pushl
mov
arpl
and
clc
dec
push
mov
cmp
ljmp
push
scas
mov
and
fs
out
not
test
mov
stos
mov
or
and
or
mov
push
xchg
inc
jg
aam
pop
add
scas
mov
repnz
adc
sub
jge
pop
add
pop
daa
or
sub
pop
ds
jp
outsl
mov
ret
je
or
jae
pop
subb
lock
push
fcoms
xchg
pop
imul
cltd
outsl
fldln2
sbb
jecxz
imul
add
cld
popf
mov
or
lea
inc
psubd
mov
lea
cmc
cwtl
mov
clc
loop
mov
push
sbb
cmp
loopne
sub
mov
movsl
sbb
imul
add
adc
push
add
in
cmp
mov
stc
jo
mov
push
mov
cmpsl
aam
pop
jge
cmp
and
push
inc
adc
pop
push
int3
cmp
lods
rclb
dec
or
jg
inc
shll
mov
cltd
xchg
lahf
jb
les
add
adc
mov
sbb
cmc
loope
arpl
cwtl
sbb
xlat
push
push
inc
shll
cmp
mov
bound
loop
add
out
jne
cld
cmp
dec
addr16
dec
mov
pop
sti
lods
jbe
mov
add
sbbl
flds
dec
xlat
or
dec
fisubrs
push
ja
clc
sar
sub
cmp
sar
bsr
bswap
add
rcl
mov
xor
neg
mov
bt
repnz
pushf
pusha
pushf
lea
jne
movzbw
lea
not
push
movb
movsbw
bswap
mov
call
cs
movsl
jecxz
pusha
mov
addr16
jp
or
inc
scas
jl
push
scas
sbb
mov
fldenv
test
pop
inc
mov
leave
stc
dec
xchg
xchg
sahf
and
adc
add
xchg
xchg
out
movsb
add
dec
xchg
push
dec
push
std
xchg
jne
push
and
sub
data16
mov
push
rcrb
xor
fwait
subb
fcomps
mov
int
neg
pusha
adc
mov
lcall
mov
xchg
jo
pop
dec
aaa
xor
adc
rcl
mov
jne
cmpsb
push
lcall
mov
in
pop
popf
movsb
sbb
jbe
test
mov
fcmovbe
sti
movsl
xchg
mov
daa
push
divb
pop
les
pop
js
das
out
jle
xchg
icebp
push
incb
ret
jo
mov
imul
pop
loopne
ret
clc
xchg
adc
into
cmp
mov
inc
add
jg
cs
xor
pop
adc
lds
pop
mov
dec
xchg
js
add
sbb
xor
lds
jmp
mov
aad
sbb
lea
stc
mov
pop
mov
ja
leave
int
out
mov
xor
dec
test
bound
stos
sbb
insl
test
xlat
gs
xor
xchg
fstpt
or
cmp
jle
push
test
int3
mov
pop
adcl
rcrl
lahf
sub
xor
inc
mov
or
test
idivb
cmp
xor
cli
adc
mov
xchg
lret
mov
mov
mov
dec
mov
xchg
xor
lret
pop
test
call
adc
je
in
vpcomub
add
mov
aaa
pop
testb
pop
sbb
int3
xlat
sub
pop
adc
adc
mov
mov
incl
adc
push
mov
mov
insb
xchg
dec
data16
xchg
jecxz
mov
add
or
pop
call
sub
js
subl
push
sti
dec
imul
or
popl
cmpsb
mov
xor
inc
cltd
dec
cli
dec
roll
cmp
add
jmp
not
add
dec
aam
inc
push
or
test
js
or
or
cmp
in
pop
int3
or
loopne
popl
mov
adc
je
mov
movsb
aaa
xor
mov
in
out
test
aad
aas
add
xor
mov
cmp
lds
out
cmp
or
dec
shlb
pop
divl
jle
adc
sub
loop
xor
push
ret
xchg
pushf
shrb
mov
jmp
mov
sub
insl
mov
les
sub
mov
je
fisubl
sbb
insb
xchg
loope
pop
out
out
stos
insb
adc
cmp
aaa
mov
insb
in
or
lods
outsl
test
jo
daa
adc
loope
dec
or
xor
mov
cmpsl
mov
fsubs
sti
leave
imul
aas
xchg
out
ljmp
int3
sbb
sbb
dec
jbe
jo
outsl
jb
jne
imul
insb
imul
and
jno
jbe
and
lret
mov
int
pop
mov
jle
jae
pop
xlat
xor
test
pop
dec
test
fidivrs
pushf
pop
jmp
pop
push
mov
push
roll
pop
mov
mov
pushf
sub
std
adc
sbb
aad
sbb
in
js
pop
cmc
inc
sub
popa
inc
jb
les
insb
jns,pt
lock
and
lds
dec
mov
and
jae
or
movsl
inc
aad
push
inc
out
mov
sbb
pushf
test
jbe
call
fidivl
scas
xor
add
cmpl
jne
dec
adc
mov
insb
les
test
enter
nop
sub
jne
dec
stos
or
in
popl
pushf
dec
push
mov
pushf
pushl
lea
jmp
cmp
add
inc
shl
mov
pusha
jmp
cltd
test
inc
loope
xchg
mov
rclb
mov
fnstcw
in
jp
jecxz
lods
imul
push
adc
mov
inc
imul
xor
cmpl
lahf
std
adc
mov
shrb
jbe
bound
mov
pusha
push
jo
push
xor
lds
jmp
in
adc
js
inc
push
insl
lds
dec
mov
mov
aaa
das
out
mov
test
lret
cmpb
xor
cmpsl
mov
lea
and
aad
xor
dec
adc
jb
out
add
push
xchg
xor
inc
sub
sub
fildl
outsb
loop
nop
sub
xlat
stos
xor
adc
jns
xchg
and
and
hlt
stos
or
into
push
mov
or
mov
andb
and
in
mov
addb
mov
out
pop
mov
popf
pop
pop
ret
mov
xor
frstpm(287
push
jge
jno
pop
pop
jnp
lahf
rol
dec
cmp
mov
shlb
dec
mov
mov
dec
imul
test
xor
and
cmp
mov
pop
inc
iret
roll
or
mov
xor
sti
sub
inc
or
jmp
imul
ja
sub
add
int3
dec
in
add
popl
pop
xchg
lcall
inc
cwtl
adc
pushf
jg
xchg
cmc
ljmp
xor
or
mov
movsl
mov
cli
nop
fwait
or
or
xchg
jecxz
sub
adc
inc
hlt
subb
cmp
xor
xor
sahf
imul
jl
xchg
mov
push
iret
mov
aas
std
lahf
test
ljmp
add
shrl
push
and
test
imul
leave
stc
inc
sti
add
flds
pop
loop
add
lcall
mov
pop
sub
rcr
mov
jl
xor
and
push
mov
in
popl
and
out
iret
dec
inc
pop
adc
ret
pushf
sbb
jo
pop
repnz
repnz
inc
dec
sub
mov
inc
loopne
mov
icebp
andb
jne
cmpsl
das
mov
gs
cmc
clc
push
xor
icebp
testl
in
pop
mov
sbb
jg
jg
lock
inc
mov
mov
ss
mov
rol
xchg
cmp
clc
mov
packuswb
sbb
add
add
mov
les
xchg
adc
adc
stos
add
ljmp
mov
inc
leave
lea
cmc
mov
dec
mov
add
addr16
and
sub
in
popl
into
add
lcall
loopne
filds
shlb
mov
cmc
repnz
ja
push
pushf
push
lea
jne
pusha
cwtl
mov
setl
movb
call
xor
lea
int3
xchg
sbb
add
cmp
gs
jo
fdivl
pop
pop
add
jbe
shl
test
push
fidivl
inc
pop
cmpsl
iret
sarb
out
repz
sub
pushf
test
sbb
aam
daa
and
ja
sub
push
push
or
aaa
lret
xor
cmpsb
je
cmp
loope
in
cmc
out
jecxz
xorb
push
in
sub
cs
jmp
test
cmpsb
pop
aad
lods
stos
imul
lahf
xchg
ss
in
inc
imul
pop
in
push
or
push
dec
pop
pop
jbe
pop
icebp
cmovne
stc
fcmovnu
ret
cmp
mov
addr16
addr16
popl
popa
sub
jbe
sbbb
sahf
mov
scas
aaa
xor
aas
shlb
pminub
es
inc
pop
xchg
push
stos
pop
fiadds
add
cwtl
popf
inc
push
sub
dec
roll
push
loopne
popl
xor
mov
inc
outsb
jb
fnsave
sbb
xchg
push
test
sub
mov
mov
bound
adc
imul
mov
inc
xchg
mov
lods
pop
cmp
aam
mov
inc
dec
mov
out
stos
shll
xor
int3
sbbb
dec
xchg
add
in
and
shrb
and
imul
loope
lahf
icebp
inc
cld
dec
stos
pop
in
dec
call
shlb
into
aam
dec
mov
inc
repnz
xchg
sub
iret
and
jns
fadds
jbe
or
aas
in
push
movsl
mov
cwtl
loop
arpl
push
inc
jp
adc
xchg
aad
mov
stc
fdiv
lods
loopne
xor
rcrb
arpl
fdivrs
lea
adc
dec
shll
mov
stos
out
movsl
fildll
dec
mov
cmp
cmp
fcompl
or
add
xchg
mov
lods
or
es
loope
movsl
pop
push
mov
int
neg
pop
or
dec
sbb
mov
fs
in
fnstsw
test
lods
fnsave
mov
or
sbb
lcall
dec
mov
les
push
xchg
rcrl
xor
fs
sbb
pop
add
fcmovnbe
lods
push
js
jno
xchg
mov
cli
roll
inc
nop
fiaddl
nop
sbb
lds
rclb
sub
jecxz
js
repnz
mov
xchg
mov
dec
idivb
lahf
push
pop
xor
lahf
negb
sub
jp
and
movsb
inc
add
in
lret
sbb
shll
sbb
inc
dec
in
into
pushf
leave
insl
and
adc
cmp
and
mov
and
lods
cmp
fnsave
fsts
js
sub
pop
fildll
popa
mov
addr16
jp
or
jnp
jne
mov
fisubs
stc
out
int3
es
sub
mov
popa
mov
push
je
sbb
sub
adc
mov
dec
mov
inc
lods
mov
adc
insb
ror
test
sbb
mov
mov
xchg
das
arpl
dec
fildl
jmp
fs
mov
dec
ss
adc
mov
les
sub
push
std
into
ret
pushf
aad
mov
fcmovb
nop
xchg
jbe
mov
ja
loop
push
or
pop
jbe
popf
fwait
dec
lcall
outsb
mov
fistpll
cmp
pusha
scas
leave
pop
pop
bound
pop
addr16
push
fiaddl
sbb
ret
cli
pop
adc
jge
cmp
ja
adc
jmp
lea
xlat
lret
roll
push
js
sarl
or
jmp
push
insb
lahf
inc
mov
jp
sub
btr
mov
js
in
pop
lock
mov
arpl
pcmpeqw
inc
sahf
jne
mov
jne
adc
daa
mov
leave
pop
insl
dec
imul
lahf
ja
mov
stos
cmp
add
jmp
mov
int3
repnz
daa
cwtl
pushl
cmp
sub
xchg
int
jmp
mov
test
push
sub
in
sbb
push
jmp
int3
inc
and
in
adc
ja
iret
mov
ja
lods
inc
or
xlat
mov
sbb
loop
push
in
fisubrl
jb
jp
ficoml
rolb
xor
bound
fimuls
scas
push
insl
inc
or
push
nop
das
xchg
add
mov
push
pop
fdivrp
adc
loopne
or
mov
xlat
inc
imul
fstps
mov
sbb
adc
mov
dec
jb
dec
inc
mov
in
pushf
xor
cmp
fwait
sub
xor
push
insb
lret
shrl
stos
orl
int3
stos
mov
scas
lock
mov
imul
cmp
pop
leave
loope
sbb
adc
mov
arpl
clc
xor
or
adc
clc
scas
dec
jno
cmp
clc
cmpb
int3
push
pop
sahf
and
push
jb
jl
fdivr
in
scas
movsl
add
xchg
bound
cmpsb
pushf
jg
mov
mov
mov
jle
lods
jmp
xor
add
sbb
ret
ficoml
test
jl
repz
imul
or
dec
in
pop
addr16
xor
fnstcw
pop
mov
sbbb
les
cltd
idivl
aad
xchg
inc
fsts
jecxz
and
pop
cmp
mov
movb
xor
mov
dec
incb
and
sbb
aas
stos
cmp
dec
xor
cmpb
insb
jnp
mov
loop
sub
fdivl
mov
test
test
or
insl
push
mov
mov
lret
inc
gs
add
lods
mov
inc
sti
xchg
outsb
loopne
sbb
mov
and
adc
mov
cmpsb
call
insb
ss
sbb
fmuls
push
push
popf
nop
jne
ror
mov
mov
mov
sub
jb
lods
je,pn
fnstsw
bound
and
or
push
pop
inc
leave
sbb
pop
cli
mov
stos
lds
inc
sub
shl
das
rol
rclb
xor
or
sbb
adc
cmpsl
adc
and
mov
or
jbe
cmc
in
daa
mov
fs
push
popf
pusha
pop
lcall
dec
icebp
aam
lea
push
or
push
pop
xchg
sbb
or
lahf
popf
dec
imulb
cmp
mov
hlt
repnz
mov
addr16
mov
mov
pop
sub
inc
insl
mov
jecxz
push
mov
xor
insb
or
rclb
xchg
dec
sbb
ds
jo
jmp
push
popa
sbb
nop
add
icebp
cmp
decb
ret
sub
lret
int
mov
mov
jnp
pop
jp
mov
pushl
mov
jb
outsl
dec
adc
ret
dec
push
push
push
mov
mulb
inc
or
inc
fistpll
ljmp
push
icebp
inc
and
ret
subps
push
jns
cltd
cs
cmp
popa
cmpsl
pushf
push
sbb
in
pop
adc
jo
rolb
repz
dec
mov
mov
and
lret
pushf
dec
sbb
rcll
inc
stos
mov
pusha
sbb
push
jp
loop
xor
ja
sbb
outsb
cld
xor
scas
movsb
push
inc
stos
in
dec
push
test
push
imul
enter
lahf
cmp
lret
and
int3
jae
cmp
jnp
pop
js
shrb
lods
or
xor
popa
pop
cmpl
andl
in
jnp
mov
mov
clc
lcall
sub
push
inc
ret
stc
dec
shl
jg
push
cmp
xchg
cltd
pop
daa
sub
cmpsb
jmp
dec
pop
into
xlat
mov
stc
fldcw
cmp
insl
lods
mov
mov
mov
xor
aad
jmp
in
xor
push
out
mov
je
adc
xor
push
lret
cmc
repnz
ja
arpl
ffree
pushf
adc
js
or
sub
loope
stos
pusha
fsubp
clc
jmp
mov
das
ffreep
shll
test
mov
pop
ljmp
insb
mov
pop
out
and
dec
lahf
inc
mov
shrl
rolb
clc
repnz
mov
jle
jbe
or
inc
xor
xlat
mov
int
sbb
in
imul
cmc
daa
sbb
inc
mov
pop
jmp
negb
stc
fsubr
scas
out
xchg
push
cmpl
jmp
test
jb
shl
sub
bound
xchg
jae
xchg
sbbb
push
mov
popa
repz
insl
inc
jle
insl
cmpb
adc
mov
mov
aaa
cmp
xor
mov
push
mov
ret
pop
in
mov
and
add
sbb
jnp
xor
jb
lret
out
push
hlt
lahf
shl
dec
add
jmp
or
sub
push
mov
adc
stos
test
lfs
shlb
dec
pop
pop
xlat
jne
stc
test
push
mov
jge
test
arpl
aam
addr16
pop
push
leave
jb
rol
push
pop
int3
jb
ljmp
faddl
push
adc
add
mov
ret
cmp
enter
lock
hlt
or
repnz
fiadds
daa
jge
jl
int3
mov
or
and
inc
sti
and
aam
sub
rcr
arpl
test
cmp
lds
pop
subb
shll
push
fadd
cltd
test
push
mov
lcall
incl
jbe
shlb
out
xchg
push
out
xor
and
cli
xor
cld
push
es
cmc
xor
cltd
cmpsb
xor
mov
in
xor
and
fwait
aas
jo
xchg
ss
aaa
xchg
lret
movsl
mov
adc
inc
mov
leave
movsb
jae
sbb
lods
or
cmp
imul
iret
movsl
push
nop
insl
xor
aam
outsb
stc
mov
jno
lret
cmc
xlat
sub
sti
jb
jae
mov
mov
mov
dec
addr16
sbb
mov
push
cmc
mov
daa
ror
inc
jno
or
andb
sub
mov
xlat
mov
addr16
or
out
pushf
out
or
ja
push
push
dec
shll
dec
cmc
or
sbb
andl
push
dec
adc
dec
inc
aas
or
xlat
push
icebp
adc
xchg
jle
js
aad
pop
ljmp
inc
push
add
cmc
and
dec
push
push
sub
je
mov
data16
sub
fildl
cmp
clc
scas
hlt
stc
dec
stos
inc
arpl
sub
jp
stc
jge
stc
shrb
movsb
inc
pop
dec
inc
cmpsb
popf
inc
aam
aam
sbb
test
dec
outsl
mov
popa
enter
push
pushf
in
jns
lock
in
or
mov
sub
popf
xchg
shll
pusha
push
test
dec
ja
clc
test
aam
dec
mov
stc
or
cli
dec
sub
ja
dec
mov
loop
aad
jge
dec
add
iret
imull
ss
int
cli
dec
nop
bound
sub
cmp
js
xor
cmp
imul
mov
in
pop
pop
out
mov
outsb
dec
inc
push
sub
andl
sbb
pop
xchg
fistl
jne
pop
pop
ret
lods
xor
mov
jle
mov
fsubs
adc
call
mov
int
cmp
mov
pusha
test
xlat
lea
mov
dec
cmpb
push
leave
xor
pop
jle
notb
hlt
and
lds
out
sysenter
jne
js
add
push
lock
pop
das
and
xchg
push
cmc
cmc
iret
std
test
jne
dec
lods
cs
mov
jae
fdivl
cmp
fninit
in
xor
xor
insb
sti
fwait
iret
push
mov
aad
or
xchg
dec
outsb
mov
mov
cmp
dec
cmp
cmp
fildl
add
test
sub
sub
pop
push
pop
je
cmc
mov
prefetchwt1
lods
xchg
scas
das
jnp
nop
sbb
mov
push
std
jb
aam
out
pop
inc
pusha
mov
loope
jo
mov
or
lret
dec
xchg
mov
sub
mov
test
sub
loopne
add
sub
add
cmpsl
mov
xchg
pop
repz
dec
fscale
push
int
push
xchg
in
lea
push
or
jo
xor
xor
fsub
ret
out
jp
daa
pop
aaa
in
push
pop
outsb
mov
mov
push
pop
mov
pusha
lret
shlb
mov
js
aad
fsubl
jmp
lock
es
fwait
push
scas
aam
and
jb
ljmp
loopne
repnz
fists
clc
pop
mov
or
es
add
fmul
movsl
mov
movsb
adc
ret
cmc
sub
insb
mov
mov
sub
stos
mov
push
jne
ret
push
test
aas
ficoml
aaa
sub
cmp
pop
lods
sti
mov
xchg
mov
sbbb
push
outsl
mov
std
lds
loop
cmp
pop
or
outsl
adc
pshufw
leave
adc
fcoml
pop
or
fsubr
pop
ret
xchg
xchg
sub
xor
into
pop
lret
inc
lea
cmp
je
mov
or
cmp
int
pushf
mov
sbb
mov
sbb
xor
repz
lcall
pop
jmp
cmpb
fildll
adc
cmp
push
pop
scas
fiadds
out
je
inc
sarb
mov
je
fwait
push
inc
sub
jae
xor
push
lock
call
pushf
aaa
test
mov
les
push
pop
inc
mov
lret
adc
pop
stos
mov
cld
enter
mov
into
pop
sti
out
out
push
mov
das
add
mov
les
mov
jle
and
into
cltd
cmp
out
adc
and
shlb
pushf
push
insl
or
cld
testb
sahf
fwait
dec
ss
test
sbb
push
and
cmp
dec
cmp
ficoms
xchg
lahf
jp
aam
cmpsb
and
repz
fldenv
out
mov
mov
sysenter
xchg
push
aad
sbb
dec
mov
out
cmp
push
push
cs
movsb
jl
xchg
mov
and
mov
cli
mov
pop
dec
scas
mov
jle
jae
mov
nop
stos
dec
push
setg
pop
lea
and
and
and
xor
jo
loop
std
aam
or
icebp
aad
and
jne
aam
data16
stos
or
mov
clc
sahf
adc
std
sti
sbb
cmp
jle
loop
iret
shll
nop
cmpsb
mov
cmp
dec
sarb
jo
orl
shl
cli
sbb
gs
in
loope
int3
enter
test
rcll
testb
push
push
lods
cmp
cmpsb
pop
jl
xchg
sub
scas
lea
out
mov
inc
dec
sti
divl
push
mov
insl
jae
std
pop
and
outsl
xchg
mov
dec
aam
jae
cmpsl
lock
inc
pop
loope
lock
mov
scas
imul
sub
decl
bound
mov
or
lds
xchg
add
fistps
sbb
fcmovnu
cmp
pop
lahf
sub
xchg
mov
pop
fwait
aas
lea
shr
jle
clc
mov
add
cwtl
pop
xchg
dec
psubsb
jb
sti
xrelease
add
xor
in
nopl
lds
call
loope
addr16
push
jne
rol
push
dec
mov
sub
cltd
mov
outsb
pop
mov
sub
cmpl
ret
lea
sub
lods
inc
dec
ja
leave
lods
jmp
dec
push
out
je
xchg
sub
or
je
in
pand
and
or
xchg
dec
cmpsl
mov
sahf
test
inc
and
sub
or
jle
mov
mov
jne
lret
xchg
xor
push
ljmp
nop
inc
sti
jb
scas
dec
aas
bound
push
imul
add
das
or
xlat
getsec
mov
adc
add
mov
sub
test
daa
jl
jbe
xor
std
dec
out
pop
repnz
test
cld
fmull
aas
stc
imul
sbb
fbld
push
xchg
pop
sub
sub
jno
gs
cmp
push
ss
sub
pusha
fists
xor
stc
cmp
xchg
iret
popf
add
je
xchg
push
pop
aaa
xor
push
or
sbb
dec
cmc
inc
inc
stos
add
into
js
jmp
fsubs
mov
xchg
inc
pop
andb
dec
sbb
hlt
fwait
sbb
or
mulb
jle
mov
ss
out
cltd
ljmp
adc
mull
pusha
pop
push
cld
add
push
pop
pop
ret
dec
cmc
inc
jno
lahf
push
jno
cmpb
pop
stos
dec
cmc
sub
in
mov
or
push
mov
je
movsl
mov
lret
or
nop
sub
pop
cmp
jae
xor
out
jne
and
xor
xchg
push
add
and
fisttpll
add
fcompl
lods
imul
fiaddl
and
lods
rcl
gs
mov
cmp
xor
or
pop
aas
xchg
push
clc
cs
icebp
adc
mov
adc
inc
data16
mov
outsl
popa
add
lock
push
adc
out
sbb
xchg
addb
lahf
bound
iret
sbbb
jne
jle
cwtl
jo
dec
and
pop
std
std
jo
out
mov
enter
out
mov
shlb
ds
mov
mov
jl
lea
mov
ja
mulb
jae
xor
cmp
push
sbb
test
lcall
add
outsl
daa
gs
jp
scas
repz
jae
rcll
jnp
jne
arpl
xchg
mov
stos
xchg
scas
and
test
or
push
rcll
inc
mov
daa
push
call
xchg
leave
sbbb
nop
mov
xor
inc
jb
push
call
pop
mov
add
cmp
insl
or
std
out
loope
bound
ret
or
es
fwait
jg
pop
dec
dec
pop
hlt
push
gs
es
inc
mov
mov
mov
mov
mov
xor
std
insb
mov
add
negb
jbe
and
cmp
subl
ds
xchg
int3
push
stos
ret
xchg
in
xor
cmc
ret
out
push
and
cmp
das
rcl
add
xlat
movsb
sbb
cwtl
movl
enter
pushf
xchg
sbb
stos
xchg
stos
fstl
mov
cmpsb
mov
jnp
cmp
scas
mov
xor
mov
stc
insl
sbb
int3
jl
insl
cwtl
iret
pop
cmp
sbb
sub
push
leave
out
add
mov
mov
or
mov
movsb
stos
jnp
add
sub
shlb
sti
mov
cmp
hlt
inc
lods
out
testb
js
add
or
jl
sahf
adc
sahf
cmp
hlt
insb
dec
lds
dec
inc
add
or
mov
aad
mov
sub
aas
ret
repz
leave
xchg
movsb
dec
es
mov
xlat
mov
cmpsl
add
jp
pop
jb
in
xchg
add
leave
add
and
mov
ror
push
mov
sub
aam
fcmovnbe
sub
jge
stc
or
call
mov
pop
fs
in
aaa
dec
lea
xchg
das
repz
sbb
shll
mov
lret
sub
mov
lret
sahf
sahf
ret
xchg
xacquire
imul
popa
hlt
aam
sub
and
cmpsl
inc
push
popf
xlat
cmp
ljmp
test
out
mov
hlt
loop
cmpsl
stos
movsl
push
sub
xchg
pop
and
ljmp
inc
sbb
into
jle
addr16
out
pop
inc
sti
mov
mov
mov
jae
dec
jp
add
sbb
mov
frstor
hlt
movsl
enter
push
iret
jae
xor
cmp
mov
shrb
dec
push
sub
sbb
sbb
xchg
add
ret
cmp
repnz
lock
movsb
lds
mov
decl
fldcw
pop
mov
inc
cmc
out
mov
or
in
sarl
test
jmp
movsb
ss
mov
idivb
jne
rcr
hlt
adc
xor
mov
mov
dec
fdivrl
out
addr16
js
in
push
xchg
lock
add
es
adc
lahf
dec
pusha
jbe
in
and
dec
dec
mov
push
repnz
sbb
adc
pop
mov
andl
ss
cmpb
into
sub
jo
push
mov
adc
les
xchg
or
test
gs
ljmp
adc
fdivl
fidivrs
add
mov
cli
repz
and
jle
fwait
aas
stc
decb
adc
bound
jmp
test
mov
into
dec
fisubs
hlt
scas
fst
ljmp
push
xchg
fldl
lcall
lea
jle
movsb
fidivrl
adc
aam
rorb
hlt
subl
hlt
scas
mov
or
mov
xchg
mov
jb
mov
out
mov
movsl
stos
shrl
movsl
and
push
xchg
rol
mov
cmp
xchg
adc
popl
pop
and
ret
popa
push
jg
xchg
fs
cmpsb
lret
jne
mov
jbe
rorl
testl
cltd
mov
jecxz
repz
inc
dec
stc
dec
xchg
adc
andb
fwait
scas
es
sub
ficoms
inc
addl
fildl
jo
in
mov
sbb
movsl
stos
lret
pop
xor
mov
push
imul
inc
les
cmp
push
mulb
pop
or
dec
rorb
and
jle
xchg
rcll
test
push
pop
jae
cwtl
and
lea
mov
rcl
lahf
pusha
or
dec
mov
jne
push
hlt
cld
jbe
vcvttss2si
mov
push
loopne
cmpsb
dec
push
in
cmpsb
xchg
mov
push
jl
dec
dec
adc
gs
xor
cld
test
xchg
loopne
adc
mov
int
movsb
outsb
fs
fnsave
pop
xchg
jae
je
dec
push
hlt
cmp
fsubrl
rorl
andb
out
cmp
aad
sub
push
xor
fstpt
mov
mov
punpckhbw
cld
xchg
ss
cld
inc
xchg
ja
dec
mulb
enter
outsl
or
ljmp
pop
nop
cmp
movsl
sahf
popf
add
mov
add
in
xchg
test
cltd
push
xchg
xor
push
aas
shll
gs
fwait
push
stos
in
mov
xor
pop
xchg
sub
sub
cmp
mov
fistpll
testb
or
cld
mov
adc
jo
idiv
jne
les
orb
imul
lock
or
out
cmp
lret
aas
adc
push
test
lock
pop
psllq
or
push
pop
cld
jnp
xchg
xchg
xchg
add
mov
movsb
add
or
jb
xchg
cmp
les
int
mov
xabort
aaa
adc
out
in
dec
mov
xor
pop
int
popa
icebp
mov
xchg
and
xor
popf
cmp
adc
ret
inc
loop
mov
add
jne
std
clc
shrb
jecxz
cmc
push
pop
jae
iret
lock
test
xchg
daa
pop
pop
mov
in
mov
inc
pop
bound
sub
jecxz
xchg
rcrl
cmp
adc
popf
cmp
and
xor
iret
jo
mov
mov
adc
fistpll
test
jmp
in
ret
jnp
adc
xor
pop
pop
test
pushf
cmpsb
rcll
int3
mov
ds
or
pop
cwtl
cmp
je
enter
inc
popf
fdiv
mov
outsb
or
call
out
xchg
pop
out
std
jb
lods
loop
push
lock
test
xchg
mov
mov
loopne
jne
and
pop
stc
and
pop
insb
cld
cmp
rol
and
cmp
push
xlat
xor
inc
lods
cmpsl
sub
dec
imul
jno
pop
negl
cs
fadds
cmp
dec
add
into
inc
mov
pop
movsb
aas
dec
push
mov
mov
jns
mov
ljmp
jo
xchg
shll
mov
imul
hlt
mov
cmc
lds
push
aad
test
or
or
test
out
cmp
and
mov
xchg
mov
idivl
dec
ficompl
push
xor
push
push
shrb
ljmp
repnz
cmc
pop
cmp
outsl
call
leave
jno
sbbl
lods
int
dec
adc
ja
andb
jmp
mov
dec
or
lahf
ds
xchg
iret
movsl
mov
push
sub
xor
ret
adc
push
in
in
and
aam
sub
cmc
pushl
popl
call
iret
mov
inc
mov
lods
das
cli
or
push
jge
sahf
aam
jne
mov
arpl
mov
jle
xorl
xchg
jbe
mov
xor
or
xchg
cltd
pop
test
dec
pop
mov
rorb
imul
fcomps
xchg
jne
inc
inc
pop
je
scas
or
push
pusha
mov
fidivrl
insb
jae
pop
jl
pop
aas
sahf
push
aam
or
ljmp
inc
scas
sbb
pop
jne
jns
dec
es
mov
add
repz
imul
insl
dec
in
mov
adc
adc
inc
es
enter
test
xor
iret
jl
add
or
bound
and
and
dec
cmc
push
sbb
popa
sub
dec
rcrl
adc
xchg
int
sub
pop
out
jge
sub
jae
loop
sub
addps
jno
pusha
dec
or
cmp
jg
sti
scas
mov
loopne
jl
push
jmp
adc
mov
gs
popf
jge
repnz
sub
ret
mov
sub
dec
xchg
sbb
inc
stos
jno
int
out
cmp
mov
stos
and
ret
or
jbe
fstpt
icebp
test
xor
popf
jae
stos
aaa
fnsave
pop
rol
mov
mov
pop
push
push
lahf
dec
inc
push
push
or
movsb
jle
push
lock
shrb
sbb
or
pop
xlat
pop
clc
sbb
pop
cli
in
and
rclb
movl
pusha
movl
movw
pusha
lea
jmp
add
pusha
pusha
mov
lea
jmp
push
jmp
adc
jne
daa
and
mov
ret
jb
or
cmp
add
mov
bound
dec
hlt
inc
sub
out
lock
mov
in
cmpb
lods
sbb
jnp
fidivl
or
popf
subl
xor
push
cmp
cmpb
and
sbb
jo
out
mov
hlt
clc
hlt
mov
shrb
mov
pop
sbb
xchg
popl
sbb
adc
scas
loop
mov
mov
sbb
clc
clc
int3
jl
cld
pop
add
mov
fnstenv
jae
fistpll
inc
jp
jne
es
dec
adc
into
sbb
ja
cmp
cmp
jge
aaa
sub
cld
mov
xor
mov
mov
add
js
push
xlat
or
mov
jnp
test
xor
daa
jp
cmp
or
insb
sbb
mov
out
imul
popaw
fnstcw
xchg
xor
sub
sub
ds
and
adc
fcmovnb
aaa
adc
cmp
cmp
inc
adc
les
xor
outsb
iret
loop
jae
arpl
fsubl
test
jno
data16
ljmp
sub
imul
test
stos
or
loopne
loope
and
in
movsl
adc
fcmovu
and
xchg
xorb
mov
sub
insb
notb
sub
mov
shrb
in
outsl
push
in
mov
stc
daa
xchg
loopne
cmpsb
adc
fs
cmp
in
and
cld
and
push
and
fs
enter
add
inc
jae
ja
in
adc
daa
push
loopne
mov
stos
mov
icebp
enter
push
mov
and
and
int3
jo
push
lock
cmp
test
sub
mov
fnstcw
dec
test
rcll
or
pop
and
jl
divb
mov
call
pop
rcl
std
sbb
ss
xor
out
and
fmull
pop
push
xchg
lret
into
je
xor
fimuls
ljmp
cltd
int3
stc
dec
or
sub
aaa
sbb
mov
dec
mov
ljmp
pop
cwtl
push
mov
pop
in
and
shlb
adc
dec
rcl
ror
mov
or
dec
shl
push
add
neg
sub
je
mov
pushf
cmp
test
pushl
pushf
call
not
movb
call
fs
push
mov
pop
adc
mov
out
cmpl
mov
cmp
hlt
insb
scas
nop
mov
jae
jl
lcall
fbld
adcb
out
out
andb
jp
dec
aad
sahf
inc
das
lcall
dec
jge
xchg
sub
int3
mov
push
jg
xchg
popf
mov
cmp
andl
pushf
in
pop
lods
mov
xchg
adc
mov
xor
icebp
dec
test
hlt
es
lahf
roll
stos
mov
push
dec
gs
inc
in
sarl
jecxz
mov
in
pop
xchg
mov
sub
lret
push
test
test
into
dec
repnz
jg
jae
push
inc
insb
aaa
jbe
cmp
jecxz
or
popa
xchg
jecxz
xor
arpl
lahf
movsl
orb
or
popf
pop
dec
push
out
push
test
push
bound
push
fidivs
icebp
cmp
pop
xlat
mov
pop
dec
je
test
shl
mov
mov
xor
push
cmp
inc
movsb
push
xor
sub
jmp
adc
mov
sub
jne
ljmp
rcrb
lcall
fldln2
push
sbb
mov
and
fstl
jmp
movl
fisubs
mov
jbe
lahf
pop
adc
xor
xchg
ja
repnz
sub
cld
iret
stc
sbb
ret
outsl
mov
mov
xchg
jo
mov
negl
xchg
ljmp
lcall
fldl
or
lret
cmovb
mov
outsl
mov
mov
ret
js
sub
adc
ljmp
faddp
pushf
aad
pop
and
push
mov
mov
lcall
sub
pop
and
jne
push
jo
and
fs
sbb
xor
pushf
lea
jne
movsbw
movzbl
call
xor
xchg
nop
mov
sbb
cmp
js
jb
in
rorl
cmp
push
push
jg
stos
pushf
add
mov
mov
and
pop
mov
data16
cmc
adcb
jne
lods
cmp
insl
mov
hlt
or
add
mov
add
faddp
std
hlt
cmp
mov
mov
iret
inc
popa
cmp
gs
sub
cwtl
roll
mov
nop
cs
jae
ja
dec
jle
jge
jns
insl
add
adc
lods
lds
adc
push
xchg
pop
test
sbb
adc
jb
pop
add
jns
inc
cmp
out
into
cld
fs
dec
call
mov
data16
and
cmp
clc
inc
or
jnp
pop
adc
mov
rcll
sbb
adc
das
adc
lods
test
mov
push
xchg
sub
mov
push
call
fisttpl
add
enter
loope
jmp
jmp
xor
jno
imul
insb
in
sub
jns
divl
in
mov
test
pop
out
int3
xchg
sbb
shll
or
cmpsb
xor
sub
arpl
fadd
jl
mov
mov
leave
mov
bound
cli
inc
lahf
scas
pop
jge
cmp
pusha
adc
cwtl
mov
call
scas
stc
insl
or
jle
and
data16
insb
fistpll
mov
mov
push
gs
and
andl
sar
scas
hlt
mov
fwait
insl
dec
adc
xor
mov
js
xchg
repnz
cmp
jno
ds
cmp
es
loopne
sbb
loop
incb
or
ret
xchg
iret
sbb
movsb
push
in
sbb
cmp
add
ds
fs
fldt
jmp
cmpsb
cmp
dec
test
mov
cmp
adc
ret
jno
xor
negb
adc
int
out
xchg
arpl
sbb
ret
call
movsl
xor
or
mov
sahf
mov
jmp
insb
mov
sbb
dec
push
jmp
movb
arpl
lock
test
rolb
das
nop
int3
dec
or
aad
sub
shll
iret
imul
sub
add
add
jp
jno
cmp
enter
mov
in
in
dec
jecxz
or
inc
cmpsl
sahf
sbb
enter
mov
daa
movsl
adc
pop
xor
leave
movsl
pop
and
push
push
pop
lock
add
sbb
xchg
leave
std
dec
popl
cmp
mulb
daa
aam
sbb
imul
popa
xorb
sbb
aaa
dec
ljmp
push
js
int
imul
cmpsb
push
and
call
mov
pop
or
lret
popa
and
cmp
and
int3
and
shlb
adc
pop
fidivrs
into
rorb
jmp
clc
pop
sti
rcrb
mov
out
fcomps
cmp
insb
add
xchg
cmc
sbb
and
loopne
popf
fs
in
sbb
sub
call
into
inc
sarl
jnp
and
adc
push
loope
in
cmp
sar
or
stc
xchg
xchg
cs
sahf
and
mov
ret
insb
out
lret
mov
xchg
scas
add
mov
int
leave
and
sbbl
add
dec
mov
sbb
test
movsb
aaa
xchg
sub
push
test
repnz
popf
push
mov
in
sbb
addr16
mov
int
icebp
mov
ss
jbe
lret
dec
push
nop
xchg
adc
pop
stc
fisubl
sub
lods
sbb
xchg
jp
dec
sti
dec
mov
ficompl
mov
out
or
std
fistl
pop
cltd
inc
pop
pusha
jne
mov
pop
int
push
inc
mov
inc
adc
push
dec
push
jle
lret
and
mov
test
pop
les
out
pop
addr16
popa
roll
xcrypt-ctr
cmpsl
fidivrs
mov
or
daa
xchg
pop
fiaddl
shll
test
das
xor
jecxz
mov
mov
xchg
rorb
loopne
lret
outsb
in
sbb
cli
in
cmp
or
xchg
push
jo
jmp
dec
enter
sbb
outsb
pop
cwtl
xchg
mulb
jno
mov
lret
xchg
xchg
dec
dec
sub
mov
or
xor
negb
in
mov
mov
cli
pushf
ja
inc
dec
mov
adc
loope
lcall
or
sti
repz
popf
and
or
xchg
andb
mov
adc
sub
mov
in
cmpsl
inc
bound
pop
push
sub
stc
mov
jp
pop
loope
ja
pusha
pop
push
jle
jmp
aad
negb
push
int3
or
push
in
pop
dec
jp
jmp
sub
faddl
push
inc
out
cmp
cmp
jnp
sub
inc
enter
sub
mov
lods
and
ds
dec
xorl
sub
and
mov
push
inc
pop
test
stos
les
and
sti
pop
add
xor
mov
mov
adc
fidivs
std
loopne
or
test
loope
ljmp
test
push
notb
push
mov
adc
sub
insl
out
dec
jno
xor
mov
stos
andb
mov
pop
loop
mov
stos
sbb
push
std
jle
pop
shll
cmp
in
pop
jb
pop
std
gs
push
ss
shlb
dec
mov
in
and
lods
aam
orb
in
in
fsubrs
in
fiaddl
inc
pop
jmp
pop
inc
mov
into
dec
imul
sub
lret
xlat
jno
sar
pop
jl
mov
stos
push
push
inc
pop
shrl
and
sbb
mov
hlt
xchg
and
inc
loop
mov
jg
repnz
insl
ret
testb
and
xchg
andl
icebp
cmp
inc
fiaddl
dec
insb
cmp
xchg
xchg
dec
outsb
bound
xchg
jp
fnclex
inc
bound
sbb
pop
repz
xchg
pop
mov
inc
xor
pusha
loope
ror
push
shlb
outsl
out
mov
or
inc
andl
cmp
fcom
jae
lcall
dec
int3
sub
sbb
js
ja
stc
lods
add
cmpl
ret
push
cli
jle
aas
pop
outsb
mov
sti
lcall
aad
cltd
je
ja
add
or
cmp
arpl
enter
push
inc
repz
mov
adc
fdiv
stos
sbb
sbb
cmp
xchg
je
loop
push
mov
pop
or
addr16
ret
call
jge
jl
xor
jle
and
inc
in
adc
dec
sarl
adc
shlb
daa
or
icebp
dec
inc
cld
mov
test
pop
jae
mov
lods
or
jns
stc
aam
repnz
inc
adc
xor
testl
jmp
xor
mov
lcall
xchg
fdivs
testl
jg
push
call
xor
enter
adc
adc
or
inc
ds
or
sub
adc
and
cmpsl
outsl
fistps
incb
mov
arpl
fldcw
add
mov
test
sbb
xchg
fldl
notl
es
in
lahf
adc
je
incl
pop
popa
lods
flds
mov
aad
adc
imul
dec
pop
cmpsl
aad
push
sti
popa
test
sbb
aaa
mov
fiadds
adc
adcb
mov
aad
js
xchg
insb
xchg
jecxz
and
testb
sti
inc
pop
add
fnstenv
data16
cmp
lcall
jge
xor
jbe
mov
sbb
mov
fcoml
loop
std
int
mov
sub
jl
lret
dec
aas
jae
pop
rorb
dec
mov
test
jne
in
adc
mov
cmp
mov
sub
les
mov
nop
push
push
lods
mov
xor
in
out
cmp
push
aaa
xor
add
sub
mov
xor
mov
lock
xchg
scas
xchg
cmpsl
and
insb
lcall
pop
xchg
fisubrs
or
cvtdq2ps
sbb
jbe
icebp
and
mov
loopne
pop
lahf
adcl
pop
or
clc
mov
jb
inc
pop
jno
pop
xchg
and
popf
mov
sbb
int3
xor
cli
xor
in
lcall
mov
and
push
mov
sub
push
ret
ljmp
xchg
sarb
jb
sub
jl
pusha
fstl
push
mov
int
fisubs
jmp
xor
pop
imul
mov
xchg
stos
and
sti
sub
mov
mov
lods
scas
test
cs
dec
jmp
aad
adc
insb
inc
lahf
mov
fmulp
jno
add
icebp
sub
repnz
pushf
test
in
fdivl
push
xor
popa
cmp
popf
out
dec
xor
xor
inc
adc
pusha
lock
rcrl
filds
outsb
clc
adc
push
adc
ret
bound
xchg
jle
dec
jmp
mov
xchg
push
rorb
or
ret
dec
and
add
scas
cmp
mov
scas
arpl
addb
add
repnz
jae
lods
outsb
dec
push
add
dec
sbb
push
add
cmp
xchg
loope
mov
insb
xchg
mov
and
or
imul
push
fmul
dec
mov
lods
xchg
push
cmc
mov
cmp
out
xor
jecxz
loop
sub
adc
inc
push
divb
or
lahf
mov
or
xchg
jns
data16
jecxz
insl
ljmp
push
adc
push
movsl
insl
lea
insb
jmp
in
adc
leave
ret
xor
pushf
cmp
aaa
sbb
jne
pop
ret
inc
mov
inc
inc
icebp
jnp
sbb
push
dec
loop
cmp
repnz
jl
mov
xor
les
push
dec
pop
adc
mov
xor
lds
sub
pop
mov
call
xor
das
test
sub
shrb
and
out
loopne
adc
inc
jecxz
jno
iret
dec
pop
call
test
out
movsl
lcall
imul
loopne
testb
data16
cmp
xor
push
out
pop
lcall
inc
icebp
in
adc
flds
sete
lea
pusha
pushl
jmp
orb
xchg
and
imul
push
aam
sub
jmp
rol
data16
enter
sub
stos
adc
add
cld
imul
arpl
sbb
mov
xor
push
pop
dec
xchg
pop
jecxz
or
cvttps2pi
rol
ficomps
mov
arpl
subb
pushf
sub
mov
lret
mov
mov
aad
sub
push
mov
cs
push
aad
enter
sbb
mov
push
push
lret
lods
inc
jb
enter
mov
nop
cs
sub
in
xor
insb
cmp
movsl
shlb
pop
pop
shrl
filds
add
mov
rclb
rol
in
lcall
push
fwait
lods
insl
inc
rep
call
dec
jmp
gs
mov
pop
loop
lahf
dec
insb
aas
in
sbb
arpl
in
adc
and
push
dec
inc
aaa
bound
add
adcb
jg
add
inc
and
jle
lea
jne
test
jmp
sbb
out
int
pop
stc
pop
and
dec
iret
dec
mov
scas
cmp
movsb
xchg
and
mov
add
adc
lds
js
clc
mov
mov
pushf
or
popf
pop
mov
pop
int
add
mov
cmc
dec
stc
sbb
dec
stos
jmp
mov
das
mov
call
mov
icebp
or
pop
push
lcall
mov
mov
das
or
roll
rorb
mov
dec
add
daa
jge
and
cmp
push
mov
jo
jge
jl
aad
add
pop
test
add
sub
pop
mov
jecxz
imul
pminsw
xor
xchg
test
shr
call
dec
push
jb
loope
jl
icebp
cltd
inc
sti
imul
add
add
sub
pushf
xor
jns
jne
dec
gs
xchg
cs
pop
cmp
pop
mov
fcom
dec
cmpsb
in
add
jo
xchg
gs
and
fisttpl
push
loop
stc
jns
xchg
in
clc
mov
push
and
pop
je
sti
fwait
movsldup
push
leave
adc
repz
pop
xor
js
outsb
xchg
shll
aad
cmpsl
ret
fdivrs
cmpsb
mov
xor
sbb
daa
mov
adc
sub
cmpsl
mov
xor
repnz
xor
das
in
adc
mov
push
sbb
nop
insb
aaa
rolb
sub
cs
adc
cmp
in
push
js
ds
aam
ret
fldl
ret
fs
out
adc
dec
insb
jae
xor
dec
sub
mov
mov
movsb
mov
loop
cli
fnstcw
lret
cmp
pusha
push
fbstp
cmpsb
shll
xchg
jg
shll
mov
mov
rol
or
sbb
xor
mov
daa
inc
mov
mov
loop
dec
xchg
adc
shrb
push
ljmp
icebp
push
scas
mov
loopne
inc
daa
arpl
sbb
add
dec
jmp
xchg
rclb
cld
sti
adc
fistps
pop
fldcw
sbb
xor
in
or
cmp
lods
sbb
aaa
inc
iret
data16
rorl
imulb
nop
cmpsb
sahf
sbb
sub
mov
cmpb
out
jge
test
xlat
aas
stc
xor
mov
icebp
inc
das
mov
call
push
cmpsb
sti
jecxz
imul
mov
xchg
push
setge
push
lret
xlat
or
mov
cltd
pop
dec
push
inc
push
out
pop
cli
mov
cmp
sub
pop
xor
mov
push
sbb
cwtl
dec
inc
idiv
cld
dec
fnsave
dec
fs
sub
or
insb
xchg
scas
sub
xor
aad
xchg
adc
leave
inc
fstcw
leave
lahf
xchg
xchg
and
xor
xchg
mov
loop
or
inc
xchg
sub
rol
jp
outsb
add
mov
dec
into
mov
leave
cmp
ss
pop
orb
push
movsl
adc
adc
shl
xlat
daa
outsb
ss
mov
jge
in
inc
mov
adc
cmp
xchg
push
sub
movsl
jmp
aad
pop
mov
xchg
push
jmp
lahf
test
push
and
or
iret
mov
adc
out
pop
fistl
jns
sar
jle
out
adc
lea
pop
leave
in
incl
mov
push
ss
loopne
mov
pop
jo
call
mov
rcr
lret
dec
cmp
or
jnp
jbe
sbb
dec
loop
shlb
in
or
lods
pop
xor
cwtl
scas
js
in
cmp
jl
imul
in
adc
xor
adc
mov
push
movsl
inc
sbb
testl
jp
pop
sysret
dec
ss
in
pushf
add
loop
popf
mov
decl
loopne
std
test
jecxz
mov
inc
dec
scas
shrb
pop
inc
imul
imul
shll
test
aam
add
sub
inc
sub
into
mov
popa
sub
out
push
or
sbb
cld
sub
jo
mov
fxch
testl
xchg
pushf
test
out
jae
out
test
hlt
add
jg
hlt
cwtl
out
push
and
xor
cmp
arpl
leavew
inc
cmpsb
sbb
out
adc
and
fbstp
test
mov
jb
lods
adc
or
or
nop
dec
dec
jl
mov
dec
aad
mov
jne
jnp
outsl
or
loop
lret
mov
dec
inc
sbbb
lods
bound
push
in
addb
addb
into
leave
xchg
mov
fsubl
jge
int
lss
stos
jo
push
and
inc
je
out
add
dec
addb
std
test
pop
jo
xchg
jae
arpl
les
repz
mov
es
mov
dec
jmp
mov
test
lock
stc
or
outsb
cmc
dec
mov
sti
jle
cmp
cmpl
gs
jg
cs
movsb
cmp
add
push
sbb
stos
xchg
push
push
and
rclb
push
xchg
xchg
ja
pop
inc
dec
fildl
jo
push
dec
fimull
xchg
cmp
in
add
cmpsb
push
negb
js
jns
or
cmpsb
mov
int3
mov
mov
jae
addr16
dec
add
out
cmp
outsb
pusha
or
sbb
shrl
icebp
jge
nop
ljmp
mov
clc
dec
and
je
xchg
in
pop
mov
add
inc
push
cld
jno
insl
and
iret
hlt
add
ljmp
hlt
pop
cmpsl
pusha
fnstenv
jmp
cltd
inc
out
push
in
test
repnz
call
repnz
xor
or
mov
imul
hlt
push
test
xor
cwtl
pop
xchg
push
faddp
pop
sbb
lods
push
inc
aas
lds
mov
sub
hlt
fists
jmp
cmp
cmp
mull
mov
mov
push
pop
into
jns
cmpsl
cltd
lea
sbb
cmp
jge
scas
movsl
pop
int
in
push
fcmovb
push
sub
sub
add
xor
test
jle
int
shlb
pusha
adc
sbb
pop
pop
out
aad
into
sub
dec
mulb
ljmp
push
loope
lret
inc
mov
sbb
add
push
pop
add
pushl
sub
jo
xor
pusha
rcl
sbb
ret
dec
int
ja
push
test
dec
xchg
leave
and
mov
adc
inc
in
in
popl
inc
jge
inc
insl
mov
mov
push
cmp
in
add
and
paddsw
fs
je
aaa
ljmp
adc
into
cmp
mov
pushw
in
in
cmp
cmpsb
in
push
inc
jp
les
dec
add
cmpsl
mov
cwtl
adc
ljmp
test
xchg
addr16
jp
nop
iret
sbb
dec
xchg
sbb
jg
icebp
je
xchg
out
les
sbb
adc
test
cwtl
outsl
incl
xor
and
push
push
aaa
inc
xor
or
fwait
xor
insl
nop
push
mov
jp
popl
pop
dec
add
inc
inc
popa
jne
gs
push
inc
popa
jne
gs
push
gs
jb
addr16
jae
and
jno
imul
or
push
jnp
outsl
flds
repnz
pop
xor
push
push
xchg
lods
pop
loope
inc
repnz
sbb
pop
jnp
mov
mov
push
fidivrl
adc
loope
or
push
push
cmc
mov
enter
jo
mov
mov
jl
mov
je
mov
mov
jbe
cwtl
ss
add
lret
jae
pop
call
jno
imul
and
add
xchg
dec
pop
cmp
jmp
adc
xchg
xchg
cmc
xor
mov
mov
and
cmp
outsl
cmpsl
mov
ss
lods
outsb
cmp
dec
div
andl
iret
sbbl
imul
xlat
lods
push
adc
jno
iret
jae
and
shl
addr16
dec
js
mov
push
popa
ret
sub
es
loop
mov
mov
lds
add
addb
sti
bound
sub
loope
call
cmp
dec
popa
xchg
push
mulb
inc
aas
insb
cmp
cld
push
add
fistpl
adc
jl
push
sahf
mov
icebp
push
pop
mov
pushf
pushf
pop
pop
jl
push
in
aaa
rcl
pushw
jb
dec
aas
and
push
ljmp
mov
cli
test
shlb
aam
xlat
cmc
inc
jnp
jns
jbe
mov
icebp
ljmp
or
cmp
push
loope
shrb
fwait
setl
sub
add
movb
xchg
shr
fsubp
pop
inc
popa
inc
lret
mov
addr16
sub
stos
push
mov
pusha
cmp
dec
dec
lods
sti
mov
sub
mov
lret
xchg
jns
fidivrl
call
dec
stos
out
sbb
mov
or
scas
loopne
mov
xor
les
rcrb
mov
roll
data16
aad
out
jl
aaa
sbb
repnz
sti
pop
xchg
jecxz
arpl
mov
xchg
in
dec
jae
jae
cmp
outsl
mov
add
xor
mov
inc
xor
and
jbe
bts
neg
sub
not
mov
btr
shld
movsbw
mov
inc
movsbw
add
clc
test
shr
movzbw
mov
bsf
not
shrd
call
icebp
mov
arpl
or
aad
leave
inc
out
push
mov
jnp
jmp
pop
sti
sub
in
mov
repnz
dec
in
cmp
test
jge
jge
cwtl
xchg
mov
movsl
arpl
pushf
popf
and
fwait
sti
inc
cltd
sub
xor
sbb
leave
dec
shll
xor
shlb
cmp
mov
mov
cli
lret
inc
rol
sub
cld
pop
add
in
lea
rclb
in
mov
xor
lods
add
inc
popf
add
jns
popl
pusha
push
mov
out
cld
fwait
es
push
pop
mov
or
xor
shll
repnz
into
enter
sub
enter
inc
lahf
jne
mov
mov
shlb
jp
scas
ljmp
mov
shlb
lods
cmp
mov
in
lcall
shll
adc
xor
xchg
ljmp
mov
out
out
imul
les
clc
xlat
fsubrl
xor
mov
jmp
psubusw
xor
add
dec
in
popl
xor
cmpsb
shll
int
pop
dec
jnp
rcrb
sahf
cmp
cs
cmp
outsl
jo
out
pop
fwait
sahf
fmull
sub
adcb
sbb
and
dec
insl
cltd
sti
inc
jnp
ret
int
inc
clc
jl,pt
ret
inc
outsl
ret
push
mov
js
adc
cs
xor
cmp
fstpt
movsl
jnp
pop
clc
and
jns
inc
iret
dec
xor
xchg
test
dec
mov
das
loope
mov
in
imul
cld
sahf
pop
add
push
push
fistpll
mov
fwait
xchg
popf
mov
test
les
fnstcw
rorl
lods
test
push
mov
mov
sbb
and
add
mov
dec
push
mov
xor
test
xor
dec
push
jmp
add
sub
xchg
xlat
sbb
fcompl
loopne
inc
sti
adc
xchg
mov
cmc
lcall
jne
jno
insb
and
push
jae
andl
mov
fcom
push
nop
mov
cmp
inc
add
repz
mov
or
add
stc
ss
and
leave
sub
lret
mov
mov
cli
lds
rorb
mov
test
mov
xor
push
insb
hlt
fs
add
xchg
lahf
or
test
mov
loope
lods
in
popl
adc
mov
xchg
addr16
insb
add
fists
sub
dec
jmp
xor
in
jle
adc
jbe
inc
cmp
shrl
xor
mov
fwait
xchg
sti
hlt
fimull
cld
push
testb
pop
out
and
ljmp
cmp
push
loop
pop
decb
daa
lret
sub
iret
out
call
test
fsubs
insl
addb
les
jp
loope
sub
rolb
mov
jno,pt
mov
add
mov
jae
imul
fs
push
ret
in
popl
call
and
repz
pushl
pushf
mov
movb
pushl
push
mov
pushl
ret
shlb
sub
stos
enter
cmp
imul
movsb
test
cmp
mov
cwtl
xchg
fsubs
xor
mov
fsubs
xchg
outsl
xchg
lock
mov
rclb
mov
add
fildll
cmp
mov
lea
fwait
das
push
mov
jp
mov
mov
dec
jo
push
int3
or
ja
xchg
xor
dec
mov
jne
and
or
ret
add
push
pop
data16
mov
cmp
sbb
or
in
xchg
outsl
fsts
jle
cmp
in
push
xlat
sbb
cmp
mov
adc
xchg
or
mov
mov
pop
out
inc
xor
imul
ret
in
mov
mov
nop
aam
test
push
pushf
lock
pushl
dec
mov
sbb
loop
add
pusha
int
adc
mov
mov
jo
cld
add
add
adcl
add
pushf
cmp
pusha
pushf
lea
jae
cmc
jmp
cmp
mov
shlb
push
dec
lods
sbb
inc
into
push
xchg
shr
mov
cmp
imul
out
out
iret
cvtdq2ps
in
fiaddl
push
mov
xchg
sti
push
pop
test
fisubl
mov
xlat
fwait
out
push
nop
mov
xlat
inc
inc
push
mov
push
inc
sub
mov
nop
shll
daa
sub
mov
int3
ljmp
mov
jmp
outsl
pop
adc
push
mov
out
adc
mov
push
or
lds
pop
add
jno
mov
sti
dec
mov
je
inc
loop
mov
pop
cmc
jns
xor
adc
in
mov
fsubrl
xchg
sub
add
xchg
sub
and
aaa
sbb
clc
insl
in
xchg
or
dec
adc
clc
add
mov
stc
cmp
xchg
int3
lret
mov
or
loope
movsl
adc
inc
movsb
mov
repz
or
mov
lahf
xor
adc
cmp
sbb
pop
dec
and
pop
mov
add
jb
lods
jmp
mov
sar
out
mov
pop
jmp
pusha
jg
inc
push
cmc
mov
xor
mov
ja
inc
mov
gs
jb
xchg
cmpsl
and
xor
jbe
add
leave
push
repz
xchg
in
mov
in
mov
test
push
add
fnsave
add
hlt
push
ss
into
mov
push
mov
hlt
jp
pop
mov
and
push
or
push
jb
xchg
dec
ja
je
or
iret
or
sbb
push
cwtl
push
pop
xchg
xchg
insb
xchg
insb
jle
jnp
xor
and
stos
cwtl
or
mov
out
xchg
popa
jge
orb
rcr
mov
fnstsw
aad
addr16
enter
mov
mov
jecxz
sahf
fildll
leave
neg
das
rclb
cmp
push
or
scas
push
stc
leave
cmove
cmp
aaa
pushf
and
dec
xchg
outsl
jmp
cmp
ljmp
loop
sbb
imul
jnp
jno
das
xchg
mov
mov
jmp
xor
sahf
fcomps
pop
push
xchg
sub
shrb
push
mov
decb
int3
mov
out
dec
mov
clc
sbb
cmp
sti
mov
inc
and
cmp
add
roll
dec
pop
stc
adc
inc
stc
leave
inc
xor
cs
cmpsl
or
mov
cmp
mov
adc
jno
cmc
cmpsb
mov
sub
pusha
or
call
adcl
jp
into
jmp
and
pop
int
lods
pop
xchg
jne
add
jb
mov
addr16
rorb
addl
clc
clc
cmc
jmp
or
dec
xor
inc
dec
fmuls
mov
cltd
arpl
dec
rcrb
insl
ss
push
add
jg
ljmp
or
fcomi
add
or
or
dec
in
add
push
add
adc
mov
push
xor
cmpsl
xchg
pop
leave
lea
sti
or
mov
jbe
outsb
jp
adc
lcall
dec
push
imul
jae
sarl
xor
push
jle
and
adc
jnp
jns
adc
cs
or
dec
popl
lcall
sti
call
xchg
lret
iret
out
cmp
push
pop
fsubrs
cmpsl
add
sbbl
dec
sbb
jg
sub
xor
mov
mov
sub
jecxz
lock
mov
jb
shlb
lret
add
scas
bsr
dec
jg
jle
mov
adc
les
shll
orl
cld
mov
xchg
test
iret
aam
cmpsl
outsl
fcmovnu
push
add
dec
sbb
icebp
cmpb
sbb
pushf
cltd
jle
add
or
push
ljmp
outsb
into
sub
adc
in
mov
lret
adcl
loop
sub
lcall
es
push
ljmp
inc
add
ret
sti
mov
lcall
and
int3
sub
test
inc
sub
movb
push
adc
into
pop
inc
and
movb
jmp
adc
pop
call
sbb
decl
bound
pop
add
and
mov
je
sbb
ret
jle
lahf
fistpll
lret
jbe
jnp
cmp
mov
mov
dec
testl
aad
mov
leave
dec
insb
in
mov
aad
cmp
mov
and
rcr
bswap
movsbw
cmp
sub
xor
xchg
shr
inc
mov
not
sbb
pushl
add
or
add
lea
rcr
mov
cmp
jmp
pusha
mov
bt
pusha
and
call
int
jo
les
popf
adc
mov
mov
aas
lcall
outsb
mov
stos
inc
inc
cltd
fildll
mov
adc
add
dec
mov
icebp
lret
add
out
or
cltd
pop
cmpsl
movsb
aad
pop
cltd
in
jl
add
jmp
push
mov
jae
pushf
dec
loope
lods
sub
mov
jge
inc
rcrl
push
add
repnz
cmpsl
sub
fs
mov
jge
aaa
sub
loopne
mov
pop
mov
xor
sbb
data16
push
rcll
add
ret
movsl
add
daa
push
mov
jo
adc
pop
mov
or
lea
js
jle
xchg
push
xchg
jnp
lcall
push
mov
repz
rclb
jae
std
sahf
arpl
pop
in
push
aam
stc
scas
adc
inc
xorl
fcmovnb
and
cli
leave
add
loop
bswap
fwait
sub
aas
mov
imul
push
sbb
mov
je
out
sbb
out
icebp
xor
or
test
in
sbb
stos
lahf
ja
push
mov
out
inc
aad
in
xor
je
bound
jle
adc
xchg
mov
cld
out
in
xchg
add
sbbl
adc
jmp
cltd
imul
movl
pop
lock
inc
sbb
jo
mov
dec
daa
pop
in
ficompl
sbb
std
xchg
mov
add
loopne
popf
test
negl
mov
cltd
fsubrl
push
push
pop
ds
lahf
pop
stos
lods
or
and
mov
xor
loope
mov
aad
lods
push
je
and
cld
fstpl
sbb
inc
jmp
hlt
inc
sbb
nop
arpl
leave
gs
shlb
sbb
ret
push
insl
jb
xor
test
dec
dec
insl
subl
inc
sarl
cwtl
mov
arpl
popa
lea
xor
aad
inc
mov
fildll
mov
mov
insb
insb
xchg
pusha
ret
pop
insb
jl
mov
call
dec
scas
je
inc
out
std
pop
in
mov
aas
imul
push
int
ret
js
add
aad
loop
lea
pop
mov
push
jno
jnp
mov
shlb
pop
jmp
repnz
xlat
jl
popa
adc
btr
mov
movsl
lods
mov
cld
push
rcl
mov
xchg
sahf
push
dec
into
xor
mov
mov
pop
xor
jmp
loop
mov
pop
repz
insb
pop
add
insl
xchg
es
xchg
pop
xchg
or
xor
outsl
mov
dec
adcl
cmp
out
outsl
inc
push
out
in
mov
popa
push
mov
mov
xchg
repz
outsl
mov
adcl
mov
inc
jae
inc
rcrl
ret
les
add
sub
daa
cmpl
out
cltd
mov
mov
jge
aam
adcl
cmpsl
pop
stos
jmp
and
add
mov
bt
stc
movzwl
sub
xor
shr
bsr
bt
mov
cmc
jmp
repz
cmp
ret
fldenv
mov
ret
loopne
es
adc
fdivr
dec
imul
data16
dec
mov
cmpsl
repz
sbb
nop
sahf
js
push
aaa
int3
sbb
xchg
lret
xchg
jle
out
adcb
xor
xchg
data16
inc
data16
stos
mov
adc
pop
inc
push
lret
test
inc
into
lods
mov
sti
mov
out
pop
andb
sub
push
sub
sub
cld
ljmp
or
lds
sbb
lea
push
test
cmp
jg
cmp
scas
and
jo
pusha
jecxz
xchg
pop
dec
cmpsl
push
mov
in
mov
xchg
repz
add
inc
insb
insb
outsl
arpl
inc
add
movsl
sbb
mov
mov
jge
and
dec
sar
dec
clc
mov
mov
sub
push
lods
jnp
shlb
fwait
aaa
or
ficompl
movlps
and
cmpsb
xchg
notl
jp
into
enter
inc
hlt
push
xor
out
ljmp
mov
xor
or
mov
sbb
shrl
fwait
push
sbb
mov
incl
out
or
mov
out
jmp
push
sbb
stos
dec
xorb
pop
not
std
cmp
sub
adc
add
xchg
and
jl
dec
in
push
test
lea
pop
les
add
mov
imulb
sahf
mov
xchg
movsl
jge
pop
ret
outsl
mov
fildl
or
rol
sbb
and
aad
push
pop
inc
cli
bound
xchg
xor
and
cmpsb
inc
adc
xchg
mov
movsl
mov
dec
nop
test
lods
mov
sub
or
std
dec
push
ret
xchg
jp
ds
and
mov
gs
addr16
pop
shlb
push
cmp
push
js
jp
mov
sbb
lahf
lahf
cmpsb
jmp
and
xchg
or
sbb
dec
out
inc
inc
sti
push
jecxz
cmc
jb
insl
aad
fisubs
aas
loopne
test
xchg
enter
xchg
mov
stos
adc
into
or
loopne
dec
jge
lcall
mov
mov
and
xlat
pop
test
aas
pop
mov
vpmacssdd
push
cltd
sbb
mov
adc
xor
lahf
out
fs
and
xchg
sub
or
mov
incb
cmp
scas
mov
xchg
pop
sbb
mov
xchg
add
andb
imul
gs
stc
jle
or
adc
in
sub
sub
ja
mov
add
push
sub
dec
imul
sbb
sub
sub
clc
push
fwait
mov
sub
jle
not
sub
xchg
xor
mov
adc
mov
adc
aaa
and
and
push
scas
cs
jge
ret
gs
or
int
push
lahf
mov
out
faddp
or
out
cmp
mov
sub
repz
push
jo
dec
stc
push
ljmp
and
mov
cmpsl
cmp
xor
movsb
out
mov
mov
mov
or
and
call
pop
add
xchg
lods
jbe
xchg
sub
lcall
stc
jo
sbb
fimuls
or
xchg
in
pop
or
mov
movlps
loop
test
ficomps
xchg
xchg
jnp
or
stos
mov
js
lret
sub
lea
ss
xchg
clc
popf
push
ja
int
fxtract
lods
ja
adc
pop
xor
sbb
mov
test
mov
daa
mov
xor
scas
sub
lods
aaa
cwtl
sbb
adc
test
xor
inc
add
jo
jno
jnp
sub
mov
fcoms
test
xchg
cmp
in
mov
push
dec
xchg
pusha
clc
bt
cmp
call
pushl
movb
pusha
lea
jb
pusha
cmpb
pusha
call
test
pushf
cmp
cmp
cmp
pushf
pusha
mov
lea
ja
cmc
jmp
cmp
movb
movl
jmp
add
inc
inc
insl
je
arpl
imul
je
outsl
outsb
and
jno
jbe
push
popa
imul
outsl
outsb
outsb
je
push
arpl
bound
add
mov
pop
out
cmpl
jbe
mull
and
push
nop
xchg
pop
xchg
mov
sub
and
gs
cmp
loop
pop
adc
add
arpl
repz
sub
push
incb
pop
cwtl
les
mov
sbb
mov
dec
or
ja
dec
inc
movsb
push
aaa
xor
stos
mov
ljmp
repz
dec
and
inc
cmp
push
das
mov
ljmp
push
je
push
adc
inc
int
lock
mov
pop
mov
inc
in
mov
mov
mov
cmc
mov
lahf
mov
orb
dec
adc
andb
push
or
inc
pop
movsb
push
mov
dec
push
cmp
lds
dec
dec
add
or
add
mov
jns
std
aaa
arpl
test
scas
ret
mov
push
sbb
mov
push
iret
rorb
push
cmc
cltd
es
mov
dec
sahf
test
dec
mov
cmpsb
adc
lods
jmp
in
add
rorl
fwait
cmp
pop
enter
pushf
nop
addb
andb
jp
dec
cmp
es
add
pop
jl
test
lahf
cmp
adc
out
in
mov
inc
seta
enter
stos
not
not
jmp
aad
addr16
mul
inc
push
adc
scas
push
lods
xor
cmpps
outsb
push
pushf
and
testb
mov
or
or
lock
cs
xchg
outsl
inc
and
in
in
hlt
gs
rolb
dec
inc
mov
mov
xchg
sbb
mov
mov
lcall
mov
sti
xchg
cmpsb
in
adc
fsubl
xor
push
mov
je
xlat
push
pop
and
and
dec
and
shlb
dec
cmpsb
and
ljmp
cmc
in
sub
cwtl
add
out
mov
ficoml
mov
test
dec
imul
rorb
dec
popa
add
add
incl
jnp
js
stc
in
mov
stc
sub
and
aad
fs
rcrl
lcall
icebp
dec
mov
mov
into
push
andb
rcr
xorb
mov
xchg
mulb
popf
cs
inc
inc
insb
sub
dec
pop
lods
inc
into
jae
or
insl
and
faddp
jns
cmpsl
repz
cmc
pop
jmp
mov
loopne
xchg
push
jecxz
mov
cmp
inc
jecxz
push
rcr
cmp
xchg
add
ret
xchg
lcall
mov
and
cmpsb
loop
sbb
movsb
inc
pop
jo
or
ficoml
add
sbbb
cmp
adc
cmpsb
xlat
mov
push
and
cli
mov
pop
icebp
pop
in
ret
xor
int
in
mov
imul
sub
jl
add
gs
into
jb
or
js
popf
je
xchg
in
sbbb
sub
xchg
xchg
push
sub
pop
bound
outsb
pop
lock
xor
lea
movsb
and
shrl
xchg
add
idiv
outsb
and
or
cs
jae,pt
jne
jg
fidivs
out
mov
push
fsubs
popa
popf
shl
fwait
cltd
mov
test
and
and
lcall
mov
in
inc
pop
sarl
xchg
and
mov
jle
and
popl
les
aas
mov
jae
sbb
inc
sbb
push
push
mov
pop
imul
pushf
iret
add
test
faddl
aas
mov
in
mov
dec
jp
sbb
jecxz
inc
xchg
data16
fs
dec
andl
mov
mov
dec
dec
cwtl
and
lock
stos
lea
pusha
test
repz
sbb
shlb
gs
xor
fldt
pop
int3
mov
cmp
mov
inc
mov
xor
insl
xchg
sbb
jecxz
jns
sub
inc
iret
sbb
mov
enter
in
sub
cmpsl
in
push
ret
jge
push
std
pop
jno
data16
mov
fistl
idivb
xchg
cmp
mov
inc
xchg
push
mov
cmc
movsl
sbb
sub
xor
mov
mov
cmp
xchg
ljmp
and
test
and
mov
aam
jmp
out
popw
faddp
or
mov
jne
orl
and
loopne
sbb
cmp
std
dec
es
mov
loopne
sbb
es
shl
sbb
mov
cmp
sub
repz
sub
out
inc
cli
dec
test
in
mov
in
cmpsl
jg
in
ds
seto
fsts
sub
mov
add
cmp
push
push
dec
aam
push
mov
xor
lods
sahf
adcl
loopne
mul
push
and
mov
in
mov
xorb
dec
sbb
scas
fidivrs
fsubs
insb
sti
addr16
push
pusha
insb
out
cmp
sub
xchg
xchg
sub
test
jns
nop
mov
push
nop
sub
addl
lret
pusha
push
jno
lods
jne
xchg
pop
add
mov
mov
xor
mov
adc
out
cltd
stos
cmp
inc
sub
hlt
loope
test
imul
xlat
sbb
dec
dec
pushf
aad
out
or
fmuls
dec
xor
pop
and
mov
push
pop
lods
push
pop
imul
imul
dec
int
int3
add
mov
mov
std
sbb
jnp
mov
pop
sub
inc
shrb
fs
jle
pusha
mov
jmp
cmpsb
mov
mov
into
xchg
jecxz
test
push
jecxz
enter
xchg
jb
outsl
cli
fwait
jo
adc
popa
add
jae
jo
sahf
popa
pop
pop
and
xlat
lahf
mov
aam
and
pusha
fstpt
dec
jmp
mov
push
fs
pop
mov
and
lods
sub
xor
add
rcr
stc
or
mov
pop
stc
shll
fs
dec
or
push
rcl
push
mov
mov
sbb
sub
xchg
or
fdivrs
push
push
into
data16
add
aaa
int3
or
pop
repnz
imul
jecxz
ficomps
xor
fdivl
mov
jg
sub
sbb
pop
dec
dec
lods
das
daa
lods
es
jo
and
gs
dec
lahf
jl
cmp
fdivl
aaa
sbb
nop
mov
pop
ds
or
mov
lds
pop
stos
scas
mov
xchg
or
stos
popa
jns
xchg
outsl
cmpsl
stos
dec
or
and
xor
xchg
add
int3
push
pop
sub
push
mov
dec
out
xchg
call
xor
dec
xchg
mov
add
fst
imul
cmpsl
pop
mov
mov
xorb
lahf
sbb
outsl
rclb
loope
jge
mov
mov
aad
stc
cmpsb
push
movsb
sti
repz
inc
inc
xchg
inc
xchg
ret
mov
lret
pop
and
mov
iret
lcall
jne
cmc
jg
cmpsb
rclb
mov
out
aad
lea
xchg
imul
sahf
sbb
jne
icebp
aad
push
outsb
div
cmp
jmp
nop
mov
sbb
out
and
sbb
sbb
arpl
mov
jo
mov
mov
mov
xchg
lock
mov
sbb
data16
call
in
mov
mov
jns
idivl
ljmp
leave
lea
push
movb
jmp
push
pop
xchg
dec
xor
clc
cmc
lea
or
test
fs
lahf
div
mov
or
jb
xchg
addb
or
and
cmp
pusha
adc
mov
xchg
mov
data16
cli
dec
fisubrl
jb
jp
popf
outsl
data16
push
je
and
es
jnp
arpl
ret
or
fdivs
or
imul
notb
add
cwtl
push
mov
sbb
or
mov
or
les
xchg
or
inc
inc
add
ja
or
mov
xor
mov
push
pop
xchg
jmp
fsubrl
addr16
es
jo
or
nop
inc
adc
add
mov
pop
push
scas
add
loope
jmp
push
adc
and
out
pop
repnz
add
dec
jg
inc
je
and
aaa
ret
fwait
mov
ss
add
inc
adc
pop
sub
inc
pop
inc
push
outsb
mov
mov
lods
mov
pushf
int
sbb
adcl
dec
addr16
fwait
roll
aad
pop
xor
aad
nop
xchg
in
jbe
in
popa
add
pop
enter
cld
pop
gs
xor
out
add
mov
jo
out
inc
xchg
and
sub
aas
stc
or
jl
cmp
in
mov
stc
sub
ficoml
bound
xor
fldenv
les
mov
aam
lods
loope
sarl
testl
adc
roll
sbb
shll
xor
adc
sub
jo
mov
dec
add
pop
fdivr
pop
cmp
mov
adc
inc
xchg
dec
ret
cmp
ss
or
pushf
fwait
xchg
fwait
xor
shrb
imul
adc
cltd
imul
addr16
mov
fcmove
sbb
clc
call
mov
pushf
pushl
pushf
movb
pushl
ret
test
imul
push
sbb
sbb
int3
or
mov
insb
loopne
fincstp
pop
pop
out
nop
mov
test
cwtl
dec
stc
in
pop
add
cltd
gs
cmp
test
sbb
mov
test
les
push
and
push
pop
into
xlat
pop
pop
aam
ret
ret
imul
mov
stos
push
idiv
pop
and
stc
pop
shll
ret
pop
fldenv
and
cmp
inc
jg
notl
mov
stc
jle
lea
xchg
jne
movsl
das
xchg
outsb
mov
xlat
sbb
sub
dec
incb
and
mov
cmp
add
fcompl
pop
adcl
and
cmp
pop
fs
divb
bound
xchg
movsl
mov
scas
sub
daa
mov
xor
sub
push
push
cmp
mov
cmpsl
iret
popl
inc
jb
mov
jbe
mov
xor
and
test
scas
les
jno
cmc
jmp
sbb
shl
fistl
ror
mov
ret
jae
dec
out
pushf
les
movsl
cmp
rorl
dec
and
mov
outsb
push
mov
lcall
jmp
out
movsl
add
in
mov
cmp
sbb
inc
xor
and
in
rcll
pop
mov
popf
popf
adc
mov
push
inc
call
cltd
mov
push
mov
sub
and
push
insb
addr16
popf
andb
sahf
mov
test
out
and
mov
mov
cs
push
stos
or
into
outsl
and
daa
lds
mov
or
iret
xchg
mov
mov
jae
pop
jmp
fdiv
xchg
aas
mov
xchg
mov
loope
popa
sbb
cwtl
movsb
ret
fdivrs
pusha
popf
js
dec
adc
jae
dec
lahf
fisttpl
dec
dec
xchg
stc
aam
adc
mov
inc
pop
jmp
cmc
cmp
fnstsw
add
and
sub
xor
push
movsb
mov
test
mov
loopne
xor
and
mov
sbb
mov
fdivs
dec
mov
xor
xor
hlt
add
shl
fsubp
and
in
mov
sub
jb
out
cmpsb
mov
xor
pop
cld
test
mov
cmc
aas
insl
pop
rclb
jnp
data16
xor
mov
inc
lahf
xchg
stc
in
std
das
popf
into
jecxz
xor
call
into
jl
push
loop
ljmp
lret
or
mov
repz
test
fdivrl
imul
dec
push
addr16
int
dec
jle
aas
clc
sarb
out
rclb
adc
mov
mov
out
and
out
repnz
mov
push
dec
cmpl
int
icebp
cmc
or
xlat
es
shr
jmp
pop
test
in
hlt
jl
outsl
and
es
loop
adc
fmull
loope
adc
dec
sbb
jae
cs
ret
cltd
fbstp
pushf
int
cs
stos
loop
fisttpl
je
in
popa
call
push
sti
fucomi
addb
dec
daa
mov
add
xor
add
adc
cmp
mov
call
iret
aad
and
aas
cltd
popf
dec
push
gs
ja
ljmp
jns
jo
aas
notl
out
sub
in
mov
test
sbb
fstl
inc
cli
into
cmp
push
lea
sbb
pop
mov
xchg
and
es
test
scas
test
out
lods
aad
jg
sub
sub
push
cmc
loopne
lret
push
out
and
xchg
cmp
test
push
jbe
pop
aas
pop
fisubrs
xchg
dec
ret
mov
pusha
xchg
xorb
mov
lret
mov
inc
fsubrs
inc
orb
je
lock
leave
mov
bound
dec
int3
gs
imul
dec
sub
in
aad
aaa
cs
lock
call
shll
call
jl
mov
in
inc
into
ds
adc
sub
fwait
mov
lods
idivb
push
aam
push
into
inc
cmp
add
jge
movsb
lods
add
arpl
and
int3
in
out
pop
push
mov
fst
or
jbe
aad
movsl
inc
add
cli
push
inc
cmpsl
sbb
mov
and
xchg
jns
iret
outsb
jnp
repz
outsl
test
sub
adcb
jne
mov
cmc
mov
cmp
cmp
dec
jmp
jmp
mov
mov
mov
mov
stc
add
fcmovnb
gs
jl
icebp
add
sub
mov
mov
and
inc
arpl
loopne
ja
arpl
mov
sbbb
fildl
mov
sub
xlat
mov
pushf
insl
enter
cmpsl
mov
pop
fsubr
pop
imul
push
ret
cmpl
insb
sbb
cwtl
ss
jb
shll
mov
test
adc
lea
test
imul
cli
adc
push
out
bound
push
notl
push
stos
scas
adc
cmp
out
js
ja
jbe
and
jg
incl
cmp
cmc
ficompl
mov
or
pop
out
aas
cli
or
cmp
retw
and
loopne
xchg
or
stc
jmp
out
jp
adc
and
mov
cmp
insb
mov
mov
mov
insl
push
subb
je
sub
jno
mov
or
or
xchg
adc
mov
or
xlat
dec
mov
mov
push
lcall
and
mov
cmpsb
xchg
dec
jecxz
test
div
inc
adc
pop
xorb
test
sbb
lcall
inc
cmovae
lret
adc
frstors
cwtl
imul
icebp
push
xchg
inc
sti
push
jmp
rcrl
enter
jae
cli
loop
shlb
xchg
lea
movsb
push
push
xlat
xor
imul
mov
adc
dec
bound
iret
rcrl
int
jg
push
jno
pop
addr16
shll
xchg
les
and
push
test
insb
and
or
cmp
movsl
mov
cli
push
xor
test
mov
mov
and
sub
aad
into
adc
pop
mov
fsubrp
out
decb
inc
jmp
daa
cmc
add
cli
enter
idivl
or
cltd
jmp
ficoms
add
pop
lods
js
jg
mov
decb
call
sar
shr
push
clc
shl
cmp
cmc
mov
stc
mov
clc
sub
btc
test
bsf
btr
push
shr
bts
jmp
xchg
bnd
and
add
jbe
sub
sbb
jnp
adc
mov
xchg
test
adc
popa
rcl
stos
out
sub
repnz
ret
jg
out
inc
xlat
push
mov
rcl
push
mov
stc
es
inc
jo
pop
pop
repnz
mov
fwait
dec
repnz
sbb
dec
int3
mov
cmp
or
or
mov
lods
inc
imul
lahf
sub
scas
xor
in
lds
fistps
std
xor
int3
in
mov
xor
scas
enter
dec
mov
mov
or
mov
adc
mov
aas
in
rcr
xor
sbb
push
clc
adc
and
sti
imul
pop
mov
xchg
lods
ljmp
fadd
push
nop
sarb
jg
lds
xor
cmp
in
repnz
xor
cmpsb
repz
mov
inc
inc
imul
push
xor
inc
pushw
pop
lods
xor
adc
int3
enter
mov
jns
add
pushf
pop
in
in
and
stos
pop
push
in
mov
xchg
addb
and
mov
imul
inc
fsubp
in
pop
dec
adc
and
mov
or
xor
ds
cmp
pop
cmp
dec
jo
in
sbb
iret
xchg
sub
sbb
mov
cli
push
ljmp
jnp
test
jecxz
and
sbbb
push
iret
arpl
sub
outsb
insb
cli
jae
xor
fs
ret
cmpsb
pop
mov
inc
cli
and
push
adc
pop
jae
and
dec
adc
popf
scas
jo
jbe
ficoms
ss
and
into
addr16
jbe
int
jp
inc
and
mov
sti
mov
mov
arpl
inc
outsl
sbb
loop
data16
add
inc
adc
movsl
push
sub
ja
js
lods
sub
ret
mov
xor
scas
lcall
xchg
rcrb
xchg
mov
pushf
aam
loop
fadds
fldenv
std
outsb
not
in
mov
dec
add
mov
repnz
sbb
inc
and
imul
cwtl
xchg
mov
arpl
hlt
push
nop
repz
sub
shr
cwtl
int
xchg
popf
in
push
xor
cmp
rcl
dec
jmp
pop
cmp
sub
sbb
incl
mov
sbb
jge
jne
or
call
or
sub
jmp
cmp
cmpsl
shl
or
and
in
push
mov
iret
cmpsl
inc
scas
dec
dec
sbb
inc
loop
mov
and
test
je
stos
int
fnstcw
xchg
dec
xor
bound
data16
icebp
aaa
dec
pop
jnp
repnz
clc
dec
mov
lds
inc
rolb
shrb
mov
push
push
adc
rcrb
and
add
pusha
pushf
movl
pushf
call
outsl
pop
cmc
call
cmp
add
push
ret
push
or
dec
in
jle
inc
leave
repz
out
faddp
jge
leave
or
and
and
sti
add
mov
push
scas
rcll
adc
dec
arpl
lea
pop
fwait
ds
xor
dec
fisubrs
push
fwait
lea
mov
aad
out
fldl
je
push
adc
daa
dec
adc
shrb
jmp
inc
stos
or
xchg
insb
nop
push
in
fcmovnbe
ret
push
sub
sub
ljmp
ja
lea
faddl
lods
cmpsb
xorl
push
repz
adc
sbbl
jge
in
mov
fdivs
shl
sub
add
btr
rol
mov
sbb
clc
rcl
inc
mov
bt
call
mov
not
sub
cmp
add
cmp
cmc
shld
bts
movl
ror
sub
pushf
bts
mov
sub
jmp
pusha
push
lea
jb
jmp
arpl
repz
sub
adc
xchg
sbb
outsb
push
mov
sti
pop
in
jge
mov
dec
dec
cmp
int3
out
mov
sbb
les
aad
sbb
mov
sti
pop
jno
dec
mov
dec
jmp
mov
jbe
call
lea
push
or
inc
mov
mov
cld
cmc
inc
hlt
outsl
cmp
pop
sbb
mov
dec
cmc
push
pop
mov
out
mov
addr16
push
popf
sub
xlat
outsl
xor
gs
pop
mov
add
xor
rcrb
cld
in
mov
in
xor
shrb
mov
add
pushl
mov
mov
inc
cld
or
cmp
shll
dec
dec
stos
pop
jns
dec
adc
lret
outsb
cmp
stos
add
ja
call
lret
and
push
push
testb
add
mov
leave
cmp
sbb
insl
mov
repz
shl
gs
fs
inc
hlt
hlt
popa
xor
push
jno
leave
cmp
aaa
pop
loop
or
adc
inc
call
xor
mov
es
repz
in
sub
push
imul
fmul
mov
out
shlb
idivb
data16
xchg
mov
std
xchg
movsl
lahf
mov
dec
sahf
xchg
jne
andl
stos
add
decl
flds
adcb
mov
cmp
ja
cmp
mov
inc
xor
mov
sub
sbb
xor
sbb
cmpsl
sbb
mov
mov
adc
les
pop
xchg
cmpb
dec
icebp
scas
jnp
int
stos
mov
and
loope
ds
addr16
and
enter
cltd
jge
jp
mulb
pop
fsubl
out
and
and
adc
insb
mov
mov
pop
in
mov
inc
jle
pushl
pushf
movl
pushf
mov
movb
movl
pushl
ret
andl
add
lods
mov
push
cwtl
xchg
push
outsb
rcll
or
popa
les
icebp
sub
movsb
jbe
mov
and
gs
cmp
mov
dec
mov
cwtl
jmp
das
xchg
movsl
add
push
jp
cmpb
not
fsubrs
stos
std
lret
fbstp
add
test
test
je
or
and
rcl
aaa
push
mov
inc
sub
adc
das
cmp
fidivl
sbb
push
mov
sbb
repz
mov
cs
aaa
cmp
cltd
fcompl
add
mov
inc
pop
hlt
add
fstpt
test
je
jg
mov
bound
mov
pushf
lods
pushf
clc
clc
push
sub
bt
xor
jmp
add
add
push
add
pusha
push
add
add
jae
cmp
dec
dec
insl
lahf
pop
xchg
sti
cmc
dec
xchg
jbe
cmp
out
sub
notb
or
mov
pop
popf
sahf
mov
jae
cmpsb
nop
mov
xlat
mov
aaa
sar
mov
cmp
stos
shlb
sbb
mov
test
dec
sti
dec
cmp
frstor
dec
mov
sahf
dec
sub
lods
div
loopne
mov
sbb
into
jle
mov
fisubs
sbb
outsl
mov
pop
fidivrl
sub
mov
out
jae
mov
cmp
sub
push
adc
jo
cmpsb
lahf
and
std
pop
arpl
fwait
arpl
add
sub
mov
add
clc
cmp
mov
cmc
jmp
fsubl
shrb
lcall
loop
stos
jb
sbb
jae
inc
insl
aad
movsl
pop
cmp
mov
mov
cld
outsl
nop
lret
not
fmuls
jbe
dec
add
lock
push
sub
pop
stc
xchg
cltd
sbb
mov
call
mov
mov
dec
in
aas
push
cld
mov
xchg
lds
mov
stos
jmp
mov
in
and
aaa
jmp
scas
mov
rorb
sub
rorl
in
fnclex
shrb
dec
sub
inc
push
into
out
xor
jmp
jbe
pop
xchg
scas
inc
cmpb
bound
fs
ss
mov
jne
pop
imul
xor
sahf
or
pop
loop
dec
test
int
outsl
add
les
push
aas
cltd
mov
mov
mov
pop
xor
fnstcw
popl
push
pop
xor
push
push
not
mov
adc
negb
fsubl
imul
orb
xlat
cmp
testb
stc
mov
adc
test
mov
xlat
stos
fwait
and
test
out
dec
xor
cmp
cmpsb
pop
aaa
jl
pop
addr16
out
inc
or
outsb
movsb
inc
pop
xorb
sbb
push
in
push
cmpsb
adc
shll
mov
mov
and
imul
ficoml
pop
loopne
push
add
jl
cmp
je
cmovg
jnp
adc
pushf
sarb
pop
scas
jo
mov
repnz
mov
cmc
mov
jmp
mov
sbb
stos
in
mov
mov
mov
out
mov
jmp
mov
sahf
mov
adc
in
lods
test
push
cs
push
stos
lret
inc
test
inc
mov
ret
dec
sbb
or
push
mov
and
push
cmp
push
lea
popa
rol
dec
loope
leave
lret
mov
dec
cwtl
jl
ds
in
mov
pop
or
jae
xor
pop
fs
bound
add
sahf
add
adc
decb
out
sub
add
adc
xor
or
mov
or
or
inc
pusha
fwait
std
mov
stc
ret
rol
shrd
mov
das
sbb
pushf
pop
adc
aas
dec
lock
insb
pop
repnz
bound
push
jge
gs
aas
xchg
mov
mov
mov
out
pop
shl
push
data16
call
xlat
fucomip
mov
lock
pop
and
clc
pop
loop
add
addb
subb
jmp
negl
out
popa
add
ds
sub
and
mov
xor
xor
mov
push
xchg
jmp
add
add
rcr
xlat
inc
into
aam
and
inc
arpl
cmp
or
mov
mov
int
pop
movsb
movsl
sbb
call
inc
cli
mov
and
scas
int
ret
test
mov
and
pushf
mov
push
filds
sbb
xchg
je
lds
inc
lods
pop
adc
dec
jle
sub
add
in
sbb
cmp
or
add
add
jns
cmp
loop
js
clc
xlat
mov
nop
sbb
mov
aas
pop
je
dec
scas
test
arpl
mov
sub
inc
test
adc
in
mov
inc
and
push
mov
lea
jmp
mov
cmc
call
push
xor
push
pop
jecxz
sahf
inc
into
xor
cmp
fwait
repz
cld
rclb
cmp
or
xchg
jbe
arpl
cwtl
insb
sahf
mov
dec
mov
xor
xchg
cwtl
lret
lahf
jns
jl
pusha
ljmp
jns
push
mov
lcall
push
add
or
iret
mov
repz
mov
idivb
lret
and
in
dec
fisubrs
repnz
ret
ja
cmp
adcl
pushl
or
mov
stos
add
mov
out
mov
push
aam
mov
fbld
icebp
jge
pop
int
iret
jae
mov
pop
sti
xchg
sbb
pop
bsf
shld
mov
cmc
cmp
sub
jmp
repnz
mov
lea
jne
jp
movb
lahf
pusha
call
pop
sbb
jle
test
stos
popa
fldenv
xor
add
push
hlt
cmc
xor
stc
data16
xor
outsb
lds
out
or
push
jne
shl
sub
xchg
inc
out
out
push
and
push
sub
mov
fstl
shll
or
shll
aam
pop
cltd
test
sub
gs
hlt
mov
and
fisttps
out
dec
cmpsb
outsl
cmc
repz
dec
jle
scas
sarl
push
push
loope
es
mov
je
je
ret
iret
aaa
push
jno
addr16
jno
fwait
sahf
inc
xchg
sub
pop
mov
jp
xlat
enter
pusha
paddd
pop
mov
xchg
and
jbe
xor
add
mov
sbb
aam
mov
scas
dec
in
push
push
and
lock
inc
inc
daa
rep
das
lds
out
out
cmpsl
or
jo
xchg
scas
enter
cmp
or
repz
aam
adc
jno
inc
scas
rolb
or
jmp
push
fmul
xor
leave
pop
clc
dec
insb
inc
ret
and
out
rorl
xchg
aam
movsl
jecxz
cmpsb
cld
inc
loop
inc
mov
push
add
test
inc
pop
les
xchg
enter
fistps
call
sub
iret
xchg
and
ja
call
movl
pushf
push
mov
pushf
pushf
pushl
ret
in
adc
test
sub
sub
add
fwait
cmpsl
sub
cmc
fldl
and
aam
xchg
xlat
lret
xlat
rolb
inc
outsb
or
out
and
repnz
xchg
das
lea
in
mov
adc
mov
iret
push
xchg
mov
outsb
xor
fsubr
xchg
xlat
and
add
inc
or
nop
xchg
mov
fsubr
arpl
or
mov
sbb
mov
sbb
or
lods
fisttpl
sub
fwait
sahf
inc
daa
das
lock
dec
push
fwait
clc
mov
testl
mov
adc
js
xchg
inc
mov
xchg
daa
mov
leave
cmp
push
jl
xchg
nop
mov
icebp
pop
pop
adc
ret
movb
mov
or
in
dec
pop
lret
push
pop
add
and
ret
mov
jge
cmc
mov
mov
fldln2
mov
dec
add
pusha
aad
in
inc
mov
je
xor
cmp
adc
dec
xlat
inc
dec
into
aad
xchg
jle
testl
ja
and
lahf
xorl
out
pop
sub
dec
daa
std
das
rolb
and
jecxz
in
sbb
inc
pushf
jnp
in
mov
mov
inc
das
dec
out
mov
add
dec
push
mov
lds
xchg
sbb
leave
lea
leave
jge
cmc
lret
shll
pusha
stc
lret
mov
sbb
popa
pop
jns
js
sub
mov
roll
cmp
in
jae,pt
aam
add
inc
add
jg
mov
push
sub
mov
mov
pop
jecxz
xchg
lods
dec
jne
enter
jmp
add
sbb
adc
cmp
daa
mov
mov
or
dec
cmp
push
jb
jle
mov
mov
mov
rol
lods
push
icebp
dec
test
shlb
mov
in
mov
mov
sahf
movzbl
shl
mov
test
cmp
call
jmp
ljmp
xlat
xchg
pop
push
ret
push
inc
mov
in
or
mov
inc
cli
sbb
stos
or
iret
daa
dec
notb
jl
adc
inc
jae
icebp
aaa
addr16
lods
mov
sub
outsb
bound
bound
fnstcw
insb
cmp
push
call
dec
add
xchg
dec
scas
cmp
mov
aas
lea
js
enter
fxtract
pushf
popf
mov
xor
jl
push
cmpl
mov
popf
adc
ljmp
mov
push
mov
mov
push
or
push
into
or
psubsb
mov
in
in
mov
ja,pt
inc
ds
mov
push
cwtl
aam
and
psadbw
mov
adc
les
mov
popf
pop
test
mov
mov
inc
pushf
sbb
cld
sbb
andb
xor
je
popa
stc
sbb
lds
test
fsubr
mov
inc
jle
mov
lock
test
negl
sub
clc
fstps
mov
pop
sub
shrb
push
inc
jecxz
leave
inc
inc
in
push
adc
mov
jp
cmp
clc
sub
and
arpl
out
mov
sbb
mov
cwtl
xor
push
adc
mov
outsb
int
jp
push
lds
movb
pop
mov
iret
cs
imul
aad
cmp
jne
mov
or
call
loope
cwtl
mov
int
cld
fcoml
stos
les
push
lds
fnstsw
das
inc
pause
aad
or
xor
cmp
jle
or
mov
add
jmp
adc
int
icebp
in
mov
call
inc
outsl
insl
outsb
inc
aaa
bound
add
aam
adc
xorl
and
adc
jmp
pop
imul
push
lock
xchg
je
xor
sbb
fwait
aas
xlat
jecxz
inc
in
adc
push
movsl
jne
ja
mov
lods
outsl
inc
xor
mov
cmp
iret
imul
cmpsb
lods
mov
ret
popa
jo
jno
stos
leave
loopne
mov
sbb
aad
andb
mov
outsb
insb
int3
mov
adc
out
lea
repz
jae
jae
dec
loope
jns
popf
jle
sbb
mov
icebp
ja
lahf
mov
add
sub
inc
lock
pushf
jl
in
insl
xor
loopne
pop
rcpps
xor
mov
xchg
inc
ret
outsb
scas
jp
das
mov
mov
push
dec
cli
xchg
push
data16
add
adc
addr16
push
xorl
xchg
sbb
push
ret
adc
sub
lret
call
pop
loope
pop
outsl
jns
xchg
adc
fwait
sti
pop
adc
in
pop
dec
mov
mov
mov
mov
into
jle
mov
push
add
gs
cmp
cmp
add
inc
jmp
in
mov
mov
mov
ljmp
inc
dec
inc
push
pusha
xor
jnp
daa
jbe
insl
mov
xchg
fsts
out
mov
mov
inc
sbb
ljmp
cwtl
and
int3
data16
push
jmp
sahf
aaa
jnp
xchg
filds
rolb
fisubrl
mov
lret
xchg
cltd
push
pop
cmc
or
je
sbb
mov
xor
insb
bound
sub
jae
clc
dec
sub
daa
cmpl
fs
cltd
add
mov
test
inc
mov
popf
and
mov
test
cli
loopne
divb
addl
ficoml
popa
cmp
mov
fldenv
nop
sarb
outsl
nop
pushf
ret
dec
cwtl
sahf
adc
inc
cmp
pop
mov
cmp
pop
rcrb
in
mov
xchg
fs
out
lods
push
ds
cmp
sub
pop
movsb
jp
mov
cli
dec
or
mov
mov
inc
sbb
data16
jae
inc
mov
mov
cmp
cmpsb
mov
inc
jl
cmp
aaa
mov
mov
or
repz
movb
out
lret
aad
jo
mov
ja
sbb
adc
push
test
fildll
into
mov
fimuls
and
lods
mov
iret
sub
arpl
inc
mov
mov
lods
cwtl
inc
lock
jbe
mov
inc
mov
dec
lea
cmpb
ds
fnstsw
mov
fisubs
sub
stc
sub
inc
push
lea
jne
rcl
rcr
jmp
mov
xor
iret
jne
add
dec
add
rcr
lcall
push
sbb
cld
inc
outsl
sbb
stos
cmp
enter
sbb
sub
repnz
dec
sub
mov
mov
dec
push
pop
cmp
jb
adc
andl
fmull
cwtl
mov
sbb
nop
cwtl
mov
mov
cmp
test
push
jp
mov
mov
loopne
and
jge
cmp
lea
lods
fbld
inc
xor
pop
mov
icebp
pusha
and
xchg
xor
cmpsl
insb
push
out
xor
push
pop
sub
inc
mov
ljmp
gs
jp
fldenv
adc
fcomi
inc
adc
push
sbb
pop
cmp
ret
in
jmp
enter
inc
insl
out
ret
jo
cmp
cli
mov
mov
lahf
xor
ret
jle
or
jnp
inc
iret
pop
cld
mov
clc
out
dec
dec
mov
ret
leave
mov
js
jo
push
fmull
mov
out
mov
in
mov
mov
lods
int
cmp
ljmp
cmp
add
sub
or
pop
push
xchg
and
stc
mov
sub
inc
push
and
insl
sarb
data16
leave
adc
adc
dec
lea
movsl
mov
cmpsb
xor
adc
lahf
jle
cmp
popa
mov
and
orb
mov
sub
push
push
mov
push
insl
mov
in
movsl
test
scas
dec
movsb
mov
jbe
mov
loope
pop
repnz
inc
push
and
push
add
fsubs
or
movsb
push
in
mov
sub
sahf
hlt
or
push
imul
push
add
mov
test
mov
outsl
dec
dec
cmp
mov
adc
mov
ljmp
inc
pusha
cmp
cmp
adc
push
mov
or
loope
push
and
sbb
pop
sti
xchg
add
imul
jae
pop
ljmp
mov
aam
sbb
int3
nop
lea
sub
mov
lods
cmp
dec
mov
xchg
sbb
push
jecxz
es
mov
fwait
rol
mov
test
xor
add
repz
xchg
dec
icebp
sub
pop
rcl
ja
addr16
test
fwait
shl
sbb
mov
sub
je
jmp
fists
cmp
jecxz
sub
push
out
cmp
mov
mov
sbb
push
inc
dec
aaa
mov
jmp
mov
and
ljmp
sbb
sub
test
push
sub
aaa
xchg
insb
fisubs
mov
inc
cmp
adcl
das
sub
fldl
pop
push
dec
push
das
cmc
gs
push
pop
mov
cmpl
les
push
imul
inc
or
loope
mov
fmul
lods
xchg
push
mov
mov
dec
jb
ret
nop
in
insb
jno
daa
and
sbbl
mov
fcmovnbe
insb
dec
mov
mov
sbb
call
jl
add
xor
stos
xor
mov
aad
imul
mov
xor
mov
mov
xchg
xchg
push
aaa
xchg
mov
lahf
inc
cmpsl
adc
shrb
dec
aas
idiv
cmp
or
in
jge
push
imul
in
mov
cli
mov
das
aam
andl
dec
dec
add
sbb
add
fwait
sahf
or
inc
js,pn
stc
inc
insl
popa
cltd
pop
mov
cmp
adc
in
mov
xchg
or
add
xchg
push
lods
and
push
adc
push
or
fisubl
mov
mov
sbb
jne
scas
daa
ret
push
push
in
xchg
movsb
loopne
mov
jns
xchg
out
lcall
jb
inc
inc
jle
jl
cmpsl
xlat
lea
mov
daa
movsb
sub
idiv
test
jbe
dec
xor
mov
adcb
test
into
loope
sub
test
pop
and
aam
mov
xor
fldpi
mov
inc
imul
sti
inc
xchg
arpl
mov
mov
cmp
dec
or
cwtl
fldl
mov
cs
inc
fwait
dec
flds
fwait
sub
push
repnz
in
mov
arpl
ljmp
in
pushw
orl
out
notl
nop
adc
sub
scas
out
inc
pop
mov
push
add
inc
push
lock
mov
pop
iret
jl
or
dec
rcrl
xchg
lret
jne
notb
aam
pop
aad
daa
xchg
mov
push
mov
push
dec
mov
loopnew
add
lahf
and
dec
xchg
in
and
fwait
popa
pop
in
mov
ja
dec
and
mov
jnp
xchg
inc
les
pop
mov
sahf
dec
repnz
out
jmp
aas
jo
cmc
ret
dec
push
icebp
mov
mov
mov
inc
pop
iret
test
std
shrl
mov
repz
inc
arpl
in
pop
shrb
inc
or
movsb
cmp
std
and
loope
push
addr16
dec
test
pop
adc
data16
jbe
in
xlat
dec
nop
xchg
pop
dec
out
lret
popf
sbb
call
and
fimuls
gs
sub
pop
mov
xchg
sbb
outsl
pop
jae
inc
popa
dec
cmp
inc
stc
and
btcl
std
sbb
ljmp
aam
testl
in
mov
lods
cld
fadds
add
jbe
arpl
imul
imul
imul
jbe
stos
popa
rcrl
push
jp
jno
or
cmp
or
ljmp
mov
jae
lret
xchg
mov
fstp
jae
imul
in
jno
mov
data16
lds
jne
loope
push
mov
pop
xor
arpl
adc
xlat
mov
pop
push
dec
ja
sbb
in
and
and
add
clc
outsb
jl
pusha
test
scas
dec
jb
push
mov
add
cmp
in
je
xchg
into
dec
call
jmp
jp
ljmp
mov
cmp
inc
pop
jmp
lcall
orw
push
sub
mov
xchg
cmpb
ret
decl
lcall
adc
jns
in
dec
adcb
in
mov
test
icebp
pop
cli
inc
sbb
cld
xchg
mov
dec
dec
mov
lods
jl
dec
negb
mov
mov
sub
gs
fistl
xor
push
jnp
test
pop
out
mov
into
int
movsl
push
shlb
dec
scas
aaa
orl
mov
sbb
fs
xor
jbe
test
inc
sbb
gs
ljmp
gs
mov
mov
cmc
jl
enter
fcomps
mov
or
lret
andb
cwtl
les
mov
cld
cmp
in
adc
sbb
loopne
sbb
in
lock
sti
and
sub
sub
std
pop
scas
imul
mov
pop
rol
bsf
mov
cmc
push
and
pushf
jmp
imull
add
or
sub
add
sahf
and
xchg
xchg
mov
mov
adc
test
add
jmp
mov
and
dec
pop
or
xchg
outsb
adc
dec
daa
push
gs
pusha
aam
daa
btc
fisttpl
out
out
pop
xorl
sbb
pop
mov
or
call
or
mov
mov
movsb
adc
and
lock
stos
pop
sbb
add
sub
gs
imul
lock
mov
sub
mov
push
pushf
into
inc
push
outsb
loop
stc
dec
pop
loop
push
repnz
mov
jmp
jb
ret
xor
fisttpll
push
out
and
outsb
pop
test
arpl
xor
cmp
mov
bt
test
pushf
sub
test
stc
repnz
call
push
pop
repnz
repz
adc
sub
pop
xchg
sbb
inc
ficoms
inc
and
and
mov
or
test
sbb
les
mov
cmp
into
adc
repz
loop
cmp
sub
lea
pusha
sbb
or
inc
clc
dec
and
rorl
test
outsb
xor
ds
dec
sbb
mov
xor
xchg
xor
add
imul
xor
cmpsl
fiaddl
addps
test
push
jecxz
push
fildl
test
cmp
mov
repnz
faddp
adc
jle
xchg
icebp
outsl
ljmp
sarl
xchg
pop
xor
fcompl
add
out
out
bound
mov
pop
dec
mov
stc
fnstcw
cmp
cmp
jmp
add
neg
pop
sub
sbb
xchg
pop
call
mov
push
pop
cmp
rcr
jno
mov
jno
icebp
lahf
xchg
int3
lahf
dec
fwait
gs
nop
inc
fstp
add
aas
test
movb
fwait
mov
test
ret
pushf
and
jg
adc
dec
add
or
mov
push
movsl
gs
adc
test
jbe
das
dec
mov
subb
mov
mov
pop
sarl
hlt
mov
inc
repz
mov
mov
dec
xchg
mov
push
jne
aad
xchg
mov
xor
inc
jl
pop
jae
rcl
adc
sbb
filds
cltd
into
mov
adc
lea
int
insb
pop
jnp
cmp
pop
push
ret
adc
imul
jne
lds
in
enter
andb
and
in
mov
in
pushf
bswap
call
lahf
loope
push
out
aam
std
stc
mov
clc
and
cmp
xchg
mov
mov
push
add
mov
mov
xchg
outsl
mov
cs
cwtl
mov
or
shlb
push
pop
adc
scas
or
outsb
gs
sbb
dec
jns
xchg
popf
push
jl
pop
push
jp
inc
adc
mov
ficoms
dec
pop
mov
xchg
adc
mov
mov
and
sub
mov
add
add
fs
mov
lds
fiadds
push
xor
adc
jl
sub
adc
jns
pop
aam
xchg
in
mov
jl
lahf
lcall
mov
sub
adc
or
stc
test
pop
cs
sub
inc
mulb
rolb
sub
lods
add
and
jge
push
das
dec
push
adc
or
ret
cmc
adc
mov
add
xor
testl
adc
cmpsl
scas
fwait
outsl
call
je
pop
mov
mov
xchg
fdivl
cs
sbb
std
xchg
xchg
ja
xor
jmp
loopne
pop
push
pop
or
cmp
add
pop
out
in
mov
roll
jecxz
add
imul
mov
mov
out
pop
xchg
push
push
fmuls
mov
data16
stos
sub
mov
or
dec
icebp
stos
and
icebp
mov
lock
movsb
xlat
rcrl
call
mov
add
out
xor
shrl
cmpsb
sub
push
insb
dec
fldenv
xchg
xor
jnp
push
cmp
ja
push
pop
lcall
inc
aas
subl
fdiv
fidivrl
add
mov
int3
out
mov
jnp
xor
or
es
aad
call
inc
dec
cmp
and
push
mov
mov
push
pop
xchg
clc
js
and
fs
daa
cmpsl
or
imulb
mov
test
mov
not
movb
pop
movsbw
push
pushf
pusha
lea
pusha
movl
pushf
mov
mov
movl
pushf
pushl
ret
xor
pushf
mov
pushf
pusha
lea
jmp
mov
pushf
pushf
cmc
call
rep
not
movsbw
mov
movb
lea
jmp
gs
xlat
call
mov
and
mov
inc
fisubs
cwtl
pop
push
sbb
adc
or
inc
orl
in
adc
cmp
out
retw
repnz
sbb
mov
mov
xchg
pop
jecxz
pop
add
mov
jge
std
out
int
adc
jae
mov
popa
pop
in
rorb
ljmp
mov
dec
sbb
adc
and
iret
mov
pushf
adc
popl
cmpsl
add
sub
mov
cmp
jae
inc
xorl
dec
imul
jno
mov
dec
add
mov
xor
dec
aad
mov
pop
ja
pop
sti
push
add
jl
cwtl
insl
adc
aaa
sahf
pushf
cmp
fcoml
icebp
imul
dec
cmpsb
xchg
imul
mov
inc
fnstenv
movsb
inc
lcall
sbb
and
leave
jmp
push
popf
and
insb
mov
mov
nop
jno
pop
test
int
cmpsl
dec
loop
mov
ret
sbb
je
nop
scas
lods
aaa
aas
shl
jnp
pop
add
aas
sbb
jle
shlb
sti
and
pop
nop
call
push
bound
cli
scas
mov
xchg
jmp
mov
shlb
idivb
mov
and
push
and
add
sub
or
xchg
cltd
cmp
dec
cmpl
adc
xchg
cmc
sub
repnz
dec
inc
aam
mov
ret
orb
push
cmc
jae
je
mov
mov
fstpt
inc
incl
lea
lahf
pusha
mov
push
mov
lea
pusha
push
jmp
xor
cmp
and
shrd
mov
stc
cmpb
pushf
call
jmp
call
pop
dec
lret
pop
xchg
mov
out
xchg
push
add
lods
in
cmp
iret
or
xchg
notl
jae
das
xor
ret
arpl
sub
dec
in
int
jo
mov
jo
dec
mov
sbb
insb
pushf
sbb
outsb
push
sub
mov
jno
push
in
add
mov
jnp
scas
icebp
test
lcall
inc
pop
rcll
rcl
jnp
insl
lcall
das
icebp
outsb
mov
icebp
in
mov
mov
pop
dec
mov
in
xchg
inc
mov
roll
xor
xchg
rol
scas
mov
jns
mov
nop
lods
cmp
dec
mov
xor
hlt
imul
movsb
sbb
lahf
aas
mov
ljmp
lcall
push
pop
and
inc
std
int
shl
mov
cmp
out
mov
or
add
dec
xchg
push
loopne
bound
and
aas
out
dec
bound
lods
xchg
insl
dec
mov
jno
sub
imul
xchg
jns
adc
pop
xor
push
mov
mov
in
negb
xchg
pop
or
inc
mov
repz
pushf
sbb
adc
pop
and
jno
ss
loopne
push
inc
and
lcall
insb
enter
push
lea
push
inc
mov
cmpl
pop
mov
std
inc
adc
pop
in
adc
push
je
lock
xor
and
pop
xor
push
adcl
and
adc
and
bound
inc
std
cmp
xchg
ljmp
mov
mov
sub
fnstsw
add
jae
push
in
xchg
push
jmp
xchg
out
popa
mov
fimuls
pop
sti
jne
popa
mov
mov
add
pop
xor
sub
popf
dec
mov
push
out
out
gs
into
sub
sub
mov
mov
jl
fistpll
std
inc
data16
sub
cmp
popa
cmpsb
xor
int3
mov
xor
ret
fucom
das
daa
into
cli
pop
insb
insl
adc
mov
and
xchg
add
adc
pop
xor
sub
icebp
std
addr16
and
sub
data16
imul
xlat
popf
sbb
dec
stc
and
stos
jecxz
inc
or
fwait
jns
out
ljmp
loopne
push
sti
cli
shrl
jb
mov
jne
int3
popw
sbb
popa
rcrl
test
stos
in
mov
jg
seta
mov
mov
jmp
sbb
cmpsb
add
adc
dec
lods
das
aam
rorb
push
in
bound
lds
mov
push
sysret
faddl
test
mov
popa
in
sti
xchg
shl
repnz
pop
mov
ret
divl
jl
cs
bound
enter
sub
mov
sub
push
loop
sahf
int3
sub
mov
pop
or
mov
ffreep
push
add
mov
fs
mov
inc
enter
cmp
fs
sahf
or
dec
clc
jne
in
mov
xchg
pop
cmp
or
popf
add
ja
add
add
jne
xlat
ja
push
push
add
mov
repnz
lock
ret
cmc
adc
xor
ljmp
jae
jl
inc
adc
icebp
daa
cmp
pop
stos
imul
enter
loope
inc
cmp
mov
es
push
or
pop
pusha
push
or
flds
dec
and
add
ror
mov
push
and
add
sbb
mov
test
bt
bt
rol
stc
test
jmp
mov
jne
xchg
lcall
mov
mov
mov
jp
cmpsb
fstl
jg
pushf
xor
add
subb
dec
mov
inc
add
mov
and
and
cmpsb
inc
mov
loopne
xor
and
and
sbb
lret
into
bound
xor
iret
lret
push
push
stos
cmp
cmp
add
mov
push
lods
test
movb
leave
xchg
int
jmp
data16
sub
dec
or
ror
sahf
fmulp
pop
outsb
fidivl
adc
dec
xor
push
pop
call
adc
inc
inc
aam
or
pop
ljmp
fsqrt
push
mov
movsl
scas
or
jle
sub
mov
cmc
loope,pn
in
sub
add
lea
mov
cmp
aad
popf
sbb
adc
jl
pop
inc
into
fldenv
push
xor
and
inc
lods
pop
ja
insl
dec
mov
fisttpll
int3
xchg
and
xchg
lods
inc
fdivrs
jb
inc
adcb
in
lret
hlt
aaa
mov
jp
in
out
jne
pushf
lret
xor
fsubs
out
pop
jo
cld
test
xorb
jno
pusha
adc
outsl
sti
lret
mov
addr16
int
or
lea
les
psraw
add
and
je
adc
lahf
and
jl
or
pop
dec
jne
lods
in
repnz
or
out
xchg
or
sbb
fnsave
testb
mov
jnp
mov
sub
cmp
jno
and
outsl
mov
mov
sub
rclb
std
ret
push
jno
jne
shlb
or
in
dec
pop
jb
mov
cwtl
sub
fsubp
xchg
pop
jbe
push
aaa
mov
or
adc
lock
ljmp
mov
and
xchg
cmp
push
or
pop
outsl
mov
dec
bound
cs
sti
icebp
push
sub
pop
push
mov
lock
jno
mov
dec
mov
jecxz
loope
sbb
lds
mov
jg
add
nop
sub
pop
sub
mov
repnz
dec
add
sub
lea
sub
jge
dec
insb
in
mov
fs
jne
shr
pop
bt
cmc
clc
jmp
dec
dec
lods
fildll
stos
jl
cmp
ds
popa
push
call
pop
arpl
fstps
push
pusha
pop
shrl
mov
fisubs
pop
maskmovq
testl
mov
bound
pop
nop
pop
cmc
push
stc
fsubl
stc
jge
jle
mov
cwtl
mov
out
iret
dec
jp
mov
test
push
lret
push
mov
mov
push
ret
stos
mov
jno
shll
fstp
add
dec
sbb
inc
mov
cmc
push
mov
add
insb
scas
sub
lods
call
movsb
push
scas
in
mov
inc
movsl
shlb
das
mul
mov
stos
push
fwait
jns
dec
test
or
cli
jne
repz
or
sub
shrl
xor
cmpsl
cmpsl
pop
loopne
imulb
pushf
or
cltd
mov
imul
push
mov
in
in
add
data16
adc
push
stos
xchg
repnz
jl
cs
add
push
outsb
jg
sbb
sub
aad
movsl
sbb
jmp
pop
imul
inc
xor
mov
into
jbe
jp
dec
cmpb
in
mov
add
dec
pushf
lea
je
jmp
jl
cmc
add
jmp
iret
in
sbb
enter
shrb
dec
sahf
sbb
xor
pusha
and
loopne
cmpsl
scas
and
out
cmpl
mov
xchg
mov
sbb
add
dec
mov
daa
dec
mov
popl
inc
and
push
or
mov
call
mov
fisubrs
sub
dec
add
jbe
xor
out
jl
loope
inc
scas
out
imul
cmp
lods
dec
andb
adc
or
andl
jle
roll
mov
adc
adc
mov
lock
jb
mov
stos
je
pop
sarb
and
daa
aam
in
mov
orb
ret
stos
orl
ja
sub
push
pop
fstps
pop
lret
es
inc
int3
jno
aas
and
cmp
js
sbb
push
mov
mov
adc
in
add
fstl
or
ljmp
out
jae
stc
and
aam
mov
ror
xor
dec
lds
sub
xor
in
xor
pop
data16
dec
push
mov
movsl
test
xor
pop
mov
inc
addl
lods
inc
adc
shlb
scas
and
xchg
push
popf
pop
lcall
js
mov
aaa
pop
inc
imul
repnz
mov
push
out
rolb
icebp
inc
insl
sbb
or
adc
and
fwait
das
and
mov
lock
sbb
imul
sub
push
and
mov
jmp
pop
xchg
cmp
xor
push
dec
mov
daa
lahf
test
xlat
insl
popa
add
in
cmp
push
nop
lahf
cmp
dec
inc
stos
es
push
cmp
push
pop
xlat
jb
insb
shr
mov
sub
sahf
insl
addr16
imul
xchg
int3
shll
pop
jnp
cmp
jg
xchg
push
cmp
aad
lcall
loop
mov
add
xchg
ljmp
jle
add
aaa
mov
pushf
pusha
xchg
stos
stos
mov
jge
and
inc
cmpsb
inc
adc
inc
aas
sub
jle
repz
das
jge
mov
loop
adc
lret
pop
scas
int3
ljmp
fadds
das
push
jecxz
not
jle
incl
xlat
mov
mov
pop
icebp
out
xor
test
push
loope
cmp
mov
call
int
sub
ja
sub
pop
xchg
outsb
mov
dec
pushf
pushf
shr
movl
push
lea
je
jmp
mov
fbld
dec
das
dec
mov
idivb
inc
add
mov
bound
cltd
femms
sub
fsubs
xchg
push
sbb
push
test
ja
cmp
stos
cmp
sub
or
js
ljmp
push
sub
dec
pop
xor
out
sbb
sbb
mov
inc
dec
icebp
addr16
push
adcb
pop
lds
sbb
scas
push
cmp
jnp
inc
mov
lock
movsl
mov
cmc
test
jne
addr16
pop
scas
jecxz
fs
pop
loopne
mov
gs
je
in
mov
add
mov
fs
jmp
mov
xchg
stos
movl
mov
adc
lret
aas
push
test
mov
jae
mov
pop
das
nop
mov
mov
adc
pusha
rcl
xchg
movsb
cmp
pop
inc
je
popa
xor
pop
xor
jno
push
in
sahf
stos
dec
int
cmovae
lret
xchg
aad
call
jnp
nop
mov
cmp
dec
je
and
je
pusha
fildll
loop
inc
adc
out
cmc
mov
repnz
sbb
out
add
sbbb
pop
push
pop
cmp
xor
or
aas
xor
xor
and
sub
cmp
xchg
popa
inc
push
pop
cmp
rcll
aad
out
mov
xor
dec
test
adc
xchg
dec
dec
imul
leave
fs
out
jb
mov
in
adc
lahf
lds
enter
pop
lods
dec
inc
or
lea
xchg
aam
test
cmp
in
mov
cmp
sti
insb
inc
mov
stos
cmp
fucomi
lahf
lret
sub
mov
push
pop
cmp
sub
or
stos
mov
xlat
fisttpl
mov
adc
mov
lret
repz
push
mov
outsl
adc
int
icebp
inc
int
hlt
shrl
fildll
sbb
push
mov
pop
adc
mov
or
xlat
mov
int3
cli
fisttps
dec
cmpsb
add
pusha
xchg
jb
rcrl
pop
dec
mov
jecxz
scas
sub
pop
and
outsl
out
aaa
or
lret
xchg
adc
or
mov
aaa
es
xor
sahf
repnz
sbb
sbb
sbb
sub
aad
xor
shr
ficoml
jns
stos
ja
fildl
mov
loop
dec
xchg
mov
dec
sub
cli
fisubs
sbb
pusha
cmp
js
jae
lds
mov
popa
inc
jae
inc
pop
andb
push
pop
inc
stc
fnstcw
adc
loope
dec
je
cmp
push
xchg
out
push
jbe
dec
mov
out
xlat
mov
ss
shll
xorb
out
xlat
xor
jno
mov
jle
sbb
fildl
adc
dec
mov
add
inc
push
push
dec
imul
enter
fstpl
push
shll
sub
mov
mov
mov
sbb
rcr
bsf
sub
bswap
inc
ror
lea
jmp
add
mov
push
push
and
insl
xor
in
push
or
xchg
addr16
jg
rcr
in
push
es
mov
xor
shll
cmp
sti
inc
scas
addb
shrl
add
adc
cmp
jl
jns
shll
push
lret
mov
mov
mov
cmc
lahf
lods
sub
jo
insl
aad
jo
mov
scas
mov
sub
push
add
dec
jns
sbb
and
xchg
inc
fisubrl
mov
or
test
mov
mov
fldl
rorl
push
mov
sub
sbb
adc
adc
fcoml
outsb
inc
lcall
leave
orl
ficoml
movsl
push
push
push
pop
sub
aam
and
leave
bound
inc
mov
outsl
in
loop
comiss
add
sub
lea
dec
or
mov
leave
push
insl
jecxz
fstps
iret
inc
cltd
push
call
mov
mov
inc
mov
sbb
ficoms
dec
push
jno
inc
add
xchg
xor
sub
jp
jnp
add
mov
sbb
mov
cltd
jbe
in
cmp
mov
repz
jns
lods
mov
jge
cmc
and
push
xor
call
nop
mov
stos
sar
mov
popf
pop
pop
icebp
dec
adc
ds
cmp
push
dec
xchg
cmp
shlb
lods
jle
pop
mov
cmp
in
mov
mov
sbbb
add
sub
jmp
mov
movsb
inc
rolb
mov
jnp
inc
imul
outsl
xor
scas
fidivrs
and
scas
pop
stos
into
inc
lock
pusha
testb
into
sub
jl
inc
cld
lods
and
ljmp
sub
pop
xchg
mov
inc
je
push
pop
pop
adc
rol
jnp
in
sbb
or
jno
ficomps
iret
out
loope
imulb
jp
mov
push
sahf
loop
inc
in
stos
movsb
jbe
inc
jmp
fiaddl
sbb
cmp
in
mov
mov
insl
lods
mov
pop
lret
sub
push
push
xchg
sub
aas
xor
lock
add
jne
mov
mov
jo
cmp
mov
sbb
jae
xor
fmuls
pop
mov
mov
inc
adc
push
cld
mov
mov
mov
cmp
mov
inc
mov
loopne
arpl
push
xor
mov
test
push
bound
in
bound
cmp
icebp
jecxz
sub
sub
int
dec
xor
mov
cmp
xchg
mov
push
je
aas
test
sbbb
cmp
or
aaa
adc
mov
and
jbe
neg
btr
mov
adc
shl
btc
ror
add
jmp
xor
stos
dec
mov
inc
nop
imul
mov
in
ffree
push
or
mov
nop
sub
dec
sbb
and
hlt
and
pop
mov
sub
mov
mov
mov
inc
or
push
jo
nop
push
pop
pushf
cwtl
mov
mov
cmp
leave
dec
ret
dec
fiadds
cmp
mov
aas
imul
mov
ljmp
inc
mov
cmpsb
shlb
aaa
shl
fucom
ror
lds
xchg
movsl
daa
aad
pop
or
sub
mov
or
aas
mov
mov
fistpl
inc
lock
and
mov
lret
sbb
xchg
xorl
lahf
shrb
pusha
leave
mov
dec
movsl
test
cmp
inc
fildl
jns
mov
push
adc
stos
add
dec
or
pop
int
rolb
push
fisttps
dec
mov
out
std
dec
mov
clts
adc
ja
fsubp
data16
sub
add
js
adc
out
outsl
mov
pop
xor
push
cmp
jge
movsl
jecxz
mov
jmp
ds
xchg
pushf
cmpb
cmc
mov
dec
rorl
xor
pop
cmpsb
lods
mov
xchg
inc
push
movsl
pusha
push
jnp
or
sbb
in
mov
add
jae
cmp
pushf
jmp
pushf
not
push
dec
cmp
clc
bt
pushw
popfw
pusha
jmp
hlt
xchg
push
xor
jns
inc
out
gs
push
out
sbb
push
enter
adc
fcmovb
cmp
mov
outsb
pop
test
mov
lcall
pop
mov
xchg
sub
and
scas
mov
scas
xchg
cmc
inc
jg
xor
out
inc
aaa
push
push
jmp
cmp
arpl
imulb
xchg
subb
jns
add
cmp
sbb
pushf
ret
or
into
hlt
sbb
mov
pop
scas
inc
fwait
or
xchg
cmp
outsl
in
jmp
adc
imull
out
fs
jae
pusha
push
pushf
lea
jmp
iret
addb
popf
enter
xor
fwait
pop
loop
dec
test
push
and
cmp
cwtl
xchg
and
add
xchg
pop
push
lcall
rcll
jno
jg
int3
or
mov
lods
aad
push
stos
imul
cmp
sbb
sub
insl
iret
cmp
xchg
pusha
movsb
out
shrb
ss
out
jg
sub
fiaddl
push
cli
dec
sbb
lock
xchg
clc
ret
or
frstor
outsb
cld
outsl
jmp
jno
mov
ds
mull
xchg
insb
fucomip
mov
fldcw
mov
xor
push
movl
cwtl
nop
insb
xchg
notl
sub
pop
xchg
and
stc
mov
jmp
adc
lds
loopne
jecxz
mov
into
sub
out
adc
icebp
push
clc
les
cmpsb
fistpl
xchg
add
adc
pop
adc
stc
clc
jp
jl
adc
pop
adc
mov
sahf
adc
mov
sahf
std
xor
gs
jb
cmp
push
call
nop
out
inc
fbld
push
pop
inc
in
jmp
push
idivb
stc
mov
dec
sbb
test
bound
pusha
fdivrl
jl
inc
dec
das
fs
dec
rcl
les
int3
movsl
adc
rcrl
xchg
pop
mov
dec
cmpsl
or
sbb
xchg
testb
cltd
lds
xchg
rcrl
setnp
push
mov
pop
movsbl
bswap
mov
jmp
jbe
insb
js
xor
bound
add
mov
addl
jecxz
shrl
mov
dec
scas
mov
hlt
dec
pop
rcrl
dec
je
adc
pusha
jne
lods
cwtl
dec
lcall
movsl
ss
cmp
nop
repnz
mov
out
dec
xchg
dec
push
sahf
xor
push
or
mulb
andb
mov
adc
iret
imul
in
jb
push
dec
call
add
xor
xor
and
fsubrs
lock
ljmp
mov
inc
sub
insl
inc
add
movsl
inc
mov
outsb
or
incb
add
mov
fcomi
xor
dec
scas
and
ss
mov
cmp
mov
neg
test
xchg
or
and
mov
cmpsl
sub
outsb
mov
in
mov
mov
shlb
mov
pop
xchg
inc
clc
sub
nop
maxps
cmpsb
push
test
xchg
mov
vmulpd
roll
xchg
rcrb
pushf
adc
fstp
rcr
sahf
jecxz,pn
in
ljmp
enter
xchg
cmpsl
jns
cmp
nop
jmp
mov
scas
das
xchg
xchg
out
mov
inc
mul
stc
mov
add
pop
loop
cmp
push
fbld
add
mov
jnp
xor
inc
aad
addr16
pop
decl
xor
mov
push
mov
lea
cmp
loope
ja
aam
pusha
sub
mov
mov
es
icebp
add
jp
jb
pop
in
and
adc
lahf
mov
add
stos
ljmp
push
repnz
out
mov
push
jmp
add
inc
push
je
arpl
jae
push
inc
push
outsl
js
add
inc
cwtl
incb
lds
es
adc
insb
mov
scas
pusha
fstps
jo
mov
or
sbb
cmp
imul
or
in
ret
leave
test
xchg
jl
push
outsb
cwtl
movsl
pop
add
mov
aaa
pop
les
pop
fisubrs
dec
xor
rcr
in
aaa
or
pop
mov
mov
push
sbb
mov
adc
jp
xchg
pushw
mov
cmc
push
mov
cld
and
sbb
cltd
sarb
pop
adc
sub
lahf
jae
cmpsl
push
cmp
testb
adc
sub
in
mov
dec
xchg
fsub
jo
and
ret
adc
push
sub
in
or
repnz
test
out
int3
outsb
insl
leave
je
mov
mov
icebp
pop
nop
pop
mov
rolb
arpl
push
insb
ljmp
push
adcl
fmul
xchg
sub
les
fwait
lea
fwait
inc
cs
jge
and
imull
stos
movsl
dec
dec
inc
and
inc
dec
stos
push
adc
rorl
xchg
sub
mov
fwait
out
divl
dec
pushl
int3
jl
es
scas
testl
mov
or
xchg
sub
cmpsl
sbb
in
mov
and
or
scas
pushf
call
and
scas
dec
jno
je
sarb
mov
test
jae
jae
push
push
push
ljmp
loope
out
leave
jb
cwtl
scas
out
push
hlt
jb
sti
popf
dec
sub
mov
subl
leave
jmpw
fimull
push
xor
add
mov
mov
push
jl
sti
dec
cs
xor
pop
test
aas
je
add
js
mov
cmp
sbb
cmp
out
add
and
fldt
inc
jmp
mov
jecxz
adc
xchg
xchg
mov
aam
push
mov
arpl
cmp
mov
pop
jns,pt
cwtl
fsubrp
cmpsb
push
loope
or
mov
xor
mov
cmp
cli
mov
add
inc
inc
sbb
movsl
xlat
mov
les
xchg
test
mov
out
and
dec
stc
in
mov
inc
and
push
scas
dec
pushf
lea
jmp
cwtl
out
cmp
aad
sbb
cmp
pop
scas
jl
and
js
negl
sti
movsl
add
sub
lock
dec
inc
addl
push
aas
xor
dec
decb
sub
jecxz
ret
xchg
push
lock
cmp
insb
pop
repnz
int3
das
inc
push
dec
jecxz
callw
es
std
mov
xchg
cli
and
sbb
fprem1
cmpsl
xchg
adc
dec
inc
mov
inc
xor
shl
ja
add
pop
jnp
test
insl
mov
outsb
ja
dec
xor
cltd
push
push
cmp
cltd
mov
adc
jno
cmp
pop
lods
aam
push
lds
mov
lcall
jo
sbb
je
pop
adc
push
cmp
mov
lea
cwtl
mov
cwtl
lea
pusha
jmp
jmp
clc
cmc
test
add
jmp
or
mov
cwtl
ret
xchg
xor
sbb
icebp
loope
loope
dec
arpl
and
cmc
xor
jnp
ret
adc
inc
fbstp
test
jmp
dec
push
daa
cmp
jbe
xor
cwtl
rcr
jge
lret
ljmp
mov
adc
push
push
aad
mov
jbe
xchg
inc
xor
cmpsb
nop
cmp
adc
cmp
mov
adc
or
sub
mov
xchg
adc
mov
leave
sysenter
push
add
andb
test
rcl
lcall
gs
jge
inc
fcomp
jg
out
sub
adc
out
les
jnp
in
mov
lcall
mov
sbb
aam
int3
loop
sbb
mull
aaa
mov
sbb
adc
shl
add
add
pop
fbld
xor
mov
ficoms
inc
and
xor
and
sub
cmp
ret
call
xchg
sti
dec
inc
fwait
cmp
inc
sub
xor
pop
movsb
push
fadd
mov
insb
mov
les
pop
in
mov
outsl
test
push
mov
popl
mov
adc
daa
pushf
or
rorb
lock
dec
add
push
notb
mov
or
shrb
lret
xchg
xchg
and
xchg
mov
cmp
fisubl
rcrl
gs
outsl
stos
cmp
add
dec
sbb
enter
mov
shlb
loope
scas
xchg
add
pop
pop
cmp
out
test
add
and
inc
loop
cwtl
stos
mov
sub
sub
push
add
mov
jg
mov
mov
cli
pmaxsw
shrb
xchg
inc
push
mov
outsb
mov
xchg
ss
repz
or
xchg
gs
add
mov
and
popf
and
ja
sti
lcall
jnp
in
out
sbb
mov
pop
xchg
movsl
jb
ret
cmp
or
xchg
push
adc
in
lock
jbe
pop
les
lahf
or
movsb
xor
mov
lret
push
sub
or
pop
nop
test
outsl
data16
adc
dec
dec
rcll
rcrb
imul
push
out
dec
dec
lahf
push
inc
test
cltd
sbb
pop
mov
ficomps
aam
nop
imul
xchg
repnz
mov
call
add
xchg
pop
in
mov
fwait
inc
mov
xor
pop
mov
bound
adc
push
mov
mov
xchg
fs
scas
fisttpl
js
inc
shrl
adc
cmp
addl
add
pop
jne
call
out
loope
in
ret
cmp
mov
mov
popa
lret
jns
inc
incb
xchg
pop
call
lods
push
pop
cmp
bound
icebp
repnz
test
push
push
popa
push
jg
mov
push
test
movsb
in
mov
jb
mov
push
in
es
jl
or
lods
fidivs
mov
sub
pop
outsl
dec
js
add
xor
lods
test
pop
in
lcall
iret
dec
std
pop
pushf
mov
aad
in
adc
in
outsb
sarb
add
in
or
pop
je
mov
dec
clc
scas
std
gs
sub
nop
fwait
or
add
inc
mov
mov
clc
jle
in
mov
popa
cmp
movl
fs
call
pushf
mov
movb
mov
lea
jb
push
pushl
ret
clc
movsl
adc
mov
dec
fisttpll
xor
add
jne
xor
scas
mov
and
jmp
std
add
test
cmpsl
mov
stos
sub
mov
xor
movsb
test
jno
lahf
xchg
xor
inc
sbb
fnstcw
cmp
xor
stos
xor
xor
loope
add
cmpsl
or
popa
push
mov
jbe
shl
jbe
sbb
mov
push
mov
pushf
in
iret
jne
or
mov
in
insb
nop
pop
ret
pusha
mov
notl
pop
push
lock
jns
out
cmp
scas
adc
add
ss
scas
lret
push
inc
pop
and
loope
sub
xchg
and
and
aas
cs
sub
push
addr16
jmp
outsl
jge
pop
imul
push
test
lock
cld
lahf
enter
or
sub
lret
int3
cwtl
fildl
push
pop
std
mov
mov
cmp
in
sbb
ja
aad
jmp
mov
push
inc
sbb
mov
loope
fs
cmp
out
inc
cmp
les
stos
leave
dec
sbb
in
adc
cmpsb
dec
enter
bound
ds
jge
fld
js
je
negb
inc
mov
lret
mov
test
imul
sub
ljmp
lret
pop
mov
mov
mov
cltd
bound
test
sahf
mov
ret
inc
xchg
in
cmp
push
in
mov
int
dec
bound
mov
in
pop
pushf
dec
orl
stos
imul
pop
repz
pop
mov
dec
mov
inc
mov
jl
fs
cwtl
andl
mov
mov
sahf
pop
shl
inc
roll
inc
ret
mov
insl
scas
stos
and
xchg
jle
movsl
fwait
leave
and
or
rclb
iret
imul
loop
cld
sbb
sbb
imul
and
pop
push
xor
sbb
popf
imull
mov
xchg
inc
cmp
fistpl
in
jb
mov
fs
ja
pusha
mov
jmp
call
pusha
call
call
pusha
pushf
popl
pushf
movw
pushl
popl
pushf
mov
pushf
push
lea
jmp
dec
mov
rcl
bswap
pusha
lea
mov
mov
add
call
call
pushf
shr
pushf
clc
cmc
or
bt
push
bt
xor
movb
pusha
push
push
inc
jmp
mov
cmc
call
shl
lea
jne
pushf
mov
push
pushf
movb
pushf
popl
mov
pusha
movb
movw
pushl
popl
movw
push
mov
pushf
lea
jmp
pushf
mov
lea
jne
pusha
mov
mov
push
lea
jmp
movb
mov
pushf
popl
pusha
call
jmp
mov
movzbl
movzbw
movzbw
mov
call
adc
dec
mov
neg
xor
btc
mov
test
bt
pushf
stc
add
pusha
pusha
mov
pushf
movb
push
mov
lea
jmp
push
pushf
popl
push
push
movw
call
push
pushf
mov
movw
pushf
lea
jmp
movb
mov
movb
pushf
popl
jmp
test
adc
mov
shr
sub
test
call
jmp
inc
xchg
xchg
lea
bsf
or
jmp
sub
cmp
shld
mov
inc
dec
neg
movsbl
lea
bt
and
push
sub
shl
bt
test
lea
pusha
btc
call
movb
mov
push
jmp
sub
mov
setg
mov
stc
sub
pushf
cmc
cmp
shl
mov
jmp
mov
jmp
push
mov
pushf
lea
jmp
pushf
popl
push
pushf
push
mov
lea
jmp
mov
pushf
mov
push
jmp
bsf
neg
lea
stc
ror
bt
lea
sbb
adc
sub
pop
not
shrd
xor
bt
bt
ror
movzbl
mov
btr
ror
btc
mov
push
jmp
cmp
neg
pushf
inc
call
pushl
mov
pusha
call
pushf
mov
call
pushf
popl
lea
jg
push
pushl
popl
pusha
pushl
pushf
push
lea
jmp
mov
pushf
lea
jo
pushf
jg
popl
push
pushf
movb
lea
jmp
pusha
divl
push
pushf
mov
lea
jns
mov
push
pushf
movb
jmp
call
clc
pushf
shl
call
sub
jmp
mov
call
decl
jmp
stc
btr
not
bts
bts
rol
and
not
shl
and
pushl
adc
bt
mov
jmp
pushf
pushf
popl
mov
pushf
lea
jmp
jmp
push
add
push
mov
pusha
pushf
lea
jmp
call
or
btr
shl
stc
mov
jmp
rol
mov
clc
mov
clc
pusha
cmp
sub
jmp
mov
pushf
dec
mov
cmp
mov
xor
bt
mov
pushf
pushf
cmp
sub
call
jmp
jmp
test
pushf
sub
pusha
jmp
mov
movw
lea
jmp
push
pushl
clc
mov
stc
stc
sub
pushf
lea
jne
cmc
clc
sub
pushf
mov
xchg
mov
call
setns
push
movzbw
inc
lea
btc
lea
not
lea
jb
not
rol
push
or
neg
neg
and
push
mov
clc
push
add
call
not
cmc
bt
jmp
movb
pushf
popl
jmp
bsf
rcr
and
mov
test
stc
xchg
je
xor
clc
clc
bt
xchg
stc
pushf
movb
rol
jmp
pushf
popl
pushl
push
movb
lea
jmp
not
push
push
add
push
bt
sub
push
movb
mov
push
pushf
mov
lea
jmp
pushl
mov
jmp
pushf
jmp
test
sub
cmc
mov
cmc
xor
pushf
sub
bt
clc
clc
jmp
neg
xchg
mov
sub
mov
cmc
pusha
movb
clc
sub
pusha
bt
pushl
shr
pushf
mov
push
jmp
pushf
mov
jmp
pushf
pushf
popl
jmp
movb
pushf
mov
jmp
mov
mov
push
pushl
pushf
lea
jmp
call
push
movl
ror
bt
push
cmp
bt
add
cmc
bt
pushl
sub
call
mov
pushf
pushf
pushl
pushl
lea
jmp
mov
pushf
pushl
ret
pushf
popl
push
pushl
push
lea
jmp
jmp
pushf
push
mov
mov
jmp
rcl
mov
bt
jmp
inc
xor
rcr
mov
clc
add
bt
mov
cmc
add
movw
pushf
movb
lea
jmp
jmp
movzbw
mov
call
rol
sub
mov
pusha
xor
mov
sub
jmp
lea
lea
je
mov
pushf
push
pushl
pushf
lea
jmp
dec
bt
stc
bt
test
cwtl
bt
test
sub
call
pushf
mov
mov
push
mov
pusha
pushf
popl
lea
pusha
call
pushf
call
mov
mov
pushf
movb
push
lea
jmp
test
call
pushf
call
push
call
pusha
sub
push
movw
bt
stc
ror
test
pushf
not
jmp
push
mov
movb
push
mov
movb
mov
lea
jmp
movw
call
pushf
mov
call
bt
xor
mov
stc
test
pushf
add
cmp
xor
call
pushl
mov
pushf
call
call
pushl
mov
lea
lea
xchg
call
movsbw
shrd
lea
cmc
push
cmp
jmp
mov
push
mov
pusha
pushf
movw
jmp
push
mov
pushl
lea
jmp
mov
push
pushf
pusha
pushf
popl
push
lea
jmp
jl
pusha
mov
call
sub
pushf
push
stc
jmp
mov
call
mov
call
pushf
jmp
mov
pusha
movb
movb
lea
jmp
pushl
movw
lea
jne
call
call
mov
movl
pushl
popl
push
mov
pushf
pushf
lea
jmp
mov
push
mov
pushf
lea
jmp
pushl
popl
movb
push
pushf
lea
jmp
lea
js
push
lea
jne
pusha
mov
mov
push
mov
lea
jmp
cbtw
shr
cbtw
shrd
mov
call
pushf
popl
lea
jg
popl
pushf
pushf
pushl
pushl
lea
jmp
pusha
pushf
popl
pushf
lea
jmp
mov
pushf
push
pushf
push
lea
jmp
cmp
sub
clc
pushf
clc
shr
call
sub
mov
pushf
adc
setne
mov
pusha
cmc
add
jmp
mov
cmpl
mov
pushf
mov
jmp
pushl
popl
mov
lea
jmp
push
pushf
popl
pushf
push
mov
pusha
lea
jmp
pushf
popl
movb
pushl
popl
mov
movb
lea
jmp
mov
pushf
jmp
add
movl
call
setne
rcr
ror
sar
not
test
bswap
add
adc
add
call
pusha
push
mov
movb
pushf
push
lea
jmp
and
mov
ror
pushf
movsbw
mov
clc
not
call
push
mov
mov
call
push
call
ror
mov
sar
neg
pushf
rol
mov
mov
movw
jmp
pusha
movsbw
rol
btc
rol
inc
movsbw
bsr
and
bts
rol
bsf
mov
push
cmp
add
call
pushf
popl
pushf
lea
jmp
not
push
movsbw
pushl
inc
jmp
pushf
popl
pusha
push
mov
call
ror
pusha
daa
mov
pusha
neg
call
shrd
xor
bsr
call
pusha
pushf
mov
pusha
push
call
stc
adc
lahf
notl
das
mov
pusha
mov
bt
cmp
sub
bt
and
pushl
lea
jle
pushf
pusha
pushl
popl
pushf
movb
lea
jmp
cmp
test
pushf
shrd
pushf
call
pushf
mov
pushl
jmp
pusha
bt
mov
pushf
clc
sub
pushl
mov
mov
push
movw
pushf
mov
lea
jmp
mov
pushf
call
jmp
mov
push
movw
mov
pushf
lea
jmp
xchg
movsbl
not
movsbw
xchg
mov
movzbl
lea
jmp
call
mov
movb
lea
jmp
jmp
pusha
movl
pusha
mov
mov
mov
jmp
push
dec
sar
mov
sar
stc
mov
cmc
cmp
cmc
pusha
sub
pushf
shl
push
movw
mov
mov
jmp
pushl
mov
pushf
mov
pusha
mov
pushf
movb
pushf
popl
movl
lea
jmp
mov
push
pushf
push
mov
movw
pusha
pushl
call
pushf
push
mov
pusha
mov
push
call
mov
pushl
call
pushl
popl
pusha
pushl
pushf
lea
jmp
lea
ja
jno
mov
sar
shl
clc
aad
lea
aad
pusha
bt
sub
cwtl
lea
cmc
add
shld
shl
and
movsbl
rcl
sub
lea
pusha
pop
pushl
mov
call
pushf
lea
je
jmp
bt
lea
mov
lea
jo
push
stc
sub
pushl
pusha
ror
jmp
pusha
push
push
pushl
pushl
popl
push
pushf
pushf
lea
jmp
push
pushl
popl
movb
push
pusha
lea
jmp
mov
pushf
call
setns
call
pushf
mov
pushf
mov
push
pushf
popl
pushl
lea
jmp
call
push
mov
jmp
pushf
movl
not
not
mov
pushf
not
dec
mov
pusha
inc
movw
bswap
call
add
lahf
dec
mov
sbb
mov
sar
and
neg
mov
jge
bt
bt
cmc
add
jmp
mov
movb
pushl
mov
lea
jb
push
pusha
pushf
popl
call
jmp
stc
cmc
bt
sub
jmp
pushf
pushf
popl
lea
jge
push
pushl
popl
pusha
movb
pushf
mov
lea
jmp
bt
add
mov
call
jmp
aad
mov
jmp
bswap
jmp
pushf
mov
jmp
pusha
jmp
push
mov
pushl
lea
jmp
push
std
push
mov
pushf
pushl
push
lea
std
xchg
pusha
bswap
cld
cld
mov
movw
jmp
sar
rol
bsf
mov
btc
bsf
bts
shl
add
bt
rcr
push
btr
sub
add
shl
xor
bt
rcl
mov
jle
pusha
shl
cmc
push
shr
bt
clc
pushf
or
bt
push
xor
jmp
call
pusha
std
mov
movsbw
pushf
pusha
pop
mov
call
cwtl
pushf
mov
bswap
mov
pusha
jmp
stc
sub
call
bt
sub
pushf
jmp
shr
bt
mov
clc
bsr
shr
add
btr
js
btc
sub
jmp
clc
test
pushf
xor
bt
xchg
pushf
jmp
clc
call
clc
call
shr
jmp
mov
pushf
pushf
pushl
push
lea
jmp
lea
jne
or
bsr
ror
test
mov
stc
jmp
mov
pushf
push
mov
movb
lea
jmp
pushl
popl
pushf
pushf
pushf
lea
jmp
test
push
pushl
or
movw
push
lea
je
stc
push
bt
movb
sub
pusha
test
movb
cmc
xchg
push
bt
mov
test
sub
call
add
add
clc
test
cmp
pushl
bt
add
test
popf
pusha
movb
lea
jmp
pushf
pushl
mov
mov
push
lea
jmp
bt
add
cmc
mov
stc
test
call
clc
mov
mov
mov
clc
pusha
test
cmc
add
call
and
dec
bts
cmp
sub
movsbw
movsbw
movsbw
mov
not
bswap
movzbw
pushf
movzbw
jmp
call
mov
lea
cpuid
jmp
push
call
push
pushf
popl
push
pushf
lea
jmp
mov
pushf
pushf
movb
lea
jmp
pushf
rep
bsr
bsr
bsr
bsf
mov
bsr
mov
jmp
bsf
adc
and
dec
mov
bt
btr
mov
or
dec
not
neg
mov
call
call
pushf
mov
mov
mov
movb
lea
jmp
push
call
mov
clc
cmc
stc
cmp
add
pushf
lea
jb
push
movb
mov
push
lea
jmp
bsr
mov
sar
aas
mov
clc
mov
jmp
mov
pushf
jmp
jmp
cmc
add
sub
shl
btr
lea
mov
jmp
call
inc
jmp
push
pushf
mov
movw
pushl
lea
jmp
jmp
push
pushf
pushl
popl
push
pusha
pushf
lea
jmp
call
pushl
mov
pushl
jmp
pusha
pushf
bswap
stc
test
call
test
jmp
pushf
popl
pushl
lea
jmp
pusha
mov
push
lea
jmp
mov
mov
pushf
pushf
pushl
lea
jmp
push
pushf
pushf
popl
call
sub
cmc
pushf
add
mov
mov
pushl
pushf
pushf
pushf
lea
jmp
mov
bt
test
clc
sub
push
pushf
jmp
pushl
popl
pushl
pushf
pushf
lea
jmp
call
setbe
dec
pushl
jmp
mov
jmp
jmp
and
test
cmp
push
pusha
lea
jne
dec
cmp
xorb
movzbw
bswap
pushf
pusha
mov
pushf
lea
jmp
mov
call
mov
bt
movb
clc
sub
jmp
sub
mov
rol
pushf
pusha
add
pushl
push
jmp
mov
movb
lea
jmp
call
mov
bt
clc
add
push
mov
push
pusha
lea
jmp
mov
pushf
pushf
push
lea
jmp
pushf
popl
mov
pushf
lea
jmp
movzww
cmc
test
bt
test
xchg
pusha
test
xor
pushf
xchg
push
bt
rol
call
push
add
pusha
call
mov
movb
mov
pushl
pushf
pushl
ret
push
jmp
stc
jmp
push
jmp
call
call
pushf
cld
mov
push
call
pushl
popl
mov
pushl
lea
jmp
div
movb
push
jmp
mov
push
pusha
push
mov
pushf
pushl
push
pushl
pushf
popl
pushf
mov
lea
jmp
movb
push
pushf
popl
mov
lea
jmp
ror
sbb
rdtsc
clc
push
sub
push
push
mov
jmp
not
cmp
push
call
call
rol
daa
mov
shld
pushf
call
jmp
jmp
pusha
mov
push
movb
pushf
lea
jmp
pusha
jmp
add
ror
shl
mov
jmp
movsbl
sar
mov
mov
pusha
rol
setno
pushf
add
call
cmp
bt
pusha
not
cmp
cmc
sub
cmc
push
cmp
and
call
mov
pushf
mov
pushl
pushl
pushl
pushf
lea
jmp
push
mov
pushf
lea
jmp
and
mov
stc
test
add
jmp
stc
xor
pushf
cmp
cmc
xor
call
pushl
jmp
pusha
call
call
mov
call
mul
call
rep
shr
sar
mov
xor
mov
std
clc
pushl
popf
movb
mov
pushl
lea
jmp
cmp
clc
stc
xor
cmc
xor
cmc
add
je
cmp
push
sub
pusha
mov
add
call
pushf
cld
call
pushl
popl
pushf
pushf
push
lea
jmp
pushf
popl
call
mov
pushf
movb
call
pusha
pusha
push
mov
call
call
mov
pushf
pushf
lea
jmp
jmp
push
mov
push
call
movl
call
mov
mov
pushl
pushf
pushl
lea
jmp
push
pusha
mov
pusha
pushf
popl
jmp
mov
movsbw
bswap
xchg
inc
push
mov
dec
lea
push
mov
push
mov
jmp
pushf
movw
jmp
inc
call
bswap
jmp
movw
jmp
call
cmc
add
pusha
pushf
mov
pushf
pushf
popl
pushf
pushl
popl
push
movw
lea
jmp
call
pushf
lahf
pusha
mov
cwtl
push
setno
mov
movb
movw
mov
mov
pushl
ret
pushf
popl
pushf
push
mov
pushl
popl
mov
pushf
lea
jmp
pushf
pushf
popl
pushf
pushl
popl
pushf
movb
lea
jmp
xchg
push
jmp
pushf
popl
call
add
bt
sub
pusha
pusha
clc
push
ror
jmp
push
pusha
pushf
mov
push
movl
jmp
shl
shl
shl
mov
test
cmp
pushf
call
bt
sub
shrd
clc
adc
bswap
mov
shrd
mov
test
call
cmc
stc
sub
call
jmp
call
dec
stc
xor
call
bts
pusha
mov
neg
mov
neg
add
shr
mov
stc
movw
push
add
call
pushf
pusha
mov
pushf
pushl
popl
push
pushf
pushl
lea
jmp
cwtl
cwtl
pop
mov
jmp
jmp
not
clc
and
mov
pushf
movb
mov
jmp
pushl
popl
mov
movl
lea
jmp
push
shld
call
add
test
movb
call
sar
mov
stc
pushf
pusha
add
jb
sub
pushf
push
add
pusha
pushf
popl
movw
pusha
pushl
popl
pushf
lea
jmp
pusha
mov
pusha
call
pushf
lea
jne
call
jmp
test
sub
jmp
pusha
pushf
push
mov
mov
pushf
jmp
push
test
sub
pushl
clc
add
call
pushf
stc
rol
bt
cmp
call
pushf
pushf
popl
push
pusha
pushf
mov
pushl
popl
movb
push
push
lea
jmp
movw
mov
jmp
pushf
jmp
sub
pusha
push
jmp
pusha
call
cmc
cmc
push
xchg
call
sbb
xor
add
sbb
mov
sbb
xor
add
sub
sbb
xor
rcr
sbb
aaa
xor
cmpb
sbb
shrb
inc
dec
cs
xor
sub
sbb
shrl
sbb
das
sbb
pop
xor
add
sub
sub
sbb
mov
sbb
jle
sbb
adc
add
xor
inc
mov
sbb
xorl
inc
jne
sbb
je
sbb
xor
inc
jns
sbb
fsubrl
sbb
je
sbb
fidivl
sbb
sub
cs
xor
sub
shlb
sbb
je
sbb
jle
sbb
scas
sbb
push
xor
rcr
sbb
add
shrb
sbb
mov
sbb
mov
sbb
xor
sub
sbb
push
xor
inc
add
add
xor
rorb
sbb
xor
inc
dec
sbb
lea
sbb
mov
das
sbb
xor
andb
add
sbb
sub
sbb
xor
inc
xorl
add
sbb
xor
add
sbb
ds
sbb
je
sbb
xor
xor
andb
sub
sbb
lea
sbb
push
xor
add
sbb
mov
sbb
das
sbb
das
sbb
sbb
inc
in
sbb
sub
sbb
mov
das
sbb
mov
sub
inc
mov
sbb
xor
das
sbb
mov
sbb
shrl
sbb
scas
cs
xor
sub
sbb
pop
sub
add
sbb
xor
inc
add
inc
in
sbb
mov
sbb
pop
xor
add
sub
cmpb
andb
sbb
sub
sbb
pop
xor
inc
sub
add
sub
andb
sbb
mov
sbb
pop
xor
inc
fldt
sbb
sbb
sbb
shrl
sbb
shrl
sbb
xor
add
sbb
adc
rclb
sbb
xor
andb
sbb
mov
sub
add
sbb
xor
cmpb
rclb
sbb
push
xor
rcr
sbb
pop
xor
cmp
sbb
sbb
inc
jns
sbb
in
sbb
mov
xor
inc
mov
sbb
mov
sbb
test
shlb
sbb
xor
add
sbb
mov
xor
andb
sbb
dec
xor
add
sbb
mov
sub
sbb
sbb
shrl
sbb
test
add
sub
add
sbb
das
sbb
shrb
add
sbb
xor
sbb
mov
xor
add
sbb
xor
sub
sarb
sbb
push
xor
sarb
sbb
pop
xor
rclb
sbb
fidivl
sbb
xor
inc
dec
xor
add
sub
add
sbb
jle
sbb
xor
inc
sub
andb
sbb
push
xor
inc
mov
sbb
pop
xor
add
xor
add
andb
sbb
je
sbb
xor
add
sbb
jle
sbb
xor
inc
xor
sbb
adc
adcb
sbb
pop
xor
add
sbb
shrl
sbb
fidivl
sbb
and
movb
mov
mov
push
movb
mov
mov
lea
jmp
pusha
cmc
test
pushf
add
clc
stc
cmc
stc
shrd
pushl
pushf
mov
push
jmp
lahf
lea
movzbw
mov
push
movw
lea
jle
push
mov
jmp
pushf
popl
mov
push
pushf
lea
jmp
test
pushl
popf
mov
mov
movw
mov
lea
jmp
call
adc
bswap
pusha
cmc
mov
setb
or
add
pusha
pushf
mov
pushf
call
add
jmp
push
push
mov
pusha
pushf
jmp
mov
bt
call
lahf
movsbw
mov
pusha
add
pushf
mov
push
mov
jmp
movzbw
bsr
mov
shr
neg
btc
rcl
xor
ror
sbb
cmc
movsbw
sub
test
neg
pusha
inc
shl
call
movl
pushf
pushl
pushl
popl
movb
pushf
movb
pushf
lea
jmp
pushf
call
call
push
pusha
cmc
pusha
sub
test
add
pushl
jmp
bsr
and
mov
cmc
pop
cmc
not
pop
pushf
mov
shr
mov
aad
mov
clc
rol
mov
daa
cwtl
seta
mov
or
das
lea
mov
lahf
add
pushl
popf
jmp
btc
mov
ror
aaa
mov
push
mov
sar
mov
pushf
push
cmc
sub
call
decl
movb
call
dec
lea
shrd
shld
bswap
movzbl
test
movl
bt
test
mov
test
cmp
mov
or
call
sub
cmc
call
call
jmp
pushf
popl
call
rol
rcr
adc
movzbl
bsr
rol
btc
sub
rcl
bt
rol
sbb
or
and
stc
add
not
xor
pusha
sub
movb
movsbw
bt
mov
cmc
cmc
cmp
add
pushf
push
pushl
dec
pushf
mov
pushf
lea
jmp
call
xor
mov
dec
ror
ror
bsr
mov
cmc
stc
jmp
mov
movsbw
sub
btc
movzbl
not
ror
movw
not
xor
cmc
btr
xor
add
pusha
dec
sub
push
btc
movzbl
mov
stc
bt
mov
jmp
pushf
popl
push
pusha
lea
jmp
mov
mov
pusha
jmp
movzbl
lea
mov
test
add
push
pushl
lea
jmp
pushl
popl
pushf
pushf
pusha
mov
lea
jmp
cmp
cwtl
call
rcl
or
bt
push
mov
test
add
test
call
pushf
movb
lea
jmp
push
push
pusha
mov
movb
pushf
mov
push
lea
jmp
pushf
mov
mov
pusha
mov
pushl
mov
pushf
movb
lea
jmp
lea
jo
mov
pusha
jmp
jae
pushf
pushl
mov
lea
jne
pushf
movw
mov
pushf
pusha
lea
jmp
cbtw
jmp
pusha
mov
call
call
pushf
add
movb
push
jmp
add
call
call
call
push
push
pushf
mov
mov
mov
pusha
pushf
popl
pusha
pushl
push
lea
jmp
jmp
pusha
rol
pushf
movl
jmp
pushf
popl
pushl
push
pushl
popl
movb
mov
pushf
lea
jmp
mov
pushl
call
mov
movl
pushf
pushf
mov
push
push
pushl
ret
