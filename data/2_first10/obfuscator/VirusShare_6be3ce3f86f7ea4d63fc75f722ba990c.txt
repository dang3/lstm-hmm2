sub
jne
les
dec
mov
and
add
js
or
sub
imul
sbb
jnp
fmul
cmp
aam
out
adc
sbb
js
xor
push
jns
dec
dec
sub
orb
and
lea
dec
mov
mov
mov
adc
inc
fsubrs
aaa
and
and
mov
sti
mov
enter
clc
xchg
ja
fwait
push
or
cmpl
cmp
push
aam
adc
adc
icebp
add
idivb
ja
in
fisubl
push
push
adc
in
int3
fmul
mov
xor
sbb
jmp
adc
and
xor
jmp
leave
cld
cltd
push
out
and
scas
fs
orb
bound
lods
data16
sbb
lock
push
nop
je
cmpsl
in
jp
iret
sbb
adc
push
dec
gs
into
pop
lret
out
dec
clc
dec
pop
outsl
pop
or
fisttpll
stos
xchg
test
aas
push
mov
push
fistpl
or
shll
ljmp
roll
or
lahf
mov
outsb
push
push
in
pop
lods
adc
fwait
mov
jmp
adc
movsb
pop
or
sub
dec
sti
xchg
test
rcrb
jns
jns
cmp
out
xchg
imul
ss
xor
mov
cmpl
cmpsb
aam
cli
mov
add
push
movb
test
pushl
call
lea
call
call
rorl
and
push
cmpsl
adc
add
addr16
push
xlat
out
enter
xchg
icebp
fstpl
adc
mov
fistpll
xchg
rorl
stos
xlat
in
inc
mov
test
jmp
push
sub
and
daa
arpl
or
test
jmp
add
inc
gs
outsl
fs
gs
imul
add
and
pusha
mov
call
call
push
push
pusha
movl
pusha
movw
push
mov
lea
jmp
call
lea
lea
mov
mov
mov
call
out
rcl
pop
lret
mov
sbb
mov
or
clc
fsubs
mov
iret
stos
das
lcall
xor
and
subl
adc
arpl
mull
pusha
add
enter
repnz
cmpl
sbb
je
or
icebp
mov
shl
in
imul
push
mov
movsbw
setae
mov
setbe
lea
jmp
stos
movb
mov
movl
lea
jmp
push
lea
je
push
ja
pusha
mov
movl
push
lea
jmp
es
int3
pop
lret
add
out
inc
aaa
xchg
push
ja
jbe
jne
outsl
dec
lcall
xchg
mov
roll
out
aam
repz
sbb
sub
jl
jg
jl
insl
add
gs
adc
cmp
fisubs
stos
ds
inc
test
cmpsl
and
add
pop
lret
mov
repnz
aas
fsubl
sbb
pop
fimuls
fwait
ljmp
pop
mov
insb
lods
cmp
xchg
pop
loopne
mov
pop
dec
int
inc
cmpsl
popf
dec
pop
loop
out
popa
test
adc
push
call
push
mov
mov
adc
vaddps
imul
fnstcw
sbb
mov
mov
inc
shlb
aaa
mov
iret
or
sarl
cmp
cmpsl
dec
mov
adc
scas
aaa
xchg
jmp
or
loop
daa
sbb
sbb
and
scas
pop
test
mov
pop
pop
mov
sbbb
fistpl
mov
fwait
sbb
int3
mov
daa
pop
jbe
movsb
inc
mov
xor
lret
jp
sub
sarl
push
in
test
in
or
sub
pushf
mov
jmp
imul
sub
clc
jnp
push
jno
xchg
jns
mov
pop
popf
adc
mov
push
sub
mov
pop
push
mov
fisubs
orl
ret
push
mov
ljmp
lds
inc
js
jecxz
lea
call
fstpl
inc
sbb
in
int
dec
push
lock
insl
repnz
jmp
clc
jns
lret
outsb
dec
mov
int
pop
and
arpl
mov
inc
push
nop
in
sub
adc
test
jp
inc
mov
or
jmp
or
es
arpl
add
adc
inc
rcll
test
push
jo
les
mov
lret
inc
mov
push
inc
sbb
aad
gs
xchg
cli
in
arpl
adc
loopne
inc
mov
std
or
sub
ljmp
sbb
mov
fsubrl
and
out
mov
lahf
insl
dec
xor
mov
jmp
lods
xchg
or
iret
pushf
movl
lea
jbe
push
push
mov
pushf
lea
jmp
xchg
popf
movsl
leave
pop
lret
es
rol
lock
push
imull
shrb
xchg
adc
shl
push
shll
repnz
pop
or
or
lock
pop
sbb
sbb
and
or
lret
int
testl
mov
jo
leave
pop
lret
test
mov
xor
shld
in
jns
mov
add
mov
jo
jno
mov
push
push
jecxz
aas
int
aaa
in
push
inc
adc
add
mov
inc
pop
daa
xor
mov
jo
fwait
pop
outsl
sarl
dec
cmp
sbb
sub
dec
in
test
jmp
sbb
jle
test
ds
stos
mov
les
or
js
cltd
mov
push
imul
mov
out
out
mov
xchg
dec
or
jmp
repz
inc
xchg
cmc
dec
inc
cmp
push
xor
add
jp
lcall
cmp
inc
sbb
adc
mov
pusha
aaa
mov
cwtl
sub
add
es
adc
pop
sbb
sub
mov
fs
mov
cmc
shll
xchg
gs
out
jg
push
lea
jne
push
pusha
pusha
pushl
mov
call
adc
lret
xor
pop
xchg
lds
lcall
pushf
pushf
in
dec
mov
inc
pop
mov
ret
lods
pop
mov
lds
aam
into
mov
jle
and
xchg
xchg
cmpsl
sub
and
leave
jo
loope
shlb
mov
ds
inc
clc
dec
aad
mov
and
push
leave
int3
inc
inc
and
mov
jbe
mov
cmp
sbb
js
mov
adc
mov
lea
xchg
or
xchg
popf
stos
lods
push
mov
xchg
mov
jae
push
adc
gs
and
jbe
mov
xor
aam
lcall
stos
push
lahf
negb
rcrb
icebp
cld
pop
mov
sbb
movsb
jle
rol
pop
lret
pushf
and
inc
mov
shl
xor
xor
add
jb
movsb
mov
mov
lock
sub
data16
sbb
in
inc
fcomps
fldl
movsb
push
jo
ja
add
cmp
fmull
dec
push
mov
or
jno
std
inc
and
sbb
add
inc
dec
push
pop
push
dec
dec
dec
pop
inc
fs
gs
enter
jecxz
cmc
mov
jmp
pushf
call
inc
bt
shr
call
pushf
lods
pushf
call
lret
dec
faddp
pop
lret
xchg
jmp
in
fs
js
cltd
dec
mov
mov
outsl
mov
xor
fs
mov
sub
mov
shlb
cmpsb
pop
cmp
add
push
add
push
or
sar
sbb
push
fadds
push
jecxz
or
into
mov
adc
je
subb
les
or
add
lret
add
arpl
inc
sub
dec
jne
xchg
cmc
add
pop
je
adc
jb
adc
hlt
mov
loop
dec
mov
in
dec
sub
lahf
adc
insb
push
add
test
sub
cltd
loope
xlat
cmpsb
xchg
cmp
inc
lods
aas
movsb
inc
mov
cs
popl
lcall
xchg
insl
ffreep
mov
add
mov
js
cmpb
outsb
mov
xor
mov
jle
or
int3
cmp
mov
cmp
es
cmp
push
xchg
incl
or
jl
mov
lret
in
dec
cld
sub
lods
ficoms
pop
stos
sub
inc
imul
push
xor
sub
xchg
ret
into
xchg
insb
xchg
jbe
mov
in
orb
scas
sub
cmpsl
add
pop
add
gs
mov
fyl2xp1
aas
aas
xchg
sbb
jmp
pushf
movb
mov
movl
jmp
sub
sub
jnp
cmp
mov
mov
sub
ficomps
pop
add
pop
mov
mov
inc
cmp
mov
fdivr
cmpsb
pusha
prefetcht1
sbb
div
push
nop
testb
lods
movsl
jle
push
sub
fildl
fbld
push
bound
jne
dec
cwtl
push
int3
push
push
int3
fcmovnbe
mov
xchg
xchg
pop
or
dec
mov
or
sub
pop
or
in
push
xchg
jle
popf
loopne
xchg
sbb
sbb
pushf
jl
or
outsl
insl
xchg
pushf
lea
jne
push
lea
call
pushf
pusha
lea
jmp
lea
je
pusha
pusha
lea
jmp
test
pusha
movb
pushf
pushl
lea
je
inc
neg
mov
neg
adc
add
bts
shr
test
bsf
mov
pushf
test
jmp
call
inc
push
push
adc
pushl
pushl
ret
enter
pop
lret
test
adc
nop
fs
inc
adc
in
loopne
leave
sub
jp
push
fcompl
fdivl
xchg
sub
push
adc
add
imul
scas
shrb
lods
out
enter
inc
jae
sbb
add
sbbb
jo
shlb
or
divl
enter
cs
sbb
add
dec
sub
nop
stos
jb
mov
movzbw
push
movzbw
movsbl
lea
movl
jmp
mov
xchg
pop
pushf
movl
pushf
jmp
cmp
outsb
ret
pop
lret
add
lods
mov
insb
pop
and
adc
xchg
pushf
add
iret
push
cmp
mov
mov
dec
pop
xor
jecxz
cwtl
jns
sahf
fisubl
loopne
insl
jno
sub
or
inc
and
push
ret
jae
mov
push
out
xchg
or
jae
and
sbb
jae
gs
or
pop
scas
jl
jmp
mov
into
mov
pop
mov
mov
pop
pop
jne
add
sbb
mov
xchg
push
iret
mov
xchg
in
jle
xchg
push
lret
outsb
fdivl
mov
jge
push
lret
decl
cs
cmp
or
loopne
xlat
jp
dec
loop
pop
sub
push
sub
mov
shl
addr16
push
stos
cmp
imul
lods
lock
scas
push
or
inc
or
dec
ja
mov
je
lcall
cmpsb
mov
jnp,pn
add
and
inc
mov
xor
ror
cs
add
ret
pop
lret
pop
push
jbe
stc
test
jge
es
aad
mov
inc
xlat
inc
adc
xor
out
popa
push
or
mov
sub
push
dec
or
imul
push
inc
movsb
lahf
fdivrl
jmp
lret
dec
jbe
rolb
lret
outsb
push
rcrb
rep
dec
cmpsl
test
cmp
xlat
jmp
add
dec
mov
lret
jo
mov
jbe
add
pop
mov
push
jb
push
dec
push
into
xchg
pcmpeqw
mov
inc
mov
je
lret
mov
movl
pushl
pushl
popl
pushf
pushf
pushl
pushl
pushl
ret
push
lea
jae
pushf
lea
jne
call
mov
push
pushl
push
pushf
lea
jmp
rep
mov
movsbl
jmp
mov
pop
pushf
call
xchg
pop
rcrl
inc
rolb
nop
add
cs
sub
scas
push
cmp
push
sub
addr16
insb
pop
lods
clc
gs
lahf
loopne
je
and
cmc
xchg
imul
mov
lock
mov
push
stos
push
into
cmc
movd
xchg
ss
movsb
dec
test
repz
stc
pop
daa
mov
xlat
in
inc
mov
cmp
fs
and
or
jb
sub
pop
sti
movsl
fadd
push
adc
cmc
lock
rcrb
mulb
rclb
jecxz
xor
loope
pushf
stos
adc
mov
into
lret
mov
jne
cmc
movsl
es
cmp
stc
add
fadd
les
aas
mov
decl
xchg
sbb
cli
stos
dec
sbb
insb
or
push
mov
pushf
fsubp
addr16
cmp
jnp
pop
adcb
push
add
sub
popa
or
jmp
jb
or
cmpl
mov
add
stos
cmp
nop
add
test
sar
jle
pusha
push
fucom
fadds
lret
adc
cmp
loope
aam
xchg
loopne
xor
jno
call
xor
push
cwtl
push
jmp
test
outsb
sbb
xchg
ja
adc
mov
aam
mov
repz
jns
pop
lret
xorl
adc
out
and
in
xchg
pushf
pusha
mov
jbe
mov
test
jno
dec
rcrb
or
cmp
sub
push
xor
dec
inc
sar
int3
lcall
les
xchg
jae
out
mov
gs
fwait
lahf
xchg
adc
pop
scas
mov
pop
pop
sbb
jne
jbe
lods
std
js
cmp
jp
pop
sar
loopne
jle
ss
push
pop
lret
cmp
leave
lahf
outsl
pop
dec
fildll
fimuls
push
fistpll
aam
enter
and
sub
and
cltd
sbb
jge
sbb
adc
ret
fucom
sbb
cmp
jno,pn
pop
cmp
xchg
shr
std
ljmp
in
gs
lea
jmp
jmp
movb
jmp
addl
mov
adcb
jp
inc
call
adc
inc
sti
xchg
jo
add
jns
pop
movsl
jo
jb
push
daa
icebp
inc
mov
cwtl
jp
not
gs
ss
mov
mov
adcl
cmpsl
sbb
dec
xor
lods
xor
jmp
sub
arpl
add
mov
mov
mov
sbb
dec
cli
sub
or
iret
stos
inc
stc
add
mov
jae
jo
xor
cmp
or
jecxz
lret
ss
inc
push
lods
or
dec
outsb
xchg
andl
add
cli
int
in
jbe
cmpsl
push
xor
adc
adc
inc
add
mov
mov
scas
andl
push
outsl
push
shr
push
or
out
aam
push
adcl
and
arpl
inc
push
pushf
inc
movb
pusha
lea
jmp
lea
call
pusha
lea
jae
test
push
xor
movl
push
lea
call
push
lea
jo
pusha
movb
lea
jae
pusha
test
sub
call
call
pushf
push
mov
movzbl
pusha
movsbl
mov
pusha
movb
pushf
pushl
ret
cmc
cmc
xor
pusha
jmp
mov
lea
jb
stc
test
pushf
cmp
jmp
mov
pushl
jmp
xchg
push
es
xchg
bound
je
adc
xchg
loopne
pushf
pop
and
add
xlat
xchg
inc
inc
mov
loope
jns
dec
or
rdtsc
or
xchg
adc
push
je
jae
fwait
cwtl
inc
repz
mov
and
out
xchg
js
in
sbb
jp
sahf
rorb
daa
mov
add
sub
stos
push
xor
mov
mov
idivb
jmp
in
test
mov
xor
dec
mov
push
aam
or
ss
xor
mov
and
imul
jl
sbb
xchg
ljmp
add
xchg
out
loope
or
or
jle
push
in
cmp
pop
loope
ret
popf
es
add
mov
leave
sub
pushf
jmp
lea
je
push
movsbw
push
bswap
pushf
lea
push
mov
pushf
movl
mov
mov
movsbw
lea
movb
push
jmp
into
test
mov
outsl
mov
push
loop
xlat
inc
rorb
mov
cmc
dec
sbb
push
sub
xchg
push
sbb
fidivrs
pop
xchg
ret
push
and
mov
jno
mov
in
mov
and
mov
mov
arpl
jmp
mov
pop
sub
sub
in
js
add
jae
xchg
push
jg
mov
ds
jns
std
lods
xlat
cmp
movsl
dec
cmp
mov
ja
mov
dec
xor
or
popa
pop
bound
sbb
xor
mov
in
xchg
xor
outsb
push
std
mov
push
mov
dec
into
push
mov
movsl
repnz
mov
jae
test
and
jge
cld
lods
xlat
cmpsl
cmp
dec
cmp
ljmp
jae
inc
inc
ds
dec
mov
je
or
lret
cmp
fbstp
or
mov
push
lea
mov
xor
xchg
rcl
in
jmp
in
jae
or
lahf
loop
mov
cmp
divb
lea
call
pusha
lea
jb
pusha
mov
pushf
pushl
ret
stc
add
lea
cmc
add
push
dec
push
pushf
pushf
pusha
lea
jne
shl
sbb
mov
push
test
cmp
push
lea
ja
lea
not
pop
movsbl
xchg
pop
jmp
test
push
loopne
add
sbb
in
cltd
popf
push
decl
push
mov
mov
data16
cld
pop
loopne
mov
sbb
mov
mov
cmp
adc
lock
mov
sbb
ror
inc
lea
cwtl
or
mov
jne
lods
jmp
or
xchg
sbb
int
cwtl
mov
mov
mul
scas
js
pop
cwtl
or
mov
push
movsb
lock
xchg
jo
mov
cwtl
or
xchg
sbb
cli
outsl
jae
repnz
or
mov
mov
lods
add
adc
push
loopne
adcl
mov
mov
rorb
jno
add
cwtl
or
mov
xor
pop
shlb
lock
lea
out
mov
movsl
cwtl
lret
or
mov
mov
adc
pusha
js
lock
mov
jnp
out
add
int
cwtl
or
xchg
sbb
test
jo
add
mov
jo
add
test
nop
add
mov
mov
mov
add
or
xchg
sbb
jg
sbb
jmp
sbb
xor
adc
mov
and
loopne
dec
mov
repnz
dec
nop
and
mov
in
add
in
rorb
test
xchg
add
or
mov
xor
leave
fstpl
rorb
inc
and
add
cli
dec
in
fsubr
popl
call
ja
mov
mov
dec
inc
or
dec
cmc
push
cwtl
or
mov
ret
mov
jne
rorb
in
enter
or
xchg
sbb
rcrb
cwtl
mov
and
mov
mov
mov
cmc
add
sbb
inc
pop
and
add
sbb
push
test
lea
jb
push
push
pusha
pusha
lea
jmp
push
pushf
mov
jmp
jo
data16
lret
or
and
pop
xor
adc
adc
pop
inc
in
pop
lods
fstpl
cmp
xchg
fisubs
je
fwait
nop
addr16
xor
or
jmp
push
adc
es
xchg
inc
vshufpd
jmp
pop
mov
mov
shlb
jl
add
mov
and
jge
clc
sar
fsub
fldl
jb
push
or
insl
movb
lea
jo
push
lea
call
push
lea
jae
push
test
xor
pushl
jmp
clc
cmc
cmp
movzbw
pushf
movzbw
lea
not
mov
movb
push
lea
ja
jmp
pushf
pusha
movl
lea
jle
pusha
pusha
pushl
popl
pushf
pushl
ret
call
pushf
movl
movw
jmp
jmp
repz
pushf
pushf
movl
pushf
pusha
movl
movb
lea
jmp
push
mov
test
movw
test
cmp
movw
mov
jmp
add
add
add
add
add
add
mov
add
xor
sbb
pop
adc
add
xor
sbb
fists
push
add
scas
jne
add
rolb
and
lea
call
jmp
call
rcll
mov
lret
rolb
adc
cmc
rcl
xchg
add
pop
mov
fisubrl
jl
mov
stos
sbbb
sub
aad
xor
inc
pop
xchg
movsb
sarb
inc
mov
data16
inc
cld
inc
jl
sti
push
sahf
inc
imul
arpl
mov
add
call
xor
neg
sar
mov
push
clc
call
lcall
adc
push
adc
xor
mov
es
jge
stos
fdivs
xchg
cmpsb
mov
ja
icebp
push
or
lea
lds
loopne
or
mov
add
mov
sbb
insb
sub
in
jge
cmp
jge
mov
push
sbb
inc
push
xor
out
adc
adc
fbld
jns
push
leave
inc
mov
shl
inc
push
shlb
cmp
pop
mov
sub
or
nop
pop
iret
mov
aad
jo
rorb
inc
jle
lods
cmp
inc
pop
and
inc
ja
sub
sbb
jmp
or
not
jecxz
ds
rolb
mov
ret
or
pop
mov
lcall
pop
cmc
push
sarl
adc
lods
pop
mov
push
idiv
fists
dec
test
mov
cld
in
cmp
xchg
into
cmp
daa
movsl
jnp
or
push
push
jb
scas
fnstcw
iret
test
js
xchg
das
shr
mov
aaa
push
dec
jno
in
sarb
push
push
xchg
idivb
cmc
lahf
scas
push
push
and
xchg
cld
pop
js
cmp
testl
mov
fbld
test
sub
mov
stos
adc
pop
inc
aas
pop
lds
xor
shrl
adc
inc
pushf
shlb
push
mov
mov
adcb
cmpsl
mov
dec
cltd
inc
lock
hlt
sar
mov
in
lods
sub
xor
cmp
inc
jno
leave
adc
fwait
out
mov
lcall
add
pop
cli
inc
fiaddl
in
nop
jbe
fisttpl
jp
ret
jnp
push
pusha
movb
pushf
lea
jne
add
adc
mov
push
cmc
or
call
mov
stc
cmp
pusha
lea
je
push
pusha
test
cmp
jmp
movl
push
pushf
call
push
lods
bt
ror
pushl
lea
jae
push
pushf
dec
movb
rol
call
lea
call
pushf
lea
jae
inc
pusha
mov
pushf
setno
inc
pusha
push
jmp
mov
lret
repnz
adc
out
addr16
lock
push
ljmp
mov
pop
mov
movsb
test
sub
scas
test
and
dec
divl
pop
sbb
enter
test
cmp
fldcw
xor
adc
insb
add
jno
push
std
jp
call
adc
cmp
aam
cmp
sub
daa
loop
movsb
arpl
and
add
fildll
movsb
sbb
inc
push
mov
adc
xor
jo
adc
daa
call
outsb
lret
mov
or
ror
dec
push
mov
dec
dec
lea
jo
setle
rcr
setns
rol
jmp
not
pop
mov
lret
pop
test
or
pop
cs
mov
xchg
inc
inc
cld
cli
add
push
cmpl
mov
xchg
ljmp
add
mov
movsb
pop
add
pop
add
imul
gs
mov
out
push
pusha
pusha
pushf
push
pushl
popl
pushf
movb
push
pushl
ret
not
movw
call
lea
ja
cmc
pushf
pusha
imul
cmc
cmc
add
pushf
pushf
mov
lea
jmp
push
lea
je
call
lahf
bswap
lea
pushl
movb
pusha
jmp
push
movl
call
pusha
push
lea
jb
cmp
pushf
cmpb
jmp
lea
je
pushf
cmp
jmp
mov
inc
aam
aam
xchg
adc
push
orl
andb
mov
imul
fs
scas
xchg
je
leave
std
pop
jl
out
lahf
and
cmpsl
fidivrl
push
ja
jne
mov
xor
popf
data16
mov
mov
jle
mov
and
je
or
inc
cmc
inc
add
shrd
sub
movzbw
neg
btc
shr
sbb
call
pusha
mov
mov
movl
call
movb
inc
clc
clc
stc
pushf
rol
pushf
call
sbb
lret
imul
int3
fldlg2
sbb
add
mov
xor
popa
or
sub
mov
push
bound
or
mov
cmp
cmp
mov
call
cs
jp
iret
ja
xchg
dec
adc
jae
arpl
push
cwtl
shrl
fldcw
push
sarl
daa
loop
data16
mov
inc
inc
sti
push
jne
fdivs
adc
scas
jne
xor
loope
cmpl
pop
stc
push
movzbw
push
xadd
shr
push
cmp
cmp
mov
bt
bts
cmp
mov
sub
mov
rcl
sub
pusha
pushf
pushf
lods
push
push
rcr
call
daa
test
mov
cld
outsl
pop
aas
dec
cltd
dec
cmp
cmpsl
push
push
fs
arpl
jns
mov
ja
and
mov
mov
or
push
adc
scas
mov
add
pop
mov
shr
xchg
fxch
push
mov
mov
scas
xor
jno
shrl
xchg
push
shrb
scas
pop
lret
cmp
aaa
inc
push
ret
ja
xchg
and
add
mov
popa
lahf
rcll
mov
out
dec
mul
xchg
add
push
test
jl
gs
insb
mov
mov
loop,pn
cwtl
or
imul
push
mov
int
loope
arpl
imul
pop
aam
std
mov
jae
mov
shlb
jbe
decl
pop
pop
arpl
xchg
sub
sub
fimull
das
xor
jae
xchg
mov
mov
add
push
test
gs
call
cmp
scas
pop
lret
jb
inc
xor
mov
push
bound
movsb
sbb
sti
fwait
hlt
cmp
pop
ficompl
sbbb
inc
inc
mov
sub
pop
and
hlt
xchg
cli
add
sbb
mov
fiadds
push
add
sub
and
out
bound
add
loopne
inc
int3
inc
push
pusha
push
lea
jne
jmp
stos
movl
pusha
mov
lea
jmp
ss
fwait
lods
pop
lret
aam
pop
out
call
ja
mov
inc
push
faddl
in
jge
cmp
dec
mov
lock
push
stc
pop
pop
mov
addr16
aad
repnz
pushf
ss
xchg
mov
inc
call
mov
test
add
mov
mov
lahf
mov
ss
call
outsb
xchg
movsb
sbb
xchg
and
fldenv
pop
mov
fs
jne
call
stos
pusha
lea
jmp
lea
jl
dec
test
jmp
icebp
mov
in
daa
mov
repnz
push
popa
mov
xorb
add
mov
insl
daa
pop
mov
aaa
mov
sbb
pusha
jp
es
popf
or
jb
hlt
adc
sbb
dec
mov
lock
lods
jnp
xchg
mov
imul
jne
xor
push
pop
test
cmpb
aaa
outsl
push
dec
ja
xor
adc
outsb
ret
test
and
scas
push
insb
movb
pusha
lea
jmp
mov
not
pushf
inc
pushf
pusha
mov
jmp
jmp
push
pusha
mov
pushf
movl
pusha
lea
jmp
pusha
pushf
jmp
ror
jmp
call
or
lret
xor
popa
je
mov
fs
rclb
add
sbb
mov
dec
sbb
stc
sub
fisubs
cli
adc
iret
cmp
notb
nop
scas
or
adc
icebp
or
jmp
jmp
dec
ffreep
and
out
xor
mov
in
adc
and
call
and
popa
push
movb
lea
jmp
movzbw
lea
lea
lea
mov
pusha
movzwl
not
pop
lea
pushf
movzbw
bswap
mov
lea
js
call
call
test
test
pushl
bt
pushf
push
cmp
pushf
push
pushf
lea
ja
test
clc
not
sub
movzbw
add
bswap
mov
xor
and
mov
dec
mov
cmp
stc
jmp
call
not
inc
call
mov
lea
call
pushf
pushl
push
adc
jmp
push
pushl
popl
pushf
push
push
pushl
ret
call
inc
add
xor
mov
icebp
rcll
loope
xchg
or
lds
test
rcll
cmp
es
fisubl
cmpsl
lahf
lds
cmp
test
cmpsl
les
cmpsb
adc
repnz
daa
sbbl
cmp
sbb
loope
sub
ret
xor
cmp
cmp
data16
adc
ja
jbe
repz
sub
inc
mov
cmp
jg
lcall
subl
out
add
sbb
jns
mov
mov
mov
scas
inc
sbb
xor
lahf
cltd
and
shll
mov
xor
xchg
jmp
mov
mov
stos
mov
dec
sbb
std
scas
fwait
int
dec
ds
pop
push
dec
pop
xchg
test
sbb
xchg
mov
add
sbb
popa
push
jnp
push
inc
popa
lcall
jge
fsub
cld
sbbl
jno
jmp
push
outsl
lea
mov
lea
call
call
xlat
ss
jns
fwait
dec
cwtl
out
mov
out
cmp
les
fdivrl
pop
inc
jp
add
xchg
ja
jae
outsl
movsl
or
xor
pop
je
push
push
mov
movsb
inc
xchg
xchg
fadd
mov
sbb
inc
push
jne
sbb
leave
push
insl
stos
repz
aad
mov
test
sarl
pop
loope
pushf
pusha
pushf
lea
call
pushf
adc
call
lea
je
pusha
jmp
push
pushf
lea
jmp
jge
or
cmpsb
hlt
inc
push
push
add
mov
xor
mov
push
inc
ljmp
or
stc
sub
test
push
gs
xor
jle
mov
sub
sbbb
les
js
loop
test
mov
insl
xchg
dec
adc
icebp
in
ja
push
sub
in
sti
inc
adcl
sahf
insb
imul
roll
lods
cs
push
insl
mov
data16
xlat
movsb
adc
mov
int3
jmp
imul
pop
push
sti
mov
lret
inc
arpl
dec
dec
cwtl
push
ja
stos
repnz
sbb
rcrl
sbb
rcrb
xchg
and
shr
repnz
incl
add
jae
popa
addr16
outsl
js
add
push
inc
push
dec
xor
inc
dec
dec
add
sar
les
call
sar
push
add
cmc
sar
pusha
mov
stc
bt
call
mov
push
lea
jmp
sbb
aas
xchg
add
pop
in
mov
or
ljmp
jle
test
push
xchg
repnz
loop
mov
and
add
mov
mov
loop
inc
sbb
pop
or
arpl
sahf
and
inc
pop
cltd
adc
addr16
mov
mov
ljmp
jmp
test
movsb
dec
movsb
lods
cmpsl
pop
lret
sub
lret
aas
sub
cld
sarl
sub
ljmp
movsb
roll
out
fdivrl
xchg
push
xchg
or
xor
jb
mov
aad
pushf
or
call
push
push
cmpsl
pop
lret
adc
xchg
bound
adc
mov
pushf
scas
push
sub
pop
mov
xchg
sub
xor
sub
push
add
sbb
popl
fldcw
ret
pop
jae
push
mov
xor
xor
sub
xchg
pop
mov
push
hlt
and
dec
jb
hlt
adc
cmp
test
inc
cld
int
mov
lret
lock
jne
rcr
xchg
test
push
dec
fdiv
nop
aad
push
subps
inc
lods
scas
ret
scas
retw
roll
fcmovu
ret
scas
bound
dec
adc
or
and
int3
xchg
fiaddl
lahf
and
jle
mov
jno,pn
jnp
mov
pop
or
xorl
mov
push
aad
adc
fsubs
imul
bswap
pop
mov
pop
or
in
jo
adc
sub
pusha
aam
icebp
and
push
out
cmpb
insl
dec
das
dec
fs
ret
in
cld
mov
stos
xchg
push
in
push
cmp
aad
int
mov
mov
imul
in
xor
add
mov
and
jae
jb
jecxz
jns
xchg
xchg
xlat
int3
jo
jp
lret
and
mov
xchg
jo,pn
mov
or
xor
xchg
fnstsw
out
jnp
xchg
or
sbb
shrl
inc
cli
lods
sub
mov
xchg
jmp
mov
mov
push
pushf
lea
jmp
movl
push
bswap
cwtl
pushf
lea
push
movl
push
pushl
popl
mov
pushf
pusha
pushl
pushl
ret
push
movl
call
shlb
pop
lret
mov
dec
ja
mov
stos
jne,pt
lret
popa
cmpsl
jne
decl
data16
adc
daa
mov
xor
mov
adc
sbb
test
xor
adc
xlat
cmp
adc
ss
and
in
mov
or
sti
add
inc
sbb
dec
dec
mov
dec
mov
xchg
add
mov
aas
ret
mov
xchg
mov
inc
js
bound
aas
sarl
mov
je
into
rcrl
or
adc
push
outsl
es
xchg
push
xchg
movsb
add
fldenv
jbe
scas
nop
sub
mov
addb
lret
aad
pop
mov
pop
aas
imul
fs
pop
jecxz
fsubrl
test
insb
add
xchg
js
notb
and
sub
pop
mov
div
int3
ret
mov
arpl
jl
xchg
fdivrs
pop
cmp
pop
push
adc
jbe
out
jb
jae
mov
push
adc
inc
sti
lea
nop
mov
enter
push
notl
inc
iret
jo
sti
pop
and
loope
pop
lret
mov
xor
decl
and
aam
stos
inc
pushf
je
and
push
popa
mov
mov
fidivl
out
xchg
adc
in
or
dec
into
ja
loope
ret
jo
out
adc
jle
pop
or
sub
cmp
mov
data16
insl
push
add
push
mov
addl
xor
out
fmuls
aaa
sub
mov
add
fcmovb
clc
add
stc
lcall
xor
jae
fsubrp
int
add
inc
jmp
iret
add
lcall
iret
je
js
dec
sub
sbb
nop
push
or
int
xchg
dec
pop
outsb
popa
mov
lret
sti
mov
cmp
pop
aad
pop
jmp
pop
les
inc
mov
pop
and
inc
mov
sub
roll
ds
pop
lods
mov
ret
mov
lods
pop
and
inc
sub
ss
sub
xchg
mov
cwtl
push
pop
xor
push
mov
subl
movsl
jmp
mov
cmp
sahf
mov
pop
fs
xchg
add
pushl
mov
and
mov
lret
fisttpl
test
insl
sbb
stos
dec
mov
pop
clc
fwait
sub
xorl
xchg
imul
and
cmp
jge
inc
scas
or
mov
or
pushf
movzwl
add
or
mov
jmp
pop
mov
mov
mov
mov
aaa
ret
arpl
and
cmpsl
ljmp
push
mov
sbb
test
dec
popa
or
or
movsb
incl
movsb
xchg
mov
push
popf
int3
cmp
aas
sbbb
mov
sub
jbe
scas
mov
shr
add
push
arpl
add
push
add
pusha
jmp
and
pushf
and
adc
push
sbb
cmp
lret
jecxz
ret
jbe
nop
lock
insb
mov
push
stos
jno
jae
test
jae
cvtps2pi
je
jmp
sub
arpl
es
in
in
and
in
and
cmc
data16
data16
and
aaa
mov
in
and
data16
in
aaa
in
aaa
and
mov
aaa
and
mov
cmpsb
mov
cmc
call
xor
add
and
dec
fs
and
push
mov
sub
popf
xchg
frstor
xchg
adc
or
fs
adc
js
test
sbb
push
jo
daa
fs
adc
jl
std
jns
adc
and
push
sub
inc
dec
dec
dec
sarb
cs
in
inc
mov
roll
data16
hlt
mov
out
lds
test
bound
scas
mov
jb
int3
mov
push
push
imul
ficompl
or
cmc
mov
sbb
mov
loop
mov
lds
in
sbb
cmpsb
lret
dec
mov
je
push
rorl
insb
jne
fsts
pop
lcallw
outsb
scas
mov
push
in
push
push
inc
mov
xlat
mov
ret
mov
or
int3
xchg
mov
add
push
inc
bound
xchg
lcall
push
cmc
sarl
test
sbb
dec
push
pop
adcl
add
cmp
in
lods
icebp
add
xchg
push
sbb
es
rcr
add
cmc
icebp
in
adcl
sbb
pushf
inc
dec
negb
sub
lds
push
data16
pop
adc
mov
in
cs
movsl
nop
int
push
mov
mov
fnsave
imul
fs
scas
mov
mov
shl
repnz
cs
les
fs
in
sbb
xchg
scas
jp
cwtl
les
fists
mov
test
pop
cs
cs
mov
jbe
sbb
int
insl
pop
jne
adc
jp
xchg
xchg
mov
fnstenv
mull
sub
in
push
cli
fs
sub
dec
dec
cmp
sbb
add
stc
push
add
ds
xor
cmpb
pop
push
push
or
test
cmpsb
mov
bound
push
loop
sbb
mov
xchg
pop
fwait
jle
inc
push
or
jne
int
cs
fimull
xchg
jb
in
int3
push
jp
inc
int3
inc
les
sbb
fimull
mov
rolb
jmp
ret
xchg
add
cmc
lds
mov
dec
test
xchg
jo
clts
adc
sbb
adc
ds
inc
add
in
sub
and
mulb
adc
in
adc
adc
adc
mov
push
fs
sbb
jge
jbe
mov
loop
jbe
xchg
mov
das
sbb
sahf
fs
mov
mov
mov
adc
jne
sub
fsubrp
sbb
sbb
push
and
xchg
les
les
scas
push
fs
mov
xchg
mov
mov
cli
popf
sbb
mov
fs
movsl
popf
sbb
into
and
cmp
xchg
in
sbb
adc
mov
icebp
loope
xchg
mov
cmp
imul
xor
push
fs
xor
mov
pop
pop
insl
inc
int3
lcall
push
insl
push
xor
dec
mov
mov
mov
rorl
rcl
sbb
push
aad
xor
les
push
push
icebp
lea
pop
dec
xlat
scas
sbb
movsl
mov
adc
pop
fs
jbe
imul
cs
in
rcrl
pushf
mov
mov
pushf
inc
push
sbb
xchg
movsl
mov
or
mov
dec
fs
sbb
shll
mov
push
in
mov
shll
cmc
push
test
inc
das
or
push
jne
sti
cmp
or
fs
or
push
les
xchg
sbb
rcl
ss
xchg
rcrb
in
push
out
inc
xor
mov
cmp
sarl
push
lea
sbb
jbe
fs
xor
fld
pop
xor
fs
fs
adc
jl
mov
out
rorl
insl
imul
sbb
sbb
icebp
mov
adc
es
or
out
fisubs
les
jns
pop
jbe
fnstsw
sbb
les
sahf
test
push
sbb
push
popf
nop
sbb
pinsrw
and
insl
sub
adc
dec
rcrl
je
mov
dec
sbb
mov
into
pop
mov
into
data16
shlb
mov
pop
push
xchg
pop
scas
cmpl
and
pop
aad
cs
jno
pop
mov
shl
sbb
cmp
sbb
pop
push
imul
dec
fs
sbb
mov
mov
test
divb
fs
cmp
popa
push
mov
popf
adc
sbb
sbb
fs
jo
movsl
push
inc
cmp
push
push
sbb
or
sub
mov
pop
mov
cs
or
sub
mov
aad
xchg
or
push
inc
test
cs
inc
mov
adc
data16
jle
sbb
inc
lods
sbb
and
stos
pop
cmp
adc
frstor
shlb
les
push
push
mov
je
sbb
xor
or
in
sbb
pop
lods
sbb
shll
data16
or
in
sbb
sub
dec
and
in
mov
mov
popf
imul
xchg
scas
ret
popf
pop
andb
fidivs
popf
sbb
and
mov
adc
sbb
test
sbb
imul
dec
mov
jb
adc
push
push
push
sbb
pusha
mov
push
int
sbb
adc
ret
mov
test
into
push
jno
cmpsb
xchg
mov
pop
mov
xchg
xchg
iret
cmp
in
fsubl
sbb
push
out
in
shlb
xchg
push
fisubl
enter
sbb
mov
xchg
push
icebp
push
ss
sbb
push
iret
fs
push
sub
mov
inc
adc
aaa
ffree
bound
sbb
xor
dec
sbb
mov
imul
xor
pop
enter
sbb
insb
sbb
jb
les
sbb
push
ret
cmp
mov
shlb
mov
fs
push
sbb
sub
das
fs
imul
adcl
sarl
mov
jae
ret
movsl
jb
icebp
in
inc
xor
in
sbb
push
inc
jnp
xor
leave
sbb
mov
leave
sbb
mov
inc
jns
ror
push
mov
mov
jp
or
es
sbb
sub
sub
jbe
jae
push
push
mov
and
nop
sarl
lods
push
pop
and
add
sbb
iret
xlat
and
pop
mov
in
fwait
loop
add
dec
mov
sbb
jne
pop
mov
add
fcmovu
pop
les
mov
rcll
push
lahf
mov
mov
cmp
fwait
and
cmpsl
iret
das
jb
sbb
xor
inc
mov
cmc
fxch
sbb
arpl
shll
inc
mov
test
mov
adc
mov
pop
rcll
mov
mov
jae
mov
inc
testb
sbb
xchg
mov
aaa
jnp,pn
add
es
xor
into
push
pop
sbb
sbb
mov
in
xchg
pusha
pop
jl
adc
dec
sbbl
cmp
or
sbb
rorl
xor
mov
xchg
and
jge,pn
or
cmpsb
push
shll
rcll
mov
imul
and
imul
xor
xor
pusha
fnsave
jbe
mov
ds
iret
sub
and
mov
and
in
jmp
push
scas
ds
scas
mov
das
sbb
das
adc
fdivl
nop
sbb
es
adc
and
push
je
std
icebp
fwait
jp
in
in
loopne
and
xor
clc
adc
rcrb
aam
stc
jle
in
jo
rolb
sbb
int3
int3
inc
cmc
out
pop
aam
fmull
ret
xchg
jne
adc
std
pop
push
mov
and
xchg
aam
inc
std
in
faddl
arpl
inc
adc
and
out
xor
fisubrs
jle
sbb
repz
add
inc
jne
dec
int
adc
xor
int
and
scas
sub
inc
mov
add
nop
out
int3
adc
sbb
mov
aad
test
cltd
push
lds
pop
xchg
mov
cmpsl
mov
mov
leave
popf
mov
pop
pushf
sbb
xchg
mov
add
incl
sub
adc
roll
and
add
std
test
sub
out
fwait
sbb
and
cltd
lods
dec
sub
and
sub
push
adc
cmp
adc
push
dec
xabort
pop
fadd
test
add
fmull
adc
and
fsubrs
movups
adc
or
cwtl
sub
sub
adc
hlt
sub
out
mov
ficoms
icebp
mov
mov
cmp
nop
xor
fstpl
dec
loopne
xchg
scas
sbb
mov
sub
frstor
dec
lcall
xchg
and
aad
insl
adc
lcall
jp
jbe
pop
test
lods
or
inc
push
adc
lods
cmpsl
jle
push
sub
filds
adc
cmp
mov
leave
pop
sahf
push
cmp
push
inc
lods
repz
push
adc
sub
pop
xor
pushf
adc
cmp
mov
out
fadd
imull
mov
sbb
sub
sbb
push
pop
xchg
fiadds
cmp
mov
imul
and
sub
enter
mov
and
inc
dec
or
add
pop
pushf
fs
movsl
xor
cmp
jge
dec
inc
sbb
xchg
push
push
repz
in
push
mov
int3
mov
jmp
inc
xchg
adcb
mov
aam
pop
outsb
cmpsl
push
lods
or
add
cmp
mov
ds
jo
xlat
or
inc
pop
sbb
mov
cmpsb
lods
mov
pop
sbb
scas
in
call
flds
fnstsw
aaa
push
and
pop
js
dec
pusha
sub
pop
insl
add
mov
mov
jge
and
pop
mov
add
lea
or
xchg
call
mov
mov
mov
fcoms
lret
add
jp
xor
xchg
xor
cmp
cmp
sbb
cmp
xor
fldl
fmuls
inc
popf
mov
icebp
xchg
aaa
in
sbb
dec
fucom
jl
roll
inc
or
jl
nop
nop
int
xchg
pop
sbb
addl
adc
std
pop
mov
and
imul
cmp
adcb
cmpl
push
inc
add
dec
les
gs
loopne
jo
push
sbb
jl
adc
lods
xor
sub
call
adc
dec
daa
and
jo
adc
ljmp
xor
push
cmpsb
call
sbb
int3
pop
xchg
lea
pop
mov
or
lahf
xor
insb
imul
push
cld
push
xor
xchg
popa
cmp
cmp
and
and
pop
jbe
test
add
fisttps
cld
dec
and
flds
xlat
ljmp
stc
int3
and
push
js
and
sub
bound
bound
xor
push
rorl
pushf
rcrb
out
push
stc
outsl
xor
inc
dec
xchg
out
fimull
js
ss
and
push
mov
and
sbb
jle
sti
jl
sbb
cmp
mov
out
insb
dec
sub
imul
je
add
sub
push
mov
test
fs
push
inc
jp
rorb
aam
xor
andl
cmp
xor
inc
add
push
fs
lods
lods
fcom
mov
pop
inc
mov
call
cmpsb
xchg
adc
adc
lret
xor
loop
or
xor
xorb
xchg
mov
push
cli
xor
xchg
pop
faddp
out
mov
adc
dec
lock
lea
ss
inc
lahf
bound
cmp
sahf
mov
dec
or
cltd
repnz
and
pushf
adc
pop
push
inc
xchg
arpl
arpl
xchg
sub
loopne
gs
xchg
mov
insb
and
test
pop
pop
pusha
push
mov
or
mov
sub
mov
insb
dec
push
jnp
sahf
sub
in
pusha
sbb
pop
cwtl
jl
scas
adc
scas
pop
stos
in
adcb
inc
xchg
mov
ret
lea
sub
mov
mov
test
xchg
push
fiaddl
cmp
scas
dec
inc
popf
pop
pusha
out
inc
leave
popf
mov
test
mov
sbb
stos
mov
adc
out
les
dec
test
mov
outsl
out
shll
fistps
xchg
stc
push
mov
repnz
jl
push
loop
rcrb
push
cmp
add
iret
ffree
inc
lods
outsb
cmp
dec
jae
cld
lea
adc
sbb
xor
in
xchg
mov
jl
sbb
adc
int
scas
push
pop
inc
xor
daa
sbb
mov
lahf
mov
cmp
lret
jg
push
cmp
pop
ror
and
cmp
push
shll
adc
cmpsl
push
pop
xchg
push
sar
push
inc
xchg
outsl
out
xchg
dec
loope
jge
mov
loope
xchg
cmp
dec
out
or
rorl
rorb
xchg
int
mov
mov
dec
push
sub
jno
sub
lods
je
push
pushf
xor
jl
mov
pop
sbb
xor
cs
adc
mov
or
inc
adc
mov
adcl
push
pop
cwtl
mov
xor
pop
xor
push
pop
outsb
push
jge
repz
das
aas
and
pop
pop
popf
cmp
cmp
andl
aaa
sbb
sbb
mov
std
call
mov
jno
inc
dec
push
sbb
mov
es
mov
test
push
fidivrs
sub
mov
jecxz
fsubrs
daa
and
xchg
in
jg
push
jp
cmpsb
ds
addr16
cs
xor
pusha
dec
addr16
pusha
push
jmp
mov
test
pop
sub
dec
out
getsec
push
insl
xchg
push
mov
sub
popf
xchg
test
fidivs
fdivl
es
sbb
popf
repnz
aad
into
dec
jmp
push
mov
inc
fadds
scas
mov
cmp
stos
pop
and
inc
mov
push
into
push
sbb
insl
dec
jns
push
mov
movsb
xchg
pop
lret
pop
sub
xor
pop
pusha
adc
pushf
push
sub
daa
ljmp
lret
cs
insb
push
jbe
xorb
adc
stos
pop
pop
aam
xorl
in
cmp
fsub
aad
rorl
loope
int3
lods
jle
lret
jns
cmp
test
gs
into
add
push
in
mov
push
in
mov
cmp
mov
das
daa
test
std
ja
adc
in
nop
out
aad
int
nop
scas
sbb
fs
push
push
lcall
fimuls
pop
sbb
push
push
add
fisttps
pop
nop
psubsw
nop
lea
lock
sub
dec
mov
cmp
or
pushf
pop
xchg
xchg
nop
dec
mov
into
dec
jb
sub
ficompl
or
test
sub
testb
arpl
push
mov
push
dec
and
int3
and
sbb
cmp
adc
cmp
lods
sub
pop
mov
sub
adc
sbb
std
mov
push
fwait
sub
lcall
dec
push
in
stos
in
and
cmp
sbb
push
movsb
inc
out
ja
push
fcmovbe
ljmp
lea
push
ljmp
and
mov
push
aas
xor
sub
push
out
int3
cltd
lods
and
mov
subb
sbb
dec
in
pop
dec
sbb
push
mov
xchg
adc
out
mov
sahf
imul
or
dec
or
fs
popf
xchg
adc
sbb
push
mov
rol
mov
cmp
popa
jbe
aas
fs
and
adc
adc
cs
sbb
mov
or
scas
scas
or
jno
popa
xlat
mov
rcrb
and
fisubrl
mov
in
dec
xor
mov
and
insl
outsb
call
daa
xor
and
cmp
scas
ljmp
dec
mov
push
and
push
add
adc
sub
pop
xor
sub
stc
shll
adc
rcrb
xor
aam
sbb
dec
fimuls
adc
icebp
jno
xor
loop
push
xor
hlt
pop
imul
ss
cli
lcall
jl
sbb
mov
cld
lcall
mov
loope
push
lea
adc
cwtl
in
fisubl
add
adc
fucom
les
sub
imul
sbb
xchg
and
push
mov
mov
mov
cmp
jecxz
fbld
sbb
out
ss
and
je
sub
add
inc
scas
aas
dec
mov
sbb
mov
scas
out
mov
jge
lahf
sub
nop
add
jno
pop
insb
sbb
push
inc
lcall
hlt
sub
filds
pop
adc
clc
jmp
sub
cmp
push
ss
sarl
cmp
js
ret
sahf
and
int3
imul
daa
mov
popf
sub
and
sub
clc
imul
movsl
sbb
or
or
dec
ljmp
adc
adc
cmp
mov
cmp
dec
mov
inc
and
mov
mov
xchg
dec
cmp
pop
out
sbb
test
and
xchg
jno
cmp
mov
popf
mov
cmp
mov
lods
xchg
dec
adc
sbb
jnp
sbbl
fwait
scas
sbb
jl
scas
pop
aam
sub
lock
dec
sub
daa
daa
cmp
xor
addr16
test
cmc
ss
inc
js
sbb
stos
aam
cwtl
mov
in
mov
mov
mov
sbb
movsl
pop
scas
fsts
lcall
mov
push
lahf
push
mov
mov
push
leave
test
jbe
push
sbb
cmc
mov
sahf
push
jne
or
loope
clc
repz
lods
mov
or
in
push
sub
cmp
scas
adc
stos
xchg
xor
clc
pusha
daa
fstpl
in
aam
sti
pop
cmp
pop
push
sbbl
inc
movsl
sbb
clc
pop
imul
fstpl
fwait
in
cltd
hlt
dec
push
mov
imul
je
push
sub
push
jl
xchg
adc
movsl
lock
mov
push
shrl
xor
push
inc
cmp
out
pushf
in
or
push
xor
sbb
push
xor
cwtl
dec
int
sahf
int3
daa
scas
out
and
pop
cmpsl
das
js
mov
mov
cs
int
push
int3
jno
jmp
sbb
cmp
shr
mov
mov
or
xchg
hlt
xor
adc
adc
and
iret
xchg
mov
aas
and
in
cmp
int3
push
out
mov
cmove
adc
jo
xchg
pop
cmp
repnz
nopl
or
push
addr16
jbe
test
inc
lahf
cmpsl
fstpl
dec
pop
int3
dec
jae
pushf
dec
lods
rorb
lahf
das
pop
dec
or
pusha
dec
sub
cmp
inc
in
jne
mov
cmp
mov
cmp
push
push
scas
mov
jno
push
insb
fldl
fsubs
scas
and
add
sbb
in
lods
mov
sbb
ret
shlb
push
mov
sub
mov
addr16
jle
jecxz
sbb
inc
nop
xchg
mov
shl
sbb
arpl
xor
and
popa
mov
cmp
fucomp
or
mov
sub
jl
cmp
dec
movsb
sub
imul
bound
cmp
sub
xor
sbb
push
outsl
and
cmp
inc
push
sub
cmp
aam
sub
sbb
and
sbb
pop
aaa
cmp
inc
or
xchg
lods
and
adc
hlt
and
cltd
add
bound
cmc
sarb
and
jb
push
in
and
and
cmp
insl
adc
adc
std
test
sbb
mov
iret
inc
adc
sub
loopne
mov
xor
lods
xlat
lret
dec
shrb
cltd
ss
adc
dec
add
in
dec
pop
jg
dec
movsb
std
cmpsl
xor
or
ds
add
xchg
mov
scas
sbb
xchg
xor
lock
insb
push
adc
insb
sub
movsl
push
psllq
or
pop
stc
pop
leave
or
lahf
loopne
mov
ss
loope
rorl
gs
pop
ret
hlt
xor
adc
mov
adc
loopne
mov
jb
negl
jno
dec
outsl
imul
in
rcrl
dec
pushf
dec
sbb
fldt
int3
dec
mov
or
sti
aad
jne
cwtl
and
loopne
mov
rorb
dec
fidivs
inc
pop
repz
rcrb
test
lock
pusha
repnz
sbb
dec
or
pop
push
fldt
pop
pushf
lods
lahf
jl
popf
dec
insw
mov
sbb
pop
mov
jbe
pushf
fsubl
outsb
pop
xchg
push
jbe
adc
sbb
mov
add
dec
mov
push
mov
sub
xor
and
xor
insl
mov
dec
jo
pop
mov
cmc
popa
dec
mov
into
cmp
jbe
cmp
dec
mov
jb
dec
jno
jo
hlt
dec
adc
mov
jl
and
insb
sub
adc
push
add
movsl
ds
in
sbb
subb
sbb
mov
cltd
sbb
and
adc
sub
sbb
lods
outsb
xor
sub
fmull
push
sub
int
imul
jnp
adcb
subps
sti
add
pop
sbb
jg
adc
in
push
lcall
mov
fsubrl
nop
aam
int3
xchg
sbb
inc
nop
pop
notl
fistpll
inc
pop
std
dec
aam
dec
xor
adc
orl
cmp
loop
mov
inc
or
lcall
add
insb
in
data16
lret
mov
out
inc
and
bound
and
pop
push
nop
loop
sub
aas
scas
int3
mov
out
sub
das
xchg
and
insb
mov
decb
dec
cmp
arpl
mov
clc
popf
aaa
scas
aam
nop
cmp
call
lahf
mov
bound
pushf
and
push
sub
sbb
mov
dec
aam
xor
mov
adc
das
sbb
scas
std
xchg
data16
xchg
mov
fldcw
or
nop
or
add
pop
lods
orl
add
pop
adc
repz
roll
ret
dec
push
sbb
inc
mov
insl
data16
and
push
and
cmp
sub
cwtl
adc
and
cmp
int3
push
and
int
push
and
and
xor
or
out
cmp
dec
insl
inc
push
add
mov
shlb
mov
xor
pop
test
sub
mov
fdivrl
out
scas
lcall
mov
or
fcomps
movsb
sub
and
sbb
push
repnz
insl
mov
xor
sbb
mov
repz
pop
test
mov
mov
test
cs
imul
and
adc
sbb
test
sub
stos
adc
rorb
xchg
adc
inc
mov
mov
mov
enter
jge,pn
add
push
rclb
lods
loopne
out
jne
shrb
or
aad
adc
outsl
adc
jmp
icebp
in
inc
adc
sbb
adc
outsl
push
test
daa
mov
dec
mov
xor
pop
add
out
jp
lods
jns
cmp
adc
and
mov
fdivs
inc
adc
mov
lea
aad
cmpsl
mov
xor
adc
or
repz
pop
ret
fmull
aaa
fs
fists
pop
fdivrs
mov
mov
das
and
add
mov
adc
xchg
jae
push
aad
mov
scas
inc
sub
pushf
js
and
dec
add
sbb
sbb
int
cmp
xlat
adc
mov
mov
std
fidivrl
mov
cmp
and
sbb
xchg
or
gs
cmp
adc
jae
pushf
or
scas
mov
push
inc
cmp
gs
dec
fimuls
xor
xchg
sbb
and
aaa
push
jae
xor
dec
xchg
notl
cs
sbb
xor
sbb
lods
push
out
popf
or
mov
popf
pop
inc
iret
aam
push
mov
outsb
mov
sbb
mov
jl
cmp
cwtl
push
mov
and
pop
mov
pop
fcomp
jge
inc
mov
and
cwtl
mov
xor
push
lahf
mov
pop
push
insb
mov
pushf
xor
adc
in
scas
cld
adc
pushf
les
or
dec
call
call
movsb
fcoml
jb
ss
jns
mov
inc
or
and
or
push
iret
sbb
icebp
scas
push
mov
lods
out
pop
mov
scas
sarl
or
mov
add
int
les
jns
outsl
or
cmpsb
fucom
aaa
pop
and
adc
pop
pusha
pop
mov
adc
nop
mov
lods
sbb
or
xchg
fs
aam
pop
hlt
in
test
aam
sbb
sbb
test
push
pop
iret
jge
mov
imul
xchg
xchg
inc
sub
or
or
cltd
fdivr
cmp
test
jno
xor
jbe
jl
jge
sub
sbb
and
imul
or
or
adc
aas
movsl
dec
in
inc
dec
mov
push
into
lock
cmp
or
loope
sub
adc
add
sbb
cltd
cs
in
fmul
xchg
shrl
sbb
out
sbb
fstpl
and
out
adc
lods
adc
cmpsl
adc
in
scas
movsb
mov
push
popa
inc
and
push
xor
icebp
loopne
rclb
scas
mov
cmp
mov
aas
and
cmp
push
jl
mov
movsb
push
stc
fbld
dec
jns
movsb
adc
pop
and
int3
mov
sbb
ret
push
cmp
dec
ss
xchg
sub
mov
out
pop
lods
int3
cmp
inc
jecxz
cwtl
xor
sub
xor
sahf
and
and
and
fcompl
push
popf
lcall
inc
jno
mov
rcr
push
sbb
mov
lods
fldcw
fsub
jge
imul
sbb
stc
xor
cmp
sbb
dec
fdivrs
cld
leave
lret
ljmp
xchg
dec
mov
out
aad
movsl
outsb
ja
fs
scas
xor
pop
inc
jns
ljmp
mov
xchg
mov
sub
push
jge
test
out
popa
into
mov
xor
scas
xor
cli
mov
or
or
ret
loope
push
add
xor
pushf
sbb
and
hlt
scas
jg
push
fisttps
popf
lock
xchg
mov
adc
cltd
fldenv
add
or
dec
pop
mov
test
sbb
fisttpll
popa
dec
mov
loopne
mov
cmp
scas
pop
jge
sub
insl
rcr
push
lods
movsb
push
lock
xor
scas
pushw
mov
jno,pn
xor
lahf
sub
pushf
imulb
xchg
lock
pop
cmp
je
pop
insb
imul
mov
mov
mov
in
adc
add
sub
aaa
rcrl
call
shrb
es
or
bnd
push
insl
sti
dec
cmpl
clc
xor
xlat
testl
les
stos
fdivrs
mov
cmp
les
stc
or
adc
or
jbe
lods
repnz
inc
sbb
popf
dec
and
xor
adc
ret
xchg
aam
fcoms
adc
mov
lods
insb
ret
mov
dec
adc
enter
scas
pushf
sub
xor
sbb
mov
cwtl
mov
rcrl
lods
scas
pusha
jbe
in
pop
popa
xlat
sub
mov
dec
ror
push
jns
cwtl
fbstp
das
dec
fidivl
adc
cld
cmpsl
repz
mov
fcomps
add
scas
orl
fimuls
mov
cmp
mov
sub
cmpsb
dec
ficomps
jmp
push
std
fmull
clc
iret
loope
push
and
dec
sub
jmp
and
loope
pop
imul
sbb
adc
mov
xchg
mov
jle
js
outsb
pop
add
fsubs
sbb
dec
jo
mov
test
or
and
adc
mov
or
inc
jle
sbb
mov
xchg
addr16
gs
jo
dec
mov
push
jno
adc
insb
cmpb
out
dec
jno
out
inc
xchg
shll
xchg
sbb
cltd
scas
insb
mov
sub
outsb
in
test
dec
dec
push
adc
inc
outsb
jns
in
jne
push
xor
and
push
pop
push
insl
and
sub
jno
fs
mov
pushf
sbb
and
cmpsb
shlb
int
loope
sbb
mov
xor
mov
loop
addl
out
push
push
and
or
sbb
and
cmp
adc
cli
dec
out
sub
iret
rcrb
sbb
sbb
and
ljmp
pop
xor
jae
movsb
loop
xor
bound
mov
or
sub
pop
mov
jae
aam
or
das
loope
xlat
push
adc
mov
fidivrl
scas
add
sbb
jmp
sub
mov
dec
dec
into
or
popf
push
mov
movsb
or
enter
in
adc
shlb
mov
jle
inc
pusha
sahf
xlat
xchg
nop
ficoms
std
mov
out
and
iret
nop
aas
dec
scas
das
dec
popf
paddq
mov
sub
push
into
push
loopne
xor
and
pushf
dec
push
fistpl
pop
pop
push
add
push
pop
lods
adc
and
int
xlat
clc
cmpsl
xor
test
test
inc
inc
adc
mul
jae
test
sub
adc
and
test
loop
adc
aaa
add
adcb
fldcw
dec
and
test
jae
cltd
push
sbb
ss
xor
push
orb
push
sub
lret
ds
push
sbb
pop
add
and
cmp
mov
insl
jmp
and
push
jns
mov
popf
lret
pushf
push
adc
subb
sbb
and
leave
clc
dec
sub
int
adc
inc
xchg
hlt
pop
mov
mov
bound
out
iret
mov
das
push
mov
loop
push
mov
test
in
sub
mov
sbbb
imul
cmp
xchg
or
sbb
xchg
or
push
insb
pop
push
divl
mov
std
cmp
clc
or
repz
cmp
xor
adc
inc
sbb
hlt
mov
call
adc
imul
nop
xchg
pop
and
push
std
dec
xchg
and
frstor
lods
mov
adc
push
fistps
mov
pop
add
sbb
mov
lock
cmp
mov
nop
pop
add
cld
in
orb
stc
adc
ss
rorb
sub
cld
fcoms
aam
mov
nop
nop
sbbl
mov
nop
inc
dec
leave
nop
and
add
loop
insl
xchg
ret
pop
push
inc
and
adcb
mov
lods
incb
fldcw
popa
cs
lods
sub
outsl
cmp
ret
jmp
sahf
dec
xchg
xlat
push
nop
mov
sub
mov
out
pop
enter
mov
icebp
aaa
lahf
rcrl
xchg
adc
dec
faddl
insl
das
xor
cmp
push
pop
mov
fcoms
mov
or
push
or
or
gs
cwtl
or
push
mov
sub
mov
mov
xor
lea
xor
xor
xchg
cmp
icebp
xor
repnz
popf
xor
pop
cmp
das
mov
sbb
adc
cmp
mov
cmp
cmp
out
and
pop
in
mov
nop
mov
insb
test
push
filds
bound
lods
scas
dec
lcall
adc
xchg
push
mov
divb
sub
pop
test
mov
xchg
lock
data16
loopne
cmp
sbb
mov
mov
mov
xchg
out
lcall
dec
or
scas
ret
ljmp
iret
sarl
push
or
jno
mov
enter
sub
adc
fwait
lods
or
mov
cld
test
cmp
fst
xor
mov
push
adc
out
or
insl
ljmp
dec
adc
mov
fisubs
inc
enter
call
movsl
rcll
movsb
cmp
and
mov
cltd
push
xor
cmp
jmp
popf
cmp
js
loopne
sbb
sbb
arpl
push
inc
jg
mov
mov
mov
lock
cmp
and
dec
push
pop
push
pusha
or
loop
jo
sbbl
movsb
ss
imul
int3
or
out
pop
jo
adc
sbb
bound
xor
sub
ljmp
aam
pop
jl
paddb
jno
xor
add
in
call
adc
mov
insb
push
jb
test
sub
ds
dec
push
add
shlb
inc
mov
sar
rclb
sbb
icebp
sub
mov
or
sbb
mov
decl
lods
jl
out
sub
sub
dec
push
aas
mov
ss
sbb
sbb
dec
dec
arpl
dec
push
adc
mov
or
dec
push
and
sbb
call
sbb
pop
fs
sbb
and
xchg
fdivrl
pusha
sbb
fcoms
or
movsb
push
fsts
outsl
sbb
push
mov
stos
andl
cwtl
out
loope
int
sbb
mov
dec
xor
push
jge
cs
in
js
dec
sub
sbb
ss
loop
inc
pop
fcmovnu
dec
stc
repnz
sahf
cmp
and
inc
ffree
pop
repz
jb
dec
out
sub
inc
cmp
int3
push
aad
push
insl
mov
mov
and
inc
mov
mov
mov
sti
pop
fs
mov
mov
or
lock
or
decb
adc
or
dec
shlb
fistpll
mov
mov
sub
push
in
std
aas
mov
add
push
xchg
aad
xchg
test
es
scas
sbb
divb
cmp
insb
scas
jecxz
dec
mov
scas
push
cmp
inc
dec
aad
shl
cmpb
pop
sub
loope
mov
outsl
push
mov
cmp
lahf
nop
sti
cld
sbb
arpl
xor
in
add
sub
adc
loope
push
imul
les
xor
fnsave
ds
out
loop
call
cmpsb
xor
fists
popf
outsb
test
adc
movsl
and
lods
lock
pusha
dec
cmp
adc
fildll
add
loop
jl
pop
pop
jmp
pop
outsb
push
dec
mov
repnz
mov
in
push
filds
je
pop
push
adc
scas
mov
mov
rcl
sbb
sbb
xchg
pushfw
push
cmp
jl
jg
pusha
dec
mov
iret
jne
aaa
jge
push
out
ret
mov
adc
nopl
push
inc
dec
je
xchg
mov
lock
lods
psubb
push
pushf
pusha
call
jl
fstl
daa
mov
or
and
or
call
xor
call
jne
and
test
outsb
or
and
xor
or
mov
in
cmp
hlt
pxor
dec
inc
in
adc
aam
xor
aas
sbb
add
xchg
xor
xor
and
pop
or
add
inc
insl
fstps
or
fldenv
mov
or
adc
xor
dec
jns
dec
scas
lock
mov
popl
cmp
dec
cmpsl
sbb
push
dec
mov
mov
nop
test
hlt
pop
pop
in
mov
push
pop
push
push
sbb
pop
insb
aad
or
lock
mov
in
mov
push
sbb
repz
xor
mov
xor
adc
and
jns
cmp
dec
icebp
testb
cld
cmp
addr16
fsubrp
cmpsl
in
stos
lea
ljmp
inc
pop
and
inc
adc
dec
scas
mov
add
xor
push
sub
sbb
inc
push
std
pop
xchg
adc
mov
cmp
scas
push
inc
fstps
mov
cmc
adc
and
sub
adc
cmp
mov
xor
imul
mov
push
and
test
sub
pusha
fucomp
push
lods
out
sbb
and
scas
xchg
sti
sbb
test
mov
stos
jo
sub
push
lock
cmp
cmp
movsb
mull
imul
xor
inc
sub
je
push
or
push
insl
sbb
cmpsb
xchg
adc
aad
or
scas
jno
push
cmp
pop
or
adc
cmp
test
bound
daa
lods
adc
adc
sbb
or
push
push
lret
xor
out
and
sub
dec
test
xor
dec
dec
mov
cmp
scas
sub
sti
mov
or
outsb
add
fldcw
push
sub
scas
lret
sub
stc
push
shlb
inc
rcr
push
lods
push
movsb
mov
jg
pushf
mov
gs
and
out
pushf
daa
in
jne
mov
jae
mov
fsubrl
xor
scas
sub
loope
daa
dec
movsl
clc
les
orb
imul
scas
popl
mov
out
movsb
jno
inc
or
imul
cmpsl
sub
sbb
jl
pop
ret
bound
xor
add
push
and
int3
jl
stc
insb
scas
add
mov
dec
das
pop
int3
add
aas
push
jo
xchg
in
sbb
adc
push
sub
jg
inc
out
pop
cltd
scas
arpl
push
add
daa
and
iret
dec
inc
mov
cltd
imul
dec
jg
inc
pop
or
pushf
xor
sbb
test
mul
and
jne
sbb
loop
or
movsl
and
adc
xor
mov
loopne
xor
push
xchg
enter
adc
jne
pusha
and
add
test
mov
add
idivb
mov
adc
xchg
mov
ds
adc
cmp
push
jle
test
sbb
out
push
mov
hlt
test
push
test
adcl
inc
xor
insb
dec
xor
mov
mov
dec
jne
xchg
enter
mov
cmc
ljmp
xor
dec
adc
loope
or
mov
inc
adc
out
mov
mov
sbb
in
icebp
fsubrl
cmp
and
dec
fdivs
pop
jo
mov
inc
insb
aam
jnp
add
frstor
fwait
inc
std
leave
sbb
cs
loope
jo
adc
hlt
scas
lods
fcomp
mov
mov
xchg
push
mov
mov
cwtl
xor
inc
in
pushf
push
add
or
mov
popf
int3
mov
lret
inc
fistpl
iret
aaa
jnp
pop
call
leave
mov
out
pop
pusha
fnstcw
adc
cwtl
loope
mov
or
sbb
insl
xor
mov
adc
mov
in
aaa
outsb
cltd
pop
push
aad
and
shll
sub
and
adc
and
push
sbb
xor
cli
addr16
inc
dec
mov
cmp
push
push
andl
adc
and
repz
inc
xchg
push
mov
sub
mov
aas
test
add
dec
push
loopne
sbb
adc
mov
and
inc
or
push
sub
lret
mov
aaa
cmp
insl
rorb
cmp
xor
push
int3
icebp
or
xchg
ja
pushf
inc
or
pop
int
adc
inc
loope
inc
sti
jmp
bnd
xor
adc
adc
mov
dec
sbb
iret
ret
hlt
sub
inc
or
xchg
mov
mov
pop
and
cmpsl
ds
sbb
dec
sub
nop
mov
movsl
dec
pop
cwtl
and
shlb
sbb
or
mov
or
xor
jl
pop
scas
pushl
cmpb
push
and
lods
mov
lods
push
fstp
lods
and
push
popa
cmp
lods
sbb
into
xchg
mov
push
insb
into
xor
inc
and
inc
xor
addr16
aam
pop
jb
xlat
pop
pop
push
and
push
pop
orb
pop
adc
xorl
or
cs
repz
mov
loop
dec
push
cmp
mov
dec
cmp
xor
jmp
inc
pop
adc
mov
aam
data16
pusha
and
ficomps
adc
shrb
jle
ret
jno
addb
les
adcl
mov
mov
loope
pop
nop
dec
mov
xchg
stos
push
mov
and
leave
xor
or
subb
jno
cmp
fidivs
pop
mov
mov
mov
ds
into
xlat
fstl
mov
and
arpl
and
cmp
in
xor
pop
pop
fs
inc
loope
xchg
loope
mov
or
pop
fstpl
pop
fistl
sub
sub
xchg
sub
jo
lahf
lock
mov
xor
jo
sub
dec
jae
mov
push
push
sub
int
fistpl
xor
arpl
pop
jle
dec
push
add
aam
xchg
add
test
pop
sbb
jno
push
push
push
or
fabs
movsl
mov
xor
inc
dec
es
loopne
mov
hlt
cmp
stc
int
or
adc
cmp
fdivrs
sub
movsl
adc
push
push
cmp
scas
mov
xor
inc
pop
xor
popf
fcompl
inc
dec
xor
aam
sub
cmp
sbb
loopne
adc
add
fcomi
xchg
into
mov
xor
lock
sub
inc
xchg
mul
jno
mov
ret
dec
and
mov
and
enter
push
ja
push
mov
jg
sbb
mov
scas
adc
in
and
test
pop
dec
xchg
loope
int3
cmp
mov
jl
daa
mov
xorl
cmp
and
out
daa
sbb
lods
mov
mov
mov
dec
ja
cmp
orb
shr
jo
fisttpll
jns
xor
and
pop
adc
cmp
icebp
and
xor
jmp
cmp
push
cmp
cmp
jle
add
xchg
jb
push
sbb
sub
pop
adc
mov
sbb
push
fcompl
cmpsb
xchg
sarl
sbb
pop
repnz
mov
push
imul
sbb
adc
xchg
jne
cmp
mov
loope
jp
movsb
je
sbb
xor
mov
adc
or
mov
sbb
cmp
or
sub
insl
xor
sti
ret
test
push
and
popf
sbb
idivl
or
cmp
mov
push
fcmovnbe
in
int3
mov
mov
lret
add
jmpw
ret
adc
adcb
insl
jne
jge
mov
cmp
mov
pop
push
push
inc
cwtl
stc
adc
dec
scas
leave
hlt
fldl
mov
iret
lods
loop
das
jo
sarb
inc
pop
dec
sbb
outsl
mov
cwtl
inc
scas
mov
push
andl
scas
sahf
push
xlat
ret
fldt
insl
pop
cmp
dec
popa
sbb
xor
je
in
dec
mov
fisttpll
push
imul
sbb
push
repz
jl
jae
adc
xor
dec
or
ss
and
and
xor
mov
mov
and
add
das
sbb
loope
mov
aas
inc
lods
imul
pop
cs
sahf
lock
lock
mov
pop
ret
cmp
xor
lcall
aam
jb
cwtl
sbb
xor
dec
sub
ret
sbb
pop
pop
mov
scas
ror
sub
aaa
mov
xlat
jb
xchg
lods
push
bound
push
sub
push
fdivrl
mov
pop
fwait
xor
adc
push
push
rclb
mov
or
push
pusha
jae
xchg
mov
pop
sub
xor
xor
sub
cwtl
xchg
xchg
inc
je
aam
insl
mov
add
mov
pop
scas
dec
leave
pop
repz
lea
adc
adc
mov
sub
insb
push
cwtl
push
cld
test
mov
frstor
adcb
mov
mov
add
scas
adc
pop
imul
cmp
sbb
dec
lds
xor
xor
rcrl
pop
mov
loope
gs
cld
sub
shlb
xchg
sub
jno
cmp
pop
movsl
push
out
dec
aam
jo
xor
push
dec
test
in
adc
vpsubw
sub
notl
aaa
jp
sub
hlt
daa
int
scas
lock
add
cmp
mov
rclb
mov
aas
rorb
mov
cmp
mov
or
xor
int3
inc
sbb
add
mov
push
mov
enter
nop
sarb
scas
sbb
cmp
mov
inc
sarl
iret
sbb
sbb
repz
call
sub
pop
sbb
cld
jbe
shlb
pop
mov
push
adcl
dec
lea
cmp
mov
sbb
jae
loopne
addr16
sbb
sbb
lahf
out
dec
add
sbb
jecxz
sub
sub
sbb
pop
jns
pop
add
inc
cmc
dec
roll
mov
loope
cltd
ss
fs
or
sahf
test
scas
aas
pop
fs
pop
mov
jecxz
pusha
jge
jbe
aad
sub
sbb
outsl
dec
dec
xchg
loopne
imul
jecxz
mov
push
mov
ljmp
out
jne
mov
imul
cld
out
decb
ja
inc
ffree
jl
dec
pop
pop
popf
sahf
in
push
xor
mov
int
jmp
cld
dec
inc
add
mov
mov
jno
sbb
jg
cmp
scas
adc
or
lret
jl
push
call
pop
push
xor
xor
cmp
mov
pushf
push
sub
cltd
mov
sahf
cs
and
add
add
test
subl
mov
inc
jl
pop
andb
pop
cmp
push
cmpsl
or
mov
inc
leave
ds
cmp
inc
pop
sbb
cmp
std
jbe
push
jl
mov
or
rcrl
sti
jmp
pop
push
and
test
and
or
cld
mov
dec
xor
jno
and
push
loopne
or
pop
push
xchg
sbb
test
mov
out
lock
mov
jns
sbb
negl
xorl
cmp
dec
rcrl
clc
psllw
call
mov
mov
out
int
dec
test
sbb
jle
dec
ss
mov
inc
imul
sub
pop
xor
mov
mov
sbb
imul
pop
testb
pop
lods
mov
cmp
icebp
adc
and
hlt
adc
mov
cmpsb
jae
sbb
fisttpll
pusha
gs
or
popa
decl
insb
cmp
adc
pop
aam
out
mov
jo
test
movsl
add
dec
in
fisttpll
and
and
into
adcl
and
mov
bound
mov
push
cltd
cmp
fstpl
push
xor
scas
outsl
arpl
pop
lods
xor
pop
pop
outsb
mov
pop
cli
outsl
nop
mov
xor
dec
addb
xor
mov
mov
xchg
mov
pusha
jno
je
cmp
xor
and
data16
lods
cmp
js
movsl
bound
push
and
sub
std
sbb
xlat
aad
sub
cmpsb
int3
and
mov
cltd
mov
in
adc
js
pushf
dec
movsl
and
aad
in
dec
daa
test
push
fs
insl
mov
clc
rolb
sbb
je
xchg
sbb
pusha
std
fidivrs
and
or
sub
pop
mov
mov
mov
sub
jge
or
sub
push
arpl
adc
xor
xor
inc
cmpsl
adc
lahf
push
dec
ljmp
int
cmp
insl
lods
dec
or
scas
icebp
push
cmp
lods
cmpsl
push
out
stc
shrb
insl
adcl
mov
jecxz
ljmp
cmp
pop
mov
pusha
arpl
mov
mov
in
inc
icebp
call
imul
clc
dec
push
xchg
push
repnz
imul
lods
enter
push
mov
xor
enter
jns
pop
xor
repz
arpl
cmpsb
add
orb
scas
or
lods
adc
push
dec
sbb
mov
sub
xchg
cmc
push
pop
push
outsl
jle
les
out
dec
sbb
mov
popf
jl
xchg
aam
fsubrl
and
or
xchg
imul
cmp
ds
pushf
cmp
jnp
enter
inc
xchg
cmp
lods
mov
inc
cs
dec
adc
pop
sub
imul
xor
xchg
dec
jo
mov
pop
lods
mov
adc
pop
push
pcmpeqw
sbb
push
cmp
movsb
cld
repnz
inc
mov
std
orl
dec
adc
cmp
daa
or
shll
dec
cmp
sahf
out
pop
push
loop
pop
mov
in
test
incl
enter
jb
daa
xor
dec
cmp
gs
sahf
adc
clc
push
fists
das
iret
mov
imul
icebp
pushf
cmpsl
xchg
inc
and
pop
dec
sbb
xchg
mov
mov
lcall
mov
out
pop
icebp
pop
pop
xor
xchg
pushf
xchg
pushf
test
mov
sbb
mov
sbb
jmp
sbb
push
gs
sti
cli
and
fs
jne
pop
les
push
dec
pop
push
dec
sub
es
loope
sbb
rorl
adc
mov
jecxz
push
dec
mov
push
lods
and
sub
faddl
dec
icebp
sti
and
iret
andl
ja
sahf
fisubrl
mov
and
xor
mov
pusha
fiadds
aaa
or
mov
cmpsl
scas
push
pop
scas
push
push
xor
sbb
cmpsl
es
jno
push
fldl
dec
adc
into
pop
jp
mov
dec
pop
imul
push
mov
sub
lea
add
scas
xchg
gs
sti
sub
out
mov
dec
inc
mov
lods
pop
pop
dec
lods
push
shll
dec
mov
push
inc
push
push
ds
aas
mov
pushf
push
cmp
jle
push
jp
lcall
and
adc
jae
sbb
cmp
aam
jne
jbe
outsb
ret
in
popf
xor
push
int3
cmp
mov
fcoml
scas
mov
xor
push
pop
adc
xchg
nop
fcmove
pop
cmp
loope
adc
mov
pushf
add
lea
dec
xchg
nop
cltd
fs
xchg
out
add
lods
or
sahf
insl
adcb
adc
add
fs
lods
outsb
sahf
dec
pop
adc
push
jnp
push
scas
push
fdivrs
sbb
orb
fld
xor
pop
inc
xchg
cs
mov
jmp
loop
adc
jns
test
pop
xor
sub
es
xor
jg
mov
sbb
lea
clc
jmp
imul
and
popf
ret
js
lret
adc
aam
sub
mov
mov
add
cmp
fldl
in
push
fs
loope
fs
or
mov
lods
mov
push
xchg
dec
std
sub
push
cli
or
adc
push
adc
push
out
das
xor
jmp
add
dec
decl
lret
repnz
mov
xor
jns
shr
rorl
popf
hlt
nop
mov
rorb
shrb
sbb
data16
adc
mov
xor
xor
pop
popf
xchg
dec
cli
jecxz
sub
into
sbb
add
scas
mov
loopne
pop
inc
and
mov
arpl
rclb
sub
mov
adc
ret
and
ss
push
rolb
sub
push
sti
push
sbb
enter
scas
jle
cmp
xchg
xchg
repnz
sbb
mov
pop
scas
jge
push
push
add
fldl
iret
mov
push
dec
ljmp
xchg
je
fcmovnbe
sub
testl
push
mov
pop
sub
mov
int
xor
dec
push
scas
pushf
mov
adc
lahf
cwtl
push
clc
push
lods
inc
dec
inc
dec
gs
add
out
popa
cmp
sub
in
bound
xorl
shlb
loope
rolb
int3
cld
fiaddl
test
cld
dec
or
push
dec
cmpsb
push
iret
cs
cmp
and
cltd
mov
push
into
roll
imul
lea
mov
jnp
aam
shll
mov
sti
mov
adc
xor
int3
mov
daa
adc
xchg
ja
mov
fcmovb
cld
hlt
or
and
fwait
push
jo
repz
pop
xchg
and
into
imul
adc
and
repz
movb
adc
dec
inc
and
imul
push
sub
sbb
push
xor
jge
push
or
sarl
bound
clc
fstpl
mov
sbb
cmp
sub
mov
add
pop
xor
xchg
shlb
orl
cmpsl
dec
dec
aam
cwtl
rcrl
call
mov
outsl
push
pushf
aam
rorb
jns
xor
xchg
in
and
or
cmp
mov
filds
sbb
push
stos
aas
push
or
pop
pop
outsb
mov
mov
sbb
aam
xor
push
fcomps
pusha
sub
in
insb
loope
push
add
xlat
mov
scas
out
dec
pop
dec
lea
fildll
mov
int3
add
or
xor
sub
push
adc
adc
inc
sbb
mov
add
insl
pusha
mov
mov
push
sbb
imul
xor
lcall
movsl
xor
sub
pusha
xchg
mov
cmovno
stc
adc
or
ret
xchg
sti
nop
push
mov
mov
add
in
loope
mov
insl
lcall
stc
out
out
scas
and
xchg
in
and
push
cs
repz
sub
xchg
jg
sbb
add
pop
xor
xor
in
lods
enter
jmp
jl
incl
lcall
jmp
and
pushf
sub
jle
dec
sbb
rcrb
movsb
outsb
fs
lahf
rcl
push
sbb
push
or
and
mov
scas
push
xchg
cld
mov
lret
sub
pop
inc
mov
jns
xchg
dec
fs
dec
cwtl
fsubrl
jo
das
call
outsl
loope
pop
and
mov
fxam
dec
cmp
xchg
jae
adc
aad
xchg
dec
movsb
adc
sbb
mov
js
mov
test
sbbl
jne
pop
fldl
push
shrl
out
adcb
aas
dec
nop
sbb
jb
push
and
jo
in
pop
mov
sub
sbb
lock
outsl
test
aam
adcb
scas
mov
add
rcll
gs
push
cmpsl
scas
xchg
dec
and
jge
xor
fwait
sbb
pop
lock
cmp
sbb
adc
ja
cmp
rorl
xchg
das
fldcw
jbe
cmp
pop
jnp
sar
and
loop
jnp
mov
test
imul
aas
and
adc
xchg
rorb
mov
ret
rolb
add
insb
inc
dec
dec
fcomi
loope
and
sbb
repz
imul
mov
dec
or
popf
lock
aam
mov
mov
clc
pop
std
xchg
test
in
popf
inc
add
sbb
sub
mov
dec
adc
adc
add
and
add
push
push
dec
test
dec
xchg
es
inc
add
sub
fnstenv
scas
pop
xlat
mov
je
push
mov
movsb
mov
ret
inc
jg
xor
sti
mov
dec
dec
sbb
out
xchg
cmc
add
or
or
xchg
mov
test
cmp
dec
lcall
xor
cmp
insb
fiadds
cmp
dec
xchg
adc
outsl
je
clc
jmp
cli
pop
dec
adc
mov
fs
dec
out
add
std
jmp
dec
dec
xchg
test
popl
mov
fildll
mov
mov
enter
popaw
sbb
adc
lret
sbb
rcrb
mov
push
mov
pop
outsl
or
negl
xchg
sbb
jns
rclb
add
adc
mov
dec
mov
adc
push
sub
sbb
and
fstpt
nop
mov
sbb
fistps
push
or
push
mov
sbb
js
mov
lea
clc
add
jmp
xchg
pop
or
push
test
aas
cwtl
adcb
ljmp
std
pop
pop
std
lods
cmpsl
lods
mov
loope
insl
cmp
jbe
inc
xchg
ret
jbe
sub
pop
in
test
push
fsub
or
jecxz
dec
or
inc
sbb
lea
dec
in
lcall
scas
mov
cmp
decl
pushf
mov
xor
fsubl
popf
shll
pop
inc
mov
gs
rcl
stos
push
sbb
push
mov
int
fbld
dec
sub
push
popa
mov
mov
mov
sbb
lods
mov
pop
mov
and
mov
fsubrs
ja
push
fisttpll
add
das
loope
ret
sbb
inc
lock
out
pushf
sbb
push
push
fsubrl
lock
rol
mov
pushf
xlat
mov
inc
mov
push
sub
xor
jno
fdivs
faddl
daa
jge
lret
cltd
mov
push
repz
and
imul
aad
movsb
dec
lods
cmp
insb
jnp
ficoms
cmp
dec
mov
cmp
sub
push
mov
std
shlb
movsl
int3
lods
jne
out
dec
push
and
into
enter
cs
or
rclb
pop
nop
xor
outsl
mov
xor
mov
lea
pop
mov
out
lods
pop
adc
inc
jne
pushf
add
fsubr
pop
ds
and
loope
sbbl
or
sub
inc
or
jge
add
mov
ud2
cmp
fldcw
scas
fdecstp
adc
xor
sbb
imul
mov
sbb
push
popa
out
mov
aad
jg
xchg
push
pop
hlt
adc
sbb
inc
cmp
pop
add
call
scas
and
scas
or
xchg
iret
daa
negb
jno
pop
adc
cmp
fildl
dec
neg
cwtl
in
pop
repnz
clc
adc
cwtl
pop
or
in
pop
les
rorl
sbb
jno
cs
pop
sbb
movsb
sbb
idivb
sbb
ds
xchg
fbld
push
mov
push
push
cwtl
inc
insb
push
xor
cmp
add
lret
or
repz
xor
fildll
sub
pop
shlb
push
xchg
jne
or
iret
xor
push
mov
ret
out
popf
lods
jmp
mov
cmp
dec
jno
inc
fbstp
mov
push
iret
fisubl
cmp
imul
sub
pop
push
sets
divb
out
mov
push
bound
jae
and
lock
and
mov
push
mov
jnp
stc
outsb
cmp
push
fidivl
lahf
mov
mov
jns
in
sbb
push
sahf
sbb
fwait
or
jb
sub
in
mov
xor
pop
or
dec
aaa
pop
bound
jno
sub
movsb
or
adc
pop
mov
push
dec
adc
aad
cs
add
mov
mov
or
xchg
leave
adc
pop
xchg
mov
and
dec
or
dec
test
inc
popf
sub
dec
test
jle
xchg
in
sbb
fldl
mov
xlat
or
push
lret
push
pop
decl
pushf
aad
xor
in
je
or
mov
shlb
clc
outsl
incb
int3
rcr
sbb
pop
pop
nop
nop
lods
fidivl
or
push
int3
mov
mov
test
pop
inc
insb
dec
cmc
cwtl
and
and
push
ret
mov
dec
xor
ret
fstpl
in
inc
sbb
adc
shrl
sbb
sub
pop
or
mov
scas
sbb
adc
movsb
or
mov
shl
loop
xor
sbb
adc
js
out
repnz
in
mov
sbb
cmp
sahf
push
push
push
dec
pop
bound
mov
in
xor
mov
and
cld
and
fmuls
inc
and
push
nop
out
es
mov
test
mov
dec
dec
cmp
push
mov
movsb
add
movsl
or
mov
cwtl
lock
sti
fnstsw
adc
adc
scas
lret
cli
or
imul
mov
push
scas
inc
push
dec
outsl
push
xchg
or
fcompl
sub
pop
push
pop
adc
rcrb
mov
mov
cmp
lahf
sti
mov
std
add
insb
push
cmp
sbb
xor
mull
popf
adc
push
mov
daa
pop
sub
pop
loop
or
push
aaa
adc
push
jb
mov
fstpl
ljmp
shl
cmp
inc
fmuls
adc
das
lock
enter
cmp
adcb
movsl
mov
or
xchg
or
and
ss
mov
setae
push
xchg
or
add
sub
addl
fnstsw
mov
jns
rcl
cld
cmpl
add
inc
push
aam
in
and
gs
jge
pop
cmp
fisubl
jns
or
lods
push
movsb
push
fbld
enter
cmp
or
xor
inc
push
repnz
lea
call
inc
ret
and
add
insb
js
scas
mov
xor
mov
jle
xorb
xchg
jmp
addr16
pop
jl
adc
add
inc
in
mov
adc
push
sbb
dec
xor
scas
mov
sbb
sub
mov
ret
xor
sbb
xor
gs
sub
lock
call
push
sahf
scas
xorb
jge
scas
push
jo
int
cld
cmp
in
cmp
lods
xchg
lock
insb
pop
and
bound
cmpsl
lcall
loop
xchg
shll
sub
lea
jo
sbb
les
insb
dec
and
dec
test
mov
test
sti
das
shrl
dec
shrb
lahf
inc
cmp
movsl
dec
out
fstpt
and
outsb
ljmp
adc
sbb
push
mov
mov
js
pushf
pop
sub
mov
mov
inc
movsl
cmp
addr16
sbb
push
hlt
pop
loope
push
clc
mov
cmp
fsubr
cmp
int
aad
cmp
push
jmp
pop
mov
aad
es
insb
jmp
mov
add
adc
adc
xor
lods
sbb
sbb
enter
sub
xor
sti
and
pop
cmp
cmpsl
cmpl
xlat
js
call
incl
inc
sbb
xor
fnsave
ret
adc
mov
xlat
sub
push
gs
push
jo
jle
mov
inc
inc
psrlw
pop
hlt
push
sahf
ret
outsl
xor
pop
sbb
scas
pop
negb
fcomip
mov
hlt
cwtl
mov
mov
nop
out
jle
cwtl
adc
scas
sbb
cld
cwtl
cmp
dec
ljmp
out
insl
mov
fidivl
dec
mov
arpl
push
das
adc
sbb
and
adc
and
xor
mov
add
ss
loope
xor
addps
in
stc
aas
inc
dec
popf
and
pop
int3
btc
ss
daa
xor
loopne
and
insb
int3
xor
fstpl
bound
lcall
idivl
fnstcw
ss
pop
adc
mov
push
ljmp
das
insb
in
pop
shl
adc
pop
pusha
cmovge
cmp
jl
aad
sbb
dec
pop
adc
lret
adc
ds
jge
mov
push
lahf
test
cld
insl
scas
fistpl
push
sbb
ror
std
out
stos
std
pop
and
int3
add
cld
sbb
adc
sbb
pop
xor
sahf
hlt
cmpsb
rclb
pop
cmp
cmp
adc
ljmp
shll
insb
cmp
out
js
dec
hlt
or
adcb
jae
js
xor
sbb
shrd
test
jp
aas
in
dec
mov
or
filds
push
jns
xor
out
pop
pop
aaa
cmp
add
cmp
mov
popa
outsb
dec
rcrb
lret
cmp
cs
cmp
adc
std
lods
inc
pushf
adc
mov
jl
out
mov
jb
adc
pop
psubq
cltd
sahf
mov
jne
dec
stos
lods
sub
dec
xchg
movsb
int
and
sbb
sbb
or
fcoms
pushf
xchg
scas
pop
xchg
sbb
push
sbb
and
mov
add
stos
dec
pop
es
das
mov
mov
add
or
loope
or
cltd
mov
sbb
rorb
xor
cmp
push
xor
mov
cmp
mov
js
push
pop
fsubrp
xor
xchg
mov
ret
push
inc
aaa
add
icebp
sbb
push
mov
jl
xor
out
pop
and
stos
stc
cmp
push
add
mov
pop
fidivrl
jl
jno
jns,pt
iret
or
dec
mov
push
xor
pop
test
loope
pop
xchg
jl
lret
mov
sub
sbb
clc
xor
sbb
mov
psubusb
sahf
push
add
adc
inc
dec
cmp
mov
out
fwait
imul
push
cmp
sbb
out
add
scas
or
xor
mov
int
push
push
and
push
cmp
hlt
dec
cmp
adc
bound
jns
inc
or
inc
ss
ucomiss
loope
jmp
es
das
pop
and
dec
jg
adc
push
xchg
imul
pop
bound
sahf
or
dec
adc
movsb
and
or
cmp
ss
imul
xchg
les
lret
insl
cwtl
jp
inc
sbbb
adc
fs
pop
dec
inc
mov
test
insl
and
outsl
mov
adc
out
test
xor
test
scas
push
push
daa
jnp
pop
shrb
rolb
mov
rcl
inc
mov
nop
out
daa
push
or
pushf
cs
push
and
inc
push
cmp
ss
mov
pusha
pop
dec
mov
mov
sub
push
xor
sahf
mov
and
push
mov
push
xor
mov
cmp
and
inc
sub
mov
sti
jo
jmp
inc
push
mov
sbb
xchg
push
repz
mov
cs
add
clc
push
dec
aad
pop
lret
push
mov
pop
insl
in
sbb
inc
jg
out
cmp
int
sbbb
or
jmp
mov
cmp
lcall
cmp
or
repz
in
xchg
je
les
cwtl
or
xchg
adc
gs
leave
cmp
adc
and
mov
sbb
pushf
or
ret
xchg
xchg
sbb
adcb
add
sub
sbb
pusha
aas
pop
pop
push
dec
and
loope
sbb
les
push
fimuls
push
mov
mov
jns
std
xor
or
leave
fs
push
scas
fs
scas
ljmp
jp
and
mov
push
ss
sbb
cmp
add
push
scas
adc
aam
popa
nop
insb
mov
popf
sub
outsl
dec
pop
xor
mov
aam
pushf
adc
fdivrs
jl
inc
mov
mov
push
cmp
xchg
fxch
dec
popa
pop
scas
dec
fidivs
stos
dec
sbb
loope
ss
pop
xor
and
cmpsb
pop
sub
arpl
dec
mov
popl
dec
pop
jle
mov
pop
lods
lods
call
xlat
adc
ss
sbb
sub
clc
xor
jmp
mov
mov
xor
out
mov
shll
inc
add
push
sbb
mov
sub
jp
sbb
outsb
mov
mov
xor
cmp
iret
dec
jmp
pop
push
jne
cmp
fstl
out
scas
or
push
lahf
scas
xchg
imul
ljmp
sbb
cmp
in
repnz
mov
mov
sbb
sub
or
rcrl
push
ljmp
js
fld
fidivrl
mov
movsb
lahf
push
xchg
insl
rcrb
das
imul
in
cs
mov
sub
jmp
adc
mov
add
loop
inc
pop
lahf
cmp
lods
mov
pop
pop
push
in
shl
les
sti
fstpt
cwtl
pop
pop
pop
push
out
in
fnstenv
in
mov
insb
loope
in
rclb
add
pushf
sbb
sub
jns
test
fs
adc
int
push
lds
jle
je
mov
test
mov
or
pop
lcall
nop
pop
xchg
insb
push
xor
nop
inc
and
mov
mov
mov
sbb
or
add
add
inc
ss
lods
into
imul
jge
xchg
outsb
in
out
insl
push
mov
ljmp
das
inc
mov
mov
sub
scas
ret
xor
ret
mov
adc
dec
in
scas
xchg
outsl
push
mov
mov
mov
sbb
scas
mov
mov
scas
gs
filds
das
mov
shl
xchg
es
push
pop
jnp
push
or
leave
add
aam
lods
lods
into
rcrb
jl
insb
push
mov
push
out
in
fistpl
cmp
add
je
pop
movsb
insb
xchg
js
add
aam
jl
pushf
shlb
cs
push
mov
inc
mov
stos
pop
mov
nop
jbe
je
push
pop
pop
cmpb
dec
insl
and
data16
and
cmp
stos
dec
or
dec
xchg
jne
or
out
jne
popa
push
movsl
push
sbb
mov
pop
push
mov
cmp
push
sub
or
out
gs
jge
lods
pop
dec
xlat
push
xor
cmp
rcr
stos
insl
push
imull
sahf
lret
bound
out
fsubl
inc
mov
and
sbb
stc
mov
xchg
dec
sbb
xchg
sbb
and
rorb
sub
jp
jbe
push
jp
xor
xor
jae
mov
dec
int3
orl
lods
imul
xor
js
dec
and
jne
and
in
or
pop
orps
cs
arpl
iret
insb
and
push
jl
scas
xor
shrl
jae
aam
push
cmp
pop
cmpsl
inc
xor
mov
scas
mov
mov
adc
add
nop
xor
cwtl
cli
test
push
add
push
loope
scas
pop
jne
xchg
outsl
retw
into
ss
das
int3
into
in
mov
xchg
push
mov
scas
or
data16
inc
sub
push
or
inc
lahf
and
lret
in
adc
jo
int
in
mov
cmp
mov
pop
xchg
pop
fisttpll
aad
mov
imul
sti
filds
je
mov
jmp
in
push
nop
imul
icebp
es
cmovg
xor
cmc
sti
iret
sbb
push
subb
cmp
test
pop
and
mov
push
dec
inc
repz
push
ljmp
test
jns
dec
xchg
mov
pop
push
jecxz
push
scas
push
in
cltd
insl
frstor
imull
push
mov
imul
pop
movsb
xchg
lock
fnsave
pop
lods
mov
xor
jns
xor
call
scas
mov
pop
push
cmp
clc
pop
and
out
lods
aad
mov
hlt
das
adc
xor
and
cli
sarl
bound
jnp
cld
push
fisttpll
adc
pop
push
mov
lret
fidivs
xor
sahf
pushf
sub
adc
or
push
sbb
iret
xchg
fcoms
jl
or
adc
inc
loope
inc
lahf
inc
out
pushf
test
adc
inc
inc
or
xchg
movsl
mov
fs
mov
xor
sub
popa
mov
insb
in
jg
dec
nop
dec
test
sti
jl
adc
sbb
in
dec
daa
mov
xchg
cli
mov
sahf
loop
adc
insl
pop
dec
and
xor
sbb
pop
pop
fisttpll
cmp
push
ficoms
push
mov
test
and
shr
aam
aam
jmp
adc
xor
mov
icebp
xchg
dec
xchg
push
mov
ss
and
inc
jmp
hlt
sbb
jo
into
cmp
push
pop
imul
dec
push
mov
lahf
mov
les
pop
lock
mov
rolb
sbb
xor
mov
cmc
xchg
fcompl
pop
test
sub
rcrl
je
dec
loope
pusha
push
push
imul
inc
cmp
shl
adc
push
fldcw
das
or
mov
mov
ret
outsb
sbb
rclb
leave
cmp
dec
jo
push
add
pusha
sub
push
xchg
sbb
scas
or
mov
mov
push
mov
jnp
mov
outsl
cmp
inc
loope
jmp
lea
pop
and
insb
aad
clc
push
jmp
sbb
xor
aam
js
pop
cltd
add
cmp
ja
aad
fstpl
jae
test
aad
inc
adc
mov
pop
push
repnz
dec
sbb
fildl
mov
or
in
out
push
mov
aad
stc
idivb
jge
stos
dec
repz
or
lcall
outsl
movsl
mov
pusha
lret
sbb
add
in
lahf
inc
adc
dec
cmp
testb
sbb
jmp
das
push
aam
out
inc
js
mov
mov
push
movsl
sub
fdivl
sbb
cmp
repnz
push
out
adc
sahf
test
rorb
lahf
cmpb
push
cmpsb
cmp
sbbb
fwait
jnp
dec
das
xor
pushf
out
sub
mov
outsb
sub
pop
lahf
xor
scas
push
pushf
mov
push
pushf
filds
pushf
incl
nop
sub
iret
xor
inc
rcll
xor
sub
stos
jne
ljmp
cmp
or
push
sahf
gs
arpl
mov
dec
std
pop
and
xchg
inc
add
lahf
decl
dec
push
jmp
pop
mov
and
lods
pop
repz
pop
push
dec
cmp
xor
or
add
jns
xchg
aam
jle
leave
popa
dec
mov
cmp
lret
xor
nop
in
pop
mov
dec
cld
xor
pushf
jge
popf
push
jmp
cmpsb
push
and
pop
adcl
push
pushf
sbb
pushf
jle
ficompl
scas
sub
out
xchg
out
ds
dec
lret
pop
aaa
ja
xchg
xor
sbb
mov
pop
fucomip
mov
sbb
and
xor
push
das
loop
iret
sub
std
sub
cmc
sahf
adc
mov
ret
pop
inc
inc
jo,pn
jns
pusha
and
outsb
bound
inc
inc
or
xchg
fs
jecxz
test
lods
adc
mov
push
pop
fimuls
es
push
fmull
push
xor
add
jecxz
lods
sti
shrb
icebp
popf
les
or
mov
cld
shll
scas
pop
nop
in
mov
jno
movsl
sub
or
inc
push
lods
sub
adc
xor
mov
xor
push
mov
dec
aaa
cmp
stos
cwtl
lods
sbb
ss
movsl
daa
inc
mov
pop
or
mov
jp
dec
cs
icebp
pop
dec
cwtl
sub
out
fdivrl
xchg
xor
das
mov
movsb
ds
in
cmp
scas
repz
fdivr
int3
jmp
dec
pop
jne
adc
icebp
cmp
loope
sub
add
imul
scas
test
scas
xchg
and
stos
jg
mov
push
out
and
cmp
ljmp
push
and
xchg
cmpsl
cltd
push
jmp
xchg
sub
cmp
or
dec
mov
clc
push
outsl
out
arpl
lret
fld
loope
dec
or
cmp
push
xor
hlt
xchg
dec
push
sbb
sub
ja
xchg
sbbl
inc
nop
cmp
sub
into
data16
mov
std
fdiv
xchg
push
sahf
pop
or
push
mov
je
mov
pop
out
xchg
sub
test
mov
cwtl
jbe
xor
fildll
mov
jecxz
cmp
mov
and
ljmp
jmp
outsb
pop
loope
in
loop
into
inc
sbb
das
lock
flds
stos
sbb
xchg
clc
and
sbb
mov
std
test
inc
jecxz
and
cs
icebp
fistl
jmp
sbb
mov
or
and
pop
inc
and
aad
rclb
xor
xchg
int3
xchg
push
fnstsw
inc
je
jo
scas
mov
push
adc
cltd
push
pop
movsl
xor
out
mov
jae
shll
pop
push
adcb
mov
cltd
pop
xchg
fxch
pop
out
nop
mov
outsb
mov
cmp
lahf
push
inc
cmp
nop
and
daa
mov
push
mov
pushf
sub
jbe
push
and
xchg
jl
jno
push
sub
out
xor
loop
adc
cmp
adc
sbb
jmp
inc
es
cmp
in
dec
adc
or
pop
pop
mov
sti
push
and
sbbb
cmp
mov
gs
jns
jg
and
dec
mov
fiadds
dec
loop
sbb
jg
and
and
cmp
xor
cmp
xor
and
pop
add
rolb
pop
cmp
mov
adc
scas
mov
data16
lock
push
push
jns
sub
sub
test
or
lret
cs
nop
mov
scas
add
xchg
clc
int3
dec
aad
in
pushf
cmpl
push
insb
mov
mov
repz
pop
nop
sahf
loope
adc
mov
cld
adc
add
mov
bound
out
popf
mov
outsl
rolb
in
jae
popf
push
sbb
loope
and
outsl
in
jge
hlt
test
mov
push
fs
jmp
push
mov
inc
shrb
inc
cmp
mov
push
rcr
mov
pop
sub
in
ljmp
aaa
inc
popa
popa
pop
pop
xchg
pop
lds
and
mov
and
sahf
mov
in
lods
xlat
iret
pushf
int3
fcoms
push
pusha
fnstcw
lods
mov
filds
dec
adc
std
mov
adc
add
xchg
mov
fs
out
mov
adc
testl
adc
in
jno
lea
mov
push
mov
stos
mov
rcrb
push
adc
test
pop
sub
inc
mov
add
or
lods
adc
dec
loopne
lea
in
movsl
out
ret
fsubrl
fcoml
pop
cs
jecxz
out
pop
imul
call
mov
insb
inc
pop
dec
aad
out
jmp
int3
inc
xchg
mov
inc
jmp
pop
inc
pop
adc
sub
jns
dec
shrl
xchg
mov
clc
int
arpl
not
or
test
inc
lds
jb
sti
jbe
and
sbb
inc
dec
mov
or
in
xchg
cmp
fldl
fabs
or
out
or
dec
pop
mov
mov
scas
add
pop
push
jle
push
gs
ds
pop
cmp
mov
fcoms
aad
in
test
les
pop
push
mov
xor
daa
jno
pop
scas
and
push
inc
inc
fnstsw
das
scas
fmull
and
dec
in
inc
lds
bound
int3
sbb
punpckhdq
cmp
es
cmp
xor
mov
imul
std
lcall
pop
jns
pusha
push
and
and
call
mov
dec
cmp
daa
lea
subps
cmp
mov
push
lds
pop
xor
icebp
jmp
push
xor
xor
cmc
in
fs
inc
xor
sbb
pop
adc
sarb
pop
xor
pushf
movsl
cmp
inc
fcmovnb
and
out
pmulhuw
adc
sbbb
mov
jne
cmp
clc
cmpsl
sub
loope
cli
data16
mov
mov
jo
aaa
pop
mov
dec
nop
adc
sbb
imul
out
pop
je
jle
cmp
jno
jnp
aaa
pop
es
jns
adc
sbb
pop
jne
popa
cltd
pushf
inc
push
sub
int3
cmp
push
xchg
sub
adc
fistpll
loope
mov
in
or
jno
or
aaa
dec
out
in
or
lds
andb
fldl
fdivp
adc
pop
cmp
push
push
jmp
nop
fisttpll
cmp
sahf
bound
mov
mov
call
sbb
dec
into
xor
outsb
or
rcrb
mov
fistps
mov
clc
mov
stc
push
inc
jno
stos
xor
mov
xchg
clc
pushf
loope
ss
pusha
cs
inc
dec
or
negb
and
push
inc
xor
imul
test
mov
mov
movsb
out
das
nop
imulb
out
xor
lds
int3
ret
fmul
or
adc
mov
mov
jg
push
jae
lds
lods
add
fsubrl
pop
push
or
xor
dec
sub
dec
add
sahf
lods
ja,pn
aas
rorb
sub
add
icebp
push
scas
mov
mov
or
orb
fmul
cmp
jns
pop
jle
jnp
xor
push
cmp
das
lgdtl
push
mov
fstpl
test
adc
or
mov
in
add
test
in
sbb
sahf
lcall
pusha
scas
sub
das
pop
fmuls
pop
xor
sbb
cmp
shll
xchg
clc
sub
push
and
or
lcall
lods
pop
test
push
and
in
push
xor
mov
arpl
ret
ss
cmp
push
jecxz
lcall
inc
addr16
idivl
popf
push
and
and
cmp
clc
andb
repnz
and
adc
cltd
popf
xor
sbb
sbb
int3
pushf
arpl
sbb
jne
or
in
pop
xor
cmp
call
push
adc
pop
pushf
out
inc
mov
adc
int
jne
loop
int3
mov
movsb
jmp
dec
adc
dec
adc
sub
mov
dec
ds
xor
pop
mov
test
inc
push
scas
pop
adc
and
lods
xor
cmp
imul
repnz
xor
dec
sbbw
push
xchg
movsb
int3
adc
and
repz
pop
cmpsb
sub
inc
xor
adc
in
sbb
cltd
jbe
xor
test
cmpl
xchg
xchg
test
push
fstl
mov
mov
aaa
addr16
dec
lcall
cmpsl
iret
push
xor
shl
sub
mov
inc
popa
cmp
out
cmpsb
stos
and
sbb
in
dec
sub
repz
sbb
jge
out
test
push
in
push
and
out
outsb
ss
xchg
das
dec
sbb
adc
pop
add
dec
lahf
repz
jnp
xorb
dec
and
xchg
test
push
mov
cmc
jno
push
mov
adc
sbb
ss
int3
jge
das
mov
test
or
push
cmp
push
inc
xchg
inc
clc
push
and
lea
xchg
dec
fmul
add
fdivrp
pushf
popa
mov
dec
lret
add
loop
les
sbb
sahf
mov
sbb
addr16
pushf
or
adc
mov
mov
les
psubd
fs
dec
inc
jecxz
int
mov
loop
sbb
fdivs
nop
mov
or
insl
add
pop
and
arpl
cmc
add
cmp
jno
sbb
frstor
int
inc
cmp
inc
push
and
shll
shl
mov
mov
leave
sbb
cmp
rorl
addb
push
icebp
test
fdivr
inc
lea
push
imul
push
jl
subb
popf
lret
xchg
lock
dec
mov
adcb
imul
sbb
insb
in
mov
pop
js
jno
pop
inc
sbb
aas
jo
imul
xchg
sbb
push
imul
or
pop
cmpb
xor
or
fdivrl
out
dec
jae
insb
pop
xor
cwtl
pushf
aas
or
inc
imul
push
sbb
sub
outsl
aad
mov
or
orb
jae
stos
xchg
jns
adc
jmp
mov
jl
stos
jl
jae
popf
pusha
scas
mov
pop
arpl
mov
xchg
sub
pop
cmp
sbb
mov
jg
jecxz
sbb
pushf
ds
lds
inc
dec
dec
dec
loope
mov
pop
gs
sub
xchg
inc
or
cld
out
push
push
addr16
sbbb
div
cmp
cwtl
inc
loope
jp
xor
in
xor
fldenv
cmp
xor
pop
out
rol
dec
jbe
cmp
cmp
adc
cmp
jge
cmp
mov
dec
pushf
mov
movsb
in
fisttpll
jge
sbb
dec
loope
int3
decl
mov
and
faddl
push
les
xor
cmp
imul
push
xor
fwait
pop
push
adc
sub
inc
sub
jbe
xor
leave
cmp
outsb
xor
pop
data16
cwtl
lcall
in
lret
xor
dec
mov
mov
mov
xchg
xchg
xor
jo
les
pop
xor
mov
pop
test
cmp
xor
jecxz
pop
cmp
mov
aam
imul
jl
inc
outsl
je
cmpb
leave
xchg
push
dec
or
pop
mov
inc
adc
mov
fsubrs
push
mov
sarb
mov
push
inc
cmp
incl
or
dec
mov
loope
or
call
movb
test
scas
or
jnp
sub
sub
mov
mov
jbe
xor
or
lahf
fnstsw
sub
xchg
aam
jmp
mov
add
ss
mov
enter
cmp
es
jns
push
ja
add
notl
mov
test
cltd
fs
aam
mov
cmpb
stos
dec
pop
sbb
out
movsb
insl
mov
es
sbb
out
and
and
sbb
cmc
xchg
leave
xor
enter
jle
xchg
ds
mov
and
scas
mov
inc
xchg
out
shlb
mov
cmp
repnz
adc
push
sub
shr
jmp
icebp
or
dec
test
mov
call
and
push
fs
fs
and
jne
out
out
stos
out
xchg
int3
xchg
lock
fldl
mov
jns
sbb
xchg
test
inc
xchg
movsb
xor
cs
inc
imul
xchg
stos
cmp
stc
aaa
clc
mov
mov
cs
daa
adc
iret
repnz
xchg
xchg
adc
insl
and
jb
jmp
mov
dec
inc
xchg
cmp
add
imul
gs
pop
int3
push
iret
dec
sbb
xor
push
jge
push
aad
lock
lret
cmp
pop
xor
lock
xchg
xor
inc
dec
imulb
mov
push
pop
repz
popa
dec
fnstsw
aaa
sub
daa
mov
insl
push
jb
rcl
sbb
push
sbb
dec
into
aam
mov
and
and
mov
icebp
sub
sbb
mov
or
rolb
dec
dec
cmp
adc
arpl
fldcw
icebp
pop
mov
daa
mov
mov
push
scas
xchg
cmp
imul
sbb
scas
fldl
imul
lea
mov
xor
adc
lahf
je
add
repz
fs
push
das
and
int3
test
loope
mov
fildll
cmp
test
xor
movsb
pop
imul
or
mov
insl
pushf
cmp
jnp
sti
pop
lods
cs
lret
cmp
or
xlat
xor
sbb
and
rorl
sbb
mov
jns
loope
test
sub
pop
fs
sbb
adcb
out
jne
pop
add
inc
ficoml
pushf
sub
mov
jge
js
sub
inc
mov
or
iret
stc
sub
xchg
and
xchg
push
add
push
pushf
dec
popf
or
inc
les
jo
dec
cld
pop
cli
push
daa
dec
es
sbb
jne
movsb
lahf
test
out
jne
in
xor
test
pusha
sbb
out
loop
pusha
ss
fadd
inc
fs
jecxz
dec
sbb
dec
in
cmp
pop
jp
shlb
cmpsl
mov
inc
pushf
sbb
das
pop
ja
adc
and
aam
pop
pop
mov
pop
push
push
or
cmpsb
xor
nop
mov
inc
fs
rorl
mov
inc
inc
fists
jnp
test
nop
add
shl
je
cltd
and
inc
rol
dec
gs
arpl
or
scas
lock
mov
cmp
or
cld
push
enter
dec
ds
adc
xchg
add
pop
lods
push
nop
popa
daa
daa
insb
pop
inc
jno
dec
sbb
fcoms
ds
or
ss
imul
push
adc
xor
jae
sbb
mov
mov
pop
adc
in
or
mov
pop
fs
shr
mov
shrb
adc
add
mov
inc
insl
dec
xor
rcl
cs
shlb
int
push
jno
xchg
adc
inc
mov
pop
pushf
sbb
pop
dec
faddl
cli
mov
fsubs
xchg
pushf
ret
inc
xchg
jns
aad
aaa
push
push
aad
inc
movsb
mov
aaa
jge
push
mov
and
lock
cmpsb
push
push
and
push
cmp
push
divl
inc
mov
daa
adc
or
dec
xor
adc
jo
pop
stos
test
push
outsl
and
cs
arpl
adc
test
hlt
dec
pop
loope
mov
pop
push
cmp
adc
jo
fistl
push
lods
pop
lds
cld
orb
jno
sbb
xchg
xchg
imul
es
sub
inc
jns
cwtl
or
mov
movsb
dec
sub
mov
or
xchg
and
jne
pop
jnp
dec
or
or
adc
scas
sub
aas
and
dec
loop
sbb
cmp
daa
mov
pop
ficoms
or
add
lods
popa
inc
push
lea
lods
inc
insl
cmp
dec
and
or
int
outsl
clc
xchg
mov
sbb
mov
loopne
jb
dec
fnstsw
sbb
mov
aad
cmp
movsl
mull
push
push
sbb
xor
mov
push
mov
jns
cwtl
add
xor
fs
or
xor
shr
loope
xchg
push
pushf
ffree
jp
test
insb
xchg
loope
fs
xor
push
pop
int3
pop
flds
or
mov
jno
cmp
in
adc
push
push
pusha
lcall
cmp
add
iret
leave
or
xor
dec
lock
push
or
inc
fcoms
icebp
dec
cli
push
xchg
subb
icebp
test
icebp
sub
or
xchg
sti
dec
fadd
mov
dec
jmp
mov
in
loope
inc
test
sbb
out
ret
mov
push
stos
in
ficomps
mov
jnp
sbb
scas
imul
pusha
scas
inc
in
inc
cs
pop
cld
in
dec
xor
adc
adcl
rclb
xchg
add
inc
xchg
addr16
ret
jo
mov
test
add
cwtl
roll
xchg
push
jecxz
xchg
cmp
adc
xor
clc
loopne
sbb
adc
cmpsl
gs
loop
fldcw
icebp
gs
nop
dec
pop
imul
sbb
je
sub
add
sbb
cli
xor
mov
js
dec
sbb
jae
dec
xchg
lahf
push
ret
negl
and
les
jle
orb
movsb
aas
sti
push
adc
inc
fs
call
and
mov
imul
loope
xor
xor
pop
mov
fwait
xor
mov
dec
push
push
mov
sub
xchg
andb
jns
stc
xor
int
clc
push
push
jmp
mov
lock
sub
out
in
jg
aas
push
loope
scas
and
fdivrl
rclb
mov
cmp
pushf
shll
push
sub
inc
mov
xor
add
mov
jno
and
jb
call
pop
adc
in
icebp
mov
adc
mov
push
pop
or
test
xchg
rclb
into
mov
lock
mov
sub
mov
jge
pop
lahf
test
add
sbb
cwtl
push
fcoms
int3
inc
push
push
sub
pop
sbb
and
add
std
pop
int3
pop
insb
push
dec
xchg
ss
sbb
add
mov
aas
rcll
jl
mov
xchg
xchg
pop
push
ljmp
xlat
or
mov
fwait
rcll
xchg
popf
addr16
sub
aad
xor
xor
mov
adc
mov
pop
xor
mov
sbb
aad
rcll
mov
adc
in
outsl
cmp
cmp
sbb
dec
sub
and
stc
mov
fstps
pushf
imul
nop
cs
inc
pop
and
les
mov
xchg
shlb
scas
popa
rclb
addr16
cmc
or
imul
or
mov
mov
push
mov
jle
fnsave
ljmp
jbe
test
repz
mov
push
mov
mov
and
aas
xchg
loope
gs
faddl
jp
mov
in
mov
fadds
add
xor
iret
fldenv
mov
mov
mov
push
divl
test
cmp
in
pop
fcoms
sbb
scas
ret
lods
sub
fyl2xp1
adc
dec
jg
push
cmp
rclb
pop
gs
inc
add
js
add
fstpl
push
sbb
inc
dec
mov
push
mov
pop
pushf
popf
or
mov
jns
int3
xor
js
or
loopne
cmp
jle
dec
in
scas
loopne
enter
push
mov
push
push
xor
mov
adc
ljmp
insb
lods
outsl
mov
cli
pop
out
sbb
or
pop
insl
and
loope
cli
outsl
ja
sbb
inc
mov
dec
movb
notb
xor
lods
pop
loope
mov
adc
xchg
fs
aaa
jo
xlat
int
in
aam
push
push
or
in
or
xbegin
jo
jge
adc
cmp
mov
adc
add
push
sub
dec
sbb
out
push
dec
pop
mov
cmp
xchg
jl
movsl
xchg
lods
dec
sbb
xor
fistps
test
sbb
pushf
or
sti
loope
mov
subb
add
rorb
xchg
push
pop
or
pop
icebp
mov
mov
std
frstor
js
xor
lcall
mov
mov
pushf
iret
add
daa
jmp
add
xchg
out
pop
addr16
sbb
scas
sub
push
leave
sbb
push
xchg
sbb
mov
xchg
cli
mov
and
sub
cmpsl
imul
mov
dec
mov
scas
hlt
xchg
inc
fs
aam
or
rclb
dec
fidivs
subl
xchg
aaa
mov
lcall
fs
sub
and
sub
push
jne
jge
mov
fcmovne
lret
test
stos
push
inc
xchg
xchg
xchg
movsl
ss
and
pop
cmp
dec
icebp
in
mov
scas
mov
inc
xchg
outsl
out
or
outsl
in
fstpt
ljmp
cmp
jmp
dec
lcall
fs
dec
mov
iret
xor
testl
int
and
leave
mov
faddl
andb
and
mov
sti
sbb
dec
sbb
and
xor
js
ja
push
add
imul
mov
lds
xor
mov
fs
loope
lods
subl
int
cmp
cmp
adc
mov
xchg
push
sub
popf
adc
sbb
add
push
mov
lcall
or
jge
pop
scas
xor
mov
pop
das
scas
dec
cld
xor
cmp
sub
mov
rcll
pop
xchg
mov
pop
fisttps
repz
fisttpl
ss
xchg
lods
or
cs
fs
lock
sub
ret
sbb
mov
sub
jecxz
mov
mov
xor
xor
test
xor
loope
test
dec
test
pop
subl
shlb
dec
push
sub
test
test
mov
xchg
pusha
mov
aaa
cltd
lock
add
xor
test
imul
lea
test
dec
and
sub
dec
mov
cmpsb
loopne
lods
mov
repz
int
dec
and
sub
push
sub
push
and
fs
mov
rol
cwtl
push
mov
fimuls
push
pop
lret
add
test
xchg
fmuls
movsb
and
stos
jge
aad
mov
frstpm(287
imul
mov
shrl
shrb
mov
int3
jns
fmulp
sbb
jo,pn
ja
push
addr16
adc
pushf
dec
loope
out
in
xchg
cmp
clc
or
xorb
xorb
mov
ss
pop
push
push
jns
loope
mov
sbb
add
cwtl
and
lret
ret
fisttpll
xor
pop
push
jbe
pop
popf
add
shlb
popa
pushf
mov
lret
btc
call
cs
and
int3
sbb
lea
and
loope
cmp
mov
mov
not
mov
sub
sub
xchg
or
adc
sbb
mov
cmpsb
push
lds
cmc
mov
sbb
dec
mov
in
xsaveopt
jmp
sbb
fisubrl
pop
push
or
dec
push
adcl
push
cmp
jno
int
hlt
incb
lods
adc
cmpb
decb
subb
adc
in
iret
pop
shll
sub
pop
mov
add
sbb
cmp
loopne
cmc
mov
test
fisttpll
xchg
adc
or
pop
out
aad
test
mov
jns
jmp
gs
jge
pop
mov
mov
scas
jb
lcall
loop
push
sub
jecxz
mov
stos
push
cmp
sub
pop
mov
imul
push
imull
sub
mov
pop
push
lods
xchg
xor
jmp
pop
dec
mov
pop
je
cmp
cmp
inc
dec
scas
hlt
cs
int
inc
pop
xor
jl
push
out
insl
scas
push
fnstenv
push
sub
nop
addr16
les
inc
enter
mov
das
dec
cmp
push
sub
push
mov
in
jbe
or
jns
test
cmpsl
jp
test
fxch
adc
mov
inc
adc
addl
mov
cmpsb
xchg
cmp
sbb
leave
mov
jge
shrl
insl
insb
dec
sub
inc
call
js
scas
sbb
jmp
push
adc
scas
adc
mov
adc
shl
mov
mov
mov
lea
iret
and
testl
fadds
fisttpl
xor
loope
and
and
push
test
in
and
sub
xor
mov
jb
jo
xor
aad
out
sbb
xor
sbb
cmpsb
aad
rcll
icebp
adc
outsb
stos
lds
push
add
and
pop
and
jmp
add
and
mov
cmp
xchg
lea
mov
xchg
in
jmp
add
cmp
jne
repnz
mov
or
std
lret
fnstcw
mov
pop
test
lahf
enter
and
mov
repnz
push
mov
mov
sti
test
lods
xlat
insl
xor
mov
or
pop
popa
adc
stos
mov
dec
clc
dec
ljmp
jb
and
or
add
pop
lahf
clc
iret
mov
dec
ss
xchg
and
lahf
xor
jbe
sbb
sbb
scas
stc
test
jmp
cmp
movsl
push
xchg
adc
jmp
imul
pop
scas
loopne
and
mov
lret
mov
and
idivb
inc
dec
insl
adc
or
dec
cmpl
out
and
jl
xor
xchg
pop
loope
adc
jmp
push
punpckldq
xchg
push
or
addr16
or
adc
push
mov
movsl
mov
sub
pusha
call
push
jge
mov
sbb
mov
adcb
fcomip
xor
test
movsl
cmp
mov
cmp
sub
pop
lods
sbb
rorl
scas
cmp
sahf
jp
cmp
sbb
sahf
incl
sbb
out
sbb
fstl
xor
cmc
test
mov
cs
or
shlb
daa
push
lods
and
orl
ss
sbb
or
mov
jmp
jns
xor
pushf
sub
xchg
pop
pop
and
pop
xor
push
dec
mov
nop
addr16
stc
sbb
ds
inc
mov
test
adc
movsl
subb
out
push
cmp
rcll
fs
shl
pop
lods
fisttps
lock
adc
sub
sub
xchg
mov
mov
in
mov
xor
mov
dec
sbb
sti
leave
cmp
je
pop
testb
sbb
xor
subl
sub
rolb
or
data16
fbstp
sbb
jbe
or
xlat
incb
out
imul
xchg
and
add
lcall
or
je
inc
sbb
sub
pop
fcmovnb
adc
and
loope
inc
jo
jbe
jns
scas
stos
or
pop
push
dec
add
insb
jbe
push
rorb
or
mov
dec
cs
dec
push
adc
xor
cmp
in
cmp
clc
les
push
mov
sub
inc
mov
or
aad
cmp
mov
or
jge
xchg
imul
xor
sbb
scas
xchg
popf
or
cwtl
mov
dec
loope
sbb
or
sbb
lea
mov
xchg
cmp
loope
sub
les
push
ja
mov
mov
mov
mov
ret
pop
xchg
adc
cli
loope
sub
mov
push
jns
inc
popa
dec
jne
xchg
loop
xchg
and
mov
sub
fs
bound
sbb
pop
outsb
cmp
daa
fs
inc
pop
movsl
sbb
push
aam
sub
repz
imul
jmp
xor
rcrl
jne
fistps
cmp
adc
push
test
sub
fmuls
sbb
mov
divl
iret
xchg
sub
xorl
jns
popa
lcall
not
iret
mov
rcr
sub
repz
mov
in
mov
sahf
sarb
mov
je
insb
add
and
mov
insb
xchg
push
pop
sub
and
dec
or
movsb
cmp
add
je
jg
xor
daa
lea
js
jle
push
cwtl
nop
int3
mov
scas
xor
or
mov
mov
jge
movsb
fs
xchg
mov
stos
test
dec
shll
sbb
clc
daa
cld
pop
sbb
lods
push
test
xchg
ljmp
pop
push
sub
dec
fisttpll
push
scas
mov
adc
sbb
movsb
mov
xorl
loope
push
jns
jnp
dec
push
repz
loop
mov
movsb
xchg
push
adc
or
mov
lea
imul
pop
movsl
loope
movsl
mov
notb
jne
mov
scas
mov
mov
les
pushw
imul
mov
out
and
mov
push
push
push
adc
push
or
xchg
xor
xor
adc
xchg
adc
aaa
out
loope
mov
push
pushf
cmp
cmpb
je
stos
nop
pop
and
adc
cs
mov
or
lcall
add
lret
dec
call
cli
push
inc
inc
mov
mov
loope
pop
xor
imul
lea
mov
fiaddl
test
jb
bound
cmp
push
mov
scas
mov
das
scas
jge
inc
dec
addr16
cmp
adc
std
mov
mov
int
mov
imul
insb
jb
mov
sub
nop
rcr
cltd
inc
sbb
iret
sub
cmp
loope
gs
lods
lock
xor
ljmp
pusha
and
dec
arpl
lea
test
dec
push
loop
mov
mov
icebp
sbbb
int
or
mov
dec
dec
shl
clc
outsb
jnp
xor
aad
inc
stc
jmp
xor
and
push
out
push
push
push
fstl
push
jmp
inc
ss
add
adc
mov
movsb
clc
decl
and
mov
sbb
adc
pop
mov
jge
xorb
aam
pusha
or
xchg
xchg
add
mov
push
inc
xchg
lds
pop
lods
hlt
push
ljmp
ja
mov
mov
mov
xor
rcll
in
andl
loope
sub
fwait
enter
pop
mov
sahf
shl
addb
mov
in
out
aaa
repz
mov
out
ss
sbbb
xor
push
cwtl
mov
xor
and
lods
movl
jecxz
pushl
in
lea
clc
cmp
push
lcall
sub
xchg
add
sbb
in
mov
mov
js
push
mov
or
inc
or
loopne
dec
ret
jne
cmp
pop
std
cmp
aad
test
and
loope
jo
ds
rolb
daa
adc
call
add
pushf
scas
mov
cmp
jg
cmp
btc
iret
stos
xchg
std
lahf
das
test
mov
shrb
fcomip
movsb
mov
cmp
mov
arpl
mov
pop
push
push
push
nop
sbb
add
mov
cmp
stc
fnsave
into
mov
dec
stos
call
stos
hlt
test
int
fldl
and
adc
xor
scas
mov
mov
and
or
push
pop
negb
cmp
rcrb
lds
push
xchg
ficoms
loope
ss
mov
mov
test
js
insl
icebp
es
rorl
mov
insb
aaa
dec
rolb
mov
je
popf
add
mov
jb
nop
jbe
clc
in
adc
jno
inc
rorb
scas
xchg
imul
mov
push
push
cmp
sahf
lds
push
dec
out
cltd
ljmp
jmp
xchg
pusha
jl
decl
subl
push
fs
sbb
mov
pop
faddp
jne
loop
dec
mov
js
mov
gs
cs
mov
lret
dec
xor
jg
scas
loopne
jo
scas
stos
in
scas
out
xchg
cwtl
or
mov
aaa
dec
nop
push
fmull
sub
imul
insb
push
pop
push
mov
inc
mov
lahf
xor
sub
cli
cltd
cmp
lods
cmp
and
mov
pop
test
push
shlb
stc
rol
repz
stos
hlt
push
dec
add
imul
ja
shrb
dec
loopne
cmp
jmp
mov
dec
push
cltd
sub
fldcw
sub
scas
fsin
test
popf
cmp
insb
and
or
adc
jbe
dec
les
adc
arpl
or
in
pop
test
sbb
cmp
rolb
pusha
mov
shrl
jno
clc
pop
jo
movsb
mull
popa
outsb
cmpb
adc
aaa
mov
push
pop
push
push
add
clc
pushf
daa
test
push
dec
xchg
cmp
scas
popf
aas
sbb
xor
adc
push
mov
pusha
or
mov
outsl
xor
push
or
adc
fs
and
inc
xor
xchg
jl
push
adc
and
and
scas
xchg
xchg
pop
dec
xor
je
in
stos
sub
push
xor
pop
pop
adc
sbb
negl
or
scas
fldt
or
mov
mov
pushf
xchg
fwait
cmp
iret
jnp
in
mov
nop
cmp
mov
in
sbb
cld
cld
xchg
mov
fs
pop
mov
iret
outsb
mov
sub
iret
cs
imul
sub
pop
in
jo
xchg
int
jge
lods
es
lea
es
lods
sbb
mov
dec
or
test
std
pop
nop
lock
mov
push
add
fs
sub
dec
popf
cs
sbb
ds
adc
das
pop
sbb
outsl
cmp
push
sbb
mov
sahf
sbb
mov
test
loopne
and
and
mov
push
hlt
ret
pop
push
dec
jmp
popa
insl
push
mov
mov
aam
lods
cmp
jge
sbb
fistpl
cs
push
popf
das
mov
insb
sub
lahf
inc
xchg
jl
mov
mov
int
mov
dec
sbb
inc
imul
loope
and
or
pop
test
xor
insb
dec
dec
in
je
sub
add
ss
cs
push
or
lock
scas
jns
cmp
cwtl
loop
aas
xchg
add
dec
cmpsb
adc
aaa
xchg
imul
cs
sbb
mov
xor
sarb
js
daa
or
cmp
adc
push
push
push
pop
call
decl
fstpt
sub
cs
dec
test
pop
xor
push
add
xor
sub
adc
mov
stos
jecxz
or
adc
lret
pop
cmp
mov
outsl
pop
sub
shrb
in
loopne
mov
in
sbb
push
aas
adc
iret
mov
idivl
sarl
hlt
adc
mov
push
mov
adc
shll
mov
fisubrs
in
shl
mov
adc
sbb
mov
rcr
mov
and
movsl
cmp
jmp
inc
lods
shlb
sbb
adc
mov
pop
iret
xor
cmp
roll
and
jae
enter
scas
add
add
inc
sbb
cmp
sub
push
js
add
pop
in
nop
sahf
je
pop
adc
sbb
xor
add
xor
popf
ss
jecxz
pop
bound
xchg
daa
push
mov
loop
xor
xor
frstor
pop
sub
push
test
jle
or
shll
imul
adc
xor
std
xor
pushf
or
xor
pop
test
sysenter
push
adc
popf
push
rdmsr
mov
xchg
decb
push
cmp
jbe
out
and
and
mov
mov
imul
out
fs
mov
pop
pop
add
push
xchg
loope
push
push
int3
daa
repz
fdivl
sub
insl
pop
adc
dec
push
xor
lds
inc
sub
dec
sub
jl
cmp
push
jmp
gs
mov
inc
cmp
std
std
pop
sbb
mov
mov
xchg
mov
shlb
mov
jg
aas
repz
jmp
adc
xor
int3
neg
pop
jo
sub
outsl
cmp
aad
cmpsb
clc
aaa
in
nop
mov
mov
test
sub
mov
inc
or
jns
sbbl
sbb
dec
push
sti
xor
jno
push
scas
scas
or
out
add
pop
adc
adc
add
sub
push
jmp
lock
in
sbb
dec
cmp
xchg
adc
adc
stos
mov
inc
sbb
dec
pop
out
xor
in
insb
fsubs
outsl
inc
mov
int3
jg
jecxz
enter
pop
mov
jge
sub
mov
mov
sbbb
insl
mov
fs
pop
test
outsl
push
adc
and
jp
dec
sbb
inc
dec
pop
cmp
and
dec
sbb
leave
outsl
notb
repz
int
fsubrs
xchg
jmp
data16
cmp
or
xchg
out
or
pop
jl
fbld
mov
sbb
das
lods
cmp
mov
cmp
fstpt
mov
xor
cmp
inc
rcr
pop
mov
test
push
loop
mov
sub
mov
dec
xor
pop
mov
jmp
iret
fucom
cli
negl
pop
mov
loopne
cmp
data16
and
lret
lock
inc
add
lock
dec
push
push
scas
cmp
xchg
call
adc
popa
xor
xor
adc
int3
inc
sbb
mov
mov
outsl
mov
ds
adc
or
stos
scas
ja
mov
push
cmp
xor
jno
test
xor
insb
sbb
adc
mov
addr16
pop
and
push
enter
jge
push
dec
in
jne
mov
faddp
insl
negb
repz
push
fists
or
in
std
imul
cmp
mov
jmp
daa
in
push
push
iret
sub
sbb
adc
xor
adc
movsl
xchg
xor
push
sub
inc
ret
push
lods
adc
or
aam
jge
jmp
push
popa
ds
out
int3
out
push
loope
pop
movsl
dec
movsl
pop
cmp
sbb
dec
ljmp
mov
pushf
push
cld
dec
xor
adc
popa
jecxz
push
insb
mov
cmp
sub
fldl
idiv
push
sub
adc
mov
and
xor
xor
das
mov
aad
jmp
mov
jmp
adc
add
movsb
negb
mov
dec
fsub
enter
or
clc
mov
leave
dec
push
icebp
aam
data16
les
ficoms
bound
and
sbb
pop
or
outsb
or
add
mov
xchg
sbb
mov
subb
hlt
pop
adc
push
xor
or
bound
add
fisubrl
mov
cmp
movlps
decl
enter
push
or
jle
sub
dec
sub
xor
mov
arpl
fcoml
cmp
pop
sbb
popf
dec
int3
dec
fwait
pushf
lahf
in
pop
adc
je
add
xor
dec
enter
mov
pop
rcll
push
cmpsl
ret
push
xchg
xor
mov
cmp
stos
in
push
add
xchg
insb
xchg
insb
pop
xchg
or
lods
jb
pop
xor
pop
cmp
sbb
test
aas
sti
mov
das
xor
sbb
pop
aaa
mov
jecxz
xor
jl
xor
mov
mov
pop
sahf
xchg
rorb
jo
xor
pop
push
mov
mov
mov
pop
dec
jge
xor
std
push
push
pushf
push
cli
mov
into
aam
out
xor
pushf
jg
cli
enter
iret
loop
pushf
push
dec
test
fisttpll
jne
mov
or
sub
out
lcall
leave
pop
std
cmp
sub
mov
jle
test
pop
ja
xor
dec
xor
gs
lret
adc
and
dec
shl
out
cmp
inc
mov
andl
popa
iret
push
dec
mov
push
in
mov
fstp
arpl
sub
push
and
das
ret
fwait
cli
int3
xor
add
subl
sub
pop
mov
clc
cmp
xor
hlt
jno
or
xor
mov
rcl
aam
xchg
mov
sahf
xor
bound
outsl
mov
fs
cmpsb
jne
in
xlat
push
aas
arpl
pop
mov
cmp
jge
cmp
es
sbb
cmp
fcos
pop
aam
imul
jno
mov
pop
loop
adc
mov
and
scas
adc
and
fsubs
lret
cs
ds
aas
loope
movsl
xchg
pop
ljmp
pop
adc
and
xor
jge
adc
mov
mov
loopne
cmc
fcompl
es
xor
insb
push
lcall
aam
in
mov
cwtl
mov
or
scas
sub
mov
or
lods
xchg
and
inc
dec
lock
es
fisttpl
dec
mov
fdivrs
inc
adc
inc
ret
repz
jo
add
push
sbb
mov
imul
outsb
push
xor
inc
sub
xchg
jle
insl
int3
lods
mov
cmp
mov
pop
jl
mov
mov
aam
decl
pop
insb
cmc
mov
and
mov
popa
inc
lcall
lea
adc
mov
xor
inc
pop
xchg
mov
lods
sub
pop
inc
inc
js
scas
inc
sbb
aaa
add
popa
cmpb
and
jb
or
shr
pop
clc
xor
fs
xchg
push
cwtl
loop
xorb
mov
jno
loope
and
rcr
pusha
mov
mov
loop
cmp
lret
cwtl
adc
outsl
arpl
ss
xor
push
arpl
aas
hlt
sub
or
arpl
mov
cs
daa
sbb
mov
mov
xor
xlat
fdivl
rcrl
lods
inc
cmp
pop
fwait
cmpb
mov
mov
into
jns
arpl
lds
push
sbb
sbb
mov
test
cmp
sbb
mov
test
push
adc
adc
mov
movsl
adc
dec
dec
call
popa
out
ja
push
push
fbld
mov
inc
shrb
pushf
cwtl
leave
leave
pop
mov
popf
and
cmp
test
mov
mov
nop
jmp
xchg
pop
inc
sub
jmp
add
cmpxchg8b
xchg
sbb
dec
cmp
fnstsw
cmp
adc
jne
xor
xor
mov
pop
push
sub
stos
aad
and
fwait
jmp
lahf
pusha
sbb
imul
lahf
push
je
sbb
aad
jmp
cmp
jns
cmp
cmp
inc
lret
nop
aas
lods
sbb
and
jl
scas
mov
xor
xor
mov
sarb
sub
ss
fstpt
fwait
enter
outsl
mov
jo
cmp
popa
out
push
incl
out
add
pop
sahf
or
mov
popf
pop
push
add
jne
xchg
fldl
sub
das
aam
cmp
jg
arpl
fldenv
int3
fwait
outsl
scas
dec
jns
xchg
mov
jns
or
dec
pop
cwtl
in
enter
insb
sub
sub
jl
imul
mov
pop
in
iret
enter
les
and
jne
jmp
lahf
pop
add
outsl
inc
sbb
out
pop
outsl
jnp
adc
movsl
gs
dec
xchg
ret
fcmovne
aas
int
dec
xorb
fstpt
xor
orb
pop
push
push
pop
add
movsb
int3
dec
gs
xchg
leave
ds
loopne
mov
lds
inc
lret
fisubs
push
frstor
dec
std
dec
aaa
adc
dec
or
add
fsubl
and
sbb
js
pminub
mov
jbe
fs
sub
popf
xor
scas
ffreep
bound
mov
push
and
lret
bound
mov
xor
push
adc
sbb
mov
popf
sub
test
mov
dec
dec
inc
adc
aad
popf
xor
pop
outsb
adc
push
loope
pop
subb
iret
fidivl
test
cmp
push
adc
popf
andl
outsl
imul
xchg
or
sub
fdivrs
push
push
repz
lcall
daa
aad
rclb
in
scas
push
dec
mov
xor
inc
in
push
insl
pop
push
rclb
push
pop
cmp
jne
addr16
sbb
dec
pop
mov
or
adc
push
add
call
or
sbb
out
xchg
mov
add
and
cmp
into
xor
cmp
xor
cmp
jg,pn
das
jns
popf
nopl
xchg
pop
enter
das
xor
dec
stos
ret
inc
cmc
push
scas
data16
insl
xor
push
mov
mov
sbb
jnp
scas
xchg
loop
inc
stc
popl
and
pop
and
ljmp
mov
inc
xor
loope
sahf
xorb
and
dec
cwtl
xor
and
adc
inc
and
adc
xor
adc
fildl
fwait
mov
pushf
negb
sub
jae
loop
and
cmp
scas
aaa
lds
xchg
push
repz
and
or
idivl
ss
hlt
jo
pop
loope
sub
cs
cwtl
out
insl
mov
push
dec
jae
btc
mov
cmc
ret
adc
outsb
mov
aaa
scas
icebp
xor
cli
inc
fdiv
leave
jne
stc
mov
fdivp
scas
cmp
pop
js
jbe
add
sti
adc
push
mov
clc
sub
cmc
pop
scas
aam
jbe
or
and
cmp
shlb
pop
and
add
adc
sbb
shr
or
mov
hlt
loop
icebp
jno
or
pop
call
out
pop
out
sub
in
xor
cmp
and
dec
adc
xor
push
dec
scas
stos
dec
in
aas
idivb
shlb
push
mov
sbb
jns
mov
inc
out
sbb
xorb
mov
pop
sbb
shrb
sbb
inc
fsts
mov
and
sub
push
lock
test
pop
inc
ss
insb
pop
push
in
and
insb
push
inc
sbb
fs
pop
imul
mov
lods
mov
scas
in
jge
adc
xlat
negb
pop
in
int3
inc
inc
adc
das
or
daa
xor
cmp
ss
and
sub
pop
lods
shlb
jb
out
jne
or
cmp
mov
xchg
out
cld
add
decb
adc
lock
loope
sarl
pcmpeqd
scas
mov
lret
aad
movsb
ret
mov
cmp
ljmp
in
jecxz
lahf
sub
pop
xor
xchg
dec
int3
scas
mov
cmp
ljmp
enter
jmp
jns
in
and
add
xor
in
dec
cmp
xor
jno
sub
insl
fs
fisttpl
dec
pop
imul
add
js
sub
das
adc
xchg
punpckhdq
sbb
mov
push
pop
pop
repnz
scas
pop
lds
and
les
repz
call
decb
int3
out
push
aad
sub
xchg
sbb
and
cmc
data16
pushf
loope
and
sbb
ret
pop
inc
call
lahf
int3
daa
mov
sbb
movsb
push
sti
rolb
dec
sub
addr16
aas
mov
jmp
testb
xchg
pop
cwtl
aaa
movb
sti
mov
push
and
stc
sbb
btc
mov
or
jl
test
adc
jl
mov
push
dec
cmp
pushf
xchg
adc
mov
ror
ss
clc
rclb
int3
sub
int3
pushf
xor
test
das
pushf
sbb
in
sahf
movsb
and
imul
cmp
jp
xor
sti
int
xor
or
loopne
xor
fstl
cs
cmpsb
nop
inc
mov
push
sub
outsb
pusha
or
iret
or
inc
sbb
loope
nop
jns
and
aam
fimuls
andb
iret
mov
xchg
or
dec
mov
pop
cmc
xchg
mov
adc
push
das
jg
mov
or
jmp
es
xor
imul
pop
add
cmp
sub
sub
or
int
pop
fists
xchg
aam
scas
stos
xor
sti
arpl
push
lock
sbb
mov
gs
popf
mov
or
add
movsb
cmp
ret
std
push
sbbb
cmp
and
jle
and
and
mov
mov
pop
xchg
push
sbb
bound
adc
sub
xchg
or
xchg
test
in
rcrb
cmp
mov
inc
mov
mov
pop
nop
ss
xchg
test
int
sub
inc
and
movsb
mov
pop
mov
js
push
in
cmp
cmp
sbb
dec
mov
mov
pushf
pop
pop
sbb
xchg
cmp
pushf
icebp
std
push
pushf
repnz
insl
popf
xor
aad
jo
push
push
arpl
add
int3
loopne
adc
inc
pop
ja
cmp
push
std
test
and
imul
cmp
push
xor
insb
les
mov
sub
adc
in
add
movl
mov
scas
and
bound
test
xor
fistps
outsl
aad
cltd
lcall
fmull
clc
into
xchg
lahf
pop
jbe
rcl
or
daa
pusha
hlt
and
cwtl
cmp
test
sub
inc
jmp
jmp
or
push
scas
insl
xchg
push
and
aas
sbb
aaa
xlat
jmp
add
repnz
and
std
daa
pop
xor
cmp
xchg
daa
push
loope
ss
daa
and
fwait
xchg
lahf
lods
jne
sarb
aad
gs
adc
mov
inc
pop
push
aad
push
sbb
mov
dec
insb
push
sbb
dec
scas
lea
and
mov
pop
ss
cli
sti
pop
aaa
cmp
sub
xor
cmp
into
pop
je
cli
mov
sub
aam
sub
mov
adc
xchg
push
lcall
mov
or
pop
ret
adc
in
dec
ljmp
lock
jle
or
std
sar
mov
ss
add
mov
jno
push
cmp
nop
push
mov
je
add
pop
cmp
mov
imul
out
mov
jecxz
jne
cmp
push
push
jmp
insb
dec
add
stos
pop
xchg
cld
xchg
fldl
scas
in
lahf
xchg
movsb
loop
mov
jmp
lds
out
cld
stos
mov
clc
aaa
fcompl
scas
jne
adc
jl
int
push
cmp
fsub
pop
ds
imul
test
sbb
insb
lret
fcompl
std
scas
fldenv
or
or
shll
mov
nop
and
cltd
sub
pushf
xor
cmp
or
addr16
nop
cmpsb
dec
sbb
dec
fists
or
cmp
into
shr
jne
pop
shlb
xchg
mov
cmp
sub
ja
jge
jno
mov
push
sahf
add
and
pop
ror
ja
jb
jo
outsl
lds
flds
fidivrl
sbb
xor
sti
push
in
cmp
sbb
enter
pop
sbb
mov
mov
cwtl
in
inc
sub
popa
cmp
int
in
mov
sub
ret
lods
pop
loop
pop
adc
test
xchg
sub
xchg
mov
arpl
in
adc
cmp
imul
fnstcw
hlt
inc
scas
mov
pop
or
adc
je
dec
cmp
stos
dec
pop
xor
mov
jno
out
insb
xor
insb
std
inc
push
push
or
ret
shlb
in
lock
or
shl
and
pop
push
lea
incb
nop
lahf
push
dec
mov
orl
push
pop
pop
das
imul
or
and
push
mov
es
xor
decl
cmp
loope
adc
cld
daa
les
dec
pushf
pop
push
dec
loope
sub
inc
or
or
pop
mov
or
cmp
das
pusha
aas
cmp
or
xchg
dec
add
sub
dec
mov
lea
jae
push
adc
mov
xor
sub
cmp
lods
push
and
xchg
lcall
lea
pop
add
mov
inc
repnz
pop
push
push
lea
sbb
cmp
mov
cld
pop
xchg
or
dec
xor
insl
stos
clc
and
sbb
or
pop
inc
rcrb
cmpsl
or
mov
scas
mov
cmp
xchg
cwtl
push
lds
mov
ret
cmc
fnsetpm(287
sbb
pusha
sub
mov
cs
outsl
hlt
ja
push
aaa
idivb
jl
clc
popf
sub
insb
in
jl
add
jae
xchg
pushf
pop
mov
xchg
pop
sbb
mov
das
jl
insb
mov
xchg
insb
sbb
cmp
sub
lds
loope
adc
cmc
push
cmp
or
mov
dec
pop
mov
sub
cmpsb
or
jne
pop
outsl
pop
mov
cmp
shr
cwtl
inc
popa
sub
dec
xchg
fst
mov
add
fcoms
pop
icebp
mov
mov
cmp
mov
gs
into
jnp
pop
scas
xchg
js
xor
and
jae
fs
xchg
and
sub
movsb
adc
dec
push
mov
adc
aam
adc
movsl
or
cmp
aam
push
xchg
scas
adc
adc
lods
loope
or
outsb
lock
scas
inc
or
fistps
jl
mov
jl
mov
insl
mov
inc
nop
sbb
clc
mov
cmp
scas
sbbb
inc
scas
gs
adc
jb
xchg
mov
adc
fcoml
pop
arpl
fcomip
and
adc
mov
jle
mov
dec
out
mov
add
cltd
lea
jmp
push
and
dec
jae
pop
and
dec
lds
cwtl
push
jne
adc
sbb
test
sbb
cmp
sbb
xor
xor
xchg
arpl
mov
mov
push
daa
aad
adc
clc
xlat
stos
daa
or
mov
xor
das
pop
icebp
push
cmc
inc
pop
das
inc
pop
nop
mov
adc
mov
jno
adc
mov
adc
xchg
lahf
push
out
fs
jae
xor
mov
mov
mov
inc
mov
inc
push
call
mov
daa
mov
dec
xchg
pushf
fbld
imul
stos
sahf
push
sub
mov
cli
fsubs
push
sbb
bound
mov
cmp
movsb
or
ret
cmpsb
xor
adc
std
or
jl
cmpsl
ret
adc
mov
dec
std
xor
xor
bound
push
popf
ret
and
into
push
xor
push
add
mov
scas
scas
mov
jmp
pop
push
push
gs
dec
jle
push
mov
sbb
aad
xchg
negl
xor
xchg
rcll
and
mov
sbb
xor
cmp
icebp
xchg
xor
lcall
mov
pop
aad
stc
shl
sub
mov
pusha
clc
orb
ds
jge
adc
pop
orb
xchg
xchg
shrb
mov
pop
aam
jp
xchg
adc
popl
xor
cmpsl
dec
pushf
addr16
repnz
std
inc
mov
mov
lret
mov
sbb
mov
nop
lret
nop
dec
std
out
sbb
mov
inc
pop
fwait
ss
jmp
mov
sub
mov
push
iret
in
and
and
cmp
popa
push
jecxz
sbb
xlat
mov
loope
enter
ret
or
sub
add
incl
int
lea
out
es
sbb
arpl
cld
sbb
mov
mov
std
and
xlat
jnp
aad
out
sub
sbb
imul
outsb
cmp
das
and
dec
sahf
mov
pop
or
gs
clc
sbb
mov
xor
fnstenv
adc
fnstsw
xor
xchg
imul
sbb
adc
les
adc
cmp
or
mov
das
push
lock
push
repz
and
scas
xor
pushf
inc
xor
sbb
mov
jno
sub
or
subb
sbb
sub
push
push
imul
outsb
push
xchg
and
in
push
sbb
sbb
ret
outsb
lods
hlt
ror
xchg
cmp
iret
sbb
inc
xchg
daa
cltd
insb
adc
insb
lods
push
mov
cmpb
icebp
pop
insb
lods
mov
fsubl
push
add
lea
xchg
dec
movsl
mov
mov
push
adc
push
or
fnstenv
clc
sbb
sbb
sub
cwtl
popf
pop
into
data16
mov
adcl
mov
js
icebp
xor
out
es
hlt
dec
fucom
ds
loop
es
add
test
lds
sbb
mov
or
jle
mov
mov
loop
enter
pushf
dec
aam
adc
sub
push
dec
sbb
sub
daa
or
leave
dec
lods
into
mov
ds
mov
out
push
repnz
fisubl
mov
push
insb
fstl
insl
popf
mov
mov
add
xchg
push
pop
fsubrl
int
push
mov
sub
dec
lock
mov
push
jmp
test
sbb
sti
pushf
dec
jl
xor
and
mov
je
in
or
imul
ret
pop
or
movb
fwait
push
mov
fmuls
repz
pop
and
xor
repnz
jae
iret
jle
cmp
push
sub
shll
subb
push
or
cmpsb
filds
pop
scas
and
mov
jle
push
and
xor
outsb
add
outsl
sbb
dec
pop
mov
or
push
add
stc
pushf
into
mov
push
cmp
mov
mov
es
repnz
les
loopne
jnp
adc
jb
pop
fs
mov
mov
lock
sbbb
jge
aaa
push
adc
sbb
cmp
das
sub
stc
lock
mov
pop
cld
idiv
andl
xchg
sub
and
push
jge
inc
rcl
pushf
cmp
pop
sub
nop
aaa
adc
test
pop
es
dec
movsl
rclb
gs
nop
add
insb
or
adc
xor
addb
or
addr16
sbb
mov
insl
enter
daa
unpcklps
test
mov
cmp
mov
loope
sub
push
push
lret
inc
out
das
and
aam
and
js
outsb
das
outsl
into
inc
scas
and
mov
outsl
mov
and
sbb
push
inc
sbb
sahf
mov
cmp
inc
aaa
loop
xor
cmc
xor
mov
adc
inc
fcoml
clc
ror
cltd
adc
test
jmp
adc
sub
adc
rorl
outsb
fs
cli
sub
mov
mov
or
adc
adc
mov
cmpb
jg
or
mov
dec
pop
push
mov
cld
cmp
mov
roll
xchg
loope
jns
mov
inc
movsb
fs
lahf
fwait
mov
iret
sbb
push
adc
ja
pop
jg
mov
push
rcrl
lret
cmp
cli
pop
xchg
aam
scas
mov
ja
jmp
repz
into
frstor
movsl
je
mov
jg
das
dec
xchg
insb
jmp
lahf
rclb
cmpsl
xchg
push
cmp
fsubrl
fisubl
sub
jb
pop
jl
lds
push
fimull
jmp
lcall
ja
jge
sub
xor
cwtl
in
xlat
mov
push
mov
daa
rclb
sahf
xor
inc
sub
xor
clc
movsl
xchg
cmp
pop
pop
cmpsb
adc
cmp
adc
outsl
and
out
jae
das
adc
lock
xchg
pop
sub
dec
xor
cld
imul
rclb
loope
popa
aaa
les
pushf
mov
and
sub
dec
cmp
repz
enter
push
pop
adc
sub
and
mov
dec
and
xor
jle
cmp
repz
adc
add
cmp
push
xor
mov
and
into
mov
out
enter
dec
jl
xor
loope
push
push
iret
repz
adc
adc
xor
das
adc
daa
and
dec
aas
sub
pushf
push
sub
arpl
push
jae
ja
adc
or
xchg
sub
sbb
mov
repz
dec
enter
xor
daa
cld
mov
pop
push
ds
inc
sbb
mov
pop
mov
mov
jns
push
mov
loope
sbb
push
daa
pop
sbb
pusha
jns
or
aas
dec
fisttpll
jmp
orb
mov
adc
jne
scas
daa
xchg
push
clc
lods
or
mov
mov
les
mov
decb
xor
mov
mov
dec
loop
aas
mov
sub
and
mov
dec
inc
mov
cmp
sbb
inc
ficompl
iret
cmp
incb
adc
dec
and
outsl
mov
inc
pop
mov
jmp
push
mov
mov
mov
or
dec
mov
out
int
mov
scas
pop
subl
cmp
mov
pop
adc
sbb
iret
lods
test
mov
cmc
push
repnz
mov
and
cmp
ja
lods
daa
push
mov
jo
sub
mov
lcall
rcrl
lods
adc
out
pop
dec
rcrl
jns
xor
or
rorb
inc
mov
sbb
pop
or
xchg
jmp
loope
and
add
mov
dec
scas
xchg
lahf
push
jl
nop
mov
es
sub
xor
int
or
xchg
int3
fstp
nop
shrl
sqrtps
pushf
mov
mov
not
filds
cmp
jo
pop
outsb
mov
cmp
cmp
or
aam
lea
xchg
mov
xor
clc
pop
sbb
adc
and
sbb
insl
push
and
mov
sub
lea
clc
jmp
in
es
loope
xor
push
mov
cmovge
mov
add
mov
or
adc
jge
pushf
stc
push
push
pop
out
out
and
push
pushf
mov
push
popa
fcoms
aas
sahf
je
call
xchg
pop
cmc
mov
aaa
sub
pushf
loopne
xor
pusha
dec
xlat
adcl
testl
mov
mov
lods
dec
out
nop
lahf
push
xlat
scas
mov
xor
dec
idivb
sahf
jl,pn
mov
into
cmpl
fildll
xchg
and
out
cmpl
jae
jge
dec
adc
lea
xchg
add
sbb
mov
cmp
popf
xor
cmp
es
sbb
jns
ss
in
xlat
cmp
out
sahf
arpl
xchg
out
adc
popa
gs
fdivrl
cmp
push
sbb
cmp
aam
ss
jecxz
jb
inc
xor
jb
fsubrs
ja
dec
jb
and
dec
clc
pop
lods
xor
inc
push
in
sahf
xor
outsl
dec
inc
cmp
mov
outsl
pop
out
jle
mov
inc
xchg
inc
jecxz
xor
pop
and
push
mov
inc
cmp
adc
jns
out
adc
fwait
fwait
xor
movaps
dec
push
sub
adc
pop
out
shr
es
dec
pop
pop
mov
fidivs
and
out
shrb
daa
xchg
iret
sbb
push
lret
cmp
xchg
add
mov
and
xchg
sahf
shll
popf
rorb
nop
loope
int
mov
rcrb
sbb
jl
scas
in
pop
dec
pop
setne
dec
in
mov
mov
daa
adc
lcall
int3
sub
push
mov
arpl
mov
pusha
mov
mov
movlps
dec
adc
int
ficompl
imul
sbbl
sarb
cmpl
xchg
hlt
cmp
jmp
adc
lods
sub
in
rcr
pop
mov
push
dec
fcoml
aaa
outsl
inc
sub
aas
jne
das
mov
fs
push
psrad
aad
pop
int3
inc
das
out
pop
cmp
rorl
push
cmp
inc
pop
or
adc
addr16
adc
xor
aam
push
les
pop
lret
sbb
das
loope
cmp
inc
cld
adc
inc
icebp
loop
jne
outsb
xor
daa
sbbb
test
adc
out
adc
inc
pop
int3
lea
sar
addr16
dec
fldenv
pushf
sbb
xor
or
xchg
sbb
out
int3
jmp
push
cmp
cmpsl
sbb
leave
enter
daa
enter
hlt
cmp
sbb
sbb
cld
loopne
jno
adc
mov
xor
sbb
int3
cmp
fldenv
sub
sbb
movsb
add
sbb
mov
pop
daa
sbb
lods
insb
xchg
das
sub
es
int3
loope
in
jne
out
pop
inc
inc
pop
mov
dec
popa
adc
dec
pop
or
xchg
inc
add
adc
mov
dec
inc
jmp
push
pop
out
dec
xchg
cmp
adc
sbb
dec
pop
add
adc
dec
adc
sub
in
jmp
jle
pop
cmp
cmp
out
xchg
add
xor
frstor
fs
inc
out
cmp
inc
mov
hlt
mov
and
inc
lods
xchg
xor
jns
loope
cmp
mov
test
sbb
inc
dec
add
mov
popa
pop
mov
cmp
pop
sbb
jb
cmp
sub
adc
hlt
or
jmp
jp
and
cmp
pop
fcompl
dec
sahf
jb
mov
pop
mov
arpl
adc
adc
push
pop
lret
loope
inc
xchg
and
sub
or
pop
cld
mov
jae
sub
cmpsb
xchg
push
mov
jne
hlt
aaa
shr
push
xor
adc
enter
push
and
shll
lcall
sbb
or
test
jmp
andl
imul
sbb
dec
mov
adc
sub
inc
cwtl
and
push
cwtl
add
sub
jmp
dec
push
cmp
clc
dec
scas
repnz
mov
pop
iret
inc
mov
jae
loope
jmp
adc
lods
cwtl
js
cmp
sbb
repz
inc
mov
lods
cmp
pop
jg
lret
loop
inc
or
mov
dec
andl
inc
and
jle
sub
push
out
test
in
add
and
stos
imul
movsb
cwtl
jo
mov
fmuls
rsqrtps
cwtl
inc
sub
push
cmp
sub
scas
fwait
cmp
rorb
jns
push
jo
and
pop
les
push
les
add
push
adc
jmp
push
cld
cmp
mov
into
fs
fs
xor
cli
jno
inc
xchg
inc
out
sbb
xor
adc
and
fbld
je
fs
pop
cmp
cmp
push
mov
std
sbb
dec
bound
xlat
repnz
xor
int3
nop
outsb
push
hlt
adcb
sub
push
sub
in
inc
roll
scas
jne
xchg
jae
sbb
mov
xchg
insb
xchg
scas
cltd
inc
or
int3
push
int
data16
mov
test
subl
xlat
mov
aad
or
push
sub
push
pop
sub
cmpsb
std
xor
inc
lahf
mov
test
mov
mov
pop
pop
jo
popf
test
dec
mov
sti
cs
in
lock
jnp
mov
fstl
adc
filds
push
ficomps
jae
ja
sbb
mov
and
jbe
cmp
or
imul
lods
cld
xchg
mull
in
outsl
cmp
adc
jb
cmp
push
adc
xlat
mov
mov
adc
inc
dec
jne
sbb
sbb
pop
xchg
cmp
push
icebp
or
gs
push
in
dec
mov
cs
movsb
mov
dec
xor
add
dec
iret
xchg
into
loopne
push
iret
or
sbbl
loopne
inc
lret
es
sbb
inc
xchg
adc
mov
gs
xchg
pop
mov
data16
aaa
ss
rorb
and
xor
sub
mov
hlt
xchg
adc
cmp
and
gs
out
mov
xchg
test
adc
les
cmp
jne
mov
sbb
test
cmp
pop
adc
jo
xor
sub
dec
aam
adc
xor
push
inc
pushf
xchg
sub
push
test
lea
cs
out
das
xor
pushf
negl
push
hlt
xchg
sub
dec
push
mov
pop
sub
lcall
and
sbb
push
out
pushf
pop
sub
xlat
sbb
mov
fcoml
gs
push
sbb
push
das
pushf
ja
mov
mov
movsb
cmpsb
fisttps
adc
or
insl
mov
push
and
repnz
xchg
or
je
mov
jmp
mov
loopne
mov
popf
enter
int
lret
xchg
popa
pop
je
shr
mov
in
and
sbb
dec
sbb
push
loope
addr16
mov
or
and
mov
leave
sbb
cmpsl
sbb
adc
and
int3
push
daa
mov
mov
cmp
sbb
dec
inc
mov
aaa
push
out
push
lock
int
sbb
and
cld
lret
fwait
std
dec
dec
and
adc
lds
push
mov
fnsave
jp
cmp
inc
cmp
pushf
aad
pusha
xor
in
mov
mov
xchg
sub
xchg
jmp
cmp
test
adc
dec
cltd
cld
sbb
aad
and
mov
dec
mov
inc
mov
js
add
xchg
or
and
popf
cmpsb
out
push
adc
pop
cmp
adcb
data16
inc
push
sub
inc
dec
nop
dec
lahf
dec
cld
push
sub
xlat
pop
test
adc
sbb
and
push
cmp
inc
dec
dec
push
push
add
pusha
fs
js
addb
pushf
mov
mov
mov
int3
rcl
add
fsub
in
in
lock
add
cld
add
sub
sub
add
dec
dec
push
push
pop
pop
add
imul
or
xchg
cltd
or
movsl
test
add
rcl
fldenv
xchg
cmc
stc
jmp
and
push
jge
push
adc
cwtl
dec
sbb
dec
or
pushf
pop
xchg
mov
mov
adc
scas
ja
dec
lahf
cs
out
lods
test
jo
sub
fildll
push
es
lods
aam
out
shll
aad
adc
pushf
sub
in
loop
and
scas
aad
loope
sub
aam
push
test
roll
sub
cmp
sub
xor
jecxz
iret
dec
inc
adc
in
rcll
lds
cltd
aas
sahf
leave
insb
lods
neg
scas
shr
jae
inc
rcr
add
leave
add
out
fisubrl
gs
test
imul
pop
jne
scas
or
hlt
xor
repz
in
leave
pushf
sub
test
repnz
in
test
jecxz
imul
xor
pushf
mov
in
xadd
mov
repnz
sbb
sbb
aaa
sarl
mov
xchg
adc
cmp
loope
outsb
test
in
movsb
jp
xchg
cmc
scas
mov
popf
pop
js
loope
xchg
loope
xchg
je
add
imul
inc
mov
sbb
mov
rcrl
jbe
clc
fbld
cmpsb
mov
add
lods
lods
enter
mov
mov
scas
aaa
xchg
flds
lcall
subb
xchg
xor
pop
outsb
push
aam
or
adc
dec
inc
jmp
enter
shlb
int3
sub
dec
call
mov
pop
int
je
loop
xor
jle
pop
movsb
bound
mov
xchg
pop
popf
mov
aam
pushf
pop
sti
dec
mov
rorl
call
xchg
out
dec
in
stos
in
addr16
imul
or
mov
adc
sbb
fcoml
lods
fmull
inc
pop
out
adc
sub
pushf
fwait
rorl
insl
push
mov
mov
sub
scas
mov
inc
adc
je
mov
repz
pop
mov
cmp
xlat
ljmp
jnp
mov
movsb
jecxz
sub
push
mov
push
xor
mov
sti
fs
push
lret
fdiv
and
cwtl
adc
mov
pop
pop
lock
gs
aas
sbb
leave
jl
scas
loope
imul
movsl
cmp
fstl
int
fists
loopne
jae
pop
adc
divb
mov
sbb
cmp
xor
vunpcklps
cld
loope
lds
test
add
and
sahf
test
hlt
mov
mov
adc
int
sub
push
mov
jl
push
push
adc
adc
lcall
cwtl
lods
arpl
sahf
enter
adc
pop
adc
adc
cwtl
adc
adc
popa
add
inc
dec
dec
xlat
adc
adc
adc
push
dec
push
or
xor
cli
mov
sub
add
cmp
inc
inc
dec
dec
add
pop
pop
bound
outsb
add
jp
addb
lcall
mov
mov
into
add
fcmovu
loop
ljmp
add
or
add
pop
sbb
and
sub
add
aaa
cmp
inc
inc
dec
dec
add
pop
pop
arpl
outsl
add
jnp
addl
fwait
lahf
mov
mov
mov
iret
add
xlat
fcmovnu
jecxz
jmp
adc
idiv
incl
or
mov
push
xor
mov
mov
mov
push
mov
mov
xchg
hlt
rol
stos
les
adc
dec
mov
inc
xor
sbb
mov
icebp
fisttpll
xor
dec
mov
mov
dec
pop
gs
cmp
int
pusha
sbb
loope
pop
daa
rorl
popa
mov
mov
mov
mov
cltd
lods
test
outsl
jg
iret
lds
sbb
dec
pop
cmp
rcll
sbb
fmul
sub
popf
mov
lods
and
lods
movsb
fldenv
scas
testl
inc
leave
pop
lds
pop
loope
lods
cs
mov
push
int3
sub
pushf
mov
fcmovbe
jmp
sub
and
mov
mov
adc
dec
adc
lret
push
dec
sbb
loope
dec
pop
dec
dec
sub
mov
outsl
in
popf
popa
pop
adc
push
fcom
les
and
push
pop
xor
push
xchg
pop
adc
popa
dec
popa
andb
mov
lcall
int
int
lea
cmp
add
das
fdiv
idiv
adc
inc
jle
movsb
xor
or
je
sbb
jl
and
hlt
jge
fstp
inc
sub
adc
in
jle
mov
insl
mov
aam
inc
popf
sahf
cmp
fsubr
and
mov
sub
lret
push
inc
adc
cs
int
dec
mov
xchg
int3
push
push
fwait
pop
mov
adc
mov
mov
movsb
cmp
in
and
movsl
push
rorb
xor
pop
and
mov
pop
jg
xor
mov
adc
adc
dec
xchg
lcall
xor
clc
jnp
icebp
xor
sub
pop
lds
cmp
inc
jle
data16
rcrb
sub
sbb
pop
push
insb
sub
inc
sub
sub
addr16
dec
xchg
push
cmc
cmpsl
mov
cmp
pop
mov
cmp
xor
and
xchg
mov
inc
jb
imul
add
mov
cmpsl
jle
dec
scas
push
jbe
inc
mov
fstp
push
xor
push
sahf
scas
addb
fxch
imul
or
push
out
mov
push
dec
xchg
pushf
xchg
adc
push
fistps
out
cmp
mov
jns
push
mov
xchg
test
push
pop
pop
imul
sarl
jns
cmpsl
jne
pop
inc
jo
lods
and
subl
test
cmp
das
mov
out
xchg
dec
rorl
outsl
pusha
or
test
mov
das
call
bound
out
icebp
sub
xchg
sub
test
mov
stos
xchg
das
add
int
scas
sub
sarl
inc
mov
orb
aas
loop
pop
mov
inc
cs
movsl
lock
aaa
prefetch
inc
lea
inc
pop
hlt
in
mov
scas
out
sbb
setae
xor
or
out
call
xchg
xor
hlt
fucomip
insl
outsl
cld
aas
jo
sub
shll
sbb
enter
or
or
xchg
push
sbb
adc
mov
push
cmpsl
sbb
jg
push
cmc
sbb
mov
xlat
sbb
inc
push
dec
inc
adc
inc
add
inc
sbb
imul
push
lods
out
xor
data16
out
fs
icebp
inc
in
shl
movsl
adc
pop
dec
mov
mov
ret
push
pop
and
int
ficoms
test
aam
pop
push
dec
sub
mov
jne
rorb
xlat
jae
popa
lds
rcr
pop
push
adc
push
sub
pop
js
sbb
dec
inc
mov
xor
ret
dec
mov
sbb
pop
xchg
jmp
test
dec
pusha
add
cltd
pop
mov
cmp
mov
pusha
sbb
mov
xor
xor
cmp
insl
sbb
bswap
jae
outsb
pushf
lock
stos
xchg
fs
pop
pop
lret
adc
sub
mov
out
push
sbb
push
add
pop
jmp
bound
pushf
clc
int
pop
bound
imul
add
pop
icebp
int
push
lock
xor
push
test
je
xchg
xchg
xchg
dec
xchg
adc
mov
push
insl
pop
push
ja
cltd
pop
repz
inc
leave
mov
mov
sahf
test
mov
ds
adc
fsubrl
fwait
les
jl
lods
int3
loopne
insb
fwait
pop
inc
fdivrs
mov
adc
xor
lods
rcr
and
jle
icebp
sbb
repz
inc
xchg
daa
mov
lods
xor
cmp
xchg
jp
push
or
xor
push
dec
out
aam
adc
adc
mov
das
sbb
cmp
nop
mov
fistps
stc
push
lret
call
mov
push
hlt
mov
into
xor
dec
data16
and
in
mov
mov
inc
loop
pushf
leave
mov
mov
lods
int
pop
or
movsl
movsb
dec
js
xor
cmp
adc
pop
adc
dec
and
cmp
pop
pop
fcoml
xchg
mov
mov
cmp
mov
inc
xor
cmpsl
mov
and
lahf
jge
sahf
mov
push
push
push
dec
call
inc
sub
aas
dec
ljmp
dec
gs
subl
adc
mov
mov
cmp
jns
dec
adc
mov
jae
mov
dec
lods
inc
push
xchg
and
sbb
adc
cld
fisubs
jno
adc
sbb
mov
aam
fwait
jle
or
lret
pop
movsb
movsl
and
push
outsb
xor
pushf
mov
adc
jno
addb
jb
rorl
mov
xchg
and
pop
movsb
out
sub
mov
cmc
push
adc
inc
insb
push
add
nop
lea
mov
xor
aaa
jo
lods
mov
mov
imul
xchg
fld
and
adc
shlb
sub
test
pop
sbb
sbb
insb
lcall
xor
sub
xor
jl
cmp
fs
cld
adc
dec
jb
dec
cmp
inc
sbb
insb
nop
lock
dec
adc
sbb
insb
aaa
pop
sub
imul
mov
mov
jl
aad
mov
repnz
cmp
sub
mov
sub
pop
xchg
dec
pop
sahf
int
stos
mov
jb
imul
sub
imul
jns
lcall
adc
xchg
jg
scas
mov
or
sbb
xor
sub
test
jl
sub
dec
xor
and
shrl
insb
lods
mov
sub
xlat
mov
and
push
loopne
inc
xchg
adc
push
mov
stc
mov
ja
pop
mov
mov
jbe
pop
pop
dec
popa
paddsb
sub
sahf
sbb
icebp
pop
nop
insb
and
mov
call
or
sub
loopne
sub
or
or
int3
popf
adc
out
dec
xchg
lahf
xor
jae
xchg
jns
dec
dec
mov
xor
push
and
ja
cmp
jns
int
outsl
dec
xchg
hlt
push
mov
sbb
dec
and
mov
in
dec
test
insb
push
movsl
enter
mov
lods
movhlps
mov
mov
sbb
mov
je
mov
push
popf
popf
fcoml
mov
cmpsl
pushf
sbb
xchg
push
mov
test
pop
pop
xor
pushf
jo
popf
push
je
mov
movsb
jl
aas
push
test
xchg
mov
push
nop
xchg
insb
mov
pushf
adcb
cmc
pushf
sub
xchg
or
fsubl
ud0
adc
push
lods
add
or
pushf
das
xor
pop
out
sub
xchg
mov
aam
mov
aas
pushf
das
sub
sbb
push
mov
push
mov
push
push
in
jb
int
lods
pushf
lea
or
mov
jge
movsb
xor
aad
ficoms
dec
ss
adc
sbb
scas
icebp
push
cmp
cwtl
pop
push
int
lods
iret
shr
outsb
dec
dec
pop
xor
sti
pusha
dec
sbb
pop
sub
ficompl
cs
test
cmp
jne
mov
push
xor
rcrl
pushf
jno
jmp
sbb
push
enter
mov
fnstenv
hlt
adc
call
loopne
cmp
or
movsb
adc
sbb
push
or
jae
mov
in
notl
cmp
dec
sbb
push
pop
sub
data16
fs
mov
cwtl
pop
jo
sbb
xor
fcompl
dec
xchg
ret
aas
inc
cltd
pop
pop
inc
mov
xchg
loop
mov
mov
dec
add
inc
dec
jo
mov
imul
and
mov
xchg
repz
push
dec
dec
push
xacquire
cld
arpl
mov
cmc
bswap
daa
add
pop
scas
adc
and
jmp
int
std
adc
repz
mov
xchg
cmpsl
add
fwait
aas
xlat
mov
push
adc
or
dec
push
fwait
and
std
imull
mov
dec
xchg
xor
and
cmpsb
adc
mov
lcall
loope
pmulhw
sub
lahf
stos
pop
lock
loopne
add
mov
adc
xchg
or
cmpsb
iret
add
ds
cmp
outsl
mov
jnp
mov
out
fldt
push
orl
cmp
mov
adc
lea
mov
inc
aas
sbb
adc
or
and
xor
lcall
popf
clc
mov
inc
push
push
sbb
sbb
add
ljmp
cwtl
push
sub
mov
or
mov
add
add
adc
pop
or
sub
add
inc
xchg
push
push
dec
jmp
enter
inc
sbb
pop
pop
bound
pop
clc
loope
sbb
lret
test
and
test
dec
or
pushf
cwtl
daa
xchg
decb
clc
dec
rclb
popa
jno
push
rcrb
std
push
cli
mov
imul
inc
and
pop
push
and
sbb
mov
adc
iret
add
popf
std
and
add
cwtl
pop
sbb
sbb
adc
outsb
div
jo
cmc
cltd
mov
cld
add
sub
popl
imul
cs
sub
shrb
scas
fwait
cmpsb
sbb
daa
push
and
loope
jnp
hlt
sub
sarl
push
aam
xor
jne
cmpsb
sub
punpckhwd
mov
aam
lods
push
adc
push
mov
mov
in
dec
pop
movb
add
sbb
ja
scas
daa
test
imul
insb
sub
mov
lret
int3
add
xchg
sbb
cmpsb
outsl
gs
xchg
push
dec
sbb
xor
adc
push
sbb
cmpsb
data16
dec
xor
insb
cs
int3
add
insl
dec
insb
jne
xor
jo
cmp
std
pusha
push
in
jnp
lds
aad
hlt
in
lods
lods
aam
shl
mov
notb
mov
fadd
mov
in
ljmp
xchg
movsl
rol
int3
dec
add
ret
inc
fsts
fcomps
int3
cltd
insl
mov
icebp
cmpsb
dec
addr16
lcall
test
mov
and
jns
pop
pop
cmp
mov
inc
and
mov
sub
leave
push
mov
mov
rcrl
xchg
mov
enter
add
in
sarl
mov
dec
dec
cmpsb
dec
adc
sbb
daa
jbe
add
int
sub
int3
test
dec
inc
xchg
dec
mov
pop
into
lcall
cmp
push
scas
insb
mov
in
out
adc
dec
ljmp
idiv
xor
fdivp
or
testl
fwait
dec
sbb
dec
pop
jg
adc
inc
lahf
sub
iret
xchg
fistpll
push
hlt
jns
jmp
add
mov
xor
inc
and
dec
ret
dec
mov
int3
lock
pop
pop
lcall
and
mov
es
addr16
push
psubb
sub
cmp
dec
iret
pop
fildll
decl
mov
in
cld
decl
cmp
ljmp
mov
call
incl
pop
jle
xchg
call
lcall
call
lock
dec
hlt
insb
inc
xor
stos
sbb
add
out
into
or
mov
aas
jg
in
int3
lahf
fldcw
ror
sbb
push
inc
push
movhlps
xor
cli
lahf
imul
mov
in
hlt
pushf
clc
mov
int
cmp
lret
inc
adc
inc
fwait
dec
mov
add
adc
xor
inc
push
dec
mov
dec
sbb
dec
test
dec
lds
dec
push
dec
inc
dec
pop
dec
lcall
dec
aaa
dec
push
dec
dec
xlat
sbb
lock
pop
jnp
out
add
pusha
hlt
adc
pop
iret
pandn
push
sbb
lret
sub
testl
add
dec
mov
dec
dec
sbb
cld
push
pop
js
or
lds
add
add
loop
orb
mov
shll
fidivl
pop
ret
sbb
pop
mov
sbb
icebp
sbb
xlat
lahf
sbb
pop
mov
push
das
in
jl
fdivr
sub
repnz
sub
xchg
push
das
loopne
cs
adc
xor
dec
sub
sub
int3
andb
or
jle
cld
add
mov
rorl
imul
push
repz
out
js
aad
fstpl
cmc
std
lret
jl
fcom
sbbb
xor
ret
sbb
sbb
cmove
call
stos
dec
out
dec
xchg
sbb
lcall
insb
inc
mov
xor
test
and
push
imul
inc
push
xchg
xor
rep
repz
repz
repz
rep
repz
repz
and
aad
fnsave
insb
in
cmc
add
sbb
dec
push
popa
push
xchg
insl
mov
push
jbe
xchg
push
movb
push
cmpsl
jl
add
xchg
test
cmp
sub
sbb
dec
or
jae
xchg
sub
stc
call
incl
dec
ljmp
call
jae
xchg
cmpsl
dec
sti
add
sahf
enter
inc
int3
and
inc
dec
dec
pusha
dec
je
mov
dec
fmull
dec
popa
dec
jne
mov
dec
cmc
dec
sub
dec
jp
scas
dec
das
dec
inc
dec
mov
adc
pop
aam
mov
aad
push
pop
ljmp
push
xor
cmp
xchg
pushl
or
lahf
and
mov
or
jbe
push
mov
mov
push
jae
mov
or
cmp
and
loopne
xorb
insl
xchg
jbe
mov
jecxz
or
dec
in
nop
inc
call
lods
cmc
out
xor
cmp
pop
mov
sub
sub
pop
fisttpll
lahf
test
enter
adc
push
lods
push
fldl
add
and
dec
push
bound
jp
add
movsl
hlt
popa
clc
jns
mov
test
fistps
out
stos
dec
push
decl
cmpsl
mov
push
push
jne
lcall
roll
mov
enter
jno
aad
xor
stos
outsb
scas
stos
aas
xchg
xchg
or
xchg
mov
jo
shlb
pop
push
in
insl
cmc
mov
mov
aaa
jl
loopne
sub
enter
imul
mov
push
fisubrl
cld
aad
fisttpll
in
in
shl
ljmp
xor
push
adc
jne
rcll
inc
lahf
int3
jecxz
enter
sub
subl
cmpsb
pop
pop
xor
pop
lahf
in
xor
fadds
jl
mov
add
mov
mov
mov
and
dec
mov
cwtl
sub
stos
jno
push
stos
pop
stos
out
sub
mov
dec
cmp
push
xchg
lcall
in
xor
mov
int
aad
cmc
decl
shl
in
rcrl
xchg
push
lcall
ljmp
push
sub
dec
push
pop
push
xchg
lahf
push
scas
push
mov
push
std
scas
sbb
dec
out
sar
jnp
or
scas
xchg
cmovo
pop
xor
fsubrl
fildll
dec
mov
mov
mov
mov
sub
shl
test
sub
test
loop
inc
fcom
cmpsl
jl
fcompl
mov
lret
nop
adc
xor
pop
push
nop
lods
in
dec
call
add
hlt
aad
fisttpll
pop
add
and
into
or
or
cmpsb
or
or
or
or
or
inc
adc
movsb
pop
sahf
mov
pop
inc
scas
push
push
cltd
jno
int3
or
decl
dec
mov
cmpb
dec
adc
push
outsb
jae
xchg
mov
iret
jl
aad
in
cmp
xor
mov
repnz
sub
sbb
push
push
dec
out
add
mov
lock
fnstsw
dec
hlt
into
push
jl
dec
xchg
cld
xor
adc
and
dec
mov
icebp
lahf
mov
aad
fnsave
mov
std
xchg
mov
flds
cltd
sbb
lcall
test
mov
fisubrl
lahf
and
sub
call
bound
cmc
pop
std
xor
push
xor
adc
xchg
jle
or
or
inc
outsb
inc
rorb
xor
es
cmp
jb
xchg
lcall
jecxz
xor
adc
sbb
push
sbb
xchg
xchg
mov
addr16
fiaddl
rsm
jmp
andb
das
in
rcl
or
sti
jl
aam
xorb
sbb
lock
push
xor
pushf
xchg
pop
scas
cmp
add
push
and
lock
hlt
xchg
lahf
scas
inc
clc
mov
inc
dec
dec
jne
xchg
xor
stos
iret
inc
xchg
popf
add
xor
dec
and
inc
shrb
sahf
clc
cld
adc
xor
lods
aam
pushf
scas
push
das
aas
int
inc
notl
inc
in
sub
call
add
cmpsb
ret
mov
cmpsb
lret
xchg
popf
mov
int
testb
subb
xchg
jle
mov
mov
or
and
mov
jg
out
dec
into
dec
push
dec
sti
sbb
fcomp
pop
in
lcall
sub
jbe
pop
sahf
ljmp
jl
fcompl
orb
xor
mov
mov
mov
into
scas
pop
movsb
loopne
bswap
inc
sahf
dec
dec
out
dec
das
dec
inc
dec
mov
jg
in
inc
pusha
xor
or
pop
pop
loop
push
iret
push
call
inc
mov
or
loope
xor
mulps
clc
sub
mov
sub
xchg
lea
mov
cmc
filds
out
push
jbe
push
inc
push
push
xor
or
mov
mov
mov
mov
test
xchg
xchg
dec
jae
push
rcrb
mov
in
adc
mov
cld
adc
hlt
sahf
imul
aad
out
mov
les
jne
inc
xor
inc
shlb
adc
fdivrl
jo
aas
push
sbb
call
and
mov
icebp
pop
dec
push
inc
sbb
or
pop
xchg
ljmp
fwait
sub
cmp
dec
fistpl
imul
push
mov
mov
int3
repnz
cmpsl
mov
push
in
clc
and
jl
or
jo
or
inc
sarb
lea
dec
int
fnsave
mov
xchg
rorb
push
ds
sub
pop
dec
out
dec
pop
dec
outsl
dec
out
push
xor
in
inc
or
dec
mov
cmp
mov
mov
mov
int
dec
ror
repz
repz
repz
insb
sarl
insl
push
in
popf
and
fistps
outsl
out
data16
in
push
insl
test
outsb
pop
ficomps
dec
xchg
scas
dec
pop
aad
push
out
fdivr
cmp
fcompl
pop
sub
cs
insl
cmc
std
inc
cmp
cld
cmpsb
or
test
sub
out
stos
stos
setg
idivb
lcall
jg
lahf
mov
lcall
cld
cmp
pop
jl
pushf
and
cmp
inc
popf
dec
daa
std
dec
push
push
cmp
ds
fs
pop
dec
outsb
dec
jle
mov
cmp
fisubrs
negb
fldt
fstpt
fisttpl
pop
xor
jg
push
mov
stos
iret
stos
fistps
sub
cmp
movsb
hlt
add
mov
pushf
or
fdivrl
cld
sub
insl
stos
jge
lea
mov
mov
or
ret
out
inc
xor
shlb
inc
xor
pop
fstpl
xor
mov
aas
negl
xchg
cli
mov
clc
mov
sbb
add
lahf
sbb
xchg
or
sbb
adc
loopne
call
xchg
jle
sbb
cmp
loop
mov
int3
out
out
decb
inc
mov
push
fisubrl
rcrb
daa
adc
xchg
mov
sbb
test
lcall
or
loop
in
dec
mov
js
aaa
sub
pop
daa
jmp
cli
xlat
rorb
inc
stos
fcmovu
or
dec
pop
pop
outsl
icebp
jl
add
imul
hlt
push
and
int
leave
jecxz
insb
push
pushf
out
jnp
mov
mov
cmp
xor
movsl
iret
pop
mov
xor
vandnps
and
shl
in
fadd
outsl
or
movsb
fldenv
in
shlb
dec
cmc
shl
aam
ror
xor
cmp
cmp
adc
out
xor
ds
xchg
addb
hlt
in
fdivs
jp
inc
in
xchg
test
dec
sbb
pop
mov
jmp
push
popf
jno
sbb
jl
push
int
mov
adc
mov
xchg
std
test
pop
and
shl
fmull
sub
push
rcll
pop
in
mov
bound
dec
and
insl
push
js
mov
mov
lret
xor
stos
in
dec
daa
repnz
les
sub
and
sbb
sub
je
repz
mov
test
and
lea
mov
enter
sbb
xchg
xchg
movsl
cmp
xor
jp
daa
adc
popa
test
movsb
and
mov
scas
roll
std
repz
lret
adc
cmp
mov
mov
nop
sbbl
push
pop
in
hlt
mov
stc
stc
xchg
dec
push
jecxz
xchg
repz
mov
cmpsb
jecxz
pop
push
gs
cmp
sub
mov
xchg
pop
or
sbb
jns
pop
and
movsl
orl
enter
cmpsl
int3
cltd
clc
dec
fsub
pop
in
mov
cmp
test
mov
das
or
push
in
mov
dec
cmp
mov
add
jle
in
xchg
pop
xchg
cmp
in
fcmovnb
test
dec
xor
pop
in
pop
sbb
cmpsb
lods
loop
dec
mov
adc
pop
lods
das
sbb
f2xm1
push
push
in
cmpsl
cs
ds
fistpll
pop
mov
rorb
mov
enter
push
add
rcrl
or
pop
push
movsl
xchg
mov
loopne
inc
dec
sbb
popf
add
inc
jg
icebp
test
loopne
divl
xchg
mov
in
shrb
imul
aam
je
popf
pop
pop
je
lods
aam
das
pop
push
mov
mov
pushf
xchg
jae
add
add
int
fcoml
mov
xchg
std
mov
xlat
cmpsb
and
fdivrl
cmp
scas
fisubrl
test
ret
dec
mov
add
add
fwait
mov
in
push
jae
out
jp
lock
sub
aam
xor
lcall
push
jmp
xlat
mov
pop
dec
or
xor
push
pop
stc
enter
sub
jge
sub
pop
popf
gs
fldl
test
cmp
in
mov
lock
dec
pop
adc
sub
xchg
icebp
sub
addr16
fdivs
lods
es
int3
push
dec
test
ret
js
and
aam
mov
movsl
pushf
das
dec
adc
push
sub
xor
pop
iret
cmp
mov
test
lds
or
in
shrb
sahf
mov
adc
pop
pop
add
dec
inc
nop
lds
pop
and
rolb
cwtl
dec
sbb
ret
xchg
cmp
cwtl
ror
and
pop
mov
push
pop
test
test
push
xchg
xor
sarl
mov
inc
and
xchg
lods
js
mov
cs
or
jbe
int
push
cmpsl
test
cmp
popf
nop
outsb
fwait
push
movsb
xor
cmp
popf
mov
imul
sub
iret
xchg
pop
xchg
push
test
pop
popf
mov
pop
mov
cmp
mov
push
pop
cmp
add
jno
dec
jno
push
loope
icebp
sbb
repz
or
loopne
and
xchg
cs
cld
lret
cwtl
lods
sahf
in
push
xorl
mov
pop
mov
gs
inc
mov
xchg
cmpsb
xchg
arpl
dec
pusha
xlat
stos
rorl
mov
movsb
mov
ss
mov
and
and
pusha
lahf
movsb
dec
leave
lock
add
fsubrl
mov
fcomp
or
xlat
repnz
xor
inc
xor
sbb
icebp
sub
test
fcomi
clc
xor
test
shl
aam
jle
in
int3
jbe
dec
aam
sub
scas
shl
or
call
pmuludq
fcomp
mov
cmpsb
push
in
stos
sar
xor
in
aaa
int
shl
hlt
in
cmc
cmp
sbb
hlt
mov
sub
arpl
or
fdiv
push
aad
and
sahf
or
int
inc
push
inc
ret
mov
nop
inc
xor
inc
in
dec
pop
ret
stc
jmp
enter
in
hlt
xchg
pop
inc
mov
int3
cltd
cmpsl
pop
inc
rclb
les
add
int
jo
loop
xchg
push
hlt
lahf
pop
dec
mov
icebp
sbb
push
dec
or
jmp
jg
cmpsl
fxch
sti
aas
inc
adc
or
mov
ror
fadd
loopne
cltd
mov
cmp
hlt
shlb
xor
inc
pop
ss
sahf
lods
or
imul
xor
mov
cmpl
mov
mov
into
adc
mov
loop
cmpsl
testl
dec
movsb
mov
iret
mov
movsb
fmull
aad
rorb
sub
lock
fcoms
push
mov
fdivr
movsl
mov
jp
call
loope
sub
lret
cmp
cwtl
gs
push
push
adcb
in
jl
mov
cmpsb
nop
sbb
fs
out
lods
cwtl
popa
loopne
pop
loop
inc
je
adc
and
xor
and
int3
mov
sub
cli
mov
xor
and
xchg
jo
les
lods
ret
je
dec
scas
mov
pop
loope
and
dec
lods
xchg
mov
cmp
pop
in
or
decl
loope
call
test
pop
loopne
int3
xor
loopne
lcall
hlt
or
inc
xor
inc
lret
int
mov
aaa
push
cmp
jno
mov
mov
fiadds
les
mov
movsb
dec
ja
mov
out
or
icebp
ja
dec
mov
mov
xchg
arpl
adc
mov
test
sbb
adc
dec
inc
stc
test
fcomps
xchg
inc
xchg
inc
pop
ss
xorb
stos
mov
jmp
sub
hlt
testl
mov
sbb
int3
out
sbb
fnsave
test
push
lret
lret
lcall
repz
rclb
pusha
aaa
mov
mov
test
addl
test
mov
cmp
icebp
lods
icebp
mov
jle
adc
rcrb
out
faddl
lea
xchg
and
inc
inc
inc
or
js
mov
mov
xor
insl
dec
repnz
call
mov
pop
dec
mov
dec
adcl
push
cld
negl
mov
mov
test
pop
cmp
jbe
fucomip
jle
arpl
jbe
out
push
and
shlb
repnz
scas
in
aaa
xor
and
adc
lahf
lock
xchg
addr16
xchg
xlat
add
xor
dec
rcl
fwait
push
push
call
add
in
addr16
or
cmpsl
sub
push
hlt
mov
mov
xchg
js
in
int3
sbb
fucomp
loopne
loope
xchg
std
les
in
pushf
add
mov
mov
leave
cmc
int
in
lods
push
inc
add
xchg
pop
sub
test
xor
lods
cmp
rorl
mov
lock
in
mov
sub
popf
roll
mov
inc
mov
bound
mov
les
aaa
enter
inc
jmp
ffreep
movsl
inc
nop
mov
test
sar
inc
add
dec
int
xchg
fildll
xchg
lcall
loope
mov
stos
andb
subb
imul
and
and
mov
lret
sbb
out
in
popf
call
in
mov
push
cmp
ror
mov
nop
inc
test
mov
push
clc
xor
loope
mov
xor
xchg
outsl
in
fs
mov
push
aad
cli
mov
scas
pop
rcrl
pushf
inc
sahf
nop
test
addr16
test
xchg
xchg
in
inc
js
cmp
movsl
popf
pop
int
cmp
dec
ficompl
fcomps
nop
loopne
fdivs
pop
inc
aam
and
cmc
sub
cmp
xor
push
push
mov
pop
loopne
push
stos
push
les
xchg
mov
xchg
in
cltd
addr16
cmp
aas
nop
cmpsl
test
pop
mov
leave
xchg
rcrb
dec
push
test
lods
inc
sub
mov
push
call
mov
xchg
cltd
imulb
sbb
xor
orl
sti
imul
in
xchg
sub
lock
pop
or
fcoms
arpl
test
xor
sbb
lcall
adc
fsubr
sub
xchg
loopne
inc
rcrb
add
pop
aad
cld
push
cli
jecxz
les
ret
pop
xchg
lds
xchg
xchg
xchg
clc
mov
shll
jns
and
push
sub
adc
pop
mov
sub
lahf
mov
xor
pushf
mov
or
sub
xchg
movsb
scas
and
fidivrl
sahf
push
mov
mov
mov
mov
xorb
shll
mov
jge
ret
add
jnp
lret
adc
mov
jnp
popf
cs
xchg
out
out
popa
mov
jb
pop
das
cld
in
adc
jb
sbb
scas
cwtl
sti
add
adc
adc
in
gs
popa
int3
sbb
inc
mov
lock
mov
fstpl
mov
bound
aam
sbbb
out
xchg
clc
addr16
rclb
adc
adc
push
lds
mulb
or
jns
cld
inc
mov
xchg
jnp
dec
arpl
cmp
sti
stos
mov
cmpb
push
lock
or
inc
pop
mov
push
negb
notl
das
mov
iret
sti
cli
fmulp
mov
scas
sub
or
aam
data16
sub
les
in
mov
fcomps
int3
mov
jb
add
enter
mov
std
cwtl
aam
repz
xchg
call
ja
cmpsb
call
xor
gs
movsl
fwait
push
inc
in
jbe
xor
mov
mov
push
sbb
addr16
frstor
push
pop
fdivrl
std
mov
mov
sbb
ds
sub
call
cwtl
jb
xor
cmpsb
test
inc
rcr
jge
es
cli
hlt
mov
mov
loop
mov
push
pop
mov
push
loop
imul
jno
add
test
ja
and
in
idivl
mov
lods
jno
xor
loop
stc
sbb
call
loope
jle
imul
jle
sbb
add
fidivrs
add
shll
push
ljmp
ret
mov
add
xor
cmp
pop
inc
out
stos
or
test
adc
test
pop
mov
xchg
in
xchg
and
dec
cwtl
dec
cwtl
flds
push
aam
aaa
and
mov
mov
clc
pop
sahf
dec
push
orb
cmpsb
insl
sbb
mov
dec
cwtl
mov
imulb
add
jg
loopne
fdivs
mov
sahf
lcall
mov
mov
adc
dec
mov
mov
rcl
aaa
out
xor
les
mov
jbe
jae
inc
imul
dec
dec
addr16
mov
xchg
fildll
mov
xchg
jnp
stc
dec
inc
and
mov
data16
inc
mov
pop
out
xchg
faddl
rorl
ja
bound
sub
push
clc
mov
out
bound
gs
aam
or
xchg
pop
cmc
fs
addb
jno
mov
mov
mov
mov
loop
xlat
mov
push
push
mov
shl
cmpsb
int3
scas
call
jns
jns
repz
outsb
jns
gs
mov
inc
jge
lds
push
jmp
mov
loopne
iret
dec
getsec
xor
add
insl
sub
call
cld
adc
mov
jno
push
fdivrs
inc
dec
mov
aam
ljmp
dec
add
pop
pop
add
pop
pop
jge
dec
cmpsl
xlat
jmp
cmp
icebp
fldcw
xor
add
call
xchg
mov
mov
dec
xchg
lods
push
ret
outsl
mov
xor
stc
pop
xor
fidivrs
outsl
mov
stc
in
cmpb
loope
jne
mov
ret
cmp
leave
loope
cmpsb
push
jp
pop
int3
in
cmc
fcomps
or
push
cmp
xchg
lret
ja
loopne
loopne
sub
leave
loope
lock
loope
aam
pop
lock
xchg
in
mov
shl
inc
or
test
lock
aad
test
dec
popa
mov
inc
fdivl
xchg
push
add
or
jge
fldl
shl
test
push
pop
fistpl
mov
push
inc
popa
push
xor
subb
sbb
test
stos
test
call
movsl
dec
ja
ficompl
cmpsb
shll
xchg
mov
mov
arpl
imul
add
or
repz
dec
pusha
in
arpl
sub
xlat
lea
sahf
or
and
stc
xor
in
movsl
and
jle
loope
pop
mov
lret
or
sub
sub
add
lock
jl
fdivrl
jl
ficoms
icebp
data16
inc
and
cld
movsb
fdivrl
loopne
hlt
data16
lods
mov
js
and
jbe
jno
ja
and
and
fnstcw
sub
fsubrs
adc
fs
push
cli
jle
std
xor
xor
loopne
mov
int3
lret
sti
xor
push
in
inc
jecxz
adc
pop
and
hlt
lahf
fnstsw
xchg
xchg
jp
and
xchg
pop
popa
stos
mov
inc
fsubl
pop
fucomip
cli
subl
imul
rcll
aaa
ja
pop
mov
in
pop
pop
xchg
jmp
cmp
push
incl
shlb
mov
cmp
sbbb
xchg
dec
pop
mov
jno
fbld
sub
push
adc
sub
jg
push
xor
aad
sahf
sbb
pop
rclb
lock
inc
mov
stc
cld
fsub
lret
dec
mov
cmp
andb
jmp
mov
fnstcw
movsl
mov
arpl
sbb
cmpsb
xor
xor
mov
clc
repz
xchg
cmc
xor
mov
or
cld
sbb
gs
int3
cmp
ror
adc
sbb
popa
lods
and
pusha
int3
movsl
jmp
out
adc
lcall
int3
push
lods
aad
fcompl
xchg
popf
xor
popa
mov
movsl
push
iret
adc
sub
loope
inc
jmp
mov
popa
inc
cmpsb
xchg
xor
xor
or
enter
fsubrl
cmp
pop
jmp
in
sbb
xorb
jmp
or
mov
sub
mov
sbb
xor
mov
cmpsb
inc
sub
sub
aam
fcmovbe
rcl
inc
sbb
int3
fldt
rcr
lods
sti
cld
movsl
in
in
rcrl
aad
in
sub
inc
cmp
inc
adc
and
in
push
and
xor
int
pop
int3
xchg
adc
imul
sbb
in
mov
add
jno
stc
mov
movsl
cmp
cmc
in
dec
insl
pcmpeqw
jmp
adc
test
mov
push
mov
cld
rcll
dec
mov
pushf
and
movsl
xor
mov
add
and
gs
movsl
pop
xchg
sbb
fmul
inc
popf
jg
mov
adc
rclb
jle
push
fprem1
inc
lock
out
or
mov
popf
roll
fsts
inc
adc
pop
loope
aad
fmul
add
xor
sub
lea
popf
int3
insl
jne
in
scas
loopne
imul
fistps
jle
mov
dec
cmc
and
cld
loopne
dec
mov
enter
mov
jmp
inc
lds
mov
and
lret
push
subb
sbb
inc
jno
pop
xor
adc
in
mov
inc
stc
sub
cltd
gs
mov
dec
nop
or
jne
dec
sub
dec
adc
lea
jmp
loopne
ficoml
popf
xor
leave
jne
dec
adc
rclb
notl
dec
loopne
xchg
push
leave
mov
imul
sbbl
cwtl
insl
mov
movsl
enter
scas
xchg
mov
fstpl
gs
mov
popf
imul
enter
outsb
xchg
pop
dec
aad
in
popa
add
enter
xchg
pop
adc
pushf
aam
call
sbb
adc
mov
sarl
imul
imull
add
subb
push
sbb
xor
aam
or
xor
cmc
push
sarl
adc
shr
pushf
int
cmp
mov
and
call
repz
sti
and
popa
cmp
inc
pop
hlt
cmc
pop
inc
mov
sbb
fildll
mov
xor
mov
inc
lods
loope
psllw
and
lods
mov
mov
inc
adc
pop
out
insl
movsl
mov
icebp
push
mov
gs
mov
push
outsb
inc
test
push
mov
adc
xchg
pop
mov
and
scas
aad
xchg
in
push
adc
jne
rcr
sbb
mov
and
cmc
in
cli
adc
push
shlb
rolb
in
adc
push
shll
jne
adc
add
cltd
popf
inc
leave
push
outsb
jae
adc
sub
jmp
cmc
cmc
sub
in
inc
mov
movsl
rorb
scas
adc
mov
insl
in
mov
xor
test
mov
lock
jbe
cmpsb
xor
inc
cltd
push
push
xchg
adc
inc
mov
mov
icebp
outsl
int3
sub
push
popf
adc
xlat
icebp
sbb
mov
aad
dec
in
jle
fdivrl
insl
jmp
inc
inc
loope
imul
loopne
mov
int
or
xchg
inc
sbb
in
xor
popf
add
xchg
sub
inc
iret
cmp
outsb
rcll
insl
in
or
mov
xchg
cmp
inc
cmp
fstl
jne
mov
in
inc
fdiv
into
nop
push
insl
dec
xchg
sbb
insl
mov
mov
jmp
pop
and
mov
pop
push
pop
pop
and
dec
clc
xchg
xor
mov
cmp
popa
mov
in
in
repz
scas
loope
repnz
fdivp
ficomps
mov
mov
int
dec
inc
outsb
jnp
icebp
cli
push
sti
scas
loope
dec
jp
inc
cmp
ds
inc
int3
lea
jne
mov
in
test
ret
inc
inc
xor
mov
jle
lods
mov
into
inc
shll
inc
cmpsb
push
dec
leave
fimull
popa
cmp
cltd
and
inc
cmp
rcll
aam
sub
fcomps
stos
aad
jb
enter
cltd
int
lock
jle
jl
dec
and
mov
test
cmc
insb
jp
shrb
mov
sub
hlt
int3
xchg
pushl
aam
stos
xchg
fdivp
cmp
sub
jno
imul
push
int3
adc
or
ljmp
aad
in
xchg
xchg
out
movsl
pop
movsb
fldcw
cltd
loopne
push
add
popa
mov
in
xor
test
movsl
popa
mov
dec
shrl
xchg
sbb
sbb
add
movsl
in
cwtl
push
xor
lcall
dec
in
xor
push
test
and
push
dec
sbb
shr
nop
jge
xor
jno
cmc
or
adc
in
rcl
icebp
cltd
fwait
leave
mov
in
mov
inc
ljmp
nop
and
aad
jle
sbb
cmp
mov
fxch
dec
je
and
aad
pop
icebp
imul
pop
sbb
lahf
mov
jbe
in
push
in
sub
jmp
mov
sub
fsts
mov
ljmp
push
sub
scas
mov
fsts
cmc
movsl
or
xor
adc
dec
sub
inc
sbb
xchg
sub
jb
and
popa
sub
mov
fsubr
aam
rol
add
insl
xor
loopne
gs
jle
fisttpll
aas
inc
adc
cmp
adc
into
cmp
fs
vpmaddwd
xor
sub
sbb
mov
fmul
mov
cmp
fdivrl
rclb
jno
addr16
jne
push
in
jl
xchg
cmp
mov
mov
leave
loope
out
push
xchg
push
pop
cmpsb
std
loop
aam
icebp
mov
je
lds
in
popf
lret
rcl
ljmp
lock
in
cmpsl
shr
pop
mov
push
inc
mov
lea
call
call
jne
leave
push
cmc
add
xor
push
fs
push
pop
adc
adc
enter
xor
inc
jl
mov
in
mov
cmp
mov
icebp
jle,pt
cmp
fucomp
mov
rclb
adc
movsl
leave
adc
call
lods
sbb
int3
mov
dec
in
icebp
push
pop
adc
cmpsb
lretw
adc
pop
fnsave
cmp
xchg
das
cs
push
lds
sub
test
popf
push
cli
jno
out
fsubrl
je
and
inc
ds
sbb
outsl
roll
fldenv
divl
shlb
dec
and
and
fstps
arpl
push
ffree
insl
pop
addr16
loope
lods
xor
shl
pop
dec
mov
pushf
rcl
adc
aam
xor
test
push
pop
fs
lock
xor
flds
or
aaa
and
push
sti
xor
xchg
mov
insl
cltd
loope
sar
xchg
movsl
into
push
mov
inc
xchg
leave
int
push
cmp
fmuls
aad
mov
loope
mov
sub
pushf
inc
sbb
fcmovnu
adc
dec
gs
test
loopne
and
pop
cltd
mov
xchg
enter
jle
and
pop
outsb
mov
rol
adc
mov
int3
mov
lahf
jle
adc
mov
mov
fmul
adc
int3
mov
enter
push
fdiv
pop
inc
adc
int3
push
sbb
popf
adc
dec
aam
in
adc
insl
xchg
fidivrs
into
addr16
stos
cmp
dec
fcom
dec
aam
lahf
push
daa
sti
dec
mov
add
movsb
ror
pop
lock
push
stos
mov
mov
push
adc
push
ja
popf
into
sbb
aad
cmp
or
jno
jne
pop
int3
cmpsb
push
xor
jmp
cmp
mov
sbb
mov
shl
frstor
mov
imul
lock
mov
mov
cmc
mov
fisttps
inc
sbb
cmp
ret
stos
push
leave
pop
dec
fstl
pop
adc
js
ja
jle
gs
in
dec
sarb
inc
mov
xchg
inc
call
in
pop
cmp
into
fisttpl
in
sbb
push
bound
jle
or
leave
aas
adc
and
mov
imul
jmp
mov
test
adc
rol
lea
jmp
aam
in
fmuls
fstpl
mov
fs
mov
sub
or
xor
ret
inc
lock
and
andb
in
loopne
or
les
out
movsl
ja
and
inc
rolb
pop
in
les
jl
adc
and
fiadds
pop
imul
clc
popf
dec
outsl
mov
cmc
leave
jmp
push
sbb
sbb
adc
out
das
into
push
mov
inc
dec
cmp
pop
xor
unpcklps
insl
push
cmc
sub
icebp
push
adc
adc
mov
je
ss
mov
ss
repnz
or
adc
int3
lret
xchg
jmp
mov
add
stos
sbb
add
inc
dec
mov
rcrl
popf
jno
daa
adc
rol
inc
dec
xor
insl
pop
insb
mov
mov
fstpl
mov
aad
dec
pop
sub
movsl
sbb
in
push
leave
movsb
sub
push
jno
call
pop
mov
and
xor
inc
jne
cltd
stos
jg
jmp
adc
pop
cmc
outsb
and
in
testl
jg
sahf
aad
cld
call
inc
int
movsl
pop
xchg
fcompl
dec
lock
adc
cltd
shl
out
dec
sbb
loopne
aam
and
mov
lds
dec
pop
inc
insl
mov
dec
cmpl
inc
jb
popf
popa
rorb
sbb
sub
sbb
push
adc
pop
lahf
sub
aas
lahf
add
insl
ror
in
icebp
movsl
shl
insl
fsubs
movsb
inc
xchg
sbb
in
and
xor
sub
mov
aad
insl
test
ret
cmp
imul
mov
mov
popf
divl
inc
cmp
xor
xor
push
mov
adc
arpl
hlt
rolb
and
add
gs
lds
loope
adc
xor
scas
sbb
or
sbb
pop
push
dec
push
insl
mov
popf
outsb
mov
in
lods
cltd
jne
mov
imul
in
aad
rclb
push
enter
jne
add
nop
sub
mov
dec
lds
loop
xchg
fidivrs
jle
popf
pop
jae
xchg
xchg
inc
scas
push
out
push
mov
xor
push
sbb
or
in
insl
mov
adc
mov
mov
in
push
or
mov
jecxz
sbb
mov
or
stos
jge
imul
popf
cmp
adc
cmc
and
aad
loopne
ljmp
inc
fsubl
lds
xor
out
fldcw
jmp
cltd
out
pop
mov
pop
pop
jno
cmc
divb
movsl
gs
inc
ja
sub
dec
xchg
insl
push
pop
add
sub
adc
adc
test
xchg
dec
jne
call
adc
aam
fcoms
mov
out
cmp
fs
in
fsubr
stos
and
mov
cltd
mov
test
push
inc
shr
xchg
insl
lods
sub
mov
lods
pop
stc
call
cmp
adc
int
in
scas
sbb
xor
xchg
lret
add
cmp
pushf
sub
in
xchg
jae
insl
push
xchg
sub
mov
mov
fcomps
mov
jmp
mov
popf
sub
mov
xchg
call
mov
cmp
sbb
aaa
sbb
inc
and
and
sbb
ficomps
rorl
adc
divl
stc
cmc
jecxz
jle
pushf
dec
iret
fstl
icebp
mov
xchg
int
cltd
movsb
mov
leave
popa
mov
dec
out
test
fsubl
repz
fstpt
loopne
or
int3
insl
mov
fisubrl
cmp
xor
adc
adc
fdivs
sub
pop
xor
adc
push
int3
int3
popf
mov
fsub
fldl
and
push
je
cmp
sub
icebp
enter
sub
xor
leave
int
fsubrl
scas
in
push
and
shr
sub
sub
cltd
push
xchg
dec
adc
in
mov
lods
popf
mov
adc
mov
sub
sbb
adc
inc
popa
pop
ror
pop
jae
xchg
push
cltd
fstpl
inc
jno
inc
in
xchg
lock
push
call
jmp
jne
leave
outsb
popf
jecxz
or
jecxz
mov
dec
add
loope
xchg
lods
mov
sbb
mov
sbb
inc
mov
daa
and
in
mov
sbb
xchg
loope
cmp
les
jb
inc
outsl
push
cltd
cmp
pushf
icebp
shrl
push
movsb
andb
xchg
ror
out
lahf
aam
in
jno
xor
push
loopne
fisubrl
push
lock
lret
or
xor
loope
pushf
cmp
ja
xor
lods
adc
mov
iret
lods
add
test
xchg
xchg
mov
mov
lret
fsts
cmp
cmp
sub
dec
and
mov
call
mov
loope
les
pop
inc
insl
mov
mov
mov
frstor
into
mov
fsubl
mov
dec
jp
mov
insl
aam
pushf
gs
les
mov
sub
pusha
enter
hlt
dec
lods
xor
inc
add
adc
and
stos
pop
nopl
leave
xorl
pop
inc
popf
lret
push
adc
lret
mov
loope
aam
gs
jno
popf
icebp
fnsave
aam
push
test
in
test
fnstcw
popa
pextrw
push
mov
pop
dec
cld
shl
lock
leave
and
inc
cmp
mov
cmp
enter
mov
loopne
jne
adc
setl
and
insl
loopne
sbb
shll
dec
pushf
pop
and
cld
gs
xchg
push
mov
pop
cld
xchg
jb
push
and
orb
int
push
in
lods
into
inc
outsb
outsb
add
popf
pop
jle
rorb
push
outsb
dec
mov
xchg
imul
pop
loopne
sbb
jle
aad
gs
push
inc
jnp
aad
cmp
out
push
movsl
lock
nop
cmp
push
cmp
rcrb
jb
leave
pushf
ds
test
sub
jne
mov
or
movsl
lods
lds
call
xchg
int3
roll
adc
scas
andb
enter
insl
fnstsw
les
mov
pop
xor
sub
les
mov
in
sub
mov
sbb
and
popa
fucom
or
rorl
cmpsl
int3
cltd
push
cmp
jmp
leave
fcmovne
jecxz
int3
pcmpeqw
mov
cmp
pop
cmc
jge
enter
push
inc
or
dec
loopne
enter
push
in
sub
mov
sub
mov
add
cltd
dec
stos
negl
int3
test
mov
popf
and
out
outsl
xor
mov
insl
lock
fstpl
popa
test
test
push
in
jo
dec
sbb
xchg
adc
int3
dec
in
or
and
pop
sub
push
insl
push
jmp
sbb
fstpl
dec
pushf
dec
jmp
ja
enter
lock
fcoms
scas
gs
pop
mov
sub
iret
cli
push
fprem1
sbb
inc
insl
out
loope
lods
sbb
ffree
in
int3
addr16
and
push
in
cmp
push
imul
inc
sub
inc
dec
fxam
xor
sbb
adc
movsl
add
leave
mov
lock
xchg
xor
enter
mov
sub
mov
inc
push
mov
and
mov
adc
out
test
xor
stos
notl
sub
xorb
aam
sub
mov
aad
shlb
push
icebp
gs
rcr
rorl
mov
dec
mov
sbb
fmul
and
mov
sbb
call
shrb
sahf
lahf
inc
scas
mov
push
mov
fxch
divb
bound
push
into
cld
jl
movsl
xor
inc
lods
inc
jae
mov
sub
mov
fadds
icebp
xchg
dec
sub
inc
push
adc
push
scas
mov
xchg
cmp
mov
push
xchg
dec
dec
xlat
lock
aas
push
xlat
shll
aam
loope
jne
in
enter
lods
fisubrs
push
sbb
jne
in
or
icebp
sbb
adc
shlb
inc
cmp
xor
in
cmp
xchg
inc
outsb
sbb
pop
adc
fidivrs
aaa
sbb
jae
mov
inc
sub
jg
rcl
dec
scas
sub
adc
mov
scas
in
sub
push
shl
inc
push
or
adc
imul
lret
push
and
sbb
dec
in
lods
sub
or
cmc
loope
push
sbb
sahf
popf
dec
stos
mov
aad
fwait
mov
sub
sbb
je
outsb
adc
test
in
nop
in
fwait
lea
nop
xchg
loopne
adc
jmp
xor
dec
call
inc
mov
rcll
movsl
clc
adc
in
rcll
sub
mov
mov
stos
ret
out
cmp
shrb
cltd
jb
aad
xchg
out
int
cmp
jno
popa
fsts
movsl
add
cmp
sub
leave
xor
and
in
dec
hlt
loopne
mov
fadds
rcr
aad
xor
dec
mov
or
lea
loope
pop
jle
enter
sub
loope
out
jno
loopne
insl
clc
cmp
sbb
cmp
dec
popa
pop
lds
mov
lahf
mov
fsubl
push
inc
and
dec
jns
test
lret
mov
sbb
lds
jle
pop
gs
dec
pop
notl
enter
push
adc
inc
cmp
sahf
fldcw
movsl
sub
nop
mov
or
in
leave
lea
stc
imul
add
insl
sbb
mov
adc
rcl
inc
dec
mov
lret
jecxz
fistpl
or
sub
jmp
dec
in
jecxz
pop
icebp
cmp
mov
push
fadd
dec
iret
popa
imul
gs
sbb
dec
imul
xor
push
test
fcomps
mov
aad
inc
add
aam
outsb
and
mov
shr
add
sub
gs
sub
insl
xchg
popf
testb
and
lahf
xor
push
jne
pop
mov
cltd
icebp
jne
out
lds
mov
sub
push
clc
hlt
insl
cmc
cmpsb
mov
cmc
inc
xchg
out
xchg
push
jmp
adc
lods
sub
xchg
pop
ss
inc
rcl
data16
xor
mov
sbb
lock
sub
xchg
les
dec
adc
and
mov
in
xchg
scas
xchg
xchg
es
and
inc
dec
imul
mov
scas
jl
pop
cmp
cmp
pop
add
fcompl
rcll
or
rorb
addr16
loope
sbb
mov
lock
adc
shr
mov
mov
insl
shlb
rcl
mov
test
mov
imul
inc
aam
xchg
sbb
mov
pop
jl
mov
pop
sbb
sbb
sub
fadd
adc
popf
mov
xchg
sbb
sbb
dec
fsub
ret
mov
insl
into
pop
mov
popa
enter
mov
cmp
mov
movsl
pop
rcl
repz
pop
adc
mov
fdiv
jno
xor
das
call
lcall
xchg
pop
in
adc
insl
jg
cmp
in
pop
xor
mov
cld
hlt
and
cmp
iret
sub
jbe
xor
jmp
popf
in
test
dec
mov
sub
movsl
rol
mov
pop
sub
xchg
mov
insl
rcrb
xor
xor
adc
pop
push
clc
mov
xchg
shlb
idivb
sub
add
popf
in
dec
movsb
sub
into
decb
aad
in
mov
sbb
cmc
loopne
rcl
adc
push
lea
insb
push
gs
mov
push
nop
inc
mov
es
sbb
movsl
push
dec
jl
cli
data16
and
and
pop
xchg
test
in
xchg
out
loope
movsl
popf
cltd
mov
pop
fdivrl
cmp
adc
add
xchg
pop
pcmpgtb
insl
aad
dec
cmc
add
test
movsl
sahf
rorl
xor
push
pmuludq
int
icebp
lods
loopne
xor
out
dec
shlb
cmc
inc
lods
test
shl
sbb
pop
insl
adc
dec
int3
cmp
mov
or
mov
adc
adc
mov
fxch
outsb
lahf
jecxz
in
mov
or
cmpsb
in
popf
or
xor
jecxz
dec
cmp
test
movsl
inc
mov
lods
cmc
lock
pop
out
xor
pop
sbb
hlt
mov
dec
callw
shl
fs
loopne
jo
test
jae
push
xchg
fs
xor
loope
mov
lods
mov
mov
lock
inc
in
loopne
ja
push
cmpsl
adc
call
popf
xor
addr16
inc
mov
leave
movsb
aam
pop
clc
cli
mov
in
push
mov
dec
inc
mov
jno
sub
xor
mov
imul
fcmove
push
lock
js
dec
jae
push
dec
add
inc
cmp
xchg
insl
xor
cmp
jns
adc
dec
mov
push
push
insl
jl
cmp
faddl
adc
loope
sbb
push
mov
pop
inc
icebp
lea
in
sub
push
xchg
mov
push
int
jmp
pop
fcmovu
mov
sub
xchg
pop
sbb
xor
lock
out
rorl
outsb
je
in
dec
bound
sbb
lds
and
push
pop
icebp
popf
ljmp
sbb
cltd
dec
adc
fnstsw
and
pop
cmc
pop
dec
clc
adc
popf
mov
movsl
xchg
ss
hlt
or
inc
adc
sub
inc
pop
loopne
fsubr
push
lods
adc
adc
jno
jle
insl
movsb
dec
inc
dec
pop
push
push
xchg
adcb
fcompl
jb
and
dec
ss
cmp
jmp
xor
lods
gs
sbb
shl
daa
adc
cltd
mov
addr16
subl
push
lock
insl
adc
xor
int
push
aam
mov
sub
call
cld
push
dec
les
mov
cmp
and
in
cmc
xchg
in
nop/reserved
in
rcll
jne
cmp
lds
movsl
push
cmp
mov
push
nop
in
mov
out
cmpsb
pop
and
popa
jl
mov
sub
fsubs
imul
jne
add
push
testl
jne
and
add
int
adc
lods
aad
mov
bound
stos
icebp
jmp
xchg
push
fcompl
test
aad
push
data16
ja
adcl
xor
lds
in
pop
ss
aad
paddsb
inc
ret
clc
inc
pop
xchg
movsl
icebp
jecxz
xchg
add
sub
mov
push
pop
and
push
hlt
adc
or
push
lods
pop
jne
iret
fsubr
ss
adc
inc
int
jmp
adc
xor
lods
into
shrb
out
icebp
lods
xchg
int
sbb
sbb
rcrl
jne
dec
popa
or
xlat
mov
in
push
push
sub
xchg
imul
lds
xchg
mov
icebp
int
and
mov
inc
adc
fmull
lds
lea
fwait
dec
pop
in
mov
mov
jne
aad
jle
mov
pop
rcr
andb
cltd
cmp
sub
dec
test
adc
icebp
shl
adc
sub
test
sub
outsb
sbb
jno
mov
call
outsb
inc
xorb
sub
cmp
int3
in
clc
mov
das
lock
pop
shrl
dec
mov
mov
pop
adc
push
vrsqrtps
jge
sub
lock
enter
adc
xor
cmpsb
fcomp
push
xchg
shlb
mov
loopne
pushf
flds
mov
sbb
fcomps
inc
sar
in
mov
sbb
jno
adc
rcll
popf
adc
loope
inc
mov
sub
dec
imul
and
fsts
int3
and
jmp
mov
pop
adc
loope
inc
jp,pn
push
mov
gs
mov
loope
cmp
lds
xchg
int
stc
icebp
shrb
pop
out
ljmp
dec
cli
sub
mov
les
jge
dec
jne
lret
dec
jl
xchg
jno
enter
insl
call
cmp
movsl
icebp
sub
sbb
mov
imul
cmp
mov
lods
push
dec
popf
imul
repnz
clc
pop
dec
test
xchg
dec
dec
and
mov
rep
cmpb
cwtl
loopne
imul
in
ss
lods
push
pop
sbb
pop
pop
push
fucomp
mov
pop
jle
leave
push
xor
inc
in
rcrb
mov
adc
push
xchg
data16
cmp
mov
rorl
roll
sbb
and
adc
in
dec
fstps
rcll
dec
jmp
mov
bound
nop
push
jno
pusha
sub
push
adc
dec
in
push
mov
into
push
outsb
jl
sub
dec
push
mov
popf
cmp
rol
cltd
and
aam
mov
pop
inc
push
or
mov
leave
dec
xchg
dec
mov
mov
xchg
inc
jne
xchg
sti
aas
daa
cmpsb
in
mov
and
cmc
sbb
call
push
lahf
lock
in
xor
scas
jmp
cmp
push
mov
xor
popa
adc
je
imul
lods
jne
test
mov
cld
and
cltd
popa
in
pop
stc
frstor
into
mov
and
xchg
mov
mov
out
movsl
dec
jns
scas
test
test
les
test
insl
sub
push
mov
cmp
and
sti
adc
inc
or
cmp
test
js
jle
icebp
mov
xor
call
fldenv
jno
mov
mov
in
dec
dec
aad
and
inc
fwait
imul
popa
push
lret
cmp
lea
sti
int
enter
jae
push
mov
pop
jmp
jne
call
aad
vpcomud
aam
xchg
push
push
in
rol
sbb
std
pop
push
mov
insl
pop
pushf
xlat
lods
push
into
mov
popf
call
xlat
test
pop
cmp
shr
nop
daa
inc
and
call
icebp
enter
sub
mov
movsb
in
xor
mov
in
nop
mov
insb
scas
pop
out
popa
push
xor
fsts
sbb
lods
int
cmc
in
adc
mov
xchg
sbb
int
sub
sub
jle
in
lds
mov
adc
adc
sbb
mov
inc
mov
cs
fstl
add
aam
pop
loope
out
bound
cltd
dec
push
cmp
mov
xor
push
insl
fbstp
loopne
nop
pop
jecxz
std
push
test
sbb
jmp
stos
imul
push
adc
fld1
or
mov
xchg
loopne
push
lock
add
mov
xor
dec
cli
push
into
imul
dec
sub
or
dec
fs
lock
xor
adc
cmpsb
pop
xor
insl
sbb
clc
popf
jmp
jle
pop
fmull
xor
cmc
mov
mov
cltd
mov
mov
lock
repnz
out
adc
in
test
cmp
mov
cmp
sbb
test
iret
or
sbb
mov
pop
sbb
push
adc
cmp
in
jo
nop
sub
and
and
fnstcw
sbb
insl
sub
xchg
sbb
loopne
test
add
inc
sbb
mov
mov
lds
enter
mov
mov
xchg
xchg
jmp
mov
xor
clc
xor
adc
call
mov
scas
and
or
lock
and
fsubrs
push
adc
push
jge
push
psubsb
mov
xor
int
mov
hlt
cmp
jne
sarb
lret
pop
inc
jno
xchg
loopne
popf
lds
mov
inc
jecxz
xchg
xchg
dec
sar
pop
fs
pop
out
cltd
and
ja
rcll
mov
fmuls
aad
lock
shrl
or
mov
in
dec
fdivs
jl
jno
sbbb
adc
xchg
adc
pop
push
and
ss
int3
or
or
pop
enter
inc
insl
push
gs
sahf
add
scas
xchg
loopne
add
ljmp
in
fsubs
pop
pop
dec
clc
adc
lods
lds
daa
fwait
add
test
scas
xchg
sbb
das
jno
push
push
add
sbb
test
jno
jmp
cmp
mov
nop
add
movsl
cmc
pop
ret
lods
mov
dec
pop
lods
loopne
stos
xchg
sub
mul
push
sub
jmp
push
cmc
add
in
out
popa
jmp
jle
mov
ss
sahf
pop
lods
fisttpll
mov
dec
outsb
lock
and
fstpt
loopne
cltd
mov
jmp
movsl
cmp
mov
lods
cld
movsb
jbe
shr
sahf
fstp
pop
fxch
test
popa
dec
xorl
dec
lock
inc
cmpsb
or
rol
popf
fmul
mov
xchg
sub
fs
pop
fdivl
xchg
cltd
aad
mov
lock
mov
lcall
out
popf
fmulp
addr16
pop
fsubr
push
sub
call
sti
or
jne
in
dec
pop
pop
mov
push
test
jns
dec
jnp
dec
test
or
or
call
mov
pop
mov
xchg
test
adc
jne
cmp
movsb
add
loope
xchg
mov
rcrl
leave
cs
inc
mov
add
pop
add
cmp
dec
push
sub
cwtl
fnsave
dec
add
sub
loope
push
jle
enter
inc
and
pop
sub
jg
aad
bound
sbbl
lahf
btr
xchg
mov
fbstp
add
fstps
rcrl
sbb
int
lret
test
and
adc
int3
pop
pop
pop
xchg
inc
adc
out
sub
call
test
fdiv
cmp
lds
aam
rorl
and
push
in
movsb
call
mov
lahf
jmp
and
adc
lea
dec
sub
sbb
sub
sar
test
jmp
cmp
pop
adc
sub
pop
push
inc
pop
aam
jmp
jmp
in
jmp
imul
pop
lss
popa
jle
dec
dec
jmp
test
cmp
inc
xchg
xor
xor
leave
loope
cli
and
les
mov
xor
pop
and
rorl
xor
adc
aas
sbb
into
lds
sarb
cmp
aad
jne
jle
icebp
mov
aad
inc
cmpsl
sbb
cmp
mov
and
add
fsubr
in
xor
sbb
imul
xchg
movsl
out
cmp
gs
jge
mov
push
pop
popf
icebp
std
in
mov
movsl
dec
add
popa
insl
sub
cmp
xchg
int
loopne
add
popf
loope
push
dec
call
cmp
aad
nopl
in
enter
adc
fstl
leave
out
dec
mov
mov
and
les
stos
inc
aam
xor
sub
ss
in
ljmp
push
fwait
lds
mov
jne
aam
jg
mov
test
cltd
xor
mov
mov
lds
in
insb
sub
mov
imul
orl
mov
icebp
jmp
pop
mov
ss
fwait
inc
push
inc
mov
ret
push
popf
aad
lds
icebp
in
cmp
sbb
loope
mov
dec
test
adc
in
lds
jg
call
jmp
mov
cmp
jmp
test
adcb
mov
subb
iret
pop
icebp
lds
in
lods
adc
xchg
cltd
fnstcw
sbb
fucom
sub
rcrl
out
sbb
mov
lods
call
cmp
xchg
or
sbb
loope
int3
int3
or
mov
cmp
dec
xor
inc
mov
fdivrs
pop
in
dec
mov
xor
sub
mov
gs
pusha
pop
and
sbb
pop
push
and
fnsave
enter
std
lea
enter
sub
push
out
sbb
movsl
call
pop
outsl
call
pop
jecxz
mov
in
mov
inc
imul
rcl
cmpxchg
fstps
jmp
insb
jne
test
insb
mov
fld
mov
mov
sub
dec
iret
adc
in
incb
pop
sub
aaa
iret
dec
lahf
jmp
push
push
dec
cmp
stos
dec
enter
lds
in
int3
gs
in
das
pop
test
sbb
icebp
movsl
xchg
xchg
and
jle
leave
in
xchg
sbb
vsqrtpd
pushf
lock
testb
in
rcr
inc
ja
jno
js,pn
sub
push
cmp
jne
sbb
scas
fucom
adc
xchg
mov
in
jo
jge
loopne
mov
dec
jle
popf
outsb
xor
sbb
loope
ds
jns
add
fdivl
int
xor
aaa
aad
sbb
pop
adc
jne
adc
daa
in
aam
ds
add
cmp
faddl
and
xor
jne
fldpi
andb
fsubr
scas
gs
popf
add
mov
insl
cltd
in
jne
dec
sub
mov
std
adcb
mov
cmpsl
xchg
fdivrl
xchg
popf
leave
push
jge
mov
fistpll
sbb
jle
mov
movsb
call
mov
pop
push
adcl
push
and
adc
inc
mov
xor
popa
aam
sbb
cmp
mov
mov
adc
push
popa
lock
fisttpl
popa
rorl
sub
lods
xchg
int
adc
pop
jg
inc
loope
lds
sub
shlb
xchg
fs
pop
cmp
fldenv
push
out
dec
mov
push
cmp
and
lds
loope
in
push
in
in
jle
popf
out
insb
sub
sub
insl
xchg
mov
and
jl
and
rcrb
pop
lods
mov
scas
lcall
movsb
nop
add
mov
mov
bound
std
imul
xlat
in
xchg
push
in
adc
ret
popf
shll
add
mov
call
mov
lock
fmul
adc
in
mov
int3
popf
sbb
pop
clc
pushf
enter
fisubs
mov
into
xorps
jg
sbb
sbb
jbe
or
imul
sbb
imul
xchg
je
filds
fldl
add
mov
imul
xor
std
sub
call
xor
xor
jmp
outsl
lock
sbb
jno
mov
stos
in
aaa
bound
sub
cmpsl
int
fldl
lods
sub
add
popa
lds
negl
sbb
add
or
sub
jle
cmc
cmp
add
dec
insl
mov
insl
or
dec
add
sbb
mov
adcl
xchg
ds
mov
lds
cmp
mov
fidivs
jge
cmp
lock
mov
inc
adc
xor
sub
xlat
mov
inc
icebp
mov
add
movsl
jne
pushf
xchg
sub
push
xor
inc
clc
sub
sbb
movsl
mov
sub
mov
mov
test
movsl
pop
nop
shrb
adc
test
movsb
lock
or
movsb
adc
xchg
in
fmull
xor
cmp
adc
add
push
in
xor
jecxz
mov
mov
mov
cmp
and
pop
scas
lods
sahf
mov
adc
xor
push
jno
or
mov
sub
cmp
out
frstor
dec
sub
mov
sub
enter
loopne
jbe
adc
rol
rclb
inc
out
mov
repz
jecxz
push
call
inc
shrl
sbb
add
push
inc
xchg
xor
lahf
and
sbb
pop
mov
xor
xor
push
leave
xor
xchg
mov
push
dec
adc
lock
dec
rcrb
enter
jge
xor
and
outsl
sbb
in
push
mov
arpl
pop
mov
xchg
icebp
movsl
in
sbb
dec
test
jne
sarl
jmp
ret
es
repnz
imul
mov
sub
scas
sub
mov
rorl
xchg
shl
push
out
sub
out
cmp
imul
sub
loope
push
push
int
test
popf
inc
adc
mov
outsb
mov
cmp
push
dec
enter
xor
fxch
daa
adc
adc
jl
stos
adc
shl
enter
sub
sbb
add
insl
mov
rol
sub
imul
mov
xor
icebp
sbb
gs
add
xchg
stc
movsb
and
push
mov
int
pop
fucom
cmp
rcrb
std
outsb
cmp
dec
int
or
mov
cmp
push
imul
lds
lock
repz
jno
mov
sub
in
xchg
and
cmp
insl
jle
sub
cmp
cmc
mov
aad
lods
xchg
mov
leave
test
shll
push
hlt
test
add
dec
dec
repz
cmc
jbe
les
mov
fnsave
xchg
in
rcrl
push
scas
cmp
out
xor
mov
sub
sbb
xchg
mov
arpl
xchg
ret
sub
pop
dec
leave
xor
jno
sbb
std
inc
mov
add
dec
lods
mov
push
pop
lds
mov
in
mov
or
sub
and
cmp
mov
rep
push
adc
leave
push
dec
mov
popf
mov
and
outsb
inc
dec
adc
push
iret
mov
test
cmp
pop
mov
mov
xlat
movsl
cmc
and
add
popf
test
push
jmp
push
jle
inc
lds
add
in
sub
and
dec
sti
jmp
inc
xchg
pop
imul
cmc
jmp
daa
inc
fmull
dec
dec
cmp
xor
test
lret
popa
inc
sub
in
sbb
sbb
gs
movsb
cmp
test
in
xchg
mov
adc
sbb
movsl
test
test
test
cmpsl
mov
lods
in
icebp
xor
cmp
adc
popa
and
out
shr
jle
aam
mov
xchg
pop
lcall
xorb
sbb
dec
sbb
aas
aad
loope
xchg
icebp
into
xchg
sub
rclb
movsb
sbb
add
imul
call
jo
in
mov
mov
jmp
dec
es
inc
jl
pop
sub
shll
test
cmp
push
adc
mov
dec
or
push
mov
mov
in
xchg
mov
sub
pop
xchg
fwait
clc
pop
in
icebp
and
dec
call
outsb
cs
out
dec
int
xor
pop
sub
js
ftst
movsb
push
mov
enter
jne
mov
xchg
notb
pop
sarb
mov
pop
in
sub
jne
jmp
sbb
popa
push
jo
cltd
jne
cmc
xchg
jmp
fsub
jne
js
aad
lock
add
mov
fsubr
mov
repz
sbb
xor
cmp
jle
out
cltd
ret
nop
lods
xchg
push
lea
sub
test
mov
mov
and
loope
lahf
rcrl
out
in
call
add
sub
push
les
jmp
cs
out
and
sub
pop
dec
cmc
mov
xchg
xor
movsl
adc
mov
in
xchg
dec
mov
mov
mov
sti
lock
jb
xchg
jle
in
jno
push
aad
push
xor
jnp
int
addr16
cmp
or
inc
xor
test
loope
int
mov
je
aam
xor
cmp
xor
adc
sbb
mov
fiadds
cmp
enter
mov
sbb
mov
insb
int3
in
daa
mov
insl
xor
test
femms
cmc
xor
jecxz
ja
adc
adc
adc
leave
loope
shlb
loop
inc
sti
into
iret
pop
jne
test
gs
xchg
fmull
sbb
fndisi(8087
mov
push
movsl
adc
sub
rcr
repnz
mov
mov
lods
adc
rcll
adc
xchg
pop
lods
jae
out
push
and
push
daa
adc
sub
pop
enter
mov
lea
insl
flds
cmc
jmp
cli
and
pop
xchg
incl
lea
aas
push
fnstcw
in
jle
xchg
imul
gs
adc
in
call
inc
cmp
outsb
outsb
or
ljmp
in
aam
adc
mov
or
mov
sbb
mov
sbb
lods
adc
jmp
inc
loope
bnd
int3
pop
sarl
jne
sbb
cmpsb
push
sub
adc
std
imul
mov
push
ds
jmp
sub
int
fsubrl
adc
rcl
cmp
xor
mov
ffree
jne
imul
mov
outsb
outsb
fwait
jg
in
popf
enter
xchg
push
in
aam
xor
mov
ror
jle
out
int3
cmp
mov
in
shr
mov
cli
adc
fbstp
pushl
fdivr
fld
dec
jmp
inc
lock
lea
adc
in
dec
pop
lods
and
cltd
sbb
sbb
pop
push
popf
in
push
out
call
sub
jmp
aam
jno
mov
fsub
adc
sub
shlb
mov
pop
cmp
cltd
xchg
lret
das
inc
insl
sub
sbb
and
pop
nop
inc
int3
mov
jge
xor
mov
xlat
sbb
mov
sub
pop
cltd
pop
inc
pop
cmp
imul
out
pop
ret
lgdtl
cmpsl
scas
dec
sbb
insl
dec
jmp
outsl
lea
in
dec
out
in
ret
icebp
sub
andb
out
clc
adc
push
fisttpll
adc
nop
jb
out
push
cmp
and
fsubl
loopne
in
in
ret
and
push
sub
fisttpll
mov
jne
lods
dec
in
loope
shr
lahf
aam
xlat
inc
dec
mov
pop
dec
lds
xlat
cmp
xchg
fisubl
pop
cmc
arpl
roll
adc
sub
push
lods
add
scas
xchg
fsubrl
push
loopne
sub
repnz
and
cmp
shlb
mov
and
insl
in
aad
or
xor
loopne
gs
enter
dec
imul
inc
loope
mov
enter
call
icebp
inc
push
out
jno
int
sub
ss
adc
or
mov
loopne
mov
movsl
sub
inc
xchg
mov
mov
rcrl
mov
inc
icebp
xchg
popf
sbb
fucomp
xor
xlat
f2xm1
aad
in
xlat
inc
les
mov
cmp
and
imul
xor
lds
sysexit
in
movsl
mov
andl
in
das
out
dec
rcll
lock
fidivrs
mov
xor
sbb
jmp
bound
cmp
in
mull
dec
xor
movsb
mov
fnstenv
mov
xchg
popf
jmp
les
adc
fcmovnb
pop
inc
lcall
mov
ffree
mov
sub
gs
lea
aad
shrb
push
icebp
int3
cli
loopne
sbb
sub
lock
pop
nop
sub
call
in
add
out
jle
in
imull
into
mov
add
mov
jmp
xchg
lahf
lods
adc
stc
int
out
sbb
or
xorps
aad
into
mov
fmulp
leave
jmp
cmp
push
iret
out
cmp
adc
xchg
ror
insl
cmp
pop
call
testb
out
imul
pushf
sbb
sub
sub
cmc
test
xor
leave
xchg
icebp
sbb
or
mov
adc
popa
inc
xchg
sbb
cli
icebp
mov
mov
cltd
call
stos
scas
in
loopne
push
cltd
adc
data16
inc
pop
frstor
mov
and
out
in
jmp
lea
xor
fmul
ss
xchg
stc
rorl
mov
es
or
push
flds
sbb
jmp
shrl
lea
ror
test
gs
int3
gs
fxch
mov
jne
hlt
mov
out
jg
in
in
pushf
loope
into
sub
xor
cmc
int
sub
jmp
fcoml
iret
aas
push
fwait
insl
enter
cmp
popa
and
mov
rcrl
adc
stos
popa
loope
scas
push
add
fwait
sub
int3
mov
jmp
rcrl
xchg
and
pop
push
dec
insl
shr
cmp
imul
mov
and
imull
sarb
js
test
adc
push
imul
fldl
insl
push
cmpsb
enter
jne
addb
and
sub
jp
mov
jmp
inc
insl
sub
fcomps
popf
sub
inc
add
sarb
pop
insl
lea
aad
pushf
lock
or
or
or
push
shl
add
sbb
repz
mov
shlb
sbb
add
cmp
sub
pop
out
sahf
mov
inc
cmp
lahf
sbb
shlb
sti
xor
bound
jp
outsl
jmp
jle
sub
data16
xor
cmp
fcompl
lea
lock
xor
loope
cmpsb
leave
ret
or
mov
mov
jno
lock
xor
add
imul
inc
icebp
loope
jne
pop
adc
sbb
negl
cs
int
mov
out
or
push
dec
ds
sarl
call
xor
adcb
adc
pop
mov
mov
push
bound
adc
and
pop
and
movsl
fdivrs
in
xor
adc
lods
loopne
mov
cmp
mov
adc
sbb
inc
jne
xchg
orb
mov
cmp
sbb
mov
sub
in
divb
dec
into
gs
push
dec
ljmp
or
repz
xchg
popa
shl
add
gs
loope
out
xchg
jge
inc
std
jge
and
add
cmp
call
jne
push
lea
int
in
adc
mov
sub
in
call
aad
mov
push
lea
cmp
xchg
mov
negl
call
sbb
mov
push
dec
xchg
jno
mov
adc
aaa
int3
adc
add
dec
addr16
icebp
fldcw
xchg
in
popa
cmp
sbb
xchg
sub
sbb
lods
cld
aaa
push
int
les
and
sub
add
mov
add
fsubr
xchg
sbb
test
inc
test
sbb
xchg
movsl
jecxz
push
sub
loope
mov
test
sbb
add
adc
xchg
xor
mov
xchg
in
lock
shlb
in
lods
mov
loope
dec
xor
lock
int
insl
adc
aad
cmp
loopne
adc
enter
fnstenv
fdivrs
cmp
xor
lea
gs
and
pusha
shr
mov
adc
pop
dec
fcomps
jecxz
movsl
leave
fabs
push
outsb
mov
into
mov
int
mov
cmp
pop
xchg
int3
in
xchg
cld
xchg
xor
in
leave
pop
inc
mov
and
lods
cmpb
negl
enter
and
cmc
xchg
pop
pop
insl
adc
sbb
fwait
add
fs
loope
mov
fs
add
gs
inc
movsl
mov
cmc
icebp
pop
pop
and
ds
scas
jmp
push
pop
xchg
dec
subb
adc
fwait
dec
je
jge
movsl
adc
mov
dec
cltd
or
call
out
lea
sti
add
fsubr
xor
inc
icebp
adc
outsb
lds
hlt
cmc
dec
flds
gs
sbb
loope
jmp
and
in
and
xchg
imul
iret
push
pop
int
fnstenv
mov
iret
inc
jno
in
mov
iret
sbb
int
fsubr
movsl
lods
aam
sub
sbb
shl
enter
and
sbb
movsb
jmp
rcrb
xor
outsb
inc
sub
pushf
adc
repz
lea
push
add
jl
iret
loopne
sbb
inc
insl
fists
add
rcl
loope
test
shrl
enter
fld
fidivs
and
and
xor
fnstcw
in
stos
leave
push
jmp
into
cmpsl
xchg
cltd
jmp
test
int3
out
push
sub
fcomps
in
push
imul
mov
mov
dec
push
xchg
add
and
cmp
lds
inc
cld
gs
call
xchg
test
fsubs
les
stos
xchg
out
pop
lds
rorb
lahf
lods
sbb
loope
leave
sub
cmp
and
enter
ffree
adc
jo
rorb
lcall
aad
jmp
inc
inc
pop
pop
inc
sbb
and
push
test
in
fldenv
fsubrs
in
sbb
pop
adc
sub
sbb
mov
lcall
movsl
xchg
push
shlb
imul
mov
xchg
fists
movsl
nop
mov
std
imul
sbb
mov
insl
jno
iret
js
pushf
inc
dec
repnz
leave
sub
movsl
call
fdivrs
shlb
call
pop
cmc
fcoml
mov
nop
clc
xchg
push
fldl
cmp
sbb
dec
test
shlb
lret
sbb
dec
jmp
xor
push
enter
jno
jnp
bound
xchg
cmp
aam
adc
xor
loop
mov
xchg
filds
test
push
int3
popf
cmc
les
arpl
dec
and
mov
sub
cmc
push
fnstenv
aam
inc
fnsave
mov
dec
jno
xchg
inc
jno
scas
xor
xor
fadds
int3
adc
cmp
mov
mov
ror
push
int3
out
nop
sbb
lds
adc
dec
ror
mov
shl
icebp
adc
cltd
push
and
sbb
loopne
sbb
ret
push
mov
xor
lcall
call
xchg
inc
lock
aam
jnp
jne
nop
mov
cmp
sbb
loope
mov
lock
sub
mov
clc
mov
call
gs
insl
push
rorl
leave
mov
call
cli
sub
cmp
mov
in
in
jb
sbb
dec
rol
les
mov
adc
mov
sub
push
shrb
cltd
aam
lock
mov
dec
loope
xchg
fistpl
stos
fcmovb
xlat
fstl
mov
int3
in
call
shrl
push
fs
scas
mov
int3
shrb
insl
xchg
jo
sbb
shr
rcl
lret
in
mov
xor
push
mov
outsb
movsl
add
cmp
movsb
sbb
xor
jno
movsl
int
fsts
in
les
cmp
and
sub
jle
shrl
push
fcmovnb
in
outsb
fs
push
cmp
jge
sub
dec
lods
lods
int
pop
adc
js
jecxz
loopne
int
int3
xchg
and
mov
movsb
mov
leave
jne
mov
flds
cmp
cmc
cmpsl
cmp
push
jne
adc
enter
xchg
dec
mov
cwtl
push
in
insl
nop
movsl
or
jns
xchg
ret
in
int
sub
cltd
sahf
mov
cmp
sbb
imul
sbbl
mov
pop
and
adc
jecxz
lock
lret
sub
fldenv
mov
fbld
and
and
mov
leave
push
xchg
xchg
or
int
icebp
mov
cli
jl
fldcw
test
push
rcll
les
jg
mov
sbb
jne
dec
icebp
popa
xor
add
pop
and
xchg
loope
fmuls
popf
mov
movsl
mov
and
in
xor
xor
pop
iret
jns
shll
mov
loope
or
sub
mov
sub
in
xchg
pop
nop
out
int3
imul
in
mov
test
xor
outsl
test
jecxz
mov
in
rol
xlat
adc
sub
and
in
pushf
cmp
fnstsw
add
test
loopne
mov
popa
push
adc
mov
mov
out
mulps
jmp
cmp
in
push
movsb
fsubl
adc
popf
leave
xor
out
jne
adc
cmc
call
push
inc
pop
enter
and
cmc
clc
mov
or
jmp
mov
orl
pushf
popf
into
fisttpll
push
pop
and
icebp
imul
fisubrs
and
call
shrl
aad
cwtl
or
mov
adc
push
push
sub
xor
push
push
lea
loope
cmp
xchg
sub
dec
nop
hlt
addr16
add
les
mov
xchg
cltd
inc
dec
cmp
imul
sub
int
popa
in
xchg
mov
pop
cltd
xchg
insl
insb
dec
inc
shl
pop
xchg
cmp
push
cmp
mov
pop
xchg
mull
nop
cli
dec
in
add
jle
pushf
cmc
sbb
push
cmp
sbb
lods
mov
pop
push
push
adc
das
lds
mov
sub
shl
addr16
pop
push
mov
sti
sub
gs
ror
loopne
jmp
in
and
xchg
iret
pop
addb
pop
movlps
icebp
inc
int3
xchg
fcompl
cmp
pcmpeqw
adc
in
push
xchg
lds
mov
inc
dec
sub
sub
push
push
aad
jecxz
lods
mov
pop
out
out
test
fmul
pushf
xorb
leave
clc
sub
lds
mov
xchg
cld
imul
into
pop
push
jne
mov
fwait
cmp
pop
add
adc
imul
push
xchg
jb
test
xor
int3
push
dec
push
in
xchg
outsb
jmp
sbb
mov
into
mov
fadds
aam
mov
mov
jmp
xor
and
cmc
xor
lahf
int3
fcompl
xor
inc
sub
sti
icebp
xchg
sbb
inc
and
inc
cmp
fcoml
imul
pop
lods
lods
dec
jl
mov
gs
aad
fldenv
mov
pushf
cmp
cli
add
mov
sub
dec
popf
dec
in
rcrl
test
xor
lods
lods
fpatan
outsb
aad
mov
jno
fsubrl
mov
push
cmc
andb
or
jge
cmp
pushf
mov
mov
lods
imul
test
jno
sub
push
and
sbb
lods
xor
out
fmul
jae
rcr
cmp
fstl
popa
fs
mov
movsl
adc
movsl
pop
inc
hlt
mov
in
adc
outsb
mov
cmp
dec
jp
pop
popa
or
sub
lock
push
and
in
adc
dec
mov
dec
sub
loope
pop
test
mov
mov
into
mov
outsb
mov
lahf
rclb
into
sbb
or
mov
mov
add
mov
fs
rclb
jne
xor
sub
and
inc
or
and
fdivl
in
lods
add
sbb
inc
idiv
xchg
call
dec
js
addb
cmc
sub
movsl
gs
shlb
movsl
push
into
adc
in
or
cli
sbb
cmp
adc
call
mov
insl
mov
sarl
in
imul
into
clc
sbb
sbb
mov
shlb
enter
mov
mov
jno
or
add
fmull
mov
aad
sub
iret
call
mov
sbb
enter
out
outsl
xor
push
xor
cmp
in
pushf
shl
sbb
in
xor
adc
int
sarb
mov
xchg
inc
push
mov
xor
daa
aad
in
jle
leave
insl
sbb
insl
aam
cmc
sbb
jne
push
lds
adc
sbb
in
int
in
jge
fdivrp
adc
popa
fmul
dec
cmp
insl
or
gs
mov
sbb
fcoms
push
insl
pop
in
int3
mov
gs
loopne
jnp
loop
es
in
xchg
sub
sub
fsts
xchg
push
mov
pusha
and
mov
in
es
xchg
out
sbb
and
mov
fcoml
aam
cltd
dec
dec
enter
xlat
sbb
and
sbb
inc
scas
in
frstor
movsb
and
shll
sub
sbb
xlat
out
xor
dec
gs
mov
enter
call
clc
lods
aad
dec
sub
lock
mov
pop
and
mov
cmp
mov
int
push
adc
pop
adc
fstl
aad
ror
out
ja
mov
fsqrt
insl
stos
sarb
xor
jge
scas
or
stc
cld
setl
cld
fsubrs
push
int
lods
lods
cltd
xchg
xlat
cmp
in
and
add
or
adc
aam
inc
inc
in
out
lock
xchg
xchg
sbb
ds
push
nop
add
imul
mov
aas
rcll
cltd
fnsave
test
fisttpll
jle
add
cmp
out
daa
dec
and
mov
xor
in
mov
adc
add
pushf
movsl
xchg
push
inc
popa
call
pop
fstpt
or
jle
shl
jne
into
out
inc
leave
ss
sbb
sub
inc
adc
xchg
lea
adc
shl
popf
mov
cmp
int
and
xchg
test
sub
or
out
movsb
jl,pn
inc
dec
sbb
mov
fs
inc
rcll
fsubr
fmul
lea
loope
imul
inc
or
adc
fnstenv
jae
inc
or
cld
jge
add
enter
sub
mov
mov
cmp
jl
sbb
mov
popf
loope
and
in
movsl
push
imul
xor
fsubrs
mov
inc
jmp
pop
aad
in
lea
jno
xor
inc
lds
xor
lock
shll
cmp
ljmp
cmc
ret
mov
fists
push
fldenv
pop
mov
push
adc
enter
cmc
fcmovnbe
loopne
push
jp
xchg
inc
and
sbb
jle
call
fwait
icebp
lock
fisttpll
pop
cmc
inc
insl
mov
push
dec
loope
cmpl
call
popa
xor
cltd
jmp
sub
cli
insl
in
in
out
repnz
inc
xor
leave
dec
cmp
loopne
and
push
outsb
adc
call
mov
shlb
mov
shr
sub
or
lods
aad
push
push
mov
insl
out
mov
notl
dec
sarb
jge
iret
cld
sub
sbb
cmp
mov
je
cmp
cmp
shrb
jge
stos
or
in
movsb
mov
xor
xor
adc
push
sbb
mov
insl
dec
xchg
and
int
xchg
mov
adc
or
ror
out
cmc
icebp
loop
mov
fcompl
add
sbb
and
stc
in
movsl
outsb
cmc
mov
hlt
in
movsb
jne
pop
lds
insl
btr
inc
adc
test
jge
and
data16
xchg
addr16
out
sbb
mov
pop
and
mov
inc
mov
mov
mov
push
lock
lds
xchg
xor
jl
lds
push
push
xchg
cmp
in
jmp
or
xchg
scas
xchg
mov
xlat
fmull
or
insl
popf
push
sbbb
lds
imulb
rolb
loop
sbb
push
test
pop
lock
or
hlt
aad
enter
jb
imul
xchg
gs
fldt
test
xor
dec
jno
aad
sbb
cmc
and
xor
sub
jne
rcl
in
dec
gs
push
jge
push
cli
shrl
in
loopne
sub
lahf
sub
cltd
out
push
add
adc
inc
test
movsl
or
adc
in
nop
insl
mov
sub
dec
dec
push
xor
test
int
icebp
cmp
jmp
adc
in
mov
dec
in
clc
jmp
imul
sbb
loopne
mov
xor
icebp
dec
rcrb
rorl
pop
pop
in
xor
cmc
arpl
rcll
ljmpw
fsubrl
or
cltd
and
push
adc
leave
icebp
lea
inc
movsl
mov
pushf
int
into
out
popf
insl
insl
mov
push
adc
sbb
imul
jmp
daa
fcom
lds
movsl
rcrl
int3
pop
in
dec
mov
out
lds
sub
ds
adc
xchg
shrl
popf
lock
enter
subb
jne
adc
aad
and
mov
aam
and
popa
xchg
mov
in
cmp
cmp
and
popa
scas
fidivrs
in
int
push
cld
sub
mov
lret
mov
xor
adc
jle
xchg
cmc
fsubr
dec
aad
pop
mov
lahf
in
mov
mov
lock
jl
jg
dec
popf
xchg
gs
pop
mov
jns
mov
add
xchg
push
in
rcrl
fcom
aaa
fisttpll
xorb
or
cmp
lods
xchg
mov
lods
dec
xchg
dec
or
lret
mov
lret
fildll
adc
cltd
adc
icebp
test
mov
out
pop
cmp
call
outsb
popa
pushf
mov
push
xchg
mov
dec
loopne
xchg
inc
adc
movsb
icebp
and
cmpsl
lds
cmp
cmc
push
aam
xor
insl
xor
fisttpll
xchg
in
in
fwait
rcrl
dec
gs
cmc
bound
jl
loop
dec
mov
adc
loope
fsubrs
pusha
xor
dec
ds
xor
in
fucomp
inc
and
in
scas
mov
add
fs
jmp
popf
inc
xchg
test
push
lods
test
and
push
in
adc
jne
xchg
leave
in
pop
fstpl
movsl
mov
mov
imul
insl
icebp
sahf
sbb
cmp
mov
adc
add
mov
inc
xchg
sbb
insl
sbb
loope
out
push
adc
and
lods
movsl
pushf
sarl
push
mov
hlt
in
sbb
and
enter
out
in
push
loope
xchg
xchg
paddsw
xor
push
push
gs
rcrb
mov
sub
sbbl
sbb
insl
shlb
popa
sbb
aad
xor
pop
mov
inc
insl
mov
inc
aam
dec
xchg
adc
mov
in
sub
push
pop
lods
adc
mov
sbb
adc
leave
mov
sub
jbe
pop
pushf
xchg
mov
popf
int3
je
iret
and
pop
cmp
cltd
das
mov
in
sahf
enter
aas
rcll
movsl
aad
inc
sti
xor
arpl
test
insl
rcll
enter
movsl
data16
mov
lret
leave
aam
add
push
mov
mov
inc
inc
sub
gs
sbb
xor
je
push
push
mov
insl
iret
sbb
popf
lret
fsubrs
jb
sbb
inc
popa
cld
inc
and
in
add
dec
and
out
mov
sete
fucomp
fs
xchg
inc
add
repnz
test
insl
or
cmp
adc
cmp
cmp
leave
loope
sbb
inc
sbb
jmp
int3
push
mov
aam
leave
mov
dec
adc
inc
add
mov
gs
fdivrs
sub
shrl
push
xor
aad
call
lods
xor
cmpsl
xor
and
jbe
cltd
std
dec
sub
fmuls
mull
loopne
dec
out
ja
insb
lahf
popa
stc
push
dec
decl
scas
leave
shll
popa
add
push
in
out
fsubl
xor
cmp
nop
stc
sti
orb
in
enter
in
pop
mov
jnp
scas
popa
aaa
outsb
loopne
xchg
test
mov
sbb
pop
andb
pop
test
adc
jno
mov
pop
pushf
adc
sbb
sbb
repz
scas
xchg
and
rcll
bound
out
jno
pop
scas
popa
adc
jne
lods
jmp
fadd
jmp
in
cmp
movsl
dec
mov
mov
xor
cltd
in
xchg
movsl
jle
test
gs
shrl
xchg
push
insb
bound
push
shr
adc
inc
jmp
in
pop
fisttpll
das
enter
fistl
lds
icebp
cmc
call
xchg
pop
loopne
test
test
mov
jmp
sub
cmp
int
gs
in
xchg
in
in
jge
adc
vpsrlw
imul
cmp
sub
push
std
lods
sub
mov
push
fdiv
inc
xor
shlb
out
cmp
adc
popf
dec
mov
popa
inc
insl
inc
in
aad
in
aam
icebp
xchg
inc
xchg
fnsave
push
popf
test
sarl
sub
fcmovbe
adc
lock
movsl
imul
jno
bound
mov
xor
adc
sbb
rclb
fdiv
int
hlt
test
sbbb
outsl
inc
jge
jge
push
nop
sbb
mov
mov
xor
das
rcll
sbb
lret
adcl
jne
daa
push
pop
insb
in
leave
movsl
inc
lock
dec
mov
cltd
fucomi
bound
int3
or
fisubrl
loope
test
jmp
dec
or
mov
sbb
push
daa
icebp
inc
inc
and
jo
add
cmp
and
stc
cltd
sub
cmp
popa
push
and
adc
inc
xchg
addr16
lock
dec
in
push
mov
in
mov
shl
jne
xchg
in
cmc
mov
hlt
pop
cmc
adc
popf
aam
aaa
sub
dec
xor
adc
ror
jmp
arpl
std
dec
xor
jmp
xor
loopne
hlt
cltd
das
hlt
pop
push
and
cli
adc
into
icebp
mov
xor
xchg
mov
flds
mov
cmp
fldl
push
xor
pop
and
sub
sbb
dec
xor
push
adc
inc
int3
out
mov
aad
shll
adc
sub
clc
iret
les
xchg
rcll
movsl
xchg
or
leave
mov
mov
sbb
test
mov
outsl
aam
xor
scas
cmpsl
xchg
dec
xchg
dec
or
cmc
sub
jne
adc
mov
push
lock
mov
aad
bound
xchg
dec
dec
popf
imul
adc
test
and
and
cltd
mov
pop
inc
int3
mov
lock
dec
enter
in
dec
aad
cmp
lds
int3
shl
in
xchg
ja
pop
xor
in
fimuls
bound
mov
push
fs
and
xchg
mov
sub
dec
std
in
aas
mov
lret
or
imul
lds
add
outsl
dec
sub
into
mov
in
ljmp
out
imul
mov
fwait
shll
mov
loope
into
xor
add
dec
popa
jmp
sbb
sub
pushf
sbb
pop
mull
call
jg
xor
jge
jge
mov
shl
xor
hlt
xor
adc
adc
test
popa
and
test
in
fsub
lods
outsb
scas
pop
xchg
in
push
mov
xor
int
in
or
mov
int
and
dec
sarb
and
fsubr
in
inc
sub
add
sbb
dec
sub
sarl
lock
cmp
mov
das
scas
in
in
dec
loop
pop
popa
imul
pop
mov
mov
leave
into
inc
mov
aam
in
sub
jo
sbb
daa
push
lds
mov
sub
push
push
push
jnp
enter
insl
dec
mov
push
lods
xchg
pop
popa
lds
enter
jl
cmp
pop
xor
or
test
or
mov
nop
add
stos
notb
lea
icebp
adc
pop
xor
cltd
push
fdivs
dec
push
in
in
frstor
sub
mov
sub
insb
fld1
cmc
xor
mov
xchg
repz
aad
pop
fstp
push
enter
push
jno
mov
pop
sub
int
push
in
dec
subb
jne
sbb
dec
sbb
mov
ss
jp
popa
andb
or
add
sub
in
es
insl
mov
cld
cmc
jg
aad
sub
in
fimull
shlb
push
loopne
mov
pop
xchg
xchg
adc
popa
nop
push
stc
push
aaa
push
or
adc
cmp
xor
and
jno
adc
inc
xor
push
add
dec
adc
mov
in
int3
int3
lock
enter
into
scas
fstps
jno
aam
or
out
and
dec
mov
adc
cmp
inc
aas
in
sar
add
int
loopne
xchg
fs
test
hlt
lock
dec
leave
add
jmp
dec
icebp
push
sub
and
daa
and
jle
pop
aad
cltd
xchg
jle
cmpsb
sub
icebp
popa
fnstenv
sti
xor
aad
lods
leave
jno
aad
or
dec
outsb
inc
cmp
leave
pop
push
adc
mov
out
mov
int3
push
cli
mov
jmp
jne
jle
out
xchg
inc
dec
sahf
sub
dec
pop
pop
push
inc
insl
pop
push
adc
adc
roll
and
insl
push
sbb
lods
mov
movsb
int
int3
dec
xor
mov
push
mov
add
cmp
leave
imul
popa
rcll
adc
xlat
test
sahf
pop
mov
hlt
outsl
cs
and
jne
negl
lods
imul
jmp
fmull
aad
inc
mov
outsb
sbb
dec
lock
xchg
add
imul
xor
dec
sub
and
mov
out
test
call
outsb
sub
pop
outsb
inc
sarb
loopne
cltd
inc
push
add
insl
cmp
xor
mov
jle
lods
js
int3
jmp
xchg
dec
adc
sbb
sub
xor
cmc
mov
cli
pop
xorl
mov
or
lods
mov
pop
sbb
popa
push
cld
popl
mov
jne
int3
pushf
jne
cmp
jnp
mov
push
pop
adc
ret
mov
out
mov
cmpsl
in
shl
xchg
cmpsb
popa
outsl
and
inc
sub
leave
mov
in
and
faddp
mov
xor
insl
mov
enter
adc
cltd
call
jle
lea
pop
pop
call
pop
mov
in
fsub
fmul
jo
in
jge
cmp
clc
inc
ds
xchg
in
gs
adc
mov
cmp
scas
mov
insl
aad
outsb
add
mov
push
popa
xor
leave
xchg
mov
push
jne
sbb
or
out
xor
gs
xchg
jne
dec
insl
jle
icebp
std
or
dec
setge
mov
int
clc
into
mov
in
mov
or
dec
xchg
mov
cmp
inc
fmul
cmp
jnp
movsb
inc
sbb
gs
aaa
int3
fidivl
int3
in
sub
lods
push
loope
nop
jge
sahf
fcompl
int3
sub
dec
outsl
into
dec
add
je
shll
dec
push
lods
aad
jmp
pushf
xchg
insl
notl
xchg
lods
aaa
leave
popf
out
loope
shrl
sbb
in
outsl
aam
aad
push
popa
push
xchg
leave
movsl
mov
sbb
or
loopne
push
int
push
aam
js
daa
enter
call
fsubl
popf
sub
and
cmp
sbb
xchg
push
mov
fmull
mov
sub
pop
jne
cmovb
icebp
decl
out
out
adc
mov
lock
rolb
cmc
xchg
psraw
mov
cli
xor
ds
rcrl
push
push
mov
dec
test
add
sub
pop
out
sbb
fnsave
jmp
jno
popf
and
test
sbb
push
or
push
aam
xchg
dec
mov
sbb
xor
sbb
push
sub
sub
leave
cmc
dec
cmp
sbb
xor
cmp
lock
xor
pop
rorl
in
leave
sub
mov
add
aad
test
adc
mov
mov
add
add
int3
andl
jns
xor
sub
xchg
repnz
jl
and
or
adc
call
jp
adcl
movsl
xchg
lret
adc
mov
stos
jecxz
adc
icebp
rclb
adc
push
daa
insl
pop
xor
push
or
mov
mov
xchg
sub
xor
je
mov
outsl
adc
mov
mov
pop
cli
sbb
mov
pop
pop
fnstenv
xchg
sub
sub
jle
hlt
sbb
mov
sbb
xlat
icebp
ss
sub
popf
in
pop
imul
and
cmc
jne
push
mov
and
mov
cmp
lods
dec
xor
iret
lock
xor
in
adc
popf
dec
xchg
ficomps
inc
divl
loope
xor
insb
cmp
fldcw
inc
mov
repz
in
leave
fs
loopne
pop
cmp
xor
fsqrt
and
lods
cmp
sub
push
or
lock
lds
mov
enter
filds
jle
test
in
xor
mov
cld
inc
mov
push
mov
aad
cmc
enter
idivb
push
xchg
aad
push
mov
aad
imul
repnz
push
popf
gs
inc
das
int3
je
dec
insl
lock
pop
sub
loope
enter
arpl
and
push
pop
popa
cmp
inc
notb
sub
mov
loope
dec
and
cli
adc
mov
iret
outsl
adc
out
push
loope
push
call
imul
int
int3
lock
xchg
adc
in
cmp
xlat
sbb
pop
mov
adc
mov
cmp
add
cmp
push
cltd
push
sub
test
in
xchg
std
dec
pop
xchg
aaa
insl
lods
and
cmp
loopne
les
mov
and
aam
add
roll
fs
ss
das
lods
xchg
hlt
fsubr
sub
add
sbb
fcomps
scas
sub
repnz
mov
inc
cmp
cs
mul
test
loopne
mov
imul
lods
inc
push
movsb
adc
shl
add
int3
cmp
mov
icebp
and
fcompl
mov
pop
test
fnstsw
mov
add
icebp
mov
cltd
cmp
mov
int3
rcll
lea
aam
pushf
aad
jae
xlat
insl
imul
in
cmp
mov
insl
adc
mov
pop
adc
bsr
out
fndisi(8087
pop
outsb
push
lods
cmc
in
pop
sbb
imul
adc
inc
outsb
sbb
sub
mov
adc
and
fsubrl
jmp
in
sbb
xor
mov
push
loop
push
mov
xor
adc
mulb
jle
pop
sub
in
enter
mov
fs
push
scas
push
in
mov
pop
in
mov
push
cmc
popa
dec
mov
pop
int
leave
arpl
or
in
js
mov
xchg
mov
js
lock
gs
ror
lods
test
andl
sbb
aad
pop
addr16
cmp
enter
addr16
push
popa
and
sub
jno
cmp
xchg
xchg
fisttpll
xchg
cmp
fcoms
sub
mov
leave
cmp
cmc
movsb
jmp
sub
gs
add
outsl
mov
in
dec
int
cltd
dec
add
xchg
jp
aas
or
unpckhps
rorl
test
or
mov
leave
dec
push
adc
xlat
mov
jmp
push
mov
dec
test
sbbb
pop
dec
ja
xor
mov
xor
icebp
sub
xchg
pop
int3
fldenv
inc
int
adc
push
inc
cmp
sub
call
xor
mov
sbb
loope
cmc
fdiv
dec
movsb
loopne
inc
pushf
andb
add
loope
imul
call
mov
neg
pop
shl
mov
lock
int3
mov
insl
mov
inc
iret
int3
push
hlt
xor
push
in
popf
push
adc
xor
addr16
or
xchg
mov
lds
adc
ror
xor
rorb
jno
into
mov
pushf
push
imul
adc
scas
inc
mov
pop
jmp
xor
adc
in
xor
test
jle
fmul
inc
pop
adc
movsl
cltd
and
adc
and
xchg
lock
call
inc
jo
bound
jge
pop
cmp
scas
jmp
pop
pop
cmp
jno
test
cmp
mov
sbb
xchg
int
cltd
sub
loopne
icebp
andnps
int3
push
cmp
sub
in
lcall
adc
mov
mov
fldcw
jno
fcom
fucomp
jg
xor
pop
test
sub
cmp
push
loope
rcr
push
sub
in
fdivrl
aad
imul
lods
mov
icebp
cmc
aas
or
pop
or
mov
aaa
je
fs
mov
cmp
jg
mov
lods
mov
sbb
jne
inc
cmp
dec
xor
sti
lret
mov
sub
xchg
push
hlt
mov
icebp
mov
fnsave
and
mov
sarl
loope
adc
mov
sub
push
mov
push
mov
dec
add
cmp
sbb
and
repz
xchg
inc
inc
ficomps
lds
outsl
adc
fldl2t
mov
pushf
in
dec
mov
aad
jg
mov
sub
lds
sub
in
fstl
push
push
xchg
and
mov
push
negb
cmove
ror
stc
aam
ja
add
ror
imul
leave
dec
sub
movsl
sub
aas
mov
dec
mov
rolb
leave
mov
lods
lock
jne
notb
adc
or
outsl
dec
xor
xchg
xchg
sub
bnd
inc
dec
xchg
and
in
inc
cmc
enter
pop
mov
movsl
pop
adc
leave
lea
inc
sub
out
jl
inc
and
xchg
enter
cmpsb
sub
roll
mov
push
test
xor
rcll
fldl
sbb
call
pop
popf
imul
popa
loopne
pop
cmp
adc
fmuls
scas
mov
out
mov
sti
adc
xchg
cmp
and
cmp
mov
xor
in
in
fs
aad
inc
in
inc
and
or
push
pop
xor
fsubrs
jmp
lods
loope
fs
pop
popa
insl
lock
inc
insl
in
sbb
out
pop
sub
scas
jge
jmp
icebp
and
js
xchg
adc
jl
mov
mov
cli
gs
xor
push
mov
int
cmp
jl
repnz
push
mov
icebp
xchg
and
xor
adc
aam
pop
push
xchg
dec
sbb
adc
xor
pop
add
leave
out
and
jmp
test
pop
in
daa
and
and
out
lock
mov
dec
cld
sbb
mov
jne
sbb
in
pushf
jmp
xchg
adc
xchg
cmp
dec
jmp
xor
stc
in
loope
push
pop
sub
aaa
xchg
adc
lds
pop
shlb
xchg
push
or
adc
mov
push
cltd
adc
pop
int3
add
movsb
jmp
fldcw
nop
and
cmp
icebp
mov
inc
cmp
xchg
lret
push
int
fcmovb
dec
lods
sbb
sbb
fwait
das
stos
pop
xor
pop
cmp
mov
sbb
int3
and
sub
dec
stos
xor
mov
call
hlt
inc
in
popa
dec
adc
stc
lods
mov
mov
jle
and
and
int3
sbb
lods
sub
xchg
in
jne
stos
jno
cltd
mov
loope
sbb
mov
in
pop
int
fsubs
aad
test
outsb
fisubrs
sbb
fdivrl
pop
pop
mul
outsb
lret
mov
aam
int3
fprem1
mov
cltd
loopne
and
scas
fidivrl
mov
popa
int
push
les
lock
xchg
sbb
push
and
adc
push
in
in
in
insl
dec
imul
jmp
pop
xchg
mov
roll
in
pop
sub
loopne
pop
mov
xchg
loope
mov
push
or
inc
push
sarb
push
mov
xorl
xor
mov
mov
test
icebp
sbb
sub
xchg
scas
push
insl
rcrb
pushf
cmp
fistps
rcr
shll
fs
adc
fstpl
sbb
jmp
cmpsl
pop
pop
loope
clc
lds
fs
dec
inc
lds
in
jg
xor
popa
push
imul
push
lock
fucomp
stos
push
lods
int
js
stos
div
fwait
jge
xchg
sbb
xchg
push
cmp
xor
enter
or
fsubr
dec
pop
std
jge
xchg
sub
fst
cmp
add
insl
adc
dec
sbb
sbb
mov
aad
fucom
insl
leave
out
lea
pop
adc
fmull
and
int
pop
icebp
in
mov
in
inc
push
mov
test
cld
mov
push
xchg
jnp
les
aaa
test
mov
push
dec
and
sbb
mov
mov
les
xchg
dec
flds
and
lds
sbb
xor
sbb
insl
shl
adc
push
icebp
popf
pop
sbb
into
iret
aam
popa
dec
icebp
mov
push
cltd
imul
gs
push
pop
leave
jg
out
insb
mov
mov
rorl
stc
push
mov
test
fldenv
sub
push
leave
dec
and
cmp
mov
popa
aad
jecxz
inc
xchg
movsb
movsl
enter
call
sbb
imul
fnsave
icebp
mov
outsb
dec
movsb
sbb
push
adc
loopne
dec
cmp
lock
rcrl
sbb
in
sbb
mov
into
lds
adc
inc
mov
gs
int3
jge
leave
je
jge
loopne,pn
inc
inc
lds
jg
and
add
int3
insl
dec
push
fcoms
fxch
xor
push
adc
nop
jge
inc
shrl
fdivrl
mov
in
adc
lds
jmp
shrb
decb
fisubl
popf
fwait
pop
cmc
insb
aad
shr
incl
sbb
dec
or
push
outsb
inc
loopne
push
jbe
movsl
faddl
leave
mov
xchg
fld1
adc
cmc
mov
pop
push
adc
hlt
shlb
adc
clc
adc
lock
int
dec
out
mov
cmp
push
inc
scas
stos
push
aaa
sti
mov
mov
or
lods
in
pushf
loope
mov
push
push
inc
and
adc
jecxz
push
shlb
mov
xchg
in
mov
rcr
lea
jno
shll
lods
enter
inc
cmp
adc
cltd
mov
adc
pop
sub
roll
push
sbb
sbb
movsl
xlat
mov
dec
mov
adc
cmp
xchg
mov
jmp
popa
movsl
es
mov
lock
dec
out
loopne
lea
mov
in
jbe
jmp
inc
in
in
aas
cmp
test
cmpsb
insl
rorl
xor
mov
dec
inc
and
xor
jno
dec
mov
adc
fxch
mov
sbb
sbb
into
sub
enter
pop
adc
sub
aam
ss
dec
dec
fnstenv
into
call
add
sbb
in
vpaddb
mov
mov
fstl
cmp
xchg
or
inc
sub
sbb
movsl
fldlg2
in
push
sbb
xor
movb
into
dec
dec
mov
test
enter
int
cmp
in
dec
clc
adc
out
push
cmp
lahf
fmuls
mov
inc
loopne
mov
pop
fst
jle
add
test
sub
jmp
int3
popf
inc
mov
shr
mov
jge
cld
adc
xchg
lock
adc
lods
jge
add
jne
jo
push
add
jns
sbb
cmc
mov
movsl
xchg
in
add
loope
rcrb
out
mov
pop
jmp
lea
movsl
cmp
adc
xor
int
mov
in
xor
icebp
in
sbb
dec
insl
lock
xchg
lcall
icebp
divl
lods
call
lcall
mov
not
das
sub
mov
lods
or
leave
adc
push
push
cltd
sbb
jge
pushf
pop
lds
imul
cmp
cmp
mov
and
inc
negb
in
dec
lock
xchg
movsl
mov
sbb
fs
adc
frstor
pop
pop
out
aas
mov
in
jle
sub
push
push
cmc
xchg
or
lds
cwtl
sub
mov
int3
cmp
xor
aam
andb
mov
cmp
xchg
push
pop
mov
out
andl
std
lods
call
insl
fsubl
cmc
xchg
dec
lea
mov
pop
insl
into
aad
imul
adc
fcoms
jno
mov
cmp
jne
inc
int
mov
in
xchg
add
xchg
cmp
sub
fsubrs
fcompl
xchg
test
dec
mov
jne
iret
mov
in
mov
jne
sub
shrl
insl
mov
push
lock
into
mov
dec
jno
sbb
shlb
movsl
adc
or
daa
int3
loop
fdivrl
xor
fldcw
scas
pop
adc
inc
mov
sub
jp
mov
jne
and
cmp
xor
mov
dec
and
fnstsw
rcr
sub
jp
fistps
pusha
cli
push
loope
mov
icebp
pop
pop
sbb
les
inc
mov
mov
lock
sub
inc
push
enter
pop
cmp
out
or
in
jmp
pop
test
lods
rcr
test
ja
jmp
test
push
in
push
test
jbe
cmpsb
int
es
addl
aad
xor
pop
dec
mov
adc
rcrb
sub
sbb
aas
and
mov
scas
pushf
fs
int3
mov
mov
std
sub
or
dec
fprem1
sub
cmp
dec
int
es
push
es
mov
pop
xchg
pop
call
jmp
push
setae
lock
adc
movsl
aad
cltd
int
cmc
loop
inc
and
add
cmc
and
loope
dec
cmp
nop
outsb
hlt
shll
xchg
sub
and
adc
test
sbb
das
adc
popa
in
adc
insb
dec
xor
shrl
sub
sub
fnstcw
sbbb
outsb
int3
dec
lock
cmc
rcll
jno
push
or
call
mov
cmpsb
or
mov
popf
mov
sbb
out
call
mov
fldenv
and
xchg
aam
test
or
mov
sub
repz
rorl
hlt
mov
in
mov
inc
in
inc
movsl
in
out
jle
inc
sub
or
test
in
into
cmp
faddl
and
pop
testb
loope
ljmp
add
push
adc
jne
mov
inc
xchg
xor
loopne
int3
in
push
pop
jge
add
lds
movsl
int
adc
rcr
std
int3
adc
and
out
insl
out
mov
adc
pop
mov
xor
dec
fsts
imul
xor
cmc
pushf
nop
cmp
xor
out
cmp
mov
hlt
aas
pop
push
xor
repz
mov
popf
outsb
pop
shll
inc
lods
or
fsub
int
mov
cmp
mov
jne
aam
jmp
adc
and
pop
pop
add
outsl
mov
mov
imul
pop
leave
xor
lods
push
cmp
mov
xor
and
cvtps2pd
mov
lods
sbb
dec
push
and
push
dec
xchg
push
xor
sbb
ret
imul
cmp
add
push
sub
cmc
int3
loope
jl
aam
out
js
aad
jle
lods
loopne
int3
jge
dec
mov
xor
jge
int3
push
inc
sub
cmc
pop
pop
jbe
push
or
ror
in
mov
lea
jmp
dec
mov
and
cmp
fsubp
sets
push
mov
mov
das
test
push
cmp
lds
enter
out
sub
sbb
imul
imul
insl
sub
sti
xchg
mov
adc
dec
push
mov
enter
in
out
dec
xor
int3
sar
lods
mov
jl
adc
loopne
lods
sbb
test
and
push
push
xor
xchg
sub
jmp
stos
lods
inc
fisubrs
adc
cltd
cmc
fldcw
jl
and
inc
xchg
mov
outsb
gs
test
adc
xor
imul
or
mov
adc
and
lea
xchg
xchg
sbb
ror
dec
call
sub
adc
and
dec
push
movsb
adc
xchg
in
repnz
inc
sbb
mov
dec
fstl
out
cmc
dec
jnp
dec
pop
adc
cmp
loope
adc
jecxz
lea
xchg
adc
jne
shrl
jl
call
push
sbb
dec
fsubrs
mov
jl
icebp
inc
cmp
cltd
test
sbb
popa
jg
out
in
mov
sarb
pop
fdiv
xchg
popf
push
das
lods
fxch
cld
lock
adc
lahf
icebp
lret
inc
insl
xchg
mov
mov
in
rorb
ljmp
outsb
ljmp
adc
fsubr
sarb
cmc
into
pop
inc
mov
lret
push
mov
xchg
cmp
popf
sarb
lods
bound
sti
xchg
nop
aaa
push
pop
in
xchg
sub
enter
mulb
pop
pop
and
cltd
aam
or
clc
lds
test
cmc
inc
adc
mov
jno
daa
mov
push
inc
rcl
mov
cmp
in
fldcw
and
rcl
out
movsb
imul
push
add
mov
add
sbb
test
pop
loope
jmp
push
jecxz
xchg
adc
mov
mov
enter
lock
fiadds
out
sbb
pop
mov
insl
dec
adc
fstps
call
popf
lahf
aam
cld
cs
inc
fmuls
sbb
jne
push
fistps
mov
sahf
sub
jns
sbb
int
cltd
dec
push
sub
xlat
lods
insb
lcall
iret
int
out
sub
lock
out
sbb
fsubr
das
and
sub
out
popa
sub
loope
movaps
xchg
push
movsb
pop
call
imul
adc
adcl
mov
faddl
leave
jmp
ja
push
mov
test
or
leave
xchg
cmp
nop
push
iret
vpsubw
mov
or
jmp
cltd
loope
pop
pop
out
mov
jg
int3
and
cmp
in
leave
testl
insl
xor
enter
int3
sbb
fmuls
xchg
mov
cmc
sub
jb
icebp
lods
les
xor
insl
dec
push
in
xchg
mov
adc
xor
test
movsl
push
in
popa
and
xchg
outsl
out
cmp
mov
test
adc
mov
in
test
xor
push
cmp
test
push
sbb
rorl
and
setne
in
adc
arpl
movsb
into
lods
jbe
sub
dec
mov
adc
sarl
inc
sub
mov
outsb
or
mov
in
sbb
call
push
leave
sbb
inc
dec
cmp
mov
movsl
push
fcompl
push
adcb
inc
mov
test
mov
jmp
cld
test
movsl
ds
mov
sbb
leave
and
push
push
jne
pop
push
pushf
pop
sahf
mov
adc
adc
sahf
push
dec
shlb
sub
dec
mov
push
fsub
dec
xchg
enter
dec
jae
test
mov
sbb
cmc
mov
add
test
ljmp
cltd
outsb
outsl
fcmovnbe
in
insl
movsl
test
aad
fisubs
cmp
insl
push
cmp
and
lcall
sarl
out
aaa
mov
mov
orb
cmp
inc
call
in
mov
xchg
jbe
push
sbb
dec
add
add
cmp
inc
or
test
pop
or
movsb
sbb
hlt
push
jo
push
pop
mov
outsl
loopne
adc
xor
dec
cmc
test
mov
sbb
sub
dec
fcompl
sarl
pop
dec
mov
fsubrs
lahf
aam
and
mov
pop
inc
xchg
loopne
lods
scas
push
push
inc
xor
add
in
mov
jno
in
enter
xchg
push
gs
mov
loopne
sarl
mov
and
outsb
lock
sahf
jne
popa
rcl
aad
imul
inc
dec
pop
push
mov
add
mov
inc
pop
ss
adc
jmp
dec
fucom
imul
lock
jmp
aad
insl
gs
adc
popa
rcll
mov
dec
push
pop
nop
filds
fadds
call
sbb
nop
fsubrs
aam
mov
add
adc
pop
fstp
icebp
push
loopne
arpl
sub
int3
aad
lea
mov
stos
xlat
cmc
adc
push
dec
call
clc
jnp
cmpsl
loope
in
sbb
sbb
popa
fld
in
cmp
in
push
and
push
jae
fnstsw
cmp
iret
push
in
cltd
mov
outsl
mov
daa
lahf
sub
sti
inc
sbb
icebp
arpl
dec
enter
push
xor
inc
pop
mov
scas
notl
xchg
mov
adc
and
xor
mov
pop
aad
rorb
dec
decl
es
popf
push
sub
adc
mov
movsb
cwtl
push
int
add
push
faddl
pop
jge
jne
jns
mov
fnstcw
test
repz
rcll
cli
adc
fcoml
shl
lds
int
loopne
dec
movsb
fsub
lock
mov
sti
insl
into
in
jg
xchg
push
mov
movsb
enter
in
mov
add
push
mov
dec
mov
adcl
in
fmuls
fwait
mov
gs
lock
push
jne
mov
rcll
and
insl
sbb
in
pop
mov
faddl
rolb
mov
fucom
mov
sub
int
fmull
xchg
ret
and
add
imul
shlb
cmp
mov
push
push
inc
mov
xadd
outsl
call
rcr
xor
jle
int
movsl
dec
cmp
popa
aam
enter
dec
shr
inc
icebp
insl
cmp
movsl
fdivrs
lods
rorb
xchg
and
popa
sub
jne
dec
fs
fnsave
xor
or
inc
in
aad
insl
shll
xor
inc
imul
sub
rol
clc
lods
paddsw
add
dec
int3
xor
insl
fdivrl
fisttpll
lods
clc
enter
xor
in
cmp
add
gs
dec
cmp
adc
lock
out
cmp
daa
xor
jle
xor
cwtd
loope
push
mov
fucomp
adc
popf
fdiv
xor
fsubr
loopne
fmuls
call
out
dec
icebp
lods
fdiv
stos
and
push
test
pop
add
push
int3
and
xchg
loopne
in
sbb
fcomps
out
push
sbb
mov
jo
loope
add
jne
popa
pushf
add
int
data16
pop
add
and
icebp
lea
cmp
sbb
mov
lret
into
daa
out
fsubl
out
mov
fmuls
insl
mov
push
jne
popf
xchg
mov
fs
xchg
test
adc
push
mov
dec
fsub
push
movsb
popa
adc
mov
xchg
int
jns
shll
insl
leave
jp
xchg
testb
mov
in
mov
pop
and
imul
test
movsb
add
sbb
rcl
push
mov
mov
rorl
leave
cmp
and
dec
aam
loope
xchg
int
data16
mov
inc
loopne
cltd
jle
inc
dec
pop
notl
jmp
push
inc
mov
sbb
adc
push
loope
out
jne
push
push
sub
popa
sub
fnsave
cmp
mov
push
jno
test
lods
enter
aas
insl
mov
cs
mov
cmp
sub
in
ljmp
es
insl
push
pop
jne
mov
out
dec
sbb
sbb
xchg
pop
cmp
popf
mov
dec
bound
fsub
pushf
cmp
lods
add
sahf
mov
inc
addb
jle
sbb
int
jle
imul
push
mov
xchg
aad
xchg
sub
sub
pushf
mov
lock
jno
adc
mov
nop
sarl
int3
in
sub
std
stc
cmp
loope
adc
jne
sbb
in
add
xchg
pop
and
cmp
test
notb
pop
ror
lahf
sub
add
test
out
add
lock
xor
addr16
pushf
mov
or
rorb
xor
inc
sbb
pop
add
push
adc
sub
and
sub
bound
and
push
mov
adc
mov
scas
popf
inc
dec
sbb
in
jle
sbb
movsl
xchg
aas
pop
dec
aas
mov
sub
mov
rorl
shrl
in
ffree
call
enter
xor
lods
aam
int3
pop
xchg
mov
shr
das
fdivrs
cmc
in
dec
mov
lea
call
movl
fisttpll
sbb
adc
jp
adc
lock
dec
insl
xchg
mov
inc
lds
icebp
pop
jns
jns
cmp
aaa
xor
jg
aam
in
adc
push
mov
add
jle
push
inc
xchg
das
fldln2
fxam
dec
dec
sbb
int3
test
movsb
xlat
lcall
dec
mov
mov
out
push
sbb
pop
dec
sub
fnstcw
shrl
mov
adc
adc
mulb
push
cmp
sbb
xchg
or
xor
aad
in
adc
jmp
cltd
cmp
sub
test
loope
push
sbb
pushf
popa
sub
loopne
pushf
movsb
xchg
mov
lock
sbb
std
mov
lods
adc
sub
popa
mov
pop
pop
jp
aas
pop
call
xchg
loopne
int3
cmc
jmp
inc
jg
lods
mov
call
xor
movl
cltd
loopne
ja
inc
out
outsb
enter
mov
sub
jmp
pop
fnstenv
insl
popf
imul
jne
int3
gs
inc
xchg
insl
and
loopne
imul
mov
push
mov
cltd
jmp
sub
or
lock
outsb
mov
lret
adc
cmc
sub
pop
sbb
in
outsl
inc
jne
fwait
lahf
lods
mov
dec
daa
cld
adc
sbb
jno
gs
icebp
subb
xor
dec
aam
sarl
fiaddl
jl
mov
aad
adc
fsts
sarb
enter
int3
dec
in
in
in
out
adc
aad
call
jmp
int
dec
loope
sbb
sbb
xchg
sbb
sbb
aad
in
adc
fdivr
adc
lock
inc
call
push
and
insl
jns
and
call
xchg
adc
nop
pop
sbb
inc
in
movsb
sbbl
xchg
daa
adc
mov
inc
cs
arpl
or
fxam
dec
inc
xchg
aad
sbb
in
dec
mov
pop
fcoms
xor
mov
xlat
imul
inc
add
and
mov
mov
in
ffree
int3
mov
fs
sub
int
cmp
dec
cmc
or
pop
jge
in
adc
popa
call
cmpsl
mov
adc
jge
out
rcll
jno
popf
add
lds
mov
add
popa
enter
icebp
or
test
dec
test
int3
mov
movsl
in
jmp
sub
fistpll
jmp
xor
sub
mov
inc
xor
cmp
es
or
out
mov
movsl
push
add
cmp
loopne
int3
call
fldl
ror
in
popf
mov
push
inc
sbbb
mov
push
adc
adc
enter
iret
pushf
cmp
jno
fdivl
xor
dec
pushf
mov
mov
cmpsb
xorb
out
sbb
xchg
sbb
movswl
lods
fdivrs
push
orb
cltd
fucompp
insl
xchg
aas
add
popa
rcrl
and
loop
dec
mov
daa
test
int3
xchg
in
or
outsl
lods
sub
pop
pop
or
jl
out
sbb
mov
in
xor
sub
les
dec
outsl
inc
pushf
leave
and
mov
and
aam
xchg
sub
faddl
call
loope
jmp
popf
pop
pop
fcompl
lds
add
fcom
push
in
loope
orb
cmp
or
shrl
jnp
rcrl
imul
push
push
mov
push
loopne
mov
test
in
push
int3
mov
gs
xor
push
movsb
sbb
aaa
mov
or
cltd
pop
sub
imul
lods
sbbl
enter
call
inc
sub
scas
lcall
pop
adc
fsubl
inc
xchg
mov
xchg
jmp
add
pop
icebp
sub
inc
in
fisttpll
push
pop
fldcw
imul
mov
and
les
xor
lock
push
insl
sub
fucom
or
pop
push
sub
cmc
in
jmp
imul
mov
push
cmp
pop
lods
push
fs
loopne
stc
mov
int
aam
inc
xchg
sbb
mov
divb
nop
fcoms
popf
imul
gs
dec
loope
pop
jmp
cltd
pusha
push
lock
lods
or
inc
addr16
movsl
push
sbb
faddl
add
jmp
in
and
negl
loopne
xor
cmpl
sub
xchg
insl
pop
or
js
repz
xor
xchg
aad
jne
shrl
mov
xor
jne
into
pop
push
pop
cltd
adc
dec
xchg
int3
push
and
iret
adc
out
popf
in
fidivl
icebp
mov
loop
inc
in
adc
jmp
xchg
aam
sub
inc
jns
insl
cmpsl
test
pop
test
insl
pop
cmp
xor
push
mov
adc
movsl
pop
shrl
inc
push
push
popa
mov
dec
push
loope
push
and
inc
jne
insl
sbb
repz
lds
pop
sub
push
adc
xor
stos
xchg
pop
adc
sbb
adc
dec
sub
rorb
jecxz
mov
scas
xchg
aam
mov
inc
in
loop
bound
or
into
lock
dec
movsl
icebp
aad
inc
shrl
adc
cld
insl
das
or
lds
insb
mov
aad
jmp
sbbb
pop
xor
mov
jl
cmp
cwtl
cmp
repz
cltd
xchg
fisttps
pop
sbb
mov
adc
int3
sub
sti
push
pop
xchg
mov
dec
rcl
adc
xchg
adc
push
ja
pop
enter
xor
dec
pushf
inc
ja
aam
mov
mov
test
outsb
push
int3
inc
rorb
dec
cltd
dec
sub
aam
mov
xor
dec
cmp
inc
out
push
dec
in
xchg
mov
pop
cmc
loope
xchg
push
loopne,pt
mov
adc
sub
and
sahf
xchg
imul
push
xlat
pop
pop
addr16
push
mov
imul
fs
add
gs
repnz
add
in
nop
pop
pop
xchg
mov
icebp
xor
and
cld
push
js
sub
inc
scas
ror
in
std
test
out
call
inc
jne
andb
outsb
test
loopne
dec
xchg
lds
lock
mov
pop
mov
pop
stc
imul
das
shr
mov
rcr
aam
flds
adc
rcr
cltd
jle
pop
fcoml
push
movsl
std
pop
mov
imul
sub
ret
pop
add
add
scas
cmp
into
adc
and
leave
notb
jmp
xlat
outsb
fstpl
lock
pop
icebp
cli
sub
mov
push
mov
jl
orl
push
cmc
inc
fildll
into
in
outsb
dec
xor
sub
jle
cmp
insl
xor
cmc
mov
int3
dec
popa
imul
or
out
xor
repnz
es
test
mov
push
movsl
inc
std
push
mov
pop
xchg
insb
lock
or
inc
cmpsl
es
mov
aam
add
cli
fldl2t
js
in
inc
pop
cmp
rclb
mov
sbb
fdiv
jno
mov
fmull
cmp
lock
gs
sarb
mov
pop
push
xor
dec
cmp
leave
xchg
call
movsl
mov
and
inc
mov
adc
in
leave
xchg
cmp
push
test
push
fisubrs
lock
sbb
aad
mov
mov
outsb
adc
mov
sub
pop
inc
pop
cli
push
lret
shrb
dec
ja
add
push
push
movsl
xchg
stc
and
push
les
mov
fisubl
lods
inc
or
sarb
xchg
mov
repz
in
xchg
popa
adc
fstps
enter
inc
cmp
rol
inc
pop
xor
pop
fldenv
fisttps
push
xor
test
cmp
xor
fst
sbb
sbb
loop
or
in
dec
push
xchg
outsb
int3
xchg
push
cmp
jno,pt
fnstcw
std
rol
pop
xor
test
pop
lods
in
mov
xlat
dec
in
add
ja
test
rclb
push
in
aam
je
mov
pushf
aaa
pushf
pop
xor
xor
cmp
adc
jmp
dec
lret
sub
popa
mov
lock
ficompl
lods
fsubl
movsl
cmp
push
adc
xor
sub
insl
lods
jno
popa
in
clc
jmp
nop
xchg
or
fdivl
aaa
sub
in
sbb
inc
cmpxchg
cmpsl
inc
in
in
shll
repz
into
inc
loopne
sbb
sbb
sub
sbb
cmc
dec
mov
iret
lods
int
jge
jns
fcmovnb
lcall
mov
mov
or
push
adc
lds
adcl
sub
sbb
push
int
jl
sti
dec
scas
iret
and
mov
push
leave
lock
jmp
sbb
ja
dec
push
rcl
adc
popf
inc
aam
punpckhdq
jmp
test
int
sub
movsb
dec
cltd
or
jle
pop
gs
pop
sbb
fs
leave
fsubs
jne
enter
enter
in
loopne
orb
daa
xchg
sub
xor
push
adc
mov
fsubrs
iret
das
dec
shrl
dec
les
xchg
movsl
loope
push
and
push
fsubrl
int
pop
and
push
outsb
nop
cmp
lcall
pop
pop
jne
bound
cmc
add
mov
fldl2t
lock
lds
mov
popa
sbb
mov
mov
add
xor
icebp
and
filds
sub
aam
in
and
and
xchg
dec
mov
jg
xchg
rorb
inc
cmp
int3
fmull
and
pop
sub
sub
int3
mov
lods
mov
and
icebp
dec
xchg
and
popf
popa
sub
mov
jae
in
popf
stc
inc
aam
adc
gs
inc
fildll
fstps
outsl
int3
pop
aad
inc
popf
in
xor
pushf
mov
mov
dec
mov
test
push
lahf
sbb
leave
mov
into
dec
push
icebp
scas
insl
icebp
adc
enter
imull
jno
cmp
lea
imul
std
lds
scas
mov
imul
jecxz
shl
arpl
nop
mov
ja
dec
adc
mov
jmp
insl
adc
dec
adc
lea
lock
movsb
pop
sarl
xor
popa
sub
pop
sub
jmp
xchg
sub
fucom
jno
subl
sub
pop
pop
mov
push
cmp
cmp
sub
inc
cmpsl
aad
mov
outsb
fimuls
sbb
rclb
adcb
lahf
inc
es
daa
adcb
call
mov
js
ret
jle
xor
jle
jge
inc
sbb
sbb
inc
cmp
adc
adc
and
cmp
popa
lods
rolb
nop
pushf
push
out
fmull
sub
push
test
aam
and
daa
or
int3
aad
sbb
dec
je
push
sbb
sub
jne
sbb
sbb
jmp
sarl
lret
icebp
add
xor
int3
sbb
loopne
leave
cmp
outsl
sbb
out
data16
fcmovnbe
xchg
xor
int
loopne
shl
test
and
je
sbb
in
mov
cmp
cltd
int3
and
cmc
sbbl
int
and
mov
lcall
in
loopne
mov
mov
cmpb
inc
rolb
out
and
call
movsl
push
sub
mov
hlt
jmp
pop
dec
jecxz
or
cmc
call
sbb
int
mov
add
push
fsin
imul
push
pop
sub
mov
sub
mov
cmc
test
push
loopne
pop
aam
in
out
gs
popa
inc
lret
shlb
jg
aam
cmp
imul
inc
push
popa
cmp
sbb
aaa
fsubrl
scas
je
push
inc
jmp
sbb
fmuls
xlat
leave
xor
fs
imul
or
add
shll
push
sub
in
pop
gs
jae
and
xchg
out
call
les
jo
lock
repnz
aad
into
add
sti
xchg
mov
xchg
and
adc
push
jle
xor
or
int3
jg
sub
cmp
cmpsb
jmp
int3
movsl
pop
jns
insl
pop
xchg
xor
in
gs
test
mov
ds
jg
adc
fwait
test
sarb
cltd
xor
sbb
lds
xchg
mov
loope
ljmp
lock
nop
int
or
lds
pop
fstp
in
cmpsl
mov
sbb
inc
jmp
xchg
sbb
and
dec
fwait
mov
fstl
rorb
into
mov
testb
loope
xchg
in
fnstsw
aaa
roll
sbb
sbb
loop
lret
sub
xchg
in
fxam
ss
jmp
xchg
in
cmc
push
jbe
mov
fsub
in
lods
into
sub
into
sbb
lds
test
mov
inc
push
into
jle
push
mov
mov
outsb
in
jne
dec
mov
dec
insl
jge
fisttpll
icebp
jge
rorl
gs
ds
loope
or
not
push
lods
insb
push
xchg
sub
xchg
dec
fsubrs
or
adc
lods
jno
into
in
fs
mov
lahf
pop
adc
cmc
and
inc
fadds
mov
js
enter
aaa
lock
inc
inc
pop
addl
and
push
mov
push
pushf
adc
add
mov
bound
sub
sub
shrl
mov
push
inc
jmp
leave
mov
loope
dec
sti
or
xor
sbb
jle
ja
pop
rcrl
fdivl
divl
enter
out
lods
mov
fcompl
mov
fildll
int
cmp
in
sbb
mov
sti
cmp
cmpsl
push
lock
lcall
dec
add
adc
dec
inc
stos
int3
push
icebp
dec
jne
fsub
mov
lock
mov
mov
cmpl
stc
xchg
or
js
popf
lahf
fisttpll
push
pop
dec
adc
fwait
in
mov
nop
lcall
fmul
jle
pop
emms
mov
vunpckhpd
jle
xchg
int
mov
in
xor
dec
imul
xor
pop
or
sbb
adc
jne
pop
enter
adc
mov
loope
jnp
and
or
int
xchg
rorb
inc
mov
int3
icebp
dec
icebp
xor
mov
aad
aam
jnp
and
xor
gs
jecxz
stc
xor
xor
fidivrl
insl
jno
mov
popa
inc
pop
and
jne
sti
and
imul
lock
push
cld
call
cmp
jmp
fs
mov
das
mov
lock
imul
adc
test
mov
loopne
sbb
pop
pushf
and
adc
fyl2x
mov
aad
dec
sbb
jb
stos
cmc
pop
add
sahf
push
xchg
lock
mov
and
cmp
sub
stos
sbb
bound
dec
push
sbb
popa
mov
fmuls
push
sti
xchg
popf
or
sbb
imul
adc
mov
pop
xchg
mov
mov
test
pop
xor
sbb
pushl
std
data16
adc
fstpl
adc
mov
mov
loope
subb
sti
sahf
in
fstpl
adc
test
into
xchg
adc
imul
mov
cmp
or
enter
cltd
push
lods
mov
repnz
fdivl
inc
sub
and
loopne
sbbb
sbb
sbb
jmp
sub
loop
mov
int3
stc
jmp
cmc
test
in
cmpsl
mov
pop
sarl
lea
adc
rcrb
lds
aam
push
sub
insl
or
movsl
fucomp
mov
jne
adc
pop
sub
hlt
jecxz
addr16
xor
add
or
cmovge
pop
cmc
cmpsl
in
movsb
xchg
push
add
push
sub
push
jmp
pop
or
jg
sbb
push
sahf
mov
enter
push
lock
inc
lods
flds
cmp
jne
push
in
mov
mov
hlt
cli
pushf
and
insl
dec
adc
sub
enter
sbb
sbb
arpl
xor
xchg
jo
add
int
sub
mov
enter
dec
aam
xchg
adc
mov
aam
pop
adc
dec
cmpsl
pop
in
out
lods
sbb
mov
into
push
xchg
sub
fsubl
lcall
mov
push
mov
xchg
out
sub
loopne
ror
or
push
fistl
arpl
sbb
cmp
enter
mov
lcall
mov
pop
int3
sbb
cmp
dec
xchg
xor
or
mov
pushf
lods
sbb
xchg
mov
mov
sbb
inc
sub
fs
dec
pop
int3
mov
jle
inc
pop
inc
inc
cmc
sub
callw
xor
push
daa
mov
call
rorl
add
inc
push
xchg
mov
push
fs
call
mull
jo
enter
sbb
imul
dec
push
pop
adc
mov
xor
mov
push
cmp
insl
pop
or
mov
push
aam
and
xor
adc
mov
pop
cmp
mov
popa
test
negb
mov
mov
mov
je
mov
pop
mov
fmull
movsl
pop
in
fsubs
mov
sub
lds
aaa
out
or
mov
xchg
sbb
movsb
mov
dec
stos
push
sbb
and
rol
or
ror
sub
movsl
ret
xchg
inc
xchg
gs
int
loopne
add
aam
xor
dec
addb
mov
movsl
xor
mov
inc
mov
and
push
sarb
jl
call
insb
mov
loope
lods
gs
jno
mov
pop
jnp
xor
xchg
rcl
vminpd
adcb
enter
in
dec
xlat
sub
loopne
jle
cltd
and
pop
out
cmp
lods
lret
pushf
aam
push
lds
movsl
rcrb
inc
mov
mov
aam
notb
pop
sub
shll
cmc
mov
popa
pop
xchg
stos
jno
mov
xor
out
xor
add
pop
call
std
int3
mov
and
cmp
xor
push
mov
cmp
aaa
sbb
and
in
mov
jnp
xor
or
movsb
imul
aam
scas
sbb
test
cmc
lds
adc
cltd
fisttpll
faddl
sbb
jne
dec
insl
loopne
clc
sbb
cli
pop
in
pusha
xlat
insl
cmc
hlt
adc
lock
sarl
xor
push
test
adc
daa
sub
rcl
jge
add
sbb
cld
jmp
scas
or
enter
lock
mov
lods
xchg
stos
sbb
fnsave
pushf
mov
je
push
sbb
jnp
mov
xor
push
sbb
mov
mov
loope
pop
fwait
les
mov
cli
cmpsl
rolb
mov
cmp
and
decb
pop
mov
ja
pop
and
daa
lret
add
sbb
leave
nop
xor
xchg
cltd
xlat
lret
sub
inc
mov
inc
fisttpll
and
xor
fstpt
jle
pop
stos
rorl
test
mov
testl
push
call
mov
popa
inc
in
fwait
sbb
in
je
jle
jno
in
inc
int3
call
cmc
in
fstps
and
cli
pushf
repnz
clc
sbb
aas
pop
xor
xchg
sub
enter
test
mov
popa
nop
xlat
xchg
adc
mov
cmp
jle
mov
and
ds
and
cmpsl
fildll
push
out
dec
out
push
rcrb
push
in
sub
xchg
jl
popf
sbb
movsb
jmp
movsl
adc
test
lods
sbb
sub
add
fwait
mov
pop
arpl
mov
pushf
in
push
jl
cli
push
popf
xor
pushf
int
inc
cs
lods
jne
sbb
mov
or
sub
addr16
pop
dec
iret
insl
aad
enter
push
mov
jns
mov
test
mov
mov
movsl
data16
cmp
subl
fnstcw
pushf
iret
sub
stos
mov
and
imul
push
adc
hlt
cmp
leave
inc
fdivrs
movsb
and
push
cmp
xchg
out
dec
sbb
sbb
test
aaa
xor
push
cmc
orb
lods
xor
cmp
pusha
and
out
lret
mov
adc
sub
cmp
pop
ds
jae
popa
bound
iret
loopne
dec
fsubl
push
adc
sub
jle
rclb
jno
ror
dec
sub
rcrl
lods
inc
adc
inc
int3
add
mov
inc
jbe
push
stos
xor
push
int
cmp
fwait
insl
std
xchg
push
scas
pop
fadds
flds
mov
jmp
or
dec
dec
stos
cltd
xchg
push
lds
mov
fcoms
popf
fwait
insl
push
xlat
adc
shll
jo
gs
xchg
jl
push
mov
dec
outsb
leave
push
mov
cmp
and
adc
in
lds
push
daa
subl
aam
in
adc
in
int
sub
loope
je
call
lahf
sbb
dec
pop
sbb
push
mov
push
repz
jmp
pop
jle
dec
dec
mov
pop
adcb
xor
std
stos
fadds
sub
cmp
adc
xchg
xchg
dec
imul
in
jg
dec
leave
into
call
cmp
fucomi
cmc
insl
inc
sbb
pop
mov
aam
sbb
loope
fs
sbb
gs
call
pop
pop
out
sub
popf
test
xor
mov
sub
jmp
fists
dec
inc
and
cmpsb
loope
pop
xor
mov
jne
rolb
fnstcw
enter
mov
push
inc
push
fistpll
mov
shl
mov
std
testl
addb
mov
or
stos
in
mov
add
out
sbb
inc
sub
mov
insl
cmp
or
test
lds
inc
iret
jnp
dec
nop
pushf
icebp
imul
xor
xchg
jle
outsl
xchg
xor
sub
loopne
jmp
xor
pop
fcoml
cmp
loope
nop
jae
sbb
loopne
in
and
xor
movsl
inc
dec
pop
movsb
adc
loope
fsubs
outsl
lds
movsb
mov
icebp
lods
cmc
call
lds
cwtl
sbb
int
adc
jle
dec
mov
rcll
xor
hlt
push
dec
loopne
in
ret
lds
movsl
imulb
or
popf
push
pop
lahf
jmp
lods
stc
dec
insl
xor
stos
pushf
jne
fidivrs
fnstcw
inc
mov
xor
xor
movsl
fiadds
loope
jg
das
mov
fidivrs
push
int3
and
call
jbe
cs
lahf
mov
lret
push
xor
add
popf
sbb
jne
xor
mov
mov
sub
adcl
mov
mov
jno
mov
mov
ds
jle
jb
push
test
ss
aad
xor
xchg
cwtl
cld
pop
in
loope
dec
sbb
push
xchg
das
dec
push
sub
and
cmc
mov
mov
push
int3
sub
in
push
mov
in
popf
push
pop
dec
inc
jle
push
xor
push
in
sarl
shrb
jae
das
ds
dec
xchg
ljmp
int3
mov
lds
adc
fadds
pop
sbb
push
js
pushf
jnp
jmp
mov
nop
out
inc
loopne
xchg
pop
cmc
inc
dec
xchg
sahf
cwtl
sarl
adc
mov
xchg
mov
push
pop
xorb
insl
les
mov
fimuls
jge
cmpsl
sahf
and
lods
ficomps
pop
adc
push
aad
xchg
mov
xor
fmulp
stos
insl
movsb
cmp
mov
mov
xor
pop
lods
jle
stc
gs
pop
and
fcomi
ds
cmpsl
mov
cmpsl
mov
lahf
cmpsb
jle
cmpsl
xor
xchg
pop
mov
pop
sub
fst
mov
into
jp
add
lods
adc
leave
in
data16
test
mov
dec
rclb
loope
jno
pop
movsl
xor
inc
xchg
inc
int
ret
sarb
out
xor
sub
pop
xchg
imul
mov
and
pushf
test
pop
sbb
mov
in
push
cltd
mov
dec
jo
mov
popf
rcr
xor
mov
mov
sub
inc
cltd
adc
dec
and
mov
out
dec
int
sub
ret
shrl
pop
jmp
adc
adc
fbld
test
cmc
int
xor
pop
les
sub
fcoms
mov
loopne
cltd
mov
fst
out
iret
lret
jp
xor
dec
adc
adc
push
xchg
push
sbb
mov
jle
xor
popa
flds
mov
pop
xchg
icebp
loopne
xor
call
lea
jl
xor
in
and
xor
fsubrs
lock
lock
push
mov
cmp
dec
push
in
aad
shlb
aad
shr
leave
add
scas
imul
movsl
repnz
and
cltd
xchg
inc
icebp
fnstsw
popa
insl
jne
decb
sarb
cmp
fcompl
pop
and
loope
sub
lods
sbb
or
insl
inc
sub
pop
mov
repz
push
jle
fcoml
outsl
add
in
fld1
scas
push
icebp
int
cmp
dec
push
sub
icebp
test
jl
xchg
loopne
lds
mov
xchg
sub
xor
sub
dec
xor
pop
push
aam
add
mov
bound
int
jle
sbb
fstpl
cmpsb
icebp
cmc
lods
adcl
nop/reserved
arpl
movsb
test
jne
repz
add
leave
or
setge
dec
xchg
fsubrs
aaa
cmp
das
xor
int
call
fucom
loopne
aas
cmp
pushf
mov
and
in
dec
std
loopne
xchg
xor
data16
fcoms
fabs
in
test
cli
ds
xchg
xor
bound
cmc
insl
mov
inc
sub
pop
sbb
lods
xchg
fstl
or
xchg
ds
jno
mov
pop
push
adc
and
cmp
icebp
or
inc
dec
adc
mov
iret
jecxz
lock
mov
fdivrl
fucomp
jmp
mov
popf
pusha
jno
pushf
pop
add
movsl
sub
fsubl
jge
aam
ds
sbb
sarl
sub
push
lea
test
fwait
aam
adc
add
mov
push
pushf
and
or
pop
aaa
and
push
rep
test
incl
pop
flds
add
cmp
dec
fmuls
mov
xchg
sahf
jo
mov
insb
addr16
int3
outsb
out
inc
xor
cmpsb
icebp
call
or
in
sbb
popf
mov
orl
pushf
aad
lds
sub
fstl
lods
xor
jmp
push
or
sbb
jno
inc
push
fcoml
sbb
mov
push
xor
ds
sub
loope
fisttpll
jno
loopne
mov
pop
scas
mov
out
xor
lock
ret
mov
lret
dec
lock
adc
leave
insl
call
inc
ror
int3
and
hlt
loopne
fistl
inc
pop
sub
notl
add
mov
shlb
mov
sbb
pop
pop
add
int
roll
aam
icebp
push
in
in
movsbl
in
in
fsubs
adc
aad
icebp
push
dec
xchg
add
jno
lods
icebp
fsubrl
rorb
rorl
sbb
ss
sbb
popf
lock
dec
in
ljmp
in
loop
xlat
dec
lcall
and
cmp
jno
dec
lcall
insl
pop
push
xor
loop
enter
push
mov
int
call
movsl
xchg
scas
mov
mov
pop
dec
mov
push
jb
shl
and
or
imul
mov
xor
mov
sbb
mov
cmp
xor
jne
dec
sub
icebp
shll
adc
adc
int
sbb
xor
and
in
and
inc
xchg
cltd
dec
xchg
cmpsl
in
dec
rcr
aad
movsb
leave
sbb
icebp
jae
pop
gs
and
iret
xchg
inc
roll
mov
mov
loope
pop
leave
xchg
jp
and
pop
cmc
push
pop
xchg
and
adc
enter
sarb
mov
mov
inc
jmp
cmp
sbb
popa
push
mov
inc
dec
sti
imul
xor
cmp
movsl
imul
add
icebp
in
sarb
sbb
adcl
fdivr
and
icebp
pop
pop
jno
shrl
sub
popf
xor
mov
test
xchg
add
icebp
sbb
add
rcrl
mov
loop
jne
push
cld
sarb
out
icebp
xchg
inc
inc
push
add
lds
scas
pop
or
fadds
aad
loopne
dec
jg
test
popa
push
and
int3
dec
mov
sarl
enter
add
dec
ss
mov
adc
vunpckhpd
mov
push
cmp
mov
xor
xor
or
popa
push
adc
pop
mov
cli
sbb
inc
ret
push
test
push
push
cmp
decb
loope
push
inc
lret
inc
sub
xchg
int3
xor
adc
jno
sbb
shlb
fsubl
fsub
sbb
sub
pop
fcomps
fcmove
and
divb
gs
cmpsb
insb
lret
aam
int3
pushf
xchg
aad
bound
setle
mov
pushf
cmpsb
add
movsbl
loope
imul
mov
jge
cltd
push
fadds
sbb
mov
test
in
loopne
mov
aas
xor
test
js
dec
dec
lods
fiadds
enter
popa
enter
or
lock
fldl
xor
loop
adc
dec
mov
lcall
xchg
lds
jno
adc
sub
sub
int3
insl
call
inc
and
imul
in
outsb
fidivrl
xor
in
in
ret
and
xchg
call
lods
fcomi
xchg
in
lea
xchg
or
jb
and
cmc
fnstcw
xor
jbe
ljmp
sbb
fildll
dec
sub
call
out
ss
in
mov
rclb
cltd
sbb
lods
shrl
xchg
pop
js
xchg
subb
movsl
jg
test
push
jg
xchg
cmp
xchg
cmp
xchg
repz
mov
cmp
fsubs
negl
xchg
aam
cmp
mov
pop
roll
cltd
and
sbb
mov
cmp
lret
xchg
cmpsb
lea
inc
adc
mov
and
enter
psubsw
and
inc
mov
ds
rcl
add
loopne
dec
fdivrs
adc
mov
aam
push
clc
jg
cmp
fstl
insl
out
xchg
push
int
push
xor
mov
jmp
push
adc
inc
xchg
ror
jge
cmp
inc
jle
outsl
jl
scas
push
in
cmp
js
jbe
mov
enter
jne
xor
xor
addr16
fwait
lret
repz
sub
scas
xor
push
fldl2t
cltd
fstpt
lock
movsl
xorb
dec
ret
mov
mov
inc
popa
cmp
ljmp
scas
sub
dec
insl
xchg
or
cs
jb
jno
push
sbb
out
sub
lret
fs
and
sub
enter
mov
xchg
pop
mov
into
dec
cmp
insl
dec
sub
and
test
cmp
cltd
enter
adc
jmp
test
jno
cmp
jg
inc
roll
jb
adc
mov
fsubr
mov
stc
push
sub
int3
pop
leave
mov
mov
mov
in
xor
dec
and
cmc
leave
flds
es
dec
outsl
movsb
in
jmp
and
inc
cmp
dec
stc
or
insb
aad
xchg
push
into
aas
push
out
cmp
cltd
insl
adc
loopne
int
xor
in
sbb
popf
push
fs
popa
dec
push
shlb
loope
xchg
jne
and
call
push
popa
mov
xor
add
sbb
lods
adc
jno
mov
push
cmc
sti
adc
xor
int
popa
jmp
mov
inc
xor
adc
call
dec
fsubr
mov
mov
clc
dec
inc
jno,pn
nop
dec
push
push
inc
dec
cs
pushf
shl
and
or
push
adc
jno
in
inc
sbb
mov
clc
push
sti
test
sub
xchg
pop
daa
ud1
push
icebp
popa
jne
adc
push
pop
adc
jp
xor
mov
movsb
insb
gs
jbe
fstl
daa
out
pushf
mov
fisttpl
imul
mov
mov
mov
fwait
xor
dec
inc
imul
inc
int3
lods
fcoms
or
shll
gs
inc
sub
mov
movsl
mov
jno
fxch
mov
loope
jno
adc
xchg
fmull
sbb
insl
in
fstpl
cltd
xchg
in
outsb
push
into
pop
xlat
test
das
mov
adc
mov
sub
adc
sub
mov
cli
inc
xor
in
cmp
popa
fisttpll
imul
fcomp
enter
cmp
aad
and
cmc
rcrb
sub
xchg
or
adc
shl
mov
inc
push
mov
dec
xor
int3
leave
or
lret
adc
jne
fmull
sub
ret
and
lods
in
outsb
data16
insl
cmp
fsubrs
adc
ret
inc
sbb
in
das
test
movsl
add
lock
xchg
xor
dec
fwait
gs
js
icebp
imul
rol
adc
int
mov
sub
lods
and
xor
pop
and
movsl
cmc
fnstsw
pop
mov
rorl
jno
test
rcrl
cmp
popf
enter
adc
leave
xchg
scas
aaa
sbb
loop
fcmovbe
insl
test
incb
lods
pop
mov
pop
inc
jge
lcall
call
push
in
mov
jle
lock
sub
fcoml
xor
sbb
cmp
dec
inc
jne
popa
and
mov
aad
rcl
rorb
pop
dec
push
sarb
xor
cmp
mov
sub
pop
fldenv
dec
push
adcb
loopne
lods
push
shll
jae
sbb
insl
in
pop
adc
loope
mov
mov
add
jg
adc
xor
sbb
mov
xchg
idivb
or
cmp
stos
add
xor
int3
or
mov
pop
in
inc
mov
sub
xchg
jo
loopne
icebp
stos
cmp
in
je
pushf
xor
popa
shll
gs
imul
int3
lcall
xchg
inc
mov
fadd
cltd
push
adc
in
cmc
vpxor
ror
outsb
lcall
mov
repz
mov
clc
sub
inc
cli
movsb
lock
into
ficomps
fdivl
cmp
loopne
inc
cmp
bound
add
test
out
cmp
jne
dec
mov
lods
addr16
lods
in
xchg
loopne
sub
mov
in
mov
cmp
sub
pop
sarb
xor
and
sub
rol
fstps
push
in
xchg
int3
xor
loop
mov
mov
xchg
add
stc
imul
mulb
jle
test
leave
jmp
mov
dec
mov
and
int3
insl
xorl
fsubl
xor
sub
cmp
inc
inc
pop
bound
wrmsr
cmc
test
push
lcall
adc
xor
mov
into
jne
mov
add
mov
adc
mov
pop
and
int3
sub
cmp
pop
xor
les
out
xchg
and
add
pop
into
cli
andb
inc
adc
cmc
movsl
test
and
fldt
mov
in
aaa
or
inc
pop
inc
xor
push
stos
int3
mov
sub
out
aas
pop
shr
or
lock
mov
mov
sbb
jne
fiadds
ds
shll
sahf
add
cmp
rcll
int
jno
gs
xchg
loope
inc
int3
int3
out
dec
shrl
popa
mov
mov
xor
scas
aam
and
shll
call
in
insl
or
aam
dec
lods
push
cmp
out
jne
sub
dec
insl
test
inc
in
adc
ss
sub
pop
orb
and
mov
data16
xor
sarb
xor
xor
jmp
cmp
jbe
sub
push
aas
sub
push
fadds
shl
push
cmp
cmp
and
icebp
sub
and
xlat
idivl
into
mov
int
dec
sub
pop
icebp
xor
aad
pop
fnstenv
jle
cmp
sbb
out
cmp
negb
and
in
ljmp
popf
shr
lea
xor
xchg
adc
sbb
sbb
adc
cmp
mov
ds
mov
dec
or
sub
pop
insl
pop
sub
in
enter
push
sub
outsl
insl
shll
inc
cmp
xor
stos
push
aaa
lock
cwtl
jno
popa
jle
enter
push
in
fcomp
outsb
sbb
dec
pushf
sbb
int
movsl
pop
aad
xor
mov
mov
cltd
loope
popa
sbb
adc
cmpl
insl
dec
ret
jo
sbbb
shlb
pop
mov
sbb
insl
cmp
cltd
lcall
cmp
and
pop
inc
pop
add
imul
sbb
and
adc
aam
push
gs
insl
ds
inc
roll
lds
sbb
dec
in
dec
mov
stc
push
pop
cli
inc
fcom
sbb
test
dec
jne
dec
mov
inc
inc
pmulhw
jmp
mov
cmp
sbb
popf
leave
push
ficomps
xchg
lods
subb
mov
loop
sub
jbe
rclb
les
pop
movsb
pop
mov
aas
or
dec
lock
jne
test
jl
call
or
mov
mov
dec
aam
out
xor
in
std
popa
into
jecxz
popf
sub
into
sbbl
sub
test
dec
push
xchg
jne
lahf
mov
enter
out
lock
jmp
stc
daa
fisttps
ret
loopne
adc
sbb
dec
out
lock
int3
xor
movsb
cmp
sub
rolb
jmp
push
rclb
in
xchg
mov
cmp
and
fdivl
into
push
fldcw
adc
shll
push
aam
in
push
in
out
in
dec
jnp
jle
popa
pop
pop
xor
repz
pop
arpl
movsb
fdivrl
push
mov
int3
mov
dec
in
jae
fmul
mov
outsb
loop
mov
adcl
dec
enter
in
into
lret
lahf
and
sub
mov
iret
filds
test
fsubrl
adc
mov
pop
jne
adc
inc
jle
out
adc
aaa
sbb
pushf
in
inc
xchg
sbb
xchg
pop
call
or
jno
cmp
subb
sbb
test
and
loope
cmp
dec
cld
les
in
cmp
sbb
lock
mov
and
insl
int3
or
lods
stc
test
cmp
clc
xlat
pop
rolb
test
fdivl
sahf
mov
add
xorb
cmp
sub
loopne
push
mov
or
mov
jp
lret
hlt
mov
in
aad
push
mov
in
xchg
mov
icebp
scas
pop
insl
fwait
mov
pop
mov
and
mov
push
push
loop
jmp
into
bound
popa
in
dec
in
xlat
mov
xchg
rcll
shl
rclb
pop
mov
inc
jle
fidivs
pop
pop
lcall
in
int3
mov
int3
imul
into
xchg
dec
mov
loope
add
xor
insb
ljmp
leave
sub
sbb
mov
add
cmpsl
mov
mov
mov
sbb
and
mov
insl
push
jge
cwtl
xchg
pop
lock
sub
jle
ja
out
int3
shll
les
mov
mov
sub
mov
aad
mov
sub
lock
push
iret
sbb
lods
shrl
cmpsl
fxch
mov
xor
lods
mov
int3
adc
push
aad
lods
xor
jne
imul
lods
push
mov
push
adc
mov
movsb
mov
jne
mov
lock
pop
shlb
cltd
dec
cmpsl
push
imul
cli
aad
mov
and
xor
xor
sub
clc
sub
pop
jne
jle
sbb
push
aad
sahf
cmp
xor
xor
add
and
adc
xor
lods
pushf
mov
rorb
cmp
xor
ds
pop
xor
das
mov
stos
mov
popf
call
mov
shl
mov
push
mov
push
in
lods
popa
stc
call
hlt
out
jns
jle
call
shlb
adc
jae
fidivrs
fnstsw
xor
xchg
out
das
out
push
jle
aad
icebp
dec
das
nop
fnstsw
jle
leave
push
mov
mov
das
xchg
iret
sbb
xor
loope
mov
cmp
lods
xor
out
sbb
cmp
das
testb
inc
out
sub
popa
add
arpl
rcll
aad
fcompl
ret
popf
mov
xchg
lock
dec
push
pop
out
aam
test
cmpsl
add
jp
mov
sub
push
f2xm1
popf
jmp
pop
xor
mov
insl
xor
fimuls
int
ljmp
insl
mov
mov
sbb
popa
and
loope
cltd
pop
leave
pop
lret
jmp
add
push
ja
cmp
cmc
bound
sub
imul
loopne
mov
or
cmp
inc
jmp
int
gs
sub
cmp
mov
jne
mov
cmp
pop
adc
rcr
lock
inc
cld
insl
dec
mov
cmc
jg
inc
fcomps
mov
adc
rcl
add
mov
inc
mov
icebp
int
sbb
out
or
dec
fildll
mov
cltd
sub
xchg
mov
mov
pop
in
xor
aad
aam
popa
sbb
push
dec
sub
xor
jl
cvtpi2ps
mov
pop
movsl
lock
mov
jecxz
mov
loop
pop
cmp
cmpsl
pushf
frstor
sbb
stos
xor
push
stos
jne
inc
je
lds
adc
jno
outsb
xchg
inc
pop
imul
dec
in
pop
mov
mov
popf
pop
push
imul
adc
pop
stc
jle
in
inc
or
bound
shl
popa
out
push
fldenv
test
dec
call
popf
xor
int
fmull
sub
xor
stos
mov
mov
push
or
xchg
pop
lds
jno
dec
cmpb
rorl
es
lods
mov
inc
icebp
shl
insl
pushf
test
nop
mov
xchg
adc
scas
jno
int
lods
out
mov
push
test
and
cmp
fnstsw
push
mov
push
rcl
loope
int3
adc
jne
pop
cmc
xchg
movsl
repz
aam
mov
cmpsl
inc
push
or
test
test
cmp
push
sub
xor
add
push
ret
pop
imul
stos
imul
icebp
push
cmp
int
orb
dec
jne
adc
aaa
mov
in
leave
cmc
mov
cmc
pop
lea
int3
adc
push
lea
mov
lods
int3
pop
mov
fstps
push
ja
daa
test
pop
aad
cmp
push
lock
fwait
add
push
ror
or
std
inc
in
test
lahf
mov
sub
push
test
adc
pop
mov
dec
ror
pop
movsl
insl
movd
loope
fstl
mov
or
out
adcl
add
fistps
pop
cmp
je
test
imul
and
lahf
mov
sub
mov
lds
mov
aad
and
popf
in
adc
push
in
mov
jecxz
sub
int
xchg
imul
mov
xor
mov
sub
dec
pop
sub
int
jne
and
cmp
fdivl
dec
sbb
movsb
add
leave
push
fldl
jg
rcl
or
in
sub
dec
fadd
mov
call
ds
adc
and
xor
add
xor
jnp
push
pop
add
setae
dec
loope
imul
loopne
mov
add
fldenv
int3
or
adc
pop
add
lods
movl
mov
shll
outsb
es
lea
lds
nop
pushf
aad
hlt
jmp
pop
sbb
loopne
push
mov
lock
lods
pop
pop
aas
xchg
dec
or
aam
mov
xor
dec
jge
mov
movsl
cltd
lds
xchg
xlat
das
lds
scas
insl
jnp
addr16
dec
add
sub
fdivs
cli
cmpsb
cmp
pop
cmp
xor
adc
push
xchg
xchg
jp
rol
sbb
sub
vpavgb
sub
mov
mov
in
push
jmp
sub
ret
lea
insl
cmp
adc
in
xor
pop
in
lret
push
les
sbb
mov
mov
jecxz
mov
cld
xchg
cltd
pop
cmc
adc
fucomp
loopne
insl
jg
int3
inc
or
mov
mov
popf
in
ja
testb
movsl
mov
cmc
cmc
mov
jmp
adc
int3
xchg
fldz
insb
push
out
jno
insl
sub
inc
fucomp
fists
in
dec
adc
rcll
call
loopne
adc
int
sahf
loope
xor
rol
dec
xchg
mov
lods
jno
mov
ljmp
pop
add
into
scas
and
adc
push
jge
xor
out
sbb
fnstcw
mov
out
cltd
inc
xor
enter
sbbl
cmp
movsl
ds
int
fstpl
mov
jmp
and
and
into
pusha
outsb
or
jle
cmp
jb
xchg
push
xlat
adc
xor
sub
or
aam
dec
cmp
xchg
js
loope
fnstsw
popa
cmp
inc
aad
fldlg2
out
hlt
jns
pop
jge
lock
rorl
add
pop
out
xchg
adc
sub
and
jge
mov
insl
sub
adc
jmp
lods
inc
sub
movsl
mov
rcrb
in
movsl
sub
xchg
and
cmp
jle
insl
and
adc
lods
pop
hlt
popa
cmc
sub
mov
jmp
into
iret
cmc
mov
mov
ljmp
cmc
aad
loopne
out
cltd
xlat
pop
sti
ja
mov
rcr
leave
pop
dec
pop
in
sub
mov
push
sub
add
push
pop
mov
clc
lods
xchg
push
outsb
sub
push
outsl
mov
enter
adc
push
ja
div
and
pop
rclb
sarb
push
mov
pop
mov
loopne
outsl
inc
mov
pop
fucomp
into
fwait
lahf
aad
or
sub
push
into
xchg
adc
dec
movsb
movsb
pop
in
out
mov
int
aas
rol
pop
insb
and
lcall
cmp
xor
cltd
and
mov
int
add
call
testb
aam
sbb
jne
xlat
mov
dec
lea
insb
clc
sub
sub
push
in
lock
aad
push
out
xor
rorb
adc
push
movsl
stos
adc
xchg
xchg
sbb
int
loopne
and
test
sti
je
sub
fstpl
xor
lods
push
cmp
push
ret
daa
inc
jne
aam
jbe
popf
sub
sub
fldcw
fucomp
xchg
aaa
shl
movsb
shll
subb
xchg
in
bound
adc
bound
dec
sbb
movsl
test
add
outsl
xor
push
push
jne
cmc
add
loop
fsubrl
leave
sub
add
cmc
gs
dec
call
xor
push
dec
test
outsl
popf
pop
dec
mov
adc
sarb
push
cltd
cmpl
popf
xchg
push
imul
int3
push
mov
jmp
movsb
icebp
pop
sub
pop
mov
lock
aad
jle
pushf
pop
lock
jecxz
das
or
sbb
pop
xor
jne
xchg
mov
hlt
orb
imul
sub
mov
cltd
cmp
push
pop
adc
sub
mov
leave
mov
insl
pop
dec
lock
mov
pop
xchg
clc
int3
mov
mov
fists
adc
adc
test
popf
jecxz
pop
jno
push
mov
outsl
mov
xchg
loope
icebp
in
push
push
mov
cmp
out
jne
mov
pop
mov
clc
ds
jle
xchg
loopne
xchg
shl
lea
mov
adc
call
push
dec
mov
xor
test
mov
outsb
int3
int
jmp
in
sahf
in
xchg
inc
dec
ds
lods
outsb
in
aas
dec
and
dec
xchg
sub
push
inc
jle
in
lds
ficomps
sbb
mov
sub
sub
mov
inc
and
mov
jl
sbb
scas
cmc
outsb
and
imul
ja
fsubp
je
lds
sbb
aam
jmp
andnps
popa
ljmp
imul
push
mov
popa
loopne
aad
shrl
sti
loope
dec
mov
divl
es
arpl
clc
adc
jle
dec
es
cmp
mov
pop
in
xchg
add
int
inc
sti
clc
into
dec
fcomps
jne
xor
jmp
outsl
pop
test
pop
test
loopne
and
jmp
push
pop
pop
lret
pop
jno
adc
lds
in
xor
loop
sub
xchg
cmc
cmp
xchg
push
popf
xchg
sbb
ljmp
mov
inc
fwait
xlat
xchg
cmp
out
or
fldenv
in
fwait
push
repz
dec
aam
mov
add
dec
adc
jo
shrl
lret
cltd
mov
in
sbb
lock
and
pop
ret
push
repz
sar
sbb
outsb
loopne
sbb
movsb
dec
and
mov
insb
loopne
jl
sarb
jbe
movsl
aad
shll
loopne
mov
popa
xchg
mov
pop
mov
sbb
lds
aad
pop
sub
in
leave
test
popf
test
mov
or
dec
aad
xor
inc
dec
icebp
sbb
sub
popa
movsb
fcom
push
call
in
scas
pushf
xchg
lods
in
insl
jno
lock
std
rcll
xor
lret
sarl
rorl
sub
rorb
lods
xor
int
jne
inc
sub
xor
out
pop
jne
pop
jno
sub
fnstcw
dec
dec
in
jno
cmc
push
mov
leave
sbb
adc
or
cmpsl
into
inc
sti
mov
jmp
shll
adc
aaa
dec
js
sub
orl
icebp
xchg
dec
mov
xchg
sub
rcrl
popa
or
pop
shll
pop
sub
jo
sub
mov
mov
lods
dec
outsb
pop
sub
popf
mov
add
inc
icebp
dec
xchg
into
fsub
jne
jle
mov
ds
aam
outsb
xchg
xor
push
int3
mov
lods
xchg
xor
xchg
push
cmp
call
jp
and
mov
sub
mov
loope
or
in
jne
out
sbb
aaa
lods
fs
jg
add
lods
gs
mov
sub
jne
in
stos
mov
test
dec
jne
sbb
aam
dec
rol
push
and
jmp
in
cmp
inc
pop
or
leave
mov
adc
cmp
inc
inc
xchg
jge
xor
loopne
xor
test
lods
jno
movsl
cmc
adc
cltd
mov
fcmovbe
movups
sub
sbb
sbb
xchg
mov
js
dec
inc
dec
mov
pop
pop
xchg
test
jg
in
aas
subl
xchg
sub
jmp
hlt
adc
cmpsl
leave
aad
push
lock
mov
and
aam
in
pop
xor
loop
add
xor
sbb
mov
lock
dec
movsl
aam
adc
adc
adc
sbb
adc
pop
pop
aad
pushf
xor
nop
inc
mov
sbb
cmc
popa
sbb
int
sub
lds
cltd
aam
xorl
or
addr16
sahf
jle
fs
sbb
mov
and
cltd
lret
dec
sar
aam
aas
test
movsb
push
int
pushf
mov
imul
mov
cmp
inc
and
xor
cmp
push
test
pop
jbe
pusha
in
adc
adc
pop
repnz
int
call
into
sbb
push
sbb
cmp
test
or
and
test
and
xor
out
in
imul
xchg
push
push
jle
popf
lock
pop
aam
clc
imul
mov
push
jmp
xor
or
mov
push
pop
cwtl
mov
cmp
add
data16
pop
nop
adc
mov
stos
imul
rcrl
dec
cmp
icebp
and
inc
jge
leave
adc
shr
mov
dec
out
das
xchg
daa
sbb
popa
xor
hlt
mov
popf
jmp
adc
pop
shrb
fwait
push
sbb
icebp
push
int
or
fstl
loopne
mov
xchg
mov
mov
push
mov
xor
xchg
cmc
mov
fs
dec
sbb
popf
ss
insl
mov
cmp
popa
pop
and
outsl
inc
adc
sar
loope
in
xchg
add
mov
pop
push
sbb
bound
bound
sahf
mov
and
xchg
push
sbb
pop
sbb
mov
inc
pop
cltd
xchg
imul
and
sbb
inc
imul
lret
inc
pushf
mov
xor
stos
gs
sbb
mov
sbb
in
ja
pop
push
pop
push
flds
adc
nop
lret
notl
in
push
movsb
leave
pop
lods
inc
sbb
popf
inc
scas
cmp
xor
sub
and
shlb
and
adc
test
mov
cmp
fdivrs
mov
fdivl
xor
test
int
push
push
lock
cmpsb
fdivrl
push
pop
jg
dec
adc
adc
pushf
mov
jne
sbb
es
mov
xor
adc
sub
xor
daa
cld
sahf
popa
or
xor
aaa
xchg
in
cmc
int3
js
cmp
popa
sbb
pop
dec
cmp
dec
push
xchg
dec
insl
sub
enter
aam
lds
jno
push
test
aad
scas
mov
cmp
fldenv
in
in
xchg
cmp
cwtl
inc
add
lock
subb
inc
jns
in
sbb
imul
mov
icebp
fnstcw
insl
jns
add
hlt
gs
sub
aam
sarl
inc
in
cmp
cmp
dec
dec
call
fstps
cld
in
mov
aam
aad
fsubrl
adc
jno
fnstenv
lock
stos
push
test
rcl
jmp
add
sub
sbbb
fidivs
imul
arpl
mov
inc
shll
in
sub
les
mov
lock
lods
mov
hlt
jne
jmp
cmc
mov
mov
or
call
push
pusha
jg,pn
outsb
mov
sbb
lret
or
pushf
sbb
loopne
gs
mov
dec
addr16
and
fcom
mov
call
pop
insb
pop
movsb
xchg
scas
in
inc
sbb
dec
js
ja
jmp
aam
cs
cmp
mov
je
in
rorl
cmpsb
sbb
outsb
out
add
leave
add
loopne
xchg
dec
inc
xor
push
shl
sub
subb
ja
mov
bound
mov
test
dec
cmp
fsubs
scas
imul
and
aam
scas
movsb
shrl
pop
in
xchg
sub
mov
int3
int
xchg
pop
adc
adc
icebp
cmp
in
push
or
adc
lret
xor
repz
ljmp
push
dec
jmp
mov
and
lods
xor
xor
lods
jl
add
pop
lds
into
xchg
push
shrl
out
add
jmp
xchg
cmp
mov
enter
rcll
lods
fstpt
mov
mov
clc
push
pop
pop
ret
xor
push
mov
xchg
shlb
rcll
cmp
inc
outsb
add
nop
rcr
cmp
aad
inc
and
xchg
in
insl
dec
fucom
lahf
out
outsb
push
mov
xchg
sbb
cmpsl
add
cmc
leave
mov
pop
mov
xchg
test
cmpsb
in
mov
xor
adc
xchg
jle
or
addl
daa
popa
pushf
inc
int3
mov
xor
cmp
sbb
ficoms
daa
call
pop
aas
push
ds
lret
out
and
js
mov
jno
dec
cs
loopne
loope
fwait
int3
mov
add
hlt
dec
fbstp
scas
pushf
pop
jg
jno
sbb
loope
sub
mov
mov
rcrb
mov
leave
pop
inc
mov
aaa
push
inc
cmp
rorl
jmp
dec
lock
push
call
ret
jle
cmc
push
test
outsl
aam
and
mov
jne
or
nop
pop
xor
cltd
jnp
cmc
icebp
les
add
jl
flds
int
push
jne
fldl
mov
pop
xchg
sub
ficompl
adc
cmp
pop
inc
pop
mov
and
xchg
and
cmc
aam
xchg
popa
mov
jne
inc
pop
test
decl
and
jne
mov
call
and
lds
sbb
cmp
mov
inc
pop
in
push
inc
and
cmp
in
adc
mov
xchg
jno
sbb
shll
aaa
bswap
aam
pop
dec
pushf
and
mov
push
out
xor
mov
inc
cmp
mov
inc
mov
popa
and
and
mov
nop
imul
cld
sub
loope
xor
xor
adc
aam
lods
jno
and
test
mov
sub
inc
pcmpgtd
cmc
dec
outsb
cmp
xor
std
and
sub
gs
xor
dec
aam
xor
int
pop
fcomp
jg
pop
loopne
pop
test
shl
or
fucomip
faddl
inc
fstl
arpl
add
push
imul
mov
lods
mov
push
loope
xchg
sbb
in
in
push
jle
push
popf
fcoml
lds
push
jmp
imul
pop
frstor
sub
push
addl
insl
mov
movsl
les
test
leave
and
mov
pop
hlt
mov
fdivrl
es
cmpsb
gs
imul
pop
sub
sbb
ljmp
int
xor
sub
popf
cmp
test
pop
imulb
pop
mov
dec
subb
out
push
iret
xor
shl
lods
out
xchg
outsb
jmp
shr
mov
cltd
lods
push
mov
sbb
in
mov
loop
push
fsubr
ret
mov
jge
mov
push
jbe
popf
adcb
mov
and
cltd
gs
jge
negb
enter
pop
cmp
insl
mov
mov
adc
xor
dec
into
jmp
dec
ret
mov
aad
int
loope
xchg
movsb
out
dec
jne
lods
fildll
shl
test
lods
dec
outsb
mov
int3
fmul
adc
fs
movsl
cmp
fnstcw
lret
xor
mov
mov
xor
int3
xchg
xchg
mov
xchg
mov
xor
jmp
aad
cmpsb
test
ret
cmpsb
sbb
shrl
repnz
jno
sub
cmc
sbb
mov
popa
jne
xor
add
sub
mov
mov
imul
ljmp
int
lret
out
mov
ljmp
mov
mov
lds
out
mov
inc
out
inc
shl
push
sub
jmp
into
sub
popa
vpcmpgtb
mov
outsb
push
mov
fisubrl
out
movnti
xchg
jle
mov
aas
data16
push
jle
daa
adc
jl
pop
mov
push
cwtl
sahf
movsb
push
jle
pop
dec
pop
les
in
sub
icebp
push
mov
pop
jo
popa
pop
clc
sub
enter
lods
mov
pop
mov
enter
jo
rol
push
xchg
shrb
or
aaa
mov
sbb
sbb
insl
pop
jo
gs
mov
mov
or
aam
inc
or
in
movsl
loopne
lds
xchg
fs
mov
dec
in
sbb
sbb
test
pop
xchg
mov
add
hlt
mov
popf
stc
push
js
mov
aad
cmp
test
mov
and
sub
inc
cmc
int
aad
sbb
jne
fs
mov
push
adc
popa
rclb
or
jl
scas
ds
mov
lahf
adc
inc
popf
push
pusha
insl
and
dec
fisttpll
inc
sbb
jle
in
aad
in
add
adc
sub
dec
adc
fcoml
cltd
pop
popf
lods
rorb
lea
insl
stos
mov
adc
aad
sub
movsb
in
or
jecxz
add
mov
or
pop
xchg
stos
jle
mov
cmp
pop
gs
mov
dec
pushf
and
sub
in
mov
pextrw
mov
into
imul
jne
xchg
adc
mov
dec
fs
jl
lahf
fwait
cld
sub
leave
mov
cmp
call
cmc
sub
jne
insl
cli
cmp
sub
or
pop
aad
andl
inc
leave
cmc
dec
insb
loope
popf
lds
imul
mov
add
nop
push
mov
push
cmp
mov
ljmp
icebp
dec
call
fildl
int3
xchg
imul
jne
xor
sti
cmp
add
pop
sbb
push
inc
imul
rol
leave
push
sbb
adc
aad
insl
jg
cld
fwait
sbbb
jge
test
mov
rcll
fidivs
call
popf
leave
cmp
and
mov
ds
xor
test
in
movsl
pop
and
call
mov
cmp
fcmovb
gs
pushw
cmp
pop
outsl
push
sub
lds
in
pop
fcoml
movsl
enter
mov
cmp
pop
shll
sub
loope
hlt
int3
dec
fsts
push
xor
fmuls
fstps
add
pextrw
xor
aad
movsb
jbe
and
popf
aam
mov
and
dec
cli
cltd
pop
cmp
dec
dec
pop
fistpll
xlat
scas
rcrl
xchg
or
xor
push
cs
scas
mov
mov
xchg
ror
inc
sbbl
dec
adc
and
mov
push
sub
push
cltd
mov
decl
inc
add
sub
pusha
adc
loopne
mov
xor
aaa
sarl
fnstsw
fmull
mov
adc
cmc
cmp
mov
cmp
jle
movsb
sub
sub
push
inc
or
insl
and
or
out
cld
adc
lds
mov
repz
cltd
enter
xchg
cmc
cmp
xchg
enter
mov
dec
mov
jne
cmp
xor
call
gs
sti
mov
daa
fst
cmp
loope
out
not
mov
xor
sbb
fstps
sub
jno
std
mov
in
dec
movsl
mov
pop
lods
cmp
push
mov
inc
jmp
mov
sub
rcrb
pop
dec
adc
xchg
xor
das
int
sbb
popa
jmp
dec
scas
xor
in
lods
pop
scas
add
dec
popa
shrl
ror
xor
mov
lahf
fmuls
mov
adc
sub
lds
repnz
icebp
dec
aam
adc
fildll
xchg
adc
and
aam
leave
insl
or
pop
inc
and
dec
mov
loope
in
add
xor
faddl
xchg
mov
mov
shrl
cmp
cmp
int
call
add
mov
cmp
jne
xchg
mov
iret
cltd
leave
mov
insl
fisttps
js
and
imul
fsubrs
add
popf
sbb
ss
mov
dec
out
pop
int3
sbb
leave
xchg
mov
mov
adc
int3
and
shrl
push
imul
shrl
xor
jae
popa
loope
dec
rorb
xchg
adc
mov
cmp
inc
ss
sub
add
fcompl
push
pop
sbb
or
xor
fcoms
xchg
xchg
sbb
pusha
jmp
xchg
in
out
cmp
mov
xchg
dec
inc
and
bound
mov
sub
cmp
incb
xchg
sbb
push
cli
or
mov
jmp
lcall
or
pop
jnp
sbb
in
xchg
push
mov
insl
jecxz
rcrl
jne
mov
jle
xchg
shl
dec
movsl
into
inc
ret
cld
lahf
lock
leave
pop
pop
sub
insl
sub
push
outsl
add
and
shll
ljmp
mov
int
scas
inc
out
gs
mov
mov
test
mov
int
xlat
hlt
mov
insl
cmp
xchg
push
imul
lods
lods
xor
cmc
adc
int
mov
in
inc
sub
xchg
sbb
loope
leave
fs
sbb
test
aad
or
clc
hlt
popf
rorl
cmp
jbe
or
mov
adc
mov
sbb
cltd
in
sbb
xor
inc
sub
push
xchg
icebp
xor
ja
add
jle
jne
cmp
sbb
jmp
rcll
mov
cmc
fs
inc
and
in
fcom
push
loopne
lcall
and
lret
rolb
sbb
std
call
lods
push
sbb
popa
fstl
sahf
loope
std
jmp
mov
and
out
ja
loope
pop
xor
mov
xchg
mov
sbb
mov
scas
pop
lods
mov
int
clc
mov
call
pop
gs
push
sbb
mov
mov
jmp
adc
cli
loopne
iret
scas
ja
xchg
mov
xchg
cltd
ljmp
lods
xchg
mov
popa
jecxz
and
fs
or
mov
push
xor
sbb
cmp
popf
insl
and
aam
fs
imul
icebp
fnstsw
sbb
xor
mov
and
cmp
jl
lods
lds
adc
icebp
sub
push
lea
rcll
aad
jne
inc
adcb
sbb
ja
xor
xor
cmp
icebp
loopne
mov
mov
int
push
in
push
jne
lods
sbb
xchg
xchg
xor
xchg
mov
int3
inc
dec
enter
fisubrs
mov
arpl
dec
fdivl
hlt
and
jle
insb
fs
cmp
mov
rcr
loope
aam
fldln2
xor
sbb
icebp
out
faddl
imul
repz
fsubr
mov
sbb
cli
adc
mov
aad
cmc
add
insl
xchg
enter
movsl
imul
in
push
fmul
xchg
shr
gs
popf
cmp
lods
lock
xor
sbb
add
jmp
int
test
adc
scas
test
push
dec
pop
test
jo
and
std
aas
mov
rol
loopne
inc
imul
pop
adc
loopne
scas
shrl
lahf
mov
cmc
frstor
in
testb
cmc
cmp
lds
push
mov
mov
push
mov
dec
xchg
xor
insl
lods
add
in
inc
in
fcoml
lock
pop
dec
mov
or
pop
sub
cmc
into
movsb
mov
jne
mov
cmpsb
jbe
adc
cmp
lock
xor
in
in
int
rcl
dec
test
xchg
lock
int3
aad
sbb
mov
mov
push
in
fstl
sbb
pop
insl
pop
sbb
mov
push
jecxz
sbb
hlt
roll
adc
outsb
sbb
sbb
sbb
loopne
inc
int3
aad
mov
leave
lods
mov
mov
mov
cld
jno
vpandn
adc
popf
xor
mov
inc
in
ror
mov
sub
insl
popf
dec
aad
test
pop
push
loopne
cmp
pop
out
push
sbb
jle
fisubs
lahf
pop
sbb
fwait
lock
jae
xchg
xchg
add
icebp
into
xchg
pushf
popa
in
pop
gs
xor
enter
add
leave
shlb
icebp
xchg
hlt
or
test
int
cmp
dec
add
std
jge
lods
sub
loope
mov
arpl
pop
or
xchg
sub
xchg
movl
or
cmp
inc
cmc
lods
scas
sbb
dec
shll
popf
pushf
cmc
in
pop
out
xor
inc
xorb
mov
aas
orb
dec
cli
leave
mov
test
inc
flds
push
gs
sbb
sub
in
or
push
call
cltd
fisttpll
xor
cmp
call
ret
lcall
ss
mov
mov
xchg
mov
lock
loope
mov
jnp
int3
fcomp
imulb
popa
cmp
adc
pop
ret
pop
cltd
std
lock
das
movsb
jns
icebp
je
rolb
cmp
in
cmp
xor
out
mov
or
cmp
into
sbb
insl
mov
out
xor
call
sbb
or
cmpsl
call
test
xor
dec
inc
dec
mov
cwtl
sbb
rcrb
push
int3
push
cmp
xlat
in
add
les
mov
fsubr
mov
dec
xchg
pop
icebp
inc
popa
xchg
sub
cmc
in
adc
xor
xor
dec
mov
pop
mov
bound
dec
gs
dec
cmp
icebp
xlat
xor
jno
mov
test
pop
nop
repnz
or
push
lods
call
out
sub
pop
fdivr
test
idivb
jmp
popf
pop
cmc
adc
mov
in
adc
lds
cmp
arpl
inc
popa
leave
sbb
ror
pop
inc
dec
cmovs
cmc
stos
xchg
adc
rcrl
push
xor
add
and
sub
mov
pop
movsl
imul
push
adc
in
jbe
lock
mov
aad
shrl
jmp
push
mov
dec
xchg
cmp
test
jno
xchg
pop
xor
popa
dec
out
dec
cmp
enter
mov
insb
popa
jle
push
mul
insl
inc
xchg
pop
xor
sbb
sub
sub
push
inc
test
xchg
popf
call
in
adc
sbb
xchg
push
mov
test
sbb
adc
mov
jecxz
stos
jle
notl
roll
fs
mov
dec
push
gs
lds
lods
shl
loop
and
jl
jg
mov
shlb
test
sub
hlt
push
scas
rcl
dec
or
inc
cmp
dec
jmp
pop
enter
xchg
jg
scas
pop
sub
push
shll
fcoml
shr
popf
sub
push
jno
cltd
testb
sub
movsl
dec
xor
in
in
dec
insl
adc
jns
test
in
in
int
imul
push
mov
mov
repz
ja
psraw
sbb
inc
outsl
inc
lcall
aad
cmc
sbb
int
sbb
aad
push
rcll
dec
pop
mov
cmpsb
enter
ljmp
mov
test
imul
adc
and
pop
insb
xor
xchg
out
shll
aam
insl
sbbb
shlb
aad
int
adc
and
xchg
xor
cli
lock
xchg
inc
cmp
jo
inc
jmp
insl
in
daa
fidivrs
enter
lock
lods
fucom
out
test
jl
mov
ds
dec
into
je
data16
xor
andl
orl
mov
or
int
mov
lock
lods
popf
in
pushf
dec
or
mov
push
mov
sub
mov
mov
cs
movsl
jmp
shrl
int3
dec
pop
pop
lods
mov
call
push
movsb
ds
in
xchg
icebp
rorl
rolb
lds
add
ret
addb
sbb
lea
jno
jge
mov
adc
lds
dec
bswap
cmpsb
push
adc
mov
enter
loope
test
lret
mov
pop
sub
roll
mov
mov
loope
dec
leave
repz
imul
ljmp
pushf
pop
xchg
out
popf
jmp
add
xchg
sub
int3
or
mov
push
daa
outsl
movsb
test
ds
insl
mov
xchg
and
in
push
or
iret
sub
fstp
mov
xlat
dec
div
jno
in
outsb
jnp
sub
jl
push
popf
mov
sbb
jns
adc
leave
push
idivl
xlat
icebp
fs
mov
pop
cltd
mov
and
jmp
xchg
enter
fcompl
jne
and
mov
das
adc
adc
xor
test
mov
dec
add
lds
loop
cmc
adc
aad
or
ja
imul
in
xchg
jno
cltd
pop
push
mov
test
int3
ss
and
xor
and
mov
adc
subl
clc
adc
cltd
inc
mov
adc
int
xor
inc
mov
sbb
adc
shlb
insl
sti
out
xchg
aam
clc
cmc
shl
fnstcw
aaa
fdivl
jle
sti
fcoms
lock
hlt
mov
cmp
rol
xchg
mov
cmc
adc
insb
out
pop
mov
lock
cmpsb
cmp
pop
sbb
mov
xchg
sub
mov
jno
shll
int3
mov
shl
out
or
push
aad
dec
leave
jno
sbb
pop
insl
jne
sbb
loopne
inc
push
int3
into
cltd
stc
xor
mov
jne
dec
dec
loop
cltd
fistps
or
lods
cs
add
mov
cmp
and
ficompl
negb
fisubl
fwait
icebp
dec
add
fldl
jno
or
xchg
jle
mov
test
sbb
cmp
shrb
nop
mov
mov
cmc
mov
sbb
cltd
xor
dec
xchg
push
sbb
cltd
adc
int
xor
inc
ror
outsb
jmp
movsl
cmp
pop
mov
das
aad
jne
inc
lods
les
pop
gs
rcrb
in
mov
je
pop
lea
inc
cmp
or
movsb
mov
cmp
mov
je
jno
mov
jecxz
xor
sbb
in
insl
pop
sbb
out
movsb
inc
and
mov
push
mov
lods
in
loopne
jno
inc
mov
mov
lds
adc
movsl
int3
and
dec
pop
mov
fcmovne
and
lock
mov
sahf
cmp
stos
xchg
scas
push
xor
adc
and
lret
data16
negb
sub
xor
sub
lds
pop
imul
push
adc
in
fstps
xchg
mov
in
dec
dec
mov
push
adc
pop
push
cmc
cmc
push
gs
dec
mov
adc
fsubrs
loope
divb
cmp
xchg
push
or
dec
pop
popa
cmp
adc
dec
dec
shll
jne
in
jbe
xchg
vmovd
sub
sbb
mov
popa
imull
mov
repz
sub
adc
dec
jmp
sbb
add
mov
fildll
sub
mov
out
sahf
sbb
icebp
insl
inc
fnstsw
fcomps
mov
addr16
inc
enter
pop
repz
call
inc
push
adc
loope
sbb
inc
in
popa
pop
or
push
xor
pop
sub
adc
xchg
rclb
cmp
push
sub
push
fstpl
jno
and
xrelease
cli
mov
jbe
enter
inc
mov
mov
sub
sbb
adc
leave
sarb
mov
adc
dec
mov
sbb
push
or
sbb
push
imul
mov
add
into
pushf
cmp
das
xlat
adc
int3
aas
loope
and
mov
lods
jge
mov
sub
adc
shl
sub
cmp
jo
and
leave
packssdw
pop
mov
scas
add
sbb
xchg
test
inc
sbb
cmp
add
mov
xor
cmp
shl
or
loopne
and
loope
popf
pop
negl
sti
int3
dec
fdiv
insl
and
mov
jecxz
stos
dec
push
jno
cs
xchg
pop
popa
mov
lock
pop
cltd
aad
or
inc
sti
add
mov
xchg
and
dec
sub
lock
lds
loopne
sbb
mul
push
cltd
mov
cs
inc
pushf
and
pop
into
adc
call
mov
jg
and
xor
insl
push
lods
inc
adc
fucomi
call
sub
jo
in
mov
mov
incl
add
in
shrl
inc
sub
das
int3
shlb
cli
sbb
inc
aas
pop
loop
sbb
xor
lea
cmp
arpl
xor
fcomps
enter
fldenv
mov
sub
loop
scas
cmp
fcompl
fadds
inc
pop
fdivl
loopne
frstor
xchg
fldcw
into
popf
cmp
pop
xchg
int
sbb
xchg
push
mov
loopne
jmp
sub
xchg
gs
lea
cmp
xor
popf
add
jp
adc
mov
shrb
dec
sbb
xor
idivl
shrb
mov
repz
stos
fs
dec
hlt
sbb
mov
shrl
movsl
int3
andb
outsb
push
mov
sbb
sbb
ror
lds
dec
clc
xor
mov
dec
pop
in
xor
push
outsl
mov
cmp
cmp
pop
out
or
cmp
push
int3
mov
lds
push
pop
push
xor
enter
jno
rol
xchg
pop
loop
push
push
pusha
insl
sbb
aaa
lds
push
inc
hlt
pop
loope
xchg
add
push
mov
iret
gs
push
mov
test
out
push
hlt
leave
mov
inc
out
sub
dec
and
scas
add
pop
xchg
dec
and
in
mov
xor
add
mov
inc
sub
sbb
adc
adc
jno
xchg
sti
mov
and
in
bound
and
jg
pop
out
and
int3
mov
lock
rep
ljmp
and
push
mov
inc
sbb
dec
outsl
hlt
xor
mov
pop
lea
dec
jg
cmc
jno
sub
shl
ror
xchg
push
pop
scas
cmp
mov
call
cltd
cmc
adc
shlb
xchg
sbb
dec
inc
out
sub
and
out
pop
rcr
mov
fst
pushf
xor
int3
push
out
movsb
sub
lods
int
fsts
inc
adc
nop
and
addr16
in
testl
fistl
pop
inc
xchg
xor
movsl
xchg
dec
rcll
rclb
imul
in
lds
fisttpll
out
or
add
loopne
gs
cmp
dec
mov
in
pushf
nop
jg
xor
cmp
mov
shrl
test
in
fdivs
sbb
cmp
fdivrl
int3
xor
adc
aad
pop
dec
cltd
ja
or
xchg
push
mov
sbbl
xchg
sub
stos
or
adc
loope
int
and
mov
rcrb
mov
and
aam
adc
nop
dec
enter
pop
fsts
in
push
insl
mov
dec
aad
inc
rol
aas
fistpl
loopne
push
fstpl
dec
in
jnp
mov
addr16
mov
mov
in
cmpsb
inc
call
and
xor
push
sar
mov
popa
in
ss
loope
test
dec
out
mov
mov
push
lds
sbb
orl
int
sbb
fmull
and
imul
push
xchg
sbb
testl
adc
in
xor
sbb
enter
frstor
sbb
movsl
adc
adc
movsl
xchg
inc
push
cmpsb
sarl
sbb
icebp
cs
and
jo
sub
push
sub
xor
push
cmp
jge
jge
pop
insl
in
rol
mov
jp
cltd
pop
outsl
insb
xor
and
push
xor
push
mov
adc
adc
in
sbb
dec
popa
sbb
adc
sbb
int
in
in
call
int3
add
cmp
imulb
jno
cmp
fcomi
and
push
sbb
shrl
dec
cmpb
daa
dec
sub
rcrb
bound
push
enter
je
and
les
jle
in
and
xchg
icebp
adc
sbb
pop
nop
rorl
lods
out
xchg
xchg
notl
adc
mov
int3
push
and
cmp
in
cmp
push
lods
lods
ljmp
rorl
xchg
or
in
mov
lds
test
jno
pushf
adc
sbb
adc
xor
add
test
lock
fbld
lea
inc
cltd
push
cmc
mov
sbb
icebp
pop
mov
or
sub
push
push
push
test
arpl
neg
jno
nop
xchg
pop
push
sarb
in
xchg
push
add
ficoml
dec
popf
xchg
pop
push
loopne
dec
adc
pop
or
and
rcl
sub
push
enter
add
push
cltd
push
in
orl
lods
mov
fcomps
cmp
imul
and
jle
pop
jnp
dec
rcr
nop
fmul
stos
test
loop
stc
mov
jge
cs
insl
icebp
jl
enter
clc
cmp
cmc
in
iret
pop
scas
sbb
cmp
sbb
int
xlat
sub
fadds
adc
rcll
dec
and
mov
sub
rolb
sbb
pop
call
fwait
leave
xchg
in
dec
xchg
lahf
rcl
in
jecxz
leave
aam
int
jno
mov
repnz
xchg
repnz
test
adc
ficoml
adc
pop
mov
hlt
and
mov
cmp
mov
orb
cmp
fadds
push
or
cs
mov
pop
xchg
shr
sbb
rcll
clc
insb
mov
cltd
fxch
push
rcr
cmp
loope
data16
cmp
insl
imulb
stc
scas
idivl
out
xchg
and
movsl
mov
xor
lret
lods
jne
fisttps
lock
lods
inc
std
lcall
outsb
roll
call
cmp
fdivrl
or
inc
rcrl
aam
or
lahf
lret
cmp
adc
mov
mov
out
jmp
cltd
lods
pop
rorb
dec
jl
push
xor
fadd
int3
adc
cltd
and
jmp
jno
pop
adc
cltd
ror
xchg
mov
jle
add
cmp
sub
loope
daa
sbb
popf
int3
jb
xor
popa
jmp
xchg
dec
imul
add
cmc
cmp
inc
cltd
xor
mov
fsubl
fs
rcrb
sbbl
cmp
in
in
lret
ficompl
dec
adc
sub
sbb
jae
adc
lret
xchg
cmp
sub
in
xor
int3
ficompl
and
push
xor
push
inc
and
adc
aad
and
insl
cltd
icebp
cmc
push
mov
or
xchg
xchg
xlat
jmp
mov
mov
mov
cltd
sub
cmp
adc
mov
xlat
fisttpll
adc
int
imul
movsl
jle
and
repz
jge
mov
es
shr
test
rol
inc
bswap
cmp
jnp
ljmp
out
in
mov
jnp
popf
loope
shll
xor
mov
mov
mov
push
cmc
in
sbb
xor
pop
inc
xchg
rorl
scas
add
and
jge
rcll
push
dec
in
insl
in
pop
and
xchg
icebp
imul
jmp
dec
or
xor
xor
fs
cmp
loopne
and
cmp
lret
sbb
and
push
cmpb
pop
xor
push
iret
mov
ret
mov
enter
xchg
adc
sbb
call
ds
lods
sub
jp
sub
or
das
leave
mov
mov
fnstenv
sahf
sub
mov
push
cld
push
mov
lock
pop
dec
aam
or
cltd
mov
dec
dec
lea
sub
jnp
xchg
mov
adc
rorl
jmp
push
popa
cmp
cmp
dec
add
lds
inc
mov
scas
nop
dec
adc
int3
cmp
pop
imul
pop
adc
fmul
sbb
xchg
adcb
mov
out
imul
mov
in
mov
pop
pop
adc
mov
int
pop
fwait
xchg
addr16
jge
das
lods
mov
sbb
mov
mov
adc
xchg
and
xchg
inc
xchg
inc
pop
les
sarl
cmpsl
in
inc
adc
in
mov
insl
jno
sub
popf
test
bound
jle
lock
inc
popa
sahf
lret
jge
insl
gs
mov
push
dec
inc
movsl
xor
inc
pop
push
enter
mov
xor
pop
xchg
jle
mov
push
leave
jge
js
movsl
cmpsb
push
push
cmc
aam
es
mov
jne
sbb
xchg
rcrl
popa
rcr
int3
dec
movsl
mov
sub
push
mov
jae
loope
cmp
add
mov
sub
aad
imul
popf
adc
aad
pop
dec
aam
in
cmc
sub
add
cmp
dec
cmp
es
inc
mov
or
adc
jno
int
mov
addr16
mov
mov
xor
pop
inc
insl
insl
insl
into
hlt
movsl
cmpsb
mov
stc
mov
outsb
bound
cmp
dec
pop
cmp
pop
inc
sub
or
leave
aad
dec
cmp
insl
jle
jne
push
insl
fildll
dec
fs
aam
fsts
xchg
arpl
loop
mov
mov
push
jle
pop
pop
and
mulb
adc
pop
cmp
and
xchg
mull
xchg
and
aam
push
sub
push
sbb
icebp
xchg
popa
loope
jle
lret
sbb
fs
pushf
and
call
shrb
shl
roll
xor
iret
lret
dec
in
fmul
push
clc
cmp
lods
jne
rcll
imul
pop
aad
lret
in
and
xchg
in
imul
lock
xchg
dec
in
and
push
jno
jmp
adc
movsb
lods
mov
sub
aad
dec
fwait
movsl
xchg
mov
cmp
int
sub
dec
insl
popf
jmp
popf
outsb
mov
ss
leave
xchg
mov
mov
sbb
clc
and
jne
cmp
fdivrs
inc
ss
pop
cmpsl
in
out
push
or
push
sub
xorl
fprem1
pop
lock
jg
dec
jbe
mov
or
jmp
icebp
push
push
cmp
cmc
cmp
xchg
push
pop
sub
test
out
pop
mov
jle
mov
and
pop
nop
cmp
xchg
test
shll
in
adc
fscale
int3
ror
pushf
mov
mov
pop
in
adc
je
call
inc
mov
jnp
outsb
lock
gs
movsl
mov
fstpl
xchg
jnp
add
insl
and
lahf
mov
iret
in
aam
sub
mov
gs
lock
mov
dec
aam
sbb
in
pop
and
adc
lock
aad
and
pop
inc
sbb
jno
std
jmp
mov
stos
ja
lods
cltd
out
jno
int3
xlat
std
ret
lods
rorl
or
cs
jecxz
decl
mov
inc
mov
les
sub
gs
sbb
jno
mov
mov
bound
andb
mov
add
cmp
inc
mov
push
scas
sarl
dec
sub
sbb
push
ror
jns
out
sub
fst
push
add
popf
inc
and
je
sbb
mov
inc
mov
or
cltd
aad
xchg
lods
inc
addr16
lock
in
and
pop
mov
lcall
int
xchg
pop
adc
inc
mov
rorl
shl
mov
dec
lds
nop
loope
inc
int
popf
sbb
leave
and
xchg
dec
mov
push
imul
lods
adc
mov
lods
inc
mov
icebp
mov
cltd
mov
icebp
inc
cmp
lret
add
adc
add
xchg
sub
push
scas
loope
add
mov
inc
in
das
mov
push
pop
mov
inc
cmp
int3
adc
xchg
cmp
mov
fstp
popa
iret
in
in
mov
aam
inc
push
incl
movsb
cltd
enter
mov
inc
loope
imul
imul
icebp
and
pop
lock
cltd
sbb
sbb
adc
rcl
mov
fstpl
push
xchg
or
icebp
jmp
xchg
popf
loop
int3
ljmp
adc
leave
mov
pop
cmc
mov
xchg
aam
lock
int
and
pinsrw
jmp
push
xor
divb
mov
pop
test
xor
in
adc
in
inc
imul
xchg
insl
fwait
lds
inc
aad
jmp
mov
neg
int
or
popf
dec
jle
aad
jge
sahf
scas
push
dec
movsb
adcb
cmp
jle
scas
sub
movsl
jno
and
and
repz
stos
int3
loope
outsb
in
mov
pop
jbe
cmp
add
push
fcmovnb
shl
sub
gs
gs
pop
xchg
adc
jno
push
inc
fisttps
xchg
xor
push
sub
inc
sbb
in
int3
imul
in
adc
mov
and
push
dec
iret
int
add
repz
lcall
adc
aam
bound
fdivrs
or
bsr
fidivrl
pop
dec
and
shlb
jge
loop
xchg
adc
fsubrs
pop
mov
xchg
jb
shrb
iret
cmp
push
add
lods
add
cltd
lds
aad
scas
in
into
push
or
rolb
int3
lds
in
cmp
scas
je
xchg
push
cmp
mov
sub
insb
fdivr
xchg
loopne
push
jno
inc
sub
stos
mov
into
inc
fcmovnbe
jne
aad
cmpsl
cmp
rcrl
lds
fld1
dec
xor
adc
and
icebp
sbb
cmp
lock
push
int3
dec
push
movsl
xor
sub
pop
xchg
dec
inc
mov
in
xor
mov
fnstcw
pop
dec
dec
jb
xchg
nop
dec
cmpsl
inc
xor
jmp
int3
cltd
sub
pop
shlb
lods
decl
cmp
pop
test
lcall
mov
and
shlb
call
icebp
and
cmp
notb
shl
adc
lea
flds
gs
mov
out
jl
mov
pop
int3
sbb
inc
fmull
adc
sbb
cmp
call
in
int
adc
popa
adc
lea
push
pop
dec
lods
push
subb
add
xor
fnsave
aaa
cmp
push
jmp
call
cmp
or
dec
mov
dec
aaa
sbb
aad
iret
in
popf
xor
aad
mov
dec
leave
mull
pop
cmp
icebp
gs
jne
and
loop
jecxz
cmp
leave
add
int3
xchg
xchg
adc
stc
dec
movsb
sbb
cltd
or
jne
push
and
sub
add
inc
push
adc
xchg
popa
fld
loopne
pop
imul
adc
icebp
mov
daa
adc
xchg
sbb
or
xchg
es
orb
aam
int
mov
and
fldcw
inc
test
fwait
in
gs
insl
lock
jmp
lock
scas
mov
loop
out
mov
adc
ficomps
out
adc
sub
in
leave
push
push
xor
sub
aad
cmp
mov
cltd
bound
push
int3
adc
xchg
int3
fs
sub
test
inc
and
mov
pop
push
pop
dec
fisubrs
and
in
pop
loopne
jp
jle
enter
popf
xchg
mov
in
add
pushf
vpcmpgtb
add
int
xor
mov
and
inc
fcompl
sbb
dec
sub
push
fdivs
dec
icebp
mov
sub
cmp
cmc
aam
in
mov
mov
pop
cmp
fsubs
xchg
dec
inc
push
test
mov
adc
call
pop
sarl
and
mov
fsub
sub
test
jnp
ds
inc
adc
stos
rcr
add
fisttpl
xor
dec
xor
shrl
mov
test
cs
xchg
adc
jns
ret
mov
dec
dec
bound
ret
int3
add
mov
mov
and
in
push
in
frstor
loope
stc
out
loop
xor
pusha
shll
dec
xchg
jno
pop
and
xchg
loopne
or
xor
shl
mov
cltd
ja
mov
ss
pop
aad
in
sub
mov
sti
mov
mov
push
and
and
inc
in
in
sarb
inc
inc
sub
clc
aad
cmc
aad
lods
cmp
and
cmp
dec
push
dec
jne
pop
mov
adc
inc
rolb
imul
paddw
int
icebp
int
sub
cmp
adc
fsub
rcl
xchg
gs
sbb
leave
mov
popa
cltd
pop
xlat
adc
cmc
mov
push
bound
pop
fstl
dec
stos
pop
xor
aaa
or
aam
test
inc
sbb
push
sbb
sarl
insl
imul
bound
gs
lods
fcoml
iret
inc
ret
js
cmp
leave
shll
fwait
sbb
dec
sbb
iret
fildl
and
shll
aam
pop
xchg
js
jle
lret
xor
mov
pop
or
jle
dec
dec
add
cmc
inc
pop
popa
sarl
es
loope
je
lock
xlat
mov
cmp
push
cmp
lods
cmp
les
adc
aam
outsb
mov
int3
into
xchg
inc
jecxz
dec
or
adcb
dec
pop
outsl
cmp
std
jmp
fprem
insl
pop
rcr
mov
sbb
cmp
repz
repnz
stc
insb
inc
in
push
std
sbb
dec
int3
outsb
aam
jo
xor
jne
fimuls
xchg
lods
sub
or
fmul
pop
std
roll
cmp
mov
shrl
push
movsl
xchg
push
in
call
int3
xlat
lds
jecxz
test
sbb
movsl
dec
lahf
ss
in
mov
out
fwait
pop
out
popa
push
pop
dec
xor
and
xchg
adc
out
mov
dec
xor
mov
and
popf
mov
ret
sbb
insl
arpl
call
int3
aaa
mov
pop
sbb
mov
aam
cmc
mov
cwtl
mov
inc
sub
sbb
rolb
lret
ficoms
jle
aam
pop
xchg
out
mov
cmc
push
push
inc
int3
jle
shlb
xor
and
mov
scas
cwtl
inc
jle
scas
mov
bound
jle
scas
pop
cmpsb
divl
cmpsb
fistps
scas
mov
cmpsb
mov
jle
pop
stos
cmpsb
pop
inc
jle
lret
test
int
adc
cmc
inc
jmp
add
adc
xor
insb
inc
fildl
test
andb
in
sarb
pusha
out
inc
jle
pop
sarb
pop
sub
les
or
cmp
inc
push
aad
xchg
and
fdivr
cmp
fsubrs
popf
mov
lock
stc
repz
dec
loopne
je
mov
fsubs
cmp
cmp
in
loope
mov
jmp
fnstcw
outsb
das
cmp
jmp
pop
lret
push
sub
jmp
add
cmp
mov
mov
sbb
call
jmp
dec
jnp
push
adc
and
adc
push
shr
sub
cmp
fstl
pop
sub
fistpll
loopne
jno
popf
mov
mov
push
mov
std
dec
cmc
cmp
xchg
fcoml
int3
test
add
adc
ljmp
aam
mov
gs
inc
mov
test
xor
popf
lcall
mov
gs
rorb
fcom
loope
add
sti
test
test
jne
pop
fdivrs
test
cmc
dec
adc
push
les
fmuls
adc
sbb
push
fdivs
loopne
sar
pop
movsl
popa
ret
hlt
mov
dec
adc
popa
adc
xchg
stc
lds
mov
in
fstps
push
xchg
sarb
sbb
popa
adc
push
cmp
fs
imul
adc
int3
and
imul
and
sub
aad
pop
xor
call
push
push
scas
and
enter
pushf
pusha
inc
in
xor
add
push
jne
push
leave
xor
dec
aad
jne
popf
xchg
enter
lock
loopne
cmp
inc
xor
sbb
popa
int
icebp
leave
jmp
movsb
pop
xchg
in
pushf
js
shll
test
loop
iret
inc
mov
sbb
jne
fadd
div
inc
mov
push
pop
jbe
inc
mov
and
int
cmp
scas
jg
mov
xor
cmp
movsl
dec
mov
lods
dec
fmul
fs
leave
mov
mov
rcrl
pop
sub
xchg
imul
lods
clc
icebp
pop
push
leave
push
pop
adc
cmp
dec
xchg
sbb
push
rol
push
outsb
sub
fcoml
loope
cmp
add
icebp
popf
or
cmp
jmp
aad
loopne
adc
shlb
insb
call
loope
mov
sub
mov
popa
push
sbbl
sbb
mov
cmc
call
out
and
cli
push
dec
lcall
icebp
cmp
into
loopne
cmp
rcr
pushf
cmp
getsec
push
ja
sub
jl
mov
adc
sti
xchg
es
lds
jmp
xor
sub
hlt
mov
popf
and
sbb
mov
add
fsubr
leave
push
xor
in
and
mov
sub
or
add
flds
sub
movsl
aam
dec
push
aad
mov
cmp
mov
shlb
outsl
int
jecxz
xchg
lods
xchg
and
iret
in
cmp
mov
std
call
and
mov
shlb
popa
dec
test
pop
fmull
and
in
in
adc
mov
loopne
mov
mov
pop
jne
cltd
push
mov
xor
rcrl
xchg
outsb
aad
lahf
inc
mov
dec
das
inc
xchg
shlb
enter
dec
mov
leave
xor
in
lods
stos
pop
jne
int
in
mov
mull
dec
lret
jle
and
mov
lods
cmp
fimuls
dec
lock
sub
lock
sub
cltd
push
adcl
lock
cmp
add
bts
push
add
loope
adc
in
mov
ljmp
fstps
mov
popa
das
test
sub
out
fsubrs
pop
fs
xchg
jmp
imul
inc
push
cmc
cld
mov
leave
jne
xchg
loop
addr16
idivl
xchg
popf
repnz
lods
cltd
jle
dec
test
or
inc
cmp
ljmp
xchg
fs
mov
inc
insl
dec
pushf
and
insb
sbb
in
xor
mov
lods
rcl
outsb
rorb
lock
sbb
popa
add
xchg
call
and
in
cltd
lods
add
and
repnz
mov
icebp
inc
movsb
test
pushf
mov
cmp
scas
dec
faddl
iret
push
sbb
pop
pop
cmp
jnp
xor
pop
sub
loopne
sub
mov
dec
pop
insl
dec
rcr
jle
adc
cmp
jne
insl
cmc
jg
pushf
xchg
mov
cmp
insl
xor
xor
sbb
push
jns
int3
in
bound
cltd
outsb
fistps
loopne
fldenv
dec
aam
scas
in
loope
dec
pop
sbb
and
sub
leave
cmp
xchg
fdiv
lods
in
gs
cli
in
cmp
repz
lock
scas
mov
lods
mov
in
icebp
loope
add
mov
leave
imul
mov
dec
mov
cli
mov
mov
cltd
and
addb
dec
mov
xchg
pop
or
add
subl
out
fstpt
loopne
dec
push
push
cmp
aam
fdivrl
into
mov
mov
jle
dec
icebp
imul
push
adc
jmp
out
push
mov
cmp
aam
pop
add
inc
in
and
adc
and
std
mov
sub
push
and
gs
sbb
popf
jle
test
jns
shrb
inc
leave
insl
push
cmpsb
pop
popf
shll
mov
jno
adc
lahf
scas
in
xor
xchg
movsl
imul
pusha
and
xor
and
lret
adc
dec
popf
xchg
in
sub
dec
add
insb
xchg
xor
shl
dec
imul
cmc
faddl
pop
mov
mov
fisttpl
mov
inc
popf
cmp
add
int
jae
push
xor
mov
lods
lods
cs
add
imul
mov
sbb
lds
sub
faddl
fstpl
ror
push
lret
sbb
sbb
add
cltd
mov
loopne
shr
cmp
pop
icebp
sbb
in
inc
mov
outsl
insl
cmp
and
fs
lds
and
sbb
jmp
pop
adc
pop
sti
pop
ret
dec
call
push
fadd
pop
test
jbe
enter
xchg
sbb
outsl
jno
and
call
push
mov
fdivrl
iret
test
cmp
xchg
jg
push
loopne
popf
je
aam
int
enter
add
aam
jge
clc
and
loopne
cmovs
aad
loop
icebp
xor
int
add
dec
in
imul
insl
lds
icebp
cmp
jno
shll
jae
mov
fwait
cmp
insb
leave
mov
insb
add
dec
loopne
pop
int3
xchg
out
adc
int3
xor
cmp
cmp
cmc
adc
jle
cmp
mov
mov
sub
push
outsl
mov
xorb
pop
int3
imul
push
sti
lock
nop
xchg
pop
add
iret
xchg
popf
mov
stos
mov
dec
aad
cmp
leave
adc
and
iret
lods
push
jmp
leave
gs
fs
dec
pop
adc
jno
movsl
cmp
sbb
imul
test
shlb
inc
insl
aad
insl
mov
insb
xchg
push
mov
or
and
data16
addr16
pop
enter
pop
push
hlt
jmp
sbbb
sbb
jne
inc
popf
dec
cmp
sarb
dec
pusha
in
mov
ljmp
mov
fdiv
iret
out
movsb
jmp
inc
imul
in
jle
sub
popa
xchg
aas
aam
sub
sub
jmp
fdivl
fabs
sbb
call
scas
push
mov
dec
fdivs
pop
lds
test
shl
mov
enter
push
movsb
inc
in
pop
push
adc
xchg
jno
and
cmp
in
dec
xchg
sub
xor
jne
fsub
dec
inc
jle
sbb
sub
jne
stos
mov
adc
mov
aam
cmp
int
jne
mov
or
mov
jne
rorl
test
push
scas
mov
jne
pop
push
stos
je
int
dec
xor
bswap
mov
xchg
or
fildl
imul
in
int
loopne
gs
lock
push
test
arpl
mov
xchg
aad
lea
jge
test
rcr
cmp
in
aad
adc
or
fadd
in
and
dec
adc
sbb
xchg
or
mov
gs
int
inc
push
shlb
int
aaa
cmp
push
xor
xor
ljmp
push
call
and
cmp
int3
in
int
movsl
test
shr
xor
mov
imul
icebp
or
add
test
fcoml
adc
jbe
pushf
in
jge
mov
fsub
loopne
fisttpl
push
cltd
sub
push
int
mov
and
rorl
cmp
add
push
cmp
push
adc
fmul
dec
pushf
push
enter
aad
leave
xor
gs
xchg
aad
jle
adc
mov
xchg
xor
int3
dec
xor
ror
in
in
push
hlt
negl
das
insl
adc
inc
sbb
inc
lcall
fcmovu
mov
push
dec
xor
orb
jle
mov
sbbl
sub
adc
adc
fsubs
xchg
enter
xor
push
outsl
fcomps
lods
xchg
add
ret
and
dec
ret
push
sarl
shll
xchg
test
shrl
xchg
sbb
cld
imul
add
mov
pop
add
or
cmp
in
iret
test
leave
jne
dec
mov
inc
sbb
pop
daa
nop
in
sahf
fstl
jge
inc
mov
daa
push
loope
mov
pop
fadd
sub
mov
fs
dec
sub
and
jae
sbb
mov
jmp
rorl
cltd
leave
std
icebp
ljmp
inc
xor
xchg
ds
mov
shll
xchg
xor
in
sahf
popa
xchg
mov
sub
fmull
and
mov
add
pop
insl
subb
lock
lds
xor
mov
sbb
cmp
pushf
inc
pop
test
inc
lods
aam
loopne
xchg
push
jge
movsl
adcl
sub
aad
and
adc
rorb
loope
jbe
lods
lea
cmp
loope
jne
mov
pop
adc
xor
int
xchg
cmp
sub
sbb
xchg
pop
stc
adc
lods
icebp
in
or
or
in
imul
xchg
xchg
mov
pop
lahf
and
inc
inc
aam
fdivrs
into
dec
lds
fnstsw
loopne
test
into
push
sbb
jno
cmc
leave
inc
call
adc
or
jl
dec
inc
dec
or
sub
dec
add
sahf
xor
lds
sbb
iret
shrl
ljmp
jnp
mov
insl
cltd
sbb
mov
pop
sbb
sarl
pop
push
mov
and
cs
xchg
or
test
into
sbb
adc
jno
mov
cltd
dec
dec
push
fadds
mov
inc
cmp
int
in
push
xor
cmp
push
in
sub
test
test
add
mov
dec
adc
sub
pop
rorl
cmp
xchg
lock
enter
pop
jae
stos
and
pop
xchg
xor
dec
inc
mul
sbb
adc
fnsave
fimuls
pop
jns
out
out
push
push
jno
outsb
and
leave
lahf
icebp
ss
lods
ds
fdivs
inc
movsb
call
fs
fwait
sbb
add
loope
mov
repnz
mov
mov
dec
cmp
insl
and
call
jecxz
pop
push
jns
test
out
jmp
mov
mov
pop
icebp
inc
xor
xor
mov
fisttpll
mov
mov
in
adc
popa
xor
push
dec
adc
jbe
add
jb
push
loop
ds
shll
dec
or
sub
push
in
mov
orb
jno
cmp
dec
test
push
cmp
add
aam
cli
jno
or
mov
xchg
mov
cmc
lods
jmp
add
fnstsw
mov
jns
jne
xchg
pop
dec
xchg
test
dec
xchg
test
adc
xchg
sarl
das
push
mov
mov
mov
lods
xor
pop
imul
int3
mov
jmp
cmp
test
out
les
mov
dec
cmp
mov
sbbl
in
or
cmpsb
push
inc
orl
cmc
int3
sbb
inc
pop
js
jle
jno
mov
push
jne
filds
aad
roll
push
mov
sbb
call
aam
movsb
jmp
imul
mov
sbb
std
cmp
xor
flds
adc
fwait
xchg
lea
dec
scas
out
pop
loope
cmpb
dec
mov
lods
sbb
aam
pop
cmp
or
aaa
cmc
mov
frstor
into
mov
mov
cmp
bound
fldl
push
pushl
pop
aad
roll
xorb
mov
sub
loopne
push
fwait
mov
lods
lods
jmp
int
imul
push
pop
enter
dec
sahf
cmpsl
in
mov
cmp
mov
add
lea
cmp
add
pop
gs
lret
adc
adc
lods
and
stc
sbb
push
sbb
and
int
jle
roll
movsl
dec
jno
fldcw
mov
icebp
jmp
mov
jne
sub
xchg
int3
in
or
sub
and
xchg
adc
mov
add
out
jne
icebp
aam
inc
mov
das
iret
stc
lcall
mov
out
jle
xchg
insb
js
mov
loopne
sub
stc
pop
dec
lds
iret
pop
shrl
add
push
fcompl
xchg
not
sbb
sar
inc
and
pop
mov
xor
xchg
xor
fdiv
xor
mov
popf
jne
ror
shl
test
jmp
sub
rolb
icebp
jmp
int3
gs
push
sub
dec
cmp
push
vfixupimmss
push
push
push
xor
xor
jle
fadds
cmp
int3
add
or
int
cld
popa
xor
add
aam
insb
mov
mov
icebp
sbb
fsubr
sbb
mov
inc
jmp
ret
fsts
and
rclb
jne
mov
sbbb
push
adc
pop
outsb
lods
in
pop
jbe
outsb
in
leave
pop
inc
or
xor
movsb
popf
sub
lock
sbb
lds
rcrb
cmpsl
pop
cmc
int
xor
sbb
lods
pushf
mov
mov
in
or
adc
mov
test
sub
or
xor
xor
lea
lods
inc
xchg
sub
pop
sub
test
vcvtsd2ss
inc
and
dec
xorb
shrb
dec
ret
sbb
inc
mov
lods
call
jecxz
cmp
fnstcw
pusha
pusha
adc
fiadds
adc
pop
xor
shll
sarl
fstl
and
add
imul
xor
mov
aad
jle
scas
pop
jge
push
lods
leave
lods
mov
push
inc
dec
inc
jle
push
xor
add
loope
jne
xor
push
dec
movsl
sub
sub
loopne
iret
inc
xchg
test
push
jg
xor
gs
iret
cli
pop
or
or
and
rorb
mov
stc
cmpsb
and
movsl
in
mov
cmp
mov
shll
and
aad
cmp
pushf
lds
in
out
lock
nop
popa
addr16
scas
adc
jmp
ja
jle
test
jl
out
push
jno
data16
int
loop
pop
mov
jne
imulb
mov
mov
jle
lea
fsts
test
call
jl
test
mov
cmc
popa
nop
test
xor
mov
cmc
popa
sub
cmc
mov
test
cmc
push
jl
pop
jle
mov
test
cwtl
test
jle
push
mov
test
test
aam
mulb
push
push
fadds
push
test
mov
jge
mov
dec
test
inc
test
mov
adc
scas
test
jle
mov
mov
dec
fbld
fstl
in
mov
imul
sarb
dec
cmp
jmp
aam
adc
xchg
in
mov
mov
in
pop
pop
push
xchg
xor
adcl
mov
mov
xchg
push
add
and
xchg
add
out
int
and
lahf
mov
push
icebp
jne
popa
leave
or
xor
or
ficoml
mov
mov
mov
roll
out
xor
add
push
repnz
cmp
rcrl
popa
iret
dec
jne
out
mov
in
mov
adcb
push
adc
or
adc
cmc
jno
inc
dec
mov
lods
in
dec
add
shl
std
dec
add
aam
dec
jno
lods
in
inc
out
mov
dec
out
xor
test
jno
xorb
xchg
cmc
adc
and
sbb
shll
pop
xchg
lods
mov
jnp
sbb
aad
lods
int
cld
int3
jne
imul
mov
loopne
loope
shr
mov
fadd
scas
jp
loopne
leave
loope
int3
adc
and
and
sti
mov
jge
aad
sub
inc
enter
dec
cmc
mov
cmp
movsl
icebp
pop
fsubs
cwtl
xor
mov
xor
popa
in
sub
cmp
mov
cltd
sbb
mov
xor
sub
mov
mov
js
arpl
pop
dec
icebp
stc
sar
adc
popf
mov
and
pop
rcll
icebp
inc
aad
xchg
mov
sub
mov
leave
enter
fimull
jne
loope
loopne
mov
fdivrl
sbb
adc
and
in
cmc
cltd
enter
push
dec
negl
mov
sbb
test
sub
xor
xchg
out
mov
in
jle
in
outsl
xor
adc
rcl
xchg
imul
sbb
in
and
fdivs
mov
enter
push
xchg
dec
pushf
cmp
and
int3
adc
inc
lods
mov
popf
lods
or
xchg
xchg
int
fcom
in
xchg
adc
ljmp
call
flds
cld
sub
shlb
add
test
mov
repz
pop
insl
add
sub
loop
in
xor
call
fnsave
and
and
popa
mov
fcompl
in
add
mov
lods
ljmp
int
cmc
outsl
adc
xor
jne
mov
cmp
mov
dec
dec
inc
cmp
leave
imul
inc
out
pop
mov
xor
stos
xchg
mov
imul
hlt
mov
fs
mov
lret
cmp
int3
aad
sti
outsb
in
push
cmp
jno
test
sbb
lea
inc
fsts
mov
xor
jno
dec
inc
cmp
in
in
inc
shll
leave
xor
sub
and
pop
push
mov
inc
and
cmp
inc
cmc
mov
test
sbb
adc
xchg
push
push
inc
pop
and
int
fcoms
wrmsr
pop
xchg
enter
leave
fnstcw
dec
mov
call
fsub
lea
in
sbb
inc
cli
loopne
xlat
jno
cmpsb
in
cmc
pop
sub
mov
mov
sbb
movb
test
jbe
shll
not
pop
in
adc
xchg
mov
push
xor
pop
leave
into
jae
gs
call
pop
mov
adc
mov
jecxz
push
aas
mov
sub
jbe
loope
iret
lods
rcrl
dec
cmp
mov
dec
lock
loopne
or
cmp
out
shr
adc
fsubrs
sub
and
sbb
in
imul
xchg
insl
test
sub
mov
jb
sbb
xchg
inc
xchg
jb
mov
int3
or
data16
dec
adc
cmp
loope
push
fsubrs
sub
popf
or
das
jl
adc
and
sbb
cmp
dec
shrl
sub
in
movsl
lock
in
loop
mov
adc
lret
mov
sub
or
cltd
sbb
pop
gs
adc
mov
mov
addb
loopne
sbb
imul
icebp
adc
jmp
jmp
lret
pushf
cmp
sahf
lea
cmp
les
ror
jns
push
scas
int3
in
fdivs
leave
aad
sub
insl
shr
lock
call
jmp
add
punpckhwd
cmp
sahf
movsl
jnp
dec
test
adc
adc
sub
mov
in
adc
mov
loopne
pop
lds
imul
sbb
in
fsubl
ss
cmp
out
int3
ljmp
xchg
and
fsts
jle
mov
jge
or
shr
outsb
fmulp
xchg
test
dec
fnstcw
in
cmpsl
rcrl
cmp
out
sbb
add
in
and
jg
sbb
in
call
jmp
nop
jno
gs
xchg
rol
sbb
mov
cltd
lea
int3
mov
sbb
ja
subb
ljmp
int
call
mov
lret
repz
nop
sbb
lock
jnp
adc
aam
sub
cmp
adc
lock
mov
pop
loope
push
lods
out
jne
sub
mov
dec
lret
sub
lea
mov
cltd
leave
cmp
test
hlt
adc
sub
pop
cmp
dec
into
addr16
mov
loope
cmp
stos
lods
icebp
pop
add
push
aad
adc
jne
out
iret
pushf
imul
sbb
cmc
pop
push
in
adc
push
inc
call
vunpcklps
movsl
movsb
xor
movsl
sub
mov
mov
lds
sbb
add
imul
notl
aad
movsb
sub
dec
cltd
icebp
xchg
mov
sub
add
leave
int3
xor
lods
mov
add
cmp
enter
sbb
dec
and
sbb
push
shrl
mov
sbb
jg
sbb
xor
imul
inc
lods
in
aaa
sub
int
jmp
xor
mov
sbb
jno
int3
icebp
and
aaa
fucomp
push
jne
lock
pop
loope
shll
insl
jg
inc
loope
push
cmp
lret
in
mov
jl
sti
shlb
or
mov
or
test
cmp
pop
cmc
mov
sub
into
shll
mov
aam
sbb
push
fcoms
int3
mov
in
test
ror
mov
add
movsl
lods
mov
lock
cmp
inc
js
in
push
aad
cmc
shrl
pop
add
jno,pn
cmpsl
jb
fcoml
mov
ror
lock
in
inc
mov
push
rorb
cmp
xlat
sti
int3
lods
inc
mov
lods
mov
adc
sbb
inc
fxch
dec
jne
add
adc
sub
xor
sub
movsl
in
push
pop
mov
outsl
sbb
adc
repz
int3
cmc
or
shl
into
fmull
neg
cmp
push
mov
jle
and
enter
mov
xchg
das
pop
lods
popa
frstor
pop
adc
jno
mov
movsb
fsubr
sub
xchg
in
in
or
test
lock
push
dec
cmpl
cmc
ljmp
jge
loopne
int
mov
inc
addr16
jno
xor
xchg
and
insl
adc
shll
mov
iret
call
adc
jp
out
lds
mov
rcl
push
xchg
out
add
sti
int3
dec
fisttpll
lea
jle
call
pushf
and
loope
push
jne
shll
dec
shlb
mov
or
dec
lahf
dec
popa
add
in
mov
dec
aad
movsl
or
ret
jne
cmp
lds
lcall
int
in
outsb
int3
xchg
lret
loope
rcrb
xchg
adc
sarl
mov
out
cmp
cmpsl
sub
xor
jnp
loop
pop
ja
xchg
cmp
xchg
popa
xor
cmpb
aad
xchg
gs
mov
movsl
in
jge
std
add
sbb
inc
xchg
push
and
add
add
in
popf
push
inc
rcrl
loopne
add
sub
cltd
gs
sbb
mov
lret
rcll
and
xor
lds
imul
in
int
pushf
popf
jmp
test
sub
cld
stc
in
in
mov
lock
les
shlb
fists
adc
dec
in
xchg
in
mov
scas
enter
cmove
loopne
jmp
push
inc
int
and
in
les
std
lret
rorl
mov
add
sub
cmp
jmp
push
pop
mov
pop
loope
mov
cmc
mov
unpcklps
fdivs
fs
sbb
inc
mov
inc
outsl
shr
cmp
sbb
cmp
dec
test
pop
jle
and
and
lods
cmp
lods
cmp
xchg
cmp
add
dec
in
jne
jge
bound
sbb
push
popa
aam
test
popf
lahf
lock
leave
out
in
mov
sub
mov
cmp
movsb
sbb
dec
mov
shrb
xchg
jle
xchg
popf
test
lock
outsl
sbb
xchg
push
fucom
test
fcomp
sbb
fstpl
and
xor
adc
push
sbb
sar
and
shlb
fisttpll
dec
jmp
imul
cmp
sbb
cmp
test
push
nopl
lret
int3
lret
mov
cmp
pop
xor
insl
cmpsb
xor
fstps
in
adc
loopne
cmp
mov
int3
fwait
int
leave
push
inc
xchg
decl
cmp
test
aad
sbb
mov
dec
dec
pop
imul
xor
scas
mov
insl
je
lods
shr
enter
movsl
aad
push
enter
xor
push
dec
popa
cmp
sub
xchg
sub
sbb
xchg
stos
leave
pop
push
scas
and
pushf
cltd
add
fsubr
and
ror
shrl
popa
in
sbb
adc
mov
lcall
mov
add
push
pop
adc
jae
adc
nop
int3
inc
cmc
or
insb
mov
inc
arpl
and
icebp
rcr
push
into
mov
jl
movsl
les
mov
mov
fs
dec
add
push
pop
fcoms
and
test
in
arpl
leave
in
adc
dec
mov
int
test
mov
mov
test
lea
clc
shrb
push
out
out
mov
adc
push
fldt
inc
int
lock
adc
imul
flds
in
mov
push
jecxz
loopne
rcrl
and
dec
test
mov
int
into
jae
push
jecxz
mov
or
enter
clc
dec
jns
dec
rcl
mov
jp
in
das
mov
mov
lock
cmp
lcall
add
lds
add
int3
in
cmc
add
add
push
add
xchg
lods
cltd
insl
out
xor
and
lds
jp
cli
in
mov
xchg
mov
leave
adc
adc
pop
pop
jne
out
stc
add
mov
push
ret
push
inc
adc
insl
or
mov
sti
lods
push
or
aas
mov
dec
repnz
xor
imul
cltd
or
movsb
sarl
adc
and
push
mov
pop
icebp
and
jle
fs
sub
mov
adcb
in
lcall
adc
cld
lock
rolb
jnp
jmp
and
int
test
lock
mov
cld
dec
mov
or
clc
push
in
lds
adcl
loopne
mov
fs
inc
lods
in
jmp
in
lock
sbb
push
addb
push
call
xchg
out
xchg
adc
push
xor
pop
int3
mov
xchg
jle
call
ss
fnstcw
in
sub
jb
ds
imul
cltd
lock
or
inc
rcll
pop
push
adc
cmp
and
push
mov
cltd
out
jno
mov
fucom
sub
sub
and
xorb
adc
loope
cmp
pop
aad
out
subl
or
negl
sub
jmp
pop
cmp
fidivl
out
push
mov
popf
xor
aas
fwait
leave
and
cmp
xlat
aam
sahf
test
adc
sub
mov
inc
adc
in
or
mov
insb
int3
adc
jns
pop
movsb
aam
pop
mov
dec
xor
push
inc
sbb
jle
orl
insl
movsl
jmp
in
cltd
adc
jmp
fildl
adc
int3
pop
mov
ds
cmp
into
mov
in
fnsave
jecxz
aad
imul
pop
shll
icebp
xor
push
mov
pop
add
ja
out
fs
popf
aad
pop
loope
test
in
enter
mov
push
loope
sub
inc
xchg
es
fistps
sbb
insb
enter
dec
insl
popa
lock
fcomps
jle
xor
adc
call
inc
push
and
mov
dec
outsb
push
lret
adc
lea
loopne
outsb
xor
test
cltd
xchg
sbb
lcall
lahf
vmovdqa
cmp
pop
imul
mov
mov
in
cmp
lods
cltd
lods
sub
outsb
sbb
mov
xchg
mov
call
push
dec
fsubrl
fldcw
and
inc
sub
cmp
in
rorl
ljmp
or
mov
rolb
int3
and
xor
mov
dec
mov
lods
adc
push
test
scas
es
lds
int3
shrl
sbb
and
or
xchg
movsb
in
jno
rcr
idivl
pop
in
xor
mov
shlb
and
sbb
ret
test
outsb
into
imull
pop
xchg
cmc
loopne
or
xor
enter
push
adc
adc
xchg
sbb
jbe
or
xchg
rclb
gs
xchg
icebp
xchg
fmuls
roll
pop
pop
adc
mov
add
dec
mov
shl
mov
or
insl
in
fistps
cmp
int
and
xchg
cli
jge
jno
pop
sub
push
dec
dec
and
imul
imul
sbb
dec
mov
xchg
scas
xor
sti
insl
push
mov
cmc
inc
mov
mov
sub
adc
adc
pop
sbb
fs
enter
fdivrs
push
jno
jne
sub
insl
xchg
leave
mov
sub
cmp
mov
lock
pop
std
pop
mov
and
shl
mov
fcoms
aad
fwait
test
inc
jecxz
mov
icebp
out
dec
rep
les
push
adc
leave
daa
or
rcl
arpl
add
xchg
add
int3
insl
mov
xor
in
sub
and
sbb
movsl
add
popa
inc
out
sbb
mov
mov
cmp
lcall
adc
rcr
mov
in
cld
in
popa
test
lock
pusha
insl
lret
xchg
xor
jne
sub
movsl
mov
xor
or
sub
outsl
sub
negl
loop
push
in
push
mov
pop
xor
popf
add
dec
loop
cmp
sub
gs
xchg
cmp
sbb
test
int3
jge
mov
mov
insl
fwait
or
cmp
dec
and
pushf
xor
test
out
sbb
mov
clc
aad
xor
sub
mov
jmp
mov
add
in
sbb
icebp
jge
das
lock
sub
cmp
add
loopne
sub
outsl
icebp
cmp
mov
sbb
xor
dec
xchg
add
push
mov
pop
pop
xor
insl
fs
fcom
in
popa
xchg
fdivrs
push
cmp
dec
mov
or
inc
sbb
dec
mov
push
lcall
or
imul
and
sbb
sbb
in
cmp
and
inc
test
in
adc
sbb
shll
xchg
mov
and
loopne
aad
jne
lret
outsl
pop
fldl
sbb
add
dec
mov
insl
or
test
mov
insl
mov
sub
add
and
inc
test
lahf
cmp
in
insl
shlb
dec
cmc
sahf
leave
mov
pushf
mov
repnz
in
aam
sbb
dec
lods
aam
adc
pop
call
dec
fldenv
aam
setb
aad
pop
mov
in
cld
loope
xor
in
aam
inc
fdivs
rcll
sbb
in
popa
movsb
mov
cmc
ret
icebp
push
dec
fldcw
in
cltd
jl
adc
sbb
mov
and
cmp
scas
test
xlat
lods
bound
out
dec
repnz
loopne
sbb
adc
cmp
cmp
push
sbb
adc
call
push
call
adc
dec
pop
add
les
in
js
insl
movsb
vmovupd
mov
outsl
in
shlb
and
int3
icebp
fsubs
leave
mov
mov
test
mov
hlt
sub
push
push
inc
daa
xchg
fmull
gs
int
sub
jne
cmp
adc
movsl
push
mov
push
add
push
xor
in
adc
leave
mov
xchg
cmp
in
icebp
mov
add
cmp
sub
sti
and
xor
loopne
in
push
xchg
pop
cltd
and
xchg
shll
mov
nop
inc
loop
sub
lods
iret
xchg
fnstcw
sbb
sbb
cmp
scas
add
lock
iret
adc
rorb
mov
fsubr
inc
push
sub
xor
in
cld
in
icebp
jno
inc
jne
cmp
mov
xor
insl
mov
mov
cmp
popa
imul
mov
xor
fstl
mov
gs
into
insl
dec
rol
dec
in
inc
fcoml
push
leave
mov
xchg
cmpsl
test
sbb
cmp
mov
adc
and
inc
adc
das
icebp
vpunpcklwd
mov
std
scas
rcl
aam
leave
aas
cmp
push
repz
sub
xchg
fbstp
in
add
shrl
push
cmp
push
sub
aad
mov
cmp
inc
mov
xchg
out
lds
lahf
call
cmp
mov
push
into
clc
inc
and
sub
inc
shr
mov
fcomps
cmp
mov
cmp
mov
adc
je
xchg
sbb
push
and
xchg
int
int
lods
rcrb
pop
rolb
arpl
xor
mov
pop
mov
nop
adc
sbb
into
fs
fisttpll
jmp
aaa
and
adc
in
in
xor
shrl
cmp
xchg
enter
push
call
or
adcb
fcomp
insl
mov
es
xchg
leave
in
jae
int
adc
push
popa
pop
mov
test
cmpsb
pop
push
roll
xor
mov
dec
scas
jge
icebp
pop
mov
add
stos
add
sbb
test
in
and
fisttpll
sbb
push
imulb
sbb
cmc
jnp
ds
cltd
sarl
push
dec
pop
fstps
loopne
notb
or
hlt
not
rcll
adc
test
in
adc
popf
jl
sbbb
inc
in
sbb
mov
add
xchg
lock
xor
lahf
add
mov
jge
cltd
jns
xor
xchg
ss
mov
in
pop
cmpsl
push
xchg
sub
sub
popf
scas
mov
xor
add
fld
push
adc
stc
sub
in
xchg
pop
data16
outsb
aam
int3
mov
jl
push
adc
ret
jmp
fldcw
pop
lcall
fcoml
enter
push
loope
mov
pop
inc
push
mov
lods
dec
loopne
pop
jmp
sbb
lods
shrl
add
fwait
jmp
sub
adc
in
int3
cmp
xchg
mov
bound
xor
pop
in
outsb
les
outsb
jns
icebp
xchg
aad
mov
iret
insb
in
cmp
inc
add
int3
dec
shrb
aaa
aad
inc
loopne
mov
inc
or
xchg
pop
mov
xchg
movsb
nop
std
add
xchg
and
mov
cs
rorl
popa
lds
cmp
pop
cmp
cmp
movsl
adc
loopne
dec
leave
push
lds
call
pop
fsub
mov
jmp
ljmp
dec
enter
sub
cli
dec
int3
mov
out
or
jmp
pop
sub
or
xor
lock
out
aas
mov
std
popf
fs
in
mov
sub
leave
inc
push
loopne
gs
mov
sbb
movsl
cmp
push
cmc
push
xor
push
shll
push
test
lret
adc
lea
jno
std
add
notl
cmpsl
lret
add
mov
jns
rcrb
xchg
shl
repz
adc
mov
imul
jno
repnz
fs
pop
sub
icebp
daa
add
and
mov
or
into
negb
mov
sbb
jecxz
lods
jne
push
lcall
jl
movsl
imul
dec
push
out
dec
dec
orb
inc
sbb
adc
jg
xor
test
gs
movsl
notl
fabs
cmc
outsl
rolb
xor
pop
dec
dec
mov
cli
xor
jno
int3
pop
divl
adc
fldcw
and
scas
jle
shr
outsb
movsl
pop
int3
lods
icebp
vpaddsb
scas
daa
mov
jne
icebp
adc
adc
jno
mov
pop
pop
mov
pop
sub
push
fucom
sub
cmp
in
in
lock
mov
jb
push
mov
pop
xchg
push
dec
and
xor
xor
jle
add
loopne
test
sub
popf
xchg
xor
movsb
mov
daa
in
cs
jmp
pushf
dec
jne
xor
in
fdivs
popf
and
in
popa
push
iret
int3
in
stc
data16
lock
fsts
lods
sbb
mov
adc
push
sub
xchg
shrb
inc
xchg
xchg
xor
out
popf
call
clc
mov
in
sbb
test
fsin
test
inc
in
sub
add
in
mov
fmull
pushf
imul
cmp
fnstsw
mov
nop
test
and
in
sub
push
mov
insl
fldl
xchg
outsb
xchg
adc
hlt
pop
cmp
out
cmp
dec
inc
insl
test
jo
mov
xor
shlb
in
sbb
sarl
push
sbb
and
pop
add
popf
cmc
jmp
jg
add
mov
xor
xchg
outsb
lcall
jle
sbb
mov
or
std
adc
mov
into
push
adc
cmpsl
fucomp
fistpl
pop
sbb
add
xor
mov
push
icebp
movsl
shl
add
dec
mov
add
pop
leave
inc
into
sub
xchg
push
popa
aad
movl
loope
test
pop
lret
inc
es
sub
ljmp
jo
outsl
lds
enter
pop
mov
mov
fmull
test
data16
scas
mov
lock
xchg
cmp
icebp
sub
into
jmp
jno
jl
pop
icebp
enter
mov
add
stc
push
rcl
adc
cltd
int3
enter
nop
or
add
cld
push
jge
or
cmp
xchg
dec
dec
in
mov
imul
mov
pop
lds
fsubr
scas
hlt
in
cli
inc
jg
aad
lds
ds
faddl
cmpsl
pop
in
push
scas
lods
and
jno
dec
loope
pop
pop
shrb
push
mov
mov
pop
xor
mov
ss
xor
xchg
mov
xchg
test
pushf
mov
popa
jecxz
repz
rolb
and
into
lret
test
and
cmp
pop
adc
icebp
push
jle
lock
inc
adc
popa
jno
mov
jae
mov
xor
aam
out
leave
lods
frstor
push
xchg
pop
pop
mov
push
int
and
lret
xlat
xchg
push
dec
loope
mov
leave
leave
sub
cmp
test
outsb
aad
leave
adc
rcrl
jne
aam
cmp
xlat
out
lods
adc
mov
inc
lods
shl
mov
cs
dec
push
mov
inc
dec
out
enter
aam
mov
test
jae
fsts
add
pop
dec
in
jno
push
add
jp
and
int
push
pop
pushf
xor
xchg
jle
int
insl
xor
or
lds
fsubs
addr16
fldl
int3
or
dec
push
sub
dec
ljmp
in
movsl
mov
cmp
cmc
mov
push
enter
jno
out
shrl
rcll
cld
push
inc
dec
mov
push
pop
popf
sub
sub
inc
loope
mov
lock
ja
pusha
rorl
push
cmc
outsb
sub
insl
lock
and
cmc
dec
sarb
not
and
fcoml
shl
aam
into
sub
test
or
aad
pushf
fmull
dec
jmp
sbb
fidivs
int3
sub
xchg
enter
in
in
mov
adcl
imul
jmp
cmp
inc
int
movsl
xor
mov
cmp
add
int3
fnstcw
call
inc
xchg
in
mov
push
xor
sub
pop
dec
sub
mov
push
in
imul
in
dec
lret
cmp
rolb
sbb
mov
or
sti
cmc
loope
xor
push
pop
test
aad
mov
lahf
xor
xchg
xor
and
rcl
fwait
cmp
mov
enter
jmp
adc
call
pop
and
xchg
movsl
shr
insl
cmc
add
pop
sarl
or
sub
xor
movsb
and
sub
shll
in
push
enter
add
and
mov
loop
scas
daa
pop
mov
jne
rorl
lahf
jmp
and
test
xor
sub
in
xchg
popa
inc
and
cmp
dec
xchg
aam
xor
cltd
jle
dec
rcr
gs
leave
enter
push
jge
inc
cmp
popa
or
mov
pop
jne
inc
inc
adc
shlb
jb
fmuls
gs
icebp
shl
and
cmc
xor
std
ret
clc
mov
add
je
inc
and
int
jbe
jo
popa
lods
leave
out
int
test
repz
loopne
out
jmp
in
gs
jno
loope
insl
and
popf
sbb
adc
jno
pop
enter
mov
rclb
push
push
fsubrs
je
jle
mov
in
mov
mov
imul
or
inc
sbb
pop
xor
gs
in
in
jnp
fs
adc
mov
mov
leave
pop
popa
shr
pop
xor
push
push
cltd
movsl
jg
inc
jne
xor
jno
sub
leave
mov
dec
mov
movsl
iret
in
sub
shll
sub
loope
xchg
jecxz
and
int3
inc
enter
shl
es
jle
icebp
mov
insl
out
jnp
dec
lock
xchg
sbb
icebp
jg
std
aas
cmp
adc
fstp
dec
cwtl
mov
xor
cltd
fsubrp
cmp
jbe
sbb
sbb
aad
pop
stos
pop
movsl
cmp
fwait
shrl
cmp
test
mov
or
adc
enter
mov
fstps
lods
dec
add
fstps
lahf
sub
frstor
shr
adc
pop
push
nop
aad
pop
xlat
es
sahf
xor
rorl
inc
and
push
pop
adc
aad
dec
cmp
cmc
sub
lock
in
jg
je
mov
mov
xchg
or
mov
and
xchg
push
mov
sub
rcll
cltd
mov
sbb
pop
mov
cltd
mov
leave
add
sub
mov
repnz
fmuls
aad
in
cld
popa
adc
ret
in
lods
in
sbb
gs
sbb
sub
test
icebp
mov
mov
pop
push
pop
loope
jae
jecxz
mov
int
aad
sub
leave
in
mov
scas
cmp
jno
xchg
lods
lock
and
adc
mov
fisttpll
jmp
jecxz
pop
fdivl
bound
push
leave
mov
cmc
pop
cmp
push
insb
push
adc
jne
mov
and
gs
pop
adc
cltd
int3
mov
stos
adc
dec
dec
jno
enter
loope
call
jbe
in
in
push
jo
ja
pop
dec
pop
cmc
xor
dec
mov
xchg
leave
cltd
xor
or
jl
aad
push
mov
mov
and
into
pop
jl
mov
lock
leave
fsubrs
in
and
popa
call
test
dec
and
sub
sarl
andps
cmp
cmc
cmp
aam
mov
xchg
inc
xchg
xchg
inc
cmc
or
insl
lcall
dec
xor
mov
popa
mov
dec
fisttpll
fsubs
sbb
inc
jle
sarb
mov
xchg
stos
jmp
pop
int3
xchg
dec
cmpsb
xlat
mov
adc
mov
in
mov
ret
sbb
cltd
lds
add
inc
dec
dec
and
mov
push
int
adc
jecxz
mov
jae
sub
sbb
call
out
and
or
mov
cmp
sub
cmp
dec
insl
test
xchg
lods
sub
xchg
pop
lock
push
adc
int3
imul
call
in
out
adc
shlb
inc
adc
add
sti
popa
mov
shll
dec
jg
inc
test
std
cld
das
fs
mov
sub
int3
fcoml
int3
subb
rol
lock
inc
xor
loopne
push
in
test
dec
cld
and
cmc
inc
pop
adc
imul
sub
inc
push
incl
sbb
sarl
pop
jge
inc
leave
dec
int
into
das
cmp
test
gs
test
mov
and
testb
in
push
sub
cmp
js
scas
shl
adc
fsubr
in
mov
insl
dec
push
jno
insl
and
xor
out
xadd
cmovp
dec
imul
mov
pop
sbb
sub
lods
imul
xor
xchg
pop
mov
pop
dec
notb
fidivrs
mov
push
dec
aad
mov
cli
sub
cmp
movsl
mov
inc
mov
aad
iret
in
mov
cmpsb
xor
mov
xor
arpl
jnp
faddl
shlb
add
xchg
mov
or
outsb
rcrb
sub
lock
lock
xlat
and
in
jmp
mov
pop
call
xor
sub
or
adc
adc
in
or
adc
mov
mov
sarb
fdivs
jg
in
lds
xor
sub
pop
mov
jne
leave
fnsave
into
popa
sti
stos
mov
push
ljmp
add
cmpb
sub
rclb
aam
cmp
shrl
ja
mov
xlat
testl
aam
cmp
xor
mov
into
scas
jle
fs
adc
or
icebp
stos
or
es
pop
jle
sub
cmp
cmp
xchg
fcoms
mov
xchg
ds
add
add
sbb
mov
add
lods
sbb
orb
xor
sub
mov
imul
fdivrs
aad
faddp
dec
sub
adc
cmp
cmp
arpl
xchg
sarl
cmp
inc
xchg
lods
call
insl
mov
lods
shll
jle,pt
sbb
aam
rorl
enter
mov
jp
push
fs
push
xchg
and
adc
inc
ljmp
mov
mov
lcall
mov
adc
sbb
pop
jp
popa
jle
lret
int3
sub
ds
sbb
or
jno
xor
sub
lds
pop
cmp
inc
xchg
sbb
pop
aad
rcrl
fnstenv
xchg
push
dec
cmp
cmp
xchg
into
into
dec
jp
adc
and
lods
lock
pushf
cmp
addr16
adc
inc
xchg
inc
jmp
push
in
mov
popf
enter
lds
dec
outsb
nop
dec
dec
sbb
sbb
int3
dec
or
leave
sti
cmp
jmp
aam
test
sbb
ds
adc
jge
test
lods
pop
loope
sbb
int
dec
int3
aad
in
dec
xchg
paddsb
add
dec
xor
adc
sub
cmc
pop
jno
jmp
stos
test
in
shlb
gs
pop
out
adc
shl
insb
fdivs
dec
jle
lock
sbb
lea
inc
cmp
outsb
stc
rorl
adc
insl
mov
sbb
xchg
loop
fcompl
lds
sbb
dec
dec
fwait
iret
gs
xchg
dec
sbb
xor
sub
inc
loop
pop
cmp
in
shlb
int3
jmp
pop
and
shll
and
xchg
cmp
and
mov
mov
icebp
popa
popf
imul
cltd
and
dec
pop
fwait
sub
scas
and
mov
fwait
jmp
lods
push
lock
push
pop
mov
cltd
mov
sbb
jl
fdiv
sahf
cmp
jno
jmp
push
xchg
sbb
in
cmc
mov
sub
jno
xor
shl
adc
mov
in
fnsave
xchg
insl
push
scas
es
dec
xlat
cltd
push
dec
rorl
mov
cmp
and
pop
push
and
inc
loopne
xor
sub
fsubs
mov
inc
shll
rclb
loope
adc
push
aad
cmp
out
push
dec
and
loope
pop
or
jle
sbb
xor
push
in
and
sub
cmpsb
dec
dec
push
popf
mov
test
aad
icebp
int
adc
loopne
notb
mov
mov
fucomip
ja
fwait
mov
daa
ds
mov
mov
rcll
and
popf
xchg
mov
jmp
cmp
cli
mov
and
cmp
nop
mov
bswap
in
xor
xchg
xchg
int3
mov
dec
add
fwait
and
mov
xor
mov
jmp
fnstcw
or
sbb
enter
lock
xchg
or
faddp
test
mov
leave
xor
popf
lods
testb
jo
xchg
int3
or
or
sub
bound
dec
dec
sub
cli
sbb
test
mov
sub
aad
push
lea
dec
leave
test
in
xor
xchg
dec
daa
jmp
fldcw
or
incl
push
add
incb
lods
xor
cmp
into
es
and
lock
mov
sarl
sbb
mov
jno
pop
push
xor
cmp
aaa
mov
mov
lds
xor
imul
push
loope
jp
sub
inc
int3
mov
mov
mov
pop
in
xor
adc
out
pop
insl
push
and
rcrb
aam
movsl
sub
xchg
mov
cmp
repz
mov
sbb
cmp
adc
int3
push
je
adc
test
inc
jae
push
lahf
movsl
aad
call
in
cmp
loop
jmp
push
push
mov
lods
movsl
movsb
movl
cmp
cltd
aad
add
into
test
in
leave
fldl
dec
call
inc
mov
sub
ljmp
popa
xchg
mov
mov
sbb
cmc
adc
imul
test
icebp
les
pop
lock
xchg
dec
push
enter
and
call
into
ret
jge
enter
jle
jne
cmp
push
pop
jg
xchg
mov
test
lods
movsl
adc
push
in
adc
dec
jmp
sbb
and
cmc
ljmp
out
push
fs
dec
mov
fstl
mov
mov
in
push
jecxz
pop
pop
sub
cmp
mov
imul
movsb
lds
sub
adc
fsub
out
push
xor
dec
fiadds
add
popf
mov
adc
movsl
inc
sar
or
rcl
fst
xchg
jne
lock
xor
movb
xor
sub
imul
sti
push
push
addr16
imul
dec
mov
dec
mov
loope
mov
rorb
lds
sbb
cmp
imul
jne
cmp
mov
jne
and
popf
and
into
jecxz
movsb
pop
jne
movsb
mov
pop
lret
enter
lret
xchg
xchg
sbb
add
pop
mov
push
pop
call
icebp
mov
punpcklbw
mov
icebp
push
mov
popf
jne
add
in
push
mov
push
insl
xchg
rolb
int
sbb
adcb
int3
enter
insl
call
mov
jmp
cmp
in
sub
enter
lds
mov
lods
dec
mov
pop
xchg
shlb
ljmp
in
popf
inc
inc
jne
mov
and
or
aad
inc
popl
fsubr
fwait
aas
leave
sub
loopne
sub
lds
dec
push
pop
cmpb
loope
sub
push
dec
insl
cltd
cs
popa
xchg
push
inc
push
icebp
cmovne
dec
or
in
cmpsb
insl
pop
push
mov
dec
int
add
xor
into
test
leave
cmp
ror
jge
mov
add
mov
add
sbbl
pop
loope
jecxz
stos
adc
mov
adc
mov
int3
jne
mov
sbb
mov
mov
sub
sti
test
aad
leave
pcmpeqd
push
lods
xor
and
in
mov
lock
cmc
mov
inc
cmc
pop
leave
sti
pop
xchg
push
movsb
cmp
out
fs
push
cmc
loopne
icebp
loop
popf
shll
mov
cmovle
pushf
sub
lods
pop
dec
pop
cltd
scas
push
lods
in
adc
and
add
cmc
sbb
mov
dec
cmpsl
fs
push
sbb
pop
cmp
jae
in
mov
iret
loopne
push
in
xor
xchg
mov
adc
in
jmp
aad
in
sbb
aad
dec
vmovsldup
mov
test
push
fsubr
jmp
mov
inc
or
dec
mov
call
insl
sub
cmc
mov
fdivrs
cmpsl
int3
lods
sbbb
and
mov
outsl
and
mov
sub
add
aam
mov
bound
add
shll
inc
cmp
jnp
cld
cmp
jmp
icebp
out
mov
sbb
daa
leave
cmpsb
movsl
mov
pop
outsb
lods
cmc
mov
aam
aad
pop
lock
into
push
outsb
jg
adc
pop
test
popa
int3
cmpsl
imul
sub
sub
xchg
out
shr
mov
test
fdivrl
fwait
sbb
sbb
and
jecxz
iret
sbb
push
insl
xchg
jmp
sub
dec
sub
popf
idivb
add
fdivl
inc
xchg
mov
stos
pushf
jle
sar
fs
push
dec
adc
jmp
or
shrl
insl
jl
sarb
pop
cmpsb
int3
mov
or
fistps
cs
in
lock
int
and
call
das
scas
test
sub
mov
mov
adc
loopne
mov
mov
or
in
hlt
fdiv
leave
sarb
pop
adc
push
arpl
sub
adc
das
fdivrs
sbb
loop
inc
lds
cmc
mov
dec
mov
jbe
add
icebp
shr
hlt
dec
loopne
sub
inc
mov
cld
lret
in
push
sbb
call
aaa
or
xchg
in
xchg
pop
rcrl
adc
loopne
xor
cmp
or
cmp
sub
jno
dec
es
test
sbb
fsub
dec
mov
sbb
sbbb
adc
pop
adc
adc
in
sbb
xchg
jb
pop
ja
cmp
scas
popa
xor
push
xlat
jle
push
stos
in
and
push
in
call
pop
out
scas
outsb
and
fimull
in
in
scas
xor
ret
mov
cwtd
push
cld
add
adc
cld
jno
or
clc
lods
movsl
fisttps
sarb
subb
lahf
sub
inc
aam
xchg
cmc
in
es
push
cmp
call
loop
arpl
pushf
test
cmp
imul
int3
dec
cmc
sbb
mov
fmuls
lods
push
fdivrl
xor
out
hlt
dec
xchg
lds
in
popa
push
adc
loope
leave
sub
movsb
sbb
mov
xchg
jl
pop
inc
scas
outsl
test
leave
pop
push
mov
aam
adc
xchg
sbb
push
loope
iret
enter
adc
lds
daa
les
fs
push
sub
icebp
cld
lods
xor
cmp
add
gs
pop
or
or
out
adc
fdivl
in
loope
scas
and
iret
int3
xor
sub
ror
xchg
movsl
enter
jne
cmc
adc
mov
lock
cmp
xor
inc
in
nop
sub
add
sbb
mov
outsb
adcl
and
or
mov
xchg
cltd
jne
sub
rcrl
or
test
or
cltd
sub
or
sub
out
add
lods
and
popf
out
mov
into
dec
rol
pop
mov
out
hlt
jne
inc
lahf
sub
rorl
dec
inc
in
xor
ss
push
js
lods
ds
pop
dec
lret
cmp
pop
dec
mov
cltd
out
test
pop
popa
xchg
in
out
pop
out
inc
fsubrl
xchg
mov
jle
scas
aam
pop
inc
cmp
inc
sub
fmull
sub
icebp
pop
aad
aam
in
mov
lahf
pop
inc
inc
lds
insl
int
sub
xchg
movsb
push
popa
fisubrs
lock
loop
and
cmp
jno
inc
jle
adc
pop
cmc
in
sbb
xor
mov
xchg
fs
insl
push
cwtl
dec
mov
cmp
jmp
sarb
div
or
add
jne
ja
jg
pop
sub
imul
into
or
jno
jne
loope
pop
pusha
dec
sbb
cmp
leave
shll
push
mov
rcrb
insl
and
sub
rcll
loope
fnstenv
fwait
iret
pop
gs
in
xchg
push
movb
test
jno
pop
movsb
pop
out
push
lss
repz
and
dec
mov
mov
ror
add
add
xlat
je
insl
push
std
addr16
inc
adc
cltd
loope
stc
sub
push
rorl
icebp
cmp
and
loope
inc
xchg
push
push
sbb
xor
mov
dec
popa
dec
cltd
ds
in
mov
cld
sbb
cmp
fdivs
xchg
xor
repnz
in
sbb
mov
movups
popf
into
addr16
mov
dec
dec
add
loop
mov
addr16
stos
sub
lods
cld
cmp
lods
stc
xor
jle
mov
outsb
movsl
pop
jmp
add
push
lret
insb
xor
mov
cmc
cmpb
out
int
mov
popf
aam
or
gs
leave
outsb
stc
adc
push
cld
dec
and
js
jle
insb
lods
mov
test
mulb
sbb
aam
shl
xor
fdivs
lods
bound
int
ror
faddl
out
sti
scas
cmp
in
scas
xor
push
sarl
adc
sub
mov
pop
xor
jne
int
std
lds
je
sub
cmp
xor
pandn
rcrl
adc
fcompl
dec
pop
mov
xor
aaa
call
aad
enter
sub
cmp
out
nop
orb
lahf
fcomip
pop
notl
push
or
shll
fwait
in
gs
adc
aam
movsl
int
in
fwait
pushl
test
jmp
test
xor
sub
cmp
xor
and
int
sub
pop
int
jmp
cmpl
mov
fnstsw
nop
mov
or
xor
mov
jne
idivb
mov
jl
test
repnz
jmp
test
or
jno
dec
xor
adc
in
and
imul
sbb
dec
mov
push
add
cmp
push
xor
xchg
sbb
lea
insl
aad
flds
movsb
lods
in
dec
inc
popf
xor
fldcw
outsl
out
stc
mov
in
movsb
shrl
lock
lret
pushf
aad
clc
out
jmp
pop
lods
push
int
adc
sub
lods
sub
gs
cli
inc
out
fs
rorb
call
shll
push
leave
loop
call
enter
xor
fyl2x
data16
push
xor
or
cmovne
dec
aad
xor
mov
imul
xchg
push
fldcw
int3
loopne
jge
sarl
cmp
xor
call
in
imul
pop
mov
jg
xchg
popf
cmp
jne
mov
sub
mov
add
and
movsl
xchg
mov
bound
test
cmpsb
adc
pop
dec
sbb
test
sbb
and
push
pop
aad
sbb
gs
xor
leave
push
les
jne
loope
aas
sbb
fnsave
sub
adc
in
in
sbb
jmp
adc
dec
in
cmp
loopne
ffreep
pop
mov
adc
test
sarl
lods
jne
int
inc
loope
ljmp
and
in
std
ret
dec
xor
fsubrs
aad
mov
fldl
mov
je
jno
cmp
adc
aam
loop
insl
sbb
lock
cltd
dec
test
cmp
sub
movsb
cmc
xor
push
subb
outsb
test
inc
fcoml
lods
subb
xchg
je
sub
inc
or
pushf
int3
icebp
in
xchg
cld
fst
loopne
fld
sarl
pop
fcoms
pop
in
hlt
xchg
popf
divl
scas
lods
push
adc
push
jne
pop
mov
mov
imul
icebp
fadd
push
icebp
sbb
lock
add
xchg
rorl
mov
jecxz
jne
int
cltd
enter
loopne
push
and
test
push
cmp
rcrl
xchg
arpl
int
cmp
lds
and
xor
pop
and
inc
adc
push
int
xor
cmc
aaa
cld
in
je
cltd
push
pop
xor
adc
sbb
mov
insb
pop
lods
xor
mov
pop
dec
das
shll
aas
jle
mov
pop
cmc
rorl
mov
inc
dec
sub
sbb
outsb
std
jmp
rcl
sbb
fstl
xchg
insl
jne
cltd
inc
jbe
mov
cmovge
roll
cmc
push
jnp
out
cs
push
push
xor
stc
xchg
lret
dec
pushf
shll
add
movsl
out
push
jge
dec
leave
in
mov
lea
jne
in
push
test
adc
mov
xor
aam
push
adc
in
cmp
loope
cmc
xchg
out
adc
movsl
xor
lock
push
jne
fcomps
mov
push
xchg
sti
pop
adc
inc
cmp
push
and
into
mov
pop
mov
sbb
sbb
push
dec
adc
loope
adc
in
add
sbb
orb
cmc
movd
pop
dec
out
dec
aam
sub
into
dec
std
push
les
fdivl
ret
rcll
cli
push
fadd
push
clc
sbb
jge
sub
pop
gs
loopne
adc
push
es
inc
int3
push
and
mov
mov
in
test
dec
lds
dec
mov
lea
in
sub
mov
int
pushf
aam
dec
lods
xchg
int
sbb
shlb
sbb
dec
popf
inc
pop
cwtl
push
loopne
fnstcw
sub
pop
jno
xchg
mov
jle
mov
cld
int3
sbb
aad
add
mov
movsl
sub
dec
inc
into
in
mov
adc
push
pop
mov
cmp
ret
jb
jne
or
cmpl
imul
add
jl
enter
rcl
pop
cltd
leave
xchg
jmp
pushf
fcomps
jl
jge
mov
lock
mov
sub
cs
mov
cmc
movsl
clc
movsb
aad
push
pop
or
int3
push
in
and
ds
out
filds
mov
fld
shlb
jns
sub
push
icebp
mov
push
mov
cmp
les
mov
sbb
in
dec
sbb
movsl
add
mov
pop
popa
mov
cmp
dec
fmuls
sbb
ja
jmp
and
adc
lock
cmc
sbb
icebp
cmp
popf
ljmp
pop
clc
fmul
leave
cmpsl
mov
sub
sbb
stos
and
jle
sub
sub
dec
imul
push
jns
xchg
or
mov
mov
jo
movsl
push
push
mov
sub
sbb
jg
sub
mov
movb
pop
inc
test
pop
jno
cmp
cmp
lds
ffree
fmull
mov
inc
in
jg
jge
adc
sub
inc
mov
mov
int3
out
or
ret
add
push
out
fdivl
or
lds
fs
frstor
adc
and
dec
cmc
push
dec
fcom
adc
enter
or
int
adc
cmp
pop
xor
push
imul
popf
ds
fst
jle
shl
shrb
imul
sar
jnp
gs
insl
bound
and
xor
insl
rol
sub
pushf
xchg
xor
dec
sub
int3
loope
pop
in
dec
shlb
fdivl
pop
sbb
mov
and
dec
outsl
loop
int
jl
adc
dec
call
and
cmp
xchg
mov
pushf
movsb
mov
push
inc
icebp
cmp
mov
ret
pop
inc
xchg
insl
lea
sbb
pop
call
sarl
mov
and
adc
lock
mov
push
movsl
adc
mov
cld
aad
out
test
into
jne
lods
imul
xchg
mov
jle
loopne
adcl
dec
mov
rcl
push
push
popa
testb
pop
mov
scas
and
jno
insb
lock
out
push
pushf
in
in
push
mov
into
sbb
fldl
icebp
or
jmp
xor
add
test
insl
mov
pop
cmp
sub
in
in
int
cli
idivl
icebp
dec
xor
mov
lods
popf
es
loope
cmp
mov
popa
pop
andb
fstpl
subps
or
gs
scas
cmp
nop
jne
bndldx
xlat
xor
sbb
jmp
mov
out
scas
into
cmpb
int3
jae
mov
leave
mov
aad
mov
adc
into
xor
xlat
loopne
mov
fsubr
lds
in
add
xor
enter
adc
sub
xchg
notl
sahf
add
jg
lods
pop
imul
push
and
pop
sbb
jno
jae
jge
ljmp
push
subb
movsl
jp
xor
repnz
adc
fnstcw
cmp
loope
aam
add
int
insb
jl
mov
popa
mov
or
insl
adc
sbbl
das
test
loope
and
int3
push
push
insl
pop
insl
jle
jle
fsubrl
mov
inc
sub
cmp
sub
xchg
daa
adc
sub
pop
and
icebp
int3
fistpl
je
jecxz
nop
enter
jl
jno
inc
and
mov
mov
or
popa
mov
leave
add
push
mov
and
or
xor
jge
cmp
das
popf
xor
bswap
in
jge
inc
dec
scas
cmp
jne
dec
mov
pop
cltd
mov
cmp
push
dec
insb
lret
int3
ljmp
in
xor
mov
cmp
stos
lea
mov
popa
cmc
pop
and
popf
mov
into
or
aam
mov
jp
cmpsb
out
in
in
sbb
gs
out
mov
les
jle
out
fldln2
in
ror
and
fstpl
mov
mov
adc
iret
lret
xor
inc
aad
movsl
loope
lds
xchg
outsb
push
test
in
push
mov
or
jo
cmc
mov
iret
jo
insl
xchg
sub
enter
jge
cld
fdivs
sbb
cli
out
subl
insl
xlat
add
shll
or
in
jb
push
in
popf
push
sti
loop
in
sub
scas
fmull
mov
or
sbb
fxch
push
jno
sub
lock
cmp
jo
jp
ss
push
cli
lds
mov
push
int3
adc
loopne
shll
fwait
cmc
inc
fdiv
pop
mov
push
pushf
loopne
lds
in
xor
mov
and
mov
fcomps
in
pop
fnsave
shr
pushf
cmc
push
cld
pop
movsl
enter
mov
cmp
lods
movsb
loopne
negb
adc
and
call
sbb
fnstsw
jo
mov
adc
dec
test
fstpl
imul
xchg
xchg
add
xchg
dec
fwait
lds
mov
push
iret
lods
icebp
ror
clc
in
xor
testl
rcrb
and
leave
faddl
cmp
mov
in
popf
insl
in
ds
mov
in
sarb
sub
icebp
push
test
imul
clc
mov
jo
cmc
jmp
inc
xor
jne
mov
in
mov
mov
lcall
std
subb
pop
xor
push
in
sub
lds
jne
leave
cs
es
lahf
adc
xchg
popf
enter
jp
insl
jle
test
pop
sahf
sbb
adc
and
adc
cltd
imul
adc
xlat
pop
jl
mov
inc
push
sbb
leave
pop
call
xchg
or
jmp
in
popl
push
mov
sub
jmp
in
shlb
mov
xor
lds
adc
insl
xchg
insl
sbb
xchg
sub
dec
insb
fs
dec
imul
pop
mov
xchg
sub
pop
sub
in
jno
mov
cmc
adc
call
test
sub
pop
inc
jmp
mov
out
lret
outsb
add
rcl
shrb
pop
xor
and
cmp
les
lock
adc
mov
in
in
xchg
sti
int3
vpmaxsw
xchg
popf
adc
xor
rorl
mov
jle
sub
push
inc
faddl
scas
cmp
push
sbbl
mov
fdiv
xchg
push
pop
icebp
cltd
mov
stos
test
jge
xor
mov
push
imul
lret
loopne
lahf
fnstsw
notl
gs
into
jecxz
mov
adc
cmp
xor
rclb
pop
lds
mov
flds
xor
mov
jle
scas
jle
rcrb
cmp
aam
jp
mov
cmp
mov
insl
push
call
jno
xchg
xlat
clc
sbb
int
cmpsb
xor
adc
negl
dec
jno
gs
xchg
icebp
sub
jle
xchg
cltd
push
sti
pop
pop
or
xchg
cmp
cwtl
loop
mov
outsl
int
dec
sbb
test
push
call
jno
pop
cmp
fst
pop
imul
mov
mov
out
lods
in
xor
xchg
adc
jne
iret
icebp
in
div
cmc
aad
mov
sub
pop
xchg
inc
icebp
and
jnp
dec
or
cmp
dec
jno
inc
push
adcb
imul
popl
mov
bound
add
mov
popa
popf
adc
pop
jge
cltd
adc
movsl
jne
int
das
cmc
in
pushf
mov
push
cli
test
mov
insl
movsl
cwtl
push
xor
sbb
movsb
jle,pt
xor
mov
fcmovnbe
xchg
in
xchg
pop
pandn
imul
fldcw
gs
jo
jle
aaa
jecxz
rclb
sub
lret
mov
push
fsubrl
addr16
imul
mov
and
jno
dec
pop
pop
mov
test
jb
cmpsb
dec
test
pop
mov
sub
mov
cmp
cs
shll
mov
rcll
lock
cltd
aad
movsl
inc
mov
hlt
lock
movsl
sbb
mov
or
mov
xchg
roll
mov
frstor
insl
inc
jle
xor
aad
movsl
loopne
insl
popa
jecxz
mov
mov
mov
mov
aad
jecxz
imul
dec
or
int
rcrl
inc
mov
fldl
and
dec
aad
fldenv
push
aad
js
int3
dec
push
lds
rolb
dec
rcll
xor
jns
push
out
cmp
inc
xchg
lods
gs
les
fdivl
movsb
dec
and
das
adc
in
push
mov
inc
push
xchg
jle
stc
mov
jne
pop
test
lret
push
pop
jnp
fs
cmp
lds
icebp
lods
movsl
jle
imul
std
mov
cltd
jne
test
mov
push
ss
outsb
in
cmc
add
jne
jge
cmpsb
repz
loope
das
gs
pop
mov
lock
into
pop
je
add
cmp
mov
cmp
rcrb
pop
and
or
dec
in
rorl
mov
icebp
inc
push
or
or
cltd
imul
and
adc
push
mov
xchg
and
xor
je
leave
adcl
fstl
popa
jae
fnstcw
add
or
cmp
pushf
mov
add
scas
cld
cmp
xchg
pop
int3
pop
adc
icebp
xor
shlb
mov
inc
xor
fnstcw
mov
daa
adc
mov
cmc
cmp
mov
movsb
sub
aad
mov
xchg
shl
pop
into
jbe
loope
cmp
lods
or
mov
in
test
in
dec
roll
in
or
sbbl
and
push
mov
int3
orl
fmuls
pushf
pop
lods
insl
hlt
mov
loope
int3
aam
cmp
outsl
cltd
mov
adc
test
lods
and
out
movsb
flds
inc
cld
jne
jl
mov
or
int3
loope
mov
lcall
jle
out
add
sbb
shlb
push
enter
icebp
sbb
or
aad
sub
int3
pop
cmc
inc
cltd
mov
mov
add
pop
mov
inc
adc
loopne
cmpsb
hlt
cmp
shlb
pushf
cmpsl
mov
mov
and
cmp
cmp
jge
add
popf
dec
pop
jno
popf
fs
int3
test
clc
and
fcoms
sub
ret
movsl
pushf
sub
outsl
push
or
jge
in
sub
inc
loope
adc
cmc
in
mov
mov
mov
aad
sbb
in
insl
mov
cmp
cmp
and
aam
rcrl
xchg
fstl
lret
aad
aaa
and
imul
icebp
mov
mov
mov
sbb
dec
dec
ror
fldcw
add
shl
popa
mov
mov
fcomps
cmp
xor
cmc
xchg
icebp
pop
int
rorl
pop
xor
adc
gs
in
jne
mov
add
fadd
fldcw
test
outsb
loopne
mov
sahf
out
lods
insb
inc
popa
sahf
dec
xor
and
rorl
adc
popf
mov
in
push
push
hlt
cmp
cld
and
popa
in
jmp
adc
xchg
imul
sub
pop
push
dec
int
rol
inc
lds
imulb
push
mov
dec
inc
mov
icebp
pop
cltd
mov
xchg
imul
stos
outsl
movsl
cmp
sarb
dec
inc
in
fstl
inc
jne
ret
push
sbb
int3
test
insl
outsb
pop
mov
xchg
mov
push
hlt
and
and
sti
cmpsl
sbb
dec
lods
in
sub
adc
test
push
sub
insb
cli
pop
dec
push
icebp
mov
insb
in
mov
xor
xchg
push
dec
lods
push
orb
call
or
mov
lods
sub
ffree
dec
popf
lahf
push
cmc
fs
in
push
pop
imul
and
lock
adc
popf
cmc
in
mov
icebp
imul
ja
ljmp
mov
leave
sarb
popa
rcll
jbe
fstl
jg
or
push
int3
pop
cmp
mov
xor
jb
mov
enter
gs
jne
into
xchg
xchg
cmp
mov
xchg
in
cmp
lods
movsl
push
jg
sub
dec
adc
inc
push
pop
insl
mov
test
outsl
cmp
push
cmp
insl
jmp
rorl
lcall
mov
inc
mov
addb
mov
divb
push
adc
fisubs
cld
lds
or
pop
fstpl
lcall
dec
mov
jnp
sbb
inc
shrl
lods
cmp
mov
aad
cltd
adc
int3
sbbb
push
push
pop
or
mov
mov
xchg
fstpl
sbb
shl
sbb
test
jg
arpl
roll
push
shlb
fcoml
pushf
jne
and
pop
aam
xchg
or
sub
leave
pop
dec
in
test
std
dec
lods
fcmovne
adc
mov
pop
call
xchg
loope
dec
insl
sub
or
add
call
push
ljmp
push
loope
jmp
sbb
rcr
fs
and
mov
fildll
sub
pop
ficoms
not
jge
add
inc
mov
pop
outsb
call
icebp
and
pop
xchg
mov
push
je
pop
cmc
push
mov
int3
push
movsl
fcoml
xchg
pop
push
out
das
mov
cmp
mov
adc
dec
in
mov
fcoms
loope
dec
rclb
in
lea
dec
in
mov
jno
call
loopne
ret
pop
movsl
pushf
xor
mov
inc
jl
cmp
int
push
jmp
out
mov
insl
and
push
pop
lods
jecxz
jmp
in
lods
repz
lea
mov
scas
sbb
cmp
loope
xchg
and
sub
cmp
xchg
outsl
subb
and
fdiv
add
insl
icebp
dec
push
fnstsw
fucomip
popf
cmp
fldcw
adc
inc
jno
rcr
stos
clc
iret
inc
jne
insl
and
sub
pushl
cmc
jmp
cltd
mov
dec
sbb
cmp
movsl
sbbl
es
mov
jns
xchg
sub
fs
int
std
pop
mov
bound
out
cmpsb
repnz
fdiv
sbb
sub
in
push
mov
adc
roll
nop
jecxz
push
sub
popf
adc
enter
pushfw
jns
inc
scas
jmp
aaa
in
jne
fisubs
adc
dec
sbbb
and
and
test
gs
bsr
dec
jecxz
jp
fs
cmp
rcrb
in
test
dec
dec
fsubrs
aad
lret
in
insb
pop
addl
fcoml
sbb
push
fiadds
lods
xchg
adc
adc
and
data16
xchg
mov
lds
dec
pop
insl
ljmp
call
cmp
sbb
dec
lea
pop
aas
jle
cmc
faddl
adc
mov
popf
xchg
add
xor
daa
xchg
and
js
fcoms
mov
jge
sub
loopne
jge
xor
sahf
pop
in
mov
mov
mov
xchg
hlt
xor
xor
push
gs
in
cmp
or
pop
sar
cmp
sub
inc
aam
fstl
xor
lds
shrb
jne
cltd
xor
adc
popf
test
adc
shll
ljmp
sub
aad
push
mov
and
loope
loop
mov
cmp
outsb
push
sbbb
cmc
lods
inc
lcall
icebp
cltd
shlb
inc
adc
sbbb
dec
fs
jno
jmp
idivl
nop
push
sbb
rcll
jno
and
or
lock
int
pop
stc
mov
ljmp
insl
aam
aam
in
rclb
jle
rcr
movsl
hlt
sub
jno
add
add
xor
and
jmp
xchg
mov
mov
and
fnsave
aam
popa
cld
icebp
adc
lret
or
sbb
movsb
lock
jge
inc
lock
fimull
enter
gs
loope
push
add
mov
int
push
xor
sti
loope
aam
in
xchg
or
outsb
pop
cmp
xchg
xchg
dec
pop
dec
xor
cmp
cmp
cmp
add
sub
inc
cmp
jns
xchg
fistl
sub
add
leave
cmp
mov
fmul
dec
xchg
and
scas
cltd
aam
add
sbb
xor
xchg
mov
jle
xchg
and
mov
lods
fstps
and
pop
je
scas
in
mov
sbb
xchg
dec
mov
mov
int
sub
aam
cld
xchg
imul
aaa
cmp
in
lds
cmp
aas
cmp
adc
call
or
push
leave
pop
clc
cmp
int
cmp
adc
add
xchg
pop
loope
cs
xor
mov
inc
aam
xchg
shll
mov
mov
ljmp
add
mov
leave
insl
inc
and
fidivrl
sub
push
popa
insl
packsswb
movsl
imul
jmp
jb
mov
pop
cmc
sub
mov
adc
les
adc
insb
sub
cmp
out
pushf
pop
mov
dec
mov
mov
dec
xchg
movsb
jmp
or
jmp
add
loopne
loope
loopne
dec
out
dec
in
movsl
xchg
dec
gs
popa
add
insl
push
xchg
mov
cltd
loope
sub
mov
cmp
test
push
je
in
or
cmp
push
lock
sbb
cmp
mov
mov
adc
dec
rcl
int
roll
jmp
xor
cmp
loope
shr
int3
stc
roll
adc
fstps
cmp
add
adc
out
push
rorl
lods
mov
cmp
int
enter
insb
in
inc
in
imul
push
int
dec
fnsave
xor
xor
out
xchg
mov
repnz
jae
rcll
or
out
mov
es
daa
push
add
in
and
insl
sub
addl
xor
fldl
cmp
fs
test
add
sub
xor
rcrb
jle
sub
or
pop
movsl
sub
test
shrb
daa
scas
pop
loopne
loope
pop
sub
leave
ficoms
fstps
and
int3
loope
daa
stos
cmp
fsubs
mov
leave
mov
in
hlt
push
pop
popa
mov
dec
stos
sub
jne
adc
xchg
lds
push
cmp
sahf
insl
sub
add
enter
cmp
or
gs
and
push
sbb
adc
mov
jns
push
std
lret
ds
fmuls
push
dec
in
pop
int
int3
pop
and
cmp
repz
mov
inc
cmc
shl
pop
dec
gs
movsb
rcr
movsb
jne
sbb
pushf
in
lock
int
jno
sarl
fsub
shlb
xor
outsb
mov
sbb
fsubrs
xchg
fdivs
lds
sbb
pop
jg
pushf
xor
call
push
addr16
cmp
inc
rolb
movsb
mov
mov
or
gs
popa
jno
mov
fsubs
mov
sbb
in
pop
sbb
inc
add
insl
fst
outsb
and
jle
imul
movl
pop
fs
adc
fdivrl
pop
in
inc
xchg
mov
mov
xor
jmp
mov
adc
in
mov
cmpb
dec
fstpt
insb
push
shlb
imul
shlb
popf
xor
scas
add
sub
leave
xchg
mov
dec
dec
movsl
mov
mov
adc
adc
add
lds
int
mov
pop
std
add
enter
in
fcoml
fmul
cmpsb
fnstsw
dec
pop
lock
test
lea
dec
sbb
enter
leave
mov
push
and
xor
icebp
dec
pop
mov
pop
xor
icebp
jge
adc
mov
mov
es
inc
enter
ret
dec
minps
push
push
in
popf
mov
out
xchg
outsb
test
icebp
aad
xor
pop
sbb
xchg
push
fldln2
sub
loope
es
dec
jbe
lds
aad
aaa
gs
arpl
rcrb
pop
andb
fiadds
xor
cmp
dec
xchg
imul
push
mov
cmc
pop
xchg
int3
movsl
add
cmc
pop
aad
lret
inc
leave
lock
shlb
mov
add
enter
cmc
cmpb
sbb
inc
jns
jle
mov
aam
sub
mov
jnp
jle
repnz
jbe
cmp
cmc
call
std
into
xor
aad
stos
fwait
mov
lahf
imul
sub
sbb
arpl
repnz
dec
adc
mov
mov
into
mov
inc
adc
fcoml
adc
lock
out
call
or
gs
dec
aam
cmc
orl
sbb
es
call
dec
cmp
outsb
sbb
push
adc
pop
mov
in
loope
pop
mov
xchg
rcrl
adc
fmuls
add
mov
jmp
roll
ror
sub
inc
mov
shl
xlat
adc
xchg
fdivrl
add
mov
iret
lds
rclb
fsts
in
adc
test
sub
mov
cltd
bound
popa
lds
test
lahf
int3
in
dec
jmp
call
mov
addr16
add
mov
mov
adc
call
xor
or
sub
cmp
subb
sub
call
popa
push
cmp
jne
push
clc
inc
jle
fdivr
or
gs
xorl
push
lea
lds
pop
iret
xchg
cmc
adc
inc
leave
cmp
push
mov
cmp
xchg
push
outsl
loope
loopne
lock
sub
in
push
loop
adc
inc
movsl
xchg
aas
leave
xchg
test
lock
movsl
jne
stc
pushf
adc
cmp
cltd
mov
int3
push
fsubr
pop
mov
jne
push
imulb
cltd
int3
lds
dec
mov
out
inc
dec
clc
mov
lret
les
les
mov
adc
jne
add
xchg
loopne
adc
fcomp
and
jne
inc
xor
int3
mov
pop
mov
and
mov
adc
cmp
add
jp
in
push
cmp
dec
std
push
jle
or
mov
call
das
out
lock
push
mov
cld
cmp
lock
or
push
stc
popa
pop
xchg
inc
push
adc
aad
insl
cmpsl
pop
in
cmpsb
sub
gs
jne
pop
push
cld
push
or
jne
sarb
dec
lea
sarl
xchg
pop
pop
sub
pop
lock
inc
adc
gs
call
inc
aam
lea
mov
leave
in
xor
xor
or
out
cltd
mov
sbb
jle
sub
ret
movsb
je
mov
roll
test
dec
std
dec
fcoml
mov
sbb
jl
int
xor
in
arpl
add
adc
inc
dec
dec
inc
or
dec
mov
adc
push
aad
movsl
sub
cltd
test
movsl
dec
push
add
loopne
lcall
mov
and
movsl
xchg
or
test
dec
sbb
inc
cmp
inc
mov
add
enter
movsl
loope
mov
inc
jle
pushf
nop
lahf
iret
sub
lock
aam
les
aad
pop
je
rcll
cmpsl
mov
push
pop
sub
xor
xor
or
fldl
in
jnp
push
xchg
xchg
rcr
ljmp
out
cmp
jle
cmp
inc
in
push
fnsave
clc
iret
jp
cmp
out
pop
cmp
outsb
jno
mov
cmp
jno
xor
jecxz
mov
setbe
lock
sbb
add
mov
fldenv
ja
dec
mov
cmp
cmc
and
int
fdivrs
sub
cld
cmp
mov
rcll
gs
push
xor
aad
xchg
sub
push
in
inc
inc
scas
testl
cli
jle
in
cmp
pop
test
fs
fisttpll
push
pop
fmull
pop
xor
or
lea
enter
adc
movsl
stos
minps
cmp
xchg
std
aad
fwait
sub
push
push
and
push
or
mov
or
add
lock
sarl
cmp
ljmp
ds
and
insl
push
or
mov
sti
adc
shl
cmpsl
mov
int
xchg
sbb
cmp
or
xor
aam
mov
cmp
sub
andl
push
icebp
sub
adc
pop
rorb
imul
fprem1
and
popa
mov
xchg
adc
mov
enter
jl
lods
sti
les
dec
int
sub
mov
push
popf
int
adc
ror
shr
popf
mov
sub
cmp
loopne
mov
xchg
movsb
int
inc
pop
mov
push
jecxz
adc
aaa
stos
inc
movsl
push
test
mov
lods
cmp
cmp
jbe
adc
in
push
push
fadds
clc
fstps
into
std
ret
xchg
mov
test
xchg
dec
dec
mov
outsl
adc
jne
shlb
movsl
js
aaa
ja
xchg
in
aad
mov
mov
fucomip
subb
negb
and
jle
fnstcw
shrb
dec
lods
cltd
mov
jmp
in
rcll
sub
dec
xor
dec
adc
insl
sub
outsl
adc
jne
push
ficoms
jecxz
sbb
xor
xchg
mov
sarb
mov
sbb
in
sub
outsb
lcall
sbb
out
mov
pop
sbb
into
in
adc
pop
f2xm1
mov
xor
cltd
and
int
and
sti
cwtl
scas
push
lods
mov
in
inc
leave
push
xor
shrl
add
outsl
rorb
lret
sub
cmp
dec
aaa
sti
rolb
cltd
add
fnstenv
icebp
dec
cltd
lds
ljmp
push
mov
in
popf
insl
int3
push
dec
mov
insl
enter
fsubs
testb
insb
cmpsl
out
call
push
in
lods
pop
mov
das
repnz
in
sub
xchg
loopne
xor
adc
fistpll
adc
flds
xlat
dec
scas
push
in
jle
sub
jmp
push
fstps
lods
add
xor
stos
fcoms
daa
in
mov
aam
cltd
insl
sbb
sub
push
mov
cmp
mov
scas
sub
pushf
jno
bound
sub
ss
cmp
jb
aas
sub
sub
adc
mov
popa
dec
mov
pop
adc
mov
jmp
sub
lods
clc
out
std
insl
inc
pop
test
sub
mov
push
xor
xor
sbb
cmp
rcrb
pushf
int3
add
fucomp
in
xchg
and
sbb
mov
pop
sahf
cmp
sub
inc
js
pop
cmp
int
movsb
sbb
bound
pop
sub
imul
jne
xor
xor
or
lds
leave
out
pop
dec
push
jno
sbb
test
push
shrl
xchg
insl
imul
movsl
in
in
outsb
int
inc
adc
lods
fcomps
pop
aaa
xchg
jno
lock
push
call
hlt
pop
mov
sub
gs
scas
ror
sub
pop
adc
dec
xchg
xchg
pop
sarb
fs
scas
add
jle
clc
lret
add
popa
lahf
test
mov
add
pop
in
mov
adc
shll
mov
testl
inc
je
push
sbb
push
adc
loop
mov
subb
lret
fdivp
dec
in
shll
dec
xor
xor
dec
or
in
loope
sbb
adc
cmc
adc
into
icebp
pop
inc
and
enter
cld
lock
in
sbb
mov
lcall
push
rorl
mov
pop
jno
or
sub
fdiv
dec
xor
push
xchg
mov
bound
testb
and
aas
sbb
fisttpll
popa
xor
sub
fadds
int3
enter
imul
cmpsb
mov
insl
sub
in
cmp
sbb
xor
loope
lock
test
adc
xchg
fnstsw
inc
jno
shrl
xchg
adc
jmp
shl
add
out
outsl
icebp
pop
jno
fstpt
jmp
popf
popf
cmp
mov
xchg
xorl
loope
shr
insl
loope
fistl
negl
push
pop
out
movsb
mov
das
and
mov
jno
or
adc
fdivrs
into
xchg
pop
cmp
push
or
cltd
cmp
jne
icebp
pop
into
or
rorb
loopne
fldcw
push
lock
sub
out
adc
call
jp
push
cmp
insl
enter
pop
sahf
push
cld
mov
adc
movsl
xor
inc
pop
in
xchg
subb
sub
sbb
adc
imul
or
int
popa
xor
movsl
xor
push
aam
xor
xor
xchg
xor
aad
aam
in
cmp
sub
lret
shlb
cltd
es
sub
jge
fmuls
aam
call
cld
int
test
mov
loope
ret
mov
mov
adc
and
pop
adc
xor
loope
push
lods
push
add
and
adc
jg
adc
daa
repnz
insl
popf
mov
frstor
push
mov
icebp
sar
xor
clc
push
xchg
in
or
test
adc
iret
int
dec
inc
mov
xor
clc
pop
adc
dec
dec
fwait
imul
int3
mov
icebp
mov
xchg
addb
xor
push
xchg
loope
fnsave
insl
mov
or
mov
push
mov
cmp
cmp
sub
aam
and
mov
popa
cltd
jns
sarb
adc
xor
fisubrl
xorb
xchg
imul
fiaddl
mov
and
popa
xor
test
fcmovb
add
cmp
scas
dec
dec
mov
shr
icebp
icebp
dec
push
dec
inc
into
adc
pop
push
in
push
jb
fsubl
and
cmp
popa
mov
lea
inc
outsb
jne
in
out
push
aad
sub
add
call
enter
sub
push
sub
jne
xchg
cmp
test
xor
rcr
jle
jle
loopne
inc
pushf
jg
jne
mov
leave
dec
or
test
fcomps
adc
cld
dec
mov
insl
in
out
jmp
inc
or
mov
mov
xchg
xor
sub
icebp
adc
lods
pop
mov
in
inc
fs
leave
test
lret
mov
rorb
notl
pop
fabs
out
cmp
adc
mov
pop
sbb
outsb
mov
insl
push
pop
insb
mov
inc
cmp
rorb
and
xor
pop
fs
incl
fcoml
aam
outsb
xchg
les
popa
pop
dec
or
mov
in
cmpb
call
sub
sarb
adc
popa
pop
cli
subb
jge
jmp
mov
jle
shll
mov
sub
dec
out
mov
push
ret
push
cmp
inc
adc
test
popf
cld
call
addb
inc
inc
in
imul
movsl
cmpsb
and
adc
xor
bswap
test
adc
pop
pop
mov
pop
jl
fstpl
test
or
mov
cmc
xor
fcompl
aad
loopne
nop
adc
fldl
dec
pop
fsubs
fxch
xor
pop
push
or
mov
int
insl
sbb
cmc
movsl
cmp
insl
insl
xchg
mov
fdivrs
rolb
and
sbb
add
call
popa
sahf
push
cli
xchg
mov
cmp
pop
into
and
iret
dec
sbb
mov
popf
adc
orl
sbb
dec
mov
aad
xor
mov
jne
mov
nop
pop
test
outsl
test
ret
adc
xor
scas
cmc
rcrl
sub
push
in
in
imul
jae
lods
jne
adc
dec
sub
xchg
cltd
mov
cmp
imul
outsb
daa
repz
mov
fcmovu
popa
adc
dec
outsl
push
adc
out
mov
inc
mov
push
cmp
inc
mov
mov
add
inc
dec
mov
jne
into
pop
rcrl
adc
pop
ret
cmp
sbb
loope
test
inc
aam
dec
gs
xchg
push
or
insl
fmuls
sbb
lds
fstpl
fldcw
lock
popa
test
cmp
mov
sub
and
shlb
push
lods
dec
sub
enter
xchg
cmc
fwait
xchg
loop
xor
mov
in
jne
dec
xchg
push
lret
cmp
or
sbb
adc
inc
cmp
mov
popf
imul
adc
aad
cmc
dec
push
dec
mov
sbb
and
and
xchg
and
and
dec
mov
pop
lds
and
pop
sub
call
cmp
inc
mov
jg
xchg
out
sarl
push
adc
int
pop
dec
fsubrl
dec
sub
fs
daa
mov
aad
nop
aam
test
xor
sbb
cmc
adc
movsl
stc
push
push
pop
xchg
leave
pop
sub
inc
dec
mov
sub
icebp
in
jle
jmp
sub
pusha
xchg
mov
push
stc
lds
push
add
pop
mov
sbb
fstpl
push
mov
push
add
gs
jne
leave
jge
fs
add
lods
pop
mov
call
jne
insl
jmp
in
adc
xchg
adcl
fistl
fnop
je
cld
mov
dec
push
sbb
call
dec
push
push
imul
lock
cvttps2pi
fdiv
pushf
sbb
cmp
jb
sbb
enter
out
inc
push
shl
jle
stc
adc
lock
adc
inc
or
adc
outsb
mov
adc
aam
insl
test
shrl
xchg
mov
xor
push
addl
pushf
enter
div
ljmp
and
mov
gs
rcll
dec
sub
or
dec
pop
pop
xor
mov
lods
jmp
test
inc
call
sub
aam
into
cmp
bound
jno
fsubs
jo
pop
xor
dec
int
gs
mov
push
loope
pop
fcoms
aad
inc
enter
loopne
and
shll
jmp
cmp
mov
pop
test
cmp
mov
push
aad
fstl
inc
mov
add
aas
insl
mov
leave
orb
sub
iret
or
icebp
pop
out
add
dec
cwtl
push
jle
mov
cltd
inc
in
std
fstp
repz
sub
jno
mov
enter
jle
and
cmp
and
leave
jmp
push
xor
fcom
push
lea
into
int3
outsl
and
xor
jmp
cmpsl
les
push
fdivrl
jle
add
icebp
lock
inc
cmp
pop
pop
insb
dec
cwtl
xor
mov
jmp
lret
push
xchg
cmc
sub
insb
mov
lds
fs
push
sbb
test
xor
in
leave
cld
sbb
popf
insl
sbb
icebp
sarl
movsl
or
es
jle
adc
ljmp
dec
pushf
leave
fs
push
pop
pop
cmpsl
lret
jne
fsubs
outsb
mov
xchg
xor
sub
jno
orb
and
add
mov
in
jne
cmp
mov
mov
scas
jge
sub
push
inc
loope
mov
test
mov
in
sub
std
mov
dec
mov
aad
vpunpckhqdq
lea
gs
pop
repz
punpckhbw
inc
ljmp
and
sbb
cltd
lods
add
fcomps
fnsave
into
mov
aam
jne
pop
pop
test
push
test
cmp
or
clc
icebp
stos
mov
je
sahf
jo
mov
sbb
jns
cmp
mov
fadds
aas
jl
sbb
xchg
mov
int3
in
icebp
fdivl
mov
pop
fcoms
loope
hlt
movsb
call
dec
fs
or
push
mov
ss
iret
push
adc
movsl
fsubs
mov
xchg
push
fsubrs
jp
inc
sarl
arpl
sbb
int
loop
or
xor
sub
mov
xor
cmp
into
fldl
mov
cmc
gs
scas
lock
adc
mov
nop
xor
dec
jle
out
cmc
lds
and
xchg
xchg
inc
bsf
fcoml
iret
in
dec
sub
shrl
pop
jne
pop
adc
mov
fcmovnbe
sahf
mov
vpunpcklwd
jne
in
lods
jmp
mov
leave
lock
fadds
shrb
sub
jg
jbe
lods
into
push
mov
and
sbb
dec
jecxz
in
jno
mov
push
jp
push
mov
shlb
in
inc
mov
pop
mov
in
loopne
mov
cmp
add
push
mov
loopne
pop
aaa
jmp
dec
fldenv
in
mov
pop
push
xor
in
dec
jne
xchg
ret
cmp
mov
bound
sub
lock
std
mov
das
stos
movsl
popf
sub
inc
sti
lods
adc
dec
cltd
cmp
int3
xchg
jmp
call
punpckhwd
cmpsl
call
add
in
das
mov
fdiv
in
dec
stos
lret
das
call
aam
loope
jno
inc
in
adc
or
loope
out
jo
sbb
dec
pop
xchg
rol
xchg
pop
push
sub
fsts
sbb
dec
dec
fs
sbb
push
xor
pop
adc
leave
in
fwait
movsl
push
movsl
imul
movsl
sbb
popf
cmp
aad
mov
dec
push
fldenv
vmovups
xor
jno
dec
outsl
fsubrs
jne
movsl
mov
lret
mov
roll
add
pop
xlat
xchg
mov
jmp
and
jmp
sbb
pop
insb
adcb
sub
cmp
lock
fmull
in
sub
push
int3
popf
aam
lods
mov
aad
jns
sub
jno
pop
sub
xor
push
sub
test
jno
dec
aad
pop
and
out
mov
ret
sub
fxch
repz
add
push
in
sbb
dec
jno
fs
cltd
adc
push
loop
movsl
mov
test
lods
in
aam
xchg
xchg
in
cltd
and
loopne
iret
push
and
into
jne
dec
movsl
mov
inc
push
sbb
cmc
in
mov
mov
sub
imulb
sub
cmc
cmp
xor
pushf
fcoms
mov
mov
and
inc
cmp
scas
fmul
inc
in
outsl
movsl
sbb
aam
imul
xor
adc
push
cmp
inc
inc
imul
sbb
sbb
push
push
cmp
enter
loope
leave
jae
dec
jnp
xor
mov
xor
cmp
jle
pop
cmc
push
sbb
mov
popl
xchg
movsl
stos
pop
xor
fld
or
or
outsl
dec
cmp
shlb
ja
icebp
les
sbb
enter
dec
push
test
scas
ret
push
mov
xchg
mov
jle
lcall
xchg
in
xor
push
push
cld
int3
jne
cltd
jg
push
sub
jbe
and
sbb
loopne
push
out
jmp
pop
jmp
enter
fisubl
cmp
add
dec
psraw
gs
lds
mov
ds
dec
jecxz
aaa
shld
aad
cmp
shll
shl
inc
cmpl
sbb
inc
outsb
popa
es
fisttpll
ret
push
in
sbb
gs
ja
sahf
adc
lock
and
xor
dec
lret
outsb
cmp
mov
ret
cmpsb
or
sbb
negb
and
lds
xor
shl
out
in
fcom
dec
nop
sarl
adc
jmp
je
cld
pop
shl
movsb
fisttpll
int
cmp
cmc
leave
pop
pop
add
rcrl
mov
cmpsl
mov
ret
cmp
int
aad
sub
in
jb
lock
xchg
out
mov
push
das
push
mov
popa
shl
sub
mov
sbb
xchg
and
movsb
wrmsr
aam
dec
int3
pop
aas
hlt
imul
jmp
cmp
rcrl
mov
enter
mov
jno
call
pop
and
mov
int
push
vpavgb
push
andl
bound
push
js
adc
xor
dec
xor
ss
xor
inc
jp
movsl
aad
jns
mov
shr
add
gs
movsl
mov
shr
push
mov
and
push
and
fmuls
push
insl
pop
in
in
adc
or
outsl
xor
dec
call
mov
push
adc
jno
decl
push
fildll
fnsave
jge
in
xchg
cmp
cltd
gs
mov
or
jmp
sbb
cmp
xor
push
sub
cmp
sarb
aad
int3
xchg
dec
jge
mov
jmp
in
adc
sub
enter
in
lock
rcll
xchg
leave
xchg
int
inc
shll
aas
aam
out
cmp
popf
xchg
sub
loope
push
jne
sbb
add
cmc
out
insl
jne
mov
je
mov
or
jg
pop
inc
sub
scas
xchg
test
sbbl
lret
add
xor
add
adc
mov
arpl
mov
pop
jne
repz
mov
sbb
pop
popa
cmp
pushf
aad
sbb
jle
cltd
cmc
in
xlat
xchg
fdivrs
push
fmuls
fisttpl
push
push
cli
or
enter
aaa
aam
idivl
xchg
rorb
sbb
sbb
push
cmp
sbb
loopne
mov
and
std
cmc
test
jnp
fcompl
sbb
movsw
fs
pop
das
mov
in
sbb
xchg
dec
and
dec
mov
test
std
push
out
shll
inc
call
out
push
fisttpl
gs
lods
cltd
mov
lods
mov
adc
mov
xchg
add
shl
add
cmp
dec
insb
enter
push
movsb
loopne
push
repnz
fistpl
int3
push
sub
lds
dec
enter
and
push
orl
loope
adc
cmp
and
mov
push
xchg
fldl
test
imul
push
imul
push
or
or
cmp
testb
xchg
call
fnstsw
int3
inc
outsl
out
outsb
insb
test
pop
out
insl
sbb
adc
rorl
sub
cli
ss
jo
aad
in
pop
adc
lods
fnstsw
push
shlb
dec
enter
push
mov
test
call
inc
cmp
jg
mov
cmp
cmp
sub
fcmovne
xchg
in
scas
cltd
rcll
movsl
adc
loop
in
out
lahf
cltd
sub
imul
cmc
into
sbb
lea
sbb
repnz
int3
int3
imul
insl
popa
jecxz
rcll
not
xlat
sub
push
mov
jl
out
mov
sbb
int
lods
jb
mov
or
aad
fistpll
sbb
outsb
in
lods
sbb
and
mov
cld
pushf
aam
js
lahf
xlat
cltd
adc
int
mov
or
into
pop
or
pop
fisttps
loope
mov
mov
movsl
xchg
lcall
mov
push
les
xor
cmp
aam
jmp
popa
and
popf
rorl
sbb
leave
dec
adc
xchg
xor
int
imul
cmp
adc
in
jne
lods
sarl
jno
loope
sub
xchg
jmp
mov
inc
xlat
mov
in
jno
sub
sbb
dec
mov
jmp
mov
sbbl
aaa
push
xchg
push
in
xchg
cmp
sub
xor
mov
or
push
adc
in
mov
dec
sbb
cmp
imul
or
mov
inc
and
add
gs
dec
or
daa
sbb
mov
push
sbb
dec
and
enter
push
mov
pop
dec
adc
adcb
aam
xor
retw
jle
movsl
mov
call
jle
not
mov
pop
dec
mov
adc
fsub
fld
xor
and
jle
gs
adc
movsl
aad
push
mov
shrb
mov
adc
popa
enter
xor
jne
enter
inc
jb
mov
lret
adc
rolb
cltd
data16
pop
or
pop
pop
xor
xchg
jbe
xor
shlb
adc
jg
pop
das
cmc
sbb
jno
jl
mov
mov
fadd
jmp
js
jle
movsb
outsb
mov
fistl
shrl
cmp
dec
xchg
idivl
scas
popa
add
add
stc
clc
call
or
push
xchg
jae
dec
inc
lahf
adc
dec
rcll
cltd
sub
inc
int
out
pop
cmp
gs
mov
xchg
xchg
fmuls
pop
xchg
sar
jg
cmp
xlat
push
in
sub
sbb
test
testb
sub
adc
xchg
sbb
rcrb
loopne
lahf
xchg
cmc
adc
mov
aam
fcmovbe
jno
in
mov
or
jecxz
push
mov
xor
icebp
mov
nop
xorb
hlt
adc
icebp
fs
ret
mov
loopne
bound
test
movsl
jmp
push
pusha
dec
inc
dec
jno
xchg
ds
push
or
push
jecxz
push
rdtsc
jno
enter
iret
int3
andl
xchg
fstpl
icebp
out
push
mov
dec
int
cmp
lods
push
scas
cmp
sub
gs
in
out
xchg
jp
popf
inc
xchg
jmp
mov
lods
fdivrl
fdiv
push
lret
inc
popa
loopne
ja
ja
adc
int3
in
out
rcrl
pushf
movsb
fldpi
xlat
in
adc
and
call
xor
mov
imul
inc
push
test
adc
loop
mov
inc
xlat
dec
push
fabs
ss
setb
filds
jle
pop
sbb
popf
movsb
decl
negl
movsl
lock
push
movsb
leave
add
je
adc
add
shll
ljmp
lods
jle
icebp
mov
inc
dec
jnp
bound
stos
cltd
jge
xor
lods
sbb
lret
lods
mov
sahf
addr16
or
adc
sbb
test
cld
sub
mov
aad
mov
push
loopne
arpl
jbe
sub
out
mov
leave
cs
sub
jle
and
pop
pop
jmp
jmp
in
dec
mov
mov
add
in
out
aam
fwait
jecxz
aam
push
push
cmp
popf
xchg
std
cmpxchg
push
xor
jle
push
aaa
scas
xor
xor
xor
mov
sub
pusha
pop
sarl
out
inc
bound
jns
scas
dec
stos
repz
mov
inc
xor
rolb
mov
add
mov
xor
mov
pop
dec
push
push
insb
cltd
add
cmp
xor
xchg
jge
add
jp
pop
in
add
out
inc
arpl
mov
mov
shrb
movsb
pop
pushf
jbe
shl
add
clc
dec
subl
mov
imulb
mov
xor
mov
push
pop
jb
push
pop
mov
aas
jnp
jle
out
cli
cmpsb
jle
out
or
xor
or
and
pop
fst
and
popf
cmp
inc
mov
rorb
das
icebp
mov
int3
shl
mov
scas
mov
dec
lds
and
pop
out
test
loopne
icebp
xchg
cmp
cmp
cmp
loope
or
leave
mov
arpl
insl
pop
loope
ja
ljmp
inc
adc
pop
and
jle
jnp
icebp
movsb
lods
inc
mov
inc
mov
stos
jno
push
adc
and
clc
inc
gs
ss
shl
adc
cmc
insl
jno
out
fldcw
add
push
push
cmp
ja
sub
and
pop
xorb
test
mov
loopne
fwait
repnz
or
lock
gs
aad
sub
mov
lods
dec
xchg
in
insl
popf
mov
push
repz
xchg
repz
imul
mov
push
push
jo
mov
scas
push
rorl
popf
lods
adc
cmpsl
mov
lock
test
imul
dec
inc
or
inc
int
mov
rcr
lock
fimull
xchg
pop
dec
mov
xor
xchg
movsl
inc
jmp
arpl
cmc
sbb
loop
std
sub
xchg
jle
sub
test
sub
aad
cltd
sbb
xor
iret
loope
gs
jl
movsb
mov
push
in
xchg
fcomps
pusha
setns
and
int3
aad
jle
adc
aad
or
aam
xchg
cltd
in
and
sbb
push
lods
leave
dec
rorl
insl
dec
je
pop
sub
jle
xor
movsl
or
lock
pop
and
shll
jmp
cwtl
scas
cmp
fistpll
fst
test
cmp
insb
mov
pop
sub
cmp
inc
stos
cltd
mov
sbb
or
pop
sbb
int
push
push
sbb
mov
sub
gs
dec
xchg
cmp
fdivrl
push
mov
xchg
insl
pushf
mov
dec
shr
sub
mov
sub
in
dec
fwait
inc
scas
int3
enter
mov
stos
cmc
xchg
mov
scas
loopne
adc
aad
mov
cmp
jns
cmp
fcomps
pop
insl
int3
jbe
popa
xchg
cmp
es
popf
cmovo
push
dec
sub
xor
imul
adc
insl
fstl
and
adc
pop
in
pop
int
mov
or
push
add
xor
icebp
fs
into
movsl
xchg
adc
popa
imul
xor
movsl
push
in
sbb
dec
cmp
in
push
outsb
std
aad
jno
leave
mov
popf
xchg
mov
stc
add
dec
mov
jno
add
addr16
cmp
cmp
imul
cmp
loopne
mov
mov
fsubrs
dec
add
inc
call
dec
mov
test
add
jns
push
jae
sarb
leave
sub
mov
dec
cmc
cltd
insb
pop
loope
out
jmp
mov
push
popf
mov
test
adc
ljmp
xchg
sbb
add
mov
add
jne
sub
int
pop
mov
fstl
sub
xchg
pushf
gs
cmp
in
lret
push
sbb
sbb
fs
out
sbb
lods
in
pop
pusha
gs
in
pop
dec
icebp
jge
rorb
xor
popf
cs
or
in
inc
pusha
sub
pop
lock
lods
in
dec
cmp
sub
jae
mov
xor
xor
jmp
cltd
out
popa
fcomps
push
enter
lds
inc
push
and
sbb
mov
push
fsub
imul
dec
test
dec
mov
push
ljmp
subl
sub
and
pop
out
adcl
xchg
mov
insl
adc
imul
adc
dec
cltd
fdivrs
imul
scas
pop
dec
cmc
or
xor
sub
sbb
xor
in
lods
jmp
ficoms
mov
or
xchg
xor
cmp
sbb
inc
xchg
xor
call
push
xchg
pop
pop
cmp
enter
adc
jne
int
shlb
lock
dec
adc
sbb
leave
movsl
dec
sub
add
pop
jne
mov
xor
xchg
jno
cmp
shll
xor
popf
fstpl
clc
sti
cmp
cmp
out
mov
dec
jle
fnstsw
xor
gs
adc
rcr
pop
lahf
lds
inc
xchg
xor
cld
movsb
in
mov
mov
mov
insb
lahf
outsl
imul
leave
xchg
jge
and
fs
xor
cmp
movsl
enter
imul
push
add
xor
insb
cwtl
pop
icebp
in
lea
mov
in
cmp
xchg
loopne
mov
enter
js
movsl
adc
sub
repnz
xchg
popa
adc
xor
fdivs
in
push
outsl
mov
pop
int3
shrb
lock
mov
hlt
popa
cli
fmuls
in
leave
jl
push
inc
popl
into
adc
add
dec
fldcw
push
lods
pop
rcrb
fstpl
xor
add
cmp
mov
flds
lds
mov
ror
sub
dec
sub
mov
push
rcrl
in
lock
int3
xchg
and
sbb
enter
loopne
pop
push
faddl
inc
adc
imul
mov
sbb
mov
lcall
mov
pop
stc
enter
movsb
jnp
movsb
lods
fs
dec
scas
inc
add
fcmovne
sub
cwtl
and
cmp
and
or
lahf
xorb
cmp
mov
out
dec
sub
inc
in
push
jp
scas
xchg
cltd
shr
adc
pop
popf
insl
mov
inc
or
in
enter
adc
mov
roll
inc
lods
in
cmp
fstpl
sbb
pop
inc
jne
xchg
lea
sub
jl
popf
xchg
adc
adc
pop
fnstsw
adc
jmp
mov
mov
aad
push
fwait
push
adc
mov
popf
pushf
call
leave
dec
in
and
ret
mov
pop
sbb
sub
jne
pop
and
push
cmp
in
sbb
les
xor
insl
enter
cmp
xor
js
enter
outsl
jl
iret
xchg
test
roll
orb
mov
in
inc
push
fxch
adc
aam
movzbl
adc
inc
and
fsubl
sub
dec
mov
cmp
xchg
adcb
fprem
sbb
xor
pop
rolb
inc
test
jge
sbb
aam
dec
mov
in
int
cmpsb
shl
iret
push
test
gs
push
adc
adc
repnz
and
sub
pop
xor
xchg
add
popf
int
cmc
inc
jno
jne
xor
inc
sbb
cmp
xchg
jne
ret
mov
xlat
dec
mov
add
out
sbb
cmp
out
dec
push
inc
nop
mov
xchg
inc
adc
lods
loope
lret
lock
popa
add
enter
adc
push
btr
mov
cltd
inc
test
int
adc
in
popf
rcl
into
mov
pop
and
outsl
call
cmpsl
lds
insl
jo
mov
adc
aad
das
fxch
mov
and
test
inc
dec
lods
xchg
pop
inc
push
adc
popf
mov
inc
push
lds
scas
pop
jle
push
fs
pop
lahf
cmp
aad
mov
xchg
sub
adc
loope
xor
sub
fnsave
xchg
and
test
testl
jno
lods
nop
in
out
movsl
xchg
es
roll
sub
xchg
cmp
ret
mov
roll
faddl
adc
test
hlt
fs
test
inc
inc
call
int3
adc
push
fsubrs
popf
adc
cmp
dec
push
mov
shrb
iret
jnp
call
lock
and
enter
adc
xchg
adc
pop
push
xlat
in
pop
push
ret
add
in
adc
mov
lds
out
push
mov
cmp
or
push
push
mov
pop
xchg
pushf
inc
jl
mov
dec
jge
cmc
xchg
xchg
adc
sub
pushf
lock
dec
xor
mov
out
movsb
sbb
dec
push
in
push
pop
xor
xchg
fimuls
or
mov
lods
fsub
pop
daa
inc
inc
ja
xor
cmp
adc
mov
test
push
or
loopne
and
xchg
jno
fstps
fsubrs
test
mov
cmp
lahf
push
push
cmc
sub
sub
cltd
call
lds
icebp
out
aam
inc
xor
and
std
pushf
mov
cmp
dec
lcall
lock
xor
and
lods
xor
push
sahf
pop
dec
lret
cmp
sub
adc
popl
cmp
push
dec
mov
add
xor
loope
hlt
pop
sub
cmp
in
mov
sbb
fwait
test
mov
adc
aam
pop
pop
and
jmp
leave
cmp
enter
mov
je
out
imul
sub
outsb
pop
test
mov
jno
xor
dec
int
dec
ret
out
inc
enter
xchg
xor
shll
mov
scas
in
fisubrs
push
xor
in
push
jnp
fcoms
popf
push
push
mov
out
scas
mov
aad
jne
add
xor
fnsave
xor
in
lods
mov
dec
and
loopne
and
cs
add
push
cmp
sub
enter
imul
pop
addr16
shrl
scas
repnz
pop
jns
dec
cmp
popa
imul
popf
mov
pop
adc
mov
xchg
pop
shrb
or
in
gs
sub
adc
dec
adc
in
in
sbb
add
sbb
fsts
jae
notl
adc
sahf
sub
cmc
shrl
inc
sub
dec
inc
xlat
jl
testb
sbb
ror
int3
sbb
jecxz
xchg
xor
push
out
idiv
loopne
dec
jle
int3
imul
push
in
aas
xchg
pop
pushf
lock
sub
ljmp
pop
cwtl
mov
xchg
add
sub
pop
fnsave
int
cmc
in
sub
shll
or
mov
sbb
and
fadds
rcrl
lea
jno
arpl
jecxz
mov
lods
sbb
gs
addr16
and
enter
sbb
fldenv
adc
lock
aas
mov
test
inc
aad
cmp
pop
shlb
shll
push
test
mov
movsl
jecxz
shll
movsl
sub
mov
loopne
ja
mov
cmp
in
adc
sub
call
fwait
mov
cmp
xor
pop
insl
dec
xor
or
aam
sbb
cmp
mov
xor
xor
lock
mov
or
aad
cli
cmp
sub
shll
push
gs
mov
repnz
adc
faddl
lock
aam
mov
add
mov
cmp
cmp
jne
mov
xchg
imul
inc
arpl
push
stc
xor
adc
xchg
lock
lahf
call
dec
loopne
fdiv
insl
mov
mov
xor
lret
cmpsl
jecxz
das
int
xor
xchg
sbb
cmp
in
adc
push
icebp
push
loope
push
popf
jne
gs
pop
fmul
mov
aaa
cld
roll
orb
shll
pop
pop
and
fmul
scas
cmp
mov
lods
loope
int
cmc
icebp
lea
and
push
mov
in
movsl
mov
in
test
gs
dec
sub
lods
pushf
fucom
icebp
push
push
inc
mov
push
test
mov
aam
sbb
xor
outsb
xchg
and
pop
insl
mov
xor
mov
jne
xchg
lret
mov
jno
push
fwait
inc
cvttps2pi
dec
or
addr16
call
insl
nop
fnstsw
dec
test
inc
movsl
orb
sub
in
inc
jnp
jae
pop
mov
jnp
in
and
mov
fnstsw
in
push
or
jge
xchg
fldcw
add
mov
xchg
mov
out
shrb
pop
in
gs
js
popf
lcall
jmp
xorb
mov
inc
xchg
lock
shll
in
popa
and
inc
aaa
sub
aas
lock
sahf
aas
aam
sti
sbb
inc
rorb
cmp
sub
xor
inc
insl
fmull
daa
jne
imul
out
pusha
cmp
adc
aad
aam
fldl
push
rcl
rcl
jecxz
xchg
mov
fcompl
cmp
and
into
pop
in
lods
mov
sbb
in
loope
dec
pop
icebp
cmp
and
lock
into
enter
jmp
imul
pushf
js
adc
cmpsb
push
xor
in
cmp
xor
in
stos
jmp
add
mov
out
jae
icebp
and
call
imul
add
ss
cmp
arpl
fwait
sbbl
jle
push
mov
push
sbb
stos
lret
jle
movsl
jl
and
fsubl
mov
outsb
mov
dec
sub
mov
pop
fs
cmp
into
shll
xor
sbb
xor
cmpsl
xor
or
inc
xchg
imulb
cli
push
mov
in
pushf
in
enter
icebp
outsl
cmpb
sarb
cld
adc
in
xchg
int
xchg
sbb
cmc
fmuls
aam
dec
jp
push
inc
clc
stos
inc
gs
stos
sbb
test
pushf
inc
push
int
shrb
xchg
adc
jno
adc
aad
mov
ror
je
inc
pusha
in
or
loope
mov
and
push
mov
icebp
int3
lea
and
leave
adc
ret
push
sbb
xor
jmp
adc
jmp
lods
adc
in
pop
dec
mov
pusha
out
icebp
int
out
aas
icebp
aad
popf
loop
sub
xor
test
inc
jae
mov
int
cmp
pop
sub
test
aad
inc
jno
or
push
push
inc
in
lret
jne
lods
and
fchs
adc
jno
dec
fbld
sbb
push
call
leave
insl
xor
and
aas
xchg
lock
fbstp
push
fs
and
jp
dec
sub
xor
adc
lock
cltd
in
sub
jno
sbb
fcoml
icebp
insl
push
lret
and
push
jne
shll
lds
xor
shlb
test
icebp
lret
mov
movsl
and
push
dec
add
sub
push
movsl
inc
cmp
int
dec
in
jmp
sahf
xchg
pop
adc
xchg
js
inc
in
xchg
xchg
mov
sub
orb
cltd
fsincos
pop
inc
ljmp
stos
loop
cmpsb
icebp
xchg
cmp
in
clc
popf
adc
add
cmp
popa
inc
push
dec
inc
pcmpeqw
test
popf
mov
cmp
inc
and
push
mov
jge
mov
in
scas
fstl
call
dec
in
jno
mov
jmp
popf
inc
dec
out
sub
push
fmull
add
cmc
outsb
clc
lcall
loope
call
and
jmp
sarb
addl
mov
aas
pop
cmp
cmp
roll
movsl
cmc
adc
xchg
mov
cmc
popf
out
hlt
in
stos
lea
int3
into
mul
pop
icebp
lods
mov
in
std
adc
mov
and
ja
int
pushf
lds
xor
sbb
ret
in
sub
clc
adc
mov
call
and
add
stos
cmc
xor
inc
sub
scas
les
popl
adc
popa
insl
fsubl
sbb
pusha
xchg
push
mov
sbb
loopne
xor
jmp
sbb
in
pop
cmc
testl
and
mov
push
sbb
mov
jo
gs
rorl
mov
shrl
inc
xchg
add
in
les
rcrl
and
or
pop
jmp
adc
cs
scas
lds
popf
fcompl
fisttpll
in
cmp
dec
lock
imul
lcall
fdivp
das
and
mov
lods
mov
sbb
xor
pop
popf
jo
jl
or
fnstcw
aad
jmp
push
mov
mov
xor
and
xchg
adc
adc
adc
loopne
sbb
mov
jmp
sbb
and
pop
adc
sub
adc
sbb
movsl
fst
jno
mov
xor
add
lock
jg
cmpsb
push
push
dec
sub
jmp
and
mov
fxch
fs
jne
xchg
movsl
sub
loopne
xor
cmp
xor
xchg
pusha
ss
fs
inc
or
add
lock
int3
fucomp
hlt
jl
testl
gs
sbb
xchg
call
lock
gs
mov
imul
jmp
pop
lods
jne
pop
mov
inc
dec
cmp
push
sub
jl
lods
aaa
insl
cltd
xchg
add
mov
fnstenv
pushf
sbb
ret
popl
test
les
nop
sub
sub
aam
pop
xchg
dec
loope
scas
inc
jno
test
cmpsb
sarl
mov
pop
daa
cmpl
xor
scas
sahf
test
test
or
mov
in
or
add
or
movsb
sub
in
cld
cltd
sub
movsl
cmc
call
adc
in
push
rorl
ret
fstl
sti
and
aam
or
scas
std
fmul
enter
lock
js
popa
outsb
rorb
nop
ret
push
sub
aam
sub
jns
mov
dec
and
xor
push
shrb
aad
sarl
test
and
mov
pop
mov
sbb
jne
insl
xor
adc
rcll
loopne
int3
sub
sub
mov
cmp
out
fldln2
mov
add
jb
enter
xchg
stc
mov
sub
icebp
shrb
neg
int3
inc
mov
sti
mov
pushf
call
lock
sarb
mov
lahf
push
ljmp
mov
xchg
jl
fsubl
xchg
scas
or
aas
or
pop
cmp
movsl
adc
rcll
mov
fcom
popf
push
mov
aad
jne
add
adc
xchg
cmp
test
and
rcr
in
cmp
dec
jmp
scas
sub
mov
cmc
cmpsb
aas
mov
cmp
aad
test
xor
adc
loopne
sub
mov
pop
loope
dec
ljmp
popf
push
in
and
and
out
fsubrl
sbbb
jmp
popf
sub
sub
push
icebp
mov
dec
cmc
cmp
xchg
in
imul
aad
gs
sbb
xchg
sbb
mov
fcmovne
add
into
and
xor
and
loope
loop
out
pop
daa
aaa
cltd
sbb
or
popf
sti
aam
mov
adc
mov
movsb
push
sahf
xchg
fs
pushf
dec
push
in
imul
dec
cmp
mov
or
push
lods
mov
pushf
gs
sbb
cmp
xchg
js
test
test
cltd
sbb
dec
pop
mov
je
cmpsl
or
xchg
aad
pop
icebp
mov
fdivr
ja
push
pop
aam
adc
push
shrl
pop
sarb
xchg
cvttps2pi
vpsubusw
xor
mov
mov
inc
cltd
leave
dec
mov
inc
mov
pop
sbb
test
imul
into
push
les
int
dec
imul
mov
mov
dec
sub
mov
or
gs
ljmp
inc
pop
push
inc
inc
adc
cmp
jns
xchg
iret
dec
pop
xchg
addr16
test
lods
mov
mov
xchg
push
sub
rcl
int3
xor
mov
stos
sbb
pminub
jecxz
test
adc
ljmp
imul
pop
xor
insl
ss
addr16
sub
jo
popf
nop
iret
cmp
mov
mov
out
mov
xlat
sbb
sarb
cmp
sub
xchg
enter
mov
sbb
pop
jbe
push
stos
icebp
aam
mov
pop
dec
inc
into
push
push
pushf
cmp
rorb
xchg
mov
mov
push
in
leave
sub
mov
mov
in
in
bswap
mov
mov
insl
mov
xor
test
icebp
mov
sbb
mov
mov
in
fldenv
xor
lret
cmp
adc
sub
in
std
call
lds
inc
lods
adc
mov
jmp
aam
call
aaa
cmp
sbb
loopne
pop
xlat
popf
mov
sbb
dec
fstps
add
lock
push
push
leave
call
adc
add
sub
int3
es
push
jo
xor
sub
xor
pop
mov
cmp
and
add
mov
inc
rclb
xor
sub
pushf
or
and
inc
mov
sub
pop
xor
popa
subl
clc
aad
in
inc
pop
sarb
and
fdivl
adc
popf
adc
cltd
xor
cmp
sub
cmc
fstl
mov
cltd
call
xchg
dec
enter
sbb
dec
hlt
cmp
outsl
int3
and
mov
shll
mov
lcall
aaa
rorl
xor
mov
sub
adc
and
movsl
mov
ret
nop
inc
enter
jl
fnsave
cli
les
fbld
ss
pop
pop
fs
gs
xchg
test
xchg
out
and
sbb
icebp
cmp
in
jne
loope
sbb
inc
xor
lods
int3
sub
popa
scas
cld
xor
int
cmp
mov
sbb
jle
mov
inc
popa
jno
xchg
xor
mov
sub
cmpsb
mov
icebp
loopne
adc
xchg
pop
nop
jo
in
cld
dec
mov
imul
xor
sarb
jns
cmp
add
in
clc
mov
into
aad
stos
dec
cmp
pop
gs
dec
push
xorb
push
imul
shll
push
mov
movsb
sub
or
jno
shll
popa
xchg
lahf
and
mov
cmc
enter
fiadds
fucom
inc
insl
cwtl
out
cld
sub
inc
int3
rcrl
and
or
sar
xor
pop
sub
fs
mov
ret
lods
popa
mov
into
out
inc
dec
sbb
add
cmp
pop
adc
in
adc
int
shrb
std
cmp
in
hlt
push
cmp
push
int3
mov
jmp
mov
sbb
inc
cmp
and
adc
adc
sbb
xchg
push
aam
push
jne
int
out
aaa
lock
adc
pop
cmp
pop
outsb
push
es
imul
lods
mov
fcoml
mov
outsb
popf
into
das
mov
ficoms
cs
cmp
dec
adc
test
cmp
jmp
or
sub
gs
adc
and
xchg
mov
int
mov
cld
test
and
cmc
jle
inc
mov
movsb
in
fsubr
mov
stos
int
imul
ret
adc
lock
xchg
jmp
in
cmc
adc
sbb
jle
mov
xchg
jno
mov
aam
and
fadds
and
xor
and
test
jle
loope
jmp
mov
mov
es
jmp
sub
call
and
dec
fnstenv
sub
push
cmp
push
xor
insl
adc
in
addr16
rol
movsl
nop
mov
cmp
shl
scas
and
test
bound
dec
scas
dec
out
inc
mov
xor
jno
push
and
shrl
mov
test
push
loopne
lds
sub
cmp
xor
or
push
maskmovq
mull
fcmovne
aam
adc
mov
test
pop
int3
fsubl
mov
cld
xor
xor
int3
cmc
xor
xor
lea
fdivrs
in
cmp
lds
lock
jl
mov
adc
push
rcll
test
outsl
sub
or
loope
nop
sahf
cli
and
enter
push
insb
movswl
pop
test
dec
mov
imul
testb
xchg
pop
loope
mov
sarb
pop
scas
mov
xor
sub
pop
mov
and
sbb
adc
mov
mov
and
dec
loopne
je
int3
jge
or
movl
das
dec
rcr
adc
shl
bound
xor
frstor
out
xchg
adcb
aam
sbb
cmpsl
inc
dec
int
sbb
fnstcw
cmp
add
dec
adc
lods
std
and
sub
adc
jno
sub
icebp
mov
inc
in
xchg
rcl
add
cmp
mov
adc
lock
fildl
lcall
cmp
lahf
mov
push
in
shll
cmc
and
push
xchg
mov
leave
int3
add
inc
xor
int
negl
pop
pop
or
leave
in
sub
arpl
and
test
in
out
inc
lods
sub
aad
int3
ret
mov
xchg
lret
lods
in
cmc
out
mov
push
cmp
insl
in
sbb
cmp
push
leave
add
divb
xchg
sbb
ret
icebp
and
inc
in
jae
jmp
jne
les
and
call
xchg
fsubr
push
xlat
shl
outsl
push
into
clc
xchg
pop
push
insl
mov
in
fsubrl
imul
insl
jl
lds
in
sbb
xchg
sahf
scas
and
fisubrl
mov
mov
scas
mov
shrl
push
sbb
popf
sub
sbb
int3
or
out
mov
in
orl
cmp
push
xor
popf
dec
dec
push
jo
jbe
leave
and
push
pop
sbb
push
and
cmp
test
filds
inc
enter
push
imul
leave
shll
pop
test
cmp
es
fcompl
xor
sbbb
in
gs
lods
jns
call
in
sbb
sbb
cmp
gs
jmp
mov
int3
cmovno
mov
sti
sbb
rorl
fld
insl
jne
sub
push
mov
scas
add
push
pop
mov
and
mov
pop
mov
in
stos
cmp
cmc
lock
movsl
xchg
inc
lret
xchg
xorps
out
gs
popa
test
xchg
jno
or
adc
mov
fs
jl
adc
push
fldenv
sub
stc
jge
sub
cmp
arpl
push
mov
iret
fcoml
add
loope
inc
test
fdivl
bound
aad
fcoms
mov
jmp
sbb
mov
cmpsb
hlt
in
jge
xor
adc
sbb
and
pop
dec
call
lahf
mov
xor
and
jo
and
sbb
add
out
sub
pop
inc
mov
aas
push
xor
pop
push
push
fldcw
adc
dec
inc
imul
aaa
popf
cmp
push
insl
int3
push
call
sub
xchg
vmovntps
mov
movsl
dec
jae
not
ja
int3
sub
scas
pop
dec
cmp
xchg
imul
mov
aad
in
mov
int3
scas
mov
sbb
mov
gs
jl
lds
sbb
sarl
push
pop
xchg
je
mov
or
pop
jge
enter
mov
jne
lcall
dec
cmp
mov
insl
loope
int3
gs
std
outsb
inc
insl
lods
jle
in
imul
lock
nop
fists
lret
lds
outsb
sbb
in
int
iret
fdivrl
ds
iret
and
int
movsl
popa
movsb
fadds
lock
adc
call
add
fldl
xorb
pushf
ja
outsl
adc
add
xchg
sub
in
sbb
mov
inc
cmp
lea
xchg
push
mov
stos
rclb
xor
cltd
lret
push
inc
loope
sarl
push
xchg
jae
lods
or
out
mov
in
cmp
dec
adc
fld
loope
mov
lock
mov
and
sti
xchg
or
jno
sub
sbb
mov
loope
jbe
rclb
and
push
int3
dec
add
sub
out
and
loope
in
f2xm1
icebp
xor
out
insl
inc
mov
popa
in
adc
push
mov
and
push
das
adc
aas
xor
sub
push
xor
adc
test
imul
add
mov
mov
out
insl
fcomps
jge
adc
xchg
repz
adc
pop
lds
int3
fsts
popf
mov
mov
mov
aad
sub
push
les
sbb
popa
inc
cltd
icebp
push
adc
and
sbb
inc
imul
jne
inc
sub
sub
insb
mov
repz
lock
adc
movsl
cld
jecxz
int
mov
dec
xor
fabs
cmpsb
mov
imul
int
jl
pmaddwd
insl
jno
sub
and
add
xchg
in
popa
jmp
stc
insb
popf
imul
cltd
fs
sub
leave
sub
pop
lea
in
jns
out
xor
sbb
out
inc
fs
pop
sub
call
xchg
test
arpl
or
cmp
sub
cmp
pop
add
rcl
call
jmp
lahf
xcrypt-ofb
cmpsl
test
out
push
cld
dec
in
add
inc
dec
and
sbb
sbb
sbb
mov
inc
aam
dec
lea
test
xchg
insl
dec
fisttpl
cmp
fwait
mov
xchg
mov
aad
insl
roll
adc
jne
sbb
out
push
movsl
inc
xchg
adc
and
jge
cld
mov
sub
xor
push
sbb
aas
push
lds
std
aas
fs
test
inc
xchg
xor
pop
popa
fstl
sbb
jae
enter
sbb
pop
fsubl
push
lock
sub
sub
lahf
xor
adc
mov
ss
jb
cmc
and
shr
outsb
in
push
insl
jmp
loope
int
rcr
ror
xor
mov
clc
inc
popf
into
aam
mov
sub
insl
imul
pop
sbb
rclb
add
fsts
aam
lds
gs
lock
cmp
xchg
push
pop
and
pop
icebp
sbb
enter
pop
outsl
jae
sub
cmc
cmp
fistps
pop
sbb
popw
mov
xor
aam
xor
xchg
dec
fadd
cmp
mov
nop
xor
in
fildll
jle
sbb
add
xor
pop
aad
adc
imul
xchg
repz
jmp
lods
iret
and
sahf
mov
xchg
gs
int3
cmc
inc
jmp
push
jle
xchg
in
mov
cmp
popf
push
aam
sub
jbe
and
pop
mov
mov
pop
mov
push
xor
test
lods
scas
pop
leave
aam
rcr
imul
and
jle
xor
dec
gs
mov
int
inc
xchg
sbb
test
fnstsw
sub
and
pushf
pusha
sbb
icebp
enter
popf
imul
gs
in
mov
inc
xchg
fcomps
mov
insl
insl
or
adc
fcomps
rolb
push
cld
decl
ror
pop
mov
xchg
enter
lds
loopne
mov
jmp
pop
in
fucomp
dec
in
jmp
into
dec
xor
cld
icebp
lea
out
daa
outsb
out
outsl
imul
call
xchg
aam
cmc
popa
lea
dec
and
xor
jp
pop
loope
scas
into
sahf
sub
cwtl
int3
dec
stos
mov
dec
cltd
mov
or
popa
push
loop
in
xor
in
mov
xor
imul
cmp
int
pop
mov
movsl
fdivrl
in
push
fwait
dec
mov
sub
in
and
xchg
mov
icebp
pop
xor
push
test
mov
mov
pop
fs
mov
sub
inc
jge
in
dec
out
icebp
jge
sub
rol
int3
imul
cmp
mov
fcoms
in
fdivs
adc
lods
shlb
adc
mov
push
mov
cmp
inc
mov
push
lock
aad
dec
mov
mov
dec
mov
cmc
add
clc
in
cmp
cmp
in
aad
jno
xor
mov
adc
out
adc
int
test
sbb
fsubrl
sub
insl
inc
push
imul
frstor
jo
lods
insl
xor
rcrb
mov
pop
dec
dec
push
mov
insl
and
out
xor
gs
dec
mov
sbb
mov
iret
push
insl
int
stc
fsubs
icebp
dec
jmp
roll
xor
loope
test
andb
jno
mov
shlb
pop
or
sub
inc
popa
icebp
mov
xchg
imull
cli
fdivrs
sbbl
rclb
mov
pmaddwd
cli
xor
and
aad
out
leave
lea
lret
xchg
sarb
or
add
iret
enter
lods
in
call
mov
aad
leave
inc
dec
imul
inc
cmp
mov
shr
adc
jg
popf
popf
xchg
outsl
in
lahf
icebp
outsb
loopne
mov
sbb
xchg
dec
mov
sahf
pop
addl
in
inc
shll
loopne
or
mov
dec
push
inc
jno
daa
cmp
jbe
outsb
pop
lahf
dec
into
sub
andps
in
xchg
jle
loopne
jmp
andl
lds
sub
jae
int3
jle
sub
cltd
jl
mov
xorb
repz
pop
rcl
jb
jmp
in
cmp
and
sbb
and
adc
pop
xor
fxch
mov
dec
int
xor
roll
int3
dec
cltd
mov
js
sbb
sbb
in
rclb
loopne
sarb
insl
add
jmp
insl
imul
movsl
lods
shr
cli
dec
jle
fistps
sbb
xor
loopne
scas
int
in
stos
gs
int
mov
lods
fnsave
leave
in
fs
xor
adc
nop
inc
mov
pop
push
dec
iret
xor
dec
loop
fmuls
mov
adcl
adc
sub
test
into
sub
lock
push
pop
push
xchg
xor
or
lock
fcompl
add
inc
pop
push
repz
xor
fs
bswap
mov
sarl
mov
ffree
adc
icebp
push
dec
gs
lods
test
lds
jmp
int
sub
jne
mov
and
pop
loop
pop
into
or
outsl
sub
pop
lods
push
push
mov
cltd
loop
lret
mov
xlat
xchg
clc
scas
cmc
wbinvd
loopne
cmpb
out
in
aam
popf
jne
sbb
xor
loope
mov
rclb
xor
gs
in
cmc
inc
test
in
fstps
loope
or
rorl
pop
shlb
out
cmp
and
adc
cmpsb
aas
push
xchg
jne
dec
mov
in
shll
mov
push
int3
nop
dec
shlb
pop
call
pop
hlt
das
add
jmp
aad
mov
int
mov
adc
dec
icebp
xor
bnd
cmp
sub
jle
fmul
in
call
dec
pop
cwtl
lock
mov
sbb
jae
fdivl
inc
cmp
rcrb
jge
rorl
jecxz
jno
frstpm(287
pop
dec
jmp
pop
sub
cmp
pushf
lea
test
inc
test
xchg
popa
adc
shl
xor
push
cmp
xchg
fmul
loope
lods
mov
popf
mov
into
dec
fildl
xchg
add
es
xchg
orb
cmc
jne
add
mov
xchg
sub
les
popf
sti
pop
pop
sti
xor
adc
add
xchg
pop
lods
adcb
mov
pop
fcoms
xchg
xor
pop
rol
in
mov
push
loopne
dec
jle
shll
enter
insl
xor
push
mov
cmp
pop
or
jne
pop
and
sub
into
inc
sbb
in
push
pcmpeqb
fstps
aad
insl
fcoml
test
or
push
movsb
pop
repnz
mov
mov
mov
push
cwtl
mov
fadds
sbb
cltd
cmp
into
pushf
jno
add
xchg
or
mov
sub
lods
sbb
mov
loopne
in
add
cmp
jo
xchg
in
sar
insl
loopne
in
mov
mov
xor
sub
push
mov
xor
addr16
mov
enter
addr16
fsubs
fmull
and
add
shr
lock
mov
fyl2x
in
sbb
fwait
lock
xchg
add
test
jmp
roll
cltd
pop
out
xchg
ror
and
mov
scas
and
adc
cmp
xor
out
jecxz
and
lock
mov
enter
lcall
cmc
sbb
adc
ret
dec
pop
gs
dec
in
cmp
int3
or
add
lds
call
test
loope
jle
adc
hlt
subb
vpandn
aad
gs
adc
cmp
loopne
popa
mov
xchg
mov
loope
dec
or
adc
sub
ror
mov
out
cltd
mov
push
fidivs
xchg
adc
mov
icebp
push
lods
sarb
in
adc
in
pop
mov
int
loopne
mov
push
sub
pop
mov
dec
sbb
mov
cmp
xor
popa
dec
xor
mov
ficoms
insl
push
cmp
push
cltd
int
inc
int
pop
sbbl
iret
add
jno
imul
mov
in
leave
gs
inc
enter
mov
int
dec
sub
vunpckhps
dec
add
sub
sub
sub
sbb
adc
scas
mov
and
or
enter
aam
mov
and
add
cmp
xchg
adc
loope
out
nop
adc
sub
dec
mov
mov
push
adc
inc
sbb
das
cli
push
js
in
movsb
shlb
pop
cmp
imul
mov
sti
xchg
fwait
ret
nop
jle
aam
mov
leave
push
sbb
ja
dec
xchg
jmp
mov
rcl
aad
fisttpll
int
sub
insl
add
rorb
fdivr
dec
sbb
xchg
adc
in
icebp
sub
cmc
cmp
aad
in
sub
loop
divl
aaa
out
cli
dec
into
pusha
cmc
lcall
pushf
push
sub
das
or
sbb
jecxz
pop
mov
in
cltd
mov
sbbl
daa
jl
cmpsb
mov
mov
in
jl
mov
mov
fisttpll
adc
mov
sbb
pop
pop
ja
adc
lds
lock
dec
out
repz
in
adc
in
pop
pop
adc
xchg
mov
dec
or
int3
xor
loopne
mov
xchg
mov
push
out
jne
aam
xor
or
sbb
in
cmp
in
adc
test
aad
sar
std
dec
and
cmc
dec
int
cmp
fistpl
adc
xchg
mov
fsubrl
xchg
adc
rclb
fwait
cmp
dec
and
xchg
sbb
push
inc
loope
lea
dec
jmp
sbb
fisttpll
mov
xor
in
sbb
es
push
popf
in
stos
ljmp
rolb
ret
sub
popf
push
mov
add
dec
in
fisubrs
xchg
test
es
jmp
lret
mov
inc
cmp
cmp
dec
imul
xchg
xor
aas
mov
imul
mov
inc
pushf
push
sub
fiadds
mov
xor
mov
in
xor
jge
sub
lock
rorb
and
mov
jbe
adc
in
loope
lods
and
and
push
leave
je
fnstcw
cmp
int
xchg
mov
cmc
cmp
lret
jmp
jmp
and
push
icebp
mov
loopne
leave
rclb
xchg
adc
imul
lret
push
mov
in
je
mov
out
dec
int
int3
cltd
fstp
sar
jle
sbb
and
insl
addr16
adc
dec
movsl
fucom
jecxz
cs
push
jne
roll
loop
inc
mov
inc
incb
push
push
sbb
lea
in
dec
or
xchg
xor
jnp
pop
test
cmp
and
fstp
jge
out
pop
sbb
adcl
fcomps
insl
sbbb
xor
sbb
mov
push
fst
pop
and
mov
insl
test
cltd
lret
sub
outsl
jmp
dec
dec
ret
cmp
jmp
jno
pop
fstl
sti
fcompl
pop
sbb
pop
ja
fwait
push
movups
in
push
fcmovnbe
mov
inc
adc
clc
push
dec
lds
leave
out
add
outsb
mov
jle
fists
mov
mov
int
xchg
cltd
fcmovnbe
and
fdivrl
jo
pop
xor
adc
pushf
add
dec
xchg
into
fstl
sbb
call
mov
sbb
pushf
shrl
les
adc
dec
push
leave
or
mov
jmp
jge
inc
lock
cmc
jecxz
add
imul
or
fldenv
adc
mov
in
movsl
xor
rorb
jne
jo
jle
add
lock
loope
shl
mov
mov
mov
int
rorl
into
mov
xchg
out
xchg
jl
popf
jno
fld
mov
or
xchg
stc
adc
outsb
jb
pop
insl
aad
sub
int3
xlat
and
loope
mov
sub
call
lds
jnp
cltd
movsb
pop
jmp
sub
mov
xor
int
xlat
lods
movsb
leave
mov
pushf
enter
test
push
sub
rorl
inc
jmp
iret
fst
and
in
jle
sbb
loopne
cmp
movsb
xchg
and
dec
js
scas
rorb
adc
sbb
cli
outsl
daa
fmull
dec
cmpsb
push
shrl
in
aam
pop
mov
lahf
cmp
push
mov
shr
out
dec
sti
jle
aad
xchg
fisttps
add
sub
dec
mov
mov
loopne
sub
jmp
test
outsl
mov
pop
scas
or
adc
in
leave
cmp
iret
loopne
test
in
inc
leave
jle
cmp
aam
in
out
and
xor
sub
xchg
mov
mov
lds
lock
mov
insl
mov
sub
add
movsl
insl
adc
mov
int3
sarl
sbb
scas
cmp
fmul
aad
hlt
sub
stc
movsb
push
insl
fisttps
imul
imul
out
shlb
inc
sub
mov
shr
mov
lock
fsubrs
test
aad
push
lret
xor
mov
insl
movsl
inc
stos
lods
mov
scas
int
movsb
fcoms
xchg
das
jge
loop
mov
fstps
aam
sbb
jl
movq
aad
rcrb
into
sarb
fs
cmp
mov
or
add
rcrb
push
int3
imul
push
into
add
mov
or
push
icebp
loopne
in
mov
leave
sbb
push
popf
imul
jno
sub
adc
cltd
gs
imul
inc
mov
mov
enter
ffreep
popf
adc
jne
add
push
push
mov
push
jb
int3
adc
jno
mov
or
push
movsl
push
out
push
mov
mov
push
mov
icebp
rolb
dec
mov
inc
mov
sub
jmp
pop
jno
into
xchg
mov
xchg
mov
sti
mov
into
mov
shrb
insb
xchg
aad
enter
adc
dec
xor
jmp
push
scas
sbb
insl
jne
loope
cltd
xchg
in
mov
mov
and
mov
cli
lods
pop
repnz
leave
xchg
rol
es
jge
mov
out
inc
rclb
loopne
call
in
ljmp
pop
nop
sub
adc
pop
mov
insb
cmp
adc
lods
insl
inc
out
imul
ret
shrb
arpl
in
mov
jmp
mov
push
sub
add
icebp
gs
dec
push
sub
test
lcall
fldl
lcall
push
call
push
mov
xorb
adc
test
mov
jmp
lcall
cmp
cltd
rcll
cmp
push
mov
and
je
sbb
xchg
sub
je
xchg
call
or
sbb
in
sub
loope
movsb
mov
lcall
stos
push
cmp
aad
fdivrl
roll
jne
push
in
sub
mov
mov
mov
loop
stos
or
adc
xor
or
pushf
jno
push
test
lock
int
mov
insb
xlat
push
in
xor
sbb
xor
xor
outsl
mov
jle
dec
xchg
jno
stos
daa
imul
movsb
push
aad
cmp
loope
pop
gs
ss
test
mov
inc
pop
push
dec
add
adc
adc
inc
sbb
jmp
icebp
xor
in
out
jns
push
ret
inc
enter
push
arpl
inc
sarb
leave
xor
mov
loopne
out
sub
shll
add
sub
add
xchg
lods
loopne
xchg
sub
mov
jno
lcall
dec
jns
mov
sub
icebp
popf
in
push
lock
pop
popa
js
pop
pop
adc
mov
sbb
fsub
adc
mov
ljmp
popa
imul
std
roll
gs
in
jl
or
sub
enter
ret
out
cmp
call
pop
xchg
mov
lahf
sub
mov
and
adc
fstp
int3
out
xchg
das
sub
ror
inc
into
ret
int3
sbb
push
mov
imul
and
push
into
mov
js
lds
cmc
in
outsb
movsl
ret
xchg
or
adc
cmp
add
dec
adc
jg
test
inc
push
pop
mov
adcl
loope
inc
int
test
inc
mov
pmulhw
pop
movd
fsubl
pop
sub
mov
vmread
inc
fsubrl
out
decl
aam
in
xor
imul
jnp
in
mov
adc
or
sub
leave
xlat
lea
and
cltd
loope
rol
jle
lods
add
imul
sti
add
fnstcw
neg
dec
ljmp
call
into
adc
das
stos
dec
lods
sub
mov
inc
lea
jmp
jne
loope
inc
pop
outsb
push
loopne
dec
cld
psubsb
or
jg
imul
xchg
mov
loope
cmpl
sti
outsl
cmc
dec
rol
sarb
adc
test
test
addr16
mov
movsl
call
or
rcrb
pop
frstor
test
sbb
mov
shll
bound
mov
sbbl
sbb
adc
lock
enter
dec
xchg
jno
adc
dec
jmp
loope
outsb
push
push
lds
lea
sub
inc
out
xchg
dec
inc
mov
xchg
repz
cmc
mov
dec
jne
int3
sub
cmpl
sbb
and
aad
xchg
mov
cwtl
in
iret
movsb
and
test
repz
loope
push
dec
sbb
mov
ffree
dec
xchg
fs
shrb
fnstcw
rcrb
addr16
push
enter
shlb
test
add
shrb
imul
out
and
inc
popa
pop
in
push
sbb
and
fs
icebp
rol
inc
shrl
into
movb
rcr
jne
scas
pusha
mov
int3
rorl
cmc
cmp
and
fstpt
in
popf
push
shrl
xor
popf
stc
dec
outsb
pop
bound
mov
pop
leave
sbb
fmul
iret
aam
nop
mov
adc
push
in
add
cltd
cmc
cltd
bound
gs
into
test
push
loopne
dec
dec
mov
mov
xor
sbb
iret
hlt
dec
insl
dec
adc
pop
les
hlt
push
in
inc
mov
mov
sbb
shl
push
test
and
lcall
inc
movsl
popa
in
sbb
cmc
sub
fmull
daa
popf
lods
inc
and
jbe
cmp
xchg
sbb
iret
sti
push
into
inc
sbb
sahf
jp
xor
int
das
sbbb
or
imul
sbb
push
data16
and
test
sahf
adc
in
int
pop
lea
or
test
mov
rorl
sbb
cmp
jg
and
aam
push
xor
pop
and
testl
sbb
mov
mov
enter
sbb
sarl
jno
and
daa
fs
insb
adc
inc
mov
pop
daa
or
xlat
adc
jne
adc
fnsave
sub
dec
mov
push
xor
cmpsb
fcoms
imul
mov
sub
rcll
jb
mull
daa
push
cmp
sub
mov
jge
add
pop
insl
popa
inc
xchg
mov
dec
and
adc
or
insl
xchg
ret
loopne
sbb
sbb
xchg
sbb
in
sahf
and
rorb
cmp
mov
icebp
cmpsb
aad
mov
rclb
xchg
dec
cli
enter
je
stos
ljmp
cmp
jg
repz
popa
cmp
dec
imulb
pop
aad
out
mov
movsl
sbb
cmpl
xchg
xchg
xor
fistps
sbb
xor
lahf
pop
test
lods
jne
leave
in
push
sbb
xor
or
mov
in
pop
les
and
push
mov
xchg
mov
cltd
xlat
loopne
lret
outsb
fs
pop
jne
mov
cmp
xor
mov
push
or
xor
sbb
cmp
leave
mov
loope
into
pop
adc
mov
loop
push
jne
cltd
add
loopne
lea
leave
sbb
mov
rcrl
adc
popa
icebp
adc
inc
shrl
fwait
dec
mov
loopne
lahf
mov
pop
aad
ror
mov
lods
jno
cmp
jge
les
xchg
mov
scas
imul
xor
in
mov
scas
xchg
popa
aad
adc
sarb
adc
jg
add
pop
sub
or
gs
add
test
push
cmpsl
lds
in
jle
dec
aad
mov
stos
push
mul
mov
ret
xchg
add
rcr
mov
xor
icebp
sbb
dec
push
cmc
call
movsb
inc
cltd
loopne
pop
fisubrs
insl
sbb
lock
and
movsl
imul
std
push
cmp
dec
mov
xchg
lds
out
in
test
test
insb
sub
outsb
out
dec
dec
outsb
mov
cmp
xchg
mov
xchg
jno
mov
push
cmp
inc
or
jle
fcompl
test
sbb
pop
dec
movsb
adc
jb
data16
lds
push
out
ja
movsl
inc
enter
in
adc
sub
fisubrs
in
sysenter
insl
jne
mov
adc
push
mov
sbb
loop
iret
in
dec
push
cmp
push
mov
xchg
cmpsl
cmp
mov
nop
jne
mov
fsubs
adc
sub
and
or
test
inc
fistpll
xor
leave
inc
or
daa
jle
nop
imull
les
popa
int
int3
vmovntdq
aad
and
ds
int
rorb
mov
cmp
xchg
cltd
and
out
adc
sarl
xchg
inc
iret
xchg
dec
ljmp
mov
adc
in
adc
and
pop
popf
clc
cmc
outsb
mov
add
data16
adc
bswap
repz
jl
cmp
addr16
hlt
jge
enter
mov
mov
inc
in
jmp
push
call
jne
mov
sub
call
aam
roll
imul
scas
sub
cmc
mov
in
movsb
adc
roll
xor
and
das
adc
fucom
lea
out
sarl
cmc
pop
fld
shlb
xor
sbb
int
sub
call
aaa
js
cmp
gs
xchg
jg
mov
fsts
and
jmp
push
push
and
add
loope
in
fisttpll
sarl
inc
cmp
xchg
fstpl
stos
sbb
pop
hlt
jmp
or
iret
dec
in
dec
mov
test
xor
out
xor
inc
out
mov
xor
add
lcall
xchg
cmc
in
mov
jle
xor
aad
pop
mov
xor
test
andb
sbb
push
jno
mov
mov
call
sti
lret
sbb
and
mov
dec
jg
dec
mov
mov
imul
shr
cmp
fisttpll
bound
and
insl
gs
mov
cmc
pop
push
into
aam
dec
enter
aad
push
inc
xor
les
loope
push
sub
sub
gs
out
lock
loope
push
mov
in
mov
aad
aam
cmp
jl
scas
shl
adc
inc
and
test
pop
xchg
sub
inc
lods
mov
punpckhwd
loopne
xchg
mov
mov
mov
cmp
dec
sahf
into
push
mov
push
cmp
in
mov
jmp
outsb
cmpb
or
shrl
mov
icebp
enter
jo
pop
int
in
scas
call
cmp
pop
and
rorb
pop
je
fildll
cmp
dec
and
dec
adc
pop
rorl
hlt
cmp
out
push
pop
pop
psubusw
test
inc
xor
aad
and
addl
sub
xor
and
or
sahf
insl
xchg
lret
inc
in
shl
int3
pop
mov
cld
mov
or
shlb
cs
icebp
fsubl
adc
push
and
loope
into
loop
pop
cmp
in
test
in
ret
jle
xor
cltd
lds
mov
mov
shll
int3
gs
jno
dec
std
jno
mull
inc
ds
cmp
fisttpll
loopne
addr16
mov
paddsb
sub
push
popf
lea
in
icebp
dec
scas
mov
xchg
les
int
sub
movsl
aam
xor
lock
push
out
xchg
cli
test
jmp
loope
fcoml
mov
mov
dec
mov
loop
test
sub
and
shrb
and
movsl
repnz
sub
popa
sub
add
push
gs
mov
cltd
push
in
jno
xor
pop
nop
add
sub
xchg
rorb
xchg
sarl
and
pushf
adc
adc
xchg
loop
sub
cmp
xchg
pushf
mov
rcll
ret
mov
mov
pop
add
dec
repz
or
lret
imul
pop
fisttps
add
sub
fsubrp
cmp
into
fmuls
dec
call
mov
sbb
and
xor
sbb
call
scas
nop
sbb
in
int
push
std
jmp
pop
scas
outsb
jns
cwtl
push
scas
sub
sbb
inc
push
and
push
xchg
sub
pop
clc
pop
fstps
mov
sbb
in
dec
add
adc
cli
pop
nop
pop
push
mov
pop
in
dec
xchg
jl
in
xchg
cmp
inc
mov
mov
jle
xor
sbb
jno
sbb
and
mov
mov
shrl
pop
inc
dec
in
mov
mov
in
jmp
inc
mov
push
pop
adc
insl
sub
movsb
mov
aad
cmc
inc
jle
clc
fmull
adc
into
pop
mov
sbb
sbb
popf
popa
mov
stc
data16
inc
fdivs
jo
dec
int
int3
mov
clc
nop
aam
iret
sub
int3
mov
push
gs
push
sub
nop
int3
subl
push
xor
pushf
shrl
popa
adc
inc
push
pop
int
jno
mov
pop
sub
fmul
lock
mov
jmp
sub
fwait
repz
loope
pop
sbbl
ja
ljmp
jae
vpunpckhqdq
xor
in
loopne
push
gs
xchg
into
sbb
jne
imul
xchg
push
aad
cltd
push
xchg
push
adc
aam
xchg
sub
dec
in
mov
cltd
outsl
sub
cmp
dec
mov
mov
aad
fxch
pop
mov
xor
or
stos
xchg
loopne
shlb
cmp
daa
popa
pop
mov
ror
popa
dec
push
mov
int3
in
loope
sbb
fprem1
mov
insl
and
or
mov
and
adc
sbb
mov
inc
lods
loope
imul
sbb
in
gs
mov
and
and
mov
out
cmp
loope
pop
dec
ss
fstl
pop
add
jle
cmp
mov
mov
outsl
cmp
subps
in
mov
insl
xchg
cmp
into
mov
movsb
icebp
mov
jae
jo
mov
or
jg
je
aam
fisttpll
mov
fs
dec
rcrl
repnz
inc
in
sbb
in
int3
xchg
push
popf
cltd
aad
loop
push
jb
push
cmp
outsb
mov
mov
js
jmp
shlb
xor
mov
jle
aad
mov
sub
dec
cmp
pop
xlat
inc
jl
adc
imul
loop
xchg
mov
inc
sbb
lods
mov
bound
test
scas
ror
push
fmul
adcl
sbb
jmp
adc
push
xchg
call
lods
test
fs
and
dec
enter
fs
je
frstor
sbb
into
idivb
push
in
mov
dec
add
and
popf
xor
mov
out
lea
lock
xor
push
jge
into
lea
int3
inc
sbb
pop
rorb
shl
lret
fdiv
sbb
push
mov
lods
cmp
adc
cmc
sbb
and
stos
or
mov
fs
lds
insl
adc
aad
sbb
adc
shrl
icebp
pop
mov
add
or
in
dec
mov
pop
fadd
loopne
aad
out
inc
and
shll
sbb
mov
aam
aad
out
mov
jp
xor
and
es
xchg
xchg
lods
pop
adc
mov
xor
aad
lds
test
nop
test
and
shrl
mov
das
dec
lods
adc
loopne
xchg
in
jne
jmp
lcall
and
push
xor
sbb
popf
cmp
popf
insl
fstl
fs
or
add
pop
mov
fmulp
push
in
xchg
push
out
or
adc
popf
in
shll
out
leave
pop
imul
cmp
mov
mov
cmc
xor
sub
movsl
jno
jmp
adc
imul
shll
clc
jnp
xchg
sub
push
push
movsl
cmp
ja
in
xor
fbld
mov
push
leave
cmpsb
mov
inc
adc
jno
mov
inc
mov
pop
call
call
mov
mov
dec
pop
adc
in
sbb
loopne
icebp
and
mov
pinsrw
pop
mov
sub
movsb
inc
mov
iret
in
aam
mov
jne
pop
popf
cmp
pop
mov
pop
mov
mov
call
lds
push
popf
jl
mov
pop
sbb
sbb
cmpsb
mov
in
inc
and
int3
and
jne
scas
lods
cld
mov
pop
xchg
cmp
idivl
add
push
and
pop
dec
xchg
mov
imul
hlt
aaa
in
adc
mov
movsl
icebp
xchg
lock
movsl
or
and
enter
jmp
cmp
mov
and
mov
lock
out
fnstsw
or
lods
rcll
mov
cld
dec
adc
std
into
stos
sbb
jae
push
stos
push
pushf
and
jmp
xor
mov
fnstcw
std
lock
push
movsl
gs
fcompl
adc
mov
sub
dec
dec
sub
movsl
sub
insb
sbb
xchg
jne
mov
xlat
sbb
aad
stos
dec
popf
jne
int
rolb
or
sbb
xor
push
int3
jno
inc
mov
push
shll
in
lcall
shll
lods
pop
mov
and
push
mov
mov
mov
icebp
stc
and
pop
jno
test
rorl
and
jne
add
fnstenv
sub
imul
xchg
into
jge
test
cmp
pop
je
in
lea
push
flds
in
rorb
cmpsl
fwait
sarb
addl
jle
fidivs
xor
inc
and
lods
pop
adcb
xor
movsb
push
dec
enter
mov
inc
mov
sbb
icebp
cmp
shll
in
and
pop
adc
mov
push
cltd
or
cmp
cli
cmp
fcomi
lds
cmp
or
cmp
mov
movsb
popa
push
pop
sbb
and
fsubrs
xor
rorb
cmpsb
inc
test
adc
xor
les
fcoms
xor
xchg
push
dec
jne
loope
jle
fcoml
cmp
xor
jmp
adc
enter
les
push
adc
fldcw
mov
pop
xchg
and
test
sbb
cmc
mov
popa
xchg
sahf
into
adc
mov
cmp
mov
std
in
xchg
loopne
dec
movsl
and
gs
loope
popf
dec
movsl
push
xchg
add
aam
rolb
or
test
xchg
mov
mov
push
addr16
push
push
xor
mov
and
cs
sub
rcrb
test
pop
sahf
out
lods
jb
dec
push
cmc
inc
cmp
push
sarl
pop
int
aam
xor
sub
das
pop
insl
cmp
cmp
scas
pop
int3
in
mov
xor
or
dec
xchg
xor
cmpsb
sub
test
adc
aad
dec
mov
int3
xchg
inc
pop
faddl
test
mov
movsl
lsl
and
outsl
les
fscale
push
in
decl
pushf
cmp
insl
mov
xchg
pop
movsl
dec
sub
in
push
inc
outsb
cli
dec
jg
pushf
call
pop
fcoml
rorl
scas
insl
mov
mov
xchg
xchg
mov
xor
loope
ror
xor
dec
push
and
adc
popf
aad
outsl
out
cmp
cmc
mov
sub
jne
fmul
fnsave
xor
jno
xchg
movsb
fs
popf
cmpsl
push
jmp
out
movsl
sub
in
mov
mov
ljmp
cmp
ds
sub
push
mov
fnsave
adc
pop
push
enter
sbb
rcr
loope
out
roll
aam
movsb
mov
xor
icebp
adc
sub
mov
and
xor
pop
and
movsl
sub
mov
xchg
xor
cmp
push
mov
rcrl
cmp
movsl
enter
fwait
xchg
pop
sarl
insl
pop
in
cld
cmc
mov
int
sbb
mov
add
jp
cltd
sub
fstpl
movsl
lds
mov
push
pop
sub
ds
mov
ljmp
pop
lds
dec
int3
xchg
mov
fadds
test
fisubrs
popa
xchg
pushf
xchg
cmp
mov
in
cmp
mov
shll
pop
push
push
push
mov
or
push
xchg
cmp
cmp
mov
icebp
inc
xor
popf
xor
lds
leave
push
sub
adc
dec
call
and
add
fcoms
in
aas
jecxz
cmpb
in
xlat
or
loope
pop
add
xchg
adc
ror
cmpsl
mov
lods
ds
inc
lds
popf
in
dec
aam
ljmp
sbb
cltd
rcll
mov
inc
int3
pop
insl
xlat
cmp
jge
xchg
aad
jge
sbb
gs
popa
repnz
adc
xchg
int3
dec
dec
or
pop
clc
sub
jno
int
and
pusha
pop
mov
in
mov
push
call
sub
lds
loope
popf
mov
pop
lods
test
leave
sub
xchg
leave
shlb
cltd
jmp
push
aad
jle
dec
sub
xor
and
inc
sbb
aad
sha1rnds4
int
inc
sub
inc
xchg
pop
mov
in
cltd
jno
xchg
shlb
mov
push
cmp
out
dec
notb
dec
shr
dec
lock
rcrl
mov
mov
out
test
adc
int
cltd
arpl
arpl
fstpl
popa
int
into
negl
mov
sub
aad
mov
mov
mov
leave
fwait
scas
sub
cmp
adc
pop
cltd
in
shrl
fwait
xchg
fdivs
ljmp
sub
cs
jne
aam
push
aad
cmp
mov
push
ret
sbb
sub
in
adc
jp
aam
xchg
add
loopne
pop
inc
mov
insl
icebp
imul
lods
mov
xor
push
mov
daa
xchg
mov
iret
psubd
inc
out
cmc
dec
dec
outsb
pop
fnstcw
gs
mov
dec
test
mov
icebp
leave
push
jmp
pop
cld
mov
push
push
xchg
inc
inc
xchg
into
mov
lock
nop
xor
pop
and
xchg
lods
in
gs
xchg
mov
pop
sub
leave
dec
negb
es
and
sbb
cmc
call
aam
cmp
dec
rclb
mov
xchg
andl
test
into
dec
dec
in
mov
or
imul
cmc
shll
sbb
push
in
xor
imul
push
mov
popl
test
pop
mov
gs
cmp
enter
imul
add
cltd
mov
sub
push
dec
hlt
xchg
mov
jmp
mov
sub
dec
sbb
pop
lods
mov
add
jno
pop
or
pop
rolb
out
xor
sbb
push
and
cmc
adc
xor
fsub
sarl
dec
mov
pop
inc
adc
jmp
mov
arpl
shlb
ja
push
sub
movsl
add
fs
in
jmp
fldenv
jnp
pop
xchg
sbb
xorb
mov
mov
push
inc
je
pop
hlt
adc
fdiv
xchg
loopne
shll
push
les
pop
inc
dec
xor
fst
mov
shll
inc
mov
in
inc
sub
jne
push
adc
add
pop
int3
int
mov
dec
ffree
dec
inc
sub
rorl
aad
mov
loopne
iret
aam
mov
leave
mov
mov
call
popf
shrl
push
fsts
pxor
adc
xor
push
or
int
fnstsw
sbb
and
sub
mov
dec
mov
push
movsb
push
pop
and
cmp
push
sbb
sub
jmp
and
out
jno
dec
lds
aad
fs
and
push
add
cmc
cmp
cltd
icebp
andb
enter
imul
cltd
and
scas
inc
adc
mov
mov
push
int
dec
outsb
sub
cltd
xor
in
sbb
cmc
in
dec
ss
xor
push
mov
push
mov
mov
push
mov
loope
jnp
push
mov
and
movsb
mov
clc
je
sbb
xor
cmpsb
insl
fdivs
jle
int3
and
sbb
aam
int3
arpl
cltd
mov
rcr
dec
in
icebp
test
stos
popf
mov
sbb
pop
jne
or
pop
call
xchg
in
dec
rcl
pop
or
push
dec
arpl
xchg
mov
jecxz
mov
mov
jne
aam
xchg
and
pushf
sub
into
into
pinsrw
xchg
insb
leave
dec
fnstcw
out
xchg
push
lds
sub
mov
fcoml
and
call
sub
popf
pushf
sbb
mov
sub
outsl
adcb
je
xchg
xchg
cmpl
xor
stos
hlt
mov
dec
std
adc
xor
imul
push
into
das
test
int
mov
xchg
jecxz
into
sbb
pop
mov
ficoms
dec
enter
jp
fnsave
mov
dec
lcall
loope
aas
icebp
imul
lahf
mov
sub
fldl
xor
adc
and
in
pop
scas
pop
dec
cmpsl
jbe
sub
mov
es
sub
mov
and
std
scas
fcompl
loopne
fs
daa
push
mov
lock
mov
cmp
jne
pop
and
xchg
adc
sbb
cmc
insl
in
sub
in
rclb
lock
xor
insl
sbb
mov
shll
jae
dec
jg
pop
rcll
sub
push
icebp
xor
and
and
lods
inc
mov
gs
push
das
cmc
stc
jmp
or
and
leave
les
sub
xchg
sbb
out
sub
adc
sbb
es
fmul
in
cmp
lock
shrd
lds
adc
pop
pop
lahf
adc
adc
jno
in
lods
shr
and
pop
mov
or
and
jno
xchg
icebp
add
in
aad
test
cltd
into
fcomp
inc
test
jmp
xor
aas
call
sbb
push
and
les
in
out
repz
or
insl
and
cld
jne
aad
test
sbb
aam
sub
sbb
es
in
mov
push
sub
inc
imul
sbb
imul
cmc
inc
mov
push
outsb
push
sbb
xchg
shll
xchg
in
or
dec
dec
xchg
xchg
sub
pop
or
pushf
sbb
pop
test
inc
pop
cltd
in
insb
fistpll
push
sub
lea
aad
outsb
inc
push
ret
and
cld
insl
cs
bound
add
popf
lock
adc
in
cmp
int
dec
clc
fstl
mov
xor
and
loope
push
push
sbb
inc
lds
mov
and
cmpsl
or
movsb
inc
sbb
sbb
dec
and
jle
sahf
jne
or
push
or
fxch
add
lock
test
jno
ret
popa
sahf
push
jno
sub
movsl
int
mov
lock
enter
in
mov
dec
add
imul
dec
fadd
xlat
pop
ficoms
adc
mov
into
mov
xor
nop
daa
push
cmp
out
xchg
cmp
lods
int3
cmpsl
adc
cltd
cmp
popf
xchg
ret
shl
arpl
pop
dec
mov
xchg
aam
fcoml
lods
lret
in
pop
xor
jecxz
cltd
or
mov
icebp
out
adc
enter
fdiv
in
pop
cmc
jno
inc
sbb
inc
cld
mov
mov
and
loope
fst
sub
and
les
outsl
inc
shrb
test
insl
inc
movsb
fisubl
dec
cmp
in
inc
mov
movsl
test
rcl
pop
adc
sub
push
xchg
bound
dec
nop
sahf
adc
push
adc
sub
jg
push
test
sub
xchg
cmc
add
add
imul
adc
and
iret
les
dec
fldcw
xchg
xchg
pop
inc
jb
shrl
xor
push
push
pop
pop
push
std
popf
adc
insl
ror
mov
out
lock
ret
mov
push
push
rorb
es
fldenv
lock
xlat
cmp
faddl
or
gs
pop
ss
in
jecxz
shrl
repz
iret
jmp
or
inc
aas
add
in
lds
pop
loopne
xchg
sbb
xor
sbb
in
add
enter
push
leave
mov
adc
adc
enter
icebp
jmp
pop
jb
cs
shl
hlt
dec
idivl
lods
push
and
cli
into
sbb
in
mov
fsts
cmp
pop
ss
jne
and
mov
lock
or
insl
mov
pop
test
out
inc
and
rcrl
call
or
and
into
xchg
xor
test
popf
insl
push
cmp
xchg
sub
enter
xchg
sbb
mov
adc
stos
push
orl
pusha
mov
imulb
jo
jle
xchg
and
adc
sbb
xchg
inc
inc
push
mov
mov
adc
push
gs
mov
cwtl
aam
and
out
xchg
fs
mov
out
cltd
mov
mov
popf
out
or
jge
push
cltd
cmc
rorl
out
sar
aas
cmp
or
in
fmull
and
sub
mov
sbb
adc
rolb
jg
mov
sbb
je
insl
xchg
in
sbb
imulb
ret
push
lock
insl
in
push
stc
lds
mov
add
adc
fnstenv
inc
mov
iret
adc
insl
out
mov
push
enter
pop
hlt
das
push
insl
jmp
into
pop
rcr
jno
inc
popa
lret
arpl
test
aaa
imul
lods
xchg
pop
leave
fcoml
int3
adc
rolb
popf
xchg
sbb
movsl
lret
outsl
push
inc
sub
sub
call
rcl
adc
or
push
mov
lods
mov
in
inc
aad
dec
push
into
inc
sbb
pop
fistl
jne
sub
jmp
loope
mov
sub
scas
in
out
push
inc
pop
jl
lds
lahf
xor
orb
ljmp
mov
cmp
shll
imul
mov
fcompl
cmp
xor
scas
sub
jno
cmp
imul
sti
fsts
pop
rclb
xchg
xchg
inc
loope
into
sub
fnstcw
sbb
int
fldl
and
and
pop
rcr
call
mov
jne
xor
adc
pop
sub
shrl
and
divb
movsb
lods
xchg
fisubl
daa
in
push
in
xchg
dec
mov
inc
cmp
inc
mov
adc
pop
mov
cltd
mov
fstps
int
adc
jne
pop
aad
add
call
sub
or
inc
adc
aam
sbb
subb
in
gs
fmuls
outsb
addr16
xlat
in
dec
sub
addr16
test
in
inc
push
dec
pop
xor
push
inc
scas
movsb
cmp
inc
push
xchg
stos
loope
push
adc
popf
xor
imul
dec
inc
repnz
shlb
shrl
cmp
gs
sub
push
xchg
jg
cld
dec
and
cmp
cmp
fldcw
xor
adc
xor
dec
add
popa
push
adc
mov
into
and
popf
dec
lcall
mov
fstpl
adc
mov
dec
out
repz
cmp
lret
inc
xchg
and
shrl
cld
jle
jecxz
jmp
aad
cmp
jb
mov
test
fsubl
push
sub
in
cmp
sub
int
cltd
xorl
jns
and
push
jmp
jmp
insl
scas
xor
rorl
jno
div
adc
movsl
ds
dec
jle
aad
ljmp
in
in
jmp
adc
adc
or
adc
cmp
lcall
addl
mov
and
push
inc
aad
mov
push
pop
dec
mov
movsl
xchg
aam
iret
int
aas
jle
insb
dec
sub
jecxz
adc
push
aam
sbb
xor
inc
sbb
loopne
pop
lods
rorl
cmp
sub
adc
adc
popf
cmp
insl
or
xor
dec
in
cmp
jnp
mov
pop
mov
imul
pop
jne
rcll
movsl
adc
cmpsb
mov
jmp
lds
std
lret
adc
hlt
in
fsubs
lahf
dec
into
imul
push
movsl
sub
fxch
rcrl
loopne
xchg
xlat
and
into
xorb
es
ljmp
cmp
mov
fisttpll
sub
push
xchg
into
xchg
and
pop
adcl
jne
scas
sbb
in
in
lea
sub
push
frstor
insl
and
loopne
cmp
and
aam
push
in
xchg
jg
mov
add
gs
int
test
add
fnstsw
shrl
pop
dec
push
cmc
mov
mov
loopne
sub
ret
jno
int3
fcompl
mov
adc
sbb
in
popa
add
cltd
mov
cmc
int
xor
fcompl
sar
push
iret
adc
aam
inc
sub
int3
inc
lock
sub
pop
mov
xor
fcompl
loopne
mov
adc
cmc
dec
xchg
imul
dec
in
mov
push
out
jno
aam
test
and
and
jne
addr16
push
jae
jmp
sbb
xchg
lods
inc
xor
add
bound
pop
adc
int
jne
lea
fdivs
mov
xor
inc
and
in
aad
enter
subl
sub
stc
adc
enter
adc
add
sbb
insl
and
cmc
and
sbb
sub
lds
lds
aam
int
enter
cmp
dec
sbb
test
xor
adc
call
xchg
dec
inc
lahf
popf
loope
dec
pop
lods
adc
clc
and
mov
mov
mov
xchg
sub
pop
popa
cmc
mov
cmp
test
in
lods
loope
leave
sarb
movsl
xchg
cmpsb
aaa
push
pop
xchg
jl
inc
cmp
adc
fs
sbb
cld
push
xchg
aam
int
lds
and
fsubs
lahf
fists
or
mov
xchg
insl
dec
lea
lock
push
cmp
pop
fnstenv
xchg
lock
mov
sub
xor
add
in
enter
addr16
clc
add
xor
adc
shr
mov
mov
fstl
fcomi
pop
cmc
xchg
pop
sbb
popf
add
pop
mov
xor
adcl
loope
or
test
jns
loop
cmp
gs
xor
ret
xchg
xor
aad
xor
cmp
mov
pop
sub
lea
sbb
bound
dec
mov
mov
gs
loope
jns
mov
inc
outsb
int
fcoml
int3
cltd
jmp
popa
call
imul
aam
loope
xchg
adc
pop
scas
pop
cmc
inc
insl
loopne
push
cmpsb
jmp
push
adc
pop
scas
imul
in
insl
cmp
int
loopne
jge
xchg
mov
or
xchg
fwait
sub
inc
and
leave
rcll
loopne
repz
stos
es
movsl
leave
clts
inc
sbb
sub
xor
iret
jmp
and
push
sbb
cmpl
push
mov
insl
loope
fistpl
pop
inc
sub
sub
adc
or
pop
lods
adc
sub
adc
pop
push
jle
out
sbb
shrl
insl
insb
loopne
xchg
pop
int3
aam
sub
test
dec
jne
rorb
fstps
or
outsl
jl
push
adc
sub
mov
rcr
into
pcmpeqw
fistps
fadds
sbb
mov
push
sbb
mov
sbb
call
sbb
adc
inc
xor
test
fistpl
test
lods
aad
jnp
aad
cmp
mov
leave
xor
push
push
pop
sub
cmp
popf
push
add
push
fisubl
lret
es
mov
and
mov
cmp
add
mov
in
dec
dec
mov
or
pop
sub
sub
mov
inc
jne
lret
mov
pop
test
sbb
pop
scas
mov
test
popa
enter
in
or
cmc
int3
push
cmp
sub
mov
mov
mov
inc
int3
xchg
movsb
jno
cmp
push
fcmovnbe
and
mov
popa
subb
xor
xchg
add
jb
popf
mov
in
sub
int
hlt
shl
iret
movsl
mov
pop
inc
popa
shlb
xchg
aaa
xchg
ss
jno
lret
xchg
call
add
sub
in
cmc
insl
ss
cltd
popa
jne
xor
in
xchg
pop
dec
cmp
cmp
add
into
pop
dec
mov
push
jmp
dec
xchg
in
lock
pop
rcrb
mov
test
cmp
mov
cmpsb
sbb
mov
mov
cmp
in
adc
push
sbb
pop
dec
test
int
leave
loopne
fadd
in
decl
cmc
pop
cmp
notb
daa
test
lret
lods
pop
xor
out
lcall
sub
or
scas
inc
dec
add
jbe
out
into
je
dec
jmp
dec
ss
int
aad
mov
cmp
icebp
test
pushf
add
cmp
shrl
fmul
pop
jle
ljmp
push
xchg
and
xchg
adc
sub
mov
mov
call
lods
pop
loop
mov
int3
test
pushf
jmp
and
mov
inc
cmc
mov
shrb
and
fstpl
pop
rcl
or
inc
adc
in
mov
jno
jne
or
lea
pop
push
cmp
mov
push
icebp
fnstcw
sbb
sub
inc
jmp
dec
jge
pop
add
addb
push
shlb
lea
inc
mov
lret
fnsave
lods
sarl
inc
lea
mov
rcrl
push
mov
aad
sub
in
sbb
int3
mov
icebp
in
adc
loopne
inc
push
jle
je
cmc
jno
inc
dec
cmpsb
arpl
dec
xor
or
push
imul
loopne
fnop
out
sbb
movsb
mov
inc
mov
push
xor
mov
in
and
pop
or
enter
xor
nop
xchg
mov
or
or
jo
xor
in
outsb
jne
adc
lods
ret
pop
dec
sti
cmp
xor
xor
mov
and
dec
xchg
leave
fs
scas
icebp
out
push
out
iret
mov
cmp
sub
shrb
lds
or
xor
inc
mov
cltd
popf
leave
outsl
xor
and
pop
jmp
pop
fcoml
ret
adc
sarb
mov
mov
xchg
in
jp
ret
adc
adc
sub
adc
jne
xchg
add
push
insl
xchg
cmpsl
pop
aas
mov
fsubl
sbb
into
pop
xlat
jl
jnp
pushf
aam
stos
mov
scas
xor
push
adc
popa
decb
and
dec
iret
inc
in
xor
xchg
xor
and
xor
or
in
test
push
xchg
aad
xchg
xchg
stos
mov
xor
std
adc
inc
test
cmp
inc
fdiv
gs
cmc
rcll
pop
aaa
scas
fidivrs
enter
xor
add
or
cmc
fcoms
sbb
enter
int
pop
test
aad
pop
les
aad
push
inc
leave
shrl
cs
das
and
cmp
test
fmuls
mov
adc
and
xor
xor
xlat
adc
aas
sub
xchg
enter
push
xlat
sub
lea
bound
popf
cltd
aad
xor
xchg
add
call
popa
push
mov
jnp
out
xor
call
pop
dec
pop
mov
mov
cmova
int
in
jle
pop
mov
pushf
jne
push
jl
or
jno
xchg
and
repz
push
outsl
jmp
lar
rcrl
icebp
shrl
repz
orb
fcoml
insl
fmull
push
lret
adc
in
inc
leave
xor
arpl
cmpsb
sbb
fnstsw
dec
sub
pop
aas
add
popf
test
xchg
sbb
mov
in
mov
in
out
jmp
mulb
cmp
aam
arpl
dec
xor
lock
sub
lahf
pop
ud2
shrl
stos
fwait
pop
push
push
sbb
shrb
outsb
addr16
leave
dec
jp
jne
movsl
pop
and
or
je
hlt
shrb
icebp
popf
pop
adc
or
inc
mov
cltd
pop
dec
mov
mov
inc
jno
movsb
dec
push
cmp
ret
jge
insl
std
cmp
dec
rolb
sub
cli
jle
test
sbb
xchg
mov
fbstp
adc
test
xor
fabs
xor
adc
in
enter
int3
js
push
insl
repnz
repz
or
insl
or
in
pop
loop
xchg
adc
loope
pop
aad
jle
adc
cmp
in
outsb
mov
insl
sub
fs
dec
sub
cmp
and
mov
xlat
test
stc
in
add
in
in
dec
in
ljmp
loope
add
push
sbb
dec
dec
sub
cmp
in
dec
xchg
jl
in
insb
mov
dec
mov
incl
lods
enter
jno
jb
icebp
pop
mov
cmp
cmp
push
pusha
mov
in
mov
test
sbbl
call
std
cltd
mov
and
xor
and
and
fisttpll
out
div
ss
sbb
int3
sub
xor
rcll
xor
jge
rcr
rcll
and
cmp
push
mov
in
inc
lcall
lret
cmp
sub
xchg
cmp
and
pop
notl
ror
test
mov
and
mov
scas
adc
cltd
popf
imul
cmp
shl
sub
in
insb
xchg
and
xchg
dec
mov
push
cmovo
in
shl
imul
xchg
xor
in
aad
into
out
sub
pop
adc
xor
push
clc
cmp
ret
push
movsb
xor
cli
shrb
mov
mov
pop
out
test
sub
jge
or
sbb
jno
in
dec
lahf
sbb
loopne
popa
lds
pushf
scas
push
sub
jge
out
in
push
fsubrs
repnz
gs
xor
mov
dec
cli
int3
imul
dec
out
and
call
out
xlat
cmpsl
cltd
ljmp
cmc
push
or
jb
cli
stc
push
aaa
lock
mov
xchg
bound
int
push
int3
cli
sbb
lock
sub
pop
pop
pop
jno
stc
out
aam
scas
push
xor
gs
xchg
inc
mov
sub
loopne
or
out
sub
pop
xor
das
cmp
and
pop
dec
adc
pop
rcrl
icebp
dec
fcomp
loopne
push
xor
int
test
xchg
push
movsl
mov
push
xor
iret
mov
dec
repz
insl
iret
push
mov
gs
lock
cld
pushf
jno
inc
lods
loopne
dec
xchg
xor
dec
push
shlb
mov
inc
pop
popa
adc
shlb
call
das
in
std
rcl
xchg
rcll
pushf
in
fwait
jno
fcompl
jae
outsb
pop
jmp
mov
fcoms
push
mov
dec
sbb
mov
fadd
jno
insl
int3
adc
sbb
adc
lods
scas
mov
or
xor
fistl
in
xchg
sub
mov
push
push
xor
pop
xor
mov
lods
and
out
dec
hlt
popf
mov
loopne
pop
dec
xor
sbb
sub
and
repz
mov
mov
push
in
sbb
gs
xorl
cmp
leave
sub
test
insl
mov
ret
pop
lods
aad
sub
cltd
sbb
popa
mov
in
int3
sbb
inc
dec
mov
into
xor
stc
cmp
add
adc
push
mov
adc
int3
shl
insl
popa
into
add
in
call
inc
dec
mov
add
inc
pop
sbb
sbb
cltd
sbb
lds
in
gs
loopne
les
mov
ret
into
aad
mov
sub
sbb
rcr
out
or
sub
inc
fstps
insl
cmp
out
in
jle
adc
xor
mov
mov
pandn
push
test
dec
out
xchg
pop
gs
jne
sub
icebp
push
xchg
pop
jno
jns
lret
jecxz
cmpsl
push
xor
and
mov
pop
adc
pop
test
mov
pop
jnp
rcrb
mov
inc
sub
dec
or
pop
ja
movsl
push
aas
inc
cmc
adc
int3
lds
xor
pusha
mov
sub
mov
sti
lock
icebp
movsl
mov
xlat
xchg
pop
rol
enter
pop
sub
test
test
int
dec
add
test
xlat
es
add
imul
mov
push
jp
and
mov
icebp
fdivrs
adc
and
sbb
gs
int
cmp
sub
pop
loope
fldl
aad
dec
push
xor
and
mov
movsl
imul
mov
xor
mov
inc
loope
mov
mov
xchg
ficoms
mov
xor
insl
jle
adc
sbb
cmp
adc
iret
sbb
cmp
outsl
push
dec
mov
in
fwait
imul
sbb
jb
and
out
lods
xchg
les
popf
pusha
inc
xor
push
insl
adc
mov
sbb
out
cmpsb
test
adc
int
loope
call
popf
leave
fldl
adc
cltd
push
adc
lcall
hlt
das
jo
pop
fcomps
fs
cld
gs
test
push
mov
push
daa
push
push
sbb
lods
fdivrs
mov
int
ja
cli
cld
insb
in
mul
cmpsb
inc
cltd
cld
out
bound
jno
or
leave
std
mov
leave
in
shll
push
aam
xchg
insl
mov
sub
ds
test
mov
dec
mov
ss
int3
push
enter
xchg
mov
fwait
rcl
les
inc
mov
cmp
mov
or
mov
xor
mov
fmuls
fs
push
jge
rcl
dec
and
loopne
push
mov
fdivs
daa
fs
mov
lock
imull
inc
jmp
sub
fcoms
repz
imul
push
in
add
xor
mov
mov
xchg
mov
fldl
pop
loope
mov
jo,pn
mov
or
pop
mov
dec
dec
jno
xchg
insl
mov
or
mov
sbb
pop
pop
pop
loope
xchg
shll
xlat
fsubrl
out
xchg
or
sub
mov
subb
shlb
in
cmpsl
xchg
mov
fdivrs
lahf
xchg
into
add
fisttpll
adc
or
icebp
jne
fchs
jp
cmp
cmpb
inc
dec
clc
aad
pop
ja
mov
lock
gs
xchg
out
adc
loopne
adc
xchg
into
loope
lds
jne
mov
adc
mov
outsb
daa
dec
aaa
out
imul
and
sbb
lds
inc
je
pop
aad
insl
sbb
int
adc
rcrl
pop
int
mov
push
dec
test
push
jne
lods
sub
adc
in
sub
pop
outsl
and
xor
in
rclb
and
lds
pop
xchg
int3
mov
sub
lods
movsl
cmc
mov
xchg
insl
stos
inc
flds
push
cmp
fstpl
jmp
mov
jno
mov
sbb
dec
push
jne
lock
clc
outsl
fisttps
mov
std
dec
pushf
jno
mov
pop
jb
cmp
inc
sbb
shl
testl
cmc
inc
outsb
add
in
leave
xchg
data16
fnstcw
fnstsw
dec
or
pop
jmp
inc
xor
push
xor
gs
lods
sbb
icebp
pop
adc
pop
jle
jae
in
pop
int
mov
enter
fdivrs
popa
aas
xor
int
dec
xlat
cmp
jmp
aam
adcl
pop
pop
adc
pop
xchg
xor
sub
pop
mov
lahf
test
test
popf
in
sahf
lcall
adc
fs
cmp
dec
data16
popf
jl
mov
fcomps
arpl
inc
fnsave
dec
xlat
arpl
movsl
pop
or
cmc
add
loop
jno
and
and
pop
sub
mov
push
add
loopne
and
repz
mov
int3
lds
iret
and
cltd
aaa
push
dec
or
jmp
pop
loope
cltd
test
insb
js
and
mov
cmp
sbb
pop
loopne
cmc
xor
int3
sbb
inc
and
lock
mov
sbb
adc
popf
cmc
int3
dec
sbb
mov
in
cmp
test
fdiv
pop
jl
loopne
andl
push
cmp
leave
push
mov
mov
sub
repz
and
mov
in
cltd
ffree
mov
cmp
jge
test
xor
icebp
push
leave
sbb
mov
mov
lock
cmp
iret
rorb
xlat
aad
inc
and
insl
or
int
cmp
inc
loopne
mov
icebp
mov
loopne
sbb
popa
add
bound
mov
call
xchg
mov
cmc
out
inc
jge
and
cltd
sbb
enter
lock
rorl
pop
aam
mov
jp
push
inc
gs
dec
dec
pop
jl
sub
and
fcomps
lea
fcompl
fstpl
jmp
inc
lds
sbb
xchg
cli
xchg
add
shrl
mov
jnp
bound
sti
xchg
mov
sbb
add
push
scas
lods
arpl
enter
mov
sti
pop
scas
mov
xor
cmp
pop
lock
in
jl
xchg
inc
shll
push
cvtps2pd
push
pop
dec
sbb
iret
fwait
lahf
adc
movsl
nop
insl
nop
aam
popa
shll
loopne
jno
jge
in
and
aam
aad
pop
push
sub
cmp
je
jbe
je
ret
xorl
add
push
adc
mov
in
sbb
loopne
shr
out
int3
adc
pop
jmp
xchg
jecxz
pop
jle
int3
ror
and
mull
lods
jne
ret
jae
or
test
jbe
lods
push
shrb
outsb
push
lods
loope
mov
outsb
sbb
mov
sar
dec
lock
lods
aam
lcall
push
fildl
mov
mov
inc
mov
mov
ret
mov
cmpsl
loope
mov
test
movsl
pop
cmp
insl
ljmp
sbb
pop
push
dec
imul
xor
pushf
cmp
popf
sub
rcl
xor
sub
into
shll
jmp
sbb
adc
int3
push
jmp
in
loop
and
jl
lahf
insl
or
fsubr
mov
and
mov
lock
gs
out
aad
pop
add
adc
popf
test
sub
cmp
icebp
cmp
imul
les
int3
mull
in
test
xor
xchg
leave
sub
roll
and
dec
xchg
call
mov
xor
jl
adc
cmp
mov
pop
xchg
imul
fmuls
adc
jmp
mov
shll
or
adc
iret
je
add
cmpl
sub
push
cmp
mov
jge
mov
dec
in
inc
shrl
xor
adc
mov
jmp
jns
outsb
cli
xchg
outsb
adc
jno
dec
push
push
cmp
test
xor
cmc
dec
mov
imul
cmp
dec
jb
pop
sbb
sub
pop
pop
jno
shrl
lock
cmp
mov
imul
aas
cmp
push
sub
jle
stos
iret
test
aaa
lahf
adc
mov
push
and
fmul
aad
std
movsl
and
daa
out
dec
clc
inc
pop
xchg
mov
add
movsl
push
call
sub
dec
cmp
pop
inc
sbb
lods
or
push
xor
enter
loop
cmp
mov
loope
mov
dec
popf
mov
sub
imul
and
aam
or
test
pop
cmpsl
pop
jne
cmc
out
outsb
or
mull
cltd
push
adc
xor
lret
mov
and
in
dec
push
mov
mov
xor
out
aaa
jge
jg
movsb
sbb
xchg
in
or
rol
push
jge
add
sbbb
xchg
sbb
jmp
sub
sbb
dec
push
cmp
popf
xchg
fnstsw
or
lock
rcll
adc
jge
pop
rcrb
aam
loopne
shr
mov
rcll
cmp
jbe
imul
adc
popf
in
push
or
adc
loopne
push
jge
inc
push
mov
pop
sub
mov
sbb
enter
push
mov
push
stos
shlb
hlt
and
mov
das
xchg
or
lret
cmp
mov
adc
lea
or
call
push
popf
jl
mov
int3
lret
gs
into
lods
lcall
iret
lds
fnstcw
xchg
mov
mov
or
sub
mov
test
cmp
pop
mov
int3
pop
nop
mov
fstp
xor
in
imul
and
xor
inc
and
push
add
xchg
sub
mov
push
js
sub
adc
xor
and
ja
mov
enter
sbb
rorl
mov
aam
push
js
inc
gs
pop
and
mov
adc
fsubl
out
stos
fstps
in
insl
int3
mov
gs
cld
pushf
vcmpps
sbb
outsb
jno
in
out
mov
aam
sub
jnp
sbb
in
xor
xchg
nop
insl
rorb
dec
into
dec
sbb
and
jmp
test
inc
or
adc
cmc
cmp
movsl
jne
sub
fs
adc
adc
ror
sub
cmp
leave
sub
shll
je
lea
enter
xchg
pop
mov
cmp
enter
shlb
mov
jge
mov
inc
and
fstps
sub
adc
movsb
leave
sarl
test
sbb
shl
sub
lret
insl
leave
dec
and
mov
fsubrp
jno
scas
mov
jmp
pop
or
adc
xchg
fnstenv
xchg
xorb
aas
insl
popf
mov
push
fcompl
push
in
popa
mov
dec
mov
mov
lods
adc
mov
imul
xor
dec
xstore-rng
cmpsl
inc
jne
test
mov
xchg
aam
dec
call
sub
shrl
mov
sub
sbb
lock
in
and
cmc
sub
adc
popf
pop
sbb
mov
and
fldlg2
adc
mov
adc
sub
fstps
xchg
and
in
cltd
push
fmuls
sub
pop
jle
fsubrl
sbb
cmp
pop
call
xor
sub
icebp
and
popa
jno
push
jmp
mov
cltd
outsb
mov
aad
sbb
dec
in
and
popa
aad
pop
mov
popf
xor
inc
mov
mov
and
adc
jl
aam
int3
cmc
adc
imul
and
sbb
rcrb
clc
jbe
popf
adc
rcrl
int3
and
std
push
xchg
add
add
mov
or
mov
mov
mov
mov
mov
fisubrs
pop
and
loope
add
loopne
mov
adc
in
int
sbb
fstl
fsubrl
inc
lret
cmp
jle
int
add
xchg
ja
shr
rcr
into
inc
andb
sub
scas
adc
lock
shlb
nop
mov
and
sbb
shrl
gs
aad
adc
leave
sub
sub
dec
int
xchg
push
jle
in
leave
fcomip
mov
add
in
sarb
mov
fsubr
mov
and
bswap
in
sbb
gs
jne
or
jmp
or
add
cmp
mov
fs
insl
icebp
adc
aam
xchg
mov
xchg
fwait
mov
cmp
dec
cmc
sub
fnsave
imul
daa
clc
xor
xor
adc
mov
popf
aad
test
jmp
in
insl
rcll
push
cmp
rcr
addr16
adc
testl
jle
test
sub
loop
xchg
in
fldenv
popf
fs
sub
jae
pop
adc
xor
sbb
mov
sub
fsubr
in
pop
mov
in
pop
int
js
jle
pop
out
mov
popa
sbb
fsubrl
xchg
pop
xchg
icebp
sbb
jg
fs
add
int
push
movsl
xchg
jno
mov
mov
icebp
out
sbb
lea
fsubrs
rclb
aad
xchg
xor
push
or
and
mov
xchg
push
mov
sub
fs
mov
nop
in
inc
push
mov
xor
fidivl
cld
movhps
cmc
gs
sub
add
leave
loopne
pop
into
into
mov
mov
pop
xchg
dec
fwait
cmp
mov
adc
pop
inc
adc
xor
sbb
cltd
jno
icebp
sbb
dec
imul
adc
lock
popf
shll
or
or
adc
iret
dec
icebp
xor
push
fcomp
in
pop
push
cltd
sbb
bound
imul
xchg
sarl
and
adc
dec
or
lret
pop
cltd
push
cpuid
inc
in
fnstsw
xor
adc
in
jmp
lods
jmp
cld
cmp
and
in
mov
add
pop
xchg
mov
jge
ret
cli
imul
or
mov
jmp
punpcklwd
loopne
dec
xchg
jmp
out
adc
sub
jmp
loop
ds
mov
loope
xor
pop
ja
cmpsb
faddl
sub
enter
mov
sbb
pop
fsubl
add
and
xor
insl
push
test
push
bound
out
add
jle
fst
sti
sbb
pop
and
out
cmp
in
dec
adc
cmc
mov
cmp
xchg
pop
icebp
xor
lods
adc
loope
mov
xchg
cmc
bound
mov
rcrb
int3
enter
and
dec
mov
cmpsb
scas
movsb
mov
sub
gs
pop
cmp
mov
rorb
push
mov
adc
or
mov
sub
roll
vpmuludq
or
cmp
xchg
mov
mov
pop
fsubrp
movsb
stc
and
aad
mov
and
mov
in
xchg
pop
fcmovne
movsl
xchg
xchg
popa
shll
cmc
shrl
mov
jl
popf
push
and
int
mov
mov
insl
call
lock
sub
les
mov
dec
testl
sub
in
jne
jmp
adc
lds
cltd
pop
enter
adcb
adc
shlb
mov
jmp
subb
inc
test
xchg
xor
push
or
leave
fildl
cmp
cmp
ja
fisttpll
enter
cmp
lea
int3
mov
pushf
push
xchg
bound
in
loope
fisttps
popa
dec
hlt
fidivl
mov
add
fcom
mov
imul
dec
jle
lods
fs
test
fcoms
int
cmp
cmp
lods
pusha
jl
inc
sbb
cmp
cmp
fdivrl
dec
outsb
inc
into
and
aam
push
and
sbb
popf
mov
or
lret
ja
cmp
lods
lods
adc
mov
and
mov
inc
pop
dec
jo
add
dec
dec
mov
inc
clc
iret
in
into
ja
fisttpl
dec
shlb
jp
cmp
sub
pushf
adc
jb
jno
push
push
sub
mov
pop
xchg
push
cmp
fisttpll
mov
inc
imul
es
iret
daa
fisttpll
pop
mov
jmp
lret
inc
jno
into
xor
leave
mov
lds
push
nop
dec
dec
pop
shlb
outsb
insb
movsb
inc
pop
pushf
movsb
dec
sub
jmp
and
xlat
push
pop
cmp
adc
mov
lods
inc
int3
sbb
push
jge
xor
mov
movsl
pop
movsb
xor
jl
stos
dec
or
arpl
mov
cmp
dec
mov
lods
pop
movsl
mov
imul
pop
xchg
inc
push
add
insl
fsubl
xor
rorl
or
sub
mov
sbb
and
cmp
fisttpll
pop
icebp
enter
mov
imul
sarl
iret
mov
test
lea
jae
call
sbb
mul
femms
pop
push
lcall
xchg
xchg
outsl
pop
xor
push
cltd
sub
scas
and
dec
adc
jne
aam
mov
rcll
popa
pop
test
fucomp
jb
push
inc
xchg
orb
ja
roll
xchg
xor
sbb
test
in
jnp
xlat
aaa
push
dec
out
sti
xor
adc
popa
lock
adc
enter
int
es
popf
sahf
cmpsb
adc
inc
xchg
sub
adc
jne
fs
sbb
in
xor
cmp
pushf
mov
cltd
push
xor
jne
lods
mov
xor
test
push
fsubl
or
add
pop
jne
add
in
data16
mov
ficoms
insl
dec
adc
xor
aad
xchg
dec
lret
out
fs
mov
insl
aad
pop
sbb
aam
out
cltd
or
in
mov
jecxz
loopne
outsb
vpsllw
out
shlb
lods
movsl
sbb
dec
mov
aas
fsubrs
icebp
pop
mov
in
rcl
cmp
fistps
mov
lods
in
sbb
into
mov
in
mov
bound
or
mov
adc
push
ficomps
pushf
xchg
jmp
pop
push
lock
out
into
mov
fnsave
push
mov
int
xchg
cmp
sbb
gs
adc
pushf
xor
dec
xchg
dec
in
int3
pop
sbb
xchg
mov
insl
lods
pop
sub
loope
addr16
in
aad
adc
cltd
dec
pop
mov
shrb
mov
jg
int3
cmp
jne
aad
xchg
insl
popa
lds
popa
sub
pop
fdivr
ror
outsl
xchg
into
and
push
rorl
mov
xor
sahf
sbb
xor
sub
fstl
mov
and
and
loopne
leave
in
fcomp
or
mov
or
loope
in
lcall
movl
xchg
inc
xchg
orl
in
icebp
dec
dec
jmp
xchg
inc
pop
or
jecxz
cltd
jecxz
adc
gs
inc
dec
pop
xchg
dec
hlt
lods
nop
in
fcoml
dec
fsubrs
mov
and
sbb
fsts
adc
rcrl
or
cmp
and
lods
int
inc
jb
mov
mov
aaa
or
faddl
mov
xchg
repnz
mov
dec
jge,pt
out
mov
sub
aas
jne
mov
rcrb
mov
addr16
movsl
lea
push
fcmove
adc
out
inc
jge
mov
movsb
sub
and
aad
or
jmp
test
pushf
pop
xor
in
push
mov
xor
push
inc
int
cmp
adc
jl
mov
add
push
adc
popf
jecxz
into
jnp
push
stos
jge
js
jno
cmp
lds
mov
mov
adc
xchg
mov
iret
fdivrs
and
and
adc
sarb
mov
dec
scas
push
sub
push
test
call
int3
into
insb
dec
adc
pop
rcl
insl
push
add
inc
int3
inc
lods
ficomps
mov
test
shll
cli
pop
movsb
pop
mov
pop
adc
adc
pop
xchg
xor
or
popf
ror
test
adc
xor
xor
mov
push
xchg
sub
push
mov
imul
push
xor
pop
pop
push
sub
sub
pop
in
push
shrb
addr16
xor
andb
cmp
rcll
leave
gs
adc
adc
mov
pop
mov
sbb
xchg
ljmp
dec
in
dec
xchg
movsb
jl
or
shrb
clc
push
and
adc
es
les
cmc
dec
pop
and
sub
sub
lock
xor
cmc
jl
pop
rcll
xchg
inc
or
movsl
test
and
int3
mov
push
mov
insb
and
push
jl
fsts
sbb
cmc
shl
gs
adc
xchg
cmp
aam
rclb
insl
loopne
sarl
call
pop
sahf
popf
sub
fsubl
xchg
push
and
adc
mov
add
fnstcw
xor
nop
int
test
cltd
aad
dec
test
cltd
jl
iret
lods
inc
in
dec
mov
popa
mov
shl
sbb
lds
cmp
jg
sahf
popa
nop
cli
pop
je
out
xor
loopne
dec
mov
inc
fsubs
xchg
rcll
outsb
pop
jge
push
push
sahf
sti
cld
cmp
xor
popf
imul
and
fstpl
inc
inc
aam
adc
aad
sbb
ds
roll
lods
pushf
or
xchg
or
imul
adc
xchg
dec
imul
push
movsl
gs
sub
sub
cmp
loop
push
lret
adc
mov
int
xchg
lods
stos
scas
jne
dec
fisubrs
into
insb
or
aad
mov
jmp
rclb
mov
mov
into
out
fstps
arpl
push
int
xchg
in
movsl
ja
and
pop
adc
rcll
and
lods
pop
xor
or
std
sub
rcrb
adc
shrb
inc
xor
lea
adc
int3
insl
inc
cmp
cmc
jne
dec
xor
shlb
in
repz
adc
or
iret
out
into
mov
repz
inc
jmp
out
lds
out
sub
lods
cmp
out
outsl
enter
outsb
mov
sub
cltd
lods
inc
call
movsb
leave
sahf
movsb
add
xchg
and
or
fsubrs
jmp
out
inc
lods
sub
cmc
rol
xchg
push
rsqrtps
xchg
icebp
xor
pushf
and
outsl
jb
in
inc
push
out
mov
cltd
pop
int3
aaa
orl
lods
dec
cmp
shl
in
aam
cmc
push
inc
pop
icebp
in
sub
jnp
out
and
cmp
push
or
mov
sub
jne
lock
iret
shrl
lods
stos
push
xchg
xchg
cmc
mov
cltd
jnp
inc
pop
shrb
push
adc
outsl
enter
mov
lods
xor
push
test
inc
push
insl
lods
aad
and
in
pop
test
repz
xor
and
jmp
dec
icebp
jecxz
scas
ffree
xor
popa
sub
and
mov
xor
cmp
in
inc
leave
push
test
push
loope
push
xor
lds
outsb
fwait
loopne
adc
adc
push
loopne
lea
mov
jmp
cmp
repz
lahf
data16
gs
sub
enter
jmp
xchg
popa
xchg
dec
cmc
frstor
and
lds
addr16
fldln2
int
mov
xchg
mov
cmp
ja
xchg
int
cmp
cs
lods
flds
popa
mov
mov
cmp
xchg
sub
sub
in
xlat
xor
adc
call
int
or
shll
or
aas
in
adc
insl
and
inc
pop
cmp
jno
ret
aad
or
in
mul
dec
loope
lock
mov
push
in
mov
mov
xor
xchg
mov
push
adc
adc
aam
or
sub
ja
dec
pop
into
or
mov
repnz
dec
sub
sub
xor
out
icebp
je
in
aad
mov
mov
int
cmc
dec
aam
dec
sarb
dec
and
pop
and
call
cmp
loopne
mov
pushf
jae
sub
jno
sbb
enter
dec
loop
in
loopne
iret
dec
scas
push
pop
fnstenv
enter
call
sbb
mul
loope
in
in
and
lret
cmpsb
ret
adcb
insb
enter
movsb
fmul
xchg
lods
enter
mov
ss
loopne
in
xlat
cmc
imul
in
add
fcoms
add
gs
nop
subb
insl
mov
into
adc
dec
jmp
inc
xchg
int
shlb
and
aas
sar
mov
mov
push
shll
shll
dec
dec
xchg
mov
jbe
adc
sub
sub
inc
imul
cmc
mov
gs
xor
imul
mov
sbb
test
jg
cmpsb
xor
outsb
stos
or
movsl
imul
jl
mull
aam
pop
vmovhps
adc
mov
icebp
jmp
popa
out
inc
push
and
cmp
rcrb
call
mov
dec
sub
imull
sbb
xlat
mov
loope
cmc
dec
dec
fmull
call
inc
sub
in
inc
mov
or
lret
popf
loope
mov
sbb
lods
xchg
cmp
jmp
je
dec
xor
inc
enter
repz
xlat
mov
mov
adc
aad
in
andb
sbb
push
push
in
or
in
dec
cmp
push
sub
lds
arpl
scas
std
mov
cmp
jecxz
fs
sbb
rcl
rcrl
mov
jmp
pushf
mov
xchg
imul
ror
leave
fsubr
mov
or
xor
cmp
mov
ret
sbb
std
mov
push
lea
outsb
daa
into
cwtl
mov
mov
dec
gs
int3
mov
dec
push
cltd
out
dec
ret
cs
fsubr
and
and
push
iret
and
xchg
sub
data16
incb
inc
int3
adc
mov
sbb
icebp
jne
and
lret
adc
adc
ffree
fcoml
push
shll
lds
inc
test
mov
xor
lcall
sbb
jmp
fxch
int3
add
xchg
dec
ss
and
in
dec
in
lcall
and
push
adc
mov
popf
in
dec
int3
cmp
jno
call
inc
mov
pop
data16
mov
mov
inc
sbb
test
mov
adc
fcoml
in
imul
int
adc
sbb
rcrb
outsb
pop
lcall
rol
sbb
dec
rorb
sub
xor
dec
xor
icebp
cmc
xor
test
sub
xchg
imul
rorl
push
jne
push
and
in
xor
xor
sbb
push
sti
push
pop
jne
xorl
push
cmp
notl
aam
lock
adc
out
inc
or
inc
and
sbb
inc
push
iret
sbb
xor
mov
pushf
icebp
pushf
push
push
sbb
int
sub
pop
fcomps
shll
faddl
and
mov
jmp
mov
and
add
in
or
hlt
fs
inc
lret
push
sub
cmc
dec
mov
sbb
rcrb
adc
call
rcrl
out
dec
inc
and
inc
loope
or
rcrl
fmull
loopne
movsl
fimull
jl
push
leave
insl
mov
mov
mov
test
subb
daa
adc
mov
pop
adc
inc
in
imul
cmc
add
sbb
mov
inc
xchg
icebp
add
fsubrl
sub
mov
sub
push
inc
inc
test
pop
push
xor
mov
xor
orl
nop
std
inc
xchg
int
sub
sar
push
adc
cmp
lods
add
mov
dec
pop
lret
jecxz
or
cmp
xor
fdivrs
scas
push
subb
stos
int3
pop
in
lock
jge
cmc
push
xlat
sbb
daa
shl
out
rcr
fmull
cltd
rcll
ss
adc
sbb
dec
ret
sub
loope
jno
cmp
call
jne
mov
cmp
jae
inc
push
test
push
loopne
mov
lock
scas
mov
lods
outsb
mov
in
pop
inc
mov
fcoml
pop
pop
repz
test
pop
in
je
jl
movsl
enter
leave
sub
mov
xchg
add
dec
fstpl
mov
pop
and
dec
mov
dec
or
stos
push
into
xor
inc
in
jle
int3
fcompl
test
sbb
lret
cmp
fmuls
fs
dec
or
sub
in
mov
xchg
imul
push
pop
aad
gs
int3
cmp
rorl
xor
jmp
cmc
lods
scas
loop
dec
fidivrs
push
insb
insl
roll
fadds
pop
loop
cmp
into
popa
enter
mov
enter
in
push
bound
mov
mov
dec
cmp
sbb
sbb
add
cmp
cs
smsw
mov
cli
fsub
test
pop
mov
gs
and
add
aam
imul
inc
insl
sub
movsl
pop
fnstenv
in
shlb
das
sbb
sbb
jecxz
pop
or
movsl
jle
dec
stos
mov
int3
mov
call
aad
xchg
sarb
and
rcrl
xlat
loope
movsb
je
inc
fcomp
cmp
adc
jae
mov
push
push
insl
xor
pop
mov
adc
xchg
pop
popa
int
dec
push
xchg
popf
mov
jne
into
push
lock
frstor
sbb
popa
fisubrs
shll
scas
mov
sbb
cmp
or
fcomps
jge
pop
lds
push
pop
lea
rorl
adc
sub
loope
notl
xchg
std
mov
testl
push
and
int
stos
je
pop
lea
sbb
frstor
leave
mov
push
inc
add
shl
test
cmc
xorb
aam
fcoms
aad
mov
out
add
jmp
dec
std
mov
or
fstl
mov
pop
inc
adc
in
mov
push
sub
lahf
mov
mov
shlb
sbb
inc
sbb
mov
rcll
mov
psraw
repz
ret
fsubrs
mov
in
div
in
decl
popf
pop
es
sbb
shlb
leave
int
jne
xchg
dec
movsl
push
je
mov
out
xchg
filds
xchg
jb
popf
cmpsb
scas
sbbl
add
int
cltd
insl
stos
and
mov
xor
dec
insb
bound
mov
fnsave
or
cmp
push
mov
leave
adc
dec
sbb
sbb
in
pop
add
insl
cmp
popf
lods
mov
cmp
sbb
adc
and
push
test
push
jae
xor
fstpl
jle
fnstcw
lods
jmp
outsl
xchg
cmp
pop
push
shr
push
sub
mov
push
or
pop
dec
sbb
add
push
scas
push
push
repz
int
adc
adc
mov
pop
push
shl
mov
rolb
leave
pop
pop
cmp
fwait
or
push
lret
push
cmc
loopne
push
dec
mov
into
adc
push
clc
insl
scas
xor
dec
ret
and
movsl
imul
xor
cmp
xor
xor
mov
pop
adc
add
mov
push
ljmp
imul
test
sub
cmp
xchg
insl
xor
loope
xchg
icebp
push
jg
xor
lock
ljmp
mov
cmp
out
or
pop
in
jae
add
addr16
notl
shll
cmp
decb
in
sbb
into
sbb
int3
rcll
insl
lods
icebp
cmp
shlb
lock
shr
iret
push
inc
popa
xchg
sub
sbb
sbb
and
xor
xchg
xchg
dec
or
jno
loop
pop
or
and
rcll
daa
jne
test
aad
cmp
movsl
sub
mov
xor
scas
mov
jno
out
mov
addr16
pop
inc
or
push
icebp
stos
int
and
outsb
jnp
int
push
shl
mov
mov
mov
xchg
hlt
in
mov
cmp
int
out
dec
in
and
mov
xor
mov
mov
aam
pop
mov
mov
sbb
fdivs
pop
mov
cli
imul
nop
cmp
mov
test
push
dec
push
sbb
dec
lods
mov
aam
mov
rorb
dec
aam
xchg
pushf
in
mov
lea
cmp
out
adc
icebp
incb
ficomps
pop
movsb
sub
shrb
test
shl
sbb
adc
bound
fucomi
jmp
lods
shr
hlt
xchg
lock
inc
int3
inc
sub
ffreep
sub
and
pop
incl
mov
mov
in
jl
mov
or
sub
mull
iret
sbb
xchg
push
push
cltd
dec
test
mov
lea
out
cmp
in
cmp
in
sub
in
inc
sbb
mov
mov
pop
dec
lock
cmp
cmp
xor
out
dec
mov
in
popf
in
pop
lods
je
xor
jmp
repz
inc
iret
fsubrs
adc
jle
jge
inc
jl
faddl
sub
inc
xchg
lock
int3
dec
addr16
dec
xor
nop
lock
push
sahf
adc
cmp
popf
dec
adc
dec
mov
mov
dec
sbb
xor
mov
inc
jmp
mov
cmp
xor
jne
adc
cltd
in
scas
and
mov
adc
mov
pop
xor
mov
cmc
cmp
add
fists
scas
and
notl
das
adc
in
divb
dec
push
or
aad
push
cltd
lret
add
iret
mov
xchg
enter
in
rcr
dec
xchg
dec
and
xor
in
loop
pop
and
jmp
aaa
adc
lds
in
and
jno
movsl
in
leave
mov
int
fs
fdivl
loopne
jne
xchg
cltd
pop
mov
insl
mov
mov
push
dec
int
loope
addb
and
ficoms
sub
and
sub
jmp
popa
adc
mov
in
scas
cmp
xor
loopne
sub
jmp
mov
pop
or
sub
jp
popf
cmp
xor
or
aad
pushf
sbb
icebp
or
movsl
jle
fldenv
xchg
pop
cmp
push
push
xor
inc
in
aas
int
in
lds
clc
and
fs
mov
add
jne
sti
shlb
add
test
sub
fisubs
inc
sbb
xor
sbb
popf
and
xchg
cmp
pop
rorl
fldcw
xor
int
clc
jmp
or
mov
inc
xor
xchg
popf
fs
lds
sub
jnp
icebp
or
insb
cmp
push
lea
mov
loope
or
popa
das
adc
notb
movsl
daa
mov
xchg
adc
stos
xchg
jle
loope
lock
sbb
mov
mov
inc
or
cmp
imul
fldcw
xchg
xchg
call
and
enter
sbb
and
jne
or
pop
or
sti
popa
cltd
xchg
clc
xlat
xchg
mov
cmp
jg
push
in
out
aad
jne
adc
inc
test
icebp
int3
xchg
and
and
mov
in
out
lea
lock
repz
jg
outsl
ja
mov
in
mov
jmp
into
sub
shl
inc
clc
mov
dec
lahf
lds
in
insl
popa
mov
adc
mov
lea
dec
shrl
xchg
push
xchg
sbb
push
jbe
adc
jne
fs
mov
iret
rorb
xchg
lret
insl
nop
fcoms
lds
adc
leave
fmuls
mov
inc
call
popa
in
loopne
cmp
leave
sbb
mov
mov
call
int3
add
adc
add
jne
out
pop
aam
inc
in
loope
push
pop
jecxz
pop
add
pop
int
leave
mov
cmc
inc
sbbb
fisubrl
dec
in
mov
call
decl
int3
sub
fistl
mov
push
inc
mov
mov
leave
mov
arpl
jb
dec
pop
test
mov
push
jecxz
inc
shl
or
mov
add
add
jge
pop
test
in
sbb
aad
or
or
cmp
xchg
inc
push
testl
rol
popf
mov
dec
lret
in
adc
cmp
cmc
cltd
inc
aad
enter
dec
cmp
pop
mov
adc
push
cmp
in
dec
decl
clc
mov
jg
and
cli
pop
xchg
popa
in
gs
movsl
cmc
mov
stc
xor
mov
int3
xchg
fcomip
cmc
insl
in
xor
nop
outsl
imul
xchg
lods
xchg
repnz
lahf
cltd
lock
test
sbb
fmull
mov
dec
push
jno
aam
lds
les
loope
xor
xchg
popa
mov
mov
in
xlat
jno
sub
rorl
daa
sub
loope
addr16
xchg
mov
insl
sbb
cmc
adc
dec
and
adcb
mov
test
lock
rclb
cmp
pop
xor
flds
aad
mov
mov
jecxz
lea
stos
push
lahf
enter
push
cmpb
lret
sub
cmc
push
gs
adc
leave
push
dec
aaa
outsb
pop
xor
xor
xlat
out
in
dec
push
push
sbb
or
test
ret
test
jmp
sahf
pop
pop
and
xchg
scas
rep
pop
push
and
aad
pushf
sbb
add
inc
rorb
gs
sub
loop
imul
jne
mov
in
dec
push
popf
pop
xor
outsl
fildll
test
jno
in
sub
and
inc
pop
xor
sbb
push
xchg
outsb
mov
xchg
pop
xor
sub
imul
jg
xchg
xor
mov
and
test
imul
outsb
mov
sub
int3
fnstcw
in
inc
pushl
mov
pushf
rcr
mov
shlb
insl
lahf
outsb
and
jl
cmp
mov
xchg
shl
inc
mov
aad
mov
xlat
and
adc
lods
sub
in
inc
psadbw
cltd
sbb
push
sub
or
test
loopne
push
push
pop
jne
xchg
rorl
adc
mov
insl
xor
sub
lods
insl
mov
jl
pop
outsl
adc
popa
fildll
or
lods
sbb
mov
out
mov
sub
pusha
aad
jecxz
inc
sub
imul
scas
xchg
in
icebp
in
dec
adc
mov
movsl
xor
test
sbbl
jno
cmpsl
pop
inc
lret
cld
xchg
leave
jno
pop
mov
fcomp
pop
lock
sub
inc
dec
jle
or
xor
cs
mov
mov
sub
imul
jl
imul
or
into
push
jecxz
cmc
lock
ja
dec
sarb
adc
sarl
fmull
mov
lods
in
xchg
add
xchg
fsubrl
inc
sbb
jl
push
inc
sbb
rcll
aam
cmp
popa
jne
lds
mov
dec
gs
cmp
sub
gs
and
scas
icebp
adc
mov
pop
add
sbb
xchg
call
sub
in
fistps
in
sub
mov
pop
cltd
jne
push
inc
imul
fcompl
in
insl
or
mov
ljmp
jne
aam
push
cmp
or
sub
sti
es
movsl
mov
cmc
inc
xor
popf
cmp
mov
sarb
add
aam
faddl
pop
call
fwait
adc
push
dec
lds
sub
or
fs
mov
icebp
int3
arpl
cmpsl
mov
shll
push
or
lds
and
in
lods
fadd
int
fs
call
int3
test
shlb
xchg
imul
mov
mov
data16
bound
lea
aam
int3
pop
or
mov
mov
add
xor
adc
into
mov
in
pusha
push
and
lods
insl
mov
inc
mov
jmp
dec
pop
jne
lock
mov
loopne
insl
shl
sub
mov
jmp
ljmp
lcall
inc
loope
push
add
fsts
loope
or
jmp
mov
leave
xchg
push
cmp
scas
mov
icebp
lock
jg
fisttpll
jo
cltd
icebp
movsl
sarl
cmp
rcrl
ja
lods
mov
call
aad
popf
sub
pop
xchg
adc
loope
mov
fstl
stos
cmp
mov
and
popf
or
mov
into
add
sbb
adc
lahf
and
xor
cmc
sbb
loope
sbb
in
add
mov
fwait
rorb
fimuls
add
dec
lds
jge
sub
sti
in
or
cltd
xor
lea
mov
movsb
jle
lds
xchg
cmp
cmp
sbb
pop
insb
dec
jne
dec
push
in
mov
test
in
inc
pop
loopne
shr
mov
mov
mov
or
inc
leave
out
insl
mov
fists
ss
loopne
insl
xor
aad
fs
rcl
fwait
dec
movsb
adc
gs
loopne
sbb
xor
jno
iret
or
or
outsb
test
scas
or
sub
mov
cmp
pop
orb
fldlg2
fcomp
ror
mov
adc
loope
gs
add
shr
sti
lahf
pop
mov
and
sbb
lds
daa
rcll
int
adc
or
push
jecxz
adc
out
mov
int3
inc
fsubs
xor
cmc
sbb
aam
daa
mov
inc
outsb
add
xor
mov
jmp
dec
aam
int
rorl
dec
xchg
jmp
test
cld
sbb
jne
data16
xchg
and
shll
inc
int
xor
frstor
jne
pop
push
mov
adc
mov
leave
push
sub
iret
push
in
int3
mov
sbb
jmp
leave
xchg
loope
jmp
lock
popf
mov
xor
imul
adc
in
pop
cmp
sbb
loope
dec
push
cli
push
popf
xor
insl
cmovle
mov
iret
add
sub
daa
test
in
adc
loope
push
cmp
pop
push
xchg
in
cmpsl
sub
xchg
popf
xor
fsub
sbb
dec
leave
mov
push
adc
lods
int
imulb
in
movsl
insl
in
vmovd
fucom
mov
mov
aam
enter
shll
jg
xor
fsubs
sbb
lret
sbb
imul
or
jno
aad
fistps
sbb
popf
fbld
popa
push
sbb
mov
insl
outsb
or
jne
xchg
addl
aad
mov
xchg
or
imul
cmp
sbb
cmp
pop
lret
and
sbb
cmp
into
aam
sub
call
sub
jmp
xchg
orl
shll
and
cmp
jl
sbb
popf
or
push
xchg
xor
fcompl
call
arpl
mov
aam
imul
pop
jecxz
stc
rol
xor
push
fisttps
cmp
adc
push
out
pop
popf
cmp
rol
add
insb
sbb
lock
and
jmp
jl
fdivs
je
lcall
aam
mov
into
popa
call
inc
pushf
dec
js
jg
scas
out
mov
jmp
lods
pushf
imul
dec
ljmp
shl
out
mov
jmp
mov
insl
loopne
loope
scas
mov
push
jecxz
iret
call
push
dec
leave
or
xchg
insb
imul
jmp
shlb
sub
in
xchg
sbb
xchg
jnp
xchg
aad
pop
lods
cmp
movsb
int3
xor
mov
in
jecxz
push
int
push
test
out
shlb
std
xor
negl
in
fdivrs
outsb
mov
cmp
ror
pcmpeqd
call
mov
les
xor
adc
leave
push
xchg
sub
fstpl
and
push
test
xor
daa
loope
mov
mov
dec
add
outsl
add
insl
test
cmp
sub
std
popa
in
enter
cmp
sbb
inc
inc
sub
inc
in
cmp
jo
adc
inc
pop
dec
pavgw
test
xchg
popa
push
lds
arpl
shr
adc
cmp
leave
xadd
inc
outsb
mov
fdivrl
movsl
push
and
sbb
xchg
cmp
xchg
or
mov
mov
push
adc
lods
inc
mov
and
push
jecxz
or
dec
and
nop
or
xchg
movsb
cmp
mov
xor
ror
add
aam
ja
daa
aam
dec
inc
cmp
sahf
and
or
pop
or
dec
inc
mov
icebp
incl
cmp
ds
repz
mov
clc
jne
mov
fnstcw
in
pusha
out
add
test
leave
pop
push
mov
xor
cli
jle
jmp
mull
cs
and
and
lods
call
sbb
loop
sbb
loopne
loope
xor
hlt
add
jl
lock
dec
addr16
pop
mov
lods
pop
addb
call
inc
fdiv
inc
xchg
mov
es
push
movsl
pop
lods
xor
fstpl
mov
adc
adc
sbb
cmp
adc
je
cmp
xor
sbb
xor
in
sub
leave
cmpsl
in
mov
push
adc
mov
call
fwait
lds
aam
jmp
fsts
mov
adc
push
xor
dec
jmp
orb
pop
inc
enter
or
push
sbb
jne
mov
pop
xchg
or
xor
enter
call
or
insl
xor
adc
gs
sub
dec
mov
sub
pop
xor
sub
shll
shl
shrl
cmp
inc
in
push
jno
sub
out
and
gs
fstp
pop
inc
cmp
out
test
sub
jl
lock
dec
lcall
fnsave
sbb
and
push
out
inc
sbb
mov
adc
push
xchg
adc
addr16
les
adc
int
fcom
sbb
cmp
and
mov
ja
or
push
lods
lods
mov
insl
int
sub
push
stc
mov
and
int
shll
sub
cmp
jnp
pop
sub
in
jle
aam
cmp
fnsave
lds
add
fsubrs
rcrl
les
pop
add
sbb
lods
sub
xor
mov
nop
negl
sbb
adc
xchg
mov
orl
movsl
xchg
ss
mov
pop
dec
add
into
gs
sub
push
add
xor
jno
test
pop
cltd
arpl
push
loop
mov
fwait
int3
mov
sbb
sbb
cltd
pop
lcall
jno
aam
call
xor
mov
pop
fmul
inc
sub
mov
pop
pop
popa
pop
fisubs
jecxz
sbb
gs
aam
and
rcl
int3
fnstcw
mov
call
aad
push
cmp
out
sbb
in
sbb
sub
fidivs
int3
add
mov
lea
leave
ljmp
inc
cltd
jge
lahf
mov
dec
lods
aam
in
clc
inc
or
loopne
jmp
lret
lock
movsl
push
inc
lock
aad
xchg
dec
xchg
sarl
jb
sbb
mov
push
dec
loope
movsl
iret
cld
and
cmc
pop
rcl
test
mov
mov
push
outsb
scas
ljmp
pop
jb
call
pop
jnp
xor
lods
aam
int3
stc
movsl
xor
pop
inc
and
push
imul
lahf
and
sub
lods
shl
imul
icebp
das
fcoms
int3
adc
jbe
enter
xor
insl
mov
jle
sub
pop
sarl
jno
in
inc
fdivrl
jle
loope
aam
dec
or
push
adc
adc
mov
movsb
dec
xorl
out
stc
cmp
or
mov
mov
popf
int3
jb
or
push
in
add
sub
push
mov
jmp
sbb
lret
int3
insl
pop
mov
adc
fwait
rolb
fstpt
test
lods
jbe
in
add
push
cmp
or
icebp
es
jmp
pop
dec
popf
lds
insl
add
dec
sarb
in
jmp
xchg
dec
in
outsb
xchg
into
and
mov
mov
imul
dec
mov
mov
xchg
movaps
pop
push
mov
xchg
lods
xor
sbb
sbb
aas
inc
mov
dec
adc
sbb
fsts
in
inc
aad
shrl
push
mov
add
imul
xchg
shll
inc
xchg
ror
dec
jmp
adc
es
mov
dec
mov
cwtl
test
push
fstpl
cltd
adc
rorl
pop
int3
add
xchg
cli
or
enter
pop
insl
pusha
dec
int3
icebp
in
xchg
xchg
mov
addr16
in
xor
popf
or
mov
rorb
sub
mov
or
rcll
popa
cmp
pop
or
sbb
popf
dec
enter
add
jmp
xchg
dec
nop
mov
push
pop
xchg
pop
pop
and
push
dec
and
inc
xchg
xor
in
sub
sub
pop
add
jno
mov
or
pop
in
cmp
adc
mov
inc
addr16
imul
sub
inc
movsl
pop
dec
sarb
ja
jge
pop
lds
sbb
jge,pt
or
lods
push
js
xor
gs
aad
push
dec
cmp
fs
sti
sbb
and
xchg
xchg
mov
xchg
dec
popf
fdivr
es
sub
push
in
aam
sub
xor
sbb
and
sub
lds
dec
mov
mov
dec
shl
jmp
cli
jl
in
icebp
push
leave
int
adc
enter
fcoml
sub
int3
xor
out
adc
lock
mov
adc
movsl
inc
jns
push
aam
sub
scas
jno
rorl
xchg
daa
in
loopne
mov
mov
mov
in
sarl
iret
add
dec
cwtl
lret
in
shrb
push
sub
mov
leave
sbb
pop
sbb
sbb
int
fsub
mov
push
movsl
jne
sbb
aad
popf
or
out
movsb
out
add
mov
jno
rorl
push
cltd
push
pop
sub
xchg
jmp
fwait
mov
mov
mov
jle
loopne
xor
loopne
lods
movsl
call
in
dec
cmp
int
mov
call
adc
aam
jne
push
gs
adc
adc
and
in
lock
gs
mov
cvtps2pi
movsl
fs
loopne
cmp
mov
xchg
inc
jne
int3
sarl
cmp
int
enter
enter
cltd
shll
push
mov
fxch
rorb
aaa
mov
dec
jmp
loop
jo
idivl
push
in
sub
imul
xchg
xchg
aad
cmp
pop
lods
dec
mov
mov
push
jno
in
add
lds
sbb
call
sub
frstor
dec
dec
sbb
dec
jno
sub
fsubr
dec
test
leave
in
popa
jge
hlt
cmp
xor
aad
pop
inc
or
icebp
mov
std
cmp
cmp
mov
in
int
lcall
aaa
scas
jl
loope
ror
add
arpl
cld
pop
call
aam
fcoml
pop
or
ljmp
xor
lret
sub
call
mov
cmp
sub
in
sti
outsb
cltd
int
add
lahf
xchg
shrl
xchg
lret
sub
jle
xchg
push
rcrb
lea
enter
xor
movsl
mov
jne
xchg
jne
popf
and
test
in
movsb
mov
pop
imul
shll
mov
push
fld1
adc
popa
dec
lock
cmp
mov
cltd
shrb
sub
in
mov
loope
push
aaa
imul
pop
fldenv
lods
mov
inc
mov
sbb
and
mov
push
psubusw
and
test
test
or
push
add
add
into
jae
loope
jae
mov
sbb
lea
outsb
mov
int3
mov
dec
lea
loop
pop
in
iret
jg
clc
lods
rcrl
sub
mov
popf
pop
mov
popa
sub
in
test
call
popa
pop
inc
shr
adc
enter
fs
fwait
sbb
mov
lret
test
iret
pop
pop
sbb
movsl
test
inc
leave
rol
push
into
aad
cmp
nop
std
mov
in
inc
xchg
fidivrl
mov
and
mov
mov
pop
pop
sbb
loop
insl
stc
mov
jne
push
or
xchg
popa
inc
ljmp
shll
mov
cmc
push
push
mov
test
pop
cld
push
movsb
in
push
mov
and
add
sub
mov
sub
test
and
ds
pop
hlt
pop
movsb
mov
add
pop
pop
mov
cmc
push
mov
sbb
in
aam
adc
mov
inc
stc
out
in
cmp
daa
in
movsb
rol
lcall
dec
outsb
data16
and
push
sbb
test
pop
cmp
push
mov
ss
xor
fsubrs
mov
imul
adc
out
fdivl
xchg
jo
pushf
test
cld
test
or
push
leave
sub
cmp
in
in
fldenv
rorl
in
fmulp
nop
jae
or
mov
push
sbb
jne
jle
fdivr
sbb
jl
lock
cmp
sbb
leave
outsl
dec
int3
dec
cmp
cmp
sbb
sub
in
ss
xor
sub
pop
push
jg
xor
xchg
lcall
mov
and
sub
push
sub
add
jle
loope
fcom
in
pop
add
mov
scas
dec
insl
sbb
leave
icebp
pop
mov
in
in
dec
mov
mov
inc
in
add
aaa
pushf
cmc
shr
movsb
or
xchg
sub
in
sbb
cmc
int
add
and
mov
cmp
aam
outsb
cmc
xor
jmp
xchg
cmp
push
dec
inc
mov
adc
xchg
mov
mov
in
test
and
fdivrs
in
into
jo
push
xchg
push
int3
nop
push
cmpsl
adc
bound
out
mov
and
push
movsb
loope
lock
hlt
les
sti
je
fisttps
addr16
cmp
lret
outsb
adcl
enter
hlt
aaa
test
gs
and
loop
notl
popf
cmp
adc
insl
test
pop
dec
pusha
fucom
adc
lods
jecxz
in
popa
movsb
inc
f2xm1
mov
push
cmp
aad
test
sbb
mov
pop
jmp
mov
xor
or
movb
clc
aam
xlat
loopne
fsubr
cmp
in
std
mov
insl
xor
lea
enter
xchg
sti
lods
mov
and
imul
mov
sub
add
lods
lea
cmc
xor
cltd
inc
sub
add
cmc
fcoms
pop
aad
mov
mov
loopne
shl
icebp
frndint
cmc
pop
sbb
fdivp
rcrl
in
mov
jge
mov
popa
pcmpeqw
and
sub
or
mov
fcoml
pop
aaa
mov
lds
mov
cmp
xchg
sbb
icebp
jb
mov
clc
into
fadd
sub
std
clc
push
xchg
sub
dec
mov
xor
add
or
les
cmpsb
mov
rcl
jno
aad
adc
dec
fsts
lods
dec
adc
lock
xor
or
fadds
dec
adc
push
or
mov
dec
ss
or
xlat
popa
les
int3
sarb
push
call
adc
int3
mov
xchg
adc
pop
shr
loopne
sbb
cltd
sub
imul
pop
test
jecxz
mov
sub
push
or
mov
add
or
push
sub
pushf
mov
adc
push
push
xor
sbb
and
dec
loopne
ja
sbb
xchg
enter
mov
xchg
sub
gs
jnp
rcll
int
jne
nop
sub
insl
aad
add
aas
cli
sbb
stos
xchg
and
int
enter
leave
das
sbb
rolb
aas
outsb
aad
push
push
test
sub
jge
jle
in
mov
mov
sub
std
imul
scas
pop
adc
icebp
mov
jns
into
addl
mov
shrl
jmp
scas
push
jmp
gs
jmp
push
mov
and
lock
into
les
ljmp
mov
sbb
leave
aaa
out
addr16
neg
test
mov
adc
popf
sub
sbb
and
sub
jbe
or
jl
lods
out
pushf
jno
xor
and
cmp
rclb
and
xor
cmp
aad
outsl
lods
out
push
mov
out
in
sub
mov
push
or
fs
adc
lds
xchg
or
int
mov
mov
mov
cmp
dec
push
pop
adc
call
jmp
pushf
int
mov
leave
call
adc
out
xchg
outsb
fcmove
cwtl
mov
mov
or
imul
mov
flds
je
aad
jecxz
shll
fsubs
lock
or
mov
insl
push
sbb
setp
adc
and
adc
cli
mov
aam
dec
pop
or
lea
fldcw
cmc
arpl
sarl
xchg
push
inc
push
adc
xchg
xchg
sbbl
cmp
rcr
mov
xchg
ffree
cld
adc
enter
int
adc
add
mov
int
and
fadd
lock
lods
push
pop
dec
push
dec
cmp
call
mov
inc
xor
fldenv
or
xchg
movsl
dec
add
outsl
lods
dec
mov
cwtl
sti
movsl
or
jne
pop
fwait
lock
add
repnz
aad
hlt
push
and
xor
test
outsb
lea
mov
and
mov
xchg
sahf
xchg
xor
mov
dec
add
mov
arpl
pop
adc
pop
sarb
mov
out
call
cmp
xor
xor
mov
shrb
cmp
enter
mov
cltd
cli
mov
push
lods
or
lahf
icebp
cmp
add
in
or
movsl
into
mov
popa
pop
jno
and
shl
push
int
in
dec
push
into
out
xor
leave
adc
mov
rcl
faddl
call
jmp
aam
insl
jne
cmp
xor
push
cmp
shl
pop
xchg
cmp
int
add
enter
outsl
lock
add
dec
xchg
fsub
mov
push
popa
push
adc
mov
in
sub
int3
mov
rcrb
jmp
mov
fmull
adc
enter
int3
sub
jp
or
jno
psubsb
inc
dec
shlb
lds
jmp
adc
jne
outsl
jle
lock
cltd
fstl
test
andl
out
jg
enter
pop
fisttpll
inc
pop
scas
and
and
inc
inc
lods
mov
nop
add
mov
mov
push
or
jl
push
sub
push
icebp
and
lods
xor
pop
jg
aam
mov
loopne
sub
xchg
cmpsb
or
lock
or
imul
add
mov
xchg
dec
sbb
xor
leave
adc
icebp
adc
cld
mov
es
outsl
and
loope
lock
jge
xor
insl
jb
xor
xor
inc
lods
sub
vsqrtpd
ret
fxch
insl
aam
cmp
subb
cltd
adc
xor
dec
jno
mov
loop
add
xor
xor
fdivs
push
lds
mov
out
pop
adc
aam
xchg
fdivrl
popf
mov
mov
mov
loop
je
leave
ficoms
mov
popf
loope
xchg
sbb
and
lock
rorl
pushf
sbb
pop
enter
leave
sarl
xchg
movsl
cltd
pop
sub
rclb
and
sub
xor
sbb
popa
scas
mov
inc
mov
arpl
inc
pop
int
xchg
jle
and
adc
push
outsl
pop
int
call
sbb
xor
mov
int3
mov
out
out
into
xchg
or
mov
call
clc
inc
fcomps
pop
outsb
and
into
inc
lock
xor
test
ror
jg
je
adc
into
push
mov
aas
xor
jbe
or
test
sub
int
xchg
mov
xor
cmpsl
sbb
push
mov
clc
leave
test
jl
push
inc
insl
xchg
mov
loopne
xchg
jl
cli
mov
lea
mov
cmc
popf
out
sub
gs
mov
jmp
cli
push
push
insl
adc
cmp
sbb
adc
xchg
int
loope
movsb
xchg
mov
cld
hlt
sub
movsl
call
pop
and
movsb
in
lea
call
dec
lret
fsubs
push
sub
sbb
pop
lret
movsb
pop
sbb
jmp
rcl
test
in
loop
cltd
fs
insl
sbb
adc
insl
testl
notb
movsl
popa
pmuludq
and
enter
sub
aad
jno
loopne
psubb
jmp
xchg
fisttpll
sub
imul
cltd
sub
loope
test
sub
call
pop
imul
mov
mov
inc
sbb
dec
inc
in
mov
jle
in
and
push
mov
movsl
cmc
push
bound
cmp
es
sbb
mov
leave
push
and
lock
call
adc
cltd
cmp
add
les
retw
push
push
push
mov
jle
lcall
test
jmp
ja
call
int
lods
push
add
cmp
jmp
lahf
adc
jne
mov
insl
xchg
stos
cld
enter
jbe
add
mov
push
roll
xor
cs
xchg
or
mov
pop
pushf
add
dec
xchg
push
fwait
iret
inc
mov
lds
cltd
imul
icebp
mov
jns
xor
jo
pop
add
movsl
pop
notl
jecxz
xchg
cmpb
dec
shl
shlb
das
push
jmp
sbb
loope
in
lock
sbb
fdivrs
jmp
push
push
call
xor
shll
sbb
or
mov
mov
out
or
jle
lods
dec
popf
fcmove
pop
gs
testl
jge
mov
inc
cmp
and
lds
arpl
mov
dec
sbb
push
jp
scas
vaddps
orb
bound
in
std
mov
sbb
call
cmc
shll
sbb
out
fs
jecxz
pop
push
sbb
or
aad
loopne
fnclex
and
scas
roll
xor
mov
dec
push
pop
push
xchg
icebp
inc
in
sub
push
lods
pop
push
xor
xchg
int3
xchg
lret
or
loopne
int3
cmp
sbb
mov
jg
fadds
in
cmp
ret
and
adc
insl
imul
call
mov
xor
loope
sbb
int
lods
shrb
mov
jge
xchg
cmp
sbb
in
cltd
stc
mov
push
in
popf
lock
mov
lock
lea
icebp
inc
in
inc
jne
out
cmp
into
movsl
inc
sbb
sbb
jle
arpl
jne
in
cmp
dec
leave
loope
xor
popf
dec
inc
mov
sbb
outsb
shrd
xchg
adc
pop
frstor
in
pop
aam
inc
mov
pop
dec
cmp
sarb
jnp
xchg
mov
in
cmc
fucom
mov
cmc
pop
shll
into
cmp
shll
mov
fcoms
mov
dec
push
add
jne
sbb
sub
movsl
and
fucomp
rorb
xlat
fstps
out
dec
faddp
or
or
jg
and
pop
mov
add
nop
sub
call
out
dec
into
aas
xchg
addr16
xchg
adc
xchg
aam
out
sbb
push
xlat
int
adc
sbb
sub
sqrtps
mov
sub
mov
vandnpd
mov
pop
sub
aad
mov
push
mov
int
sub
inc
aad
addl
xchg
sbbl
loope
leave
rolb
aad
rorl
lds
loopne
in
fs
mov
adc
adc
int3
sbb
pop
fstl
mov
sub
mov
fisttpll
mov
sbb
dec
enter
ret
in
xor
imul
shrl
out
in
jbe
jns
pop
ficoml
popa
call
pop
xchg
push
scas
sarb
cmp
pop
call
fsts
out
in
xchg
sti
xchg
fmuls
mov
fsubrl
lret
lret
shrb
mov
popa
jle
mov
pushf
push
in
sbb
dec
cltd
pop
cli
popf
cltd
ljmp
mov
mov
adc
pushf
call
push
add
xchg
mov
push
jno
adc
popa
in
mov
sbb
mov
xchg
pop
insl
cltd
xchg
inc
imul
imul
xchg
cmpsl
adc
mov
pop
sbb
mov
adc
lock
mov
cmc
insl
in
mov
repnz
push
mov
pop
enter
cmc
push
dec
lret
adc
lea
xor
push
std
adc
xchg
call
bound
xchg
add
or
pusha
ret
lods
sub
cli
add
mov
je
in
or
inc
xchg
xor
imul
pop
data16
jne
in
sub
js
popa
es
dec
jle
sbb
mov
insl
popf
sub
mov
pop
or
repz
clc
rol
loope
in
jno
call
gs
jmp
jl
int3
cmp
adc
adc
dec
out
pop
mov
xchg
add
jp
push
in
xlat
cli
mov
mov
popf
mov
iret
rol
dec
pop
imul
fs
xor
push
push
adc
xlat
lret
int3
fdivrs
push
and
xor
mov
push
iret
dec
pop
sbb
int
out
sbb
into
aaa
into
or
pop
out
fisttpll
inc
gs
mov
ret
pusha
loope
pushf
mov
int
inc
loopne
call
lock
fstp
mov
mov
and
testb
lock
and
cmp
sbb
adc
or
xchg
and
lret
inc
xlat
sbb
fcompl
frstor
add
mov
cmpb
sub
mov
push
mov
shrl
add
xchg
inc
push
mov
sbb
push
sbb
popa
mov
in
mov
sarl
lock
das
test
enter
jge
pop
sub
aam
cmp
push
inc
sahf
jmp
jno
mov
roll
jle
sbb
and
movsl
lods
or
int
gs
bound
fsubl
xchg
or
mov
push
shll
mov
scas
mov
rclb
jmp
push
push
mov
sahf
dec
cmp
sub
adc
dec
outsb
adc
sbb
inc
lcall
dec
xor
jecxz
cmp
jbe
mov
aam
jno
inc
mov
ss
mov
mov
in
mov
push
push
xchg
sub
fcoms
jle
dec
mov
in
data16
bound
data16
outsb
xchg
in
pushf
sbb
adc
in
adc
shr
push
adc
scas
ja
xorb
jbe
pop
fnclex
sub
pop
fdivrl
bound
inc
shll
pop
ret
mov
xchg
jle
repz
push
mov
xchg
jne
push
in
int
inc
inc
cmp
jle
call
push
int3
jb
in
mov
jb
fstpt
add
fs
pop
mov
frstor
mov
fmul
test
test
cmpsl
jle
add
mov
fcomp
or
lahf
loope
cmp
push
push
lds
lret
mov
fldt
stc
mov
jle
std
repnz
sub
mov
mov
pop
push
shll
pop
sbb
sub
pop
not
push
mov
xor
mov
ds
jp
mov
push
aad
into
pop
sahf
cmpsl
imul
imul
cmp
sbb
test
mov
jle
lods
test
jle
in
popa
mov
loopne
cmp
cmc
jno
repnz
imul
mov
movsl
mov
lock
mov
les
adc
sub
pop
sbb
call
stos
xor
push
jno
shr
roll
and
push
fsincos
out
lds
mov
xor
movsl
leave
ljmp
push
push
jmp
loope
aam
sarb
mov
cmp
in
push
into
gs
leave
jne
inc
mov
popf
in
or
mov
push
repnz
test
cmp
jno
enter
xchg
movsl
mov
jo
and
std
sub
test
shrl
push
fcomps
mov
push
stos
cmp
in
or
fcoml
push
sub
fucom
or
jnp
pop
icebp
push
sahf
push
inc
popa
fadds
and
mov
fs
pop
rcrl
push
adc
shl
das
aad
hlt
push
mov
aam
xor
leave
mov
dec
faddl
jne
xchg
lcall
jne
pop
jne
mov
push
fsubr
and
mov
pop
cltd
je
push
push
pop
fstps
fsubr
xchg
adc
xor
int3
pop
divb
leave
int3
adc
jle
push
pop
push
push
aaa
add
loope
mov
jle
test
out
cmc
aam
int
adc
aad
and
loopne
inc
mov
mov
aad
enter
test
in
xchg
dec
popf
bnd
pushf
fnstsw
dec
rol
cmp
dec
and
mov
test
mov
push
sub
sub
ret
cmpsb
fdivl
inc
sub
in
cli
dec
lret
cltd
outsl
lods
mov
and
stos
lods
jo
inc
das
pop
jge
adc
mov
mov
inc
dec
adc
jbe
test
dec
or
dec
pusha
shl
xchg
aam
popfw
mov
jbe
sti
test
mov
insl
bound
xlat
and
es
insl
jmp
jge
jle
addl
adc
ret
out
scas
pop
out
jle
out
adc
add
movsl
ret
dec
outsb
push
stos
mov
cmp
mov
mov
pop
and
xorl
dec
mov
adc
dec
shr
jle
dec
pop
shll
mov
jne
and
sub
out
pop
in
popf
jbe
movsw
into
mov
rep
test
stc
fisubrl
out
jp
cmp
push
push
cmp
lock
adc
and
xchg
pop
jb
sarl
xor
sub
dec
mov
adc
mov
mov
std
int
popa
pop
jle
imul
inc
add
mov
sbb
xchg
xor
movsl
hlt
gs
outsl
in
shrb
mov
lock
push
jne
jmp
cmc
jge
push
xor
mov
shl
loopne
stos
jp
dec
or
pop
lock
cltd
popf
dec
push
cmp
int3
aad
push
xor
push
and
pop
adcl
and
insb
ja
imul
and
mov
int3
addl
fwait
int
mov
mov
stos
fwait
rcrl
leave
sbb
adc
jne
scas
pop
aad
in
mov
pop
shll
scas
fnsave
adc
jge
dec
aad
xchg
stc
inc
scas
orl
in
mov
push
aad
fstl
and
jae
inc
xchg
lock
xor
movsl
cmc
xchg
sbb
dec
imul
sub
mov
mov
mov
insl
xchg
pop
int3
in
mov
andb
andb
in
sub
in
stos
adc
mov
cmp
dec
aad
pusha
lods
mov
loopne
lds
jo
mov
inc
xor
iret
ss
mov
into
sbbl
push
int
mov
push
andl
scas
and
pop
xor
cmp
dec
loopne
cmp
jmp
in
xor
and
aam
in
mov
pushf
xor
inc
cmp
stos
addr16
rcl
movsb
loope
dec
xor
add
mov
and
cmp
sti
push
int3
pop
inc
gs
hlt
lods
or
aas
cmp
iret
xchg
in
loope
jo
dec
jmp
dec
inc
mov
inc
add
lds
mov
push
dec
imul
inc
rcrl
xchg
pop
scas
push
jl
int
lods
gs
iret
xor
adc
inc
call
add
iret
sbb
add
pop
jmp
or
popf
push
imul
mov
cmc
xchg
cltd
pop
sbb
mov
movsl
xchg
mov
sub
fsubrs
into
sbb
in
aad
in
shl
in
sub
sbb
scas
lock
jl
add
mov
fsubrs
inc
xor
xchg
imul
jle
sub
icebp
roll
insl
rcrb
out
pop
call
in
pop
flds
aad
jno
test
mov
int3
sub
mov
sub
push
and
lret
mov
in
jl
mov
aaa
mov
pop
popf
rcll
call
mov
pop
xor
int3
fmul
out
popf
stc
shll
imul
cmc
rcll
aam
dec
call
pop
inc
jp
mov
gs
shrl
call
cltd
jecxz
imul
pop
int3
jns
into
movsb
pop
cmpsb
ret
insl
mov
push
mov
insl
gs
call
out
jne
loopne
lret
mov
xor
leave
movsl
mov
ljmp
mov
sub
popf
shlb
adc
cmc
xchg
out
pop
jg
mov
sub
jns
lds
sub
xchg
jno
rorl
sub
shr
sbb
int
sbb
sbb
inc
in
cmp
and
aas
loopne
sub
icebp
call
adc
lret
sbb
pop
inc
sub
push
cmp
and
rcll
pushf
inc
xor
fcmovnu
mov
test
mov
negl
in
push
data16
xor
loope
dec
xchg
mov
ss
int3
in
aam
ror
scas
pop
and
loope
fcoml
loopne
lret
push
pop
sub
dec
ret
push
dec
mov
inc
leave
loopne
sub
cmpsb
fsubrl
int
mov
iret
push
int3
repnz
pop
lods
adc
out
fnstenv
and
cmc
iret
sub
into
jmp
in
fdiv
aad
inc
insl
lds
call
lods
sar
mov
cmp
insl
popa
lods
and
push
std
shll
cltd
sbb
push
shll
fdivr
adc
fdivs
dec
rorl
rorb
add
jle
in
insl
insl
adc
das
in
jnp
in
scas
xor
inc
mov
dec
mov
enter
mov
roll
xchg
sbb
dec
jp
xor
and
push
rcr
sub
rdtsc
jne
sub
pop
in
invd
shlb
gs
pop
in
adc
or
aam
movsl
out
aad
dec
stos
rcl
push
rorl
xchg
xchg
sbb
int
shll
lahf
jne
push
adc
adc
in
repz
icebp
lret
jo
jle
sbb
fistps
mov
sub
jbe
aam
jmp
es
movsb
xor
out
pop
faddl
and
dec
sbb
int3
loope
add
xor
xchg
outsb
mov
lea
adc
mov
xchg
sbb
insl
jle
inc
inc
sub
mov
add
jne
mov
sbb
adc
push
mov
ret
gs
fnstsw
sub
loopne
insl
push
bound
in
fimuls
xlat
int
xor
popf
lahf
sbb
sub
dec
icebp
mov
int3
mov
mov
dec
mov
and
push
in
and
pop
shrl
push
shlb
sub
imul
call
insl
sub
mov
test
pop
popl
je
xchg
aam
pop
cmp
sbb
int
push
mov
cmp
dec
cmp
adc
jno
cmove
insl
mov
adc
int
fs
or
add
decl
pop
fcmovu
in
rorb
insl
insl
icebp
inc
fcoml
mov
in
pop
inc
inc
sub
dec
xor
cmp
lods
int
aad
imul
hlt
loopne
adc
dec
push
movsl
pop
in
cmp
addl
cmp
add
mov
sbb
call
mov
cmp
insl
or
push
or
mov
addb
adc
pop
inc
lea
adc
or
adc
icebp
and
insl
pop
lods
leave
inc
sarb
sub
sbb
xchg
inc
sub
dec
cmp
dec
popa
sbb
outsb
jg
cmp
push
aaa
and
popf
push
loope
neg
in
adc
addr16
scas
loopne
sarl
mov
adc
mov
xor
push
adc
and
lcall
rorl
sbb
fstp
push
mulb
push
jle
mov
in
push
aad
add
int3
jmp
adc
mov
pushf
adc
push
rol
mov
and
add
in
sbb
test
icebp
outsb
sbb
pop
loope
push
std
xor
movsl
insl
insl
push
rcr
cld
sbb
loope
inc
cmp
jle
imul
les
dec
imul
repz
mov
rclb
mov
mov
push
leave
stos
xchg
inc
int3
insb
sbb
lcall
fmul
adc
icebp
popf
xor
inc
dec
mov
mov
sbb
int3
lods
gs
mov
sub
fwait
mov
faddl
cmc
mov
xchg
nop
adcl
adc
or
insb
mov
jo
movsl
aam
loopne
cli
icebp
pop
jno
lds
test
nop
add
popf
mov
shll
ljmp
in
cmp
lds
and
in
call
xor
jg
cltd
xor
lea
outsl
xor
sub
bound
cmc
imul
dec
gs
and
xchg
into
jl
and
mov
insl
sub
lods
mov
adc
mov
dec
int
in
hlt
or
xchg
mov
jg
mull
imul
aad
in
dec
mov
jne
aaa
sbb
pop
xor
dec
xchg
fnstcw
decb
loope
pop
cltd
adc
mov
mov
jno
int3
popf
je
and
jbe
imul
and
push
sbb
dec
pop
mov
enter
enter
mov
fsts
outsb
mov
sub
ds
xchg
ljmp
push
adc
mov
or
xchg
in
push
lock
movsl
out
xlat
dec
jl
dec
dec
ds
sub
push
sub
clc
sarl
in
fsubl
iret
mov
jmp
mov
sbb
dec
or
subl
xchg
popa
ss
movsb
icebp
hlt
sub
sbb
icebp
sahf
in
inc
mov
xchg
mov
xor
imul
cmc
pop
adc
js
int
loopne
add
cmp
add
mov
push
and
adc
enter
in
push
push
movsb
fistl
sub
dec
shll
sub
pop
int3
aas
jne
call
pop
sub
sbb
shlb
adcb
mov
cmp
arpl
sbb
jp
mov
mov
icebp
in
sub
sbb
fs
xor
push
popf
pop
fisubl
aad
inc
dec
cmp
mov
pushf
outsl
sub
adc
in
mov
cmpb
xor
fnstsw
lds
mov
shlb
pop
loope
test
or
cmp
leave
neg
pop
jb
aad
xor
insl
in
in
popa
sti
outsl
lock
push
mov
stos
iret
shl
in
jne
dec
adc
fwait
push
popf
sub
pop
push
int3
cmc
call
mov
pop
les
dec
xor
pop
dec
lods
sub
sbb
call
fistpll
mov
sahf
cmp
fstps
test
rcll
xor
xchg
push
scas
movsl
inc
out
insb
sbb
loope
lods
popf
mov
pop
jae
sahf
dec
pusha
mov
jp
mov
jle
xchg
cmp
movsl
mov
ffree
aad
rol
dec
mov
push
adc
sbb
shll
and
cmpb
sbb
fcompl
orb
loopne
enter
rcl
cmp
hlt
int3
aam
lock
sub
cmp
inc
jle
popa
mov
imull
jmp
data16
cmp
test
lods
movsl
mov
cmc
mov
clc
inc
mov
cmp
mov
inc
add
xchg
adc
test
dec
sarb
leave
add
popf
test
pop
cltd
pushf
and
add
mov
repz
mov
outsb
popa
in
mov
loop
loop
mov
cmp
mov
repz
call
int3
jmp
jmp
call
dec
and
xchg
insb
cmpsl
fistps
push
push
xchg
lea
iret
fldl
mov
in
xchg
xor
and
outsb
loope
icebp
mov
dec
cmp
xor
xchg
fldenv
pcmpgtd
shrl
vminpd
pop
insl
lods
iret
pushl
ret
push
mov
sub
in
icebp
outsb
mov
imul
mov
stos
adc
aas
les
xor
nop
cmp
xchg
sub
fpatan
or
or
mov
push
sarb
and
in
fstp
push
fidivs
insl
pop
dec
faddl
negl
or
sub
cltd
and
mov
dec
and
sub
fxtract
gs
cmp
adc
lods
sub
cmp
mov
int
push
lds
fildl
pop
pushf
sub
lods
in
leave
popa
shr
mov
adc
and
mov
mov
adc
and
inc
lds
movsb
dec
mov
mov
sarl
call
enter
pop
lock
rol
mov
mov
mov
inc
mov
jmp
sbb
inc
xor
fistpll
in
mov
inc
fdivs
sub
fnsave
jle
int
mov
xchg
push
cmc
les
clc
js
in
mov
es
jecxz
outsb
jmp
mov
jmp
out
rcll
fldenv
jno
adc
add
pushw
ficoms
mov
cmp
mov
imul
or
shlb
dec
mov
fs
mov
dec
sahf
and
xchg
cmp
mov
mov
mov
faddl
sbb
jae
jns
xchg
movsl
add
outsb
mov
sub
lcall
lds
je
sub
clc
das
in
adc
inc
or
or
in
sbb
mov
sbb
ds
fwait
cli
mov
fsub
adc
xchg
icebp
leave
or
cmp
xor
in
in
mov
sbb
dec
imul
jne
mov
fdivs
mov
ss
push
mov
pop
out
pop
push
jmp
shr
add
xchg
xchg
pop
fdivl
insl
into
rcrb
mov
rol
mov
rorl
fiaddl
shl
jecxz
xlat
pop
insb
jb
cltd
push
cmp
repnz
dec
xchg
adc
mov
fnsave
adc
fdivs
daa
xor
int3
sub
dec
mov
xchg
clc
fsubl
test
mov
xor
push
out
dec
jecxz
sub
pop
lods
in
fiaddl
out
inc
test
xchg
inc
dec
cmc
mov
std
inc
pop
inc
lea
xchg
and
aad
mov
cmc
lods
icebp
scas
push
stos
jecxz
rcl
mov
in
fsubl
cmp
test
imul
call
sub
clc
cmp
popa
push
inc
lods
jmp
subb
loope
mov
mov
hlt
sbb
cmp
push
into
jmp
int3
inc
pop
dec
inc
jg
popf
mov
dec
sbb
cmp
or
xlat
insl
sahf
popa
push
and
lea
cmc
fdivrl
scas
in
add
sub
mov
sub
xchg
mov
mov
mov
pop
push
or
movsl
aam
pop
leave
or
les
inc
sarb
fisttpl
sbb
dec
pop
jmp
sub
fistpl
or
cmp
xor
push
in
mov
mov
jmp
mov
leave
dec
xor
pop
rcll
cld
jno
xchg
sbb
xor
add
shr
mov
pop
xchg
inc
insl
sbb
xchg
cmpsl
jl
adc
jmp
cmp
in
xchg
test
mov
iret
add
test
ficoml
jne
cmc
jecxz
jbe
mov
and
iret
sub
mov
sub
cltd
or
xor
add
insl
push
mov
sbb
push
in
inc
vmovddup
mov
pop
xor
fcoms
mov
inc
loopne
or
dec
jmp
sub
sbb
dec
and
neg
sub
shl
shr
loope
or
mov
test
call
adc
or
out
test
mov
popf
mov
in
ljmp
dec
loopne
pop
lock
je
push
cli
lds
mov
test
insl
xchg
insl
xchg
inc
sbb
dec
cmp
pop
inc
sub
dec
pop
xor
xor
adc
insl
and
in
rcr
popf
aad
mov
popf
xor
sub
xchg
in
push
dec
xor
push
or
dec
and
mov
mov
aad
sub
xchg
push
stos
jmp
inc
lcall
adc
movsl
inc
mov
pop
cltd
cmpsl
xor
adc
insl
or
pop
mov
cmc
lds
popf
popf
sbb
sub
sub
fcomps
mov
call
cmpsb
add
mov
loope
test
iret
clc
cmp
shl
loopne
cmp
sub
and
icebp
cmp
mov
out
ss
sti
out
jne
mov
sbb
push
inc
rclb
xchg
enter
shll
cmp
lds
imul
mov
popf
popf
rcll
fcmove
inc
lret
lock
dec
popf
add
mov
mov
sub
test
sbb
xchg
fucomp
repz
mov
std
in
neg
fistl
fmuls
stc
test
shr
xchg
les
inc
fmull
mov
push
in
imul
dec
fcomps
dec
push
sbb
int
cmc
shll
mov
sbb
lahf
dec
test
and
pop
aad
fiadds
loope
pop
int
or
mov
int
dec
out
icebp
aam
cmpsl
mov
dec
ficomps
jmp
jae
pop
lods
rorb
adc
popf
or
mov
xchg
fstpl
mov
insb
lcall
rorl
dec
loopne
aad
leave
aam
mov
stos
pop
fstpl
in
jno
jmp
in
mov
pop
dec
xor
lds
lea
mov
lds
in
lret
insl
aad
lret
cltd
sub
shll
cmp
aam
insl
cmp
dec
out
int3
sbb
xchg
out
mov
in
rorb
popf
aam
shl
test
sbb
xor
fidivl
pop
mov
push
mov
lods
cmpsb
dec
cmp
and
add
movsl
cli
arpl
push
push
pop
dec
movsb
vminps
push
cltd
push
int
shlb
in
rorb
ror
ret
enter
xchg
rcll
outsb
clc
movsb
fcomps
movsb
fimull
addr16
dec
js
jle
bound
sarl
in
add
dec
test
ror
jno
xchg
aam
fnstcw
imul
popf
mov
dec
or
out
rorb
mov
or
cmp
xchg
push
loope
or
outsb
sbb
pop
fimuls
mov
sahf
movq
inc
lods
call
or
mov
adc
fwait
sub
movsb
mov
lds
mov
mov
std
and
ffreep
pop
inc
fcompl
into
insl
push
andb
cs
gs
sbb
in
dec
mov
fstl
jge
clc
shrl
xlat
mov
adc
mov
call
in
cmpsb
ret
int3
mov
aam
add
jno
mov
mov
adcl
and
int3
dec
push
gs
sub
int3
les
push
sbb
mov
or
or
jecxz
dec
push
pop
sbb
xor
loopne
pushf
js
gs
into
jne
shl
mov
mov
je
movsl
cmp
sbb
lods
mov
sub
enter
or
int3
inc
jne,pn
movsb
add
popf
cmp
sbb
jnp
mov
in
mov
int
mov
popf
lods
xor
ret
int
fcom
cmp
xchg
jae,pt
clc
or
call
test
leave
pop
loopne
shlb
adc
cltd
stc
mov
cmp
imul
int3
inc
sub
mov
addr16
movsl
mov
pop
lods
or
into
jne
mov
icebp
rcl
fstps
jno
add
sub
leave
jae
cmpb
in
xchg
mov
mov
mov
push
in
idiv
out
cltd
bswap
call
stc
pop
sub
xor
lcall
push
adc
mov
mov
mov
xchg
lods
push
mov
rolb
cmpsl
pop
xchg
loope
jle
pushf
pop
cmp
mov
jbe
xor
lcall
imul
fsub
mov
insw
mov
pop
pushf
xor
enter
test
mov
fs
lock
dec
sbb
loope
cmp
sti
add
aaa
adc
icebp
enter
sbb
mov
sbb
movsb
insl
movsl
cld
mov
push
sarb
int
inc
insl
into
adc
cmp
mov
imul
mov
push
in
popf
or
movsl
xor
and
mov
cmp
jo
rcll
ret
notb
loopne
jmp
jle
int3
or
sub
sbb
loopne
mov
lret
jge
sub
in
sub
mov
and
mov
adc
sub
xchg
test
sbb
cmp
into
in
icebp
inc
jbe
or
mov
sahf
movsb
add
lds
out
and
loopne
push
push
sub
shl
jno
rcll
pop
xchg
out
out
imul
aam
insl
sbb
test
sub
xchg
push
sbb
pop
jmp
push
cli
and
aad
xchg
shll
sub
call
or
rcll
mov
pop
mov
in
insl
xchg
repz
aam
jmp
jns
aam
gs
outsl
out
jge
xor
in
mov
daa
popa
in
or
jle
scas
mov
pop
xchg
int3
push
pusha
popa
repnz
into
gs
jmp
push
jmp
adc
cmc
adc
add
stc
cmp
frstor
sbb
lret
mov
lds
adc
in
mov
and
adc
call
stos
cmp
int
aam
mov
sub
xor
mov
xchg
mov
cltd
sbbl
dec
inc
or
sbb
rolb
cmp
push
pop
cmp
jle
pushf
les
imul
aam
xor
sub
test
lods
push
test
fmul
hlt
push
mov
lods
jle
lret
sbb
push
shll
cs
mov
mov
scas
shrb
ja
adc
popa
mov
in
push
mov
mov
dec
lock
xchg
dec
leave
or
jmp
mov
lcallw
mov
xor
sub
ficomps
add
mov
enter
sbb
pop
call
movsb
pusha
push
add
xchg
mov
mov
jl
dec
icebp
mov
call
and
mov
mov
test
push
mov
dec
shrl
iret
cmpsl
jle
aaa
aaa
mov
fmuls
sbb
pop
inc
xchg
push
xchg
sub
in
cmc
stos
fsub
adc
pop
push
enter
out
xor
sbb
in
xchg
lret
pop
fists
ficoml
icebp
pop
pusha
cs
push
dec
movsl
xchg
dec
pop
xchg
popa
cmp
mov
jle
cmp
cld
mov
movsl
inc
and
pop
subb
adc
lds
rcr
and
pop
outsb
inc
push
lds
sti
pop
fsts
xchg
xor
and
int3
xchg
pop
cmp
outsl
fstps
loopne
leave
xchg
pop
sub
popf
xor
mov
insl
lock
push
mov
test
loopne
ficomps
adc
push
fcomp
dec
loopne
mov
or
and
mov
subb
push
js
sub
inc
cltd
mov
ljmp
sbb
fsubrs
pop
inc
in
jg
mov
mov
pop
negl
mov
or
sub
iret
popa
stos
in
cmpsl
jle
roll
push
push
mov
mov
add
out
lods
stc
xor
push
jle
jle
push
adc
cltd
addr16
push
popf
sub
es
sub
ja
xlat
shl
int3
and
addr16
xlat
inc
repnz
sub
xor
arpl
sbb
fyl2x
int
jge
test
fidivrs
out
sbb
xchg
in
out
lods
sahf
popa
pop
movsl
call
mov
sbb
pop
in
add
mov
mov
rcl
xor
outsl
in
fwait
inc
xchg
jb
das
fsubr
cmp
push
mov
stos
jae
push
gs
addr16
jbe
inc
xlat
dec
in
inc
mov
and
jge
js
sarb
lds
icebp
cmc
xchg
push
fsub
cmp
inc
mov
jne
sub
xchg
int3
loope
sub
jne
push
loopne
clc
rcrb
xchg
sbb
sbb
or
popf
jbe
cmp
xor
mov
jne
dec
mov
pop
test
popf
pop
inc
and
movsl
div
push
stc
xor
mov
out
dec
pop
sar
jecxz
fdivl
lcall
in
cmp
or
call
and
sahf
cmc
dec
inc
sbb
pop
call
cmp
or
arpl
push
mov
adc
adc
mov
jle
in
loopne
fdivrl
in
mov
shrl
jle
addr16
mov
in
roll
mov
jle
mov
mov
fsubrs
sub
jmp
pop
scas
jge
mov
sub
ret
xchg
mov
jb
fs
xor
jg
popf
jge
loope
fildl
dec
mov
sbb
pop
popf
nop
jle
mov
cmp
sbb
inc
push
in
std
test
jmp
adc
xor
jbe
dec
push
or
xor
inc
jle
mov
dec
push
cld
fcompl
mov
jle
movl
repnz
jle
popa
sub
push
xchg
and
in
mov
or
cmp
popf
icebp
pop
loope
xor
fneni(8087
add
out
in
mov
lahf
call
or
jno
insb
jmp
adc
adcl
aam
clc
fnstcw
push
arpl
push
sti
push
fmull
cltd
rcrl
inc
xchg
inc
popa
and
sbb
fcmovnbe
sub
nop
pop
push
test
orb
mov
jnp
pop
and
aam
loopne
sbb
sbb
fmull
pop
dec
aam
fucom
and
or
mov
and
leave
mov
movsl
loope
imul
xchg
int3
add
imul
decb
xor
loopne
xchg
scas
cmp
jmp
cmp
ds
jle
in
jge
data16
or
icebp
xchg
scas
lods
cmp
inc
popf
cmp
ljmp
mov
pop
mov
dec
cmp
outsl
int3
mov
or
cmpb
int
in
movsl
sub
adc
mov
sbb
xchg
jmp
pop
movsb
sub
cmp
cld
push
pop
insl
push
add
int3
cmc
aam
pop
sbb
test
adc
icebp
mov
rcll
lods
dec
push
out
lods
xor
cmpsb
adc
cltd
sbb
jle
cmc
fmul
movsl
sbb
push
jmp
jno
fs
add
or
sbb
fcompl
mov
sbb
add
gs
lods
shr
mov
inc
cmp
iret
and
jl
jno
xorb
push
push
daa
insb
dec
orb
pushf
mov
jno
movsl
test
out
lods
add
sbb
sub
jmp
mov
rol
fdivrl
fnstsw
dec
and
mov
popf
mov
mov
or
adc
mov
in
cmp
fdivs
pop
cmp
fwait
dec
loope
pop
enter
loop
sub
or
bound
ret
sbb
rcr
les
cltd
insl
movsl
aam
bound
add
mov
mov
rcl
mov
mov
mov
jno
or
roll
leave
popf
popa
jno
cmp
in
lds
xchg
push
xchg
loope
sarb
loopne
in
and
mov
cmpsb
add
lods
sbb
fstl
push
inc
movq
mov
sub
int
mov
cmp
into
mov
mov
test
lds
mov
das
fwait
jns
sarb
test
push
add
adc
insl
loope
stc
pop
inc
sbb
repz
and
pop
call
dec
mov
cmc
int
aad
das
insl
sub
push
add
xor
mov
sbb
fstpl
in
push
sub
int3
dec
js
xchg
cmp
aas
rcl
test
jno
cmp
sub
inc
stos
jmp
insl
dec
sub
jno
shl
sub
mov
cld
cltd
adcb
sarl
xchg
int3
rcrb
pop
fnsave
mov
or
mov
adc
sbb
movsl
call
insb
nop
jno
jle
fdivrs
pop
mov
pop
xor
pop
sub
sbb
call
xor
dec
insl
vmovshdup
and
jg
call
in
sbb
sti
loope
jae
jbe
stos
or
jne
repz
insl
lods
pop
or
push
loopne
push
pop
roll
jno
cmp
in
test
cmp
lock
xor
adc
cmp
iret
or
xor
mov
into
mov
out
aad
dec
testl
fxch
fwait
nop
or
movsl
pop
and
jns
scas
test
dec
dec
into
stc
sub
rclb
in
mov
test
aad
pop
xor
test
dec
xor
and
inc
rcrl
push
aad
mov
mov
rcl
ds
cld
loope
mov
sub
sub
dec
ja
loop
jp
cmp
imul
add
test
scas
mov
dec
out
or
jne
int3
xchg
mov
inc
outsb
test
cmp
xor
sbb
jecxz
and
imul
pop
out
inc
mov
bound
cmp
mov
push
lahf
xchg
fcompl
aaa
mov
inc
fyl2x
mov
andb
int
aam
mov
icebp
repnz
cmp
aad
sub
fcoml
xor
jmp
xor
push
mov
fdivs
int
sub
iret
jg
push
xchg
sbb
scas
adc
mov
pop
adc
push
insl
xchg
xchg
call
mov
xchg
pop
mov
enter
jl
int
gs
mov
pop
in
xchg
icebp
mov
push
dec
or
outsb
dec
xor
push
adc
jge
jl
or
adc
out
add
mov
aad
imul
mov
out
aam
aad
lea
mov
mov
push
jp
xchg
mov
out
sbb
cmp
loope
inc
xchg
vandnps
cmp
sub
xchg
subl
scas
leave
mov
mov
mov
shlb
fdivl
iret
mov
sbb
addr16
int3
sub
xor
movsb
adc
lret
adc
adc
xchg
test
divb
mov
stc
add
mov
dec
mov
cmp
mov
shrl
adc
int
pop
call
lea
sub
cltd
fs
xor
adc
popf
rclb
dec
adc
ret
int
pushf
shll
sub
je
xor
sbb
rcll
movsl
xchg
sub
cmpsl
loope
aad
sub
fcompl
in
push
adc
imul
loope
and
pop
sbb
xchg
shlb
and
xor
orl
push
adc
and
jecxz
pop
scas
jl
lods
subl
cmp
pop
cmp
push
mov
xor
lds
sub
xchg
mov
in
mov
fstpl
lock
sub
cmp
lods
leave
shll
loopne
popf
icebp
sbb
adc
and
pop
in
adc
adc
int3
cmp
lock
pop
mov
mov
pop
movsl
push
mov
cmc
sub
shr
cmp
inc
fxch
pop
dec
gs
dec
push
in
cmp
popf
inc
rcrl
xchg
inc
jl
pop
or
scas
pop
fcomp
jl
icebp
push
cli
push
notb
and
mov
xchg
jle
push
fs
loopne
out
jl
and
aad
xorl
ss
enter
cmc
rclb
into
movsb
andl
cwtl
movsb
insl
mov
enter
dec
ljmp
mov
movsl
jge
xor
fsubrl
xor
sarb
xchg
nop
fsubl
ja
dec
dec
fdivp
shrl
add
into
lock
ljmp
adc
test
enter
in
out
les
jmp
and
movsl
pop
xchg
xchg
jne
stc
aad
in
in
in
pop
in
dec
dec
dec
call
sbb
pop
or
frstor
jge
adc
mov
add
fs
sbb
insl
movaps
inc
in
inc
lret
xchg
aam
iret
pop
pop
and
push
es
and
mov
loop
pop
xor
mov
rorb
pop
test
test
adc
out
pop
test
push
lock
adc
ret
sub
int3
cmpl
dec
adc
dec
xor
in
outsl
fcoml
jmp
aam
mov
and
xchg
jmp
mov
fisttpll
mov
icebp
sub
aas
cmp
and
in
xchg
dec
faddl
lods
mov
lock
jo
and
ret
xor
leave
jmp
outsb
cmp
jne
jno
out
fdiv
idiv
mov
popf
xor
dec
pop
outsb
jge
in
xchg
push
push
les
hlt
int
out
mov
and
dec
xchg
xchg
jne
cmp
or
icebp
mov
and
jbe
pop
dec
add
fsubl
insb
into
enter
lcall
push
rcrb
push
lock
pop
lods
add
loop
mov
addr16
or
sbb
mov
add
pop
mov
icebp
in
out
outsb
jge
jo
lods
cmc
test
mov
inc
xchg
hlt
sub
adc
xor
cmp
shrl
sbb
cltd
adc
movsl
addb
xchg
lock
or
cmp
inc
and
leave
insl
push
inc
enter
mov
push
call
mov
mov
in
adc
and
mov
and
shll
aam
imul
test
mov
and
jo
rcll
cmp
fcoms
or
fbld
sbb
movsl
and
mov
and
add
ret
fcom
sub
pop
lock
call
fwait
and
lods
fcompl
and
ds
aad
mov
outsb
js
adc
dec
or
int3
adc
fstp
into
shlb
jmp
aaa
lods
test
int3
push
cmc
xchg
call
push
in
cmpsl
adc
test
inc
fadd
jne
cltd
push
leave
sbb
push
gs
pop
push
and
cli
cmp
adc
xor
mov
fldcw
push
ret
and
xor
xchg
jge
aaa
imul
fstl
xchg
lds
mov
psadbw
cmc
dec
dec
shl
imul
push
mov
paddsw
icebp
jmp
sahf
int3
loope
out
xor
sub
cmp
or
fldcw
mov
loope
into
rolb
rcrb
int
mov
shll
in
and
xor
pushf
or
mov
push
cmp
sbb
lds
fcompl
mov
mov
inc
sbb
gs
xchg
add
adc
cld
outsb
lea
pop
imul
xor
or
xchg
jle
dec
ss
testl
dec
sbb
mov
fstps
repnz
mov
in
jl
cmpsb
mov
xchg
icebp
cltd
inc
movsl
xchg
insl
xor
int3
iret
in
bound
add
aam
ror
pop
cmp
mov
cmp
and
sub
dec
andl
insl
mov
leave
adc
in
dec
xor
test
negb
in
xor
in
jne
loop
aaa
shld
lods
pop
les
call
sbb
cmp
jmp
aam
in
imul
gs
jmp
and
mov
repnz
in
sbb
aam
sbb
sbb
push
enter
cli
into
dec
decb
shlb
cmp
sarb
enter
adc
call
and
and
outsb
push
loope
enter
ret
leave
pop
idivl
sbb
and
fs
dec
push
pop
fsubr
xorb
test
lock
pop
out
mov
adc
and
sub
out
xor
addr16
push
push
sbb
scas
gs
dec
dec
and
into
sbb
sub
clc
fstpl
sub
xchg
fcompl
mov
fstpl
push
inc
jecxz
lea
push
in
insl
outsl
xor
rorb
mov
xchg
loopne
push
dec
out
scas
pop
les
push
sbb
sub
xchg
js
pop
imul
out
mov
shrb
pop
dec
inc
xchg
xchg
sbb
mov
mov
dec
sbb
in
mov
mov
mov
mov
add
sbb
push
add
sub
hlt
movsb
test
mov
in
rcll
call
sbb
lods
xor
mov
sub
jno
mov
mov
xor
mov
in
mov
in
in
aad
decb
jmp
dec
mov
xchg
lods
lea
adc
sub
sbb
pop
rorb
bound
jl
loope
mov
addr16
sbb
cltd
icebp
dec
movsb
pop
push
push
lock
jl
jns
js,pt
sbb
xlat
sub
fidivrs
adc
lods
jno
cs
cs
and
jmp
xchg
fdivs
in
and
jne
pop
push
pop
in
mov
xchg
xor
call
push
mov
ss
sub
mov
incl
and
cmpsl
jmp
cmp
in
lock
into
mov
test
push
bound
or
fldt
and
mov
sbb
int3
leave
xor
sub
and
mov
dec
jle
int
jmp
scas
cmc
push
mov
mov
inc
push
cmp
pop
icebp
out
gs
sub
or
movsl
popa
aas
loope
xchg
pop
inc
fwait
xchg
movsl
inc
sub
xorw
bound
dec
push
pop
fldenv
dec
pop
fnstsw
sarl
jne
sub
mov
loope
mov
repnz
cmp
add
xchg
xor
int
imul
sbb
icebp
call
ror
adc
fildll
adc
and
or
daa
dec
dec
je
push
notl
jnp
int
gs
call
xor
mov
pop
adc
or
ljmp
gs
cmp
jle
jno
mov
test
add
xchg
xchg
pop
push
shrb
xchg
lock
shl
sbb
mov
test
push
or
fdivs
repnz
or
fcompl
cmp
aaa
adc
xchg
aaa
mov
mov
fstl
int3
call
insl
jno
xor
sbb
imul
push
xchg
cltd
jne
or
sahf
mov
pop
pop
fstl
ret
jne
mov
push
aam
rcll
sbb
xor
fcompl
pop
shr
dec
dec
cmc
int3
in
popa
dec
popf
fs
mov
xchg
shrb
jno
icebp
lahf
popa
xchg
mov
fwait
xchg
lods
dec
cltd
mov
leave
mov
cltd
sbb
xchg
addr16
icebp
sbb
int
mov
loopne
in
push
jecxz
or
jle
jg
sbb
inc
sub
mov
rcl
mov
xchg
jp
shrl
mov
sbb
in
ret
pop
mov
push
test
repnz
in
popf
mov
jne
adc
scas
insl
in
cmp
xchg
iret
xor
aam
scas
enter
fs
loope
lock
cmp
adc
push
fnstcw
addl
pop
and
outsb
repz
mov
into
pop
in
inc
insl
inc
adc
jno
popa
aad
outsl
test
push
dec
sbb
loope
inc
shll
sbb
popf
or
mov
insl
pop
mov
gs
fwait
insl
bnd
int
mov
push
int
fnstenv
mov
cmp
xor
sti
dec
jno
mov
lods
push
popf
sub
rcl
mov
cmc
mov
xchg
mov
aam
setle
int
lock
fstps
mov
nop
insl
pop
lock
pop
or
call
testl
popa
jno
test
jne
mov
dec
in
xor
sub
sarb
in
xchg
pushf
and
and
into
int
call
fs
in
xor
setae
lea
int
rcrl
adc
dec
lea
adc
test
mov
and
push
and
sbb
int
cmp
sbb
add
loope
aam
add
in
jl
jne
addb
xor
push
fistps
rcll
mov
mov
lds
js
dec
jne
leave
imul
sahf
push
fxch
aad
in
dec
std
push
lock
fsubrs
pop
gs
outsb
loop
fnstcw
mov
xor
loopne
jmp
xchg
xchg
xchg
aam
fucomip
cmp
fldcw
jno
pop
lds
shlb
enter
fwait
push
and
fsub
jno
dec
mov
mov
adc
cmp
call
aad
leave
sbb
or
add
dec
enter
jne
dec
out
jge
cmpb
call
lods
push
into
pop
pushf
sub
dec
sahf
xchg
fldt
cmp
rorl
dec
mov
in
leave
pop
pop
enter
or
out
pop
sub
cld
push
add
sbb
xchg
jmp
sub
push
je
mov
call
mov
xor
nop
mov
sub
pop
fadds
leave
mov
adc
imul
xchg
int3
es
dec
jle
in
fdivs
and
and
inc
xchg
or
and
enter
pop
and
push
out
xchg
dec
xor
cmc
in
addr16
or
mov
add
add
rcl
cltd
insl
lret
frstor
push
jle
push
fcmovnb
pop
jl
in
ljmp
mov
pop
xchg
or
inc
popa
add
xor
les
mov
sbb
in
test
fnstcw
adc
mulb
ret
mov
xor
mov
fs
sub
pop
xchg
xchg
adc
scas
fucomp
lods
and
mov
sbb
dec
roll
push
test
rcrb
sub
xchg
out
dec
adcl
mov
inc
enter
mov
adc
adc
or
fistpll
movsb
inc
hlt
enter
push
cmp
mov
shr
mul
adc
popf
mov
in
dec
gs
sub
xor
mov
int3
pop
mov
sub
ljmp
popa
in
pop
lods
leave
sti
adc
jne
shlb
outsl
ss
shrb
lods
mov
xchg
inc
shll
cmp
cmc
mov
into
loopne
adcl
mov
in
mov
mov
adc
and
xchg
mov
jl
loopne
aad
cmp
test
mov
jg
or
aam
insl
dec
and
xchg
aaa
arpl
aam
int3
rol
adc
in
xlat
insl
lock
and
pop
leave
xchg
aad
sbb
mov
inc
lcall
andb
je
dec
aaa
fsts
stos
loope
cmp
mov
fnstcw
dec
mov
lods
loopne
test
fisttpll
cltd
sbb
xchg
das
aad
or
xor
push
shrb
enter
xorl
jge
movsb
lret
adc
pop
sbb
gs
sub
jb
inc
icebp
in
jecxz
adc
inc
sub
dec
xor
rcr
movsl
cmp
fcoml
mov
test
adcb
mov
in
sub
xor
mov
push
lds
int
popa
into
ja
int3
fdivl
fs
cmp
xchg
insl
cmp
jg
xor
imul
xchg
mov
inc
add
test
cmp
in
jge
jle
inc
pop
cmp
cmp
fsubl
ja
in
sti
or
mov
psubusw
loope
mov
rolb
xor
push
shll
mov
mov
mov
inc
divb
sbb
cmp
fcompl
std
sbb
in
aad
xchg
cmp
aam
shrl
dec
enter
inc
dec
repz
mov
adc
mov
add
movsl
sbb
cmp
adc
ja
and
rcl
adc
hlt
or
lahf
xor
adcb
lods
inc
jne
sbb
push
xor
shlb
dec
dec
leave
aam
push
jmp
dec
pop
push
push
test
inc
fisttpll
out
aam
ret
fcompl
inc
jne
ja
mov
int
loope
rol
inc
xchg
in
push
adc
push
shll
adc
int3
fcomps
lods
adc
in
sbb
jge
jnp
mov
outsb
loope
add
and
mov
fisttpll
test
push
inc
loopne
sbb
int3
insl
lret
incb
adc
push
xor
mov
or
icebp
loopne
dec
jle
cmc
inc
mov
jae
scas
cmp
subl
pop
aas
sub
loopne
adc
push
jecxz
add
xor
cmpsb
or
loope
cmc
xchg
xor
dec
out
bound
push
dec
insb
ljmp
int3
push
es
push
lret
xchg
call
and
fcoms
cmc
aaa
xor
xchg
in
mov
mov
int
push
sbb
mov
or
adcl
push
out
sbb
gs
dec
lret
dec
lds
pop
jne
sahf
add
mulb
cmp
push
mov
mov
push
sbb
jae
sar
cs
push
dec
jno
out
mov
and
mov
test
jmp
push
scas
xor
in
rcl
inc
fstpt
lret
repz
aad
int
mov
shlb
out
xor
sub
jmp
push
sub
xlat
cmp
in
icebp
mov
xchg
push
hlt
hlt
scas
int3
loop
es
inc
dec
in
movsl
clc
dec
sub
jmp
lock
inc
rol
pop
sub
xchg
int3
pop
fstl
insl
aad
sbb
gs
inc
dec
mov
xlat
or
in
in
sub
jne
popa
enter
xchg
in
rorb
mov
inc
sbb
sub
shlb
aam
add
gs
rcrl
insb
push
in
mov
div
test
mov
inc
mov
movsl
popa
cmp
dec
jne
cmp
in
mov
insl
in
es
pop
jne
xchg
fsub
shll
mov
arpl
stos
and
insl
adc
sub
lea
and
mov
call
fnstsw
out
shll
popf
leave
mov
rcr
cmpsl
jmp
mov
lret
cmp
xchg
inc
shl
and
cmc
sub
mov
adc
sti
in
popf
mov
jge
sub
movsb
fsubl
out
repz
int3
js
out
sbb
mov
adc
mov
movsb
push
mov
aas
push
das
push
arpl
inc
mov
push
inc
mov
int
or
popf
dec
fistpll
cmp
call
xchg
xchg
xor
shl
or
stos
push
mov
rclb
inc
int
cmpsb
movsl
sbb
lods
and
adc
jle
int3
xor
push
aam
popa
add
cltd
in
sarl
icebp
call
fsubs
mov
loopne
in
pop
and
pop
push
or
fstl
imul
in
xlat
pop
adc
sub
gs
shlb
fdivrs
jae
int3
pushf
pop
push
int3
xorb
sub
adc
dec
dec
test
ror
cmp
pop
enter
popf
lret
mov
mov
mov
call
insl
jl
popf
std
pop
addr16
movsl
sbb
cmp
pop
adc
xor
sbb
adc
test
lcall
mov
mov
jp
mov
mov
pop
pop
xchg
sbb
mov
cld
and
xor
pushl
xchg
adc
push
jmp
inc
xor
jne
xor
cmp
cli
lds
pop
test
fidivrl
gs
lods
adc
cmp
add
xor
les
sbb
inc
sub
mov
jmp
in
fcmovu
jno
and
mov
in
int3
dec
movsl
repnz
frstor
call
pushf
sbb
and
fwait
nop
fstpt
xchg
movsb
lock
mov
in
xchg
pop
cmp
mov
sbb
push
adc
dec
into
add
jle
jecxz
mov
jb
xchg
dec
sbb
mov
mov
mov
addr16
or
icebp
pop
fdivrl
in
pop
xchg
cmc
mov
xor
fld1
xor
and
pop
shll
fdivrl
mov
dec
mov
jno
sub
aam
cmp
and
xchg
xor
rcll
and
out
ret
cld
enter
sbb
stc
inc
imulb
cmc
mov
fldl
adc
lock
in
adc
lods
cltd
cmp
inc
call
in
enter
movsl
jge
sahf
aam
xchg
adc
cmp
xchg
insl
popa
push
mov
mov
inc
sub
cmc
aaa
imul
call
dec
or
xchg
out
aam
outsb
in
cltd
fwait
lds
xchg
enter
in
sub
adc
lea
in
push
cltd
rolb
stos
push
aam
inc
mov
mov
jmp
sarl
adc
mov
jge
cmc
std
sub
testl
cmp
ror
in
lock
cmc
xor
rcrl
mov
push
test
add
out
dec
sbb
imul
addr16
inc
xor
insl
test
push
popf
fdivl
push
xchg
add
movsl
dec
xor
mov
in
add
cld
or
aad
jne
lods
orb
shl
and
mov
in
fldenv
sub
mov
lahf
orl
fcomps
lock
jg
cmp
mov
jne
adc
rcl
les
fdivl
xchg
int
dec
test
jne
sbb
cltd
inc
call
in
pop
adc
insl
adc
js
mov
sub
dec
cmpsl
push
push
in
mov
pushf
mov
aam
push
mov
push
sbb
dec
mov
lock
mov
inc
add
fwait
or
mov
and
push
inc
sub
lret
lods
pop
and
mov
loope
dec
in
fld
push
adc
xor
xor
push
mov
sbb
jle
sub
in
in
mov
cltd
jb
cmc
cmove
or
into
movsb
int3
mov
popa
pop
repnz
aad
or
sarl
fisubs
lret
and
insl
imul
sub
jne
adc
lcall
out
sbb
ret
cmp
mov
in
mov
aam
rcl
sbb
insl
lock
xchg
dec
ss
popa
dec
mov
pushf
aam
mov
mov
out
and
adc
dec
xchg
fdiv
gs
add
mov
neg
jmp
aam
sbb
sub
loope
pop
dec
int
sbb
mov
inc
mov
call
dec
sub
aaa
adc
adc
leave
xchg
gs
xor
dec
mov
pop
outsb
mov
pop
mov
mov
shlb
aam
sbb
pop
sbb
mov
test
pop
adc
sub
push
mov
pop
jno
test
mov
hlt
add
xor
clc
add
sbb
in
xor
mov
lock
imul
adc
int
push
xlat
sub
loope
fsubl
loopne
add
xor
gs
rolb
cmp
fildll
popa
sbbb
add
mov
nop
adc
xchg
js
pop
dec
cltd
out
push
mov
out
in
sub
lods
pop
inc
and
fsubl
xor
gs
fsubs
lret
adc
loopne
in
xchg
lret
pop
fs
in
adc
int
fcomps
xchg
cld
push
int3
adc
in
mov
and
fidivrl
fidivrs
test
sub
jno
cwtl
in
int
lds
xchg
insl
inc
sbb
test
xor
sbb
inc
lret
in
int
mov
ret
orl
cld
push
int3
pop
out
int3
mov
jne
call
adc
sti
in
xor
mov
sbb
xchg
cmc
sub
sbb
in
mov
enter
sbb
push
in
push
js
aam
or
pop
pop
pop
js
or
cmp
movsl
xor
add
or
in
flds
mov
sub
sbb
mov
repz
cmp
sub
push
fucomi
hlt
jmp
inc
or
jge
jne
std
inc
adc
sahf
sub
fs
arpl
in
sbb
ja
insl
leave
enter
lds
repz
fcoms
scas
imul
lahf
ja
sub
adc
or
in
mov
fmul
int3
jnp
outsb
mov
insl
mov
lds
sub
popa
pop
pop
sub
into
loopne
mov
adc
push
dec
push
rcl
lds
adc
push
lret
mov
xchg
or
loop
mov
and
sub
xchg
sarl
mov
lock
jno
out
in
insl
mov
call
adc
adc
repz
test
inc
push
and
int3
lods
push
imul
fld1
pop
pop
inc
mov
insl
xchg
movsl
and
loope
jnp
scas
jno
mov
loopne
push
lcall
or
mov
ss
jle
idiv
push
xchg
jp
imul
bound
fstpl
dec
jmp
jbe
cmpsb
lock
int
enter
push
jnp
lds
mov
in
add
test
aam
in
xchg
daa
out
lds
pop
push
mov
cld
mov
mov
jne
enter
aad
adc
mul
cmp
lds
rorl
adc
pop
ljmp
jo
jle
mov
leave
fadd
and
mov
lds
sub
iret
in
imul
or
sub
cmp
xorl
push
fsubr
pop
fadds
pop
or
sbb
xor
dec
jle
pop
test
lods
int
movsl
sar
fnsave
fchs
sbb
and
movsl
fsubrl
fldcw
xchg
call
pusha
mov
mov
jae
add
in
xchg
mov
cmpsl
sbb
aam
in
or
sub
iret
xor
jne
and
xorl
cli
push
scas
xor
and
cmc
cltd
xchg
leave
cmovne
sub
fldln2
sarl
sbb
lods
mov
int
mov
push
sahf
popf
lods
popa
int3
jo,pn
insl
jmp
icebp
xchg
cmp
push
cltd
and
jno
arpl
fadds
dec
pop
call
fists
xchg
cltd
and
sbb
xchg
shlb
aad
popf
aaa
inc
lock
aad
test
loope
or
shrb
pop
xor
in
icebp
fs
repnz
mov
jge
pop
adc
jne
push
push
push
cmp
sub
outsb
add
in
xchg
in
jle
pop
sub
and
test
fcoms
cwtl
and
dec
fcoml
jmp
xchg
loopne
mov
call
mov
cltd
dec
sbb
xchg
inc
mov
fxam
movsb
dec
add
aam
lods
loopne
mov
add
jle
sbb
cmp
pop
pop
sbb
cltd
jecxz
loope
xchg
or
icebp
fcoml
loope
cmp
mov
push
frstor
xor
mov
adc
in
rol
and
xorb
imul
jecxz
mov
mov
mov
cmp
adc
testl
in
es
sbb
mov
adc
mov
sahf
icebp
enter
fucomp
fs
or
inc
aaa
fnstenv
int3
mov
push
add
sbb
mov
sbb
roll
sub
dec
insl
push
addr16
jnp
test
call
fwait
xor
xlat
popa
out
dec
daa
mov
insl
mov
xchg
and
imul
pop
mov
inc
int
in
cltd
or
int
inc
dec
pop
push
fdivs
cltd
insb
shlb
out
sbb
sbb
decb
insl
lods
adc
cmp
popa
aad
movsb
call
adc
sub
xor
sbb
or
sbb
dec
push
into
and
push
sbb
jne
or
cmc
enter
mul
and
dec
push
dec
sub
xor
movsb
movsl
sub
adc
dec
inc
xor
add
mov
fdivs
leave
movsl
aam
sarl
dec
dec
cmp
xor
xor
sbb
sub
mov
push
ffree
push
xchg
cwtl
jne
mov
and
cmp
dec
lcall
cmp
int3
aam
sbb
outsb
ljmp
fstps
cmpsl
mov
dec
cmp
leave
mov
pop
popa
pop
fs
addr16
nop
imul
lea
cmp
pop
in
stos
pop
adc
cmp
push
jmp
and
push
jns
push
inc
mov
adc
mov
pop
mov
inc
insl
push
enter
and
in
int3
pop
and
aam
jge
out
and
dec
mov
sub
in
xchg
dec
push
mov
dec
pushf
in
xor
call
int
cmp
scas
push
cld
leave
jge
pop
aad
out
cmp
fyl2x
insl
rcrl
mov
pop
push
sub
les
jno
sti
mov
adc
mov
adc
insl
jecxz
or
or
nop
push
in
test
fdivrs
sub
push
inc
sbb
outsl
cmp
adc
lock
clc
mov
fwait
int
in
stc
aad
cmp
xor
or
mov
lea
icebp
inc
dec
sbb
pusha
sub
dec
push
xchg
enter
in
out
test
or
xor
movsb
pop
xor
repnz
jmp
scas
cmp
mov
cmp
cmp
mov
sub
fld
sub
icebp
xor
and
inc
mov
push
adc
lea
cmp
push
push
mov
dec
shrl
mov
push
add
xor
shll
and
in
scas
cmp
popa
shll
in
cmp
sub
into
dec
and
insl
xchg
ret
fmull
cltd
cld
push
aad
lods
cmp
cltd
int3
push
dec
adc
stos
scas
xor
fstl
cltd
fldln2
xchg
or
xor
pop
adc
xchg
xor
rcr
mov
and
push
out
in
shrb
out
cmp
in
lahf
scas
cs
adc
les
iret
test
pop
lds
fcomps
xorl
fnsave
jnp
push
sub
add
cmp
jno
insl
in
dec
scas
dec
adc
jle
enter
mov
push
mov
icebp
sub
cmp
rcll
mov
leave
test
imul
jp
push
ss
mov
ja
icebp
in
or
mov
xor
notl
in
jle
adc
lods
movsb
dec
leave
and
in
push
enter
hlt
fstl
sub
lds
mov
xor
lcall
mov
aas
sarb
jg
mov
test
imul
xchg
mov
imulb
cmp
in
sbb
and
adc
icebp
pop
cmp
jne
popa
fmul
mov
and
ljmp
adc
cmpps
int3
movsl
mov
xchg
mov
push
addr16
xor
adc
aaa
xchg
cltd
push
and
fmull
cmp
sub
add
cld
int
out
or
xor
loopne
jno
mov
cmc
xchg
test
dec
adc
sahf
adc
xor
sub
and
enter
sub
lea
pop
sbb
and
adc
jae
push
push
int3
mov
test
int3
cmp
mov
clc
std
insl
lods
mov
call
fcomps
int
pop
popa
mov
icebp
mov
dec
jne
out
bound
pop
cmp
cmp
mov
jmp
bound
fwait
hlt
iret
dec
icebp
cmp
gs
adc
mov
cmp
inc
loope
xor
int3
outsb
and
leave
mov
lods
add
movsl
shll
fs
inc
sbb
test
pop
leave
push
and
lods
push
cmp
sub
mov
mov
push
nop
test
insl
sub
jo
sbb
shl
leave
pop
fs
or
xchg
jne
jbe
dec
fdivrs
pop
fisttpll
or
sbb
imul
dec
movsl
out
jmp
sub
mov
xor
or
mov
in
inc
ret
and
jne
mov
dec
pushl
mov
addr16
lods
and
movsl
jne
mov
ljmp
cmp
movl
loope
stos
adc
rcll
xchg
loopne
rcr
mov
mov
sbb
rclb
pop
fmul
lds
loopne
fcoms
in
adc
xchg
sub
sub
repnz
pop
jge
test
sbb
addr16
lds
call
dec
cmc
arpl
fwait
shl
sub
daa
repz
xchg
out
fst
cmp
ljmp
mov
aam
popf
lds
sbb
add
jne
adc
in
in
sbb
das
int
adc
sti
fsts
dec
gs
insl
sub
mov
push
xchg
aad
push
fcoml
out
in
mov
mov
jne
js
repnz
push
xchg
sbb
shll
add
fabs
int3
dec
insl
popf
test
cmp
dec
subb
loope
dec
xor
in
xchg
or
lods
loope
mov
mov
repz
in
ror
xchg
xor
in
sub
insl
imul
call
fldl2t
enter
cmc
xchg
xchg
jae
mov
mov
fwait
mov
lock
mul
inc
into
xor
sub
lret
xchg
fcomp
jno
mov
insl
sbbl
fwait
add
shll
dec
in
jne
idivl
leave
daa
add
daa
jno
dec
or
mov
push
repz
aam
mov
loope
aad
and
loope
pop
int3
and
leave
sbb
test
sahf
inc
cmp
adc
pop
loopne
xlat
enter
call
cmpsb
inc
dec
outsl
dec
lock
clc
push
int3
xchg
cmp
adc
in
cltd
mov
in
xchg
push
xchg
cmp
and
gs
xchg
lea
fmull
xchg
fldenv
mov
sub
sbb
pop
in
inc
dec
sub
sub
dec
jge
inc
iret
cmp
in
pushf
push
fcoms
out
xor
and
cmp
and
aam
icebp
ja
int
int
or
xchg
sbb
xchg
sub
inc
in
pop
dec
out
add
add
jmp
divb
aam
sub
loopne
sbb
pop
or
sbb
push
sbb
scas
int3
xchg
adc
sbb
pushf
pop
pop
or
pop
imul
int3
lret
shlb
lds
in
movsb
jl
and
mov
and
lds
int
shrl
iret
jno
pop
cltd
enter
dec
popa
in
fmull
adc
lea
stc
pop
iret
mov
dec
test
loopne
rorl
int
rcrl
xor
dec
rorl
jge
dec
leave
sbb
cmp
and
mov
int3
mov
sub
inc
push
dec
testb
adc
loope
sub
mov
jmp
push
xchg
adc
adc
xchg
pop
lods
cli
xchg
mov
mov
dec
xor
and
out
cmpsb
mov
jo
xlat
test
fcoml
je
dec
out
imul
iret
xor
sbb
cmp
int3
in
adc
cmp
lods
lods
in
in
fldenv
cltd
loop
insl
adc
sbb
outsb
adc
and
in
push
lea
mov
lods
test
test
stos
movsb
vpaddsw
xchg
push
lock
mov
jg
icebp
dec
and
call
in
lahf
xchg
pop
sbb
icebp
cltd
cli
popf
into
dec
loope
cltd
popa
jmp
pop
add
sbbb
mov
jl
insl
mov
dec
in
icebp
mov
test
in
popa
push
or
push
jno
es
fcoml
mov
cmp
int3
inc
subl
das
call
cmp
pop
dec
lods
cmc
sbb
inc
lock
arpl
lea
lock
pop
adc
push
shlb
int
sub
mov
pop
add
adc
fcomps
sbb
bound
xchg
in
bound
push
fdivs
int3
call
sub
repnz
or
adc
sub
popf
insb
lock
cltd
cmp
sub
xor
in
jle
push
xchg
loope
mov
sbb
jle
add
shll
cmp
push
xor
es
insl
xor
popf
loope
or
aas
out
cmp
aad
out
jne
mov
orl
xor
push
dec
aam
lahf
mov
pop
idiv
pop
jle
std
jmp
cmp
movsb
mov
in
lock
sbb
lock
xor
movsl
jmp
movsb
lret
add
inc
push
pop
pop
jmp
lds
int
mov
inc
xchg
mov
xor
leave
jne
int3
pop
jno
and
fadd
xchg
mov
cmpsl
pop
sub
mov
enter
sub
fnstcw
in
outsb
jl
ret
repz
popf
repz
push
nop
sub
adc
loope
add
lods
mov
imul
and
cmpsl
push
sbb
or
iret
sbb
dec
mov
shr
lcall
loope
jne
iret
or
cmp
adc
in
loope
pop
or
adc
adc
cmp
int3
repz
mov
mov
pop
cli
pop
mov
adc
sbb
in
sub
out
movsl
adc
jno
out
cmp
pop
add
and
lret
icebp
aas
dec
xchg
in
xor
dec
jecxz
fstp
fmul
pusha
lods
nop
outsb
frstor
fdivl
push
jl
inc
xchg
pop
in
mov
mov
sbbb
stos
fwait
and
aad
sub
test
jp
fisubrs
sub
push
and
add
cmp
xchg
imul
pop
mov
stos
into
add
dec
jmp
xor
in
sbb
test
andb
leave
pop
lods
repnz
test
rorl
lret
popa
mov
sub
movsl
enter
mov
dec
adc
push
popa
gs
aam
mov
popf
pop
andl
sub
push
pop
aam
icebp
ficomps
cmpsl
stc
xor
dec
inc
push
in
mov
lock
out
lds
pop
cld
push
call
and
mov
cmp
xchg
rorl
gs
movsl
sub
jb
mov
int3
push
mov
int
mov
dec
imul
lods
dec
movsl
into
mov
cmp
imul
jno
xchg
and
pop
js
jle
lret
sbb
gs
fwait
dec
jnp
psubusb
movsl
lods
pop
lock
lcall
loop
int
data16
lods
and
xor
sub
in
pop
inc
xorb
xchg
xchg
lret
cltd
lods
lret
stc
dec
lods
push
xchg
mov
push
call
pop
loope
insl
fucom
push
push
xor
lret
push
xchg
xchg
xchg
jmp
jne
push
ret
fwait
movsb
cltd
shrl
sti
cmp
jge
and
xchg
xchg
xchg
or
cmp
dec
fnstcw
pop
in
adc
xor
je
fcompl
pushl
dec
sbb
fwait
loope
add
pop
in
jmp
xchg
shlb
in
mov
clc
dec
xchg
or
inc
loopne
imul
fwait
sarl
int
ffree
cmp
fdivrl
and
xorl
lds
rclb
sub
iret
mov
out
mov
jge
jbe
dec
adc
push
jno
lods
inc
stc
pop
dec
out
mov
xor
lock
mov
call
ljmp
loope
int3
sbb
lods
cmp
push
mov
dec
add
sub
xor
daa
inc
fdivrs
shl
add
sbb
imul
aam
test
sbb
enter
adc
aas
lock
jecxz
nop
adc
popf
lea
lock
mov
stos
int
lea
sbb
loopne
inc
mov
jne
popf
icebp
cli
in
xor
dec
and
and
test
in
sbb
leave
subl
loopne
pop
fsubr
cltd
je
into
sub
ret
xor
jno
or
ja
inc
sub
aas
stos
fcoms
jle
cmp
push
lock
jno
movsb
int
lods
nop
outsb
xchg
test
fsubrs
adc
jmp
fcomip
in
dec
mov
or
pop
icebp
fadds
iret
adc
sbb
push
inc
lea
fildl
icebp
and
pop
mov
push
int
call
lds
sbb
dec
xor
test
out
aam
gs
sbb
lods
inc
and
test
addr16
dec
cmpsl
adcl
jmp
jl
pop
mov
insl
insl
mov
pop
cmc
in
push
pop
andb
and
popf
sub
sub
fst
rol
xchg
jg
lods
xor
leave
loopne
dec
lret
xor
and
push
popa
jge
push
aas
mov
in
movsl
loopne
test
scas
mov
and
dec
loopne
test
or
std
mov
and
popa
jne
cwtl
fisubrl
fnstenv
push
shlb
aam
loop
cmp
xor
into
idivl
test
cld
lock
movb
xor
in
or
imul
js
arpl
orb
add
imul
sbb
jmp
in
fldcw
xchg
dec
clc
dec
inc
sbbl
aad
imul
adc
popf
inc
inc
sbb
and
fnsave
jne
dec
cmp
test
aaa
jne
loop
adc
pop
sarb
in
arpl
cmp
xchg
in
out
movsb
mov
xor
push
xor
and
shrl
adc
dec
cmc
push
call
sub
dec
sahf
xchg
push
adc
jno
xchg
movsb
movsl
add
rcl
pop
push
mov
fxch
lods
dec
or
jmp
adc
enter
mov
sub
leave
add
cmp
data16
cmp
dec
push
pushf
adc
push
popa
sub
inc
sub
je
mov
jge
cwtl
les
cmp
imul
sub
leave
sub
inc
xchg
sarl
stc
push
cmp
push
jne
divb
insl
aam
fs
nopl
fdivrs
aam
mov
icebp
push
dec
mov
test
loope
mov
dec
mov
insl
lock
or
mov
push
xor
add
mov
dec
mov
sbb
enter
pop
adc
jmp
rcrl
xor
cmp
sbb
cmp
pop
rorl
loopne
leave
das
pop
icebp
in
in
aas
xchg
fistpl
mov
xor
jmp
mov
call
sub
fldt
daa
mov
or
xchg
push
adc
loopne
sub
xlat
add
insl
cmp
hlt
fcom
pushf
mov
mov
lds
aad
and
rcrb
inc
adcl
ljmp
stc
or
into
sahf
int3
dec
inc
sarl
popf
test
xchg
sbb
shl
mov
lea
mov
fcoms
ss
icebp
aad
sbb
adc
lds
sub
icebp
xchg
xlat
sbb
push
push
fcoms
and
lods
and
xchg
insl
inc
int
mov
dec
inc
popa
xchg
pop
pop
int
sub
leave
mov
push
xor
sbb
loope
fs
lock
dec
xor
sti
pop
dec
in
push
movsl
xor
cmp
push
out
enter
jmp
pop
push
loopne
push
cltd
int
mov
mov
mov
xchg
outsb
mov
and
fs
nop
loopne
xor
outsb
lock
fidivrs
jmp
repz
insl
fisubrl
sti
pop
addr16
bound
in
test
cmp
pop
paddusw
cld
daa
les
and
jl
loope
mov
cmp
icebp
xchg
jg
int
cmp
enter
pushf
and
push
in
pop
xchg
jecxz
mov
inc
mov
sub
dec
ljmp
popf
push
mov
iret
sbb
lock
cmp
sub
hlt
push
stos
and
int3
xchg
mov
xor
push
jmp
sub
jge
jl
jge
and
pop
addps
in
in
pusha
test
adc
mov
rorl
xchg
xor
pop
jecxz
mov
imul
in
cmp
adc
mov
aad
mov
lea
xchg
lahf
sub
or
cmc
mov
jns
xor
call
xchg
xor
lcall
aam
lods
xchg
rcrl
js
sbb
add
loope
cmp
outsl
mov
sub
dec
negb
mov
adc
fwait
adc
jle
insl
rcrl
pop
mov
int3
push
rclb
adc
and
inc
mov
mov
sub
popa
pop
jne
decb
mov
adc
fsubr
aas
mov
in
mov
jle
adc
call
inc
insl
pop
hlt
insl
popa
dec
scas
push
add
cltd
push
int
xor
jmp
cmp
xchg
call
loope
or
std
inc
rorb
pop
xchg
fsts
ret
fcomps
cmp
in
sub
xor
test
push
movsb
push
add
or
out
mov
lock
in
mov
lea
inc
lods
push
adc
nop
mov
mov
push
jnp
mov
dec
insl
loop
gs
insl
push
cmp
insl
cmp
xor
sbb
int3
adc
jno
int
in
xchg
rolb
into
aas
imul
shr
mov
int
fstps
mov
push
jo
je
int
jl
push
mov
repz
cli
add
mov
dec
sbb
rorb
adc
sub
cmpsl
aam
nop
ret
into
sbb
cmp
popf
in
rcr
jne
jge
fsubrs
cmp
int
jmp
fstpl
jns
jno
in
into
fsubrl
and
scas
mov
cmp
into
or
pop
mov
je
jne
ret
test
xor
loopne
sbb
xchg
xor
xor
mov
dec
adc
shl
out
mov
mov
and
cmpsb
mov
and
lds
xlat
roll
inc
fcom
xchg
loope
lret
mov
and
adc
push
xchg
and
xor
mov
jbe
xchg
aaa
leave
adc
jne
ret
pop
outsb
and
mov
add
dec
inc
dec
inc
testb
push
call
int3
shlb
sbb
mov
jmp
hlt
adc
popf
lock
cmc
fildll
sbb
insl
xor
mov
test
cmp
shl
in
ss
movsb
pop
hlt
adc
sbb
imul
lods
push
jle
fmul
push
dec
andb
aam
rcr
add
adc
jmp
imul
and
lcall
insl
jne
and
sbb
aad
mov
pushf
add
sub
inc
cmp
gs
lods
les
push
insl
lods
mov
dec
xor
shll
loopne
lcall
testl
add
leave
mov
adc
enter
xchg
sub
pushf
dec
shlb
das
push
pop
cwtl
lods
gs
push
and
dec
inc
roll
jle
stc
or
mov
jmp
xchg
mov
loope
mov
cmp
imul
gs
inc
insl
mov
mov
fdivrl
dec
in
movsl
add
enter
cmpsb
jne
sbb
in
xchg
push
call
imul
sub
mov
rorl
lea
lcall
ds
xor
repz
icebp
inc
ret
les
mov
inc
lds
or
mov
pop
push
mov
shrb
push
and
xor
call
push
sub
dec
push
int
outsb
lods
jne
sti
inc
call
sub
lahf
lds
aad
adc
enter
add
inc
pop
aad
push
mov
adc
imul
and
mov
mov
loopne
dec
mov
shr
ds
pop
xor
add
ror
xor
mov
adc
lea
in
xchg
stc
mov
int
int3
loopne
sub
stos
dec
in
enter
pop
cmp
push
jbe
in
data16
jp
jl
dec
or
int3
and
push
fildll
sub
lret
shll
sahf
in
in
cli
pop
insl
les
fsubs
xchg
lret
leave
fcomps
fcoml
sarl
mov
cmp
mov
push
fstl
mov
push
cmpsl
loope
hlt
inc
mov
and
dec
sbb
fyl2x
in
sub
dec
dec
out
push
fadds
mov
push
inc
enter
xchg
mov
pop
aad
popf
xchg
rcl
mov
sbb
rcrb
shl
dec
popf
dec
sti
int3
sti
call
jno
xor
push
push
sbb
push
mov
cmpsl
in
aad
xlat
inc
shr
sub
aam
in
aad
sarl
scas
jae
movsb
and
inc
shll
test
and
in
in
pop
sbb
xor
test
xor
insl
lock
pop
aad
mov
fnstsw
inc
dec
xchg
cmc
xlat
sub
scas
lds
stos
test
push
fucom
in
xor
mov
add
gs
cmp
adc
insb
jg
mov
imul
das
adc
pop
aad
cmc
lret
add
mov
mov
mov
movsl
in
int3
cltd
sub
jne
fdivl
xchg
rcr
sar
cmp
testb
loopne
push
sbb
mov
sub
movsl
dec
in
lds
xchg
mov
dec
push
or
movsl
sub
mov
cmp
fldl
call
fcoml
jne
iret
add
pushf
sbb
lds
or
pop
inc
push
clc
in
jne
movsb
aam
jl
loope
sub
xor
mov
push
xor
sub
loope
cmp
test
adc
pop
xchg
loope
mov
mov
mov
pusha
cmp
leave
aaa
sub
lock
insl
icebp
lock
test
fiadds
sub
sub
aas
insl
inc
clc
jmp
in
es
roll
and
or
popf
int
add
outsb
mov
sbb
fmuls
inc
dec
and
sub
pop
dec
movsl
sub
stos
cmp
sbbb
pop
xor
ret
fnsave
jb
dec
aad
xor
xor
inc
xchg
add
mov
int
xorl
in
xchg
movsl
mov
and
push
cmp
sub
leave
ljmp
lahf
add
iret
xor
leave
sub
inc
sbb
push
jns
scas
loop
imul
je
out
insl
call
dec
int3
pop
in
fwait
int3
ret
cmp
adc
mov
mov
bound
lds
negb
loopne
adc
mov
icebp
mov
into
gs
adc
dec
jmp
jne
shrl
or
int
adcl
mov
ds
mov
mov
rcll
int
fcom
fsts
pop
iret
sub
aad
pop
mov
pop
pusha
adc
loopne
arpl
cmp
iret
adc
icebp
dec
or
mov
adc
mov
movsl
pushf
and
fs
subb
les
inc
dec
cli
mov
jbe
jnp
push
test
rcrl
lods
lret
cltd
outsb
sar
out
int3
cmp
in
leave
inc
lcall
push
xchg
cmc
popa
adc
inc
movsl
int
mov
sti
mov
or
pop
pop
and
pop
into
pushf
jle
push
pop
inc
xchg
aam
pop
dec
sarb
lods
dec
cmp
mov
cwtl
mov
jno
leave
pop
cmp
sbb
pop
lret
dec
inc
mov
fldenv
or
insl
fstl
aaa
aam
cmp
pushl
mov
iret
and
mov
fsubs
stos
ja
sbb
ret
mov
test
xor
sub
imul
fcoml
cmp
pop
inc
dec
push
into
mov
cwtl
dec
test
dec
xchg
and
dec
pop
aad
mov
adc
iret
pop
push
outsb
ja
nop
cmp
sarb
dec
push
cmp
lods
in
inc
sub
imul
pop
fcoms
testb
in
popf
dec
cmc
dec
sub
lock
repnz
aam
popa
pop
rorl
in
mov
std
push
in
sahf
mov
pop
jno
sbb
mov
insl
lods
test
sub
mov
shlb
imul
dec
fbld
iret
inc
mov
adc
adc
mov
inc
mov
fsubrl
mov
in
insl
pop
dec
mov
cmp
jnp
xchg
in
dec
jbe
loope
mov
adc
inc
movsl
cmp
pop
xchg
es
in
stos
mov
enter
insl
xor
xchg
in
fnop
lds
scas
jmp
mov
xor
xchg
cmc
pop
push
icebp
sub
and
fwait
aad
jmp
lcall
movsl
cmp
and
dec
cmpsb
fnsave
int
xchg
shl
cmp
mov
sarl
fcmovu
mov
push
in
pop
repnz
push
je
xchg
popf
imul
pop
nop
mov
mov
xchg
lods
sub
andb
xor
sbb
sub
adc
out
push
aam
xchg
leave
sbb
rcrb
hlt
sub
cmp
pop
mov
inc
nop
push
dec
negb
mov
ja
call
sarl
push
cmp
jecxz
pop
xchg
pop
scas
jl
push
testl
mov
fst
aam
clc
dec
adc
imul
in
addr16
xchg
lcall
jmp
mov
sub
jne
pop
adc
sti
mov
loopne
xchg
mov
rclb
xlat
pop
mov
gs
in
jmp
mov
pop
aad
fisubrl
dec
scas
ljmp
dec
mov
enter
leave
dec
adc
pop
pop
jge
mov
icebp
push
ja
sbb
jmp
in
sbb
lods
mov
cmp
pop
int3
jbe
jmp
xchg
insl
aad
mov
push
loopne
cmp
jne
scas
lods
test
test
icebp
mov
sub
sbb
fucomp
iret
fsubs
pop
inc
loopne
pop
insl
lret
dec
mov
mov
movsl
call
sub
inc
enter
popf
in
mov
sub
and
iret
mov
fs
adc
rcrl
gs
pop
fsub
adc
sbb
mov
js
inc
imul
push
mov
mov
cmp
sub
pop
test
es
ds
fst
out
mov
inc
cmp
cmp
movsl
ljmp
push
or
lock
aam
pop
data16
or
fsts
and
in
jo
pop
and
or
pop
jl
cmpsb
sub
and
pop
push
into
cmp
cmp
cmp
dec
push
icebp
mov
lea
rorl
test
das
push
movsb
pop
sti
orb
sbb
sub
sbb
icebp
shl
mov
jecxz
daa
cmc
ljmp
jno
cmc
fs
inc
lahf
popa
in
les
inc
fsub
jbe
sbb
add
xchg
insl
xor
xor
and
push
or
mov
cmc
mov
adc
push
push
xor
subb
cmc
movsl
mov
lods
adc
xor
push
sbb
enter
fbstp
pop
xor
push
aam
dec
daa
adc
mov
movl
pop
int3
popa
sub
les
int3
lea
gs
push
inc
fisttpll
pop
and
packssdw
xor
dec
xor
jno
jge
push
cld
cmc
test
sub
cmp
movsl
scas
xor
sbbl
out
adc
pop
and
jbe
popa
rol
dec
aaa
dec
mov
mov
mov
popf
sbb
inc
sub
cmp
and
subl
cli
xor
cmp
or
loopne
fdivrl
adc
and
lds
and
movsb
xchg
dec
std
lds
out
inc
fucom
xchg
rorb
popl
orb
int
mov
xchg
notb
or
lds
out
jno
xor
dec
sbb
gs
inc
jns
iret
into
adc
in
xor
rol
and
pop
and
mov
lock
adc
imul
fwait
pop
aad
in
mov
cmp
push
fisubs
jmp
rcl
sub
sbb
icebp
cltd
out
pop
jle
and
and
call
mov
sbb
loope
repnz
int
in
adc
call
mov
lods
data16
lock
gs
mov
into
dec
lret
inc
xor
jle
and
xchg
rdmsr
jno
lock
cmc
loope
xchg
adc
mov
test
sub
imul
xchg
push
mov
jne
jle
jge
jne
xchg
jle
das
jne
fdivrl
out
jne
mov
dec
frstor
jne
gs
mov
jne
jle
pop
sub
test
dec
inc
out
push
in
sbb
sub
mov
xchg
mov
stos
mov
jge
in
popf
enter
es
jg
pop
clc
mov
lods
insl
cltd
mov
gs
in
sti
sbb
mov
insl
mov
sbb
cld
enter
fmuls
add
and
lahf
cmp
lock
in
jmp
add
call
inc
inc
lock
adc
lock
sbb
and
aad
inc
jne
mov
movsl
jge
cmp
mov
inc
push
call
or
fidivs
loope
adc
frstor
insl
in
dec
mov
in
mov
call
lods
xchg
outsl
sub
int3
pop
and
in
aam
push
in
jne
xchg
xchg
out
imul
adc
in
mov
fdivrl
pushl
jle
push
mov
sbb
insl
pop
jne
push
and
fucomp
shl
mov
loope
sub
dec
sbb
mov
sbb
adc
clc
sarb
inc
sti
sbb
and
enter
mov
mov
mov
dec
xor
std
test
jp
or
pop
pop
dec
push
pop
leave
pusha
leave
mov
mov
insb
xchg
mov
or
adc
cmp
int3
mov
cltd
xor
mov
sbb
xor
js
vpcmpgtb
fmul
cmpsb
leave
inc
or
test
mov
std
xchg
stc
test
mov
loopne
dec
xchg
jno
add
push
jo
dec
sbb
dec
mov
cwtl
sbb
pop
adc
inc
add
cmp
pop
daa
shl
or
fstps
xchg
lock
xor
sbb
xor
lock
insl
lret
cmp
push
mov
inc
imul
dec
imul
ds
pusha
and
jno
mov
cmp
and
lock
ss
or
inc
int3
mov
fst
xchg
fdivr
lods
push
movsl
jecxz
mov
in
cmp
dec
xor
cltd
cmc
icebp
adc
xchg
inc
mov
lcall
cmp
movsl
inc
in
call
sti
xchg
push
std
scas
xchg
mov
inc
loopne
xor
faddl
xor
in
jo
lds
int
loope
pop
pushf
leave
mov
and
lret
xor
dec
in
mulb
bound
in
inc
push
xchg
in
mov
dec
sbb
xor
test
adc
mov
call
imul
jne
sbb
call
pop
dec
mov
loopne
xor
fs
inc
test
stos
xchg
mov
pop
inc
sub
push
into
or
cmpsl
pop
sbb
mov
dec
mov
pop
cmp
rcll
gs
in
jge
jno
sbb
xor
sbb
dec
push
shll
test
icebp
sbb
xchg
fsubrs
add
shll
adc
cmc
pop
xchg
cltd
call
int3
test
mov
sahf
cltd
xor
loop
mov
or
jne
fnstsw
fldl
inc
and
inc
jle
aam
mov
adc
fsubrs
dec
popa
loopne
and
xchg
and
int3
xchg
mov
scas
cwtl
cmp
xor
sbb
lcall
mov
jne
xchg
das
mov
cmc
sub
mov
outsb
jmp
popf
sub
dec
push
xor
mov
cmp
into
mov
sub
movsl
lods
inc
jle
popa
jae
lods
out
clc
pop
sub
int
fadds
enter
popf
jne
movsb
push
insl
pushf
loope
jg
and
push
aaa
sub
pop
lds
jmp
mov
jg
cmp
push
dec
xchg
scas
cmp
mov
add
fcoms
fs
xchg
es
jg
les
jmp
stos
int3
lods
popf
icebp
imul
xchg
mov
out
lods
or
fisttpll
add
leave
int
sub
in
mov
popf
xor
out
or
jle
dec
sbb
xorl
add
pop
push
cmp
xor
cmp
adcl
test
mov
cmp
movsl
jmp
test
dec
inc
xor
and
aam
out
lcall
loope
mov
sarb
jnp
stc
int3
and
andps
mov
sub
lock
cmc
lds
mov
xor
loope
es
mov
jne
sbb
cltd
xchg
sbb
adc
pop
and
addr16
or
dec
jp
pop
xchg
and
movsl
jne
xor
lock
mov
in
cmp
pop
inc
xor
mov
push
pop
push
lds
sbb
lock
and
and
or
int
popa
ret
scas
imul
sbb
fdivrs
mov
and
add
insl
jle
adc
sbb
mov
dec
lods
pop
repz
das
xor
fwait
out
int3
aad
mov
imulb
cld
jns
sub
mov
insl
fucom
aad
aam
icebp
dec
mov
add
fmuls
push
mov
cmp
in
xchg
pop
lock
lret
mov
int3
inc
pop
fsubrs
jno
mov
jb
fnstsw
push
popf
adc
xor
push
in
or
iret
adc
pop
insl
lods
shl
push
xchg
and
fistpll
mov
hlt
add
mov
xchg
xlat
cmp
jecxz
or
adc
jne
jb
pop
stc
mov
xor
push
sbb
mov
pop
push
shrb
cmpsb
into
mov
sub
fsubrs
sbb
jb
xchg
jl
lods
xchg
inc
mov
xor
push
movsb
subb
mov
les
jno
jp
and
and
scas
lret
movsb
cltd
gs
mov
or
xor
in
fwait
mov
insl
scas
push
clc
sub
adc
sub
dec
inc
icebp
xor
in
pop
pop
mov
xchg
fldenv
cmc
jno
imul
push
scas
rcll
or
inc
mov
xchg
std
enter
push
and
cmpsb
cmp
xchg
push
adc
adcb
fwait
xchg
lods
insl
jmp
dec
daa
ljmp
shll
push
imul
out
int
pop
scas
cmp
cltd
jno
out
inc
adc
push
xor
call
mov
mov
xchg
and
lods
cmc
pop
sub
sub
dec
inc
jle
mov
jle
push
cltd
cmc
ljmp
fldcw
movsl
popf
aam
pop
leave
push
mov
in
shll
icebp
loopne
imul
shlb
mov
notl
insb
gs
xor
fmull
mov
aad
popf
mov
inc
in
shrl
in
mov
into
add
test
and
sub
leave
mov
pop
mov
sub
stc
ficoms
jle
mov
cltd
xor
gs
pop
sbb
inc
ret
lods
in
add
xor
imul
cmp
jb
icebp
pushf
inc
and
stc
outsl
and
xchg
shll
daa
xor
pop
xor
pushf
int
cmc
adc
sub
push
xor
ss
add
repz
rcl
xchg
lcall
aam
mov
xchg
fwait
sbb
aam
popf
mov
xor
xlat
cltd
and
inc
clc
add
sbb
nop
mov
cld
inc
out
or
xchg
xor
and
and
aad
addr16
or
inc
jge
jecxz
xchg
xchg
jle
stos
cs
je
popa
fisttpll
clc
adc
xchg
lock
ljmp
cmpsl
loopne
and
rorb
dec
cmp
mulb
mov
mov
pop
enter
pop
lock
leave
mov
adc
jecxz
jl
add
shll
repnz
sub
icebp
mov
test
fdivs
mov
int3
leave
rorb
adc
pop
pushf
xor
iret
inc
dec
and
leave
lods
mov
cmp
xor
cltd
and
xchg
inc
popa
cmp
pop
stc
xchg
mov
cmp
jle
in
cmp
int3
sbb
xchg
mov
iret
fstpt
jno
cmp
insl
inc
enter
das
pop
adc
inc
in
popa
mov
insl
clc
fs
add
sbb
int3
aad
adc
cmp
adc
loope
into
dec
push
int
add
push
adc
cmc
and
jne
pop
loope
lock
cmp
sub
sbb
shlb
je
adc
mov
fadds
out
jmp
mov
xlat
insb
inc
movsl
int
push
or
sub
mov
in
in
pushf
cmp
mov
int3
call
mov
or
aam
jno
enter
sub
popf
mov
sbb
scas
adc
cmp
cmp
les
outsb
mov
pop
cmp
imul
jl
loope
jl
xor
cld
xor
div
push
nop
lds
sub
sub
vandps
xchg
sub
aad
jecxz
add
popf
inc
aas
loopne
divl
int3
mov
out
xchg
xchg
xchg
or
jle
call
fldenv
or
pop
xchg
call
fcom
sub
outsl
xchg
jle
mov
aas
inc
xchg
shll
dec
inc
push
xchg
gs
fsubrs
mov
or
insb
hlt
and
insl
aam
jmp
cmpsb
mov
mov
xchg
mov
push
dec
call
dec
pop
push
inc
jbe
sbb
popa
dec
into
sbb
and
and
mov
popa
jne
je
mov
xchg
das
int3
leave
jle
sti
push
or
push
es
aad
cmp
jge
in
imul
jle
aam
enter
or
sub
push
jno
mov
mov
add
and
hlt
popa
fdivrs
jle
adc
push
and
sbb
cmp
pop
scas
push
push
dec
push
and
sub
aad
mov
mov
cmp
daa
mov
push
shlb
lcall
jle
lods
pop
dec
ret
mov
inc
int
lock
in
fnstenv
aad
in
add
mov
movsl
lds
cmpsb
les
pushf
xlat
and
fmul
enter
push
sbb
stc
sub
rcr
and
in
and
xchg
xor
mov
jp
cltd
daa
imul
dec
jno
int3
into
out
xor
repz
jle
jnp
and
mov
or
mov
ss
mov
imul
ficompl
adc
pop
out
push
test
cmp
leave
mov
fstpl
movsl
in
in
loopne
lds
jecxz
cs
subb
jl
test
mov
mov
xor
lds
shll
out
sub
ljmp
roll
lock
icebp
in
leave
xor
insl
negb
in
pop
mov
nop
push
sbb
pop
cld
dec
xor
jp
dec
push
popa
rcrb
fcomi
push
add
test
sub
jnp
sbbb
rcl
xchg
into
loope
call
jp
xchg
mov
sub
push
xor
sub
lods
icebp
pop
fadds
jne
mov
or
cmc
cld
push
push
test
push
sub
push
fsubl
xor
ret
int3
push
lods
dec
push
aad
lcall
mov
rcl
sbb
pop
pop
jle
cmc
mov
push
test
arpl
sbb
hlt
dec
gs
pop
mov
add
adc
enter
mov
jle
jno
loopne
mov
cmp
sahf
outsb
shrb
jo
jno
insl
mov
lret
dec
xchg
inc
movsl
mov
aad
lods
cmp
inc
jl
push
push
sti
add
xchg
movsl
mov
inc
outsb
pop
mov
fsub
sbb
popf
movsl
xor
sbb
and
shl
cwtl
out
pop
or
rorl
loopne
test
pop
roll
jl
daa
sub
clc
cmp
idivb
es
in
vaddsubpd
xor
or
aam
push
xor
adc
addr16
lock
mov
nop
pop
xchg
insl
fs
pop
cld
fcompl
cmc
rcrb
or
outsl
loope
sbb
fstpl
dec
or
cld
add
xor
aam
xorl
je
adc
mov
sbb
movsw
xchg
sbb
leave
or
jge
dec
push
pop
fsubrl
out
in
xchg
xchg
int
or
cmp
xchg
sahf
and
xor
cltd
sub
jns
xor
inc
jge
lds
orb
push
dec
leave
cmc
and
int
fadds
int3
fnstsw
jmp
negl
and
push
cmpsl
icebp
lods
test
pop
pop
mov
pop
loope
push
inc
fmuls
cs
jno
mov
push
mov
hlt
jb
jno
cmp
pop
cmp
fnstcw
insl
mov
xchg
fs
lods
and
mov
jbe
pop
rcr
cmp
sub
lret
mov
sbb
sbb
dec
pop
adc
and
les
lock
mov
mov
in
repz
test
gs
int3
cmp
fwait
leave
adc
sbb
popa
lods
and
int3
cmp
push
mov
movsl
dec
nop
or
daa
and
popa
cmp
cltd
in
test
adc
popa
mov
test
jnp
hlt
pop
mov
pop
int3
or
inc
mov
aam
cli
adc
lods
xchg
sub
pusha
sbb
dec
push
out
fnstenv
int
sahf
mov
mov
leave
jne
gs
jmp
mov
int
mov
xor
movsl
icebp
popf
or
ret
pop
dec
sub
or
scas
and
call
lea
lods
pop
out
inc
sub
xor
cwtl
cmc
in
stos
sub
iret
loopne
int
pop
xlat
lock
pop
or
stos
push
aam
cltd
mov
jno
out
bound
add
pop
mov
or
subb
mov
popa
mov
inc
aas
inc
inc
punpckhbw
mov
loopne
in
int3
or
xchg
jbe
shrl
push
imul
xor
popa
inc
inc
mov
push
push
cmp
sarb
dec
das
in
cltd
sbb
ror
fnstcw
adc
sub
aaa
cmp
fistl
pop
push
imul
sbb
xchg
lods
jne
sub
xchg
popa
fsubl
lret
mov
adc
and
xchg
xchg
lds
inc
lret
dec
cmp
mov
jno
cmp
adc
mov
push
sub
lock
int3
or
insl
pusha
les
pop
or
adc
mov
bound
xor
ds
mov
jne
dec
pop
icebp
sti
sub
int3
and
xor
in
dec
jne
sbb
cmp
inc
mov
loope
pushf
gs
fyl2xp1
sbb
imul
xchg
fs
insl
in
pop
adc
clc
das
dec
call
insl
les
in
jno
sbb
mov
cmp
out
xchg
and
movsl
pop
popl
popl
or
enter
cltd
or
sub
shll
and
push
mov
sbb
movsl
test
jne
aad
sub
lahf
rcl
into
fbld
in
loopne
fwait
inc
push
int3
cmp
xchg
cmp
stos
dec
cmpsl
mov
mov
cmpsl
and
inc
pop
sarl
cmc
mov
sub
inc
mov
popa
outsb
inc
mov
and
push
lods
insb
push
mov
pop
xorb
lods
mov
nop
cmp
xchg
xchg
xor
cmp
or
insl
aam
inc
aas
xchg
test
out
xorl
sub
fidivrl
mov
repz
in
xchg
xor
sub
inc
push
aas
int
cmpsl
inc
mov
iret
xor
shl
fdivrl
mov
fcoms
shll
aad
pushf
aam
pmaxub
mov
test
jmp
iret
xor
loopne
mov
test
pop
cmp
sbb
gs
pop
sbb
ficomps
xor
ret
fs
cli
and
push
push
and
and
out
outsb
add
in
dec
pop
add
dec
mov
rcrb
loopne
add
add
push
call
negl
ret
mov
sub
inc
mov
xchg
and
rolb
or
ljmp
push
sbb
in
push
sub
dec
outsl
pop
fstpt
adc
dec
mov
aad
fisttpll
imul
fiadds
shll
adc
shl
lds
ret
repz
xchg
nop
lret
iret
inc
push
into
in
mov
sbb
cmp
xchg
loopne
inc
xchg
pop
xchg
in
pusha
pop
pop
lods
dec
and
mov
mov
push
inc
mov
mov
sub
call
xor
ror
add
addl
aam
cmp
aad
mov
icebp
mov
sbb
popf
jno
push
mov
and
dec
iret
sbb
jo
shr
lds
or
cmp
rcrl
adc
jno
loope
call
daa
adcb
insl
dec
imul
inc
aam
cltd
nop
sbb
lcall
push
dec
mov
dec
jge
subb
adc
xchg
fucom
adc
lock
mulb
fldenv
repz
adc
adc
int
push
or
adc
sub
cmp
aaa
adc
mov
xor
sub
jecxz
mov
push
movsb
lods
dec
mov
fdiv
or
fld
into
add
xchg
sub
int
cmp
mov
mov
lock
idivl
call
lret
mov
movsl
cmp
bound
or
xor
cmp
push
test
add
pop
out
jmp
xor
sub
aad
inc
lret
cmp
add
sub
cmc
ljmp
les
and
push
dec
mov
cmp
aas
jmp
push
xor
jo
push
cmp
dec
cmp
notb
push
ss
mov
adc
push
lds
and
shlb
mov
int
mov
cmp
cmp
aad
fwait
or
xchg
cltd
xor
dec
mov
lds
adc
aas
mov
in
cltd
lea
in
cmp
cmc
push
mov
dec
lods
mov
insl
adc
xchg
mov
sub
pop
and
outsl
insl
xchg
xchg
lods
mov
jne
xchg
push
jne
enter
push
and
insl
sbb
in
rol
sbb
shrl
jbe
inc
and
lock
xchg
lds
out
in
in
push
sub
xor
inc
shrb
dec
pushfw
enter
insl
jle
mov
xchg
cmp
cmp
adc
fnstsw
adc
cmc
fcompl
sub
add
xor
aad
cmp
imul
mov
int3
hlt
outsl
adc
push
cmpsb
lock
jno
shrl
sbb
cld
jle
dec
xchg
jecxz
or
test
sub
pop
aas
push
cmp
fnstenv
adc
pop
jno
adc
into
test
mov
and
notl
xchg
outsl
or
xchg
ds
xchg
jo
mov
lea
js
cmc
push
sbb
mov
leave
pop
sbb
rcr
jmp
jecxz
mov
dec
cltd
mov
sbb
fdivrl
cltd
outsb
sahf
push
rep
mov
movsb
hlt
aad
inc
jno
xor
xor
pop
lds
hlt
pcmpgtw
std
rclb
aad
movsl
dec
sub
stos
pop
xchg
iret
xchg
leave
mov
mov
xor
into
and
jno
xor
mov
lcall
push
call
popf
in
mov
push
sbb
mov
adc
lock
adc
xor
lea
or
xchg
rcrb
cwtl
enter
in
pop
aam
cmp
mov
dec
mov
testb
out
xlat
clc
cmp
dec
movl
xor
popf
sub
inc
xchg
adc
jmp
fsubs
mov
jge
lahf
lods
mov
pop
lods
fdiv
push
xchg
jmp
cltd
enter
xchg
ficoms
mov
dec
mov
adc
inc
cmp
xor
addr16
out
sub
xor
and
and
mov
sbbl
push
add
jne
out
and
loope
add
cmp
adc
xor
movsl
int3
pop
and
sbb
out
out
mov
add
icebp
mov
in
test
cltd
cld
lds
fmuls
add
push
mov
loopne
mov
push
jne
mov
in
in
cmp
dec
jle
dec
adc
mov
adc
cli
in
std
pop
aad
aam
mov
xor
loopne
outsb
fnsave
cmp
sub
and
cmp
inc
popa
sbb
add
je
xor
jle
jle
xor
cltd
popf
xchg
mov
cmp
add
shll
and
dec
fdiv
loopne
mov
mov
in
mov
les
aam
xchg
xchg
mov
rcrl
outsb
lret
xlat
xor
and
leave
sbb
and
xor
xchg
cld
das
dec
jg
insl
imulb
or
push
fldl
rcrb
mov
cmp
scas
jmp
push
xchg
pop
movsb
sbb
gs
addr16
imul
std
and
in
pop
outsl
pop
dec
adc
sub
in
stos
cwtl
jne
push
cltd
rcll
mov
dec
or
aad
push
scas
push
arpl
ss
xor
outsb
jae
insl
stos
xchg
insb
mov
mov
aam
mov
hlt
dec
push
rclw
leave
fdivrl
aam
sahf
mov
cmp
ljmp
daa
add
stos
dec
push
in
cmc
sbb
cltd
insb
mov
out
adc
cltd
imul
mov
repnz
mov
daa
test
jge
sti
out
mov
gs
int
xchg
bound
outsb
fisttpl
dec
cmp
or
lock
fmul
inc
mov
sbbl
adc
xchg
xchg
cltd
int3
sub
jno
outsb
lds
sbb
stos
cmp
mov
jle
inc
dec
lods
mov
or
leave
in
mov
push
dec
cmpsl
aad
jnp
mov
adc
xchg
subb
xor
int
sbb
push
into
add
imul
and
out
mov
lret
and
adc
lock
inc
incl
icebp
dec
testb
cmp
loope
inc
jmp
faddl
call
rolb
adc
fsubs
ss
jnp
and
mov
jge
fsub
jne
push
or
sub
pop
add
in
cmp
inc
push
in
popa
lds
sarb
std
fnstsw
fsubr
xchg
testb
mulb
out
mov
jbe
insl
fs
call
push
sub
add
gs
pop
xor
test
call
out
cmp
sbb
sub
adc
enter
popf
into
add
mov
mov
cltd
xchg
dec
push
faddl
mov
subb
and
inc
sbb
icebp
mov
sub
or
inc
pop
mov
f2xm1
insl
xor
mov
in
call
and
cmp
into
push
dec
sarb
sbb
cmp
mov
lods
imul
pop
les
adc
movsb
jg
xchg
add
movsl
and
dec
xchg
inc
jle
test
insl
mov
adc
call
or
fs
sub
test
xlat
sub
sub
ret
mov
scas
adc
mov
mov
adc
lock
in
loopne
xchg
out
cmc
xor
cmp
arpl
mov
inc
dec
pop
push
dec
cmp
xchg
sub
movsl
or
adc
xor
cmp
lods
push
leave
and
hlt
fstl
rclb
popf
in
xchg
mov
aad
jne
testl
aas
add
or
mov
xor
add
jno
mov
and
fcomp
xor
xor
and
and
andb
test
in
add
lret
mov
xchg
in
pop
test
mov
jno
mov
inc
xor
imul
pop
xor
shr
ror
jl
into
sub
int3
sub
int3
cmp
aam
push
loope,pt
jne
or
dec
ret
rclb
rorl
lret
pop
xchg
sbb
pop
jecxz
sbb
add
mov
and
or
add
insl
shll
xor
sbb
sub
test
fcoml
rcl
andb
and
sbb
mov
loopne
dec
and
ss
lock
cmp
push
popa
mov
inc
insl
inc
mov
repnz
or
fs
sub
cmc
je
fs
aaa
shr
mov
insl
mov
cmc
and
xor
fnstsw
bound
test
dec
cli
pop
loop
push
and
into
and
sbb
int
neg
shl
imul
and
fsubrs
pop
pushf
loope
insb
movsl
pop
in
inc
mov
adc
imul
mov
and
sbb
jbe
shll
inc
adc
and
in
and
add
fcomp
fsubl
loopne
jo
aam
xor
sub
inc
dec
lods
les
test
and
cs
out
add
popf
in
call
repz
pop
imul
push
insl
cmp
out
clc
push
pop
jne
mov
outsl
jg
inc
dec
mov
cmc
sbb
xor
mov
mull
js
adc
in
dec
sar
jmp
icebp
loope
fcmovnbe
xchg
pop
incl
mov
inc
pushf
xchg
dec
int3
aam
pop
dec
inc
sub
cmc
sbb
xchg
daa
insl
dec
test
sahf
loopne
je
lods
xchg
out
testl
stos
or
jno
xor
mov
mov
xchg
imul
mov
jno
mov
psrlw
cltd
in
ffree
sbb
jmp
mov
repnz
call
call
inc
ret
xlat
xchg
jnp
mov
sbb
cld
fstpl
shll
lock
and
mov
mov
sti
test
xlat
cmp
in
lods
jo
cmovno
mov
lods
cltd
rep
rcrl
xor
arpl
sub
or
movsl
nop
push
xor
int
jge
ljmp
test
outsl
and
clc
cmp
sub
sbb
pop
mov
mov
push
out
fs
call
push
mov
cmovb
dec
in
sbb
aad
cmp
cmp
xchg
call
push
mov
lock
enter
cmp
mov
or
inc
rorl
fdiv
mov
movsl
sbb
mov
xor
mov
aaa
push
mov
adc
sub
roll
in
into
push
sbb
leave
lds
fnstenv
cmc
mov
mov
subl
mov
jne
mov
call
mov
mov
shr
jge
push
test
sbb
mov
sub
lock
outsb
outsb
sub
sub
inc
mov
inc
or
movsb
lock
pop
iret
and
rcll
in
mov
lods
stc
out
or
mov
int3
andb
aas
xchg
insl
lods
adc
leave
xor
mov
out
test
mov
in
sub
sbb
xchg
sbb
iret
fdivrl
cmp
adc
aad
in
dec
mov
iret
dec
sub
sbb
jmp
test
insl
loope
imul
in
mov
movsl
hlt
cltd
adc
mov
int
mov
icebp
test
push
ficompl
mov
dec
fidivrs
push
and
xchg
jb
lea
aad
sbb
jmp
popf
cld
lods
das
in
pop
sub
add
stc
sub
mov
and
outsl
cmc
outsb
mov
sbb
in
cltd
cmp
xchg
sbb
rcrl
cltd
in
add
jno
adcb
mov
mov
fyl2x
iret
xchg
adc
dec
mov
call
and
cmc
sub
lods
call
cmp
imul
jmp
stc
out
adc
cmp
out
push
mov
movnti
enter
push
or
out
xchg
mov
loope
popf
fldcw
push
push
mov
mov
add
xchg
cmp
adc
in
leave
mov
xchg
adc
outsb
cmp
jecxz
or
int
push
push
shll
jno
cld
in
lods
xor
mov
lahf
inc
sub
push
cwtl
xchg
sub
and
push
sub
mov
fwait
in
fstps
dec
pop
popf
cmc
in
cmp
cltd
inc
call
and
cmp
mov
pusha
jmp
mov
movsb
in
popf
push
pop
cmp
lds
imul
in
adc
mull
sbb
leave
xchg
les
sti
rcll
lds
push
sbb
shlb
imul
pop
push
aam
and
icebp
mov
shll
imul
adc
sarl
mov
enter
add
inc
mov
scas
dec
sbb
sti
xor
test
test
dec
in
cmpsl
faddp
enter
mov
lahf
push
insl
and
xchg
pop
lret
push
shr
ret
adc
in
mov
call
or
dec
push
les
in
sub
inc
dec
sbb
aad
ljmp
call
xor
movsb
and
adc
mov
adc
dec
mov
sbb
xchg
push
scas
mov
cmp
int
movsb
adc
fst
mov
push
sub
jecxz
sar
imull
xchg
and
in
lahf
imul
int3
sbb
dec
in
sub
mov
aad
mov
enter
shl
leave
fdiv
insl
in
cmpsl
cmp
ficoms
scas
or
fstpt
icebp
popf
mov
cmp
jmp
mov
mov
dec
fsub
and
jmp
lods
leave
out
mov
out
pop
fnstcw
aam
xor
dec
in
push
jmp
push
mov
mov
sbbl
add
pop
xchg
rclb
fsub
mov
in
dec
pop
mov
mov
push
movsb
in
cmc
pop
pop
xor
data16
popf
and
adc
leave
inc
lods
xlat
icebp
dec
mov
ret
fs
inc
cli
xchg
xchg
mov
enter
dec
pop
push
shlb
fnstsw
out
adc
rcrb
test
inc
movsl
xchg
call
hlt
push
enter
push
adc
int3
icebp
sbb
cmc
push
lods
ror
imul
in
inc
xchg
int3
adc
sub
cmp
les
xor
aad
adc
push
scas
or
fsubl
push
lock
sub
sbb
popf
pushf
sbb
jno,pt
out
inc
push
adc
lods
aam
mov
push
lds
insb
mov
test
clc
les
dec
and
popa
loopne
push
and
sbb
mov
inc
adc
inc
test
loope
sbb
xor
jmp
dec
pop
repz
mov
xchg
or
clc
mov
pop
test
inc
adc
aam
jne
into
mov
dec
sub
nop
adc
adc
enter
cltd
dec
or
or
sub
pop
mov
cmpsl
jnp
int
fisttps
dec
pop
pop
pop
neg
adc
jno
adc
inc
fcoml
cmpsl
pop
pop
jge
lods
insw
dec
shlb
mul
and
push
pop
mul
mov
test
int3
push
cmp
mov
xor
push
sub
mov
cmp
mov
into
mov
je
ds
jle
dec
scas
cmp
pop
fdivrs
jl
shrl
loope
rorb
pusha
xchg
in
pushf
mov
push
cmp
jno
and
lret
adc
adc
mov
pop
popa
cs
mov
outsl
imul
mov
mov
enter
push
inc
pop
je
adc
in
lods
xor
and
pop
imul
fwait
sarb
lea
dec
sub
xor
outsl
aaa
aad
inc
loope
shll
int
xchg
cltd
sub
in
mov
sbbb
push
daa
lock
add
cmp
dec
add
jmp
fmulp
or
out
fldcw
mov
sub
push
cwtl
icebp
jmp
push
sbb
sub
pop
cmp
inc
push
js
pop
cmp
dec
pop
adc
test
in
arpl
aaa
mov
lahf
and
arpl
movsl
popa
pop
mov
and
dec
push
mov
push
inc
jmp
shlb
lods
jnp
scas
dec
call
jne
cmp
push
sub
int
adc
dec
lods
mov
lods
mov
enter
ds
sbb
dec
in
jle
call
mov
fdivr
fucomip
fldcw
test
cmpsl
sub
pop
outsl
test
frstor
or
pop
lret
iret
movsl
loopne
dec
add
push
inc
pop
xor
fstpl
movsb
xor
and
lret
mov
setge
jne
mov
lods
addps
mov
cli
xor
sub
and
negl
movsb
insl
cld
aad
into
arpl
sub
mov
into
sub
inc
fstpl
lret
int
and
out
std
sub
jno
xchg
jl
mov
jl
adc
mov
mov
lods
cltd
xchg
mov
ljmp
mov
popf
shrl
pop
into
lds
divl
dec
iret
pop
daa
fs
fs
imul
loope
or
int
jne
fsub
inc
cmp
mov
jmp
icebp
shl
test
cld
imul
movsb
popf
in
int
dec
jne
xchg
rcrl
leave
push
adc
sti
mov
sub
cmp
sub
dec
insl
mov
xchg
shl
cltd
xchg
in
xor
jae
or
jg
vpaddusw
aas
cli
adc
lods
mov
in
int3
xchg
cmp
pushf
fstps
push
xor
and
outsb
push
xchg
adc
out
adc
pop
out
inc
sbb
shlb
ljmp
mov
adc
mov
pop
dec
aad
sbb
xor
pop
dec
hlt
jecxz
dec
mov
scas
mov
rcr
add
xor
mov
dec
cwtl
movsb
adc
loopne
adc
js
icebp
stc
adc
popf
lock
test
jmp
or
mov
sbb
dec
nop
aad
enter
sbb
jge
cmp
mov
loopne
cmp
pop
sub
cmc
imul
rolb
pop
sub
dec
insb
and
and
and
cmp
popa
cmp
xchg
sub
fdivrs
jne
push
aaa
lods
jno
divl
ror
icebp
jne
sub
into
rol
stos
xchg
lds
insl
test
aad
push
in
xchg
sahf
clc
push
popf
imul
in
jns
mov
pop
hlt
aam
cmp
movsb
and
movsl
lock
adc
out
icebp
fmull
shrl
mov
in
out
pop
push
xchg
pop
dec
pop
bound
int3
and
and
imul
xor
and
adc
push
lods
add
xchg
pop
scas
xchg
fs
aad
pushf
mov
fs
sub
and
in
push
insl
jne
ds
inc
mov
lock
iret
in
fadds
shll
int3
jge
stc
mov
shll
in
das
ror
roll
fcom
leave
faddl
cltd
jle
push
jno
push
call
and
xchg
adc
sub
lods
xor
adc
adc
cmp
pop
sub
adc
int3
call
cmp
sbb
pop
enter
in
lods
mov
xchg
je
cltd
fcompl
pop
pop
cmp
in
aam
out
xor
sub
enter
and
mov
call
in
hlt
jmp
mov
leave
imul
fcomp
sub
mov
mov
adc
roll
adc
sub
add
and
pop
adc
mov
cmp
mov
gs
pop
and
popf
pop
cmp
rcll
enter
sbb
dec
clc
mov
imul
dec
mov
cmp
dec
mov
mov
mov
into
shlb
xchg
into
int3
clc
aam
shrl
push
and
cwtl
and
movsl
aad
jle
jmp
mov
rclb
sahf
sub
in
fmull
cmc
mov
add
cmp
jecxz
dec
test
xchg
call
push
push
int
xor
push
shll
and
sub
adc
pop
and
or
test
adc
imul
popa
sub
fs
dec
mov
sbb
int
aam
lock
in
sbb
in
loope
dec
mov
in
dec
into
sbb
loopne
movsb
push
push
in
or
fmul
cmp
testl
out
push
pushf
cmp
sub
xor
xchg
out
jmp
mov
cltd
mov
icebp
ret
sbb
xchg
shr
leave
mov
fsubl
xchg
xchg
sbb
sub
push
stc
pmaxsw
or
movsl
dec
fstps
leave
rcrl
int3
xor
gs
push
in
sbb
xchg
and
push
imul
mov
sub
outsl
ror
dec
jge
mov
dec
push
push
test
cmp
in
inc
push
mov
icebp
mov
sub
pushf
movsb
icebp
inc
dec
xchg
or
in
xor
movsb
push
xlat
test
cmc
dec
inc
jno
and
jle
lock
lds
and
adc
test
cltd
lods
mov
imul
xchg
in
cmc
das
or
loope
and
scas
fcomps
and
rcrl
xor
mov
pop
call
push
mov
mov
cltd
cs
pop
shll
push
enter
mov
pop
jl
xchg
mov
into
jne
frstor
sbb
cmp
shrb
pmaddwd
sbb
call
pop
jg
popf
push
mov
cmp
aam
nop
ljmp
pushf
cmpsb
adc
mov
je
in
daa
mov
mov
jge
cmp
fsts
imul
test
fadds
sub
leave
mov
adc
sub
fidivrs
lock
dec
push
xchg
hlt
xchg
les
inc
mov
adc
div
inc
sub
sbb
enter
dec
lcall
into
fnstsw
jno
out
sbb
add
dec
pop
mov
mov
mov
jmp
fcomp
xor
or
pop
sub
sbb
cmp
adc
call
leave
adcb
mov
mov
movb
faddl
mov
test
shr
inc
mov
mov
xchg
pop
inc
fcompl
jno
or
mov
insl
xchg
and
jne
sub
in
cmp
aad
rorl
cs
cmpsl
pop
out
subb
lods
mov
test
inc
xchg
sbb
cmc
mov
mov
adc
std
mov
in
add
movsl
cmp
adc
lock
rorb
pop
je
cmp
arpl
jno
xchg
xchg
sub
cltd
fsubrs
lds
repnz
aad
add
dec
mov
insl
movsl
jg
popf
cmp
pushf
int
sbb
aad
movsl
mov
push
xchg
or
sbb
inc
fstpl
int
int3
jmp
and
fcompl
dec
mull
mov
pop
jmp
fcmovnbe
mov
rcl
and
int3
jne
pop
adc
jle
cmc
lock
mov
shrb
loope
pop
int3
bound
sbb
or
icebp
fildll
lods
fwait
inc
mov
sub
adc
sbb
mov
and
push
mov
int3
sbb
mov
adc
icebp
add
inc
cmp
mov
popa
push
and
ljmp
sub
fstl
cmpsl
in
clc
dec
in
in
and
and
push
lret
rorb
sbb
jle
adc
inc
jmp
mov
outsb
and
cltd
sub
adc
out
in
lods
shrl
shrb
cmp
insl
xor
bound
dec
inc
lahf
push
pop
mov
les
pop
jno
call
adc
mov
popa
and
jne
sub
push
pop
cmp
jmp
adc
pop
dec
mov
mov
add
in
xor
movsl
lock
pushf
popf
inc
aam
xorb
mov
mov
imul
mov
adc
arpl
inc
xor
or
mov
dec
jnp
push
adc
push
and
pop
pop
cmp
adc
jg
xlat
jmp
mov
adc
fstpl
ror
test
out
cmp
loope
sub
pop
daa
adc
pop
fcoms
xor
cmp
inc
sub
popa
jno
cmp
lds
fstl
inc
mov
mov
in
or
leave
sbb
in
cmp
dec
push
mov
jne
jge
out
cmp
call
loopne
dec
pop
dec
and
dec
push
cmp
mov
mov
call
mov
xchg
and
iret
xor
mov
push
loope
gs
aam
dec
cmc
and
sbb
sub
or
dec
ja
adc
leave
add
cltd
mov
shrl
cmp
mov
dec
adc
aad
pop
mov
ds
rcrl
fldenv
int
lods
push
cmpsl
and
dec
pop
cltd
pop
sbb
call
inc
fwait
imul
fucomi
sbb
and
and
xor
sbb
cmp
pop
movsl
pop
shlb
push
dec
sub
leave
and
add
inc
and
cli
dec
xor
mov
int
mov
jl
in
adcl
xor
push
lea
lahf
int3
movsl
insl
inc
popa
xchg
aam
mov
push
rcll
pop
push
hlt
sti
pop
aam
adc
lea
lods
xchg
call
in
and
or
push
in
mov
in
mov
int
xor
lds
jmp
add
cmp
inc
int3
shr
mov
adc
mov
js
mov
aaa
adc
test
imul
and
vcvtpd2ps
xor
out
andl
jge
mov
sub
sub
cltd
xchg
jle
sbb
xor
in
cmp
int3
mov
mov
psrlq
xchg
nop
outsl
stos
stos
or
and
sub
cmpsl
push
shlb
scas
and
mov
pop
in
insl
cmp
gs
rcll
jmp
movsb
jle
mov
popa
and
mov
int
insl
mov
rorb
mov
aam
adc
nop
cmpsb
mov
cld
cmc
cmp
into
xor
inc
and
aad
cltd
jecxz
adc
test
loope
or
fcompl
into
mov
pop
lods
and
mov
pop
mov
push
sub
jno
insl
call
and
insl
or
rorl
into
xlat
int
rcr
mov
pop
and
icebp
hlt
lea
or
in
mov
shlb
xor
and
adc
lcall
fists
cmp
fucomp
cltd
stc
out
movsl
sub
mov
dec
ss
js
iret
je
rcll
into
popa
xor
out
in
mov
mov
gs
sub
int
in
push
cltd
outsb
mov
jno
inc
fsts
jae
and
xchg
test
add
jno
mov
rcr
xlat
data16
inc
faddl
xchg
stc
jnp
call
mov
aas
push
mov
call
cmp
pop
lods
xchg
mov
in
mov
mov
cmp
or
mov
fsts
mov
lods
out
mov
in
add
lea
ror
mov
movsb
lea
aad
mov
icebp
jge
popa
mov
iret
ss
lds
mov
ds
sbb
sub
test
jno
outsb
and
add
fsubrl
in
lret
push
and
sbb
mov
xchg
jbe
sti
aaa
sub
scas
lods
jns
mov
mov
inc
popf
loope
dec
faddl
and
and
sub
xor
pop
mov
int
inc
pushf
sub
sbb
gs
lods
add
rclb
scas
popa
mov
cmp
and
aas
in
sub
or
fprem1
sbb
and
leave
cmp
and
insl
call
sti
and
outsb
int3
insb
stos
inc
push
adc
or
adc
mov
mov
and
fmul
and
pop
or
lahf
jp
jle
lret
aas
jle
xchg
cld
imul
in
xchg
cmp
sub
rcrb
add
and
gs
in
cltd
cmp
sub
les
sarl
dec
lret
int
fstl
push
and
mov
xor
shl
int
mov
inc
inc
cmp
inc
mov
adc
fildll
mov
sbb
xchg
adc
jmp
pushf
push
int3
cmc
dec
hlt
imul
jne
into
loop
movsl
sbb
cmp
jmp
test
inc
subl
je
decl
lea
stos
cmc
dec
lods
rcll
pop
mov
sub
mov
popf
jmp
xchg
popa
hlt
into
in
mov
pushf
cltd
inc
xchg
aas
leave
and
xchg
cmp
dec
adc
insl
inc
ret
lea
subl
and
xchg
shl
sub
ljmp
adcl
popa
xor
add
test
sub
xchg
sub
scas
lods
mov
inc
push
jle
fsts
ljmp
jg
or
shll
jbe
dec
call
cmc
pop
dec
push
repnz
mov
rclb
dec
scas
cmc
fdivrl
stc
mov
dec
lods
pop
clc
fstpl
jmp
jle
fxch
popl
test
dec
idiv
mov
fsubl
adc
int3
mov
loope
jo
dec
jne
mov
cmpl
int3
inc
addr16
cmp
icebp
sub
andb
sbb
adc
loope
shrb
ja
xchg
ja
adc
sbb
mov
hlt
inc
aad
xor
test
sub
movsb
inc
pop
rcrb
xchg
insl
nop
inc
mov
jae
mov
test
or
cmp
bound
jmp
rclb
adc
call
hlt
imul
out
dec
lock
outsb
sbb
insl
mov
or
or
rcr
adc
in
dec
fnstsw
popf
int3
lock
and
aad
sub
sub
setg
mov
sub
sub
mov
sbb
pop
fcmove
pushf
push
aam
adc
frstor
or
inc
test
cmpsl
int3
clc
cmp
cmp
pop
sbb
pop
dec
sub
in
cltd
popf
and
or
mov
fdiv
call
xchg
mov
sbb
jle
lods
roll
mov
popf
fistpl
inc
inc
fdivs
fs
xor
in
es
pop
outsb
lock
insl
loope
aas
fdivl
pop
mov
and
xchg
rclb
loope
jmp
pop
loopne
scas
shrl
aad
jge
or
adc
xor
gs
rorb
icebp
sub
push
fnstcw
jnp
enter
push
movsl
inc
aad
xor
ficoms
mov
fimuls
pop
pop
int
mov
jne
movsl
push
mov
movsl
mov
je
shll
dec
sbb
sub
fs
faddl
enter
jno
in
sarb
jmp
dec
xchg
outsb
out
mov
mov
loope
fwait
dec
into
imul
add
leave
dec
pop
adc
fdivl
mov
aas
adc
fsubr
fsts
push
enter
jno
xchg
xchg
xchg
jnp
arpl
xor
adc
and
inc
adc
mov
push
popa
insl
push
dec
dec
or
mov
test
icebp
pop
pop
push
dec
sarl
inc
xchg
sbb
popf
sub
movsb
mov
movsl
or
sbb
adc
adc
test
cmc
lods
mov
mov
adc
fs
jl
rcr
enter
imul
adc
aam
mov
std
or
aam
and
enter
leave
inc
jle
int
and
dec
dec
pop
dec
pop
mov
push
xchg
out
jge
cmp
add
aad
mov
push
sbb
sarl
xor
leave
gs
xchg
in
loopne
lea
inc
and
push
in
vprotw
ja
out
add
sub
loopne
adc
int3
xor
add
push
lret
mov
lock
sub
cmc
jno
adc
mov
or
movsb
popf
fxch
fwait
pusha
adc
jb
sbb
push
ftst
or
sub
mov
xor
frstor
jbe
cmp
xchg
test
in
loopne
xor
jae
loopne
sub
pop
cmp
xchg
mov
mov
and
sub
inc
pop
add
enter
pop
test
cmp
aam
xchg
cmp
xchg
dec
les
js
vpunpckhwd
outsl
sbb
dec
int3
and
adc
insl
popf
dec
std
fstl
or
push
inc
push
popa
dec
dec
lret
mov
xor
mov
test
sub
or
lds
mov
int
in
jle
enter
and
mov
movsl
jne
xor
mov
jle
mov
outsb
icebp
sti
int
in
xchg
cmpsl
sub
popa
or
sarl
sbb
andb
imul
ror
lock
sub
lods
leave
mov
aad
in
xchg
jmp
mov
and
loopne
xchg
pop
lcall
xor
fucom
push
out
cltd
in
loope
insb
push
stos
mov
lret
lods
int3
inc
notl
jnp
or
inc
mov
adcb
or
ds
inc
dec
lds
fldenv
cwtl
sub
fcomps
imul
push
push
lds
pop
dec
out
sub
popf
lods
repnz
sbb
cmp
loope
cmpsb
inc
push
mov
nop
xlat
hlt
rorl
call
enter
xor
in
xor
pop
jecxz
or
loopne
jp
jle
xor
xor
fisubl
adc
mov
add
inc
mov
icebp
rcl
movsl
int
fxrstor
adc
mov
jmp
adc
lods
loope
lds
push
xchg
add
add
xor
cmp
pop
xchg
adc
and
cld
in
sub
xor
push
jnp
xchg
and
xor
xor
xor
fs
loope
jecxz
aad
and
cmp
shll
in
pop
adc
aam
imul
inc
shrb
rcll
xchg
push
ror
pop
sahf
cmp
js
out
imul
and
mov
fidivrs
lods
adc
mov
hlt
dec
cmc
aad
jle
enter
mov
push
dec
aam
gs
push
and
aad
imul
xor
and
insb
lea
mov
xor
pop
pop
fs
pop
mov
wrmsr
mov
lret
shrb
inc
jle
mov
cmp
aad
sub
xor
mov
adc
fnstsw
sbb
push
gs
dec
push
in
aad
mov
mov
gs
push
ficomps
sub
rcll
mov
inc
aas
hlt
mov
mov
pop
movsl
pop
inc
or
jmp
dec
lea
jne
in
test
or
fcoms
cmp
pop
xor
std
push
rorl
and
aam
mov
sub
scas
stc
in
stos
jecxz
leave
push
sti
fmull
dec
xor
mov
sbb
cmp
leave
push
mov
in
jle
ss
jne
test
xchg
add
test
out
popf
jge
jl
pop
inc
xor
mov
jno
fsubl
int
mov
dec
jge
and
xor
sub
fwait
test
add
xor
cmc
xor
xor
test
in
and
cmp
icebp
xchg
shlb
jns
aad
push
lcall
sub
sub
xor
push
adc
rorl
loopne
fcomps
fnsave
jl
in
inc
cmp
nop
dec
pop
push
and
mov
in
int
imul
sahf
mov
sub
or
sub
adc
sbb
es
mov
mov
and
sti
push
xchg
sub
sub
cmpsb
dec
adc
fcoml
adc
and
rcrb
in
jg
dec
cltd
dec
loope
inc
cmc
jmp
outsb
and
xchg
or
sbb
adc
cmp
in
dec
or
sub
shl
push
mov
in
xchg
xchg
mov
push
out
mov
adc
test
dec
jae
icebp
or
and
leave
es
jg
sub
push
pop
jnp
jnp
popa
mul
mov
xor
jo
clc
ror
fwait
sub
mov
fdivl
mov
or
popa
sub
fdivrs
jne
mov
int
imul
enter
add
inc
mov
adc
loopne
test
dec
leave
xchg
sbb
or
and
int
lds
jne
jecxz
cmp
aaa
xchg
cmp
fmul
int
shll
mov
rcl
adc
lret
xlat
push
xor
mov
jno
xchg
jno
lock
lods
add
repnz
jne
sbb
adc
sbb
icebp
mov
cs
lock
pop
mov
adc
fsubl
fsubrs
jp
cmp
movsb
xchg
cmp
pop
jbe
xchg
sub
data16
dec
push
sub
icebp
lods
sub
push
mov
cltd
mov
insl
fnstsw
xor
sub
mov
sub
cmp
and
mov
movsl
mov
subl
adc
cmpsl
stos
mov
xor
jge
mov
jno
sub
add
sub
cmp
sub
repz
fsts
cmp
int
xor
jne
jl
loope
int3
mov
mov
sub
xor
in
mov
lods
movsb
call
pop
jmp
fcomps
jnp
ljmp
fsubrs
test
mov
in
fcoml
pop
xor
xlat
cld
xorb
mov
cmp
push
xor
mov
cmpsb
push
pop
pushf
loope
js
aas
lret
dec
stc
cmp
cltd
cmp
pushf
mov
in
mov
and
fmul
adc
lods
outsl
aam
out
adc
in
imul
fisttpll
mov
fwait
mov
gs
inc
mov
nop
dec
enter
mov
inc
jp
adc
sbb
outsl
aad
push
popf
dec
push
or
and
inc
call
leave
std
sbb
sub
jmp
adc
int3
xor
loop
push
dec
outsb
sar
rclb
dec
outsl
lods
lea
cmpsb
jne
mov
sti
nop
ror
inc
inc
mov
arpl
jnp
in
in
jno
out
outsl
pop
int3
add
cmpsl
mov
dec
aad
xor
loopne
popa
movsl
jl
shl
xor
popf
dec
lret
lods
sub
pusha
stc
push
daa
pop
arpl
adc
enter
orl
andl
cmpsl
test
and
fdivl
inc
push
repz
lock
mov
lods
int3
mov
fsubr
in
in
adc
jmp
cmp
xor
sub
rcll
fadds
pop
jmp
popa
jno
adc
lea
jns
movsb
adc
icebp
and
shrb
and
lods
into
pop
sbb
cmp
in
cmc
imul
aam
das
cltd
subl
mov
enter
mov
in
push
aam
sub
int
dec
mov
jne
lahf
sub
std
push
inc
sbb
pop
mov
pop
push
imul
popf
mov
jmp
rcl
fisubrs
lock
lret
cmp
jp
js
lcall
aam
jno
adc
jge
popf
sub
std
mov
loope
push
rclb
lcall
cmc
repnz
shlb
sbb
dec
pop
cmp
jmp
andb
fcomps
inc
aad
pop
cld
in
rcrb
lock
mov
aam
sub
lds
inc
jg
fistpl
cmp
fsts
mov
xchg
and
sbb
adc
fstps
sub
fnstsw
out
stc
jmp
popa
inc
loope
in
movsl
shr
divw
sub
fyl2x
cmp
xchg
int
inc
adc
loope
add
fcoml
fnstenv
notl
pop
add
mov
or
notl
fsubr
mov
loope
test
push
and
cmp
mov
shrl
and
fmul
adc
and
xchg
out
clc
test
popf
cwtl
lods
mov
insb
mov
cmp
jnp
dec
xchg
mov
inc
inc
movsb
in
icebp
push
enter
or
aam
lock
cmc
mov
in
dec
shlb
mov
int
sub
insl
jae
adc
jo
out
daa
outsb
sub
xchg
rorl
mov
in
cmp
aaa
and
imul
push
adc
jmp
xchg
xor
adc
xchg
xchg
cmp
clc
adc
fcomps
mov
pop
out
or
popf
sub
test
sbb
sahf
cli
adc
fldenv
sbb
inc
xchg
jno
popf
mov
shl
add
cmp
aad
sub
loopne
mov
or
cltd
hlt
cmp
add
mov
cmp
ss
fldlg2
mov
or
mov
mov
rcll
xor
fists
jle
dec
pop
inc
push
loope
sub
dec
ret
cmp
fchs
rcl
dec
in
xchg
lcall
adc
fxch
dec
inc
cltd
mov
and
jnp
cmp
in
enter
and
inc
adc
xchg
pop
lret
jno
push
test
jno
outsb
or
cltd
fs
loope
adc
inc
jmp
and
enter
insl
mov
mov
sub
pop
rorl
adc
cltd
xor
imul
int
adc
xchg
out
fldpi
mov
loope
insl
xor
push
nop
enter
ljmp
aam
outsl
insb
jns
adc
popa
cmc
lods
cmp
inc
pop
cmp
dec
lods
aad
mov
and
pop
icebp
cmp
sbb
mov
jne
aad
cmp
mov
cmp
leave
xor
out
push
clc
sub
fadds
adc
lods
lds
lods
repnz
push
adc
dec
adc
loope
pushf
mov
xor
aam
jb
fcomps
test
arpl
loope
int3
adc
dec
fsubl
push
inc
aad
adc
jno
popf
pop
aaa
adc
imulb
into
jno
out
rclb
lret
and
mov
insl
push
repz
lea
cmp
notb
adc
in
push
call
cmp
and
movsl
push
gs
mov
cmc
push
add
popf
jmp
sbb
inc
call
and
loopne
xor
test
sub
adc
xchg
pushf
adc
xor
inc
int3
pop
lods
enter
mov
cmp
loope
push
fsubrs
xor
cmp
aam
mov
dec
xchg
movsl
mov
pop
mov
sbb
inc
push
xchg
sbb
fistps
pop
adc
mov
stos
mov
fwait
shl
outsb
movsb
xchg
push
jmp
es
mov
fstl
xchg
sub
sbb
cltd
insl
mov
call
icebp
in
test
rcr
mov
int3
scas
in
xor
inc
inc
dec
push
out
push
fsub
and
enter
in
jno
clc
xor
lahf
inc
adc
pop
sub
out
dec
leave
mov
cmc
jl
jle
adc
int3
xchg
xchg
and
pop
std
or
insl
aad
jmp
lods
xchg
xchg
sub
push
mov
adc
cmpsb
push
test
scas
push
and
pushf
fstl
mov
aad
mov
enter
xchg
sahf
inc
in
sub
jno
sbb
in
in
cmp
dec
icebp
sbb
pop
enter
roll
cmp
push
les
mov
xor
movsl
xchg
outsb
in
xchg
mov
popf
mov
push
mov
out
les
xchg
sbb
adcb
push
movsl
fstps
and
push
daa
sbb
mov
in
in
fldcw
sbb
inc
mov
push
xchg
rorb
add
rcl
xchg
inc
shlb
lea
mov
jno
fcom
jle
xor
aam
jbe
lods
movsl
cmp
dec
adc
jne
pop
mov
sbb
btr
fcoml
mov
insl
cmp
popf
adc
pop
xchg
xchg
and
add
sub
sub
sbb
dec
imul
dec
dec
loope
ror
lods
shl
daa
sub
jae
int3
std
dec
into
idivl
mov
mov
push
imul
rcl
ja
mov
dec
adc
sub
or
xor
leave
jmp
mov
frstor
loopne
cmp
mov
flds
lods
repnz
roll
aaa
insb
sbb
outsb
dec
dec
call
cmp
cmc
lock
xor
int
popf
sub
fisttpll
xchg
sbb
idivb
into
jbe
cmp
adc
sbb
adc
adc
or
pushf
loopne
mov
popf
jne
movsb
fcompl
leave
gs
fst
or
cmc
sub
int3
inc
ret
adc
addr16
jb
jmp
sbb
loopne
scas
fs
xor
jge
pop
lods
add
jne
pop
dec
insl
rcrl
pusha
xchg
mov
jp
mov
insb
in
dec
popf
mov
mov
fnstenv
inc
add
xor
push
mov
roll
stc
lock
ffree
mov
mov
push
cmp
aad
cltd
mov
das
sub
or
mov
in
mov
movsl
xor
fdivs
mov
insl
dec
xchg
lods
push
or
push
ljmp
jle
sbb
dec
movsl
lret
push
repz
cltd
jno
dec
cmp
sbb
xchg
std
cmp
cmc
test
pop
sub
pusha
enter
in
cmovne
in
xchg
scas
fadd
call
test
push
jge
cmp
xchg
in
sub
pushf
fucom
pop
pop
fadds
xchg
imul
mov
sbb
xor
lods
lods
pop
xor
mov
in
lret
push
sub
sti
out
icebp
add
inc
xchg
loope
jne
and
dec
gs
xchg
fdivs
or
mov
mov
lea
xchg
mov
lock
cltd
pop
jnp
mov
xor
lock
adc
push
aam
gs
insl
in
test
push
adc
mov
inc
int
pushf
ror
fdivrs
insb
push
xor
cld
cmp
xor
dec
cmp
lock
adc
sub
dec
int3
in
ret
mov
xlat
std
mov
sub
rorl
pop
fcompl
clc
add
xchg
loop
and
outsl
call
movsl
aam
rorl
jns
pop
sub
jge
add
push
cltd
push
sbb
push
dec
mov
sbb
iret
lock
push
test
and
aam
lahf
adc
out
push
into
lds
test
jno
mov
and
push
and
stc
inc
cltd
xchg
or
cmp
int
int
xor
or
or
xchg
mov
push
pop
icebp
jle
loope
lods
add
pop
jmp
push
push
fcomps
leave
mov
xor
lods
int
int3
mov
out
push
xchg
data16
cmpsl
in
dec
in
jno
add
sub
aas
inc
loopne
sbb
sub
fsubr
pop
sub
jmp
add
aad
movsb
mov
clc
movsb
test
xchg
mov
push
loop
and
jbe
inc
in
lock
jno
pop
pop
rcl
xor
in
test
lahf
or
add
int
rolb
xchg
test
pop
dec
je
xor
popf
int3
and
aad
lahf
adc
leave
pop
push
and
test
lds
inc
enter
fsubrl
movsb
pop
in
adc
mov
mov
ss
stc
adc
out
push
dec
xchg
in
sbb
sbb
jne
shrd
jno
sbb
int
adc
addr16
out
mov
pop
bound
xchg
adc
lds
mov
mov
xor
dec
fldenv
lock
in
cmp
inc
popf
outsb
lds
xchg
adc
pop
pop
movsb
jno
and
mov
pop
popa
shl
call
out
movsb
mov
mov
test
ror
aam
fldl
sub
dec
aam
mov
xor
xor
roll
mov
adc
add
jne
dec
or
insl
int
xor
movsl
test
adc
aad
les
pop
cmp
mov
enter
mov
adc
sub
fxch
shrl
test
arpl
jne
cmp
mov
popa
int3
enter
sbb
add
cmpsb
push
cmp
int3
sbb
in
sub
pmaxub
fists
add
enter
jle
dec
scas
sbb
cld
xor
f2xm1
sub
in
int3
jle
popa
repz
loopne
dec
aam
inc
adc
cmc
test
lahf
pop
test
add
pop
popf
cmpsl
and
bound
aam
cvtdq2ps
outsb
stos
loop
cltd
add
sub
int
mov
dec
rorl
into
sub
fwait
cmpl
adcb
pop
mov
sub
inc
inc
int
inc
call
stc
lods
mov
sbb
xchg
fmull
icebp
sbb
xor
xchg
cltd
push
pop
idivl
push
mov
mov
mov
jl
push
xor
cmp
aad
lods
xor
lock
int
push
popa
iret
dec
sbb
push
rorb
fdivr
or
test
inc
mov
mov
dec
lock
int3
xchg
pop
dec
lahf
fnsave
int3
daa
or
and
dec
pop
gs
in
pop
test
xchg
pushf
rcll
dec
test
fucom
and
mov
popf
pop
mov
mov
fimull
and
lret
jmp
mov
push
das
insl
and
loope
scas
shll
rcll
inc
dec
loope
dec
cmpsb
outsb
cmp
lds
or
adc
xchg
jb
cmp
leave
loope
xchg
fdivrl
push
icebp
in
sub
ror
loopne
mov
test
pop
imul
sbb
lret
cmp
sub
popf
loopne
lcall
adc
push
and
sbb
in
mov
add
mov
mov
pop
xchg
in
nop
jg
jns
adc
dec
aaa
gs
fs
pop
xchg
or
lock
decb
mov
test
jl
push
xchg
and
sbb
mov
lds
call
mov
popf
sti
fcomps
iret
dec
xorb
and
lods
cmp
in
rcll
outsl
sub
loope
mov
cli
xchg
je
insl
lock
pop
push
hlt
cmpsb
les
push
adc
mov
popf
jle,pn
clc
xchg
push
or
xchg
outsl
dec
int
jmp
int3
and
shl
js
mov
scas
cmp
cmp
sbb
data16
pushf
fxch
out
movsb
mov
jne
dec
clc
test
in
xchg
or
push
inc
rcl
pop
loopne
sbb
and
int3
loopne
sub
aas
xor
aam
hlt
in
prefetch
mov
adc
mov
int3
xchg
mov
push
cmpsl
sub
jo
sub
into
mov
push
dec
fisttpll
mov
roll
mov
fwait
jmp
cmp
cmp
pop
sbb
negb
and
in
sub
dec
mov
xor
lar
cmp
sub
adc
xor
dec
shll
ror
stc
mov
mov
xor
test
bound
lret
pop
jle
add
in
mov
sti
testb
jne
fcomps
adc
xchg
mov
iret
sub
xchg
in
push
popa
into
imul
pop
dec
jnp
pop
xchg
test
popf
or
sbb
dec
in
sub
fs
mov
ror
xor
dec
test
gs
dec
or
in
mov
sbb
cld
int3
mov
shl
fs
xor
add
loope
xchg
out
mov
loop
mov
bound
lahf
and
in
and
lds
loopne
mov
in
push
aas
scas
add
in
fwait
mov
mov
shll
sbb
cmp
sub
cmp
or
das
pop
incb
insl
or
pop
mov
pop
popf
imul
adc
jno
xchg
xlat
mov
push
pop
push
and
xlat
movsb
shrl
insb
movsl
lods
notb
fcoml
in
add
lcall
fstl
call
scas
jmp
and
pop
insl
dec
fcoml
add
adc
iret
cltd
xor
and
mov
mov
loope
shrl
shll
in
mov
jge
vminps
int
fcompl
add
out
dec
jmp
xor
sbb
sbb
in
xor
mov
mov
sub
sbb
xchg
inc
pushf
popf
or
faddl
push
xchg
clc
mov
mov
mov
cmc
lret
dec
shl
outsb
data16
sbb
lds
leave
sbb
xchg
mov
out
push
xor
mov
out
out
jge
mov
jne
and
inc
and
fsubrs
mov
sbb
pop
lock
cmp
test
cmp
cld
sub
int3
mov
mov
inc
out
mov
into
lods
jne
les
imul
dec
push
or
scas
loope
fsts
in
loop
fistpl
cmpb
popf
jo
xchg
dec
imul
in
cmpsb
push
scas
sbb
xor
insl
fsubrp
push
pop
aam
adc
in
in
lret
aam
cmpl
jno
sbb
ja
cmp
aad
xor
lods
inc
and
loope
fstl
cmc
cmp
leave
mov
test
test
xor
loope
adc
and
mov
sub
test
sbb
lret
insl
lods
loope
mov
adc
push
movsb
dec
call
fs
xor
cmp
cmp
mov
xchg
jle
lret
int
es
popa
xor
fstps
aad
fisubrl
lock
and
loopne
ljmp
xor
push
aad
mov
jl
xchg
xor
ds
sub
in
add
lock
push
mov
int
out
cmp
xchg
cltd
mov
in
int3
push
call
mov
scas
and
dec
push
cmp
sbb
cmp
jge
cmp
enter
shll
mov
adc
pop
adc
pcmpeqw
orb
in
ss
aad
faddl
sbb
xlat
jb
mov
fdivrs
in
int
jg
lods
adc
iret
sbb
ljmp
adc
sbbl
cmp
das
fnstsw
jne
loope
jb
in
enter
jbe
loope
in
sahf
inc
aam
cmc
jno
loopne
mov
sub
adc
mov
in
fsubrs
push
fisubl
cmp
push
sbb
mov
jle
iret
fdivl
aam
popa
lds
int3
call
pop
lea
mov
lock
cmp
pushf
add
loopne
lds
adc
xchg
aam
mov
dec
xchg
xor
loopne
aam
and
xchg
or
daa
dec
add
pop
fadds
mov
mov
jne
fadds
nop
dec
in
mov
mov
rcrl
mov
or
iret
fldcw
popf
xor
or
dec
xchg
fnstenv
or
pop
xchg
sbb
cltd
xor
cmp
sub
pop
adc
movsl
xor
fs
fs
pushf
lahf
in
sbb
adc
fstps
in
mov
test
ljmp
movsb
shrl
cltd
jmp
or
nop
and
adc
sub
jge
xor
int
add
aas
in
xchg
loopne
inc
shrb
sub
aad
jecxz
mov
add
and
cmp
adc
loopne
stc
pop
cmp
pop
xchg
cmp
insl
push
fcompl
push
adc
or
fstps
adc
xchg
popa
fwait
lret
xor
ds
pop
repz
sub
icebp
mov
jp
fdivrs
nop
jl
push
lret
cltd
ja
mov
loopne
test
jmp
loope
xchg
sbb
outsb
into
sbb
sub
jmp
arpl
and
out
mov
sbb
test
pop
arpl
cwtl
loope
xchg
lcall
lds
movsl
in
shrb
popf
aas
push
cltd
ret
mov
lahf
mov
push
movsb
addr16
notb
lcall
inc
call
mov
int3
cmc
scas
ss
fdivs
mov
aam
sbb
ds
jmp
lcall
xor
aam
cmpsb
int3
sub
push
mov
inc
dec
mov
and
mov
dec
pop
outsb
inc
and
pop
shrl
xchg
push
andl
gs
and
inc
test
test
cmp
sub
into
popf
lods
iret
mov
sub
in
mov
fst
dec
pop
loope
in
lds
dec
inc
sub
test
lock
jno
xchg
lcall
int3
outsb
js
scas
outsb
cmp
pop
stos
in
fisubs
jb
or
cmp
outsl
gs
lods
shll
xchg
adc
cmp
into
inc
shlb
xchg
dec
mov
mov
adc
fstpl
sub
adc
aad
popa
xor
xor
jo
iret
mov
scas
out
rcrb
or
xchg
dec
push
adc
sbb
xor
fsubs
jae
jns
ja
and
mov
dec
pop
popf
inc
int3
pop
and
xchg
lcall
mov
mov
adc
into
dec
jno
inc
iret
jne
nop
lea
pop
mov
mov
push
xchg
push
mov
lods
add
leave
sub
adc
fst
int
mov
int3
mov
fisubrs
test
mov
push
nop
pop
push
int3
xchg
sub
push
daa
sbb
sbb
jo
pop
gs
mov
aam
pop
cmc
out
mov
sbb
lods
mov
inc
imul
xor
sub
and
pop
lret
insl
mov
inc
pop
iret
adc
sar
cmp
popf
sub
dec
leave
mov
mov
xchg
imul
jne
xor
jle
movsl
int
and
or
xchg
xchg
adc
movsb
cmp
std
xchg
sub
sub
xor
hlt
dec
gs
aam
xor
in
pop
int3
int
popa
fldl
icebp
out
push
into
ja
xor
push
and
into
loope
jge
xchg
insl
in
int
jae
mov
cwtl
in
popa
dec
and
inc
xor
and
fildl
push
stc
xor
jge
js
or
pushf
dec
mov
pop
cmp
fs
mov
cld
jns
adc
mov
icebp
mov
loopne
jmp
int3
xor
cmc
loope
popa
outsb
fisubrl
xor
sbb
lods
pop
mov
xchg
int
pop
int3
push
xchg
mov
cmp
jne
cmp
mov
inc
jnp
mov
cmp
jne
fnop
das
jle
xor
roll
xor
xor
mov
int3
ss
les
int
dec
pop
jl
stc
iret
mov
jo
jne
cmpsb
test
in
lock
vpmaxsw
sub
push
inc
xor
insl
or
mov
popa
popf
or
in
lea
xchg
mov
inc
xchg
adcb
sbb
push
popf
push
adc
inc
adc
push
gs
mov
xchg
daa
xor
rorl
outsl
leave
in
int3
outsb
push
cmp
out
jmp
int
leave
or
jne
popa
pop
adc
out
fsubrl
icebp
gs
mov
dec
cmp
pop
sbb
lock
sub
sarb
xor
adc
cltd
addr16
and
clc
cmp
adc
sbb
iret
enter
in
sarl
adc
or
js
cmc
sbbb
pop
sub
xor
xorl
sub
sbb
inc
fdiv
in
cltd
dec
inc
pop
ss
or
insl
jne
sbb
roll
in
mov
int3
and
loope
lods
in
push
dec
mov
and
cmp
lods
sub
es
xchg
dec
mov
push
xor
mov
outsl
mov
pop
lahf
leave
pushf
cmp
cmpsb
sbb
movsb
icebp
jbe
out
pop
xor
or
popf
cmp
insl
stc
push
shl
sub
sub
xchg
xchg
dec
push
call
cmpb
dec
or
push
fbld
outsl
icebp
pop
into
hlt
test
aad
mov
dec
pop
rcl
in
adc
or
mov
cmc
dec
in
inc
xchg
jnp
jge
fcompl
inc
fdivl
fldenv
jno
rcrb
ficomps
jns
mov
rolb
sti
scas
ror
fisttpll
jbe
arpl
scas
in
in
pop
loopne
test
aam
inc
add
dec
vpcmpgtw
dec
test
rcrb
cmp
adc
jno
mov
or
dec
int
jmp
jl
or
int3
flds
pop
fstpl
movsb
jne
popa
xor
and
data16
and
scas
stos
test
dec
dec
int
mov
adc
push
loopne
or
adcb
movsl
cmp
xor
mov
roll
fld1
xchg
and
adc
aad
test
jno
scas
in
xchg
fdivrl
orb
xor
adc
test
push
jb
leave
hlt
jno
gs
jne
and
movsb
lock
sbb
sbb
adc
sub
movb
jmp
aas
jg
lods
dec
out
je
int3
idivl
pushf
rcll
je
out
jne
xchg
cltd
push
fnstcw
sbb
outsb
into
xchg
int
int3
inc
loope
rcll
add
jne
adc
and
cltd
outsb
pushf
adc
fstl
movsl
in
jmp
mov
leave
dec
cmp
jge
aas
loopne
pop
or
roll
dec
xchg
and
pop
adcb
or
push
insl
adc
push
btr
call
out
imul
decl
adc
xchg
xor
adc
inc
and
lahf
pop
cmp
xor
hlt
or
or
test
or
cmc
shll
push
inc
push
aaa
cltd
xor
mov
enter
mov
iret
jbe
out
jne
vmovapd
pop
lret
push
lods
xchg
jge
adc
or
cs
fcoms
enter
das
mov
dec
ja
push
es
sbb
popa
fdivs
jmp
nopl
in
mov
inc
adc
and
sub
adc
or
movsl
fldl
pop
out
mov
icebp
sbb
out
sub
rcr
xchg
in
addr16
mov
xor
and
xor
lock
or
shrb
pop
jmp
mov
xor
lds
sbb
sbb
int
push
ss
dec
movsl
stos
and
mov
mov
loope
adc
jne
insl
popa
xchg
cmpsl
cmp
sbb
loopne
dec
icebp
sbb
jg
add
cmp
xor
or
sub
xor
je
test
imul
sbb
cmp
test
loope
mov
dec
adc
in
in
mov
movsb
loope
ret
dec
xor
sbb
out
cmp
popa
in
loope
jno
inc
dec
std
cmp
icebp
dec
mov
cmc
scas
cmp
fiadds
fwait
outsb
fcomp
push
ds
sub
jle
push
jle
popf
int3
js
cld
mov
inc
pop
mov
cmp
mov
in
loopne
inc
in
or
sub
mov
rorl
inc
sbb
sbb
push
mov
mov
pop
in
mov
enter
lea
lods
shll
jae
test
cmp
adc
icebp
in
fucomp
xchg
jne
loopne
cld
and
xchg
jmp
movsl
rcrl
cmc
in
icebp
push
cmp
xchg
loopne
push
les
push
pop
pop
out
mov
jnp
adc
fs
sub
lods
mov
mov
and
jmp
daa
xchg
movsl
push
stos
dec
adc
loopne
hlt
movb
leave
cmp
popf
sbb
fistpl
das
or
inc
loop
loopne
je
mov
popf
fwait
and
das
fnstcw
xor
push
sti
nop
push
imul
lods
jmp
xor
jne
in
cmp
sub
repz
mov
add
in
in
and
mov
in
adc
jne
aam
xchg
xchg
sbb
lods
add
push
mov
pop
push
add
cmpsl
loopne
fucomp
shlb
cmp
in
int3
fistpl
int
xchg
fdivl
mov
leave
sub
sub
adc
xchg
add
test
in
mov
out
mov
lods
xor
loope
inc
rclb
rcrb
or
sbb
jmp
scas
aad
in
out
repnz
ja
ss
inc
lds
loop
or
test
stc
mov
aaa
adc
push
xchg
adc
jl
mov
push
flds
xor
insl
int3
gs
rorl
test
jns
pop
jmp
test
rorb
rorb
adc
lock
push
imul
sub
shr
cli
dec
mov
cmpsl
or
jmp
stc
mov
insl
test
cmp
and
xor
imul
std
pushf
jmp
add
inc
mov
xchg
cmp
adc
into
push
int3
mov
xchg
test
popf
in
stos
insl
in
adc
xor
cltd
fdivs
xchg
sbb
out
mov
call
fmul
lahf
adc
fnstcw
addr16
int
aad
cltd
xor
inc
mov
int
test
bound
xchg
pop
or
in
in
test
or
fstpl
push
mov
jne
out
sti
outsb
into
jmp
sbb
test
jbe
xchg
rclb
bound
fsub
sbb
frstor
mov
mov
mov
imul
sbb
jno
cmp
cmp
repnz
and
icebp
push
dec
popf
in
adc
loope
pop
leave
fstps
dec
mov
inc
mov
aad
sbb
sub
pop
int
loope
adc
rcrl
and
icebp
outsb
movsb
and
xchg
jp
gs
xchg
push
in
adc
outsl
xchg
lds
in
test
icebp
dec
ret
mov
adc
scas
pusha
popa
cmp
mov
adc
inc
adc
mov
iret
jne
sub
int3
jno
into
out
outsb
mov
aas
fldcw
xor
sbb
sbb
dec
aad
outsl
nop
mov
jg
in
test
pop
ja
je
and
push
pop
sarl
mov
sub
insl
popa
mov
and
push
push
dec
les
or
cmp
cmp
mov
adc
popf
jne
fcoms
add
outsb
ljmp
mov
inc
call
mov
or
popf
in
sti
sbb
mov
cltd
fbstp
mov
int
shr
movsb
leave
sarb
adc
mov
icebp
push
icebp
int3
inc
push
popf
fnstcw
mov
xchg
in
fcomps
jno
sbbb
roll
decl
das
inc
mov
cmp
pop
pop
pop
dec
push
popf
icebp
out
outsb
add
mov
mov
sbb
aam
mov
mov
xor
enter
adc
dec
in
mov
add
sub
xchg
cltd
popf
xor
xor
mov
in
lds
imul
aam
movsl
enter
mov
fcom
rcll
pop
loopne
shlb
pop
int
cmp
sub
cmp
cmp
sbb
fnsave
pop
sbbb
in
inc
es
into
popf
jns
decb
mov
test
sub
cmp
inc
sbb
push
sub
push
aam
int3
mov
and
dec
sbb
push
push
mov
insl
out
sbb
movsl
sbb
mov
jno
jne
popa
mov
cmp
int
or
fnop
add
dec
or
icebp
movsb
fdiv
sub
fcoms
mov
notb
es
hlt
cmp
popa
loope
sub
cmpsl
push
rcll
nop
mov
sub
pop
in
cmpsb
mov
cmp
lret
dec
pop
and
inc
insb
adc
lock
cmpsb
mov
incb
sbb
ficoms
pop
or
xchg
in
jmp
in
loop
sub
mov
sahf
movsl
pop
xchg
rorb
cmp
mov
sbb
jmp
cmp
sbb
daa
shlb
dec
into
and
lods
test
fldcw
in
adc
call
cmp
jle
lret
xor
loopne
inc
idivl
popa
xchg
enter
int3
loop
pushf
shrl
and
cltd
push
sarl
seto
clc
mov
adcb
leave
call
push
fcomps
sub
insb
in
mov
aad
mov
aam
dec
divl
cmp
es
and
dec
leave
int3
pop
faddl
insl
push
pop
sbb
enter
test
xor
mov
iret
gs
mov
fnstcw
std
cmp
add
add
in
cmp
adc
leave
stc
sub
lock
xor
je
xchg
sub
loopne
and
sbb
lods
jno
popf
dec
xor
lret
adc
adc
gs
sbb
ficomps
pop
sub
sarl
cmp
xchg
je
or
ret
pop
adc
cmp
popa
in
mov
dec
in
cltd
pop
movsl
sub
shl
fsts
addr16
and
pop
push
xor
fbld
and
mov
pop
pop
dec
mov
xchg
popf
cmp
inc
popa
imul
sub
pop
int
sub
xor
or
xor
add
push
cmp
push
mov
repnz
adc
cmpsl
jns
sbb
xor
sarl
in
lds
test
enter
adc
ds
lods
int3
leave
push
arpl
jl
fdivl
in
pop
movsl
inc
sub
dec
xchg
aaa
xor
popf
into
or
sbb
xor
mov
daa
addb
fildll
inc
out
jo
aam
xor
iret
imul
xor
fcompl
sub
inc
test
leave
mov
jae
sarb
lea
or
lock
cmp
in
mov
aad
insb
sub
add
js
mov
dec
push
pushf
test
pop
sub
xchg
mov
inc
or
lods
cmc
fdivs
hlt
add
mov
leave
xchg
dec
jl
pop
mov
or
cmp
dec
aad
in
into
xor
iret
lahf
sbb
sbb
in
inc
mull
mov
mov
sub
lds
push
jne
in
xchg
pop
mov
call
popf
pop
sub
push
in
fadd
jne
lret
pop
xchg
xchg
adc
call
adc
sub
mov
outsb
and
shr
mov
int3
mov
jbe
adc
xor
xchg
inc
sub
xchg
js
sbb
adc
and
mov
das
enter
insl
adcb
dec
xchg
mov
dec
sarl
shr
xor
and
ret
aaa
adc
insl
ss
xchg
add
xchg
inc
push
test
shll
fsubrs
push
mov
pop
cmp
dec
xchg
sbb
sahf
movlps
mov
cmp
dec
mov
or
in
push
fnstsw
popa
imul
lock
rclb
int3
dec
xchg
dec
shll
icebp
or
sbb
adc
cmp
pop
and
sub
pop
out
lret
jl
stos
push
mov
and
mov
adc
jno
adcl
inc
cmp
dec
sub
xlat
rcrl
push
jg
lods
sbb
jno
es
cmp
sbb
or
fdiv
jmp
adcb
aam
ds
or
push
push
sbb
xor
int
sbb
xor
out
cmp
inc
hlt
loopne
push
jns
and
sub
in
inc
roll
ret
xchg
in
push
pop
mov
mov
in
andb
xchg
aad
out
mov
mov
popf
fs
pop
sbb
pusha
xchg
jmp
add
rorl
cmp
pop
or
lret
cmp
lret
adc
adc
mov
insl
movsl
cmp
pop
mov
cs
add
and
dec
mov
mov
or
daa
cmp
dec
jns
insl
vmaxps
imul
dec
mov
mov
mov
adc
shl
mov
aad
push
dec
in
lock
nop
daa
adc
add
test
add
sahf
jne
dec
out
inc
push
popa
xchg
xor
jle
cmp
push
xor
pop
pop
jne
xchg
inc
sub
int3
mov
fsubr
fsubrs
dec
xor
cmc
cmp
in
mov
add
mov
cld
lret
out
pop
dec
jno
sbb
add
cmp
mov
hlt
movd
jne
fnsave
aas
gs
je
out
xor
inc
add
cmovae
ret
mov
mov
pop
in
insl
jmp
pop
mov
loopne
lret
cltd
call
int3
lea
push
shrl
enter
sub
dec
xor
mov
scas
les
cmp
mov
sub
ror
fildl
xchg
test
inc
icebp
adc
add
movsl
fsubrs
mov
lds
inc
mov
adc
out
sbb
jno
arpl
mov
and
sbb
sbb
std
mov
mov
ror
pop
mov
and
sbb
gs
notb
ds
push
fnsave
lock
andb
xor
and
and
inc
or
xchg
xchg
rcr
int3
aad
xchg
xchg
aaa
call
mov
in
fcomps
pop
mov
pop
jne
aad
test
dec
lret
and
in
sbb
sub
fyl2x
inc
xchg
lea
fdivr
inc
outsb
dec
adc
movsl
into
in
push
lds
call
ja
in
fs
lods
movsl
shll
jb
xor
dec
cmc
aam
test
outsb
push
push
aad
hlt
scas
mov
sub
xor
push
fucomp
or
sub
in
mov
jne
jmp
inc
xor
cli
movsl
inc
iret
mov
push
iret
xor
or
cmp
cmc
loopne
loope
xlat
imul
inc
js
mov
sub
orb
inc
push
cmp
push
loopne
aas
aad
xor
cwtl
pop
mov
add
pop
out
pop
repz
adc
sub
dec
dec
mov
in
leave
movsl
fldl
lds
jl
loop
movb
hlt
nop
sbb
sbb
faddl
mov
rclb
mov
mov
pop
cmp
pop
push
arpl
in
xchg
dec
roll
popf
mov
mov
mov
dec
cmp
inc
xchg
inc
mov
gs
add
mov
popa
lock
xchg
xchg
in
iret
xor
xchg
and
sub
fstl
inc
xchg
and
movsb
lods
sarb
and
mov
pop
inc
adc
jecxz
xlat
lods
mov
dec
ss
mov
in
lea
insl
xchg
xchg
andb
dec
push
repz
push
div
xor
fstpl
or
adc
sub
pop
imul
pop
sub
in
cmp
mov
add
and
lea
shrl
pop
loope
mov
cmp
mov
cld
fsubs
sub
gs
sub
mov
xor
jno
loopne
xor
cltd
mov
pop
dec
dec
jge
sub
jge
movsb
imul
loope
mov
insl
cmp
jmp
sub
inc
push
lods
lea
jne
mov
and
int
xor
in
shr
mov
push
in
sub
push
cmp
sbb
cli
lds
pop
fcoms
add
adc
imul
xor
mov
into
adc
fs
in
mov
xor
ja
lods
bound
dec
cmc
push
pop
jo
faddl
sbb
lods
or
add
scas
cmc
loop
stos
or
rcrb
loopne
leave
cltd
jnp
jmp
or
push
sbbb
mov
cmp
in
into
push
outsl
mov
imul
dec
sbb
fsubrl
mov
or
shlb
mov
adc
gs
fstl
jne
push
xchg
mov
daa
test
fidivrl
fcomi
xor
scas
jg
daa
fsubrl
adc
paddusb
mov
pushf
fdivrs
dec
cld
inc
mov
shrb
imul
sbb
daa
jge
mov
andnpd
fldenv
jno
jne
adc
popa
and
in
push
aaa
test
push
jmp
jmp
xor
in
stos
jl
outsl
mov
int3
int
leave
fcoms
sbb
xchg
sbb
sub
int
pop
cltd
daa
or
dec
xlat
adc
sbb
cmp
lea
pop
jnp
divb
jmp
call
lock
cmp
mov
int
inc
and
push
cltd
rcll
xor
rorb
pop
push
adc
movsl
lods
int
aad
pushf
in
popf
dec
mov
inc
in
loope
push
gs
fmul
enter
stos
nop
mov
jge
icebp
out
gs
cmpsb
sbb
jne
pop
popa
in
sub
push
dec
dec
xchg
mov
in
shlb
pop
cmp
mov
aad
adcl
leave
and
push
pop
mov
push
ljmp
xchg
mov
scas
in
fdivrs
fbstp
and
mov
adc
shrl
or
jne
in
inc
rcll
mov
inc
cmc
lds
mov
nop
ret
enter
xchg
movsl
cmp
xor
insl
insl
sub
push
adc
sysexit
and
mov
push
stos
mov
rolb
movsl
fdivrs
imul
inc
pop
fidivs
into
gs
xchg
sub
cltd
dec
addr16
pusha
je,pn
out
enter
inc
dec
or
shlb
fldcw
in
sub
adc
xchg
cmp
mov
sbb
mull
ja
and
sbb
jno
jno
mov
mov
adc
loopne
sbb
movsl
or
ljmp
aam
test
pop
adc
xchg
mov
inc
lea
sub
test
mov
in
add
or
push
sbb
sbb
push
imul
sbb
xchg
adc
in
mov
push
pop
adc
jae
int3
inc
xor
push
nop
pushf
clc
push
fcmovbe
jne
movsb
lds
fwait
xor
lock
push
jl
adc
mov
or
data16
or
xlat
cmp
in
push
ja
pushf
clc
mov
mov
cmc
lock
inc
outsl
xor
or
jns
or
pop
cmp
das
pop
insb
cmp
leave
pop
inc
pop
fiaddl
in
sub
leave
in
dec
fwait
sbb
shrl
sbb
fs
pop
inc
sub
push
shll
dec
push
aad
leave
dec
arpl
pop
add
cmc
inc
and
inc
cltd
mov
push
int
lret
leave
push
lods
enter
rcrl
shrb
cmp
mov
lock
add
aam
xlat
test
push
mov
rcrl
xchg
pushf
insl
cmp
repnz
jl
sub
mov
xlat
pop
push
jae
aam
push
rorb
push
jmp
cltd
pop
mov
jp
pop
push
pop
sub
mov
popf
push
test
pop
into
mov
cs
sarb
aaa
in
cmc
mov
mov
xchg
sti
sbb
decl
sub
rcrb
mov
in
xchg
xor
cmp
jne
or
sbb
pop
orb
popa
mov
test
jno
aam
push
add
and
cmp
xor
pop
lret
in
aam
fcompl
mov
dec
les
test
cmp
push
aas
in
int
pop
insl
pop
sbb
int3
in
nop
fimull
mov
out
dec
les
pop
push
movsl
lret
mov
repnz
ftst
call
filds
ret
aam
rcrl
mov
fwait
and
xchg
gs
lock
or
inc
mov
aam
ficoms
out
push
popf
xchg
popa
fadd
rclb
lea
sbb
rorl
mov
popl
and
inc
in
mov
and
xor
cmp
outsl
mov
sbb
aas
adc
xchg
pop
lea
push
into
sub
leave
inc
fprem1
int
mov
sbbb
ja
aaa
scas
adc
dec
movsl
mov
in
ror
addr16
fadds
loop
int3
shll
and
lock
or
lret
sarl
aam
xchg
xor
inc
mov
insl
and
imul
mov
add
in
aaa
jmp
cmp
inc
and
adc
call
data16
fst
movsb
pop
lock
lock
cmp
movsl
fs
xor
stos
xchg
and
pop
push
jg
mov
call
jmp
cmp
shrl
aaa
aam
outsb
push
add
insl
sbb
add
jne
sbb
and
inc
out
dec
repz
out
mov
mov
lock
sub
leave
shl
int3
xchg
xchg
xchg
cmc
lods
les
lock
pop
sub
in
call
push
cmp
jmp
shlb
or
cmp
push
icebp
mov
loope
dec
xchg
lods
sub
aad
sub
pop
loope
adc
inc
movsb
adc
das
jne
dec
jno
call
cli
leave
test
out
in
jmp
push
sbb
gs
adc
and
push
sub
loope
adc
mov
xchg
dec
shl
or
adc
sub
mov
into
fdiv
lds
cmp
mov
sub
xchg
mov
int
xor
decb
sbb
fisttpll
mov
add
gs
push
pop
mov
rcll
or
adc
ljmp
fsubs
xchg
adc
ficompl
or
add
call
call
dec
popa
cvtps2pi
cltd
dec
leave
mov
loopne
jg
addb
mov
cmp
xor
mov
sub
int3
shrl
nop
cli
mov
pop
test
enter
out
sbb
frstor
or
mov
push
mov
lods
inc
or
dec
jno
jl
mov
xchg
movsb
xchg
cwtl
in
xor
sub
xchg
popa
ljmp
and
adc
jne
in
push
lret
cld
cs
and
sar
push
pop
dec
push
enter
xor
test
adc
daa
nop
xchg
icebp
push
mov
inc
push
mov
xchg
and
xchg
dec
jp
lcall
outsb
xor
fisttpll
fldt
jle
aam
sbbb
fsubs
inc
mov
fldenv
adc
pop
xchg
pop
cmp
sub
adc
xchg
jp
movsb
mov
mov
or
fnstenv
in
shrb
aam
sbb
push
pop
or
and
in
in
mov
insb
mull
and
dec
imul
cltd
adc
xor
jmp
inc
adc
cmp
in
fnstcw
cmp
and
shlb
test
mov
push
jne
mov
xor
out
lahf
xchg
xchg
mov
xor
insl
push
jb
mov
popf
push
add
lods
int
xchg
ljmp
shl
and
cmp
and
pop
dec
adc
sub
jno
js
xchg
nop
xchg
push
mov
ja
dec
jg
adc
shl
pop
popa
outsb
mov
test
and
xchg
hlt
add
dec
imul
scas
sub
mov
int
insl
movsl
cmp
call
les
jle
mov
dec
or
int3
cmp
ja
fsub
and
xor
dec
cltd
int
xchg
mov
lods
jne
dec
fxch
outsl
fstl
outsb
jmp
mov
pop
fdivr
lds
insb
mov
jle
mov
push
gs
cwtl
inc
in
fimull
adc
icebp
loopne
sub
push
cmp
lret
push
cmc
and
inc
outsb
jne
mov
xchg
cmp
aam
mov
adc
popa
mov
xor
adc
xor
imul
popf
fs
in
in
sub
popa
cmp
dec
outsl
mov
movsb
mov
xor
lods
ds
mov
dec
cmp
sub
rcll
sub
xchg
dec
fmuls
adc
xor
mov
es
inc
jg
shlb
fmuls
pop
dec
and
sbb
sarl
jmp
sub
movsl
mov
jne
adc
enter
daa
and
nop
sbb
cmp
jle
jno
adc
jle
dec
insl
bound
rcrb
popa
inc
xchg
mov
call
inc
nop
ja
mov
shrl
sub
sbb
adc
mov
xor
sbb
adc
sub
mov
push
xchg
gs
mov
mov
xchg
cmp
dec
add
repz
sbb
leave
adc
mov
dec
in
and
jno
arpl
adc
and
shll
in
psraw
mov
je
jle
in
mov
insl
or
rorb
sbb
fsub
jno
sub
in
mov
cmp
mov
cmp
into
mov
push
mov
jne
lret
push
enter
loope
and
sub
jle
divl
rolb
cmp
sub
loopne
mov
loope
xor
daa
and
mov
dec
mov
and
push
insb
jno
sub
fldl
inc
xor
mov
jg
and
push
int3
xchg
lds
adc
outsb
xchg
mov
movsl
xchg
call
cmpsl
cltd
mov
sub
addr16
leave
into
push
into
xchg
ror
sub
in
scas
sub
cmp
cmp
mov
jl
mov
cmp
sub
repz
mov
into
lcall
loope
mov
jno
in
insb
and
popa
int
rcrl
aaa
icebp
mov
bound
sub
fldz
sahf
push
icebp
gs
stos
or
inc
aam
mov
sub
stos
sbb
popa
lret
test
aad
roll
pop
mov
mov
and
insl
jnp
mov
fstps
sti
adc
sar
sub
lea
icebp
fcompl
imul
pop
in
std
mov
sbb
popl
push
movsl
dec
test
jle
push
loopne
popf
and
stos
or
lds
xchg
in
aad
pop
rcl
lock
int
mov
gs
lock
fcoms
cmp
jmp
fcmovnb
pop
cltd
pop
fs
cmpb
arpl
imul
xor
mov
inc
jne
adc
dec
fsubl
leave
mov
in
lods
cltd
or
fldcw
icebp
cmp
leave
or
out
out
inc
xchg
or
sub
push
leave
adc
fldcw
mov
rcrb
inc
cmp
outsb
mov
lock
pop
lea
cltd
dec
ja
es
sub
popf
in
lds
gs
jne
and
loope
icebp
pop
or
stos
cmc
int3
lahf
popa
dec
int
sarb
jmp
stos
dec
ja
sbb
int3
sub
mov
ljmp
sbb
ud1
sub
aas
push
les
jg
push
aad
cld
call
cltd
pushf
lds
and
pop
and
data16
test
and
nop
popf
int
fcompl
seta
adc
xchg
dec
out
cmp
push
add
mov
sub
and
int3
outsl
dec
mov
inc
adc
cltd
push
rcll
pop
jge
movsb
lds
lcall
test
dec
cvtpi2ps
out
add
add
adc
dec
lock
in
adc
pop
int3
xor
mov
icebp
sub
aam
sbb
mov
add
push
inc
sbb
cmc
lds
pop
aad
pop
pusha
movsb
pop
mov
sub
loope
dec
xchg
gs
add
inc
enter
pop
int
sahf
inc
push
daa
fstpl
call
xor
adc
icebp
cmp
cld
mov
adc
cmpsb
je
shlb
mov
mov
dec
lods
pushf
sbb
add
adc
cmp
mov
add
or
mov
add
sub
in
fcom
xlat
push
mov
jne
movsl
jae
mov
push
loopne
cmc
xchg
adc
leave
mov
in
movsl
cltd
lea
test
fnsave
xor
test
fmulp
mov
mov
mov
inc
cmc
pop
cmpsl
sub
aaa
push
pop
gs
mov
push
test
in
aam
insl
jns
into
sbb
jle
push
sar
hlt
leave
clc
int
bound
lds
mov
popa
in
xor
xor
sub
fdiv
cmp
in
cld
cmp
dec
pushf
icebp
aas
lret
xchg
fcomi
aam
shrb
and
add
ljmp
dec
jno
shll
inc
fcomps
dec
rorb
sub
inc
dec
in
sbb
icebp
mov
call
aam
rcrl
xor
shlb
je
adc
inc
mov
jmp
pushf
inc
mov
xor
and
mov
mov
mov
pop
mov
adc
lods
jne
outsl
or
faddl
movsl
or
or
adc
fwait
outsl
rorb
and
inc
jmp
fsubr
ror
ret
cltd
mov
in
mov
sbb
dec
clc
and
jno
xor
popf
push
out
sub
shll
shrl
into
mov
xor
sub
or
inc
fnsave
aad
xchg
sbb
push
or
cmp
popf
pop
imul
popa
adc
dec
cltd
inc
mov
cmc
ja
mov
lahf
pop
jne
jge
and
push
sbb
inc
cmp
and
pop
mov
rol
rcl
xor
movsb
aas
leave
popa
out
adc
inc
sub
inc
xor
inc
jne
loopne
mov
inc
cmp
adc
mov
movsl
popf
ljmp
pop
and
cld
and
popa
insl
std
adc
inc
stos
jle
mov
test
inc
ljmp
popf
and
xchg
push
cmp
mov
mov
cltd
loope
adc
fxch
jge
in
mov
gs
int
push
test
insl
rcrl
mov
inc
adc
rorb
adc
fsubrl
jne
out
pop
sub
dec
cmp
adc
pop
shll
xor
inc
add
mov
loopne
dec
imul
mov
cmp
pop
movsl
push
frstor
outsl
push
xchg
test
outsl
pop
test
ret
fmul
pop
mov
scas
inc
sbb
pop
xor
in
insl
sub
mov
or
sub
add
popf
xor
loope
rclb
sbb
es
push
pushf
call
scas
mov
fisttps
aam
les
fdivrs
enter
mov
in
mov
add
shlb
mov
xor
push
rcr
int3
in
mov
into
sbb
dec
dec
xor
xor
in
push
dec
sub
lock
inc
mov
xchg
leave
pop
sub
clc
push
test
xor
pushf
and
out
cmp
pop
decl
inc
and
xchg
je
rol
adc
in
mov
cltd
mov
dec
cmp
les
xchg
cmp
sub
mov
and
sbb
or
sahf
movsl
in
pop
cmp
pop
mov
add
dec
sbb
frstor
aam
loop
cltd
and
xchg
adc
push
adc
and
leave
push
sbb
popa
inc
sub
mov
adc
rcl
out
sbb
mov
ss
mov
mov
push
pop
std
loope
fcoms
mov
int3
out
sbb
lock
ss
enter
or
fstp
loop
mov
xlat
jle
dec
xor
inc
dec
adc
inc
mov
or
in
inc
dec
xchg
faddl
sub
insl
jmp
in
cmp
cmp
cmp
sbb
xor
and
popa
rcll
adc
aam
xor
stc
sbb
dec
loope
push
mov
xchg
in
push
adc
mov
in
das
ret
cmc
lock
adc
out
lods
xor
fcomps
sub
addr16
add
shl
fsubl
pop
rorl
add
xchg
in
int
and
lods
iret
push
inc
ffree
adc
movsb
pop
imul
nop
rcrb
mov
fcoms
movsl
enter
pop
fldenv
shr
loope
in
gs
adc
out
rcl
pop
lahf
and
out
aas
leave
push
es
outsb
int3
repz
sub
jle
jge
mov
cmc
test
sbb
adc
jmp
stos
rcr
cmc
dec
lea
das
mov
out
xlat
pop
in
cmp
adc
dec
mov
mov
cmp
add
movsl
adc
aad
mov
jns
xchg
in
insl
out
add
jne
sbb
loope
fdivrl
jp
pop
mov
adc
jne
xchg
jno
adc
in
lds
cmpsb
jno
pop
aaa
adc
in
mov
movsl
cmp
loopne
xchg
test
and
das
fld
jge
pop
insl
popf
xor
cmp
fldl
int
pop
sub
push
sbb
in
mov
push
or
imul
pop
sbb
in
mov
aam
xchg
lds
and
push
in
scas
mov
jecxz
and
dec
scas
fwait
rcl
cmp
and
inc
mov
into
mov
push
sub
mov
cltd
fs
insl
movsl
mov
int
shrl
loope
in
ja
jo
aad
add
dec
popa
call
dec
lods
leave
mov
cmp
pop
jg
insl
cwtl
jns
outsb
loopne
mov
or
mov
mov
fbld
xchg
imul
ret
out
fdivrs
roll
and
cmp
dec
and
insl
out
enter
loopne
or
ret
pop
in
out
xchg
xchg
jecxz
push
testl
cltd
fsubrl
cmp
leave
adc
call
push
insl
int3
sub
sub
imul
adc
ret
push
dec
out
sub
sbb
test
int
in
or
mov
popf
jne
sbb
leave
shll
in
lods
sub
push
outsb
out
dec
popf
xchg
jge
adc
cmp
cmp
jne
pop
inc
aam
cld
sbb
dec
call
call
push
orl
mov
sub
dec
push
in
aad
cmp
outsb
mov
inc
pop
pop
adc
push
sub
adc
mov
cmp
out
xor
movsb
lock
aas
iret
hlt
aam
mov
int3
aad
movsl
outsb
dec
outsb
xor
rorl
fists
cmp
outsl
out
xchg
sbb
mov
rcll
and
fcoml
in
dec
add
daa
insl
sbb
imul
fdivrp
idiv
adc
stc
mov
xor
pop
rorb
xchg
call
xor
cmp
adc
in
push
mov
lds
int
fwait
out
mov
mov
adc
or
lods
pop
jo
dec
sub
sbb
push
jnp
mov
insl
cwtl
pop
cmp
repnz
leave
shlb
outsl
inc
shll
movsl
pop
int
add
lock
and
in
les
fdivr
push
dec
cmp
adc
cltd
jmp
loope
cmp
mov
lcall
pop
repz
in
incl
lahf
mov
sub
push
fs
lds
mov
shlb
cmp
lods
sbb
mov
cltd
xchg
xchg
push
push
rcrl
adc
test
mov
mov
and
push
popf
rclb
popa
cltd
xlat
je
sub
add
loopne
insb
std
fxch
neg
gs
lds
push
cmp
xchg
sbb
mov
mov
in
aam
push
and
dec
aas
or
pop
cmp
pop
insl
notl
out
ja
test
mov
push
jmp
fldl
shll
les
in
sbb
push
add
and
mov
sarl
xor
mov
dec
sbb
popf
int
jmp
int
cmc
dec
loope
fldenv
lds
cmp
mov
xchg
cmp
call
lock
xor
jno
daa
mov
xchg
into
mov
popf
cmp
fldl
push
sub
insl
aaa
mov
pop
dec
fmuls
push
xor
or
gs
fldl
adc
das
fnstenv
lea
add
push
pop
lret
jecxz
dec
inc
mov
inc
int3
adc
shrb
mov
adc
mov
movsb
mov
jle
lods
mov
vphsubbw
lea
testb
xor
aam
inc
iret
int3
adc
dec
xlat
lods
and
add
movsl
adc
xchg
fstps
enter
sub
mov
movsl
scas
insb
insb
push
lock
and
mov
xor
icebp
xchg
and
punpckhwd
je
lds
popf
pushf
mov
mov
dec
adc
fxch
lods
cltd
rclb
adc
clc
and
push
stos
adc
xchg
jge
push
pop
sbb
cmp
enter
sbb
cmc
shr
scas
mov
aad
fwait
mov
jmp
popf
fdivs
lods
enter
rclb
add
lock
mov
pop
xchg
pop
mov
call
les
loope
shll
popa
orb
push
lods
jne
mov
mov
enter
sub
fsubr
icebp
fstpl
adc
int
pop
int3
xchg
lods
jne
insl
sbb
call
push
xor
call
sbb
icebp
loopne
pop
imul
adc
popf
add
or
ljmp
imul
gs
mov
jbe
and
popf
mov
pop
movb
ror
sahf
inc
in
sqrtps
cmp
inc
sbb
sbb
pop
xor
fstpt
shrl
popf
pop
movsb
jmp
xchg
sbb
int3
mov
sbb
and
in
shrb
pop
gs
fmul
adcb
mov
test
jmp
adc
mov
pushf
jno
out
pop
push
scas
mov
mov
add
clc
leave
fldcw
or
stos
add
and
inc
mov
dec
jb
in
out
push
call
fdivr
push
clc
jne
adc
cmp
mov
ljmp
fsubr
jne
pop
roll
pushf
mov
popa
loopne
mov
sbb
push
fdivr
aam
xchg
or
outsb
add
fsubs
add
adc
movsl
lods
lea
push
mov
cmp
mov
fldl
dec
sbbl
adc
jmp
popa
shrb
dec
sbb
in
sbb
aad
add
mov
jbe
dec
popf
xor
xor
sub
dec
in
sub
aad
push
adc
lods
ror
and
cmp
gs
sbb
mov
mov
mov
mov
scas
lock
fsubs
mov
pop
andl
mov
mov
push
fdivrl
fwait
and
sbb
push
cmpsb
leave
pop
jbe
gs
in
mov
cmpsl
or
xor
xlat
or
push
in
xor
ret
pop
mov
sarb
pop
sbb
lods
ljmp
gs
xchg
out
mov
jmp
sub
loopne
test
jno
aam
mov
pushf
int3
in
mov
fs
mov
ljmp
mov
lock
aad
mov
cmp
fmull
leave
sbb
stc
into
pop
push
mov
call
jns
sbb
cmc
mov
dec
loope
adc
shr
in
int
int
mov
test
int
mov
xchg
jmp
scas
fdivl
inc
sub
scas
xchg
add
and
and
lods
push
sub
cmp
and
pop
pop
adc
xchg
sbb
sbb
add
pop
push
insl
mov
leave
and
pop
cmpsl
adc
pop
mov
dec
xor
xchg
push
cmp
aad
popf
xchg
mov
mov
mov
test
xor
out
add
in
loope
sub
divb
jmp
pop
int
fsubs
sub
and
and
lret
mov
pop
mov
inc
push
std
popf
dec
lods
loop
movsl
loope
lods
in
jecxz
xchg
xor
sti
fs
adc
adc
and
push
ror
jle
fstpl
sub
xchg
call
add
imul
cmc
jne
enter
outsb
mov
in
icebp
lods
or
pop
movsl
xor
xor
addl
mov
xchg
mov
dec
movsl
dec
imul
repnz
pushf
cmp
push
adc
sub
fdivrl
add
in
push
imul
and
aad
mov
xchg
dec
pop
in
jg
sub
jmp
jno
mov
lock
movsl
mov
inc
fidivrl
sarl
inc
mov
in
push
mov
fwait
mov
sbb
loopne
mov
cmc
inc
pop
int3
mov
add
insl
and
sbbb
cmp
sbb
sub
adc
test
aad
pop
outsb
mov
jo
movsl
pop
scas
jle
dec
in
fistl
pop
test
lret
int3
call
adc
lds
or
aad
pushf
stc
out
inc
les
adc
or
std
inc
test
mov
and
lods
or
aam
dec
shl
jmp
jne
subl
xlat
xchg
movsb
sahf
test
add
mov
leave
sti
lret
fimuls
xor
inc
cmc
cmp
enter
arpl
hlt
sarl
std
dec
mov
sub
fnsave
adc
cmp
and
fmull
cltd
imul
sbb
outsb
lods
loope
rcll
mov
cmp
cmc
pop
sti
in
sbb
in
pop
push
loopne
mov
push
dec
mov
int3
lock
xchg
in
test
sahf
cmpps
rolb
push
imul
adc
xchg
mov
insb
inc
popa
dec
dec
sbb
dec
mov
pop
test
xor
xor
inc
iret
test
lret
jae
lret
mov
inc
out
fsts
bound
out
sbb
movsb
insl
enter
jl
leave
popf
in
or
les
call
inc
jne
test
xchg
jb
sub
mov
js
in
jecxz
in
das
dec
add
pop
lods
xor
shll
pop
fmull
mov
xor
xor
out
daa
pop
inc
inc
dec
int3
fildl
pop
dec
dec
push
push
fprem1
adc
cld
jae
inc
cmp
insl
imul
mov
cmp
mov
xchg
sub
mov
cmc
sbb
inc
adc
sub
mov
cli
sahf
sub
loopne
push
jg
xor
sbb
cmp
inc
aaa
or
mov
inc
movsl
push
sub
xchg
in
or
in
mov
dec
sbb
cltd
or
insl
aam
fxch
lret
bound
frstor
xchg
enter
stc
mov
inc
xor
inc
xchg
int
sub
repz
cmc
cmpsb
fs
insl
dec
pop
mov
push
mov
xlat
mov
jo
jno
in
pop
dec
push
cmp
enter
sub
popf
inc
xchg
cltd
adc
jmp
xchg
push
jno
xchg
adc
xor
enter
aas
xchg
jle
and
rorl
movsl
mov
test
jle
inc
sub
sahf
adc
pop
add
push
gs
rcrb
enter
and
popa
xchg
pop
jge
int3
das
add
and
xor
leave
movsb
inc
dec
fidivrs
fistpl
cmp
jae
cs
popf
out
dec
loop
xchg
jge
cltd
inc
cmp
push
test
dec
mov
int3
cltd
imul
popf
push
into
ret
fcoml
mov
add
jle
sub
sti
cmp
nop
mov
jg
gs
fs
mov
cltd
les
fbstp
loopne
push
insl
jle
icebp
add
dec
dec
mov
sbb
cmc
fadd
sbb
in
lock
test
mov
dec
fildl
lods
mov
fmuls
xor
sbb
test
popf
imul
jl
cmpsl
incl
sbb
pop
test
data16
sbb
push
and
mov
scas
push
aam
aam
and
loopne
dec
pop
mov
sub
mov
loopne
xchg
add
cld
ror
dec
ljmp
pop
jno
cmp
popf
or
mov
adc
fildl
push
and
insl
jno
push
inc
lret
and
ret
and
test
pop
rol
jne
cmp
push
jle
push
rclb
imul
push
lds
aam
insl
xchg
xor
int
fdiv
cmp
imull
pop
loopne
popa
adc
in
in
xchg
dec
or
in
dec
xchg
roll
sbb
push
lock
std
sub
shr
call
leave
icebp
jb
adc
arpl
repnz
mov
popf
loopne
adc
ljmp
and
push
sysexit
xchg
in
in
roll
inc
lds
and
cltd
sub
ljmp
xchg
aad
cmpb
adc
adc
mov
lock
xchg
cmp
test
or
dec
xor
in
enter
push
add
repz
sbb
xchg
push
movsl
fists
xor
sub
lock
mov
sbb
mov
inc
pushf
popf
jae
inc
push
iret
inc
mov
lods
lds
sub
leave
inc
mov
inc
repnz
pop
mov
sbb
adc
pop
out
mov
jge
mov
mov
cmc
rol
sbb
sbb
and
lods
push
cltd
loope
push
jle
out
std
or
and
mov
push
adc
fsubl
outsl
pop
lcall
rolb
aad
orl
std
dec
dec
cmp
pop
fst
xor
sub
mov
mov
rclw
loopne
leave
rorb
and
leave
shlb
cmp
imul
xor
sub
and
fists
mov
jno
pop
lock
xor
mov
outsb
jle
mov
inc
cmpsl
and
aad
outsb
mov
call
insl
out
cwtl
roll
pop
fnsave
adc
enter
int3
cmp
push
loopne
popf
or
or
orb
mov
cmc
mov
mov
lds
mov
sbb
jg
and
out
xor
scas
cmp
lcall
mov
iret
mov
and
jmp
in
repz
aaa
sbb
jne
outsb
loope
popa
pop
jle
dec
rclb
es
movsl
and
mov
sub
push
ret
ja
data16
clc
add
xchg
leave
loopne
adc
xor
inc
test
pop
int
mov
lods
imul
int3
sub
xor
adc
adc
push
cmc
xchg
ja
enter
fs
imul
sar
add
in
jne
pop
or
mov
mov
mov
sub
jg
scas
sahf
push
das
imul
adc
dec
sar
repz
pop
inc
push
std
adc
leave
cmp
rorl
xor
xor
sbb
cmp
insl
loopne
add
daa
add
add
out
insl
push
sbb
popa
sub
in
popf
and
mov
mov
adcl
adc
loopne
rcl
rorb
xchg
jno
inc
sub
sub
lret
push
in
aad
addr16
mov
aam
push
pop
shrl
sub
mov
adcb
mov
inc
pop
call
in
and
in
pop
icebp
adc
adc
fcomp
mov
and
shrl
or
mov
vhsubpd
shlb
pop
test
in
dec
push
sbb
fxam
call
int
insl
fstl
xor
cmpb
adc
test
out
in
jmp
adc
xlat
adc
push
cltd
jmp
fmuls
mov
enter
in
icebp
cmp
int3
out
mov
jge
adc
mov
call
cmc
enter
mov
fisttps
lret
fwait
mov
shl
mov
sbb
cmp
scas
pop
lods
in
cs
pushf
cmc
and
pop
les
sbb
jle
add
pop
inc
jno
xchg
mov
pop
cmp
outsl
lods
and
mov
xlat
lds
loope
scas
dec
test
aad
or
mov
dec
ret
shll
or
pop
cmp
imul
sub
sbb
pushf
call
lods
adc
lea
sbb
aad
jno
and
aad
std
cmp
push
and
push
insl
int3
in
mov
dec
mov
inc
call
adc
imul
pop
sub
ss
mov
mov
dec
push
out
xor
xchg
push
lods
sbb
mov
rcl
adc
cmp
sub
enter
insl
push
dec
movsb
jne
mov
dec
cmp
pop
pop
fnstcw
dec
inc
mov
call
shl
push
xor
and
mov
inc
mov
fsubrs
mov
insl
pop
cmp
jge
adc
jne
in
stos
sub
pop
or
call
dec
fldcw
mov
hlt
hlt
mov
jae
mov
fadds
in
lods
xor
sar
or
outsb
dec
adc
lds
lods
xchg
jno
mov
lock
push
lcall
sbb
cmc
mov
mov
mov
and
dec
pop
mov
push
inc
ffreep
leave
in
aas
xor
jno
test
xchg
push
add
adc
xor
jg
rcrb
orl
xor
pop
and
ret
jmp
fnstsw
xor
fmulp
pop
add
push
loopne
dec
jmp
das
test
test
adc
fdiv
xlat
aad
jae
push
inc
jne
jle
adc
fucomp
and
fcos
xchg
rcl
jno
hlt
in
sbb
jmp
add
call
aad
leave
jle
sbb
clc
sub
cmp
pop
fs
mov
inc
cmp
push
xor
xor
xor
adc
sbb
inc
pop
push
pop
sbb
test
ss
movsl
adc
negb
mov
xor
es
dec
int3
mov
lock
loope
loope
rorb
in
sbb
push
cli
xchg
push
xchg
aam
and
int
or
or
add
push
lds
xchg
inc
inc
xor
xchg
push
push
sub
mov
dec
inc
aam
mov
lahf
adcb
cmp
inc
clc
mov
in
imul
fnstcw
and
jno
xor
popf
inc
aam
popa
loopne
int3
shll
pop
in
daa
loope
jge
sbb
adc
or
adc
cmp
fwait
addr16
push
int
movsb
test
sub
sarl
cmp
pop
imul
fsts
jnp
jmp
jmp
push
inc
jecxz
call
dec
sub
mov
int
loopne
push
in
rorb
mov
inc
shll
cmpl
sub
or
cmp
jecxz
xchg
inc
loopne
jg
mov
dec
sub
mov
ljmp
adc
out
inc
into
push
mov
and
daa
adc
dec
enter
sbb
in
out
inc
popf
sub
sarl
loope
test
call
or
cmp
mov
jno
jne
sbb
aaa
pop
in
push
fcoms
imul
aad
imul
cmp
jne
dec
stc
div
out
scas
dec
pusha
cmpsl
dec
sub
dec
or
push
xchg
jmp
mov
and
dec
inc
xor
pushf
cmpsl
dec
mov
inc
mov
sti
add
inc
fnsave
push
mov
arpl
mov
popa
fmull
js
mov
lock
push
aad
in
xor
lea
xchg
icebp
lret
arpl
lds
and
dec
push
pop
mov
imul
adc
iret
cmp
insb
push
cmp
outsl
rclb
sub
dec
mov
lcall
and
movsb
lods
jae
mov
xchg
movsl
std
dec
pushf
and
xlat
outsb
pusha
insb
icebp
ror
jno
fs
fsub
and
cld
cltd
gs
leave
loope
cwtl
insl
dec
xor
lods
mov
or
scas
cltd
int3
lock
mov
mov
mov
mov
mov
aad
xchg
loope
pop
pop
dec
mov
scas
xchg
jle
es
cmp
dec
pop
insl
movsl
and
cmpsb
jmp
into
test
rcl
inc
ror
pop
jmp
test
cmp
push
stc
mov
jno
fadd
cmp
cmpsl
in
pop
and
or
push
in
and
pop
push
cs
ja
stc
int
xchg
loope
fs
mov
xor
flds
cmp
popa
xor
cltd
in
je
xor
lods
roll
mov
ror
call
push
jns
roll
out
lea
mov
dec
test
movsl
xchg
mov
mov
sbb
xchg
sbb
or
and
loop
pop
sarl
and
xchg
aad
push
push
mov
mov
xchg
in
push
outsb
out
mov
ror
lods
rcrl
push
pop
jl
insl
rol
ror
mov
sub
loop
test
adcl
mov
adc
shll
mov
jecxz
push
cmpsl
cltd
mov
xor
pop
in
sbb
mov
mov
rcll
imul
out
fs
repnz
out
js
lahf
int3
outsb
cmpsl
add
sub
push
sub
sub
imul
cltd
adc
push
leave
int3
or
or
fisubs
lods
pop
cmp
aaa
jne
lds
setns
inc
in
xor
loop
xor
in
xchg
ret
aam
jns
pop
fucom
push
and
mov
popa
ror
fwait
add
xor
test
sbb
xchg
mov
push
nop
cmp
lods
cli
shrl
push
adc
cld
fucomip
stos
insl
jmp
cmp
cmp
xor
jae
xor
lds
push
pop
push
fldenv
insb
mov
insl
jg
sub
hlt
stos
vzeroupper
mov
push
rcrl
push
pop
pop
pop
out
add
lods
jne
mov
insl
mov
mov
dec
out
popf
imul
sub
adc
jmp
gs
and
lea
popa
pushf
insl
loopne
int
and
cltd
sbb
push
jne
xchg
int3
xchg
cmp
mov
inc
in
ljmp
jle
leave
adc
jae
mov
inc
mov
mov
imul
int3
test
xchg
and
inc
shll
rclb
aaa
jmp
push
sbb
sub
lahf
cltd
call
lods
in
lahf
push
popf
imul
mov
jno
xchg
ret
shlb
into
xor
leave
hlt
fldl2t
fistpl
fdivrl
icebp
int
or
cmpsl
sbb
leave
ljmp
xchg
ret
and
push
or
jmp
jbe
sub
push
insl
and
or
stc
sub
inc
in
in
or
and
or
and
in
adc
cmp
xor
dec
xor
fnsave
shl
aad
inc
pushf
loopne
int3
mov
cmp
cmpsb
push
in
cmp
pop
dec
sbb
sti
js
mov
adc
push
test
cmp
popf
enter
shrb
xchg
icebp
cmp
jne
mov
mov
insl
sti
jl
push
sbb
cmp
outsl
subb
adc
sbb
dec
idivb
sbb
pushf
in
dec
dec
inc
loopne
loope
mov
scas
sbb
pop
sahf
imul
in
pop
sbb
fbstp
cmc
out
leave
addr16
scas
aas
xor
cmp
lret
icebp
xor
sbb
icebp
loopne
jbe
loop
subb
shr
in
or
cmp
jmp
in
aad
mov
jle
mov
and
mov
or
adc
in
and
loopne
xchg
dec
cld
mov
shl
inc
cmpsl
dec
cmc
jle
lahf
mov
sbb
lock
mov
cmp
shlb
inc
in
movsb
adc
cmp
sti
scas
jno
sub
out
mov
mov
mov
fs
push
xchg
in
mov
xor
xor
jmp
pop
lock
pop
movsb
dec
mov
repz
ja
dec
fstpl
sub
pop
lods
out
adc
fldcw
mov
push
inc
loope
nop
imul
rorl
stc
or
add
xor
movsb
int3
inc
mov
ljmp
fidivrs
imul
cmc
in
mov
adc
sbbb
les
adc
mov
xor
fwait
jg
pop
fs
lds
jle
xor
movsl
mov
dec
xor
icebp
enter
sti
add
pop
dec
popf
fistpll
popf
nop
pop
in
cli
push
clc
cmp
cmp
xchg
sti
dec
scas
sub
scas
xchg
rol
mov
or
and
int3
movsl
dec
sub
stos
xor
mov
int
and
lods
inc
dec
mov
dec
fsubs
cltd
movsl
push
lods
std
pop
dec
mov
mov
add
cmc
test
pop
and
iret
int
outsb
mov
xchg
unpcklps
fs
and
in
push
ds
dec
xchg
lock
lock
lea
pop
jno
sbb
aad
sbb
xlat
fstps
inc
cltd
fucom
int3
in
scas
icebp
pop
sbb
xchg
xchg
inc
mov
in
int
push
lahf
sub
iret
sbb
in
out
sub
and
leave
jo
gs
daa
lea
test
sar
pop
cmp
cmc
and
sub
fcompl
ror
int
mov
int
xchg
sbb
push
dec
pop
mov
pushf
test
mov
cmp
dec
cmc
mov
adc
imul
pop
xchg
fwait
dec
dec
fsubrs
out
pop
lods
mov
mov
dec
push
jecxz
push
add
pop
push
rcr
rcll
insl
sti
insl
lea
test
adc
xorb
roll
in
sbb
imul
in
mov
sub
push
gs
lds
sbb
adc
sbb
dec
icebp
or
sub
push
add
sbb
xchg
lret
loop
ja
xchg
psubusb
in
inc
xor
lds
pop
dec
xchg
insl
stos
xchg
aam
or
xor
lock
rclb
test
cld
test
addr16
jecxz
or
dec
jmp
pop
pushf
adc
xor
mov
mov
call
cmp
gs
sbb
movsl
and
mov
mov
jbe
gs
inc
int
mov
out
sub
aas
pop
shll
mov
insl
or
inc
add
lods
enter
mov
pop
add
cltd
xchg
pop
cmp
lds
in
or
sbb
popa
pop
into
xlat
rorb
dec
cmc
pop
aam
push
push
fsubl
enter
lods
inc
inc
insl
cmp
jle
int3
or
jo
mov
ror
inc
push
cltd
test
fwait
mov
cmpsl
mov
fadd
into
stos
hlt
cmp
mov
pop
xor
aam
hlt
mov
cltd
int3
pop
lds
mov
stc
pop
psrlw
xchg
xchg
pop
mov
inc
mov
inc
fdivrl
push
movsb
mov
fldcw
push
add
shrl
leave
jmp
test
rcr
pushf
insl
cmp
inc
xlat
movsl
mov
and
or
ljmp
xor
shl
fnsave
add
push
sbb
std
cmp
mov
in
mov
and
out
roll
mov
leave
cmp
icebp
out
push
sub
mov
xor
cmp
loope
jmp
xor
inc
add
pop
popf
icebp
dec
push
shrb
lds
pop
in
dec
xor
loope
pop
adc
out
rcr
outsb
jns
push
cmp
sbb
jecxz
les
dec
fs
lret
and
jno
mov
arpl
and
xor
adc
dec
aam
add
jae
pushf
lcall
lret
add
xor
shrl
test
shrl
xor
pop
mov
pop
fidivrs
push
push
ljmp
test
cmp
nop
jae
aam
fnstsw
and
dec
xchg
das
lea
sub
fsubr
imul
loope
loopne
add
fwait
into
cmp
orb
test
jmp
mov
in
jne
xor
pop
out
mov
sbb
enter
push
outsb
dec
mov
xor
and
aas
dec
cmp
fs
mov
pop
lock
push
and
mov
mov
mov
sbbl
sti
pop
add
aas
call
popf
cmp
rclb
jge
cmpb
and
sbb
cmpsb
outsb
hlt
cmp
dec
insb
cltd
into
dec
xor
adc
cmp
dec
cld
hlt
pop
and
pop
inc
test
xchg
jmp
mov
xchg
fwait
jno
gs
outsb
in
insl
or
inc
jge
xchg
shll
sbb
iret
sbb
out
inc
mov
mov
inc
or
sahf
data16
inc
dec
jno
sub
push
mov
fdivr
xchg
jle
inc
inc
cld
in
popa
bound
out
movsl
in
insl
lods
pop
xor
mov
sub
mov
pop
pop
push
mov
cmp
hlt
leave
cmc
push
push
push
pop
lds
inc
push
inc
xor
rol
popa
shlb
jle
xor
rclb
shl
cmp
pop
test
in
sub
cmp
call
mov
je
and
jmp
dec
lahf
xchg
aad
pop
and
test
xor
dec
xorl
xor
stc
aad
lods
xor
int3
mov
cmp
push
jo
fcomps
ret
gs
enter
mov
sbb
popf
pop
int
push
les
cmp
push
mov
lds
out
cmc
into
push
hlt
and
insb
lret
dec
push
loopne
in
or
adc
push
cld
add
push
aam
call
lea
stos
mov
int3
int
jmp
subl
stc
sbb
inc
pop
shll
cmp
aad
sbb
mov
gs
sarb
cmp
xchg
dec
push
fcomps
je
sub
mov
or
leave
popa
popf
mov
xor
xor
inc
in
pop
pusha
cmp
loopne
mov
pmullw
rcl
in
icebp
add
ds
aad
test
in
gs
jle
push
push
push
cmp
insl
sub
aad
dec
pop
int3
add
loope
mov
and
sbb
mov
in
gs
mov
inc
push
add
cmc
in
mov
xchg
jno
pushf
cmp
mov
in
popf
enter
xchg
rclb
cwtl
lods
pop
sbb
inc
xor
pop
mov
outsl
xor
sub
movsl
sbb
enter
push
lds
xchg
xor
mov
rorl
aad
sbb
into
or
mov
lock
sub
sti
sub
xchg
loopne
add
dec
in
pop
lock
shll
adc
pop
inc
gs
cmpsl
mov
int
rcrl
inc
iretw
or
jmp
mov
outsl
movsl
pop
sahf
adc
aas
insl
fdivr
sbb
pushf
test
add
mov
test
or
in
int
int3
xlat
shlb
mov
shll
adc
dec
lods
cltd
popf
fsubs
imul
sti
rclb
sbb
int3
andl
sarl
dec
cmp
sub
cs
mov
pop
push
lret
adc
adc
icebp
enter
inc
jl
in
nop
repz
or
insl
pop
sub
cmp
inc
jle
mov
out
popa
xchg
pop
popa
xchg
aad
cmc
and
adc
mov
sub
mov
dec
test
addr16
dec
xor
out
lea
dec
jle
cmpsl
dec
movsl
dec
addr16
pop
lret
xor
adc
and
lods
jne
sub
sti
ss
insl
add
test
fxch
hlt
pop
subb
and
push
fs
mov
and
call
imul
xor
xchg
sbb
sbb
loope
push
add
fildl
lahf
loope
nop
in
fidivl
cmc
out
in
gs
or
leave
dec
xor
notl
add
mov
or
push
xchg
dec
in
fsubl
cmpsb
sbb
mov
stc
sub
jae
pushf
movsl
xor
subl
cmpsl
mov
push
jb
rorb
fldenvs
lahf
loopne
xchg
inc
loope
mov
xchg
pop
xchg
xchg
in
arpl
mov
cmc
push
xchg
cmp
popf
movsb
jne
cmpsl
push
push
sub
clc
mov
push
push
adc
jecxz
addr16
xchg
pop
imul
sbb
sub
dec
jmp
aaa
sbb
or
xchg
lds
loopne
mov
stos
icebp
aad
xchg
clc
cmc
pushf
insl
in
push
popf
rclb
adc
pop
jge
hlt
pushf
leave
movsl
pop
movsl
sbb
imul
aam
cld
sbb
mov
mov
mov
push
popf
std
fadds
enter
fnstcw
mov
cmpb
into
lods
and
rorb
loopne
cltd
and
enter
aam
pop
dec
ss
xor
fld1
popa
push
sahf
cmp
lock
mov
int
test
dec
fidivl
or
lds
in
mov
sub
in
push
mov
push
call
dec
inc
insl
and
repz
cmpsl
xchg
add
xchg
sbbb
push
add
push
add
out
dec
aaa
jge
dec
test
jge
adc
int
fxch
push
ljmp
fs
jns
or
mov
push
loopne
cltd
iret
std
outsb
pop
into
mov
rcl
xor
pop
or
sbb
and
mov
enter
jg
push
enter
sbb
dec
enter
inc
add
mov
xor
cmp
sbb
xor
movsb
insl
mov
arpl
std
and
fsts
in
jle
in
fistpl
and
mov
sti
dec
xchg
xor
mov
sbb
or
mov
push
jle
pop
shlb
into
mov
frstor
or
or
cmp
adc
in
mov
clc
enter
lret
leave
sbb
in
int3
lock
in
cld
shlb
adc
rcr
lds
stos
imul
mov
push
loopne
incb
call
mov
insl
xchg
and
jbe
xchg
jmp
sub
test
cltd
aad
test
and
or
dec
xlat
mov
sub
jnp
dec
or
mov
sysexit
in
or
and
in
aad
mov
in
sbb
sub
movsl
aam
cwtl
imull
dec
lds
and
and
leave
mov
sbb
in
mov
fsub
test
pop
sti
push
mov
or
pop
enter
pop
les
hlt
fdiv
mov
lds
xor
icebp
sub
loopne
add
loop
lds
or
lock
lock
in
fucomip
xlat
mov
shlb
inc
fstps
sub
pop
int3
inc
fdivl
test
ret
adc
fmuls
mov
in
mov
fnstsw
lds
xlat
ror
divl
lods
and
xchg
xchg
icebp
cli
test
and
dec
gs
push
aam
xchg
xchg
out
and
lods
xor
xchg
leave
or
jecxz
in
inc
sub
push
jne
mov
fcom
dec
push
lcall
outsl
das
xchg
ljmp
imul
xor
push
pop
into
pop
cld
dec
movsl
push
in
int3
pop
mov
push
xchg
dec
cltd
jge
cld
insl
xor
cltd
jmp
iret
sub
aad
popf
sbbl
aam
test
clc
es
cltd
push
mov
in
mov
sahf
ret
pushf
sub
adc
mov
push
mov
fs
scas
push
pop
xchg
loope
loopne
rcrl
sub
lret
cltd
in
push
sub
popa
cltd
int
loopne
xor
cmp
xchg
in
mov
dec
dec
inc
call
cmp
fisttpl
enter
dec
cmp
sbb
shrl
or
xchg
loope
fsubrs
jg
loopne
int3
sub
insl
jns
nop
sahf
mov
lea
cmp
mov
lods
mov
cmp
sbb
imul
xor
out
aas
xor
in
test
sbb
cltd
jmp
pop
mov
mov
aad
jmp
pop
popa
fstpl
das
sub
adc
imul
mov
jo
mov
sub
fdivr
and
and
sbb
pop
jecxz
push
or
aas
test
mov
call
imul
inc
mov
pop
fmull
dec
decl
and
xor
sti
int3
movsb
loopne
movsl
out
and
int3
gs
in
testl
xor
adc
icebp
mov
jbe
mov
mov
bound
repnz
ficomps
push
pop
lock
fsts
dec
loopne
in
enter
xor
sbb
push
dec
inc
out
dec
adc
lods
push
lretw
pop
icebp
or
aam
xchg
adc
movsl
addr16
xor
mov
incl
loope
push
jbe
mov
imul
leave
imul
lds
insl
int
xchg
jno
pop
sbb
xor
dec
cs
lret
pushf
cmp
sbb
sub
or
adc
mov
aaa
sbb
int
mov
xor
push
in
imul
inc
rclb
in
clc
aam
fmull
lods
mov
addr16
adc
pand
and
and
adc
pushf
movsb
lds
and
inc
xor
scas
add
pop
and
cmpsb
mov
add
ja
fcom
mov
bound
leave
notb
test
sbb
call
incl
sub
cmp
dec
fxch
xor
and
push
call
mov
cmp
mov
sub
push
mov
dec
and
pop
cmp
mov
test
test
add
out
sti
nop
test
sbb
mulb
dec
xor
mov
aam
cltd
jno
out
out
outsb
mov
mov
push
in
sub
mull
sbb
scas
jmp
leave
sub
test
sarb
push
imul
les
pop
xor
sub
and
push
enter
xchg
adc
daa
pop
sub
addr16
add
std
pop
bound
and
enter
call
lock
xor
movsb
mov
cmp
sbbl
lea
mov
sbb
icebp
fsts
adc
dec
xchg
jl
mov
es
lds
jnp
out
shll
hlt
dec
pusha
fwait
sub
sbb
sub
sti
addr16
iret
pop
xor
cmp
jecxz
in
in
xor
mov
dec
int
push
shll
in
mov
sti
jo
fs
leave
mov
mov
dec
xchg
rol
jmp
mov
popf
rcl
jge
jmp
mov
ror
xor
in
repz
ret
sub
push
push
in
cmp
or
pop
outsb
inc
mov
xchg
mov
aam
cmc
cmp
push
push
in
jo
js
arpl
jle
popa
shl
mov
jmp
sub
cmp
or
pop
inc
jecxz
iret
sub
dec
fnstcw
sbbb
pop
aam
leave
fxch
or
outsb
out
psraw
push
out
xor
mov
xor
mov
icebp
adc
addr16
mov
fisttps
xchg
sbb
fcmovnb
loope
xor
mov
rcrl
cmp
icebp
xor
arpl
test
xlat
ja
aam
inc
sub
rol
insb
add
xchg
loopne
xor
aad
push
aad
inc
cmp
inc
fsubl
lock
add
mov
lods
lds
test
or
inc
push
jo
int
jae
cmp
lds
and
adc
popa
les
push
sub
sub
and
dec
adc
pop
xchg
and
loope
sbb
mov
sbb
adc
lock
push
sub
scas
std
mov
scas
or
xor
push
adc
mov
aad
push
jge
cmp
or
pop
iret
out
aam
cmp
xor
xor
loope
adc
fadd
popa
or
in
cltd
pushf
sub
push
mov
fsts
sub
adc
mov
aad
roll
lods
adc
test
ja
lods
andb
loopne
mov
mov
gs
pop
sbb
mov
int3
sbb
push
push
adcb
lret
adc
cmp
mov
ror
mov
push
loop
outsl
dec
loope
mov
xchg
push
lahf
push
imul
cmc
mov
leave
mov
sub
sub
adc
xchg
sbb
fimuls
loopne
in
push
dec
mov
dec
cmc
lahf
popa
pushf
and
cmc
dec
out
push
fstp
lock
jmp
fs
inc
loopne
out
rcrb
and
insb
push
cli
and
add
dec
adc
jmp
xor
into
dec
xchg
adc
mov
jbe
lock
or
push
cmc
pop
dec
int
shrl
popa
loopne
sub
mov
xor
jno
adc
movsl
or
dec
shr
loope
icebp
push
sub
adc
fisttps
std
icebp
jno
push
ror
cmp
and
mov
jecxz
mov
cmp
in
fcomps
int3
xchg
dec
mov
in
loope
inc
mov
std
aas
push
aam
int
pop
mov
lds
mov
test
xor
and
jmp
mov
ficoml
out
mov
bound
or
lcall
nop
and
push
push
aad
mov
fmul
outsb
or
xchg
and
dec
cmp
movsb
mov
es
sarl
aam
in
xor
insl
sub
adc
int3
cmp
aas
aam
pop
out
out
fcomi
aad
inc
in
loopne
insl
int3
sub
sub
sub
xchg
test
hlt
adc
fsubr
int
fstp
dec
mov
cmp
jne
mov
insl
xchg
cltd
cld
sub
mov
adc
cmp
fxch
and
enter
cmp
push
adc
fisttpll
jno
mov
sub
push
pop
cmp
sbb
cmp
lock
pop
adc
xchg
sbb
and
shrb
and
inc
xchg
jecxz
mov
pop
cmp
xor
fcmovb
cmp
jne
jnp
fcoms
mov
filds
js
in
mov
xchg
adc
inc
jno
xchg
insl
and
inc
in
adc
mov
int
xor
dec
mov
fistps
push
push
enter
sarl
mov
inc
gs
insb
fidivl
push
cs
xor
mov
mov
int
mov
xchg
in
lock
sbb
inc
movsl
xchg
push
mov
xchg
mov
lea
in
sbb
hlt
cmc
push
dec
add
out
sub
push
popf
shll
lock
rcrb
xor
xchg
cmc
pop
pop
sbb
xor
shlb
jmp
fdivrs
xchg
adc
mov
imul
fistpll
cs
adc
loope
dec
push
popa
mov
adc
mov
jle
in
lret
sbb
push
sbb
xor
lods
inc
jns
out
pop
sub
insl
imul
lods
and
inc
inc
push
or
shll
in
xor
xchg
gs
sub
xchg
popa
xor
cmp
adc
push
mov
leave
arpl
push
arpl
pop
arpl
or
mov
sbb
bswap
inc
mov
dec
inc
xor
sbb
rcrb
mov
mov
jbe
sti
pop
fldz
punpcklbw
sub
pop
loope
pop
xchg
pop
sbb
and
mov
insb
push
in
pop
xor
sbb
inc
adc
and
fisttpll
icebp
repz
sarl
inc
xor
inc
cltd
xor
adc
lret
mov
movsl
cltd
jle
shrl
xor
fwait
sub
cmp
lahf
enter
loopne
mov
cmp
jmp
test
xor
fsubr
insl
mov
in
push
sbb
fsubrl
mov
add
pushf
cmp
enter
push
shlb
or
iret
fcoms
mov
add
sub
pop
call
fs
lods
sbb
pop
enter
adc
xor
test
sub
rorb
and
insb
mov
and
push
jne
sub
xor
sbb
pop
add
dec
or
and
push
jbe
fsub
imul
faddl
pop
mov
lds
mov
mov
icebp
push
int3
push
loopne
pop
out
sbb
aam
cld
hlt
push
sahf
sbb
push
mov
test
shll
xchg
sbb
mov
mov
pop
icebp
push
jle
pop
push
jnp
mov
adc
mov
out
int3
outsb
mov
adc
lds
int3
and
and
mov
in
and
cmp
fstl
int
out
push
lock
out
sub
popa
fldcw
into
jecxz
mov
test
jge
or
fmul
lret
les
inc
dec
movsl
mov
jp
dec
imul
imul
cmp
pop
mov
xchg
pop
pop
loope
xchg
sub
push
push
pop
aad
jmp
icebp
jo
lock
fcomip
xchg
test
adcb
aam
pop
mov
lods
lock
jno
xor
clc
dec
adc
loope
jmp
call
lods
or
xor
dec
cmc
mov
cltd
xchg
shr
xchg
fst
cmc
adc
in
pop
mov
sub
gs
inc
movsb
lods
and
cmp
sub
test
out
sarl
push
jmp
add
mov
cmp
add
fmuls
jl
popf
mov
in
inc
sbb
aad
in
cmp
adc
jns
enter
xchg
add
rorl
mov
xchg
aaa
xchg
pop
int
mov
sbb
cmp
adc
mov
in
dec
fldcw
cltd
icebp
xchg
cli
or
dec
mov
mov
mov
dec
mov
ljmp
jae
mov
jmp
mov
push
pop
shll
fsubr
insl
pop
int
or
rclb
mov
push
bound
adc
jns
fsubrl
bound
stc
call
push
lods
push
mov
mov
mov
inc
or
cmpsb
pop
sub
cs
fldenv
push
push
lods
dec
cmp
jmp
pushf
xchg
dec
push
sub
aam
xor
imul
pop
xor
push
inc
xchg
xchg
loope
add
leave
mov
mov
cld
adc
fprem1
adc
dec
ret
fcomps
xchg
push
int3
push
jne
int
shll
int3
fsts
jne
sbb
aam
pop
xchg
xorb
jp
aam
out
sub
sub
pop
jl
icebp
jl
push
xchg
mov
add
sahf
std
adcb
int3
and
lahf
in
add
xor
cli
sub
and
dec
mov
popfw
in
push
shrl
mov
xor
fldl
xor
pop
sub
dec
int3
in
nop
xchg
rcrl
cltd
fsubs
mov
jle
adc
sbb
fisubs
pop
push
scas
pop
inc
popa
push
mov
dec
out
add
jmp
popf
xor
cmpsl
adc
fidivl
and
scas
scas
test
cmp
pop
jne
cmp
adc
call
dec
movswl
leave
lock
loopne
mov
jne
sub
fs
jl
adc
clc
scas
cmovne
fmul
imul
imul
fsts
push
lock
jmp
lcall
mov
in
xor
lret
icebp
adc
sub
cltd
dec
and
xor
loopne
xor
fcompl
ljmp
gs
shrb
pop
inc
push
jl
loopne
cmc
lods
sub
or
xchg
adc
and
into
mov
outsb
out
dec
mov
sbbl
and
test
cmc
mov
in
adc
in
adc
ja
in
add
cmp
adc
addr16
fisubs
fmuls
jl
xchg
lds
test
aam
mov
cmp
adc
mov
push
aam
std
cmp
and
sahf
or
dec
inc
gs
sub
adc
gs
jmp
ja
shl
popf
inc
dec
dec
xchg
insl
mov
pop
xchg
push
mov
addr16
mov
add
mov
jnp
scas
decb
aad
jge
xor
rorb
xchg
cmpsl
enter
cmp
adc
inc
mov
in
in
sbb
call
mov
inc
xor
lret
dec
cmpsl
fmul
pop
mov
push
in
and
cmp
xchg
int3
adc
sub
jne
pushf
push
mov
lock
test
ja
in
jmp
sbb
mov
push
aam
movsl
out
mov
sub
xchg
cmc
mov
cmp
fildl
rcr
dec
xor
fldenv
loope
push
shll
ret
push
or
in
or
bound
cmp
push
mov
fxch
mov
sahf
jl
xor
sub
rcrb
xor
popa
sbb
shll
call
sub
sbb
mov
or
xchg
subb
jbe
in
cmpsl
enter
loopne
ss
mov
popf
push
mov
shll
mov
cltd
xchg
cmp
leave
aas
dec
fs
aam
xor
jne
outsl
mov
or
call
xor
xchg
xor
adcl
call
outsb
cli
addb
adc
cmpsl
push
dec
lahf
sbb
mov
mov
sbb
dec
in
jg
rcrl
sbb
aas
xchg
sub
sbb
enter
int3
out
push
in
mov
in
inc
cmp
and
dec
insl
call
push
add
mov
insl
mov
lahf
mov
rcrl
sbb
ficoms
cmpsb
int
cltd
mov
imul
xchg
jge
dec
push
out
push
pop
cmc
push
sbb
icebp
inc
dec
pop
push
mov
loopne
and
sbb
sar
sti
loopne
jmp
popf
leave
insl
lret
sub
lods
bound
inc
lods
cmpsl
add
fs
icebp
sarl
adc
mov
gs
jo
gs
mov
jne
int
adc
dec
jge
adc
test
imul
in
and
adc
xchg
mov
call
dec
jle
mov
xor
movsb
icebp
pop
jns
xchg
pop
jns
cltd
mov
sarb
mov
fildl
cmp
xchg
fnstsw
sbb
packuswb
cltd
sub
or
sahf
sub
push
inc
mov
cmc
push
inc
fs
add
xchg
stos
sahf
aas
jmp
repz
fmuls
or
fwait
xor
movsl
outsb
xchg
dec
jne
or
dec
add
xchg
call
fnstenv
int3
xor
roll
push
push
cmpb
sub
fstps
lea
xor
pop
mov
lds
rcl
rorb
pop
add
in
adc
imul
push
leave
xor
xor
jle
sub
jno
mov
or
xor
lock
aam
dec
lods
fistpll
sbb
mov
sbb
arpl
mov
push
addr16
aam
bswap
adc
jmp
cmp
and
xchg
rcl
sub
lcall
mov
mov
pop
cmc
and
in
call
lret
stc
dec
mov
iret
sub
outsb
xchg
jge
sub
int
cs
mov
stos
and
popa
cmp
insl
sbb
push
sub
xor
fcomps
sub
dec
xchg
lock
adc
popa
inc
loopne
sbb
mov
cmp
push
in
push
cmp
pop
jl
into
add
cmpl
mov
push
adc
sbb
adc
loope
mov
inc
or
dec
mov
pushf
popa
insl
mov
push
int
inc
jno
cmpsl
in
push
xlat
cmp
sarb
adc
sarl
bnd
mov
scas
jecxz
movsl
decl
xchg
scas
mov
icebp
sub
ret
enter
inc
jle
cmp
aad
lods
push
pop
adc
into
jnp
cmp
aad
sbb
mov
fsubr
aad
cmc
lret
fsubp
pop
repz
mov
dec
cmpsl
jne
scas
dec
movsb
jmp
fsts
and
outsb
inc
sti
imul
roll
push
push
adc
push
xchg
dec
add
int
jg
jb
mov
adc
leave
lds
or
cmpsb
es
loopne
aaa
call
lahf
xor
cmp
aad
aaa
sbb
sub
mov
shlb
inc
push
push
sub
adc
cmp
aam
jmp
adc
fs
dec
adc
cmp
int3
test
into
jb
mov
sub
sbb
mov
jbe
fcoml
mov
aam
int3
aas
les
subb
jns
jp
sub
mov
loope
shrd
pop
mov
imul
xor
aam
inc
mov
fmull
nop
shl
popf
dec
mov
ss
ret
mov
dec
lods
sub
fwait
imul
adc
cmc
mov
fildll
or
xor
fsubrp
xor
aaa
std
pusha
add
aad
popa
int3
loopne
sbb
imul
or
jp
xor
dec
jo
sbb
fbstp
inc
sbb
mov
int
fcomps
enter
mov
xor
popf
in
mov
inc
lock
imul
lds
cmp
movsb
roll
mov
dec
sub
push
fadds
rcr
xchg
sbb
lds
test
adc
pop
insl
and
add
aad
jle
xor
int3
enter
mov
mov
movsb
loop
fsub
push
invd
and
mov
int3
cmp
adc
and
in
pop
shrl
stos
test
hlt
aad
lods
xchg
inc
jle
push
xor
gs
daa
lock
outsb
int3
call
outsb
pop
fnstcw
inc
add
loope
fmul
cmpsl
pop
in
lods
popa
in
adc
imul
ja
push
gs
xor
cmc
dec
shr
mov
and
xchg
mov
mov
iret
leave
adc
xchg
pop
push
or
dec
in
loopne
adc
loope
in
dec
dec
push
xor
xchg
jne
mov
test
push
call
ljmp
sarl
jle
xor
adc
xchg
fs
mov
les
dec
fcoms
pushf
rcrb
pop
mov
popf
inc
lock
dec
adc
jmp
scas
cmp
lret
int3
jne
push
cltd
dec
and
sub
add
pop
sub
xchg
or
loope
mov
dec
sti
pop
les
fsubrs
shlb
int
push
push
pop
lret
pop
dec
fadd
sbb
push
fnstcw
iret
popa
imul
shll
shrl
lock
sti
int
and
xchg
in
cmp
fucomp
mov
mov
stos
jge
sub
fsts
jmp
xor
push
or
mov
mov
int3
in
lea
movsl
sub
sub
adc
insl
fstl
outsl
jmp
in
dec
push
fs
inc
jne
sbb
lods
xor
push
ret
into
outsl
xor
sbb
mov
jecxz
inc
call
pop
cmp
xor
jmp
mov
and
adc
pop
dec
pop
aad
leave
adc
inc
xor
insl
push
enter
xor
mov
daa
lds
cltd
mov
mov
loopne
and
cmc
shrb
mov
imul
or
in
mov
movsl
push
lods
aad
push
jle
inc
inc
fst
adc
rclb
adc
dec
ret
mov
xchg
jge
ret
inc
mov
shl
mov
inc
fsts
sub
push
dec
add
mov
or
adc
cmc
out
mov
loope
in
mov
imul
lods
sbb
fbld
or
adc
jb
xchg
mov
lret
mov
mov
shrl
cmp
lds
mov
adc
cltd
fstl
sub
popf
sbb
inc
int
aad
dec
imul
inc
shlb
imul
sub
or
jecxz
popa
adc
aam
gs
xchg
mov
dec
insl
sub
movsl
xchg
or
pop
mov
sbb
add
icebp
mov
int
aad
or
fnstsw
call
sub
add
push
ljmp
xchg
or
loopne
cmc
jl
push
aas
cmp
rcrl
pop
in
or
and
aam
shll
cltd
mov
dec
loop
inc
cmp
icebp
imul
dec
sbb
nop
das
nop
rcrl
frstor
mov
push
sahf
cltd
fldcw
test
push
rcr
int
xor
sub
push
mov
mov
movsl
stos
xchg
sub
leave
mov
cmp
lahf
pop
popa
imul
pop
mulb
adc
das
out
stos
adc
iret
pop
inc
aam
mov
in
xchg
cld
sub
test
leave
div
outsb
lret
insl
faddl
adc
adc
into
data16
test
outsb
addl
in
shrl
jmp
lods
jg
jb
sub
mov
xor
pop
push
mov
lods
pop
imul
cmp
sbb
cmp
mov
ret
fmuls
sub
push
enter
pop
lock
and
in
jno
test
rcrl
pop
call
enter
cmp
mov
jb
xor
insl
inc
pop
fdivrl
sahf
mov
in
pop
mov
into
rcll
outsl
mov
sbb
fsub
xor
mov
mov
push
pop
push
andps
icebp
shrl
orl
fucomp
mov
jne
push
das
incb
testl
adc
in
call
sbb
or
into
jecxz
fsts
xchg
pop
cmp
stos
dec
ret
imul
mov
into
rolb
xor
mov
jne
js
and
pop
sbb
pop
cltd
sub
in
outsl
mov
and
fsubs
negl
fs
xor
cltd
iret
mov
jno
aas
fsubs
ss
adc
int
mov
mov
mov
leave
lods
cmp
cs
lock
pop
rcrl
xor
jmp
sbb
test
into
push
jns
pop
sub
and
push
jmp
inc
in
sbb
aam
sub
xor
inc
test
and
or
gs
cld
fdivrs
lret
xchg
and
gs
or
inc
push
mov
pop
pop
adc
sub
fmul
and
xor
pop
mov
sub
inc
enter
sub
sub
loope
leave
enter
stos
cmp
loop
push
push
popf
xchg
repz
pop
mov
ds
lock
int3
pop
pop
fwait
loope
cmc
imul
xchg
ljmp
in
xor
dec
orb
shlb
int3
icebp
fsubrl
daa
push
call
shl
insl
je
popa
sbb
xlat
jecxz
sbb
pop
xor
xchg
aam
add
and
inc
xchg
adc
and
lods
popa
lds
notb
push
sub
sub
lds
xorl
and
dec
arpl
xchg
xchg
in
outsl
push
int3
xlat
insl
dec
and
pop
mov
daa
imul
rol
xor
adc
popa
cmp
mov
xchg
and
imul
jne
xor
cmp
adc
inc
lds
aad
test
fucomip
push
mov
idivl
test
mov
aas
dec
int
icebp
je
cmpsb
pop
lret
xor
jge
hlt
fs
in
outsb
je
mov
mov
mov
mov
sbbb
dec
mov
mov
cmc
out
fcompl
fmul
sbb
sbb
jle
insb
or
pop
jmp
fidivl
xor
in
mov
inc
popa
xchg
daa
in
rol
int3
aam
clc
sahf
loope
pushf
sub
mov
pop
or
and
fsubrl
cmp
in
lea
aam
sar
jmp
mov
sub
inc
inc
sbb
add
popa
dec
ljmp
pop
xor
sarb
sbb
fsubr
cmc
sub
sbb
mov
adc
in
int
mov
cmp
movsb
dec
sbb
xlat
push
insl
and
mov
fcom
fldcw
jne
mov
push
lds
adc
jmp
repz
jg
push
mov
jl
push
out
lods
mov
jno
gs
adcl
sub
push
or
nop
popf
adc
adc
push
movsl
lahf
notb
or
fcoml
arpl
xchg
xor
inc
adc
adc
sub
fstpt
sub
pushf
xchg
les
xchg
pushl
jp
adc
roll
mov
push
adc
sub
into
add
dec
int3
xchg
adc
aam
fadd
adc
and
adc
lock
mov
mov
pop
loopne
push
add
repnz
lods
popf
into
leave
add
adc
leave
mov
enter
sbb
insb
in
and
adc
sbb
in
movsl
mov
fmuls
leave
scas
call
sbb
mov
mov
lea
lods
jbe
push
test
in
mov
lock
fabs
dec
sti
outsb
mov
xchg
pop
in
mov
sbb
inc
jae
pop
push
pop
scas
xor
jl
fsts
adc
dec
mov
cmp
jmp
fmuls
and
ret
hlt
enter
push
push
in
push
push
out
wrmsr
fdiv
sbb
int3
iret
or
in
rclb
cmp
lods
lods
push
or
outsb
push
repz
mov
sub
cltd
sub
sub
fcompl
and
imul
fsubr
enter
lock
xchg
insb
adc
push
test
ds
lds
sub
mov
jge
cltd
jl
mov
push
lock
into
mov
xchg
cmc
mov
cmp
cmp
dec
out
gs
shl
sbb
sub
cmp
xor
aad
ja
mov
test
sahf
mov
and
and
push
pushf
mov
les
pmullw
pop
add
shrl
hlt
in
stc
dec
dec
rorl
addr16
jg
insl
dec
pop
inc
sarl
adc
lock
aad
xor
in
loope
test
repz
push
aam
movsl
mov
inc
shlb
add
ljmp
xor
and
push
fwait
test
xchg
sub
insb
pop
in
mov
loopne
sbb
jne
cmpsl
in
dec
xchg
add
sub
adc
and
or
adc
mov
push
movsb
inc
jne
and
enter
cmp
test
and
sub
pop
daa
xor
cmc
adc
clc
push
daa
jl
popf
sub
or
popa
pop
cmp
push
dec
inc
popf
mov
sub
xchg
sub
test
fdivs
jo
insl
sub
cltd
rcrl
fstpl
stc
pop
loop
shld
adc
imul
xchg
dec
mov
mov
push
sub
adc
imul
enter
loope
lret
jmp
mov
aad
mov
fsub
mov
test
pop
es
push
push
adc
lods
jle
jecxz
popa
adc
sbb
dec
into
in
mov
cmc
enter
sub
daa
add
test
mov
fnstcw
call
rclb
add
rcr
lea
and
mov
dec
fldcw
xlat
popf
enter
add
fsubl
cli
adc
and
mov
and
add
sbb
cmp
lds
enter
and
add
in
shlb
xchg
es
add
aad
sub
inc
inc
in
and
movl
inc
leave
int3
sub
fs
fsubp
pop
and
sbb
int3
ljmp
or
adc
sbb
subb
pop
jmp
jns
xchg
push
pop
xchg
icebp
push
in
cmp
sbb
rcll
ret
lea
xchg
movsl
in
mov
mov
in
cmp
mov
scas
dec
mov
shrl
or
aad
sub
and
mov
outsl
and
mov
pop
sub
cmp
push
mov
ds
fsubl
cmp
and
gs
xor
ret
pop
xor
inc
push
lods
sub
xlat
pop
xor
pop
aam
insl
jmp
fisttpll
jmp
in
addb
loope
mov
imul
int
aam
bound
ljmp
and
xor
sahf
pushf
leave
cmpb
xlat
in
jge
cs
cmp
mov
adc
test
adc
sub
sbb
adc
push
jle
dec
xchg
mov
fcmovu
xchg
pop
adc
imul
jmp
pop
add
std
loopne
mov
jnp
and
or
lret
or
in
cmp
cltd
cmp
gs
in
push
inc
sbb
loopne
sub
call
sub
js
outsb
mov
test
adc
add
gs
cltd
add
push
aad
dec
mov
adc
iret
jmp
aad
in
cmp
shlb
mov
sbb
push
repnz
fst
lods
mov
loop
pop
sub
jmp
sub
shr
mov
mov
enter
cmp
mov
cmp
xor
jg
sbb
in
push
mov
cmp
out
jecxz
sti
mov
icebp
jle
and
xor
mov
int
mov
xor
pop
xchg
orb
imul
dec
cmc
dec
sbb
mov
lods
or
and
fdivs
cmpsl
mov
mov
push
imul
and
sub
fstps
jo
fldt
xchg
fisttpll
lds
mov
loopne
or
push
cmp
daa
neg
paddw
shll
ljmp
outsl
xor
xchg
cmp
faddl
lret
mov
ucomiss
inc
insl
in
fsubrs
inc
mov
cmp
test
popf
leave
jo
jle
xchg
adc
sbbb
push
repz
mov
shll
mov
adc
movsl
mov
movsb
ficomps
xchg
push
aam
push
sbb
popf
jo
mov
test
sub
pop
mov
scas
push
pop
in
xchg
dec
mov
jmp
xchg
in
lret
int
cwtl
dec
std
sbb
dec
mov
mov
cwtl
mov
aaa
in
arpl
movsl
scas
mov
mov
and
dec
dec
stos
out
orl
mov
adc
in
ds
cltd
int3
cmc
aad
push
lock
in
test
shll
or
push
mov
cmc
out
rorb
mov
jne
add
cmpl
ljmp
jmp
psllq
mov
cmp
incl
xchg
divl
xor
mov
xorb
in
cs
int
popa
fsubs
cs
test
mov
dec
pushf
push
jle
scas
xchg
xchg
mov
call
inc
sub
mov
sbb
adc
nop
sub
test
sub
aad
pop
sahf
dec
fucomp
ss
movsl
rcll
cmp
lea
mov
fs
pop
sar
adc
sarl
cmp
rcrb
bound
cmp
adc
mov
popf
or
fistpll
enter
sbb
rcll
imul
in
int3
dec
xor
loopne
mov
and
pop
xchg
clc
xchg
cmpsl
pop
in
std
xchg
repz
add
popf
sub
xchg
dec
in
push
call
mov
in
inc
out
jne
movzbl
xchg
fisttpll
loope
bound
cmpsb
cmp
xor
adc
pop
popf
dec
lds
imul
xor
jne
int
mov
inc
mov
call
sbb
movsl
pop
and
adc
aas
pop
dec
jne
add
decb
insl
jbe
fcoms
dec
jne
dec
int3
gs
cld
loope
push
jne
pcmpeqw
lods
xchg
add
aad
rcrl
xchg
gs
cmp
or
cmc
mov
xor
mov
test
call
cmp
pop
aad
adc
xor
xchg
iret
fcom
and
int
jmp
fld
and
pop
and
adc
xchg
movsl
rcrb
pop
push
jle
xchg
es
aad
aam
cmp
dec
in
ficoms
and
xor
fstp
mov
sbb
in
popf
push
shl
cmp
sub
int3
lods
loopne
inc
bound
mov
clc
insl
or
gs
push
sub
fdivrs
jge
popa
aad
inc
test
hlt
push
pop
call
xor
xchg
mov
jne
xchg
test
subl
adc
lds
add
incb
sbb
sbb
out
test
call
xchg
out
ja
test
aam
add
pop
dec
icebp
adc
cmp
repnz
xchg
aad
xchg
aam
jmp
xor
xchg
mov
push
mov
adcl
cmp
lods
fldl
insl
stos
xchg
mov
repz
xlat
cmovo
sub
mov
popa
xor
add
movsl
xchg
popa
pop
or
add
mov
adc
pop
movl
add
fsub
movsl
sbb
insl
sub
addr16
lret
fsubl
push
in
int
in
adc
icebp
loop
icebp
mov
adc
mov
mov
jl
in
popf
lret
adc
jne
aad
inc
stos
ficomps
cmp
jno
mul
xor
jbe
push
pop
int3
pop
sbb
in
popf
fnstcw
int
xlat
jno
insl
push
leave
lret
fists
push
pop
je
sbb
sbb
leave
lds
adc
fcoms
dec
push
je
in
cmp
mov
mov
aam
test
call
scas
pop
dec
incl
mov
mov
in
mov
call
push
inc
in
xor
jo
pop
mov
mov
xor
leave
cltd
jmp
int
insl
aam
cmc
sbb
mov
in
jne
push
lods
jle
mov
jecxz
rolb
fldcw
test
add
lret
nop
cltd
repz
nop
orl
inc
sbb
lahf
scas
jno
outsl
jge
add
dec
movsl
jmp
pushf
loope
add
lock
gs
test
notb
call
dec
movsl
fnstcw
out
lds
adc
jecxz
lea
je
mov
cwtd
sub
popa
stos
in
lods
notl
imul
mov
fists
push
bound
bound
negb
adc
mov
lret
fisttpll
mov
cmp
mov
xor
adcb
in
fwait
ja
adc
leave
rcrb
adc
adc
rcrl
in
jno
jle
cmpsl
push
jns
int3
fstl
and
dec
jns
imul
stc
popl
loopne
fs
push
loop
call
imul
adc
fsubr
loope
in
mov
aam
pop
negl
aas
xor
add
lea
and
mov
scas
xor
das
aad
bound
out
mov
mov
stos
jnp
jbe
aam
pop
jae
les
cmc
mov
out
sub
leave
pop
leave
loope
icebp
pop
shl
jno
cmp
in
aad
fsubr
pop
adc
xor
mov
aam
lock
xchg
cmp
insb
dec
lds
mov
sub
xor
dec
daa
jmp
mov
push
jb
into
in
pop
movsl
popa
jle
push
fs
lods
sbb
mov
adc
imul
and
pop
and
movsl
fldcw
aas
mov
add
push
sarl
adc
jne
push
push
xchg
insb
in
and
adc
in
mov
int
fabs
fisttpll
loopne
pop
imul
mov
xchg
xor
fdivrl
into
push
sub
rcll
sbb
lock
rcl
in
fnstsw
and
push
jle
lds
mov
mov
add
rorl
jno
mov
sbb
pusha
add
sub
mov
test
mov
lds
mov
cmp
andl
pop
insl
enter
popf
cmp
xor
mov
sbb
in
dec
movsl
fwait
add
lea
aad
sub
mov
pop
mov
add
cltd
outsl
repnz
clc
in
test
mov
loopne
inc
divb
mov
dec
push
popl
cltd
pop
in
inc
xor
inc
nop
js
inc
push
clc
sbb
lock
leave
xchg
inc
xchg
mov
into
jne
in
int
mov
fwait
in
icebp
imul
es
sub
cltd
mov
insb
adc
adc
int3
fdiv
adc
in
rorl
pop
and
mov
cli
jle
add
loope
mov
or
xor
mov
mov
fisubrl
pop
popa
adc
mov
loopne
test
int3
xor
lock
lret
cmp
sub
jno
mov
dec
movsl
hlt
xchg
xor
mov
in
jne
jno
lcall
sub
in
cmp
aad
inc
into
clc
insl
fsub
jmp
gs
negl
int
xor
aad
inc
imul
popa
sub
jmp
jge
mov
jns
int3
in
xor
inc
in
push
cmp
mov
inc
sbb
int
adc
add
ret
jp
insl
movsl
lods
add
enter
fcmovnbe
sti
jno
stc
call
movsl
add
pop
cmp
mov
jle
mov
mov
dec
test
arpl
in
sub
push
xor
aam
insl
gs
cmp
push
sub
loop
data16
movsb
dec
cld
jmp
dec
movsb
jne
pop
adc
aam
icebp
addr16
push
dec
xchg
fs
lods
ret
xor
xchg
adc
mov
push
dec
call
aad
cltd
cmc
cld
shrb
mov
call
imul
jmp
shll
pop
orl
and
popl
xor
mov
test
xchg
pop
adc
sbb
test
fucompp
loopne
or
dec
push
sub
enter
and
push
xor
cmp
inc
mov
cmc
jle
mov
int
lods
sbb
sbb
mov
pop
mov
call
lock
push
adc
aad
mov
pop
jno
in
enter
js
jle
mov
repnz
xchg
int3
adc
pushf
ret
test
sbb
pop
adc
in
fcomp
and
movsl
call
and
adc
int
in
js
aas
leave
lods
shl
leave
push
jge
sub
fs
popa
cmp
and
out
outsl
divl
sub
inc
and
outsb
jo
popa
in
xor
and
mov
mov
loop
mov
push
loopne
sub
mov
and
in
adc
aam
push
fs
mov
inc
aaa
adc
int
in
mov
cmp
mov
inc
jne
adc
imul
mov
fsubr
adc
push
ljmp
and
test
pop
movsl
in
lahf
insb
and
xchg
dec
loop
pop
fldenv
xor
nop
gs
jle
xor
sub
xor
inc
sub
push
hlt
and
in
push
xor
push
idivl
jle
xlat
adc
ret
test
loope
adc
push
dec
xor
fcmovbe
pushf
pop
mov
lock
xchg
fnstsw
imulb
inc
push
nop
lods
xor
adc
mov
mov
inc
popf
xor
cmp
push
sub
jle
push
aaa
lods
gs
mov
mov
fldenv
xor
add
jne
sbb
sarl
mov
mov
dec
ret
push
icebp
jbe
xchg
repz
mov
xor
pop
icebp
adc
dec
fwait
and
cmpsl
lock
orb
fcompl
aas
aad
jge
dec
push
fadds
add
sbb
loopew
aas
dec
and
xchg
rcl
arpl
sub
loopne
fistps
sti
in
add
sbb
addl
mov
mov
mov
cmp
adc
jne
mov
push
mov
cltd
lret
push
fdivrl
fdivr
pushf
mov
sbb
andb
inc
into
stc
inc
mov
sbb
aam
dec
jmp
sbb
test
adc
loopne
jne
adc
ss
xor
loope
mov
xor
xor
call
mov
xor
dec
test
jno
loope
push
xor
dec
push
add
int
adcl
adc
mov
enter
inc
mov
inc
enter
add
mov
push
aad
aas
xchg
sbb
in
xchg
mov
shll
loope
test
sbb
stc
notl
imul
popf
pop
loope
jge
add
and
pop
mov
rcr
push
enter
mov
rcr
sti
repz
cmpsl
xchg
fdivs
sub
push
sbb
cmp
dec
push
pop
cmc
jno
xor
cltd
push
fnstsw
aad
xor
rclb
das
cmp
mov
cmc
test
fsubs
mov
inc
insl
cmp
mov
xor
movsl
cltd
bound
fwait
nop
pop
pop
jno
stc
mov
dec
sbb
cmpsl
addr16
dec
add
lods
fxch
mov
mov
mov
mov
int3
shl
cmp
stos
int
jmp
stos
pop
sub
pop
xor
jne
loopne
arpl
ds
in
fwait
call
popa
xor
xor
scas
lret
sbb
js
cmp
jmp
mov
daa
daa
iret
lea
icebp
mov
or
sahf
jne
insl
sbb
icebp
stos
popf
in
and
hlt
mov
xchg
je
push
cmp
pop
fnsave
xor
test
xchg
and
imul
popa
loop
dec
cltd
push
mov
into
cmc
cmp
jne
sub
rcll
and
lods
mov
and
inc
xchg
jp
fcoml
call
iret
pop
and
cmp
sbb
ds
arpl
je
pop
mov
loopne
push
dec
gs
std
fadds
pop
in
dec
mov
xchg
cmc
push
dec
mov
icebp
or
mov
jae
subb
or
aam
jno
xor
lea
lds
lahf
je
and
imull
jl
fdivrs
sub
xchg
dec
xor
dec
add
aam
jne
fwait
sbb
lds
mov
inc
loopne
jae
in
jl
adc
aam
fnstsw
xor
adc
adc
cli
cmp
loope
inc
mov
imul
in
or
inc
adc
mov
or
adc
inc
jno
mov
jb
ja
pop
sarl
psubsb
inc
adc
call
mov
popa
push
sbb
call
neg
mov
xchg
pop
xchg
movsl
and
in
sbb
jbe
push
jns
das
push
xor
rcl
arpl
shlb
adc
fs
push
lods
pop
lods
and
fs
and
int3
fprem1
jge
xor
cmp
or
or
fstps
int3
jns
and
sbb
cmp
xor
in
loope
rclb
xor
dec
jp
push
xor
xchg
fnstsw
sub
aad
dec
sbb
test
gs
lock
cltd
call
dec
mov
or
imul
dec
fstp
pop
dec
add
insl
and
sbbb
inc
sub
push
inc
adc
inc
sbb
add
adc
xchg
adc
mov
sub
int
ss
inc
adc
sbb
xchg
sbb
adc
dec
fcompl
dec
loope
icebp
imul
dec
shll
dec
mov
aaa
mov
rcll
lret
aad
sub
dec
adc
sbb
fisttpll
sub
cmp
aam
dec
xchg
pop
cmc
sub
sbb
dec
mov
mov
jmp
sub
outsb
add
pop
popf
lcall
scas
xchg
and
xor
addb
pop
aad
adc
dec
pusha
scas
les
mov
and
sub
imul
inc
lock
dec
cmp
mov
adc
pushf
xor
fdivl
cmp
insb
mov
popf
dec
gs
add
fadd
sbb
cmp
inc
cmp
loop
addl
pop
sub
xchg
jp
push
xor
in
inc
movsl
sub
dec
adc
lds
movsb
adcl
pop
xor
cltd
adc
push
jmp
dec
inc
push
push
lock
inc
mov
pop
mov
mov
sub
adc
push
pop
sarl
pop
lret
icebp
xchg
push
dec
inc
mov
xor
xchg
mov
cmc
shl
mov
jno
or
adc
jb
aad
test
adc
fisttpll
leave
pop
test
pop
jne
xor
mov
jo
jecxz
int3
in
add
lods
shlb
push
or
cmp
ljmp
push
lds
inc
scas
enter
push
insb
push
stc
lds
dec
push
jbe
dec
outsb
add
incb
popa
jge
gs
int
xor
push
sbb
jl
or
in
adc
and
add
fwait
ss
mov
dec
jp
dec
and
outsl
xchg
xor
movsb
popa
pop
and
and
fdiv
cmp
das
pop
cmc
jne
pop
dec
push
lock
push
mov
xor
inc
mov
aas
cltd
adcb
mov
push
in
cmp
into
xor
call
loopne
pop
test
cmpsl
cmp
mov
sbb
mov
vpunpckhwd
sarl
flds
lods
outsl
insb
lods
popf
icebp
cmp
fnstcw
aam
gs
cmp
mov
fs
dec
sbb
cmc
out
mov
inc
mull
cltd
lods
insl
xor
pop
std
sbb
ljmp
mulb
scas
pop
in
out
cmp
dec
jecxz
movsb
shrb
cmp
or
insl
pop
pop
mov
mov
int
or
fdivr
fiaddl
sbb
jo
lea
xor
jle
int3
mov
or
add
les
mov
mov
iret
mull
jno
addb
pop
xor
inc
cmp
inc
sbb
lds
iret
negb
pop
pop
out
int
shrb
in
and
jmp
fdivr
sub
icebp
int
test
adc
sbb
inc
flds
push
ret
movsl
pop
sub
jl
sbb
pop
sub
movsb
add
mov
push
xchg
adc
and
mov
loop
mov
dec
pop
int
jecxz
outsl
das
in
xchg
jmp
and
dec
add
adc
in
bound
push
adc
mov
push
cltd
cmp
mov
in
push
pop
test
sbb
movsl
mov
rolb
mov
adc
and
pop
fst
or
adc
mov
lock
loope
or
outsb
cwtl
insb
leave
loope
jle
mov
and
adc
shrl
add
outsl
xor
or
cmc
jmp
push
cmp
mov
div
or
cmp
aas
cld
jmp
mov
out
aad
xor
jbe
jl
and
insl
arpl
in
fsts
cmp
in
out
enter
mov
out
add
mov
std
xor
adc
fnsave
cmp
loopne
in
out
xor
adc
lds
xchg
adc
loopne
sbb
in
push
add
imul
dec
sarl
and
fs
movsl
imul
cmp
cltd
in
xor
adc
sbb
fdivrs
push
gs
in
mov
in
aam
mov
fnstenv
mov
sbb
dec
mov
xor
cmp
in
push
movsl
cmc
sbb
mov
dec
in
sub
or
sbb
lods
mov
ret
push
fisubrl
gs
lock
mov
and
sub
in
stc
dec
out
cmp
xchg
cmp
sub
leave
pop
cmpsl
in
loope
loope
loop
iret
jmp
and
aam
xor
push
jne
sbb
in
jge
das
cmc
hlt
insl
cmp
mov
dec
fcom
out
decb
fstl
mov
out
mov
jno
fistpll
sub
std
cmc
xor
sbb
mov
clc
sbb
in
sub
dec
mov
xor
adc
int3
shl
pop
inc
and
dec
and
xchg
ret
pop
jmp
movsb
sub
les
push
popf
inc
pop
cmp
ror
bound
dec
xor
sarl
in
lock
popf
adc
sbb
flds
cmp
sub
lcall
fs
fstps
pop
cmp
add
pop
sub
test
shl
pop
lea
call
lahf
lods
push
mov
cmp
insl
rclb
cmpsl
lret
insl
roll
sbb
push
jmp
fcomi
pop
and
jne
jno
int3
mov
mov
push
sub
mov
jmp
int
outsl
and
popf
shrl
mov
int3
icebp
push
rcr
into
mov
xchg
popf
cmp
icebp
cmc
inc
aam
insl
mov
aad
mov
fst
sub
push
cmp
movsl
scas
sub
pop
mov
movsb
adc
xchg
and
aad
fwait
mov
icebp
mov
mov
and
jo
pushf
cmp
pop
filds
adc
addb
cltd
adc
or
int
xchg
jle
mov
fnstcw
xor
lea
test
and
fsub
mov
popf
xor
xor
into
xor
mov
lahf
and
gs
dec
push
jno
aad
dec
std
cmp
pop
in
cmpsb
sbb
movsb
loop
aam
andb
sbb
sbb
push
rorl
icebp
dec
fisttpll
dec
xor
cmp
out
sub
outsb
pop
lea
enter
xor
jp
fdivl
jne
repz
movsb
cmp
cmp
adc
leave
cmp
mov
pop
cmp
push
in
sar
popf
push
sub
rolb
outsb
sbb
sub
adc
gs
popf
sbb
cmp
into
popf
pop
inc
add
xchg
push
lret
adc
aad
aam
push
in
cmp
mov
pop
rorl
xchg
lods
movsl
xchg
xchg
jns
iret
dec
xor
inc
call
xchg
and
int
pop
out
lods
sub
cmp
popa
xor
mov
insb
adc
adc
adc
sub
and
rcl
jo
imul
insl
mov
fst
xchg
pop
int3
scas
adc
and
push
sbb
decl
fsubrs
jecxz
xor
or
addr16
dec
out
mov
sub
rcll
dec
ljmp
inc
pop
test
inc
gs
lock
jne
lahf
fnstenv
jecxz
and
and
xchg
icebp
cmp
in
adc
aad
adc
shll
jnp
sub
mov
inc
jmp
and
sbb
adc
fdivrl
pop
lods
aad
xchg
xchg
leave
rcll
out
cmc
int3
lcall
sub
out
outsb
cmp
in
xor
icebp
inc
loopne
fsubl
push
push
pop
adc
movsl
cmp
jne
inc
jno
pop
xor
repnz
inc
out
adc
aam
pop
imul
xor
and
adc
cmc
mov
out
inc
cmp
jp
test
insl
adc
xor
out
cmp
jmp
jg
and
idivl
jle
adc
insl
sbb
dec
ljmp
aaa
or
loopne
popf
mov
pop
add
decb
outsb
mov
sub
xchg
jg
imul
jge
popa
cmp
out
pop
mov
and
test
lds
aad
sbb
sar
enter
push
adc
xchg
stc
dec
hlt
insl
sub
lods
xchg
xor
and
pop
xor
mov
or
mov
mov
shrl
inc
inc
sti
std
fstpl
daa
or
mov
jl
dec
pop
inc
stc
inc
out
xchg
add
in
popf
lock
mull
pop
add
into
or
hlt
pop
test
and
mov
sub
and
mov
sbb
fdivs
cmc
out
jl
lods
loope
mov
loope
xor
in
pop
xchg
mov
aad
insl
mov
mov
in
mov
xchg
adc
pop
icebp
inc
lahf
shr
jne
imul
xchg
rorl
jne
out
xor
int
jge
mov
fiadds
enter
int
fnstsw
popf
jne
cwtl
sbb
popa
jecxz
dec
xorl
stos
pop
mov
fstp
loope
dec
ljmp
xchg
lea
mov
cmc
movsb
int
in
xor
mov
stc
dec
jl
mov
push
gs
nop
sub
shl
les
mov
in
movsb
mov
dec
pushf
lea
adc
jle
mov
and
cs
cmc
jne
mov
mov
jno
mov
cltd
and
enter
mov
lods
sub
int
and
nop
je
sbb
stos
aad
imul
fcomps
in
xor
dec
inc
fsubrl
inc
in
in
mov
push
sbb
mov
sub
and
loopne
mov
popa
fldcw
cmp
adc
inc
loopne
cmp
sub
jecxz
sub
gs
cmp
mov
mov
mull
lret
xor
rcrb
stc
push
stos
mov
add
inc
sub
push
fadds
ftst
rcrb
push
movsl
mov
ret
fdivrs
adc
jge
xor
or
add
pop
lods
rclb
imul
sbb
fsubr
cmc
fs
sbb
fldcw
xor
jmp
xchg
xchg
icebp
es
sbb
in
std
fwait
xlat
popa
in
gs
lods
sub
cli
icebp
out
test
push
mov
jl
and
sub
and
sub
sub
cmpsb
mov
jae
jmp
lock
movsl
popf
mov
insb
jle
jae
inc
xorl
ret
mov
fwait
cmp
mov
sbb
outsl
mov
enter
xchg
rolb
jge
popa
call
rolb
push
xor
jo
aad
out
or
push
gs
xor
insl
mov
mov
gs
shl
popf
sub
mov
lock
rcll
movl
ss
inc
push
rclb
dec
test
jg
int3
sbb
xor
and
dec
mov
fcoms
mov
es
lods
jmp
push
paddusb
or
aad
dec
sbb
dec
movsb
lock
dec
pop
xor
cmpb
in
arpl
pop
mov
mov
jmp
lgs
sub
mov
icebp
int3
popf
cmp
leave
repnz
popf
loope
out
lods
sarl
icebp
fstpl
xchg
pop
icebp
iret
sbb
rolb
inc
lock
shll
in
sbb
pop
sub
inc
in
in
in
dec
cmp
leave
adc
popf
cltd
and
movsb
icebp
pop
xchg
xor
dec
xchg
dec
insl
scas
or
lods
xchg
mov
jmp
push
sbb
int
cmpsl
cltd
loopne
lea
fsubs
inc
push
dec
push
jmp
in
icebp
cmc
adc
adc
movsb
movsb
push
mov
xchg
mov
push
cmp
out
kmovw
addr16
dec
test
jmp
cmp
lods
sub
push
ja
sub
pop
es
add
sbb
pop
cmp
sub
nop
test
xor
cmp
in
xor
jmp
stc
xor
xor
pop
xchg
out
ds
jecxz
lock
xchg
jmp
aam
loope
test
add
gs
push
rorb
pop
lds
cmp
xchg
dec
mov
mov
arpl
pop
imul
mov
xor
out
dec
inc
int
mov
adc
xor
sbb
push
mov
mov
in
xor
shll
les
cli
loope
insb
gs
popf
adc
fnstcw
cmp
dec
cmp
clc
lahf
jno
insl
aam
mov
inc
mov
xchg
fnstsw
insl
icebp
scas
xor
xor
mov
pop
iret
pop
or
add
adc
hlt
cmc
cld
imul
or
sub
aad
mov
dec
shr
cmp
push
push
notl
or
lods
int3
inc
popa
xchg
and
cmp
fsts
jne
adc
push
or
or
in
rorl
or
hlt
fadds
lods
lret
movsb
and
int
sbb
mov
xor
sub
add
cmp
mov
outsl
das
lds
push
dec
shrl
adc
xchg
push
inc
and
xchg
out
push
inc
adc
mov
ljmp
sub
mov
add
mov
push
jmp
mov
pop
movsb
gs
shr
int3
mov
loop
jnp
push
sub
sarb
int3
jns
xchg
sarl
cmc
loopne
fmuls
icebp
xchg
inc
xor
mov
addr16
mov
xchg
xchg
push
xor
pop
fnsave
test
dec
test
adc
xor
and
mov
fsubrl
insl
xchg
jmp
ds
pop
mov
data16
xchg
cmp
dec
adc
call
jg
mov
imul
pop
dec
push
cmp
push
into
icebp
rcrb
or
outsl
or
add
xor
inc
push
jne
call
rcrl
insl
mov
int3
inc
jl
sub
and
jne
xchg
mov
cmpb
add
xchg
lds
in
mov
imul
int
fs
aad
and
mov
mov
mov
dec
bound
mov
fsubr
cltd
adc
lock
xor
sub
mov
cmp
and
mov
sub
fisubl
ror
xor
aad
inc
xchg
xchg
out
mov
dec
in
fnstsw
or
pushf
jmp
mov
in
leave
insl
out
out
or
shlb
add
dec
in
popa
out
test
and
rcll
mov
inc
mov
mov
mov
mov
sbb
in
mov
pop
adc
in
arpl
gs
stc
cmp
adc
inc
rorl
lods
icebp
adc
mov
lock
notl
push
cmc
push
bound
in
fsub
adc
out
sbb
lds
and
fidivrl
add
dec
mov
in
int
lods
mov
cmc
fnstsw
sbb
sarl
in
outsb
imul
jne
lahf
iret
scas
flds
push
cmp
adc
adc
in
adc
xchg
pop
shlb
test
push
std
test
enter
mov
leave
dec
fisubs
push
daa
mov
inc
ret
mov
jg
xor
idivb
cmp
shl
and
fidivrl
cmp
sahf
leave
cmp
adc
in
out
xchg
push
xor
lea
in
or
popf
pop
sbb
call
or
push
movsl
fstpt
mov
adc
mov
sub
mov
mov
jmp
sbb
inc
mov
xchg
pop
adc
shlb
popa
adc
mov
fsubs
into
cmp
sti
sbb
jne
ja
add
push
aad
leave
pop
notb
xchg
xor
mov
jmp
or
repz
leave
data16
xor
xor
sbb
shll
push
and
inc
clc
and
mov
orl
push
sub
ds
sub
fidivs
inc
test
outsb
add
mov
fistl
sub
iret
arpl
push
mov
shrb
inc
and
sub
xchg
adc
inc
std
pop
lods
test
push
fxch
add
rorl
xchg
cmp
dec
and
ja
sbb
xchg
adc
push
adc
dec
data16
stos
ror
adc
in
rol
orps
test
xchg
inc
sti
mov
movsl
mov
andl
cmp
xor
in
jmp
jecxz
aad
mov
inc
cmp
mov
pop
sarb
gs
xor
shll
decl
inc
fnstenv
in
add
aad
test
mov
loopne
dec
jl
bswap
in
sbb
jne
pop
and
in
repz
movl
sahf
mov
movsl
cmpsl
icebp
jle
int3
ljmp
call
enter
xor
xchg
repz
out
xchg
int
sub
or
cmp
aad
cmp
jg
in
jecxz
jg
dec
sub
xor
fisttps
xchg
movsb
cltd
cmpsb
inc
cmc
dec
mov
sbb
rclb
fs
cmp
imul
movsl
inc
clc
push
loop
loop
in
inc
dec
pop
in
pushf
mov
cmp
dec
add
mov
gs
clc
mov
sub
icebp
adc
inc
push
jno
rcr
xchg
sbb
fmuls
jecxz
push
fmul
repz
sub
loopne
test
icebp
in
call
xchg
sub
loop
int
xchg
rcll
outsl
mov
sub
jns
data16
inc
mov
sbb
aad
cs
mov
push
and
jle
lret
ljmp
mov
in
xor
mov
inc
jne
or
daa
xchg
sbb
aam
insl
mov
leave
mov
cmpsl
in
cmp
fnstenv
sub
cltd
out
pop
sahf
imul
notl
aam
ret
into
push
lahf
mov
pop
pushf
and
push
jle
cmp
cmp
mov
xor
pop
ret
xor
jno
mov
out
push
addb
out
mov
pushf
imul
test
sbb
leave
int
pushf
adcb
mov
arpl
call
mov
sub
push
fcoms
xchg
xchg
cltd
mov
mov
push
icebp
lods
in
rclb
mov
aad
sahf
mov
pusha
enter
cmc
pop
movnti
jle
orl
cmp
cltd
shll
ret
loopne
mov
pop
sub
dec
sbb
push
mov
lret
stc
sbb
cmp
movsl
pop
and
dec
cmp
sbb
mov
sbb
xadd
dec
push
jmp
stos
lods
push
sbb
mov
aad
cmp
inc
inc
aaa
push
ret
pushf
xor
into
add
cmp
xchg
fsts
pop
aas
sti
cmp
jmp
xor
lds
xor
imul
shl
jno
pop
call
sub
fimuls
into
call
int
cmp
or
lods
cmp
push
push
push
in
push
popa
mov
xchg
scas
inc
lea
cmpb
xor
cltd
cmp
out
sbb
add
push
jmp
adc
jg
scas
imul
cmpsb
push
mov
xchg
aam
pop
adc
xlat
imul
push
imul
aam
shrb
and
or
aaa
scas
jae
in
mov
iret
lds
push
mov
inc
imul
jb
icebp
mov
adc
fmull
jno
shrl
inc
nop
mov
fst
dec
cmp
adc
sub
push
out
cmp
mov
jne
sub
lods
cmp
lods
fdiv
int3
stc
sbb
faddl
sub
push
jge
sarl
enter
int3
xlat
in
lods
popa
lock
sbb
fcompl
xor
pop
popa
push
mov
dec
fidivs
icebp
sub
jne
or
add
es
pop
fwait
and
in
jno
xor
in
fmuls
pop
in
ss
out
shll
cmc
mov
lock
loop
mov
cmp
stos
gs
insl
inc
jg
popf
in
dec
mov
add
push
ret
cmc
cmp
gs
in
fmull
outsb
mov
enter
gs
mov
and
pushf
sbb
loopne
adc
mov
inc
xor
lahf
stc
movsl
dec
jbe
test
xor
jbe
and
push
xor
jl
cmp
insl
sbb
inc
xor
movd
cltd
jne
cmpsl
mov
adcl
out
mov
push
inc
mov
pop
xlat
sar
mov
xor
sub
mov
cmc
icebp
aaa
aad
fwait
xchg
sub
pop
lds
cmp
adc
cmp
adc
or
adc
jno
in
ret
faddl
mov
stc
out
cld
mov
dec
sub
sbb
hlt
push
jnp
jl
imul
fstl
loopne
loope
dec
xor
mov
in
ror
pop
push
push
pop
adc
cmp
jg
cmovl
mov
xchg
mov
sahf
and
imul
sbb
cmp
mov
adc
int
mov
mov
xchg
gs
aam
push
xor
fmuls
and
xchg
jle
shlb
jno
dec
int3
fsubl
mov
sub
mov
sti
shll
mov
adc
jne
out
dec
and
sub
mov
es
loopne
xchg
mov
inc
pop
rclb
adc
scas
jmp
cld
or
je
sbb
aaa
or
lds
adc
pop
jmp
dec
push
inc
in
sbb
mov
int
imul
into
movsb
test
cmp
inc
xchg
pop
movsl
popa
les
and
mov
xor
pop
pushf
dec
jl
gs
push
dec
xchg
pop
aam
fwait
fdivs
mov
lods
mov
out
movsb
cmp
icebp
inc
sbb
gs
rorb
dec
adc
pop
inc
jmp
dec
fdivs
mov
inc
cmp
mov
addr16
xor
rcrl
and
pop
int3
fisubrl
dec
mov
cmp
mov
xchg
aam
ret
xchg
addr16
sub
fstpl
aad
mov
mov
push
mov
leave
out
jno
dec
stc
adc
dec
imul
and
lock
inc
fxch
fwait
cmc
xchg
cmp
std
cmp
sarl
push
aam
xchg
mov
jo
dec
inc
push
cmc
or
dec
adc
dec
xchg
and
imul
jo
in
enter
jmp
adc
in
pop
fabs
add
leave
mov
or
push
and
cs
adc
leave
mov
push
inc
adc
and
xor
mov
popa
enter
cmp
or
push
ljmp
ret
jle
repnz
and
mov
loopne
shlb
xchg
shl
dec
push
and
push
push
push
int
adc
shrl
dec
sbb
in
or
lock
in
mov
cmp
add
or
mov
xchg
lods
shll
adc
mov
loope
pop
jle
aad
stc
and
in
xchg
xlat
xor
in
push
das
pop
adc
gs
add
iret
adc
push
mov
adc
aad
inc
sbb
rolb
insl
adc
jnp
lock
push
mov
call
push
popa
adc
into
adc
xchg
xor
shr
mov
cmp
sub
xor
mov
xor
in
bound
dec
adc
pop
dec
push
cmp
and
xor
popa
mov
lea
iret
mov
sbb
sbb
sub
leave
lcall
dec
ret
push
sbb
call
mov
xor
pop
lds
jb
mov
addr16
jecxz
iret
lret
in
outsb
sarb
rclb
push
mov
adc
scas
xchg
xor
out
stos
xor
cltd
sub
fnstenv
outsb
sti
dec
sbb
push
or
push
lods
mov
je
jge
adc
jne
gs
movsb
pop
xchg
push
loope
movlps
adc
pushf
cmp
mov
cmp
pusha
icebp
loope
and
ds
unpcklps
aam
mov
loope
inc
pop
mov
mov
adc
sub
mov
jns
mov
lods
loopne
xchg
stos
jns
pop
aam
inc
adc
int
lea
inc
push
scas
sbb
and
mov
popf
sbb
movsl
push
dec
in
or
out
adc
and
mov
pop
in
lock
xor
lods
mov
aam
shll
push
stos
inc
adc
stc
pop
frstor
jnp
lret
push
bnd
pop
shll
movl
push
xor
push
mov
xchg
xor
adc
xor
sub
movsb
lods
cmp
inc
icebp
icebp
test
cmp
popa
pop
jecxz
fildll
sbb
lock
loop
in
lods
sbb
loope
loope
xor
mov
dec
dec
in
xor
popa
enter
in
push
icebp
fdivrs
outsb
push
in
movsb
popa
pop
hlt
fcoms
aad
mov
jne
push
mov
inc
int
fs
icebp
pushf
popa
popf
adc
inc
sub
out
out
insl
pop
pop
enter
shl
cmp
inc
pop
mov
pop
cld
sbbb
fs
dec
sbb
dec
sub
and
lcall
push
sahf
sub
in
ffree
daa
mov
mov
aad
or
jecxz
mov
nop
icebp
cmp
int3
int3
insl
xor
xchg
xchg
roll
insl
mov
dec
jle
les
add
iret
push
mov
push
je
movsl
into
imul
in
int
pop
pop
mov
std
dec
fmul
enter
pop
insl
jno
std
push
gs
cmp
insl
sbb
xorl
out
scas
insl
jnp
aad
dec
test
cld
and
popa
fs
cmp
loop
or
pushf
lock
sahf
fisubrs
pop
call
pop
jmp
cmp
loope
push
testb
xor
lods
popa
sbb
pop
xlat
stos
lcall
inc
rol
cmc
sbb
sub
xchg
lock
lods
fstp
adc
inc
push
xchg
int3
push
in
add
popf
jne
sub
or
sub
dec
xchg
icebp
cmpsl
sub
adc
mov
cmp
int3
rcr
push
nop
push
mov
cmc
mov
push
push
int3
or
inc
sub
cmp
gs
push
adc
ret
sub
or
lods
jle
std
fcom
int
call
dec
sbb
xor
dec
cmp
sub
popa
jno
outsb
in
cmp
out
outsb
push
ret
cmpsb
xchg
sbb
std
aam
movsl
add
adc
rcrl
push
mov
dec
fnstenv
mov
or
clc
adc
or
mov
sbb
outsb
stos
jns
sub
outsl
mov
fmul
repnz
aas
movsl
and
dec
enter
push
and
xor
sub
imulb
jno
inc
shr
aad
jne
out
aaa
testl
and
push
cmp
push
neg
dec
mov
in
mov
pop
inc
dec
mov
mov
lcall
or
pop
sbb
dec
shrl
sub
fsubrs
sti
test
inc
dec
iret
jle
fucomp
mov
popa
or
dec
sbb
adc
loop
jle
sub
xchg
fnstsw
lea
into
dec
filds
insl
lahf
and
sub
cmc
sub
gs
push
cmc
fldenv
cmp
adc
mov
rcrb
fsub
lahf
push
fld
fnstenv
sbb
clc
sub
ljmp
mov
icebp
insl
push
fdivrl
push
xor
cmp
lret
addr16
push
cmp
lcall
aam
xorb
mov
xor
add
xchg
dec
fcoml
ret
out
xchg
aam
cmpsl
jo
aad
daa
in
sbb
jne
popf
shl
frstor
and
mov
push
test
and
test
lods
int
pop
in
fsts
rcr
pop
cltd
aam
sub
icebp
mov
xchg
sub
movsl
xor
fimull
inc
jno
lock
in
ret
sahf
sbb
dec
icebp
lds
dec
xchg
dec
and
int3
cmp
mov
xchg
int
loope
in
push
pushf
icebp
gs
js
outsl
xlat
dec
loope
or
sarl
cmp
cmp
int3
sbbl
cli
mov
insl
icebp
or
xor
sub
push
enter
mov
jae
imul
mov
leave
push
test
loopne
outsl
ja
in
in
mov
rcll
das
mov
shlb
fwait
sub
int
test
mov
xor
inc
jne
lret
in
adc
test
lret
mov
push
sbb
and
mov
adc
sbb
lock
int3
into
insl
ljmp
je
sbb
lahf
sti
shlb
adc
in
sahf
jns
adc
and
fisubs
or
movsl
lds
mov
loop
js
and
dec
sbb
mov
popf
inc
repz
mov
ss
mov
inc
loopne
in
in
mov
mov
loope
dec
aam
repz
test
pop
cmp
insl
popa
cmp
sbb
gs
mov
cmp
mov
dec
cmpsl
push
movsb
fcoms
xchg
aad
int3
xchg
mov
cs
jne
mov
gs
mov
stos
pop
xor
mov
loopne
xchg
fnsave
jecxz
aas
dec
fdiv
sbb
prefetcht1
jno
insb
loopne
inc
pop
sbb
jne
enter
pop
lods
adc
mov
mov
cltd
and
and
shrl
sub
lret
inc
faddl
pop
dec
insb
mov
rcr
lock
mov
mov
and
enter
mov
xor
mov
loope
pop
or
jbe
aaa
cmp
sahf
jno
add
fnstsw
cld
insl
xor
mov
shrl
cmc
in
call
mov
lods
psraw
adc
insb
test
lret
pop
jno
xchg
aam
insb
in
ret
data16
adc
daa
into
sti
test
and
lock
sub
and
xchg
adc
int
mov
cmc
pop
icebp
sti
pop
scas
xor
mov
sub
lea
rcl
adc
mov
pop
cmc
pop
sub
in
xor
shl
fdivrl
fs
popf
nop
les
jle
push
mov
into
sub
push
mov
in
int
gs
int3
pop
call
loopne
sbb
mov
sarl
mov
jecxz
adc
popf
mov
shr
fs
dec
xchg
sbb
pop
int
push
xor
insl
dec
mov
or
xchg
sti
popf
stos
jns
xchg
sub
fcomi
fildll
sub
jp
call
shll
enter
ficoms
pop
jle
xor
xor
inc
movsb
pop
imul
cmc
int3
mov
cmc
fs
push
xchg
into
out
inc
fidivrs
cmc
cmp
out
cltd
sub
lock
lock
loope
add
rol
fst
dec
imul
int3
in
pop
pop
and
aaa
cltd
fldl2t
adcb
sub
mov
xchg
dec
adc
xor
loope
jne
pop
out
xchg
mov
mov
and
gs
inc
test
pusha
xor
mov
int
loope
jne
inc
cmp
aad
xor
sbb
std
rorb
sbb
popf
jae
jne
sub
lahf
int3
cmp
scas
in
cmpsb
xor
xor
pop
movsl
adc
sbb
sub
pop
inc
dec
adc
fstl
hlt
inc
push
mov
repnz
push
jp
ds
icebp
inc
negl
or
lret
popf
xchg
aas
jge
lret
dec
and
push
push
pop
inc
aam
add
sbb
loope
dec
dec
sub
mov
aam
add
mov
out
xchg
dec
js
xchg
movsl
popf
and
cmc
cltd
movl
dec
icebp
cmc
pushf
mov
lds
cmp
rorb
dec
lock
sbb
aam
pop
push
fcoml
popa
or
mov
repz
enter
mov
sub
xor
xor
ja
cltd
cmp
xchg
dec
rdpmc
inc
mov
and
in
dec
cmp
cmp
jl
mov
push
popa
out
sahf
push
nop
mov
stos
xor
fdivr
mov
adc
imul
push
rcrb
pop
pop
push
xchg
iret
push
pop
mov
xchg
mov
test
cmp
xor
nop
adc
push
int3
adc
dec
popl
into
jecxz
ffree
adc
enter
fldl
test
jmp
mov
push
jb
orb
lods
iret
gs
xor
inc
sbb
and
jno
sub
adc
outsl
push
cmc
int3
add
imul
movsl
and
mov
ret
xchg
int
cmp
lahf
fists
sub
int
cmp
pushf
push
push
scas
mov
lcallw
sub
pop
daa
scas
xor
inc
aam
repz
icebp
dec
lods
clc
cltd
int
aas
or
ret
std
mov
jmp
in
aam
mov
jmp
mov
sub
insl
jmp
lods
movsb
sbb
icebp
sub
subb
mov
mov
pop
add
in
out
mov
mov
js
mov
test
mov
loope
outsb
pushf
test
sub
mov
loop
or
test
lret
jmp
pop
rorl
mov
call
in
sbb
lds
cmp
jbe
div
xor
xor
mov
les
push
insl
lds
or
iret
in
sub
xor
shlb
and
mov
cli
and
push
jmp
test
call
aad
inc
cmp
imul
outsb
jne
cltd
xchg
ja
xor
int
leave
mov
fisttps
rol
lods
sub
mov
push
std
pop
movsl
aam
and
xchg
mov
inc
lahf
loopne
xchg
sub
xchg
sbb
mov
xchg
or
xlat
sub
lret
les
movsl
push
and
dec
jne
xor
mov
sub
and
dec
dec
stos
popf
jno
stos
add
in
loope
jge
mov
imul
jno
fnstenv
fistpl
ss
scas
into
insb
cmp
insb
dec
imul
lds
xchg
xchg
outsl
int3
jb
mov
int
xchg
sbb
sub
adc
adc
int3
clc
imul
aad
inc
mov
xchg
loope
sbb
cmp
lds
mov
enter
and
lea
outsb
inc
cmpsl
and
push
mov
inc
push
add
fdivrs
and
fsubrl
cmp
inc
flds
test
cmp
push
insb
push
imul
aam
xor
dec
jecxz
stos
jbe
sbb
jne
loope
push
add
fdiv
dec
icebp
pop
test
popf
mov
jne
sbb
lds
push
sbb
in
faddl
mov
out
out
xor
sbb
cmc
insl
leave
into
inc
in
popa
lods
jle
cmp
fld
push
in
cs
fstps
xchg
adc
stc
rcrb
xor
push
jae
sub
pop
subb
sbb
ljmp
xchg
cli
sub
repnz
in
mov
gs
les
cmp
adc
in
sub
jo
or
call
test
inc
xor
add
testb
push
push
arpl
rcrl
pop
push
int
add
xor
and
adc
lret
adc
xor
xchg
pop
call
lock
imul
lds
lods
fcompl
dec
shl
sarb
xchg
xchg
mov
dec
test
in
xchg
sub
gs
icebp
loope
sbb
in
orl
pop
cmp
sub
pop
fsubl
nop
dec
rol
scas
stos
push
call
mov
das
xchg
popf
addr16
sub
adc
jmp
sub
unpcklps
loope
mov
mov
xchg
mov
rcll
ret
rolb
mov
sub
mov
popf
jmp
fldl
sub
cmpsl
dec
cmp
dec
mov
and
pushf
leave
and
push
int
out
adc
rolb
aaa
mov
bswap
into
in
ret
lea
fnop
icebp
sub
xor
xchg
and
insb
jnp
xchg
rorb
addr16
test
mov
xchg
dec
xchg
pushf
xor
lods
addl
mov
mulps
in
pop
icebp
sub
jg
in
shlb
lret
sub
repz
sub
enter
test
daa
loop
mov
int
popa
adc
movsl
mov
mov
shlb
jmp
pop
jle
insl
push
fadd
sub
xchg
sahf
sub
or
adc
xor
popa
mov
lods
outsb
xchg
fwait
dec
aas
lret
push
addr16
mov
test
pop
lds
jb
xor
stos
cmc
fdivs
addr16
popf
enter
jle
into
lds
xor
jne
or
leave
in
push
loopne
add
mov
out
lds
or
mov
fdivrs
enter
add
pop
sub
testb
insl
xchg
and
dec
push
and
push
fildll
push
push
in
mov
leave
mov
outsl
sbb
popf
out
insb
loope
insl
cmc
jne
xchg
fldl2t
mov
pop
cmp
cli
imul
and
insl
mov
mov
fldcw
cli
push
xor
and
dec
adc
in
sbb
adc
jmp
icebp
insb
stc
stc
cmc
xlat
insl
push
sub
mov
mov
cltd
mov
sbb
test
sub
sbb
sbb
movsl
cmp
sahf
jne
pop
in
xchg
outsb
dec
enter
in
call
cmp
sti
push
push
adc
sahf
popa
int3
into
insb
lods
out
call
dec
enter
popa
std
imulb
ss
loope
ja
pop
jl
push
sbbl
fs
adc
xor
adc
int3
popf
xchg
sbb
adc
mov
cmc
fwait
dec
scas
loopne
movsl
cltd
xor
cmc
insl
mov
cmp
stc
faddp
pop
dec
mov
scas
addr16
fmulp
pushf
jp
repnz
xor
jne
sbb
outsl
xor
rorl
jno
sbb
int
mov
movsb
aam
in
inc
sub
or
cmp
cld
lds
sbb
sub
push
pop
adc
ror
push
inc
dec
shl
dec
mov
xor
push
pop
fiadds
imulb
into
sarb
or
jecxz
adc
lods
test
insl
push
cmp
or
test
xchg
mov
pop
and
ret
rorl
out
in
mov
sub
xor
push
mov
inc
adc
loopne
popf
dec
mov
pop
rcr
or
cmc
xor
arpl
adc
fnstcw
inc
pop
out
mov
int
xchg
pop
adc
leave
int
rcll
iret
gs
ret
nop
or
divl
sbb
pop
mov
in
imul
test
lds
fyl2x
push
or
fidivs
sbb
pop
push
adc
cmp
dec
pop
xor
sbb
sbb
mov
cltd
cmp
or
aad
add
adc
pop
aas
adc
lds
ljmp
mov
xor
sbb
adc
mov
dec
sub
outsb
add
data16
daa
int
jno
ljmp
sti
ret
inc
jle
add
hlt
ja
and
enter
shlb
fst
repz
out
sub
sbb
and
in
xchg
add
imul
call
sti
push
mov
mov
push
mov
pushf
cltd
adc
cmp
cltd
pushf
mov
jmp
lods
popa
dec
sub
or
out
fldl
push
loope
stc
out
xchg
pop
test
movsl
test
xor
xchg
leave
mov
adc
popf
pop
pop
insl
lds
push
dec
mov
and
lret
in
cmp
les
shrl
popf
dec
in
fmull
aad
push
mov
dec
or
movsl
ret
or
rolb
cmpsb
gs
int3
lods
inc
fstps
xchg
sbb
call
neg
into
adc
cltd
adc
insl
sub
adc
gs
cmp
jmp
loopne
sub
lret
push
mov
jne
mov
push
or
insl
jno
fnstsw
in
sbb
jne
mov
sbb
jle
adc
push
fxtract
sbb
popf
fimuls
inc
ljmp
in
dec
mov
in
dec
stos
data16
dec
xchg
or
insl
cld
fadd
mov
mov
cmp
adc
in
and
inc
rol
xor
pop
push
or
mov
popf
dec
sarb
pushf
insl
mov
fstl
and
push
leave
and
je
loopne
test
pop
rcrl
aam
xor
xor
leave
jmp
fmul
xchg
dec
int
pop
cmp
movsl
sbb
dec
cmp
cmp
sub
xor
cmp
aad
mov
pop
mov
inc
test
inc
in
xor
xchg
sti
sub
cmc
inc
insl
adc
rorl
mov
imul
movsl
shll
iret
enter
scas
mov
mov
sbb
fimull
xor
push
test
cmp
loope
or
xor
jmp
push
int3
daa
or
or
call
loope
inc
mov
shr
jg
daa
icebp
adc
in
mov
adcl
cmp
mov
in
cmc
psubsw
enter
lds
std
fcom
and
and
jmp
push
mov
iret
call
mov
punpcklbw
loopne
mov
mov
mov
popa
sbb
jno
sub
pushf
pop
and
aam
xchg
inc
hlt
loope
pushf
loopne
aam
xor
cmp
xor
push
pop
icebp
fists
in
and
mov
test
xchg
or
stos
cmp
mov
icebp
sbb
shl
xor
popf
rcrb
adc
mov
int3
insl
mov
mov
pop
insl
sub
jne
imul
push
rcll
mov
cmp
jmp
xchg
sti
rclb
fwait
rcll
int3
test
into
xor
xchg
and
dec
daa
pushf
pop
loopne
cmp
int3
cmp
xchg
mov
sub
mov
rorl
shr
aad
cmp
lods
mov
fisttpll
cmp
cmp
mov
rcrl
sub
inc
in
into
arpl
add
mov
and
lods
movsl
sbb
mov
jne
loopne
test
rorl
movsb
popa
inc
xchg
adc
cmp
out
pushf
pop
push
sbb
daa
loop
sub
imul
insl
lock
aas
in
leave
xchg
and
dec
dec
leave
out
loope
push
aad
sub
cltd
aaa
cmpsb
pushf
push
movsb
and
sbb
rcll
mov
stc
dec
int
mov
inc
sub
aas
imul
adc
repz
inc
cmp
rclb
insl
testb
aaa
jne
lea
lock
gs
adc
xchg
push
leave
xchg
pusha
or
in
sub
mov
pop
lock
int
dec
aad
out
sbb
mov
mov
jle
push
mov
sub
lea
nop
fcmovnbe
and
push
and
adc
lds
aad
movl
xchg
cmc
in
sbb
mov
push
mov
cmpsb
popa
ljmp
sbb
out
xchg
fs
out
imul
sub
icebp
loope
lods
aam
xchg
out
cmp
inc
cmp
xor
int
mov
jecxz
rep
es
xchg
insl
pop
fistpll
icebp
sub
rcll
in
inc
jne
imul
xchg
aam
fcoml
into
pop
into
mov
insl
mov
adc
fs
sbb
jne
mov
adc
mov
mov
push
inc
lods
fstpl
int3
jle
xchg
dec
sbbb
inc
rorl
xchg
dec
cld
imul
es
mov
cld
xor
mov
insl
xchg
xor
insl
lods
insb
jmp
shl
icebp
fldcw
lock
dec
addr16
sahf
rcl
stos
xchg
mov
adc
mov
inc
mov
fbstp
js
add
das
adc
aad
adc
pop
adc
sbb
sbb
test
dec
movsl
in
mov
hlt
outsb
test
in
mov
aad
fs
lock
xor
lds
cmp
adc
loope
test
xor
xchg
in
sbb
shl
xchg
cwtl
lds
out
in
cmp
mov
mov
test
cwtl
test
sub
cli
mov
dec
push
fsubrp
jl
dec
and
inc
loop
sub
push
mov
gs
loopne
fisttpll
fxch
idivl
mov
cmp
movsl
inc
fstpl
inc
adc
leave
gs
sbb
aad
adc
cmc
iret
xor
jbe
iret
push
aaa
fmull
insl
aam
push
or
nop
ja
pop
xor
dec
jge
lods
pop
pop
fsubrs
in
lcall
les
js
cltd
jno
jne
aam
adc
int3
into
repz
fcomi
jmp
ljmp
lods
cmp
sub
lods
jle
insb
and
arpl
mov
popf
bound
pop
or
pushf
aam
and
sbb
xor
and
bound
stos
gs
and
mov
mov
inc
sub
rcr
jns
inc
inc
in
xlat
cli
sub
mov
icebp
jmp
rcr
mov
insl
and
push
sub
into
imul
xor
adc
sbb
adc
icebp
data16
adc
pop
leave
sbb
in
popf
jnp
mov
ljmp
sbb
adc
pop
push
dec
cmp
rcrb
int
lcall
xchg
or
jle
or
dec
hlt
aas
cltd
xchg
frstor
adc
xor
mov
push
adc
in
jnp
test
dec
pop
lods
gs
cmp
shlb
adc
push
and
fadd
loope
push
mov
sub
pop
sub
pop
push
push
shrl
loop
push
pushf
push
in
sahf
jne
jmp
fsincos
cmp
cmp
xchg
popa
add
movsl
sbb
mov
in
or
sti
xor
stc
pop
jle
sahf
pop
leave
ja
mov
stc
jns
mov
dec
gs
cltd
push
ljmp
lock
aad
xchg
icebp
xlat
lea
pop
xchg
loop
inc
mov
push
cltd
bnd
dec
pushl
jle
mov
aam
mov
mov
dec
loope
sarl
push
notb
aam
jecxz
push
addl
mov
sbbl
adc
lods
jg
int3
mov
rcll
jns
mov
in
enter
aad
or
hlt
sub
xor
hlt
sahf
cmp
jle
push
sub
mov
jle
push
add
inc
jle
push
push
divl
nop
negl
jle
mov
divl
sub
pop
push
jle
mov
mull
sub
push
mov
lea
sbb
rorb
iret
int
loop
jl
gs
sbb
cmp
or
mov
fcmove
lods
sbb
push
jecxz
push
mov
add
inc
push
mov
out
jg
jno
popf
and
inc
mov
mov
adc
sub
out
fucompp
adc
call
push
sarb
mov
jmp
lret
loop
imul
xchg
sbb
rcr
mov
leave
xlat
shll
fdivrs
cmp
dec
inc
loop
jle
dec
fisttpl
dec
mov
sub
aam
dec
movsl
leave
int
add
or
iret
lds
ljmp
push
mov
mov
frstor
mov
test
and
xchg
or
call
sbb
lock
aam
push
cmc
push
scas
sbb
lock
or
cmp
dec
adc
sbb
aam
dec
xor
lahf
or
or
insl
push
jno
leave
jecxz
xlat
fmull
in
or
mov
sbb
lods
in
push
xchg
adc
cli
pushf
sub
gs
mov
lods
in
call
dec
fld
dec
push
int3
test
in
xchg
andb
popf
adc
fdivrs
ffree
lods
cmc
negl
or
sub
xor
lahf
pop
icebp
xor
add
dec
jne
pop
mov
cmp
mov
scas
jmp
fsubrl
sub
aad
scas
mov
xchg
jmp
repz
inc
fcom
nop
lds
cmp
lds
jb
xchg
testl
aad
scas
out
pop
test
dec
mov
imul
ret
lcall
mov
lods
sahf
mov
rcrl
adc
xor
mov
test
jle
sub
pop
movsl
lock
imul
test
in
sub
xchg
sub
adc
or
fsubs
push
xor
jl
movsl
push
cmp
aad
sub
imul
jle
sbb
int3
or
call
jno
xchg
sub
stos
pushf
jle
dec
cli
push
xchg
push
sub
and
cmp
cld
push
cmc
pop
cmp
lock
xchg
fcomps
sub
push
out
loope
cmp
mov
sbb
push
sub
mov
sub
in
mov
fcompl
xor
sbb
adc
cltd
in
outsl
test
in
cmp
xor
jne
inc
aad
ficoml
bound
mov
inc
push
test
push
adc
and
andb
mov
add
mov
movsl
insl
xor
xor
dec
imul
adc
dec
inc
loope
sahf
add
jnp
mov
enter
fnstenv
in
xor
icebp
xor
mov
jno
sbb
jne
bound
and
int3
subb
mul
mov
add
mov
sbb
pop
es
sub
mov
xor
fsubr
add
jge
and
jle
outsb
sub
mov
sbb
cmp
xchg
pop
fdivl
into
push
sub
cmp
or
shll
pop
out
outsl
and
test
xor
cmp
push
xchg
leave
pop
jne
mov
cmc
movsl
out
sub
aam
test
push
in
aas
push
in
push
bound
rcrb
fxch
xchg
rcrl
mov
gs
frstor
mov
mov
int
sub
xchg
push
in
or
shr
insl
nop
jmp
jmp
int3
dec
push
sbbb
in
mov
jno
push
into
int
movsl
push
cmp
sbb
jne
jg
adc
adc
shr
es
dec
test
fdivl
addr16
and
sub
scas
mov
and
shll
push
gs
sub
pop
lds
aad
pop
lods
sbb
inc
rcl
mov
add
popa
cmp
shr
lcall
pop
pop
ss
jmp
rcll
fcoml
enter
ret
inc
mov
mov
xchg
not
stc
inc
jmp
pushf
jne
add
call
xchg
cltd
leave
xor
push
cmp
push
out
or
pop
mov
adc
mov
shll
mov
shll
loope
cmp
call
xchg
aad
cltd
ret
shll
pop
shrb
mov
xor
jno
push
adc
call
pop
pop
or
lock
imul
insl
mov
add
das
xchg
stc
pause
outsl
or
jle
mov
scas
aam
mov
cmc
fnsave
in
xor
frstor
test
sahf
inc
sub
mov
pop
cmp
cmc
mov
xchg
adc
ljmp
in
push
rcr
cmp
add
popa
jecxz
sbb
mov
insl
scas
xlat
aam
fbstp
push
xchg
in
adc
lds
pop
jno
aad
xchg
sbb
cli
push
aas
cmp
fwait
int3
mov
inc
popf
fsubr
pop
dec
out
in
cmpb
lock
ror
dec
popf
outsb
dec
xor
cmc
insl
add
inc
shll
imull
dec
cmpsb
fs
xchg
loopne
rcrb
dec
roll
aad
insl
cmp
mov
in
xor
jge
rclb
fcomps
sbb
lock
or
roll
call
adc
cmpb
imul
add
mov
popa
gs
push
sbb
loopne
mov
mov
push
popf
mov
ljmp
inc
push
int3
adc
push
mov
movsb
inc
xchg
iret
xor
jmp
test
mov
int
mov
jns
lock
push
pop
aam
sub
xchg
aad
fnstsw
dec
jge
or
sbbb
fisttpll
cs
leave
cmp
inc
lock
ret
sbb
out
pushf
sub
dec
fwait
xchg
jbe
xchg
xor
xlat
sbb
popf
push
aas
rcrb
in
cltd
sbb
in
mov
test
jge
roll
loopne
lcall
inc
mov
and
test
movsbl
xchg
xor
dec
lret
cltd
push
lods
mov
cltd
and
pop
insl
cmc
jb
popa
cld
in
push
pop
cmp
in
aad
daa
xchg
in
int
loopne
add
add
add
sbb
stos
bsr
jmp
int
xlat
and
cmp
iret
sub
xchg
iret
mov
cmp
mov
adc
xchg
sti
mov
mov
add
mov
jle
pop
loope
jge
adc
loopne
aam
adc
in
xor
adc
leave
adc
rcr
int
test
push
mov
push
int3
push
push
popf
adc
fmul
in
mov
ret
aad
jecxz
clc
push
in
jne
sub
inc
shll
adcl
jae
mov
xor
lock
icebp
sub
lea
rcll
lea
cmp
add
cmp
lret
sbb
mov
pop
adc
push
hlt
adc
aam
icebp
imul
or
in
insl
xor
and
or
adc
xor
xor
xchg
andl
xor
mov
fmull
sbb
cmpsl
inc
and
inc
insl
adc
and
fmul
les
fsubs
sbb
fdivrl
adc
fidivl
push
mov
loope
xor
fadd
aad
xlat
sub
gs
test
pop
cmpb
jne
pop
sti
inc
fs
jae
and
call
dec
mov
orb
xor
scas
xor
popf
jl
fldl
movsb
shr
loope
lods
xor
push
or
or
imul
push
ror
pop
movsb
in
jmp
mov
dec
and
jmp
gs
xor
push
cli
in
cltd
aad
sbb
lods
dec
cmp
push
lock
and
jle
imul
dec
icebp
shrl
inc
xchg
mov
loope
aam
or
push
fxch
fdivrl
jg,pt
and
jbe
jmp
mov
daa
test
xchg
jbe
push
in
inc
mov
push
jne
outsb
cmp
xchg
push
popf
jnp
mov
xchg
roll
add
mov
jne
pop
sbb
outsb
or
inc
xor
call
insb
jne
pop
fsubs
mov
lods
mov
sub
js
push
mov
gs
sub
xor
inc
sbb
fldl
loope
cmp
enter
push
sub
movsb
ja
in
xor
and
adc
jno
mov
cld
add
movsl
cmc
lds
lock
loopne
inc
loope
push
xor
inc
mov
xchg
mov
aas
daa
or
imul
test
xor
xchg
push
xchg
into
dec
fdivrl
sub
icebp
mov
add
mov
sbb
cld
popa
adc
out
jne
in
inc
lds
bswap
cmc
in
add
imul
test
add
inc
adc
xchg
stos
sub
mov
pop
cltd
leave
xlat
and
mov
fimuls
sub
sbb
popa
shrl
inc
aad
stc
clc
out
sub
mov
pop
cmc
loope
or
pop
pop
dec
jl
mov
xor
push
fdivrl
fcoml
cmp
js
inc
sub
popa
lods
psubsb
pop
int3
mov
push
jne
xchg
repz
push
sub
xchg
dec
sbb
pushf
cmc
aad
clc
rclb
inc
lods
mov
xchg
sbb
pop
cmp
adc
movsl
add
scas
iret
adc
test
adc
inc
loope
cmc
nop
sbb
ljmp
fcmovnu
cltd
outsl
in
fsubr
outsb
cmp
lods
shrb
xor
popa
fwait
inc
and
pop
fisubl
xchg
jg
xchg
popf
jle
xchg
mov
in
mov
pop
popf
mov
in
aam
xchg
adc
shlb
and
mov
popf
fdivrl
stos
lods
sub
fdivrs
int
cmp
cmp
rcll
int
xchg
mov
fldcw
jge
xor
shll
mov
out
jns
inc
mov
dec
sub
lods
fbstp
push
ret
fwait
js
adc
mov
mov
adc
lock
inc
xor
sub
dec
int3
sub
aad
mov
rorl
mov
sbb
imul
inc
out
js
aam
in
or
xchg
cmp
mov
inc
dec
and
sbb
push
icebp
adc
in
rcl
push
test
pop
sbb
pop
sahf
xchg
test
mov
lods
add
xchg
or
pop
imul
movsb
in
test
and
mov
sbb
jne
aaa
cmp
and
pop
xchg
in
fcompl
arpl
int3
loope
pop
out
notb
roll
iret
xchg
stc
push
lahf
test
mov
aam
lods
cmp
jge
cli
movsb
insl
jne
clc
pop
jno
cli
dec
mov
lret
sbb
adc
fsubl
outsb
inc
stos
add
aaa
roll
mov
into
sub
outsb
xchg
and
sub
iret
in
push
int
mov
and
xor
xor
lret
icebp
arpl
add
arpl
push
decb
cmp
lds
dec
jg
sbb
inc
sahf
xor
lea
ficoms
lods
add
jne
and
sub
fisttpll
sbb
mov
jne
mov
std
xchg
xor
in
xor
cmp
inc
xor
outsb
fstpl
in
int3
insl
leave
lods
scas
loopne
cmp
xor
icebp
ss
pop
inc
in
xor
lds
out
dec
cmp
adc
mov
mov
jne
fsubs
rcll
cltd
arpl
cmc
push
cmp
mov
pop
dec
sbb
xor
dec
in
push
in
gs
ss
lock
into
xor
xor
pop
cld
lods
lahf
inc
sub
mov
das
sbb
clc
cmp
pop
mov
loop
rcll
in
into
cltd
pop
imul
arpl
mov
sbb
cltd
jno
aad
in
mov
loop
or
fsubrs
in
adc
ja
pop
mov
mov
shlb
adc
adc
in
xor
adc
aad
je
cltd
ds
pop
xchg
dec
aam
cmp
xchg
and
mov
gs
mov
cmp
enter
mov
test
ret
test
lock
shl
fisttpll
sub
mov
std
mov
fiaddl
and
fsts
xchg
xlat
in
or
cmp
test
pop
aam
hlt
sarl
out
in
cmp
jne
mov
int
gs
xor
dec
and
ss
das
mov
xor
jne
and
fwait
and
lock
mov
sahf
loopne
cmpb
in
xor
cltd
imul
cs
sar
sub
jecxz
and
adc
mov
pop
xchg
sbb
mov
inc
inc
fdivrl
inc
les
xchg
fdivrp
push
insl
pop
push
stc
rorl
xor
inc
out
dec
and
and
shr
outsb
mov
lds
int3
cmc
loope
pop
fs
fisttpll
fdivrs
pop
add
mov
xchg
cmpsl
sub
adc
rcrl
pop
in
daa
stos
fidivrl
pop
dec
dec
mov
enter
int3
enter
rcll
push
mov
pushf
sbb
movsb
loopne
sub
mov
push
sub
mov
mov
fldl
jl
sbb
fs
movsl
cmp
pop
cmp
mov
stc
insb
in
and
mov
sub
dec
nop
jne
popa
inc
mov
fnstsw
pushf
add
lahf
movsb
lods
mov
shll
andb
jecxz
adc
dec
fsubl
lea
sbb
inc
jmp
and
adc
fsubl
pop
addr16
cpuid
int
stos
xchg
imul
push
aas
cmc
mov
sbb
jmp
mov
insl
out
inc
test
cltd
in
mov
pop
scas
and
sub
xor
sub
xchg
mov
in
mov
dec
popf
int
push
push
cltd
cmc
cmp
call
push
mov
mov
push
in
push
test
dec
leave
rcl
test
xchg
rol
int
aam
jge
adc
push
pop
push
sub
jno
shlb
dec
dec
and
mov
sub
and
scas
jl
lahf
add
scas
int
pop
push
cmp
pop
push
sbb
fldenv
fcomps
outsb
pop
add
and
enter
add
lods
lock
cli
aas
mov
jmp
hlt
mov
subl
test
fldl
mov
xor
pop
cltd
fxch
jnp
fimuls
mov
pop
pushf
inc
pop
icebp
into
push
in
pop
mov
out
xchg
mov
aam
cmp
xchg
adc
and
ffree
mov
rorb
aad
rcrl
mov
nop
cmp
adc
insl
mov
jg
in
xor
dec
or
sub
mov
int3
popa
xor
inc
out
xchg
sbb
xor
stc
test
cltd
mov
lds
lret
push
or
sbb
sub
dec
loopne
leave
outsb
fimull
test
into
mov
adc
mov
or
frstor
adc
in
push
pop
aam
mov
sbb
inc
es
adcb
mov
int3
es
and
int
movsl
sbb
call
inc
sub
mov
movsl
jmp
mov
add
jne
xor
shr
into
les
in
scas
inc
std
cmc
sub
pop
jne
cld
pop
lods
push
fstl
xchg
enter
addr16
popf
jmp
adc
and
xor
mov
jmp
mov
movsl
aas
aas
aam
or
xchg
mov
mov
fcomp
push
out
cmc
sub
ljmp
adc
aam
iret
fstl
xchg
mov
cmp
sbb
loopne
jae
fcoms
cltd
test
std
inc
fstps
xchg
cs
fsubr
pop
cmp
pop
mov
fldenv
and
xchg
popa
dec
jle
loope
mov
inc
in
out
cmpb
inc
add
test
popa
test
jno
adcb
aad
shr
mov
int3
pop
mov
mov
jo
mov
sub
cmc
shll
popf
mov
rcrb
push
add
pop
jno
rcll
vmread
lods
cmc
mov
int
roll
mov
insl
into
xchg
xchg
jle
shrb
int3
mov
mov
and
mov
aas
rcr
out
jbe
mov
addr16
mov
enter
loope
ljmp
push
jge
fisttpll
int
fs
pop
sbb
loope
inc
into
xchg
dec
dec
divl
jecxz
xor
out
insb
sub
sarl
sbb
int3
loopne
nop
cmp
jne
fxch
and
fcomps
jmp
sub
lods
int
in
stc
dec
scas
push
test
sbb
cld
call
adc
dec
pop
lods
xor
out
jno
mov
popf
push
call
sbb
popf
icebp
nop
inc
xchg
lods
sbb
cmp
sbb
call
push
testl
dec
cmp
pop
cmp
xor
jmp
sub
sbb
or
imul
mov
mov
push
in
mov
mov
and
jno
ret
popa
roll
shl
int3
lods
mov
xchg
jl
inc
lds
rolb
lock
in
sub
adc
cmp
fmuls
jle
pop
pop
jmp
cltd
faddl
aad
test
xor
push
call
xchg
mov
mov
push
sbb
dec
fstps
mov
xchg
mov
jnp
dec
leave
xchg
jno
out
and
icebp
in
xor
or
popf
sub
cmp
mov
loopne
xchg
dec
xchg
and
aaa
aam
in
xlat
push
xor
push
jmp
fcoms
jno,pt
into
sti
pop
sub
das
sbb
cmp
xchg
mov
cmp
push
out
and
in
inc
mov
xchg
mov
imul
and
adc
dec
in
dec
scas
dec
test
lods
pop
mov
mov
icebp
cmp
and
sub
jno
movsl
sbb
xorl
add
out
push
mov
lods
jle
ds
cmp
mov
std
pop
jne
and
popa
test
dec
fisubrl
in
gs
push
and
push
sub
mov
pop
mov
in
call
xchg
in
leave
lret
cmp
dec
movsb
adc
shll
jecxz
int3
ret
sbb
fnstcw
dec
mov
jno
inc
adc
aaa
mov
cmp
push
xor
pop
in
mov
icebp
paddq
rcr
into
xchg
in
fadds
mov
dec
jle
aad
dec
stos
out
sti
mov
pop
mov
lock
nop
cmp
dec
pushf
shll
scas
mov
xchg
shrl
cs
or
mov
mov
fcomps
popf
mov
pop
push
mov
mov
inc
xor
xor
and
mov
fxch
dec
adc
dec
pop
dec
xchg
rcrl
imul
andl
gs
xchg
mov
inc
add
mov
jns
push
xchg
fldl
lock
and
vminps
sbb
xor
xor
and
lret
cmp
mov
add
pushf
lods
jle
negl
rol
repnz
sbbb
movsl
dec
mov
gs
scas
adc
ret
stos
mov
mov
cltd
sbb
jmp
data16
push
cmpsb
gs
lds
stos
imull
push
insl
lods
push
push
subb
int
xchg
and
mov
jno
sub
cmp
xchg
int3
in
shlb
hlt
fbld
push
mov
mov
mov
lods
mov
imul
loopne
lret
orb
xchg
fnstsw
vmovapd
icebp
pop
in
call
movsb
cmp
test
xor
fisubs
fsubr
call
mov
adc
mov
mov
popa
xchg
sbbl
and
sub
mov
out
frstor
rolb
lahf
inc
push
int
in
mov
xor
popa
mov
sub
cmp
aaa
inc
scas
aad
imul
sub
imul
adc
jno
adc
pushf
int
in
mov
ds
mov
clc
xor
mov
orb
pushf
pop
int
sub
aad
fucomi
and
in
loopne
mov
negl
pop
and
jnp
loope
fiadds
cli
adc
mov
xor
roll
fldl
push
loope
popa
inc
mov
movsb
in
mov
pop
into
dec
icebp
fwait
jg
push
fildll
enter
push
std
pop
sub
insl
mov
xor
jle
mov
rorb
mov
into
fsubr
fldl
aad
fsubrl
mov
cli
push
fucomp
xchg
fstpl
mov
jmp
xchg
leave
and
test
cltd
pop
fcomps
fstpl
xor
dec
loopne
fsubrs
rolb
mov
inc
int3
and
test
repnz
inc
sub
addr16
xor
sub
sbb
mov
add
out
loopne
dec
jno
mov
test
leave
lret
xchg
in
mov
lock
mov
sbb
fsts
cltd
in
ret
xchg
dec
imul
xchg
pop
push
outsb
daa
xor
out
push
xor
xor
or
cmp
enter
pop
add
xor
push
cmp
in
dec
popa
cmp
inc
das
lret
stos
inc
pop
imul
fisttpl
mov
mov
insb
inc
jle
fwait
fs
fs
inc
ret
mov
dec
test
push
pop
rcll
and
jne
jmp
mov
jne
imul
xor
dec
sbb
sub
jne
loop
and
xor
push
xchg
inc
jne
mov
in
sub
lret
fimuls
shr
inc
pop
mov
dec
fnstcw
stos
push
inc
add
mov
test
jnp
outsb
inc
cmp
sub
movups
push
leave
lods
xor
jno
xchg
movsb
xchg
gs
lds
mov
fcmovnbe
push
cmp
pop
jmp
xor
xchg
push
and
dec
orb
call
movsl
adc
shll
movsl
pop
pushf
xchg
xor
aam
adc
push
pop
sbb
add
in
adc
sub
lahf
movsb
cmpsl
push
sub
je
and
insl
dec
push
lcall
lods
sahf
add
cmp
sub
jmp
mov
jbe
sbb
sbb
lods
inc
xor
pop
dec
or
in
sbb
dec
in
pop
adc
jbe
test
and
or
or
add
jle
mov
int3
in
call
cmp
outsl
add
int
in
movsb
mov
neg
int
clc
jno
aas
lea
cmpl
mov
jno
mov
cmp
add
sub
mov
imul
push
sub
scas
es
imul
jle
jle
push
in
icebp
rcll
xchg
daa
push
mov
fwait
rclb
add
leave
sahf
repnz
roll
and
out
fs
pushf
mov
or
mov
xor
inc
sbb
call
loop
or
mov
insl
aam
or
lret
sub
popa
cltd
dec
fdivrl
in
adc
xchg
jle
sbb
sub
pop
movsb
adc
rcrl
cwtl
dec
xor
push
aad
fistpll
test
insl
and
push
pop
xor
sbb
xor
inc
push
jmp
mov
mov
test
jle
rcl
movsl
jne
rcl
dec
mov
sbb
icebp
pop
test
out
sbb
incb
outsb
jmp
mov
push
mov
dec
and
mov
leave
and
and
jl
filds
xor
aam
push
fxch
push
lods
mov
outsl
test
inc
fidivrs
jno
leave
scas
adc
in
dec
xchg
jae
jl
lds
xorb
fsts
mov
xchg
xor
shrl
jg
mov
cmp
dec
adc
push
xlat
loope
pop
outsb
sub
fucomp
aad
pushf
mov
sub
scas
or
rorl
sub
in
adc
in
nop
je
dec
cmpsl
loope
in
or
pop
and
sub
mov
rcrl
pushf
add
push
stc
cmp
imul
sub
loope
aad
cmp
dec
pushf
xchg
sub
loopne
pop
daa
imul
aaa
cmp
test
mov
pop
inc
add
inc
call
in
in
ret
shll
cmc
in
movsl
sub
and
test
orb
inc
faddl
fldenv
int
xor
adc
stc
and
gs
and
cmp
rorb
pop
and
das
and
insl
or
aam
jl
std
cmp
cltd
in
call
or
jecxz
icebp
lea
mov
jnp
jle
insl
push
je
flds
cmc
cmp
dec
subb
loope
out
adc
aam
sub
sahf
add
or
in
fisttpll
cmp
sub
mov
xor
out
dec
test
sub
fstpl
sbb
push
xchg
loopne
mov
cmc
int3
fsubrl
add
xchg
cld
movsb
push
sahf
dec
loope
jg
jp
jne
sbbl
sbb
popf
or
subl
minps
mov
aad
add
in
inc
in
inc
mov
cmp
test
clc
xor
pop
add
in
int3
jno
inc
mov
frstor
and
push
sarb
or
rclb
mov
push
cmp
aad
dec
adc
or
mov
adc
enter
popl
cltd
xor
in
adc
leave
fcoms
int
cmp
call
dec
gs
cli
loope
sbb
int3
in
push
jno
and
lods
int3
mov
or
and
in
iret
jne
pushf
cmc
pop
push
sarb
lds
sub
lock
pushf
addr16
inc
loop
pop
sbb
jmp
rcr
ja
sbb
and
lea
in
shrb
sbb
cmc
sub
shr
fadds
mov
int
inc
cvtps2pi
push
imul
mov
push
and
mull
int
jno
adc
dec
inc
mov
jge
or
int
adc
jne
divb
pop
sub
xchg
mov
adc
dec
xlat
ffreep
cmp
pushf
sub
stos
jns
xchg
jne
mov
mov
jmp
xor
cltd
cltd
sub
dec
loopne
test
mov
gs
mov
shll
lods
out
add
xor
int
mov
movsl
lods
mov
imul
push
rcr
sbb
stos
mov
mov
mov
push
insl
flds
fisttpll
dec
cmp
and
jmp
xor
lea
jmp
push
pop
rcll
mov
inc
call
inc
outsl
jle
fsubrl
fldlg2
and
popf
loopne
xor
arpl
and
mov
stos
push
imul
movsl
cmp
xchg
adc
sub
call
lods
push
rcrb
push
push
movsl
sbb
iret
pop
aad
xchg
jns
push
jmp
rorl
addr16
dec
in
pushf
lock
test
sahf
add
daa
sbb
xchg
mov
cmpsb
shl
imul
inc
cmp
xchg
fs
cmp
adc
cmp
mov
js
fsub
in
dec
testb
imul
jecxz
hlt
xchg
pop
xor
fdivr
cmp
adc
jne
xchg
in
outsl
cs
movsl
xlat
insl
mov
loope
int3
jmp
jno
in
testb
dec
mov
adc
cmc
addr16
addr16
dec
lahf
and
imul
and
xchg
incb
shrl
sbb
mov
rorb
add
insl
cmc
in
popf
outsb
arpl
andb
jmp
leave
pop
insl
cmp
and
pop
idivl
in
leave
sub
mov
adc
xchg
orb
enter
xchg
imul
rcll
cmp
push
insl
loope
push
icebp
insl
xor
add
mov
mov
in
stos
sarb
pop
adc
call
mov
sbb
and
pop
test
lret
jl
lods
stos
dec
mov
and
pop
in
pushf
dec
aad
add
xchg
out
rcl
push
iret
push
sub
push
push
lds
push
fucomp
jno
int
enter
call
lods
adc
mov
dec
sbb
adc
leave
fisttpll
mov
fs
xchg
sbb
int
adc
sub
mov
push
insl
mull
dec
popf
in
into
adc
add
and
imul
jge
movsb
mov
shrl
mov
mov
sub
bnd
mov
fstpl
imul
fxch
test
xor
outsl
lahf
push
push
xor
mov
pop
xchg
push
insl
sbb
cltd
in
and
or
andl
push
loope
or
movsl
pop
rclb
push
xchg
addr16
fcoms
imul
sbb
loope
adc
ds
test
mov
cmp
and
loope
jge
std
add
fdivl
jge
dec
int
and
mov
adc
push
das
mov
in
insl
repz
test
xchg
enter
mov
push
pop
mov
adc
bound
imul
call
icebp
out
pop
inc
repz
xchg
fcomp
mov
daa
mov
pop
xchg
test
das
push
loope
daa
dec
test
and
push
lahf
popf
in
fucomp
into
xchg
icebp
mov
cltd
xchg
xor
push
add
jne
loope
aad
dec
adc
mov
lock
push
pop
or
xorb
faddl
push
fidivl
sarb
xor
cmp
xchg
dec
lock
int3
add
dec
sbb
mov
das
cltd
jl
jmp
out
insl
adc
push
int3
in
in
scas
lret
and
pop
xor
sub
inc
rorb
jle
rorl
xor
push
sbb
push
sti
adc
fstp
rclb
mov
mov
sbb
mov
cltd
test
cmp
push
sub
cmp
test
push
enter
repnz
movsl
cmp
sbb
mov
sbb
sbb
addb
xor
outsb
xor
inc
cmpsl
jmp
shrb
rorb
cmp
xchg
mov
cmp
mov
cmp
xor
outsb
jb
mov
or
dec
fnstsw
int
es
in
jle
fs
ret
iret
pushf
and
test
mov
ljmp
cld
xor
gs
jge
pop
jno
into
icebp
dec
jmp
mov
imul
xchg
xchg
aaa
pop
or
push
xchg
ds
push
aam
icebp
dec
lock
cmp
sub
add
in
lds
inc
push
xchg
sbb
in
rorb
loope
inc
cld
cmpsb
inc
in
aam
cmp
cmpsl
adc
enter
in
xchg
movsl
in
dec
jg
fdiv
mov
lds
fs
adc
adc
ffreep
filds
sbb
lods
test
bound
jbe
pushf
ficoms
mov
aad
adc
outsb
icebp
cmc
push
xchg
push
loope
adc
and
popf
insl
dec
sbb
xchg
mov
call
mov
popf
jno
sub
cmp
gs
pop
jl
push
aad
or
dec
xor
pop
jno
push
repz
out
aas
pop
gs
xor
mov
inc
ljmp
fdivrs
pop
in
and
loopne
sub
jnp
and
fs
fcomps
jno
aas
loope
dec
add
jne
cli
sub
and
jle
sbb
shl
sub
xchg
dec
sbb
lock
into
xchg
fstps
icebp
outsb
hlt
mov
inc
test
repnz
adc
sti
xor
mov
rcrb
popf
int3
loopne
add
call
in
xchg
jo
sub
rcrl
or
sti
dec
cmp
dec
jg
fidivrl
jge
inc
test
inc
mov
or
inc
mov
sarl
and
in
insl
adc
jno
adc
arpl
lea
out
xlat
in
roll
stos
and
int3
adc
movb
imul
sub
in
popa
sar
pop
pop
lock
rol
insl
fstps
test
push
aaa
cmp
sbb
gs
popf
mov
and
pop
repnz
cmc
shll
mov
inc
adc
push
popa
out
mov
outsb
leave
xchg
sbb
jnp
imul
enter
rcl
lds
xchg
or
xor
sbb
pop
sub
cmp
psubw
fstp
dec
lcall
xchg
fucomp
sub
insl
pop
jne
mov
xchg
sub
lock
mov
inc
push
and
xor
xchg
adc
xchg
out
outsb
jp
mov
int
insl
in
and
mov
loopne
mulb
arpl
inc
repnz
call
dec
inc
lds
add
test
jl
pop
movsl
imul
mov
lcall
ficomps
outsb
mov
xor
jno
push
dec
rep
cmp
lahf
fsubr
adc
dec
lods
or
int3
test
js
sbb
mov
sub
test
pop
enter
das
lock
rolb
dec
mov
fisubs
xchg
scas
sbb
pop
adc
sub
int3
int
nop
test
leave
or
cmp
test
jmp
push
sub
aam
sub
lret
movsb
dec
test
push
dec
gs
xchg
and
lds
pop
sahf
test
pop
sub
cmp
lret
les
addl
inc
adc
lock
xchg
mov
mov
dec
sbb
xchg
adc
dec
lock
in
in
test
pop
add
dec
xor
push
pushf
fstps
mov
xor
and
lods
imul
xor
xor
sbb
sbb
shl
scas
mov
insl
mov
test
mov
inc
xchg
push
jmp
dec
sub
bsf
rclb
mov
cmp
and
cmp
push
xor
xor
jecxz
testl
mov
int
cmp
stos
xchg
shll
cli
shlb
dec
dec
xlat
pop
sub
pop
imul
xchg
mov
lock
mov
push
shll
and
into
mov
movsl
sbb
fcoml
mov
into
jo
sbb
sbb
das
mov
sti
hlt
rcrb
rcr
pop
mov
and
and
fadds
jne
gs
scas
int3
int
movsb
in
jo
std
cltd
mov
pop
insb
adc
cmp
mov
sbb
lret
mov
scas
clc
int
outsl
xor
push
xchg
push
push
insb
fmull
push
sub
insl
add
icebp
aam
and
push
call
sbb
loope
pop
cmc
loope
mov
push
adc
cmp
mov
lock
push
int
and
mov
mov
jecxz
xchg
popf
add
int
lods
test
subb
movsb
mov
dec
xchg
gs
xchg
fdivl
int
and
mov
and
loope
lds
test
aas
pushf
xchg
popa
xchg
movsb
mov
dec
and
call
pop
sbb
rorl
lds
flds
or
test
jns
sub
cltd
int3
lds
in
in
int
in
push
icebp
dec
cmp
aas
sbb
enter
jge
adc
mov
lock
jg
rorb
aad
stos
xchg
xchg
sbb
dec
mov
fisubrl
adc
sbb
pop
int
fdivs
lret
add
icebp
cmp
and
cmpsb
aaa
shl
inc
sbb
xor
fs
lea
movsl
sub
jge
repnz
and
cltd
pop
or
sbb
out
mov
cltd
clc
sub
xor
cld
push
sbb
jne
jle
pop
pushf
out
pop
pop
insl
fldenv
sbb
imul
leave
call
mov
jnp
pop
dec
es
mov
loopne
mov
in
and
cmc
dec
xchg
fsubs
xchg
sub
and
pop
pop
dec
mov
popf
enter
sub
dec
pop
fwait
push
dec
clc
aas
mull
mov
out
jge
aad
add
add
xchg
mov
jbe
sti
rorb
aaa
fstl
fnsave
mov
call
sarl
push
ffreep
mov
stos
jle
lods
xchg
repnz
lret
inc
stos
movsb
ja
jmp
loope
in
pop
mov
dec
pop
jmp
lods
jge
cltd
clc
inc
push
int3
dec
adc
decl
xor
cmp
cs
xchg
kmovb
and
sub
in
in
jle
icebp
iret
mov
call
leave
in
xchg
pop
mov
pop
aad
popf
xchg
int3
enter
lret
mov
xchg
outsb
dec
inc
xor
inc
jp
or
shll
mov
cmp
adc
cmp
addr16
out
gs
movsl
sbb
loope
ret
jmp
loopne
jnp
inc
xor
lods
icebp
mov
mov
sub
jno
stos
mov
xlat
stos
xchg
adc
push
leave
sub
popa
cmp
in
dec
in
je
scas
sbb
mov
mov
movsb
or
std
pop
inc
mov
pop
cmp
cld
popf
xchg
push
bnd
push
cmc
insl
add
ljmp
fnstenv
mov
mov
aad
shll
pop
imul
sub
out
inc
pop
mov
movsb
xor
sub
dec
loopew
cli
test
inc
fnstsw
cmp
lret
sub
test
loopne
dec
popa
mov
cltd
xor
sbb
insl
and
push
or
in
lds
inc
fsubrl
fadd
cmp
mov
and
xor
in
fs
sbb
imulb
call
gs
mov
scas
cmpsl
icebp
insl
popf
cmp
lods
dec
cmpl
clc
push
pop
nop
lret
gs
popa
fwait
mov
mov
imul
popf
xor
sub
loopne
and
and
sub
jmp
popa
test
push
das
out
lods
loopne
fmull
jecxz
aam
imul
mov
loope
rcrl
push
std
xor
outsb
push
inc
inc
fwait
insl
adc
ror
lahf
cltd
mov
inc
xchg
push
jmp
add
pop
sbb
jne
mov
roll
leave
xchg
pop
mov
iret
pop
mov
inc
xor
leave
mov
imul
jmp
sbb
mov
xchg
fstps
push
cmp
mov
testl
imul
sbb
and
ds
mov
mov
popf
call
lods
lea
in
fmuls
loope
sbb
popa
loop
cmp
xchg
cmp
jne
in
or
insl
adcb
int
loopne
fwait
pop
inc
adc
and
pop
out
orb
shlb
pop
mov
fsubr
test
fucom
jg
lea
hlt
inc
mov
lcall
fisttps
pop
insl
in
sub
xor
jmp
loope
sbb
sbb
push
fisttpll
dec
sub
jmp
sub
adc
inc
inc
cmp
xchg
cmp
loope
and
pop
lcall
xchg
xor
in
add
xchg
fst
inc
cmp
lock
daa
push
cmp
rorb
popl
push
adc
mov
jle
push
push
arpl
mov
dec
repnz
repnz
in
mov
sub
mov
lods
mov
pop
fnstsw
int3
pop
in
ljmp
xlat
sbb
inc
out
jg
sub
into
cmp
cwtl
and
out
popa
test
cmp
xchg
in
loope
xchg
xchg
adc
popa
rol
lea
pushf
sbb
mov
int
aad
mov
xor
and
rcl
js
sub
fmul
popa
outsb
ret
pop
frstor
in
push
mov
lock
je
inc
int3
jle
add
into
sbb
xchg
cmp
mov
and
mov
add
pushl
lds
xchg
int
shll
int3
dec
jge
or
shrb
adc
and
dec
jge
in
in
push
das
adc
adc
mov
xor
mov
out
mov
into
mov
mov
inc
mov
mov
fldcw
sub
jno
mov
pop
inc
pushf
stos
sbb
out
adc
pop
cmp
jb
imul
jmp
pop
mov
rclb
sub
push
gs
shl
sbb
stc
dec
mov
inc
sbb
adc
shr
xchg
mov
aad
mov
xchg
cmc
les
pusha
sub
mov
dec
xor
outsb
dec
mov
xor
fs
pop
int3
insl
lret
xchg
xor
imul
mov
and
mov
sbb
in
fsubrl
pop
pop
jle
push
push
fstl
aam
fld1
push
imul
call
jno
les
movsb
into
cmp
fadds
push
xor
jge
fdivrs
into
imulb
jmp
pmulhw
jne
in
pusha
cmp
mov
mov
imul
pop
xor
or
xchg
jno
in
insl
jle
inc
sbb
jle
fnsave
cmp
mov
loopne
orb
add
outsb
scas
push
in
xchg
ror
mov
push
xchg
insl
ret
cmp
lods
popf
aad
sbb
xchg
adc
sub
xchg
xor
rclb
and
jl
lahf
movsb
shrd
popa
sub
cmp
push
dec
xor
repz
xchg
pop
cmc
adc
add
mov
lock
fdivr
sub
out
cmp
in
xor
xchg
mov
push
imul
rclb
mov
divb
cmp
cwtl
leave
jno
stc
mov
cmp
pop
ret
mov
xchg
and
dec
cs
xchg
mov
mov
pop
lcall
movsb
jnp
mov
or
inc
pop
cltd
into
xor
hlt
loope
std
inc
cmp
push
inc
fcoms
dec
aam
xchg
subl
dec
pop
int3
xchg
dec
popf
in
mov
jne
cmp
aam
dec
int3
loopne
filds
aad
sbb
adc
mov
fwait
mov
inc
jne
adc
in
icebp
and
leave
repz
adcb
mov
xor
pop
popf
insl
mov
test
jmp
and
out
dec
pop
shrl
test
push
leave
xchg
inc
lea
subb
mov
mov
popf
test
movsl
mov
fsubrl
sarl
scas
push
ret
adc
jmp
sub
int
sub
xchg
arpl
int
xchg
rcrl
lods
inc
lret
and
sub
xchg
mov
push
cs
inc
std
pop
cmp
or
shlb
xor
adc
out
shlb
jle
mov
lret
xor
inc
mov
popf
insb
mov
ss
dec
inc
xor
lods
xor
shll
mov
mov
call
outsb
mov
popf
adc
mov
push
jge
rclb
insl
xor
push
jbe
mov
outsb
int
inc
movsl
outsl
adc
rorb
imul
fcompl
mov
lcall
cmc
and
inc
mov
mov
std
aaa
hlt
pop
in
insl
fnstenv
push
inc
sbb
jmp
pop
subb
xchg
or
cmc
mov
jne
mov
ret
adc
rorb
shll
xchg
pop
scas
lds
mov
cltd
clc
aaa
scas
scas
pop
cmp
sbb
cmc
notl
pop
leave
icebp
inc
pop
jp
sub
cli
lods
inc
insl
shll
push
and
mov
ja
cmp
cld
cltd
in
adc
aad
dec
xor
sahf
jp
cmpsb
push
xor
inc
mov
fsubr
mov
jmp
idiv
add
xchg
dec
jae
push
push
mov
insb
dec
popf
inc
xchg
outsb
mov
sarb
lock
and
aad
sub
pop
jmp
leave
mov
mov
mov
in
lcall
in
mov
cmp
xor
sub
dec
cs
sbb
scas
sbb
fnsave
push
leave
lahf
or
in
ja
pop
inc
pusha
insl
jle
sar
and
add
or
jns
jle
xchg
dec
pop
lock
dec
hlt
lds
pop
jno
xchg
popf
dec
fmuls
push
pop
inc
cmc
mov
ds
daa
pop
adc
or
mov
push
cmp
pop
sbb
in
mov
jmp
popf
fdivrl
adc
mov
jne
jo
pop
dec
and
mov
cltd
inc
aad
pop
scas
je
pop
push
or
in
ret
shrl
ret
jne
mov
int3
insb
adc
aaa
dec
jb
pop
dec
mov
movsb
add
adc
in
push
push
imul
into
cmp
outsb
fucomi
or
and
lret
pop
mov
push
mov
inc
sar
pop
dec
dec
push
lock
popf
or
jge
ret
push
cmp
push
aam
pop
in
cmp
sub
es
das
mov
pop
icebp
in
in
lods
cmp
mov
adc
jg
clc
add
inc
insl
xchg
shlb
aad
xchg
sbb
jmp
or
lds
cmp
outsb
jo
inc
mov
mov
pop
test
popf
jge
pushf
and
cmp
mov
icebp
mov
adc
xchg
in
inc
cmpsl
xchg
rol
cmc
cltd
rorb
mov
in
and
sbb
pop
add
cld
mov
lahf
cmp
data16
push
xor
adc
jnp
and
inc
inc
imul
pop
xor
int3
fstpl
mov
test
imul
test
sbb
gs
imul
mov
jmp
xorb
xor
jno
xchg
inc
xchg
add
call
push
mov
sub
fisttpll
adc
rcll
icebp
sbb
adc
in
mov
imul
leave
loope
add
fdivrl
jne
data16
sbb
fs
cmp
test
or
rol
pop
pop
sbb
popa
lds
ja
or
es
and
out
or
pop
inc
sub
dec
mull
test
jae
xor
sub
mov
int
sub
push
fucomp
or
xchg
mov
mov
data16
sub
out
jge
xor
push
scas
sub
aam
and
data16
adcb
lds
cmp
mov
add
or
mov
nop
insb
mov
adc
mov
icebp
dec
outsl
imul
movsl
jno
sbb
sbb
ficomps
pop
xchg
xor
popa
mov
nop
sti
mov
mov
jge
lcall
out
sub
xor
movsl
add
imul
lods
mov
pop
sub
popa
ror
and
cmpsl
sar
jne
jno
mul
lds
loopne
sbb
jne
ret
mov
pop
inc
pop
xchg
xchg
daa
int3
xor
jmp
in
in
sub
sub
cmp
push
jne
fnstenv
pop
lret
cmpsl
sbb
data16
fwait
gs
mov
jmp
popf
lods
xor
rorb
prefetch
xor
xor
adc
fwait
enter
insl
mov
mov
sarl
adc
aad
mov
rcrl
and
push
mov
cmp
mov
jle
cmc
rcll
cmp
rcr
inc
cmp
mov
sub
int3
in
add
fnstcw
je
aad
aad
cmc
mov
push
gs
pop
push
push
enter
sbb
push
fs
xchg
push
aad
imul
stos
and
pop
lcall
cwtl
shrb
sbb
shl
cmc
adc
adc
sub
mov
hlt
out
test
shr
xchg
pop
mov
pop
adc
int3
inc
sbb
lahf
and
sti
xchg
pop
int3
push
push
insl
lock
cmp
and
mov
icebp
out
popf
xchg
or
stos
icebp
incl
and
in
push
jo
sbb
push
adc
adc
jmp
add
rcr
lock
xor
lcall
pop
jno
frstor
shlb
int
lds
leave
xchg
dec
adc
loopne
imul
mov
push
lods
movsl
fists
inc
cmc
push
xor
mov
int3
or
or
jmp
pop
gs
xorl
xor
adc
scas
scas
in
dec
enter
or
xchg
popa
inc
je
insb
xchg
jmp
adc
lea
popf
into
or
sub
test
cmpsb
shrb
cmpb
aam
loopne
cmc
lods
mov
adc
adc
adc
fldcw
xor
sub
inc
test
pop
mov
pusha
fnstenv
mov
test
fdivl
lcall
lods
dec
inc
mov
cmc
xchg
jg
mov
ja
pushf
test
dec
xchg
movsl
shrl
xchg
pop
rcrl
outsl
sub
int
mov
jge
jo
gs
push
mov
adc
xor
mov
cmpsl
cmp
ror
dec
pop
in
lcall
leave
lea
dec
shrl
mov
jecxz
and
out
in
in
xchg
in
or
aad
push
inc
pop
adc
cltd
int3
imul
sub
xor
xchg
sbb
pop
jne
ret
push
mov
and
mov
inc
xchg
mov
and
enter
test
frstor
jne
cmp
adc
popf
std
jbe
mov
add
popa
adc
sbb
adc
dec
mov
fnstcw
jg
in
pop
mov
sti
test
jle
dec
jnp
mov
loope
mov
int3
xchg
inc
jmp
cld
shlb
sbb
ror
push
out
adc
call
pop
sbb
mov
sub
aam
ficoms
and
and
lea
in
icebp
pop
repz
popa
movsl
cltd
out
fstpt
mov
cmp
test
cmp
gs
call
hlt
xchg
movsb
jae
push
xchg
gs
adc
lcall
insl
gs
in
scas
mov
cmp
enter
insl
pop
fs
out
fs
xor
roll
cltd
pop
call
jne
mov
mov
fs
in
repnz
int
hlt
cmp
xchg
rcl
lock
enter
dec
xchg
xchg
sub
and
sbb
and
cmp
sub
lcall
dec
test
insl
out
pop
movsb
cmp
xor
cmp
in
sub
addb
lret
adc
xchg
xor
cltd
pop
loop
scas
and
xor
fadds
leave
mov
pop
popf
mov
jle
imul
sub
mov
repnz
pop
roll
sub
fildll
loope
lahf
mov
mov
push
or
and
mov
cmp
push
int3
mov
incl
pop
mov
sarb
les
popf
sub
in
push
pmaxsw
push
test
sub
and
cmp
cmp
loope
bound
and
lds
mov
jbe
inc
sub
insl
nop
aam
cmp
and
sbb
addr16
jne
jmp
shll
sub
and
push
xor
in
add
jno
in
in
sarl
in
fsubs
xchg
pop
imul
jae
fcom
aad
jecxz
dec
insl
push
sbb
in
gs
in
sbb
adc
shll
inc
sbb
imul
dec
sti
and
mov
dec
int3
push
test
mov
pop
jnp
stos
mov
insb
pop
rcrb
mov
call
popf
popa
dec
or
inc
dec
and
mov
fcoml
xchg
push
das
and
jl
push
test
sub
mov
sti
add
imul
mov
mov
cltd
or
scas
mov
sbb
inc
dec
and
sub
sub
in
mov
std
mov
std
xor
add
dec
enter
stos
push
mov
jno
inc
rolb
mov
iret
inc
sbb
dec
pop
mov
mov
fstp
jge
inc
aad
fcoml
or
in
cwtl
mov
ror
lds
enter
mov
or
scas
gs
xor
cmp
add
mov
sbbb
add
xor
sbb
mov
mov
dec
mov
or
pop
xor
and
mov
jl
loop
lods
add
loopne
jge
addr16
jno
imul
aam
dec
popf
xchg
pop
fnstsw
int3
xor
xor
adc
xor
sbb
xchg
jo
gs
fidivs
mov
add
nop
fwait
pushf
jle
mov
outsl
es
int3
mov
pushf
jg
sub
imul
or
inc
lcall
pushf
jno
pop
sbb
pop
rclb
adc
pusha
dec
sarl
imul
cltd
or
in
cmp
cltd
adc
shl
and
pop
sbb
nopl
xchg
inc
push
xchg
shll
scas
jmp
mov
cmp
in
add
jno
fcoms
xor
int3
mov
dec
pop
inc
lock
lods
adc
xor
cmp
packssdw
xor
adc
popa
sbb
dec
and
and
testb
mov
push
mov
stos
mov
jl
cmc
insl
xor
in
dec
cltd
jmp
sub
sbb
test
loope
cmp
lods
mov
adc
imul
stos
rcl
ror
and
or
push
ret
iret
int
fdivrl
xor
jne
inc
adc
xor
fsubrs
push
and
adc
fldenv
addr16
sub
sub
insl
xor
int
sub
lods
dec
fnstenv
in
adc
sbb
xchg
xchg
mov
sub
sahf
lods
cltd
jl
inc
adc
aad
in
nop
xor
cltd
rcrb
pop
xor
fsubrl
leave
adc
add
jmp
inc
xchg
cmp
and
push
in
push
xchg
push
mov
cmpsl
pop
xchg
mov
loope
dec
into
mov
xor
pop
flds
fdivrl
and
lahf
cmp
sbb
jle
xchg
popa
pop
mov
cld
pop
dec
pop
jno
jge
cmp
nop
push
inc
adc
in
call
in
xor
leave
fdivl
addl
sub
lods
enter
rorl
test
jno
push
cmp
rorl
ror
lods
nop
cmpsl
mov
push
fnsave
xor
outsl
das
into
xor
sbb
adc
mov
cmp
cmp
insl
pop
jne
into
dec
bound
stos
inc
fistpll
adc
sub
in
in
insl
cltd
sahf
hlt
sbb
iret
cmp
dec
popf
and
xchg
adc
loope
jle
mov
inc
outsb
aad
int
mov
ja
xor
sbb
bnd
fisttpll
xlat
mov
imul
int3
lock
cmp
cwtl
add
movsl
jmp
insl
imul
out
add
fisttps
xor
mov
rcl
test
in
fwait
lea
xchg
dec
nop
xor
adc
lds
int3
xor
rol
jne
add
pop
lahf
or
mov
push
mov
pop
rcll
popf
ss
cmp
dec
push
cs
sub
aad
insl
inc
mov
enter
scas
dec
cltd
push
aam
loope
in
mov
mov
xor
jmp
mov
shld
shrb
test
iret
frstor
enter
int3
jge
mov
and
adc
fwait
les
loopne
or
loope
adc
mov
xor
in
stos
lods
loope
cmpsl
pop
xchg
sbb
and
icebp
adc
cmp
mov
mov
pop
ret
lds
fisttpll
sbb
ss
mov
sub
fstl
inc
jle
sub
dec
in
inc
fldcw
cmp
or
jne
rcll
dec
mov
dec
sbbl
insl
sub
add
add
sbb
adc
sub
popf
icebp
push
mov
clc
pop
ror
ficoms
into
add
stc
mov
icebp
fstps
mov
aam
inc
pop
shr
sbb
gs
test
adc
inc
inc
sarl
jb
mov
loope
mov
int3
stc
mov
adc
mov
jmp
dec
jno
fxch
in
enter
or
push
push
scas
mov
insl
loope
pop
xchg
sbb
jno
sub
inc
mov
mov
mov
cmc
in
aas
push
pop
ret
mov
jo
loopne
xchg
mov
xchg
and
and
push
das
sbb
inc
outsl
adc
in
idiv
jge
lcall
cmp
push
in
loopne
outsl
ja
xchg
adc
mov
insb
xor
pop
mov
cmp
fldlg2
jne
cmp
ret
jg
jno
pop
outsb
pop
cmp
leave
les
dec
ss
in
sub
test
icebp
mov
inc
lods
push
in
imul
sub
cmp
and
lds
pop
movsl
dec
add
incl
dec
inc
pop
push
call
jne
mov
enter
lock
loope
add
sbb
jo
pop
mov
sub
enter
mov
sub
int3
out
in
out
sbb
and
mov
xchg
cltd
sub
pop
mov
shrl
sbb
inc
pop
dec
pop
sbb
lock
aam
fs
movlps
lds
ds
mov
xchg
inc
daa
int3
iret
fmull
mov
mov
xor
int
add
lds
out
test
xchg
push
popa
mov
imul
fcomps
mov
xor
cli
lock
shlb
mov
es
mov
and
test
push
cmp
mov
ret
adc
jns
scas
inc
inc
pop
cmp
push
gs
inc
add
int3
mov
popf
icebp
sbb
or
inc
mov
adc
mov
pop
mov
push
inc
push
pop
xor
pop
sub
sbb
xor
cmp
xor
aam
insl
inc
test
and
in
xchg
jge
imul
pop
push
sbb
add
mov
popf
sbb
sbb
mov
xchg
dec
sub
lret
jno
sbb
cltd
out
out
jne
push
insl
movsb
xor
fs
xor
dec
pop
call
enter
xchg
inc
xchg
cld
xchg
push
push
lods
ljmp
cmp
dec
mov
xor
sub
inc
subl
adc
mov
test
mov
cmc
adc
idivb
in
aad
xor
or
lcall
sub
mov
xchg
sahf
insl
dec
out
sub
test
decl
scas
xchg
and
sbb
scas
mov
cmp
push
xchg
div
arpl
pop
sub
cwtl
cmp
and
or
int
inc
push
pop
cmc
push
push
adc
push
insl
jne
add
adc
int3
negl
sahf
push
push
sub
lock
lcall
push
or
fbld
push
lods
push
scas
or
test
dec
imul
add
pop
leave
das
out
cmp
mov
ja
sti
enter
mov
jmp
fidivs
push
lock
xor
mov
into
adc
fsubr
pop
outsb
sbb
push
mov
adc
int
nop
mov
xor
adc
xor
popa
fsubr
outsb
sub
mov
xor
pop
sub
pop
int3
test
xchg
insl
jmp
icebp
aam
sub
and
aad
popa
imul
dec
and
lods
enter
fsubrs
mov
mov
push
fcomps
pop
mov
nop
xor
mov
rolb
cld
enter
enter
hlt
fstps
push
pop
out
movsb
in
ret
rcl
loopne
aad
call
or
fst
bound
into
shll
and
push
mov
adc
sbb
pop
popa
jb
and
rorb
sub
lds
call
insl
int3
and
lock
jle
mov
in
and
rcrl
aad
jno
int3
loope
sub
imul
fstps
dec
sahf
out
xor
shll
jae
pop
and
pop
sbb
enter
jge
enter
ljmp
mov
andl
or
and
cld
mov
dec
sbb
popf
cmp
cmc
and
cmpsb
adc
adc
push
in
in
testb
mov
mov
popa
xor
rcll
mov
sbb
sbb
xchg
into
push
jmp
jecxz
inc
cmpsb
sub
aam
jo
dec
and
sub
pop
sub
dec
inc
aad
inc
mov
int
adc
cmc
mov
adc
lods
loop
es
ss
cmpb
pushf
xor
hlt
xor
adc
in
adc
sbb
inc
push
arpl
pop
push
repnz
cmc
decl
std
sub
cmpsl
jle
std
aad
cmc
fdivrl
std
push
cmc
repz
cmc
inc
jle
aad
cmc
mov
aad
nop
cmc
fldcw
cmc
jbe
and
jle
lods
sahf
movsl
cmc
jle
std
dec
in
in
out
lahf
jne
cld
std
push
in
add
cmc
jbe
cmp
cmc
decl
std
sub
cmpsl
jle
std
aad
cmc
loopne
cmc
aad
cmc
repnz
cmc
inc
jle
aad
cmc
mov
pusha
lods
push
fdiv
sub
cmc
jbe
and
jle
inc
jle
test
or
test
andl
ja
pop
mov
cltd
in
imul
jo
jg
pop
andb
gs
pop
mov
aam
jmp
dec
movsl
sbb
test
jle
fs
or
fstps
cmp
sub
jle
das
mov
cmc
xchg
and
pop
or
mov
push
inc
imul
loope
divl
test
adc
xchg
dec
mov
and
fwait
insb
add
push
push
adc
lret
pop
ret
adc
in
repz
lret
push
fs
or
stos
lods
pop
sub
int
dec
sub
fst
mov
movsb
lods
mov
xor
xlat
inc
stc
sbb
xor
rclb
sbb
dec
mov
leave
push
out
mov
adc
mov
dec
push
andb
mov
and
fcompl
in
in
ss
cs
leave
jns
outsl
shrl
xchg
shrl
mov
mov
daa
int3
dec
pop
loope
lock
push
mov
push
sbb
xchg
loope
or
popa
sbb
inc
repz
or
sbb
cmc
pusha
pushf
mov
mov
adc
loope
fisubs
and
sbb
adc
push
adc
aam
dec
popf
pop
shlb
insl
mov
sbb
mov
cmpsb
loope
jnp
lret
xor
cmp
adc
xchg
loope
cmp
pushf
dec
mov
add
mov
jo
movsl
loopne
fcompl
lods
cmpsb
mov
ret
jle
sarl
sti
mov
cmp
adc
mov
dec
sub
mov
jge
aam
decb
mov
pushf
cmc
push
mov
xchg
pushf
loope
adc
mov
inc
dec
in
xchg
ja
pop
lahf
xchg
xor
xor
lahf
mov
test
ja
flds
push
mov
fadds
lahf
mov
test
rcl
pop
dec
enter
hlt
test
leave
jbe
bound
dec
leave
add
pushf
dec
lods
push
mov
fistpl
pushf
lds
pop
fstps
scas
lahf
sub
dec
movsb
mov
test
loop
shll
mov
sahf
fs
test
pop
adc
jle
sbb
in
jle
test
rol
adc
movsb
neg
adc
int3
dec
add
ret
faddl
in
loopne
xor
sti
loop
faddl
roll
inc
inc
sub
mov
inc
fsubl
int3
in
add
and
dec
pop
loope
xchg
hlt
lds
test
in
pop
sbb
sarb
fs
bound
int
icebp
inc
xchg
inc
pop
aam
mov
jns
or
test
in
or
add
ljmp
lret
in
ror
or
mov
xchg
xchg
clc
ss
lods
xchg
mov
pop
inc
add
loop
or
in
mov
mov
hlt
leave
add
sbb
lret
rorb
fildl
add
push
addr16
add
outsb
sub
dec
push
jo
mov
imul
je
int
fisttpll
rcll
aas
rcl
lods
int
inc
xchg
aam
mov
dec
dec
popa
sbb
loopne
in
mov
in
movsl
repz
mov
push
xchg
cld
sbb
mov
cld
cmp
pop
int
int
int
int
test
sbb
lods
sub
or
inc
xchg
cmp
xor
popl
ss
adc
dec
fdivrs
mov
xor
in
gs
lock
fcomip
out
mov
lcall
loopne
dec
aaa
in
gs
push
lock
pop
jno
cmp
icebp
fdivrs
dec
das
out
aam
dec
pop
dec
in
call
mov
test
pop
shrb
aam
aaa
push
and
icebp
in
cmp
lock
pop
int3
pop
mov
enter
pop
enter
in
das
call
lock
mov
shl
aam
das
fadds
test
push
enter
pop
jno
cmp
fadds
push
push
mov
pop
jno
cmp
aam
adc
dec
loopne
in
dec
add
lock
sbb
push
jp
mov
sbb
enter
in
call
mov
cld
stos
xor
or
rcr
xor
fsubl
and
xchg
adc
in
mov
adc
and
and
mov
cs
addr16
fbld
inc
movsl
xor
test
adcl
lahf
lock
sbb
xchg
mov
xchg
lods
ficoms
ficoms
ficoms
adc
xchg
gs
aam
test
cmp
hlt
cmp
xor
fcom
insb
fistpl
in
inc
rcll
cmp
mov
push
and
pusha
adc
or
call
out
xor
push
mov
movsb
lahf
jge
jg
mov
movsb
pop
jge
pop
aad
xor
movsb
out
jb
aad
xor
pushf
adc
inc
nop
int
int
mov
and
loope
outsb
xor
into
popf
call
adc
lahf
sarb
cmpsb
xor
sub
pop
inc
rclb
xor
mov
aaa
pushf
inc
negb
cmp
jae
pop
rcll
pop
enter
repnz
dec
nop
shlb
cmp
and
outsl
cli
bound
test
in
test
dec
in
ret
aad
loop
mov
in
les
push
mov
movsb
in
fsub
cmp
hlt
daa
mov
in
inc
aaa
popw
ss
ror
jmp
xor
sbb
loopne
loope
sub
out
int3
xlat
int3
push
shrb
sar
shlb
lahf
ror
nop
shl
sarb
nop
sar
sahf
mov
xchg
sar
aam
ret
cmp
mov
ds
push
stos
bound
ljmp
xchg
push
loop
push
mov
jge
xchg
addr16
cmp
xchg
in
dec
loopne
loopne
dec
loopne
lahf
loopne
sbb
lahf
aam
or
mov
imull
jg
mov
xchg
push
mov
stc
std
jmp
inc
ss
cmpsb
pop
and
mov
cmp
jb
icebp
call
mov
loopne
popf
loopne
lds
loopne
int
stos
inc
scas
cmp
mov
aaa
jl
scas
iret
add
xor
or
sahf
jp
dec
in
cs
xlat
loope
test
mov
std
popf
test
ss
push
aam
pop
mov
mov
sbb
aam
push
aad
mov
sbb
mov
stos
inc
sbb
scas
inc
pop
test
int
xchg
fmul
sbb
idivb
inc
shrb
pop
mov
cwtl
int3
xchg
in
inc
pop
jns
and
xchg
ss
ss
pop
mov
mov
int3
sub
das
adc
jecxz
cmp
sbb
mov
cwtl
xchg
mov
shlb
pushf
les
aas
insb
mov
lods
push
mov
pushw
hlt
cmp
pop
pusha
jno
dec
in
cs
push
fsubr
call
xlat
std
fmul
mov
sbb
jns
rolb
dec
sbb
mov
add
in
fwait
test
mov
mov
fidivl
mov
adc
inc
dec
jge
bound
ret
imul
into
jle
dec
lock
test
in
shrl
pop
in
push
push
jne
jb
fadds
mul
pushf
add
mov
fsubrl
lock
test
sbb
in
into
push
stc
cli
dec
pop
and
sbb
dec
push
jl
mov
in
fdivl
inc
in
je
mov
sub
into
push
xchg
in
shlb
enter
and
inc
jg
sub
adcl
fstpl
lods
in
scas
jb
jno
dec
mov
mov
shll
insl
pop
sbb
lds
sahf
cmpsb
xchg
push
mov
push
xchg
les
scas
dec
xor
in
sbb
jns
push
jmp
or
aam
fdivr
push
imul
pop
rcr
sarb
jns
pop
lods
movsl
sbb
cmc
loope
test
sbb
mov
lods
test
jp
into
fsubs
jle
int3
pop
fcomp
sahf
daa
data16
xor
dec
dec
pop
mov
pop
in
out
andl
mov
scas
push
jnp
repnz
jb
idivb
and
ss
insl
loop
xchg
lds
mov
aad
adc
leave
fs
inc
outsl
icebp
sub
push
inc
inc
xchg
dec
in
xchg
inc
gs
dec
push
and
outsb
scas
dec
add
mov
mov
lock
sub
in
mov
push
adc
hlt
in
or
in
xchg
popf
push
scas
lahf
adc
cmpsb
push
faddl
aam
je
loopne
rclb
sbb
test
xor
inc
dec
das
in
mov
add
or
outsl
das
cld
pop
push
les
sbb
sub
in
insl
xor
into
pop
dec
mov
std
jb
fsubr
xchg
aad
fcompl
dec
insb
push
inc
mov
inc
xchg
jae
int3
jl
into
xchg
mov
lds
mov
mulb
aad
into
ret
dec
mov
out
ror
cltd
jmp
test
mov
inc
lds
gs
adc
fnsave
push
xor
add
in
jge
aam
sub
fdivl
adc
shrl
in
andb
cltd
add
inc
push
movsl
das
out
cli
push
dec
fdivrl
les
aaa
fsubl
mov
fcompl
xchg
jg
aam
mov
and
in
xchg
jmp
adc
outsl
pop
or
repnz
sbb
pop
adc
repnz
mov
lahf
push
mov
xchg
in
call
stos
in
jmp
test
fsubl
cld
pop
mov
push
xor
cwtl
fisubs
imul
lods
in
lcall
arpl
push
inc
sbb
icebp
add
push
in
pop
in
sahf
cmpsb
xchg
hlt
xchg
out
inc
mov
jno
insl
pushf
inc
cs
imulb
shll
in
jl
jg
and
fdiv
push
mov
push
cld
xor
ds
loopne
mov
dec
cld
clc
mov
push
and
dec
repz
iret
rorb
or
pop
in
jbe
adc
add
ret
sarl
test
fsubr
push
mov
adc
scas
data16
fnstenv
push
push
es
pop
jle
fsubrs
inc
xchg
mov
lods
jge
cmpsb
lods
or
mov
in
mov
faddl
sbb
inc
xor
js
aaa
mov
aam
fdivs
aam
scas
sarb
daa
ljmp
dec
or
inc
push
aas
xor
lock
mov
bound
hlt
out
in
pop
cmc
or
dec
lds
inc
fmuls
in
out
cmp
pop
rcrb
inc
hlt
sub
mov
xor
fcompl
inc
sti
push
adc
enter
cmpsl
fs
loope
mov
mov
hlt
pop
mov
aaa
lea
insl
inc
push
out
ret
xchg
dec
pop
in
jl
pusha
inc
sbb
aaa
in
popf
int3
inc
push
pop
movsb
sub
cld
push
push
push
es
int
mov
icebp
aad
mov
aas
lea
sbb
stc
add
push
push
lock
in
hlt
mov
in
fnstsw
push
and
inc
cmp
inc
pop
push
aaa
in
adc
retw
pop
push
aad
and
ss
mov
in
lock
iret
jns
xchg
xchg
xor
pop
push
adc
lods
notb
call
mov
icebp
cld
inc
lahf
pop
dec
pop
pushf
es
cmpsl
jne
push
cmp
out
mov
mov
sub
in
mov
shl
inc
pop
in
aam
loope
mov
aaa
cmp
test
pop
fcompl
in
xor
aad
cmp
testl
xchg
lahf
add
push
mov
push
shll
adc
push
cmp
leave
cmpsl
sahf
sahf
mov
mov
mov
jl
push
push
scas
mov
fs
push
fadd
test
scas
lods
in
sbb
push
push
scas
inc
xor
cmp
test
push
in
adc
inc
cmp
push
sarl
fidivrl
rcrl
out
hlt
sbb
cmp
mov
cmp
fmull
pop
in
hlt
inc
enter
scas
fcompl
mov
jbe
rol
addr16
fdivrl
in
test
sub
jne
fsub
mov
shl
push
out
repnz
cmp
outsb
push
dec
nop
in
mov
inc
popf
and
in
cld
movw
sbb
push
test
stos
test
out
jl
jb
mov
mov
pop
dec
lods
hlt
popf
out
and
in
faddl
out
das
fmull
data16
shlb
hlt
or
fstpl
divb
outsl
push
lret
data16
lods
mov
es
es
cmp
ja
call
xchg
mov
bound
in
pop
xlat
fdivs
das
into
dec
popa
fsub
and
mov
stos
pop
pop
mov
xor
faddl
sarl
ss
mov
test
popa
or
push
dec
bound
bound
jl
inc
aam
lds
mov
bound
int3
ss
push
pop
fbstp
or
pop
push
lock
ficomps
lods
test
addb
in
or
incb
gs
mov
mov
inc
lds
add
and
in
sbb
bound
in
fstps
call
inc
xor
es
cmp
and
popf
mov
stos
jl
pop
mov
test
ror
div
dec
inc
pushw
push
pop
iret
jecxz
notb
data16
popa
cmc
leave
in
or
notb
fimull
dec
in
jns
pushf
bound
divb
sbb
xchg
jbe
out
pop
lock
aam
out
xor
scas
mov
aaa
dec
int
sub
data16
ja
mov
insb
aaa
negb
mov
push
dec
xchg
in
idiv
adc
vpcomud
lods
pop
loop
and
aas
out
pop
and
aaa
adc
fcom
popf
pop
push
in
sahf
arpl
xchg
repnz
fdivl
xor
add
loopne
into
lods
pop
aaa
test
add
xchg
in
ja
xchg
mov
and
aam
inc
jno
xor
shr
data16
ret
mov
and
sbb
mov
mov
hlt
push
lock
xchg
mov
scas
shr
fdivrl
push
cmp
mov
add
aam
ss
mov
push
mov
dec
adc
mov
add
aaa
mov
call
cmpsl
jg
mov
xchg
andl
cmp
jg
int3
cli
lea
jg
shrb
jl
mov
rcrb
mov
cltd
int3
jg
gs
ss
andl
dec
cmc
dec
add
data16
jns
aaa
xor
int3
imulb
insb
jbe
rol
scas
add
push
push
cmp
iret
negl
in
orl
fcmovnu
mov
adc
adc
mov
testl
out
pop
je
push
push
rolb
hlt
pop
add
sbb
add
cmpsl
loopne
cld
push
iret
and
jp
push
pop
adc
fcoms
xor
cmc
test
leave
pop
xlat
cmovle
mov
add
dec
aam
cld
jle
loope
add
dec
add
jno
jns
inc
int3
fisubrs
pop
ret
push
xor
jge
mov
lcallw
popa
js
xchg
pop
mov
sbb
ja
inc
aad
in
push
dec
ljmp
sub
lods
test
jnp
subb
dec
mov
jge
in
push
xchg
cmc
pop
mov
push
push
mov
and
icebp
fildl
or
push
fbstp
xchg
vunpcklps
xchg
scas
cld
push
inc
push
adc
shlb
leave
clc
pop
dec
hlt
mov
fsincos
jns
dec
insl
shl
filds
jae
mov
dec
mov
dec
je
mov
in
jle
hlt
pop
push
scas
push
in
mov
ret
repz
clc
push
xor
dec
jbe
jge
jns
movsl
shl
int3
mov
repnz
outsl
jp
pushf
xor
enterw
rcrb
aas
cli
jne
pop
ss
push
ljmp
mov
mov
xchg
xor
sarb
ljmp
std
jno
xlat
jge
addr16
hlt
add
jns
inc
mov
in
mov
insl
in
insl
lahf
lods
cld
pop
insl
jns
push
rol
mov
in
rcl
movsb
inc
push
or
aas
jmp
pop
xor
pusha
xchg
dec
add
hlt
pop
xchg
dec
mov
lret
jge
iret
fstl
mov
ja
cmpsl
in
out
lock
fst
or
push
insl
push
in
mov
jle
in
jg
stos
nop
aam
fcoml
mov
fidivs
call
pop
faddl
sbb
movsl
or
inc
add
push
fdivrs
cmpsb
jno
mov
mov
sub
out
sahf
jg
lds
iret
loope
nop
mov
iret
aam
or
lock
push
sub
and
icebp
xor
fistpll
aam
jbe
std
cmp
aam
in
fildll
lret
negl
lods
rcl
out
cmp
mov
out
movsb
in
jne
push
loopne
negl
inc
xlat
inc
and
xor
mov
loope
or
stos
push
dec
push
sbb
fmull
mov
mov
daa
cmp
sub
fdivrl
jl
push
test
adc
push
jb
xchg
sti
mov
xchg
lret
xchg
ret
cwtl
adc
pop
mov
cmp
fdiv
lock
xor
pop
movsl
sub
popa
daa
test
call
or
cmpsl
in
lock
and
mov
push
jns
in
scas
data16
cmp
test
mov
xor
adc
into
dec
xchg
stc
sub
inc
adcb
and
add
xchg
mov
lds
inc
stc
mov
sbb
fsubrl
mov
negl
mov
and
out
and
adc
fisubrl
test
pop
test
mov
jl
mov
fsubl
or
jns
mov
jl
sbb
mov
jge
xor
fdivl
repz
fcoml
dec
cli
pop
add
mov
call
push
test
mov
mov
xor
fsubr
inc
iret
xchg
xchg
call
cld
sbb
xor
in
in
clc
bound
push
in
shll
jae
mov
xchg
jp
jns
idivl
cmp
mov
xchg
mov
sub
and
in
jno
scas
sub
mov
pop
in
sbb
push
push
add
cmp
push
xor
nop
add
pop
aas
hlt
in
dec
popf
adc
lds
dec
dec
inc
push
xor
push
cld
scas
cmp
and
mov
aam
je
outsl
cmp
aad
in
aad
adc
js
cmp
push
fs
sub
faddl
jno
push
lock
js
push
shll
stos
cmpl
adc
mov
add
and
mov
lret
out
inc
adc
sub
push
aaa
mov
xchg
outsb
lea
iret
mov
push
add
rolb
mov
testb
sub
inc
add
xorb
xchg
xchg
out
pop
xchg
pop
in
aaa
imul
lcall
push
mov
mov
std
sbbb
daa
xor
sti
xorb
push
cmc
mov
sbb
xchg
test
fs
movzbw
movsbw
mov
dec
push
mov
pusha
pusha
mov
mov
call
clc
cmp
pushl
pushf
pushl
pusha
lea
jae
pusha
push
pushf
lea
jmp
call
sub
ret
lret
scas
xor
jne
mov
repz
xchg
test
push
mov
std
cmpsb
int
push
sbb
in
jp
mov
push
mov
mov
jl
std
push
adc
and
or
popf
scas
adc
jg
pop
inc
pop
sbbl
sbb
jno
fdivr
and
clc
jmp
mov
movw
pusha
stos
push
mov
lea
jmp
inc
lea
bt
xchg
setg
shld
bswap
mov
pusha
mov
sub
push
xchg
bswap
btr
cmp
mov
clc
stc
sub
push
pusha
call
add
movb
pushf
lea
jmp
insb
push
mov
lret
jae
decb
lret
pop
dec
cmp
or
das
push
push
aaa
inc
push
xchg
mov
arpl
mov
inc
jo
icebp
mov
xchg
enter
ret
popw
repnz
lods
jno
outsb
dec
dec
notl
lds
leave
cmc
mov
xor
inc
out
mov
cmpsl
mov
pop
xor
into
mov
mov
cmpsb
add
in
jl
ljmp
xchg
iret
shrb
mov
test
push
lret
cs
rclb
xor
jnp
les
leave
mov
iret
add
test
pushf
insb
pop
leave
cltd
dec
cmp
jo
cmp
push
cmp
cwtl
xor
jno
xchg
dec
and
jae
inc
enter
jo
push
iret
pop
xchg
mov
or
cmp
pop
jne
int3
jle
ficomps
ljmp
add
pop
popa
rcll
iret
rorl
setae
jle
mov
loopne
cmp
int
imul
mov
daa
test
scas
push
mov
das
call
enter
outsl
std
stos
pop
mov
xor
sub
les
stc
test
movsb
movzbw
jmp
pushf
lea
call
push
lea
jne
pusha
pop
lahf
mov
mov
mov
pushf
push
lea
jmp
xchg
call
jb
out
push
lret
les
xlat
lret
stos
inc
mov
cmc
push
or
jo
push
popf
sub
aas
shlb
dec
cli
ljmp
imul
push
fs
mov
jae
pop
out
and
push
xor
jecxz
out
sub
cmpl
pop
aas
lods
out
lods
sub
and
add
outsl
movsl
bound
or
test
xchg
cmp
mov
mov
addr16
sbb
pusha
repnz
inc
out
mov
push
mov
test
mov
xor
push
xor
jge
data16
cmpsl
insl
orb
push
mov
repz
jnp
test
cmp
mov
jae
dec
adc
xor
jne
mov
and
outsl
sbb
pop
dec
or
lods
inc
out
in
jnp
sbb
arpl
incb
xor
jno
push
sub
push
mov
rdtsc
mov
sti
pop
scas
inc
xchg
repz
or
mov
mov
sbb
push
pop
xor
outsb
dec
or
movsb
sbb
or
sbb
jne
push
mov
movsl
sbb
fidivs
cmc
push
cmpsb
add
mov
xor
push
ret
fdivrl
push
daa
xlat
movsb
or
sbbl
mov
ret
cmc
andb
fisttpl
icebp
shrb
ficomps
cmp
xchg
fldln2
aad
ss
mov
jnp
lahf
mov
mov
sti
add
orl
add
add
pusha
pop
jmp
aas
cmp
or
enter
ret
dec
jl
inc
mov
jge
pop
aam
adc
adc
in
fisttps
invd
add
fistps
addr16
push
in
movsl
lret
mov
je
and
gs
jb
ja
rorl
adc
or
pop
les
mov
cmpsb
lods
int
jge
shll
rol
xchg
ljmpw
iret
mov
pusha
or
je
pop
dec
xchg
mov
stos
mov
ljmp
sub
dec
push
scas
mov
popa
fstpl
repz
stos
dec
mov
jns
pop
inc
sbb
fbld
lahf
and
sbb
arpl
adc
scas
push
lret
dec
in
push
dec
aaa
das
jo
or
cwtl
mov
mov
cli
int
push
insl
lret
out
cmp
mov
sub
sub
push
icebp
das
in
ja
shrb
mov
mov
xorb
les
lahf
add
inc
mov
mov
sbb
imulb
int
mov
cltd
gs
rol
adcl
jmp
mov
leave
ja
xor
push
ds
pop
movsb
push
inc
push
push
movsb
push
mov
outsb
scas
xchg
loop
mov
inc
cmp
aam
dec
mov
arpl
jbe
mov
push
pop
shrl
mov
push
mov
and
fisubs
push
push
push
into
and
jo
pop
fwait
cli
pop
sub
lahf
dec
pop
and
and
cmp
out
in
dec
bound
sarl
push
dec
test
outsl
inc
inc
push
inc
js
std
mov
pop
cmpsb
test
mov
ficomps
pushl
pushf
lea
jbe
shr
movsbw
rcl
xadd
sub
xchg
add
mov
bt
lea
mov
btc
sar
and
add
bsf
cmc
not
shr
xadd
sbb
inc
mov
shld
add
xor
add
movsbw
mov
pusha
mov
call
push
call
push
pushf
push
movl
mov
push
pushf
lea
jmp
jb
add
jmp
setne
pushf
mov
lea
not
jmp
pushf
xchg
pushl
jmp
movl
movl
pushl
lea
jmp
pushf
repnz
push
mov
lea
jne
lea
mov
lea
movb
cwtl
push
movzbw
lea
pushf
movl
pushf
pushf
push
mov
pushf
pushl
ret
jns
or
push
lret
sbb
lahf
in
jg
addr16
xchg
mov
mov
pop
mov
ljmp
cmp
jg
xchg
or
insb
iret
or
jecxz
cmc
es
mov
sar
test
lods
lret
push
mov
subl
in
test
fst
inc
mov
fdivrs
sahf
test
jno
dec
ret
outsb
xchg
sub
jb
sbbl
jge
rcll
and
push
lret
cmp
mull
jbe
mov
jno
in
aam
sub
dec
je
jg
dec
adc
push
push
mov
sub
aaa
adc
movsb
cmp
aas
jne
jo
sub
repnz
xlat
lods
hlt
outsl
repnz
das
adc
adc
push
pop
pop
movl
mov
movl
lea
jmp
mov
je
push
lret
std
add
mov
rolb
pop
xor
adc
in
bound
stos
jno
shlb
cld
imul
jecxz
shl
lret
addr16
fbstp
jge
rcrl
mov
fiaddl
jl
push
jno
or
lret
pusha
push
ljmp
and
popa
xchg
mov
xchg
daa
cmp
push
cmp
rcrb
aaa
fdivp
imul
mov
pop
fs
sub
daa
iret
nop
icebp
ljmp
dec
cwtl
cmp
cmp
inc
cmp
adc
mov
xchg
scas
jbe
mov
dec
xor
sub
aaa
ljmp
lret
fs
xchg
loopne
bound
xchg
add
sub
push
inc
out
pop
cmp
js
shlb
and
iret
push
imul
jae
push
ds
mov
dec
lods
sub
or
ds
int3
dec
lret
sti
js
out
cmpsb
push
push
push
imul
fisubs
inc
clc
cmp
mov
cwtl
fsts
bound
sbb
inc
jg
aaa
adc
js
and
jle
rclb
lea
jne
add
mov
mov
pusha
bt
call
imul
push
lret
pusha
add
imul
jg
aaa
inc
xchg
lcall
pop
sub
cmp
push
adcl
imul
dec
pop
loop
mov
mov
fwait
fs
xchg
addr16
jecxz
inc
std
inc
cmc
movsbw
adc
mov
test
and
jmp
mov
pop
stos
push
lret
sbb
leave
pop
das
pop
stos
mov
sti
adc
jae
cmpsb
cltd
insb
jmp
iret
ja
fs
jno
pusha
and
push
pop
mov
mov
ds
popa
xor
rorl
pop
jo
jbe
shll
push
push
add
mov
sub
dec
adc
xor
mov
push
mov
sub
stos
mov
sbb
xor
dec
pop
sub
fwait
orl
and
add
jecxz
pushf
lea
jmp
pushf
jmp
sbb
lret
das
aad
cmc
xorl
push
scas
shl
push
lcall
xchg
dec
pop
cmp
jp
sbb
sbb
push
xor
pop
inc
mov
bound
mov
xchg
pop
ljmp
andb
hlt
inc
rcrb
mov
dec
jnp
shl
jno
jle
dec
push
outsl
jne
sub
es
push
dec
cmp
push
icebp
sub
loope
icebp
sub
insb
xchg
xorps
cmpsb
mov
cwtl
iret
add
call
pushf
pushl
mov
pusha
movl
call
add
test
lret
test
mov
shlb
lock
xor
scas
xchg
jl
pushf
or
sub
and
push
das
daa
testl
into
or
inc
inc
lahf
cmp
sbb
orl
sub
movb
pop
jno
push
push
xchg
cmc
movsb
cmp
jae
jne
imul
int
icebp
cmpsb
push
or
push
ret
cmpsb
sub
cmp
sbb
pop
pushf
and
ds
inc
push
pop
xchg
es
fs
xchg
scas
jle
in
jg
cmp
test
lret
pushf
xor
nop
fs
push
and
jns
sbb
pop
das
bound
push
repz
fs
jge
out
out
sub
mov
outsl
out
push
sbb
cmp
lds
into
jo
std
dec
mov
pop
xor
fbld
dec
sub
xchg
loope
dec
lahf
imul
add
dec
mov
scas
stos
xor
sbb
or
push
mov
mov
shr
push
lods
xor
mov
mov
mov
inc
jae
dec
mov
xor
lea
pushf
movb
inc
lea
jmp
pushf
movw
push
pushl
xchg
bswap
movzbw
mov
lea
not
lea
pushl
xchg
bswap
lahf
lahf
movl
pusha
lea
call
movzbw
movzwl
jmp
jmp
mov
push
xacquire
xorb
ja
adc
lret
fwait
bound
cmp
fwait
sti
add
and
in
jne
push
inc
add
insb
jbe
movsl
xchg
mov
mov
roll
jmp
imul
or
and
adc
nop
or
jbe
jb
ficomps
nop
gs
inc
pop
mov
filds
std
or
pusha
mov
pusha
movl
push
call
jg
mov
push
lret
push
lock
adc
jecxz
add
mov
xor
inc
repz
mov
pop
in
repz
inc
dec
enter
pop
dec
inc
pop
pop
push
mov
imul
stos
cmp
in
jg
sbb
lahf
adc
lret
cmp
pop
les
in
xchg
shll
cs
repz
or
jne
xchg
ljmp
cmpsb
lret
rcll
movl
jns
push
pusha
pusha
lea
jmp
jmp
sbb
mov
pop
xchg
cmpsl
push
push
addr16
adc
je
neg
cs
mov
lods
movb
pop
fs
jnp
sti
out
aam
xchg
adc
dec
stc
jne
push
ja
addr16
addr16
cld
ret
insb
xor
lock
repz
scas
pop
cmp
into
shll
xor
mulb
lods
stc
sub
imul
or
xchg
jmp
mov
cmp
adc
jae
and
sarb
sbb
imul
or
rcr
sub
xlat
insl
lock
push
inc
addr16
pop
stc
sahf
lahf
icebp
lods
xchg
leave
lods
or
mov
das
or
xor
nop
mov
adc
push
stc
jne
movsb
push
or
lods
xchg
fwait
out
leave
lods
or
popa
xchg
loop
in
adc
mov
mov
push
xor
jne
rcrb
and
add
mov
aaa
int
mov
jne
mov
shrb
scas
mov
imul
mov
mov
loopne
and
inc
out
fwait
xchg
xor
push
mov
jne
sbb
adc
out
and
cmp
sarb
mov
sub
xor
ds
and
rorl
arpl
rcll
fwait
out
das
pop
incl
pop
pop
lcall
mov
incb
pop
mov
push
lret
shll
icebp
xchg
push
repz
repnz
add
or
inc
and
outsl
imul
jae
jecxz
cmp
push
outsb
fwait
sbb
jae
fidivs
add
jae
adc
rcl
pop
loopne
pop
push
push
pushf
xor
addr16
sti
xor
adc
cmp
push
inc
mov
mov
je
stos
movsb
push
lret
les
cmp
call
inc
ss
outsl
jle
add
xor
xor
in
adcb
loop
and
hlt
daa
mov
mov
pop
das
cwtl
push
repz
xchg
lahf
lods
cmpsl
xor
or
sbb
push
loopne
std
add
sbb
cmp
dec
xor
push
pop
mov
mov
jne
mov
dec
push
jns
aam
sbb
push
cmp
jge
gs
xchg
adc
cwtl
dec
retw
rolb
aad
cmc
iret
cmc
test
outsb
push
mov
and
xchg
int3
jmp
call
jmp
and
lret
add
xor
lock
into
jl
cltd
xlat
mov
sub
mov
das
decl
lods
push
lods
push
int3
mov
les
jg
jg
jns
cmp
rorb
into
test
lea
roll
mov
or
push
movsl
mov
mov
add
daa
xor
gs
lea
adc
and
insb
sbb
sbb
jnp
ljmp
mov
push
ja
fs
faddp
adc
mov
rcrl
test
int
push
cltd
xchg
xor
push
loopne
or
test
jmp
and
lock
xchg
inc
mov
pusha
ror
mov
inc
repz
pusha
xchg
andb
mov
inc
lds
stos
sarb
movsb
sbb
dec
mov
dec
jge
and
inc
jns
stc
mov
inc
outsb
mov
adc
add
add
mov
sbb
lea
push
aam
sbb
and
mov
movzbw
rcl
movsbw
aam
sub
shr
push
test
bts
bswap
push
shr
mov
movzbw
add
push
sar
bswap
xor
bswap
movsbw
mov
push
lea
pushf
mov
pusha
jmp
cmc
pusha
bt
add
test
mov
test
jmp
lea
jb
test
pusha
clc
cmp
mov
lea
ja
rcl
cmc
add
test
mov
pushf
jmp
outsb
iret
mov
jg
stc
int3
jl
xchg
lret
fistps
adcb
insl
fnstsw
mov
dec
js
cltd
dec
pop
in
cmp
sbb
test
mov
push
xor
test
leave
mov
cli
lahf
push
ljmp
jmp
popa
cmp
mov
daa
pushf
and
adc
push
fdecstp
mov
sub
jp
mov
rcrl
dec
adc
pop
mov
mov
mov
stc
dec
pop
dec
js
push
or
cmc
cmp
std
mov
push
jno
arpl
scas
dec
xor
je
enter
ljmp
mov
sub
mov
cmp
sti
push
in
sti
mov
orl
cmpsl
adc
xor
cltd
sti
sar
pop
mov
push
sarl
push
mov
ds
idivl
jmp
out
mov
loope
cmp
decl
mov
or
and
out
adc
xchg
mov
jmp
push
dec
mov
adc
add
aaa
mov
je
xchg
add
inc
push
loop
jne
xor
fucomi
sbb
and
adc
inc
std
jno
jge
orl
inc
in
aas
push
cld
ret
and
outsl
dec
cmc
das
aam
icebp
test
std
fisttpl
pop
jno
incb
rcrl
lea
call
bt
push
movl
movw
cmp
pushf
pusha
pushf
pushf
lea
jae
test
cmp
stc
cmc
cmp
pusha
pushf
lea
jae
jg
pusha
pusha
cmp
movl
jmp
or
int
push
lret
in
cmp
pop
jmp
cmp
popa
xor
call
and
pusha
sarl
pop
mov
push
dec
mov
xchg
mov
movsl
addl
clc
ret
push
pusha
jmp
call
sahf
sbb
and
loope
daa
hlt
adcl
add
push
cmp
sbb
dec
push
int3
mov
xor
xor
jb
das
pop
cmp
sbb
lret
sub
jno
int3
push
fadds
xor
jg
into
loope
cmc
jne
sarb
fs
lahf
bound
mov
sbb
push
fimuls
mov
into
xor
cmp
pop
out
fwait
pop
or
mov
adc
dec
mov
jbe
mov
pop
cmpb
das
add
add
loope
jmp
lea
jne
call
sahf
xchg
lahf
sahf
push
lret
cmp
or
imul
jns
frstor
bound
ja
iret
data16
shlb
push
lret
lods
adc
lock
movsl
fucom
add
dec
pmaxsw
xchg
out
daa
sarb
push
stc
jp
stc
cltd
loope
push
outsb
add
mov
cli
cmpsb
sbb
sbb
jb
aaa
and
xchg
rolb
push
ljmp
loope
pop
adcb
xor
mov
aas
pop
sbb
inc
imul
lea
fsubrl
and
cmp
cmp
shl
and
mov
push
adc
or
push
dec
or
dec
cli
inc
popf
mov
out
sub
in
mov
cmp
sbb
cvtps2pi
adc
push
in
pushf
ljmp
and
in
xchg
add
push
lods
sub
push
pop
ss
mov
push
sub
sub
jle
adc
push
mov
sub
pop
pop
jle
int3
mov
xchg
cltd
and
or
pushf
popa
or
scas
repnz
or
adc
jb
xor
test
add
mov
sbb
mov
popf
push
jae
fcoms
xor
xlat
repnz
sahf
fidivrl
shlb
adc
in
in
cltd
lods
fld
popf
mov
in
mov
xor
js
cmpsl
rclb
jecxz
jp
int
sbb
in
popf
orl
stc
xchg
xor
int
mov
pusha
sub
jae
push
adc
push
jl
jp
push
and
pop
es
push
sbb
push
mov
sbb
out
sbb
jg
mov
daa
sub
adc
mov
mov
into
cmp
pop
push
push
dec
jl
cmp
insb
insb
mov
mov
adc
sub
pop
and
notb
inc
repnz
push
pop
or
fldt
mov
das
scas
dec
cmpb
sbb
popl
mov
pop
adc
nop
sbb
adc
sahf
mov
scas
push
xor
inc
xchg
jno
push
nop
cs
jo
cmp
aas
insb
xor
mov
mov
jmp
fdiv
cwtl
rorb
xor
int
aad
out
nop
pop
outsl
decb
int
pop
lea
pop
jl
mov
adc
or
jmp
dec
xor
mov
lods
pop
cmp
xor
outsl
das
cltd
shr
jmp
dec
int3
shlb
fsubp
push
dec
aas
mov
adc
fisubrs
mov
inc
cmp
out
sub
pop
rcrb
push
sub
daa
sub
insb
movsl
insb
xor
pop
jo
shlb
dec
movsb
aas
rcrb
xchg
xor
pushf
dec
gs
xchg
mov
sub
add
rcrl
daa
mov
rorb
fs
insb
hlt
int
dec
mov
dec
pusha
jl
push
mov
adc
lods
sbb
fnstsw
push
mov
ds
push
scas
pushf
outsl
sub
lahf
mov
sbb
push
in
pushf
int
insl
push
outsb
xchg
push
sbb
push
mov
push
xor
xor
out
pushf
fildll
into
popf
inc
inc
ret
adc
cmp
int3
sbb
cld
roll
aas
mov
xor
xchg
cs
imul
push
dec
jle
xchg
adc
mov
cmp
fs
sub
scas
shrb
sbb
jo
push
ja
cmp
hlt
popl
fdivl
outsb
adc
add
outsb
insl
dec
mov
sbb
sub
movsb
pushf
sbb
push
fdivr
nop
int3
pop
push
scas
jo
or
xor
outsb
xlat
xchg
jle
in
adc
dec
fdivs
lock
mov
push
ds
movsl
pop
rcrb
iret
mov
dec
nop
pop
jg
das
repnz
sub
xchg
push
inc
mov
add
cmpsl
fs
xchg
cld
popf
dec
sub
cs
sbb
xchg
mov
push
sbb
lods
sub
into
ss
dec
xchg
int3
mov
insb
xor
pushl
lock
jo
pop
pushf
enter
mov
push
int3
cmp
decl
jbe
gs
push
pop
cmp
std
push
pop
or
sub
nop
xchg
psrlq
imul
imul
jo
sub
push
cmp
sbb
mov
xor
xor
and
dec
sub
jo
lods
or
and
test
addr16
dec
cltd
sahf
into
int
pushf
lods
mov
dec
pushf
mov
sub
cs
aam
jo
sahf
incb
popf
sbb
mov
cld
lahf
mov
inc
pop
inc
xor
jo
cmp
out
dec
jo
jb
jne
iret
inc
push
sub
fucomp
cmp
sbbb
mov
sbb
dec
dec
shrb
cs
iret
cvttps2pi
or
adc
sub
out
pop
popa
int3
cmp
lahf
pop
ret
cmp
dec
insb
nop
ljmp
cmp
sub
cmp
sbb
sahf
mov
nop
push
pop
pop
cld
adc
out
xor
cmp
mov
lahf
sbb
aam
mov
xor
je
js
pop
fistpll
mov
sbb
xor
outsl
adc
lea
outsb
test
cmp
lods
or
push
push
and
mov
pop
xor
insl
pop
xchg
mov
mov
out
pop
jl
int3
cmp
mov
sub
pop
adc
into
and
xor
xor
mov
xor
pop
dec
push
jl
lods
fsubrs
or
dec
bndstx
lcall
lret
int3
push
dec
out
push
mov
cli
dec
jle
fdiv
mov
dec
cs
jns
xor
cli
flds
in
fsubl
xchg
jge
adc
cs
jg
adc
sbb
js
aas
mov
mov
pop
fisubrl
push
push
lcall
xor
das
xor
fisttpll
fstpt
xor
inc
xor
fstpl
jle
and
in
pop
push
imul
out
rorb
xorl
lea
or
ds
std
push
dec
das
mov
cmovns
pushf
xchg
adc
dec
dec
and
jae
inc
sub
mov
rorl
mov
data16
rcr
sbb
jns
push
call
and
cs
pop
and
dec
fiadds
or
rorb
and
sbb
pusha
pop
push
xor
cld
push
rcrb
mov
mov
jle
lods
pop
lds
dec
mov
sbb
adc
jns
xchg
sub
inc
adc
rcll
lret
sbb
sbb
push
sub
scas
insb
adc
mov
inc
push
cwtl
mov
mov
push
sbb
in
dec
jb
xchg
push
sub
inc
pop
mov
fs
sub
mov
cmp
jg
jl
shl
cmp
repnz
mov
sub
cmp
xchg
dec
mov
or
and
mov
pop
fwait
insb
push
inc
sub
push
scas
xchg
cs
lahf
jge
cmp
mov
cwtl
lods
jg,pn
push
and
lods
jae
and
aam
imul
cmp
dec
addr16
ds
sbb
dec
jl
inc
sub
maxps
in
lahf
pushf
sarl
insb
pop
inc
sub
push
pop
sbb
into
inc
sub
dec
pop
jge
insb
in
pop
dec
ds
cwtl
insb
mov
sub
dec
jo
popf
sbb
push
lods
jl
pop
into
or
nop
adc
fmull
dec
sbb
fucomp
xchg
adc
lahf
dec
in
in
nop
sahf
dec
add
sar
dec
xchg
and
push
int3
lods
jo
cmpsb
xor
or
test
je
xchg
lods
mov
outsb
sbb
add
ds
push
in
pop
daa
push
xchg
cltd
aas
xor
test
mov
lea
dec
test
and
sub
and
dec
cmp
pop
pop
lahf
fdivl
adc
inc
inc
fisubrs
or
lea
pop
pop
sbb
insb
aas
lcall
mov
pop
mov
push
lock
popf
xor
push
adc
add
psadbw
lods
lahf
aaa
call
push
pop
imull
and
jg
pop
mov
adc
fwait
call
xor
js
pusha
daa
xor
add
jl
push
cltd
jo
addb
jmp
mov
push
inc
jno
push
push
int3
mov
cmp
int
int
int
sub
adc
fmulp
push
faddl
mov
or
movsb
adc
add
fldl
mov
dec
sub
into
adc
xchg
outsb
cmpsl
adc
adc
std
iret
dec
xor
shrb
dec
fimuls
in
in
jo
cmp
pop
daa
push
lock
ror
and
dec
std
imul
mov
nop
xor
mov
fnsave
jo
andb
xchg
dec
subl
xchg
repz
outsb
jg
sbb
outsl
push
push
fisttps
out
jo
movsb
fimuls
movsl
pushf
xor
and
xor
xchg
popf
pop
push
fistps
test
dec
fstp
faddl
mov
adc
dec
fstl
repz
call
mov
sub
push
jl
xor
out
cmpsl
sub
cld
or
das
or
in
mov
mov
push
sub
lahf
sbb
fs
sbb
sbb
pop
dec
push
sub
lahf
xchg
pop
sub
hlt
adc
add
test
insl
imul
pop
and
dec
mov
jo
pop
data16
mov
sbb
iret
mov
mov
int
pop
and
mov
sub
filds
pop
pop
jl
dec
xor
mov
jl
jb
cmp
xchg
sub
cmp
adc
mov
mov
push
sbb
xor
mov
fisttpl
mov
scas
mov
pop
and
dec
pop
push
sub
call
or
lahf
inc
dec
dec
push
add
shrb
out
xor
int
jle
dec
aas
push
aas
icebp
jne
cmp
push
dec
ljmp
sub
pop
pop
addr16
push
cld
dec
adc
jo
sbb
sub
cmp
fstps
shlb
das
cs
pop
repz
pop
mov
push
dec
mov
xor
fstp
cld
shl
mov
std
xchg
xor
adc
in
sub
cmp
std
paddd
movsl
in
xchg
popf
push
xor
jle
pop
mov
das
xor
rorb
rolb
inc
sbb
dec
adc
push
and
lock
mov
jg
jle
pop
nop
pop
insb
push
dec
push
sub
out
jmp
push
or
aas
mov
lea
mov
insb
rcrb
sub
ss
mov
dec
popf
mov
int
jmp
in
frstor
sub
add
push
pop
rcrb
icebp
clc
xor
cmpsl
push
push
mov
xlat
int3
sub
xor
cmp
jb
cmp
xchg
in
cmp
mov
mov
cmpb
fnstsw
push
cld
sbb
sub
push
int3
jl
adc
cmpb
mov
repnz
and
adc
inc
cmp
dec
push
lahf
in
in
xor
mov
ds
pop
pop
xor
and
add
fistps
scas
ss
hlt
in
ja
out
jb
pop
xor
xlat
addr16
cltd
sbb
mov
mov
pop
scas
jb
mov
push
xor
int3
push
xchg
push
jle
push
insb
stos
out
dec
addr16
sahf
scas
and
pushf
shrb
inc
jo
adc
push
std
out
sbb
popf
icebp
xor
push
push
jb
jle
out
push
pop
mov
mov
repnz
loop
sbb
dec
jo
xor
dec
or
std
into
aam
das
xor
xlat
jg
movsl
mov
jp
xchg
xor
pop
mov
jle
push
dec
addr16
jb
jo
add
pop
int3
cmp
loopne
ljmp
jo
arpl
sti
push
pusha
cmp
cmp
lods
xchg
data16
jge
dec
ret
je
or
pop
sub
dec
and
sub
dec
mov
mov
xor
aas
xchg
and
shr
fdivrl
sbb
adc
insb
ds
jne
pop
mov
int
cmp
fcoml
lods
cmp
sbb
fwait
clc
cmp
jg
nop
scas
jo
xor
cmp
jb
cmp
xchg
cmp
mov
cmp
rolb
ss
cmp
adc
xor
jno
fcompl
xor
cmpsl
jnp
pop
adc
call
in
jl
push
inc
xor
fdivrl
xchg
adc
fdivrl
cmp
inc
daa
sub
sbb
sahf
or
xchg
imul
adc
pop
dec
fucomp
push
rcrl
xor
lock
dec
xchg
into
push
mov
or
add
sbb
fildl
inc
mov
adc
and
dec
fstpl
nop
adc
call
jp
add
aad
sub
out
imul
xor
mov
in
adc
adc
and
out
jmp
arpl
push
cmp
rol
nop
push
dec
push
movsb
push
mov
dec
add
add
data16
mov
xor
pop
sbb
in
push
fldl
jg
push
insb
les
pop
cld
fisubrs
sub
dec
movsb
sub
fs
sub
orl
cmp
repnz
sub
and
data16
movsl
dec
fs
leave
iret
push
mov
sbb
jp
push
std
outsb
dec
andl
mov
scas
lret
adc
xor
js
push
adc
ds
pop
jle
dec
lods
cmpsl
mov
push
mov
das
cmp
jecxz
shl
push
mov
jl
sub
push
and
mov
mov
dec
mov
xchg
inc
mov
aam
imul
xchg
pop
or
fdivl
xchg
dec
fimuls
push
fnsave
dec
dec
sbb
xchg
xor
sbb
into
xchg
sbb
fistpll
iret
aam
in
imul
test
fsubs
leave
jb
das
or
adc
sub
lods
fcomps
sub
jo
push
pop
movsb
mov
pop
cmp
call
jg
cmp
rcrb
xor
jo
aas
xor
pop
push
scas
xchg
decl
mov
call
jno
jb
adc
push
ret
aas
add
aas
mov
mov
mov
insl
jb
std
xor
sbb
push
lea
outsl
push
scas
pushf
out
and
xor
insl
lods
xor
push
cs
outsb
sub
pop
sbb
push
sbb
adc
pushf
jl
lods
push
fcoml
popf
push
int
std
sub
into
sbb
cmp
scas
dec
jno
mov
xchg
out
xor
sbb
and
xor
sub
sub
into
mov
adc
scas
adc
sbb
mov
cs
int3
sub
mov
into
cwtl
dec
jmp
mov
mov
jge
stc
xchg
jge
dec
sbb
jp
jge
xor
pop
mov
xor
sub
mov
pop
cmp
and
cmp
inc
mov
xchg
js
test
out
and
push
std
push
jge
out
mov
cmp
sbb
faddl
add
sbb
sbb
push
ljmp
lahf
jo
mov
in
xchg
mov
xchg
in
icebp
int3
dec
push
mov
call
out
pop
sbb
push
lods
unpcklps
addr16
fcom
fnsave
xor
mov
iret
push
lods
xor
sbb
insb
test
in
pushf
mov
lods
mov
mov
lods
in
out
shrb
jb
push
sub
insb
cmp
std
pop
dec
xchg
adc
int3
in
dec
mov
aam
lret
les
pop
lahf
fcmovu
fidivs
jno
jne
scas
repnz
pop
stos
dec
sub
fstl
pop
xlat
push
insl
out
cld
mov
adc
sahf
int
sub
pop
adc
jl
cmp
outsl
call
pushf
cmp
pusha
sub
nop
out
int3
mov
repz
xor
jge
hlt
fsubrs
out
xchg
xor
jl
sbb
push
pushf
aas
sub
int3
sti
adc
cs
jae
xor
sub
dec
pop
jg
mov
xor
iret
inc
xor
push
xor
cmp
movsl
dec
push
scas
xor
xor
pusha
filds
outsl
xor
pop
jl
out
add
adc
mov
push
cld
cli
push
in
mov
insb
dec
push
aas
ja
push
cs
push
sub
das
sub
divb
push
out
push
mov
or
mov
daa
dec
jo
nop
imul
or
xor
and
pop
rorl
iret
aad
jb
pop
push
pop
jl
pop
lods
add
adcl
xor
cli
pop
in
mov
pop
insb
dec
jl
ja
sub
cli
int
push
sub
das
rcr
idivl
das
sub
scas
int
shrl
sub
xor
scas
sub
sub
dec
int
mov
jl
xchg
pop
das
daa
jl
mov
insl
xchg
sub
imul
jnp
sub
sub
pop
push
jl
pop
jae
sub
lock
xor
inc
jno
jae
adc
pushf
inc
sbb
jl
adc
jp
sbb
hlt
fsubrp
jne
dec
popa
orb
sti
cs
fidivrl
sub
jmp
fmull
pop
pop
js
popf
push
enter
jno
or
aam
jge
sub
and
nop
repz
in
jno
or
insb
pop
push
inc
mov
out
cmp
mov
mov
std
push
mov
aas
mov
stos
daa
lods
movsl
cs
pop
nop
std
sahf
out
mov
lods
xchg
mov
in
sbb
into
inc
frstor
scas
cmp
lock
ffree
outsl
and
fimuls
adc
xor
push
das
xchg
pop
jns
cltd
sub
xor
adc
pushf
lods
jge
ja
outsb
aas
in
jo
das
xor
incl
nop
mov
cmpsl
filds
out
in
mov
or
mov
jle
into
xor
xor
call
xor
mov
jb
jl
insl
push
popf
test
out
sub
lock
jo
xor
scas
mov
pop
jge
push
movsl
mov
cmc
cld
push
mov
cmp
sbb
movsl
mov
cmp
sarl
fnsave
adc
push
jl
xor
jne,pt
lcall
insb
pop
movsb
push
sahf
insb
push
int
lret
mov
aas
dec
inc
mov
sub
dec
addr16
mov
cs
push
cld
in
ljmp
mov
lods
pushf
pop
sbb
push
push
cmp
xor
cmp
push
cmpb
inc
adc
xor
cmp
adc
mov
xchg
fsubrl
lcall
cld
movsb
sub
xor
nopl
nop
sbb
scas
jl
lods
and
mov
in
push
pop
push
aas
into
xchg
das
xor
fidivrs
ja
fsubrl
jb
loopne
aam
push
push
jmp
mov
call
or
fmull
das
dec
jl
jo
add
dec
pop
pop
pop
pop
jge
aas
imul
pop
dec
and
lcall
repz
call
push
dec
sarb
xor
insl
or
int3
call
mov
lea
int
fimull
mov
adc
mov
sub
jbe
popf
pop
xor
or
das
hlt
pushl
mov
mov
fimull
into
in
mov
fmul
push
lods
dec
xor
push
cmpb
rcrb
sub
mov
frstor
dec
rclb
insb
or
push
dec
cs
sub
sub
dec
das
jno
sub
lea
es
pop
inc
popa
es
ljmp
das
data16
adc
ds
clc
insb
fistps
dec
in
pop
jl
mov
add
insb
insb
mov
sub
mov
mov
xor
sar
inc
dec
pop
adc
decb
xchg
dec
rolb
cmpb
sarl
in
dec
int
xchg
decb
dec
dec
xchg
xchg
sahf
lea
jl
ficomps
and
and
cmp
sub
cmp
lods
das
lock
mov
inc
popa
loopne
cmp
sbb
bound
sub
inc
cmpb
inc
popa
addl
popa
loope
cmp
sbb
pop
and
dec
cs
mov
mov
or
nopl
adc
cmpsb
out
push
jne
sbb
rcr
lea
shrb
xor
out
xchg
daa
rcr
aas
cmp
imulb
into
dec
pop
movl
push
nop
in
mov
scas
call
lea
out
jno
adc
je
das
jno
cmp
sub
xor
mov
pop
jb
mov
push
xor
jle
ds
in
and
out
push
xor
mov
fimuls
fisttpll
fcomps
xchg
xor
out
out
ds
sbb
sub
xor
pushf
fmull
xor
int
std
xchg
xor
sbb
push
setl
jg
scas
xchg
sub
xchg
xor
push
lea
xchg
jle
mov
pop
pushf
rcll
dec
push
mov
insl
xor
sub
mov
outsl
push
scas
pushf
out
sbb
push
lods
xchg
faddl
mov
push
fstpt
push
and
in
ds
cmpsl
pop
jb
mov
mov
xchg
jg
scas
fistpll
push
fistpl
sub
in
sbb
push
mov
push
jle
mov
outsl
push
push
push
lods
dec
pop
fsubl
and
jae
dec
enter
aas
outsl
lcall
subb
dec
mov
insl
je
pop
out
daa
insb
insb
stos
sub
into
push
xchg
push
mov
mov
js
xor
rorb
cmp
fwait
sub
or
int3
jg
sbb
add
sub
insb
insb
or
aas
push
and
push
in
movsl
xor
or
or
clc
dec
outsl
and
mov
sbb
das
insl
in
paddw
pop
out
and
stos
pop
lods
aad
cmp
push
in
cmp
mov
lahf
mov
pop
rcr
cmp
repz
iret
stos
pop
sub
fwait
int
mov
sub
cs
push
scas
sarb
ljmp
arpl
std
mov
inc
fistpll
in
fs
dec
jg
xchg
dec
ret
icebp
in
lods
xchg
dec
fs
lahf
fidivrl
jnp
sub
sub
pushf
adc
out
and
scas
insb
outsb
push
sub
and
inc
jle
out
or
and
inc
insl
sbb
jle
scas
xchg
cld
out
loop
faddp
pop
jg
add
cmp
in
ficomps
int3
jp
and
out
shrb
mov
pushf
gs
das
xor
imul
icebp
dec
mulb
outsl
fisttpll
add
jecxz
jg
outsb
mov
in
lahf
dec
pop
test
test
adc
xor
scas
jbe
in
push
cld
das
sbb
sub
pushf
je
xchg
ljmp
xor
pop
inc
sub
sbb
lods
mov
pop
xor
adc
push
mov
pushf
xor
lahf
scas
or
pushf
out
das
push
insb
decb
pushf
rclb
mov
lods
insb
or
cmp
dec
xor
lcall
pop
jae
cmp
adc
faddp
adc
push
or
or
les
mov
pop
in
fnstsw
repz
cs
out
cmp
and
mov
jecxz
adc
xchg
int3
cs
in
mov
outsb
jge
or
cld
push
fdivl
lods
cmp
stos
pop
pop
dec
dec
aas
push
cs
push
sub
xor
pushf
dec
inc
push
popf
cmpsb
push
std
stos
pop
push
int3
xor
mov
dec
inc
in
push
sti
xchg
xor
jl
fnsave
fidivs
jl
fstl
dec
xchg
push
stos
push
mov
push
ljmp
cmp
mov
aam
sub
xchg
sbb
cmp
or
imull
cld
lods
lods
insl
and
dec
lea
lods
fisttpll
mov
xchg
in
sbb
pop
cmp
sbb
xor
stos
stos
mov
and
sub
fimuls
stos
pop
sbb
aas
push
push
pop
adc
adc
dec
cmp
mov
aaa
jg
mov
pop
sbb
cs
pop
sahf
dec
insl
pop
mov
dec
jo
scas
cmc
mov
sub
cld
movsl
lcall
xor
push
sub
js
enter
imul
jb
int
dec
repz
fildll
pusha
iret
jl
and
dec
push
rcrl
xchg
mov
dec
lret
test
maskmovq
imull
lcall
out
xor
xor
mov
repnz
mov
pop
fs
jae
and
pop
jge
jno
sub
mov
mov
sub
lods
adc
lods
inc
adc
push
rcr
push
aas
rcrl
or
fwait
dec
adc
dec
dec
sbb
push
les
sub
test
xchg
popf
imul
cmpl
xchg
xor
sbb
sub
dec
cmp
fisttps
fbstp
xchg
mov
push
scas
or
loopne
or
aam
inc
or
jo
mov
xchg
mov
xor
jb
jge
dec
icebp
in
push
in
jbe
push
sub
pop
fcoml
int3
pop
push
iret
sahf
out
pop
inc
jle
mov
dec
mov
fisubrs
jo
cld
nop
into
aam
dec
xchg
sbb
and
xor
movsl
insb
jo
xor
xchg
sbb
mov
aas
dec
dec
xor
aas
xchg
wrmsr
scas
repz
aas
dec
idivl
dec
lcall
jno
xor
mov
ficoms
mov
pop
ds
sbb
sbb
pushf
pop
cmp
lcall
ds
push
int3
xchg
sbb
push
push
pop
pushf
scas
sub
lahf
sbb
mov
fdivl
sub
sub
mov
out
push
sbb
xchg
xor
lea
into
push
pushf
outsl
jge
pop
xchg
jl
movsb
dec
in
push
popf
pop
xor
xchg
sahf
sbb
push
xor
push
sub
dec
xor
jb
mov
lahf
dec
sbb
xchg
dec
sbb
push
fstpl
pushf
lahf
lods
xor
pop
nop
outsl
push
xor
js
fs
dec
xor
fcoml
xchg
xor
cs
pop
pushf
mov
aas
sbb
push
pushf
fsubrl
int
std
dec
xor
into
pushf
cvtps2pi
lahf
xchg
fisttps
xor
sub
pop
sbb
push
jg
iret
jge
jo
pop
sbb
push
cmp
push
std
xchg
cs
push
setl
scas
push
fistpll
je
sahf
jno
fcoml
cmp
xchg
in
sbb
push
ficomps
xchg
decl
add
pop
arpl
insb
add
dec
leave
sub
sub
and
dec
test
sub
les
ds
mov
in
sub
inc
shlb
sub
cmpsl
cs
out
mov
decl
sub
push
inc
fisttpll
outsb
mov
lock
mov
aam
fmuls
mov
dec
testb
add
jnp
cmp
ret
inc
lods
sti
cmp
test
nop
sub
das
bound
cmp
iret
in
das
ret
mov
add
cmp
and
inc
sub
sub
cmp
mov
jmp
push
jecxz
push
add
cmp
and
out
xchg
adc
sbb
inc
aas
mov
adc
cs
insl
cmp
call
in
xchg
fisubs
int3
sub
sahf
dec
in
dec
ds
cs
das
jne
cld
aaa
int3
dec
shlb
into
push
jle
pop
cmp
xor
popw
mov
jae
lds
push
movsb
jae
ret
add
imul
mov
scas
xor
mov
or
mov
out
cld
testl
fs
and
stos
scas
pushf
dec
sbb
pop
jne
inc
cs
shr
dec
scas
comiss
ds
jp
xchg
stos
push
outsb
mov
cmp
test
lahf
ljmp
shrb
leave
inc
pushf
add
in
jl
lahf
ljmp
cmp
outsl
jp
pop
stos
out
ficomps
dec
sub
cmp
ror
push
dec
inc
sbb
fldl
int
jo
repz
lahf
jne
pop
push
insb
push
jmp
mov
cmp
lods
and
push
insb
repz
out
lods
adc
test
dec
enter
cwtl
dec
sbb
lock
inc
insb
adc
sub
inc
push
sahf
insb
cmp
cmp
dec
jge
into
jbe
fistpl
aaa
mov
pop
cmp
jecxz
lods
scas
icebp
sub
jo
insl
jl
sub
aaa
pop
insb
lods
lods
push
jge
sub
push
adcb
lcall
mov
js
enter
imul
out
in
in
jl
mov
jne
push
adc
cli
mov
in
out
cs
xlat
cld
repnz
into
cmp
pop
jl
outsl
enter
jne
and
outsb
lods
bound
in
das
dec
test
adc
jl
dec
jb
mov
inc
into
jl
in
jle
shlb
ss
push
cmpsl
pop
fistps
decb
mov
xchg
fs
lods
ret
std
add
xchg
in
ss
addr16
and
cmp
or
out
jb
nop
lods
push
inc
insb
xor
lock
jo
xor
iret
push
add
and
push
shlb
in
xor
add
arpl
mov
pop
dec
inc
adc
test
xor
in
jg
xchg
jne
sbb
sbb
xchg
and
mov
add
or
es
lret
add
mov
add
jbe
mov
mov
push
jge
jnp
or
bound
cmp
je
cmp
adc
test
sbb
or
cmpsb
add
or
sahf
xor
xchg
xchg
sbb
and
sub
push
push
push
pushf
pop
cmp
jp
inc
fdivs
in
cmc
aam
int
dec
inc
mov
mov
shlb
popf
sub
pop
adc
int3
fcoms
fsubrl
push
sub
inc
cltd
pop
cmp
add
rcrl
xchg
les
cmp
mov
mov
iret
scas
adc
out
and
dec
jg
iret
shrl
pop
push
mov
dec
push
push
sbb
adc
sub
out
sub
sahf
xchg
int3
inc
pop
inc
std
add
mov
mov
pop
sub
ret
jb
adc
or
or
shr
cmpsl
fisubl
stc
push
dec
in
jb
add
cld
das
adc
adcl
aam
add
dec
dec
pop
std
insl
js
subb
cmp
lahf
cmp
mov
sahf
rcll
adc
push
pushf
insb
adc
and
fmull
aad
cltd
xchg
in
pop
sbb
adc
sub
adc
xor
pop
cwtl
gs
add
fstpl
xchg
mov
addb
adc
int3
inc
insb
jno
or
cmp
and
out
jo
xorb
dec
add
push
sub
push
bound
xor
mov
into
aas
dec
mov
mov
xor
out
int3
cmpsb
mov
outsl
leave
int
cmp
iret
lea
pop
in
xlat
movsb
cld
cmp
das
and
inc
push
jp
lea
push
les
adc
jne
cli
pop
divl
add
pop
push
sub
mov
push
aam
inc
or
pop
sbb
mov
push
sbb
cmp
cmpsb
lods
mov
mov
pop
cmp
cmp
xorb
inc
and
and
or
lods
insb
insb
inc
sbb
das
sub
push
leave
mov
adc
pusha
mov
sub
mov
int
mov
lds
xor
in
and
jp
movsb
insb
sbb
fadds
insl
std
ljmp
pop
pop
adc
jb
pop
sbb
jnp
inc
pop
xchg
sub
fs
mov
mov
sbb
xlat
and
je
lcall
sti
sub
dec
sub
lock
dec
fistps
push
movsb
cmp
pop
push
loope
xchg
les
add
rorl
sbb
ficompl
jno
scas
mov
popl
repnz
xchg
shll
jns
lods
add
flds
inc
sahf
test
sbb
xchg
add
jg
das
jmp
ficoms
inc
cli
sub
mov
xor
cltd
test
jle
jl
hlt
jge
inc
int3
inc
shlb
shlb
insl
mov
push
int3
data16
in
and
aas
and
insb
cltd
int
popf
dec
mov
in
jae
xor
decb
push
cmc
add
pop
xchg
or
in
in
sub
add
es
xor
mov
mov
std
popf
repz
cs
scas
pop
in
mov
sar
push
inc
lock
aas
push
cs
cmp
cmp
in
icebp
call
in
xchg
in
jl
cmp
ljmp
fs
mov
jb
mov
cmpsl
lods
pop
pushf
ret
mov
xor
xchg
jge
popa
fs
or
pop
mov
rep
sbb
xor
push
insl
jne
sub
out
jl
setle
adc
jo
outsb
jb
xor
push
jmp
cmp
aam
and
sub
cmp
sub
out
pop
xlat
adc
sub
int3
mov
insb
lods
scas
xor
cmpsl
int3
and
popf
aas
out
mov
das
test
cld
nop
and
cmp
sub
push
aam
push
iret
xchg
popf
and
scas
jle
push
sbb
push
dec
lods
mov
das
mov
lods
sub
dec
dec
ds
xor
jl
cmp
cmp
vsqrtsd
scas
xchg
insl
cmp
xchg
sbb
fistpll
mov
push
das
sub
inc
dec
push
push
aam
push
in
mov
push
jo
mov
push
inc
pushf
mov
scas
fisubrl
pushf
dec
std
push
das
push
sub
pop
aas
pop
outsl
jle
push
aad
adc
cwtl
out
mov
dec
jle
push
popf
dec
cmp
nop
cmp
xor
nop
popf
lcall
xchg
fisttpl
cmp
orb
rorl
aam
scas
push
into
push
jle
pop
dec
jmp
dec
adc
mov
lea
hlt
dec
rorl
add
adc
call
adc
jne
mov
pop
outsb
cs
jge
mov
ss
test
shrl
in
xor
xchg
lea
cmpb
xor
push
inc
pop
fldt
mov
out
jle
pop
xlat
and
sahf
rolb
mov
push
aas
xchg
xlat
popf
rorb
adc
adc
mov
ds
dec
sub
cs
into
in
pop
and
faddp
lcall
vsubss
inc
inc
dec
add
pop
lahf
int
dec
ret
xor
cmp
and
int3
mov
sbb
fcompl
fucomip
fsubl
cmp
cmp
xchg
iret
cld
sbb
jno
push
dec
jle
lahf
arpl
lods
or
push
jecxz
xor
and
adc
sbb
pop
std
scas
mov
lock
sub
stos
in
mov
sbb
rcl
xor
xor
aas
sbb
adcb
int
aad
and
fidivs
push
test
out
cwtl
sub
flds
push
cmp
fldcw
pusha
sbb
das
dec
push
sbb
dec
push
outsl
xor
jle
push
into
cs
fstl
scas
scas
pop
push
mov
lods
fucomp
pop
adc
dec
les
scas
fnstsw
pop
nop
adc
jl
lea
inc
sub
sbb
daa
pop
push
xor
cmp
pop
loope,pt
mov
cmp
pop
mov
imul
or
stos
sub
fwait
and
pop
inc
fisttpll
rcr
or
jg
or
sbb
hlt
lea
aas
mov
ss
mov
jge
adc
divb
sahf
cmp
lret
call
mov
jl
ljmp
stos
fdivrp
push
sbb
mov
imul
or
decb
mov
shlb
pop
enter
das
xchg
push
jecxz
jg
int
push
popf
and
xchg
iret
adcl
dec
sbb
xchg
push
or
popf
jl
popf
sub
mov
cmp
aas
pop
pop
xor
cwtl
lods
mov
das
in
sub
daa
aas
push
pop
dec
dec
sarb
das
lods
stc
push
scas
push
mov
stos
fdivrl
push
inc
inc
in
mov
hlt
cmp
cs
mov
stc
outsl
push
cmp
fisttps
sub
mov
jg
int3
mov
out
xchg
cld
inc
mov
xor
pushf
pop
gs
jg
lock
mov
fdivp
pop
xchg
mov
push
pop
std
nop
fsubrp
xor
icebp
outsb
rcrl
lock
lods
push
hlt
push
fnsave
push
jl
xor
movsl
popf
xchg
call
fcomip
data16
enter
mov
fildll
cltd
cmp
sub
sbb
arpl
cmpsl
invlpg
dec
dec
outsl
int3
out
or
pop
dec
cmp
pop
pop
stc
in
sub
jl
in
out
nop
cmp
dec
sbb
in
inc
sar
sahf
mov
std
add
sbb
mov
mov
iret
jns
xchg
pop
cmp
cwtl
outsl
std
lock
jl
adc
mov
cs
in
add
dec
adc
mov
pop
mov
pusha
jl
push
sub
lods
push
shrl
jl
in
rcrb
push
cs
push
std
mov
and
sbb
rcrl
cmp
stos
in
in
jle
ljmp
pushf
sbb
lahf
xor
mov
cmp
mov
jl
sahf
push
pop
adc
scas
sarl
pushf
push
ds
mov
pop
shrl
cmp
cmp
mov
aas
dec
ljmp
push
mov
test
les
and
pop
in
adc
insl
mov
pusha
adc
mov
mov
icebp
mov
int
mov
push
dec
mov
xchg
pushf
adc
sub
push
scas
mov
rorl
popf
scas
cmp
lods
lret
cs
fnstsw
popf
jle
cs
in
sbb
ss
in
or
decl
cmc
in
xor
call
out
xchg
scas
pop
mov
sub
pop
pop
lods
cmp
data16
pop
nop
fistps
sub
aad
outsb
and
pop
dec
pop
arpl
xchg
jle
pop
push
lods
pop
jle
cwtl
pop
stos
out
cmp
lahf
ljmp
lcall
jnp
dec
sbb
push
push
lods
pop
xchg
jl
insb
pushf
shrl
push
pop
dec
mov
sbb
push
cld
inc
pop
sbb
dec
cmp
pushf
decl
pop
lea
dec
sarl
mov
fcmovne
sub
cltd
out
xor
sahf
daa
divl
lahf
add
inc
scas
nop
mov
add
scas
sub
pop
dec
xor
xchg
mov
or
imul
mov
out
cmpsl
sahf
nop
dec
lea
xchg
js
das
push
mov
outsb
xor
ss
sar
shlb
pop
jae
xlat
rdpmc
cs
or
fistpl
int
sbb
mov
xor
ds
ds
sti
mov
imulb
pop
aas
mov
xor
outsl
mov
xor
dec
cs
inc
sub
push
sub
jnp
fcoml
jg
xor
xorb
enter
les
mov
cwtl
fisttpl
mov
pop
mov
mov
ret
sub
cmc
sub
rcrb
adc
xchg
in
cmp
push
mov
pop
aas
push
jmp
in
in
sub
mov
adc
fs
sub
mov
fs
outsb
jle
sub
into
sub
xor
pop
jge,pn
and
pop
and
push
je
xchg
insl
jge
cld
jg
push
push
scas
imul
insl
sbb
enter
popf
inc
fsubrs
jnp
dec
cmp
lea
inc
cwtl
cmp
outsl
sbb
xor
xor
jge
in
ss
sbb
fnstsw
outsb
shrl
in
and
push
cs
in
cmp
dec
pop
mov
and
cs
push
push
lods
das
call
mov
insb
mov
push
push
das
inc
in
cld
ds
incl
fsubrl
jl
sub
fidivrs
shrl
cmp
push
nop
dec
lods
dec
inc
adc
pop
push
in
insb
imul
mov
mov
outsb
repnz
push
adc
nop
sbb
jg
aam
data16
int
inc
outsb
insl
das
and
pop
insl
enter
jl
adc
insb
nop
push
xchg
scas
inc
int3
mov
ljmp
push
push
push
pop
pushf
test
lcall
jb
xchg
in
stc
icebp
push
cmp
cmp
fldl
int3
jle
popf
xchg
adc
pop
mov
mov
pop
and
cld
jle
in
negl
and
imul
fiadds
xlat
pushf
jb
in
xchg
test
and
pop
sbb
ljmp
lret
fldl
lcall
es
xchg
out
sahf
ret
pop
aas
popf
sti
pushf
adcl
cmp
mov
pushf
pop
ljmp
outsl
adc
cmp
xor
dec
ret
sub
popf
lahf
push
mov
cmc
jns
mov
shlb
loop
mov
ss
cmp
mov
cs
mov
inc
xor
cmp
std
push
cmp
out
dec
mov
dec
aas
sbb
and
dec
dec
aas
push
cs
push
test
push
jns
sub
data16
pop
adc
scas
test
or
lea
jge
insl
xor
mov
out
enter
repz
cmp
and
adc
xlat
int3
popf
outsl
xor
sub
pop
sbb
shlb
xor
inc
cmc
loopne
sti
dec
dec
push
imul
ljmp
scas
jae
leave
loope
or
push
loop
into
aas
sahf
lock
cmp
insb
sub
push
jge
jmp
pop
cs
imul
pop
in
popf
repz
push
xchg
xchg
sbb
pop
jnp
dec
fldt
int3
sbbl
xor
int
lods
push
or
sub
scas
sbb
sub
or
jb
jns
inc
inc
push
insb
push
jg
iret
pop
ljmpw
cmpsl
insb
xchg
int3
push
dec
xor
adc
mov
dec
dec
test
cmpsl
inc
mov
inc
jecxz
mov
mov
sbb
pop
pop
insb
cld
out
cmpsb
in
mov
lock
iret
in
mov
outsb
in
push
pop
enter
inc
dec
add
jg
shlb
subps
das
scas
mov
xlat
mov
aaa
jle
cmp
nop
jl
das
outsb
rcrb
jl
pop
mov
mov
mov
je
jl
je
xor
rorl
pop
pop
lods
pushf
lods
dec
lahf
and
mov
repz
cmp
xor
out
lahf
mov
aad
test
jp
and
sub
das
fsubrl
stos
std
cs
jle
sub
mov
push
jae
inc
dec
push
pop
push
xor
cmp
outsb
in
and
cs
lock
adc
test
popf
xchg
sbb
cmp
lods
popf
js
lods
inc
pop
cld
insb
sub
dec
sarl
xor
or
push
sub
lods
pop
jmp
mov
cld
sbb
xchg
sbb
pop
dec
std
dec
dec
rcrl
stos
push
cmp
push
mov
xchg
xchg
sub
scas
aad
test
or
lcall
pushf
fistpl
push
enter
imul
push
dec
xchg
fwait
xchg
rorb
mov
mov
dec
arpl
mov
aaa
push
lea
pop
das
pop
sbb
mov
pop
push
test
jl
lahf
icebp
popf
jl
adc
fdivrl
dec
adc
lods
jp
xchg
into
mov
insb
addr16
push
pop
xlat
mov
pop
jb
jmp
das
incl
sarl
lahf
cmp
xchg
repz
and
pushf
pop
bound
pusha
fnstsw
int
mov
jg
ficoms
jl
mov
fimuls
jg
lea
push
data16
scas
fidivrs
mov
mov
dec
adc
ret
mov
adc
nop
fdiv
popf
jge
jg
adc
in
and
xchg
pop
scas
pop
sbb
lea
jnp
mov
add
mov
pop
test
cmpl
shr
push
jle
jmp
daa
push
sbb
push
mov
xor
out
dec
mov
das
and
pop
imull
aad
fs
out
jle,pt
aas
inc
adc
ds
popf
lcall
jmp
fnstsw
xchg
aas
and
dec
dec
das
push
cs
push
test
push
mov
cwtl
push
sub
or
sbb
push
loope
cli
std
lods
int3
push
mov
mov
jbe
test
xchg
jmp
and
xor
ret
dec
xor
pushf
mov
flds
insl
shlb
jge
sarl
iret
adc
clc
aaa
dec
test
jge
pop
pushf
push
imul
cmp
insb
in
fbld
inc
insb
out
mov
scas
mov
jg
rolb
out
lret
sahf
push
dec
xchg
fisttpll
movsl
lods
xor
mov
push
mov
mov
rorb
lods
cmp
popf
inc
outsl
ds
inc
nop
pop
xor
and
sarl
es
jne
mov
out
push
fidivs
fmuls
mov
pop
sbb
call
jo
or
fcoml
pop
lcall
adc
sahf
or
lahf
fmuls
pop
nop
pushl
sub
aas
lock
xor
jns
xlat
mov
dec
jge
xor
setns
jae
cmp
aad
jle
mov
and
outsb
movsb
pushf
repz
das
pushf
mov
insb
frstor
sbb
or
mov
cs
mov
nop
mov
sub
xchg
es
jmp
dec
insl
out
rcr
xor
adc
fs
sahf
cltd
xchg
sub
inc
insb
insb
pop
ja
sbb
xchg
mov
mov
xchg
pop
cld
mov
popf
cmp
insb
mov
cld
mov
pop
std
mov
fstpl
outsb
cmp
mov
dec
mov
sbb
mov
pop
out
push
push
cmp
bound
daa
mov
cld
into
insb
mov
je
dec
outsl
lahf
pop
sub
sub
rcrl
mov
pushf
sbb
xor
mov
xor
mov
aad
lock
xchg
push
cmp
mov
xchg
sub
daa
mov
aas
mov
mov
fadd
ds
ljmp
enter
aas
nop
pushf
xchg
push
rcrb
xor
push
cld
filds
cmp
nop
push
pop
insb
mov
mov
xchg
fistps
popf
cwtl
in
dec
insb
shr
lret
xor
pop
mov
lret
pushf
inc
inc
inc
push
cmp
mov
mov
push
jl
sub
mov
cmp
mov
lock
push
cld
movsb
sub
lahf
ds
pushf
cs
pop
into
mov
popf
dec
mov
cs
in
int3
shl
and
pop
clc
dec
and
jns
lods
shll
push
and
mov
insb
cmp
jg
push
test
cs
dec
mov
jl
push
nop
jno
int
arpl
movsb
iret
cwtl
scas
dec
je
jo
inc
or
std
sub
mov
and
stos
popf
cmp
pop
pop
into
ficompl
jno
cmp
dec
test
pop
fisubrs
push
test
jmp
pop
fstp
mov
iret
xor
loop
cmpsl
jge
cld
insb
cmp
pop
dec
cwtl
rorl
mov
iret
mov
cmc
sub
sbb
inc
push
fists
dec
cwtl
mov
insl
inc
sahf
int3
push
aas
jb
mov
sar
and
pusha
mov
mov
dec
push
scas
out
xchg
nop
test
mov
dec
push
scas
out
int
nop
insb
pop
ljmp
dec
pushf
lcall
fistl
out
adc
pushf
enter
imul
dec
sub
cmp
sbb
mov
sbb
lods
iret
jns
fmulp
adc
insb
sahf
or
mov
sub
xchg
ljmp
lret
pushf
out
in
sbbl
int
and
enter
fnsave
dec
push
ror
mov
insl
popf
loope
push
cmp
jnp
repnz
adc
frstor
out
cmp
outsl
or
in
mov
outsb
popf
sub
push
int
mov
paddd
dec
scas
fstpl
imul
mov
and
sbb
cwtl
jg
into
sahf
mov
fisttps
and
xchg
movsb
pop
popf
imul
and
scas
dec
lods
out
mov
das
fmul
jo
sahf
inc
fucomip
das
inc
scas
jge
cmp
pusha
dec
xchg
iret
scas
leave
lahf
jge
insb
mov
push
sbb
lahf
mov
das
lods
pop
mov
stos
xor
pop
insb
std
imul
insl
or
xchg
push
xchg
sti
mov
mov
dec
sub
mov
pop
out
xchg
sub
cmpsl
aad
or
mov
pop
gs
pop
pusha
into
lods
xchg
adc
mov
out
pop
and
and
dec
mov
es
pop
stc
fldl
and
fmull
push
mov
dec
and
sbb
jg
gs
stos
bound
pop
pop
push
pop
ja
jnp
adc
mov
cmp
nop
incl
or
add
out
gs
pop
test
iret
jg
inc
xor
cli
jle
adc
xor
push
ficomps
pop
int3
test
maxps
adc
push
adc
sbb
inc
push
dec
lahf
sub
xchg
push
cwtl
in
imul
push
xchg
xor
jle
or
sub
je
in
outsl
int3
scas
adc
xor
test
or
lods
pusha
sub
das
pop
mov
adc
int
pop
outsl
xor
insb
sub
adc
sub
pop
xchg
mov
inc
push
jl
and
test
push
and
push
mov
xchg
int3
jl
dec
pushf
push
push
push
sbb
stc
pop
es
ss
in
adc
push
pushf
push
rcrl
adc
pop
femms
aam
cld
xchg
nop
push
lods
test
out
jno
nop
inc
sub
jno
mov
sbb
int3
jge
int3
enter
fnsave
test
cs
push
inc
das
mov
insb
hlt
and
adc
cmpsb
iret
outsl
xchg
sbb
mov
jp
and
or
mov
inc
subl
lods
xor
cmp
mov
int
sbb
je
xchg
aas
es
in
cmpsb
int3
dec
lea
cmp
pop
aas
xor
xchg
push
pop
lea
orl
sbb
pop
dec
scas
decb
sbb
mov
js
dec
jl
cs
adc
sbb
cld
and
popf
mov
cld
add
out
repnz
pop
sahf
jb
fidivs
scas
pop
xchg
adc
aaa
sub
insl
into
cmp
mov
into
adc
lea
jecxz
lods
int3
out
inc
sub
sub
push
push
xchg
cld
pushf
fcoms
lahf
sub
sbb
sahf
dec
pop
sub
ds
sub
mov
jno
test
aam
adc
jmp
popf
jg
cmp
pop
ds
jg
pop
pop
aad
lahf
sub
mov
push
fstpl
syscall
adc
push
frstor
repnz
mov
cmp
lds
inc
xchg
xchg
fs
sub
adc
mov
mov
loope
sub
iret
xchg
negl
loope
xchg
sbb
insl
iret
push
xor
fcomi
sub
jmp
loope
dec
mov
sub
icebp
xchg
lcall
mov
loope
lods
int3
cltd
inc
mov
aam
mov
mov
dec
dec
rorl
fnsave
xor
clc
test
dec
inc
sbb
inc
ror
loope
mov
pusha
xchg
xchg
popf
aam
push
sub
vpsubsw
mov
add
pop
clc
jb
add
in
fnstcw
inc
jl
jmp
mov
int
inc
inc
sub
xchg
dec
inc
mov
mov
xor
ja
lea
xchg
stos
lcall
push
daa
divl
shlb
fldcw
adc
in
iret
xchg
sbb
sbb
scas
dec
ret
jb
dec
push
ljmp
pop
pop
pop
mov
sbb
sti
push
mov
ja
mov
hlt
jge
dec
aad
cmpsl
xchg
push
rorl
inc
es
lret
das
movsl
fldl
mov
sub
pop
mov
jge
adc
les
dec
cmp
cmp
test
xor
aas
nop
out
xor
bound
push
idiv
mov
imul
and
insb
movsl
cmp
and
mov
pop
pop
sbb
aad
or
jl
cmp
loopne
fwait
insb
adc
in
fstl
pop
sbb
jnp
insb
and
int
xchg
xchg
adc
and
hlt
into
idivl
dec
mov
mov
leave
mov
outsb
jnp
out
lahf
push
test
sbb
fwait
sbb
fyl2x
or
icebp
aam
push
mov
call
xchg
dec
pushf
pop
cmp
xchg
nop
insl
xor
popf
ret
imull
jp
add
std
mov
jb
and
cli
subl
std
popw
popf
sub
xor
mov
push
int
sbb
mov
enter
mov
movsb
and
xchg
enter
or
push
movsb
jmp
cmpsb
pop
push
cmp
sub
incb
cmp
xchg
push
scas
stc
xor
jns
retw
add
and
mov
fdivrp
aam
sub
mov
enter
les
sub
sbb
in
hlt
and
and
jmp
xchg
pop
movsl
adc
aam
cltd
pusha
shll
cmp
icebp
xor
mov
or
pop
je
cltd
daa
inc
push
xor
sub
dec
mov
push
xor
jno
inc
push
mov
jmp
cmpb
inc
push
into
mov
sub
cmc
dec
test
int3
adc
jno
in
bound
orb
insl
jns
dec
imul
std
xchg
stc
and
insl
fldt
push
add
push
ds
adc
and
push
sub
xchg
pop
and
inc
in
jl
lods
lds
ss
lea
cmp
xlat
test
insb
mov
mov
cmp
inc
cmp
jae,pt
sub
mov
inc
mov
lds
aad
sarl
pushf
es
orb
sbbl
push
mov
cmp
sub
cmovg
adc
inc
push
inc
std
pop
inc
inc
nop
mov
call
insb
and
push
je
adc
wrmsr
and
dec
dec
pop
test
pop
int3
xchg
fs
int3
pop
fs
inc
push
in
dec
leave
xor
cmpl
mov
insl
add
mov
in
data16
xchg
mov
adcl
les
dec
sti
push
add
sub
in
sbb
rcl
std
in
aas
inc
ficompl
or
sbbb
dec
aad
adc
sbb
movsb
cmpsl
pushf
dec
jle
lods
xor
repnz
cmp
dec
push
nop
mov
mov
lret
xchg
mov
aaa
fnstcw
mov
lcall
fisubl
lock
into
adc
xor
xchg
jl
bound
insl
adc
mov
sahf
lock
imul
pusha
pop
sbb
xor
jle
push
sbb
int3
xchg
pop
mov
jbe
jo
hlt
jb
int
leave
cmp
es
jecxz
inc
in
lock
mov
mov
aas
fbstp
pop
sub
and
hlt
inc
in
inc
clc
dec
mov
sub
pop
dec
fs
hlt
icebp
mov
cmp
stos
sub
add
leave
jbe
in
cmp
test
xorl
inc
leave
inc
mov
dec
stos
push
lahf
cmp
mov
cmp
scas
pop
cmp
mov
aam
in
cmp
xchg
xor
xchg
xchg
mov
fcomip
jecxz
clc
outsl
iret
ljmp
pop
and
mov
pop
test
add
es
cmp
mov
fimuls
pop
cli
sub
sbb
das
stos
cmp
xor
dec
adcl
loope
fxch
mov
dec
inc
out
fisttpl
xor
mov
jge,pn
adc
in
das
mov
lret
or
push
leave
mov
call
pop
add
sbb
rclb
mov
jg
fmul
ljmp
scas
mov
mov
pop
in
pop
lods
insb
mov
lock
scas
push
cwtl
int
outsb
adc
call
cltd
aad
sbb
divl
test
lret
in
out
cmp
faddl
pop
sbbl
adc
or
cmp
mov
mov
or
outsb
test
or
lds
lock
lahf
aam
fdivrs
mov
xor
jle
xor
pop
mov
mov
addr16
sti
enter
pushf
outsl
aad
cmpsb
fistps
mov
cmp
cs
push
mov
xor
sbb
insb
cmp
xchg
cmp
idivb
daa
mov
sub
jle
xchg
and
mov
cld
pushf
or
enter
add
adc
fldenv
outsb
push
outsb
push
rcr
lcall
out
jge
iret
push
xor
xchg
jl
cmp
frstor
cmp
inc
or
xor
dec
jl
sub
and
sub
mov
sbb
fldcw
fcompl
pop
dec
movsb
mov
fnsave
push
mov
cmp
fcoml
scas
and
mov
sbb
repnz
push
xor
dec
stc
lock
cmp
in
hlt
cmp
pop
cmp
lods
cmovg
jl
inc
dec
or
xchg
xor
jmp
cmpsl
push
push
dec
dec
fstps
dec
sti
mov
pop
fmul
loope
test
jg
lea
dec
cmp
jo
mov
aad
jns
fistps
mov
das
dec
push
insl
inc
cwtl
pop
lahf
xor
mov
les
push
loope
mov
pushl
xchg
cmp
pop
sbb
xor
dec
xor
mov
mov
push
dec
das
lods
push
int
cwtl
jge
inc
add
sub
push
test
jmp
icebp
mov
cld
pop
aaa
adc
std
sub
sub
pop
push
push
ficoml
rcr
nop
dec
insb
push
insb
push
inc
dec
cs
mov
sub
int
or
sbb
push
cmp
and
loope
outsb
add
push
mov
outsb
push
mov
mov
mov
fnsave
out
pop
jge
scas
cmp
in
decl
dec
lods
ds
outsl
push
fsubl
out
in
sbb
pop
add
nop
aas
inc
pop
mov
into
sti
xchg
dec
lods
cwtl
std
push
xchg
pop
jl
mov
popf
mov
mov
add
dec
addr16
cld
test
cmpsb
insl
and
sbb
cli
popf
stc
adc
pop
xchg
pop
fcompl
jg
cmp
xor
enter
pop
mov
push
jl
inc
dec
scas
xchg
pop
add
jno
les
sub
sbb
jg,pn
inc
movsb
pop
xchg
push
outsl
pop
pop
pop
xchg
out
fmull
pop
sarl
mov
cmp
mov
dec
mov
out
call
xchg
pop
jae
fstps
jge
sub
cwtl
in
scas
jle
push
out
pop
inc
pop
sbb
bnd
jl
stos
sub
testl
pop
pop
out
sub
in
sub
arpl
push
pop
pop
sub
mov
lahf
push
arpl
lods
inc
sub
std
and
adc
cs
and
dec
mov
mov
xchg
repnz
movsl
xor
push
mov
sub
cmc
inc
dec
sub
js
sbb
imul
or
push
lea
addr16
sbb
push
fwait
in
mov
std
lock
je
lea
ds
cmp
jg
sub
pop
sbb
in
dec
dec
push
dec
sbb
mov
adc
roll
ds
insb
int
dec
in
xchg
insb
imul
sarl
xchg
mov
xor
and
popf
mov
fstl
pop
and
cmpsb
sub
sbb
dec
dec
fwait
adc
lahf
cltd
pop
clc
add
fildll
jle
sub
outsl
shrl
fisttpll
mov
xchg
outsb
inc
imul
pop
int3
aam
xor
adc
mov
pop
mov
test
xchg
mov
fstl
movsl
nop
shll
icebp
dec
pop
mov
inc
add
inc
int
ja
jmp
jns
mov
ficoms
push
sub
test
int3
cmp
je
jge
mov
inc
dec
les
lea
mov
inc
push
test
in
xor
dec
add
fnsave
enter
test
mov
sbb
scas
mov
adc
pop
sbb
movsb
loope
incb
sub
sub
test
dec
fcmovnb
mov
xor
hlt
sub
std
sub
sti
lret
mov
mov
lods
sub
pop
pushf
gs
pop
into
push
testl
popf
jge
pop
insw
notl
bound
cs
mov
push
jno
push
mov
push
lods
imul
xchg
pop
dec
lods
cmp
inc
and
cmp
ss
dec
mov
pop
and
cltd
lea
inc
lds
cmp
aas
lret
add
and
adc
sub
lea
test
push
pop
out
pop
leave
mov
and
mov
jle
adc
pop
outsb
mov
pop
lods
loope
xchg
rol
mov
stos
hlt
inc
sub
fcoml
pop
and
es
cs
in
mov
rcrb
pop
push
and
mov
outsb
pop
test
inc
mov
scas
imul
xor
lds
xor
mov
push
lahf
pop
fmull
mov
push
lods
mov
dec
push
popa
test
mov
je
inc
xchg
or
das
adc
ficomps
in
dec
dec
aaa
aad
cmc
xor
dec
in
or
pop
inc
dec
int3
movsl
lret
dec
pop
lods
les
pop
xor
xchg
ja
in
and
insb
fnstsw
in
mov
outsl
pop
sub
jbe
repz
adc
outsb
int3
lods
mov
jge
mov
into
xchg
insb
cltd
mov
inc
gs
aaa
dec
pop
dec
xchg
or
or
andb
add
fdivl
dec
xchg
lods
jl
xor
mov
lea
cld
aaa
lods
push
mov
pushf
xchg
rolb
pop
std
scas
popf
mov
outsl
sbb
xchg
dec
aad
bound
fcoml
jbe
and
inc
icebp
sbb
xor
hlt
pop
add
fldl
xchg
mov
sub
lods
movsb
pop
movsl
sbb
sbb
out
adc
lahf
cld
xchg
xchg
or
in
test
adc
pusha
outsl
mov
fidivrs
fstps
lods
mov
push
mov
cmp
push
ss
lods
outsl
ds
into
sub
movsl
xchg
cltd
stos
cmc
xchg
and
test
jge
mov
or
push
movsb
sub
cld
movsb
mov
push
insb
mov
jge
xchg
mov
push
rorb
push
sub
lods
fdivl
mov
xor
dec
push
outsb
ja
and
mov
scas
das
mov
scas
outsb
jmp
mov
pop
mov
mov
mov
ss
adc
adc
xchg
add
pop
pushf
and
hlt
cwtl
cmp
or
cmp
or
cmp
jns
sbb
shlb
jp
mov
adc
or
out
es
negb
leave
in
movsb
sub
adc
mov
xchg
pushf
and
adc
push
ss
popa
subl
fbld
pop
ljmpw
sub
rcr
mov
cmc
out
in
int
hlt
fsubrl
les
xchg
jb
jb
pusha
les
in
hlt
insl
das
ficoms
jne
inc
insl
cmp
nop
data16
lock
jno
jnp
cmp
mov
insb
pop
dec
nop
aad
fxch
xor
aas
push
sahf
data16
mov
sub
pop
sub
cmp
into
lods
out
sub
xchg
rcrl
hlt
push
xchg
push
jns
push
push
jae
fcompl
pop
jle
xchg
xchg
call
rcll
fldenv
sub
in
mov
int
xchg
mov
pop
inc
pop
pusha
inc
int
sbb
or
jge
lret
and
std
pop
mov
and
cmp
dec
push
pusha
shr
lcall
xchg
ss
push
sbb
scas
inc
push
jge
xchg
pop
fidivrs
mov
in
sub
xchg
fistpll
xor
jnp
cwtl
and
cwtl
out
inc
sub
jno
cmp
push
out
and
jo
adc
push
nop
cmp
fcompl
xchg
mov
jno
pop
sbb
and
nop
insb
pop
push
std
cmp
pushf
mov
and
sub
lods
pushf
sub
xlat
xor
pop
das
adc
das
lods
push
int3
inc
dec
sub
mov
push
lods
mov
mov
mov
popf
mov
mov
cmc
in
int
add
jle
pop
sub
cld
fstps
shlb
inc
mov
lahf
cwtl
adc
cli
inc
cld
nop
mov
ljmp
shrb
fs
lcall
push
fdivrs
pop
test
repnz
and
or
add
in
cmp
in
xchg
mov
xor
jge
icebp
push
aas
lahf
cli
mov
dec
mov
ret
or
ja
aaa
dec
mov
cmp
inc
ds
cld
dec
jge
mov
or
mov
inc
mov
addb
mov
sub
cs
sbb
das
dec
mov
sub
cs
cmp
mov
sub
ds
fsubl
inc
push
or
pop
dec
xor
sbb
roll
lods
cmp
xor
add
dec
xchg
in
push
sbb
lods
sti
jae
lock
xor
sub
xchg
push
fisttps
in
in
cs
cmp
pushf
js
mov
fcoml
xor
push
pop
sub
rorl
and
scas
cmp
sbb
es
fstl
sub
xchg
cmp
sbb
xor
xor
popf
lahf
xchg
das
clc
ja
jne
outsb
fs
pushf
push
movsl
into
mov
fldl
ss
sbb
adc
dec
add
popa
mov
gs
cmp
mov
test
xchg
jmp
faddl
push
dec
divl
pusha
sub
sub
pop
bound
ja
push
jnp
adc
repz
fisttps
push
push
dec
push
pop
and
add
inc
ljmp
scas
imul
pop
mov
fldt
mov
inc
aad
adc
int3
mov
add
pop
insl
paddd
and
aaa
sub
mov
popa
mov
shlb
xchg
lahf
nopl
push
xor
pop
mov
xorb
jp
dec
lea
inc
test
movsb
sbb
dec
or
in
jge
add
fcompl
and
repz
or
jle
das
aad
fnstcw
lea
fstps
add
int3
iret
sbb
add
mov
pop
sub
mov
ljmp
addb
sub
jb
xor
sbb
pop
jge
pop
adc
std
out
add
psubusw
cmpsb
enter
sub
inc
repnz
imul
mov
mov
sub
daa
dec
push
std
xchg
sub
addr16
push
sbb
addr16
cmp
mov
cmp
pop
insl
outsl
lods
push
jno
push
out
into
out
jae
sbb
adc
cmpsl
pop
sbb
mov
fadd
pop
fst
pop
enter
pop
aas
ds
cmp
fbld
gs
lahf
inc
les
idivl
dec
xchg
lea
sbb
pop
jge
fimuls
mov
dec
out
mov
cs
inc
xchg
cmpsb
dec
mov
icebp
jle
sub
and
mov
addl
cmp
pop
or
popa
pop
jecxz
jl
jne
gs
sbb
mov
sbb
cmpsb
mov
mov
dec
popf
push
push
icebp
aaa
cmp
jns
push
pop
jae
popf
mov
aam
loop
outsb
mov
hlt
outsl
rorb
sub
pushf
shr
enter
lods
shr
pop
jp
pop
int
xchg
test
jge
push
shll
insl
in
cmpsb
push
and
lods
scas
insb
xor
mov
pop
and
stos
lods
and
fxch
sub
mov
fdiv
sub
adcl
push
into
xor
stos
sub
lods
xor
jne
push
xor
and
jmp
subb
xor
imul
repnz
cs
cmc
or
lds
mov
mov
es
cltd
addr16
sbb
mov
sub
dec
mov
or
outsl
jl
cmpsb
test
sbb
pop
std
mov
in
xchg
inc
bound
jb
shrl
push
dec
push
jbe,pt
dec
sbb
push
rcrb
cmp
dec
mov
xchg
dec
pop
lahf
popf
movsb
mov
stc
mov
int
mov
scas
lea
pushf
cmp
push
cmp
imulb
pop
push
cmc
sbb
adc
sbb
xor
xor
rcrl
fs
iret
movsl
je
dec
cmp
mov
push
sub
insb
ret
insb
mov
mov
arpl
mov
sub
or
int
push
push
mov
pop
and
mov
inc
sub
cmp
rcll
lods
pushf
add
xor
ss
xchg
inc
fildll
push
movsl
cmp
push
push
cmp
pop
jbe
or
or
push
ss
push
jns
push
sahf
xchg
aam
loope
sbb
in
fucomi
lods
das
dec
int
rcrl
add
xor
dec
push
push
pop
and
in
cmp
mov
sub
cmp
adc
lea
pop
adc
jge
pop
pusha
adc
bound
pusha
adc
push
sbb
push
mov
adc
pop
add
add
lahf
std
jle
outsl
pop
cld
stos
sbb
xchg
outsb
rclb
adc
mov
and
pop
mov
mov
lea
cs
xchg
pop
jp
fldcw
adc
mov
jg
dec
insl
mov
mov
or
rorl
sub
push
inc
jno
test
lods
xor
inc
fs
movsl
into
adc
rcrl
hlt
push
mov
fcompl
int
pushf
mov
jmp
or
jb
inc
insb
xor
push
jne
and
stc
mov
sub
sub
jl
pusha
mov
jl
iret
push
mov
gs
inc
push
pushf
insb
jl
mov
adc
lcall
mov
nop
outsb
adc
or
dec
pushf
lds
nop
dec
xor
jb
jle
jl
fstpl
sahf
jl
mov
push
rcll
sub
or
push
dec
stos
in
mov
mov
push
outsl
das
sub
inc
sub
sarb
ljmp
fadds
add
sbb
aas
clc
dec
jmp
or
repnz
add
subb
pop
sub
sahf
add
xchg
sbb
and
inc
mov
imul
int3
rorb
insb
loopne
in
cmp
fdivr
cmp
mov
sub
cmp
aam
lea
call
jle
fdivr
gs
aaa
call
sbb
sarb
faddl
inc
icebp
scas
push
mov
mov
dec
aam
xchg
lock
cmp
push
xor
xchg
push
jge
clc
mov
xchg
cmp
dec
mov
adc
sub
aam
adc
jne
shl
jg
stos
test
mov
sub
push
mov
jge
hlt
push
mov
or
clc
sbb
pop
inc
cmp
out
movsl
pop
sahf
mov
js
dec
cli
in
adc
cmp
subl
popa
in
sbb
add
dec
mov
mov
adc
cltd
sti
or
inc
mov
adc
in
xchg
in
shll
in
jg
jmp
cmc
into
int3
adc
dec
and
fdivs
inc
xor
loopne
inc
add
or
push
mov
gs
jns
xor
jne
jne
popf
jns
in
mov
ss
or
aad
jle
push
jge
mov
xor
pushf
lods
mov
mov
adc
dec
push
lods
adc
in
test
xor
mov
jl
sbb
fistpll
mov
dec
test
and
in
cltd
cmc
sahf
dec
sbb
jno
inc
std
inc
fmull
pop
popf
dec
dec
mov
and
adc
test
mov
dec
into
sub
sub
push
jl
inc
repz
inc
pop
sub
inc
and
cs
sub
push
fsubr
sub
aad
jl
cmp
xchg
insb
bound
sub
mov
lea
dec
insb
add
push
jne
xor
insl
push
insb
sahf
lods
dec
dec
mov
mov
outsl
cs
lea
push
in
mov
mov
lods
push
jl
cmp
mov
xchg
jg
pop
aam
jl
lea
pop
push
sub
dec
das
mov
insb
inc
xor
sub
or
jne
int
cmp
mov
sub
aaa
in
icebp
and
jge
sahf
push
dec
dec
and
dec
stc
mov
dec
int3
mov
lds
lods
insb
shlb
popa
jl
out
xor
inc
push
jbe
out
jecxz
mov
xlat
out
ret
adc
mov
lods
ds
xchg
int
sub
fcomps
mov
inc
push
in
cmp
dec
mov
push
mov
mov
sub
fsubs
outsb
xor
adc
in
gs
int3
xlat
aam
xchg
mov
push
jns
inc
cmp
dec
dec
insb
push
xlat
lods
inc
out
gs
or
call
aaa
adc
mov
ror
xchg
outsl
dec
jl
fsubrs
mov
add
cld
xchg
and
mov
ret
xchg
jbe
xor
cs
in
cwtl
scas
rol
stc
sub
movsb
mov
ret
jo
lods
in
test
xlat
and
push
dec
pushf
dec
mov
bound
sub
and
loopne
pop
lock
jae
shlb
sbb
popa
outsb
scas
ret
dec
dec
cmp
xchg
mov
mov
lods
add
mov
dec
cs
iret
sbbl
push
adc
xchg
jmp
movsl
mov
cmpsb
lods
lea
std
fsubl
insl
stos
inc
xor
test
push
icebp
push
sub
enter
pop
lods
mov
int
dec
mov
xor
pop
and
insb
cmpsb
fidivrs
cmpsb
cmp
shrl
push
pop
or
dec
andb
call
mov
int3
push
scas
pop
cmp
sbb
jb
test
sarl
bound
adc
pushf
adc
cltd
dec
in
lock
call
mov
call
push
dec
xor
aad
push
lds
dec
push
push
and
jp
movups
adc
les
xor
xor
fsubl
aam
jecxz
mov
push
xlat
cmp
push
scas
data16
dec
aad
add
inc
inc
xchg
push
push
push
pop
push
sbb
popf
mov
add
dec
pop
loope
popf
mov
fstpl
pushf
xor
fldenv
movsl
jnp
lahf
fwait
pop
adc
adc
push
gs
cmp
fsubr
arpl
push
cld
and
sub
lods
test
icebp
inc
outsb
cmp
xor
pop
insl
cmp
push
lea
repz
fcompl
scas
pop
pop
lcall
pop
scas
cmpsb
pop
lcall
mov
je
dec
jns
xor
xor
inc
push
leave
push
sbb
and
push
cmp
daa
test
pushf
xchg
pop
sbb
data16
test
cs
dec
lods
insl
clc
lea
pop
cmp
outsb
jns
insb
push
and
into
push
mov
mov
mov
jl
cmp
and
sahf
push
jl
pop
push
lods
fldl
and
or
push
dec
pop
xor
test
int3
pop
pop
mov
ret
lods
lods
sarl
mov
mov
pop
xchg
adc
ds
fnstenv
mov
push
and
xor
mov
insl
dec
dec
leave
sbb
fiaddl
cmp
imul
into
pop
and
and
xor
and
sub
push
and
xor
dec
and
push
rclb
and
repz
adcl
aad
std
jl
jle
mov
andb
xchg
aaa
test
sub
das
pushf
std
sahf
push
ds
adc
mov
push
sahf
push
sbb
fstl
js
nop
jge
dec
sbb
je
cmp
dec
pop
cld
lock
add
rorl
in
dec
test
jno
int3
cmp
in
inc
mov
inc
dec
push
test
lahf
pushf
push
lock
xor
inc
dec
adc
cld
int3
xchg
fcoml
dec
push
dec
cs
sub
push
xchg
lods
pop
jge
jl
call
jno
sub
cmp
arpl
or
adc
push
add
mov
cmc
daa
push
sbb
scas
jbe
mov
insb
test
fisttpll
xchg
and
pop
fdivrs
lea
xchg
int3
push
cmp
aad
pop
cmp
sub
imul
cmp
pop
aad
shrb
or
push
pop
nop
popf
inc
int
xchg
pop
pop
std
sbb
cmp
mov
lods
in
dec
dec
push
stc
cs
in
lds
sahf
lea
xchg
lods
push
pop
xor
ss
insb
dec
sub
mov
add
pop
mov
into
punpcklbw
sahf
xchg
ds
cmp
idivl
sbb
adc
rorl
adc
clc
adc
push
ds
pop
cmp
mov
or
push
inc
push
jae
mov
pop
dec
outsl
outsb
jb
outsb
push
mov
sub
push
inc
xchg
and
or
lods
movsl
fsts
icebp
push
mov
inc
push
test
xchg
pop
sub
cs
aaa
test
shrl
mov
testb
mov
pop
adcl
ror
push
add
ret
fidivrl
int
cmp
outsl
push
mov
and
or
dec
shlb
push
sub
es
pop
jno
es
and
adc
or
int3
lea
mov
jns
shrl
jp
je
mov
test
inc
lahf
pop
push
sbb
lds
into
xchg
push
lahf
stc
test
jns
iret
push
push
mov
iret
jecxz
xchg
inc
and
mov
jg
fisttpll
xor
push
mov
fs
lds
dec
cs
push
shrl
cmpsb
pop
ja
das
sbb
imul
popf
jbe
mov
mov
dec
xor
outsb
lea
ret
in
bound
aad
inc
mov
and
sti
jns
lods
enter
int
fs
mov
std
pop
out
mov
and
out
xor
xor
aam
mov
fstl
push
je
test
insl
mov
push
jl
mov
push
lods
fnstsw
mov
pop
ds
push
ja
pop
mov
dec
sub
mov
std
xor
loope
add
pop
out
cmp
dec
mov
fdivrl
and
xchg
mov
cmp
movsb
push
pop
push
pop
popa
hlt
inc
push
inc
jne
dec
or
es
cmp
mov
jle
sub
mov
pop
cmpsb
push
sub
cpuid
sahf
outsb
flds
dec
mov
lods
gs
shlb
or
cmpsl
mov
push
out
enter
rcl
les
xchg
sahf
cmp
test
aad
pop
int3
cmp
sahf
xor
cmp
es
lods
mov
int
test
scas
popa
mov
cmp
fcompl
std
cs
sub
in
push
adc
sbb
frstor
test
mov
jl
push
sbb
pop
dec
jge
dec
pop
fisttpll
mov
xchg
shrb
insl
sahf
outsb
aad
xor
stc
dec
movsb
in
aad
jne
xor
lcall
in
mulb
ficomps
loopne
mov
cld
or
inc
xor
xor
neg
imul
outsb
pop
rorb
cmpsl
jno
into
sub
sbb
out
push
in
sub
aas
insl
lock
xchg
push
movsl
std
pop
pop
and
mov
adc
mov
push
push
sub
cmp
aaa
lea
push
dec
sub
insb
mov
aad
cld
pop
hlt
popf
adc
xchg
or
mov
mov
xor
cmp
cld
jmp
mov
mov
sbb
imul
dec
jnp
data16
mov
add
pop
fs
jno
imul
outsb
addr16
cmp
dec
inc
pop
in
sub
stc
and
dec
dec
inc
insl
in
pop
pop
jp
jmp
sbb
lret
addl
fucomi
fdivl
mov
xchg
inc
test
add
mov
cmp
push
mov
lret
inc
lds
int3
xor
mov
mov
push
lahf
push
insl
scas
push
mov
mov
mov
xlat
jne
push
daa
jns
out
adc
jo
fstl
stos
push
ss
popf
mov
and
lea
int3
insl
pop
inc
ret
int3
in
and
mov
orb
sub
or
push
lock
ja
pushf
stos
orl
insb
adc
popf
mov
stos
fcoml
push
pusha
push
jle
push
xchg
xor
mov
push
insl
cmp
cmp
ret
dec
jb
pusha
cmp
push
mov
pop
dec
sub
dec
jmp
dec
aam
xchg
pop
fsubrs
fdivrl
fdivl
aam
gs
jge
aam
pop
das
fadds
mov
pop
jno
cmp
fsubl
pop
nop
fdiv
sar
pop
movsl
jg
loopne
adc
test
sub
push
add
cmp
or
lods
pop
xor
dec
jno
dec
outsb
mov
ret
pop
dec
lds
fdivl
fidivl
popf
imul
dec
lods
test
lret
icebp
add
and
mov
push
fsubl
je
dec
fsubrl
loope
jle
sub
lds
jne
push
sbb
cld
icebp
dec
sarl
pushl
mov
or
adc
aad
bound
mov
sbb
sbb
loope
lods
push
gs
jg
in
into
cmc
mov
nop
sub
and
fcoml
mov
jl
xor
mov
popf
and
dec
pop
sahf
ss
lods
cmc
rol
lahf
iret
aaa
inc
dec
les
push
xor
dec
add
fstpl
mov
cmp
lahf
push
push
jle
jge
mov
test
sub
push
inc
in
mov
jl
adc
lahf
dec
negl
lea
dec
mov
or
dec
mov
ret
sarl
test
or
xlat
into
fstl
outsb
dec
popf
call
lea
sub
das
jbe
fisubrl
movsb
xor
adc
jns
sub
mov
dec
aaa
in
fsubr
xor
push
sbb
icebp
loope
data16
sbb
mov
dec
dec
movsb
gs
jp
pop
xor
add
jl
sbb
lock
jl
dec
jge
dec
inc
cmp
aad
dec
test
push
sbb
mov
enter
iret
jl,pt
mov
sbb
gs
pop
insl
cmp
xchg
scas
mov
mov
inc
cmp
into
int3
xor
push
inc
mov
movsl
jb
xchg
in
int3
rcrb
xor
mov
pop
pop
dec
jl
mov
and
dec
scas
notb
push
in
push
nop
jge
outsb
mov
into
push
scas
out
lods
or
jg
mov
jbe
cmp
mov
fxch
icebp
inc
lds
jns
imul
inc
movsl
mov
add
pop
dec
das
mov
insb
xchg
insl
adc
push
pop
adc
int
cmp
pushf
shrb
xchg
pop
and
pushf
ss
xor
push
dec
pop
adc
cmp
push
into
into
mov
dec
rcll
mov
loope
int
sub
xlat
or
mov
sub
dec
aad
push
xchg
fcoml
cmp
mov
cmpsb
loopne
enter
data16
int3
sub
push
push
mov
stos
in
test
xor
lretw
push
pushf
dec
mov
cmp
jle
jle
dec
lea
insb
push
dec
xchg
and
cmp
test
sub
inc
fnstcw
xchg
pop
dec
jge
xor
mov
dec
jge
push
push
pop
sbb
test
roll
dec
fldt
inc
dec
pushf
lods
mov
pushf
test
in
in
mov
push
hlt
push
in
dec
cmp
add
fwait
add
xor
hlt
in
xor
stos
mov
cmpsb
pop
dec
pop
outsl
movsb
mov
outsb
sub
adcl
insb
scas
popf
punpcklwd
pop
jg
negb
scas
adc
mov
sub
lds
cmc
pushf
xchg
push
cltd
cmpsl
insl
add
ljmp
cmc
lahf
iret
dec
popa
mov
in
out
dec
pop
movsl
mov
fnstsw
ret
popf
jp
mov
lea
fimuls
mov
dec
mov
fbld
sahf
adc
dec
xchg
cmp
insl
adc
xchg
cmp
lds
adc
dec
sub
in
fldenv
xchg
popa
paddsb
fnstsw
cmp
fs
jge
jg
inc
aaa
jg
dec
mov
ret
lods
sbb
lcall
xchg
mov
mov
test
insl
je
and
jnp
push
cmpsl
icebp
sbb
dec
inc
ret
mov
shl
mov
sbb
xchg
push
divb
bound
mov
test
cmpsb
add
mov
cmp
add
and
test
adc
test
jmp
test
sahf
pop
pop
pop
lods
int3
xor
test
rorb
xlat
jl
dec
mov
sbb
int3
imul
jl
cltd
push
dec
and
push
insb
cli
inc
int
jbe
aam
negl
fistpll
lcall
push
push
and
sub
pushf
jns
pushf
and
or
cmp
push
addr16
outsb
lods
xor
popa
fsubl
mov
mov
popf
mov
sbb
adcb
sbb
in
inc
pop
pop
xlat
je
fsubl
out
fistps
or
add
scas
mov
rcrl
mov
inc
insb
pop
mov
hlt
addr16
sbb
sahf
inc
pop
aaa
pop
sbb
icebp
xchg
mov
lds
push
jl
mov
fidivrs
lahf
mov
mov
mov
outsb
sbb
jbe
adc
fbstp
jge
mov
mov
jle
push
fs
cmp
sbb
fmul
xchg
fcompl
push
inc
in
and
fcompl
or
adc
xchg
jne
push
jge
mov
pushfw
pop
cltd
fsubrl
fprem1
jmp
jge
scas
jne
je
mov
int3
xchg
cmp
add
dec
dec
pop
decb
imul
mov
sbb
dec
ficomps
scas
mov
dec
shll
int
add
ja
popa
call
and
xor
hlt
int
mov
jge
ja
inc
cmpl
call
pop
lret
addr16
push
mov
lret
mov
push
or
inc
sti
rorl
add
pop
push
sub
push
pushf
stos
inc
add
xor
lret
dec
sarl
mov
mov
mov
mov
rcrb
es
ret
into
aam
xor
pop
push
in
dec
push
xchg
xor
sub
mov
push
lods
loope
pop
cmpsb
andb
push
ret
sahf
nop
insl
and
push
fsubrp
lds
inc
mov
bound
cli
push
scas
popf
mov
ja
or
mov
mov
pop
orb
mov
sbb
sbb
jo
mov
mov
xchg
cwtl
daa
sub
mov
cmpsl
adc
and
mov
js
adc
femms
sbb
mov
negl
rcl
and
lods
lahf
les
push
test
std
mov
int3
cmp
push
pop
and
jp
jl
dec
mov
mov
or
das
xor
repz
adc
or
in
or
out
insl
mov
pop
insl
mov
imul
stos
and
out
or
pusha
push
shlb
sub
in
cmp
fs
popf
and
fsubl
adc
add
dec
push
in
or
sahf
and
push
mov
xor
push
sub
dec
pop
dec
stc
mov
mov
ss
sbb
je
shrb
insl
test
cmp
pop
cmp
adc
in
xchg
js
int
jl
xor
and
out
add
sbb
pop
notl
sbb
cs
loopne
fs
and
mov
lods
ds
je
into
mov
pop
sub
xchg
pop
xchg
subl
cmp
mov
mov
int3
sbb
iret
cmp
lds
push
loope
rcrb
orl
daa
pushf
sub
pop
inc
outsb
lods
cltd
mov
outsl
shrl
pop
insb
pushf
cld
push
cmp
sbb
and
in
rcr
int
cltd
fldln2
dec
and
fbld
cmp
cwtl
call
cmp
test
adc
sub
dec
cmp
xor
xchg
outsl
mov
pop
mov
add
insb
addb
pop
jns
int3
cld
push
sbb
sbb
push
in
sub
and
fstpl
sar
pop
sub
lahf
nop
out
daa
adc
mov
mov
xor
inc
and
shrb
pop
mov
insb
int3
insb
push
mov
pop
mov
sbb
psubusb
mov
daa
int
ret
scas
sub
mov
adc
add
cs
pop
lods
mov
push
outsb
dec
inc
loope
pop
xor
pop
jl
pop
xor
or
int
ja
lods
popf
inc
int3
inc
int3
mov
or
int
lods
rcrb
jo
xor
lods
int
cmp
fsub
into
movsb
cmp
in
dec
fists
mov
test
jg
sti
sub
add
int3
push
ret
ror
sub
adc
scas
push
and
in
pop
lods
cmc
xchg
pop
lods
inc
out
pushf
mov
pop
adc
popf
xchg
lea
movsl
and
shrb
jp
xchg
sub
inc
movsb
fsubl
hlt
adc
xchg
rorl
cld
and
mov
sbbb
ds
or
sub
mov
loope
dec
in
imul
cmp
dec
cmp
stos
int
lods
push
jae
sub
push
sbb
mov
inc
adc
adc
mov
iret
cmp
pushf
jl
or
dec
inc
sub
jbe
dec
mov
outsl
pop
je
push
pop
pushf
int
int3
pusha
xchg
push
insb
push
sbb
dec
lods
mov
dec
cmp
sahf
jb
sub
jp
insb
xor
adc
cwtl
jne
pop
movsb
push
in
adc
add
loopne
cld
shlb
cs
fistpll
into
and
lods
pushf
in
outsl
insb
mov
pop
sbb
testb
je
pushf
fnstsw
dec
test
dec
cmp
jo
stc
sbb
sbb
int3
inc
test
jl
arpl
lods
inc
lret
iret
enter
ss
cwtl
test
aam
mov
dec
aas
nop
mov
adc
xor
mov
or
jl
in
orl
adc
dec
jp
lds
outsl
adc
add
sub
les
inc
xor
pushf
fiadds
cld
icebp
cli
dec
shrd
jge
push
mov
mov
xor
roll
ret
xchg
add
sbb
popa
mov
adc
jmp
push
mov
int
mov
lret
lret
ret
jo
test
mov
xor
adc
add
push
pop
js
out
inc
pop
pop
lret
add
fs
cmp
shrl
jge
shlw
xor
push
ja
jbe
and
ja
or
and
mov
add
iret
arpl
cs
dec
jo
popa
push
inc
icebp
pop
fdivr
pop
sub
push
sti
lock
mov
js
mov
cmp
and
mov
out
push
or
orl
leave
sti
into
push
jns
mov
outsl
subl
mov
push
or
in
jmp
sbb
jg
jecxz
and
inc
inc
mov
ss
add
push
xor
xchg
mov
xchg
addr16
dec
lahf
repnz
loope
pop
jne
ljmp
inc
cmp
pop
lfs
jl
xchg
ret
inc
sbb
mov
or
ficoms
ss
dec
add
dec
cmpsl
push
outsl
sbb
pop
loope
jmp
lahf
int3
push
cmp
push
shrl
jecxz
cmpsl
pushf
insb
pushf
add
mov
int3
sbb
shlb
mov
mov
scas
imul
xor
rorl
lret
sahf
int3
movsb
add
adc
lock
sub
roll
inc
mov
pop
push
add
cli
sarb
push
xchg
mov
test
or
ljmp
das
jecxz
pusha
int
cwtl
mov
fadds
mov
push
xchg
fwait
xchg
arpl
outsl
shrl
negl
cmp
ret
nop
repz
push
imul
ljmp
xor
daa
stos
jl
pop
test
fwait
addr16
cs
ror
addl
mov
data16
pop
mov
loop
add
shll
arpl
sti
jne
push
and
out
jp
lea
jecxz
add
outsl
out
push
icebp
jge
mov
mov
jl
jl
outsl
dec
or
inc
and
lods
lcall
or
fists
add
cmp
cld
scas
pop
pushf
stos
or
loopne
pmullw
adc
into
inc
mov
inc
adc
mov
xor
xor
inc
gs
pop
pop
outsl
mov
add
cld
outsb
push
sub
push
test
mov
mov
pusha
mov
xor
push
in
loop
adc
push
sbb
movsl
or
rcrb
push
movsb
int
mov
sbb
insb
xchg
xchg
cmp
xor
addb
insl
pop
sbb
hlt
addr16
cmp
int
mov
lea
mov
clc
jae
sbb
xor
js
push
arpl
lds
lret
into
jne
jno
js
or
subl
scas
out
je
ror
aaa
sti
cmpsb
loopne
and
xchg
xchg
dec
mov
sub
and
and
pop
fcomps
decb
fistpll
xor
add
clc
sbb
arpl
fadd
aad
xor
imul
mov
out
ret
int
testl
jne
int
fdivrs
sub
and
or
leave
lret
loopne
ds
adc
or
add
sbb
adc
add
test
sbb
push
sbb
mov
adc
jns
push
aas
and
and
iret
sti
jae
out
cld
fcoms
pop
daa
sbb
mov
lret
inc
xchg
xchg
cwtl
or
mov
sbb
adc
inc
and
adc
jl
lods
cmp
lods
ret
push
lock
xor
jl
gs
dec
fwait
aaa
sbb
cli
imul
adc
or
cli
insl
pop
push
inc
sbb
fmulp
cmp
insb
sub
stos
hlt
pop
cmp
outsl
sbb
dec
loop
into
mov
pop
fwait
lret
cwtl
aad
es
cmp
adc
xor
in
add
negl
cwtl
dec
pusha
sbb
dec
lock
xor
sbb
loopne
sbb
adc
test
in
dec
cli
push
cmp
out
pop
or
or
fidivrl
jg
sub
xor
fcompl
pop
test
mov
push
mov
fimuls
mov
jns
push
shll
in
leave
adc
xchg
sub
and
inc
enter
pop
mov
and
roll
cmp
in
nop
cmp
adc
or
jne
arpl
or
mov
movsb
aaa
adc
shll
push
dec
xor
xor
call
cld
add
dec
add
mov
xchg
int3
addl
lahf
sbb
adc
fsubrl
mov
adc
je
lods
sbb
sbb
adc
xchg
dec
sbb
iret
cs
addr16
adc
gs
mov
shlw
and
int
lcall
je
or
inc
pushl
sbb
out
dec
or
iret
mov
cli
xor
sete
aaa
sub
mov
dec
xor
fwait
or
in
repz
jle
loop
cmpsl
fisubrs
sbb
push
aam
mov
xor
adc
push
and
jp
into
xor
pop
int3
mov
cmp
inc
push
mov
mov
loop
shrb
into
adc
inc
hlt
lahf
cmp
pop
sbb
xor
pop
inc
jge
xchg
int
inc
xchg
sarl
ds
jno
cmp
sub
sub
into
sub
mov
dec
sbb
adc
pop
icebp
or
sbb
jg
cwtl
cmpb
xor
insb
or
ror
jl
je
xchg
push
in
scas
pushf
lret
dec
pop
cmpsl
pop
xchg
jl
nop
push
xchg
mov
js
and
sti
mov
xchg
sbb
xor
pop
pop
lods
aas
xchg
bound
sbb
loop
pushf
insb
popf
clc
sbb
into
sar
xlat
dec
scas
pop
lret
fcompl
sub
aam
test
xor
popf
inc
in
inc
adc
cli
notl
cld
mov
ficoms
cmp
inc
out
cli
outsl
fisubrl
push
inc
xchg
in
cmp
inc
in
adc
dec
sahf
adc
mov
sub
cld
sub
push
fisubrs
mov
test
push
or
outsl
pop
inc
dec
adc
xlat
fdivrp
inc
fisubs
lods
mov
in
adc
xchg
xchg
mov
pop
push
pop
sbb
push
pop
sub
enter
push
rclb
xchg
sub
sub
xor
and
das
mov
dec
fwait
adc
push
lret
xchg
lret
int3
popf
xor
hlt
fimuls
mov
mov
cwtl
dec
iret
shrb
cmp
rcrl
les
inc
mov
jne
inc
jl
mov
mov
adc
cmp
fcoms
lret
xchg
add
mov
adc
jmp
jecxz
push
dec
and
xchg
adc
cmp
ljmp
push
sub
das
dec
flds
fsubl
dec
dec
lods
jbe
lods
dec
pop
shll
test
and
int3
cmp
adc
pop
xchg
rclb
cmp
xor
push
push
push
and
das
sbb
sub
push
sbb
inc
aam
inc
mov
push
repz
mov
jge
xor
jl
sbb
sbb
mov
out
sub
push
cwtl
xchg
in
nop
and
shl
inc
int3
mov
and
inc
aaa
sbb
xor
mov
rcrb
int3
add
or
inc
popf
adc
push
sbb
jo
stos
mov
or
or
ret
sub
int
das
mov
mov
jl
jmp
adc
or
mov
dec
sbb
pop
push
mov
loop
subb
cmpsb
mov
lahf
and
mov
add
fbstp
int3
cmp
pop
mov
aas
andb
or
push
int
cmpb
mov
popa
pop
dec
add
push
sub
iret
adc
movsl
cmpsl
jns
xchg
mov
add
dec
sub
jne
xchg
mov
das
mov
aad
mov
out
rcl
sbb
cmp
sub
dec
out
pop
mov
inc
out
je
mov
xchg
jg
fistpll
aaa
divb
test
sbb
lret
lret
pop
inc
sarb
cmp
sarb
pushf
sbb
xor
mov
sbb
sub
fwait
mov
popf
test
sti
push
std
cli
and
cli
sbb
push
fwait
cmp
inc
push
or
sbb
cmp
push
sub
xor
int
cmp
ret
pop
cmp
xchg
add
adc
pushf
call
jne
clc
mov
or
pusha
popf
xor
xor
xor
enter
pushf
inc
jno
lds
popf
cmp
daa
insb
mov
std
sub
sub
lahf
lds
adc
push
enter
cld
hlt
sbb
ret
int
push
loope
dec
sahf
xchg
ret
fadds
inc
xor
pop
cmpsb
jp
test
in
add
sbb
xchg
pop
jge
insl
push
mov
dec
xor
adc
adc
and
jnp
pop
sbb
mov
fcomps
sbb
sub
sub
out
sub
sub
stos
cmp
jge
cmp
fnstcw
inc
push
dec
sub
ret
cli
pop
outsl
call
cmp
add
push
mov
in
sbb
movsl
pop
inc
lea
pop
push
push
sub
xor
sbb
mov
gs
dec
enter
int
call
sahf
and
lods
sub
outsb
daa
sbb
dec
jne
insl
or
divb
out
add
adc
stos
push
push
nop
rclb
add
push
xchg
sub
push
xchg
sub
adc
push
push
iret
pushf
fcoms
fs
or
mov
mov
fsub
in
add
lock
sbb
sub
popa
imul
mov
jge
cmpsb
add
in
in
icebp
cmc
sbb
push
and
sub
xor
push
add
bound
outsb
jb
add
stos
scas
mov
mov
fcmovu
loop
ljmp
pop
and
sub
das
xor
push
pop
pop
arpl
imul
xchg
xchg
fwait
lahf
add
mov
xlat
add
out
out
repz
scas
adc
ja
outsl
das
push
mov
imul
outsl
lods
fs
imul
push
adc
xchg
dec
rcrl
xor
pop
adc
xor
and
addr16
fcoml
es
jae
push
jns
faddp
jae
outsl
jns
push
addr16
add
scas
sub
dec
jnp
dec
daa
lock
ljmp
loopne
cli
out
add
addr16
stos
push
add
inc
add
dec
lds
pop
aaa
or
dec
out
idivb
jl
or
out
shrl
push
add
xor
in
leave
std
mov
fbstp
add
enter
rcrl
push
packsswb
cmp
aas
push
add
int
and
or
test
out
es
das
test
xor
mov
rolb
xchg
dec
cli
xchg
lds
movsb
push
lea
inc
mov
push
sub
iret
dec
popl
stc
add
adc
decb
loop
push
inc
add
xchg
pop
cltd
push
fldl
mov
inc
mov
mov
jno
sub
daa
add
cmpl
sub
icebp
inc
loop
test
cvtdq2ps
xchg
adc
shlb
push
loop
mov
add
sbb
sub
push
aas
mov
inc
nop
out
cmp
xor
mov
dec
push
inc
arpl
xor
movsb
jcxz
test
adc
icebp
mov
cmp
pop
mov
sub
movsl
mov
xchg
or
sbb
jl
push
xchg
push
scas
sub
inc
adc
dec
xchg
cmp
in
mov
mov
adcl
dec
push
pop
roll
push
daa
repz
jb
jno
outsl
adc
mov
movsb
in
add
pop
in
jno
loope
lcall
jnp
in
inc
fistpl
push
inc
out
add
loopne
in
outsl
addl
add
and
add
sbb
arpl
mov
ret
dec
xorl
jecxz
test
push
cmc
stos
add
sbb
add
popf
mov
in
lea
push
daa
lret
inc
pop
stc
cmp
cwtl
push
or
hlt
sti
in
imul
cmp
inc
sbbb
add
clc
insb
add
push
sub
jb
in
mov
ds
aad
or
daa
jg
inc
jmp
dec
aad
inc
in
mov
lods
dec
dec
addb
mov
mov
std
mov
add
subl
outsl
jp
pushf
add
dec
or
sbb
jne
in
or
movb
mov
icebp
fidivrs
stos
loope
add
ret
jne
cs
into
stc
lods
fiaddl
xchg
push
xchg
cld
add
dec
pop
jne
sbb
fwait
adc
fisttps
ljmp
add
and
xor
les
inc
jle
not
es
cli
mov
enter
sub
das
movsl
or
sub
arpl
dec
mov
jg
cld
adc
fcoml
adc
mov
or
stc
dec
pop
fists
xor
push
out
jbe
add
cmp
cld
imul
aas
mov
adc
mov
out
and
mov
and
dec
push
dec
cmp
cmc
add
and
adcl
mov
andl
mov
orb
sahf
sbb
int3
hlt
jge
add
jnp
pushf
stos
xorl
and
icebp
scas
rclb
idivl
jg
outsb
clc
out
sbb
imul
fdivs
sbb
repz
call
out
add
add
iret
add
jge
inc
fldt
jnp
add
inc
ror
ret
add
push
sbb
push
jbe
push
imulb
and
pop
out
shr
and
and
stos
push
test
dec
jo
jg
sub
add
lods
mov
pop
sbb
fcmovu
mov
movsb
mov
push
add
mov
out
push
cmpb
pop
cld
das
add
mov
adc
lea
sub
and
sub
add
jo
jbe
sahf
inc
out
add
repz
and
dec
pop
leave
add
dec
rorl
sbb
clc
xchg
cmp
insb
out
out
sbb
movb
stos
sub
int
mov
icebp
xchg
push
xchg
scas
pushf
and
cmp
aam
push
aam
cmpsl
mov
sbb
test
add
pop
and
shlb
sub
in
sahf
gs
ljmp
cmc
iret
into
ds
lods
push
das
add
lods
jae
fidivrl
lret
ss
mov
test
dec
xchg
add
inc
imul
sti
mov
cmp
lret
repz
stos
push
test
and
push
mov
mov
add
mov
adc
sub
sbb
scas
fisttps
jnp
cmp
pop
inc
add
in
lret
ljmp
add
es
add
cmp
in
or
add
lods
es
lock
xchg
add
cmp
jmp
add
call
out
pop
add
xchg
imul
fdivl
loopne
jbe
ljmp
xor
nop
aam
add
jns
or
add
imul
inc
mov
out
repnz
push
add
dec
jno
push
jp
mov
jne
sbb
mov
data16
in
add
fnstenv
pusha
add
rcrb
mov
add
lods
xchg
dec
fsubrl
scas
std
push
cltd
mov
aam
ja
inc
push
flds
sbb
pop
dec
sbb
pop
xor
mov
or
std
out
xor
or
out
add
dec
loope
sahf
movsb
jp
add
jge
mov
clc
js
and
push
xchg
mov
and
rdtsc
lock
jle
into
pop
cld
add
add
fmull
cmp
int3
and
dec
jecxz
addr16
pop
test
rolb
push
jl
mov
add
shrl
int3
dec
pop
pop
add
repz
ljmp
jp
xor
pop
fs
shrl
add
sbb
and
sahf
push
xor
adc
aas
ljmp
and
mov
aam
fmul
pop
sub
inc
xchg
adc
loope
mov
jne
test
mov
xor
or
int3
jb
push
ds
repnz
inc
std
sbb
daa
ja
add
jge
ret
xchg
not
add
das
out
mov
cmc
sbb
mov
and
and
test
add
cmp
xchg
ss
cmp
and
adc
or
mov
icebp
dec
jp
inc
in
cmp
pop
xor
das
in
xor
pop
leave
xor
test
mov
je
or
xchg
mov
and
adc
inc
mov
int3
sub
or
or
popf
xor
push
mov
lods
dec
popa
xor
sbb
popa
and
cmp
or
dec
push
insb
hlt
sub
cmp
jg
cmp
aad
fsubl
pop
stos
imulb
jl
sub
test
sbb
inc
push
int
add
push
pop
and
int3
jmp
adc
pop
das
xor
nop
movsb
sub
pop
lahf
sub
testl
sub
add
gs
cwtl
push
shr
out
sub
cs
dec
mov
lcall
push
sub
clc
out
add
and
stos
dec
xor
sahf
ds
cmpsb
cwtl
in
and
xchg
pop
adc
mov
mov
test
mov
and
mov
sbb
testl
cmp
fists
and
ljmp
xor
inc
leave
dec
dec
testl
push
fnstsw
adc
fists
and
daa
mov
call
sub
sbb
in
shr
out
sub
dec
inc
or
fcoml
js
push
nop
pop
xor
fcoms
mov
int
insb
adc
and
test
sub
inc
cmp
xor
pop
mov
mov
repnz
sbb
pop
or
fistl
pushf
jno
enter
add
sbb
pusha
lods
jge
dec
cmp
nop
fs
sbb
xor
push
xor
lahf
insb
movsb
jne
jno
inc
nop
jo
jo
xchg
sbb
sbb
xor
dec
je
push
sub
and
js
sbb
dec
jl
jl
nop
scas
sub
sbb
xorb
jno
in
test
lahf
test
sub
mov
push
jge
rclb
unpckhps
sub
add
cmp
rcrb
xor
jmp
mov
mov
pop
cwtl
lods
adc
and
sbb
sahf
in
jp
leave
dec
lock
dec
push
xchg
sbb
pop
mov
and
daa
or
fidivrs
sti
inc
in
fistpl
pop
mov
dec
mov
setle
cld
cli
push
mov
and
in
cmp
nop
sub
push
and
enter
cmp
adc
or
mov
shrl
cwtl
cmp
aad
mov
aam
insb
mov
cmp
dec
cmp
in
aam
or
sbb
rolb
push
or
lret
and
xchg
int3
mov
dec
cwtl
or
ljmp
jl
adc
dec
int3
xlat
js
adc
sub
notl
push
adc
inc
sub
cwtl
jmp
sub
in
popf
dec
lods
and
or
inc
pushf
mov
xor
push
adc
out
out
dec
test
inc
inc
sarb
rcrb
mov
dec
push
pop
xlat
sub
movsb
cwtl
nop
mov
mov
dec
inc
push
cmp
aam
jl
inc
xchg
inc
push
jo
mov
mov
sbb
pop
push
cld
loope
add
xor
pop
mov
xchg
cmp
nop
idivb
pushf
shrb
dec
push
call
divl
mov
xchg
mov
xor
stos
enter
enter
push
cs
int3
jp
popf
push
jb
ret
and
pop
xor
je
and
xor
leave
xor
fimuls
or
stc
add
lcall
sub
fnstcw
xor
inc
lcall
es
cwtl
cmp
test
shrb
pop
cmp
repz
and
imul
fisttpll
movsb
sub
call
gs
roll
mov
mov
add
lret
jecxz
fwait
cmpl
adc
movsb
cltd
cmp
push
lea
pop
add
adc
lods
add
push
xchg
dec
lock
adcb
push
push
test
ror
out
sub
mov
jno
leave
pop
cmpsb
mov
fdivr
add
fistps
cmpsl
cmp
lret
repnz
call
fstpt
into
in
sub
rorl
mov
lds
add
or
sbb
cld
mov
les
adc
addr16
call
movsl
out
sbb
sbb
push
addl
test
pop
and
ficompl
sti
dec
mov
out
sub
xchg
mov
jne
out
mov
loop
xchg
or
sahf
sbb
ret
fisubs
push
mov
in
pop
mov
add
das
data16
jb
jle
add
je
jbe
mov
scas
dec
cmpsl
enter
jns
fs
mov
fldl
push
dec
sub
push
arpl
add
xor
roll
pop
cmp
icebp
pop
mov
insb
aas
add
mov
add
push
sbb
ret
lret
clc
mov
movsb
add
jne
sarl
jnp
and
fildl
add
pop
hlt
or
ja
sub
pop
sub
into
js
stos
fiadds
std
lods
roll
pop
enter
jns
push
push
loop
lahf
orb
repnz
mov
clc
mov
jl
ret
arpl
sbb
adc
xchg
jge
enter
mov
mov
mov
pop
loopne
push
add
xchg
ljmp
aaa
bound
cmp
std
fisubrl
inc
sub
cld
ljmp
ss
pushf
push
pop
pop
push
leave
scas
cmp
adc
ret
lods
lea
pop
fiaddl
sbb
pushf
lcall
add
cld
aad
or
pop
stc
dec
cwtl
dec
scas
sub
pop
lods
adc
test
in
aam
push
stos
pop
adc
leave
xor
sub
fsubr
sub
add
pop
popa
xchg
int3
pusha
or
push
cmp
pusha
mov
out
cmp
pop
fisubs
push
cwtl
sarl
cwtl
lds
pushf
mov
fs
dec
int
push
outsl
xor
and
cmp
rcrl
sub
mov
aam
push
daa
pusha
fdivrl
movsb
test
add
mov
push
mov
mov
dec
das
mov
fmul
fs
push
push
ds
pop
jno
insb
push
jne
xchg
and
push
fcos
jg
jge
xchg
rorb
jmp
mov
jne
mov
mov
aam
cltd
arpl
mov
or
sbb
ror
sub
aad
mov
mov
ds
rorb
js
push
inc
jg
or
insb
mov
mov
lcall
outsl
xor
push
es
jle
lds
sar
imul
and
mov
sbb
and
ja
dec
sbb
lods
clc
hlt
sbb
shrl
hlt
xchg
enter
nop
sti
adcl
das
sub
pushf
sub
add
dec
mov
sbb
rcrb
mov
inc
mov
xor
mov
mov
dec
sbb
lods
dec
popf
xchg
mov
out
mov
das
xchg
aam
sbb
cs
xchg
jo
sub
inc
push
je
faddl
scas
push
sub
pop
ja
insl
int
mov
out
out
mov
aam
push
nop
add
and
pushf
xor
jecxz
mov
loop
dec
mov
outsl
mov
mov
icebp
das
xor
cmc
aas
mov
push
loopne
test
or
stos
lret
cmp
cmp
in
push
das
jne
and
pop
addr16
push
and
inc
lea
xor
int3
mov
fstpt
or
adc
fmulp
aas
xchg
fsubs
dec
int3
das
pop
inc
lahf
pusha
pop
aam
cmp
jns
xor
into
test
mov
or
pop
fs
cwtl
xor
pop
insl
fistl
fs
push
add
ret
sbb
xor
sbb
and
outsl
xor
pop
adc
add
pop
and
cmp
cmp
dec
call
js
scas
cwtl
sub
sbb
sbb
leave
dec
xchg
and
int3
rorb
fnstcw
mov
jle
cmp
push
test
movsl
int3
sti
push
loop
test
adc
lahf
hlt
xchg
ljmp
add
pop
lcall
cs
stos
mov
pop
mov
test
and
pop
ljmp
mov
xor
lods
insl
mov
aad
push
sub
scas
ljmp
push
nop
lds
pop
scas
cli
mov
dec
pop
test
sbb
es
test
fisubl
lods
mov
lods
push
loope
mov
aam
pop
inc
sahf
cmpsb
sub
cmpsl
push
push
pop
jp
jo
xchg
cmpsl
test
push
sub
scas
sub
popf
movsl
divb
and
push
sbb
mov
sbb
sub
incb
sub
rcr
xchg
or
push
push
xchg
sub
out
pop
cmp
imull
add
dec
lcall
lret
sub
mov
xor
xor
sub
push
inc
or
es
and
rorb
mov
mov
xchg
ret
daa
push
fmull
std
addr16
sub
test
imul
out
pop
inc
pop
sbb
xor
ja
mov
cmp
lods
fdivs
fldl
push
fs
test
iret
push
aam
fs
movsb
mov
movsb
sub
repz
sub
xchg
stos
sbb
and
inc
xor
or
addr16
imul
popf
cltd
sbb
adc
push
fcompl
pop
ja
test
lret
test
shrl
xchg
mov
mov
inc
xor
nop
dec
adc
xlat
inc
lret
hlt
adc
pop
sahf
leave
das
adc
pop
add
int
int
lea
test
mov
push
dec
stc
xlat
xor
push
lods
pop
and
cmp
push
sbb
cwtl
and
and
out
sarl
dec
pop
sub
push
adc
int
icebp
adc
xchg
outsl
add
jb
sub
add
rorl
sbb
stos
push
call
cmp
xlat
sub
lods
mov
in
mov
cmp
jmp
shll
dec
sub
stos
lahf
push
stc
lret
lods
arpl
dec
ret
cmp
dec
stos
jae
roll
sub
sub
push
push
test
int
shll
in
jo
jl
mov
mov
les
jb
lods
jns
xor
stc
lods
or
sbb
clc
jnp
pop
jle
sti
in
mov
inc
gs
pop
fyl2x
fsubrl
pop
sub
aas
scas
fdivrl
adc
mov
adc
push
pop
inc
gs
push
mov
jno
fildll
fstpl
sub
int3
pop
push
gs
lock
xor
loopne
sub
loopne
fsubs
sahf
xor
call
dec
int3
sub
loop
fsubl
jno
aad
call
mov
dec
push
jp
inc
ljmp
icebp
outsl
outsl
dec
xor
xchg
or
sbb
xor
mov
jns
or
xchg
mov
insl
jno
mov
push
sbb
cwtl
sbb
and
xor
ljmp
push
add
sub
fmul
pop
sub
aas
mov
lcall
mov
jge
testl
xor
out
adc
lds
mov
pushf
pop
jne
imul
or
cmp
mov
jle
mov
mov
or
inc
adc
es
mov
xor
pushf
fsubrs
in
call
and
adc
adc
sbb
sub
dec
call
push
mov
adc
sbbb
call
or
mov
pop
sbb
pop
push
mov
les
lods
dec
dec
test
push
imul
das
mov
daa
arpl
fs
jg
rolb
push
imul
out
mov
xchg
adc
or
out
mov
jno
call
sbb
cli
es
bound
mov
xchg
call
cmpsl
and
xor
mov
ret
sub
test
repz
dec
xor
dec
mov
fmul
int
mov
std
bswap
aad
xor
xor
xchg
imul
cli
xor
fdiv
xor
sub
mov
xor
mov
pushf
int3
dec
lcall
xor
daa
pop
pop
cld
mov
loopne
adc
dec
inc
insl
dec
inc
jg
push
int3
orl
sbb
mov
dec
adc
or
sub
xor
pop
jo
pop
inc
mov
mov
xor
adcb
push
shlb
dec
nop
imul
or
fcmovb
aas
orb
gs
int3
xor
int3
nop
inc
mov
int3
popa
lods
dec
stos
sub
push
lods
dec
and
repz
dec
nop
nop
shl
icebp
dec
pop
imul
sub
shl
cmpsl
xchg
and
jp
jecxz
outsb
dec
in
and
lret
fsubl
jno
push
sub
sbb
xor
sub
loope
mov
push
movsl
sarb
bound
lcall
scas
pop
movsb
ficoms
add
imulb
adc
pushf
ds
mov
das
hlt
cs
lods
add
subb
std
mov
jg
adc
leave
dec
iret
push
add
pop
cld
insb
rorb
pop
hlt
push
add
xchg
test
rclb
sahf
mov
icebp
add
add
test
ljmp
jnp
cli
add
cmp
out
add
pop
mov
mov
out
out
lret
dec
sbb
sub
mov
cmpsl
lret
fdivl
mov
mov
testl
xchg
sub
sbb
addl
into
shl
cmpsb
das
cmpsl
mov
add
or
add
and
xchg
insb
fldt
out
add
mov
in
mov
pop
outsl
inc
xlat
in
enter
into
or
js
inc
sar
inc
cmp
sbb
test
and
xchg
ret
jne
xchg
repnz
cmp
jns
aad
aaa
cld
mov
repz
ljmp
dec
pop
mov
cmp
jae
imul
cli
push
cmp
jmp
fistpll
das
mov
fs
cmpsb
add
lahf
push
adcl
jg
mov
mov
push
add
decl
loope
sbb
repnz
dec
daa
mulb
dec
push
fmul
xor
push
adc
cld
out
mov
push
sarl
movsl
xchg
adc
xchg
ja
das
lahf
mov
je
or
mov
push
call
inc
dec
and
jnp
fdivrs
xor
mov
add
cmp
roll
pop
orb
jns
dec
incb
fwait
clc
mov
cmp
je
mov
xchg
push
xchg
scas
add
int3
fisubrs
add
mov
aas
add
cmp
out
lods
jb
clc
xchg
mov
or
std
clc
sub
push
mov
pop
loopne
cmp
xor
mov
cmpsl
push
fldenv
out
push
dec
cmp
fcmovnb
add
cmp
jno
outsb
sub
push
xlat
sub
dec
xor
int3
stos
inc
loopne
jo
std
adc
xchg
mov
ror
lahf
sub
in
inc
pop
inc
mov
daa
inc
pushf
fisubrl
jp
mov
in
ud1
adc
gs
lods
mov
int
dec
out
enter
stos
sbb
push
xor
lcall
inc
sbb
hlt
dec
test
enter
add
mov
add
cwtl
stc
cmp
movsl
jbe
add
shrb
loop
xchg
mov
mov
adc
add
add
sti
mov
sbb
add
cli
pusha
pop
sbb
inc
lret
ret
add
mov
jns
and
ljmp
add
push
pop
xor
in
loop
pop
out
jl
lock
or
imul
sahf
mov
inc
mov
loope
test
sbb
daa
int3
cmp
outsb
cwtl
or
jns
sbb
jmp
mov
mov
jecxz
cli
or
imul
cmp
popa
cs
add
fsubrl
ss
lds
push
sbb
add
dec
jne
aad
xor
adc
sbb
dec
jecxz,pt
push
xchg
cmpsb
adc
ror
hlt
cmpsb
out
int
adc
inc
jmp
dec
xor
jns
dec
dec
add
add
inc
mov
inc
lret
fstpt
test
cld
mov
out
dec
mov
sub
xchg
mov
cs
add
jl
cltd
leave
iret
push
mov
push
mov
mov
out
cmp
fistl
mov
xor
aad
mov
das
xor
sbb
in
inc
or
in
pushf
cmp
mov
mov
sub
add
stos
push
jbe
aaa
sar
push
lret
dec
lods
sbb
fisubrs
sub
lods
fs
insb
push
jl
repnz
jmp
sub
or
jl
mov
jo
cli
inc
imul
scas
sub
inc
sub
xchg
and
pop
push
cmp
sbb
add
out
or
mov
dec
or
add
cmpsb
inc
pushf
xor
fsubrp
outsb
cmp
dec
mov
and
cmp
test
pop
xlat
sbb
dec
and
cmp
jns
rcr
jp
jnp
jne
xchg
flds
ds
sbb
popf
jl
stc
jp
outsl
lds
sbb
repnz
aam
je
test
icebp
inc
leave
add
mov
repnz
sub
sbb
push
cmp
mov
jl
mov
ret
add
sub
gs
int
cmp
and
cmp
adc
adc
mov
pop
push
orl
and
aam
xchg
add
aad
into
adc
ja
mov
push
nop
int3
addr16
les
inc
push
lock
mov
cmp
push
hlt
jmp
cltd
loopne
adc
repnz
data16
test
jl
jae
test
sub
je
outsb
repnz
or
sbb
ret
or
xor
aam
mov
pop
int
imul
stc
pop
stc
push
iret
mul
dec
icebp
int3
test
aam
lock
mov
out
enter
and
aam
mov
std
jno
ret
fwait
push
lds
or
cmp
in
dec
push
sbb
es
sbb
xor
push
in
xor
add
adc
hlt
das
jo
xchg
push
mulb
adc
cmp
push
jnp
insb
mov
mov
jnp
push
push
xor
test
loopne
dec
or
pop
cwtl
clc
imul
sub
aam
jmp
add
push
pop
adc
lret
xlat
sti
add
in
inc
pop
jp
movsb
negl
cmp
addb
inc
aam
mov
sbb
cmpsl
add
pop
dec
je
ljmp
add
push
inc
and
sub
mov
in
cmp
push
jecxz
jbe
jne
cmpsb
and
jg
repnz
xchg
pop
fadds
and
scas
or
or
dec
imul
lock
add
push
cld
clc
mov
dec
xor
mov
js
pop
add
mov
or
or
cmp
xor
addl
push
sbb
in
jbe
aas
gs
lock
mov
stc
sub
add
push
push
aas
add
cld
outsl
out
jnp
imul
ja
xchg
cmp
add
iret
subl
cmp
jns
pop
loope
sbb
ret
jp
add
ss
sub
mov
and
lahf
push
das
or
xchg
outsb
ljmp
jmp
inc
data16
shr
mov
push
out
dec
in
xor
mov
je
push
xor
add
mov
push
sbb
data16
inc
movl
xchg
mov
test
mov
icebp
inc
add
insl
cmp
icebp
leave
stc
add
cmp
mov
data16
push
test
and
add
popf
push
mov
out
or
add
xchg
or
jecxz
add
sbb
pop
sub
sub
pop
or
fiaddl
push
adc
push
dec
mov
push
and
dec
cld
iret
call
or
testl
shl
clc
out
ljmp
add
add
rcrl
sbb
jo
inc
out
sub
fs
mov
les
push
cli
mov
emms
test
xor
jbe
iret
xchg
pusha
or
add
lds
mov
push
cmp
std
das
add
cmp
add
dec
outsl
adc
dec
cld
sub
add
and
movsl
lret
test
inc
add
cmpsl
iretw
inc
mov
inc
xor
add
lret
in
jg
icebp
or
adc
add
dec
xor
movsb
enter
push
adc
xchg
data16
pop
hlt
pop
icebp
pop
add
mov
daa
lret
lea
mov
jg
inc
xchg
add
push
and
pop
sub
sbb
add
inc
mov
add
popf
xchg
sbb
jg
fs
clc
out
insl
xchg
xchg
sub
jp
dec
or
jne
loop
push
iret
jl
mov
fsubs
test
in
sti
and
mov
mov
inc
sub
mov
fisubrl
movups
outsb
push
sarb
sbb
gs
xchg
shlb
outsb
xor
xor
cmp
or
cwtl
iret
fwait
lahf
sub
hlt
lcall
in
dec
subl
xor
sub
dec
and
addb
xor
or
sbb
sub
xchg
pop
jle
sbb
scas
or
inc
push
iret
mov
adc
in
mov
jo
std
lock
sbb
add
loope
stos
mov
xchg
icebp
sub
fs
orb
imul
push
pop
xchg
js
out
out
jb
lcall
xchg
lea
xchg
mov
rcll
sub
jmp
add
push
popa
inc
pop
sbb
pusha
pop
in
jmp
and
adc
mov
sbb
jne
aad
xchg
push
lret
jbe
add
dec
mov
xchg
add
ds
es
dec
cmpsl
mov
jle
jmp
test
add
dec
psubw
mov
push
fiadds
pop
xchg
movsl
arpl
fidivrs
mov
icebp
dec
or
test
jmp
xor
mov
movsl
bound
sti
test
dec
add
sub
cld
jmp
call
movl
push
xorl
out
xchg
mov
leave
loop
add
adc
lahf
dec
adc
push
mov
sub
xchg
in
mov
pop
sbb
cmp
xchg
outsl
add
cmp
push
pop
pushf
dec
dec
mov
sti
or
add
xlat
daa
push
lods
push
fwait
jmp
out
loope
inc
outsl
out
lret
pop
pushf
ja
mov
loop
pop
sub
mov
lds
sahf
jns
add
not
or
cmp
and
mov
fdiv
cld
aad
push
loope
push
sbb
lods
push
add
iret
or
adc
sahf
in
push
mov
or
xlat
out
ret
dec
and
push
shll
add
pop
cltd
dec
mov
inc
add
ljmp
sub
daa
or
les
ret
rcll
cld
dec
ds
fmull
hlt
jl
xchg
loop
leave
inc
mov
test
andl
inc
cmp
mov
mov
or
fwait
xlat
jbe
jmp
pop
mov
loope
jp
add
data16
ja
ret
and
jge
xlat
xchg
sbb
jnp
xorl
cmp
cwtl
bound
pop
leave
fdivp
ljmp
add
jns
ja
push
out
pop
mov
push
outsl
mov
mov
jmp
into
sbb
jp
repnz
add
popa
fwait
inc
add
mov
cmp
mov
mov
addb
jbe
and
cld
jno
push
inc
les
xchg
ret
xor
das
push
pushf
push
add
jb
sub
sub
mov
dec
sbb
je
push
pop
stos
mov
pushf
lds
mov
popf
mov
mov
lret
rcr
dec
sbb
sub
repz
push
xchg
mov
mov
xchg
add
pusha
mov
insl
sbb
pop
ljmp
clc
into
sbb
jo
sbb
sub
lods
arpl
adc
shrb
and
int
xor
lcall
inc
scas
xchg
mov
lret
dec
sbb
js
push
shrb
and
and
sbb
or
jl
sub
mov
imul
jne
mov
leave
dec
test
clc
mov
out
popf
xor
add
das
test
ss
dec
mov
lret
mov
mov
mov
push
nop
imul
add
mov
in
jne
xchg
outsl
add
mov
add
sub
cmpsl
sbb
pusha
fwait
adc
mov
mov
push
shlb
ja
add
inc
adc
cmp
mov
mov
and
lret
jle
add
stos
gs
orl
mov
mov
add
lds
mov
es
ja
stc
cld
push
mov
ljmp
pop
aaa
das
dec
xchg
inc
mov
out
fistpl
stos
fdivs
dec
mov
lret
and
push
dec
lret
inc
call
sub
inc
rcrl
dec
leave
xchg
sbb
arpl
cmp
dec
xor
dec
movsb
adc
test
pop
ljmp
shll
add
lret
push
cmp
add
pusha
inc
mov
ss
sbbl
into
das
push
pop
cmp
sar
aas
push
pushf
dec
jb
push
push
leave
sub
je
std
pop
scas
mull
loopne
add
fistpl
pop
dec
jb
addl
add
mov
ret
add
sub
jb
add
push
fiaddl
sbb
leave
add
dec
lcall
and
xor
push
jecxz
jmp
fbstp
adc
arpl
fldt
mov
cmpsl
hlt
add
pop
adcl
cli
out
lret
xchg
in
or
sbb
fwait
add
icebp
lods
rolb
push
cmpsl
ss
mov
repnz
imul
std
xor
testb
sbb
sahf
add
dec
add
push
repnz
dec
sub
mov
popf
imul
cmp
mov
aam
stos
loope
pop
add
aas
mov
cmp
ja
icebp
popf
bound
sub
sub
lods
mov
iret
sub
or
adc
add
sbb
jne
call
sub
ret
add
cwtl
mov
adc
mov
cmpsl
scas
sti
xor
insl
ljmp
add
sbb
popl
and
add
scas
mov
sub
pop
pop
add
xor
pop
cwtl
into
or
test
xor
pushf
scas
sbb
mov
loope
add
and
loop
jnp
in
je
add
icebp
mov
in
add
sbb
push
jne
cmpxchg
jmp
pushf
push
inc
add
adc
outsl
push
test
out
cli
fwait
enter
scas
fisttpll
leave
out
add
ja
iret
jge
out
jne
out
mov
cmp
pop
mov
xor
lods
sub
mov
iret
sbb
mov
aam
mov
add
lret
fadd
call
fs
push
lods
mov
add
pop
jno
mov
shlb
inc
mov
bound
pushf
ja
nop
xor
or
adc
test
mov
les
mov
out
scas
mulb
cmpsl
fnstcw
push
repz
xor
cmp
pop
ja
repnz
pop
inc
xor
mov
xchg
push
add
xchg
or
inc
mov
sbb
data16
ss
mov
cmpps
ficoms
cwtl
loop
push
push
jbe
test
subb
call
push
out
add
fldcw
add
fisubrs
add
popa
sbb
int3
cmpsl
mov
cmp
rorl
mov
lret
cmpsl
pushf
or
sbb
mov
pop
add
dec
pop
inc
dec
sub
add
cmp
stos
xor
sbb
jne
addr16
mov
call
mov
lahf
repnz
fbstp
mov
jmp
out
add
add
stos
std
mul
sub
imul
sbb
insl
fwait
jb
add
dec
sbb
push
and
popf
adc
ret
and
inc
sbb
xor
mov
mov
lret
cwtl
inc
sbb
inc
dec
sub
jecxz
add
sub
sbb
sarl
pop
test
sbb
imul
cmp
add
or
leave
jl
mov
dec
mov
jbe
outsl
add
dec
jnp
in
ljmp
dec
xor
xchg
cmp
pop
mov
in
xchg
add
loop
enter
sub
push
mov
ss
mov
dec
fimuls
inc
enter
xchg
in
shrl
loope
sub
mov
ljmp
pusha
or
and
and
mov
add
ljmp
push
sbb
std
movsb
out
xor
scas
or
adc
xchg
xchg
lret
cmp
aas
ret
cmp
cmp
adc
or
test
fcmovu
sub
cmpsl
lret
xor
dec
cmp
add
mov
ss
add
insl
outsl
decl
hlt
cmp
and
out
pop
cmp
xor
fisttpl
subl
hlt
icebp
sbb
sub
push
add
mov
inc
leave
xchg
hlt
call
dec
push
dec
jns
or
stc
fisttps
jno
sub
push
push
call
stos
lahf
outsl
or
out
push
lahf
mov
or
pushf
sbb
jnp
add
inc
cmp
cwtl
sbb
push
fmull
cmp
add
ficompl
sar
mov
push
cmp
mov
add
xchg
cmpb
xor
push
in
add
xchg
andb
add
sub
add
and
push
test
sub
push
outsb
jl
ret
push
in
cld
mov
adc
rclb
mov
out
push
in
nop
cli
push
sub
out
adc
xor
cmp
insl
adc
lock
push
cwtl
mov
pop
out
mov
mov
or
idivb
in
push
mov
divl
loope
xchg
inc
sbb
mov
leave
mov
add
lods
fsubrs
push
aas
std
punpckhbw
xchg
stos
add
xor
mov
nop
hlt
leave
add
filds
dec
sub
sbb
sub
testw
pusha
inc
pop
pop
jns
dec
aas
insl
addl
aam
sti
sbb
aas
dec
inc
or
imul
mov
iret
std
push
rolb
cmp
pop
out
imul
js
push
cmpl
out
clc
sub
push
mov
add
inc
rorb
sbb
xor
idivb
cwtl
cmp
push
aam
orb
cmpsl
inc
jg
inc
scas
mov
flds
jno
add
ss
nop
cs
add
shr
xlat
repz
fstps
add
incl
push
lcall
add
je
imul
cmc
test
scas
push
imul
cmp
aam
jl
jle
or
orl
cmpsl
cmp
or
into
lret
add
fisttpll
outsl
mov
jns
pop
xchg
pop
mov
add
push
lret
insb
pop
mov
shlb
xchg
pop
addr16
lcall
xor
cmp
insb
add
incl
dec
repz
imul
add
and
test
xchg
add
daa
ja
leave
cmp
add
jbe
les
shrb
cmp
add
inc
inc
outsl
js
in
xor
inc
arpl
mov
or
add
hlt
in
cli
and
inc
repnz
js
xor
loop
cmp
out
inc
mov
dec
mov
fmuls
pop
add
cmpl
out
leave
fimuls
inc
add
imul
mov
cmpsb
push
arpl
xor
pop
std
test
pop
movsb
rorl
add
ljmp
sub
jp
xor
scas
xor
add
stc
sbbb
and
jne
push
sti
or
sbb
xor
stos
mov
xor
cmp
xchg
cmp
mov
lahf
jne
inc
icebp
or
pop
popf
pop
sbb
cmp
sub
pop
add
loop
jae
pop
ljmp
mov
je
test
xchg
sub
repnz
cmp
test
xor
mov
test
mov
mov
add
lods
xlat
in
clc
pop
testb
in
push
fsubrl
add
ja
fdivs
xchg
mov
inc
inc
dec
popf
mov
leave
stos
pusha
out
push
fildl
mov
mov
jmp
jae
sub
add
push
mov
imul
jns
iret
or
adc
lea
cmp
popa
adc
aad
mov
pop
popl
lahf
mov
add
sbb
add
loopne
lcall
out
out
adc
sti
shrl
xchg
iret
cmp
add
sub
repz
cwtl
xor
mov
sbb
lahf
out
testb
in
test
xchg
pop
xchg
mov
push
test
and
test
loop
add
pop
jbe,pn
sti
clc
mov
push
ret
in
subl
push
dec
test
jl
push
out
ljmp
filds
xor
push
inc
mov
inc
dec
fnstenv
les
pop
push
sub
pop
insl
mov
and
cmp
adc
sbb
out
dec
dec
imul
jbe
sbb
jno
add
stc
insl
ficoml
sar
add
mov
jge
dec
cmp
pop
mov
out
or
pop
lahf
dec
mov
sub
repnz
add
in
dec
mov
push
mov
cwtl
pop
imull
roll
enter
rolb
jge
mov
add
xchg
mov
add
fldenv
add
inc
sbb
jnp
dec
add
loop
adc
and
lea
out
jg
mov
mov
dec
push
fcompl
push
xor
dec
pop
push
add
cs
jg
pusha
bound
xor
or
xchg
xchg
or
lahf
mov
xchg
lret
cmp
jg
sub
loop
mov
hlt
mov
outsb
add
gs
mov
mov
add
jb
aad
pop
clc
movsb
test
je
insb
stos
mov
sub
xchg
jne
scas
int3
fisubs
dec
cmp
xor
pusha
or
or
roll
nop
dec
lret
dec
dec
movsb
sub
add
lods
and
add
cwtl
inc
cld
xor
test
data16
xor
andps
fs
and
pop
loope
out
xchg
cmp
imul
mov
push
sti
in
jae
ret
sbb
in
pushf
movsb
inc
sbb
cs
adc
cmpsl
cmp
fdivrs
int3
lret
clc
xchg
dec
cmpsb
addr16
negl
xchg
and
adc
or
push
and
pop
pop
mov
call
push
push
push
bound
fsub
cmp
or
cmp
pop
cmc
out
sbb
scas
sub
cmp
enter
pop
call
add
jl
and
out
inc
test
inc
ja
fistl
adc
dec
mov
into
loop
mov
rclb
add
aaa
add
orl
fmuls
xor
inc
arpl
sbbl
xor
push
adc
and
das
xchg
fs
divb
out
fs
imul
pushf
in
mov
lret
inc
pop
insl
hlt
fs
stos
mov
imul
mov
jno
push
in
and
adc
xor
adc
inc
inc
les
pushf
aaa
outsl
add
cltd
sbb
in
push
adc
sbb
mov
rclb
jg
sub
push
sbb
dec
xor
shl
add
insb
pop
pusha
shrl
out
adc
outsl
iret
sbb
pop
loope
cmpsb
jl
and
xor
in
fnstcw
mov
dec
dec
test
add
insb
popf
in
pop
outsb
add
gs
cwtl
and
cmp
stos
stc
adc
into
fs
mov
inc
int3
add
ja
or
in
sbb
lods
lret
enter
dec
pusha
insb
push
jo
cmpsb
xor
xchg
pop
or
or
jle
adc
pop
pop
dec
testl
movsb
mov
xor
out
cld
mov
mov
sub
cmpl
mov
inc
jg
inc
dec
xlat
mov
movsb
inc
push
stos
out
adc
cmp
sub
and
sbb
ljmp
mov
lret
push
sbb
cmp
mov
inc
push
dec
cwtl
xchg
cmp
mov
mov
sti
dec
std
adc
ret
lret
cmp
cmp
add
fidivrl
pop
pop
sbb
cmp
lds
mov
in
pop
sahf
pushf
je
mov
sub
pop
adc
mov
repnz
push
in
in
sbb
imul
fistpl
aas
dec
out
inc
ja
push
out
xor
pop
in
das
call
dec
add
cli
repnz
xlat
out
rol
mov
pop
mov
divb
xchg
xchg
dec
cwtl
xor
mov
pop
loop
pop
test
dec
mov
lret
movnti
add
mov
loope
pop
xchg
cld
sub
push
dec
fs
clc
add
call
jns
jbe
jns
jle
push
aad
fs
sbb
pop
outsb
stos
enter
mov
mov
imul
aas
dec
cmpsl
add
adc
jne
mov
lods
mov
add
dec
xor
xchg
jl
cmc
mov
mov
adc
sbb
or
mov
test
xchg
jns
enter
push
jmp
fisubl
xchg
addb
dec
cli
jle
sbb
and
jmp
lods
insb
in
test
neg
rcll
xor
dec
push
mov
pusha
dec
dec
xor
das
adc
push
das
sub
lahf
nop
call
lahf
sub
xlat
dec
dec
sbb
push
xor
and
les
and
dec
es
push
scas
sub
dec
in
mov
push
ss
inc
out
aam
fs
mov
and
and
pop
call
out
test
fwait
inc
cwtl
and
inc
lods
dec
das
dec
pop
pushl
jo
inc
cwtl
sbb
into
push
aam
pop
and
cmpsl
sbb
sti
sub
lret
inc
mull
hlt
or
mov
adc
and
lods
sbb
lods
xor
dec
jl
mov
adc
jns
into
nop
mov
adc
and
push
xor
sbb
sbb
inc
lret
cmp
and
adc
out
popf
inc
lods
and
dec
and
into
das
inc
push
and
das
and
subl
aaa
js
notl
xor
xlat
pop
les
dec
xchg
dec
popa
repz
sub
inc
mov
les
add
outsl
push
sub
cs
adc
jge
cs
sbb
or
sti
mov
sub
imul
add
mov
and
or
adc
xchg
and
push
out
mov
adc
xor
xchg
xor
lcall
cmp
add
out
ljmp
or
fldt
std
adc
into
push
jle
push
or
nop
insl
push
nop
lcall
bnd
add
sahf
add
push
cli
dec
mov
mov
loop
mov
dec
testb
push
adc
insl
jno
or
nop
xchg
dec
inc
mov
add
jg
xor
cli
xchg
lcall
cmp
lahf
dec
stos
pop
aaa
adc
push
dec
fs
push
dec
adc
xor
xchg
cmp
push
inc
mov
push
mov
divl
dec
sbb
dec
sbb
int3
jb
mov
adc
les
add
stos
lcall
and
lods
mov
xchg
push
mov
popa
lea
call
push
mov
mov
and
in
pusha
adc
jns
in
cld
mov
adc
pushf
sbb
sbb
push
out
sub
mov
pushf
mov
sub
shlb
mov
test
lods
sbb
inc
insb
xchg
jnp
aaa
sub
xor
repnz
cmpl
lahf
or
sbb
repnz
pop
lods
inc
movsb
daa
iret
out
and
inc
push
ljmp
aam
js
adc
jl
prefetch
sub
fcomps
je
add
xor
loope
mulb
lret
mov
rolb
imul
leave
insl
and
xchg
mov
add
mov
dec
adc
nop
pop
and
out
jns
fld
in
mov
inc
sbb
adc
hlt
hlt
into
inc
push
fs
adc
push
mov
imul
inc
nop
int
test
mov
fcoms
cld
outsl
sub
and
pop
push
jnp
adc
andl
mov
adc
lcall
ret
pop
mov
dec
sti
mov
pop
popa
sbb
iret
addr16
das
mov
lds
cmpsb
add
sub
mov
add
push
pop
fadd
addr16
aad
add
lods
sti
push
jns
rorl
mov
jp
es
frstor
or
fisttps
fisubrl
add
xor
add
cmpsl
sub
aad
loop
sarb
and
leave
xchg
in
add
push
out
mov
jb
add
xor
xor
cmp
rolb
jno
ret
subl
shll
subl
add
xchg
sarb
lods
addr16
adc
and
loope
xor
mov
add
add
pop
test
jl
adc
push
ret
je
xchg
sarb
stc
insl
add
test
xor
sbb
pushf
jbe
xchg
jl
cmpsl
push
adc
jo
loop
adc
pop
movsb
ficoml
roll
test
out
mov
mov
mov
push
cmp
add
xchg
xor
dec
xor
push
cld
movaps
sub
xchg
cmp
or
pop
inc
iret
movsb
add
and
int
enter
dec
ja
cmp
mov
pop
shll
fldcw
push
aaa
sbb
sub
and
sub
jge
rolb
xchg
imul
inc
insb
sub
in
fisttpl
add
dec
add
sti
in
xchg
pop
mov
rolb
stos
inc
scas
xor
jo
push
xor
orl
dec
and
sub
dec
mov
mov
fcompl
cmp
sub
xchg
and
xchg
ret
lret
mov
out
adc
jns
push
pusha
and
cmpsl
mov
mov
pop
xlat
xorl
lahf
xchg
or
je
int
ss
pop
aas
ret
adc
pop
adc
mov
inc
loop
push
xlat
inc
nop
mov
aam
xor
loopne
scas
or
xor
dec
or
das
mov
or
inc
std
inc
inc
dec
stos
stos
scas
stc
lahf
cld
mov
mov
cmpsb
inc
int
addl
cmp
fs
jl
pop
dec
push
aaa
pop
idivb
adc
push
in
fstps
sub
fisttps
dec
sub
push
pop
sarl
mov
dec
xor
adc
out
mov
xor
add
cmc
jmp
xor
in
das
sbb
xchg
xor
jns
lcall
inc
dec
popf
cmp
and
push
cmp
jle
xchg
icebp
insl
and
pop
push
xor
fcmovu
push
movsb
inc
in
push
cmpsl
fidivl
push
xor
roll
es
imul
adc
fs
xor
popa
pop
cmp
iret
sahf
pushf
mov
fisttpl
pop
aaa
sub
or
push
sbbb
sub
not
clc
out
scas
xor
and
mov
pop
lods
add
adc
or
jmp
sahf
adc
push
aas
int3
sbb
and
pusha
xchg
push
cmp
xchg
cmp
jne
pop
decb
xor
rcrb
and
stc
sbb
ljmp
pop
sti
hlt
jb,pt
sbb
dec
je
mov
enter
pop
mov
or
mov
mov
cs
fadds
sti
stos
enter
cmp
das
mov
add
pop
pop
pop
lea
inc
lret
cmpsl
sbb
adc
adcb
pusha
pop
fs
lods
insl
adc
cmp
inc
ficoms
dec
mov
dec
or
or
adc
stc
push
fidivl
sbb
push
sub
jle
cvtdq2ps
out
int3
cmp
arpl
sub
jecxz
shlb
sub
ret
xchg
loope
inc
pop
loopne
shll
clc
jns
sub
dec
sub
movsb
fcom
sub
adc
or
sti
push
mov
out
add
test
add
hlt
push
dec
leave
adc
mov
jne
dec
test
cld
mov
jnp
fstp
cltd
inc
negl
or
std
push
icebp
iret
into
gs
test
dec
loopne
in
icebp
pop
add
sti
pmaxsw
imul
fstps
and
mov
dec
scas
adc
mov
mov
lods
cld
add
cwtl
push
mov
jl
mov
jne
jmp
out
add
dec
jp
add
and
cmp
xchg
jbe
or
push
test
int3
xchg
rclb
je
push
lret
jb
lahf
aam
and
xor
loopne,pn
fisubrl
in
sub
ret
cmpsb
dec
in
inc
loope
enterw
xor
mov
in
adc
dec
sub
xchg
addb
mov
cmp
add
cmp
lret
jecxz
shrb
inc
mov
push
adc
popf
repz
int
dec
mov
fstpl
and
cltd
mov
push
add
sub
or
add
sub
ljmp
xchg
cmp
add
out
add
aam
scas
mov
mov
add
loopne
cmpl
fiaddl
out
mov
pop
dec
out
insl
or
iret
sbb
ret
pop
es
sub
bnd
jmp
jl
sahf
push
dec
in
xchg
aas
or
adc
test
pop
addr16
sub
add
push
lret
dec
das
add
jl
pushf
or
xlat
cli
jo
lds
lds
sub
and
in
fsts
cmp
push
lret
les
add
fwait
jbe
std
ljmp
xchg
nop
push
sbb
aaa
mov
xor
pop
stos
xchg
pextrw
inc
mov
push
cmc
add
data16
add
fstpt
movsb
xchg
pop
sbb
mov
pop
push
shl
mov
cs
adc
lea
add
adc
and
jp
cvtdq2ps
jbe
sbb
stc
pop
mov
jno
cmp
fsubl
pop
inc
ret
testb
mov
dec
aam
movsl
add
dec
mov
sti
add
and
sub
je
mov
pop
xor
push
leave
add
xchg
sbb
std
decl
pop
add
aaa
scas
inc
dec
stos
test
out
xchg
cmpl
jbe
ret
inc
adc
das
lret
cmp
add
jle
xchg
xchg
cmpsl
js
xchg
pop
jno
inc
inc
ds
or
adc
test
gs
add
sahf
pop
push
sbb
in
adc
stos
std
bound
dec
jne
insl
push
jle
testb
cmpsb
mov
imul
stc
sub
inc
xchg
pop
mov
jl
movl
and
mov
lods
lret
fucomip
fnstcw
push
shlb
xor
adc
scas
push
sbb
lahf
xchg
out
and
and
xor
sbb
and
imulb
push
jecxz
jl
leave
xchg
push
and
cmpsl
dec
ret
add
loop
in
in
jmp
xchg
pop
out
data16
xchg
icebp
dec
dec
clc
sub
aam
imul
cmp
test
push
nop
add
pop
push
dec
xchg
add
mov
cmp
add
loop
shll
gs
push
je
cmpsl
adc
aaa
cmp
pushf
mov
push
sbb
or
out
pop
sub
scas
adc
adc
add
loop
ljmp
xchg
in
leave
lret
jne
out
adc
aas
int
out
lea
addb
pusha
iret
sub
cld
sbb
xchg
mov
mulb
imul
mov
lret
inc
mov
lock
add
mov
sbb
cmp
xchg
ljmp
sbb
mov
cmpsl
scas
sub
jnp
add
adc
sarl
imul
or
inc
mov
mov
add
scas
and
cmp
sbb
sub
popf
push
sbb
push
pushf
adc
mov
ja
add
out
leave
xchg
rcll
push
mov
pop
cmc
ja,pt
and
mov
push
popf
out
jmp
mov
stc
pusha
lea
lods
repz
and
in
pop
shr
jne
mov
jecxz
cmpsl
cli
xchg
xchg
cmpsb
or
pxor
test
lcall
sub
add
add
mov
add
icebp
rcr
wbinvd
pusha
test
ror
push
repnz
add
movb
mov
cmp
xor
stos
mov
std
jp
pushf
in
ss
xor
imul
je
and
push
mov
dec
movb
adc
iret
popa
ret
and
dec
pop
test
add
add
push
call
cmp
sahf
out
sti
add
loop
mov
add
push
sarl
add
fistpl
into
add
cmc
push
sti
cltd
jnp
add
jbe
cld
mov
mov
add
imul
xchg
outsl
xor
pop
iret
sub
mov
jns
sub
mov
js
int3
inc
jmp
jo
jbe
cwtl
decb
xchg
fiaddl
add
push
push
loopne
das
movsb
add
fs
out
inc
cmp
roll
sbb
adc
lret
mov
iret
flds
xor
dec
std
inc
add
loope
jg
xor
xlat
pop
in
pop
dec
adc
pop
mov
lcall
jbe
add
pop
add
xor
pop
ja
add
xchg
jge
adc
jne
dec
das
cs
addr16
into
mov
adc
mov
std
mov
and
dec
adc
mov
ja
jbe
add
stos
jge
mov
imul
gs
add
rcll
adc
ud0
cmp
iret
test
adc
cwtl
mov
mov
testb
out
mov
add
das
mov
jl
fadds
mov
popa
outsl
adc
into
daa
test
loop
adc
mov
pop
jl
out
out
call
cmpb
add
sbb
add
and
push
or
ljmp
mov
push
pop
mov
add
mov
daa
mull
jo
push
fstpt
sbb
fisubs
push
jns
pop
cmpsl
flds
mov
and
cs
adc
iret
sti
add
or
jno
mov
push
lcall
adcb
mov
inc
imul
push
testb
mov
inc
add
and
and
iret
lret
cmp
add
mov
jbe
xchg
push
inc
cld
add
stos
jns
cmpsb
mov
cwtl
ja
cmp
or
sbb
inc
cmpsl
xor
push
mov
imul
int
mov
jns
xchg
ljmp
int
in
sbb
and
adc
add
push
and
sbb
or
lods
xchg
loope
inc
push
cmc
out
push
lahf
pusha
inc
sbb
push
xor
sub
outsl
or
insl
fs
or
add
cwtl
lret
dec
inc
fimuls
push
in
xor
ficompl
inc
dec
push
mov
fwait
push
clc
mov
sbb
das
out
cmp
mov
cwtl
out
nop
xor
stc
cwtl
xor
packssdw
lret
sub
shrb
aad
push
push
minps
jae
adc
dec
xor
push
aaa
stc
filds
inc
cmp
dec
jmp
jno
pusha
sti
mov
ficoml
cltd
and
adc
leave
mov
or
or
inc
push
xor
add
add
lods
leave
dec
sbb
xor
dec
aam
pop
jp
mov
inc
orl
adc
cwtl
xor
ret
rclb
clc
js
adc
pop
and
xchg
not
mov
js
ficoms
xchg
fsub
add
push
sub
xchg
xlat
arpl
push
aam
mov
push
inc
cs
push
test
push
adc
push
movsb
ljmp
lods
mov
lret
mov
ljmp
xchg
cwtl
in
sbb
pop
mov
jo
mov
mov
cmp
test
jmp
adc
out
pop
out
ret
lret
mov
mov
lods
mov
mov
inc
push
fidivrs
or
mov
or
pop
mov
add
adc
sub
ds
int3
mov
mov
jno
aas
dec
pop
add
mov
push
enter
aaa
adc
lea
inc
ss
iret
xchg
inc
mov
cmp
mov
pop
sbb
mov
std
adc
or
insb
sahf
sub
shr
scas
xchg
cmp
mov
nop
mov
outsl
inc
lahf
mov
ja
inc
jo
xchg
std
mov
or
sub
push
mov
jmp
or
stos
pop
add
mov
xlat
cmp
mov
addb
cmp
movsb
jbe,pn
sbb
inc
and
mov
aad
rol
xchg
dec
or
nop
sub
in
mov
lahf
adcl
xchg
pusha
iret
popf
mov
movsl
xchg
test
rorb
mov
lret
xchg
sbb
or
xchg
xchg
mov
pop
cmp
push
add
fwait
cmp
mov
mov
lods
ds
inc
xchg
fisubs
cld
jge
xchg
fsub
add
adc
out
sub
sub
and
mov
xchg
stc
cmp
aad
fists
mov
jecxz
out
pop
sbb
cmp
dec
cmp
out
push
fdivrl
inc
push
xchg
sub
sub
cmp
dec
rclb
popa
or
hlt
add
out
pop
push
jl
js
push
sbb
mov
stc
cmp
mov
popa
dec
das
and
add
pop
pop
dec
add
call
jbe
add
adcl
ds
stc
cmp
xchg
dec
add
xchg
sub
out
icebp
filds
cmp
je
stos
icebp
and
mov
fsubs
sti
mov
test
repz
sub
or
negl
push
cmp
outsl
mov
adc
or
push
stc
iret
stos
add
into
out
cmp
jo
cmp
mov
push
jno
jge
add
push
loope
mov
or
cld
iret
dec
dec
fwait
jmp
add
and
add
in
cld
or
scas
xor
test
jns
pop
adcb
mov
movsb
aas
je
add
bound
aas
cltd
movsl
sub
test
iret
popf
fmulp
cmpsb
test
paddd
add
mov
adc
negb
jns
and
jl
rolb
rcr
aam
lods
popl
fcomps
insl
outsb
adc
or
decl
cwtl
popa
sbb
test
add
inc
addr16
add
pushf
xchg
fwait
add
push
rclb
lods
jbe
cmpsb
popa
cmp
add
pop
ret
dec
enter
jg
pop
or
mov
pop
repnz
in
push
add
loope
xchg
jl
add
std
inc
mov
sbb
sahf
sub
jbe
rolb
jb
imul
nop
jmp
add
adc
mov
les
mov
test
sub
leave
xchg
out
stos
add
xchg
movsb
inc
and
add
cmp
jae
xor
mov
sbb
in
popa
or
add
bound
jae
arpl
add
into
loop
jge,pt
xor
addr16
dec
cwtl
shlb
push
xor
or
push
pop
mov
push
pop
or
cs
cmp
lods
int
xor
jo
les
in
out
mov
sbb
sbb
dec
jbe
stos
lcall
ja
mov
add
inc
or
add
mov
roll
mov
sub
cli
add
jmp
das
inc
adc
add
mov
pop
dec
or
enter
mov
mov
and
sbb
add
and
cmc
sahf
add
push
jge
mov
xchg
mov
pop
add
inc
push
push
dec
inc
push
std
add
sahf
mov
adc
mov
sub
add
jns
loope
je
add
fildll
cmp
sti
fwait
jnp
or
insl
notl
add
jo
lods
add
daa
subb
push
sbb
aad
lcall
adc
and
cmp
ds
jns
cmp
jp
js
add
out
pop
clc
or
and
add
jae
sub
push
and
cli
out
adc
test
push
dec
mov
cmpsb
add
xchg
jmp
in
adc
std
stos
dec
je
lret
inc
add
imul
mov
scas
ja
movsb
xchg
push
cmpsl
add
push
lds
in
adc
stos
push
xor
xchg
lea
inc
iret
and
fldenv
in
add
std
cmp
data16
fcoml
movsb
in
sbb
pop
add
cmpsl
dec
mov
xlat
mov
fisubl
xchg
add
push
mov
aam
rcrl
lahf
mov
scas
fidivs
adc
push
stc
xor
sti
cmp
into
sub
push
cmp
lea
aam
ljmp
sti
mov
mov
jecxz
mov
iret
out
hlt
rcll
jl
push
call
jmp
push
dec
sahf
mov
andb
mov
fs
mov
push
add
imul
mov
out
leave
in
aad
xor
push
fwait
xor
xchg
incb
loopne
je
pop
push
push
mov
xchg
hlt
bound
fidivs
add
add
cmpsl
rorl
add
dec
ss
fwait
rcrl
mov
mov
cmp
mov
loope
mov
ja
ljmp
push
aam
jnp
inc
sub
or
rol
rclb
iret
ljmp
pop
insb
outsb
sbb
sahf
adcl
pop
sbb
cmp
sbb
outsl
rcrb
mov
test
xor
loopne
ret
cmp
mov
or
enter
push
jns
mov
scas
mov
xchg
out
add
xor
jecxz
fildll
or
add
lcall
outsl
cmp
push
cmc
arpl
cmpsl
repnz
ret
ffree
inc
je
cmp
aam
push
jb
mov
adc
dec
aam
sarl
sub
sbb
jecxz
cltd
push
imul
and
aas
mov
mov
xchg
jecxz
repz
pop
add
jo
in
in
mov
inc
sti
sbb
ret
sti
lcall
xlat
js
int3
and
xor
xlat
xor
fs
jo
clc
addr16
lret
add
in
shlb
pop
dec
adc
fwait
add
mov
jl
dec
mov
out
pop
sbb
scas
add
sub
sbb
das
sbb
shll
fidivl
and
pop
fst
sub
fdivp
rorb
lahf
pop
sbb
push
daa
lods
aaa
inc
push
lahf
ja
or
dec
out
fmull
cmpsl
xor
shrl
sub
xor
mov
push
fcomps
xor
pop
adc
loop
pop
sub
shl
push
into
cltd
push
sahf
adc
cmp
lret
stos
jl
xor
dec
mov
inc
and
push
xor
mov
btc
push
imul
xor
out
popf
sub
dec
mov
out
adc
mov
xlat
push
dec
adc
sub
pop
stos
sbb
add
imul
shrb
inc
dec
ds
aam
xchg
lds
js
ljmp
ljmp
cwtl
nop/reserved
and
ljmp
lods
les
adc
rcrb
jle
ja
mov
in
xor
and
ljmp
xchg
mov
add
cwtl
aad
into
pop
and
or
lret
cmp
fidivs
and
enter
in
sub
add
sbb
out
fdivrp
insb
rorb
adc
and
fmulp
into
les
ja
popf
test
mov
nop
mov
rclb
inc
popf
push
jo
xor
arpl
ljmp
enter
adc
in
cmp
in
xor
call
sub
lea
xchg
pop
call
add
or
push
call
push
dec
cs
inc
xchg
dec
into
dec
aam
into
test
xor
cli
enter
push
aas
out
pop
pop
and
dec
test
das
not
fdivrl
sub
addr16
idiv
divb
faddl
xchg
fsub
push
adc
add
pusha
test
out
push
lcall
inc
and
shl
in
fadds
xchg
push
dec
leave
jle
adc
or
in
xchg
adc
xlat
popa
or
nop
shl
push
jb
data16
outsb
fidivrs
add
xchg
test
lock
das
pop
xchg
mov
std
dec
lahf
adc
xlat
cmp
out
add
mov
ljmp
or
shr
jo
insb
push
jg
dec
pop
xor
pop
fildll
pop
fdivp
or
insb
pop
and
xchg
sub
sbb
pop
lods
inc
dec
or
lods
mov
xor
xchg
bound
sti
ficoms
mov
jo
lods
adc
inc
mov
sbbb
push
add
pushf
ss
inc
sar
jge
adc
sub
xor
add
lods
lahf
hlt
shl
jae
lods
outsb
cwtl
lret
push
push
stos
out
aam
jae
sub
lret
data16
aas
pop
push
aad
inc
cmp
cmp
int3
enter
lods
jle
add
cli
add
xchg
dec
imul
stc
mov
mov
shrb
mov
mov
roll
mov
pushf
insb
shr
rcrl
push
push
push
xor
enter
add
or
jl
and
xor
jmp
cmpb
xchg
or
push
inc
pop
pop
shl
bnd
inc
xchg
cwtl
pushf
jl
lods
fistpl
inc
cmpsl
rcl
jl
push
push
lret
ret
insb
adc
int3
lea
push
fimull
out
cld
ds
pop
in
int
push
mov
sub
and
cmp
int
insl
enter
ljmp
adc
jnp
mov
mov
iret
push
aam
and
stos
out
sub
in
mov
nop
xor
cmp
push
ss
push
ljmp
cmpsl
pushf
cmc
lret
rcrb
mov
in
sub
lret
cmp
push
fisubrs
mov
push
ljmp
mov
mov
xchg
fs
add
nopl
cwtl
in
fs
in
or
insb
mov
les
mov
pop
and
sbb
repnz
sub
sub
jecxz
popf
pop
inc
popf
nop
and
and
inc
push
mov
inc
nop
and
fadds
push
icebp
es
cmp
and
or
andl
inc
je
inc
inc
add
stos
push
inc
mov
dec
enter
idiv
pop
adc
push
int3
jecxz
jne
ror
push
dec
test
xchg
add
or
push
int
ss
lea
add
push
int3
inc
sbb
leave
cltd
dec
das
sub
mov
mov
negl
int
push
adc
xchg
jae
test
fwait
addr16
jle
and
daa
cmp
lea
adc
stos
aas
clc
adc
dec
stos
add
dec
int3
cmp
sub
dec
push
inc
push
stos
sub
sub
rclb
daa
in
and
jno
test
popf
xor
pushf
out
icebp
and
xor
jg
push
mov
sti
cmp
sbbl
mov
sub
movsb
cmp
movl
and
out
mov
inc
adcl
mov
push
xorb
ljmp
roll
dec
cmp
pop
add
xchg
jns
iret
mov
adc
sbb
xchg
add
xor
sub
imul
ret
cwtl
lds
movsb
mov
jmp
push
mov
inc
dec
mov
notl
prefetcht0
jo
sub
ja
dec
test
adc
xor
repz
in
in
sub
sbb
out
cli
rcr
testl
jnp
dec
shr
mov
jl
xchg
push
push
xlat
dec
in
sub
sbb
add
das
mov
dec
ljmp
icebp
pusha
xchg
inc
in
adc
push
push
inc
ljmp
mov
adc
xor
cwtl
push
jl
test
mov
or
nop
int3
cmp
adc
out
adc
xor
dec
or
dec
lea
das
sub
push
xchg
pop
mov
cmc
out
daa
xchg
and
xor
inc
xchg
mov
insl
es
dec
inc
push
dec
das
jne
xor
repz
iret
insb
jno
inc
inc
push
ljmp
lret
out
cmp
repz
xchg
adc
add
inc
test
sti
js
add
xorl
fs
fisubl
and
stos
sub
push
nop
dec
and
inc
inc
mov
out
dec
and
inc
ljmp
mov
cmp
shlb
xor
ljmp
cmp
and
sbb
repnz
adc
adc
sbb
sub
cli
iret
ljmp
or
dec
add
add
xchg
jg
xor
movsl
daa
mov
and
adc
and
in
pop
imul
fcoms
into
or
or
dec
cs
and
mov
or
sbb
sbb
shll
and
push
daa
out
pushf
sbb
lcall
cmp
sub
and
icebp
inc
and
sbb
aam
jl
sub
sub
jno
je
cmp
cmp
sub
stc
fstl
jl
jl
fsubrl
sbb
pop
movsb
rcrl
cmp
adc
das
xchg
rorl
outsl
mov
jno
mov
nop
mov
cmp
popf
nop
movsb
jne
jno
inc
cwtl
xchg
xchg
pop
mov
add
cmp
test
adc
xchg
sbbl
pushf
push
nop
pop
inc
dec
jge
mov
imul
pop
adc
das
or
aam
and
decl
mov
push
mov
ret
cwtl
mov
mov
mov
mov
push
fs
sub
adc
mov
js
and
scas
inc
dec
and
push
mov
pop
ss
sbb
notl
pusha
les
pop
movsb
sub
rcl
and
push
sahf
jbe
or
mov
into
rolb
cmp
mov
out
cwtl
mov
pushf
pop
adc
jnp
jge
out
cmp
add
repnz
rcrl
sti
and
enter
dec
lock
shlb
inc
xor
add
mov
push
aam
dec
jno
mov
notb
fs
aaa
test
pop
in
sub
lcall
or
enter
cltd
lahf
mov
add
scas
aaa
ror
fdivrp
xor
imul
mov
cmpsl
mov
dec
stos
mov
nop
mov
enter
jns
fwait
pop
enter
jne
jno
insb
push
push
push
lret
push
jno
jo
jo
bnd
or
mov
insl
sub
jl
imul
andb
or
movsb
rorl
movsb
cmp
cld
cs
jo
cmpsl
jg
push
push
xor
js
repnz
and
jl
sbb
cwtl
pop
push
testl
adc
push
lock
arpl
ds
test
loop
xor
rorl
daa
jl
lret
seta
sti
mov
lahf
in
out
fists
dec
lcall
lods
in
cmp
cmp
mov
dec
cmp
nop
mov
inc
icebp
jne
addr16
sbb
in
pop
inc
clc
nop
inc
sub
xor
cmp
in
push
lock
mov
jp
es
mov
fldl
and
dec
xor
cli
dec
xor
ffreep
jno
js
mov
rcll
push
sbb
pop
jecxz
cmp
dec
mov
fwait
mov
enter
aad
pop
xchg
push
pop
xchg
mov
push
aam
pop
lea
iret
out
arpl
std
xor
xchg
add
das
rcl
pop
js
addr16
pop
notl
adc
push
mov
pop
cmp
mov
push
aam
pusha
lea
shr
stos
cs
lcall
cmp
enter
add
in
or
add
xchg
sub
and
mov
movsl
dec
fs
adc
scas
in
pop
rcll
popa
testb
sub
sub
movsl
leave
and
mov
and
jo
movsb
push
inc
or
dec
sbb
jo
data16
xchg
movsl
inc
push
fcoml
in
aas
xor
insb
dec
insl
outsb
out
or
mov
insl
pusha
adc
mov
inc
sbb
mov
shl
xchg
sbb
mov
push
push
mov
mov
pop
push
inc
pusha
clc
and
xchg
dec
imul
sub
xor
xchg
cs
insb
movsb
je
test
xchg
mov
sub
inc
pop
popa
je
mov
dec
int
jo
in
mov
sbb
aam
enter
mov
lods
mov
mov
inc
add
push
xchg
jl
xor
sahf
xor
out
lcall
mov
mov
test
xchg
mov
popa
push
popa
push
es
mov
lret
jb
and
movsb
popa
in
mov
pop
or
mov
mov
in
popa
lret
mov
jl
mov
pop
mov
xor
ljmp
insb
pop
dec
sub
fs
test
sbb
test
and
pop
sub
or
jb
fidivs
or
ret
jno
mov
push
mov
mov
cwtl
mov
lea
scas
dec
mov
mov
cmpl
xor
mov
mov
orl
jo
sbb
and
popa
push
mov
push
xchg
jns
push
inc
cmp
scas
gs
sbb
pop
and
push
push
xor
aam
jo
in
jno
dec
cwtl
aam
sbb
arpl
jbe
mov
push
ja
adc
shlb
sbb
pop
push
aaa
enter
ficoml
test
loopne
nop
mov
sub
cmpsb
sbb
inc
pop
mov
xchg
xor
aad
movsl
sbb
adc
hlt
loope
int
pcmpeqw
push
addr16
cmp
sbb
mov
sbb
sbb
imul
insb
jnp
sub
faddl
sub
gs
push
hlt
popf
rol
sub
dec
mov
dec
push
xchg
and
repz
movsl
sbb
xlat
cld
fstpl
sbb
lahf
int
lock
adc
sbb
xchg
lret
bound
hlt
adc
sbb
dec
adc
aaa
rclb
adc
shrl
pop
sub
dec
das
adc
push
add
fcoml
fisubrs
sub
jo
sub
cmp
xor
sub
imul
fwait
sbb
repz
dec
adc
pushf
cmp
mov
sub
jg
sub
sbb
or
hlt
mov
jecxz
xlat
mov
adc
pop
mov
mov
jns
jb
sub
imul
adc
cs
clc
cwtl
sub
jecxz
lahf
pushf
fdivrs
or
lods
adc
fmuls
mov
insl
cmp
sub
jecxz
push
pusha
sub
sahf
push
adc
and
in
push
jmp
mov
cld
and
or
cld
popf
mov
dec
inc
adc
mov
adc
adc
repz
movsb
out
dec
xchg
xor
cwtl
fnstcw
call
je
pop
hlt
scas
inc
in
ret
xor
sbbb
lret
mov
sub
in
push
xor
loopne
adc
mov
in
sub
jmp
or
in
divb
stos
mov
in
xchg
lds
cmp
add
int
xchg
cmpsb
xor
imul
or
inc
lret
mov
cmp
cli
sbbb
movsb
pop
cmp
inc
daa
or
orb
sub
cmpsl
ljmp
pop
and
mov
mov
and
pusha
pop
imul
scas
mov
test
sub
je
mov
cmp
pop
rcll
leave
cmp
adcl
inc
out
imul
adc
mov
mov
and
nop
or
dec
mov
dec
sub
fistpll
mov
cltd
andl
xchg
hlt
dec
xchg
ret
sbb
mov
jmp
pushf
dec
push
in
cld
lock
or
jo
xchg
js
or
lds
faddl
or
iret
push
aam
adc
cmc
cwtl
xchg
cmp
push
loope
pop
hlt
mov
jne
add
nop
aam
sbbb
daa
push
mov
pop
inc
xchg
int
test
lods
jne
pushf
and
pop
cltd
aad
int
out
pop
lods
and
dec
lds
mov
test
in
jno
push
lds
hlt
lods
pop
das
mov
popa
aam
add
and
pop
xor
push
lret
xchg
or
jno
nop
xor
jl
outsl
fdivrl
adc
push
popa
aam
out
sbb
inc
mov
mov
test
jo
xorl
or
sbb
addb
adc
test
xchg
imul
sar
add
fcomip
mov
cwtl
es
push
xchg
xchg
add
js
movsl
or
insb
xchg
popf
mov
add
insl
sahf
repz
dec
jnp
add
fdivr
cmp
iret
cmp
add
fnstsw
or
sbb
test
jmp
push
inc
add
rol
out
leave
shlb
add
idivb
xlat
add
dec
sbb
fidivs
ja
arpl
inc
mov
mov
ret
mov
sbb
aaa
iret
jb
mov
lahf
pop
adc
add
mov
imul
add
test
push
add
mov
sbb
loop
add
in
stc
jno
imul
movsb
cmp
add
cmpsl
pop
cmp
out
add
call
xchg
add
mov
dec
inc
or
mov
add
xchg
lret
inc
jbe
lcall
add
jmp
popa
add
push
and
add
sbb
add
out
sub
or
into
lods
sbb
cld
out
mov
jl
pop
dec
dec
or
ret
pusha
aas
ds
out
repnz
mov
movsl
pop
add
xchg
mov
mov
lret
test
adc
out
pop
popa
cmovp
and
in
or
or
add
push
dec
pop
jmp
test
xchg
jae
inc
dec
mov
xor
pop
jge
mov
jb
sbbl
or
xchg
dec
mov
pop
enter
pop
incb
sbb
outsl
mov
push
pop
jecxz
add
ret
popf
jns
in
lret
adc
leave
inc
push
enter
xor
add
add
flds
loop
mov
jl
cmp
into
popf
pop
push
cmp
sub
sub
adc
push
xchg
and
aad
int3
arpl
sub
push
mov
xor
xor
add
sub
movsl
ja
lea
xor
ljmp
sub
push
adc
add
enter
insl
lahf
cs
push
mov
adc
sti
cmp
fs
push
mov
fcomi
add
cmpsb
out
stos
hlt
inc
out
push
xchg
unpckhps
pop
sti
pop
adcb
jecxz
out
cs
stos
ljmp
sub
aas
push
loop
or
adc
fcomps
xchg
push
inc
cld
out
jmp
fldt
push
mov
add
sbb
daa
andb
in
cltd
pusha
xchg
fnstenv
push
aas
adc
sbb
xchg
and
out
nop
add
int3
mov
pop
adc
leave
xchg
in
mov
repz
daa
jae
movsb
aaa
sub
lock
adc
push
dec
xor
movsl
int3
movsl
imul
dec
out
jl
imul
fisttps
cmp
fmuls
lea
fucomi
mov
mov
sbb
shll
sarl
gs
lahf
add
lret
inc
adc
imul
and
mov
cmp
pop
adc
cmpsb
sub
sbb
jo
sub
std
jg
imul
lret
adc
mov
add
arpl
fimuls
jmp
ja
cmp
lret
push
inc
cwtl
rcr
add
mov
sbb
add
ror
adc
movb
lea
std
xchg
sar
dec
cmp
mov
out
and
fmul
scas
add
mov
or
xor
add
inc
xchg
lahf
adc
mov
jmp
aam
cmpsb
in
inc
xchg
cli
add
std
sub
into
push
enter
js
inc
mov
flds
add
test
repnz
pop
push
ret
pextrw
xchg
adc
ss
jne
xlat
dec
adc
and
adc
sbb
or
std
sub
rcrl
testl
sub
cmpl
xor
ljmp
mov
out
push
outsl
movsb
push
nop
add
jl
pop
rol
jp
pop
leave
in
hlt
cld
cmpsb
push
into
sub
xor
iret
movsb
push
dec
or
mov
add
out
mov
stc
adc
add
in
sbb
mov
outsb
in
les
ret
add
rclb
jno
in
push
cld
dec
pop
fcoms
add
add
adc
mov
test
add
ss
adc
and
sub
sbb
xor
roll
ret
adcl
add
or
pop
scas
std
sub
xchg
mov
daa
jmp
pop
jge
arpl
add
cmp
mov
pop
or
jg
mov
and
add
in
push
aas
add
sub
add
inc
sbb
xchg
loopne
sub
outsb
cld
orb
addl
cmp
dec
bound
shl
and
pushf
divb
sbb
jle
dec
jl
push
add
repz
cmp
ljmp
push
jg
fdivp
sbb
mov
add
stos
jae
push
or
jne
jg
mov
mov
xor
adc
leave
out
add
or
lret
or
dec
or
cmpsl
ljmp
popa
push
scas
sub
mov
jnp
stc
fldt
xlat
lcall
or
or
cld
cmp
dec
pop
or
cmpsb
sub
jmp
or
arpl
test
bound
je
cmpsl
inc
pop
daa
mov
add
dec
adc
or
inc
add
test
frstor
sarl
fnstcw
ret
es
adc
shll
movsb
inc
cwtl
pop
add
sub
or
test
or
stos
cs
fnstsw
ret
push
pop
xchg
push
repz
subb
jns
xchg
lock
clc
gs
push
sub
js
sub
and
in
mov
cmp
cmovge
xrelease
jns
pop
in
sbb
daa
mov
xchg
es
mov
and
or
mov
stos
gs
repnz
xor
imul
sub
sbb
mov
fs
xlat
push
xchg
inc
jbe
imul
sbb
dec
out
and
xchg
mov
cltd
hlt
mov
aas
in
adc
inc
xchg
push
js
fcoms
call
mov
fcmovu
push
int3
orb
aas
rcl
inc
out
mov
sbb
pop
push
push
mov
aam
shr
push
xchg
imul
in
sbb
xchg
in
xchg
pop
stc
outsb
daa
add
fstps
push
insl
inc
repnz
in
inc
shrb
jnp
sbb
mov
cs
aam
jge
stc
in
adc
loopne
out
lret
jmp
jne
jae
sbb
mov
aad
jl
inc
idiv
int
data16
test
xchg
clc
test
push
inc
jne
mov
test
aad
and
lahf
xchg
mov
les
lods
test
notl
pop
lock
mov
rol
sbb
inc
dec
dec
inc
or
jmp
push
or
adc
fldpi
add
fisttps
ljmp
pop
inc
fwait
ljmp
adc
stc
popa
aas
mov
arpl
and
scas
sub
cld
adc
sub
sbb
adc
dec
push
es
xor
mov
cmp
dec
into
sbb
leave
xor
push
sub
jmp
rorl
push
dec
pusha
cmp
add
adc
mov
gs
rorl
dec
mov
add
xor
imul
dec
in
lret
iret
out
add
jecxz
pop
mov
test
leave
xchg
adc
sub
aas
or
cmp
movsb
or
add
cwtl
sub
lret
add
fwait
sub
add
iret
or
add
dec
pop
shll
out
subb
adc
test
xchg
insb
pop
outsb
or
call
aad
sub
fstl
push
je
ret
adc
sub
loope
mov
mov
outsl
cmpsb
add
mov
cli
repnz
add
les
aas
push
sbb
sub
bound
sbb
or
fucomi
int
shrl
iret
push
or
rorb
jl
sub
add
add
or
jae
decl
stc
out
lcall
in
repz
subl
or
dec
sub
cld
test
mov
mov
push
or
push
xor
jno
sub
into
cli
and
adc
inc
cmovno
sub
dec
add
xor
push
add
fwait
out
std
jo
sbb
mov
mov
push
pop
jbe
sbb
pop
add
mov
adc
les
cmp
lods
and
stos
outsl
hlt
sub
dec
cli
inc
sub
roll
test
add
in
add
xorb
add
xor
out
pop
mov
lods
mov
mov
mov
adc
jnp
lods
loope
add
ret
mov
out
iret
inc
shlb
loop
add
lods
sbb
hlt
sub
jge
push
xchg
pop
clc
add
iret
lret
icebp
xchg
or
sub
and
loope
js
lds
imulb
mov
ds
jns
aam
sahf
xor
add
das
mov
js
pop
xchg
add
xor
test
dec
lock
sub
or
rcrl
xchg
and
adc
rcrl
ja
ret
jnp
add
add
dec
dec
ljmp
pop
jno
scas
xchg
ss
mov
add
xchg
xchg
or
dec
mov
fs
inc
les
add
lahf
sub
add
xlat
dec
in
mov
sub
mov
push
xor
popa
fsubrp
ficoml
or
inc
and
addb
cli
hlt
test
int
jae
movl
add
stos
clc
dec
sbb
xchg
roll
and
add
cmp
mov
jns
push
ljmp
add
lcall
adc
sub
sbb
in
jno
jp
outsl
mov
sarl
or
adc
sbb
in
or
rolb
adc
sbb
mov
xchg
mov
jg
pushf
ret
jbe
pop
xchg
jb
lods
or
jae
xlat
ljmp
sbb
mull
mov
roll
xchg
sub
arpl
ficoml
pop
enter
les
push
sub
fiadds
pop
xchg
jae
xchg
and
push
int3
mov
add
iret
stos
vaddps
add
cli
adc
mov
or
pushf
es
push
aad
mov
sti
sbb
mov
add
test
jge
xchg
dec
sub
in
popf
xchg
iret
push
leave
mov
popl
pop
push
fdivrl
adc
push
sub
dec
loopne
test
and
repnz
fldl
into
das
add
xchg
iret
and
sbb
enter
jns
cld
inc
lock
and
int3
filds
mov
out
inc
inc
insb
add
stc
mov
add
mov
lea
shll
push
lcall
mov
test
inc
andb
jmp
pop
movsl
add
ret
dec
mov
jl
mov
mov
pushf
call
xchg
xor
adc
xchg
add
pusha
mov
ret
loope
fildll
cld
xor
shl
push
pop
test
pop
add
ret
jne
add
inc
adc
dec
iret
stos
daa
inc
cwtl
in
xchg
sub
cmp
dec
jge
aas
idiv
inc
mov
pop
stos
jbe
lret
adc
mov
xchg
aaa
push
or
outsl
xchg
jns
jae
bound
divb
add
jecxz
test
out
inc
adcb
jmp
push
cwtl
cli
push
or
stos
cmp
xor
jnp
xor
jle
mov
jmp
aad
jl
int
out
dec
xchg
cld
add
or
push
fstpl
mov
pop
push
sbb
or
cmp
adc
js
and
push
inc
dec
xchg
dec
xchg
rcr
lahf
lods
or
xorb
dec
sti
pop
pop
dec
inc
in
cli
cmp
das
push
sub
arpl
mov
and
inc
dec
fs
stos
xor
icebp
mov
inc
adc
push
mov
in
lds
into
adc
testl
lahf
inc
cld
mov
pop
mov
lods
sbb
adc
add
roll
insl
mov
adc
push
lods
push
pmaxub
pop
adc
fld
js
mov
jo
lds
pop
mov
adc
sbb
sub
aam
inc
xchg
sbb
xor
add
ss
push
andl
cmc
cwtl
stos
sub
fadd
aas
outsl
hlt
ror
xor
dec
push
scas
add
stos
repnz
pop
testl
and
dec
lcallw
iret
pop
sub
mov
mov
fisttpl
loope
sti
mov
mov
ljmp
lea
out
iret
lcall
mov
xor
stc
push
std
add
pushf
mov
sbb
popf
dec
and
cmc
push
sbb
and
nop
dec
mov
shll
sub
pushf
xchg
dec
leave
jns
lret
mov
into
fdivrl
into
cmp
cmp
std
int
jno
lds
popf
ret
push
nopl
test
loopne
lods
pop
stos
jne
pop
imul
sbb
push
push
jl
or
jns
sub
or
dec
push
cmp
jecxz
xchg
push
pop
dec
movsb
lods
insl
xor
inc
pop
daa
pushf
and
stos
pop
push
push
sbb
mov
enter
lret
andps
sti
lahf
cmp
arpl
add
dec
mov
or
or
iret
jmp
add
pop
push
cmp
les
adc
scas
push
jp
dec
rorb
jbe
mov
xor
movsb
test
dec
jmp
add
stos
cld
stc
xchg
add
js
add
cmpsl
push
mov
push
xor
dec
stc
mov
push
fwait
stos
insl
push
scas
adc
jecxz
xchg
inc
testb
ss
sbb
dec
loope
enter
cmpsl
shrb
fnstenv
cwtl
sarl
xor
cmovb
repnz
mov
out
test
lret
mov
or
xor
mov
es
ret
add
lcall
adc
pop
sub
das
ds
icebp
sbb
push
stc
add
mov
lock
sub
xchg
add
add
fisttpll
add
cmpsb
mov
jmp
roll
in
push
cmp
subb
fwait
or
int
insb
nop
rorl
pusha
std
add
dec
jl
jbe
ljmp
cmp
fstps
fcomps
leave
or
add
fistl
das
lret
fwait
iret
xchg
sub
bound
pop
leave
pusha
add
push
sub
popl
mov
push
fidivs
aas
push
jae
jb
jne
pop
sub
add
ds
std
xchg
iret
inc
and
mov
sub
adc
xchg
fwait
rcrb
jnp
bound
mov
faddp
pop
stos
and
or
lock
mov
mov
push
pushf
sbb
fistpl
mov
fstpt
or
fwait
and
mov
add
jl
dec
push
adc
fwait
sbb
cli
xor
fwait
cmc
dec
push
repz
mov
js
inc
mov
sti
mov
cs
dec
lods
mov
pop
in
pop
sbb
out
sub
push
inc
add
and
cwtl
testl
pop
idivb
imul
imul
cmp
and
mov
adc
add
sub
xor
inc
dec
xchg
inc
clc
andb
pusha
les
and
cmp
sbb
imul
leave
iret
sbb
sub
addr16
mov
add
jns
insl
cwtl
insb
dec
iret
xchg
das
in
push
shrb
mov
notl
movsb
cwtl
les
add
outsb
out
push
or
jo
std
cld
jno
dec
stos
pop
imul
inc
shl
icebp
sahf
out
add
mov
sub
lahf
sub
add
cmp
shr
std
add
popa
and
push
filds
sti
cltd
in
jp
dec
decl
in
pop
mov
push
pop
hlt
inc
cmpsb
outsb
add
stos
mov
add
aam
pop
sbbb
jne
mov
lods
add
mov
xchg
iret
sbb
jno
ja
insl
adc
pop
je
mov
add
testb
adc
sub
lods
xchg
rolb
icebp
add
xchg
pop
cmpsl
cmp
sub
and
dec
imul
inc
add
sbb
arpl
insl
fwait
aas
out
rolb
push
fiadds
inc
icebp
stc
or
jle
popf
out
xlat
in
dec
fs
or
cmpsl
lret
cmp
or
std
sub
add
shll
xchg
jge
xor
test
mov
scas
insl
ret
int3
jno
or
test
je
push
jecxz
add
mov
jb
stc
dec
fildl
ljmp
iret
aas
imul
dec
pop
fisttpll
xchg
mov
mov
jnp
xlat
mov
dec
inc
adc
ror
stos
mov
into
sbb
aad
and
cld
dec
icebp
addb
mov
xchg
add
pop
add
ret
and
inc
inc
mov
cmp
jns
cmpsl
out
sbb
pop
pop
ljmp
add
je
cmp
inc
mov
out
dec
mov
andb
pushf
push
in
in
scas
mov
mov
sub
add
jbe
adc
testb
xor
mov
dec
mov
ss
lods
ja
xorl
cmp
call
lret
enter
mov
push
cli
idivl
mov
and
int
jb
adc
push
and
pop
or
cs
inc
pop
sbb
ret
add
push
xchg
lcall
and
decl
adc
sub
out
and
ret
int
daa
ss
xor
push
mov
addr16
and
and
push
sbb
jge
pop
add
sbb
nop
roll
das
popf
pop
and
adc
dec
jae
rclb
orb
or
bound
loopne
jle
adc
stos
outsl
rorb
xchg
cmp
movl
std
setb
xchg
mov
scas
mov
push
nop
cmp
int
shlb
mov
and
mov
int3
clc
pop
mov
pushf
mov
adc
insb
add
mov
mov
or
push
and
sbb
or
fdivrl
mov
aas
in
or
mov
xor
sbb
xchg
btr
dec
xor
lfs
xor
pop
dec
lcall
sbb
into
cli
dec
mov
loop
comiss
data16
mov
test
sub
fsubs
mov
sbb
scas
cmp
jl
cmp
push
fdivrl
adc
cld
test
mov
mov
rolb
sbb
sub
js
sub
cmp
fisttpl
adc
mov
dec
lea
sbb
clc
mov
add
xor
and
add
je
sbb
add
std
inc
push
sub
outsb
mov
inc
or
or
stos
mov
xorl
insl
rcll
or
shll
push
push
das
outsb
xchg
sbb
or
mov
jp
dec
mov
xor
imull
rcrb
arpl
or
push
cld
lea
js
sbb
fldt
mov
adc
scas
pop
lret
sbb
sub
jo
mov
sbb
out
addr16
subb
adc
repnz
cli
xchg
push
mov
cs
icebp
fmull
ljmp
inc
sbb
adc
cmpsb
mov
dec
es
xor
push
mov
adc
cmp
fcompl
sub
cmpsb
adc
repz
fildll
cmpsb
push
imul
nop
test
les
decb
test
les
aad
lret
or
jnp
pop
lret
cmp
aas
or
xchg
mov
mov
dec
pushf
xor
inc
cmp
push
jle
dec
cmp
leave
arpl
pushf
xchg
out
mov
pop
stc
jmp
sbb
cli
adc
jle
inc
or
fistps
push
inc
mov
mov
mov
cli
shlb
sub
adcb
orb
int
cltd
push
push
pop
loopne
jb
iret
les
les
mov
rol
adc
incb
aaa
mov
aam
sbb
jne
mov
and
mov
fsubp
cmpsb
aam
hlt
mov
imul
fcmovnu
push
cmp
aaa
inc
add
mov
and
adc
xchg
int3
sub
cltd
movsb
mov
mov
das
or
cwtl
inc
sahf
xor
jp
loop
pop
pop
and
pop
int3
es
push
aas
test
daa
out
and
pop
ja
push
sub
insl
xchg
mov
test
add
or
cmp
sub
and
test
cmp
int
mov
push
outsb
mov
dec
push
or
sbb
sub
push
int3
incb
loop
fists
inc
mov
testl
arpl
out
dec
cmp
negl
dec
sbb
mov
iret
popa
adc
xor
loop
sbb
sub
mov
iret
ljmp
sub
dec
inc
ret
dec
mov
sahf
and
roll
xchg
adc
aam
adc
dec
xchg
daa
or
rorl
outsl
int
fldt
mov
add
cmp
mov
sbb
sub
adc
cmp
in
cmp
dec
ljmp
add
push
sbb
cwtl
dec
adc
iret
ficomps
push
mov
ds
fldt
nop
mov
cwtl
cmp
mov
hlt
mov
cmp
mov
add
or
and
int3
dec
pop
fsubrl
nop
ret
sbb
dec
push
js
scas
sub
cwtl
je
dec
clc
dec
gs
das
cmp
jo
push
xchg
int3
in
lret
mov
and
xchg
push
dec
or
aaa
jecxz
rcrb
and
add
es
fildll
jns
push
inc
pop
xlat
inc
push
lret
xor
xorl
dec
inc
mov
mov
icebp
and
dec
mov
cmp
dec
push
mov
sbb
xorb
xor
sbbb
mov
es
push
ss
dec
push
cmp
pop
adcb
rcll
xchg
xlat
lods
lret
xor
pop
rcrl
xchg
iret
lods
sbb
pop
mov
adc
mov
aam
fucomip
push
insb
insl
mov
sub
mov
xor
push
data16
cmpsb
cs
imul
jge
pusha
and
scas
outsb
push
inc
out
pop
ss
pop
adc
pop
cli
jg
pop
ljmp
jmp
pop
shlb
xchg
dec
iret
mov
push
xchg
sbb
adc
xor
sub
mov
fidivs
xor
and
xor
or
push
cwtl
test
xor
repnz
cwtl
and
fsubr
decl
ss
int3
mov
add
lods
and
int3
jae
js
push
sub
in
das
sub
jbe
push
dec
sbb
scas
xor
repz
cs
and
out
and
ljmp
jmp
and
out
push
adc
cli
outsl
or
pop
adc
sub
addr16
sub
push
add
test
adc
dec
es
fisubrl
add
xchg
lcall
arpl
test
xor
out
inc
in
xor
mov
adc
push
out
xor
dec
das
sub
enter
out
add
xor
psrlw
mov
aaa
sub
movsl
icebp
pop
imulb
jbe
popa
aas
pop
jecxz
mov
testb
add
imul
loop
das
fiadds
shl
insb
jbe
xchg
popf
sub
popf
push
sbb
or
jle
aam
les
aaa
sar
lahf
enter
mov
mov
sbb
sbb
data16
loope
xorb
pop
int3
pop
push
jp
xchg
add
jl
cmp
mov
dec
xchg
movsl
das
adc
cmp
into
shr
pop
inc
dec
pop
sbb
lods
mov
sbb
je
pop
add
loop
pushf
push
mov
cmp
fwait
cmp
out
or
insb
fisttpll
cmp
in
or
inc
cmp
call
not
pushf
mov
popf
xchg
dec
xchg
cmpsb
jp
or
push
xchg
lcall
or
das
movsl
xchg
xor
sub
add
inc
jno
js
pop
lds
cltd
inc
insl
mov
xchg
lods
test
dec
fidivrs
icebp
cmp
adc
xor
pop
rorl
mov
notl
add
rcrb
cmp
mov
or
lret
es
test
mov
sbbb
test
sub
data16
and
xchg
mov
mov
jno
push
jecxz
lock
rcrb
dec
dec
and
mov
dec
loop
cmpl
iret
sub
sbb
loop
insl
xor
xchg
lds
push
cwtl
jno
push
mov
add
das
push
push
js
push
cs
ljmp
push
sub
jle
dec
iret
clc
in
sbb
xor
jge
adc
push
mov
out
dec
or
hlt
hlt
mov
stc
gs
push
les
dec
inc
scas
cmp
dec
mov
in
cmp
mov
loopne
jle
in
xchg
pusha
sub
imul
loopne
jae
xor
popa
pop
aas
xor
aam
rcr
orb
addr16
les
and
pop
in
das
sub
lcall
xchg
inc
xchg
push
mov
jnp
nop
pop
inc
cmp
mov
xchg
sub
cmp
inc
mov
sub
inc
ljmp
sbb
testb
pusha
xchg
inc
cld
or
or
mov
adc
push
or
xor
mov
sbb
xchg
adc
aas
mov
jne
fsubl
mov
popf
cmp
cld
bound
int3
dec
je
shrb
je
jb
pop
cmp
cs
mov
out
imull
adc
sarl
ds
es
lret
xchg
xchg
int
push
imulb
push
enter
mov
int
mov
inc
negl
add
mov
jbe
aam
jl
xor
mov
sub
inc
popf
enter
es
xchg
and
aam
es
pop
adc
aam
push
sub
icebp
and
pushf
xor
enter
fcomip
mov
pop
inc
mov
aam
sbb
mov
xor
adc
test
pop
imul
enter
mov
adc
nop
in
sbb
mov
jle
and
sub
xchg
cmp
xor
ljmp
push
sub
sbb
aam
xor
push
lea
movsb
sub
xor
and
xchg
popa
add
mov
add
pop
cmp
stc
movsl
push
mov
divb
jns
addr16
jl
cmc
fxch
fwait
mov
xchg
pop
mov
xchg
mov
pop
scas
ficompl
mov
les
gs
mov
add
or
xor
xchg
adc
faddp
mov
push
dec
jbe
dec
mov
inc
add
adc
sbb
inc
mov
int3
sub
or
ljmp
les
dec
xchg
adc
lock
cwtl
add
imul
add
ds
stos
jg
push
dec
adc
sub
rorl
lods
mov
and
mov
cmpsl
mov
pop
dec
or
lahf
adc
addr16
lods
addr16
enter
mov
mov
sbb
sbb
imul
push
sbb
cmp
mov
push
leave
adc
jl
pop
stos
frstor
and
sub
or
jg
call
xchg
cmp
add
out
sub
sbb
nop
dec
pop
cmp
notl
mov
cmc
xchg
rorl
pop
in
out
push
sub
push
xchg
aam
xor
imul
xchg
sub
inc
add
and
cwtl
imul
xor
or
sub
imul
insl
in
rolb
dec
arpl
lahf
and
or
sub
popaw
cmp
jnp
push
mov
mov
cld
or
sbb
pop
aam
cmp
insl
popa
add
imul
push
push
or
and
std
xor
adc
testl
cmp
shll
mov
es
loop
sub
sub
das
sub
sbb
out
mov
in
shll
push
subl
sub
iret
dec
cmp
and
repnz
inc
cmp
mov
inc
int
sub
stos
cmp
ljmp
pusha
sbb
fistps
dec
shl
test
sbb
mov
repz
inc
int3
adc
mov
movsb
jge
outsl
jns
cmp
push
adc
leave
pop
jg
mov
xor
mov
jecxz
jns
nop
xor
fstpl
xchg
lods
pop
sub
and
mov
pushf
xor
repnz
movsl
repz
andb
sbb
leave
pop
cs
test
add
sbb
dec
popf
stos
out
repz
lret
cmp
in
sub
int
test
xchg
dec
adc
sub
sub
xchg
mov
gs
mov
movsb
cmpsl
cmpsl
adc
fbstp
int3
cmp
mov
sub
test
mov
add
fs
sbb
daa
inc
pop
nop
pop
bnd
addl
mov
in
fidivrs
dec
sub
mov
cmp
mov
inc
sub
push
push
popf
pop
and
inc
mov
inc
rclb
int3
movsb
decb
sub
pop
push
adc
rorb
lret
push
std
cmp
xor
xchg
adc
dec
xor
mov
push
nop
flds
xor
scas
xchg
xorb
fwait
das
jge
sub
and
mov
cwtl
nopl
sub
dec
cmp
sarl
repnz
stos
push
xchg
pop
mov
and
adc
mov
push
and
jle
lock
sub
cld
sub
shrb
dec
in
pop
jb
lds
dec
sbb
push
stos
mov
into
push
js
shll
sub
inc
jl
inc
das
inc
mov
push
or
loope
stos
stos
scas
scas
pop
aam
dec
in
fstl
cltd
popf
sti
sub
icebp
mov
sbb
adc
cs
sbb
addr16
push
jnp
leave
xor
or
lcall
mov
add
mov
ss
fidivs
sbb
mov
adc
mov
sbb
scas
sub
inc
std
jmp
xor
push
ja
cmpsb
mov
cwtl
xor
dec
jbe
in
sbb
pop
adc
aas
sub
jg
adc
shll
and
mov
sub
into
jne
je
dec
aaa
ss
pusha
dec
or
lea
sbb
xor
mov
fists
add
and
sbb
movsl
pop
adc
dec
dec
cmp
cwtl
lds
into
push
aaa
std
add
inc
les
rcrl
cmpsb
and
ljmp
out
call
cmp
adc
dec
mov
nop
pop
sbb
cli
jo
add
mov
pop
adc
push
mov
cwtl
adc
jecxz
mov
das
notb
js
push
xchg
adc
repnz
jmp
pop
mov
cli
dec
pop
or
punpckhwd
sub
jns
arpl
jns,pn
insb
and
and
jne
adc
cvtdq2ps
shlb
sahf
adc
push
jno
scas
adc
dec
or
das
sbb
insl
test
adc
jecxz
addr16
adc
push
dec
jo
pop
inc
cwtl
imul
call
lea
dec
aam
adc
or
or
aad
push
pop
aaa
fucomip
dec
shl
xor
sbb
test
data16
or
xchg
ret
inc
ljmp
leave
dec
xlat
push
imul
adc
std
push
inc
push
fiaddl
das
sub
and
testl
or
into
popa
or
adc
or
dec
or
das
popa
or
pop
mov
nop
pop
lahf
ljmp
aam
jbe
out
cmp
inc
fidivs
pop
subl
leave
loop
aad
popa
push
push
jge
mov
mov
add
cs
adc
stos
repnz
cltd
dec
iret
dec
mov
loope
clc
xor
jmp
jno
insl
cwtl
inc
dec
iret
insl
inc
jno
xor
jae
dec
std
adc
sarb
mov
addr16
lock
movl
subb
sub
xchg
pusha
or
pusha
push
and
fbstp
push
inc
popa
pop
pop
and
and
or
les
and
scas
sub
dec
inc
mov
cld
sti
and
dec
dec
test
mov
pusha
xchg
xchg
shl
add
mov
shlb
dec
loope
out
or
pushf
sub
cmpsl
inc
int
and
fs
jo
stos
dec
sahf
das
inc
idiv
push
lcall
fisubrl
push
jnp
inc
mov
add
imul
pop
and
dec
das
xor
xchg
jmp
mov
adcl
lahf
cwtl
pop
xor
test
push
incb
pop
ja
sahf
adc
dec
xchg
fs
out
push
xor
sub
sub
inc
push
loopne
pop
dec
fisubl
sahf
sub
adc
repnz
dec
xchg
adc
jge
push
mov
lods
ljmp
jnp
sbb
cmp
fs
adc
fbld
xor
cmp
fbld
mov
aaa
outsl
pop
lcall
xor
pop
hlt
and
sbb
cwtl
in
leave
dec
popf
jle
or
push
cwtl
inc
dec
fucomip
dec
lcall
mov
inc
mov
sti
lock
push
cmp
aad
in
adc
cmp
cwtl
nop
js
push
nop
xchg
sub
stos
insl
jnp
nop
pop
xor
xor
push
cwtl
ljmp
lods
pushf
inc
or
sub
and
lods
movsb
inc
or
push
test
mov
sub
push
mov
inc
or
jg
and
sbb
in
scas
dec
inc
or
sbb
lret
jmp
int3
sub
cmp
pop
xchg
sbb
and
cmpsb
inc
lds
push
in
adc
or
cs
jnp
pushf
cld
int3
or
push
mov
push
es
adc
aam
lods
push
sub
push
mov
jge
fdivl
inc
clc
idiv
pusha
inc
shrb
pop
cmp
lahf
and
push
sti
xor
xchg
cmpsl
das
push
jnp
cwtl
dec
aad
or
jne
push
cwtl
inc
lret
sub
aad
repz
ss
pop
imul
aad
test
js
dec
or
hlt
mov
and
jmp
mov
jl
or
nop
out
call
jp
jl
jmp
mov
insl
sbb
and
fnstsw
mov
dec
cmp
push
push
push
hlt
or
in
push
repz
inc
push
adc
hlt
push
mov
inc
mov
push
test
in
aam
mov
test
push
mov
dec
dec
out
fcoms
dec
sbb
pop
sbb
aam
dec
sbb
mov
je
sbb
rcrb
pushf
adc
xchg
enter
loopne
lods
pop
lock
mov
sahf
push
lods
jo
mov
iret
sub
pop
xor
insb
dec
loopne
cmp
push
fistps
adc
inc
jae
push
aad
aas
imul
in
pop
sbb
xchg
fs
iret
push
add
pop
mov
cli
add
sbb
out
jmp
pop
push
jno
test
das
adc
sbb
test
stos
mov
addr16
mov
ficoms
pop
push
pop
pop
int3
lods
push
and
mov
push
fsubrl
aaa
jne
rcrl
icebp
dec
popf
jnp
pmaddubsw
stos
lods
hlt
xchg
sahf
popf
jnp
inc
cmp
popf
push
sbb
mov
xchg
mov
scas
mov
pop
dec
outsb
cs
adc
outsb
movsb
dec
sub
mov
daa
out
cld
adc
pop
dec
inc
inc
outsl
outsb
mov
or
les
push
cmpsl
bound
push
sbb
dec
das
mov
push
test
mov
sub
inc
test
shl
jbe
es
fists
and
ljmp
aad
je,pn
jecxz
cwtl
push
dec
inc
outsb
push
jo
mov
sbb
insb
jnp
pop
inc
fucomi
data16
lock
jae
in
xor
sub
jg
lret
leave
fisubrl
jae
int3
mov
jp
fcomps
pop
je
xchg
add
das
lea
xor
out
pushf
sbb
iret
aas
xchg
nop
sahf
adc
adc
sahf
mov
ss
jp
pop
adc
les
mov
push
sbb
xchg
pop
sub
les
sbb
xchg
lods
and
cli
notl
and
sbb
nop
mov
nop
and
mov
repnz
sub
dec
ret
push
sub
mov
push
xchg
aad
sub
inc
fiaddl
decb
aam
sub
jg
jno
js
sub
or
addb
enter
push
cmp
or
lods
xor
fdivs
aad
in
and
inc
sub
pop
dec
shl
inc
inc
push
ds
xor
cmp
sub
repnz
xlat
mov
and
xchg
cmp
pop
repnz
cmp
dec
cli
mov
or
addr16
sti
cwtl
mov
adc
and
das
nop
xor
pusha
dec
dec
nop
push
push
or
xor
repz
xchg
jmp
fs
loop
inc
enter
adc
xor
aas
dec
xlat
out
sub
pushl
sahf
or
adc
lret
and
sub
pop
imul
shl
lea
lock
xor
fs
dec
push
dec
and
sbb
mov
push
xchg
cwtl
pop
in
sub
lret
cmp
and
ljmp
xor
dec
add
faddp
dec
adc
dec
or
xor
jle
cli
and
shl
ljmp
or
mov
pop
cs
fdivr
stos
fmull
sbb
nop
inc
sbb
sub
dec
add
fimuls
inc
std
push
nop
and
es
ljmp
in
insb
fdiv
pop
ret
xchg
pop
sub
fnstsw
mov
push
add
out
mull
rcr
pop
inc
into
and
repz
adc
pop
ja
xlat
repnz
data16
aas
idivl
pop
cmpsb
loop
push
cmp
fimuls
xor
call
xchg
and
sbb
push
dec
cmp
lock
cmp
pushf
je
push
sub
or
adc
and
mov
js
xchg
mov
sub
loop
insl
addb
or
adc
and
and
lock
das
push
jnp
pop
test
lock
xor
mov
xor
mov
lret
mov
imul
mov
lahf
daa
jmp
leave
in
rorb
cli
adc
adc
and
fiaddl
pop
ljmp
dec
lret
fwait
mov
ret
xorb
pop
in
mov
sbb
sub
rcll
jo
xor
ret
imul
cmp
adc
adc
repnz
pop
mov
imul
notl
and
jle
push
inc
or
enter
add
insl
std
xchg
jns
shl
xchg
sbb
imul
imul
cld
std
inc
loop
sub
sbb
and
dec
or
div
jne
stos
cltd
cwtl
hlt
sub
enter
jns
adc
pop
imul
jno
xchg
jno
add
jns
xchg
push
aad
addr16
adc
das
push
jg
shll
lahf
in
mov
fcomip
jnp
dec
jno
in
lahf
fs
lock
cmp
lods
lock
jo
daa
out
popf
lock
mov
push
xor
in
add
in
dec
outsl
sub
stos
inc
or
shrb
inc
or
mov
add
push
insb
ljmp
add
push
inc
mov
sub
inc
nop
pop
cwtl
sbb
cmp
xchg
jg
cmp
inc
ja
and
rcrl
pushf
or
mov
ja
shlb
in
sbb
adc
mov
mov
cs
aam
lods
gs
imulb
mov
pop
mov
mov
jg
orb
and
jg
mov
cmp
fwait
xchg
xchg
jg
lods
imul
stos
roll
es
jle
xor
or
mov
push
pop
xor
xchg
cwtl
sub
cwtl
pop
icebp
mov
pop
test
or
cmp
dec
sub
jmp
cwtl
sub
iret
nop
pop
sub
xor
imul
push
dec
dec
mov
jno
add
aaa
imul
xchg
in
sub
mov
gs
aam
std
jg
lahf
mov
mov
dec
jge
cmp
icebp
sub
stc
xchg
stos
cs
fistps
in
dec
pushw
stos
inc
jmp
sub
cltd
xchg
cwtl
mov
or
insb
and
lret
cmp
add
xchg
ljmp
fisubrl
add
xchg
gs
dec
pop
out
or
dec
scas
sub
dec
xor
imull
in
xchg
fwait
and
nop
xor
stos
imul
nop
pop
push
or
sbb
add
pop
fisubs
dec
js
push
inc
sbb
mov
insb
ja
mov
pop
int3
dec
inc
stos
cwtl
or
mov
jl
xor
push
cmp
mov
dec
mov
test
lods
push
sub
jb
popf
pop
icebp
xchg
test
jb
fidivrl
in
icebp
xor
insl
jg
test
sbb
jp,pn
push
out
cmp
es
xchg
inc
pop
lahf
dec
cmovg
scas
std
scas
fstl
mov
out
pop
mov
addr16
test
iret
push
xchg
jbe,pn
mov
lret
outsb
fs
cli
test
andnps
lret
aam
xor
and
lods
sbb
outsl
xchg
sbb
and
aaa
jo
mov
cld
xchg
imul
lods
cmc
repz
lea
repz
push
push
cmp
xchg
lods
mov
cmp
leave
pop
xchg
or
out
mov
int3
cmp
loope
adc
dec
shl
ja
enter
add
andb
push
jb
jle
repz
cli
xchg
lds
andl
fcmovne
mov
jno
dec
xor
mov
dec
into
lea
mov
xchg
and
mov
aad
xchg
das
jb
mov
cmp
mov
mov
xor
rorb
jo
mov
cs
fildll
dec
cld
mov
push
in
push
int3
add
scas
jl
cs
sbb
push
jno
in
jns
das
mov
stc
fistps
dec
xor
incb
test
jne
aam
cmp
add
push
sub
idivl
sub
mov
or
shrl
sbb
orl
ds
push
sub
mov
daa
or
add
pop
xor
xlat
adc
add
repz
mov
into
sub
xchg
outsb
sub
xlat
ja
call
cmp
mov
rolb
sub
rcr
pop
dec
test
sbb
jg
mov
pop
dec
aas
insb
testl
or
aam
add
pop
inc
pushf
popa
adc
lock
std
scas
and
mov
cli
add
insb
xchg
dec
cmp
pop
sbb
xchg
leave
add
add
or
or
aas
shlb
mov
mov
aam
add
lock
icebp
cld
fstpt
add
add
sbb
shrb
add
inc
ret
jns
repnz
xchg
cmp
mov
pushaw
inc
popf
out
mov
xlat
add
mov
sub
stos
mov
sbb
and
mov
in
adc
dec
lds
dec
mov
sbb
mov
mov
xchg
add
push
pop
mov
push
pop
mov
dec
push
mov
and
outsl
cld
je
add
pop
xchg
dec
enter
ss
adc
mov
shrl
lea
das
push
aaa
cmpsb
cmp
pusha
dec
mov
push
cmp
je
add
lcall
inc
shlb
mov
mov
ljmp
jae
push
or
add
jmp
sti
sbb
clc
xchg
mov
push
je
or
sub
dec
ljmp
sbb
sti
int
andb
push
pop
push
jnp
cld
or
js
out
push
mul
dec
sbb
mov
fiaddl
icebp
rorb
in
xchg
inc
sub
inc
lahf
stos
gs
add
loope
push
adc
push
xor
movsb
mov
js
outsl
fisubrl
add
ret
ljmp
add
in
popl
sbb
xchg
push
mov
jp
and
ret
jb
repnz
aas
into
push
inc
data16
movl
push
fucomp
jge
jmp
sub
add
cmp
adc
xchg
rorb
loope
lahf
mov
lret
outsb
sub
mov
add
and
add
pop
rcll
imul
pushf
je
and
mov
ja
ror
pop
faddp
add
loope
cmp
and
loop
into
push
into
mov
add
sbb
xchg
mov
xor
jne
mov
insl
dec
or
mov
adc
jns
enter
lods
push
inc
int3
mov
stos
scas
jl
sub
sbb
in
out
xor
push
dec
repnz
inc
jno
repnz
es
cmp
push
mov
adc
dec
outsl
xor
idiv
mov
imul
lcall
mov
xor
out
test
sbb
mov
loopne
add
adc
ret
push
cmp
test
and
ss
imul
mov
in
std
loope
subl
push
push
ljmp
cmc
jo,pn
fistpll
cltd
pusha
mov
inc
mov
rorb
cmp
add
mov
push
pop
stos
notl
push
out
lahf
insb
icebp
or
xchg
lods
decl
mov
mov
cmpsl
dec
insb
and
call
cld
mov
pushf
subb
cwtl
push
sbb
inc
cld
sub
xchg
sub
sbb
aas
mov
leave
iret
das
aaa
push
test
push
jmp
cs
ljmp
jl
shlb
or
dec
out
daa
jl
sub
xchg
jl
nop
dec
and
aam
xor
or
sub
adc
pop
pop
sub
push
repz
addr16
popf
mov
jbe
pop
enter
sbbl
jle
enter
sahf
sar
adc
push
inc
xchg
xor
fdivl
sub
mov
fldcw
sub
push
sbb
inc
sub
test
pop
xchg
dec
das
fimull
cs
lcall
and
out
push
xchg
dec
rclb
aam
fcomps
push
call
jle
aam
fcomps
sub
dec
in
call
push
adc
ds
and
mov
sbb
mov
cwtl
sub
fisubl
sub
adc
pushf
dec
lret
rcl
movb
push
sbb
or
dec
movsl
sbb
mov
or
nop
loope
lahf
mov
pop
dec
inc
sbb
mov
shrb
xor
popf
mov
xor
pop
hlt
or
dec
scas
aam
pop
push
dec
fdiv
xor
repnz
add
fcoms
das
out
xchg
and
push
out
aaa
ror
ficomps
dec
sbb
iret
nop
ljmpw
cld
sbb
push
inc
ljmp
push
sbb
insl
mov
lahf
pusha
cwtl
insl
aam
rcl
fs
fs
aad
jg
lds
int3
repz
pop
push
jo
inc
leave
pop
cwtl
sarb
jns
push
lret
insb
jnp
mov
sub
xor
cmp
stos
popf
cwtl
shl
xchg
sbb
test
dec
push
std
cwtl
inc
leave
pop
inc
idivb
ljmp
in
xchg
inc
or
mov
ljmp
scas
adc
test
inc
or
sub
nop
sub
xor
faddp
notl
xchg
jo
pop
or
adc
push
mov
sub
pushf
push
lds
sub
adc
add
mov
and
and
add
lock
js
push
dec
insl
int3
sbb
js
push
dec
fs
sbb
dec
and
adc
jecxz
loopne
sbb
cwtl
jle
lds
lods
or
sub
jnp
mov
or
xor
and
pop
nop
mov
cmp
fucomi
xchg
popa
roll
xchg
xchg
inc
push
xchg
dec
push
cli
xlat
gs
push
push
popf
push
jo
insl
popa
push
sub
push
movsb
insl
xor
xor
dec
icebp
dec
sub
sti
cmp
and
dec
push
push
insl
popa
mov
out
xor
nop
fsubrl
pop
cwtl
dec
xor
xor
nop
aas
and
push
xchg
sub
dec
sub
inc
iret
das
push
push
sub
sub
dec
lret
push
pop
and
and
push
mov
mov
lods
sbb
imul
sub
enter
xor
movsl
pop
cld
cmp
daa
ljmp
leave
loope
cmp
mov
xchg
jb
and
push
push
sbb
fnstcw
leave
jmp
data16
push
mov
js
jp
or
push
enter
test
jle
jnp
nop
dec
sub
les
xchg
sub
and
rclb
jg
dec
lods
insb
sbb
or
ret
cmp
fdivp
or
xchg
jo
xor
dec
or
hlt
lods
sbb
out
xor
and
sub
sbb
nop
test
adc
or
and
cmp
adc
or
rcrl
test
gs
or
adc
push
and
jns
int
in
inc
mov
nop
mov
fimuls
xchg
test
adc
gs
push
mov
mov
dec
pop
xchg
sub
pop
sub
add
and
rorl
insl
and
mov
and
clc
pop
sbb
pop
sbb
hlt
pop
xlat
lods
push
adcl
fistpl
movsb
insl
xor
xor
repnz
push
sbb
mov
push
xchg
push
pop
sbb
dec
cmp
cmp
fcmovbe
loopne
cs
xor
mov
inc
push
mov
nop
pop
rcrl
xchg
aam
xor
imul
adc
dec
add
dec
fstpl
inc
cmp
das
and
cwtl
in
fsubrs
and
cmp
out
scas
mov
push
push
and
scas
cmp
sbb
cmp
in
mov
or
std
pop
sbb
notl
pop
jo
test
pop
fs
jno
sub
lahf
insb
cwtl
pop
aam
pushf
movsb
test
out
pop
fwait
adc
cmp
and
jbe
nop
repz
and
push
xchg
push
sbb
pushf
mov
sub
in
xor
xchg
push
and
xchg
and
into
in
insl
sub
xor
xor
lods
loope
inc
or
and
mov
adc
sub
and
add
sub
pop
rcrb
aas
pop
xor
movsl
aam
and
push
push
push
xchg
in
cs
adcb
mov
notb
daa
iret
ljmp
cld
gs
pop
dec
add
sti
sub
stos
mov
mov
mov
inc
mov
outsl
fwait
mov
push
test
clc
and
pushf
aaa
inc
insl
pop
mov
mov
sub
pop
nop
jle
xchg
loop
outsb
sti
adc
cwtl
cmp
inc
sbb
shrb
sub
imul
xchg
dec
adc
out
roll
adc
jmp
mov
imul
push
shlb
imul
mov
out
and
jge
inc
iret
mov
sbb
loopne
stc
mov
mov
sub
inc
ficoms
outsl
mov
mov
lret
sbb
sub
dec
sbb
imul
sub
xchg
std
or
fcompl
sbb
xor
sbb
push
sbb
popa
fs
inc
mov
sub
scas
adc
adc
int
push
jp
in
dec
mov
mov
mov
in
or
scas
sub
dec
popa
pop
and
cs
push
fwait
xchg
push
imul
sub
mov
adc
scas
into
sbb
mov
cmp
ret
mov
das
popa
ret
and
lcall
add
pop
mov
or
pop
loop
imulb
dec
jo
cmp
adc
mov
xlat
add
mov
xor
cmpsl
add
pop
push
xor
dec
xchg
add
mov
mov
into
lock
adc
xchg
stos
lcall
enter
sti
xor
ja
aad
mov
scas
push
inc
pop
dec
in
push
mov
fsubs
nop
jne
add
pop
mov
mov
lods
push
iret
sbb
sub
insb
and
xchg
push
push
xchg
nop
aam
pop
xchg
cltd
and
loope
repz
aad
sarb
in
lods
fisubrs
and
pop
dec
adc
xchg
jo
cmp
in
mov
pop
inc
fwait
adc
pusha
push
sbb
hlt
std
out
xchg
pop
aam
xchg
jecxz
fnstcw
adc
jg
inc
jo
xor
rcl
push
cmp
nop
inc
sub
sahf
das
xor
lea
add
popf
leave
xchg
mov
in
sbb
imul
shrb
cmp
fs
and
push
aas
and
mov
pushf
in
ret
gs
or
test
mov
and
sbb
sahf
mov
pop
testl
jge
insb
jno
pop
sub
cmp
or
dec
pop
pop
sbb
int
popa
inc
inc
sbb
and
addr16
fnsave
ret
dec
stos
bound
xorb
dec
or
jecxz
insb
pop
repz
mov
rclb
push
inc
mov
stos
pop
jp
icebp
sub
and
ret
xor
lods
and
pop
cmpl
loop
les
sbb
xrelease
cmp
call
repnz
shlb
jmp
lahf
cmp
aas
clc
push
cld
nop
add
push
xchg
pop
xchg
rcll
pop
aam
pop
mov
pusha
push
adc
push
push
sbb
mov
xchg
rcrl
xchg
sbb
and
lcall
xchg
mov
pop
adc
bound
pop
pop
lahf
fbld
mov
data16
add
daa
cmpsl
out
sub
test
ljmp
lahf
or
fldt
sbb
nop
rclb
push
rcll
in
push
adc
xchg
xchg
xor
push
es
pushl
shll
movsb
loopne
pop
push
and
xor
frstor
push
pop
test
lahf
or
add
jle
mov
daa
push
adc
dec
clc
jb
into
sbb
dec
or
lahf
ja
rolb
imul
adc
mov
dec
or
loop
ljmp
lcall
divl
dec
iret
test
dec
dec
mov
lds
mov
pop
mov
xor
out
lea
push
add
or
mov
sub
mov
cmc
jae
xor
fadd
mov
fistps
cmp
data16
cmpsb
push
mov
add
repnz
add
imul
add
sub
fldcw
test
mov
repz
pcmpgtw
add
cmpsl
lret
dec
in
orb
add
fs
jge
dec
add
pop
and
add
add
or
dec
add
mov
cmc
or
cmp
add
inc
push
jp
fxch
imulb
daa
into
pop
pop
js
cmp
dec
loope
addr16
dec
cmc
inc
inc
sbb
mov
pop
mov
sub
add
adc
cwtl
out
sub
roll
jecxz
cld
pop
or
add
leave
icebp
shlb
xchg
movsl
lea
adc
xor
adc
dec
push
cs
adc
call
add
test
add
add
rorl
mov
add
push
jge
add
fsubr
lahf
bound
shlb
add
lds
mov
mov
leave
rorb
inc
shrl
sbb
je
ljmp
lcall
mov
lahf
xchg
add
fidivl
jnp
push
out
jae
insl
gs
mov
imul
faddl
mov
clts
flds
and
push
add
adc
sbb
dec
mov
bound
pushf
mov
test
test
jmp
mov
sub
testl
jns
fisttpl
add
mov
mov
mov
daa
ljmp
or
add
jno
fcomps
addr16
cli
mov
insl
fildll
sbb
add
push
xchg
pop
iret
shlb
add
es
sub
add
cmp
imulb
add
xor
dec
add
mov
add
imull
add
inc
add
push
daa
inc
push
adc
cltd
adc
jl
or
add
in
push
mov
lret
movsl
inc
adc
rorb
ret
cmp
mov
and
ret
add
add
add
xchg
pop
adc
mov
insb
fnstcw
idiv
or
les
sbb
cmpsl
dec
mov
add
mov
aas
mov
inc
add
test
ljmp
mov
mov
inc
xchg
int3
sub
add
les
in
pop
add
negb
add
loopne
sub
mov
and
mov
inc
sbb
pushf
lret
loope
inc
out
mov
test
outsb
out
jecxz
add
test
or
data16
inc
inc
addr16
ret
andl
sbb
out
out
mov
pop
mov
sbb
or
inc
les
pop
sbb
add
or
data16
daa
push
xchg
ret
cmc
movsb
imul
outsl
pop
filds
push
add
cmp
fiadds
rcrb
sub
adc
add
in
mov
and
lods
iret
addr16
dec
cmp
lcall
and
fs
arpl
fmuls
pop
into
add
iret
sub
inc
jae
clc
das
jnp
pop
flds
mov
add
loopne
cli
inc
rcl
mov
add
xchg
repz
roll
sub
add
push
movsb
je
fs
or
inc
imul
cltd
mov
repnz
sbb
push
sti
mov
leave
pop
jmp
gs
jl
testl
aam
inc
push
add
or
mov
pop
add
fs
inc
in
rol
jl
stos
loop
add
or
aas
jge
and
add
lret
add
inc
dec
in
mov
pusha
jecxz
xor
pop
imul
leave
push
outsl
or
push
mov
loopne
add
inc
in
lcall
movl
dec
jo
je
pushf
add
fimuls
xchg
shlb
push
sub
or
add
mov
insl
jl
push
das
out
sbb
push
mov
shr
mov
jp
lock
xchg
sub
or
mov
gs
add
jp
test
les
insl
dec
cld
lahf
sahf
in
mov
aas
or
rcr
mov
fisubl
mov
cli
dec
push
idiv
dec
leave
repz
or
and
in
ds
add
stc
cmp
add
test
sti
pushaw
icebp
sub
ret
shl
pop
orb
movsb
mov
out
insl
cmp
push
cmp
mov
mov
std
add
fwait
pop
test
lret
jae
cmp
int
sbb
jbe
lret
adc
mov
stc
jg
and
sub
sub
jmp
add
xchg
pop
or
mov
jle
xor
inc
outsb
addr16
insl
and
ficompl
fdivs
mov
arpl
xchg
xchg
je
pop
lds
push
mov
inc
pop
sti
add
dec
sub
jae
inc
mov
xor
jg
dec
pop
mov
mov
or
jp
adc
outsb
pop
into
aaa
adc
test
xchg
bound
mov
fwait
add
insb
out
shl
add
popf
hlt
out
fnsave
sarl
stc
add
mov
add
dec
xchg
mov
jne
xchg
sbbl
stc
add
roll
cs
or
dec
xchg
aas
mov
inc
mov
out
jmp
add
lea
mov
or
mov
test
enter
les
pop
movl
xor
ja
jmp
insl
inc
xchg
add
mov
sub
dec
test
sbb
call
or
lahf
mov
inc
cmp
movsb
mov
leave
or
iret
aam
sahf
add
loope
ficompl
fbld
sub
sti
rolb
lret
or
fisubs
mov
pop
adc
mov
mov
imul
dec
and
jnp
add
sbb
ss
mov
pop
into
fcmovnbe
xlat
int3
adc
cli
aam
daa
les
add
add
cltd
or
cwtl
inc
sub
jecxz
push
cs
jg
sub
call
add
jo
add
stos
sub
pop
pop
adcb
jnp
sub
imul
iret
push
mov
cmp
sbb
mov
inc
mov
cmp
add
hlt
testl
xchg
mov
aad
lods
dec
dec
jmp
cmc
loop
fidivrs
sti
add
popa
into
int
add
inc
mov
outsl
dec
inc
ret
aaa
fistl
cmp
leave
add
faddp
jp
daa
outsl
testl
ret
fcomps
dec
add
rorl
xlat
add
add
xchg
mov
add
sub
mov
sub
mov
push
jecxz
subb
into
popa
jo
imul
xor
out
sub
adc
push
cli
mov
lahf
push
mov
rcll
dec
fnstcw
jp
inc
pusha
xabort
out
or
divl
mov
xlat
shrb
add
lahf
int3
adc
call
jg
popf
jb
test
pop
cmc
sub
iret
cmpsl
dec
inc
jecxz
data16
adc
add
bnd
outsl
cmpsl
mov
test
pop
aad
rcll
data16
dec
loope
add
jle
aas
int3
sbb
in
mov
cmp
mov
add
jae
jge
push
into
fisttpll
ds
stos
xlat
jnp
add
cmp
in
adc
push
inc
adc
ja
mov
add
add
xor
adc
adc
insl
insl
testl
push
rcr
add
aam
leave
push
dec
mov
jl
push
push
cmpsl
gs
ljmp
aaa
leave
lods
xor
test
jg
aad
mov
test
imul
push
add
int3
mov
neg
or
mov
lds
push
aaa
sub
inc
iret
sar
stos
mov
ja
data16
pop
mov
xchg
mov
mov
jp
cltd
xlat
ljmp
xor
mov
sbb
xor
push
add
mov
iret
cwtl
add
xchg
in
cmp
jmp
add
cmpsl
cltd
ja
sub
loop
fcmovu
flds
stc
js
ds
scas
add
push
jno
cmp
idivb
js
add
add
sti
sbbb
mov
das
stc
mov
ja
ud2
arpl
scas
add
cmc
adc
daa
out
insl
xlat
xor
dec
inc
push
jge
movsl
pop
add
mov
leave
stos
test
or
wbinvd
adc
cmc
xor
out
mov
inc
lock
jnp
push
push
push
cmp
testl
xchg
jae
insb
sbb
dec
dec
push
ret
add
adc
sbbb
into
cmp
add
shlb
push
push
cmc
test
outsb
xchg
add
or
jae
out
add
scas
loope
xor
mov
arpl
adc
test
call
mov
sti
sbb
arpl
cs
xor
pushw
ret
inc
fstl
arpl
sbb
push
pop
xchg
inc
test
stos
mov
pop
or
arpl
inc
add
inc
ja
orps
add
mov
add
test
cld
aad
xor
jge
inc
outsb
mov
mov
xchg
sbb
jno
and
and
repnz
pop
repz
add
jecxz
jmp
add
mov
testl
loop
cmp
jo
push
and
adc
popf
add
add
outsl
push
dec
lods
hlt
lds
testb
fidivl
in
jg
add
fnstcw
xor
jne
pop
add
lcall
jns
int3
mov
lahf
movsl
add
pop
stos
push
jo
orl
pop
rol
add
rcrb
popa
pop
or
xchg
sub
mov
jne
sub
aam
call
pusha
dec
push
or
fnstcw
and
andl
sti
sub
add
add
add
jmp
aam
cmp
cmp
xor
fwait
add
push
imull
xchg
ficoml
mov
mov
mov
jmp
xchg
mov
push
lock
xchg
jl
push
iret
jne
push
sub
add
lcall
ret
dec
loop
fiaddl
mov
jge
sbb
test
test
or
mov
jbe
add
in
ret
jl
xlat
add
cli
cmp
add
add
jb
add
sbbl
dec
add
pop
or
sbb
ret
flds
dec
out
mov
dec
arpl
push
add
sub
jge
insl
xchg
out
subl
shr
mov
jnp
inc
ret
adc
mov
dec
dec
jne
adc
mov
add
cmp
or
lret
sbb
push
loope
arpl
lods
test
filds
or
mov
push
lcall
mov
xchg
add
jns
inc
data16
sbb
xor
adcb
fistl
inc
and
add
and
cmp
add
jge
addr16
push
ja
add
add
jle
and
cmp
in
inc
jnp
lahf
mov
aam
mov
mov
mov
repnz
xchg
dec
rcrl
jnp
add
lahf
push
dec
test
inc
or
jecxz
mov
lea
outsb
stos
jnp
cmp
jbe
dec
jne
xchg
jmp
test
mov
filds
dec
into
add
add
mov
adc
mov
aas
mov
orb
arpl
mov
or
add
add
mov
out
arpl
imul
out
fwait
lea
cmpsb
jnp
imul
dec
lea
filds
lods
test
xlat
iret
inc
push
lods
mov
mov
dec
add
add
test
hlt
in
mov
cmpsb
es
dec
push
cltd
sbb
adc
xorb
add
mov
jl
call
incl
ret
pusha
mulb
mov
dec
into
lods
cmp
jmp
mov
aas
add
inc
mov
jns
sarb
or
stc
ret
ret
neg
mov
repz
or
sub
leave
jnp
outsl
jae
inc
push
dec
mov
mov
xchg
mov
enter
xchg
negl
fisttpl
rcrb
cmp
imul
leave
jb
push
dec
or
fstpl
xlat
ret
adc
or
push
lock
add
repz
insl
adc
add
adc
jg
int3
mov
add
sbb
mov
mov
repz
mov
ljmp
or
jmp
test
jbe
shll
enter
test
mov
cmp
xchg
xchg
lret
andl
out
or
push
adcl
cmp
ret
jg
les
or
inc
test
insl
or
cmc
loopne
popa
add
xlat
stos
leave
je
imul
cltd
mov
add
mov
jnp
fld
push
sbb
push
cltd
jle
lock
lret
mov
daa
push
push
adc
jb
dec
inc
inc
lock
add
or
dec
xchg
add
mov
add
jno
rclb
xlat
sub
jl
or
sbb
out
popf
mov
push
mov
pusha
xchg
add
mov
cmpsb
stos
addr16
pop
test
jg
jns
outsl
and
add
jecxz
pop
push
mov
add
adc
outsb
aas
das
mov
inc
out
call
mov
pop
dec
push
mov
es
cmpl
add
stc
or
clc
fldl
pusha
call
jl
cltd
add
rcr
shl
mov
mul
add
pop
lds
out
mov
fnop
testb
mov
mov
rolb
mov
ret
or
aad
cmpsb
nop
adc
cmp
pop
in
outsb
mov
add
daa
jno
adc
push
mov
in
push
inc
and
xor
shlb
ror
add
insl
into
jbe
mov
pop
dec
fldl
xor
sub
sysenter
fisubl
int3
add
add
add
jmp
incl
mov
sbb
pop
out
stos
inc
or
imul
ss
jnp
adc
into
sub
sub
int3
fisttpl
sub
pop
negl
xlat
add
jp
inc
mov
push
cmp
dec
scas
sbb
jnp
in
mov
shlb
icebp
shlb
xor
sbb
jg
pop
add
incb
add
enter
fmuls
push
adc
jne
dec
repnz
mov
and
pop
sbb
adc
insl
test
adc
fs
jbe
ret
iret
pop
adc
stos
int
popf
pop
or
jne
sub
aam
sbb
shr
adc
mov
pushl
sti
adc
lret
or
int
mov
xor
or
cmpsb
xchg
jno
add
sub
lds
ss
ret
imul
pop
aas
dec
shll
hlt
xchg
pop
add
mov
call
stos
sbb
add
and
imul
add
inc
mov
sub
mov
sub
sbb
add
jl
mov
adc
call
dec
jg
add
mov
cmpb
inc
sub
pop
test
ror
cmp
inc
shufps
dec
dec
add
jmp
jb
lock
sub
pop
popf
sbb
mov
punpckldq
movlps
outsl
add
in
out
add
pop
cmp
sub
lcall
fwait
fs
mov
mov
dec
mulb
push
insl
add
adc
arpl
gs
rcrb
dec
or
notl
rcl
push
jae
rorb
xchg
add
inc
lock
add
fmul
movsl
negl
cmp
mov
sub
mov
ds
ret
add
mov
xchg
jp
mov
adc
add
test
sbb
stc
shlb
cmp
or
add
cmc
add
xchg
mov
add
cld
push
pusha
jne
jb
adc
inc
push
and
push
les
xchg
mov
movd
push
stos
insb
adc
adc
pop
rorl
and
or
pop
add
mov
fildll
jp
outsl
out
add
addr16
stos
add
or
adc
sbb
xchg
out
insl
add
movsb
int3
in
mov
xadd
fmuls
mov
dec
or
push
aam
ljmp
pop
shl
out
xchg
inc
sbb
sub
dec
das
stos
jae
jnp
ret
fistpll
call
push
jbe
xchg
or
addr16
and
test
incl
jo
testl
stos
lahf
jnp
mov
pop
add
test
add
in
sub
dec
dec
cmp
mov
insb
test
xor
mov
loope
fs
fs
jnp
jl
subl
push
mov
movsb
xchg
jns
lds
test
arpl
or
mov
lret
add
pop
mov
push
pop
xor
or
test
add
mov
cmp
in
mov
insl
add
cltd
sub
testb
mov
jmp
sub
cmp
in
xor
mov
add
sub
xchg
cmc
int
filds
add
imul
incb
cmc
push
cli
xchg
flds
adc
leave
fbstp
test
ja
pop
jmp
pop
loope
data16
mov
add
mov
xchg
js
xor
xor
popa
aam
out
insl
xor
and
lret
es
inc
push
pop
imul
inc
lds
sahf
cmp
dec
xchg
add
hlt
in
jnp
jecxz
lock
daa
cmp
fcomps
and
add
add
and
add
mov
cld
cmpsb
insl
push
mov
mov
movl
mov
in
fstpt
out
ror
mov
xchg
xor
add
cmp
pop
or
inc
push
jge
dec
iret
repz
imul
and
dec
inc
sbb
sub
fisttps
sbbb
aas
dec
test
loope
jno
add
add
push
pop
call
cli
mov
sub
out
cltd
add
add
insb
filds
mov
lods
add
outsb
sub
cld
push
mov
ja
pop
or
inc
sahf
push
mov
inc
movsb
push
xlat
jle
mov
imul
add
pop
dec
push
add
sub
add
std
push
test
xchg
ljmp
or
pop
sbb
leave
ja
or
test
pop
add
std
xchg
test
add
mov
jle
leave
fneni(8087
jno
lret
stos
testl
stc
push
repz
push
sarl
inc
fcomps
mov
add
pop
mov
ds
and
fbstp
xrelease
mov
mov
addr16
or
sbb
jo
dec
fildl
sub
or
add
xlat
xor
and
mov
jp
jge
fcoms
dec
idivl
cmp
imulb
cli
push
daa
mov
sti
sub
adc
adc
in
ret
outsl
sbb
add
xchg
aad
mov
rorb
cmp
or
inc
or
lahf
stc
dec
cmpsl
bound
or
xchg
pop
pop
push
out
imul
mov
addl
jmp
arpl
dec
add
jp
fwait
inc
test
inc
push
and
xchg
stos
jl
sub
push
std
out
mov
lds
cld
pop
outsl
lcall
cli
leave
mov
out
inc
fimuls
xor
sub
push
xor
in
scas
add
xchg
arpl
mov
jnp
push
or
inc
mov
xor
aam
adc
mov
enter
das
scas
sti
dec
sub
mov
add
push
popa
ja
es
daa
in
sti
push
loop
movsl
add
dec
outsl
jmp
test
iret
pusha
pushf
inc
mov
add
popf
and
jmp
in
dec
daa
insb
sbb
add
scas
sub
packssdw
test
stos
xor
jmp
mov
hlt
mov
ret
bound
ja
in
or
loop
aas
test
out
stos
jo
dec
fisttpl
push
push
xor
add
stos
dec
in
jmp
pop
bound
pop
ret
test
fadd
int3
add
adc
mov
add
inc
jns
jae
inc
sub
in
movsb
jo
inc
pop
or
in
sbb
lret
lods
mov
test
aaa
xor
and
xchg
in
jbe
mov
lods
ljmp
jo
bswap
movsl
fwait
jb
mov
sub
xchg
nop
jb
mov
lcall
pushf
pop
out
aam
fbld
scas
dec
fdivrl
fbstp
sub
std
cs
adc
sahf
sbb
jl
test
ficoms
mov
outsb
jmp
insb
push
sbb
mov
or
imul
pop
out
add
nop
das
adc
in
loope
pop
adc
and
add
or
cltd
lods
mov
fstl
loop
pop
stos
mov
into
sub
dec
sub
sub
mov
jp
mov
loope
in
icebp
cmp
mov
jl
pop
push
imull
jge
sub
xchg
and
hlt
repz
mov
pop
cmp
pop
loopne
dec
pop
pop
nop
inc
xchg
loope
inc
sub
lahf
aad
fwait
popf
outsb
pop
icebp
int
cmp
push
add
test
sub
loope
xchg
pop
and
dec
add
test
xchg
mov
cld
pop
inc
lcall
xor
sub
ljmp
sbb
cmp
adc
cmc
adc
push
dec
ss
push
popf
aaa
sbb
xor
nop
aam
enter
pusha
enter
test
xor
sub
sub
sub
dec
dec
jbe
push
lods
lock
mov
cmp
or
push
mov
fwait
bound
lods
sahf
in
push
sti
in
or
push
insb
cs
mov
shlb
popf
adc
cmp
insb
loope
shlb
xor
dec
push
shlb
and
adc
cmp
push
dec
nop
das
pop
inc
lock
adc
popf
adc
adc
adc
lods
jb
fnsave
fsts
int
mov
lods
sbb
es
dec
push
xchg
sbb
insb
sbb
enter
fld
xchg
jecxz
jae
arpl
repz
ret
int
shlb
jl
mov
cltd
mov
fmull
lret
cli
or
imul
mov
mov
aad
pop
adc
cltd
xchg
mov
test
add
das
ror
ds
jnp
jl
lea
enter
cmc
xchg
mov
jmp
mov
aaa
fsubrs
mov
outsb
jmp
and
in
lcall
sbb
push
int
aas
jmp
int
test
mov
in
aam
inc
shl
cmp
icebp
lds
jmp
lea
sub
lret
fisttpll
jnp
mov
mull
lret
xor
mov
rorl
in
mov
in
scas
aam
int3
sbb
rolb
xchg
add
cltd
out
xor
in
call
movsl
fsubrl
mov
dec
je
jmp
hlt
push
xchg
lods
pop
cmp
iret
add
das
in
mov
jl
int3
stos
dec
inc
mov
mov
mov
mov
dec
jge
add
jno
shl
aam
cwtl
jno
aam
inc
pop
nop
lret
popf
or
push
xor
push
add
mov
sub
sub
icebp
push
add
or
jp
fisttps
ja
inc
mov
dec
aam
dec
mov
aaa
test
rcrb
mov
push
push
xchg
mov
loope
pusha
sbb
inc
insl
push
dec
jno,pn
and
imul
inc
add
mov
int
sub
cmp
xor
xor
fsts
pop
lahf
in
mov
in
cmpsl
mov
push
and
inc
leave
popf
and
xorb
add
call
or
bound
mov
sbb
push
dec
mov
inc
popf
es
sub
in
out
push
mov
fidivrl
xor
jb
das
adc
cmc
adc
mov
iret
pop
pop
popf
cltd
ret
ljmp
add
fnstcw
mov
rcrl
enter
mov
nop
fs
data16
fcompl
mov
fs
cmpsl
daa
jmp
shrb
or
cs
sbb
sbb
mov
adc
xor
ljmp
and
call
cmp
sti
mov
sub
in
xchg
call
or
mov
or
and
push
dec
cltd
and
loope
push
or
fists
add
pop
adc
cwtl
pusha
add
push
adc
push
insb
xchg
push
mov
iret
movsb
xor
add
push
loopne
xchg
pop
in
add
push
xchg
sbb
cmp
sub
je
pop
push
add
pop
push
mov
pop
fwait
mov
movsl
and
loope
lock
or
or
and
or
or
xlat
or
push
mov
or
push
mov
push
sahf
aaa
xchg
cmp
adc
xchg
inc
rorl
pop
mov
push
data16
pop
shrl
adc
push
xchg
xchg
and
rcrb
push
dec
mov
insb
cltd
sbb
loopne
jo
in
popf
test
fnstenv
pop
and
mov
push
and
pand
mov
loop
mov
movsl
in
lret
mov
insl
lods
in
outsb
scas
add
das
outsl
scas
out
lock
mov
xor
repnz
mov
mov
xor
ss
divb
ja
or
mov
add
imul
xorl
xor
imul
or
adcl
pop
clc
mov
idiv
das
test
add
ljmp
xor
aam
testb
mov
or
inc
sti
inc
push
jnp
jb
int3
mov
cmc
fsubrs
or
and
ret
cmp
aam
inc
sub
setne
add
and
sar
lret
cmpb
cmpsl
push
xchg
fsubl
add
xor
mov
int3
pop
and
sti
fdivrp
jp
add
add
clc
cmp
idiv
mov
lea
add
ret
add
sti
sbb
xchg
pop
shll
mov
push
add
push
mov
cli
sub
int3
push
in
test
ret
and
xchg
add
lods
shl
pop
add
ror
jns
stos
xchg
test
sub
adc
sub
add
rorb
xor
sahf
push
dec
lods
ret
add
dec
lcall
add
shl
cmp
mov
xchg
out
lea
imul
sub
xor
std
popa
push
xor
fs
push
lahf
sbb
mov
adc
jmp
sub
or
fnsave
push
xor
cmpsb
dec
adc
sbb
xlat
xchg
mov
pop
add
cmpsb
or
add
pop
jno
adc
loope
add
insl
jns
ds
add
jmp
aad
cwtl
cmp
add
push
jnp
push
xchg
insb
add
jbe
jecxz
xchg
jns
pop
mov
scas
cmp
cmpsl
sbb
out
add
insb
ret
add
clc
dec
mov
jge
add
rorb
into
mov
outsb
add
stc
add
xchg
adc
mov
lcall
bound
mov
pop
pop
add
rorl
ja
lahf
pop
push
jp
stc
shlb
mov
popf
shlb
movsb
jo
stos
testl
cmp
enter
ficoml
sub
dec
sub
dec
xlat
and
cmp
xchg
inc
or
jnp
sbb
mov
or
fwait
data16
jb
push
adc
sub
mov
enter
cli
adc
dec
jae
mov
cs
out
out
or
cmp
inc
and
add
movsl
cs
loopne
adc
xchg
fisttpl
cwtl
test
lcall
es
lret
fdivrs
pop
dec
push
adc
rorb
mov
das
jne
ss
dec
mov
adc
sub
cltd
test
fs
fistl
dec
addb
loope
adc
aad
xchg
add
aaa
cmp
loope
lahf
bound
outsb
mov
jl
sti
sub
xchg
cmpsl
test
cmp
mov
arpl
cwtl
add
std
mul
dec
bound
cmp
add
lcall
xor
es
mov
fucomi
int
push
out
cmpsb
pusha
shlb
add
mov
movsl
mov
add
xchg
aas
aad
loope
or
push
int3
mov
pop
and
mov
out
dec
xchg
lds
or
jmp
mov
dec
fs
xchg
add
cwtl
dec
popa
jle
add
jl
push
add
add
xor
cmpsl
aam
push
aas
dec
dec
push
cwtl
sbb
lahf
add
subb
add
aas
in
test
cmp
sbb
fisttps
in
inc
mov
xor
jne
mov
mov
outsl
add
adc
ficoml
out
jecxz
jg
mov
pop
sahf
les
xlat
test
ret
jecxz
sti
fisttps
jbe
add
or
dec
stos
pop
test
gs
cli
repnz
jo
mov
lret
int3
aas
sub
bound
adc
add
adc
cmc
and
rorl
push
adc
add
int3
div
jge
stc
addl
dec
ljmp
inc
ret
xchg
aas
sub
les
jno
in
mov
add
jbe
xchg
add
aad
ret
negl
mov
rdmsr
in
push
add
sarb
xchg
mov
add
sbb
add
popl
xchg
add
jnp
imul
out
popf
add
pop
inc
or
lods
test
cmpb
and
fisubrs
mov
and
icebp
popa
dec
ret
inc
mov
add
dec
ja
inc
mov
pop
sub
sub
jnp
rol
xchg
add
and
add
pop
pop
sub
pusha
add
daa
mov
pop
aaa
push
iret
mov
xchg
pop
in
mov
cmp
es
fwait
adc
inc
clc
notb
pop
add
lcall
das
mov
stos
add
xchg
adc
xchg
mov
mov
add
cmpsl
mov
out
or
imul
or
cld
mov
or
push
dec
xchg
lcall
push
mov
push
push
jle
add
cwtl
ja
xor
inc
and
rcrb
add
pop
push
push
sub
decl
inc
ret
cli
inc
addb
cmpsb
adc
add
les
and
ljmp
adc
xchg
in
add
push
rcrb
inc
lahf
mov
pushfw
fwait
push
loopne
mov
xchg
inc
sub
rclb
clc
mov
or
adc
out
pop
jns
add
pop
and
add
adc
add
sub
pop
fidivs
pop
jo
or
sub
fmull
pop
aad
push
movsb
arpl
lret
loop
dec
and
jecxz
dec
testl
lock
int3
cmpsl
dec
enter
inc
je
pop
mov
sub
sti
call
add
int
ret
lret
xchg
lods
push
lds
cmp
adc
jns
cmpsb
add
testb
cmpsl
sub
mov
dec
push
notb
ret
jg
xchg
test
mov
aam
shrb
aad
adc
andl
sbb
xchg
or
repz
into
movl
ljmp
and
pop
mov
mov
jl
stc
addr16
add
lods
pop
pop
pop
fnstsw
jl
and
sbb
lds
outsl
in
pop
add
movsl
das
sub
add
mov
leave
add
and
mov
push
dec
loope
xor
popa
or
outsb
inc
add
rclb
sbb
cmp
and
xchg
cmc
adc
loopne
rcl
hlt
push
lock
or
mov
test
xorb
or
xor
jmp
mov
lcall
mov
out
add
mov
sbb
and
test
and
jns
int
inc
fs
loop
sarl
aas
add
jp
pushf
xchg
ret
sub
mov
aaa
add
dec
dec
xchg
mov
add
push
dec
daa
sub
and
popa
pop
inc
popf
inc
add
insl
ds
add
lret
ljmp
lods
std
sub
jmp
push
mov
push
out
mov
insb
popf
out
sarl
mov
add
clc
adc
add
push
xchg
lds
jmp
out
mov
movsl
je
cwtl
scas
mov
and
insb
pop
cmpsl
mov
hlt
mov
push
mov
fwait
js
ficoms
adc
add
sbbw
rcrl
inc
mov
loope
cwtl
les
push
lret
mov
jbe
add
add
fcmovb
pop
add
cmpsl
xchg
ret
in
lcall
cld
add
dec
adc
cmpsl
add
jbe
xchg
adc
in
mov
in
lret
cmp
outsl
pop
adc
dec
sbb
xchg
insl
scas
dec
and
pop
pop
dec
mov
push
pop
cmp
lds
insb
xchg
inc
sub
hlt
or
out
cwtl
std
lahf
dec
fnstsw
filds
dec
hlt
nop
push
out
cmpsl
push
jae
jecxz
rcrb
cvttps2pi
aaa
push
sbb
cmp
fcomps
xor
scas
imul
ljmp
in
or
fisubs
mov
ja
xor
sbb
add
cmp
insl
inc
jecxz
aas
mov
inc
add
mov
leave
fs
mov
mov
rorl
pusha
xor
dec
pop
sbb
cwtl
sti
jp
ret
outsl
inc
push
out
add
and
mov
add
test
outsb
into
adc
pop
test
imul
push
adc
jno
in
sbb
pop
xor
jno
mov
jb
xor
iret
ret
adc
sub
cltd
scas
loop
add
dec
mov
xchg
add
rcll
mov
cmp
add
mov
aad
add
aas
sti
inc
add
jno
sbb
adc
mov
xor
cltd
iret
jecxz
add
xlat
cmp
mov
mov
mov
outsl
cmc
add
xchg
jp
sub
loope
push
pop
aaa
ficoms
in
cltd
dec
out
cmp
xlat
jl
mov
mov
cld
addr16
lods
es
mov
mov
cmp
sbb
or
cs
lods
insl
in
add
pop
cli
jmp
add
in
ss
sub
mov
sub
adc
aad
add
sub
daa
or
lret
shlb
jecxz
inc
sbb
jp
add
mov
xorl
adc
pop
aam
push
daa
dec
rcrl
inc
mov
stos
out
mov
loope
xlat
divl
sbb
adc
pop
ret
xchg
add
cmp
jnp
inc
imul
and
je
add
jb
cmpsl
iret
fnsave
dec
sbb
mov
dec
int3
push
mov
call
cmpsl
fnstcw
mov
jnp
mov
add
cmp
adc
imul
xor
gs
add
jno
xchg
ss
dec
addr16
loopne
ret
and
push
enter
into
jnp
cmpsl
mov
cmp
sbbb
pop
insb
mov
add
dec
pop
inc
push
stc
mov
add
dec
sbb
push
and
xor
lahf
push
sbb
shlb
add
dec
inc
adc
mov
pop
mov
lret
leave
mov
add
nop
sbb
jg
fwait
out
add
push
gs
popa
arpl
and
lret
repz
mov
cmp
std
stc
xchg
add
jecxz
popa
inc
push
jmp
pop
mov
popf
movsl
push
test
test
cmp
aas
jno
or
jae
jnp
repnz
dec
sub
int
or
inc
dec
jb
out
or
dec
add
pop
imul
jbe
loope
xchg
or
push
fbld
fistpll
roll
ljmp
add
dec
push
lods
mov
jns
sbb
or
cmp
loopne
xchg
ds
inc
mov
push
in
pop
insl
xchg
inc
pop
rorl
push
add
clc
outsl
inc
add
enter
inc
pop
jg
jbe
mov
mov
in
out
push
jmp
hlt
add
in
inc
cmp
sbb
cli
xchg
sub
ret
sub
mov
add
pop
stos
sbb
inc
cmp
dec
das
cwtl
into
pushf
sub
jg
dec
hlt
fidivl
jnp
loope
push
leave
mov
inc
mov
pushl
pop
and
push
jo
add
or
xor
movsl
mov
into
scas
cmpsb
mov
inc
pop
mov
loopne
out
lcall
xlat
clc
adc
push
sbb
pop
rolb
sbb
repnz
xorl
xchg
cmp
pop
dec
add
add
movsb
and
push
cmpsl
add
pop
mov
inc
or
inc
sub
rorl
mov
push
fisubrl
mov
movsl
outsl
mov
jb
and
fistpl
les
mov
pop
pop
mov
lods
jge
test
lods
stos
xchg
add
sub
adc
mov
xchg
push
xchg
jl
fdivrl
ret
add
out
or
int
fistps
push
sbb
mov
adc
test
sub
push
call
js
insb
adc
add
dec
push
pop
test
aas
imull
or
push
je
xchg
pop
push
popa
add
icebp
xchg
inc
inc
mov
sbb
jmp
fincstp
in
add
xor
roll
in
dec
test
push
inc
sbb
add
jecxz
cld
jg
add
aas
adc
outsb
popa
xor
sub
es
pop
cmpsl
mov
push
add
push
and
mov
pop
pop
dec
push
and
mov
fcomip
xor
lods
sahf
lret
inc
mov
add
xor
cmp
sbb
ja
cs
push
add
push
dec
or
add
flds
pop
stc
cmp
jecxz
mov
inc
mov
push
dec
je
jl
andl
jge
inc
add
sbb
jne
sub
rep
push
out
add
xchg
outsl
mov
mov
mov
lods
ljmp
dec
out
hlt
push
out
insl
lds
jp
call
addl
or
inc
add
mov
ud2
jmp
push
sbb
outsb
aas
pushf
push
add
jne
sahf
add
insb
mov
pop
add
adc
sbb
shl
das
add
imul
pop
loop
and
mov
sbb
xchg
inc
dec
out
bt
add
inc
cmpsb
rol
ret
es
fsubrl
ja
cs
xchg
sub
cmc
mov
mov
loop
test
test
cwtl
leave
and
add
jns
jne
add
mov
mov
add
dec
jg
popa
idivb
shll
sbb
pop
add
inc
add
sub
inc
ret
in
dec
jne
cmp
shlb
add
jno
xchg
xlat
pop
add
inc
icebp
or
pop
call
addb
sahf
mov
inc
aam
lcall
or
loop
adc
mov
in
cmp
inc
rcrl
idiv
bswap
outsb
aam
in
lea
mov
push
sub
cmp
rorl
repz
add
aas
inc
xchg
jl
into
bound
pop
xchg
jbe
xorb
or
cmpl
mov
mov
dec
xor
fcoml
mov
das
adc
ds
mov
fwait
adc
cltd
add
mov
add
xchg
adc
repnz
lods
data16
jg
out
adc
or
xchg
roll
cwtl
and
pop
call
dec
ret
xchg
inc
outsb
mov
idivl
mov
loope
ja
sbb
imul
mov
fwait
enter
jg
outsb
mov
imul
jle
push
rolb
aam
sub
mov
stos
cmp
sub
xlat
jbe
outsl
add
es
shrd
sub
pop
test
call
rcrb
ret
lods
mov
adc
test
in
mov
gs
loope
cmp
inc
cmpl
sbb
into
jmp
jl
mov
mov
clc
icebp
scas
or
inc
mov
push
shll
mov
rolb
add
lahf
jl
aas
mov
in
inc
sub
xor
add
add
fiaddl
fs
outsl
xor
add
xchg
sub
test
pop
and
mov
enter
loop
add
jmp
icebp
cwtl
or
dec
add
sti
inc
cmp
pop
add
fld
inc
add
add
jl
stc
int
loopne
adc
pop
inc
sub
sbb
pop
sub
fcompp
push
fdivrs
cltd
sub
push
cmp
or
fidivs
ret
notl
add
push
scas
mov
add
dec
sub
xchg
mov
add
or
push
mov
xlat
pop
adc
or
cmp
add
stos
jbe
xchg
or
push
add
sub
cwtl
pushf
mov
adc
sbb
pop
push
or
push
aam
xchg
adc
inc
and
add
les
jmp
popa
popf
scas
add
inc
sbb
leave
mov
add
rcr
pop
pop
dec
insl
adc
aas
aad
jge
adc
mov
cli
movsl
stos
sbb
add
imulb
dec
lahf
lods
and
in
rol
add
and
xchg
cmpsb
push
int
adc
mov
mov
imul
jbe
pop
rorl
xlat
adc
lods
lahf
notb
inc
bound
in
inc
inc
sub
fwait
mov
sbb
ljmp
dec
push
insl
push
es
adc
je
xchg
outsb
push
loope
adc
sqrtps
lret
mov
repz
add
fcomip
add
das
adc
lret
push
xchg
sub
mov
stos
test
adc
fs
iret
jne
adc
ss
mov
xor
mov
lret
add
add
aas
add
mov
pusha
out
mov
orl
scas
ss
daa
add
bound
lock
int
push
call
xchg
xor
pop
sub
ljmp
push
popa
xor
cmp
decb
ficoms
les
push
cmpsl
fcoms
add
dec
jnp
add
hlt
idivb
adc
insl
aad
pop
xor
dec
pushf
push
sbb
lahf
dec
sub
dec
mov
lret
icebp
add
in
inc
shrl
push
inc
and
xor
mov
pushf
cmp
add
stos
pop
repz
enter
mov
jno
inc
add
dec
sub
cmp
sbb
mov
scas
xor
push
out
test
mov
xchg
repnz
add
jecxz
fs
icebp
or
sar
mov
or
cld
add
pusha
add
pop
std
or
xor
mov
cmpb
call
leave
or
int
clc
lods
mov
loopne
sbbl
add
je
popf
jne
jnp
inc
dec
or
pop
jp
add
mov
sbb
and
js
add
stos
sub
or
dec
test
or
lret
xor
testl
mov
mov
jo
pop
mov
push
push
pushf
mov
pusha
sub
add
mov
int3
stos
push
jo
lock
cld
sti
mov
out
mov
add
dec
iret
jbe
rolb
imul
xchg
adc
icebp
movsl
xchg
loope
mov
inc
cmpsb
sbb
add
sub
js
mov
test
mov
add
mov
loopne
nopl
leave
add
jle
das
in
or
dec
inc
or
loopne
and
enter
dec
mov
push
fildl
xlat
fbstp
out
xor
fsubs
cltd
es
add
add
xchg
add
sub
xchg
test
fiaddl
cmp
mov
daa
ljmp
cmp
or
mov
mov
mov
dec
xchg
or
call
xchg
in
pop
insb
les
ljmp
insl
add
mov
fs
rorb
dec
fiaddl
jae
cmp
inc
aaa
cmp
inc
mov
shrl
or
sub
jae
les
add
sbb
xchg
cs
mov
dec
and
sub
cwtl
or
rclb
enter
dec
fs
xchg
arpl
adc
out
xchg
jge
inc
int3
push
adc
testl
inc
xor
push
jnp
add
test
aad
jns
dec
adc
cmp
pop
ret
pop
jmp
and
out
insb
das
add
dec
add
and
arpl
fisttpl
loop
ljmp
in
xchg
adc
into
sub
mov
lock
ret
add
inc
fsub
out
mov
arpl
jecxz
push
orb
pop
int3
push
mov
into
psrlw
dec
dec
sti
insb
jae
inc
addr16
pop
lods
in
neg
sub
xchg
gs
data16
add
sub
cmp
mov
notl
or
add
clc
mov
add
mov
fisubl
add
popf
clc
push
and
adc
rol
xlat
ja
popa
add
pop
movsl
inc
lahf
cmp
loope
lods
xor
sbb
lock
jnp
cmpb
and
adc
or
mov
jnp
imul
cmpsl
std
sarl
pop
iret
aaa
or
add
fstps
add
mov
xchg
mov
popa
add
repz
fisttps
sahf
jb
cmpsl
mov
lahf
sub
fcomps
inc
fdivrl
outsb
push
dec
inc
sub
aaa
outsb
lea
popa
adc
jae
cltd
aad
mov
inc
gs
data16
repnz
mov
call
mov
pop
sub
xchg
inc
pushf
in
jl
push
push
in
dec
add
push
add
push
sti
mov
sbb
insl
jg
jnp
out
xchg
mov
add
dec
je
xchg
mov
adc
cltd
jnp
fsub
push
jg
orl
stc
cmpsb
orl
outsb
jg
ja
aaa
and
or
xchg
into
add
jnp
cmp
adc
sbb
mov
dec
fcoml
mov
out
add
jp
jno
call
lahf
pop
pop
add
xchg
out
xor
filds
add
jl
ror
jp
jge
call
or
aad
test
cs
sub
sub
lea
add
cmp
and
ss
dec
mov
leave
inc
inc
mov
jns
ljmp
lret
add
dec
popf
mov
movb
jl
add
outsl
mov
sti
out
and
sub
inc
fcmovu
outsb
testl
gs
pop
fsubl
mov
into
push
dec
add
sub
cmc
push
lock
sahf
fisubrl
ret
dec
lea
add
loope
cmp
mov
sbb
aas
sub
pop
nop
andl
or
lretw
std
jp
stc
sub
shlb
test
dec
shrl
adc
jg
repnz
daa
arpl
jge
pop
cmpsb
cmp
in
add
movsl
adc
cmp
sub
in
je
addr16
out
popf
icebp
sbb
push
cmc
sbb
lahf
pop
mov
mov
nop
outsb
xchg
add
push
cli
xchg
lea
lods
stos
sbb
push
outsb
in
pushf
add
cmpsb
int3
mov
adc
push
scas
dec
gs
mov
and
dec
aad
movl
pushw
add
mov
xchg
sti
sbb
stc
popf
and
mov
divl
jnp
fdiv
mov
out
or
lea
sbb
in
mov
mov
repnz
dec
add
mov
sub
xor
add
sahf
push
dec
popa
out
sub
repnz
sub
loop
inc
jecxz
inc
add
mov
jne
repz
add
pop
ret
cld
fs
jg
sub
lcall
subl
fistl
out
aaa
outsl
pop
mov
mov
orb
push
xor
push
insl
dec
test
sub
or
adc
push
arpl
xchg
fucomip
pushf
add
popf
inc
or
pop
and
arpl
hlt
ret
mov
jne
orb
xor
adc
test
sbb
pushf
add
add
inc
add
pop
insb
sti
insl
jo
aas
dec
mov
cmp
lock
vpmacsdqh
sub
adc
hlt
aad
pop
cmpsl
add
pusha
cmp
add
adc
xor
pop
cmp
add
enter
mov
cmpsb
adc
inc
inc
shr
pop
mov
rorl
and
adc
shll
jne
cmp
mov
orl
add
pmaddwd
dec
popf
inc
push
pop
add
fcoms
bound
loopne
xchg
fisttpll
sub
pop
imul
mov
stos
loope
out
push
pop
xchg
mov
mov
add
or
add
adc
iret
mov
jns
fdivrp
sub
inc
add
mov
xchg
hlt
inc
mov
pop
push
pusha
xchg
fildl
cli
add
lds
xor
cmpsb
add
or
add
ret
dec
xchg
mov
mov
inc
stos
jb
movsl
repnz
cmp
pop
out
push
add
push
in
out
mov
aad
push
ljmp
xchg
push
add
scas
aad
aad
insl
inc
push
dec
leave
jne
jge
inc
add
and
mov
iret
adc
sbb
push
mov
jg
sub
jl
adc
adc
dec
repz
pop
mov
rcl
fimull
lods
jmp
cmp
add
movsb
jns
push
lcallw
mov
enter
dec
cltd
aam
fistpl
aas
mov
addr16
jbe
mov
repnz
loope
dec
js
subl
pushf
add
lret
inc
insl
repnz
jmp
btc
jno
cmp
test
mov
cld
sbb
adc
jbe
adc
jl
inc
push
pop
sbb
add
inc
insl
sar
cmp
add
dec
popa
xchg
shl
mov
adc
aad
std
mov
lock
fadd
mov
hlt
pop
mov
sbb
iret
rcl
lret
iret
imull
xor
dec
jnp
pop
or
les
arpl
smsw
xor
out
clc
jge
push
mov
or
xchg
sub
xor
sbb
add
cli
out
pop
arpl
js
mov
push
push
pop
jne
ljmp
mov
jl
cltd
stos
dec
add
lds
pop
jmp
or
testl
fcmovbe
shr
xchg
mov
xchg
cld
ret
push
fwait
sbb
dec
add
jae
out
add
insl
pop
outsb
jle
in
js
add
lcall
pop
push
movsl
mov
les
add
push
push
ret
add
and
insb
xchg
aas
sbb
mov
mov
in
mov
jae
xor
gs
std
adc
jne
loop
scas
jmp
lret
add
inc
xchg
push
pop
jnp
add
fcmovu
out
ds
cli
push
xor
adc
cmpsb
mov
out
dec
fistpll
add
pop
xlat
pop
cltd
mov
scas
das
push
xchg
dec
xchg
mov
andb
add
outsl
jnp
add
mov
push
adc
cmpsl
in
repz
sub
add
jne
lds
push
xor
out
cmp
mov
sub
outsb
add
pop
mov
dec
sbb
scas
je
push
xor
mov
push
imul
into
imulb
push
int
movb
pop
sub
lods
push
out
and
lret
inc
xchg
jo
pop
sbb
orb
jmp
cmovno
cli
jns
lcall
dec
jl
pop
dec
push
mov
movb
jmp
inc
shl
or
les
pop
xor
sbb
pop
mov
hlt
push
imul
or
mov
mov
sub
xchg
sbb
fnstcw
dec
std
sub
push
cvtps2pd
mov
icebp
add
cltd
xchg
mov
add
call
mov
rol
dec
ss
sahf
fs
imull
mov
mov
add
inc
cld
jo
or
imul
push
push
iret
xchg
inc
je
ljmp
jns
loop
std
or
pop
lret
fists
inc
fmull
daa
add
call
loope
push
das
insb
out
test
add
popa
add
mov
les
cwtl
loopne
or
cltd
scas
push
addr16
test
ljmp
cmp
and
fisttpll
add
sbb
cmp
mov
test
add
add
jnp
sbb
movhps
out
fadds
mov
mov
pop
add
jmp
jbe
push
fwait
jne
mov
call
xchg
inc
xchg
movsb
inc
arpl
add
sub
ret
sbb
sub
je
mov
movsl
add
repz
sar
loopne
jnp
push
xor
in
add
dec
mov
add
or
lods
push
add
das
mov
xlat
add
sti
adc
mov
push
cmp
xor
ret
stos
add
imul
adcl
cwtl
ficomps
sub
inc
fidivl
cmpsl
jbe
push
xor
sbb
push
aaa
xor
mov
rcrl
pop
rcrb
add
movsb
mov
jecxz
mov
inc
push
data16
add
cli
into
roll
mov
inc
mov
loop
ror
mov
mov
lock
setnp
cmpsl
add
push
lods
mov
jnp
adc
fistps
xor
sub
rolb
add
mov
icebp
sbb
sti
inc
jae
sub
addl
popl
fldl
in
add
sub
mov
xor
add
cmp
in
or
sbb
imulb
bound
repz
inc
icebp
cld
test
test
imul
sub
shll
mov
jae
pop
pop
insl
inc
pop
add
jo
mov
pop
repz
frstor
faddp
pop
or
mov
std
out
cwtl
data16
stc
ret
pop
jmp
jnp
mov
add
xor
push
in
and
and
cmc
int3
mov
imul
jns
mov
addl
out
push
jno
add
ss
adc
add
in
pop
frstor
jns
fsub
roll
xor
pop
jb
repnz
stos
das
sub
sbb
push
insb
lret
mov
mov
xchg
sub
jl
add
adc
repz
aad
lock
iret
pop
jp
mov
mov
add
push
sub
stos
mov
out
jnp
jl
sbb
pop
out
jp
scas
js
push
add
rol
mov
or
xor
dec
arpl
mov
mov
add
pop
or
aaa
add
cmpsl
lods
ret
jmp
pop
fs
adc
xchg
mov
push
xchg
push
add
xchg
xlat
add
pop
lds
jb
aas
inc
hlt
cli
shlb
mov
icebp
insl
sub
inc
mov
add
xlat
xchg
clc
out
push
push
pushf
mov
pusha
or
outsl
add
das
icebp
mov
and
push
roll
enter
sub
loop
test
pop
fcomps
mov
cwtl
mov
push
or
daa
sub
jo
cltd
je
cld
dec
adc
popf
jae
call
push
popl
mov
add
mov
popf
xchg
push
stos
mov
lahf
lods
push
in
aas
and
test
stos
bound
jmp
sub
inc
inc
sub
outsl
add
dec
add
mov
mov
dec
aam
inc
add
dec
jmp
fisttpl
mov
add
fbld
dec
add
jbe
testl
mov
sub
push
leave
mov
clc
shlb
mov
jnp
data16
push
xchg
repz
xchg
dec
inc
subb
data16
add
les
mov
sahf
fldcw
filds
loopne
ret
stos
out
sti
sub
jmp
jecxz
clc
scas
and
pop
xor
std
xor
testl
add
lret
das
xchg
add
ret
test
sbbl
popa
cmpl
adc
sbb
dec
decl
inc
sub
jmp
ret
decb
enter
xchg
add
add
aas
mov
add
inc
pop
aaa
or
femms
pop
std
mov
mov
add
jle
dec
push
push
loop
add
stos
rcr
jl
fmulp
add
mov
sub
push
dec
add
push
rol
mov
xlat
add
fs
pop
pop
jecxz
shlb
sbb
mov
dec
es
cmp
je
out
inc
or
or
out
sub
fdivrl
push
push
fnsave
mov
mov
insl
push
add
dec
push
mov
pop
loopne
xor
dec
imul
fisubrl
push
lds
jg
mov
aad
mov
repz
subb
push
cmp
hlt
sub
xlat
mov
add
in
adc
out
push
cmp
jns
add
fs
fstpl
jne
out
add
aas
pop
xlat
faddp
dec
pop
add
inc
in
sub
cmp
mov
dec
push
mov
outsl
jne
icebp
add
lods
maxps
push
add
cmp
aas
add
sbb
jno
dec
add
mov
jl
shll
adc
or
add
cmp
push
loope
leave
in
call
outsb
dec
pop
or
roll
xchg
sbb
mov
iret
add
push
bsr
insl
inc
fisubrl
repnz
lahf
add
pop
mov
fcompl
or
popl
push
leave
inc
pop
mov
dec
pop
sarb
push
cmp
lds
aam
sbb
hlt
pcmpgtb
dec
aaa
dec
aas
add
mov
scas
mov
fsubl
sub
and
mov
test
leave
fsubp
jmp
sub
and
inc
sbb
in
out
lret
cld
test
pop
jge
in
sbb
mov
cwtl
outsl
loopne
add
jae
add
add
into
fldenv
sar
dec
cmp
roll
sbb
cwtl
mov
ret
daa
sbb
les
aad
lods
pop
mov
jp
cld
leave
fs
mull
sub
test
mov
fwait
dec
filds
xchg
jae
pop
leave
mov
add
ja
mov
mov
or
xor
lcall
mov
movsl
testl
es
add
push
bound
hlt
inc
inc
add
pop
fsub
add
pop
fidivl
fdivrl
inc
iret
int
stos
popa
adc
int3
and
sbb
mov
and
js
inc
and
and
movsb
add
mov
sub
inc
das
dec
pop
dec
or
jl
je
hlt
mov
or
sub
adc
sbb
jg
mov
jle
pop
mov
ds
or
out
pop
ret
mov
testb
stos
add
cmp
pop
into
add
and
xor
sub
lds
xchg
mov
xchg
shll
sub
inc
sahf
mov
hlt
test
push
push
lahf
cli
test
add
sub
repnz
sbb
inc
cmc
mov
gs
mov
inc
jg
and
ret
jae
jle
xchg
xadd
sarb
dec
inc
outsl
fbld
sti
push
sti
out
pop
jo
jne
add
incb
add
xorl
cltd
in
jae
fildl
outsl
fcmovb
cmpsl
or
mov
mov
out
dec
mov
push
pop
sbb
cld
testl
arpl
and
icebp
jo
imul
lret
add
faddl
mov
sub
call
js
sub
xchg
jecxz
xchg
push
and
mov
mov
dec
cld
inc
js
popa
push
mov
adc
test
jno
pop
add
ss
ja
jae
mov
arpl
fldl
add
aam
ss
fwait
inc
filds
sti
out
hlt
cmp
mov
fwait
add
and
add
jno
xor
ret
in
hlt
repz
xor
aas
sub
dec
inc
and
xchg
bound
mov
pop
mov
fwait
aad
stos
inc
add
cmpl
xchg
add
cmp
jmp
fldz
dec
insb
fbld
add
jns
xchg
mov
in
hlt
push
adc
mov
fmull
pushl
add
sub
in
mov
push
push
ja
add
mov
jns
add
rol
add
lods
imul
jg
insl
mov
shlb
push
scas
xchg
in
xchg
push
sub
adc
out
movsl
mov
xor
adc
jecxz
cmpsb
decb
mov
inc
out
add
repnz
aaa
pusha
fmul
xchg
mov
xchg
mov
dec
fldl
mov
rorl
mov
lret
jnp
jae
jle
add
pop
ret
ret
xor
mov
add
cs
in
loope
and
lods
add
xchg
icebp
sbb
add
les
xor
mov
pop
push
adc
dec
outsl
mov
push
xchg
add
push
sbb
aad
in
lds
xchg
push
addr16
or
nop
add
push
or
enter
jmp
fcompl
ret
inc
pop
repz
outsl
cmp
in
gs
popf
shrl
jb
data16
pop
pop
jnp
or
mov
les
add
sub
add
leave
xchg
lret
push
repnz
out
lods
mov
les
call
push
add
inc
lcall
push
in
data16
jno
xchg
and
jnp
pop
push
sbb
mov
dec
sarl
pop
int3
sbb
repnz
adc
out
add
sub
mov
pop
gs
inc
adc
shll
fscale
xchg
sub
adc
cli
jns
adc
and
mov
lret
xor
mov
aas
call
adc
loop
pusha
das
das
xchg
pop
add
add
add
insb
dec
jnp
jge
cmove
sbb
rorb
mov
cmp
lcall
ss
pop
xor
hlt
dec
push
add
idivl
std
out
pop
test
and
nop
xchg
xorb
outsl
pop
hlt
out
sbb
xor
aad
gs
cltd
mov
pop
push
out
aam
int3
lcall
inc
sub
outsl
cltd
les
sub
xor
adc
mov
and
test
cmp
adc
add
aas
test
mov
fildl
mov
lea
repz
xlat
scas
add
cmp
loop
cmc
mov
fsubs
add
sarl
test
mov
push
jae
mov
insb
mov
popa
shlb
fcomip
add
movsl
hlt
adc
add
mov
dec
jmp
push
setb
jo
and
pop
sub
pusha
or
movsl
repz
outsl
cmpsl
stc
lock
cmpsb
rcrl
cmp
into
and
fsubr
add
push
stos
test
push
add
inc
fadd
mov
dec
inc
fwait
mov
xchg
popf
fcompl
or
cmp
hlt
mov
add
push
xor
mov
add
sbb
leave
push
jge
outsb
add
clc
ss
and
sub
cmpb
or
dec
sub
aam
push
sbb
int3
sahf
push
adc
xchg
push
sbb
cmpsb
add
push
pop
test
dec
mov
mov
in
xchg
xchg
xchg
loope
cld
mov
loope
scas
xor
aas
dec
pop
add
les
scas
andl
mov
lods
jbe
rorb
add
push
shll
or
aad
out
in
iret
cwtl
mov
das
imul
in
stos
out
sbb
pop
and
mov
sarb
cs
int3
push
add
andl
cmpsb
mov
jne
inc
push
xchg
dec
cltd
jno
push
shr
mov
jg
gs
imul
in
xlat
cs
int3
mov
mov
stos
ret
fs
loop
stc
stos
sar
jae
jg
or
gs
dec
push
es
mov
insl
out
insb
mov
rclb
sti
call
mov
inc
sub
lcall
hlt
int
ffree
les
adc
xchg
mov
mov
popa
ret
and
cmp
lahf
add
xor
ljmp
sub
dec
push
jne
popa
je
imul
adc
pop
lock
mov
mov
add
aaa
inc
push
xor
movsl
sub
hlt
aad
mov
add
leave
jo
dec
jmp
fmul
or
cmc
add
mov
lock
mov
sub
xor
stos
add
pushf
xor
pop
fiaddl
mov
outsl
nop
stc
xlat
dec
add
jg
xchg
mov
mov
add
aad
repnz
cwtl
sub
fstl
add
gs
xor
daa
in
xchg
sbb
mov
push
jmp
add
xchg
pop
mov
pop
fs
mov
dec
sbb
in
dec
and
mov
cltd
js
mov
sti
incb
add
loope
or
jns
push
aam
fistl
pop
add
daa
mov
iret
sti
xor
insl
add
fisubrs
push
add
cmp
enter
test
movsb
add
mov
out
cmc
test
dec
jle
jge
fildll
adc
pop
imul
outsb
stos
repz
js
mov
cli
or
push
add
pop
jno
fildl
add
cwtl
mov
hlt
in
mov
dec
pop
dec
lcall
lret
or
sbb
test
in
add
pop
stos
mov
cmp
and
and
xor
add
add
or
jl
aad
or
adc
enter
mov
mov
push
push
in
data16
push
enter
sbb
or
fstl
outsb
ljmp
xchg
push
cmpsl
push
sahf
mov
pop
sbb
jecxz
jle
outsb
and
cmpsl
jbe
popf
add
jns
nop
mov
pop
ds
lea
pop
mov
repnz
test
out
xchg
imul
in
or
push
lods
ljmp
sbb
imulb
into
xor
verw
lcall
push
lahf
sub
bound
sbb
loop
test
mov
mov
or
aam
pushf
or
out
add
mov
adc
cs
rol
jl
aaa
out
adc
dec
adc
les
push
adc
push
mov
jmp
lea
lods
or
js
sbb
push
add
cmp
dec
out
xorl
inc
adc
inc
add
call
jl
incb
add
mov
pop
stos
push
add
mov
ret
mov
xor
pop
stos
pop
add
divb
add
pop
and
adc
push
inc
je
sbb
add
push
mov
dec
sti
jb
into
imull
xlat
xchg
mov
push
loop
test
dec
push
daa
punpckhwd
movsb
cmc
or
inc
jmp
sarb
loop
push
stos
or
fwait
add
push
das
inc
add
lret
and
test
sub
mov
mov
and
ret
sahf
pop
cmp
push
mov
and
xchg
add
or
inc
jns
stos
inc
jge
outsb
mov
int
fnstcw
mov
push
pop
ss
add
repnz
jbe
add
cli
mov
add
mov
mov
ret
ret
cmpsl
fldcw
scas
xlat
movl
rorl
add
imul
leave
les
mov
push
push
std
cmp
test
stos
sbb
stc
sbb
mov
out
mov
pop
jg
and
and
xor
sub
push
test
mov
stc
add
imul
call
add
xchg
sub
jl
in
inc
or
sub
inc
adc
add
lods
in
iret
or
add
addl
mov
and
fnstsw
add
sbb
or
add
std
mov
jae
flds
add
cmpsl
and
outsl
out
ljmp
les
insb
and
mov
fwait
pop
adc
repz
mov
xlat
dec
mov
outsb
cltd
jl
push
mov
inc
mov
add
movsb
and
insl
imul
sub
test
dec
add
hlt
mov
inc
xor
mov
adc
xchg
mov
mov
mov
or
xlat
or
adc
shll
mov
sub
or
add
jnp
loop
clc
jmp
paddw
xlat
movsb
pop
xor
dec
test
daa
sbb
out
aas
add
sbb
hlt
push
and
in
pushf
mov
mov
ret
mov
push
sbb
in
or
jg
add
push
push
inc
push
add
pop
or
mov
int3
fwait
test
jbe
sbb
cmpb
pop
adc
out
or
mov
sti
cmp
lcall
pop
test
shll
outsl
and
ja
mov
mov
fildll
dec
out
cmp
rcll
jb
mov
fs
lahf
lods
mov
or
xor
lock
lcall
push
xchg
add
pop
xor
loop
xchg
pop
dec
das
hlt
jle
add
ja
les
jne
lods
adc
sub
decl
ljmp
in
scas
and
or
or
xor
add
popf
pop
xchg
add
out
rorb
push
stos
scas
mov
dec
sub
dec
lea
idivl
push
cmp
jecxz
add
cld
or
add
inc
mov
add
inc
hlt
int3
jnp
add
int
sbb
aaa
lret
rorb
dec
loope
lahf
out
pmaxub
mov
push
add
adc
add
mov
push
jne
ret
xchg
lret
dec
call
mov
mov
mov
addb
jae
dec
cmp
movsb
sbb
xlat
das
in
jne
mov
movsl
push
jecxz
cmp
inc
addr16
adc
out
out
dec
xor
mov
scas
fmull
mov
add
cmpsl
add
les
push
std
sub
int
sub
lock
jle
lds
add
cli
stos
mov
addr16
or
sub
bnd
cmp
cmc
push
movsb
inc
mov
adcb
mov
aam
adc
frstor
pop
xchg
sub
repnz
mov
cmp
mov
ret
add
leave
aaa
xchg
xchg
dec
xchg
sub
lock
pop
and
push
fiadds
xchg
and
mov
movsb
push
and
jb
mov
rcll
ret
mov
sbb
pop
xchg
int3
mov
cli
or
sti
jae
add
fld
dec
add
mov
out
inc
cmp
inc
inc
lcall
mov
dec
movsb
add
test
cmp
xor
jb
push
pop
xor
push
cmpb
inc
lods
adc
addr16
out
stc
push
fidivl
pop
pop
adc
push
xor
add
adc
mov
xchg
mov
daa
push
repnz
roll
cmpsb
mov
sbb
hlt
or
add
sbb
jp
add
nop
aad
jo
int3
push
inc
add
jns
xlat
push
push
loope
icebp
dec
mov
xchg
out
add
lock
add
dec
test
pop
out
fildl
bound
push
pop
das
fbstp
xor
pop
pop
dec
add
and
cmp
push
sarl
add
adc
mov
pop
rorl
xor
xor
add
adc
sub
inc
adc
lcall
fs
jb
mov
xchg
out
js
in
pop
add
mov
mov
add
mov
loope
or
add
push
and
adc
mov
mov
iret
xor
cmp
sub
add
and
sbb
pop
dec
push
cmp
mov
mov
rolb
lcall
push
outsb
rcl
mov
prefetch
add
out
xchg
outsb
adc
sbb
mov
xchg
mov
mov
int3
jge
pop
pop
dec
add
lods
scas
ljmp
add
ss
lock
aad
gs
inc
mov
cmp
cmp
dec
imul
sub
mov
jo
sti
push
sbb
add
lahf
xorb
xor
lods
pop
add
push
push
mov
xchg
sbb
les
mov
fmul
lahf
mov
bnd
xorb
or
dec
add
lods
sbb
jno
out
mov
inc
sub
mov
xchg
add
adcl
inc
or
iret
incl
sbb
rcrl
jle
aas
add
and
add
insl
imul
es
orb
pop
cmp
add
subl
xor
or
add
cli
xorb
pop
ja
push
test
into
sub
aam
xor
js
cmp
enter
pusha
imul
xchg
add
andb
mov
into
add
out
xor
test
loop
jo
inc
leave
mov
dec
push
cmpsb
xchg
add
shlb
mov
das
mov
in
popf
mov
rorb
repnz
sub
inc
jmp
xchg
sbbl
cmpb
lock
inc
lock
lock
fldenv
pop
adcb
scas
mov
pop
daa
add
scas
sbb
inc
mov
out
add
out
cli
test
loop
jnp
lods
scas
pop
je
add
ret
sub
inc
add
jbe
add
sub
sub
add
fdivl
test
jmp
push
pminsw
out
fnstcw
adc
ljmp
out
add
cmp
add
mov
mov
loope
add
outsl
add
adc
mov
fcmove
inc
xor
and
mov
add
jecxz
and
movsl
and
js
outsb
and
xor
shll
sub
nop
and
sbbb
stos
adc
add
push
inc
and
daa
dec
mov
mov
or
loopne
dec
sbb
dec
add
stos
shrb
push
data16
mov
lds
push
xchg
pop
jmp
aad
insb
mov
add
loopne
cwtl
enter
in
inc
lds
adc
std
add
jae
sub
aad
andl
ljmp
cmp
in
add
gs
hlt
fnstenv
sbb
icebp
ljmp
sub
sbb
or
shrl
imul
movsb
jl
mov
adc
inc
add
lds
out
mov
xor
push
cmp
xor
data16
pop
negb
push
jno
cmc
sbb
push
inc
sti
fdivrp
xor
aad
loope
sbb
test
lea
imulb
add
out
repz
push
ljmp
jl
xchg
mov
decl
add
aad
mov
into
push
add
fdivrl
lock
sbb
or
push
inc
adc
dec
mov
xchg
pop
lahf
ljmp
arpl
stos
push
push
fiadds
cltd
jo
pop
shr
sub
mov
loope
mov
pop
sub
mov
imul
jb
repz
setnp
add
jmp
pop
loopne
mov
mov
das
push
xchg
jb
popf
xchg
ret
iret
cs
jg
in
bound
out
jbe
jmp
lret
rorb
lss
repz
out
add
aad
inc
push
jg
pushw
and
addb
aam
in
fbld
repnz
push
aas
lahf
scas
scas
mov
js
daa
cmc
testl
dec
sub
enter
sahf
sub
scas
lcall
lock
push
stc
in
add
jecxz
aas
scas
fidivl
test
xor
mov
push
adc
add
jae
sarl
add
ret
mov
in
push
dec
add
xor
insb
xchg
aad
adc
lcall
int3
add
test
mov
cmp
push
icebp
pop
ret
in
add
push
cmp
xchg
ret
and
and
arpl
ror
xor
add
mov
std
adc
fwait
cmp
and
aas
jp
add
xor
hlt
push
dec
push
dec
outsl
or
lock
xchg
scas
stos
cs
add
xchg
xor
pop
sbb
and
sarl
xchg
movsb
ss
clc
add
pop
aad
imul
test
out
out
test
cmc
inc
add
pop
mov
adc
in
lahf
imul
out
jl
idivl
cmp
add
ds
pop
iret
push
call
mov
cmpsl
add
mov
cmpsl
push
pop
jns
jmp
or
stc
sbb
xlat
scas
insl
mov
pop
sbb
adc
sbb
lock
xor
cmpsl
pop
dec
mov
dec
out
dec
loop
pop
mov
sbb
in
fimuls
pop
mov
push
sbb
jge
inc
mov
bsr
insl
outsl
fs
stc
pop
mov
pop
xchg
jae
fsubs
mov
push
icebp
adc
fdivl
hlt
add
mov
mov
jg
shll
push
push
cmp
gs
mov
pop
stos
xorb
lahf
jns
jmp
ja
clc
cmp
mov
dec
push
adc
ret
je
push
stos
in
pop
push
je
xchg
orb
adc
push
int3
dec
jo
inc
push
in
pop
add
adc
inc
mov
movsl
add
stc
mov
inc
sub
mov
push
enter
mov
add
cli
pop
lea
lcall
iret
out
sti
add
push
loop
or
in
lods
cltd
and
add
add
add
repnz
dec
repz
stc
cld
mov
xor
imul
faddl
ja
inc
add
clc
pop
icebp
sbb
cmpsb
in
ret
xchg
adc
jg
cmp
test
aad
add
push
into
out
add
dec
adc
cld
sub
aas
arpl
inc
jns
lahf
sti
add
mov
ret
fcoml
clc
or
pop
daa
xchg
pop
or
loope
push
lds
test
push
dec
push
jecxz
sbb
sub
bnd
jne
push
mov
xlat
sub
scas
dec
loop
aad
add
mov
loopne
dec
cmp
cmp
add
add
adc
cmp
sarb
push
jmp
xor
imul
lahf
jmp
test
ret
testl
int
push
fldl
or
dec
loope
jmp
xchg
sbb
imul
mov
add
cltd
adc
jg
sub
out
sbb
cltd
sub
jnp
addb
movsb
bnd
inc
and
aaa
jle
or
add
mov
clc
sub
ret
adc
fmuls
mov
jl
dec
pop
pcmpgtw
cmp
push
sbb
xor
lcall
or
jae
jmp
imul
lahf
add
inc
lret
rdtsc
sub
fiadds
inc
adc
in
imul
popf
xlat
js
add
les
xchg
imull
dec
sub
pushf
jo
or
ret
call
aad
sub
add
leave
mov
pushf
iret
sbb
lahf
inc
or
fildll
add
xchg
ljmp
fidivl
sbb
mov
add
sbb
mov
loope
mov
mov
jo
adc
inc
roll
mov
push
pop
sete
cmp
popf
sub
jp
lret
jl
sti
aad
sbb
rorb
xor
ljmp
cwtl
test
push
btc
lret
add
jae
in
fwait
mov
pop
cmp
jl
add
lock
push
or
pop
out
cmc
inc
pushf
scas
mov
add
mov
sti
inc
add
in
stos
add
mov
push
dec
add
insl
adc
and
das
cmp
fwait
popf
bound
sbb
repz
push
out
sahf
jno
ud1
add
mov
dec
adc
sbb
jbe
int3
lea
push
dec
lea
aad
mov
push
mov
lock
outsb
add
fdiv
add
xor
inc
mov
leave
call
jb
dec
adcb
xchg
icebp
test
xor
adc
pushf
arpl
jo
xor
dec
xchg
push
sbb
jne
dec
sub
and
int
and
add
xchg
testl
mov
jbe
mov
lahf
pop
std
mov
xor
dec
add
add
add
idivl
or
out
arpl
in
insl
ror
jmp
xlat
or
iret
and
and
jns
xor
pusha
mov
lods
mov
mov
sbb
xorl
and
push
push
inc
out
mov
test
fdivr
inc
paddq
xchg
cmp
dec
and
out
pop
cvtps2pd
mov
and
cmc
int
jns
sub
dec
add
pusha
scas
xlat
adc
outsb
xchg
clc
lret
insl
jge
inc
add
out
testl
lea
sub
ja
sbb
inc
int3
or
out
jae
test
pop
xchg
shlb
add
adc
iret
idivl
add
mov
inc
es
cmc
adc
xchg
sub
push
lahf
fcomi
cld
add
rorl
repnz
test
out
mov
dec
in
mov
add
push
inc
or
jmp
rcr
fsubrl
mov
cwtl
xchg
cmp
push
inc
pop
ret
adc
xorps
xchg
cmp
pop
adc
cltd
push
fdivrs
scas
test
mov
push
ret
mov
sub
pop
loop
outsl
and
cmp
enter
fmuls
push
or
sarb
pop
sarl
cmp
mov
into
dec
xor
subb
add
or
test
repnz
out
mov
or
push
outsb
jne
sub
fadd
add
xor
mov
mov
mov
divb
sbb
scas
xor
add
ret
pop
mov
mov
pop
dec
sub
sub
repz
stc
jmp
add
adc
daa
lret
aaa
incl
jae
sub
cld
pop
dec
push
leave
pusha
insl
pop
loope
fwait
and
imul
lock
or
push
loop
lret
dec
mov
push
daa
jno
add
ret
dec
xor
rorl
xchg
sahf
sbb
gs
in
adc
pop
loop
inc
pop
bound
jb
inc
daa
in
xor
add
mov
dec
roll
or
xchg
sub
je
add
mov
std
fs
jne
push
adc
shrb
adc
and
jge
sbb
inc
shrl
add
jae
add
icebp
lret
cmp
adc
das
aas
xchg
into
push
inc
stos
enter
loope
adcb
fcmovnb
xlat
add
xor
adc
fiadds
jae
lock
leave
mov
add
shll
mov
lock
add
cltd
insb
test
popf
ffreep
mov
cs
or
loopne
je
mov
lcall
out
fstps
sub
push
fstpt
lea
loope
cmpsl
shl
cli
mov
dec
test
mov
aaa
push
cmp
mov
cli
bound
add
mov
sbb
dec
xor
or
icebp
jno
scas
add
stc
dec
fildll
or
or
mov
jmp
xor
in
jno
xchg
testl
jg
xchg
movsb
xchg
add
js
std
xor
out
sbb
cli
imul
mov
dec
lret
test
jns
jo
outsl
mov
add
add
fadd
push
add
neg
or
adc
fldl
int3
pop
push
lods
lahf
add
inc
divl
add
inc
mov
ljmp
add
inc
jmp
iret
add
stc
mov
cmc
push
pop
lret
sar
xchg
adc
lds
sarl
jg
cmc
mov
push
jbe
sbb
sbb
int
dec
push
mov
xchg
sub
pop
push
jp
into
aas
inc
mov
jno
out
jne
xor
add
mov
imul
jl
cmp
jns
sub
shl
adc
add
cltd
sbb
clc
mov
addl
mov
and
push
leave
mov
jnp
jb
xchg
mov
rep
ret
gs
pop
add
sub
aas
mov
xchg
inc
je
insl
stos
add
push
adc
push
add
add
es
mov
xor
lahf
mov
cwtl
sub
add
mov
push
or
mov
or
sti
cmc
and
cmpsl
add
pop
out
add
pusha
fucomip
mov
aad
add
dec
inc
call
cli
adc
jbe
fstl
js
cmc
lods
dec
mov
loope
inc
xchg
call
fldcw
dec
and
xor
ret
sbb
cld
int
lods
out
add
push
dec
or
lcall
mov
pusha
movl
add
sub
sahf
push
hlt
imul
lret
add
gs
mov
fs
fldl
mov
lcall
lods
cmpsb
add
dec
loope
imul
jo
flds
jb
inc
push
jno
adc
in
add
cmpl
xor
aaa
jle
icebp
out
adc
mov
cs
inc
fdivs
pop
xchg
xor
and
stc
jnp
xor
push
sub
test
and
inc
xchg
cld
add
insb
jmp
jge
and
lds
jg
pop
dec
inc
lcall
jb
pop
jge
adc
pop
sarl
test
push
je
fptan
mov
jle
jge
sub
xchg
insb
xor
mov
outsl
repz
and
sbb
mov
pop
lea
push
xor
shll
lret
stos
shr
mov
jno
sbbb
xchg
and
or
inc
mov
pushf
outsl
add
fcmovne
loopne
sahf
dec
into
rcll
fadds
hlt
add
inc
adc
enter
call
clc
push
jbe
fs
je
test
data16
xchg
cmpsb
lock
arpl
inc
pushf
push
and
in
add
and
pop
test
arpl
cld
sbb
pop
js
das
xchg
ja
add
icebp
xchg
shlb
inc
mov
sub
std
negl
add
jp
mov
add
adc
les
add
ret
mov
dec
push
lahf
pop
icebp
int3
in
mov
les
mov
adc
add
ljmp
lock
push
jge
sub
mov
scas
mov
test
cltd
es
orl
mov
shl
decb
mov
adc
call
ffreep
cwtl
add
jne
cmp
jge
in
xchg
jecxz
sbb
fxch
add
stos
je,pn
mov
xchg
inc
lea
negl
add
mov
int
aas
inc
cmp
push
call
dec
cmp
loop
dec
enter
loope
inc
mov
mov
sbb
mov
std
mov
inc
jge
loop
or
add
xchg
aas
sbb
lods
jo
add
add
add
and
or
lcall
add
aam
add
pop
in
cld
dec
ljmp
fbld
lds
popf
lock
popa
stos
scas
dec
adc
mov
cmp
mov
adc
add
adc
jg
shl
inc
fbld
add
push
int3
cmp
test
sbb
cmpsb
sub
sbb
pop
lock
adc
push
mov
imul
sub
js
daa
repz
into
add
mov
mov
and
popf
rcrb
mov
sub
xor
pop
sub
push
mov
jnp
outsb
dec
jmp
add
push
jmp
mov
xchg
mov
cmp
xchg
out
mov
rcl
and
pushf
mov
scas
push
out
and
jne
out
fildl
add
mov
mov
push
jno
popa
rorl
scas
xor
and
sbb
leave
lock
cmpsl
jp
jno
cmpl
aad
fisubrl
stc
inc
dec
jno
add
add
cmp
aas
add
fsub
xlat
and
dec
popa
sti
or
and
inc
dec
repnz
push
sub
pop
mov
inc
popf
add
dec
das
cltd
add
repnz
push
push
xor
jmp
xlat
ja
pop
jg
aas
add
ss
out
sub
add
push
dec
loop
lret
or
add
cli
inc
xor
lods
inc
push
push
pextrw
xor
mov
out
testb
sbb
test
sbb
pop
aam
add
lret
loope
add
loop
lcall
lock
pop
cmp
cltd
aad
adc
ret
jmp
add
shlb
das
push
add
adc
mov
filds
lea
dec
inc
arpl
sahf
lods
pop
roll
push
enter
jecxz
add
fistpl
lret
push
mov
das
incl
notb
repnz
xor
aam
dec
mov
pop
add
enter
dec
mov
xlat
or
iretw
add
idiv
and
add
in
push
jo
aad
add
lcall
cld
mov
jle
inc
pop
push
add
data16
pop
pop
xor
hlt
or
sub
mov
sub
outsl
add
sub
add
push
lcall
push
jae
push
subb
iret
aaa
push
add
das
pop
stos
push
je
faddl
dec
mov
popa
ss
cmc
jno
rolb
mov
dec
scas
xchg
sub
fwait
adc
dec
shrl
in
and
xor
fnstenv
add
push
icebp
add
lret
add
push
pusha
jg
shll
xlat
sbb
pop
dec
fstps
fdivl
fs
sub
les
out
call
fsubs
pushf
adc
sbb
mov
cs
adc
push
adc
mov
jmp
cmc
into
add
mov
add
add
sbb
xor
push
out
fdivs
dec
mulb
add
sub
sahf
popf
xchg
imul
fldcw
arpl
inc
mov
inc
rolb
das
ljmp
add
pushf
imul
add
push
insl
leave
push
add
cmp
scas
inc
mov
mov
add
mov
aad
cli
add
ja
addr16
sbb
cmc
add
add
inc
xor
ds
movsl
xchg
outsl
adc
add
outsl
int3
add
add
jbe
fwait
movsb
add
and
jb
sbb
cld
shrb
jle
dec
mov
sbb
jecxz
mov
dec
orl
les
stos
test
bound
pop
das
fbld
add
push
fidivs
add
orb
jmp
cmp
out
adc
mov
pop
mov
xchg
popf
xchg
addl
lahf
call
outsl
adc
ja
adc
adc
stos
insl
pop
mov
pop
cmp
bound
sub
cwtl
lahf
xchg
add
cmp
dec
push
or
xorl
xchg
xchg
pusha
imul
out
or
or
mov
fimull
das
mov
add
rorb
fs
stc
int3
add
faddl
push
add
jo
fldenv
jne
sbb
cltd
sub
add
xchg
xchg
mov
sbb
test
push
into
sbb
and
popf
add
add
xchg
mov
add
push
cli
pop
add
fwait
cmp
ret
push
inc
lea
and
ljmp
insl
jp
mov
push
aas
jo
add
cmp
cmp
or
adc
push
push
cpuid
cmc
fcoms
or
out
sbb
lcall
nop
fists
add
push
inc
ret
daa
inc
fisubrs
rol
dec
sti
movl
cmpsb
mov
cmc
sbb
xlat
sub
dec
jnp
jmp
or
imul
sub
sbb
and
cmp
add
pop
jae
pavgb
add
cmc
dec
push
pop
cmp
xor
test
data16
sub
mov
loop
int
and
inc
pop
add
dec
xchg
mov
lock
and
and
pop
xor
mov
mov
mov
xor
add
pop
lea
stos
add
jl
rcll
sbb
and
inc
add
push
push
inc
xchg
sub
fwait
lods
xchg
aas
mov
add
gs
pop
add
pusha
jb
arpl
jg
cmpb
or
sbb
test
andb
fsin
test
mov
inc
mov
jle
adc
das
loope
add
cmc
lret
fidivrl
shl
mov
seta
dec
lds
add
mov
mov
scas
mov
xchg
jg
loope
sub
mov
xor
dec
lcall
mov
ret
sbb
mov
outsb
mov
dec
sbb
inc
sub
stos
sub
sub
imulb
shrl
adc
into
add
cmp
xchg
imul
lahf
push
cmp
pusha
adc
sbb
call
inc
add
jecxz
cmp
sub
in
inc
inc
and
aaa
add
test
or
sahf
aad
dec
inc
movsb
sbb
rcrl
pop
add
inc
jge
mov
cmp
jnp
clc
mov
and
mov
add
imul
inc
mov
sub
push
add
nop
mov
or
dec
xchg
out
cmp
ljmp
out
lret
repz
jo
add
leave
popf
sarl
mov
dec
jnp
add
insb
inc
cwtl
mov
dec
push
pop
fs
push
sub
pop
nop
into
lahf
pop
idivb
scas
lds
mov
fdiv
ret
cmc
inc
ljmp
arpl
in
pop
mov
mov
enter
sbb
inc
or
xor
adc
mov
iret
inc
jg
add
fsubr
scas
cld
int3
add
fcmovbe
arpl
sarl
bound
inc
sub
jl
out
testl
adc
jb
inc
btr
bound
aam
ret
add
and
dec
jne
arpl
add
stc
mov
jle
and
loop
or
jecxz
dec
mov
xchg
mov
mov
mov
lcall
xlat
sbb
lds
inc
loope
xor
xor
scas
mov
pop
cli
mov
sub
out
adc
ret
mov
int3
lret
stos
lods
cwtl
stc
push
addb
lea
add
mov
add
jae
stos
cmp
xor
push
lock
jl
push
sub
test
adc
cmp
int
inc
add
negb
mov
dec
jae
and
inc
lret
push
or
into
ljmp
xchg
insb
adc
pop
bound
mov
xor
aaa
call
adc
pop
incl
rorl
xor
add
xchg
loopne
adc
add
push
cmpb
ret
xchg
push
push
dec
mov
cmpsb
rolb
dec
mov
sub
push
xchg
add
pop
rcrl
sbb
pop
push
xor
add
iret
pop
pop
out
imulb
jno
mov
add
push
gs
loopne
dec
bound
ds
or
test
aaa
inc
loop
pcmpgtw
jo
pop
adc
sbb
test
mov
xor
mov
and
mov
add
inc
add
nop
inc
aam
fdivl
xlat
daa
in
cld
and
adc
and
addl
jno
insl
push
add
dec
sbb
and
add
or
push
xchg
lods
aam
jne
mov
test
xor
aas
add
push
int
fbstp
cmp
insl
or
lahf
fwait
xor
jl
fistps
fdivp
push
add
fs
sub
jge
lret
xchg
mov
add
or
testb
inc
add
addr16
sti
lret
pusha
pop
mov
leave
rolb
push
inc
inc
and
mov
arpl
push
pop
add
jbe
dec
sub
ficompl
dec
xor
push
xchg
insb
cs
out
sbb
arpl
push
stc
ljmp
sbb
mov
ret
dec
cmp
mov
add
scas
mov
dec
ljmp
into
decl
push
int
add
leave
scas
sti
dec
xchg
sub
xchg
arpl
clc
jl
push
sar
jg
stc
negb
ror
xor
add
and
jp
adc
xchg
aad
sbb
int
add
mov
insl
nop
add
or
add
pop
jp
clc
inc
addl
sub
push
jge
jb
lahf
xchg
push
std
xor
roll
lret
sub
adc
outsl
scas
cs
mov
xor
movl
stc
out
fsts
dec
clc
ds
pop
int
andb
add
mov
jno
adc
jo
cmpsb
lcall
cmp
sub
mov
adc
or
sahf
sub
into
aad
inc
dec
push
fisubrs
adc
mov
push
jl
test
shl
pop
cmc
inc
add
ret
jmp
xlat
sarl
int
cli
in
mov
push
or
jnp
add
pop
xorl
jl
js
arpl
mov
gs
cmp
loop
pop
rcrb
das
bound
ret
cmp
mov
sti
lahf
leave
imul
jp
jg
dec
add
cli
ds
sahf
push
das
add
adc
push
mov
stc
dec
sbb
testl
inc
in
mov
and
mov
mov
out
add
sbb
push
fwait
pop
lahf
mov
and
add
inc
sub
dec
ds
xor
lea
stos
inc
xor
mov
ljmp
cmc
add
sarl
pop
add
out
call
inc
pusha
sbb
jmp
add
test
jge
push
and
mov
mov
xor
push
testl
mov
mov
cmpsb
pop
loop
xorl
nop
add
mov
mov
sbb
cmp
cmpsl
jecxz
mov
add
xchg
leave
sub
add
cwtl
cld
lret
xchg
mov
cli
lods
add
mov
pop
insl
in
push
sub
cmpsb
rcll
jl
jecxz
stc
push
sbb
mov
mov
push
scas
std
sub
push
sbb
stc
mov
scas
cmp
dec
add
loopne
ret
sbb
out
push
push
test
add
lds
out
or
cmp
sti
in
or
xor
repz
sub
dec
hlt
mov
jl
or
in
add
mov
out
mov
iret
test
add
and
leave
pop
pusha
add
push
clc
pop
add
lock
das
push
push
or
or
sub
leave
push
jb
loopne
pop
sub
mov
mov
cli
gs
mov
add
jmp
ljmp
shll
dec
add
pop
repz
out
push
sub
push
test
sub
dec
inc
push
push
sub
push
add
mov
push
lock
lcall
dec
add
or
adc
mov
test
sub
stos
xchg
add
add
jg
test
int3
addr16
dec
mov
sub
hlt
pop
jbe
add
mov
mov
mov
in
push
lret
addb
add
push
cmpl
add
leave
pop
sbb
mov
popa
scas
hlt
push
add
add
js
push
adc
and
dec
jne
jnp
jmp
movsl
stc
nop
sub
sarl
mov
dec
pop
cmp
mov
es
mov
icebp
adc
mov
and
incb
popa
jnp
negb
push
rcll
and
cld
outsb
mov
mov
iret
out
push
add
int
jbe
push
or
xor
sbb
xchg
andb
mov
and
daa
mov
nop/reserved
xchg
mov
pmulhuw
xchg
shlb
sub
pop
adc
mov
in
mov
arpl
pop
jl
fiaddl
or
mov
add
fsubs
dec
cmp
addb
and
std
outsb
cmp
add
push
and
sub
jge
loope
pop
xor
dec
mov
or
pop
leave
mov
pop
inc
xor
cmp
daa
sbb
pop
xchg
loop
add
mov
lods
or
pop
xchg
mov
lea
idivb
js
add
xchg
and
test
xchg
or
lea
or
test
xlat
add
pusha
mov
add
enter
push
adc
fcmove
add
imul
popf
loop
add
adc
stc
pop
ror
outsl
and
sarl
pop
inc
or
movsb
call
lcall
jae
pop
add
mov
loop
and
inc
lock
stc
mov
andl
mov
jae
cld
add
pop
icebp
fists
sbb
mov
imul
iret
outsl
stc
leave
push
mov
popf
mov
js
sub
loopne
xor
cmpsb
mov
push
or
jbe
cmp
add
imul
mov
dec
mov
cs
sub
pop
add
out
and
out
notl
imul
or
ret
rcr
add
jecxz
stos
and
loope
mov
mov
loop
ds
xor
mov
lea
mov
aam
add
stc
daa
add
shl
mov
into
mov
stos
sub
rep
add
fmuls
hlt
pop
in
insl
xchg
hlt
inc
push
jg
adc
mov
push
add
add
int
inc
add
or
in
jmp
jp
pop
adc
add
xchg
jg
jge
or
add
fld
mov
pushf
mov
loope
jb
xlat
sub
or
add
imul
cmp
jecxz
xchg
adc
sti
hlt
ljmp
testb
sbb
int
or
arpl
insl
das
or
cmp
es
add
rcrl
sarl
sub
pop
push
xchg
lret
imul
sub
jno
test
pop
repnz
adc
xchg
jbe
in
pop
scas
mov
and
cld
adc
mov
call
add
add
or
bound
xchg
out
and
push
and
insb
jnp
or
inc
enter
lea
sub
dec
pop
mov
out
xorb
mov
add
sti
into
pop
out
add
loope
insl
pushf
cmc
enter
lock
popf
mull
js
push
shlb
frstor
ret
add
dec
push
rsm
dec
fadds
add
mov
mov
mov
leave
pop
sub
aam
pop
mov
dec
or
dec
xor
outsl
sbb
inc
add
aad
idivl
mov
adc
fdivl
aaa
movsl
xor
jg
sub
pop
dec
pop
in
lea
shl
testb
lret
push
mov
cvtdq2ps
fsubrs
lds
insb
xor
jno
adc
scas
mov
int
or
dec
fwait
outsl
imul
mov
or
xchg
xchg
xchg
jne
and
insb
mov
je
out
int3
mov
pop
out
add
movsb
subb
in
inc
mov
ja
loopne
lea
push
mov
mull
fidivs
mov
sti
lret
mov
es
scas
daa
add
xchg
sbb
and
out
cmp
mov
add
add
jmp
mov
push
and
fs
rolb
dec
gs
leave
scas
or
addr16
add
add
stos
mov
insl
lret
stc
or
add
add
es
hlt
push
dec
or
mov
add
pop
decl
inc
add
pop
xchg
out
pop
adc
inc
inc
mov
xchg
int3
in
add
popf
pop
loope
xor
add
inc
lcall
add
test
sub
arpl
mov
and
dec
and
pop
out
sub
adc
rcrl
jnp
stos
addr16
div
add
ret
mov
or
push
jnp
test
adc
test
mov
add
stos
add
mov
dec
dec
lds
call
cmp
add
jbe
orl
leave
pop
mov
add
call
int
lahf
lods
add
rclb
les
add
jns
adc
fldt
int3
xchg
add
jnp
add
bound
addl
push
into
lods
cmc
pop
mov
add
add
lret
push
ret
xchg
add
mov
cmp
dec
jg
outsl
mov
pop
aad
or
add
cld
xor
xchg
xchg
adc
movsl
dec
mov
mov
dec
outsl
dec
mov
jbe
and
jecxz
call
adc
cmp
shl
inc
in
add
jge
popa
sbb
sahf
push
lods
and
add
mov
sbbb
divb
out
sbb
cmp
and
pop
inc
adc
lret
xlat
inc
scas
xchg
push
jne
mov
and
inc
test
pop
popf
jae
sbb
mov
scas
lock
jnp
repnz
stc
xorb
jl
mov
pop
lahf
les
into
lods
add
xchg
mov
int3
jno
dec
push
jl
xor
add
stos
add
xchg
mov
cmp
dec
fildl
or
lods
scas
in
aaa
jnp
dec
leave
mov
dec
add
hlt
mov
inc
add
pop
sti
daa
inc
push
lea
mov
dec
std
test
xor
xor
push
push
mov
add
enter
add
loope
add
loop
scas
add
out
pusha
pop
inc
sub
add
sahf
ljmp
cmpsl
cmpl
out
fcos
lret
cmpl
or
mov
outsb
or
add
cmp
mov
out
sub
or
xor
lahf
rcll
in
cmp
mov
xchg
jnp
sub
and
popf
or
ror
movsb
jl
add
sbb
mov
loopne
inc
mov
ret
sti
lds
incb
sub
orb
push
testw
dec
add
jbe
cmp
adc
cmpsb
push
add
es
sahf
mov
cmp
xor
mov
popl
jns
cltd
sbb
adc
imul
jge
inc
xor
mov
jecxz
clc
add
lahf
mov
cltd
mov
in
pop
ret
ret
add
add
testb
shl
filds
jp
cmp
mov
dec
jnp
or
andb
add
movsl
fmuls
rcrl
inc
mov
cmp
pushf
pop
insb
dec
lret
mov
int3
push
jecxz
ja
jg
push
xchg
add
xchg
icebp
xor
cmp
insl
hlt
rcll
adc
pop
into
mov
fmull
inc
mov
fptan
cmp
icebp
xchg
popf
dec
mov
movsl
dec
pusha
cmc
mov
jl
dec
add
test
loope
enter
loop
iret
lock
or
jno
xlat
mov
adc
stos
sbb
jb
cmp
mov
in
jne
iret
add
xor
xor
inc
lods
popa
inc
adc
and
fisubl
rol
arpl
sbb
and
rorb
pop
test
jmp
jmp
lcall
push
imul
shlb
test
adc
mov
fldenv
add
push
sbb
push
daa
add
aaa
cmc
jmp
clc
mov
jno
enter
pop
sbb
popa
push
sub
add
adc
adc
mov
adc
jmp
lea
adc
mov
ret
push
push
repz
push
pop
dec
sbb
mov
mov
cmp
add
dec
mov
mov
insb
inc
loope
jnp
mov
add
add
or
filds
adc
dec
gs
sub
pop
or
pop
stos
mov
subl
add
movsb
fmuls
data16
pushf
icebp
into
mov
mov
cmp
sahf
addr16
inc
push
xor
mov
ds
or
inc
add
pop
jnp
or
dec
mov
add
pop
jns
jl
xor
lea
jnp
pop
sub
andl
dec
push
adc
jmp
cmp
dec
add
popa
loopne
test
movb
pop
fucom
arpl
xchg
xchg
add
dec
mov
outsb
xchg
add
mov
repnz
addr16
add
mov
cmpl
xor
fsts
mov
adc
and
pop
gs
into
dec
jl
jg
adc
sub
rorl
pop
or
outsl
andb
mov
iret
or
cmp
stos
sbb
out
daa
test
adc
adc
jb
mov
data16
insb
mov
gs
push
mov
jnp
es
scas
mov
add
dec
sahf
arpl
pushf
sbb
ret
stc
mov
push
or
sbb
mov
jne,pn
xchg
pop
mov
pop
cmp
add
test
decb
iret
add
add
adc
test
hlt
cs
nop
orb
or
sub
sub
sub
inc
int
mov
pop
je
cmp
add
pop
out
push
push
add
mov
mov
sbb
ret
mov
sti
or
add
inc
arpl
adc
adc
sbb
jg
add
jo
add
xchg
scas
xchg
cli
add
stos
xor
and
cmp
outsb
add
aad
push
dec
adcl
pop
push
mov
loop
mov
mov
loopne
xor
test
add
add
push
pop
mov
ret
mov
popa
add
jbe
gs
and
adc
push
outsb
inc
rcrb
add
push
aaa
scas
mov
pop
or
mov
arpl
xchg
in
fstpt
loop
testb
add
pop
repz
add
in
jmp
xchg
lcall
imul
aaa
mov
ss
jp
daa
cltd
dec
lahf
sbb
out
popa
shr
add
and
push
lahf
mov
xor
js
sti
pop
jp
shrl
jge
mov
insb
bound
or
cmp
add
or
cmpl
into
inc
sbb
ja
stc
lods
push
das
mov
sub
jb,pn
pop
mov
mov
pop
adc
jmp
add
outsb
jnp
add
mov
adc
test
rcrl
cmp
xor
loop
pushf
mov
imul
sbb
enter
sub
dec
imul
mov
leave
jnp
jg
xchg
rcrw
jl
lods
rorl
push
fsubrl
insl
jnp
leave
dec
mov
xor
sub
jge
scas
push
sbb
mov
pushf
mov
into
pop
shr
in
cmp
adc
dec
loopne
sub
lea
add
sub
push
push
movsb
mov
in
add
adc
sbb
test
push
adc
jb
out
sub
dec
mov
aas
pop
sbb
test
lret
enter
mov
lea
sub
cmp
stos
filds
sbb
gs
xor
idiv
clc
add
mov
addb
jne
push
pop
pop
add
ljmp
fincstp
shl
divb
inc
xchg
jo
pop
xchg
test
hlt
xchg
rcrb
add
ljmp
je
or
adc
fnstsw
mov
int3
xor
cmc
lods
loop
adc
add
and
adc
repz
sbb
pop
and
sub
jo
int3
cmp
out
bound
xchg
xor
fwait
out
mov
xchg
dec
lods
fdivrs
sarl
mov
ficoms
das
or
ljmp
leave
add
lock
dec
inc
or
add
gs
shll
insl
or
xor
leave
data16
fiadds
lea
sbb
add
jge
jmp
jge
out
add
imul
adc
mov
test
scas
ds
push
arpl
or
push
adc
jbe
xchg
push
lods
xchg
fisubs
call
jo
lcall
sbb
fsub
add
xor
sbb
mov
testl
lea
into
add
lea
sub
ss
add
xchg
mov
insb
dec
scas
push
xchg
movntps
add
or
out
push
jle
orl
mov
add
sahf
cmpsb
add
fsubl
in
mov
ds
testl
lret
xchg
movsb
outsl
add
bound
pop
into
or
add
add
daa
push
inc
add
mov
pop
mov
add
sbb
fbld
data16
ret
jmp
xlat
divl
dec
mov
inc
insl
or
adc
nop
pop
insl
sbb
or
shl
add
int3
rorb
hlt
es
add
lds
sbb
sub
stos
lods
jle
sub
add
xor
pop
push
adc
mov
mov
cmpsb
scas
pop
and
push
unpcklps
xchg
sub
fadds
jo
sub
es
out
notl
mov
cmp
pop
jnp
push
lldt
dec
mov
add
push
pop
add
sub
add
stc
inc
fildl
movl
outsb
dec
stos
pusha
add
hlt
std
dec
sub
mov
icebp
insb
xor
mov
sbb
sub
in
xchg
add
adc
roll
shrl
mov
lret
xchg
push
mov
inc
rclb
add
loop
xor
ljmp
dec
mov
add
movsb
fs
fidivl
sub
pop
inc
jle
mov
jae
addr16
out
dec
movsl
sarl
pop
imul
adc
adc
jo
fistl
setnp
jl
inc
ret
mov
lock
insb
das
aas
hlt
loope
fnstcw
aad
dec
dec
and
xor
gs
sub
push
xlat
mov
mull
jnp
test
push
add
pop
or
mov
outsl
cmpl
jae
mov
das
loop
stos
dec
xchg
mov
adc
enter
adc
ljmp
cmp
jmp
mov
nop
add
fs
adc
in
add
stos
sbb
xor
add
sbb
xchg
lds
sub
shlb
dec
aad
add
dec
mov
add
push
in
or
in
imul
add
xchg
fwait
xor
cmc
push
jmp
out
cli
pop
dec
int
push
sbbl
mov
inc
pmaddwd
mov
popf
mov
gs
xorb
xor
or
sub
popa
ffree
push
testl
and
leave
push
or
test
sub
rclb
pop
push
push
es
jae
add
xor
iret
or
inc
pushf
push
pop
dec
add
sub
imul
add
decb
or
push
pop
mov
xchg
sub
inc
ret
add
jmp
sub
rol
mov
add
rorb
jmp
ret
push
pop
add
push
fcoml
incl
xor
dec
dec
dec
mov
mov
test
xchg
rcll
pushf
icebp
ljmp
push
xor
mov
add
dec
fdivrl
inc
out
fninit
push
push
and
pop
fcoms
add
jb
or
jnp
add
out
scas
leave
add
xor
xchg
out
inc
fsts
and
test
cmp
mov
dec
sub
insb
xchg
adc
add
add
lret
arpl
push
xchg
xchg
mov
dec
fstpl
add
dec
sub
mov
push
and
data16
in
addl
test
rclb
add
xor
les
lods
add
push
jl
arpl
sarb
mov
in
jmp
pusha
add
leave
sub
imull
cmc
stos
jmp
pop
jp
aad
cmp
push
dec
std
cmp
fcomps
jns
jmp
arpl
inc
pop
adc
dec
sub
mov
stos
mov
sub
inc
mov
pushl
rorl
fsts
clc
jge
test
dec
ficompl
cld
sbb
inc
pop
push
sbb
mov
adc
int3
lret
hlt
stos
pop
mov
cmc
push
flds
mov
adc
sbb
std
filds
ljmp
ds
enter
in
rep
rol
pop
adc
add
pop
movsl
negl
test
dec
mov
xchg
jmp
lahf
mov
mov
push
dec
test
fstpl
push
jnp
fisubs
mov
ret
cmp
aad
lea
cli
rclb
adc
sbb
scas
loope
std
sbb
repz
adc
dec
adc
adc
push
add
adc
sbb
or
mov
test
fcomps
adc
add
mov
mov
ret
xchg
xor
insl
outsb
push
loop
sbb
mov
out
sbb
lods
add
fcmovbe
dec
pop
je
xchg
add
add
dec
jbe
and
fnstcw
pop
jne
xchg
inc
add
movnti
jle
lret
jge
aas
cmp
adc
mov
lea
sbb
out
sbb
jo
ficoms
adc
mov
xor
roll
adc
mov
xchg
mov
and
andl
js
ret
pusha
lahf
push
les
scas
jmp
xor
sbb
push
pop
xchg
fstps
nop
add
ror
dec
mov
jle
mov
cli
or
into
lret
xor
pop
push
mov
fucom
cmp
inc
mov
cmpsb
mov
imul
bnd
jl
fimuls
pop
outsl
sub
add
jb
xor
push
cmp
mov
jns
test
test
jle
aad
cmp
sub
mov
stos
mov
popa
add
add
cmp
jnp
pavgw
xchg
sti
out
and
call
inc
dec
adc
es
jg
inc
xor
sub
push
cmp
sbbb
mov
addb
hlt
ud2
xor
and
add
lret
push
out
pop
sbb
push
jmp
sbb
add
mov
mov
cmpsb
add
xchg
mov
adc
xor
ljmp
outsb
shlb
dec
and
push
inc
cmpsb
xchg
sub
mov
xor
xchg
add
arpl
repz
inc
add
push
out
add
popa
push
push
xchg
cmc
ljmp
dec
mov
stos
xlat
mov
mov
add
mov
in
cmp
fistpll
or
outsl
xor
add
mov
test
mov
jp
xor
inc
fistpl
mov
lds
sarl
xor
add
push
outsb
test
dec
or
pop
dec
iret
icebp
or
inc
lds
imul
and
das
ja
je
outsb
in
dec
mov
jbe
shll
jle
xor
pop
inc
push
xchg
sub
add
mov
out
mov
push
lods
push
out
add
mov
pop
sahf
rclb
add
shlb
jb
clc
or
dec
or
ss
xor
pop
fbstp
movl
filds
mov
test
mov
add
inc
mov
pop
cmc
mov
adc
pop
clc
mov
inc
jae
dec
push
jge
mov
xor
xchg
lret
dec
ror
pop
cld
aad
shll
fstl
mov
icebp
roll
lds
inc
test
lock
add
mov
pop
ljmp
andb
mov
out
cmp
pop
pop
cmp
add
jecxz
xorl
sbb
ss
outsl
xchg
pusha
scas
test
scas
fmuls
xchg
loop
pushf
add
imul
pop
mov
rolb
fcmovu
idivl
loop
int3
outsb
mov
jg
stc
or
leave
aaa
std
cmp
mov
adc
inc
addr16
or
adc
loop
push
insl
xchg
mov
insb
add
inc
xor
arpl
lahf
push
lret
movsb
pop
pop
bound
add
sbb
and
mov
cmp
pop
add
js
pop
jge
jno
jae
cmpsl
jo
add
fmull
fwait
sbb
or
loope
cmpsl
in
mov
cli
repz
mov
push
push
sub
add
popa
push
dec
sbb
jb
dec
pop
loop
sahf
xor
inc
movsb
fidivrl
lret
jo
mov
xor
bound
ret
xchg
ljmp
test
add
xchg
test
test
nop
cmpsl
mov
mov
test
adc
jo
add
call
sbb
test
into
sub
xchg
push
push
jb
mov
ret
aas
pop
add
sub
add
rclb
in
sbb
pop
add
push
gs
decl
cltd
sbb
ret
icebp
stos
dec
out
loop
push
sbb
add
sbb
ss
pop
sub
add
xchg
sahf
fisttps
shll
fs
and
int
mov
add
cmp
out
in
add
xor
xchg
lods
push
outsb
pop
rcr
pusha
fadds
push
pop
sahf
mov
or
mov
repnz
call
flds
xor
dec
sarb
mov
add
test
mov
push
xlat
pop
arpl
or
popa
jp
shr
push
ret
mov
enter
loopne
pop
incl
fistps
js
adc
andl
or
leave
in
ja
dec
xchg
add
cli
xchg
nop
push
lcall
aam
xchg
add
cmp
stc
jnp
jno
gs
mov
mov
roll
or
sahf
jns
xor
test
mov
push
int3
jl
adc
das
xlat
mov
enter
ret
ss
push
sub
loopne
jns
push
mov
add
cmpsl
mov
add
mov
push
enter
mov
lods
jl
mov
nop
mov
mov
sahf
dec
test
data16
js
xlat
repnz
loope
add
test
call
imul
cmpxchg
rorb
aaa
add
lcall
sbb
mov
cmp
sbb
es
lret
mov
add
xor
jno
lock
lcall
add
add
fyl2xp1
aas
int
xor
sbb
lret
insb
cmpsl
subb
mov
push
xchg
scas
lret
arpl
std
div
push
addb
mov
add
sub
pop
out
mov
mov
mov
mov
push
in
sbb
icebp
adc
hlt
add
repz
shrl
ja
int
and
loope
and
stos
adcb
scas
pop
mov
out
js
insl
fwait
rcll
fildll
add
scas
mov
inc
xor
or
pop
add
jp
push
sbb
mov
out
outsb
add
push
mull
stc
in
bound
mov
dec
ja
iret
mov
mov
test
sbb
cltd
dec
popa
cmp
push
mov
adc
add
mov
add
inc
subl
outsb
pushl
cld
mov
incl
scas
mov
les
fwait
mov
insl
outsl
adc
jecxz
imul
ljmp
sbb
pop
lahf
xchg
or
fstps
sarb
lahf
test
add
add
stos
fs
movsl
mov
push
mov
lret
or
cs
mov
sub
and
movl
xchg
imul
mov
add
dec
push
fwait
idivb
add
dec
pop
add
ret
or
adcb
dec
cmc
push
or
in
shll
frstor
cmp
repnz
xchg
iret
call
rep
int
orl
sub
ret
sbb
cmp
and
popf
dec
push
call
add
movsl
jnp
add
js
fisubrl
bound
cmc
or
mov
mov
xchg
adc
shl
jo
loopne
sub
bound
sbb
dec
out
lock
sarb
sub
adc
inc
push
lahf
mov
sub
jge
lret
into
xchg
jmp
sti
adc
or
pop
cmpsl
ret
jmp
fs
xor
mov
push
adc
push
outsb
lods
hlt
mov
push
sbb
and
jle
xchg
dec
dec
out
mov
sbb
rcr
jge
and
xorl
push
fbstp
mov
sbb
stc
fmull
cmc
decl
jnp
add
jmp
sub
sub
adc
dec
mov
xor
daa
sbb
inc
push
cs
adc
mov
dec
das
jmp
or
notl
out
push
or
or
inc
push
add
daa
add
or
scas
mov
mov
xor
add
sahf
mov
shrl
xor
sbb
fadds
or
or
add
jp
insl
lret
mov
push
add
sub
mov
jo
cmp
mov
sub
xchg
push
rorl
pop
cltd
aad
dec
fdivp
int
jge
sarb
hlt
cld
in
add
sbb
add
sub
adc
push
jecxz
iret
hlt
rcrl
divl
mov
dec
sti
xor
int
sgdtl
test
push
or
add
into
dec
adcb
cmc
pop
je
mov
xor
add
insb
popf
inc
inc
jbe,pt
mov
rorl
loop
mov
mov
fiadds
jecxz
divb
jb
mov
xorb
lock
push
loopne
hlt
pop
insl
sub
shl
imul
int3
cmc
xor
mov
add
neg
add
int3
ljmp
inc
jns
sub
push
sahf
mov
out
push
adc
mov
cmc
add
mov
ret
cmpsl
cmp
out
inc
cmpsb
jl
lds
jne
es
jge
rolb
dec
hlt
out
sub
add
adc
aaa
add
mov
sbb
lahf
push
xor
or
into
inc
jmp
and
out
in
in
push
dec
add
movsb
xchg
scas
aad
push
add
jb
and
dec
jge
mov
dec
mov
add
jecxz
inc
lock
rolb
push
push
popf
mov
inc
lahf
mov
push
shlb
mov
push
jne
test
bound
outsb
fcmovnb
and
stos
mov
add
fwait
adc
imul
out
adc
popa
cmc
mov
add
insb
aaa
cld
les
setae
add
jnp
and
mov
cltd
sbbl
mov
popa
aaa
jecxz
mov
pop
xchg
mov
add
lds
adc
pushf
sub
cmp
push
push
mov
add
inc
imul
ret
loope
mov
or
jg
pushf
nop
pop
xor
and
fld
loop
aad
test
push
add
xor
inc
dec
jmp
inc
sub
inc
adc
bswap
sbbb
xchg
push
sbb
addr16
push
push
scas
icebp
mov
add
ret
xchg
dec
fidivrs
mov
jecxz
cmp
iret
pushf
sub
in
mov
xor
dec
pop
sarb
push
repnz
and
dec
jl
call
and
mov
shll
push
dec
jne
mov
or
add
push
rorb
test
and
and
mov
add
mov
sub
or
pop
fdivl
xlat
adcb
movsl
mov
xchg
fs
shlb
data16
mov
add
xchg
sub
mov
cmp
mov
int3
in
add
jbe
out
push
clc
sarl
jp
movsb
stc
sti
pop
les
jno
push
lret
xor
dec
jmp
out
mov
lock
sbb
cmp
and
test
cmpsl
in
xor
pop
test
push
js
pusha
out
testl
stc
pop
sarl
add
ret
xchg
add
insl
mov
adc
and
mov
add
jmp
jmp
fwait
jb
popa
mov
cli
out
clc
adc
pop
stc
push
cmpsb
lock
dec
push
jp
cmp
cmp
sub
inc
push
cmpb
jno
icebp
mov
shll
adc
in
ja
sub
lret
mov
cmp
mov
stos
push
cmc
inc
add
jo
test
out
pusha
lret
addb
and
addl
mov
mov
mov
leave
repz
add
test
mov
fdivl
cmpsb
add
mov
adc
adc
and
cwtl
dec
dec
scas
lahf
call
mov
imul
sbb
mov
pop
dec
xor
jae
test
xchg
ss
mov
add
add
stos
int
mov
add
adc
lock
lea
lods
adcb
mov
pop
insl
ss
ljmp
cs
dec
popa
sub
and
cwtl
orl
inc
mov
repnz
pop
roll
pop
mov
aam
pop
mul
jbe
jno
in
cmc
jl
cmp
lahf
lods
lea
adc
repnz
ja
add
add
and
in
cmp
bound
mov
and
dec
jno
test
cmp
xor
sub
and
ds
rorb
mov
sub
fldcw
mov
neg
mov
inc
dec
jg
add
push
and
sbb
fistl
stos
lods
psrad
enter
mov
add
stos
xchg
xor
mov
addr16
aad
mov
push
sub
push
insb
je
jbe
jne
add
outsb
jg
jl
out
lcall
jle
lret
adc
cmp
adc
inc
xor
pop
out
pop
push
sarb
sbbl
push
xchg
dec
and
nop
push
add
arpl
add
notb
add
cmp
cmc
add
jmp
lcall
push
sub
mov
imul
add
daa
cmpsl
add
bound
add
xchg
mov
arpl
add
jmp
pop
cmp
mov
pop
mov
fldl
pop
lret
dec
add
in
xchg
add
sahf
mov
adc
rclb
mov
sbb
xchg
and
movsb
jmp
mov
mov
push
hlt
cmpsl
xchg
xor
inc
ja
or
ljmp
jl
xor
push
cmpsl
xor
gs
jp
fistpl
aas
test
sbb
in
fcoms
adc
mov
adc
mov
pop
xchg
mov
add
xlat
cld
imulb
mov
or
stos
sub
pcmpgtd
fiaddl
clc
xchg
into
inc
mov
pushf
jp
dec
adc
adc
dec
dec
add
cmp
push
push
js
or
pop
iret
into
faddl
or
sub
push
inc
and
les
xchg
into
add
cmp
dec
mov
pop
out
hlt
ret
sbb
sbb
iret
push
jl
add
rsqrtps
xor
add
mov
out
cmpsb
aaa
or
in
pop
push
stos
xor
or
add
call
sub
dec
dec
mov
test
lds
test
ljmp
clc
cli
mov
fsubr
push
popf
adc
jecxz
cmc
shrb
lods
iret
sbb
aaa
jns
fcomps
xchg
add
imul
adc
add
mov
loopne
fdivs
jge
add
testl
pop
jae
pop
jb
and
pcmpeqd
jge
add
fstpt
inc
outsl
lcall
dec
add
pusha
aad
mov
scas
scas
mov
jo
fisttpl
jl
mov
push
addr16
loop
jp
adc
push
out
xchg
add
xchg
sbb
test
lret
cmpsb
mov
dec
push
sub
dec
and
cmp
mov
hlt
or
mov
stos
dec
inc
testb
push
ss
and
fsubr
ds
and
dec
xchg
insl
xchg
push
push
sahf
cmc
cs
sti
add
and
mov
mov
mov
idiv
out
fistps
pop
cmp
loope
mov
fistps
shlb
push
mov
push
testb
jns
filds
cwtl
movsl
ret
add
mov
pop
cltd
add
icebp
jge
fbld
xchg
add
inc
pop
xchg
sarb
scas
sbb
movzwl
add
cmp
xchg
test
inc
imul
add
xor
decb
mov
cld
or
or
or
adc
push
dec
add
nop
and
out
dec
dec
or
lods
mov
test
mov
popa
add
jns
sarl
add
stos
ror
jp
sub
test
stos
mov
fists
pushf
outsl
sbb
add
mov
sbb
xchg
das
pop
xchg
cmc
jbe
add
out
jns
sub
insb
movsl
mov
adc
sbb
push
mov
mov
add
jmp
loop
in
outsl
add
jp
das
out
push
into
push
sub
cmp
dec
or
add
out
xchg
pop
add
stc
sbb
aad
push
rcr
mov
add
insb
aas
sahf
out
xchg
and
out
sahf
insl
sub
pop
sub
pop
out
iret
mov
cli
lret
push
add
inc
notb
mov
add
add
lcall
pushw
mov
or
mov
loope
sahf
test
fcmovnu
leave
mov
sbbb
mov
or
jp
cmpsb
into
and
cmc
gs
dec
sbb
mov
mov
int3
lret
xor
push
std
cmpl
ror
arpl
bound
mov
sysexit
or
and
add
cmp
mov
mov
lods
adc
mov
and
dec
ret
inc
mov
push
lahf
jns
outsb
aaa
js
cmp
jecxz
dec
push
push
cmpsl
push
lods
ja
sbb
dec
mov
pop
push
add
jno
cmc
fdivp
or
sub
xor
outsb
clc
add
mov
ret
mov
add
outsl
sti
jns
stc
pop
add
addl
iret
or
mov
xchg
adc
sub
add
popf
fidivl
ljmp
iret
fwait
imul
ret
dec
fldt
cmp
sbb
pop
repz
xor
mov
cmp
jmp
xor
into
xor
nop
out
setl
add
int3
adc
cwtl
outsl
movsl
add
jno
nop
jl
iret
push
jle
add
jae
mov
cmc
xor
push
xor
stos
iret
cmp
repnz
mov
das
mov
mov
cmp
adc
ret
add
sbb
pop
push
sub
hlt
cmp
push
mov
push
aam
xor
loope
or
jge
lock
cmc
clc
push
add
cmpsb
and
mov
push
dec
iret
push
fs
jbe
sub
sbb
out
decl
sub
inc
add
into
cmpsl
pop
jo
mov
xor
add
lea
mov
ja
add
push
lcall
xchg
or
sti
xchg
ret
pop
dec
loop
scas
dec
mov
dec
pop
lea
cmp
idiv
and
and
add
es
xchg
cmp
pusha
ret
xor
add
cmp
inc
negb
cmpsl
and
movsb
mov
pinsrw
jl
faddl
psubd
ljmp
dec
cmp
jecxz
and
sub
xchg
frstor
sbb
in
mov
mov
pop
mov
loopne
in
xchg
and
ds
fcmovne
push
popa
mov
adc
dec
les
jge
sub
or
add
xchg
push
idivl
aas
stos
ret
sti
push
andl
xchg
push
push
or
dec
add
out
xchg
sbb
mov
push
scas
dec
xor
mov
jl
mov
mov
jo
aam
xchg
test
in
call
dec
cltd
sbb
push
nop
mov
xor
push
roll
adc
fcmove
sbb
pop
test
pop
stos
add
pop
shl
popa
fs
sub
mov
icebp
int
mov
loopne
mov
pop
inc
outsl
mov
dec
mov
dec
cld
add
rolb
movsb
popaw
mov
pop
mov
mov
sti
lret
sbb
cmpsb
add
ret
and
push
add
mov
inc
add
pushf
sbb
push
mov
movb
ds
push
enter
addr16
sbb
ret
cld
mov
add
insl
jle
add
out
push
movsb
and
adc
out
outsb
inc
test
mov
and
or
add
xchg
in
mov
adc
stos
jge
lcall
rcrl
ljmp
loopne
imul
xchg
mov
insl
test
lahf
aad
dec
add
ds
push
add
fcomi
jne
jb
mov
test
enter
sub
test
add
add
dec
xor
push
xor
into
out
add
dec
cwtl
cmp
mov
es
lahf
pop
rorl
adc
sub
mov
add
mov
jb
pop
stc
fwait
clc
test
jae
rorl
add
adc
test
int3
int3
sti
pop
test
add
movsb
adc
jle
jo
inc
mov
and
mov
jecxz
mov
push
push
xor
push
dec
xor
inc
loopne
sbb
adc
and
jecxz
mov
mov
inc
add
inc
js
pop
scas
add
pop
dec
roll
mov
stc
sti
rclb
outsl
jno
xor
mov
jnp
leave
push
test
scas
add
push
mov
test
jne
xor
in
inc
xlat
pop
sbb
lock
fwait
jle
push
call
pop
cmp
lahf
add
add
mov
arpl
jne
xorl
lcall
push
mov
out
adc
inc
sbb
out
sti
inc
push
and
or
dec
dec
ret
orb
add
cmpl
add
ljmp
add
insb
scas
shl
outsl
test
add
pusha
mov
sbb
and
lret
push
js
add
add
push
push
add
les
dec
fisubrl
int3
and
or
pop
adc
into
out
sub
movaps
in
sub
adc
inc
clc
frstor
cmp
pop
cmp
fists
add
gs
mov
lods
inc
push
outsb
clc
setge
mov
jg
adc
xor
dec
push
add
cmp
push
sub
mov
roll
push
jp
outsb
mov
scas
push
adc
pop
and
in
and
sub
add
jge,pt
fbstp
repz
jle
sub
sarl
xchg
cmpsb
xchg
jmp
push
movsl
decb
mov
xor
leave
dec
add
es
cmpsb
lock
cmp
fsubrp
bound
pop
sub
add
shll
mov
sbb
repnz
roll
add
pop
in
cwtl
or
xchg
call
pop
pop
fs
leave
sub
sub
push
cs
roll
add
add
mov
fwait
inc
lret
mov
sbb
flds
push
mov
xorl
gs
adc
popf
mov
iret
popl
rcr
lds
jbe
sahf
pop
fbstp
push
std
add
push
or
cmp
adc
pusha
lahf
mov
pushf
int
push
mov
out
jnp
vpsrad
pop
sbb
xchg
inc
inc
cld
fisttpl
dec
push
std
in
mov
lds
iret
repz
in
mov
out
jg
xchg
sahf
xchg
out
sbb
dec
popf
int3
mov
adc
fidivl
in
push
add
inc
pushf
negb
out
repz
add
in
xchg
ds
push
stos
mov
fnsave
lock
push
mov
les
jns
sbb
xor
hlt
sahf
iret
add
mov
add
fisttpll
addb
or
dec
insl
mov
mov
cltd
cli
add
movsb
and
cmp
inc
cmp
fnstsw
pop
in
add
in
arpl
xor
cmp
xchg
dec
and
add
cmp
xor
out
and
mov
scas
lods
sub
movsl
push
aaa
es
shll
jl
lea
xor
push
rcr
fwait
mov
mov
fcmovnu
and
add
inc
int3
fwait
popf
add
mov
ljmp
xlat
ret
mov
mov
inc
out
mov
pop
add
and
rcrb
add
js
in
lret
xchg
and
clc
sbb
mov
mov
bound
cmp
sub
mov
pusha
and
adc
push
xchg
mov
pop
iret
push
dec
add
xor
out
movsl
jmp
andb
lea
push
xor
mov
out
pop
popf
xor
xor
test
cmp
jl
jnp
adc
push
mov
mov
inc
mov
sub
lea
xchg
push
rcrl
incb
push
and
or
mov
fstpl
ds
jmp
pop
insl
call
imul
outsl
dec
pop
add
sub
sub
xor
add
out
incb
inc
inc
add
ljmp
mov
xchg
into
adc
jne
andl
sub
add
rcrb
dec
and
sbb
lahf
add
loope
fsubr
jmp
fiaddl
push
dec
push
outsb
into
add
mov
subb
repnz
out
cmp
lods
mov
pop
icebp
add
add
idivb
jne
sub
xor
or
pop
mov
add
or
iret
add
shll
ret
in
mov
gs
repz
lret
inc
pop
dec
xor
and
sbb
decl
add
cltd
mov
cmp
add
ds
and
add
ret
sbb
jg
hlt
test
mov
jb
gs
xor
adc
inc
cmpl
dec
gs
xor
stos
dec
xchg
add
xor
dec
movl
ds
push
push
dec
lret
sbbl
mov
repz
mov
push
insl
mov
test
leave
mov
adc
divb
push
je
mov
dec
fwait
in
add
dec
jg
sub
mov
shrl
mov
scas
xlat
sub
enter
sub
loope
orb
add
shlb
pushf
adc
xor
adcb
sahf
mov
in
add
or
cmc
add
mov
and
subl
out
daa
push
stos
pop
popa
xchg
js
xchg
mov
ds
dec
int
imul
iret
mov
lahf
pop
xor
inc
add
stos
mov
cmp
test
out
mov
jmp
in
incb
xor
das
inc
popf
push
iret
push
dec
add
xor
jl
flds
shll
pop
pop
test
test
xchg
repnz
mov
sub
je
lea
pop
dec
add
out
dec
int
idivl
jl
pop
and
pop
add
sub
orb
jecxz
mov
dec
mov
test
aas
sub
jmp
test
gs
pop
xor
sar
notb
push
xor
jnp
ljmp
bound
pop
loope
or
repnz
cltd
lods
add
pop
jae
inc
and
pop
outsb
pop
add
sbb
mov
mov
mov
cmp
cmp
jl
loope
int3
jg
sbb
iret
fiaddl
rcll
inc
mov
cmpsl
fisubrl
jecxz
cmp
ljmp
mov
ret
das
jmp
and
mov
ss
out
out
cltd
or
pop
and
sbb
les
adc
mov
push
lds
push
adc
jns
data16
imul
sub
dec
pop
pmulhw
or
push
sbb
call
sarl
mov
ret
fldcw
mov
fidivrl
add
mov
adcl
scas
add
arpl
cltd
sbb
sub
mov
adc
lds
iret
repz
ret
cli
aam
adc
pop
dec
jg
pusha
add
adc
push
mov
push
and
push
ret
add
adc
pusha
subb
push
sbb
mov
fimull
add
xlat
fstps
lret
sar
add
addr16
shrb
pusha
add
jns
xchg
lret
xchg
add
movsl
into
repz
push
sbb
insb
stos
push
popa
scas
mov
rorl
jo
jnp
shl
add
and
or
cmpsl
add
outsl
mov
adc
jbe
sbb
or
pop
push
inc
fidivs
push
mov
sbb
xchg
bound
std
dec
scas
fildl
fdiv
inc
pushf
je
dec
xchg
adc
push
mov
fcmovb
jmp
sbb
pop
fsub
les
pop
jae
dec
in
cmpsb
fldenv
mov
icebp
add
cmc
xchg
lret
outsb
xchg
add
fdivs
addb
cmp
shlb
mov
push
dec
popa
and
push
mov
push
imul
jns
pop
ljmp
cld
pop
test
ret
add
dec
push
jg
and
cltd
add
sub
and
in
jne
scas
test
mov
cmp
stos
push
xchg
sbbb
push
push
and
je
add
push
add
xor
aaa
mov
sbb
sbb
push
push
inc
inc
das
ds
mov
or
movq
and
cmp
out
add
add
mov
loope
add
mov
pop
or
sub
stos
add
xchg
xlat
jb
rcr
lret
add
push
inc
mov
add
bound
nop
mov
scas
leave
adc
cmp
or
mov
les
cmpsb
cmp
push
push
mov
sub
mov
int3
invd
inc
push
stc
cmp
movl
stos
inc
mov
push
outsl
jb
add
push
sub
inc
mov
mov
inc
fcompl
push
push
lahf
and
jne
jno
fwait
scas
cmp
xchg
ss
ret
or
out
mov
arpl
jb
inc
push
adc
out
fs
xor
outsb
fiadds
stos
mov
hlt
add
add
jne
pop
inc
mov
cli
cld
call
add
mov
push
dec
add
mov
add
sub
pop
out
xchg
mov
pop
test
mov
adc
fwait
add
arpl
add
ljmp
sti
jp
mov
inc
incb
push
dec
scas
xor
or
popf
sbb
adc
pusha
repnz
jnp
clc
in
dec
mov
xchg
int
pop
add
hlt
and
add
fnstenv
lds
in
push
jle
fnop
jp
sbb
sub
into
jns
sbb
mov
add
push
dec
mov
stos
add
mov
pop
sbb
fadds
mov
sbb
lcall
sub
mulb
pop
dec
sahf
rcrl
mov
pop
out
push
cmp
ss
jg
pop
mov
mov
push
xchg
xchg
mov
xor
shlb
xchg
notl
or
xlat
bnd
icebp
pop
sub
repnz
outsl
sarl
xor
out
in
insb
mov
add
sub
push
adc
sti
or
dec
shrl
sub
dec
pop
push
mov
add
dec
push
add
dec
ficoms
xchg
rolb
popfw
cld
sub
and
dec
int
xor
subl
adc
rorb
in
pop
fstpl
cltd
mov
mov
ss
adc
outsb
aas
jns
xor
into
decl
daa
mov
add
out
jno
aad
sub
aas
mov
add
or
and
lret
inc
push
mov
test
movsb
mov
gs
push
lods
mov
scas
addb
and
adc
sbb
lods
in
sbb
xchg
jne
push
test
adc
add
enter
sbb
inc
hlt
daa
adc
jge
xchg
jl
int
sub
sarb
lahf
jl
sbb
or
mov
cli
sbb
adc
leave
add
xchg
stc
add
scas
mov
fstpl
adc
add
or
add
fnstenv
testl
mov
lret
call
addl
jbe,pn
lret
mov
lcall
inc
movsl
in
or
mov
xor
pop
add
mov
xor
pop
lcall
inc
fildll
xchg
dec
pushf
cmp
add
pop
push
sub
jnp
mov
sbb
leave
add
rcr
out
add
std
call
and
and
pavgw
incl
cld
cmp
jg
aas
std
cmp
add
mov
mov
inc
dec
mov
rcrb
mov
cld
test
daa
xchg
mov
adc
icebp
push
pop
push
stos
imul
xor
add
out
fs
fcmovu
lgs
adc
mov
pop
repnz
sbb
jg
jo
lock
or
out
das
fdivrs
sub
mov
stos
xor
push
mov
clc
cmp
movsl
into
in
xlat
sub
jecxz
xor
add
jl
daa
test
lods
xchg
push
or
test
push
pop
mov
sub
mov
test
mov
and
rolb
cli
stos
leave
add
pop
loope
cld
stc
aad
sub
int3
pop
jmp
scas
in
or
xchg
mov
inc
dec
jae
add
sbb
mov
xchg
icebp
push
mov
push
mov
dec
imul
outsb
movsb
in
adc
push
adc
in
insl
roll
xlat
out
cmp
rcll
sub
mov
and
push
xchg
push
inc
adc
in
xor
shll
cmpb
mov
add
mov
pusha
push
add
sbb
dec
inc
add
inc
ficompl
cmp
adc
int
mov
cld
shrb
pop
aas
int3
test
hlt
jae
mov
mov
ret
rol
cmpsl
mov
mov
add
push
arpl
les
or
mov
notb
pusha
add
push
xor
xchg
and
cmp
testl
jle,pt
je
add
lcall
aaa
int3
cmc
les
std
mov
add
jmp
mov
push
cmp
fsub
mov
mov
cltd
loop
insb
mov
push
inc
shrl
lcall
push
xchg
scas
pop
icebp
sub
mov
xchg
inc
ja
fwait
outsl
adc
jl
jnp
mov
ficompl
push
cltd
ret
insl
push
add
ss
jecxz
lock
xchg
jno
fidivs
cwtl
dec
push
mov
adc
pop
sub
mov
xor
dec
lock
mov
push
mov
and
pop
mov
dec
out
arpl
mov
aam
sub
mov
dec
out
in
ds
push
shl
push
inc
ljmp
sub
push
and
xchg
push
pop
movsb
dec
cmp
sub
mov
push
sub
mov
in
mov
or
add
outsl
push
sti
in
pop
int
cltd
fsubrl
adc
add
jg
cli
arpl
mov
clc
dec
adc
in
aas
pop
stos
add
data16
mov
push
xor
pop
roll
fdiv
inc
xor
xchg
or
pop
dec
insl
outsb
xchg
mov
pop
xor
push
sub
sbb
add
mov
lret
push
xor
add
outsb
add
test
lds
adc
xchg
out
stc
ja
mov
sti
dec
mov
cli
mov
sub
inc
mov
mov
fwait
mov
in
add
testb
fildl
jp
lret
sub
push
add
sahf
pop
mov
fcmovnb
or
mov
jns
jg
mov
mov
enter
out
jl
add
addr16
xor
loopne
gs
add
lahf
cmc
leave
push
jle
jmp
jecxz
scas
xchg
jno
xchg
inc
jb
mov
fldcw
push
add
xchg
aam
jo
dec
mov
jae
pavgb
test
arpl
pop
or
xor
push
cld
sarl
jns
aam
test
shll
movsb
push
push
sbb
out
adc
or
mov
add
and
insl
jae
xchg
jl
rcrl
orl
push
and
cmp
mov
fldenv
stos
lods
cli
stc
mov
add
adc
loop
ret
mov
call
in
sub
sahf
mov
xor
scas
mov
int
ss
add
imul
push
add
adc
xchg
mov
cmpsl
and
ret
push
jne
xor
mov
adc
inc
gs
hlt
fdivr
fiaddl
stc
aas
clc
inc
push
pop
mov
pop
inc
sbb
daa
mov
pusha
in
push
cmp
or
add
sbb
mov
icebp
sahf
add
in
cltd
sarl
adc
out
int
ret
loopne
add
sbb
xor
push
mov
divl
dec
das
sub
dec
xchg
loop
out
and
insb
sbb
dec
sub
pop
gs
add
sbb
mov
xor
xchg
xor
mov
dec
mov
or
or
outsl
jnp
jb
dec
dec
adc
clc
jl
test
adc
xor
mov
int3
push
mov
addr16
int3
push
test
adc
in
shl
stc
shrl
add
add
in
add
and
push
lahf
push
and
leave
jne
or
pop
mov
jmp
xor
sub
incl
add
mov
es
jnp
in
add
mov
in
test
xchg
faddl
mov
sbb
cs
repnz
sub
cmp
out
dec
dec
xchg
or
xorps
jl
push
add
sub
fsts
stos
out
mov
std
imul
fstpl
movntps
xlat
adc
jnp
cmp
mov
adc
scas
inc
mov
fucomip
out
cmc
inc
dec
fstps
clc
sub
pusha
adc
repnz
arpl
jg
cmovl
inc
mov
shrl
pushf
xchg
arpl
out
xchg
xchg
cmp
jecxz
call
fucomp
fadd
pop
or
cld
jne
mov
pop
decl
mov
adc
mov
push
mov
jmp
add
or
sbb
out
vmovntdq
shl
push
add
sbb
insb
dec
mov
and
push
sahf
sub
jb
cli
push
dec
mov
out
in
fwait
es
addr16
mov
add
sbb
into
xchg
xor
or
icebp
mov
add
and
test
sub
dec
arpl
js
add
ja
dec
out
pop
add
out
add
and
stc
or
and
orb
das
push
in
cmp
cmpsb
xchg
jp,pn
mov
and
fwait
aas
ds
popf
mov
cltd
push
inc
movsb
lea
in
lcall
sti
into
ss
xor
add
dec
jae
test
mov
add
jnp
inc
loop
add
outsb
pop
sbb
mov
push
repnz
dec
iret
decl
sub
popa
cmp
push
cwtl
pop
add
call
das
add
lcall
xorb
int3
cmp
cmp
push
ja
pop
mov
add
mov
addr16
adc
rolb
xchg
stos
mov
pop
orl
dec
call
jb
add
jno
mov
dec
outsl
lret
aas
and
cmp
jmp
cld
xchg
cmp
or
mov
adc
pop
popa
in
imul
push
sbb
jecxz
mov
and
insb
lcall
popf
ss
scas
roll
pop
movb
arpl
cmpsl
in
inc
or
lock
push
dec
es
sub
inc
add
sbbl
lcall
test
xchg
jl
ficoms
push
xor
test
sub
stos
jnp
or
sbb
cwtl
scas
sbb
fs
mov
sub
add
fimull
add
jmp
repz
xlat
mov
pop
push
test
cmc
sub
mov
dec
mov
cli
add
insl
jecxz
pop
mov
jo
mov
push
add
dec
mov
in
fwait
das
movsl
push
dec
popa
sbb
add
es
stos
bound
xchg
cmpsl
or
fidivrl
mov
add
iret
jl
pop
out
xor
test
jns
add
mov
pop
push
scas
jnp
mov
addl
mov
dec
or
and
shlb
sub
add
int
xchg
ljmp
out
jns
push
das
in
lret
fmull
testb
push
push
cmp
frstor
xchg
push
adc
xlat
lret
pop
test
test
mov
and
xlat
mov
jle
daa
cltd
scas
inc
push
js
cmp
test
push
jl
sarb
sub
nop
lods
pushf
adc
lret
mov
mov
shll
cmpb
sub
mov
jmp
adcb
dec
adc
cmp
insl
dec
add
xchg
cltd
pop
shrl
testb
lret
jecxz
sbb
add
lea
inc
mov
pop
push
std
cmp
adc
jae
add
test
cltd
enter
mov
movd
add
aad
cmp
jmp
mov
or
repz
mov
hlt
or
mov
fldenv
add
xchg
xor
stc
pop
inc
jmp
xchg
inc
push
clc
add
and
out
movsl
pop
add
jbe
lods
jnp
repnz
ret
fmulp
mov
add
xchg
pop
jno
jmp
cmpsl
adc
jg
gs
cmp
call
lock
loope
int
inc
mov
dec
jle
out
add
adcl
in
ret
inc
sbb
subb
addr16
loope
add
mov
mov
fistpl
fldl
popa
add
hlt
sub
test
cmp
inc
jge
inc
cs
cld
push
ror
mov
ret
stos
repnz
jnp
fldt
jae
xchg
mov
stc
sarl
add
push
in
jmp
sbb
jne
mov
roll
pop
out
dec
mov
sub
sbb
sti
stos
ret
into
out
cld
mov
cmp
mov
jmp
jle
add
pop
gs
jnp
add
xor
pushf
in
jg
add
roll
call
test
lret
xchg
mov
aas
orb
sbb
mov
mov
pop
mov
cmpsb
sub
mov
cmpl
mov
out
xchg
jl
pop
nop
push
sub
aad
jl
ret
pushf
push
xchg
mov
cmp
or
add
cmp
lods
loope
sub
pop
adc
leave
scas
add
inc
nop
dec
inc
cltd
data16
push
xor
adc
add
in
jmp
shl
add
stos
inc
ljmp
dec
and
mov
mov
mov
push
std
call
and
cmp
loopne
inc
popa
fimuls
adc
repz
cmc
leave
mov
popf
mov
adc
test
es
and
test
out
pusha
add
sbb
xchg
and
or
xchg
mov
fdivp
lods
xchg
push
leave
mov
or
mov
or
ljmp
jg
add
mov
jmp
mov
sbb
aam
loope
scas
data16
add
inc
divl
int
iret
inc
add
inc
jae
dec
inc
fxch
add
lcall
add
pusha
popa
das
addr16
add
cs
shrb
push
cmp
adc
in
hlt
push
addb
sti
mov
or
test
test
inc
add
jg
inc
rcrl
roll
aam
imull
aad
push
ja
out
dec
repz
fs
mov
xor
ret
outsl
add
roll
xchg
fwait
ret
out
das
or
fisttpll
repnz
jbe
ret
jge
fbstp
mov
jnp
mov
xor
jns
cs
movaps
add
movsb
push
add
je
xchg
out
push
loop
insl
dec
lds
cwtl
lods
xchg
hlt
outsb
xchg
add
mov
adc
pop
movsl
and
fs
dec
xlat
or
adc
add
scas
sub
mov
mov
add
cli
shll
out
mov
mov
int3
jbe
aaa
rcll
mov
dec
lods
cmp
pushf
add
push
add
mov
jmp
enter
fdivrp
imull
cli
cmp
and
sub
pop
xor
movsb
inc
scas
nop
sub
movzwl
xorb
inc
mov
cmpsl
out
stos
int
jnp
cli
push
add
int3
mov
cmp
and
aam
pop
lock
bound
orl
fidivrl
rolb
orb
jbe
gs
lcall
loope
add
dec
es
xchg
push
add
adc
dec
xchg
inc
fwait
jnp
xorl
mov
insb
test
xchg
add
push
sbb
mov
mov
xor
subb
into
in
xor
add
adc
sbb
roll
loopne
out
sbb
leave
movsl
cmp
sub
fildl
sub
cld
or
aas
stc
gs
push
xor
int
jl
or
inc
pop
test
push
pop
ret
rcll
dec
testl
mov
setae
lahf
jge
std
mov
sub
add
push
les
dec
push
arpl
stos
dec
lahf
insb
adc
xchg
incl
roll
add
test
push
cmc
jl
jne
fst
jnp
and
pop
inc
inc
cmp
ljmp
sti
mov
push
fistpll
xchg
sbb
sub
in
lret
add
movsl
es
rcrl
int
or
add
out
or
test
push
add
pop
cmp
or
fcmovnu
pushf
js
insl
int3
jnp
mov
je
push
in
imul
mov
add
mov
std
add
in
mov
add
sbb
outsb
add
mov
movsb
add
inc
dec
cltd
xchg
test
js
dec
daa
rcl
add
pop
xchg
cmpsl
inc
std
or
add
addr16
loope
cld
arpl
sbb
fs
out
repnz
adc
xchg
cmp
repz
repz
out
add
sub
loopne
stc
mov
add
leave
jecxz
add
mov
add
icebp
mov
cld
loop
shl
test
xchg
lcall
scas
testl
enter
ja
popf
ljmp
mulps
cs
mov
sbb
mov
sbb
clc
fucompp
pop
fsubrp
iret
inc
lahf
add
pop
cmp
mov
push
cmp
dec
out
mov
sub
idiv
lds
mov
mov
jecxz
cmpsb
add
dec
jnp
push
aas
in
je
cltd
addl
add
mov
popa
cld
aam
pop
add
or
jns
and
jae
int3
pushf
movl
ss
adc
or
lea
add
add
adc
dec
push
movsb
aad
pop
pop
mov
xchg
out
jmp
lea
clc
sub
in
dec
xor
mov
push
push
dec
test
dec
popf
in
mov
push
xor
loope
das
jns
mov
push
test
fldcw
jmp
test
arpl
push
cltd
xor
pushf
bsf
sahf
adc
xchg
icebp
xchg
sti
xor
test
mov
jge
fcmovbe
aaa
adc
or
or
adc
push
pop
outsl
roll
or
gs
jecxz
subl
fwait
mov
outsl
outsb
jbe
sub
mov
scas
out
and
mov
pop
ja
outsl
dec
add
test
ror
imul
jne
shll
add
mov
xchg
jge
into
push
sub
stc
sbb
push
aad
mov
lret
adc
jg
gs
cwtl
ret
mov
loope
jl
loopne
sbb
movups
add
repz
outsb
insl
dec
les
clc
xchg
mov
and
in
cwtl
or
xor
sahf
push
mov
cld
or
mov
xor
fneni(8087
add
add
cmp
xchg
pavgw
mov
add
mov
int3
add
test
jno
cmc
jne
or
and
and
inc
mov
das
xchg
arpl
cmpsl
data16
add
push
fdivrs
icebp
or
jl
lret
loope
movl
dec
xchg
add
fcom
sub
aas
int3
rolb
jl
and
emms
rcrl
fstps
mov
popa
add
ret
in
mov
push
add
jb
dec
sarl
and
ret
sbb
lods
cmpsb
xor
pop
test
pandn
or
sub
imul
cmc
adc
add
lock
push
pop
jge
imul
add
ja
sbb
inc
arpl
push
pop
add
sbb
int
xor
dec
xchg
popf
sub
cmpb
push
dec
cmpsl
cmpsb
mov
add
pop
mov
jecxz
push
data16
js
push
mov
cs
adc
rcll
scas
mov
jl
jge
push
filds
stc
cmc
hlt
inc
push
add
je
adc
mov
loopne
adc
pop
sahf
mov
scas
pusha
stos
add
inc
outsl
dec
ror
jg
adc
dec
lahf
imul
add
jecxz
mov
fadds
lcall
add
lret
bound
pusha
mov
stos
push
sub
outsb
in
inc
ss
pop
and
xor
add
mov
les
pop
inc
shr
add
inc
sub
sub
cmpsb
add
sbb
dec
pop
jg
leave
cmp
jecxz
mov
jp
repnz
mov
loop
sti
imul
arpl
dec
dec
call
adc
fnstsw
add
jne
adc
add
nop
jecxz
jmp
movsl
dec
movsb
cmpl
or
xchg
adc
addb
ljmp
hlt
add
dec
repz
xlat
sbb
pop
pop
dec
ffree
testb
or
mov
mov
or
addl
add
in
mov
fisttps
iret
ds
mov
fcompl
lods
sti
lret
in
xor
test
mov
mov
push
cmp
mov
add
jmp
imul
jle
inc
adc
cmpsl
roll
aad
push
aas
enter
sbb
popf
das
out
in
cs
jl
dec
add
dec
add
add
sub
in
add
and
sub
push
pop
adc
push
pop
int
xchg
adc
pop
mov
add
daa
sbb
add
push
cmpsl
roll
mov
aas
xchg
dec
mov
iret
testl
repnz
in
add
shl
shrb
mov
push
stos
sbb
or
cmp
sub
in
add
xchg
adc
lods
test
incb
or
dec
jb
mov
pop
cld
pop
out
push
mov
outsb
jne
xor
jmp
imul
std
gs
adc
mov
out
add
imul
xchg
sbb
jne
mov
cs
sti
push
inc
clc
out
jecxz
loop
mov
dec
dec
lods
loope
push
aam
xchg
mov
test
xlat
mov
mov
jl
ljmp
mov
cmp
xchg
fwait
push
pushf
mov
addb
std
dec
imul
pop
stc
jnp
cli
fucomi
in
jle
mov
ljmp
adc
imul
test
add
mov
outsb
popf
ja
mov
das
ret
push
cld
adc
rorl
pop
jl
pop
xlat
inc
imul
push
int3
jmp
push
das
sbb
pop
into
pop
push
insl
add
jg
pop
add
mov
out
arpl
pop
jnp
pop
adc
sbb
int3
mov
cmpsl
inc
cmp
dec
jmp
outsb
cmp
cmpsb
push
add
mul
or
jp
cmp
mov
ja
sub
push
popf
out
fadds
rcl
pandn
stc
clc
sub
add
loopne
adc
into
jns
cld
repnz
addps
insb
iret
sbb
cmpsb
dec
push
sbb
mov
pop
mov
mov
outsb
ret
ret
into
mov
stos
mov
int
push
pop
outsl
test
addb
in
repz
add
stos
test
movsl
add
or
xchg
shrl
cmp
xchg
addb
sub
adc
cmp
aas
loopne
dec
pop
jae
aaa
mov
das
insl
xchg
hlt
mov
lahf
dec
scas
jae
mov
fwait
test
aam
das
xor
add
fsubrl
sbb
jge
roll
sub
or
push
and
stos
divl
add
mov
cmp
add
out
mov
int
sbb
jnp
clc
cmp
aam
cwtl
jns
loop
icebp
mov
mov
mov
imul
mov
add
je
inc
stos
jmp
push
xor
cld
das
daa
dec
sub
xchg
lahf
mov
je
outsl
jecxz
sub
test
push
ret
or
cmp
cmpsb
mov
shr
add
jne
xor
ljmp
cmp
pop
int
bound
dec
sub
or
adc
and
lret
jp
sahf
push
or
dec
mov
adc
sti
dec
and
add
or
xor
out
std
call
mov
lahf
arpl
cmc
stos
lahf
in
repz
add
clc
fimuls
lea
jnp
xor
or
dec
les
js
popf
push
gs
pop
adc
hlt
popa
rolb
fidivs
daa
mov
sub
repz
or
dec
add
mov
scas
push
jge
popl
jg
mov
and
movsl
lods
mov
sub
jg
fsubrl
test
out
lret
int3
or
in
add
shrl
pop
rcll
imul
test
xchg
jno
mov
xchg
ljmp
mov
fwait
cwtl
mov
testb
mov
jne
or
sbb
cmc
ljmp
jg
popl
fildl
aas
adc
ja
pusha
enter
out
adc
or
mov
xchg
orl
add
cmp
inc
add
aam
fldz
incl
or
push
add
lret
fisubs
push
bound
arpl
mov
adc
nop
imulb
popf
leave
out
pushf
test
in
test
add
pusha
jg
lds
dec
ret
insb
psubq
ljmp
cli
push
lds
jle
mov
sub
inc
icebp
add
es
xchg
add
mov
jbe
out
lods
rclb
cwtl
sbb
outsl
test
popf
pop
xor
lock
lret
push
add
jns
add
shrl
out
or
aad
lods
cmp
add
dec
cmp
cmp
lahf
lds
arpl
xchg
jecxz
jg
mov
add
movb
mov
and
out
fdivs
shl
sarb
adc
rolb
jmp
dec
jl
stos
mov
jne
mov
and
inc
dec
sbb
mov
lds
lret
dec
sub
ret
out
sbb
and
xor
jnp
xor
pushf
aam
loopne
push
fdivp
sub
call
mov
xchg
popf
les
and
stos
dec
add
stos
out
jnp
fwait
js
ljmp
loope
sbb
out
mov
popf
lret
lahf
jno
les
sete
bound
mov
int3
outsb
and
or
out
xchg
mov
add
ret
cmp
mov
mov
jae
incl
mov
add
imul
xchg
addl
out
jmp
push
and
or
mov
cmpsb
push
xchg
mov
or
lret
or
jg
std
out
jno
mov
int3
cmp
mov
jnp
cli
bound
cmpsb
jmp
adcl
add
jo
lods
out
inc
jmp
sbb
test
add
pop
push
mov
rcrb
xchg
jnp
into
pop
in
sbb
bound
inc
lods
xchg
push
add
push
fdivrs
pop
jmp
cmc
mov
add
add
out
dec
adc
mov
mov
sbb
mov
iret
mov
call
mov
pusha
cmp
cmp
xchg
push
in
mov
jl
bound
mov
sub
imul
push
xchg
inc
xchg
ffree
mov
call
bswap
and
xor
pop
decb
lahf
popf
add
add
add
inc
ljmp
xchg
xorb
rorl
repnz
bound
add
xor
mov
add
sub
loope
gs
mov
mov
enter
repz
add
jbe
lds
imulb
call
inc
push
sbb
test
gs
sub
mov
loop
out
lock
scas
mov
lods
cmpsl
ret
daa
jmp
call
mov
insl
mov
cmp
sub
sub
hlt
mov
push
cmp
fsts
or
out
sbb
add
adc
lea
push
sub
and
add
das
rcrb
jb
out
sbbl
pop
push
fisttpll
in
leave
sbb
jns
cmp
imul
dec
jne
lret
dec
call
ja
lds
es
add
pushf
jno
aad
jmp
sub
lcall
imul
ljmp
ss
jae
cmpsb
sbb
inc
imul
sub
mov
insl
ja
and
lgs
loope
decl
push
add
stos
mov
cmp
stc
inc
cmpsb
add
jb
sbbb
xor
push
cwtl
into
adc
add
cmc
inc
sbb
dec
std
cmpsl
out
testl
fwait
mov
mov
shrb
mov
stc
cmp
push
cmp
inc
movsb
push
add
cli
fldenv
fidivrs
outsb
sub
pusha
push
pop
mov
xor
push
or
add
pop
xchg
mov
insl
std
lcall
sub
jnp
xor
sbb
rcrl
rorl
movsb
jne
add
daa
sbb
sub
fs
in
aad
sbb
inc
mov
jp
aas
cltd
outsl
lds
in
inc
mov
fildll
push
jl
jo
add
or
ss
dec
xor
sub
mov
in
out
mov
dec
xchg
std
js
mov
out
jns
push
jp
pop
inc
cli
scas
movsl
aam
cmp
clc
jne
push
xchg
cwtl
popf
mov
fsubs
dec
push
pop
arpl
pop
mov
scas
fidivrl
repnz
push
insl
icebp
push
inc
jnp
jmp
xchg
stc
das
stos
dec
out
fs
mov
pop
test
mov
xor
ja
add
adc
icebp
xchg
dec
adc
int3
rol
dec
out
ror
es
inc
lea
push
jge
jb
into
xchg
js
mov
sar
fmuls
add
sarb
ret
or
inc
aad
mov
mov
cli
cmp
pop
lea
cmpsb
sbb
mov
clc
dec
das
add
js
or
xchg
cltd
sbb
mov
jle
mov
rcrb
in
sahf
mov
xchg
jp
sbb
lcall
add
call
jp
push
jmp
aad
mov
fwait
stos
pop
push
fisttpll
push
sub
loopne
bound
cmc
movsb
into
and
inc
and
int3
mov
stc
aam
std
mov
fucomp
sbb
mov
je
outsb
ret
data16
test
xor
dec
and
sub
mov
inc
mov
and
pop
pop
add
jo
es
push
xchg
sbb
imulb
push
insl
inc
mov
jmp
dec
imul
jno
out
push
test
hlt
mov
xchg
fiadds
pop
in
mov
mov
add
clc
adc
test
add
jle
lock
loope
scas
add
cmp
push
not
pusha
jnp
jbe
mov
adc
add
aas
mov
jge
add
out
xchg
push
addr16
jae
add
inc
nop
xlat
add
push
ljmp
out
mov
clc
mov
and
scas
orb
jmp
adc
pop
test
rcrb
data16
cmpl
scas
push
xor
pop
push
sbb
popl
imul
hlt
mov
xchg
add
mov
pop
shll
std
bound
dec
test
mov
dec
add
fucom
dec
sahf
sti
add
jge
cmp
retw
xchg
add
paddusb
pushf
adc
or
out
outsb
mov
add
popf
gs
and
aad
add
sbb
fbld
dec
mov
jb
xor
push
xor
inc
ficompl
rorl
mov
mov
sbb
and
sub
in
test
out
stc
add
arpl
in
xchg
mov
cwtl
push
sti
or
jno
xor
and
test
lcall
aas
pop
scas
pushf
xor
pop
add
dec
jecxz
dec
addr16
fimuls
scas
mov
or
or
cld
push
lods
scas
into
jmp
fldt
add
push
mov
ss
lcall
aad
and
imull
out
out
add
popa
sbb
test
imul
or
addl
arpl
inc
test
and
psraw
out
loope
cmpl
test
xor
xor
popw
sbb
xor
ds
push
adc
and
movb
repnz
pop
xchg
dec
std
fwait
sbb
mov
call
add
int
mov
sub
sub
mov
les
mov
cltd
movsl
mov
add
aad
incb
lahf
into
repz
fyl2xp1
pop
dec
mov
nop
xchg
lea
ljmp
shlb
rcr
popa
inc
std
shlb
or
mov
jecxz,pt
fldt
inc
enter
lret
pop
lds
test
dec
mov
or
hlt
mov
subl
cmp
fcmove
mov
push
dec
jo
adc
add
mov
sahf
and
mov
jge
rcl
out
or
push
mov
inc
icebp
push
out
movsb
push
les
push
sub
fs
ror
xor
clc
lahf
jnp
dec
ss
mov
out
test
into
jecxz
or
pop
test
inc
stos
jmp
test
mov
push
inc
add
test
cwtl
sub
jmp
aam
add
out
int
mov
std
or
dec
sbb
adc
jg
pop
pop
mov
outsl
repnz
movl
xchg
sarb
sbb
iret
inc
int
gs
loope
adc
inc
imul
jb
ds
js
mov
ljmp
dec
mov
jno
in
sub
cwtl
add
ror
push
mov
jmp
xchg
and
push
dec
sbb
add
fwait
mov
lods
mov
mov
cmp
test
xchg
sub
gs
mov
add
lret
hlt
adc
sbb
jae
enter
jmp
xlat
push
stc
lcall
cmc
leave
jmp
sub
cltd
push
mov
int3
test
mov
push
xor
adc
xchg
cmc
mov
jns
je
fmuls
dec
scas
xchg
push
loopne
lock
test
pop
aas
add
idivb
add
sub
mov
add
pop
sbb
inc
fs
mov
lahf
cmpb
cmpsl
xor
mov
loop
sbb
jb
les
dec
inc
in
dec
cs
xchg
imul
xchg
mov
push
mov
inc
mov
sti
fsubrp
addb
xchg
xchg
mov
arpl
xor
mov
inc
out
push
ja
dec
test
mov
mov
test
dec
aaa
jge
shrb
inc
adc
loope
push
out
adc
xlat
stos
adc
out
xchg
push
adc
mov
loopne
sbb
sub
call
test
lds
cli
not
bound
add
mov
add
xor
es
test
inc
dec
dec
ficomps
cld
scas
dec
jmp
xor
and
jnp
js
mov
add
sbb
lret
add
pop
repz
lahf
dec
add
mov
fs
pop
sahf
lods
add
sub
mov
jnp
testb
cmc
add
mov
sub
add
lcall
or
pop
lahf
add
sub
js
dec
xor
inc
dec
xorb
mov
sti
jmp
mov
ret
xchg
push
movsb
pop
push
sbb
call
xor
loop
fwait
popf
aaa
xchg
mov
jns
sub
inc
adc
pop
or
add
cld
adc
sbb
imul
fisttps
sbb
push
mov
inc
mov
adc
mov
pop
clc
or
call
repz
pop
out
add
popf
aad
je
cmpsb
pushf
push
xchg
mov
mov
fsubs
jecxz
xchg
xor
sbb
mov
fs
cmp
jne
lea
dec
cli
or
add
lcall
ret
cvttps2pi
add
pop
aad
add
sete
aaa
push
sbb
lods
add
add
nop
lds
mov
mov
outsl
xchg
mov
shlb
add
in
mov
and
push
arpl
frstor
fldl2e
aam
sub
rcll
mov
lock
cli
jnp
fs
push
arpl
cwtl
pop
int
testb
dec
inc
jl
jbe
nop
or
xor
ret
mov
fdivl
fwait
ljmp
sti
insb
pop
push
test
xchg
xor
or
iret
loope
jns
daa
sbb
mov
outsl
add
lea
jg
pop
cmpsb
sbb
repnz
add
std
sbb
scas
push
repz
sbb
and
mov
pop
cltd
icebp
pextrw
mov
mov
sub
stc
outsb
sub
mov
sbb
sub
out
push
mov
jbe
add
sub
mov
movsb
cwtl
mov
jg
inc
cmp
mov
aaa
movl
imul
out
and
cli
push
mov
jo
jg
cmp
mov
xchg
add
push
add
dec
mov
or
cli
add
iret
push
add
pop
sbb
rcrl
mov
mov
add
cld
cli
pusha
pop
pop
mov
cmp
push
pop
cmp
xchg
in
pop
push
lds
addl
add
enter
imul
jmp
jne
das
mov
jno
mov
int3
cmpsl
clc
pop
xor
adc
dec
sub
scas
pusha
add
nop
jnp
xor
add
in
cli
movsl
push
lods
clc
dec
push
push
mov
mov
push
repnz
and
cmp
shr
fwait
push
int
jbe
adc
and
std
add
dec
xchg
add
cmp
inc
into
repnz
sarb
cmp
jl
movsl
dec
or
mov
add
dec
add
repnz
mov
pop
fwait
int
mov
mov
mov
xchg
cmp
lds
addr16
notl
add
xchg
mov
addb
adc
xchg
outsl
aas
xor
adc
adc
xlat
mov
fstpt
add
loope
les
push
fisubrl
ja
outsb
in
add
mov
sub
lea
popf
test
push
add
je
cmp
jno
xor
in
fwait
lcall
push
add
pop
mov
xor
jl
ss
cmp
mov
dec
in
push
fisttps
in
popf
adc
xchg
cmp
add
clc
cmc
mov
mov
adc
ret
inc
xor
sbb
les
movl
sbb
roll
outsb
sbb
scas
sbb
jae
dec
or
ljmp
mov
sub
adc
psllw
test
adc
push
cwtl
add
arpl
lock
fwait
cmp
cltd
jnp
cmp
clc
aaa
cmc
dec
adc
fidivrl
leave
mov
dec
adc
sahf
es
enter
xchg
adc
add
fs
jle
in
in
orl
fistps
imul
add
sbb
add
test
mov
jmp
adc
addb
loop
add
inc
lea
add
jo
push
add
ror
add
pusha
dec
jns
out
inc
dec
adc
hlt
movsl
jbe
adc
xchg
lcall
cld
insl
loope
sub
cmove
shrl
dec
roll
pop
add
mov
lods
dec
scas
ret
adc
loope
push
push
test
add
xor
fdivl
dec
cmpsb
xor
or
cmp
fwait
int3
or
std
das
mov
jno
movsb
cmp
pop
sub
shll
sbb
jg
add
pop
sub
mov
mov
nop
fwait
addb
push
aas
mov
jns
outsl
loopne
adc
push
push
mov
adc
dec
lods
cmc
or
mov
adc
inc
or
adc
mov
xor
and
aam
xchg
or
dec
idiv
pop
sbb
aas
jge
insl
push
pop
cmc
push
repnz
fcomps
je
fstl
lahf
mov
and
int
mov
pop
pavgw
aas
add
ja
popa
cmp
add
jbe
addr16
lods
data16
insl
lea
mov
adcb
ret
daa
repz
or
add
jns
lock
cltd
xor
in
rorb
mov
push
add
js
in
add
cld
xchg
sub
rorl
pop
ja
fdivp
jne
push
push
and
mov
and
pop
mov
add
fsubl
jle
stos
add
gs
jo
aad
lret
sbb
jmp
jnp
in
loope
dec
movl
cmp
adc
jecxz
addr16
jns
push
cltd
xchg
or
jl
push
hlt
sbb
inc
adcl
popa
es
add
lock
hlt
mov
stc
add
js
scas
fsts
addr16
mov
jle
cmp
mov
sahf
lds
pushf
cmp
mov
pop
data16
mov
rcrb
jbe
std
xor
out
in
and
enter
adc
lahf
call
jnp
dec
mov
jbe
mov
les
rorl
test
pop
and
aas
mov
pusha
nop
push
add
pop
sub
flds
add
cli
enter
jnp
hlt
jmp
arpl
add
lret
add
jl
mov
sahf
xchg
add
daa
insb
mov
pop
incl
ret
call
into
jns
pushf
shlb
add
xchg
mov
xor
jecxz
sbb
push
inc
mov
push
xor
push
mov
bound
sbb
testl
shll
or
add
leave
mov
or
sbb
out
mov
sbb
fwait
mov
movsb
adc
xorb
popa
stc
pop
xor
xchg
rcl
data16
cltd
in
dec
jg
dec
jnp
shlb
inc
pop
cmp
ret
add
and
mov
pushf
jno
sub
test
movsl
jecxz
add
xchg
bound
ret
ret
xor
xchg
add
xor
add
cmpsb
adc
loop
mov
movl
mov
jae
adc
inc
test
in
inc
cmp
maxps
push
add
out
movsb
add
std
sub
hlt
mov
mov
ss
fistpll
cmp
xor
loop
mov
push
icebp
sub
lock
inc
xchg
out
flds
aam
mov
imul
pop
daa
pop
jae
rol
mov
call
fcomp
roll
lods
mov
add
leave
sti
add
into
mov
cltd
jae
mov
dec
add
mov
inc
sti
lea
insl
and
nop
push
mov
add
or
pop
jl
inc
adc
ljmp
mov
nop
push
aaa
ret
lahf
fwait
add
lahf
sub
pop
js
shll
out
addb
popa
and
fldenv
inc
outsb
mov
push
jmp
add
icebp
add
jle
xchg
lock
add
outsl
jne
outsb
arpl
mov
movsb
mov
mov
aaa
push
dec
mov
mov
mov
mov
aaa
push
movq
sbb
dec
es
movsl
add
adc
sub
add
out
out
jnp
fs
pop
add
out
gs
in
aad
mov
or
cli
sbb
int
sti
add
lds
mov
jns
loop
cmc
xchg
add
fmuls
sub
mov
cld
push
lcall
dec
fyl2x
jmp
dec
inc
inc
pushl
add
add
cmp
je
movsb
push
rolb
mov
xlat
mov
test
inc
add
push
jno
and
bts
leave
push
add
bound
call
cmpsb
rolb
jl
mov
push
add
lcall
shr
ja
mov
out
stos
cmp
dec
mov
add
test
bound
pop
into
addr16
or
push
dec
add
in
ja
ds
xchg
bound
into
adc
arpl
jbe
bswap
pop
out
mov
push
bound
lods
outsb
and
and
gs
adc
cltd
or
in
add
out
jg
punpckhdq
sbb
popf
int
add
pop
es
cmp
sub
mov
js
out
sti
filds
add
and
inc
dec
ljmp
dec
shll
add
loope
pop
mov
lods
shlb
test
add
cmp
push
add
imul
sbb
jno
mov
data16
xchg
xor
push
xor
das
insl
push
dec
push
sbb
lea
inc
call
in
shl
fildl
xchg
inc
popa
pushf
les
adc
out
lods
dec
scas
das
imul
add
mov
mov
test
cmpsb
pop
xchg
push
cmp
mov
add
movsl
ja
cmpsb
sub
cwtl
rcrl
repz
in
lcall
scas
add
nop
jno
add
jnp
es
out
add
jmp
pop
jge
xadd
add
mov
inc
push
sub
sbb
add
loopne
pop
into
or
out
bsr
aaa
dec
jg
dec
decl
test
add
mov
enter
dec
mov
cmpsl
cmp
fisttpll
mov
adc
push
dec
lcall
jnp
inc
test
inc
loop
push
movsl
fxch
jecxz
std
mov
sub
decl
fbstp
sti
add
mov
add
mov
out
add
xchg
rep
lret
into
loop
and
add
outsl
adc
rcll
shrl
sub
cltd
imul
cmp
add
ret
jmp
push
sti
sbb
aad
lret
aam
in
out
adc
in
lds
jo,pn
pop
pop
jne
mov
adc
add
push
dec
mov
movsb
movl
adc
mov
shll
add
aam
cli
test
ficomps
cmp
or
gs
cmp
jmp
xor
and
ret
mov
xchg
mov
lret
dec
jmp
out
fidivrl
cmp
lahf
push
ss
add
fistps
and
mov
repnz
stc
inc
jae
movl
add
sbb
pushf
push
dec
mov
gs
add
out
scas
lahf
mov
testb
pop
push
xor
inc
cld
incl
jns
inc
xchg
xchg
jge
push
add
pop
mov
lea
loop
inc
xchg
fwait
mov
call
mov
mov
bound
das
out
and
xchg
xchg
lea
cmc
add
lds
ljmp
jno
or
hlt
sub
inc
adc
mov
push
ret
jnp
lret
mov
in
data16
add
sahf
lods
adc
pushf
add
cmp
jo
pop
lea
outsb
xchg
gs
adc
jl
jns
dec
pop
mov
jmp
xorl
arpl
scas
pop
mov
jmp
roll
mov
adc
jl
repz
arpl
and
pop
mulb
inc
adc
scas
xchg
add
ret
aas
cmp
popf
outsb
and
sarl
and
lock
push
scas
sub
add
cmpb
out
ret
sti
lock
loope
inc
pop
and
dec
mov
jp
fnstsw
in
push
add
pop
ret
data16
stc
movsb
push
shr
inc
xchg
add
mov
xor
adc
cli
and
add
push
xor
iret
insl
cmp
pop
je
pop
push
mov
cvttps2pi
adc
loope
sar
pop
dec
push
sahf
sub
jecxz
aam
stc
xor
push
insb
out
in
push
jmp
outsl
jl
add
lock
push
xor
aaa
das
mov
add
mov
add
xchg
pop
cltd
dec
mov
or
mov
dec
mov
add
jge
sahf
loope
frstor
add
sub
sub
jns
in
jmp
push
add
out
mov
scas
jmp
add
in
sub
daa
mov
pop
pxor
int3
add
push
sub
ret
add
aam
daa
pusha
cli
fwait
inc
jmp
or
hlt
or
mov
or
loope
add
xchg
insl
insb
or
hlt
xchg
pushf
or
ret
scas
aas
push
popa
cmpb
jl
nop
cld
iret
pushf
xor
and
mov
fnstcw
lret
dec
ds
shl
dec
mov
jg
decl
and
adc
xchg
pop
fldl
add
sti
iret
jle
lds
jmp
popa
sbb
xchg
add
rorb
cld
push
push
mov
xlat
cmp
jns
sbb
adc
pop
int
jecxz
daa
xlat
out
adc
fcom
dec
mulps
cmp
insl
mov
xchg
add
cs
inc
adc
cltd
pop
imul
pusha
jmp
and
iret
mov
mov
push
push
ljmp
pop
inc
inc
xchg
aam
cld
inc
add
loopne
dec
lods
mov
sub
push
and
push
add
clc
jl
cmpsl
xchg
pushf
fcoms
jns
jle
push
xchg
cmp
les
xlat
jno
cli
dec
jns
inc
fisttps
lret
xor
pop
and
cmc
pop
stos
fildll
pop
loope
lock
in
out
push
movsb
in
ret
xor
inc
leave
ss
sti
add
jp
dec
xchg
lods
mov
push
icebp
add
outsb
in
cwtl
inc
mov
mov
in
add
or
shll
add
jg
sbb
inc
das
ljmp
xor
mov
sbb
test
fldenv
mov
cmp
add
push
jl
mov
xor
sub
push
pop
push
pop
or
and
xchg
fwait
cmc
push
cmpsb
jnp
add
out
dec
add
divb
es
pop
sub
ret
mov
dec
add
out
mov
xchg
rclb
xlat
or
push
sahf
push
cmpsb
add
pusha
lret
insl
sbb
mov
fsub
dec
leave
aad
push
jnp
daa
sub
cmp
add
inc
xor
and
fmulp
fs
roll
mov
leave
or
mov
add
scas
sub
inc
cs
adc
lea
mov
pop
and
add
bnd
popf
pop
pop
fucomp
add
stos
scas
mov
lock
adc
insl
mov
pop
mov
and
push
push
mov
lods
cmp
sbb
mov
iret
je
arpl
push
pop
sbb
nop
mov
and
or
add
cwtl
push
and
fldt
mov
add
jmp
and
cmp
out
pop
stos
ja
loopne
jne
jo
or
aad
inc
push
repz
adc
incb
or
adc
add
mov
mov
pop
nop
lods
pop
adc
cmp
xchg
mov
sbb
fimuls
xchg
fwait
mov
icebp
mov
sub
push
jae
jb
ljmp
pushf
pop
dec
out
jnp
sub
xchg
inc
dec
add
push
xlat
js
lods
clc
dec
flds
cltd
mov
inc
inc
movsb
fs
shl
mov
dec
in
int3
push
mov
pop
mov
repnz
popf
push
fidivrl
out
add
mov
sub
fsub
fisttpl
cmp
fidivrl
mov
xor
test
inc
adc
sub
xor
out
jle
cmp
lea
pop
xor
pusha
int3
jbe
scas
sahf
mov
out
popf
xchg
cmpsb
jb
mov
cmpsl
xor
call
or
das
into
imull
xchg
int3
sbb
ss
sub
gs
add
call
adc
outsb
aas
ljmp
pop
push
adc
jp
sti
adc
cmp
mov
sub
popa
mov
ja
adc
pop
push
aas
mov
add
ss
add
add
insb
push
or
push
mov
add
fcompl
add
mov
xorb
inc
lahf
add
jae
sbb
sub
jo
clc
fsubs
jge
inc
shufps
pop
pushf
ss
test
lds
mov
pop
imul
insl
xor
bound
les
or
stc
xor
jno
and
sti
hlt
outsb
out
mov
subl
loopne
lea
mov
scas
sarb
mov
cmp
inc
push
cwtl
int3
mov
dec
xchg
jns
adcb
inc
inc
xchg
inc
sub
rolb
dec
movb
inc
pop
sub
lods
in
mov
push
add
jnp
mov
mov
cmpsl
xchg
push
sahf
push
cmc
jne
cmpb
sub
loop
add
sbb
fwait
int
cmp
mov
add
lods
sahf
inc
jg
cwtl
push
add
ds
mov
fdivr
decl
cmp
push
test
enter
int
sub
or
mov
jbe
push
mov
mov
out
push
adc
pop
cli
sub
std
dec
ds
repnz
push
add
sub
add
or
out
dec
lock
add
sub
lods
out
nop
pop
sbb
aam
mov
out
sti
inc
add
lds
inc
and
mov
sbb
shr
aaa
push
adc
adc
call
mov
jg
cmc
pop
imul
adc
shr
lahf
mov
add
pop
arpl
and
mov
loop
data16
lahf
fs
mov
loop
jg
addl
sub
into
push
mov
adc
lret
add
not
jne
les
inc
daa
in
lds
pcmpgtw
inc
sub
loop
mov
sbb
bound
and
add
out
mov
adc
jno
jne
sarl
fcoml
and
add
outsb
mov
add
stc
add
or
xchg
aas
push
inc
filds
gs
pop
mov
movsl
sub
xor
mov
pop
cli
aas
js
cmp
sub
sub
ss
xchg
cmp
mov
jae
jp
xchg
dec
out
push
je
movsb
mov
outsb
xchg
mov
pop
outsl
sti
movaps
add
mov
push
sbb
movsl
dec
cld
std
faddl
mov
push
iret
aam
and
sub
add
shll
mov
lea
insb
fwait
cs
cltd
sub
loopne
je
mov
lods
jbe
add
movsb
mov
and
out
cwtl
inc
shrl
inc
movzwl
pop
sub
pop
hlt
int
arpl
stos
andb
repnz
or
stc
aaa
stos
in
push
pop
jg
test
sbb
rolb
inc
adc
stos
add
loope
xchg
dec
xchg
sti
les
push
movsl
cli
pop
jg
lock
or
inc
into
add
and
daa
adc
push
mov
orl
add
sbb
rcrb
mov
push
inc
or
mov
scas
rcll
add
push
jl
mov
adc
cmpsb
mov
ja
addr16
test
ret
mov
sti
xor
xchg
hlt
ljmp
fists
ss
out
out
sbb
dec
lds
jne
xor
mov
testl
les
pop
pop
arpl
mov
lea
or
stc
inc
mov
add
and
cmpsb
testb
add
adc
test
xchg
dec
out
push
test
add
ret
repnz
cli
add
testb
pusha
sbb
sbb
dec
ja
test
faddl
enter
push
push
mov
imul
sbb
fwait
movl
push
jnp
add
jmp
push
aaa
mov
mov
and
mov
jns
lock
sahf
add
add
add
rolb
ljmp
out
mov
aad
mov
je
add
lcall
xlat
data16
sbb
sub
mov
add
adc
test
sub
pop
add
decl
scas
test
jg
sbb
jl
stc
dec
int
inc
jnp
add
pop
fs
cmpsb
cmc
pop
sub
mov
loop
fildll
adc
pop
dec
das
or
inc
es
or
stos
xchg
mov
pop
lret
push
pop
fisttpl
add
jmp
dec
push
lret
mov
loop
addl
mov
aas
pop
test
mov
sub
dec
pop
mov
and
fcoml
push
lods
pop
adc
mov
add
lea
das
je
out
add
jo
xchg
xor
pop
sbb
stos
mov
outsb
and
jge
xchg
mov
repnz
inc
dec
xor
mov
and
ret
sbb
add
arpl
xchg
imul
add
les
inc
pop
int3
sub
dec
mov
and
movb
ss
lret
jmp
mulb
in
or
loopne
add
adc
or
mov
mov
ljmp
jo
push
dec
pop
add
icebp
xchg
addl
test
add
movl
and
or
sub
in
cld
int3
or
lret
or
div
lea
xor
adc
fcomps
and
push
mov
jl
stos
adc
inc
subb
sbb
lea
add
or
jmp
je
addb
aam
push
mov
cmp
add
or
daa
test
movsb
xchg
add
jns
push
addb
add
inc
mov
xchg
mov
test
stos
add
loop
sti
bnd
push
jns
jg
cmpb
sbb
inc
xor
add
loop
sub
adc
add
xchg
cmpsl
add
and
testl
lahf
jo
call
mov
sub
fwait
push
add
test
add
jae
pop
inc
pop
jnp
mov
movsb
call
sbb
stos
jne
mov
iret
in
push
loope
mov
push
shl
stc
sub
and
add
lret
shll
add
sub
sahf
sub
and
into
push
add
mov
mov
push
xchg
add
lds
jg
out
mov
push
lock
xchg
and
hlt
cmp
adcb
fucom
adc
mov
pop
jge
add
or
sti
mov
out
cltd
fimull
add
mov
or
out
fs
popf
ret
add
cmp
loop
js
test
lods
shll
cld
gs
mov
es
out
sbb
in
jg
cli
add
sbb
pop
out
xor
subl
lock
fidivs
add
or
mov
adc
add
push
fs
sahf
cltd
xchg
add
imul
sub
leave
cli
mov
dec
mov
mov
cmp
test
stos
out
add
xor
jp
mov
adc
and
ss
call
fsubl
add
adc
mov
stos
inc
add
test
dec
addr16
add
cltd
ljmp
in
mov
subl
dec
adc
fbld
pop
jl
jp
push
push
push
xchg
add
ss
sbb
popf
jae
repnz
ljmp
insb
rol
jbe
scas
icebp
cltd
pop
add
dec
jge
xchg
add
pusha
ds
cmp
mov
push
cli
sub
lret
ljmp
add
xchg
ss
add
insl
mov
sub
insb
mov
and
cmp
inc
xor
xor
ljmp
or
scas
jg
hlt
add
mov
inc
test
push
pop
add
in
rcl
movsl
mov
sbb
pusha
xor
add
dec
stc
bound
cwtl
in
jg
push
jnp
out
add
mov
out
movsl
sbb
add
orl
add
or
adc
popa
add
cld
xor
or
inc
inc
out
pop
push
mov
add
dec
mov
addb
or
aas
xor
roll
addr16
sti
cmp
div
push
cli
flds
mov
sarl
pushf
or
dec
add
push
in
add
xor
cmpsb
add
lahf
lods
xlat
jecxz
jb
or
mov
xor
inc
ljmp
in
adc
sub
xchg
data16
push
into
lds
pop
jo
sbb
add
pop
mov
stc
pop
out
test
sarb
jns
lahf
std
inc
fmuls
push
mov
add
jo
push
jns
push
add
push
pop
sbb
movsb
dec
nop
xlat
sbb
and
outsb
ss
push
fcmovbe
arpl
fsub
std
or
clc
push
sub
mov
je
aam
push
mov
add
pop
xchg
ljmp
mov
jne
lea
sub
repnz
mov
mov
fldcw
data16
or
add
lea
pop
inc
jne
sbbl
lods
sbb
pop
in
lds
add
mov
mov
mov
push
xor
testl
push
test
sbb
leave
inc
pop
stc
mov
fcomp
or
fwait
push
cmp
in
inc
pop
rcrb
mov
inc
stos
ja
rorb
xor
or
outsb
push
add
cld
xchg
sub
bound
mov
addb
mov
popf
jl
mov
and
push
push
jns
xor
inc
pop
adc
cmpsb
fadds
insl
jecxz
xor
mov
add
add
out
jae
mov
push
pusha
pop
pop
and
loope
push
fcoml
jne
and
push
xchg
sbb
sbb
add
addl
outsl
mov
jnp
sbbb
shl
test
mov
cmp
cmp
or
mov
fldenv
add
add
xor
mov
icebp
cmp
add
test
xchg
repnz
addl
aam
add
mov
clc
add
rolb
imul
mov
inc
mov
loop
sbb
jns
dec
outsl
scas
push
mov
fwait
inc
popa
pop
push
jbe
and
rcll
add
mov
testb
lahf
add
hlt
test
add
enter
jae
add
sbb
jmp
mov
lods
sti
jbe
or
push
and
or
add
mov
rorb
cmp
fmull
mov
aad
sbb
add
jmp
mov
movsl
fiaddl
cmc
jnp
mov
ret
add
mov
xchg
out
mov
adc
jmp
push
mov
lret
add
sbb
rcrl
ret
xchg
push
add
sbb
pop
push
lahf
mov
mov
push
fs
les
jns
and
dec
and
lret
fdivl
push
cltd
les
jae
rorb
sub
push
adc
pushf
insl
push
ss
je
add
or
pop
and
sti
leave
add
mov
sub
lcall
test
adc
mov
fwait
pop
subb
je
add
sbb
adc
insl
xchg
ud2
lret
pop
cmpsl
adc
and
into
daa
jle
inc
push
add
ret
add
in
in
rcl
iret
loop
mov
cmp
fistps
sahf
dec
dec
clc
xchg
add
pop
sbb
sub
pop
and
iret
xchg
jne
mov
ltr
xorb
repz
in
lret
leave
ljmp
xor
stos
add
xchg
pop
xorb
inc
xlat
and
test
push
push
aaa
clc
sub
or
cwtl
mov
loope
in
int
pop
jne
pop
fistpll
push
xchg
std
mov
das
stc
movsl
addb
idivb
jno
jae
sbb
sarb
sbbb
mov
add
rcrl
out
fsubs
stc
or
pop
push
ljmp
sub
add
sub
or
test
and
cmc
jg
cmpsl
lds
push
push
out
xchg
js
push
add
add
popf
lods
pop
sub
add
jecxz
jg
aas
add
xchg
add
jmp
pushf
add
in
mov
mov
add
mov
adc
push
into
mov
dec
repnz
dec
mov
mov
cli
fucom
mov
adc
bound
push
xchg
jg
xlat
and
cmp
add
mov
jb
test
je
cmp
or
in
cmp
lock
lea
out
pop
push
js
test
push
arpl
jge
xchg
adc
test
cmp
mov
shll
test
adc
shrb
or
jmp
mov
dec
or
into
outsl
cmp
mov
aam
sub
push
adc
stc
sbb
xor
pop
cmpsl
lea
xchg
insl
mov
imul
icebp
mov
add
pop
dec
popa
add
dec
sub
scas
mov
int
icebp
enter
adc
xchg
repnz
roll
adc
mov
sbb
or
and
call
dec
dec
xchg
cld
or
sub
mov
mov
mov
sbb
jle
push
xchg
push
outsl
sbb
sub
add
add
ljmp
out
jno
add
dec
dec
mov
imul
fidivrl
cmp
sbb
cmpsb
outsb
mov
mov
int
dec
jae
jo
sahf
mov
lods
add
xchg
jb
sub
lret
jnp
cmpsl
mov
lods
fimuls
ss
add
lea
das
dec
bound
imull
out
sbb
push
pop
cmpsl
out
mov
dec
xchg
sbb
mov
enter
inc
inc
cmp
mov
xor
lods
xchg
xor
imul
jmp
mov
popf
add
sahf
aad
test
xlat
sbb
pop
pop
inc
fimuls
cltd
add
shll
cwtl
mov
or
jae
lret
jb
bound
imul
ja
cmp
inc
lds
mov
mov
jl
lods
aam
pop
jb
pop
lods
mov
sbb
test
xchg
add
loope,pt
dec
xchg
pop
decl
mov
cmp
mov
add
cwtl
movsb
jno
add
cmp
add
jnp
out
cli
dec
add
mov
adc
rorl
add
aam
mov
sub
in
out
mov
mov
or
xlat
icebp
add
test
add
imul
leave
add
push
or
add
loope
std
stos
mov
sti
iret
push
add
outsl
loopne
sarl
dec
sbb
mov
lea
xchg
and
jle
test
xlat
pop
mov
es
aad
adc
cs
mov
cmp
rcrb
subb
xor
scas
xchg
mov
add
and
inc
mov
sbbl
js
push
add
inc
ss
mov
out
cltd
and
push
and
in
push
inc
fcomps
adc
add
push
fisttps
xlat
sbbb
dec
xchg
cmpsl
cmp
ljmp
ret
xchg
out
les
in
inc
or
or
lods
and
outsl
pop
add
lds
add
rorl
mov
bswap
pop
shll
sub
push
push
sub
sub
sti
test
inc
aam
and
mov
ficoml
data16
cli
insl
js
add
add
or
mov
mov
inc
into
pop
and
cmp
decb
aam
int
in
lods
inc
push
mov
xchg
out
sbb
fimuls
inc
fdivrs
xor
iret
cmp
aam
or
loop
pop
add
aaa
fsubl
add
dec
adc
into
push
add
pop
pop
dec
xchg
mov
jae
push
pop
sahf
mov
xorb
call
cmp
in
xchg
pop
add
ret
addl
aam
push
insl
mov
rolb
call
mov
add
cmc
je
xlat
dec
cmp
jle
jmp
test
add
jl
loop
add
lret
sub
sbb
sahf
mov
cltd
pop
jnp
sbb
cmpsl
hlt
in
add
icebp
and
imul
sub
lds
mov
xlat
xchg
sub
jecxz
test
xlat
outsb
mov
pop
int
out
jns
add
push
aas
sti
sbb
push
mov
rolb
mov
in
push
xchg
roll
mov
scas
iret
mov
mov
push
and
xor
cli
xchg
jg
bnd
add
mov
add
and
dec
sahf
dec
and
mov
push
add
loop
jl
sub
scas
mov
adc
jl
inc
movsl
xchg
adc
push
or
jle
fisttps
shll
add
lds
xor
shlb
xlat
sub
lock
daa
jbe
push
mov
mov
push
popa
sub
ror
dec
jno
add
sub
scas
sti
lea
iret
push
mov
js
mov
call
mov
jge
je
mov
test
sbb
sbb
pop
je
mov
inc
add
jl
add
inc
test
adc
jae
mov
iret
pop
fmull
and
xchg
add
repnz
xor
jnp
scas
imul
pusha
and
fwait
rolb
sti
cmp
repnz
fbld
inc
xor
jecxz
outsl
inc
xor
addl
scas
ds
or
push
ss
add
mov
add
call
sub
das
ficomps
add
loopne
xor
into
or
dec
test
outsl
pop
ret
aas
movb
fdivp
jmp
lds
sub
jnp
push
cwtl
fcomps
inc
lahf
mov
cltd
sub
int
jmp
sbb
mov
test
mov
loop
sarb
insl
mov
add
xchg
loope
xchg
scas
iret
or
xchg
fs
and
add
out
add
xor
adcl
popa
or
pop
jecxz
dec
dec
faddl
add
dec
popa
sub
mov
push
pushf
icebp
push
insb
decl
rorl
pop
stc
dec
fwait
test
xor
imul
pop
shl
mov
js
push
adc
xor
xor
lahf
cli
pusha
add
daa
das
bound
sub
pop
lds
std
pop
fisubs
aaa
xchg
insl
out
cmp
push
add
in
add
sub
mov
or
cltd
or
outsb
dec
pop
cmpb
cld
sbb
lret
fsubs
mov
out
std
jle
add
pop
mov
rcrb
sbb
aad
add
and
out
shlb
add
sahf
dec
pushf
sarl
fld
jl
stos
into
pop
xlat
mov
cmp
pop
push
movsb
cld
xor
and
inc
pusha
ret
jmp
repz
cltd
mov
adc
or
leave
mov
js
adc
rcrl
ljmp
pop
dec
and
fadds
dec
dec
add
cmp
inc
ds
sbb
push
add
mov
xchg
pop
iret
cli
add
inc
push
sbb
outsl
sbb
std
or
push
jo
pop
lds
invd
cwtl
sbb
pusha
add
dec
popa
cmp
add
push
inc
stc
movsb
dec
ret
jne
add
call
rolb
mov
pop
push
xchg
scas
imul
movsb
sub
mov
sti
jne
sub
in
test
and
push
and
add
repnz
and
jbe
jne
sarb
sub
push
mov
mov
pop
enter
pop
mov
repnz
sbbb
push
dec
xchg
sarl
push
dec
leave
out
xlat
fstpt
lds
repnz
push
add
mov
addps
push
mov
xchg
mov
or
jmp
push
cmc
into
mov
add
sub
and
bound
inc
jns
cmpb
jmp
xor
adc
add
mov
mov
aad
pop
cmp
sbb
mov
aaa
dec
xor
xchg
pushf
incl
mov
add
inc
xchg
push
js
lea
cmp
add
push
je
mov
sti
sub
mov
jnp
mov
arpl
dec
adc
rolb
xor
and
ds
sbb
and
pop
add
push
sub
dec
repnz
sbb
dec
add
ret
or
add
js
push
cmp
add
add
int
aaa
add
in
fldl
lret
pushf
add
sbb
js
adc
dec
cmc
cmpsl
cmp
stos
rcll
outsl
xchg
pop
add
inc
xorl
xor
dec
inc
loopne
fs
jo
fidivs
sahf
add
pop
mov
mov
gs
add
xor
jbe
jg
push
punpcklbw
add
subb
jl
cmp
out
adc
mov
xor
test
pop
dec
dec
and
mov
dec
int
shl
test
pop
sahf
es
push
out
mov
in
sarb
stos
sub
lds
pop
jmp
adc
mov
loopne
xchg
add
je
and
cwtd
aad
push
popf
add
adc
mov
xchg
xchg
inc
cmpsl
bound
xchg
add
inc
mov
sub
ja
push
int
cmpsl
pop
pop
add
iret
sbb
or
pop
jo
adc
lods
pushf
jle
pop
fwait
jb
xchg
scas
cmp
dec
push
adc
das
and
mov
ss
mov
adc
inc
xor
aaa
mov
mov
in
and
add
jg
mov
sarl
outsb
cmp
xor
push
and
shr
push
push
nop
cmp
cmpsl
outsb
sub
mov
fisttpll
pushf
dec
pop
adc
lahf
adc
jne
push
xor
cmpb
sub
shlb
push
lods
add
jg
xchg
out
jp
sbb
push
and
fwait
or
xor
pop
dec
mov
ret
or
pop
adc
inc
shrl
lahf
add
cwtl
mov
push
arpl
aad
add
std
pusha
and
imul
mov
movsl
sub
jb
add
push
outsl
ljmp
mov
int3
xor
enter
inc
mov
add
repz
std
mov
jecxz
xchg
ret
fidivrl
add
xor
xor
lds
lret
push
push
shrl
or
mov
daa
add
pushf
xchg
or
in
sub
dec
movsl
xchg
pop
clc
push
push
push
ret
push
ljmp
push
sbb
pop
add
inc
and
iret
add
jne
lahf
or
add
xor
leave
add
mov
add
subb
add
adc
mov
or
stc
and
push
popf
mov
xchg
pop
fldl
xchg
test
sbbl
faddl
mov
jl
adc
or
ja
add
jg
push
xor
mov
ret
test
inc
cld
add
xor
mov
add
js
add
push
arpl
push
mov
add
subb
push
cmpsb
fwait
adc
sahf
ficoml
sbb
lret
jle
daa
mov
xor
add
sbb
outsl
jnp
pop
les
outsb
orl
inc
jle
into
shl
add
cmc
loope
mov
xor
stos
sti
addb
cmpsl
mov
outsl
add
jns
add
jo
loopne
push
xor
inc
je
test
stos
pop
out
add
iret
or
dec
int
push
js
mov
mov
fidivrs
mov
and
add
mov
pushf
dec
dec
xchg
out
icebp
rcr
sub
int
jae
dec
add
leave
add
fcmovnu
insl
mov
aas
lds
cmpsl
mov
addl
fsubp
popa
pop
ss
mov
stos
or
cmp
lock
gs
add
in
xchg
add
insb
loop
daa
lahf
or
adc
xor
sub
xor
sbb
mov
add
sbb
hlt
fstps
mov
test
outsl
sbb
mov
lcall
pop
das
pusha
mov
icebp
popf
into
jnp
push
adc
adc
add
xchg
lods
pushf
xor
lret
adc
mov
test
or
jge
add
dec
adc
call
inc
xlat
cli
in
add
mov
in
push
pop
add
pop
popa
jmp
or
fnstenv
xchg
dec
repnz
add
push
sbb
xchg
add
imul
loop
jns
pop
mov
sbb
add
pop
mov
adc
mov
or
mov
dec
add
jg
mov
repnz
and
pop
fs
fildl
xlat
shlb
pop
and
ljmp
mov
sbb
cmp
in
mov
xor
mov
pop
fld
orb
add
push
xor
popf
stos
and
scas
addr16
mov
je
jge
xor
daa
fcmovnb
pusha
loop
mov
push
adc
add
add
je
jecxz
inc
jge
or
test
aaa
imul
rcl
push
ss
mov
int3
daa
mov
pop
add
mov
push
add
sbb
loop
and
push
shll
push
movsl
pop
jo
push
push
add
cmpb
mov
pop
test
gs
jl
dec
mov
insb
mov
mov
sti
lahf
add
xchg
jg
rolb
fdivrl
add
mov
mov
pavgb
sub
stos
pop
cmp
adc
cltd
dec
sarl
add
inc
xchg
and
ret
cld
jns
loopne
cmc
add
lds
adc
cmp
xchg
mov
sti
aad
mov
jne
xor
cld
leave
pop
mov
cs
inc
aad
push
fwait
push
xchg
mov
stc
int
and
nop
dec
cld
adc
add
sbb
sbb
incb
adc
cmc
dec
out
jns
sub
add
add
add
adc
cmp
es
bound
sbb
popl
call
dec
cmp
mov
inc
cmp
lds
dec
mov
push
push
aam
adc
sbb
pop
imul
inc
ss
sahf
dec
cmp
and
mov
add
repz
cmp
push
cwtl
pusha
iret
incl
sub
popa
mov
add
arpl
mov
repnz
mov
lock
mov
inc
adc
jg
int3
dec
nop
sbb
addr16
aad
dec
xor
test
cmp
and
push
loopne
fwait
xchg
add
or
arpl
ret
outsb
jg
mov
push
xchg
aam
inc
dec
dec
iret
fildll
mov
xchg
icebp
loopne
jo
hlt
add
filds
xchg
lock
scas
mov
out
test
adc
push
into
dec
std
das
mov
xor
cmpsb
push
in
cs
call
sbb
ljmp
lods
clc
or
sub
dec
cltd
xchg
cli
stc
scas
out
pusha
fs
das
xchg
out
jge
pop
sbb
in
jnp
mov
mov
dec
sahf
mov
out
xchg
jae
je
test
add
enter
adc
push
add
andb
xor
mov
xlat
daa
add
not
and
mull
repz
xor
loope
in
aam
and
sub
pop
mov
aam
pushf
inc
pshufw
loop
push
in
xchg
repnz
cmp
mov
xor
lds
xchg
dec
lods
mov
mov
push
mov
xchg
mov
ljmp
and
mov
fxch
add
and
mov
clc
push
roll
imul
pextrw
mov
cmp
fs
add
add
es
outsb
or
add
call
scas
in
add
sbb
aaa
rcrb
adc
push
ficoms
pop
lock
test
or
lds
push
clc
sub
jmp
adc
dec
push
mov
je
xchg
mov
push
jbe
das
data16
xor
inc
add
pop
and
xchg
icebp
out
in
add
cltd
les
adc
inc
sbb
add
add
test
cmpsl
mov
rcr
lds
xchg
dec
testl
sahf
cmpsl
addb
js
stc
xchg
mov
push
dec
push
lds
fstps
lret
push
xchg
fs
mov
mov
hlt
mov
cmp
in
jg
inc
jl
fidivrl
int3
stos
pop
fiadds
rcll
mov
or
inc
jns
scas
movsl
add
jns
mov
repnz
sub
jne
sub
sbb
add
mov
mov
lock
sbb
subl
push
or
jnp
cld
fs
push
sahf
cmp
jg
xchg
fsubrl
inc
pop
movsl
jno
std
cld
movsb
out
xlat
inc
pop
mov
add
inc
sbb
shrl
adc
jp
lahf
ja
push
ja
bound
sbb
pop
shr
lcall
aam
lods
add
in
repnz
sbb
sti
dec
fs
fidivrs
add
xchg
daa
gs
clc
cltd
aad
lret
push
sahf
cmc
push
or
add
lock
mov
jbe
bnd
jp
testb
add
outsl
fwait
or
xchg
addl
das
jne
add
xchg
data16
je
mov
cltd
add
mov
hlt
ja
cs
push
push
jecxz
add
sarb
add
inc
add
or
mov
rolb
mov
pop
filds
mov
lea
push
jb
jp
pop
inc
ljmp
pop
fcomps
adc
fsubl
outsl
and
fisttps
rcrl
imul
andl
xchg
or
fldcw
add
ret
outsl
add
pop
loope
pop
inc
fcmovnu
adc
xor
mov
sub
cli
iret
lods
xchg
add
sub
sbb
or
mov
add
add
ss
xchg
sub
jmp
aad
mov
jp
add
int
popa
sbb
repnz
ss
and
hlt
rcr
add
je
xor
cmp
outsb
sub
bswap
scas
add
insb
adc
dec
add
idivb
and
mov
mov
loopne
add
aas
fucomp
add
cmp
aam
mov
jl
dec
popa
pop
cmp
mov
in
or
push
fwait
imul
xchg
mov
push
es
lods
sbb
mov
xchg
cmp
shr
jns
ret
mov
aad
js
sarl
sbb
rorl
add
out
lcall
add
pop
mov
xchg
sti
or
pop
test
add
clc
push
leave
sbb
iret
outsb
lock
scas
sbb
ret
cmp
jle
and
pop
mov
pop
movsl
rorb
clc
leave
jmp
sub
daa
xchg
insb
and
arpl
jl
xchg
sbb
cmp
nop
push
xor
xchg
inc
dec
and
xchg
pop
add
sbb
stos
outsl
add
jecxz
imul
roll
mov
leave
mov
ficoms
into
outsl
mov
dec
pushf
insb
jo
adc
mov
cs
rolb
pop
or
ret
inc
out
mov
mov
cld
lahf
pop
testl
addl
inc
adc
pushf
addr16
fadds
cmp
inc
ret
aas
jl
sub
sub
data16
mov
pop
mov
fs
xor
mov
ret
add
iret
lods
insl
add
ror
sti
lcall
cmpsl
or
adc
pop
and
scas
leave
jl
dec
setge
loop
dec
ret
sub
mov
add
xlat
push
dec
add
fcompl
rcll
fdivr
je
push
mov
dec
add
lock
adc
sbb
js
ds
mov
loop
cs
aam
cmpsb
mov
add
test
pushf
hlt
adc
call
movsl
outsb
mov
mov
sub
daa
add
addb
in
out
adc
xchg
pop
fwait
loope
add
jecxz
cs
sbb
cwtl
lock
push
mov
ret
stos
push
inc
subb
orl
mov
xorb
loopne
clc
jge
push
test
add
aam
stos
outsb
sub
int
add
lods
xlat
xchg
cwtl
add
mov
sbb
mov
cmp
roll
add
ljmp
lods
out
fsubr
adc
in
and
add
or
add
add
push
ja
mov
add
mov
pop
arpl
add
popa
xor
mov
adc
into
das
dec
add
lcall
not
imul
add
fdivrl
add
jmp
pop
add
jb
push
fwait
pop
mov
ljmp
pusha
addb
or
xor
into
loop
out
in
into
dec
pop
fsub
cltd
aad
sbb
cmp
xor
es
hlt
arpl
cmpsl
add
pop
inc
xchg
mov
jns
pusha
ljmp
jmp
jmp
mov
dec
adc
pusha
call
or
shl
pop
popa
lahf
mov
fxch
cmp
mov
push
mov
mov
jb
inc
jnp
stos
iret
xor
stc
out
fnstcw
rol
mov
and
cmpb
popa
xchg
inc
iret
xchg
mov
bnd
mov
mov
ficomps
outsb
int
loopne
dec
dec
daa
or
dec
add
add
add
inc
xchg
mov
inc
ljmp
cmp
sub
clc
adc
insb
inc
and
mov
lahf
stos
lcall
add
ds
pop
push
out
call
inc
icebp
adc
sbb
sub
popf
jl
add
or
cli
or
cmp
adc
jnp
sti
jp
adc
outsl
xor
mov
test
fcmovnu
in
aas
jbe
mov
pop
pop
stos
dec
cmp
popa
adc
xchg
loopne
in
cmp
mov
push
push
mov
xor
int
mov
push
mov
adc
xchg
pop
aam
ficomps
xlat
std
jnp
out
rep
in
pop
stc
push
push
sarl
jns
loope
in
mov
or
int3
pop
sub
icebp
sub
int3
push
lea
push
mov
xchg
dec
add
cld
test
xor
mov
mov
mov
fidivs
loopne
or
inc
stos
or
or
push
dec
ret
mov
and
js
push
std
roll
in
pop
jl
test
out
ret
mov
dec
lcall
push
test
pop
dec
push
xchg
jl
movsl
popf
xchg
add
add
mov
xor
dec
push
pop
lret
js
jl
imul
repz
addr16
push
and
lret
pop
or
mov
mov
jp
call
push
sti
sbb
in
ja
pop
in
movsl
fildl
push
jb
imul
fsubrs
fbstp
lahf
jmp
cltd
xor
sub
or
out
cmp
mov
fists
add
add
inc
pop
pushl
fsts
int
add
andb
dec
jecxz
clc
enter
jg
dec
pop
push
lds
xor
fwait
inc
ret
adc
test
ss
lock
rorl
fisttpl
sbb
inc
inc
cwtl
mov
sti
shrb
mov
and
sbb
out
pop
fldt
inc
add
lods
out
jno
into
sahf
test
add
loope
mov
mov
mov
out
cli
sbb
fdiv
jb
in
imul
jge
pop
sub
sahf
sbb
sub
outsl
xchg
cwtl
adc
out
xor
cmp
cmpsb
imul
adc
mov
sub
jns
and
jmp
mov
and
add
imul
dec
sbb
dec
fstpl
add
jecxz
or
jb
and
lds
pusha
fwait
and
push
imul
mov
mov
test
popa
push
jmp
dec
fistl
int3
mov
sbb
pop
add
repz
aad
into
inc
roll
adc
in
push
leave
push
bound
int
add
fimull
cmpsb
jno
mov
data16
outsl
pop
xchg
stos
xor
push
arpl
loop
cmpsb
lods
or
out
and
addr16
mov
test
or
icebp
xor
jp
stos
out
add
je
dec
or
testb
push
xor
xchg
dec
ret
leave
dec
call
pop
outsl
cmp
lea
faddl
sub
sbb
or
push
dec
jnp
xor
fdiv
popa
inc
imul
pusha
cwtl
dec
adc
jp
das
add
add
mov
dec
add
sub
cmp
or
add
push
fidivrs
stos
mov
gs
push
mov
movsl
test
or
add
inc
xchg
dec
add
je
stos
ret
cltd
mov
and
xchg
lods
mov
aam
cmc
lahf
add
fcoml
sbb
incl
push
pop
dec
imul
sub
cmc
adc
dec
xorb
test
xor
xor
xlat
rcrl
out
ljmp
or
xchg
out
dec
out
sub
jae
mov
pop
pop
jno
sub
lcall
inc
inc
mov
cmp
xchg
jmp
cmp
sub
stc
lcall
xor
dec
cltd
cmpsl
add
push
or
add
fdivrl
jl
movsb
mov
mov
add
mov
pop
aad
sub
sbb
lods
sub
add
ret
mov
inc
inc
rcrl
add
fdiv
cmp
int
sti
pop
jmp
jb
repz
adc
mov
das
popf
cmpsb
and
mov
lods
push
add
test
add
and
ds
std
cmp
dec
xor
das
add
dec
adc
pop
add
pop
mov
lods
ljmp
adc
adc
sub
jl
das
inc
or
adcl
xor
notb
adcb
lods
add
imul
cs
stos
pop
add
mov
sbb
lret
fisttpll
dec
mul
fldt
mov
add
dec
xor
test
xchg
pop
cwtl
fiaddl
and
push
dec
arpl
imul
out
lahf
pop
sub
in
add
or
sbb
fisttpll
mov
bound
or
fistpll
icebp
and
add
hlt
or
lds
pop
and
push
add
in
int3
sahf
dec
xor
adc
dec
dec
inc
xchg
out
add
shlb
pop
cmp
sub
into
push
ljmp
add
push
outsl
aad
or
cwtl
mov
mov
jbe
or
cmp
ret
bound
cli
xchg
popl
mov
mov
dec
test
push
pop
dec
mov
lahf
mov
fmul
hlt
xor
inc
mov
fdivrs
xchg
jnp
sub
popf
movsb
outsl
lock
add
fdivrs
cmp
add
daa
stc
insl
mov
xchg
cli
pop
mov
add
cmc
lahf
arpl
jmp
add
xacquire
add
bound
pop
add
push
xor
push
mov
sbb
mov
ret
add
outsb
mov
pop
adc
popa
push
test
dec
int
mov
cld
inc
enter
in
adc
pop
in
call
mov
inc
add
in
xchg
dec
std
ds
or
mov
add
sbb
add
xlat
mov
add
sub
xchg
or
mov
sub
wbinvd
test
daa
sbb
aad
cli
das
imul
jo
jp
add
sbb
add
xor
mov
adc
outsb
push
fs
mov
mov
outsl
addl
adc
call
inc
sbb
mov
jnp
pop
shrb
fsubrs
les
fcompl
cmp
repnz
xchg
in
inc
lds
mov
out
daa
jno
leave
add
push
dec
in
push
add
imul
adc
mov
lret
jns
xor
gs
fiadds
pop
or
sar
test
je
lds
dec
mov
add
or
andb
inc
leave
push
and
js
add
jno
xlat
pop
xor
inc
add
into
stc
jns
loopne
pop
out
fwait
add
mov
mov
or
jmp
fnsave
movsl
add
iret
push
adc
sti
jae
lods
repz
mov
mov
mov
inc
xchg
jmp
jnp
pushf
pop
pop
push
sbb
push
cmpsb
add
stos
pop
icebp
gs
add
jg
pop
push
rcrb
or
lcall
jecxz
int3
adcl
or
add
ljmp
fcmovb
jg
lahf
mov
sbb
icebp
nop
sub
xchg
cwtl
adc
outsl
add
push
sbb
andb
fcmovne
inc
add
adc
pop
push
les
add
pop
add
in
jbe
inc
push
loop
jo
das
inc
inc
mov
xor
sar
in
pop
lahf
adc
or
lods
fildl
inc
jae
fiadds
and
mov
add
mov
pusha
pcmpgtw
adc
push
fcoml
cmc
add
or
add
or
lods
dec
xor
aam
lea
xor
inc
cli
in
sti
dec
and
push
xchg
sbb
dec
add
push
mov
mov
add
jns
mov
mov
mov
rorl
sub
sub
fimull
test
andl
jns
loopne,pn
dec
xchg
loope
push
cld
lock
mov
add
fimuls
ret
add
mov
jbe
cld
insb
subl
repnz
in
add
pop
xchg
add
cli
dec
mov
dec
jne
bound
sbb
insl
into
pushf
push
sti
add
popf
mov
sub
pop
and
push
popl
xor
add
push
push
sub
push
push
mov
adc
ja
mov
jp
ljmp
loop
out
addr16
or
adc
and
mov
test
mov
insl
xchg
stos
sbb
imul
jmp
xchg
add
fildl
repnz
jb
out
repz
and
adc
loope
daa
ss
add
pop
cmp
add
dec
int3
mov
lock
js
ljmp
and
mov
movsb
inc
jbe
push
insb
inc
in
add
mov
fnstenv
imul
push
iret
rorl
add
add
fcoml
sbb
pop
adc
inc
xor
adc
mov
vmwrite
imul
stos
add
xchg
ljmp
xorb
jnp
imulb
dec
repnz
in
mov
inc
or
rcll
sub
js
pop
rol
lods
jns
mov
mov
add
out
sbb
into
sub
in
jge
inc
mov
cmp
jae
mov
aad
cld
insb
mov
mov
pop
mov
cmp
xlat
sub
lods
pushf
stc
sbb
add
push
and
dec
mov
call
sub
je
popa
mov
loop
loopne
cmc
mov
add
lret
dec
add
add
mov
inc
add
fwait
cli
and
mov
or
pushw
add
stc
mov
cmpsb
addr16
dec
sbb
in
jg
add
and
add
out
js
fdivr
cmp
push
sub
ret
scas
xchg
pushf
es
fadds
clc
inc
push
and
in
sahf
push
or
push
lods
jnp
std
add
and
jg
jns
mov
out
aad
adc
std
in
mov
xor
scas
test
imul
lret
fnstcw
fdivrs
fisubrl
jnp
jns
and
mov
mov
sub
xor
and
add
mul
jbe
in
aaa
mov
push
sub
into
int
mov
pop
sti
pop
xor
in
sub
mov
xchg
pop
inc
fidivl
cmp
push
mov
cmp
sbb
insb
mov
dec
int3
aam
mov
orb
inc
out
pop
push
cmc
stos
jnp
push
fsubp
add
movsl
bound
push
popf
cltd
fwait
or
ret
xchg
adc
arpl
daa
lods
maskmovq
testl
add
mov
mov
icebp
lods
jmp
xlat
mov
scas
mov
adc
into
ret
jle
insl
fbstp
xorl
cmpsb
and
push
pushf
sti
sub
sbb
add
jno
jg
fnstsw
mov
ss
adc
fidivrl
fs
loope
ret
test
popa
push
push
fisttpll
nop
bound
arpl
pop
clc
push
push
add
adc
jae
imul
pop
jecxz
insb
sub
xchg
mov
mov
sbb
add
fisttpll
dec
add
cmp
push
addl
mov
add
sub
jp
decb
jge
jg
cmovg
sub
lea
ds
pop
pcmpeqd
push
in
inc
into
cmp
jnp
push
cmp
jno
insl
push
adc
pop
add
adc
lock
inc
mov
push
dec
pusha
outsl
das
or
add
mov
hlt
add
cltd
into
outsb
jb
and
or
cmp
sbb
push
push
or
add
sub
fcompl
mov
movsb
test
sahf
add
faddl
cld
mov
rorl
stc
stos
jmp
adc
repnz
insb
fisubrs
lahf
fldl
sub
scas
adcl
pop
push
hlt
stos
mov
add
lea
movsl
scas
xchg
sbb
adc
ret
fcompp
mov
xor
nop
andb
in
je
sub
xchg
xor
cli
push
stos
xchg
or
jge
push
push
mov
cmp
push
test
mov
cmp
les
out
arpl
rolb
pop
or
cltd
sbb
lock
es
mov
jg
lcall
xchg
pop
add
sti
mov
out
rcl
add
add
inc
push
add
inc
add
loop
xchg
mov
fsubs
pcmpeqw
push
mov
daa
out
mov
xor
decb
xchg
lods
add
add
pop
add
fs
xor
mov
or
out
pop
sbb
stos
sub
iret
rorb
rolb
shll
das
sbb
insw
cmc
repnz
rcl
enter
out
adc
or
inc
adc
pop
add
jns
xor
rolb
dec
stos
dec
jb
pop
jmp
xor
xchg
sub
pop
jp
xor
mov
test
push
movsb
adc
sbb
pop
inc
addr16
sahf
add
mov
adc
mov
or
movsb
out
push
add
lods
jno
jmp
push
xchg
add
lret
fists
cmp
xor
jne
scas
repnz
or
movsb
loopne
mov
pusha
dec
push
pop
jle
add
fwait
mov
inc
ja
repz
add
roll
inc
lret
leave
or
or
mov
int3
push
shll
mov
jmp
sahf
dec
insb
inc
mov
adc
jge
pop
sbb
outsl
jmp
lods
enter
cwtl
pop
stc
push
adc
je
in
lods
nop
add
inc
xchg
gs
insb
lret
sbb
push
jmp
sub
out
inc
fidivl
push
mov
sub
push
mov
je
add
xchg
mov
fldenv
movsl
add
sbb
cmp
xchg
aam
pop
pop
lods
rcrl
push
add
and
pop
xchg
xlat
loop
inc
outsb
jo
andb
fdivs
push
mov
xor
jns
jmp
test
lcall
movsb
xchg
cltd
cmp
insl
stos
test
pop
and
ret
lock
repz
aad
sbb
jmp
adc
bound
lods
enter
dec
pop
add
add
mov
test
daa
lret
xor
and
and
mov
mov
scas
sub
cmpsl
mov
or
popa
add
sbb
pusha
lahf
test
dec
add
add
adcb
in
push
cmp
negl
adc
mov
aas
aad
or
add
pop
movl
jge
lcall
lea
cltd
ss
mov
adcb
dec
push
jge
mov
add
pop
rcrb
dec
insb
mov
into
add
push
shll
dec
lahf
xor
jno
pusha
mov
ret
stc
pop
test
out
das
ss
push
je
mov
sbb
inc
test
mov
pop
cpuid
pop
jmp
or
and
outsb
push
xor
sub
sbb
pop
loope
jl
push
aam
add
arpl
popa
dec
mov
sub
lret
cmpl
jae
js
add
fs
out
sub
cmc
mov
adc
fwait
inc
icebp
movups
inc
add
xchg
test
cmpsl
jp
mov
add
into
jbe
addr16
jb
add
pop
adc
adc
das
cmpsb
fmull
repz
movsl
add
pop
movsb
sti
int
imul
out
movsb
sbb
or
testl
loop
mov
push
sub
sub
aas
inc
jae
jmp
add
popf
sarb
or
ss
jp
roll
movsb
jg
cmpsb
data16
adc
loop
lds
and
insl
lea
jno
outsb
add
idivb
out
jnp
insl
or
add
out
fisttps
mov
lods
sub
fdivrp
shrl
push
lcall
mov
add
out
shll
stc
ficompl
add
inc
add
and
inc
inc
jmp
pop
dec
cmp
fwait
imul
add
jns
mov
idivl
dec
pop
cmpsl
in
add
test
loope
fldcw
mov
fidivs
rol
add
std
gs
xor
xchg
push
je
idivl
scas
mov
jne
or
push
cld
and
xchg
test
std
imul
daa
add
mov
sub
adc
clc
jp
cli
stc
xor
rolb
cmpb
mov
js
lds
add
and
push
cmp
xor
sub
dec
mov
stc
mov
mov
add
je
push
imul
das
mov
xor
inc
scas
inc
lcall
mov
ret
or
insl
dec
push
or
inc
jns
lcall
jmp
das
in
xorb
add
ljmp
add
adc
leave
add
push
imul
cmp
inc
lret
insl
push
pop
and
push
inc
sti
lock
xchg
scas
lret
ja
mov
inc
xor
jg
adc
jne
cmp
adc
jp
mov
lahf
inc
dec
jmp
dec
add
stos
loope
add
shlb
add
in
pop
adcb
xchg
pop
adc
xor
rolb
pop
add
out
outsl
outsb
inc
cmp
lods
cli
add
xchg
rolb
out
mov
shl
mov
inc
adc
out
mov
cmp
xor
repz
mov
add
in
add
sub
push
push
mov
out
sldt
mov
mov
mov
push
shr
add
mov
cmpl
imull
std
or
push
jae
loope
hlt
add
dec
or
sub
out
mov
stc
add
push
xor
mov
and
movsb
mov
out
int3
icebp
je
mov
xlat
pop
and
cmp
pop
stc
and
cld
xor
jl
sub
xlat
xchg
aaa
iret
iret
sarb
push
pop
je
sbb
mov
add
psrad
pop
jmp
int
add
imul
into
or
or
andb
add
shlb
movsb
test
xchg
idivl
add
cmp
incb
jg
or
xor
push
das
xchg
dec
gs
add
rorl
sub
mov
mov
jnp
sbb
fsubrp
inc
sub
pop
push
sbb
clc
leave
gs
sub
je
pop
int
cltd
sbb
loope
dec
xor
fnstsw
add
add
lock
add
jge
hlt
cmp
push
bswap
scas
mov
mov
mov
rolb
jne
lea
add
sbb
cli
outsb
lock
stos
push
mov
lcall
pop
add
cmp
or
add
leave
loop
lock
adc
lock
fiadds
jp
xchg
jns
testl
adc
mov
dec
ljmp
enter
push
out
fs
dec
into
ror
jle
push
ret
push
std
rcll
inc
cmp
xorl
lret
hlt
adc
mov
xor
scas
jmp
mov
gs
cltd
out
pop
arpl
iret
inc
or
push
and
mov
mov
cld
inc
rcll
mov
add
push
hlt
xchg
loope
add
mov
test
repz
jnp
icebp
xlat
insb
cmc
movsb
outsb
dec
add
and
outsl
cmc
mov
out
mov
dec
roll
test
ret
ljmp
push
aaa
andb
inc
lods
sahf
outsb
jnp
sub
fdivrl
push
and
incb
std
jo
loop
xor
out
sub
push
mov
loope
cmp
add
lea
js
test
or
mull
mov
movsl
mov
ss
add
fstps
shr
push
js
dec
imul
flds
push
xchg
sahf
out
sub
stos
add
mov
roll
push
hlt
cmpsl
scas
add
clc
fwait
xchg
jmp
cmp
in
adc
cmpsb
push
inc
pop
push
lea
mov
outsb
xchg
ds
movsb
das
xchg
and
xor
sub
push
ljmp
add
push
out
dec
leave
mov
and
in
stc
xor
dec
push
pop
imul
push
inc
ret
dec
aad
shll
cwtl
adc
xor
fisubrl
loop
insl
repz
adc
xlat
add
sbb
add
test
scas
mov
sti
lcall
dec
dec
xor
jle
mov
push
hlt
call
add
push
jg
mov
xlat
mov
xor
sbb
sub
inc
ja
jg
je
push
or
xor
fwait
inc
mov
cld
jg
repz
std
scas
cmpsb
inc
inc
xchg
and
dec
mov
add
in
inc
push
push
imulb
lret
mov
jecxz
add
sti
popl
outsl
mov
adc
sarb
clc
js
sub
mov
adc
repnz
popa
mov
push
push
xchg
and
or
ljmp
dec
and
mov
inc
hlt
jp
jecxz
pop
jae
sbb
aam
add
loopne
into
hlt
rorl
jecxz
mov
call
test
add
in
leave
push
popa
mov
imul
cmp
inc
jo
cld
fmuls
fucomip
adc
sti
jno
call
into
inc
add
xor
push
add
pusha
mov
add
inc
shrb
lret
js
lds
sar
or
xlat
xchg
fistps
pop
push
scas
rorl
push
pop
add
mov
cmp
cli
lret
mov
inc
fwait
add
mov
daa
pop
pop
push
xor
mov
add
jge
jbe
adc
in
cmpsl
xchg
imul
dec
jle
cmp
out
lods
push
pop
and
out
xor
jno
mov
aam
cmp
outsl
add
jns
cmp
aaa
mov
or
add
adc
fs
mov
mov
jl
cmc
add
add
in
sbb
andb
fldl
ja
cli
cmp
stos
add
add
popa
add
in
mov
pop
inc
push
add
bound
cmp
fisttpl
jmp
sti
add
enter
fisttpl
push
cs
add
fidivrl
add
sbb
mov
mov
inc
out
std
add
loop
and
jg
jecxz
mov
std
push
sbb
add
addr16
cld
add
popf
testb
and
xor
adc
jecxz
pop
push
test
adc
pop
fwait
nop
jno
xchg
xor
sub
fld
decb
add
sub
push
xor
cld
lods
popa
and
loop
push
loope
sub
mov
sti
xchg
scas
adc
jge
jg
lods
les
xchg
add
rsqrtps
int3
fistps
inc
adc
adc
mov
add
mov
lret
mov
sahf
fiaddl
mov
ds
sub
push
popf
jo
int3
pusha
add
jg
add
sbb
sbb
testb
daa
sub
ret
into
aaa
test
pop
popa
inc
jl
mov
outsl
outsl
ret
rcr
push
mov
mov
js
into
mov
add
cmp
xlat
jmp
pusha
popa
lock
push
addr16
add
inc
into
add
stc
out
lret
dec
add
sub
addr16
jl
push
dec
lock
push
mov
pop
sub
push
into
popa
loop
stos
add
add
add
jnp
data16
mov
lock
mov
sub
xor
jne
jle
inc
repz
jbe
sub
mov
ss
xor
addr16
pop
xchg
ret
stos
push
bnd
lea
stc
add
xor
push
cmp
loopne
inc
pop
lods
test
push
int3
mov
scas
jge
or
test
mov
lcall
imul
mov
add
dec
pop
mov
xchg
addr16
sbb
xchg
cmpw
mov
jge
out
pushl
add
imul
jl
lds
pop
and
mov
add
mov
nop
fsts
in
repnz
mov
shlb
adc
aaa
lds
add
xchg
dec
jb
push
jbe
mov
or
push
int3
add
mov
add
ja
jnp
mov
push
cmp
imul
xchg
out
dec
add
and
adc
popa
mov
inc
sbb
in
pop
rcll
add
scas
int
push
lcall
add
cmp
fucom
add
fsub
push
add
mov
cmpsl
adc
sub
out
lret
adc
addl
jo
negb
dec
xchg
icebp
xor
add
sub
mov
mov
add
push
jmp
xor
push
inc
adc
bound
lret
fisttpl
popf
add
sub
and
mov
push
jne
mov
jmp
xor
inc
add
test
mov
xor
out
hlt
scas
aad
cld
rolb
mov
add
imul
adc
out
cmp
push
sbb
lret
jnp
insl
and
pop
push
loope
popa
inc
movsl
movsb
adc
inc
push
lods
ds
dec
pop
or
stos
and
imul
xchg
mov
clc
int
xlat
adc
mov
pushf
pop
jmp
test
out
lds
popa
pusha
ret
jne
scas
insl
add
dec
or
xlat
stos
std
lds
sbbb
pop
mov
iret
outsl
jno
and
sub
sbb
sbbl
pop
mov
out
aad
mov
stos
aad
xchg
pushf
or
in
cli
shlb
es
aam
pop
mov
rcrl
mov
mov
popa
cs
loopne
mov
jno
inc
fidivrl
add
push
and
add
loopne
inc
mov
arpl
push
lea
push
out
pop
sub
lds
outsb
rol
add
sbb
jae
clc
mov
ficoms
outsb
add
mov
arpl
or
push
jb
sti
push
add
pop
das
jl
imul
mov
add
xor
mov
inc
add
outsl
push
push
arpl
dec
pushf
lds
mov
jbe
hlt
mov
xor
add
and
xor
scas
lods
mov
stos
push
mov
pop
add
xlat
pop
ret
clc
scas
loop
cmp
jmp
cmp
pop
push
sbb
je
mov
push
push
adc
or
cltd
jnp
lret
mov
jl
pop
xor
hlt
push
and
outsb
sub
addr16
in
inc
ljmp
movsl
xchg
cmp
push
or
jmp
aad
jne
add
lods
and
hlt
imul
out
adc
sarb
shr
mov
push
ss
in
movb
and
icebp
add
divl
inc
mov
je
add
addl
leave
sarb
popl
arpl
pop
add
xor
and
push
je
mov
push
lret
jne
rolb
pop
adc
movsb
aaa
sbb
hlt
and
push
mov
dec
mov
pusha
push
xchg
inc
cmc
dec
ljmp
in
add
jmp
and
sbb
jg
jp
add
repnz
lret
out
xor
adc
push
popa
stc
fcoms
mov
imul
push
insl
cwtl
stos
dec
incb
mov
add
add
cmpsl
mov
rcrl
shrb
jg
push
or
cmp
adc
adc
loop
ficomps
dec
push
pop
sub
lcall
mov
mov
scas
in
jge
mov
bound
cmp
pop
mov
lahf
pop
mov
adc
shrb
push
mov
scas
mov
aaa
xor
js
add
inc
ljmp
pop
push
push
negl
adc
sub
nop
pop
sti
out
cld
or
push
and
push
jno
sub
add
pop
jge
pop
inc
shrb
sbb
leave
out
push
pop
sbb
into
cwtl
arpl
test
pop
adc
sub
sbb
adc
xchg
das
sbb
cmpsl
add
popa
xchg
mov
cmp
adc
fldcw
xchg
add
sti
hlt
add
lcall
mov
inc
add
add
fbstp
pop
push
add
ss
pushf
test
adcb
test
adc
lods
xor
or
es
clc
jecxz
jbe
addr16
aad
mov
mov
push
aaa
into
mov
jl
or
xchg
lcall
pushf
dec
idiv
adc
add
lret
cmpsl
loop
mov
in
fnstenv
cli
icebp
ret
lcall
loope
dec
ljmp
jns
add
fisttps
fisttpll
into
mov
dec
outsb
jo
movsb
test
aam
mov
pushf
jns
sbb
aaa
cmp
lahf
cmc
cld
in
roll
sbb
arpl
leave
mov
fwait
mov
movsb
cmp
add
bound
jle
and
push
dec
sbb
scas
bound
cmpsl
sub
add
pop
icebp
pop
nop
add
cmp
mov
jg
fimull
adc
mov
add
mov
or
mov
ret
loop
push
add
cmpsl
out
xchg
into
cmp
xor
adc
dec
push
and
sbb
lret
xor
mov
sub
add
cmc
push
mull
ret
push
imul
mov
push
outsl
sub
and
mov
sbb
scas
and
lods
dec
mov
add
stc
inc
or
mov
mov
xchg
cmpsl
js
ljmp
adc
scas
and
in
ror
test
fimuls
xlat
fisttpl
xor
lds
add
lret
test
lods
or
add
ljmp
add
movsb
mov
shr
mov
mov
sbb
inc
jl
fmull
mov
cmp
test
inc
mov
cmovg
mov
push
adc
or
iret
sub
outsb
xchg
sbb
cs
scas
or
fists
mov
mov
call
push
mov
test
push
add
ret
mov
sub
pop
xchg
lcall
das
lds
sbb
sbb
ss
call
lcall
aam
add
or
leave
repnz
ja
nop
add
mov
fidivs
dec
pop
push
xor
and
fdivr
in
add
bound
sti
mov
push
lret
out
xchg
add
bound
into
mov
jne
pusha
iret
lcall
cli
mov
dec
iret
out
in
dec
sbb
dec
movsb
or
jg
fs
mov
stos
pop
mov
mov
je
enter
jle
aam
add
xchg
add
xorb
sbb
and
adc
jp
mov
imulb
aad
add
cld
lahf
icebp
filds
xlat
ds
inc
add
call
aaa
mov
add
sub
fldt
std
add
out
and
out
dec
add
mov
push
fidivl
xor
jle
stos
jmp
cli
xchg
es
lret
lock
mov
mov
je
xchg
or
mov
aas
leave
pushf
dec
sbb
stos
mov
fidivl
jl
add
inc
cwtl
xor
jns
adc
sub
add
pop
aam
push
xor
mov
inc
xor
sub
push
sbb
xchg
and
inc
sub
inc
adc
cmc
jmp
sti
jns
mov
xor
idiv
cmp
add
adcb
or
mov
add
pop
jecxz
movsb
cli
fs
push
mov
dec
and
sahf
movsl
xor
nop
inc
push
daa
push
rcrl
adc
push
mov
dec
fldl
std
add
mov
int3
jns
sbb
adc
popa
iret
xlat
jbe
rorl
inc
imull
mov
jns
sbb
xor
insl
mov
sub
or
add
fidivs
push
and
xor
cmp
xchg
rcll
rorl
cli
jmp
dec
xchg
jb
daa
inc
fisubl
movups
pop
fsubrl
sbb
cltd
and
inc
jg
pushf
outsb
and
addl
mov
and
and
jle
inc
loope
pop
xor
lods
mov
sub
testl
add
mov
push
or
mov
call
stos
and
add
mov
test
push
cmp
lret
jge
and
mov
mov
loope
mov
xor
sub
xor
xor
add
out
jmp
jnp
cmp
jns
add
push
pop
pop
pop
orb
das
xadd
lods
mov
hlt
adc
ret
xchg
sub
jle
mov
inc
lea
push
and
jne
jae
xor
sub
iret
je
jno
and
push
fistps
dec
testl
lret
inc
inc
mov
clc
cmp
outsl
jae
add
mov
mov
jnp
cmp
cmp
and
xor
dec
dec
xchg
mov
or
dec
add
ja
addb
pop
lcall
aas
adc
sub
mov
test
xor
insl
outsb
filds
add
jmp
movb
ret
xor
in
ja
in
rcrb
addb
ss
movsb
cmp
xchg
mov
mov
mulb
jb
sbb
push
adc
sbb
sub
test
push
mov
arpl
jle
xchg
jnp
xor
and
fimuls
or
std
add
icebp
mov
stc
rcpps
or
mov
and
sub
cmp
ljmp
push
push
fwait
jle
sbbb
inc
out
ror
in
push
add
xchg
inc
mov
xor
mov
fstpl
pop
insl
jmp
scas
je
std
fidivl
jmp
sub
inc
add
arpl
pop
jnp
dec
sub
sub
test
cmp
pop
jno
xor
loopne
jo
push
push
imul
dec
add
adc
mov
outsl
xlat
addb
or
dec
arpl
paddw
lahf
add
sahf
xchg
sbb
pop
inc
es
pusha
jnp
xor
loop
popf
push
scas
or
xchg
sub
std
ret
inc
push
and
leave
lds
xchg
pushf
mov
jp
out
scas
mov
mov
and
push
sarb
pusha
push
add
mov
mov
mov
pop
mov
fsub
cld
lret
push
lock
or
pop
jmp
inc
add
lods
popf
add
and
jl
shll
sub
adcb
mov
jne
sub
shrb
sbb
addb
and
ret
pusha
add
dec
mov
aam
and
add
rorb
inc
xchg
sbb
add
inc
std
dec
push
popf
sub
loope
sub
jne
sub
push
and
add
xchg
or
cmp
std
ret
pop
push
nop
mov
test
mov
cmc
sbb
mull
add
dec
add
in
arpl
pop
mov
sub
push
sub
xlat
addl
int
and
dec
sbb
cmpsb
loop
pop
add
aaa
sarb
adc
push
jno
adc
sub
add
dec
rcl
cmp
add
ret
stos
pop
repz
dec
sub
mov
dec
gs
push
mov
add
sub
js
stos
sbb
push
mov
pop
cmp
mov
mov
pop
int
scas
neg
pop
mov
jp
adcl
daa
mov
xor
lret
add
int
out
mov
rorb
and
daa
push
push
or
add
test
cmpsb
mov
call
rorb
sub
ja
sub
pop
out
push
cmpsb
shrb
xchg
xchg
add
ret
jl
pop
adc
cmp
mov
stos
and
aaa
jg
cli
sbb
mov
mov
jb
fldl
out
dec
jbe
aam
sub
mov
or
add
les
xchg
push
xor
inc
adc
mov
lahf
lret
addl
xchg
leave
inc
stos
add
loope
testb
es
jnp
cmp
xchg
mov
jle
addr16
dec
pop
loopne
and
lahf
jbe
add
lock
jno
dec
pop
add
add
stos
negl
inc
test
decb
aaa
loopnew
or
mov
pop
push
mov
les
lock
add
aas
test
mov
ret
std
sbb
push
sub
sbb
outsl
aad
add
xchg
push
cmc
pop
jmp
cli
andb
push
or
and
add
negl
push
xor
lods
push
lcall
mov
test
out
mov
rolb
xor
aam
sub
mov
or
xlat
repz
into
dec
neg
addl
push
sahf
adc
add
scas
pusha
cs
inc
mov
mov
loop
call
jnp
sub
and
push
xor
and
andl
cwtl
push
push
mov
rorb
jae
test
mov
fmul
push
pop
out
or
cmp
cmp
add
jmp
mov
outsl
scas
ror
xchg
inc
sub
mov
push
mov
jnp
dec
mov
jg
mov
pushf
data16
in
dec
out
hlt
or
push
dec
repz
cmp
rcr
or
out
ret
push
leave
add
and
or
or
mov
hlt
notb
add
icebp
fildll
cmc
cmp
out
fs
stc
adc
lss
mov
cmp
pop
push
andb
in
sub
lahf
mov
add
js
imul
jl
add
ljmp
sbb
dec
out
frndint
add
cmp
mov
and
cmp
add
stc
stos
add
sbbb
dec
loopne
outsb
jne
and
scas
inc
cwtl
mov
test
push
mov
and
sbb
fwait
out
out
leave
xor
fstps
sarl
inc
adc
jbe
int3
xchg
adc
lock
sub
mov
lahf
xchg
cltd
push
fcomps
out
jnp
jge
push
cmp
xchg
dec
add
imul
fcoms
jg
add
jnp
ret
arpl
stos
loope
mov
aaa
lea
shl
cmp
icebp
popf
out
xor
movsl
add
pop
push
psrlw
mov
addr16
inc
mov
add
add
hlt
pushf
mov
jne
mov
shr
out
cli
movsb
in
pop
xor
cmp
add
mov
clc
and
pop
es
imul
add
mov
jmp
cli
rcl
sub
dec
lods
pop
push
cmp
jl
js
shr
lods
aad
sub
test
mov
sbb
ja
fadds
and
pusha
clc
stos
cmp
mov
fcmovu
mov
or
push
pop
nop
repnz
mov
cmpsl
insl
jmp
lea
xchg
sbb
sarl
inc
xchg
ja
xlat
jge
sti
xchg
add
xchg
xor
in
mov
jle
mov
mov
pop
mov
cld
adc
inc
arpl
fxch
cli
in
addl
les
jp
xchg
pop
leave
cmp
pop
sbb
mov
inc
push
mov
inc
xchg
push
insl
andb
out
popa
loop
daa
add
sbbl
outsb
rolb
insb
dec
push
mov
jmp
cmp
loopne
je
les
int
add
push
inc
inc
mov
insl
lods
lahf
and
cmp
addb
mov
jg
jmp
inc
outsb
ret
inc
leave
lcall
addr16
gs
test
xor
stc
jecxz
ffree
add
inc
cmp
add
cli
out
pop
ret
pop
out
sbb
fcompl
aaa
cmp
loopne
adc
insb
pop
and
aas
add
add
mov
in
add
sbb
jmp
outsb
rcrl
aad
jo
mov
out
es
sub
jp
andl
push
out
dec
sbb
insl
jo
adc
jmp
in
lahf
icebp
xchg
push
add
in
lds
fisubl
addr16
lahf
sub
jb
les
lret
adc
sub
dec
jle
fstpt
sti
add
dec
fsubl
add
out
push
add
jl
mov
ja
pusha
dec
hlt
inc
dec
push
sub
lods
lret
push
dec
mov
xchg
or
push
and
mov
add
add
and
mov
xorb
pop
jae
arpl
pop
add
sbb
repnz
pusha
and
orl
sbbb
and
das
cmpsb
ss
adc
rcrl
pop
pop
cwtl
add
mov
in
inc
mov
inc
xor
add
jns
adc
or
cmc
dec
ss
add
add
mov
push
inc
jae
and
xlat
dec
or
jnp
dec
add
fs
mov
into
loop
js
gs
imul
lahf
mov
cmpsb
lcall
pop
roll
mov
mov
leave
test
xchg
mov
mov
bound
notl
popa
pushf
and
sti
jp
scas
pop
add
insl
mov
mov
jne
or
into
das
sub
mov
sbb
cwtl
push
lret
mov
xlat
pop
or
add
add
sub
dec
aas
std
push
xchg
mov
stc
add
xchg
jp
jecxz
enter
les
sbb
jge
inc
cmc
mov
add
sbb
pop
or
pushw
xor
aaa
lds
cmc
cli
cmpsl
sbbl
and
outsl
sbb
lcall
sbb
insb
mov
and
mov
add
movsl
stos
lea
imul
int3
aaa
mov
add
insb
sbb
sbb
inc
jno
mov
jnp
or
mov
add
xchg
movsl
push
inc
mov
xlat
add
add
cmp
lods
add
push
adc
inc
into
dec
fldt
int3
add
pusha
popf
add
xor
subb
loope
mov
repnz
mov
idivb
cmpsl
push
iret
pop
lahf
out
xchg
ja
xchg
sub
idivb
stos
jmp
mov
or
ljmp
es
iret
adc
popf
xchg
imul
lods
jmp
cmp
mov
mov
js
fistps
fnstcw
addr16
sarb
xchg
fisubs
jle
incl
sti
pop
add
mov
test
cli
pop
out
add
cwtl
pop
or
lock
add
ss
dec
mov
jle
jo
xchg
lods
adc
mov
arpl
xchg
push
leave
jmp
scas
ss
adc
ret
add
outsl
pop
jns
pop
in
add
es
popa
or
mov
mov
subl
pop
push
inc
pop
xlat
scas
lods
insl
sub
sub
lret
subb
add
dec
mov
add
gs
xchg
int
cmc
and
inc
insb
ror
cs
sbb
hlt
inc
sub
decb
push
repz
sub
cmp
pop
mov
mov
push
rcrl
adc
pushf
mov
push
in
add
test
xchg
dec
loope
das
push
sti
outsb
lret
add
inc
out
cli
xchg
add
leave
lea
sbb
sub
outsl
pop
dec
js
dec
add
int
cld
mov
jno
fcoms
pop
movsb
insl
xor
add
mov
cmp
mov
xlat
sub
fsubrl
mov
ss
add
xchg
rcrl
mov
xchg
leave
test
inc
mov
push
add
cltd
xchg
mov
stc
lods
movaps
add
rcll
add
sarb
push
xchg
cs
inc
hlt
jmp
xchg
jnp
add
pop
fsubrs
and
scas
jmp
roll
aad
push
add
push
mov
lock
lret
das
xchg
jmp
xchg
push
cmp
pop
clc
inc
inc
dec
cwtl
jb
lock
jle
add
test
js
jmp
jl
stc
mov
or
loop
mov
pushf
rorb
cltd
sub
xor
inc
sti
out
sahf
jge
sub
cld
mull
xchg
loopne
sub
mov
in
cld
inc
stos
pop
sub
dec
jmp
inc
inc
or
add
dec
ret
inc
add
pop
xlat
add
negb
pop
hlt
lret
andb
add
pop
lock
fsub
dec
push
push
lock
pop
push
insl
jge
dec
in
xor
and
xchg
push
push
dec
fcompl
cli
xor
mov
adc
xor
xadd
mov
add
jns
movb
pop
push
xrelease
das
mov
xchg
sarb
jmp
dec
ss
test
das
cld
add
and
stos
mov
lret
add
addr16
inc
cmpsb
push
int3
ljmp
stos
inc
fsts
scas
xchg
es
push
int3
push
testb
subl
les
mov
flds
hlt
ja
push
clc
fwait
bound
cmpsb
mov
sbb
push
add
jecxz
jl
mov
sarl
dec
xorl
aad
adc
adc
mov
and
idivb
jnp
mov
test
lock
pop
xchg
test
sub
and
add
jno
add
dec
lock
lea
shl
sbb
filds
jge
adc
add
jg
add
js
test
popa
mov
add
jle
aam
leave
jns
and
sarb
fstps
push
imul
repnz
daa
xchg
xor
sub
test
adc
fwait
jp
push
pop
add
sbb
pop
push
push
or
sub
push
sub
insl
xchg
out
out
mov
popf
push
js
cwtl
mov
rorl
jl
pop
and
sti
cltd
fwait
push
mov
cli
test
ds
ja
mov
inc
flds
and
test
aam
insb
int3
push
push
lahf
js
adc
jge
jl
ja
rorb
dec
jbe
lcall
xchg
mov
add
adc
out
jns
lea
dec
rol
clc
fsubp
cmpsl
push
mov
jge
mov
push
sti
aad
sbb
add
adc
mov
repz
inc
fstpt
mov
mov
inc
pusha
or
add
cmpl
lock
push
push
dec
add
aaa
lds
aad
add
sub
mov
cmpsl
inc
out
inc
lret
scas
lcall
add
sti
push
add
in
and
pop
xchg
enter
jl
xlat
add
mov
add
call
and
pop
push
sahf
cld
adc
dec
sbb
mov
lahf
push
lret
xlat
jecxz
enter
cmp
sti
cmp
data16
pop
fiaddl
rcl
popa
stc
jmp
inc
add
xchg
lret
dec
pop
add
bnd
cmp
xchg
mov
arpl
add
xlat
sbb
lret
add
mov
lea
sldt
adc
cwtl
ss
pop
add
loope
cld
rorb
mov
in
mov
dec
movsb
adc
or
jl
inc
std
std
mov
jp
bnd
jo
and
cltd
dec
add
sub
adc
int
repz
push
jmp
arpl
cmc
in
sbbl
out
push
jge
hlt
jg
cmp
lcall
sahf
sti
lods
std
roll
scas
dec
icebp
and
cmovb
mov
push
repz
jb
jbe
mov
and
pop
movsl
loopne
mov
dec
mov
add
cli
add
adc
xchg
adc
xchg
popw
shrl
xor
ret
outsb
adc
aaa
mov
aad
add
les
adc
fcoml
mov
add
fstl
arpl
sub
xor
fidivs
inc
mov
push
add
arpl
cmp
jl
push
pushf
rclb
fcmove
jg
test
mov
inc
mov
add
aam
xchg
pop
add
sbb
les
shufps
jmp
add
loope
jnp
xchg
fdivs
jae
add
mov
mov
xor
push
das
pop
sub
lret
shll
xchg
push
std
and
inc
ja
xchg
int3
cmovle
add
mov
dec
sbb
scas
and
push
test
fwait
jo
std
dec
add
jmp
lahf
pop
les
add
shrl
fcomps
ficomps
push
jmp
notb
out
and
mov
fdivr
divl
xchg
inc
pop
scas
push
rcll
mov
dec
sbb
cmc
lea
dec
scas
clc
cmp
mov
fcomi
pop
test
cmp
pop
or
roll
inc
cmp
push
cld
mov
ret
pop
push
sub
add
sarl
and
das
cli
sub
push
mov
imul
mov
insb
ds
adc
ret
rolb
bound
fsubrp
aaa
fbstp
in
mov
mov
add
cmp
scas
or
push
inc
sbb
dec
inc
jl
loope
sti
pushf
nop
lds
lahf
out
add
fmull
add
sbb
dec
dec
gs
add
cmp
or
sub
xchg
mov
icebp
cmp
out
cld
inc
mov
xor
out
roll
in
xor
outsb
divb
adc
test
sub
das
xor
adc
sbb
jns
mov
inc
cs
dec
iret
or
xlat
add
mov
sbb
daa
pop
jl
js
inc
mov
in
in
in
jg
push
sub
add
push
or
mov
mov
jl
sub
iret
add
mov
cltd
retw
mov
mov
sbb
mull
cwtl
mov
js
push
pop
gs
xor
xor
add
mov
fistpll
int3
xchg
mov
add
cmp
add
sub
or
push
xor
aam
fsubs
sahf
out
adc
push
xchg
add
imul
add
pushf
fsts
fcoms
nop
dec
stos
jg
addr16
lret
aad
rcrb
jne
out
mov
mov
add
outsb
pop
push
popa
leave
je
inc
adc
std
mov
mov
in
xchg
or
pop
arpl
dec
fwait
push
or
pop
sbb
cmp
fdivrs
sub
enter
in
jbe
ffree
mov
andl
dec
jge
adc
not
xor
add
cmc
ljmp
aam
imul
mov
popa
add
addb
out
add
jg
fwait
sbb
sbb
test
mov
push
adc
dec
scas
lods
pop
and
jns
add
jnp
hlt
aad
sub
mov
repz
add
outsb
pop
adc
and
cmp
xor
dec
mov
pop
inc
add
xor
mov
or
mov
add
popa
push
lahf
mov
pop
cmp
mov
int
sbb
inc
inc
test
iret
loope
cld
cld
sbb
xor
shrb
repz
pop
jbe
ljmp
aaa
xchg
fs
sub
adc
inc
sub
popf
cld
jo
and
ljmp
add
aaa
loop
outsb
cli
sbbb
inc
aas
or
call
push
add
inc
gs
add
popa
pop
hlt
and
xchg
push
jle
lds
scas
add
loope
ret
cltd
roll
pop
sarb
roll
enter
ret
xor
push
sub
sub
cmp
sti
push
lret
lods
cmc
push
out
movsl
aam
jmp
adc
push
int3
scas
cmp
inc
nop
inc
add
mov
fiaddl
mov
pop
xor
adc
ret
inc
mov
xor
lds
gs
mov
xchg
sahf
jnp
daa
pop
cmpsb
cmp
test
adc
lea
aam
mov
repz
mov
cmp
sub
aam
int3
or
hlt
jmp
sti
cmp
ja
sub
add
push
sbb
test
stos
xchg
add
clc
fsubrs
es
mov
inc
orb
mov
dec
sub
sbb
fucomi
inc
mov
cpuid
cmp
xor
pop
xor
add
sbb
leave
call
out
test
add
sti
shrl
jno
adc
jae
cmp
lret
mov
mov
add
pop
or
inc
add
pop
jnp
nop
sarl
mov
adc
pop
xlat
mov
xor
adc
sarb
pop
pop
stc
push
outsl
ss
inc
push
sbb
cmp
pop
add
inc
nop
leave
add
shlb
or
push
adc
pushf
in
int
xor
fbstp
mov
lahf
cmp
mov
and
inc
dec
jae
insl
jb
xchg
aas
pop
mov
inc
mov
mov
sbb
imul
add
inc
pop
ljmp
add
mov
push
add
repnz
pusha
jb
fildl
adcb
outsb
add
rol
xor
sbb
ss
push
add
adc
in
xor
pop
fs
pop
nop
out
sarl
adc
in
cmp
jns
inc
sub
pushf
push
cmp
mov
adc
cs
adc
aaa
orl
and
cmp
ds
pop
icebp
dec
aad
mov
hlt
sti
pop
scas
int
pop
inc
push
repnz
jp
pusha
add
jmp
orb
sbb
out
scas
inc
add
cltd
mov
pop
mov
add
add
add
pop
xchg
pushf
dec
mov
add
dec
imull
repz
jae
xor
sbbl
loopne
cmp
pop
sub
punpcklbw
xchg
add
fndisi(8087
jg
ret
out
cltd
add
outsb
fisubl
aad
gs
or
add
out
pop
jge
lods
add
inc
imul
dec
and
push
and
xchg
sbb
sub
lahf
mov
js
mov
sbb
cmp
or
scas
jbe
pop
stc
pop
dec
sub
pop
or
add
jle
ljmp
adc
call
pop
aaa
or
add
es
and
stc
xchg
ret
add
inc
inc
sti
cltd
out
inc
push
jnp
add
add
jmp
inc
int
mov
sahf
das
or
and
sbb
pop
scas
sub
rcrb
adc
pushf
insb
call
fldl
add
adc
scas
in
in
push
mov
cmp
or
lods
lcall
call
adc
push
ret
xchg
push
sub
pop
emms
adc
inc
xor
sbb
sub
sub
xor
out
dec
jg
mov
iret
loopne
dec
mov
xchg
adc
arpl
pop
adc
out
and
jg
lods
dec
fistl
adc
pop
or
pop
call
or
aam
jo
rorl
fs
adc
je
in
adc
cld
scas
mov
int
into
ret
or
sbb
push
es
inc
push
xor
adc
cs
fidivl
stc
xor
aaa
int3
add
notl
sbb
adc
aam
sub
jno
pop
sbb
jg
int
and
cmp
sub
cmp
adc
les
jno
inc
aas
mov
js
pop
leave
mov
fldl
sub
dec
adc
scas
push
and
nop
shrb
out
fs
sbb
call
pop
dec
xor
mov
sub
xlat
cltd
jecxz
les
dec
add
cmp
punpcklwd
and
sbb
sub
cwtl
cmp
lock
wrmsr
rcl
dec
ret
xchg
fnstcw
or
pop
mov
cmp
mov
sbb
push
insb
lret
adc
pop
leave
xor
dec
icebp
in
sub
sub
mov
sbb
sub
jl
mov
mov
sub
popa
mov
push
sbb
fwait
cmp
addb
out
in
mov
cmp
push
mov
inc
inc
sbb
xchg
sbb
sbb
int
movsl
mov
adc
das
sub
data16
and
int3
inc
out
shrb
test
negb
mov
and
in
dec
push
lock
shll
je
fadds
sbb
sub
call
daa
std
sbb
pop
in
lcall
adc
pop
inc
dec
sub
mov
sbb
rcll
sbb
aaa
je
mov
and
mov
nop/reserved
jmp
adc
sub
cs
lahf
pushf
sub
and
lods
sbb
insb
pop
and
vmovntps
xchg
sbb
mov
sub
cwtl
les
dec
daa
fisubrl
ret
mov
stc
sbb
jge
jl
xlat
jge
push
dec
into
sbb
sub
mov
mov
sbb
sar
sbb
jnp
insb
out
in
add
inc
ret
push
jb
xchg
and
adc
sbb
jne
or
xchg
int
cmp
add
dec
pop
bnd
out
cmpsl
std
mov
sbb
mov
test
push
push
ficomps
cmp
inc
adc
and
adc
cmp
push
xchg
push
fs
mov
jmp
cmp
pop
adc
neg
lods
adc
aas
sbb
int
jns
xor
addr16
fwait
ss
mov
and
mov
ret
xchg
push
enter
js,pn
or
mov
cmpsl
aam
dec
mov
mov
rorb
test
mov
xchg
mov
dec
in
int
push
jmp
out
int
pop
push
jmp
adc
iret
sub
ucomiss
push
adc
jle
lcall
out
lea
lret
rcrl
in
dec
mov
or
xchg
dec
pop
fucomi
pop
jno,pn
dec
adc
mov
cmp
xor
aaa
xchg
and
mulb
das
dec
xor
jge
and
sbb
push
adcl
push
test
pop
sbb
cwtl
cmp
or
dec
mov
das
movsb
lahf
cwtl
jl
inc
outsb
xor
push
mov
or
inc
mov
pop
cli
sub
cmpsb
xchg
adc
lahf
loopw
lret
cmp
or
dec
dec
or
out
test
cmp
repnz
dec
data16
adc
push
mov
sbb
lods
adc
pop
adc
cmp
push
lcall
insl
cs
xor
sbb
int
out
adc
xor
push
mov
packssdw
cld
call
into
out
cmpsl
sbb
popa
sub
in
inc
das
ljmp
ret
jmp
clc
inc
push
adc
adc
mov
nop
pop
hlt
in
xchg
adc
inc
leave
iret
adc
jl
push
sbb
adc
dec
pop
insb
scas
cmp
mov
add
in
push
in
mov
pop
test
dec
jle
jae
push
mov
inc
insb
gs
xchg
pushf
icebp
pop
jbe
mov
xor
ret
push
inc
adc
mov
push
mov
xor
xor
je
fs
dec
add
lret
xlat
int3
pop
xor
mov
loopne
cwtl
sub
pop
sub
jbe
das
and
pop
fsubr
xor
bound
fsubrp
xchg
in
and
fs
inc
lret
push
xchg
mov
aad
call
push
rolb
inc
and
pop
shrl
pop
scas
lret
aas
mov
aam
mov
push
pop
jecxz
sbb
push
jmp
pop
xor
adc
cmp
shlb
shlb
and
mov
bound
push
and
sbb
out
das
mov
cmp
std
lods
dec
inc
and
mov
push
mov
or
jecxz
cmp
and
adc
sbb
mov
dec
dec
jl
sub
sbb
popf
cmpl
lret
test
in
sbb
xor
sub
push
xchg
inc
cmp
aam
add
or
arpl
and
ret
xchg
lea
addb
and
sub
pop
cld
pop
mov
out
jno
pusha
sbb
cmp
jb
je
sub
std
pop
and
pop
push
xchg
push
mov
add
test
dec
test
add
movsl
lahf
mov
pop
push
mov
jbe
pushf
mov
cmp
sub
pop
xor
push
adc
insl
jb
inc
push
pop
ret
jns
dec
dec
fiaddl
aam
fdivl
push
push
mov
pusha
je
inc
sahf
mov
xchg
int
fs
pop
or
les
pop
and
in
sbb
sbb
inc
je
adc
sub
sbb
cmp
fdivrs
pop
mov
mov
push
das
xor
adc
and
cltd
stos
push
ljmp
cmp
rcrb
sub
dec
scas
mov
push
dec
lcall
rorl
cwtl
popf
out
loop
in
mov
xor
lods
or
push
into
xchg
push
dec
sbb
pop
xor
sub
or
mov
je
pop
mov
cmp
xor
xor
pop
cld
rorl
or
mov
xor
lods
iret
mov
or
sub
subl
xchg
adc
adc
mov
dec
and
and
inc
int
pop
pop
push
xor
rcr
pop
sub
pop
outsl
adc
sub
dec
out
sub
xchg
fsubrs
sub
fdivrp
sub
fisttps
inc
pop
xor
pop
jle
cmp
add
nop
iret
mov
sbb
and
setg
xchg
mov
or
sub
fdivrp
sbb
and
in
movups
pop
jge
sbb
fimuls
push
fdivl
jl
or
push
and
int3
mov
jge
ss
add
lods
xlat
fldl
pop
aaa
lahf
seta
decb
xchg
sbb
in
or
and
ret
ja
sub
or
dec
push
mov
in
jne
sbb
sbb
inc
jae
xor
pusha
je
pushf
and
pop
loopne
cld
pop
aam
je
sub
push
push
cmp
pop
adc
jo
and
into
pushf
fisubrl
sbb
aas
and
dec
faddp
sbb
adc
push
scas
xor
and
mov
jecxz
into
mov
pushf
mov
aas
insb
or
lods
loope
adc
and
icebp
sub
mov
cwtl
mov
and
and
cltd
mov
cld
pusha
movsb
and
aas
pop
insb
fimull
cmp
jo
cmp
push
push
fcoms
ficoms
cwtl
fstpl
mov
pop
adc
scas
sbb
fldcw
mov
push
lock
cmp
outsb
das
sbb
or
mov
cmp
push
fcompl
cmp
xchg
dec
cwtl
add
cmp
outsb
popf
adc
sbb
sbb
push
call
xchg
jecxz
and
xchg
into
lods
or
jb
pusha
sbb
negb
add
sahf
fildll
sbb
test
or
or
sbb
adc
cwtl
ficomps
mov
mov
push
push
test
xor
inc
and
in
sbb
dec
movsb
push
mov
mov
xor
or
int3
leave
in
test
cmp
andps
and
sbb
sub
pop
lods
push
mov
mov
sbb
fsubl
inc
push
mov
jne
popf
pop
jo
js
loop
mov
jbe
out
mov
test
js
fmull
insl
mov
and
repz
jl
inc
adc
cld
sub
insl
negb
or
jl
xor
xchg
test
push
lock
ja
xchg
aad
data16
mov
sar
sbb
or
pushf
jp
cmp
mov
out
ja
rcr
vpsubw
loopne
pop
mov
jp
aad
out
mov
mov
xor
mov
inc
insl
fs
xchg
or
sets
push
mov
xor
sub
cld
pop
js
into
int
xor
rcrl
and
aaa
int
sub
iret
pop
mov
ss
mov
fwait
pop
mov
fsubl
dec
daa
push
mov
fmuls
jecxz
rcr
sub
int3
cmp
js
push
sub
push
pop
cmp
lcall
mov
lahf
xlat
mov
lods
dec
ror
push
js
xor
inc
add
pushf
nop
cld
fidivrl
cmp
xor
cmp
pusha
jl
call
out
jl
dec
int3
xor
pushf
jne
sbb
adc
pop
lret
fs
nop
jl
xor
or
push
dec
ljmp
pop
lret
scas
jecxz
push
xchg
rcll
test
adc
cld
ret
jo
int3
shll
sub
or
xor
inc
ficompl
lods
and
insl
add
push
out
in
adc
add
incb
fmull
xor
dec
enter
dec
jge
fs
dec
aad
pop
ss
dec
push
aam
sar
adc
repnz
cmp
lods
xchg
adc
add
testb
rcrb
adc
daa
lods
xchg
mov
cwtl
in
jns
xor
and
fs
pusha
popf
in
mov
mov
pop
adc
adc
fs
push
lods
and
frstor
jae
push
dec
adc
lods
lods
sub
jae
xchg
mov
sbb
test
sub
lcall
sbb
adc
push
test
aaa
fs
jl
adc
stos
cmp
and
sbb
and
xchg
xor
mov
push
shl
dec
mov
xor
fs
jo
xor
and
push
jl
pop
out
mov
xor
mov
int
lods
or
insb
nop
sbb
xchg
mov
dec
mov
xchg
fs
cwtl
test
push
dec
dec
shlb
adc
adc
pop
and
iret
stc
mov
loopne
or
push
sub
pop
mov
mov
xor
lea
and
push
aad
cld
aaa
lds
ljmp
insb
call
pop
mov
bound
movsb
fldenv
int
nop
popf
popa
jle
popf
sbb
mov
repz
pop
sbb
mov
cmp
cmp
sub
fsubrs
mov
and
add
jecxz
and
push
jl
xchg
outsb
sbb
push
push
xor
pop
test
enter
pop
pop
push
aas
sbb
fimull
cmp
gs
dec
orb
ss
dec
cld
and
mov
xchg
loope
jecxz
dec
pop
or
mov
leave
and
cmp
mov
lret
jl
add
pop
lods
cmp
sbb
add
ss
and
pop
xchg
lods
decl
xchg
test
insl
sub
int3
or
cmp
pop
sub
ss
sub
dec
in
mov
lahf
ljmp
ss
sbb
gs
sbb
mov
and
repnz
push
lods
pushf
cmpsb
dec
iret
negb
popf
movsl
pop
xor
cmp
jae
push
aaa
sbb
into
ja
and
mov
adc
popf
mov
mov
xchg
inc
adc
sahf
lcall
xor
pushf
and
mov
in
in
cmp
pusha
je
adc
jp
cmp
and
xchg
mov
mov
test
push
jp
pop
mov
fisubrs
in
add
int3
negb
cwtl
pusha
lahf
pushf
enter
mov
popf
or
test
iret
mov
gs
scas
in
jns
lds
inc
add
inc
in
je
loope
add
and
add
pop
fisubs
sub
jb
push
push
sub
mov
in
push
std
mov
test
inc
test
mov
push
jge
aas
inc
mov
in
sbb
mov
sub
cmp
js
pushaw
pop
and
xor
mov
cmp
mov
aaa
mov
pop
inc
adc
xor
adc
int3
jb
je
fisubl
xchg
sub
dec
push
xchg
jg
movb
jmp
xchg
sbb
mov
dec
push
or
inc
or
outsb
pop
pop
jno
aad
daa
mov
sbb
mov
mov
push
xchg
in
and
aad
popf
add
dec
pop
push
insl
and
adc
pop
xor
insl
out
lods
push
mov
mov
je
jl
loopne
dec
hlt
sbb
jge
inc
dec
enter
and
pop
je
cmpsl
outsl
lret
adc
push
js
ror
rclb
push
popf
jmp
or
and
cld
mov
insb
sbb
ds
sbb
cmp
outsb
loop
cmpsb
ja
call
insb
jl
pop
adc
test
cmc
mov
mov
pop
movsb
push
test
outsl
jecxz
addr16
sbb
sbb
ja
scas
sub
push
int
sub
jl
add
sbbb
es
mov
xor
cmp
aam
je
pop
je
pop
inc
popf
stos
lahf
ljmp
out
mov
inc
jge
pop
or
int3
mov
jg
dec
hlt
cld
nop
sti
pop
dec
mov
sarb
sarb
int
and
test
push
sbb
mov
ds
int3
lods
fcomip
adc
xor
xor
push
scas
mov
stos
bound
add
push
lods
in
pop
lea
in
cld
sti
xchg
pop
fidivs
xlat
sub
jle
lea
xor
jecxz
sbb
stos
scas
mov
adc
jl
lods
mov
xchg
xor
test
add
dec
jae
rclb
jl
sub
pop
nop
xor
or
jp
aam
insl
jg
arpl
mov
jae
test
ss
adc
inc
jo
aam
in
inc
push
xor
bound
pop
mov
xchg
into
cs
xchg
pop
cmpsl
int
lds
xor
dec
adc
sti
dec
pop
outsb
or
cmp
mov
fisttpll
inc
loopne
leave
insb
lahf
xor
mov
movsb
aam
mov
xor
popf
push
adc
inc
push
cmp
repnz
push
push
out
popw
push
pusha
aad
sahf
dec
aad
js
cld
mov
mov
pushf
dec
enter
fdivl
pop
enter
or
fbld
and
repnz
push
jo
adc
stc
popf
inc
inc
and
pop
pop
jl
out
and
dec
jno
outsb
lahf
pop
lods
jle
add
fistl
fs
inc
sub
adc
mov
sbb
adc
mov
jg
mov
test
ja
jg
pop
mov
xor
sub
adc
out
aam
inc
sub
push
sbb
cltd
nop
enter
cld
subb
jle
mov
pop
sbb
lahf
push
xor
test
push
cltd
sub
mov
and
jl
int
add
insl
or
cmp
loopne
test
push
subb
cmpsl
scas
mov
xlat
fidivrs
js
in
pop
mov
dec
cmp
shrl
mov
mov
mov
pop
sub
js
xor
test
jno
cld
js
aam
sub
sub
cmp
cld
sub
addb
in
mov
int
dec
int
mov
sbb
stos
shlb
cmp
jno
imul
cmpsb
gs
or
pop
pushf
neg
into
jae
dec
xor
movsl
in
dec
into
dec
in
mov
lahf
add
mov
mov
ss
test
sarb
dec
pop
pushf
shrl
jo
in
jo
insl
jl
jo
pop
mov
push
popf
xchg
lea
rcr
movsl
lods
add
jmp
xor
cmp
pop
xchg
movsl
rolb
push
std
out
vandps
test
mov
push
inc
enter
xor
inc
aam
sub
mov
dec
mov
xor
xor
mov
addr16
mov
cld
xor
jle
insl
into
dec
jl
arpl
dec
sti
mov
clc
pushf
nop
addr16
in
movsl
cmp
out
aas
dec
push
cmp
mov
and
cmp
fdivl
in
into
adc
lds
stos
fcoms
mov
and
push
inc
inc
popa
mov
lcall
cmp
xchg
imul
cld
mov
mov
test
bound
sbb
push
sub
xor
fisubrl
push
pop
fcmove
or
movsl
bound
mov
mov
xor
cmp
data16
int3
jl
dec
pop
cmp
sahf
pop
xor
lods
jo
push
stos
and
in
sbb
dec
outsb
push
cmp
pop
sbbl
mov
int3
fldt
xchg
movsl
rclb
xor
cmp
les
cmovbe
xchg
rclb
cmp
dec
jne
inc
fcompl
nop
mov
xor
lahf
loope
call
int3
xchg
in
ljmp
push
cwtl
jo
enter
sbb
and
add
daa
pop
mov
cmp
dec
push
mov
pushf
lods
cld
mov
in
insb
or
not
mov
mov
sti
jnp
mov
cmpsl
popf
pop
and
dec
sub
lods
sbb
and
popf
lahf
data16
sbb
loopne
loop
ja
cmp
testl
mov
int3
fildll
jl
mov
inc
popf
xor
xor
js
cwtl
rolb
dec
mov
hlt
lahf
xor
dec
clc
xlat
xor
inc
sub
icebp
cmp
cmp
int3
nop
add
out
into
das
int
sahf
test
xor
sbbb
mov
xor
push
dec
lods
sbb
arpl
jmp
lods
mov
xchg
sub
lods
push
jae
in
lods
push
or
xchg
jge
push
insl
lods
push
xor
outsl
xor
imul
dec
sbb
cld
jg
xor
outsb
mov
cmp
addr16
jl
shll
xchg
test
sahf
xchg
mov
cld
ds
fistps
dec
dec
add
xor
adc
enter
scas
xor
test
insb
je
mov
stc
xchg
push
les
aas
xor
adc
sbb
mov
mov
adc
sbb
popf
cmp
cmp
add
lret
push
sub
push
fstpl
js
jge
rcrl
cmp
sbb
lods
push
popf
mov
call
gs
in
jle
pop
in
jl
dec
rorl
mov
and
in
inc
xchg
push
cmc
pushf
pushf
sarb
mov
jg
lahf
xchg
stc
xor
cmpsb
aas
rolb
mov
test
push
out
jne
mov
xor
or
sub
cltd
mov
mov
jne
int
or
pop
and
pushf
gs
into
in
adc
lods
test
test
or
insb
or
in
int
enter
adc
jo
dec
insb
fimuls
adc
sub
mov
in
push
jge
imul
iret
jle
jmp
insb
jnp
pop
push
sub
lods
sti
xor
add
sbb
or
cld
jg
inc
js
push
xchg
lea
pop
repnz
das
jge
ret
enter
push
sub
stos
pop
sbb
push
mov
insb
fmulp
lret
dec
cmp
add
push
imull
ficoms
pop
pop
cld
inc
jae
xchg
inc
cmp
and
out
loopne
push
hlt
sub
into
ds
adc
pop
jae
sub
mov
dec
xlat
pop
xchg
cmp
nop
sub
lahf
xor
scas
dec
xor
or
fnstcw
pop
add
push
push
xor
or
xor
jge
dec
repnz
sbb
mov
jge
outsb
push
fcmovnu
jl,pn
push
jl
push
into
insl
test
jb
mov
hlt
mov
iret
adc
popf
push
std
or
ds
cmpsl
es
ds
pop
cmp
sbb
lahf
push
decb
mov
nop
pop
shll
test
sahf
add
mov
and
jmp
test
in
loope
adcb
and
and
idivb
jl
movsl
dec
mov
orb
inc
dec
and
stc
dec
rcr
adc
dec
push
test
ret
sahf
jno
aam
xchg
js
in
sub
hlt
mov
iret
sbb
shl
dec
sbb
mov
ss
orl
scas
pop
movsb
sub
jne
insl
bound
pop
mov
cs
mov
cmp
dec
cmp
insb
sarb
mov
mov
xchg
int
sbb
jne
jnp
lock
mov
sbb
lea
scas
out
orl
into
insl
enter
cmp
push
push
push
cs
imul
lcall
dec
inc
aad
mov
lcall
insb
pop
add
sbb
pop
adc
mov
mov
ret
cmp
rolb
sub
push
aaa
lods
das
fldt
ds
out
bound
mov
insl
test
push
test
lret
sbb
jle
aaa
enter
add
into
pop
mov
push
fmuls
push
push
mov
mov
jg
pop
mov
test
pusha
clc
mov
or
lds
test
shrl
mov
adc
jo
mov
cwtl
popf
xor
sub
sub
insb
dec
push
push
push
out
movsb
test
scas
shlb
cmp
int
daa
and
adc
mov
js
mov
inc
lods
ficoml
jl
xchg
icebp
notb
xchg
inc
sbb
push
ss
out
test
sahf
mov
mov
rorb
xchg
push
push
out
ds
pop
jo
inc
pop
mov
shlb
arpl
imul
mov
dec
lret
dec
jmp
fs
lea
fimuls
loopne
cwtl
xchg
test
and
bound
push
jmp
cmp
xor
rcl
out
mov
fsub
int3
inc
and
lds
enter
ss
int
lds
sub
jp
xor
push
int3
pop
xor
shlb
fmul
sbb
pop
arpl
xchg
clc
fcoms
pop
lds
out
pop
je
pushf
leave
cmp
mov
adc
mov
mov
aas
cmpb
fstpl
mov
pop
or
xchg
and
lock
hlt
mov
notb
movl
pop
mov
pop
or
pop
xchg
gs
out
jge
int
lods
xlat
mov
xchg
and
cwtl
sahf
aaa
imul
stos
xor
pop
test
cmp
xchg
repnz
push
ficoml
and
ds
in
jns
pop
mov
insl
mov
and
sahf
cmc
or
out
push
push
push
cmp
inc
scas
pushf
inc
add
adc
sbb
or
push
mov
jbe
fs
loope
mov
out
push
push
mov
lods
fs
pushf
leave
push
fnstsw
test
aas
fdivs
test
xor
sbb
mov
pushf
mov
cld
scas
fnstsw
push
popf
enter
dec
test
imul
jl
bound
push
in
mov
mov
cmp
xchg
das
int3
xchg
int
sub
shr
xor
aaa
push
mov
mov
cmp
inc
add
push
les
add
daa
aad
fcomps
mov
pushf
adc
insb
cmp
mov
stos
mov
sti
sar
cmp
push
or
pop
popa
fdivrl
aas
int
test
insl
out
fdivl
pushf
sub
inc
push
mov
out
sub
stos
jmp
mov
out
pop
mov
xchg
sbb
dec
xor
popf
dec
scas
aaa
cmpsl
jne
in
cmp
adc
inc
int3
sub
or
icebp
pop
push
dec
pushf
cmp
cmp
mov
repnz
cmp
lock
push
add
les
or
push
jge
insl
lock
das
insl
pop
pop
shll
sub
ficoms
shr
and
dec
mov
adc
push
fidivrs
pop
loop
aas
jl
or
mov
dec
fdivs
push
pop
xchg
rclb
nop
mov
fstl
mov
push
pushf
jle
int3
fcmovne
out
pop
mov
test
dec
nop
mov
sbb
cli
hlt
in
addr16
or
lods
inc
mov
xchg
ror
xor
loopne
or
sub
sbb
dec
inc
sub
fistpll
mov
loop
aas
mov
pop
mov
dec
inc
or
dec
aam
rcrl
and
test
pop
pop
jne
fldl
push
cmp
xor
popf
insl
lret
xor
cmc
int3
mov
enter
sub
nop
and
cmp
test
lahf
jle
push
fldl
fmuls
sbb
push
fsubs
xor
dec
sub
loop
rorb
loop
dec
inc
adc
or
mov
pop
cmp
pop
xor
and
cwtl
scas
enter
jns
push
mov
mov
lcall
test
push
sub
xor
int
push
cmpsb
xchg
push
lahf
popa
stos
minps
pop
pop
lahf
fidivs
xor
lahf
adc
xchg
jne
das
ret
popa
pop
popf
lahf
scas
xor
call
jge,pn
jl
pop
fs
fisttpl
lods
mov
and
mov
hlt
lea
pop
inc
pop
scas
and
cmp
popa
xor
cmp
in
mov
pop
mov
pop
jle
faddl
sub
rolb
dec
mov
inc
js
mov
xor
leave
rolb
shr
test
add
cli
shll
pop
in
sub
fs
lcall
mov
sub
mov
pushf
cmpsb
dec
xor
sti
xchg
stos
sbb
call
fcomip
push
sub
mov
rcr
aaa
jle
pop
sub
lea
and
loop
int3
outsl
loopne
xchg
jecxz
sub
or
rol
pop
test
fcompl
scas
jbe
xor
fs
push
or
loope
cmpsb
das
xlat
movsb
stos
cmp
iret
push
push
pop
cld
sub
mov
or
adc
mov
rol
ljmp
dec
ss
push
xchg
cmp
push
int
inc
lods
sub
gs
mov
add
push
std
add
out
jmp
lock
adc
rorb
cmp
cmp
xchg
iret
cmc
push
xor
pop
cmpb
xor
or
jns
lods
push
or
fisubrs
nop
push
frstor
lret
aad
mov
mov
in
into
in
mov
sub
aas
and
out
aas
mov
xchg
and
cmp
sbb
cmp
in
and
mov
daa
add
or
test
pop
mov
imul
mov
mov
pop
pop
movsb
sub
shr
lods
lcall
loopne
test
or
add
adc
and
test
add
cmp
jbe
sbb
mov
sub
nop
lahf
es
and
jno
jg
dec
sbb
jo
sbb
lods
push
insl
lcall
les
push
pop
xor
or
test
inc
sub
xor
out
sub
xchg
xor
xchg
cltd
lds
mov
mov
pop
mov
sbb
push
push
gs
add
mov
push
xor
scas
jae
inc
mov
xor
pop
sbb
dec
jecxz
les
push
xor
cmpsb
and
add
and
rorl
cld
out
fisttpll
scas
aas
xchg
lods
jl
lods
test
xor
lods
movsb
pop
gs
jg
jno
fiadds
mov
jg
sbb
and
out
aas
out
jp
jne
xor
jmp
test
cmp
jecxz
loop
in
and
or
inc
cltd
mov
and
test
addr16
ret
in
fs
iret
push
xchg
push
cmp
xchg
adc
js
mov
in
sar
xchg
adc
out
jne
fdivrs
aas
and
mov
into
cld
pop
test
lahf
outsb
jne
pop
pop
ret
ljmp
lea
outsl
adc
mov
xor
popf
xchg
lea
dec
jp
mov
test
js
mov
ficoms
pop
mov
cltd
xor
ret
cmpsb
dec
push
fnstenv
pop
push
mov
lea
cwtl
stos
lahf
add
mov
sbb
cmp
lods
sub
sbb
leave
shrb
xor
mov
pop
mov
push
mov
xor
sbb
xchg
pushf
mov
cld
mov
xchg
loopne
jb
dec
pop
adc
icebp
stos
movsl
jb
pop
or
in
xorb
ss
test
je
test
or
sbb
push
js
jle
xor
push
inc
cmp
cmp
push
ljmp
clc
std
dec
stos
mov
or
inc
sub
pop
ds
idivl
fldt
sbb
cld
adc
negl
dec
mov
jle
fdivs
pop
sub
iret
sbb
testl
sbb
enter
shrl
and
mov
lock
fcompl
dec
popf
mov
sbb
in
cld
test
push
out
inc
out
mov
xor
ds
mov
hlt
or
pop
out
mov
cmp
cs
cmp
pop
push
and
ss
xchg
sub
insb
jmp
ljmp
xor
mov
jno
fsub
mov
mov
pop
mov
sbb
fistpll
jns
loopne
dec
push
mov
adc
adc
add
ss
fildl
movsb
mov
dec
mov
loop
ret
sub
jmp
mov
jecxz
cmpsl
js
pop
in
dec
inc
addps
and
int3
nop
mov
lahf
sbb
and
cld
sbb
or
and
leave
dec
mov
adc
test
sub
popf
jl
lahf
xor
das
fs
out
inc
pop
fldt
nop
fsubrs
sti
loopne
out
mov
push
mov
sahf
cmp
insl
jg
scas
sub
inc
fmull
push
das
rcrb
loop
ds
mov
shll
cmp
das
mov
rcrl
dec
mov
xchg
mov
test
insb
in
test
popf
lock
popf
les
and
aam
pushf
shrl
xor
mov
data16
out
push
xchg
lock
and
test
out
sar
fs
test
or
int3
and
push
and
test
nop
mov
loope
movsl
cmp
mov
cld
lods
sbbl
add
popa
and
ljmp
mov
mov
lahf
popf
mov
out
popf
mov
and
xchg
lcall
fs
adc
loop
mov
stos
lock
sbb
je
arpl
dec
jg
pop
or
mov
push
imul
aas
test
mov
dec
lahf
xchg
dec
push
sub
xchg
leave
sbb
sarb
xor
inc
adc
sub
icebp
pushf
jne
sub
mov
lds
inc
pop
sarb
and
or
mov
and
ss
or
stc
cmp
dec
dec
dec
push
andb
call
mov
in
push
test
mov
clc
into
jno
jge
sti
and
cs
mov
mov
shrb
shlb
jae
and
jo
insl
test
ja
mov
pop
cmp
outsl
lods
adc
mov
lods
in
shlb
lahf
bound
and
jl
roll
dec
mov
enter
jl
scas
adc
loop
adc
mov
pop
mov
enter
jmp
mov
in
in
scas
add
and
cs
fucomi
mov
sub
test
int3
sub
mov
and
nop
sub
insb
push
loop
mov
pop
pop
dec
mov
pusha
jl
xor
mov
jge
cmpsb
mov
bound
ja
add
dec
xchg
xor
int
in
xor
int
js
call
push
in
test
pop
dec
adc
in
fistps
lds
jne
sub
lea
xchg
and
xor
add
jl
andb
cmp
pop
xchg
sbb
scas
adc
cmp
sub
cmp
ljmp
cld
das
out
jbe
sub
enter
int
aaa
sbb
ss
ljmp
lods
adc
mov
xlat
jle
out
out
jns
pop
push
push
pop
push
pop
mov
mov
pop
scas
in
push
and
pusha
and
in
or
js
xor
pop
insl
dec
jge
cld
shll
push
sbb
imul
mov
test
stos
jl
xchg
push
xchg
dec
pushf
lea
daa
sbb
call
in
enter
sahf
fistpl
mov
lds
and
cld
jl
aam
das
fistps
test
cld
insb
cmp
adc
push
push
mov
aad
aaa
int3
mov
sub
pop
movw
sbb
mov
ljmp
mov
frstor
fidivs
int3
jl
mov
add
insb
adc
ds
in
dec
push
orb
xor
xor
js
mov
adcb
mov
outsl
addl
cld
push
add
insb
push
or
sbb
insb
push
or
insb
push
adc
and
insb
push
adc
insb
push
sbb
sub
insb
push
sbb
sbb
icebp
xor
sub
inc
ret
mov
into
icebp
fsubrs
lret
inc
push
out
insb
sarb
mov
lock
cmp
popf
inc
aad
icebp
sub
and
push
pusha
sbb
je
call
jmp
sbb
jp
sbb
or
popf
or
pop
mov
xor
or
sti
push
lds
aas
jb
mov
insb
lea
adc
cld
call
xchg
loopne
movsb
pop
nop
xor
adc
js
jge
mov
test
shlb
cmp
mov
sub
jecxz
arpl
pop
andl
jl
push
push
xor
lds
and
mov
lock
rcr
xchg
out
sub
inc
test
int3
mov
inc
or
cmp
repz
jno
inc
loope
lods
or
bound
push
xor
in
jl
inc
xchg
lahf
insb
mov
sub
cli
and
sub
les
push
mov
push
xchg
lods
push
cltd
out
outsl
push
push
test
cmp
xor
cmp
mov
popf
and
cmp
inc
jl
subb
push
jbe
nop
aas
icebp
jge
cmp
das
sbb
fisubrs
insl
mov
xlat
imul
movsl
lock
mov
aam
js
inc
adc
aam
adc
and
js
adc
xor
mov
push
sub
fxch
pop
int
sub
xchg
pop
inc
lahf
in
call
cmp
iret
jo
arpl
jmp
shlb
out
lahf
enter
lods
repz
push
jno
insb
adc
mov
or
xchg
out
repz
xchg
inc
mov
xchg
cmp
sub
ret
insb
push
jp
scas
pushf
sbb
mov
lahf
rcrb
jmp
mov
xor
sbb
test
push
mov
lds
iret
inc
out
pop
inc
mov
xor
push
out
in
ret
xchg
and
sarb
cs
push
pop
pop
push
shr
lds
in
outsb
xor
push
rcl
cmp
sbb
dec
adcl
scas
movsl
xchg
arpl
shrl
cmp
add
fnsave
inc
pushf
test
jno
cmp
pop
cs
stos
xor
mov
into
pop
jne
lods
mov
mov
or
daa
adc
insb
mov
cmp
imul
sbb
push
and
insb
jae
push
in
or
sbb
lret
leave
add
push
add
push
pop
sbb
nop
ljmp
mov
adc
rcrl
sub
cld
les
cld
push
out
push
insl
xor
xor
data16
shll
mov
mov
sub
popf
sar
xchg
clc
test
sbb
cld
pop
push
fs
lret
pop
mov
in
scas
popf
xchg
or
outsl
sbb
mov
ret
xchg
sbb
test
and
mov
test
mov
push
js
push
dec
adc
int3
repz
pop
aas
cmp
sbb
pop
jl
shlb
xchg
jecxz
cmp
sub
fistpll
cmp
push
sub
scas
pop
add
jge
sub
enter
and
mov
adc
dec
sbb
mov
xchg
outsl
out
push
mov
and
xor
mov
xchg
jns
fisubs
lahf
jmp
xchg
sbb
fistps
mov
lock
es
lea
ja
sub
dec
pop
cs
and
fsubrl
fnsetpm(287
mov
dec
xchg
ret
sti
mov
and
rolb
pop
test
dec
mov
or
nop
xchg
push
jbe
xchg
test
mov
sub
push
ret
lods
ja,pn
mov
sub
lahf
enter
lods
pop
pop
xor
and
aad
stos
jo
dec
aas
sub
daa
int
enter
jmp
fmull
and
stos
adc
push
jns
nop
sbb
subb
roll
lods
inc
sarb
push
add
jl
lods
and
sbb
fildll
inc
dec
mulb
push
and
shr
xchg
lea
adc
xchg
push
popf
dec
jae
div
shrl
adcb
adc
or
mov
jg
push
adc
call
movsl
jecxz
mov
aad
aam
or
pop
add
pop
xor
jl
jl
inc
mov
adc
aas
and
pop
es
xchg
cmp
push
clc
mov
in
rorl
mov
pop
pop
scas
mov
add
or
adc
aas
add
xchg
nop
fwait
clc
movsb
mov
cmp
xor
lods
stos
insl
xor
or
xor
or
xor
cmp
inc
dec
xor
lret
js
push
mov
jns
jl
adcl
mov
add
sub
lahf
pop
dec
add
test
cmp
daa
daa
fcoml
cmc
cmp
xchg
inc
mov
xchg
dec
mov
sub
outsl
test
push
jp
push
mov
mov
inc
xchg
inc
dec
cmovo
adc
fnsave
jmp
fmull
lds
push
lods
cli
shl
fistps
mov
pop
mov
scas
sbb
int
ja
lahf
test
test
repz
out
inc
add
push
fs
lcall
fs
mov
dec
mov
cld
lcall
dec
mov
mov
call
ret
in
jb
pushf
adc
and
int
mov
push
pop
cld
pop
cmc
repz
in
in
pop
js
scas
sub
inc
dec
lods
xchg
adc
cmp
adc
mov
lea
jle
test
sbb
sub
jmp
mov
lcall
cltd
aam
inc
fs
pop
push
xchg
xlat
sub
enter
jmp
loop
leave
and
pop
dec
in
dec
loopne
cwtl
push
jnp
push
push
mov
mov
cmp
roll
cmp
pop
mov
cmp
in
pusha
fdiv
hlt
ds
jle
pop
mov
rol
jno
cmp
push
sub
inc
test
cld
int3
mov
mov
mov
je
lret
cmp
es
lea
mov
popa
push
lods
in
cltd
movb
stos
cmp
mov
xor
inc
fstpl
popf
mov
xchg
in
sbb
int
sbb
mull
jmp
nop
popa
push
mov
lock
adc
jecxz
or
inc
cmp
test
sbb
fdivp
and
pop
popf
cmpsb
nop
ss
addr16
test
cli
mov
icebp
add
fildll
xor
and
mov
or
les
ja
dec
adc
fildl
dec
jle
cs
push
leave
jl
imul
adc
dec
idivl
or
or
adc
xorb
pop
inc
sbb
jg
lods
push
or
sub
and
sti
movsl
imul
lods
outsb
dec
lds
shll
sub
iret
jbe
sarl
and
fwait
shlb
sbb
jge
xor
add
scas
or
pushl
mov
mov
lds
int
fidivrl
push
adc
pusha
xlat
test
incl
mov
dec
cmp
xor
and
in
sahf
test
pop
push
jmp
mov
outsl
xor
xor
xor
mov
stos
sbb
pop
xchg
fsubl
and
mov
clc
bound
loopne
mov
enter
nop
jbe
mov
inc
inc
fldl
sub
lock
jl
inc
sub
idiv
or
inc
jge
cmp
mov
mov
icebp
pop
incl
cmpsb
cld
andl
cld
out
ja
insb
hlt
test
scas
or
pop
out
or
mov
scas
mov
int3
cmp
mov
cmp
cmp
jl
dec
adc
mov
cwtl
jl
in
aam
adc
cmp
cs
sub
pop
sbb
mov
stos
pop
fs
adc
or
push
mov
xchg
popf
add
sbb
cld
cmp
lea
fucomp
test
shl
jge
pushf
out
loop
negb
pop
cwtl
and
lahf
in
call
aas
out
sub
xchg
push
dec
jecxz
xchg
fnstenv
cld
and
mov
cmpb
add
cmp
xchg
data16
adc
dec
jb
enter
xchg
mov
popf
mov
or
add
sub
fcoml
fildll
cmp
mov
cltd
adc
xor
add
cwtl
popf
pop
mov
dec
fildll
inc
push
test
jo
pop
les
sbb
push
jl
lea
mov
cld
out
xor
xor
jo
adcb
add
sub
roll
push
push
jl
jecxz
xor
xchg
mov
xor
inc
mov
cmpsb
adc
xchg
inc
xchg
in
sub
inc
mov
enter
dec
mov
fnstcw
xor
jg
mov
rcr
mov
pop
ret
movsl
inc
mov
in
pop
insl
push
xchg
xor
sbb
lahf
aad
stos
push
sub
shrb
cltd
scas
fstl
out
arpl
pop
sub
and
xchg
mov
std
ss
lods
sbb
mov
mov
fsubrl
pop
adc
sbb
dec
inc
xchg
jl
data16
inc
xchg
lahf
insb
mov
sub
push
cmp
sub
mov
mov
xor
and
sub
xchg
enter
pop
dec
lods
fs
mov
popf
lods
insl
in
add
enter
lods
enter
nop
pop
gs
mov
mov
xchg
push
mov
xor
sti
and
jl
adc
inc
add
iret
sbb
orl
insl
xor
xchg
jge
dec
push
scas
shrl
mov
and
dec
pop
xchg
hlt
jb
mov
out
sbb
enter
sbb
insl
lds
or
pop
push
pushf
sbb
sbb
adc
sbb
pop
lahf
les
inc
cld
xchg
jecxz
jle
adc
popf
fbld
sub
imul
std
sbb
mov
fistpll
xor
jmp
cmp
pop
inc
divl
decb
popa
sbb
movsl
mov
push
popf
scas
mov
xchg
pop
mov
movsl
testb
sbb
das
movsl
pop
pop
adc
add
push
push
ror
dec
add
aad
jle
xor
mov
xchg
test
adc
xor
dec
and
gs
adc
aam
jo
cs
push
lcall
fdivr
jle
dec
jl
faddl
or
lcall
sahf
movl
cmp
insl
adc
icebp
ds
or
mov
add
or
push
pop
xchg
cmp
mov
mov
les
xchg
jle
jb
aam
hlt
adcl
ss
sahf
shrl
sub
adc
es
out
lret
xlat
outsb
cmpl
dec
jb
outsb
inc
jp
mov
insb
push
pop
insb
xor
sub
mov
pop
inc
pop
fidivs
pop
fildll
popf
push
dec
shlb
fwait
cmp
lods
sahf
sti
push
popf
mov
out
sarb
xchg
inc
nop
and
dec
and
stos
xor
sbb
nop
dec
push
in
and
cmp
leave
pop
sbb
lcall
lock
inc
adc
sbb
sub
lahf
dec
aad
insb
mov
jb
lahf
jge
add
das
sbb
rcrb
mov
clc
fwait
icebp
fmul
mov
xchg
xor
inc
adc
mov
pop
les
int3
mov
fcoml
aas
xchg
pop
and
dec
out
and
cmp
xchg
adc
or
test
mov
icebp
fs
adc
je
mov
jle
test
lds
bound
cmp
sbb
lods
jb
sti
push
lds
movsb
fs
aad
gs
iret
xchg
aas
test
or
pop
nop
sub
nop
mov
push
loop
loope
popf
lcall
mov
sti
cld
lods
test
jl
xor
lcall
cmp
adc
shl
sub
gs
popa
mov
scas
sbb
xchg
pushf
inc
xorb
or
sub
mov
mov
cmp
shlb
test
inc
xor
xchg
aas
daa
outsb
les
gs
dec
mov
pop
push
jae
mov
scas
pop
mov
push
stos
leave
dec
mov
cltd
mov
pop
xor
pop
pop
add
lahf
add
xor
enter
pop
mov
sbb
out
loope
pop
mov
pop
leave
jge
mov
scas
xchg
nop
fs
lds
inc
sub
dec
dec
sub
lods
flds
dec
jl
mov
sub
dec
arpl
mov
dec
dec
jno
mov
lahf
mov
es
and
test
push
jle
int3
push
and
jbe
loop
adc
pop
shll
out
and
rclb
lods
das
xor
insb
pop
loop
dec
rclb
sbb
stc
inc
adc
jmp
xor
mov
mov
adc
cmc
cmc
fdivl
lahf
mov
shll
mov
jnp
pop
sbb
insl
jns
cmp
fstpt
int
mov
dec
adc
sarl
les
jp
into
mov
pushf
ljmp
jp
enter
ret
jno
clc
shll
cmpsl
loopne
dec
fwait
pop
and
test
pop
inc
jecxz
ds
dec
cwtl
cld
or
pop
mov
adc
mov
dec
movsb
or
sbb
mov
or
fisttpl
mov
js
in
and
sbb
test
mov
pop
andl
std
mov
aam
xor
hlt
mov
cwtl
enter
stc
test
inc
mov
adc
or
sbb
sbb
add
dec
std
or
dec
sub
push
shrl
push
sbb
add
pop
sub
cld
cmp
popa
out
cmp
lods
adc
mov
adc
in
pop
jne
jg
sbb
xchg
js
lds
ja
jge
pop
arpl
mov
mov
pushf
test
adc
xchg
adc
adc
sbb
mov
jne,pn
adc
push
and
cmc
leave
outsw
sbb
inc
jns
fldenv
xchg
mov
xor
clc
jbe
adc
jno
lds
pop
int
xor
or
gs
push
fdivrs
inc
roll
xchg
push
mov
adc
mov
push
mov
push
es
push
daa
jge
sub
mov
int
cltd
or
in
jl
mov
inc
adc
push
test
fwait
xchg
pushf
ret
dec
cmp
jo
rorb
sub
inc
sbb
dec
in
xor
push
addr16
mov
add
outsl
call
data16
xor
hlt
fisubs
fiadds
adc
pop
or
sti
jle
ret
mov
pop
fsubrl
cmp
repz
addr16
sbb
cld
mov
xor
adc
sbb
jl
outsb
ja
lods
inc
adc
mov
and
sub
xchg
test
mov
stos
in
sub
adc
mov
out
loop
jmp
inc
pop
mov
sbb
cmc
sub
outsb
mulps
fs
stc
sbb
std
sub
adc
js
add
lsl
mov
cmp
scas
fnstsw
sbb
jnp
xor
ja
ljmp
mov
leave
cwtl
mov
stos
dec
jle
rcrl
push
int
sarl
fdivl
fldcw
mov
nop
or
mov
inc
fdivrl
outsl
call
jne
out
jnp
sarb
xchg
fildll
cmp
test
push
mov
dec
fbld
jge
rorl
xchg
pop
sbb
and
adc
dec
mov
jp
mov
cld
addr16
sahf
push
pop
dec
out
fidivs
and
xor
add
nop
sub
push
test
pop
mov
imul
jo
sub
push
enter
inc
adc
nop
dec
push
test
xor
jg
je
pushf
or
xor
loopne
dec
sbb
push
inc
dec
inc
out
sub
sub
sbb
mov
pop
xchg
bound
add
mov
das
pop
ja
and
lods
pop
sbb
cld
test
in
pop
xchg
mov
aam
adc
mov
fs
rcrl
pop
ljmp
push
sub
xchg
lahf
pop
leave
nop
lods
add
int
call
xchg
out
mov
mov
push
adc
pop
es
xchg
and
push
shlb
fdivp
fs
das
insl
adc
adc
inc
dec
repz
addr16
xchg
cmp
push
les
cmp
sbb
int3
cltd
sti
cmp
inc
add
sub
jl
mov
cmpsb
les
cmp
inc
das
rcrb
and
into
dec
add
shlb
mov
mov
leave
hlt
add
mov
xor
push
addl
into
and
fmuls
lods
movsl
and
outsl
xlat
mov
fcompl
push
xchg
jo
cmp
or
or
adc
dec
notl
stos
sub
in
add
aas
mull
mov
jge
lods
push
and
dec
inc
das
icebp
pop
sbb
push
push
cmp
and
dec
pusha
das
arpl
rclb
xrelease
call
in
jo
xor
lock
dec
fdivp
dec
lods
push
into
push
mov
in
lds
shrb
or
add
xor
jbe
mov
scas
pop
add
sbb
int
cwtl
fiadds
sbb
inc
movsb
dec
add
pushf
stos
and
mov
ds
mov
dec
pushf
lcall
add
pushf
xor
cmp
test
pop
fstpt
cmp
dec
mov
xor
out
movsl
test
and
popf
cmovle
mov
mov
push
popa
popf
icebp
adc
mul
xchg
xor
cli
fdivrs
mov
add
mov
sahf
xor
or
ja,pn
mov
or
cmp
ret
fcoml
fs
das
mov
sbb
fs
mov
push
fistl
jl
out
lods
pushf
shrb
ljmp
push
jne
mov
mov
adc
dec
mov
iret
xchg
or
cvtpi2ps
mov
mov
mov
mov
dec
fisubs
mov
fmull
fmul
in
out
mov
cld
cmp
adc
dec
loopne
sbb
ljmp
and
pop
shll
inc
int
cmp
iret
ds
dec
add
xlat
test
loop
inc
add
das
movsl
push
sarb
xor
jp
ret
nop
test
js
and
cmp
dec
fidivs
mov
and
imul
sub
mov
fs
mov
mov
add
in
fwait
sti
test
popa
inc
sbb
mov
xchg
in
inc
int
lods
lret
push
cmp
lods
jns
inc
ds
jnp
test
ret
dec
xor
hlt
fadds
std
mov
frstor
mov
push
dec
in
scas
mov
insb
xor
loope
les
pop
shrb
pop
incb
mov
dec
mov
popf
xor
test
xor
cld
lret
pop
lret
jno
jge
push
jbe
mov
jne
jle
rorb
mov
iret
dec
dec
mov
cld
dec
mov
subl
test
mov
adc
je
in
lret
mov
adc
and
pop
push
rorb
sbb
mov
mov
je
pushf
pop
dec
jge
mov
sbb
movsl
sub
pop
in
adc
mov
mov
je
int3
int3
mov
icebp
or
test
or
sbb
push
jl
lcall
pushf
cmp
and
xchg
xorl
or
push
sub
pop
adc
pop
nop
sbb
mov
sub
cltd
int3
sub
insl
adc
loop
lock
add
jne
int
or
aas
int
js
outsb
sti
mov
inc
ja
jmp
je
clc
sbb
and
or
imul
std
das
cmp
test
mov
sub
and
outsb
shrl
jne
jge
popa
rclb
mov
add
into
sar
sbb
lock
xor
pop
loop
cmpsb
loope
stos
or
push
push
mov
mov
pop
leave
or
sbb
jecxz
cmp
les
mov
sub
leave
popa
test
cmp
jbe
sahf
popa
sub
mov
les
jb
push
into
cmpsb
adc
fstl
jg
adcl
aad
mov
cmp
ds
mov
pop
sub
stos
xor
mov
fbstp
pop
mov
and
pcmpeqb
mov
pop
adc
push
lods
adc
pop
pop
int3
mov
sub
sub
add
cmp
les
cmp
dec
sbb
xor
shlb
mov
imull
cmp
jle
outsb
int
mov
and
sahf
push
dec
inc
xor
mov
inc
adc
sti
insb
push
inc
scas
das
cmp
xor
push
test
sub
inc
push
mov
sbb
je
movsb
jns
push
xchg
cmp
push
dec
shrl
jp
dec
xor
dec
cmp
mov
sbb
mov
lea
xor
or
jl
into
in
cs
bound
insb
insb
inc
mov
pop
test
pop
cli
pushf
push
pop
iret
sub
ds
insb
ss
jnp
push
fmuls
je
cmp
cmp
push
ljmp
push
fdivrp
sub
popa
sahf
stc
aaa
in
cmp
push
out
or
cltd
sbb
jbe
mov
insl
out
lock
lods
inc
fsubrl
clc
cmpsl
sbb
lret
es
fs
popf
fsts
mov
xchg
das
fnstcw
icebp
hlt
cmp
add
or
xchg
imul
sub
test
sbb
stos
shll
stos
enter
sbb
cmp
and
or
jle
mov
mov
push
adc
xchg
or
fmull
stos
mov
pop
rolb
repz
push
mov
mov
cltd
mov
clc
popf
mov
cmpsb
lods
mov
sahf
inc
dec
rorb
out
stos
xchg
les
shr
sbb
sti
mov
daa
imul
lock
push
sbb
adc
das
andl
scas
int3
pop
repnz
pop
mov
jo
pop
sub
push
and
and
sbb
jo
push
jge
ds
in
mov
int3
sbb
scas
outsb
inc
sbb
outsl
mov
lea
aas
dec
cmp
scas
das
jo
push
cs
int3
cs
and
aas
lods
jo
inc
sbb
cmc
adc
fucom
aad
pop
imul
dec
xchg
mov
inc
inc
adc
jmp
popa
jecxz
rorl
in
push
cmp
mov
jo
insb
popf
pop
sub
aas
subb
xor
cmp
inc
adc
sbb
insb
mov
jg
mov
int
in
pop
xor
inc
add
pop
xchg
out
stc
and
mov
adc
scas
lahf
cs
leave
cmp
mov
mov
pop
mov
xchg
into
adc
dec
hlt
mov
scas
push
fs
cwtl
jno
jecxz
cld
leave
jne
sub
leave
push
push
xchg
mov
xor
cld
jno
je
pop
pop
fiadds
cld
fisubl
aas
pop
fists
mov
fcompl
scas
push
sbbb
pop
pop
test
lods
je
mov
mov
dec
lods
fwait
lds
mov
xchg
mov
aas
xor
es
js
subb
jnp
push
sbb
aas
lds
push
ret
adc
repz
pusha
mov
add
dec
and
mov
mov
in
pop
in
mov
and
bound
bound
jge
mov
cmpsb
stos
jnp
je
lock
leave
popa
test
pop
push
lea
sbb
scas
sbb
dec
aaa
jg
das
adc
sub
test
adc
stc
push
sbb
mov
pop
shlb
in
jge
inc
pop
mov
pop
in
jno
sbb
shlb
jnp
test
adc
insb
in
fs
xchg
inc
adc
mov
in
adc
inc
mov
cltd
xchg
fisubl
jae
cmc
jne
das
scas
mov
js
and
stos
mov
inc
bound
ds
dec
mov
jp
xlat
movsl
inc
test
or
test
dec
pop
stos
sub
rorl
lret
pop
dec
mov
adc
push
jmp
jmp
jle
mov
pop
xor
insb
dec
sbb
xchg
cmp
jge
xchg
lea
mov
push
mov
mov
icebp
js
loopne
dec
jl
out
xor
sub
mov
xor
dec
loopne
gs
pop
or
fdivl
jno
mov
push
pop
ds
in
push
inc
lret
das
xor
push
insb
fsubp
lret
xchg
pop
pop
sbb
aam
lods
imul
mov
xchg
test
into
jns
cmovns
push
shlb
in
shrl
dec
pop
ret
outsb
mov
cmp
pop
or
rclb
adc
out
and
int3
int
cmp
jl,pt
loopne
add
xchg
je
loopne
dec
adc
fdivrl
xchg
sbb
lret
std
jecxz
jl
in
or
cs
mov
xchg
in
sub
cmp
dec
in
jmp
pusha
adc
imul
mov
jmp
loop
movsb
mov
enter
outsl
into
cld
push
cwtl
adc
in
call
out
mov
imul
sub
inc
in
stos
icebp
pop
mov
loope
and
das
ret
mov
dec
mov
aaa
sub
ss
bound
mov
or
inc
mov
adc
xor
fstpt
shlb
jo
jl
push
push
cmpsb
push
mov
push
aas
in
test
out
filds
cmp
cld
mov
push
sub
lahf
mov
sti
lret
mov
shll
and
fstpl
jo
jo
cld
jp
in
xchg
xor
xchg
mov
loopne
fisttpl
loop
test
add
or
inc
push
or
jbe
dec
xchg
jbe
cmpl
mov
outsl
dec
loop
push
sbb
cmp
sbb
xchg
dec
pop
inc
js
test
and
and
push
mov
sahf
ljmp
ret
and
mov
mov
popf
stos
lds
cmp
icebp
ljmp
ss
data16
xlat
mov
and
jae
gs
cmp
bound
and
jne
stos
mov
or
jg
cmp
mov
mov
inc
nop
fs
dec
insb
pop
loop
ret
les
sub
fnstcw
popf
in
mov
sub
push
push
fbld
cmc
stos
lahf
cs
scas
outsb
jae
jne
mov
inc
and
xchg
mov
lods
sub
mov
loop
pop
add
mov
sub
mov
int
loop
popf
xor
dec
in
cmp
test
dec
mov
push
sahf
test
jge
sub
adc
aam
or
inc
xlat
sbb
sub
jmp
js
cmp
and
adc
sbb
clc
das
and
popf
nop
jno
or
inc
xlat
sub
int3
nop
jns
addb
fstpl
sub
cld
data16
dec
aas
sbb
sbb
xchg
mov
sbb
enter
push
or
xchg
sub
nop
stc
mov
push
cmpsb
jge
cs
mov
test
dec
xchg
ljmp
cmp
xchg
sub
sbb
xchg
pushf
lock
insb
int
pop
push
mov
fstps
loopne
mov
rorl
cwtl
dec
outsb
dec
cmp
sub
in
imul
push
lods
outsb
inc
lahf
or
push
mov
mov
mov
int
xor
repz
dec
push
out
mov
sbb
jg
jno
sub
jns
xchg
xor
sbb
jl
lret
nop
cmp
pushf
loopne
push
int3
cmp
lret
xchg
dec
fsubl
dec
inc
cmpsl
adc
or
jge
jle
dec
add
lods
cmp
push
cmp
xor
mov
sahf
fists
iret
mov
mov
cmp
scas
adc
mov
leave
repnz
xor
mov
movsl
lock
dec
mov
mov
mov
imul
insl
dec
sbb
mov
enter
pop
push
pop
cmp
scas
and
cmpb
mov
push
je
aam
add
je
cmpsl
sar
jl
push
sbb
mov
and
sti
xchg
loope
int
inc
and
cmp
cmp
imul
mov
mov
icebp
mov
loopne
push
mov
lds
cmpsb
pushf
sbb
adc
iret
mov
stc
fs
dec
stos
enter
jge
push
ficoms
enter
inc
sarb
push
push
xchg
scas
or
jne
jno
mov
out
cs
mov
cmc
ljmp
lods
fcmove
push
jp
xor
sub
mov
faddp
xorl
movsl
dec
mov
mov
dec
mov
fsubr
mov
xchg
addb
mov
das
lea
aaa
in
xor
pop
inc
ja
mov
gs
dec
js
hlt
xchg
cld
mov
jo
clc
scas
cld
dec
xchg
outsl
addr16
arpl
filds
sub
inc
lds
subb
mov
add
in
fstl
mov
outsl
mov
adc
xor
mov
jecxz
aaa
xor
adc
cmpsb
nop
pop
lret
dec
dec
nop
and
pop
adc
out
add
dec
sahf
lcall
dec
lods
inc
mov
xchg
nop
mov
lret
pushf
sbb
pop
xlat
cmp
das
xchg
cwtl
pop
imul
cmc
xchg
outsb
mov
call
scas
notb
ds
aas
in
pop
or
ds
cld
test
or
or
imul
ljmp
popa
xor
imul
lods
mov
jb
lods
movsl
inc
in
enter
setae
xor
in
loop
scas
or
lock
imull
sub
push
arpl
js
mov
xor
xor
lea
fwait
push
xchg
cmp
sti
pushf
and
xchg
fbld
xchg
lahf
mov
pop
jne
pop
xchg
mov
push
test
cmpsl
sub
pop
xchg
fmuls
push
push
in
pop
into
xchg
push
out
mov
nop
push
scas
jne
dec
test
cltd
insl
jb
mov
inc
pop
in
movsb
inc
and
lahf
punpckldq
push
inc
jne
xor
push
mov
enter
nop
not
sbb
and
xchg
push
pop
jns
mov
xchg
gs
enter
je
push
call
xchg
jb
jge
das
cmp
dec
jmp
shlb
add
and
push
hlt
fisttpl
mov
push
jge
dec
pop
mov
push
test
stos
sbb
ja
int
mov
mov
insl
push
aas
sti
outsb
rcrl
jge
mov
leave
out
xor
cmc
lret
leave
imul
sbb
data16
inc
add
xchg
dec
decb
mov
and
sub
cwtl
imul
ret
rol
dec
dec
push
sub
mov
enter
pushf
sbb
mov
fildll
std
icebp
xchg
ljmp
addr16
fldt
add
pop
mov
cs
and
mov
xchg
xor
fsubs
xchg
mov
dec
bound
js
test
xor
push
pop
xor
std
pop
push
and
lods
fidivs
fidivs
mov
cmp
sub
test
jl
mov
pop
push
aas
in
sbbl
int3
test
adc
adc
inc
test
loop
ds
mov
pop
fcoml
lods
dec
repz
popf
cmp
fs
dec
adc
add
cmp
jno
xchg
cwtl
mov
ss
pop
mov
or
sub
pop
aam
xlat
incl
mov
fwait
stos
inc
or
pop
jl
push
adc
cmp
dec
shll
out
in
rcr
add
push
in
xchg
pop
leave
sahf
dec
mov
push
enter
ja
stc
xchg
sahf
lea
aas
adc
imul
incl
xor
out
add
in
cmp
pop
in
aam
pop
add
mov
sbb
das
xor
stos
pop
ds
sbb
sbb
sti
fildll
out
push
adc
fisubrl
fs
xor
and
out
scas
out
int
jns
sub
lock
sbb
insb
shll
gs
dec
dec
cwtl
jge
add
daa
test
mov
mov
mov
inc
ljmp
xor
scas
faddl
fsubr
mov
shl
fs
pop
mov
stos
mov
in
jg
cmp
cmc
push
test
jb
jne
sub
test
stos
xor
adc
xchg
pop
dec
sub
nop
test
cld
xor
ja
xor
adc
test
movsl
sub
pop
pop
sbb
aas
loope
imul
in
imul
push
cmc
stos
fsubrl
dec
xchg
pop
addr16
or
jle
pop
cwtl
cmp
mov
loope
xor
mov
jl
iret
adc
stc
outsb
enter
inc
lea
and
loop
fdivl
lock
call
xor
sti
mov
mov
lods
mov
sti
pop
mov
add
lahf
mov
adc
dec
adc
outsb
push
imul
ds
xchg
sarb
inc
je
scas
decb
sub
shlb
xor
jne
sbb
xchg
dec
push
mov
dec
pop
sahf
push
sbb
les
test
lods
pop
sbb
shll
pop
sub
pop
pop
xchg
cmp
push
ss
fistpl
lahf
lret
xchg
cmp
ficoms
mov
mov
mov
outsl
mov
cltd
cmc
cwtl
ret
and
sahf
jae
lods
jp
push
xchg
add
in
xor
inc
pop
cld
popa
jno
xor
pop
sub
rorb
mov
mov
sbb
inc
sbb
mov
in
jp
push
adc
les
mov
jge
addr16
mov
mov
and
adc
xor
push
sub
add
pop
shrl
in
sbbb
jae
or
popa
fs
fsubrp
push
nop
in
gs
jne
xchg
cwtl
pop
adc
or
filds
mov
fcmovne
push
ffreep
xchg
mov
cmp
mov
mov
test
pop
jecxz
inc
mov
ljmp
cmp
xchg
cmp
mov
inc
pushf
push
leave
iret
sarb
or
repz
fdivl
jle
js
ja
pushf
push
push
and
push
lahf
or
xchg
pop
cmp
out
add
ss
dec
int
inc
test
sahf
cli
pop
insb
mov
ss
bound
stc
dec
sbb
pushf
mov
cmp
dec
xor
xlat
das
and
in
imul
dec
inc
mov
sub
movsl
loope
imul
in
mov
or
in
push
pop
pop
ss
sbb
sub
mov
lret
or
mov
mov
lds
push
outsl
xor
fimuls
cwtl
cmp
xchg
addr16
insl
dec
mov
xlat
pop
aad
inc
in
jb
push
lea
pop
jle
stc
mov
lods
movsl
xor
xchg
popf
insl
push
test
cmp
popf
les
or
xchg
push
inc
jo
call
push
sti
fsubs
sub
xchg
or
xchg
push
xchg
mov
insl
je
movsl
lea
test
cmp
jge
lahf
or
int3
inc
cmp
cmp
pop
jne
push
pop
pop
xchg
loope
popa
lahf
aas
notl
adc
nop
xor
xlat
mov
sbb
add
dec
pushf
mov
xlat
test
cmp
add
test
push
pop
movsl
push
lret
add
adcb
jg
shll
xchg
test
sbb
test
inc
repz
nop
js
inc
cs
cmp
adc
jl
cwtl
dec
push
insb
sub
adc
mov
std
setl
inc
pop
sub
mov
aaa
xchg
jecxz
rolb
lock
cmpsb
mov
xor
pop
add
aam
dec
rorl
lds
jo
sbb
push
lahf
mov
sbb
sbbl
insb
and
out
push
out
jnp
sti
adc
sub
jge
dec
dec
jae
in
fdivrl
push
js
adc
scas
sbb
movsb
fs
subb
dec
or
arpl
in
mov
in
dec
adc
cmp
mov
in
inc
or
fstps
pushf
lds
test
dec
mov
mov
fwait
cld
mov
popf
sbb
loope
xchg
je
or
or
push
rcrb
push
icebp
cmpsl
xchg
pusha
adc
pop
adc
dec
nop
sbb
or
cmpsb
mov
or
sbb
out
jle
out
push
xchg
adc
lea
insl
cmp
outsb
sbb
or
in
jl
shrl
inc
and
dec
push
or
enter
mov
cmpsl
test
jp
jne
xchg
jle
adc
inc
jle
inc
xchg
gs
sbb
andb
fsub
sub
and
ja
sbb
fs
xchg
sbb
popf
dec
in
out
xchg
mov
movsb
les
jb
into
fcoms
jecxz
jmp
pop
lret
cwtl
sub
sub
mov
cs
jne
icebp
mov
in
out
dec
xchg
test
pop
push
sbb
adc
or
mov
push
pop
dec
sbb
nop
int
sub
jmp
loop
fs
jb
stc
lods
lods
dec
testb
mov
int
sub
into
movsb
stc
sbb
popf
daa
lret
dec
nop
xchg
cmp
push
adc
fs
rcll
mov
xchg
mov
xor
xor
mov
pop
popa
sahf
fisubrl
fldl
cmp
popf
jns
or
push
pusha
adc
mov
jmp
bound
pushf
cmp
mov
dec
ljmp
mov
mov
sub
xor
jnp
lods
out
mov
mov
xor
xor
lock
mov
mov
lock
stos
popa
mov
gs
xor
orb
inc
pusha
nop
shrb
adc
scas
push
les
enter
and
int3
xchg
inc
sbb
lods
rcrb
test
lea
stc
pop
dec
dec
xchg
sbb
test
scas
ljmp
mov
test
adc
lahf
adc
sti
push
mov
out
sahf
xchg
inc
mov
scas
ds
cld
adc
xchg
lahf
sahf
cs
lods
mov
dec
and
aaa
pushf
in
es
sub
sub
cmp
pop
mov
dec
popf
pop
push
nop
pop
push
sahf
out
mov
cwtl
pop
and
cmp
sub
in
jo
mov
cld
popf
sbb
jge
pushf
or
mov
je
jge
and
cmp
or
les
addr16
leave
adc
movsl
inc
rcrb
xor
shrb
insb
push
outsb
jne
mov
dec
mov
mov
jge
aam
and
insb
sbb
scas
lea
jne
int3
jbe
xor
daa
orb
int
or
popa
jle
das
adc
test
add
lods
push
jp
gs
nop
mov
mov
rclb
int3
push
shlb
call
aaa
jp
loop
cmp
fcompl
lods
inc
adc
hlt
mov
shrb
call
mov
push
nop
inc
lahf
leave
repnz
jbe
in
and
addr16
cmc
xchg
subl
mov
aad
inc
in
sbb
in
mov
sbb
push
subl
lret
pop
nop
sar
jns
mov
adc
sub
jae
adc
loope
mov
mov
pop
lds
xor
cmpl
xor
xor
sub
mov
pop
adc
clc
dec
int3
fisubrs
in
adc
lods
or
incb
das
dec
xchg
jp
xchg
test
inc
int
inc
and
adc
mov
add
inc
and
iret
negb
sub
sbb
mov
stc
xchg
loopne
inc
jns
gs
popa
pushf
mov
jns
mov
push
pop
dec
jmp
and
jp
in
jno
int3
add
dec
lea
les
leave
stos
ljmp
sbb
shlb
cli
xor
ret
jo
cmpsl
sbb
xlat
cmp
and
movb
mov
xorb
ret
in
xor
cmpsl
pop
and
enter
lock
pop
movsb
sub
add
xchg
xor
test
bound
add
jae
adc
in
outsl
xor
call
pop
dec
repz
xor
in
das
popf
push
xchg
scas
dec
adc
xor
sbb
adc
dec
adc
sub
inc
das
xchg
sub
test
lret
popf
stos
or
mov
mov
out
dec
pop
xchg
call
lods
ds
push
sbb
xor
cli
nop
push
push
cmp
aam
fcoml
and
xchg
xchg
push
inc
xchg
test
into
das
dec
push
aam
xlat
stos
jo
je
fadds
sbb
enter
xchg
push
fcoml
cmp
rcrb
addb
adc
push
scas
pop
inc
or
repnz
mov
xor
mov
in
inc
fsts
decb
sub
sbb
leave
sbb
clc
mov
mov
stos
mov
cmp
inc
cld
dec
sub
xlat
pop
test
js
mov
movsb
dec
nop
test
frstor
cmp
sbb
and
jl
jo
mov
scas
jae
cmp
aaa
add
sub
jge
adc
jb
pop
lds
decb
or
mov
repnz
cmp
cmp
outsl
add
pushf
aam
jo
xor
cmp
mov
outsb
xchg
add
xchg
aam
sub
sub
sbb
adc
in
negb
icebp
loop
in
jl
mov
lods
imul
push
adc
out
in
or
cli
mov
sbb
or
jl
push
mov
lods
in
js
aad
stc
mov
push
sbb
insb
es
insl
enter
mov
add
inc
movsb
dec
push
out
aas
inc
lods
mov
push
aas
cmp
inc
lahf
mov
and
pop
lds
out
dec
inc
fsubl
idivb
cld
and
sbb
sti
enter
test
cs
lret
jl
adc
bound
stos
xor
cli
xor
lock
scas
lahf
and
cltd
mov
and
out
in
cli
push
subb
in
insb
arpl
rorl
sub
mov
movsl
lahf
xorb
xchg
js
mov
jae
or
test
les
out
faddl
mov
imul
insb
xchg
test
fs
mov
test
outsb
mov
cmp
dec
fsubr
loop
or
andb
dec
xor
out
jge
xchg
addr16
fdivrl
push
lea
xchg
sbb
jle
jg
xchg
iret
add
insl
push
inc
aam
loope
dec
stos
in
sbb
jae
dec
hlt
decl
loope
sub
idivl
outsb
jl
mov
xor
jmp
push
cmc
ret
and
sbb
adc
sbb
cmpsl
outsb
test
dec
out
push
sbb
dec
push
or
cmp
das
lea
fiadds
fildll
dec
loop
js
sub
add
push
push
test
adc
jbe
sub
inc
mov
pop
add
sub
or
and
inc
inc
or
jne
cmp
stc
int3
xor
adc
les
jne
xchg
mov
mov
shll
pop
testb
xor
jne
jg
test
movsl
subl
push
mov
xor
jecxz
mov
add
dec
xor
movsl
arpl
test
mov
ss
adc
sub
jb
cmc
xor
stc
pop
pushf
es
inc
jmp
repz
pop
shll
dec
and
xchg
xchg
cmp
int3
in
fldenv
jo
insb
cmp
ret
sub
nop
and
das
sub
enter
cs
push
es
mov
lock
shrb
inc
and
and
jl
jns
xchg
jecxz
in
nop
orl
dec
push
push
mov
sbb
pop
les
xor
imul
inc
inc
xor
cmp
lcall
sbb
push
dec
xor
popf
test
les
popf
fstps
ss
pop
mov
xor
outsb
mov
shlb
adc
cmpsl
loope
mov
adc
pop
adc
fnsave
gs
repz
cmp
fnstsw
loopne
mov
cmp
pop
adc
fsub
imul
imul
movsb
bound
push
xchg
jl
adc
push
jno
and
xor
bound
jnp
sti
sbb
adc
insb
push
sarb
lods
movd
fstpt
pop
gs
bound
cltd
shrb
dec
jl
xchg
pop
in
int3
in
mov
movsl
enter
push
cvttps2pi
pushf
les
add
push
fcompl
push
cld
mov
jl
mov
push
popa
push
test
add
jge
lahf
adc
frstor
sbb
sarb
push
lods
xchg
mov
or
or
adc
sahf
and
mov
int3
pop
loopne
sahf
daa
jge
lahf
xor
pop
mov
cmpsb
inc
mov
testl
push
pushf
mov
fbstp
xchg
mov
mov
sub
push
mov
and
repnz
dec
hlt
and
call
pop
push
cmp
dec
or
cmpsl
mov
mov
jmp
push
jns
pop
pushw
cmp
mov
mov
popf
mov
dec
sahf
xchg
xor
sahf
jl
push
clc
dec
adc
jnp
jl
cmp
imul
lret
sti
frstor
jge
mov
out
scas
push
mov
int3
cmc
add
or
mov
push
pushf
scas
outsb
jmp
dec
mov
jl
lds
push
ret
sbb
mov
ud1
shrb
push
mov
mov
dec
jge
test
hlt
shll
sbb
aaa
mov
inc
mov
mov
inc
fs
jb
and
adc
push
cwtl
push
lret
cmpsl
xor
ja
pop
notl
dec
adc
lods
ljmp
in
test
sub
adc
adc
mov
les
in
les
dec
jns
pop
or
in
stos
ja
xor
pushf
hlt
dec
hlt
pop
fisubrs
dec
mov
sbb
mov
insb
sub
mov
or
enter
push
push
push
xchg
mov
jge
ja
mov
sahf
sbb
outsb
negl
dec
cmovns
pop
mov
enter
mov
mov
mov
mov
and
scas
mov
in
fs
cli
orb
fisubrs
fstpl
cmp
inc
push
push
sub
xchg
and
dec
xor
dec
pop
sbb
stos
push
inc
cmp
and
dec
dec
das
mov
sbb
xlat
push
jo
xor
push
popf
shlb
pop
es
in
cs
inc
mov
push
es
push
xor
rcrb
std
dec
dec
in
push
les
cmp
and
dec
sub
fstps
xor
xchg
and
dec
dec
das
dec
pop
sbb
and
sbb
test
pop
or
cmc
mov
cmp
shrl
sub
sbb
fists
add
sbb
rolb
and
push
in
inc
das
and
in
mov
dec
mov
fdivl
cmp
sub
cld
pop
mov
dec
mov
push
push
idivb
xchg
dec
filds
jne
insb
or
ss
dec
cs
jb
adc
clc
es
je
adc
sbb
cwtl
jp
xor
das
lcall
repz
nop
cmp
dec
aad
ss
aam
and
ret
fmul
cmp
scas
jo
je
sub
nop
cwtl
adc
xchg
xchg
and
lahf
test
xchg
fcoml
and
dec
pop
xor
lahf
adc
enter
andb
sahf
popf
xchg
mov
add
js
movsb
ds
jmp
or
dec
dec
xchg
pop
out
or
negl
cmp
into
inc
mov
lds
imul
xchg
xchg
fcoml
mov
sub
lock
insb
in
outsl
cwtl
adc
loopne
pop
outsl
aas
jl
inc
dec
xchg
adc
xlat
adc
xlat
dec
lea
cld
call
or
cwtl
sbb
and
fdivrs
and
lds
add
adc
sbb
call
push
popl
pop
outsb
test
xor
xchg
xor
inc
insl
sbb
sahf
adc
jp
mov
add
mov
and
add
repz
mov
cld
stos
add
sahf
xor
inc
adc
push
mov
or
je
xchg
dec
xchg
push
xchg
dec
add
addr16
sbb
push
loopne
jl
cmp
add
inc
das
dec
push
push
sbb
fs
rorb
adc
fisttpll
sbb
dec
fisttpll
mov
sbb
mov
test
out
sub
and
cmp
frstor
sub
insb
popf
inc
push
in
cmp
cwtl
lahf
sbb
push
aas
xchg
lahf
push
xchg
jl
test
fbld
or
jb
and
jl
push
and
cmp
dec
push
aad
pop
inc
data16
sti
jb
lea
push
pop
loop
ds
or
dec
pop
sub
out
fs
dec
fisttpll
pop
icebp
sbb
jle
xor
dec
sbb
xchg
cmp
mov
or
mov
ret
xchg
pusha
adc
and
sub
cltd
mov
shlb
faddl
push
out
mov
hlt
dec
push
aaa
sbb
out
pop
in
cmp
dec
sub
sbb
mov
in
and
sbbb
jmp
iret
adc
pop
and
lock
pop
mov
sub
nop
int3
push
ds
test
aaa
popf
mov
inc
inc
arpl
mov
ljmp
incb
lods
jge
nop
ljmp
insl
cwtl
leave
fs
sti
jno
dec
loopne
movsb
jl
xor
js
add
aam
pushf
js
orb
sbb
mov
popf
push
ss
fstp
insb
js
in
lret
sbbl
adc
jl
add
sub
pop
aam
pop
movsb
sub
ljmp
and
and
test
ss
sbb
sbb
out
pop
push
sbb
or
mov
daa
mov
mov
ljmp
lods
lret
adc
test
cmp
fucomp
bound
push
nop
xchg
popf
cmp
insb
mov
xchg
cmp
bound
jl,pt
sbb
push
cs
sub
pop
mov
nop
sbb
push
adc
shrb
sti
sub
mov
mov
adc
movsb
sbb
stc
and
xlat
sbb
adc
mov
fdivrl
mov
xor
cli
enter
subl
xorl
xchg
sbb
mov
adc
dec
and
sub
mov
sbb
out
push
scas
in
push
push
gs
int3
cltd
push
stos
in
daa
int3
sti
arpl
mov
aam
int3
nop
sub
sbb
nop
cmp
sbb
xchg
inc
pop
js
mov
ficompl
or
lods
testl
ja
pop
shrl
bound
pop
pop
repz
add
popf
stos
cmp
insb
enter
add
nop
insb
cld
or
imul
out
jns
jo
mov
popf
pop
pushf
test
lret
cmp
lcall
imulb
dec
cmpsb
jl
inc
mov
xor
data16
or
fcomps
mov
hlt
in
xor
imul
sbb
fisttpll
push
add
lds
pop
jnp
mov
jns
fs
push
or
out
jl
test
test
arpl
sub
hlt
out
or
out
movsb
mov
inc
pop
jmp
push
sub
inc
sbb
add
in
add
insl
mov
scas
or
xchg
cld
sbb
push
das
push
hlt
dec
outsb
shl
ficomps
inc
hlt
cld
push
sbb
dec
inc
xchg
fisttpll
lods
push
insl
jo
je
insb
lock
das
loope
sub
in
jecxz
fisttps
lahf
iret
fisttps
cmp
cmpl
lods
inc
out
pop
in
lds
shl
lea
ret
scas
pushf
and
test
in
popf
mov
and
int3
xchg
or
insb
dec
mov
adc
les
popa
xchg
mov
adc
jmp
es
mov
dec
adc
cli
in
xchg
adc
sbb
in
push
in
mov
adc
dec
lods
ljmp
mov
inc
pop
fistpll
mov
and
and
sub
pop
mov
cwtl
pop
pop
sub
nop
xor
sub
pusha
adc
add
shlb
jns
fucomp
dec
sub
jae
jge
loop
out
shl
cmc
mov
adc
jge
pop
aam
js
cmpsl
int3
mov
xchg
scas
pop
neg
push
sub
mov
dec
das
pushf
scas
sub
lods
push
sub
sahf
int3
in
sub
jge
pop
mov
lret
adc
pusha
mov
fisttpll
and
pop
xchg
popf
push
push
lods
xor
lcall
mov
call
push
push
int
ret
cmp
xor
mov
roll
or
scas
xchg
mov
aam
insb
arpl
mov
jge
jg
sub
jge
mov
inc
insb
je
fisttps
xlat
pop
aam
jl
sub
xchg
sub
sti
popa
hlt
inc
lahf
push
sbb
sub
fidivs
mov
mov
not
jbe
or
mov
movsl
popf
out
dec
add
mov
push
and
xor
mov
xchg
lea
adc
sub
test
cmp
mov
fidivrs
iret
call
shrl
lds
addr16
outsl
repz
loope
frstor
push
lahf
mov
xor
sbb
dec
shrb
fdiv
lock
fdivl
pop
adc
mov
cmp
sbb
mov
in
int
imul
out
xlat
fdiv
test
cmp
les
mov
jne
cld
and
sahf
mov
jne
hlt
and
cmpsb
aam
lret
rorb
cwtl
fdiv
faddl
in
jmp
es
test
in
stos
mov
arpl
fstl
fs
fimuls
push
rorb
test
dec
push
dec
mov
push
xor
push
sbb
xchg
stos
stc
dec
and
sub
out
imul
mov
xor
inc
in
loop
cmp
lods
ja
jl
hlt
cli
cmc
add
adc
cmp
fbld
dec
mov
cmp
popf
xchg
sbb
xor
pop
negb
mov
je
cmp
jge
mov
or
movsb
cld
sbb
pushf
inc
mov
iret
cmp
xchg
fnstcw
mov
aas
insl
pop
out
clc
adc
or
adc
or
cmp
xchg
inc
dec
sub
dec
xor
and
jge
in
xchg
test
xor
and
cmpsb
std
arpl
movsl
and
dec
dec
pop
dec
icebp
push
and
xor
mov
mov
pushf
jl
pop
cmc
jbe
rorb
divb
inc
cmp
and
lcall
xchg
lods
neg
and
movsl
dec
add
pop
scas
sub
sub
mov
jb
pop
adc
inc
nop
xor
push
popf
mov
ja
xchg
dec
push
and
idivl
push
test
sub
aam
xor
dec
loope
adc
xchg
sbb
jge
rolb
push
mov
int
enter
mov
mov
ljmp
mov
jl
test
sub
test
pop
cmp
pop
push
adc
pop
daa
lahf
dec
pop
out
ffreep
xor
cmp
cli
xor
ret
shl
pushf
lahf
shl
out
mov
and
mov
into
and
xchg
lods
popf
jmp
cmp
test
mov
fsubrs
sub
addl
push
xor
bound
addr16
push
dec
dec
pop
and
jl
push
andl
add
add
xor
pop
or
mov
ds
sbb
addr16
hlt
add
es
xchg
cmc
pop
ljmp
inc
lods
hlt
jns
xchg
jl
js
mov
out
jge
cwtl
pop
sbb
aas
sbb
int3
aas
and
lea
xor
cmpsl
and
xchg
and
mov
pop
aam
mov
jecxz
dec
jne
cwtl
cltd
dec
add
sahf
jae
imul
jno
lea
adcb
jecxz
push
int
adc
in
sbb
jp
out
in
movsl
adc
rcrb
mov
test
mov
jmp
push
pop
shrb
popf
aaa
sub
int
jb
push
pop
sbbb
leave
jo
adc
je
nop
and
jne
int
pushf
dec
js
dec
xchg
ja
inc
inc
mov
fcoms
jne
mov
push
add
xor
push
inc
shrb
popf
push
sub
lods
inc
ss
leave
es
mov
xor
adc
inc
rclb
loop
and
lock
das
popa
mov
mov
or
and
xor
bound
int3
insb
sbb
xchg
sbb
jg
jg
scas
sbb
mov
lret
or
mov
push
xor
loopne
mov
and
pop
cmc
xchg
test
enter
out
or
cltd
xchg
jno
mov
lret
imull
aam
aas
xlat
fistl
push
pop
sar
mov
push
xchg
and
rorl
sbb
adc
adc
loope
cmc
test
mov
xchg
lods
sbb
jl
data16
and
mov
sbb
testl
pop
push
mov
or
leave
lods
js
pushf
je
icebp
pop
push
ljmp
jb
jae
ret
leave
ljmp
shlb
add
or
jg
gs
std
sbb
xor
and
sbb
data16
mov
push
and
or
sub
and
jl
insl
js
aas
cmpsb
pop
xchg
or
in
sbb
in
test
imul
stos
adc
cwtl
jo
popa
mov
sub
push
sub
pop
aad
push
orl
in
dec
jge
adc
ficoms
jo
ret
nop
pushf
pop
pop
enter
scas
dec
pop
add
push
outsb
and
xchg
push
stos
mov
and
ja
out
xor
je
sti
pop
mov
cwtl
pmovmskb
rcl
int
sub
pop
cli
cmp
enter
insb
or
ss
or
sbb
mov
lahf
test
gs
pop
sbb
aaa
mov
cmc
sbb
adc
dec
adc
sbb
lret
dec
cmp
mov
pop
cmp
in
mov
nop
mov
and
sahf
lock
ljmp
mov
mov
sbb
pop
or
decl
cltd
jg
loopne
nop
ret
pmuludq
mull
sub
mov
or
adcb
xchg
jge
cmp
out
jbe
jnp
adc
jmp
and
push
push
testb
addb
mov
jns
push
push
outsb
and
sbb
add
pushf
pop
mov
push
or
mov
leave
ret
sbb
sub
sub
insb
pop
adc
gs
ljmp
pop
sbb
push
ret
out
adc
dec
in
stos
dec
lahf
mov
out
cmp
dec
inc
adc
mov
out
sbb
movsb
adc
and
stos
das
pop
pop
ss
xchg
xor
xchg
fsubrs
mov
push
and
hlt
test
mov
mov
out
adcb
sbb
stc
mov
xchg
mov
jg
xchg
aas
jle
mov
pushf
mov
out
cwtl
dec
mov
int
push
shll
vcvtss2si
jne
mov
xchg
jecxz
jle
testb
mov
std
or
popf
imul
pusha
sub
aad
pop
adc
pop
mov
lds
dec
mov
stc
je
mov
mov
clc
push
cmp
addl
pushf
pop
test
adc
das
sub
lret
push
sbb
shll
adc
sub
nop
je
jmp
and
mulb
mov
lret
dec
bound
mov
xorb
pop
push
pop
pop
stc
je
xor
pop
jo
adc
shlb
adc
pop
cs
xor
mov
stc
mov
lock
xchg
sbb
jbe
popa
jo
sub
pop
cmp
dec
fstl
jle
adc
jns
cltd
test
cmp
cs
or
jle
pushf
pop
sahf
rclb
push
and
pop
sbb
test
das
push
push
imul
les
aas
mov
test
lea
sbb
bound
cmc
mov
mov
je
mov
jo
cmp
popa
sub
in
imul
cld
test
sbb
rorb
sub
lds
adc
adc
lock
cwtl
xor
or
nop
cmp
and
push
adc
dec
push
aas
xor
xchg
sbb
jl
sbb
sbb
dec
hlt
mov
push
subl
stos
lret
test
leave
dec
and
xor
movl
add
int3
mov
sub
dec
sbb
dec
adc
adc
mov
mov
xor
xchg
lods
or
dec
mov
hlt
pop
popa
icebp
insl
pop
xchg
nop
icebp
jge
sbb
mov
cmp
push
or
xchg
out
dec
and
sar
cwtl
adc
sbb
stos
jb
daa
cld
sub
out
or
and
push
jge
jns
mov
leave
mov
int3
and
mov
jecxz
iret
or
pop
subb
mov
sbb
and
jbe
mov
mov
test
rcrb
jns
test
data16
dec
xchg
and
dec
pop
fldenv
or
inc
fsts
mov
jbe
popa
ja
dec
cmp
jge
sub
sbb
outsb
mov
std
bound
and
sub
adcl
mov
mov
mov
pop
sub
sub
icebp
push
xchg
bnd
inc
test
aad
sub
adc
push
jb
insb
repnz
jb
push
adc
mov
mov
sbb
sub
movsb
xchg
into
das
scas
nop
add
pop
rcll
and
mov
std
test
add
add
int3
cmpsb
bound
jl
dec
cmp
sub
push
mov
sti
call
lods
and
shll
leave
ret
sub
jns
test
xchg
les
arpl
adc
or
or
jnp
mov
rcrb
cli
push
adc
scas
cmp
lods
xorb
jmp
jge
lea
lods
adc
jo
je
test
push
call
xchg
adc
fldt
aam
mov
clc
jno
push
ja
les
mov
shlb
testb
les
adc
sbb
dec
and
in
mov
jnp
pop
dec
mov
jmp
lcall
jae
dec
nop
mov
les
mov
test
leave
fisttps
mov
aaa
push
push
pop
dec
das
jns
jne
int
daa
adc
add
lods
in
pop
lods
lret
scas
jl
push
mov
test
in
imul
mov
pusha
sbb
jnp
mov
loop
xor
outsb
xchg
and
dec
out
push
daa
outsb
cs
push
les
mov
adc
mov
add
push
mov
ret
sbb
jmp
push
sub
mov
or
mov
push
ficompl
popf
loope
scas
stos
jecxz
jl
outsb
bound
xchg
call
leave
jg
jge
popf
mov
sahf
mov
scas
sub
mov
clc
sbb
sub
nop
mov
sbb
mov
push
mov
cs
mov
jle
outsb
flds
xchg
cmp
nop
adc
loopne
push
cmc
xor
lods
test
pop
clc
xorb
adc
cwtl
xchg
pop
in
notb
ja
je
jge
imul
loop
neg
sub
in
aas
and
pop
out
into
cmp
mov
mov
fstl
je
adc
stc
inc
sbb
mov
cwtl
les
inc
mov
movsl
mov
xchg
pop
shrl
push
and
int
and
and
std
inc
je
mov
pushf
pusha
sub
dec
jo
xlat
call
xchg
sbb
cwtl
dec
icebp
lods
add
scas
push
andb
xchg
push
push
sub
or
in
outsl
xchg
decb
pop
pop
sbb
cli
daa
push
mov
mov
cmpb
insb
fcomip
enter
movsb
add
cmp
sbb
or
clc
mov
or
mov
adc
adc
pushf
mov
dec
sahf
mov
lods
inc
push
stos
adc
cmp
clc
adc
cwtl
mov
rolb
cmpsb
jbe
mov
mov
out
cmc
in
hlt
mov
jle
jg
aam
adc
hlt
sbb
sub
stos
insl
aam
cmp
and
push
bound
mov
or
adc
mov
xlat
popf
pop
mov
xchg
jp
cmpl
fucomp
adc
sub
and
dec
push
into
ds
jg
mov
mov
ffreep
out
mov
loopne
mov
jl
bound
divb
adcl
add
xor
sub
jo,pt
rcrb
xor
xchg
sbb
push
mov
push
mov
pop
pop
das
sbb
jl
xor
ljmp
fs
addr16
mov
lahf
sbb
mov
insl
jae
xchg
add
aam
dec
popa
jne
or
dec
popf
adc
fimull
enter
cmp
pop
pop
pop
xlat
or
adc
inc
scas
add
xchg
mov
sbb
dec
mov
sbb
lods
mov
mov
fstps
outsl
and
sub
outsb
lods
pop
std
test
mov
sar
andb
add
add
fistpl
xchg
cmp
decl
test
sbb
xor
push
and
roll
mov
cwtl
mov
push
inc
les
cmp
fdivs
mov
mov
fmull
fistps
inc
int3
mov
cmp
ror
lods
loopne
lock
adc
sub
divl
jl
sbb
inc
cmp
cmp
test
lahf
inc
pusha
add
pop
repz
inc
xor
fidivs
hlt
test
mov
lret
lock
or
out
fbstp
movsb
and
adc
imul
adc
jge
mov
mov
bound
popa
stc
push
std
mov
std
mov
arpl
mov
add
dec
mov
dec
sub
adc
nop
sbb
insl
mov
lret
fisttpll
jne
pop
popa
cmp
movsl
shll
and
nop
inc
cmp
cmp
icebp
loop
inc
sbb
arpl
pop
sub
and
sbb
pop
xchg
sub
sbb
test
sub
pop
cmpsb
sbb
adc
aad
dec
pushf
cs
sub
push
sub
mov
div
mov
dec
popa
and
or
in
clc
inc
push
repz
inc
sbb
and
int3
sbb
dec
sub
popf
outsb
lods
adc
stos
aaa
leave
lock
mov
jl
adc
lret
sbb
pop
or
push
jg
lds
cmp
adc
add
rorb
push
mov
lods
add
adc
inc
and
shld
and
repnz
rclb
loop
out
pop
popf
std
icebp
jl
inc
dec
cmp
jle
or
test
xor
test
ja
gs
rcrb
rcl
sub
sbb
push
push
cs
push
ljmp
int3
or
ljmp
dec
or
xchg
jno
adc
sbb
and
add
mov
mov
and
inc
cli
aaa
jg
stos
pop
sahf
mov
and
addl
jo
cmp
dec
push
cwtl
lods
insl
dec
in
xchg
std
jmp
xor
cmp
cltd
or
out
push
imul
pop
in
sbb
clc
cmp
repz
lods
out
push
xlat
jecxz
sub
sbb
inc
insl
cmpsb
adc
push
nop
cmp
jecxz
movsl
push
mov
xchg
jecxz
loope
sahf
mov
push
aad
jecxz
loope
mov
pop
adc
sbb
pop
inc
rcll
lds
xchg
popf
sub
xor
popf
cmp
xchg
ja
adc
pop
and
lahf
and
aad
lahf
aad
nop
leave
icebp
aad
push
jle
pop
jns
push
pop
push
adc
hlt
jae
push
cmp
aad
dec
mov
fisubl
in
rcll
mov
leave
das
mov
in
push
mov
mov
mov
mov
cmp
push
ljmp
mov
mov
cmp
mov
cmp
inc
adc
cs
int3
add
aaa
lods
jnp
addr16
mov
dec
xchg
in
dec
sti
push
pop
mov
mov
jb
popf
cmc
ljmp
ljmp
das
push
cwtl
mov
mov
aam
cmp
mov
mov
dec
adc
pop
cltd
jl
dec
jg
lahf
dec
pop
mov
xchg
mov
out
out
jl
sbb
jmp
in
sbb
mov
das
pcmpeqw
sub
fimuls
aas
test
divl
and
cmpsb
adc
out
or
jle
cmp
pop
push
xor
lock
mov
inc
je
mov
sbb
lea
dec
mov
in
jecxz
les
js
mov
cld
insb
sub
iret
dec
jmp
ds
fwait
mov
pop
sbb
lods
iret
fbstp
mov
jg
dec
dec
push
mov
sub
inc
jmp
std
mul
repz
insb
jmp
out
outsb
das
and
adc
mov
xor
sub
mov
ja
aad
shll
aas
js
push
addb
daa
test
icebp
sti
xchg
mov
insb
adc
lea
std
aaa
rcrl
pusha
dec
inc
ret
notb
xor
pop
test
mov
in
and
loop
out
pusha
cmp
push
pop
inc
sahf
mov
in
jmp
ds
sbb
lret
adc
in
jmp
sbb
pop
pop
in
das
test
cmp
pop
jbe
enter
nop
data16
int3
add
cmp
jo,pn
cs
sbb
lods
test
cmp
cmp
pop
scas
aas
in
push
mov
repnz
adc
pop
jbe
std
aas
movsl
dec
fmuls
add
jecxz
in
sub
push
aas
imull
sar
mov
cmp
sbb
mov
enter
pop
jae
dec
cmp
insb
sbb
lcall
xchg
lcall
xorl
mov
pop
in
sub
sbb
mov
push
enter
mov
jle
jnp
stc
sbb
xchg
jne
out
push
fidivrs
xchg
idivb
sbb
lret
bound
adc
jnp
dec
hlt
pop
das
pushf
inc
in
push
adc
pop
xor
push
scas
inc
sahf
nop
test
data16
mov
mov
dec
lods
loop
bound
pushl
adc
fidivrl
adc
mov
push
jl
push
aad
js
sub
loopne
pop
xchg
mov
adc
jl
sbb
jmp
jns
fstps
sbb
dec
bnd
sti
xchg
push
sub
int
insl
popf
add
pop
lret
mov
mov
lea
icebp
and
rcr
ss
dec
mov
test
pop
and
dec
mov
jno
fwait
jecxz
adc
mov
mov
cs
push
orb
lea
cli
rorb
pop
cs
js
insl
mov
imulb
and
clc
sbb
test
adc
and
lea
adc
mov
push
sub
sbb
int
add
inc
and
notb
and
sahf
js
test
jecxz
lahf
mov
out
inc
and
pop
adc
sub
and
aam
xor
sub
adc
xor
xor
cmp
aaa
das
popf
sbb
cmp
inc
inc
and
das
sub
lahf
sbb
dec
inc
and
sub
jecxz
xchg
jbe
fcoml
adc
or
inc
dec
mov
pop
in
mov
pop
in
pop
push
inc
dec
sarl
mov
mov
sbb
pop
lds
in
leave
mov
aaa
mov
fists
das
cmc
jnp
mov
sub
push
lods
pop
xchg
aad
data16
sub
push
in
lahf
fstps
push
push
fstpl
sub
mov
push
popf
ss
pop
aad
out
adc
pop
cwtl
mov
jmp
sarl
dec
lahf
cwtl
xor
test
icebp
push
adc
jecxz
inc
and
mov
lahf
idivb
cmp
stos
mov
cmp
hlt
cmp
sar
mov
aas
nop
push
test
daa
gs
add
mov
orb
add
in
push
pop
lods
data16
icebp
or
push
inc
pusha
sub
xlat
add
icebp
loopne
adc
sti
mov
add
xchg
jno
or
adc
add
in
push
ljmp
fdivs
xor
or
mov
les
inc
adc
jno
sub
mov
inc
xor
mov
dec
test
push
pop
mov
stc
adc
xor
pop
pop
sub
lahf
dec
lret
mov
negb
xchg
inc
in
dec
mov
inc
mov
das
mov
dec
sbb
das
and
dec
adc
nop
and
adc
or
sub
xorl
faddl
cmp
insl
mov
fidivrs
mov
push
scas
dec
jb
mov
jo
mov
pop
and
fwait
push
lret
cmpsb
xchg
cld
js
cmp
adc
int
and
inc
idiv
adc
or
bound
or
ljmp
nop
sbb
mov
lret
cmpl
popl
pushf
lock
push
push
sbb
pop
imul
sbb
mov
cltd
or
dec
in
stc
push
or
out
dec
mov
loop
and
jns
leave
mov
jge
xchg
lods
pop
mov
mov
xchg
lods
je
xchg
add
dec
jecxz
aad
stos
jae
push
or
in
and
jae
std
mov
pop
aaa
pop
loopne
mov
jecxz
inc
mov
pop
dec
dec
loop
xor
inc
inc
push
cmp
rcll
or
push
sub
cmp
add
out
stos
jnp
jle
add
push
push
jbe
gs
nop
push
fcoms
les
or
lret
outsl
xlat
jecxz
mov
test
lods
ret
xchg
cmp
sarl
sub
and
push
lods
xor
dec
mov
push
fwait
dec
adc
fwait
test
mov
ds
cld
mov
mov
out
enter
dec
sbb
or
test
shll
mov
fmul
xchg
cld
in
test
mov
insb
cmp
test
test
loopne
push
sbb
pop
xchg
je
or
adc
pop
cld
sub
add
cmp
ror
dec
mov
dec
add
cmp
push
mov
dec
dec
repz
or
sub
mov
fstl
push
std
popw
and
xchg
aas
mov
jo
mov
ret
int
jge
decl
aad
push
filds
sbb
lret
adc
std
mov
ficomps
cmp
scas
xor
cmc
adc
push
or
cmp
loop
push
mov
jmp
jge
notb
sub
cmp
pop
mov
inc
cmp
stc
scas
push
loop
mov
cs
js
popa
gs
cmp
pushf
int
mov
jno
pop
adc
add
imul
enter
inc
pop
cmp
xor
mov
sub
dec
stos
nop
cmp
jns
negb
in
jge
jmp
sbbb
adc
in
cs
lock
aas
js
lcall
fcmovne
cmpsb
xchg
rcr
push
xor
push
pop
fstpt
lea
adc
test
xchg
xchg
sbb
cltd
sub
adc
adc
je
mov
fs
pop
mov
push
pop
adc
sbb
aam
aam
pop
xor
fists
in
adcb
mov
cmpsb
dec
call
lock
mov
and
mov
repz
in
mov
stc
cmp
fisttps
pop
mov
rcll
insl
sbb
mov
push
dec
divb
fsubrl
xchg
jo
lods
outsb
dec
nop
lds
jb
leave
xchg
adc
add
test
mov
sub
and
sub
push
pop
or
lock
bound
mov
pop
ss
movsb
and
fbld
xor
mov
outsb
shrb
and
xchg
ss
push
in
sbbb
xchg
jmp
or
nop
xchg
dec
icebp
cs
sbb
aam
push
sub
jl
std
nop
orb
xchg
pop
je
xchg
sub
sub
push
cmp
adc
sbb
mov
inc
mov
mov
sbb
push
sub
adc
cwtl
xor
xchg
mov
rorb
cmpsb
mov
sbb
sbb
and
sbb
cwtl
pusha
pop
mov
fs
ss
pop
mov
dec
or
pop
mov
mov
jne
enter
sub
stc
xchg
mov
push
rol
out
popf
sub
call
xor
xor
and
mov
popf
lds
add
mov
sti
sub
mov
push
sbb
out
popf
ds
stos
or
cmp
mov
subl
mov
insb
jo
push
adc
push
roll
lahf
adc
dec
fisttps
inc
pop
iret
sub
mov
test
sub
rorl
sbb
adc
adc
inc
push
push
pop
test
ret
mov
push
sbb
fs
fs
push
in
pushf
icebp
pop
jo
mov
je
sbb
cmc
js
fbld
mov
xor
xor
sbb
push
push
popa
cmp
sbb
lods
push
test
fbld
and
push
mov
lock
aam
jle
mov
cmp
rorl
pop
roll
insl
in
test
test
out
ja
mov
jae
cmp
sti
pushf
mov
cwtl
nop
sub
scas
pop
or
mov
adc
adc
pop
scas
xchg
dec
adc
scas
es
push
pushf
std
ret
mov
jg
nop
ds
insb
push
xor
sbb
pop
aas
adc
jo
sub
lahf
aas
cltd
mov
ds
movsb
inc
and
add
jl
loopne
ret
xchg
push
mov
jb
cmp
aam
mov
inc
mov
jmp
mov
and
xchg
pop
push
mov
test
int
popa
stos
sub
scas
adc
roll
xchg
jno
cmp
pop
sbb
pop
in
into
add
and
aad
fisttps
xor
test
in
jb
xor
sub
mov
jne
push
orl
gs
jno
or
jmp
out
mov
add
add
stos
cmp
xor
cwtl
pop
jbe
mov
int3
test
xor
lret
dec
mov
lods
and
fdivrs
dec
inc
push
cld
jl
leave
adc
jnp
mov
dec
mov
ss
adc
sbb
cwtl
mov
test
mov
rep
inc
inc
cmpsl
push
mov
cld
retw
jg
inc
mov
xchg
jno
or
fisubl
movsb
jecxz
mov
mov
xor
pop
fdivs
cld
mov
lahf
pop
cmp
dec
and
rcll
push
sbb
xor
movsb
fnsave
fs
add
pushf
inc
test
je
mov
iret
les
stos
movsl
pop
mov
and
cmp
test
dec
inc
shrl
cmp
int3
xor
cld
data16
xor
test
aas
lds
and
inc
ja
cmp
out
jmp
dec
shlb
scas
lret
int
pop
adc
in
call
xchg
js
xchg
xor
adc
les
push
xor
inc
jmp
into
or
mov
sbb
jns
or
fucomi
and
shlb
push
cmp
nop
out
xor
lea
xor
test
sbb
and
sub
iret
xchg
jecxz
mov
popf
jo
inc
xor
icebp
xchg
mov
jns
pop
int
jne
push
cmpl
clc
aas
inc
jnp
push
test
jmp
pushf
fists
stc
jmp
sub
lret
mov
mov
sub
fsubrl
sub
sbb
shrb
je
loope
dec
pushf
push
shl
jno
pusha
cwtl
out
adc
popf
dec
push
jl
bound
outsl
jbe
or
dec
sarb
pop
cmp
adc
fmul
in
popf
js
inc
pop
push
push
mov
dec
imul
shrl
mov
or
mov
js
xor
push
adc
cmp
pop
inc
sub
inc
sbb
push
rclb
decb
add
jl
cmp
shrb
pop
pop
sub
pop
js
xor
sbb
push
xchg
sub
and
popf
xor
push
dec
dec
xchg
popf
push
or
mov
and
adc
push
call
mov
call
pop
sub
out
jno
lea
adc
call
mov
cwtl
pushf
push
mov
iret
push
inc
cmp
movsb
inc
test
or
mov
test
data16
cmp
or
jl
adc
or
lret
xor
jl
or
test
js
cmp
mov
adc
out
inc
cmpsb
inc
push
mov
movswl
push
push
sbb
sbb
xor
lret
xchg
sub
mov
repnz
cmp
mov
push
mov
mov
push
mov
lcall
mov
mov
xor
lea
cld
addr16
cld
dec
das
or
lret
mov
das
scas
in
in
fdivrl
pop
in
sub
jl
inc
rcl
xor
pop
jo
les
adc
mov
adc
js
enter
popa
sbb
or
sbbl
cmp
push
sbb
xchg
dec
inc
push
pop
add
push
dec
xor
lds
fistps
fisubs
imul
dec
dec
hlt
mov
lods
fwait
insl
jle
fnstcw
inc
loopne
lods
pop
inc
jl
and
push
jl
jmp
inc
int3
mov
cs
lret
inc
jl
push
loopne
addl
push
aad
xchg
sbb
mov
mov
shl
add
mov
rcll
sbb
int3
nop
mov
sbb
mov
adc
pusha
daa
fcomps
lods
xchg
in
pop
or
mov
push
push
fs
sub
inc
enter
sti
add
sbb
lahf
hlt
jns
cmp
fistpl
jne
sbb
hlt
stos
mov
rcr
add
test
xchg
test
js
das
or
out
ds
rcl
enter
inc
cmp
pop
mov
mov
mov
fisttpl
ljmp
sub
push
std
enter
test
add
push
loop
int
adc
lods
inc
int3
popf
inc
adc
xor
jle
loop
pop
outsb
or
into
sbb
jmp
dec
inc
test
pop
or
ficomps
and
and
inc
pop
mov
lea
push
xchg
lea
cmp
cmp
dec
mov
push
aam
xchg
les
pop
dec
adc
scas
push
sbb
cmc
and
gs
idivb
add
xorl
cwtl
dec
pop
loope
aam
mov
push
pushf
sbb
add
push
sub
aam
mov
pop
repz
lea
and
xchg
data16
aam
outsb
pusha
mov
insb
fstpl
jp
les
push
dec
xor
cs
mov
jo
jl
lahf
xchg
clc
pop
dec
or
inc
ds
nop
adc
test
subb
testl
lods
mov
idivl
jae
or
sub
sbb
clc
ss
sub
addb
in
imul
das
pop
test
mov
dec
ljmp
mov
dec
sbb
ror
mul
push
pop
mov
inc
sub
dec
popf
dec
push
xchg
int3
test
popf
cmp
jg
sbb
mov
add
jno
pop
pop
scas
insb
das
pushf
lret
dec
cmp
jge
enter
cmp
out
add
adc
jl
pop
mov
test
cmp
lcall
decl
clc
stos
shll
cmp
push
stos
push
and
mov
push
lcall
iret
or
in
dec
mov
jecxz
int
cmp
inc
dec
shlb
sbb
cmp
shrb
push
mov
cmp
mov
test
outsl
xchg
jno
lods
dec
dec
ss
cmp
call
mov
and
jmp
iret
or
out
dec
mov
pop
xchg
rol
dec
or
rsm
lahf
into
jmp
pop
and
push
cmp
cmp
mov
mov
ljmp
aaa
in
lret
jne
mov
lock
dec
stos
int
nop
lahf
inc
movsl
iret
mov
sbb
jl
out
xor
std
leave
cmp
bound
mov
or
sub
mov
inc
hlt
mov
and
xor
cmp
inc
xchg
iret
or
dec
rorb
and
filds
out
mov
mov
outsb
insb
xchg
sbb
ds
xor
mov
fs
mov
into
push
ja
hlt
sahf
loop
adc
daa
adc
fmul
fwait
scas
in
dec
nop
cmp
adc
and
ljmp
adc
jle
faddl
mov
test
cli
mov
mov
push
sub
cld
inc
rcll
sbb
out
std
mov
mov
jnp
inc
cmpsl
cmp
sub
xor
rclb
pop
xor
scas
pop
adcl
sbb
in
sub
push
cmpsb
pop
mov
push
dec
jne
push
push
pop
cmp
jno
lahf
pushf
mov
scas
xchg
sbb
into
push
mov
xor
jle
fisubrs
out
or
cwtl
inc
shll
xor
sbb
pop
xchg
and
fistps
mov
push
cmp
sbb
cmp
and
dec
mov
cld
inc
int
mov
mov
inc
mov
ret
aam
adc
or
pop
pop
lds
inc
aam
filds
mov
mov
cld
subl
ret
pop
push
jb
push
push
jo
push
lods
and
idivb
fiadds
shll
out
lods
and
sahf
repz
fs
les
rcrb
mov
mov
ja
loopne
jl
mov
mov
arpl
insb
pushfw
sbb
mov
icebp
push
lahf
inc
fnstsw
mov
movsb
jle
sub
dec
mov
add
pop
xchg
lods
shrb
popa
int3
xchg
imul
mov
jle
adc
and
jg
adc
fmuls
aam
cmp
mov
inc
gs
rorl
sbb
data16
push
sub
leave
cwtl
sbb
ss
aad
xchg
pop
fldl
pop
int
nop
and
sbb
cld
cmp
pop
movsl
fldcw
sbb
push
add
fidivrl
push
scas
fstpl
incb
xchg
adc
int
xchg
adc
addr16
mov
mov
cld
insl
jnp
xchg
push
or
arpl
mov
jns
in
in
xchg
sub
out
dec
adc
jge
pusha
sti
xor
mov
test
decl
or
pop
inc
dec
add
adc
push
ljmp
notl
in
andl
adc
mov
mov
push
sbb
mov
cmp
stos
cmp
or
pop
lea
fsubr
enter
js
ds
lods
mov
xlat
js
jl
call
push
mov
xor
pop
sbb
push
push
cmp
cmpb
adc
in
jl
adc
out
sbb
mov
or
rclb
cmpl
pop
fnstsw
or
mov
jge
mov
ss
fwait
cs
mov
sub
sub
clc
lods
jmp
in
lret
sarb
pusha
int
or
test
mov
pop
scas
or
jg
push
mov
sub
pop
or
int
sahf
or
push
mov
in
sahf
sbb
mov
jle
add
lods
pop
pop
xchg
add
fnstsw
shl
out
data16
mov
in
lods
shll
mov
cmp
mov
xchg
sysexit
ss
push
sahf
dec
stc
xor
xchg
lret
outsb
cmp
cmp
outsl
pop
and
fs
sbb
fstpl
pop
jns
push
and
and
xor
push
mov
adc
jecxz
je
push
sbb
adc
lock
xchg
dec
dec
in
in
or
xor
xchg
lock
popa
adc
nop
sbb
jmp
scas
pushf
push
sbb
xor
or
jmp
insb
and
adc
jg
icebp
test
cld
push
sbb
scas
push
dec
jl
xor
and
mov
mov
xor
cmpsl
arpl
sbb
xor
cwtl
pop
and
popf
orb
test
jno
out
push
out
ffreep
ror
test
loope
outsb
push
idivb
out
popf
pusha
add
xor
nop
cmpsb
push
sub
xchg
aas
sbb
push
lea
push
cmp
sub
ljmp
mov
cmpsl
sbb
pop
cmp
data16
add
jg
jo
mov
lea
enter
cmp
in
xor
push
mov
fdivrl
inc
mov
lret
int3
outsb
aas
inc
pop
jns
out
sbb
dec
es
xchg
sahf
push
pop
std
jae
fcompl
sub
fnsave
inc
pop
sbb
jmp
popa
test
das
push
pushf
int
cmp
pushf
add
dec
fidivs
sub
cltd
mov
ds
sbb
cmp
rorb
int
mov
and
addr16
pop
imul
and
insb
ss
add
fdiv
cmpsb
push
in
push
adc
mov
popf
mov
fldenv
mov
sub
pop
push
pop
xchg
add
pop
pop
shlb
jmp
fdivr
js
cld
add
mov
mov
dec
pop
jns
int
lahf
sub
cmp
jmp
push
cltd
cmc
or
into
mov
sbb
mov
and
push
pop
imul
add
pop
test
dec
xchg
mov
ljmp
jnp
pop
mov
adc
sbb
fnsave
mov
sub
xchg
dec
sbb
mov
jecxz
sub
stc
mov
fldt
sbb
ja
sbb
cld
adc
lods
test
push
adc
clc
ljmp
mov
or
shrb
in
mov
pop
adc
or
push
jl
das
add
adc
frstor
into
out
or
roll
movsb
add
push
mov
std
loop
mov
iret
push
lods
test
jl
inc
movsl
daa
cmp
stos
jl
jg
pop
sti
dec
scas
nopl
call
je
fcmove
sti
dec
and
lock
ja
dec
mov
stos
and
in
and
sub
push
push
sti
push
fs
push
clc
scas
fs
sbb
mov
push
mov
dec
push
add
pop
addr16
stos
imul
adc
xchg
add
adc
jnp
push
dec
mov
cmp
outsl
pop
jl
add
jmp
cmc
and
std
cmp
mov
incl
pop
inc
in
push
in
jne
out
shlb
xor
lret
dec
out
mov
mov
hlt
pop
xchg
insl
out
pop
sahf
mov
mov
mov
cmp
jl
adc
lods
lods
push
sbbl
xchg
or
test
imul
xor
rcrb
pop
xor
int3
xchg
mov
inc
nop
push
ret
sbb
ret
in
mov
sub
popf
sbb
mov
test
xor
dec
negl
clc
sbb
lcall
and
and
dec
jp
fs
in
out
fsub
std
push
stc
sbb
cs
ja
inc
lret
das
jmp
ja
hlt
lret
int
stc
mov
mov
xor
push
clc
enter
pop
jge
pop
pop
ss
or
pop
addr16
sbb
das
xor
mov
les
xchg
cmp
dec
das
les
nop
mov
test
arpl
xor
hlt
mov
clc
or
mov
push
sbb
sbb
sbb
pop
sub
xor
mov
jnp
jle
test
mov
jle
in
dec
mov
enter
lods
dec
xchg
xchg
jl
cld
imul
cmp
lret
aad
fiadds
lods
xor
dec
push
jb
mov
xchg
sti
lret
outsl
popf
int3
lods
mov
outsb
subb
xchg
outsl
or
hlt
fldt
ret
fmull
and
mov
inc
outsb
cmp
pop
rcrb
loope
leave
and
out
imul
mov
inc
cli
fistl
pop
mov
xchg
repnz
xchg
push
fdivrl
push
xor
fistps
scas
inc
add
loopne
or
xchg
pop
les
dec
dec
int3
test
jbe
loope
dec
nop
insb
rcl
mov
daa
push
addb
mov
iret
cmp
add
lea
popf
repnz
push
shrb
lods
mov
xchg
std
fldcw
push
sti
dec
or
das
popf
jg
popf
dec
repnz
adc
xor
and
cwtl
aad
sbb
popf
leave
sbb
and
test
int
int
push
repnz
push
test
sbb
mov
and
and
dec
dec
sbb
jg
sarl
test
test
mull
subl
add
adc
andb
mov
fstl
dec
and
fisttpll
and
fdivrp
jo
jecxz
pop
mov
out
std
mov
mov
movsl
dec
out
inc
dec
in
pop
dec
mov
fistpll
mov
mov
ret
int
mov
insl
mov
push
fcompl
cmp
jl
dec
add
mov
lds
scas
cld
rolb
js
and
cmp
in
mov
pop
dec
pop
push
imul
inc
add
mov
cmp
clc
adc
sarb
fdivrl
xor
sub
fdivr
sbb
mov
movsb
scas
pushl
movsb
hlt
cwtl
push
sub
lods
sbb
les
int3
stos
jl
xchg
leave
add
data16
negb
es
or
cli
mov
imul
or
lahf
icebp
lea
jl
adc
cwtl
jg
mov
xor
push
pushf
in
jns
jae
ret
or
sub
pop
sub
and
pop
dec
rcr
mov
int
and
lret
adc
push
inc
xchg
lret
aas
shrl
jp
dec
idiv
test
push
cld
scas
cmp
push
iret
sbb
ret
dec
sbb
frstor
pop
adc
ds
sub
insb
test
enter
jne
mov
mov
aam
test
xor
adc
sbb
aam
lods
pop
mov
cmc
movsb
xor
inc
cmc
test
pop
sub
and
sbb
adc
adc
fsubrs
and
mov
inc
adc
sbb
mov
fwait
push
sub
cmp
insb
ret
xchg
mov
js
cli
pop
repz
cmp
mov
inc
push
aas
inc
test
mov
and
pop
adc
pop
xchg
mov
mov
mov
mov
gs
jmp
cli
fwait
lea
ja
jge
outsb
nop
lods
xor
push
dec
rorb
adc
dec
pop
jb
push
lds
adc
rclb
xor
in
xor
mov
push
stos
loop
pop
mov
add
lret
add
movsl
dec
pop
popf
push
or
mov
sbb
cwtl
sub
sub
scas
lahf
mov
cld
sbb
aaa
loope
or
in
mov
inc
hlt
cmpb
mov
int3
pop
push
iret
jbe
test
imull
ret
push
lods
outsb
inc
dec
call
mov
les
cld
aas
push
imul
mov
ds
cltd
mov
mov
jl
sbb
test
scas
or
aaa
ja
cmp
cs
fsub
sub
mov
mov
sub
xor
xchg
dec
cmp
dec
jmp
dec
shrl
mov
roll
stos
pushf
out
sub
fists
rcll
sub
repz
add
daa
ss
pop
std
jo
lods
mov
cwtl
sub
mov
sbb
sub
cs
add
mov
scas
jecxz
test
jo
dec
lods
das
lahf
das
leave
scas
aaa
push
out
test
outsb
mov
sub
in
xor
sub
cs
pop
fucomip
lods
push
loope
hlt
aam
pushf
pop
insb
push
or
dec
push
pop
adc
sbb
xor
sub
xor
mov
jnp
iret
rorl
dec
ja
push
movsl
xor
jecxz
cwtl
sub
ss
loope
mov
inc
or
jno
add
cld
aam
add
loope
fists
mov
or
add
and
cmp
rolb
ja
out
outsb
pop
inc
stc
inc
fisttpl
repz
and
adc
mov
mov
inc
inc
test
mov
push
loope
js
push
add
or
je
fs
mov
dec
mov
out
scas
int
adc
fwait
mov
sarb
in
mov
insb
lock
insl
test
jno
push
adc
cmp
cld
mov
mov
nop
pop
and
mov
cmp
mov
or
int
outsl
or
fucomip
jae
enter
in
or
mov
das
push
out
xchg
scas
sbb
push
lods
pushf
insl
sub
lods
and
sub
sbb
decb
push
dec
mov
addr16
jl
arpl
jecxz
lods
in
sbb
loope
sbb
push
or
sbb
lock
mov
cwtl
lcall
cmp
push
mov
xlat
push
into
idiv
mov
sub
pop
repz
sub
adc
xchg
shl
adc
xchg
sub
adcb
xchg
jno
rcrb
cmp
pop
enter
xchg
push
and
out
je
out
mov
addl
lret
pop
loope
into
cmp
cmp
cmp
push
sbb
xor
ficompl
xor
das
in
and
in
add
sbb
insb
mov
push
das
cmp
pop
mov
and
ljmp
je
scas
popf
add
aaa
and
add
mov
imul
or
pop
jns
test
fsubl
adcb
sub
mov
out
es
xor
adc
rorl
scas
ret
insl
push
xlat
cmp
push
jnp
pop
mov
jl
adc
and
jl
ja
shll
push
test
jmp
adc
sahf
inc
sbb
adc
loope
lea
daa
in
cmp
decb
aas
jl
mov
pop
es
gs
xchg
or
pop
lods
cmp
movsl
mov
cmp
and
scas
jns
lods
aam
and
adc
xchg
jl
addb
cmp
icebp
sbb
movl
call
cli
fidivl
push
dec
pop
mov
dec
lods
mov
lret
push
scas
test
pop
jbe
push
sti
jg
mov
sti
and
push
popf
xor
repz
mov
cmpsl
and
push
mov
mov
mov
fcoms
sub
lea
adc
cld
or
cmp
mov
xchg
outsl
test
mov
enter
movsl
pop
dec
add
push
enter
ja
imul
iret
and
imul
mov
inc
sbb
enter
call
mov
sbb
push
clc
push
jno
clc
dec
rcpps
enter
add
movsb
iret
pop
push
popf
adc
imul
jmp
sbb
cli
pmullw
xchg
loop
pushf
mov
adc
int
sub
fsubl
test
mov
fstps
and
mov
jle
adc
daa
fs
je
loopne
cld
pop
jge
rorl
mov
popf
or
test
sub
or
outsl
not
sbb
lret
sbb
imul
inc
rorl
fadds
push
mov
sub
popa
cltd
dec
inc
shlb
icebp
xchg
aam
jecxz
shl
push
sahf
sbb
je
xchg
movsb
mov
lahf
popf
xchg
mov
popf
das
xchg
sub
hlt
push
xlat
or
sarb
popf
ss
pop
add
and
dec
adc
clc
mov
fs
xchg
sbb
and
push
es
in
or
xor
mov
or
xor
mov
into
shrl
sub
mov
and
pop
test
inc
rclb
addr16
mov
pushf
arpl
pusha
scas
mov
or
int3
aaa
cmp
jnp
cmp
sti
pushf
jne
mov
pop
lret
pop
mov
enter
dec
int
push
push
fidivs
dec
rorb
jns
test
fimull
mov
xchg
dec
sub
xchg
or
test
cmp
addr16
mov
dec
stc
push
xchg
cs
popf
sbb
lret
xlat
sbb
add
jo
mov
jg
adc
ret
adc
push
push
jge
pop
adc
lds
insl
inc
or
stc
jmp
loope
mov
cli
sbb
add
cli
and
rolb
push
into
jp
call
negl
sub
sub
sbb
inc
pop
insl
jb
dec
push
pushw
sbb
test
js
lea
mov
mov
or
push
jl
movlps
sub
cmp
bound
adc
push
sbb
adc
push
int3
sub
pop
outsl
lock
int3
sub
iret
cmp
andl
dec
dec
movsb
lret
mov
popf
dec
ds
cmp
mov
mov
cmp
and
xchg
adc
lahf
mov
addr16
enter
in
xor
sbb
popf
push
xor
lods
data16
movsl
out
pop
test
mov
sbb
fdivl
inc
xor
adc
mov
sbb
daa
sbb
sahf
imul
mov
popa
pushf
inc
loop
daa
daa
pop
imul
lret
xor
xor
mov
sbb
popa
jb
fs
dec
sbbb
stc
push
jle
in
mov
pop
js
cli
inc
out
fs
mov
loope
cld
leave
cmp
mov
xorl
xorl
sti
cmp
mov
out
mov
mov
or
sbb
pushl
mov
outsb
sbb
outsb
ror
inc
ret
nop
sbb
cli
sbb
mov
and
or
sub
cs
sbb
dec
jl
sub
das
adc
adc
adcb
cmp
incl
repnz
stos
or
out
sbb
pop
pop
mov
or
leave
add
push
mov
ljmp
mov
xchg
mov
test
inc
scas
insl
pop
aas
mov
imul
pop
push
sub
gs
stos
adc
hlt
inc
scas
mov
insl
push
jge
sub
pop
and
lods
cmpb
cmc
aaa
mov
lock
and
sbb
push
fisttpl
in
cmp
mov
add
js
out
push
cmp
dec
xor
and
inc
shlb
fcompl
pushf
scas
repz
repnz
ds
jle
and
sbb
mov
insb
ljmp
or
pop
pushf
insl
rcrb
push
jl
mov
sub
fwait
out
addr16
cld
mov
outsl
sahf
cli
loope
lret
lods
pop
or
cli
movsl
pop
ljmp
test
decl
jne
mov
jl
enter
in
cmp
inc
adc
adc
mov
fs
sarb
stc
inc
jne
dec
inc
aam
mov
mov
inc
sub
cwtl
int
cmp
push
cmp
ja
xor
sbb
xor
inc
shll
or
das
add
repz
outsb
sbb
sub
sti
xor
cmc
xchg
inc
das
test
ret
loope
pop
repz
sbb
adcb
in
aam
scas
and
mov
lods
cmp
dec
stos
stc
jb
movl
xor
in
adc
push
outsb
repz
enter
clc
enter
cld
sbb
mov
jmp
pop
adc
mov
dec
shr
ret
sub
movsb
gs
pop
mov
in
in
xchg
aas
sbb
mov
rcrl
pop
and
xchg
imul
jmp
fcmovnu
or
sbb
outsl
bound
pusha
jnp
sub
cmp
inc
pop
jle
pop
lods
test
push
stos
inc
xor
idivb
push
mov
and
mov
movsb
sbb
xor
mov
out
sub
test
xor
sub
fistpl
lods
adc
mov
and
xchg
adc
stos
arpl
das
scas
mov
lcall
cmp
lods
or
push
aas
out
rcll
leave
in
add
fistpll
and
jecxz
sbb
outsb
movsl
pop
adc
fcomps
sub
lods
and
hlt
lcall
cmp
add
adc
mov
out
inc
scas
dec
das
adc
adc
adc
mov
xor
or
ds
inc
mov
dec
je
fsubl
xchg
mov
pop
pop
aam
in
pusha
mov
ficomps
rclb
movsb
fcmovnb
jge
movsl
hlt
mov
mov
dec
aam
dec
and
clc
int
and
sar
daa
iret
stos
out
pop
and
iret
push
iret
xlat
pushf
loope
sub
int
arpl
add
cmpsl
mov
dec
jne
mov
dec
pop
cmp
or
or
lods
cmc
fs
mov
iret
cs
lock
mov
add
in
mov
xor
cmp
je
int
adc
sbb
lret
lock
repnz
js
and
push
enter
ljmp
and
jno
inc
xlat
sbb
nop
sbb
leave
scas
imulb
jge
and
cmp
sub
enter
fwait
sbb
lea
add
movsl
pop
mov
and
pop
cld
mov
lods
cld
dec
dec
lret
daa
and
lods
icebp
or
xchg
mov
js
rcll
inc
rcl
push
push
fbstp
popf
xchg
xchg
fildl
gs
lods
jbe
adc
cmp
push
pushf
jns
lret
pop
cmp
dec
in
in
cs
addr16
outsb
lods
in
mov
js
cld
bound
sub
mov
pop
push
inc
dec
push
push
das
xchg
inc
ds
fnstenv
push
xchg
outsl
cmp
scas
sub
stos
outsl
subl
cmp
test
cmp
cmpsl
sub
imul
lock
jne
jl
mov
adc
in
xor
xor
push
hlt
jo
ficoml
cmp
add
cs
cmpsb
loope
cmc
outsl
pop
in
mov
cmpsb
fisttpll
leave
das
adc
adc
sub
mov
aam
dec
sbb
jl
ret
rorb
mov
in
loopne
jl
ja
cmp
jo
sahf
push
lret
nop
aad
adc
sbb
jmp
jne
int3
inc
adc
fistps
or
jl
lret
mov
jmp
sbb
mov
push
mov
jne
or
push
fs
mov
xchg
fnsave
cltd
sbb
jge
sbb
jecxz
cmpl
and
nop
in
pushf
xchg
push
jl
adc
mov
dec
sbb
pop
pop
movsb
xor
xchg
adc
xchg
cmp
cwtl
cs
push
iret
mov
xor
pop
fisubrs
out
xchg
iret
jns
fildll
divb
hlt
notb
mov
mov
jmp
iret
stc
std
fstps
dec
add
gs
test
sbb
in
mov
pop
or
push
push
test
xor
nop
dec
sahf
adc
xchg
enter
aam
popf
in
jno
jmp
in
mov
push
mov
jecxz
cs
and
mov
dec
jmp
add
dec
xor
push
pop
cmp
mov
fcompl
push
out
pop
inc
call
mov
stc
xor
jno
mov
js
leave
ds
and
stos
and
fcom
add
dec
nop
insb
xor
dec
hlt
push
jnp
sarb
xchg
inc
dec
mov
or
mov
pop
xor
test
adc
mov
pop
xor
cmc
sti
pop
push
jb
lds
adc
push
in
repz
lods
sub
sbb
xchg
in
fsubrl
cmc
or
mov
mov
lahf
mov
setg
add
push
jmp
add
cli
push
xor
xchg
mov
test
jmp
xchg
orb
mov
pop
stos
push
xlat
ret
mov
jnp
outsb
rcrl
ficompl
or
dec
stc
push
cmp
sub
pop
xor
fadds
das
cmp
aad
jl
add
push
dec
shrl
jns
add
sbb
arpl
xchg
sbb
push
jns
pop
decl
or
aaa
push
rcrl
pop
mov
das
cmpsl
cmp
fwait
enter
add
add
dec
mov
xor
inc
inc
shll
pop
mov
cwtl
push
and
je
push
fistps
adc
cwtl
pop
add
dec
sbb
sbb
sub
and
dec
int3
loop
xchg
sub
in
gs
in
mov
push
pop
stos
lcall
aas
adc
mov
adc
sbb
test
and
outsb
negl
xor
xor
jecxz
xor
pop
in
sub
fistl
pop
enter
mov
pop
into
or
jg
adc
cmp
sub
xchg
repz
push
in
or
cmp
pop
xor
iret
pop
pushf
popf
pushf
testl
lea
xor
cmpsb
inc
aam
pushf
dec
gs
jne
xchg
dec
dec
lcall
push
pop
push
jbe
and
xor
outsb
sub
pop
cmp
sbb
jb
inc
xor
xor
xchg
push
jo
imull
addr16
js
xchg
mov
mov
xor
pop
cmp
mov
pop
jl
int
stos
pop
push
das
xchg
pop
or
and
jl
cld
ds
or
imul
push
ljmp
jbe
and
cmp
das
loope
or
mov
and
adc
pop
and
icebp
pop
dec
cmp
adc
push
cmpsl
and
cwtl
push
and
dec
xor
imul
sub
lods
xchg
popl
sti
pop
dec
lds
jl
dec
xchg
or
test
pushf
xlat
jl
dec
jno
pop
push
lock
xchg
jl
jl
xchg
fistpl
lock
aad
clc
pop
sub
into
lahf
mov
cs
dec
das
rsqrtps
das
int
push
nop
lea
cwtl
dec
push
or
into
cmc
data16
mov
dec
stos
test
adc
dec
shrl
in
je
dec
push
ss
out
das
pop
jnp
outsb
rcrl
adc
test
scas
cmp
fisttpll
rcrl
das
mov
rolb
stc
mov
push
lea
xorl
mov
pop
jne
fidivrs
aam
loop
subl
jb
lods
cmpsl
xor
pop
aad
pop
imul
nop
and
lea
jne
imul
push
inc
xchg
sbb
mov
adc
packsswb
jns
mov
cmp
jg,pn
cmpb
int
incl
cmp
sub
sbb
std
push
decl
push
mov
xor
sbb
push
push
pushf
int
lea
xchg
or
dec
filds
xchg
fidivs
lods
mov
and
push
cmp
push
leave
push
jg
mov
jbe
adcl
inc
and
insl
cmc
cld
in
dec
sarb
xchg
jge,pn
add
or
lods
dec
and
idivb
xor
das
popa
xor
sub
dec
jl
xor
popa
repz
js
mov
cwtl
mov
mov
xor
adc
fmulp
mov
mov
inc
and
in
dec
fbstp
pushf
push
xor
int
sahf
cmp
xor
dec
in
pop
cmpb
insl
test
or
fistl
lcall
add
mov
push
stos
shl
xor
aas
xchg
aad
fs
cwtl
test
fsubrs
push
mov
dec
lds
push
cmp
je
fs
pop
popf
push
test
adc
imul
xchg
pop
adc
test
dec
insb
scas
fdivs
dec
iret
jmp
ss
inc
jne
mov
push
push
in
cmpsl
push
or
pop
mov
cmpl
mov
add
xor
push
xor
mov
sbb
sub
dec
lret
push
aam
out
sub
mov
push
add
mov
dec
pop
pushf
and
rcr
out
xchg
daa
jnp
out
rcr
pop
out
lods
popf
ja
gs
xor
jo
xchg
adc
test
aad
and
fst
clc
pop
mov
je
out
cmp
pop
push
jg
int3
adc
in
mov
les
in
mov
push
cmp
lret
push
lock
xchg
je
adc
js
jl
jl
test
cmpsb
push
pop
mov
cmp
leave
lods
mov
or
gs
or
mov
jp
call
movsl
cmp
lahf
lods
sbb
lcall
pop
fiadds
fdivl
jecxz
dec
in
mov
test
xor
inc
mov
outsb
pushf
in
scas
sub
xor
test
xor
cwtl
adc
aas
movsl
cwtl
adc
sub
xchg
jae
movsb
inc
mov
cmp
cmpsb
fs
fucom
or
cmc
mov
pop
xchg
adc
insl
and
fsubr
inc
ds
cli
ja
das
cmp
imul
sbb
or
xchg
mov
leave
mov
iret
cld
sub
nop
popf
fcmovnu
adc
xlat
or
pushf
sbb
loop
jo
sub
push
dec
pushf
cvtps2pi
push
mov
lea
or
int
cltd
into
mov
inc
gs
xchg
aad
inc
or
lods
push
addr16
insl
xor
ds
mov
mov
bound
cli
xchg
arpl
cli
out
push
adc
and
idivb
pop
or
mov
xchg
jg
xor
outsl
jl
and
jbe
loopne
imul
cltd
or
sbb
aad
icebp
and
pop
rcr
cmp
mov
pop
adc
ficompl
loop
ss
push
daa
push
test
adc
out
dec
nop
pop
adc
cmp
dec
stos
or
dec
jo
js
pop
popf
pushf
leave
nop
insl
push
mov
jge
and
cmp
dec
rcl
inc
or
jl
xlat
lods
and
lods
inc
sub
mov
std
adc
nop
sarl
adc
repz
jne
mov
mov
xor
sahf
mov
xor
mov
push
xor
adc
jl
dec
mov
adc
or
mov
jp
cwtl
lea
jl
lret
js
xor
cwtl
add
sub
shl
mov
adc
mov
cmp
gs
popf
aas
aad
and
cmpsl
repz
sbb
push
cmp
lahf
test
aaa
and
je
inc
in
int
ljmp
das
jl
movsb
jle
push
lods
adc
xchg
mov
mov
mov
jg
xchg
jb
in
add
arpl
mov
dec
pushf
pusha
lret
fucomip
das
adc
int3
xor
inc
in
les
mov
insl
lods
int3
jge
dec
sbb
sub
test
aaa
fbld
xor
pop
adc
mov
mov
aas
and
mov
sbb
push
in
ror
dec
lock
fnstcw
test
and
cld
loopne
push
jp
mov
mov
and
loopne
cld
sub
sub
push
loopne
pop
ja
push
pusha
push
lret
sub
imul
add
or
scas
adc
lods
and
ret
push
sub
mov
ss
lcall
mov
in
popf
sub
cmp
dec
fisubrs
inc
dec
push
stos
insb
add
jg
push
xchg
push
and
sub
out
push
insl
int3
int
mov
push
jg
imul
mov
xor
fcoml
jl
xor
add
mov
lods
add
xor
test
lods
dec
push
sub
out
and
xor
jl
sub
add
scas
fs
jae
adc
pop
and
push
push
movsb
es
and
pop
and
aam
push
stos
out
jge
insb
cwtl
jo
lods
and
jle
subl
xor
ljmp
sbbb
js
gs
pop
lods
inc
mov
negl
lods
std
test
sbb
push
nop
roll
imul
xor
pop
mov
js
fcmovb
and
int
mov
ret
pop
push
pop
pop
xor
and
mov
or
out
adc
dec
and
adc
lret
cld
aaa
cli
xchg
mov
jl
test
sub
pop
mov
adc
gs
mov
pushf
xchg
leave
jbe
and
add
and
dec
cmp
nop
mov
sub
inc
test
aam
mov
or
fs
pop
insb
mov
or
ds
cwtl
enter
jp
dec
jl
fisubl
push
cld
and
fistl
gs
fmuls
adc
mov
test
mov
add
push
add
lret
andb
jge
in
xor
add
xchg
pop
inc
mov
sbb
mov
lcall
out
int3
mov
rcrl
popf
push
or
outsl
jb
sbb
or
mov
shrb
pushf
xor
cmp
cmpsb
lahf
dec
sub
push
insl
xor
je
lods
or
pushf
push
insb
mov
add
and
popf
cmp
gs
hlt
pop
pop
adc
iret
xchg
popf
sahf
add
add
add
xchg
popf
or
push
pushf
popa
dec
jne
enter
fucom
xchg
sbb
and
xchg
inc
je
sbb
jecxz
xor
sub
mov
lea
jecxz
enter
aaa
movsl
je
imul
lahf
insb
aad
mov
repz
xor
and
outsb
test
dec
xor
adc
cwtl
pop
cmc
pop
outsb
popf
ja
insb
cltd
pop
nop
pop
vmovhps
sbb
cmc
sbb
sti
lret
jle
pop
sti
push
pop
dec
enter
push
sub
sbb
fs
out
es
cld
fildll
pop
sub
fs
jle
inc
ss
jnp
gs
fisubrs
cltd
adc
push
or
and
pop
orl
arpl
xchg
mov
mov
js
pop
scas
add
ljmp
ja
dec
pushf
addr16
gs
xor
adc
and
jns
push
cmp
test
cmp
mov
sbb
in
mov
push
mov
lea
push
jge
in
cmp
mov
xor
sbb
push
push
mov
filds
dec
xchg
jge
jmp
mov
inc
call
pop
hlt
test
jbe
test
sbb
movaps
push
movsl
cmp
cmp
inc
and
pop
push
shl
mov
pop
ret
jne
les
adc
out
jp
mov
popa
stos
pop
xor
jae
pop
jb
lods
loop
pop
jge
aam
in
mov
mov
jbe
push
pushf
xchg
pop
insb
or
shrb
xchg
mov
push
nop
pushf
mov
ret
ja
xchg
push
mov
inc
scas
xchg
adc
push
jg
mov
and
lret
xchg
dec
mov
faddp
daa
lret
das
fdivrl
and
sarl
jns
mov
jo
ret
outsb
dec
push
and
mov
lahf
cmp
lret
mov
mov
pop
sub
in
xor
inc
inc
mov
std
das
and
sub
lods
outsb
jb
xchg
adc
add
clc
sti
movsb
cwtl
jae
and
cs
test
hlt
es
fimull
imul
shr
adc
sbb
xchg
dec
in
jo
dec
lock
es
cmc
imul
stc
into
jne
les
push
test
das
add
xchg
fldcw
sub
sub
test
fcompl
lods
lahf
movsb
int
jbe
xor
pushf
xor
and
ret
jno
int3
and
push
inc
dec
enter
push
mov
cmp
dec
push
insl
push
test
sub
shrl
gs
sarl
cltd
shrl
out
pop
in
push
fstpl
in
sub
jb
lds
push
push
scas
ret
push
sbb
loopne
sub
sbb
dec
pop
pusha
push
shld
in
cwtl
and
adc
cmp
shll
pushf
insl
out
iret
int
dec
xor
mov
out
or
xchg
stc
mov
pop
cmp
pop
jno
adc
js
sahf
sub
jg
mov
int
test
out
rcr
xor
fbstp
add
arpl
loopne
mov
ljmp
iret
addb
xor
das
cmp
imul
arpl
bswap
lea
outsb
popw
out
cwtl
lods
outsb
insb
xor
cmp
fdivrs
adc
adc
jae
stos
adc
aas
mov
mov
dec
loop
int
xlat
enter
orb
cmp
dec
adc
jl
clc
loope
push
fcoml
xchg
cld
repz
push
dec
insb
fstps
jmp
pop
push
push
pop
cmpsb
xor
sbbl
cmp
cmpsl
sbb
jle
inc
dec
outsb
out
lock
sbb
enter
mov
dec
in
jnp
sbb
push
push
and
rorb
add
clc
adcl
test
or
fwait
xorl
in
dec
adc
xchg
mov
push
sub
xor
testb
testl
mov
adc
dec
xor
rep
add
loopne
sbb
xchg
xchg
lods
stc
incl
rcrb
sub
ret
mov
insb
loope
stos
sbb
out
nop
shlb
mov
adc
push
dec
pop
lods
test
mov
mov
test
sbb
ret
jg
xchg
jns
dec
cmp
ds
movsl
push
add
aam
adc
rcll
dec
jge
pusha
neg
scas
adc
lods
mov
and
stos
adc
and
jmp
xchg
add
pop
pop
sbb
cmp
push
mov
imul
out
cld
aam
lret
lea
and
xchg
inc
aam
xchg
jp
pop
jo
jmp
cmp
cmp
arpl
cli
mov
dec
cmp
aas
jmp
pushf
pop
pop
mov
mov
repz
pop
cli
lahf
push
mov
pop
add
je
sub
dec
dec
add
or
add
push
add
jl
lds
xchg
inc
fnstsw
int
mov
adc
test
cwtl
das
loope
mov
sub
dec
mov
insb
adc
add
dec
scas
mov
xchg
shlb
jns
dec
adc
sub
mov
and
sub
call
shl
in
sub
and
push
pop
nop
sub
shrb
adc
adc
xchg
cmc
adc
xchg
in
nop
dec
jae
push
dec
or
inc
iret
sbb
jnp
adc
sbb
adc
jbe
mov
leave
xor
imul
rclb
sbb
xchg
movsl
jbe
xor
repz
fcompl
fwait
les
jecxz
lcall
gs
insb
je
test
fcmovu
ret
in
jo
rolb
xchg
dec
les
and
xchg
dec
cwtl
in
sub
incb
add
xor
ds
mov
xor
add
sti
ja
and
popf
int3
sbb
and
ss
jb
popw
mov
pushf
adc
push
inc
insl
movsl
and
add
popf
lods
add
inc
pop
outsl
and
cmp
mov
cmp
jg
and
push
inc
sti
dec
fdivl
shlb
sub
aam
dec
cwtl
jecxz
das
lods
enter
cld
sub
xor
sub
fstps
and
ss
lods
pushf
push
and
cmpl
fidivrs
sub
cld
outsl
jge
repz
pop
jecxz
cmp
xlat
or
lret
sub
ret
or
dec
nop
dec
cwtl
les
sub
gs
in
inc
js
dec
sbb
fs
xchg
insl
hlt
out
lret
xor
push
sahf
and
dec
xor
or
loope
inc
in
js
push
repz
jmp
sbb
mov
mov
dec
pop
jge
push
or
mov
dec
addr16
lret
outsb
daa
fcoml
in
xor
lods
or
or
faddl
ss
cmp
popf
sbb
jl
mov
rcrl
je
inc
add
lods
adc
fsubrs
mov
mov
dec
out
push
add
add
clc
or
mov
and
push
inc
adc
xchg
imul
dec
ret
lock
adc
and
pop
inc
cmp
xchg
mulb
out
ret
clc
leave
xlat
inc
sbb
and
cmpsb
xchg
dec
pushf
lret
and
push
sub
mov
or
cld
cmp
xor
xchg
lahf
jle
div
pop
pop
cmpsb
xor
shlb
lret
xchg
pushf
sahf
push
sub
jne
or
loop
setns
and
fs
pusha
fdivrl
adc
popf
in
add
or
mov
jl
fnstsw
inc
inc
ja
ret
mulb
imul
add
or
push
out
mov
ss
add
jle
loopne
xchg
push
int3
popf
int
mov
cs
les
aaa
mov
popa
dec
imul
xor
adc
in
scas
sub
cmp
mov
adcl
das
je
pop
cmp
pop
icebp
movsl
cmpsb
pop
movsl
aad
push
xchg
push
dec
stos
inc
addr16
sub
cmp
mov
lahf
clc
scas
jg
pop
and
mov
push
cmpsb
dec
xor
movsl
frstor
int
dec
push
fmull
push
jmp
xor
mov
jno
cwtl
lods
cmp
xor
inc
or
mov
scas
sahf
rcll
sub
pop
ss
and
outsl
stos
dec
cmp
notb
dec
out
add
sbb
mov
pop
scas
lods
das
outsb
lret
push
add
mov
xor
cmp
jmp
sub
pop
sbb
sbb
enter
sub
xchg
or
sbb
aam
cld
test
mov
stos
fstp
xchg
jecxz
jmp
pop
cmp
jmp
pop
in
xor
decl
aaa
cs
leave
push
shr
jb
lods
inc
pop
xchg
mov
clc
pop
cmp
jmp
cmp
mov
stos
in
nop
mov
das
and
aad
das
aad
adc
rorb
push
movsb
fs
mov
nop
out
adc
in
cmp
mov
sub
mov
push
push
aaa
sbb
add
mov
repz
scas
push
xchg
pop
aas
getsec
mov
std
imul
leave
push
dec
test
ss
push
cmc
push
sub
dec
jp
loop
not
inc
xchg
in
pop
or
xlat
fisubrl
mov
sbb
sbb
fildl
sbb
movsb
xchg
xor
mov
shl
js
xor
mov
mov
js
sbb
lods
mov
pop
xchg
mov
lods
pushf
arpl
jo
and
movsb
cmp
add
inc
adc
repz
and
subb
int
mov
in
or
xchg
mov
in
xchg
pop
sbb
sub
rcrb
mov
stos
nop
cmp
adc
bound
mov
mov
mov
adc
and
jne
or
inc
cmp
iret
mov
push
sbb
lock
xor
dec
aam
and
sbb
das
xor
inc
cli
scas
and
mov
and
bnd
push
inc
pop
dec
mov
pushf
int3
adc
pop
int
int
stc
je
pop
lcall
aam
dec
pop
stos
jg
xor
pop
test
stc
cmp
inc
sbb
call
mov
in
shl
sub
test
pusha
and
insb
pop
int
sti
xor
adc
fimull
inc
pop
xor
rcrb
pop
xor
push
test
lods
je
push
pop
outsl
adc
cwtl
dec
adc
jmp
jns
mov
das
add
cmp
insb
adc
mov
mov
push
push
jmp
into
mov
mov
arpl
xchg
outsl
sbb
jmp
pop
xor
mov
sub
repnz
testl
dec
ds
test
dec
dec
mov
lods
shr
shlb
push
mov
cmp
popf
inc
dec
mov
fidivrs
and
js
neg
fildll
push
pop
xchg
adc
push
fistps
and
sti
jle
adc
add
sbb
cmp
sti
fwait
push
mov
fs
sbb
or
inc
push
pop
aad
push
push
cmp
pop
and
stc
lods
jmp
push
sbb
lods
sbb
movsb
stc
add
adc
or
mov
add
mov
or
jle
mov
frstor
shlb
mov
loope
outsb
sarl
mov
outsb
jmp
sub
jle
mov
jle
jp
push
lcall
popa
sbb
adc
pop
ror
aad
jle
dec
cmp
es
ja
xor
and
shll
popf
stos
push
sarl
jl
cmp
pop
and
push
xchg
shr
scas
ss
jl
frstor
dec
test
jmp
addr16
jle
movsb
or
push
shlb
fsts
jl
and
test
imul
jmp
xor
push
pop
test
jb
and
dec
xor
insl
adc
cltd
and
push
mov
in
jbe
fsubrs
xor
lods
lret
jg
lods
push
xlat
fsubl
aaa
sub
pushf
dec
aaa
sub
fldenv
dec
loopne
adc
in
xor
int
sbb
je
stos
pusha
fsubp
ror
fs
mov
sbb
hlt
incb
sbb
sub
test
imul
cld
push
mov
mov
jne
aam
lods
sbb
sub
pop
sub
shll
repz
xor
mov
ds
xchg
cmp
jnp
test
inc
xchg
in
enter
mov
add
adc
sahf
mov
stos
jns
addb
rcr
cmp
lods
mov
pop
lahf
mov
or
in
lods
adc
cs
int3
std
jnp
and
mov
out
ror
dec
mov
push
popa
mov
pop
sahf
mov
ds
inc
ret
push
das
lea
and
or
out
int3
jl
int
icebp
jns
xor
addb
jbe
and
xchg
dec
lret
inc
cmp
inc
mov
pop
push
mov
out
jb
or
out
cmp
adc
stc
aad
cmp
add
popf
dec
pop
hlt
fs
xor
or
cmc
hlt
push
stos
sbb
arpl
and
push
xor
loopne
stos
jl
jb
ljmp
mov
add
outsb
outsb
pop
sbb
mov
sarb
mov
xor
ror
sahf
cmp
xor
int
sahf
std
or
and
push
in
push
push
xchg
and
lahf
jle
mov
adc
jo
vpmacsdqh
xchg
jl
roll
or
fnsave
xor
xor
inc
sub
out
sbb
mov
movsbl
subb
xor
push
xchg
inc
xor
jb
mov
popa
test
adc
popf
sub
add
mov
cli
pushf
jnp
idiv
outsb
xchg
pusha
mov
jg
sub
and
adc
sbb
mov
ja
jg
mov
pop
jl
dec
xchg
cmp
repz
not
stos
pusha
fcomip
in
popf
pop
jae
push
test
and
dec
ss
add
mov
sti
inc
cmpb
mov
mov
dec
jg
test
inc
rorb
mov
clc
and
mov
pop
clc
stos
loope
pop
jg
test
jecxz
pop
cmp
in
lods
or
mov
mov
lods
lret
jle
scas
cli
fidivrs
jecxz
pop
cmp
pop
popa
push
ss
dec
loopne
or
sub
sub
scas
aad
loopne
xchg
ror
mov
scas
sbb
cmc
ds
cmp
push
mov
lea
xor
int3
xchg
fwait
int3
call
push
mov
call
xchg
fstpl
cmp
cld
push
lds
int
and
popf
adc
mov
or
cmp
stos
xlat
xchg
dec
aas
nop
cld
in
pop
ret
and
or
ljmp
dec
xchg
mov
mov
add
jl
cmp
pop
mov
bound
xchg
stos
adc
fcmovne
inc
push
mov
dec
pop
imul
push
daa
aam
pop
pop
daa
and
jl
ljmp
lds
cmp
xor
or
inc
cld
mov
jecxz
inc
loopne
fwait
lds
aam
cmpl
loope
mov
insb
lahf
sub
mov
or
pushf
jns
or
push
loopne
int
ja
enter
enter
lods
mov
add
gs
fs
push
dec
mov
scas
jne
mov
xchg
dec
jmp
push
mov
cmp
aad
xor
sub
xor
push
sbb
dec
mov
pop
jbe
pop
dec
sub
xor
jg
sbb
cwtl
xor
and
sbb
int3
sbb
test
push
xchg
adc
test
in
jne
fdivrl
and
sub
jl
cmp
aad
jle
pop
mov
mov
lds
sub
stc
or
dec
mov
xor
loope
cltd
and
jns
mov
mov
fcmovne
arpl
dec
xchg
add
and
pop
push
xchg
pusha
adc
sub
aad
test
and
sub
cmpsb
mov
sub
lahf
call
cs
loope
les
dec
sar
sbb
mov
lret
int
shll
xchg
repz
fsubrl
xchg
and
loope
sti
int3
das
mov
in
test
stc
repnz
cmpsl
mov
daa
sub
test
sub
add
test
cmpsl
out
pop
pop
aad
test
add
sub
mov
int
cmp
lahf
sbb
push
in
adc
and
dec
mov
fnstenv
icebp
mov
jl
repz
mov
adc
mov
pop
popa
push
mov
jl
bound
pop
loope
in
das
push
pop
pushf
iret
enter
mov
stc
in
stos
and
adc
rorl
jecxz
ret
lds
inc
dec
push
and
adc
mov
ret
mov
dec
sub
cmp
mov
sub
cmpsl
or
cmpsb
test
cmc
sub
inc
jl
arpl
jno
inc
xor
fs
mov
jno
int3
inc
aam
out
in
shlb
or
out
jl
add
xor
pop
jo
and
popa
push
mov
dec
xchg
mov
inc
inc
lods
inc
faddl
lahf
dec
adc
xor
or
movsl
in
mov
xchg
xchg
hlt
test
fisttps
adcl
cmp
cmp
pushl
xchg
jne
enter
pushf
sarb
gs
popa
adc
pusha
scas
inc
ret
int
inc
mov
push
cs
mov
fistpll
mulb
push
jge
sahf
push
mov
and
cmp
mov
mov
push
inc
add
push
stc
dec
xor
addr16
sub
xor
jbe
add
test
or
cmp
popa
push
cmp
out
fists
xor
test
pop
sub
adc
test
nop
sbb
adc
insb
fbld
jge
sbb
aad
dec
sarl
adc
mov
jbe
mov
lahf
dec
lret
das
cmp
jl
sub
pop
mov
jg
fidivs
dec
int3
xlat
dec
movsb
push
leave
pushf
filds
jae
cmp
test
cmp
xchg
ss
inc
and
aam
inc
mov
test
dec
das
push
cmp
sub
fidivs
lock
sub
push
or
adc
xor
data16
lods
and
fcoms
cmp
lods
sub
jne
inc
dec
std
gs
xchg
out
push
sub
ds
push
es
dec
jp
movsb
rcrl
nop
popa
lahf
gs
imul
adc
sbb
shlb
and
daa
and
sbb
xor
mull
jle
jge
sub
je
popa
shl
lock
pusha
xchg
or
int
lds
sub
fisttps
or
xlat
andl
int
pop
pop
lret
clc
out
mov
stos
test
sub
in
gs
adc
shl
inc
xchg
pop
shlb
shlb
scas
ja
sbb
or
fabs
mov
adc
ljmp
and
loope
or
jae
int3
xchg
pop
push
mov
loopne
sub
jmp
loopne
ja
inc
mov
mov
xor
ret
mov
or
jo
jns
sbb
push
ljmp
int3
lret
xchg
pop
and
mov
xor
cmp
xor
movsb
jne
and
test
dec
negl
fsubrs
pushf
dec
fchs
add
jg
shrb
lahf
lods
dec
pop
lahf
or
dec
cmp
shrb
cmp
sarb
mov
stos
cld
jg
xor
daa
and
xor
or
mov
cmp
adc
lahf
ss
in
dec
cwtl
and
mov
or
call
xchg
fldl
xor
test
mov
fstpl
inc
jnp
cmp
leave
fs
outsl
insb
sbb
loopne
adc
int
movsl
inc
mov
frstor
int
add
cmp
scas
pop
mov
add
and
sbb
sub
imul
clc
rcrl
mov
add
sub
sub
loop
jle
sbb
notl
sub
xor
loope
dec
jb
sub
push
stos
sub
into
divb
ss
cmp
lahf
sub
xchg
jmp
mov
out
call
test
std
lahf
jmp
or
test
cmp
push
xor
xchg
ret
mov
leave
scas
popf
lods
cli
ret
pmaxub
or
mov
fnstsw
or
shll
xorb
adc
or
sbb
lock
push
mov
mov
cmp
out
mov
sbb
in
fdivrl
sbb
popf
pop
notb
les
xchg
fmull
hlt
xchg
jge
xor
push
cmp
test
testl
and
sbb
dec
adc
or
neg
push
xor
sbb
dec
sbb
mov
fwait
mov
and
xchg
adc
aad
scas
fiaddl
mov
inc
popa
cmp
inc
loope
and
adc
sbb
push
push
jecxz
jae
scas
jno
mov
gs
xor
adc
inc
ljmp
and
adc
stos
ljmp
adc
lods
outsb
cmp
outsb
mov
jmp
sub
cmpb
lret
adc
aaa
mov
push
cmp
inc
pushf
ret
sbb
jg
daa
mov
arpl
outsl
mov
sbb
mov
les
int
adc
xchg
das
pushf
xor
push
sbbl
lahf
add
cltd
mov
les
mov
cmp
int3
mov
clc
insl
pop
cs
dec
and
ljmp
push
push
into
imul
out
push
jmp
inc
in
adc
popf
jp
aam
and
xor
cmc
lods
push
popf
cmp
jecxz
xor
mov
ds
sbb
enter
pop
iret
mov
outsb
loop,pt
add
mov
jle
lahf
push
xchg
int3
push
fisttpl
jl
jg
das
cmp
dec
adc
inc
nop
dec
mov
push
enter
andb
adc
dec
shll
jl
xor
fnstenv
dec
mov
fs
out
movsb
ss
rcll
ret
nop
fnstenv
in
in
out
pop
push
lods
sti
mov
inc
mov
ss
dec
lret
lods
stos
pop
test
add
std
mov
pop
lcall
popa
add
mov
mov
loope
pop
rcr
ss
cs
testl
adc
jp
cmp
mov
mov
adc
mov
shr
data16
cli
popf
out
push
sub
and
push
lret
lock
mov
int3
xchg
inc
and
insb
or
testb
mov
outsb
pop
arpl
shll
int3
pop
fistl
testl
dec
pop
push
out
adc
in
out
cmpsb
int
xor
jp
outsl
pop
movsw
fs
jl
pop
lret
mov
sub
notl
std
sub
xchg
adc
and
fadds
popa
addr16
aas
icebp
shl
pop
std
fsubl
popf
cmp
mov
pop
fnsave
imul
insb
xchg
mov
fimuls
adc
mov
ljmp
mov
cs
test
pushf
cwtl
cld
sarl
aam
in
test
mov
pop
mov
adc
mov
imul
lcall
cmp
dec
pop
dec
aam
or
scas
sub
mov
fstps
pop
push
mov
add
cwtl
ss
pop
jb
mov
cld
or
push
xor
and
and
cwtl
cmp
cmp
inc
mov
sub
sbb
pop
andb
mov
in
or
or
sahf
stc
pop
nop
lahf
xor
lahf
pop
pop
or
jl
mov
dec
ja
gs
movsl
je
and
test
and
lret
fstl
movsl
ret
mov
pushf
adc
add
pop
fmuls
inc
cmp
pop
cmpsb
fsubs
xchg
push
je
sbbl
je
push
fstl
xchg
sti
push
mov
pop
aam
fidivl
jl
sahf
sub
inc
pop
cs
aas
jl
pop
and
out
fcompl
fsubl
test
cli
cmp
lret
ds
mov
sbb
xchg
stos
addr16
pop
out
cwtl
adc
movb
sub
mov
repnz
jne
lcall
mov
pop
jl
sub
enter
out
xor
push
cmp
sub
dec
fisttps
stos
sub
mov
sbb
addl
lods
or
mov
ja
push
or
jae
in
ret
fmull
pop
jg
mov
or
xchg
pusha
in
popf
lret
cwtl
aam
mov
je
mov
pop
test
pusha
ret
icebp
daa
test
cmpl
jne
mov
mov
pop
fisubrs
in
dec
lods
dec
or
cs
out
adc
inc
sbb
xlat
or
dec
cmp
dec
push
dec
or
adc
jne
cwtl
push
adc
pusha
sub
mov
roll
mov
pop
cmp
mov
sbb
inc
push
xchg
jmp
sub
sub
call
cmp
xor
nop
jns
and
dec
es
cmp
xchg
add
pop
mov
mov
jns
pusha
pop
lret
out
int3
xchg
in
jp
insb
in
sbbl
pop
insb
push
cmp
sbb
in
popf
xchg
inc
mov
repz
lahf
cmp
cmp
or
stos
add
push
popf
test
fisubrs
inc
out
adc
das
in
push
sub
rolb
cld
xor
nop
mov
sub
movsb
insl
lods
pop
and
dec
cli
jns
pop
mov
daa
nop
and
cmp
cltd
sbb
and
xchg
jnp
xor
imulb
xor
sarb
jae
cmc
fsub
jmp
test
xchg
xor
pop
and
add
and
enter
xchg
mov
adcb
and
adc
or
adc
sub
sub
pushf
xchg
lods
sub
inc
and
xchg
fbstp
xchg
mov
sarl
pushf
pusha
push
cmp
cld
inc
add
ficompl
mov
mov
sbb
aam
dec
lcall
push
inc
pop
dec
enter
test
lret
pop
pop
movsl
xchg
xchg
dec
stos
sub
int
lods
sbb
mov
xchg
ret
js
mov
jo
or
xchg
adc
mov
mov
iret
xor
push
push
lret
sub
inc
rolb
mov
adc
xor
add
sbbl
fistpll
ds
ret
adc
jge
dec
das
int
iret
and
iret
or
pop
ficoms
cs
xchg
jg
pop
xchg
scas
fmull
xchg
rcr
cmp
dec
hlt
dec
in
fs
pop
ds
ja
xchg
outsb
int
sbb
mov
cmp
push
sti
mov
dec
xlat
in
pop
cmc
cmp
leave
pop
das
mov
mov
mov
or
das
shll
popf
inc
test
jl
push
addr16
adc
insb
fstps
sub
mov
mov
sbb
and
jl
adc
adc
andb
in
adc
es
andb
jecxz
in
mov
inc
or
into
test
fcomp
ja
mov
out
inc
add
sbb
movsb
andl
push
pop
call
dec
pop
pop
jne,pn
and
cmp
adcb
aam
hlt
inc
jne
stos
outsl
fs
jl
enter
sub
test
xchg
stos
adc
std
mov
inc
pop
dec
xchg
sar
enter
jecxz
stc
adc
pop
jnp
adc
inc
or
inc
push
sbb
ljmp
fstpt
inc
lret
rorl
xor
sbb
fcompl
fs
mov
call
stos
cmp
popf
in
cmpb
icebp
paddd
test
insb
inc
rclb
lock
mov
inc
les
mov
mov
mov
lock
call
stos
add
cmovl
fsts
test
sbb
dec
mov
jnp
cs
or
pop
gs
cmpsb
sbb
mov
mov
gs
movsb
pop
pop
inc
mov
and
mov
rcrb
mov
sahf
pop
aaa
jno
sbb
jecxz
fistl
jnp
pop
push
nop
das
mov
dec
fwait
jnp
adc
lods
inc
xor
and
sub
add
jnp
nop
cmp
es
icebp
sbb
jno
mov
mov
lock
jl
adc
jae
dec
adc
and
popf
clc
out
jnp
ret
sub
jae
hlt
out
and
sahf
xor
clc
or
leave
add
repnz
dec
or
or
add
or
stos
and
ret
or
mov
pop
mov
pop
int
orb
pop
nop
lahf
or
lcall
pop
jae
pop
test
mov
pop
jnp
xchg
ss
pop
cs
imul
mov
or
push
shlb
add
jl
loop
add
push
adc
fimuls
cmp
dec
or
std
mov
push
loopne
adc
or
nop
dec
adc
or
cli
aaa
sub
mov
push
add
inc
jge
fwait
repz
lret
hlt
daa
sub
clc
or
sub
testl
in
add
mov
add
cltd
pop
cmp
pop
imul
inc
or
out
test
in
cwtl
xchg
das
in
out
mov
test
adc
push
push
imul
jb
cmp
adc
repz
int3
push
fistl
enter
or
push
dec
mov
lahf
xor
jbe
repz
bound
in
cwtl
cmc
pop
pop
jmp
jmp
inc
or
loop
mov
adcb
les
cmp
pop
lods
sub
adc
movsl
sub
loop
push
xchg
movsl
sbbb
mov
sahf
adc
int
enter
aam
cmp
in
loopne
mov
in
xchg
and
lcall
cmpsb
in
int3
clc
mov
nop
pop
inc
nop
mov
fisubl
push
push
cmp
xchg
cwtl
or
imul
bound
cmp
dec
sub
inc
or
push
or
push
push
push
cmp
pop
push
mov
cmp
jns
decl
in
pop
dec
inc
pop
lods
and
pop
jl
sbb
adc
inc
daa
jle
mov
mov
mov
mov
and
adc
pop
inc
inc
std
stos
test
push
imul
out
adc
mov
lcall
pushf
mov
mov
call
jnp
rorb
push
adc
daa
or
xchg
lods
daa
mov
ret
les
cmp
or
clc
pop
popf
mov
jge
mov
insb
pop
push
jle
fs
mov
jge
xchg
lahf
xchg
add
and
mov
popf
inc
aam
dec
pop
scas
mov
xlat
sub
pop
xchg
cmp
test
mov
inc
rolb
mov
push
adc
sbb
cltd
sub
arpl
mov
scas
push
addr16
mov
and
js
mov
sti
push
jge
arpl
pop
gs
lods
cvtps2pi
mov
in
jns
in
ljmp
push
loop
adc
and
movsl
pop
dec
negb
sub
or
insb
jl
sbb
sarl
les
popf
pop
shrb
mov
ret
jne
cli
jne
or
jg
aad
mov
xor
and
or
out
xor
xchg
xchg
xor
jmp
fidivrs
or
cmp
mov
aad
int3
xorl
dec
repz
push
xor
adc
xor
testw
sub
cmp
jmp
shrl
push
shlb
cwtl
cmc
movsb
inc
fsubr
sbbb
push
cmp
and
decb
mov
sbb
jbe
insb
fnstsw
ret
xchg
dec
test
xchg
sub
icebp
sub
decl
loope
sub
movsb
fmull
pop
add
daa
test
movl
mov
mov
insl
enter
adc
mov
fdiv
dec
loopne
sub
mov
adc
scas
nop
xor
cs
dec
fistl
mov
pushf
lret
push
and
stos
mov
inc
jmp
aad
and
bound
push
or
sub
rcrb
or
xchg
cmp
or
jno
xchg
sarl
enter
cmpb
jl
pmaxub
test
inc
xchg
in
dec
call
int3
gs
xchg
sub
jnp
push
cmp
dec
add
mov
push
fs
out
aam
hlt
pop
mov
lods
popf
dec
and
dec
fmuls
rcrb
imul
in
fstl
fcompl
ljmp
inc
mov
jl
pusha
add
das
loopne
sarb
xor
sar
enter
popa
jns
das
inc
mov
adc
adc
inc
js
push
xchg
in
add
lods
push
adc
mov
emms
jl
and
pushf
aam
xchg
popa
shll
in
insb
mov
loop
cmc
aas
and
movb
popa
push
xor
test
shlb
bswap
mov
lods
or
mov
and
cmp
hlt
inc
les
sub
xor
fwait
nop
xchg
dec
push
lret
adc
lret
mov
ljmp
xor
adc
fstpt
jg
and
add
mov
xchg
iret
fisttpl
mov
mov
aad
lods
loopne
add
pop
cmpsb
or
pop
inc
adc
lock
add
jle
cmp
mov
in
in
hlt
or
pop
cwtl
sub
out
push
adc
xor
dec
inc
cmp
addl
imul
dec
cltd
rorb
mov
sbb
enter
mov
test
cwtl
sahf
push
fstpt
xor
pop
je
dec
mov
test
or
cmp
test
das
aam
and
sahf
push
sub
push
xchg
in
cwtl
loop
popf
lds
sub
cmp
xor
dec
add
cmp
push
push
pop
ss
shll
xor
mov
cmpsl
inc
roll
mov
and
pop
xor
jb
adc
lods
or
pop
adc
lea
mov
orb
sbb
fildll
push
dec
ds
mov
cmp
push
push
or
arpl
lcall
dec
divl
jecxz
push
or
mov
sbb
ret
popa
cld
mov
jle
jge
push
xor
dec
xor
dec
or
cmc
dec
cmp
mov
hlt
loop
or
xchg
adc
jno
js
adc
ja
jno
pop
movsb
pop
or
xor
imul
and
sub
lods
ret
fdivrl
cmc
hlt
jno
js
sub
adc
movsl
sub
std
hlt
in
lahf
mov
push
hlt
popf
mov
add
adc
pop
push
cmp
and
or
scas
lods
scas
xchg
inc
dec
cmp
jle
or
or
pop
dec
mov
aad
dec
and
ds
adc
cmp
sbb
or
lea
nop
shll
lcall
nop
adc
jl
nop
mov
lahf
sahf
mov
fisttpll
push
pop
std
push
mov
sbb
hlt
jno
js
dec
dec
push
nop
xchg
mov
mov
aaa
hlt
xchg
and
cmpsb
in
push
aam
frstor
and
sbb
shr
cmc
int3
rclb
sub
icebp
stos
js
pop
dec
out
nop
imul
fstpl
xchg
adc
subb
hlt
cwtl
scas
popf
bound
inc
xchg
call
loope
pop
pop
outsl
xor
mov
adc
cmp
pop
jns
movl
mov
adc
xor
je
push
xchg
loope
push
dec
movsl
movsl
nop
cmp
jbe
dec
fldl
pop
and
shll
mov
adc
popf
mov
je
mov
stc
stos
scas
sub
std
icebp
ret
orb
fnsave
add
xchg
in
loope
cwtl
popf
mov
enter
jle
nop
push
jmp
push
lds
fnstsw
adc
push
outsl
hlt
pop
lods
mov
hlt
pop
into
mov
and
cmp
xor
cmp
in
addr16
lcall
jge
test
movsb
out
xchg
mov
pop
mov
es
mov
loop
ja
inc
cmp
fists
hlt
das
fidivl
sub
adc
lods
in
lcall
cltd
movsl
push
add
cld
fiadds
mov
es
fcoms
sbb
xchg
cmp
stos
inc
xchg
loop
adc
dec
jmp
movsl
adc
cmp
xchg
sti
lcall
stos
sbb
in
adc
pop
xchg
mov
hlt
ljmp
add
jg
push
stos
hlt
push
out
mov
push
adc
adc
inc
dec
push
sbb
sub
sbb
cs
rcr
inc
nop
ficomps
aam
loop
jl
in
xor
out
adc
sub
cmp
hlt
test
sub
xor
in
push
dec
and
jl
sub
cmp
xchg
inc
sbb
jl
dec
cli
jl
aaa
ja
sahf
sbb
mov
ret
mov
pop
inc
dec
fisubrs
jae
or
in
fs
jne
lods
mov
sub
sbb
nop
sub
adc
ds
call
mov
mov
cltd
push
mov
icebp
cwtl
mov
fs
jle
stos
jl
adc
cmpl
das
fs
ss
imul
cmc
jo
ret
adc
xchg
stc
sbb
ss
sub
ljmp
xor
push
shlb
and
xchg
sbb
mov
test
jl
jg
dec
bound
adc
xor
fistps
dec
and
push
addr16
mov
push
sbb
mov
push
lea
nop
fcompl
and
in
ss
sub
or
sarl
mov
jmp
fstp
adc
cmp
add
ds
bound
enter
sti
push
sti
xor
mov
push
mov
mov
mov
sbb
cmp
xchg
lods
pop
xor
add
add
imul
movsb
cmp
jl
mov
mov
loope
mov
and
lods
and
sub
dec
and
out
popf
push
jg
subps
cmp
pusha
mov
jge
jo
xchg
push
cmp
mov
and
fs
mov
inc
in
pop
loope
nop
test
dec
and
xchg
dec
test
movsb
pop
xor
mov
adc
and
adcl
and
xchg
adc
mov
int3
inc
and
ja
in
and
in
pushf
lods
cmc
les
push
cmc
decb
xor
loope
lret
mov
dec
mov
push
nop
mov
aaa
cmp
mov
xchg
nop
movsb
pop
xchg
aad
aam
push
out
mov
cmpb
and
fnstcw
cmp
pop
lret
mov
popf
fdivl
lcall
in
int3
mov
mov
push
xchg
scas
jno
mov
or
push
sbb
xor
sbb
push
and
das
call
xor
scas
jo
mov
and
xchg
mov
jae
ss
cmpsl
out
sub
mov
pop
add
lds
std
pop
jbe
xor
adc
movsb
lods
add
mov
jl
nop
jge
push
test
stos
addr16
lahf
sbb
adc
std
ret
mov
mov
jno
push
mov
adc
push
mov
pop
lahf
push
cltd
lods
repz
jl
pop
mov
popa
push
sbb
push
cmp
js
les
in
mov
bound
mov
push
ret
test
lock
movsb
pop
call
popa
and
mov
pushf
jl
sbb
sbb
rolb
lret
jbe
xchg
imul
jge
icebp
inc
adc
and
add
adc
or
cmp
hlt
mov
xor
jecxz
dec
sbb
mov
xorb
test
addr16
dec
sbb
cltd
sub
dec
and
sub
xor
xor
xor
cmp
sub
rol
sbb
insl
or
push
int
mov
movsb
dec
inc
sub
sub
or
mov
mov
js
sub
add
lcall
std
shrb
xor
or
leave
mov
cmp
xchg
ja
or
xchg
add
mov
sarl
sbb
into
xchg
int
in
cmpl
in
jno
adc
adc
insl
jae
popf
or
or
xchg
mov
cld
xchg
dec
and
lods
int
orl
out
push
or
fwait
out
xor
sbb
popf
das
stos
sub
and
scas
sbb
notb
test
xchg
mov
ljmp
roll
iret
sub
pop
xchg
lods
es
jb
mov
shrb
sub
cmpsl
dec
pop
mov
cmc
push
add
inc
lea
push
pop
sbb
xor
push
xor
mov
jge
lods
lds
inc
lods
jge
push
dec
pop
scas
adc
jg
jns
cwtl
in
dec
dec
dec
dec
insb
mov
mov
insb
cmp
cmp
ret
outsl
pop
std
or
outsl
orl
lods
xor
sub
lds
int3
inc
push
out
inc
sub
adc
clc
or
jl
and
mov
adc
push
sahf
cmp
or
stos
sub
push
mov
popa
xchg
sarl
jecxz
cmp
xor
sbb
rorl
jl
ret
stc
out
sub
sub
or
hlt
mov
gs
mov
mov
popa
jno
dec
xor
adc
hlt
cmc
out
mov
sbb
sbb
cmp
xor
xor
cli
xor
jl
dec
and
aaa
dec
dec
xor
fistps
into
xchg
and
test
loopne
dec
sti
pop
inc
faddl
dec
ss
xor
adc
sti
in
sbb
or
jecxz
mov
in
inc
bound
pop
inc
mov
sub
lods
sbb
test
fistps
xchg
imul
fcompl
into
pop
js
xor
lods
sbb
jle
fildll
add
mov
test
mov
jle
pusha
pop
cmpsb
lret
dec
xor
xor
aam
int3
andl
mov
std
sbb
les
push
imul
fbld
and
sub
repz
dec
ja
fs
leave
push
nop
sub
test
outsl
push
or
or
movl
test
addb
mov
sbb
ret
je
stc
jl
sbb
int
and
or
add
dec
jae
out
cwtl
jg
fldcw
jbe
or
push
aam
add
jbe
rorl
pop
jg
enter
or
push
popf
test
arpl
mov
jle
jg
lods
adc
gs
fsubrl
pop
sbb
shlb
sbb
add
inc
mov
mov
and
pusha
nop
sub
hlt
jmp
aaa
cmp
sarb
rol
cmp
sbb
and
fistps
test
movsl
xor
or
stos
imul
pop
adc
jecxz
cmp
bound
xchg
sahf
jno
and
sahf
jo
das
call
out
rclb
fs
aam
cmp
aaa
add
dec
insl
mov
insb
mov
pop
mov
dec
inc
sbbb
inc
int3
jge
push
dec
movsb
cs
lods
movsl
mov
adc
push
rolb
rolb
in
pop
sbb
lods
sub
js
jns
push
sub
xchg
xor
clc
daa
mov
cmp
adc
mov
push
xor
decl
inc
cmp
lds
push
cmpsl
ss
xor
repnz
mov
adcl
jae
scas
sub
sbb
push
adc
xchg
jo
mov
and
les
sahf
fnstcw
xor
aam
xchg
mov
out
cmpb
or
aad
push
test
dec
sbb
dec
inc
sbb
dec
or
rorl
mov
inc
lret
mov
repnz
add
jecxz
xchg
sub
sahf
xchg
push
mov
lods
cld
sbb
xor
sub
insl
xlat
testb
in
or
push
xorb
xchg
sbb
test
mov
das
movsb
mov
and
fcompl
mov
mov
inc
icebp
inc
cmp
jmp
rorl
stc
xchg
ds
adc
sahf
lret
jne
test
xorl
sbb
fcomps
sti
aad
mov
xchg
mov
arpl
ds
lret
xchg
insl
retw
pusha
ds
test
inc
or
push
xor
mov
push
adc
xor
push
jg
pop
push
mov
mov
daa
in
sbb
cmpsl
int3
loop
jmp
inc
mov
je
xor
popa
repz
into
jmp
add
inc
test
fwait
xchg
lods
test
add
pop
fbld
cld
aam
pushf
inc
shrl
mov
and
jp
sbb
mov
lods
lret
test
sbb
in
nop
sbb
dec
rolb
sub
pop
jnp
dec
divb
adc
sbb
fists
add
mov
int
cld
int
push
adc
cmp
rclb
jl
inc
xor
test
dec
push
mov
aam
cmc
cmp
mov
and
push
dec
sub
cmp
enter
repnz
mov
adc
xchg
cmp
orb
cmp
dec
jl
adc
int3
cwtl
push
or
out
mov
cmc
ffreep
lea
sbb
sarl
scas
adc
je
xchg
lahf
jle
or
or
test
push
cmpsl
mov
imul
adc
lods
fdivrs
push
into
dec
lods
hlt
test
mov
adc
sarb
mov
fsubrs
pop
xor
ret
mov
jb
adc
out
frstor
sbb
nop
or
lahf
int
xchg
pop
loope
ja
dec
pop
push
enter
stos
fstl
jmp
scas
push
int
aaa
push
inc
in
xor
aam
jl
aas
cli
call
dec
mov
dec
les
xchg
pusha
push
xlat
push
jg
jmp
cltd
push
and
pop
popf
in
push
sbb
ljmp
nop
and
dec
pop
scas
fcomps
pop
in
insl
mov
push
mov
cwtl
loop
sbb
xchg
pusha
xor
adc
lea
dec
data16
mov
and
fiaddl
pop
aam
jle
pop
push
cmp
cmp
push
sbb
mov
adc
popf
data16
test
fs
jbe
test
adc
sub
es
mov
mov
jns
xchg
test
push
je
cmp
xor
mov
xor
fnsave
mov
in
mov
cmc
pop
push
pop
jge
movsb
sub
mov
mov
inc
in
nop
add
rclb
dec
stos
adc
sahf
ss
cld
push
cwtl
pop
sub
push
sub
and
sbb
out
jp
push
xlat
push
fisttpl
nop
clc
push
cwtl
dec
xor
inc
xor
fiadds
pop
xlat
xor
jl
movsl
mov
in
jg
mov
cwtl
adcb
fs
aas
out
push
cmp
mov
mov
inc
nop
cmpsl
cmp
dec
mov
dec
mov
inc
xor
push
and
cltd
lea
stc
jbe
sbb
stos
mov
push
xlat
popf
adc
xor
scas
cmp
bound
xlat
xor
jbe
decl
cmp
icebp
imul
jns
in
leave
into
adc
cltd
popf
loope
adc
ror
mov
sub
sub
lret
cmp
daa
or
sti
enter
repz
inc
push
push
aas
or
or
jl
sbb
xorl
mov
dec
stos
adc
push
decb
mov
jmp
mov
flds
loop
inc
push
mov
inc
insb
jl
pop
and
push
or
int3
cs
lret
xlat
ljmp
or
mov
ljmp
adc
xor
adc
test
pop
sbb
mov
frstor
and
add
sub
push
push
or
cs
push
into
cs
mov
pop
fidivs
xchg
xor
mov
mov
loopne
or
dec
sbb
lock
outsb
jb
aam
pop
jg
lret
fistps
dec
sub
mov
insb
jl,pn
push
inc
rcll
fsub
sbb
mov
je
stos
push
je
push
mov
pop
je
cmp
and
scas
or
idivb
dec
xchg
mov
stos
popf
dec
mov
loope
cmp
mov
in
outsl
push
cmp
inc
mov
out
je
sbb
pop
add
inc
bound
jl
add
adc
sub
cltd
xor
daa
or
pushf
push
mov
aas
pusha
adc
and
fisttpl
pushf
pop
icebp
and
push
int3
xor
mov
jno
jbe
push
xor
ds
insl
pusha
das
pop
lock
leave
ss
ret
push
xor
jg
mulb
pop
pop
js
lods
xchg
outsb
nop
aas
lahf
lods
enter
aam
adc
cmp
xor
cmp
xchg
pop
mov
xor
xchg
adc
orb
fdivr
pop
jno
jbe
or
scas
scas
pushf
bound
jnp
mov
sbb
shlb
pop
repnz
sub
mov
or
pop
push
and
incb
mov
and
xchg
jecxz
test
hlt
std
adc
add
dec
daa
mov
push
out
js
sub
add
cmp
and
mov
mov
mov
dec
xchg
xchg
or
or
pop
mov
cmp
insb
lods
mov
lds
movsb
testl
ss
pushf
stos
xor
add
jbe
pusha
mov
pop
jmp
xor
sbb
push
sbb
mov
mov
sub
loopne
push
jg
add
push
fnop
fstps
fs
mov
cmp
nop
fsts
repnz
cmp
cmc
sbb
add
clc
insb
sub
mov
sub
mov
iret
pop
xor
in
popa
scas
imul
push
test
ss
adc
popf
mov
xchg
and
jl
add
stc
aam
scas
mov
cmpsl
aad
adc
cmp
adc
sbb
push
out
out
repz
push
test
je
pop
sbb
movb
jb
sub
jbe
jecxz
fcomps
or
xlat
mov
pop
insl
lea
inc
fstl
or
lods
fbstp
lods
ds
adc
push
jge
insl
jo
cld
int3
mov
ja
aam
popa
out
stc
shl
mov
gs
and
lahf
dec
or
jne
sahf
and
insb
dec
les
inc
lret
or
xor
mov
sub
sub
adc
outsl
dec
loop
outsl
sub
out
dec
adc
in
test
push
scas
mov
lods
jl
push
sarl
fstpl
push
popf
pushf
lea
mov
pop
cs
outsb
or
lea
cmp
mov
fsubrl
xor
xchg
sbb
sti
inc
or
dec
xor
pushf
lret
dec
mov
xchg
in
xor
adcb
std
jmp
in
push
jge
xchg
or
cld
in
xor
xchg
pushf
cmp
xchg
adc
dec
mov
jecxz
repz
in
xor
adcb
std
jmp
mov
or
cld
in
xor
xchg
pushf
cmp
jmp
dec
push
js
jmp
push
incb
and
ds
mov
or
jge
xor
adcb
jl
cs
cmp
call
cs
dec
jecxz
mov
xor
dec
push
mov
sbb
std
inc
rcll
test
sub
cld
lret
push
mov
sbb
jmp
pop
dec
jecxz
mov
cltd
cs
push
mov
sbb
std
inc
rcll
mov
jge
pop
sub
cld
lret
push
mov
sbb
jmp
pop
dec
jecxz
mov
gs
push
mov
sbb
std
inc
rcll
popf
xchg
jge
pop
sub
cld
lret
push
mov
sbb
jmp
pop
dec
jecxz
mov
adc
mov
sbb
std
inc
rcll
icebp
xchg
jge
pop
sub
cld
lret
push
mov
sbb
jmp
pop
dec
jecxz
mov
lods
cs
push
mov
sbb
std
inc
rcll
fcoml
dec
in
cld
lret
push
add
push
or
rol
inc
out
les
add
jecxz
adc
lods
or
lods
mov
mov
shrl
xchg
mov
adc
xchg
mov
adc
xor
ljmp
adc
sub
mov
test
adc
lock
test
jo
push
std
push
add
adc
shlb
nop
mov
dec
pop
adc
pop
rcrl
pop
xchg
pop
mov
pop
dec
cmp
cmp
dec
xor
xor
xor
adc
or
shll
leave
jge
inc
or
or
xchg
mov
xor
jae
mov
incl
test
sub
test
cmp
cmp
cmp
cmp
xor
les
or
movntq
cmp
sub
cmp
or
push
insb
jmp
enter
inc
or
cmovs
addr16
mov
add
ss
in
enter
in
insb
jecxz
popf
pop
fsubrl
pop
adc
xor
in
jne
dec
jbe
and
orb
dec
xchg
stos
dec
push
ss
les
movl
push
xor
adc
mov
xor
dec
push
shll
popa
out
adc
xor
sbb
lahf
sbb
or
sti
je
push
test
lods
mov
and
sbb
add
and
mov
adc
mov
cmp
dec
push
xchg
lret
test
jecxz
jge
pusha
in
jbe
rorb
lea
int3
arpl
in
mov
lods
mov
xchg
movsl
jne
sub
mov
xor
and
and
movsb
jmp
mov
push
lea
lret
push
repz
mov
adc
jmp
inc
sbb
mov
test
imul
out
cmp
lea
ret
adc
or
iret
sbb
fnsave
push
jnp
xor
cmp
cmp
ds
mov
lods
xchg
sbb
loopne
jb
xor
mov
scas
adc
push
std
cmp
das
pop
and
enter
lahf
mov
addr16
lahf
mov
xlat
enter
lahf
mov
fnstsw
pop
mov
xlat
enter
lahf
mov
xlat
pushf
testl
push
std
cmp
das
pop
and
enter
repz
enter
lahf
mov
xlat
enter
lahf
mov
std
cmp
das
pop
and
enter
lahf
mov
fnstsw
pop
mov
xlat
enter
lahf
mov
jb
cmp
lods
sbb
pop
or
dec
jle
leave
fmull
xchg
adc
jns
clc
pop
sub
cs
ficoms
xchg
std
pop
nop
jecxz
push
push
xchg
hlt
pop
pop
add
pop
icebp
push
sbb
adc
sbb
leave
add
fldt
lahf
xchg
clc
pop
sub
sahf
pop
leave
push
mov
jno
push
sbb
popf
inc
rcll
popa
xchg
sbb
aas
pop
sub
pop
mov
jmp
pop
push
lahf
xchg
fsubs
dec
mov
push
cs
lret
push
mov
adc
sbb
push
inc
rcll
cmc
xchg
popf
clc
pop
sub
sbb
adc
sbb
out
aas
cmp
aas
leave
sub
mov
pop
pop
leave
push
mov
adc
sbb
push
inc
rcll
push
xchg
popf
clc
pop
sub
sbb
adc
sbb
out
aas
and
negl
lods
dec
mov
lods
jmp
pushf
fisubrs
sbb
pop
nop
and
xchg
popf
in
xor
sbb
dec
fcoml
xchg
or
andb
test
mov
sbb
sahf
jmp
pop
push
inc
rcll
aad
popf
clc
pop
sub
sbb
adc
sbb
out
aas
sbb
dec
lahf
push
jbe
mov
sub
in
xor
adc
push
sahf
adcb
push
jmp
in
popf
xchg
sbb
push
pushf
lret
push
mov
add
jmp
or
lahf
push
jbe
mov
sub
in
xor
adc
push
sahf
adcb
push
jmp
leave
out
out
test
adc
lods
rclb
lods
push
xchg
dec
adc
rcll
lret
sub
mov
or
mov
or
xchg
xchg
dec
ljmp
dec
push
xor
dec
icebp
dec
jmp
dec
jno
imul
dec
call
dec
jo
push
xchg
repz
lods
stos
xchg
jae
imul
jge
push
insl
dec
insl
adc
lret
cmp
push
cmp
or
xchg
cmp
dec
cmp
sarl
mov
adc
mov
sahf
rcrb
pushf
fcomps
ljmp
lock
notl
mov
stos
pop
jae
imul
pop
sub
repnz
ljmp
push
push
ret
dec
push
popf
mov
cmp
incl
movsl
lea
mov
push
sub
fdivl
jnp
jmp
and
mov
leave
test
mov
cmpsl
mov
sbb
inc
pop
jmp
ficompl
jmp
xorb
inc
popf
push
sbb
xchg
pusha
daa
mov
xor
pop
pop
mov
cmc
cmp
pop
in
jmp
je
scas
dec
stos
pop
mov
popf
pusha
jecxz
sti
pop
push
roll
ljmp
pop
sbb
mov
mov
ficompl
mov
sbb
fnsave
inc
lcall
movsb
movsl
pop
lods
adc
sbb
inc
mov
mov
dec
pop
es
push
sbb
xor
test
pushf
or
stc
jmp
out
hlt
dec
pop
test
cmp
movsb
dec
loopne
xchg
push
inc
je
insl
xchg
or
movsl
divl
subb
mov
dec
out
gs
les
sbbl
dec
sub
ret
ret
mov
xor
adc
scas
sbb
or
xor
mov
pop
push
test
sub
xor
rcrl
xor
add
xchg
int
adc
decb
pushf
rcrl
out
dec
out
cmp
push
add
and
adc
aaa
je
int3
jmp
cli
mov
adc
out
test
test
mov
in
in
pop
ljmp
sbb
pop
lds
push
in
cmp
das
pop
and
enter
lahf
mov
cmp
das
pop
and
enter
lahf
mov
xlat
enter
mov
cs
and
enter
lahf
mov
xlat
enter
lahf
sub
enter
lahf
mov
xlat
enter
lahf
mov
in
cmp
das
pop
and
enter
lahf
mov
out
cmp
das
pop
and
enter
lahf
mov
xlat
enter
mov
cs
and
enter
lahf
mov
or
xor
add
jo
mov
std
out
mov
jo
or
je
pop
xchg
push
fisttpll
mov
mov
std
or
dec
cmp
xor
mov
pop
adc
jno
dec
sub
testl
sbb
jmp
sti
fbstp
cmp
mov
adc
sbb
lret
mov
jns
bound
loopne
jge
fiadds
sahf
aaa
pop
fistl
je
xchg
pop
not
aaa
pusha
cmp
ja
sub
dec
jg
xchg
inc
or
adc
fs
adc
cmp
jl
xor
push
cwtl
aaa
fnsave
in
cmpsb
push
adc
pop
xchg
aam
jmp
cmp
xor
scas
icebp
xchg
cmc
popa
fcoms
outsl
jmp
js
or
push
sub
jmp
addb
hlt
lods
cmc
adc
lret
dec
adc
mov
sbb
sub
push
add
xor
xor
out
nop
add
test
mov
adc
nop
mov
hlt
dec
repz
stos
iret
int
dec
and
imul
test
vpcomuw
xchg
and
in
lea
in
adc
add
in
das
pop
rcr
shrb
xchg
sahf
ja
in
jmp
cmc
xchg
in
sub
mov
mov
pop
jg
aam
dec
push
mov
and
push
sub
and
in
mov
lret
pop
pop
jg
sbb
sbb
fbld
or
clc
cld
adc
cs
leave
subl
in
pop
jl
pop
es
jns
out
test
js
outsl
sarb
idivl
mov
jge
and
pushf
int
sbb
pop
mov
xchg
push
imul
ret
ret
push
adc
adc
cmp
popf
inc
repnz
call
cmp
data16
out
sahf
cmp
call
push
pop
mov
jbe
arpl
or
test
cmp
xor
pusha
xchg
scas
dec
push
and
dec
dec
lods
into
loop
and
dec
int
ljmp
dec
mov
test
bound
js
movsb
ds
dec
xor
dec
jle
cmp
cmp
xchg
jl
or
or
mov
jg
jp
sub
inc
jp
pop
sete
push
lahf
daa
jnp
data16
pop
mov
aas
dec
jo
and
pop
test
aam
pop
cmp
inc
push
dec
mov
lds
dec
stos
xor
sar
sbb
push
repz
les
ja
adc
lods
dec
or
outsl
xor
add
adc
add
xchg
mov
clc
fistps
inc
sub
mov
mov
xchg
jg
sbb
sbb
push
enter
ficoms
fwait
push
ficoms
stc
aad
arpl
or
pop
jnp
pushf
cmp
cltd
mov
sahf
cmpsb
pop
push
test
pushf
push
cwtl
lret
dec
xchg
push
and
int3
or
aas
in
sub
pop
pop
jecxz
push
mov
notb
jo
rclb
and
xor
test
push
pop
jbe
enter
insb
nop
cmp
jecxz
mov
sarb
and
cmp
adc
imul
push
mov
xchg
jl
push
pushf
dec
jne
aaa
cmp
shrb
cs
lock
data16
or
or
pop
cmp
pushf
aad
sbb
push
mov
cmp
mov
mov
sahf
das
insl
scas
fnstcw
sub
fildll
jo
xor
pusha
cs
popf
mov
mov
lahf
push
inc
sbb
xor
lcall
pop
xor
test
ljmp
xor
push
nop
dec
pop
inc
mov
or
sub
mov
jp
jmp
inc
pop
push
jl
ss
and
icebp
adc
and
rcll
sub
push
test
ja
pop
adc
pop
push
nop
icebp
adc
adc
jecxz
mov
mov
sbb
and
lret
cltd
adc
sub
das
sub
push
cs
sub
add
dec
nop
and
cs
fwait
sub
aaa
out
cmc
cld
sti
mov
xor
out
gs
and
and
push
mov
mov
jp
rcl
cmp
cltd
adc
push
xchg
decb
and
test
mov
cltd
sarl
dec
xchg
inc
sbb
xchg
sbb
add
sub
xor
push
pop
movsb
sbb
out
xchg
dec
xlat
inc
dec
nop
sbb
dec
or
push
mov
fmull
jl
pop
lahf
xor
out
in
sbb
sbb
xor
dec
push
jne
rolb
js
nop
dec
dec
inc
push
sub
or
push
push
push
dec
in
sbb
cmpsb
mov
push
mov
mov
sbb
adc
push
dec
push
nop
sub
xchg
xchg
mov
out
jb
in
pop
and
sbb
and
xchg
xchg
jno
bound
je
pop
je
test
in
and
bound
imul
and
jl
xor
push
je
dec
fcoml
sub
jle
jne
cltd
xchg
outsb
nop
jl
and
cs
and
sbbb
jb
lods
sub
fwait
and
out
push
in
sub
mov
sbb
and
sub
mov
or
lods
jp
pushf
push
sub
mov
inc
xor
sub
subps
scas
jle
mov
jecxz
sub
inc
dec
xchg
mov
adc
daa
xor
stc
xorl
subb
xor
push
sub
mov
mov
xchg
xor
cmpl
pop
xchg
gs
pop
sarl
shl
mov
mov
insl
or
pop
bound
test
pop
icebp
xor
mov
cs
adc
je
push
in
adc
cltd
das
lret
jge
adc
insl
pusha
xor
sub
in
repz
sub
xor
js
nop
push
mov
lcall
leave
nop
pop
push
mov
mov
add
mov
pop
stc
pop
lcall
dec
ds
sub
repz
mov
or
cwtl
push
mov
pop
sbb
adc
adc
cltd
das
jecxz
nop
sub
push
sbb
in
movsb
xchg
iret
les
shrl
cmp
stos
sub
xor
js
scas
xor
cmp
xchg
dec
mov
jb
aad
pushaw
dec
mov
lcall
dec
out
jp
movsb
pop
in
mov
jne
inc
xrelease
nop
xor
and
aas
mov
adc
and
shll
clc
or
add
pop
scas
xchg
mov
cmp
cli
jle
pop
dec
or
bswap
xor
cmp
cld
add
push
fisubrl
and
insl
int
push
push
pop
test
adc
pop
push
mov
fidivl
icebp
xchg
sub
dec
jmp
push
xchg
in
cmp
jl
stos
mov
loopne
jl
inc
leave
sbb
fiadds
test
rolb
lret
lahf
sbb
cmpl
or
adc
lret
fs
movsl
ds
in
lods
hlt
mov
add
add
mov
in
or
test
inc
pop
cmc
push
sti
or
inc
xor
cmp
rcrb
js
adc
movb
dec
sbb
sbb
leave
jl
lods
fs
jmp
enter
add
int3
push
cmp
mov
dec
adc
out
test
adc
sti
icebp
adc
push
xor
shlb
push
aad
push
mov
cmp
or
sub
push
pushf
mov
ja
mov
or
popa
int
push
aaa
jle
aaa
bound
es
aam
mov
xchg
das
pop
jge
inc
sbb
stc
pop
enter
push
stos
test
push
mov
ljmp
addr16
arpl
xor
bnd
aam
negl
iret
adc
xchg
popf
sbb
mov
mov
push
sahf
and
rcrb
mov
sahf
and
dec
test
ret
sbb
arpl
enter
cmp
pop
inc
lret
adc
imul
scas
dec
mov
insl
adc
add
dec
mov
xor
mov
loopne
xor
mov
out
mov
mov
mov
jecxz
clc
into
filds
cld
sbb
push
xor
pop
je
sbb
jo
add
lods
cmp
pop
lods
inc
lret
popf
push
jl
das
mov
pop
push
cmp
sbbb
push
lcall
stos
adcl
mov
xchg
mov
mov
ret
inc
pop
xchg
out
cmc
dec
ds
cmp
jp
out
das
dec
das
sbb
in
and
cmp
les
mov
cmp
push
out
pop
imul
jg
mov
jg
scas
jecxz
movsb
mov
stc
cmp
mov
in
sub
and
mov
shlb
lret
add
jns
cmpsl
mov
add
test
inc
push
outsb
pop
push
les
or
pop
mov
sarl
sbb
cmc
imul
cmp
xchg
mov
pop
lods
lods
test
mov
faddl
xchg
add
mov
lods
xchg
mov
push
scas
pop
pushf
push
or
and
out
dec
xor
out
cmp
int
mov
jno
mov
hlt
movsl
js
sbb
sbb
into
push
pop
xor
inc
popf
clc
out
xor
ljmp
dec
add
jl
cli
lcall
push
popf
rorl
cmp
mov
cmp
xor
cmp
xor
cmp
xchg
scas
jbe
or
jno
sub
dec
or
xor
push
push
ss
dec
jbe
and
inc
mov
push
adc
lret
inc
lcall
sbb
xlat
stos
dec
inc
cs
inc
jno
sbb
ret
cmp
mov
dec
stos
jp
and
dec
push
adc
sbb
sbb
out
mov
mov
cmp
inc
movsb
add
or
pushf
outsb
movsb
popf
call
sbb
inc
push
outsl
sbb
xchg
out
sbb
jecxz
push
and
stos
push
fs
shlb
dec
xchg
in
push
mov
pop
and
add
mov
jl
mov
sbbl
test
cwtl
jge
mov
xchg
mov
pusha
pop
xor
sub
andb
pop
sahf
in
jecxz
push
and
and
call
in
jbe
inc
adc
fsubrl
sarb
jne
int3
push
test
and
xchg
jge
mull
jge
lahf
and
pop
imul
pop
sub
jbe
push
xor
repz
shrb
push
or
mov
out
mov
and
int
test
iret
test
dec
loop
jl
pop
sbb
lret
clts
jge
in
push
lods
testl
push
dec
in
push
push
and
mov
or
js
mov
mov
stos
adc
mov
in
or
adc
inc
xor
inc
pop
nop
cmp
mov
sub
insb
inc
mov
mov
or
and
push
and
sbb
jo
push
dec
pop
add
adc
adc
mov
movsb
xor
leave
pop
mov
int
push
jnp
cmp
dec
inc
sub
pop
gs
leave
push
sbb
or
cli
mov
mov
and
mov
pop
pop
cmp
rcll
dec
cwtl
outsb
mov
jg
aaa
mov
pushf
hlt
gs
out
mov
xor
lock
inc
pop
mov
push
dec
lods
pop
aad
cmp
addr16
xor
push
insb
test
test
jg
pop
and
inc
outsl
and
daa
xchg
sti
xor
icebp
cmp
test
movsb
cmp
hlt
cmp
push
add
scas
nop
in
jl
mov
xchg
push
cmp
mov
pop
push
inc
test
mov
xor
stos
out
pop
dec
cmp
cmp
cwtl
mov
leave
ja
test
hlt
leave
adc
xor
mov
aaa
je
repz
jmp
pop
mov
cmp
xchg
scas
lret
sbb
mov
out
cmp
cmp
pusha
cld
dec
xor
ljmp
jno
ficoml
mov
pop
add
cmpsb
sub
shlb
cmp
or
xor
push
lods
jno
test
jl
cmp
sarb
test
inc
cltd
adc
xor
stos
mov
pop
and
test
mov
add
inc
add
mov
and
daa
sbbb
sub
xlat
lock
cld
bound
cld
lods
aam
inc
sub
sbb
mov
dec
lock
and
orb
dec
xlat
jp
mov
sarb
lock
js
push
popf
test
cs
lock
shl
or
dec
jl
mov
or
sarb
adc
std
dec
add
push
dec
sahf
pop
out
loop,pn
push
popf
insl
and
adc
mov
lahf
in
pop
testl
sbb
vcvtss2si
popf
addr16
lea
out
loope
lods
push
jl
dec
push
in
sub
add
dec
xlat
idivl
pop
insb
push
ss
push
and
mov
xlat
mov
jb
shl
popf
out
add
dec
fstp
dec
cmp
lahf
and
dec
xlat
sti
sub
in
mov
adc
mov
fidivs
pop
add
inc
les
mov
xor
xchg
xor
add
dec
ds
push
push
push
aaa
adc
das
sbb
sub
or
and
es
mov
xchg
jl
lock
pop
dec
push
shll
adc
pop
jbe
enter
or
stc
mov
push
das
sub
mov
cmp
jl
fsubr
cmp
mov
negl
pop
lds
or
or
movsb
pusha
jecxz
movsb
inc
inc
idivl
test
mov
js
inc
pusha
ds
dec
adc
fsts
in
or
sub
mov
jle
push
dec
dec
push
gs
sbb
push
adc
ret
jb
xchg
mov
or
fcoml
shrb
aaa
iret
sub
pop
cmpb
mov
cmp
jl
push
sub
dec
adc
std
incb
cmpb
xor
sbb
loop
in
outsl
jp
imul
pop
mov
pop
cli
stos
mov
mov
cs
aaa
fs
sarw
insl
movsb
shrl
pushf
int
in
pop
test
sub
cmp
sbb
sbb
sbb
and
loopne
xor
pop
in
lods
sub
or
and
cld
cmp
inc
sbb
xchg
in
mov
popf
fnstenv
push
pusha
aaa
lods
out
mov
pop
mov
hlt
mov
xor
add
mov
and
mov
mov
stos
and
or
aad
stc
fwait
dec
iret
fwait
and
sub
adc
mov
jbe
fs
outsb
pop
inc
loop
adc
shrb
add
lods
inc
das
and
jge
aas
adc
add
push
in
es
test
es
xor
dec
mov
mov
cmp
lds
sub
mov
and
shrl
jne
movsb
adc
push
or
and
mov
and
dec
xor
fbstp
inc
fiaddl
jle
das
push
sub
daa
push
and
hlt
or
orb
pop
pop
aam
xchg
stc
idivl
push
int
stos
bound
adc
inc
imul
addr16
mov
mov
dec
fildll
incb
in
incb
out
adc
jo
ss
mov
aaa
leave
jbe
rcl
lcall
push
scas
test
mov
xor
test
xor
pop
fidivrs
out
mov
jmp
cmpsb
enter
mov
xorl
test
cmpb
inc
enter
scas
mov
pop
js
mov
mov
xchg
mov
jecxz
inc
hlt
aaa
stos
call
in
ljmp
pushf
pusha
xorl
mov
stos
jne
divl
jno
push
mov
popf
inc
outsl
dec
add
ljmp
xor
lods
mov
inc
daa
adc
lcall
or
cmp
cmpb
push
cmp
adc
hlt
mov
sahf
enter
push
int3
mov
push
jmp
sbb
and
jge
jne
push
xor
cwtl
sarl
and
sbb
movsb
and
xchg
or
lods
sbb
xor
int3
pushf
mov
dec
or
adc
or
mov
insb
lret
test
and
cltd
out
mov
cmp
inc
adc
push
cmp
loope
lods
xchg
popa
and
add
pop
outsl
jmp
aam
dec
int3
dec
imul
sub
inc
jne
or
pop
sbb
test
mov
push
popa
lods
adc
inc
and
add
fadd
mov
bound
ret
sub
mov
mov
dec
xlat
insb
mov
sahf
popf
fnsave
or
fistl
cmp
xor
adc
sar
test
dec
pop
call
repz
add
mov
fnstsw
mov
hlt
and
sbb
add
das
cltd
adc
jl
int
mov
lret
test
jbe
xor
xlat
jmp
xchg
ret
adc
jmp
fs
and
js
repnz
aam
mov
push
mov
push
cmpsb
sbbb
push
adc
and
insl
pop
add
repnz
xlat
add
ljmp
xor
add
insb
or
addr16
jg
xchg
and
pop
loopne
dec
jl
cmovno
mov
dec
gs
lahf
xor
jp
push
test
sahf
ss
cmp
push
mov
adc
imul
gs
dec
and
cmp
sarb
enter
adc
mov
push
movsl
push
cmp
push
movsl
iret
push
sbb
or
pop
and
xchg
sbb
dec
lret
sbb
fdivrs
xchg
test
sub
es
in
add
or
and
mov
mov
dec
inc
mov
stos
mov
sub
dec
sub
aaa
mov
mov
inc
jle
push
mov
push
mov
lahf
and
xlat
adc
popf
pop
sbb
xor
test
and
scas
cmp
push
ja
push
xor
xor
and
xor
fwait
lods
adc
adc
sbb
push
push
xor
mov
inc
mov
jp
jo
xchg
mov
ds
pop
pop
and
xor
push
push
xor
jb
xor
nop
mov
nop
xor
pop
cwtl
sub
popf
pop
xchg
insb
or
or
sub
jnp
stos
mov
test
popf
cmp
mov
dec
es
cmp
insb
inc
cs
xchg
cld
and
adc
aaa
mov
mov
sub
lods
cmp
ds
xchg
cmp
lahf
sub
das
sub
mov
inc
cmp
icebp
je
cmp
mov
in
sub
jle
jmp
mov
ret
popf
push
pushf
jl
ds
cmp
sub
fsubl
shl
push
in
cmp
adc
lret
push
cmpb
shr
push
dec
push
sbb
xlat
pushf
hlt
jo
iret
leave
scas
and
xchg
and
push
int3
ds
jl
in
and
pop
mov
dec
sub
mov
ret
inc
mov
fldl
sub
sub
push
fs
push
mov
adc
and
test
xchg
jb
outsl
orb
aas
das
orb
push
jno,pt
loope
popf
decb
dec
xchg
jl
push
xchg
adc
les
xchg
aas
pop
popf
pusha
cmpsb
das
ds
adc
dec
push
mov
cmc
test
push
dec
mov
mov
cs
jmp
adc
adc
pop
iret
mov
jae
and
pushf
jl
je
movsb
imul
jg
push
sbb
nop
negb
mov
sahf
xor
jmp
or
data16
or
std
add
rorb
adc
lods
xchg
popf
jg
inc
ljmp
jle
jnp
cmp
jl
dec
scas
pusha
jno
fidivs
movsb
popa
jae
lahf
test
jmp
mov
mov
dec
movsb
pop
inc
or
in
call
inc
or
xor
imulb
pop
hlt
iret
in
lock
imul
je
jl
in
lods
pop
jne,pt
sub
push
mov
pop
sbbl
cmc
addl
push
add
add
pop
scas
sbb
or
or
add
adc
pusha
enter
imul
cmp
add
fistps
or
imul
jb
sbb
jne
or
scas
mov
sub
or
pushf
jbe
cli
repz
pop
fists
hlt
or
idiv
cmpsb
out
mov
aam
fstpl
adc
push
xor
jne
push
cmc
je
pop
adc
fnstsw
jl
push
or
cmpsl
je
or
mov
scas
add
sub
sub
das
das
mov
mov
movsl
sahf
aam
and
mov
pop
lea
lods
dec
outsb
xchg
jle
shrl
outsb
mov
xchg
popf
popf
jl
push
lea
pop
gs
mov
insl
fistl
xor
pop
loop
xchg
mov
adc
mov
shl
decl
fcomip
xor
lock
iret
xor
push
pop
push
aas
sub
ljmp
push
in
jg
outsl
or
or
mov
stc
jl
and
fstpl
mov
pop
sub
shrl
cmp
insb
inc
shrl
pop
xchg
dec
add
subb
pop
sub
scas
cmp
dec
sub
lahf
cmp
incl
outsl
ja
and
pop
sbb
pop
cmp
je,pn
and
xor
jmp
and
test
cmp
sub
cmp
mov
cmp
addr16
ret
dec
negl
fcomip
jo
inc
and
cmp
xchg
ss
or
push
ffree
add
adc
dec
fiaddl
ret
gs
jns
mov
push
ret
adc
cmp
sbb
mov
test
cmp
sbb
cmpsb
or
ds
jge
mov
sub
ja
insb
dec
dec
mov
jb
push
or
mov
and
gs
je
bound
mov
xor
pop
mov
mov
xor
pushf
je
fcomps
pop
test
sub
jge
xchg
fstl
add
sub
lea
and
and
sub
pop
daa
faddl
inc
fs
xor
mov
arpl
insl
shrb
push
rcrb
pop
lds
inc
out
xchg
sahf
mov
mov
cli
ljmp
xchg
and
clc
xchg
jne
sbb
xor
adc
in
xor
sub
mov
shrl
xchg
fwait
inc
loop
testb
dec
stos
push
mov
add
ss
mov
cmp
scas
in
das
inc
shl
push
push
add
mov
cmp
mov
or
jecxz
sbb
inc
imul
test
insb
sbb
dec
dec
sub
and
mov
call
dec
or
xor
pusha
cli
cld
push
pop
psraw
mov
push
inc
and
fiadds
pop
jb
mov
mov
bound
dec
inc
xchg
pop
mov
shlb
xor
xlat
pop
or
stos
jbe
xchg
push
jge
dec
fs
push
shlb
sbbb
scas
pop
stos
mov
rclb
dec
jge
push
jo
jmp
adc
push
lahf
in
scas
mov
test
xchg
scas
push
jge
pop
or
in
fstpl
lods
and
pop
mov
xor
pushf
sahf
cmp
add
insl
popf
fstpt
cmpsb
sub
pushf
pop
sub
mov
lea
mov
notl
jns
cli
int3
pop
mov
lret
dec
mov
or
dec
es
sub
in
xor
xchg
pushf
cmp
hlt
adc
icebp
dec
push
enter
enter
jmp
jmp
jg
lahf
jmp
pop
test
mov
jg
lahf
movsl
jmp
pop
test
leave
int
push
fnstsw
lahf
fldl2t
sub
les
int
push
leave
jg
lahf
shr
icebp
enter
sub
jg
stos
test
stos
mov
dec
jg
stos
lds
nop
stos
rolb
nop
mov
dec
push
xchg
and
test
popf
lods
fsts
pushf
push
dec
push
xchg
jmp
mov
jecxz
repz
lahf
popf
mov
dec
sub
push
mov
pop
js
add
mov
dec
dec
ds
cld
push
push
mov
jl
pop
sub
push
popf
mov
dec
cmp
add
insb
insb
in
bound
aad
jno
fbld
xchg
aad
jno
incl
cld
adc
or
das
xchg
test
mov
mov
xlat
leave
push
and
icebp
fnstsw
das
rolb
dec
int
mov
nop
mov
xchg
cmp
int
adc
adc
dec
xchg
frstor
lahf
mov
nop
leave
icebp
lds
das
enter
xlat
shrb
jmp
nop
shl
cmp
leave
test
dec
sar
and
icebp
mov
adc
dec
popf
repnz
jg
jo
scas
sub
cwtl
sbb
jl
divb
mov
jg
mov
fldenv
repz
das
fldl
push
and
icebp
movsb
cmp
int
adc
dec
fldenv
lahf
nop
aad
aam
das
add
push
fimuls
std
pop
jge
adc
mov
pop
imul
and
rorl
adc
es
push
adc
jge
cmp
loope
jg
subl
cmp
adc
popf
cli
xchg
je
or
add
cmp
scas
mov
mov
pop
push
push
fmuls
xchg
push
jo
pop
xor
mov
mov
pop
in
js
fwait
add
push
hlt
jo
push
addb
sbb
imull
or
fwait
jb
dec
xor
or
push
mov
push
cmp
add
lret
cld
xchg
cmp
stos
fucomp
mov
iret
pop
repz
sbb
hlt
int3
or
mov
loope
pop
int3
dec
lods
nop
int3
push
imul
adcl
adcb
hlt
add
prefetch
int3
ljmp
or
hlt
int
lock
movsb
sbb
jbe
add
subl
and
sub
js
jle
cmp
xchg
push
jge
popf
mov
insb
jl
int3
js
aam
pop
mov
mov
mov
add
ja
fs
and
mov
icebp
sbb
fmull
sbb
scas
subl
push
nop
sbb
or
sub
jp
mov
fisttpll
aam
cmp
pop
pusha
push
loopne
mov
push
adc
cs
adc
mov
movsb
js
xchg
insl
and
dec
sub
outsl
inc
ja
jo
xchg
mov
scas
cmp
cmp
and
imul
push
and
jmp
push
and
shl
push
mov
mull
test
adc
loope
push
mov
inc
imul
or
and
cmp
ds
dec
xor
in
sbb
pop
insb
add
pop
inc
xchg
lahf
and
lock
or
popa
fstl
push
aad
mov
xchg
add
mov
pop
push
inc
es
test
movsb
test
sarl
insb
and
xchg
and
mov
sub
test
insb
sub
xchg
movsb
and
and
push
test
cmp
xor
fwait
pop
xor
jno
dec
shl
xor
mov
sbb
ja
cmc
fisubrs
push
pusha
sbb
mov
dec
cs
and
dec
insb
cld
adc
mov
and
out
and
jae
sbb
inc
cmp
dec
and
call
xor
adc
mov
xor
jl
nop
xor
inc
xor
push
add
xor
sub
clc
mov
sub
xchg
push
cs
sbb
fstps
or
sbb
mov
xchg
pop
dec
ds
lods
cmp
xchg
aam
adc
cs
cmp
hlt
inc
jbe
fmul
and
pushf
or
jp
pop
andb
mov
push
loopne
mov
cli
rcrb
mov
xchg
mov
or
xor
dec
add
xor
dec
fmull
movsl
mov
stc
outsl
daa
dec
inc
fcmovu
sbb
std
jl
mov
int
sbb
xor
sbb
jecxz
pop
xor
sub
jp
jae
adcl
jge
ds
jg
pushf
inc
sbb
dec
and
into
xchg
loopne,pn
mov
cmp
int3
enter
add
mov
jmp
cmpl
mov
insl
aam
dec
and
and
sbb
sbb
clc
and
subl
mov
and
push
jo
sarl
inc
pop
mov
inc
cmp
inc
dec
bnd
fists
adcl
push
pop
test
adc
mov
je
or
fs
mov
xchg
mov
xchg
mov
sub
or
jns
jl
pop
adc
mov
ss
das
fstl
mov
inc
popa
push
and
out
cmp
mov
outsl
jl
pop
xor
outsl
dec
lods
xor
scas
arpl
stos
lds
mov
jge
loope
pop
stc
cld
pop
loope
clc
scas
js
in
jl
repz
lahf
xchg
mov
xchg
rcr
cmp
dec
lahf
pop
cld
adc
xchg
je
lret
mov
pop
mov
adc
lea
bound
lds
push
fldl
xchg
mov
dec
pop
test
sbb
scas
inc
inc
sbb
jbe
in
adc
shrb
jnp
mov
jb
push
or
addr16
aam
and
fstl
or
or
movsl
push
pop
fstpl
loope
enter
and
xor
loope
lods
xchg
push
movsl
jb
in
adc
dec
mov
cmpsl
jecxz
sub
adc
inc
adc
cmp
inc
inc
in
jnp
pop
ja
or
pop
sub
es
push
cmp
out
sub
xchg
test
push
incb
nop
inc
cmp
cmp
pop
repnz
lcall
add
sub
movb
repnz
test
stc
or
test
adc
push
inc
je
cmp
dec
mov
daa
pop
mov
cli
push
adc
dec
cmp
adc
push
push
xor
mov
or
jae
insb
xchg
sub
jge
outsl
test
adc
inc
mov
cmp
and
dec
lods
cmp
jge
push
decl
mov
and
mov
push
sbb
int3
push
jl
inc
cmp
mov
mov
std
ljmp
loope
or
xchg
sbb
push
pop
xchg
or
jmp
clc
mov
xor
out
xor
sbb
xor
cmp
sti
xor
pop
dec
outsl
dec
sti
lret
sti
xlat
add
lods
pop
inc
dec
data16
lahf
add
push
add
mov
pop
sbb
pop
pop
pop
in
xor
xlat
push
popf
fldl
xchg
pushf
popf
lret
add
cs
dec
insl
sbb
in
and
divb
dec
ljmp
outsl
mov
xchg
sub
inc
sbb
cmc
rcll
lahf
kmovw
icebp
jmp
adc
fstpl
cmpsl
cmp
sub
aam
dec
out
fcompl
push
pop
cwtl
pushf
sbb
sti
stos
mov
fs
int
xchg
cmp
sub
xor
pop
sub
outsl
leave
push
pop
mov
cmp
sbb
or
cli
fcom
sbb
cli
jne
cli
add
or
cli
jne
stos
add
xor
cmp
xchg
pop
jo
dec
sbb
clc
out
cli
addr16
mov
push
xor
lret
xlat
cli
push
fadds
push
lahf
popf
lret
fwait
cli
inc
xlat
cwtl
add
or
cli
dec
xlat
imul
iret
add
loopne
test
in
cltd
fisttps
scas
sub
xor
lret
enter
jb
lret
mov
push
ljmp
lret
aas
add
mov
pop
out
cs
dec
adc
pusha
cwtl
pop
pop
fildll
push
push
popf
push
ficoms
nop
pop
pop
mov
mov
sahf
jmp
cli
add
jb
sbb
int
fwait
pop
mov
mov
ljmp
test
push
mov
loop
add
push
out
sbb
or
adc
cwtl
ficoml
sbbb
sbb
xlat
inc
sub
jl
cmpsb
pop
jecxz
cltd
sub
dec
fildll
incl
cwtl
cmp
stos
aad
dec
mov
mov
mov
out
enter
inc
jbe
scas
fs
jl
lret
sbb
cmc
dec
clc
int
cmp
xor
inc
cmp
xor
rcrl
sub
sub
and
pop
sbb
pop
aam
in
mov
fdivrl
and
xor
push
pushf
shrl
lods
or
call
or
nop
push
push
outsb
lods
pop
and
rcl
cmp
aad
adc
mov
pop
cwtl
push
into
jl
sub
lods
sahf
cs
push
popa
mov
icebp
in
das
xchg
test
mov
xchg
mov
out
test
pop
sbb
pop
in
cmp
mov
xlat
inc
jl
mov
inc
or
add
jl
sub
ficoms
push
out
aam
cmp
xchg
ret
mov
fisubrs
mov
das
adc
xchg
pop
adc
jl
pop
xor
push
cld
loop
add
rorb
mov
and
popa
xchg
xchg
push
das
inc
imul
inc
cmp
cmp
inc
adc
push
subl
mov
dec
bound
sbb
dec
xchg
sbb
cld
dec
sbb
sub
jb
jecxz
lods
data16
add
fisttpll
mov
fs
mov
sub
sahf
push
sub
out
ds
push
pop
faddl
fisubrs
lods
das
inc
mov
dec
dec
xor
clc
dec
push
jl
flds
push
and
cmc
jp
mov
imul
push
aam
pop
std
into
mov
in
xor
xor
push
mov
es
pop
lea
dec
xlat
sarb
or
int3
sub
sbb
dec
sbb
pop
mov
fcompl
test
je
inc
inc
add
fildl
ja
rcll
test
mov
popf
fwait
sub
in
dec
cs
dec
sbb
pop
xchg
idivb
lods
scas
sbb
inc
jbe
int3
mov
mov
jle
sbb
dec
or
outsb
jle
into
pop
or
mov
jl
dec
out
imul
sbb
push
push
dec
add
pop
jns
test
int3
push
adc
pop
jl
adc
cltd
sub
pop
jl
enter
sub
dec
push
lods
xchg
cmp
mov
ds
cmp
dec
nop
inc
jb
aas
xor
push
pop
xchg
fmull
jno
test
loop
lcall
push
push
pushf
int
lea
xchg
or
dec
push
jbe
lods
adc
sbb
push
pop
popa
jge
pop
sub
push
nop
push
push
gs
pop
xchg
insb
in
daa
sti
outsb
pop
or
or
in
fisubrl
dec
ficoms
jl
adcb
mov
push
rclb
push
insb
or
or
adc
adc
cli
jl
jmp
in
mov
rclb
add
fimull
pop
popf
ficoms
and
fs
data16
xor
adc
pop
jl
adc
stc
xchg
movsl
mov
dec
adc
jg
cli
das
mov
push
adc
xchg
or
xchg
mov
mov
fs
mov
mov
mov
stos
jl
das
in
sub
mov
das
in
ss
jns
xor
inc
ss
mov
sub
popl
sub
ljmp
mov
loope
out
lods
enter
sahf
or
enter
push
jb
push
xor
loopne
cmp
idivb
decb
xchg
fsts
or
or
js
xchg
adc
fcmovnu
and
or
vmwrite
dec
inc
push
push
cs
xor
test
xor
jmp
cmp
sbb
cs
movb
push
hlt
inc
push
mov
mov
in
hlt
adc
pop
mov
sbbb
hlt
xor
jae
mov
enter
jmp
fscale
mov
push
enter
push
sbb
pop
pop
mov
xlat
push
inc
xchg
dec
dec
std
leave
lock
xor
test
sbb
jp
sbbb
nop
and
daa
in
sub
jl
jmp
and
stc
adc
add
jbe
outsb
out
and
add
push
jb
adc
mov
cmc
add
popa
aaa
enter
je
jb
and
add
jl
push
jl,pn
dec
and
or
stc
shlb
popa
mov
xor
imul
pop
cmc
push
loopne
jae
push
in
mov
xchg
in
adc
addl
xor
shll
pop
sahf
push
cli
aad
dec
cmp
sbb
cmp
sbb
sub
movsb
rcrb
pop
popa
cmp
xorb
push
and
imul
adc
cmpsl
pop
mov
pop
adc
rcr
outsl
insb
rcll
push
cwtl
or
or
nop
pop
sub
sub
push
nop
jg
mov
stc
daa
cwtl
push
addr16
and
add
inc
sub
and
stc
es
lret
das
nop
jae
push
outsl
in
push
add
push
sub
mov
fistpl
jge
pusha
iret
in
mov
and
xor
mov
inc
jb
test
push
sar
or
pop
push
call
and
aad
sbb
popf
xchg
call
sub
ss
enter
bound
cmp
icebp
cltd
cmp
es
jl
xor
xchg
inc
push
mov
das
dec
adc
sub
or
stos
xchg
mov
repz
inc
sbb
pushf
sbb
push
push
test
out
sbb
jmp
dec
imul
and
in
xchg
dec
sarl
push
adc
sbb
xor
push
sbb
in
xor
das
mov
mov
xchg
xor
in
cmp
rcll
fwait
lods
cmp
cmpsl
jl
stos
jl
adc
or
lods
mov
sbb
jp
adc
xchg
push
inc
stc
mov
std
dec
notb
mov
xor
test
dec
orb
stos
jnp
and
rolb
mov
or
xor
cld
mov
jbe
dec
xchg
repz
push
lcall
mov
mov
jns
push
jl
xchg
fnstsw
mov
add
loop
adc
popf
lea
xchg
nop
sahf
xor
inc
aad
mov
nop
js
push
and
arpl
icebp
inc
fcomps
fidivrl
inc
iret
ss
aad
mov
aad
jmp
sahf
jnp
cwtl
fidivs
mov
mov
lods
sbb
xor
add
xor
mov
xchg
fists
inc
mov
or
pop
jge
sub
pop
mov
push
nop
sbb
pop
sbb
jmp
ficoms
mov
inc
rcr
js
dec
enter
push
pop
sub
push
cmp
out
sbb
cmc
nop
lock
ss
xorb
jl
dec
add
jg
loope
gs
jae
jl
push
dec
js
in
idivb
push
xchg
adc
mov
cmp
jl,pn
cmpsb
sbb
mov
mov
jo
sbb
cmp
sbb
mov
add
xchg
loope
or
push
sbb
sub
push
stc
cmp
add
sahf
hlt
xchg
xchg
and
imul
xchg
fnstsw
mov
in
cmp
cmp
pop
int3
jmp
push
mov
adc
dec
adc
jmp
je
xchg
les
ss
xchg
cmp
test
bound
add
les
mov
mov
pusha
xorb
dec
or
pop
dec
and
in
inc
push
jmp
xor
popf
shll
int3
or
fcoms
or
test
nop
push
mov
sbb
adc
sub
push
aas
push
js
and
mov
sbb
push
out
xchg
xchg
addr16
lret
in
nop
mov
jno
mov
es
sbb
push
push
mov
xchg
or
popf
push
lds
cmp
mov
and
sub
cmp
adc
sub
in
lahf
fcompl
dec
mov
cmp
xchg
cmp
push
enter
sysenter
xor
out
cmp
or
dec
cs
aad
mov
dec
mov
dec
dec
out
pop
out
dec
sub
xor
dec
dec
dec
decb
jmp
jl
sub
das
dec
icebp
mov
imul
dec
cwtl
movsl
dec
dec
xlat
xchg
lock
dec
cwtl
leave
pop
dec
mov
lahf
dec
test
les
dec
test
leave
nop
dec
lahf
rcl
test
enter
sbb
jge
xor
dec
sub
das
dec
icebp
mov
dec
sub
das
dec
icebp
sarb
push
enter
push
int
dec
dec
cwtl
mov
lock
dec
cwtl
movsl
dec
dec
xlat
mov
xchg
dec
dec
xlat
test
int3
dec
dec
decb
dec
enter
dec
inc
pop
jecxz
cli
xchg
imul
nop
dec
das
das
sub
cmp
cmpsl
test
in
std
xlat
aam
repz
rorb
add
push
aam
test
cwtl
xchg
cmp
sub
in
sbb
jg
rorb
movsb
sbb
aam
test
jg
jle
ljmp
insb
add
faddl
mov
insb
lods
jmp
ljmp
jg
xor
arpl
test
rorb
jo
jle
aam
repz
in
sbb
jge
xchg
std
cmp
push
cmp
or
push
mov
xchg
or
xor
mov
mov
pop
mov
mov
sub
mov
mov
and
dec
xchg
xchg
and
cs
std
xchg
xor
pushl
adc
and
pop
add
fisttpll
mov
rcll
or
mov
add
fsubr
mov
cltd
jb
popf
dec
mov
ljmp
je
test
mov
xchg
jmp
clc
push
frstor
cmp
or
fidivrs
mov
jbe
jl
in
mov
das
lods
mov
mov
and
jmp
in
sbb
jo
or
adc
in
xchg
sub
xchg
leave
pop
mov
inc
movsl
in
in
and
stc
push
test
jmp
in
hlt
mov
inc
sbb
jmp
fisttps
xchg
adc
xlat
push
inc
fsubrl
test
inc
dec
mov
outsl
aaa
dec
push
adc
cmp
sub
xchg
inc
xor
lods
mov
mov
pushf
mov
mov
dec
and
insb
pop
aam
in
mov
add
dec
dec
lock
and
hlt
mov
and
xlat
iret
push
mov
aam
inc
inc
out
insl
lods
xchg
sub
push
sub
push
in
push
bound
sbb
in
in
in
out
iret
dec
push
or
hlt
es
scas
fimull
pop
dec
jb
pop
sbb
mov
fsub
popf
pop
adc
mov
test
fidivs
push
aam
jbe
subb
sbb
add
in
lods
int
inc
sbb
sub
pushf
insb
cmp
sbb
popf
sbb
adc
test
lods
sub
popf
sbb
scas
sahf
xchg
addr16
push
mov
lods
push
and
data16
dec
js
and
push
aam
fwait
push
lods
push
cs
or
xor
adc
push
test
adc
jne
push
mov
popf
inc
rcll
pop
js
lock
sub
sub
int3
dec
push
mov
and
push
add
dec
ret
dec
loop
mov
jle
mov
sbb
outsl
adc
dec
std
xor
push
sbb
aam
push
add
dec
popf
mov
pop
popf
mov
lea
xchg
inc
cs
xor
push
cmp
push
sbb
andb
gs
add
add
or
sti
xchg
mov
lods
sbb
sbb
std
jecxz,pt
and
mov
popf
dec
xor
movsl
or
adc
dec
jne
pop
loope
mov
cmp
jnp
pop
push
fs
jp
mov
pop
lahf
push
dec
das
xor
push
jmp
sub
or
jl
inc
js
xor
aad
sbb
pop
cld
cs
nop
xchg
push
jl
out
jbe
cltd
push
jg
xchg
sarl
inc
cmp
dec
popf
mov
inc
imul
loopne
je
adc
in
jae
imul
lcall
hlt
mov
or
xor
cs
push
lods
pushf
xchg
fs
lea
mov
jo
fbstp
sub
pop
sbb
sbb
sub
rolb
movl
adc
into
mov
push
iret
lret
cmp
scas
outsl
push
and
outsl
or
in
adc
sbb
cmp
test
xchg
jle
aad
cs
shrl
push
lahf
cld
dec
in
vsubsd
mov
mov
and
xor
and
jecxz
adc
rorb
pop
xchg
and
dec
lods
dec
jle
xor
mov
vpunpckhqdq
jg
lret
add
push
das
punpckhbw
push
repnz
push
sbb
fdivrl
in
pop
pusha
push
es
xchg
sahf
push
add
xchg
sbb
or
dec
mov
or
mov
in
sbb
cld
xchg
insb
in
in
sbb
lods
rcrl
lahf
dec
xchg
test
rcrl
lret
sub
leave
es
sub
xchg
dec
dec
sarl
in
in
push
add
push
mov
test
cmp
inc
pop
xchg
movsl
cltd
mov
scas
jl
xchg
and
ret
cmp
xchg
incl
cmp
sbbb
and
mov
mov
and
ds
and
mov
mov
js
jge
sbb
sbb
ss
sbb
jl
xchg
test
and
push
sbb
xchg
fcompl
xor
pushf
mov
enter
sub
jb
inc
fcmovu
loop
mov
inc
jno
jle
nop
adc
cmp
xchg
cltd
jo
mov
into
rep
xor
xor
addl
pushf
and
pushw
push
arpl
mov
faddp
hlt
xor
push
adc
and
push
mov
into
mov
cs
addr16
cmp
iret
dec
adc
lcall
sti
testb
inc
adc
or
xchg
dec
pop
lahf
sbb
cwtl
sub
cmp
cmp
mov
push
fs
mov
stos
movsl
shll
ret
fildll
mov
dec
mov
jmp
or
filds
ds
mov
test
pop
out
mov
rorl
nop
sbb
sub
mov
push
mov
pop
inc
cmc
fdivs
sub
aam
fstps
je
jg
sbb
sbb
sub
out
mov
sbb
movsb
sub
enter
push
int3
add
xorl
mov
lret
mov
lds
arpl
mov
dec
fldenv
dec
popf
push
jno
xor
mov
je
sahf
inc
adc
imul
fistpll
xchg
mov
cmp
gs
jmp
ret
ja
stos
das
pop
and
movsb
pop
cmp
cmp
je
xchg
mov
rcl
xor
ret
push
fldenv
cmpsl
loopne
push
push
rclb
xchg
sbbl
scas
addb
sarb
imul
pop
push
push
dec
aaa
popf
dec
pop
pop
xor
jns
dec
or
fs
ret
mov
cmp
cmp
in
cmp
inc
or
repz
pop
in
and
ss
test
insl
push
movsb
shlb
xor
or
pop
cmpl
dec
out
pushf
cmp
insb
ret
test
cli
xchg
loope
sarl
push
inc
shrl
mov
in
mov
push
dec
cmp
pop
adc
sahf
or
dec
mov
mov
cmp
dec
cmpsl
das
cmp
fsubrl
fwait
lret
xchg
cmp
xor
mov
cmp
and
xor
jp
loop
inc
mov
in
mov
adc
sub
divb
adc
fcmovb
push
mov
sbb
jmp
mov
jle
mov
call
fmull
xchg
ret
pop
js
enterw
jg
and
jno
cmp
jbe
pusha
mov
adc
pop
dec
cmc
bound
mov
adc
push
mov
dec
and
add
xchg
inc
mov
jnp
jl
les
adc
aas
dec
cli
push
pop
test
into
shl
hlt
fbstp
add
mov
jl
and
inc
mov
mov
push
insb
fs
bound
adc
jl
shrl
sbb
into
dec
pop
insl
fs
das
adc
jae
sbb
pushf
aaa
test
sbb
cld
loop
cmp
cmp
cld
jl
xor
push
mov
lods
xchg
std
popf
in
xor
xor
imul
dec
outsl
jg
xor
pop
jle
lea
fwait
add
outsl
mov
outsl
loopne
add
cli
pop
pop
xchg
jg
clc
pop
xorl
scas
mov
pop
pop
xor
std
iret
pop
out
jmp
outsb
lret
push
cwtl
cs
in
xchg
insl
sbb
in
in
xor
icebp
std
iret
pop
out
add
and
jecxz
repz
jmp
outsb
lret
push
cwtl
cs
in
xchg
sbb
in
xor
in
xchg
out
fsubs
dec
mov
rcr
outsl
inc
pop
xchg
pushf
das
pop
xchg
iret
out
clc
pop
sub
cs
cs
in
lret
push
cwtl
lods
push
insl
xchg
sbb
in
cmp
jg
dec
cmp
xlat
clc
pop
push
ret
in
cs
lret
push
mov
outsb
xchg
sbb
mov
pop
sbb
in
in
xor
pop
in
cmp
xor
fucomip
idivl
push
dec
mov
pop
aas
pop
outsl
pop
xchg
out
pop
leave
push
add
cwtl
and
jecxz
repz
cs
sub
push
add
inc
rcrl
out
repz
dec
mov
jecxz
int3
std
inc
shrl
rcr
out
inc
pop
xchg
test
aaa
mov
push
xchg
inc
shrl
ror
insl
inc
pop
xchg
pushf
sub
clc
pop
sub
cs
sub
out
daa
lods
dec
mov
dec
jecxz
mov
sub
out
pop
in
xor
adcb
in
clc
pop
sub
insl
lret
push
mov
lods
push
in
xchg
insb
and
and
mov
in
xor
adc
push
out
adcb
outsb
jmp
das
in
lret
push
cwtl
lods
push
insl
xchg
in
sbb
in
cmp
shr
out
xchg
dec
mov
jecxz
aam
inc
shll
lods
out
adcb
cld
or
in
adc
dec
cmp
shl
out
push
out
rclw
loop
push
pop
jmp
push
stos
and
imul
sub
repnz
ljmp
push
push
sub
icebp
pop
jmp
jno
imul
sub
add
xchg
push
pop
push
pop
dec
pop
adc
pop
rcrb
pop
nop
pop
mov
pop
dec
push
adc
rcll
xchg
push
mov
dec
push
adc
rclb
xchg
push
mov
dec
push
adc
outsb
popl
repnz
ljmp
into
push
xor
sub
icebp
into
jmp
into
jno
imul
lock
call
xchg
mov
pop
sub
mov
stos
in
lret
pushf
std
out
fildll
das
loop
loope
outsb
iret
insl
in
ljmp
loop
dec
lods
stos
insb
stos
sub
out
add
xor
das
jae
xchg
scas
mov
shrl
repz
rep
rep
divl
sbbl
scas
in
and
pop
mov
dec
and
or
sbb
cmp
out
hlt
xchg
xor
outsb
xor
mov
mov
pop
inc
and
or
lods
pop
cmp
inc
mov
mov
inc
adc
push
imul
jnp
mov
push
mov
fnstcw
push
jge
xchg
mov
out
mov
out
cld
lods
insl
inc
sbb
inc
xchg
jb
pushf
sub
inc
test
inc
cld
and
jge
mov
dec
pop
out
jl
movl
xchg
dec
test
mov
sbb
jmp
shrb
inc
or
int
cmp
xchg
cwtl
push
and
sbb
pushf
sti
int3
enter
xchg
add
test
sub
dec
pushf
pop
inc
loopne
mov
xchg
and
into
in
sub
sti
pusha
pop
test
and
mov
inc
ds
mov
mov
nop
push
dec
jmp
je
cs
inc
in
adc
sti
push
lods
sub
and
cli
scas
dec
movsb
into
push
push
inc
dec
jp
xor
mov
insl
push
or
pop
pop
cmpb
hlt
jo
pop
movsb
mov
jns
mov
mov
push
mov
incb
lahf
icebp
adc
out
dec
rorl
mov
sub
scas
adc
bound
ret
dec
cmpsb
or
jb
xor
arpl
fdivl
cmp
xor
lea
sar
jecxz
in
mov
mov
je
lcall
cs
hlt
jbe
aas
test
or
sbb
xchg
scas
sti
movsb
mov
pop
outsl
mov
mov
dec
mov
pushf
mov
aaa
adc
rcrb
xchg
adc
insl
out
push
loop
mov
xor
aam
loop
out
mov
mov
int
test
stc
xor
stos
dec
xchg
adc
mov
adc
push
das
add
gs
test
push
adc
sbb
test
fcoml
fistl
push
jo
pop
aam
outsb
push
add
int
jns
mov
fsubl
xor
sub
data16
outsb
inc
ljmp
jbe
movsb
xor
stc
popf
add
ss
cld
mov
pop
xchg
mov
repz
imul
fs
adc
shr
aam
or
fsub
xchg
or
cmp
dec
adc
pushf
push
adc
ss
fdivl
aas
push
pop
pop
xchg
cmp
push
or
daa
mov
loope
add
inc
push
int
dec
adc
lods
dec
aam
xor
fists
mov
int
cmpsb
outsb
aam
xor
std
outsb
pop
in
out
jle
mul
jl
or
lea
in
xchg
in
pop
cld
js
rcrl
jno
popf
out
sub
mov
outsb
loop
dec
fs
pop
xchg
pop
insl
imul
mov
insb
mov
inc
out
add
push
enter
lahf
mov
xlat
enter
lahf
mov
fnstsw
pop
mov
xlat
enter
lahf
mov
xlat
pushf
sti
adcl
cmp
das
pop
and
enter
imull
and
enter
lahf
mov
xlat
enter
lahf
mov
std
cmp
das
pop
and
enter
lahf
mov
addr16
lahf
mov
xlat
enter
lahf
mov
fnstsw
pop
mov
xlat
enter
lahf
mov
xlat
pushf
out
xchg
shrl
pop
and
xor
xor
add
dec
dec
mov
push
push
push
int
je
cmp
jns
outsb
jae
push
push
xchg
mov
loopne
jb
adc
sbb
add
dec
or
dec
fistpl
mov
in
dec
shrl
jb
sbb
hlt
lret
test
xchg
fs
inc
imul
xchg
inc
mov
aad
dec
jbe
sub
insl
adc
sub
inc
nop
xor
dec
cmp
inc
nop
inc
mov
ja
sbbl
icebp
lods
lods
hlt
xor
cs
sahf
sub
xchg
push
movsb
cltd
mov
cmp
pusha
add
mov
push
xor
je
jle
movsb
cmp
xor
jle
and
cmp
jle
cli
ss
insl
imul
cmpsb
sub
fs
in
jo
push
jae
shlb
js
dec
jl
addb
pop
mov
lods
ja
mov
sub
mov
dec
outsb
nop
test
xchg
pop
mov
xlat
dec
outsb
test
jno
push
scas
pop
es
mov
pop
mov
nop
mov
mov
cs
mov
fistps
mov
mov
imul
sub
lret
sub
and
nop
dec
cli
sub
fcmove
mov
test
notb
into
negb
notb
or
add
xchg
in
dec
sub
mov
dec
lods
xchg
push
shrl
leave
rcrl
ds
xchg
test
sbb
xlat
push
push
rolb
jmp
mov
push
inc
inc
stc
and
sbb
cs
jmp
rcrl
aam
mov
dec
or
or
lret
das
cs
loopne,pn
lods
enter
sbb
jl
dec
push
or
push
cmp
cwtl
xchg
push
or
xchg
push
mov
movsb
push
enter
clc
xlat
push
xor
insl
lahf
in
call
sbb
cwtl
adc
inc
ja
dec
push
or
or
lret
push
insl
or
in
pop
lock
push
movsb
enter
clc
lods
pusha
or
push
jns
ja
nop
int3
push
xor
mov
data16
xor
sbb
push
sarb
aas
or
cs
jae
mov
push
ss
xlat
cmp
das
sbb
pop
ret
icebp
inc
outsb
sbb
xchg
gs
ds
dec
push
sbb
xchg
mov
hlt
cmp
cld
jo
cmp
jl
fs
sub
and
add
dec
loopne
cld
movsb
xor
mov
mov
sub
cmp
test
push
inc
and
sub
jae
xor
cmp
mov
and
inc
pop
cmp
insb
xchg
aas
jl
mov
and
jne
pop
mov
pop
and
lods
hlt
cld
inc
adc
inc
call
int
add
add
and
adc
dec
nop
jl
adc
cwtl
and
loope
sbb
js
sub
sbb
mov
push
stos
pop
imul
shl
je
mov
inc
inc
jl
adc
inc
pop
nop
int3
pop
sub
iret
loopne
inc
or
dec
out
push
lahf
sub
movsb
sbb
movsl
in
xchg
sarb
fucomi
xor
add
sbb
adc
mov
lcall
cs
pop
int
sbb
dec
daa
xor
fs
jl
sbb
push
popf
clc
mov
stos
jmp
and
mov
mov
mov
push
adc
sub
shlb
test
add
inc
xor
enter
xor
xor
cmp
cwtl
cmp
pop
movb
sbb
dec
sysenter
and
fdivs
fsts
push
clc
and
aam
sub
out
adc
sub
fld
push
test
dec
mov
dec
dec
fs
jl
daa
xor
lret
fwait
jl
adc
mov
sub
rcrl
movsb
xor
pop
aas
out
in
inc
or
dec
jbe
adc
ds
cmpsb
lahf
push
in
pop
lahf
and
push
pop
mov
mov
cmp
xor
insl
pushf
push
mov
pop
jl
insl
and
dec
push
int
out
and
leave
xor
aas
pop
and
int
mov
pop
clc
adc
and
xchg
cmp
movsb
jg
ja
jbe,pt
aad
test
roll
jle
jl
fs
jge
cmp
or
cmp
ret
fisttpll
aas
add
jecxz
mov
repnz
mov
xor
sub
mov
add
adc
pop
movsb
jp
out
dec
cmp
dec
jl
fs
hlt
ds
mov
lods
cmp
jge
add
ficompl
test
add
mov
jl
mov
cmp
addr16
fidivs
xor
cmp
xor
sbb
pop
mov
sbb
cltd
xchg
xor
xor
test
cmp
ljmp
pop
pop
and
add
in
sub
repz
ja
inc
pushl
adc
fsubrs
xchg
mov
lock
ja
test
outsl
cmp
and
xor
pop
mov
xchg
aad
movsb
inc
jbe
data16
stc
xchg
sbb
loope
in
icebp
lods
or
lahf
call
xor
push
xor
inc
les
pop
adc
add
pop
scas
insl
fmul
fs
cmpsl
mov
add
and
mov
dec
cmp
cmp
clc
jno
cmp
bound
aad
les
pop
mov
enter
lock
fimull
xor
pop
mov
cmp
shl
pusha
sub
bound
xchg
mov
xor
sahf
outsb
std
ss
pop
push
jl
in
mov
ja
sti
and
ss
sbb
dec
lods
insl
outsb
les
jp
jl
adc
int
dec
aam
adc
scas
data16
xchg
dec
mov
add
or
mov
in
rcr
dec
sti
sub
add
test
inc
inc
pop
mov
ficoms
or
inc
lock
push
ja
xor
jne
ja
mov
ljmp
inc
mov
bound
mov
pop
xchg
inc
addb
sti
xor
mov
call
cmc
xor
mov
loope
test
sti
sub
mov
sub
and
dec
lcall
dec
mov
xor
and
loop
repz
cwtl
sbb
jae
jne
mov
pop
mov
mov
and
push
mov
inc
push
xor
or
mov
jnp
btr
jmp
in
stos
mov
jo
adc
cld
adc
pop
jg
xchg
stc
push
xor
add
cmp
in
and
loope
movsb
adc
push
inc
fwait
ret
push
fistl
cltd
mov
or
loopne
subps
call
inc
jno
mov
mov
lods
fstl
cmp
daa
in
push
pop
rcr
test
mov
enter
int
adc
jge
push
inc
dec
hlt
dec
xchg
xor
aad
je
test
push
pop
test
aaa
mov
dec
push
outsb
lods
xor
mov
mov
pop
sub
test
xchg
inc
insl
inc
sub
je
mov
in
popf
rol
dec
xor
rcl
in
aam
loop
ret
jae
jl
pop
enter
inc
mov
mov
pop
dec
sahf
out
clc
es
inc
mov
xor
cmp
cwtl
enter
in
xor
and
lods
lods
pop
add
jns
pop
mov
jecxz
inc
dec
pop
mov
dec
pusha
or
xor
adc
inc
cld
adc
push
cld
cmp
test
or
into
xchg
jl
pusha
out
mov
loopne
notl
pop
scas
scas
and
dec
mov
loope
pop
rclb
mov
pusha
mov
subb
push
aas
mov
mov
mov
popf
add
xor
scas
add
ja
mov
into
jo
pop
sti
xchg
push
lcall
push
pusha
cmp
popa
aam
orps
pop
test
pusha
cwtd
adc
jo
and
mov
out
fstp
mov
mov
popl
out
dec
sbb
pop
test
fs
hlt
lods
push
mov
sub
mov
or
or
pop
push
pop
fs
xor
or
cmp
lret
aas
push
mov
stc
mov
lcall
dec
xchg
push
push
imul
mov
jb
inc
aam
cmp
or
mov
cmc
xor
lea
jno
je
cmpsl
sub
xchg
pop
sub
cwtl
sarb
fisubs
es
dec
dec
mov
sbb
mov
push
les
aam
ds
pop
idivb
adcl
push
push
fs
and
xor
movsb
in
int3
add
mov
fs
inc
xchg
or
sub
xor
and
mov
pop
sub
test
pop
jno
js
fsubl
mov
or
shrl
jl
and
cmp
pop
js
dec
and
adc
fdivr
push
sub
sub
xchg
rcl
dec
mov
add
movsl
cmp
pushf
out
adc
pop
adc
mov
add
jo
jbe
dec
daa
and
mov
adc
or
cmp
lds
dec
adc
enter
hlt
cmp
xlat
xor
and
fs
xchg
mov
das
std
lods
and
jae
std
hlt
add
mov
jl
jb
cltd
test
dec
jecxz
mov
icebp
les
dec
movsb
movsl
je
iret
pop
pop
cmp
xor
int
sahf
sbb
shlb
aam
adc
mov
mov
negl
pop
jns
fsubl
xchg
pop
add
aam
imul
negl
pop
lcall
int
cmc
mov
sbb
add
data16
int
ss
std
jge
lds
roll
jnp
cmc
icebp
popf
inc
cs
push
and
int
cmp
dec
les
pop
jne
out
sbb
cltd
and
adc
mov
fsub
inc
push
aaa
inc
push
push
sub
idiv
push
sbb
shll
inc
pop
mov
mov
ja
push
and
leave
or
and
push
dec
mov
loope
cmpsb
dec
lods
scas
fistl
andb
fisttps
cltd
out
or
dec
lahf
xchg
sub
jae
mov
and
dec
push
dec
xorb
sub
movsl
dec
xor
or
in
push
lahf
cmp
inc
ds
cmp
jns
cwtl
push
xchg
inc
loopne
cmp
in
insb
push
scas
jnp
jne
xor
adc
xor
dec
mov
dec
cmc
sub
mov
or
nop
mov
dec
pandn
and
pop
push
hlt
sub
mov
pop
inc
pop
dec
adcl
out
and
push
sub
pushf
jae
xor
mov
popf
xchg
jl
shl
sbb
and
inc
xchg
cmp
xlat
ss
pop
xor
outsb
adc
and
ret
xchg
push
test
inc
pop
in
xor
pop
pusha
insl
jno
xchg
orl
ret
inc
mov
sbb
dec
jge
cmpsl
cmp
enter
inc
mov
dec
sub
mov
mov
popf
adc
or
adc
adc
mov
dec
in
lock
lock
scas
pop
dec
jecxz
mov
addr16
cld
jmp
lahf
or
push
scas
fwait
mov
in
popf
inc
jecxz
cmpsl
jge
jecxz
mov
inc
xchg
jecxz
call
cwtl
pop
xchg
cwtl
pop
inc
pop
aas
stc
sbb
cmpsl
push
cmp
mov
mov
inc
sub
enter
jmp
jg
addr16
fildll
test
or
in
cltd
dec
les
push
paddq
cmp
call
or
sub
popf
jne
xor
dec
jmp
fistps
sbb
andl
test
dec
scas
clc
stos
outsl
lahf
jns
sub
sbb
mov
or
jnp
adc
rcrb
push
out
out
jge
out
iret
xor
sub
out
push
lock
fidivs
pop
fldt
test
fisubrs
movsb
fcompl
jle
insb
hlt
fs
jne
ljmp
dec
dec
inc
adc
lret
inc
mov
dec
cmp
cltd
sbb
enter
sbb
inc
push
in
mov
xchg
or
nop
fidivrs
into
in
nop
in
push
fisubrs
dec
or
lea
aad
movsl
mov
aas
scas
adc
cltd
in
les
lods
inc
test
les
push
in
xchg
dec
cmpsl
add
and
rolb
maskmovq
notl
inc
xchg
je,pn
pop
pop
xchg
cmp
dec
insl
popa
mov
out
and
das
and
hlt
sub
mov
push
inc
mov
xor
sub
stos
outsb
icebp
sbb
icebp
sub
stos
jb
mov
pop
mov
xlat
fs
lea
fs
mov
sub
add
dec
pusha
mov
xchg
jle
jmp
adc
scas
xor
mov
mov
int
mov
dec
push
mov
mov
inc
and
out
movsb
mov
pop
popa
push
aas
ret
cmp
in
ljmp
mov
dec
and
xchg
mov
test
popa
and
or
and
insl
sbbl
push
inc
ficomps
ljmp
inc
in
sbb
adc
or
dec
hlt
mov
adc
mov
jnp
aaa
mov
dec
push
pop
das
ret
xor
sbb
std
xchg
dec
insl
mov
dec
sub
jl
inc
push
sbb
repnz
push
add
inc
push
test
inc
stos
mov
mov
lods
xchg
sub
cs
lods
das
pop
mov
adc
insl
dec
jbe
mov
inc
xchg
pop
lods
lcall
or
ja
in
enter
sub
pop
rorb
mov
into
mov
mov
popf
dec
cltd
mov
nop
mov
outsb
enter
cmp
ficomps
xor
cmp
pop
mov
pop
mov
pusha
mov
js
pop
ror
sahf
and
loop
nop
movsb
push
cmp
ljmp
mov
xor
lahf
divl
inc
and
xlat
clc
cmp
test
push
mov
jb
cmc
repnz
test
or
repz
nop
adc
and
xchg
or
aaa
mov
mov
loope
shll
push
mov
cmc
dec
adc
lock
das
je
or
insl
mov
js
mov
mov
dec
mov
test
aam
ret
je
fnstenv
and
test
test
push
xchg
sub
test
shlb
and
mov
test
and
mov
cmc
dec
bnd
sbb
mov
xor
push
fists
repz
xlat
or
pusha
jl
xor
add
js
cwtl
sahf
lds
dec
lods
push
push
mov
test
jecxz
xor
sub
in
test
mov
pop
pop
xor
and
and
push
ss
insl
fsubrs
xor
insl
and
aad
outsb
std
or
or
inc
sbb
pop
mov
inc
aad
negl
mov
iret
and
pop
sub
xor
idivb
das
jecxz
add
jno
xchg
push
lods
sub
sub
scas
cmp
loopne
jl
js
lret
sub
mov
or
dec
add
mov
dec
mulb
jl
sub
das
cmp
test
mov
decl
adc
and
xchg
xchg
dec
mov
adc
pop
jb
clc
inc
in
mov
mov
sarb
loopne
movhps
jl
inc
mov
push
in
ss
test
lock
sub
fcmove
push
leave
int
std
or
inc
push
aad
and
pop
add
dec
inc
or
popf
dec
fimull
mov
rolb
mov
lahf
aad
adc
fists
out
dec
data16
std
mov
ficompl
ficoml
das
dec
orl
xchg
outsb
pop
ficoml
mov
xor
xchg
imul
pop
lcall
pop
sbb
nop
push
or
adc
nop
dec
or
fistpll
dec
dec
push
lahf
or
xchg
inc
pusha
lahf
enter
or
xchg
dec
cmp
hlt
mov
enter
insb
sbb
xor
cmc
add
je
mov
sbb
adc
sbb
push
push
fs
inc
imul
add
push
cmp
cs
fcoml
repnz
pop
mov
adc
push
in
mov
ljmp
xor
sti
mov
pusha
fstl
shrb
insb
mov
adc
subb
push
and
pop
fnsave
adc
nop
dec
push
sbb
mov
mov
das
or
in
adc
fucomip
sbb
xor
dec
sub
mov
xchg
or
test
xor
mov
sub
push
push
jmp
push
push
xlat
dec
sbb
std
mov
pop
mov
push
fs
dec
push
insb
dec
sbb
adc
je
sbb
jecxz
mov
mov
jl
dec
or
subb
faddl
mov
sbb
inc
sbb
jb
scas
pop
popf
dec
dec
inc
sbb
jb
scas
pop
popf
or
movsb
push
inc
cmc
js
push
dec
inc
and
aad
pop
sbb
inc
push
pop
xchg
dec
fadds
pop
xchg
fadds
pop
xor
jle
ds
xchg
fadds
pop
dec
jb
inc
and
inc
and
inc
in
push
push
push
inc
pop
out
dec
inc
inc
pop
mov
inc
inc
pop
mov
inc
inc
pop
mov
inc
dec
pop
sbb
jecxz
mov
sbb
je
out
jecxz
js
dec
jecxz
and
jecxz
mov
or
dec
xor
mov
or
cmp
and
sbb
mov
lds
das
imulb
aas
adc
pop
aam
sbb
xchg
lods
or
in
loopne
negl
cmp
mov
sub
int
cwtl
out
sbb
dec
add
mov
jl
aas
cmp
pop
incl
sti
pop
or
scas
loope
push
xlat
iret
insl
pop
sarl
pushf
xor
imul
ret
mov
xor
out
mov
push
push
es
jae
sbb
inc
or
xor
jo
lcall
jnp
mov
sub
cmpsb
je
sbb
movl
mov
ret
je
lret
jecxz
lods
mov
daa
sub
sub
je
pop
and
sub
cld
bound
scas
outsl
dec
outsb
push
mov
cwtl
xor
jmp
sbb
mov
jns
fwait
dec
cmp
dec
pop
imul
xchg
dec
push
dec
mov
pop
outsb
add
jae
je
inc
sbb
cmpsb
dec
dec
loopne
nop
sub
xor
xchg
mov
gs
les
setl
lods
gs
push
and
sbb
jne
movsb
xor
xchg
xor
mov
out
xor
push
mov
adc
lods
mov
pop
sbb
je
adc
lods
pop
sub
sti
pop
stos
add
scas
cmpsl
dec
inc
xchg
nop
sti
cwtl
inc
dec
sub
out
sbb
fistpll
pop
jne
sub
je
and
adc
adc
lcall
sbb
adc
test
cmp
cmp
iret
adc
adc
decb
out
sub
cmp
dec
xchg
xchg
xchg
add
dec
push
rcrl
add
push
das
or
sbb
lods
jnp
mov
mov
xchg
add
lea
cli
out
push
xor
int
decb
pop
sti
cwtl
inc
dec
daa
push
loope
sub
mov
imull
sbb
and
lret
pop
add
scas
and
sbb
cwtl
xor
dec
nop
pop
jae
and
jnp
cmpsl
mov
std
xchg
mov
jae
je
mov
ljmp
fisttps
mov
sub
or
sbb
mov
arpl
cwtl
pop
mov
xor
push
out
lock
mov
xor
jno
mov
mov
push
aas
cmp
add
add
lret
or
push
adc
and
cwtl
sub
dec
push
nop
scas
leave
out
dec
mov
and
dec
pop
sbb
scas
xchg
dec
push
sub
sti
in
or
sub
je
loopne
hlt
add
cli
push
imul
pop
es
xchg
cltd
test
push
cmp
adc
mov
xor
jg
pop
inc
mov
fidivrs
fisubs
mov
fmull
mov
xor
mov
dec
sti
lret
or
lcall
shr
and
int
add
dec
xchg
sti
out
jl
or
fsubrl
ficoms
sub
mov
icebp
lea
adc
mov
bound
or
cmp
fstl
jge
outsb
or
pop
cmp
cmp
sbb
rcrl
sub
movsb
jl
js
xor
adc
aam
cmp
cwtl
mov
adc
xchg
in
sbb
stos
aam
sub
rcl
enter
in
mov
int
fadds
lret
aam
cmc
sbb
mov
adc
imull
pushf
cmc
call
lcall
int3
add
je
std
or
mull
mov
dec
sub
or
in
js
and
ja
or
lds
mov
mov
jle
jl
rcrb
lcall
sbb
jo
jg
mov
int
adc
lods
adc
sbb
daa
andl
js
iret
pop
mov
cmpsl
lret
mov
adc
out
movsb
ret
xor
das
hlt
lahf
sbb
dec
inc
pop
push
pop
xlat
arpl
add
sbb
scas
clc
xchg
adc
mov
test
cmp
mov
or
add
in
icebp
xchg
fstps
mov
pushf
in
lret
ret
pop
add
imul
xchg
cmp
pushf
pushf
sub
dec
xlat
or
dec
stos
adc
add
mov
sbb
xor
cmp
and
pop
jmp
nop
dec
push
pop
and
shll
and
prefetch
dec
cwtl
in
jmp
sub
lahf
lods
hlt
push
add
lods
push
push
and
dec
cmc
scas
add
test
mov
add
sbb
fildll
call
mov
imul
shlb
das
cmp
push
sub
sub
push
in
mov
push
mov
cli
xor
cs
repz
or
nop
dec
in
dec
xchg
pushf
xor
mov
and
lock
jge
divb
pop
jns
pop
sub
xlat
dec
sub
rcrl
dec
imul
pusha
scas
popa
sub
in
ja
push
jae
inc
dec
lods
lahf
mov
cmp
call
jno
shll
into
add
dec
cld
sub
pop
pushf
ret
in
cmp
popf
push
pop
mov
scas
bound
mov
sbb
dec
mov
mov
in
aaa
jl
mov
xor
xchg
sub
inc
cmc
andl
push
lods
mov
and
insb
jmp
int
and
mov
scas
pop
je
dec
scas
push
pop
je
mov
int
cmp
sarb
and
arpl
rorl
loop
je
pop
loope
scas
mov
nop
mov
loopne
jmp
call
xchg
ret
or
inc
add
scas
test
jns
scas
cltd
jge
mov
imul
sbb
or
in
fadd
ja
rcrl
inc
das
mov
jl
rcr
dec
aam
jno
sbb
sbb
add
imul
jne
sbb
call
mov
imul
jns
insl
call
fisttpll
dec
and
jge
jbe
cmp
sbb
and
ds
xchg
cmp
push
test
jl
ftst
jo
fdivr
or
scas
or
sub
faddl
lods
pop
lods
mov
push
cli
mov
cmp
lea
mov
mov
jl
push
pop
or
adc
dec
mov
pop
les
mov
xor
dec
pusha
or
jl
inc
int
loop
jmp
or
dec
mov
xchg
in
hlt
mov
push
pushf
hlt
jne
push
ret
push
inc
dec
or
popf
jl
cltd
mov
cmp
fisubrl
or
daa
scas
stos
jle
rolb
movsb
enter
push
ds
dec
xchg
mov
dec
adc
lock
scas
es
mov
lret
add
jno
xchg
shr
pop
mov
scas
inc
dec
das
fldenv
or
je
add
popf
fnstsw
push
ror
sub
lahf
mov
dec
fsubrl
cld
jae
sub
dec
cmp
das
fmull
mov
mov
sub
in
sub
jl
sub
mov
dec
inc
outsb
lret
push
inc
popf
sbb
sub
int3
push
lods
sub
add
push
fadds
jnp
aam
test
jnp
sarl
inc
jnp
roll
jne
std
mov
out
or
xorl
cmc
lock
adc
in
movsl
loop
ds
push
mov
fldl
adc
fcomps
add
imul
ffreep
and
add
adc
add
lods
add
mov
add
sub
sub
repz
push
lret
lods
movsl
or
push
lods
adc
pop
adc
insb
sbb
stc
into
dec
jl
sbb
cmp
or
mov
sbb
cltd
jl
xor
push
sub
xchg
outsb
sbb
push
int3
pushf
mov
das
sub
push
iret
xchg
mov
jle
sbb
sub
mov
add
pop
pop
pop
sub
fwait
aas
xchg
in
sbb
xchg
sbb
stos
and
imul
dec
sbb
les
and
xchg
jge
insb
idivl
inc
inc
fstps
das
cmp
dec
lods
lea
fcomps
push
lret
xor
cmp
int
orb
fsub
inc
mov
xor
pop
sbb
add
mov
fcoms
mov
cmp
lret
xor
int3
mov
sbb
sbb
add
shrl
sahf
add
jl
cwtl
pop
sbb
adc
pop
cltd
pop
in
pop
lds
cmpsl
leave
cmp
mov
enter
or
jmp
cwtl
lock
gs
or
inc
jle
adc
fwait
pop
and
jb
or
mov
in
mov
mov
loopne
pop
in
mov
cmp
imul
sbb
rolb
adc
ret
addr16
mov
daa
out
adc
jne
rorl
insb
fsubl
mov
mov
popa
mov
fists
gs
xor
mov
cli
cli
rsqrtps
or
ds
cli
xchg
lea
sbb
in
lods
sub
rep
push
or
hlt
xchg
cli
mov
dec
hlt
hlt
inc
xor
hlt
sahf
pop
adc
and
mov
and
mov
nop
in
mov
jb
lods
and
movsl
and
outsb
popf
aaa
xchg
or
popa
mov
push
pop
adc
xchg
inc
push
sbb
cwtl
inc
outsl
out
shlb
jno
mov
push
and
into
mov
or
gs
push
in
dec
adc
mov
in
cwtl
js
inc
hlt
cs
pop
int
adc
sub
jg
mov
movsl
xor
sbb
test
outsl
repz
je
pop
enter
xlat
cmc
sbb
pushf
popf
inc
test
jno
xlat
popf
add
popa
in
sti
test
pop
adc
push
add
cmpsb
lahf
lret
mov
push
and
jle
sub
popl
jg
pop
or
mov
sbb
arpl
cs
mov
daa
in
jnp
sbb
xor
data16
cmp
dec
into
dec
jl
cmp
or
mov
jg
xor
lds
scas
pop
dec
aaa
mov
pop
js
cli
xor
and
rclb
cmp
cmp
and
dec
aam
movsl
movsb
shlb
fst
xchg
movsl
mov
pop
mov
int3
inc
sub
lcall
mov
cld
sub
inc
mov
hlt
mov
in
addb
rol
int3
push
aas
test
aam
and
adcb
mov
dec
test
scas
push
cwtl
in
les
iret
pop
jno
stos
adc
sbb
sbb
mov
jmp
cmp
push
cli
ds
inc
into
cmpsb
cltd
leave
dec
pop
sub
pop
push
adc
dec
sarl
pushw
mov
cmp
sti
xchg
pop
sub
and
cmp
ret
das
popf
jmp
lods
insb
xchg
mov
idiv
mov
imul
enter
ret
sub
mov
cmp
push
inc
adc
xor
pop
jo
mov
test
test
call
push
cwtl
xor
sbb
stos
xchg
lods
outsb
and
inc
xlat
lret
mov
mov
ret
inc
inc
mov
inc
jns
pop
jge
loop
cmp
lret
pop
ss
filds
mov
mov
sub
inc
jno
je
jecxz
xor
js
enter
in
dec
push
fldl
fidivl
jo
or
out
inc
push
ja
data16
jno
fcoms
jge
inc
ljmp
mov
vpmacssww
xchg
push
sub
sar
cwtl
push
or
xor
out
pop
sub
pop
mov
lcall
sarb
pop
mov
mov
rcrb
fwait
outsb
mov
push
and
or
clc
dec
jno
inc
mov
inc
fs
dec
test
cmp
mov
or
adc
jg
test
shrl
xor
mov
rcll
mov
and
test
push
sbb
dec
ret
js
arpl
mov
mov
or
stos
or
decl
dec
mov
in
sarb
jle
dec
pop
pop
or
pop
das
sbb
dec
mov
inc
or
cmc
pop
jmp
fstpt
mov
pop
iret
mov
sub
jo
out
pushf
push
push
and
les
int
pop
into
mov
sub
jmp
outsl
push
pop
push
je
inc
fistpll
das
xchg
mov
or
test
push
and
jl
stos
dec
jb
push
sbb
aaa
cmp
ja
iret
pop
push
aad
idivl
fildll
mov
pop
sbb
xchg
inc
mov
test
popf
adcb
push
mov
js
outsl
xchg
xor
push
push
js
xor
test
fimull
hlt
xchg
test
cwtl
pushf
pusha
pop
xchg
pusha
push
pop
fs
dec
dec
fs
nop
ds
fs
dec
or
pop
mov
pop
push
jo
xor
adc
shlb
pusha
jecxz
ljmp
pop
scas
fstl
mov
popf
dec
stos
je
push
divl
lcall
mov
jo
stos
adc
xchg
xor
mov
fwait
je
jge
xchg
je
and
adc
jp
frstor
stos
cmp
mov
adc
mov
mov
fisttpll
repnz
insb
in
or
js
mov
xchg
je
push
insl
popf
jge
mov
adc
bound
sarb
xor
mov
test
cmp
pop
mov
adc
jl
xor
stc
outsb
jb
mov
movsb
mov
outsb
mov
mov
jo
jl
or
dec
mov
ja
pushf
inc
insb
sub
pop
pop
cld
xchg
pop
mov
movsl
pop
sbb
jle,pn
cmp
xor
ss
xchg
jl
out
cwtl
lea
inc
sbb
shlb
and
loopne
sbb
mov
addr16
popf
dec
xchg
jno
and
popa
hlt
push
xor
xchg
movsb
fisttps
mov
xchg
jne
and
mov
adc
sub
mov
fbld
out
cmpb
rorl
faddl
mov
push
xchg
cmp
daa
popf
jo
dec
lea
cmp
xor
je
sahf
in
cmc
or
outsl
mov
jg
shr
add
aam
fsub
xor
out
fcomp
jg
dec
mov
lods
rolb
jl,pt
shl
jb
into
sbb
push
aaa
in
jl
decl
and
or
xchg
stos
dec
imul
loopne
sbb
ds
cs
cmp
rolb
lahf
pushf
int
in
inc
shlb
ja
ret
and
addr16
mov
pop
cwtl
push
into
pop
in
mov
lret
mov
mov
sbb
sub
dec
xlat
lcall
test
xchg
or
sub
clc
sub
or
sti
add
out
jmp
scas
jae,pt
lods
outsl
xlat
sub
add
mov
rcr
punpckldq
mov
in
shufps
clc
cs
mov
lock
mov
mov
push
add
dec
dec
pop
adc
sbb
xor
lds
push
xor
stos
jb
cmp
cmpsb
out
or
sti
sub
int
jo
dec
mull
dec
pop
ds
dec
sub
in
fsubr
je
call
test
xor
dec
cmp
lods
pusha
or
xor
add
sub
mov
sub
les
stos
mov
push
std
fnstcw
aam
popf
push
mov
mov
and
imul
sti
jno
in
ljmp
pop
jbe
aam
xchg
mov
add
int
sbb
sbb
or
cmp
lahf
xor
loope
sti
fidivrs
dec
in
xchg
adc
enter
jb
aas
test
inc
sub
into
pop
pop
pusha
xor
push
and
dec
sub
in
int
ljmp
push
std
add
push
lret
sub
mov
dec
mov
call
sub
cmp
in
mov
cwtl
jb
scas
inc
xor
xchg
arpl
jge
enter
lahf
fcomps
cmpsb
lcall
dec
outsl
lods
in
xor
jnp
int
push
xchg
mov
nop
push
movsl
adc
mov
inc
xchg
pop
test
mov
xor
adc
sub
dec
test
roll
fsubrs
hlt
clc
jl
je
cmpsb
pop
negb
or
xor
cmpb
test
cwtl
aam
adc
cs
arpl
lods
push
sbb
insl
add
push
cmc
dec
inc
or
mov
jno
jge
mov
lods
dec
out
sbb
jl
sub
ljmp
and
adc
sub
call
sbb
push
pop
add
and
das
sahf
sahf
inc
push
mov
mov
inc
sbb
mov
push
push
adc
push
push
outsb
add
fcoms
clc
fsubr
shlb
ds
jl
dec
cmp
insb
xor
enter
iret
adc
mov
popf
push
mov
stc
cmp
dec
or
and
ds
jle
popf
lds
ds
cmp
xor
popf
push
rclb
push
jle
sbbl
enter
test
into
dec
cmp
outsb
insl
sarb
into
mov
pop
adc
das
int3
and
adc
pop
xlat
int3
loopne
or
mov
hlt
xor
mov
pop
int3
mov
mov
hlt
mov
pushf
int3
sub
adc
add
sbb
mov
fsubrl
mov
jmp
imul
push
aad
sub
dec
pushf
push
fisttps
jl
jge
add
mov
sub
mov
mov
int3
pusha
push
push
cmp
sub
and
dec
mov
inc
or
sub
scas
adc
mov
push
imul
add
pop
das
sbb
pop
out
xchg
test
lret
xor
add
and
jbe
xchg
mov
pop
bound
or
jb
pusha
sbb
orl
push
js
and
push
inc
dec
lds
ss
enter
adc
jl
ss
pop
in
inc
push
sahf
dec
int
ds
pop
xchg
or
or
adc
jp
jae
in
jp
mov
mov
mov
test
adc
out
sahf
lock
shll
pushf
hlt
cwtl
mov
pop
push
out
loopne
mov
mov
in
and
lret
jb
cmp
jo
fadd
adc
fsubrl
dec
sbb
insb
ror
data16
iret
pop
push
pop
mov
xchg
sbb
dec
std
dec
aas
aaa
out
movsb
stos
dec
enter
call
pop
mov
rorb
ss
mov
pop
sti
insl
push
in
int3
dec
aam
inc
sbb
push
popf
ss
mov
jb
int3
pop
mov
pop
and
int3
in
add
js
xor
mov
mov
push
sub
inc
nop
sub
andl
cmpsb
cld
rcll
shlb
loop
ret
and
mov
xchg
inc
add
ret
aam
push
in
stos
cmp
inc
lds
insb
sub
jb
int
insb
and
dec
fisttpl
bound
orl
and
jle
test
lods
xor
enter
ds
pop
mov
les
cmc
aam
cmp
xor
adc
pop
in
or
sub
adc
fcom
inc
fcompl
jecxz
dec
cmpsb
das
lods
and
xor
arpl
mov
lahf
jl
jne
mov
pop
imul
mov
jl
jl
nop
ss
adcb
mov
scas
sub
lds
dec
xor
fsubrl
in
cwtl
adc
sahf
lods
and
add
aad
cld
push
mov
out
data16
mov
ret
fs
idivb
pop
mov
pop
stos
sbb
sub
cmp
rcr
scas
and
ljmp
push
and
clc
mov
lahf
or
mov
int
jp
dec
or
sub
aaa
jnp
mov
push
xchg
pop
pop
xor
and
dec
xchg
js
pusha
pop
and
adc
or
sbb
or
xlat
adc
pop
cli
in
and
cmp
aas
in
adc
stc
lock
fstp
mov
shlb
push
add
fisubrs
push
pop
inc
or
pusha
sbb
xor
or
inc
pop
cmp
jo
inc
lods
add
mov
unpckhps
jl
pop
adc
nop
sbb
dec
add
gs
mov
gs
addb
lock
mov
outsl
clc
aam
aaa
fidivl
cld
sub
repz
mov
sbb
sub
fs
gs
adc
lods
test
fsubrl
lods
add
jne
jbe
nop
int3
popa
sub
addb
adcb
push
pop
jmp
pop
xchg
test
iret
pushf
add
or
lods
mov
and
movsl
and
mov
mov
inc
and
xchg
xchg
sub
xchg
xchg
movb
and
and
jno
dec
sbb
xchg
adc
sbb
test
incb
or
and
sub
out
add
test
scas
xor
out
or
pop
xchg
xchg
in
pop
jae
ss
mov
pop
les
nop
or
aas
inc
jnp
adc
xchg
ja
frstor
in
adcl
xchg
mov
sub
mov
inc
xlat
in
pusha
test
cwtl
lret
and
call
jecxz
sbb
jge
pop
cwtl
int
push
adc
pop
push
sub
movb
aad
or
or
xchg
adc
pushf
push
xchg
push
test
sub
push
inc
int3
idivb
std
sub
sbb
nop
mov
mov
popa
mov
xor
fsubr
daa
pop
sub
sub
xchg
outsb
into
or
jg
dec
xor
push
int
repz
dec
lret
int3
xor
inc
movsl
lock
xchg
aam
sbb
enter
push
divb
add
push
and
xor
sbb
xor
gs
imul
das
rorl
xchg
rcrb
in
insl
xor
pop
scas
fdivs
sub
xchg
xor
sbb
push
inc
movsb
pop
adc
push
add
aam
mov
sub
xchg
and
cmp
adc
and
add
ret
xchg
mov
call
pushf
pusha
jmp
lea
or
sar
mov
pusha
stc
shl
jmp
push
pushf
lea
jne
movsbw
mov
push
pushf
pusha
lea
jmp
movl
pushf
mov
pushf
push
lea
jmp
movl
mov
push
lea
jmp
pusha
pushf
push
lea
je
jmp
lea
je
bswap
lea
mov
jmp
inc
test
call
pushf
jmp
pushf
cmp
push
lea
jne
call
lea
jae
bt
pushf
pusha
stc
sub
pushl
call
outsl
dec
loop
push
lret
add
pusha
push
push
ret
jg
push
jnp
mov
push
mov
out
mov
fmuls
mov
aaa
fiaddl
sbb
and
pop
mov
sbb
sbb
and
les
add
dec
mov
fs
ss
sbb
popf
outsb
pop
dec
imul
adc
inc
or
xchg
cmpsl
jmp
xchg
pop
or
push
testb
outsl
adc
inc
or
scas
rcll
mov
add
lcall
dec
outsb
pusha
pushl
movb
lea
jmp
lea
jne
jmp
pusha
lea
jae
clc
clc
sub
pusha
call
add
add
jmp
or
lret
cmp
xor
inc
jo
aad
xor
adc
popa
xchg
lret
andl
roll
lods
dec
mov
mov
dec
dec
inc
aad
fidivrs
shll
js
and
mov
jp
daa
mov
lock
imul
ret
xchg
clc
sti
or
and
cwtl
mov
jb
dec
cmp
sarb
inc
rolb
sti
fidivrl
mov
add
testb
ret
mov
dec
lock
loop
jmp
imul
mov
icebp
push
andl
inc
mov
mov
sub
mov
shll
adc
mov
push
shr
fst
repnz
dec
leave
or
notl
sub
lods
adc
dec
lock
push
push
push
mov
inc
daa
movsb
pop
or
add
dec
ds
fisttpl
jecxz
insb
out
jns
dec
stc
das
push
movsl
xchg
dec
loopne
and
jg
xor
clc
ss
arpl
ljmp
daa
dec
lret
or
lret
outsb
xlat
lcall
jg
cmp
adc
jns
jno
scas
outsl
movsl
jae
pushf
mov
dec
out
xor
inc
dec
push
mov
jne
fwait
ja
outsl
push
andb
add
filds
ss
dec
xchg
jno
sub
movsbl
jmp
leave
cwtl
adc
add
add
mov
add
add
add
pop
push
add
repz
add
xchg
adc
xchg
sbb
add
add
add
rcll
idiv
pushf
lea
jae
not
inc
jge
mov
mov
not
not
pushf
pusha
inc
call
call
stc
stc
bt
cmp
call
movl
pusha
mov
pushf
lea
jmp
call
test
bt
sub
stc
jmp
jmp
sub
bound
push
clc
sub
jge
sub
cmpl
ja
mov
popf
js
frstors
inc
sahf
pop
loope
iret
xor
jbe
cli
aas
adcl
jbe
je
lea
xor
fistpl
jno
out
pop
cmp
xor
inc
and
mov
dec
mov
pushl
push
pushl
ret
bt
rol
jmp
das
rcl
push
lret
mov
mov
in
mov
ja
lcall
push
enter
sbb
xchg
xor
mov
loope
out
xor
cli
aas
out
stc
cltd
and
or
dec
aaa
mov
cmc
das
pop
and
fistpl
jno
gs
sbb
jmp
ret
int3
push
lret
cmpsl
lahf
ljmp
clc
bound
lods
or
mov
xlat
cmpsb
mov
dec
aad
ss
mov
js
mov
pop
ja
xor
lea
in
testb
adc
or
xor
adcl
add
push
pushf
pushf
push
lea
jne
pusha
push
pushf
stos
push
mov
lea
jmp
pushf
jmp
pushf
pusha
movl
pushf
lea
jmp
sbb
lret
fldt
daa
cli
jbe
jge
mov
inc
xchg
sub
cmp
outsb
jnp
mov
jge
sti
outsl
fsubrs
repz
scas
dec
les
pop
xchg
shrl
icebp
or
add
push
or
fdivrs
nop
jle
stc
jb
in
or
dec
and
mov
add
sti
push
xchg
mov
or
mov
xchg
dec
jb
repz
stos
fistpll
mov
inc
cltd
push
fadds
cltd
les
inc
loope
dec
cmp
mov
lea
ja
test
bt
add
test
pusha
or
push
movl
call
imul
lods
fldcw
jnp
mov
imul
test
pop
inc
aaa
movsl
dec
pushf
scas
fildll
fdivrl
les
pop
loopne
incb
adc
jle
fidivrs
mov
cld
out
shll
cli
and
decl
icebp
in
pop
sub
push
jns
lods
dec
sahf
out
lcall
push
xlat
sbb
or
dec
xor
adc
lock
xor
mov
sbb
and
add
shl
sub
call
pusha
mov
lea
jmp
rol
not
not
pushf
mov
inc
call
mov
lea
je
jmp
call
bt
cmp
pushf
lea
jae
bt
pusha
cmp
pushf
add
mov
pushl
pushf
pushf
mov
pushf
movw
push
lea
jmp
add
push
add
adcb
xchg
pop
add
push
imul
gs
xor
cs
insb
add
inc
pusha
push
inc
pushl
lea
jmp
cmp
push
lea
ja
push
setno
dec
movb
inc
inc
inc
inc
xchg
inc
cwtl
mov
jmp
int3
popf
jmp
xor
or
push
lret
sbb
fimuls
test
cs
cltd
clc
adc
inc
in
lock
xor
movsl
sub
lods
lock
push
outsb
adc
sub
mov
pop
xor
jno
and
out
cmpsb
pop
std
dec
push
sub
cmp
push
xchg
in
js
cmp
mov
adc
roll
cmc
enter
sbb
adc
adc
xchg
xor
scas
mov
jb
sub
cltd
addr16
arpl
add
sarl
mov
push
stos
push
inc
repnz
cmpb
pop
push
sbb
rcrl
loop
adc
jne
dec
icebp
shr
xor
lea
das
into
ljmp
fs
call
push
pushl
pushl
lea
jae
pusha
jmp
repnz
jns
push
lret
testb
dec
cmp
icebp
add
pushf
xchg
inc
push
mov
fimuls
shlb
faddl
and
test
leave
mov
xor
jbe
push
lret
sti
les
push
and
pusha
mov
mov
sbb
or
or
push
xchg
push
xor
rclb
pop
mov
mov
sti
dec
int
xchg
imul
xorb
jmp
cmp
xor
sbb
sbb
xlat
fbld
ret
push
jg
inc
sbb
xchg
test
and
clc
xlat
arpl
lea
mov
push
nop
stos
icebp
fs
pop
daa
adc
scas
movsb
sub
fstpl
mov
lds
addl
sbb
xor
movsb
rcrb
jne
sar
scas
inc
xchg
xchg
sub
or
pop
xchg
sub
dec
fildll
xor
jbe
xchg
or
push
cmp
pop
pcmpeqd
xor
push
pop
mov
lcall
jl
push
in
lods
adc
jne
mov
add
dec
mov
mov
xor
jmp
leave
enter
iret
and
push
int
add
scas
xchg
pop
and
xchg
in
sub
dec
xlat
inc
push
xor
jl
push
lds
jae
dec
movsb
mov
jnp
fcoms
fldenv
aad
ds
adc
sar
fs
in
ss
mov
imul
or
pushf
lea
movb
movl
pushf
pushf
pushl
popl
push
pushl
ret
push
pushf
inc
call
call
jle
movsl
cmp
hlt
adc
sbb
iret
cs
cmove
cld
inc
popf
sub
test
xchg
pop
xor
push
sbb
rcrl
and
mov
insl
shlb
and
push
es
enter
sub
mov
add
std
mov
sti
xor
lods
add
iret
jge
scas
jl
pusha
adc
mov
xchg
test
int
sub
mov
xlat
push
add
adc
scas
sub
push
inc
sub
adc
cmpsb
mov
cltd
shrb
pop
adcb
and
dec
push
or
inc
adc
sbb
dec
scas
ficoms
sub
mov
bound
adc
sub
lea
cmp
sbb
call
inc
inc
loop
loope
add
and
jecxz
cmp
scas
pop
addr16
mov
inc
and
pushf
jo
fs
fcomps
jle
xchg
inc
hlt
inc
cmp
xchg
fs
in
out
push
fwait
push
pushl
gs
scas
or
popa
fstpl
and
inc
cs
movsb
pop
mov
cli
add
pop
mov
xor
in
dec
inc
sbb
lods
sub
pop
push
xor
jle
cltd
adc
xor
mov
je
jle
push
and
xor
fsubrl
xor
xor
pushl
jnp
sbb
or
idivb
lcall
xlat
out
fcoml
sub
pop
lahf
sbb
xor
mov
xrelease
fs
push
ret
repnz
jns
cmp
out
test
add
push
push
scas
mov
push
push
sub
mov
xchg
cltd
push
imul
insb
push
or
lods
ja
mov
cs
adc
pop
add
and
cld
dec
pushf
rcrb
sbb
dec
and
inc
rclb
push
inc
push
jmp
neg
pop
xchg
and
js
inc
pop
call
push
dec
fisubs
dec
dec
hlt
sbb
cmp
push
xchg
insb
sub
inc
push
adc
mov
xor
lcall
in
pop
dec
and
dec
sub
cs
and
mov
in
and
push
daa
adc
frndint
jmp
pop
jo
jl
push
sub
arpl
insb
dec
jecxz
pushf
sub
scas
daa
les
sub
hlt
scas
enter
pop
or
arpl
add
or
mov
dec
cli
dec
push
or
dec
fcoml
and
or
pop
out
daa
adc
insb
push
and
mov
cmpl
not
sub
push
mov
fisttps
xor
cmp
scas
sbb
xchg
jle
lods
aad
sti
adc
push
and
push
sbb
xor
push
and
sbb
xor
aam
test
es
push
dec
mov
outsl
cmp
fsubl
dec
lret
xor
es
outsb
xor
pop
and
push
xchg
pop
sub
jb
sub
xor
lea
xor
je
cs
outsl
mov
jp
jecxz
push
pusha
test
nop
rcr
popa
dec
mov
adc
mov
sarl
add
jae
dec
jg
fsubs
add
inc
in
adc
xor
lods
outsl
xchg
push
aaa
jno
mov
dec
rcrb
jecxz
dec
push
jecxz
push
fiaddl
in
jmp
insb
subl
les
roll
das
xchg
xor
jle
aam
mov
jae
int
xchg
add
and
out
jecxz
testl
sbb
push
fdivl
movsb
pop
clc
or
nopl
addb
pop
push
pop
lods
push
mov
int
pushf
add
xor
movb
leave
pextrw
adc
xor
sub
dec
lret
cmp
dec
ror
xor
fldt
out
stos
mov
sub
adc
dec
xor
mov
int
movsl
mov
pop
lock
scas
js
insb
jb
pop
jl
xor
cmp
sub
pop
mov
xlat
ret
imul
add
xchg
scas
inc
insl
dec
push
push
not
xor
cltd
cmovl
jl
ja
xor
push
lcall
setl
and
outsb
daa
test
mov
cmpsl
shll
into
adc
bndstx
adc
scas
rcrl
sbb
lea
outsl
cmc
sub
imul
mov
and
and
stc
mov
pop
out
loope
popf
push
fistpl
push
fdivrs
cli
ja
jmp
mov
mov
push
orl
popf
mov
mov
dec
push
dec
mov
pop
jge
and
arpl
push
fcoms
in
sti
cld
xchg
fstp
jno
fnstenv
xor
repz
jb
daa
lcall
fsubl
mov
pop
outsb
push
in
repnz
lcall
loopne
mov
adc
adc
xor
sbb
jb
das
xor
mov
jge
nop
loope
std
iret
xchg
jecxz
mov
sub
cmpsl
inc
jnp
lret
jle
sbb
and
adc
mov
in
or
fs
loopne
jns
cltd
mov
out
fwait
adc
sbb
xor
repnz
jg
fimuls
negb
adc
jle
add
test
sbb
jp
addr16
imull
aaa
cltd
sub
sub
andb
in
mov
adc
push
ds
xor
jo
repz
enter
cltd
sub
jge
test
aad
sub
repz
jge
and
xor
sub
out
cld
add
hlt
xchg
xor
jle
sub
jnp
xor
outsl
jecxz
adc
fcmovnu
das
loopne
mov
push
adc
stos
sbb
je
pop
lea
cmpsl
xchg
pop
inc
cmp
add
or
mov
push
iret
push
into
lea
sbb
sub
scas
xor
dec
cwtl
cmp
inc
fildll
lea
repnz
mov
mov
jb
pusha
mov
and
push
pop
popa
int3
dec
pop
mov
sub
push
sub
in
pushf
frstor
icebp
cmp
fsubrl
and
addr16
imul
xor
mov
loopne
sub
lahf
push
cmp
int
cmp
sar
inc
or
aas
and
inc
pusha
jns
push
push
into
xchg
pop
pushf
xor
lods
sarl
xor
and
stos
outsb
jns
cmc
cltd
jne
mov
pop
mov
push
or
jle
add
mov
lahf
jno
inc
xor
fsubs
push
pop
push
dec
xchg
sbb
hlt
sub
jb
int3
xchg
dec
xor
push
or
sbb
jbe
popf
fcompl
inc
cmpsb
add
scas
std
mov
outsb
mov
push
daa
pop
arpl
pop
push
mov
cmp
decl
cmp
shl
sub
jge
mov
aam
test
jno
or
cmpsl
sub
push
mov
gs
ror
insl
sbb
lods
sbb
jmp
test
dec
dec
push
ret
orl
scas
mov
mov
mov
adc
inc
sbb
je
and
hlt
out
or
jg
sbb
jle
lret
adc
xchg
gs
negl
and
push
sub
rcrb
and
push
mov
sub
xlat
cmpb
popa
mov
sbb
fisubrl
insl
pop
pop
sbb
adc
arpl
adcb
popf
and
pop
adc
lcall
mov
mov
lcall
jne
icebp
scas
adc
subl
gs
and
xchg
sub
pop
cmp
pop
and
adc
mov
cltd
sub
mov
int3
lods
lret
fprem
mov
fwait
das
dec
adc
xchg
fs
mov
daa
cld
add
mov
or
rorl
stos
cmp
pop
pop
and
cmp
mov
or
xor
fldt
outsb
call
pop
ja
loope
mov
xchg
andl
out
sbb
xchg
jp
outsl
adc
or
push
cmc
dec
push
pop
push
inc
push
lret
pop
pop
mov
mov
iret
out
or
cmpsb
cmp
mov
insb
push
int
sub
out
dec
andl
shl
push
dec
xor
lods
mov
cmp
sub
mov
dec
mov
sbb
in
pop
sub
pop
sub
adc
or
sub
push
sbb
pop
mov
mov
mov
xor
in
adc
jbe
sub
push
mov
icebp
cmp
push
adc
sub
sub
xor
pop
dec
das
fnsave
test
adc
dec
pusha
push
inc
out
dec
cld
dec
xor
mov
xchg
adc
xor
das
dec
xor
add
pop
dec
cmp
pushf
pop
popf
and
or
cmp
sub
sbb
and
es
mov
mov
into
mov
or
xor
pushf
pushf
or
sbb
pushf
std
pusha
das
cld
dec
cld
cld
test
and
in
cs
dec
push
sub
jle
das
mov
dec
ss
fiadds
jo
and
pop
mov
pop
int
mov
adc
insb
popf
pop
rcll
push
cmp
sbb
das
dec
mov
outsb
pushf
xor
pop
pop
int
fdivl
jl
into
jno
pusha
cs
mov
int
ds
mov
mov
dec
dec
aas
das
mov
jbe
push
jl
push
push
lods
fidivs
sub
jge
outsl
xor
cld
push
int3
mov
data16
sbb
pop
push
mov
sbb
dec
mov
dec
push
cvtps2pi
xor
xchg
push
es
push
out
pop
in
xor
lahf
push
repz
popf
pop
outsb
insb
pop
dec
popa
popl
xor
and
or
cs
xchg
cmpsb
cld
push
pop
dec
aas
pop
mov
mov
cmp
jne
pop
scas
push
mov
push
faddl
lock
xor
sbbl
mov
movsl
cmp
das
pop
mov
movsl
push
cmp
pop
xor
faddl
mov
clc
xor
sbb
jg
orb
adc
es
addl
popf
stc
dec
data16
jns
add
dec
adc
cmp
dec
hlt
lcall
sub
push
mov
adc
pop
pop
mov
addr16
mov
mov
mov
out
testl
das
out
out
and
mov
cmpsb
jns
cmpsb
les
test
sbb
xor
fwait
push
loope
mov
nop
push
inc
dec
xchg
sbb
inc
xchg
scas
jo
sub
daa
insl
call
popf
popa
in
lahf
pusha
lcall
jne
adc
test
xlat
add
xor
pusha
push
push
das
mov
pop
cs
mov
insl
jl
testl
push
inc
sbb
xlat
in
xchg
mov
fistl
pop
outsl
jp
or
cmovle
push
jle
rcl
aaa
pop
push
outsl
mov
sub
out
push
xchg
push
les
lods
push
icebp
scas
cmc
rorb
push
daa
dec
jecxz
push
mov
out
in
inc
enter
xchg
lods
cmp
mov
mov
adc
aad
data16
sbb
in
scas
jne
nop
inc
jmp
or
xchg
xchg
sbb
cmc
das
push
das
and
repz
sbb
adc
outsl
in
mov
es
scas
fnstcw
or
adc
jnp
cmp
adc
mov
inc
imul
scas
xchg
movsb
xor
repz
cli
dec
shr
leave
cld
mov
sar
jp
js
or
xor
stc
repnz
cmp
jo
stos
pop
sub
scas
jbe
push
push
jle
iret
in
sbb
daa
adc
repz
inc
mov
scas
test
repz
or
outsb
jle
cmpsb
dec
jmp
mov
xchg
in
xor
cld
or
popa
sub
scas
mov
and
inc
or
fmul
into
mull
mov
and
xor
cmp
mov
or
dec
push
pop
or
sahf
lahf
inc
or
out
repz
loope
pop
out
and
push
movsl
nop
mov
mov
ret
lods
cmp
mov
push
iret
sub
inc
inc
lock
insb
es
mov
pop
cmp
jmp
mov
xor
daa
inc
xchg
rcrl
rorb
scas
sub
xchg
jmp
scas
inc
and
pop
ret
inc
push
or
out
lea
mull
mov
cmp
push
out
adc
and
sub
lock
das
pop
jmp
adc
bswap
imul
repz
ret
mov
ss
in
out
jcxz
or
inc
jmp
jg
or
adc
fisubrs
lock
or
outsl
mov
add
and
inc
fstpt
das
sbb
jo
lea
inc
xor
nop
and
insl
jno
pop
mov
add
idivl
lea
pop
fisttpl
adc
les
xchg
jmp
daa
sub
insl
add
or
insl
testb
jns
loop
and
dec
out
push
fildl
xchg
add
jle
arpl
push
mov
aam
daa
dec
loope
xlat
push
repz
jno
dec
leave
sbb
push
xchg
fcoml
mov
dec
test
mov
jl
dec
sbb
cmp
jne
and
outsl
pop
push
mov
xlat
xor
fwait
adc
adc
mov
jno
stos
sbb
push
sbb
dec
mov
inc
lods
scas
loop
push
lea
das
mov
push
aam
icebp
adc
scas
in
repz
je
adc
mov
fs
cmp
xchg
in
mov
add
xchg
ss
sub
push
daa
lods
ret
les
jge
scas
data16
iret
sub
sbb
mov
mov
sub
scas
xchg
test
clc
sub
jecxz
mov
mov
test
or
sbbb
xchg
lods
dec
insl
fwait
xchg
mov
shl
inc
mov
lods
imul
mov
adc
shrb
fildl
dec
mov
pop
int3
subl
mov
sub
push
repnz
and
popf
adc
in
sbb
and
lea
aas
jecxz
mov
pushf
imul
mov
repz
inc
loopne,pn
mov
sahf
sahf
add
ds
in
or
clc
or
push
mov
in
out
adc
sbb
dec
stos
jb
mov
inc
push
arpl
xor
inc
cmp
jl
dec
cmovo
jo
jg
add
inc
sub
repz
lret
adc
dec
adc
inc
scas
cmp
arpl
fistl
nop
jle
cmpsl
xlat
mov
xchg
bound
xor
mov
sub
jl
dec
lcall
adc
xor
dec
leave
sti
mov
push
out
cmp
loop
push
popf
sub
cmp
movsb
out
inc
ljmp
xor
mov
xchg
adc
sub
pop
loopne
sbb
daa
inc
ret
adc
sbb
ficoml
scas
and
lea
dec
sbb
cmc
inc
push
mov
xorl
mov
enter
mov
mov
adc
lea
shlb
popa
inc
or
push
pop
push
out
sub
scas
xlat
stos
sub
ljmp
cmc
popf
pushf
sbb
push
dec
jge
pop
cmpsl
and
jecxz
scas
mov
pop
mov
sbb
test
loop
aaa
test
aad
sub
imul
and
inc
mov
xchg
adc
sbb
enter
add
mov
or
repz
mov
push
jae
inc
lods
jle
push
push
xor
mov
push
outsl
push
push
lcall
sub
inc
arpl
loopne
ds
sub
and
sub
mov
jns
scas
dec
jle
mov
pop
xchg
mov
xchg
inc
adc
xor
ret
xlat
stc
xor
push
mov
dec
in
jne
push
into
scas
cld
incb
dec
adcl
mov
fldz
sbb
dec
pop
sbb
adc
mov
std
xchg
inc
mov
lods
movsl
xlat
mov
lds
add
dec
and
xlat
cs
xor
mov
add
lods
outsl
lea
mov
jmp
sub
inc
cs
cs
xlat
pop
add
mov
es
imulb
mov
popf
sub
add
test
inc
in
mov
mov
daa
sub
jle
mov
ds
bound
rcrb
dec
in
fdivrs
lods
dec
outsl
mov
xchg
shrl
int3
mov
int
pop
and
addr16
sbb
or
pop
push
cs
jge
lea
or
dec
insl
pushf
sub
jo
lods
sub
dec
fdivrl
out
insb
push
daa
dec
mov
cmp
dec
and
mov
xchg
lods
sub
insl
in
sarl
pop
into
in
shrl
or
ss
mov
dec
adc
and
int3
insb
mov
pop
sub
xchg
push
sbb
xlat
jp
lcall
cs
dec
out
and
xlat
sub
mov
setle
xchg
cmp
popa
or
inc
inc
insl
es
aad
scas
in
popf
rcrb
mov
dec
lods
adc
rolb
cld
push
lods
pop
adc
loop
dec
ja
data16
push
adc
and
pusha
popf
dec
int
push
ficomps
popa
pop
pop
or
sub
add
jbe
adc
sub
cmp
push
fs
scas
fisubrl
lods
push
cld
lods
lods
lock
xor
jge
mov
mov
sbb
inc
outsb
nop
sbb
pcmpgtb
lea
movsb
ds
std
lods
adc
and
cmp
adc
sahf
in
mov
xor
mov
cmp
or
data16
pushf
mov
aaa
mov
pushf
add
jns
mov
lods
mov
lods
and
scas
insl
mov
cmp
scas
ds
xor
out
xchg
sbb
jl
cmp
int3
jno
xchg
xchg
int3
push
scas
pop
jo
pop
mov
les
mov
xchg
add
fs
or
cmp
push
pusha
push
movsb
pop
dec
fidivrs
xor
das
jmp
das
and
sti
push
int3
sbb
cmc
xor
sub
push
pop
mov
push
xchg
iret
adc
mov
outsl
lods
mov
fwait
out
repnz
add
mov
sbb
adc
imul
scas
cmp
lds
lahf
push
movsl
dec
sub
push
aaa
xor
into
iret
mov
or
push
cmp
iret
adc
pop
mov
jecxz
cmpb
push
xchg
jmp
ret
xchg
mov
pop
sub
cmp
sbb
xor
popf
lea
jno
clc
cmpl
in
into
rol
add
jae
push
pop
xchg
xor
mov
out
and
dec
das
out
lea
inc
dec
aad
adc
arpl
aaa
decl
popa
sub
outsb
push
ja
mov
scas
icebp
push
pop
enter
and
pause
pusha
ss
push
daa
lar
test
call
or
xchg
dec
lods
jmp
push
aam
dec
or
inc
outsl
repz
loopne
inc
push
scas
xchg
push
imul
add
call
pop
stos
sbb
jle
testb
add
jle
and
jbe
lret
xlat
mov
loope
or
xor
pop
pop
sub
jecxz
push
lock
les
push
or
sub
mov
jecxz
mov
push
xor
dec
or
das
mov
movsl
push
sbb
int3
lret
xchg
and
subl
dec
loop
xchg
es
pop
push
mov
push
cmp
cs
jl
cld
mov
xchg
xchg
sbb
test
sub
rorb
pop
icebp
jne
das
push
or
and
lcall
add
jecxz
outsl
jmp
shll
outsb
int
lcall
repz
and
adc
add
repnz
mov
mov
jl
mov
mov
mov
mov
sub
pushf
sbb
movsb
dec
sbb
adc
out
cmp
fimuls
mov
mov
add
lods
or
das
xchg
scas
sub
push
pop
call
dec
es
bound
pop
inc
mov
mov
in
pop
mov
push
lret
gs
mov
sub
clc
jne
jge
dec
fwait
xor
inc
imul
frstor
loopne
insb
es
fwait
ret
add
in
cmc
xchg
ret
sub
xchg
lods
cmp
scas
inc
rcll
movsb
fcmovnbe
pop
sub
adcl
icebp
test
mov
sub
mov
sub
dec
pushf
daa
or
aas
lret
pushf
jmp
ja
push
xchg
dec
jg
mov
sbb
sbb
ret
push
test
bndldx
pop
jl
xchg
sub
jecxz
sub
notl
jecxz
xor
fs
lock
cmp
xorl
sahf
push
sbb
dec
jp
xor
fimuls
dec
xchg
bound
fbld
nop
xchg
sbb
lods
das
test
dec
mov
push
adc
mov
xor
mov
add
mov
call
insb
sbb
mov
jp
loop
jno
mov
fs
bound
test
cmp
xchg
cmp
call
xchg
daa
andl
xor
xor
xor
xor
mov
out
ja
mov
test
cld
repnz
jmp
test
cs
rcrl
adc
mov
mov
push
jns
jbe
mov
cmp
gs
sbb
das
jge
cmp
adc
mov
orb
mov
scas
jg
cs
cmp
push
icebp
jge
sub
mov
mov
arpl
push
leave
inc
int3
add
adc
cmp
mov
jp
dec
gs
and
push
lods
gs
fmull
out
jb
dec
seta
cmpsl
sbb
shr
aas
je
xor
pop
or
clc
pop
out
mov
cwtl
adc
rorl
je
xchg
ret
dec
daa
mov
xorb
fwait
ret
mov
sti
popa
or
imul
sub
sub
lds
and
out
dec
and
mov
jle
or
dec
rorl
add
aas
jno
sbb
aaa
xor
jb
adc
stc
or
pop
and
sbb
xchg
mov
jecxz
and
inc
dec
mov
sub
fadd
sub
rcll
push
jnp
imul
out
jecxz
mov
xor
rcrl
cwtl
fistpll
xchg
xor
cmp
ret
pop
es
jno
pop
scas
ficoms
dec
adc
push
pushf
xor
leave
mov
cmp
inc
idivb
xor
xor
or
xchg
push
out
jl
mov
loopne
enter
dec
dec
or
data16
icebp
ds
scas
inc
fsubl
iret
inc
jge
pop
inc
aam
and
mov
sub
fisubrs
jecxz
jp
addr16
push
sub
dec
aaa
insl
pop
pop
mov
js
divl
lcall
xor
pop
stc
repnz
xchg
sbb
pop
pop
notl
or
cltd
lea
lods
mov
pop
pop
mov
cmp
push
movsb
sub
dec
mov
lds
inc
lods
adc
loope
cltd
mov
les
xor
xchg
push
pop
and
and
mov
out
xchg
sbb
cmovl
sbb
push
decl
pop
add
scas
repnz
sub
jge
push
and
push
jge
ret
stc
sub
movsl
int
mov
lods
add
addr16
mov
adc
sub
push
push
lret
lods
push
in
dec
daa
in
das
push
addr16
xlat
cs
aaa
lods
fbstp
jp
fwait
mov
adc
adc
jg
or
pop
sub
mov
xchg
pop
sub
out
inc
lods
xchg
in
orps
or
das
out
fidivrs
pop
fmull
xchg
out
scas
rcrb
es
jecxz
push
sahf
daa
stc
jmp
sub
pop
inc
sbb
test
enter
dec
or
jle
je
dec
xor
mov
cltd
jno
into
sub
push
daa
arpl
ds
push
push
xor
lahf
lea
pop
arpl
jg
or
fisttpll
psubd
jmp
xor
jae
pop
lods
lods
rcrl
mov
xor
or
int
in
cmp
shrb
push
mov
arpl
fadd
adc
jl
mov
popf
mov
mov
and
xlat
jb
push
fsubl
mov
cmp
mov
pop
mov
ret
test
xor
fsubs
rep
dec
stos
mov
pop
inc
xor
sbb
cmpsb
int3
rcrl
pop
je
push
adc
cmpsl
js
shlb
adc
mov
cs
push
and
jbe
shl
bound
test
mov
dec
mov
pop
sub
and
ljmp
shrb
add
cmp
cmc
iret
cmpsb
cmp
into
push
cs
popa
mov
mov
pushf
mov
clc
fists
dec
fdivrl
mov
xchg
pop
dec
push
adc
mov
outsb
mov
mov
lret
add
pop
mov
jg
iret
sub
out
loopne
adc
inc
movsb
pop
add
pusha
inc
mov
bswap
call
lcall
enter
xor
orl
jmp
scas
inc
push
cmpsb
rolb
adc
outsb
shlb
adcl
mov
cmp
jmp
lods
push
aaa
loope
aam
or
push
les
push
scas
pop
cmp
movsb
int
jns
nop
or
data16
loopne
fcoms
aad
lods
push
add
cmpsl
sbb
das
sbb
inc
push
jge
hlt
mov
mov
adc
mov
sbb
sbb
insl
jp
decb
dec
out
adc
ss
sbbb
jne
xor
pop
ret
cmp
jle
mov
jle
fs
or
mov
push
xor
scas
mov
ja
les
movlps
mov
jle
mov
dec
aaa
mov
sub
ds
and
shrb
popa
xor
adc
lcall
lcall
mov
jnp
scas
imul
and
xor
cld
mov
into
sub
push
inc
xor
hlt
aam
movsl
and
out
sbb
xchg
dec
dec
stos
jecxz
dec
xor
cmp
aam
rolb
adc
jmp
daa
pushf
mov
add
call
cmc
xchg
pop
xlat
std
iret
cmp
aad
add
mov
iret
add
xor
lahf
int3
sbb
push
mov
pop
adc
arpl
cltd
andl
jle
ja
adc
xchg
int3
test
scas
dec
cmp
sahf
push
dec
dec
push
push
insb
push
loopne
clc
scas
popa
je
add
pop
ja
lcall
dec
outsl
cmpsb
mov
dec
jb
push
cs
mov
inc
sbb
push
mov
lea
les
and
faddl
les
adcb
subl
mov
int3
mov
popa
push
push
in
sbb
lds
mov
sub
add
daa
mov
lahf
sbb
notb
jg
psubusb
sbb
in
jb
xor
repz
mov
das
pop
fwait
push
mov
std
shl
cmpsl
sub
mov
lods
mov
fprem1
outsl
or
std
lea
cmp
sub
out
jecxz
mov
pop
test
lret
jmp
xlat
lds
or
or
subl
add
mov
cld
ljmp
mov
outsb
cmp
pavgb
mov
inc
push
bound
sub
sbb
dec
adc
scas
xchg
push
ljmp
sbb
adc
shll
mov
xor
or
and
testb
ljmp
push
aad
or
push
adc
cli
mov
out
loopne
shlb
lods
cmpb
xchg
lcall
mov
adc
stos
scas
or
jmp
movsl
mov
int3
add
je
sbb
out
push
iret
pop
cmpsl
add
cmp
andl
push
sub
dec
inc
cmp
inc
shll
push
push
pop
pop
push
and
push
in
test
or
iret
mov
or
cmp
sub
mov
xor
mov
push
lds
push
adc
mov
jl
iret
xor
adc
insb
mov
mov
fildl
xor
mov
movsb
in
lods
out
ja
dec
pop
inc
mov
jae
call
in
mov
popf
push
adc
adc
mov
push
mov
out
pop
daa
femms
lods
cmpsb
mov
int
bound
jns
aas
add
push
dec
in
and
enter
aaa
add
adcl
push
adc
sub
fstl
push
add
dec
push
push
cmp
jmp
xor
dec
sbb
xchg
and
mov
jmp
mov
mov
add
cld
imulb
push
cli
ja
fcomps
mov
cmp
xchg
cli
mov
pop
je
mov
dec
jae
stos
adc
sahf
lcall
push
leave
dec
loope
fimull
sub
insl
icebp
dec
mov
stc
cmp
inc
in
pop
cmp
inc
aas
outsb
test
fsubl
loop
fbld
inc
ret
and
xchg
rcrb
lods
add
stc
or
mov
mov
rcll
push
xor
lods
cs
cmp
cli
jmp
pop
xlat
sbb
std
xor
sbb
push
cmp
loope
clc
gs
sub
mov
inc
aaa
mov
add
pop
fcos
xchg
in
adc
xchg
shlb
jno
rol
cmp
popa
or
fs
ja
das
nop
imul
orb
out
mov
fs
xchg
sbb
popf
test
and
xor
aad
sahf
jle
adc
aas
nop
sub
sub
xor
mov
cltd
jg
int3
xlat
out
fsubrp
and
dec
negl
mov
notl
xchg
fs
xchg
lea
call
aam
adcl
push
mov
imul
outsb
inc
mov
mov
dec
xchg
cmp
outsl
push
aas
jbe
and
into
adc
mov
pop
mov
adc
dec
add
adcb
lea
ficomps
outsb
aas
pop
xor
mov
scas
das
das
sbb
aam
and
adc
imul
sahf
pop
daa
mov
and
xor
hlt
mov
xor
in
xchg
ds
loope
xor
mov
jmp
mov
mov
lock
sar
pop
stc
xor
jae
xor
pop
scas
movsb
mov
dec
lods
mov
icebp
mov
add
shrl
cwtl
inc
pop
lods
xor
loope
xchg
outsl
xchg
jnp
dec
sbb
pop
gs
cmc
in
out
psadbw
add
pop
add
sub
or
sub
imul
mov
mov
loope
shlb
add
repz
popa
in
fdivrl
lods
sbb
add
sbb
mov
xchg
fs
dec
mov
xchg
lods
imul
outsb
dec
push
push
pop
sbb
cmpsl
insb
divb
rcrb
sbb
add
comiss
in
popl
lods
xchg
test
faddl
push
int3
cmpsl
stos
mov
or
stos
pop
push
mov
sbb
gs
lods
decl
push
ds
or
push
mov
mov
lods
idivl
and
aam
mov
scas
stos
xor
push
mov
imul
adc
sub
mov
arpl
sahf
dec
rorb
test
mov
sbb
mov
cmp
lods
xor
fucom
insb
hlt
cmp
mov
lods
xchg
xchg
adc
movsb
push
add
add
mov
jle
and
out
adc
repz
mov
inc
aas
fldcw
int3
lret
das
loope
xchg
or
mov
fadds
pop
adc
dec
push
mov
bound
jg
and
xor
shlb
fidivl
sahf
pop
nop
pop
mov
xor
filds
mov
adc
aam
enter
repz
mov
xchg
push
mov
sti
jg
clc
mov
or
mov
aaa
adc
push
xlat
jae
call
fisubrl
adc
jb
lea
mov
push
sbb
sub
jb
xor
push
xchg
pop
xchg
sbb
shrl
jns
les
sbbb
ficoml
xor
xor
les
mov
int
push
aas
scas
sub
jns
push
xor
lahf
pop
sahf
loope
mov
fistps
dec
sub
ret
and
push
or
inc
addb
push
ficoml
out
push
or
pop
or
pop
das
std
jle
mov
pop
jl
cli
mov
xchg
cli
leave
adc
adc
mov
stc
dec
push
pusha
sbb
call
sbb
mov
enter
jl
mov
add
subb
dec
ret
sbb
es
pop
daa
mov
lods
or
cmp
xor
sti
mov
int3
lods
jno
sub
and
loopne
cli
push
pop
pop
add
rorb
jle
jle
push
pop
inc
lods
pop
push
jge
adc
mov
add
sarb
iret
inc
out
add
dec
xlat
pop
std
mov
jge
cmp
mov
lods
movsl
add
jb
lods
outsb
hlt
or
lods
xchg
int3
xor
mov
in
repnz
mov
xchg
scas
add
mov
lock
jle
add
lock
adc
push
adc
jle
xor
jmp
sub
and
das
cmp
add
add
mov
mov
fcoms
sub
out
and
loop
cmc
adc
jb
scas
mov
divb
and
aam
push
push
jecxz
faddl
sub
lods
mov
jbe
sub
test
icebp
sbb
repz
sbb
das
sbb
mov
and
xor
enter
jns
adc
mov
enter
sub
out
cwtl
mov
movsl
fs
out
loopne
cmp
insb
xor
push
mov
sub
mov
cli
js
pop
pushf
jle
clc
leave
scas
stos
test
adc
jae
xor
ret
xchg
sbb
adc
xchg
pop
lods
push
and
push
ret
lods
rclb
cltd
and
mov
inc
out
push
cld
inc
dec
lods
sbb
or
cmp
inc
popa
mov
sub
adc
inc
outsl
lods
xchg
fs
dec
call
adc
pop
int3
mov
xor
scas
inc
and
adc
frstor
dec
aas
xor
cmpl
xor
ds
push
pop
scas
insl
dec
testl
mov
mov
inc
adc
add
sbb
mov
push
scas
sub
mov
inc
cmp
xchg
movsl
pop
xchg
jbe
insb
inc
mov
jmp
insl
xor
fldl
insb
push
lods
add
and
jl
stos
lods
push
pop
dec
or
stos
adc
inc
fnstsw
call
push
mov
popf
iret
divb
xor
std
adc
push
scas
movq
mov
adc
repz
mov
outsl
xchg
add
cmp
jge
std
scas
cmp
stos
fs
adc
popf
idivl
cltd
sub
inc
mov
dec
lea
xor
jl
jg
mov
fldenv
insb
add
pop
jp
mov
hlt
repz
out
jo
in
push
adc
enter
bound
enter
aaa
jno
ficoml
dec
test
cmp
mov
leave
bound
hlt
mov
cmp
mov
adc
outsl
arpl
push
aaa
add
test
ss
push
cmp
adc
mov
daa
push
xlat
ret
fimuls
dec
dec
loopne
lock
and
sbb
push
inc
je
adc
aas
test
cmp
jb
std
les
test
push
xor
push
mov
sub
icebp
rorb
dec
es
jmp
inc
inc
xor
push
popf
xchg
cmp
or
push
push
shrl
push
imul
fdivrl
clc
shrl
aas
inc
test
mov
stos
push
pop
jae
lods
push
inc
adc
sbb
sub
in
outsb
scas
ja
or
sub
pop
out
aam
cmp
out
sbb
dec
xchg
sbb
add
hlt
sbb
adc
popf
js
cmp
cs
sbb
dec
push
jecxz
xlat
mov
cs
lock
and
push
xchg
cmp
and
push
sti
outsb
cmp
xchg
jne
dec
imul
in
outsb
pop
clc
mov
push
or
mov
lods
fisttps
cmp
push
cltd
aam
int
mov
repz
in
ret
jge
dec
pop
daa
add
test
or
push
xor
dec
mov
js
xor
and
sbb
or
fs
dec
ss
cmp
icebp
notl
insl
jmp
and
add
sbbl
cmp
push
pop
inc
icebp
mov
out
mov
xor
stos
add
rep
in
push
mov
xchg
dec
frstor
push
pop
fcoml
xchg
lret
push
pop
ret
out
pusha
push
xor
int3
xchg
scas
jle
fbld
xor
jg
shlb
push
dec
and
imull
jbe
sub
pop
imul
lods
and
repnz
xor
ret
dec
mov
sti
faddl
xor
das
aas
adc
mov
rcll
and
mov
outsl
jnp
aas
cli
or
lea
push
dec
hlt
ja
lods
xor
pop
mov
or
jg
jge
enter
and
xor
mov
mov
lods
sub
adc
add
pop
mov
dec
mov
aaa
jb
and
cmp
xor
sbb
or
sub
xor
mov
lcall
stos
xchg
cmp
outsl
cs
lahf
out
push
and
shlb
adcb
data16
out
pop
push
lods
xlat
sub
sbb
push
xchg
jle
adc
lods
fmuls
gs
adc
dec
jecxz
mov
cmp
stos
sbb
movsl
lock
mov
int
mov
cmp
push
sbb
test
add
cmp
int3
jg
or
sbbb
lcall
mov
mov
jl
cld
pusha
pop
push
gs
mov
test
lahf
sub
dec
ret
stos
popf
jnp
sbb
xchg
aas
and
sub
adc
xor
out
push
ds
pop
jmp
adc
pop
xor
outsb
shll
push
pop
adc
sub
mov
adc
sarb
mov
push
cmp
pop
mov
or
and
decb
sub
mov
adc
add
adc
inc
gs
lock
addl
cmp
xor
xor
mov
out
xchg
mov
or
fidivl
push
in
dec
sub
xor
xlat
push
fwait
leave
bound
mov
int
cmpsl
adcl
jns
inc
push
dec
adc
aas
ja
pop
rolb
loopne
adc
sahf
xor
add
xchg
fists
mov
mov
xchg
push
xchg
rcrl
mov
std
xor
ljmp
es
adc
mov
pushf
cmp
push
mov
test
push
mov
cmp
ficoml
dec
mov
pop
pop
xchg
pop
and
mov
sarb
pop
out
into
ja
pop
jecxz
nop
filds
cld
pushf
push
dec
das
xchg
push
sbb
xor
pop
pop
imul
mov
xchg
in
into
push
insl
or
xchg
std
adc
adc
inc
dec
push
sahf
pop
call
and
dec
xor
or
jmp
xor
xor
and
jmp
push
mov
scas
mov
jl
xchg
cmp
sbb
sbb
push
push
inc
or
scas
repnz
sbb
or
pop
inc
mov
mov
inc
pop
inc
mov
fisttps
cmp
inc
arpl
xchg
inc
aam
es
shrb
out
or
movsl
rcll
and
idiv
xchg
cvtps2pi
pop
fstpt
fsubrs
test
rolb
in
incb
int
aaa
dec
into
mov
lock
movsl
xchg
mov
mov
jmp
lahf
aaa
sbb
cmpsb
push
stc
out
jmp
jne
or
xor
xchg
cmc
test
pop
adc
fists
lods
inc
push
push
inc
and
fcmovu
jmp
cltd
in
scas
scas
fstl
mov
pop
pushf
mov
out
xchg
jns
pop
movsl
shrb
rolb
xchg
push
mov
shl
or
and
cs
loop
divl
into
ficoms
int
mov
jle
or
fsubr
pop
pop
or
and
ficoml
mov
in
sti
xchg
pop
sbb
aaa
rorl
cmp
mov
es
add
push
jge
test
xor
add
sbb
jbe
cld
and
and
mov
mov
or
dec
pop
and
mov
xchg
mov
or
xchg
push
xchg
mov
cmp
mov
and
xor
notl
push
pop
movsb
lods
mov
out
jne
push
inc
mov
pop
scas
call
cmp
lea
or
push
sub
or
pushf
mov
jg
test
jno
imul
lret
inc
neg
addr16
xor
jns
sub
and
sub
pop
lret
cmp
dec
stos
and
sub
stos
mov
xor
repnz
iret
repnz
mov
es
dec
inc
iret
mov
and
lods
arpl
das
or
inc
lea
int3
outsl
cmc
xor
adc
jno
daa
sbb
call
fcmovbe
outsl
pop
mov
inc
out
lods
add
push
divl
enter
or
sarb
shll
inc
out
push
mov
popa
inc
scas
repz
lods
push
decb
inc
insl
pop
imul
clc
imul
mov
add
and
lahf
fistl
adc
mov
cs
push
xorl
dec
ret
repz
adc
pop
pop
roll
push
cmp
xorl
ljmp
shlb
push
push
jb
xchg
lcall
xor
dec
loope
inc
jecxz
call
lock
out
movsl
movsb
fstl
xor
sbb
xor
test
inc
xor
in
sahf
cmovbe
dec
mov
cmp
cmpsb
in
in
and
dec
stos
in
cmp
sbb
jmp
aaa
mov
push
lea
ret
lcall
aad
pop
int
movsb
lret
fimuls
mov
insb
dec
mov
nop
mov
push
jbe
mov
ja
xor
mov
adc
or
cmp
pop
ja
movsb
dec
daa
scas
pop
push
outsb
lcall
addr16
and
sbb
push
sbb
inc
adc
std
push
sbb
insl
mov
aam
adc
cs
sbb
scas
sbb
lods
out
shlb
mov
xor
inc
jle
dec
or
roll
mov
sbb
shll
cmp
pop
call
sub
scas
jl
sbb
push
dec
test
sub
jl
dec
pop
push
or
cmc
mov
fdiv
cmp
and
scas
jmp
push
shl
xor
xchg
nop
push
xor
push
ja
pop
push
mov
int3
add
out
xor
xchg
push
mov
adcl
add
mov
mov
insb
nop
iret
mov
mov
loopne
jae
dec
push
sbb
jns
jle
pop
mov
cmp
sahf
arpl
nop
rorl
sbb
das
inc
scas
fistpl
mov
das
imul
js
and
out
scas
test
daa
arpl
lods
stc
cmp
cmp
cmp
scas
dec
dec
dec
xchg
pop
or
jno
clc
add
scas
push
inc
push
adc
pop
push
jg
sbb
lock
pop
fdivrs
fisttps
and
inc
cmpsb
je
sbb
mov
sub
fsubrs
aas
pop
push
inc
dec
or
and
xchg
aas
sub
subb
scas
push
inc
adc
scas
push
xor
mov
cmp
sarb
xor
jle
je
repnz
fstl
mov
fwait
sarl
jle
sub
scas
sbb
adc
mov
les
jg
daa
addr16
sbb
in
lods
pop
movq
push
inc
dec
repz
ret
sub
push
int3
ret
mov
or
add
jo
dec
push
popf
cmp
lahf
in
jmp
pop
push
adc
fstl
sbb
rol
andnps
jno
mov
xor
mov
inc
mov
repz
jp
push
mov
aam
dec
scas
mov
jb
inc
out
lea
lea
xor
in
ljmp
mov
mov
sub
fisttpl
fidivrs
lods
xor
sub
mov
jae
pop
cmpsl
ficoml
rcrb
sbb
cli
xchg
jne
enter
sub
imul
cmp
inc
xor
int3
or
aaa
sti
push
popf
and
divl
mov
clc
cmp
mov
cld
int
cld
inc
push
mov
jnp
bound
cmp
les
jle
dec
test
cmc
cmc
pushf
sub
cmc
fdivl
popf
loop
scas
mov
xchg
push
push
lea
sub
and
dec
pushf
fsts
sahf
in
xchg
inc
and
push
mov
ret
enter
iret
cmp
ss
or
scas
movsb
mov
cmp
lea
sahf
pop
fldt
bnd
xchg
lahf
sahf
dec
test
cmpsl
cs
adcb
fcoml
inc
pop
pop
push
in
mov
stos
xchg
jo
xor
sarl
scas
mov
adc
testl
mov
pop
inc
adc
int3
ss
jnp
push
repz
lods
sub
lea
mov
sbb
mov
or
sub
iret
jecxz
adc
cmp
xor
in
imul
into
lods
loope
out
bound
test
jecxz
sarb
and
ds
fisttpl
aam
push
push
mov
dec
xor
adc
mov
and
push
sbb
xor
push
les
sub
push
and
mov
or
insl
pop
push
daa
push
adc
subl
and
pop
dec
mov
push
fisttpl
dec
cs
mov
pop
jo
add
fwait
lret
loope
dec
xor
xchg
das
push
xor
push
inc
lcall
mov
jns
btr
sahf
pop
mov
jge
ljmp
into
adc
shlb
or
xchg
out
inc
out
push
in
repz
rcll
outsl
jg
popa
outsb
sub
fdivs
or
dec
insl
xchg
shll
inc
stos
mov
pop
mov
push
adc
adc
jae
and
add
pop
adc
cs
stos
push
pop
ljmp
push
fcomps
jle
incl
mov
test
xchg
ljmp
sqrtps
pop
fists
inc
inc
or
sbb
icebp
rol
iret
mov
dec
dec
leave
dec
sbb
pop
jbe
jno
mov
mov
xchg
les
dec
and
xchg
outsb
shrb
xchg
leave
hlt
and
out
fdivrs
adc
dec
cld
push
les
pop
or
sub
sbb
insb
cmc
inc
sub
add
cmp
aam
mov
xchg
cmp
sbb
mov
or
sbb
lcall
and
mov
sti
pop
lods
xor
xchg
arpl
adc
imul
cmp
sbb
lods
pop
lods
mov
dec
fdivrl
pop
pop
xlat
callw
sub
insb
or
adc
cmp
test
outsl
xchg
jnp
jg
mov
dec
sbb
xchg
mov
lea
arpl
sarl
adc
shrl
sub
mov
sub
dec
dec
lods
jbe
into
lea
pop
pushf
fcoml
pushf
sbb
lcall
ds
add
jbe
ss
jg
mov
dec
push
xor
sbb
sbb
lods
xchg
repnz
adc
xor
dec
into
gs
scas
cmp
adc
add
push
imul
fisttps
jge
lds
nop
sete
das
popf
lods
mov
cmp
sub
out
dec
cmp
mov
cmpsb
dec
mov
xchg
jl
paddd
out
push
sub
jg
int
int3
pop
mov
push
fdivl
xchg
mov
movsb
lea
add
push
cmp
scas
bound
and
std
pusha
mov
cmp
ds
push
lods
xor
push
insl
sbb
and
clc
pop
jecxz
or
shrb
pop
mov
jno
xor
jae
rclb
mov
mov
sbb
mov
jne
cmp
push
test
fbstp
pop
out
inc
mov
pop
scas
dec
inc
enter
gs
aaa
mov
out
cmc
lea
xchg
and
rol
sub
push
cs
push
mov
xor
xchg
es
les
mov
xchg
loop
in
pop
pop
std
ficompl
addr16
pop
mov
rcll
xchg
cmpl
jae
lea
jge
or
sub
or
jb
mov
mov
inc
out
mov
sbb
jmp
xor
popl
sbb
dec
lahf
sub
xor
inc
lea
scas
sbb
loop
sub
add
push
xchg
lods
imul
outsb
push
scas
nop
test
inc
push
adc
pop
icebp
fnsave
sub
out
jle
push
pop
in
fs
jp
test
lods
sbb
cld
and
bound
and
lods
mov
push
vcvtdq2ps
sbb
js
movsbl
pop
mov
pop
subb
clc
test
sbb
scas
aam
lods
cwtl
jge
mov
xor
adcl
scas
dec
mov
cmpxchg
xchg
xor
push
sarl
clc
lods
outsb
jmp
aam
push
test
subb
pop
xlat
or
insl
cmp
sar
insb
push
mov
lret
enter
push
push
jno
nop
mov
shr
jns
and
push
pop
push
mov
cltd
push
pop
and
popf
bound
cltd
and
jmp
mov
stc
out
mov
pop
aad
xchg
popa
mov
mov
test
inc
adc
sub
bound
mov
test
ljmp
inc
movsb
lock
lods
iret
add
and
jmp
push
test
adc
outsl
pop
lods
xchg
pop
rol
sbb
inc
xor
scas
fists
xchg
in
or
pop
lods
cmp
dec
push
iret
int
inc
cld
cs
sbb
xor
roll
pop
and
pop
repz
sahf
movsl
and
stos
jecxz
mov
sahf
ret
cmp
iret
notl
adc
fsubs
and
mov
push
lods
sbb
or
add
adc
sub
imul
clc
nop
mov
test
jp
in
jl
addb
fs
xor
sbb
call
sbb
daa
xchg
ffreep
push
lret
pop
dec
mov
fsubrl
dec
fisttps
dec
jns
xor
aas
sub
jl
in
sti
add
insb
xor
push
orb
inc
or
add
push
nop
fsubrl
cmpsb
sbb
leave
push
mov
outsb
pop
into
shrl
mov
jl
lahf
nop
mov
sbb
jne
xor
jne
shrb
inc
pushl
dec
adc
lahf
push
insb
add
add
mov
into
push
push
das
pop
stos
mov
sbb
out
push
mov
lock
stos
rorb
or
aas
imul
not
mov
ja
clc
push
lea
aas
sbb
push
scas
out
cmp
idivb
cmp
and
andb
sbb
xor
or
out
andb
scas
scas
fists
jnp
loop
push
adc
sbb
or
in
mov
insb
int3
stos
je
push
das
scas
mov
insb
sbb
test
adc
popf
lods
shlb
scas
lods
mov
popa
sbb
daa
push
fildll
movsb
xchg
dec
pop
aad
shlb
cmpsb
rcrl
fimull
and
adc
inc
ffreep
rorb
int3
mov
adc
jo
popa
movsl
jne
sarl
push
lods
pop
mov
mov
inc
pop
add
xlat
mov
mov
testb
mov
movsb
sub
dec
iret
out
push
pushf
push
addr16
push
sahf
pop
popl
jecxz
jg
stos
int3
cmpsl
push
sbb
and
lahf
enter
pop
add
addr16
cmpl
pushf
call
popa
scas
std
sub
popa
mov
sar
insl
mov
xor
mov
int3
pop
jo
and
sub
call
add
in
into
and
js
lock
ficoml
pop
jmp
clc
sub
cmp
mov
lock
xchg
lcall
and
imul
cmp
jo
add
push
enter
add
dec
xchg
mov
pop
stos
mov
mov
or
dec
dec
inc
adc
jecxz
add
les
push
enter
inc
jb
sbb
jg
pop
mov
repz
cmpsb
push
dec
scas
gs
out
sub
lret
adc
push
xor
sbb
inc
push
xor
ret
push
lods
or
das
dec
jp
repz
out
lods
push
ja
sub
cli
jne
xor
dec
sbb
mov
das
push
mov
dec
es
mov
add
xchg
test
nop
push
cmp
orl
sbb
inc
data16
ret
push
inc
mov
out
and
mov
dec
dec
push
or
dec
dec
scas
ret
adc
and
mov
cli
xor
repz
js
jecxz
add
push
xchg
fists
or
clc
push
cld
push
and
adc
push
jo
lea
cmpb
mov
pop
insl
push
or
adc
dec
bound
sbb
and
pop
into
outsb
pushl
pop
int3
or
mov
dec
dec
arpl
adc
cmp
xchg
insb
mov
adc
jecxz
iret
mov
pop
push
cmp
icebp
mov
xor
mov
into
sbb
push
push
aad
das
push
outsb
scas
aad
jle
daa
mov
out
adc
mov
sbb
call
scas
dec
xchg
enter
add
dec
loop
lahf
insb
aad
jo
cltd
imul
and
addr16
pop
pop
xor
dec
cmpsl
inc
lods
sbb
jge
cmp
jno
mov
insb
jecxz
push
push
fldenv
test
test
dec
mov
push
pop
pop
sahf
cwtl
add
lods
shrb
jmp
xor
adc
cmc
mov
push
nop
pushf
icebp
xchg
sub
shll
sub
in
ds
into
insl
fs
out
or
test
sbb
push
inc
and
repz
xor
movsl
add
xchg
or
les
int3
leave
test
xchg
out
pop
fisubs
and
push
repz
aad
sub
sar
inc
mov
dec
mov
xor
aam
cmp
sbb
and
xchg
jmp
jp
jmp
mov
lea
push
adc
out
test
out
sbb
sub
sbb
nop
into
dec
pop
xor
push
sub
and
rclb
cmp
cmc
das
or
cmp
pop
mov
adc
cmc
int3
add
push
xchg
imul
les
xor
sub
in
mov
xchg
movsb
jnp
and
mov
jle
out
into
cs
sub
test
addr16
or
nop
add
mov
fnstsw
mov
cmpsb
adc
stc
xor
mov
and
repz
call
xchg
das
sub
sti
push
scas
scas
adc
inc
push
add
repz
and
adc
sbb
sbb
dec
adc
dec
adc
mov
clc
push
push
cmp
sub
mov
mov
imul
pop
bound
mov
mov
outsl
lret
or
dec
pop
jmp
inc
divl
sbb
imul
sbb
scas
xchg
out
sbb
add
lahf
xchg
jge
xor
sbb
out
in
push
mov
int3
cmovge
push
scas
xchg
mov
pop
add
push
imul
mov
in
ds
cmp
and
inc
xor
add
inc
dec
lods
jmp
adcl
add
sbbl
inc
or
sbb
sub
lods
sbb
dec
and
jecxz
lods
sbb
movsb
aam
sti
aas
loopne
inc
test
mov
mov
xchg
aam
push
shrl
es
cmpsl
push
inc
in
add
xchg
repz
and
mov
xorb
dec
je
insl
pushf
xchg
ficoms
sbb
sbb
scas
hlt
inc
lea
adc
mov
xchg
mov
jl
add
cmp
shrb
fcomi
xchg
sbb
inc
sbb
adc
and
jg
mov
or
and
pop
int3
repz
pop
adc
push
or
push
xor
lcall
add
repz
pop
sbbl
in
out
cli
das
pop
fwait
sbb
lea
divl
push
sub
adc
lods
mov
pop
shlb
incl
push
mov
hlt
movsb
pop
imul
int3
pop
cmc
sahf
movl
out
loop
push
jle
sbb
cwtl
movsl
insb
loopne
leave
sti
into
push
rcrb
cmp
jo
aaa
fsubl
hlt
fs
and
xchg
imul
int3
cmp
push
sub
mov
cli
scas
test
jmp
jns
xchg
scas
pop
lods
rcll
das
sub
nop
pop
pop
insl
adc
xchg
push
dec
and
push
mov
sti
shl
imul
cmovl
sub
jecxz
push
sbb
lea
cmp
cmp
or
insl
and
pop
sarl
push
pcmpgtw
inc
mov
xor
test
cmovo
orl
inc
dec
push
xor
out
add
mov
xchg
scas
pop
aaa
in
mov
push
jnp
mov
call
out
mov
cmp
fcoms
or
stc
push
arpl
and
push
std
sbbb
mov
aas
add
out
adc
pop
cmp
jmp
bound
push
into
pop
outsb
sbb
repnz
ss
xor
or
add
mov
int3
jb
push
out
aam
sarb
push
sub
mov
inc
inc
in
scas
dec
ficomps
scas
push
stos
nop
je
xchg
cmp
push
lret
add
lock
push
cmp
xchg
in
mov
adc
out
push
xor
pop
push
mov
sahf
je
mov
testl
fldenv
lret
mov
push
and
push
push
stos
je
aas
sub
aaa
cs
int3
mov
nop
jmp
movsl
jl
mov
cli
sar
jns
cs
sbb
inc
fsubs
aaa
repnz
push
sbb
out
ljmp
not
or
cmp
jne
sbb
outsl
arpl
arpl
adc
jg
xchg
fimuls
and
adc
insb
pop
fiadds
xor
mov
pop
push
and
jmp
inc
mov
or
push
lea
push
scas
arpl
cmp
push
out
sub
sbb
mov
and
mov
jns
fs
aas
push
shl
shlb
xchg
pop
push
adc
pop
adc
jns
push
dec
xchg
js
aas
clc
xor
in
xor
les
pop
dec
scas
or
sub
jmp
push
cmpsb
aad
fsubl
fs
and
lods
adc
lods
fistpl
mov
lods
push
gs
xor
sbb
lret
lods
jge
dec
pop
movd
lcall
repnz
cmp
mov
ret
daa
sbb
scas
test
mov
lods
xor
inc
gs
mov
xchg
inc
out
xor
adc
add
enter
out
ljmp
lea
xor
or
mov
cmp
dec
daa
jge
cmp
test
shrb
mov
sbb
dec
adc
rcll
subl
sarb
ljmp
mov
dec
pop
dec
ficomps
pop
and
sbb
jns
out
ret
imul
cmc
scas
xor
xor
outsb
and
popa
nop
xor
or
or
push
aas
mov
icebp
fdivrl
call
inc
pop
call
jae
adc
inc
outsl
push
int3
lahf
lea
pop
pop
or
shll
out
mov
fs
out
andl
xchg
inc
or
cmp
pop
mov
mov
dec
hlt
xor
lods
iret
and
push
mov
leave
aad
sbb
adc
fucomip
and
dec
push
mov
push
fcoml
mov
cs
stc
sbb
mov
pop
das
inc
inc
cmp
mov
xor
je
lea
lock
jns
cmp
lret
cli
call
fwait
push
xchg
cmp
test
adc
jb
jge
int3
das
fisubrs
and
pop
add
xor
mov
sbb
pcmpeqb
and
test
xor
iret
mov
test
push
dec
pop
mov
jge
mov
scas
clc
ds
bound
add
xor
cmp
pushf
push
dec
push
add
adc
lods
or
and
rorb
fidivrl
jle
das
push
cli
ds
add
jge
loopne
sbb
outsb
and
scas
xchg
aad
xor
adcb
lods
mov
jae
negl
lret
gs
inc
mov
out
push
je
mov
mov
arpl
adc
jg
sbb
mov
fildll
sarb
sub
fisttps
push
into
leave
push
jg
add
hlt
jb
inc
scas
dec
fucomip
imul
sub
dec
inc
int
insl
lcall
je
cmp
push
imul
lea
and
add
dec
add
movsb
adc
stos
push
push
jb
bound
lods
lahf
imul
pop
loope
mov
cmpsl
iret
enter
pop
pop
push
js,pn
into
xchg
jle
fcompl
lret
push
pop
push
push
push
add
int3
insl
addl
cmp
fldcw
bound
dec
stc
insl
mov
jno
sahf
sbb
mov
les
pop
sbbl
lods
dec
add
sbbb
ja
or
sub
xchg
clc
sbb
and
iret
mov
or
inc
fs
fcoml
inc
or
movsl
push
es
adc
xor
xor
adc
adc
fsubr
sbb
xor
push
cmp
pop
out
dec
inc
into
nop
pop
ficoml
sbb
jl
mov
fcoms
daa
into
cld
add
push
lods
popf
lahf
scas
and
add
sub
dec
pop
push
xor
and
insb
cs
push
sbb
dec
and
jecxz
adc
add
iret
xor
fsubrs
scas
fbstp
je
adc
lods
enter
cmp
pop
dec
pusha
adc
xchg
dec
xchg
dec
xchg
xor
call
scas
lods
xorl
push
dec
mov
xchg
pop
push
xlat
push
aam
les
push
xchg
or
add
push
mov
ljmp
insl
insl
mov
adc
pushl
nop
ret
imul
pop
aam
lret
xor
pop
out
cmp
adc
cmp
cld
popa
inc
int3
fcoms
sub
cmpsl
push
cmp
loop
int3
jns
insl
push
repz
bound
mov
shr
add
cmp
arpl
push
jl
pop
mov
push
jo
mov
xor
pop
pop
pop
dec
jmp
jae
inc
mov
and
pop
insb
scas
popa
dec
push
in
negl
mov
xor
dec
dec
imul
mov
xlat
push
fs
insb
dec
fwait
int3
insb
stc
push
fildll
xor
push
xchg
lods
enter
lahf
cmp
enter
cmc
mov
xor
xchg
cmp
mov
sbb
dec
cmp
loopne
arpl
add
xorl
iret
jp
mov
push
movhps
and
out
jmp
push
sub
mov
mov
jle
add
and
dec
jnp
pop
ret
mov
dec
stc
xor
dec
call
adc
adc
push
lcall
fadd
lea
jle
push
int3
adc
scas
jle
outsb
cmp
push
daa
jae
cwtl
iret
mov
push
push
mov
inc
add
lods
pop
pop
inc
arpl
jp
aaa
push
push
xchg
adc
into
adc
pop
or
movsb
mov
adc
aas
push
ss
push
xchg
xchg
or
push
mov
rcl
enter
fmull
dec
rcrb
pop
or
cwtl
mov
fsts
int3
pop
out
syscall
pop
icebp
insb
push
js
or
cltd
mov
dec
lods
xchg
das
or
insb
adc
dec
lods
or
push
loope
pop
dec
addb
push
in
xor
adc
xor
jae
adc
in
sub
jno
sbb
jp
into
sarl
sbb
insb
insb
in
dec
sbb
pop
lods
cs
dec
push
xchg
add
insl
dec
pop
push
push
fisttpll
sub
insb
dec
jg
into
sub
cs
dec
insb
les
or
dec
dec
cld
adc
dec
inc
pop
sbb
push
adc
mov
or
fidivs
pop
xchg
sbb
sbb
adc
mov
push
pop
sub
jge
outsb
popf
jle
sbb
imulb
jmp
aam
xor
push
ss
mov
mov
lods
push
outsb
dec
dec
aas
dec
push
xchg
es
dec
mov
insb
mov
jae
pop
push
adc
inc
sbb
dec
mov
popf
xor
push
sub
mov
push
dec
adc
adc
sbb
mov
sbb
and
fwait
decb
fsubrl
xor
push
sub
push
pop
iret
push
pusha
int3
fnsave
push
sub
push
sub
adc
aas
and
sbb
lock
pushf
pop
pop
sbb
push
pushf
push
pop
fdivrp
mov
xor
sbb
mov
sahf
lods
ficoms
sbb
cmp
das
xor
aam
fildll
push
dec
pop
push
push
jg
pop
sub
pop
das
das
push
push
pop
outsb
inc
sub
mov
lods
pusha
lahf
pop
jbe
lahf
sub
insb
mov
push
dec
sahf
iret
dec
add
fsubrl
popf
fbstp
iret
pushf
sahf
movsb
outsb
into
mov
mov
nop
fidivs
xchg
idiv
xor
iret
lods
dec
std
and
sub
xor
insb
pop
pop
dec
jl
outsl
add
push
push
in
add
push
repz
pop
ljmp
cmp
das
aas
fnstenv
int
lods
test
dec
sbb
sub
cmpsl
wrmsr
dec
mov
adc
xor
add
stc
or
push
sbb
or
cmp
ja
inc
sbb
lods
sbbb
xchg
scas
test
or
dec
jle
mov
adc
aad
adc
sbb
jae
add
mov
or
sbb
cmp
xchg
sbb
andl
mov
adc
lods
mov
mov
and
inc
or
pop
xchg
addb
add
ds
adc
inc
xor
pop
nop
xchg
lods
or
dec
push
ret
imul
xchg
pop
cmp
xor
cmpsb
mov
cmp
insb
scas
mov
push
adc
push
hlt
mov
and
ss
cmpl
xlat
sbb
mov
jae
adc
aad
add
push
lods
mov
and
xor
pop
das
int
inc
adc
and
pop
push
scas
dec
test
sbb
adc
ja
fldl
repz
outsl
jle
sbb
sbb
fsubrl
dec
dec
dec
das
repz
imul
nop
maskmovq
idivl
dec
sbb
mov
je
xor
sub
fidivrs
dec
pop
xlat
sarl
dec
outsb
mov
leave
cmp
shr
in
sub
dec
push
xchg
push
setbe
lods
adc
fcmovu
aaa
loop
mov
dec
testb
push
push
mov
clc
scas
xor
push
mov
loope
mov
jne
cmpsb
sub
scas
ljmp
mov
insl
test
lahf
leave
dec
push
push
sub
mov
iret
pop
ficoms
push
dec
inc
adc
cmp
mov
push
pop
arpl
int
mov
sahf
ret
push
adc
ret
insl
inc
push
mov
xor
movsb
fbstp
cmp
ljmp
mov
or
dec
or
xlat
jns
fstpt
aam
jl
ds
ret
xor
int3
inc
cmp
mov
das
lret
inc
scas
enter
xchg
pushf
mov
and
ds
pusha
mov
sbb
dec
mov
or
push
pop
mov
test
adc
add
fstp
pop
mov
aaa
push
or
jnp
cmpsb
fsubl
rorb
jg
add
xor
push
push
int
sub
dec
fldenv
cmp
mov
test
pop
rcll
in
pop
xor
mov
in
xor
mov
scas
loopne
sub
pop
cli
psubsw
xlat
adc
pop
xor
outsb
or
jno
dec
pop
push
fbld
mov
pop
enter
mov
jae
mov
lea
shlb
and
cmp
repz
sbb
push
out
mov
pop
jl
lret
scas
xor
cmp
adc
faddl
arpl
pop
dec
arpl
lret
xchg
add
ljmp
fists
adc
push
ja
repz
sarb
mov
xchg
rcrb
cs
cmc
jbe
mov
sbb
mov
push
jno
mov
dec
int
mov
iret
jne
ficoms
sbb
outsl
xor
or
push
pop
rep
inc
imul
and
jecxz
sub
pop
lock
clc
test
test
mov
sti
loope
lcall
mov
btc
int
sbb
xor
push
xchg
sub
xchg
lods
push
sub
mov
outsb
mov
repnz
add
aad
movsb
jo
cmp
mov
stos
pop
movsl
sub
sbbb
mov
cmpsl
push
sbb
mov
push
mov
adc
ja
into
cmp
aam
cmc
pop
and
pop
cs
pop
pop
iret
int3
pop
shlb
or
popf
imul
push
xchg
popf
cld
cs
cmp
xchg
adc
mov
inc
adc
and
cld
pop
pushf
lods
cli
cmp
pop
push
nop
xorb
lods
lock
scas
inc
inc
inc
lods
or
shlb
push
lret
cmp
cmp
jmp
or
xor
cmp
loope
cmpsl
in
sahf
mov
push
mov
mov
inc
movq
hlt
xor
add
lahf
clc
scas
sarb
push
js
xlat
jnp
dec
mov
add
inc
jl
das
es
insb
add
or
mov
fldl
sub
cld
testb
jbe
scas
push
jmp
dec
in
addr16
mov
jbe
mov
out
adc
int3
movsl
std
mov
test
dec
adc
cmp
jge
adc
stos
inc
lods
nop
mov
das
jns
mov
adc
aas
daa
dec
dec
mov
sub
xchg
or
decb
shrb
scas
test
mov
mov
or
nop
sarl
sbb
jb
gs
adc
gs
jl
or
cmpsl
or
mov
pop
sub
scas
scas
out
test
ds
sbb
adcb
mov
pusha
testl
push
sbb
lahf
lods
and
push
push
xchg
pop
mov
pusha
loope
sub
ret
enter
mov
mov
and
shll
xchg
pusha
adc
xor
pop
inc
out
sarl
cmpsb
arpl
pop
in
xchg
push
popa
fnstsw
mov
add
sarb
lods
xor
dec
mov
test
add
cmp
xorb
inc
rclb
pushf
mov
lret
lods
rclb
fiadds
inc
pop
and
or
sub
mov
xchg
aas
and
push
ds
sub
dec
push
pop
add
repz
jno
jbe
insb
jle
rcl
bound
or
iret
lods
sub
insb
inc
mov
dec
mov
faddl
imul
pop
fildll
or
lods
lods
xor
push
aaa
jle
fimull
fnstsw
cmc
add
nop
cmp
je
or
lods
xor
cmp
ds
pop
loop
pop
adc
sbb
cmpsl
aad
push
and
sub
jecxz
pop
xor
addr16
loop
xor
inc
or
xor
add
mov
fs
enter
push
pusha
movzwl
inc
mov
mov
sbb
rclb
cmp
or
fldl2e
adc
andl
xor
pop
int
stos
mov
imul
and
enter
or
andb
cmc
mov
insl
adc
idivb
hlt
dec
and
les
xchg
mov
lcall
ds
dec
dec
aas
push
dec
cmp
ljmp
xchg
in
lea
lds
mov
mov
cmp
dec
cwtl
daa
call
sti
insb
inc
dec
repz
loopne
xor
notb
push
pop
popf
mov
fisubl
test
subb
mov
inc
sub
int3
arpl
shll
test
loop
sbb
dec
mov
rcll
insb
lds
out
xor
adc
pop
dec
and
dec
scas
cmp
pop
dec
aam
xor
push
jle
mov
inc
push
xchg
lcall
fsts
lods
mov
stc
lods
out
sahf
lea
push
mov
mov
xor
std
stos
or
jl
dec
out
pushf
outsb
jp
jne,pn
xchg
mov
jle
sub
dec
das
adc
pop
sbb
jle
repz
or
jge
mov
adc
aas
enter
sub
movsl
outsb
xor
or
sbb
mov
pop
scas
push
pop
pop
push
fists
mov
push
push
mov
lret
jl
or
xor
jb
cmp
mov
pusha
and
push
out
mov
fldl
push
mov
push
push
cmpsl
sbb
seta
out
sbb
adc
dec
adc
je
adc
lret
scas
fisttps
dec
cwtl
sub
cmp
push
aaa
jae
pop
dec
inc
dec
and
jae
dec
sbb
enter
sub
lea
dec
cmp
sbb
push
fistl
push
xchg
adc
xor
or
adc
mov
sub
out
sbb
cwtl
pop
cmp
movsl
sub
xor
inc
sbb
pop
push
jae
jb
xor
mov
out
inc
jns
or
movsl
inc
pop
mov
cs
repz
addb
aas
call
adc
inc
orl
incl
daa
mov
push
mov
sbb
std
int3
jge
scas
repnz
or
in
pop
rorb
jle
sbb
push
ds
pusha
cmp
or
add
daa
mov
incl
cmp
pop
xor
fstpt
jnp
idivl
xchg
lock
cmp
sbbb
mov
lock
cltd
jne
lahf
sbb
push
adc
dec
leave
test
adc
je
add
sbbb
sbb
jecxz
lret
jp
pop
pop
push
push
dec
das
hlt
push
xor
xor
scas
push
lods
fildl
dec
test
ss
nop
cmp
rclb
nop
cmpsl
add
test
adc
push
fisttpll
scas
pop
movsl
cli
ds
gs
xchg
sbb
mov
cli
scas
xor
jnp
pop
push
lods
xor
mov
xlat
inc
movsb
mov
aam
movsb
in
js
jecxz
call
repz
cmp
sub
in
inc
int
xor
andps
or
cmp
add
inc
mov
lds
movsb
mov
and
out
cmpsl
pop
sbb
jmp
iret
sbb
cmp
cmpb
fstl
mov
xchg
jae
outsl
daa
push
lea
jnp
push
inc
mov
push
sub
push
movsl
dec
lock
xor
mov
lcall
aam
mov
pop
in
pop
insl
cltd
repz
sub
ret
pop
or
dec
inc
insl
cld
jle
mov
clc
cmp
inc
mov
fistps
fmull
fsubr
int3
movsb
sub
dec
dec
stc
addl
scas
sbbl
sbb
rorb
insb
ret
or
inc
mov
mov
fsincos
mov
jae
cmp
inc
lahf
test
pop
add
gs
mov
and
add
out
push
andl
add
popa
ds
enter
rcrb
xchg
push
ficoms
xlat
pop
sbb
xchg
pop
and
pop
xchg
rdpmc
lret
mov
popf
mov
adc
js
dec
dec
aaa
jmp
arpl
cmc
sub
pop
adcb
dec
cli
sbb
sti
mov
call
inc
cld
add
mov
std
out
push
or
mov
in
fs
dec
push
xchg
push
xchg
xorb
dec
movsl
jne
cmp
test
push
loope
mov
testl
lock
xor
mov
push
aaa
movhps
lret
add
push
lods
mov
rol
xor
sahf
leave
jbe
shrb
rorb
shr
cld
xchg
mov
mov
push
rcrb
rorl
ret
mov
xorb
fdivl
xlat
mov
sbbb
loope
xor
jle
jl
sbb
movsb
inc
test
lods
cmp
mov
gs
hlt
mov
lods
pop
icebp
in
sub
mov
nop
add
inc
mov
arpl
jb
lock
cwtl
jl
mov
push
or
outsb
cmp
iret
push
int
mov
jge
xrelease
jns
ficoms
test
mov
xchg
imul
xor
stc
xchg
iret
dec
jl
push
jecxz
enter
popa
shr
cs
lods
add
out
push
mov
xchg
scas
mov
mov
pop
nop
lea
or
mov
sbb
mov
mov
test
mov
sbb
sbbb
scas
xchg
lods
cmovge
inc
cmp
insb
aas
inc
pop
cmpsb
mov
push
orl
dec
rorl
sub
movsb
mov
gs
movsl
movl
dec
hlt
scas
call
pop
ss
mov
adc
inc
push
push
ss
pop
data16
jle
lea
xor
jne
insb
repnz
fstps
push
and
lret
ljmp
fs
lahf
fcomps
cmp
into
outsl
imul
mov
mov
mov
xor
fadd
scas
push
push
inc
push
adc
jae
mov
sub
in
push
mov
xor
xchg
sbb
in
sub
insb
inc
add
sub
scas
mov
dec
sbb
mov
lods
push
ficoms
arpl
jns
cli
pop
pusha
push
add
jbe
aas
sbb
das
inc
xchg
pop
stc
mov
bound
cmp
lahf
scas
or
mov
repnz
sub
cs
lds
ja
outsb
lock
cmpsl
xor
ljmp
scas
movsl
push
sub
mov
xor
int
inc
ficoml
mov
mov
cmp
test
xorb
push
mov
xchg
mov
pop
or
push
scas
cli
stos
cmp
lods
sbbl
scas
loopne
fldcw
sub
int3
xor
test
test
adc
mov
out
xor
mov
xchg
sub
pop
stos
add
std
and
or
xchg
rolb
dec
push
stc
pushf
mov
popf
cltd
mov
mov
testb
aas
iret
ficoml
mov
mov
inc
rorb
inc
lds
mov
xlat
mov
fildl
or
sub
lods
mov
mov
xchg
add
mov
mov
push
xlat
outsl
fwait
jge
push
fstpl
sbbb
cmp
push
aam
or
fs
sbb
dec
add
xchg
inc
pop
mov
pusha
inc
mov
mov
dec
in
sbb
iret
mov
cmp
je
add
jecxz
outsb
ror
scas
into
sbb
push
cltd
jb
fsubrl
out
jecxz
into
lahf
mov
pusha
in
lahf
bound
in
dec
cmp
xchg
sbb
push
pop
insl
rcrl
cmpsl
inc
xor
mov
or
xchg
enter
adc
ffreep
or
cld
scas
repz
xor
xor
sbb
pop
inc
test
or
add
pop
sbbb
jg
xchg
out
das
sbb
xchg
xchg
adc
out
xchg
call
xor
xor
je
sbb
pop
into
stos
cmp
fmull
test
and
mov
arpl
pop
cltd
mov
xchg
ret
pop
push
xchg
fsubr
xor
cmp
out
cs
add
cwtl
cmpsl
cld
adc
mov
sbb
mov
cmp
adc
jb
movsl
inc
andl
scas
xchg
and
mov
inc
sub
push
pusha
in
testb
les
xchg
mov
mov
cmp
sbb
mov
cmc
xchg
stc
fldenv
rclb
ret
pop
and
jecxz
cwtl
gs
rcrl
mov
lods
out
or
adc
out
cmp
testb
push
and
ss
mov
push
out
bound
cmovnp
sarb
cwtl
popa
jb
gs
int
xor
loope
notl
repz
dec
mov
dec
ret
mov
jb
popa
mov
push
or
push
xor
mov
lcall
cmpsl
mov
jge
ljmp
fdivl
lret
jle
cmp
std
dec
inc
scas
out
sub
pushl
jno
push
adc
ret
add
xchg
loopne
rol
hlt
stos
adc
shll
mov
adc
mov
lods
incl
xor
int
out
mov
jecxz
mov
cmpsb
bound
mov
sarb
mov
mov
pop
leave
cvtps2pi
jno
dec
pushf
ljmp
push
shl
jne
sub
mov
cld
and
lds
push
fisttps
scas
push
insb
test
gs
and
test
push
cmc
repz
pop
ds
jmp
jl
mov
popa
pop
sbb
cs
adc
sub
repz
lret
mov
sub
xchg
cmp
xchg
in
mov
mov
cmp
xor
sub
pop
mov
fsubrs
inc
dec
mov
bound
sbb
push
mov
add
daa
push
inc
pop
in
sub
lcall
push
inc
cltd
mov
mov
sbb
cmp
insb
int3
pop
cmp
xor
call
adc
jbe
ficompl
xchg
pop
in
in
sub
push
push
sbb
jle
insb
lock
insb
jbe
int3
dec
mov
ss
jg
inc
dec
sub
out
push
dec
jge
push
pusha
sbb
popf
dec
iret
lahf
dec
insl
adc
sarb
scas
xor
loopne
dec
pop
sub
scas
and
rorb
out
xor
mov
dec
outsl
dec
sub
iret
mov
push
mov
mov
rorl
dec
pop
push
lret
cmp
insb
popa
insb
dec
or
adc
sbb
sbb
fcoml
iret
sub
scas
xor
scas
aaa
mov
dec
dec
aas
insl
pop
pushf
push
and
mov
dec
cs
push
fcompl
pop
das
xor
lods
sub
sub
sbb
mov
push
push
std
fstps
ret
pushf
sub
int3
push
sbb
dec
xor
sbb
scas
sub
out
push
sub
lods
aam
dec
push
lret
dec
push
int
ds
cs
push
add
xor
dec
pop
or
dec
movsb
pushf
lods
mov
movsb
pushf
aaa
dec
nop
in
pushf
pop
mov
mov
dec
movd
xchg
dec
pop
dec
adc
das
and
ficompl
push
int3
sbb
adc
inc
insl
lods
dec
jg
dec
jno
and
sbb
cld
fmull
push
or
into
or
adcb
push
lods
lret
in
adc
dec
mov
add
dec
scas
andb
sarb
push
dec
mov
sahf
movsl
shr
jmp
movswl
sub
push
hlt
or
scas
inc
pop
push
je
insl
mov
movsl
loopne
enter
es
out
lock
repz
clc
sbb
ja
mov
add
push
or
push
ss
xor
repz
orb
lods
insl
es
jne
cmpsl
inc
sbb
mov
push
mov
adc
jle
mov
test
insl
sar
shrb
add
das
mov
push
fadds
pop
cmpb
scas
lods
and
rcrb
sahf
jecxz
pop
adc
test
addl
mov
sbb
int
dec
ret
gs
jno
jae
divl
bound
notl
xchg
mov
fiaddl
test
stc
adc
je
clc
fnsave
adc
mov
xchg
xchg
push
mov
outsl
cltd
push
sahf
jle
adc
les
pop
enter
mov
lret
cmc
inc
jle
shr
aas
mov
leave
add
pop
out
ja
cmp
repz
enter
xchg
xor
jo
stos
jae
xor
jno
ret
sub
mov
scas
out
sub
lea
xchg
cmp
push
jns
cmp
jecxz
or
hlt
in
addr16
popf
popa
mov
pop
mov
pop
dec
push
jno
push
lods
or
and
dec
hlt
inc
decb
dec
jmp
jns
in
aam
mov
fsubr
notl
int3
inc
rep
leave
cli
test
mov
adc
jle
jmp
ret
add
add
aaa
dec
push
lahf
int3
std
mov
rorl
fisubrs
jo
mov
add
push
mov
sub
inc
mov
mov
sub
lret
adc
and
gs
adcb
sub
lea
xchg
int
std
in
fwait
es
js
pop
mov
pop
gs
inc
lock
pushl
jg
adc
jmp
popa
mov
fimull
push
dec
sarb
pop
cmp
ja
mov
inc
adc
lods
lret
push
negb
mov
mov
push
cmp
jmp
out
stc
mov
or
dec
test
sbb
lret
lea
stos
mov
insb
jecxz
sbb
or
cmp
add
into
test
rcrb
insb
lret
mov
test
jl
and
loopne
xchg
inc
cld
mov
je
dec
leave
imul
xor
mov
movsb
jmp
sub
repz
pop
lds
ret
out
sti
dec
addr16
notl
and
add
lahf
leave
pop
lods
inc
std
mov
push
mov
mov
aaa
cld
pop
mov
popf
popf
pop
jmp
addr16
xor
inc
pop
cmc
inc
push
aam
cmpsl
in
out
nop
ja
cld
scas
mov
mov
insl
inc
jle
movsl
add
daa
mov
lods
lcall
dec
adc
enter
sbb
lahf
push
loopne
push
pop
cld
adc
mov
ret
inc
imul
push
mov
nop
pop
scas
cmpsl
mov
adc
or
jb
cmp
xor
mov
jne
adc
fwait
jecxz
dec
pop
stos
imul
scas
sub
das
aaa
sub
xchg
icebp
add
push
mov
lock
fs
push
pop
stc
les
repz
mov
push
test
inc
test
testl
inc
lods
inc
mov
scas
adc
pop
push
cmp
btc
mov
insl
mov
xchg
pusha
notl
sbb
popf
int3
sbb
outsb
mov
jecxz
leave
push
pop
lret
lret
mov
mov
clc
sahf
sbb
lcall
sub
cmpsb
sub
dec
push
iret
adcb
psubw
inc
sub
or
jecxz
sbb
movsl
fnstenv
push
mov
lcall
cmp
xor
sbb
repz
add
lret
dec
push
inc
mov
out
pop
popa
fcmovu
clc
sub
popf
mov
in
mov
fimuls
mov
out
insb
xor
push
gs
test
jmp
inc
xchg
fcoml
in
push
nop
ljmp
scas
outsb
iret
mov
xchg
jne
int
push
out
movsb
cltd
nop
sbb
add
adc
cmp
addr16
inc
inc
cmp
mov
into
es
jbe
push
ror
repz
jg
add
cli
push
pushf
jae
xchg
rep
jns
mov
mov
cmp
loope
or
mov
jge
pop
mov
jae
fisubrs
sahf
sbb
out
out
and
ret
aas
xor
leave
iret
andl
or
sbb
mov
cmp
je
lods
and
pushf
mov
adc
fnsave
lock
movsb
push
adcl
jne
and
push
andl
sub
aas
fs
cli
aam
jle
push
fnsave
mov
dec
pop
das
lods
push
int
push
icebp
into
xor
xor
ret
cld
push
sub
imul
sub
imul
pop
es
into
pop
les
in
cltd
ret
enter
outsb
jae
psllq
lods
sub
fwait
mov
outsl
stc
cmp
aaa
mov
int3
push
fs
adc
sub
add
repz
cld
leave
push
aam
or
push
xchg
in
mov
mov
ds
dec
cmp
add
and
push
scas
imul
sub
shlb
std
lock
mov
stos
add
xor
mov
cmpsl
mov
xor
enter
fs
sbb
jge
ljmp
ret
adc
cmpsb
or
and
xor
mov
aaa
out
in
in
insb
adc
in
sub
out
xlat
int
mov
pushl
mov
sbb
xorb
bound
sub
sbb
les
push
std
jp
push
rdmsr
popa
insb
add
mov
lea
inc
jle
or
xor
xchg
push
cmp
push
sbb
mov
and
xchg
jg
or
pop
mov
out
int
cli
push
and
setnp
sub
xchg
mov
cmpsl
test
sub
movsb
mov
ret
iret
sub
jb
or
test
out
mov
mov
cmp
aaa
mov
cmova
push
inc
subb
xor
push
lcall
dec
sub
jl
mov
fs
jg
popa
mov
imul
lods
loop
mov
add
xchg
mov
and
iret
shlb
mov
pop
fdivs
lahf
mov
arpl
xchg
lods
dec
mov
pop
mulb
test
scas
pop
cmp
int
pop
jecxz
aas
pop
and
jbe
rcr
mov
xchg
xchg
movsl
insb
icebp
ja
outsl
pop
rolb
lods
inc
dec
mov
xchg
repz
sub
repz
xchg
mov
leave
stc
xchg
xchg
mov
hlt
xchg
or
cs
notl
cvttps2pi
rclb
xchg
inc
je
xchg
xor
dec
cltd
sbb
adc
in
push
fsubrl
lea
inc
bound
negl
scas
push
loope
cwtl
rorl
xchg
sbb
push
repz
roll
lods
jp
insb
icebp
xchg
cmp
jecxz
jge
push
jecxz
aam
pop
test
aam
movsb
jecxz
insl
mov
out
dec
xor
repz
imul
push
push
cli
cmp
out
sbbb
xor
pop
scas
dec
gs
scas
mov
movsl
mov
push
sbb
incb
cli
xchg
cmpsl
cld
mov
xchg
leave
sarb
rcrb
sub
xchg
das
push
push
imul
sar
cmp
xchg
jecxz
insl
mov
adcl
xchg
or
jns
jo
test
xlat
fistpll
adc
pusha
stos
adc
jno
mov
inc
mov
push
scas
aaa
adc
jb
xchg
stos
mov
mov
pushf
cli
inc
cs
adc
push
lret
lods
mov
push
gs
cmp
fwait
shll
test
inc
and
mov
jecxz
mov
add
sahf
pop
imul
mov
jne
add
cmp
std
repnz
mov
test
pop
sub
xor
jmp
js
and
movsb
add
cmp
aam
sbb
jecxz
sub
add
repz
hlt
push
cmc
scas
and
addr16
adc
jmp
stc
sub
stos
test
int3
icebp
aam
sbb
mov
out
mov
inc
push
mov
jnp
inc
ja
stos
push
push
dec
push
xor
pop
push
pop
fisttpll
adc
dec
and
cmp
dec
push
enter
test
in
cmp
mov
xchg
adc
jmp
int
push
mov
push
call
and
in
das
xor
pushf
cmp
loop
mov
stc
xor
inc
iret
xor
sti
add
mov
mov
add
cmp
outsb
imul
sarb
sub
pop
cwtl
sub
mov
in
xor
aas
in
int
shr
rcll
mov
fstpt
test
imul
push
scas
xchg
imul
arpl
or
enter
pop
ljmp
sti
push
and
push
repz
push
enter
mov
mov
mov
imul
inc
add
outsl
out
repz
dec
mov
iret
adc
loopne
mov
sub
cmp
mov
sarb
mov
cwtl
push
or
mov
sbb
pop
test
xor
sub
pop
out
cmpsb
mov
pop
jbe
xor
mov
dec
sub
and
jp
sahf
jge
mov
dec
nop
dec
mov
and
add
xor
cmp
adc
pop
ret
inc
add
fiadds
xor
lea
jmp
inc
sub
mov
dec
test
adc
fstpl
mov
dec
popa
mov
out
jecxz
loop
push
and
push
icebp
leave
bound
das
mov
jae
or
mov
push
scas
std
sahf
mov
es
rep
out
and
mov
or
dec
dec
gs
icebp
and
xchg
adc
add
mov
iret
mov
in
jnp
xchg
lods
lock
jle
test
movsb
repz
lcall
mov
out
xchg
or
mov
aad
dec
daa
cwtl
lret
pop
mov
xchg
or
pop
inc
out
xor
fnstcw
addl
out
add
xor
push
dec
sbb
jg
repz
ja
es
into
xchg
cmpsl
fists
pop
pop
adc
lahf
push
push
rorl
das
test
cmp
pop
jae
xor
sbb
out
in
cltd
cs
mov
adc
mov
xlat
test
sub
sbb
sbb
rcrl
push
dec
mulb
faddp
popf
repnz
add
test
test
movsl
aam
cmp
inc
fists
daa
into
test
repz
jne
mov
mov
xchg
dec
adc
repz
push
aad
xchg
lods
inc
ljmp
xchg
sbb
ds
or
ljmp
or
jbe
jge
cmp
and
xchg
mov
adc
mov
add
jne
adc
pop
push
mov
lcall
cs
mov
adc
fs
push
mov
pop
cmp
mov
sub
aam
cmp
jle
jecxz
push
in
call
mov
int
nop
push
out
push
loop
out
or
into
mul
sub
xor
cltd
loop
xor
sub
xchg
leave
and
iret
mov
lods
jecxz
mov
bound
push
aad
dec
outsb
lock
push
int3
mov
fdiv
push
lds
shll
sahf
dec
pop
and
and
fisubrs
xlat
add
dec
and
jecxz
adc
add
jmp
adc
stos
scas
inc
bound
mov
cmpsl
in
mov
dec
or
cli
mov
xchg
cld
and
imul
cmp
jle
outsl
cmp
dec
sub
mul
stos
fdiv
in
sbb
xchg
push
add
mov
loopne
push
rcrb
ret
or
pop
cmp
int3
subl
leave
add
sarl
repnz
xchg
inc
push
mov
addr16
xchg
push
je
and
sbb
cs
in
jb
hlt
inc
stos
decl
sub
mov
mov
cmp
imul
push
xchg
xchg
pop
adc
pop
add
push
dec
sbb
outsb
div
and
push
je
sbb
imul
movsb
mov
push
in
aas
fistl
scas
pusha
repnz
sbb
push
and
dec
mov
xor
jl
xorb
or
inc
sbb
and
pop
pop
ficoms
pop
xchg
jmp
push
int
clc
pop
stc
mov
push
xlat
rcrl
dec
inc
sarl
adc
and
mov
mov
mov
adc
lods
std
mov
ljmp
iret
pushf
mov
out
lods
pop
in
aas
jb
adc
xlat
dec
sbb
lcall
adc
add
and
cmp
mov
jmp
fistpll
sbb
movsl
lret
jo
jo
and
btsl
in
mov
cltd
inc
test
test
call
insb
dec
push
mov
fsub
or
pop
faddp
xchg
jne
lods
es
idiv
aas
adc
or
out
jecxz
lea
xchg
push
dec
and
push
jle
mov
cmp
mov
adc
je
push
mov
out
jne
fnstenv
in
adc
shrl
sub
sbb
lock
out
into
gs
cli
ret
icebp
cmp
out
cmp
dec
cmp
push
jl
cld
pop
test
sbb
push
ret
ds
and
and
inc
cld
lds
imul
pop
mov
iret
mov
push
dec
or
cmp
shr
ja
jo
outsl
cmp
xchg
lods
xlat
dec
ja
mov
cs
repz
or
push
cmpsl
shr
sub
call
push
lcall
scas
fs
aam
iret
mov
lods
sbb
fisubrl
adc
into
adc
aas
inc
lea
scas
sbb
pop
inc
mulb
jo
insl
adc
je
aas
decb
dec
scas
pop
test
cwtl
lods
pop
out
and
mov
and
bound
jae
outsl
pop
mov
fwait
pop
sub
cmp
mov
xor
shl
inc
lcall
mov
push
and
orb
scas
sub
push
mov
inc
imul
test
mov
scas
cmc
dec
and
mov
xor
xor
aam
push
leave
hlt
test
js
and
lret
jecxz
subl
pop
dec
xor
scas
mov
or
sti
ds
nop
js
lock
jns
or
inc
sbb
push
mov
adc
push
in
movsl
mov
fstpl
lods
leave
insl
pop
mov
movsl
in
insb
repz
lods
notb
inc
and
dec
stc
sti
xlat
imul
shlb
push
jno
aam
push
out
mov
mov
or
stos
adc
out
or
repz
cld
dec
add
inc
jle
inc
pop
stc
mov
fldt
test
add
cli
outsb
shrb
ret
out
mov
sub
in
sbb
nop
addr16
push
jecxz
testl
jle
popf
fs
xorb
sub
in
mov
into
fistpll
sbb
jne
xlat
loope
mov
testl
jle
or
sbb
loope
in
xor
out
mov
add
dec
adc
xchg
sbbl
cmp
sub
orl
mov
imul
add
aaa
cmp
or
dec
out
lret
cli
out
mov
lahf
gs
adc
push
ja
and
outsb
mov
sub
push
popf
xchg
dec
sub
push
mov
pop
xchg
cltd
jmp
subl
or
dec
pop
int
push
cs
out
mov
fcom
add
mov
push
push
in
repz
jb
xchg
lods
in
push
add
mov
adc
jecxz
nop
int
mov
hlt
push
mov
aaa
pop
les
push
dec
mov
pop
jae
icebp
std
into
inc
or
imull
xor
aaa
shrb
or
gs
loopne
sti
imul
ds
movsl
add
mov
adc
repz
int3
push
lret
lods
mov
shlb
push
aad
in
cmp
cmp
mov
and
sub
lcall
cmp
sub
mov
dec
fistps
stos
jecxz
insl
mov
js
mov
loope
fwait
dec
lcall
lods
aam
orl
and
add
sub
out
test
sti
stc
aad
adc
mov
fnstcw
movsl
pushfw
scas
stc
inc
xchg
or
test
xchg
add
jl
js
sbb
pop
out
inc
out
icebp
adc
lcall
and
or
inc
fstpt
ret
cs
clc
xchg
fisubs
aaa
and
dec
jecxz
or
add
popa
sub
roll
mov
adc
sub
repz
mov
add
out
outsb
mov
or
test
cmp
test
push
mov
and
jge
nop
lcall
lods
in
loope
mov
jecxz
shll
push
mov
fs
repz
mov
outsb
and
mov
stos
in
pop
xchg
sti
push
dec
popf
aas
out
fistl
lods
sbb
and
adc
lods
lods
test
fidivl
pop
mov
add
lea
and
cmc
int3
into
add
scas
push
mov
divl
nopl
stos
js
imul
rcl
xor
clc
dec
and
repz
mov
stos
bound
push
pop
cmp
int3
cmp
inc
scas
sarb
cmp
mov
mov
lods
incl
fildll
ss
icebp
adc
dec
inc
and
dec
xchg
scas
cmc
or
outsl
pop
lret
mov
cli
sarb
pop
popl
inc
pop
xchg
aam
dec
mov
add
clc
mov
and
jle
test
into
mov
lock
push
mov
lea
xchg
xor
mov
mov
cwtl
dec
push
mov
mov
cmp
dec
enter
xchg
cmp
sub
jle
mov
lcall
dec
xor
adc
mov
nop
pushf
mov
inc
cli
flds
mov
mov
mov
pop
cmpsb
mov
add
lods
faddl
cmp
adc
xor
dec
jo
mov
out
adc
scas
out
in
lds
sbb
mov
dec
xchg
push
sub
adc
popf
adc
inc
dec
or
dec
sub
lods
pop
sub
adc
jb
out
cld
cmc
test
dec
scas
push
xchg
fldl
lods
sbb
or
data16
stc
lret
add
repz
iret
sbb
das
aaa
es
mov
outsl
in
mov
dec
bound
xor
sarb
scas
and
jecxz
jle
and
test
adc
std
add
idiv
jmp
lea
repz
test
and
mov
adc
mov
insb
in
hlt
and
into
flds
pop
addr16
rclb
into
mov
fs
aaa
dec
inc
jle
add
jb
cmc
sbb
scas
inc
inc
push
xor
scas
es
pop
xor
ret
dec
push
mov
jb
movsb
in
mov
lods
pop
int
mov
sub
xor
hlt
jno
std
xchg
and
mov
mov
cmp
scas
mov
jae
xor
sub
mov
mov
push
sub
test
push
and
push
scas
cmp
sbb
repnz
dec
das
xchg
outsb
mov
mov
xchg
imul
mov
xor
scas
push
pop
jnp
mov
in
int3
mov
stos
loop
out
lods
in
cmp
push
dec
scas
pop
pop
adc
in
and
or
out
inc
push
lods
stos
pop
jmp
push
and
sbb
out
pop
jg
mov
aas
add
shll
jb
iret
jb
int3
sahf
and
push
push
sbb
mov
jne
adc
stc
xlat
test
jno
adc
std
adc
jnp
stos
inc
lods
pop
fistl
jmp
mov
or
sahf
push
jecxz
sub
clc
data16
ret
arpl
adc
setae
aad
cmp
xor
jle
mov
cs
inc
andb
sbb
fistps
insb
fs
out
loopne
in
mov
and
or
mov
sub
mov
pop
jmp
popa
sub
add
cmp
in
xor
lret
mov
mov
mov
push
and
dec
dec
dec
add
inc
xor
mov
inc
push
xor
mov
loope
in
inc
xor
jle
dec
inc
das
icebp
sbb
xchg
inc
mov
xor
xchg
pop
test
push
or
mov
xor
push
mov
cmpsb
push
pop
cmp
push
loop
push
rcll
lret
dec
ss
push
shlb
push
int3
sub
xchg
add
push
sub
je
xor
imul
xor
lods
xchg
divl
pop
and
or
loopne
or
dec
rorb
aaa
popf
sbb
aaa
push
fs
fs
insb
and
lea
push
in
push
cmpsb
lret
jle
iret
add
jnp
lret
adc
inc
imul
ljmp
test
lds
fucom
scas
mov
shlb
or
xor
insl
adc
daa
adc
idivl
mov
pop
adc
cmpsl
push
jne
push
out
test
cmp
push
push
iret
push
repz
sub
lret
or
out
sbbl
lcall
outsb
je
js
jge
cmpsb
in
sbb
movb
std
mov
mov
jmp
pop
adc
repz
mov
movsb
imul
shrb
ja
repz
out
bound
xchg
dec
arpl
aam
in
into
int
fs
jle
inc
ja
xchg
scas
dec
add
jle
scas
push
outsl
push
aas
push
ja
and
decb
and
mov
test
fs
inc
or
cmp
loop
pop
pop
cwtl
sub
outsl
paddsb
xchg
fstl
xchg
imul
ret
xor
lahf
and
jle
out
add
dec
lret
adc
insb
sbb
push
invd
add
jns
push
ss
inc
lahf
cmp
fwait
xor
jmp
or
popf
jmp
add
adc
inc
xor
test
and
pop
push
add
cwtl
divl
mov
ret
and
push
xchg
movsb
add
inc
pop
cmp
cmp
pop
adc
movhps
push
addl
call
or
xor
or
jge
popf
cmpsl
sub
xor
sub
push
xor
andl
aad
inc
mov
push
scas
aad
fstl
lods
pmulhw
cmp
jns
shrl
dec
dec
dec
lock
push
cs
shrb
add
sub
popf
mov
push
dec
xor
sub
dec
xchg
add
int
jbe
mov
push
aas
pop
rorl
and
push
scas
cmc
ja
xchg
call
rcrb
cltd
cmpsl
add
xchg
outsb
dec
pop
push
push
jnp
inc
loop
pop
call
mov
stos
dec
stc
hlt
xchg
mov
lds
int3
fisubs
lret
fnstenv
gs
push
decb
pop
sbb
cli
xor
lods
push
jecxz
pop
and
sbb
cmp
mov
dec
test
pop
or
dec
add
push
push
out
dec
sbb
sarl
add
rcr
das
dec
jle
scas
adc
sub
nop
imul
jecxz
inc
or
xchg
xor
shlb
push
sarb
adc
mov
xchg
mov
mov
cmpsl
cmp
pop
pop
fdivrs
and
test
jmp
jle
jnp
mov
daa
jg
repnz
cs
call
xor
outsl
out
push
lods
push
lret
add
aam
rcrl
jl
popf
and
push
fucomi
dec
ss
mov
shll
int3
dec
push
aaa
out
and
dec
lods
dec
push
xchg
test
repnz
push
sub
fnstenv
movsl
dec
test
negb
sbb
test
test
xor
gs
cltd
jle
mov
pop
and
push
add
and
or
jge
int
xchg
hlt
mov
pop
pop
mov
test
lock
cmp
aaa
push
shrb
or
adc
dec
in
pop
cmp
pop
xor
push
rcll
nop
negl
cld
sahf
ja
lock
sub
mov
adc
insl
cmp
add
xchg
test
mov
adcb
push
and
out
orb
xchg
mov
pop
inc
fstpt
shr
pop
lea
out
or
cmp
pop
lods
pop
movsb
pop
push
adc
mov
jne
or
repz
enter
add
outsb
xor
inc
mov
dec
scas
mov
jo
aaa
lret
mov
add
sti
jne
test
jns
stos
stos
fbld
fiaddl
repz
xor
add
xchg
stos
std
inc
push
les
rcll
bound
jmp
lret
add
add
aas
das
iret
arpl
cs
addr16
cwtl
mov
jge
jne
mov
xor
out
lock
imul
mov
xor
rorb
cltd
inc
fs
mov
mov
lods
jno,pt
xchg
jle
push
mov
lods
pop
mov
popl
mov
les
inc
mov
iret
out
xor
jecxz
pop
mov
mov
test
pop
inc
mov
fiaddl
xchg
addr16
clc
sbb
data16
ret
fmul
ss
add
mov
push
and
out
mov
or
fnstsw
push
mov
adc
sahf
push
cmp
cmpsb
pop
out
dec
inc
push
jecxz
xor
addb
lods
lock
cmp
stos
adc
dec
movq
dec
xchg
adc
mov
xor
fwait
add
icebp
mov
inc
push
pop
lods
stc
cmp
mov
icebp
and
iret
and
push
rcrb
xor
adc
mov
push
repz
sbbb
dec
popa
push
and
gs
mov
jbe
cmp
sub
adc
push
cmc
and
dec
mov
xchg
sub
dec
clc
sub
shl
add
dec
mov
test
into
sbb
sbb
sub
out
gs
mov
add
imul
sbb
daa
pop
xchg
xchg
sbb
mov
push
iret
fwait
das
rcrb
sbb
mov
seto
adc
add
scas
sbb
fsubrs
les
std
scas
xor
pop
pop
mull
push
ja
incl
mov
fisttpll
addr16
test
xor
jae
pop
or
dec
fadds
push
repnz
mov
add
pop
push
push
pushf
xchg
cs
jl
jnp
test
adc
mov
ret
mov
mov
and
lea
mov
out
push
mov
xchg
mov
imul
adc
pop
mov
dec
jmp
sbb
das
insb
out
orl
sub
pusha
sub
and
shr
inc
pop
jecxz
lea
fs
test
xor
push
nop
and
test
mov
push
pop
scas
xor
std
loope
flds
mov
lock
cs
rcrb
xor
push
pop
scas
push
pop
inc
mov
push
mov
sub
addb
out
sbb
adc
rcrb
pushf
or
stc
cltd
std
scas
pop
shlb
cmp
dec
mov
loope
and
cmpl
mov
pop
cmp
sti
sbb
scas
cwtl
mov
mov
push
push
jecxz
out
out
leave
mov
test
push
icebp
sub
jp
in
pop
notb
cmp
stc
and
insl
jp
ret
mov
js
dec
lahf
push
sub
cltd
inc
sarb
inc
fdivs
sti
lahf
inc
lds
aad
or
xor
adc
mov
jae
push
movsb
mov
pop
and
orb
lcall
es
icebp
out
push
mov
inc
icebp
cmp
and
nop
add
fdivs
aas
out
aas
jl
dec
xchg
xor
mov
dec
mov
push
mov
xor
inc
push
mov
movsb
pop
jecxz
orb
xchg
cmp
daa
ds
jno
dec
cs
or
dec
add
cmp
arpl
mov
xor
andl
jae
adc
mov
sub
loop
add
lret
rcll
pop
cs
add
pop
inc
xchg
adc
dec
pop
inc
jl
orb
push
mov
mov
cltd
popa
int3
mov
lret
movsl
lea
popa
mov
push
pop
add
mov
std
inc
add
inc
jg
sbb
fnstenv
pop
cmp
adc
sbb
inc
lea
add
jmp
pop
or
movsb
xchg
insl
enter
loope
arpl
inc
jl
addl
out
scas
ret
jno
push
inc
ret
mov
inc
mov
cmp
imul
pushf
xchg
imul
aam
push
notl
mov
jecxz
xlat
mov
cld
in
xor
jae
mov
shll
sbb
add
jl
cmp
fists
inc
lods
add
cmpsb
popf
popf
pop
cmp
fwait
or
inc
addl
and
mov
mov
lods
push
enter
push
push
fmull
in
mov
sub
xchg
xchg
inc
jmp
cmp
push
lahf
push
test
nop
xchg
daa
mov
pushf
sbb
jge
cs
pop
outsb
movsb
mov
cmpsb
adc
out
mov
mov
in
das
xchg
adc
inc
jns
cs
jmp
sub
ret
or
arpl
mov
cli
orl
mov
ffree
xor
je
arpl
cmp
iret
bound
mov
push
enter
iret
fidivl
es
mov
sbb
jae
ss
and
sti
imul
cli
push
stos
push
iret
scas
pop
ss
es
cmpsl
push
push
pop
dec
nop
mov
push
pop
cmpsl
xor
add
pop
inc
or
test
scas
cmp
or
push
repz
jno
xor
pop
and
push
add
into
iret
push
xor
fmuls
push
in
inc
sbb
scas
mov
fwait
sarl
into
int3
and
outsb
or
pop
pop
mov
or
movsl
lock
and
stc
and
xchg
fildll
cmp
fdivr
loope
mov
jge
daa
xchg
aad
push
bound
mov
cs
or
subb
out
movsl
mov
xor
pop
add
pcmpgtw
and
test
movsb
aas
pop
mov
dec
inc
sub
int3
mov
ret
ficoms
push
cwtl
push
insb
clc
repnz
scas
and
in
inc
push
mov
sbbb
push
cmp
add
sbb
xchg
jnp
push
enter
cs
je
push
daa
dec
movsl
loope
mov
jg
sub
or
push
mov
prefetch
or
xor
into
rorb
mov
int3
scas
pop
xchg
inc
sysexit
xchg
adc
sub
pop
ret
aam
add
divl
pop
cmp
stos
xor
jl
mov
stos
cmp
xor
sbb
je
es
test
stos
mov
cmp
lret
sub
mov
mov
cli
or
icebp
or
lods
pop
ljmp
xor
mov
jmp
test
or
jae
mov
xchg
test
jge
shr
lods
xchg
mov
mov
sbbl
pop
add
out
aaa
pusha
xor
enter
cmp
cmp
ret
xor
dec
sub
jmp
sbb
xor
test
or
arpl
lret
cmp
mov
sti
xchg
sbb
pop
mov
imul
stos
fwait
or
lret
jecxz
mov
xlat
push
pop
push
jno
push
fists
lahf
outsb
xor
mov
push
sub
add
mov
jle
and
adc
xlat
test
fidivl
arpl
push
add
jmp
mov
cmp
dec
rcl
iret
into
lods
cmp
or
insb
sbb
insb
imul
or
jb
and
cmp
aam
and
cmp
and
xchg
pop
or
stc
repz
lock
push
scas
mov
cmp
pop
popa
pop
mov
xor
stc
adc
xchg
lahf
movsb
iret
ret
sub
std
or
rcll
adc
in
iret
inc
lea
stos
stc
scas
sub
pop
test
imul
xor
repnz
insl
xor
cmpsl
fcomps
pop
divb
outsb
lea
sbb
and
les
dec
and
or
dec
or
mov
sti
push
fbld
cwtl
mov
and
ds
inc
scas
dec
insb
sub
xchg
inc
inc
cmpb
xlat
lret
or
cmpsl
data16
push
cs
adc
mov
lret
mov
or
orb
pop
mov
push
aas
mov
lgdtl
insb
xor
xor
scas
aam
outsl
leave
mov
xor
out
push
rolb
and
cmc
ljmp
lods
adc
push
cmp
out
jecxz
data16
mov
adc
enter
mov
xchg
sub
loop
push
bound
scas
cmp
push
sbbb
pop
jae
cmp
test
mov
outsb
call
mov
fisttps
lret
adc
dec
push
adc
imul
loope
outsb
jp
xchg
pop
ja
mov
push
aaa
or
test
movhps
in
cld
aaa
and
das
lahf
mov
idivb
xlat
into
fstl
cmp
aaa
out
outsl
aad
in
xor
ja
mov
fldl
into
ljmp
pop
add
push
and
and
jecxz
adc
push
cld
in
xor
or
outsl
cmp
sbb
cmpsl
push
dec
icebp
divb
scas
jae
lods
inc
call
cmp
lds
hlt
jle
aas
xor
inc
and
in
test
int3
dec
hlt
popw
mov
insb
imull
push
scas
xor
inc
xor
inc
mov
sar
sbb
shrl
jno
pop
push
sarb
cli
loope
out
jle
in
dec
and
lret
ljmp
cmpsl
jns
femms
push
xlat
rcl
movb
push
mov
push
mov
daa
out
pop
push
push
rcl
dec
cmp
mov
lods
add
mov
shlb
sbb
test
xor
lods
dec
push
cld
push
jb
mov
sahf
imulb
sti
fsub
jecxz
sbb
cmpsb
shr
iret
mov
xor
repz
hlt
das
stc
pop
lcall
js
out
pop
shr
cmc
lods
xchg
lea
mov
mov
arpl
pop
jns
push
int3
cmp
cmp
sti
test
shrb
jmp
push
jg
cmp
cmc
loop
dec
lret
in
imul
jb
xor
add
in
xchg
sbb
out
out
pop
pop
int
das
fdivs
or
push
jmp
call
mov
dec
loopne
or
aas
adc
scas
lea
sbbb
mov
push
jns
cmp
sahf
fstpl
xor
xor
sbb
jmp
filds
inc
hlt
add
fwait
ret
xchg
inc
out
adc
push
shrb
mov
fdivl
pop
pushf
fmull
lods
flds
jg
scas
repz
xor
sbbl
mov
adc
cmp
enter
jle
inc
mov
xor
mov
js
and
lods
inc
pop
dec
add
test
mov
push
cmp
mov
dec
scas
xchg
xchg
pop
popf
add
mov
jecxz
decb
sub
xchg
lods
mov
fisttpl
gs
sbb
ds
push
pop
movsb
loope
or
lods
stc
cmp
mov
aas
sahf
push
leave
fwait
test
add
ror
xor
in
add
jmp
push
push
sbb
mov
ja
fstpt
movsb
jno
and
pop
fs
lret
cwtl
sbb
sbb
les
lret
imul
add
push
daa
dec
int
add
out
mov
sti
xor
or
jle
push
inc
mov
test
mov
incl
popf
dec
sub
jo
std
add
fistpl
adc
inc
hlt
std
idivb
in
cmpsb
insb
sub
xchg
cmp
push
jg
mov
stos
xchg
or
scas
nop
lea
cld
rorl
or
and
xor
incl
mov
lahf
xor
out
xor
cmc
lea
push
and
inc
mov
and
test
mov
sub
push
mov
adc
mov
add
scas
or
jnp
inc
jbe
outsl
out
lret
mov
add
adc
jb
in
scas
push
ret
sbb
fdivl
js
dec
sahf
pop
popa
xor
and
daa
push
push
adc
xor
adc
jns
cmp
or
jl
mov
rep
push
mov
inc
or
mov
pop
add
clc
test
adc
mov
push
aas
movsl
pusha
pop
das
gs
sbb
mov
fs
daa
insl
loopne
out
leave
lea
stos
pushf
cld
repz
mov
jle
scas
pop
xor
mov
xor
lea
inc
dec
xchg
push
pop
xrstors
enter
ja
xlat
sbb
pop
add
pop
push
mov
push
hlt
push
mov
leave
dec
movsl
sbb
jmp
xor
push
inc
imul
lods
sbb
mov
std
fisubrl
movsl
dec
lods
xor
pop
pop
push
fimull
add
jle
jb
in
add
push
loop
and
repz
mov
dec
test
cmpsl
mov
xchg
jge
xor
jmp
pop
lock
call
jecxz
push
in
ja
jmp
sub
xchg
incl
xor
sub
in
and
mov
mov
out
push
repz
dec
jno
out
mov
lods
mov
xchg
pop
leave
pop
mov
sbb
test
xchg
addr16
pop
int3
sbb
mov
sbb
xor
movsl
int3
out
push
aam
divb
shlb
lret
pop
cmp
dec
cmp
fisttpl
ljmp
jecxz
imul
test
jge
xchg
cwtl
scas
inc
outsl
rcr
mov
dec
push
dec
icebp
lahf
orb
mov
das
mov
jns
popf
jne
push
xchg
mov
xchg
xchg
add
xor
cltd
cmc
adc
jmp
mov
sub
sbb
sahf
push
ja
loope
shlb
adc
xor
adc
xor
pop
sub
scas
mov
inc
jp
test
xorb
popa
aam
and
daa
aas
sidtl
not
int3
scas
icebp
mov
sbb
xor
xlat
mov
mov
pop
pop
mov
push
xchg
sbb
inc
negl
loopne,pn
dec
push
mov
icebp
ficoml
scas
sub
icebp
fisttpl
rcrl
jnp
scas
jmp
sbb
push
scas
shlb
pop
repnz
push
jecxz
adc
cmc
jo
fdivrl
adc
jecxz
scas
repz
push
sub
adc
mov
jmp
xchg
dec
pushf
xor
jne
repnz
outsb
arpl
jle
loope
mov
add
loopew
rolb
sub
andl
out
inc
xor
jg
xchg
mov
push
cs
mov
adc
mov
dec
sbb
scas
xor
addr16
xor
mov
jp
sub
icebp
cs
int
in
sub
aaa
insb
ljmp
mov
inc
cmc
leave
sub
cs
jg,pn
pushf
in
xchg
decl
xor
push
enter
xchg
mov
jb
mov
mov
or
lret
mulb
xchg
lret
inc
imul
scas
mov
dec
lods
sub
mov
enter
out
arpl
fnstcw
sbb
shlb
test
push
addr16
aaa
sbb
outsl
mov
adc
das
or
lahf
add
xlat
addr16
or
outsb
lods
lahf
mov
add
dec
xchg
cmc
sbb
lret
hlt
jne
int
or
lea
scas
or
cmpsb
jecxz
and
lret
loop
movsb
xchg
stos
jl
popa
sbb
insl
pop
stos
shlb
cli
push
add
inc
dec
aaa
lea
jno
mov
outsl
movsb
dec
scas
sbb
adc
add
pop
mov
sub
fstpl
jno
or
cld
pop
rcrl
mov
popa
xor
pop
xchg
or
dec
hlt
mov
insl
cld
mov
loopne
repz
push
pop
add
packsswb
xchg
sub
adc
popa
cmp
cmp
pmulhw
das
fistpl
jg
cmp
movsw
mov
xor
add
lods
jg
leave
mov
jno
fs
cmovg
bound
jle
test
mov
push
xchg
xchg
pop
push
pop
or
data16
mov
cmp
jo
cmp
jnp
push
les
repz
xchg
add
pop
mov
and
push
adc
dec
dec
scas
push
inc
inc
sahf
cmovb
fwait
test
or
mov
cmp
push
cmpb
cmp
jb
xor
mov
push
in
out
adc
mov
cld
lahf
or
jmp
push
insb
or
sbb
xor
add
push
or
xor
in
xor
mov
and
jl
outsl
push
xchg
inc
comiss
pop
scas
dec
jbe
sbb
outsl
and
add
push
movsl
adc
or
jecxz
push
pop
mov
js
incl
adc
scas
jg
push
pop
add
dec
imul
shr
push
andl
inc
out
fldcw
push
push
push
or
ret
mov
pop
lret
loop
xchg
sub
scas
lret
and
xor
mov
push
les
hlt
and
sub
cmpl
sbb
xlat
xor
fst
push
mov
invd
xchg
mov
stos
mov
lods
test
stc
pop
sbb
jle
popa
clc
outsb
and
data16
jmp
repz
sbb
sbb
and
pop
insb
mov
enter
xchg
data16
test
dec
sbb
xor
loop
push
clc
aad
les
xor
cmc
adc
popa
imul
push
sub
imul
mov
push
jae
sub
jge
das
lock
push
fisttpl
push
jle
dec
dec
mov
andb
pop
test
jle
lahf
cli
mov
fwait
inc
mov
aam
sbb
test
or
lods
adc
xchg
out
jmp
inc
popl
movsb
push
lods
dec
ds
or
xor
jne
cmp
xor
inc
out
jnp
hlt
inc
repz
push
mov
adcb
pop
or
dec
or
ljmp
insl
push
mov
mov
enter
push
jnp
and
dec
lock
aaa
xor
jno
pop
jl
and
lcall
adc
cmpsl
repz
add
xlat
adc
mov
pop
sbb
ljmp
sahf
sub
and
dec
cmpb
mov
cmp
aaa
adc
mov
stos
mov
adc
mov
mov
lcall
pop
and
or
repz
das
in
aas
out
inc
xorl
enter
push
pop
mov
and
adc
ja
mov
popf
mov
or
ja
jg
jecxz
cmp
aam
push
dec
dec
mov
sbb
ljmp
jg
rolb
pusha
xchg
fstpl
adc
jbe
iret
jmp
shl
test
inc
xchg
push
mov
adc
sbb
enter
in
outsl
fdivrl
fisttps
dec
arpl
lds
cmpsb
subb
loopne
repz
mov
mov
jne
fs
aas
cmpsb
out
pop
and
ret
fcmovnb
mov
sbb
repz
int3
xor
bound
push
lods
daa
ficoml
jnp
pop
xor
jge
lcall
mov
aad
lods
dec
and
shlb
data16
lret
mov
mov
mov
lods
das
or
movsl
and
jae
adc
pop
mov
mov
and
jb
daa
mov
push
xchg
adc
lock
push
popa
push
call
stc
mov
push
push
jae
pop
pop
adcl
js
aam
pop
sbb
push
adc
sbb
push
pop
lods
divb
outsl
push
push
inc
pop
inc
xchg
jno
stos
mov
icebp
add
dec
cmp
nop
call
inc
sarb
lea
add
xor
or
xor
and
pop
data16
and
cmp
test
or
sbb
mov
pop
jg
lods
sbbb
pushf
data16
cli
jg
jmp
lea
ja
pop
pushw
jb
out
mov
fildll
or
xchg
movsl
dec
or
push
outsl
mov
push
scas
inc
int
add
std
and
jns
mov
out
and
loop
out
dec
jmp
or
dec
push
adc
rorl
das
out
negb
xor
and
pushf
add
inc
inc
sahf
aad
xchg
xchg
add
push
mov
sbb
push
add
aaa
adc
mov
movsb
aam
dec
adcl
xchg
fbstp
lds
push
in
xor
ss
aad
and
int
and
dec
fists
push
jecxz
xlat
and
aam
dec
jg
nopl
cmp
scas
popf
ss
inc
add
xchg
ljmp
inc
inc
lods
fidivl
mov
les
mov
mov
enter
dec
stos
fs
pop
mov
test
aad
aam
mov
cmpl
in
stos
aam
fidivrl
in
sti
inc
insb
lods
into
fld
jns
mov
sub
jmp
lea
pop
sbb
dec
rorb
dec
dec
fsubp
out
xor
or
gs
pop
xchg
push
sbb
xlat
popa
sbb
sbb
mov
jb
dec
sub
push
inc
xor
outsb
xor
push
movsl
jo
cmp
es
stos
stc
mov
push
ds
sbbl
mov
pop
dec
xchg
mov
cmc
addl
push
and
add
xor
daa
out
lods
or
icebp
pusha
dec
nop
movsb
bound
call
in
sti
pop
pop
shrl
xchg
or
mov
mov
push
jns
add
loop
xchg
sbb
sbb
inc
sub
cmp
fbstp
ljmp
fst
cmp
loopne
adc
lods
jmp
and
lods
sub
dec
cmp
xchg
inc
data16
xchg
dec
mov
push
ljmp
cmp
les
stc
cs
sar
fs
mov
lods
mov
and
mov
stc
dec
roll
scas
push
das
in
add
xor
jmp
enter
and
xchg
movq
or
and
jecxz
or
mov
mov
sahf
mov
push
cs
mov
pop
stos
inc
adc
xchg
int3
test
cmp
ret
push
sti
add
lea
mov
outsb
sub
imul
int3
cmp
bound
push
fldl2e
jp
cmp
test
addr16
xorb
fisttpl
out
push
aaa
xor
or
or
jmp
xor
mov
mov
xor
xor
testb
cltd
mov
dec
mov
push
in
push
pusha
adc
aaa
mov
shll
outsb
out
dec
add
fmuls
or
inc
cld
mov
pop
insl
adc
cmp
arpl
ss
das
push
cmp
btc
andl
adc
sbb
jecxz
xchg
mov
jns
das
push
sub
scas
in
xor
jmp
iret
or
push
inc
push
adc
mov
xor
add
sub
adcl
pop
rcll
iret
adc
outsl
sahf
iret
ljmp
adc
cli
aaa
outsl
or
push
sub
movsb
mov
mov
stos
sub
in
mov
jmp
xchg
and
sub
push
pop
shrl
inc
cmpsl
pop
int3
fstpl
ljmp
push
and
imul
mov
mov
pop
add
sbb
or
scas
mov
test
lcall
adc
pop
cmp
mov
mov
pop
out
popf
pusha
or
fwait
lret
pop
mov
movsb
inc
dec
lods
pop
adc
jp
jno
and
lcall
lods
fidivrs
xor
test
subb
fsts
mov
ret
jle
loopne
sbb
mov
mov
inc
mov
push
dec
jb
sbb
lock
pop
mov
jg
mull
mov
pop
sbb
dec
in
mov
sbb
adc
fcom
jecxz
call
out
je
scas
dec
mov
add
pop
test
or
inc
pop
adc
scas
push
push
out
gs
or
push
mov
das
lret
xor
sbb
ljmp
es
inc
out
cld
test
push
pop
in
push
push
pusha
push
or
dec
je
xchg
jo
xchg
shl
imul
jnp
jnp
js
inc
lods
cs
orl
push
iret
xor
cmpsb
stos
mov
mov
pop
mov
cmc
cs
mov
cltd
fwait
xor
daa
cltd
inc
mov
sub
pop
ds
xor
cmp
fisttpl
mov
imul
jne
add
xor
popa
push
push
test
cmp
pushf
scas
mov
testb
mov
fdivl
stos
pop
mov
and
lea
leave
addr16
mov
aaa
mov
sahf
or
dec
cmp
cli
cmpsb
mov
xchg
lcall
xchg
mov
addl
clc
jecxz
cli
rep
das
out
sub
and
xor
lods
jne
and
subb
push
fldcw
xor
out
and
xchg
inc
hlt
fcoml
call
inc
mov
fwait
daa
sti
cmc
push
lea
or
imul
push
sbb
push
loop
dec
or
es
cmp
inc
test
stos
sbb
sbb
push
mov
cmp
nop
test
dec
fs
rcrb
cwtl
push
push
fsubs
inc
sbb
xorl
push
scas
xor
popa
fs
xchg
xor
pop
movsl
dec
aaa
scas
sbb
xor
ret
mov
int3
sbb
adc
iret
lods
pop
inc
jb
lret
fs
ss
in
out
aam
mov
add
or
or
jns
out
push
mov
or
fs
adc
xchg
enter
dec
daa
or
outsl
push
scas
mov
sbb
sub
adc
fsubl
ret
and
in
sub
jge
insl
ficoml
or
pop
or
loop
push
cmpsl
fildl
push
xchg
inc
mov
jge
xor
push
test
and
inc
mov
xor
dec
adc
cli
jle
sbb
lea
or
push
cmp
push
inc
dec
mov
inc
xchg
out
cmp
ret
mov
int3
xor
inc
jle
add
mov
pop
mulb
jmp
xor
adc
mov
loope
mov
mov
adc
push
decl
or
rorl
push
cmpsb
push
imul
jl
mov
pushf
xchg
fistps
push
pop
mov
call
cmp
mov
daa
sbb
dec
cltd
dec
xlat
push
ficoml
pop
mov
inc
xchg
mov
out
mov
and
mov
or
or
cmp
cs
lcall
insl
subb
imul
aad
dec
stos
fdivrl
jnp
jg
xchg
test
jno
lahf
push
popa
inc
pop
faddl
cmovge
cmp
cwtl
lock
inc
out
aad
jae
scas
int3
inc
out
mov
subl
lock
mov
rclb
out
js
test
dec
pop
fstps
test
dec
in
scas
rolb
mov
iret
and
xor
cs
cmpsl
xchg
pslld
mov
pushl
jns
jae
pushf
jno
call
mov
jnp
mov
pcmpeqb
sub
sbb
cmp
sbb
sbb
mov
sbb
scas
shr
xlat
iret
loop
or
scas
push
add
mov
subb
and
mov
cmp
addr16
mov
push
scas
xor
mov
push
xchg
lea
and
mov
dec
mov
in
movsl
arpl
loop
sbb
dec
sti
aam
mov
enter
jmp
aam
jg
lea
or
jno
mov
xor
adc
adc
sub
loopne
xor
pop
mov
in
sub
adc
shll
mov
jae
mov
movsb
adc
sub
xchg
push
add
push
push
scas
cld
arpl
and
lcall
inc
into
int3
fs
fcmovbe
fisttpl
jne
loop
jbe
push
jns
repnz
cmp
mov
cmp
pop
mov
mov
scas
inc
jle
and
adcb
xlat
mov
ror
out
push
pop
xor
or
nop
pop
adc
xchg
mov
mov
mov
pushf
push
sub
push
dec
stc
cmp
jle
scas
jo
mov
pop
movl
pop
out
out
or
scas
jae
xchg
mov
cmp
leave
fnstsw
push
movb
test
sub
data16
nop
out
repz
scas
mov
repz
subb
arpl
sti
mov
mov
dec
sbb
pop
push
sbb
pop
dec
addr16
jge
test
hlt
inc
ficomps
cmp
pusha
inc
jle
hlt
outsb
out
dec
cmp
shrb
fistps
push
or
adc
jno
ds
cmp
scas
inc
sahf
mov
mov
add
sub
or
jbe
jns
jecxz
lahf
mov
jne
xor
mov
xchg
mov
out
std
jbe
sbb
rclb
and
cs
xlat
sub
dec
xchg
popl
sbbb
mov
jo
and
and
inc
sub
xchg
adc
jno
lea
xchg
lahf
dec
xor
mov
jne
wrmsr
repnz
sub
xor
push
mov
lods
cmp
cmp
push
scas
loope
jge
and
sti
test
popf
cmp
xchg
cwtl
icebp
les
pop
faddl
xchg
pop
cmp
int3
lea
rolb
lods
jg
dec
cltd
insb
adc
adc
add
cmp
mov
adc
cmp
fsubrs
pop
stos
mov
xchg
or
sarl
mov
sbb
pop
scas
pop
loope
jmp
int3
je
les
sub
daa
cld
add
scas
iret
mov
push
rcll
xchg
mov
pop
mov
call
sbb
cli
fnstsw
outsb
mov
subl
xor
adc
xorl
pushf
ret
lcall
scas
jnp
adc
loop
mov
hlt
xchg
add
les
inc
pop
movsb
xor
aas
ror
jnp
lods
daa
pop
mov
push
inc
push
mov
xchg
push
ficoms
dec
mov
lea
jb
push
mov
push
sub
ret
outsb
or
lods
in
fimull
lret
rol
std
lock
xor
sub
ljmp
in
popf
lods
mov
dec
xor
push
xor
das
inc
sbb
push
out
push
loope
shrl
ja
fs
shlb
jns
movsb
adc
mov
push
fsubrp
mov
out
pushf
or
mov
shr
jle
movsl
fs
addl
add
sbb
adc
pop
outsb
mov
dec
out
adc
hlt
add
mov
enter
dec
or
xor
xchg
mov
push
cmp
cmpl
dec
mov
pop
movsl
add
push
pop
fwait
cwtl
adc
into
lods
cld
lds
jne
mov
jmp
fistpl
cmpsb
pop
mov
pushf
cmp
push
cmp
dec
scas
scas
subl
cbtw
jno
stc
mov
es
push
std
mov
or
mov
jno
adc
push
pop
shlb
mov
pop
and
adc
int3
push
sahf
in
xchg
ja
xorb
jo,pt
or
int
mov
movsb
or
xchg
xchg
mov
aaa
mov
scas
ficoml
inc
scas
xor
jmp
pop
outsb
mov
xchg
add
out
pop
leave
orb
lahf
dec
mov
xchg
jg
xchg
inc
dec
push
aaa
mov
notb
fdivs
fs
dec
cmp
or
xchg
rcrl
clc
add
lods
inc
leave
push
push
in
loope
pop
std
inc
mov
jns
das
jne
rolb
out
inc
dec
imul
addr16
cmp
scas
sub
in
cmp
mov
subl
or
xor
dec
add
push
cmp
xor
int
popf
aam
mov
jecxz
hlt
scas
sbb
fimuls
mov
lods
rorl
int3
fbld
je
icebp
scas
test
push
xchg
sarl
in
rcrb
in
cmpsl
add
jnp
adc
sbb
mov
lods
and
fs
rdtsc
dec
test
fldenv
pop
rorl
pop
push
dec
inc
push
inc
into
add
out
inc
dec
cs
imul
cld
popf
imul
or
test
decl
pop
mov
adc
add
jno
insl
popa
xlat
inc
cmp
jecxz
and
mov
repz
mov
add
stos
jle
sub
jns
outsb
adc
add
lods
jmp
movsb
inc
adc
movsl
and
in
rcll
push
cmpsl
jo
scas
jmp
inc
inc
dec
insb
fistpl
mov
push
mov
push
hlt
xchg
or
out
dec
faddl
push
sub
lret
xor
arpl
das
scas
push
sub
out
xchg
adc
shll
xor
negl
rcrb
dec
movsl
pop
daa
and
pop
cs
pop
xor
pop
mov
adc
repnz
lahf
bswap
mov
push
pop
jbe
out
jp
in
jne
outsb
pop
xor
daa
add
adc
lods
jg
mov
subl
enter
cmp
pop
testl
xor
mov
fs
adc
or
lods
insl
mov
mov
lea
push
fcoml
jge
scas
fcoml
fcoml
sbb
je
mov
sub
adc
adc
in
add
add
loopne
adc
aam
push
and
and
rcr
les
xorl
adc
push
scas
xor
jle
sbb
sbb
psubsb
aas
imull
inc
push
xlat
sub
aam
push
or
xchg
shlb
inc
aaa
fimuls
mov
and
mov
inc
xor
xor
jae
add
sbb
scas
lret
xchg
inc
aam
mov
mov
les
mov
lods
mov
std
fldt
pop
lret
lock
pop
mov
dec
push
lea
xor
out
out
lods
adcb
xor
lock
scas
loopne
cwtl
dec
insl
xor
sub
sbb
jecxz
push
in
cmpb
xor
subl
push
lahf
test
cmpsl
arpl
js
ds
inc
sbb
pop
push
rclb
sub
mov
jle
fidivs
or
rclb
gs
rcll
lods
sbb
ljmp
xchg
popf
add
cmp
adc
jecxz
sbb
jmp
xor
add
imul
je
int3
push
jge
loope
jns
push
js
and
fstpl
and
push
das
fs
aas
imul
cmp
jge
dec
jmp
ret
and
aas
sbb
mov
jge
mov
inc
mov
jne
movsb
push
inc
popf
mov
dec
mov
scas
pushf
mov
xor
cs
dec
push
arpl
mov
repz
fistpl
cmp
adc
std
scas
add
cmp
add
or
frstor
jg
out
push
loope
cmp
dec
adc
jp
push
jmp
sub
in
test
push
incl
jg
mov
imul
adc
jmp
repz
push
lea
popf
and
push
pop
loope
inc
imul
ljmp
xchg
cs
xchg
xor
jl
pop
jb
cld
jecxz
aam
faddl
add
push
xchg
xchg
inc
dec
repz
icebp
shl
dec
sub
push
mov
fwait
testb
rorb
hlt
aas
out
push
into
fimull
out
adc
into
pop
and
cli
mov
sub
shlb
sarl
push
stos
gs
mov
pop
xchg
add
xlat
xor
test
push
add
shl
push
push
jg
lds
scas
xor
push
das
imul
pop
divl
mov
dec
pushw
mov
popf
loop
mov
aas
ljmp
fdivs
nop
add
ss
and
out
lahf
int3
pop
and
iret
test
adc
repnz
stos
xor
xchg
or
push
or
add
rorl
push
adc
jmp
out
or
movsb
cmp
sub
mov
pop
dec
inc
pop
and
xlat
popa
jle,pn
lret
punpcklwd
movsb
ja
jmp
repz
nop
inc
xlat
xchg
test
dec
scas
sahf
adc
push
mov
cld
mov
sub
or
jle
scas
sti
cs
push
lods
cmpsb
enter
testl
sub
in
notl
cli
adc
and
daa
pop
jp
enter
mov
pop
scas
and
aam
sbb
cmp
out
xor
adcl
fcompl
or
sbb
jo
outsl
out
jge
mov
pop
inc
pushf
jle
mov
sbb
sbb
sbb
mov
js
push
mov
jle
mov
jecxz
sub
xor
insl
mov
nop
jp
sysret
and
mov
shlb
inc
and
and
or
out
push
pop
sub
push
cltd
push
sbb
subl
pushf
popa
pop
ds
shrl
aaa
les
mov
out
adc
shrb
push
xor
mov
aad
adc
push
sbb
or
push
daa
xor
inc
lods
push
call
movsb
aam
bound
cmp
mov
jle
jp
daa
add
ret
lret
dec
or
orl
das
xchg
mov
mov
shlb
xchg
scas
xor
sub
ss
repnz
sub
mov
mov
jecxz
int3
push
sub
or
sub
mov
and
and
mov
bnd
ja
cmc
andb
sub
rorl
jmp
sti
xor
gs
sbb
dec
adc
das
xor
hlt
pop
inc
pop
push
js
jo
xchg
loope
scas
jnp
mov
cs
xlat
and
sub
pop
pop
test
jno
push
popf
sbb
aad
insb
je
scas
push
xchg
jl
jbe
bts
jl
mov
xchg
xchg
mov
mov
adc
pushf
or
mov
sti
sbb
sub
scas
cmp
mov
shrb
je
iret
dec
jp
cmovb
push
outsb
jne
jmp
or
mov
sub
test
repz
scas
movsb
mov
loop
clc
dec
jo
jle
jne
fnstcw
mov
imul
hlt
xlat
push
mov
jl
gs
pop
xchg
adc
dec
push
mov
xor
jg
jae
push
imul
lods
jno
mov
cs
xor
cmc
fnsave
loope
ret
sbb
adc
sbb
imul
ret
xlat
lret
out
sub
icebp
push
adc
cmpsl
fwait
scas
jg
mov
or
subl
sub
push
fmull
push
repz
push
adc
push
and
addl
daa
jmp
decl
adc
imul
xor
mov
dec
cmp
sbb
dec
xor
pop
sub
mov
or
pop
mov
mov
cmp
xor
imul
repz
mov
push
xor
cmpsb
adc
and
clc
cs
js
xchg
cwtl
and
inc
mov
and
mov
xchg
bnd
and
lahf
scas
pop
mov
fdivs
bound
in
dec
sahf
aas
ljmp
cmp
jno
adc
das
cmc
cwtl
stos
ja
out
out
jnp
push
mov
stos
or
fs
repz
push
xor
sub
loopne
inc
xor
jecxz
js
outsl
ljmp
mov
mov
or
pop
pop
std
cwtl
adc
pop
mov
call
aaa
pushf
out
pusha
dec
dec
push
pop
xlat
or
fcompl
cmp
mov
xchg
push
in
inc
sahf
mov
divl
fcom
pop
inc
add
push
out
inc
dec
push
jg
and
push
jnp
ud0
shlb
jge
scas
jne
mov
sub
or
xchg
cmp
ljmp
or
dec
jo
ljmp
xor
or
stos
pop
ficoms
hlt
mov
jo
mov
enter
mov
pop
xchg
aaa
sbb
mov
stc
les
pop
dec
push
mov
cmp
push
out
mov
jo
lds
in
ret
jg
xorl
scas
ret
aaa
and
lcall
adc
cwtl
les
mov
add
fimull
lea
out
push
in
aam
jecxz
scas
sbb
push
enter
jne
imul
fsts
sbb
xchg
mov
sbb
fld
jb
nop
out
push
es
fisubrl
sub
cmp
inc
out
push
hlt
sbb
or
gs
dec
mov
sub
arpl
cmp
pop
pop
cmp
inc
out
sub
xchg
pop
xor
mov
lea
test
shl
lea
inc
inc
pusha
cmp
test
pop
out
sbb
pop
adc
outsb
nop
scas
mov
fsubrl
out
mov
or
fcmovnu
pushf
push
and
in
bound
jns
gs
add
mov
mov
int
xchg
stos
repz
jmp
adc
arpl
loop
or
in
jae
ret
jecxz
xor
adc
inc
lea
out
insb
push
mov
push
mov
imul
outsl
stc
sbb
xor
ret
insb
repnz
pop
sub
rorb
aad
adc
push
repz
cmp
or
mov
sbb
mov
dec
push
cs
sbb
scas
push
lods
push
outsl
or
scas
lds
mov
mov
and
inc
in
cmp
fdivl
cs
aaa
test
mov
sbb
lret
xchg
fs
xorl
and
push
inc
movb
fs
sub
cli
das
xchg
push
jecxz
lods
dec
pusha
and
mov
push
push
jle
inc
and
mov
pop
pop
andb
jnp
mov
testl
cmp
addl
inc
call
xchg
leave
add
mov
das
xor
and
push
xor
iret
and
xchg
or
sub
pop
scas
mov
add
lds
in
mov
lret
cmc
mov
sub
xlat
mov
es
arpl
xor
or
and
jecxz
sub
mov
sar
pop
push
fdivs
lcall
xchg
les
push
ret
cmp
test
xor
lds
xor
les
mov
inc
jnp
out
ljmp
lods
cmp
and
cmpsl
add
imul
xchg
clc
lcall
and
xchg
shll
loopne
mov
dec
add
out
xor
mov
data16
loop
mov
xorb
orl
cmp
adc
pusha
or
scas
sub
das
out
push
notb
and
mov
add
mov
xchg
add
mov
out
addr16
xlat
inc
mov
xchg
mov
int3
outsl
mov
lds
stos
dec
adc
dec
and
mov
jne
outsl
adc
jmp
xor
push
dec
enter
outsl
inc
mov
stc
in
sub
cmp
outsb
cmpsb
push
out
or
push
mov
daa
dec
adc
xchg
push
mov
repz
js
fsub
sub
cmp
jne
out
outsl
js
shll
jp
push
push
scas
pop
and
stos
movsb
imul
addr16
cmp
xchg
pushl
popa
out
adc
and
pop
mov
or
mov
clc
inc
sub
and
sahf
inc
lods
cmp
mov
mov
test
and
cmp
and
jbe
cmp
xchg
mov
adc
adcl
pop
scas
xor
ljmp
mov
sbb
outsb
cli
jecxz
push
lods
mov
or
adcl
mov
inc
pop
xor
out
add
insl
add
rcrl
shl
pop
outsb
insb
xor
fnstcw
push
sub
push
xor
or
dec
leave
sar
xchg
push
adc
mov
push
add
jmp
shrl
and
lret
repnz
jbe
push
pop
xor
cmp
out
mov
test
xchg
movl
adc
xlat
imul
push
or
cmp
jmp
cmpsb
leave
mov
nop
jo,pn
xor
ja
xchg
mov
dec
pop
out
and
adcl
mov
fs
into
cmp
mov
cmp
adc
sub
fs
xchg
scas
sub
negl
push
fcmovnbe
scas
pop
ja
xorl
enter
add
inc
nop
stos
adc
movsb
mov
rcrb
cs
mov
lods
jmp
into
rolb
test
xor
subb
push
pop
xor
adc
adc
loopne
ret
sub
dec
nop
pop
loopne
fsubrp
xor
fs
lcall
lea
cmp
addr16
jno
push
cmp
push
sub
inc
fidivrs
xchg
ss
add
daa
shrb
mov
pop
mov
subl
cwtl
lahf
xor
push
or
test
xor
and
ja
test
ja
or
push
inc
add
adc
loopne
sbb
adcl
jle
xchg
subb
inc
out
add
shlb
xor
dec
aad
xor
mov
stos
loopne
leave
out
mov
cli
fwait
cmp
or
addb
icebp
sbb
aam
xor
iret
inc
jle
xchg
in
sti
mov
nop
arpl
add
lods
stos
mov
mov
push
out
adc
aas
lods
sahf
fldcw
js
out
leave
xor
jae
mov
lock
outsb
add
pop
hlt
clc
addr16
push
shrl
push
outsl
scas
addb
or
fdivrs
loope
std
pop
dec
and
pop
or
inc
mov
or
mov
push
leave
cmp
pop
scas
mov
pop
push
sahf
aam
cmp
mov
adc
aas
pop
add
aas
ret
test
adc
jecxz
inc
push
sahf
mov
cs
jle
fdivr
inc
mov
cs
lret
pushf
mov
data16
or
adc
push
aas
xchg
mov
mov
add
inc
ljmp
pushl
push
orl
insl
lahf
popf
pop
scas
dec
cmp
idivl
mov
mov
jecxz,pt
mov
bound
fs
mov
sarb
push
sbb
push
ljmp
sub
into
mov
or
data16
fnstsw
rolb
test
jge
popa
push
xor
mov
push
int3
divb
jecxz
add
jmp
sbb
sbb
xorl
arpl
mov
andb
fs
les
scas
pop
xchg
cs
stos
shlb
lods
int
ret
jecxz
aam
in
xor
jg
cmp
scas
cmp
push
mov
push
loopne
sub
pop
pop
add
test
cmp
xor
and
add
mov
pop
rcll
sbb
clc
and
jbe
push
sub
and
iret
push
fcompl
stc
pop
lret
jecxz
adc
and
scas
loopne
push
dec
pop
xor
rolb
add
insl
pop
push
sar
data16
push
xor
shlb
jecxz
sub
arpl
mov
push
add
sahf
test
lods
mov
cmp
or
xorl
in
jle
cmp
mov
cmc
fiaddl
add
cmpsb
shlb
imul
or
adc
pop
adc
or
lds
xchg
mov
push
dec
mov
lret
nop
xor
lret
popf
mov
ret
mov
sbb
mov
xchg
mov
inc
aad
pop
mov
mov
leave
xlat
ret
mov
das
enter
mov
jmp
cmp
cld
cmpl
and
lea
mov
out
je
loopne
pop
jnp
fisubl
sbb
xor
dec
add
jae
decb
into
jb
mov
xchg
out
notb
lea
mov
shrd
sub
lds
cmp
loopne
js
cmp
std
in
xor
leave
cmpsb
add
imul
sbb
sarb
inc
rorb
mov
popa
movsl
pop
rcl
pop
or
in
xchg
and
fildll
xchg
out
jmp
leave
and
cli
test
push
hlt
and
pop
xchg
pop
ss
and
cld
push
rcrl
jbe
ds
loop
inc
test
pop
or
shll
mov
mov
dec
sbb
and
outsb
repz
aam
arpl
pop
adc
ds
setns
mov
or
and
and
sti
adc
decl
daa
mov
xchg
sbb
nop
popa
mov
enter
in
fucomip
xor
and
add
aas
or
mov
cmc
jecxz
push
adc
dec
int
add
scas
xchg
and
jmp
jle
fwait
xor
scas
xor
icebp
mov
jl
mov
mov
mov
out
inc
pop
push
bound
mov
inc
mov
test
popf
cs
adc
in
or
mov
popa
out
adc
movsb
cmp
jno
push
or
pop
xchg
jno
jle
jge
pop
mov
ret
scas
mov
cs
repz
dec
mov
push
scas
or
fiaddl
dec
mov
mov
loop
dec
mov
stos
cmp
lret
int
pop
dec
lods
ss
loopne
outsb
int3
das
insl
mov
adc
inc
les
pop
enter
dec
inc
xchg
and
dec
popa
cmp
push
push
lret
clc
inc
sbb
in
and
cmpsb
es
push
mov
dec
xor
xchg
andl
or
fcompl
fildl
in
mov
push
lods
int
fisubrl
push
sub
aad
pop
and
lea
shlb
loop
jbe
in
pop
insb
repz
and
or
lret
aam
insb
or
adc
pop
push
aaa
mov
ret
test
add
inc
es
push
test
in
insb
add
out
push
mov
mov
push
xor
push
sub
fists
cmpsl
cmp
test
pop
mov
mov
push
pop
push
ret
faddp
lret
mov
inc
jbe
add
mov
mov
int3
jle
pop
enter
mov
or
imull
xor
scas
fsubrl
jp
push
rorb
scas
std
mov
jo
jecxz
jle
negb
adc
shrb
shrb
shrb
add
scas
xchg
push
jbe
dec
dec
lcall
push
sub
addr16
inc
push
or
push
scas
add
in
sub
or
mov
xchg
mov
sbb
pop
push
mov
xor
cmp
jmp
jno
push
mov
adc
arpl
mov
push
pop
xlat
int
out
mov
popf
jg
popa
push
mov
and
or
in
xor
int
test
push
das
cmp
call
inc
jecxz
test
inc
out
pusha
int3
adc
lods
jge
adc
aaa
pop
xchg
adc
cmpsb
mov
fimull
subb
fidivs
xor
add
imul
jg
pop
pop
scas
pusha
and
fidivrl
pop
xchg
pop
dec
repz
scas
adc
push
jg
mov
std
mov
nop
in
adc
in
and
lcall
andb
int3
push
loop
lods
shr
xlat
out
xchg
test
sahf
in
mov
adc
scas
stos
xchg
jg
sbb
scas
out
sbb
filds
or
jle
adc
cltd
cwtl
lea
shrl
sbb
lods
lods
dec
lret
das
or
loop
insb
push
lods
aas
push
xchg
sbb
cmp
leave
xchg
pushf
pushf
in
and
and
or
lret
cld
adc
adc
push
inc
lcall
xor
sti
ja
daa
push
out
cltd
inc
jns
les
xor
repz
add
cmp
js
lret
dec
xchg
mov
jecxz
dec
outsb
mov
repnz
iret
cmpsl
clc
mov
aas
rcrl
movb
cli
pusha
andl
sub
aaa
mov
aam
fisttpll
jae
rorb
mull
add
jecxz
lods
out
int3
cmp
mov
les
cmp
insl
addl
sub
mov
ret
inc
leave
dec
leave
push
xchg
repz
mov
mov
push
jecxz
cmp
cmp
mov
push
movsl
mov
rclb
mov
dec
pop
mov
imul
lret
faddl
notb
aas
and
mov
or
add
add
cmp
out
sbb
pop
push
scas
mov
iret
ret
sub
mov
inc
or
dec
dec
jo
leave
mov
hlt
adc
scas
jle
popa
and
rcrb
les
adc
pop
lock
shrb
xchg
pushf
and
dec
scas
adcl
arpl
cs
jo
lods
rolb
cmpsl
cmpsb
jo
sbb
ficoml
arpl
lock
push
adc
adc
popa
outsb
mov
sub
inc
in
fwait
add
lods
fisubl
scas
fsubrs
out
mov
push
mov
lcall
jecxz
popa
dec
cmp
test
pop
es
out
add
jecxz
push
or
and
or
jle,pt
out
mov
lret
push
xchg
adc
mov
jb
lcall
arpl
outsb
loop
dec
pop
push
lock
test
aas
push
scas
enter
sbb
insb
push
popa
out
adc
scas
push
fwait
test
dec
push
jne
testb
inc
and
test
cmp
stc
divb
pop
xlat
es
cli
fisttpl
mov
mov
or
jno
dec
xor
dec
popf
imul
notb
bound
aad
sub
push
enter
sbb
mov
outsl
mov
outsb
test
out
fistps
push
sub
js
push
and
xchg
test
mov
and
movsl
mov
xlat
mov
push
test
inc
dec
cmp
inc
or
fs
mov
jecxz
movsb
add
dec
adc
cmp
dec
mov
clc
and
or
sbb
push
hlt
rorl
adc
jmp
and
in
stc
rclb
fucom
mov
notl
xor
dec
sub
dec
rcll
xchg
inc
jmp
call
mov
dec
mov
lar
or
adc
lods
cmp
movsl
dec
adc
mov
push
loope
add
cmovne
mov
push
xor
hlt
rcl
add
cmp
daa
scas
stos
in
add
jmp
dec
xchg
add
out
sti
iret
aas
mov
outsb
call
adc
enter
sub
fisubrs
mov
jl
lret
scas
and
dec
jae
int3
mov
repnz
sti
fisttps
xor
sbb
test
jle
push
call
add
cmp
lret
mov
test
inc
xor
xchg
ret
dec
in
pop
out
jle
insb
pop
xchg
je
dec
sar
ds
or
aad
cmpsb
push
outsb
arpl
mov
sbb
lahf
gs
mov
loope
fs
jne
xchg
inc
enter
xchg
mov
push
outsb
jle
xchg
or
cmpsb
jle
hlt
lret
je,pt
jl
mov
xor
xor
aaa
or
dec
or
jmp
push
out
dec
test
mov
imul
inc
lods
mov
fldenv
mov
inc
dec
hlt
and
cmp
int3
jae
fimuls
xchg
std
stc
push
xchg
sbb
add
or
inc
out
xor
adc
das
lds
ret
mov
lds
or
or
sti
dec
subl
jmp
push
addr16
mov
sub
push
arpl
jo
or
pop
mov
bound
xor
sbb
sti
ja
xorl
lea
aam
mov
pop
loop
adc
scas
rolb
cmpsl
out
or
jno
fcoml
lret
adc
mov
lods
pop
push
iret
adc
pop
pop
mov
mov
push
rcrb
push
sarl
jns
dec
inc
shrb
daa
iret
fdivl
cld
add
dec
stos
push
inc
inc
mov
lods
inc
dec
xor
in
and
rclb
mov
scas
movsl
mov
push
mov
and
cs
pop
and
or
add
scas
mov
mov
popf
out
pop
xchg
call
mov
jo
ret
int
add
add
lcall
push
aas
sub
pop
jb
push
adc
das
and
xor
je
push
or
shll
adc
out
jecxz
ret
imul
cmp
push
xchg
mov
daa
test
ljmp
sub
cmp
pop
scas
movsb
mov
mov
and
xchg
mov
pop
cmp
push
xchg
sbb
mov
pop
mov
test
xor
xchg
mov
add
cli
jl
sbb
jns
outsb
in
loope
dec
dec
jecxz
stos
in
push
repz
inc
iret
inc
scas
rcrb
jl
mov
push
mov
cmp
and
and
pop
lret
movsb
stos
test
in
push
jp
repz
mov
rcr
pop
daa
xchg
mov
adc
cwtl
loop
enter
das
ret
cmp
jle
and
jne
fisttps
insl
lods
inc
pop
xchg
lret
mov
sub
scas
xor
out
push
test
aaa
jo
and
dec
add
popa
fs
sar
lahf
add
jecxz
and
pop
je
and
add
push
lea
xchg
pop
add
cmp
sbb
cmp
mov
pop
inc
xchg
inc
leave
jp
mov
inc
shlb
dec
push
pop
rolb
adcl
imul
cmpsl
pop
sahf
stos
enter
lret
rcrb
mov
aas
inc
add
jl
daa
and
xor
xlat
dec
mov
xlat
cmp
imul
xor
cmpsl
insl
lcall
mov
adc
pand
bound
and
dec
lea
jp
mov
flds
mov
icebp
xor
out
clc
iret
sub
aam
cmc
xor
adc
fnsave
scas
cltd
sub
jnp
push
loopne
xor
pop
icebp
sub
mov
cld
pop
or
xchg
mov
sub
cld
popf
push
pushl
pop
or
hlt
jns
xor
loopne
repnz
rcrl
xchg
hlt
jo
sub
mov
pop
mov
mov
jb
jnp
jb
lret
mov
xchg
scas
dec
test
fwait
popf
test
notb
mov
dec
push
out
lods
in
in
and
sbb
adc
push
outsb
shlb
inc
cmp
jmp
cmp
mov
add
jbe
rorb
dec
jp
sub
popf
ja
imul
decb
adc
push
scas
dec
lods
addb
shrb
sahf
inc
inc
xchg
cmp
out
jecxz
or
or
lods
scas
pop
push
pop
scas
cwtl
adc
enter
outsb
ljmp
or
sti
fcompl
das
pop
insb
daa
lock
push
out
call
repz
clc
mull
rorl
inc
add
pop
mov
push
pop
push
outsl
add
leave
icebp
xor
mov
pop
repz
sbb
jno
test
decb
mov
dec
pop
mov
mov
testb
mov
mov
dec
and
lahf
inc
clc
push
sub
fsubs
mov
jae
pop
jl
mov
mov
adc
lods
mov
jl
loopne
inc
clc
bound
adc
or
in
cltd
or
mov
inc
in
xor
arpl
mov
push
aaa
sbb
xchg
in
int3
loop
addr16
fildll
scas
xorb
jb
adc
sahf
lea
ror
out
mov
and
pusha
adc
push
push
in
pop
xchg
mov
push
push
sahf
insl
repnz
cmp
ds
inc
push
test
aas
jbe
xor
push
dec
cmp
shll
and
insb
xor
push
mov
xchg
cmp
cmp
push
lahf
adc
jne
loopne
repz
xor
push
jmp
sbb
add
or
in
shl
scas
inc
adc
inc
mov
add
lock
popf
mov
jle
repz
stos
outsl
punpckhdq
push
es
call
xor
enter
pusha
adc
xchg
lret
ja
rcrb
int3
scas
and
or
inc
mov
leave
sub
xchg
sbb
xchg
in
jg
adc
data16
xchg
push
adc
pop
pushf
mov
shl
mov
or
pusha
push
sbb
inc
rorl
ficoms
sub
mov
add
es
jb
out
mov
test
lcall
mov
cmp
mov
sti
pop
nop
vpmacsdql
pop
enter
sbb
sbb
and
mov
push
cmovp
cld
push
push
mov
jle
imul
pop
loope
mov
or
push
scas
outsb
popa
aad
xor
push
pop
push
push
mov
cmp
adcb
iret
sbb
pop
push
stos
ljmp
sub
xchg
mov
stc
or
imul
fcoml
mov
lods
fpatan
mov
jg
push
pushf
enter
into
push
fcoms
push
jmp
pushf
call
or
xor
arpl
repz
jle
xor
push
lods
fs
sarl
push
add
arpl
repnz
xchg
movsb
testl
lea
sub
cmp
out
fsubl
mov
bound
mov
pop
scas
sub
lods
pop
jb
outsl
je
fcoml
dec
push
dec
movsb
sub
jae
sub
xorl
or
jbe
lods
in
lret
js
ja
pushf
inc
shrb
jo
push
xor
push
cmpsb
test
pop
mov
scas
push
add
rcl
cmp
dec
mov
adc
mov
xor
out
into
adc
or
mov
pop
dec
cmp
gs
lret
stc
mov
mov
push
les
adc
popl
in
into
fs
mov
pushf
into
xchg
stc
aaa
sbb
cld
fdivrl
sbb
or
subl
inc
mov
inc
aam
stc
cmp
jne
jb
scas
out
cltd
and
push
mov
repz
lahf
fldt
dec
sbb
pop
inc
mov
push
fwait
sbb
jge
push
sbb
das
in
pop
imul
popf
shll
pop
mov
fisubs
xchg
and
std
in
sub
js
call
popa
cmp
popf
outsl
and
data16
insb
adc
imul
sub
adc
mov
or
sbb
xchg
dec
mov
sub
insb
add
movsl
push
sbb
jns
cltd
aas
sbb
roll
cmp
fdivrl
sbb
xchg
imul
or
js
stos
out
jb,pt
dec
mov
aad
icebp
and
mov
jecxz
movsb
sbb
mov
loop
cmp
out
add
mov
paddusw
lea
inc
or
jle
sarl
and
ljmp
add
mov
stos
push
mov
sahf
das
xchg
push
jae
insb
test
in
in
jae
adc
mov
clc
iret
repz
scas
js
and
in
aaa
fs
xchg
enter
ret
fwait
dec
jecxz
mov
arpl
jno
or
mov
movsl
outsb
insb
scas
push
aaa
xchg
dec
add
pushl
iret
add
sub
ds
sub
mov
lcall
into
addr16
nop
mov
adc
pop
test
cwtl
cmp
lahf
push
out
adcl
mov
fdivl
addr16
dec
or
xor
mov
int3
cmp
push
aas
mov
sbbl
adc
lret
push
xlat
out
jno
lods
pop
rclb
mov
lods
add
mov
mov
js
jle
mov
push
es
insl
repz
cmp
jns
and
sub
pop
xchg
mov
ja
dec
mov
mov
push
jne
out
adc
push
xchg
mov
insl
or
lahf
and
ror
addb
xchg
adc
xchg
js
mov
test
and
pop
cwtl
sub
push
imul
mov
xlat
jg
cs
stos
das
xlat
dec
push
pop
out
mov
sub
xchg
incl
xor
mov
inc
mov
daa
ffreep
xor
xor
pop
xchg
mov
mov
int
lret
in
repnz
push
test
push
mov
add
mov
clc
stos
sub
xchg
sub
or
inc
jle
sub
adc
lahf
xchg
mov
sbb
rolb
rorl
inc
test
push
xor
mov
jnp
push
xchg
or
and
and
pop
push
push
scas
imul
into
sub
cltd
jno
pushf
cmpsb
dec
xchg
sbb
sbb
fwait
push
jmp
pop
lcall
cmp
mov
movb
dec
adc
je
push
ljmp
jae
cs
outsb
push
push
aad
repz
ljmp
scas
xchg
adc
push
pushf
out
jecxz
push
jle
sti
mov
adc
mov
pop
cmp
mov
add
cli
jge
xchg
cmc
or
scas
dec
xchg
lahf
add
push
leave
push
xor
lea
jmp
out
fisttpl
push
inc
aad
ss
dec
push
cmp
daa
sahf
cmc
pop
push
xchg
lret
or
sub
outsb
int3
pop
adcl
enter
insb
jp
mov
cmp
fucomp
sbb
dec
scas
dec
sysret
sahf
inc
push
lods
lea
xor
adc
cmp
ret
jbe
or
dec
negl
movl
hlt
test
cmpsl
mov
leave
aad
xorl
sarb
add
pop
les
outsb
adc
xchg
mov
fyl2x
pop
mov
cmc
xor
mov
shll
xchg
pop
test
push
insb
rorb
mov
roll
sub
push
lahf
mov
out
pop
and
shll
cmp
and
out
pop
and
fadd
xor
xor
jecxz
outsb
mov
in
ret
out
aas
mov
movsl
imul
dec
ret
jle
push
push
pusha
std
dec
ja
push
mov
mov
push
nop
pop
in
xor
int3
xchg
mov
push
lods
xor
fsubrp
cltd
jno
lods
sub
fstpl
pushf
sar
shlb
movsb
sbb
push
push
adcl
sahf
out
or
add
push
dec
push
mov
pop
scas
arpl
xor
jno
cmpsb
xchg
idivb
push
decl
push
mov
or
outsl
notl
xchg
mov
out
cmp
mov
push
and
push
enter
mov
outsl
fistl
xchg
rcl
leave
outsb
nop
and
add
lret
dec
lret
dec
loope
pushw
repz
mov
outsb
out
mov
cmp
mov
or
imul
movsb
xchg
push
out
std
xor
push
pop
cmpsl
cs
in
lock
and
mov
lea
cli
inc
cmpsl
inc
pop
lds
and
das
shlb
test
cmp
mov
scas
jo
jo
sub
das
push
pop
add
mov
out
shrl
mov
insl
push
push
sbb
lret
push
movsb
pop
notl
inc
push
xchg
xor
jle
add
mov
add
popa
stos
and
add
or
stos
push
scas
enter
pop
stos
mov
mov
lods
outsl
cmp
lods
dec
pop
enter
push
and
out
adc
inc
daa
dec
xor
aad
cld
xchg
xor
or
rclb
add
cmp
repnz
popf
mov
add
dec
stos
cmpsl
xchg
vunpckhps
in
cmp
add
mov
out
and
pop
aaa
cs
sbb
sar
xor
jnp
rclb
mov
enter
jecxz
push
mov
push
xor
xor
fidivl
or
add
pop
pop
jne
mov
pushf
out
and
cmp
cwtl
push
fldenv
repnz
inc
loope
xor
ljmp
push
pusha
cli
cmp
xchg
mov
ljmp
push
jecxz
sbb
imul
inc
mov
push
pusha
nop
notl
and
add
icebp
js
out
pop
out
and
pop
js
addl
jecxz
mov
jne
sbb
fsubrs
sahf
jle
ss
test
adc
shrl
pop
jle
lds
cmp
lret
jno
cmpsb
push
cmpsl
aam
dec
mov
xorl
roll
xor
cld
jae
int
inc
test
inc
mov
rcll
lods
cmp
outsl
sub
cwtl
fcoms
pop
bound
push
int3
push
mov
cwtl
sbb
movsl
or
aas
cmp
mov
scas
rcrl
stos
notb
loope
mov
paddusw
mov
push
push
repz
cmp
int
dec
mov
sar
inc
dec
std
out
push
inc
call
cmp
stc
icebp
mov
mov
mov
inc
pop
pop
arpl
scas
outsb
mov
jnp
aad
aam
pop
stc
jmp
shrl
cmp
test
lret
rorl
cmpsb
xchg
mov
push
pop
pop
aam
popf
cmp
in
xor
push
scas
bound
mov
fmull
rcrb
xchg
add
pop
push
test
mov
lods
aaa
pop
shll
mov
pop
scas
pusha
dec
out
nop
bound
jge
jecxz
lock
adc
push
andl
adc
adcl
mov
xor
and
xchg
arpl
jno
pop
cmc
xor
scas
pop
es
dec
pop
push
adc
sub
fdivrl
inc
mov
sub
xor
pop
lcall
cmp
add
cmp
iret
popa
xlat
sbbl
and
outsl
pop
mov
jl
or
xor
jmp
int
fmull
push
std
scas
jb
inc
gs
jg
dec
and
mov
and
pop
dec
repz
outsl
jecxz
fisttpll
mov
rcr
xchg
sar
lret
jmp
mov
ret
sub
push
push
lods
addb
xchg
pop
imul
loope
shlb
inc
pop
or
sti
dec
lods
cmp
inc
jae
leave
xor
xchg
xchg
or
adc
les
mov
insb
in
imull
dec
mov
aaa
sbb
movsb
adc
outsb
les
xchg
cmpsl
mov
inc
pop
test
jb
cmp
cmp
pop
inc
and
jb
icebp
mov
dec
sbb
xchg
jl
mov
xor
mov
pop
cmp
pop
std
roll
or
cli
mov
push
adcb
pop
mov
push
lret
jo
mov
inc
outsl
dec
push
outsw
lock
aaa
aas
push
movsl
or
lods
out
adc
aad
sbb
mov
mov
fisubrs
push
sbb
dec
out
in
outsl
inc
mov
mov
cmp
insb
neg
mov
or
lods
les
pop
lds
rorb
and
insb
in
jl
aaa
adc
xor
cmp
dec
jmp
push
or
mov
pop
or
aaa
sub
adc
add
pop
lods
test
lret
popf
xor
imul
add
mov
enter
fsubrp
aaa
dec
dec
in
lock
jo
ret
add
clc
inc
mov
ja
xchg
loopne
test
imul
addr16
testl
and
mov
mov
scas
jb
cmpsb
jo
lret
push
mov
add
test
or
std
or
mov
int
pop
mov
divl
cltd
test
stc
jg
mov
scas
into
sti
stc
bound
scas
or
clc
sbb
lea
std
xchg
fdivl
mov
mov
pushf
scas
scas
mov
xchg
push
dec
or
mov
and
mov
daa
xlat
rclb
adc
mov
cmp
cmp
xchg
into
movsl
pop
fstpt
lock
paddusw
mov
push
insb
imul
inc
sahf
sbb
adc
lods
mov
aaa
xor
lock
or
jb
jle
data16
loope
inc
push
jns
inc
jne
and
push
mov
sbb
xlat
imul
in
and
out
adc
cmp
pop
adc
fistps
and
jp
scas
inc
push
sarl
clc
fwait
xchg
or
add
cmp
cmp
fdivl
pushf
loopne
dec
pop
and
std
insl
mov
lcall
ss
cld
sub
xor
push
imul
xchg
ret
jbe
sub
pop
aam
and
cmovbe
int3
loop
imull
jecxz
sti
loope
xchg
pop
cmp
sbbb
push
sub
std
addr16
adc
sbb
mov
xor
push
cmp
push
scas
aad
cmpsl
xor
cmp
pop
neg
imul
sarl
mov
jne
gs
mov
out
imul
rorb
cmp
ds
ja
lods
fistps
xor
pop
cmp
cmpsl
jmp
clc
imul
adc
sbb
sub
push
sub
xor
mov
enter
and
leave
mov
jmp
mov
sbb
and
sbb
enter
outsl
mov
add
cli
rcll
push
jne
aas
jle
xlat
aaa
add
notl
jnp
aam
jb
dec
pop
es
int3
dec
xchg
jle
fucomi
ljmp
jecxz
cmc
sarl
or
dec
movsl
xchg
test
orl
jne
clc
imul
movsl
into
and
xor
xchg
outsb
mov
and
nop
mov
imul
dec
imul
jo
mov
pop
andl
shr
mov
fistpl
lret
or
lea
cmp
jbe
lahf
sub
popa
addb
mov
pop
ljmp
stc
ret
or
dec
cmp
mov
push
sar
enter
lea
xchg
fwait
roll
push
dec
adc
addr16
enter
ds
enter
insb
cmp
es
sbb
sub
ss
xor
mov
mov
mov
jg
das
ljmp
jae
cs
pop
fs
hlt
and
dec
bound
fbld
add
mov
bnd
aaa
sbb
jmp
into
xchg
dec
test
mov
rcrl
test
adc
cmc
out
mov
inc
mov
scas
xor
push
pop
add
js
pop
lcall
cwtl
push
out
stos
mov
lea
mov
pushl
xor
lcall
dec
out
xchg
andb
movsb
fcompl
lods
jp
mov
sub
ss
mov
test
test
lahf
in
and
mov
push
sbb
rolb
pop
xchg
pop
test
mov
add
out
jge
dec
lea
dec
cmp
xor
lods
stc
mov
pop
and
xchg
jno
pushf
jmp
push
adc
sti
popf
cmp
push
push
subb
imul
mov
lcall
or
out
adc
push
pop
jmp
fnstcw
loop
leave
mov
bound
in
inc
enter
adc
dec
in
adc
push
push
dec
mov
mov
adc
lods
mov
mov
xor
shll
in
push
push
mov
bound
add
xor
sbb
or
add
test
mov
int3
iret
in
icebp
lods
add
xchg
mov
pop
data16
xlat
rcrl
int3
cmovs
mov
clc
jne
cmp
dec
fs
iret
lea
xchg
adc
out
or
jle
lar
mov
adc
jg
arpl
adc
jo
push
xchg
push
iret
xchg
mov
sbb
out
cmpsl
dec
inc
mov
mov
sbb
aad
xchg
rcl
and
push
into
pop
sbb
adc
sub
pop
inc
es
inc
inc
inc
fcoml
and
push
repnz
andl
fldenv
mov
lahf
and
xor
int
iret
add
jne
xlat
shlb
loopne
mov
cmp
pop
cmp
mov
int3
inc
push
mov
sub
sbb
or
aaa
ret
mov
pop
lea
das
cmpb
adc
cmp
insb
loope
xchg
test
or
push
testl
push
dec
sti
sti
xchg
cs
cli
sbb
push
call
mov
jbe
movsl
nop
inc
inc
lea
push
push
movsl
xor
out
ljmp
push
int3
das
psllq
repnz
call
sbb
in
mov
adc
mov
pop
ret
das
addr16
sahf
push
cli
cli
mov
outsb
std
repz
mov
popa
shll
pcmpgtw
jge
push
fwait
push
call
adc
cld
or
push
mov
jge
mov
and
pop
pop
enter
sarb
xor
mov
sbb
mov
mov
push
icebp
jmp
cmp
mov
sub
comiss
mov
imull
or
fsts
xor
frstor
int
jmp
sbb
dec
jle
pop
scas
shlb
pop
push
mov
das
mov
push
lods
sub
jb
push
scas
stc
mov
inc
lods
adc
ret
mov
pop
xchg
aad
mov
add
inc
gs
dec
and
mov
out
cmp
pushf
fmuls
fmulp
xchg
scas
adc
lods
rol
loop
add
xor
stc
mov
push
scas
enter
jbe
int
cmp
repz
inc
mov
push
sbb
mov
ds
push
or
imul
mov
insb
mov
mov
fnstsw
or
jmp
xor
mov
les
scas
faddl
add
shll
lea
xchg
out
insl
push
push
push
and
ja
cmovl
repnz
pop
call
adc
sbb
push
dec
mov
and
pushf
lods
lods
jno,pn
push
scas
mov
sbb
sub
lods
sub
xor
popf
insl
and
and
scas
dec
sub
adcl
mov
movsb
cmp
adc
outsl
cltd
pop
ret
cld
push
xchg
in
pop
popa
sbb
fistl
cmp
sub
inc
xchg
into
cs
test
fistps
outsb
push
lea
push
jl
popf
dec
lods
jg
fsubl
pop
dec
dec
lahf
adc
mov
insb
sbb
popf
jle
pop
mov
outsb
aad
insl
or
mov
pushf
out
or
push
nop
sub
scas
cmpsb
sbb
das
aam
outsl
filds
jno
xor
mov
mov
adc
and
xchg
jl,pn
sbb
pop
insl
push
cmp
int
pusha
push
std
xor
jl
xor
aas
repnz
mov
outsl
and
insb
and
fimuls
and
pop
mov
xor
xlat
dec
inc
lods
jno
mov
push
xor
das
cmp
add
mov
jge
repnz
lods
push
cs
insb
test
mov
or
push
lahf
dec
mov
xor
sub
aam
fmuls
scas
and
in
sub
mov
movsb
pop
xor
out
in
sbb
lock
popf
jno
jo
and
arpl
or
dec
sbb
daa
xchg
in
cmovge
ror
insb
js
sub
popl
ret
mov
xor
mov
push
int
cmp
lahf
imul
cmp
adc
adcl
int
lret
dec
popa
lods
mov
inc
mov
inc
scas
mov
sbb
xorb
enter
xor
int3
scas
pop
add
xlat
out
jne
sahf
xor
bnd
jle
mulb
xchg
push
rclb
push
dec
jp
fstpt
pop
jl
adc
ds
jle
out
repz
sbb
sti
xchg
testl
add
or
es
mov
xor
jle
cs
add
loop
and
cmp
inc
popa
pop
mov
xchg
push
adc
sub
dec
pop
out
and
mov
adc
shrl
mov
mov
cmpsl
xlat
jns
mov
push
adc
test
and
sti
outsl
int3
dec
mov
sbb
repz
pop
dec
jne
cmc
sbb
add
jae
or
jl
and
jg
inc
add
pop
fs
cmp
sarb
out
push
outsl
xchg
popa
push
lods
test
lea
repz
in
mov
or
xchg
pop
add
inc
ljmp
stos
mov
sub
lods
pop
mov
aad
imul
mov
jne
cmp
push
sub
adc
inc
adc
or
movsl
dec
outsb
cmp
scas
test
fidivrl
lods
and
lods
fidivs
jae
shll
ja
adc
mov
int3
mov
mov
mov
repnz
push
mov
or
pop
lcall
sub
xor
imul
shlb
lahf
xlat
into
xor
add
filds
jmp
aas
mov
cmp
mov
test
jecxz
fistps
and
insb
dec
in
pop
sub
push
das
jo
cmp
lcall
jp
in
sub
xchg
sahf
jl
jae
shlb
jmp
adc
adc
cld
cmp
sub
sbbl
insb
dec
or
adc
fldt
push
sahf
je
dec
sub
insb
cmpsb
sub
push
pop
fcmovne
ret
mov
dec
dec
xor
pop
ds
dec
fmull
dec
aas
repnz
push
insb
or
adc
scas
sub
nop
pop
sub
xor
nop
dec
lods
fldl
and
cmp
push
stc
int3
sub
pop
pop
pop
fstpt
lock
adc
mov
mov
out
xor
test
aad
jl
pop
dec
sub
daa
adc
mov
mov
sub
mov
into
das
out
inc
scas
jo
xor
xchg
push
lods
xchg
jle
pop
dec
jl
cmp
nop
out
xor
push
xchg
mov
mov
rorb
outsl
push
mov
es
outsb
pop
mov
xchg
in
pop
das
lods
lods
pop
ds
pushf
in
loopne
inc
insl
xor
dec
mov
dec
out
adc
insl
and
jl
movsb
mov
cmp
std
cmp
jge
push
jno
adc
pop
lock
movsl
in
push
int
lods
push
jbe
xchg
mov
sbb
pop
push
jl
sub
cmp
sub
lods
int
sub
cmp
lea
insl
add
and
lods
cmp
pushf
jle
xor
pop
adc
push
mov
fcomps
jge
lods
inc
push
lods
mov
lahf
mov
push
fsubrl
aad
incb
pop
cld
push
aas
mov
dec
dec
adc
cs
sub
pop
lea
push
pop
jle
into
pop
int3
and
pop
adc
std
mov
hlt
push
sbb
xchg
or
aaa
in
adc
and
ja
scas
out
bswap
xchg
jno
add
fsubrl
inc
repz
scas
sbb
insl
pop
adc
sti
cmp
xchg
pop
ficompl
jb
jmp
xchg
jo
jne
lahf
and
fsubr
scas
leave
mov
cwtl
mov
adc
add
out
jns
dec
popa
cs
inc
outsl
scas
pop
adc
iret
jge
push
pushl
sar
xor
jno
sub
adc
cli
and
jl
cmp
jecxz
movsl
xor
mov
sub
cmpl
outsl
enter
ret
or
jnp
mov
rorl
jmp
repnz
cli
cwtl
stos
mov
in
pop
jl
fdivrs
imul
das
cld
loop
xor
sti
jae
jmp
xor
and
ror
add
dec
not
push
decl
add
rcrb
mov
enter
movq
mov
and
mov
jmp
xchg
lret
repnz
lcall
in
rolb
cmc
cmpsb
cs
mov
int3
test
push
xor
movsl
add
adc
aam
mov
ret
push
fnstenv
cmp
jg
xchg
lahf
xchg
repz
push
mov
cmpl
add
ds
xchg
ljmp
jmp
mov
push
push
scas
jnp
lds
and
adc
xchg
sar
fiaddl
mov
addl
imul
sub
mov
xor
dec
cli
call
xchg
xor
cli
inc
push
fsubrl
sbb
fucomip
dec
rorb
and
popf
mov
cmp
jb
and
inc
sbb
das
pop
int3
scas
gs
or
nop
ljmp
aas
pop
push
push
xor
sub
bound
xor
add
pop
push
into
push
lods
aas
orb
adc
jmp
inc
je
loop
int3
or
rorl
lock
mov
mov
push
xor
popa
xchg
test
movsl
ret
mov
push
add
cwtl
or
mov
jbe
sbb
adc
in
incb
pop
scas
jecxz
dec
test
insl
add
jle
inc
lea
divl
inc
sub
inc
xchg
xor
addr16
and
push
push
mov
outsl
add
scas
in
bound
dec
mov
scas
cmp
aam
mov
pop
jne
xchg
jecxz
ss
ficoml
sbb
lret
clc
xchg
jns
sbb
jmp
cmp
nop
jb
rcrl
mov
aaa
pushf
ljmp
test
or
and
mov
cmp
fimuls
mov
outsl
push
and
push
jmp
dec
sbb
or
mov
jecxz
push
push
hlt
in
rcl
dec
add
adcl
mov
sub
sti
stos
out
popf
jbe
insl
out
pop
scas
and
adc
popa
sahf
add
fdivrl
inc
stc
jae
clc
mov
adc
mov
and
add
xchg
xchg
cmp
cmpsl
inc
push
pop
lea
imul
cli
dec
lea
jno
dec
mov
mov
std
cmp
mov
sub
aad
push
jne
notb
sbb
sbb
xlat
insb
add
ja
dec
dec
xchg
jns
add
push
rcl
loop
sbb
jle
insb
in
int3
or
es
mov
enter
sbb
pop
jo
test
in
cmpsl
dec
das
jecxz
scas
into
je
jmp
js
decb
push
jnp
test
sub
cs
insl
insb
sub
inc
pop
adcb
movsl
cmp
xchg
pop
lea
dec
fldt
incb
xchg
add
movsl
repnz
iret
dec
mov
xchg
in
xchg
mov
in
xor
sti
lock
and
scas
enter
negl
fs
int3
xor
cmpb
xlat
push
mov
rcrb
in
push
orb
push
jg
sbb
sahf
jnp
mov
mov
mov
movsl
in
fbstp
or
pop
pop
jl
pop
pop
inc
xor
sub
ss
pop
mov
frstor
in
incl
push
mov
add
stos
push
mov
lahf
cs
pop
cli
rcll
in
mov
push
mov
pop
mov
iret
repz
adc
lea
scas
dec
pop
add
jnp
jne
cmpsb
jge
sbb
ja
rclb
and
test
loop
and
push
or
imul
push
jb
pop
jle
push
xlat
scas
cmp
push
adc
jecxz
into
dec
or
out
push
inc
jecxz
push
test
fdivl
stos
cmp
cs
mov
sbb
aas
xchg
mov
imul
cld
mov
mov
aam
sub
jmp
sbb
cs
jns
cwtl
pop
cmp
sti
jb
cmc
push
mov
mov
jb
xor
aam
push
sub
jnp
adc
push
test
scas
in
ficompl
push
jae
sub
nop
add
xchg
mov
xor
imul
mov
pop
or
mov
daa
xor
jno
scas
int3
cmp
sahf
aam
jbe
aaa
pop
fldcw
and
idivl
pop
scas
cltd
hlt
sbb
xchg
xor
aam
call
pop
jmp
ljmp
pop
xchg
jns
jmp
fistpl
fdivrl
cs
push
jp
pop
and
notl
shrl
xchg
cli
pop
xor
decl
adc
xor
jmp
cmp
gs
or
mov
dec
mov
in
jecxz
negl
sbb
mov
xor
cmpsb
dec
test
add
sub
push
jae
jmp
jae
nop
inc
mov
loop
arpl
lods
xchg
mov
jg
mov
push
in
pop
push
mov
mov
movsl
sbb
shrb
sub
add
pop
sbb
dec
jae
pushf
scas
inc
mov
adc
dec
popf
lea
mov
mov
scas
shrd
push
aam
call
jae
push
lret
insb
in
bnd
movsb
std
mov
aam
repz
stos
sbb
dec
push
xorb
lea
les
adc
mov
mov
mov
adc
es
mov
jecxz
aaa
into
push
mov
in
mov
adc
push
in
gs
xor
icebp
imul
xor
cmp
lea
fdivl
fadds
inc
roll
cmp
rolb
rcl
and
les
add
hlt
aad
cwtl
sahf
xchg
mov
add
push
mov
push
add
mov
dec
add
icebp
aam
lods
movsb
jl
cmp
mov
fldenv
inc
push
loop
movsl
xorl
push
cmc
xchg
repnz
in
cmp
loope
adc
rdpmc
sub
out
xlat
sub
xchg
add
push
sbb
loop
pop
and
mov
jbe
jae
mov
adc
sbb
cs
adc
xchg
and
dec
arpl
push
fprem
scas
bound
in
test
inc
repz
mov
xor
adc
outsb
and
out
mov
xchg
lods
pop
and
aad
lahf
jae
sbb
stos
sbb
mov
lea
daa
mov
scas
jg
arpl
inc
cmovg
jmp
mov
nop
pop
sbb
flds
push
xor
xlat
mov
mov
insl
mov
mov
jecxz
or
out
iret
push
call
icebp
pop
push
cmp
outsb
push
and
gs
jbe
mov
cmc
bound
pop
arpl
add
jecxz
pop
lret
ja
sub
push
xor
mov
jp
aad
mov
or
aam
rcr
mov
loop
data16
hlt
xlat
ret
xchg
test
cmp
push
clc
mov
fcoml
mov
mov
pause
aaa
rolb
rolb
sbb
out
sahf
insl
add
pushf
pushw
mov
lods
jno
pop
inc
es
stos
into
jno
mov
out
imul
cmp
mov
adc
repz
es
inc
fisubrs
mov
cli
cmp
test
push
jg
adc
mov
adc
pop
aaa
jb
sub
dec
push
imul
push
ror
lock
or
jmp
lea
inc
or
sub
xchg
dec
stos
scas
daa
rcll
jmp
mov
cltd
inc
adc
cmc
pop
cmp
jbe
lods
dec
repz
aad
insl
imul
test
leave
stos
rcr
ss
sbb
adc
jae
or
call
mov
daa
pop
dec
fs
push
mov
jbe
ret
clc
lahf
xchg
xchg
xchg
arpl
lods
ljmp
push
scas
or
adc
cld
mov
enter
add
pop
pusha
mov
movsb
push
pop
jbe
cmc
test
add
adc
cmp
mov
push
push
lods
sbb
jne
ja
sub
repz
popa
sub
or
ja
sbb
adc
dec
inc
aam
pusha
jle
cmpsl
jne
and
xchg
ljmp
mov
mov
orl
cwtl
or
outsl
test
lds
xchg
push
lahf
push
outsl
push
subb
mov
out
pop
popa
mov
and
adc
in
mov
scas
mov
sbb
xor
mov
addr16
dec
jl
cmp
push
push
and
int
jbe
cs
rol
or
outsb
push
and
mov
mov
add
mov
push
repnz
xor
lret
jmp
sub
mov
pop
iret
repz
xchg
add
fdiv
out
addr16
jp
push
mov
lods
inc
cmp
repz
pop
sub
adc
mov
iret
ret
filds
comiss
sbb
jl
jle
enter
mov
daa
ret
xor
xlat
and
cs
xor
xor
inc
inc
movhps
movsl
addr16
inc
adc
aaa
lea
push
rorb
mov
lods
test
cltd
in
jle
icebp
xlat
adc
mov
int
pop
lods
dec
in
mov
repnz
lcall
or
lods
mov
inc
xchg
out
add
mov
inc
xor
xor
push
loop
stos
lea
cmp
ret
and
arpl
popf
inc
ljmp
mov
pop
fcoml
jecxz
dec
ja
push
add
sub
clc
cmpsb
out
gs
mov
adc
scas
jb
jecxz
daa
jmp
push
cmp
xor
add
or
mov
das
pop
hlt
sub
mov
das
adc
loope
sti
das
call
mov
or
jmp
dec
fs
jb
cmp
les
xchg
imul
sub
mov
mov
xor
xchg
or
and
lods
hlt
outsl
popa
push
push
adc
imul
or
insb
push
sub
ljmp
pop
ja
mov
fstpl
mov
scas
gs
inc
pop
addr16
aad
add
iret
sub
dec
adc
sbb
xchg
cli
xor
and
inc
pushf
push
or
jp
out
repz
push
mov
push
jmp
inc
cld
mov
mov
scas
xchg
fxch
fmul
mov
xor
shll
mov
jecxz
or
xor
cmp
mov
mov
xor
mov
xor
add
jns
sti
inc
loopne
pop
mov
mov
or
xor
outsb
mov
mov
dec
inc
aad
and
push
gs
xchg
fs
stos
adc
push
or
mov
or
dec
mov
xchg
rcl
mov
icebp
sti
ss
ljmp
sub
xlat
xchg
jecxz
pop
lahf
xor
popf
fs
dec
pop
mov
lahf
scas
into
dec
pop
std
push
xlat
nop
mov
lods
insl
fadd
mov
pop
jb
movsb
dec
or
imul
xor
sbb
lods
adc
add
mov
xor
sub
les
test
adc
xchg
clc
or
sbb
aad
or
sbb
sarb
hlt
sub
mov
outsl
add
xor
push
movsl
lahf
gs
or
shlb
sub
inc
stos
lea
nop
imul
pop
jecxz
jl
xor
adc
mov
mov
loopne
xchg
cmp
rcll
popf
cmp
add
add
mov
xlat
sub
mov
int3
jl
pop
xor
ja
mov
test
sbb
xchg
mov
cs
enter
hlt
out
xor
mov
jge
inc
mov
sub
popf
mov
ljmp
lea
imull
add
outsb
mov
aad
push
mov
mov
xor
int
jb
lods
mov
sbb
ret
faddl
pop
dec
dec
push
mov
pop
adc
gs
imul
push
dec
dec
or
out
les
jge
xor
movb
out
ret
pop
aaa
repz
ss
aas
fiaddl
jo
shlb
push
out
cmp
lea
pop
push
cmpsl
push
or
bound
cli
sbb
add
lods
stos
mov
lock
or
and
add
xchg
out
or
push
and
aaa
sub
lock
test
enter
jno
repz
xorl
xor
fimuls
pop
stc
dec
scas
pop
popa
cli
xor
add
cmp
jle
mov
stos
jecxz
pop
punpckhbw
out
jns
out
jecxz
adc
sub
adc
movl
lret
sbb
cmpsl
cmp
fistpl
testb
scas
inc
cmp
popf
test
sbb
repz
mov
push
in
dec
sub
fildl
jecxz
arpl
dec
mov
jnp
push
jns
add
lods
gs
jo
mov
push
sbb
adc
shl
movq
sbb
rolb
lret
loop
shr
sbb
cmp
and
mov
lods
rep
scas
ja
scas
push
dec
int
hlt
sub
lea
cmp
adc
sti
loope
push
sub
cmp
les
xor
xlat
mov
pop
pop
xchg
cs
test
mov
or
int3
outsl
jb
xor
cmp
inc
into
sub
pop
mov
mov
popa
leave
push
jl
lahf
clc
scas
xor
nop
imul
mov
jg
xor
ret
push
cmp
sbb
je
pminsw
jp
testb
mov
jns
loopne
or
adc
dec
mov
rolb
mov
paddd
pop
out
mov
rcrl
es
clc
es
enter
addr16
or
das
jle
scas
daa
clc
mov
mov
mov
xor
cmp
lds
pop
cmpb
add
lods
mov
call
lahf
mov
addb
adc
cltd
adc
lods
mov
out
pop
jae
and
jmp
push
jecxz
mov
notl
std
out
jecxz
pop
and
aam
cmp
pop
dec
insb
fs
movsl
pop
mov
fwait
cmpsb
push
sbbl
in
mov
int3
hlt
mov
mov
shrb
stos
inc
sub
dec
sub
subb
subb
iret
xor
push
xor
scas
mov
daa
mov
xor
pop
fistps
push
jl
add
pushf
mov
arpl
imul
mov
xchg
ret
jl
out
shll
cld
add
repnz
test
adcb
xlat
scas
into
add
andb
push
cs
lods
pop
xor
rcrl
mov
sbb
out
js
lock
mov
jne
bound
jp
jmp
inc
test
scas
mov
outsl
adc
mov
sbb
mov
bswap
das
lods
mov
adc
sti
lret
mov
mov
das
or
lock
popf
jecxz
lea
jne
sbb
sahf
int
fildll
mov
out
aaa
sbb
loopne
imul
xor
outsl
cmpl
fwait
xor
sarl
mov
xchg
push
push
scas
xor
arpl
mov
and
mov
or
jp
divl
or
xchg
stos
jno
and
push
shlb
sub
jns
dec
cmp
jge
or
add
jecxz
jmp
nop
jb
pop
xor
mov
push
xlat
loopne
xor
int
scas
cld
fisttps
add
xchg
lahf
outsb
mov
outsl
or
test
mov
cmp
das
or
sub
shrb
test
ds
in
inc
bound
xor
sub
and
cmpl
mov
xor
pop
mov
pop
out
or
and
addr16
out
cld
mov
fmull
jb
jg
sti
int3
stos
mov
push
cmp
xor
cmp
cmp
dec
or
les
push
xchg
or
enter
nop
or
sub
jae
add
das
xor
push
adc
jp
mov
mov
sbb
aam
popf
aad
add
push
cmc
mov
in
dec
leave
push
cltd
test
mov
add
push
jecxz
push
aaa
jne
out
push
scas
repz
pop
sub
jno
pop
and
dec
cmp
push
es
lea
mov
rclb
xor
mov
orb
outsl
das
into
insb
jns
gs
ficoms
push
mov
in
xor
push
dec
xchg
jb
cmp
cmpxchg
xchg
clc
dec
rcrb
pop
push
das
or
xchg
sub
fsub
into
pop
dec
add
lods
xchg
jg
inc
pop
pop
xor
incb
push
out
dec
call
push
int
repz
imul
pop
push
xor
cmp
add
movsb
dec
scas
mov
addl
pop
mov
shrl
stos
push
sbb
cmpb
repz
stc
dec
enter
arpl
ret
mov
push
fildll
push
fcomps
jg
sub
les
lret
add
dec
sub
dec
insb
ret
pop
push
cs
dec
add
sub
mov
jmp
es
mov
jg
sbb
jl
int3
hlt
in
rolb
push
mov
lea
sbb
cmp
mov
adc
fistl
or
xchg
or
sub
sahf
push
pusha
and
div
push
xchg
shrl
dec
dec
dec
pop
into
push
push
mov
mov
sub
adc
push
adc
cwtl
outsb
mov
push
mov
mov
mov
dec
mov
mov
fcoml
adc
mov
mov
pop
fsts
into
pop
aas
and
fidivs
popf
das
jg
push
das
mov
mov
rorl
push
in
bound
in
sbb
push
push
xor
insl
push
scas
out
and
in
push
ds
xor
jb
adc
push
pop
mov
pushfw
or
iret
inc
lea
mov
lahf
loope
out
mov
mov
loopne
lock
sbb
lea
insl
xor
push
pusha
mov
dec
sub
movntps
mov
sbb
lcall
int
ds
jg
insl
pop
add
mov
aam
sub
push
das
out
xor
jg
popf
dec
lea
lea
xchg
out
cmp
nop
int
cmp
push
cld
pop
dec
test
xor
pop
jno
pusha
out
sar
mov
pop
movsl
int3
xchg
sub
xor
fcmovu
adc
inc
add
cwtl
ds
jb
and
test
movsl
jg
push
cmp
push
jge
lods
sbb
popf
outsl
xor
out
jb
sbb
in
popf
push
push
scas
cs
unpckhps
xor
mov
sub
pop
inc
adc
inc
or
movsl
mov
fidivl
insl
push
test
jmp
and
rcr
xor
pop
fidivrl
inc
adc
or
ds
repz
pop
mov
outsl
test
imul
mov
popf
cmp
dec
popa
lahf
inc
add
arpl
inc
pop
les
add
notl
lea
jb
popf
aas
nop
pop
cmp
enter
popf
test
sub
push
popf
lods
pop
xor
or
add
outsb
xchg
pop
mov
movl
sub
push
loopne
cmp
sbb
and
cmp
push
test
mov
ljmp
pop
mov
fisubs
sub
push
xor
lahf
mov
pop
dec
loop
dec
push
clc
stos
fs
subb
lock
xor
jae
cmp
aaa
cmpsl
dec
xor
inc
je
inc
push
adc
and
shl
aas
jne
inc
mov
divb
fsubs
aam
sbb
xchg
daa
dec
ja
and
jae
das
out
xchg
leave
add
pop
negb
sub
insb
in
push
sbb
sahf
push
cmp
int3
outsl
pxor
jno
dec
mov
push
push
adc
jmp
pop
lahf
fucomi
sub
dec
divl
sub
adc
or
adcl
ror
adc
scas
stos
addb
push
lcall
mov
movsl
outsb
xorb
iret
and
out
mov
jecxz
repz
inc
fsubr
xchg
test
adc
fcompl
aam
xlat
sub
pushw
xor
loop
mov
dec
scas
pop
push
inc
rolb
push
cmp
sub
ljmp
pop
rcl
mov
stos
cli
lods
shll
cmpsb
push
test
jb
pop
test
arpl
lahf
sar
and
cmpsb
push
lea
daa
es
push
inc
aas
out
sbb
mov
push
aaa
push
adc
js
xor
xor
pop
or
sbb
lods
mov
das
adc
outsl
rclb
scas
in
add
cmc
sub
aad
jno
pop
dec
loopne
lea
mov
mov
dec
xchg
mov
call
and
mov
or
cmpsb
scas
enter
cltd
add
dec
mov
fwait
jecxz
or
push
fs
pop
push
sbb
inc
clc
mov
int3
push
jmp
les
data16
xchg
push
fsub
sbb
scas
testb
push
mul
ret
jnp
fiadds
mov
fisubrs
push
cs
pop
dec
imul
jne
lret
imul
push
pusha
outsl
outsb
cmp
in
movsb
ds
mov
pop
sbb
test
dec
popa
sub
lods
arpl
mov
repz
push
scas
fstpt
pop
js
ror
xchg
repz
iret
ss
call
test
pushf
scas
rcrb
lret
and
mov
aas
jb
aas
or
les
sbb
fnstenv
sbb
mov
cmp
ret
mov
enter
sbb
adc
add
hlt
and
dec
adc
push
fwait
push
mov
sbb
pop
mov
adc
es
cmp
push
lods
push
cmpsb
popa
into
xor
iret
xor
aam
fstl
je
jo
cmp
mov
ret
and
nop
sub
pushf
push
and
sub
dec
push
subb
sub
hlt
and
scas
call
pop
inc
test
adc
les
dec
adc
aad
inc
jae
outsb
or
inc
mov
ss
testb
jnp
enter
jae
push
sub
cmp
xchg
lods
add
xor
in
adc
sti
add
pop
add
add
adc
xorl
int3
or
adc
and
sbb
mul
rcrb
cli
sbb
call
add
add
lcall
push
adc
dec
movzwl
cli
nop
mov
sub
fiadds
sbb
jo
nop
and
outsb
sbb
push
insb
rolb
xor
test
dec
out
push
inc
jmp
cmp
test
fs
mov
or
ds
dec
lods
addr16
push
dec
mov
dec
sbb
inc
push
shll
lret
cmp
xlat
rep
push
hlt
test
xchg
cltd
mov
pop
push
cli
fistpl
pop
icebp
and
xor
mov
cmp
push
push
add
out
mov
je
fwait
cli
adcl
bound
mov
cmp
rcrl
gs
enter
dec
sbb
imul
mov
cmp
xchg
rorb
push
mov
xchg
adc
adc
out
daa
and
lcall
xor
mov
jmp
mov
add
lahf
in
mov
in
lea
push
adc
mov
out
jno
bound
push
das
xchg
pop
pushf
jne
xor
aaa
xor
pop
mul
mov
jge
xchg
fs
int3
mov
mov
or
mov
jne
repz
cltd
pop
mov
sub
pop
ss
out
dec
stc
outsb
loope
mov
and
mov
aas
idivl
cld
or
popf
ljmp
scas
dec
int3
ljmp
call
xor
add
aas
push
insl
popa
mov
or
mov
int
loopne
mov
or
fcoms
xor
jb
pop
xchg
fsubrp
lea
mov
test
and
mov
rorl
arpl
in
xchg
lcall
in
nop
jne
xlat
mov
les
ja
sub
bound
pop
in
ljmp
cmp
mov
insl
sarl
mov
adc
lea
ss
cmc
nop
xlat
dec
fiaddl
mov
cmp
outsl
push
loop
xor
sbb
pop
test
pop
rcrl
pop
and
test
cmpsb
lods
lea
lret
mov
call
scas
ret
lcall
xchg
dec
fbstp
mulb
jle
popa
jo
inc
addr16
mov
sahf
mov
out
dec
jns
ja
sub
ret
or
jge
mov
adc
xor
jns
sub
dec
test
xor
in
pop
or
cmp
mov
jne
add
mov
xor
xchg
por
sub
repnz
and
sub
popf
mov
adc
jno
push
lea
push
pop
or
mov
and
cmpsl
push
pushf
aaa
rcl
pop
dec
sti
jae
cmpsl
jmp
pop
xor
add
and
jge,pn
orb
jno
fs
popf
sti
scas
pop
mov
inc
fidivrl
nop
movsl
test
in
xor
test
fbstp
fcmovb
jmp
and
sub
dec
sub
xchg
push
lods
sub
clc
push
sub
mov
fdivr
int3
xchg
scas
push
push
icebp
sub
sbb
pop
pop
lret
sub
mov
shrl
pop
jae
jb
sub
sbb
fnsave
movsb
jmp
fadds
jecxz
popf
add
add
fdivr
mov
adc
jo
mov
into
stos
jo
mov
imul
push
push
repnz
jno
aaa
fcompl
push
test
insl
push
xchg
icebp
pushw
mov
push
cmpl
imul
fwait
cwtl
enter
cmp
add
cmpsl
test
mov
ds
xchg
and
rclb
test
mov
cmp
xor
lret
loope
xor
cmpl
lock
or
or
inc
push
js
inc
cs
popl
push
leave
push
jg
or
push
dec
jecxz
arpl
adc
mov
xchg
lea
bound
push
hlt
push
jecxz
mov
shll
pushf
add
fstpl
sbb
mov
loopne
mov
sub
sbbl
enter
idivl
pop
bound
jbe
cmc
mov
push
arpl
pop
mov
lock
mov
cs
mov
sbb
outsl
sahf
adcb
jnp
and
imul
pop
cmpsb
lods
add
popa
dec
fldt
je
mov
sbb
mov
repz
push
cld
mov
push
adc
push
lds
cli
fisubl
scas
shlb
fs
xorl
mov
pusha
add
std
mov
out
pop
bound
les
adc
pop
scas
or
sbbb
punpckldq
cs
sbb
xor
jne
adc
mov
sbb
adc
hlt
jecxz
or
pop
sbb
in
dec
xor
mov
shlb
daa
rcl
hlt
adc
shl
cld
or
out
cmp
cld
sub
lea
daa
inc
pop
inc
sub
idivl
jbe
jecxz
mov
mov
sub
dec
scas
fsubr
xorl
negl
dec
movsl
sub
mov
or
dec
mov
or
jg
pop
repz
push
xor
or
decl
pop
jg
pop
gs
cmp
dec
ja
or
out
sti
or
cmc
jnp
mov
dec
repz
lods
movsb
mov
leave
push
jle
add
sahf
mull
cmpsl
sbb
jo
xor
fdivrl
scas
inc
cmp
mov
adcl
dec
cmpl
data16
mul
adc
pop
inc
enter
push
jno
jae
pop
dec
lahf
inc
jecxz
inc
dec
cld
mov
pusha
sahf
mov
adc
std
shrl
lcall
ljmp
mov
cltd
loop
mov
daa
and
mov
and
and
dec
out
and
mov
and
not
pop
cmp
pop
fsubrs
pop
pop
mov
xor
pusha
push
add
mov
fists
out
xchg
mov
popf
ret
repz
push
adc
jmp
outsl
lret
sbb
ret
cmpsb
xchg
outsb
cs
or
nop
inc
jecxz
outsb
xchg
addl
push
ds
cmc
xor
xchg
xor
aaa
inc
push
lods
adc
shl
or
adc
out
jle
fmulp
popf
push
aas
pop
add
pop
std
cmpsb
inc
xchg
sarb
xchg
pop
mov
shll
inc
int
xchg
dec
mov
xchg
add
inc
add
lods
repz
pop
sub
ljmp
notl
jl
clc
push
cwtl
pop
lcall
adc
arpl
fcmove
out
fmull
or
pop
outsl
add
in
inc
enter
pushf
xchg
into
xor
sub
rol
jmp
pop
xchg
fbstp
push
insl
jge
xor
mov
andb
test
in
push
mov
iret
cmp
xor
xor
and
and
roll
push
pop
xor
mov
cmp
xor
jo
jge
inc
inc
fistps
fs
outsl
add
dec
mov
sub
fs
movsl
or
lahf
lods
cmp
out
outsl
fsubrl
push
cmpsl
scas
inc
jl
loope
xchg
mov
mov
cmp
aad
les
adc
je
add
adc
sub
add
insb
xor
sub
jb
pop
adc
outsl
pop
imul
testb
pop
mov
inc
fidivl
aam
and
insb
lret
xchg
arpl
lahf
mov
mov
rolb
pop
out
ss
dec
xor
out
subl
mov
pusha
jmp
loope
test
pop
imul
divl
adc
repnz
push
push
mov
xchg
les
sub
push
mov
hlt
idivb
icebp
mov
popa
add
dec
cmp
dec
cmpsl
cli
xlat
and
rorl
out
movsb
mov
mov
out
sti
jg
or
push
nop
cltd
inc
or
cld
idivl
daa
mov
fs
dec
mov
lods
dec
adc
popa
pop
pop
jecxz
imul
dec
outsb
lahf
js
jmp
or
adc
jl
mov
add
push
sub
push
dec
xor
stos
cmp
loope
inc
mov
fs
xchg
and
or
lret
push
mov
adc
mov
and
adc
or
xlat
gs
nop
pop
mov
aaa
xchg
ret
jo
adc
xor
xor
movsl
shrb
mov
pop
loope
mov
gs
pop
lcall
push
sbb
repnz
mov
ljmp
pop
mov
jns
push
les
scas
xor
dec
nop
push
test
repz
imul
jo
mov
push
mov
sbb
gs
cmp
mov
or
push
mov
fisttpll
push
push
mov
add
lods
cwtl
push
jl
cli
das
ret
jno
mov
pop
pop
dec
dec
xor
mov
pop
mov
and
addr16
fwait
icebp
adc
xchg
and
push
lock
jae
mov
sub
cltd
push
mov
jle
add
scas
jb
sub
rclb
inc
sbb
push
hlt
stos
nop
xor
mov
mov
jecxz
loopne
test
pusha
push
rsqrtps
repnz
mov
mov
fnstsw
mov
fstpl
and
incb
mov
aad
inc
out
cld
setne
mov
iret
mov
and
xor
pop
jp
pop
pop
add
inc
ljmp
outsl
imulb
rorb
nop
and
xchg
mov
add
lahf
ss
mov
push
pop
adc
sbb
imul
decl
out
xor
lret
xor
push
incl
inc
xchg
bound
sbb
fdivs
add
mov
xor
and
outsb
sub
popf
outsb
cs
insl
or
jecxz
mov
les
cmp
xor
loop
inc
movsb
clc
out
movsl
inc
cmp
loope
pop
bound
push
add
rorb
test
mov
mov
push
sbb
repz
xchg
add
cmp
add
xchg
pop
cld
scas
mov
cmp
movlps
cli
popf
push
push
cmp
push
mov
fs
and
dec
mov
jge
push
imul
aas
dec
int3
xor
lcall
mov
inc
pop
cmp
repz
mov
xor
shlb
adc
popw
rcrl
scas
aaa
sub
jmp
mov
adc
imul
jns
bound
mov
test
xor
pusha
mov
aad
mov
data16
enter
je,pn
mov
sbb
imul
mov
sub
enter
in
inc
ljmp
enter
popa
ret
mov
mov
aaa
out
mov
mov
xchg
imul
or
mov
aaa
mov
xor
sub
and
ficomps
add
dec
cmc
repnz
fs
cmp
cmp
scas
xchg
add
sbbl
popf
xlat
in
dec
push
pop
pop
mov
add
push
mov
xchg
pop
xchg
test
addr16
mov
mov
pop
repnz
xchg
push
push
cs
lock
sbb
mov
in
cmp
xchg
lods
popa
pop
dec
ud0
adc
sub
in
data16
mov
cmp
and
adc
scas
ss
fimuls
adc
mov
or
je
sbb
fidivrl
add
mov
das
daa
sub
xor
xor
movsl
xor
scas
and
cmp
xchg
pop
jecxz
mov
cld
cld
cmp
scas
xor
mov
nop
pop
mov
scas
out
pop
or
cmp
sbb
mov
mov
bound
or
push
ret
lods
sahf
xor
sahf
mov
mov
or
scas
xchg
cmp
mov
add
adc
test
pinsrw
test
mov
jle
sbb
push
pop
insl
and
dec
push
jb
mov
popa
fimull
lods
mov
rcl
enter
cmp
jp
and
shlb
mov
mov
stc
cmpsb
xor
fsubl
repz
xor
xor
nop
cmp
pop
jno
test
test
adc
or
pop
and
and
cli
ds
fidivs
jle
sub
scas
fdivl
lods
push
mov
dec
loopne
notb
cmp
push
orb
xchg
jecxz
pop
mov
adc
movsb
mov
into
arpl
xor
push
xchg
jl
and
stos
sti
sbb
das
loopne
jne
cmp
xchg
repz
sub
ds
notl
aaa
jne
inc
subb
mov
jae
and
inc
or
hlt
arpl
imul
cmpsl
out
sbb
insb
pop
aaa
scas
rdmsr
pop
or
pop
or
lods
xchg
or
nop
xor
or
movsb
xor
sub
sbb
or
mov
mov
std
xchg
imul
stc
push
sbb
shll
in
mov
cmp
jmp
imul
lods
dec
sub
in
or
out
jo
xchg
sarb
loopne
into
xchg
mov
scas
js
push
insb
adc
ds
lea
push
lods
lock
xor
scas
jle
xor
shl
xchg
push
xlat
in
or
and
jno
ljmp
inc
jns
sbb
push
cli
push
dec
push
lods
sub
stos
push
xchg
les
dec
cmp
imul
or
aas
movl
aaa
adc
mov
mov
add
enter
xchg
scas
popa
sbb
xchg
mov
inc
sbb
or
mov
jl
fildll
jno
out
and
xor
push
or
imul
mov
push
or
mov
pop
shl
pop
dec
pop
aas
xor
popa
inc
out
inc
and
pop
jo
cli
jb
push
sbb
adc
lea
xor
in
pusha
push
pusha
dec
add
inc
push
push
sub
jle
mov
add
cltd
jb
add
pop
pop
pop
xor
fcmove
stc
in
lahf
xchg
insb
pop
xor
adc
sbb
rclb
mov
loop
imul
cltd
inc
sub
dec
adc
fstpl
xlat
push
shl
shlb
sbb
scas
push
popf
loope
out
pop
out
pop
test
or
andb
and
out
sbb
xchg
in
push
sub
and
jecxz
or
add
test
movsb
popa
jbe
adc
fs
push
sub
fs
push
inc
lods
stc
adc
xor
mov
nop
into
lods
data16
mov
gs
call
or
xlat
pop
ds
mov
scas
mov
add
lret
push
int
pop
adcb
push
fldln2
scas
pop
add
lahf
jecxz
stos
mov
mov
jmp
mov
arpl
cs
sub
jo
test
or
push
mov
sahf
fidivrl
insl
push
xchg
mov
mov
insb
mov
cmp
out
sub
jmp
inc
vmptrst
shr
lahf
ret
sub
popf
adc
push
push
rclb
cmc
dec
cmp
inc
xchg
xor
sahf
ja
repnz
sub
mul
sub
aaa
je
aas
jmp
pusha
xchg
mov
fistps
lods
cmc
adc
sub
jb
push
test
in
addr16
and
sbb
lcall
filds
fisttpl
mov
jne
fwait
pusha
cmp
cmpsl
sub
mov
sub
or
fadd
ret
mov
and
dec
add
adc
adc
pop
jg
pop
pop
jb
testl
xchg
push
mov
repz
mov
lret
es
or
subl
mov
or
sahf
stos
adc
mov
xchg
in
call
shrb
push
xor
xor
and
mov
sbb
scas
xchg
fdivl
enter
lods
and
pushf
in
in
xchg
cmp
mov
jb
and
cs
int3
mov
and
call
sbb
cmp
dec
stc
pop
lods
adc
sarl
icebp
dec
xor
cmc
mov
push
test
clc
popa
in
insb
shrb
cmp
mov
lret
dec
cmpsl
je
dec
push
pop
ja
cmp
mov
jle
push
push
sarb
repz
lods
rcrl
insb
idivl
jno
int
lcall
mov
testl
movsb
or
daa
clc
push
push
adc
cmpsb
aad
pop
outsb
rcrb
xor
repz
mov
loopne
push
or
cmp
push
pop
daa
lods
cmc
icebp
je
cs
or
inc
xor
pop
or
pop
adc
in
mov
fmulp
mov
mov
pop
das
nop
aaa
mov
pop
bound
fiaddl
pop
xchg
xor
pop
int3
mov
shlb
andl
sbb
mov
test
pop
subl
insl
xchg
jecxz
xchg
inc
pop
adc
test
and
lods
sahf
adc
jle
jecxz
cmp
shrb
push
je
push
dec
popa
aam
xor
pop
or
out
mov
fbstp
outsl
push
jb
and
scas
add
cmp
aaa
imull
packuswb
out
dec
call
and
jp
mov
add
iret
lods
or
mov
jg
pop
in
sahf
sti
cmpb
int3
or
rclb
test
pop
pop
cmpl
lock
jnp
loopnew
dec
cmp
cmp
mov
mov
repz
jp
adc
lret
pop
add
inc
test
lds
pop
sub
jle
jmp
cs
adc
xlat
ja
jl
stc
test
pushf
mov
daa
decl
in
cs
add
out
or
das
nop
jle
jae
ja
jne
outsb
sub
lret
sbb
scas
pop
aaa
test
jp
jecxz
push
xor
add
scas
das
out
decl
daa
pop
mov
fiaddl
dec
je
rcl
popa
xor
jnp
sarb
sbb
insl
dec
mov
imul
sarb
pop
add
scas
popa
rcrb
pop
dec
lock
cmpsl
push
sub
shrl
std
mov
sbb
ja
dec
xchg
shrb
mov
sub
popl
sbb
rorl
push
xor
xchg
jle
inc
fs
mov
test
and
mov
int3
push
fistl
mov
stos
insl
push
sahf
loope
in
mov
mov
adc
mov
cli
xchg
call
pop
lods
out
in
or
mov
daa
shlb
pop
repnz
jb
mov
xchg
adc
ja
pop
adc
sub
and
sbb
mov
and
int
xchg
pushf
mov
jecxz
and
mov
push
sub
push
add
jnp
and
adc
xchg
or
test
mov
xor
call
adc
xor
mov
push
mov
sbb
and
es
out
push
xchg
jmp
push
fucomip
mov
lret
push
or
add
jne
mov
or
gs
mov
xor
adc
ljmp
add
aaa
cmp
add
out
data16
pop
test
mov
int3
dec
inc
mov
scas
dec
sbb
pop
stc
pop
xlat
sub
jecxz
rol
xchg
movsl
andb
ret
les
ffree
sbbl
rorb
inc
dec
lods
cmp
sub
int3
mov
cmp
dec
dec
lock
cs
cltd
xlat
pop
imul
call
loopne
mov
pop
xor
pop
cli
and
popa
scas
jecxz
push
cmp
ds
push
dec
ja
adc
cmp
icebp
lea
int
out
cmp
mov
fs
xor
icebp
push
xchg
ljmp
lea
sbb
scas
dec
inc
int3
lret
aad
jle
jno
push
lods
jp,pt
jne
scas
adc
ljmp
pop
gs
rcrl
push
push
fbld
pushf
sbb
in
and
fcoml
out
aad
adc
es
cli
pop
ja
pop
mov
jg
mov
mov
add
sub
add
sbb
scas
lret
subb
gs
push
notb
jecxz
addr16
xor
bnd
push
in
add
call
fistpl
mov
movsl
leave
xor
add
add
scas
lcall
jae
and
enter
in
ret
les
jmp
sbbb
dec
fdivrs
lea
ss
jmp
repnz
notl
cmp
outsl
inc
pop
or
daa
scas
cs
xchg
sbb
out
rcl
mov
je
ja
mov
ss
xchg
das
int3
sbb
push
pop
loop
jnp
push
ja
adc
in
lea
pop
adc
test
push
sbb
out
out
or
or
push
loop
jo
xor
cmp
nop
nop
adc
imul
mov
inc
adc
xor
arpl
mov
shrl
lods
jo
shrl
cs
xchg
mov
jns
ds
bound
mov
dec
cmp
mov
fsubrp
sub
jmp
pop
popf
mov
testb
sbb
es
mov
sub
adc
or
arpl
dec
fsubs
mov
pop
adcl
mov
xchg
mov
push
push
jmp
add
xchg
mov
sbb
enter
insb
push
imulb
pop
scas
sbbb
dec
shl
cmp
scas
jo
push
push
nop
push
mov
arpl
push
pop
or
sarb
mov
repz
in
mov
scas
faddl
cwtl
mov
push
push
xchg
cli
shrd
inc
test
out
and
mov
mov
mov
lret
mov
xchg
cmp
xor
loop
mov
adc
cli
xchg
pop
icebp
jl
ficoml
in
dec
out
nop
das
jecxz
mov
inc
sahf
repnz
mov
or
adc
arpl
jae
outsl
or
cmovns
mov
xor
or
add
ret
subb
pop
push
test
or
mov
rorb
ret
push
mov
cmp
mov
lea
ss
cmpsl
lret
test
popa
rcrl
movl
int
fs
cmp
stos
push
sub
outsb
or
daa
pushf
ljmp
aas
inc
mov
pop
fdivl
adc
push
xor
das
push
inc
sub
andb
rorb
orb
or
shll
cld
xchg
test
mov
outsl
insb
out
dec
jle
aad
fnstenv
or
or
rorl
adc
pop
leave
xchg
jns
cmp
pop
mov
mov
add
scas
stc
jno
push
sub
sub
shll
sbb
fxtract
outsb
pop
into
in
xor
xchg
out
cmc
ficompl
arpl
dec
idivl
xchg
push
push
rcl
cmpsb
sbbb
stos
or
adc
mov
or
stos
pop
xor
pop
pop
inc
mov
inc
pop
dec
xor
addr16
push
xor
dec
outsb
xchg
pop
ret
out
ret
jae
in
or
mov
mov
ret
lods
mov
in
in
dec
sbb
test
mov
fnstcw
int3
popa
ret
sahf
adc
add
dec
pop
cs
sbbb
push
vpunpckhqdq
mov
push
gs
xchg
xor
lods
jnp
xchg
and
cmp
xchg
incl
es
out
push
jns
lods
sbb
mov
outsb
dec
mov
fs
and
mov
jbe
xchg
fistpl
and
mov
cmp
mov
lock
cmp
or
in
stos
fisttps
cvtps2pd
call
repnz
or
lods
sbb
dec
mov
mov
push
out
sub
ret
sbb
xchg
jmp
adc
jo
lods
sub
stc
mov
cmp
cmp
dec
int3
js
das
or
push
shrl
into
push
dec
adc
rcrb
lods
loope
lods
movsl
cld
push
dec
cltd
jle
fisubrs
dec
sub
mov
dec
cmp
fisttpll
insl
dec
nop
das
mov
insb
in
dec
cmp
pop
dec
sahf
sahf
pop
sbb
push
ja
adc
dec
dec
jl
adc
mov
sbb
insb
xor
and
mov
push
pop
lods
xchg
dec
nop
sahf
jo
sub
xor
push
sbb
pop
jl
push
mov
mov
ljmp
jge
ficomps
pushf
insl
dec
dec
insb
mov
dec
aam
int3
mulb
int
sub
push
decb
mov
fsubrl
dec
add
pushl
fbstp
fidivs
cs
pusha
or
scas
dec
cmp
cld
xor
xor
xor
push
aas
std
push
jg
pop
out
push
pop
push
push
sub
sub
pop
mov
push
bound
xchg
sub
pop
pop
push
fistps
iret
push
jle
das
sahf
cld
sahf
movlhps
sub
dec
xor
pop
push
in
sbb
shll
mov
outsb
repnz
int3
sbb
push
insb
sub
dec
pushf
mov
mov
add
mov
insl
pushf
adc
stos
cmp
dec
cmpsb
xor
dec
mov
mov
nop
iret
xchg
push
ss
push
dec
push
out
jl
or
mov
push
aas
sub
dec
aam
inc
xor
dec
sbb
dec
jge
adc
xor
xor
adc
jo
mov
dec
xor
sbb
pushf
outsl
pushf
out
xor
jl
fsubl
push
rorb
push
push
dec
adc
fcompl
mov
int
push
push
sub
pop
mov
xchg
ret
loopne
lret
repz
pushf
ret
cli
outsb
les
popl
cmp
rol
iret
xor
xchg
jg
add
push
cs
pop
movl
or
dec
sub
sti
xor
pop
ficompl
mov
mov
stos
test
ds
xchg
sub
and
adcl
into
scas
xor
inc
cli
ret
shlb
sbb
cmpsl
adc
add
mov
icebp
pop
push
mov
adc
std
enter
loopew
insb
and
pop
inc
mov
mov
in
push
mov
les
cmp
jb
jne
mov
push
add
mov
mov
ror
scas
push
sub
and
lret
push
lcall
gs
or
adc
jecxz
out
in
xchg
push
test
dec
cmp
cmpb
push
scas
into
std
cmc
xor
mov
movsl
fiadds
enter
pop
lock
fmul
lea
inc
mov
aaa
rcrb
and
nop
call
jmp
cmp
jge
cld
dec
xor
imul
xor
mov
inc
arpl
push
cli
push
movsb
push
popf
and
xchg
das
jl
test
popf
pop
roll
and
insb
pop
fs
sub
dec
js
jp
pop
clc
repnz
push
clc
aam
in
xchg
or
imul
xchg
mov
inc
adc
notb
and
xor
or
popf
xor
dec
fnstsw
outsl
scas
icebp
sub
push
out
push
push
push
std
icebp
data16
leave
lea
inc
call
pushf
pushf
sbb
addr16
push
push
jg
dec
dec
inc
sbb
xchg
inc
jle
mov
adc
sbb
dec
and
sbb
daa
stos
fcomps
rcll
fs
push
scas
mov
cld
dec
call
cmc
and
mov
push
pop
movsb
adc
movsl
outsb
scas
lahf
mov
lea
cmpsl
sbb
cltd
add
dec
cs
mov
das
repz
sbb
int3
xor
push
rcrl
scas
sub
out
lea
in
and
fwait
mov
inc
ret
sbb
lcall
jmp
jns
push
xlat
mov
ds
xlat
cmpsb
subb
mov
int3
lock
shlb
jle
mov
add
mov
jecxz
icebp
xor
and
and
loope
dec
imul
push
xchg
enter
pop
cli
sbb
xor
mov
push
adc
andb
push
cmc
incb
jmp
test
movlps
push
and
iret
cmp
dec
mov
dec
push
xchg
jmp
pop
adcl
inc
cld
and
mov
enter
jmp
in
enter
outsb
aaa
in
push
scas
xor
fmulp
push
pop
mov
fst
sbb
insb
cld
sub
mov
push
add
push
sahf
dec
mov
scas
mov
xchg
and
inc
jne
xlat
push
and
push
outsl
dec
sti
test
int3
pop
and
mov
pop
jl
cs
or
sbb
pop
iret
xchg
mov
loop
or
mov
inc
scas
cmp
sbb
pop
dec
xor
sarb
lods
pop
lock
out
scas
filds
popa
jne
xchg
cmp
jbe
mov
inc
insb
std
daa
and
pop
adc
test
mov
sbb
xchg
fdivs
add
aad
push
xlat
mov
cmp
scas
hlt
sbb
jl
repz
push
mov
inc
test
or
lods
sbb
jo
sahf
repz
xchg
ds
js
mov
stos
mov
loopne
jns
xor
fs
fs
imul
push
pop
mov
mov
cmp
mov
int3
orb
sub
inc
fwait
cmp
adc
sub
jle
xor
ljmp
mov
int3
inc
sub
inc
push
xor
or
xor
mov
cmpsb
daa
adc
sub
dec
pop
pop
jne,pn
inc
xchg
test
call
push
adc
and
add
mov
scas
jge
mov
leave
insl
in
enter
dec
jmp
bound
enter
imul
lret
or
adc
arpl
adc
xbegin
xchg
inc
or
sti
push
xchg
js
inc
lahf
notl
repz
push
sub
push
mov
or
xor
repnz
pop
and
jbe
add
inc
or
scas
or
nop
inc
add
sub
ds
repz
lods
frstor
pop
mov
or
inc
loope
popf
insl
mov
and
adcl
sbb
jecxz
mov
mov
cmp
dec
fisubl
push
ret
jno
dec
push
xor
xlat
popf
rorb
pop
cmp
xchg
loope
shlb
mov
xor
das
xor
popa
fidivl
mov
cmp
pop
push
xchg
jae
dec
jle
jmp
jle
cmovg
lea
das
cmp
jne
pushf
out
jecxz
add
adc
int
mov
pop
adc
push
adc
mov
shl
out
jns
movsb
mov
xchg
sbb
xor
mov
imul
sub
out
enter
pop
rorl
xlat
div
insl
cld
sarb
pop
pop
ret
inc
dec
hlt
pop
arpl
fldcw
sub
call
xchg
add
mov
and
mov
jns
cmp
cmp
popf
hlt
jl
xchg
pop
push
pusha
ds
mov
xor
daa
push
mov
pop
mov
mov
xchg
rolb
jbe
push
mov
mov
idivl
jno
dec
cs
sti
fmull
mov
adc
mov
es
xorps
fdivrs
or
xchg
decl
or
es
mov
ds
push
xchg
xchg
test
sbb
xchg
pop
jecxz
stc
jmp
cmp
pop
sbb
mov
add
enter
dec
or
ljmp
inc
push
sub
or
js
arpl
xor
scas
jp
mov
jns
test
xor
in
adc
xchg
xchg
xor
push
and
xchg
bound
cmp
shrl
mov
push
add
lods
pop
inc
cmp
scas
cmp
addr16
dec
stc
movsl
pop
xor
adc
or
xchg
adc
lods
enter
div
cld
sub
lret
mov
xchg
pop
jecxz
dec
scas
xor
xchg
push
test
loop
mov
lahf
loope
mov
mov
in
dec
ret
mov
sbb
jl
aam
mov
pop
cld
inc
cli
icebp
mov
xor
icebp
cmp
out
inc
shr
xor
sar
das
loop
data16
imul
fiaddl
test
sarl
enter
out
and
sbb
je
shll
jecxz
in
sbb
jle
push
ljmp
xor
jle
popf
in
push
cmp
mov
lahf
cmp
adc
pop
or
sub
shl
push
test
popf
andb
push
dec
push
bnd
cmp
inc
mov
push
insl
in
pop
enter
adc
ficoml
push
popa
ret
pop
push
daa
cs
arpl
in
or
cmp
movsb
push
mov
mov
jno
dec
cmp
clc
dec
inc
imul
faddp
or
mov
push
push
lods
out
xor
pop
jle
jnp
pop
mov
int3
out
jo
pop
mov
outsb
dec
adc
mov
push
inc
or
adc
sbb
push
sbb
or
sbb
push
adc
mov
push
je
pushf
in
in
pop
insb
ret
orl
push
adc
jl
push
sub
push
sub
int3
cwtl
insb
mov
fsubp
dec
mov
push
lret
and
mov
or
fldenv
fcoml
in
push
push
fsts
in
out
std
and
lods
dec
pop
sub
sub
out
cltd
jl
jnp
enter
sub
mov
lods
adc
xor
adc
pop
mov
rcpps
dec
mov
adc
cmc
stos
pop
dec
sbb
dec
dec
std
pop
loop
dec
xchg
jb
ss
orb
lods
and
fcompl
push
and
jl
mov
popf
insl
nop
lahf
jns
jno
add
push
dec
shll
sub
nop
dec
xor
dec
das
pop
xchg
dec
push
mov
sahf
xchg
adc
mov
andl
pop
and
imul
mov
cmp
push
pop
dec
mov
mov
repnz
fidivs
lods
int
cltd
mov
xor
dec
gs
popa
lods
cmp
dec
scas
mov
dec
adc
iret
aaa
cmp
mov
dec
nop
sub
sahf
xchg
or
aam
jo
cmp
iret
pop
popf
outsb
mov
popf
aaa
pop
xchg
pop
xchg
sbb
cmp
iret
pop
lods
dec
pop
sub
cmp
aam
in
into
jg,pt
outsb
scas
pop
sbb
and
mov
pusha
cs
jbe
aam
xor
in
xor
popf
das
jge
mov
lods
jle
ficomps
xchg
sbb
dec
das
dec
or
fsubrl
iret
mov
insb
lods
mov
lock
add
jp
cmpsb
leave
sbb
mov
and
outsl
sbb
push
scas
inc
out
ret
aad
lea
cwtl
adc
test
repz
test
jnp
push
cs
push
push
xor
mov
push
xor
and
imulb
fdivrs
xor
int3
pop
sub
seta
cmpl
mov
jmp
push
sarb
aaa
leave
push
and
cli
lea
orb
rcll
pop
pop
cmp
mov
pcmpeqb
sub
push
scas
xchg
in
ja
in
cmp
cltd
adc
xor
shrl
in
xor
enter
xchg
imul
sub
jmp
jg
lods
and
fdivrs
dec
adc
mov
cmp
xchg
sub
jle
pop
sti
inc
sbb
lahf
sbb
jne
xchg
push
insb
daa
jne
dec
insb
rorb
aaa
insb
fstps
les
sbb
dec
dec
bound
outsb
mov
lock
push
xor
stc
add
or
sbb
xlat
sub
add
movsl
pop
mov
gs
rolb
enter
xor
mov
daa
push
pop
xchg
jns
cli
xchg
cmp
sub
ret
lea
sub
fs
sti
push
mov
int
inc
outsb
or
out
or
jne
mov
xchg
popf
dec
cmp
add
gs
ret
sbb
adc
cli
imul
mov
xor
dec
mov
mov
jne
lret
dec
in
mov
dec
ja
xchg
jne
inc
xchg
les
mov
adc
lret
in
mov
xor
push
inc
shll
cmp
in
mov
jle
pop
mov
push
lods
testl
aad
xor
daa
test
out
pop
clc
xor
mov
sub
adc
not
sbb
imul
sbb
pop
fistpll
int
popa
jle
mov
xor
test
lock
imul
scas
stos
sbb
les
das
cmp
and
xor
insl
sahf
sub
data16
cli
mov
insb
arpl
mov
ficoms
inc
insl
pop
lea
test
nop
xor
dec
or
sbb
lret
stc
cmp
ss
imul
ss
mov
or
subl
add
inc
in
sti
std
xorb
cmp
das
test
dec
orl
inc
sbb
push
mov
add
std
adc
pop
cmpl
movsb
mov
imul
pusha
xor
insl
add
sub
out
outsb
adc
das
out
and
or
stos
lcall
cmp
sub
inc
xor
xchg
or
adc
iret
push
or
jp,pt
scas
mov
mov
jne
call
idivl
jle
sub
mov
stos
xchg
jne
fcmovne
movsb
cmp
dec
ret
cmp
xor
fnstenv
stos
adc
icebp
pop
lret
pop
cmp
pop
loope
cmpsl
dec
test
in
mov
into
lods
inc
sbb
lock
lahf
cmp
xor
xchg
test
pop
push
lea
xchg
add
adc
xor
ds
cs
rcrb
xchg
jle
dec
frstor
push
testb
cld
and
mov
lods
mov
scas
pop
lea
dec
cs
idivb
or
in
movsb
pop
mov
push
dec
inc
mov
jp
pop
mov
push
add
jmp
cmp
sbb
das
xor
jp
icebp
out
mov
in
xchg
sbb
xlat
mov
pop
out
aas
dec
incl
adc
cmp
outsl
nop
dec
pop
dec
mov
xchg
pop
or
xor
dec
cmpsl
das
sbb
repz
loopne
xchg
mov
sbb
stos
push
mov
les
int3
les
sub
hlt
scas
sti
xor
or
jmp
insl
popa
dec
jp
lea
xor
dec
adc
inc
sbb
jmp
scas
jne
inc
mov
pop
in
outsl
adc
sub
pop
sub
sbb
lods
push
lret
jle
mov
insb
sub
pushf
jns
fldenv
mov
pusha
in
bound
scas
aad
mov
dec
xchg
pop
mov
inc
loope
or
push
push
fldt
sub
jge
std
negl
sbb
sbb
repnz
ds
lods
adc
cmp
mov
and
xor
dec
jnp
lahf
push
push
dec
cmp
scas
arpl
add
mov
jl
in
jl
xchg
pop
add
aas
cmp
pop
popf
push
vmulss
out
bound
or
nop
loope
push
jge
mov
adc
mov
popf
pop
mov
testl
and
sub
dec
push
fiaddl
xorb
xor
repz
icebp
mov
in
adc
add
enter
push
xor
mov
jge
mov
lcall
sbb
mov
push
mov
addl
adc
cmpsl
es
imul
or
add
dec
jl
jle
dec
bound
pop
pop
inc
out
xor
dec
mov
xchg
je
mov
push
arpl
mov
pop
orb
adc
sbb
xor
pop
push
cmp
lods
rcr
aam
xlat
outsb
adc
or
xchg
mov
add
inc
scas
shl
scas
cli
adc
sub
mov
add
mov
cmp
sbb
dec
outsl
ret
add
adc
dec
popa
inc
pop
jne
inc
push
jg
inc
add
popl
mov
stos
out
addb
cmp
jecxz
sub
xor
out
or
shlb
or
jno
xor
mul
add
insl
cmp
sarl
pop
dec
nop
xchg
ja
mov
mov
dec
mov
fstpt
mov
dec
fisubrs
dec
pop
push
sbb
andl
push
imul
popf
out
xor
scas
cmpsl
and
pushf
push
pusha
bound
push
cmp
adc
adc
pop
movsl
pop
pushf
lcall
mov
push
or
jns
aas
jae
dec
xchg
lret
out
xor
push
int3
mov
arpl
pop
add
dec
mov
mov
cli
xor
xchg
jmp
mov
mov
and
in
jns
lea
lods
mov
sub
mov
loopne
pop
cmc
das
sub
das
ds
push
orb
mov
mov
mov
dec
mov
cli
out
daa
push
or
sbb
mov
xchg
sub
fcomps
jbe
add
and
ljmp
mov
xchg
movsl
pop
lods
ja
es
sub
cmpsl
xor
dec
enter
push
cmp
popf
ret
repz
adc
pop
adc
fidivrl
xor
orb
bound
cld
imul
sbbb
data16
adc
push
ret
les
xor
int3
sub
shl
mov
cmc
xchg
dec
lea
test
cmp
cmp
pop
and
inc
pop
fdivs
inc
mov
sub
push
dec
insb
push
daa
enter
jb
mov
and
add
mov
mov
inc
idivl
addl
mov
jmp
xchg
pushf
cs
jl
add
iret
filds
add
dec
jno
loop
ljmp
push
lods
jle
repnz
xchg
inc
sbb
xorb
testl
cmc
ss
mov
test
scas
pop
das
fnstenv
popa
jle
aas
mov
xor
pop
in
push
cmp
subl
sahf
xchg
push
ret
cmp
imul
mov
lcall
and
int3
jnp
loop
mov
push
adc
in
push
mov
sub
cwtl
loop
imul
mov
leave
and
arpl
stos
pop
aam
pop
xor
xor
dec
adc
addr16
adc
mov
sbb
scas
pop
cmpsb
or
cwtl
cli
xchg
mov
mov
das
sub
cmpsl
dec
xchg
dec
pop
lods
arpl
lahf
dec
sbbl
int
cmp
repnz
stos
and
aas
pop
scas
push
sbb
in
rclb
clc
es
add
inc
cmp
jecxz
mov
jp
and
es
ljmp
mov
sub
je
or
leave
fmul
sbb
cld
cmp
sbb
out
mov
popa
push
mov
js
int
sahf
xor
pushf
repz
loope
int3
inc
mov
imul
pop
jp
ljmp
cli
lods
int
pop
ss
push
sub
and
mov
cmp
in
push
mov
sub
test
jo
insb
xor
push
leave
inc
fdivr
add
arpl
xchg
ret
xor
add
outsb
mov
enter
pop
push
dec
inc
push
adc
mov
pop
loopne
test
gs
sub
mov
sub
mov
out
jp
sbb
adc
jge
subl
adc
cmp
cmp
sbb
in
cltd
mov
das
inc
out
xchg
scas
or
pop
push
les
aam
cmp
shr
and
testl
xor
add
cmp
sarb
dec
popf
jne
pop
das
lods
mov
xor
movsl
jle
mov
jle
or
mov
xor
fisttpl
sub
scas
xchg
pop
out
cmp
std
int3
test
xor
lea
inc
scas
sub
out
in
ja
nop
adc
dec
fisubrl
test
js
out
imul
pop
insb
dec
xchg
sahf
jmp
xor
and
jns
out
push
outsb
loopne
sbb
adc
or
pushf
or
lcall
ss
stos
andl
insb
ret
cli
jne
sbb
lret
inc
int3
dec
imul
sbb
inc
inc
clc
jmp
or
test
mov
adc
lea
or
sbb
lods
les
fsubrl
insl
push
mull
test
mov
ss
or
mov
icebp
inc
enter
fmull
scas
jo
mov
or
fbstp
je
jecxz
test
pop
aam
clc
enter
push
ret
insb
addl
out
movsb
cmp
repnz
rep
test
jmp
inc
jp
push
or
jno
imul
mov
shrl
xor
jmp
stc
mov
push
sti
jmp
into
adcl
pushf
xchg
iret
cmp
fnstcw
sub
rolb
mov
in
insb
sbb
cld
pop
pushl
pop
mov
pop
test
pop
jl
inc
sbbl
xor
insb
or
cmp
dec
xor
sbbb
in
sbb
lcall
push
cmp
mov
pushf
xchg
out
adc
push
stos
lods
mov
rcrb
rcrl
sarb
ljmp
mov
jecxz
pop
pop
scas
xchg
sarb
xor
aam
fisttpll
xchg
xchg
mov
xor
dec
ret
push
popa
xor
jne
stos
push
scas
sti
xor
jp,pt
cmp
and
add
inc
mov
jle
xchg
push
push
push
adc
stc
adcb
test
cmp
cmpsb
sbb
add
sub
and
lds
mov
les
popa
push
and
push
pop
scas
out
xor
jmp
mov
das
inc
sbb
sub
inc
cmpsl
loopne
pushf
lea
sahf
xor
xor
adc
loope
ja
xchg
loop
sbb
sub
lods
clc
dec
jge
cs
xorl
sub
out
cs
imul
pop
pop
sti
cmpsb
cmc
cmp
xchg
pop
inc
adc
push
dec
insb
xor
mov
xor
lea
and
add
cmp
imul
xchg
lock
or
loop
pop
jb
xor
lds
dec
ud0
push
vmread
xchg
jb
out
insb
push
testl
xchg
lods
cmpw
xor
lock
repnz
push
out
loope
cmp
cltd
ds
inc
mov
xchg
push
pop
nop
in
scas
js
inc
push
les
test
popf
push
sbb
scas
out
cmp
jg
and
cwtl
or
out
cmc
sarl
ds
lret
dec
lods
js
gs
call
pop
aas
jge
rclb
call
es
lock
lea
inc
inc
adc
js
xchg
pop
out
cmp
call
cmp
rclb
cmp
test
xor
stos
into
roll
mov
mov
test
pusha
adc
pushf
cli
cld
js
or
lahf
lahf
dec
xchg
fsubl
and
scas
sbb
adc
leave
inc
sbb
sub
jmp
push
dec
mov
xchg
xor
loop
and
and
pop
cmpsl
inc
mov
push
mov
mov
decb
ss
fisttpl
sbb
out
sbb
hlt
adc
imul
sub
cmp
jnp
faddl
dec
push
jb
lock
pop
inc
pop
fwait
movsb
mov
cs
sbb
mov
imul
or
jno
push
je
and
mov
sub
pop
jo
cmp
jmp
inc
xor
pop
push
dec
xchg
js
mov
cmp
dec
stc
pop
mov
dec
mov
cld
pushf
shll
sti
sub
scas
xchg
cmp
pop
jbe
dec
out
fisubrl
xor
mov
cld
and
pop
lret
ret
add
jl
jle
inc
sti
adc
mov
xor
lret
jmp
idivb
out
xchg
mov
push
mov
adc
scas
loop
lahf
inc
lock
jns
push
and
mov
and
sub
repnz
incb
pop
fs
cmp
adc
sbb
out
sahf
sahf
add
mov
int3
stc
xchg
sbb
pop
or
pop
jbe
pop
dec
mov
jns
dec
pop
inc
dec
mov
pushf
mov
stos
and
imul
xchg
mov
xchg
adc
adc
data16
adc
mov
push
cmpsl
jb
sbb
cmp
call
outsl
sbb
repnz
dec
cmp
inc
mov
add
fdivl
fsubrl
jle
xor
cmp
and
out
add
inc
enter
push
nop
mov
mov
fistpl
bound
sub
test
adc
sub
rclb
xor
rcr
int3
dec
sub
and
jge
mov
cmp
sbb
or
xor
mov
scas
scas
lcall
movsl
xor
andb
add
mov
mov
divl
push
mov
insb
jb
movsb
mov
push
jbe
xchg
mov
sbbl
out
or
lret
xchg
cmp
rorl
xchg
pop
adcb
sub
xor
lea
pop
inc
dec
sub
data16
into
mov
inc
pop
add
mov
sahf
push
sbb
rol
adc
or
mov
out
push
dec
aam
loope
cmp
sub
xor
lods
insl
outsl
inc
adc
ret
gs
dec
xchg
sub
push
pop
mov
fmul
mov
bound
push
lahf
push
add
jmp
xor
mov
adc
insb
sti
pop
mov
sbb
sub
mov
mov
push
jno
push
push
mov
or
dec
xchg
nop
dec
xchg
adc
add
push
sbb
push
or
sub
adc
js
add
pop
jle
loope
adc
mov
push
xchg
dec
call
dec
movsb
mov
ljmp
repnz
adc
setle
inc
push
dec
int
sahf
xor
nop
ret
imul
lock
scas
aaa
ret
push
aaa
mov
fisttpll
mov
lcall
sbb
pop
fsubrp
mov
popf
cmp
mov
jmp
and
dec
push
and
pusha
out
pusha
das
push
mov
lods
mov
adc
jp
mov
in
or
inc
outsb
jge
mov
pop
lahf
and
xor
aam
fxch
pop
jle
dec
jae
or
scas
xchg
push
pop
and
movzwl
cli
mov
out
jl
jp
cli
and
mov
xor
jp
adc
lods
imul
xchg
jmp
int
fcomip
cmp
xor
xchg
jle
bnd
in
test
xchg
xorl
aas
daa
fdivrs
xlat
xchg
or
add
cmp
rcrb
sbb
scas
adc
mov
popf
xor
push
and
mov
enter
xchg
sti
xor
push
xor
aam
out
and
xor
sbb
and
pop
sbb
icebp
xchg
xchg
inc
pop
mov
mov
stos
pushf
lcall
sub
jns
int3
bnd
pop
or
push
popf
push
scas
frstor
jecxz
cmp
call
and
insb
mov
dec
cmp
cli
inc
and
hlt
or
cmpsb
push
jge
inc
movsl
rorl
cs
pop
cmp
pop
push
cltd
or
dec
mov
insl
sbb
jmp
mov
inc
sbb
fsubl
sbb
pusha
dec
jb
mov
pop
shl
mov
shll
outsl
in
out
int3
int3
aam
shl
xor
and
xor
adc
xchg
xor
aas
adc
add
sbb
push
sti
pop
iret
scas
cs
sub
in
mov
pop
xor
iret
push
pop
push
into
pop
mov
filds
xor
shlb
inc
int3
push
mov
cltd
mov
xchg
imul
mov
inc
pushf
xrelease
mov
shrl
add
adc
lods
mov
jbe
lods
pop
sbb
dec
rcr
mov
test
std
mov
scas
jge
dec
lods
pop
adc
inc
vandps
xor
iret
pop
fnsave
inc
adc
pop
scas
in
cmp
mov
add
sbb
mov
push
adc
sub
scas
mov
or
cmp
scas
lods
mov
inc
push
xor
xchg
cmp
adc
popf
inc
or
cmc
sub
sub
pop
push
test
or
sbb
shrl
das
dec
cmp
sub
dec
cs
push
jp
pop
movsb
rcl
and
or
ja
jl
ljmp
test
stos
sub
inc
sub
ja
shlb
cld
aaa
lret
cmp
mov
fldcw
jle
in
xchg
xor
mov
out
xor
aam
inc
cmp
sbbl
push
push
pop
pop
adc
bound
push
mov
xor
movsb
add
pop
mov
es
jns
jge
inc
jp
scas
into
outsb
rolb
test
testl
and
test
mov
sbb
loop
xchg
dec
adc
out
adc
in
sub
lea
test
adc
sub
mov
int
divb
sub
inc
fwait
jae
nopl
shl
insb
mov
imul
cmpsl
xlat
sub
mov
mov
outsb
or
loopne
add
rolb
mov
mov
push
das
and
mov
mov
inc
rcl
inc
jle
cmp
scas
sahf
xor
and
and
jmp
cwtl
push
outsl
inc
sbb
xor
movsb
in
insb
shrl
xchg
icebp
push
clc
xor
fstsw
ljmp
sub
push
dec
xchg
add
pop
shlb
or
cmp
ret
jbe
xchg
push
fcmovnbe
sbb
or
fmull
ret
xchg
cs
insb
push
outsl
insb
rcrl
aad
popf
dec
shl
sbb
xchg
xlat
mov
stos
mov
call
arpl
lea
push
mov
test
negb
gs
sbb
xor
inc
dec
aas
push
ret
sub
lods
xor
aas
push
mov
mov
adc
inc
mov
jne
rcrb
pop
fldenv
jae
and
or
sbb
into
sbbl
fistl
mov
hlt
pop
int3
lahf
push
outsl
ret
outsl
xor
test
aad
popf
mov
or
cmp
dec
cmpsl
push
enter
push
or
cmp
inc
movsb
cs
call
ror
jl
cmc
jo
sbb
rorb
cwtl
push
xor
adc
mov
aas
or
jo
lods
das
fnsave
dec
adc
cmp
adc
dec
inc
dec
test
sbb
pusha
fwait
xchg
clc
xchg
xor
icebp
pop
pop
mov
mov
and
scas
mov
or
rorb
mov
sar
mov
sbb
movsb
xor
jo
xchg
js
mov
dec
xchg
dec
ret
sub
push
addr16
orl
outsl
inc
xchg
xor
add
push
push
outsl
arpl
mov
jp
and
push
ss
dec
stos
dec
iret
mov
add
jmp
push
leave
cmp
gs
es
or
daa
dec
inc
nop
mov
adc
push
imul
ss
add
repz
cmp
insl
imul
test
cs
data16
add
sbb
addb
sbb
sbbl
mov
and
push
cmpb
sub
das
mov
mov
ds
fidivrs
cmp
inc
or
xchg
or
push
bswap
leave
mov
rolb
cs
cmp
pushf
out
pop
popa
mov
add
bound
movsb
rcll
add
mov
and
inc
cltd
addl
mov
dec
mov
out
adc
jg
push
and
push
mov
pop
inc
add
and
dec
loope
mov
nop
push
or
dec
jno
out
inc
inc
dec
ja
sub
fidivs
add
add
call
push
add
rolb
sbb
pop
push
push
fisubrl
in
scas
mov
aaa
mov
lods
lahf
aad
or
jnp
cvtpi2ps
ficoms
xor
xor
add
popf
rcrl
adc
push
xor
jge
push
xchg
mov
adc
inc
inc
or
adc
xchg
pusha
lods
outsb
in
jg
xor
jbe
xchg
roll
add
cltd
pop
cmpsl
mov
lock
idivb
sub
xchg
or
ja
ds
stos
jg
add
std
pop
mov
rorl
cmp
fcoms
push
aad
or
add
add
mov
push
lret
pop
sub
out
push
andb
adc
test
sbb
int3
adc
xor
lahf
and
xchg
add
push
loope
adc
pop
pop
xor
adc
push
test
movsb
scas
int
addl
add
mov
stos
push
or
mov
adc
inc
xor
push
or
nop
pusha
sub
out
push
movsb
add
rorb
cwtl
sbb
sbb
pop
and
andl
push
ja
fldt
adc
in
pop
push
sahf
push
test
lahf
and
mov
push
ja
adc
outsb
mov
mov
stos
push
adc
lret
add
adc
insl
add
pushf
sub
jno
inc
jg
enter
cmpsb
push
pop
addw
roll
sbb
inc
in
pop
and
in
fucom
inc
pop
insl
add
push
icebp
mov
into
push
sub
push
movsl
out
fisubrs
pop
ljmp
das
dec
or
pop
adc
repz
push
fmul
mov
mov
adc
pop
sbb
out
sahf
inc
lods
cmp
cmpsl
dec
adc
xchg
push
adc
inc
je
cld
dec
push
jg
and
add
loopne
jle
and
mov
jge
imul
iret
ja
dec
and
popf
add
push
cmpsl
add
lods
mov
xor
xchg
jecxz
add
dec
xchg
mov
or
add
lret
test
mov
xchg
imul
cli
and
fidivrl
mov
add
pop
notb
data16
inc
js
rcll
sbb
jg
test
daa
mov
mov
testb
pop
add
pusha
jnp
addr16
cmc
dec
jae
js
test
add
jmp
cmpsb
and
lock
arpl
add
leave
adc
add
nop
jae
repz
and
sti
icebp
push
mov
dec
outsl
sbb
mov
rcl
dec
enter
jge
pop
sub
rcll
out
pop
add
jbe
clc
sub
push
push
dec
sarb
or
and
cmp
xor
jbe
add
push
mov
xchg
dec
in
mov
test
jbe
pop
inc
sbb
stc
sbb
or
fisttpll
xchg
roll
dec
lods
mov
cltd
sbb
sbb
imul
mov
and
push
testl
push
ljmp
sub
lods
mov
jae
add
adc
sub
sbb
lea
aad
add
sbb
ljmp
sbb
mov
push
pop
xchg
cli
addl
fmulp
push
adc
pop
loopne
lock
add
lcall
lods
ror
pop
iret
test
scas
movsl
out
sub
adc
mov
jmp
and
xorb
xor
mov
adc
xchg
and
xchg
popl
je
cmp
pusha
jecxz
cmp
pushf
stos
xchg
push
data16
xor
repz
xchg
push
cmp
fidivl
add
pop
test
adc
cli
lret
inc
ds
add
sbb
fldcw
shrl
cmp
adc
nop
mov
xchg
or
jmp
rsqrtps
sbb
bound
jmp
sub
mov
cltd
and
xor
xor
push
or
push
movl
push
loopne
pop
outsl
addr16
add
pop
ret
aas
inc
and
jl
xor
push
out
add
inc
cmpsb
je
roll
lret
pop
mov
mov
test
icebp
sbb
mov
std
sbb
pop
push
push
outsb
mov
xchg
adc
dec
fstpl
sbb
dec
push
add
add
mov
outsb
in
push
jnp
test
sbb
add
fidivs
mov
imul
pushf
xor
sub
outsb
inc
cmp
mov
fildll
fstps
imul
mov
add
loope
push
cwtl
sub
or
jg
stos
sbb
mov
incl
inc
jne
cmp
cmp
push
mov
lods
xchg
incb
push
orb
or
cwtl
pop
mov
pop
add
push
sti
inc
pop
push
xchg
push
aad
xor
popf
dec
or
daa
adc
xchg
sub
xor
jb
jno
lock
pop
rclb
outsl
in
lods
xchg
add
xor
popa
insl
pop
in
mov
icebp
aad
and
inc
mov
add
fwait
mov
ret
vpminsw
fiaddl
sbb
in
dec
pop
xchg
fisubs
scas
sub
add
add
mov
mov
imul
dec
push
inc
push
sub
lods
daa
add
cmp
pusha
call
cmp
cld
mov
pushf
or
xchg
and
rorb
sub
call
in
pop
mov
test
mov
sbb
xchg
pop
cmp
stos
sub
in
iret
and
add
push
sbb
loopne
rorb
cmp
push
dec
push
sbb
sub
dec
inc
add
add
pop
or
xchg
dec
fldenv
sub
mov
js
sbb
jbe
adc
popa
popf
in
add
add
test
insl
cltd
repz
mov
rcl
inc
sub
mov
stos
mov
pop
fcoms
xchg
outsl
movsb
lods
lds
pop
loopne
jp
dec
out
mov
movsb
test
pushf
xlat
sbb
rorb
fidivl
add
push
jmp
test
aad
cmp
cmpsb
in
pop
bnd
outsl
cmp
lret
adc
pop
sti
test
cmp
sub
add
push
mov
inc
sub
lea
mov
add
fldt
icebp
sbb
lods
bound
dec
push
push
pop
xor
adc
adc
add
fisttpll
and
lock
testl
fisttpl
push
rorb
mov
stos
sub
add
dec
addr16
adc
sti
imul
loopne
aam
fwait
add
xor
outsb
sub
loop
pop
push
aad
dec
test
outsb
aad
xlat
jns
sahf
lea
cmpsl
xor
xchg
mov
mov
jns
cltd
stc
aas
dec
lods
ret
push
and
sub
mov
test
or
pop
outsl
out
add
pop
xor
push
jo
xchg
jb
sar
sbb
xchg
cmp
jne
mov
add
fs
stos
in
sbb
cmp
rorl
push
scas
out
push
adc
xor
push
mov
fldl
mov
push
add
int3
sub
pop
fidivs
pop
mov
in
jmp
dec
xor
shlb
sbb
push
push
push
movq
in
push
mov
es
pop
lods
add
xchg
pusha
xchg
cmp
push
loope,pn
mov
jnp
push
adc
push
jno
sbb
das
adcb
xor
xor
xor
inc
mov
lods
inc
mov
sub
xchg
sbb
ljmp
xor
or
jp
pop
sbb
or
push
mov
sub
int
jge
movsb
adc
lods
scas
push
sbb
and
push
rorl
add
cmc
test
adc
xor
mov
cmp
je
xor
cwtl
test
push
dec
jb
push
adc
or
pop
shlb
mov
mov
push
pushf
cmp
decb
insl
and
rcll
pop
add
cmp
add
sahf
mov
ret
push
sbb
fdivp
dec
cmp
insb
pusha
or
inc
ret
add
lods
mov
sbb
add
adc
sub
push
push
loopne
mov
pop
cmp
add
lret
and
adc
push
mov
movsl
add
aad
out
pop
sub
inc
push
and
xor
push
clc
cli
push
sub
lds
sub
pushf
adc
lret
ljmp
xor
push
dec
add
bound
sub
jp
popa
adc
xor
fisttps
mov
adc
cs
mov
inc
pop
xor
lret
add
lods
enter
mov
pusha
and
jp
dec
test
cmpsl
dec
popl
mov
xchg
inc
inc
mov
fwait
sbb
adc
test
test
sbb
int
js
xchg
in
int3
pop
cli
mov
daa
push
fadds
inc
mov
mov
xor
push
aas
push
scas
push
pop
out
mov
in
sub
dec
sub
adc
add
xchg
mov
sub
fs
sbb
pusha
cwtl
adc
push
mov
sub
xchg
xlat
pop
add
jne
sbb
imul
sbb
add
lods
push
repnz
add
dec
jo
mov
sub
inc
ds
stc
sbb
xor
push
or
inc
mov
adc
push
add
dec
in
push
add
pop
cmp
push
test
xor
aaa
push
add
in
dec
fmull
pop
movsb
in
out
insl
in
jmp
lds
cmp
out
fwait
pop
loop
jmp
into
push
sbb
pop
rorb
add
hlt
xor
clc
arpl
fstpt
adc
in
pop
dec
and
add
add
sbb
jo
out
cmp
loope
in
lock
sub
int3
sbb
test
fsubs
lock
add
in
lock
lret
lock
fadds
iret
dec
dec
jl,pn
aad
in
sbb
aam
pop
push
lret
aam
fmul
loopne
lret
in
out
sub
mov
lods
dec
mov
push
std
jl
sar
adc
xor
pop
xor
mov
lock
inc
adc
pop
inc
testb
or
push
ds
pop
inc
cmp
ja
insb
clc
cmp
push
scas
lods
jns
sub
les
aam
or
mov
in
jbe
pop
add
jl
test
int
sbb
lock
add
add
lea
jo
pop
lock
jle
and
sbb
xchg
dec
pop
loopne
aaa
mov
aam
out
sbb
jl
lock
and
or
xor
dec
das
psubusb
nop
add
push
push
pop
cwtl
insl
mov
dec
adc
aam
faddl
xchg
in
sbb
add
aaa
clc
into
dec
or
jl
cld
mov
or
dec
insb
stos
aam
js
xchg
das
dec
leave
add
insl
mov
pop
jns
or
in
mov
xchg
dec
add
insl
push
sbb
fdivrl
dec
or
int3
sub
int3
insl
fdivrl
cmp
lock
adc
cld
aad
inc
mov
dec
call
test
sub
lock
cmp
xor
pop
cld
adc
int3
mov
fcmove
insb
loopne
fcoml
int
mov
adc
or
xor
jecxz
cmp
jae
andb
mov
sub
inc
fdivs
dec
sub
dec
xlat
pusha
clc
inc
cld
outsl
call
ja
ret
mov
fsubrs
arpl
test
xor
sub
lock
jbe
in
jl
clc
cmpsl
sub
cld
sbb
and
aad
fldl
in
xor
bswap
in
push
adc
int3
cld
ror
xchg
das
aam
add
or
loopne,pt
in
call
jbe
jae
xchg
push
in
aad
in
sbb
lock
dec
pop
pop
pop
fisubrl
lahf
ljmp
xchg
jne
or
lea
shl
push
jmp
push
pusha
pusha
pushf
pushl
lea
jmp
and
sub
add
fldcw
add
and
jb
gs
xchg
sbb
cmp
cmp
ljmp
jl
mov
mov
cmp
arpl
insl
insl
sub
and
inc
mov
sub
xor
cmpl
mov
dec
lcall
inc
add
inc
jo
mov
test
bound
movsl
inc
xchg
push
pop
inc
pop
pop
xchg
jae
rcl
mov
cwtl
clc
add
inc
out
jbe
jg
push
or
xor
mov
dec
pushf
pop
adc
imul
sbb
pushf
jno
gs
fisubrs
int3
jno
sbb
push
lret
push
sub
xchg
dec
test
scas
mov
movl
dec
rcr
ror
bt
mov
sub
pushf
call
push
lret
mov
dec
fisubrs
scas
cwtl
out
pop
call
leave
cmpsb
xchg
adc
js
out
sar
js
jge
xor
scas
sarb
cmp
pop
cmp
xchg
xchg
sbb
sub
fldt
sub
xchg
pop
into
xchg
jmp
mov
cld
sbb
push
mov
lret
cmp
sub
jo
mov
imul
cmp
fucomi
push
push
cmp
dec
mov
push
mov
outsl
adc
std
adc
mov
jo
jnp
outsb
icebp
dec
inc
pop
daa
xor
jmp
sub
cmp
or
sbb
pop
andb
xchg
ror
mov
cli
jno
pop
or
or
pop
push
ds
mov
arpl
lret
addr16
adc
jl
jbe
lods
pop
mov
movsl
pusha
stc
mov
pop
ljmp
cmp
sbb
push
or
imul
jle
test
or
push
jle
cmpsl
mov
xchg
push
incb
ret
xor
fs
in
and
call
cmc
fistps
and
sub
xchg
mov
aaa
mov
adc
push
mov
mov
cmpsl
clc
outsb
lds
sbb
insl
pop
sub
and
aad
pop
movsb
les
fimuls
subb
jecxz
or
mov
jl
push
sub
lcall
fisttpll
loop
pusha
aad
mov
pop
pop
call
cmp
cmpb
pop
sub
sub
sub
gs
out
repnz
mov
sbb
mov
inc
hlt
jae
and
aad
rcrb
xchg
mov
ja
fucomip
dec
cmc
add
adc
add
jbe
xchg
add
pop
lret
fisubrl
xchg
aam
rol
xor
adc
push
mov
push
mov
outsl
stc
mov
test
add
add
lcall
mov
insl
in
pop
push
subl
shlb
test
cmp
xchg
add
jns
enter
or
lahf
adc
jne,pn
mov
rcll
or
ljmp
dec
sbb
sbb
xor
sar
jle
mov
push
rolb
mov
movsl
lea
nop
mov
and
xchg
cmp
mov
lods
imul
scas
inc
push
sub
dec
cmc
cld
loopne
mov
push
xchg
or
or
fwait
xor
je
loopne
in
ljmp
mov
and
adc
jne
fwait
xchg
aam
ss
jmp
sti
lret
mov
lock
sbb
pusha
xor
es
shlb
test
mov
pop
lret
jp
jl
scas
pop
mov
add
xchg
imul
mov
into
inc
loop
push
mov
fsubrs
inc
dec
sbb
mov
push
lahf
mov
lds
stos
push
idiv
jp
test
test
in
adc
pop
mov
pop
and
les
repnz
jb
or
lret
shll
mov
addl
sbb
add
dec
mov
pop
mov
dec
repz
jecxz
int
jbe
mov
repz
jle
lahf
stc
outsb
pop
out
inc
sub
mov
jle
jge
fsubs
mov
mov
xchg
add
xor
test
cmp
fisubl
lret
jp
sbb
or
inc
adc
or
mov
push
aas
ss
js
mov
insb
arpl
add
ljmp
and
cs
cmp
popw
cmp
es
sub
mov
mov
scas
adc
mov
inc
outsl
test
mov
shl
xchg
out
adc
mov
jp
xchg
stos
push
mov
insl
stos
mov
mov
mov
push
xchg
and
inc
xorb
gs
jno
xor
add
xor
xlat
dec
lods
adc
shlb
adc
cmp
mov
aam
cmp
faddp
ljmp
xchg
mov
xchg
push
mov
mov
mov
jl
js
cmp
lock
fdivs
icebp
xor
xchg
inc
inc
xor
clc
inc
push
mov
and
xchg
in
push
sub
orl
mov
int3
push
fnsave
movsb
cwtl
ss
mov
sbb
mov
sahf
mov
xchg
jns
push
pop
icebp
addr16
jle
shrb
ret
lcall
inc
xchg
xor
ds
arpl
scas
test
dec
call
mov
push
pop
push
fcmovne
push
sub
lsl
mov
ror
repz
test
dec
push
stos
rorl
decl
cltd
ljmp
cmpsb
xor
jnp
pusha
outsl
ljmp
sti
sahf
sbb
cmp
xor
hlt
push
cld
inc
jp
sub
ret
sub
ja
mov
shrb
add
add
es
cmp
and
pushf
pop
pop
aam
xchg
js
arpl
mov
adc
lock
lods
push
dec
xor
and
imul
jge
push
lret
repnz
imul
adc
lcall
push
cmp
or
cmp
imul
jecxz
es
out
lods
adc
sbb
push
loop
push
xchg
mov
ja
in
jmp
add
mov
or
popf
sub
sbb
subb
imul
dec
sbbb
mov
pop
mov
pop
stc
jb
xchg
pop
imul
push
ficoml
int3
or
sti
mov
and
add
jae
lock
ficompl
xor
dec
rolb
out
xchg
fisttpl
inc
pop
and
addr16
rcrl
test
std
mov
ret
lret
scas
nop
and
hlt
andl
fs
mov
sub
popf
adc
loope
xor
lea
cmp
pop
pop
arpl
push
mov
popf
and
repnz
mov
pop
ss
add
xchg
jne
mov
popf
push
sub
shll
cmp
inc
cwtl
ret
pmullw
pop
fbld
pop
pushf
push
push
jmp
cmp
jne
lret
jp
fldt
js
cmp
and
pop
lock
mov
and
inc
xor
jb
xlat
shrl
in
int
fwait
popf
push
lahf
into
sub
sbb
dec
int3
mov
lods
push
jno
into
inc
ja
loop
xor
mov
int3
sub
cwtl
insl
or
or
popa
inc
mov
mov
xor
lret
sub
popa
mov
mov
inc
mov
fidivs
sbb
mov
pop
pop
mov
jmp
sahf
faddl
jmp
in
sti
sub
outsb
add
ret
inc
sub
inc
movsl
push
cmp
xchg
in
sbb
fcomp
jo
mov
mov
jne
daa
fdivrs
in
pop
loop
add
inc
sbb
std
pop
test
int3
jae
into
jmp
roll
cmc
test
jmp
cmc
test
cmc
cmc
or
js
jne
sub
shr
rcr
mov
jmp
xchg
pop
daa
jae
lret
movsb
nop
inc
fwait
cli
rclb
xor
shll
jmp
incl
ss
popa
mov
xor
mov
mov
int
stos
fildl
jbe
mov
in
pop
jns
adc
ljmp
add
inc
cmp
out
adcb
or
sbb
push
mov
add
mov
in
test
dec
push
jmp
xlat
das
pop
movb
mov
mov
lea
pushf
pusha
lea
call
pushf
call
dec
lods
inc
jae
lret
xor
pushf
mov
and
mov
adc
test
dec
ret
les
fisttpl
pop
cmovnp
out
sti
inc
das
mov
mov
insl
mov
and
jbe
fnstcw
scas
pop
aaa
sub
lods
mov
mul
jecxz
xlat
mov
lea
or
xchg
and
inc
push
inc
cmp
cmp
xchg
pop
or
scas
dec
jmp
bswap
pop
bswap
pop
pushf
pushl
mov
bswap
pusha
pushf
mov
mov
pushl
pushl
ret
pusha
xchg
lahf
pushl
popl
bswap
mov
setno
jmp
lea
jo
pusha
add
jmp
pop
setl
mov
pop
movzbw
setge
pop
jmp
mov
lret
inc
jl
xchg
enter
fimuls
loop
jp
pop
fcompl
mov
sub
cmp
mov
cmp
sbb
jae
mov
push
mov
inc
in
push
lret
lds
inc
mov
push
inc
push
loop
or
push
lods
xor
cmpsb
hlt
sub
sbb
popa
out
push
imul
cs
rcll
jge
pop
pop
lret
and
add
and
mov
loope
mov
mov
pushf
pushf
lea
call
ja
pusha
pushl
pushf
mov
pushf
pusha
lea
jmp
pushf
call
btc
shl
lea
xor
pushf
mov
mov
jmp
call
clc
pushf
cmpb
call
call
call
pushf
call
not
call
and
cmp
lret
cmp
aam
out
xchg
and
push
mov
push
and
arpl
mov
das
jge
mov
cli
aas
jge
pop
or
pop
movsb
pop
daa
cmp
add
daa
cmp
lods
inc
sbb
mov
out
mov
mov
mov
inc
repz
in
pusha
fsubp
dec
or
mov
lock
sub
nop
stos
stc
dec
fimuls
jbe
push
mov
stos
adc
adc
mov
inc
movb
xor
pushf
adc
lea
pushf
jmp
xor
shl
aas
pusha
mov
cmp
stc
cmp
shl
movb
lea
je
pushf
pushf
mov
call
add
inc
js
je
jb
arpl
jae
pop
pushf
pushf
movb
pushl
ret
dec
lea
jg
pushf
bt
pushl
rol
jmp
mov
ret
cmp
sbb
setp
sbb
sub
lea
xor
and
push
dec
sbb
fnsave
push
add
xchg
pop
aas
jmp
dec
pop
fsubrs
add
mov
jecxz
jnp
mov
dec
adc
hlt
scas
adc
sub
push
adc
dec
hlt
mov
pushl
popl
pusha
mov
pusha
push
pushl
ret
add
dec
outsl
arpl
inc
jb
gs
add
loope
rolb
xor
add
sub
and
add
sti
mov
add
mov
shrd
dec
btc
sbb
mov
stc
pushf
pushf
pushf
sub
pusha
pushf
rep
jmp
movl
jmp
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
das
add
popa
xchg
outsl
push
lret
xor
xchg
pusha
in
out
aam
cmp
sbb
mov
xchg
adc
mov
jp
jg
sti
das
dec
in
sub
mov
icebp
std
std
hlt
xchg
lock
adc
lock
pushf
adc
lahf
lahf
mov
sbb
adc
jae
loope
fs
into
ss
arpl
jg
fistps
in
movsb
add
pusha
jp
dec
cwtl
jl
fisubrs
enter
rcll
cmp
mov
sar
imul
inc
push
shll
out
cmp
roll
iret
pop
jno
mov
sbb
push
test
push
outsl
js
push
jge
fsubl
cmp
shlb
nop
call
xchg
stc
or
pushf
call
lea
je
shrd
cmc
and
sub
add
sar
mov
or
cmp
bsr
mov
shl
rcr
shr
rol
sbb
and
mov
test
cmp
or
call
dec
call
mov
not
call
xchg
xlat
pop
outsb
push
lret
adc
fldt
jge
stc
stos
sbb
cli
mov
outsb
adc
dec
sub
pop
xchg
mov
adc
xchg
cmp
out
mov
mov
in
fnstsw
xchg
icebp
jbe
mov
pop
int
jo
das
stos
dec
sub
int3
inc
cmp
jae
adc
dec
lret
sbb
dec
sub
mov
and
ljmp
repnz
call
push
adc
movb
pushl
lea
jle
pushf
lea
jae
call
pushf
test
pushf
pushf
pusha
lea
je
not
pusha
add
and
mov
pushf
push
movb
add
stc
test
mov
lea
bts
add
movw
mov
clc
cmp
push
jmp
push
movb
movl
call
push
movl
pusha
lea
jmp
repnz
fildll
cwtl
lods
lahf
lret
js
fmulp
sti
push
jle
gs
hlt
push
sti
notl
ss
inc
js
pusha
push
inc
sub
cs
aam
inc
add
mov
ja
mov
lcall
push
in
stos
pop
jno
cs
mov
sbb
push
lret
out
mov
push
popf
in
pop
stos
jge
popf
rolb
jno
mov
mov
xor
push
daa
cwtl
call
rol
scas
test
mov
pop
mov
pusha
push
std
cli
cmpsb
stos
mov
loope
dec
shrl
repnz
jp
repz
xchg
add
xor
pop
inc
or
mov
aam
lods
push
jp
inc
xchg
dec
icebp
and
jecxz
hlt
rcr
jge
and
or
jmp
mov
jbe
mov
add
imull
add
orb
cmp
call
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
inc
in
hlt
imul
mov
jns
push
pop
dec
lea
cmpsl
test
jo
shlb
stc
dec
cmp
mov
sub
and
movsl
dec
test
dec
xchg
or
leave
and
push
scas
cmpsl
cmp
lret
xchg
xchg
or
xor
out
push
leave
cmc
lea
out
push
dec
imul
fdivrl
std
ret
clc
stc
sahf
adc
lret
pop
and
test
fistpll
test
push
mov
data16
xor
mov
out
das
loopne
lods
fstpt
sub
push
cwtl
ficomps
jle
and
cmp
dec
mov
xlat
fdivrl
sbb
aam
je
add
cmp
xchg
insb
adcl
or
cmpsl
cwtl
inc
jmp
leave
scas
and
and
adcb
add
lret
shr
mov
pop
loope
cmpl
push
cmp
lahf
inc
cmp
add
cmpsb
aas
push
jmp
call
lods
lret
pop
push
lret
cld
fsubr
std
fcomp
mov
out
sub
arpl
inc
lcall
xchg
add
bound
mov
pop
and
jl
jg
and
dec
mov
xor
stc
push
imul
push
addr16
xchg
push
cmp
mov
cwtl
jg
lret
ja
pop
jb
movsb
cmpl
out
sub
adc
aaa
or
lods
je
push
jo
clc
test
rcll
and
add
mov
inc
push
test
movl
push
pusha
lea
jmp
not
mov
call
outsb
or
lcall
stos
pop
imul
cmpl
lret
ja
stos
dec
inc
stos
inc
mov
push
add
push
mov
stc
aas
add
xchg
sub
cmc
leave
jbe
push
lret
mov
push
and
jecxz
clc
mov
push
imul
aaa
pop
inc
and
loopne
lods
push
mov
push
push
inc
or
push
jmp
xor
push
add
jbe
push
loopne
inc
pmaxsw
sub
pop
inc
cld
push
inc
xchg
xlat
sub
xchg
add
add
and
or
popa
push
inc
adc
rcrb
push
push
fs
pop
xchg
sbbb
push
push
cmp
jne
dec
gs
cltd
fisubs
add
and
pusha
jmp
pop
les
inc
js
leave
jmp
cmp
pusha
or
call
pop
aas
mov
push
lret
mov
and
jmp
stc
mov
xchg
lods
or
mov
pop
or
out
addr16
cmp
fcoml
lahf
cli
mov
aad
jne
scas
into
push
or
ret
pop
cmpsl
test
mov
mov
push
push
xor
jne
sub
dec
cltd
pushf
inc
inc
mov
fsubs
pop
test
test
leave
sbb
dec
movhps
rol
into
fisubl
test
xchg
shlb
in
outsb
mov
mov
inc
mov
push
out
incl
cmp
push
push
jbe
rcr
mov
jg
cmp
inc
inc
hlt
xchg
outsb
adc
dec
inc
sbb
mov
mov
xor
cmp
inc
int3
ds
scas
adc
cld
shlb
loope
jmp
into
adc
xor
inc
js
fwait
popf
push
mov
jge
shlb
and
cmp
jecxz
push
mov
jge
push
xor
xchg
call
dec
mov
jge
andl
loop
jecxz
xorb
mov
adc
xchg
mov
sbb
jg
rcl
sub
mov
dec
xor
push
pop
push
push
push
mov
push
out
push
addr16
xor
add
cld
aaa
mov
jae
add
pop
add
mov
test
xchg
inc
in
ret
add
sbb
lcall
push
cmp
lret
mov
adc
shll
js
imul
jge
mov
push
add
sbb
lock
out
ret
mov
movsb
mov
mov
jle
push
test
mov
lock
push
push
out
ljmp
loope
xorl
insb
fisubrs
icebp
int
icebp
data16
mov
xor
dec
sti
fwait
push
adc
loope
cmp
add
roll
out
aad
inc
cmp
jge
ds
not
or
push
push
notl
aad
push
lret
lcall
and
jecxz
xchg
je
push
xor
pop
cmp
add
push
mov
pop
jnp
add
cld
nop
test
pop
jecxz
clc
cmp
pop
mov
push
dec
xor
aaa
push
dec
mov
cmpb
cltd
scas
cli
stos
lds
mov
les
shrl
and
xor
sub
mov
data16
mov
jl
add
xor
hlt
imul
lret
or
jge
andb
and
jne
and
mov
pusha
dec
dec
sub
bsf
bt
bsf
lea
lea
test
sub
test
jmp
lea
jae
pushf
lea
jne
jmp
popl
adc
lret
pop
shll
fs
cmpsl
dec
jne
xchg
mov
mov
jp
mov
xor
adc
les
in
mov
loope
jge
mov
test
mov
jge
xor
mov
ret
lret
outsb
xchg
cmp
insb
lock
out
xchg
lods
cmp
fbstp
dec
je
out
jno
jle
sub
push
sbb
imul
stos
add
cmp
out
xchg
daa
jge
clc
popf
sbb
aaa
adc
movsl
xor
fistpll
dec
cmp
pop
mov
dec
pushf
xchg
clc
clc
loopne
mov
pop
stc
mov
push
aam
xor
loop
cmp
ficoml
inc
shrb
xor
nop
fldenv
int3
ja
add
adc
lret
inc
sbb
sti
in
mov
push
cmp
test
lea
jne
push
pushf
mov
pushf
pusha
call
push
pop
movzwl
call
inc
clc
pusha
pushw
popfw
jmp
pushf
lea
jae
push
push
pushl
lea
jne
jmp
call
call
movsb
int
fs
lret
aad
push
add
inc
mov
nop
inc
repz
xchg
fidivs
or
push
mov
pop
lods
jbe
jne
mov
xchg
sub
in
cld
jns
push
inc
cli
aas
pop
or
pop
xchg
and
sbb
es
loopne
sbb
mov
mov
xchg
xchg
add
jo
aad
nop
xchg
jne
or
outsb
pop
in
jge
jle
fstpl
and
xchg
mov
xor
ljmp
xchg
icebp
stos
aaa
popf
test
cli
cmp
xor
jmp
test
sbb
lret
push
push
jns
pop
dec
pop
dec
mov
or
xchg
loope
lcall
cmp
rclb
fdivs
nop
xchg
int
in
ss
adc
xor
mov
rol
div
dec
dec
pushf
lock
popf
jg
cwtl
jge
cwtl
es
outsb
push
mov
jns
or
sahf
xchg
inc
push
inc
ret
push
in
xor
push
xor
inc
pop
loop
or
and
xchg
jno
jnp
jae
arpl
inc
clc
and
aam
and
and
popa
adc
fldt
bound
and
mov
jne
es
mov
cs
dec
mov
stc
loope
shll
arpl
ja
mov
sub
pop
sub
int
xlat
fs
fs
hlt
cli
push
outsl
add
ja
cmpsl
inc
outsl
stos
inc
sub
divl
shl
movsb
xchg
test
adc
cli
aas
sbb
aam
repnz
xor
repnz
push
or
sbb
xlat
xchg
sbb
push
insb
sarb
jl
sbb
cmpl
ret
sbb
neg
fnsave
xor
xchg
xchg
cmc
xor
add
jmp
and
add
in
xchg
in
pop
in
pop
pop
insl
jg
mov
push
jnp
sahf
mov
sub
aas
push
outsb
sti
aaa
xorl
mov
sub
in
lock
jmp
jne
js
lahf
sbb
push
out
or
push
out
and
cmc
in
push
push
or
sub
in
loop
out
pop
mov
mov
repnz
push
pop
adc
dec
hlt
lock
lret
cs
fldt
das
pop
mov
mov
lods
xor
daa
inc
dec
add
xchg
repz
xchg
pushw
push
sub
movsb
stc
inc
inc
add
stos
sub
lds
movsb
flds
fs
shll
mov
push
xor
jmp
pop
punpcklwd
das
decb
fldl
lods
sarl
lahf
or
jne
pop
jbe
into
pushf
push
sbb
fsubrp
push
mov
inc
pop
push
out
push
adc
cmc
push
jne
shrb
inc
test
sub
pop
cmp
mov
xor
repnz
rcrb
stos
int3
xchg
das
cs
cmpsb
sbb
stos
jle
lods
push
or
or
imul
sahf
push
test
shr
cmp
sti
out
cmpl
jo
das
mov
gs
dec
insl
xlat
sbb
popa
push
lret
xor
jne
mov
mul
xor
jmp
jb
cmp
fdivrs
and
fidivrl
mov
into
cmp
sub
sub
pop
mov
sub
xor
mov
xor
mov
and
add
mov
xlat
add
push
dec
adc
mov
das
pop
cmpsl
pop
arpl
fadds
lock
ret
sarb
pop
in
rdmsr
sbb
mov
sarl
aas
ljmp
mov
scas
push
ljmp
movsl
fisubl
cmp
mov
push
pop
in
mov
andl
in
xchg
adcl
cmc
pusha
adc
xor
xorb
push
adc
cmpsb
jno
pop
pop
mov
out
adc
stos
mov
cmp
insb
out
lcall
in
sarl
jnp
pop
add
push
aam
loop
dec
movb
jns
adc
jno
repnz
or
mov
mov
mov
adc
and
xchg
scas
out
xchg
lock
mov
sbb
push
scas
push
in
or
xchg
jle
sbb
jge
pop
and
push
add
lea
jne
pushf
mov
pushfw
popw
cmc
rcr
mov
call
call
jmp
pushf
jmp
call
movw
lea
je
jmp
push
movb
mov
pushf
not
mov
pusha
pushl
ret
mov
adc
pushf
movb
pushf
lea
jmp
jns
jno
push
lret
inc
test
test
shl
pop
call
icebp
push
mov
incl
mov
dec
ds
test
jbe
movsl
dec
scas
cmp
inc
repz
mov
and
add
gs
pop
daa
jnp
js
ds
pusha
cmp
mov
jmp
stos
mov
cli
dec
mov
mov
movsb
sub
jmp
test
push
mov
xchg
insl
movsl
testl
cmp
fcomps
lds
es
es
jecxz
mov
or
jae
out
mov
divl
adc
sub
jb
push
cld
mov
and
pop
mov
inc
clc
push
js
push
in
movsl
fwait
les
xchg
mov
push
push
push
ficompl
lret
xchg
sub
enter
cmc
cld
adc
fldt
inc
rclb
data16
xor
pop
dec
cmp
outsl
sbb
pop
daa
cmpsl
mov
scas
and
lcall
xor
fwait
xor
mov
bound
dec
jno
mov
adc
popa
add
pusha
inc
xchg
movsl
imul
pop
sbb
xor
inc
cmp
enter
iret
aam
xchg
lods
imul
test
mov
rcll
and
jmp
pusha
movl
movb
mov
push
pushl
lea
jmp
pushf
rep
not
movw
lea
mov
mov
pushf
pushl
push
lea
jmp
ja
ficompl
lret
loop
es
aad
mov
push
loopne
mov
sbb
jae
and
jae
lahf
cmc
mov
pop
pop
xchg
jmp
push
pop
xor
jg
shrb
dec
push
test
inc
pop
aaa
add
pop
mov
jmp
dec
sub
push
into
push
push
lods
mov
xor
les
mov
not
call
mov
adc
mov
or
cld
les
jne
insb
scas
mov
mov
gs
jno
mov
pop
mov
test
xchg
jo
cmpsl
test
in
cmp
xchg
xchg
js
out
mov
hlt
cld
sub
lret
cmp
stos
dec
movsb
daa
into
jp
fnstsw
pop
ja
jecxz
cmp
pop
popa
fwait
incb
leave
fdivp
nop
add
xor
iret
mov
out
mov
lcall
mov
or
adc
imul
sarl
add
mov
mov
inc
cmp
xchg
cltd
aad
pop
enter
loop
mov
or
hlt
dec
push
ja
je
fsubrl
test
cmp
inc
aaa
sub
xor
xor
pop
mov
aas
stc
rcll
xor
push
int3
mov
xor
int
jp
sarb
lcall
sub
outsb
loop
int
pushf
adcb
lret
insl
sub
xchg
and
sbbl
pushf
lds
cmpl
and
jno
push
lea
je
bsr
add
btc
sub
movzbw
shr
shr
pushf
inc
movzbl
mov
sbb
test
seto
clc
add
push
cmc
add
lea
inc
movzbw
mov
pushf
call
call
movl
jmp
ja
ficompl
lret
loop
add
aad
jnp
sbb
mov
xchg
and
inc
sbbb
sub
jg
fdivl
jo
bound
or
mov
hlt
or
sub
fs
add
adc
outsb
cmp
adcb
mov
pop
bound
sbb
xchg
iret
nop
mov
xchg
adc
cltd
mov
in
lahf
bound
xlat
andb
mov
aas
sarl
cld
lcall
ret
mov
xchg
pop
push
mov
fs
jae
setge
mov
pushf
jmp
call
stc
add
pushf
lea
jmp
addb
mov
mov
insl
aas
or
and
fs
xor
js
sbb
out
mov
add
sub
push
jmp
lret
ss
out
lahf
cmpsb
add
inc
xlat
icebp
iret
rcrl
inc
fisubs
fld
push
hlt
int3
and
mov
xchg
dec
dec
movl
jmp
jecxz
inc
pop
push
lret
mov
inc
sbb
shrb
xor
jge
add
mov
mov
test
sub
sub
mov
cld
fs
inc
xor
clc
jnp
jnp
dec
push
mov
mov
push
jns
sub
mov
cli
shll
pop
test
fildll
xor
jl
es
jnp
mov
pushf
mov
mov
in
inc
test
out
jne
inc
jne
lods
xlat
loope
leave
scas
xchg
dec
aam
mov
xor
js
xlat
stos
jle
sarl
mov
add
sub
pusha
call
movl
pushf
push
pusha
lea
jmp
and
andl
pop
pop
shrl
popa
pop
xchg
mov
aaa
int3
int3
xor
xchg
mov
fsubp
outsb
ss
lahf
pop
pop
mov
pop
inc
mov
and
test
aas
cmpsb
cmp
ret
cmp
adc
push
or
insb
dec
lret
mov
xor
call
aam
jns
push
lret
sbb
int3
fmul
cmp
pop
out
mov
sbb
sub
sbb
clc
cmp
mov
sar
and
int3
mov
addb
gs
test
movsb
lcall
and
lea
movsl
test
mov
sbb
fsubrl
lock
lea
in
cltd
mov
aam
leave
sbb
fisttpll
mov
xor
jo
or
and
je
enter
ds
dec
pop
mov
fwait
fwait
jg
movsb
cmpb
cmp
pop
enter
sti
test
jnp
dec
shrl
jp
in
dec
idivl
cmp
push
out
xor
es
bound
inc
clc
jae
in
pop
in
flds
dec
mov
in
inc
mov
insl
jns
add
pop
sti
xchg
sahf
xorb
pop
and
mov
dec
push
and
scas
adc
mov
loope
sahf
mov
sti
pop
push
lret
cwtl
sti
imul
pop
popa
fidivl
jge
push
push
hlt
dec
dec
lock
cmp
inc
mov
pop
add
mov
imul
pop
push
js
xor
xor
mov
sti
xchg
out
or
iret
xor
scas
xor
mov
cltd
cmp
mov
pop
or
aad
dec
cwtl
std
inc
mov
lods
stos
xchg
and
cwtl
ds
cmp
movsb
sti
xor
sti
dec
push
insb
jge
lods
push
add
in
es
adc
mov
pusha
scas
mov
adc
xchg
sub
xlat
xor
dec
sub
outsl
sub
push
xor
adc
jne
jno
cmp
xchg
ds
push
clc
pop
inc
sti
push
lods
xor
jne
jae
imul
pusha
cmp
fldl
fwait
movsl
adc
sub
sbb
cmpsl
mov
in
push
push
movsbw
mov
xchg
mov
lea
movw
mov
jmp
movl
jmp
movw
dec
stc
bt
mov
mov
not
cmc
stc
jmp
aaa
adc
xchg
push
test
pop
push
inc
inc
lock
daa
mov
sub
mov
jmp
inc
lea
mov
inc
and
xchg
sub
sub
aaa
sub
lods
inc
sbb
mov
mov
xchg
shlb
jno
xchg
insl
mov
cmp
fldenv
xchg
nop
divb
dec
clc
cwtl
xchg
test
pop
add
ljmp
mov
shll
shlb
ret
setb
call
inc
dec
pop
push
push
lret
adc
sti
int3
ds
cwtl
or
xor
inc
lret
jo
stos
sbb
test
iret
push
mov
inc
and
pushf
jmp
inc
pop
lds
sub
jb
adc
sbb
pushf
int
xchg
popl
out
js
dec
add
hlt
xchg
and
xchg
and
ret
jne
cmc
lret
dec
rcrl
mov
aad
test
pushf
cmpsl
jp
flds
in
int
mov
cmp
pusha
pushl
lea
call
call
pusha
pushl
adc
push
push
lea
jmp
jno
fsts
lret
jp
mov
scas
pop
scas
cld
outsl
fimull
imul
std
inc
mov
punpckhdq
jo
aam
inc
dec
into
lds
fmuls
xor
cmc
mov
inc
push
jns
fwait
add
inc
mov
daa
cwtl
loop
ja
adc
lea
call
call
pushf
jmp
adc
push
stc
cwtl
clc
call
jmp
movl
movb
pushf
movl
mov
movb
lea
jmp
adc
lret
ret
aaa
test
xchg
in
into
dec
sar
inc
jb
cmp
dec
in
cmp
sub
xchg
bound
adc
fsubr
daa
mov
jl
mov
sbb
push
push
lret
mov
jp
mov
outsb
sti
mov
decb
sar
mov
mov
jne
dec
xor
test
cld
pop
fdivrl
mov
std
out
sub
or
cwtl
stos
fdivrs
xchg
mov
imulb
aam
int3
inc
aas
fisubs
inc
add
xchg
adc
mov
into
ds
push
cmp
jecxz
mov
dec
and
mov
pop
pushf
not
push
mov
movsbw
movzbl
lea
mov
movsbw
movsbl
mov
pusha
mov
pushf
pushl
ret
mov
pushf
lea
jne
mov
pusha
mov
push
pusha
pushf
lea
jmp
mov
call
mov
not
bswap
jmp
movl
pushf
jmp
pushl
pushf
lea
jae
bt
cmc
jmp
cld
cmc
std
push
push
lret
pop
mov
xor
xor
mov
call
inc
in
mov
push
movsb
xor
xor
cmp
cmc
sbb
outsl
xor
test
sbb
dec
jne
rcrb
inc
fsubl
cmpsb
aaa
mov
pop
adc
mov
inc
cmp
jle
xor
pop
sub
pop
fmull
mov
add
fwait
shlb
dec
or
push
and
movsl
sbb
or
ja
mov
les
xchg
inc
jl
fistl
gs
cwtl
subl
sub
and
adc
mov
and
addr16
out
dec
jnp
and
gs
inc
fldcw
jmp
push
or
add
inc
mov
lea
jno
xchg
add
push
insl
aad
push
mov
imul
fisubrl
ljmp
or
rcl
btr
sub
and
aas
shl
push
bts
aas
rol
cmc
push
test
movsbw
push
bt
aam
clc
push
pushf
lea
mov
stc
test
call
xor
dec
push
push
lret
data16
mul
aaa
movsl
jbe
test
or
repnz
in
xlat
adc
ja
push
popf
pop
test
push
fmuls
loopne
sbb
out
mov
aaa
inc
out
popa
cmp
fadds
and
pop
fwait
int
dec
cmp
jns
mov
xor
push
push
lret
add
mov
nopl
jle
jns
pusha
arpl
pop
in
pop
nop
gs
mov
or
dec
mov
hlt
mov
testb
pop
aaa
sbb
inc
loope
or
loopne
cmpsb
mov
mov
loope
push
lds
or
cmpsb
out
jmp
jbe
pop
dec
imull
not
not
push
inc
setb
mov
pushf
call
push
lea
call
push
lea
jae
pushf
jmp
xor
lret
push
pop
mov
nop
inc
adc
movsl
push
add
mov
mov
icebp
aam
mov
sub
in
xor
inc
add
dec
cmp
xor
push
or
pop
sbb
outsl
xchg
adc
aas
xchg
jecxz
sub
cli
jnp
das
es
add
fbld
cltd
imul
sub
xchg
call
pop
test
cwtl
jmp
inc
adc
test
imul
outsb
xor
stos
int3
stos
jle
adc
dec
add
push
ss
sbb
lret
jmp
push
mov
insb
loopne
jecxz
xchg
inc
mov
lock
es
or
pop
cmp
inc
mov
leave
imul
pushl
xor
cltd
mov
loope
dec
hlt
es
sahf
cmpsb
repz
hlt
xorb
sub
or
mov
push
pop
test
lcall
pop
test
sub
adc
repz
popa
out
mov
ror
jo
jne
shrb
aad
mov
dec
rol
cmp
movl
mov
jmp
lea
call
pusha
pusha
adc
call
in
push
push
pusha
pushl
movl
movb
call
call
pushf
movl
pusha
lea
jnp
pusha
pushl
movl
push
pusha
lea
jmp
jne
gs
xor
fs
insb
add
out
cmc
ljmp
imul
mov
cmp
idiv
js
lock
imul
lea
in
mov
test
clc
std
pop
adc
adc
lret
ds
pushf
cltd
test
fdivs
jg
sub
movsl
push
jle
xchg
inc
aam
xor
aad
jo
dec
outsl
jecxz
popf
nop
add
fsubl
mov
push
xchg
decl
imul
pop
into
adc
cmc
imul
test
mov
arpl
inc
adc
fsts
pop
jmp
jmp
test
mov
inc
pop
and
jo
push
pusha
cs
lea
cwtl
or
adc
lods
data16
loop
lret
inc
mov
mov
fcompl
pop
movsl
out
shr
ret
dec
mov
adcb
sbb
xor
xchg
lret
push
movsb
rcrl
movsb
sti
mov
push
lret
out
call
fisubrl
dec
pop
push
cmp
testl
je
mov
clc
stos
sub
jne
pusha
jmp
pop
jne
mov
std
add
stos
sub
jl
sub
dec
cmpsl
add
loop
rcl
sbb
sbb
pop
movsl
fsub
aam
push
jp
pop
cmp
int
sbb
inc
inc
clc
push
mov
pop
jp
ret
dec
jb
bnd
mov
cmp
xchg
fisubs
add
push
movb
pushf
mov
lea
jmp
popf
rdtsc
nop
pushf
call
pop
repnz
lret
and
popa
in
out
push
aas
xchg
adc
cmp
loopne
shrl
sub
xor
ret
mov
adc
add
pop
xchg
std
loope
pop
icebp
outsb
cmc
iret
xor
push
outsl
cmc
pop
out
popa
dec
std
in
xchg
es
cmc
lea
mov
movsl
mov
dec
mov
mov
push
lret
pop
insl
mov
cmp
push
popa
lcall
adcb
in
js
std
lods
mov
mov
sbb
push
xchg
call
and
popf
pop
sub
ss
xor
in
dec
xchg
and
shrl
mov
add
cwtl
mov
xor
lods
mov
mov
adc
dec
repz
mov
cmc
aam
dec
push
lret
sbb
push
and
or
push
lds
or
fsubs
cmp
sbb
sbb
andl
aad
es
shrb
cmp
incl
push
data16
in
xor
or
shlb
cmp
movsl
adc
push
mov
mov
popa
lods
sbb
mov
ret
test
frstor
pop
sbb
mov
xchg
das
mov
hlt
push
push
orl
mov
mov
add
mov
call
push
lea
je
push
mov
push
pusha
xchg
movsbw
pusha
lahf
movb
movl
cwtl
lea
call
call
push
adc
push
pusha
push
call
cmp
loop
push
lret
rclb
push
addr16
adc
rolb
out
xchg
mov
test
jo
cmp
sub
popf
dec
sbb
in
mov
ds
and
jmp
dec
xor
js
inc
js
int
or
scas
icebp
sub
movsl
lret
cmp
mov
pop
std
std
mov
xchg
fs
ret
je
cld
cmpsl
fistpll
imul
ss
sarl
in
sub
shlb
push
pop
movl
mov
out
adc
fwait
xor
cs
add
push
movsb
inc
mov
inc
in
xchg
push
mov
hlt
adc
mov
sub
not
enter
rolb
jge
pushf
movw
lea
call
call
movw
push
lea
call
jmp
pushf
lea
ja
pusha
pushf
inc
inc
not
jmp
or
rorl
lret
pushf
out
out
cmpsb
rolb
xor
push
and
jae
cmp
cwtl
addr16
jg
ret
and
pop
pusha
dec
into
mov
js
call
fs
std
out
push
mov
lock
adc
lock
inc
out
and
jge
adc
dec
push
lret
dec
testl
xor
shl
daa
pop
shl
sub
je
ja
sbb
imul
mov
nop
mov
mov
cli
aas
dec
in
std
inc
push
mov
mov
adc
outsl
fldenv
jno
mov
push
outsb
mov
fs
jne
pusha
mov
call
into
adcb
int
into
stc
mov
scas
fisttpl
out
jle
cld
aad
mov
repnz
cmc
jbe
fisubrs
pushf
inc
cmp
stos
mov
pop
ret
int
cmp
dec
push
or
cmpxchg
push
das
jae
pop
inc
mov
into
cmp
mov
movzbw
mov
lahf
mov
lea
pushf
push
mov
lea
lea
pushl
popl
not
push
pusha
movl
movsbw
call
jmp
jmp
inc
shrd
mov
stc
push
mov
and
clc
call
mov
mov
push
lret
push
je
push
loope
mov
mov
inc
or
data16
pushf
xor
insb
sbb
push
int3
mov
push
xchg
sub
insb
mov
clc
push
pop
testl
cmp
mov
adc
inc
xchg
loop
mov
pop
out
fildl
bound
mov
push
test
pop
hlt
xchg
lret
ficomps
adc
xchg
mov
inc
mov
imul
clc
insl
stos
mov
push
jmp
adc
in
xchg
adc
call
mov
lea
pusha
pushf
jmp
pushf
pushf
or
movb
lea
je
jg
not
mov
lahf
pushf
mov
jmp
lea
ret
pushl
movb
inc
jmp
pusha
adc
movw
pushf
lea
jae
pushf
pushl
jmp
mov
sub
mov
aad
mov
aaa
arpl
and
sti
add
nop
ds
fildll
push
inc
push
pop
icebp
inc
in
sub
sbb
xchg
lahf
insb
aas
push
xchg
mov
add
pop
and
movl
xlat
sub
xchg
jae
mov
inc
inc
pop
loopne
cmp
push
dec
push
lea
pop
jno
push
ds
fwait
js
andb
int3
inc
push
lret
dec
sub
outsl
lret
and
sti
dec
and
mov
inc
jl
ret
sbb
add
dec
lcall
sub
in
xor
ds
loope
ljmp
cmpsb
fisubl
sbbl
cmp
mov
loop
cmpb
repz
daa
mov
dec
xadd
mov
bswap
rcl
btc
add
bts
bswap
not
add
movb
mov
mov
shr
stc
call
pusha
movl
jmp
lods
jecxz
inc
push
lret
jl
adc
xchg
test
outsb
cmc
mov
mov
add
daa
bound
push
mov
jecxz
lret
out
jge
adc
jmp
mov
sbbb
pop
imul
cmc
pop
lea
je
movzbw
not
call
stos
mov
dec
push
or
insl
movsl
add
and
xchg
and
sar
mov
push
cmpsb
pop
cmp
insl
sbb
mov
sbb
dec
das
shl
push
cltd
lcall
in
rorb
mov
data16
xor
xor
dec
jp
add
bound
mov
mov
xor
aam
insl
mov
ss
push
jae
jl
test
xchg
or
jp
ret
outsb
imul
leave
xchg
mov
dec
mov
xor
jg
ret
mov
test
adc
insb
stos
adc
arpl
jp
shll
jbe
cmpsl
jl
mov
pop
and
xchg
mov
cmp
jg
jg
cmp
pop
mov
imul
bt
shl
pushf
pushf
lods
clc
stc
stc
ror
movl
call
pushl
shr
cmp
test
bt
cmp
jmp
pushl
movl
pushf
pushf
pushl
popl
push
pushl
ret
cmp
pusha
pushl
pushw
popfw
movb
jmp
aas
clc
insb
inc
push
lret
add
mov
rcrb
sbb
mov
clc
xchg
fwait
int3
jns
push
mov
scas
jns
icebp
pop
std
push
mov
adc
shlb
int3
mov
cmp
repz
aam
test
fisttpl
mov
stos
js
mov
sub
div
xchg
xor
sbb
mov
daa
or
ds
mov
xchg
sub
push
imul
xlat
or
sbb
pusha
inc
call
ljmp
xacquire
in
inc
push
test
rol
xor
cli
cmp
popa
sub
jbe
mov
mov
fiaddl
repnz
inc
sahf
push
loope
iret
hlt
mov
je
aas
and
jne
out
sbb
and
sbb
fldenv
inc
lcall
aaa
adc
hlt
js
push
lret
adc
and
xchg
inc
jne
xchg
lock
ror
cmp
stos
push
push
sub
jo
stos
inc
les
popa
ror
mov
int3
xlat
loopne
adc
sub
cwtl
xor
push
jecxz
push
cmp
sbb
push
sbb
shlb
scas
call
dec
jmp
ror
call
lea
jne
bts
mov
test
pusha
clc
movb
add
bt
call
orb
inc
push
lret
pop
and
inc
ja
push
inc
pop
shll
ds
movsl
shr
jp
addb
jae
test
jo
push
lds
sbb
push
inc
cmp
sbb
dec
xor
inc
xchg
mov
lea
cmp
fbld
or
sub
bound
movsb
aam
mov
cli
movsb
pop
pop
loop
jno
push
dec
push
setb
testl
mov
mov
sbb
pushf
jmp
pusha
jmp
pushl
stos
pushf
mov
call
push
pushl
jmp
lea
jno
ja
cmc
add
pusha
or
pushf
lea
je
clc
call
imul
mov
scas
push
mov
ret
pop
jbe
mov
ret
mov
xor
mull
rol
xor
std
pop
outsl
adc
sub
pop
stc
in
push
add
pop
adc
xlat
cmp
in
std
cmp
shll
std
jb
inc
push
lret
jnp
xlat
loopne
xorb
dec
inc
rcrl
adc
xlat
in
dec
xor
pop
jo
xchg
push
sub
mov
enter
pop
in
add
mov
unpckhps
xchg
int
test
xchg
sub
mov
negl
jecxz
mov
xor
inc
mov
nop
stos
int3
fs
inc
jb
adc
jo
or
aas
push
adc
shll
out
sbb
lea
inc
cmp
pop
add
mov
lods
mov
pop
cmpsb
jecxz
pop
inc
shl
bt
xchg
setbe
bswap
test
and
mov
test
mov
clc
mov
bsr
call
add
push
pushl
pushf
mov
lea
jmp
jmp
call
str
pushf
pusha
pusha
call
mov
pop
inc
push
lret
sti
fwait
or
bsr
or
stos
out
pusha
adc
pushf
cmp
mov
out
dec
jne
jbe
push
repnz
stos
push
loope
cmpl
add
lret
adc
aas
pusha
lret
dec
mov
insl
mov
faddl
mov
ja
or
push
popf
out
std
cwtl
sbb
pop
mov
cmp
fs
out
mov
mov
mov
xor
scas
jno
cmp
movl
arpl
inc
push
lret
daa
mov
xchg
and
aaa
and
and
cmp
mov
cmc
pop
add
fidivrs
sbb
mov
inc
xor
sub
pop
jno
sbb
movsb
xchg
lods
sub
outsb
clc
aas
loop
and
mov
iret
mov
adc
mov
mull
xchg
sbb
pushf
lea
je
call
jmp
add
dec
outsl
popa
fs
imul
add
jp
shll
jae
jge
movsb
push
or
test
push
mov
xchg
call
xchg
test
insb
pusha
inc
imul
enter
jbe
cs
mov
aam
lock
mov
shlb
pop
sbb
add
lahf
loop
mov
pop
pushf
mov
call
lea
jne
pushf
stos
pushl
pushl
lea
jmp
subb
hlt
ret
mov
xchg
and
stos
dec
or
mov
or
xlat
ljmp
cwtl
mov
popf
pushf
xchg
aas
ror
fldenv
add
jg
cmpsl
pop
lahf
xorl
jae
mov
aas
and
mov
cld
ss
outsl
cmp
add
jl
cli
add
test
add
mov
add
mov
dec
aas
push
lret
pop
stos
sbb
shll
dec
push
ljmp
std
hlt
dec
cmpsl
cmpsb
jae
aam
adc
scas
and
mov
sbb
sarb
mov
pop
jl
lods
xchg
mov
inc
jg
std
cmp
xchg
test
adc
sbb
jmp
in
mov
lock
xchg
out
and
lret
sbb
cmp
sbb
nop
out
or
dec
clc
xchg
sti
or
cmp
pop
int
lret
mov
outsl
mov
push
into
dec
sbb
sub
movsb
sbb
popa
pop
inc
ja
shrb
dec
add
xchg
mov
pop
mov
es
lret
aad
xchg
or
into
xor
mov
or
lea
ds
lret
mov
jecxz
test
adc
mov
repnz
adc
sub
cs
dec
sbb
call
cmpsl
sub
aam
xchg
sub
popf
bound
frstor
jmp
test
jmp
mov
call
mulb
jae
insl
lods
mov
jecxz
push
or
and
xor
int3
cltd
out
cmp
sbb
mov
lock
mov
xchg
sti
stos
fistpll
mov
lock
mov
or
sub
loope
dec
js
mov
pushf
arpl
jno
pop
in
add
jne
pop
pop
and
adc
mov
out
xchg
in
push
lods
or
push
lea
call
pusha
call
inc
add
jb
push
movsb
fwait
cli
adc
cmpxchg
push
mov
scas
enter
dec
in
rolb
test
loop
loopne
inc
sbb
cmp
or
movsl
sbb
shlb
mov
movsb
or
dec
pop
addr16
test
ljmp
shlb
lods
sbb
fldl
insb
iret
jbe
mov
or
pop
dec
lock
push
cmpsl
dec
data16
int
es
inc
xchg
mov
pop
cmpsb
mov
leave
out
addb
incb
ljmp
repnz
xor
xchg
outsl
jb
push
scas
jnp
mov
jle
cmpsl
ret
cmp
ss
xchg
add
inc
icebp
add
clc
jmp
sub
jecxz
xchg
pop
and
subl
jle
lcall
lods
and
clc
aas
sbb
mov
movsb
cmp
sbb
shlb
push
jno
stos
push
movb
dec
call
bound
push
and
inc
jno
push
movsl
shl
aaa
and
ret
and
aaa
xor
add
pop
mov
aas
fildl
test
out
fisubs
clc
aas
push
in
adc
fsubs
inc
cmp
in
lret
jno
scas
push
xchg
dec
imul
jl
cmp
mov
leave
or
fprem1
cmp
cmpsl
jecxz
int3
dec
sbb
cmc
mov
stc
movsl
out
rcrb
push
jmp
fldcw
xlat
test
xchg
fldenv
jno
cmp
jmp
lea
je
pushf
cmp
lea
pusha
pushl
ret
jmp
inc
test
imul
or
cmpsb
cmp
daa
inc
adc
mov
adc
adc
mov
and
dec
aas
fsubs
mov
mov
jno
pop
popf
xchg
inc
test
insb
add
bswap
sbb
cmp
or
jp
ret
xor
pop
lret
scas
xchg
and
aaa
roll
or
imul
jp
in
pop
mov
imul
jb
inc
iret
mov
sub
push
shlb
lret
jbe
jne
push
pop
mov
jne
or
nop
insb
xchg
repz
ljmp
and
js
or
lret
pop
insb
pop
or
jl
fsubrl
xor
in
cmp
imul
aaa
hlt
sahf
push
jmp
or
ljmp
inc
jbe
sbb
mov
add
ret
es
pop
int3
in
lret
pop
dec
cmp
aad
es
jne
cmp
ja
mov
push
mov
sub
xchg
int
xchg
aas
roll
add
movsl
adc
popf
mov
push
lock
xor
xchg
dec
mov
cmp
je
sbb
movsbl
pusha
call
pop
push
lret
and
outsb
cmp
jge
gs
xchg
sbb
shr
lods
xor
mov
out
jne
adc
xor
inc
leave
mov
xchg
xchg
arpl
std
pop
ja
push
dec
xor
shrl
lcall
fwait
leave
in
jo
sub
pop
bound
cmp
mov
mov
test
data16
pop
cmp
sub
xchg
test
mov
int3
or
popa
xchg
inc
icebp
addr16
inc
push
and
and
addl
sbb
cmc
loopne
lods
push
imul
mov
hlt
add
add
imul
jp
mov
mov
pusha
cli
push
pop
or
xor
xchg
insl
mov
aaa
shll
xchg
or
xchg
aas
sub
cmp
xor
xor
pushf
in
mov
dec
into
cmp
ss
ljmp
lock
xchg
cmp
xchg
sbb
imulb
xor
jae
ss
arpl
sbb
push
push
cmp
pop
fs
inc
xor
sub
mov
jne
outsl
movsb
gs
cwtl
mov
adc
ret
lock
int3
jbe
inc
dec
outsl
push
adc
mov
adc
cmp
nop
push
mov
int
mov
adc
or
movl
call
pusha
add
movw
pushf
mov
pusha
lea
je
jmp
pushf
cmp
push
pushf
mov
jmp
inc
movw
pusha
pushf
shr
pushf
lea
je
pusha
push
jmp
or
lret
aas
push
out
and
cli
fwait
xor
mov
sub
imul
test
iret
cli
or
jg
jne
hlt
sbb
std
pop
mov
imull
xchg
push
cmp
in
popa
bound
movl
xchg
mov
pop
or
movsl
fisubl
mov
test
insb
cmp
add
paddb
aas
dec
icebp
add
pop
or
push
in
mov
mov
test
shlb
mov
std
pop
rorl
or
add
insb
cmp
jbe
bound
cmpsl
and
cmp
cmpsb
and
sbb
mov
movsl
dec
outsl
aaa
push
lret
dec
sbb
fisubrs
xlat
lret
push
dec
ja
add
movsl
push
pop
pusha
xor
xchg
and
xor
mov
xlat
mov
mov
shrl
jp
fcoms
cmp
jnp
inc
shl
mov
inc
xor
pop
jns
push
ret
mov
sbb
imul
es
sbb
jmp
mov
mov
pop
or
lcall
fwait
cli
sub
ficompl
dec
jns
scas
xchg
mov
loopne
mov
repz
or
call
insl
test
movsb
jp
repz
aaa
push
lret
cmp
or
sbb
sbb
and
ret
or
mov
neg
dec
cwtl
sub
lods
pop
stos
sbb
hlt
xor
cmp
jp
xchg
sub
inc
and
xorl
mov
int3
lods
out
pop
push
jle
pop
mov
push
out
das
push
iret
jno
test
jae
pop
cmc
mov
mov
out
jns
mov
cmpl
add
loop
push
lock
std
std
xor
sub
shll
jae
sbb
lret
fistpll
mov
pop
int
xor
inc
mov
imul
repnz
aam
pop
movl
js
cmpsb
testl
outsl
dec
je
xchg
cmp
in
xchg
push
xchg
push
xor
ror
jmp
sbb
inc
es
push
lret
inc
aad
xlat
add
and
ret
into
jge
ss
jmp
and
es
inc
popw
sub
jl
sbb
mov
movsb
cmp
jg
fdivrp
aas
sbb
sub
fsub
fisubl
mov
add
jno
clc
jle
test
adc
incl
lret
or
std
in
sbb
dec
cmp
repz
int
dec
ret
mov
sahf
mov
fnstenv
lods
jg
insb
testl
pop
decl
lret
xchg
das
xor
sti
loope
push
cltd
inc
inc
mov
aaa
mov
lret
cltd
lods
jns
pop
out
fwait
int
int
sub
out
mov
pop
ja
mov
enter
jns
bound
sarb
xchg
hlt
fcompl
jle
sub
inc
rcr
repz
cmp
inc
out
rclb
repnz
aas
push
inc
shr
mov
adc
lods
push
pop
out
add
sub
cwtl
push
iret
fcmove
sbb
push
mov
push
or
or
aam
je
push
push
arpl
push
lret
cld
add
es
sti
clc
lds
enter
push
or
dec
cmc
fdivrs
mov
xchg
push
push
scas
sarl
and
fdivrl
add
cmpsb
cs
lahf
repz
aas
add
pop
mov
pop
lcall
cmp
add
inc
aas
cld
test
lea
je
movsbw
lea
pusha
pushl
lea
movsbw
movsbw
call
push
lea
je
stc
clc
add
pusha
mov
movb
lea
jmp
fidivs
xor
lret
add
push
add
add
mov
iret
cmp
add
loop
or
sbb
mov
es
lcall
mov
clc
aas
aaa
xchg
push
lods
pop
mov
and
movsl
jle
cmp
sbb
pop
cmp
add
mov
push
fidivrl
xor
add
out
and
jb
test
scas
pusha
cmp
add
stos
sbb
in
addr16
push
pop
call
add
mov
jecxz
add
mov
xor
dec
hlt
ret
out
and
sub
loopne
cmpsb
xchg
pushf
mov
movswl
iret
mov
packssdw
sbb
testl
xor
inc
aad
jge
fs
shlb
fiadds
stc
loopne
mul
lea
in
mov
xor
pop
lahf
pusha
cmp
pop
daa
push
aad
out
insl
addb
leave
add
pop
cmp
imul
mov
push
icebp
clc
into
mov
nop
ja
test
sub
mov
mov
mov
shl
out
and
pop
ret
xchg
adc
mov
dec
pop
adc
cltd
outsl
jnp
push
pop
test
cmpsl
and
ljmp
pop
arpl
int3
ficoms
test
rol
mov
jmp
push
daa
lret
xor
movsb
sbb
jge
cmp
test
outsb
sbb
psubsb
dec
xor
iret
movsb
or
jne
arpl
insl
shlb
repnz
clc
aas
sbb
jl
add
imul
xchg
push
iret
pop
lret
adc
sahf
jl
sbb
cmp
pusha
daa
lea
jae
clc
dec
mov
pushf
mov
not
bsr
mov
pushf
test
test
sub
call
push
popa
add
xchg
rclb
cmc
and
ret
aas
mov
push
test
lods
push
mov
push
stc
xchg
outsl
mov
xchg
sbb
cmc
mov
cmc
xchg
aam
or
inc
repz
pop
sahf
arpl
loop
mov
bnd
jns
pusha
push
cmp
mov
fadds
stos
dec
sbb
pop
mov
cmpsb
pop
inc
jle
je
dec
or
add
push
xchg
pop
add
push
lock
js
mov
popw
cmc
jg
or
ds
movsl
rol
and
pop
fwait
test
lea
jmp
lea
jl
jae
mov
not
not
mov
dec
dec
jmp
call
pusha
test
test
pushf
movb
lea
je
stc
test
add
cmc
cmp
call
cmp
movb
add
jmp
push
bswap
mov
push
push
push
pushf
lea
jmp
lea
je
pusha
lea
jmp
bt
call
sub
es
out
aaa
cmc
loope
data16
and
aaa
mov
in
and
data16
in
aaa
in
aaa
and
mov
aaa
and
mov
cmpsb
mov
cmc
lcall
lret
dec
sahf
stos
fisttpll
jle
jle
mov
dec
cli
into
cs
es
add
insl
popf
ss
movsl
hlt
clc
mov
push
adc
vmwrite
aas
xor
enter
or
int
lret
jne
xlat
xor
lock
loopne
stc
xor
jbe
fisttps
sbb
mov
sub
push
mov
and
jecxz
clc
test
inc
in
jmp
testb
cmovl
scas
pop
fwait
cmp
add
adc
and
xchg
or
sti
push
jne
cmp
in
xchg
xchg
enter
std
loopne
pop
cmp
xorl
jmp
lods
jns
sarb
sbb
loopne
jecxz
jg
add
xor
insb
and
mov
pushl
mov
lea
jmp
jmp
lods
lock
pop
into
test
lret
push
loop
cmp
jb
cmpsb
push
cmp
xchg
adc
jmp
inc
mov
jb
add
test
arpl
gs
xchg
dec
push
rcr
xchg
bound
mov
jecxz
add
push
lahf
icebp
add
pop
lea
pop
rcrl
push
mov
fwait
xchg
push
sbb
mov
lahf
pop
sbb
repz
scas
and
arpl
push
xor
shlb
xchg
aad
call
xchg
jns
push
pusha
cli
push
add
pusha
mov
iret
and
fldenv
ret
divl
leave
push
dec
jmp
push
xor
bound
xchg
inc
adc
sti
cmp
mov
nop
testl
stc
iret
mov
xchg
push
repz
out
sub
pop
rcrl
or
dec
jnp
push
sbb
and
aas
and
pop
arpl
vxorps
out
jecxz
sldt
jmp
pusha
movw
call
dec
insb
add
push
lret
jno
sbb
sbb
test
pop
cmp
add
pop
test
mov
ret
clc
pop
mov
and
arpl
adc
dec
aaa
dec
imulb
or
adc
mov
sar
jmp
je
or
jnp
mov
fs
call
pushf
adc
movb
lea
jae
pushf
pusha
push
mov
lea
jne
pushf
push
stos
pushf
lea
jmp
lea
je
bt
test
clc
sub
call
movl
push
pushf
pushf
lea
jmp
push
cmp
push
lret
xor
dec
cmp
dec
jns
add
inc
add
aaa
xor
stc
xchg
inc
xor
inc
xchg
inc
jne
in
daa
inc
push
sbb
inc
bound
or
sbb
xor
les
push
mov
pop
out
cmc
xchg
add
pop
addr16
sahf
or
xchg
std
mov
fidivs
adcl
pop
add
cmp
aas
test
pop
pop
xchg
mov
pop
icebp
insb
mov
jp
test
pop
and
adcb
lahf
push
xchg
pop
cmp
inc
mov
mov
and
push
sbb
arpl
xchg
dec
ljmp
and
mov
pop
xorb
cmpsb
adc
adc
test
or
stos
iret
push
mov
rol
fisttpl
hlt
push
in
inc
sub
cltd
add
or
push
rsqrtps
int3
push
xor
mov
call
xlat
mov
fsubrp
jl
cmp
cmp
leave
enter
xchg
subl
push
scas
sbb
pop
movsl
mov
je
das
or
ljmp
cmp
stos
cltd
mov
addr16
add
in
add
pop
stc
ljmp
loop
imul
xor
cmp
and
cmc
dec
insl
push
test
cld
ret
pop
gs
inc
mov
adc
pop
out
fdivrs
stos
aas
sub
lret
xor
lahf
sbb
adc
in
dec
push
stos
jo
inc
sbb
into
pop
sub
or
xorb
jne
jge
sbb
test
sahf
push
jmp
mov
xchg
out
sub
pushf
daa
and
int3
iret
jae
fsubl
or
xor
jecxz
sbb
jle
sbb
aas
cmpb
sub
pop
movsb
jno
mov
xor
push
xchg
lock
test
push
mov
and
mov
xor
adc
cmp
pusha
mov
push
addb
insb
mov
jmp
jecxz
jle
cmp
xchg
outsb
sub
lcall
movsl
fptan
adc
add
out
in
scas
or
dec
test
movsl
xchg
xchg
nop
lods
xor
je
aam
or
and
and
pushf
xchg
add
cmpl
pop
fisubl
and
jp
ja
pushf
sets
inc
lea
pushf
not
call
pusha
call
jmp
pushf
pusha
lea
jae
pusha
jmp
clc
mov
sub
pop
jg
push
sub
jle
pop
mov
or
and
call
adc
jne
jb
test
jo
in
add
movsb
mov
in
pop
clc
aas
cmc
loopne
xchg
jns
leave
cmc
in
aad
adc
or
sarl
jno
cmp
fs
jbe
and
ror
shrd
mov
shr
bswap
sbb
add
shl
clc
shr
sar
mov
setnp
add
rcl
mov
call
popl
sub
and
dec
pop
dec
cli
stos
jp
fstps
mov
add
push
shrb
mov
sbb
int
sub
jl
movsb
jmp
xor
sub
add
out
mov
cmp
pop
and
mov
insb
leave
jae
ljmp
add
add
mov
add
add
add
pop
push
add
repz
add
xchg
adc
xchg
sbb
add
add
les
push
lret
or
shll
push
gs
pusha
mov
mov
adc
mov
enter
je
insb
sbb
inc
sarb
inc
inc
insb
xchg
out
xchg
adc
int3
jno
cmpsl
and
out
loop
dec
dec
imul
sbb
lcall
cli
xchg
and
ficoml
jb
ds
mov
insl
adcb
sbb
loopne
mov
aad
xchg
int3
jo
repz
mov
pop
out
push
mov
xchg
nop
pop
imul
jl
stc
dec
sysexit
mov
pop
push
mov
dec
sub
jbe
xchg
andb
sbb
sbb
pop
lock
inc
push
jmp
mov
pop
int3
push
fists
sub
xlat
pop
mull
loope
fcmovnb
jne
dec
mov
inc
sub
ds
xorb
sbb
test
cmp
jb
addr16
mov
lret
sub
or
xchg
insb
xchg
out
mov
adc
xor
dec
mov
push
cmp
fisttpl
push
lret
outsl
or
or
push
mov
mov
dec
es
inc
jne
testl
push
xor
cmc
rcpps
icebp
shl
sub
imul
xor
in
or
xchg
lds
fldcw
xchg
or
imul
cmc
sub
btr
push
bswap
mov
rol
sar
push
pusha
bsr
shr
xchg
sar
dec
pusha
mov
add
lea
mov
shrd
shr
xchg
btr
bts
clc
mov
cmc
dec
movsbw
not
mov
dec
movsbw
btc
mov
pushf
or
movw
lea
je
cmp
or
pusha
jmp
push
into
daa
push
lret
mov
cmp
jp
mov
xchg
inc
xchg
aaa
cltd
sti
test
mov
push
insl
fwait
in
lcall
das
out
inc
xchg
lods
lcall
jp
dec
xchg
testb
movsl
pop
mov
xchg
repnz
dec
test
sti
ds
jecxz
pop
loop
insl
xchg
movsb
mov
jne
cmp
add
lcall
jo
bound
xchg
add
dec
sub
scas
test
cmpsl
mov
outsb
rol
mov
faddl
mov
loop
das
and
inc
add
add
inc
push
add
add
add
add
add
add
add
cmp
add
cmp
add
cmp
add
add
add
add
cmp
add
lret
pop
jecxz
daa
jl
and
addb
jnp
jne
mov
incb
jae
and
ret
and
push
and
push
or
push
mov
pushf
nop
mov
adc
or
cs
mov
cmpsl
hlt
mov
cmpb
xchg
sbb
fisubl
das
add
inc
int
orb
cmp
hlt
idivl
jo
sub
jae
mov
add
or
jno
data16
mov
sub
cmp
push
mov
adc
jno
fsubr
and
cmpl
jp
mov
cs
aas
add
bound
xchg
test
xchg
push
xor
mov
int3
mov
in
cmp
filds
jl
pushf
and
mov
js
je
sub
push
jbe
xchg
movsl
dec
lcall
mov
in
xchg
es
xor
or
cmp
rcrl
fcoms
sub
out
mov
add
jg
js
fcoml
outsb
jnp
pop
push
xchg
push
inc
pushf
and
imul
pop
push
ret
daa
enter
fisttps
jp
iret
rolb
sub
mov
fstl
lret
fidivl
jae
mov
jmp
jae
int3
jge
xor
shlb
sub
inc
popa
out
mov
call
fcoms
into
loope
out
arpl
pop
cli
testl
xchg
int3
pop
jl
lds
addr16
fiaddl
push
shlb
or
in
dec
scas
les
jne
bswap
xor
xor
xor
xor
cmp
inc
cmp
bound
jmp
push
xchg
mov
jns
cmpsl
sub
mov
mov
mov
push
cmc
aam
sti
dec
repnz
mov
insl
pusha
notl
xor
jns
das
sub
nop
adc
ds
stos
jl
pop
pop
dec
mov
insb
mov
lcall
mov
in
loope
aad
mov
add
mov
mov
fstpt
fwait
clc
and
pusha
pop
popf
lahf
sti
bound
push
mov
mov
mov
push
scas
add
jecxz
jnp
inc
sub
out
ds
cmpsb
mov
dec
addr16
sub
xor
and
bound
xor
out
arpl
imul
jg
jg
sub
fisubrl
mov
push
or
add
xor
pop
dec
jecxz
sub
daa
and
and
jae
mov
lea
stos
add
pop
jl
enter
shl
std
cmpsb
shll
and
mov
mov
cwtl
jmp
dec
mov
push
sbb
xchg
push
xchg
fdivl
xlat
lods
lea
inc
stos
inc
sub
mov
xchg
icebp
sub
or
je
pop
icebp
push
mov
shll
inc
push
ret
pop
enter
adc
out
push
mov
js
pop
scas
fisubrl
stc
adc
xchg
jp
out
pushf
int
insl
lock
subl
pop
fstpt
inc
outsl
xchg
call
stos
test
ljmp
das
imul
fdivp
jo
fs
test
insb
js
insl
loop
mov
mov
insl
lods
dec
sti
pop
jne
hlt
arpl
stc
mov
xchg
pop
inc
mov
fprem1
ja
mov
mov
or
sub
jecxz
and
insb
sbb
mov
cmp
rolb
or
sub
inc
lea
or
andl
adc
jp
xor
gs
sarb
ljmp
and
mov
popa
roll
adc
jge
mov
inc
std
icebp
inc
iret
sbb
inc
push
xchg
xchg
int
loopne
xor
gs
add
pusha
fsubrl
in
jl
leave
pop
js
pop
cwtl
add
aas
loop
mov
and
data16
xor
ss
stos
cmpb
adc
push
sbb
cmp
mov
inc
mov
push
adc
xchg
push
stc
daa
mov
imul
ror
or
xchg
sbb
jg
icebp
jl
mov
push
mov
pop
lock
in
jmp
insl
push
xchg
add
sbb
xchg
push
lds
sub
enter
and
addr16
cmp
adc
addr16
mulb
repnz
scas
addr16
repnz
xchg
pop
cmpsl
adc
lcall
add
shll
adcb
mov
leave
cwtl
xchg
pop
in
sub
negl
pop
xchg
pop
fs
int
mov
in
or
adc
lods
push
pop
js
inc
pop
call
movsl
mov
pushf
mov
outsb
push
cmpsl
jmp
sti
jo
xchg
pop
jo
lcall
xchg
xchg
xor
leave
add
pusha
jnp
lock
mov
std
insb
das
scas
shlb
cld
pop
pusha
sbb
mov
sti
sbb
mov
and
fimull
sub
lcall
in
sbb
inc
inc
dec
jg
mov
inc
adc
in
inc
sbb
mov
lock
cld
popf
fcomps
ficompl
adc
mov
testl
les
movsl
iret
sti
cli
scas
or
daa
inc
es
aam
inc
in
out
dec
fwait
xor
jecxz
mov
dec
subb
add
stos
and
shrb
cli
mov
lret
jp
shll
out
xor
pop
cmpsl
inc
imul
es
out
loop
pop
cmc
movsl
jbe
and
sbb
fnstenv
nop
icebp
aam
pop
push
out
cmc
loopne
daa
lea
fimull
shlb
xor
dec
mov
sbb
sbb
in
rcrb
test
add
sahf
xchg
adc
push
gs
push
mov
hlt
out
pop
cmp
in
in
in
and
es
idiv
add
mov
sbb
xchg
push
push
adc
test
pusha
cli
inc
aam
in
jae
push
or
pop
mov
xlat
popa
adc
jp
sbb
scas
mov
inc
adc
lock
lahf
and
sub
sub
mov
dec
div
sbb
xor
cmp
pushf
mov
ljmp
pop
and
test
enter
or
outsb
mov
pop
pop
or
mov
insl
lods
jp
ficoml
xchg
or
divb
ds
cmp
lods
xchg
filds
lret
sbb
insl
mov
xchg
mov
fsincos
mov
aaa
scas
ljmp
sub
imul
sub
sub
mov
or
jns
repnz
shl
imul
sub
xchg
call
pop
pushf
sub
test
mov
ljmp
add
push
inc
aaa
negl
mov
dec
cwtl
pop
jg
pop
fwait
mov
aas
push
jge
cmp
jno
psllw
xor
sub
push
push
push
ret
adc
sbb
loope
xor
jl
gs
mov
daa
mov
sti
dec
cmp
xchg
daa
fmuls
mov
ja
test
leave
test
jge
sbb
mov
loope
mov
xchg
mov
xchg
cltd
imul
xchg
mov
arpl
out
jb
adc
mov
jmp
jg
test
lods
adc
sbb
cmp
pushf
push
add
in
xchg
cmp
lds
pop
test
add
jg
mov
mov
popa
inc
cmc
cmpsb
daa
into
adc
jne
inc
sti
xchg
add
xchg
mov
dec
or
in
enter
cmp
sub
out
je
mov
push
scas
push
pop
ljmp
sti
stos
daa
xor
inc
stos
jl
dec
cmp
adc
xor
pop
xchg
mov
pop
xor
push
mov
stos
addr16
adc
cld
jbe
mov
nop
cmp
cmpsb
push
push
jno
or
add
push
xor
daa
jp
sbb
outsl
imul
ret
jecxz
in
cmp
push
and
mov
xchg
cwtl
mov
mov
mov
inc
int3
out
xlat
loopne
dec
call
push
ret
arpl
aas
xor
adcl
mov
xchg
loope
test
dec
rclb
xlat
sbbb
and
adc
test
cmp
xchg
sub
mov
dec
movsb
xor
stc
xchg
jnp
push
or
mov
and
adc
and
iret
mov
xchg
adc
iret
jl
xchg
pop
dec
adc
xor
sub
sti
in
clc
test
nop
test
leave
aaa
jbe
cmp
xchg
sbb
xorl
mov
xchg
add
dec
add
push
xor
pop
pushf
pusha
pop
addr16
sbb
inc
movsl
insb
pop
std
cs
popa
pushf
cli
sti
or
mov
push
addr16
notl
jg
or
in
jge
fmuls
ljmp
dec
jnp
sub
and
scas
repnz
fwait
sbb
sbb
cmc
add
mov
or
lahf
ret
mov
ror
shlb
xor
jnp
scas
jp
adc
inc
inc
mov
scas
jg
pop
and
or
inc
mov
es
hlt
in
scas
lods
nop
pop
push
xchg
clc
insb
push
pop
ja
xorb
test
lods
scas
repz
inc
xchg
mov
imul
enter
rclb
push
and
add
xor
sar
push
sub
jne
push
cmp
cmp
ficomps
push
sbb
sub
push
ljmp
loopne
sahf
movsb
addr16
test
xor
fisubrl
fadds
push
cwtl
dec
jne
jb
add
outsb
push
dec
movsb
cmp
sub
push
or
inc
cmp
dec
idivb
xchg
mov
fcompl
fidivrl
cwtl
inc
adc
and
test
xchg
fwait
les
xor
daa
fidivrl
pop
fisubrl
clc
cli
les
sub
cli
fdivrs
roll
les
bnd
dec
flds
adc
out
rorl
fstpl
pop
sbb
loope
rcr
sub
add
xchg
mov
dec
jg
xchg
jns
pop
imul
data16
dec
stos
nop
mov
and
mov
or
jmp
xor
jne
push
neg
cmp
imul
dec
sahf
xor
and
std
ds
mov
or
dec
jb,pt
dec
cwtl
xchg
or
mov
mov
sbb
lret
testb
fmulp
mov
sub
clc
pop
daa
outsl
daa
fisubl
mov
xchg
ljmp
lret
stos
inc
cmp
rcl
decl
sbb
cli
ljmp
test
sub
pushl
pusha
call
aas
jo
sbb
icebp
or
mov
lods
jle
pop
imul
outsl
inc
pop
or
stos
pop
push
cs
aam
rcrl
test
lods
mov
cmp
jmp
shll
dec
sub
ss
scas
imul
aam
xchg
sub
pop
add
mov
mov
bound
or
aaa
test
sbb
cmp
mov
rcrb
and
and
repnz
popf
cpuid
nop
push
movb
movl
push
movl
pusha
push
pusha
lea
jmp
cmpsl
mov
fisubrl
in
sbb
cmp
fs
xchg
sub
sbbb
mov
mov
iret
pop
mov
xor
mov
shl
mov
roll
sbb
cmp
shl
xor
jno
mul
jbe
in
jp
push
scas
push
lods
push
dec
push
pop
fildl
addr16
adc
movsb
mov
pop
repz
xchg
sub
mov
sbb
das
popa
push
push
lret
jmp
fmull
lahf
cli
lods
aas
clc
jmp
shlb
or
loop
push
pop
push
push
das
fwait
sub
fucomp
sbb
jp
pop
dec
cli
adc
idiv
sbb
add
jns
pop
movsb
pop
xlat
dec
clc
call
mov
xchg
push
lret
call
push
repnz
nop
add
in
adc
push
push
dec
mov
idivl
mov
cwtl
mov
insl
addl
inc
les
stc
add
popa
daa
dec
out
sahf
cltd
sti
sahf
out
popl
inc
dec
dec
fdivs
mov
and
cmp
xchg
mov
push
dec
ss
lock
shrl
push
xlat
shrb
lret
neg
and
adc
mov
pusha
call
lea
jmp
rcrb
push
lret
or
pusha
aas
push
or
jge
adc
ja
mov
dec
inc
jns
mov
je
ja
pop
sub
aam
mov
test
leave
in
sbb
cmpl
aad
out
cmp
in
xchg
hlt
pop
or
out
jb
aam
xorl
aam
enter
ss
mov
shll
fldt
popf
xor
inc
jne
fisubs
xor
xchg
dec
push
or
subb
jle
sbb
es
push
call
pushf
seto
inc
jmp
stos
mov
into
pop
or
sti
lods
cwtl
sub
or
nop
das
loopne
and
jge
mov
lock
sub
add
inc
push
shrl
test
push
push
mov
pusha
push
sbb
jno
andb
pop
push
lret
inc
cmp
in
mov
cmp
xchg
pop
or
addr16
inc
imul
rcrb
and
push
das
out
push
add
and
or
scas
mov
bound
test
pop
out
cmp
xor
hlt
dec
cli
je
push
outsl
pop
xlat
jo
pop
aas
sbb
xor
dec
pop
push
lret
push
jecxz
pop
test
sbb
adcl
xchg
arpl
ds
sub
stc
je
lahf
daa
pop
jnp
addr16
inc
testb
cmc
lret
and
push
push
inc
lcall
lahf
enter
out
adc
sbb
add
mov
cld
push
or
cmp
add
cmp
sub
jb
and
mov
push
push
stc
pushf
mov
push
shlb
stos
gs
mov
das
sti
pushf
mov
mov
test
hlt
shrb
stos
push
ja
mov
bswap
pushf
lea
lea
dec
sub
not
movsbw
dec
dec
push
pushf
stc
ror
call
pushf
lea
mov
pusha
pusha
movw
mov
push
movw
pushf
lea
jmp
rep
pusha
std
shr
clc
mov
lea
mov
cmp
pushl
popf
pushf
push
lea
jmp
not
pushf
inc
test
mov
stc
xor
push
cmp
pushf
sub
pushl
call
test
sub
jmp
call
mov
pusha
pusha
pushf
lea
jmp
neg
sub
bswap
bts
mov
pushf
movb
clc
add
pushl
pushf
push
push
lea
jmp
pushf
pushf
jmp
push
pushl
pushl
popl
pushl
pushl
pushf
pushf
lea
jmp
mov
jmp
pushf
mov
movw
call
mov
mov
push
lea
jnp
pushf
pushf
popl
jmp
pushf
mov
mov
and
shl
add
add
btc
add
shrd
xor
sub
call
mov
test
sub
push
movb
pusha
shr
mov
pusha
jmp
call
jmp
sub
js
cmp
push
push
lea
jne
sar
xorb
not
movzbw
pop
pushf
pusha
pusha
push
lea
jmp
rdtsc
mov
lahf
pusha
push
bswap
mov
jmp
mov
mov
pushf
jmp
lea
mov
movb
mov
push
pushf
pushl
lea
jmp
mov
push
pushf
mov
pushf
lea
jmp
jmp
pushf
push
xchg
call
mov
mov
pusha
pushl
lea
jmp
mov
call
movb
call
clc
clc
pusha
add
pushl
push
mov
pushf
push
pushf
lea
jmp
add
push
jmp
movb
push
pushf
popl
lea
jns
pusha
pushf
pusha
pushl
popl
movb
pushf
push
lea
jmp
lea
jne
cmc
call
cmc
push
clc
pushl
popf
pushf
lea
jmp
pushf
popl
push
call
pushl
popl
push
mov
pushf
mov
lea
jmp
call
jmp
mov
push
pushf
pushf
mov
jmp
push
bt
add
pusha
pusha
movw
lea
jmp
jnp
pusha
push
pushl
mov
pusha
call
lea
jle
pushf
mov
pushf
lea
jmp
pusha
mov
pushf
pushl
lea
jmp
pushl
popl
movb
mov
lea
jmp
mov
pushf
pushf
pushf
pushf
lea
jmp
pushl
popl
pushf
pushl
push
mov
lea
jmp
add
pushf
lea
jmp
pushf
mov
jmp
xchg
movzbl
add
push
mov
xor
btc
ror
not
rcr
pushf
dec
stc
add
btc
movsbw
setg
not
rol
or
sub
cmp
test
xor
pusha
dec
pushf
mov
call
mov
movb
lea
jmp
jmp
pushf
pushl
cwtl
sub
mov
shl
jmp
mov
push
pushl
ret
pushl
repz
popl
push
call
pushf
movb
pushf
mov
call
movb
mov
jmp
shl
bsf
shl
mov
test
pushf
stc
add
pushf
pushf
lea
jmp
rdtsc
pushf
xchg
pusha
mov
clc
xor
bswap
ror
mov
clc
pushl
bt
movb
add
pushf
pushf
pushf
jmp
bsf
daa
mov
bt
test
test
add
push
mov
push
call
mov
jmp
mov
pushl
mov
push
lea
jmp
setae
movsbw
aaa
mov
ror
push
stc
bt
mov
movb
test
sub
mov
shr
pushf
mov
pusha
pushf
popl
push
call
mov
mov
pushf
mov
mov
lea
jmp
bsf
mov
push
btr
setle
mov
shl
ror
bt
cmc
mov
jmp
bsf
mov
pusha
shl
bt
mov
mov
pushf
movw
cmp
sub
cmc
mov
shl
movw
lea
ja
mov
jle
pushf
pushf
popl
call
call
call
pushl
lea
jae
jne
pushf
mov
push
lea
jmp
mov
dec
push
push
ror
test
movb
lea
bt
neg
mov
call
movb
jmp
jmp
cmc
test
stc
sub
cmp
add
jmp
pushf
mov
push
movb
push
lea
jmp
call
js
pushf
pusha
mov
mov
mov
pushf
popl
call
lahf
mov
jmp
mov
pushf
lea
jmp
test
jmp
stc
clc
pushf
xor
push
pusha
inc
lea
jbe
pusha
pushf
mov
xor
movb
xchg
clc
cmp
stc
xor
pusha
cmp
cmc
sub
mov
jmp
add
mov
mov
pusha
lea
jmp
not
cmc
clc
clc
and
jmp
cmp
movb
cmc
add
pushf
lea
jmp
divl
push
mov
push
pushf
jmp
jmp
mov
pushf
movb
mov
lea
jmp
test
shl
movzbl
test
sub
call
jmp
setae
shrd
or
lea
pusha
bt
cmc
cmp
lea
ja
push
pushf
push
lea
ja
lahf
push
lea
push
bts
sbb
lea
xchg
call
mov
mov
movl
movb
pushl
ret
mov
push
movb
pushf
lea
jmp
add
add
pushf
pushf
cld
call
push
pusha
pusha
call
push
mov
pushf
mov
lea
jo
pusha
pusha
mov
call
add
call
mov
pushf
mov
pushl
popf
movb
mov
movb
lea
jmp
mov
jmp
push
pusha
mov
pushf
push
pushf
mov
call
mov
pusha
mov
call
shld
movzbw
sub
neg
mov
pushf
pushf
stc
sub
pushf
pushl
pushf
pusha
mov
push
lea
jmp
xor
call
jmp
push
lea
je
pushf
cmc
push
mov
xor
push
pushl
cmc
xchg
bt
mov
movb
sub
call
mov
push
pushf
jmp
jmp
push
movw
pushl
popl
movb
mov
lea
jmp
ror
xadd
pusha
btc
xor
xor
bsf
rol
stc
movsbl
lea
clc
sub
bt
movsbw
mov
cmp
sar
ror
movzbw
mov
push
sar
shld
add
btr
shl
seta
pusha
mov
pop
xor
stc
adc
xor
call
or
mov
cmc
not
jmp
bsr
mov
call
pushl
lea
cpuid
stc
sub
push
cmpl
pushf
jmp
bts
mov
stc
not
clc
call
sbb
bswap
mov
lea
shl
call
push
movb
mov
pushf
mov
push
movl
lea
jmp
bswap
jmp
movl
mov
pushf
push
movb
call
test
movzbl
stc
sbb
sar
and
mov
cmc
stc
clc
add
call
repz
popl
call
daa
lea
rdtsc
stc
bt
jmp
pushl
mov
pushf
pushl
ret
xor
push
mov
rcl
clc
movw
cmp
sub
inc
seta
not
not
bswap
movzbw
inc
btc
add
add
rol
xor
bsr
or
inc
inc
sub
push
clc
mov
bt
jmp
push
mov
pusha
mov
lea
jmp
mov
pushf
jmp
mov
mov
mov
pusha
push
call
pusha
mov
add
cmc
clc
bt
add
cmc
cmp
clc
sub
call
pushf
mov
jmp
pusha
mov
mov
pusha
call
shl
jmp
call
pusha
pushf
mov
jmp
call
push
push
xchg
pusha
movsbw
mov
mov
push
push
push
lea
push
mov
lea
mov
std
pushf
push
cld
pushf
movb
pushf
movb
rep
and
bsr
mov
movzbl
movzbl
jmp
test
add
push
pusha
mov
mov
push
movw
lea
jmp
push
pushf
call
movb
pushf
mov
push
repz
popl
jmp
pushf
pushl
popl
pushl
push
lea
jmp
push
pushf
lea
jmp
pushf
call
pushf
push
mov
mov
pushf
popl
call
shld
call
inc
mov
cmc
stc
bt
jo
add
pusha
push
pushf
pushl
lea
jmp
and
call
mov
jmp
push
bswap
or
lea
mov
call
sub
jmp
mov
push
pushf
push
call
push
jmp
push
mov
push
lea
jmp
pushf
repz
popl
jmp
pusha
pushl
popl
movb
lea
jmp
xor
notl
movzbw
mov
test
sub
push
call
mov
call
clc
cmp
mov
pushf
sub
mov
mov
pushf
movb
mov
lea
jmp
bt
sub
call
rcr
stc
or
mov
neg
mov
jmp
pushf
movb
pushf
mov
push
pushf
push
pushl
repz
popl
lea
jne
pushf
pusha
mov
mov
mov
lea
jmp
call
sbb
movsbw
movzww
cmp
xor
pushf
push
movb
lea
mov
inc
jmp
movzbw
setl
pusha
lea
mov
movb
jmp
clc
pushf
add
pushl
mov
pushf
pushf
pushf
push
lea
jmp
mov
mov
jmp
jmp
pushf
repz
popl
jmp
mov
mov
mov
pushl
push
movb
lea
jmp
pusha
mov
pushf
jmp
not
movsbw
mov
pop
pushf
mov
mov
mov
lea
jmp
call
mov
pusha
pushf
lea
jmp
mov
mov
jmp
mov
pusha
mov
pushl
pushf
jmp
xor
mov
jmp
push
call
pushf
pushf
lea
jp
push
pusha
jmp
jae
pusha
pushf
pushf
mov
not
movsbw
pusha
push
mov
bswap
pushf
mov
jmp
mov
push
lea
jmp
mov
adc
mov
rol
call
movzbl
rcl
mov
or
mov
push
sub
clc
movb
shl
pusha
mov
pushf
pushf
popl
pushl
jmp
mov
mov
push
repz
popl
push
call
pushf
not
clc
sub
push
pusha
pushf
and
jmp
jmp
pusha
mov
mov
pushf
popl
push
pushl
popl
pushf
pushf
push
pushf
lea
jmp
bsr
sub
das
lea
pusha
adc
adc
and
shl
sub
not
mov
pushf
pushf
popl
not
cld
bswap
lea
push
mov
mov
not
lea
push
mov
mov
jmp
mov
aaa
not
and
mov
adc
mov
bt
cmp
call
inc
xadd
rcr
dec
mov
mov
shr
stc
and
mov
call
lea
lea
mov
xchg
pop
repz
popl
adc
mov
sub
btc
stc
movsbl
jle
push
rol
push
shl
bsr
shl
pushl
or
test
push
bt
stc
mov
jmp
add
btr
mov
pushf
stc
sub
movb
add
jmp
add
bt
daa
add
mov
ja
pushf
add
jmp
push
pusha
call
clc
xchg
stc
cmp
xor
clc
call
sets
mov
pusha
jmp
movzbl
call
pushf
popl
movw
pushl
pushl
popl
push
movb
mov
mov
lea
jmp
test
bt
cmp
add
call
movb
repz
popl
pushf
jmp
pushl
popl
movb
lea
jmp
pushl
popl
pushf
pushf
pushf
pushf
lea
jmp
repz
popl
jmp
mov
movw
pushf
movb
mov
lea
jmp
jmp
inc
stc
mov
cmc
cmc
sub
pushf
mov
push
pushf
lea
jmp
pusha
mov
call
test
sub
movb
pushf
mov
push
lea
jmp
mov
mov
pusha
mov
pushf
lea
jmp
jae
mov
pushf
push
pusha
pushf
mov
call
pushf
push
mov
mov
pushl
ret
pushf
mov
movw
jmp
mov
call
pushf
popl
pushf
push
push
pushl
popl
push
movb
lea
jmp
pushf
or
clc
mov
pusha
cmp
pushf
pushl
sub
movw
call
movzbw
lea
mov
jmp
movsbw
shl
sub
mov
mov
bt
push
add
movw
push
pusha
lea
jmp
pushl
popl
pushf
mov
pushl
pushf
lea
jmp
movsbw
inc
pop
pusha
neg
add
inc
bts
xor
push
movzbw
ror
rol
btc
push
pushf
xor
bt
rcl
call
movzbl
sbb
shl
shrd
mov
cmp
clc
clc
add
pushf
add
mov
pusha
jmp
movb
mov
pushf
mov
mov
push
mov
lea
jmp
sbb
mov
add
sar
mov
pushf
add
stc
shrd
mov
pushf
jmp
call
lea
jno
pusha
lea
lea
jb
pushf
pushf
pushf
mov
movb
movb
movl
lea
jmp
mov
pushf
pushl
movw
jmp
mov
mov
pushf
push
pushf
lea
jmp
cmp
add
pusha
push
lea
jmp
pusha
pushl
jmp
pushf
push
push
mov
push
lea
jmp
mov
movl
jmp
add
test
cmc
sub
pushf
ror
jmp
pushf
mov
call
jmp
push
movb
push
push
mov
movw
push
mov
pusha
pushf
popl
jmp
movw
pushf
mov
push
mov
push
push
mov
push
call
pushf
pushf
mov
push
call
pushf
jmp
push
dec
mov
mov
bt
sub
pusha
pushf
push
call
jmp
pushl
call
pusha
mov
call
repz
popl
movb
mov
movb
push
movb
lea
jmp
push
pushl
stc
mov
mov
movb
sub
push
push
lea
jne
call
shrd
setp
bt
mov
movsbw
mov
test
add
push
pusha
jmp
mov
pushf
mov
pushf
jmp
push
jmp
pushf
push
call
jmp
test
mov
jge
push
add
movb
lea
jmp
movl
push
call
mov
jmp
mov
movb
mov
pushf
pushl
mov
pushf
jmp
pushf
pushl
mov
pushf
mov
mov
lea
jmp
pushf
movb
mov
pushf
jmp
pushf
popl
pushf
mov
pushl
popl
pusha
push
pushf
pushf
lea
jmp
pushl
popl
pushf
pusha
mov
pushl
lea
jmp
pushf
popl
call
pushf
call
not
btr
add
mov
push
and
push
mov
sbb
pushl
add
or
shr
push
movsbl
shr
or
ror
mov
call
jmp
jmp
mov
test
mov
or
pusha
lea
jns
pusha
movb
lea
je
stc
stc
sub
stc
xchg
jmp
pushf
pusha
mov
pushl
jmp
mov
pusha
mov
mov
lea
jmp
pushf
mov
pushl
popl
movb
push
pushf
lea
jmp
mov
push
pusha
movw
mov
mov
mov
call
jmp
mov
call
clc
clc
add
push
mov
jmp
call
jmp
call
cmp
cmp
sub
movb
xchg
lea
jp
push
pushf
mov
push
mov
pushl
ret
pushf
popl
call
pusha
pushf
push
mov
call
mov
pushf
lea
jmp
sub
lea
mov
pushl
cmc
cmc
clc
shl
call
cmc
pusha
xor
call
movw
movw
mov
pusha
push
pushl
movb
lea
jmp
movb
pushf
mov
pushf
movw
push
lea
jmp
push
push
mov
pushf
mov
pushl
jmp
pushf
pushl
mov
jmp
cmp
xor
bt
bt
jmp
sete
lea
push
pusha
cwtl
call
mov
pushf
call
pushf
popl
jmp
mov
pushf
jmp
pusha
pushl
pushf
popl
jmp
daa
mov
stc
sub
pushf
call
btc
cmc
mov
jmp
not
repz
popl
and
xor
sub
sub
push
pushf
pusha
mov
sar
bswap
test
xchg
ror
sub
pushl
popl
bts
dec
movl
not
shl
mov
adc
add
setg
rcl
rol
movsbl
ror
shr
sar
clc
xor
shl
shl
lea
movzbw
sub
rcl
cmp
pushf
lea
dec
mov
dec
pusha
not
add
shl
sar
shrd
shr
mov
cmp
cmp
cmc
sbb
xor
lea
inc
jmp
call
mov
call
call
pushf
call
rol
add
lea
seto
cmp
rcl
xor
rcl
btc
push
rol
xor
movsbw
and
bt
mov
jmp
push
lea
jo
mov
pushf
pushf
pusha
pushl
lea
jmp
lea
jne
btc
adc
seta
xorb
jmp
cmc
add
pushf
pusha
pushf
lea
jmp
shl
lea
ror
add
bt
sar
setbe
xor
jmp
push
mov
pushl
mov
pushf
lea
jmp
pusha
add
jmp
shl
sbb
mov
not
add
not
mov
push
pusha
mov
mov
lea
jmp
pushl
stc
pushf
cwtl
cmc
stc
movb
sub
pushf
mov
mov
mov
push
lea
jmp
mov
movw
mov
mov
pushf
popl
pushf
movb
push
pushl
popl
movb
mov
pushf
lea
jmp
cmp
pusha
jmp
mov
aaa
mov
btc
xor
shl
not
mov
call
dec
push
push
mov
clc
ror
cmc
pushf
cmp
cmp
neg
mov
cmc
cmc
lea
stc
stc
cmc
sub
cmp
cmc
cmc
push
cbtw
cmc
cmp
movb
push
cwtl
bt
call
shr
cmp
mov
test
pusha
sub
call
push
pusha
lea
jne
ja
pushf
push
mov
pusha
lea
jmp
call
pushl
pushf
jmp
movw
mov
movb
call
shl
bts
inc
mov
pushf
cmp
cmc
add
jmp
mov
movb
pushf
mov
push
mov
lea
jmp
xadd
shl
add
xchg
xchg
mov
call
mov
mov
pushl
mov
push
call
cmp
rol
mov
clc
stc
cmc
jmp
pushf
movl
push
jmp
bswap
stc
neg
test
sub
sar
bt
pop
call
mov
call
jmp
pushf
mov
pushf
lea
jmp
test
sub
jmp
and
movzbl
pusha
xor
cmc
clc
bt
cmc
not
pushf
add
pushf
rol
test
stc
cmc
xor
cmp
cmp
bt
lea
call
popl
pusha
lea
jmp
movb
pushl
popl
movb
lea
jmp
xor
pushf
rol
stc
add
xor
shl
neg
ror
jmp
call
shr
xadd
mov
test
add
call
call
call
pushf
lea
ja
shl
mov
bt
shld
lea
cmp
das
sub
rol
rcl
sub
neg
lea
shrd
rcr
and
ror
sbb
cmp
sub
bswap
mov
lea
bswap
pushf
movzbw
movsbw
cld
jmp
jmp
movsbw
pushf
rol
xor
xor
shr
sete
rcl
clc
movzbl
movsbw
mov
cmp
pushf
test
add
call
inc
shr
not
clc
mov
call
cmc
sub
pusha
call
jmp
call
push
mov
jmp
mov
mov
call
push
sub
test
add
daa
add
cmp
test
add
xor
test
push
add
sub
test
add
xor
test
xor
test
add
and
test
cmp
test
cmp
test
add
xor
test
and
test
add
xor
test
sub
test
test
add
sbb
test
xor
test
sbb
test
sbb
add
sub
test
add
sbb
test
sub
test
add
add
cmp
test
cmp
test
pop
add
and
test
add
xor
test
add
sbb
test
add
sbb
add
daa
add
pop
add
aas
add
xor
test
add
sbb
test
cmp
test
add
cmp
test
cmp
test
add
and
test
pop
add
sub
test
xor
test
xor
test
and
test
and
test
pop
add
xor
test
and
test
sub
test
sbb
test
add
xor
test
add
sbb
test
cmp
test
add
xor
test
add
cmp
test
sub
test
and
add
and
test
add
xor
test
xor
test
add
pop
add
and
test
add
sbb
add
xor
test
cmp
test
aas
add
xor
test
add
sbb
add
sbb
test
add
xor
test
and
add
xor
test
sub
test
sbb
add
cmp
test
add
xor
test
sub
test
sub
test
daa
add
cmp
add
sub
test
add
xor
test
cmp
test
cmp
test
add
add
sub
test
sub
test
xor
test
add
sbb
test
and
test
sbb
add
cmp
test
add
xor
test
xor
test
and
add
sbb
test
and
test
add
cmp
add
and
add
sub
test
pop
add
xor
test
pop
add
sbb
test
and
test
cmp
test
cmp
add
xor
test
add
and
test
add
xor
test
xor
test
cmp
test
and
test
and
test
sub
test
cmp
test
cmp
test
add
xor
test
add
xor
test
xor
test
xor
test
push
pushl
pushl
ret
xchg
aam
shrd
mov
sub
jmp
call
mov
sub
call
pushl
popl
mov
pushl
pushf
lea
jmp
movb
add
pusha
bt
cmp
jmp
clc
test
mov
add
movb
pushl
pusha
pushf
lea
jmp
mov
movsbw
mov
bswap
lea
not
mov
pusha
lea
jne
bswap
mov
pop
pusha
mov
pusha
push
pushl
ret
mov
movw
pusha
pusha
repz
popl
push
mov
pushf
movb
lea
jmp
bswap
lahf
mov
push
jmp
stc
pushf
clc
cmp
pushf
mov
push
jmp
movw
mov
mov
repz
popl
jmp
stc
clc
bt
pushl
jmp
mov
cmc
cmp
sub
stc
pusha
pushf
push
shr
lea
jge
pusha
mov
mov
mov
mov
pushf
popl
call
pushl
repz
popl
mov
mov
mov
pushl
mov
lea
jmp
aaa
mov
movzbw
dec
pop
lea
movsbw
shl
btc
pop
bsf
pop
aam
pop
not
clc
btr
pop
std
bsr
popf
push
call
mov
pushf
pushl
pushl
mov
movl
pushl
jmp
mov
mov
movl
jmp
add
push
pushf
call
push
call
pushf
pushf
inc
test
add
pushf
call
pushf
call
mov
jmp
mov
push
pushf
pushf
lea
jmp
jmp
rcl
add
push
dec
xor
bswap
push
stc
ror
rol
mov
rcr
shrd
or
and
movsbl
bt
movzbw
btc
mov
clc
test
cmp
bt
add
pusha
mov
pushf
lea
jmp
jmp
ror
cmc
movsbw
mov
shl
rcl
rcl
seta
mov
push
add
pushf
mov
pushf
pusha
mov
lea
jmp
mov
mov
mov
pushf
pushl
pushl
pushl
ret
push
pushf
push
jmp
mov
bswap
mov
pushl
mov
setge
movzbw
mov
xchg
pushf
mov
pushf
lea
jmp
mov
call
mov
pusha
call
push
cmc
xor
movw
pushl
pusha
xchg
mov
jmp
push
jmp
mov
movb
mov
call
pusha
pusha
mov
pushf
movb
lea
jmp
pushl
pushf
mov
pusha
lea
jmp
mov
lea
jne
shr
and
mov
push
and
call
push
jmp
setns
push
pushl
mov
pushl
call
mov
pushl
jmp
jmp
xor
movzbw
bsf
add
mov
pusha
bt
cmc
cmp
add
push
pushl
pushf
lea
jmp
xor
pusha
mov
cmc
pusha
bt
add
mov
pushl
pushf
lea
jmp
add
add
btc
pusha
ror
rcl
pop
xor
xchg
lea
rcr
lea
test
shr
movsbw
sub
btr
shl
bswap
mov
stc
mov
mov
or
bsr
add
sbb
test
sub
shrd
mov
dec
pusha
bts
xor
mov
inc
inc
pop
add
shr
btr
jmp
repz
popl
jmp
jmp
lea
rcl
bsf
shrd
mov
movsbl
mov
cmp
cmp
push
add
mov
push
push
mov
push
lea
jmp
jmp
jmp
mov
push
mov
mov
lea
jmp
call
movzbw
rol
mov
not
mov
call
std
movsbw
mov
call
call
mov
shr
pusha
cmp
pushf
or
cmc
xor
pushl
push
pushf
movb
inc
push
push
decl
jmp
pushf
mov
call
pusha
mov
push
pusha
pushl
pushf
lea
jmp
push
call
jmp
mov
mov
pusha
pushl
mov
push
mov
pushf
pushf
mov
call
pusha
pushl
call
mov
call
jmp
mov
movb
pushl
mov
pusha
pusha
mov
jmp
jmp
repz
popl
call
lea
jge
mov
push
pushf
movw
lea
jmp
