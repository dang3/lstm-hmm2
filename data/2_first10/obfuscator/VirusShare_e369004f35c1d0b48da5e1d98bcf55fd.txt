pop
lret
outsl
push
pop
fstpt
pop
and
mov
imul
nop
lret
mov
sti
mov
inc
dec
notb
jecxz
push
imul
in
push
push
dec
dec
xlat
cmp
sub
sbb
xor
xchg
sahf
mov
popf
inc
lret
and
cmp
mov
imul
test
aaa
xchg
fwait
popf
nop
loopne
out
shlb
cwtl
negb
jle
shlb
lock
jae
cmpsl
cs
mov
in
jne
mov
sub
and
imull
pop
int
cwtl
stos
psrlw
lods
inc
inc
pop
cmpsb
inc
inc
sti
std
div
sbb
mov
roll
jg
lahf
sbb
adcl
sbb
cwtl
push
out
lds
ja
jp
icebp
jge
jns
dec
frstor
sahf
jmp
mov
call
mov
call
inc
jge
fisubl
jp
push
mov
inc
xchg
ljmp
add
nop
inc
popa
push
lcall
mov
pushf
dec
bound
push
jl
mov
aad
adc
adc
adc
icebp
jno
jl
movsl
insb
je
dec
popf
push
fs
xchg
sub
mov
mov
in
lods
cmp
jo
xchg
xlat
mov
xchg
imul
pop
fistpll
inc
cltd
out
inc
adc
leave
daa
jmp
ja
and
cmp
mov
fcmovne
loope
in
mov
test
insb
aam
movsb
adc
sub
sub
fists
push
dec
adc
je
mov
lock
in
lock
test
cmp
fs
or
add
aam
cli
clc
incl
icebp
leave
enter
fisubl
int
mov
and
adc
and
pusha
test
and
jbe
mov
call
ror
xchg
mov
imul
mov
rol
xchg
adc
xor
xchg
sbb
test
loope
sub
sti
fisubrl
jle
ds
push
out
jbe
dec
es
fidivrl
mov
mov
loop
movzwl
shld
mov
pushf
bt
stc
add
pusha
bt
pushl
mov
stc
test
movw
push
lea
je
bt
add
stc
stc
test
cmp
jmp
mov
gs
push
mov
pop
shrb
stos
sbb
jmp
imul
aaa
jnp
dec
jne
je
loop
cmp
js
cli
dec
mov
jle
mov
frstor
mov
sbb
icebp
jno
lock
lret
ja
aas
inc
adc
cmc
push
push
in
aam
movsb
mov
lahf
mov
into
or
dec
icebp
icebp
shlb
test
sub
js
sub
jnp
lret
push
into
mov
or
into
or
mov
dec
sub
lock
sub
sbb
sub
pop
ds
sub
test
fists
push
rcl
xor
and
int
addr16
inc
test
les
inc
imul
dec
mov
jge
xchg
enter
mov
negb
je
sub
inc
leave
cmp
lcall
mov
shl
add
xchg
data16
mov
lods
ss
sbb
or
ss
jl
shrb
or
adc
shlb
fmul
enter
hlt
shrb
cmp
scas
dec
stos
andb
addr16
cltd
sbb
mov
addr16
inc
adc
ret
push
mov
mov
dec
rcrl
ds
int3
adc
lock
dec
rcr
ret
ds
int3
ja
mov
ret
ds
int3
mov
arpl
jge,pt
int3
aad
fst
dec
lret
cli
ret
incb
int3
scas
fsubl
mov
popf
int3
lods
mov
addr16
mov
sbb
ds
int3
sbb
mov
icebp
adc
jbe
addr16
mov
test
rcr
addr16
pop
mov
add
cli
ret
push
stos
addr16
lret
mov
xchg
pop
insl
scas
icebp
cli
ret
dec
test
int3
fwait
stc
ror
lods
call
addr16
push
jbe
or
pop
test
sarl
ds
int3
test
mov
int3
add
or
mov
int3
ds
cmp
addr16
mov
lahf
mov
int
ret
ds
int3
dec
push
jp
sahf
in
int3
jns
inc
bound
addr16
insb
xor
dec
dec
fistpl
ret
ds
int3
and
lock
ds
int3
hlt
sbb
scas
dec
aam
ret
ds
int3
add
sub
dec
fstps
ret
cmpsl
addr16
push
mov
dec
pop
ja
ret
ds
int3
inc
jno
loope
jmp
addr16
push
xlat
pop
arpl
int3
int
ret
test
int3
repz
lret
inc
in
mov
pop
jb
jecxz
pop
sarl
inc
shrb
addr16
mov
pop
lcall
popf
or
scas
mov
int3
insb
adc
ret
mov
pop
and
cmpsb
lcall
push
or
dec
rcrb
int3
dec
inc
clc
dec
scas
clc
sub
xchg
stos
addr16
mov
fcmovb
ds
int3
mov
imulb
scas
repz
cmpsb
stos
addr16
jl
scas
pop
pop
cmp
ret
push
addr16
mov
lret
test
int3
pushf
cmp
fcmovb
ds
int3
rcl
sub
outsb
test
int3
or
mov
addr16
sbb
mov
int3
jne
push
cmp
lcall
clc
xchg
dec
ficompl
ds
int3
push
out
lock
pop
lods
addr16
ret
sbb
dec
fbld
push
test
mov
push
test
cmp
mov
or
out
jbe
sahf
notb
nop
adc
fmuls
outsl
mov
and
repnz
lcall
ret
movsbl
pop
mov
bswap
pop
push
not
pusha
lea
jnp
pop
movzbw
jmp
xchg
sarl
pop
lods
and
hlt
inc
cwtl
fdivrl
clc
inc
rclb
cmp
in
add
inc
mov
dec
or
sbb
pop
xchg
sarb
and
jmp
sarl
mov
pop
hlt
scas
roll
jno
jmp
sub
popf
sti
daa
movsl
and
leave
adc
fcmove
mov
sbb
lret
xor
dec
and
imul
and
ltr
push
mov
fildll
mov
pop
lahf
out
stos
pop
fwait
repz
clc
arpl
jle
push
je
pop
mov
lret
dec
dec
test
push
push
shrb
lock
fdivrl
test
mov
roll
sbb
or
add
sbb
jnp
popa
mov
jl
add
iret
adc
outsb
mov
sti
mov
fisubrl
push
fisubrs
daa
shrl
inc
xchg
pop
sub
mov
xchg
jno
jnp
pop
mov
jbe
push
push
scas
popa
loopne
lods
cld
push
inc
movsb
call
mov
jno
fs
push
std
in
add
jg
cmc
enter
xchg
cli
pop
ds
mov
sti
mov
repnz
aaa
mov
mov
jg
das
push
mov
jmp
dec
mov
sub
mov
sbb
aam
subb
hlt
lock
or
mov
adc
add
loope
gs
movsl
std
jns
sub
data16
sub
repz
mov
jnp
mov
jg
rcrl
or
jecxz
push
xchg
repz
adc
push
nop
and
dec
pushf
add
pop
lds
fwait
stc
dec
pop
ljmp
js
gs
test
inc
insl
xchg
test
insl
lret
int3
mov
in
jle
and
fnstcw
and
mov
hlt
push
mov
inc
mov
jne
cmp
xchg
out
mov
jbe
push
mov
jp
mov
push
cmp
jecxz
imul
std
xor
mov
int3
xor
mov
mov
mov
sti
rcl
pop
movsl
push
and
das
mov
sub
mov
fiaddl
pop
or
call
aam
out
xor
push
xor
add
xchg
nop
lahf
andl
loop
fmull
movsb
add
or
dec
jo
mov
ja
push
dec
das
pop
fistpl
das
or
cmc
std
adc
in
sub
mov
incb
add
add
ds
push
xchg
jle
jne
sbb
cli
mov
sub
lret
fs
out
and
mov
xchg
fdivrl
inc
fcompl
fisubrs
sub
xor
add
out
jae
and
jmp
sti
testl
or
movw
jmp
cmp
jecxz
gs
sbb
xchg
dec
into
inc
cmpsb
xchg
xor
imul
and
sbb
pop
fstpt
and
sbb
cmp
ljmp
es
pop
cmc
loop
outsb
mov
cmc
push
fmull
sub
jae
pusha
lods
adc
pop
fnsave
lret
mov
dec
std
push
xchg
dec
jp
dec
sahf
push
jl
test
das
jg
cmp
pop
repz
mov
ja
shll
sbbl
mov
je
add
inc
and
mov
mov
pushf
movw
pushl
ret
pushl
sub
cmc
rol
cmp
bt
mov
pushf
call
sub
movl
pushf
movw
pusha
lea
call
pushf
movb
lea
jg
jae
inc
mov
pusha
inc
push
setne
mov
lea
pushf
lea
jb
pushf
lea
call
push
movb
push
jmp
adc
out
bound
inc
xchg
aaa
mov
ja
push
lret
daa
ja
ret
add
push
mov
mov
sbb
dec
jno
add
in
sub
jg
and
loope
stos
dec
nop
stc
push
aas
mov
arpl
ret
ja
lods
push
je
imul
dec
pop
aaa
jg
mov
cmp
or
cmp
in
jg
cmp
mov
pop
or
add
out
inc
pop
jmp
fbstp
imul
mov
loope
paddusb
pusha
cmp
xchg
lods
arpl
bound
adc
xor
sub
data16
jno
and
adc
outsb
push
bound
jo
out
iret
add
cli
lret
or
sbb
sub
lods
movsb
data16
popa
sub
enter
add
cltd
loope
adcl
aad
sub
or
add
mov
sub
idiv
xor
sub
mov
add
xor
in
gs
xor
lcall
push
add
push
push
hlt
mov
mov
mov
inc
ljmp
jmp
and
or
clc
testb
dec
push
dec
mov
xchg
sub
repz
jge
adc
ljmp
lahf
inc
addb
div
cmp
aas
ds
or
jae
or
dec
mov
xchg
jmp
cmpsl
jg
sbbb
push
imul
lahf
enter
push
mov
loop
xchg
xchg
xor
or
sub
inc
lods
push
adc
sarl
cmp
je
push
cwtl
sbb
mov
xor
ret
mov
push
bound
fwait
mov
mov
mov
out
xlat
sbb
inc
push
push
enter
into
mov
scas
push
jg
add
or
les
test
lods
mov
imul
xchg
data16
cs
lcall
ss
test
mov
push
loope
ret
xor
jecxz
stos
mov
daa
daa
or
sub
cld
jo
cmp
aam
es
testl
popl
dec
lahf
pop
xchg
add
push
push
push
pop
pop
out
mov
sti
pop
push
push
bound
cmp
mov
xchg
fsubr
mov
xchg
cmpsb
cli
mov
dec
sbb
xor
pcmpgtd
sub
iret
push
gs
outsb
dec
mov
adc
in
jmp
inc
or
imul
ror
sub
mov
pushl
mov
cmp
pusha
call
mov
lea
je
pusha
or
call
add
inc
dec
push
dec
inc
inc
jb
insl
push
je
imul
add
inc
incl
movl
pop
movsbw
mov
push
lahf
lea
bswap
lea
push
push
movb
pushf
movl
call
loope
shl
bound
les
fcomps
hlt
dec
mov
or
arpl
dec
ds
repz
jno
adcl
or
gs
adc
pop
cld
cli
inc
stos
jo
xchg
sarl
scas
add
jne
in
mov
ljmp
cmp
mov
out
pop
ret
sahf
jb
cmp
loop
xchg
pop
push
mov
ja
xchg
xchg
jmp
scas
in
sub
jno
shr
push
lea
je
pushf
mov
mov
jmp
push
lock
std
std
test
jbe
jae
jg
addl
lds
pushf
mov
pop
lock
cmp
sbb
jge
test
inc
pop
and
aam
pop
ret
in
adc
test
inc
dec
xchg
adcl
inc
inc
push
arpl
xchg
push
inc
cmpsb
mov
jnp
arpl
mov
sub
fmuls
aaa
fld1
bound
mov
sub
hlt
pop
cmp
jno
test
or
sti
lcall
leave
adc
imul
push
int
dec
inc
lahf
pop
sti
repz
scas
lahf
addr16
sub
jecxz
ret
and
inc
imul
mov
pusha
lea
jmp
lea
jae
call
mov
pusha
lea
call
clc
jmp
test
pusha
pushf
push
mov
lea
je
call
movzbw
jmp
cmp
mov
xchg
or
aad
cmp
rcl
les
sbb
mov
stos
sbb
das
mov
push
mov
dec
add
xor
mov
lcall
dec
aad
jmp
add
jns
mov
dec
sbb
in
inc
loopne
or
pushf
dec
int
and
rcrb
sub
jecxz
push
mov
mov
jge
mov
enter
leave
inc
lds
sbb
inc
mov
fcoml
ja
pop
or
sti
ja
cmp
jbe
pushf
mov
pop
std
xchg
stos
xchg
pop
cmp
mov
mov
or
cmc
in
and
cmp
xchg
pusha
cmp
cmp
push
aam
lea
int3
cmp
mov
cmpsb
jbe
sub
dec
stos
inc
cs
scas
je
in
and
mov
ljmp
int
pop
xor
and
mov
mov
mov
jge
ret
pop
xor
cmp
jp
in
fs
lods
xchg
jne
and
icebp
shlb
ret
xor
outsb
jns
push
inc
jp
pop
jecxz
adc
inc
sub
and
leave
addl
int
jo
das
popl
mov
or
fisubl
jg
adc
push
pushl
mov
jo
or
xchg
je
cmp
fsubs
xchg
jo
xchg
pop
inc
sub
pop
cli
mov
ds
les
jno
xchg
inc
lret
or
jo
cs
stos
hlt
and
push
add
xor
inc
adc
inc
mov
mov
mov
fcmovb
xadd
jo
dec
and
aam
test
sub
cmp
mov
ja
bound
sbb
sub
cmp
inc
xor
mov
ret
cmp
cmp
jle
and
lods
sub
jg
in
mov
jnp
or
daa
outsl
and
loope
push
clc
jnp
dec
dec
and
mov
dec
loopne
orl
rcr
lahf
cwtl
add
xor
fiadds
rorb
cmp
mov
arpl
scas
lds
lds
mov
push
fcmovb
cmpsb
cmpsb
mov
repnz
cli
jmp
and
xlat
sbb
aaa
fwait
sti
addr16
xor
sti
outsl
xchg
add
adc
movsb
pop
pop
bound
mov
stos
mov
xor
xchg
sti
aaa
pop
cmove
outsl
jae
push
mov
mov
ret
mov
sub
repnz
icebp
sarb
push
es
xchg
sub
xchg
push
loopne
rol
mov
xor
hlt
fmul
test
add
mov
or
in
bound
jbe
push
push
jb,pn
es
notb
adc
push
rorb
push
rolb
js
mov
cli
lret
test
cmp
loopne
jb
push
sbb
inc
movsb
cli
or
xchg
xor
div
push
mov
push
xchg
cmp
xor
mov
incb
mov
jmp
lret
pusha
loopne
bnd
mov
cmp
loope
jns
imul
xchg
out
add
mov
sub
ret
in
bound
movsl
std
jne
or
add
ret
popa
jno
test
popa
dec
gs
aas
popf
sbb
pop
xor
lods
push
push
sub
stos
and
xor
dec
push
and
gs
sub
insb
fnsave
mov
xor
sub
sbb
adc
adc
sbb
pop
mov
jecxz
mov
popf
push
gs
lods
jl
les
in
bound
mov
pusha
les
pop
sarb
lock
and
pop
sub
lahf
sbb
sub
int3
jp
cmp
ror
jb,pn
add
stos
lods
mov
pop
test
sbb
cmp
lret
aas
enter
sub
in
in
mov
inc
or
sbb
inc
mov
icebp
out
outsl
imul
lea
jae
push
pusha
pushl
push
lea
jmp
shr
sub
bound
dec
mov
rcrl
cmc
dec
push
testb
fs
lods
pop
bound
std
pop
aaa
mov
jge
xlat
inc
jl
sbb
loopne
mov
cmp
mov
push
pop
push
add
mov
les
mov
rorb
push
roll
dec
test
arpl
add
addl
pop
cmp
fildll
sbb
rol
mov
dec
dec
lea
jb
call
lea
je
cmc
call
cli
pop
mov
jge
push
dec
inc
repnz
test
std
adc
mov
std
pop
jnp
pop
ret
cmpsb
es
ss
loop
dec
push
adc
xlat
mov
add
xor
sahf
dec
mov
ljmp
bound
mov
xlat
aaa
popl
pop
dec
adc
ds
fldl
xor
lods
stos
push
pop
xor
shll
push
faddl
add
in
int3
cmc
scas
scas
xchg
jnp
into
cmp
xchg
mov
push
mov
rcrl
ret
lret
dec
mov
les
hlt
mov
loopne
js
push
sbb
mov
mov
jp
out
bound
jg
aas
xchg
inc
xchg
jg
jmp
mov
out
xchg
test
and
jno
jg
shrb
cld
fs
cwtl
sub
fidivrs
cmpsl
add
mov
add
push
fnstsw
sbb
movsb
add
sbbl
cmc
cmpsb
push
outsb
cmp
and
push
lret
pop
pop
sub
scas
or
pop
pop
jmp
inc
bsf
add
shl
rcl
mov
shl
mov
push
cmp
bt
add
jmp
mov
pop
out
bound
push
into
push
jb
outsb
out
jb
dec
xchg
andb
sbb
push
inc
sub
mov
pop
enter
inc
inc
lods
adc
lret
jp
das
idivl
aaa
test
add
pop
xchg
add
mov
mov
xchg
lock
imul
stos
or
lea
pop
pop
daa
or
int
mov
je
cmp
inc
and
out
push
cmp
push
mov
enter
int3
mov
in
jo
and
ja
fwait
xchg
adc
loopne
add
stc
lock
jo
sbb
fcompl
pop
rorb
add
fdivrs
jbe
inc
mov
adc
pop
addr16
mov
std
mov
movsb
push
adc
adc
mov
test
mov
dec
mov
pusha
jmp
cli
mov
cmp
jl
jbe
lea
mov
cmpl
jge
cmp
in
cltd
jno
clc
movsl
mov
enter
inc
xchg
loopne
xchg
adc
rclb
cli
je
js
ret
cmpsl
xchg
js
jns
jb
xor
mov
mov
mov
sti
inc
or
add
sahf
mov
sub
sbb
and
cmp
jecxz
mov
fcoms
push
jge
sbb
push
popa
popa
push
and
cmpl
movsb
popf
loope
mov
insb
and
stc
stc
not
call
jmp
sbb
xchg
icebp
bound
sti
push
iret
pop
xchg
aaa
mov
pop
mov
lods
stos
push
pop
out
adc
mov
outsb
mov
and
aas
mov
xchg
cmc
je
lahf
arpl
pop
out
mov
push
jbe
aad
stos
sar
pusha
mov
push
cmp
rolb
ss
cmc
pop
jae
test
xor
arpl
cld
fildl
xlat
sub
lret
xchg
xor
or
xlat
xlat
lahf
fistl
mov
cs
repnz
pop
mov
in
mov
in
and
lock
hlt
lds
or
out
dec
pop
test
or
das
lea
and
pusha
stc
jecxz
shlb
cmp
mov
loope
popa
or
sbb
mov
add
inc
movl
and
out
mov
insl
or
dec
int
mov
rol
sub
cmc
nop
fisubrl
popa
mov
loop
scas
jmp
out
rsm
mov
and
mov
inc
in
inc
pop
and
in
add
mov
dec
cs
out
test
mov
or
int
decl
or
in
or
xor
and
cmc
std
movsb
inc
mov
out
adc
cmp
dec
or
sub
cmp
pop
adc
cltd
lds
sub
xchg
cmpsl
mov
fldt
scas
aad
outsl
mov
dec
dec
test
mov
les
sub
shlb
sub
or
inc
dec
rol
sub
inc
or
pop
out
or
or
or
jmp
data16
dec
fildll
jmp
dec
mov
scas
out
dec
bound
fs
fisubrs
leave
or
sbb
dec
sub
sub
push
outsb
add
push
iret
xchg
subl
leave
iret
push
or
xor
call
pop
out
mov
jmp
xor
inc
into
leave
xor
aam
xor
sub
xchg
sub
leave
cmp
pop
cmp
dec
test
xchg
into
jecxz
ret
jecxz
pushf
or
pop
push
int
enter
inc
pop
push
rcl
js
dec
shlb
sub
cmp
dec
jp
sub
leave
ret
data16
fadds
rcll
push
mov
push
sub
pop
cmp
push
xor
enter
xchg
inc
xor
inc
test
jnp
sub
pop
pop
sub
mov
fsubrs
leave
inc
push
flds
xor
cmp
inc
sbb
sub
sub
adc
cs
pop
pop
leave
pop
cmp
adc
fisttps
imul
sub
clc
and
and
sub
imul
mulb
outsb
loopne
rclb
maxps
sub
mov
mov
lret
imul
push
dec
sub
adc
jmp
or
fcoml
sub
push
dec
aad
inc
push
ret
pop
sub
dec
xorl
inc
mov
sub
jg
jmp
aas
jmp
dec
rolb
dec
jge
dec
roll
mov
inc
sub
out
popa
dec
inc
sbb
sbb
insb
insb
stos
inc
pop
js
sub
inc
fdivrs
clc
dec
loope
aad
pop
in
dec
sbb
dec
jmp
inc
in
sbb
and
inc
sub
jns
dec
push
inc
jp
dec
sbb
and
dec
cmp
aam
cli
in
call
mov
pop
mov
js
call
sub
outsb
pop
lret
mov
fs
out
out
rorb
clc
mov
out
iret
inc
xorb
fcomps
cmp
dec
dec
dec
fldcw
lret
mov
aam
mov
es
jbe
sub
frstor
lret
push
xlat
lret
lret
rcrl
leave
add
and
lods
leave
mov
mov
rcrl
enter
sub
call
xor
pop
dec
aad
dec
or
ficompl
mov
enter
enter
dec
mov
add
mov
add
rorb
adc
imul
inc
mov
inc
push
and
enter
xchg
push
add
imul
dec
push
inc
push
jle
rcll
jl
lock
sub
jae
mov
adc
add
mov
inc
cmpsl
insb
mov
xor
push
insb
inc
enter
pop
scas
pop
adc
adc
sub
sub
test
pop
js
addr16
mov
dec
imul
xchg
push
loopne
inc
ret
mov
cmp
imul
jbe
dec
jle
int
rcrb
pusha
push
int3
pop
bnd
or
jns
jmp
adc
pop
call
fcmove
pop
xlat
or
mov
repz
inc
and
inc
loopne
push
mov
sti
push
popa
int3
inc
mov
in
xor
inc
inc
lock
in
inc
popl
dec
js
fistl
ffree
push
xchg
into
inc
cmp
or
dec
adc
adc
xor
or
outsb
push
xchg
int
punpckhwd
sbbb
mov
lock
imul
xor
pop
sbb
fdivrl
mov
imul
inc
xchg
cld
cmp
data16
fstpt
imul
popaw
dec
jbe
dec
sbb
or
repz
inc
imul
sti
int
dec
or
jmp
ja
stos
leave
imul
push
inc
mov
int
pop
bswap
out
pop
xlat
rolb
outsl
sbb
and
mov
or
add
cltd
fdivrl
push
xor
cmp
dec
sbb
lea
mov
popf
lock
sti
add
daa
fs
sub
cmp
jbe
idiv
sub
stos
jns
call
pop
jno
enter
or
addr16
or
scas
dec
sbb
mov
jmp
les
int
cwtl
pop
xor
or
inc
in
mov
inc
pop
call
xchg
mov
fistpll
cmp
inc
insl
dec
aad
imul
mov
sti
call
aad
or
mov
jns
sbb
mov
movsl
imul
lods
dec
fmulp
pop
insl
lods
test
pop
adc
ret
jbe
push
and
sub
xchg
lods
lret
sub
nop
repnz
push
fisttps
test
lret
into
dec
push
pusha
dec
jl
inc
aad
inc
loope
frstor
enter
sub
pop
push
aad
test
jmp
pop
mov
inc
mov
fidivrl
sub
inc
mov
mov
flds
andb
scas
pop
mov
or
add
enter
lea
test
mov
lds
and
fwait
cmp
lret
sub
lcall
mov
sbbb
mov
test
mov
pop
rcll
addr16
test
mov
inc
in
or
cmp
addb
pop
sti
sub
mov
add
fistpl
sub
mov
xlat
popa
pop
pop
imul
shll
mov
mov
pop
dec
lret
dec
daa
inc
sbb
or
or
into
dec
movsl
mov
int
dec
pop
sub
and
test
and
mov
pop
popa
mov
insb
rorb
xor
fisttpll
lret
cmp
rclb
cmp
push
mov
sti
int
mov
inc
dec
add
add
sub
pop
add
push
cmp
and
push
inc
movsl
push
jecxz
inc
lds
inc
int3
pop
roll
inc
test
inc
add
pop
int3
sti
ret
push
scas
add
push
inc
cmpsl
movsl
mov
sti
add
dec
push
mov
nop
dec
testl
mov
int
imul
fiaddl
cmp
add
sti
sub
inc
pop
insb
xor
pop
cmp
dec
lret
outsb
sub
test
push
testb
out
pusha
test
lret
or
dec
pop
and
enter
xchg
fs
fwait
leave
jmp
cmp
lret
dec
adc
aas
leave
dec
add
sbb
inc
pop
inc
out
and
inc
inc
inc
lret
mov
dec
or
inc
or
ret
add
xor
inc
rclb
push
and
dec
mov
jmp
and
push
leave
aad
punpcklbw
mov
pusha
lea
and
int3
stos
jecxz
pop
sarb
int3
or
xchg
dec
jecxz
movsb
sbb
dec
mov
xchg
aam
or
js
fmul
or
push
inc
push
dec
subb
dec
ja
sti
inc
push
or
and
add
out
jle
lret
loope
dec
add
rolb
push
ss
adc
in
test
andb
lea
sbb
inc
leave
test
and
int3
jne
mov
scas
dec
cs
mov
cmp
dec
pop
dec
std
rorl
jns
pop
dec
popf
leave
inc
xchg
inc
in
mov
and
pop
dec
mov
ljmp
lods
and
adc
adc
xlat
icebp
add
stc
outsl
sbb
lcall
cltd
iret
int3
or
clc
out
cmp
icebp
jmp
sahf
clc
test
mov
inc
repnz
popa
push
or
fiaddl
push
fildll
push
gs
mov
ret
sub
pop
and
sahf
pop
loopne
lods
inc
stc
mov
leave
les
fldcw
into
or
and
dec
add
jns
xchg
orb
rol
dec
stos
or
les
pop
dec
mov
leave
inc
pop
mov
lret
lds
mov
pop
ds
js
mov
mov
in
sub
roll
ret
lret
stos
pop
or
inc
and
push
pop
iret
sbb
cltd
mov
popa
leave
pop
cmpsl
inc
out
in
faddp
sub
pop
inc
xor
cs
cmp
out
test
and
subl
push
pusha
es
adc
movsl
push
loopne
movb
mov
sub
ret
loope
in
add
jecxz
sub
test
cltd
loope
mov
dec
pop
js
xchg
mov
movsl
pop
add
loopne
test
dec
pop
fstpl
mov
int
lds
orb
mov
add
jecxz
ret
and
cmp
sbb
and
push
mov
ret
mov
sub
or
in
dec
cmp
jae
push
insl
and
dec
fidivl
in
inc
jb
sub
cmpb
fisttps
fidivrl
jmp
pop
rolb
int
pop
inc
popa
and
xchg
mov
int3
cwtl
mov
cld
cltd
mov
mov
popf
lock
and
fiaddl
sub
sub
cwtl
or
xchg
mov
pop
pop
push
loopne
test
cmp
leave
dec
addr16
mov
test
ret
and
adcl
imul
out
rol
xor
jg
push
pop
dec
push
push
mov
xchg
jns
nop
pavgw
pushfw
inc
jne
imul
ret
pop
pop
inc
sti
add
mov
andb
cmp
xor
loope
fstp
testb
mov
pop
adc
mov
mov
popl
pop
or
movsb
in
inc
lret
outsl
lcall
sub
jecxz
pop
rcrl
fisubrs
adc
inc
jle
sbb
xor
dec
testl
mov
test
pop
inc
pop
sbb
dec
jmp
xchg
lahf
iret
inc
jb
addb
inc
pop
into
xchg
jle
xchg
sub
jo
in
or
orb
int
mov
aad
fbstp
adc
test
insl
mov
push
add
sub
pop
dec
sbb
dec
ficompl
loope
dec
decb
dec
pop
adc
mov
fcomip
or
push
insl
aas
fldln2
loop
jbe
testl
sbb
mov
dec
cmp
dec
push
sub
dec
arpl
pop
dec
enter
test
sub
pop
xor
les
pop
pop
mov
inc
test
sub
frstor
adc
or
nop
ret
push
fsubs
jne
leave
pop
sti
popf
outsl
test
sub
loop
arpl
arpl
pop
mov
pop
inc
xchg
orb
dec
pop
sub
aad
mov
xchg
xlat
mov
aad
dec
jnp
mov
rcll
das
test
jg
sbbl
lahf
push
sti
mov
xchg
lret
les
gs
jbe
mov
cmpsl
out
add
inc
dec
sbb
fnstsw
cmpsb
sti
rol
mov
scas
xor
mov
inc
imul
fistl
xor
enter
test
or
rorl
aad
or
loope
xlat
sbb
movsl
js
push
iret
inc
cmp
loopne
loop
rolb
dec
lods
inc
iret
push
jmp
test
jge
loopne
push
dec
outsl
lea
push
mov
pop
pop
mov
inc
int
jns
pop
mov
rclb
add
filds
fstl
and
nop
filds
nop
and
cmpsb
pop
jge
ret
adc
daa
aaa
push
lret
ret
loope
sub
lret
enter
or
lods
jmp
sbbb
in
pushf
xor
dec
int
or
lock
sub
enter
inc
daa
pop
mov
or
ret
dec
add
push
rcrl
jo
pop
pop
stos
sub
dec
jnp
test
dec
add
and
sub
or
mov
xchg
orl
jb
leave
dec
insb
movsl
sub
cmp
mov
sub
mov
add
pop
test
mov
inc
mov
mov
mov
fistpl
cltd
pop
mov
pop
je
inc
mov
cmp
xor
ljmp
and
mov
int
ret
dec
pop
add
lods
dec
fsubrs
mov
iret
lock
or
in
or
fisubrl
adc
dec
sub
enter
fldenv
dec
into
ret
sub
int3
pop
fistpl
fistpll
or
shlb
inc
aad
and
push
cmp
xchg
push
rcrl
lods
int
dec
lret
pop
int3
pop
push
fsubs
rcrb
cld
push
out
pop
lds
push
hlt
lahf
fiaddl
and
xchg
movsb
dec
dec
dec
sbb
jbe
inc
sbb
pop
add
sub
dec
fldcw
and
or
add
mov
inc
inc
pop
adc
int3
rolb
pop
addr16
dec
fnsetpm(287
sbb
sbb
add
inc
sub
sarb
cmp
pop
mov
inc
sti
and
sub
pop
inc
ret
inc
int3
xorl
faddl
add
mov
and
loop
ret
int3
gs
into
loopne
or
cmp
pop
pop
add
add
sbb
in
inc
and
enter
cmc
xlat
mov
stos
dec
dec
ss
arpl
dec
dec
push
and
add
pop
dec
sbb
pop
xor
fsts
sub
fistpl
daa
dec
aas
fsubrl
call
dec
dec
ljmp
insb
inc
fldl
into
inc
or
test
int
lcall
or
pop
pop
into
inc
dec
push
rcrl
xchg
jns
fcomps
xor
stos
ret
je
or
les
pop
fwait
test
int
or
xor
push
daa
sbb
sbb
test
int3
imul
ss
or
clc
int
xor
jo
pop
popl
push
decl
push
fdivrl
andl
cltd
inc
or
adc
negb
xchg
sub
call
xor
push
mov
int
sub
add
cmp
push
sub
xchg
jecxz
push
and
mov
fsubrl
pop
insl
inc
push
or
lret
or
daa
fstpl
int
pop
pushf
or
or
in
rcr
dec
fwait
push
cli
shrb
push
lret
pusha
or
inc
rol
or
enter
lcall
push
fildl
push
mov
fnstsw
rorb
fists
adc
dec
mov
sbb
or
in
ret
mov
adc
and
push
das
dec
and
add
flds
dec
xchg
jecxz
adc
sub
shll
adc
lock
push
out
ret
pop
xor
test
pop
test
cmp
bt
or
sbb
sbb
add
sbb
js
stos
mov
ret
sbb
arpl
pop
jp
les
sbb
add
dec
pop
pop
mov
arpl
rol
pop
daa
and
xorb
mov
sub
cmp
lea
or
mov
shrb
push
mov
inc
xchg
dec
inc
popf
shufps
ret
repnz
iret
rcl
aad
sbb
push
cmp
and
popf
dec
aas
pop
dec
sbb
xorb
add
xchg
roll
rcll
sub
mov
or
ret
cmpsb
lcall
inc
test
movsb
iret
mov
lret
jb
ds
add
pop
jno
and
dec
and
sub
dec
xchg
xchg
inc
dec
lods
call
lock
mov
js
dec
cwtl
clc
fs
test
enter
icebp
fwait
call
jp
push
xchg
je
push
mov
jle
fadd
mov
aam
cltd
imull
cli
lock
pop
dec
xor
push
dec
mov
in
mov
sbb
pusha
insl
jmp
and
iret
scas
es
outsb
push
sub
or
into
cmpsb
xchg
and
push
sub
lret
ret
lcall
mov
call
sub
xchg
in
push
lds
and
xchg
mov
test
jo
inc
stos
adc
xchg
push
adc
ret
mov
jb
cmp
cmc
mov
lret
jp
sub
je
lds
jl
sbb
sub
sbb
mov
push
sbb
dec
test
mov
sbb
cmp
push
call
mov
sub
pushf
sbb
push
enter
inc
jnp
add
push
out
jge
mov
xor
addr16
out
push
xchg
push
or
popf
xchg
inc
sbbb
mov
loop
popa
cmp
mov
jle
call
push
mov
adc
bound
lds
jge
push
pop
mov
movsb
jae
inc
adc
stos
addr16
add
cmpsl
orl
rcrl
inc
sub
stos
sbb
dec
dec
clc
not
stc
clc
neg
stc
call
sub
gs
lahf
jecxz
fists
adc
and
in
ds
test
push
xchg
xor
mov
pusha
mov
les
scas
cwtl
mov
add
ret
or
adc
cmpsl
cmpl
out
sbb
lret
xor
jb
cmp
push
fisubrs
xchg
iret
ret
jecxz
stos
push
adc
jecxz
test
lods
cmp
mov
push
aaa
and
iret
sbb
pop
out
xor
fcmovne
xor
mov
mov
clc
lock
es
pop
mov
adc
lea
jb
pushf
mov
push
lea
jae
jmp
insb
orb
pop
mov
xchg
pop
mov
jg
add
movsl
jge
into
xchg
scas
cmpsl
add
xchg
or
lret
push
sahf
cli
clc
sub
and
call
push
mov
mov
and
cmp
pushf
mov
pusha
ds
stc
mov
pop
adcb
pusha
and
jbe
ret
cltd
cmp
divl
inc
popf
adc
fisubrl
cli
shlb
dec
repz
xchg
push
rcl
mov
or
sub
test
js
add
loopne
testl
mov
sbb
dec
adc
push
mov
push
and
jmp
sub
mov
or
iret
int
jp
and
lods
imulb
jno
loope
and
cmpsb
sbb
jno
insl
and
xchg
jo
lahf
out
fsubl
cld
enter
sub
in
in
mov
mov
xchg
xchg
inc
lea
call
sub
or
dec
stos
es
dec
scas
imulb
sub
pop
in
push
lods
sbb
int3
pop
mov
jnp
pusha
push
jb
pop
pushf
lret
fsubl
adc
cld
cwtl
ds
xor
jmp
rclb
insl
inc
pop
sarl
adc
mov
mov
mov
dec
sub
dec
push
add
idivb
inc
push
loop
sahf
cld
test
mov
and
mov
mull
xor
les
dec
jmp
xchg
outsb
gs
mov
popa
lods
mov
xor
in
aam
xchg
adc
rorb
mov
aam
dec
and
push
lcall
cmpsb
test
testl
out
push
testl
jecxz
mov
adc
jns
pop
or
ret
cmp
jge
push
lahf
add
pop
ret
je
push
mov
testl
sub
and
inc
shrl
leave
jnp
cmc
push
aam
das
pop
add
mov
xchg
in
aaa
jae
popf
fistpll
jle
mov
outsl
aaa
dec
movsl
mov
cwtl
cwtl
hlt
push
mov
stos
push
sahf
push
out
xchg
in
pushf
fistpll
push
mov
or
movq
inc
mov
add
dec
je
jno
sarl
loopne
enter
cmpsl
cli
es
xor
int3
xor
insl
mov
pop
frstor
adc
mov
icebp
imul
sub
das
imul
inc
cmp
stos
fcom
mov
in
std
sub
xlat
sbb
or
inc
mov
out
inc
push
in
jle
cld
lea
mov
lcall
xchg
fs
in
fcomp
mov
pusha
repz
jo
dec
stos
data16
cmpsl
out
dec
scas
pop
outsl
out
maxps
pop
imul
mov
and
or
push
pop
ret
jmp
push
push
sarb
ja
cmp
mov
mov
jnp
cmovo
and
js
clc
test
mov
or
and
mov
sub
mov
imul
xlat
xchg
in
add
shrl
loope
arpl
pusha
movsb
cld
insb
in
mov
mov
mov
jg
sub
js
jnp
hlt
push
dec
int
test
test
and
inc
add
fisubs
ret
cltd
mov
incl
in
movl
insb
scas
pusha
test
xchg
testb
jmp
jecxz
jns
cmpsb
and
cmp
cmpsb
xchg
outsb
dec
and
inc
lods
das
popf
cmp
movsl
and
and
call
pushf
jmp
and
or
inc
mov
push
adc
xor
dec
and
adc
testl
fdivl
pop
sub
mov
gs
inc
mov
pop
ss
adc
insl
adcl
lcall
aaa
xchg
or
fistl
jecxz
lods
or
hlt
data16
or
add
sbb
call
sub
push
jmp
arpl
outsl
jmp
sbb
mov
sti
sti
repz
in
add
lret
and
rcll
jmp
mov
std
or
sbb
pop
ret
and
adc
repz
mov
into
js
int
in
out
xchg
js
jb
ds
cmp
fidivl
mov
cmp
sbb
inc
xor
mov
addb
pushf
mov
data16
rcrb
xchg
out
add
ret
stos
repnz
jp
dec
mov
test
jnp
cmp
lcall
xchg
xchg
sub
gs
add
testl
addl
dec
xor
adc
mov
jl
imul
aam
rcl
cmpsl
mov
addr16
add
xlat
fcmovne
dec
mov
sarl
sbb
mov
in
rep
jge
xchg
ss
push
or
mov
in
aaa
lahf
adc
repz
out
mov
jg
pop
cltd
sub
mov
inc
pushf
push
mov
mov
pushf
pushf
pusha
movb
pushl
ret
lea
jae
mov
mov
mov
dec
push
inc
setno
mov
pushf
lea
call
pushf
push
jmp
push
pusha
pushf
lea
jb
pushf
call
push
mov
or
test
insb
rolb
or
fdivrs
xchg
jns
xchg
xchg
popa
push
pop
sub
pusha
pop
fisubrl
sarb
and
outsb
add
mov
les
or
pop
inc
popf
push
inc
push
add
jl
loope
xchg
xchg
test
cmp
sbb
dec
cs
pop
mov
and
outsb
ret
ss
in
sub
pop
in
sahf
pop
mov
popf
in
lret
cmp
sub
add
rol
mov
sbb
mov
in
and
in
test
jno
push
rcll
lahf
sub
inc
sub
xor
push
das
mov
mov
adc
ljmp
aam
es
into
in
fimuls
je
repz
pop
pop
adc
push
mov
dec
cmp
in
dec
push
cs
push
aam
mov
add
add
aad
lcall
fimull
cmp
inc
inc
push
sbb
pop
sub
add
negl
imul
and
cli
dec
push
jg
das
lea
jae
pusha
pusha
cmp
movb
jmp
pusha
sub
stc
mov
call
call
pusha
sub
jo
test
pusha
jmp
stos
or
packsswb
jno
sbb
and
sub
xchg
call
adc
or
cs
scas
jmp
jmp
call
pop
addr16
mov
out
call
pop
cmp
add
lret
pop
adc
loopne
psllq
outsb
xor
mov
dec
test
sub
cmpsl
mov
ds
and
adc
xlat
inc
lods
ret
gs
arpl
sbb
leave
jp
xor
dec
fsubl
dec
fistl
mov
inc
xor
out
scas
mov
sti
repz
lea
mov
pusha
sub
pushf
push
pushl
popl
mov
movb
bt
cmp
call
sar
packsswb
outsb
ljmp
lcall
lea
push
dec
dec
popf
add
jg
inc
clc
popa
ja
add
idivl
mov
inc
aaa
dec
push
adc
pop
enter
mov
add
xor
sti
ljmp
int3
dec
pop
repz
sarl
fidivs
hlt
inc
sub
fwait
dec
sbb
inc
jg
mov
push
mov
scas
fmull
sbb
addr16
pop
dec
aas
aas
and
mov
pop
daa
test
call
pushf
insb
inc
adc
adc
outsb
ret
decb
push
mov
push
cli
pushf
lods
xchg
xchg
push
lcall
fwait
and
jno
or
push
cltd
push
pop
add
push
sti
pop
enter
shll
testb
mov
cmp
sub
pop
lea
mov
fcoms
fwait
add
andb
test
jg
mov
adc
push
adc
dec
mov
les
push
and
neg
mov
xor
movsb
in
mov
inc
test
adc
out
arpl
lahf
repz
fbstp
xchg
adc
adc
je
out
fs
into
ds
pop
aam
gs
popa
cld
dec
jg
lods
adc
and
je
loope
xchg
add
adc
outsl
mov
cmpsb
push
aad
xchg
add
jno
into
jno
xor
inc
std
stos
inc
cltd
popf
pop
push
cmpsl
adc
xchg
and
rsm
and
mov
dec
push
hlt
bound
push
xor
ret
adc
aaa
movsl
lds
cwtl
or
jbe
es
rcrb
ss
pop
lcall
inc
inc
push
not
jmp
call
inc
cmp
pushl
stc
call
cld
cmp
adc
icebp
pop
mov
cmp
int
pop
popf
lea
push
pop
pusha
movsb
fwait
in
fimuls
adc
pop
xchg
adc
and
xor
push
mov
sub
mov
rolb
repz
pop
inc
repnz
iret
inc
lods
call
cmp
sbb
pop
lds
inc
xchg
jecxz
adc
out
or
sub
das
repz
cmp
and
lcall
mov
pop
loop
inc
inc
pop
push
xor
gs
and
outsb
ficompl
push
jbe
jge
cwtl
push
lahf
mov
or
vpcmpgtw
and
nop
in
enter
push
inc
imul
popa
jnp
push
imul
shl
xor
in
roll
ss
rolb
or
into
rclb
mov
int
outsb
loop
push
iret
icebp
xchg
mov
in
sub
hlt
xchg
inc
mov
mov
sarb
or
or
ljmp
pushf
stc
xor
lea
call
call
lea
ja
call
lods
ret
arpl
pop
jnp
daa
fistps
pop
jae
inc
xchg
and
mov
scas
popf
sbb
bound
pop
inc
fcmovnbe
cmpsl
mov
js
fisttps
ja
lds
loop
push
xchg
jl
add
pop
mov
cs
jb
mov
mov
cs
fmulp
cmpsb
jp
sub
add
or
inc
push
jl
adc
jns
inc
mov
pop
aad
jns
inc
sbb
fisubrs
sub
xor
leave
mov
pushl
out
bound
dec
inc
fucom
movsl
aad
jnp
xchg
cli
ss
inc
push
or
stos
out
xchg
bound
rol
sbb
cmp
jge
and
dec
lret
aad
mov
xchg
inc
mov
enter
divps
mov
pop
out
mov
ljmp
movsb
dec
mov
mov
add
gs
add
test
xor
lock
mov
adc
fucomip
cwtl
cltd
cmc
sub
mov
pop
cmpsb
cli
cmpl
ret
pop
ljmp
hlt
pop
jae
pop
push
cmp
inc
inc
mov
push
aas
shlb
les
mov
shrb
or
mov
push
cli
outsb
adc
inc
loop
jle
inc
mov
sub
mov
daa
inc
lea
mov
dec
cmp
idivb
push
sub
mov
adc
gs
dec
lret
shlb
xchg
or
or
iret
imul
ret
xor
stos
repnz
mov
in
jmp
add
sub
and
mov
sub
cmp
xor
stos
test
in
mov
into
cwtl
push
and
in
cmpb
cmpb
or
dec
sbb
lock
in
mov
jo
insb
aas
into
jne
xchg
pop
xor
movl
push
jmp
xchg
lcall
dec
mov
jbe
es
inc
fidivl
xor
xchg
ret
adc
jecxz
out
mov
call
inc
sar
add
es
in
adc
xor
dec
push
int3
gs
pop
cmp
jmp
pop
pop
cmp
js
fdivl
sbb
sbb
cmp
or
aad
xchg
popa
push
sub
mov
inc
xchg
adc
repz
xchg
pop
xchg
dec
cmpsl
sti
inc
ret
or
mov
pushf
or
psrlq
mov
ss
les
repnz
into
push
faddp
and
cmp
mov
dec
shrb
add
leave
clc
lahf
cmpsl
mov
pushf
cli
jae
lock
inc
rcrl
rcll
adcb
jle
ds
rcrb
sbb
outsl
pop
shll
cmpsl
mov
adc
data16
mov
inc
mov
pop
es
sbb
mov
add
adc
or
pusha
cmc
jecxz
scas
cmpsl
cmpl
fiaddl
mov
cmp
mov
loop
xor
lret
mov
jp,pt
in
addr16
aam
fldcw
add
insl
insl
pop
xchg
pop
xchg
test
dec
stc
lgdtl
arpl
pusha
aam
xchg
fadds
inc
test
insb
in
pushf
xorl
sbb
xchg
pusha
dec
xchg
or
add
cwtl
fcmovu
rcl
push
mov
clc
test
imul
imul
push
mov
call
stc
pop
push
mov
pushf
lcall
mov
dec
xor
int3
lret
jecxz
inc
shrl
and
cmp
hlt
mov
cmp
dec
movsb
aaa
repz
xor
lea
xchg
lea
call
pusha
pushf
pusha
adc
jmp
cmpl
cmp
pusha
rolb
push
pushf
adc
push
out
or
dec
insl
xchg
or
loopne
cwtl
cmp
xor
imul
aas
test
into
mov
dec
stos
adc
sbb
sub
sub
mov
lcall
int3
push
outsl
lret
pop
mov
test
mov
in
les
push
mov
pop
xchg
and
arpl
pop
test
xchg
icebp
push
leave
dec
mov
fwait
adc
mov
sarb
into
inc
add
jmp
shrl
sbb
or
dec
das
sahf
mov
xchg
xor
popf
sti
cmpsb
outsl
dec
dec
dec
aaa
lahf
or
sub
sbb
cs
cmc
repnz
in
cld
in
inc
pmaxsw
xchg
add
sahf
fisttpll
pop
push
xchg
mov
xchg
mov
xchg
push
dec
dec
aaa
daa
jmp
xlat
cmpsl
add
hlt
inc
sbb
add
xor
fwait
movl
lea
ja
clc
imul
stc
add
pusha
pusha
mov
lea
jmp
test
dec
mov
jne
sub
imul
sub
icebp
jno
call
stos
shr
mov
sub
mov
pushw
jl
inc
dec
rcrb
mov
pop
pop
cwtl
movsb
mov
cmp
jb,pn
test
xchg
or
add
ret
sahf
pop
in
mov
pop
jecxz
popl
adc
add
test
test
insb
push
pushf
push
test
push
jne
add
sbb
mov
arpl
daa
xchg
jae
pop
pop
mov
cmp
inc
xor
jnp
test
cmp
adc
outsl
and
xchg
sti
fs
cld
pop
aas
mov
aas
mov
nop
pop
push
icebp
xchg
push
mov
sahf
inc
hlt
xchg
xor
pop
cmp
fidivrl
push
out
cmpsb
add
mov
call
adc
add
add
das
pushf
lea
jb
push
clc
cmp
movb
cmpb
pushf
mov
lea
jne
bsr
not
mov
test
mov
jmp
lds
in
sbb
xor
pushf
hlt
cmp
cmp
mov
pop
push
mov
cmp
call
jns
jmp
fmul
mov
rol
insl
cmp
or
lods
or
jp
je
loop
sub
std
mov
sub
arpl
outsb
mov
sahf
idivb
lcall
loop
and
sub
lcall
pop
push
pop
or
xchg
add
lds
sbb
dec
mov
push
adc
jo
xor
mov
jge
scas
jmp
dec
lods
mov
mov
and
mov
cmp
and
shr
or
roll
dec
jg
loop
bt
pushf
cmp
add
pushf
lea
jl
pushf
pusha
lea
jne
mov
pushfw
jmp
jmp
ret
sbb
sub
adc
xor
lret
cmp
enter
mov
jmp
mov
aam
cmp
loope
inc
lods
call
dec
adc
lret
pop
push
jne
jg
push
call
pop
lock
daa
test
pusha
inc
cli
movsb
sbb
xor
push
inc
stc
jl
dec
xchg
or
inc
adc
mov
fstps
cwtl
push
dec
ret
or
rcl
jae
aas
sbb
flds
fldl
add
in
mov
xchg
mov
push
sti
mov
push
mov
pushf
sub
sbb
negb
cmpsl
movsl
add
mov
lea
mov
cltd
lds
or
sarb
std
pop
cmp
mov
cmp
and
mov
out
pop
ss
arpl
lret
repnz
sahf
or
push
dec
push
sarb
scas
jecxz
insl
pop
ja
and
xchg
out
mov
shrl
or
into
inc
scas
mov
adc
fisubrs
adc
cmp
lea
sbb
lret
sbb
xchg
into
pushf
jnp
sbb
sub
imul
pop
out
mov
mov
lea
icebp
mov
ja
cmp
arpl
pop
cmpsb
incb
ss
push
outsb
into
dec
mov
repnz
shll
popf
cmpsb
sarl
aas
fwait
ja
mov
pop
fildl
mov
xchg
icebp
jae
flds
push
jb
pushf
or
orb
cmpsb
es
movsl
stc
xorb
xor
cli
popf
jns
adc
shll
cmp
adc
adc
stos
test
jbe
inc
ds
mov
cs
scas
mov
xor
adc
lidtl
fisttpl
pop
mov
xor
sub
mov
aam
mov
aad
push
sahf
pop
gs
repnz
shrl
dec
imul
ljmp
roll
inc
mov
and
dec
mov
cltd
stc
xor
mov
fwait
aas
mov
mov
adc
cmpsl
outsl
dec
xor
test
ja
jg
addr16
verw
cmp
push
add
jbe
arpl
daa
xor
xchg
jecxz
fildll
fwait
jl
int
bound
incl
aas
pop
or
sbb
aam
fs
mov
out
push
sti
xchg
pop
push
push
push
sarl
sbb
mov
inc
mov
nop
hlt
push
mov
push
andb
fst
mov
xor
adc
xlat
cwtl
enter
mov
testb
arpl
xchg
add
fldl
adc
std
mov
cmp
mov
adc
jb
test
xor
loopne
mov
push
outsl
adc
out
dec
outsb
minps
gs
or
xchg
inc
mov
fcmovnu
mov
lcall
mov
xor
pop
outsb
lret
lcall
pop
stos
ds
and
aas
aaa
por
xlat
iret
mov
fistl
or
sbb
jge
lea
ja
push
bswap
pusha
pusha
mov
lea
jmp
dec
lods
arpl
arpl
cmp
push
es
xor
mov
xor
sbb
call
jns
push
imul
aad
out
mov
scas
addr16
dec
mov
mov
jno
jns
inc
xor
adc
add
js
xor
stos
mov
jecxz
mov
xchg
call
or
fsubrl
bound
cmp
adc
push
arpl
jo
pop
movsb
cld
jl
inc
xchg
cld
inc
mov
mov
das
xor
mov
bound
adc
and
rorl
in
pop
mov
adc
addb
fistps
sbb
jl
aaa
stos
rcl
int3
sti
cmpsb
cmpb
and
ja
jmp
xchg
outsl
dec
pop
jmp
fwait
outsl
push
xchg
pop
mov
push
cmpb
mov
stc
push
stc
add
jmp
lea
je
stc
cmp
pusha
movb
sub
pushf
clc
pusha
cmp
jmp
aaa
jae
pop
arpl
int3
inc
test
mov
cmp
adc
enter
fisubl
aas
andb
adc
or
cmc
repz
mov
es
mov
mov
mov
xlat
ljmp
dec
inc
xor
movsb
loopne
cmp
dec
jnp
ret
push
cmp
push
cli
mov
push
mov
xlat
mov
dec
fwait
xchg
fistpll
dec
xchg
ljmp
inc
mov
std
movsb
ja
xchg
or
lods
inc
stos
xor
inc
mov
shl
mov
push
jbe
jl
jbe
clc
test
inc
push
loope
jbe
lret
call
inc
adc
sub
pop
mov
int3
sub
add
outsb
loop
xor
or
int
mov
insl
inc
mov
insb
push
fcmovb
shll
and
js
push
mov
movsb
cld
push
mov
pushf
adcl
dec
stos
dec
mov
gs
adc
fsubr
test
inc
scas
pop
xchg
movsl
jecxz
push
mov
mov
fsubr
rolb
fisttpl
xor
jae
ret
faddl
mov
dec
inc
push
out
loop
mov
push
out
sarb
or
insl
xor
push
in
sub
and
mov
push
scas
data16
adc
shlb
lahf
lahf
inc
xor
ret
dec
jge
cld
ret
out
leave
xchg
es
xchg
xchg
push
push
lret
xor
sbb
jne
xlat
shlb
dec
daa
adc
fs
mov
inc
sub
dec
scas
mov
dec
ds
out
xchg
pop
and
push
push
repnz
pop
push
sub
cmp
arpl
call
mov
test
inc
mov
mov
fldcw
addr16
mov
loope
jns
or
cmp
inc
ljmp
pop
add
or
xchg
add
popf
lds
outsb
outsb
inc
inc
pushf
add
test
fdivrs
push
inc
mov
inc
pop
cmp
mov
dec
push
movsl
ret
mov
fnsave
jmp
cmpsl
dec
jmp
aad
mov
inc
shlb
arpl
mov
pop
int3
sub
cmp
cld
fdivl
mov
mov
bound
mov
test
imul
cmp
lock
call
push
mov
mov
sbb
jecxz
sahf
cs
inc
mov
stc
dec
sub
nop
mov
adc
add
mov
je
xor
ffree
mov
or
test
imul
aad
xor
shl
bsf
aad
mov
clc
stc
add
pusha
mov
pushf
push
push
lea
jmp
test
imul
int
xchg
fldenv
cltd
cltd
jle
test
outsl
pop
sbb
mov
in
dec
cmpsb
push
fwait
and
sub
loop
and
lret
xor
ret
call
inc
dec
mov
mov
jns
es
add
jmp
push
mov
cmp
jp
clc
pop
xor
dec
adc
dec
mov
movsl
adc
jl
mov
loope
pop
adc
mov
push
lods
mov
push
lret
mov
or
jmp
mov
and
xchg
cmpsb
lcall
gs
ja
cmp
stos
mov
scas
test
pop
push
sub
enter
pop
jno
cmp
lods
test
ss
fstpt
sbb
jb
cmpsl
mov
cmp
cmp
dec
mov
pop
scas
nop
pop
ds
out
inc
add
popf
fsts
ds
inc
mov
pop
xor
imul
mov
push
push
sub
jle
rclb
movsl
jl
imul
dec
lret
fiaddl
out
cmp
mov
outsb
add
imul
bound
mov
mov
pop
and
js
or
sti
aaa
fs
jecxz
cmp
push
mov
or
xor
in
aas
das
pop
shrb
xchg
mov
aaa
dec
sbb
dec
sub
stc
mov
cmp
or
movsb
ret
stc
stc
ss
adc
sbb
inc
add
push
cmp
xchg
sub
not
lea
shr
shr
mov
call
outsl
test
adc
es
sub
push
test
pop
push
ds
mov
sbb
push
push
ljmp
test
mov
test
inc
or
dec
lds
cwtl
jns
daa
lahf
inc
insl
mov
in
pop
ds
fwait
xor
jmp
pop
xchg
inc
mov
insl
jp
cmp
outsl
xlat
mov
lea
cmp
pop
xor
scas
sbb
inc
lods
call
aas
test
pusha
shll
push
jp
stc
ss
mov
in
lock
and
in
xlat
dec
mov
lock
add
in
cmp
shlb
adc
out
in
mov
outsb
mov
nopl
xor
out
mov
inc
and
iret
xchg
iret
and
add
mov
push
xchg
jge
arpl
pop
pop
fildll
jnp
dec
mov
xchg
cld
cli
push
aas
aaa
aaa
sbb
mov
sbb
mov
repnz
add
mov
sbb
cwtl
add
jo
push
add
es
das
ret
xchg
jge
enter
sub
movsl
or
aas
cmpsb
or
cli
pop
adc
or
push
sbb
mov
pop
inc
movsb
dec
js
popa
insl
imul
cli
and
pop
imul
xchg
movq
xor
sub
push
repz
int3
cwtl
scas
lret
adc
imul
lds
jbe
jo
adc
inc
sub
sbb
or
push
out
fistpl
mov
push
fstps
aas
aas
cmp
sub
mov
daa
or
test
cmp
sbb
ficompl
sub
les
in
xchg
ds
and
das
jns
mov
stc
lds
sub
call
mov
and
jb
jne
je
and
and
jae
jo
outsl
addr16
insl
and
jae
bound
outsb
and
outsb
imul
and
and
jns
gs
and
data16
and
and
push
imul
and
popa
arpl
fs
jae
imul
outsb
daa
je
ja
jb
and
jns
outsl
jb
add
gs
leave
or
adc
or
mov
xor
stos
push
je
xchg
bound
ja
mov
cli
cli
hlt
inc
lods
jmp
pop
and
add
push
mov
jmp
ror
cli
push
jo
testb
out
outsl
test
jb
push
movsb
sbb
adc
push
xchg
sbb
fstps
and
jns
pop
push
xor
adc
xor
aas
shll
arpl
cwtl
in
jo
push
insb
fdivs
and
and
nop
push
inc
xor
lods
mov
mov
push
inc
pmulhuw
cmc
pop
mov
rcl
scas
pop
shrl
pop
scas
sahf
test
cmp
stc
rorb
mov
add
jae
cmp
outsb
or
mov
mov
mov
xchg
pop
aas
pop
lret
mov
jge
pop
dec
test
insb
imul
xor
arpl
push
mov
push
lds
insl
fisttpll
jmp
pop
scas
push
mov
outsb
inc
pop
jmp
cltd
jmp
ja
mov
in
fisttps
iret
cmp
push
jns
mov
lds
xchg
jno
push
insb
and
psrlw
int3
cmpb
pop
cmp
jae
jmp
sub
xchg
or
mov
sub
push
fwait
repz
std
and
sbb
clc
call
inc
or
int3
or
inc
cs
sub
adc
sub
sbb
aam
mov
cmp
add
cmp
std
mov
mov
ja
mov
sub
repnz
stos
xchg
pop
dec
push
ds
adc
add
xchg
cmp
cs
add
mov
jecxz
dec
loopne
int3
lods
stos
adc
aam
in
lock
add
sbb
cmp
iret
imul
rcrb
clc
push
das
xchg
pandn
inc
ud2
or
xor
stc
dec
adc
pusha
sub
mov
jmp
cmc
pop
lods
icebp
mov
or
lds
inc
xchg
bound
pop
mov
sbb
fcmovne
sbb
clc
aas
inc
sti
hlt
pop
rcrl
mov
shll
hlt
fisubs
in
ja
and
scas
repnz
data16
jno
sahf
xchg
nop
int3
lret
inc
sbb
ja
jg
cmp
pop
pop
testb
and
adc
lret
mov
jg
mov
and
cmc
imul
push
bt
add
push
push
pushl
lea
jmp
mov
and
pop
fiaddl
icebp
cmp
sub
out
and
dec
pusha
cmp
ljmp
fstl
std
mov
add
shlb
mov
dec
jb
ss
lret
stos
push
shr
mov
mov
lahf
in
gs
packssdw
xor
mov
loop
subb
stos
lretw
sbb
pop
pop
mov
dec
sub
pop
and
push
xchg
test
xchg
pop
out
lret
dec
inc
push
fwait
lock
push
push
repnz
mov
xor
jge
rcrl
mov
arpl
sub
scas
das
xchg
cmp
mov
xchg
xlat
loop
mov
lods
and
fdivrl
mov
jmp
cmp
les
mov
test
xor
std
adc
lds
sub
xlat
popf
xchg
jnp
push
sarl
lock
mov
scas
repz
aas
xor
sbb
mov
das
inc
lods
or
pop
and
js
sub
mov
gs
inc
mov
xchg
and
scas
fisttps
pushf
mov
mov
cmp
loope
or
mov
jne
sbb
cmp
js
inc
xor
jae
nop
cwtl
push
dec
lret
cmp
dec
das
lea
mov
shlb
cltd
lds
iret
adc
inc
pop
imul
push
dec
ficomps
scas
mov
dec
add
mov
das
sti
repz
mov
sub
push
sub
nop
hlt
dec
pushf
sbb
in
pushf
cld
pusha
fadds
test
scas
or
inc
sub
mov
mov
hlt
push
mov
nop
stc
frstor
xchg
or
sbb
fistl
adc
fists
sbb
aas
icebp
dec
push
sbb
pop
fdivl
flds
jns
fdivl
push
out
addr16
call
sub
add
push
mov
mov
dec
adc
aam
test
pusha
inc
and
pop
cwtl
stos
cmp
pushf
not
pusha
jmp
call
test
sub
fwait
jecxz
mov
inc
cmpsl
sti
addr16
inc
mov
mov
out
pop
adc
sbb
fwait
stc
daa
out
add
loope
mov
mov
xchg
mov
pop
mov
push
jae
int
pop
jae
in
aaa
div
lret
xchg
cmpsl
stc
dec
stc
mov
mov
mov
scas
sub
xchg
stos
imulb
pop
das
push
and
fs
mov
push
xchg
hlt
jbe
lret
push
cmp
fbld
and
not
mov
rorb
cld
rcl
xor
cmp
adc
sub
mov
std
mov
cmp
in
jbe
and
xchg
jp
dec
cli
aam
sahf
pushf
sbb
mov
ds
fcoms
xchg
xchg
sbb
fsubl
sbb
push
xchg
lahf
in
cmp
mov
push
repz
into
stos
inc
add
repnz
xchg
cmp
sbb
scas
add
lcall
out
cmp
pop
mov
inc
popf
jge
or
xchg
mov
jge
lea
mov
gs
sub
ss
push
xchg
incb
sbb
dec
ret
inc
mov
stc
inc
fnstcw
imul
xchg
popa
push
ret
sub
mov
cld
gs
jbe
cmp
cld
gs
pop
cmpsb
jo
sbb
jno
mov
pop
mov
push
test
push
and
sub
mov
mov
mov
mov
bound
mov
xchg
jle
jbe
cmp
push
mov
xor
add
jb
jo
outsb
inc
add
test
add
stc
push
sub
jmp
sbb
sub
mov
pop
sarb
lcall
test
in
xor
sahf
les
sbb
jne
rorb
cmp
bound
xor
iret
sbb
aam
lea
xor
stc
pop
jae
push
xor
mov
mov
add
outsl
inc
sbb
jno
jecxz
gs
sarb
arpl
in
push
mov
lods
lea
push
sub
data16
icebp
xor
dec
mov
xchg
aad
test
lcall
aas
xor
xchg
xchg
pop
inc
and
push
dec
xchg
sbb
adc
sub
mov
mov
mov
sub
mov
enter
pop
sub
adc
jp
push
pop
jnp
movsl
mov
adc
mov
push
pop
mov
adc
ljmp
or
inc
and
push
sub
loopne
nop
pop
dec
and
or
sbb
sub
cmp
popf
in
in
mov
jne
cmp
xor
sbb
loopne
lods
or
test
rclb
push
ljmp
fs
sahf
bound
push
mov
test
lgs
fsubl
mulb
sub
jecxz
test
sti
jl
add
sbb
popf
push
dec
sub
les
jle
xchg
sub
inc
pushf
mov
xchg
jge
cmp
shlb
sub
rclb
shrl
mov
adc
das
arpl
and
or
jle
inc
and
xor
and
les
popf
xchg
sti
sarb
sbb
fidivs
xchg
xor
add
int3
cmp
movsl
xchg
int
add
pop
or
cld
jge
xchg
popa
sub
jbe
fwait
xchg
fsubl
imul
xor
push
test
movsl
std
insb
imul
or
jge
xor
andl
inc
cmp
shrl
sbbl
ljmp
enter
cmpsb
pop
scas
pop
push
push
cmp
pop
xor
add
test
inc
lcall
xor
and
push
xor
xor
pop
sahf
in
xchg
loop
sub
mov
rol
mov
push
or
pop
pop
and
shl
push
popf
inc
xchg
jl
inc
xchg
mov
movsb
jo
lahf
std
cs
ja
push
jb
push
xlat
ret
and
mov
andl
popf
jns
arpl
mov
shll
fs
jns
stos
pushf
pushf
mov
pushf
lea
jmp
pushf
pushf
xchg
movb
mov
call
cwtl
scas
bound
arpl
push
cmp
into
push
xchg
cli
dec
mov
pop
mov
xor
imul
jns
cli
fisubrl
pop
inc
adc
addr16
lahf
arpl
scas
clc
test
mov
shlb
xchg
pop
xchg
xor
jne
add
insl
cmp
mov
out
jle
cld
stos
in
mov
imul
xchg
fs
and
rol
cwtl
xchg
js
sbb
imul
les
jo
arpl
cld
js
inc
lcall
add
stos
sti
aaa
stc
std
ficomps
enter
jo
dec
movsb
lock
mov
mov
nop
js
in
cmp
sub
rorl
jge
popa
cld
jb
jnp
inc
adc
stos
das
jns
inc
mov
stos
mov
repz
mov
pop
test
xor
xor
and
cmp
aad
adc
je
scas
nop
pop
ds
mov
mov
pop
pop
dec
jl
xchg
idivl
nop
xchg
or
enter
adc
les
outsb
out
cwtl
movsl
cmc
add
test
pop
mov
xchg
cs
sbb
adc
in
pop
cmp
lahf
repz
adc
mov
adc
cmp
adc
stos
repnz
call
adc
xor
inc
and
push
pop
push
lds
popl
stos
mov
outsl
sub
lods
jnp
shrb
push
xchg
or
rol
push
mov
lds
mov
xlat
mov
sti
pop
dec
mov
inc
sub
push
addr16
jns
sbb
push
add
aad
add
cmp
xchg
xor
andb
fstpl
sbb
mov
mov
pop
lahf
push
or
inc
xchg
rolb
mov
test
add
xchg
inc
shrl
pop
mov
ret
add
and
icebp
fiaddl
pop
je
mov
mov
loope
mov
mov
sbb
rcrb
jno
sub
xlat
cmp
btr
bts
add
mov
btc
add
sub
mov
test
clc
push
push
shr
jmp
adc
movzbw
mov
clc
mov
stc
cmc
or
jmp
inc
push
mov
cmpsl
sbb
sub
dec
iret
dec
adc
in
lods
sub
dec
mov
jmp
xchg
xchg
loop
and
xor
xor
lds
cmp
or
pop
dec
rclb
xor
decl
shlb
clc
inc
sahf
mulb
mov
cld
dec
sub
ror
mov
imul
pop
sti
mov
std
mov
insb
in
call
jmp
and
out
mov
pop
pop
jle
lods
dec
lds
inc
sub
mov
dec
subl
out
pop
dec
jle
dec
dec
rorl
out
dec
aam
pop
cs
xor
test
pop
pop
pop
inc
mov
mov
push
push
out
mov
dec
dec
xchg
dec
dec
push
or
add
or
or
jo
imul
lds
pop
insb
cmp
test
dec
or
add
jnp
sub
into
dec
shrb
inc
inc
xor
dec
test
pop
or
cmp
pop
push
cmp
dec
dec
rcl
lret
aaa
loope
cmp
in
dec
or
shrl
sub
inc
sub
inc
enter
push
inc
sub
inc
imul
inc
leave
inc
mov
vmovapd
inc
inc
cmp
or
call
mov
sbb
dec
mov
pop
test
pop
sub
dec
dec
add
cmc
adc
lahf
xchg
push
mov
rcll
xchg
jb
lods
sahf
mov
dec
adc
inc
inc
dec
pop
iret
push
fidivrs
push
xchg
lock
adc
dec
pop
decb
shlb
repz
adc
aaa
int3
sub
cmp
inc
call
rcll
mov
fdivrs
pop
nop
lret
mov
aaa
jge
inc
lods
cmpsl
sub
adc
inc
adc
mov
fmuls
aas
dec
jg
xchg
icebp
inc
hlt
dec
ret
les
mov
and
inc
in
movsl
inc
and
test
mov
andb
cmpsl
inc
xchg
addr16
in
movsl
dec
inc
andl
arpl
out
xor
aas
mov
pop
test
pop
repz
dec
nop
rcr
xchg
dec
dec
or
mov
sub
mov
repz
ljmp
stos
stos
push
cmpsl
push
out
xchg
cmp
pop
lahf
pop
jae
cmp
rcll
fcompl
sub
and
int
sub
fsubrl
rorb
cmp
sub
pop
sub
fldt
or
xor
xor
lret
adc
jle
testl
sub
dec
dec
lret
xchg
mov
lret
in
mov
leave
lret
hlt
lret
fdivl
sub
leave
shrb
or
lds
dec
pop
sub
push
push
lret
ds
dec
sahf
lret
add
dec
pop
sbb
mov
mov
outsl
dec
mov
outsb
int
rol
dec
dec
dec
hlt
fildl
mov
dec
rcrb
lret
fldt
mov
ja
cmp
add
add
adc
fists
movsl
movl
lds
push
mov
pop
sti
push
movl
shl
fistl
dec
mov
push
and
push
jp
ret
ret
jle
mov
ja
pop
popf
inc
cmpsb
add
dec
js
xor
push
xor
dec
jbe
jg
adc
mov
dec
mov
sub
inc
lret
jl
xor
pop
add
adc
push
hlt
jnp
dec
xor
ret
adc
pop
ret
push
aam
dec
inc
lret
lret
mov
incb
in
mov
xor
sbb
lret
incb
adc
into
add
cmp
lds
ss
mov
dec
pop
and
pop
xor
rorl
int3
push
loop
pop
mov
mov
inc
mov
push
cmp
pop
push
lods
mov
ficoml
lock
lds
jecxz
mov
ja
push
jl
sbb
es
mov
addr16
adc
inc
dec
idivb
pop
insl
or
xor
mov
dec
push
sub
lret
cmpsl
cld
dec
daa
or
fbstp
push
inc
jbe
xchg
cwtl
into
mov
aam
xor
cmpsb
pop
cld
mov
pop
xor
dec
sbb
mov
stos
fadd
sub
push
xchg
xor
pop
adc
dec
mov
lds
aad
mov
inc
data16
hlt
jp
mov
pop
adc
outsb
aam
rcrb
nop
mov
je
xchg
outsb
add
pop
xchg
xchg
dec
mov
dec
sbb
add
mov
mov
sub
mov
leave
pop
cmp
or
or
sub
dec
test
in
pop
mov
cltd
stos
addr16
jb
stos
push
std
dec
lret
cmp
out
dec
test
sahf
add
aaa
mov
mov
js
push
mov
lods
movsl
stos
int
movsb
or
jno
movsb
das
push
add
add
dec
dec
filds
fs
xor
pop
rcr
or
push
lret
test
jecxz
or
ja
push
ret
testb
inc
insl
shrb
inc
pop
inc
addb
inc
aad
out
lret
jg
dec
shll
jne
cli
data16
scas
sarl
mov
or
jmp
or
jecxz
or
adc
jle
and
mov
leave
mov
addb
cmp
mov
xchg
sbb
movsb
ja
leave
adc
inc
xlat
mov
dec
xor
xor
test
dec
adc
test
dec
nop
shrb
dec
jns
or
mov
add
stos
jbe
sub
into
xlat
cmc
dec
notb
xor
imulb
out
sarl
jbe
mov
cmpsl
sub
dec
cmpsb
cmpb
and
rclb
popa
lret
sbbb
mulb
enter
cmp
or
pop
jl
push
push
push
push
jnp
leave
rcll
jo
mov
dec
pushf
clc
push
jnp
aad
mov
pushf
adc
js
daa
ss
dec
xchg
push
mov
les
xchg
lret
ja
ljmp
inc
rcrb
shrl
inc
push
dec
push
pop
pop
sub
push
sahf
sub
test
sub
sbb
leave
inc
push
sub
cmp
or
lret
mov
inc
enter
pop
dec
mov
lcall
jmp
pop
mov
loopne
inc
test
dec
inc
lock
xlat
sbb
mov
push
sbb
decb
negb
jo
sbb
notl
cmp
pop
inc
mov
xor
aas
icebp
xor
sbb
aas
push
call
xlat
js
pop
fdivrl
mov
xchg
push
jo
xchg
xor
lock
inc
daa
mov
cmp
lcall
mov
addr16
fs
push
jo
sbb
ds
addl
orb
inc
jae
mov
push
xor
jg
push
orl
enter
jno
imul
dec
adc
dec
dec
int
cltd
mov
rclb
dec
idivl
jo
lahf
xor
nop
jbe
add
dec
inc
or
or
xor
pushl
sarl
adcl
adc
add
fwait
das
pop
and
int
adc
lret
xchg
inc
aam
stos
das
jno
sbb
sbb
jle
pop
pop
negl
jmp
in
and
sahf
xchg
cltd
adc
push
pop
sub
dec
lea
in
adc
add
movsb
mov
in
les
cmpsl
inc
lds
test
dec
leave
mov
pop
adc
ljmp
lret
mov
mov
sub
mov
loope
mov
xchg
inc
inc
mov
ja
lret
dec
mov
or
ret
es
fs
xor
and
inc
iret
lret
enter
and
mov
inc
sub
jmp
dec
jns
or
and
rcrb
xor
mov
adc
int3
pusha
and
shll
dec
dec
data16
jmp
loope
fs
sub
loope
test
xchg
into
jecxz
pop
and
gs
sub
inc
shlb
xchg
or
pop
inc
dec
rcll
lret
pushl
adc
add
nop
xchg
into
jg
es
mov
xchg
adc
or
sbb
push
pop
mov
xlat
dec
lahf
jl
push
adc
rol
les
and
int3
jl
adc
pop
xor
xchg
arpl
pop
or
or
jg
adc
loope
cli
jae
mov
sbb
sub
mov
sbb
test
lock
lret
test
push
adc
dec
shl
daa
push
pop
inc
fsts
pop
cmp
mov
jnp
adc
mov
and
inc
fsubs
rol
and
add
iret
or
repz
icebp
pusha
add
and
shlb
lods
adc
dec
xor
jnp
rclb
pop
or
stos
mov
pop
push
lret
jns
jae
ljmp
iret
dec
test
push
inc
les
pop
hlt
xor
les
jnp
push
add
mov
pop
jnp
aaa
push
mov
cmp
loop
rolb
hlt
jo
mov
dec
jbe
sbb
leavew
insb
mov
cmpsb
sbb
int
mov
dec
push
or
or
or
mov
and
sub
cmp
inc
mov
push
sbb
xlat
lea
dec
aaa
and
sub
hlt
das
pop
leave
mov
mov
sub
xchg
in
test
push
enter
push
dec
or
pxor
stc
dec
lret
enter
movsb
enter
enter
and
out
aad
push
and
pop
mov
add
lret
push
add
xor
lods
ret
ret
rcl
int3
cwtl
sub
movsl
subl
push
jecxz
lret
gs
mov
mov
fnstcw
ds
iret
addr16
dec
pop
inc
inc
int
inc
inc
scas
enter
dec
dec
flds
in
ljmp
rcrl
lret
mov
inc
xchg
int
add
cs
mov
lret
or
inc
pop
popf
mov
xchg
lret
mov
push
add
aam
pop
dec
mov
xchg
out
push
pop
or
popa
dec
mov
jg
sbbb
inc
pop
xor
andl
outsl
ret
dec
movsb
pop
int3
fdivrs
js
or
or
int
aam
int
popl
push
lret
scas
enter
sbb
cs
inc
idivb
sbb
test
or
clc
int3
sbb
inc
inc
shlb
mov
sbb
movd
insl
add
pop
and
iret
xor
inc
fisttpll
paddsw
mov
add
adc
or
cmp
dec
mov
jmp
lea
dec
int
sub
mov
add
leave
and
dec
leave
std
inc
ljmp
es
pop
lahf
sbb
jmp
movsb
dec
dec
dec
mov
leave
add
push
scas
dec
addl
xchg
adc
adc
arpl
andl
std
dec
test
in
dec
ror
push
inc
test
push
es
pop
push
dec
inc
push
or
fs
in
mov
lret
ret
popf
jmp
cmp
or
int
inc
cltd
cmp
or
cmp
or
lea
mov
dec
mov
out
and
jecxz
add
enter
dec
fidivs
add
jle
sub
rcl
jmp
shr
cmp
or
test
or
cmp
pop
int
inc
fdivrl
or
cmp
or
and
cmp
fldt
pop
shrl
cmp
or
jmp
fnstcw
lret
or
cmp
inc
cmp
inc
shrl
cmp
or
inc
lds
lret
shrl
int
inc
ret
cmp
inc
shrl
int
inc
sarl
or
cmp
inc
dec
push
ror
sub
dec
int
inc
lret
or
cmp
enter
cmp
leave
int
ret
inc
ss
cmp
iret
int
inc
scas
cmp
pop
aam
cmp
pop
add
gs
and
in
dec
movsb
test
pop
out
cmpsl
mov
pop
dec
lret
dec
imul
jmp
mov
dec
cwtl
or
imul
test
and
out
fs
ljmp
pop
dec
sub
in
push
dec
dec
int3
das
or
or
dec
lea
outsl
lods
jns
iret
insb
sub
dec
pop
test
in
pop
test
and
sub
ljmp
sub
icebp
mov
or
loope
lret
or
inc
sub
call
ljmp
or
in
dec
fistpl
out
test
sub
or
pop
dec
or
mov
in
or
or
aad
mov
adc
test
mov
dec
mov
insb
aad
into
insl
mov
push
dec
outsl
sub
lret
sub
or
pop
dec
cwtl
or
lret
ljmp
sub
or
shrl
dec
dec
ljmp
dec
dec
or
enter
sbb
pop
stos
int
inc
or
aad
insb
outsb
sub
or
int
or
pushf
or
or
out
outsb
sub
or
lea
pusha
ror
leave
insl
mov
sbb
add
pop
into
jecxz
or
dec
mov
or
lods
pop
cmovp
pop
add
dec
dec
sub
int3
ljmp
into
inc
mov
or
insb
add
ds
push
ret
sub
in
adc
pop
jns
pcmpgtw
sbb
int3
orb
iret
pop
dec
pop
in
fisttps
movsl
scas
into
insb
dec
or
xor
pop
dec
mov
xchg
cs
add
iret
push
stos
dec
or
fisttpll
into
int
cmp
psubsw
std
inc
int
or
mov
add
jecxz
sbb
dec
and
mov
or
imul
mov
dec
aam
jns
push
sub
pushf
enter
xor
or
sub
sbb
and
sub
pop
sub
or
es
or
push
loopne
cmp
in
inc
or
inc
pop
mov
or
pusha
dec
push
test
sub
mov
iret
mov
or
outsl
int
les
lods
or
sub
or
ljmp
pop
cmp
lret
fisttpl
or
subl
or
mov
out
add
pop
push
or
call
shl
or
shr
ret
pop
iret
mov
orb
sub
dec
repz
inc
enter
and
int
in
lods
push
add
in
wbinvd
sub
dec
scas
orb
push
not
mov
test
rolb
aam
xor
or
jecxz
dec
movsl
leave
in
or
jp
add
pop
cmp
stos
push
dec
lods
test
pop
dec
xchg
mov
dec
daa
xor
sub
jmp
mov
lea
or
enter
jge
sahf
sub
or
movsl
push
inc
insl
add
rclb
testl
rcll
mov
sbb
es
mov
cmpsb
pop
dec
pop
xchg
sub
outsb
leave
cmp
stc
cld
mov
or
fstps
jp
lret
in
push
mov
or
push
xchg
sub
jecxz
or
stos
cmp
iret
mov
or
lods
push
pop
pop
cmp
cmp
sbb
lret
scas
or
sub
mov
movsl
mov
in
dec
cwtl
jb
sub
pop
xor
or
enter
or
out
pop
int3
outsl
pop
lods
aam
mov
or
mov
pop
or
stos
cmp
mov
dec
or
outsl
call
mov
stos
or
or
cmp
psraw
pop
in
test
or
cli
pop
jns
fiaddl
add
fdivrs
arpl
dec
leave
pop
bound
cmp
cmp
or
std
stos
or
add
outsl
fldl
or
in
mov
cmp
ljmp
mov
insb
cmp
push
aad
sub
cld
fsubrl
mov
jg
sub
sub
out
enter
ljmp
test
fdivr
int
jo
push
sub
ret
into
int3
into
or
lahf
sub
insb
or
aad
into
mov
inc
outsl
pop
ljmp
test
fcmovnbe
scas
or
test
cmp
push
dec
sub
iret
lret
sbb
sub
or
or
pop
enter
or
cs
or
mov
sahf
mov
cld
or
jle
or
xor
orb
adc
mov
mov
xchg
icebp
dec
jno
sub
fcoms
xor
push
lock
arpl
mov
out
or
mov
or
jo
mov
adc
adc
pop
mov
mov
dec
repnz
test
mov
pop
insl
scas
cmp
xchg
fnstcw
dec
jae
test
push
stc
mov
dec
bswap
or
lret
pop
lret
pop
push
sub
ss
call
insb
or
movd
pop
dec
scas
stos
sub
xor
cltd
popa
lret
rorb
jne
cmc
sub
leave
xchg
test
or
or
mov
mov
or
push
push
pop
movsl
xor
adc
in
ss
mov
sub
mov
enter
or
aam
cmp
xor
test
ret
dec
scas
hlt
loope
stos
or
pop
add
mov
xchg
or
je
dec
iret
xchg
test
cmp
lods
push
setno
inc
inc
scas
or
inc
aaa
mov
negl
lret
mov
cwtl
add
mov
add
fisttpll
lods
out
sub
xchg
ret
or
sub
or
ljmp
pop
dec
jge
lret
ss
sbb
push
pop
dec
xchg
jecxz
or
mov
or
int3
aad
int3
insb
cltd
add
dec
scas
cmp
or
fsubrs
pop
test
mov
pusha
adc
dec
shll
sub
or
dec
cli
leave
sub
into
or
inc
or
jl
sub
sbb
addl
das
leave
inc
or
lds
mov
cmp
in
sub
dec
mov
xchg
outsb
out
call
enter
dec
int3
or
mov
imul
lods
push
stos
push
or
sub
mov
dec
dec
insb
mov
test
das
imul
stos
add
mov
lea
mov
xchg
outsl
mov
xor
leave
imul
sbb
addl
fsubrs
ret
paddusb
inc
or
or
sub
cmp
dec
lret
dec
mov
in
ret
cmp
or
dec
cmp
ret
and
cmpsl
pop
das
mov
or
jl
or
cmp
outsl
mov
add
adc
lods
dec
sbb
ret
sub
cmp
popf
leave
inc
dec
test
aad
mov
sub
cmp
or
or
dec
enter
decb
or
in
int3
push
iret
gs
sub
xor
sub
stos
das
adc
ljmp
iret
mov
or
dec
xor
or
out
pop
in
inc
iret
sub
xor
push
sub
fcompl
or
jbe
lods
or
outsl
or
dec
or
dec
jle
push
cs
enter
fs
dec
mov
or
cmp
inc
iret
lret
dec
into
test
scas
test
mov
int
or
outsb
int
ret
cmp
dec
sub
rorl
dec
sub
or
sarl
fldt
mov
or
lods
pop
bswap
scas
in
addl
sub
mov
imul
or
stos
scas
sub
xlat
popa
cmp
lds
test
scas
push
inc
sub
push
test
sti
int3
enter
in
shr
popf
inc
loopne
stc
popl
push
stos
in
loopne
pop
xchg
and
dec
ss
cmpsl
fdiv
sub
or
leave
int3
iret
mov
xor
shrl
insl
test
cltd
lods
ljmp
xchg
cltd
sub
in
test
imul
insl
dec
call
test
push
cltd
fiaddl
into
xchg
sti
test
cltd
ljmp
fsubrl
sbb
je
sbbb
pop
imul
and
dec
mov
call
mov
pusha
cmp
icebp
int3
or
push
mov
dec
imul
xchg
imul
lcall
or
das
or
mov
int3
fcmovbe
mov
push
or
dec
or
jmp
push
dec
lret
dec
shlb
stc
js
push
lods
cmp
outsl
mov
add
leave
dec
mov
mov
fsubrl
or
stos
jnp
pop
aad
dec
das
dec
mov
insb
sub
dec
adc
mov
mov
xchg
jmp
adc
faddl
test
ret
and
mov
dec
shrb
or
iret
cwtl
sbb
dec
push
push
dec
push
stos
lods
xor
mov
in
cwtl
aam
or
pop
jmp
dec
into
mov
jmp
inc
test
inc
repnz
mov
sbb
leave
or
adc
inc
sbb
pop
push
or
or
int
dec
jno
or
fcoms
dec
inc
imul
push
int
sub
add
dec
sahf
dec
mov
or
add
imul
push
mov
or
rcrl
insl
flds
inc
mov
inc
ljmp
mov
sub
enter
dec
push
pop
js
adc
dec
xchg
sub
jmp
inc
adcl
inc
dec
fldenv
dec
pop
mov
arpl
mov
subb
int3
xor
or
inc
xlat
xor
sub
int
outsb
insb
and
dec
dec
adc
or
sbb
mov
push
mov
fisttps
int3
test
lret
ljmp
ret
les
pushf
fsts
sbb
ljmp
mov
adc
add
les
pop
push
imul
push
sub
dec
dec
das
or
leave
adc
lcall
mov
leave
and
and
insl
mov
or
push
pop
or
stos
add
mov
inc
andb
add
cmp
iret
in
inc
inc
xchg
out
sub
and
dec
dec
in
dec
or
pop
lods
jns
lds
pop
ljmp
rcrb
pop
rorb
dec
enter
cmp
inc
fsubrs
push
test
gs
cwtl
push
punpckhbw
enter
sbb
cmp
sub
cmp
inc
test
lret
lds
int
and
fcmovnu
sub
test
les
adc
push
leave
lret
jmp
jmp
or
push
or
outsl
adc
or
imul
lret
xchg
cmp
jmp
push
stos
cltd
dec
sub
inc
int3
inc
lret
push
das
pop
push
fs
test
call
inc
sbb
roll
dec
sub
or
sarb
shrb
das
or
adc
sub
test
frstor
and
mov
int3
dec
sub
cmp
in
jle
dec
dec
les
push
pop
push
test
pop
fs
or
jmp
iret
mov
int3
pop
lret
or
test
leave
scas
popf
pop
dec
dec
and
fiadds
dec
push
pop
inc
push
nop
int
int3
adc
inc
or
or
sub
outsl
sub
stos
dec
and
adc
or
xchg
inc
test
shll
test
adc
or
push
xor
add
loope
xchg
sarl
adc
daa
pop
cmp
sub
mov
pop
xor
jmp
push
sub
cmpsl
xor
insl
dec
dec
or
dec
fmulp
enter
sarl
and
fcompl
fsubrp
sub
xchg
enter
mov
lret
lds
int3
sbb
xchg
fisttps
xchg
jmp
xor
call
xchg
stos
rcrl
mov
in
leave
lahf
mov
pop
les
or
pop
dec
pop
inc
inc
outsl
push
dec
jmp
pop
push
insl
jg
iret
push
iret
lret
es
push
imul
push
dec
int
mov
int3
sbb
push
lods
pop
leave
pop
mov
or
push
mov
dec
and
stc
or
or
out
and
xchg
push
dec
je
pushf
fwait
lds
or
in
dec
sbb
loopne
dec
jl
xchg
int
dec
sbb
outsl
mov
and
cmp
sub
jmp
adc
inc
jmp
ljmp
push
adc
sbb
pop
movhps
mov
roll
xchg
aas
sub
fwait
subb
push
sub
ret
fistpll
mov
sbb
push
push
mov
mov
mov
stos
pop
mov
adc
cltd
cmp
adc
or
das
adc
pop
aad
xchg
lret
jmp
ljmp
sbb
outsb
mov
sub
pop
scas
leave
cmpsb
flds
adc
lret
in
adc
or
dec
int
cmp
bound
lods
leave
xchg
mov
int
lcall
imul
push
push
add
push
add
sbb
add
cmpsl
lcall
inc
or
adc
dec
sahf
lea
lahf
mov
scas
filds
or
enter
fwait
xchg
pop
or
xchg
push
iret
pop
psrlq
add
inc
aad
rcr
mov
xchg
lea
lods
xlat
push
int
sub
xlat
mov
push
cmp
test
fadds
jb
popf
or
or
xchg
inc
inc
imul
cmp
sbb
mov
mov
pop
imul
sub
stc
fstpt
adc
pop
dec
dec
pop
inc
fdivrs
testb
jp
push
fmul
insl
adc
pop
imul
stos
add
roll
inc
adc
sub
sub
pop
inc
dec
insb
mov
lods
fcompl
sbb
adc
inc
cmp
sub
test
jmp
call
int
sub
or
dec
xchg
lds
enter
inc
sbb
add
fld
sub
jmp
jg
dec
adc
roll
pop
cmp
pop
mov
dec
rorl
into
sub
cmp
dec
dec
inc
sbb
lock
add
ror
xchg
xchg
or
push
sbb
dec
aad
mov
inc
leave
cwtl
pop
fwait
adc
xchg
dec
pop
push
rorl
or
cmp
imul
pop
rclb
cmp
int3
fwait
das
xchg
jmp
test
push
inc
ror
jnp
insl
push
test
adc
add
clc
ret
lea
sbb
ror
pushf
or
push
adc
popf
adc
shrb
lret
sbb
stos
int3
fcomps
or
inc
cld
adc
pop
or
push
add
clc
xlat
test
pop
add
ror
sbb
fsubl
pop
jecxz
jno
mov
inc
mov
pop
mov
pop
rcrl
fsts
lcall
lahf
sbb
sbb
and
lret
sbb
xor
int3
leave
lahf
push
mov
dec
lods
test
push
push
or
sbb
fisttpll
adc
imul
dec
inc
aad
sbb
fimull
fisubl
add
and
cwtl
or
inc
inc
and
and
push
adc
insl
imul
leave
inc
dec
aaa
sbbb
pop
leave
mov
inc
sti
pop
or
adc
fiadds
xchg
int
xchg
inc
outsl
movsl
inc
int
jnp
or
xor
cs
movl
test
fists
add
lret
mov
dec
cli
sbbb
xlat
push
jmp
call
mov
pop
inc
ficoml
mov
inc
leave
sbb
popf
mov
pmullw
pop
enter
repz
dec
insl
cmp
sub
psubusb
iret
fldt
jmp
lea
xchg
mov
and
ds
enter
xor
cltd
mov
das
inc
rcr
pop
test
inc
fiadds
inc
ficomps
fisttps
fstp
fdivrl
or
ljmp
dec
sbb
pop
cs
test
shrl
mov
in
ret
adc
mov
popf
mov
add
rcrb
leave
add
add
and
or
into
sub
and
call
imul
into
xchg
sbb
fimuls
inc
lods
pushf
or
fsubr
jmp
pop
imul
add
fsubr
dec
pop
repz
test
mov
xor
inc
inc
dec
xchg
cltd
dec
int
pop
adc
or
cmp
push
push
ss
fsubrs
dec
mov
dec
dec
iret
stos
pop
pop
adc
rclb
ret
inc
ja
adc
fists
or
or
rcr
sbb
mov
or
sbb
ficoml
xor
pop
int
cmovae
aad
dec
mov
add
sub
int3
xchg
popf
xchg
lret
nop
in
pop
insl
clc
pop
adc
add
jmp
adc
lea
or
or
lret
test
dec
inc
int
paddq
or
add
loop
dec
sbb
mov
mov
shll
dec
dec
sub
or
int3
or
cmp
int
ret
dec
push
repz
jecxz
pop
or
dec
sub
enter
pop
stos
add
xchg
das
pushf
push
inc
popf
ficoml
push
push
jnp
rcll
setl
aaa
hlt
xlat
cmp
dec
xchg
or
sbb
jmp
pop
inc
lods
mov
outsl
rolb
sbb
nop
loopne
ret
push
push
dec
or
cmp
int
sbb
ljmp
push
lahf
int
int
movsb
lret
scas
fwait
sub
ficompl
mov
sbb
adc
cmp
adc
in
loope
pop
dec
fistl
movsb
dec
mov
inc
jg
loope
dec
inc
rorl
or
dec
and
add
adc
pop
ret
inc
scas
ret
inc
xlat
and
xor
invd
ret
fsubl
test
adc
sub
jmp
enter
pop
pop
into
shrb
mov
roll
or
int3
adc
lret
sahf
rcrb
cmp
mov
pop
inc
pop
dec
inc
mov
int
xchg
filds
sbb
sub
sub
roll
fisttpl
mov
repz
mov
xchg
push
dec
aaa
xor
movsl
shl
and
mov
jg
pop
lret
xchg
mov
fbld
fwait
inc
sub
test
fisttpl
push
pop
add
test
mov
cmp
push
lock
mov
pop
movaps
fisttpl
adc
jns
mov
push
push
test
fidivl
int
dec
and
and
sub
scas
inc
or
stc
or
and
lret
sbb
adc
lret
inc
out
push
shrb
jmp
sbb
int3
xor
dec
cwtl
pop
inc
ret
fcomps
fistps
mov
sbb
leave
pop
hlt
mov
dec
scas
aam
add
int
mov
shrb
insl
mov
ficompl
lods
sub
sbb
push
xchg
xchg
dec
andb
xchg
das
test
pop
xchg
sbb
rcrb
pop
push
insb
stos
dec
xor
fisubl
out
rorb
adc
jns
xchg
stos
iret
adc
or
jecxz
fstps
aam
inc
push
mov
pop
fistps
sub
sub
and
test
or
and
fadds
inc
adc
flds
and
push
in
jns
jl
pop
mov
subl
test
nop
add
mov
push
lods
cmp
mov
in
sub
fxch
jmp
or
xlat
outsb
movsb
push
enter
fmuls
int3
stos
mov
sub
add
rcl
lret
inc
lret
lods
cwtl
fisubl
or
dec
push
aad
mov
push
sbb
add
push
sahf
outsl
xchg
pop
popf
pop
sbb
jno
cvtps2pd
push
pop
or
or
inc
fcmove
jnp
aam
enter
test
xchg
sarl
fsts
lea
add
adc
roll
fstps
xlat
sub
stos
dec
dec
pusha
rcrl
or
pop
adc
and
enter
pop
insl
push
sarb
dec
dec
push
inc
push
dec
mov
push
sarb
subb
dec
subl
fildl
roll
stos
shlb
push
pusha
or
pop
and
call
fmuls
or
pushf
stos
fimull
sbb
pop
iret
stos
ficoml
pop
push
xchg
mov
adc
or
and
sub
and
or
clc
push
push
rclb
int
sbb
inc
inc
pop
lds
inc
in
push
adc
rcrl
stos
test
rolb
jmp
adc
subb
bswap
inc
rorb
call
fucomip
xchg
int3
sbb
add
imul
inc
xlat
sbb
sbb
dec
call
ljmp
divb
sub
adc
and
lea
shrb
dec
stos
movl
in
sub
mov
and
add
jnp
loopne
test
push
mov
sub
inc
jmp
sti
xor
aas
sgdtl
add
adc
mov
xchg
and
inc
xchg
insl
push
sbb
shrl
leave
fisubrs
mov
aad
les
pop
jp
bound
fisttps
repz
jnp
enter
mov
insb
add
cmp
pop
inc
popf
mov
shl
sti
adc
dec
cmp
pop
into
popl
sbb
add
sbb
inc
mov
in
push
insb
push
lcall
popf
mov
push
inc
int3
or
in
mov
push
adc
lret
lods
fistpl
cmp
leave
dec
jge
roll
mov
adc
adc
bswap
stos
xchg
xchg
push
inc
rclb
mov
imul
adc
mov
insl
lods
cmc
xlat
or
sub
dec
and
fistpl
inc
cmp
in
movsb
aad
push
adc
add
les
frstor
inc
adc
sub
sbb
sub
aam
call
adc
mov
insl
mov
add
fadd
enter
lret
add
stc
cltd
insb
add
popf
or
inc
sbb
in
push
rorb
jnp
inc
ret
push
movsl
pop
leave
add
insb
sbb
or
xchg
jmp
jmp
rcr
mov
fcoml
cmp
cmp
int3
adc
int
lods
or
lahf
push
dec
rcrl
stos
aad
ret
dec
add
or
inc
int
outsl
xor
sub
inc
fsts
pop
pop
aam
inc
stos
xchg
stos
jb
lea
clc
lods
enter
sbbl
inc
test
mov
xchg
aam
mov
xor
jge
xchg
sbb
add
and
pop
cld
fdivl
popf
lret
dec
xchg
scas
adc
sub
push
add
xchg
pop
into
movsb
mov
in
jmp
pop
pop
bswap
fldlg2
push
sbb
fcomp
mov
fldl
dec
dec
leave
insb
adc
cmp
sub
sub
sti
xchg
fiaddl
test
rcrb
fldcw
cmc
repnz
ss
dec
add
dec
push
sbb
cmp
imul
push
and
push
add
cmpb
lods
cmp
push
stos
xor
mov
push
mov
sub
pop
mov
fsts
enter
push
loop
leave
movsl
sbb
sbb
inc
in
or
popf
or
pop
into
push
fstl
and
arpl
rcrl
into
int3
add
and
rol
inc
xor
push
dec
mov
adc
bswap
out
fistpl
fnsave
push
inc
adc
add
mov
or
mov
loopne
cltd
pop
mov
inc
mov
enter
call
movsl
leave
sbb
mov
lsl
push
jnp
dec
cltd
sbb
mov
aam
inc
leave
fcmovnu
mov
and
sub
pop
dec
mov
les
pop
out
push
pop
dec
add
lods
dec
int
mov
fsts
sub
lret
fistps
push
iret
or
aas
lcall
repz
rorb
adc
mov
pop
jmp
dec
scas
fisubrl
rclb
xchg
or
call
adc
cld
sbb
lret
mov
test
aaa
add
ljmp
mov
sub
sub
fisttps
xchg
mov
lahf
stos
mov
pushf
mov
stc
pop
sbb
add
dec
jmp
decb
lds
sub
jg
enter
in
sub
mov
sub
mov
mov
push
loop
mov
jmp
movsb
cmp
filds
rol
dec
mov
loopne
or
cmp
aam
lret
aam
aaa
and
repnz
call
mov
sub
xor
lods
in
mulb
cmp
mov
adc
in
adcb
rorl
xchg
mov
inc
push
cwtl
mov
mov
push
pop
and
add
test
lret
and
or
ljmp
icebp
mov
mov
leave
sbb
mov
or
push
dec
fistps
movsb
int
enter
xchg
mov
test
leave
insb
sub
in
fwait
add
ds
dec
outsl
enter
scas
and
dec
mov
cld
test
ljmp
iret
mov
fstps
mov
outsb
sub
inc
xchg
or
outsb
lods
test
inc
pinsrw
sbb
int
or
outsl
and
dec
sub
mov
xor
ret
dec
mov
add
outsl
adcb
sub
pop
in
test
sub
dec
mov
and
pushf
test
pop
sbb
rcll
mov
lret
dec
mov
push
out
test
or
push
iret
cmp
call
mov
in
adc
test
pop
jp
in
pop
dec
mov
flds
fwait
aam
or
or
jmp
pop
outsl
mov
dec
lods
mov
loop
fsubs
pop
rorb
mov
pop
lret
imul
or
sbb
enter
lret
aaa
add
mov
add
int3
add
or
mov
je
xlat
in
sbb
or
scas
lea
dec
shrb
test
orl
pop
sub
and
out
lea
pusha
jnp
pop
popa
mov
insl
add
into
leave
mov
enter
add
int3
imul
mov
int3
pop
fiadds
sub
mov
dec
outsl
scas
movsl
enter
add
dec
fwait
test
in
jmp
dec
outsl
cmp
das
imul
mov
dec
enter
push
or
pop
fmull
adc
or
or
or
push
iret
test
dec
fimuls
aas
push
fldcw
jo
orb
test
pop
outsl
test
stos
movaps
add
enter
lret
aas
or
mov
mov
mov
fxch
lret
aaa
dec
jmp
mov
mov
aas
push
cmp
fwait
sahf
mov
jg
shrl
jle
push
mov
insl
mov
addl
iret
dec
enter
ror
xchg
or
fwait
stos
dec
fistpll
fmull
int3
pop
or
dec
int3
dec
inc
mov
xor
mov
mov
in
insl
rolb
xor
dec
popa
inc
add
rorl
enter
pop
fisubl
das
out
adc
mov
mov
mov
mov
shrl
or
ja
aam
sbb
jb
sbb
xlat
or
push
mov
dec
mov
push
aam
pop
mov
or
lret
or
aad
add
cltd
fldt
cmp
pop
dec
or
loopne
movsb
int
int3
das
dec
imul
xor
aaa
inc
pop
mov
cmp
fs
stos
fisttps
jmp
mov
adc
stos
cli
adc
shr
popf
sbb
int
mov
and
jle
dec
sbb
outsl
lods
inc
cmp
push
sti
mov
mov
dec
or
jle
sarl
push
pop
mov
mov
xchg
xor
enter
mov
inc
int3
shl
add
fildll
imul
sbb
lods
sbb
and
int3
xchg
jmp
add
adc
mov
cs
insl
lods
decb
or
clc
mov
or
aad
scas
mov
mov
dec
lret
lret
add
sahf
lods
cmp
adcl
repz
add
jnp
lcall
stos
in
push
sub
and
mov
sub
or
mov
sbb
andl
add
in
aam
or
fstps
push
and
stos
dec
out
and
rcll
sbb
imul
stos
dec
testb
add
pop
fsts
test
adc
adc
cmp
dec
mov
sub
or
sbb
adc
mov
push
int
add
test
les
mov
add
sbb
rcrl
imul
fsubs
push
cwtl
adc
pop
dec
dec
aas
xchg
and
fdivr
mov
fxch
inc
neg
test
insl
aad
and
sub
or
int
notl
and
rolb
mov
fwait
mov
ret
xlat
nop
sbb
fwait
scas
or
ret
pop
lret
adc
sbb
mov
add
xchg
loop
pop
rorl
mov
ret
insl
dec
and
leave
jb
cs
xchg
inc
es
mov
mov
push
push
cli
dec
lea
or
fstps
mov
mov
and
mov
mov
pop
insl
out
loopne
flds
aas
dec
mov
or
scas
push
cltd
mov
sub
cmp
mov
or
loopne
mov
test
and
jg
or
pop
leave
stc
sub
cmpsl
jg
test
adc
enter
clc
movsb
out
jns
mov
bound
out
cmp
es
or
int
inc
pop
cmp
daa
roll
in
enter
test
or
int
inc
movsb
cmp
add
sub
push
sub
mov
dec
imul
ficompl
sub
and
xchg
jo
push
sub
jno
nop
bound
daa
outsb
aam
jnp
iret
add
pop
or
push
xlat
dec
adc
dec
or
push
fidivrs
fisttps
pop
jae
rcrl
enter
sub
jl
dec
dec
jnp
xchg
push
iret
and
mov
xchg
mov
rcr
push
iret
pop
cmp
enter
ret
inc
mov
sahf
clc
sub
or
xor
adc
pop
lret
dec
sub
mov
test
mov
call
shrb
inc
inc
mov
sahf
fsubr
movl
mov
mov
sub
push
jg
jmp
pop
or
pop
cmp
pop
int
inc
inc
cmp
inc
roll
inc
or
inc
inc
dec
cmp
dec
rorl
aam
dec
pop
rcll
push
int
inc
aad
push
or
cmp
ror
push
inc
sarl
push
or
cmp
int
inc
pop
cmp
pop
roll
lds
inc
int
inc
inc
cmp
or
int
loope
jbe
adc
sarl
push
or
cmp
or
int
inc
ret
or
cmp
sub
xchg
or
xlat
add
push
and
add
loope
rol
cmpl
and
cmp
or
cmp
inc
int
inc
add
jecxz
ret
shll
int
loopne
test
gs
out
mov
rolb
es
out
and
sub
int
inc
out
or
cmp
es
and
imul
pop
insb
cmp
clc
aad
or
mov
or
mov
clc
aad
or
or
shll
inc
loope
pop
push
in
jecxz
into
and
xchg
subl
das
pop
dec
into
inc
js,pn
dec
pop
outsl
mov
push
scas
ss
push
out
aad
das
sbb
inc
jge
pop
jecxz
shrb
xchg
lret
jge
or
out
scas
jp
lcall
sti
pop
jecxz
xor
js
enter
dec
dec
cs
dec
popa
dec
in
outsl
cmp
pop
out
cs
pop
pushf
sbb
arpl
inc
xchg
inc
sahf
inc
lahf
inc
pushf
inc
popf
pusha
sbb
popf
dec
popa
and
inc
cmp
adc
pop
ret
jecxz,pn
add
cmp
adc
pop
shrb
lret
popa
and
inc
cmp
adc
aam
add
and
pop
nop
xchg
inc
cmp
lods
fcmovnbe
xor
lret
xchg
and
add
cmp
mov
and
test
mov
push
cs
add
and
mov
imul
imul
aas
adc
cmp
lea
adc
lea
mov
lahf
xor
lret
lods
out
jne
aad
fs
movsl
fldenv
push
sub
addr16
mov
dec
dec
test
or
push
or
jg
ret
das
sub
push
jmp
rcll
fldcw
fnstsw
loope
popa
push
and
loope
mov
jle
outsl
adc
pushl
lds
jmp
xchg
cmp
mov
inc
cmp
or
int
inc
push
cmp
rorl
push
enter
push
int
inc
sarb
mov
ffreep
xlat
fidivrl
testl
cmp
or
cmp
int
rcll
mov
push
or
cmp
adc
pop
inc
xor
rorb
jne
cmp
inc
fdivrl
aad
pop
shl
cmp
inc
ret
cmp
dec
shll
xchg
sub
sub
mov
aad
sarb
fimuls
cmp
or
int
inc
push
cmp
or
clc
aam
mov
xlat
dec
sub
or
cmp
or
xor
cmp
fcmovb
jo
cmp
inc
inc
cmp
or
cmp
sub
imul
push
cmp
or
cmp
mov
flds
cmp
or
dec
sub
sub
xor
ret
int
inc
jle
dec
or
clc
aam
ficomps
mov
decb
cmp
or
pop
inc
fidivrl
jg
inc
rcrl
int
inc
dec
cmp
dec
aam
or
cmp
pop
int
jecxz
inc
pushf
mov
add
jecxz
xor
xchg
pop
push
cmpsb
add
mov
jl
jns
push
out
jle
sbb
nop
fbstp
int3
adc
pop
sbb
xor
cmpsl
add
jmp
push
js
mov
aas
push
xor
rclb
mov
mov
jmp
dec
mov
shlb
pusha
push
aas
mov
jecxz
sbb
sahf
xor
lock
and
mov
dec
cmpb
jo
and
mov
cmp
xchg
imul
fistpll
xchg
adc
sub
negb
xor
adc
imul
outsb
mov
dec
jae
lahf
pop
pop
jo
mov
sahf
sub
pop
ret
out
inc
lods
mov
xchg
data16
cmovge
fmul
mov
xor
icebp
pop
iret
dec
or
pop
cmpsb
xchg
mov
xchg
lret
fsts
sbb
sub
cmp
sarl
sbb
or
mov
add
enter
mov
inc
call
jno
cmp
inc
test
xchg
dec
xor
lcall
pop
xchg
pop
lret
fildl
jae
mov
xchg
jp
push
jno
jae
mov
dec
fcmovnb
pusha
mov
add
movsb
inc
dec
mov
adc
cmp
add
fldenv
adc
pop
test
es
inc
fisubs
popa
xchg
pop
lret
pop
mov
lret
test
dec
inc
lret
push
cmp
inc
add
dec
jp
fcompp
xlat
mov
fsubrp
inc
sub
add
rcl
pop
pop
jns
dec
push
sahf
pop
push
lret
pop
mov
cmp
add
lcall
flds
xlat
fistpll
test
sar
sbb
inc
std
nop
pop
mov
in
dec
dec
cmpb
cld
dec
inc
push
jmp
dec
mov
adc
lret
xor
fadds
pop
push
mov
push
rorl
movb
sbb
pop
add
pop
dec
sbbl
cmp
adc
mov
inc
or
rcrb
add
lret
sarl
lret
cmp
adc
dec
lcall
push
icebp
lret
idivb
sbb
lods
orl
stos
push
cld
pop
mov
mov
dec
or
fcoml
dec
or
cmp
push
nop
add
adc
pop
jb
cmp
jmp
push
lret
jno
xor
push
sbb
xchg
dec
es
and
or
pop
test
xchg
sub
leave
dec
xor
mov
dec
leave
aad
mov
push
pop
sbb
fstpl
loope
dec
das
mov
xor
add
or
in
pop
je
adc
mov
sarb
pop
jmp
aam
dec
mov
aas
pop
push
pop
xor
mov
fimull
repz
enter
mov
lret
filds
mov
cltd
push
inc
rcr
xor
arpl
and
fnsave
or
add
push
mov
testl
fisttpl
adc
mov
dec
and
mov
sbb
pop
loope
fs
les
cmpsl
pop
inc
and
in
shll
sbb
xor
mov
cld
filds
add
pop
mov
add
in
cmpsl
test
in
dec
and
jbe
lds
and
adc
dec
jbe
cltd
add
jne
push
dec
inc
jecxz
ljmp
jge
jns
and
dec
jp
push
dec
mov
andb
and
push
inc
push
lret
pop
xchg
ja
mov
test
movsb
pushf
dec
mov
mov
or
mov
jp
adc
test
movsb
push
leave
dec
push
popa
dec
mov
andl
std
cmp
or
push
pop
inc
pusha
sub
jnp
js
call
mov
cmp
aas
pop
add
jae
repz
and
jb
insb
and
or
jb
imull
lods
or
cmpsb
mov
outsl
je
xchg
rcrb
dec
insb
pop
jle
add
xchg
pop
jo
adc
jmp
lret
and
push
mov
enter
dec
ficoms
call
movsl
dec
sub
add
dec
loop
ret
int
inc
bound
inc
or
icebp
and
mov
into
or
dec
cmp
push
cmp
pop
push
push
inc
ds
imul
dec
fnstcw
sub
out
int3
mov
or
ficoms
sub
dec
xlat
fnsave
cs
mov
sti
call
inc
test
scas
insb
sbb
sar
mov
mov
dec
leave
int
sbb
orl
dec
pop
aam
dec
lahf
dec
adc
add
adc
or
or
pop
xor
es
mov
dec
push
dec
sbb
or
inc
push
pop
dec
fcmovne
pop
dec
test
pop
sub
pop
or
leave
pop
insl
inc
dec
pop
jp
or
sub
inc
dec
pop
leave
inc
fmuls
inc
cld
dec
or
inc
inc
push
dec
inc
push
mov
lret
inc
dec
and
cmp
sub
dec
dec
sub
cmp
dec
push
aad
dec
mov
cmp
pop
aas
dec
mov
dec
add
dec
lods
push
imul
push
sub
inc
fisttpl
push
dec
rorb
sub
or
dec
xchg
adc
mov
rclb
dec
call
xchg
or
push
lahf
jmp
rclb
dec
sub
dec
call
lds
pop
push
dec
roll
repnz
into
jg
inc
fs
inc
inc
dec
mov
add
inc
enter
sub
inc
dec
out
cmp
inc
iret
enter
xchg
pop
dec
sbb
dec
adc
add
inc
inc
rolb
pop
in
inc
in
pop
dec
push
flds
sar
pop
inc
dec
add
adc
add
cmpsl
inc
int3
rorb
cmpsl
es
cli
popf
or
sub
aad
adc
push
jae
sbb
sbb
dec
dec
mov
jnp
jl
xlat
pop
add
pop
inc
sub
mov
sub
cmp
or
xchg
xor
push
sahf
aad
add
pop
xor
lret
jmp
rcrl
mov
int
dec
call
leave
sub
add
and
jecxz
sub
pop
loope
dec
xchg
mov
lret
popa
dec
add
and
lcall
jbe
adc
mov
div
xchg
xchg
addr16
inc
jnp
mov
imul
lods
cmovnp
mov
les
and
mov
dec
inc
dec
jbe
pop
sbb
outsb
xor
pusha
ret
push
mov
in
int3
add
int3
push
jmp
ret
dec
mov
mov
js
inc
shlb
add
andl
shll
xchg
or
add
add
jecxz
sub
push
arpl
add
and
enter
sub
inc
in
into
in
dec
in
iret
in
dec
iret
es
and
pop
add
mov
sub
popa
sub
add
loope
push
int
add
push
popa
enter
popa
add
rcll
pop
arpl
add
push
arpl
dec
int
push
lds
push
jno
stos
icebp
shr
jle
addl
addl
sub
stos
hlt
adc
jne
addr16
enter
jle
or
jno
inc
mov
imul
dec
mov
add
ret
cmovnp
jecxz
dec
das
cwtl
loope
gs
scas
ret
insl
lret
rol
xor
enter
inc
dec
int
or
and
dec
in
popa
ret
cmp
jecxz
add
cwtl
pop
dec
and
cld
inc
pop
andl
nop
pop
andl
arpl
xchg
inc
and
dec
andl
lahf
call
dec
dec
adcb
jne
andb
mov
std
adc
dec
jecxz
fstps
jmp
mov
add
mov
jbe
fisubl
sub
lahf
sbb
lret
arpl
jg
decl
mov
mov
mov
rol
mov
jno
push
and
int
jns
addl
in
sarl
in
lret
rorb
xchg
and
lret
dec
adc
adc
outsl
mov
or
das
dec
arpl
add
dec
arpl
roll
repz
push
arpl
pushf
sub
dec
mov
dec
mov
dec
fildl
dec
lcall
mov
dec
mov
or
mov
cmp
cmpsb
sarl
sub
mov
jnp
pop
jne
cwtl
add
pop
xorb
fwait
fwait
dec
add
push
sub
sub
loope
dec
push
dec
pop
lcall
rolb
mov
or
fmull
cmp
dec
les
pop
gs
js
sbb
dec
sbb
inc
push
js
push
fstps
cli
cwtl
add
inc
fdivs
or
pop
roll
push
xor
dec
sub
jbe
dec
shr
outsb
jno
dec
or
sbb
inc
and
aaa
sub
gs
inc
popf
mov
mov
sub
dec
cmp
mov
sub
pop
xchg
shll
lds
sub
mov
fwait
sub
dec
int
and
shlb
fbstp
orb
dec
popa
fcomps
cltd
dec
xchg
mov
ret
das
dec
add
pop
ljmp
inc
das
dec
dec
dec
sbb
data16
and
sbbb
std
hlt
adc
dec
daa
add
and
int3
roll
mov
dec
jle
lahf
sub
and
testb
xor
shl
dec
push
and
inc
lds
scas
rolb
mov
xor
lods
mov
mov
sub
dec
push
push
dec
and
adc
dec
mov
fwait
push
movsl
ror
ljmp
mov
leave
lock
dec
pop
aad
iret
dec
roll
test
inc
movsb
popa
das
sbb
dec
and
mov
jl
enter
xor
out
stos
and
dec
lret
push
or
sbb
sub
je
push
dec
fwait
dec
push
sub
outsb
push
cwtl
sub
jecxz
out
push
fmuls
shlb
andl
loope
in
add
in
add
jbe
lret
adc
lret
push
mov
subl
fldt
inc
movl
dec
rol
lds
add
fisttps
ljmp
enter
dec
fxch
mov
sub
inc
pusha
test
jmp
outsl
push
inc
sbb
clc
dec
jb
mov
add
iret
cwtd
add
xchg
call
cmp
ret
dec
mov
cmp
mov
and
lret
or
dec
sub
mov
les
lock
jmp
and
sub
mov
rcr
inc
mov
inc
sub
sub
mov
sub
fistl
mov
dec
cltd
enter
movsl
sub
dec
cs
cli
dec
and
inc
dec
roll
cld
dec
insb
dec
rorb
sbbl
mov
loop
lds
mov
enter
outsb
mov
loopne
mov
sub
fildll
xchg
xchg
dec
mov
dec
outsb
int
mov
push
mov
inc
mov
leave
jb
push
clc
mov
dec
jecxz
mov
xlat
mov
cmpsb
mov
loope
jl
or
nop
fcmovbe
xor
lods
loope
leave
shrb
jo
stc
arpl
push
fstl
jl
sub
push
scas
dec
int
popf
lock
sbb
and
pusha
fnstsw
xor
and
and
sub
test
enter
fdivrs
lds
push
cmp
sub
movb
fs
xchg
insl
dec
popf
dec
mov
lret
jnp
push
andb
mov
int3
arpl
into
inc
fistpll
jbe
pop
test
sub
cmp
testl
jg
out
pop
inc
ss
dec
lods
mov
lret
sub
or
clc
fld
int
push
cmp
or
cmp
or
rolb
cmp
or
cmp
or
fiadds
cmp
or
cmp
or
fiaddl
cmp
fnstcw
or
cmp
or
int
inc
dec
cmp
data16
fld
in
dec
push
cmp
or
cmp
or
rolb
cmp
or
cmp
or
fiadds
cmp
or
cmp
or
fiaddl
cmp
or
cmp
or
movb
or
add
lahf
dec
outsl
or
cmp
or
pop
mov
or
mov
clc
aad
mov
inc
cmp
mov
add
sub
cmp
or
inc
add
sarl
jle
icebp
into
inc
in
rcrl
cmp
dec
lods
test
sub
push
and
pusha
sub
cmpl
jmp
sub
pop
dec
dec
lret
leave
dec
outsb
dec
mov
lds
shl
cmp
xchg
shll
jmp
lds
loope
and
aam
xor
mov
ret
imul
dec
or
pop
aas
sub
rcrb
mov
nop
jmp
sbb
pop
push
dec
cmp
add
push
sub
pop
jmp
mov
sub
int
mov
or
lea
add
icebp
add
and
mov
push
ds
sbb
andl
fwait
dec
jg
pop
mov
jge
mov
push
mov
lods
enter
fimull
andb
pop
fsubp
std
shlb
andb
sub
in
scas
and
jns
sbb
jl
push
push
mov
push
jl
dec
testb
es
loopne
xor
cmp
and
push
inc
movl
and
jecxz
les
and
insl
pusha
fsubl
dec
inc
pop
jne
pop
iret
or
dec
in
pop
add
je
movsl
and
xor
int
lds
mov
repz
sub
inc
push
pushf
imul
cmp
mov
movb
inc
sbb
into
dec
das
inc
mov
je
ror
outsb
nop
in
pusha
or
pop
cmp
dec
inc
sub
ror
sub
push
out
cmp
outsb
pop
or
mov
testl
cmp
shrb
lret
inc
push
pop
pusha
add
ret
dec
xor
ljmp
cld
shrl
inc
xor
jo
movsl
outsb
out
sub
dec
arpl
outsb
adc
std
dec
pop
dec
pop
out
push
dec
es
lea
push
and
adc
inc
mov
je
sti
or
inc
and
dec
inc
popa
lods
jecxz
push
inc
pop
inc
adc
iret
stos
dec
cmp
pop
cmpsl
out
loopne
push
ret
lret
inc
add
movsb
outsl
lods
out
pop
xchg
jp
pop
mov
adc
shl
movsb
lds
repz
movsl
lea
arpl
gs
and
popl
mov
lods
lret
adc
mov
in
popa
inc
les
bound
push
shr
repz
shll
movl
mov
and
jnp
imul
sub
or
movsb
add
inc
adc
in
pop
jecxz
pop
fwait
imul
dec
loop
ss
pop
inc
add
loope
sbb
inc
loopne
flds
gs
sbb
cmp
push
lcall
insb
pop
imul
lret
dec
dec
push
mov
mov
add
add
jecxz
sahf
adcb
lret
fisubrl
or
jp
aas
inc
jnp
lods
sbb
repnz
jmp
pop
int3
loopne
popa
mov
enter
arpl
jecxz
inc
fwait
or
add
mov
int
pop
or
inc
add
insb
or
lea
sub
out
push
mov
sarb
dec
or
or
inc
and
xchg
scas
inc
push
inc
xor
movsl
lds
inc
rep
inc
adcl
mov
dec
push
pop
dec
lret
cmp
outsl
push
shll
lahf
jne
push
mov
or
pop
xlat
mov
cmp
ret
fs
call
cmp
rep
push
lret
jnp
outsb
inc
loopne
inc
pop
jmp
pop
push
roll
push
ret
js
in
dec
pop
repz
jnp
dec
mov
mov
test
xor
aas
xchg
jg
movsb
pop
addl
mov
jae
pop
sbb
add
xor
cmp
dec
rol
lcall
xor
sarb
xchg
es
movsl
inc
int
enter
pop
dec
out
sub
dec
jecxz
leave
add
push
hlt
hlt
les
movsb
subl
stc
inc
popl
cmp
stos
dec
dec
mov
test
dec
mov
cwtl
dec
or
xlat
inc
pop
sahf
mov
test
fildl
cmc
orl
sbb
dec
adc
sub
dec
ror
sbb
or
add
inc
push
dec
js
fldcw
sbb
or
sub
xlat
dec
inc
sbb
or
cmpb
imul
movsl
mov
dec
push
dec
add
push
mov
popf
sub
jp
pop
dec
outsb
ljmp
enter
sub
lret
lret
imul
inc
pop
push
lahf
cmp
or
push
inc
sarb
push
or
cmp
pop
inc
fdivrl
pop
or
cmp
or
pop
add
lds
inc
cmp
ret
rol
cmp
or
int3
inc
int
rorl
fcmovne
add
dec
ror
cmp
inc
sub
imul
push
call
or
cmp
ror
cmp
mov
cs
rorb
popa
loope
inc
iret
fildl
dec
adc
dec
movsl
arpl
inc
and
mov
dec
movsb
cmp
inc
int
add
fdivl
fistpll
rorb
dec
popa
stc
sub
inc
cmp
or
in
cmp
push
jge
jg
pop
nop
cmp
lret
imul
dec
adc
sbb
xor
jb
fnstcw
push
add
dec
inc
xchg
pop
and
fcoml
in
cmp
mov
push
lahf
jns
sbb
mov
push
in
pop
cmp
jno
adc
add
ud1
push
xchg
push
inc
ss
add
or
jo
rorl
into
push
mov
rclb
sub
pop
inc
out
xchg
sub
dec
or
or
inc
push
cmp
pop
shrl
cmp
or
ljmp
jg
cmp
es
inc
push
cmp
adcb
mov
and
jnp
std
mov
or
jge
ds
test
imul
loope
pop
sub
inc
pop
jmp
cli
adc
sub
sub
dec
push
push
pop
scas
adc
mov
push
push
jmp
lret
leave
xor
jmp
aad
fldl
aaa
inc
push
fdivl
dec
fstl
push
fimull
cmp
or
cmp
or
int
inc
test
roll
ret
int
sbbb
or
cmp
sub
dec
sub
dec
or
dec
inc
mov
inc
or
dec
or
int
and
mov
xor
xchg
call
sub
sub
mov
loop
movsl
leave
sar
or
aas
int
or
and
sub
lret
sub
lods
adc
xchg
leave
xchg
data16
stc
pop
or
sub
push
cmp
or
test
cmp
push
int
inc
xchg
cmp
stos
rorl
int
inc
sbb
rcll
testl
loopne
movsl
or
cmp
inc
je
dec
xlat
rorl
int
inc
cwtl
cmp
or
cmp
mov
cmovo
and
cmp
pusha
xchg
xchg
sbbl
pop
dec
xor
xor
push
sti
aam
mov
ljmp
dec
adc
out
push
outsl
aaa
mov
adc
dec
push
sub
iret
outsl
sub
insl
add
es
push
push
dec
sub
dec
sti
pop
pop
leave
movaps
push
mov
xor
arpl
ret
arpl
inc
push
ret
fimuls
fisubl
push
xorb
dec
cmc
test
enter
leave
push
fwait
es
push
into
cmp
sbb
sti
mov
jmp
mov
jl
into
xchg
fmul
rorl
cmp
pop
xor
or
lea
sub
shll
aam
inc
scas
cmp
or
mov
out
pop
sub
or
dec
cmp
fisttpl
or
enter
dec
push
dec
loop
fcmove
call
inc
int
add
cmp
pop
mov
leave
dec
ficomps
xor
cwtl
iret
cmp
adc
movb
inc
in
pop
mov
dec
push
mov
imul
mov
mov
ss
pop
shll
notl
mov
mov
and
push
push
fs
xchg
push
fdivs
xor
dec
sti
pop
and
mov
cs
add
cwtl
dec
xchg
ss
and
cmp
pop
sub
insb
fnstcw
rorl
sbb
pushf
loope
mov
push
push
hlt
jge
push
divl
xor
mov
cmp
push
pop
imul
cmp
inc
mov
sti
sub
out
scas
pop
pop
mov
ja
mov
scas
out
push
clc
push
inc
popf
push
cmp
mov
mov
pop
add
lods
mov
sbb
mov
sbb
dec
test
xor
jnp
sbb
test
cmpsl
sub
leave
sub
outsb
daa
scas
or
std
inc
test
pusha
mov
stc
mov
icebp
repz
movsl
sub
xor
push
push
push
ljmp
inc
popf
lahf
and
les
outsl
cltd
hlt
push
out
scas
dec
fiadds
push
mov
fstpt
jne
adc
sub
cld
aad
insb
shl
mov
mov
dec
jecxz
cmpsl
shll
dec
xchg
gs
fldt
mov
jo
imul
push
out
das
and
mov
aas
jecxz
or
bound
xchg
insb
mov
ljmp
xor
xchg
insl
push
pop
cmpsb
fdivrl
movb
dec
out
shr
ret
addr16
jbe
cmp
scas
push
push
push
sub
in
dec
loope
push
fmul
sub
sbb
pop
dec
mov
out
rorb
inc
dec
ljmp
jmp
add
cmp
outsl
repnz
out
daa
lret
in
dec
sete
pop
add
popf
sub
push
arpl
mov
dec
unpckhps
jge
jp
shll
dec
int3
lods
and
dec
lods
iret
pusha
jecxz
nop
in
js
and
fstl
adc
mov
dec
cmp
jle
stc
or
movsl
add
mov
cmpsb
inc
sub
xchg
jp
adc
push
leave
mov
push
or
ja
lret
test
push
insb
sbb
mov
push
lcall
lret
scas
test
and
es
ror
imull
ds
jne
jmp
shrl
lret
lcall
lret
into
test
add
push
test
ror
xlat
test
movaps
cmp
jns
das
test
phsubd
es
out
inc
in
dec
push
inc
iret
inc
int
out
lcall
xorb
sub
dec
xchg
or
cs
inc
dec
xor
dec
cmp
dec
sbb
stc
dec
cs
pop
cltd
mov
dec
inc
push
leave
and
push
dec
mov
arpl
and
call
pop
push
add
mov
cmpsb
pushf
in
popf
add
dec
inc
stos
repnz
and
and
test
sti
push
dec
inc
push
inc
jp
lcall
or
rcr
or
push
lret
and
dec
mov
outsl
jecxz
push
dec
push
xor
pop
out
dec
test
sub
push
or
inc
mov
push
add
int
push
loopne
pop
mov
inc
clc
out
cli
xchg
stc
insl
js
or
roll
lds
cmpsl
push
fisttpl
push
inc
mov
push
loope
ret
call
cwtl
insb
add
cwtl
dec
test
xorb
mov
int3
xor
dec
out
inc
mov
dec
iret
cmp
decl
scas
fldenv
push
push
or
out
mov
js
sbb
cmp
mov
sti
test
sbb
and
inc
test
sbb
sbb
mov
icebp
add
loopne
leave
daa
pop
mov
popa
outsl
dec
xor
inc
dec
pop
cmp
cs
cmc
sub
out
dec
mov
in
fisttpll
pusha
das
shll
stc
imul
add
mov
xor
cs
pop
mov
inc
clc
or
pop
xchg
sbb
dec
push
iret
xchg
sub
leave
sub
ja
pop
dec
pop
rorl
xor
stos
pusha
addr16
push
or
and
rorb
xor
rorl
aas
repz
jmp
test
call
sub
jmp
test
cmp
jmp
push
insb
movsb
test
and
add
leave
adc
or
in
or
pop
mov
jmp
mov
lods
cmc
mov
add
inc
stos
sbb
arpl
gs
jg
addr16
scas
cs
testb
icebp
pop
call
leave
jp
push
sub
lret
pop
inc
push
loop
mov
fiadds
add
jne
or
test
lods
adc
inc
xchg
lock
or
test
xchg
pop
cmp
jge
sbb
fstps
int
call
leave
aam
shr
xor
imul
imul
sahf
testb
mov
or
mov
loop
xchg
and
mov
sub
xor
daa
bound
push
lahf
inc
add
movsb
push
mov
pop
push
and
mov
adc
cmp
pushf
pusha
cmpb
pushf
mov
push
jmp
mov
call
add
scas
xchg
push
sbb
sahf
push
sub
xchg
jle
popf
or
jmp
dec
outsb
ret
xor
pop
sarb
ja
pop
out
scas
mov
push
inc
or
add
sti
sbb
idiv
lret
jne
mov
adc
mov
inc
push
fwait
insl
xor
push
or
jl
lock
jp
or
push
xor
dec
cmp
ror
movsl
add
notb
shl
ss
repz
sbb
fimuls
push
xchg
sub
repnz
adc
mov
daa
rcll
lds
dec
outsb
pop
mul
xor
inc
pop
les
jae
flds
fcmovne
loopne
mov
imull
scas
mov
xorl
and
in
mov
jle
les
fcoms
sbb
in
xchg
or
sub
push
mov
divb
push
inc
subb
cs
fmulp
mov
xchg
test
dec
mov
push
add
ljmp
ret
into
ss
jmp
or
js
adc
sub
and
dec
push
lahf
lods
lods
cmpb
lods
jmp
rol
push
xchg
pop
sub
daa
pop
mov
lahf
jle
cmp
lahf
or
xchg
or
mov
adc
repnz
dec
cmp
ljmp
jge
cmp
jbe
test
jns
inc
in
mov
test
push
mov
rolb
mov
std
pusha
push
adc
fcmovnu
dec
xlat
enter
cmp
adc
mov
or
dec
mov
inc
mov
push
out
and
or
push
mov
in
aaa
and
shlb
mov
inc
inc
or
mov
and
mov
neg
stos
test
arpl
xchg
jmp
shll
leave
xor
or
dec
push
adc
adc
lods
adc
lods
into
into
cmpsb
movsb
hlt
pop
jae
ret
and
out
mov
stos
sbb
sbb
mov
pop
pop
inc
sub
pop
outsb
sub
cwtl
frstor
xchg
sti
outsl
dec
ret
loop
xchg
bound
cmp
out
rclb
xor
inc
lds
inc
mov
daa
lahf
pop
pop
cmpsl
adc
aas
imul
or
pop
sub
and
push
cltd
pop
shrl
mov
dec
and
cmp
or
sbb
orl
xor
mov
or
or
mov
in
dec
dec
inc
test
das
cmp
lods
add
packuswb
fbstp
daa
arpl
mov
shl
not
pushl
jmp
ljmp
pushf
sbb
cld
push
test
js
dec
mov
sbb
sarl
or
outsb
jp
mov
push
sub
faddl
ret
shll
das
xor
adc
cmp
xor
loop
jl
or
mov
push
pushf
pop
sti
aas
popf
int
lahf
pop
sub
push
mov
add
lret
push
xor
xor
mov
pop
pop
ss
cmc
pusha
pusha
neg
jmp
bt
repnz
jmp
dec
inc
inc
inc
xor
cs
insb
add
lods
leave
push
setb
mov
lea
shl
dec
shr
cmp
bts
seta
mov
jnp
pusha
push
test
or
pusha
movb
lea
je
mov
inc
sar
add
neg
bswap
mov
sub
add
cmp
shr
rcr
xor
adc
shl
mov
push
bsr
not
sbb
add
btc
add
lea
bswap
mov
test
cmp
push
shr
clc
pushl
cmp
mov
pusha
pushf
pushf
lea
je
push
cmc
stc
clc
cmp
push
pushf
pushf
pusha
lea
je
cmc
stc
call
mov
lea
call
jbe
cmp
arpl
pop
mov
pop
fsubrs
pushf
hlt
pop
les
adc
loop
test
lock
pop
mov
scas
scas
xchg
test
mov
mov
xchg
xchg
or
enter
push
sbb
or
shrl
sub
xchg
outsb
lds
inc
cs
sahf
xchg
pusha
jbe
jecxz
jmp
jns
les
push
fsubs
add
sbb
jnp
leave
add
adc
ljmp
loop
stos
test
xor
adc
mov
dec
ret
push
std
jne
pop
jo
lock
ret
mov
cmp
xor
cs
flds
iret
stos
dec
sub
int
mov
add
adcl
xor
push
and
popf
orl
lea
inc
pop
xchg
dec
das
cli
adc
xchg
lods
add
bt
xor
shl
sub
mov
rcr
or
pushf
xor
setne
dec
call
jmp
xor
jle
arpl
jnp
arpl
aas
lahf
jecxz
stos
xchg
cmp
adc
lahf
adc
mov
xor
or
xor
mov
jg
cs
ja
or
mov
into
adc
xor
xor
add
or
jae
dec
dec
mov
dec
std
loope
fidivl
enter
repz
popa
ss
and
xor
ja
xchg
loope
cmp
clc
fsubrl
inc
mov
add
mov
or
add
dec
scas
jle
mov
adc
sbb
leave
mov
cli
lret
insl
pop
out
xchg
fidivrs
push
inc
test
clc
push
xchg
push
ret
sub
out
mov
arpl
dec
pop
testl
jecxz
sar
sete
shl
clc
mov
movzbw
bswap
clc
rol
mov
seto
mov
dec
mov
call
and
mov
arpl
lods
adc
aam
movsb
sbb
aam
xorb
adc
fdivrl
mov
shlb
mov
arpl
das
imul
loopne
aam
cltd
or
dec
dec
out
or
aas
inc
and
ss
lods
mov
jbe
das
imul
testb
cld
nop
push
inc
cs
scas
jno
mov
fsubrl
mov
and
movq
psllq
mov
arpl
xchg
outsb
mov
ja
push
pushf
pusha
jmp
scas
or
sbb
push
mov
jbe
push
jle
and
adc
gs
scas
mov
mov
inc
dec
push
fildl
into
sub
jmp
fisubs
lahf
shrl
ljmp
pop
xor
leave
movsb
cmp
cmpsb
popa
mov
sub
inc
ret
dec
mov
mov
mov
in
movsb
loopne
test
push
or
ja
bt
stc
imul
bt
stc
push
pushf
add
pusha
mov
pushf
lea
jmp
ljmp
pushf
or
jl
inc
mov
rcrb
icebp
xchg
adc
sarl
test
fistl
push
repz
sbb
sar
les
nop
stc
push
cmp
inc
sbb
mov
imul
cmpsl
lahf
jp
xlat
inc
jl
test
xchg
xchg
in
push
insb
das
sbb
test
jns
and
cmp
xlat
stos
xchg
cld
in
push
mov
jecxz
push
mov
sbb
cmc
cmc
lds
and
push
popa
or
cmp
scas
push
add
pusha
arpl
xor
and
mov
mov
imul
mov
xchg
out
pop
mov
push
mov
mov
jo
out
pushf
loopne
adc
in
int3
lret
mov
lods
adc
xchg
pop
nop
sub
mov
shrb
aas
add
jne
cmp
je
popf
jmp
push
les
cmp
xor
mov
test
jmp
hlt
push
mov
sahf
data16
jb,pn
ss
jbe
dec
dec
ss
push
xchg
or
dec
movsl
in
dec
dec
jb
cmpsl
adc
vshufps
call
loope
xchg
loop
test
add
int
fisttps
inc
movsl
sti
ret
js
mov
push
sbb
lcall
and
push
cmp
sbb
fidivrs
jbe
mov
cs
adc
test
sub
mov
pop
cs
loop
lcall
in
aam
jno
addr16
pop
pop
pusha
pushl
lea
jbe
dec
adc
shrd
mov
bsf
movzbw
add
xadd
rol
mov
rcl
sub
add
lea
shl
movsbl
pushf
movl
rcl
setge
mov
mov
cmp
call
ficomps
notb
fistl
sbb
outsl
xor
gs
iret
xorb
add
test
inc
mov
insl
imul
aam
dec
scas
ljmp
push
pop
ja
into
loop
fadd
sbb
xor
ficompl
iret
aas
scas
stos
jnp
sub
sti
mov
imul
jne
cmp
pop
rorb
cmp
lock
jg
inc
call
aad
mov
sub
mov
fwait
aas
cmp
pop
bound
pop
mov
push
add
push
cmpxchg
or
scas
push
ja
shl
mov
push
mov
push
jle
out
sbb
bound
imul
sbb
or
add
bound
into
mov
sub
pop
xchg
and
mov
jae
and
and
jle
es
push
dec
scas
sub
mov
in
in
lret
xchg
outsl
mov
sbb
rolb
insb
outsb
int3
mov
repz
call
pop
mov
aad
cmpl
cwtl
aam
vpmulhuw
and
mov
inc
push
mov
inc
lcall
dec
push
sub
xor
xor
cli
mov
push
sub
lea
sbb
mov
repnz
cs
fcmovu
mov
cmpb
xor
mov
mov
subb
xchg
arpl
mov
mov
je
add
mov
iret
sbb
push
stos
cmpsb
imul
lret
add
mov
push
pop
arpl
cwtl
add
mov
mull
jge
rcrb
mov
push
insb
sub
iret
or
mov
cmpsb
es
cmpsb
jbe
inc
push
or
scas
stos
shlb
les
add
div
sub
cmc
neg
sbb
or
mov
movzbl
movzbw
cmp
mov
shl
add
cmp
shr
not
mov
stc
btr
add
add
movsbw
push
mov
push
call
movw
call
cmp
or
jmp
jb
bound
add
jp
inc
es
add
fcmovnb
push
fwait
xchg
loopne
pop
lret
mov
sbb
cmp
xchg
arpl
mov
in
xchg
jnp
xchg
cmp
stc
loope
jnp
add
mov
jle
fildll
inc
les
sbb
fs
mov
imul
sarl
cwtl
add
test
push
divb
cmp
ss
mov
clc
pop
nop
cmpsb
cli
mov
cwtl
or
cmp
mov
stc
cmp
push
cmpsb
push
pop
sbb
not
lret
dec
cs
dec
pusha
popa
pop
mov
in
xchg
arpl
pop
test
lods
sub
stc
fimuls
shlb
cmp
arpl
jnp
mov
xor
or
shrl
popa
ret
inc
sub
jae
out
dec
dec
adc
jbe
cmp
sbb
and
cmc
push
addr16
fnstcw
push
mov
fcmovu
cmp
out
pop
or
cmpsl
outsl
imul
jecxz
ret
xchg
jg
sbb
push
jmp
pushf
fwait
dec
stos
xchg
arpl
sbb
dec
mov
fbld
outsl
mov
decb
sti
push
ljmp
inc
and
add
xchg
jmp
aad
mov
add
ror
decb
xor
bound
mov
out
fmuls
lcall
mov
jl
adc
enter
dec
xor
adc
in
mov
or
xor
insb
xor
cs
insb
add
adc
xchg
arpl
inc
mov
xor
aas
and
mov
mov
dec
test
cmp
in
lods
lock
movsb
insb
cmp
add
mov
ljmp
stos
inc
les
mov
or
insl
push
and
xchg
xchg
lea
jecxz
push
or
fistps
cwtl
mov
or
fnstenv
or
arpl
pop
push
mov
jmp
or
fistps
xchg
out
push
push
shlb
jp
inc
mov
cmpsb
push
cmpsb
jp
repnz
inc
cmpsl
repz
mov
cwtl
sub
cmp
popl
and
shll
push
xchg
es
call
sub
cmp
push
outsl
and
dec
sub
or
sub
jl
dec
sbb
dec
sub
fnstcw
cmpsl
jmp
sub
jne
xchg
jp
int
xchg
and
arpl
repnz
jge
jmp
add
mov
mov
call
cld
xor
movsl
fiaddl
out
or
mov
mov
pop
jmp
ror
scas
jmp
int
and
jecxz
popl
cld
inc
mov
xchg
or
mov
nop
shll
ds
adc
outsl
dec
mov
outsb
nop
lea
add
stos
adc
popa
insl
das
dec
mov
and
jle
mov
mov
jae
mov
loope
xchg
out
mov
fnstcw
call
push
push
jae
lret
mov
xchg
scas
xchg
jbe
push
out
mov
fnstcw
jb
cmp
cmp
sbbl
adc
cmp
xchg
pop
inc
jg
dec
neg
add
pushf
dec
or
test
mov
bt
add
ja
pusha
test
call
lds
in
xchg
arpl
cwtl
loopne
lods
cld
js
jo
and
int3
xor
loopne
xchg
sbb
ficompl
and
add
jmp
mov
addr16
aaa
cld
cld
icebp
insl
in
movsb
mov
mov
sbb
test
dec
mov
out
int
xor
rol
inc
mov
mov
mov
das
xchg
daa
pop
rol
xchg
addr16
push
test
nop
adcb
shll
sub
mov
sbb
pop
dec
inc
aas
mov
inc
insl
add
das
inc
push
insb
fstps
faddl
repnz
sbb
test
pop
sti
or
jl
das
cmc
fidivrs
mov
jbe
addr16
xchg
dec
aas
adc
iret
mov
popa
xchg
lods
int3
cmp
dec
adc
rorb
cwtl
arpl
push
lods
sbb
inc
cltd
or
mov
xor
mov
pop
jne
stc
jg
stc
bound
div
mov
mov
aad
ja
pusha
mov
fsub
cwtl
xchg
loope
test
inc
xchg
imulb
movsl
xchg
test
mov
jbe
push
cmpsl
add
ss
in
shlb
lock
pop
pop
cmp
loopne
stos
cbtw
arpl
das
jnp
push
mov
cmpsl
add
int3
lods
sbb
fst
jae
and
in
rcrl
pop
stos
jg
testb
les
fcomps
push
mov
popa
push
sti
out
jne
daa
sbb
cmpsl
jecxz
cmp
ror
push
ja
pop
or
jge
pop
rclb
cs
adc
mov
jecxz
cmp
mov
testl
and
movsl
sbb
js
sub
or
fmul
lods
pushf
cli
clc
notl
inc
mov
adc
loope
arpl
pushf
or
insb
mov
xchg
or
jbe
sbb
push
xchg
and
int3
and
jmp
pop
loope
popf
sbb
repz
sub
cmp
ljmp
pushf
add
or
dec
mov
mov
jmp
push
sti
rol
rcrl
pop
pop
sahf
xchg
cld
rcl
scas
sbb
shll
imul
arpl
aaa
xor
and
insb
dec
or
mov
jo
cmp
fdiv
add
sbb
mov
frstor
dec
movsl
sbb
add
inc
xor
push
and
in
movsb
and
dec
xchg
repz
lahf
inc
cmp
sbb
orb
inc
mov
xchg
push
rclb
lcall
repnz
insl
div
mov
imul
mov
ret
hlt
std
pop
and
add
dec
cmpsl
lock
pusha
mov
jp
xchg
jb
push
push
dec
and
lret
orb
mov
adc
shlb
fs
jne
not
push
mov
pushfw
popw
ror
shl
mov
clc
test
push
sub
call
stc
cmp
xor
call
inc
orl
pop
pushf
in
push
int3
sub
sbb
add
test
popa
dec
push
sub
adc
fcmovnb
mov
mov
xchg
out
lahf
shlb
adc
xchg
sbb
repz
pop
sbb
nop
stc
xor
inc
pop
sub
ds
cmpsl
adc
mov
push
lods
pop
lret
pop
daa
add
out
xchg
jecxz
fstl
cwtl
clc
roll
and
add
add
addb
add
adc
add
add
add
add
add
add
add
add
add
and
add
popa
and
add
add
add
into
sbb
add
add
mov
add
add
add
addb
add
adc
add
xchg
add
add
xchg
sub
js
sub
lcall
add
push
sub
add
add
inc
mov
popf
loope
in
cltd
adc
sbb
cmp
repnz
push
mov
xchg
repnz
add
pop
mov
mov
push
push
sbb
inc
adc
xor
lgs
and
xor
in
push
sbb
shrb
imul
pop
or
stos
mov
fnstcw
lods
jne
std
leave
xchg
sbbl
daa
lret
popf
sbb
jbe
dec
dec
shrl
loope
arpl
xor
lock
fdivrs
adc
movsb
in
insb
enter
pop
xor
jmp
leave
cmp
push
cmpsb
cmovnp
mov
pushf
mov
jae
adc
mov
into
xor
jo
test
add
subl
jo
mov
pushf
in
sub
mov
imul
mul
sarb
andb
ja
pusha
cmp
pushf
push
pushl
lea
jbe
shl
btc
cmc
stc
mov
jmp
push
push
imul
and
jne
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
sti
pushf
arpl
cltd
add
inc
cltd
adc
xchg
std
rcll
std
cmp
arpl
sbb
aad
xchg
xchg
pop
pop
mov
ficomps
xor
pop
shll
add
jae
scas
jmp
je
adc
mov
bound
add
mov
push
and
ret
mov
and
add
jle
xor
arpl
pop
mov
jns
pop
mov
test
mov
les
cmp
loop
mov
dec
je
imul
scas
loopne
lods
stos
stos
xchg
sbb
iretw
sub
cmp
adc
dec
mov
mov
shl
insl
fsubr
lret
adc
decl
flds
or
rolb
jae
cmc
aam
pop
cmp
test
mov
lods
dec
add
mov
jne
cmp
mov
jns
fwait
push
jb
mov
inc
fidivrl
fcomps
or
or
or
fimull
and
mov
notl
std
mov
in
add
push
push
lods
and
add
lret
sub
rep
adc
out
pop
les
push
pushl
sbb
mov
pop
in
jg
push
inc
pop
xchg
es
mov
test
inc
or
mov
jno
adc
xchg
xchg
cld
inc
mov
insl
mov
cmc
inc
and
jns
pop
mov
inc
adc
or
imull
adc
cmp
repz
push
das
orl
outsl
ffreep
test
inc
fdivl
lods
stos
push
adc
scas
inc
jle
xor
jp
out
fcoms
adc
fimull
stc
fdivs
mov
mov
xor
mov
das
push
data16
cmpsb
jp
data16
fisubs
insl
push
outsl
inc
inc
mov
negl
sahf
arpl
push
lret
inc
daa
jae
aas
xchg
incl
sti
ret
test
and
cs
inc
cmp
test
push
addr16
out
inc
mov
pushf
repz
bound
out
repz
aad
mov
xor
std
loop
fwait
stc
pushf
jb
xlat
out
jns
inc
xchg
pop
daa
push
mov
movsb
pop
ja
mov
in
outsl
push
jp
inc
xchg
inc
mov
int3
cwtl
nop
jo
push
push
push
sbb
fmul
or
xchg
xchg
in
test
dec
mov
mov
popf
adcb
je
sub
and
cmpsl
mov
loop
mov
cli
pop
sahf
jecxz
mov
aam
mov
pop
push
adc
fwait
jg
lea
ja
in
fdivrp
ret
mov
or
jmp
push
addb
inc
cltd
jno
jle
mov
jg
in
cmc
fs
dec
cmpsb
das
stos
sti
sti
jmp
ret
fwait
xorl
pop
jmp
out
add
add
gs
xchg
loope
mov
jne
push
shrl
mov
pop
loop
mov
out
push
arpl
fistps
subb
jl
push
jbe
xlat
xchg
adc
add
movsb
shlb
dec
or
movswl
cmovnp
dec
push
loopne
aas
mov
imul
repz
fsubl
or
mov
sub
stc
clc
clc
cmp
call
mov
push
movzbl
bswap
mov
pusha
movb
pushl
ret
sub
xchg
rep
roll
or
inc
stos
stos
xor
dec
push
push
cwtl
call
dec
ret
sub
xor
mov
lds
sub
xor
loope
stos
dec
pushf
add
xchg
movsb
lods
push
lahf
test
in
stos
push
mulb
out
in
fnstcw
xchg
mov
push
sbbl
cmp
lahf
xchg
ja
aas
sbb
jne
lds
sbb
popl
out
lahf
repz
inc
lahf
pop
jnp
aaa
mov
popa
pop
mov
push
rorb
push
adc
out
scas
add
add
jno
pop
xchg
add
adc
in
stos
stc
sub
and
movsl
mov
xor
fmull
sub
jmp
mov
mov
pandn
mov
icebp
lcall
sar
movl
rorl
fimull
inc
mov
add
rol
stc
shrd
sub
movl
sbb
adc
mov
bt
test
pusha
call
add
add
sar
mov
mov
push
inc
lods
add
aam
adc
filds
rcl
stc
lret
sub
cmp
add
ds
roll
inc
out
mov
sbb
addr16
and
faddp
xchg
outsb
dec
inc
cmp
and
shr
or
rcrb
inc
sbb
idivb
pop
mov
jns
and
sbb
lds
hlt
mov
mov
pushf
pop
popa
push
inc
stos
or
pusha
and
xchg
sub
dec
in
test
aas
cmpsl
adc
daa
push
cli
push
push
push
jp
rolb
jo
lds
dec
dec
lret
insb
aam
push
push
mov
jbe
mov
into
cmpsb
mov
add
lret
into
stos
jbe
or
mov
or
addr16
movq
and
xchg
fnstenv
pop
or
xchg
cld
adc
das
repz
inc
test
pop
insb
jo
sbb
and
mov
cmp
sahf
add
mov
movsl
inc
sub
js
cmp
aaa
jp
mov
jge
mov
mov
xor
or
mov
rcll
test
test
mov
nop
adc
or
mov
jo
fbstp
dec
xor
sub
cmc
pop
mov
or
mov
imul
pop
pop
mov
jecxz
mov
rcl
rcrl
mov
mov
js
add
loope
xlat
xor
dec
push
cmp
lcall
xlat
lds
jne
in
mov
test
out
shll
xor
sub
sub
bound
outsl
dec
sbb
fisubs
xor
repnz
sub
insl
imul
movsb
arpl
jp
pop
mov
xchg
inc
mov
push
sti
aad
rcrl
faddp
or
push
sar
js
xor
cmpb
outsb
mov
ljmp
enter
ja
sbb
imul
int
jb
adc
sbb
mov
jo
hlt
ja
add
or
ror
or
sub
mov
mov
adc
fdivp
mov
pop
mov
xor
stos
cmpsb
sbb
packssdw
int3
and
cmp
and
out
jl
xchg
and
in
pop
xchg
out
xchg
shrl
jae
jbe
push
int3
mov
cs
jmp
sti
pop
mov
arpl
xchg
push
ss
xor
daa
add
jno
sbb
add
xorb
and
add
hlt
jmp
adc
outsl
int
inc
fsubs
lds
push
fcmovne
fsubl
lret
inc
add
loopne
mov
adc
aad
adc
pop
mov
xor
ds
jl
jns
shrb
adc
lods
mov
adc
jns
dec
sbb
fxch
lds
sbb
cmpsl
imul
fbstp
movsb
arpl
in
lods
or
adc
int3
sub
clc
je
adc
out
sub
pop
aas
add
adc
push
push
mov
mov
sub
fstps
popf
mov
dec
inc
inc
cltd
aam
andb
jp
shl
xchg
mov
jmp
aas
out
lret
mov
mov
xlat
pop
inc
sbbl
jp
sbb
stc
int
arpl
rclb
insl
dec
mov
lods
xchg
mov
add
int3
or
xor
cmpsl
stc
out
daa
adc
jmp
call
lcall
movsl
arpl
rolb
push
pop
fisubrs
xchg
mov
xchg
out
clc
mov
xor
adc
sarl
lock
jg
leave
movsl
dec
lret
xor
pop
enter
dec
cli
es
das
das
mov
stos
pop
mov
scas
push
ret
outsb
ljmp
xchg
sbb
out
add
stc
mov
inc
pop
xor
cmpsl
pop
jns
inc
addb
push
xchg
xor
in
imul
dec
push
cmp
in
aad
xor
push
dec
and
lock
or
call
movsl
roll
xchg
int
cld
jl
pusha
pop
mov
jno
rcll
in
mov
aam
rolb
jmp
push
movsl
inc
mov
sbb
jns
sahf
push
xchg
jb
push
outsb
loop
xchg
bnd
imul
push
jbe
sbb
pop
les
pop
mov
xor
ret
test
mov
pop
pop
pop
in
dec
inc
stc
adc
call
add
je
mov
jl
dec
adc
mov
outsb
test
rolb
xchg
push
in
movsb
add
cmpsb
arpl
pop
cmpsl
daa
xchg
jmp
mov
mov
fmul
sub
aad
imulb
fwait
pop
fwait
sti
fcomi
xchg
mov
enter
and
mov
pop
enter
inc
mov
add
sarl
add
mov
cs
mov
mov
inc
daa
pop
test
xchg
pop
test
ljmp
add
pop
and
push
mov
push
lea
jmp
cmp
cmpsl
arpl
xchg
add
xchg
and
inc
sub
mov
xchg
xchg
js
xor
dec
mov
xchg
mov
pop
outsl
out
and
xchg
xchg
cmc
pop
and
add
gs
add
xchg
cld
pop
cmp
adc
cmp
push
or
xchg
outsb
insb
mov
push
inc
fstpt
xchg
fwait
imul
popw
testb
jmp
sbb
ret
sbb
popw
push
sti
push
popf
mov
and
lds
sub
inc
push
jns
pushf
lea
jne
not
movb
call
les
gs
xor
test
push
xchg
or
aam
enter
push
loop
inc
movsb
add
push
addl
dec
push
pop
xor
enter
mov
push
dec
sub
mov
mov
and
shrb
cmc
fistpl
aam
sbb
jmp
addr16
xchg
clc
enter
ds
xlat
data16
cmp
and
fisubl
xchg
inc
fwait
call
rcrl
push
rcll
out
ret
add
arpl
jp
xor
data16
and
ljmp
sarl
adc
jbe
sbb
pusha
pusha
pop
aas
jnp
adc
adc
sahf
mov
jmp
jbe
push
lea
addr16
cli
inc
pusha
push
int
cli
pop
je
loopne
jne
out
ret
fsts
cltd
dec
cmpsb
or
mov
idivb
bound
xchg
lret
xchg
pop
aas
lea
lea
call
cmp
stc
pushl
xor
call
mov
pushf
pusha
pushl
ret
and
test
cmp
mov
lret
jbe
xor
js
lds
movsl
add
leave
cmp
ja
lcall
lcall
cmp
fsubrl
xor
mov
and
jp
xor
adc
shll
mov
jo
nop
or
jnp
lds
push
cmp
mov
int
push
pop
popf
lcall
ljmp
cmpsb
sahf
sahf
mov
js
mov
xchg
lret
arpl
dec
test
mov
dec
leave
xor
inc
mov
sub
xchg
andl
arpl
mov
test
iret
in
sti
inc
add
push
add
test
mov
cmp
sbb
imul
adc
add
pop
jae
orb
imul
xchg
cld
lods
sbb
inc
inc
sbb
mov
push
sub
mov
cmp
push
and
cmovs
call
out
add
or
add
in
movsl
jmp
rclb
cs
cmp
adc
das
movsl
xchg
ror
inc
fwait
outsl
dec
xor
icebp
cli
inc
stos
orl
dec
mov
scas
sbb
adc
js
pop
pop
mov
inc
and
or
pop
add
loopne
and
pop
bound
push
pop
mov
or
lods
hlt
push
inc
enter
mov
cmpsb
mov
inc
and
push
pop
pop
jmp
mov
cltd
add
out
mov
pop
push
imul
fcomps
inc
test
cmp
faddl
add
push
xor
push
xor
shll
das
pop
mov
xor
aas
scas
sbb
or
push
pop
out
sti
adc
loopne
xor
pop
jnp
fdivr
mov
jns
jg
jmp
adc
sub
push
mov
imul
fisubl
ds
push
xchg
popa
jnp
xchg
xchg
add
clc
stos
arpl
xchg
add
flds
jmp
sbb
add
dec
mov
mov
jno
fwait
add
aaa
jbe
mov
fwait
add
jno
sub
imul
insl
pop
mov
xchg
popf
push
dec
fwait
add
push
cmpsl
cli
xor
ljmp
in
push
jmp
jne
daa
repz
cmp
sahf
je
popf
jl
inc
sub
or
fsubs
les
lret
xchg
test
lods
arpl
sub
cmp
gs
ss
adc
cltd
and
mov
cmp
and
jmp
pop
jns
dec
mov
xchg
mov
cmc
inc
ds
jl
inc
outsl
in
pusha
mov
inc
dec
cmp
mov
fsubp
jl
popa
popf
add
outsb
jge
mov
movsl
add
cmp
sbb
and
shrb
pop
fcomi
cmpsb
loope
add
movsb
loopne
aad
add
dec
sub
shlb
loopne
ficoms
add
int
adc
cld
jmp
jmp
mov
cld
lods
arpl
gs
lea
lods
and
test
bound
and
insb
fmull
mov
ss
cmp
pop
jne
jg
dec
mov
pop
ss
jecxz
inc
jmp
imul
fldln2
xor
or
mov
and
fisttpll
adc
mov
sbb
aam
dec
mov
lret
loopne
sub
les
cltd
mul
xor
out
or
sub
dec
lods
or
cmp
test
rolb
js
sub
call
sbb
hlt
xor
in
ds
cs
jge
lods
arpl
int
jns
cmp
push
mov
popa
inc
sub
sbb
mov
mov
push
mov
filds
outsl
int
or
sahf
pushf
clc
popa
es
cs
aam
rcll
lret
in
push
jbe
mov
mov
pop
mov
lods
sbb
or
ss
mov
inc
sbb
dec
mov
mov
sbb
cmp
ljmp
mov
leave
push
adc
adc
adc
sbb
sbb
pop
test
test
inc
sbb
rclb
and
mov
arpl
or
pop
mov
jne
or
mov
ret
out
mov
pop
xor
test
inc
pop
xor
mov
pushf
adc
ljmp
imulb
xor
ds
int
dec
pop
cmp
movsb
imul
sub
push
movsl
jns
dec
sub
mov
mov
lods
stos
cli
cli
sub
sub
call
cld
pop
mov
arpl
mov
ja
aaa
xchg
aaa
stos
add
das
sbb
fwait
or
pop
inc
jb
ds
addr16
arpl
pop
xchg
cld
jns
mov
shrl
aaa
pop
dec
push
lret
mov
add
mov
mov
sahf
and
fnstsw
add
clc
push
jnp
sbb
hlt
lods
sbbl
sub
shll
insl
sub
adc
mov
cmp
out
adc
mov
xchg
andl
jecxz
scas
or
div
cmp
sbb
sub
xchg
pop
into
dec
adc
inc
mov
fldl
jne
popf
cmp
jo
dec
mov
adc
fnstenv
ret
push
mov
jmp
adc
inc
cmpsl
hlt
movsl
add
gs
pop
dec
and
fnstcw
fcomps
addb
sti
jecxz
movl
lea
jle
bt
neg
pusha
pusha
test
test
cmp
lahf
call
cwtl
negb
scas
arpl
pop
mov
jae
pop
in
push
out
int
outsl
mov
out
nop
ret
out
xor
gs
leave
sbb
xor
jp
mov
push
cli
faddp
xor
or
push
add
push
mov
inc
daa
jle
test
mov
add
fildll
repz
add
cwtl
lock
push
or
sbb
or
dec
inc
daa
insb
dec
stos
pop
movsb
add
aam
push
fsubs
pushf
cld
lret
and
lahf
popf
jmp
cmp
imul
out
and
or
adc
hlt
push
push
push
sub
out
in
push
mov
xchg
sub
cmp
shlb
jbe
jne
pop
inc
sub
lcall
push
and
sub
pop
lock
mov
sub
mov
int3
aad
push
ljmp
xor
and
add
add
rcl
inc
repz
and
pop
push
cmp
mov
das
xor
icebp
adc
sarb
outsb
pop
jnp
sti
pusha
rol
pop
leave
sbb
in
or
mov
pop
add
push
test
xchg
pop
push
aas
pop
inc
xchg
jnp
pop
pop
inc
jg
fiadds
xor
dec
inc
inc
fstps
jl
arpl
stc
inc
mov
jne
inc
movsl
sbb
repz
aaa
jecxz
push
call
xor
ja
add
jp
loopne
sub
or
dec
mov
jg
inc
or
and
xchg
push
leave
pop
or
call
imul
ficomps
mov
in
mov
daa
nop
cmpsb
mov
cmp
aaa
push
psubb
push
int3
sub
jmp
dec
sbb
or
cwtl
mov
in
mov
js
mov
out
lods
call
lock
mov
mov
je
xor
aam
mov
mov
mov
push
scas
divb
xchg
jno
mov
push
dec
jg
aam
cs
test
sub
jge
inc
xor
cmp
or
sahf
push
call
pop
out
shr
sbb
mov
sbb
cmp
jle
pop
ds
not
rol
mov
cmp
sub
cmpsl
daa
adc
out
jp
mov
gs
ljmp
mov
or
mov
outsb
sbb
jl
sbb
imul
inc
xchg
mov
add
pop
mov
and
repz
sbb
inc
ss
mov
mov
jns
or
popf
jmp
loope
xlat
and
cmp
movl
lahf
add
cmp
in
gs
or
pop
add
pushf
into
push
out
push
mov
daa
xchg
pop
dec
xchg
xchg
pop
cmp
lea
sti
lods
outsb
insb
fsubrs
or
or
pop
add
les
push
cmp
pushf
lea
jae
test
stc
shl
mov
bswap
stc
pushf
mov
xor
rcr
neg
mov
call
jbe
xchg
fsubr
rdmsr
jge
pusha
push
dec
test
shrb
jb
dec
fimull
test
sarl
and
pop
xchg
nop
dec
out
inc
mov
stos
cmpsl
insl
push
call
push
test
push
xchg
pop
xchg
jns
sarl
inc
pop
test
mov
leave
inc
mov
mov
pop
xor
inc
movsl
enter
das
repz
sbb
fstps
repnz
lods
icebp
dec
sub
fwait
or
adc
fldenv
mov
push
stos
dec
in
sub
xchg
enter
xor
add
mov
xor
dec
add
les
ret
shrb
imul
jae
mov
int3
dec
mov
cld
iret
cmp
stos
cmp
fistpl
enter
dec
lds
mov
pop
popa
rorb
sbb
fwait
dec
leave
icebp
pop
xor
stos
inc
add
jmp
mov
dec
inc
pop
sbb
xchg
imul
push
mov
or
mov
sub
jp
enter
push
call
loop
jne
ss
jns
inc
adc
sti
add
xchg
mov
sub
dec
mov
or
push
and
dec
pop
inc
shlb
rorl
mov
int
insl
xlat
sub
push
push
dec
jb
das
dec
jg
push
sub
mov
pop
jecxz
and
lret
inc
out
mov
or
adc
ret
loope
add
and
movsb
or
xchg
xlat
das
stos
adc
push
inc
lret
dec
mov
fstpl
jo
enter
xor
inc
cmpsb
cmp
cld
cltd
xor
adc
test
outsb
leave
aad
sub
ficompl
int
cmp
pop
fucom
add
xchg
shlb
hlt
and
in
or
cwtl
sub
jmp
sub
mov
inc
orb
subl
xchg
pop
inc
mov
aam
pop
pop
dec
jmp
pop
dec
or
imul
cmp
jmp
mov
xor
aaa
xchg
je
pop
or
push
and
xor
inc
enter
inc
and
sub
cmp
daa
out
jno
jno
jno
ss
pop
outsl
cs
xor
mov
xor
mov
pop
shlb
ret
and
dec
aas
imul
dec
mov
inc
dec
lea
and
fisubrl
push
mov
xor
inc
add
lods
sbb
into
iret
call
and
out
dec
inc
sbb
pop
dec
jo
sbb
mov
dec
rorb
ljmp
das
xor
gs
dec
divl
insb
cmp
dec
dec
adc
enter
iret
leave
dec
dec
adcl
fdivrs
xchg
mov
push
pop
push
mov
fiaddl
jae
cli
int
cmp
pop
fldt
mov
loop
add
and
xor
notl
subl
enterw
hlt
fimull
das
scas
jl
rcr
inc
push
jae
mov
leave
dec
sti
xchg
push
lock
into
sub
xor
int
in
ljmp
xor
vpmulhw
stc
bound
les
mov
leave
sub
clc
fmuls
adc
dec
dec
push
call
xor
loopne
inc
leave
inc
dec
mov
xchg
xchg
sahf
outsl
or
mov
xor
pusha
pop
inc
jp
adc
pop
fimuls
sahf
push
mov
inc
xchg
std
fs
inc
rcll
punpcklbw
cmp
mov
mov
pop
es
enter
sti
pop
shlb
push
jnp
cmp
addr16
mov
test
inc
or
in
adc
inc
push
mov
inc
lret
dec
lods
dec
nop
enter
xlat
dec
dec
sub
xor
and
pop
pop
dec
dec
cli
das
mov
sub
ss
mov
imul
xchg
ret
jb
and
push
mov
or
pop
mov
ror
mov
inc
cwtl
cmp
mov
and
inc
or
mov
cs
das
pop
xlat
xor
jno
jae
out
imull
inc
push
push
sbbl
inc
xor
jmp
mov
pop
cmpsl
orps
out
into
mov
or
inc
push
cmp
mov
test
inc
or
ret
xchg
sbb
leave
push
notl
fistpl
enter
das
ret
dec
aas
loop
imul
sub
pushf
popa
jae
inc
stos
cmp
and
pop
ss
dec
mov
lret
or
lods
rcll
pop
cmp
and
cmp
cwtl
add
or
ja
sub
sarl
jae
pop
mov
xchg
loope
cmp
pop
out
outsb
sub
adc
push
daa
inc
fsts
lret
xor
or
mov
dec
lea
lds
jge
pop
add
mov
cltd
dec
lds
cmpsl
pop
into
leave
pop
insl
push
pop
push
or
adcl
in
inc
jns
sbbb
ds
and
ficoml
insl
mov
and
mov
cmp
sarb
shrl
imul
pop
push
gs
lds
pop
push
adc
aaa
rorl
fucomp
fistl
pop
dec
xchg
out
lcall
in
sub
test
and
sub
inc
add
lds
leave
leave
imul
hlt
lret
test
fists
clc
int3
enter
das
rorb
push
sbb
aad
sbb
das
xlat
out
mov
sub
loopne
int
leave
loopne
or
iret
popa
int
and
pop
sub
or
sub
push
rcrl
les
fsts
pop
mov
pop
shlb
lock
fidivl
fldcw
fstl
rolb
and
cmpsb
das
mov
xor
push
dec
scas
sub
push
out
pop
pop
inc
shll
and
push
stos
fcmovnu
inc
or
cmp
int
ds
jmp
outsl
dec
push
or
add
mov
sub
mov
push
cmpsl
pop
xchg
jmp
sub
test
xor
fadds
inc
imul
lcall
pop
pop
jge
push
es
leave
and
outsl
pop
data16
pop
push
add
push
dec
test
shrb
iret
loope
or
lret
mov
xchg
inc
sub
dec
cmpsl
int3
adc
cmc
dec
sub
fwait
sub
xor
sub
cld
inc
mov
insb
adc
dec
xlat
andb
push
in
mov
cmp
aad
clc
pushf
dec
pop
jl
pusha
sarb
fisttpl
xchg
ror
mov
jae
das
ficompl
movsb
test
sbb
sbb
xor
leave
or
shlb
inc
push
inc
out
les
cmc
loop
cmp
iret
xlat
jo
xchg
das
stc
enter
sub
test
xor
pop
leave
dec
add
push
sub
rorl
xor
and
adc
pop
fistps
pop
rorl
cli
fbstp
lock
les
push
sub
adc
dec
std
or
mov
or
jb
dec
lahf
loopne
fimull
mov
daa
dec
es
pop
push
inc
push
sbb
sub
jnp
fdivrs
dec
rcrb
scas
push
nop
inc
xor
and
scas
dec
mov
adc
int3
pop
rolb
adcb
int3
ror
cmpsl
lods
cmp
and
push
out
das
mov
dec
leave
stc
dec
sti
out
imul
push
fstpl
cmp
xor
mov
int3
or
inc
rcl
in
pop
dec
sub
stos
inc
icebp
inc
pusha
sub
mov
inc
mov
lods
clc
cmp
and
idivl
dec
xchg
out
lret
xchg
inc
int3
push
and
mov
test
pop
push
push
test
jne
add
dec
lods
add
imul
movsb
push
or
mov
insl
addl
or
in
add
test
lods
push
testb
mov
ja
rcrl
inc
or
icebp
mov
or
cli
jne
add
or
ret
dec
jb
add
add
xor
test
sbb
mull
fisttps
pop
sub
notl
int3
pop
xor
push
adc
shll
inc
movsb
mov
sarb
fistl
and
mov
imul
or
sbb
aam
jbe
leave
lret
cmp
jmp
dec
icebp
mov
fisubs
leave
push
xchg
inc
out
push
leave
mov
mov
push
and
pop
sub
add
leave
mov
or
sahf
mov
add
call
cmp
or
cmp
xchg
jmp
std
pop
push
push
mov
dec
cld
adc
sub
pop
add
in
fs
xor
add
outsb
or
adc
ret
or
stos
pop
sbb
push
and
inc
pusha
ds
lret
lea
pop
and
inc
test
push
int
stc
pop
adc
pop
inc
push
dec
dec
push
cmp
and
fidivs
cmp
push
push
jo
enter
cmp
shlb
push
test
fs
cmpsl
dec
cmp
xchg
dec
cmpsb
push
rorb
xchg
xchg
shlb
cli
jmp
or
mov
mov
cmp
dec
dec
push
into
inc
das
cmpsl
enter
dec
xchg
jne
das
sub
pop
jnp
dec
ror
les
add
int3
aad
aad
cmp
xchg
or
xor
lods
dec
push
xchg
jge
stc
xor
pop
dec
jno
cld
call
rclb
xor
xlat
jg
into
cmp
or
int3
pop
push
mov
aaa
xchg
pop
das
mov
push
icebp
call
xor
mov
add
jmp
pop
jns
inc
sub
xchg
mov
mov
int3
or
and
shlb
push
push
lods
or
dec
popf
xor
jb
pop
fildll
leave
xchg
push
dec
sub
sbb
stos
push
push
jmp
pop
push
arpl
adc
ds
sarb
leave
jne
rcl
and
lret
out
inc
out
mov
aas
mov
push
addl
dec
test
mov
pop
cmp
stc
xchg
inc
pop
jb
pop
pop
adc
pop
sub
adc
or
lret
or
dec
sbb
inc
jb
xchg
sbb
pop
lret
fldcw
xchg
aad
repz
mov
mov
adc
lret
push
jmp
lcall
pop
sub
add
pop
test
ret
pop
rol
popa
pop
dec
jae
pop
xor
or
jp
scas
push
inc
leave
cmp
xorl
push
mov
or
xor
pop
xchg
in
xchg
sub
pop
shr
lods
xor
dec
shlb
mov
in
adc
pop
inc
icebp
fs
lea
xor
cmp
jae
cli
fistl
orl
out
mov
push
adc
xor
dec
popf
pop
and
daa
repz
mov
inc
rolb
sbb
mov
sbb
fidivrl
lcall
sub
or
inc
test
xor
data16
adc
scas
sub
iret
or
in
mov
add
rclb
cwtl
and
cltd
fisubrl
sub
adc
xchg
cs
lret
pop
sub
dec
xor
pop
push
mov
inc
xor
outsl
out
fldl
rolb
fs
xor
loopne
repz
iret
add
stc
adc
cmpsl
loopne
sbb
inc
cltd
or
sub
mov
or
dec
dec
mov
push
sub
adc
test
aas
push
jmp
lret
pop
lret
xor
cmpsb
dec
add
inc
xchg
lods
sbb
pop
jns
inc
lds
mov
or
push
pop
mov
mov
stos
adc
or
in
dec
ljmp
pop
add
dec
xor
mov
and
fldcw
pop
xchg
enter
or
and
or
lcall
xchg
fldl
inc
push
and
lahf
rorb
jl
sbb
xor
sub
jmp
xchg
or
rcr
xlat
jmp
dec
dec
sbb
mov
dec
ret
dec
test
int3
pop
xor
xor
insb
int3
lret
sub
inc
dec
or
daa
dec
pop
mov
rcll
mov
js
inc
aam
mov
lock
scas
xor
mov
shrb
dec
rcrb
iret
inc
sub
mov
mov
insl
cmp
add
push
shrb
lret
jp
or
aaa
sub
or
add
shr
push
leave
fnstcw
inc
add
pop
push
notb
movsl
je
fnstsw
je
cmpsb
xor
dec
add
and
mov
stc
out
inc
icebp
and
pushf
nop
mov
vmovaps
rol
inc
sahf
aad
jne
lods
call
test
lods
mov
dec
loopne
dec
push
mov
adc
dec
es
pop
sarl
dec
and
cmp
loope
add
repz
sub
and
dec
inc
ret
jp
js
mov
lret
sbb
inc
leave
ja
mov
daa
push
and
cs
push
cmp
stos
xor
add
ror
or
and
mov
imul
call
shrl
mov
fcmovne
popa
loopne
fcoml
push
shlb
aad
loope
sub
inc
jecxz
push
dec
add
and
inc
jmp
push
call
lret
repz
stos
dec
test
daa
mov
dec
cli
sti
imul
sub
dec
dec
out
and
sub
xor
inc
mov
ds
or
pop
outsl
add
xlat
jae
das
sti
movb
or
aaa
pop
jg
xor
andnps
xor
push
adc
mov
sahf
or
mov
xor
pop
les
pop
in
mov
jns
and
and
popf
or
dec
stc
aad
bound
cmp
std
mov
cmpsl
mov
repnz
imul
inc
test
shll
cmpsb
inc
and
adc
sub
dec
xor
xor
mov
insb
sub
dec
or
jp
out
insb
pop
push
outsb
pushf
pop
dec
mov
aad
cmp
dec
xchg
dec
xchg
jns
dec
stos
or
push
inc
add
mov
inc
sub
cwtl
lods
inc
jle
lret
push
jne
inc
nop
pop
and
jmp
rorb
sub
sub
push
or
sbb
pop
push
push
sub
mov
dec
inc
fisttps
test
jmp
push
dec
sub
pop
inc
mov
inc
sub
cmp
inc
xchg
pop
pop
mov
stos
lret
out
pop
inc
add
push
bound
inc
xor
dec
shll
dec
mov
cmp
jnp
inc
lods
mov
stos
mov
imul
iret
leave
sbbb
int3
push
dec
dec
xchg
js
xor
iret
vdivsd
push
jno
cld
dec
insl
jns
fistl
or
int3
int
inc
xor
pop
sti
push
cmp
inc
rorb
dec
dec
es
enter
push
push
mov
mov
insl
pop
dec
push
je
push
jecxz
push
mov
push
das
add
fdivrs
movsb
mov
stc
push
dec
mov
call
cld
cmp
pop
or
push
fisubl
rol
les
pop
or
xchg
dec
mov
test
filds
xor
dec
inc
sub
mov
hlt
cmp
mov
enter
dec
leave
jae
ss
cmp
out
xchg
adc
mov
cwtl
dec
dec
mov
stc
mov
cmp
test
xchg
mov
inc
or
aas
fdivl
les
pop
pop
or
ficomps
jg
dec
pop
inc
xlat
push
stos
lret
inc
fst
aaa
fwait
and
mov
out
sbb
imul
scas
mov
out
pop
sub
mov
mov
mov
aam
sbb
aam
insb
call
xlat
scas
add
movsl
inc
cltd
or
cmp
mov
xchg
sbb
dec
mov
int3
cmp
xchg
push
mov
inc
cmpsl
inc
ss
leave
inc
sti
mov
fldt
mov
or
addr16
es
cld
mov
and
pop
jge
mov
cmpsl
ss
push
dec
add
push
inc
in
pushf
les
enter
lock
dec
inc
jae
ljmp
es
add
add
lods
sub
mov
pop
dec
lret
imul
xchg
arpl
sbb
mov
test
mov
insb
das
nop
or
imul
mov
outsb
dec
xlat
xor
into
mov
dec
dec
add
pop
push
xor
mul
sbb
push
out
lahf
dec
rcll
subl
mov
xor
push
dec
xor
loope
call
cmp
jae
leave
stos
test
fildll
push
inc
xchg
mov
sbb
sub
fcmove
call
inc
pop
pop
shrl
imul
push
test
jle
stos
dec
shrb
ja
and
movsb
pop
mov
cmp
and
xor
and
roll
stos
fsts
test
pop
test
jmp
mov
lock
mov
shrb
push
clc
jg
xor
fistps
and
sbb
sub
mov
jle
dec
fisttpl
pushf
push
pop
dec
push
xchg
nop
pushf
inc
mov
sub
enter
out
adc
inc
xchg
das
pop
cmc
sahf
mov
bound
out
cmp
or
hlt
inc
mov
pop
inc
pop
mov
fidivrl
call
push
mov
jecxz
jp
jp
adc
inc
test
dec
xor
inc
dec
iret
ror
xchg
outsl
inc
dec
aad
dec
out
repnz
cltd
sub
mov
flds
int3
sub
cmp
lcall
pop
inc
inc
sub
nop
shlb
lahf
dec
add
minps
inc
call
sbb
repz
lods
add
rcr
and
scas
test
dec
cmp
ds
fwait
xor
adc
leave
stos
cmp
sub
sub
outsl
mov
fs
pop
xlat
int
out
fists
insb
das
int3
push
sbb
xchg
push
ret
add
dec
aad
cli
enter
sub
imul
push
dec
xchg
mov
sub
int
cmp
outsb
lods
into
iret
in
cs
mov
sub
push
pop
mov
jnp
adc
mul
inc
fwait
out
push
push
aaa
sbb
dec
push
jmp
sub
vpmaxub
or
push
mov
xor
rcr
test
dec
jmp
xor
mov
and
test
pop
push
dec
push
lods
sti
sahf
sbb
test
dec
sbbl
add
aam
mov
jne
adc
loop
cmc
dec
cli
cmp
pop
jp
inc
pop
push
inc
mov
daa
leave
mov
push
nop
cmp
lods
je
inc
push
add
xor
int
push
aas
inc
dec
rcll
jp
push
pop
enter
xchg
test
addb
mov
and
insb
decl
in
sub
xor
mov
pop
inc
mov
popa
xor
push
sub
bound
fists
inc
cmp
pop
mov
dec
jne
lock
rcl
xor
outsb
mov
notb
shlb
aad
sarl
dec
jl
and
push
lret
dec
out
mov
inc
jmp
jg
leave
stc
sub
or
sarl
pop
clc
add
lds
push
out
and
in
inc
pop
movl
test
shlb
jmp
and
jle
dec
enter
das
push
dec
aad
adc
mov
pop
and
fwait
enter
pop
cwtl
lods
inc
ja
mov
sub
dec
test
fistpll
out
jmp
pop
shrb
push
insb
mov
sahf
mov
dec
push
inc
jmp
clc
jo
pop
mov
loopne
leave
aad
pop
push
xlat
push
enter
and
ds
xor
mov
inc
jp
or
repz
test
adc
dec
out
jnp
cmp
mov
xchg
adc
rorl
movsb
adc
xlat
push
mov
adc
es
aad
dec
dec
iret
xchg
inc
sub
mov
mov
sub
hlt
jbe
test
leave
mov
push
cs
dec
inc
mov
inc
out
push
sub
fisttps
add
pop
mov
js
ss
or
or
fcoml
pop
sub
xchg
loope
cmpsl
aad
lret
mov
loope
into
pushf
xchg
pop
jo
mov
dec
mov
and
es
int
mov
xor
xor
jae
lahf
dec
push
inc
cmpsb
sbbb
outsb
ret
lret
insb
inc
mov
aas
or
push
or
sbb
daa
es
pusha
mov
jmp
fldenv
mov
loope
xor
push
cmp
jmp
int3
jge
add
rolb
mov
mov
inc
loope
imul
jns
adc
loope
cmp
test
rcll
mov
hlt
mov
sub
and
adc
push
test
fsubrp
call
add
fldl
xchg
inc
dec
pop
xchg
stc
es
lret
leave
pusha
fildll
cmc
lock
add
push
lret
or
mov
dec
inc
mov
cmp
or
dec
dec
loope
push
enter
push
dec
inc
aas
push
pop
xchg
xor
test
xchg
test
mov
iret
push
pop
inc
add
and
mov
pop
fstl
pop
sub
mov
add
movsl
cmp
shll
mov
fwait
shrb
cmp
in
mov
loopne
inc
push
repz
pusha
outsl
mov
xchg
fstps
iret
dec
mov
dec
or
loopne
sub
inc
sub
push
test
add
xchg
ror
sub
inc
imul
inc
cltd
mov
fistps
push
jle
fcoms
int
or
pushf
stos
das
nop
push
fimull
and
adc
pop
adc
mov
js
inc
shrb
xor
fwait
shrl
dec
pop
xor
add
cmp
xchg
cmp
cmp
mov
aad
sub
stc
addb
ror
inc
lret
jb
fcmovnbe
insl
sub
dec
mov
dec
aam
out
or
adc
or
ja
cmpsl
aaa
and
dec
mov
cmp
inc
dec
sbbb
std
aad
inc
dec
xchg
sub
inc
add
push
dec
mov
orb
jno
or
cmpsb
mov
clc
fimuls
or
enter
in
or
xchg
fdivr
mov
aas
cmp
xor
dec
jne
test
mov
rolb
xchg
jg
cmp
dec
pusha
pop
xor
out
lods
pop
or
lock
inc
sbb
push
jns
push
or
ret
sub
addr16
dec
in
inc
or
mov
js
das
imul
lods
and
lret
sub
inc
dec
sub
mov
andb
shr
adc
das
push
pop
popa
cmp
or
adc
outsb
inc
or
sbb
pop
mov
or
je
int3
mov
and
aam
jmp
pop
push
nop
mov
push
ficomps
pop
xor
xchg
mov
xchg
xor
inc
push
sub
into
inc
push
lods
call
add
dec
popa
fimull
ds
int
add
pusha
lret
repz
inc
adc
dec
test
inc
test
adc
call
aaa
aad
sub
ds
enter
fldt
mov
stc
pop
cmp
sbb
fs
dec
pop
dec
sub
inc
xor
arpl
pop
stos
rcrl
pop
adc
loope
fstl
sub
pop
mov
or
cmp
add
pop
cmp
cmp
int3
loope
mov
lods
xchg
mov
shlb
xor
dec
xchg
sbb
and
in
bound
leave
icebp
mov
inc
cmp
push
cmp
neg
dec
and
cmp
jmp
subl
fimull
xchg
cmp
jns
lods
call
pop
push
sbb
dec
mov
mov
leave
push
sbb
int3
or
fnstcw
adc
popf
pop
fxch
insb
int3
mov
mov
fwait
outsl
inc
dec
inc
adcb
cmpsb
in
and
xchg
xor
dec
lret
das
xchg
and
ds
push
mov
adc
sub
insb
xor
rolb
add
dec
stos
das
inc
cli
aaa
jo
das
fwait
in
sub
pop
lds
pop
push
add
or
add
pusha
mov
and
inc
lcall
mov
pop
or
pushf
js
lcall
cwtl
outsl
inc
sbb
into
sub
das
dec
xchg
inc
je
das
fcomps
push
clc
dec
or
xor
and
clc
out
xor
int3
sub
into
inc
enter
das
xchg
dec
adc
and
loopne
das
jl
cs
jns
inc
sub
mov
inc
ss
inc
lret
int3
pop
pop
cmpsb
push
pop
xchg
xchg
inc
mov
lcall
add
lcall
sbb
fldenv
dec
xchg
pop
cmp
xor
adc
pop
inc
pop
xchg
add
out
in
sarb
xchg
cmc
fstpt
cmp
inc
dec
sbb
pop
push
mov
cmp
xor
push
mov
dec
shl
jne
insb
icebp
jmp
jb
dec
pop
cmp
push
data16
dec
in
repnz
sbb
inc
xor
pop
dec
dec
push
mov
push
and
aam
lret
push
mov
push
mov
fs
dec
call
jno
dec
inc
imul
cmp
dec
or
imul
inc
mov
ror
pop
out
cmpsb
fstps
add
clc
aad
push
inc
leave
adc
ljmp
inc
push
mov
sar
mov
mov
inc
arpl
imul
push
dec
or
popa
push
dec
xchg
and
call
sub
insb
push
fcompl
push
jae
sub
mov
inc
inc
mov
sbb
pop
push
insl
bound
and
in
sbb
das
xchg
sbb
mov
cmp
jge
push
fiadds
mov
inc
mov
or
sbb
imul
rorb
fxch
fnstenv
shlb
lds
or
out
fiadds
push
dec
push
or
jno
pusha
inc
hlt
adc
rorl
or
aas
popa
dec
pop
sbb
ja
das
dec
rcrl
nop
inc
jo
imulb
dec
push
inc
inc
push
xor
ret
fwait
pop
lock
out
mov
aad
or
test
adc
inc
insl
pop
pop
xor
dec
push
cmp
sub
or
mov
xor
dec
mov
push
dec
movsb
cmp
xor
or
inc
into
pop
pop
dec
or
pop
xchg
das
xlat
cmp
pop
fs
push
and
push
stc
mov
mov
inc
push
pop
dec
lock
pop
lret
in
jnp
call
mov
int3
or
ficoms
outsl
pop
sub
sbb
mov
shll
inc
jge
xchg
xor
jecxz
rorb
pop
jmp
rcl
repz
pop
lods
dec
gs
or
xor
ss
push
andl
dec
adc
and
das
jne
mov
popa
adc
jmp
aaa
xchg
sbb
ja
sbb
push
push
popw
pop
call
push
push
shll
movsb
pop
leave
push
scas
xor
cmp
into
repz
mov
es
nop
movsl
push
mov
inc
xchg
jmp
scas
xor
inc
addr16
out
pop
adc
dec
pop
aam
dec
enter
inc
imul
xchg
orb
inc
cmp
aaa
lods
int3
pop
leave
push
cld
pop
aad
or
dec
das
lock
dec
xor
dec
inc
cmc
fstl
imul
mov
enter
fbld
or
xor
or
sarb
dec
stos
pop
imul
repnz
cmp
push
sub
lret
inc
mov
pop
in
push
fildll
mov
sbb
in
pop
sbb
dec
mov
mov
sti
mov
scas
cmpsb
pop
adc
ret
cmp
aaa
or
leave
dec
iret
cmp
push
mov
pop
enter
and
pop
enter
fyl2x
mov
ret
mov
xchg
aam
dec
mov
mov
lods
sub
add
enter
ficomps
lret
jno
shlb
into
test
outsb
leave
pop
and
and
lcall
cmp
inc
mov
xchg
inc
jno
int3
xchg
rcll
aaa
clc
dec
call
inc
jmp
imul
stc
dec
sub
or
push
shll
push
dec
sub
push
sbb
mov
les
imulb
lcall
push
aas
mov
lds
push
ds
jmp
test
movsb
je
inc
lret
incb
pop
sub
cmc
test
pop
aad
jne
int3
push
mov
or
add
pop
inc
mov
xchg
mov
or
enter
cmovbe
jmp
fs
pop
jns
fs
inc
xor
das
mov
andps
int3
test
or
fmull
adc
sub
testb
gs
lret
mov
push
test
pop
jmp
and
pop
imul
or
test
enter
push
xchg
inc
add
jae
xor
xor
or
inc
pop
inc
pusha
pop
inc
out
nop
inc
adc
aaa
sub
sub
jae
or
ret
or
ficomps
adc
and
and
xor
lods
xchg
sbb
jecxz
mov
dec
sbb
pop
jp
lret
dec
int3
dec
pop
inc
push
add
insb
jg
fisubl
jnp
push
xor
sub
push
std
push
sahf
sarl
jnp
add
dec
stc
xor
es
lret
fimuls
call
inc
sub
outsb
or
mov
push
movsl
inc
adc
lock
aad
cmp
jmp
cmp
and
sub
add
mov
add
rol
cmp
and
xchg
push
inc
adc
or
cmp
ffreep
loope
outsb
shll
lods
leave
es
idivb
int3
daa
jp
rcll
rclb
pop
xor
pop
xchg
xchg
subb
push
mov
jmp
or
mov
pop
xchg
or
and
jno
into
es
inc
dec
dec
add
dec
sub
cmpsb
sarb
fists
lahf
lcall
xor
mov
mov
xlat
fcoms
test
push
push
push
bound
dec
adc
outsl
xchg
push
push
subb
sbbb
mull
pop
psraw
pop
push
xor
push
mov
add
vmovupd
dec
sub
int3
mov
repz
sub
aam
clc
add
aas
jecxz
test
jae
out
push
aam
dec
sbb
pop
or
adcb
bound
into
mov
jb
and
mov
or
inc
cmp
rcr
or
pop
pop
pop
jae
mov
pop
or
push
pop
inc
dec
rorl
int
xchg
roll
mov
push
jecxz
jno
aad
test
or
jae
pop
inc
dec
sub
pop
cmp
sub
dec
loope
in
mov
pop
leave
dec
nop
and
int3
xor
ret
outsb
dec
push
cmp
shll
mov
dec
in
dec
or
int3
inc
pop
mov
mov
push
dec
sarl
decb
cmp
mov
int3
jg
sub
dec
rorb
sub
test
push
stos
push
ficomps
aam
in
dec
inc
or
xchg
pop
inc
jo
xchg
or
xchg
rcrl
rorl
and
cmp
push
or
or
mov
inc
pop
jae
out
outsl
divl
dec
add
enter
stos
push
icebp
cmp
xor
adc
adc
sub
dec
fnsave
clc
inc
mov
outsb
test
jl
pop
sarb
xor
dec
lods
pop
and
dec
cmpsb
in
pop
push
rolb
jle
pop
cs
cmp
imul
lods
mov
mov
iret
je
and
mov
dec
mov
subl
sub
inc
lret
pop
imul
cmp
xchg
pusha
leave
dec
loop
dec
pop
ret
fisttpll
jnp
sbb
dec
sub
sbb
int
dec
and
imul
or
dec
mov
inc
xor
jmp
sub
cld
inc
add
jae
in
and
fists
scas
push
cmp
push
pop
das
dec
mov
call
jmp
das
stos
mov
popa
movsl
push
fsubrs
leave
or
add
es
add
push
faddl
push
push
pop
mov
inc
dec
dec
addb
adc
test
fstps
mov
dec
pop
shr
cs
cmp
mov
rclb
push
or
push
mov
push
sub
lds
pop
sbb
sub
or
les
jmp
test
push
and
push
fs
mov
push
cmpsb
int
xor
push
pop
into
pop
dec
enter
pop
dec
cmp
pop
neg
pop
inc
cltd
std
sbb
mov
mov
lds
aad
mov
adc
jae
popa
das
add
mov
mov
lret
aad
or
les
sbb
out
xlat
add
fmuls
dec
jl
mov
das
cmp
cmp
js
cmp
rcr
rorl
cmp
and
dec
inc
or
dec
xor
inc
call
dec
imul
mov
sub
fcompl
shll
push
call
iret
dec
pop
insb
mov
inc
lds
push
xchg
push
pop
fstps
sub
fldenv
dec
push
fcomip
test
test
sub
mov
adc
pop
imulb
cmp
sub
loopne
dec
xor
inc
aad
test
lea
mov
ret
int
sbb
mov
adc
push
sub
int3
imul
sbb
sub
pop
rcrb
lea
jne
pop
xor
dec
sarl
cmc
and
mov
loope
mov
dec
out
push
dec
adc
jae
xor
lret
fistl
inc
lret
mov
sbb
repz
rorl
pop
orb
xorb
shrl
lret
xchg
cmp
inc
and
push
bound
xchg
stos
mov
inc
pop
pop
stos
mov
pop
mov
dec
int3
mov
dec
mov
jo
mov
in
jne
xor
loop
inc
lods
mov
ljmp
cld
adc
pop
push
jp
pop
dec
outsl
outsb
mov
dec
dec
and
xor
jl
pop
mov
sbb
jmp
xor
aas
movsl
cmc
dec
and
adc
sub
lahf
leave
xchg
fadds
dec
das
mov
jns
or
push
stos
adc
pusha
sub
lret
xchg
sub
dec
fldcw
or
jge
out
dec
cltd
jecxz
jnp
cmp
cmc
sbb
cmp
pop
enter
sub
shrl
scas
xor
mov
ds
mov
mov
rep
lret
inc
dec
dec
jp
aaa
mov
xchg
and
fsubrs
in
jno
xchg
popf
xor
sbb
inc
and
add
and
cmp
adc
cmp
shlb
aam
ljmp
dec
orb
sub
pop
or
jl
and
jb
ret
jmp
push
insl
dec
xor
pop
cmp
or
xchg
stos
dec
out
sarb
outsb
into
data16
sub
xchg
js
mov
into
rcrb
or
or
push
sub
jno
rcrl
push
leave
sub
out
mov
rcl
sar
or
mov
cmp
inc
inc
xor
je
add
pop
je
fldt
lods
xor
in
cmp
inc
pop
sub
bound
test
pop
lds
stos
and
pop
jge
inc
cltd
and
orb
xchg
dec
adc
jg
lds
pop
jo
daa
inc
mov
cmp
sti
fildll
movb
cmp
dec
inc
scas
fisttps
dec
cmp
test
gs
and
dec
push
shrl
cmc
dec
dec
jae
mov
inc
dec
push
jl
dec
jns
xchg
and
inc
xor
lret
xchg
inc
fimull
stc
aas
sub
gs
push
dec
mov
pop
out
and
gs
adc
insl
ds
inc
idivl
pop
sbb
cmp
fcom
lods
mov
pop
push
rol
ds
in
rorb
stos
ret
das
movsl
jmp
push
dec
adc
mov
sarb
aam
pop
pop
iret
icebp
and
jmp
fistl
push
gs
xor
mov
aam
aas
mov
cmpsb
jle
push
cmp
jp
in
lods
lds
xor
loopne
dec
sub
enter
xor
fcomps
sub
es
sbb
pop
or
lods
pop
add
shll
pop
fcoms
call
into
insl
clc
pop
push
lods
mov
sub
and
pop
les
ret
push
cmp
fmull
sahf
std
push
leave
movsl
cs
lea
pushf
push
push
cmp
adc
cwtl
mov
sub
icebp
xor
push
inc
rorl
push
sbb
mov
xchg
popf
pushf
and
xor
adc
push
push
push
pop
or
xor
add
fdiv
pop
mov
mov
add
sub
xchg
cmpsl
inc
push
ror
sub
enter
jp
mov
cmp
stc
mov
testb
repz
xor
push
imul
push
clc
add
fisttpll
and
sbb
fisubl
shrl
inc
cmp
pop
xchg
repz
test
fdivrs
add
das
dec
push
jg
aas
shll
sub
aad
pop
push
mov
repnz
aad
sub
mov
out
shrb
pop
jp
or
sbb
mov
xor
and
cmp
and
cltd
inc
dec
add
pop
fidivs
iret
das
jecxz
push
or
dec
jge
arpl
sbb
inc
les
and
fcomip
dec
mov
sub
cmp
cmp
pop
adc
stc
sbb
or
js
loopne
pop
jo
and
push
or
pop
xor
sbb
adc
flds
pop
imul
adc
je
imul
lods
jbe
pop
neg
fcompp
push
sbb
das
outsb
and
lahf
pop
ds
sbb
rcr
sbb
les
leave
and
mov
xor
push
dec
mov
or
xor
pop
in
subb
sti
inc
dec
pop
cli
jmp
pop
mov
push
mov
push
pop
movsl
aas
sbb
jge
stc
xor
jb
enter
and
push
fbstp
and
dec
mov
outsb
pop
pop
pop
enter
xlat
and
aaa
rorl
cmpsl
sbb
insl
dec
or
imul
jmp
mov
push
jp
jg
shlb
dec
aad
test
inc
dec
push
insl
xchg
mov
dec
out
inc
cmpsl
and
xchg
fbstp
add
mov
orb
icebp
xor
rol
lea
xor
pop
xchg
dec
mov
sbb
mov
hlt
sub
or
xor
leave
sub
dec
and
inc
mov
sub
dec
pop
call
and
movsb
add
sub
jne
inc
iret
and
int
int
dec
or
adc
push
xor
cli
dec
icebp
fists
xchg
inc
insl
das
aam
iret
test
and
dec
sub
aad
pop
out
dec
cltd
sbbb
inc
adc
repz
inc
cmpsl
mov
xor
aad
add
fnstenv
ror
in
in
clc
ret
sbb
pop
xor
test
inc
jle
xchg
sub
jnp
inc
xchg
sbb
lret
ret
or
and
pop
leave
jmp
sub
sbb
cli
das
cmc
lock
or
das
xlat
std
ja
mov
jnp
shlb
aam
insl
pop
aas
inc
push
add
adc
cmp
rcrb
ret
inc
int
lods
sub
inc
or
loope
mov
inc
dec
cwtl
lods
enter
dec
cmovp
lret
stc
jae
fstpt
sub
inc
mov
jp
mov
lret
enter
leave
mov
fldt
outsl
test
cmp
cmp
inc
push
cs
mov
jo
outsb
adc
jmp
sbb
sbbb
dec
mov
imul
lods
adc
or
pop
sub
cmp
dec
push
jle
mov
pop
fisubrs
xchg
incb
imul
inc
push
inc
cmp
inc
inc
add
sbb
mov
pop
leave
in
rorl
xchg
lret
inc
outsb
roll
sbb
mov
xchg
sub
cmp
mov
repnz
ret
mov
adcb
mov
add
rcll
dec
inc
repz
cmp
add
cmp
scas
enter
lahf
mov
lds
or
decb
insl
out
lret
aam
mov
xor
jae
push
mov
test
jg
jmp
cmp
xor
mov
sahf
shrb
stc
dec
or
sbb
add
ss
and
fisttpll
mov
push
xlat
push
loopne
mov
fucomip
dec
pop
sbb
mov
sbb
push
fisttps
dec
lods
sbb
gs
inc
push
jb
dec
jne
pop
push
pop
mov
dec
rep
clc
mov
int3
dec
add
cmp
dec
iret
scas
cmp
push
inc
mov
add
and
pop
push
sub
loopne
leave
dec
xchg
cmp
xchg
lods
in
push
into
jle
cmp
sbb
ret
inc
mov
cmp
sahf
or
rolb
adc
mov
fs
push
pop
pop
mov
rorl
enter
push
inc
mov
dec
cmp
pop
add
jg
inc
sbb
scas
cmp
test
cmp
pop
mov
lret
scas
inc
mov
jecxz
test
dec
fsubrl
insl
adc
push
dec
stos
movsb
cmp
jge
xlat
fiaddl
loope
or
mov
xchg
pop
fldenv
fld
mov
and
fdiv
sbb
rcl
lret
fiadds
xor
popf
cmp
leave
lds
sbb
sbb
lods
adc
andl
mov
shl
je
into
xlat
incl
popf
and
adc
dec
or
push
push
inc
sbb
xlat
dec
mov
push
rcll
sub
xor
aaa
int3
dec
out
fs
dec
in
sub
push
imul
outsl
arpl
mov
fstps
mov
clc
dec
and
push
test
or
xor
dec
fwait
push
nop
sub
jmp
mov
push
repnz
push
push
push
or
mov
add
mov
sbb
ds
leave
xchg
popa
data16
stos
pushf
les
mov
insb
push
dec
outsb
call
or
mov
shr
pop
sbb
push
dec
dec
ja
es
cmpsl
loop
cmp
cmp
rcrl
mov
test
fists
push
imul
dec
int3
sbb
aaa
jno
repnz
jmp
fists
dec
outsl
lds
jmp
clc
push
dec
dec
jae
sahf
jmp
cld
fcoml
rcll
movsl
gs
imulb
push
push
sub
inc
and
push
jo
xor
inc
out
pop
shll
or
pop
stos
enter
adc
pop
cs
mov
fisubrl
xchg
enter
mov
xchg
dec
add
outsb
adc
cmp
cwtl
xor
int3
pop
jb
sub
enter
push
imul
das
xlat
daa
ror
test
cmp
mov
jecxz
ret
jno
xor
out
jae
rorl
add
loope
fwait
ret
sub
cmc
fildll
rorb
mov
hlt
addr16
sub
lcall
push
lods
push
xor
mov
mov
push
loopne
sub
pop
push
inc
stos
lahf
roll
call
aam
aas
loop
inc
pop
lods
push
lds
sbb
push
into
push
xlat
mov
fisubrs
dec
xor
jo
sahf
inc
push
inc
and
xor
inc
add
xor
inc
inc
inc
inc
lods
adc
mov
out
pop
test
lret
clc
inc
sub
add
mov
xchg
dec
jle
push
or
sbb
dec
sbb
or
pop
fimull
dec
pop
shrl
out
jge
mov
or
or
pushf
dec
clc
push
pop
aad
jp
pop
loopne
pop
rclb
inc
jmp
jae
or
push
dec
ret
imul
aaa
pop
sub
dec
jns
cmp
push
or
sub
das
mov
jne
xor
leave
xchg
adc
inc
addr16
fsubrl
repnz
xchg
inc
scas
sub
push
pop
push
pop
sbb
xlat
lds
test
rorl
and
gs
or
fimull
test
add
dec
mov
lods
push
add
pop
pop
push
cmovge
movsl
adc
iret
sti
mov
push
in
aas
jle
rorb
xchg
test
ds
push
xlat
cmp
xor
xor
fists
es
pop
pop
dec
shl
das
rorb
insl
pop
rcll
xor
sub
in
stc
pop
sbb
iret
mov
fs
dec
leave
pop
int
jmp
jne
lods
mov
jmp
mov
jmp
xchg
jne
push
stos
les
out
xor
add
pop
mov
inc
fcomi
pop
jmp
fdivrp
push
inc
or
js
mov
add
call
or
add
pusha
aam
pop
jns
inc
push
sub
pushf
fimull
jnp
leave
sub
stos
add
push
pop
ret
or
aas
sti
fsubrs
in
and
dec
bound
aas
ds
sub
sub
inc
insb
inc
sub
dec
leave
dec
aam
and
and
lds
dec
sub
inc
ret
inc
or
pop
xchg
dec
xlat
inc
cld
dec
sti
jno
and
and
jle
xchg
jmp
das
loop
dec
enter
fisubrl
jmp
jle
pop
and
fsubr
rorb
enter
es
jmp
add
jp
ficoms
int3
insl
arpl
jmp
or
out
lock
adc
inc
leave
xchg
inc
cmpl
adc
dec
or
das
adc
in
inc
sti
inc
xchg
inc
mov
and
iret
aas
lea
fmul
or
mov
push
loope
and
mov
adc
dec
adc
add
mov
sub
push
xchg
xor
push
enter
inc
out
inc
xchg
mov
sbb
push
cmp
pop
sub
test
call
sub
mov
add
mov
push
pop
es
xor
dec
mov
ds
add
sbb
xor
jmp
adc
xchg
dec
push
xlat
jge
add
sub
clc
dec
pop
ficoms
js
push
lock
inc
push
add
inc
jnp
dec
shrb
stc
pop
fimuls
lret
xor
jmp
cmp
dec
inc
je
inc
dec
fnstcw
loopne
sbb
xchg
sub
xlat
push
mov
add
mov
lret
sti
inc
fsubl
mov
add
inc
pop
jmp
pop
dec
pop
daa
push
jmp
cmp
rolb
adc
dec
pop
rcll
lret
stc
xor
clc
push
push
dec
cld
lods
jb
push
ret
ret
pop
sub
sbb
xor
scas
mov
pop
pop
jb
pop
xchg
pushf
or
andl
fucompp
setle
jb
push
int3
aad
add
xor
int3
cs
loop
or
dec
xchg
or
mov
inc
inc
sar
shl
and
fbstp
dec
xlat
inc
xchg
enter
jle
stos
inc
insb
xor
mov
aam
fsts
in
dec
mov
ret
or
aad
call
add
lock
incl
xchg
inc
xchg
sub
cmpsb
outsb
xor
dec
call
and
outsb
xchg
dec
or
call
or
inc
mov
lret
dec
hlt
repz
jno
sub
push
dec
sbb
inc
inc
jb
xor
leave
pop
xor
imul
and
dec
pop
pop
sbb
fnstcw
xlat
push
xchg
xchg
dec
int3
mov
cmp
leave
mov
push
jmp
cmpsb
dec
add
fld1
lods
lea
and
add
test
popf
xor
adc
fs
sub
and
and
inc
loop
in
aaa
dec
mov
fcmovnbe
inc
sbb
and
sub
mov
push
in
xlat
shll
rorb
icebp
xchg
sub
push
lret
jo
sub
out
xchg
jmp
rcll
mov
dec
mov
pop
imul
roll
add
fistl
call
jg
inc
add
dec
push
pop
in
out
and
pop
fcmovu
addr16
dec
mov
pop
mov
lock
or
pop
xchg
jmp
mov
dec
inc
les
js
dec
xchg
sbb
mov
or
int3
sub
pop
test
pop
hlt
clc
inc
cmp
lods
aam
and
mov
sarb
or
dec
int
rorb
and
pop
in
push
inc
bound
mov
mov
lds
mov
sahf
jmp
and
fdivr
sub
adc
stc
xchg
xchg
es
sahf
test
stos
lods
inc
ja
pop
fldcw
push
xlat
and
add
hlt
push
sti
shrl
outsl
dec
jg
and
adc
dec
adc
pop
or
push
stos
adc
dec
mov
fcmove
push
inc
shrl
enter
dec
cmp
mov
daa
mov
sub
pop
out
pop
imul
ret
jl
dec
pop
xor
cmp
inc
inc
lret
sbb
rorb
fsts
mov
mull
inc
mov
dec
mov
cmp
inc
inc
dec
mov
mov
in
push
mov
cmpsl
cmp
xor
jae
mov
inc
out
cmp
out
sub
and
pop
pusha
mov
sub
outsl
and
movsb
push
pop
dec
ret
les
stc
lods
dec
setae
and
push
dec
cwtl
add
or
repnz
xor
sub
mov
shr
mov
enter
shr
adc
or
xor
mov
mov
xor
cld
xor
xchg
inc
fldt
or
pushf
mov
push
jp
sbb
es
add
push
add
ficomps
dec
mov
rorl
or
mov
loopne
out
adc
push
dec
mov
xchg
into
arpl
roll
sub
dec
push
cmp
jmp
dec
lret
dec
cld
cmc
fistpll
divl
and
pop
push
dec
sub
sub
stos
push
and
adc
xlat
inc
nop
enter
notl
add
jmp
sarl
push
fistl
adc
xchg
sti
outsl
sbb
push
pop
call
inc
enter
pop
xor
dec
imul
pop
sbb
es
icebp
dec
and
or
pop
xchg
sub
inc
fldl
loop
push
testl
aad
les
arpl
stos
lods
xor
call
scas
pop
or
add
cli
test
cltd
pop
jmp
mov
pop
adc
and
push
fdivrp
or
repz
or
add
cmp
inc
xlat
pop
enter
cmp
pop
mov
movsb
mov
or
xlat
pop
xor
dec
mov
pop
sbb
out
pushf
ret
dec
imul
cltd
xor
xchg
inc
and
lret
out
leave
push
call
ret
xchg
xchg
mov
jmp
xor
jmp
cmp
pop
mov
dec
xchg
pop
jbe
and
jecxz
ret
or
dec
push
pop
mov
push
push
test
dec
mov
je
sub
lcall
push
jp
mov
mov
frstor
inc
xchg
loopne
jnp
aad
shrl
sbb
adc
test
mov
xlat
sbb
int3
push
sti
xor
sbb
cmp
pop
movw
cmpsb
loope
leave
int3
stos
sbb
cmp
daa
xor
mov
pusha
popa
pop
inc
mov
xor
inc
pusha
and
mov
sbb
call
mov
inc
cmp
and
inc
mov
pop
ret
lods
sahf
in
push
lds
inc
mov
jno
jbe
mov
mov
and
dec
das
add
inc
sbb
jae
mov
dec
adc
pop
fiadds
test
adcb
pop
stc
fwait
sbb
inc
out
fsts
enter
inc
or
dec
cmpb
dec
mov
mov
das
jmp
or
repz
data16
or
mov
imul
jno
xchg
repnz
lds
mov
xor
adc
cmp
cltd
leave
or
mov
int3
lods
push
jmp
flds
test
data16
xor
dec
enter
cmp
mov
pop
sub
daa
mov
and
pop
add
cmp
call
xchg
cmc
rcrb
ja
jae
mov
leave
ftst
inc
adcb
push
push
stc
or
loop
xor
push
or
pop
ffreep
lcall
mov
dec
push
dec
adcb
push
xor
dec
mov
fchs
rolb
sub
xor
xor
xor
insb
cmp
pop
das
jb
mov
pop
lods
jns
mov
cmp
loope
sub
mov
das
add
adc
out
lock
dec
push
aaa
xchg
adc
in
popf
pop
mov
imul
mov
fdivl
pop
jae
dec
add
or
sub
mov
inc
inc
mov
pop
shl
adc
xor
dec
or
lret
pop
lret
mov
sub
sbb
jae
dec
pop
pop
fimull
shrb
fisubl
and
add
cld
and
aaa
lcall
adcb
lea
xor
dec
xor
push
shrl
dec
stos
and
xchg
push
adc
aad
push
xlat
push
insl
into
pop
iret
cmc
mov
in
push
add
leave
and
pop
fisubrl
or
daa
dec
mov
pop
ror
push
fndisi(8087
and
rorl
aam
imul
pop
mov
mov
leave
imul
adc
xorb
mov
roll
and
xor
aaa
arpl
movsl
mov
pop
ficompl
ror
pop
adc
leave
inc
mov
ja
mov
shl
or
cmp
cmc
inc
cmp
or
aam
sarl
sub
dec
in
outsb
rcr
test
es
jb
das
or
imul
cltd
sub
idivl
mov
bound
cs
imul
dec
jno
or
add
push
adcl
loope
test
pop
xchg
pop
sub
add
ret
leave
popf
xchg
adc
aam
cmp
mov
leave
pop
lods
and
xor
xlat
mov
rcll
dec
ss
xchg
dec
insl
cmp
enter
add
rorb
stc
push
enter
loope
xchg
xor
mov
jmp
das
shl
dec
sub
inc
inc
in
xor
repz
imul
aam
pusha
call
xor
mov
rorl
inc
xlat
aas
add
cmpsl
mov
or
and
cmp
push
dec
fxch
sbb
mov
pop
cld
xor
and
dec
leave
enter
dec
imul
cltd
and
push
sub
out
out
sahf
imul
dec
jge
push
divl
pop
into
icebp
dec
pop
out
mov
rcr
dec
jmp
repnz
leave
ret
jnp
jno
lock
xlat
outsl
lods
xchg
push
inc
dec
add
and
adc
sub
push
xchg
mov
dec
jl
fists
nop
mov
cmp
dec
insl
scas
push
sbb
cld
pop
dec
enter
pop
cmp
out
dec
or
sub
cli
adc
cmpsl
push
stos
mov
pop
nop
or
and
mov
add
or
or
aad
into
lret
fimull
aam
test
dec
in
mov
mov
jmp
pop
push
icebp
rcll
xor
sahf
les
push
cmp
lret
inc
divl
daa
pop
sub
dec
push
cmpsb
into
sub
lods
inc
dec
sbb
xchg
shrl
jo
add
fcmovnb
pop
push
rorl
pop
je
lds
push
fisubl
inc
mov
cmp
mov
push
xchg
nop
cmp
xor
add
push
leave
jl
sbb
sbb
push
pop
xchg
out
lods
sahf
xchg
push
dec
dec
ret
xchg
inc
mov
pop
xor
or
cli
repz
dec
pop
test
jae
popf
cmpsl
testl
xor
push
enter
pop
inc
mov
inc
pop
pop
pushf
dec
and
push
clc
das
push
sub
rcr
sarl
fcoml
sub
imul
lods
push
int3
adc
jmp
scas
xlat
aaa
dec
xchg
ss
add
mov
das
mov
pop
pop
adc
add
dec
out
insl
pop
pop
fidivrl
test
pop
cmp
rcr
enter
fimull
inc
and
aam
sub
sarl
dec
fcmovu
push
fsts
xor
xlat
das
jmp
lds
jmp
xchg
insl
or
call
ljmp
dec
pop
or
dec
cli
mov
fucomip
das
daa
lret
and
mov
out
dec
fimull
dec
dec
sti
sub
xchg
mov
dec
rcrb
outsl
movsl
adc
sub
adc
push
pop
pop
or
and
leave
xor
out
icebp
pusha
cmp
cmovo
cltd
dec
jne
jo
jae
and
xor
inc
out
or
aad
aad
mov
out
int3
ret
pop
mov
pop
mov
pusha
lods
xor
sbb
inc
cmp
loope
into
fisttps
sub
in
fnstcw
inc
lods
outsl
cmp
pop
and
cmpsl
cmp
repz
ficomps
inc
arpl
sub
xor
pusha
xor
mov
xchg
sbbb
and
sahf
int3
ja
ficompl
loop
int3
push
cwtl
aaa
ret
xor
push
rcrl
test
je
fisttpl
in
cmp
icebp
rcrl
sub
mov
push
push
insl
out
dec
hlt
cmpsl
into
test
pop
adc
or
aas
xor
lret
imul
add
mov
fsts
adc
jo
push
jmp
leave
pop
int3
jo
out
cmp
out
pop
into
xor
push
inc
jmp
sbb
lods
pop
lret
add
inc
test
sar
leave
lret
add
mov
bswap
jbe
pop
inc
mov
in
xor
inc
dec
xchg
cmp
cli
jecxz
push
adc
and
adc
mov
sbb
mov
inc
mov
sub
pop
sub
test
and
fldt
out
xor
inc
inc
mov
dec
add
or
xlat
inc
clc
xor
add
cmpsl
call
cmp
adc
stos
pop
inc
mov
jnp
pop
xlat
int3
push
sub
and
rorl
ss
cmp
loopne
mov
pop
ficompl
inc
cs
mov
dec
cmp
or
dec
pushf
and
push
call
jle
aad
adc
mov
aad
xchg
inc
dec
or
pop
sub
mov
pop
pop
sbb
mov
mov
ret
and
xchg
jb
and
pop
push
daa
fisubl
or
mov
xor
sub
inc
fcomps
push
sbb
or
jno
cmp
inc
daa
mov
mov
shrl
int
inc
imul
push
int3
push
enter
adc
cmp
mov
cmpsb
pop
pop
push
in
cmp
sub
mov
mov
inc
mov
inc
mov
push
roll
ja
sub
enter
push
stos
shll
es
inc
adc
insl
int3
pop
mov
xlat
push
xor
rcr
sub
fnstsw
pop
sub
sahf
sti
pop
rcll
cmp
cmpsb
inc
out
ret
negl
and
fmuls
or
xor
mov
mov
or
adc
inc
les
and
pop
mov
pop
pop
gs
xchg
jmp
test
sub
xchg
xor
sub
adc
call
int3
test
lahf
fmuls
sahf
mov
jle
xor
mov
xchg
sub
or
dec
mov
push
xchg
pop
lds
adc
sub
jg
dec
sbb
mov
movsb
jle
fistpll
mov
inc
ret
sbb
sub
push
mov
jle
inc
pop
mov
mov
popa
fisttpl
pop
mov
jmp
dec
xor
lock
add
dec
mov
loop
test
push
unpckhps
call
push
pusha
pop
iret
push
or
psubusw
sbb
sar
sbb
call
or
int
sub
int
lret
fldl
adc
jl
inc
xchg
mov
mov
mov
sbb
cmp
ret
loopne
das
in
dec
mov
in
adc
pop
fstpt
stos
and
clc
cmp
add
or
sub
out
inc
inc
dec
xorb
push
fisttps
mov
clc
or
xchg
scas
and
out
inc
rorb
xchg
repnz
sti
pop
pop
xchg
pop
inc
leave
pushf
mov
mov
push
pop
sub
push
dec
add
pop
inc
mov
sub
xchg
adc
test
call
fcomip
insb
and
jae
and
dec
cmp
mov
lcall
stc
push
mov
sub
xlat
rorb
test
movsl
lds
dec
mov
jns
cmp
push
movsb
xchg
push
sub
xor
loop
pop
lds
int3
fldl
ret
imul
sbb
dec
cmp
xchg
sub
push
sub
adc
fimull
cmc
int
out
adc
insl
or
and
pusha
jecxz
rolb
mov
push
in
cmp
push
es
pop
dec
add
xor
or
or
push
in
xchg
shrl
push
xor
mov
mov
movsl
shrl
dec
push
sub
ss
lock
imul
lock
or
fistl
add
pop
jns
mov
cmp
add
scas
push
test
fistpll
push
jmp
and
mov
into
pop
leave
imul
mov
or
add
push
cmp
mov
rcll
and
jge
data16
sub
call
out
push
cmp
adc
inc
aad
test
jnp
shll
adc
dec
or
inc
loop
loope
pop
stos
sarb
sub
cmp
add
mov
icebp
or
popa
mov
push
cmpsl
mov
aas
or
inc
pop
sub
outsb
push
imul
sub
cmpsb
push
into
and
shl
popf
inc
xlat
or
sub
test
mov
push
inc
inc
icebp
cltd
lret
push
xlat
inc
dec
das
ficomps
xor
cmp
xchg
adc
or
inc
xor
lret
cmp
loopne
popa
rcl
stc
add
xchg
sbb
lods
inc
movsl
inc
popf
mov
jge
popa
leave
dec
or
loop
or
bnd
pop
and
inc
xchg
scas
das
icebp
xchg
das
jmp
dec
xor
inc
aam
sarb
pop
sbb
xchg
push
aad
xchg
jns
or
jno
in
das
fstps
dec
lcall
shll
adc
dec
cmp
mov
inc
and
shlb
adc
push
leave
inc
mov
ss
pop
dec
loope
aaa
aam
lods
inc
addb
sbb
int
lods
mov
mov
sub
inc
xor
orl
dec
inc
inc
push
enter
and
adc
or
repz
test
roll
fs
mov
dec
inc
xchg
fwait
push
cmp
jno
adc
adc
jg
in
dec
xor
inc
xchg
dec
xchg
sbb
xor
stos
stc
stos
sub
test
adc
cmp
push
aas
xorl
inc
or
add
enter
pop
into
adc
xor
inc
out
sbb
xor
inc
mov
xor
out
cli
dec
in
dec
dec
scas
mov
add
dec
xchg
arpl
fcomip
jmp
jp
lret
inc
adc
inc
enter
dec
sub
insb
rolb
dec
inc
int
jle
loopne
cmp
dec
adc
mov
dec
shll
or
and
dec
dec
lods
loop
dec
mov
lret
or
jg
xchg
mov
scas
push
fldcw
cmpsb
aaa
or
js
sbb
dec
or
fistpl
insb
push
int3
dec
lret
adc
xchg
mov
inc
bound
adc
test
shl
jp
or
dec
jmp
sub
hlt
jmp
call
lret
push
imul
sub
jg
cmpsb
fisubrl
dec
and
pop
push
faddl
mov
push
xor
push
jle
pop
lds
sub
sub
dec
push
lods
insl
mov
inc
std
out
insb
outsl
push
lret
leave
sub
cmp
sbb
fcomps
and
or
adc
enter
ja
jo
inc
pop
lret
and
mov
rcrb
dec
push
jo
test
sub
jns
cmpsb
inc
mov
or
es
pop
aas
int
cmp
xchg
leave
popa
mov
or
fsubrl
or
inc
aam
dec
pop
mov
lret
subb
push
jmp
xor
int3
fcmovb
rcll
icebp
dec
jb
cmp
push
roll
ja
jns
sbb
mov
push
inc
test
shrb
dec
adc
repz
cwtl
pushf
inc
lret
leave
pop
adc
push
addb
mov
lods
fbld
and
xor
ficoms
xlat
cmp
push
aad
inc
ret
sahf
xor
movsl
ss
daa
ds
jmp
mov
pop
inc
fisubrs
jb
or
and
cmp
push
inc
lods
mov
jno
cmp
adc
dec
dec
and
cmpsl
xchg
dec
lea
pop
pop
icebp
aaa
iret
or
jnp
aaa
pop
push
mov
fsubrs
dec
aas
push
repnz
rorb
pcmpeqb
pop
aaa
aaa
call
dec
sbb
aad
and
rol
cltd
jp
fidivs
mov
add
filds
push
cmp
mov
dec
aaa
dec
fst
jb
data16
pop
adc
dec
cmp
mov
pop
dec
add
and
or
cmpsb
fsts
mov
pop
in
sbb
cmp
jno
inc
enter
movsl
pop
enter
push
dec
pop
cmpsl
dec
jne
aaa
mov
dec
jo
dec
pop
jae
mov
adcb
into
pop
xchg
loopne
pop
inc
shll
jmp
push
movsl
clc
push
insb
mov
sub
inc
push
pop
push
mov
dec
gs
jmp
inc
xor
dec
inc
pop
into
xchg
ret
sti
pop
inc
push
stos
xchg
je
dec
fidivrl
mov
xor
pop
sub
pop
mov
dec
nop
clc
lods
call
sub
and
jb
fs
inc
fcoml
popa
int3
inc
lods
lds
insl
mov
sub
mov
mov
push
mov
out
cmpsl
xor
ja
adc
cmp
mov
mov
pop
dec
and
mov
jnp
imul
push
dec
test
rcrb
inc
inc
xchg
test
jmp
lret
mov
int
test
sbb
push
or
call
inc
push
mov
das
cld
xor
jle
jnp
loopne
pop
or
enter
insl
jb
dec
or
add
mov
iret
aas
clc
das
dec
push
add
sbb
fbstp
lret
je
iret
or
aam
dec
jnp
enter
sub
or
jp
xchg
pop
lods
addr16
les
push
rcll
push
fnstenv
add
mov
fimuls
xor
jne
push
pop
mov
aas
push
sub
and
xor
pop
sub
jne
fldcw
push
lods
mov
imul
pop
push
clc
push
rorl
enter
inc
or
outsl
mov
mov
or
inc
adc
xchg
and
sub
cmpsl
push
or
cs
and
mov
int3
rcrl
jno
sub
xor
jle
dec
adc
inc
sbb
inc
and
repz
dec
inc
imul
aam
in
pop
lret
mov
aas
or
frstor
inc
jmp
or
mov
pop
sub
cs
ja
fnstcw
inc
iret
rolb
into
insl
pop
loop
cmp
push
mov
and
jns
cltd
sub
in
dec
rorb
dec
pop
jno
dec
fcmovu
add
push
sub
inc
cmpl
cwtl
cmpsb
ficoms
lods
jno
inc
cmp
sub
sub
xchg
or
cmp
sbb
mov
mov
sbb
jb
dec
adc
call
dec
rcll
repz
mov
or
cli
mov
inc
mov
inc
nop
and
inc
inc
sub
dec
sub
dec
andl
das
mov
js
fcmovbe
enter
xlat
outsb
mov
pusha
clc
push
lret
popf
lahf
dec
leave
sub
ret
out
or
aas
adc
mov
shll
or
mov
push
add
imul
and
dec
cmp
int
adc
jecxz
cli
pop
inc
or
inc
jecxz
push
enter
push
bound
adc
inc
push
push
popf
stos
shlb
dec
fimuls
push
shlb
mov
dec
mov
mov
dec
fcmovne
fidivrl
pop
shrl
jbe
lret
in
fisttps
mov
nop
stos
sub
std
sub
xlat
imul
inc
ret
and
inc
mov
lods
lahf
lret
inc
push
push
sbb
inc
stos
add
pop
and
push
mov
push
push
rolb
repz
push
cmp
inc
aad
mov
pop
sti
pop
add
xor
lock
pop
filds
mov
pop
or
leave
dec
adc
pop
xchg
mov
inc
shrl
test
pop
sbb
cmpsb
sub
adc
dec
add
push
dec
sub
sar
xlat
xor
dec
pop
cmp
loopne
cmp
enter
orl
mov
dec
xor
add
sub
out
sub
dec
repnz
mov
jecxz
mov
pop
adc
repz
fisttps
scas
and
jo
push
mov
cmp
and
das
rolb
pop
insl
mov
inc
cmp
and
mov
dec
hlt
sbb
or
adc
mov
cmpsb
clc
inc
sub
les
dec
enter
dec
push
xor
cmp
sti
jnp
inc
push
dec
inc
xchg
sub
out
icebp
lcall
repz
mov
dec
push
push
add
or
dec
gs
push
scas
rorl
shll
insb
or
or
dec
inc
movsb
and
inc
stc
push
fnstcw
pop
fistl
push
inc
or
out
aas
shll
jae
aad
test
dec
das
xchg
or
ret
pop
dec
mov
cmp
ss
push
or
inc
adc
push
rcll
mov
mov
dec
or
es
cmp
jmp
xchg
loop
and
sub
pop
imul
inc
push
or
pop
icebp
dec
jmp
mov
push
inc
add
enter
xor
xchg
ss
sub
mov
push
sub
xor
and
and
push
out
rcll
dec
cld
dec
pop
scas
rcr
outsb
mov
mov
or
fwait
in
into
imul
adc
repz
inc
leave
inc
addr16
jne
mov
ss
call
andl
rorb
clc
jns
cmp
ss
inc
mov
jns,pt
lcall
xchg
mov
and
rorb
adc
sub
andl
lret
dec
iret
or
or
inc
sub
rcr
insb
sahf
push
dec
repz
push
je
sub
scas
frstor
inc
mov
rolb
cmpsl
adc
cs
dec
xor
out
cmc
repnz
push
fcomp
lds
out
dec
xlat
pop
pop
into
xchg
lods
add
loop
push
nop
cmp
test
adc
xchg
xor
cmp
mov
mov
ja
inc
clc
sub
mov
mov
mov
fisubrl
and
cld
adc
push
and
sub
lcall
enter
popa
fidivrl
iret
imul
aam
jmp
call
xchg
mov
pop
dec
xchg
mov
out
jle
insb
add
push
nop
or
pop
pop
jb
or
xchg
pop
mov
and
xor
jl
push
dec
xchg
das
aaa
mov
fidivs
sub
inc
pop
or
pop
inc
mov
add
cmp
ret
fmull
pusha
orb
adc
popf
ret
pop
push
test
pusha
push
pop
sub
imul
test
jae
pop
add
or
sub
jno
mulb
arpl
pop
mov
cld
xor
inc
sbb
sub
and
in
xchg
es
in
shr
sub
ret
fwait
xor
jecxz
into
test
hlt
leave
dec
and
pusha
xor
or
aad
mov
mov
xorb
fs
and
in
sub
or
sub
mov
ret
pushl
mov
or
sub
lcall
imul
clc
push
insl
rcrb
pop
dec
and
push
jno
push
pushf
call
cmp
das
xchg
aad
movsb
dec
push
dec
jnp
das
push
mov
daa
mov
adc
inc
aas
mov
sub
dec
fisttpll
call
iret
or
jmp
fmul
stos
inc
push
and
and
or
mov
push
popa
mov
inc
add
outsb
mov
and
ror
or
jb
lcall
inc
and
inc
cmpsl
push
loopne
dec
les
push
jle
jae
pushl
leave
xchg
dec
and
inc
xlat
push
sub
dec
rclb
movsl
cmp
xor
enter
into
mov
test
mov
lret
inc
sub
pop
mulb
fbld
xlat
and
imul
fidivrs
ja
dec
in
jl
lock
dec
push
adc
sub
mov
or
mov
xchg
mov
add
pusha
fldenv
xchg
ret
dec
out
and
and
sub
cmp
or
dec
xor
xlat
das
in
push
push
sahf
sti
push
dec
lret
or
test
aaa
sbb
push
mov
sub
inc
sub
jge
roll
shl
lret
test
dec
sub
notl
flds
pop
push
and
push
inc
dec
push
sub
mov
mov
adc
and
std
iret
cltd
mov
and
xor
or
out
sbb
test
jg
fisttps
fisttpll
repz
push
mov
xor
push
mov
repnz
dec
dec
sub
cmp
test
mov
int3
pop
pop
adc
stc
clc
lods
xsha256
cmpsb
push
or
int
mov
mov
or
adc
mov
jne
cmp
lods
inc
sub
je
ret
mov
fistps
call
or
lret
insl
xor
adc
pop
aad
faddp
pop
pop
gs
sub
push
vandnpd
and
movsl
dec
clc
or
jns
xlat
dec
inc
sub
inc
jmp
lret
faddl
xchg
sahf
sub
mov
sub
cli
or
rcr
js
rcl
lock
jae
lods
cmp
adc
xor
push
dec
jb
dec
mov
bound
rcrb
ljmp
xchg
pop
add
daa
fsubs
push
and
sub
adc
jmp
push
jne
mov
sbbb
jmp
pop
or
sbb
mov
push
xchg
xor
leave
push
or
and
int3
lret
mov
lea
les
loope
sahf
mov
je
add
roll
sbb
pop
shrb
mov
sub
stos
adc
mov
ret
dec
mov
aam
call
xchg
cmp
loop
adc
pop
pop
push
xchg
addr16
idivl
xor
les
dec
rcrb
into
xchg
push
int
call
add
dec
add
and
mov
test
aaa
repz
add
pop
leave
xor
sti
rol
lret
call
lea
roll
cmpsl
cmc
lret
xchg
sbb
js
fstl
adc
xor
in
mov
int3
dec
stos
inc
cmp
pop
nop
and
sub
mov
dec
mov
dec
sysexit
push
inc
imul
dec
push
fadd
leave
adc
mov
xor
lret
fwait
enter
ret
dec
mov
cltd
inc
push
leave
mov
dec
push
add
and
add
xlat
dec
imul
jo
jb
lret
or
xchg
aam
mov
ret
xor
xchg
jmp
pop
in
shrb
jb,pn
lret
inc
decb
nop
sahf
andb
push
test
repz
pop
jmp
in
xchg
xchg
push
mov
fsts
cmpsb
enter
hlt
inc
xchg
mov
inc
shrl
sub
sbb
inc
sub
sub
push
push
inc
inc
xor
jnp
push
pop
add
and
popf
or
pop
push
push
or
ret
nopl
or
daa
movsb
dec
out
mov
mov
push
leave
jecxz
loope
out
leave
aad
cwtl
pop
lods
mov
fcoms
daa
andb
shll
mov
mov
cmp
repnz
mov
xor
push
or
lret
arpl
sub
call
lret
inc
int3
movsl
xlat
icebp
ss
leave
push
in
dec
add
dec
insl
xor
in
or
pop
adc
push
dec
dec
push
sbb
xchg
dec
mov
dec
sub
mov
call
cs
inc
adc
dec
mov
inc
cmp
inc
lock
mov
or
mov
lret
or
aad
dec
addb
fidivrl
xchg
fmul
call
int
push
mov
adc
sarb
mov
inc
adc
mov
pop
sub
mov
push
dec
jo
fcmovnu
jmp
sbbb
or
mov
push
inc
mov
dec
cmp
or
sub
clc
pop
lret
sti
push
les
sbb
roll
pop
mov
addr16
pop
pop
test
push
fxch
cltd
ret
and
repz
incl
or
pop
rol
or
xchg
push
fwait
out
jnp
pop
stc
fs
enter
mov
xor
jae
pusha
dec
out
fimull
insb
push
push
movsl
adc
ds
shl
mov
int3
xchg
sahf
fadd
lret
jmp
cmp
dec
dec
sbb
mov
inc
cmp
mov
push
mov
push
mov
xlat
inc
imul
inc
testb
clc
inc
data16
outsb
out
mov
fisubrs
sub
jae
mov
push
es
dec
or
and
scas
sub
pop
das
mov
xchg
int
leave
lret
pusha
xor
or
xor
mov
pop
push
in
mov
fs
das
xor
into
dec
adc
int
jle
dec
dec
jmp
add
movsb
inc
dec
and
lods
insl
mov
adc
add
and
push
and
test
mov
fstps
pop
push
fstpt
dec
dec
cltd
sbb
sbb
mov
jp
lret
mov
dec
dec
inc
aam
dec
int3
push
mov
das
lret
mov
stc
into
cmp
ret
or
in
daa
xchg
dec
pop
or
cs
pop
sahf
inc
lods
sub
dec
daa
scas
and
fbstp
hlt
pop
aam
enter
sarb
popa
loop
pop
pop
insb
es
push
mov
rorl
sub
adc
sub
pop
xor
lret
xchg
push
fmul
sub
clc
adc
call
aas
stos
add
lahf
sbb
cli
pop
push
jne
repnz
add
insl
orb
add
fcompl
call
fisubrs
pop
mov
and
dec
dec
lds
popf
sbb
push
lcall
push
pop
push
je
pop
popf
cmp
in
push
jle
fldpi
sti
push
cwtl
ror
push
sahf
int3
pop
addr16
push
jb
je
in
dec
andl
xchg
aad
mov
std
push
and
lods
rcll
out
clc
lret
scas
mov
push
fcoml
pop
fcoms
movsl
push
rorb
cli
iret
es
enter
jmp
push
pop
fistps
xor
inc
sbbb
je
push
ror
jg
sahf
int
push
imul
enter
push
inc
gs
push
dec
add
int
jno
inc
sub
mov
sub
and
mov
mov
ss
push
insb
test
push
popa
mov
faddl
dec
jp
inc
fistps
or
lods
pop
push
popf
dec
loop
leave
ret
arpl
dec
lock
mov
mov
inc
lret
mov
loop
push
and
push
not
or
jmp
fimuls
insb
inc
push
leave
int3
es
popa
xchg
dec
int
push
sar
shrl
inc
imul
icebp
enter
sti
dec
sbb
cmp
jmp
imull
push
inc
xchg
mov
mov
cmp
jae
cltd
dec
jne
or
lds
shlb
cmp
fld1
dec
leave
xchg
jns
pop
stc
jl
or
lret
std
dec
push
inc
push
xor
adc
sub
ret
or
xor
jge
out
lret
mov
dec
adc
loopne
fmul
aas
es
into
outsl
repz
inc
sti
push
inc
adc
dec
inc
cwtl
push
sub
jmp
pop
imul
sbb
sub
xor
fstpl
add
dec
dec
leave
cwtl
or
sub
sub
sub
shll
and
or
ja
addr16
or
mov
adc
popa
push
call
lret
sub
inc
inc
call
shll
shl
lods
push
sahf
mov
dec
imul
pop
xor
popa
inc
pop
mov
dec
shrb
inc
dec
xorl
mov
push
inc
fsts
xchg
push
push
or
int
enter
jb
cltd
into
xor
or
adc
es
rclb
out
mov
dec
loope
es
dec
aas
adc
mov
inc
dec
enter
inc
jnp
rorl
jecxz
sub
jmp
fildl
movsl
add
adc
leave
imulb
push
mov
mov
or
imul
fisubrs
xchg
mov
xor
push
inc
lret
push
xor
xor
or
jb
xchg
lret
push
dec
inc
pop
mov
sub
mov
or
inc
fsts
cmc
dec
xor
fxch
ret
movsl
pop
sbb
enter
push
inc
imul
stc
inc
mov
call
mov
fstpl
lds
sub
rcl
push
inc
or
rorl
sbb
xchg
cmp
test
fstpl
jns
aas
or
dec
scas
ficoms
sub
dec
push
lcall
pop
cwtl
fmulp
sbb
dec
leave
dec
and
rol
push
sbb
rcrl
jmp
sub
sub
mov
bound
leave
push
inc
jo
cmp
imul
push
pop
enter
push
enter
sub
inc
sahf
sub
in
and
leave
sub
movsb
xor
mov
sbb
fmull
dec
sub
mov
or
call
sub
mov
test
and
sbb
or
mov
pop
inc
inc
sbb
sbb
inc
shrb
iret
mov
sti
aaa
icebp
fldt
jecxz
pop
insb
dec
cmp
iret
lds
in
xchg
push
out
sbb
inc
adc
push
or
add
sbb
lods
sar
cmp
inc
dec
jmp
sub
in
cmp
mov
int3
bound
dec
inc
pop
inc
xor
cmp
imul
lret
xchg
lret
aad
xor
mov
rol
mov
xor
pop
adc
inc
mov
inc
mov
xchg
dec
flds
cmp
push
xchg
cmp
clc
push
pushf
clc
fwait
dec
dec
test
aaa
ljmp
rcrb
mov
mov
inc
aaa
xchg
mov
je
sub
sbb
clc
inc
lret
sub
aad
leave
lret
pop
dec
imul
sub
rolb
es
or
test
outsb
rcrl
xchg
daa
push
in
je
and
xor
mov
rclb
aad
xor
movsl
scas
fst
adc
mov
je
sbb
add
imul
mov
and
xor
adc
popa
push
dec
out
mov
cmpsl
mov
lret
mov
and
push
sbb
std
rolb
leave
and
jmp
add
xlat
shr
out
es
rcrb
dec
cmp
das
jae
dec
jecxz
outsb
dec
dec
dec
mov
pop
sub
push
or
repz
add
das
xchg
in
push
fisttpl
pop
ret
or
shlb
aas
jmp
add
mov
sub
rorl
dec
dec
idivl
dec
roll
imul
push
rcll
lahf
or
fldenv
aaa
dec
call
jmp
jmp
adc
stos
inc
cld
iret
dec
enter
inc
or
pop
pop
or
jl
into
or
mov
enter
xor
jmp
xlat
inc
icebp
iret
aas
cltd
sub
inc
inc
sub
fisubrl
dec
in
fistl
push
arpl
andl
push
and
dec
inc
pop
ret
push
xchg
sbb
ret
push
leave
dec
in
jno
movsl
ret
inc
loop
orb
sbb
mov
push
inc
xor
sub
mov
iret
xor
push
and
xchg
mov
jmp
sbb
inc
insl
push
mov
dec
aaa
inc
add
imul
mov
jl
ret
shlb
xchg
mov
insl
jmp
out
mov
or
cmp
test
jae
test
or
adc
ret
dec
cwtl
cmpsl
sub
pop
cs
xchg
lret
fcomps
push
mov
out
pop
sub
insl
rcl
lret
fmuls
call
jg
push
shlb
push
lds
mov
pop
leave
insb
popf
pop
pop
dec
dec
les
xchg
and
pop
popf
fbld
inc
inc
add
dec
add
fstl
cmp
gs
inc
jno
loop
repz
sbb
and
loope
cmp
mov
inc
mov
sbb
aaa
rolb
push
sbb
jp
pop
mov
fcomip
dec
pop
or
lods
call
mov
loopne
int3
flds
loopne
inc
mov
out
ret
and
xchg
jns
sti
jg
aad
dec
ja
cmp
fsubrp
pop
into
sub
lods
lock
test
and
lds
adc
and
jb
push
mov
mov
pop
cmpsl
shrl
pop
adc
lret
lds
inc
fstps
pop
inc
loopne
inc
int
mov
push
pop
cmp
clc
int3
mov
jg
rolb
and
xchg
idivl
cmp
dec
lods
pop
inc
cld
xor
mov
jae
inc
dec
cmp
xchg
fisubs
out
xchg
int3
push
jmp
push
push
mov
cmp
ret
or
ss
fcoml
xchg
and
adc
xchg
cmp
pop
lods
outsl
in
mov
dec
dec
pop
fsubl
dec
pop
dec
and
sbb
dec
in
push
cmp
jmp
dec
add
lds
lods
int
ret
stos
and
movl
enter
sub
add
mov
pop
aam
mov
pop
dec
jo
stc
mov
and
shrl
call
fistpll
fidivl
cmpsb
int
pop
rorl
mov
sub
fcom
xchg
test
cld
pop
push
dec
les
pop
ss
dec
jg
dec
push
sbb
cmpsb
mov
sbb
xor
std
pop
dec
scas
push
or
and
lds
xchg
shrb
test
mov
push
mov
inc
bound
setno
mov
xor
cmp
dec
push
xorb
data16
fbld
int
or
inc
lods
add
jae
lret
les
aaa
xor
push
imul
das
sarl
dec
dec
push
pop
insl
clc
mov
bound
xchg
xor
clc
mov
inc
cmpsl
xor
inc
mov
xchg
test
pop
jb
ret
rcrb
jl
rcl
inc
adc
adc
int3
inc
jnp
mov
pop
pop
pop
or
mov
cwtl
push
and
inc
aaa
sub
xchg
shlb
sbb
push
push
push
pop
loopne
mov
sub
sbb
sub
mov
iret
aad
rol
xchg
mov
insb
adc
int3
sub
aam
pop
cmp
push
jns
out
inc
inc
inc
jnp
test
cmp
dec
shrl
icebp
lods
xchg
sub
push
push
jno
cmp
aam
leave
dec
mov
add
popa
or
pop
jmp
xor
enter
push
push
sbb
movsb
jae
push
pop
jg
dec
xlat
movsl
inc
push
push
jecxz
aaa
xchg
pop
les
mov
inc
fdecstp
test
jb
lret
inc
lods
enter
inc
dec
inc
inc
aad
cld
dec
nop
bound
push
fimuls
iret
cmp
pop
dec
push
xchg
cmp
sbb
das
xor
push
dec
fstp
lea
pop
faddl
mov
jg
and
pop
xor
push
cltd
divb
fisttps
test
sbb
cmovne
rcrl
daa
dec
aad
inc
push
inc
js
xchg
xchg
mov
insl
fistps
mov
je
inc
sbb
ss
adc
mov
dec
jb
dec
cmp
lret
lret
inc
movb
push
test
pop
lret
push
dec
mov
cmpsl
cmp
call
push
fld
ror
pop
imul
push
sub
push
and
aam
pop
sub
pop
fst
enter
sub
mov
movsl
sub
pop
mov
xchg
mov
rorb
call
mov
outsb
add
stos
inc
aad
ror
jno
pop
pop
ret
push
mov
dec
ds
jg
inc
push
popa
aaa
insb
rcr
inc
lea
sub
leave
or
xlat
mov
inc
cmp
xlat
push
imul
adc
mov
jmp
imul
and
lcall
mov
pop
mov
repz
dec
jmp
jl
movsl
inc
fadds
xor
pushf
sub
mov
inc
add
jb
fisubrl
xlat
cmp
pop
mov
shl
cmp
jmp
push
insb
inc
fs
into
xchg
sub
pop
add
dec
or
and
and
push
jge
adc
and
sbb
pop
inc
xor
dec
lock
inc
sub
adc
dec
inc
xor
adc
das
pop
pop
push
fs
dec
xor
inc
sbb
pop
call
sub
xchg
mov
xor
mov
test
sub
add
inc
dec
mov
clc
jmp
clc
int3
leave
enter
inc
sahf
es
adc
push
dec
aas
loopne
cmp
rcrl
sbb
add
or
add
jns
dec
xchg
adcb
xor
cmpsb
or
or
rcl
dec
jae
dec
dec
rolb
bound
outsl
or
xchg
ds
leave
inc
push
pop
xchg
dec
imulb
fsubr
jnp
mov
lods
dec
inc
arpl
int
ret
pop
adc
enter
mov
std
cmp
ret
cld
and
notb
lods
ficoms
cmpsb
es
jae
fiaddl
pop
mov
xchg
inc
lahf
leave
xlat
jmp
loopne
mov
aaa
xlat
jmp
lds
dec
clc
mov
jno
xchg
faddl
inc
loopne
inc
pop
mov
mov
aad
nop
dec
sub
lods
cmp
lret
roll
lcall
repz
sub
clc
dec
jmp
sub
xor
imul
push
rcrl
dec
orl
loope
int3
pop
pop
and
loopne
fisttpll
test
and
lcall
cld
xor
mov
xchg
adc
push
add
mov
mov
xlat
mov
inc
cmpsb
lods
fldl
mov
aas
dec
mov
xor
cmc
dec
xor
pop
leave
and
in
mov
lods
push
push
and
fnstsw
mov
es
add
mov
rol
jmp
pushf
loopne
pop
dec
sbb
or
ret
aam
or
pop
inc
and
movsl
mov
or
push
mov
stc
xchg
mov
call
lods
pop
adc
push
pop
pop
or
mov
dec
das
mov
into
xlat
jge
pop
xchg
mov
das
aam
push
mov
clc
cmp
and
cmp
mov
inc
int3
jmp
movsl
pop
leave
mov
movsl
and
dec
mov
fcmovne
add
xor
out
rol
pusha
add
aam
cs
mov
inc
sub
xor
sar
pop
and
lock
lea
in
les
aaa
or
push
push
cs
mov
shrl
sbb
sbb
pop
or
sahf
xchg
das
mov
rcrb
mov
push
das
leave
sub
push
fnstcw
mov
jmp
icebp
neg
adc
push
ret
leave
lds
cltd
fcoml
aas
icebp
cmpsl
out
pop
pop
sbb
cmp
pop
rorb
and
and
inc
lret
sarl
roll
rcll
sbb
mov
daa
cmp
test
pop
pop
dec
icebp
inc
mov
cs
push
mov
mov
cli
shll
dec
fiadds
icebp
dec
add
or
push
mov
in
inc
dec
mov
daa
jae
lods
jg
les
dec
push
pop
mov
cmpb
les
dec
dec
mov
movsb
push
test
rcl
push
leave
fmull
cmpsb
dec
add
jae
jle
inc
pop
inc
xor
lcall
dec
movl
popf
pop
mov
and
push
cmp
push
sub
aas
cmp
fcmovnu
dec
or
aaa
xchg
push
inc
lods
cmp
pop
lock
enter
pushf
jle
dec
daa
pop
and
dec
mov
push
xor
cmpsl
mov
mov
shlb
fiaddl
dec
push
das
leave
shll
lahf
mov
pop
push
sbb
lock
jge
pop
push
das
addr16
jae
push
mov
es
int3
inc
add
inc
mov
das
fs
pop
fneni(8087
fcompl
test
sub
sub
mov
inc
lret
jge
pop
inc
or
pop
adc
xchg
pop
int
stos
add
pop
lret
ss
ret
mov
mov
cmp
ret
call
dec
movsl
jmp
sbb
bound
xchg
dec
das
cmp
sahf
dec
sti
ljmp
sbb
test
push
imul
je
out
testl
adc
inc
push
call
inc
leave
test
mov
int3
mov
mov
icebp
fstpt
aad
clc
outsl
rorb
rcrl
ret
daa
inc
das
pop
into
push
aas
jecxz
out
test
testl
jb
fucom
mov
dec
ss
inc
push
pop
or
call
mov
fistl
push
pop
mov
int3
inc
cwtl
jno
push
xlat
jmp
rcrl
fiaddl
dec
cmp
adc
in
adc
inc
adc
icebp
jg
adc
pop
xchg
in
pop
push
or
inc
sbb
call
cmp
or
movsl
dec
adc
stos
xchg
aad
aam
xor
push
pop
in
and
jl
push
rcl
jmp
xor
inc
das
add
hlt
inc
aam
inc
cmp
push
sbb
pop
jmp
aaa
xor
flds
dec
shl
or
repnz
add
pop
add
push
movsl
sub
shlb
addr16
inc
jnp
pop
sbb
sub
insb
dec
fcomps
lock
mov
sub
inc
leave
out
aad
aam
cmp
dec
push
lahf
cmp
jae
xor
fcomip
insb
pop
pop
push
xlat
mov
jno
inc
sti
das
lock
mov
sbb
pop
mov
add
leave
repz
pop
jge
dec
push
mov
push
mov
cmc
push
dec
pop
inc
add
xchg
stc
jmp
or
leave
pop
test
and
mov
iret
inc
sub
push
dec
mov
in
dec
xlat
mov
and
push
fimuls
and
pop
lds
sbb
mov
adc
fstl
inc
xchg
adcl
test
notb
mov
mov
xor
xor
mov
aam
inc
rorl
int
inc
or
jp
pop
jae
insl
or
sbb
sti
lds
xor
pop
mov
jo
aaa
xor
xlat
stc
sub
int
das
inc
call
inc
dec
hlt
xor
add
or
ss
js
lods
sbb
dec
test
dec
dec
or
dec
rorl
mov
inc
inc
sbb
enter
int3
add
not
out
or
scas
imul
add
xor
sub
mov
push
mov
int3
mov
inc
inc
dec
in
das
mov
inc
sub
push
enter
pop
inc
add
and
imul
mov
pusha
icebp
dec
pushf
leave
and
jmp
jp
inc
or
icebp
add
pop
decl
inc
out
dec
cmp
mov
pop
in
mov
push
nop
insb
push
push
adc
and
data16
sub
cmp
jne
fidivrs
jns
pop
ret
mov
add
cmp
mov
sub
sti
addl
inc
mov
pop
sub
cmp
andb
insl
sbb
jns
cmpsl
push
sub
xchg
mov
cmp
xor
les
popf
mov
sub
mov
ds
and
cmpps
xor
ss
pop
or
pop
shrb
push
clc
mov
add
sub
jmp
sub
pop
pop
mov
fmuls
es
add
das
mulb
daa
xlat
mov
cs
push
dec
mov
dec
fwait
out
sub
xor
int
rorl
add
push
cmp
mov
cltd
dec
mov
cmp
sahf
inc
insl
jo
add
orb
aas
das
push
daa
stc
jo
pop
sbb
sbb
sub
ficoml
stos
xchg
inc
in
sub
loop
imulb
xorb
scas
stc
or
mov
mov
and
das
test
xchg
sub
lds
inc
enter
dec
sub
aad
out
mov
mov
js
popf
es
and
pop
dec
test
ret
pusha
push
sbb
dec
push
leave
movsb
out
pop
fldcw
jp
xchg
push
or
jmp
aad
or
xor
jns
pop
rcrb
mov
gs
std
jge
mov
push
or
daa
insb
gs
hlt
loop
fimuls
ss
xchg
pop
cwtl
lods
add
cmp
mov
inc
loop
lock
enter
ret
pop
xchg
dec
test
dec
lret
in
inc
jmp
inc
dec
std
or
or
ja
movb
in
sbb
subb
or
sub
inc
add
aam
enter
cmp
push
jae
dec
flds
pop
aad
je
jae
push
mov
int3
stos
mov
xchg
pop
mov
das
sub
cmp
sbb
or
shll
in
ret
lret
inc
loopne
int3
inc
push
jns
lds
rorb
and
shll
adc
aam
and
jnp
dec
fwait
jle
push
xor
mov
push
dec
cmp
cmpsl
mov
pop
push
mov
notl
jb
mov
outsl
fmulp
cmp
mov
inc
in
push
inc
and
jmp
inc
dec
stos
shll
push
pop
sbbb
push
or
mov
adc
fucomip
sub
push
iret
adc
mov
inc
lea
jp
add
cmp
sahf
inc
pop
jmp
call
cmpsl
stos
mov
bound
adc
pop
mov
push
in
xor
cmp
push
xor
inc
cmp
ror
ret
repnz
cmp
sub
and
push
fnstcw
and
test
mov
jle
push
push
bnd
loop
sub
js
push
pop
sub
lds
lods
dec
sbb
int3
push
mov
lret
fimuls
mov
mov
test
inc
mov
cld
pop
pop
call
add
mov
jge
inc
pop
enter
sbbb
fnstcw
in
lods
ds
dec
stc
andl
mov
enter
pop
jp
pop
xchg
outsl
lret
push
loopne
push
pop
enter
fwait
push
lea
dec
inc
mov
inc
push
xor
stos
insl
mov
rorl
popa
or
repz
pushf
pusha
inc
dec
rorb
push
pop
xor
in
fimull
and
fwait
pop
inc
xchg
jno
pop
jle
ret
sbb
and
jo
loope
rcr
xchg
bound
jns
adc
arpl
imul
dec
add
xlat
cld
sub
push
jne
pushf
enter
and
jb
jmp
add
xchg
stc
ss
imul
pop
inc
pop
aad
rol
push
jns
pop
push
or
inc
lret
dec
adc
inc
lret
add
xchg
xor
xchg
pop
adc
roll
xchg
xlat
outsb
mov
loopne
push
aam
nop
loop
mov
aam
adc
inc
pop
iret
cmp
arpl
push
ret
xor
lcall
mov
xchg
xor
xor
fxch
xor
mov
dec
sub
jmp
jecxz
dec
dec
inc
sub
jno
mov
ret
xor
xchg
mov
ficompl
dec
je
mov
cltd
int
fisubrs
push
les
imul
iret
push
xor
mov
aaa
aas
push
aaa
fwait
test
push
das
shll
iret
pop
fidivrl
lcall
dec
dec
cmp
pop
inc
leave
outsl
xchg
cmp
mov
xchg
xchg
int3
fcmovne
pusha
scas
sbb
lret
and
or
dec
cmpsb
inc
inc
or
add
imul
push
add
pop
enter
das
push
mov
xor
or
pop
xchg
frstor
sbb
dec
xchg
movsb
loopne
inc
sti
pop
inc
inc
test
test
add
addb
js
dec
mov
push
sar
jg
inc
jge
ret
stc
xor
or
pop
sub
pusha
inc
loope
cwtl
mov
xor
cmpsb
or
enter
lret
dec
imul
sti
das
push
or
xchg
or
xchg
pop
inc
pop
loop
lods
sahf
pop
sub
leave
xor
push
mov
xchg
stos
int
push
inc
clc
sar
inc
xor
push
dec
fisttpl
notl
pop
sub
ret
mov
cmp
mov
dec
addr16
sub
add
mov
inc
inc
push
xor
push
outsl
das
stc
inc
test
insl
jnp
push
call
into
lods
jge
push
push
outsl
sbb
push
out
aad
jae
inc
fs
and
das
ret
lods
out
test
mov
sub
dec
mov
rorl
jmp
loopne
push
fwait
dec
int
mov
add
decb
mov
pop
add
clc
inc
pusha
adc
int3
push
lret
lods
aaa
push
lds
cli
test
jle
inc
adc
es
filds
enter
test
nop
inc
push
and
and
cmp
inc
add
stc
xor
insb
aam
mov
in
adc
cwtl
sub
dec
inc
rcll
pop
loop
xor
fisttpl
dec
adc
xor
push
jecxz
xor
sarb
lock
lret
pop
imul
clc
iret
or
fmulp
mov
ds
das
mov
dec
insl
aas
mov
pop
and
mov
call
inc
pusha
loopne
push
inc
mov
push
pusha
popa
shlb
stos
pop
pop
leave
inc
inc
or
xor
cmc
mov
sahf
dec
jnp
xor
shl
xchg
cmp
aam
jno
add
xor
sub
pop
fadds
sub
adc
das
insb
push
imul
sub
sub
int3
hlt
xchg
inc
rcl
inc
inc
mov
in
push
inc
xor
mov
pop
aad
mov
and
cltd
pop
lods
call
xor
rcrb
push
sub
ss
xor
dec
leave
mov
clc
pop
dec
test
pop
inc
test
loopne
insl
xchg
out
int
dec
imul
pop
dec
push
cmp
cmp
mov
add
sub
mov
mov
lods
faddp
pop
or
pushf
pop
repz
mov
test
cwtl
mov
fsts
dec
pop
pop
inc
outsl
push
pop
xchg
dec
sub
or
inc
push
xor
lret
test
sbb
sub
pop
cmp
or
fs
ror
jl
enter
or
jb
sub
mov
inc
imul
lods
lret
xlat
jno
ds
add
shrl
or
test
cltd
mov
sub
int3
mov
pop
jmp
cs
aas
mov
shll
es
and
pusha
cmp
repz
sbbb
xor
rorl
mov
adc
out
push
jg
int3
sub
sub
stos
or
inc
mov
mov
xchg
add
aad
mov
mov
or
call
pop
sub
or
shll
jns
lahf
jle
aam
sub
mov
jmp
dec
adc
pop
push
aam
dec
xchg
cld
and
inc
imul
das
sti
stc
cmp
or
xchg
sub
loop
repnz
jmp
int3
push
mov
xchg
sub
sar
pop
not
test
dec
pushf
aad
cmpsl
inc
into
xchg
push
mov
or
pop
push
out
or
and
xchg
pop
and
push
in
mov
inc
aas
dec
inc
or
rolb
out
fld
xchg
inc
mov
and
sub
inc
les
lcall
int
push
mov
or
int3
lret
enter
repz
pop
leave
pop
mov
dec
pop
sbb
fistpl
add
sub
or
xchg
dec
hlt
test
or
pop
adc
jmp
push
pop
rorb
or
and
jmp
sub
js
pop
push
xchg
dec
add
es
jp
sbb
cmpsb
flds
dec
cmp
fs
dec
mov
adc
dec
push
rolb
jb
xor
pop
out
out
adc
mov
mov
sub
inc
gs
or
nop
pop
rcrb
dec
jge
xchg
mov
inc
xor
mov
push
in
das
jl
in
sub
dec
cmp
or
inc
scas
arpl
push
xchg
lahf
pop
push
xchg
fwait
mov
iret
pop
push
mov
pop
inc
cmp
add
lods
pop
inc
aas
call
fcmove
jmp
repnz
fstpt
sbb
inc
jp
rclb
dec
sub
add
pop
pushf
push
pop
insb
fs
dec
jae
lret
mov
and
xor
pop
dec
leave
rclb
lds
mov
imul
adc
and
and
inc
cs
cmp
out
int3
aad
lods
push
daa
xor
div
repnz
dec
mov
sti
mov
xchg
or
push
push
mov
test
add
imul
pop
iret
push
xor
nop
mov
cs
sbb
dec
arpl
xchg
sub
inc
movsl
inc
or
shrl
lock
add
out
enter
mov
out
pop
dec
nop
xor
fxch
ds
aad
mov
into
sub
out
or
dec
inc
shlb
push
into
ret
int3
mov
cmp
mov
and
push
sbb
in
pop
inc
fldt
or
daa
dec
fsubs
pop
in
jg
lret
fxch
insl
sahf
inc
jae
xor
add
lret
jb
pop
sbb
imul
pop
jno
pop
aaa
cld
rcrl
fimuls
dec
faddl
test
rorb
mov
xor
jb
rcll
in
inc
lds
xchg
pop
loop
dec
shl
inc
rclb
sub
das
bnd
mov
push
adc
pop
aad
push
jg
mov
cmp
xor
int
adc
and
lods
xor
rcll
jl
xchg
fmuls
scas
inc
lahf
pop
repz
pop
rorl
jne
jb
leave
pop
sbbl
cmp
pop
inc
jae
push
fbld
mov
mov
mov
repz
pop
push
add
lock
aam
xor
pop
jae
pop
cs
addr16
sub
into
dec
jne
inc
or
sahf
aad
movsl
jle
xchg
ds
jmp
mov
mov
or
and
insb
pop
into
shrb
inc
push
pop
rorb
mov
mov
sub
dec
enter
pushf
or
lds
ficoml
cmpsb
pop
jnp
push
inc
test
pop
jmp
push
adc
adc
add
cmp
add
dec
dec
repnz
scas
xor
cmp
pop
sbb
sub
inc
insl
imul
aam
push
int
xor
mov
adc
inc
xor
sub
dec
insb
jnp
movsl
push
sub
test
rol
inc
sub
popa
enter
outsl
mov
lret
inc
imul
jno
push
jmp
or
jmp
insl
push
push
pop
pop
adc
leave
les
cmp
jnp
gs
ret
inc
sub
jl
push
out
cmpl
test
or
repz
mov
shl
mov
add
test
mov
mov
stos
lods
es
adc
add
sub
fucompp
test
inc
mov
dec
js
cld
adc
popf
leave
enter
inc
test
in
jmp
sarb
pop
pop
jb
loope
aam
add
and
dec
xchg
call
dec
decl
sub
in
and
cmp
mov
fsubrs
aam
ds
mov
mov
adc
fcmovu
lock
adc
lcall
mov
xchg
xor
insl
fdivrl
push
dec
into
or
andl
lret
xor
mov
pop
cmpsb
inc
stc
or
inc
pop
inc
dec
test
add
rcr
or
mov
push
stc
aad
xchg
jmp
mov
cmpsl
inc
mov
pop
mov
ret
or
popf
inc
in
dec
inc
add
int3
pop
iret
add
leave
or
dec
xor
dec
lods
or
mov
clc
and
sbb
sub
setne
orb
push
pop
pop
inc
cld
add
rol
mov
inc
in
scas
out
cltd
dec
inc
mov
test
lea
call
sbb
sbb
outsb
movsl
push
xchg
dec
int
lods
fcmovnb
push
mov
adc
std
push
mov
sub
shlb
fsubrl
and
jae
mov
add
pop
dec
xchg
push
cmp
jo
lcall
dec
xor
xchg
loop
dec
sbb
les
ss
pop
sub
mov
dec
dec
sar
outsl
int
cmp
jl
es
pop
arpl
sbb
inc
fildll
push
and
aaa
cmp
mov
sub
add
idiv
int3
sub
jl
dec
mov
xchg
adc
sub
fisubl
cmp
push
hlt
scas
inc
test
push
dec
sbb
sar
in
clc
ret
jl
rorl
cmp
dec
xchg
enter
jmp
cmp
fisubrs
scas
es
push
fdivrs
mov
xchg
in
mov
pop
pop
pop
or
dec
inc
or
nop
daa
inc
in
adc
and
push
out
sub
pop
pop
jb
fs
adc
or
ret
cmp
in
movb
shlb
mov
iret
sbb
rorl
fwait
inc
outsl
insb
push
jo
pop
jae
das
pop
cmp
push
das
push
movsl
mov
mov
dec
pop
xor
dec
cmp
adc
push
das
jmp
cmp
push
int3
or
sub
shr
add
sub
jmp
int
add
lret
sub
dec
push
aaa
sub
idivl
shrb
mov
dec
inc
and
loop
in
mov
and
jb
xchg
imul
icebp
int
es
mov
or
call
fwait
je
flds
es
dec
and
outsb
xor
dec
inc
pushf
inc
or
push
sub
test
inc
popw
mov
inc
jne
inc
sub
push
enter
jmp
shrb
adc
sarb
pop
outsb
pop
pop
roll
or
test
sbb
add
push
xor
ds
rcl
add
pop
stc
or
jmp
stos
cmpsl
dec
pop
lretw
sub
repz
fimuls
xchg
enter
cmp
mov
lret
and
mov
xor
sub
pop
loope
movsl
and
data16
push
dec
in
add
stos
sbb
and
shrb
enter
insb
dec
fdivs
hlt
dec
xor
das
lds
dec
jmp
cmp
mov
loop
nop
sbb
fistpl
shl
dec
sub
pop
push
orl
adc
or
add
xchg
push
mov
cmp
int3
push
stos
dec
sarl
xchg
push
jp
push
mov
jmp
xor
jmp
or
fcompl
cmp
pop
pop
cmp
cmp
stos
pop
shr
pushf
dec
arpl
push
inc
push
and
pop
fnstcw
fwait
into
inc
fs
pop
jno
sub
lret
cld
mov
test
pop
fists
mov
mov
or
or
adc
pop
sub
fsubl
mov
inc
push
stos
das
jo
dec
sbb
and
mov
scas
sbb
shlb
pop
ss
or
and
ret
jnp
daa
add
insl
push
pop
nop
mull
push
out
or
inc
and
fstpt
inc
int
les
cwtl
test
xchg
inc
idivb
inc
cmp
pop
loopne
adc
pop
or
shrb
insb
mov
inc
cltd
inc
sbb
mov
adc
mov
stc
mov
les
xor
pop
aad
aaa
dec
je
inc
dec
aas
nop
push
inc
dec
mov
dec
fwait
in
fld
and
call
sbb
sbb
pop
out
shll
call
imul
inc
jle,pt
call
or
stos
ja
enter
das
call
push
ficoms
dec
xchg
movb
pop
xor
sub
ret
jg
jge
mov
jp
je
dec
loop
mov
or
adc
int
loop
arpl
es
test
cmp
jae
in
dec
shrb
cltd
into
mov
and
push
pusha
loope
ror
lods
out
and
xlat
push
jb
insb
shrb
inc
or
cmp
rcll
jle
fmuls
jno
push
or
add
sub
andl
insl
das
int
inc
or
push
hlt
mov
int
icebp
xchg
xchg
pop
dec
or
push
pushf
sbb
dec
repnz
dec
shlb
pop
nop
in
xchg
jnp
out
stc
shlb
or
stc
ja
in
stc
dec
inc
sub
sbb
mov
ss
lods
inc
fisubl
sub
xchg
sub
cmpsb
inc
aad
push
push
xor
aam
jae
pop
xor
jecxz
fwait
addl
iret
cmp
mov
jp
inc
jae
mov
inc
addr16
dec
jecxz
cmp
and
inc
mov
dec
xchg
dec
ret
hlt
fs
add
pop
fldcw
addr16
dec
inc
pop
bound
sbb
leave
imul
cld
inc
jae
repz
push
sbb
mov
stos
dec
cld
rcr
cmp
int3
fnstenv
pop
push
pop
sub
push
and
xchg
loop
test
pop
adc
pop
or
daa
inc
mov
xor
push
dec
pusha
jno
xlat
sbb
push
cmp
pop
xor
push
cli
dec
mov
mov
sub
scas
lret
mov
xchg
mov
dec
inc
push
and
shll
pop
push
stc
sub
test
lret
or
dec
mov
jno
lret
cmpl
mov
cltd
push
scas
sub
lcall
or
fldcw
fiadds
or
lret
dec
pop
jb
mov
repz
enter
insb
xchg
dec
xor
fistpll
sub
xchg
dec
sub
xor
push
dec
dec
dec
sti
cmp
pusha
pusha
addr16
xlat
inc
dec
xor
ret
insb
int3
sbb
pop
inc
cmpsl
fistpl
js
shlb
cwtl
enter
les
fcmovb
cmp
cmp
jp
inc
and
cmpsl
lret
push
push
mov
loop
iret
sbb
fldl
sub
xor
pop
push
cwtl
lahf
dec
mov
or
mov
push
xchg
sub
int3
mov
push
xlat
inc
mov
xchg
push
sti
dec
xchg
inc
add
or
cli
jb
mov
fucom
and
or
adc
std
aad
dec
pushf
loop
mov
test
shll
ror
inc
adcl
jne
inc
fimull
push
xchg
jae
dec
fcmovbe
push
psrad
dec
enter
xor
cwtl
fs
das
test
test
ficoml
fldl
out
push
pop
dec
push
cmpb
cmp
lods
dec
lods
fisubs
ret
dec
dec
mov
stc
pop
fs
pop
inc
lock
add
inc
xchg
mov
inc
xchg
sbb
into
jecxz
and
dec
cmpsl
dec
pop
icebp
sub
rcll
xchg
cld
push
sub
xor
bound
ret
dec
xor
divl
aaa
stos
sub
fnstenv
push
int3
fidivrs
fidivrl
xchg
and
and
and
sub
and
fsubrs
int3
test
dec
js
sub
xor
int
scas
dec
shl
loopne
pop
dec
testl
es
push
lds
cmp
fnstenv
mov
aam
sub
imul
push
mov
decb
dec
sbb
fildll
rol
mov
mov
inc
dec
or
repnz
dec
mov
mov
inc
mov
and
xchg
imul
je
ficompl
loop
jb
dec
lret
push
mov
and
mov
sbb
push
push
bswap
dec
dec
fldt
and
mov
cli
mov
pop
loope
adc
mov
sub
out
add
sub
cmpb
test
pop
xchg
ror
aas
inc
inc
or
inc
push
mov
fdivrs
mov
cltd
push
dec
divl
sahf
cmp
push
fidivl
lahf
sub
dec
fldenv
jle
fcmovb
add
sub
ret
loop
and
addb
or
es
sub
ss
fildll
movb
dec
xchg
push
inc
das
pop
repz
ret
push
push
dec
lret
push
rorl
pop
insl
cmp
dec
rclb
pop
rep
sbb
enter
sbb
mov
mov
jle
dec
pusha
outsl
sub
xor
test
xchg
mov
or
les
jle
pop
and
and
xor
sub
enter
and
jg
sub
int3
insb
or
shrb
rcrb
xor
jp
in
dec
xchg
fs
mov
fiadds
mov
jg,pn
and
fwait
pop
mov
lcall
mov
push
aad
testb
jmp
cmp
jg
add
pushf
cmp
movsl
ss
pop
pop
inc
add
outsb
push
jnp
sarl
xlat
es
stos
xor
mov
mov
inc
sti
das
jle
dec
test
or
fxch
imul
das
adc
jae
sti
sahf
pop
dec
fildll
cli
and
orb
dec
push
pop
jns
pop
out
rcrl
sub
fucomi
mov
lret
xor
push
xor
adc
cmp
mov
into
mov
dec
mov
les
xor
cmp
sub
inc
fistps
das
jb
imul
addr16
pop
mov
add
cltd
mov
jp
aad
or
cld
insl
inc
scas
add
inc
jb
js
pop
xor
dec
xchg
jl
mov
and
add
mov
jmp
cmp
orl
test
adc
sbbl
push
sbb
jmp
cmp
sbb
imulb
into
fistps
sahf
mov
popa
sbb
outsb
or
push
xchg
cltd
imul
dec
adc
les
pop
dec
nop
cwtl
pop
and
xor
add
mov
dec
xchg
mov
push
cmpsb
dec
ret
push
js
outsl
push
push
ss
xlat
mov
dec
pop
int
inc
aad
mov
jb
dec
pop
dec
loopne
pop
int
push
mov
inc
pop
adc
xor
inc
push
adc
push
xchg
pop
pop
orb
inc
cmpsb
pop
pop
mov
pusha
mov
dec
push
arpl
leave
bound
mov
cmp
and
dec
inc
test
xlat
dec
fstpt
inc
add
in
cs
mov
lea
test
test
stc
dec
faddl
or
rcll
pop
cmp
add
dec
xor
mov
inc
xchg
pop
dec
sbb
xlat
outsb
lret
cmpsb
lcall
sbb
dec
js
mov
inc
int
sub
mov
loop
or
mov
insl
add
das
push
dec
xor
pop
push
lods
xor
adc
pop
pop
dec
jl
jnp
rolb
imul
orb
fisttps
test
sbb
mov
aaa
test
cmpsl
test
push
sbb
icebp
and
cmp
lret
nop
cmp
sub
mov
leave
sub
lret
xor
push
cmp
mov
ds
push
ss
fistpll
enter
mov
mov
repnz
pop
pop
pop
adc
xlat
pusha
aaa
adc
inc
and
cmp
leave
lods
fimuls
push
and
pop
out
dec
pop
out
mov
rorl
jp
xor
inc
and
lret
add
leave
xor
ss
sbb
ret
push
cmp
lea
lds
xor
sub
xor
or
fwait
mov
js
or
jl
mov
repnz
cmp
adc
call
pop
leave
sub
lret
pop
sub
pop
push
iret
mov
pop
repz
dec
in
pop
fbstp
pushf
inc
push
cmp
icebp
dec
cli
sti
sub
add
add
bound
xchg
push
int
mov
or
dec
iret
push
fisttps
fildl
xchg
push
mov
mov
mov
dec
mov
sub
jmp
imul
xor
push
mov
aaa
icebp
sahf
sbb
mov
dec
orl
and
mov
inc
shl
daa
ret
fsubrs
push
push
xchg
cmpsb
dec
and
xor
and
pop
enter
sub
insb
sbb
pop
adc
sub
in
dec
mov
cmp
pop
or
cmpsb
push
mov
int3
sbb
stc
mov
shr
jns
add
mov
fcompl
mov
dec
fxch
in
scas
clc
push
enter
and
push
aaa
ret
fcmovu
pusha
adc
int3
in
leave
xchg
fcos
push
push
inc
stos
jne
inc
push
dec
sbb
pop
jo
sub
imul
scas
inc
jmp
les
inc
push
adc
mov
xor
outsb
lret
push
jge
fstps
or
adc
fldenv
xchg
aas
pop
idivl
jae
mov
pop
sub
das
adc
in
mov
out
inc
fstpl
dec
loope
pop
push
sbb
push
pop
mov
int3
push
sub
pop
sub
sub
or
loope
sbb
xchg
xor
aad
xchg
cmp
add
dec
pop
out
daa
inc
mov
dec
ret
ja
imul
or
adcl
addb
mov
sbb
xchg
test
inc
sub
enter
push
adc
stc
push
in
inc
push
sarb
dec
lahf
jmp
sti
mov
xor
movsl
mov
or
jge
adc
fwait
call
mov
lret
stc
mov
sub
push
adc
out
pop
or
dec
aam
jb
test
cmp
fwait
je
pop
call
push
test
pop
jecxz
mov
mov
xchg
test
ror
daa
fldl
xlat
mov
jmp
sbb
scas
in
test
js
leave
das
dec
push
inc
lahf
call
jp
das
sbb
inc
mov
cmp
repz
les
mov
lret
inc
cmp
pop
sbb
movsb
cmp
dec
ds
adc
test
aad
cmpsb
cs
mov
loop
push
dec
dec
int
and
push
ss
adc
mov
sub
dec
rclb
out
repz
jae
loop
sbb
inc
dec
push
ja
fwait
ret
xor
xorl
pop
inc
cmp
xchg
ret
pop
push
mov
pop
push
std
into
pop
daa
inc
inc
lods
out
into
push
cwtl
or
inc
das
pop
call
sub
xchg
add
aaa
push
sbb
jge
inc
shl
inc
imulb
roll
or
adc
mov
sub
filds
cmp
repnz
or
push
add
mov
sub
fucompp
dec
cld
in
sub
push
inc
dec
mov
pusha
out
inc
or
cwtl
lock
xor
lds
in
push
inc
add
addl
jo
dec
leave
leave
jle
push
packuswb
inc
sbb
into
or
scas
ret
imul
xlat
jo
scas
das
in
inc
adc
mov
push
cld
les
push
pop
lret
lea
jmp
pop
fcomip
push
and
push
sub
cmp
push
dec
scas
jae
push
test
fcmove
mov
int
into
fmul
lods
mov
xchg
or
dec
aas
inc
rcl
aad
or
fcompl
xlat
and
jecxz
jge
pop
addb
mov
dec
sub
imul
or
fildll
loopne
sqrtps
mov
xchg
lret
repz
fisubrl
mov
lds
or
pop
and
inc
mov
pop
enter
daa
jo
sti
dec
mov
or
pop
or
call
daa
cmp
push
pop
xor
inc
or
shll
cmp
sub
enter
push
inc
loope
les
pop
push
push
or
cli
cmp
lret
cltd
pop
inc
or
aaa
push
xlat
icebp
xor
inc
shll
loopne
test
int
xor
lret
dec
dec
mov
adc
sarb
xchg
inc
into
push
imul
clc
xlat
daa
dec
pop
out
shll
insb
sbb
aaa
cld
mov
aaa
jl
xor
fnstcw
lds
jae
mov
adc
or
test
cmp
icebp
in
sbb
les
add
aad
outsb
pusha
into
out
xor
repnz
push
std
lods
push
xor
mov
stos
mov
sbb
call
andb
dec
adc
dec
xchg
icebp
addr16
inc
enter
add
xor
add
pusha
inc
sbb
dec
jmp
dec
imul
fisttpl
jmp
movsb
jmp
cwtl
sbb
push
insb
cwtl
adcl
in
dec
jmp
and
push
pop
scas
jmp
inc
dec
inc
scas
sub
fsubl
loop
pop
and
cli
and
loope
adc
dec
push
sbb
add
dec
imul
fstl
dec
sub
cmc
sub
shlb
mov
xor
mov
lea
in
pop
or
ljmp
pop
pop
cmpsb
inc
pop
jmp
or
push
cmp
inc
or
aad
rclb
dec
popa
lock
xchg
rorb
sbb
insb
dec
push
ret
xlat
add
xchg
add
mov
sub
leave
inc
xchg
bound
lock
sub
xchg
mov
rorl
repz
fldenv
push
call
xor
pop
push
sahf
pop
jge
dec
mov
fistl
pop
or
cmp
add
push
mov
mov
test
mov
inc
or
leave
mov
mov
and
fidivrl
test
sub
out
pop
enter
sub
outsl
inc
leave
cmp
test
mov
adc
insl
sti
loopne
dec
sub
sub
cmp
pop
adc
cwtl
loope
inc
dec
xchg
fwait
pop
pop
out
push
cs
dec
sbb
pop
mov
add
das
add
test
dec
inc
cmc
and
scas
shrb
xor
into
lods
dec
dec
fcmovb
and
adc
jp
ret
dec
sub
jne
addl
push
adc
shll
push
sbb
pop
inc
dec
mov
fpatan
lret
rcll
jne
pop
dec
xor
pop
pop
push
xor
push
gs
dec
mov
mov
daa
mov
xorb
push
mov
pop
xchg
setg
dec
cmpsl
aaa
sbb
or
xor
push
cmpsb
inc
inc
shrl
clc
inc
leave
cmc
and
inc
aam
leave
dec
movsl
ja
rclb
in
int
mov
pop
mov
adc
xchg
ret
cmc
xlat
loop
pop
pop
jae
popf
pop
dec
bound
cmpsb
dec
pop
mov
jl
add
dec
adc
push
and
lea
xchg
adc
add
or
sbb
filds
test
pop
mov
adc
int
push
pop
call
push
sub
dec
out
sub
aad
in
inc
movsb
jge
cmp
subb
xor
adc
xchg
mov
fwait
and
push
add
mov
add
rcll
mov
out
sbb
xor
jae
or
or
es
int3
cli
pop
push
sarb
push
adc
pop
push
xor
push
repz
jle
call
cmpsb
enter
push
sub
bound
jb
bound
add
pop
pop
inc
aas
sbb
sbb
push
dec
mov
pop
pop
sub
imul
dec
mov
cmc
and
sub
lret
pop
cltd
aam
dec
leave
imul
jp
shl
xor
mov
xlat
stos
xchg
into
pop
pop
shrb
mov
fsubrl
jno
xchg
xchg
das
push
sub
push
or
push
inc
loop
icebp
das
divb
mov
and
pop
xchg
or
xchg
push
cmp
mov
loopne
imul
rolb
pop
aad
rcll
mov
or
jns
sub
mov
repz
mov
rcll
push
jp
aad
pop
sbb
pop
xchg
pop
fimull
add
call
pop
lods
xchg
cmp
pop
xor
lds
mov
or
and
inc
stc
sbbl
jle
push
inc
inc
or
pop
call
mov
pop
dec
adc
mov
pop
gs
test
int3
sub
pop
push
mov
cmp
push
mov
push
and
pusha
test
int
inc
sbb
push
jmp
sub
loopne
jmp
roll
es
ds
stc
sub
mov
and
js
inc
cmp
fstpl
cltd
pop
fists
push
inc
sub
mov
pop
call
sub
test
les
dec
leave
add
mov
ss
mov
stc
imul
leave
das
mov
jne
push
push
stos
and
scas
or
cwtl
enter
sub
lret
ds
fldcw
sub
mov
sub
lods
add
push
push
stos
das
pop
push
pop
loope,pn
icebp
cltd
jle
sahf
cmp
mov
jmp
jp
pop
mov
fisttps
mov
rcl
sarb
pop
push
pop
fsts
push
enter
orl
aad
mov
lea
dec
or
xchg
or
sbb
xor
rorl
enter
push
stc
leave
sbb
test
push
jns
push
jne
adc
cmp
sub
inc
fdivs
repz
xchg
inc
adc
xor
xchg
sbb
ret
enter
inc
inc
dec
xor
dec
push
imul
push
or
mov
push
inc
jne
push
dec
adc
lcall
jmp
rcl
inc
pushf
aam
lret
push
mov
inc
add
or
sbb
xor
or
stc
fnstcw
aaa
inc
lods
pop
sub
ret
idivb
push
mov
stc
and
xor
cmpsb
dec
scas
lret
push
mov
sbb
mov
sbb
mov
inc
mov
pop
sub
in
clc
ror
dec
test
and
jmp
inc
ja
pop
dec
imul
lcall
ss
jp
ss
cmpsb
insb
repz
fmulp
jg
push
mov
dec
test
jae
push
xchg
add
pop
pop
mov
xchg
call
and
inc
mov
or
outsb
dec
cmp
adc
sub
pushf
das
leave
lock
pop
pop
test
sbb
aas
ret
push
imul
sub
push
sub
inc
inc
lods
fstl
movsl
pusha
jnp
xchg
sub
shrb
xor
push
lret
daa
pop
loope
push
fdiv
dec
push
leave
orb
adc
and
push
add
loope
popa
shrb
dec
mov
push
inc
leave
mov
add
outsl
aaa
pop
and
xchg
dec
xor
pop
or
mov
enter
ret
or
rol
mov
inc
dec
pop
mov
push
jmp
pop
movsl
cmp
ficoml
push
inc
and
fists
test
das
mov
inc
dec
shr
adc
mov
aam
call
fimull
pop
cmp
movsl
mov
and
pushf
in
cmp
xchg
js
test
dec
adc
or
stc
sahf
inc
enter
pop
rolb
pop
sbb
insb
inc
and
cmp
arpl
hlt
sub
push
ret
out
test
fcmove
or
fsubrl
ficompl
das
cmp
pop
mov
hlt
fnstsw
push
fsubrs
das
mov
cmp
dec
inc
mov
mov
mov
pop
sub
jge
ret
dec
jmp
add
push
leave
pop
mov
cld
lock
sub
outsl
push
pop
and
jmp
and
rorl
mov
jp
xor
ret
cmp
outsl
ss
dec
jno
sahf
pusha
mov
int3
sub
outsb
das
xor
push
das
dec
and
jecxz
roll
xchg
daa
cmpsb
sbb
pop
es
sbb
mov
or
dec
push
dec
pop
cmpsl
out
outsl
pop
sub
inc
fsts
dec
rolb
dec
inc
rorl
movb
mov
ss
lds
push
into
xlat
jae
jb
addb
cmp
xchg
jmp
rclb
orb
shl
jecxz
mov
rcll
push
inc
and
sahf
dec
push
fisubrl
push
icebp
leave
and
or
jnp
into
stos
inc
arpl
xchg
nop
jl
inc
sbb
cmp
mov
push
fxch
xor
sarl
or
cmp
or
push
stos
lods
rorl
ds
add
sub
stos
pop
cli
adc
xor
popa
pop
outsb
and
rol
test
jnp
inc
adc
shr
scas
in
inc
jnp
or
mov
mov
xor
fisttps
int
add
jl
inc
enter
and
push
dec
inc
dec
mov
fs
andb
cli
push
inc
push
add
shlb
or
test
push
cmp
pop
cmp
mov
and
es
dec
push
jmp
dec
dec
mov
das
lcall
cmp
mov
clc
fisubl
out
push
sub
jo
sub
push
push
cmpsb
or
test
or
cmpsl
in
fstps
push
sbb
leave
jno
add
leave
les
add
jae
fists
push
push
leave
fldcw
outsb
push
call
sbb
test
push
pop
lods
mov
push
dec
inc
test
pop
gs
mov
dec
int3
inc
push
mov
fiaddl
loope
mov
sbb
in
pop
inc
stos
mov
pop
xor
dec
gs
ds
mov
jnp
rolb
or
sti
lods
mov
jmp
dec
fnsave
and
lahf
dec
jno
imul
roll
movsb
dec
dec
leave
out
ja
outsb
add
shrb
pusha
fldcw
sub
add
xor
mov
xchg
mov
ficoml
je
and
or
mov
and
inc
out
mov
mov
mov
adc
push
aam
bound
fisttps
xor
jb
fisttpll
stc
inc
scas
push
mov
sahf
inc
jb
into
fwait
jle
push
add
sbb
push
sub
aas
ffree
lret
inc
mov
jnp
xchg
push
leave
insb
jns
adc
inc
and
dec
sub
popa
pop
stc
xchg
enter
enter
enter
xor
mov
and
sub
pop
sbb
inc
or
xchg
sub
fucomip
inc
sbb
sub
and
les
out
push
adc
ficoms
xor
test
sbb
imul
pop
cmpsl
inc
push
das
pop
mov
fdivl
int
push
push
cmp
push
adc
push
insb
loop
cmp
mov
fwait
add
js
hlt
sbb
out
jmp
stos
imul
loope
or
fwait
xchg
lods
movsb
rcl
cmp
mov
jmp
dec
dec
inc
leave
xchg
adc
mov
pop
loop
rcr
pop
sub
push
cmp
xchg
pop
inc
inc
and
mov
and
ss
or
scas
int3
ret
or
lds
call
inc
pop
jnp
inc
and
push
fld
inc
jmp
loopne
push
pop
push
and
and
lcall
push
inc
aad
addr16
pop
push
sub
inc
jecxz
cmc
sbb
sub
push
popl
out
pop
push
imul
jae
add
or
push
xlat
jnp
pop
sub
es
insl
push
and
push
inc
pop
enter
pop
push
mov
push
and
xchg
filds
add
das
jmp
push
lock
push
lret
add
push
sub
or
ret
jp
mov
movsl
pop
les
inc
subl
cwtl
in
test
and
out
dec
pop
mov
inc
push
dec
and
aad
push
lods
lea
lret
dec
dec
movsb
ficompl
scas
jae
push
aam
adc
cmpsl
rorl
and
sub
lock
fucomp
lods
ss
ss
add
adc
jae
jns
dec
sbb
push
dec
rclb
sbb
leave
sub
xor
and
dec
outsb
imul
pop
ret
aad
call
sbb
rcrb
inc
int
mov
push
int3
xchg
jp
sarb
push
adc
int3
das
outsl
inc
enter
push
or
jmp
insl
fildl
shl
shlb
xor
test
mov
jmp
int3
into
int3
lret
lahf
outsb
movsl
dec
add
inc
icebp
xchg
shrl
pop
lds
adc
mov
movsb
sarb
pop
aam
jmp
dec
call
shlb
cld
and
lock
cmp
jne
xor
and
popf
fwait
jb
shlb
jnp
clc
inc
xchg
ds
call
in
or
lret
adc
fsubrp
xchg
inc
aam
data16
inc
mov
cs
mov
clc
addr16
fwait
int3
push
sbb
or
dec
or
xchg
dec
cmp
sub
pop
push
mov
fcomp
int3
sub
dec
int
mov
dec
jo
and
adc
rorl
mov
push
dec
mov
or
xchg
inc
or
testb
push
out
sub
add
pop
mov
inc
jp
int3
sub
sbb
sub
gs
es
ret
jb
push
xlat
dec
into
dec
sbb
lcall
enter
call
push
cmp
add
cmpsb
movsl
rcr
push
sub
cwtl
icebp
insl
xor
cmp
xor
int
dec
xor
jg
adc
cld
sub
xchg
ret
rorb
push
enter
add
and
mov
ret
ret
xor
fstps
aas
cmp
pop
bnd
pop
rcll
add
jg
dec
jae
add
insb
sbb
repz
inc
aam
cmp
adc
or
filds
icebp
js
add
sbb
cmp
inc
cmp
sbb
xor
dec
xchg
pop
or
mov
jl
fidivl
test
lea
lret
or
leave
xor
inc
cmp
pop
push
les
stc
jmp
cmp
mov
mov
inc
leave
cmc
cmp
fistpll
push
jno
and
or
cmpsb
ss
mov
lcall
es
sub
mov
test
mov
inc
ror
or
das
xor
dec
gs
pop
push
lds
addl
insb
sbb
mov
pop
dec
jmp
xor
jp
int3
adc
lds
stc
stc
push
dec
adc
push
inc
push
mov
push
mov
fcmovne
loope
cmova
push
inc
aad
fistl
push
mov
mov
jecxz
cmp
iret
les
xchg
lahf
mov
ja
int3
icebp
filds
adc
dec
and
sub
mov
lret
aad
enter
iret
or
mov
cmpsb
dec
pop
xchg
xchg
addb
dec
lret
sub
push
cmp
jno
mov
pop
jmp
mov
adc
jl
pop
or
adc
adc
loopne
cmp
sub
xchg
rcll
cmpsl
nop
dec
jmp
mov
dec
sahf
or
sbb
pop
jmp
mov
xchg
addr16
dec
push
ret
cmp
cmp
jle
ret
inc
clc
mov
mov
int
in
mov
int3
aam
gs
das
adc
push
mov
fcoms
pop
fimull
inc
fstpl
lods
fst
fwait
inc
or
adc
sub
jo
cmp
aas
dec
inc
insl
loopne
push
pop
dec
inc
cltd
or
push
out
ss
adc
push
or
adc
repz
mov
stc
and
leave
push
push
pop
push
out
and
sub
stos
mov
or
aas
call
push
xchg
cmp
leave
inc
dec
inc
inc
sub
xor
push
inc
and
cs
aad
add
insl
push
ss
inc
xor
mov
das
mov
mov
lods
xor
test
fst
enter
jo
popa
mov
sbb
or
roll
pop
lea
popf
leave
add
insl
mov
ret
pop
mov
int
push
ss
dec
aaa
jb
ret
daa
mov
xchg
jnp
pop
sarl
mov
and
dec
pusha
clc
out
mov
inc
lods
sub
lretw
pop
loop
jnp
push
adc
mov
in
dec
add
ret
mov
dec
or
sub
in
repnz
xor
cli
inc
clc
push
dec
popa
jge
pop
xlat
xor
xchg
inc
mov
pop
pusha
pop
icebp
mov
dec
std
mov
and
pop
rolb
cmpsb
es
inc
imul
popf
pop
pop
stc
mov
icebp
movsb
negb
into
in
fnclex
xchg
xor
rorl
mov
fstps
cmp
pop
lods
mov
sbb
jmp
rclb
or
cmpsb
pop
aas
test
or
mov
bound
inc
xlat
les
pop
popa
dec
in
bound
enter
insb
cmp
xchg
incb
sub
pop
sub
pop
insb
mov
pop
insl
testl
imul
jmp
out
inc
scas
mov
mov
lods
push
aad
add
or
cmpsb
and
iret
enter
sub
mov
push
call
dec
push
nop
and
xor
lea
xor
adc
xor
pop
adc
or
inc
ja
rcrb
rorb
inc
lods
adc
push
mov
pop
mov
scas
adc
mov
adcl
mov
fcmovnbe
negb
push
es
roll
sbb
rcl
clc
push
pusha
mov
mov
dec
inc
int
jnp
inc
pop
cmp
push
cwtl
adc
insb
std
fdivrp
xor
xor
sub
sub
jnp
and
dec
sub
mov
inc
mov
inc
into
mov
loop
test
mov
imul
cli
dec
xchg
inc
leave
stos
sti
xlat
sbb
loope
fimull
arpl
aad
xor
fcmovbe
or
xchg
xchg
lods
dec
repz
insb
push
and
inc
sub
loope
sub
push
jae
shrb
dec
fidivl
out
jo
inc
bound
adc
xchg
xor
inc
add
cmp
mov
sahf
pop
push
xor
jb
out
test
lea
dec
aas
fldcw
jb
rcll
push
dec
test
cmp
enter
pop
div
push
xchg
push
fmull
cmpsl
loope
jnp
inc
enter
xor
outsl
and
push
cmp
test
test
int3
dec
sub
aad
int3
mov
adc
xchg
inc
inc
mov
aad
sti
mov
xor
or
inc
leave
dec
add
xlat
cmp
call
inc
push
add
pop
inc
sbb
cltd
stos
dec
push
xchg
adc
ror
cmc
dec
fstpt
adc
adc
cs
dec
shl
stc
push
sti
cmp
leave
inc
mov
hlt
push
push
je
fisubrs
bnd
cmc
or
push
dec
testl
sbbl
lds
mov
mov
je
push
lea
rolb
jae
lock
and
dec
push
jno
scas
or
inc
rclb
pop
sub
pop
repnz
xor
lock
jb
dec
push
out
lods
or
rorl
rcrb
sub
leave
aas
cmp
sub
popf
jb
xchg
inc
aad
aaa
inc
dec
jle
imul
fdivs
lods
inc
xlat
dec
imul
sbb
dec
mov
rolb
int3
popa
push
scas
mov
xchg
push
testl
fxch
inc
adcb
cwtl
jle
shll
divl
pop
cmp
dec
dec
dec
inc
add
popa
clc
pop
out
lods
cwtl
inc
xchg
jp
ror
dec
mov
inc
lds
repnz
cmc
stc
adc
mov
fwait
idivb
and
cli
pop
dec
xchg
ret
cmp
lods
fcoms
aas
les
icebp
call
mov
pop
fstps
insl
scas
adc
or
pop
mov
loope
jno
inc
das
adc
push
inc
rol
popa
xchg
push
fldt
adc
inc
leave
ja
xor
aad
mov
dec
pusha
cmp
clc
mov
ficompl
das
les
dec
adc
adc
add
pop
das
xor
nop
rorb
fsub
test
pop
call
inc
test
sub
fxch
pop
cmp
adc
jecxz
mov
dec
mov
push
sbb
jmp
jmp
fimull
xor
daa
push
add
push
dec
push
pushf
dec
into
in
dec
repz
lods
incl
fstp
int3
leave
jmp
fists
pop
inc
push
mov
xchg
push
lcall
mov
cmc
jo
push
lahf
sbb
shr
sbb
xchg
mov
xor
pop
pop
leave
pop
add
scas
sbb
scas
and
inc
push
jge
pop
cmp
aaa
ja
in
sbb
data16
aaa
xchg
inc
inc
xchg
and
and
fists
jb
sub
leave
pop
xchg
cmp
adc
mov
dec
sbb
xor
adc
inc
iret
dec
adc
sub
clc
sub
dec
mov
aad
lahf
inc
or
push
es
loop
mov
push
push
ret
pop
inc
dec
sbb
mov
shrb
outsl
sub
gs
fcmovb
arpl
fucomip
pop
ret
fnstsw
xor
push
rorl
push
inc
pop
sub
divb
sub
int3
in
enter
pop
mov
mov
jge
dec
sub
xchg
leave
das
inc
dec
add
pop
stc
adc
add
dec
xchg
dec
mov
repnz
pop
dec
jmp
inc
xor
push
and
jmp
or
sbb
mov
xchg
mov
dec
pop
leave
mov
mov
push
cmpsl
rcr
sub
inc
push
push
inc
or
pusha
xor
mov
sbb
cmpsb
push
add
pop
push
xchg
dec
inc
das
push
movsb
pop
stos
lods
add
insl
test
loope
xor
mov
jp
dec
push
repnz
mov
out
inc
gs
fisubrl
dec
mov
push
call
dec
ja
outsb
push
sbb
ss
inc
sarl
fistpll
pop
popf
ror
enter
xor
jp
adc
or
mov
xlat
dec
mov
pop
add
int3
dec
sub
insl
xor
xor
sbb
sub
repz
orb
sub
dec
lds
adc
pop
inc
mov
inc
test
add
into
push
xor
pop
pop
rorb
sub
insb
dec
int
jmp
sbb
dec
push
fsubl
add
insb
cmp
cmc
sbb
push
pop
pop
ja
pop
push
sub
dec
cli
sbbb
ficoml
insb
mov
or
adc
cmp
movsl
mov
push
or
les
adc
movb
shrb
push
rolw
push
aam
iret
xchg
add
pop
or
in
or
out
xor
ficoml
mov
ret
jmp
fnsave
call
inc
inc
orb
ficomps
outsb
mov
mov
xor
loope
mov
lret
enter
aas
pop
push
add
iret
call
lods
imul
icebp
xor
push
inc
cmp
sub
pop
push
push
ficompl
push
xchg
ss
aad
call
ret
xchg
xor
adc
cmp
xor
dec
in
shll
sub
jl
call
leave
sbb
sub
bound
lods
add
std
fimull
adc
int
insb
sbb
sbb
std
and
outsl
call
jo
cmpsl
aas
jle
fstpl
xchg
insl
loop
sbb
test
sahf
dec
sbb
inc
or
sbb
test
rorl
test
mov
das
mov
lret
mov
test
cmp
xor
or
push
mov
or
dec
cwtl
lods
and
lret
lods
mov
or
jl
pop
jb
jns
sbb
gs
rcrb
into
or
pushl
xor
enter
mov
cwtl
sub
out
pop
fldl
inc
and
mov
pop
dec
es
inc
mov
sub
shr
scas
and
stos
sbb
fisubrl
or
dec
jns
loop
xchg
test
push
cltd
mov
xchg
out
fs
sub
or
mov
imul
dec
fcompl
out
add
cwtl
mov
jae
in
sbb
shrb
into
das
push
mov
jge
jmp
xchg
int3
pop
mov
pop
hlt
inc
gs
xor
pop
xchg
push
dec
cmp
adc
xor
dec
and
adc
pop
and
push
jmp
leave
and
stc
rorl
or
mov
popf
into
xchg
inc
push
mov
push
roll
mov
das
push
test
dec
clc
pop
stos
mov
mov
and
dec
ja
test
and
and
pop
ret
flds
addb
cmp
mov
cmp
out
jno
testb
push
inc
push
xor
ds
nop
push
ja
call
pop
sub
cmp
icebp
sbb
mov
daa
shl
adc
and
cmp
sarb
and
jmp
mov
or
and
mov
fimull
xchg
push
dec
inc
lods
int
jne
divl
dec
dec
pop
push
xor
sbb
inc
xchg
mov
jmp
imul
int3
fimuls
or
fidivrs
pop
pop
xor
jmp
lods
inc
vmovupd
cmpsl
inc
dec
out
or
adc
push
rcrl
pop
sbb
lret
out
and
dec
insl
aaa
fildl
test
push
cmp
mov
sbb
push
enter
dec
fstps
ret
lods
aad
shl
adc
std
dec
enter
scas
xlat
xor
and
add
dec
mov
jne
popa
int
orl
push
fs
inc
mov
mov
push
pop
jle
dec
sbb
xlat
in
cmp
fdiv
int3
mov
cmp
enter
rol
into
int
pop
fisttpll
idiv
mov
imul
xchg
sbb
sar
loopne
aam
inc
rorb
js
test
pop
jmp
adc
pop
push
aaa
jmp
mov
lods
call
stos
sub
mov
push
or
es
imul
leave
adc
call
dec
jg
es
jmp
push
push
adc
cs
fcomps
inc
xchg
dec
pop
shl
push
cmp
test
aas
lret
mov
dec
mov
or
and
mov
stos
ficoms
or
repz
sbb
or
pop
pop
nop
das
mov
dec
test
fstp
enter
inc
inc
mov
sub
pop
dec
xchg
jb
negb
push
and
xchg
pop
fld
mov
sbb
push
sub
inc
scas
leave
xchg
jg
stos
stc
ret
mov
and
pop
addps
push
sbb
and
jb
sti
popf
lock
mov
adc
shlb
mov
or
adc
inc
jb
insl
insl
std
inc
hlt
repz
cmp
sarl
pop
lret
mov
enter
jae
iret
mov
and
xlat
or
dec
fwait
aad
stc
cmp
insl
dec
push
pop
inc
mov
inc
imul
inc
cmpsl
xor
push
shrl
and
aad
sbb
lret
inc
aaa
dec
fimull
fwait
xor
jno
xor
sub
pop
inc
leave
lock
testb
fiaddl
arpl
sub
sbb
sub
pop
fisttps
xor
xchg
jb
xchg
dec
std
aaa
push
or
pop
lods
mov
dec
mov
sub
jg
leave
mov
mov
cmp
les
mov
out
nop
and
mov
ret
fiadds
adc
dec
inc
push
xor
fistpl
jle
fimull
dec
inc
clc
inc
dec
push
shrl
dec
push
fiaddl
and
clc
lret
pop
scas
pop
pop
push
jl
cld
in
inc
jmp
dec
rorb
dec
mov
es
insl
push
xorl
subb
int3
fmul
dec
and
cmp
jl
sub
scas
push
orl
push
and
aas
push
xchg
pop
push
loopne
adc
pop
push
jle
int
enter
and
sub
or
psrld
add
call
inc
xchg
rol
pop
mov
xor
add
sub
and
inc
mov
data16
pop
into
push
enter
inc
cmp
pop
mov
into
push
int3
fisttps
mov
inc
mov
push
and
cmp
inc
pop
sub
dec
and
pop
pop
cltd
push
fcmovu
sub
sub
imul
push
sbb
mov
enter
in
test
mov
cmc
jl,pn
dec
adc
cmp
imul
cmp
gs
sub
hlt
das
enter
mov
dec
test
icebp
dec
call
adc
mov
stc
fstp
dec
push
cwtl
fsubrs
imul
jmp
push
jmp
andb
dec
shrl
mov
xchg
aad
fwait
nop
inc
iret
inc
push
sub
add
call
xchg
dec
adc
jo
sub
mov
inc
cmp
mov
daa
dec
pop
cmp
dec
sub
mov
jg
dec
stos
jns
andl
push
push
roll
xchg
push
mov
mov
cltd
jp
dec
pop
imul
xlat
imulb
scas
pop
inc
push
cmp
ss
pop
or
xor
fcmovne
dec
xor
daa
enter
or
inc
inc
call
test
dec
testl
and
lds
lret
ss
movsl
lods
fstpl
lcall
dec
rcll
popf
lahf
inc
fidivs
stos
cmp
pop
mov
ds
mov
xchg
movsl
addb
push
dec
mov
test
nop
je
inc
dec
ljmp
adc
dec
mov
or
mov
mov
jg
rorb
lods
icebp
div
mov
xor
cmp
mov
lret
cmp
jmp
and
ss
add
xor
fchs
mov
popa
pop
stos
sub
sub
mov
jnp
data16
enter
sub
jnp
dec
enter
and
das
dec
push
enter
add
mov
dec
rclb
adc
sbb
rol
sub
pop
insb
add
call
mov
sbb
lods
adcl
nop
xorb
sub
insl
add
add
inc
ret
lock
and
mov
adc
stos
adc
push
cmp
jg
lret
std
dec
push
negb
jno
xchg
inc
mov
xchg
mov
xlat
hlt
pop
js
pop
push
lahf
mov
out
and
jbe
inc
int
xor
inc
or
sbb
mov
push
dec
cmp
leave
dec
inc
adc
sbb
sbb
inc
adc
mov
ret
leave
push
pop
mov
sub
fldcw
inc
add
dec
sub
lea
cmp
inc
call
insb
inc
cmp
aam
sbb
xor
sahf
pop
xchg
pop
call
fwait
mov
push
adc
out
dec
pop
jb
rorb
push
lods
lcall
and
in
push
or
adc
pushf
add
push
xor
and
enter
inc
adc
sub
mov
dec
insl
int
mov
mov
push
mov
mov
pusha
add
mov
ljmp
jmp
sbb
and
sbb
and
mov
pop
push
jno
fnstenv
das
out
xor
inc
xchg
jb
test
fsts
add
push
mov
into
popa
push
xor
sbb
dec
call
lea
pop
push
shll
ds
xlat
pop
or
jge
rcrb
sbb
mov
jmp
aam
mov
mov
sub
and
mov
pop
das
mov
flds
insb
iret
movsl
fdivrl
shlb
loop
dec
fcompl
push
sub
sti
jl
inc
jo
xor
and
fmull
and
aam
pop
rcll
sbb
sarl
adc
jae
rolb
mov
cmc
jo
das
enter
adc
add
jae
hlt
in
dec
dec
ja
cmp
sub
inc
xchg
lcall
inc
push
leave
or
dec
je
inc
add
and
rorb
gs
push
sub
imul
mov
int3
dec
enter
mov
xor
xor
mov
mov
adc
dec
dec
sbb
push
repz
adc
enter
pop
shrb
scas
push
inc
inc
bound
sub
and
insb
sbb
and
inc
cmp
clc
dec
scas
movsl
inc
mov
cmpsl
sub
cld
mov
es
ror
cmp
into
aaa
iret
test
push
mov
outsb
adc
outsl
add
inc
xlat
rclb
pop
fldcw
fcompl
adc
xchg
xor
adc
sub
inc
lret
or
pop
xor
xchg
mov
dec
cli
or
insl
xorb
xlat
dec
cmc
or
ret
leave
pop
test
lods
push
roll
es
push
jns
pop
cmp
cmpsl
and
mov
xor
fisttpll
cmp
add
and
inc
pop
push
lea
jge
adc
sbb
scas
dec
jle
pop
imul
or
out
xor
lods
dec
sbb
sub
lea
inc
jg
lret
add
xor
stos
mov
aad
mov
mov
adc
jb
inc
js
fwait
pop
push
lahf
fcmovnb
cmp
ret
add
push
add
enter
ret
adc
aad
addr16
cmp
sbb
adc
dec
jmp
xchg
and
sub
dec
pop
stc
inc
popf
pusha
int3
das
xlat
popa
call
adc
setb
mov
hlt
dec
mov
enter
pop
dec
mov
xchg
leave
dec
pop
jae
cmpsb
das
out
lret
jmp
dec
sub
xchg
pop
xchg
clc
mov
mov
sub
iret
test
push
dec
jmp
ss
rorl
mov
push
gs
cmp
cmp
add
pusha
fwait
push
pop
fcmovne
insl
cs
push
inc
call
int3
movb
cmpsl
stos
push
sub
xor
pop
mov
mov
mov
and
mov
ret
inc
xorb
inc
pop
shrl
pop
mov
stos
or
rorb
in
pop
cli
into
dec
fstps
mov
leave
aad
jae
cltd
neg
mov
cmp
jl
orl
and
push
mov
cmp
pop
dec
lahf
data16
inc
dec
out
rcr
pop
sub
or
aad
js
pop
dec
fiaddl
and
pop
dec
sub
nop
mov
push
ret
repz
mov
fmulp
lods
movb
jo
and
imul
mov
adc
das
bnd
in
sub
mov
jae
push
dec
pop
or
outsl
aad
jl
stc
test
xchg
ss
loopne
push
pop
mov
mov
shrl
xchg
dec
inc
lahf
shr
dec
and
and
stc
cwtl
das
jp
pop
mov
int3
pop
jge
mov
enter
pop
push
mov
das
fadd
push
or
call
mov
nop
or
sub
adc
xlat
popf
adc
xchg
sbb
iret
pop
fnstcw
lock
imul
xchg
dec
dec
dec
sbb
jmp
pop
pop
pop
fildll
cmp
mov
inc
popf
aaa
insl
outsb
mov
adc
int
cmp
ss
sbb
enter
push
enter
rcll
inc
pop
int3
aas
test
mov
repz
call
ror
mov
pop
push
add
loop
cmp
xchg
loopne
fidivrl
cmp
xor
test
push
jp
push
es
xchg
and
add
pop
icebp
sub
jno
and
push
push
out
xchg
rclb
dec
jnp
fxch
into
mov
pop
inc
adc
stos
or
in
inc
cmc
icebp
dec
sub
push
enter
repnz
cmp
or
jnp
pop
rcr
push
ror
int3
call
test
mov
adc
out
mov
cmp
jmp
imul
daa
dec
es
adc
aam
sub
fisttps
popf
xchg
or
mov
sar
std
dec
push
insb
push
popa
ss
dec
fbld
sub
or
and
and
xor
dec
test
dec
or
call
sub
xor
lds
push
adc
inc
inc
imul
repz
push
xchg
cmp
decl
inc
or
add
fsubl
mov
inc
das
test
push
mov
push
das
or
mov
and
les
insb
adc
push
inc
nop
and
lahf
fs
cmp
jno
inc
fnstsw
push
sub
cmpsb
daa
shll
xor
and
add
push
test
inc
call
xor
pop
or
inc
and
insb
mov
jp
pop
push
and
add
inc
imul
sbb
pop
ret
repnz
xor
cmp
add
test
xor
loop
dec
jb
mov
jno
aad
cmpsb
sahf
push
sbb
rcrb
call
inc
xor
inc
ss
sbb
sbb
dec
or
xchg
inc
test
pop
push
mov
add
daa
push
scas
sbb
rcl
imul
call
xor
out
inc
pop
push
gs
es
sbb
stos
pushf
pop
pop
mov
js
push
lcall
movsl
push
clc
imul
dec
inc
lahf
jmp
jl
int
aam
xchg
xchg
lods
jp
inc
enter
mov
cmp
into
mov
dec
fbstp
cmp
sub
pop
pop
shr
rorl
mov
xlat
iret
dec
inc
xchg
mov
pop
xchg
lret
jmp
call
or
jnp
or
xchg
dec
mov
xor
dec
mov
cli
shlb
dec
adc
lret
xlat
inc
inc
ficompl
add
test
leave
mov
fwait
cmp
push
sub
cmpsl
test
insb
sbb
pop
mov
cld
and
dec
insl
sbb
fcoms
aam
jmp
lods
pop
aaa
fisttpl
dec
nop
sub
popf
insl
xchg
pop
and
leave
xchg
lahf
ficompl
aam
or
lea
rolb
daa
and
xlat
loop
xor
dec
in
push
push
cmp
push
sub
sbb
push
lods
add
aaa
pop
addr16
dec
test
int3
jne
push
sub
inc
jbe
push
mov
add
das
adc
jle
xlat
in
les
jmp
inc
icebp
push
ss
insb
ret
ret
mov
xor
sbb
mov
push
mov
aas
and
pop
leave
mov
inc
stos
int3
cmova
sub
or
ja
xor
incb
add
mov
scas
cmp
and
enter
adc
shll
dec
push
pop
inc
pop
or
aaa
or
aam
mov
pushf
dec
dec
mov
dec
or
das
in
inc
out
mov
shrl
sbb
jle
rorl
out
pop
rep
push
in
lret
aam
cmp
push
inc
out
dec
push
push
outsl
stc
subb
fidivrs
xor
pop
push
outsl
int
xor
mov
pusha
xor
ret
aaa
mov
push
enter
loop
pusha
add
outsb
test
cmp
xor
pop
inc
mov
lret
lret
push
das
inc
mov
outsb
add
pop
push
pop
cmpsb
stc
adc
cmp
add
mov
push
out
fcmovu
fnstenv
bound
ret
fistpll
lret
out
kmovw
bound
int
adcl
pop
mov
sahf
dec
loopne
inc
pop
jmp
cmp
aad
mov
clc
leave
stos
and
sub
xor
sub
inc
push
inc
pop
mov
or
dec
sahf
pop
movsl
add
xchg
xor
and
jnp
dec
fwait
pop
dec
inc
jo
add
mov
imul
enter
mov
mov
stos
adc
mov
scas
out
xor
fwait
rol
sub
dec
dec
push
cmp
adc
or
cmpsl
cmp
lret
pop
xchg
mov
push
aad
repz
insb
rorl
inc
jecxz
cmp
lret
pop
leave
xchg
in
jb
imul
gs
mov
lock
fdivrl
shr
rorl
pop
cmpsl
lea
jg
jnp
fsts
rolb
dec
dec
pop
or
rcrl
sbb
dec
rolb
cmp
jne
lret
pop
insl
cmc
jp
iret
mov
dec
pop
sub
mov
add
and
enter
int3
scas
inc
enter
sbb
adc
xchg
int3
dec
gs
push
sbb
cmp
xchg
mov
iret
inc
pushl
out
jle
fsincos
push
nop
pop
dec
insl
or
dec
push
xor
pop
arpl
test
test
dec
or
shlb
and
out
mov
aas
inc
das
push
cs
or
js
jecxz
fcmovnbe
dec
mov
pop
push
pop
cmp
xlat
mov
repnz
dec
dec
mov
fwait
clc
das
call
sbb
test
xchg
js
xor
outsl
rorl
xchg
out
rcrb
mov
dec
icebp
mov
lock
inc
in
cmp
enter
add
inc
ret
lds
stc
push
cmc
test
push
push
fimuls
aas
sbb
pop
movsb
inc
xor
movb
mov
jns
mov
dec
or
subb
and
sbb
test
fs
inc
inc
push
addb
sub
xor
push
dec
adc
subb
push
inc
xlat
or
movsl
fbstp
pop
jmp
push
dec
lret
mov
mov
lret
or
ficompl
mov
xchg
out
push
pop
ficoml
mov
fsubl
bound
pop
mov
push
stc
dec
faddp
or
adc
rorb
jmp
inc
out
pop
add
stos
lcall
adc
mov
fisubs
insl
flds
aad
fidivrl
cmpsb
push
out
inc
dec
or
aam
xchg
int
pop
xchg
xchg
int3
shr
loop
adc
cmpsb
dec
add
sub
es
inc
dec
rcrb
cmp
lds
pop
push
jg
adc
jmp
push
insw
pop
jo
ficoml
int
fmul
leave
sub
and
xor
pop
fbld
in
movb
outsl
xor
pop
mov
out
pop
rcr
dec
and
leave
stos
push
fcmovnb
mov
and
aaa
loop
sbb
push
jp
js
roll
push
cmp
mov
cld
enter
dec
xor
lret
jp
pop
pop
mov
gs
int
cmp
dec
cmpsb
daa
fiadds
or
pop
push
mov
dec
loop
pop
lret
testl
hlt
int3
pop
popa
add
sub
cmp
jmp
mov
je
fucomi
jp
push
jecxz
pop
inc
cmp
jecxz
dec
mov
and
cmpsb
mov
les
inc
shll
jg
hlt
sub
jb
lret
push
es
mov
pop
sub
aam
adc
das
in
xor
shlb
aas
push
fs
lock
lcall
push
adc
jnp
add
scas
pop
jb
or
test
fidivl
mov
push
out
mov
test
dec
leave
push
loopne
dec
pop
shll
fisttpl
enter
mov
fsubr
les
push
sub
inc
jecxz
mov
out
xchg
mov
mov
xlat
dec
xchg
sub
dec
jns
test
xchg
out
xor
push
mov
int3
dec
enter
inc
loopne
adc
in
mov
inc
adc
or
aad
inc
mov
push
xlat
insl
adc
fucomip
ret
jg
mov
or
push
mov
mov
mov
mov
sub
xchg
imul
rcrb
sub
inc
push
test
out
jmp
cmp
cmp
mov
mov
mov
popa
or
inc
call
rorl
fwait
test
fldcw
mov
bound
or
fistpl
jp
pop
push
or
inc
pop
dec
insl
inc
pop
push
bnd
popf
mov
fisttpll
push
test
sbb
sub
movsl
pop
cmp
push
dec
xor
into
jns
fwait
push
dec
or
sub
cmp
mov
xlat
insb
cmp
adc
int
lds
xor
jmp
push
int
mov
stos
inc
push
sub
ret
add
push
enter
cmp
mov
sbb
rcrb
sub
mov
xor
repnz
aad
mov
aaa
imul
push
outsl
mov
inc
mov
es
out
xor
pop
inc
jge
int3
bound
fstps
and
popf
inc
inc
add
jno
dec
push
cltd
je
xchg
push
mov
push
call
mov
mov
lret
pop
mov
mov
int
ret
rorb
pop
mov
ret
mov
xor
push
cli
movsb
jne
pop
add
inc
dec
sbb
or
ret
xor
or
mov
inc
fsts
sti
sahf
pop
dec
and
stos
mov
sbb
inc
icebp
lds
mov
push
push
push
push
int3
and
aaa
xchg
in
sbb
sbbb
and
push
add
and
sbb
pop
int3
shrb
inc
dec
add
push
fstl
push
das
cs
inc
aam
stos
mov
pop
pop
lcall
filds
out
jmp
int3
xor
push
lods
aaa
mov
fldcw
sub
push
inc
sub
jns
call
ffree
lcall
push
stos
inc
rcll
pop
sbb
push
iret
out
iret
sub
outsl
jle
push
add
push
xor
inc
imul
loopne
adc
pop
stos
and
cmpsl
aaa
dec
test
ret
loop
cmp
sub
cmp
mov
or
push
pop
lret
inc
ret
les
negl
fbstp
xor
pop
fsubrs
aas
test
and
dec
inc
mov
mov
in
nop
fsubs
pop
es
pop
mov
lea
mov
adc
adc
int
sub
jne
nop
icebp
push
push
iret
stos
add
jmp
mov
fwait
lret
mov
stos
enter
xor
cmpsb
out
int
jmp
loopne
enter
das
repnz
pusha
into
push
fdivl
imul
testb
sub
mov
cmp
insl
cmp
or
fcmovb
push
xor
push
cmp
xor
inc
sbb
call
add
push
jmp
lret
pop
xchg
test
sahf
dec
fisubl
aam
shlb
push
push
pop
enter
add
push
dec
xchg
movsl
popf
dec
jmp
cmpsl
push
cmp
jp
rorb
cmp
mov
dec
xchg
testb
pop
lods
push
dec
repz
adc
inc
aam
mov
enter
das
jae
cli
jecxz
inc
cmp
mov
dec
cmp
mov
inc
lods
call
mov
and
mov
push
outsl
add
testb
cmpsl
out
dec
pop
jno
ss
inc
and
mov
aad
jno
notl
xchg
inc
jge
cmp
push
pop
xor
mov
push
movsl
and
lods
and
popf
and
leave
addb
xor
dec
or
nop
and
fisttpll
roll
lea
test
dec
icebp
mov
push
adc
lods
pop
rclb
inc
mov
inc
dec
jle
aaa
xor
adc
dec
pop
fs
cmp
mov
dec
push
cmp
sub
lds
jg
pop
pop
in
pop
dec
out
pop
sub
lock
jns
mov
dec
insb
xchg
dec
or
fistpl
cmp
pop
jmp
rorl
and
push
jnp
jae
dec
clc
adc
xor
in
sub
das
lock
and
int
lret
sub
push
inc
or
nop
jnp
sbb
dec
call
mov
aad
fcmovnb
inc
into
cmp
and
ds
cmp
or
fwait
cmc
test
in
and
repnz
ss
or
pop
dec
mov
jnp
ffree
icebp
mov
fwait
pop
outsb
sub
xor
pop
sbb
bound
and
pop
inc
aam
xor
aam
jo
enter
aaa
pop
pushw
dec
ret
mov
pop
sub
jp
push
and
cmp
cmp
js
lcall
add
lds
aam
inc
cmp
adc
imul
mov
push
sub
or
sub
mov
imul
jnp
clc
loopne
add
and
xor
out
and
inc
or
in
mov
or
xchg
pop
jle
pop
fidivrs
lret
sub
dec
ret
out
ss
imul
mov
adc
sub
xchg
enter
mov
lods
inc
xchg
pop
cltd
leave
inc
fldt
mov
imul
or
pop
or
enter
mov
out
sbb
fldl
jl
rclb
clc
inc
push
mov
movsl
fsts
mov
int
dec
dec
or
sbb
mov
stc
fisubrs
dec
dec
cmpl
les
push
dec
pop
enter
flds
mov
out
sub
sbb
addr16
push
insb
stos
out
inc
jb
es
or
outsl
je
xchg
enter
or
sbb
mov
mov
loopne
sbb
inc
pop
sub
pop
in
mov
roll
mov
mov
lret
clc
mov
sub
mov
add
lret
dec
or
pop
mov
insl
mov
roll
aas
fstps
div
jmp
mov
jle
ret
xor
in
dec
xor
je
push
fsts
cmp
xor
push
lods
xor
inc
enter
mov
or
cli
jae
mov
dec
rcrl
inc
xchg
into
mov
inc
das
call
rcrl
cmp
ficomps
mov
mov
or
out
mov
xor
repz
lds
pusha
popf
push
inc
shll
leave
xchg
pop
sub
icebp
jecxz
ds
sub
dec
orb
pop
jmp
lods
aad
adc
ja,pn
inc
xor
fcmovbe
xor
int3
lds
jo
jge
pop
int
aas
das
sbb
xor
pop
cmp
leave
or
mov
fwait
arpl
shrl
lods
pop
iret
inc
push
mov
aas
pop
sti
fisttpl
push
lods
cmp
xchg
data16
xchg
cmp
dec
repnz
xlat
test
testb
sub
xor
aad
and
or
push
xchg
sub
pop
mov
mov
sti
pop
stc
fisubrl
mov
push
fstl
xor
jb
dec
pop
stos
add
pop
imul
pop
add
inc
mov
jnp
xlat
add
ficoms
mov
inc
inc
cmp
repz
jnp
out
push
test
or
and
sbb
inc
inc
inc
lds
mov
mov
adc
add
rorb
cmp
movsl
jmp
xor
sub
aas
imul
cmp
cmpsl
mov
sub
stos
or
std
pop
adc
lods
call
shll
pop
sub
pop
mov
leave
test
xlat
jge
inc
mov
push
mov
dec
imul
push
push
rcrb
pop
xchg
push
and
movb
xor
fnsave
xor
jp
lret
adc
movb
mov
add
dec
inc
xchg
lret
insb
and
pop
lret
fs
pop
sub
mov
ds
push
pop
push
popf
aam
xchg
inc
mov
aam
xor
and
inc
push
aad
imul
adc
push
in
pop
mov
and
lods
subb
es
sbb
inc
mov
or
dec
and
not
pop
dec
lret
pop
or
hlt
dec
pop
leave
lods
stos
mov
mov
xchg
sbb
mov
clc
shrb
xchg
in
sarb
jae
imul
call
mov
stos
mov
lock
int3
out
faddl
xor
dec
push
pop
repz
xlat
or
inc
fisttpl
cld
shlb
call
decb
outsl
xor
and
aaa
dec
push
ffree
test
jle
mov
push
ret
or
pop
mov
dec
dec
sar
push
mov
inc
fidivs
push
cmp
dec
fstl
jmp
stos
or
xor
lds
dec
rorl
inc
cmp
and
aad
inc
dec
into
aas
dec
popf
in
push
mov
push
enter
jb
dec
pop
dec
pop
sub
pop
enter
mov
jmp
mov
lret
dec
movsl
jae
mov
xchg
mov
xor
adc
orb
test
jnp
mov
andb
cwtl
roll
xor
jae
or
into
mov
add
pop
stos
or
filds
mov
clc
pop
or
lods
push
aam
add
ficoml
stos
test
dec
rolb
bound
push
pusha
inc
mov
repz
or
and
inc
or
dec
cld
jno
pop
mov
jp
fcompl
inc
pop
inc
sti
dec
xchg
add
jp
fwait
into
and
in
js
fsubrl
shrl
add
pop
mov
fldenv
xacquire
pop
rorb
jno
xchg
gs
inc
mov
cmp
cmc
or
rcll
sarl
insl
and
or
ret
iret
lahf
inc
shl
xor
fmuls
lcall
jle
leave
dec
daa
dec
sbb
movsl
dec
inc
sub
inc
cmpsl
adc
dec
js
lods
das
adc
mov
dec
xchg
stos
je
dec
xor
subl
data16
pop
loopne
adc
inc
xor
cmp
dec
adc
jae
lods
addr16
push
aam
aam
lret
push
push
sub
int
lods
inc
xchg
fnstenv
in
inc
sarl
lock
call
sub
cmp
push
push
pop
daa
mov
rcr
push
pop
lods
les
enter
and
and
lods
mov
mov
call
xchg
or
sahf
dec
out
dec
dec
pop
cmp
pop
or
xor
out
inc
push
dec
cmpb
adc
push
push
nop
fldenv
cmp
cmp
push
int3
pop
and
iret
pop
dec
fldcw
fs
xor
stos
dec
add
aad
sbbb
pusha
fdivl
jb
fwait
ret
pop
mov
mov
dec
sbb
jge
xchg
mov
mov
add
or
push
fwait
pop
mov
sub
jle
pop
dec
push
and
or
xchg
xor
dec
push
xor
out
jecxz
cmp
cmpsb
xchg
sub
cli
pop
cmpsl
leave
shrb
aad
xor
mov
lds
mov
push
dec
xchg
je
cltd
std
es
roll
and
pusha
mov
shll
frstor
pop
sub
xor
sbb
mov
jmp
or
insl
add
sbb
sbb
call
add
add
iret
arpl
mov
push
cmp
or
push
pushf
ret
sbb
sete
or
andb
iret
or
movsb
lret
out
and
inc
cmp
rorb
outsl
loop
sbb
adc
or
inc
mov
out
sub
push
xor
inc
pop
pop
sub
sbb
lods
add
in
xor
lods
mov
and
out
dec
push
nop
das
push
hlt
orb
add
xchg
pop
cmp
test
in
jnp
or
push
or
testb
aad
dec
lret
stos
dec
sahf
fwait
adc
mov
clc
pushf
cmp
push
aam
jmp
mov
inc
pop
pop
push
test
inc
xchg
jbe
inc
leave
int3
imul
and
mov
lods
popf
add
shrb
lods
sub
lods
clc
stc
dec
cwtl
or
mov
and
popf
xor
fimuls
inc
push
jg
and
leave
pop
ss
divb
lret
fldt
inc
es
sbb
mov
pop
add
ja
dec
xchg
lds
out
aaa
mov
data16
or
jno
or
pop
int3
push
cmp
into
xchg
sub
testl
and
bound
mov
xor
mov
push
cwtl
sub
xchg
sub
pop
inc
aaa
aas
int
adc
into
aaa
xchg
push
mov
fisttps
imul
fistps
pop
and
out
push
cmp
inc
enter
popf
cmp
sub
dec
fisubrs
mov
int3
stc
out
out
jp
sar
loopne
ja
lret
inc
icebp
aam
xor
lods
push
dec
push
xor
cmp
or
sub
push
cmc
lods
mov
dec
adc
imul
adc
cmpsl
fcmovbe
pop
ret
shlb
push
cmpsl
movsl
pop
pop
iret
dec
xor
pop
cli
inc
jecxz
inc
mov
and
dec
loop
dec
add
cmpsl
and
insb
and
inc
imul
outsb
das
sub
fldt
out
lahf
in
inc
sbb
xchg
cmp
lret
test
mov
shll
outsl
pop
cmova
imul
lods
cmp
shll
call
jmp
das
enter
pop
pop
lahf
add
adc
push
dec
int3
cmc
es
dec
mov
pop
or
jg
clc
inc
mov
sub
flds
sub
or
popf
test
sub
mov
xchg
imul
mov
add
adc
shrl
push
dec
push
mov
fldcw
shll
ror
adc
sub
or
or
rorb
jecxz
xchg
mov
pop
pusha
lds
adc
and
repnz
mov
nop
aas
jp
arpl
inc
dec
hlt
fadd
and
ret
je
pop
ljmp
push
inc
add
mov
inc
inc
and
xor
ret
mov
subl
loopne
or
stos
xor
inc
mulb
inc
jl
mov
adc
call
push
dec
add
inc
int
sub
jmp
mov
mov
xchg
or
imul
fidivrs
aas
aad
and
jno
or
mov
out
shrl
dec
sbb
push
enter
adc
sbb
inc
mov
pop
push
ficompl
fisttpl
stc
jmp
mov
rcrl
ror
dec
dec
inc
call
xor
add
mov
dec
dec
sarl
dec
dec
data16
imul
mov
xor
xchg
and
shr
jle
shl
mov
mov
ljmp
lret
leave
repz
fnstcw
pop
addr16
push
das
push
sub
add
pushf
popa
cwtl
mov
into
jmp
jnp
jmp
jne
sbb
pop
call
push
fimull
cmp
xchg
dec
xor
repnz
dec
dec
gs
cmp
cmp
mov
stos
dec
dec
and
imul
jnp
inc
mov
das
repz
pop
lods
inc
xor
inc
push
or
push
dec
dec
sbb
pop
jo
or
xorb
push
adc
mov
sbb
and
pop
int3
dec
dec
jmp
push
adc
sub
notb
pop
sub
stos
loop
cmp
mov
cmpsb
pop
inc
and
cmp
leave
mov
fucomip
fisubs
vmovupd
push
popa
xor
xor
add
xchg
cmp
fisubrs
imul
add
jae
popf
mov
adcb
xchg
pop
into
leave
dec
or
es
imulb
mov
fs
aad
sbb
test
pop
inc
mov
adc
jae
ja
push
sarb
lret
roll
pop
outsl
clc
and
mov
clc
inc
lret
into
xor
and
push
inc
cmp
repz
dec
dec
fsubl
ret
jle
fidivl
call
addl
mov
add
adc
inc
in
push
dec
fdivs
cmpsb
and
enter
int3
push
hlt
gs
sub
cmp
fs
sbb
mov
popf
pop
or
sub
push
iret
test
mov
dec
pop
daa
jge
dec
dec
out
dec
push
cwtl
dec
pop
xor
mov
mov
ret
fisubl
xor
fsubl
orb
rcl
jmp
mov
jle
inc
outsb
mov
push
or
xchg
adc
lret
mov
jl
mov
push
mov
pop
fcoms
or
jae
push
sbb
cmp
xchg
fwait
inc
and
mov
jmp
xchg
mov
jmp
add
gs
cli
movsl
push
imul
aam
push
lahf
add
fisubrl
shrl
cmp
xchg
cs
outsb
dec
pop
imul
repz
inc
call
sub
adc
xlat
mov
ja
cs
inc
bound
and
mov
inc
pusha
mov
aad
insl
pop
dec
pop
push
fildl
loopne
dec
mov
cwtl
test
int
lcall
out
aad
dec
jmp
sbb
dec
or
xlat
push
testb
pop
push
call
adc
dec
cmp
cmp
mov
test
int
mov
xchg
int
mov
cmpsb
fwait
dec
loop
push
ficoml
xchg
jae
pop
xor
fcmove
dec
dec
inc
mov
dec
movsl
xchg
inc
aad
fcmovbe
call
fsubrs
fsubl
fimull
aaa
mov
lea
jecxz
and
sbb
orl
bound
cmpsb
push
or
pop
inc
and
xchg
inc
nop
pop
inc
jb
std
jp
xchg
inc
fidivrs
sbb
mov
adc
fisubrs
pop
mov
jnp
mov
pop
out
dec
xchg
jge
lds
bound
adc
in
std
jo
hlt
mov
rol
lods
dec
lea
repz
push
jmp
fs
sub
mov
or
nop
sbb
insb
push
adc
jbe
inc
cmpb
inc
imul
xor
fsubrl
inc
stos
inc
enter
and
fisttpl
mov
push
leave
cli
add
lock
xorl
sar
mov
jb
rcl
jnp
add
cmp
cld
repnz
jb
xchg
inc
je
dec
push
nop
add
cmp
xchg
pop
pushf
sub
xlat
dec
leave
add
int3
cmp
sbb
pop
pop
pop
cmpsl
push
dec
cmp
push
xor
test
pop
pop
and
push
or
sbb
jb
into
xchg
jg
dec
mov
adc
mov
sbb
fdivrl
xchg
mov
inc
addr16
sarl
test
push
pop
push
dec
fcmovnb
cmp
ja
into
fcompl
cld
pause
das
jae
inc
or
aad
lcall
jb
pop
dec
adc
aas
pop
inc
stos
add
ror
xor
xor
push
lcall
push
xchg
test
push
sahf
sbb
push
dec
cld
or
xchg
inc
in
mov
fists
dec
dec
out
cmpb
enter
sahf
stos
subb
jne
mov
push
in
inc
sbb
cmp
push
push
dec
pop
rol
xchg
imul
dec
shrl
fistps
insb
push
js
inc
dec
out
sub
pop
pop
test
mov
mov
mov
lret
adc
fiadds
xor
call
mov
inc
ret
fisubrl
jecxz
jg
inc
cmp
ss
cmp
popf
arpl
fimuls
fldcw
test
mov
cs
sub
dec
inc
push
das
xchg
into
push
sub
sub
cmp
int3
mov
pop
jae
push
pusha
dec
inc
pop
pop
and
bound
sub
sar
leave
pop
les
sbb
dec
sarl
mov
pop
dec
push
inc
sub
fildll
xor
push
add
pop
jns
leave
pop
dec
adc
xor
or
js
cmp
loope
mov
andb
ret
aas
add
jp
inc
or
aas
call
lret
ror
pop
push
mov
push
mov
push
pop
xchg
pop
adc
das
mov
push
arpl
cmp
push
pop
dec
lock
jb
fcoml
inc
jo
cmp
fsts
and
test
jge
xor
push
call
enter
push
mov
das
hlt
pop
das
and
enter
sub
enter
les
shll
dec
mov
stc
enter
xor
or
movsl
or
mov
shll
fildll
clc
push
jg
aad
icebp
rcrl
pop
das
and
push
cmp
popa
and
cmp
call
xlat
push
js
ss
jmpw
shr
sub
aad
fsubrl
dec
push
or
pop
dec
cwtl
lahf
xor
repz
fiadds
pop
or
push
or
lret
mov
insb
cmp
pop
and
sub
and
push
jmp
leave
inc
inc
insb
cmp
mov
cmp
daa
shll
dec
stc
or
and
mov
pop
xor
lret
adc
mov
or
cmp
xchg
rcrl
cwtl
mov
sub
notl
push
pop
pop
rcrl
inc
adc
dec
jle
mov
add
iret
testl
mov
push
jae
adc
dec
or
xchg
int3
loop
mov
hlt
xchg
stc
aad
test
das
xchg
mov
push
cld
mov
popa
add
dec
cmp
mov
pop
mov
dec
dec
add
mov
imul
sbb
aam
aas
cli
adc
pop
push
rorl
das
pop
fnstsw
sti
xlat
loopne
dec
imul
stc
xor
cmp
call
xchg
jae
cmc
jge
inc
cmpsl
cmpsb
dec
jmp
adc
pusha
out
and
mov
shlb
sbb
aam
cmp
xchg
sbb
das
jae
cmpsl
into
xchg
ret
outsl
xor
mov
lcall
rcrl
outsb
shlb
and
pop
and
rorl
das
jge
sub
pop
insl
pushf
stos
and
and
xchg
test
pop
xchg
cmp
loope
cmp
sub
out
jb
test
sahf
pop
fldt
dec
push
orb
int3
inc
lret
and
add
add
sub
mov
in
repz
sub
dec
mov
lret
das
shll
movntq
in
push
dec
add
and
push
sub
das
push
pop
jl
inc
push
sub
dec
push
xor
mov
sbbb
pop
aam
sahf
mov
cmpsb
jne
das
mov
sbb
sbb
leave
test
jno
sbb
out
dec
mov
sub
pop
jb
adc
mov
hlt
xchg
xor
sbb
lods
sbb
call
inc
dec
enter
aad
out
lret
xchg
and
push
dec
sub
xchg
dec
pop
lods
cmp
xor
cmp
pop
or
cmp
pop
rcrl
dec
int3
lcall
ds
xchg
cmp
xchg
inc
lds
loop
cmpsl
push
push
or
mov
cltd
aad
clc
lcall
inc
push
pop
push
xchg
rcrb
cwtl
insb
pop
loope
jp
dec
dec
or
call
xor
dec
movsb
pop
sub
sub
mov
mov
cmp
aaa
push
mov
jle
inc
xchg
jle
pop
sahf
cmp
mov
scas
pop
lods
mov
bound
push
aad
inc
dec
das
testb
add
push
inc
mov
imul
or
mov
xor
frstor
je
test
mov
cmp
mov
mov
lods
aad
leave
call
jp
adc
xchg
dec
or
int3
cmp
scas
or
movsb
and
mov
push
pusha
stc
push
lret
imul
sarb
in
enter
shrb
dec
nop
add
call
push
inc
fisubrl
jp
inc
pop
xchg
sbb
pusha
pop
pop
xchg
pop
bound
lcall
shrb
jl
inc
fldenv
xor
aaa
aas
pop
iret
pop
jl
inc
inc
pop
mov
fildl
shl
enter
ret
dec
or
mov
inc
dec
jne
sub
out
lds
or
xor
dec
pop
pushf
movsb
mov
inc
lea
inc
fsubl
mov
movsl
shrb
ljmp
aas
pusha
decb
lds
sub
inc
dec
lea
inc
inc
inc
rep
lret
cmp
js
push
and
push
pop
enter
inc
mov
out
enter
das
cmpsl
dec
pop
jnp
into
lret
xchg
cmp
pushl
mov
pop
cmpb
bound
mov
cmp
dec
enter
adc
rcll
mov
sbb
push
push
int3
sarl
sub
rol
xor
les
leave
pop
dec
xor
ficoms
xorb
mov
test
lcall
add
ret
dec
in
repz
lods
xor
sub
mov
dec
push
sub
andb
cmc
add
lea
inc
sbb
push
test
jge
pop
inc
loope
pop
or
shlb
inc
xchg
cmp
shll
cmc
push
sub
sub
add
dec
xchg
les
mov
lret
xchg
call
hlt
orl
cli
and
jmp
faddl
adc
dec
xor
dec
mov
mov
mov
jb
sbb
mov
leave
cwtl
or
int
pop
imul
sbb
xor
or
dec
lods
lcall
jb
fidivl
adc
das
pop
push
dec
je
or
iret
out
mov
dec
and
popf
xchg
dec
add
imul
stos
push
cmp
addl
push
pop
into
dec
mov
jp
push
insb
enter
xchg
nop
rcll
push
inc
push
push
push
das
ss
dec
aam
dec
push
jb
mov
lcall
jge
aaa
insb
push
lods
push
mov
inc
enter
into
dec
or
cld
js
xchg
aam
push
call
imul
jp
cmp
inc
pop
enter
mov
sbb
mov
je
xchg
mov
dec
stos
or
inc
adc
jmp
dec
ret
xlat
gs
lea
lds
fstl
or
imulb
pop
int3
xchg
mov
scas
mov
sub
jne
inc
imul
fnstcw
flds
mov
pop
push
loope
inc
jnp
nop
xor
sbb
push
or
leave
mov
fiaddl
scas
mov
mov
es
sbb
lahf
pop
inc
mov
dec
ja
sti
dec
cli
pop
into
cmp
dec
daa
pop
sub
lock
push
adc
and
push
aas
mov
faddp
inc
sbb
push
pushf
fs
push
pop
dec
push
or
cmp
push
xchg
xor
pop
pop
pop
ret
clc
loopne
pop
inc
test
or
arpl
les
call
subb
add
mov
xor
adc
addr16
push
out
dec
popf
rcll
mov
pop
dec
jge
outsb
pop
fistps
leave
mov
dec
sarb
mov
push
jl
sbb
enter
add
sub
mov
sub
mov
lds
mov
push
push
lret
sub
fnstcw
inc
pusha
dec
nop
sbb
imul
in
pop
roll
cmp
mov
adc
pop
mov
push
cmp
and
dec
add
inc
dec
xchg
inc
aad
push
inc
sub
js
cmp
pop
pop
mov
or
cltd
pop
int
mov
sti
cmp
lret
enter
sbb
xchg
pop
mov
enter
in
mov
in
xor
xchg
fmulp
push
fbld
lods
mov
inc
xchg
push
pop
or
fstl
inc
outsl
xchg
cmp
inc
sbb
xrelease
mov
test
xchg
cwtl
and
gs
fimull
mov
subb
mov
pop
iret
mov
pop
test
sub
inc
pop
adc
lcall
enter
gs
xchg
and
adc
cmp
aaa
inc
sub
stos
mov
push
sub
add
pop
sub
les
push
push
enter
aam
jp
dec
sub
sbb
lods
iret
and
mov
adcb
dec
pop
add
xchg
cli
loope
jecxz
pop
pop
aas
sub
xor
push
fcoms
sub
sub
mov
add
or
fstps
sarl
sub
repz
sub
mov
xchg
push
inc
int3
xlat
pop
sar
insl
inc
sbb
push
xorl
rcrb
pop
adc
shrl
jge
bound
sub
mov
pop
push
cmp
xchg
xor
mov
bound
xor
int
ds
sbb
ror
mov
pop
insb
jmp
lret
fsubr
call
or
cmc
mov
inc
roll
test
jno
inc
jl
dec
add
push
push
mov
inc
lahf
ret
cltd
dec
arpl
movsl
mov
and
insl
dec
inc
inc
xor
mov
aaa
pop
mov
inc
pop
and
or
imul
call
inc
rcrb
lock
mov
aam
fbld
push
shrb
shrl
jae
inc
aaa
push
mov
das
mov
mov
test
dec
inc
leave
rorb
pop
and
pop
dec
or
and
aam
into
cmp
push
sub
dec
push
cltd
test
repz
push
add
xor
ljmp
inc
push
lret
and
mov
into
jmp
aas
int
push
lahf
lret
dec
test
mov
sbb
or
test
dec
scas
mov
mov
rorl
in
fdivs
ret
cmpb
jne
or
sub
add
clc
dec
dec
call
or
addps
push
testl
cmpsl
push
or
cmp
jmp
mov
lods
pop
fisubl
movsl
pop
push
ret
daa
pop
pop
stos
addr16
das
xor
adc
rcr
cmp
imul
divl
jb
jae
inc
rcrb
add
dec
sbb
or
cmp
popa
rorb
xor
mov
or
push
sub
mov
jmp
inc
lods
loopne
filds
inc
sbb
mov
dec
pop
das
jo
xor
push
dec
xor
lods
xorl
push
inc
or
std
mov
xor
sti
dec
dec
dec
cmpsl
mov
pop
sub
sub
ret
sub
insb
pop
inc
sbb
aas
mov
aad
leave
sti
mov
jae
sub
imul
inc
leave
sbb
xchg
cltd
in
rdtsc
scas
inc
xchg
or
jns
and
in
dec
xchg
dec
lods
sbb
dec
push
mov
xlat
jmp
dec
xor
pop
jno
xor
movsl
test
shl
into
subb
xchg
inc
mov
xchg
add
pushf
lods
lds
sub
jl
and
leave
inc
rcl
dec
jmp
test
call
add
add
xchg
mov
xlat
sbb
cmp
aad
mov
sbb
rclb
dec
ret
adc
ret
loop
pop
adc
ss
roll
jl
dec
pop
cmpsb
or
cmp
or
jg
das
xlat
cmpsl
clc
aas
xor
inc
xor
sub
dec
dec
pop
and
xchg
in
pop
or
mov
fimull
push
push
xor
sub
repz
mov
call
or
dec
xor
pusha
insl
leave
dec
pop
mov
mov
dec
jl
cmp
mov
push
adc
add
push
adc
mov
and
mov
lret
mov
leave
sub
mov
xor
push
rcl
shrb
push
sub
mov
pop
shrb
dec
xchg
or
adc
or
xchg
pop
add
ret
mov
maxps
xor
test
push
xor
fildll
or
lret
rorb
push
inc
inc
insb
xor
sub
xor
xor
push
inc
js
jge
and
fcomps
movsb
and
ret
or
jno
mov
enter
xor
pop
sarl
and
sub
push
es
repz
mov
xchg
in
mov
pop
pop
dec
imul
jno
jno
sbb
faddl
shlb
xchg
rcll
push
xor
rcrl
imul
pop
jg
cmp
mov
mov
cmp
out
insb
mov
das
je
into
imul
cmp
xchg
adc
push
adc
mov
and
fwait
shlb
mov
push
xor
mov
push
xor
push
mov
sbb
cli
jns
dec
lret
test
adc
push
cmpsl
aas
dec
test
sbb
jbe
push
leave
dec
in
pop
imul
faddl
and
push
loop
add
sbb
mov
ror
outsb
loop
dec
fsubrs
push
movsb
bound
ja
mov
insl
or
xchg
cmp
lret
insb
jl
imul
sub
adc
pop
or
and
test
lds
and
pop
orl
push
push
inc
add
iret
int3
add
icebp
jmp
push
andl
xor
dec
mov
daa
dec
mov
xchg
jae
cmp
jg
and
pop
add
xor
lods
sub
imul
fsts
mov
or
sub
std
roll
mov
shr
and
pushf
dec
dec
call
jge
inc
adc
out
inc
rcrl
xor
repz
sbb
jle
mov
lret
jmp
mov
je
inc
movsl
mov
xchg
dec
data16
outsl
mov
and
int3
sub
test
and
dec
cmpsb
add
ret
call
push
sub
daa
inc
push
add
pop
adc
lock
xor
and
mov
mov
das
xchg
adc
inc
add
arpl
das
mov
pop
mov
orl
adc
mov
inc
cmpsb
pop
enter
testl
rcrb
rorl
lds
out
xchg
pop
inc
call
inc
imul
dec
sub
cwtl
xchg
testl
sti
in
push
push
lahf
leave
xor
mov
out
lret
add
call
xchg
dec
add
jae
sub
pop
es
mov
ss
shrb
testb
rcrb
inc
mov
cmpsb
or
xchg
testb
xor
push
mov
insb
push
inc
inc
xchg
jb
inc
and
pop
adc
sub
mov
enter
fs
in
pop
inc
jnp
cmp
sub
jmp
cmp
push
ret
mov
dec
notb
js
lret
or
mov
mov
and
add
ret
xor
iret
cmpsb
inc
mov
ret
xchg
sub
add
fmull
jecxz
sub
cld
lods
pop
fwait
inc
lret
loop
inc
inc
xchg
notb
js
sbb
bound
sub
mov
inc
push
lret
fiaddl
push
pop
leave
stos
mov
pop
inc
enter
pop
pop
dec
imul
xlat
pop
sahf
test
lret
cmp
test
xchg
lret
xchg
mov
inc
jmp
mov
popa
push
pop
push
or
lods
xlat
aas
push
ret
push
fistl
push
das
or
shl
mov
call
iret
push
xchg
or
into
jmp
adc
push
and
inc
pop
mov
fistpll
push
and
call
inc
sarl
or
inc
push
out
and
js
xor
pushw
inc
dec
xchg
pop
xor
jecxz
pop
pop
mov
pop
mov
shll
ret
dec
clc
sub
int3
fimull
sub
pop
push
jb
ficoms
inc
inc
rolb
mov
inc
sahf
shrb
sub
loope
xchg
insb
stos
fcoms
enter
sbb
inc
xor
cs
sub
mov
inc
fwait
push
cmp
inc
rcll
filds
push
sub
lea
xchg
adc
pop
push
or
das
xor
rorb
inc
adc
fisttpll
popa
sub
and
mov
dec
or
sub
cltd
lods
lret
aas
adc
leave
mov
lds
mov
and
dec
leave
enter
inc
or
pushf
int
add
mov
xchg
pop
adc
dec
dec
inc
iret
cmp
lea
mov
cmp
lret
mov
pop
rorl
cmp
or
sbb
fiaddl
hlt
fwait
push
cmp
pop
sub
adc
imul
lret
rolb
cwtl
fld
insb
mov
cmp
leave
xchg
es
lods
cltd
inc
pop
sub
inc
jb
xor
xor
adc
push
xchg
cmp
add
xor
pop
xor
test
mov
mov
shrl
xchg
addl
lds
cld
sbb
clc
pop
or
mov
div
rorl
jo
rorb
xchg
lret
jge
dec
imul
imul
adc
rcrb
pop
inc
or
pop
repz
mov
lahf
ja
xor
imul
jb
pop
jmp
pushf
int3
push
imul
xor
push
sub
cmpsl
bound
inc
mov
pop
mov
push
dec
leave
ja
es
test
and
push
dec
mov
enter
inc
dec
pop
or
out
push
add
adc
movl
xor
jecxz
fwait
pop
mov
add
gs
pop
into
shll
data16
sbb
xchg
pop
mov
iret
pop
and
dec
addb
push
stos
mov
fwait
dec
stos
lods
or
sub
pop
outsb
int3
fimull
dec
notl
ja
xor
sub
fcmove
jl
mov
sub
leave
adc
sti
enter
je
push
xchg
test
stc
or
sbb
fisttps
test
jnp
pop
test
or
dec
or
push
cli
pop
push
sub
ficoml
shll
sub
mov
fcmove
lock
adc
push
into
or
test
imul
fstpl
xchg
mov
push
jle
and
and
dec
add
dec
jno
dec
data16
dec
mov
fimuls
push
fisttps
cmp
cmpsl
push
leave
mov
inc
xor
jle
xchg
pop
lret
jmp
neg
insl
and
lock
jns
pop
push
adc
insb
std
inc
dec
jg
or
push
dec
lret
call
cmc
or
sub
lret
xchg
pop
fnsave
push
lods
ja
xchg
inc
cmp
pop
pop
pop
jb
lods
mov
push
push
cmp
dec
testb
mov
jae
inc
inc
jmp
adc
mov
sub
mov
and
xor
rcrb
cwtl
cmpsb
inc
pop
rol
lahf
pop
xor
lods
inc
rclb
push
rclb
cmp
xlat
push
rcll
add
push
push
mov
dec
adc
inc
insl
mov
inc
sub
jns
mov
mov
sbb
and
xlat
inc
push
cmp
sub
or
in
xor
sbb
jnp
mov
ret
pop
jb
fisttps
sbb
cltd
mov
push
jmp
dec
es
jg
ret
push
pop
dec
push
lcall
and
fstl
pop
stos
and
das
pop
inc
fldcw
sub
sti
lret
inc
dec
jae
mov
leave
dec
pop
aad
int
pop
leave
sub
call
decb
dec
call
aas
enter
dec
int
pop
inc
sbb
adc
enter
mov
pop
das
pop
push
add
mov
leave
push
rorb
push
shlb
xchg
xchg
cmp
ficoms
rcll
insb
pop
dec
add
pop
dec
xor
push
xlat
xchg
xchg
sbb
xor
loope
dec
push
cs
iret
lock
push
or
stos
cwtl
cmp
sub
add
adc
mov
dec
dec
lds
mov
mov
cs
add
dec
lods
jno
lret
iret
push
mull
xchg
push
aad
cmp
into
xchg
or
rorb
pop
das
int
xor
dec
fdivrl
xchg
inc
out
das
sub
shrb
mov
shr
xor
hlt
int3
inc
sti
inc
jl
lock
insl
mov
xchg
shrl
push
xor
xor
push
sti
fcomps
sub
imul
jl
rolb
pop
fistps
call
int3
pop
dec
dec
dec
into
aaa
mov
jno
pop
dec
pop
in
mov
jl
sub
or
aad
mov
pop
lods
cmp
movsl
pop
pop
lds
dec
mov
inc
cmp
clc
push
sbb
lods
enter
pop
add
fidivl
lods
xor
dec
sub
addr16
mov
out
push
fidivs
shlb
mov
dec
xlat
jl
pop
sarb
xor
fcmovnbe
stc
fiaddl
ja
dec
aam
xor
outsb
cmp
xchg
es
call
and
cmp
insb
outsb
adc
or
push
imul
clc
outsl
insb
and
pop
mov
cmp
xchg
dec
or
push
add
dec
dec
dec
dec
pusha
xor
mov
jmp
outsb
dec
dec
adc
dec
out
into
bound
ffreep
jno
das
rcrl
call
or
dec
dec
in
dec
fisttps
lahf
adcb
imul
enter
fnstsw
xor
fstl
pop
fnstcw
inc
inc
push
adc
add
aaa
push
mov
or
or
or
ja
pop
in
push
pop
shrl
sub
loopne
jmp
dec
les
inc
xchg
das
out
pop
test
push
lock
lret
orl
test
mov
push
sbb
lods
xchg
icebp
enter
movsl
pop
inc
loopne
lock
or
rcrb
inc
insl
icebp
out
fcom
das
cld
aam
pop
mov
ss
leave
sbb
cmp
dec
xchg
mov
aaa
fwait
roll
lret
mov
sbbb
leave
adc
loop
pop
jae
push
scas
call
enter
mov
push
sbb
fistpll
or
xchg
loopne
push
mov
inc
enter
and
mov
mov
lock
jmp
neg
leave
pop
mov
xor
xchg
out
int
mov
xchg
fcmovne
sbb
and
cbtw
rcr
inc
or
xor
and
mov
sub
ret
adc
gs
dec
fwait
xor
addps
jge
mov
dec
jle
aaa
hlt
outsb
dec
inc
mov
arpl
aam
fstpl
sahf
and
pop
lret
jmp
xor
das
sub
leave
mov
xchg
aam
pop
imul
mov
inc
inc
sub
icebp
aaa
rolb
or
inc
jmp
repz
mov
mov
jmp
test
dec
test
mov
arpl
xor
dec
mov
aad
addr16
and
sbb
loope
fxam
movsb
lods
stc
inc
fstpt
xor
dec
gs
popa
enter
jmp
inc
and
xlat
imul
imul
jl
call
into
adc
push
lds
int
stos
add
adc
stos
das
push
out
pop
pop
call
sub
out
sbbl
xor
xchg
fadds
lret
dec
mov
or
scas
sbb
inc
test
pop
pop
sub
inc
cmp
or
and
or
ret
pop
add
mov
cmp
push
cmp
mov
stos
sub
loope
adc
movsl
lds
mov
stos
out
adc
dec
dec
lcall
inc
or
add
aad
std
cmc
into
mov
sti
fdivl
adc
insb
cmp
and
shrl
cs
add
insl
mov
jnp
insl
aam
xor
xchg
and
push
ss
adc
inc
lds
push
stos
jo
or
mov
frstor
pop
das
mov
je
mov
jbe
inc
or
xor
xchg
aam
inc
call
cmp
push
mov
fldcw
rorb
fldenv
inc
cmp
sbb
sub
out
fisubrl
push
adcl
rcll
and
subb
nop
inc
outsl
lock
jo
jno
mov
movl
rorb
push
or
bound
ss
fcmovb
sub
pusha
testl
push
insl
mov
inc
adc
inc
mov
nop
or
or
fwait
push
bound
fstl
mov
dec
scas
xchg
jae
loopne
cmp
add
ret
hlt
xchg
rorl
cmp
push
dec
fwait
cmp
xor
sub
cmp
shlb
stc
jmp
dec
mov
and
cwtl
and
sbb
aaa
ret
dec
dec
out
clc
push
push
mov
inc
pop
sub
push
sub
ror
push
pop
inc
scas
dec
or
xchg
mov
mov
lock
pop
or
lds
shrl
mov
push
add
les
sbb
push
or
inc
or
notb
aas
sbbl
and
int
dec
rol
xchg
xchg
imul
jno
inc
pop
and
lods
push
insb
rcrb
icebp
lods
test
pop
xor
int
mov
sbb
sub
inc
aas
cwtl
and
mov
inc
fwait
test
rorl
pop
hlt
clc
lret
or
sub
les
sbb
dec
enter
inc
push
push
jnp
aad
stos
pushf
sub
repz
sahf
sti
out
rcl
call
add
dec
pop
dec
enter
pop
stos
mov
inc
aaa
outsb
clc
pop
lret
cmc
sbb
stc
and
xchg
xchg
and
mov
lock
cmp
xor
xor
mov
mov
xchg
xchg
sub
int3
adc
xchg
inc
or
ret
pop
pop
pop
mov
int3
jmp
hlt
aad
imul
and
mov
das
rcl
inc
aad
inc
cmp
adc
popa
cmp
in
pop
lods
dec
dec
fldl
push
pop
inc
pusha
mov
stos
or
sbb
add
sub
mov
or
mov
mov
cmpl
call
mov
das
mov
and
and
insl
inc
sbb
fcomi
mov
pop
sub
rolb
sarb
addb
dec
dec
loopne
push
push
jae
std
das
mov
ret
insb
insb
pushf
mov
and
enter
inc
jmp
leave
xor
dec
dec
imul
dec
aas
int
mov
shrl
je
ret
xchg
into
add
rcrl
sahf
inc
shl
stc
sbbl
jb
repz
imul
dec
fcomps
dec
mov
sub
scas
bnd
sub
sbb
inc
push
int
int3
xchg
xchg
enter
rcll
enter
mov
and
cmp
ret
push
cmp
sahf
jle
sbb
push
int
add
dec
ret
pop
call
pop
popa
push
nop
mov
or
frstpm(287
loope
sub
dec
jmp
imul
push
fcompl
mov
fldl
ds
or
fcmovu
pop
pop
insl
imul
and
faddl
sbb
test
sub
sti
pop
add
inc
flds
pop
dec
or
cmpb
pop
movsl
pop
pop
pop
push
fistpll
jmp
mov
jle
enter
cld
int3
pop
dec
sub
mov
xor
in
xchg
dec
adcb
fst
imul
push
adc
adc
stc
das
push
je
fisttpl
mov
cmp
roll
movsl
pop
aad
mov
faddl
movsl
cs
fwait
dec
dec
imul
lock
js
das
and
notb
dec
outsl
xchg
jmp
into
scas
inc
rolb
cmp
add
dec
into
pop
rol
in
mov
and
jbe
enter
les
xchg
xor
sub
jb
decl
adc
adc
rcll
cwtl
into
add
mov
jle
dec
dec
ss
push
jae
mov
push
push
jnp
pop
pop
or
ffreep
inc
jo
mov
inc
aad
xchg
mov
mov
push
xor
cwtl
out
pop
data16
fcoml
push
enter
test
push
jl
imul
and
pop
ffree
lods
fistpl
jmp
push
gs
pop
push
scas
stos
shlb
fldcw
pop
mov
inc
inc
ds
xchg
pop
pop
pop
fstl
xor
stos
in
xchg
inc
dec
js
cmpsl
rorb
sti
mov
dec
sub
int3
push
mov
mov
xlat
imul
pop
push
jb
push
xchg
fisubs
mov
dec
sarb
dec
or
add
dec
aas
ret
cmp
sub
test
loop
out
fildl
push
scas
xor
xor
shl
jmp
pop
push
jge
mov
icebp
sub
push
scas
test
test
push
push
dec
call
pop
dec
movl
add
faddl
inc
sub
pop
mov
pop
adc
or
xchg
xor
jle
jmp
inc
sub
mov
stc
and
push
dec
sub
sub
mov
mov
or
mulb
cmp
and
xchg
add
dec
pop
cmpsl
rcrl
es
push
aaa
mov
push
fisubrl
sbb
movb
pop
dec
xchg
scas
sub
pusha
sub
ror
leave
add
jae
pushf
pop
pop
pop
fisttpll
xor
pop
ror
lods
mov
cwtl
ss
inc
popa
fnstcw
sahf
ret
pop
cmp
out
lock
je
cmp
xchg
jo
xchg
sbb
iret
inc
dec
in
inc
roll
xchg
and
pop
lods
rolb
enter
leave
insb
sub
inc
mov
test
comiss
mov
pop
lret
sbb
dec
dec
push
lret
ror
mov
inc
sub
sbb
popa
mov
adc
mov
sub
cmpb
sub
fisttpll
pop
mov
xor
pop
xchg
test
movl
leave
push
sbb
pop
dec
cmp
dec
pop
stc
pop
int3
shrl
popa
push
cli
push
fildll
pusha
test
dec
pop
fildll
sub
xor
icebp
rcrl
mov
and
ret
mov
es
enter
mov
add
sbb
out
pop
aad
add
cmp
sub
add
dec
stc
lods
roll
dec
mov
mov
push
inc
mov
inc
sub
xor
mov
fistl
clc
or
dec
inc
xor
xchg
sub
inc
add
pop
mov
inc
push
push
sub
pop
jae
pusha
xor
movsl
pop
sub
rorl
pop
mov
lret
icebp
repz
fldcw
je
mov
roll
push
es
lds
mov
cld
clc
rorb
loopne
popa
add
inc
pop
mov
pushf
sub
push
pop
dec
mov
jnp
sbb
add
or
pop
adc
popf
ja
shrl
sub
xchg
jmp
imul
dec
out
add
mov
xchg
repnz
jecxz
sbb
mov
dec
jmp
xor
inc
dec
or
pop
out
xor
pushf
inc
insb
imul
dec
lahf
scas
lock
xor
enter
pop
fsub
inc
dec
inc
adc
shrb
adc
test
dec
pop
inc
fistl
xchg
mov
enter
push
and
xor
mov
loope
das
roll
pop
mov
xchg
popf
and
or
sub
call
inc
inc
inc
push
int
out
lock
pop
inc
xchg
dec
jg
das
nop
jmp
xchg
dec
jno
pop
inc
xchg
js
and
push
pop
pop
aam
les
sub
pop
fs
cmp
jle
jmp
pop
stos
adc
or
push
cmp
mov
lods
in
pop
inc
lret
mov
xchg
mov
dec
popa
mov
pop
xchg
movsl
je
leave
jg
dec
adcb
pop
sbb
cmp
out
or
xchg
lcall
adc
or
fidivrl
push
xor
int3
aad
xor
lock
lods
ja
fldenv
xor
jno
js
std
fistps
test
cmp
cmp
das
je
inc
sbb
inc
mov
or
int
fs
mov
xchg
sbb
std
inc
leave
mov
add
or
inc
xor
test
jge
or
lds
mov
sub
push
inc
push
or
push
pop
rolb
xchg
es
aam
dec
sub
xorb
sbb
stc
lret
mov
dec
cld
lock
out
mov
dec
fimuls
cmp
xlat
inc
inc
idivl
inc
jmp
aad
xchg
push
fcmove
mov
testb
fwait
repz
or
pop
roll
mov
adc
pop
ret
fs
inc
xor
sbb
out
aaa
dec
nop
cmc
fisttpll
pop
loopne
and
xchg
mov
sub
cltd
cmp
pop
xor
push
inc
mov
jae
mov
test
aad
test
jnp
pop
add
mov
dec
stc
rcl
mov
xor
mov
inc
imul
xor
dec
push
xchg
push
dec
es
add
jmp
add
sub
movsb
or
aad
jno
int
adc
jmp
push
ficomps
cli
and
push
adcb
outsl
xor
dec
dec
mov
dec
cmp
mov
stc
lcall
aaa
xlat
sub
mov
imul
vprotw
and
add
inc
sub
adcb
aas
ss
push
pop
dec
sbbw
dec
and
push
lods
cmp
dec
add
sub
fwait
push
dec
leave
fisubrs
ss
dec
loop
push
pop
inc
stos
cmp
sahf
jo
imul
mov
cmpsl
or
add
sbb
pop
jge
mov
mov
push
insl
cld
xor
jo
adc
sub
xlat
bound
imul
cmp
lret
stc
push
add
pop
cmp
xchg
cmp
inc
leave
or
push
dec
inc
and
repz
inc
pop
or
sub
rorb
or
mov
sbb
mov
dec
push
fsubl
test
sub
cmp
mov
aas
ficoml
inc
sub
pop
dec
leave
sub
xor
fcomps
int
fnsave
lods
int
inc
je
sbb
dec
clc
push
cmc
lret
jmp
fcompl
aaa
jge
dec
mov
mov
cmp
or
adc
enter
sub
jmp
push
in
inc
or
sub
in
mov
xor
dec
in
leave
add
sbb
sub
aad
fwait
inc
or
outsb
xlat
pop
inc
or
dec
sub
rcrl
inc
hlt
mov
inc
push
dec
push
adc
cmc
adc
mov
je
aam
imul
jb
sub
dec
dec
pop
aas
adc
mov
mov
push
push
and
ds
xorb
mov
out
or
cmpsl
xchg
sub
inc
fstl
mov
pop
jmp
adc
das
mov
test
jecxz
test
inc
int
inc
xor
mov
cmp
sub
xlat
jg
rolb
mov
cmp
es
enter
ret
inc
lret
cmpsb
cmpsl
outsb
inc
mov
inc
xor
sub
fdivl
inc
cmc
or
mov
sub
fistpll
stc
js
fsubrl
loop
jae
cmp
inc
or
add
dec
dec
inc
clc
mov
lret
cltd
push
mov
dec
lods
scas
mov
cmp
push
scas
cmp
cmp
sarb
jne
cs
xchg
enter
cmc
dec
cmp
inc
fistps
mov
sarl
dec
or
push
dec
dec
inc
xor
push
imul
lcall
pop
divl
sub
sbb
or
fnstsw
mov
dec
call
jle
mov
shll
cmp
mov
rcl
and
inc
loope
shlb
sub
jl
lret
xor
jae
and
inc
adc
mov
fldcw
mov
dec
test
pop
xlat
cli
pop
sub
mov
add
sahf
jg
adc
inc
push
push
push
sub
jo
push
xlat
andb
fistpll
or
dec
stos
xchg
xor
adc
arpl
pop
dec
xor
adc
enter
out
sub
fsts
pop
stc
lret
mov
das
fwait
push
ret
test
lods
mov
mov
jnp
push
adc
dec
dec
push
mov
jns
and
idivb
dec
aaa
and
xlat
sbb
mov
or
je
enter
push
jno
shll
mov
sub
into
and
aad
xchg
dec
dec
fsubr
and
xlat
lea
lods
sub
and
and
das
pop
rcrb
notb
xor
shl
comiss
jb
jno
enter
xchg
enter
xchg
inc
add
xor
es
cmp
repz
mov
into
push
out
xlat
cmp
iret
add
adc
das
push
mov
fisttps
inc
cmp
daa
fisubl
repnz
sub
jns
pop
jmp
ret
push
mov
aad
shl
ljmp
in
xlat
jp
loope
pop
add
xchg
arpl
enter
adc
jmp
dec
xchg
dec
mov
mov
pop
mov
push
jns
cs
clc
and
sub
sub
aaa
pop
test
enter
fwait
or
mov
inc
xlat
and
push
inc
cmp
dec
push
or
inc
leave
in
cwtl
aas
fisubl
xchg
popa
mov
dec
mov
jle
rorl
sahf
icebp
das
xchg
push
fcomi
sbb
movb
mov
pop
rorb
pop
mov
push
pop
mov
xor
ss
das
cltd
sbb
inc
and
bnd
push
jns
enter
mov
sub
js
mov
faddl
insb
dec
jge
inc
fmull
jp
lret
leave
sub
out
push
inc
and
out
stc
push
jns
das
enter
sub
jmp
jnp
and
das
mov
xlat
mov
jnp
aam
hlt
dec
push
mov
sbb
or
push
clc
lods
sbb
pop
data16
pop
inc
push
dec
pop
push
inc
mov
rcll
jae
xchg
push
jp
cmc
dec
inc
push
sub
push
arpl
or
adc
test
mov
das
jb
mov
jnp
inc
stos
cmp
ror
int
xor
inc
push
fiadds
sbb
and
jecxz
jne
xchg
inc
sub
shlb
inc
cmp
mov
sub
mov
cmpsb
jae
sub
and
cmc
inc
sub
arpl
xchg
sub
cmc
int
inc
scas
leave
dec
push
hlt
sub
lods
mov
rclb
mov
out
mov
dec
mov
pop
pop
enter
enter
push
pop
adc
lret
js
roll
sub
mov
lds
sbb
rcrb
xchg
dec
jl
cmp
jo
dec
inc
sahf
pop
aam
xor
lcall
cmp
clc
mov
xlat
add
push
arpl
es
aad
xor
cli
sarb
cmc
xor
rol
xor
popa
ficoml
xchg
clc
dec
push
sub
mov
aad
fcompl
ja
push
into
lret
dec
inc
call
fcoml
call
test
or
in
pop
inc
mov
pop
push
add
xchg
push
int3
jo
dec
dec
xorb
js
in
pop
shll
dec
pop
sub
in
push
shrb
pop
add
inc
or
jmp
cmova
inc
mov
pushf
lret
pop
inc
enter
sub
push
insb
push
test
cmp
pop
inc
insl
aaa
pop
imul
insl
xor
enter
cwtl
dec
dec
push
mov
xor
sbb
lret
rcll
or
push
inc
inc
add
outsb
movsl
push
mov
and
jae
add
dec
scas
mov
sub
rolb
dec
dec
add
das
ss
insb
push
popa
xchg
enter
jnp
sbb
jmp
jmp
lret
xchg
xchg
sub
lods
icebp
inc
aad
das
pop
xor
lods
xchg
scas
mov
stc
dec
add
or
xor
mov
into
inc
repnz
in
inc
pop
xchg
and
imul
out
fmull
loope
mov
jle
xor
ja
lods
adc
fcoms
and
pop
aas
mov
aas
mov
jp
cmp
mov
cmp
lods
fadd
pop
lods
sub
inc
movsl
adc
xchg
push
and
imul
aam
pop
into
or
push
inc
ficoms
or
mov
pop
out
sub
mov
aaa
es
ja
mov
push
dec
hlt
loope
lods
add
leave
ss
sar
dec
cmp
imul
pop
movsb
and
fldl
inc
dec
cmp
sub
inc
aad
pop
sbb
int3
or
mov
push
dec
shll
inc
insl
rcr
or
dec
push
cmpsb
inc
or
in
repnz
xchg
dec
push
xor
insl
stos
mov
xchg
lret
bound
and
xchg
or
adc
arpl
push
inc
scas
shlb
dec
mov
push
and
cmpsl
push
pop
add
pop
es
ror
xor
inc
enter
and
les
add
lret
pop
inc
mov
lea
mov
mov
hlt
dec
ret
jmp
nop
push
add
flds
add
pop
sub
into
jmp
outsl
jne
push
sub
jno
or
in
inc
pop
roll
mov
shlb
cmpsb
movsl
inc
cltd
sub
popa
sub
icebp
mov
sub
lret
push
mov
out
dec
dec
jge
shlb
jae
xor
adc
mov
gs
enter
and
cmc
jns
dec
mov
ljmp
pop
repz
push
cmp
mov
push
sbb
mov
mov
push
mov
xchg
push
cmpsb
fcompl
dec
out
loop
sbb
lods
or
push
dec
out
sbb
adc
and
push
int3
imul
ret
xchg
adc
pop
shrb
lahf
dec
pop
shl
inc
mov
mov
inc
lods
movsb
mov
mov
std
ret
pop
pop
and
mov
adcl
and
add
loope
xlat
push
sarl
je
repnz
inc
inc
inc
or
jb
insb
mov
push
rclb
adc
fidivrl
xchg
mov
gs
repz
enter
fcmovnb
scas
lds
jmp
xlat
xor
inc
in
dec
sbb
mov
push
test
fiaddl
dec
mov
das
mov
inc
mov
rcrl
and
xor
lds
call
and
outsl
inc
lret
rolb
jae
leave
xor
cld
imul
es
and
dec
pop
pop
sub
mov
dec
push
repz
orl
sbb
or
push
ret
sbb
push
cli
inc
lret
lods
sub
mov
sarl
mov
jb
dec
outsl
mov
pop
fnstsw
scas
and
dec
mov
dec
fs
mov
les
ss
and
enter
bound
nop
fwait
inc
addb
inc
das
push
aas
test
push
and
jae
aad
mov
or
xchg
push
add
inc
out
xchg
bound
aad
cltd
and
push
sbb
mov
inc
or
lcall
dec
mov
in
hlt
sbb
mov
fildll
mov
ror
and
nop
jge
dec
dec
arpl
push
popf
adc
call
sbb
cmpsl
pop
dec
inc
outsl
nop
dec
jg
dec
rolb
das
ja
stc
xchg
pop
mov
addsubps
add
cmpsb
mov
xor
sub
inc
lods
rolb
push
ret
mov
movsl
aas
mov
sbb
mov
jb
fisubl
xchg
sub
dec
mov
mov
cmp
adc
clc
push
cmpsl
out
fstps
fst
jmp
and
pop
inc
imul
pop
ror
jne
pushf
ret
and
xor
or
dec
dec
mov
pop
xor
sti
ret
mov
movb
inc
ret
lret
xchg
and
add
sub
jp
push
push
push
leave
and
cmp
leave
pop
insl
and
imul
out
xor
scas
adc
mov
call
push
dec
gs
jb
fadds
jnp
xchg
push
pop
insl
sub
ret
repz
inc
ficoml
push
rorl
outsb
sub
adc
dec
or
iret
xor
xchg
fldcw
aam
pop
stos
xchg
adc
xchg
jle
pop
fstl
mov
fbld
outsb
data16
pop
dec
sbb
aaa
imul
sbb
or
mov
pop
inc
sub
jp
lret
pop
ret
xchg
dec
lahf
out
push
dec
test
push
pop
enter
mov
repz
jge
rorl
mov
out
cmp
popa
xchg
mov
sub
add
push
xchg
ret
cmp
pop
gs
out
rcr
push
adc
lock
jp
lock
mov
rol
mov
dec
sub
dec
iret
mov
pop
dec
jmp
aam
xor
pop
enter
mov
fwait
pop
add
jle
iret
mov
test
mov
fisttpll
or
dec
in
test
ret
repz
test
push
mov
aas
and
sbbl
sub
sbb
int3
ret
pop
jmp
add
stos
push
jne
inc
xlat
loopne
lods
and
leave
dec
fptan
das
adc
push
popf
cmpsb
inc
push
test
mov
lock
imul
or
push
movsb
je
rorb
insl
mov
dec
jne
inc
or
gs
add
mov
or
pop
movl
mov
jb
movl
sti
scas
je
dec
lods
ret
xchg
fwait
inc
dec
mov
add
test
je
dec
dec
enter
aaa
inc
mov
jcxz
sub
push
sub
pop
data16
subl
sbb
pop
cmp
inc
pop
sub
hlt
pop
inc
xchg
das
mov
in
rcrb
pop
push
pop
mov
xchg
add
ror
cmp
stc
cmp
cmp
rcrb
inc
ds
dec
cltd
xor
scas
sub
and
inc
into
jae
mov
lods
pop
cmp
das
inc
xchg
loope
adc
insl
insl
in
jmp
cmp
das
push
lds
cs
fisubrl
cli
dec
shll
dec
xlat
push
dec
pop
jmp
mov
mov
rorb
mov
call
xlat
hlt
cmp
xchg
hlt
loopne
nop
cmp
test
dec
inc
ret
fwait
rorl
jmp
pop
fisubrl
xor
icebp
enter
ficoml
and
lods
sub
mov
fadds
das
jb
aaa
in
shll
sbb
pop
jmp
jmp
dec
pop
and
xor
dec
pop
jge
push
xor
pop
dec
jg
dec
jecxz
pop
aad
mov
imul
pop
loopne
ficomps
jns
jb
adc
mov
rcr
daa
xor
dec
dec
repz
inc
repnz
inc
push
in
stos
mov
add
sub
dec
and
test
pop
es
xchg
push
mov
fstpl
lods
mulb
dec
inc
cmp
adc
pop
clc
xor
inc
xchg
pop
mov
flds
cmc
mov
xor
xlat
cmp
loopne
jmp
jmp
insl
clc
cs
cmp
mov
outsl
adc
dec
inc
xor
adc
dec
adc
inc
shl
or
jno
pop
inc
outsl
arpl
pop
dec
push
movsb
xor
pop
or
loop
cmp
inc
dec
adc
dec
enter
pop
push
xor
pop
jle
into
cltd
sub
pop
xor
jmp
mov
or
popa
pop
xchg
dec
add
lods
stos
sub
fldl
sub
dec
xchg
push
dec
inc
xchg
pop
mov
les
dec
sub
mov
in
jp
dec
or
rorb
stos
imul
aad
call
push
sahf
sub
dec
dec
mov
movsb
push
sub
sbb
mov
aam
ret
mov
xchg
adc
lock
test
xor
mov
dec
inc
xor
ret
inc
stos
and
pop
lret
out
xor
push
cli
push
push
push
dec
inc
andb
dec
sub
push
mov
or
gs
or
cmp
sub
loop
or
cmp
sbb
dec
enter
das
inc
enter
mov
cmp
jo
xor
dec
sub
push
enter
fidivrs
bound
sub
lea
or
sbb
push
aad
pop
sub
inc
and
and
pop
ret
add
xor
add
es
or
sbb
xor
lret
xor
into
mov
jecxz
imul
cmp
ret
pushf
int3
pop
sub
rorl
pop
fwait
dec
lret
jmp
nop
xchg
stos
pop
sahf
jmp
loope
pop
mov
out
stc
cmpsb
dec
dec
mov
or
shrb
ret
imul
ret
push
enter
sub
sub
pop
les
std
imul
mov
pop
add
sbb
dec
hlt
inc
jns
xor
out
inc
inc
cmp
jecxz
add
sbb
mov
pop
sbb
sub
sub
stos
repnz
js
or
mov
lods
inc
push
jmp
sbb
int
addb
mov
stos
test
int
sub
or
ret
xor
push
push
xchg
jo
xor
adc
cld
out
push
push
imul
mov
mov
clc
dec
test
jns
notb
or
fmul
jne
jae
push
outsl
mov
roll
sbb
mov
mov
ret
or
insb
dec
shll
aas
das
pop
ret
add
push
inc
inc
jle
rorl
sbb
pop
push
es
inc
push
inc
add
mov
mov
shr
mov
push
inc
inc
es
enter
push
cmpsb
lock
inc
add
enter
stc
jge
fisttps
and
xchg
add
xlat
pusha
fcomps
and
aaa
and
aad
push
jge
cmp
cmp
rorl
cmpsl
insl
mov
out
iret
dec
je
dec
repz
and
aad
adc
push
push
es
into
pop
mov
adc
jmp
sbb
jno
push
dec
push
das
into
pop
pop
sub
dec
mov
sbb
fnsave
dec
mov
pop
add
lods
dec
dec
dec
bound
push
and
dec
sub
aaa
pop
movsl
push
jl
pop
enter
and
test
rcrl
push
mov
inc
stc
pop
dec
sbb
dec
xchg
push
cmp
and
insb
pop
pop
stos
xor
add
inc
sahf
sbb
push
out
test
push
lret
or
das
les
clc
cmpsb
or
pop
mov
jmp
mov
dec
das
aad
cmc
or
enter
push
insl
bound
inc
inc
test
cltd
inc
cld
push
dec
jns
inc
mov
xchg
int3
push
mov
inc
popf
pop
sbb
stc
xor
movl
sub
add
xchg
les
cltd
mov
push
jle
cmp
jmp
push
pop
and
inc
add
jae
cmpsl
sahf
mov
fnsave
inc
pop
mov
xchg
push
repz
inc
sti
pop
lods
inc
out
aaa
not
pop
add
dec
rorb
gs
insb
fmulp
pop
dec
cmp
and
lock
shl
into
dec
mov
movsl
dec
cmp
fcmovne
dec
mov
mov
pop
mov
xor
sbb
lea
cmp
pop
cmp
sub
dec
scas
mov
dec
fsubrs
inc
subb
cmc
sbbl
inc
jle
ja
pop
insl
enter
cmpsl
xorb
push
cmc
sbb
pop
fistps
inc
dec
xor
and
cs
enter
sub
mov
push
push
aam
stos
and
sub
sub
xlat
pusha
inc
push
jg
pop
push
pushf
lods
pop
xlat
lahf
push
mov
sub
sub
jmp
and
fnstsw
inc
out
dec
js
pop
cltd
xor
inc
xor
push
jg
movsb
or
clc
pop
push
sub
add
dec
fmull
mov
scas
enter
jg
sub
mov
xchg
push
stc
dec
lea
or
ret
push
jecxz
dec
cmpsl
pop
dec
ror
add
jmp
inc
sub
subl
fldcw
adc
mov
xchg
pop
dec
mov
repnz
adc
pop
in
jmp
push
push
and
and
loop
lcall
push
dec
sbb
and
repnz
movsb
and
dec
lret
and
pop
inc
leave
dec
inc
rolb
stos
dec
repz
mov
and
jmp
in
dec
sbb
les
insl
xor
sub
int3
cltd
imul
aaa
test
mov
xor
mov
push
mov
or
ror
ja
push
fstps
fstl
xchg
arpl
push
cmp
cmpsb
mov
xchg
stc
pop
cmp
sub
cmp
pushf
es
inc
mov
sub
dec
sbb
das
dec
leave
imul
fwait
pop
insl
into
in
inc
inc
dec
inc
pop
shrb
in
mov
lds
mov
cmpl
bound
inc
test
xor
jne
cmp
mov
addb
xchg
mov
imul
mov
es
xor
mov
sub
leave
das
jno
bound
dec
jae
shl
push
imul
dec
fwait
das
fimull
lds
fnstenv
inc
or
pop
imul
and
jno
stos
lods
fisttpll
xchg
sub
iret
pop
leave
xchg
nop
jmp
mov
pop
enter
subb
int
ss
and
andw
inc
mov
dec
sti
loop
aas
shr
rclb
mov
test
pop
jmp
dec
xor
cmp
out
imul
push
inc
popa
shll
dec
outsl
out
adc
jne
out
cmp
sbb
hlt
mov
fwait
cs
push
push
and
or
or
out
dec
test
dec
pop
cmpsl
pop
test
dec
pop
popf
and
ret
push
inc
inc
inc
je
jp
mov
and
sub
insl
daa
pop
orb
mov
repz
cmpsl
aaa
xchg
add
add
rol
call
push
cmp
or
shll
inc
mov
jl
add
out
mov
dec
adc
jns
das
rcll
int3
cwtl
push
je
mov
aaa
push
mov
in
mov
rcrb
mov
or
push
cmp
push
rorl
int
mov
mov
repz
lret
insb
lods
inc
imul
jmp
jo
push
push
fstpt
in
insl
xchg
lock
dec
shrb
repz
push
push
ja
inc
push
out
cmp
mov
out
hlt
in
ds
or
sbb
vmovapd
sahf
mov
fcmovne
cmp
dec
dec
sbb
sub
pusha
inc
push
int
xchg
inc
outsb
pop
and
leave
sahf
xchg
or
inc
pop
sub
mov
rol
dec
divl
jle
fldt
xor
dec
insl
out
dec
call
imul
es
adc
mov
lret
and
cmp
dec
mov
and
data16
cmpsb
in
xor
pop
push
push
and
inc
jecxz
mov
lock
repnz
pop
aas
jle
cmp
mov
and
sub
pop
inc
pop
xor
push
xchg
pop
push
or
in
push
adc
dec
mov
dec
ficoms
iret
enter
and
stos
leave
int3
mov
sbb
dec
mov
xor
push
dec
jae
aad
sbb
fnstsw
dec
add
int
shl
jne
and
setb
sub
push
xchg
mov
cmp
fwait
inc
dec
dec
cli
das
inc
mov
jle
push
pop
sbb
ss
icebp
mul
jl
sbb
pop
mov
adc
mov
sti
iret
aaa
inc
pop
mov
arpl
flds
sahf
jo
pop
icebp
daa
pop
repz
test
mov
add
push
and
mov
dec
or
push
ss
xorb
sbb
das
lcall
call
aam
fdivrs
cmc
or
shrl
dec
pushf
orb
jo
insl
mov
pop
mov
fisttpll
dec
lods
cltd
inc
fcoms
xor
push
sarb
mov
inc
and
mov
and
push
lahf
pop
inc
enter
adc
imul
jo
mov
fs
cmp
add
sti
rcr
mov
inc
and
fcmovb
add
insl
mov
pop
mov
inc
out
and
icebp
inc
sub
loopne
add
call
sub
inc
dec
test
pop
xlat
lret
jcxz
imul
call
xor
fisttps
loopne
fmul
test
dec
iret
lods
cmp
adc
inc
test
lret
lock
dec
mov
cmp
leave
arpl
aaa
sub
std
mov
test
mov
jae
ret
scas
fmul
sub
sub
xor
aaa
clc
cmc
push
lret
and
rcll
dec
dec
addl
repnz
sub
mov
pop
or
lret
mov
fiaddl
sbb
cmc
jle
insb
adc
scas
es
test
pop
shrl
lods
xlat
fwait
shrl
xor
hlt
cmp
into
pop
pop
scas
mov
sub
adc
arpl
ret
dec
stos
in
sbb
cmp
push
rorb
sub
lods
add
inc
in
pop
mov
push
or
dec
cmpsl
jp
dec
mov
aas
push
cmp
fmul
sub
cltd
ror
sub
cmp
dec
inc
mov
gs
shl
fists
call
fistpll
loopne
pop
inc
insb
ret
dec
fdivs
push
in
mov
mov
pop
inc
shlb
mov
rcll
jne
adc
pop
inc
adc
mov
repnz
pop
call
test
dec
leave
ret
adc
shl
dec
pop
fisttps
lods
or
cmp
cmp
in
lret
loop
jmp
or
adc
bound
jne
and
pusha
mov
iret
sub
xchg
js
push
rclb
mov
imul
push
aad
in
cld
and
adc
std
aad
jo
push
rcll
leave
inc
mov
cltd
xor
push
or
leave
sbb
add
sarl
mov
sbb
inc
push
in
imul
in
inc
cmp
or
xchg
mov
int3
popa
and
xchg
in
mov
mov
dec
fisttpll
push
test
add
dec
repz
inc
ss
push
push
pusha
cmc
jmp
jmp
jb
dec
push
bound
les
inc
dec
outsl
or
jnp
mov
add
and
pop
pop
addr16
mov
fwait
mov
aam
dec
inc
lock
mov
enter
sub
and
or
adc
push
mov
mov
jmp
js
push
jnp
adc
cmp
mov
sub
fwait
push
inc
dec
movb
jno
in
shlb
and
icebp
imul
cmpl
out
sbb
inc
pop
cmp
mov
sub
leave
mov
aaa
sub
into
dec
dec
mov
outsb
mov
fs
push
sarb
enter
fcomps
mov
inc
int
push
fadds
or
push
xor
cmpsb
repz
cmp
test
inc
and
insl
ret
push
jle
clc
sub
pop
dec
mov
jmp
jno
arpl
fistps
std
push
adc
jecxz
or
inc
pusha
repnz
push
add
ror
dec
aas
test
jb
inc
adc
lds
and
mov
iret
push
push
dec
into
or
mov
ljmp
sub
or
sub
mov
scas
adc
pop
iret
fisubrl
outsl
sbb
mov
xchg
jbe
push
sbb
push
cmp
mov
fisttps
xchg
lods
ficoms
xor
pop
cmp
stos
sub
inc
fisttpl
dec
int
xor
mov
mov
push
scas
cmp
jae
sbb
push
mov
lret
fdivrs
sub
xchg
int3
fstpl
dec
lahf
lea
xor
test
sub
or
iret
dec
sub
sub
xor
or
adc
fimull
or
aaa
es
cmp
dec
push
sub
jp
lds
mov
inc
enter
iret
inc
and
xor
shl
pop
mov
fsubrl
fisubrs
aad
in
dec
and
rcr
push
mov
mov
mov
inc
inc
lods
ss
inc
add
dec
adc
mov
sti
inc
rclb
je
fwait
addb
push
dec
mov
and
inc
lcall
mov
add
aam
xor
popa
outsb
and
push
mov
test
cmp
or
add
js
jo
in
pop
inc
jg
pop
dec
mov
rorb
imul
ret
push
sub
dec
inc
fistpll
icebp
mov
dec
lds
mov
mov
xchg
fcmovu
xor
sbb
call
pusha
mov
pusha
dec
mov
push
pop
mov
dec
adc
fisubrl
xchg
and
add
jae
dec
dec
push
es
inc
inc
enter
int3
stc
mov
or
push
stos
mov
xchg
sbb
loopne
inc
call
in
into
mov
ret
dec
pop
inc
shlb
mov
in
cltd
pop
mov
stc
cmp
xchg
or
pop
add
out
pop
les
mov
push
das
in
and
pop
pop
mov
mov
push
and
sub
outsb
movsl
push
mov
adc
adc
fwait
inc
sub
mov
or
jp
push
fsubrs
rol
mov
xor
xor
adc
mov
int3
jp
inc
call
pop
fldenv
sub
sbb
inc
inc
outsb
addr16
stos
testb
xor
sbb
push
fstpl
test
xchg
add
inc
xorb
inc
loope
mov
and
adc
pop
mov
fimuls
sub
fistpll
cmp
xchg
lods
inc
xor
mov
lret
dec
adc
inc
sub
lret
push
mov
adc
inc
inc
loope
adc
out
jl
arpl
enter
das
xchg
dec
int
arpl
pop
sub
test
jae
movsl
add
les
push
inc
out
testb
and
mov
dec
pop
stos
enter
mov
jae
flds
mov
aas
pop
add
jae
lods
dec
loop
pop
aam
or
xor
push
inc
into
mov
xor
fwait
mov
sub
xlat
mov
push
imul
push
test
mov
lret
call
dec
and
jp
and
in
ret
test
dec
pop
pop
xorb
roll
pop
and
add
inc
pop
rorl
push
mov
pop
push
xchg
lods
nop
dec
fxch
sbb
repnz
sarl
enter
pop
push
mov
call
mov
inc
xchg
sbb
push
dec
dec
std
out
sbb
dec
sub
and
dec
sahf
pop
ret
push
bound
add
int
cmp
mov
or
pop
mov
adc
in
adc
shll
xor
ror
sahf
sti
fisubrs
addr16
ret
push
pop
pop
inc
jo
arpl
xor
push
outsl
inc
pop
and
inc
cli
push
sub
aad
call
xchg
or
adc
sub
out
jns
mov
dec
and
dec
jle
fcomps
outsl
cmp
push
icebp
out
loopne
push
in
inc
das
push
decl
mov
aas
cmp
dec
jb
dec
xchg
mov
inc
push
cmp
mov
inc
push
dec
repz
xor
and
cmc
and
sub
stos
sub
push
adc
movsb
fisttpll
shll
mov
cld
int
stos
lea
shll
lcall
int3
jle
pop
popa
jb
and
sahf
test
verr
or
decb
pushf
repnz
ror
sub
and
leave
decb
negl
addr16
test
adc
adc
daa
pop
loope
add
push
pop
adc
das
sti
mov
cmp
jb
lea
add
stos
rcl
inc
call
faddl
and
push
clc
sub
or
add
aaa
fsubl
stos
shlb
dec
push
push
hlt
das
inc
push
pop
inc
sub
pop
pusha
stc
pop
dec
insb
leave
pop
les
fisttpl
test
pop
cmp
stc
cmp
and
push
popf
inc
dec
add
das
xor
inc
rorl
xor
add
movsl
mov
fldenv
je
xlat
push
in
fcomp
scas
xchg
dec
pop
sub
fsubl
mov
dec
or
pop
and
add
lods
and
push
test
aas
enter
les
xchg
jo
xor
insl
xor
test
or
dec
aad
mov
mov
or
fisttps
jo
stos
out
push
mov
jns
icebp
inc
xchg
inc
push
inc
les
xor
push
loope
mov
lret
xchg
pop
inc
mov
add
xor
pop
push
jo
push
sarb
dec
das
sub
aam
mov
push
xor
cli
jle
mov
push
add
in
pushf
and
pop
jmp
in
insl
inc
mov
pop
sub
sub
imul
sbbb
push
jmp
das
sarl
stc
rcrl
push
addr16
test
push
enter
mov
test
insb
jno
xchg
mov
sub
shrb
dec
test
xchg
pop
fld
sti
push
xor
pop
fisubl
fstp
or
insb
pop
aam
icebp
mov
loopne
test
dec
sarl
inc
xchg
cmp
pop
fistl
xor
cmp
sbb
movsl
mov
pop
or
xchg
mov
inc
push
cld
sarl
xor
enter
jb
out
add
icebp
sub
adc
out
mov
jmp
test
inc
pop
pop
cmp
fldt
add
xchg
dec
ret
pop
rcrb
cmc
dec
pop
dec
or
sub
test
mov
pop
rcr
std
adc
sarl
push
cmp
xchg
das
jb
roll
push
nop
add
mov
roll
mov
dec
cwtl
pop
loopne
iret
in
xor
iret
pop
and
sbb
push
xor
call
dec
insl
xor
mov
add
xchg
and
in
inc
dec
fsub
scas
sbb
push
add
adc
flds
inc
in
dec
cltd
cmp
imul
call
adc
push
lahf
and
jnp
cmp
sub
push
scas
sbb
in
mov
dec
push
faddl
and
movsl
jmp
or
dec
dec
xchg
into
dec
rorb
movb
sahf
adc
jb
into
pop
xchg
inc
fistps
dec
jl
dec
xchg
inc
push
lret
dec
xchg
insb
into
enter
inc
leave
lods
roll
shll
push
sbb
sbb
jae
pop
int3
sub
ficompl
xchg
fistpl
shlb
mov
pusha
sub
or
push
mov
dec
or
es
dec
inc
xchg
xchg
mov
mov
fists
aaa
inc
sub
sar
enter
add
jp
leave
jecxz
hlt
and
fcmovnu
enter
inc
lock
ror
or
mov
dec
sarb
int
movsl
jmp
mov
arpl
pop
xchg
rcr
enter
fiaddl
aas
push
sub
lods
imul
xor
call
lret
sbb
push
rorl
inc
or
sbb
or
fdivl
xchg
add
xor
inc
popa
fwait
dec
and
cmpsl
in
and
inc
test
cmp
mov
push
dec
jl
inc
jmp
aas
lock
lods
mov
shr
aas
pop
mov
ret
fiadds
dec
sub
test
pop
sub
push
cmp
lods
mov
push
call
orb
pop
leave
scas
daa
inc
dec
clc
inc
fnstenv
push
xchg
das
fldl
pop
sub
push
pop
sub
pushf
and
jne
dec
mov
cmp
jnp
in
test
sub
lea
orl
testb
xor
xchg
aad
sbb
rcl
sarw
pop
orl
adc
inc
cwtl
pop
mov
mov
in
inc
or
jmp
insb
inc
adc
xor
popa
pushf
aas
lods
out
enter
inc
flds
inc
push
or
pop
jecxz
push
pop
push
int
or
imul
sub
or
pop
es
dec
ret
shlb
push
pop
pop
dec
sub
lcall
leave
enter
ror
cmp
inc
into
cmp
mov
outsl
sbb
in
cmp
cmpsl
lahf
pminub
xor
or
enter
lret
and
mov
addr16
inc
add
mov
or
fwait
test
inc
in
mov
ss
das
xchg
jno
loopne
push
dec
cld
ds
mov
aad
jae
jmp
imul
int
movsl
dec
or
pop
dec
aas
push
adc
aam
out
out
sar
enter
pop
push
scas
jecxz
pop
cltd
inc
adc
mov
push
insl
cmp
mov
dec
subb
sbb
xchg
popa
jo
frstor
pop
dec
mov
in
cmp
enter
add
shrb
push
push
mov
das
int3
inc
adc
mov
or
push
mov
sti
hlt
jle
ret
stos
bound
int3
ret
inc
inc
adc
xor
fstps
mov
dec
inc
pop
imul
lret
repnz
fistpll
push
out
into
mov
add
xchg
push
lret
jg
mov
sub
mov
mov
dec
fimuls
icebp
push
insb
scas
loopne
push
movsl
mov
jo
xor
aad
pop
inc
sbb
push
lods
sub
pop
cmp
inc
repnz
dec
push
rcll
xchg
call
lods
jg
lret
into
lods
enter
push
mov
jg
and
pushf
pop
add
dec
xchg
pop
inc
int
mov
dec
sbb
xor
lods
sbbb
dec
cmpsl
sub
sti
or
inc
push
or
loopne
jge
push
push
push
shlb
cmp
lret
cmp
inc
orl
sbb
push
outsb
dec
lret
popa
fcomi
out
adc
inc
into
rcrl
sbb
mov
sub
and
cmp
pop
and
dec
dec
insb
cltd
es
lret
dec
popa
stos
fldpi
add
pop
sbb
and
mov
lret
pop
inc
sbb
mov
mov
xor
cmp
xorl
dec
gs
fimull
pop
inc
cmp
call
mov
jns
or
dec
inc
mov
pop
inc
dec
scas
mov
bound
xor
dec
mov
push
enter
adc
mov
xor
mov
lods
data16
sub
cmp
jmp
inc
dec
test
es
sub
push
dec
mov
and
and
vmread
dec
lcall
push
aam
push
push
and
iret
cmp
pop
ret
push
cmp
push
stos
push
and
lret
sub
aam
sub
clc
aad
cli
adc
push
dec
ja
das
mov
mov
cwtl
adc
xchg
sub
xor
cli
divb
mov
cld
clc
dec
or
sbb
adc
and
sub
pop
inc
lret
arpl
mov
add
push
lds
shrl
push
xchg
add
stc
inc
jnp
adc
and
pop
icebp
jmp
aad
call
inc
xor
cmpsl
sbb
sbb
inc
inc
mov
shrl
enter
loopne
roll
pop
leave
ja
aam
cmp
shll
jae
sbb
out
out
nop
enter
push
test
pop
adc
dec
mov
rorl
and
or
mov
cli
ret
jl
in
push
add
push
mov
int3
add
sub
push
xchg
push
cmp
stc
pop
cmc
mov
enter
cmp
push
shlb
push
jmp
xor
test
xor
adc
sbb
dec
imul
xchg
das
sbb
clc
dec
ljmp
adc
and
int3
inc
push
and
mov
mov
cld
filds
gs
nop
jno
pop
mov
push
and
data16
imul
sub
notl
idivl
push
and
stos
call
or
cltd
xchg
xchg
fmull
cmp
inc
enter
enter
shrl
mov
push
push
shll
sub
xlat
imul
sub
push
sti
xor
rorl
out
jns
fidivrl
cmpsb
ss
mov
mov
push
dec
fcmovbe
rcrl
dec
dec
stos
xor
xlat
loope
adc
sarl
enter
jg
lock
movsl
vmovapd
loope
rclb
lods
pop
gs
dec
push
cmp
lds
push
std
inc
and
sbb
sub
bound
mov
pop
jecxz
int3
shrl
dec
out
das
jb
pop
das
mov
lea
mov
pop
and
clc
sub
push
adc
cld
cmc
aam
das
movl
sub
lock
call
fcomp
pop
cmp
test
scas
mov
mov
call
aaa
push
add
inc
add
ja
sahf
rorl
sub
mov
sub
add
decl
dec
xorl
mov
sbb
push
and
cmp
inc
pusha
mov
sbb
xchg
inc
dec
pop
sub
inc
insb
push
xor
push
mov
inc
adc
inc
push
fs
dec
and
pop
jl
int3
stc
sub
psubsw
repz
pop
sub
shr
lret
sub
xor
xor
pop
shlb
mov
jno
sub
lret
inc
lret
mov
add
inc
icebp
repz
inc
ret
leave
mov
push
in
push
inc
inc
sub
insb
and
int3
loopne
or
and
mov
fldln2
cmpb
dec
fimull
sbb
push
sub
std
and
sbb
pop
into
jmp
and
or
dec
inc
in
pmuludq
pop
mov
aam
sbb
sub
dec
mov
ficoml
in
cmp
stc
fiaddl
xchg
or
pop
mov
shll
dec
int
push
stos
andb
enter
jae
loopne
inc
dec
xchg
icebp
into
pop
repz
dec
dec
push
adc
xor
xor
dec
shr
xor
push
add
pop
pop
aad
mov
xchg
jae
dec
leave
mov
sbb
pop
sar
or
out
in
xor
xor
push
pop
ret
enter
cmp
adc
ficompl
dec
enter
rcrb
packsswb
cmp
ret
ds
or
lock
rclb
rol
sub
mov
lret
cmp
es
and
and
cwtl
das
push
add
xor
jmp
loope
push
lcall
sub
mov
pop
xor
mov
jle
das
mov
push
xor
stos
inc
outsl
test
daa
in
popf
fildl
push
mov
int3
dec
pop
push
mov
repz
das
icebp
inc
xor
sbbl
jp
push
pop
or
or
roll
inc
dec
movsl
gs
jb
icebp
scas
adc
rcll
inc
fistl
dec
inc
or
and
lock
mov
clc
les
enter
mov
sbb
mov
lret
imul
pop
jno
subl
push
pop
addr16
pop
mov
jbe
dec
xor
fimull
daa
pushf
dec
repz
xor
in
lods
into
rcrb
ss
jl
pop
push
mov
pusha
dec
cmp
cmp
mov
inc
pop
dec
jle
pop
jno
add
sbb
insl
call
add
int3
mov
inc
mov
and
leave
push
popa
inc
lods
xchg
xchg
pop
adc
pop
es
das
mov
add
pslld
jge
xlat
outsb
scas
int
adc
das
jae
adc
dec
test
dec
inc
dec
aaa
enter
mov
sub
cmp
inc
sub
xchg
xchg
sub
add
pop
push
jae
inc
sub
scas
mov
loop
sub
sub
mov
and
adc
jns
shrb
sub
mov
ss
enter
das
pop
enter
mov
pop
inc
or
sub
push
imul
push
push
rcrl
adc
stc
ja
inc
mov
sbb
sbb
lock
xor
ja
xor
mov
popa
xchg
dec
dec
lods
shr
xor
in
push
jmp
push
insb
push
sub
faddl
pop
and
sub
xchg
mov
repz
mov
sub
jg
jp
rorb
sub
cmpsb
dec
lret
sbb
aad
mov
inc
xchg
jae
cmp
mov
push
lret
xchg
lods
xchg
imul
inc
iret
imul
loopne
push
dec
stos
sub
mov
cld
cmc
loopne
insl
inc
pop
and
xchg
fcmovnu
sub
lahf
jl
jmp
or
lret
inc
les
fwait
cmp
clc
pop
lea
fbld
test
dec
jg
jg
fcomip
lret
orl
inc
jbe
inc
push
push
int
ret
inc
jmp
push
dec
nop
or
inc
or
add
aad
and
shrb
adc
pop
je
lret
shlb
repnz
pop
fidivs
mov
cmp
jae
nop
jne
or
cld
faddl
sub
inc
push
and
fs
aad
out
and
int3
dec
dec
or
sub
loopne
jge
mov
xor
and
rcl
dec
in
mov
out
fldcw
sub
in
stc
push
aas
imul
enter
mov
add
mov
cmp
jno
jae
jecxz
adc
pop
dec
movsb
call
pop
dec
mov
pop
cmp
inc
mov
push
pop
imul
mov
fcoml
add
push
movb
push
dec
insb
stc
aaa
jmp
sub
pop
imul
subb
or
xor
inc
scas
mov
inc
sub
enter
cli
push
jg
push
adc
fxch
ret
mov
jecxz
xorb
rorb
int3
inc
pop
inc
xor
push
leave
imul
pop
icebp
dec
push
das
cmp
daa
jno
inc
ret
lock
insb
mov
dec
pop
xor
sti
inc
fiaddl
jecxz
pop
pop
cld
pop
or
xor
mov
dec
mov
jmp
pop
add
xchg
jecxz
jae
pop
bound
daa
clc
pop
dec
jns
cmp
ret
lods
cmp
inc
pop
and
clc
push
push
inc
add
or
das
xchg
imulb
mov
psubsw
xchg
int
mov
xlat
push
daa
inc
out
insb
sbb
push
push
pop
int3
imul
pop
aad
push
jnp
inc
sahf
pop
jle
ror
mov
aam
or
push
add
push
cmp
std
and
sub
scas
add
cmp
cmp
cmpsl
repnz
lret
and
aaa
push
inc
das
push
icebp
inc
das
daa
test
cmp
push
xchg
push
dec
mov
adc
ret
jns
sbb
shlb
call
or
xor
fldcw
pop
lret
mov
into
dec
inc
xor
xchg
inc
icebp
dec
mov
bnd
rcr
es
add
push
leave
mov
xlat
push
jbe
fildll
lret
insl
popa
inc
js
push
mov
adc
fmull
jg
xor
add
mov
or
mov
add
lret
leave
fcmovb
push
inc
mov
mov
comiss
jns
xor
xor
out
cmp
xor
jno
dec
andb
cli
cmpsl
or
inc
xchg
lods
mov
int
mov
daa
enter
xlat
lret
xchg
or
sbb
test
cmp
cmp
insl
sub
in
es
in
pop
sbb
mov
rolb
cltd
mov
insb
pop
xor
mov
push
jmp
nop
adc
int3
aas
mov
dec
leave
push
imulb
adc
adc
popa
rorb
sbb
outsl
push
cwtl
push
pop
jnp
mov
push
les
test
xor
inc
sub
aas
or
subb
stc
pop
hlt
or
sub
add
mov
leave
scas
and
xor
sbb
das
movb
pop
push
or
jge
aad
dec
leave
or
mov
sub
and
adc
and
in
nop
push
mov
dec
mov
mov
enter
icebp
pop
lods
lea
pop
mov
ret
and
js
pop
fnstcw
fistpl
outsb
jge
pop
insb
call
enter
loop
push
loopne
push
les
das
ret
iret
inc
ror
pop
push
cmp
cwtl
mov
fld1
js
outsb
cmpsl
mov
xor
imul
fcomps
ss
and
das
push
inc
pop
mulb
pop
mov
sbb
cmp
xor
inc
pop
pop
pop
jb
push
and
xchg
cmp
sarl
nop
ds
pop
adc
xlat
fld
lods
orl
in
push
int
dec
fmuls
mov
dec
or
xorb
push
dec
dec
cltd
push
imul
movzbl
sarl
repz
cmp
and
fists
fs
and
cmp
inc
pop
inc
gs
jmp
adc
sub
test
push
lret
mov
pop
es
int
int3
or
xor
pop
or
pop
adc
jge
ror
sub
cmp
cmc
es
call
aam
sub
jmp
xor
dec
jo
inc
push
cmp
push
mov
mov
xchg
cmpl
jae
xor
test
sarb
filds
aad
and
data16
and
xor
int3
push
cmp
jne
push
push
xor
dec
enter
and
cmp
fldpi
dec
ja
cmp
pop
push
cltd
jnp
dec
and
shrb
imul
cmp
cmpsl
pop
fildll
jp
dec
jle
repz
call
adc
shl
test
leave
mov
pop
cmc
dec
andb
es
add
sub
insl
sahf
int
cs
fnstenv
add
lock
push
or
clc
mov
sbb
xchg
loope
push
sbb
push
or
cmp
bound
jae
dec
dec
push
push
or
add
sarb
xor
xor
adc
push
jmp
inc
rcrb
or
mov
dec
mov
mov
pop
nop
mov
dec
cli
lcall
pop
loopne
stos
das
push
add
mov
xor
lea
lret
fldcw
cs
rorl
jg
sub
xor
sbb
jmp
sbb
rorl
inc
imul
popf
stc
loope
sub
sub
cmp
sbb
xor
push
xchg
sub
push
sub
mov
and
and
fisubrl
jl
dec
mov
inc
cmp
adc
pop
jge
push
inc
push
xor
jg
push
inc
push
enter
pop
push
daa
xor
movb
mov
xor
shrl
sarb
jmp
rorl
jmp
dec
sahf
pop
and
xchg
aad
imul
jno
lahf
sarl
sarb
lahf
aam
popa
adc
xchg
aaa
pop
lea
push
enter
mov
cmc
fmul
cmp
int3
enter
insl
cmp
mov
clc
pop
fists
rcll
inc
insl
cs
push
and
sbb
jae
rcrb
pusha
je
dec
dec
sarb
nop
pop
push
lods
xchg
inc
push
xor
cmpsl
pop
sbb
mov
inc
push
dec
and
fsubr
push
je
jnp
rorl
push
shl
enter
ret
subb
or
inc
jmp
lods
dec
iret
jl
cmp
push
out
js
leave
add
xchg
icebp
inc
sahf
mov
mov
pop
jge
sbb
inc
jmp
ret
or
or
jnp
dec
dec
dec
mov
cld
daa
lds
scas
aaa
pop
adc
rcr
mov
pop
mov
inc
sahf
xor
mov
push
pop
shrl
das
gs
push
out
clc
loopne
nop
sub
sbb
add
pop
int3
mov
loopne,pt
insl
push
jmp
xchg
mov
test
adc
dec
fisubrs
add
testb
lret
mov
lret
movsl
xlat
sbb
pop
or
mov
pop
sbb
bound
xor
xor
add
sbb
cmp
shrb
fldcw
adc
push
jle
or
push
dec
push
fdivrp
pop
adc
dec
lea
mov
lret
or
push
sbb
fisubrl
call
shl
or
ret
cmp
lret
fistl
add
cmp
into
pop
loope
sbb
push
sub
int
and
and
call
inc
les
push
pop
rcrl
lret
cmp
fisttpl
enter
outsl
xor
stc
test
xchg
outsl
outsb
clc
sbb
push
aas
in
stos
push
sbb
xchg
xchg
arpl
lods
gs
push
jecxz
pop
xchg
add
inc
mov
dec
enter
sub
dec
dec
es
push
stc
jb
or
leave
adc
fmull
dec
enter
dec
leave
dec
adc
add
mov
icebp
dec
dec
arpl
adc
fisttpll
dec
mov
push
mov
stc
jge
and
iret
pop
dec
dec
int3
addb
jb
fistpll
pop
xchg
dec
lret
fcompl
cmp
xor
inc
rcr
and
mov
push
or
mov
and
dec
into
test
xchg
mov
fisttpl
pop
pop
adc
test
xor
icebp
arpl
jns
sub
hlt
pop
aad
sarb
lds
call
xchg
ds
cli
es
sub
sub
fisttpll
and
inc
inc
xchg
das
mov
xchg
dec
fcmovb
mov
clc
pop
sbbb
enter
push
dec
pusha
scas
pop
int3
xor
sbb
cmpsb
loope
sarb
dec
jmp
cwtl
das
repnz
cmc
imul
pop
xor
icebp
dec
pop
mov
aad
push
push
repz
push
movsl
inc
dec
add
lds
repz
or
fstp
or
out
push
inc
filds
mov
adc
dec
rcl
and
push
dec
popf
jae
inc
mov
pop
push
jb
das
jmp
push
ss
pop
pusha
mov
clc
inc
mul
movsl
ret
pop
aad
leave
stos
inc
fcmovbe
inc
jmp
xchg
icebp
out
scas
mov
lret
push
dec
xlat
push
or
dec
sarb
cmp
fwait
cmp
repz
test
cwtl
jp
lods
mov
aam
xor
push
loopne
inc
xor
sbb
sub
das
mov
cmp
adc
cmp
jge
sbb
mov
mov
das
xor
pmulhuw
stc
xchg
jne
push
push
mov
sub
lods
xchg
rcll
add
push
or
ret
mov
cmp
add
add
cmp
jp
into
inc
das
push
add
inc
mov
mov
jecxz
pop
mov
imul
dec
push
aaa
xchg
dec
sti
and
imul
jo
sub
cmp
out
adc
push
cmp
jo
push
clc
push
insl
mov
dec
xor
dec
xor
push
push
cmp
pop
lods
ds
add
or
xchg
and
int
ficoml
jb
fiadds
flds
mov
int3
inc
scas
rolb
dec
outsb
mov
lret
add
shlb
sbb
dec
push
inc
inc
mov
lahf
sbb
inc
dec
adc
outsl
lods
jne
test
sub
jecxz
fildl
in
sub
and
xchg
mov
clc
sub
ja
xor
lock
inc
sub
stc
push
pop
push
inc
es
rcll
jmp
orb
xor
inc
shll
jp
push
mov
data16
je
dec
sub
scas
sub
sbb
mov
dec
bnd
dec
inc
dec
sbb
sub
arpl
call
inc
xor
xchg
inc
and
jp
inc
dec
fstpl
test
cld
xor
lcall
aad
fcoml
mov
aaa
push
xchg
dec
imul
inc
fdivs
sarl
push
dec
lods
sbb
push
daa
cmp
push
test
push
loop
pusha
ficoms
sbb
sti
ret
sub
icebp
mov
fwait
cmp
or
mov
mov
sub
scas
inc
mov
arpl
icebp
dec
test
xor
push
nop
aaa
push
insb
dec
cmc
jnp
iret
mov
xchg
or
test
pop
push
dec
int3
xchg
cmp
dec
and
daa
inc
rcrb
mov
pusha
popf
hlt
sub
cmpsb
xchg
sub
xor
add
push
shl
shl
inc
push
or
dec
xor
sti
pop
or
lds
push
stos
mov
sub
cmp
add
dec
fwait
xor
or
pop
lods
push
xchg
lds
or
mov
inc
fcmovnbe
call
push
lea
inc
jne
push
lds
jnp
jb
dec
xor
repz
sbb
push
mov
mov
pop
dec
sub
outsl
inc
cmp
push
les
lret
xor
fists
outsl
sub
aas
and
sub
push
mov
pusha
lret
push
adc
cmp
cmp
xlat
dec
mov
push
dec
bound
push
mov
pushf
dec
ror
add
push
dec
int
in
xor
push
movsb
jmp
xchg
inc
jnp
es
cli
scas
jno
pop
insl
ds
xor
sti
cmpsb
dec
xor
xor
insl
dec
pushf
mov
mov
rcrl
push
insl
loopne
adc
mov
and
or
pop
cmp
sub
clc
push
lret
fdivrl
dec
daa
cmpsl
lret
aam
sub
rcl
sahf
pop
push
enter
or
mov
pop
test
pop
insb
mov
shl
xlat
mov
jno
rcrl
scas
or
fcmovu
or
push
fists
loopne
pop
ret
rcrb
pop
cmp
sub
mov
aad
jnp
call
jmp
leave
push
pop
mov
int3
cli
outsb
push
mov
sahf
pop
das
sub
pop
int3
pop
sub
inc
sub
das
das
xchg
mov
cmp
lret
sarb
xor
ficoml
test
fcmovnb
inc
imul
nop
les
dec
adc
xchg
cmpsl
push
mov
pop
decl
add
inc
pop
adc
xor
xor
mov
roll
mov
xlat
and
pop
lret
or
pop
dec
fnstcw
ficoms
dec
in
xor
pop
adc
insl
loope
xchg
push
enter
jo
loop
rcl
popf
and
push
jb
push
add
dec
pop
adc
sahf
shrl
fwait
sub
adc
rcl
pop
dec
dec
out
inc
xchg
dec
ret
rclb
push
xor
push
fidivs
clc
push
and
mov
sub
jb
push
mov
lret
inc
mov
mov
pop
mov
lods
jg
rolb
inc
cmc
es
push
xor
inc
je
inc
insl
push
xor
dec
dec
xor
fstpt
and
jb
dec
sub
xor
xchg
mov
adc
add
push
push
call
mov
lock
lds
fxch
or
dec
xchg
pop
fisubs
fadd
aas
shll
dec
leave
dec
or
fisttps
mov
push
xchg
clc
lret
dec
sub
frstor
add
cmp
cmp
test
les
call
adc
xor
push
mov
dec
pop
push
mov
call
imul
test
icebp
dec
mov
sub
iret
gs
push
fwait
jb
jmp
sub
scas
or
add
jno
fisubrl
jns
and
mov
pop
adc
sti
sahf
jne
lods
or
push
mov
pop
pop
int
ja
mov
push
or
inc
mov
leave
arpl
pop
aad
jecxz
test
xor
sub
or
add
jmp
or
xor
repnz
decl
stc
pop
int3
cmp
sub
movsl
inc
leave
leave
and
pop
fdivrs
loop
ficoml
jecxz
xchg
pop
out
scas
xor
roll
and
lret
cmc
outsb
and
jno
int
push
mov
dec
pop
push
mov
mov
mov
sub
leave
fldcw
xchg
neg
xor
flds
arpl
dec
mov
fisubrl
sbb
dec
push
repnz
icebp
stos
xor
xchg
lret
dec
pop
inc
sub
scas
fwait
pop
repnz
int3
insb
call
jg
push
cmp
mov
fs
adc
stc
push
pop
or
enter
mov
sti
pop
cmp
dec
repnz
push
lret
cmp
dec
jae
and
cmp
insb
inc
mov
mov
dec
mov
insb
and
enter
xchg
pop
xor
mov
pop
mov
cli
sarl
sub
push
mov
dec
jmp
jo
insb
inc
stos
push
pop
push
out
insb
mov
push
int
and
mov
clc
bound
pop
dec
imul
inc
push
mov
pop
mov
mov
pop
pop
sub
mov
xchg
push
or
or
push
xor
or
outsb
inc
dec
xchg
out
adc
or
dec
dec
aaa
push
das
rolb
add
clc
dec
cmc
push
dec
jae
cmpsl
sbb
dec
stos
mov
dec
push
push
pop
xor
sahf
ret
inc
test
dec
sub
ret
mov
imul
xor
call
xlat
roll
outsb
fmulp
cmp
xchg
xchg
pop
mov
push
dec
leave
jns
imul
jo
and
int
test
test
rolb
shlb
pop
xchg
loope
lcall
dec
inc
xchg
pop
push
push
xorb
push
pop
adc
push
mov
das
rolb
lods
fldl
leave
js
pop
dec
mov
lea
leave
sub
aad
out
xchg
popl
hlt
and
and
jge
stos
loopne
les
int
movb
mov
lods
adcb
sbb
pop
leave
xchg
lcall
das
xchg
repnz
inc
sbb
ret
andb
and
dec
xlat
ret
pop
ret
jmp
dec
push
inc
das
shl
or
hlt
movsl
test
push
repz
gs
inc
ret
loop
ficoms
inc
or
das
xor
sub
jno
inc
idiv
inc
inc
add
pop
pop
push
fisubrl
ret
sbb
pop
push
or
loopne
pop
adc
sub
shl
jno
ret
sti
testl
cmp
adc
fistpl
or
dec
xorl
es
pop
push
dec
iret
les
jae
jb
rorl
jp
cmp
ss
xor
push
push
addr16
fnsave
sbb
movsl
arpl
dec
push
jmp
mov
int3
add
xor
push
sub
sub
insl
test
sarl
and
and
fstpl
add
xchg
xlat
dec
or
pop
sbbb
push
add
push
mov
pushf
add
outsb
xor
stc
dec
sub
sub
loope
int
fst
mov
test
jl
test
aam
fistps
iret
out
dec
daa
pusha
das
mov
mov
jno
mov
xchg
jnp
pop
push
flds
adc
icebp
test
sarb
addl
dec
mov
loope
ficoml
xchg
lods
pop
mov
dec
dec
cmpsb
adc
inc
mov
inc
fstl
and
pop
and
push
incl
jnp
inc
lods
push
mov
into
pop
fldcw
push
outsb
nop
cmp
ret
dec
push
xchg
pop
aam
bound
add
xor
int
mov
pop
jae
out
jnp
popa
or
or
jo
out
imul
cmc
cld
pop
aad
enter
aad
dec
sub
sub
movsl
ficomps
cs
arpl
or
js
fldenv
das
add
dec
popa
pop
fisubs
mov
cmp
add
scas
movsb
push
dec
inc
test
xor
sub
pop
sarb
fisubs
xor
inc
jmp
dec
push
pop
aam
fcmovb
dec
data16
sbb
enter
lea
daa
pop
pusha
js
sub
or
and
pop
les
mov
pop
pop
dec
mov
mov
out
sub
and
stos
rcrl
xor
dec
add
sarb
rcrb
insb
xor
dec
push
pushf
xchg
xor
inc
call
inc
dec
add
sarb
and
pop
cmc
fimull
mov
pop
xchg
or
loopne
mov
das
push
jmp
and
or
cmpsl
jno
aaa
scas
insb
pop
xor
and
mov
fnstcw
xor
mov
in
int3
sarb
xor
and
mov
dec
adc
loopne
rorb
pop
inc
push
mov
sub
push
rcll
jno
jle
les
cmp
mov
adc
push
iret
lret
insb
xor
inc
pop
subb
adc
ja
das
cli
jns
jb
fldcw
mov
push
fcoml
call
aaa
xchg
fs
push
aad
add
lods
arpl
pop
iret
dec
pop
rcrl
inc
mov
movb
xchg
aas
dec
push
jmp
sbb
or
sbb
inc
sub
ret
jno
mov
es
in
or
push
test
pop
inc
jne
cmp
mov
inc
inc
pop
lds
fists
or
pop
pop
push
inc
es
mov
or
test
shll
push
out
xchg
nop
pop
xor
imul
jge
insb
and
push
inc
dec
jae
cmp
les
fisubrl
xchg
scas
sti
sarb
emms
hlt
jmp
imulb
shrb
push
pop
fisttpl
dec
mov
jb
roll
les
mov
jg
pop
shll
jnp
pop
jmp
mov
mov
mov
sub
stos
popf
shll
and
out
and
dec
fistps
inc
ret
dec
mov
lock
xchg
add
sub
ffreep
and
xor
mov
mov
movsb
out
dec
enter
in
es
pop
das
mov
inc
inc
loop
dec
jmp
lret
push
mov
shlb
cmp
push
pop
and
ret
icebp
mov
mov
jle
loop
sub
xor
pop
sub
push
cvtdq2ps
enter
or
setns
dec
or
push
test
iret
test
dec
stc
leave
add
or
xchg
lock
xor
pop
inc
imul
out
cltd
mov
cmp
cmp
jnp
mov
add
es
imul
fst
or
ss
pop
pop
cltd
xchg
daa
xchg
jmp
pop
repz
jge
fadd
leave
lret
cld
push
xor
sub
in
insl
pop
mov
xor
push
arpl
push
in
dec
addr16
sbb
and
xor
adc
push
dec
and
xor
push
cld
or
inc
xor
inc
lock
push
sub
xchg
mov
dec
lock
add
js
sbb
pop
pop
xchg
and
in
subb
ds
inc
push
xor
lea
push
pop
and
push
lds
pop
imul
in
aad
fisttpll
ret
pushf
add
push
pop
lods
lds
adc
adc
add
inc
sub
pop
inc
mov
mov
xor
xchg
cmpsb
js
xor
xchg
sub
call
gs
push
cmp
repz
pop
adc
dec
push
pop
push
cmpsb
mov
dec
cmpsl
icebp
jmp
push
jge
mov
mov
flds
repz
pop
repnz
inc
fstpl
sbb
scas
clc
je
iret
int3
in
es
in
loop
pop
inc
jg
push
xor
lcall
mov
dec
pop
and
shl
add
cmpb
repnz
call
inc
aaa
mov
mov
xchg
or
dec
mov
lods
shl
inc
imul
inc
pop
jmp
dec
adc
enter
sub
enter
jmp
and
repz
outsb
pop
enter
iret
mov
xor
and
jae
fcompl
idiv
dec
ret
mov
adc
clc
jmp
out
push
dec
sub
ror
adc
lahf
inc
test
aas
cmp
rcll
jmp
jb
cmp
sub
dec
mov
dec
sub
cmp
stc
xor
int3
adc
mov
mov
sbb
ror
dec
mov
adc
mov
lods
push
and
push
add
push
cmpsl
movsl
pop
sbb
add
cli
and
jns
inc
aad
sub
ret
xorb
sbb
pop
je
pop
pop
xor
pushf
cmc
test
bound
ficoms
push
dec
sub
inc
mov
aaa
mov
nop
push
sub
int
push
int3
push
inc
push
dec
insl
stos
dec
push
cltd
idivl
mov
fstl
rorl
out
dec
lds
cwtl
push
push
dec
data16
adc
sarl
xlat
sub
mov
sbb
adc
pusha
xchg
xor
inc
inc
dec
aas
int3
cs
cld
push
dec
gs
ds
sbb
test
repz
and
movsl
cmp
mov
fcmove
mov
xor
sub
cmp
ds
aad
xor
cmc
sub
fnstcw
mov
xor
inc
js
repnz
iret
mov
cmp
fsubs
aas
pop
inc
sbb
cltd
dec
push
or
test
repnz
dec
movsb
sub
loopne
das
fildl
mov
adc
inc
hlt
fdivs
lock
dec
add
adc
sub
mov
xor
cmp
add
cmp
je
clc
dec
dec
adc
xor
push
lods
les
clc
jnp
adc
lahf
inc
inc
dec
out
fldcw
dec
xor
fs
or
add
xor
call
sub
pop
dec
xor
xor
js
sub
jne
je
stos
leave
mov
pop
push
test
aas
ret
mov
js
push
push
out
xchg
adc
xlat
subb
and
mov
sbb
and
imul
cmp
push
add
inc
insb
dec
inc
stos
dec
out
das
adc
inc
ss
adc
xchg
loop
push
cmpsb
push
jp
push
cmp
scas
sahf
mov
sti
inc
dec
pop
mov
jne
int
lods
ja
fisttpl
add
shrb
mov
shll
test
or
push
sub
xchg
dec
push
fcmovne
fiadds
sub
mov
jns
mov
bound
ret
imul
negl
inc
and
jp
push
or
xor
xchg
xchg
les
inc
mov
pop
mov
xor
dec
dec
in
mov
das
orb
pop
jae
iret
int
dec
sub
fiaddl
aas
dec
lret
push
sub
bound
call
scas
icebp
pop
sub
lret
mov
sar
xchg
inc
xchg
pop
dec
aam
cmp
lahf
xor
dec
sub
int
and
dec
fldcw
in
lret
or
push
sub
insb
xlat
pop
xor
sub
aaa
mov
xchg
mov
lret
adc
sti
dec
jae
aad
xchg
aaa
sub
or
pop
subb
fdivp
sbb
pop
push
mov
jno
out
dec
adc
mov
pop
sahf
int3
shr
inc
cltd
sub
xchg
dec
sahf
pushf
test
pop
jae
fsts
clc
js
inc
or
mov
mov
inc
mov
xor
hlt
cmpsb
stc
sub
push
in
leave
shl
sub
aam
addr16
les
pop
ret
test
mov
cltd
mov
dec
and
es
fdivrl
lds
in
inc
jmp
inc
fstpl
dec
imul
repz
pop
xor
fstps
lock
lret
lret
idivb
jae
jmp
inc
pushf
popa
fildll
push
lret
addr16
jnp
dec
icebp
lds
fwait
shll
mov
sbb
fnstcw
mov
xor
add
dec
push
lea
push
cmp
clc
clc
dec
dec
movsl
dec
mov
dec
mov
insb
rcrb
adc
mov
add
fs
dec
push
cmp
mov
scas
clc
inc
sbb
mov
xor
cmp
or
inc
shll
cs
lret
pop
out
sbb
lods
xchg
ss
leave
sub
std
and
popf
scas
xor
inc
lret
inc
jb
leave
adc
loope
sub
push
sub
sub
fisubrs
daa
rorb
push
jp
cmp
fidivl
pop
les
xchg
or
mov
lds
lret
mov
sahf
push
fucomp
lods
dec
xor
pop
jb
sub
mov
push
js
andnps
sahf
pop
pop
or
mov
push
aam
out
imull
push
dec
and
and
mov
cmpsb
pop
rcl
fiaddl
xchg
jns
add
mov
push
add
or
in
cs
enter
in
mov
cmp
dec
inc
fcmovb
aad
lods
cmc
notl
jmp
adc
or
dec
jno
pop
dec
lds
jbe
push
andb
or
xchg
into
jno
imulb
popa
pop
dec
sub
xor
lods
pop
jns
lret
mov
jb
dec
adc
rolb
xor
fcmovb
xor
jp
inc
sub
dec
arpl
sti
shrb
xchg
add
dec
call
leave
sub
or
fxch
fnstsw
rcl
jge
cmpb
sub
insb
bound
cmp
cmp
shrl
lock
pop
inc
in
cmp
dec
sarb
cmp
in
fwait
inc
add
fstps
sub
dec
mov
in
lods
dec
loopne
adc
aaa
mov
jae
outsl
test
sub
add
sub
insb
inc
or
and
cmp
movsl
inc
fldcw
xlat
jo
pop
pop
push
fstpt
mov
inc
dec
cwtl
dec
int3
and
pusha
aaa
adc
cmp
scas
inc
outsb
int3
or
dec
inc
dec
push
inc
shrl
push
mov
pop
xor
sbb
push
shlb
pop
xchg
loop
cmpb
push
out
push
xor
fcmovnbe
stos
jno
xchg
aas
push
movsl
jp
int3
shlb
mov
ret
push
out
pop
and
jmp
movsl
pop
push
jp
das
pop
and
int3
enter
jae
icebp
roll
popf
aam
pop
sbb
mov
pop
sahf
mov
jbe
into
xor
inc
mov
inc
push
cmp
cltd
int
in
sub
lahf
xor
shrb
cmp
aas
push
int3
int
sbb
push
pop
roll
sbb
dec
cmpsb
or
and
push
and
aad
cmp
ja
and
mov
sub
or
mov
imul
push
outsl
jp
push
popa
mov
jl
pop
les
xchg
mov
insb
popf
aad
sbb
lock
inc
leave
mov
inc
push
jle
pop
ss
cs
bound
sub
inc
arpl
in
inc
push
push
jmp
push
lds
int
shlb
lock
add
dec
pop
int3
and
xchg
gs
test
add
vcvtps2ph
dec
cmp
or
xor
xchg
sub
pop
push
mov
push
popa
jle
fnstcw
orb
push
inc
jb
mov
and
jg
aam
int3
in
hlt
push
inc
outsl
pop
call
or
mov
insl
cmp
xchg
xchg
fldenv
or
jo
jmp
fnstsw
inc
stos
mov
push
inc
ficomps
lret
lds
inc
ret
sub
cmc
mov
mov
pop
mov
shrb
pop
cmpl
popf
int3
lret
sub
jle
rcrb
cli
jb
or
mov
or
loopne
jo
mov
lds
xchg
jecxz
inc
imul
and
insb
lret
jmp
shrl
mov
push
add
imul
xorb
push
cmp
or
pop
rorb
je
sub
sti
sbb
les
dec
mov
fcomip
scas
into
scas
les
xchg
clc
pop
jmp
mov
xchg
ret
inc
sub
lock
push
int3
pop
add
dec
lds
add
scas
test
xchg
leave
jno
ficoml
ror
adc
cmp
jg
mov
sub
jge
adc
leave
inc
out
nop
pop
jne
ret
xlat
cmpsl
inc
push
and
inc
xor
in
sub
mov
rcl
inc
pop
mov
int3
mov
push
cmp
movsb
mov
mov
rolb
imul
add
adc
pop
and
int
lret
or
dec
enter
add
ror
leave
stos
mov
insb
jecxz
xor
in
fsubrp
xor
cmpsl
call
xor
fcoms
pop
push
sbb
jle
push
cmpsb
add
shrb
lock
xor
fcoml
rclb
or
push
mov
mov
xor
std
xlat
pop
add
inc
dec
xor
aad
cld
aad
lods
or
jmp
test
int3
fisttpl
leave
xor
stos
push
shrl
in
sub
push
jno
add
aaa
ret
sub
sub
add
jmp
jnp
mov
dec
push
addr16
push
das
push
mull
adc
test
sbb
leave
imul
clc
iret
out
cs
aad
xchg
mov
cmp
leave
stc
rorl
mov
pop
call
enter
jmp
adc
js
dec
adc
pop
xchg
push
push
into
or
ret
cwtl
push
dec
xchg
ss
insb
dec
jne
pushf
dec
sbb
fimuls
das
jae
mov
jmp
dec
das
xchg
or
sub
pop
inc
cltd
cmp
push
outsb
test
xor
dec
mov
lret
dec
jmp
pusha
adc
pop
mov
mov
es
add
inc
adc
sub
int3
aad
add
shrb
hlt
sub
insl
loop
into
in
pusha
xor
roll
jg
mov
jmp
cmp
sub
cmp
mov
dec
mov
aam
pop
pop
mov
xor
insb
xlat
mov
xchg
sub
inc
push
jle
or
push
ret
mov
dec
ret
inc
push
fs
inc
dec
xchg
out
pop
pushf
add
aaa
pop
xlat
shl
jne
mov
adc
pop
arpl
dec
mov
inc
lahf
das
addr16
arpl
mov
push
xchg
cmp
fisttps
rcll
cli
arpl
xor
push
aaa
mov
fnsave
inc
nop
sti
sbbl
dec
adc
pusha
xor
cmp
outsb
jmp
dec
lret
dec
insl
dec
out
xor
or
add
into
mov
fwait
push
fs
and
out
and
inc
sub
or
or
cmp
push
or
imul
dec
sti
inc
sub
repz
push
xlat
push
inc
call
pop
jmp
push
xlat
inc
xor
push
pop
hlt
push
dec
bound
das
push
inc
imul
push
enter
adc
sbb
inc
fldenv
inc
push
dec
dec
dec
cmp
adc
cmp
or
and
test
and
fldl
adc
xor
pop
and
pop
fsubrp
rol
pop
cmp
pop
adc
test
inc
dec
in
ret
aas
insl
cmp
mov
dec
sbb
mov
sub
cmpsl
add
imul
pushf
int3
pop
or
and
fdivrs
cmp
cmova
imul
or
cmpsb
cmp
call
pop
inc
add
jo
dec
cmpb
push
mov
pop
fstl
pop
in
inc
iret
stos
jmp
adc
mov
cmp
xchg
sbb
mov
dec
lock
imul
mov
imul
pop
ret
xor
pop
fildll
xor
sub
rcr
sub
cmp
sbb
les
or
inc
pusha
cld
dec
push
dec
mov
lods
jle
iret
push
or
or
inc
dec
bound
int3
pop
inc
inc
sub
movsl
bound
aad
mov
add
test
pop
dec
lahf
enter
out
xchg
inc
jb
int3
push
dec
int3
test
flds
arpl
sub
mov
xor
sub
movsl
ret
int
or
pop
or
call
pop
dec
jno
popf
aaa
shrb
stos
or
out
nop
pop
out
sub
and
clc
in
xor
rolb
push
xchg
vmovhpd
push
and
es
enter
sub
adc
jo
sbb
fwait
inc
add
icebp
lret
leave
sahf
pop
pop
or
adc
out
pop
jae
fnstenv
inc
mov
jmp
call
call
cmp
test
rolb
in
mov
rcrl
cmpsl
cmp
les
lret
jo
pop
push
out
outsl
xor
or
sub
dec
dec
or
xlat
test
out
lret
outsb
das
iret
mov
sbb
call
add
dec
fs
sub
dec
fsubp
orb
fimull
std
jle
leave
imul
mov
lds
lock
hlt
das
mov
iret
std
pop
outsl
pop
mov
pop
outsb
mov
push
repz
aas
bound
rorl
pop
push
call
mov
test
aad
jno
notl
adc
dec
and
xor
mov
flds
movsb
or
movsl
or
jae
stc
pop
mov
adc
stos
or
insb
push
pop
push
sub
das
adc
push
jg
cmp
rclb
enter
jle
sub
mov
inc
xchg
int3
add
dec
push
aam
inc
xchg
sbb
in
in
pop
pop
cs
lds
dec
ret
imul
adc
int3
out
dec
mov
hlt
icebp
and
or
rol
rorb
adc
push
push
shll
lcall
call
sub
scas
push
in
mov
xchg
cmp
xor
por
inc
lods
mov
mov
and
push
push
dec
int3
cmp
lret
pusha
fimuls
pop
js
xchg
mov
inc
sbb
popa
lret
dec
push
add
add
push
int
jg
inc
lret
enter
pop
sub
rclb
mov
push
push
lods
xchg
pop
mov
es
push
lea
pop
mov
dec
add
into
pop
or
mov
orb
push
outsb
xchg
adc
popf
fwait
sub
xchg
cld
es
lret
call
fiadds
aam
fdivs
jl
out
dec
adc
or
dec
roll
loop
jnp
shlb
cmp
mov
imul
bound
xchg
push
and
aad
cmpsb
inc
inc
fisubrl
dec
inc
andl
jo
imul
les
dec
mov
dec
pop
jno
scas
lock
xchg
dec
lret
xchg
sbb
aad
pop
dec
jno
inc
es
mov
pop
or
push
mov
jae
rolb
sbb
dec
dec
in
stc
jns
push
mov
xchg
lock
lahf
inc
inc
xchg
adcb
rorl
push
pop
inc
push
mov
pop
imul
mov
cmpsl
rorl
jo
sub
sbb
cs
shr
enter
int3
xor
popa
adc
leave
xchg
sbb
xor
push
ficoms
dec
dec
push
push
iret
aaa
jge
lods
push
cmp
shlb
xlat
mov
dec
sub
adc
or
push
leave
repz
add
pop
nop
loop
or
clc
or
into
xchg
mov
sub
int3
push
repnz
aam
dec
inc
xor
lds
sub
and
sbb
or
push
mov
dec
sub
mov
popf
mov
mov
dec
mov
aaa
or
dec
inc
scas
mov
fs
lods
dec
mov
aas
stos
movsl
cmp
jecxz
sub
mov
not
fldenv
pop
xchg
inc
fimuls
rorl
popa
pop
dec
dec
int3
sbb
lods
sub
inc
pop
stos
push
inc
inc
es
push
adc
inc
push
sbb
xor
pop
bnd
dec
and
push
out
pusha
dec
sbb
in
xchg
cmpb
mov
mov
sahf
mov
scas
sub
push
push
cmpsb
xchg
pop
and
cmp
das
fistpl
push
push
sub
stc
push
iret
insl
dec
shlb
jno
mov
inc
or
dec
inc
jle
push
adc
mov
lock
mov
outsl
pop
inc
adc
imull
sub
ja
inc
sub
jne
dec
dec
push
inc
jg
push
add
pop
into
push
inc
jae
push
inc
dec
fcomps
sub
cmp
dec
or
jge
add
pop
mov
xchg
add
sarl
add
test
push
inc
loope
pop
xlat
imul
cltd
pop
shlb
pusha
inc
push
rorl
push
fwait
insl
neg
pop
imul
fnstsw
lret
enter
xor
sub
mov
adcb
inc
lods
stc
jb
and
xchg
and
pop
push
jb
fsubs
dec
push
jle
mov
lret
xor
inc
xchg
stc
xor
jge
insl
test
xor
dec
dec
mov
into
xor
mov
mov
mov
leave
pop
test
fwait
aad
int
jmp
sti
lods
inc
jo
shlb
or
imul
jle
dec
or
mov
rep
stos
inc
cmp
mov
add
inc
add
das
pop
in
call
loopne
pop
sti
sub
pop
es
in
clc
mov
fidivrl
dec
dec
jo
push
dec
mov
mov
in
dec
or
mov
pop
inc
adc
scas
mov
push
and
jmp
dec
xchg
and
and
pop
dec
sub
imul
mov
imul
fldl
or
and
aad
sbb
and
fxch
shrb
xchg
out
xor
fadds
dec
xchg
mov
fisubl
xor
das
adc
repz
stos
das
cmp
or
sbb
jae
enter
fldl
pusha
aaa
vorps
sub
pop
imul
pop
add
mov
popf
and
adc
mov
push
mov
xlat
mov
stc
dec
and
shll
lahf
das
xor
cmp
jecxz
pop
cs
sbb
or
dec
push
pop
mov
sbb
fwait
inc
leave
enter
lock
or
notl
dec
dec
adc
fiaddl
sub
xor
dec
xchg
mov
mov
nop
jnp
enter
pop
xchg
add
dec
and
lods
aam
sub
leave
xlat
pop
inc
add
push
xor
pop
test
adc
pop
leave
inc
pop
mov
insb
jl
jno
ret
add
adc
push
stos
mov
inc
mov
lret
cmp
jmp
jae
dec
mov
test
push
aad
inc
xor
mov
inc
lock
call
pop
pop
ret
sub
xchg
hlt
lock
sbb
xor
iret
imul
es
add
aas
mov
inc
cld
pop
push
test
jge
enter
cmp
enter
rolb
orb
push
stc
sub
mov
insb
inc
dec
rcr
or
add
or
dec
dec
out
cmp
lahf
jge
mov
int
das
dec
or
pop
insl
imul
mov
add
jae
shlb
mov
daa
leave
fs
pop
push
sub
jp
pop
and
stc
push
lods
cmp
dec
xchg
xchg
orl
fstl
shrb
call
pop
movl
enter
adc
pop
xchg
ja
pop
push
jae
lods
fcomi
movl
cli
adc
ds
into
gs
add
push
cltd
mov
inc
icebp
stos
adcb
dec
inc
inc
shll
enter
ficoml
cmp
in
xlat
push
clc
push
ss
xor
mov
dec
mov
data16
mov
dec
push
ret
jb
jns
push
inc
dec
xlat
gs
das
push
sbb
inc
fidivrs
push
and
movsl
pop
jmp
sub
xchg
inc
add
enter
hlt
inc
inc
xchg
out
xlat
cmp
int3
fstps
hlt
push
lahf
inc
stc
xchg
mov
inc
popf
xor
outsl
and
mov
pop
or
push
orl
inc
int3
jnp
pop
sti
scas
sub
pop
pop
repz
fists
dec
aam
push
out
sub
fists
repz
pop
inc
and
orb
cmc
mov
inc
dec
faddl
xor
push
gs
dec
jno
jmp
out
or
jb
and
pop
enter
mov
cltd
rolb
mov
ficompl
xlat
imul
sub
js
dec
lods
push
dec
jecxz
and
test
dec
push
sbb
icebp
push
mov
cmp
xor
out
daa
into
dec
test
cmp
adc
dec
or
lret
pushf
and
dec
jmp
cmp
xor
mov
inc
das
in
inc
scas
test
ffree
and
sub
push
sbb
mov
leave
aaa
rcrb
mov
dec
dec
je
push
shlb
out
mov
fwait
inc
imul
and
dec
push
push
cmpb
rcll
or
test
aad
test
fdivrl
jp
dec
mov
divl
leave
repnz
and
inc
xchg
sbb
jb
mov
leave
inc
loope
ret
sub
arpl
cs
ret
lods
dec
push
xor
or
dec
adc
mov
add
aad
mov
and
mov
ret
mov
or
cmp
stos
cmpsl
inc
mov
pop
xor
push
push
insb
pop
arpl
inc
dec
and
sub
pop
mov
ds
imul
outsb
push
fstp
aaa
sbb
pop
xchg
fcomps
mov
dec
xchg
mov
movsl
push
cmp
xor
in
in
xor
lods
fisubs
xchg
or
repz
cmp
insb
imul
sub
lret
sub
data16
das
mov
add
addr16
pop
icebp
inc
mov
rcll
sub
push
mov
fcmovnb
sbb
jns
out
inc
fildll
sub
dec
push
xchg
cmp
dec
lods
call
pop
mov
or
ret
push
jae
into
in
and
stc
sarl
dec
pushf
ljmp
dec
aas
adc
or
mov
mov
into
sub
fwait
shrl
sti
pop
insl
mov
push
enter
lds
mov
sbb
aas
cmp
push
add
mov
pop
sbb
push
inc
aas
mov
aaa
xchg
jno
or
cmp
out
std
adc
push
sbb
fidivs
inc
enter
inc
or
xor
jae
out
movsl
sbb
cmp
lock
out
xor
data16
rorb
and
sub
xlat
dec
cs
int
xor
mov
data16
inc
pop
inc
xor
imul
test
sahf
pop
loopne
pop
dec
cmp
das
mov
loope
sti
ds
xchg
push
sbb
outsl
or
and
add
inc
push
lods
cmp
mov
test
inc
sbb
push
jne
mov
sub
lea
push
push
mov
sub
aad
push
subb
ret
inc
shlb
das
push
rcll
jno
leave
std
add
or
mov
test
fcomps
pop
lods
enter
add
mov
loope
adc
ret
pop
stos
fld
test
out
inc
push
mov
stc
mov
inc
jmp
iret
in
lods
inc
mov
iret
adc
push
push
adc
cli
fdivr
cmp
xlat
mov
sub
sub
pop
sub
push
pop
and
sub
inc
adc
fdivrl
push
mov
cmp
leave
dec
shrl
pusha
sub
xor
inc
shr
jp
mov
pop
xor
lods
and
and
sub
jae
inc
icebp
push
inc
sarl
pop
xchg
pop
jle
inc
xor
lret
dec
push
stos
or
popf
pop
mov
mov
enter
in
mov
inc
loopne
clc
ret
and
mov
mov
inc
jo
addr16
inc
or
add
dec
rorb
dec
mov
imul
push
sahf
in
sbbl
loopne
push
inc
enter
rcl
xchg
in
mov
cltd
sub
push
rorl
ret
ds
pop
jne
cmpsl
sbb
dec
sub
imul
cmp
inc
loop
or
xchg
pcmpeqb
stc
push
xchg
leave
and
je
inc
in
ret
fstpl
push
enter
inc
fldcw
ds
call
das
push
push
push
add
jle
inc
leave
enter
fcoml
push
mov
iret
pop
and
outsb
xchg
dec
insl
dec
inc
push
dec
push
leave
dec
push
sub
pop
jecxz
fsts
cmp
xor
mov
inc
dec
insl
mov
frndint
dec
test
add
sarl
in
rsm
inc
fldcw
sarl
testb
mov
or
cmpb
sbb
es
mov
stos
std
ret
push
pop
push
mov
push
jns
movsb
mov
rcrb
mov
lods
inc
jo
or
cli
xor
sub
cmp
xor
jno
movsl
push
mov
pop
icebp
imul
jno
push
pop
push
ds
inc
imul
daa
ucomiss
movb
dec
mov
pop
enter
es
cmpsl
lods
cs
call
insl
call
mov
int
stc
pop
jno
dec
dec
mov
pop
xor
xchg
js
aad
fidivs
dec
rol
xor
insb
mov
push
movsb
push
inc
cmp
push
or
inc
pop
pop
mov
sub
adc
int3
or
mov
loop
pop
notl
adc
lret
push
or
call
insl
es
ret
imul
andb
flds
nop
or
inc
push
inc
loopne
pop
dec
jge
fisubs
scas
inc
stc
das
adc
inc
dec
sahf
je
pop
mov
imul
aaa
lods
clc
jmp
and
push
addr16
pop
pop
xchg
test
dec
or
adc
xchg
inc
cmp
rolb
or
pop
sub
push
dec
add
incb
dec
dec
fisttps
sbb
pop
jb
push
orb
fsts
lock
icebp
jp
mov
mov
cmp
cmp
xchg
cmpsb
xchg
jmp
add
out
xchg
xchg
cmp
sbb
fadds
fldcw
adc
mov
int3
mov
dec
dec
sti
js
sub
lahf
pop
mov
scas
jbe
arpl
imul
mov
mov
and
or
call
shlb
ja
push
or
stos
mov
int
fwait
lahf
das
xchg
lds
pop
repz
test
push
es
test
inc
add
and
lret
call
dec
lds
push
xor
dec
mov
test
addb
cmp
inc
test
cmc
das
lret
dec
cmp
sbb
mov
push
lock
mov
inc
push
add
js
push
shrb
imul
and
ret
dec
adc
lret
out
push
jp
imul
test
fmuls
out
sbb
lods
scas
cmpsb
mov
leave
sub
pusha
mov
call
dec
xchg
lahf
jo
cs
adc
mov
adc
inc
insl
dec
mov
outsl
call
das
leave
repz
mov
mov
mov
inc
shll
dec
or
pop
add
test
and
lds
and
cmp
shrb
div
aaa
sar
mov
pop
jmp
or
adc
enter
sub
dec
les
mov
sub
rcl
inc
sub
pop
cmp
test
xor
leave
fmulp
ss
stos
shrl
rclb
mov
inc
dec
xchg
xor
add
xor
fnstcw
adc
fsubl
pop
pop
xor
lods
adc
inc
push
sub
pusha
lcall
push
push
inc
insl
into
xlat
lret
outsl
aam
fldcw
or
lret
sbb
pop
imul
adc
cmp
aas
insl
nop
push
lcall
mov
dec
in
mov
mov
push
push
ja
inc
sub
in
xor
loopne
cmp
das
in
fscale
xor
push
stc
aaa
stos
add
push
iret
lret
adc
in
dec
add
push
lret
xor
nop
mov
fiadds
sub
add
mov
in
insl
sub
insl
jae
mov
loope
scas
jae
fadd
jns
mov
dec
mov
cmpsb
push
leave
repz
jecxz
push
or
pop
fwait
aad
call
sti
in
dec
les
mov
sbb
dec
add
sub
adc
pop
adc
sarb
or
cmp
iret
xchg
xchg
enter
roll
fdivl
mov
xor
dec
or
pop
ret
aad
ret
lock
inc
mov
pop
lret
imul
dec
stos
mov
test
push
jns
or
or
add
inc
pop
dec
push
subl
cmpsl
out
xor
mov
aam
fstps
ds
les
mov
dec
mov
cs
lret
decl
enter
dec
stc
xor
cmp
mov
stc
xchg
mov
inc
mov
nop
das
repz
pop
into
sub
pop
xchg
pusha
sub
gs
inc
mov
sub
mov
cmp
mov
sbb
jo
sub
shrl
mov
jo
ficoms
lret
ret
pop
call
push
mov
add
sub
mov
cmpsl
test
insl
fldt
xlat
insl
call
std
pop
push
or
popa
lret
push
inc
sti
repz
or
mov
cmpsl
rorl
jmp
out
pop
push
shrb
pop
dec
inc
adc
push
or
xchg
sbb
mov
dec
sbb
in
push
cmp
inc
ret
shll
rorl
mov
cmovne
xchg
loope
sub
mov
shrl
jg
dec
in
cmp
xchg
jb
mov
cmp
jle
enter
cmpsl
pop
sarb
imul
nop
lds
inc
mov
loope
cmp
stos
dec
int
dec
jb
lods
and
into
ljmp
cltd
xchg
mov
push
das
shlb
add
dec
dec
iret
push
mov
push
test
jp
das
push
adc
stos
xlat
inc
push
mulb
arpl
repnz
cmp
xor
imul
imul
xchg
ret
sti
rorl
mov
dec
sbb
sbb
inc
mov
xlat
inc
repz
addb
xor
xor
les
das
dec
dec
nop
clc
repz
imul
into
sub
js
test
loope
push
lock
add
or
dec
jo
mov
fimull
enter
dec
push
movsb
in
sub
out
add
fcmovnb
into
dec
mov
pop
or
or
cmp
insl
push
out
cmpsb
imul
mov
enter
repnz
mov
shll
jo
dec
lret
sub
roll
sbb
dec
sbb
pop
shrl
icebp
adc
sub
jmp
leave
scas
push
and
or
lea
pop
repz
dec
das
jecxz
push
out
sbb
sub
adc
daa
pop
mov
xlat
sbb
cmp
movl
dec
pop
sub
shll
sub
jg
lock
add
rcl
cwtl
xchg
int
add
test
inc
jmp
or
push
push
dec
call
adc
pop
or
ret
pop
pop
jmp
loop
adc
dec
jl
cmc
dec
sub
pop
pop
nop
mov
xchg
cs
push
xor
cli
xor
inc
sti
mov
jecxz
push
mov
ret
pop
enter
bound
xorb
iret
inc
in
sbb
jmp
aad
imul
inc
sub
inc
pop
xchg
das
data16
int
xchg
sbb
clc
sub
leave
into
mov
aam
jae
push
xchg
pop
add
push
pop
pop
xor
push
sub
and
scas
aas
pop
mov
mov
adc
insb
addr16
dec
divb
ss
ja
mov
sub
push
dec
int3
sub
cmp
add
fiadds
fidivrl
repz
lret
les
xchg
imulb
jmp
lcall
in
xlat
pop
cmpsb
call
fiadds
movsb
sbb
push
xchg
dec
mov
insl
sub
inc
shl
jle
dec
xchg
mov
test
ret
call
dec
leave
gs
pop
push
ret
push
add
xor
je
das
push
imul
or
mov
lret
pop
into
fwait
inc
pusha
movsb
rcrl
mov
jecxz
jp
iret
or
jge
pop
cld
or
xor
pop
mov
inc
xchg
or
mov
aaa
les
pop
mov
push
and
aas
pop
pop
jp
push
add
sbb
dec
cli
dec
xor
imul
insl
inc
arpl
dec
xor
mov
loop
dec
outsb
push
dec
test
and
fistps
push
or
in
idivb
inc
fldcw
xchg
pop
dec
sub
icebp
test
jns
mov
ret
pop
fisttpll
dec
bound
pop
aam
repz
mov
sub
js
inc
push
fcoms
fisubs
jp
dec
inc
pusha
mov
int
imul
aaa
push
add
xchg
inc
jecxz
adc
test
xchg
fsts
mov
mov
adc
mov
or
rcll
loopne
sub
push
bound
push
mov
lods
cmp
and
and
leave
pop
iret
mov
lret
push
hlt
sub
pop
mov
lds
cmc
push
dec
sub
lret
mov
xor
inc
jmp
mov
fistpll
sub
fwait
xchg
and
mov
pop
add
mov
sub
jmp
mov
call
leave
sub
lds
push
lret
loop
dec
push
dec
adc
fisttps
insb
jp
cmpsb
dec
fcoms
cmp
xor
pop
xor
nop
es
add
pop
push
and
inc
xchg
cmp
mov
cmp
push
adc
in
loopne
pop
in
cmp
xor
sbb
and
lea
mov
dec
shlb
bound
int3
jo
dec
or
std
sub
addl
pop
xor
sarb
cmpsl
sub
rorb
add
sahf
add
mov
sub
mov
xchg
es
nop
cmp
pop
sub
mov
jmp
fsts
pushf
sbb
push
inc
inc
fistpll
jo
mulb
popa
pop
sub
fwait
inc
lret
sub
sbb
mov
jnp
cmp
sub
or
push
repnz
dec
push
push
and
jnp
dec
lret
inc
push
into
scas
or
repnz
inc
inc
push
aaa
xor
dec
sub
inc
add
pop
dec
mov
pop
mov
sbb
sub
inc
dec
mov
shrl
data16
es
cmp
lods
xchg
push
inc
mov
dec
jo
add
mov
pop
vcvtdq2ps
int
enter
add
add
enter
xor
fldl
or
mov
xlat
inc
aam
insb
pushf
loop
dec
cmp
cmp
pop
leave
insl
pop
jb
jmp
lods
inc
cmp
fisubs
mov
mov
aam
jp
sarb
movsl
rorb
pop
dec
daa
sbbl
in
push
movsb
inc
push
das
push
mov
aas
lahf
mov
sbb
mov
xlat
fsubl
cmp
pop
add
daa
push
leave
subb
inc
js
pop
cmc
gs
into
jbe
push
sbb
lcall
rorl
sub
dec
lret
imul
ficoms
and
xchg
push
dec
divl
inc
lods
xchg
push
mov
fisubl
sub
scas
adcb
pop
movsb
cmp
pop
or
dec
clc
enter
and
xor
jmp
add
jl
inc
push
fsts
das
cmc
das
pop
ret
inc
push
cmp
sbb
dec
push
dec
lcall
inc
adc
add
inc
sar
sub
jmp
sub
rcll
mov
pop
pop
cli
enter
dec
inc
scas
add
adc
mov
imul
int
adc
movsb
mov
stos
call
inc
mov
mov
das
ret
dec
aad
push
dec
insl
imul
sub
mov
fwait
les
rcrl
mov
pushf
sub
daa
mov
mov
or
call
aaa
enter
loope
mov
insl
inc
xchg
idivl
cmpsl
fcmovb
sub
test
add
lods
or
add
sub
lret
imulb
push
inc
push
push
dec
sub
fpatan
sbb
push
mov
xchg
pop
adc
das
jb
dec
mov
or
dec
xchg
aam
or
xor
vmovapd
test
mov
int3
lret
es
jecxz
fimull
pop
dec
xchg
outsl
dec
xor
lods
push
pop
les
idivl
bound
icebp
fmuls
sbb
and
adc
addl
xor
push
mov
mov
or
jno,pn
negb
pop
leave
movsl
fwait
rclb
xchg
cmc
repnz
loopne
rclb
sbb
xlat
lcall
rcrl
sbb
enter
xor
jmp
aad
cmp
mov
and
shrl
and
rcrb
clc
dec
sub
shll
fiaddl
leave
fsubp
jno
mov
push
inc
hlt
int
sub
shl
jno
jae
shll
into
dec
imul
leave
inc
and
mov
bound
push
inc
fcmovnb
cmp
sahf
ret
inc
inc
mov
test
enter
call
enter
in
xorb
mov
gs
aad
in
ret
inc
dec
orb
lods
inc
imul
call
out
sub
icebp
cld
dec
xor
mov
dec
pop
adc
iret
fidivrl
push
mov
dec
jmp
mov
cmp
push
lret
sub
fcmovnb
pop
fldpi
or
inc
out
jge
leave
or
inc
lock
vpaddusw
dec
add
push
sub
jmp
fwait
sub
push
fwait
jmp
out
int3
push
lods
filds
les
dec
sbb
scas
sahf
push
pushf
dec
pop
enter
jno
inc
dec
sbbb
push
dec
mov
pusha
insl
out
ficomps
mov
andl
mov
in
pop
shrl
out
das
jmp
cmc
pop
mov
push
lret
pop
orl
es
jecxz
cmp
sbb
adc
outsl
push
push
add
push
or
pop
imul
and
repz
cmpsb
loopne
popa
pop
xchg
xor
dec
inc
xor
das
push
mov
pop
fs
stos
mov
inc
fbld
pop
lret
sub
stos
out
push
lret
push
lock
mov
movl
adc
into
dec
xor
jno
xchg
call
sbbb
adc
push
dec
scas
enter
js
and
outsl
mov
push
sbb
inc
enter
fldt
test
jmp
sub
lret
or
subb
pop
add
in
leave
and
push
sub
sahf
mov
push
lret
fstps
inc
lret
xor
orb
dec
xor
add
enter
and
outsb
mov
jmp
jmp
mov
stc
pop
dec
or
jp
pop
fmuls
jecxz
cs
and
and
sub
scas
fucompp
out
add
jmp
dec
mov
pop
dec
and
mov
or
int
mov
sahf
enter
pop
or
pop
sub
outsb
in
aaa
mov
fs
outsl
std
pop
xlat
frndint
int3
fistpll
outsl
sarl
and
cs
out
dec
das
lods
pop
inc
outsl
xlat
scas
xor
es
out
outsl
adc
pop
xlat
popf
inc
xchg
aaa
push
or
push
adc
jae
gs
leave
lods
dec
xor
mov
dec
call
subl
cmp
inc
lret
icebp
mov
aaa
mov
push
lds
inc
inc
loopne
stc
push
fstl
xlat
nop
lea
pop
mov
cmp
les
aas
cmp
pop
inc
pusha
xor
add
imul
stos
sub
ret
inc
or
test
in
dec
es
mov
mov
pop
pop
loopne
ret
mov
push
cmp
call
xchg
int
pop
aas
dec
mov
dec
jns
popf
lea
mov
ja
pop
inc
inc
inc
cwtl
xor
push
lods
ss
imul
sti
mov
sub
or
jb
mov
xor
imul
flds
dec
das
imul
jo
dec
cwtl
imul
loop
push
das
jae
sbb
mov
xor
in
sub
sbb
push
dec
mov
mov
cmp
jno
mov
and
dec
sub
mov
sbbb
flds
xor
fisubl
lret
push
mov
add
movsb
cmp
scas
dec
pop
jno
call
jg
dec
add
test
pop
mov
je
mov
addr16
aas
inc
insl
or
mov
dec
sub
mov
or
adc
lret
xchg
mov
inc
jg
adc
sbb
daa
movsb
jb
sbb
cmp
add
mov
and
gs
insb
movsl
and
cwtl
inc
es
shll
lret
test
pop
dec
or
add
fwait
insb
mov
lock
jne
lret
or
push
sahf
push
xorb
sub
fildl
pop
pop
dec
pop
insb
cmp
add
inc
pusha
or
push
js
pop
pushf
and
cmpsb
daa
pop
popa
imul
lock
nop
aaa
inc
fcoms
add
sbb
inc
and
mov
fldl
xchg
inc
sti
les
or
ret
push
and
push
imul
sbb
andb
pop
pop
sar
xchg
adc
jb
cmp
push
and
loop
push
outsb
stos
push
sub
jmp
fdivs
dec
popf
pop
dec
mov
pop
dec
lods
push
and
fcmovnb
jl
pop
jmp
jecxz
dec
mov
mov
jno
push
mov
jmp
fldcw
inc
test
mov
add
sub
test
dec
adcb
push
and
cltd
rolb
push
dec
push
pop
dec
mov
inc
dec
sbb
pop
shll
or
pop
dec
pop
jmp
pop
fcoms
jmp
pop
jle
cmp
push
arpl
dec
aaa
sarl
inc
dec
fldcw
sub
fwait
push
sub
or
jmp
dec
inc
sub
jae
xchg
icebp
js
inc
imul
aam
bound
enter
xchg
stos
lret
push
enter
pop
dec
repz
mov
xchg
pop
xchg
popa
dec
sbb
cmp
add
jle
fidivrs
push
mov
dec
and
xchg
or
loope
or
add
dec
pop
mov
inc
mov
inc
aad
cli
xchg
inc
jo
sbb
cmc
jmp
cmp
jnp
leave
push
imul
shr
and
insl
insl
push
mov
enter
dec
jo
rcrl
xchg
clc
pop
dec
popf
int
xchg
inc
pusha
add
push
push
jne
mov
xor
dec
mov
jno
mov
sarl
sub
std
dec
lods
aaa
push
cmp
das
insb
xor
out
and
dec
mov
add
mov
push
sbb
push
mov
dec
and
pop
insl
cmpps
push
xchg
repnz
sbb
mov
popa
xchg
lock
pop
cmp
adc
fiadds
mov
mov
loope
out
fnsave
or
stc
test
popf
pop
inc
insb
cmc
xlat
ss
popa
enter
cltd
mov
sub
cld
fstp
loopne
and
sarb
hlt
sub
or
push
sub
sub
xor
pop
push
or
pusha
leave
push
imul
dec
xor
mov
cmpb
push
sub
adc
sub
xor
ror
sbb
dec
mov
xor
dec
js
and
add
push
jp
pop
ret
lcall
imul
je
inc
jno
push
mov
xor
sahf
es
push
stos
mov
dec
adc
pop
cmpsb
dec
or
adc
xor
inc
and
dec
nop
push
dec
stos
xor
jae
dec
mov
and
adc
push
shll
lods
das
nop
sub
sub
outsb
enter
pop
daa
imul
cmp
or
mov
sbb
push
fstp
cmp
imul
add
loopne
push
mov
sahf
test
sub
popa
sbb
inc
jo
pusha
xchg
mov
inc
addr16
out
dec
dec
and
xor
dec
xor
and
pusha
mov
adc
es
popa
enter
add
fdivl
aam
jne
jp
add
push
mov
dec
outsl
xlat
loopne
fisttpl
arpl
jae
dec
cmp
sti
jo
sub
inc
dec
sbb
not
fildll
mov
icebp
negb
imul
data16
xchg
rcrl
ret
adc
xor
cltd
pop
pop
shrl
xchg
mov
xchg
inc
inc
imul
pop
sub
xor
xor
cld
into
pop
inc
mov
mov
xchg
inc
repz
mov
push
pop
dec
or
loopne
lret
mov
add
sub
inc
insb
stc
cmpsb
pop
inc
sbb
fsts
pop
push
xlat
enter
sub
or
test
push
mov
pop
dec
in
inc
int3
inc
push
pop
dec
inc
adc
sbb
push
rcrb
idivb
shll
mov
mov
sbb
mov
lret
test
sbb
inc
mov
cmp
xlat
sub
push
or
mov
dec
xor
pop
imul
mov
rcrl
sub
mov
or
xchg
lds
inc
lret
or
cmp
fimuls
mov
pop
push
add
adc
dec
push
xchg
sub
push
inc
dec
imul
xchg
daa
dec
add
jecxz
ret
or
test
sub
push
int3
pop
arpl
add
xor
cltd
mov
push
sarl
lret
sbb
add
jmp
cmpsb
dec
dec
out
inc
jmp
mov
int3
xchg
mov
test
jp
xor
sbb
sbb
xchg
fwait
mov
add
mov
shll
push
sub
and
inc
or
out
int3
push
push
and
aad
mov
xchg
xor
mov
scas
push
inc
mov
dec
rcrl
cmc
leave
inc
fstl
in
addr16
mov
outsl
inc
mov
bound
fisttpl
shrb
dec
out
jb
cs
inc
push
push
mov
pop
add
sbb
and
inc
js
jne
mov
dec
sti
sub
pop
lret
inc
rcrb
pop
inc
push
adc
push
dec
dec
and
push
or
add
inc
jb
jmp
add
insb
push
cmpsb
sub
movsb
push
dec
es
das
repz
push
inc
in
mov
push
adc
xchg
mov
cs
push
repz
sub
enter
ds
xchg
inc
push
pop
mov
jnp
rcrb
mov
push
dec
push
enter
push
inc
call
cltd
dec
out
sub
insb
pop
dec
lahf
fldt
jo
jno
sbbb
inc
sbb
push
cltd
mov
pusha
add
iret
sbb
and
pop
aad
or
jmp
pusha
mov
fdivrl
push
mov
and
inc
in
xchg
jmp
mov
sub
adc
pop
cwtl
aad
xlat
fbstp
or
and
scas
fimull
scas
popa
sti
or
push
sbb
mov
lret
pop
pop
lds
adc
or
inc
lret
dec
scas
ja
sub
lret
dec
rorl
negb
sub
mov
dec
sbb
dec
sub
pop
xchg
enter
mov
push
addb
mov
sahf
pop
lret
adc
mov
push
sub
pextrw
adc
mov
pop
lock
pop
je
inc
adc
sti
adc
push
and
das
hlt
push
rorl
loopne
push
push
les
xor
fwait
inc
mov
cmc
inc
push
sub
inc
lret
into
das
insb
xchg
in
rorb
mov
lahf
addr16
dec
mov
jecxz
inc
or
shrl
loope
push
add
movsl
pop
in
out
lret
pop
iret
shl
mov
inc
dec
xchg
push
xchg
addr16
arpl
inc
pop
leave
cmp
jae
sub
aam
rol
push
das
xchg
adc
cli
jmp
sub
add
cmp
jmp
mov
or
dec
js
mov
ficompl
imul
or
jae
aaa
pop
jb
inc
ja,pn
adc
mov
lds
dec
cmpl
mov
fxch
push
xchg
pop
jns
leave
cmp
cmp
xchg
dec
in
das
push
pop
aaa
push
in
lds
adc
sub
call
mov
leave
cld
dec
pop
jo
lret
mov
pop
ret
adc
fildll
push
or
cmpsl
xor
push
xlat
pop
mov
inc
lods
dec
push
push
imul
inc
dec
test
ja
fldenv
mov
pop
sahf
mov
jb
push
movsl
push
or
mov
sbb
pop
into
add
sbb
mov
mov
xchg
shll
cmp
or
sbb
xor
mov
inc
mov
clc
shll
es
dec
das
rorl
dec
rcrb
xchg
movsl
or
dec
negb
jp
es
ret
js
js
fwait
jl
enter
sub
ret
adc
hlt
push
xchg
dec
cmp
enter
repz
pop
xor
pop
divb
shrl
sbb
push
inc
hlt
add
dec
pop
aad
in
cs
add
rclb
cld
sbb
loop
sbb
jb
jae
pop
jle
shrb
pop
push
mov
dec
lea
call
cmp
addb
test
imul
push
les
push
inc
xor
dec
dec
rorl
push
dec
push
aaa
cmp
sub
pop
jle
sub
mov
and
adc
leave
fwait
push
jecxz
xor
dec
fisubrl
cmp
push
dec
add
and
mov
test
inc
call
push
dec
dec
call
jae
or
sbb
or
push
dec
push
js
adc
scas
pop
frstor
cmp
dec
jae
cmp
xchg
outsl
mov
cmp
lret
and
add
jg
cmp
dec
xor
push
pop
jmp
test
xor
iret
dec
mov
insb
not
clc
ret
fdivr
int
xchg
enter
mov
jae
int
aaa
idivl
das
xor
loop
xchg
add
push
pop
leave
sbb
xor
xor
add
push
fildl
dec
mov
icebp
adc
mov
inc
inc
mov
stos
xor
or
into
dec
jae
repz
add
mov
jmp
or
loopne
sbb
into
lds
push
mov
fimull
or
mov
cmp
js
dec
dec
cmpsl
fs
into
sub
pop
aaa
rclb
push
lods
cmp
fnop
addr16
pop
push
gs
pop
push
ljmp
xor
sbb
or
adc
jg
and
pop
push
loopne
icebp
xor
pop
or
adc
pop
mov
sub
lcall
leave
push
adc
pop
fadds
push
dec
jecxz
xor
cltd
loop
pop
lret
pop
shlb
mov
sub
rol
sub
das
and
xchg
inc
sub
inc
arpl
fcmove
jge
xor
enter
nop
sub
dec
mov
pop
in
xor
jmp
test
cmp
xchg
dec
mov
mov
faddl
enter
mov
pop
negb
sbb
lahf
insb
push
pop
call
inc
sub
scas
dec
pop
call
sarl
fstps
inc
mov
rcrl
dec
add
js
and
rcl
rol
push
in
jl
push
enter
iret
ja
outsb
lods
or
inc
shrb
stc
mov
rclb
xchg
enter
test
adc
and
add
rcl
sub
inc
iret
xchg
lahf
test
inc
icebp
dec
inc
in
cmp
clc
ror
pop
jg
ret
shlb
mov
dec
pushl
shr
leave
lret
mov
enter
cmp
int
mov
test
push
sti
push
xor
dec
dec
jl
dec
or
sub
sbb
aas
sub
cmp
cmp
add
es
mov
push
call
sbb
divl
inc
lret
dec
xchg
fstpl
add
cmc
cmp
push
mov
mov
push
fisubl
cmp
inc
jp
imul
movb
xor
mov
mov
imul
mov
pop
stc
sub
jmp
cmp
push
push
push
repz
imul
inc
push
cmpsb
lods
push
pop
lcall
lret
outsl
cmp
adc
dec
cltd
dec
dec
das
sahf
add
lcall
test
mov
int3
dec
pop
lret
dec
mov
cmp
sbb
dec
orb
cmc
pusha
pop
dec
inc
sbb
popa
xchg
dec
mov
dec
rol
dec
push
xchg
fldcw
aas
pop
mov
sub
xlat
popa
and
cld
push
pop
fmuls
in
and
rolb
lret
insb
rol
xor
adc
or
add
inc
sub
xlat
out
inc
inc
shlb
aam
rcrl
push
push
mov
insl
adc
pop
cltd
dec
jnp
mov
dec
dec
sbb
cmp
mov
dec
in
aaa
call
and
add
cmpsl
out
jnp
pop
shlb
jmp
ret
cmp
jb
adc
jns
push
stc
cmp
cmp
jmp
and
aad
pop
gs
loop
and
pop
mov
dec
bound
adc
repnz
pop
clc
cmp
and
push
mov
push
sub
pop
leave
call
test
dec
jno
icebp
dec
mov
lods
push
sub
fimull
int3
inc
mov
or
sub
or
sbb
pop
mov
into
pop
mov
or
xchg
inc
push
lods
cmpsl
lods
mov
sbb
ficomps
pop
push
pop
push
add
pop
rcl
rorl
dec
les
mov
ficomps
fbstp
jle
sub
push
test
aad
lcall
cmc
dec
xchg
loopne
push
int3
pop
call
xor
mov
mov
imul
filds
add
pop
push
or
push
cli
sti
fwait
leave
iret
inc
and
pop
in
jae
ss
cmp
mov
cmp
cs
sbbl
xchg
ret
cwtl
rcrb
leave
mov
jge
xchg
inc
call
inc
imul
pop
sub
or
lock
divl
inc
cmp
jg
insl
pop
fstps
and
ss
jns
mov
lods
inc
dec
adc
inc
aas
xchg
lea
push
rol
in
xor
ret
dec
fwait
repnz
test
arpl
push
gs
xchg
push
mov
mov
jl
enter
or
push
mov
stos
ds
dec
dec
mov
rorl
fldenv
sub
or
push
pop
mov
inc
sub
out
mov
or
shll
jne
jo
scas
sbb
dec
fnstsw
mov
fcomps
pop
or
nop
das
push
sbb
mov
mov
push
gs
or
aam
int3
lret
test
pop
mov
inc
loope
xchg
sbb
stos
or
adc
mov
pop
rolb
inc
dec
jno
jecxz
fidivs
push
pop
add
rep
cmp
add
lock
insl
pushl
push
gs
insb
xor
enter
loope
fstl
push
test
fcoml
mov
pop
mov
adc
jecxz
pop
push
movsl
and
cwtl
lds
inc
jb
dec
mov
mov
mov
fs
push
sbb
and
movsl
fisttpl
xor
sub
lea
nop
pop
jmp
fstpl
inc
and
inc
jg
jnp
mov
out
sub
rcrl
imul
scas
ret
loopne
fcoml
lock
and
fs
add
lret
inc
ja
push
mov
dec
dec
and
sbb
dec
iret
xor
adc
mov
pop
pop
js
roll
bound
or
jg
add
inc
stc
sahf
pop
adc
dec
cltd
fs
sub
mov
stc
sarb
ret
dec
jns
push
sbb
sub
ds
iret
dec
mov
stos
ret
test
xor
sub
fsubl
out
aaa
cmp
fisttpl
push
sub
mov
xchg
divb
rorb
mov
pop
mov
xor
jns
test
sub
das
mov
mov
and
dec
xor
jns
sub
jle
xlat
or
add
leave
xor
aam
and
cmpsb
stc
push
lods
pop
nop
rolb
imul
mov
dec
push
das
xor
xchg
cltd
roll
mov
push
or
rcll
shll
mov
xor
roll
stos
pop
dec
repnz
adc
sti
lahf
dec
or
and
push
push
das
ja
pop
ret
xlat
jg
int
imul
and
das
inc
push
sub
mov
fidivrl
cmp
dec
mov
cs
dec
mov
movsl
inc
enter
mov
gs
loope
dec
leave
sub
inc
pop
cld
sbb
pop
leave
mov
pop
insl
inc
jnp
xlat
js
add
movsl
fistpl
leave
sbb
loop
push
cmp
push
fistps
repz
cmp
sbb
ja
lcall
lret
loope
les
dec
sub
cmpsb
cmp
mov
or
jb
enter
xchg
sarb
jg
push
fwait
mov
clc
dec
out
mov
or
movsl
aam
mov
outsl
cltd
inc
push
sub
mov
mov
xor
jae
in
xor
data16
pop
enter
sub
leave
mov
inc
cli
cmp
push
bound
dec
jno
int3
jnp
ret
mov
fistps
or
cmp
dec
shl
inc
int3
and
inc
lcall
pop
shlb
pop
cmp
sub
add
inc
mov
ficoms
test
xor
and
lahf
xchg
sbb
dec
mov
xor
lds
pop
das
cmpsl
xchg
imul
cltd
pop
pop
inc
arpl
les
jg
inc
in
pop
push
sbb
pop
add
push
sarl
push
lods
ss
xor
xor
inc
shrb
fisttpll
test
xor
daa
push
mov
stc
sub
or
xchg
inc
pop
cmpsl
dec
loope
xchg
test
inc
dec
ret
add
fldcw
insb
mov
xor
movsl
pop
ss
leave
cwtl
int
and
mov
pop
sub
clc
clc
xor
mov
lret
cmp
imul
push
push
pop
sub
icebp
das
xchg
sarl
and
pop
int
outsb
cmp
test
mov
sti
pop
mov
hlt
mov
adc
dec
fld1
pop
cmpsl
rcll
or
call
mov
mov
xchg
add
lock
mov
mov
jge
cmp
clc
push
roll
inc
pop
mov
mov
stos
lret
jb
and
dec
push
pop
pop
sub
mov
push
mov
call
cmp
daa
test
push
sub
dec
xchg
fwait
rcll
pusha
pop
dec
lds
pusha
int3
sbbb
enter
adc
sbb
sub
hlt
inc
pop
shll
pop
push
int
xor
lret
xor
mov
out
add
jb
enter
or
xor
sub
adc
xchg
rcr
and
js
fadds
je
xchg
sub
lret
and
xor
fistps
fiaddl
in
fisubl
mov
dec
adc
push
je
ds
inc
es
push
add
push
sub
es
xchg
dec
fildl
enter
xchg
jge
call
xor
jmp
shl
pusha
sbb
pop
int
xor
repz
push
jne
pop
mov
shll
mov
mov
enter
xor
ja
dec
pusha
add
pop
jae
mov
add
outsl
pop
inc
aaa
dec
push
mov
mov
test
shll
shrl
dec
outsb
add
bswap
rcrl
jl
rolb
xlat
stos
sub
pop
inc
cmp
inc
push
jae
dec
mov
pop
push
push
xor
adc
stos
lock
and
push
mov
sbb
sbb
inc
push
call
dec
outsb
pop
pop
rorl
sbb
sub
cwtl
lds
sub
or
iret
popf
insl
jmp
test
dec
pop
je
gs
inc
push
inc
std
das
jne
aam
std
pop
cmp
cmp
adc
pop
adc
mov
push
fldcw
nop
sub
lds
mov
push
inc
pop
sbb
test
loop
jmp
dec
dec
xchg
push
int
ss
leave
enter
lock
jmp
lret
js
pop
shrl
push
dec
mov
jo
push
pop
inc
adc
lods
sub
push
mov
add
in
xor
out
shll
es
and
outsb
sub
and
jb
test
leave
shlb
lock
dec
mov
sub
orb
test
rorl
adc
fiaddl
xor
lods
mov
or
mov
lds
xlat
leave
jae
jge
xchg
jmp
pop
aam
mov
insl
adc
push
dec
fisttpl
ja
push
in
leave
pop
fnstenv
pop
shrb
cmp
xchg
cmp
andb
pop
and
cmp
push
je
dec
jg
int3
orl
fimull
push
pop
jmp
data16
inc
es
pop
mov
add
push
test
ret
inc
enter
adc
inc
mov
mov
dec
adc
gs
pop
push
out
das
xchg
push
dec
imul
fiaddl
lods
fcmove
loop
cmp
and
loope
cmp
call
pop
xor
stc
das
pop
repz
adc
movsb
lods
pop
test
dec
xor
nop
inc
pop
jnp
xor
inc
adc
test
or
fidivl
cld
adc
daa
movsl
and
imul
adc
ret
test
lcall
call
dec
sbb
rcrb
inc
xor
js
pop
inc
mov
lods
mov
lret
xor
jae
xchg
nop
xchg
and
or
fldcw
adc
add
fisttps
pop
lret
jl
fistps
movsb
fnstcw
inc
dec
pusha
inc
inc
lret
or
cli
mov
test
lcall
fstpt
sbb
cmp
ror
out
add
jae
lret
pop
int3
rorl
rorb
jo
pop
outsb
lods
xor
dec
add
dec
pop
push
nop
add
inc
inc
lahf
pop
fdivs
cmp
je
mov
jge
dec
dec
mov
mov
xchg
mov
push
mov
or
dec
dec
jae
jo
in
dec
fs
and
adc
push
imull
adc
mov
mov
sub
mov
hlt
test
or
adc
enter
jae
ret
gs
aam
push
lods
cmp
mov
or
add
jnp
inc
daa
enter
imul
dec
adc
mov
inc
mov
shr
adc
ror
sub
test
push
rcrb
mov
mov
int
sub
and
xchg
xchg
pushf
jb
sub
aaa
pusha
jl
jmp
jb
xor
mov
cmp
xchg
in
sub
sti
pop
and
pop
cmp
sbb
cmp
dec
aas
sub
int3
std
cmp
or
pop
adcb
fisubrl
out
dec
dec
xor
inc
lcall
fists
sbbb
dec
lret
pop
jnp
fldcw
js
push
add
pop
adc
jb
inc
sub
pop
ret
lds
pop
aad
adc
xor
fcomp
cld
pop
call
dec
dec
insl
test
push
call
add
movsl
leave
cwtl
sub
pop
xor
add
fwait
pop
xchg
jg
xlat
and
es
enterw
mov
push
cmp
cmp
mulb
test
jae
out
cmp
sti
pop
xlat
rcrl
xchg
lret
sbb
dec
push
imul
add
cmp
clc
or
ja
rcll
sbb
xchg
pop
fcompp
cli
test
dec
out
pop
sbb
inc
mov
inc
inc
adc
lcall
test
pusha
loope
enter
loop
sarl
inc
inc
enter
dec
lds
ds
fimuls
flds
adc
push
in
sub
sbb
cwtl
inc
sar
push
and
mov
and
adc
pop
pop
adc
dec
sub
js
mov
jmp
fisttps
mov
stos
rcrb
push
enter
inc
jle
adcb
call
dec
inc
dec
cmp
or
ficoms
push
mov
sahf
pushf
pop
fiadds
inc
lahf
je
sbb
fldl
imul
nop
cmp
aas
xchg
dec
mov
mov
push
push
inc
jns
xor
fisttps
nop
cmp
fisttps
mov
lret
dec
jae
add
cmpsb
push
mov
clc
outsl
js
adc
aad
fs
xchg
fldl
jge
push
repnz
mov
test
cmp
pop
mov
inc
dec
out
inc
in
mov
shlb
push
ret
pop
xchg
sub
lds
pop
mov
xchg
pusha
in
dec
ds
jmp
mov
mov
push
push
shlb
das
xchg
jno
mov
pop
push
cltd
cmp
push
outsb
mov
insl
jns
push
dec
mov
or
aad
mov
je
xchg
int3
inc
inc
add
and
mov
imul
add
sbb
fisubrl
lods
lret
inc
test
rcrb
sbb
iret
xchg
pop
push
push
and
push
xor
push
mov
test
push
lret
orb
cmp
cmpsl
ror
call
inc
inc
fimull
xchg
loopne
pop
pop
popf
jno
test
into
lods
add
pop
int3
sub
inc
and
insl
sbb
inc
dec
imul
xor
insl
dec
push
dec
inc
stos
arpl
inc
testb
add
aad
sub
inc
dec
cwtl
xor
inc
pop
or
push
jae
cmpsb
leave
sar
popf
loope
ja
rcrb
rolb
adc
inc
push
leave
movsb
xor
sti
lds
adc
sub
xor
pushf
outsl
sub
adc
cmp
shlb
push
push
mov
push
dec
dec
or
rorb
dec
pop
aas
dec
mov
aad
dec
ror
dec
sbb
int
mov
into
gs
xor
pushl
clc
mov
fisttpll
inc
cmp
dec
icebp
jecxz
and
xor
inc
push
xchg
mov
mov
cmp
fistl
xchg
dec
lret
pop
int3
or
mov
les
imul
xchg
dec
jnp
mov
stc
mov
mov
add
mov
fnsave
dec
xor
das
mov
inc
jno
xchg
sbb
inc
in
pop
sub
lret
shlb
adc
pop
sbb
mov
test
mov
test
push
push
dec
xor
das
rcr
inc
fwait
xchg
push
and
repz
aaa
lret
aad
outsb
pop
into
dec
aad
dec
in
or
lods
and
ret
aas
imull
xchg
xorl
out
scas
mov
mov
or
aas
fwait
dec
mov
push
or
int
fmul
pop
inc
jmp
stos
adc
xchg
or
filds
stos
dec
mov
xchg
mov
sahf
xlat
cmpsb
mov
fdivs
outsl
inc
hlt
dec
inc
jo
adc
shll
or
push
sub
dec
les
stos
nop
push
enter
xor
mov
inc
enter
sub
and
jns
dec
enter
adc
out
out
int3
aad
sub
xchg
iret
inc
mov
mov
lock
mov
and
fildll
leave
lret
push
shrl
aaa
pop
cmp
fldt
lret
sub
inc
or
imul
les
movsl
das
bound
jne
aad
mov
push
ret
or
sub
jmp
sahf
sti
push
dec
pop
dec
mov
xchg
rol
dec
sub
sar
adc
jns
xchg
add
leave
mov
cmpsb
jne
je
int3
pop
leave
push
pop
pop
xchg
push
mov
int3
lret
mov
push
das
outsb
addr16
lret
dec
arpl
shlb
dec
int
inc
inc
sti
push
jl
addb
mov
and
xchg
or
enter
les
push
and
push
aaa
adc
pop
shlb
ror
movsl
sbbl
into
movsb
imul
pop
sbb
pop
dec
imul
movsl
rcrb
call
mov
rcr
cmp
xor
inc
jne
rclb
or
mov
jnp
or
fnstsw
faddl
in
enter
mov
jmp
sahf
cmp
movb
pop
dec
or
lahf
push
inc
dec
outsb
jnp
fdivs
xor
xchg
dec
mov
pop
popf
cmp
mov
lret
jae
ret
mov
leave
roll
inc
push
fs
jle
inc
jg
mov
or
sub
jmp
sbb
dec
das
and
xchg
call
into
xchg
test
scas
aam
arpl
out
ss
lcall
pop
adc
xchg
mov
push
lea
mov
fst
outsl
dec
loope
loop
outsb
push
pop
inc
mov
xchg
movsl
in
inc
dec
dec
fnstenv
pop
rolb
and
and
test
int3
push
stc
iret
dec
jmp
dec
hlt
add
mov
mov
rcll
shrb
stos
sub
sub
lret
jl
dec
or
adc
push
pop
sbb
fisttpll
es
cmp
cmp
pop
dec
push
hlt
mov
imul
add
dec
inc
pop
les
leave
pop
out
pop
pop
push
cmp
mov
ds
adc
dec
jmp
cmp
cmp
sbb
jno
repnz
out
jle
aam
stos
movsb
jnp
push
pusha
clc
push
adc
leave
adc
pop
pop
fbld
sub
dec
shll
xor
cmp
pop
fistpl
dec
data16
mov
je
and
sbb
lret
clc
das
lcall
dec
sub
push
rcll
mov
lahf
lret
call
sub
xchg
xchg
pop
inc
dec
test
cmp
dec
dec
lcall
js
xchg
andb
mov
icebp
das
adc
sub
sub
jmp
mov
jl
fdivrs
xor
insb
or
shl
shr
jns
and
mov
dec
rcl
push
dec
sbb
and
dec
daa
sahf
and
xlat
lods
cs
inc
inc
loope
cmp
fstl
lea
pop
insl
imulb
adc
ficoms
sarl
push
or
inc
jnp
dec
pop
jne
testl
sub
lret
pop
shrl
stos
or
mov
push
bswap
inc
int
fisubl
and
pop
mov
add
lret
mov
sbb
add
lods
xor
rolb
clc
int3
insb
sub
mov
xchg
inc
push
mov
test
dec
adc
cmp
lds
pop
stos
lahf
dec
pop
pusha
pop
xchg
repz
sbb
cmp
cmc
add
or
enter
dec
inc
in
es
lods
shrb
sub
xlat
enter
rorl
xchg
rolb
mov
ficoml
xor
roll
inc
adc
insl
cmpsb
push
rorb
scas
cmc
repnz
sbb
ds
push
aaa
loop
stos
sarl
cmp
inc
xor
mov
pop
loop
xor
dec
jae
aaa
push
inc
dec
push
enter
jle
es
call
iret
daa
dec
pop
mov
inc
inc
icebp
dec
leave
dec
shlb
sub
dec
xor
das
addl
nop
push
mov
dec
sbb
mov
push
dec
xlat
jo
or
out
add
call
sbbl
and
inc
mov
push
sbb
sbb
xchg
mov
pop
dec
xchg
push
dec
inc
test
fcomip
adc
aaa
fbld
mov
dec
add
lods
push
pop
push
dec
inc
aas
fxch
push
das
sub
mov
and
movsl
aam
xchg
jp
xchg
enter
or
bound
push
add
pop
rorb
sub
pop
sbb
lret
sub
mov
cmp
jge
add
mov
mov
xor
andl
outsb
in
inc
pop
daa
jmp
mov
pop
jl
cmpsl
aaa
fmull
andb
mov
push
into
adc
sub
int
inc
idivb
pop
rcl
std
pop
shlb
push
jecxz
adc
shrb
adc
push
mov
jae
js
pop
pop
pop
test
mov
pop
sub
cwtl
inc
dec
in
cmp
cmc
dec
dec
cmpsl
pushf
aad
pop
push
fcoml
fs
das
sbb
mov
inc
into
sbb
dec
inc
iret
fiaddl
jp
in
xor
sub
rol
mov
sub
dec
out
clc
cwtl
jb
dec
mov
dec
sub
mov
testb
jae
test
test
push
lods
push
xor
clc
push
cmpsb
es
inc
mov
jmp
xchg
cmp
shlb
xor
xchg
insl
mov
lock
or
push
cs
push
add
into
enter
sub
imul
mov
les
sbb
or
das
cmpl
aam
cmpsl
rolb
jne
or
enter
repz
pop
xor
imul
or
sbb
and
out
daa
push
lea
sub
xchg
sub
fwait
or
iret
lds
icebp
or
dec
push
call
fcmovb
je
fsubrl
sbb
movsl
leave
cmp
mov
adcb
sbb
sbb
xor
imul
pop
dec
sarl
dec
sub
mov
adcl
and
test
lret
xchg
pop
dec
enter
das
push
dec
cmp
sub
xor
mov
cmp
imul
xor
enter
push
out
mov
aad
stc
sbb
enter
pop
inc
std
in
xor
loope
xchg
mov
aaa
push
int3
leave
dec
inc
fisubs
mov
push
int
fcmovnu
inc
cmp
mov
xor
cmc
mov
aad
or
mov
mov
jae
das
xchg
push
sub
mov
dec
loop
into
sub
fsubs
clc
mov
inc
sbb
shr
push
pop
mov
sub
ds
jae
inc
scas
xchg
push
loopne
aam
pop
sub
push
das
lods
xchg
mov
xchg
push
jns
add
fisttpl
dec
cmp
lcall
or
popw
dec
data16
mov
lret
jp
jae
int3
mov
rolb
push
das
and
scas
pop
cmp
div
adc
mov
inc
xor
mov
nop
bound
aam
repz
push
push
mov
dec
sub
inc
inc
inc
xor
xor
or
ss
cmp
push
push
mov
das
clc
lret
xor
out
int3
push
xchg
inc
xor
xor
xchg
shlb
mov
pop
sahf
ret
pop
sub
mov
adc
pop
out
mov
xlat
inc
mov
enter
xor
mov
jmp
pop
push
dec
lds
int
dec
adc
push
sahf
pop
fisubrl
xor
lods
fdivl
leave
in
mov
les
cmp
ficoml
out
inc
xor
shlb
push
rcl
push
push
xchg
inc
xchg
dec
push
sub
rcrb
pop
mov
fnsave
mov
insl
push
xchg
and
or
fildl
lds
shrb
mov
add
das
pop
jecxz
decl
in
mov
cmp
add
inc
pop
mov
stc
das
shrl
pop
adc
pop
mov
lret
cmpsb
sub
pop
sub
nop
lods
test
mov
sti
mov
mov
push
or
lret
fldcw
mov
leave
dec
mov
sub
xor
pop
lods
ds
dec
pop
fiaddl
pop
push
xchg
leave
lret
mov
mov
das
or
sub
pop
out
add
adc
dec
or
and
push
add
sbb
xchg
cmpsb
mov
sub
jne
cmp
rcr
push
imul
clc
adc
add
xor
insl
ss
rolb
pop
push
in
dec
mov
and
mov
lret
lret
push
lods
cmp
push
je
pop
mov
lret
push
dec
leave
mov
ss
and
filds
inc
mov
sub
inc
sub
jecxz
movsl
dec
mov
loope
and
ret
sbb
insb
dec
outsl
cmp
pop
int3
push
jae
pushf
sbb
dec
insb
adc
insl
cmp
fistps
dec
popf
sub
xchg
dec
fisubrs
dec
lret
cld
xor
mov
push
mov
and
cmp
fstpt
shlb
sub
sub
adc
pop
lods
call
xchg
shrb
xchg
sub
mov
insl
sarl
xchg
xor
aas
push
test
push
dec
lods
mov
fs
dec
pmaxub
lods
addb
lods
ret
dec
sub
bound
cmp
dec
imul
dec
icebp
in
cmpsb
push
inc
aad
scas
stos
or
aas
inc
scas
sub
pop
xor
test
inc
inc
ss
inc
inc
rolb
imull
sbb
xchg
xor
dec
mov
and
push
xlat
leave
jmp
ds
and
xor
lock
inc
or
rolb
rolb
and
mov
sbb
push
dec
outsb
ret
sub
adc
leave
clc
mov
enter
xlat
test
sahf
xor
outsb
pop
into
rorl
ds
jmp
insl
pop
mov
jno
add
ss
add
addr16
push
dec
dec
sbb
hlt
sbb
sub
mov
xchg
xor
clc
inc
dec
inc
fsts
es
and
or
cli
pop
pop
xor
jp
inc
mov
stc
rcrl
cmp
jmp
xchg
push
popf
test
inc
stos
jb
icebp
pop
enter
stc
dec
cmp
xchg
sbb
adc
push
int3
add
push
sbb
bound
scas
fldenv
push
in
leave
into
pushf
repz
pop
dec
or
mov
lret
movsl
inc
add
out
dec
aaa
inc
mov
or
adc
mov
inc
lods
in
pop
movsl
pop
test
dec
fnstcw
push
aam
pusha
push
adc
sub
sub
sbb
mov
xor
mov
pop
adc
and
push
stc
arpl
ret
inc
inc
mov
sbb
fstpl
rcl
fnstcw
pop
int
stos
fs
das
mul
pusha
mov
test
push
sub
add
pop
in
lret
call
inc
or
fstp
cltd
bound
fists
jb
inc
xchg
fsubs
cmp
pop
inc
mov
xchg
push
inc
lods
sbb
dec
adc
sbb
in
push
pop
and
push
cmpsl
rolb
inc
push
das
cmc
gs
inc
push
sbb
cmp
dec
cmpsb
mov
das
clc
pop
adc
dec
jge
and
push
jns
shll
fucomi
ss
cmp
cmpsl
rcll
sub
aam
inc
test
fldt
in
pop
fsubs
and
sbb
fsubrl
dec
inc
fisttpll
scas
mov
hlt
mov
sub
sub
xchg
sub
aad
sbb
test
push
push
or
insb
sbb
jb
xchg
loopne
cs
enter
xchg
inc
sbb
jmp
mov
gs
pop
push
or
pop
fmulp
pop
mov
pop
and
adc
lock
sbbl
mov
mov
test
push
enter
push
ss
fldcw
mov
inc
in
dec
stc
sub
and
jmp
adc
dec
out
inc
adc
das
pop
pop
adc
pop
jmp
push
dec
push
push
jno
inc
inc
push
mov
mov
pop
adc
mov
roll
xchg
lret
jge
add
data16
clc
popa
and
dec
subb
addr16
lods
sub
add
pop
mov
and
and
mov
push
fstp
adc
shlb
leave
sbb
cli
shl
clc
xchg
add
rcrb
jp
imul
shrd
rcll
cmp
adc
mov
adcb
push
iret
aam
pop
rcrl
nop
aad
je
ret
adc
or
add
dec
push
jmp
or
push
dec
dec
fnstcw
push
pop
xchg
fidivs
sub
pop
push
fwait
nop
xchg
mov
lret
repnz
pop
dec
jmp
mov
inc
leave
mov
sub
ret
imul
inc
aaa
dec
enter
sub
add
mov
gs
test
cmp
lahf
cmp
stos
sub
leave
xlat
pop
inc
xor
shlb
adc
jecxz
das
pop
pop
push
add
mov
cwtl
push
mov
repz
push
xlat
inc
push
aad
fcmove
sbb
jb
addr16
lret
jl
pop
nop
mov
cmp
in
jb
ficomps
fmuls
inc
and
enter
jle
mov
inc
inc
mov
cmc
loop
roll
push
sub
jg
sbb
dec
std
cmp
or
cmp
cmp
out
in
fisttps
sub
push
mov
dec
pop
dec
add
sub
push
lret
pop
stos
adc
test
scas
fxch
or
aaa
jle
push
push
bound
fimuls
enter
fmull
lods
jno
pop
pop
add
jne
pop
and
and
enter
int3
pop
mov
pop
sub
push
xor
mov
les
dec
xor
mov
push
adc
add
dec
aas
and
xchg
pop
sub
test
nop
cmpsb
cmp
lret
leave
mov
je
lret
pop
enter
push
xor
shl
stc
fldl
es
nop
pop
mov
adc
mov
jl
sub
xlat
dec
pop
das
clc
stos
sub
mov
add
mov
aad
iret
fisubl
mov
stc
mov
push
or
mov
aam
or
xchg
test
dec
ret
sub
aad
repnz
int
stos
jp
cmp
xor
push
repnz
inc
or
add
or
loopne
into
clc
dec
aam
dec
xor
mov
iret
subl
dec
jecxz
ret
xor
push
mov
dec
inc
ret
inc
sti
enter
int
pop
xlat
sar
lret
rclb
mov
mov
sub
jns
xor
xchg
and
leave
sub
or
insl
cmp
xor
inc
imul
repnz
push
int3
and
push
inc
jmp
push
dec
pop
call
lret
sbb
in
push
cmp
fcmovnb
push
pop
call
inc
cmp
pop
pop
and
inc
or
sar
pop
stos
shlb
mov
fs
push
add
cmp
dec
add
cltd
sbb
xchg
gs
sub
int
imul
fdivrs
sahf
dec
pop
loop
inc
in
les
sub
sub
cmp
dec
push
xorb
addl
mov
xlat
mov
push
dec
jo
dec
dec
jno
das
xor
jns
xor
or
or
fildll
rcrb
xor
pop
fstl
call
mov
int3
inc
sbb
mov
imul
fiadds
repnz
adc
xor
jmp
xchg
clc
sbb
cmpsb
add
mov
test
in
inc
and
push
xchg
into
cld
add
into
and
add
dec
xchg
out
push
and
add
in
push
xchg
xor
jge
xchg
rolb
push
jne
dec
jno
cmp
fstpl
xor
jae
fisubs
sbb
fs
sub
ret
sub
fsubrs
mov
lret
rcrl
les
les
sbb
dec
pusha
andl
mov
fldcw
movsb
rorb
daa
push
jae
add
shrb
pop
sub
das
scas
mov
mov
jno
jl
dec
enter
xor
out
imul
in
ja
xor
data16
sbb
dec
or
icebp
sub
fisttps
call
fisttpll
je
inc
adc
inc
leave
rorb
mov
add
call
cmp
dec
lahf
addl
push
add
scas
xor
or
mov
hlt
dec
imul
imul
inc
cmovno
xchg
pop
xchg
push
jmp
dec
pop
or
cmp
fisubs
lea
iret
mov
jno
inc
dec
or
push
aad
sub
xor
inc
xor
cld
enter
push
or
sbb
ds
enter
xchg
insb
test
adc
out
push
outsb
dec
lret
mov
push
sub
pop
pop
jecxz
xchg
and
xor
adc
fstps
push
xchg
cld
or
rcrl
inc
jae
push
mov
sbb
sub
xchg
das
repz
push
xchg
push
sahf
dec
into
xchg
dec
fucomi
cmpsl
mov
mov
sub
lea
dec
out
repz
fldl
add
adc
rcl
pushf
sbb
inc
mov
pop
inc
imul
sub
xor
int3
pop
or
dec
cmp
aad
mov
dec
pop
inc
jp
pop
xor
and
adc
sar
pop
cmpsb
insb
and
aad
int
add
mov
pop
sbb
push
push
or
test
sub
adc
cmp
iret
arpl
dec
push
jno
test
int
lock
and
pop
push
jecxz
rorb
dec
push
int3
mov
shlb
mov
sbb
sbb
or
cli
push
das
ja
mov
stos
mov
push
xchg
int
popf
push
sti
mov
int3
fmuls
mov
leave
enter
dec
shrb
inc
inc
jae
pop
rorb
sub
add
pop
addr16
mov
or
dec
mov
repz
pop
leave
xchg
sbb
fdivs
gs
inc
jnp
clc
pop
adc
dec
cmp
leave
jmp
fldenv
mov
enter
push
adc
sub
jae
mov
fld
mov
js
push
nop
shll
sbb
cmp
sub
das
mov
fnstsw
rcll
into
or
stos
insl
dec
jb
dec
call
mov
mov
sarl
insb
mov
fistpll
lea
loop
jge
pop
mov
pop
push
aas
lods
cmpsl
pop
dec
jmp
sub
aad
int
mov
js
jg
clc
stos
into
mov
add
mov
enter
mov
cltd
fistps
pop
mov
cmp
push
sub
pop
mov
insb
cmp
dec
push
imul
jno
sbb
dec
xchg
ret
fwait
lret
dec
sahf
and
and
push
mov
dec
js
popf
dec
dec
sub
adc
pop
das
nop
sbb
ja
stos
mov
dec
int
jo
inc
dec
test
mov
jmp
lods
mov
adc
mov
pop
sbb
jne
xchg
dec
jecxz
sbb
dec
repnz
pop
das
sub
add
pop
dec
cmpsl
xchg
pop
rcrl
push
push
add
adc
ja
leave
stos
fcompl
xor
xchg
lahf
movl
pushf
fmull
push
fisttpl
popa
pop
outsb
push
add
pop
roll
aad
or
jmp
xor
call
cmp
shlb
rolb
cmp
xlat
cmp
add
xchg
stos
ret
mov
addr16
push
sbb
or
mov
dec
cmp
test
scas
int3
out
push
in
lods
popf
cmp
xchg
mov
int
shll
arpl
aad
or
dec
and
dec
aad
push
sub
xor
adcb
cmpb
lods
mov
xor
mov
cmpsb
sub
pop
jmp
out
imul
imul
lds
pop
xor
fistl
dec
arpl
call
ja
les
lret
xor
jge
pop
outsb
push
inc
mov
movsb
dec
push
jle
loope
mov
int3
frstor
mov
fldcw
mov
adc
inc
jne
push
shrb
xor
mov
pop
sbb
mov
push
rorl
xor
xchg
push
push
dec
and
das
cmp
push
adc
ficomps
adc
mov
imul
incb
pop
pop
dec
dec
loop
pop
leave
cwtl
stos
enter
fidivs
push
or
dec
xor
push
or
mov
dec
inc
pop
dec
adc
jbe
cmp
fidivrs
cmp
sarl
inc
xor
cltd
fisubrs
das
repz
mov
rorb
mov
jne
pop
push
pop
shrb
adc
sub
jle
dec
pop
call
pop
sub
lret
sub
push
daa
clc
fldt
dec
aad
xchg
or
dec
fcompp
dec
ja
push
adc
inc
inc
jl
jo
xchg
testb
xor
dec
jp,pt
fcmovb
pusha
pop
xchg
dec
lret
dec
mov
and
das
mov
dec
int3
jmp
rcrl
jb
outsb
xor
ja
es
sbb
enter
add
fwait
dec
cmp
push
dec
hlt
xchg
push
fldcw
mov
xchg
fsubrl
sbb
pop
cmpsl
mov
dec
or
shl
xchg
xor
sti
sarb
or
cmpsb
inc
in
lock
jb
int3
xor
fimull
lret
jg
aad
out
sub
mov
mov
fsubrs
push
aas
push
es
rcrb
dec
pop
repz
pop
shr
dec
and
inc
jns
scas
dec
sub
jnp
aam
jmp
insb
push
sbb
adc
lods
xchg
les
ret
daa
mov
into
inc
sub
cltd
push
push
lret
pop
out
pop
mov
pop
imul
inc
pop
push
pop
dec
pop
mov
dec
lret
xchg
xchg
xlat
testb
or
add
jmp
fldt
out
aad
rol
pop
inc
stos
xlat
sar
or
fwait
push
mov
mov
push
sub
jge
jnp
pop
mov
adcl
mov
mov
orb
in
push
popa
aad
mov
fmuls
pop
fsts
pop
mov
pop
xchg
sub
push
pop
daa
test
test
or
jg
fsts
push
pop
cmp
dec
subb
sub
rorb
jb
and
incl
pop
negl
cmp
push
pop
jmp
mov
movsb
inc
inc
leave
adcb
dec
ds
rorb
push
or
fcom
pop
dec
dec
aad
das
xor
dec
and
push
es
jmp
enter
and
sahf
loopne
dec
enter
pop
fiadds
in
pop
scas
mov
push
pop
inc
mov
dec
lahf
stos
pusha
pop
repnz
loop
xor
push
cltd
dec
inc
nop
and
inc
mov
clc
fnstcw
dec
out
cwtl
jge
rcrl
leave
out
xchg
enter
lds
sti
out
int3
xor
enter
shrb
icebp
adc
jp
or
xor
fstpt
dec
data16
adc
cmp
ss
dec
cmpsb
je
sub
dec
pop
push
stc
pop
imul
inc
push
cwtl
test
and
pop
cmp
mov
fstpt
jne
in
pop
inc
xchg
mov
shlb
pop
popf
orl
out
cli
repz
push
mov
xor
insl
adc
push
lds
inc
dec
call
repz
push
int3
fldenv
dec
adc
mov
or
jmp
bound
shl
clc
out
sub
inc
adc
lods
fisubrl
pop
xchg
mov
pop
les
mov
loope
inc
xor
test
fbld
xorl
std
fldl2t
xlat
sub
rorb
aas
push
jmp
sub
add
or
and
sahf
cmp
rcrb
in
xchg
jns
pop
sub
push
fidivrl
jecxz
leave
push
popf
and
sbb
inc
dec
loop
push
enter
fs
pop
inc
pop
pop
mov
in
jle
or
test
mov
cmp
aad
xchg
add
add
jno
mov
cmpsl
sbb
rolb
insb
int
mov
jno
lock
sub
cmpsb
rcl
rolb
call
sub
inc
int
sbb
xchg
loopne
repz
jnp
in
or
or
rcrb
inc
push
dec
inc
mov
xor
aas
addb
cmp
adc
mov
popf
and
popa
leave
movsl
jl
inc
sbb
mov
stos
jecxz
shll
dec
test
ret
or
pop
psrad
or
or
fwait
cmc
lret
xor
aaa
inc
lds
mov
dec
push
mov
or
dec
push
fidivrl
pop
imul
das
call
xchg
pop
push
adc
inc
call
inc
dec
sub
loop
xor
lret
leave
xchg
inc
enter
into
lds
xchg
insb
pop
push
push
lret
mov
iret
push
inc
dec
xchg
rcl
aad
add
dec
xlat
xor
das
cmp
mov
in
adc
cmp
lods
dec
leave
or
adc
out
pop
cmp
pop
inc
mov
sub
fldcw
jle
pop
push
dec
add
push
mov
jnp
pop
inc
or
adc
cmp
sub
push
sub
inc
fmulp
or
lds
leave
test
aam
cli
sahf
imul
push
lret
mov
adc
add
xor
sbb
pop
cmp
je
int
sub
pop
or
cltd
insl
add
adc
add
aad
cld
push
cmp
sbb
sarl
and
inc
fisubrs
pushf
movb
dec
push
or
lock
mov
mov
push
inc
xor
dec
push
test
jg
iret
dec
xchg
sti
and
pop
or
out
movb
arpl
push
push
pushf
ret
dec
or
sub
ret
pop
jmp
sahf
sub
push
inc
pop
sbb
cmc
inc
xadd
pushf
rol
leave
push
imul
sub
cltd
dec
dec
fisttpll
sbb
push
ret
mov
sub
cmp
iret
inc
or
inc
pop
pop
adc
gs
push
xchg
inc
icebp
push
mov
or
and
inc
push
dec
add
sub
mov
cmc
mov
clc
push
dec
dec
mov
dec
jae
and
push
inc
xlat
jno
pop
mov
aaa
pop
les
clc
dec
xor
add
pusha
popf
in
push
das
and
pop
pop
pop
adc
mov
jle
mov
jmp
push
das
xchg
call
xchg
fisttps
xor
stos
mov
aad
movl
push
aam
pusha
inc
xchg
dec
out
loop
rcll
scas
and
jns
pop
cmp
mov
inc
and
rcrl
bswap
addl
push
inc
adc
dec
scas
in
xchg
out
int
stc
dec
sub
mov
pop
push
loopne
loope
push
pop
fidivl
lret
jge
out
shlb
rcrl
stos
sub
iret
mov
jnp
mov
daa
xor
ds
pop
jecxz
adc
sub
es
or
push
ret
jno
rclb
mov
mov
jo
sub
int
mov
pop
adc
les
enter
jmp
fimuls
and
mov
push
pop
pop
or
roll
inc
add
sbb
sbbl
push
mov
or
ss
cmp
mov
repz
push
enter
sub
push
add
aam
pop
call
push
fwait
xchg
sbb
aas
ss
subb
fnsave
push
pop
dec
dec
inc
mov
dec
fxch
test
fcmovnbe
sub
leave
movsb
mov
scas
dec
sbb
adc
xor
lahf
dec
enter
xchg
cmpsl
pop
add
pop
dec
mov
lahf
push
js
dec
sub
jl
sbb
pop
sub
js
lret
leave
and
push
pop
jmp
jle
aad
dec
push
subl
cmp
or
xor
pop
inc
loopne
dec
adc
mov
cmp
push
add
jmp
mov
rcll
or
sub
es
inc
push
cmp
and
test
xchg
push
out
mov
shlb
sbb
or
mov
imul
cmp
push
cld
jno
xor
dec
or
subb
push
or
rcrl
inc
mov
cmp
or
inc
test
sbb
dec
and
leave
mov
dec
pop
jg
repnz
sub
lods
pop
das
sar
or
int
pop
jae
pop
addb
push
dec
inc
stos
lret
sub
lds
sub
xchg
mov
les
lea
test
push
leave
imul
pop
imull
mov
sbb
push
iret
dec
ja
call
add
dec
repnz
mov
nop
inc
cmp
es
stos
pop
inc
dec
popf
or
or
lods
sbb
and
jmp
ds
test
cmp
stos
push
cmc
push
push
out
jnp
adc
push
int3
push
sub
jno
inc
sub
sub
jnp
fstpt
push
stos
cmpsb
fwait
inc
or
andb
xchg
xlat
add
sub
xlat
xorb
mov
mov
pop
int3
or
cmp
rol
dec
repz
and
inc
or
inc
adc
test
inc
push
lret
pop
lods
push
fwait
dec
insl
fcmovne
jmp
and
aam
pop
sub
mov
sbb
or
lds
mov
insl
dec
dec
das
mov
and
out
push
pop
pop
fsubp
pop
sub
aad
fucomip
dec
das
outsb
lock
dec
inc
xor
icebp
rorl
ds
dec
std
push
push
cmp
xor
ja
pop
in
and
das
mov
jae
mov
sbb
out
push
dec
pop
aad
push
xor
call
ss
out
push
pop
mov
jns
xor
sub
inc
push
sbb
pop
pop
data16
dec
iret
or
shl
int
je
pop
enter
push
stos
and
imul
or
cli
sbb
inc
mov
inc
jp
jle
inc
inc
sbb
mov
xor
rolb
adc
jne
mov
push
jmp
jp
pop
pushf
xor
pop
pop
push
mov
lret
mov
pop
pop
cmp
das
add
push
or
jmp
push
xchg
sub
push
sub
push
and
push
insl
insb
fmuls
and
dec
ficompl
sub
repnz
cmpsl
shl
pop
cmp
dec
mov
inc
call
les
mull
push
dec
in
das
xchg
jo
pop
pusha
cmp
jl
inc
mov
fcompl
pop
leave
ds
int3
ficoms
xor
bound
outsl
leave
and
push
xchg
int3
clc
pop
fisubrl
cli
push
dec
fsubrs
flds
adc
ret
jnp
dec
add
mov
push
dec
dec
loop
pop
shl
sub
cmp
pop
pushf
insb
popa
dec
adc
std
and
mov
das
pop
push
lock
data16
ret
push
hlt
add
out
nop
leave
cwtl
dec
xchg
int3
dec
pop
ds
sub
out
xor
jno
dec
cmp
jae
lods
outsb
sub
sahf
adcb
sbb
xlat
xor
push
inc
add
jp
lds
inc
fisttps
lea
jne
aam
xor
or
cmpsb
mov
dec
pop
rcl
xlat
cs
pop
push
sbb
cmp
mov
push
mov
repnz
push
sub
jmp
addr16
out
dec
fwait
jo
cmp
aas
enter
shll
leave
or
ja
jge
dec
xor
sub
push
loop
sbb
mov
dec
rcrl
cmc
sbb
and
cwtl
ret
rcrb
inc
test
icebp
popa
hlt
push
vsqrtpd
cld
int3
inc
imul
lock
xlat
mov
mov
adc
flds
jnp
hlt
das
or
inc
dec
inc
inc
int3
pop
xchg
pop
rcrb
lss
fisubrl
popf
insb
pop
sbb
movsl
lret
or
cmp
movl
inc
add
fldl
xchg
xchg
xchg
or
sbb
mov
mov
jmp
and
and
inc
dec
and
and
inc
dec
dec
ds
jle
enter
iret
dec
or
push
pop
insb
ds
xor
je
pop
pop
clc
lret
adc
aas
fisttps
or
filds
and
push
inc
push
negl
aaa
xor
pop
and
xor
xchg
outsl
cmc
dec
dec
lds
cmp
aam
fiaddl
aam
pop
dec
aas
push
sbb
or
outsb
xchg
push
sub
fldcw
xor
inc
bound
insb
clc
inc
lahf
rcr
fnstenv
sbb
push
in
inc
sub
pop
imul
les
cltd
xchg
test
and
shrb
and
and
pop
and
ficompl
sarb
and
je
xor
sub
loopne
inc
mov
fildl
cmp
mov
cmp
cmpsl
imul
xor
mov
leave
adc
adc
push
pop
mov
dec
jp
inc
or
leave
es
jmp
fsubr
dec
push
test
es
and
lcall
rorl
pop
shlb
jmp
es
dec
add
mov
sub
jne
inc
repz
cmp
adc
sbb
lds
push
push
dec
cmp
aas
aad
fmuls
mov
cmpsb
outsl
push
add
negb
inc
loope
mov
fwait
push
test
popa
dec
enter
xor
or
dec
test
and
sbb
adc
pop
dec
jae
cmp
mov
int3
and
add
sbb
push
push
push
imul
pop
sbb
jg
jl
inc
insl
jp
lret
sub
jle
adc
sti
pop
push
add
daa
fiaddl
xchg
pop
cli
nop
dec
and
cmp
enter
rclb
jae
lret
dec
push
adc
push
push
mov
mov
call
ret
push
sub
mov
mov
jae
inc
filds
dec
push
mov
mov
push
push
inc
or
adc
stos
jb
and
push
jp
in
ja
ret
inc
xchg
sub
dec
mov
frstor
iret
sbb
loopne
mov
iret
pop
adc
fimuls
and
xor
cmp
dec
cwtl
adc
mov
adc
enter
add
push
sbb
or
pop
pop
aas
addr16
inc
stc
stos
dec
nop
add
xchg
adc
mov
cmpsl
dec
enter
xor
repnz
jle
inc
fld
sbb
xchg
sbb
ret
mov
xor
data16
dec
cwtl
fnstsw
push
add
adc
lods
dec
inc
dec
andb
jmp
push
dec
sbb
mov
lea
xchg
cmp
xor
push
and
in
inc
lea
lods
mov
and
fmuls
scas
outsl
out
jl
aam
jp
inc
sbb
or
cli
pop
dec
inc
cmp
cmp
xlat
scas
or
mov
pop
sub
jl
xchg
ja
add
xchg
pop
xor
pop
sub
xchg
inc
add
pop
mov
xorb
or
lock
enter
das
adc
xor
jnp
cld
leave
arpl
inc
sub
pop
push
test
mov
clc
xor
dec
pop
loopne
lret
push
jp
cmp
insl
inc
ret
push
add
mov
roll
sahf
mov
sbb
les
jb
xchg
xchg
enter
inc
push
cmp
insb
mov
idiv
adc
or
das
push
test
mov
stc
jne
jmp
pop
das
pop
ret
bound
aad
mov
inc
inc
inc
stc
rcrl
jge
and
jns
mov
adc
xor
dec
in
cld
push
rorb
xor
dec
mov
int3
jmp
xchg
dec
mov
jns
push
rorl
push
inc
push
and
add
dec
lcall
shr
xchg
orl
das
mov
dec
or
sub
or
fstpt
jb
xor
jp
adc
inc
inc
mov
inc
pop
or
adc
inc
sbb
insb
hlt
and
add
or
pop
pop
fimuls
shrl
xor
iret
scas
pusha
repnz
lock
push
int3
pop
dec
push
out
and
xlat
cli
fstpt
inc
and
les
or
ret
shll
out
testl
mov
pop
out
fimull
sti
pop
push
and
adc
frstor
dec
xor
aas
xchg
pop
push
add
call
stos
imul
dec
hlt
push
jmp
push
lods
test
mov
push
and
pop
rol
pop
mov
leave
push
out
inc
rorb
jp
inc
xchg
xchg
or
adc
in
and
sahf
dec
xchg
xor
push
clc
and
pop
popf
testl
dec
xlat
dec
adc
dec
enter
int
roll
mov
pop
pop
imull
push
test
popa
repz
fldcw
jne
dec
pop
mov
mov
imul
nop
mov
xchg
mov
jnp
xor
aad
push
xorb
push
repz
icebp
adc
dec
loopne
sbb
mov
fst
xor
mov
shll
rcrl
cli
and
pop
repnz
movsl
xchg
fistl
pushf
push
das
cmp
inc
adc
enter
in
sti
jmp
xlat
shlb
mov
ss
leave
xchg
push
lret
mov
movsl
pop
lret
inc
and
sar
cmp
xchg
lds
sti
stc
adc
dec
push
int3
push
imul
aam
and
mov
das
leave
mov
icebp
lret
mov
jmp
or
inc
inc
mov
push
jmp
xchg
repnz
or
leave
mov
ret
sahf
clc
dec
test
jecxz
or
popa
out
push
test
enter
adc
jmp
sub
js
sbb
fldcw
jecxz
inc
sub
or
lods
and
inc
mov
aaa
inc
pusha
clc
adc
out
imul
popf
pop
dec
dec
pop
jge
call
xor
das
cmc
dec
pop
jmp
sub
adc
insb
scas
push
mov
pop
cld
jae
pop
icebp
xchg
sbb
pop
dec
dec
imulb
pusha
push
pop
dec
popf
mov
jmp
sub
adc
in
mov
xchg
js
adc
mov
pop
push
push
and
sub
inc
ds
repnz
push
adc
jl
dec
dec
or
fs
jo
stc
dec
fstpl
in
jg
sarb
inc
or
inc
sbb
sub
xor
or
pop
sub
dec
popf
lahf
push
sbb
add
xchg
dec
inc
sub
ficoms
roll
aas
push
iret
test
jmp
dec
dec
mov
cmp
push
mov
sub
and
and
dec
movsb
test
inc
dec
adc
sbb
hlt
xchg
enter
jb
lods
add
push
adc
sub
mov
jb
dec
in
faddp
decl
icebp
sub
xchg
mov
cltd
sub
sti
das
jmp
mov
pop
pop
dec
push
adc
inc
stos
cmp
gs
js
iret
add
dec
pop
xor
cmp
jg
das
ja
dec
out
and
cli
sub
xor
xor
das
shrb
and
jae
sarb
pushf
pop
orl
mov
shrl
leave
mov
sub
mov
pop
cwtl
adc
lock
sub
rcll
ss
sbb
inc
dec
dec
mov
das
jmp
cmpsl
dec
inc
or
mov
xlat
scas
inc
cmp
shl
dec
add
addr16
sub
push
mov
pop
shlb
sbb
pop
sub
mov
pusha
es
jae
cld
push
pop
adc
movsl
adc
push
xchg
adc
loopne
push
rolb
lods
pop
int
icebp
cmp
fadd
mov
push
jmp
pop
pop
into
fimull
mov
pop
fisubrl
mov
push
cmp
xor
push
pop
xchg
sti
insb
mov
push
pop
dec
iret
loopne
adc
inc
fdiv
cmp
nop
inc
pop
adc
out
pop
sub
lea
adc
les
cmp
and
insl
movsb
pop
shr
lods
pop
push
and
int
add
xor
sbb
mov
lret
dec
imul
pop
cmp
inc
shlb
sbb
mov
and
sti
mov
jecxz
cmc
jmp
subb
dec
lea
lea
ror
sub
dec
arpl
ss
call
mov
out
clc
int
push
and
xchg
pop
dec
dec
ror
das
shrl
or
testl
jo
out
shrb
fadds
repnz
fcmovb
insl
inc
or
push
adc
inc
sbb
dec
jnp
int3
mov
mov
scas
pop
cmp
dec
mov
mov
pop
movsl
cmc
cmp
mov
lods
inc
or
shl
sub
int
or
inc
leave
xor
mov
pop
shlb
sbb
inc
into
mov
mov
test
cmp
out
pop
sti
sub
or
enter
mov
xor
rcrl
dec
das
insb
test
sbb
cmp
les
mov
jno
pop
pushf
ret
shrb
sbb
roll
enter
mov
cmp
sub
adc
scas
inc
push
sub
cli
cmp
int
cmp
mov
filds
orb
dec
pop
and
stc
sbb
or
cltd
insb
clc
push
sbb
fs
sub
fstp
dec
dec
jb
xor
dec
and
mov
mov
push
inc
rclw
dec
cmp
xor
call
rorl
popa
adc
pop
add
sbb
insl
lds
lods
cs
xlat
pop
push
jnp
cmc
and
ss
lret
stc
mov
push
dec
xchg
pop
rorl
sub
and
mov
pop
enter
stos
and
aad
insb
inc
in
pop
vmulps
xlat
or
xor
pop
push
add
ror
inc
aam
xor
das
shll
or
imul
ss
dec
inc
sub
jle
xor
or
cmp
push
icebp
mov
or
iret
push
out
add
or
cwtl
jnp
outsb
push
push
mov
fstpl
mov
out
dec
sbb
xor
into
gs
push
inc
stc
xchg
push
mov
imul
sub
push
dec
mov
push
daa
fwait
cmp
mov
adc
xor
xor
dec
movb
je
divl
scas
lcall
inc
insb
js
mov
mov
push
sbb
xor
push
stos
dec
pop
icebp
rorl
ret
add
sbb
mov
jns
rolb
enter
push
enter
mov
inc
inc
push
es
cmpsb
shll
stc
inc
sub
and
aas
jb
aaa
roll
repz
jmp
aad
mov
shrl
push
adc
mov
cmp
sbbb
rorb
test
push
adc
dec
pop
into
out
lahf
sub
fstps
xchg
inc
aam
cmpb
shrl
pusha
mul
cmp
cmp
and
icebp
and
call
adc
sub
outsb
stos
pop
inc
inc
out
imul
in
push
inc
add
mov
mov
int3
sbb
dec
push
and
int
xchg
fstpl
mov
lods
lds
xor
fisubrs
enter
inc
jg
enter
and
push
fwait
lods
ret
inc
inc
pop
mov
pop
dec
clc
mov
mov
pop
aam
xchg
aaa
pop
ror
cmp
enter
mov
fsubrl
bnd
scas
cld
push
aaa
rorl
sub
inc
adc
dec
inc
sub
mov
xor
les
mov
lods
and
adc
push
or
lods
xlat
fiadds
cltd
das
fldcw
jle
mov
ficompl
and
je
dec
mov
fadds
xlat
sahf
dec
xor
outsl
fisttpll
jp
das
clc
add
test
xchg
push
or
imull
mov
add
cmp
dec
and
xor
mov
pop
repnz
cmpb
fmull
dec
dec
jb
sti
das
xor
xchg
test
movsb
pop
aaa
mov
or
mov
xchg
imul
mov
mov
mov
scas
inc
add
insl
sbb
inc
sub
pop
push
xor
lds
fisubl
inc
add
ja
jl
xlat
sub
sub
jmp
dec
mov
cmc
insb
add
push
inc
lds
rclb
dec
inc
idivb
jae
int3
lods
cld
aad
sub
xlat
lock
rcl
push
popl
pop
pop
or
lret
add
adc
cmp
mov
out
leave
lods
je
dec
cld
pop
inc
sub
dec
loopne
pop
inc
xor
dec
rcll
stos
mov
pop
shll
lret
test
movsl
ret
mov
loope
sbb
dec
xchg
push
mov
cwtl
mov
dec
popa
sbb
incb
sub
add
test
pop
dec
sub
mov
stos
xor
mov
jne
in
fmulp
inc
shrl
mov
inc
daa
stc
cmp
xor
popa
jns
xor
fstpl
stc
test
out
pop
mov
sub
subb
testl
jp
cld
jmp
push
dec
xchg
shl
pop
cmpsb
pop
push
in
fxch
lea
das
dec
and
and
enter
pop
call
enter
inc
lods
and
gs
sub
adcb
sbb
xlat
push
or
push
test
aaa
insb
jmp
sbb
dec
xor
add
push
bound
sub
sbb
fistpll
jl
mov
aad
mov
call
mov
fsubr
leave
xchg
pop
push
rcrl
pusha
and
xor
sub
cmpsl
or
and
in
fldl
push
sbb
mov
fmulp
lret
xor
pop
jae
mov
push
inc
call
sbb
sti
ret
mov
adc
mov
dec
push
call
or
sub
aaa
pop
xlat
sahf
into
adc
icebp
xchg
imul
adc
int3
or
fwait
pop
ret
add
push
rcrb
xor
xchg
mov
test
mov
insl
scas
das
lret
ret
pop
dec
mov
adc
mov
cld
dec
push
stos
dec
fnclex
xor
sub
insl
sub
imul
lret
or
les
dec
divl
adc
inc
add
dec
cmpsb
in
das
jb
dec
jg
dec
inc
imul
icebp
push
imul
lock
dec
xlat
outsl
mov
mov
shl
push
pop
inc
xchg
inc
aam
dec
xor
xchg
cmpsl
pop
sbb
jmp
xor
push
shrl
mov
ljmp
fs
mov
fldcw
shrb
pop
or
lret
jnp
sub
aad
test
mov
cmp
clc
cmp
dec
cmp
pop
pop
repnz
cmpsl
dec
push
push
pusha
mov
xlat
jae
xor
repnz
dec
scas
ja
mov
dec
cmp
and
adc
cwtl
add
dec
ret
pop
xor
sub
dec
daa
xchg
lahf
mov
add
pop
dec
push
xchg
or
sub
orb
cwtl
xchg
inc
mov
xchg
lcall
sarl
inc
cmp
or
int3
pop
xchg
push
dec
loopne
jae
stc
lods
sub
xor
leave
xchg
ss
dec
daa
pop
roll
mov
ret
pop
pop
mov
dec
out
pop
mov
lret
dec
dec
or
leave
bnd
cwtl
pop
cmp
xchg
aaa
inc
int
dec
mov
test
and
dec
mov
pop
cwtl
fisubrs
or
xchg
outsl
cmp
push
dec
aaa
jnp
ud0
scas
aaa
leave
and
into
mov
pop
xor
mov
lods
or
adc
fidivs
leave
xchg
xor
pop
sub
push
push
xchg
jecxz
push
lods
fstl
xor
mov
pop
dec
push
sbb
cmc
mov
cmp
bound
xchg
movsl
cmp
cmp
or
and
inc
cmp
jno
hlt
xchg
fmuls
scas
das
xchg
imul
cmp
shl
push
das
fwait
pop
bound
dec
dec
push
lods
das
shll
sub
dec
insl
leave
xor
fucomp
jl
dec
adcl
imul
push
mov
les
popa
test
enter
push
cmp
mov
dec
roll
mov
daa
in
sub
sub
fsubrl
mov
ds
das
iret
pop
lods
lea
test
insb
rolb
xchg
mov
inc
ja
sarl
dec
lahf
adc
jmp
mov
test
aad
adc
or
or
sub
rclb
test
push
xchg
pop
lret
ret
add
dec
rcr
call
xchg
lock
jb
fxch
adc
pop
push
mov
and
movsl
fiaddl
adc
jb
push
dec
sub
cmp
inc
aad
push
xor
mov
ret
dec
inc
test
mov
mov
cltd
sub
sub
enter
xor
xor
sub
in
jle
dec
arpl
dec
test
dec
jl
dec
imul
jb
jmp
push
inc
ret
jg
mov
push
call
inc
push
jae
js
enter
out
fiaddl
pop
push
int
push
out
add
xor
mov
ror
mov
sub
push
inc
mov
dec
xor
idivl
xor
dec
dec
add
fiaddl
inc
mov
inc
xor
inc
rcll
and
ss
pop
mov
mov
fldcw
pop
ret
push
push
popf
sbb
addb
jmp
lea
cmp
shll
arpl
dec
pop
mov
jmp
adc
sbb
loopne
rolb
mov
inc
sub
sbb
std
xlat
fstpl
xchg
dec
mov
stc
inc
mov
mov
mov
decl
pop
inc
push
lcall
aam
leave
imul
push
imul
shll
adc
enter
jne
mov
mov
or
jmp
fldl
enter
enter
push
aam
out
pop
sub
aas
enter
imul
pusha
and
fwait
inc
push
movsl
mov
pusha
lods
pop
fnsave
jp
aaa
push
mov
subl
add
and
sbb
add
push
pusha
mov
dec
push
or
pop
lret
mov
les
cmp
fnstenv
insb
not
xor
add
aam
dec
ret
mov
mov
pop
pop
xlat
adc
pop
sarb
outsl
xchg
pop
rcll
iret
dec
jnp
mov
dec
popf
dec
vcvtdq2ps
push
mov
add
scas
shrb
imul
das
push
aad
in
fs
pop
push
inc
sbb
rol
jnp
pop
idivb
outsb
pop
inc
or
test
enter
lcall
mov
pop
lcall
jne
fstps
mov
xchg
xchg
and
iret
mov
shl
and
xchg
rcrl
rcrb
dec
inc
cmp
push
inc
sbbb
pop
enter
out
push
mov
enter
pop
and
sbb
ret
dec
dec
xchg
pop
and
popf
outsl
sar
add
adc
in
push
sub
clc
cmp
dec
push
mov
in
sub
mov
ja
popf
adc
dec
mov
sub
outsb
lahf
insb
sub
call
cmp
insb
push
int3
xchg
scas
lods
inc
pushf
inc
push
push
mov
or
xor
or
push
pop
push
pop
push
push
push
add
xchg
cmp
sub
or
popa
loopne
call
dec
inc
in
mov
inc
loop
int
aaa
xor
mov
cmp
cmc
or
pop
inc
lds
mov
aam
int3
sbb
cmp
mov
dec
dec
mov
sti
pushf
pop
jmp
push
sub
bound
lahf
push
int
fidivrs
mov
add
jne
call
dec
jmp
mov
pop
ret
pop
enter
stos
inc
fildl
test
or
cmp
scas
pop
jnp
mov
shl
jns
push
fcmovnu
mov
mov
dec
cmp
outsb
dec
mov
dec
mov
pop
pop
dec
pop
dec
xor
add
sahf
inc
or
shr
pop
xor
pop
shll
xchg
add
push
dec
stos
inc
sub
inc
and
fucomp
or
or
dec
in
push
shr
adc
cmpsl
bound
inc
mov
lea
mov
outsl
sub
fists
fcmovu
cmp
clc
dec
mov
jb
xor
dec
push
lcall
mov
fadd
stc
aam
out
dec
aaa
subl
sahf
dec
dec
inc
rcrl
adc
dec
cmp
hlt
imul
sbb
dec
sbb
or
push
dec
xchg
and
in
xchg
xchg
inc
clc
mov
fwait
xor
add
lahf
xchg
adc
pop
mov
enter
dec
pop
sub
rclb
xor
stos
flds
mov
inc
shlb
push
inc
icebp
int3
mov
adc
test
sbb
test
push
and
in
shr
adcl
lret
push
lret
lods
lcall
inc
js
roll
and
rorb
adc
inc
cmp
int
test
pop
mov
dec
leave
stos
fldl
push
aaa
push
lds
enter
inc
and
cmp
push
pop
popf
sbb
leave
pop
stc
cmp
into
mov
sbb
fstps
dec
cmp
sub
xchg
cs
add
dec
pop
into
aaa
repnz
int
cmp
aad
inc
push
inc
dec
pusha
inc
cmpsb
fcmovnbe
dec
sub
mov
fnstsw
leave
mov
icebp
test
pop
xlat
push
movsbl
fstl
pop
popf
lret
xchg
fmuls
in
xchg
lret
push
push
sub
mov
imul
xchg
aad
push
enter
add
inc
cmp
daa
lahf
aad
mov
cmp
shlb
add
dec
dec
lahf
push
cmp
inc
insb
and
rcr
sub
jne
dec
pop
popaw
inc
xchg
mov
fdivl
add
dec
sub
decb
inc
dec
inc
inc
imul
jbe
adc
fisttpll
sub
pop
out
dec
sbb
sbb
dec
rolb
arpl
inc
jo
xchg
adc
mov
sub
xchg
inc
out
push
dec
cltd
jmp
enter
mov
inc
xor
mov
mov
mov
pop
pop
cmp
cld
push
and
aam
fldpi
push
ss
hlt
leave
rcrb
mov
mov
push
or
fists
jo
sbb
dec
test
and
inc
dec
mov
and
jmp
es
dec
ja
stos
xor
bound
add
sub
in
push
dec
cmpsl
bound
mov
add
or
stc
dec
dec
or
ds
push
xlat
xor
sbb
js
loope
popa
pushf
lods
dec
push
jbe
int3
outsl
aaa
sbb
sub
sbbb
xor
mov
mov
cmp
and
jmp
cmp
pop
inc
fmuls
adc
adc
pop
and
sbb
add
dec
int
mov
pusha
sbb
dec
jnp
stos
pop
cmp
sbb
inc
xchg
jmp
xchg
sub
or
dec
dec
push
or
das
mov
push
or
stos
adc
jns
sub
aam
or
dec
cmp
pop
xchg
and
mov
add
cmp
std
das
add
in
inc
dec
cs
sub
jp
movsl
inc
mov
leave
adc
dec
cmc
sbb
mov
xchg
mov
std
add
fisubrl
xchg
ret
fldenv
jne
add
arpl
dec
push
loopne
ss
and
and
cmp
stos
gs
jne
movsl
dec
jge
mov
xor
xor
push
lods
subl
jno
jnp
push
pop
mov
sbbb
dec
test
movsl
mov
imul
mov
inc
push
pop
mov
out
lock
inc
dec
addl
pusha
cmp
addr16
inc
les
mov
and
lahf
cmp
adc
mov
sub
xor
mov
mov
ljmp
or
fdivrl
mov
jo
outsl
int3
imul
pop
cltd
mov
add
pop
and
mov
jmp
pusha
fsts
fwait
and
push
cld
mov
call
shr
push
bound
pop
inc
mov
or
add
mov
popf
aam
pop
pop
dec
xchg
cmc
ss
es
push
aas
inc
jne
shlb
xchg
pop
dec
cmp
dec
mov
xchg
scas
inc
call
fst
and
dec
enter
shrb
enter
jns
mov
ret
pushf
leave
push
xor
xchg
lock
in
rorl
loope
pop
cli
sbb
lret
out
fists
mov
ret
imul
dec
inc
xor
lods
fcmovnu
sub
mov
mov
pop
lahf
addr16
adc
sahf
leave
nop
ret
pop
lret
or
pop
lods
lret
lret
mov
lock
jno
lret
push
push
lret
pop
jg
push
push
xor
mov
cmp
push
sbb
push
leave
sarl
sahf
repnz
jae
pushf
cmpsb
xchg
shrb
mov
insl
loopne
call
inc
adc
mov
jge
adc
cmp
shll
inc
ljmp
sbb
cmp
pop
add
xchg
pushf
lods
pop
push
push
aaa
lahf
int3
inc
sub
xchg
xor
ds
sbb
pop
fidivrl
pop
pop
lds
mov
fnstsw
adc
cmp
pop
pop
cmp
fisttpll
test
test
pop
xchg
pop
pop
add
gs
pop
sub
sti
dec
outsb
sub
pop
shr
pop
in
clc
dec
sbb
repnz
repz
mov
arpl
jae
xchg
in
inc
dec
pop
lret
sub
int3
dec
push
inc
add
add
dec
insb
mov
call
dec
jb
inc
pop
fwait
call
xchg
fisubrs
test
leave
ficompl
and
add
in
pop
stos
enter
clc
cmp
aam
insl
mov
lock
add
lock
pop
fmuls
movsb
es
jo
dec
jp
push
in
xchg
xor
test
lret
push
lea
lahf
inc
inc
imul
lcall
das
adc
or
ret
in
leave
mov
mov
aad
push
fistl
insb
fisttpll
push
and
test
push
sub
sbb
roll
adc
aas
inc
repnz
fbstp
push
popf
inc
add
sbb
test
dec
lret
mov
push
jne
ficomps
pusha
xchg
stc
push
sbb
mov
xor
sub
sub
aam
add
lret
mov
inc
pop
cmp
adc
pop
push
adc
inc
enter
dec
inc
leave
and
ret
dec
pop
mov
insb
cmp
pop
movsl
xlat
adc
daa
dec
pop
roll
into
xor
push
hlt
stos
dec
iret
inc
inc
or
pop
adc
cs
sub
sbb
pushf
push
and
push
push
or
arpl
dec
das
jb
aaa
add
or
inc
and
pop
mov
xchg
aam
dec
sub
dec
mov
push
ja
in
clc
fsubrs
mov
out
shrb
lods
pop
mov
clc
and
dec
sub
imul
iret
or
leave
sbb
lahf
ficoms
outsl
call
into
pop
call
dec
dec
test
das
mov
inc
aaa
rolb
xlat
pop
enter
or
rorb
sub
push
shl
repnz
push
cmp
inc
push
cltd
add
mov
add
les
push
mov
xor
xor
cwtl
add
inc
enter
push
insb
lret
and
daa
fdivrp
mov
nop
test
sub
cwtl
es
sbb
inc
fidivl
inc
push
pop
pop
dec
xchg
push
cmp
sti
pop
sub
xlat
dec
mov
adc
jo
dec
pop
push
sub
adc
pushf
icebp
inc
mov
mov
ss
fildll
aad
jb
dec
and
rcrl
imulb
stos
cwtl
fildll
fstp
jo
xchg
jge
inc
ss
movsb
xchg
and
push
or
sbb
mov
inc
add
int3
or
adc
stc
push
pusha
cld
or
sti
mov
gs
inc
lret
mov
pop
push
jl
shrb
inc
inc
mov
ret
inc
aas
popf
dec
pop
pop
add
jl
pop
dec
adc
xor
mov
xorb
lret
pop
jge
xchg
push
sub
xlat
ja
jae
adc
test
pop
adc
push
jmp
shll
nop
push
shrb
pop
rcll
or
fstp
leave
mov
ftst
dec
leave
sbbl
pusha
add
lcall
pop
inc
mov
fsubr
negb
pop
into
inc
pusha
aaa
orl
dec
fmulp
call
int3
sub
adc
rcrb
dec
push
pop
es
push
dec
xor
cmc
test
test
dec
cmpsl
popa
xchg
mov
dec
and
pop
and
sbb
or
or
mov
push
sbb
ja
sbb
mov
push
lret
fcmovu
sahf
or
dec
push
dec
loopne
mov
lret
mov
scas
dec
xchg
call
dec
lea
and
inc
mov
push
lock
add
dec
xchg
inc
push
insb
pop
fisttps
cld
pop
push
mov
pop
bound
shrl
mov
pop
pop
test
push
ret
je
push
xor
das
cmp
cmp
sahf
mov
sbb
cmpb
adc
mov
rcr
jecxz
into
movsl
dec
insl
xchg
mov
mov
push
pusha
out
das
rorl
and
fs
push
scas
cmp
sub
inc
ret
iret
xchg
pusha
mov
push
and
inc
lcall
sbb
dec
and
xchg
push
movsb
dec
jmp
mov
pop
xchg
dec
sub
shr
in
jnp
call
leave
popf
mov
jbe
lds
pop
adc
or
inc
mov
mov
mov
shl
jne
inc
or
in
pop
inc
and
fmull
sub
out
xor
push
fsts
lods
dec
out
lcall
popf
scas
push
sub
mov
dec
mov
pop
pop
mov
mov
lods
fsts
inc
dec
andb
dec
inc
cli
sub
mov
push
inc
or
xchg
lods
adcl
sarb
inc
mov
and
push
sub
xor
ficoml
and
cmp
mov
pop
shrb
xchg
enter
dec
push
bound
sub
push
or
or
repz
lds
push
inc
adc
push
sbb
sub
sub
mov
pop
je
mov
inc
cmp
leave
pop
test
das
xor
in
pop
imul
jns
xrelease
imul
pop
inc
aas
push
lret
cmp
shrl
inc
adc
aaa
xor
in
push
roll
es
adc
ret
insb
xor
pop
leave
dec
xchg
bound
gs
pop
push
xor
pop
ja
cmp
dec
mov
mov
in
add
insl
pop
mov
jmp
das
mov
jb
inc
lods
stos
adc
push
or
dec
mov
adc
push
jg
mov
rorb
das
adc
imul
sub
stc
test
int
lds
mov
pusha
dec
xor
xchg
dec
and
sbb
inc
mov
pop
dec
in
cmc
inc
enter
mov
mov
out
push
mov
stos
inc
test
push
addr16
test
orb
pop
push
cmp
dec
int
jp
inc
jae
mov
outsb
add
xor
mov
int3
pusha
sbb
xor
pop
pop
jmp
scas
incb
sbb
inc
shlb
cmpsl
add
int
aam
and
mov
xchg
popf
and
dec
shrl
dec
inc
shrb
jbe
push
enter
and
sub
xor
xor
xchg
roll
outsl
and
dec
rcrl
and
dec
nop
push
xor
int3
pop
dec
daa
or
push
mov
inc
sub
lahf
int3
and
sbb
clc
inc
insl
mov
lret
dec
lods
sbb
into
rcrb
pop
dec
pop
stos
pop
adc
fldpi
in
and
or
loopne
cmp
leave
pop
das
scas
and
out
test
or
or
js
mov
cmp
xor
int
loopne
push
pusha
inc
inc
repz
pop
lret
cmpsl
movsl
mov
push
mov
iret
loope
out
mov
inc
jge
adc
sbb
movsb
dec
mov
add
dec
je
lret
dec
dec
pop
fwait
int
mov
rcll
pushf
scas
or
popf
out
lret
leave
sbb
sbb
call
dec
pop
push
jmp
es
test
push
clc
inc
in
cs
das
inc
push
das
xchg
cmp
jg
dec
dec
out
pop
sub
adc
or
xlat
out
pop
sbb
jns
lds
mov
inc
dec
das
xor
icebp
cs
sbb
inc
les
ds
aad
jo
mov
popa
pop
jns
repnz
fnsave
dec
je
or
hlt
test
push
xor
or
push
push
adc
xchg
mov
sbb
or
push
lock
or
pop
inc
cwtl
mov
push
and
sub
and
std
rorl
cltd
ror
int3
pop
mov
sbb
pop
push
clc
push
push
das
xchg
in
cmp
pop
jae
adc
test
int3
xorb
pop
fcomps
adc
out
adc
dec
inc
cmp
cmp
cmp
test
shll
test
add
call
and
add
les
adc
sub
or
std
fimull
outsb
sbb
das
ja
pop
cmpsl
mov
dec
or
cld
call
lods
scas
lock
jae
pop
cltd
dec
stos
das
test
and
out
dec
ret
shrl
mov
fisttpll
jnp
pop
in
dec
push
jl
jl
ret
add
aad
inc
lods
cli
jecxz
inc
pop
xlat
pusha
jp
dec
xchg
jo
or
orb
xor
jae
mov
imul
ficoml
das
xchg
loopne
inc
test
xor
cmp
dec
cmpsl
push
rorl
ret
leave
dec
es
test
subb
call
push
popf
mov
leave
or
ret
mov
xor
inc
rclb
inc
shrb
fnstsw
lret
dec
dec
shll
in
push
call
mov
or
mov
jmp
jmp
pushf
mov
push
cmp
push
movb
inc
pop
test
xor
adc
pop
sub
pop
inc
lock
pop
inc
mov
push
ds
mov
mov
jns
xor
pop
mov
fisubrl
xchg
test
push
inc
scas
pop
ret
pop
movl
pop
das
xor
mulb
popf
dec
xchg
adc
and
in
cmp
aas
fisubl
jbe
fucomp
sub
jecxz
dec
repnz
and
inc
dec
add
push
stc
sub
fwait
jmp
fnstsw
rcl
test
into
or
mov
sub
dec
xor
rcr
inc
sbb
jo
sahf
inc
aaa
inc
xlat
dec
movsl
mov
jle
inc
call
rorb
inc
pop
cmc
test
sub
sub
mov
aad
sbb
pop
sahf
les
fsts
fcoms
push
jo
mov
adc
sbb
push
and
jmp
lcall
popa
lret
adc
bound
lods
sub
sbb
sub
mov
push
cmp
push
outsb
push
je
scas
rolb
jg
push
daa
shlb
push
loop
ret
aam
push
imul
call
inc
dec
leave
fwait
int
mov
jmp
lods
xlat
xor
iret
mov
fcom
inc
mov
enter
pop
sub
dec
mov
push
xchg
cmp
out
push
loope
dec
or
stos
pop
sub
and
cli
inc
xlat
or
test
lahf
jo
dec
out
out
dec
lea
dec
and
adc
push
or
sbb
clc
dec
dec
hlt
mov
dec
movsl
mov
sbb
les
sub
inc
and
dec
and
leave
adc
das
mov
ss
add
arpl
and
fcoml
arpl
xchg
insb
ja
aaa
push
dec
out
dec
enter
push
push
repnz
jb
imulb
fimull
shll
lret
pop
ret
sbb
lds
ret
sub
xor
arpl
xlat
and
cmp
shrl
ja
fcmovnb
push
out
cltd
leave
mov
xlat
jne
xchg
imul
push
xchg
or
sbb
out
popf
flds
mov
rclb
push
dec
mov
adc
pop
fimuls
cmp
xor
mov
arpl
pop
inc
jmp
adc
or
daa
das
jmp
cmp
xor
dec
enter
int3
cmp
and
sub
pop
jg
clc
dec
sarl
das
mov
inc
dec
push
push
das
roll
pop
sub
xchg
dec
outsl
dec
mov
movsl
pop
dec
push
inc
pop
ret
mov
cmp
cmp
sbb
mov
add
push
inc
aas
inc
sub
and
jo
inc
lock
repz
dec
sbb
adc
jno
leave
call
pop
push
mov
call
push
andb
clc
and
dec
mov
inc
sub
leave
jno
mov
dec
fnstcw
push
jecxz
call
mov
push
dec
dec
pop
xchg
and
dec
or
push
dec
in
add
sbb
sub
jb
dec
adc
inc
and
sarb
push
sub
jle
mov
add
or
pop
arpl
dec
lods
dec
aad
pop
push
mov
dec
daa
mov
push
lods
pop
out
sbb
push
dec
push
and
pop
shr
adc
dec
pop
inc
sahf
pushf
or
xlat
nop
cmpsb
pop
jae
insl
jns
push
push
xchg
leave
push
das
xor
pop
mov
es
and
fimull
aas
sub
push
int
jae
xor
out
push
inc
or
push
dec
addb
dec
or
lock
pop
sub
add
fsubr
orb
cmp
fists
jecxz
pop
mov
xlat
cmp
mov
pop
mov
loop
pop
shrb
ficompl
pusha
and
mov
fiadds
sub
and
sub
jnp
dec
clc
jge
xchg
inc
mov
jns
pop
lcall
lods
sbb
jno
insl
or
or
xchg
faddl
push
clc
in
sbb
inc
mov
dec
nop
sahf
add
and
push
push
ret
mov
xchg
lret
dec
pop
push
push
cmp
jae
mov
sti
inc
push
xor
pusha
jns
mov
inc
imul
dec
inc
xchg
adc
inc
push
orb
nop
dec
dec
push
and
fldcw
fstl
inc
ficoml
roll
push
xchg
dec
inc
push
scas
inc
add
mov
xchg
mov
repnz
negb
push
cld
in
lods
jbe
push
enter
shll
mov
pop
or
call
fcomps
sub
enter
inc
pop
les
inc
sbb
jge
push
dec
ret
xlat
and
xor
sub
mov
mov
and
xchg
aam
xor
test
dec
pop
stc
mov
lret
shrl
mov
pop
dec
imul
xlat
test
xor
or
test
lock
fisubrl
xor
aam
jne
iret
push
adc
mov
pop
stos
push
lods
pop
jne
dec
push
lahf
imul
xor
xor
mov
inc
mov
leave
enter
push
rolb
inc
mov
pop
pop
pop
dec
jo
loop
imul
sub
pop
ror
shll
das
mov
aad
int3
sub
popf
dec
addr16
jb
xchg
fld1
adc
mov
mov
jmp
dec
xor
or
mov
shll
push
dec
std
fwait
into
leave
imul
inc
jmp
dec
or
push
dec
loop
inc
add
pop
adc
jl
jne
inc
xchg
mov
inc
add
sub
fmul
mov
std
inc
fs
cmp
push
out
push
rcll
pop
mov
aad
adc
in
pop
xchg
xor
mov
pop
stos
adc
cmp
int3
aam
lret
enter
cmpb
shll
cmp
pop
jl
hlt
mul
das
lcall
lock
inc
or
fwait
xor
pop
pop
sub
mov
cmp
cld
pop
lds
jg
xchg
adc
xlat
pushf
dec
xor
aam
jp
inc
leave
sub
pop
mov
add
and
fstps
sub
ja
pop
sub
pop
je
pop
sub
sub
aaa
sub
inc
xchg
jmp
xchg
sbb
insl
dec
fincstp
cltd
push
pop
or
push
bound
pop
je
lds
mov
lret
mov
mov
lds
in
sub
dec
imul
dec
fnstsw
jbe
inc
push
fwait
push
ficoml
inc
mov
inc
fstpt
dec
shrl
nop
xor
and
push
js
mov
adc
jnp
mov
lods
add
dec
push
sub
xor
pusha
cwtl
mov
mov
in
cmp
lea
xchg
test
or
into
jl
inc
sub
enter
clc
pop
insb
lods
inc
ret
sub
jnp
and
inc
test
sbb
pop
cmp
cltd
push
fxch
sbb
and
inc
das
mov
pushf
loopne
enter
mov
dec
cld
push
fcomps
pop
inc
sub
test
xor
push
dec
xchg
ret
loope
cmc
pop
pusha
pop
cld
inc
fisubrs
sub
cmp
mov
mov
leave
dec
movsb
push
inc
call
rolb
negb
sbb
cli
repz
jl
pop
xchg
dec
decl
jl
cmp
bound
or
add
inc
cld
pop
sub
dec
jle
out
stos
inc
fdivl
push
mov
lret
mov
in
pop
dec
cmpsb
mov
or
and
pop
jecxz
cmp
xchg
or
pop
pop
dec
sbb
dec
aaa
pop
push
cmp
fisttpll
mov
xorb
inc
mov
push
dec
add
lock
mov
call
les
imul
pop
sub
call
test
inc
int
push
inc
lret
mov
loopne
rol
cmp
cmp
inc
adc
xchg
in
mov
cmp
mov
mov
dec
pop
pop
push
or
push
push
stos
pop
les
jle
ret
call
repnz
mov
jmp
dec
lret
leave
mov
push
sub
jg
pushf
ret
rorl
xor
inc
dec
icebp
adc
sbbb
pop
xchg
lods
jle
adc
xor
and
cmpsb
insl
sbb
dec
sarl
push
xchg
pop
dec
aam
jecxz
pop
adc
sub
adc
loop
ret
into
inc
shll
dec
sahf
push
xlat
jb
dec
data16
enter
ret
jmp
lret
pop
in
pop
call
push
movsl
jmp
fldcw
aad
and
pop
movsb
sarl
mov
sub
jns
cmp
fwait
inc
dec
das
fcmovu
js
dec
lods
aam
mov
sub
mov
pop
shrb
sahf
sbb
lret
bound
push
adc
add
sub
inc
inc
inc
xor
iret
or
test
or
xchg
aad
xchg
pop
mov
jmp
nop
bnd
js
cld
adc
fwait
lods
enter
mov
adc
incb
dec
xor
inc
xor
das
add
dec
xchg
lea
jo
or
pop
push
xchg
loopne
sub
mov
mov
mov
push
mov
daa
inc
gs
fwait
int3
dec
jmp
or
pop
mov
push
xchg
push
sarb
mov
mov
pop
in
into
ret
stc
mov
call
sub
dec
stos
sbb
dec
sbb
xor
fldlg2
add
inc
lcall
push
pop
int
push
sub
pop
mov
push
jle
jge
pop
inc
call
xor
push
lds
mov
call
pop
int3
lods
xchg
scas
mov
dec
push
ffreep
mov
sub
das
push
dec
mov
or
push
es
and
and
sbb
push
jb
je
push
das
and
repnz
cmp
or
push
mov
push
rcrl
repz
xlat
add
rorb
push
pop
fcoml
and
into
push
mov
mov
push
add
inc
cmp
push
dec
adc
or
jno
xchg
mov
adcb
test
xor
and
out
cmp
fstpt
shrb
aam
fldcw
or
jno
fxch
mov
out
fincstp
sub
push
push
sub
ret
pop
push
pop
shlb
jg
imul
lcall
push
jmp
popl
push
mov
jmp
xchg
adc
rorb
add
jecxz,pn
fstp
push
enter
insb
inc
fcomip
and
arpl
cmp
pop
test
dec
mov
fcmovu
sub
mov
and
je
sbb
inc
cmpsl
xchg
iret
or
test
sub
push
into
inc
push
mov
jp
lods
cmp
sub
adc
js
cmp
aas
das
icebp
dec
mov
in
aam
enter
aas
sub
mov
jl
inc
inc
cmp
sbb
and
and
fucomi
inc
cld
inc
addl
test
cmp
xchg
rcrb
and
jl
mov
lret
lea
inc
stos
leave
dec
stos
sub
mov
pop
lods
imul
sub
pop
push
lret
sub
adc
cmp
aad
xchg
test
int
xchg
inc
dec
or
rcrl
pop
push
sub
loopne
mov
mov
add
int3
daa
cs
jp
jns
jnp
enter
test
lcall
mov
imul
rcrl
sub
mov
sub
jmp
adc
jmp
in
inc
mull
lret
cli
pop
sub
std
push
dec
clc
add
pop
xchg
loopne
mov
pop
mov
pmaddwd
mov
jne
es
push
aad
movb
js
sar
inc
pop
outsl
push
or
arpl
pop
dec
dec
jecxz
sub
add
les
xor
lret
pop
aas
or
xchg
dec
mov
dec
cwtl
mov
dec
xchg
es
xchg
ret
fs
lds
int
lahf
rorl
cmp
dec
subb
push
xchg
inc
mov
sbb
inc
jno
jb
dec
xlat
cld
inc
aas
enter
inc
sbb
xchg
jo
test
loop
inc
aam
mov
pop
jne
fisttpl
dec
lret
sub
dec
pushf
jmp
mov
push
push
je
fwait
enter
mov
jl
lods
mov
dec
fldcw
adc
add
dec
and
lods
push
inc
inc
fchs
and
sbb
xchg
enter
jmp
mov
dec
flds
sbb
insb
dec
push
ds
or
repnz
in
dec
add
mov
cltd
shlb
mov
lret
rorb
dec
cmp
cltd
mov
jae
push
cmp
xor
mov
lods
pop
jmp
dec
xchg
shl
jmp
push
pop
fisubs
dec
pop
adc
push
inc
hlt
dec
pop
mov
mov
and
shlb
les
pop
insl
je
mov
push
lret
cmp
sbb
lock
lret
inc
pop
push
leave
bound
adc
leave
stc
add
rorl
daa
sub
pop
xor
ret
roll
repnz
and
inc
jae
lret
jo
push
leave
dec
cli
lcall
std
ficompl
fld
push
and
pop
sub
adc
rcrb
dec
push
push
loop
lds
aaa
inc
mov
sub
fildl
xor
mov
cmp
inc
and
repnz
and
inc
js
ret
repz
mulb
pop
dec
aaa
push
jp
pop
imul
xor
mov
sub
inc
inc
ffree
fldcw
add
pop
lods
ret
push
cmp
test
lock
xor
push
push
sar
lods
push
mov
pop
es
mov
push
push
das
jae
fistl
push
cmp
xor
add
or
dec
or
lret
iret
fs
fcoml
mov
inc
sub
repz
aas
add
mov
cmpsl
addr16
leave
sub
fmul
aas
loope
cmp
mov
icebp
and
inc
xor
dec
movsb
stos
sub
test
xchg
pop
rcll
xchg
sahf
aaa
inc
inc
jmp
xchg
mov
leave
inc
in
and
stos
dec
inc
xchg
int
jae
leave
insl
imul
adc
cmp
or
pop
cld
inc
push
and
sub
in
or
leave
dec
pop
xchg
fists
add
jmp
into
inc
or
out
sbb
stc
into
cmp
stc
jmp
jmp
iret
pop
mov
mov
es
and
lret
rolb
inc
xor
push
pop
adcl
cmp
shr
lock
sub
das
cmp
mov
dec
inc
add
pop
and
stos
push
int3
fmuls
push
add
rcrl
xchg
xchg
fbstp
lret
sbb
cld
mov
dec
pusha
or
fdivl
insl
add
add
rorb
cmp
dec
mov
repz
aad
dec
mov
lret
inc
sbb
pop
inc
les
in
enter
jne
rcrb
mov
mov
add
push
pop
pop
mov
push
das
push
imul
pop
leave
add
pop
shr
sbb
dec
inc
stc
sub
int3
sub
in
dec
add
cmp
mov
inc
mov
xor
push
stos
leave
or
enter
pop
cmc
pop
leave
lcall
mov
fisttps
pop
lea
repz
jmp
dec
fisubrl
push
aas
dec
cmpsl
outsb
int3
pop
inc
inc
xorl
std
mov
pop
dec
test
jecxz
mov
or
dec
stos
xlat
aad
cmp
frstor
jmp
mov
mov
lahf
les
repnz
lds
aad
and
dec
add
cmp
dec
enter
sub
enter
push
sub
sarb
push
scas
in
cmp
cmp
fwait
inc
pusha
xlat
fnstenv
jg
test
inc
push
jge
sbb
push
into
mov
popa
add
mov
sahf
sbb
or
inc
pop
enter
fistl
call
xor
loop
inc
push
mov
push
pop
enter
and
in
dec
xor
cmp
cwtl
jmp
dec
fsts
jno
dec
cmp
fisttps
mov
cmp
xlat
enter
test
imul
lods
push
push
fisttpl
pusha
jge
lret
sti
inc
or
dec
pop
jo
mov
push
pusha
xlat
push
dec
cmp
int3
pop
push
jle
push
inc
pop
iret
rcll
adc
int3
jns
dec
push
sub
cltd
fisubrs
pop
dec
inc
cli
mov
fstpt
stc
cmpb
add
jno
xor
pop
xor
inc
adc
test
gs
mov
dec
mov
sbb
dec
imul
push
sarl
and
jo
mov
loope
push
inc
leave
inc
and
popl
gs
pop
inc
inc
imul
xorb
scas
mov
sahf
jge
mov
push
shlb
cmc
repz
and
or
leave
mov
andl
mov
mov
pop
popa
xchg
imul
stos
addl
leave
lock
lahf
sti
push
leave
ficoml
sub
and
lret
insl
dec
xor
sbb
pop
sahf
push
sub
movsl
inc
leave
dec
test
inc
idivl
repz
mov
add
insb
inc
fcmovb
inc
push
and
mov
adc
lret
jle
pop
sub
bound
xlat
sub
ret
nop
aaa
dec
mov
xor
pop
and
and
loopne
sbb
dec
add
pop
or
loopne
pop
mov
jmp
cmp
aas
dec
add
pusha
pop
jb
or
jns
daa
push
cmp
cmpsl
push
dec
fucom
rcll
xor
inc
jg
dec
mov
fwait
cmp
jmp
repz
jg
xlat
mov
push
cmpsb
sahf
test
es
enter
pushf
push
in
mov
and
push
mov
hlt
inc
cmc
xor
in
fistpl
dec
dec
in
and
jmp
test
les
lret
inc
popf
push
leave
dec
and
dec
sbbb
push
lea
dec
pop
inc
push
incb
mov
mov
push
fstl
sti
inc
jb
addl
dec
sub
loopne
adc
pop
jmp
sub
jmp
test
repnz
push
out
push
xlat
pop
pop
ror
cmp
and
jae
inc
inc
xchg
or
rcl
xorb
inc
sub
je
fadds
aas
fcmove
pop
jmp
push
jmp
leave
sub
xlat
and
xchg
enter
sub
or
dec
adc
mov
sti
mov
aam
push
inc
add
not
fnstcw
ds
inc
sub
or
test
test
adc
das
call
and
pop
lods
cli
ds
lret
sbb
into
leave
add
xor
add
cmp
fcoms
push
das
xchg
lods
pop
xchg
push
dec
dec
dec
lcall
push
pop
dec
in
dec
pop
inc
add
dec
or
pop
dec
sub
push
sub
std
les
pop
mov
mov
push
cmpsb
cmp
sar
rcrb
dec
mov
cmpsb
lret
inc
push
jb,pn
lret
cmp
push
mov
lds
dec
or
cmpsl
jmp
xor
shrb
lahf
bound
rcr
push
das
sub
inc
cli
lcall
cmp
pop
ret
pop
call
ret
fisttpl
negl
mov
leave
mov
add
fldcw
add
dec
dec
mov
and
mov
pop
lods
jae
daa
inc
movsl
push
ss
leave
rcll
xchg
mov
sub
pop
repz
jp
jae
dec
repnz
and
cltd
add
add
rorb
in
pop
popa
pop
dec
mov
aad
lds
enter
adc
pop
fistps
inc
pop
aas
ficoml
roll
fdivrl
scas
rolb
dec
inc
and
xchg
mov
aam
cmp
sub
adc
xchg
pop
add
test
stos
and
aad
pop
jg
cmp
dec
mov
in
icebp
fsubrl
lahf
test
lret
push
inc
int3
shll
push
scas
fildl
fldl
aas
call
jae
inc
dec
mov
mov
mov
fldenv
jns
adc
pop
xor
hlt
cmp
mov
pop
shll
enter
movsb
pop
inc
inc
push
stos
add
fwait
insb
test
cld
mov
enter
adc
cmc
gs
xor
mov
dec
imul
push
lods
test
inc
pop
push
test
jl
adc
dec
and
test
xor
call
and
lods
lea
das
repnz
aaa
inc
jnp
cmp
daa
fs
out
and
dec
xor
dec
cmpb
int
or
in
pop
loop
mov
cmp
jno
push
adc
mov
stos
inc
jmp
cmp
pop
sub
stc
push
push
into
ds
push
out
xchg
rcrl
lret
in
mov
add
pop
ret
cmp
mov
test
insb
push
leave
mov
or
loop
lret
pop
pop
push
mov
sub
pop
push
dec
mov
push
adc
pop
sahf
adc
adc
xor
repnz
adc
sbb
push
dec
gs
dec
mov
out
mov
inc
int
int3
push
cmp
outsb
mov
push
lahf
add
adc
sti
cmova
pop
fcomps
nop
jp
mov
decl
inc
jmp
dec
lods
movsb
fisubrs
repz
jno
cmp
lock
push
or
cmp
cmp
fdivrs
ds
or
vcvttpd2dq
jl
imul
outsb
adc
sub
cs
test
fistl
inc
les
mov
fcmove
lods
push
popa
add
gs
or
xor
lock
icebp
daa
inc
and
sub
test
sub
push
jae
xchg
push
jnp
dec
mov
or
mov
loop
xchg
inc
ret
mov
lods
cmp
jmp
xor
inc
dec
jae
xor
mov
in
and
pop
sub
and
inc
dec
scas
ret
fbld
add
jns
and
in
subb
ror
mov
inc
sub
sub
inc
dec
xchg
dec
xlat
push
inc
arpl
sub
aaa
push
clc
mov
sub
add
or
xchg
pusha
cmp
outsl
jnp
mov
mov
cs
dec
adc
mov
mov
mov
stos
push
testb
push
mov
das
das
or
xchg
in
clc
push
dec
lret
inc
sub
sbb
mov
pop
push
test
and
or
rclb
inc
pop
cmp
outsl
lock
fbld
stc
inc
pop
call
jecxz
xchg
jb
xor
test
inc
xchg
push
das
out
inc
inc
loop
clc
sub
adc
dec
cmp
dec
fisubrs
loop
and
push
mov
dec
pop
cmpsb
sub
lods
mov
adc
cmpsb
es
leave
sub
lock
ror
inc
pop
xlat
sbb
out
add
fcomi
sub
test
fistps
dec
scas
daa
xor
sbb
sub
or
sbb
push
jmp
ja
insb
pop
jmp
and
or
or
pop
dec
rclb
pop
cld
jnp
inc
cmpsb
mov
xor
test
loopne
das
or
and
jg
fisubrl
sub
in
test
aam
insb
xchg
bound
cmp
sub
in
push
mov
sub
mov
mov
pop
xchg
mov
pop
sbb
das
mov
xor
pop
rorb
insl
enter
mov
es
bswap
out
loopne
negb
mov
ret
push
inc
shl
and
inc
jg
rorb
int
mov
pop
inc
insl
xor
sub
dec
jnp
dec
test
les
jbe
shrl
inc
push
sub
adc
jge
cmp
test
cld
jmp
or
xor
push
pop
out
push
pop
dec
xor
dec
lods
bound
inc
cmp
xor
fldenv
sub
popa
test
inc
mov
inc
and
xchg
xor
imull
xor
adc
and
inc
dec
mov
insl
jne
push
lret
pop
mov
dec
iret
jle
pop
bound
cmp
or
call
idivl
dec
fnsave
lret
xor
push
and
pop
inc
push
int
and
test
xlat
aaa
dec
push
pop
mov
and
mov
push
adcl
sub
lods
sti
dec
sbb
push
mov
pop
push
cltd
mov
xchg
out
or
pop
jb
int3
imul
dec
enter
cmp
pop
mov
imul
mov
sbb
add
dec
jo
lret
jnp
pop
mov
cltd
shll
enter
stc
inc
sub
adc
pop
or
jnp
lret
pusha
mov
dec
lods
dec
pop
xor
add
ret
xor
dec
imul
add
push
repnz
inc
subb
inc
scas
add
dec
pop
sub
sub
fildl
pop
push
int3
or
mov
mov
pop
jns
jae
jl
lods
mov
push
dec
mov
xchg
inc
jmp
mov
mov
das
cmp
ret
aaa
sbb
inc
sbb
fcoml
outsb
jecxz
jns
flds
cli
and
push
icebp
jns
enter
jo
push
cli
mov
sbb
sub
xorb
sbb
jmp
icebp
fistpll
pusha
jbe
inc
stc
rolb
inc
cmp
pop
jmp
xor
enter
int
jmp
lcall
mov
fldcw
enter
fisubl
or
xor
xchg
jae
mov
hlt
add
shrl
pushf
repz
sub
mov
xchg
dec
insl
sahf
sub
or
scas
pop
lahf
push
dec
roll
pop
repnz
cmp
push
test
fdivrp
lods
arpl
fcmovne
or
outsb
add
xor
movsb
or
mov
jnp
aam
or
fisttpll
add
fisubl
fisttpll
outsb
cmp
cmp
ss
movb
fstl
push
cld
loope
leave
xchg
xchg
out
or
and
sub
jmp
push
int
pop
loop
jns
pop
loop
cmpsl
pushf
push
adc
and
cld
xchg
xor
int3
pop
mov
sub
jl
mov
sbb
add
or
iret
push
inc
inc
mov
jp
dec
sbbl
std
mov
jae
dec
addb
push
hlt
ficoml
stc
or
or
or
xchg
mov
faddl
adc
jg
mov
dec
dec
mov
push
and
mov
or
push
mov
sbb
inc
xor
lods
int3
out
cmpsl
test
mov
aam
jno
pop
addr16
add
lret
cmp
lods
pop
sbb
jne
inc
lds
fisttpl
xchg
jmp
lods
dec
and
mul
inc
inc
aad
ret
dec
pop
test
pop
adc
aas
ret
pop
pop
jmp
or
push
lret
test
rcr
imul
lret
imul
adc
ja
ficoml
and
lods
es
dec
loopnew
sbb
pop
fstps
dec
push
decl
roll
or
sti
push
push
pop
pop
dec
ficoms
push
inc
rcrl
inc
xchg
fdivrl
jne
xor
push
pop
or
mov
push
mov
xchg
cltd
leave
dec
xchg
and
mov
mov
xchg
xchg
dec
mov
mov
dec
enter
imul
dec
push
cmpsl
das
loopne
push
inc
cmp
les
push
dec
int3
dec
ret
cmp
inc
or
loope
xor
mov
insb
cmp
jno
popf
inc
pop
flds
sub
cmpsb
inc
adc
sub
mov
into
sub
cmp
fldenv
dec
int
clc
dec
lods
pop
mov
xchg
inc
rclb
push
sbb
sub
int3
and
dec
cmp
enter
push
dec
arpl
fwait
cmp
xchg
pop
sahf
mov
push
es
push
pusha
jg
push
call
mov
jno
ret
ds
fisubrs
xlat
sub
insb
in
and
inc
inc
pop
in
push
sbb
popf
mov
cmp
roll
das
sbb
dec
stc
push
les
push
sbb
fst
sub
push
cmp
add
add
and
subb
aad
sub
xor
lds
popf
sahf
shlb
dec
movsl
push
into
imul
inc
imul
fists
xchg
jmp
mov
dec
dec
enter
fstpl
sub
popf
jge
or
iret
push
cmp
leave
fisttpl
fst
lods
arpl
pop
lret
outsl
mov
push
push
dec
sub
hlt
les
test
mov
call
js
cld
mov
push
xlat
hlt
dec
sub
push
shll
fcmovne
inc
leave
mov
mov
mov
dec
inc
mov
fwait
xor
dec
das
aaa
mov
dec
dec
mov
sub
xchg
mov
pop
push
call
pop
in
roll
mov
cmp
sub
cmpsb
aam
sbb
insl
push
inc
pop
inc
adc
inc
fcoms
push
xor
rcrb
out
sub
hlt
sbb
aaa
cmp
mov
push
and
lea
loop
dec
jmp
test
or
enter
inc
add
imul
dec
xor
mov
leave
in
cmp
mov
or
or
fsubl
push
out
adc
sbb
es
das
outsb
test
pop
fwait
sbbl
shr
cmp
call
dec
lret
inc
xchg
cmp
insl
pop
add
dec
adc
jle
stc
enter
sub
insl
push
xchg
aaa
lret
xor
int3
dec
pop
call
push
dec
jge
and
mov
pop
push
mov
xor
jg
xchg
repz
dec
jo
test
lret
or
adc
cld
int3
push
cmp
cmp
jmp
mov
sbb
add
test
mov
les
xchg
fldcw
jo
nop
push
inc
dec
or
push
push
fisttpll
pop
sahf
enter
jo
insb
idivb
add
inc
mov
mov
loope
imul
dec
push
mov
adc
xor
stos
adc
xchg
or
test
icebp
pop
fldenv
dec
loopne
push
ret
lods
pop
inc
push
xor
xor
dec
or
inc
push
push
call
add
push
push
aad
jle
rol
bnd
aam
jmp
jmp
mov
dec
pop
repz
and
cmp
jle
into
call
dec
test
inc
xchg
movsb
jnp
aam
sarl
int
push
dec
or
ror
lret
add
aad
jmp
fistpl
jle
je
push
add
stc
pop
inc
in
inc
dec
cmp
jne
in
inc
int
and
fstp
enter
repz
das
inc
rol
sub
shrb
cwtl
loop
push
xor
mov
add
imul
push
jnp
ss
add
lret
xor
push
sub
out
daa
mov
pop
rorb
fwait
and
test
pop
jno
ljmp
inc
cmp
push
out
clc
push
xorl
clc
push
inc
lods
sbb
pusha
test
rcll
dec
rcrb
aad
test
push
jecxz
xor
orb
jo
das
jmp
push
xchg
mov
loop
mov
outsb
dec
push
push
and
jp
inc
jb
push
and
xchg
inc
pop
xorl
mov
mov
xchg
mov
sub
shlb
call
adc
adc
rorb
or
clc
shr
enter
lret
mov
push
cmpsb
lods
mov
add
rorb
dec
clc
dec
xchg
xchg
inc
roll
scas
dec
sbb
aas
push
or
dec
rcr
push
mov
rcl
call
push
shll
pop
or
lahf
and
adc
cmpxchg
leave
cmpsl
xor
out
inc
leave
nop
fwait
movsl
lea
mov
dec
pop
adc
mov
test
fidivrl
mov
addr16
push
into
dec
pop
push
loop
pop
inc
xrelease
and
jge
das
jp
dec
sahf
jmp
cmp
or
mov
sub
sub
cmc
in
dec
subb
clc
mov
inc
sub
hlt
push
sub
in
jns
mov
mov
enter
lret
sub
add
outsb
test
mov
and
dec
or
fs
or
cli
les
cmp
inc
pop
bnd
dec
pop
pop
mov
mov
or
add
leave
sub
clc
pop
or
sub
mov
fdivrs
das
ret
jmp
dec
inc
jns
and
lods
sub
inc
pop
mov
cmp
mov
and
push
sbb
dec
movsl
lods
stc
push
push
insl
inc
cmpsb
pop
or
adc
xor
nop
mov
imul
hlt
in
inc
cmp
inc
xor
lcall
sbb
ret
rcrl
inc
aad
dec
jge
cmp
push
xor
adc
mov
sub
jmp
jns
dec
push
pop
shrl
jb
dec
push
clc
dec
dec
pop
xor
adc
int
int3
dec
sbb
in
enter
push
jbe
shll
mov
call
arpl
pop
inc
mov
call
ss
or
dec
or
lea
sbb
fcmovnu
dec
dec
mov
aaa
rcr
lret
mov
push
push
dec
dec
mov
pop
sbb
xchg
ret
sub
leave
dec
syscall
int
ja
push
and
out
push
sub
xor
fcmovne
lds
dec
push
mov
add
push
dec
repnz
addr16
fists
jp
mov
mov
das
jb
cmp
push
push
mov
pop
adc
insb
mov
stos
pop
aad
test
or
add
rcrl
pop
push
xor
xor
int3
test
ror
les
mov
xorl
cmpsl
dec
rcrl
jmp
add
popa
test
xchg
or
sub
pop
inc
orl
inc
popf
and
push
jecxz
dec
sub
cmp
pop
inc
out
sbb
mov
push
inc
dec
or
inc
jecxz
pop
insl
sbb
mov
push
jp
std
xchg
cmp
or
fdivr
xor
scas
pop
scas
and
cmpsl
mov
mov
dec
pop
push
sub
xlat
fnstsw
sarb
out
imul
pop
push
jmp
and
push
enter
es
or
jmp
pop
mov
shll
in
push
jle
or
mov
inc
dec
mov
push
lods
pop
push
jae
ds
movsl
xor
fstpl
pop
mov
or
pop
push
scas
fists
jns
sub
ror
cmp
test
inc
jno
cmp
cmpsl
cwtl
inc
sub
inc
iret
inc
das
hlt
rclb
scas
add
jbe
inc
call
push
dec
and
das
xchg
cli
lods
mov
sbb
jne
sub
pop
xor
pop
pusha
in
pop
pextrw
dec
dec
movq
inc
pop
mov
push
and
ja
dec
inc
ficompl
pop
aaa
inc
pop
xchg
insb
mov
inc
ror
lret
mov
mov
inc
pop
into
mov
inc
pop
pop
sbb
push
rol
mov
std
sub
push
mov
les
dec
mov
jns
mov
or
popa
pop
push
inc
inc
das
cmp
addb
dec
jmp
push
add
mov
sti
rorb
call
inc
push
test
lret
adc
dec
xor
jg
icebp
pop
jmp
les
outsb
jbe
inc
sub
dec
pushf
dec
or
loope
cmp
push
jmp
fistl
xchg
push
pop
sub
inc
pop
xchg
test
jb
pop
sti
das
xlat
shrb
das
movsb
inc
mov
in
dec
fildll
jmp
sbb
sti
inc
jge
rcll
fldcw
mov
inc
dec
pusha
test
inc
or
push
cmp
lahf
jg
into
sub
and
cmp
popa
cmpsl
mov
int
cmp
sub
pop
inc
in
nop
sub
jo
js
mov
mov
stos
in
or
xor
fbld
pop
and
dec
push
pop
mov
dec
sub
sub
test
xlat
jp
pop
dec
loopne
je
pop
dec
out
out
xor
hlt
fcoml
inc
pop
mov
xorl
mov
dec
sub
sub
ja
and
mov
int
mov
push
call
jl
jge
leave
inc
inc
sahf
clc
dec
enter
and
test
cmp
inc
xchg
add
scas
xchg
pop
sub
cs
add
inc
xlat
mov
mov
fldcw
nop
mov
sub
into
xor
mov
sahf
inc
jge
inc
push
mov
pop
shrl
bound
shl
mov
ret
lods
inc
aad
cld
adc
lods
sarb
roll
dec
scas
xchg
inc
stc
lock
adc
xor
into
xor
lcall
lret
mov
popf
push
cmp
shll
fmuls
repz
lea
roll
roll
mov
enter
xchg
pop
mov
rcrl
adcl
out
je
dec
or
sub
and
adc
mov
add
and
pusha
mov
fimuls
adc
lds
aam
pop
sub
push
das
push
fs
cli
int
sarb
mov
inc
jmp
push
push
jg
das
ds
repz
adc
dec
outsb
jb
jae
int
inc
subb
lods
mov
and
leave
inc
insl
xchg
notb
ret
dec
aad
xor
scas
fcompl
inc
adc
sahf
pop
or
push
imul
ljmp
xor
push
pop
adc
imull
rcr
iret
push
push
inc
repz
insl
ret
mov
inc
lret
ret
dec
dec
rcrb
insb
pop
jns
push
fcmovnu
mov
inc
icebp
cmp
sub
cmp
das
xchg
mov
sub
sub
and
dec
adc
push
fistl
sub
xchg
fisubrl
dec
enter
fxch
jmp
clc
dec
sub
inc
push
fsubs
dec
inc
cld
inc
enter
sbb
fbld
scas
pop
push
xor
add
push
and
pop
xchg
mov
jbe
pop
adc
inc
jno
mov
jp
push
add
jb
out
pop
mull
stos
ret
lock
test
jg
pop
pop
cmp
and
pop
pop
push
iret
dec
jp
pop
mov
arpl
bswap
xchg
imul
push
repnz
pop
inc
and
mov
xorb
xchg
and
and
imul
mov
push
cmpsb
add
sub
ret
and
mov
incb
mov
jp
or
dec
xor
je
roll
dec
leave
imul
popf
fildl
mov
out
adc
or
add
fisubl
fldenv
or
cmc
fucomip
shr
sbb
pop
iret
shrl
jbe
push
imul
rcl
insb
inc
in
jmp
jns
jecxz
sahf
inc
subb
cmp
rcll
lods
sub
push
int
int3
cmp
out
fisubrl
shlb
addb
xor
clc
lods
inc
clc
sub
pop
adc
and
dec
mov
enter
and
and
inc
rolb
enter
les
sub
sbb
addb
hlt
dec
les
dec
xchg
lret
jo
je
fwait
adc
into
push
xchg
adc
mov
inc
mov
or
mov
mov
lret
cmp
pushf
loope
cwtl
and
arpl
xor
jl
sbb
jns
subl
jmp
cmp
enter
lods
xlat
sub
fldl
mov
das
dec
mov
xor
inc
mov
sbbb
loopne
bswap
dec
dec
sub
sbb
repz
int
leave
leave
enter
jae
or
shr
bound
aaa
fldcw
ret
leave
push
mov
int3
push
call
jl
push
and
inc
inc
xor
and
and
mov
inc
sub
mov
into
adc
pop
sub
mov
xor
lret
lret
filds
pop
push
jae
add
popa
mov
data16
pop
and
rolb
xor
xchg
adcl
test
rol
mov
pop
inc
cmpsb
aam
adc
jno
xchg
stos
add
jmp
pop
shl
test
das
mov
inc
cli
and
push
push
dec
mov
adcl
bnd
pop
sub
test
imul
rclb
sub
mov
imul
xchg
sub
adc
div
cs
xchg
subl
into
sub
cmp
or
fistps
mov
movsl
int
test
jb
insb
inc
insl
push
mov
xor
push
pop
fcomps
fstpt
into
mov
aad
mov
rep
dec
setl
pop
pop
das
mov
mov
pushf
inc
mov
adc
imul
mov
push
fiaddl
add
sahf
enter
aad
inc
sbb
aad
xor
sub
lods
mov
pop
nop
mov
adc
mov
inc
ret
push
push
sub
rcrl
sbbb
cmp
in
push
push
xor
push
iret
out
pop
subb
push
dec
fcmovu
dec
call
inc
int
xor
cmp
xchg
mov
lods
mov
outsb
lahf
pop
dec
push
popf
das
ror
int
or
cwtl
lods
mov
nop
push
cmp
pop
mov
mov
addr16
or
bound
lret
xor
js
pop
or
std
mov
pop
imul
mov
int3
inc
enter
into
push
sub
bound
pop
add
scas
dec
les
dec
cmp
mov
fldt
loopne
xchg
lock
or
push
pop
lds
inc
dec
lret
int3
mov
js
inc
dec
push
cld
aas
pop
or
out
pop
pop
inc
fnsave
loopne
scas
dec
pusha
cmpb
cmp
pop
or
sahf
xchg
pop
sti
cmp
sbb
sbb
inc
add
push
cmp
push
xchg
mov
ja
and
in
dec
int3
sbb
mov
rcll
adcb
add
sub
jmp
mov
sarb
mov
jno
pop
push
stos
faddl
sub
xchg
push
mov
pop
shlb
iret
push
repz
insl
sub
dec
xlat
mov
pop
es
fcmovb
inc
test
push
push
addr16
aad
icebp
out
cmp
add
xor
sahf
and
cmp
inc
mov
push
or
aam
mov
xor
mov
inc
repnz
jns
int
pushf
add
dec
aaa
scas
mov
dec
sbb
std
sub
xchg
loope
icebp
xchg
jmp
xor
lea
dec
inc
xchg
sti
lret
jmp
push
xchg
sub
mov
dec
mov
les
sub
jnp
inc
mov
push
inc
cmp
pop
dec
roll
mov
lock
dec
dec
fnstcw
test
leave
or
cmp
xlat
insb
sti
xor
push
push
xor
or
dec
push
dec
dec
push
jmp
fcmovu
lahf
dec
cmp
mov
xor
imul
lahf
fcoml
push
push
mov
subb
les
sub
in
add
xor
lahf
in
cmp
adc
mulb
and
mov
clc
pop
int3
cmovbe
vsqrtpd
sub
rcrl
xor
lock
or
add
pop
add
xchg
lea
insb
int3
dec
pop
adc
int
and
push
pop
dec
ret
loopne
aaa
fisttps
adc
mov
js
cmp
ror
sbb
in
stc
push
mov
sub
sbb
test
dec
push
push
pop
mov
fldt
xor
fmull
rcll
pop
or
enter
lret
xor
loop
icebp
cmc
pop
xchg
inc
sti
mov
push
inc
mov
clc
inc
lea
push
lret
sbb
xor
inc
inc
add
popf
pop
sub
fcmovbe
cmp
jecxz
sbb
roll
lcall
repz
and
push
sub
les
xchg
gs
add
icebp
dec
xchg
push
jmp
orl
ret
imul
out
push
sbb
dec
into
jge
sbb
dec
test
and
pop
jno
sub
jo
adc
inc
pop
pop
inc
inc
and
jmp
and
push
inc
hlt
lds
xor
add
movsl
fisttpll
inc
add
dec
adc
data16
rolb
sbbb
and
cmpsl
aaa
pop
sub
dec
xor
pop
inc
sbb
sub
inc
jmp
bound
push
sub
out
inc
jnp
push
shll
push
and
enter
leave
xor
mov
add
loop
loope
or
pusha
aad
dec
and
movsb
inc
jmp
sbb
outsl
push
sbb
fsubp
or
push
test
inc
cmpsl
and
sbb
daa
fldl
mov
inc
test
jb
inc
fnstsw
faddp
dec
pop
push
cmp
test
sub
push
dec
inc
jmp
dec
inc
call
lds
lret
sub
sbb
mov
aas
fimull
daa
or
sbb
loope
loope
cmp
mov
out
add
or
push
fisubl
les
sub
sub
jmp
mov
inc
repz
pop
dec
out
rcll
enter
aam
ret
inc
shlb
add
push
das
adc
int
pop
add
shll
inc
pop
dec
out
pop
push
imul
stos
sbb
dec
loopne
and
jb
mov
rolb
adc
daa
adc
movb
push
pop
pop
sbb
mov
pusha
mov
fimuls
and
xchg
cld
test
jb
das
imul
arpl
rolb
xor
mov
push
dec
test
pop
lret
inc
push
xchg
sti
dec
outsl
and
pop
jg
mov
int
ret
sub
lods
jno
movl
loope
test
pop
aam
dec
sti
or
in
mov
adc
leave
mov
pusha
out
sbb
xlat
pop
lcall
pop
ret
xchg
mov
fnstcw
inc
push
jle
mov
adc
sub
fistps
sub
pop
xor
push
mov
insl
sub
scas
enter
add
mov
xor
ja,pt
xchg
dec
je
ret
enter
push
stos
add
inc
call
decl
sbb
or
mov
or
hlt
jb
dec
mov
pop
mov
and
push
sub
push
dec
mov
in
insl
jecxz
pop
leave
inc
sub
int3
inc
or
pop
mov
clc
xor
fld
xchg
xor
mov
repz
int3
dec
jns
lret
dec
pop
sub
andb
or
mov
mov
add
xchg
inc
push
sbb
pop
and
jmp
inc
jo
lds
dec
dec
mov
jne
mov
xor
leave
mov
dec
loope
push
mov
mov
jle
dec
adc
xchg
inc
test
xchg
clc
movsb
dec
sub
stc
adc
in
xchg
dec
mov
push
sbb
imul
enter
push
and
neg
lock
dec
inc
cmpsl
sarl
or
test
clc
add
add
subb
push
int3
rorb
fimuls
xchg
jg
inc
sti
or
add
adc
push
push
int3
imul
sarl
inc
enter
mov
adc
xor
insl
xlat
dec
and
push
clc
dec
dec
test
fs
mov
sbb
loopne
or
pop
pop
inc
lret
and
adc
cmp
faddl
dec
loopne
aaa
nop
mov
push
or
mov
inc
lods
mov
mov
test
shr
in
inc
push
push
mov
dec
and
sub
fsubl
lret
leave
adcl
xchg
cmpsb
cld
pop
add
jns
dec
push
mov
mov
sbb
xor
dec
fldt
jmp
lock
inc
and
and
mov
inc
js
adc
inc
xor
sub
inc
ljmp
or
idiv
pop
faddp
leavew
dec
sbb
lret
cmp
test
adc
arpl
sahf
fidivrl
mov
jp
pop
xlat
pop
int3
out
pop
inc
leave
jmp
jecxz
into
pop
mov
lods
cmc
int3
pop
test
ja
pushf
push
push
inc
shl
enter
mov
dec
fmul
add
popa
pop
jb
add
stc
ficoml
test
add
out
xlat
fnstenv
mov
dec
mov
sti
inc
jl
mov
sahf
or
loop
fnstcw
pushf
fstp
mov
stc
jge
push
push
nop
inc
xor
mov
cwtl
xchg
add
dec
shlb
or
push
leave
dec
mov
or
insb
push
in
imul
fs
jecxz
adc
inc
add
xchg
loopne
pop
push
jmp
xchg
rcrl
push
pop
inc
sub
jmp
adc
jae
cmc
sub
shl
mov
shlb
sub
jns
cli
xor
push
or
dec
adc
pusha
mov
sub
fildl
dec
jmp
dec
scas
dec
lret
inc
ret
pop
mov
dec
jae
out
inc
clc
dec
fstp
lret
in
sbb
out
mov
leave
pop
push
or
mov
jae
loope
lret
sub
das
push
sbb
dec
mov
sub
imul
pusha
stc
and
aas
mov
pop
or
enter
push
adc
aad
lcall
shlb
push
rorb
mov
and
jle
int3
cmp
inc
xchg
sti
fnstsw
pop
rcr
lds
adc
flds
sub
test
sbb
popa
inc
sub
daa
aad
mov
push
jmp
inc
in
inc
jb
add
dec
stos
add
adc
dec
xchg
arpl
into
fwait
test
or
lds
xor
int3
in
fisubrs
inc
xor
jp
cmp
lock
mov
shlb
push
pop
out
fxam
movsb
add
leave
push
fwait
xor
push
clc
mov
adc
sub
lret
shrl
jb
xorb
and
and
xlat
add
daa
stos
int
mov
fidivs
push
inc
iret
aas
enter
lret
pop
push
fnstcw
loop
fistl
jo
and
pop
rcrb
aad
mov
lahf
js
mov
aaa
mov
push
leave
sub
popa
adc
aam
dec
xor
xor
pop
jecxz
pop
dec
cmp
pop
jno
add
and
int3
cmp
mov
mov
push
in
sbb
sbb
push
ficoml
mov
dec
jecxz
aam
inc
fidivrl
stos
dec
push
insl
fimull
add
dec
icebp
mov
rcrl
mov
push
nop
lea
adc
test
xlat
mov
jmp
add
insl
pop
push
stc
cmp
out
ficoml
mov
sub
fucompp
jge
in
insl
pop
jne
push
jbe
lret
shrb
sub
xlat
int
inc
or
xor
icebp
outsl
lods
pop
int3
insl
or
mov
push
fstps
fiadds
out
clc
aaa
add
sub
inc
mov
lds
cmp
jge
dec
jmp
test
fstl
inc
and
ret
pop
enter
roll
push
mov
mov
outsl
push
and
int
aam
pop
ficoms
xchg
ret
das
jp
pop
adc
inc
ret
cs
xchg
sbb
sub
mov
xor
add
adc
mov
pop
test
cmc
mov
sbb
test
ljmp
fs
mov
adc
loopne
xlat
int3
call
mov
pop
xchg
xor
leave
fdivrs
lock
dec
jmp
ficompl
dec
pop
push
stos
pop
inc
mov
imul
mov
sub
enter
xor
inc
xchg
add
dec
push
mov
pop
aad
mov
lret
testl
cmp
sub
pop
push
mov
sbb
lret
dec
enter
rcrb
inc
stos
mull
jno
adc
rorl
and
shrb
stos
cmp
fsubrs
xor
inc
cmp
rcll
xchg
movl
pop
mov
mov
out
push
dec
out
sub
test
push
mov
mov
push
lods
adc
xlat
pop
pop
cmp
pop
inc
sbb
and
inc
jmp
adc
adc
js
dec
add
sbb
mov
addr16
outsb
fldcw
insb
lcall
mov
pushf
jmp
jmp
sbb
adcb
cmp
dec
enter
lret
jge
fimuls
enter
cmp
jnp
pop
and
and
int
push
cmp
xchg
xor
sbb
push
inc
pop
inc
lret
cs
sub
jns
rcll
rclb
pop
lcall
push
push
sub
fmul
or
aad
leave
stos
sbb
les
push
jo
aaa
dec
push
cltd
shll
sub
cmp
enter
test
das
jne
push
outsl
aaa
pop
xor
pop
mov
push
test
not
cs
mov
out
loope
sbb
sub
xor
xor
xchg
scas
or
fmul
ret
jg
mov
scas
leave
nop
es
adc
test
mov
add
leave
push
in
out
jp
dec
in
insb
mov
stc
imul
or
mov
fs
mov
xchg
dec
aas
stos
xchg
sub
xor
icebp
stos
inc
cmp
call
mov
pop
push
lret
les
pop
push
cmp
dec
xchg
insb
mov
enter
dec
sbb
dec
or
pop
outsb
enter
add
pushf
dec
call
mov
push
lcall
leave
cmp
add
adc
push
lds
inc
int
sub
call
and
js
imul
lods
sub
xlat
fs
dec
inc
xor
sub
cmpsl
dec
dec
lret
iret
dec
or
cmp
divl
jnp
xor
sub
cmp
push
js
push
dec
inc
rcll
adc
in
loopne
dec
jp
lret
push
or
int3
roll
stos
scas
and
imul
ret
das
je
cs
mov
ss
enter
addr16
pop
sub
sbb
pop
dec
in
loopne
iret
popa
xor
rol
push
push
push
andb
pop
hlt
inc
add
dec
shrl
push
dec
in
jnp
dec
sbb
repz
pop
xor
xchg
sbbl
and
and
xor
cmp
xchg
pop
mov
or
xor
fmuls
or
pop
adc
pop
pop
or
and
xchg
and
jle
sub
mov
sub
lods
mov
adc
test
mov
dec
aas
sub
push
and
mov
mov
mov
into
sub
xor
push
std
fs
rcr
loop
jecxz
inc
imul
mov
dec
jmp
adc
jo
push
push
dec
popa
cmp
sub
xchg
push
adc
rorb
pop
stc
cltd
out
xchg
mov
push
fldcw
loop
push
into
sbb
pop
bound
jno
mov
or
pusha
xchg
dec
add
push
mov
loop
fnstcw
fisttpll
imul
push
dec
adc
lahf
ss
dec
sub
movsb
sub
xchg
fisttpl
dec
data16
outsb
adc
out
test
fstp
cmpsb
int
mov
or
ss
push
out
cmp
mov
dec
jmp
mov
add
adc
enter
add
fildll
jae
sbb
inc
sbb
add
nop
or
lods
inc
inc
movl
sbb
and
cld
clc
xchg
push
xor
mov
pop
mov
call
jns
mov
inc
cmp
xchg
push
call
shlb
mov
aam
aas
in
aas
les
ss
inc
gs
cmp
ret
es
xchg
flds
loopne
pop
sub
clc
rcrb
dec
js
dec
pop
mov
inc
popa
adc
push
xchg
cld
cmp
nop
jno
push
or
mov
shll
jmp
adc
iret
and
fisttpll
or
es
mov
pop
and
shlb
sub
lods
js
in
cmp
sub
dec
jnp
shl
or
sub
mov
dec
ds
push
orb
insb
cwtl
stos
or
inc
iret
mov
dec
mov
pop
mov
mov
jmp
mov
fwait
dec
push
pop
add
mov
dec
inc
sbbl
dec
or
cwtl
inc
adc
push
inc
adc
xor
nop
fwait
mov
add
xor
arpl
out
push
fsubrs
rcr
xor
jmp
das
or
imul
push
mov
jl
jbe
call
leave
inc
mov
rcl
push
aas
notl
sub
cmpsl
jnp
cmpsb
mov
push
fld1
dec
and
jge
push
push
sub
imulb
mov
repz
shrb
xor
in
aaa
mov
pop
les
movsl
rorb
pop
arpl
das
repz
or
and
imul
call
jmp
pop
xor
mov
mov
in
out
pop
jb
push
das
dec
push
sbb
dec
sub
sub
pop
inc
mov
scas
mov
xor
pop
shlb
ret
push
and
push
cmovl
or
out
pop
pop
sub
pop
addb
rorb
or
sub
add
mov
in
xor
pop
leave
or
xchg
pop
dec
call
icebp
sub
cmp
jl
mov
push
jle
mov
cmp
sbb
cmp
dec
xchg
push
daa
pop
test
dec
jl
das
xor
das
push
push
push
test
mov
dec
xchg
out
dec
jg
sarb
inc
or
inc
or
adc
hlt
sub
add
lret
dec
xor
out
pop
sub
mov
or
inc
loope
lret
pop
pop
sbbl
std
inc
or
dec
dec
fsubl
stos
pop
adc
dec
call
pop
pop
out
enter
dec
add
xor
xor
movsb
mov
cltd
or
lea
jg
push
xchg
fwait
sub
xor
call
enter
inc
shrb
push
in
rcll
fwait
sarl
sub
push
push
dec
add
inc
xchg
cmp
mov
cmp
mov
dec
dec
or
xor
dec
push
mov
dec
adc
es
mov
enter
push
enter
rclb
inc
rcrl
idivb
adc
add
mov
addr16
shl
and
dec
sub
adc
add
imul
data16
cmp
pop
loope
stos
jmp
or
dec
dec
clc
cmp
andb
dec
rcr
lods
mov
or
testl
pushf
adc
inc
push
dec
popa
jmp
inc
inc
popa
pop
imulb
xor
lret
jmp
inc
sbb
sub
repz
je
jle
dec
mov
dec
cmp
repnz
das
mov
cwtl
bound
xchg
push
rclb
pop
dec
outsb
insl
add
or
pop
mov
sub
and
jb
insb
pop
inc
pusha
mov
sbb
mov
loopne
jmp
jmp
inc
xchg
lret
pop
and
fistpll
stc
mov
aam
inc
push
jp
insl
ss
push
fisttpl
leave
push
add
mov
dec
and
xlat
inc
shll
repz
sbb
jae
rol
pop
das
xor
pop
je
js
jb
mov
sahf
leave
fnstcw
push
aas
or
sub
or
push
xchg
mov
adc
das
sub
and
dec
inc
pop
shrl
enter
int3
aam
inc
mov
int3
mov
js
and
inc
inc
dec
and
inc
sub
std
inc
jno
pop
pusha
filds
sub
pushf
divb
aam
jb
popf
mov
inc
pop
aas
sub
pop
test
pop
or
aas
pop
pop
cmp
or
pop
cs
rclb
cld
fwait
push
dec
sub
push
btc
mov
mov
jb
wrmsr
pop
mov
roll
popa
inc
or
aaa
rolb
fisubrs
rorl
sti
sbb
shrl
jle
aad
sub
rcll
imul
pop
or
out
test
mov
adc
or
adc
icebp
push
xor
jb
sub
pop
sub
xlat
push
es
sub
enter
inc
std
and
fbld
ret
cmp
mov
int
cmp
push
imul
mov
fisubs
cmpsb
mov
test
rorl
lods
mov
aad
jge
es
push
xrelease
inc
insl
mov
pop
dec
xor
cmp
mov
outsb
popf
pop
add
aad
int
mov
insl
adc
xor
outsb
dec
add
xor
test
dec
mov
jae
aas
filds
leave
inc
push
roll
lcall
pop
fmull
dec
pop
or
mov
dec
cmpsl
or
or
push
dec
dec
stc
xor
add
push
cmp
xor
sbb
xor
dec
stc
aaa
jo
push
fistpl
mov
sub
add
fstpl
shll
sub
nop
sub
ficoml
adc
in
inc
dec
shll
jno
adc
dec
adc
inc
push
add
dec
mov
lds
test
and
jno
ror
inc
adc
inc
cmpsb
add
adc
js
movsl
pop
jnp
push
cmc
sub
jae
mov
rcll
mov
leave
or
lods
inc
mov
test
in
pop
dec
or
pop
rorb
fidivs
pop
dec
ds
mov
mov
fisttpll
push
add
push
or
mov
mov
inc
andb
testb
dec
adc
fstl
ret
xor
dec
pop
jno
out
fisubs
fcmovb
or
sbb
push
fwait
hlt
push
pop
mov
rcrl
push
xor
cwtl
dec
iret
mov
pusha
cmp
cltd
pop
push
pop
arpl
mov
push
hlt
lret
fiaddl
pop
sub
dec
popl
loop
mov
adcl
dec
xchg
iret
sbb
cld
push
dec
pop
aad
xorb
sub
outsb
rcll
mov
dec
testl
jge
dec
sbbb
jg
xchg
pop
pop
and
dec
pushf
xchg
in
ljmp
outsl
cmc
dec
pop
int
xor
imul
mov
mov
push
inc
mov
dec
rcr
mov
adc
mov
in
icebp
push
dec
sbb
inc
jmp
push
mov
push
sbb
icebp
xchg
sarl
jo
sub
mov
jb
push
stos
dec
mov
mov
dec
mov
hlt
test
imul
jnp
and
mov
xchg
push
push
inc
insb
push
push
dec
stos
popf
or
ljmp
lret
aad
fwait
sbb
or
int3
dec
push
mov
lea
dec
cld
pop
popf
fwait
ret
test
xor
imul
xlat
dec
fisubl
xchg
test
mov
pop
rcrb
std
push
dec
loope
iret
lock
loopne
rorb
paddusw
popf
jbe
dec
sub
dec
mov
mov
jmp
cli
and
enter
ret
lret
movsb
dec
mov
push
push
add
dec
sub
dec
push
hlt
inc
gs
aad
push
es
in
call
mov
pop
inc
mov
xlat
subb
pop
mov
aas
jb
leave
push
call
jne
dec
xchg
dec
lods
or
cltd
xchg
push
shrl
stc
add
cmpsb
dec
ret
xor
cmc
test
xchg
adc
jb
sub
jmp
mov
pop
push
xchg
jg
adc
dec
sub
sti
sbb
mov
push
jo
aad
mov
je
shr
push
stos
adc
push
dec
jecxz
inc
cmp
dec
pushf
sub
sbb
fldt
xor
adc
fbstp
popa
insl
cmp
push
jne
push
imul
fidivs
jp
scas
dec
jno
cmp
pop
push
dec
sub
pop
xchg
shlb
daa
jnp
loop
dec
fisttpll
sub
dec
fucomip
or
mov
outsl
orb
dec
jg
cmpsb
addr16
and
mov
push
and
fsub
gs
arpl
dec
insb
outsl
jl
mov
jg
scas
xor
loopne
popa
subb
mov
mov
and
pop
inc
push
fisubrl
dec
dec
mov
imul
out
mov
ret
fs
lock
cmp
adc
add
xor
jp
inc
inc
dec
adc
pop
mov
popf
dec
int3
push
rcl
xor
add
jo
imul
push
imul
leave
dec
cltd
movsb
stos
sub
test
sbb
inc
lret
test
stos
push
insl
pop
test
out
sahf
lods
call
std
or
xor
and
fwait
imul
int
jne
push
dec
pop
ljmp
stos
out
fistps
mov
push
cmp
sarb
out
lcall
lret
jecxz
stc
mov
rorl
xchg
jge
ja
pop
push
dec
push
mov
push
scas
xor
sub
sahf
mov
jmp
mov
ss
ja
and
mov
dec
lcall
sbb
xchg
pop
aaa
dec
into
addb
das
loopne
sub
movsl
jne
ret
pop
negb
inc
mov
test
mov
jmp
lret
adc
lcall
daa
fmul
mov
push
scas
inc
fsubl
xchg
lahf
testb
sti
imul
jae
mov
mov
outsl
pop
jp
sub
fwait
pushf
lods
aam
rol
dec
rorl
xor
adc
popa
mov
add
pop
aaa
lods
pop
mov
shll
mov
pop
mov
call
mov
or
jno
dec
lods
loopne
or
dec
cmp
xchg
ret
add
cmc
loope
sbb
and
pusha
and
dec
cltd
pop
outsb
inc
bound
dec
jb
mov
icebp
dec
inc
mov
rolb
jnp
mov
je
stc
dec
mov
jg
insb
repz
lret
dec
data16
add
mov
int
pop
sbb
nop
and
sbb
insb
rorl
push
fildl
mov
jg
xchg
lock
dec
test
inc
sbb
dec
fcompl
jge
mov
pushf
movsb
pop
es
lea
test
leave
rol
fwait
push
dec
adc
sub
iret
add
pop
fscale
mov
sub
sbb
mov
mov
add
dec
cmp
mov
push
stos
sti
jae
jne
xchg
xorl
orb
inc
fld1
sbb
cmp
add
or
xor
push
inc
pop
cmc
aam
dec
movsb
loope
xchg
out
sti
cld
or
pop
ret
fnsave
icebp
or
ljmp
in
pop
pop
adc
enter
cltd
cmpsl
movsb
das
std
jne
dec
loopne
mov
dec
sub
push
mov
ja
xor
jp
push
pop
cli
or
fstpl
int
and
and
enter
and
sub
incl
inc
mov
add
psrad
lahf
bound
xor
cs
cwtl
cmp
ret
add
dec
cli
aam
pop
lock
cmp
orb
clc
jmp
out
push
aas
lahf
loopne
popa
push
dec
mov
gs
out
pusha
dec
dec
es
or
stc
xor
jmp
xor
dec
das
sbb
popa
jb
ljmp
ror
mov
xchg
ss
xchg
jmp
dec
sub
dec
mov
add
stos
jp
dec
adc
pop
cmp
out
mov
inc
sub
out
cmp
out
push
dec
pop
jo
push
jge
bound
dec
sbb
in
scas
lret
xchg
cmp
mov
rclb
gs
popa
imul
dec
or
stos
test
xchg
cs
cmpl
add
xor
dec
sub
in
jnp
jle
scas
dec
imul
or
xchg
lret
jnp
loop
pushf
mov
shrb
imul
frstor
jmp
jb
sub
mov
adc
push
subl
cs
ljmp
dec
ds
add
cmp
cmp
sub
sub
mov
cmpb
daa
rorb
push
subl
jae
jnp
outsb
mov
dec
ret
adc
mov
test
pop
dec
sub
cmp
and
xchg
xchg
adc
addr16
loope
cmp
bswap
in
sbb
xor
icebp
xchg
mov
or
mov
xchg
xchg
inc
push
fucomi
push
dec
cmp
sub
pop
cltd
sbb
push
inc
push
dec
sbb
push
test
jg
shl
dec
dec
add
je
or
xlat
adc
dec
imul
xchg
xchg
or
addr16
shr
dec
xchg
dec
fucomip
and
dec
imul
data16
pop
lods
lret
mov
stos
pop
and
pop
dec
jo
fadds
shlb
xchg
dec
mov
pop
xor
pop
dec
push
pop
mov
scas
inc
jmp
xor
lds
lret
ss
loope
fs
ret
dec
sub
cld
push
xchg
mov
cmp
jle
or
pop
bnd
sbb
add
pop
xchg
mov
push
dec
test
es
lret
mov
jmp
or
rcrb
cld
ficoms
dec
push
push
enter
lret
xchg
xor
inc
idivb
mov
cwtl
mov
or
pushl
fisubl
dec
push
push
inc
jmp
fwait
daa
dec
shl
add
shr
iret
es
push
xchg
push
and
pusha
in
and
shr
ljmp
ljmp
dec
push
jge
ficompl
mov
mov
jno
icebp
pop
cmpsl
outsb
mov
add
cmc
dec
add
and
xchg
sub
mov
ja
icebp
inc
rcll
mov
addb
sub
mov
mov
push
in
sbb
cmpsb
sbbb
push
mov
aaa
add
xchg
aas
mov
repz
mov
insb
int
inc
lea
dec
mov
cli
xchg
jae
pop
xchg
push
je
push
mov
sbb
jmp
mov
dec
add
aaa
outsl
lods
rcrb
inc
jb
mov
inc
mov
cwtl
pop
inc
lea
jmp
jmp
push
push
sub
jns
rcll
jne
jnp
jecxz
sbb
mov
mov
sahf
adc
movl
and
jns
jnp
and
mov
mov
fmulp
in
adc
push
leave
je
or
stos
jbe
imul
mov
xchg
xchg
cmp
cld
jmp
xlat
rorb
jae
xor
add
lods
jmp
pop
imul
dec
in
mov
inc
sbb
std
dec
xchg
xor
iret
and
push
push
xor
dec
ja
test
je
dec
js
jge
jmp
lahf
mov
loop
add
or
rolb
mov
lds
sbb
cmp
aaa
es
jmp
dec
add
push
adcb
cmpsl
test
inc
dec
xbegin
lcall
in
fsubrs
jmp
pop
pop
inc
push
add
inc
insl
push
dec
stc
inc
out
fistl
int
dec
xor
lds
mov
cmp
push
cmc
inc
push
sub
or
stos
dec
repnz
sbb
out
leave
arpl
scas
lea
mov
jmp
out
push
shrl
mov
and
sub
cmc
xchg
pop
hlt
sub
push
scas
pushf
jae
add
pop
mov
psubsw
pop
mov
int3
popa
pop
sub
xchg
mov
lock
xorl
adc
adc
rcrb
outsb
pop
xchg
dec
jle
je
push
xor
aam
add
loop
jnp
inc
add
dec
sub
mov
dec
outsl
rorb
aaa
dec
cmpsb
mov
movb
dec
xor
adc
popl
or
sbb
cltd
inc
mov
cmpsl
sub
fcoms
jnp
cmp
xchg
daa
in
rcrl
pop
cwtl
dec
insl
adc
dec
push
sbb
dec
mov
cmpsl
xchg
popf
and
sahf
dec
loope
mov
mov
cmp
scas
dec
add
mov
daa
leave
dec
movsb
sub
jnp
ret
nop
xchg
out
sub
fwait
out
push
xor
add
add
dec
adc
fdivs
mov
xchg
in
mov
fldt
sub
aas
push
push
inc
dec
insb
stos
inc
dec
test
popf
dec
in
cwtl
sbb
pusha
dec
and
push
dec
jmp
dec
or
mov
popa
test
push
adc
xchg
mov
and
dec
pop
negl
jp
sbb
dec
pop
inc
mov
sbb
lcall
xor
in
xlat
cmp
mov
shlb
ja
data16
push
out
adc
scas
push
shll
aas
inc
push
sub
mov
jge
xchg
push
aad
sbb
dec
fs
lret
dec
ret
fbld
sub
nop
knotb
push
icebp
gs
dec
dec
push
das
or
mov
cmp
mov
jmp
and
fnstsw
jmp
inc
lret
fmuls
or
test
inc
bound
dec
inc
cmpsl
push
out
xchg
movsl
popa
dec
jecxz
xchg
pop
mov
les
pushf
aam
aad
cmp
or
sbb
sub
dec
out
dec
mov
mov
adc
dec
in
jge
mov
pushf
add
push
pop
fisubrl
outsb
mov
jmp
jl
dec
jb
fisubl
cmp
sub
sti
cmpsl
add
and
sub
xchg
push
dec
add
mov
xchg
add
bound
sub
mov
pop
dec
push
pop
fwait
xchg
pop
inc
je
sub
inc
subb
inc
imul
mov
loop
cmp
inc
lret
sub
jg
inc
fcompl
mov
inc
mov
dec
xchg
xlat
dec
fs
sub
rcrb
mov
adc
mov
add
lea
insb
dec
loop
mov
aad
push
or
lret
jge
stos
loope
inc
pop
jo
dec
cmpsl
aam
jmp
in
mov
mov
mov
push
xlat
pop
mov
pop
mov
lods
cmp
test
push
lret
lock
aas
jbe
mov
es
les
push
sub
pop
mov
dec
mov
cmpl
in
fldcw
dec
imul
test
stos
inc
mov
cli
sbb
dec
xor
ror
xor
sub
jns
cli
pop
jmp
mov
out
call
mov
sub
dec
out
mov
dec
fwait
push
jmp
pop
pop
jecxz
sbb
sub
enter
and
inc
push
mov
imul
push
imul
sti
push
dec
in
aad
gs
adc
lock
shrb
imul
dec
movsl
cmpsl
jle
dec
outsl
adcb
mov
fidivs
sahf
scas
aas
lds
or
jle
push
gs
js
mov
call
movsl
stc
je
fistpll
dec
xorl
iret
mov
mov
pop
test
and
xchg
mov
repz
shll
ret
push
pop
test
sub
dec
arpl
xor
js
mov
dec
stos
sbb
add
mov
cli
and
mov
xchg
push
dec
jo
xor
adcl
stc
in
ljmp
cmp
pop
adc
aaa
inc
sahf
inc
xchg
dec
stos
mov
shrb
mov
xor
sub
mov
dec
push
xchg
mov
mov
aaa
push
jmp
lahf
mov
pop
jmp
jae
out
and
in
scas
or
push
pop
outsl
cli
dec
in
addr16
push
sbb
std
dec
xchg
jge
dec
frstor
in
or
daa
xchg
stos
dec
inc
push
xchg
mov
loopne
xchg
lods
dec
fistpll
icebp
dec
push
fdiv
cmc
insl
xor
push
mov
push
push
popf
rorl
jns
mull
ret
push
mov
push
add
fisttpl
cmp
dec
dec
sub
mov
addr16
out
out
aaa
lea
into
dec
hlt
add
stos
mov
inc
inc
jno
shlb
xchg
xchg
push
inc
out
xor
leave
sub
mov
sbb
mov
std
das
push
in
push
cmpsb
stos
sub
pop
test
sbb
je
and
shrb
mov
cs
imul
aaa
xorl
cmpsb
ljmp
fbstp
jmp
dec
mov
mov
movsl
pop
in
cli
mov
push
pop
dec
fs
dec
icebp
xor
cmp
adc
dec
shlb
mov
or
scas
lahf
sbbb
push
pop
dec
lds
bound
mov
mov
xor
mov
mov
mov
pop
xchg
sub
clc
popf
into
jb
addr16
mov
push
sub
pop
or
fbld
lahf
jno
test
outsl
js
lret
in
add
and
stc
das
icebp
or
or
xor
pop
dec
dec
mov
mov
adcb
imul
rolb
aam
out
dec
cmp
popf
int3
sub
mov
dec
xchg
stos
dec
jmp
push
fwait
ja
jecxz
dec
aas
mov
mov
insl
add
pop
pusha
test
imul
mov
sti
jmp
fidivl
sbb
push
cmp
shll
fdivs
push
lea
mov
mov
inc
adc
shrl
mov
stos
je
scas
mov
mov
sbb
push
repnz
ret
sbb
mov
dec
jg
jge
dec
mov
outsb
dec
adc
out
aam
es
scas
mov
dec
lret
sbb
insb
rolb
test
cwtl
inc
dec
push
lock
imul
push
mov
dec
lret
roll
mov
popa
lea
dec
add
sub
dec
jae
adc
sub
push
pop
mov
rolb
lcall
inc
dec
pop
adc
mov
sbb
dec
jb
lds
mov
pop
dec
roll
mov
int3
dec
mov
pop
cmc
testb
mov
push
xor
dec
sub
add
ret
movl
push
push
or
or
subps
mov
lea
insb
cmp
std
lret
pop
jg
dec
ja
mov
dec
pop
xchg
movaps
mov
push
aaa
hlt
mov
test
scas
dec
jl
pop
mov
jge
fdivrs
dec
bound
cs
pusha
adc
test
cmp
push
sub
sti
insl
mov
aad
stos
adc
add
je
mov
pop
rolb
sub
cmpsl
sti
cmp
clc
dec
add
and
aas
ret
dec
push
pop
push
dec
jle
add
pop
lods
lahf
testb
addl
jmp
ss
jnp
sbb
lahf
xor
push
addb
outsl
push
mov
aas
cmp
out
out
push
jmp
sbbl
or
pop
sti
popa
mov
mov
push
scas
out
push
shrl
std
pop
dec
push
jne
sub
sbb
fdivp
out
push
cmpsl
dec
bound
mov
inc
inc
add
cmp
mov
adc
pushf
das
popa
inc
aas
xor
fiaddl
pusha
dec
or
push
cmp
xlat
and
outsb
xor
mov
push
jle
leave
daa
out
imul
push
xchg
xchg
dec
mov
loop
vaddsubpd
rolb
hlt
or
and
outsl
add
add
std
or
xchg
and
jecxz
adc
push
cmp
cs
test
cmp
outsb
jl
and
jecxz
dec
jns
mov
pop
mov
dec
dec
loopne,pn
sub
jb
jmp
call
rcll
out
or
loopne
gs
inc
popf
popa
jnp
loope
imul
in
mov
ja
sbb
adc
dec
push
dec
mov
sbb
cwtl
sub
pop
sbb
les
dec
xor
lret
or
push
dec
in
or
mov
dec
cmp
fsubr
lods
add
leave
pop
mov
mov
sbb
mov
push
mov
jno
xchg
fucomp
test
sarl
stos
and
es
inc
dec
dec
dec
mov
sbb
in
lret
jp
loop
cmp
into
repnz
cmp
sub
rclb
pop
xchg
mov
lcall
cmp
fsubrs
push
dec
xor
fldt
adc
xchg
ja
fs
pop
push
aas
js
scas
mov
adc
jmp
jecxz
gs
or
ret
xchg
adc
pop
fucomi
mov
or
pop
dec
xchg
pusha
call
dec
or
das
jge
ret
push
push
dec
je
outsb
mov
pop
mov
sub
into
sub
xchg
lahf
aaa
lret
imul
dec
sub
push
cmp
jmp
inc
xchg
push
repnz
cwtl
dec
lock
cmp
or
cmp
cmp
push
dec
dec
aas
xor
mov
push
inc
mov
pop
das
int
rol
stos
cmc
xor
inc
scas
into
add
imul
mov
cmpsb
mov
mov
jmp
cmp
xlat
adc
pop
dec
out
adc
jbe
insb
jg
push
mov
mov
xchg
inc
adc
cmc
jmp
push
test
pop
and
outsb
shl
xchg
inc
or
adc
pusha
imul
ror
pop
cmp
mov
sbb
push
dec
pop
outsb
mov
xchg
ret
push
repnz
repz
adc
mov
inc
jbe
scas
sti
adc
push
scas
push
dec
add
xchg
jmp
in
lock
pop
add
dec
mov
in
dec
inc
aas
gs
js
inc
mov
mov
int3
icebp
pop
and
mov
inc
mov
adc
pop
es
addl
push
cmp
sahf
push
push
push
xchg
fdivrl
ret
adc
inc
dec
dec
jnp
xchg
movsl
push
jp
dec
pop
mov
cmc
pop
sub
aad
ror
dec
fldcw
cld
cmp
dec
add
push
inc
xlat
test
mov
xchg
imul
loop
sbb
push
push
inc
jns
mov
pop
lret
pop
push
pop
popf
add
push
addb
psraw
mov
out
test
mov
add
iret
test
addr16
inc
and
sahf
add
lahf
out
sub
mov
mov
pop
mov
xchg
mov
aad
pop
pop
es
dec
cmp
dec
popa
pop
outsl
or
xor
cmp
aas
or
dec
popl
lods
jmp
gs
clc
dec
dec
movsl
and
lods
mov
xor
pop
stc
test
sahf
fninit
int3
dec
and
lcall
jb
inc
fiadds
push
push
mov
inc
pop
mov
ret
add
dec
or
xor
mov
arpl
lahf
pop
gs
nop
dec
xchg
dec
ficompl
popa
rorl
or
arpl
adc
and
jo
push
jp
dec
lock
mov
push
mov
cmc
jg
inc
lock
leave
mov
pop
fsubl
mov
lahf
shrb
adc
int
xlat
sub
xor
dec
lahf
pop
addr16
xchg
jle
outsl
outsb
pop
push
inc
inc
dec
mov
mov
xchg
pop
stos
dec
mov
dec
data16
shrb
call
dec
or
dec
xchg
in
outsl
sub
lea
xchg
scas
jecxz
push
add
in
lods
cs
mov
or
insb
pop
stos
push
inc
pushf
stc
ljmp
imul
sub
pop
shl
push
dec
or
insl
jno
notl
stc
adc
dec
sbbb
sub
ja
test
dec
hlt
cmp
sub
dec
pop
jp
push
mov
mov
imul
daa
mov
push
jno
jmp
test
js
dec
std
imul
inc
inc
scas
mov
sbb
dec
lret
mov
mov
bound
push
xor
lods
cmpsb
mov
cs
imul
shlb
mov
pop
insb
push
sbb
add
dec
dec
clc
ret
bnd
mov
mov
in
in
sbb
push
gs
sub
add
dec
pop
aam
mov
hlt
push
mov
mov
lcall
lds
aam
sbb
dec
add
lret
adc
push
fmull
push
les
scas
dec
leave
or
jmp
lcall
ss
sub
adc
jns
addr16
dec
movsl
lds
dec
test
sub
dec
scas
push
and
xchg
sahf
push
or
dec
cmp
rcll
test
scas
shr
or
cmp
push
or
imul
push
cmpsl
ror
movsl
ret
push
adc
mov
jge
and
push
cmp
or
ds
mov
leave
push
stos
dec
sub
imul
pusha
sub
pop
scas
push
xor
call
push
cmp
xor
sbb
dec
cmc
jnp
dec
xchg
or
icebp
hlt
dec
lahf
jl
fiaddl
dec
mov
dec
and
jle
sub
out
aam
lods
dec
lock
in
lahf
cmc
cwtl
xchg
dec
xor
and
xchg
outsb
out
sbb
mov
adcb
scas
repnz
jg
sbb
imul
movsb
cmpsb
sbb
arpl
push
push
fstps
in
mov
cmpsl
cmp
dec
mov
xor
int
orb
and
mov
das
fstl
sbb
lock
lea
dec
inc
jp
dec
aaa
sti
push
dec
jns
cld
out
std
jge
cwtl
jmp
push
movsb
pop
shlb
fdivs
cmp
loopne
dec
subb
mov
sbb
jo
xchg
in
imul
dec
cmpb
dec
test
inc
jnp
mov
das
push
adc
mov
push
imul
dec
adcl
and
add
dec
out
cmp
aas
or
popf
push
push
jo
push
imul
cld
add
ret
adc
xchg
or
xor
jns
scas
movsl
pop
dec
push
out
mov
jmp
sbbb
mov
mov
popf
jbe
insl
inc
sub
test
out
dec
adc
in
outsb
enter
push
and
add
jle
inc
scas
jns
lock
push
mov
lahf
pushf
sbb
cmc
aad
std
daa
es
mov
push
xchg
mov
pop
sbb
cmpsl
push
dec
cmpsb
andb
clc
dec
dec
addr16
fiadds
sarb
dec
xor
ljmp
in
dec
inc
lods
fwait
rcr
jns
xchg
shrb
fisttpl
int3
lods
xor
and
or
sbb
mov
jns
xchg
or
les
jbe
dec
and
arpl
xchg
push
pop
sub
cmp
bound
out
jg
dec
shll
dec
dec
adc
jo
enter
pop
sub
pushf
dec
in
pop
in
mov
lret
aaa
pop
cmp
mov
xchg
mov
and
mov
inc
pop
movsl
sbb
cmp
dec
dec
xorl
jbe
dec
xor
inc
mov
adc
jle
or
dec
mov
fs
xchg
dec
loope
inc
loop
mov
mov
xchg
into
dec
pop
outsl
push
cmp
dec
sub
jnp
xchg
dec
lahf
jecxz
adc
fstl
lods
gs
jl
in
pop
inc
sub
cmp
dec
pop
xchg
loopne
iret
sbb
pop
add
daa
data16
dec
pop
push
mov
push
add
call
dec
cmp
pop
jnp
sbb
das
lods
cmp
mov
ret
xchg
mov
gs
mov
mov
or
mov
dec
push
int3
add
fbstp
add
pop
mov
dec
imul
test
insb
xlat
imul
push
lods
sti
sub
rcrl
fidivrl
and
push
fimuls
stos
outsb
jle
inc
push
imul
sbb
out
aad
mov
dec
sub
lods
and
push
add
test
rcrb
aam
dec
data16
pop
scas
mov
rorb
out
testl
dec
adc
pop
ja
test
dec
push
insl
mov
int3
imul
aaa
in
or
mov
test
dec
push
cld
inc
dec
mov
notb
call
jne
mov
pop
push
out
daa
xchg
jne
les
mov
popf
dec
mov
cwtl
sbb
pop
lret
f2xm1
lea
and
call
add
adc
push
movsl
in
sub
pop
mov
testb
sub
cmpsl
cmp
pop
pop
jb
insl
stos
pop
xchg
dec
dec
faddp
stos
dec
pushf
mov
add
dec
roll
lret
adc
inc
inc
or
xchg
pop
jmp
mov
ret
mov
mov
ret
dec
pop
roll
jno
pop
out
push
leave
shrl
into
dec
xlat
pop
xchg
test
test
mov
imul
orb
fwait
stos
mov
mov
xchg
fs
pop
xorl
sub
rcrb
scas
icebp
xor
jno
into
pop
xchg
mov
gs
dec
xchg
inc
push
push
int
push
dec
adc
mov
jge
xchg
mov
imul
mov
cwtl
sub
inc
dec
lock
shll
cmc
dec
push
add
xchg
es
mov
push
stos
inc
stc
mov
push
je
lea
les
gs
scas
rorl
subl
les
sub
daa
loop
fisttps
cmc
fsubl
inc
and
adc
popa
dec
jnp
dec
cmp
pop
mov
dec
daa
imul
sub
cmp
and
xchg
cli
xchg
push
inc
sbb
in
imul
xchg
cld
and
cmpb
mov
push
mov
loope
cmpsl
pop
cmc
pop
iret
cmpsb
cltd
stos
jg
std
push
jl
iret
push
sub
sbb
xor
fmull
push
fs
mov
cli
sbb
ffree
enter
and
cmp
stos
inc
test
xchg
aad
lahf
aaa
adc
sti
lret
sub
jl
sub
add
je
out
pop
out
scas
andl
jge
inc
lret
jle
cmc
dec
aas
push
mov
push
push
scas
imul
mov
in
xchg
inc
lds
stc
in
in
and
xor
test
push
pop
int3
sbb
nop
leave
xor
pop
jecxz
push
mov
test
xchg
inc
mov
mov
sub
imull
cli
shll
sbb
rcl
mov
mov
cltd
enter
pcmpeqw
mov
dec
adc
dec
aam
xor
dec
hlt
mov
xchg
sub
std
in
gs
push
mov
dec
stc
daa
adc
ja
popa
dec
mov
das
inc
adc
test
push
sar
adcl
push
xlat
add
xor
loopne
add
stos
loop
jle
aam
push
dec
inc
out
mov
movl
into
loop
jbe
rorb
leave
cmp
out
mov
or
fidivl
dec
dec
shll
mov
push
dec
cmp
frstor
dec
imul
jl
mov
pop
inc
lds
scas
push
aad
imul
dec
mov
addr16
sbbl
inc
lret
insl
mov
push
push
es
sbb
cwtl
or
insb
push
cs
cmp
mov
add
dec
inc
jp
fisttpl
jl
sbb
inc
stos
dec
out
fsubs
mov
inc
xlat
add
cmpsl
loopne
imul
inc
jmp
mov
push
xchg
pop
jne
jl
dec
xchg
repz
sub
sub
push
and
xor
loop
jnp
test
sbb
mov
lds
sbb
into
jns
mov
cmp
mov
sbbl
mov
jl
in
inc
mov
out
dec
inc
xchg
jle
dec
sub
inc
pop
jo
mov
dec
cmp
jne
stos
sbb
popf
pop
adc
xor
imul
pop
test
rsqrtps
mov
in
add
into
mov
lds
cmp
ficoml
mov
jbe
add
nop
repz
dec
mov
jb
je
clc
xchg
dec
jg
int3
fnstenv
push
fstl
aad
push
int
mov
test
fstps
jmp
lret
pusha
and
and
mov
scas
or
and
int3
repz
add
xchg
xchg
cld
inc
dec
and
jae
push
insl
int3
into
iret
cmp
pop
mov
test
imul
testl
cmpsl
adc
xor
sbb
or
test
pusha
rorl
pop
xchg
push
xorb
dec
xchg
pop
hlt
fneni(8087
test
sbb
dec
div
dec
mov
faddl
push
sub
inc
mov
push
adc
pop
dec
popa
mov
fildl
xchg
pop
orb
inc
repnz
or
shlb
lock
dec
add
or
pop
das
push
xorb
loope
xor
mov
mov
jo,pt
dec
ficomps
mov
dec
push
mov
cwtl
aam
mov
fs
mov
fnstenv
and
dec
push
push
sub
mov
dec
dec
imul
cmpsl
push
lea
sbb
out
inc
or
scas
insl
inc
adc
mov
xchg
xchg
pop
xor
dec
adc
rcr
xchg
sahf
fucomi
dec
repnz
in
mov
adc
cmp
fimuls
jnp
dec
ljmp
pop
mov
add
cmp
xchg
ja
xor
inc
pop
xchg
cmp
aaa
rol
push
dec
mov
jo
xchg
mov
lock
mov
jl
xor
dec
gs
push
stos
pop
dec
sahf
adc
mov
mov
fstps
inc
into
test
in
adc
push
xor
inc
push
jbe
inc
subl
adc
movsl
mov
or
add
dec
dec
mov
and
inc
inc
add
xchg
push
sub
in
mov
push
push
sti
dec
in
mov
and
sub
inc
mov
jae
je
mov
pop
out
adc
dec
jl
addl
mov
push
aas
jnp
out
movl
int
sub
cmpl
lods
add
mov
xor
fdivr
dec
push
push
mov
xor
add
pop
sbb
xchg
inc
dec
inc
or
mov
xchg
lods
inc
out
negl
push
sub
inc
in
xchg
push
arpl
data16
mov
mov
cwtl
imul
cmc
enter
insb
and
dec
scas
rorl
mov
aam
testl
xor
push
mov
inc
pop
cmp
ljmp
popa
out
inc
scas
xchg
test
and
xor
iret
pop
jae
inc
lods
repnz
and
dec
pop
inc
ret
pop
std
dec
dec
push
stc
xchg
pop
jne
cmp
aaa
loop
movsl
ret
rorb
pop
inc
sahf
or
andl
js
jmp
call
jecxz
arpl
sti
push
cs
cmp
in
jl
lret
inc
jle
lret
scas
sub
dec
mov
loopne
in
dec
cwtl
xabort
xchg
daa
lods
stos
sub
insl
rcl
fists
and
hlt
xchg
add
loope
dec
bnd
dec
jno
out
cmp
xor
add
inc
aam
dec
lret
dec
push
enter
lea
out
cmp
cmp
pushf
xor
push
sbb
imul
dec
jns
enter
mov
and
mov
sub
jne
sbb
enter
inc
fsts
stos
dec
or
lret
in
imul
and
dec
xchg
sbb
sahf
subb
dec
fwait
dec
adc
dec
les
mov
pop
in
inc
lret
inc
dec
add
jle
mov
dec
push
dec
dec
pop
push
inc
pop
cwtl
lcall
mov
int
dec
imul
adc
lods
mov
pop
mov
fsubrp
clc
pop
aad
push
cmp
sub
andb
dec
xchg
es
lahf
xchg
aam
out
into
fxch
dec
out
and
jmp
jae
lods
jne
push
xchg
pop
repz
xchg
mov
test
xor
jmp
lret
or
pop
and
sbb
or
jnp
stos
mov
dec
adc
negb
sbb
dec
sahf
or
add
jae
dec
or
stos
push
nop
inc
fwait
outsb
xchg
cli
pop
neg
dec
cmpsl
rcrl
pop
out
dec
imul
pusha
or
pop
xor
inc
sub
nop
dec
cmp
jle
xlat
in
imul
add
cmp
push
push
pop
mov
fcoms
decb
sub
out
jns
cmpsb
xlat
enter
pop
clc
outsb
inc
pushf
scas
inc
mov
push
jno
add
xor
adc
shrb
sbb
mov
xlat
pop
aam
dec
sub
xchg
cltd
push
dec
jne
xchg
sub
ds
jl
popf
sbb
fdivrp
imul
ffree
push
mov
lahf
lock
dec
mov
aaa
dec
sub
dec
xchg
jge
std
jle
pop
mov
push
popf
lea
mov
fidivl
sub
iret
mov
adc
js
int3
sti
lret
ret
lods
repz
sahf
imul
inc
fsubl
pop
push
lods
adc
xchg
mov
mov
stc
push
clc
mov
pop
sub
jmp
in
pop
cmp
leave
or
cmpsb
push
dec
inc
or
mov
dec
sti
lods
pop
cld
push
add
dec
adc
xor
mov
or
loope
jns
fnstcw
mov
dec
mov
test
iret
dec
test
mov
movaps
test
rcrb
inc
fsubr
dec
test
lds
cli
push
pop
dec
inc
enter
and
popf
dec
add
aad
mov
out
dec
mov
push
fs
sti
call
dec
sub
push
add
je
in
pop
sub
xor
dec
push
and
cld
xlat
neg
sub
movsb
jno
test
push
push
aaa
insl
lret
in
dec
dec
and
add
sub
mov
dec
in
adc
fisttpl
in
divl
or
dec
mov
jmp
cmc
inc
pop
rcrl
adc
push
xchg
jmp
pop
sub
push
lret
dec
out
arpl
mov
fistl
mov
orb
cmpsb
rcrl
lahf
rclb
inc
xor
jo
jnp
push
cmp
pop
mov
dec
fcomps
mov
jmp
aaa
jae
adc
dec
outsb
popa
hlt
addr16
pop
push
dec
lret
xor
adcl
rorl
pop
xchg
enter
sub
lcall
push
xchg
int3
aad
loop
rolb
dec
sarb
jo
pop
or
push
dec
dec
add
push
xchg
popf
icebp
fstl
shrb
push
std
ret
in
jl
cli
rolb
sub
scas
push
add
add
loopne
cmp
jecxz
lahf
sbb
cmpsl
leave
dec
lret
push
xchg
inc
mov
icebp
push
sarb
push
dec
mov
loopne
popf
xchg
mov
dec
inc
ret
sbb
imul
jp
jle
imul
xchg
mov
mov
mov
sub
dec
stc
aas
jmp
icebp
sbb
add
loop
mov
inc
sub
jmp
mov
rorb
dec
fmul
xor
subb
push
insl
insb
sbb
js
dec
in
and
sub
test
dec
retw
shr
nop
popa
and
les
fdivs
push
imul
mov
gs
je
testb
pop
pop
imul
jp
pop
test
xchg
lcall
cs
fcomps
in
stos
xor
shr
ja
lock
push
inc
pop
xor
jmp
data16
lds
and
je
leave
adc
fs
xor
nop
sbb
call
into
jae
sub
call
push
inc
jb
sub
add
pop
nop
ret
inc
push
faddl
jmp
lret
mov
xor
call
out
std
test
dec
push
pop
cmp
movsl
inc
rol
imul
mov
lret
jle
sub
mov
inc
loope
dec
jae
mov
dec
push
and
dec
stos
mov
lret
sub
idiv
dec
and
inc
lret
orb
add
and
aam
pop
fstl
lahf
dec
mov
ja
dec
ficoml
pop
sub
and
jno
popa
rclb
mov
aas
xchg
fs
or
cmc
adc
jnp
and
aaa
repz
mov
jbe
outsb
je
cmovno
dec
imul
push
inc
sar
dec
cmp
pop
add
dec
jg
stc
repz
jge
cmp
sub
push
xchg
xor
push
mov
mov
test
lock
cli
pop
or
dec
mov
pop
and
sub
dec
push
loopne
push
aaa
je
rep
push
addr16
lret
jge
jmp
lret
xchg
insb
mov
jo
push
mov
shll
arpl
sub
lock
dec
push
int3
negl
cmp
adc
sahf
inc
popa
stc
xor
jl
and
fcomi
inc
dec
jnp
idiv
push
xchg
stos
gs
mov
mov
adcl
cmpsl
sub
push
mov
cmp
push
push
add
jbe
scas
stos
inc
out
mov
das
xchg
xchg
mov
sbb
mov
int3
xor
dec
lret
test
jae
adc
std
sub
push
mov
pop
inc
push
test
aaa
iret
ds
call
les
adc
cmpsl
xor
dec
pop
cmp
in
rorb
cli
dec
push
addr16
and
lret
add
add
push
jmp
mov
lahf
push
pop
sti
sub
or
arpl
add
dec
mov
test
or
xlat
push
ficoms
mov
dec
jl
gs
dec
mov
xchg
xchg
inc
dec
sti
stos
stc
push
je
fildl
int
inc
stos
dec
mov
jg
jb
repnz
stc
mov
cmc
jmp
cs
test
sub
sub
arpl
jo
inc
pop
mov
jp
dec
pop
outsl
mov
in
out
sbb
inc
cwtl
ret
add
add
out
insb
jo
xchg
cmpsb
pop
dec
or
fsubl
pushf
je
ss
fmulp
xchg
lret
dec
cmp
daa
adc
fisttpl
popa
add
addr16
out
jne
test
lods
orb
dec
add
and
in
data16
imul
and
lods
jle
ret
dec
mov
mov
mov
xchg
jo
mov
rorb
dec
add
or
dec
leave
outsl
ror
mov
das
cmpsb
mov
fiaddl
jecxz
testl
popf
or
dec
sbb
scas
dec
js
pop
mov
lods
adc
dec
push
lock
xor
repnz
or
sub
loopne
push
add
xchg
and
lret
mov
movsb
cld
add
adc
mov
mov
jl
out
cmp
popa
xchg
xor
nop
mov
cmp
dec
in
mov
xchg
out
out
out
dec
imul
lret
sub
dec
push
dec
insb
or
mov
push
dec
test
stos
push
dec
push
xor
mov
dec
rclb
mov
xchg
sbb
call
aas
dec
pop
dec
jl
xchg
add
clc
in
xchg
jmp
call
dec
mov
test
mov
lcall
lret
stc
inc
and
adc
push
popa
push
mov
inc
cwtl
scas
push
aad
pop
sub
hlt
iret
lds
popf
sbbb
hlt
push
dec
dec
dec
int3
daa
test
push
pop
fs
enter
das
aas
cmp
push
jne
dec
dec
pop
xor
mov
xchg
test
push
or
dec
dec
aas
lret
dec
pop
push
cltd
and
dec
test
mov
xor
push
loopne
imul
test
mov
mov
cmp
or
int3
cmp
dec
jmp
sub
mov
add
in
mov
cltd
xor
test
dec
imul
and
fsubrl
mov
lcall
add
addr16
dec
jno
sbb
push
cmpsb
and
push
mov
xchg
pop
xchg
adc
push
and
outsb
sti
test
stc
xchg
outsb
cwtl
in
xchg
jno
add
subb
sahf
cmp
lcall
mov
sub
jg
dec
xchg
mov
dec
rcl
enter
test
dec
aas
and
xlat
bndldx
sbb
push
cmp
pop
xor
mov
jge
mov
imul
out
push
sub
pop
and
js
mov
dec
adc
icebp
std
or
roll
dec
test
adc
dec
data16
add
sbbb
jge
lods
xor
dec
repz
fsubr
daa
mov
push
adc
mov
mov
dec
mov
mov
mov
xchg
xor
jne
cmp
inc
mov
or
pop
dec
push
mov
call
js
and
dec
cld
mov
inc
ret
in
xor
mov
sub
jns
dec
popa
out
pop
insb
push
insl
cmpsl
cltd
sti
std
daa
pop
cmpsb
out
dec
iret
leave
add
and
mov
mov
push
pushf
dec
pop
test
adc
xchg
mov
popf
xorb
enter
sub
cmp
addr16
aaa
xor
std
inc
lahf
mov
fdivr
inc
xchg
stos
into
aad
sub
sbb
fs
je
out
mov
dec
push
cmpsl
leave
xor
dec
adcb
dec
fisubrs
lahf
mov
push
arpl
imul
lods
imul
sbb
stc
and
fldt
into
xchg
sbb
daa
imul
cmpl
sbb
movb
into
out
and
mov
sub
ficomps
mov
sti
pop
dec
ret
aad
mov
and
rcr
pop
and
dec
xor
jo
fstp
dec
mov
and
add
sub
dec
lret
adc
dec
adc
loop
inc
pushf
es
test
fwait
das
mov
and
push
sub
popf
dec
and
jle
leave
out
ret
push
shll
xor
pop
shl
dec
jbe
loop
dec
sar
dec
push
les
jnp
jmp
imulb
stos
outsl
dec
and
test
cmpsb
fstpl
mov
jecxz
scas
adc
pop
mov
push
fucomi
or
and
and
push
push
push
scas
orl
mov
xchg
loopne
imul
pop
daa
pop
in
dec
push
sarl
imul
aas
fistps
loope
leave
ret
dec
dec
mov
sub
fimuls
dec
jp
add
dec
mov
xor
out
inc
inc
cld
int3
dec
inc
dec
dec
xor
and
pop
dec
imul
ret
inc
jp
dec
sub
xchg
mov
out
shll
in
dec
leave
jbe
sub
jb
sbb
mov
jmp
adc
clc
movsl
pop
in
mov
dec
push
shlb
jns
and
pop
xchg
dec
dec
movsb
cmpsb
xchg
dec
mov
cmp
xchg
cmp
push
sbbl
mov
pop
out
push
dec
xor
lcall
inc
cli
fadds
mov
adc
mov
dec
add
pop
in
or
adc
inc
out
lds
xchg
mov
mov
mov
ja
dec
dec
jns
and
jne
lds
call
dec
outsl
jmp
inc
push
xchg
nop
jne
add
pop
rcl
bound
stos
dec
cmp
jl
mov
inc
and
xor
stos
xor
push
bound
lea
cld
leave
xchg
inc
xchg
outsl
pop
repnz
cs
inc
aam
mov
dec
data16
inc
adc
jge
iret
dec
adc
stos
hlt
or
shl
fsub
shrl
cmp
mov
dec
cltd
sub
pop
add
cmpsb
mov
pop
xchg
movsl
mov
outsl
out
hlt
jmp
rcrl
sub
rclb
jle
add
inc
clc
push
dec
in
mov
outsb
dec
xchg
push
jge
mov
and
push
push
jg
lods
rorl
mov
xchg
mov
repnz
loope
cmp
pop
cmp
xlat
mov
jg
mov
and
pop
mov
mov
sbb
repz
xchg
int
incl
ds
cld
adc
sbb
imul
mov
mov
dec
inc
jge
lock
jmp
mov
into
dec
mov
push
ret
in
dec
fbld
inc
dec
mov
shrl
sub
adc
cmp
je
ficomps
push
jmp
out
mov
daa
adc
push
sbb
jnp
mov
or
inc
shrb
lcall
sbbb
mov
daa
mov
stc
nop
jbe
push
stc
xchg
push
fidivs
jmp
ret
stc
xor
outsl
test
jns
test
sub
in
es
cltd
fwait
dec
inc
test
fmuls
iret
pusha
dec
push
sub
sahf
addps
inc
test
fistpll
xor
lret
dec
test
mov
cmpsb
lahf
dec
enter
dec
and
add
mov
dec
adc
inc
fadd
mov
sbbl
jo
aad
dec
xchg
ds
lcall
fisttps
ja
lock
clc
adc
rcr
out
dec
aas
idivl
jp
sbb
lods
dec
gs
data16
dec
add
xchg
pop
xchg
push
lahf
imul
push
mov
xor
jle
sbb
ret
jb
cli
stos
inc
push
cvtpi2ps
xchg
add
out
push
inc
les
sbb
cmc
add
dec
arpl
rolb
pop
in
adc
rorb
cmp
dec
sarl
and
add
adc
cmp
dec
push
rorl
mov
mov
dec
into
dec
lret
idivb
xchg
aad
push
popa
inc
mov
pop
test
orl
sbb
xlat
dec
xor
stos
and
ficomps
mov
dec
or
jl
pop
out
loop
popf
sub
sub
call
rep
dec
add
add
cmpsb
jmp
daa
mov
dec
loop
dec
adcb
or
inc
xlat
hlt
inc
dec
in
aam
scas
stos
clc
push
mov
add
insb
loopne
movb
sarb
push
push
cmp
pop
dec
imul
out
popf
in
mov
push
mov
ret
inc
sub
cmp
cmp
push
jp
lret
dec
out
pop
mov
mov
jl
out
ja
cs
dec
mov
xor
dec
fists
imul
push
inc
dec
adc
push
xchg
dec
xor
daa
leave
dec
or
xor
aam
sbbb
xchg
idivb
dec
mov
test
hlt
dec
ror
sbb
lret
dec
sbb
ret
out
dec
push
pop
pushl
sub
pop
in
sub
push
cmp
inc
and
das
mov
pop
mov
fwait
ret
sbb
push
ljmp
jl
xor
sub
adc
jno
ja
fistps
in
sub
adc
jno
xchg
vcvtpd2dqy
cld
push
pusha
jbe
es
imul
xor
nop
add
or
into
add
dec
cmp
jne
sub
ficomps
pop
movsb
mov
pop
daa
jg
jmp
sbbl
xchg
or
mov
bound
lret
xchg
dec
add
add
cwtl
testb
dec
aam
dec
mov
xor
rclb
dec
cmp
jp
or
pop
fwait
adc
bound
fdivl
pop
dec
add
test
pop
scas
iret
mov
push
push
mov
mov
fstp
je
and
pop
sbb
adc
adc
icebp
jmp
xchg
inc
call
pop
sub
add
inc
and
pop
xchg
lods
sbb
rorb
inc
mov
mov
andb
repnz
cld
sbb
inc
cmp
cmp
sbb
dec
and
push
push
pop
dec
push
hlt
lock
or
xchg
jmp
push
bnd
xchg
adcl
dec
dec
jg
push
push
enter
pop
fstl
lock
dec
or
rolb
push
push
dec
jle
pop
ja
inc
dec
xorb
out
stc
lea
loop
icebp
xor
rorl
pushw
sub
mov
adc
test
push
sub
je
xor
dec
nop
jo
fdivl
jns
and
adc
sti
pop
jnp
xor
push
cmpb
sub
push
fsubrs
inc
fnstcw
sbb
and
inc
lcall
dec
shrb
xchg
pushw
pop
cld
repnz
movsl
ret
stos
in
xor
jne
data16
lods
jns
gs
je
lods
lea
push
cltd
cmp
mov
cli
ss
or
inc
fsubrs
arpl
mov
push
aad
cmpsl
fs
push
dec
sub
fsubrl
pop
enter
and
les
xchg
mov
in
sbb
loop
mov
push
adc
dec
sti
movsl
dec
add
push
ret
mov
jmp
sbb
imul
mov
adc
subb
xchg
daa
and
popa
fisubs
xchg
push
xor
scas
gs
inc
dec
pop
and
lods
imul
push
imul
jae
push
inc
sbb
js
loop
pusha
outsl
lret
mov
pop
or
stos
sbb
ja
xlat
rcrl
scas
inc
mov
iret
arpl
pop
adc
popf
push
and
dec
ffreep
push
out
jmp
rorl
push
fistpll
stc
jo
mov
dec
std
pop
dec
das
mov
dec
pop
dec
fucom
jg
and
mov
mov
mov
or
inc
fldl
cltd
test
repz
sub
jbe
in
aaa
dec
dec
enter
or
lret
mov
pop
dec
sub
cli
or
dec
or
lods
xchg
dec
pop
adc
loop
push
pop
rorb
adc
or
push
arpl
dec
pop
dec
int
pop
and
xchg
sbb
jecxz
sbb
dec
and
sahf
daa
and
jl
jle
inc
cltd
pop
gs
imul
dec
fsub
scas
out
fcmovb
add
cmp
inc
into
mov
or
test
popf
adc
cmp
push
inc
cmp
aas
aaa
add
jg
add
sub
inc
mov
mov
mov
popf
push
push
dec
int3
insb
jp
xor
add
fists
inc
stos
push
out
mov
cmc
add
stos
insl
sub
and
loopne
xor
push
lds
stos
movsl
dec
pusha
sbb
in
repz
pop
xorb
adc
sbb
push
jmp
dec
in
mov
mov
mov
loop
jle
dec
add
pop
fldcw
dec
icebp
data16
nop
daa
pop
push
inc
or
incb
lcall
mov
jae
inc
and
scas
dec
das
aam
push
or
push
rol
xchg
into
dec
outsl
push
lods
lret
sub
dec
mov
pop
ss
xchg
jmp
fs
jmp
dec
scas
jnp
mov
dec
sub
lods
pop
inc
call
into
mov
shl
dec
xchg
and
jne
add
jnp
inc
pushf
or
in
and
mov
loopne
lret
sub
and
imul
mov
push
cwtl
dec
push
lret
movsl
fildl
xchg
cmpsb
dec
push
sub
cmp
xchg
sbb
mov
dec
test
jae
outsb
dec
dec
rorl
imul
divl
jae
jg
shll
or
stos
push
add
repz
icebp
mov
or
xchg
mov
stos
insl
push
hlt
inc
data16
ficompl
test
dec
sub
aad
add
popf
and
push
and
and
imul
push
xor
pop
dec
shlb
push
pusha
fildl
mov
cmp
inc
dec
int
push
mov
dec
dec
orb
xor
insb
popa
imul
bound
in
cmp
push
aad
jb
cmp
test
pop
sti
xor
push
push
xchg
mov
and
inc
cmp
dec
int
ljmp
sbb
imul
push
out
mov
mov
pop
xor
lock
cmc
lods
ja
sub
lahf
loope
push
jge
sahf
mov
inc
and
movsb
add
fnsave
inc
icebp
inc
xlat
dec
mov
sub
jae
jo
lock
loop
jno
ja
dec
in
subl
test
cmpsb
aad
fmul
es
or
adc
and
jnp
dec
pop
stc
push
pop
subl
adcl
dec
push
fstps
adc
and
push
inc
jge
inc
mov
dec
sbb
pop
cld
adc
ret
arpl
or
push
jns
and
pop
push
pop
js
mov
ficoml
mov
in
sub
mov
leave
or
pop
inc
shrb
dec
sti
sahf
repnz
enter
pop
and
xor
addr16
lock
or
js
pop
lahf
xchg
fmuls
sti
scas
xchg
cmpsl
aad
imul
add
xchg
lret
pop
add
cmp
push
pop
sbb
ficomps
cmp
repz
bound
negb
dec
dec
mov
scas
dec
fiadds
pop
stc
dec
lret
mov
fildl
int
xchg
sbb
jl
stos
pushf
in
push
adc
inc
mov
outsb
dec
xor
and
rol
bound
add
mov
loop
pop
push
sahf
pop
dec
xor
or
push
insb
lods
sub
dec
mov
pop
mov
mov
dec
sub
insb
cmp
xchg
mov
pushf
out
in
rcrb
dec
push
mov
adc
sti
andl
mov
push
test
jno
orl
push
mov
dec
arpl
xor
jl
push
xchg
jne
push
lods
jo
mov
inc
clc
imul
push
fcmovbe
jmp
ret
and
pushf
dec
dec
xchg
imul
dec
aaa
dec
sub
or
mov
pusha
subl
icebp
push
cmp
lds
fmuls
scas
cld
cltd
dec
mov
dec
fucom
fsubrl
dec
les
outsl
xchg
xchg
push
mov
inc
adc
inc
cmc
pop
mov
inc
jmp
mov
pop
lret
imul
repz
add
jp
test
aas
dec
rorl
fstps
push
dec
xchg
out
inc
int3
pop
sbb
popf
xor
push
add
sub
andps
dec
popa
add
leave
test
iret
pop
inc
sbb
cmc
push
js
sbb
lahf
push
sub
fbstp
or
int3
push
jecxz
dec
add
ss
sti
or
dec
pop
xor
mov
or
imul
mov
jae
das
sbb
push
out
fmuls
jmp
ljmp
xor
xor
pusha
jmp
ja
enter
push
popf
dec
scas
cmc
or
popl
dec
jmp
pop
inc
lds
push
jae
sbb
xor
cmpb
pop
mov
adc
add
nop
dec
jmp
fnstsw
mov
adc
test
add
push
sub
imul
int3
dec
pop
mov
inc
push
dec
test
xchg
aam
lret
shlb
and
fistpll
push
bound
jg
mov
pop
mov
testb
add
sbb
or
cmp
push
dec
rorb
mov
jmp
in
negl
rorl
arpl
add
and
pusha
or
in
sub
mov
pop
cmp
lods
cwtl
jl
stos
clc
dec
lcall
gs
xchg
push
mov
jno
fisubrs
push
rorb
mov
sub
jl
aam
rorl
and
mov
fcomps
cltd
outsb
xlat
imul
mov
cmpb
rolb
stos
xlat
insl
jbe
sbb
add
jg
and
pop
dec
and
mov
gs
xchg
or
cmp
push
bound
fadd
sub
sbb
dec
rolb
cwtl
xor
mov
pop
sub
pop
mov
or
test
pop
jge
ds
dec
cld
push
movsb
and
fimuls
icebp
jb
stc
roll
ret
lcall
jae
push
mov
pop
popa
sahf
cmp
and
dec
mov
inc
incl
push
stos
dec
jnp
lock
push
mov
adc
mov
loopne
cmpl
or
or
add
mov
jo
mov
push
adc
inc
sbb
mov
xchg
mov
ljmp
inc
fnstcw
mov
mov
sub
inc
pop
ljmp
test
std
push
or
xor
mov
pop
sub
xor
push
or
mov
xor
or
jne
mov
dec
cld
jg
sbb
lahf
addr16
xchg
imul
fs
mov
push
jmp
pop
dec
es
add
je
pop
pushf
pop
mov
clc
dec
cmpsl
dec
ret
push
and
push
stc
sub
mov
test
inc
mov
jb
gs
data16
dec
mov
lods
std
or
xchg
stc
jmp
pop
lock
dec
dec
sbb
out
mov
xor
inc
mov
dec
push
or
push
call
dec
lcall
inc
bound
jle
outsl
dec
pop
lret
mov
mov
xchg
lock
sbb
push
push
xchg
dec
and
sub
imul
fdivl
cmp
sahf
pushf
xchg
jbe
mov
cli
dec
mov
sbb
das
mov
outsb
dec
inc
sbb
xlat
test
pop
mov
sub
dec
push
sbb
sbb
pop
mov
xor
jnp
mov
pop
xlat
xchg
pop
pop
ret
dec
pop
mov
sub
dec
sbb
js
ret
fsubl
cmpsb
inc
dec
dec
dec
xchg
xor
jecxz
in
dec
fnsave
aad
cs
ds
jmp
jl
pop
in
inc
into
test
or
jmp
and
ljmp
cmpsb
daa
dec
fs
insl
mov
and
mov
lods
aad
popf
push
fisubrs
jge
stc
daa
ret
imul
add
repz
jp
mov
sti
sub
ljmp
fs
test
xor
imul
fwait
jnp
clc
dec
push
jle
stos
mov
jae
out
or
push
jmp
sbb
dec
jp
iret
aas
push
sub
imul
in
movsl
xchg
sub
mov
and
pop
mov
jns
mov
in
enter
aaa
jmp
push
xor
icebp
xor
ret
imul
pop
jge
js
jmp
imul
dec
lret
jge
xor
dec
ss
sub
dec
jae
push
divl
push
cld
fnsave
xchg
pop
ss
dec
cli
adc
scas
outsb
dec
dec
dec
mull
mov
jbe
rcll
arpl
pop
cmc
pusha
jmp
ds
lock
lock
add
pop
dec
pop
shll
test
push
mov
lret
dec
jge
cmc
and
mov
or
int3
mov
push
dec
add
xor
dec
icebp
and
pusha
inc
test
dec
data16
cmp
dec
or
jae
push
mov
dec
push
das
cmpsb
stos
jns
movsb
fwait
out
dec
push
movsl
jmp
shll
pop
xor
mov
pop
xchg
mov
and
loop
dec
ficoml
jg
jge
push
jmp
jno
pop
mov
jg
repnz
cmp
ds
int
xor
js
sahf
orl
push
jmp
inc
sbbb
call
inc
mov
lock
scas
jbe
cmp
push
cmp
hlt
test
pop
sub
ss
inc
notl
insl
or
int
adc
push
popa
das
mov
popa
dec
icebp
and
push
xor
lds
outsb
xor
stc
leave
repz
adc
mov
ss
push
push
cmp
jne
jge
push
mov
dec
movsb
dec
mov
adc
test
in
cs
push
jge
ret
test
cmp
lods
leave
mov
rcrb
pop
push
xchg
mov
xor
pop
outsl
jnp
dec
sbb
dec
repz
add
icebp
pushl
test
dec
fstps
mov
dec
or
mov
aas
addr16
dec
adc
xchg
inc
dec
mov
mov
imul
xor
lret
pop
mov
mov
fwait
mov
dec
mov
sbb
push
iret
dec
popa
out
push
sub
scas
mov
imul
pop
push
scas
adc
test
xor
dec
cli
cs
enter
dec
and
mov
add
sahf
fwait
inc
inc
pop
jne
mov
lahf
sarb
sti
ror
mov
fs
mov
inc
in
rorb
dec
in
cmc
cmpsl
jne
adc
test
cwtl
cmp
movsb
aas
pusha
das
pop
push
sbbl
outsb
dec
mov
call
mov
stc
out
dec
pop
fcmovne
std
xor
out
dec
ljmp
loopne
inc
mov
jmp
xchg
aas
out
jge
in
les
outsb
insl
jg
dec
bound
arpl
lcall
mov
push
out
mov
pop
shl
mov
dec
filds
push
jo
dec
pop
stos
dec
iret
shr
mov
inc
and
mov
push
lret
and
add
fsubl
jo
inc
stos
or
test
push
inc
faddp
dec
iret
in
pop
xlat
mov
push
stc
xor
mov
push
push
loop
jno
andb
pop
inc
lods
insl
cli
rorb
jne
sub
mov
or
dec
int3
scas
outsl
subb
pop
cmpsb
jne
cmpsl
xchg
add
xchg
ffree
lret
loop
sbb
ret
or
dec
sar
mov
jnp
or
mov
inc
jle
cmc
ja
aam
mov
pop
insb
loope
int3
insl
dec
fisubrs
repz
in
xchg
push
popf
in
jp
dec
mov
ret
push
xor
inc
addb
mov
aam
jne
jmp
mov
xchg
aas
sti
int3
dec
inc
icebp
xor
dec
pop
test
inc
aam
dec
pop
mov
mov
dec
adc
leave
pushf
daa
sub
sbb
cmpsl
push
js
je
loop
add
stos
push
pop
dec
hlt
test
movl
rclb
dec
and
jmp
iret
imul
xchg
mov
insl
rorb
push
fistps
dec
cmp
jo
cmpsb
jnp
inc
push
mov
dec
xchg
mov
sbb
dec
push
fsubrs
jo
jge
mov
pop
stos
ret
inc
cmpsl
dec
lahf
scas
das
cwtl
and
out
dec
lds
sbb
mov
fs
dec
outsb
andb
mov
push
mov
sub
mov
inc
dec
push
cmp
jne
lret
pop
cld
bndldx
fdivl
push
dec
and
adc
or
push
push
push
mov
ja
dec
cmp
xor
adc
sub
aam
xor
clc
pop
add
jae
mov
pop
xor
dec
pushf
cld
xchg
fwait
xchg
sub
dec
iret
jae
rcll
sbb
xchg
into
add
inc
pusha
push
mov
dec
cmp
push
rorb
notb
push
sub
xor
jno
mov
push
adc
call
rcll
dec
out
cld
das
sti
cs
and
push
adc
xlat
fimuls
inc
cmc
rolb
aas
dec
out
sbb
mov
repnz
mov
dec
push
push
cmp
aad
sbb
adc
negb
xchg
push
dec
outsb
mov
rolb
repz
xlat
pop
int
cld
push
ds
mov
lcall
rcll
cwtl
jne
call
pop
dec
inc
jb
aaa
sub
adc
push
clc
sub
inc
add
sahf
lea
mov
icebp
mov
outsl
rorl
std
pop
sub
ret
dec
adc
rcrl
pop
iret
mov
scas
clc
xor
sbb
dec
dec
fdivrl
sub
sarb
xchg
push
dec
in
into
mov
cmp
or
mov
lods
cmp
add
push
dec
daa
call
pop
dec
jnp
mov
jnp
inc
ret
sahf
xor
inc
enter
popa
jns
in
dec
pop
sub
xlat
mov
cltd
mov
jae
cmc
iret
xchg
test
sub
dec
leave
add
lret
adc
lret
dec
testb
inc
cs
mov
and
in
push
pusha
cmpsb
adc
inc
jecxz
idivb
lahf
js
aad
or
es
push
imul
cmp
push
je
dec
adc
pop
out
and
addb
push
mov
js
in
dec
jg
aas
lea
push
cmp
imul
sbb
push
daa
push
xchg
mov
repnz
stc
push
mov
lret
adc
mov
xchg
mov
call
sub
mov
mov
fs
jmp
mov
sbb
dec
dec
cmp
sub
sbb
sub
and
push
mov
mov
adc
push
mov
js
sub
cmp
mov
fisttpll
pop
in
adc
pusha
jecxz
cmp
and
jnp
xlat
shlb
hlt
mov
cmp
mov
inc
and
pop
dec
popa
imull
xor
xor
loop
aad
imul
dec
push
xchg
cmpsl
mov
insl
das
cs
rcrl
ret
daa
mov
dec
sub
ss
outsl
test
cltd
dec
or
ret
adc
pop
xor
mov
push
fnsave
cli
lret
sbb
jmp
std
pop
cmp
lret
scas
imul
ss
sbb
daa
pushf
push
xchg
test
pop
push
push
popa
dec
xchg
out
or
push
mov
ret
adc
je
push
and
jp
out
lahf
dec
popf
jno
dec
cwtl
mov
mov
add
rorb
xor
imull
dec
in
imul
mov
pop
and
pop
lea
leave
push
into
cwtl
sub
repnz
sbb
jno
popf
push
lods
dec
lret
dec
dec
sbb
orl
and
aad
ror
dec
imul
test
dec
jl
rorb
dec
jb
sbb
hlt
mov
test
xchg
and
ror
pop
dec
mov
dec
mov
push
pop
sbb
dec
loope
test
adc
xor
xor
push
dec
cmp
dec
mov
jmp
cmovns
ss
hlt
aad
mov
push
test
push
fmuls
dec
cmp
stc
nop
aas
cmp
call
into
cs
addr16
dec
sbb
jb
sbb
sbb
pop
popf
iret
push
mov
test
jmp
lret
inc
or
or
push
cltd
cli
orb
pop
xchg
into
movsl
pop
les
xchg
pop
rcll
dec
mov
je
or
push
mov
rcrb
dec
dec
pop
icebp
enter
inc
fwait
dec
cmp
jb
rorl
leave
push
add
adc
pusha
outsb
data16
cmp
fimull
jne
cs
dec
repz
sarb
lock
in
push
mov
add
ss
jns
push
cmc
pop
push
xor
and
mov
pop
inc
mov
loop
inc
mov
sbbb
push
rorb
cwtl
cmp
enter
popf
into
pop
jg
cmp
pop
repz
and
imul
dec
lods
xor
ds
mov
dec
insb
sti
call
sbb
in
push
cwtl
dec
adc
lock
test
mov
mov
dec
jge
dec
push
push
push
pop
inc
dec
mov
lahf
out
xlat
out
dec
xor
fmuls
dec
fsubrl
ret
dec
push
push
mov
dec
cwtl
lods
or
sahf
pop
inc
dec
push
jb,pn
fmull
and
adc
jbe
jnp
enter
lcall
cmp
jnp
push
inc
cmp
add
imul
inc
jmp
dec
loope
int
rclb
std
cmpsb
ret
dec
loop
sbb
or
mov
push
cmpsl
mov
cltd
pop
pop
add
xchg
add
sub
pop
sub
mov
push
in
dec
dec
test
push
addr16
imul
add
pop
inc
popf
add
stc
xor
mov
mov
lahf
adc
imul
add
je
fmul
pop
xchg
and
int
sub
popa
clc
push
dec
adc
dec
push
pop
dec
lds
in
pop
dec
dec
int
jne
inc
lcall
stc
inc
loopne
mov
mov
dec
hlt
jb
into
aaa
inc
addl
mov
mulb
ljmp
mov
call
movsb
fs
cmp
dec
mov
and
dec
cmp
stc
add
into
pop
shll
and
or
push
and
dec
or
adc
shlb
imul
lods
cmp
lods
adc
adc
inc
dec
call
cmp
imul
push
xchg
inc
mov
jne
and
mov
ds
push
cmp
jecxz
dec
ret
xchg
jne
shl
mov
data16
push
sbbb
pop
push
push
outsl
pop
add
mov
xchg
and
jecxz
mov
and
mov
push
dec
xchg
inc
dec
mov
lods
mov
mov
inc
je
dec
rcrl
sti
aas
stos
push
dec
cmp
inc
insl
push
in
push
dec
add
aaa
std
cmp
loope
sahf
and
mov
cmpb
pop
jp
loope
dec
stos
hlt
adc
sbb
jmp
sbbl
push
add
and
call
popf
mov
dec
jecxz
adc
leave
push
nop
lahf
sub
mov
pushf
js
pop
cmp
dec
mov
test
test
rorb
lahf
dec
push
dec
jae
into
int3
imul
dec
mov
inc
out
xchg
adc
mov
push
cmpsb
pop
sub
xchg
push
adc
xorb
lcall
and
mov
mov
in
dec
adc
nop
shlb
incb
push
hlt
mov
scas
cmp
test
jmp
in
lds
sbb
adc
adc
fidivrs
or
out
das
and
inc
push
mov
push
outsb
jne
dec
cwtl
pop
cmp
es
test
lret
pop
rcr
dec
lret
dec
and
dec
or
add
ret
sub
movsl
jg
push
xchg
push
out
sbb
ret
aam
sbb
dec
cmp
in
adc
ljmp
mov
lds
notl
or
rcll
mov
mov
pop
arpl
loopne
es
dec
jl
hlt
xor
cld
xor
add
dec
flds
push
push
cmpsb
cmp
mov
sbb
jg
sub
push
and
jl
imul
test
inc
jp
cli
or
adc
imul
cmp
and
sbb
lcall
pop
push
add
dec
dec
adc
int
mov
pushf
push
pop
add
fmull
cmp
pop
dec
inc
js
push
or
mov
cwtl
dec
mov
push
xor
or
aaa
dec
pop
lret
into
cli
dec
jge
movsb
dec
inc
inc
push
aam
dec
sub
out
xchg
pop
icebp
ljmp
xor
xchg
adc
fldcw
lea
push
push
leave
aad
lods
push
out
sahf
stos
dec
mov
arpl
out
push
push
and
jp
dec
xchg
jnp
push
dec
push
xor
int3
mov
cmp
mov
dec
inc
add
xor
push
or
push
icebp
push
inc
xchg
or
in
pop
mov
cld
cmpsl
pop
jg
ret
mov
out
cwtl
dec
dec
jns
negl
dec
mov
cld
out
outsl
sub
mov
iret
ret
sub
mov
aas
jbe
ret
outsb
cltd
dec
mov
or
or
mov
or
sbb
and
testl
testb
inc
xor
mov
lahf
stos
xchg
iret
sti
push
push
daa
imul
inc
jg
add
je
push
pop
das
or
jbe
into
insb
sub
xor
clc
repnz
mov
ss
rorl
cmp
je
fbld
lret
dec
pop
mov
lods
outsb
adc
inc
xchg
clc
pop
mov
jb
jo
movsb
test
loope
sbb
lret
push
roll
fbld
xchg
imul
xchg
imul
jmp
mov
dec
dec
mov
subl
push
and
add
lea
dec
jo
mov
std
adc
mov
add
into
in
sub
loopne
popa
jb
cmp
je
push
gs
mov
dec
test
xor
or
xor
dec
dec
nop
pusha
and
orb
pop
sub
out
jle
mov
push
fcoml
sub
mov
xchg
sbb
loope
pop
and
shl
fs
dec
push
or
jl
outsl
clc
jnp
mov
xchg
jbe
orl
sbb
cs
push
mov
dec
insb
les
imul
loopne
cs
lds
daa
add
femms
dec
rorb
stc
push
scas
xlat
out
loop
cwtl
push
aaa
popf
xchg
xchg
dec
loope
pop
jg
imul
sbb
push
mov
jp
daa
sbb
pop
or
jmp
out
push
mov
loop
xor
dec
xor
cs
add
dec
mov
mov
jle
arpl
dec
sub
sbb
xchg
dec
jns
mov
cmpsb
dec
sbb
test
dec
dec
sub
inc
mov
xor
dec
and
rorl
imul
cmpsb
push
mov
dec
and
cmp
cmp
icebp
dec
pop
xchg
lods
imul
mov
lcall
sub
cmpsl
xchg
dec
fnsave
fisttpl
dec
or
das
adcl
lea
jg
test
addr16
jb
push
ss
in
push
adc
ds
ret
dec
jbe
mov
sbb
nop
mov
or
jmp
dec
into
js
sub
inc
or
jne
sbb
dec
pop
fcmovbe
ret
mov
test
push
sbb
repz
sbb
inc
lock
or
xor
push
sahf
xchg
hlt
movsl
adc
lret
xchg
pusha
mov
call
and
test
or
aaa
adc
push
and
dec
push
dec
lahf
fwait
insl
dec
pop
cmp
daa
xchg
dec
xor
roll
pop
outsl
dec
pusha
mov
xor
mov
lret
imul
popa
sub
jmp
arpl
jno
lret
dec
aad
cwtl
jmp
push
xchg
pop
xchg
mov
cmp
or
icebp
add
dec
in
mov
repnz
mov
pop
and
insl
jo
adc
cmpsb
mov
shlb
adc
dec
push
out
inc
pop
mov
dec
and
rclb
int
dec
ds
pop
dec
dec
sbb
xchg
mov
pop
ss
pop
stos
mov
lock
push
iret
cmc
lods
test
mov
dec
lcall
out
or
push
and
pushl
sub
fwait
dec
adc
dec
jmp
inc
lods
dec
imul
dec
fcoml
shl
adc
mov
push
sbb
push
lret
dec
rclb
rcl
lcall
scas
ss
mov
or
mov
mov
dec
mov
roll
int3
dec
cld
lds
out
ret
mov
dec
add
insl
pop
jns
push
push
cmp
int3
xchg
cltd
pushf
inc
imul
jge
and
outsb
pop
pop
xchg
dec
repz
jbe
dec
and
dec
cmp
dec
jno
mov
fs
dec
enter
and
xor
and
cld
addr16
mov
scas
imul
imul
aad
or
push
aaa
jg
add
je
shr
pop
fmuls
jl
jmp
dec
cwtl
cmp
dec
aas
cld
push
rolb
or
dec
jo
push
cmp
dec
icebp
xchg
xchg
sub
fisttpl
xor
ss
inc
sub
dec
sbb
inc
fsubs
sub
aas
std
xchg
in
dec
les
popa
dec
iret
sbb
out
arpl
mov
out
lahf
mov
mov
or
out
ret
jbe
jns
pop
mov
xchg
adc
cmp
inc
dec
pop
dec
jmp
mov
mov
sbb
in
rcl
lret
imul
cmp
popa
inc
and
imul
dec
pop
es
sbb
js
mov
ficoml
ret
push
sub
push
cmp
jno
ret
add
and
dec
loop
jne
rclb
xchg
pop
cmc
or
dec
inc
or
pop
cmpsb
stc
jmp
insb
in
xor
jns
fstpl
or
aad
sbb
dec
inc
jmp
dec
xor
mov
xchg
or
dec
js
push
daa
and
push
push
push
pop
push
dec
mov
sub
addr16
lahf
loope
jge
imul
dec
sub
insl
sub
dec
push
test
fisttpll
out
fs
push
aad
jno
add
fucom
pop
ficoml
mov
xchg
dec
xor
jmp
leave
sub
or
stc
xchg
sub
js
push
jge
lahf
push
fcomps
add
in
ret
rol
popa
xlat
and
jl
sbb
dec
dec
cmp
fnsave
sub
push
enter
shlb
cmp
lds
xor
jmpw
ficomps
jae
mov
lcall
loope
aas
xchg
arpl
in
test
ja
sub
push
and
int
and
outsb
dec
dec
xchg
clc
je
sarb
test
fs
pop
dec
mov
addl
xchg
push
sub
call
push
push
sub
imul
out
xchg
jmp
pop
pop
pop
pop
mov
or
pop
out
mov
push
lret
lcall
stc
or
ret
push
sbbb
and
fbld
sub
mov
negb
xchg
stos
push
fwait
lock
imul
pop
jae
aad
dec
and
dec
iret
in
adc
pusha
testl
popf
and
push
add
lahf
jns
ret
stos
pop
test
inc
mov
popf
jnp
mov
pop
hlt
jg
imul
mov
add
or
dec
pop
push
jecxz
sahf
mov
dec
mov
pop
adc
cmc
fs
jle
orl
xchg
or
mov
inc
mov
lret
dec
sbb
andb
repnz
dec
push
cmp
inc
pop
jg
xor
pop
dec
xor
mov
jno
xchg
sbb
jl
fcompl
add
nop
and
sbb
dec
xchg
mov
cwtl
out
shl
mov
adc
stos
aaa
int3
push
nop
push
pop
dec
jge
lret
sub
mov
jmp
arpl
icebp
dec
les
sub
dec
xlat
in
pop
mov
sbb
out
dec
lods
insl
mov
sub
xorl
mov
mov
xor
enter
mov
dec
stos
cmp
dec
dec
xchg
outsb
fnstenv
data16
dec
addr16
or
push
inc
fst
xor
dec
outsl
cwtl
sbb
jecxz
xor
mov
xchg
int3
jns
mov
pop
mov
cmp
cld
cltd
aas
dec
sub
std
jmp
out
pop
dec
or
sub
movntq
in
jbe
bound
fidivrs
scas
dec
mov
sar
int
mov
enter
and
cmc
add
cmp
push
mov
cli
sbb
test
cld
aad
sub
pop
ret
add
imul
and
adc
mov
ds
dec
repz
fidivrl
sbb
add
mov
in
repz
stos
and
lods
test
xchg
stc
mov
xchg
fisttpl
cmp
mov
mov
cld
jb
popa
push
xor
pop
push
sbb
xlat
pop
out
dec
jbe
dec
rcrb
pop
and
sbb
push
imul
xchg
adc
push
mov
or
out
push
and
or
ficoml
inc
call
jnp
mov
pushf
dec
icebp
mov
insb
add
sahf
cmp
test
in
lds
mov
xchg
int
sbb
push
daa
in
lds
enter
dec
xor
dec
fs
jge
dec
dec
jle
xor
jne
aaa
jle
xchg
push
jg
loop
add
shlb
cmp
sub
es
dec
outsl
sub
data16
inc
xchg
dec
push
jecxz
lods
sub
je
dec
or
push
stc
dec
inc
cmpb
imul
push
dec
shl
daa
dec
dec
push
fsubrs
andb
popf
cs
pop
push
ljmp
ret
mov
idivb
and
xchg
enter
dec
mov
mov
mov
xorb
insl
xor
mov
dec
outsb
ja
jle
cwtl
imul
out
mov
enter
leave
pop
xchg
ficoml
out
aam
clc
xlat
movsb
dec
fisubs
sub
dec
inc
in
loope
xor
dec
out
stos
mov
dec
arpl
shrb
xchg
jmp
fisttpll
shrb
mov
xlat
divl
scas
mov
enter
loop
stos
cmp
pop
jns
lret
data16
jne
pop
and
dec
mov
xor
ljmp
pop
mov
adc
push
ja
pop
int
lret
imul
cwtl
arpl
ss
fdivl
stos
adc
addr16
sub
mov
outsb
mov
call
into
mov
jg
xchg
push
stc
push
test
clc
or
arpl
sbb
cmpl
sub
lcall
or
and
gs
push
xlat
negb
rcrb
xchg
mov
sub
aam
or
cmp
or
inc
in
imul
push
stos
daa
pop
dec
push
fwait
mov
popf
imul
adc
xchg
add
pusha
inc
pop
lods
pop
push
inc
jmp
mov
dec
or
adc
popf
inc
pop
jle
dec
mov
aas
jne
add
lcall
mov
xchg
sti
sbb
cmc
xchg
sub
testl
pop
pop
lods
dec
arpl
test
inc
push
int3
dec
aam
scas
adc
orb
pop
pop
sarb
repz
push
sbb
jne
stos
dec
push
aam
pop
in
sbb
fsts
sub
jae
ds
lcall
loop
dec
push
call
pop
sahf
dec
cwtl
sbb
lock
dec
pusha
nop
pop
aaa
jmp
repnz
jge
lcall
movsb
sbb
enter
mov
icebp
push
inc
add
shl
pop
cmp
xchg
inc
imul
pop
cmp
pop
out
sub
aad
xchg
mov
sub
mov
cmc
dec
or
hlt
jnp
out
sbb
in
or
adcl
xchg
pop
fsts
adc
cmp
lock
arpl
push
pop
imul
std
dec
xchg
sbb
pop
dec
ret
dec
xor
mov
jns
mov
push
mov
cltd
add
iret
push
pop
dec
sub
xchg
outsl
imul
dec
jae
mov
mov
dec
jecxz
add
or
shll
dec
mov
pop
add
sub
dec
and
mov
lahf
xchg
xchg
sub
repnz
bound
mov
dec
stc
pop
add
cmpsl
cmp
sub
dec
pushf
out
call
aas
and
and
pop
mov
sti
or
dec
dec
mov
lods
and
dec
fmuls
sub
nop
push
daa
xor
rorb
sbb
and
dec
popf
sarb
dec
jo
roll
dec
xor
jae
push
and
aad
into
sub
leave
fildl
mov
dec
shl
jge
ljmp
xchg
cmp
adc
dec
stc
jo
add
dec
subl
pop
mov
pushf
sti
push
inc
in
fsubr
cmp
jmp
iret
push
adc
orb
cli
test
push
mov
in
out
xlat
jl
cs
xor
mov
adc
xchg
push
mov
lock
inc
jge
xchg
out
dec
nop
loop
inc
inc
rcr
les
add
cltd
push
outsl
push
mov
and
imul
fstpl
and
dec
into
jl
inc
cmp
insb
dec
push
scas
cmc
lret
dec
mov
pop
cmp
xor
pop
daa
je
jmp
push
insl
aas
pusha
rcl
mov
imul
cmpsb
aam
loope
pop
pop
rol
xor
stos
dec
mov
jp
arpl
dec
cmp
xchg
mov
mov
jns
mov
test
enter
push
add
psraw
jmp
fisttpl
ds
bound
out
jmp
inc
xchg
push
sub
pop
into
dec
sbb
xchg
js
jge
push
dec
les
stos
aad
dec
test
inc
mov
rorb
dec
pop
and
sahf
mov
dec
std
pop
mov
dec
dec
lahf
jno
mov
ljmp
in
or
push
filds
cmp
sbb
jne
pop
lds
popa
jae
adc
test
fcoms
dec
xor
dec
daa
icebp
adc
sub
mov
jae
pop
scas
ljmp
jmp
mov
fcomps
fistl
loope
mov
dec
dec
inc
and
pop
in
dec
nop
dec
and
dec
into
dec
push
pusha
das
mov
adc
mov
dec
pop
mov
jae
or
shll
dec
sbb
cld
mov
loopne
out
push
js
dec
sbb
pop
addr16
dec
pop
into
dec
cmp
or
cmpsl
fnstenv
imul
dec
pop
jo
stos
pop
push
dec
lea
mov
dec
adc
sub
add
pop
dec
icebp
or
mov
sub
fidivrl
dec
sbb
inc
in
jno
stos
push
fists
mov
mov
mov
push
or
dec
lret
int
inc
outsb
or
aam
call
mov
dec
fdiv
xchg
dec
mov
lret
testl
jge
push
pop
mov
ret
xchg
dec
adc
dec
int
pop
fs
imul
insb
xchg
jmp
sub
fistps
cwtl
cs
xor
repnz
push
push
dec
push
xchg
aaa
adc
es
mov
dec
jge
and
repz
ret
arpl
cmp
sub
fisubrl
adc
cmpb
pop
xchg
add
ja
sahf
test
or
insl
mov
pop
adc
xchg
jmp
jnp
mov
push
mov
aam
mov
int
xorl
mov
xchg
mov
mov
hlt
or
adc
std
inc
add
mov
das
fmuls
pop
mov
scas
dec
inc
insb
or
push
mov
push
xchg
arpl
std
das
inc
js
pop
dec
cmp
sub
jmp
pushf
push
pop
cmp
sub
dec
cli
sbb
enter
dec
and
xor
dec
addr16
incl
add
dec
mov
sub
leave
lcall
mov
ret
and
mov
aaa
lock
mov
add
dec
sbbb
data16
jnp
out
or
lods
xchg
es
dec
push
pop
push
decb
nop
gs
insb
scas
dec
call
repnz
jbe
xor
stc
ljmp
testl
dec
call
inc
mov
xchg
pop
xor
out
jp
les
push
sub
lret
xchg
dec
pop
xlat
add
in
mov
rolb
dec
sub
dec
and
push
lret
dec
jo
pop
outsl
dec
das
repnz
mov
xchg
push
push
in
scas
push
fisttpll
mov
cmp
push
hlt
dec
adc
pop
shll
add
dec
inc
pop
fs
test
out
dec
orl
popa
dec
xlat
push
inc
sub
push
std
jnp
pop
mov
adc
dec
dec
movsb
out
jbe
addr16
mov
loop,pt
add
jnp
jmp
sub
push
clc
xor
pop
rorb
pop
dec
cmpsb
inc
dec
mov
dec
jecxz
lods
jmp
mov
aad
dec
or
mov
insb
das
inc
lret
sahf
sub
mov
dec
int
sti
jns
dec
dec
mulb
xchg
mov
outsb
pop
insl
mov
sub
mov
aad
popf
push
das
cs
loope
stc
jp
fcoml
mov
in
mov
jmp
dec
int
dec
or
inc
mov
dec
arpl
dec
mov
mov
test
dec
sbb
mov
or
or
lret
leave
push
popa
sub
mov
int
imul
sub
push
push
xor
test
xchg
sub
shl
shlb
testb
sbb
lds
dec
das
insb
loope
sub
inc
in
mov
cmp
mov
pop
adc
int
outsl
push
loop
pop
cs
sub
addr16
ljmp
sbbl
push
xorb
dec
stos
push
sbb
xchg
scas
adc
icebp
mov
fld
or
push
dec
cmp
scas
cwtl
test
lock
dec
out
cmpsl
inc
nop
jmp
jo
aam
pop
cmp
das
fidivl
imul
push
fisttpl
mov
movsl
mov
and
dec
xchg
jmp
jbe
dec
jnp
jo
jl
mov
mov
fwait
push
movsl
adc
xchg
repnz
pop
divb
dec
jae
inc
cmp
sbb
dec
and
or
and
fwait
out
loope
divl
lods
out
test
inc
xor
add
lret
pusha
mov
dec
inc
mov
mov
mov
xchg
hlt
flds
fiaddl
mov
bound
add
out
jno
xchg
adc
inc
mov
jmp
dec
xchg
cmp
cmpsl
dec
pop
je
and
addr16
outsb
cmp
lea
mov
addb
test
mov
lret
aaa
mov
test
andl
shl
add
outsb
xchg
sbb
insb
mov
dec
push
imul
inc
pop
cwtl
lret
into
lock
loope
mov
aas
bound
and
dec
fistps
insl
pop
sahf
movsb
dec
inc
leave
dec
lea
andb
dec
xchg
lods
ret
or
js
sub
push
push
insb
dec
push
pop
daa
adc
sahf
sarl
cmpsb
fcompl
sub
and
adc
jmp
add
lods
dec
mov
sub
or
daa
int
rorb
dec
and
sahf
bound
or
inc
scas
and
mov
xchg
inc
pop
push
cld
dec
dec
movsb
mov
dec
fstpt
or
mov
mov
mov
cltd
push
xlat
or
inc
lods
dec
jmp
repz
and
add
les
in
jbe
pop
sbb
popf
call
pop
mov
aas
mov
push
scas
stos
addr16
lahf
lds
inc
mov
mov
mov
jns
sti
jecxz
rcl
enter
mov
xchg
add
je
cld
or
mov
imul
mov
bound
aas
imul
dec
gs
arpl
dec
lods
adc
xchg
xchg
sbb
dec
stc
sbb
ljmp
adc
mov
lcall
cmp
in
rorl
mov
out
mov
pop
adc
lret
les
jge
sbb
dec
mov
arpl
dec
dec
xchg
mov
stos
dec
jae
out
lock
shr
inc
movsl
and
pop
out
adc
dec
jmp
mov
pushf
and
xchg
in
clc
cmpsb
jmp
lcall
adc
dec
push
and
inc
mov
mov
add
lahf
in
out
xlat
mov
aas
add
pop
pop
dec
sub
push
out
dec
xchg
cmc
mov
fwait
loopne
ds
lcall
sbb
or
add
shl
xor
mov
cmpsb
push
cmp
jecxz
pop
add
fisttps
shrl
cli
dec
push
or
jl
adc
inc
sub
scas
daa
push
jge
roll
out
mov
or
mov
repz
lock
fbstp
enter
in
popf
stc
xor
loope
pushf
cmp
ret
loopnew
xor
add
mov
adc
jle
add
xorl
mov
in
outsl
insl
int3
push
pop
push
xor
add
pslld
xor
outsl
inc
lcall
gs
mov
cld
out
and
and
add
sub
js
mov
inc
cmp
adc
sbb
in
dec
jns
xor
dec
push
xor
sti
sbb
sbb
pop
inc
fdivl
mov
adc
sbb
dec
inc
mov
xor
dec
insb
sub
stos
add
dec
sbb
mov
lcall
jno
fsubs
leave
lahf
dec
adc
test
scas
icebp
inc
test
stos
imul
jg
add
pop
inc
unpckhps
or
lret
add
dec
mov
mov
popf
clc
nop
xchg
ljmp
test
mov
push
sti
pop
pop
stc
pop
mov
shll
mov
pop
mov
jae
and
sub
push
jnp
push
mov
xchg
stc
movsl
xor
xor
xchg
fwait
aam
mov
cmp
or
push
insb
jae
imul
pop
stos
xchg
mov
fwait
xchg
jns
neg
mov
add
xor
insb
add
jle
pusha
push
aas
xchg
pop
sbb
in
icebp
dec
mov
push
dec
dec
hlt
out
rcr
idivl
xchg
xchg
fwait
push
jno
ljmp
mov
xchg
ficompl
out
dec
hlt
sub
and
test
lods
shlb
sbb
dec
sub
jp
iret
mov
incb
test
pop
dec
dec
loopne
fs
xor
xchg
mov
pop
dec
mov
lahf
ror
repz
xchg
jmp
ja
push
sbb
insb
fdivrl
test
mov
cwtl
jbe
ret
ds
cmp
aaa
dec
pop
mov
jge
jmp
mov
lods
xchg
movsb
dec
pusha
jl
lea
cmpsl
int
rcll
inc
xor
ror
imul
sbb
dec
loope
and
dec
or
fdivl
dec
pop
jmp
jnp
mov
loopne
out
and
mov
js
add
popa
hlt
xchg
ljmp
inc
sub
cmp
iret
sti
addr16
dec
dec
pop
lahf
mov
dec
icebp
stc
cld
push
xchg
nop
sbb
hlt
or
push
cmc
pushf
push
jns
pop
movsb
pop
xor
xchg
mov
cltd
mov
pusha
mov
inc
jns
dec
hlt
loope
movd
ret
jbe
imul
mov
dec
jo
cli
push
movsl
dec
enter
mov
dec
xor
add
dec
cmpsl
pop
hlt
inc
in
rorl
dec
mov
jge
adc
sti
sbb
push
cmp
fldcw
arpl
je
and
dec
pop
jecxz
xlat
cmpsl
xchg
std
imull
inc
pop
dec
clc
pop
sbb
fsubp
xor
lds
sub
jmp
and
lods
cmp
push
xchg
test
cs
cld
fldt
push
sbb
mov
std
inc
sti
mov
dec
mov
and
dec
xor
movsl
les
pop
imul
scas
dec
out
pop
add
fnstcw
mov
pop
push
lret
xor
popa
and
and
dec
adc
jo
and
cli
dec
mov
fimuls
adc
hlt
sub
movsb
mov
adc
jns
repnz
push
mov
roll
dec
mov
stc
xor
pushf
pop
negl
leave
aaa
push
sub
mov
dec
fldl
ret
loop
cs
lcall
repz
test
inc
mov
mov
imul
inc
fnstcw
add
jmp
stc
mov
jl
imul
dec
mov
inc
jne
daa
dec
adc
push
push
mov
mov
push
push
aaa
outsb
mov
imul
scas
lret
outsl
mov
lret
push
mov
orl
lret
push
mov
dec
es
out
adc
ror
out
pop
mov
add
dec
test
mov
sbb
xor
jecxz
std
dec
fsts
dec
dec
movsb
mov
cmp
adc
dec
cmp
sub
sbb
scas
call
jbe
xchg
in
imul
adc
int3
mov
dec
ljmp
mov
imul
in
arpl
push
pop
popf
or
shlb
arpl
insl
dec
mov
movsl
ficoms
ljmp
test
mov
dec
xchg
ja
jno
push
dec
dec
addr16
scas
dec
cld
xor
jmp
lds
sbb
bound
xchg
fs
sub
dec
cmp
dec
xor
push
mov
dec
push
and
mov
cmp
das
add
pop
push
push
dec
dec
push
jne
add
pop
xchg
or
mov
inc
mov
and
mov
push
mov
or
pop
inc
sti
jl
push
dec
inc
in
movsl
push
lret
and
imulb
cli
xchg
or
adc
jae
rorl
add
fwait
ds
stc
mul
mov
dec
mov
add
outsl
or
ret
inc
dec
add
test
imul
pop
lcall
dec
add
push
les
sbb
push
lods
mov
mov
xchg
jp
cmc
dec
push
jle
into
adc
dec
lds
pop
stos
mov
pop
and
cmp
sbbb
rcrb
cmp
and
fistpll
aad
pop
pop
arpl
nop
xchg
dec
ss
repz
jg
int
mov
push
cs
insb
clc
add
push
xchg
mov
adc
dec
sub
adc
inc
bound
push
jge
sub
adc
dec
stos
int3
cmpsl
movsb
mov
lea
jg
icebp
leave
jmp
fucom
sub
test
fisubrs
xchg
push
pop
jge
mov
lods
add
aad
or
aas
fisttpl
faddl
and
adc
push
popf
jnp
imul
mov
mov
ljmp
fldcw
jecxz
cmp
inc
cmpsl
or
data16
je
and
aam
mov
sub
push
jbe
bound
sahf
xor
pop
lret
dec
dec
jns
xlat
pop
lds
push
pop
cltd
push
add
std
dec
cmp
iret
and
adc
or
daa
push
dec
popf
insb
inc
stos
dec
loope
ret
jno
mov
outsl
xchg
adc
enter
add
fadds
ljmp
test
sbb
adc
dec
or
aaa
mov
aad
xchg
dec
das
es
dec
mov
ret
in
or
pushf
inc
xor
sub
push
clc
aad
cld
fimuls
icebp
scas
aas
mov
ret
adc
sub
ficoms
rcrl
dec
idiv
push
push
adc
push
push
int3
iret
sbb
pop
dec
in
jb
mov
jmp
dec
xchg
mov
dec
cmpsb
fucomip
in
imul
and
negl
mov
mov
inc
mov
jmp
and
test
cld
dec
das
jo
icebp
into
fisttpll
xorl
cwtl
add
pushf
dec
push
shl
adc
dec
lret
add
cmp
pop
sub
or
add
xchg
cmc
test
test
fbld
cmp
add
xlat
repnz
inc
imul
orl
test
mov
fldt
inc
loop
negb
rolb
pusha
sub
sub
dec
adc
outsl
rcl
xchg
mov
imul
fstl
idivb
ret
dec
or
push
les
inc
lods
xor
sub
mov
out
loopne
dec
repz
push
sub
push
int3
insl
dec
pop
out
push
or
mov
sub
pop
popf
cmp
adc
ret
test
mov
sub
test
dec
push
push
outsb
out
cmp
int3
push
cmp
xor
add
les
imul
mov
mov
push
pop
pxor
int
dec
fstl
cmpsl
sbb
pop
dec
js
stos
dec
push
mov
push
stos
dec
mov
stos
mov
rolb
clc
push
sbb
imul
mov
loope
subb
mov
dec
dec
dec
in
test
fistps
stos
cli
nop
pop
sbb
and
mov
lcall
sub
out
sbb
mov
xor
push
jmp
loopne
mov
inc
fdivrs
inc
mov
ss
mov
ficoml
cmpsb
adc
pop
mov
out
lods
nop
dec
faddl
call
dec
addr16
sub
movsb
sub
repz
es
add
mov
adc
inc
iret
pop
dec
and
lret
inc
ja
pop
out
imul
mov
movsl
je
test
rcl
inc
roll
aam
sub
out
or
nop
sub
jmp
loope
icebp
push
dec
stos
iret
ds
fwait
movsb
bnd
roll
push
add
add
xchg
dec
pop
insb
add
mov
cmp
dec
mov
pop
pop
hlt
and
push
dec
fisubl
ds
dec
add
sbb
jno
adc
sarb
xchg
sbb
jns
sub
cmp
and
adc
pop
inc
dec
inc
add
xchg
fidivl
andb
jnp
repnz
sub
out
nop
hlt
sbb
xchg
mov
jg
adc
or
dec
mov
outsl
xchg
xchg
into
jns
jmp
int
push
sarl
lds
nopl
subb
mov
adc
rcrb
lock
adc
dec
daa
out
dec
ds
adc
xor
inc
dec
jno
into
movsb
stos
pop
mov
sti
jecxz
rcll
adc
ficompl
push
decb
add
aaa
mov
inc
mov
pop
and
adc
enter
call
imul
or
xchg
nop
sahf
fldcw
pushw
cmp
enter
and
adc
inc
xchg
cmp
std
sbb
dec
cld
mov
jns
ret
or
movsb
or
mov
cmp
jp
pop
jb
pop
mov
icebp
repz
movsb
push
popa
ret
sub
add
shrb
test
adc
push
or
enter
lret
jne
add
dec
repz
mov
lahf
lods
dec
pop
sti
inc
cli
jb
aad
xlat
push
dec
add
and
adc
pop
sub
dec
cmpsl
mov
pop
cmp
jecxz
pop
fidivs
dec
add
fdiv
nop
push
jns
scas
lret
sub
dec
ja
xchg
dec
lods
and
xchg
call
arpl
cmp
mov
dec
dec
xor
loopne
sbb
mov
jb
out
stos
inc
pop
mov
pop
push
push
inc
out
xchg
dec
dec
les
or
mov
add
arpl
ja
pop
push
dec
push
mov
out
pop
pop
rorb
and
dec
movups
mov
dec
add
mov
cli
pushf
sbb
shl
xor
adc
jp
into
push
dec
mov
push
imul
into
jae
int
pop
xchg
in
mov
xlat
lea
sbb
pop
shrb
scas
ret
and
mov
hlt
add
or
out
shl
ja
sub
movaps
in
jge
outsl
stc
mov
push
inc
dec
shll
adcb
jecxz
fs
mov
push
scas
adc
imul
dec
pop
jle
push
xchg
ss
mov
std
loopne
xor
out
dec
daa
or
pop
inc
insl
aas
dec
pushf
push
stos
stos
aam
mov
dec
popa
popf
enter
loop
out
dec
ret
push
jge,pt
test
fldcw
add
pop
dec
jp
call
jl
mov
jle
testl
xor
daa
dec
dec
outsl
imul
cmp
dec
loop
mov
mov
test
mov
mov
icebp
js
out
dec
push
inc
fisubrs
test
repnz
rcl
dec
and
dec
or
imul
push
mov
clc
mov
cmpsl
pop
push
xor
cmp
dec
jg
pop
mov
mov
pop
mov
lcall
xor
fmuls
fs
push
or
add
ret
push
sbbb
ds
imul
xchg
push
jecxz
push
push
dec
outsl
adc
mov
js
fwait
call
into
jne
dec
das
push
pop
adc
pop
scas
xchg
xchg
pop
pop
adc
dec
mov
mov
jp
cs
in
test
push
aam
sub
hlt
fs
fwait
pop
add
xchg
gs
stc
stos
lret
lcall
push
fs
dec
gs
jae
in
call
mov
loop
out
outsb
cmpsl
mov
sub
mov
and
xor
xchg
add
inc
jne
imul
inc
fnstenv
mov
cmpsb
push
hlt
inc
adc
dec
fcmovbe
pop
jmp
xor
jno
pop
push
mov
imul
pop
push
sahf
rclb
shlb
dec
dec
pop
icebp
pusha
xchg
outsb
stos
xchg
out
inc
sbb
lret
ljmp
repnz
adc
inc
sbb
int
or
dec
es
mov
pop
dec
mov
pop
les
repnz
in
xchg
int
fcoml
ds
iret
insb
and
jae
lods
xchg
mov
pop
mov
js
and
imul
subb
pop
aam
inc
jmp
xchg
sub
push
stc
stos
icebp
or
mov
xchg
push
dec
fidivrl
mov
test
inc
adc
dec
sahf
inc
xchg
pop
push
mov
and
sbb
mov
jnp
and
or
pop
mov
leave
xorb
pop
inc
jns
pop
js
fxch
addr16
cmp
dec
jne
movsb
sbb
testb
js
mov
aam
out
dec
cld
rcrb
ret
insb
adc
jmp
adc
jns
mov
dec
pop
add
mov
cltd
xchg
pop
mov
jno
sti
roll
in
dec
jp
es
sub
xor
cmpsb
je
cli
movsb
aam
enter
in
pop
push
pop
add
mov
aad
dec
ret
mov
inc
dec
arpl
js
mov
stos
outsb
pop
dec
imul
xor
dec
and
cmpsl
out
int
js
sub
xor
dec
mov
aas
in
std
push
jmp
dec
push
pop
loopne
lods
cmpb
cwtl
stos
subb
pop
in
into
dec
xor
mov
adc
lods
mov
mov
inc
lds
sub
xchg
rolb
rol
jge,pn
sub
sbb
arpl
pop
ljmp
mov
cmp
inc
shll
pop
and
push
adc
jmp
pop
inc
add
mov
pmulhuw
out
faddl
cli
dec
cmp
dec
insl
test
inc
lods
sbb
cwtl
mov
nop
adc
daa
dec
fildll
mov
mov
jle
bound
mov
int
xchg
mov
and
rorb
ret
enter
jb
add
dec
andb
xor
jecxz
xor
fstl
push
mov
mov
jl
mov
aas
inc
scas
mov
sbb
fadd
dec
jne
mov
mov
leave
xchg
sub
push
dec
dec
mov
mov
inc
mov
adc
inc
hlt
add
cltd
dec
aaa
cmp
cmp
jp
test
in
cli
jb
dec
repnz
adc
jne
call
xor
add
addr16
imul
mov
cmpsb
xchg
aaa
sbb
out
mov
xchg
dec
lock
pop
inc
inc
out
je
push
jmp
repz
mov
add
push
aam
xor
test
ficoml
dec
dec
enter
push
push
mov
lret
mov
cli
in
in
sbb
int
jge
call
and
sub
dec
pop
mov
mov
lcall
inc
fsubs
sub
xchg
xor
adc
push
inc
jb
sub
pop
mov
aas
icebp
scas
test
xchg
mov
jmp
dec
imul
in
ss
push
adc
fs
and
dec
jp
mov
pop
nop
pop
into
imul
das
mov
adcl
push
jne
rorb
pop
fs
xchg
push
jl
jmp
lret
xchg
pop
movsb
and
mov
adc
push
push
and
movsl
mov
or
dec
sbb
stc
aam
xchg
test
cmp
dec
xor
mov
dec
dec
jle,pn
stos
sbb
in
jmp
shrl
in
smsw
imul
pop
mov
dec
jmp
mov
dec
push
hlt
insb
fwait
fidivrl
sub
push
add
in
mov
mov
xchg
pop
push
and
jne
lods
aad
lods
es
dec
xor
les
mov
fldcw
ficomps
and
xchg
add
cmpb
jb
mov
inc
inc
cmp
enter
push
sbb
fistps
inc
mov
or
mov
lea
adc
dec
inc
insb
dec
mov
pop
cs
sub
int
cmpsl
dec
vshufps
dec
aaa
aad
mov
dec
jge
jno
inc
mov
dec
movsb
hlt
add
lea
in
sbb
aas
push
cmp
pop
fcomps
dec
sub
xlat
and
dec
int3
mov
test
lods
bound
stos
sbbl
push
push
dec
fdivrl
test
flds
lock
jnp
fidivrs
dec
push
insl
add
mov
jl
dec
and
pushf
inc
fistl
mov
xor
or
push
aad
call
pop
push
mov
xchg
pusha
ds
lock
xor
xor
imul
cmp
cmp
cltd
xor
mov
clc
or
dec
iret
add
add
call
shrl
push
fisttpl
scas
test
dec
dec
adc
pop
enter
lret
sahf
in
add
dec
int
addr16
imul
jmp
call
lock
xchg
aas
stos
dec
aad
mov
es
sbb
dec
add
jbe
xchg
jle
fisubl
adc
push
clc
das
pop
js
insl
test
sub
pusha
jge
push
dec
inc
and
mov
sub
mov
loop
push
sbb
xchg
imul
out
addr16
dec
mov
out
mov
cld
mov
sbb
cmpsb
adc
das
fdivs
dec
mov
aad
mov
inc
pop
push
roll
xchg
aad
orb
pushf
lahf
mov
push
mov
pushf
inc
xchg
stos
in
sub
loop
cmp
notb
popa
jae
mov
dec
test
ss
orl
pop
into
xlat
ficomps
xor
aam
pop
outsb
dec
lds
push
push
dec
jl
mov
adc
push
dec
fnstcw
pop
std
sub
int
scas
cli
mov
sub
loope
dec
xchg
jl
cmpsb
add
aad
lahf
jecxz
dec
jge
fucom
add
mov
testb
dec
mov
inc
pop
cwtl
scas
ret
ret
sub
sbb
or
inc
daa
push
nop
xchg
push
adc
cmp
xchg
imul
pop
sbb
popf
or
xor
test
cmp
push
cmp
dec
jp
mov
dec
xchg
sbb
jmp
mov
shl
int3
jb
insl
xor
add
clc
jge
pop
in
cmovbe
outsb
lods
outsl
xchg
fildll
jecxz
test
inc
sub
dec
xor
jb
push
and
dec
loope
mov
popf
test
add
in
icebp
xor
ljmpw
loopne
pop
inc
mov
dec
jnp
mov
mov
pop
dec
mov
mov
in
sti
filds
jo
leave
jmp
lds
push
mov
dec
repz
mov
or
mov
lcall
dec
daa
fcom
and
add
adc
std
push
pop
cld
out
fsubl
dec
xor
mov
inc
mov
out
pop
dec
adc
fs
cltd
dec
push
aam
mov
cmpsl
dec
sti
nop
mov
pop
dec
ror
iret
cmpsb
das
popf
pop
dec
out
push
mov
dec
in
pop
add
xor
jecxz
fs
lret
xor
and
xchg
movsb
or
jge
dec
bound
imul
dec
jae
leave
xor
mov
xor
mov
pop
xor
fisttps
jae
loope
dec
adc
stos
cmp
clc
fwait
mov
dec
mov
jg
push
shll
dec
mov
sbb
add
decb
push
jp
xorb
mov
inc
hlt
mov
fiaddl
push
xchg
sub
and
aad
fwait
daa
jb
and
mov
cld
dec
or
sbb
xchg
and
rolb
and
adc
outsb
loop
add
scas
dec
lret
addl
dec
adc
push
or
shrb
cmp
cwtl
stos
sbb
je
jg
pop
pop
pop
loope
mov
dec
scas
mov
xchg
test
es
cld
int
sti
jns
cmp
push
sub
notb
sbb
jg
lcall
aad
or
jge
inc
aaa
jmp
dec
sti
push
pushf
lea
dec
inc
sub
movsb
adc
xor
pop
jecxz
push
dec
sub
mov
adc
das
cmc
dec
push
add
pop
jmp
stos
dec
lods
test
add
movsb
pop
push
fmul
or
and
adc
pop
idivb
push
xlat
push
add
add
push
orl
inc
flds
testb
dec
cmpsb
out
or
pop
lahf
push
dec
arpl
dec
xchg
pop
inc
es
push
xchg
add
ret
sub
lcall
dec
jns
and
and
jg
jmp
dec
std
sbb
iret
mov
mov
fimull
adcb
dec
jl
loope
je
sub
cli
lock
data16
add
cmp
xchg
inc
jb
jne
pop
stos
addr16
std
scas
inc
adc
mov
lahf
xchg
inc
mov
lods
dec
in
mov
out
push
das
imul
mov
xchg
add
cmpsl
xor
cmp
inc
sbb
dec
sub
push
push
dec
jne
gs
mov
and
iret
into
lods
jmp
fldt
pop
stc
leave
imul
xor
pop
add
dec
jb
lods
addl
imul
in
out
out
les
dec
imull
test
dec
shlb
lret
cmp
dec
jle
into
stos
xor
out
adc
shll
push
adc
dec
and
cmpsl
nop
dec
mov
jbe
pushf
cld
sbb
in
clc
std
lret
pop
dec
dec
lret
jno
adc
add
jo
fsubrl
subl
mov
xor
clc
dec
pop
sbb
dec
jecxz
mov
add
imul
and
ror
rorl
test
dec
cmp
push
loope
repz
cmp
jno
cmpsl
xchg
sub
sub
xchg
dec
jbe
mov
loop
add
dec
jp
inc
cmp
mov
mov
mov
dec
fcmovu
push
scas
cwtl
lods
daa
dec
jge
push
insl
sub
test
and
mov
lods
jnp
dec
cs
pop
rorl
iret
jp
inc
push
dec
and
xor
orb
jmp
std
jne
popf
jae
daa
add
add
imul
inc
push
xchg
pop
cs
test
mov
addr16
int
adc
push
sbbb
xlat
push
sbb
fcmove
cwtl
js
adc
shll
stos
lret
test
testb
pop
int3
and
or
sub
and
pop
lret
mov
mov
les
inc
mov
leave
fwait
jg
nop
pop
sahf
sbb
push
lds
imul
rcrl
into
dec
testl
fldt
ljmp
and
xor
dec
mov
adc
lret
dec
inc
inc
push
jl
in
jecxz
cmpsl
or
pop
lea
aas
lds
inc
add
pop
push
popf
adc
subb
mov
sub
ss
into
inc
aas
enter
cmc
dec
push
cs
cmp
dec
pop
movsl
adc
mov
test
ja
lret
fmuls
std
xchg
or
push
adc
sub
popf
push
gs
mov
dec
xchg
push
push
ja
pop
adc
cmp
jno
inc
push
jae
mov
dec
jl
and
stos
push
xor
push
negl
pop
inc
xor
dec
bound
cmp
dec
pusha
or
xor
mov
mov
add
stos
fidivl
fdivrl
dec
dec
divl
leave
popa
push
fmuls
les
pushf
sub
enter
sahf
and
pop
jb
fisubs
mov
mov
xorb
dec
aad
push
push
jnp
dec
inc
sbb
mov
popf
jmp
xchg
dec
inc
cmp
int
test
mov
push
push
push
mov
mov
cwtl
and
lock
jecxz
dec
dec
stos
aaa
sbb
adc
dec
popf
mov
inc
inc
leave
xor
movsb
lds
mov
dec
fdiv
jo
cmp
dec
mov
insl
adc
in
push
arpl
pop
xchg
dec
sahf
ds
dec
imul
pop
dec
and
adc
dec
ret
push
push
out
dec
or
xor
dec
mov
fldenv
outsb
mov
dec
xchg
push
imul
and
cmp
sbb
dec
je
xor
stos
push
jns
inc
rcrl
xchg
mov
cltd
jo
cmpsb
std
dec
cmp
sub
push
call
sub
xchg
orb
sbb
lret
push
imul
add
test
fsqrt
push
push
dec
enter
sub
mov
push
push
addr16
push
dec
inc
mov
lret
lahf
cs
sti
push
aad
sahf
scas
mov
add
je
dec
add
cmpsl
repnz
dec
fisttps
sbb
sbb
sub
cmpsb
jbe
aas
push
push
in
pop
jns
mov
dec
cmc
fstps
lods
dec
jmp
and
stc
push
inc
adc
clc
insb
dec
pop
sbb
fbstp
dec
repnz
scas
invd
mov
sub
xor
inc
mov
jmp
sub
pop
enter
jl
pop
test
in
mov
out
xchg
jns
roll
and
ret
sub
or
loop
imul
pop
mov
aaa
test
dec
mov
insb
in
ds
push
dec
cli
adc
mov
xchg
inc
add
imul
dec
dec
dec
leave
in
mov
jmp
xor
pop
nop
clc
icebp
mov
cmpl
mov
push
movsl
int
outsl
sub
xchg
push
mov
loop
cmc
dec
shlb
sub
outsl
push
push
pop
dec
ret
cmpsb
pop
mov
mov
jecxz
push
or
cs
jb
dec
mov
mov
jg
inc
aam
sub
loope
adc
pop
call
sbb
daa
xchg
xchg
push
jmp
mov
inc
dec
push
mov
cli
inc
popf
dec
mov
icebp
fadd
leave
mov
cmp
ret
dec
dec
fisubrl
dec
mov
mov
mov
inc
mov
pop
int3
mov
or
cmp
nop
xchg
imul
sub
mov
dec
push
pop
xchg
or
xchg
leave
mov
stc
sub
std
mov
pop
push
push
loopne
in
sub
in
cmp
mov
pop
and
xchg
fsubrs
dec
out
stos
jb
and
mov
gs
xchg
or
cmp
fstpl
dec
add
pop
arpl
mov
outsl
les
ljmp
imul
inc
jecxz
xorl
add
int3
scas
pop
lret
dec
mov
fst
dec
in
vucomisd
cmp
out
fistl
lods
mov
dec
mov
outsb
push
mov
hlt
fistl
call
sti
or
dec
ret
push
rcll
dec
fcoms
xchg
leave
pop
mov
test
pop
std
jmp
lret
arpl
and
mov
bound
pop
push
or
jp
push
out
xchg
dec
imul
adc
outsb
in
aam
insb
lahf
sub
dec
push
xor
dec
adc
adc
dec
loopne
push
mull
cmpsb
cmc
fidivl
dec
out
add
jp
pop
pusha
daa
dec
repnz
xchg
mov
lret
push
cmc
lret
shl
es
and
dec
mov
imul
add
ret
dec
shll
ds
imul
push
mov
cmc
inc
lret
mov
dec
and
dec
fldt
pop
ret
inc
xchg
jbe
push
out
inc
sbbb
repnz
cmpsb
mov
shlb
dec
sbb
push
dec
sbb
push
insl
mov
pop
lret
repnz
or
imul
ja,pt
inc
sbb
insb
mov
popa
push
cmp
xchg
iret
sub
lock
mov
dec
int3
aaa
and
xchg
push
xor
inc
jge
inc
popl
inc
mov
adc
dec
lods
shll
fsubrs
cmp
inc
or
lods
xchg
int3
dec
sahf
rolb
shll
pop
in
xor
adcb
mov
push
push
pop
or
mov
push
cld
sbb
mov
rcr
popa
lock
cmp
cwtl
and
inc
test
mov
xchg
inc
std
cld
pop
leave
loopne
ret
divb
rorb
or
insl
sbb
pop
orl
aam
adc
imul
lods
iret
in
pop
jmp
push
bswap
push
fidivs
dec
mov
or
mov
push
mov
sub
pop
enter
cltd
and
cwtl
ja
mov
shrb
inc
inc
dec
in
mov
dec
mov
sti
lock
aad
dec
aas
sub
mov
imul
mov
mov
mov
xchg
ficomps
dec
aas
jle
ss
cltd
das
dec
mov
insl
sahf
cmp
inc
inc
pop
dec
xchg
sbb
lcall
fiadds
fnsave
pop
in
jb
mov
pop
xor
test
jnp
dec
jle
pop
shrb
notl
push
dec
pop
imul
dec
xor
mov
stc
inc
cmp
int
fmuls
stos
das
mov
dec
dec
aad
push
mov
pushf
daa
jg
in
cld
out
cmp
push
mov
adc
xchg
loope
popa
ret
xlat
inc
mov
dec
jmp
sub
out
dec
xlat
mov
lahf
orb
les
mov
bound
xchg
xor
jp
loop
sbb
rclb
scas
push
jmp
or
outsl
mov
lret
hlt
lods
cmpsb
arpl
xchg
mov
push
js
enter
pop
mov
fwait
jl
and
inc
popa
dec
loope
scas
cmp
cltd
mov
push
mov
sti
dec
sbb
mov
dec
cmpsb
push
insl
fdivrl
pop
or
sti
pop
popf
cli
mov
push
lea
cmp
dec
pop
mov
jp
ret
dec
jnp
xchg
mov
mov
clc
dec
int3
dec
push
push
xor
add
mov
imul
fwait
xchg
mov
xchg
dec
ss
out
xor
add
daa
sub
movsb
push
sbb
dec
addl
push
dec
leave
jg
data16
movl
jp
dec
and
hlt
sbb
lret
adc
dec
fsts
mov
les
filds
pop
cmp
fs
mov
pop
jg
pop
pop
pop
pop
or
adc
ljmp
mov
inc
mov
xchg
pop
dec
ja
dec
fwait
push
lods
les
mov
jmp
dec
jne
lds
outsl
ss
push
push
shlb
jnp
dec
xchg
cltd
shll
jmp
mov
dec
das
in
xchg
inc
push
jp
out
jne
rclb
loop
jns
movsb
mov
jg
add
jae
lret
or
and
andb
hlt
push
mov
sub
jae
xchg
sbb
aam
dec
sbb
push
mov
jae
and
dec
stos
mov
xchg
popa
test
dec
pop
js
outsb
or
add
push
inc
pop
and
mov
xor
loopne
clc
outsb
sub
test
dec
push
sbb
lods
mov
xchg
fisttps
shl
in
pop
data16
loope
lcall
add
dec
mov
adc
or
stos
dec
repnz
mov
cmp
in
dec
jg
jno
pop
xchg
push
inc
mov
out
test
nop
pushf
xchg
repz
loopne
int
aad
ds
push
cmp
insb
fisttpll
push
xlat
in
sbb
cwtl
imul
dec
or
push
dec
push
enter
cld
loop
dec
inc
push
fcomps
movsb
jns
inc
dec
lea
adc
sub
ret
rclb
dec
out
push
mov
aad
fwait
out
dec
mov
sahf
jbe
daa
incb
dec
mov
fsubl
dec
adc
adc
pop
ss
push
cmp
push
jmp
scas
mov
push
inc
andl
cwtl
lcall
jmp
in
test
mov
shl
jl
pop
dec
rcl
push
xchg
jmp
adcb
movsb
dec
ret
fdivl
std
mov
push
push
jecxz
sbb
out
lods
mov
mov
int
std
jno
sahf
iret
xchg
repz
jns
jbe
cwtl
cmc
lret
and
dec
mov
iret
loope
inc
jle
dec
enter
and
lret
add
mov
movsb
lcall
mov
jle
repnz
or
aad
jp
es
test
dec
add
out
lods
dec
pop
in
pop
int
mov
or
mov
cmp
repz
and
fwait
cltd
pop
push
ds
aad
gs
into
push
and
xchg
stos
cmpsl
push
inc
jns
mov
sbb
dec
fcomps
loope
inc
in
out
adc
xchg
xor
add
test
dec
sbb
push
dec
arpl
fldl2t
mov
push
push
shl
fmuls
rcrl
loop
icebp
ficoml
dec
cmpsl
jo
imul
mov
shrl
pop
in
dec
dec
lret
mov
fwait
dec
adc
jno
fs
repz
mov
inc
dec
ret
pop
test
in
cwtl
orl
push
dec
loopne
xor
mov
dec
jle
and
scas
mov
pop
cmpsb
xchg
lock
shrl
rolb
xor
cmp
inc
and
mov
lea
xchg
xchg
pop
call
sub
mov
dec
jae
dec
cs
test
ljmp
mov
scas
roll
lods
dec
mov
dec
xchg
xor
jmp
sahf
or
cmpsb
push
add
add
shlb
dec
cmc
loope
push
jae
sbb
inc
jo
xchg
jb
mov
clc
or
xchg
jmp
dec
lcall
add
int3
clc
jmp
into
jne
in
in
dec
mov
add
rorl
mov
push
mov
decl
aaa
ficoms
sbb
test
add
pop
out
mov
mov
inc
mov
jo
xor
sbb
mov
imul
jmp
ja
push
jae
mov
in
jo
push
pop
imul
dec
outsb
ljmp
mov
sti
pop
push
cmpsb
aaa
xor
inc
cmpsl
xor
xor
push
xor
cs
pop
ja
test
dec
push
push
shrb
dec
push
stc
jmp
popa
dec
push
sbb
adc
fs
in
dec
and
mov
mov
push
call
into
xor
leave
das
or
dec
push
adc
lret
add
dec
pop
adc
mov
test
mov
dec
lret
mov
jle
cmpsl
or
aad
mov
sbb
pop
int3
movsl
dec
dec
mov
outsl
idivb
test
adc
sahf
jns
rcr
push
dec
inc
jnp
imul
imul
pop
sti
mov
sub
xchg
xchg
pop
jle
cvtdq2ps
dec
push
mov
mov
mov
adc
sahf
mov
mov
mov
gs
repz
mov
sub
out
jg
push
cmc
js
dec
pop
and
mov
dec
pop
mov
test
dec
shlb
xchg
lret
repnz
add
sar
pop
dec
cmp
lahf
sub
dec
jg
mov
xchg
jmp
xchg
sub
repz
mov
daa
movsl
push
movsb
rcrb
xor
fsubrs
repz
cltd
cwtl
push
dec
xorb
iret
or
jecxz
inc
aad
imul
outsb
dec
xor
sbb
and
xchg
movsb
test
out
dec
icebp
ja
shll
push
sub
mov
out
sub
pop
inc
sbb
sahf
or
add
fcoml
es
ret
aam
pop
mov
orb
mov
pop
sbb
js
jns
int
xchg
cmc
push
cmp
pop
enter
es
push
icebp
sub
dec
mov
mov
pop
ret
xorl
sub
xchg
or
sbbb
mov
cltd
push
add
lock
xor
sub
pusha
nopl
jbe
fadds
ljmp
sub
pusha
push
in
enter
and
call
addr16
cwtl
orb
loopne
cli
scas
test
or
daa
sti
and
lods
dec
aad
adc
loope
add
add
pop
jmp
cmpsl
mov
jo
clc
ret
ficoms
mov
push
aam
lea
push
dec
adc
pop
jae
stc
inc
movsl
out
dec
fildl
sbbb
inc
lret
in
sbb
xchg
inc
jb
xchg
or
mov
hlt
mov
les
pop
out
aaa
ja
lods
movsb
push
mov
push
ss
xor
arpl
mov
dec
cmpb
decl
sarl
popf
cmp
sbb
adc
dec
es
xchg
test
sbb
cli
mov
outsl
dec
fidivs
in
repnz
lret
dec
push
cmp
push
adc
mov
fists
inc
decb
sbb
mov
addb
push
out
out
out
test
xor
ja
xchg
adc
dec
jle
stc
adc
mov
aas
mov
imul
aas
pop
jne
aad
dec
adc
sub
inc
popf
test
push
mov
mov
test
loop
fisttpll
xor
jl
dec
jmp
inc
mov
aad
outsl
dec
add
loopne
enter
xor
daa
dec
jmp
aaa
fildll
sbb
xchg
push
fildll
dec
popf
cmp
shll
movsl
outsl
loopne
cmp
adc
aas
jo
dec
jp
stos
into
dec
mov
outsl
cs
filds
out
push
cltd
fmull
xchg
dec
and
dec
add
inc
mov
add
aam
dec
cltd
scas
mov
stc
dec
mov
out
mov
leave
leave
xchg
inc
sub
cmp
mov
jl
pop
or
dec
sub
test
adc
roll
into
rclb
xchg
sbb
imul
xor
dec
push
xor
mov
push
push
in
xchg
data16
xchg
sub
cmp
jecxz
mov
xchg
sbb
pop
pop
dec
inc
or
dec
dec
or
mov
popf
xor
es
ja
lods
outsb
push
cli
dec
cmp
je
lock
fisttpll
enter
sbb
lods
imul
push
adc
adc
mov
sub
dec
nop
shll
call
into
lret
xchg
mov
xor
stc
dec
jne
inc
dec
pop
and
cmpsl
dec
mov
adc
dec
mov
lret
pop
mov
data16
xchg
out
bound
into
mov
movsl
insl
dec
mov
test
xchg
and
inc
daa
dec
cmp
or
add
dec
cli
xchg
dec
add
fucomi
movsl
notl
imul
add
cwtl
sub
pop
imul
cmc
fwait
mov
cmpsl
dec
hlt
xor
adc
cmp
lret
add
jp
es
xchg
push
inc
lods
mov
xchg
push
xchg
and
and
dec
xor
adc
sti
mov
imul
pusha
mov
mov
andb
repnz
xchg
cmp
dec
sbb
mov
dec
jg
push
fwait
pop
adc
pop
dec
mov
xchg
ret
aas
mov
in
int
jmp
dec
ds
sbb
insb
add
jns
mov
cwtl
mov
inc
lock
ret
dec
xchg
xchg
xchg
push
pop
jle
sub
mov
movsb
mov
in
psllw
or
add
xor
ret
adc
loop
push
iret
xchg
inc
pop
dec
addb
cmp
lea
push
pop
push
fsubr
jb
dec
and
jo
dec
push
out
lret
mov
dec
stos
add
imul
cmp
icebp
cmp
cmpb
push
lcall
iret
xchg
cmp
movsl
jp
ret
pop
dec
xor
inc
lret
or
mov
sub
jg
jno
push
push
inc
cltd
repnz
dec
std
mov
inc
iret
enter
sub
pop
cmovge
dec
sbb
cld
adc
mov
mov
movsl
push
enter
and
std
jae
popf
push
pop
in
es
dec
dec
mov
mov
pop
mov
fs
add
cs
and
push
mov
dec
orb
lds
sub
cmp
rcll
sub
dec
jo
jl
lods
daa
push
out
xchg
in
jp
stc
dec
iret
fldt
gs
sbb
movsb
jb
dec
fimuls
mov
dec
mov
xchg
loopne
les
or
sbb
push
cli
imul
and
mov
mov
dec
jge
rcr
shlb
xor
in
jo
mov
dec
dec
cmpsl
sub
mov
pushf
sbb
in
sub
ja
pop
dec
cmp
jp
lods
push
dec
popa
xor
inc
mov
pop
pusha
or
mov
or
out
roll
nop
sarl
mov
loope
mov
jge
dec
aas
popf
lret
loopw
lcall
jle
in
dec
icebp
lcall
dec
inc
add
rcrb
adc
fdivrl
lods
fnstsw
out
or
jl
push
or
inc
sbb
scas
xchg
mov
aaa
loopne
jno
pop
lret
in
daa
adc
xchg
ja
push
insl
sub
cs
mov
mov
arpl
scas
int
dec
loope
xor
dec
inc
push
cmp
loope
add
notl
and
inc
into
pop
mov
mov
jb
pop
dec
sub
xor
jmp
loop
push
inc
insl
mov
push
mov
cmpl
mov
leave
imul
gs
lock
jo
push
clc
in
dec
repnz
es
fwait
push
push
sub
mov
pop
sbb
pusha
cld
imul
mov
out
mov
test
jno
mov
mov
cld
jle
popf
push
dec
mov
pop
icebp
adc
stos
mov
dec
xor
dec
fadds
ficomps
adc
ja
mov
dec
shrl
jne
lds
pop
loope
push
mov
push
push
ja
push
js
fsts
jmp
dec
fwait
inc
das
pop
pusha
aaa
sub
dec
push
xchg
jne
or
rolb
or
movsl
lea
xor
stc
loope
and
dec
pop
or
xor
xchg
push
push
notb
repnz
or
mov
sub
mov
fs
test
dec
mov
arpl
add
cmp
mov
cmp
int
aad
insl
addb
jnp
pusha
mov
aas
popa
pop
adc
test
mov
sub
hlt
pop
and
jecxz
sub
fistpl
outsb
jno
dec
leave
push
divl
xor
mov
dec
fld
int
bound
or
jne
loop
mov
mov
add
or
ss
imul
mov
xchg
fimuls
mov
pop
mov
push
push
mov
dec
mov
jecxz
sub
testl
or
insb
and
push
test
mov
les
lock
dec
jne
mov
lcall
mov
pop
iret
jmp
hlt
scas
dec
enter
rorb
icebp
sbb
and
stos
dec
out
and
dec
ljmp
scas
in
mov
pop
mov
push
jns
cltd
fcompl
lods
dec
and
test
jnp
ljmp
mov
jae
rolb
jmp
jnp
push
sbb
or
mov
mov
es
mov
push
push
pop
push
ret
aam
cmpsl
pop
dec
orb
add
out
pmullw
mov
jmp
xlat
cmp
arpl
jge
cmovae
mov
sar
addr16
and
dec
sub
push
mov
mov
pop
enter
and
mov
push
addr16
sbb
lods
inc
iret
cltd
mov
and
sti
dec
imul
es
cmc
dec
mov
dec
sbb
pop
into
cmpb
dec
daa
subb
gs
push
orl
ljmp
pusha
gs
fs
xchg
adc
jge
fwait
dec
popa
xchg
popf
xchg
pop
lret
int3
and
push
xor
sbb
jb
xchg
inc
into
loopne
mov
sbb
stos
imul
pop
push
int
call
jle
arpl
and
pop
testl
loope
ss
rol
jl
into
jle
dec
jg
adc
push
dec
jo
addr16
inc
aas
xchg
dec
mov
mov
lahf
dec
in
ljmp
cmp
jbe
aas
cld
add
test
lret
outsb
pop
dec
dec
in
sti
outsl
xlat
xor
ficomps
jle
leave
push
push
addr16
dec
mov
dec
inc
xchg
mov
xor
rcrb
andl
or
push
lret
jmp
notl
cmp
jecxz
loopne
fisttpll
and
cs
mov
or
dec
push
faddl
lret
sti
scas
mov
aam
pop
ja
loopne
dec
jge
outsb
std
push
daa
aas
mov
repz
mov
insl
pop
cmp
insb
inc
test
popf
jge
push
loope
dec
call
cwtl
xchg
fs
dec
add
xor
sbb
push
mov
dec
jmp
outsl
mov
or
pop
int3
shlb
xor
add
or
imul
inc
sub
shlb
dec
xchg
sub
sub
or
sub
repnz
rcll
mov
dec
test
stos
xchg
movsb
dec
test
push
fucomi
rolb
adc
rcl
push
sbb
sbb
dec
inc
enter
ret
loop
mov
dec
xlat
in
es
ffreep
cmp
clc
and
ss
aam
int3
pushf
push
pop
xchg
inc
dec
pop
mov
test
inc
ljmp
dec
add
cli
popa
test
or
jne
push
sub
inc
scas
pop
jbe
or
jmp
insb
mov
vrsqrtss
ss
into
sub
adc
dec
pop
inc
out
dec
add
add
nop
sbb
lahf
call
into
add
xor
dec
jns
mov
jne
dec
push
pop
dec
popa
lsl
push
in
jnp
popf
inc
or
andb
or
les
sub
push
add
sub
fs
jmp
sbb
pop
aam
or
cmp
es
cmp
addr16
sub
pop
stos
push
xchg
dec
cld
fwait
or
shl
inc
hlt
dec
sbb
xor
mov
sbb
pusha
rorb
jl
sbb
mov
stos
jge
add
ja
lods
sub
push
std
add
push
cld
dec
jno
popa
push
roll
inc
mov
cmc
xlat
lea
and
mov
pop
out
sub
inc
mov
out
xchg
dec
call
movb
mov
sbb
jl
xor
dec
or
pop
inc
mov
das
imul
xchg
sbb
sbb
push
mov
dec
push
inc
lods
lret
dec
outsb
add
dec
lock
adc
aaa
lret
push
jno
mov
dec
insb
fwait
inc
xchg
dec
pop
xchg
movsb
in
or
lea
jns
icebp
sub
mov
push
out
or
adc
stc
sub
push
ds
inc
cmpsl
inc
aas
jnp
cmp
decb
sub
and
adc
xchg
mov
popf
outsl
dec
push
jbe
sbb
and
mov
jnp
jge
cmp
sbb
dec
dec
push
push
push
inc
ret
sbb
mov
xchg
gs
cld
loope
mov
dec
xor
push
int
popa
dec
pop
jns
xchg
mov
sbb
cltd
xor
icebp
jge
iret
sbb
and
mov
cmp
test
mov
loop
lret
ror
dec
enter
and
int3
dec
add
xlat
pop
addr16
data16
jmp
pop
add
lock
aad
sbb
addb
ja
scas
pop
jnp
cwtl
cmpsl
dec
push
mov
loop
ret
dec
fisubs
mov
pop
mov
cmp
mov
loopne
call
lods
cmpsb
fmuls
xchg
sub
pusha
stc
mov
dec
jmp
pushl
push
inc
sbb
pop
or
jle
dec
repz
sub
or
imul
sbb
sub
arpl
dec
pop
mov
adc
push
dec
sub
push
nop
adc
rcrl
dec
and
in
push
pop
add
in
cmpsl
cltd
push
cli
mov
inc
xor
in
dec
xor
imul
adc
xchg
out
popa
jo
mov
int3
xor
pop
add
dec
in
mov
pop
imul
dec
xchg
test
dec
loopne
push
sbb
and
lret
loop
test
cld
scas
sub
push
outsl
ss
js
sahf
mov
lret
sub
pop
jecxz
or
dec
xchg
fildll
xchg
adc
dec
or
push
mov
and
fdivrs
in
shl
mov
dec
jg
daa
pop
movsl
gs
pop
pop
rorl
jge
out
push
cmc
cmp
dec
mov
test
popf
or
mov
pop
xchg
cmpsb
inc
cs
cmp
or
sahf
jp
lcall
mov
stos
xor
fwait
push
inc
popa
sub
add
dec
xchg
mov
subl
int3
loopne
rorb
scas
into
sub
aad
dec
js
adc
push
and
nop
test
mov
mov
mov
fisttpl
push
or
imul
xchg
dec
mov
shrl
mov
mov
jmp
cli
pop
rclb
lock
scas
mov
push
jns
in
mov
adc
int3
dec
or
jle
dec
movsl
push
push
fstl
push
rolb
jnp
scas
aad
out
movsb
push
inc
test
lds
imul
dec
outsl
dec
adc
gs
push
pushl
nop
movsb
data16
xor
mov
les
lcall
dec
pop
add
and
dec
mov
lock
sub
cli
mov
lcall
bound
mov
dec
movsl
into
aaa
pusha
xchg
mov
mov
and
jnp
cmp
pop
imul
dec
rcr
inc
ljmp
or
insb
loope
sub
jle
jmp
add
cld
nop
enter
xchg
sbb
dec
scas
and
or
shr
hlt
fwait
mov
ficompl
push
outsl
out
jmp
mov
dec
sbb
xor
xor
mov
pop
test
test
pop
jnp
and
adc
outsb
jecxz
dec
lds
mov
mov
addb
scas
bnd
cli
fwait
shlb
cmp
push
lea
sbb
dec
push
inc
pop
ljmp
add
cli
mov
aaa
paddq
sub
and
sbb
jbe
or
mov
mov
cwtl
cltd
add
push
jbe
push
aaa
out
push
call
popf
pushf
adc
dec
jnp
movsb
or
aam
mov
icebp
pop
and
lret
pop
push
push
imul
popa
lods
dec
cmp
cmc
xchg
mov
mov
les
and
dec
jmp
mov
pop
mov
dec
mov
arpl
icebp
aad
lret
call
test
in
sub
in
mov
insb
pop
add
xchg
adc
mov
fwait
ret
xchg
adcl
mov
push
push
jns
mov
ja
je
pushf
mov
std
or
movsb
iret
mov
sub
xchg
stos
jl
cmovns
in
or
or
jns
negl
mov
mov
es
adc
inc
and
dec
imul
gs
inc
sbb
daa
mov
lahf
mov
loope
mov
clc
iret
daa
es
mov
add
xchg
push
inc
pop
pop
dec
cmpsl
sub
or
clc
dec
mov
ficomps
cmp
aas
xor
cld
push
pop
mov
mov
sbb
fdivl
adc
xchg
push
mov
jb
dec
mov
pop
lret
mov
jne
jae
xor
aas
push
pop
dec
les
fldcw
sbb
sub
mov
pop
inc
fsts
pop
mov
fmull
jnp
test
and
aam
jo
pop
adc
xchg
icebp
scas
sti
in
aad
sub
push
xchg
xchg
cmp
and
adc
addb
push
push
mov
sub
dec
xlat
bound
xor
jnp
dec
pop
or
hlt
jle
fwait
cmp
mov
jb
dec
xchg
std
mov
cmovns
ret
sub
add
imul
dec
xor
sub
outsb
dec
sbb
cmp
push
fldl
pop
fidivl
push
push
inc
test
inc
dec
pop
or
jecxz
jbe
loopne
dec
dec
mov
bound
aaa
push
mov
popf
adc
imul
inc
mov
imul
push
sbb
sub
mov
fidivrl
push
les
ljmp
mov
sub
mov
xchg
outsl
jmp
add
push
mov
incl
arpl
mov
xchg
js
pop
out
cld
dec
xor
leave
dec
jl
sub
dec
adc
js
dec
mov
push
lret
stos
ret
mov
test
fwait
jl
or
std
out
push
and
icebp
out
sbb
push
loop
mov
scas
dec
dec
test
mov
or
dec
mov
fldl2t
out
dec
insb
dec
cmp
dec
int
jp
xchg
shlb
xor
lret
push
adc
mov
adc
das
inc
hlt
sub
mov
pop
push
test
imul
ret
clc
mov
in
jmp
push
lds
dec
mov
ss
int
mov
fs
jae
pop
aad
jl
inc
gs
call
push
add
das
scas
imul
fisttpll
scas
adc
mov
test
ror
aad
cmpsb
imul
push
bound
outsb
out
movsl
loope
subl
push
sub
aam
dec
jmp
xor
jmp
dec
mov
dec
stos
dec
idiv
fwait
pop
xchg
lret
aam
push
je
rcll
inc
add
cmp
adc
dec
movl
out
push
pop
mov
xor
imul
mov
leave
lods
jp
inc
jo
mov
cltd
add
jno
dec
push
aas
dec
in
push
mov
xchg
dec
mov
cmpsb
pop
inc
test
fs
mov
jo
pop
outsb
pop
shlb
inc
cs
mov
xorb
mov
lret
cmp
and
jg
loop
pop
xchg
dec
rcll
xchg
inc
dec
lea
repz
addr16
int
dec
and
dec
sbb
insb
xchg
cmp
push
mov
sub
and
jle
lock
sbb
push
dec
aaa
add
mov
mov
mov
mov
inc
rorb
clc
xchg
lea
icebp
popa
sub
and
xchg
lds
lret
test
sbb
scas
dec
push
jge
rol
lods
mov
dec
dec
fstpt
dec
nop
xlat
mov
adc
mov
dec
cltd
push
cmpsl
push
shlb
xorl
or
sbb
daa
fnstcw
dec
or
push
sub
into
cmp
cmp
std
ret
int
xor
mov
mov
push
sbb
addl
pop
sub
dec
nop
xchg
movsb
sbb
movaps
mov
jbe
pop
fwait
push
sbb
pushf
sbb
mov
enter
sbb
stos
add
jne
mov
movsl
xchg
pop
mov
lahf
and
push
sti
xlat
or
aad
ljmp
dec
pop
sbb
je
cmp
mov
mov
dec
adc
imul
mov
jle
dec
and
hlt
repnz
gs
js
pop
shll
mov
stc
call
and
mov
dec
sbb
push
and
mov
test
shll
xchg
fucom
out
add
adc
sbb
dec
push
movsb
arpl
jge
xchg
push
daa
dec
pop
mov
sbb
add
test
sti
adc
mov
out
inc
dec
jo
mov
xor
sub
imul
lret
adc
in
sbbb
adc
mov
popa
mov
jl
or
push
sub
addl
fwait
cmp
sbb
mov
dec
pop
cmpsb
mov
lret
push
sbbb
movsl
sub
xorl
or
inc
or
daa
dec
outsl
xchg
aas
nop
dec
cmpsb
push
or
xchg
arpl
jecxz
pop
fnsave
xor
cs
cmpsb
pop
dec
or
mov
sahf
dec
inc
shl
mov
jmp
loopne
pop
add
dec
notl
push
add
shl
xor
mov
aad
into
popf
dec
sub
loope
push
testb
dec
cmp
sbb
dec
mov
or
adc
jae
mov
and
cmc
dec
or
test
ret
repz
int
mov
imul
mov
mov
xchg
add
out
push
pop
push
mov
pop
cmpsl
fldt
sti
push
lret
sbb
lret
inc
jg
ja
pop
stos
dec
cli
sbb
push
loope
lods
push
mov
sub
cltd
add
imul
xor
icebp
dec
mov
sub
imul
push
dec
test
inc
xchg
data16
add
mov
mov
lcall
pop
jmp
xor
mov
sub
jle
ja
fdivr
dec
xchg
fistl
jmp
imul
sarb
cmp
jp
lods
int3
loop
out
dec
mov
and
xchg
call
into
hlt
loop
das
dec
enter
leave
mov
jne
fstps
xor
mov
test
xlat
pop
jmp
lret
jl
inc
and
into
dec
rorl
mov
das
bound
adc
movsl
add
or
xchg
call
imul
dec
inc
cmp
adc
sub
sbbl
ss
in
out
divl
mov
pop
xor
dec
jmp
int3
push
sub
testb
sbbb
mov
and
cmp
fimull
inc
jge
jo
xor
dec
jecxz
inc
jno
sbbb
jb
dec
mov
dec
xor
cmp
dec
inc
lret
sub
xchg
cmp
jle
dec
mov
push
mov
sbbb
repnz
mov
pop
shrb
stos
fistps
pop
pop
out
jg
add
pop
cmp
push
jge
adcl
int
jno
jl,pt
fistpl
insb
mov
pop
dec
repz
rorb
dec
push
in
mov
sub
pop
push
dec
fisttpll
inc
jae
icebp
movsb
rclb
lea
fwait
push
rcll
bound
stos
popf
out
cs
or
jmp
sub
mov
inc
loope
push
xor
and
adc
cld
dec
jnp
inc
mov
pop
push
xor
sbb
dec
jmp
sub
cmp
lods
dec
push
mov
imul
pop
pushf
xor
dec
dec
ficompl
ret
out
xor
mov
hlt
jns
dec
sub
mov
adc
xor
iret
stc
lock
bound
fisubl
adc
ss
mov
in
popf
dec
mov
push
dec
enter
and
hlt
call
packuswb
dec
cmp
mov
dec
insl
out
sti
loope
xchg
aad
dec
mov
cltd
add
je
and
pop
push
loop
dec
cmpsl
js
movb
lret
fimuls
and
scas
mov
xor
ja
dec
dec
lahf
inc
enter
testl
sbb
stos
fcmovne
and
das
sbb
rcrl
or
stos
inc
or
push
scas
sub
sbb
fmuls
xchg
dec
or
jb
push
mov
mov
dec
dec
insb
shl
pop
and
dec
testl
push
mov
pushf
cmp
in
dec
adc
lret
cld
cmp
into
test
pop
fdiv
add
lock
mov
daa
dec
and
jb
xlat
mov
push
xor
push
xchg
fistpll
outsl
in
dec
push
cmc
ja
mov
sub
xchg
xor
mov
mov
dec
mov
sub
hlt
add
mov
push
jl
js
call
lods
jecxz
mov
outsb
cs
aam
or
dec
fcompl
inc
push
or
dec
xor
inc
mov
mov
pop
ja
hlt
inc
lods
daa
test
popf
push
jmp
fnstsw
xor
push
popf
ljmp
and
dec
insl
pop
push
cmp
pop
adc
dec
std
pop
dec
jp
loopne
dec
dec
fs
cltd
mov
aam
dec
mov
ljmp
popf
xor
inc
xor
imul
jb
orb
aam
dec
mov
out
and
push
push
sub
xchg
jno
mov
jl
pop
inc
dec
or
pop
stos
adc
test
xchg
mov
adc
dec
aam
dec
mov
dec
add
sub
mov
or
dec
lcall
cmp
jmp
test
pop
jmp
push
dec
pop
lcall
stc
mov
push
ja
cwtl
adc
test
cmp
mov
dec
sub
dec
inc
lds
cmp
dec
jne
cmp
dec
xchg
dec
cmp
mov
adc
nop
mov
jmp
call
cmp
lods
mov
outsl
nop
jne
stc
fsubp
pop
out
sub
mov
mov
xor
adc
push
inc
and
sub
mov
pop
aad
bound
cmp
cmpsl
pop
les
xchg
mov
clc
testb
loope
cmp
mov
mov
test
stos
cmpl
lea
jge
ficoml
jo
ja
js
dec
outsb
inc
or
push
jnp
pop
dec
sub
popf
mov
jg
mov
pop
xor
in
jns
pop
pop
lret
lea
add
call
push
adc
xchg
rcrb
cmc
cli
ret
dec
inc
and
pop
aad
adc
dec
inc
aaa
in
mov
sub
jno
mov
dec
cmp
gs
inc
cmpsb
sbb
pop
jg
mov
ret
cmpsl
mov
aam
xchg
push
xchg
sub
int
inc
dec
ds
test
sbb
fisubl
in
push
rolb
daa
cwtl
push
movsl
lret
cmp
mov
pop
icebp
push
aaa
push
out
dec
mov
jge
loope
inc
dec
adc
mull
cmpsl
cmp
shrl
lahf
cld
sub
in
adc
pop
push
addr16
hlt
pop
fdivrp
ret
lods
dec
xor
imul
pop
push
aam
dec
mov
in
mov
cmp
push
dec
mov
shrb
jbe
jp
addr16
decl
cltd
ds
loop
cmp
jmp
jle
inc
push
mov
mov
xchg
divl
dec
cmp
pop
jmp
pop
xor
inc
xchg
or
push
cwtl
jns
loopne
cmp
cmp
mov
cltd
mov
add
outsb
fs
mov
sub
clc
dec
cmpsb
pcmpeqb
xchg
jo
loope
push
dec
subb
cmp
inc
push
xor
and
add
push
stos
movsl
fcoms
mov
lahf
jae
ret
sti
sbb
mov
jmp
pop
add
push
out
pop
pop
jmp
push
dec
lcall
cmp
je
in
sti
push
mov
nop
stc
gs
inc
lahf
lods
dec
sub
out
scas
inc
xor
dec
sub
xor
jb
data16
das
and
cmp
flds
lods
mov
pop
xchg
out
out
es
les
inc
fildll
xchg
or
pop
xchg
mov
dec
push
mov
xlat
push
mov
add
dec
xchg
daa
and
jmp
fsts
dec
push
loop
jo
fisttpll
jnp
nop
mov
dec
aam
pop
in
pop
mov
push
cmp
sbb
lret
lock
pusha
inc
dec
inc
in
test
lcall
in
fwait
mov
xlat
inc
loope
xor
jle
pop
movb
mov
ffree
mov
rolb
fmuls
loop
stos
add
dec
stos
les
and
dec
jae
mov
push
dec
dec
sbb
movsl
cmpsb
fnstsw
leave
jns
loopne
pop
je
mov
jmp
lcall
dec
movl
dec
dec
push
mov
insl
xchg
dec
mov
daa
aad
decl
push
jl
pop
std
add
push
jo
dec
fdivs
xchg
loope
mov
ret
pop
push
sub
add
ljmp
mov
mov
add
cmc
dec
mov
add
dec
shrb
mov
add
sub
add
out
dec
push
repz
and
xor
sbb
pusha
mov
stos
sub
push
test
fidivl
inc
and
clc
imul
inc
jmp
dec
jae
pop
data16
adc
je
pop
in
popa
cmp
dec
fcomip
fucom
cmp
pop
cmp
push
imul
jae
pop
mov
push
xchg
xchg
push
pop
sbb
cwtl
dec
stos
jmp
ja
dec
icebp
xchg
push
pop
or
mov
es
aad
push
dec
xor
pop
pop
sbb
ss
jp
adc
cmc
insl
xor
sbb
nop
ss
in
mov
and
and
jl
lea
jne
lcall
fsub
jae
test
jmpw
inc
inc
lret
movsb
dec
cmc
and
add
or
dec
mov
stc
and
dec
mov
cmp
jg
push
imulb
mov
sbb
inc
fdivs
rorl
jmp
fwait
xor
dec
jns
in
adc
hlt
mov
fs
add
int
pusha
or
jge
leave
xchg
cmc
and
lcall
repnz
cmpsb
inc
aam
ds
arpl
mov
xchg
mov
xchg
jo
stos
cmc
dec
sbb
xlat
xchg
push
jmp
shr
scas
pop
mov
dec
cmpsl
inc
enter
xor
or
jecxz
mov
jmp
in
cmp
lret
call
inc
dec
rorl
aaa
pop
imul
stos
adcl
scas
imul
sbb
insb
out
sbb
bound
dec
cwtl
or
inc
jmp
cld
cmp
aaa
jo
xchg
dec
push
jae
pop
jge
adc
dec
inc
mov
les
push
jle
icebp
xlat
hlt
jne
shll
ja
call
jb
in
in
pop
xchg
dec
pop
arpl
nop
dec
sahf
push
fdivs
dec
fmull
mov
imul
or
lea
fmuls
push
scas
insl
pushl
push
dec
fsts
jne
jmp
push
cli
dec
push
int3
mov
subl
pop
ret
in
xor
dec
popa
cmp
xchg
or
jns
dec
repz
jle
pop
dec
mov
push
add
push
iret
sub
mov
adc
repnz
xor
mov
test
mov
imul
imul
add
jmp
fiaddl
fwait
sbb
push
lahf
or
dec
sti
xor
xchg
pop
dec
es
repnz
je
and
pushf
sbbb
stos
ja
jmp
clc
rcll
fiadds
lods
cmp
or
jecxz
dec
fmul
lret
dec
fsubs
stc
mov
gs
or
mov
movsb
dec
inc
xchg
fwait
jle
loop
stc
mov
pop
insb
loopne
jmp
dec
mov
daa
cmp
push
pop
mov
dec
jg
mov
dec
lret
adc
repz
shll
xchg
ja
add
adc
dec
test
sub
dec
mov
pusha
je
int3
in
xchg
fnsave
pop
rclb
imul
test
ljmp
cmovns
adc
clc
dec
fdivs
push
xchg
push
inc
push
sub
sub
hlt
stc
lock
dec
jo
dec
sub
jl
inc
cmp
dec
outsl
icebp
dec
movsl
rcrl
mov
addl
xlat
sub
push
lret
iret
cs
dec
or
add
adc
inc
mov
or
leave
dec
adc
and
daa
mov
adc
insl
sbb
cmp
popf
ds
loope
lock
mov
cltd
int3
or
and
xchg
dec
mov
mov
xchg
es
loopne
int3
adc
xor
add
lret
push
movsb
lret
inc
dec
mov
cli
inc
pushl
leave
ret
jle
dec
sub
inc
sbb
push
dec
js
out
push
pop
and
xchg
dec
rcr
xchg
insl
jle
rorb
push
sbb
xchg
imul
dec
insb
mov
push
inc
in
addl
fisttps
add
imul
xor
and
dec
mov
dec
ja
ljmpw
cmc
push
and
lods
dec
cmp
adc
test
ja
or
add
fimuls
or
lds
cltd
mov
adc
fs
push
dec
fcomp
cmp
dec
push
and
enter
into
les
das
cmp
movsl
push
mov
dec
fimull
sub
cmpsb
mov
test
push
aas
jmp
lret
dec
iret
in
and
ja
dec
or
mov
stos
mov
pop
into
mov
cltd
not
push
mov
mov
in
lahf
jae
jmp
dec
add
dec
fdivl
call
rcll
movsl
cwtl
bound
pop
lret
cltd
rorb
pop
jb
call
hlt
mov
mov
fidivl
repz
int3
sub
push
xor
mov
or
inc
mov
cmc
mov
into
popf
out
pop
ds
mov
das
mov
dec
and
or
dec
outsb
test
inc
insl
xchg
pop
push
inc
dec
aam
cmpb
xchg
sbb
leave
pop
rclb
test
sbb
mov
pop
adc
xchg
mov
sub
repnz
repz
dec
jae
push
dec
je
shll
sbb
insb
add
out
mov
mov
adc
lock
int
xchg
sub
or
popf
mov
push
push
cmp
imul
jbe
dec
out
cwtl
icebp
stc
pop
dec
rcrl
lret
adc
ss
add
inc
lods
xor
push
mov
inc
hlt
fdivr
jmp
xor
xor
jnp
sahf
push
ret
mov
std
nop
xorl
incb
fnstenv
jb
dec
cmp
jl
or
add
jg
xchg
dec
mov
ds
dec
fwait
push
ret
xor
dec
loope
or
je
jns
dec
ja
pop
js
scas
mov
cltd
imul
lahf
std
mov
sub
dec
push
btc
imul
dec
or
mov
enter
xchg
and
inc
add
cmp
cmc
insb
sub
or
lahf
mov
dec
dec
xchg
aad
mov
es
cmp
pop
lea
dec
sub
ds
cmpsl
aad
and
adc
loope
xchg
dec
fidivrs
movsb
xor
dec
push
jg
repnz
dec
dec
jge
mov
imul
cmpsl
sub
xor
loop
sbb
cmp
jb
scas
es
insb
push
push
mov
lods
fimull
cltd
sub
out
cmp
les
mov
sbb
dec
in
arpl
loop
pop
pop
push
icebp
dec
mov
cwtl
decb
dec
out
mov
lods
dec
and
loop
adc
clc
mov
pop
add
mov
pop
jbe
in
pop
shrb
pusha
ja
cmp
rcll
mov
outsb
popa
xor
fiaddl
sub
test
cmc
inc
add
and
mov
push
xchg
pop
rcrl
popa
inc
push
iret
out
decl
clc
in
xchg
adc
movsb
dec
loop
lahf
and
imull
out
movsl
or
in
out
xor
inc
push
mov
jecxz
push
sub
test
aas
repz
cltd
xor
inc
push
mov
rolb
mov
out
test
push
adc
nop
dec
push
out
insl
cmp
mov
arpl
dec
jmp
xchg
lahf
ret
pop
dec
xchg
in
cmp
fldl
lret
fnstcw
stos
jge
inc
dec
xor
mov
je
ds
out
dec
xchg
xchg
push
jg
xor
or
cmp
dec
xor
inc
jbe
pop
mov
xchg
dec
ja
out
lahf
out
leave
bound
les
and
pop
js
sbb
push
in
or
jg
mov
hlt
dec
and
in
mov
xchg
shlb
scas
fidivl
scas
cmpb
imul
fcoml
rorb
loope
imul
jnp
mov
lds
mov
and
mov
cli
in
inc
mov
repnz
fmuls
int
fimuls
adc
jg
push
ja
hlt
in
mov
and
jbe
pop
mov
lds
jp
dec
scas
xlat
adc
stos
sbb
push
mov
mov
out
jmp
out
das
cmp
sti
jne
add
pop
int
rcrb
dec
icebp
sbb
cmpsb
or
sub
repnz
dec
ljmp
bound
test
push
adcl
addr16
xchg
jnp
push
mul
je
aam
out
loop
cmp
lcall
movsl
dec
pushf
std
dec
das
stos
lock
fwait
fs
dec
vmovaps
inc
or
and
add
jge
mov
dec
pop
push
mov
dec
mov
hlt
dec
aaa
dec
fcmovu
pusha
push
sub
arpl
add
jbe
pop
inc
jmp
sbb
jecxz
test
cmc
push
in
dec
mov
and
jno
pop
test
dec
dec
inc
add
dec
mov
aas
pop
dec
cltd
shlb
cmp
pop
dec
lds
ret
leave
mov
sub
pop
and
dec
jl
adc
lock
jo
dec
loopne
fwait
ds
sub
dec
repnz
cs
adcl
xchg
mov
cwtl
push
inc
lods
lock
iret
dec
sub
sub
jmp
scas
icebp
dec
jge
out
stos
inc
pop
mov
lret
xchg
inc
icebp
or
ret
add
dec
test
mov
nop
leave
pusha
pop
mov
scas
test
lea
adc
faddl
push
and
adc
pop
lods
inc
mov
aam
movl
mov
mov
jp
cmp
lret
stc
rep
push
loopne
dec
lock
push
xchg
dec
lret
cld
shlb
ret
jo
xor
cmc
or
inc
int
jns
dec
lahf
pop
or
mov
cltd
xchg
dec
sub
les
dec
inc
iret
jl
pop
sub
stos
mov
push
sub
jbe
dec
aam
sub
pop
xchg
and
es
mov
rorl
and
dec
xor
addr16
enter
sub
dec
aad
dec
data16
aad
jns
es
sub
outsl
add
push
dec
dec
pop
pop
lret
cmp
mov
das
enter
sub
dec
insl
pop
mov
adc
rclb
gs
jle
dec
sbb
nop
jno
xchg
inc
popf
cmp
and
inc
inc
xor
orb
or
jb
push
push
inc
lret
popa
push
xchg
jmp
out
dec
jle
xor
mov
sbb
rclb
lock
dec
mov
mov
xchg
js
daa
jg
cmp
dec
mov
jle
jmp
fildl
xor
mov
dec
stos
leave
pop
in
push
dec
push
lret
stos
cmp
inc
or
dec
into
inc
cmp
repz
inc
adc
fnclex
xlat
dec
sub
jns
pop
leave
lret
jle
jno
jecxz
int
mov
mov
fcoms
and
into
pop
dec
pop
sub
andb
sysret
sub
bnd
cmpsb
in
dec
xchg
mov
jecxz
pushf
mov
dec
pop
imul
push
xor
dec
les
jl
rol
inc
dec
clc
addr16
mov
jmp
loopne
or
imul
rorb
jae
dec
call
push
push
lret
scas
lods
mov
imul
jle
inc
loope
adc
mov
jecxz
push
cmp
inc
push
and
push
or
repnz
push
mov
mov
sbb
jae
dec
mov
int
dec
xor
add
push
dec
xchg
inc
xchg
sbb
xchg
sub
dec
fwait
pop
leave
add
std
sub
dec
icebp
xor
mov
dec
push
mov
stos
xchg
push
pop
orb
in
sarl
popa
rcr
dec
outsl
push
and
inc
sbb
dec
rcrl
xchg
mov
fwait
mov
or
dec
or
rorl
jp
pop
cmp
mov
loop
pop
lahf
cmp
mov
lcall
pop
js
ds
xor
dec
fists
adc
xchg
cmpsb
mov
or
add
clc
vandnps
xlat
dec
popf
adcb
dec
outsb
call
mov
cmpsb
push
jge
jl
into
adc
das
outsb
dec
fstps
dec
fsubr
pop
push
or
dec
pop
cli
jmp
lret
popf
in
push
and
mov
xchg
leave
jmp
daa
cmp
xor
mov
sbb
mov
mov
xchg
ss
ljmp
dec
xor
dec
xchg
punpckhbw
notl
mov
enter
xor
pop
xor
int
shrl
pop
mov
pop
lret
fimull
push
dec
and
inc
sub
push
mov
dec
adc
jno
in
leave
push
dec
orl
repnz
imul
fs
jno
adc
lcall
test
mov
xorl
jno
dec
repnz
dec
xor
sarl
dec
or
popa
jge
jg
pop
cmpsl
push
dec
dec
in
mov
xchg
rcll
repz
pushf
imul
mov
sbb
insb
dec
sti
out
dec
push
mov
mov
mov
xor
int3
xlat
je
ret
jb
xchg
push
inc
ds
jge
jnp
inc
dec
sahf
pop
add
lea
hlt
clc
icebp
cmp
dec
cmp
adc
xor
push
stc
mov
lods
dec
jo
sbbl
fsubl
dec
xchg
dec
mov
pop
xchg
push
imul
lret
inc
cmp
arpl
imul
inc
push
cmp
int3
pop
dec
dec
pop
pop
shrl
and
shlb
mov
xchg
push
jne
fimuls
ret
and
jg
dec
add
jb
jns
adc
pop
mov
lcall
std
out
dec
jg
push
cmp
sub
push
pmaxsw
dec
roll
push
xor
mov
push
cli
fdivrs
fidivrl
jp
xchg
add
sarl
addr16
jno
pushf
mov
inc
pop
idiv
nop
popf
dec
iret
aad
test
rolb
cltd
cmpsb
pop
dec
adc
sbbb
es
sub
jnp
loopne
sbb
in
push
in
mov
dec
jbe
pop
dec
mov
mov
mov
stc
dec
movsl
add
fucomi
lret
sub
test
pop
sbb
daa
inc
jmp
inc
in
xchg
dec
pop
out
push
out
sahf
sub
adc
into
lret
arpl
add
mov
sub
inc
test
ror
mov
cs
sub
adc
enter
testl
mov
pushf
inc
push
in
pop
sub
lret
mov
lods
push
xchg
adc
in
dec
andb
dec
inc
leave
adc
test
push
dec
push
addl
xchg
dec
jmp
xor
icebp
test
mov
sti
dec
pop
push
add
push
push
xchg
dec
push
loop
inc
test
shlb
je
dec
test
dec
stos
or
rcrb
dec
fwait
call
dec
xor
lret
out
jecxz
fmull
fucomp
out
lods
cs
push
jl
xacquire
xchg
mov
jnp
scas
mov
cmp
adc
into
inc
push
insl
jp
jle
dec
xor
iret
popf
dec
add
loope
insb
sub
pop
mov
cmp
push
mov
adc
gs
xchg
fnstcw
mov
jnp
int3
jmp
jbe
push
add
add
pop
jmp
mov
xchg
aad
out
imul
inc
aam
mov
mov
js
mov
push
push
push
dec
pop
stos
mov
inc
data16
incl
shrb
and
shll
pop
xchg
xchg
jns
mov
hlt
mov
idivl
mov
mov
inc
or
push
cmp
pop
loope
pop
aad
push
adc
or
pop
xor
sti
mov
daa
sub
negl
xor
dec
loope
mov
or
mov
scas
lret
inc
jmp
xchg
lds
mov
ss
mov
adc
bound
dec
imul
test
call
mov
dec
dec
das
mov
dec
int3
jne
add
or
dec
jl
dec
cld
lods
test
xor
pop
jmp
daa
dec
sahf
and
xchg
dec
jae
sbb
xor
push
dec
je
movsl
sub
xchg
jmp
xor
mov
add
lods
cmp
or
loop
jae
popa
dec
add
stos
sub
xchg
xchg
cmp
jne
or
mov
scas
std
xor
stos
mov
lods
insl
mov
fistpll
ficoml
adc
sbb
dec
jno
es
xor
mov
xchg
repnz
dec
cmc
xchg
push
jg
or
dec
and
push
pop
cmp
outsb
loopne
popl
push
xor
mov
test
pop
nop
repnz
jle
mov
jns
push
xchg
popa
jg
imul
dec
mov
adc
dec
repz
scas
int
enter
ss
cs
insb
ja
push
push
sti
dec
add
mov
lcall
test
arpl
jb
in
dec
sbb
xor
lcall
xor
leave
adc
xchg
mov
inc
sahf
mov
insb
jp
jge
movsl
dec
pop
icebp
push
lods
xchg
cmp
push
inc
mov
dec
push
or
push
dec
insb
add
push
or
cwtl
mov
adc
xchg
dec
out
sbb
or
inc
push
ds
push
lea
dec
cwtl
addb
pop
mov
xchg
adc
dec
cmpsl
cmpps
test
or
pop
inc
jns
adc
call
dec
jne
lahf
sub
inc
sbb
iret
mov
out
sets
jbe
dec
inc
push
test
testl
sbb
or
xor
imul
addr16
jmp
mov
fwait
lahf
lret
sti
jle
inc
aad
pop
test
dec
add
nop
push
dec
sub
insb
stos
cmpsl
cs
xlat
xorb
stos
clc
pop
lret
or
aas
cmp
push
inc
push
scas
gs
push
std
dec
pop
dec
fistl
xchg
shr
xor
stc
xlat
jbe
push
xchg
out
sbb
leave
inc
sbb
dec
jb
je
inc
add
stc
idivl
xchg
xchg
out
sub
xor
sub
cmp
scas
jp
arpl
inc
sub
jl
mov
mov
jle
outsb
push
repnz
lea
clc
dec
insl
push
ret
jo
ja
in
pushf
mov
rclb
in
add
inc
int
dec
cmp
aam
adc
dec
pop
push
pop
imulb
pop
mov
into
sub
xlat
jg
sbb
hlt
sbb
or
jle
out
dec
push
mov
mov
xchg
decb
scas
loop
aad
sub
fistps
dec
scas
iret
imul
dec
and
addr16
cmp
arpl
pavgw
dec
je
fstpl
xor
or
mov
mov
inc
and
scas
clc
mov
mov
mov
test
daa
pop
loop,pt
scas
call
pop
out
push
lahf
add
loop
mov
adc
push
lods
jl
xor
or
add
mov
push
push
mov
dec
dec
pop
sarb
dec
leave
adc
scas
cwtl
cs
push
sub
mov
mov
add
and
imul
bound
jge
push
dec
out
in
pop
pusha
leave
pop
inc
push
sbb
mov
stos
push
xlat
fisubs
and
imulb
stc
and
and
dec
in
cmp
mov
xchg
dec
sub
mov
xchg
cs
dec
filds
imul
pop
outsl
es
add
aam
addr16
lcall
sub
mov
icebp
pop
cmp
adc
dec
adc
bound
dec
fildll
push
sbb
imul
cmp
push
ss
add
pop
ret
fs
inc
cmp
dec
adc
push
add
into
dec
int
das
mov
and
rcll
imul
mov
mov
jmp
lret
mov
mov
sti
testb
movsl
dec
sub
cmp
cld
mov
pop
add
pop
or
aam
xchg
outsb
cmp
dec
ja
mov
dec
lea
addr16
inc
leave
dec
fwait
pop
lret
or
testl
out
add
leave
scas
pusha
or
pop
loopne
scas
int
dec
cli
sahf
mov
mov
mov
dec
pop
push
add
nop
jno
test
jg
mov
xchg
xchg
andb
push
aad
imul
add
outsb
adc
add
sti
adc
dec
sub
mov
fmuls
imul
cli
sub
sub
pushf
adc
into
cmp
pop
int3
sub
sahf
dec
mov
gs
sbb
xchg
pop
jmp
sbb
cmp
vphsubbw
and
dec
push
xchg
xor
jge
and
filds
imul
pop
inc
jbe
jle
test
rcll
loop
sub
xchg
pop
push
push
and
orb
lods
mov
stos
sahf
xor
inc
aad
enter
insb
imul
adc
sub
jnp
out
push
mov
dec
jl
subl
lret
decl
inc
arpl
cmp
testb
xchg
push
icebp
out
inc
adc
insb
pop
ljmp
pop
mov
ret
push
xor
mov
jbe
dec
out
adc
xlat
insb
dec
outsl
std
cmp
iret
pop
push
dec
jns
lods
cwtl
decb
xor
aas
mov
add
dec
fwait
mov
cli
adc
mov
and
or
inc
scas
into
cmpl
sti
les
push
es
add
add
mov
lods
cmp
cmpsl
dec
mov
adcb
mov
pop
fisubrs
push
add
stc
sub
cld
dec
dec
setbe
lods
jmp
sub
icebp
fstpt
testb
jmp
inc
mov
adc
cs
or
and
push
outsl
xchg
les
jnp
sub
pop
dec
movsb
int
jp
or
sub
sbb
xchg
ss
fldcw
rorl
and
orl
fisubl
jo
daa
mov
dec
ds
mov
dec
mov
add
cmpsl
pop
jo
xchg
mov
mov
pop
lock
popa
mov
dec
add
push
dec
mov
xchg
orl
xlat
dec
or
xor
stos
dec
stos
jle
xor
push
pop
arpl
mov
jge
imul
mov
xchg
lea
sarb
lds
repz
pop
dec
outsl
fs
jmp
cmp
dec
sbb
pusha
jecxz
cmpsl
mov
dec
das
fwait
dec
cs
pop
rorl
mov
popa
inc
ficompl
repz
mov
iret
pop
loopne
divb
dec
dec
test
daa
xchg
xor
push
inc
movl
jbe
aas
outsl
add
lret
cmp
loope
inc
dec
push
ret
fildll
sbb
dec
movsb
add
jp
xor
dec
fdivl
inc
addr16
push
out
aad
dec
lock
movsl
idivb
lods
dec
sub
adc
dec
xchg
mov
jle
pop
cmp
pop
fwait
cmpsb
leave
clc
dec
cmpsl
push
sub
or
iret
inc
js
bound
jo
mov
stos
repz
test
pop
in
cmp
lods
shrb
jbe
and
sbb
mov
inc
imul
add
mov
dec
shr
cmp
mov
inc
xchg
pop
sbb
dec
inc
sub
dec
mov
cmp
out
lcall
mov
push
lds
mov
adc
jbe
dec
mov
push
or
mov
jmp
and
adc
das
push
and
dec
cmp
icebp
dec
jecxz
mov
cmc
jae
nop
loopne
mov
inc
into
loope
push
das
shrl
andb
push
inc
mov
dec
cmp
jmp
dec
imul
les
mov
lahf
push
pop
cmp
xchg
in
xchg
push
imul
insb
mov
ficomps
sti
cwtl
push
dec
jae
push
inc
dec
dec
sbb
stos
gs
rcrl
mov
lods
iret
xor
nop
jne
dec
pusha
and
lea
adc
pop
add
fiaddl
lahf
sub
outsb
cmpsb
add
cmp
fstps
cmc
mov
xchg
xor
leave
pop
sub
pop
and
outsb
add
pop
cmp
cmp
sub
jnp,pt
pop
sub
push
sarb
vmwrite
dec
dec
push
xor
dec
sbbl
pop
int3
mov
fisubrs
repz
or
int
icebp
add
inc
inc
dec
sbb
mov
and
pop
cwtl
lds
lock
push
sbb
pop
adc
jmp
jge
pop
out
inc
jl
jle
movsb
dec
adc
lea
in
cmpsb
test
rcrl
inc
sub
dec
test
sbb
mov
lcall
cmpsl
inc
xor
lret
loope
stos
fcompl
push
aam
cs
dec
adc
dec
mov
dec
push
pop
or
lret
loope
pushl
gs
pop
push
adc
xchg
dec
iret
mov
push
inc
mov
dec
push
push
pop
ds
pop
dec
out
loopne
loop
jl
fimuls
xor
push
add
rcrb
mov
cltd
or
adc
iret
repnz
jno
psubsw
mov
jns
push
imul
cs
repz
sub
pop
enter
and
inc
xor
add
nop
mov
adc
dec
inc
jnp
fmull
sti
cltd
pop
aad
adc
dec
jecxz
call
push
pop
pop
pop
mov
cmpsl
jno
inc
dec
mov
test
inc
dec
test
aas
insb
aam
push
lahf
dec
shrl
xchg
push
dec
cwtl
dec
inc
cmp
dec
shl
stc
or
fcmovnb
dec
fs
xor
test
imul
pop
cli
pop
cmp
jmp
out
push
aaa
les
pop
or
sbb
push
rcl
xchg
pop
test
mov
mov
mov
and
and
lods
push
pop
mov
fwait
jo
pop
mov
imul
pushf
dec
cmp
dec
adc
lret
mov
movaps
insb
adc
xor
dec
inc
cmpsl
sub
test
sub
mov
fcom
cld
pop
mov
xor
pop
inc
sub
ret
pop
jae
mov
fimuls
sub
pop
call
dec
cmpsb
pop
or
or
cmc
outsl
mov
mov
jmp
sbb
push
jl
shrb
fstp
mov
nop
push
cmp
jbe
push
mov
mov
push
mov
xchg
dec
loope
push
daa
mov
out
push
std
push
insl
push
movsl
lahf
push
fmull
stos
mov
in
popf
lock
lods
adc
ret
pop
mov
cmp
inc
push
add
and
dec
jp
hlt
dec
popa
in
dec
mov
lcall
cmp
push
pop
push
xor
push
fstpt
imul
inc
lea
nop
mov
xchg
lods
mov
out
xor
stos
leave
fwait
insb
mov
sbb
inc
push
pop
pop
imul
push
sbb
stos
or
xchg
pop
cmpsb
mov
dec
xchg
and
pop
jl
clc
imul
iret
mov
mov
lret
and
mov
jb
in
pop
popf
sbb
push
iret
daa
stos
cmp
push
pop
mov
and
aad
or
mov
jns
das
mov
dec
fsubs
adc
dec
mov
mov
dec
jae
scas
sub
mov
cmp
cmc
fsubrp
lds
test
push
xor
fs
fwait
popa
sub
mov
inc
rclb
call
test
jmp
cli
loope
push
jo
jne
imul
movaps
enter
add
cmpsb
dec
lret
adc
mov
xchg
pop
add
call
push
mov
cmp
mov
orl
out
add
sub
mov
ret
adc
cmpsb
or
popa
pop
inc
stos
cwtl
push
aaa
outsb
fwait
mov
test
dec
loope
xor
add
dec
or
or
pop
sub
imul
loope
hlt
repnz
sbb
xchg
add
jbe
jno
cmpsb
test
paddusw
mov
xchg
aad
inc
cmc
jmp
sub
testl
movb
out
mov
incl
ret
scas
cmpsb
mov
jecxz
push
repnz
test
rcrb
cmp
out
out
aam
test
imul
sbb
xor
sbbl
ds
icebp
dec
sbb
fistl
and
mov
pop
movsb
sub
push
lock
lds
or
into
sbb
jge
in
push
inc
sbb
lds
mov
out
rol
ficoms
sub
fisttpll
push
pop
push
pop
fisttpl
xchg
lods
hlt
cmpsb
push
sahf
insb
dec
mov
incb
sub
test
inc
gs
dec
push
aas
jnp
movsl
test
dec
mov
mov
mov
js
test
ljmp
jno
into
jns
push
pop
fdivrs
xchg
call
addr16
dec
sub
push
cmp
inc
pusha
sbb
loope
pop
dec
pop
daa
out
push
mov
cltd
test
jns
sbb
call
fdiv
jbe
dec
enter
sub
xlat
lock
rclb
pop
jno
repnz
ja
and
stos
out
add
outsb
dec
addr16
inc
jmp
xchg
gs
je
sub
or
mov
dec
faddl
add
je
xchg
mov
dec
cmpsl
cwtl
mov
sbbb
dec
clc
mov
popa
fdivrp
shlb
dec
aas
mov
jecxz
xor
push
jmp
dec
cmp
lods
and
xchg
or
cmp
lret
xor
dec
cmc
sbb
sub
jb
mov
inc
ljmp
dec
xchg
popl
out
in
inc
les
into
sub
loopne
arpl
nop
out
mov
dec
dec
fstl
imul
dec
and
xchg
dec
adc
and
adc
dec
dec
sub
pushf
leave
dec
test
in
push
icebp
lret
mov
cmp
mov
add
popa
sub
cmp
mov
addl
pop
inc
aas
out
sub
incb
sti
sub
mov
mov
dec
push
xchg
fisttpll
cmpsb
loop
ja
shlb
arpl
dec
test
and
mov
inc
dec
sbb
cmpsb
test
dec
xchg
and
xchg
mov
and
push
jns
dec
or
stc
mov
dec
scas
push
ret
aad
dec
loopne
or
movb
nop
push
xchg
mov
push
jge
mov
mov
push
popf
sbbb
loope
xor
ret
add
cmp
pop
mov
xor
int3
fimull
adc
jns
into
mov
cmp
out
add
jp
rorl
arpl
xor
jecxz
push
imul
inc
xchg
mov
xchg
push
sub
dec
leave
cmp
add
insb
jne
jge
mov
push
mov
pop
test
lds
repnz
dec
and
sbbl
sub
dec
imul
mov
and
in
jle
inc
fnstsw
pusha
hlt
dec
cmp
leave
sub
data16
xor
pop
pop
fsubr
mov
lcall
mov
dec
xor
bound
dec
pop
push
call
mov
cmpps
add
outsb
dec
ss
int3
adc
fs
sub
sub
insb
mov
xchg
dec
dec
sub
dec
and
cmp
lds
pop
mov
scas
mov
push
add
jnp
mov
idivl
inc
mov
xor
fwait
lods
lret
mov
dec
xor
out
sbb
dec
movsl
pop
out
into
xchg
and
fdiv
mov
dec
mov
cmp
inc
daa
movsl
sub
pop
sub
in
stos
mov
sub
gs
dec
dec
arpl
loope
inc
xor
adc
mulb
dec
lock
ficoml
insb
mov
outsb
flds
popf
cmp
sub
and
cmc
jno
bnd
push
mov
jo
jmp
cmc
or
out
lret
fcom
fildl
mov
add
jno
pop
inc
aad
dec
outsb
mov
xchg
pop
aas
repnz
or
test
cmc
sbb
dec
cmp
mov
imul
dec
xchg
ror
adc
ds
cmc
xor
out
push
inc
mov
cwtl
or
or
test
aaa
jns
stos
mov
fs
clc
jge
dec
adc
movsb
xchg
dec
repz
icebp
les
push
jns
insb
jnp
sub
mov
addb
insb
push
dec
adc
add
mov
shll
adc
mov
jnp
dec
push
xchg
xchg
dec
mov
dec
jmp
addl
sar
addr16
mov
arpl
ret
jmp
xchg
stc
pop
jae
cmc
dec
inc
out
fnstcw
test
mov
test
in
ret
arpl
icebp
lcall
dec
pop
aam
adc
cltd
dec
jecxz
std
xchg
into
adc
sub
mov
dec
inc
jbe
mov
dec
loope
test
mov
add
addr16
inc
popf
xchg
daa
sub
sbb
add
jp
xchg
lret
testl
inc
jmp
lods
sti
and
cld
fs
sub
add
add
pop
mov
scas
xchg
cmp
adc
rclb
aas
mov
xchg
push
lret
gs
dec
add
add
push
jl
adc
fs
or
and
sbb
dec
fimuls
jb
push
dec
inc
lahf
dec
loop
mov
rorb
mov
cs
dec
in
inc
sub
sbb
sub
ret
jmp
mov
cmc
dec
push
out
loopne
daa
shll
out
push
or
push
pop
push
fbstp
faddl
xchg
mov
gs
or
pop
lret
sbb
inc
adc
push
iret
popa
add
pushf
inc
dec
push
subb
scas
pop
rolb
out
push
xlat
cmc
pop
mov
pop
mov
dec
jle
mov
sub
mov
adc
xchg
popa
sub
test
shrb
cmp
xchg
push
xor
sub
sbb
scas
sbb
stos
dec
int
xchg
ds
jecxz
mov
fstl
cmp
cs
xor
or
jl
and
and
mov
xor
dec
loopne
cmpsb
jp
cmp
and
out
fisttpll
sub
icebp
jbe
sbb
xor
sub
iret
push
ja
mov
pop
inc
add
pcmpeqw
pop
mov
aad
lods
out
dec
aaa
dec
xor
popf
jnp
xor
add
js
imul
dec
out
fiaddl
inc
mov
xchg
cmp
testb
fdivrl
sub
imul
mov
inc
sbb
dec
pop
out
in
subb
dec
cltd
out
scas
and
outsl
lret
or
jne
imul
imul
and
mov
pop
stc
sbb
sbb
add
mov
lcall
mov
xor
mov
cmpsb
ja
out
jnp
loopne
push
jmp
shl
pop
jmp
outsb
mov
lds
loopne
adc
fs
adc
dec
dec
lds
mov
lahf
and
call
push
push
neg
push
scas
es
pop
sub
mov
test
test
ljmp
adc
mov
dec
bound
icebp
push
stc
cmovns
fsubs
jge
into
and
dec
adc
icebp
sub
xorb
push
push
loopne
ret
rol
bound
stos
pop
aad
jo
mov
jnp
dec
mov
int
xchg
pop
jmp
and
mov
dec
push
hlt
dec
ds
pop
fisubl
xor
dec
or
leave
pop
jno
sahf
xlat
push
dec
dec
xor
adc
cmc
das
ss
dec
cmp
and
mov
pop
dec
dec
pop
xor
test
inc
inc
dec
jbe
or
orb
repnz
stos
push
rorb
pushf
cmp
int3
rcrb
dec
ss
enter
adc
sbb
inc
mov
fwait
rcll
xlat
add
shrb
dec
jge
js
add
rclb
xchg
pop
mov
test
xor
dec
jbe
mov
fdivs
jge
cmp
cld
movsb
popf
dec
je
sti
xchg
negb
push
rcll
inc
int
push
repnz
jmp
add
pop
xchg
ficompl
dec
push
stos
sub
repnz
and
adc
lcall
push
loope,pn
mov
mov
fcmovne
incl
dec
mov
clc
dec
sub
or
dec
xor
orb
push
xor
cld
mov
pusha
ret
mov
dec
sub
dec
je
gs
dec
mov
cltd
call
scas
pop
iret
fisubs
inc
pop
psubw
inc
jne
rorb
or
dec
cmp
popf
push
out
aas
out
test
sub
pop
add
repnz
or
lahf
cmpsl
xorl
aad
cmp
les
mov
pop
cmp
push
dec
addb
sti
or
xor
jbe
push
pusha
push
dec
add
xchg
dec
data16
dec
push
lods
push
sbb
stc
jle
rcr
mov
mov
jae
insl
sbb
pop
outsl
sub
enter
dec
fidivl
lcall
faddp
xchg
pop
pop
sub
dec
jl
arpl
test
pop
dec
inc
stos
dec
mov
dec
popf
and
or
loope
pop
push
in
cs
adc
lods
out
dec
lods
bound
mov
adc
in
dec
dec
insb
lret
inc
cmp
lret
mov
pop
jp
dec
xchg
lock
cli
adcl
and
xor
mov
sarb
enter
mov
push
xchg
adc
jp
test
loopne
dec
mov
or
aaa
pop
cwtl
in
ss
push
scas
dec
les
popf
xchg
dec
mov
frstor
push
dec
and
imul
sub
nop
dec
or
out
dec
sti
adc
daa
add
xchg
into
mov
pop
pop
push
mov
mov
xchg
icebp
or
mov
xor
fists
jmp
and
pop
mov
mov
jbe
pop
repnz
scas
xor
add
ljmp
inc
jae
lret
sub
pxor
mov
mov
in
pop
rorb
movsl
jns
push
out
xor
je
dec
sub
xchg
das
dec
sbb
pop
sbb
adc
imul
dec
dec
jbe
mov
push
hlt
dec
in
mov
inc
fbstp
faddp
dec
pop
xchg
lds
data16
int
inc
mov
mov
stos
push
testl
dec
xor
mov
je
ja
sub
push
call
pop
inc
xchg
imul
inc
lds
dec
mov
mov
add
pusha
cmp
push
dec
jle
data16
pop
and
imul
pop
cld
das
dec
mov
hlt
mov
inc
sbb
pusha
pop
out
mov
dec
mov
sbb
lret
dec
out
push
stos
and
jle
or
sub
bound
lcall
movsl
xchg
cwtl
or
hlt
ret
aam
xorb
dec
sbb
rorl
cltd
mov
jbe
mov
fdiv
push
xlat
shll
inc
pop
mov
add
pusha
mov
push
pop
sbb
mov
xor
add
pop
pop
cmpsb
fisubl
dec
daa
sub
sub
add
outsb
bound
lahf
push
std
mov
pop
call
outsb
cmc
inc
pop
loop
sarl
and
dec
jmp
adc
lea
mov
mov
or
inc
repnz
dec
shlb
mov
push
lret
jmp
add
pop
pop
mov
js
pop
xchg
jno
dec
and
loope
xchg
int
sub
mov
insb
das
mov
pushf
loopne
daa
push
lret
lock
popa
and
mov
push
dec
mov
lds
roll
dec
cli
mov
movsb
fsubl
lods
dec
icebp
sbb
dec
shrl
pop
adc
and
sub
lods
call
js
add
faddl
insb
dec
ret
adc
leave
xor
add
dec
jno
in
test
adcl
ljmp
into
inc
cmp
adc
dec
subb
mov
cmp
sub
cld
mov
iret
jp
push
shll
ret
mov
dec
movsb
dec
daa
or
cmpsb
nop
jns
add
adc
sti
mov
cltd
mov
mov
aad
mov
imul
push
mulps
mov
imul
sub
and
mov
in
enter
and
sub
xor
cmpsb
sbb
clc
inc
aad
daa
mov
lahf
pop
adc
outsb
jmp
pop
lods
xor
lret
dec
inc
and
aam
adc
andb
sub
fmulp
mov
add
push
std
in
push
sbb
ljmp
pop
pop
cmp
xchg
add
fistpl
out
xor
pop
mov
pop
push
xchg
jb
push
cmpsl
pop
pusha
ret
ds
repz
xchg
jns
out
lds
mov
and
pushf
sbb
sub
arpl
mov
cmp
or
dec
popf
and
push
out
mov
shll
loopne
inc
or
adc
imul
jge
dec
pusha
shll
pushf
lods
addr16
in
dec
add
add
adc
cwtl
out
sbb
popa
inc
cmp
dec
inc
and
jmp
pinsrw
fistl
xlat
es
xor
fistps
dec
push
insl
scas
ja
add
sbb
mov
xor
push
sub
scas
or
or
mov
frstor
jns
dec
jecxz
dec
adcb
dec
loopne
jp,pn
fisttps
jl
jmp
lahf
scas
add
dec
or
dec
test
je
movsl
daa
sub
jmp
sub
pop
das
jl
push
fdivl
mov
test
popf
jae
decl
ret
cld
sub
cmp
scas
push
add
inc
adc
inc
and
dec
cltd
sub
insb
mov
mov
lods
int3
jmp
pop
addr16
faddl
xchg
imul
leave
movl
mov
mov
mov
nop
sub
mov
mov
rcrl
push
dec
mov
rolb
aas
je
jno
add
pop
or
mov
dec
pop
pop
dec
dec
vcmpss
jmp
sbb
cmp
dec
incl
lretw
scas
pop
cwtl
adc
mov
lcall
push
dec
fsubrs
fimuls
call
add
xor
scas
mov
fldenv
jmp
push
bound
hlt
push
jo
fadd
call
jno
inc
mov
dec
or
shll
nop
push
sub
call
into
or
das
das
add
ret
sbb
addr16
pop
push
aas
pop
mov
test
mov
fwait
dec
cmp
lret
xchg
sub
and
dec
or
cmc
bound
or
dec
movsl
mov
adc
negb
lret
aam
inc
mov
dec
or
nop
pop
jae
cli
shrb
xor
dec
stos
jb
push
fwait
add
inc
push
rol
jno
dec
xor
or
add
ss
dec
pusha
into
int
pop
movsb
subb
mov
fmull
jnp
inc
fidivrl
pop
leave
sub
xlat
jbe
cmp
xorb
sub
mov
xchg
push
dec
sbb
cmc
pusha
stos
sub
push
fidivs
and
fcomp
pop
xchg
dec
push
movsb
outsb
fnstsw
sub
dec
sub
mov
jb
test
dec
ror
mov
loope
jb
out
jg
xchg
test
and
xchg
or
dec
repz
int
lock
mov
adc
sbb
dec
stos
sbb
push
dec
clc
inc
mov
cwtl
repz
lock
test
fldcw
push
push
dec
dec
sbb
jbe
inc
fwait
stos
inc
cld
movsb
pop
push
inc
lea
pusha
lret
sub
xlat
sub
jmp
jno
push
pop
fdiv
inc
pop
dec
movsl
lods
imul
out
xlat
fdivrl
cmp
and
adc
stos
lds
push
xchg
out
push
jl
shlb
cli
call
jg
fldenv
in
dec
cmp
mov
cmpsb
dec
push
leave
dec
ljmp
jnp
mov
cld
out
xlat
outsl
ret
jbe
xor
or
xor
outsb
dec
lahf
fstps
shlb
cltd
sub
pop
std
notl
fsts
psllq
mov
inc
pop
lret
dec
test
inc
cmp
in
jns
dec
and
cmp
fdivrp
jno
and
mov
mov
testb
sti
cmpl
out
cmpsl
add
jne
push
xchg
popa
dec
mov
and
clc
cmp
fisubrs
mov
push
mov
ja
jno
cmpsl
imul
and
cmp
fstp
in
in
xor
rorb
rcrb
loope
jns
shlb
xchg
inc
leave
out
mov
sbb
sbb
enter
dec
mov
sub
pop
xchg
incb
xchg
mov
in
mov
roll
and
jmp
cmp
hlt
sub
mov
repnz
pushf
pop
push
cmp
mov
out
push
fnstenv
movsb
jg
jle
mov
push
test
decl
dec
push
add
jae
sbb
dec
xor
jl
pop
imul
arpl
dec
adc
mov
lahf
pop
xchg
dec
or
lods
loop
fldt
dec
sub
jmp
dec
outsl
xor
int3
dec
test
aaa
cmpsb
cmpsb
mov
clc
xchg
jmp
push
insb
sub
out
push
adcl
jl
jbe
sub
mov
push
das
mov
mov
or
in
daa
push
sbb
dec
push
sbb
mov
cs
imul
jmp
loope
push
faddp
xchg
sub
dec
iret
out
jp
dec
and
orb
mov
mov
xchg
fisubs
jne
jge
xor
push
sbbb
sub
dec
mov
pop
cmp
shl
dec
leave
mov
pop
jmp
sbb
pop
hlt
js
push
iret
dec
push
aaa
xchg
pop
stos
cmpsb
add
imul
dec
hlt
or
cli
js
sbb
dec
in
mov
dec
mov
mov
xchg
push
repnz
mov
leave
jmp
pop
or
mov
push
xchg
cmp
dec
lds
cs
or
ljmp
sub
inc
sbb
pusha
sub
pop
dec
aad
loope
scas
ret
mov
mov
cmp
dec
xchg
ss
add
arpl
movsb
inc
mov
dec
nop
dec
mov
sbb
into
push
std
lret
pop
daa
jne,pn
xchg
stos
pop
pop
stc
aaa
mov
test
mov
jmp
lret
xor
and
mov
js
bound
dec
lock
ret
aad
movsl
fsubl
dec
xchg
mov
dec
mulb
pop
dec
dec
aam
insl
sub
stos
cld
dec
sti
or
jl
jae
and
jb
and
shl
dec
push
jl
fs
jp
xlat
lods
stos
mov
cli
xlat
ja
sub
add
add
out
hlt
cltd
fdivrs
ficoml
fisubrs
dec
cmp
mov
stos
or
inc
push
cmp
pop
mov
dec
notl
aam
subb
out
sub
inc
push
cli
pop
das
repz
loope
adc
inc
dec
or
sbb
jns
mov
imul
aas
sbb
test
leave
dec
pop
lock
xchg
mov
arpl
int
push
dec
into
into
lret
dec
sbb
je
repnz
push
in
jge
bound
push
dec
cwtl
lahf
dec
xchg
lock
mov
dec
out
test
inc
inc
xchg
dec
mov
xchg
dec
push
icebp
pop
push
popf
shl
add
aad
jp
jecxz
adc
cmc
or
or
mov
sahf
dec
xchg
test
mov
imul
push
and
hlt
call
js
dec
jp
mov
push
sbb
lcall
call
jecxz
dec
sbb
xchg
push
jb
dec
pop
mov
push
xor
cld
or
add
xor
lock
sahf
mov
stc
mov
cltd
lret
insb
xchg
or
dec
daa
iret
mov
outsl
push
jge
mov
fisubrs
sub
inc
sar
enter
dec
mov
add
push
addr16
cmp
inc
mov
dec
popa
mov
dec
mov
outsb
roll
xchg
jg
pop
sbb
daa
push
test
clc
dec
lret
add
insb
aas
arpl
push
dec
jmp
mov
inc
dec
shll
sahf
xchg
rol
mov
stc
xchg
fisttpl
jg
sbb
rep
jb
xchg
sahf
dec
or
push
dec
mov
out
in
hlt
les
leave
sub
sbb
adc
inc
add
dec
sub
mov
je,pn
dec
out
test
push
and
pop
mov
jle
pop
jo
add
dec
lahf
add
mov
pushf
idiv
xor
xchg
sub
jnp
pop
and
imul
dec
mov
ret
cmpsb
dec
andl
push
pushf
fs
pop
add
dec
push
mov
dec
sbb
repz
loop
test
ror
or
mov
aad
dec
outsl
pop
test
or
aas
xchg
mov
jecxz
cmp
xchg
xor
push
inc
or
xor
xchg
lret
dec
inc
inc
sub
pop
scas
icebp
mov
dec
jmp
dec
mov
jns
push
dec
mov
pop
insl
fwait
jl
push
dec
cwtl
or
mov
les
popf
int3
mov
add
pop
xlat
ret
and
in
or
and
lahf
iret
fstpt
pushf
notb
mov
mov
fs
mov
outsl
xor
jmp
dec
std
push
inc
pop
ljmp
xchg
jle
dec
mov
cli
cwtl
xchg
leave
push
fs
add
sarb
arpl
lds
jl
pop
out
stos
roll
mov
in
or
dec
rorb
nop
mull
pop
dec
dec
fistpl
jmp
mov
inc
dec
mov
mov
dec
jne
push
mov
stos
pop
push
adc
fnstcw
dec
sub
testb
imul
jl
mov
rorb
int3
xchg
fdivs
dec
xchg
xor
int
adc
fidivl
or
fldt
push
les
dec
mov
test
rorb
dec
adc
sbb
dec
push
les
ret
sub
nop
pop
mov
pop
into
scas
inc
mov
das
mov
loope
jne
cmpsl
int3
mov
mov
test
lret
out
fstpt
sub
sbb
add
pop
bound
je
push
movsl
call
jnp
dec
mov
aam
xor
cmp
or
loope
jae
out
push
dec
outsl
pop
cwtl
stos
inc
stos
mov
push
dec
add
notl
cmp
xor
add
xchg
pusha
push
push
ret
pop
in
dec
xchg
mov
mov
stos
sub
dec
dec
fdivs
push
lret
stc
add
xchg
fs
mov
mov
xchg
xchg
cwtl
enter
aad
mov
clc
lahf
dec
pop
fldcw
mov
dec
dec
mov
lods
dec
test
repnz
xchg
rorb
std
sarb
jle
xchg
sbb
jns
mov
dec
mov
das
xchg
xchg
pop
push
popa
dec
repz
shlb
rorl
jmp
sbb
shlb
push
xchg
pop
mov
cwtl
cmp
dec
adc
iret
xchg
test
fdivrs
sub
inc
pop
xor
jp
test
outsl
mov
mov
sub
cli
test
push
jno
dec
push
add
pop
popl
adc
movsl
fldl2t
inc
or
jns
mov
lock
or
mov
into
push
mov
cmp
lret
mov
dec
mov
or
loop
pop
xchg
mov
push
and
mov
dec
mov
and
dec
push
js
xor
push
in
scas
xor
pop
jecxz
mov
cltd
imul
sub
dec
iret
push
or
sbb
jbe
sbb
mov
mov
or
add
mov
repnz
jb
sbb
ret
mov
inc
stos
sbb
sbbb
cmp
sti
aad
mov
xchg
in
add
pop
les
je
mov
pop
or
repnz
adcb
dec
idiv
xor
ljmp
push
ds
jg
mov
clc
dec
dec
in
imulb
bound
stos
cmpsl
jle
cmp
outsb
in
xchg
dec
jb
xchg
nop
inc
mov
lahf
sub
or
dec
shl
inc
stos
cwtl
les
adc
sub
inc
das
aad
imul
push
js
pop
aad
out
jmp
pop
mov
stos
sbb
jbe
cmp
or
cmp
mov
dec
in
jg
push
jecxz
adc
imul
dec
shll
dec
mov
test
push
dec
scas
addl
lret
add
xor
add
repz
xchg
in
dec
inc
inc
mov
xchg
dec
xchg
loop
push
jae
dec
ja
adc
clc
or
and
outsl
gs
dec
dec
aad
pop
cmpsb
inc
lods
cs
pop
loopne
jecxz
test
fnstsw
add
rorl
loopne
inc
jmp
sbb
push
mov
out
orl
sahf
pop
daa
dec
popf
pop
sub
insl
xchg
fisttps
push
cmp
ret
xor
popf
inc
sub
loope
lret
out
dec
enter
sub
jo
push
inc
dec
lods
jp
adc
lock
sti
loop
mov
ret
int3
mov
mov
insl
add
and
imul
dec
icebp
sub
mov
xchg
sbb
add
jmp
cmc
cmpsl
push
sub
fldenv
dec
addr16
js
sbb
push
leave
jge
sahf
stos
call
add
sub
fnstcw
lret
and
ret
cld
sarl
or
mov
inc
adc
sub
in
push
push
dec
insb
fildll
aam
sbb
fwait
popa
data16
pop
dec
jb
gs
push
loopne
pushf
ljmp
jb
push
loop
cmpsb
adc
jle
dec
xchg
jmp
lds
push
in
js
jmp
lcall
xor
cmpsb
adc
fs
adc
dec
in
imul
nop
in
popa
sub
jl
iret
into
cli
mov
das
aam
push
push
dec
push
insl
jne
or
pop
push
dec
cmc
mov
mov
fdivl
jmp
bound
into
and
in
or
push
push
xor
xchg
out
jo
idivb
sub
outsl
inc
lret
xor
or
insl
jae
cmovne
dec
pop
pop
into
stos
jp
push
fwait
sti
dec
cli
sbb
mov
dec
rorb
add
dec
das
out
pusha
and
lcall
fiadds
pop
ret
pop
aam
sar
push
dec
sub
mov
dec
jno
xchg
xor
push
dec
mov
ss
cmc
adc
out
dec
and
shl
push
outsb
cmp
inc
cltd
adc
jmp
repnz
xor
mov
ljmp
dec
push
inc
pop
and
xorb
cs
pop
data16
int
jle
xlat
push
lahf
mov
cltd
push
sbb
dec
dec
push
sub
push
loope
cwtl
movb
dec
test
push
loope
push
cmp
push
nop
imul
sub
fs
icebp
xchg
jbe
shll
dec
cli
mov
adc
stos
dec
push
sti
aam
xor
dec
lods
lret
sahf
int
fisubrl
out
mov
shlb
adc
sbb
xlat
movsl
push
inc
les
inc
imul
repz
in
dec
scas
dec
cmp
inc
in
push
mov
fiaddl
push
lret
cld
test
js
xor
repnz
or
test
dec
pop
nop
xor
mov
cltd
or
sub
iret
out
inc
jle
ret
inc
dec
dec
mov
inc
xlat
lds
es
test
and
popf
dec
cli
cmp
inc
enter
jmp
lret
cmpb
cmp
inc
push
lds
mov
lahf
sar
add
out
xor
lcall
loopne
mov
je
insl
dec
dec
inc
xor
cmpsl
jbe
and
clc
xchg
idivb
xchg
lahf
je
jne
pusha
push
mov
out
xlat
fwait
repz
test
lods
imul
in
pop
fcmovnbe
cmpsb
loope
sbb
jmp
dec
jb
push
in
dec
inc
outsl
inc
mov
pushf
mov
test
cmp
jb
mov
imul
arpl
xchg
sahf
sub
jbe
mov
mov
mov
and
and
or
jo
aam
dec
jmp
push
inc
pop
pushf
ds
dec
leave
in
sub
lret
jmp
fwait
adc
ja
int
out
dec
mov
lret
and
cmpsl
xor
stos
mov
cmp
jle
cmp
push
sti
sub
mov
imul
loop
xchg
dec
repnz
scas
dec
in
pop
sbb
sub
jp
out
cmpsb
jbe
add
lahf
stc
insl
or
call
and
jp
jl
cltd
dec
sbb
hlt
adc
mov
push
cli
cwtl
adc
dec
cmpsb
mov
push
out
sbb
inc
push
fsts
mov
push
leave
pop
popf
cmc
cs
lods
incb
cmp
inc
bound
dec
repz
jp
mov
dec
jae
dec
mov
sub
call
push
inc
xor
mov
cltd
and
rclb
ret
xchg
mov
cs
inc
leave
xchg
jo
sub
pop
and
sbb
js
inc
mov
stos
add
dec
sub
in
push
int
pushf
rcrb
pop
and
dec
sub
and
add
mov
cmpsl
dec
enter
inc
jo
adc
pushf
jl
filds
repz
mov
add
pop
dec
cltd
pop
push
adc
inc
es
xchg
jae
fdivrs
dec
jg
adc
mov
aam
mov
and
popl
loop
dec
lds
lret
pop
pop
jbe
adc
xlat
test
jge
mov
xchg
jp
cmpl
daa
sahf
into
xchg
jmp
sbb
sbb
sub
dec
out
leave
pop
cmc
daa
sub
roll
dec
adc
lret
or
xor
dec
popf
push
inc
or
jmp
lods
add
movsl
xor
xchg
dec
adcb
aam
sbb
push
or
pop
push
or
les
mov
and
pop
neg
outsb
rcl
dec
pop
clc
xor
gs
add
sub
pop
cmpsb
pcmpeqd
mov
jmp
mov
xchg
ficompl
les
fwait
mov
lret
mov
jno
push
jmp
loope
push
inc
xchg
xchg
dec
add
ret
dec
loopne
xor
pop
jmp
dec
aam
inc
cmp
sbb
iret
and
dec
cmc
repnz
lock
mov
sbb
or
xchg
adc
sbb
nop
pop
dec
add
ds
dec
xchg
and
dec
insb
fsubs
pop
dec
mov
mov
mov
dec
mov
aaa
inc
and
or
jmp
inc
sbb
movsb
insb
imul
div
mov
dec
adc
adc
dec
jnp
push
push
sbbl
mov
aad
popa
xchg
call
hlt
fsubl
dec
mov
adc
clc
xor
jo
lret
dec
dec
mov
insl
cmpl
add
dec
into
popa
cmp
sub
dec
inc
push
repz
mov
and
je
cmp
or
mov
lock
dec
loope
dec
idivl
enter
insb
stos
inc
mov
stos
xchg
in
std
xchg
pop
dec
test
xchg
lret
push
mov
jne
jp
pop
sub
test
xlat
in
idiv
push
lock
insb
and
sbb
add
dec
loopne
mov
repnz
mov
lahf
imul
xchg
aad
aam
dec
lds
je
in
insb
dec
or
shll
sbbb
clc
mov
repnz
lea
sahf
pop
push
push
cmp
notl
sbb
and
or
push
fs
sub
shll
jb
cmp
mov
sarl
xchg
pop
out
fbstp
dec
inc
fsubrs
dec
mov
arpl
push
or
mov
outsb
out
xlat
imul
push
stc
push
mov
outsb
push
fidivrl
movsb
dec
dec
popa
or
mov
pushf
lret
in
push
sarb
pop
adc
es
dec
insb
mov
push
jle
test
mov
insl
in
jmp
dec
xlat
push
add
xchg
pop
jecxz
jns
dec
je
rclb
add
xchg
ficomps
mov
rcl
mov
loopne
dec
ds
or
mov
cmp
dec
pop
cmpsb
imul
inc
pop
fisttpll
scas
cmp
or
jl
mov
inc
push
or
sti
scas
dec
stos
and
loopne
mov
xchg
mov
dec
ret
mov
test
push
insl
outsb
sti
add
mov
or
test
pop
ret
dec
sbb
jge
add
call
popa
imul
xor
js
jnp
add
sti
mov
ja
add
in
xor
mov
xchg
sbb
stc
xchg
dec
inc
mov
pop
jns
leave
imul
add
in
js
jp
and
stos
scas
cmp
sub
push
adc
out
dec
icebp
and
or
lret
push
imul
xor
cli
mov
pop
xchg
mov
xchg
in
dec
outsl
adc
jbe
dec
cltd
aaa
cmpsb
pop
push
test
dec
outsl
mov
sub
lcall
into
fcomps
xor
sub
ja
dec
jle
push
inc
nop
ds
push
dec
jb
cmp
data16
ret
dec
sbb
mov
imul
xor
cmp
xchg
nop
sub
es
pop
inc
into
aaa
aam
das
or
and
push
sbb
pop
xchg
stos
sti
pop
mov
jge
xor
jmp
mov
add
mov
push
dec
out
imul
mov
movsl
push
mov
sub
imulb
test
cmpl
push
dec
cld
jae
jmp
jg
shll
stos
mov
mov
dec
jne
sar
cwtl
hlt
xor
sbb
sti
sub
loop
mov
movsb
inc
dec
nop
dec
inc
scas
hlt
add
ficoml
mov
pop
add
lds
jno
bound
push
mov
push
pop
inc
cmc
sbb
or
fwait
mov
push
pop
cmpsb
lret
outsb
xor
mov
push
das
cmp
sahf
mov
inc
rorb
aaa
sbb
sarl
inc
mov
jle
dec
xchg
and
std
rep
sub
int
mov
ds
dec
ljmp
jae
leave
push
mov
add
push
dec
lock
fs
loop
daa
dec
aaa
outsb
faddp
push
imul
loopne
dec
movsb
mov
testl
push
mov
mov
adc
subb
sub
pop
imul
sahf
imul
push
fcoml
stc
and
adc
sub
jnp
aad
dec
push
xchg
pop
in
mov
rcrb
add
pushf
pushl
adc
rorl
cmp
fisubrs
dec
push
inc
xchg
lahf
dec
xor
xchg
cltd
js
and
xchg
push
inc
ret
xchg
xor
mov
or
push
hlt
push
pop
rorl
mov
cltd
dec
loopne
std
dec
mov
shrl
add
pop
sysret
out
sti
jbe
cltd
std
pop
cs
mov
test
jnp
push
cli
push
in
and
dec
add
dec
shl
js
out
addr16
pop
pop
inc
adcl
pop
add
dec
xor
aad
js
es
daa
lcall
dec
mov
cmpsl
mov
cli
bswap
clc
sarl
push
dec
mov
aas
mov
fists
pop
pop
jle
call
jmp
ljmp
fildl
pop
push
pop
lock
mov
jb
sub
dec
mov
lret
jecxz
dec
sti
push
jne
mov
icebp
lods
int3
out
notl
fucomip
push
ret
out
jp
dec
test
mov
mov
push
movntq
pop
sarl
mov
adc
push
pop
ss
or
test
mov
push
imul
inc
fs
and
popa
push
inc
xchg
inc
loope
jmp
inc
sbbl
cmpsb
mov
xor
lret
inc
pop
popf
sbb
lret
push
xchg
loopne
cltd
sub
loop
pop
adc
pop
mov
xchg
fimull
pop
dec
adc
fstpl
dec
repnz
mov
cmp
mov
dec
push
fisttpll
int
xor
dec
or
add
mov
scas
jb
cli
mov
push
pop
and
aaa
sbb
mov
in
icebp
ret
xchg
mov
sub
mov
dec
dec
fs
inc
inc
loope
dec
sarl
cmp
dec
clc
incb
es
adc
daa
inc
mov
mov
mov
mov
call
mov
repnz
xor
add
cli
out
leave
dec
leave
sbb
int3
cmpsl
pop
imul
xchg
dec
lock
sti
out
jae
lret
testb
pop
push
mov
pop
or
push
push
dec
jl
jns
outsb
dec
addb
jmp
jle
ja
js
jo
dec
adc
fsubl
sub
mov
ret
dec
and
xchg
dec
ljmp
push
mov
dec
int
dec
jecxz
mov
lcall
fmuls
jb
xor
xlat
sub
push
in
rorl
scas
data16
bound
ss
lds
pop
jecxz
push
mov
cmp
notb
adc
call
lret
das
sub
mov
jne
dec
shlb
pop
xor
out
mov
test
dec
std
jmp
push
test
xchg
decb
arpl
bound
js
call
popa
lret
rorb
xchg
fisttpll
neg
pushf
dec
cwtl
aam
cli
test
or
mov
xchg
dec
scas
in
ficompl
fwait
shlb
jmp
dec
popf
mov
xor
mov
inc
pop
pop
js
ss
cmp
jmp
or
jge
fidivrl
jmp
rolb
push
push
jno
and
mov
mov
dec
or
cmc
cmp
xor
cmpsl
xor
cs
pop
push
or
mov
sub
inc
mov
nop
aas
clc
push
repnz
insl
lods
shl
dec
jns
ljmp
pop
jg
add
push
mov
enter
insb
dec
jae
les
dec
mov
shll
cs
add
mov
xor
lods
xor
lock
ret
insb
aaa
mov
jle
cmp
test
mov
dec
adc
out
dec
mov
sub
cli
adc
popl
pop
dec
sbb
add
sar
imull
dec
out
sub
and
lret
pop
aad
dec
adc
cmpsl
sub
dec
mov
stc
sbb
mov
inc
stos
cmp
jecxz
mov
push
inc
lea
xchg
stos
xor
xor
ret
dec
icebp
xor
dec
loop
cmp
dec
sarl
pusha
pop
pop
outsb
xchg
mov
in
iret
into
mov
mov
push
pop
sub
icebp
dec
dec
cmpxchg
arpl
sub
dec
sahf
mov
mov
repnz
pop
sbb
enter
and
xor
cmp
clc
inc
shrl
mov
or
sti
pop
std
dec
inc
aad
test
push
add
je
mov
pop
dec
and
push
cmpsl
ret
mov
orb
imul
dec
das
pop
jl
les
cmc
andl
and
arpl
pusha
lods
cmp
push
xor
lods
xchg
push
aam
dec
cmp
cmp
sub
sub
or
xchg
dec
mov
inc
sub
sbb
notl
adc
addr16
mov
mov
pop
lods
dec
rcr
test
aaa
cwtl
add
mov
test
dec
mov
cmp
adc
cmp
sbb
jbe
sarb
je
aam
adc
dec
iret
stc
inc
sahf
push
xor
sbb
sub
xlat
cltd
cli
mov
dec
pop
ss
jle
and
push
aad
dec
mov
repnz
xchg
or
subb
ss
push
lret
mov
roll
mov
in
xchg
cmpsb
xlat
jno
dec
xchg
es
dec
fnstsw
int3
and
or
pop
inc
mov
xor
imul
push
loopne
in
sbb
dec
daa
or
insl
push
rcll
dec
push
cmpsl
lock
mov
popf
les
sbb
out
popa
xchg
dec
mov
leave
cmp
pop
inc
add
outsb
enter
insb
repnz
push
adc
popa
bound
dec
xor
cmp
dec
xor
fwait
inc
push
pop
insb
adcb
popf
pop
lods
leave
push
jb
test
icebp
and
js
mov
pop
mov
mov
in
mov
inc
clc
hlt
jge
into
and
dec
int
imul
mov
mov
xlat
outsb
in
dec
mov
sarl
pop
push
dec
and
test
cmpsw
xor
pop
loopne
gs
call
iret
adc
xchg
scas
jnp
dec
sbb
inc
ja
pcmpgtw
xchg
call
hlt
fisttpl
dec
inc
das
out
lds
daa
ss
mov
stc
frstor
xor
jnp
jecxz
outsl
and
test
call
into
popa
mov
pusha
in
adcb
mov
jne
adc
enter
cmp
push
dec
xchg
jmp
clc
xchg
lea
dec
mov
bound
insb
rclb
jp
dec
xchg
popa
gs
jno
pop
notb
cmc
and
push
or
nop
mov
rorl
mov
stos
out
inc
pop
fwait
jp
push
testl
enter
add
pusha
mov
xchg
add
nop
push
push
ljmp
hlt
dec
dec
pop
fcmovb
sbb
inc
sub
shl
add
xchg
jno
inc
push
test
pop
jne
js
pushf
xchg
dec
test
mov
or
incl
stos
in
push
push
pop
mov
pop
inc
pop
xchg
outsb
cmp
ret
mov
push
ja
xlat
cltd
cmp
aas
ficompl
fsincos
jecxz
sub
cmp
jno
pop
testl
movsb
stos
int
idivb
jg
adc
dec
lahf
insb
sub
xor
xor
mov
dec
cmovns
lock
repnz
aas
fmull
aaa
mov
test
movsb
cltd
dec
ret
jge
enter
stos
out
dec
aad
insl
lea
lret
mov
stos
xlat
dec
sub
mov
adc
and
pop
scas
xchg
sbb
sahf
pop
push
pop
push
inc
ficomps
mov
or
jnp
es
mov
mov
dec
cmpsl
adcl
jmp
push
and
push
dec
jbe
or
dec
mov
inc
sub
mov
xchg
rorb
ficoms
push
or
push
addr16
es
sti
jmp
pop
push
push
jnp
xor
nop
cltd
lea
dec
std
ret
xchg
iret
bound
divps
dec
dec
add
add
js
test
out
jmp
dec
adc
xlat
dec
mulb
inc
out
dec
mov
and
cmc
dec
jl
hlt
dec
or
push
fsts
fs
jns
cmpsb
pop
mov
lods
add
je
outsl
std
pop
rorl
scas
jl
and
dec
push
mov
ret
aas
loope
adc
gs
subb
lods
mov
inc
jge
cmpsb
and
dec
xor
mov
rcrl
shrl
and
or
dec
out
xor
fimuls
out
loopne
sbb
mov
dec
arpl
jno
pop
out
mov
je
cmp
xlat
mov
jg
push
dec
and
adc
jmp
jmp
dec
push
dec
into
mov
mov
pop
ss
sbb
dec
aam
xorl
cmpsb
loop
jg,pn
ret
xchg
jns
and
dec
inc
mov
sub
outsb
movsb
push
pop
sarb
jle
testl
mov
mov
cmp
int3
rcrb
jne
sbb
es
jmp
or
notb
call
jecxz
in
xchg
inc
dec
pop
cs
arpl
loop
xchg
sbb
inc
out
scas
pop
scas
movsb
inc
dec
jno
push
xor
mov
popa
imul
dec
pop
push
dec
imul
and
dec
inc
sarl
mov
popf
dec
je
add
adc
inc
inc
cmp
outsb
xchg
add
cmpb
jae
mov
orb
mov
dec
sti
out
jno
mov
shll
dec
outsl
xor
rcrl
or
adc
dec
add
xchg
and
dec
inc
out
cmpsl
cmc
push
leave
or
nop
sub
dec
mov
xchg
fistpl
std
push
xchg
shl
stos
lret
push
xchg
inc
in
fists
dec
ror
sbb
ja
sbbl
imul
mov
cmp
in
push
fstps
pop
xor
mov
xlat
mov
lcall
pop
fcoms
in
dec
icebp
mov
aaa
ja
push
inc
push
inc
cmp
dec
scas
mov
int3
popl
mov
jmp
jnp
rol
fistl
dec
push
ficoml
inc
stos
mov
enter
xchg
cmp
dec
adc
call
into
pop
inc
int
dec
jl
in
push
out
xchg
sahf
jne
shrb
dec
aas
stc
roll
dec
mov
xchg
and
sbb
jne
iret
mov
repz
mov
push
test
or
mov
adc
jns
imul
arpl
cmpsb
inc
dec
cmp
xchg
outsb
stos
add
not
dec
notl
iret
rcr
js
dec
xor
shrb
and
sahf
pop
mov
dec
sub
mov
je
push
jbe
mov
pop
sub
dec
jno
pop
xchg
push
mov
and
dec
gs
jno
xlat
addr16
sub
pop
xchg
outsb
dec
fiaddl
sbb
aam
ret
dec
or
repnz
sti
push
aam
and
xchg
jg
push
lcall
test
in
or
or
or
jne
ds
push
sbb
movsl
out
dec
inc
insb
dec
cmp
adc
cwtl
hlt
push
popa
lock
mov
push
aaa
rcl
std
push
dec
pop
fimuls
js
int
test
xor
out
sub
dec
or
rcll
sub
inc
idivl
adc
pop
jmp
dec
push
hlt
xchg
lods
outsb
cmp
dec
repz
lcall
fbld
imul
sub
mov
xorl
lret
mov
cmp
pusha
and
push
aaa
dec
sbb
add
es
jl
pop
cld
adc
or
xor
lret
push
sbb
test
mov
sub
dec
xchg
std
in
xor
sbb
jmp
je
push
push
sbb
in
orb
mov
inc
push
cmpsb
mov
pop
xchg
push
es
lea
push
in
adc
mov
mov
out
dec
jp
sahf
cli
js
dec
je
pop
es
and
add
push
fstps
push
mov
daa
add
fdivr
sub
or
push
dec
push
push
push
mov
mov
jl
lods
push
lea
stc
mov
mov
xor
push
sub
stos
in
dec
imul
lret
jae
push
dec
cli
jg
das
lods
out
dec
in
fld
leave
es
in
sbb
clc
or
push
jg
lahf
dec
mov
xor
out
sbb
adc
mov
ss
mov
fmuls
dec
and
loope
or
pop
sub
xor
xlat
xor
push
adc
outsl
into
popa
jg
and
das
sub
sbb
addl
in
imul
outsb
xor
sbb
pop
jp
cmp
in
inc
push
inc
pop
dec
dec
mov
lcall
inc
ds
lods
test
xchg
stos
pushf
inc
call
dec
cmp
lcall
add
xchg
xchg
aam
jecxz
aas
repnz
call
insb
or
ja
push
clc
inc
fwait
icebp
dec
scas
iret
dec
aam
mov
xchg
inc
dec
movb
lret
sub
daa
push
dec
loop
insl
js
hlt
push
in
and
jae
dec
push
loope
mov
ret
nop
dec
stos
cmp
push
adc
out
dec
lea
adc
adc
mov
xchg
loope
xchg
dec
loopne
add
mov
inc
inc
lods
clc
pop
dec
mov
lret
outsl
push
dec
out
rcrl
leave
lods
xchg
sbb
mov
call
outsb
xor
test
imul
std
je
jl
jb
es
add
dec
push
ss
imul
je
mov
add
xlat
fwait
mov
inc
dec
jo
adc
lcall
lret
inc
mov
pop
dec
cmp
insb
lcall
xchg
sbb
dec
ret
push
xor
mov
xchg
emms
pop
mov
sub
cmp
dec
xchg
push
push
dec
lds
ljmp
fs
pusha
movsb
pop
dec
mov
mov
popf
nop
mov
and
jge
mov
cld
divl
add
inc
and
imul
pushl
and
push
dec
mov
notl
addr16
or
xor
out
dec
push
int3
xor
and
or
xor
aam
dec
add
pop
mov
test
or
jae
loopne
dec
shll
aaa
fwait
lods
leave
subb
jnp
cwtl
shll
lcall
stos
pop
pusha
sti
imul
mov
add
mov
stc
push
hlt
xchg
loop
ficompl
imul
imul
les
xchg
call
xchg
cs
adc
dec
inc
pop
xor
xlat
outsb
out
js
push
dec
and
mov
sbbb
lahf
sahf
dec
sub
shlb
cmp
fstpl
inc
test
jg
aam
dec
pop
std
shl
mov
add
dec
xchg
movsl
ds
repz
push
mov
push
mov
xor
mov
inc
jb
lock
iret
imul
popf
idivl
dec
subl
pop
iret
adc
icebp
dec
dec
jl
sar
inc
aaa
sub
mov
push
dec
jnp
sub
lods
call
sub
mov
jl
and
dec
push
popf
jnp
repz
pop
mov
xor
sbb
fstps
dec
in
push
loope
or
or
push
jg
jmp
jb
jbe
xchg
cld
sbb
dec
sahf
ret
lock
adc
repz
pop
inc
inc
mov
cltd
int3
jge
std
push
daa
int
iret
ljmp
punpckhwd
gs
cltd
test
mov
mov
cli
dec
cld
movsl
jl
adc
and
dec
push
add
cmp
push
sbb
rdmsr
sbb
dec
subl
sti
test
popa
aad
and
and
add
je
xchg
negl
lods
mov
subb
clc
mov
mov
aas
aaa
mov
mov
gs
add
dec
dec
inc
xlat
sbb
mov
sbb
cltd
push
pop
xor
push
sbb
dec
jbe
push
adc
mov
sub
les
sub
sbb
xchg
adc
lds
pop
aaa
or
or
out
aas
xchg
rorl
mulb
fwait
push
pop
adc
sbb
sub
mov
inc
pop
out
call
xchg
cmpsl
dec
xor
cmp
sub
push
popa
sbb
test
imulb
mov
cmpb
ja
loop
adc
pop
popa
bnd
or
mov
pop
inc
lret
xchg
or
ror
loop
jne
dec
lds
jmp
mov
outsl
push
pop
gs
cmpsb
xor
pop
cmp
jecxz
iret
lods
fldl
cmpsl
dec
push
or
xchg
out
inc
seto
call
mov
push
stc
jge
or
daa
jns
rorb
movsb
jp
mov
popa
jnp
test
dec
sbb
dec
test
call
cmp
pop
inc
add
dec
aad
dec
xor
mov
cmp
int3
sbb
pop
xchg
mov
or
cwtl
inc
imul
inc
inc
cmpsb
mov
xchg
jae
push
out
jmp
cmpsl
xchg
leave
dec
inc
js
fdecstp
jo
sbb
xchg
pop
in
push
xchg
aaa
fisttpll
and
fmull
in
sbb
inc
rcrb
dec
lcall
sbb
nop
sbb
dec
shrb
add
dec
xchg
dec
adc
sti
mov
mov
fisttps
imul
mov
xchg
pop
ficompl
mov
lcall
enter
jns
xor
push
adcl
mov
loopne
fs
les
mov
dec
scas
out
or
push
mov
push
lds
or
adc
arpl
mov
pop
dec
dec
pop
outsl
pushl
nop
pop
lret
or
pop
cmp
dec
into
push
fwait
sub
mov
cmp
repz
rcrb
ds
inc
cwtl
sub
jmp
aam
fs
dec
sbb
or
adc
bound
jno
push
mov
inc
sub
inc
cmp
or
outsl
mov
cmp
test
notl
pushf
rcll
dec
cmp
xor
cltd
inc
add
pop
mul
pop
rol
imul
push
in
jmp
fisubl
outsl
les
ss
jno
aam
push
aam
push
dec
mov
mov
dec
cmc
mov
in
test
out
dec
and
push
pop
lret
push
adc
inc
inc
loope
and
subb
dec
mov
mov
incb
sbb
data16
mov
pop
stos
int
xrelease
and
dec
push
into
stc
insb
xchg
lea
lcall
sbb
lock
mov
pop
aaa
pop
dec
mov
pop
mov
addr16
inc
lds
inc
movsb
cmp
cs
lea
in
icebp
jl
es
roll
repnz
mov
xchg
cmc
push
push
xor
mov
decl
mov
push
push
adc
push
push
jnp
push
adcl
or
dec
cmovno
push
loope
cmp
mov
rorb
or
cs
sbb
or
xchg
cmpsl
pop
or
ret
mov
or
scas
test
inc
mov
cltd
insb
inc
cmp
add
inc
stos
and
dec
mov
mov
jbe
cmp
popf
sbb
mov
mov
dec
dec
xchg
push
push
addr16
dec
lods
inc
mov
js
cltd
sub
lahf
cmp
jge
ret
jp
mov
pushf
xchg
leave
mov
jp
mov
dec
mov
or
into
or
dec
clc
je
fidivs
push
mov
push
call
gs
mov
xor
shll
jne
addr16
leave
out
jb
and
xor
subb
icebp
push
jae
push
loope
mov
xchg
xor
xchg
push
dec
iret
out
pop
xchg
les
mov
lods
sub
push
xlat
push
arpl
js
call
dec
loope
mov
adc
out
cmp
rol
jno
and
mov
ja
dec
and
popa
mov
pushf
test
movsl
jg
xchg
cld
inc
movsb
cmp
test
adc
cltd
ret
popa
mov
sbb
mov
sti
movsl
orl
jg
xlat
dec
pop
lret
adc
cmpsl
imul
fists
and
pop
xchg
cwtl
xlat
stos
loop
and
mov
pusha
dec
scas
sub
jge
or
subl
ficoms
fisubl
xchg
mov
jecxz
push
add
int
xchg
xchg
in
pop
or
jl
sbb
inc
ror
dec
scas
adc
std
shrl
loopne
hlt
inc
stos
push
lea
dec
andb
pop
jnp
insl
push
pop
inc
mov
inc
mov
xchg
cmpsl
dec
in
loope
ds
ret
lds
cli
sbb
pop
orl
mov
push
dec
ret
out
imul
out
shr
dec
push
stos
pop
xorl
dec
aaa
imul
inc
mov
jmp
cmp
out
adc
xchg
xor
push
xor
xchg
stos
loope
rolb
cmp
aad
or
and
xor
dec
sbb
jmp
lahf
mov
cmpsb
in
pop
mov
fbld
dec
cmp
inc
inc
rcrb
push
pop
dec
lock
addr16
pop
jg
mov
jnp
push
ljmp
icebp
test
dec
pop
dec
std
adc
add
pop
push
push
pop
xchg
scas
adc
mov
pop
jmp
xchg
pop
vpmullw
ljmp
sub
sub
jmp
jecxz
inc
nop
out
xchg
call
into
mull
das
dec
iret
loop
push
shlb
mov
je
push
stc
xchg
mov
sub
dec
imul
pop
xor
cmpsl
add
stc
ja
mov
lods
push
inc
push
add
pop
ljmp
push
push
aam
js
aas
cmp
cmpsb
sbb
jae
dec
dec
add
and
fwait
cld
daa
mov
flds
push
sub
xlat
and
jmp
mov
mov
dec
stc
hlt
sarb
ficompl
out
dec
ja
iret
add
call
or
push
gs
jno
in
mov
js
cmc
xlat
lods
dec
ljmp
mov
bound
es
inc
sub
add
rclb
pop
xlat
sahf
rcrb
cmp
inc
arpl
fcmovne
dec
pop
sub
fbstp
xchg
hlt
jmp
cli
jmp
jae,pt
inc
sbb
insb
mov
or
sub
mov
push
mov
aaa
and
jnp
jge
pop
icebp
push
dec
pop
inc
mov
push
mov
xchg
and
inc
sub
push
inc
pop
push
fsub
dec
pop
cmp
das
lods
ret
xchg
pop
dec
sahf
into
icebp
adc
cld
or
faddl
pop
and
adc
mov
decb
dec
sahf
mov
dec
adc
xchg
xor
or
push
pop
or
xor
mov
xchg
inc
movsb
cld
sbb
xchg
push
jo
loope
add
inc
sub
or
jns
dec
mov
mov
cltd
mulps
mov
clc
push
jmp
push
lds
into
dec
mov
inc
jb
mov
lahf
cli
sub
push
enter
and
sub
lods
imul
loope
pop
xor
out
lahf
rorb
sti
cld
out
pop
aad
dec
add
movsl
push
xchg
ret
dec
fcomps
xorb
push
fimuls
adc
jp
xchg
xchg
arpl
push
push
mov
adc
out
push
iret
mov
or
pop
add
fcomps
sbb
mov
and
pop
es
popf
xlat
dec
xchg
xchg
les
xchg
and
scas
jecxz
pop
arpl
es
xor
add
mov
out
cmc
xchg
roll
and
cmp
out
pushl
pop
or
sarl
pushf
dec
xor
sahf
in
sub
lret
dec
xor
adc
fimuls
popa
iret
jno
inc
lods
sub
test
push
pop
dec
dec
mov
xlat
mov
jl
dec
and
mov
lock
in
mov
imul
jl
inc
rorb
repz
sub
xor
or
push
shrl
jmp
int3
cmpsb
lock
xchg
add
jp
scas
ffree
jmp
mov
shr
jl
mov
cmp
cmp
testb
dec
in
divl
daa
scas
out
rcrl
push
insl
fsubrs
push
shl
xor
loope
pop
and
insb
repnz
arpl
add
adcb
xchg
push
dec
ja
roll
mov
dec
adc
pop
jge
xor
add
dec
popf
imul
stos
out
mov
inc
mov
aas
dec
mov
sub
dec
out
sbb
dec
daa
aaa
push
add
stos
sbb
mov
or
in
inc
push
jbe
push
iret
add
inc
adc
cltd
mov
dec
in
mov
dec
scas
mov
je
in
pop
jg
lock
adc
jno
dec
ficompl
test
push
pop
in
xor
adc
push
mov
jmp
sub
repz
xor
outsl
adc
popf
dec
shll
js
push
mov
cmp
dec
xchg
jmp
cmp
mov
adc
aam
dec
testb
mov
nop
sub
call
and
xor
jbe
add
in
sbbb
mov
into
sahf
scas
jmp
pop
sbb
orb
pop
push
rcr
push
dec
mov
pusha
movsl
sbb
imul
push
xchg
aam
push
mov
rorl
test
jns
movsb
fmull
mov
sbb
sub
leave
xchg
xor
dec
inc
cltd
dec
xor
ret
add
inc
sub
push
sub
lret
out
dec
popf
in
stc
xor
lock
call
fsubrs
subb
add
rorl
dec
loopne
mov
lret
imul
ja
movsl
gs
dec
mov
adc
mov
sub
fbld
stc
cmpsl
and
mov
dec
pop
jecxz
cmp
or
dec
jg
addb
aam
push
dec
xchg
mov
repz
mov
cmp
imull
jnp
push
ret
ja
mov
cwtl
sbb
sub
leave
sub
pop
jge
aaa
dec
push
push
push
les
testb
dec
push
movsb
ljmp
lea
lret
lret
sub
in
into
jecxz
adc
mov
dec
push
sub
xor
loop
inc
sahf
bound
stos
incb
out
clc
fdivrl
lods
imul
insl
mov
cs
dec
push
out
cmc
mov
inc
cli
dec
cmpl
lcall
subb
int3
jl
cmp
pushf
sbb
inc
dec
int
inc
or
dec
mov
out
repnz
dec
cld
gs
ret
leave
pop
call
xor
and
out
inc
rcrb
in
loop
rolb
add
std
jge
inc
iret
xchg
dec
in
jae
stc
xchg
insl
movq
aas
loopne
jb
test
or
iret
orl
push
clc
adc
and
imul
dec
add
mov
in
jecxz
rcll
lahf
push
add
push
push
push
jmp
es
add
je
push
das
pop
clc
mov
jmp
jg
mov
xor
out
fs
xchg
and
sub
gs
pop
dec
dec
cs
add
dec
and
cmpsb
fstl
stc
cmp
insl
mov
sbb
popf
xor
popa
testl
jno
xchg
leave
out
adc
pop
dec
insl
sub
xchg
lods
mov
pop
sbb
cmp
enter
push
out
cmp
rcll
dec
adc
add
popa
dec
push
jae
push
sbb
imul
cmp
lret
loopne
mov
push
inc
xchg
dec
cmpsb
jo
std
xor
pop
mov
add
fwait
push
lahf
in
sti
xor
inc
mov
dec
dec
pop
hlt
in
jle
ret
cltd
inc
pusha
adc
dec
sub
xchg
shll
loop
push
je
dec
add
sub
dec
push
xchg
leave
ja
stc
cmp
jle
cmpsb
pop
imull
xchg
rcrl
add
fnsave
test
adc
sbb
out
inc
jl
push
shlb
or
je
mov
sbb
xor
and
mov
fisubl
enter
push
mov
insl
clc
add
dec
push
arpl
sbb
loope
sbb
adc
sbb
jp
sahf
das
dec
sbb
push
sbb
lds
cmovns
push
xor
add
js
imul
shl
mov
xchg
dec
test
out
pop
dec
mov
leave
and
popf
add
pop
xchg
ficoms
and
stos
xor
in
idivl
and
sbb
out
imul
lods
mov
in
mov
push
in
dec
jl
lahf
fcomip
std
cmp
dec
mov
add
insb
xchg
pop
dec
mov
pusha
mov
imul
jg
xor
lahf
loope
adc
lcall
dec
inc
fstp
scas
dec
movsb
outsb
jg
or
push
gs
ss
add
lock
xor
and
push
push
into
and
add
subps
jne
rclb
pop
dec
lahf
out
mov
pop
movsb
dec
sub
xor
mov
mov
cmp
in
sub
inc
movsl
dec
xorb
push
pop
les
cmp
or
enter
jno
dec
push
mov
stos
lods
push
fwait
das
jl
xchg
repz
in
imul
aaa
mov
pop
fadds
mov
jns
mov
lock
hlt
push
in
xchg
dec
add
sub
cmp
notb
push
dec
mov
push
clc
mov
or
push
xchg
jae
hlt
and
repz
stos
sbb
outsb
jg
add
scas
dec
pop
mov
repnz
xchg
dec
decb
shr
dec
cmp
sub
sbb
fidivrs
mov
aas
lret
mov
push
mov
iret
int
loope
mov
rcll
outsb
push
jle
jl
dec
mov
add
imul
sti
dec
cwtl
aaa
ja
mov
add
adc
dec
fs
lret
movsb
adcb
icebp
dec
ret
shll
jbe
dec
out
mov
jecxz
enter
pop
dec
xchg
push
add
sbb
sub
dec
add
negb
and
fimuls
popa
jnp
pop
mov
dec
dec
nop
mov
mov
fsts
sarl
adc
aas
ss
in
mov
push
xchg
lcall
insl
ret
sbb
icebp
jge
or
addr16
dec
pop
fcmovu
cltd
dec
loope
std
lahf
mov
aas
arpl
push
into
mov
loope
xchg
push
stc
out
sub
mov
cli
gs
enter
and
sub
add
data16
mov
mov
inc
sub
dec
mov
add
and
xor
jle
aam
es
sub
cwtl
je
dec
andl
stos
cmp
push
clc
into
call
dec
int
mov
mov
xchg
sub
iret
fcoml
pop
lret
xchg
dec
pop
cmp
dec
arpl
fistpl
jnp
xor
incl
sbb
cmp
push
cmp
pop
test
mov
dec
jmp
call
xor
ljmp
pop
sbb
inc
mov
shlb
sti
mov
jmp
jno
out
inc
inc
shll
dec
dec
and
arpl
adc
out
dec
jo
pop
pop
dec
push
pop
cmpsl
dec
mov
jnp
inc
stos
in
and
fsubrl
jecxz
adc
add
leave
push
ljmp
lods
cmpl
pop
aam
xlat
sti
je
xor
outsb
dec
pop
mov
sbb
cmp
or
testl
jae
dec
cld
push
mov
dec
dec
loope
ficoml
lods
push
cmpsb
mov
dec
movsb
pop
jecxz
mov
fstpl
dec
ds
mov
jl
inc
outsb
inc
mov
imul
push
shrb
dec
dec
rcl
and
addr16
cmc
dec
ss
insl
sbb
xor
mov
insb
repz
int
push
ret
mov
dec
aaa
cmp
lods
add
leave
or
or
inc
stos
mov
mov
jae
out
xor
orl
add
dec
popf
shrl
cmp
inc
rorb
mov
cmc
dec
stos
out
pusha
push
fxch
ret
push
sub
cli
sbb
testb
out
push
dec
xchg
xchg
dec
mov
scas
rorb
ss
dec
sbb
sub
inc
mov
push
test
jmp
inc
filds
dec
mov
mulb
dec
addb
ret
pop
mov
lcall
xor
fdiv
test
xor
rcl
ja
fs
dec
negb
scas
jo
pop
inc
jmp
dec
fcomi
lds
dec
mov
push
or
dec
nop
dec
lret
cmpsb
or
pop
int
aam
push
into
dec
repz
das
ds
mov
movsl
dec
xor
jne
call
aaa
mov
add
jge
inc
push
mov
push
or
sbb
push
out
ret
imul
push
int3
push
inc
gs
or
dec
pop
dec
sbb
sub
testb
stos
sarb
xlat
pop
mov
xchg
movsb
je
xor
andb
pusha
test
ja
mov
shlb
int3
hlt
cmp
sub
sub
ret
sub
dec
xchg
loop
aaa
test
dec
mov
or
mov
sub
dec
fiaddl
out
iret
pop
inc
dec
movsb
jbe
sbbl
dec
mov
xor
dec
repnz
xor
mov
stos
fstpl
sub
sub
cmp
test
mov
fbld
aam
aad
jno
int
stc
or
pop
into
jmp
insb
add
push
or
pushf
mov
scas
dec
push
push
lock
jne
xchg
dec
jae
aaa
nop
sub
adc
idivl
mov
mov
movsb
scas
mov
test
icebp
xchg
push
dec
hlt
ds
shrl
loop
adc
mov
push
dec
mov
and
xchg
pop
push
sub
clc
enter
push
xor
imul
push
push
popf
scas
mov
mov
iret
cwtl
mov
push
inc
push
cmp
fstp
or
cmpsb
push
inc
xchg
out
sarl
xchg
sub
jle
xor
jmp
inc
mov
mulb
out
mov
push
shlb
dec
std
mov
loope
les
lcall
mov
stos
xchg
fwait
xchg
xor
insl
mov
or
cli
push
in
sub
and
jo
add
lock
xor
mov
lahf
mov
push
jmp
es
call
je
or
nop
pop
sub
mov
jmp
or
scas
aas
int
jb
data16
gs
xchg
and
rcr
lods
js
mov
sub
pop
push
jmp
xor
dec
adc
jb
push
dec
xchg
inc
sub
mov
nop
sarb
fnstenv
sub
sub
dec
fmull
xor
dec
xor
dec
xchg
mov
xchg
dec
leave
sub
and
ja
dec
lahf
mov
jo
ss
push
in
pop
dec
push
inc
mov
dec
sub
push
push
mov
out
mov
dec
test
mov
sbb
cmp
fcmovnbe
xchg
push
loope
pushf
dec
mull
pop
cmp
mov
dec
xchg
sub
mov
dec
pop
pop
xchg
or
loop
adc
dec
shl
cli
adc
dec
or
cmpsb
repnz
push
mov
xchg
adc
dec
sub
or
push
mov
inc
pop
mov
fmull
insb
orl
dec
mov
mov
push
adc
jmp
insl
cmp
push
mov
push
iret
sbbb
jmp
push
pop
mov
aad
cmc
jp
pop
xchg
push
je
push
mov
out
pop
popf
sbb
dec
xor
and
cwtl
stos
imul
pop
inc
jns
leave
mov
xchg
popf
and
dec
js
xorl
loop
sbb
hlt
dec
cltd
pop
stos
bound
or
sub
scas
mov
xlat
and
or
cwtl
push
dec
mov
adc
push
scas
ret
inc
xchg
fistpll
and
cmp
push
xor
mov
popf
pop
in
add
mov
mov
imul
cltd
fcoms
aad
push
ja
mov
sub
aad
popa
sbb
push
testb
movsl
mov
jbe
cmp
dec
rcrl
es
bound
call
into
jp
ds
pop
dec
adc
jne
dec
or
pop
fdivr
sarb
mov
mov
ja
pop
sub
cmc
into
and
dec
je
or
sahf
cmpsl
bound
push
lods
push
nop
dec
daa
movsl
mov
xchg
jb
fmul
div
outsl
add
out
dec
dec
cmp
test
jmp
dec
push
ss
out
sub
daa
sub
shrl
stos
adc
test
pusha
mov
dec
es
dec
add
fcoml
jp
ficompl
lds
jecxz
addr16
jno
xor
push
push
mov
es
stos
arpl
dec
dec
sbbl
pop
insb
cli
dec
mov
mov
adc
lods
mov
les
fdiv
sub
repz
xchg
sbb
rsm
jg
jae
pop
test
dec
xor
ja
mov
out
dec
push
mov
ds
jmp
push
sbb
sub
movsl
rorl
mov
cwtl
dec
xor
lock
sub
stos
push
test
ret
add
imul
push
xchg
push
shll
sub
sti
cltd
push
push
cli
pop
shl
push
lods
inc
sbbb
dec
clc
gs
dec
fcoml
test
negb
pop
push
int
sbb
lret
orl
dec
ljmp
dec
es
cmp
daa
std
or
mov
xchg
shlb
xchg
lds
mov
jg
divb
pop
mov
pop
or
fs
pop
or
mov
cltd
mov
je
rorl
dec
loop
push
mov
sbb
pop
aas
pop
mov
test
mov
cmpsl
mov
mov
inc
enter
and
dec
or
add
cmpsl
inc
fldt
xor
push
popf
sti
jne
push
fcom
mov
out
and
sub
push
sub
andb
cmp
or
movntq
out
mov
push
push
pop
ret
push
dec
pushf
mov
lods
xchg
notb
mov
mov
inc
divl
xor
mov
int
adc
or
fimull
shlb
aaa
sub
loop
out
bound
push
popa
hlt
loopne
sbb
xor
dec
arpl
cmp
pop
jecxz
outsl
mov
push
inc
or
dec
shrl
and
ss
adc
sti
or
jmp
aam
mov
mov
inc
cmp
dec
or
cmp
xchg
dec
and
inc
sub
shrb
jp
jmp
in
mov
dec
mov
push
push
movsb
jle
pop
lds
jae
adc
dec
xchg
mov
inc
das
dec
rclb
enter
mov
mov
mov
dec
xchg
shlb
repnz
test
cmp
sub
dec
cmp
inc
jmp
xchg
ret
mov
loopne
push
jl
jp
push
mov
cmp
push
jns
pop
insl
pop
xor
shl
mov
stos
imul
imul
ret
loop
fwait
test
jl
add
mov
or
dec
out
mov
add
jnp
out
outsb
cmpsl
or
mov
dec
xor
shlb
and
imul
or
cmpb
xor
out
mov
mov
pop
pop
imul
nop
dec
push
sbb
cltd
outsb
push
xchg
out
jae
push
mov
fwait
lds
push
sti
rcrb
dec
jg
fbld
sbb
push
arpl
push
out
dec
iret
inc
pop
mov
imul
call
dec
cwtl
mov
popa
pop
and
push
add
ret
fisubrs
lcall
aad
fdivs
add
cld
inc
out
dec
adc
rorl
ja
orb
daa
mov
jecxz
sbb
jmp
jge
push
lds
and
adc
fs
enter
adc
mov
push
xchg
nop
dec
adc
mov
add
dec
into
sub
xor
das
pop
icebp
lahf
push
lock
pop
jne
fsubrl
jge
mov
test
jae
cltd
or
ror
sahf
stc
dec
push
int
or
in
jmp
repz
push
xor
movsl
dec
stos
insb
mov
or
lret
testb
mov
popf
jp
cmp
or
scas
sti
jae
and
mov
daa
dec
lret
sbb
dec
fwait
push
aaa
testl
inc
mov
idivb
sbb
pop
stos
fmuls
mov
stc
cmp
jns
jmp
jne
push
sub
dec
pop
add
xor
dec
mov
mov
xchg
dec
in
cmc
outsb
jo
sub
and
mov
jo
ljmp
imul
xlat
ja
dec
shl
outsl
cmp
cli
jbe
or
mov
aas
pop
sbb
std
mov
popf
mov
xchg
push
int3
popa
repz
int
jmp
xchg
add
insb
imul
mov
cwtl
jmp
in
dec
add
iret
inc
insl
aaa
imull
jo
dec
sahf
jmp
jns
stos
inc
dec
addl
lea
imul
sub
rcll
dec
negl
ret
mov
pop
pop
inc
dec
mov
sahf
hlt
bound
decb
jnp
sbb
lret
adc
mov
dec
sub
out
mov
mov
inc
pushf
call
int
in
fnstenv
idivl
and
rorb
dec
sbb
push
dec
fistpll
jo
dec
jno
pop
cld
in
in
ret
fists
xor
testl
jns
cwtl
jne
imul
cmc
dec
int
iret
or
outsb
sub
push
add
jmp
dec
mov
fidivrl
test
mov
mov
or
push
mov
jno
mov
push
and
jp
pusha
fnstcw
mov
lahf
in
push
ret
fwait
orl
push
lcall
je
stc
loope
ja
add
cmpsl
or
adc
pop
and
dec
jb
arpl
adc
push
sub
or
jae
mov
push
and
xchg
cmp
dec
fucomi
jp
xor
shl
sub
mov
inc
push
inc
outsl
dec
ds
dec
iret
popf
xchg
inc
call
aas
sub
sbb
push
xchg
cwtl
je
mov
mov
mov
pop
push
push
rorl
and
inc
sub
shlb
dec
clc
dec
dec
push
mov
push
leave
scas
into
in
xchg
pop
out
mov
mov
pop
xchg
popa
jl
scas
aam
fdivs
xor
sbbl
lahf
or
fcmovb
cltd
out
pop
outsl
sub
push
aad
xor
mov
jl
xchg
inc
cltd
push
loop
dec
sbb
shlb
mov
pop
cmp
outsl
xor
dec
dec
mov
imulb
xchg
sub
jecxz
iret
inc
dec
in
pop
icebp
cs
test
test
dec
je
xchg
push
imul
imul
push
dec
stc
push
adc
fisubrl
mov
push
loope
mov
sbb
push
aas
xor
cltd
push
lea
lods
cmp
jp
add
cmp
outsb
dec
xchg
sbb
jns
cmpsb
mov
out
xchg
imul
xor
pusha
imul
xor
int3
mov
out
dec
fiadds
leave
cmpsb
mov
dec
mov
add
dec
repnz
pop
xor
xchg
jmp
inc
push
in
fmul
test
leave
mov
mov
pop
enter
lret
lret
rcrb
push
mov
push
test
dec
jns
pop
fcmove
test
push
clc
or
lret
inc
mov
popf
or
test
mov
fidivl
int
gs
inc
lret
stc
pop
ret
fmul
rep
jae
lret
pop
mov
imul
pop
dec
dec
lock
test
insb
leave
and
cwtl
in
js
in
mov
mov
sahf
adc
pop
push
dec
inc
int3
inc
pop
aam
push
mov
mov
pop
mov
or
cmp
stc
icebp
out
stc
ds
flds
dec
mov
push
inc
dec
mov
mov
clc
sub
mov
cmovns
movsl
cmp
pop
je
and
jb
loope
scas
rcll
std
pop
fisttpl
mov
mov
dec
push
jo
push
pop
in
mov
les
clc
enter
sub
lcall
push
add
ficomps
inc
imul
sbb
into
jge
mov
rclb
pop
lret
mov
inc
inc
jle
pop
stos
mov
pop
into
mov
inc
arpl
cli
or
aam
int
loope
leave
push
mov
enter
stos
pushf
clc
or
push
cltd
push
ljmp
lds
push
sub
clc
in
push
push
gs
pop
setnp
inc
scas
icebp
inc
sbb
and
mov
cmp
dec
inc
xor
sbb
loope
dec
adc
mov
sub
into
fstp
lret
inc
adc
mov
jnp
lahf
inc
fldenv
leave
push
cwtl
cmp
jle
pop
or
test
xchg
sub
xchg
subb
ja
lods
imul
inc
shrl
arpl
fdivs
cmp
cmp
inc
es
push
inc
lock
xor
adc
cmp
adc
sub
loopne
fcompl
or
xor
cmp
insl
inc
andb
lret
mov
jns
jnp
in
mov
ljmp
xchg
rcr
pop
dec
jle
push
ret
fwait
xor
xchg
nop
xchg
int
mov
pop
jns
dec
inc
repz
xchg
leavew
sahf
xchg
aas
leave
dec
rclb
decb
fimuls
idivl
sbb
into
push
mov
int
xor
scas
lret
sub
rolb
sub
pop
cmpsl
lds
and
leave
sub
clc
lea
jns
and
sbb
xchg
pop
call
addr16
push
dec
add
lods
add
push
andl
mov
sub
pop
imul
cli
pop
push
and
mov
and
mov
pop
jle
pop
or
fldt
int
cmp
int
adc
roll
fs
xchg
lcall
sub
mov
mov
sbb
mov
pop
and
mov
sbb
incb
clc
xor
enter
ret
pop
or
push
stc
xor
ret
pop
outsl
cli
out
inc
stc
mov
xchg
pop
cmp
enter
lea
mov
bound
push
mov
pop
into
inc
scas
incl
cli
das
sbb
das
imul
jns
sahf
adc
ret
inc
push
inc
or
pop
cmpsl
jns
lds
les
dec
fwait
enter
cmpsb
int3
adc
jne
and
mov
mov
in
sub
push
hlt
jg
inc
sub
xchg
repz
xor
lods
rolb
cmp
ret
and
jmp
xchg
xor
add
pop
add
mov
rcrl
cmp
fwait
or
cmp
jmp
loope
adc
pop
add
mov
enter
mov
push
call
or
jle
pusha
mov
mov
and
mov
xor
push
vcvtps2dq
or
cmp
rolb
dec
pop
or
dec
mov
mov
fnstenv
cmp
sbb
sbb
loop
adc
pop
call
jecxz
popa
push
mov
or
jno
lea
imul
inc
inc
outsl
out
lock
jo
popf
push
adc
leave
pop
icebp
cmp
pop
das
test
push
jge
and
aam
mov
mov
cmp
rorb
inc
adc
call
int3
push
push
scas
or
jl
rclb
xor
pop
dec
inc
add
test
pop
lret
lret
test
sbb
out
mov
dec
or
sbb
or
push
fs
pop
or
clc
sub
add
adc
mov
sbb
and
out
fdivrl
inc
lcall
mov
xchg
test
iret
aas
loopne
xor
inc
jne
push
sti
xor
pushf
xor
fs
pop
xor
sub
and
push
iret
mov
shl
sub
cmp
sar
ljmp
stc
sbb
sub
cwtl
cmpsb
push
and
popf
xor
sbb
sbb
ret
jo
dec
adc
sub
jecxz
dec
jp
push
xor
jmp
cltd
mov
add
scas
dec
mov
pop
pop
and
and
das
inc
add
lret
and
imull
orl
bound
aam
mov
dec
xchg
mov
pop
mov
jne
pop
stc
cmp
ja
nop
jecxz
adc
sub
mov
and
adc
dec
sbb
cmpsb
push
ret
sub
mov
pop
pop
fs
dec
addr16
xchg
icebp
inc
pop
test
subl
cmp
jae
add
aam
xlat
out
cmp
sub
mov
sbb
lock
jecxz
add
pop
mov
inc
push
js
pop
sub
xchg
and
cmp
cwtl
inc
or
sbb
cmp
add
divb
sub
dec
cmp
dec
xchg
jp
inc
pop
xor
inc
xchg
jmp
mov
das
xchg
ja
dec
lahf
sbb
mov
sbb
or
icebp
ljmp
inc
vcvtsd2si
inc
clc
ror
sbb
adc
sti
in
mov
xchg
and
movsl
loopne
dec
mov
sbb
fwait
pop
iret
jns
aad
daa
jne
mov
mov
add
nop
sbb
add
add
cli
imul
mov
push
outsb
sti
pop
mov
pop
ret
ret
stc
fiadds
inc
dec
icebp
and
or
sbb
cmove
inc
repnz
fildl
sub
inc
pop
pusha
lret
out
pop
in
mov
mov
lock
mov
pop
mov
or
dec
add
lret
out
int3
ja
in
lds
gs
in
add
in
imul
sbb
jmp
dec
add
xchg
mov
xchg
xor
inc
js
inc
daa
pop
jno
push
xchg
ret
dec
push
cli
dec
cld
sbb
cmp
push
out
rcll
pop
push
xlat
test
mov
arpl
popa
inc
fcoms
mov
add
rcrb
adc
enter
int
dec
mov
out
jge
cmp
mov
and
mov
dec
pusha
into
push
mov
icebp
add
dec
add
sbb
push
dec
add
fiadds
mov
ja
mov
mov
enter
and
add
or
pop
dec
inc
les
mov
sbb
sub
and
rorl
push
jne
and
icebp
mov
loop
fiaddl
push
loop
cmpsl
lea
leave
arpl
aaa
test
into
test
fstpl
or
mov
in
pop
jge
dec
ret
ficompl
test
or
daa
dec
or
test
xor
ss
cwtl
fwait
mov
insb
imul
repz
dec
inc
lods
push
xchg
sub
pushf
inc
call
pop
push
mov
pop
icebp
cmp
inc
sbb
iretw
and
fwait
jno
add
inc
mov
adc
movsl
icebp
jnp
xchg
enter
dec
cmp
out
bound
jae
pop
les
and
pop
dec
ror
inc
push
mov
mov
pop
mov
push
mov
add
dec
std
and
jmp
push
neg
push
inc
lahf
pop
inc
dec
jl
stc
fstps
inc
pop
mov
mov
inc
xchg
lods
clc
rol
push
xor
pop
ret
dec
pusha
push
dec
pop
rep
cli
pop
push
subb
lret
add
loope
inc
mov
popa
mov
cmp
pop
leave
fildll
sub
dec
add
or
jl
cmp
pop
adcb
test
lcall
scas
add
cmp
add
fistps
sbb
inc
dec
sbb
cmpsl
or
sub
jg
leave
xor
pop
and
xchg
or
dec
push
pop
adc
arpl
xchg
shr
mov
inc
dec
mov
add
jle
out
pop
lsl
test
stc
fwait
mov
jmp
jge
bound
xchg
and
lea
lds
lret
shlb
outsb
sub
pop
inc
ds
imul
pop
jae
roll
aam
pop
sub
sub
ret
add
lret
fxch
xchg
sub
test
xor
add
pop
add
pop
daa
ljmp
loopne
ret
jns
cwtl
add
dec
cmp
sbb
inc
inc
inc
xor
cli
jl
cmpsl
xchg
sub
add
push
mov
fstp
scas
popf
cmp
inc
dec
mov
ljmp
inc
sub
int3
addr16
sub
cmp
ret
adc
adc
pavgb
movsb
inc
stc
xchg
ret
dec
test
or
push
inc
gs
xchg
push
imul
push
or
jmp
dec
decl
lcall
dec
sub
icebp
rcrl
in
xor
sbb
add
repz
dec
aad
sub
shl
les
insb
xchg
dec
cs
mov
sub
inc
or
decl
and
leave
out
pop
or
xor
pop
mov
rorl
add
inc
out
xchg
mov
xor
cmp
ss
dec
or
scas
cwtl
cli
adc
add
push
cltd
pop
outsb
add
dec
adc
fwait
scas
sbb
sti
dec
arpl
push
icebp
int3
xchg
shrl
out
sar
or
mov
mov
rcrl
xchg
inc
mov
insb
dec
xor
ds
int3
and
sub
call
dec
dec
out
inc
mov
in
adc
or
mov
bound
pop
xchg
lods
fldcw
mov
stos
sub
xor
adc
add
or
pusha
nop
xor
dec
sti
mov
xchg
pop
leave
inc
in
xor
jmp
pop
push
xchg
xor
jmp
and
mov
sub
ja
mov
cld
out
fistpl
push
sub
pop
sub
or
inc
sub
adc
pop
rclb
insl
dec
dec
push
or
das
push
sbb
add
stos
add
enter
adc
insb
inc
lock
xor
mov
push
pop
sub
imul
jo
loop
dec
push
sahf
adc
ret
adc
adc
mov
xor
sbb
ret
or
sub
push
popa
push
sbb
lret
jmp
jg
movsl
push
xchg
pop
je
mov
jb
aaa
stos
es
xchg
and
shlb
sbb
shrl
insb
nop
xchg
pop
popa
test
arpl
adc
pop
push
add
pop
fcomip
popf
popl
inc
push
mov
xchg
ror
fldl
add
lret
out
push
xchg
aas
dec
fcmovnbe
lea
je
mov
jp
loop
dec
pop
mov
push
jne
int3
push
pop
clc
fadd
mov
stc
sbb
mov
flds
dec
cmp
adc
dec
scas
pop
xor
jae
sbb
sbb
push
decb
xor
mov
push
test
push
mov
jg
mov
test
mov
mov
or
daa
add
push
test
and
mov
pop
dec
adc
pop
test
cs
mov
iret
aad
insl
mov
sbb
sub
lock
push
cs
sbbl
rcrl
loopne
lret
push
sub
cmp
inc
xor
jbe
jge
and
jo
or
jns
clc
into
inc
jle
mov
pop
mov
push
jb
scas
dec
fdivl
mov
xchg
and
bound
stos
stos
add
test
iret
test
lret
pop
inc
jmp
mov
leave
sbb
sub
ds
push
cwtl
mov
pop
aas
int3
call
jmp
or
or
mov
ret
daa
cmp
leave
fsubrl
ficompl
dec
inc
add
or
sahf
scas
sub
pushf
and
pop
pop
call
or
push
js
lret
jns
inc
or
add
push
sysret
inc
push
jp
adc
bound
stos
inc
push
push
loop
inc
inc
pop
or
ret
jnp
and
lock
outsl
in
push
adc
int
imul
sbb
jbe
jne
rcll
in
scas
xor
adc
sti
inc
push
into
pop
sbb
xchg
dec
dec
inc
inc
pop
imul
or
loop
or
jmp
pushl
pop
outsb
adc
rclb
js
mov
dec
pop
aad
movsl
sub
inc
jae
sbb
dec
fimuls
fwait
or
insl
inc
inc
inc
leave
jmp
push
test
pop
lock
xor
lcall
mov
lods
dec
jmp
pop
jecxz
mov
or
xchg
mov
in
fucomip
stc
lods
pop
inc
fstl
or
jl
inc
imul
push
enter
lock
push
lods
cmp
sbb
xlat
and
add
and
sub
pop
les
or
ret
stc
add
cmp
push
leave
out
fcompl
aam
cmp
xor
sbb
mov
inc
cmpsl
shll
test
jmp
mov
pop
nopl
mov
dec
testb
mov
jnp
cwtl
mov
xor
rcl
dec
dec
add
negl
outsb
test
in
jo
outsb
cmp
fistl
arpl
mov
test
lret
dec
dec
out
xchg
pop
cmp
push
or
adc
lds
push
enter
push
inc
sbb
mov
scas
lods
sub
mov
mov
and
adc
cmp
xor
jno
bswap
int
and
xor
xor
cmp
sbb
push
adc
push
lds
in
sub
push
imul
sub
insb
int
rep
dec
insb
mov
lods
ror
mov
decb
cmp
fstpl
test
lods
insl
das
mov
inc
test
test
fnstenv
jb
loop
sarb
fnsave
jae
fldt
fisubs
pop
add
das
stc
dec
into
adc
clc
sub
mov
hlt
xor
insb
mov
ds
add
jns
xchg
add
xor
insb
dec
dec
dec
inc
inc
inc
xlat
leave
push
xor
mov
push
faddl
rcr
or
inc
movsb
test
push
mov
fisubs
xor
sarl
pop
inc
das
aam
or
jge
sub
pop
sub
or
or
xor
stc
subl
or
pop
mov
sbb
cmpsb
jnp
mov
push
lcall
xor
scas
inc
or
push
ret
and
add
inc
mov
pop
xor
adc
push
lods
pop
into
dec
pop
push
lret
mov
cmp
xchg
mov
and
aas
mov
or
sub
mov
inc
sbb
mov
jnp
and
mov
mov
push
pop
adc
je
sbb
fnstenv
or
adc
sub
cmp
lds
sbb
ret
inc
xor
aam
test
inc
sub
xchg
adc
or
xor
inc
pop
sbbb
or
hlt
pop
out
lret
addl
add
test
fistps
insl
rcll
dec
stc
and
aam
xchg
orb
sub
pop
test
scas
jecxz
jmp
mov
mov
mov
cltd
iret
dec
in
push
test
icebp
add
mov
jg
xchg
int3
fwait
mov
jge
ljmp
pusha
add
xchg
addb
das
inc
insb
dec
or
xor
fistpl
cmc
arpl
int
mov
rorl
pushf
push
dec
fwait
cmp
mov
sar
data16
dec
aas
insb
stos
flds
dec
in
cmc
inc
cmp
sbb
sub
mov
xor
cmpsl
jno
out
sbb
pop
shrb
mov
test
arpl
leave
repnz
push
inc
inc
jle
aam
push
ficompl
call
or
and
ljmp
fs
pop
int
mov
rcrb
pop
mov
cli
gs
jae
pop
mov
pop
hlt
or
and
fnsave
push
iret
sub
sub
movsb
insb
jmp
lret
leave
and
dec
push
cmc
mov
jo
or
xor
enter
loopne
int
mov
adc
inc
cmp
inc
imul
arpl
iret
aas
sar
dec
mov
int3
dec
push
rcll
rcl
lds
nop
add
push
cmpsl
sbb
dec
leave
jg
imul
sub
or
push
mov
mov
iret
push
mov
mov
aaa
push
fadds
call
add
stc
repz
mov
and
cltd
test
sahf
push
fs
or
pop
xor
or
xor
aas
add
inc
into
enter
test
jl
or
mov
roll
push
ffree
mov
xor
push
adc
mov
pop
push
xor
sub
out
sub
sti
add
sbbl
inc
fmull
xor
add
test
dec
cmp
sub
add
clc
mov
or
add
sbb
mov
lods
jg
mov
push
addb
test
out
lods
mov
dec
aas
lcall
rol
adc
outsb
f2xm1
arpl
and
jne
gs
mov
je
xchg
mov
jle
mov
in
test
call
or
or
cmp
fidivrl
fnstcw
mov
mov
mov
movsl
movsl
mov
fnsave
xor
xor
ss
pop
inc
inc
and
mov
fs
xor
or
or
push
push
or
loopne
mov
scas
xchg
dec
xor
imul
daa
add
jae
cmp
jp
leave
aas
scas
int
sub
jge
rol
mov
cltd
adc
push
scas
enter
lret
xor
jp
lret
cmp
push
push
imul
imul
stc
cmp
iret
leave
cli
lcall
in
adc
vpsrad
adcb
aad
push
sub
fcmovbe
scas
dec
inc
mov
mov
int
inc
fwait
test
cmp
jge
psubusw
testl
cld
sub
daa
sub
shrb
add
add
mov
sahf
lods
cwtl
fnsave
jnp
dec
dec
jae
or
lret
add
pop
xrelease
insl
lcall
aas
push
movsl
mov
dec
scas
sbb
push
fdiv
sub
xchg
xor
push
sub
das
cmpsl
push
mov
cmpl
cmp
pop
jb
pop
bound
loop
add
cmp
mov
xchg
add
add
jg
shlb
xor
jns
mov
dec
ljmp
sbb
ror
xchg
lods
adcl
push
lods
in
shrl
mov
fimull
insb
aaa
dec
aad
sub
pushf
dec
subb
orb
lock
adc
and
xor
int3
enter
push
sarb
cmpsb
pop
jge
cmpsb
outsl
clc
cmc
jge
adc
nop
mov
ret
pop
cmp
dec
scas
mov
or
push
adc
adc
inc
movsl
aaa
mov
sti
ja
outsb
pop
pusha
inc
fadds
ja
mov
or
pop
call
inc
pop
leave
pop
mov
sub
add
pop
add
mov
pop
push
rcr
fcmovu
fsubl
mov
push
ja
mov
ficomps
jge
sbb
mov
lahf
push
jecxz
xchg
lods
aam
call
push
pop
mov
add
repnz
jbe
ljmp
jg
ret
mov
adc
popf
and
cmp
insb
out
in
fdivl
sub
push
lret
jns
adc
xor
dec
mov
sahf
aam
loop
sub
lahf
dec
sbb
and
push
leave
push
leave
push
mov
mov
sti
in
dec
lods
cltd
scas
sub
pop
cli
lret
out
jmp
stos
test
jmp
inc
dec
jmp
add
sbb
loopne
addl
loop
pop
inc
push
data16
inc
cltd
in
fstl
loope
sahf
pop
lret
and
inc
jg
dec
adc
enter
pop
pop
sbb
mov
sub
xor
wbinvd
ucomiss
bound
call
lea
shll
add
inc
xchg
push
pop
js
adc
test
or
inc
cmp
jbe
cmpsb
cwtl
xchg
pusha
xchg
cmp
push
rcrb
fstpl
leave
push
shlb
or
inc
mov
or
cmp
cmpsl
push
dec
lret
and
inc
icebp
rorb
ss
orl
cmpsl
adc
and
sub
test
mov
sub
pop
sbb
jge
xchg
scas
leave
sti
outsl
mov
mov
mov
es
pop
aaa
or
inc
sub
push
pusha
test
push
pusha
sub
push
sti
add
insb
or
enter
flds
pop
cmp
cmp
pusha
cmp
fcmovnu
repnz
nop
test
ss
push
das
jp
sbb
inc
cmp
jle
fcompl
or
mov
cmp
into
mov
test
lea
cmp
lret
jbe
cltd
xor
cmp
jecxz
mov
dec
test
and
cmp
lods
jge
push
xchg
mov
mov
push
inc
xchg
jle
jns
dec
insl
add
xor
inc
pop
dec
sbb
shr
std
jmp
repnz
cld
je
jmp
imul
push
int
xchg
lea
dec
frstor
dec
cwtl
jne
pop
loope
pop
ss
ffreep
add
and
stos
mov
add
dec
add
enter
mov
mov
jb
dec
lods
sbb
ret
and
push
dec
shrb
mov
jbe
mov
jae
lock
pop
push
inc
push
cmpsb
push
mov
cltd
or
push
int3
xchg
rclb
xchg
adc
mov
roll
shrl
sahf
sbb
pop
sub
call
jne
aas
mov
fs
cmp
jmp
sbb
xchg
add
xlat
lods
xchg
sub
stos
cmp
cmp
test
ficoml
jnp
adc
repnz
or
xor
int3
rolb
rorb
ljmp
mov
xchg
dec
fisttpll
xor
mov
add
imul
lret
imul
dec
imul
movsb
not
mov
orl
push
insl
sbb
popa
push
inc
out
incl
bound
ds
inc
jle
stos
mov
mov
loop
xchg
clc
cmp
mov
fisttpll
pop
adc
sbb
dec
inc
data16
inc
loope
lods
dec
mov
jno
and
stc
dec
iret
mov
push
movsl
dec
mov
mov
lods
cltd
dec
push
mov
and
xor
mov
or
pop
dec
push
nop
mov
mov
lods
or
dec
pop
pop
test
adc
mov
es
inc
push
pop
sbb
and
repz
inc
or
push
fisttps
pop
in
xlat
rorl
adc
xor
or
dec
stos
lds
cmp
shufps
data16
add
dec
add
fs
rcrb
pushf
jns
dec
out
movsb
daa
jg
cmpsl
and
sub
imul
push
pusha
inc
mov
jmp
push
inc
rorl
shrl
mov
sbb
mov
cmp
fbstp
insl
imul
pushf
imul
mov
mov
fildl
lock
push
dec
xor
into
or
push
je
out
fwait
imul
movsb
xor
sub
mov
adc
xchg
add
mov
mov
out
out
dec
in
les
xchg
lea
pop
dec
sub
ror
dec
loop
call
dec
jmp
fidivrl
jge
and
xchg
fcomps
inc
push
popf
into
inc
and
inc
sbb
lods
mov
mulb
std
push
pop
daa
dec
jmp
adc
jg
inc
scas
xchg
sbb
dec
or
call
add
cmp
es
push
xchg
dec
sub
pusha
jecxz
mov
adc
push
dec
pop
in
insb
inc
loop
ss
mov
or
outsl
fsubp
fcoms
dec
mov
cwtl
inc
pop
sbb
mov
mov
icebp
outsl
jge
pop
adc
inc
push
push
sbb
testb
test
push
adc
lahf
or
mov
mov
inc
pop
mov
dec
scas
mov
add
dec
shll
stos
es
aad
pusha
xor
cmpsl
sahf
push
adcb
imul
fisttps
push
xchg
adc
sub
push
add
int
jno
dec
mov
jp
dec
mov
pusha
aad
ret
fsts
cmp
dec
mov
int
les
adc
xlat
dec
jno
or
dec
inc
pop
je
ret
mov
outsb
mov
pop
sbb
push
adc
cmc
pusha
in
imul
call
cmp
mov
js
xor
ret
pop
aad
xor
xor
ds
repnz
or
xchg
ret
idiv
inc
stc
inc
add
insl
mov
mov
lods
pusha
inc
dec
add
aaa
pop
scas
mov
pop
cmp
adc
out
sbb
es
inc
mov
loopne
push
and
dec
shll
call
pop
pop
push
inc
pop
pop
dec
cmp
or
enter
jno
mov
loope
xor
out
lahf
inc
push
jmp
cld
mov
rorb
fldt
out
gs
test
insb
mov
or
out
sub
out
imul
shr
leave
push
cmp
lsl
outsb
adc
lods
call
add
rcrl
sub
mulb
inc
cld
mov
enter
sbb
mov
mov
call
inc
imul
shl
xor
daa
push
jle
sbb
int
sahf
rol
push
cmp
push
repnz
sbb
cmc
pushf
xchg
dec
and
insl
or
fbld
xor
inc
xchg
std
and
addb
inc
dec
push
addl
xor
ffree
dec
xchg
jns
push
mov
pop
lret
lods
int3
jmp
cmp
or
mov
call
jns
iret
insb
pop
sub
dec
aad
fwait
je
jns
mov
lahf
cwtl
and
push
inc
sub
iret
dec
cs
sbb
add
loop
pop
mov
in
jle
xor
idiv
xchg
lock
fsts
or
push
adc
iret
repnz
mov
and
sbb
jb
ret
fsubl
test
sarl
ret
mov
enter
filds
pop
sub
xchg
or
push
je
dec
dec
mov
notb
test
jmp
rorl
mov
mov
lret
cmp
sbb
sarl
pusha
dec
iret
xor
movsb
cmp
sbb
scas
sbb
sbb
repz
pop
xchg
pop
fnstsw
orb
push
pop
or
inc
cmc
loopne
pop
or
fidivl
loopne
cmpsl
and
push
fwait
sbb
inc
out
addb
push
dec
add
cmp
pop
insb
leave
out
fucomp
push
cmp
pop
imul
sub
and
dec
in
js
cltd
lret
enter
lods
jmp
lods
add
push
jnp
sub
mov
bound
lea
dec
inc
push
add
cltd
test
sbb
ret
rclb
xor
or
out
mov
les
push
inc
adc
pop
pop
test
xor
mov
inc
push
xor
adc
lcall
loop
imul
in
sub
xor
leave
incb
les
sti
push
cli
xor
dec
or
inc
push
add
push
jmp
pop
xchg
xor
xchg
dec
lods
sub
lahf
cmp
insl
fcmovbe
sbb
inc
add
mov
dec
xor
or
call
inc
into
add
jnp
call
mov
push
push
mov
push
lds
icebp
dec
into
mov
std
pushf
cmp
lret
ret
aas
xchg
mov
les
gs
loopne
xchg
insb
call
popf
sub
dec
and
mov
data16
fwait
push
inc
push
xor
jno
mov
call
aaa
push
dec
cli
pop
sub
into
leave
or
pop
push
aas
pop
inc
es
or
fcoms
jmp
call
cli
xor
adcb
roll
movsb
lahf
inc
stos
xor
in
xchg
scas
loop
stc
das
fxch
shlb
pop
jp
sbb
rclb
aam
int3
xchg
mov
cmp
cmp
aaa
je
divl
push
add
daa
and
dec
dec
aaa
adc
loopne
stc
ret
xchg
sar
ror
adc
jp
aas
shr
add
mov
pop
sub
stc
jnp
scas
je
adc
rclb
into
cmp
jb
int3
mov
xchg
fisubl
std
xor
or
pop
push
cmp
add
inc
lds
jl
sbb
sub
loop
mov
fucomp
xor
fnstenv
cmp
mov
xchg
push
sbb
rorb
dec
fistpl
xor
sahf
pop
mov
inc
cmp
negl
xorb
sub
dec
leave
inc
je
adc
jle
int
gs
sbb
mov
fldt
mov
ljmp
insb
shrb
cmp
dec
sbb
jmp
ret
loope
xor
stos
mov
xchg
imul
mov
cs
lea
xchg
lods
hlt
pop
mov
cmp
push
xchg
sub
cwtl
jle
push
mov
pop
roll
dec
xor
mov
and
mov
cmp
ja
inc
in
mov
ljmp
hlt
dec
and
into
push
enter
mov
mov
dec
pop
es
adcl
and
mov
or
or
pop
aaa
jp
loop
fadd
lcall
fidivrl
sub
mov
rcl
cmp
mov
cmpsl
cmp
add
enter
lahf
cmp
xor
fldln2
push
lret
or
add
dec
loope
shl
imul
dec
out
ret
push
iret
cmp
sub
dec
or
dec
cmp
dec
pop
fistpll
ds
mov
inc
pusha
inc
jecxz
jae
das
sub
das
or
bound
lods
pop
fdivrs
dec
test
sub
jns
mov
mov
fistl
jle
xchg
loope
push
cltd
sbb
mov
mov
and
jg
inc
stos
dec
pusha
jg
xlat
pop
shll
outsl
int
and
dec
fdivrs
push
dec
push
push
and
jns
jg
add
and
mov
mov
shlb
mov
cmpsb
and
ja
popf
inc
pop
call
je
fsubrs
pop
int3
adc
sbb
cwtl
or
dec
dec
jp
lret
add
inc
roll
adc
cmp
dec
clc
addr16
cmp
mov
leave
mov
jmp
enter
mov
xor
ds
dec
leave
inc
xchg
shll
xchg
dec
leave
bound
dec
daa
stc
sbb
cmp
into
sub
into
pop
test
jnp
and
inc
xor
mov
and
inc
push
mov
push
inc
insl
lret
movsl
pop
push
enter
sub
popa
dec
and
push
nop
sahf
xor
sbb
push
sbb
mov
cmp
clc
jmp
loope
mov
pop
aad
and
push
or
cmc
leave
int
out
mov
cmovp
push
cmp
xor
sti
push
jmp
in
js
mov
clc
xlat
adc
push
adc
inc
xor
sub
sti
into
fwait
stc
int3
dec
insl
or
nop
jmp
pop
push
shrl
lods
sahf
mov
movsl
push
mov
repz
adc
sahf
push
cmp
hlt
push
repz
std
cs
inc
sub
xchg
pop
leave
dec
sub
push
aad
xchg
adc
sahf
cltd
xor
mov
inc
cmp
scas
xchg
sub
mov
add
lds
push
cmp
mov
pop
jmp
faddl
cltd
pop
or
rcrl
filds
dec
xchg
add
test
jg
out
dec
or
mov
and
push
imulb
lods
inc
stos
dec
pop
mov
add
xchg
xchg
add
rolb
in
xor
outsb
fs
or
xchg
repz
scas
lds
jae
cld
dec
fsin
dec
scas
icebp
jle
sub
or
xor
adc
mov
out
lea
inc
aam
cmp
lods
pop
bound
push
scas
mov
aas
adc
pavgb
adc
adc
shr
push
mov
pop
add
push
movsl
mov
dec
pop
push
jno
xchg
adc
push
pop
sub
push
icebp
cmp
ja
dec
mov
repz
jp
adc
push
aam
xchg
cmovo
outsb
push
add
adc
and
rcrl
pop
imul
pop
push
in
adc
addb
xor
jmp
lcall
leave
xor
bswap
ret
pop
ret
fwait
mov
test
nop
push
dec
popf
mov
dec
dec
pop
inc
pop
or
mov
pop
add
es
dec
inc
sbb
or
addr16
mov
or
movsl
cltd
cmp
mov
imul
inc
aaa
ficompl
ljmp
jge
adc
ds
call
dec
stos
pop
sahf
das
xor
gs
repz
bound
inc
lret
in
xor
jmp
rclb
stc
pushf
mov
sahf
jo
in
dec
icebp
jno
outsl
ds
inc
and
mov
mov
imul
out
jmp
cmpsl
dec
lods
sub
fbld
or
sbb
icebp
clc
and
psrld
mov
mov
dec
inc
sub
fistpll
ja
mov
add
cmp
fiaddl
add
xor
add
sbb
mov
cmc
dec
mov
loope
dec
clc
fstpt
insl
pop
orb
cld
xchg
imulb
xor
cmp
inc
push
inc
push
cmp
sbb
or
pop
and
fucomi
adc
cmp
dec
xor
sbbl
mov
inc
xchg
mov
adc
shl
cmpsl
cltd
add
mov
lods
fmulp
call
sahf
lcall
xchg
test
aaa
fs
sub
mov
aam
fiaddl
dec
jl
aad
sub
xchg
inc
inc
jns
xchg
inc
ja
mov
shll
lock
es
dec
adc
cmp
or
aaa
je
sub
ret
pop
inc
push
add
sub
dec
clc
fisubl
push
jnp
xor
pop
push
rcr
ret
cmp
dec
sbb
mov
test
pop
sbb
loopne
pop
mov
shl
lahf
lret
call
add
lds
pushf
add
icebp
mov
popf
sbbl
icebp
lods
or
cltd
sti
movsb
lret
mov
push
inc
in
stos
pusha
mov
pop
xor
add
imul
dec
aas
dec
dec
daa
stc
movsl
add
in
pop
enter
xchg
jl
cmc
cmp
jecxz
xor
ss
cmp
sub
sarb
inc
or
iret
lods
mov
cmc
mov
lret
lcall
xor
fdivrs
mov
insl
fdivl
xchg
std
pop
imul
sub
sbb
aad
push
lock
roll
cmpsl
scas
into
lea
adc
or
inc
push
out
stc
cmp
pop
xor
push
sub
js
aad
mov
push
ds
inc
jl
mov
inc
fmull
clc
stc
xor
cmp
pusha
add
fsubrl
pushf
pop
dec
fidivrl
and
icebp
dec
or
cmp
insb
test
call
inc
pop
lret
fwait
imul
mov
dec
popa
xor
mov
leave
scas
and
dec
fistpll
jo
mov
inc
jmp
and
subl
jmp
and
sahf
popf
pop
cmp
loopne
insl
push
enter
aam
dec
and
sub
inc
and
nop
scas
bound
insl
or
add
outsl
inc
sub
pop
test
jbe
divb
addr16
mov
adc
sub
pushf
not
push
shlb
ret
dec
cmp
and
lea
aam
insl
negl
dec
negb
jns
and
sub
jecxz
hlt
push
pop
pop
mov
je
nop
ds
insl
or
pop
shrb
push
pop
sbb
push
ret
sub
gs
lods
xor
mov
jb
daa
jne
and
mov
sub
xchg
cmpsl
arpl
pushf
ror
inc
pusha
fsts
insl
jbe
add
dec
aad
pop
xlat
jle
lds
push
xchg
outsb
inc
inc
insl
sbb
push
dec
in
pop
sub
xor
jne
lds
dec
or
adc
sbb
lcall
ret
inc
xor
in
cmp
leave
mov
add
push
sub
sub
push
mov
adc
bound
push
fadds
cwtl
imul
ja
jae
clc
jne
mov
das
cltd
xchg
rorl
mov
xacquire
push
inc
sbb
outsb
and
jg
jae
push
inc
pop
cmp
xor
or
sbb
or
adc
mov
sub
jns
jb
lds
and
inc
js
ret
sbb
faddl
js
xor
push
cmpsl
and
xor
push
mov
mov
xchg
ljmp
clc
repz
scas
dec
add
inc
mov
fldcw
and
xor
inc
cli
loop
stc
dec
nop
xor
gs
pop
sahf
push
mov
jnp
in
aaa
add
sub
push
push
adc
test
sbb
push
add
icebp
sbb
push
mov
call
dec
xchg
lods
fldl
test
sub
adc
adc
push
lcall
shlb
loope
add
and
loop
sahf
rcr
inc
dec
aas
nop
pop
test
dec
and
ret
cmp
push
or
aaa
or
outsb
xor
pop
xchg
and
adc
insl
xchg
cli
sbb
mov
orl
call
or
xor
call
mov
sub
cmp
inc
mov
jmp
mov
cmp
pop
insb
sbb
inc
and
mov
notl
push
add
call
xlat
movsl
vmaxss
jmp
dec
pop
arpl
cld
push
ds
into
ljmp
jmp
pop
pop
loopne
mov
sub
int
js
sbb
push
test
aam
movsl
inc
dec
pop
call
lds
lahf
out
decb
cmp
add
rcl
or
imul
pop
xchg
mov
push
int
mov
jmp
insl
add
cmp
xor
shrb
push
ret
gs
orb
adc
lret
repnz
mov
push
pop
jb
push
inc
mov
imul
jmp
or
mov
jae
and
movsb
add
out
mulps
lahf
adc
loopne
pop
test
jp
fwait
push
inc
icebp
adc
jb
sbb
nop
push
sti
mov
dec
or
in
test
decb
xor
xchg
aas
lods
cmp
fisttpll
dec
sub
enter
mov
jecxz
mov
outsb
xchg
mov
xor
mov
mov
shll
sbb
dec
fwait
adc
popf
iret
push
adc
sbb
ja
ljmp
pop
xchg
pop
inc
in
lods
sbb
ss
not
lcall
out
cmp
push
add
imull
xor
or
sbb
insb
test
inc
sbb
xchg
jmp
decl
pop
negb
sub
pusha
pop
int3
add
in
push
fisttpll
cmp
out
inc
enter
std
xor
cmp
sbb
push
sub
adc
subb
inc
insl
movsb
sub
inc
adc
lret
dec
int
xor
sbb
sahf
adc
pop
leave
mov
sbb
pop
dec
pop
xorb
into
pop
and
sahf
loop
ror
sarl
add
xor
ror
in
push
sub
inc
pop
ss
sti
rorl
push
mov
adc
je
cltd
and
aaa
std
mov
pop
mov
je
pop
cmp
or
mov
pusha
push
mov
push
pop
xchg
xor
rolb
leave
leave
mov
orl
dec
into
stos
or
sbb
fadd
push
adcb
fldenv
pop
xlat
pop
mov
cmp
mov
inc
pop
ja
in
pop
jge
lret
rcl
jle
test
bound
mov
sub
push
rol
sub
aad
out
jg
cwtl
sti
fistpll
lods
lahf
add
dec
pop
enter
hlt
sub
shrl
push
cmp
push
pop
mov
adc
aad
inc
test
mov
daa
add
sub
jnp
mov
stos
sub
ja
repz
lods
fwait
mov
lahf
dec
outsb
lret
push
push
clc
dec
xchg
in
dec
push
aaa
or
sub
mov
or
mov
jmp
inc
add
adcl
add
fwait
push
pop
int3
sbb
scas
scas
fisttpl
adc
stos
pop
icebp
loopne
cmp
insb
or
xor
ja
fistpl
fnstenv
jae
xchg
push
dec
cmc
leave
sbb
mov
in
inc
sbb
jmp
xor
sbb
mov
loop
lcall
mov
adc
loop
pop
push
loop
xlat
imul
xor
sti
xchg
cli
jl
xor
add
iret
mov
jnp
std
pop
push
jp
imul
popf
push
and
jmp
or
or
cmp
mov
cmp
add
fincstp
je
into
push
ds
ret
push
inc
daa
clc
mov
dec
sbb
adc
adcl
mov
or
mov
jnp
cmp
cmp
sbb
mov
sbb
icebp
nop
mov
ljmp
add
or
sub
scas
fmull
sbb
mov
int3
jmp
mov
xor
jb
lds
mov
or
aad
inc
push
arpl
outsl
pop
sub
leave
movsb
and
or
inc
sub
mov
sbb
pop
stos
outsb
imul
test
lcall
dec
or
stc
lods
es
jbe
pop
sub
xchg
shlb
inc
pop
dec
bound
mov
int
lahf
sub
add
or
push
sbb
mov
cmp
lret
push
lods
xor
loopne
loop
lods
fs
adc
sbb
ja
pop
imul
cmp
inc
faddl
stos
cmpsl
jl
and
loop
mov
aaa
out
insl
inc
iret
add
sub
add
insl
cmc
sub
enter
or
hlt
sbb
ds
xor
scas
and
adc
or
and
push
insl
push
xlat
and
call
imul
sbb
cwtl
or
sub
inc
xor
mov
jnp
inc
cmp
sbb
flds
jle
jecxz
mov
mov
xor
hlt
loop
sti
lods
mov
push
mov
ss
lahf
lcall
mov
sbb
jmp
gs
xor
pop
pop
pop
repz
ljmp
ds
mov
pusha
or
cmp
repz
testb
inc
ss
pop
call
push
sbbb
lcall
leave
aad
testb
loope
pushf
movsl
push
push
and
arpl
dec
push
cmp
shr
sahf
push
dec
aaa
in
pusha
sbb
test
repnz
push
mov
test
or
dec
adc
dec
je
shl
push
mov
sbb
insl
add
mull
leave
push
mov
ss
loopne
loopne
cmp
pop
andb
loopne
cs
lds
outsl
push
jecxz
leave
mov
or
jge
call
and
push
lock
icebp
dec
xchg
mov
push
cmpsl
arpl
lret
xchg
inc
mov
inc
pop
scas
add
test
mov
insl
inc
dec
jp
or
cmc
out
cmp
or
or
push
add
insb
addr16
pop
or
das
xchg
mulb
pop
cmp
sbb
xchg
inc
push
mov
jmp
loopne
push
adcl
cmc
lea
bound
mov
xor
icebp
push
add
xorb
or
mov
or
push
icebp
repnz
fistpll
out
stos
add
push
insl
dec
adc
pop
push
push
xlat
jp
xor
jnp
pop
mov
cmpl
adcb
ficomps
xor
xor
sbb
sub
jae
push
fldl
mov
sub
test
leave
dec
insb
mov
and
rsqrtps
add
dec
pop
inc
bound
out
leave
adc
cmp
mov
mov
mov
cmp
jae
andl
and
sub
mov
inc
jbe
pop
dec
mov
inc
fs
pop
cld
push
pushf
imul
mov
xchg
sbb
les
les
mov
lods
enter
in
jmp
dec
daa
dec
jns
cmpsb
mov
adc
cmp
addl
jmp
mov
adc
mov
mov
add
or
leave
push
cmp
mov
dec
inc
push
dec
lret
jne
push
movsl
xor
add
inc
lds
pop
push
pushf
in
ds
movl
xchg
shll
adc
mov
sub
ljmp
imul
inc
mov
dec
push
push
push
fwait
hlt
xchg
call
or
push
xlat
inc
inc
lahf
call
inc
pop
mov
push
aaa
mov
ljmp
jno
jnp
cmc
sbb
in
fldenv
sub
dec
fcomps
daa
pop
aas
push
jmp
ret
cwtl
jp
sbb
int3
inc
data16
loop
cmp
ret
addr16
sbb
or
push
scas
adc
mov
call
dec
push
xor
push
push
inc
sub
cmp
dec
adc
insl
fiaddl
das
sub
aad
push
inc
out
cltd
xchg
pop
jecxz
dec
fisubl
jnp
and
xor
popa
mov
pop
pop
cli
pmaxsw
xor
lcall
sbb
dec
js
insb
sub
push
mov
sbb
roll
lahf
add
push
cli
push
lds
shrb
cmp
and
je
inc
push
mov
cmp
outsb
pop
mov
repnz
pop
jp
adc
xor
cmpsb
dec
into
inc
stos
push
jmp
pusha
lock
dec
outsl
inc
ja
rcr
je
mov
lret
mov
je
test
pop
sarl
rcl
fisttps
test
lahf
sub
xor
mov
cmc
inc
loop
outsb
ja
loop
inc
add
insl
pop
jg
jno
adc
push
adc
or
push
cvtps2pi
mov
cmp
pop
mov
cmp
sbb
mov
ss
imul
xor
pop
mov
push
into
fistl
imul
popa
jl
rorb
pop
xchg
rorl
push
lcall
cli
jmp
js
pusha
mov
mov
mov
sbb
sbb
aad
sbb
adc
pop
cmpsb
inc
test
aaa
movsb
jmp
xor
inc
dec
scas
cmp
and
dec
push
dec
sbb
or
mov
pushf
add
sub
pop
xchg
dec
loopne
and
jecxz
or
fistl
mov
jbe
mov
lds
stc
and
sub
ficompl
rorl
ss
aam
dec
jns
cmp
inc
mov
dec
jmp
push
movsl
pop
xlat
lcall
jg
pop
adc
and
or
xor
and
dec
push
sbb
jmp
xchg
or
pop
xlat
lea
dec
dec
mov
push
xor
stos
pop
cmc
xchg
out
adc
outsb
jmp
mov
add
lret
pop
hlt
fldenv
dec
push
cwtl
ret
imul
or
mov
subb
pop
fs
dec
or
jecxz
pop
dec
or
and
inc
insb
sti
hlt
jo
jns
addr16
popa
outsb
push
pop
lods
mov
sbb
ja
rolb
push
jg
pop
and
ret
insb
daa
mov
es
aas
in
fs
clc
dec
xor
out
mov
roll
lds
cmp
add
pop
mov
ret
sub
add
pop
pop
or
adc
lods
push
in
pop
lods
push
imul
push
out
dec
dec
insl
leave
imul
push
cmp
dec
mov
hlt
or
fwait
mov
loope
dec
xlat
inc
fucom
dec
pop
mov
loopne
pop
xchg
pop
test
aam
inc
inc
stos
sbb
xor
sub
pop
ret
and
loop
loopne,pt
xchg
xor
cli
mov
jp
or
dec
fidivs
aas
fdivrs
out
repz
push
fsubrs
xor
addr16
or
push
xor
in
dec
adc
jmp
inc
int3
mov
adc
fs
and
test
arpl
rcrl
pop
xor
add
sub
jmp
cwtl
xor
pop
roll
cmpsb
or
cs
enter
ss
ljmp
insl
dec
dec
leave
xor
xchg
cmpsl
or
aas
push
jp
add
negl
int
mov
mov
call
in
mov
inc
push
sbb
and
jae
sbb
flds
ja
mov
loop
pop
mov
mov
inc
lahf
push
xor
les
pop
mov
loop
inc
movsl
sahf
jae
add
dec
xor
mov
dec
and
mov
add
cmp
icebp
pop
sbb
outsl
push
pusha
dec
mov
scas
out
dec
cmpl
call
xchg
xor
sub
adc
push
rorb
lock
aaa
fstpt
pop
pop
enter
and
rorb
adc
jg
in
push
icebp
imul
push
xor
andb
pop
inc
push
sti
and
add
sahf
add
dec
fs
xor
sbb
jle
loope
push
push
test
ror
pop
stos
sub
aam
dec
xor
ret
mov
adc
adc
cwtl
ficoml
leave
in
dec
inc
call
das
dec
dec
repz
jecxz
push
push
arpl
push
mov
scas
dec
jmp
sahf
loope
add
mov
or
mov
sub
out
sub
xchg
movb
fisubl
enter
jae
sub
adc
xor
pop
mov
cmp
psubsw
ds
lods
cmp
and
sub
mov
mov
xor
mov
rcll
adc
adc
mov
vpshlq
data16
das
dec
push
ds
shl
lods
dec
jne
cmp
pop
stc
cmp
xor
and
and
pusha
pop
jecxz
enter
jne
inc
pop
push
or
xor
cmpsl
cltd
xor
mov
sub
inc
fcompl
add
sub
mov
test
dec
inc
out
lss
push
jp
fcmovbe
cmp
mov
repz
fdivrs
dec
and
mov
mov
inc
cmp
xor
mov
cmc
int3
or
decb
fldt
clc
cli
jns
inc
mov
lock
sahf
mov
xor
jecxz
aam
sbb
xor
js
rcrb
cmp
orl
popa
mov
ret
xor
or
sub
cli
mov
jl
xchg
pop
jp
inc
mov
scas
pop
gs
adc
outsb
cld
xor
or
call
jp
nop
sbb
mov
dec
and
add
or
pop
repz
enter
outsl
andps
push
insl
sub
lret
fcom
lods
pushf
dec
lret
pop
push
fldcw
inc
testl
shlb
jns
rorb
mov
lock
sub
leave
mov
ret
adc
lret
push
inc
addr16
sub
mov
push
sarl
mov
xor
dec
sbb
or
push
jno
add
jb
nop
push
lods
out
dec
addr16
cmp
cmp
icebp
lods
adc
inc
xor
or
cli
jecxz
or
pop
add
in
test
and
add
mov
xchg
and
int
test
in
pop
jmp
fstps
sbb
xor
push
aad
adc
mov
popf
push
pop
rclb
push
xor
sti
fwait
test
pop
push
pop
int3
xlat
paddusb
pop
movsb
into
xchg
rcrl
enter
mov
ficomps
mov
inc
cmpsb
inc
cmpsb
mov
lret
sbb
mov
push
ljmp
loop
or
jmp
push
imul
mov
daa
lret
aas
arpl
mov
aad
xor
mov
pop
aas
jle
sub
xor
sahf
inc
push
cmp
mov
cmpsl
sub
cld
cmpsl
leave
ja
arpl
pop
ret
inc
pop
loopne
mov
sbb
and
test
imul
nop
xchg
adc
dec
cmp
sahf
jns
mov
and
inc
flds
outsb
adcb
sbb
mov
ja
loope
movl
sbb
add
push
sahf
popf
imul
clc
or
or
out
popa
mov
sub
mov
cmpsb
leave
xor
psrlw
cmp
sbb
adc
test
push
mov
jl
inc
sbb
push
mov
dec
call
jecxz
pop
xlat
cmp
shll
sub
jmp
icebp
popa
xor
bound
cli
mov
call
and
jmp
int
fdivr
push
dec
inc
mov
nop
in
inc
xchg
fldl
inc
cld
add
rcl
lret
inc
lods
lcall
outsb
call
sub
subl
scas
test
cld
out
mov
ja
xorb
or
xchg
fistl
in
jns
xor
lea
mov
push
rolb
stos
cltd
cmp
sub
mov
push
loope
shrb
dec
or
dec
es
leave
inc
pop
into
xchg
push
push
mov
add
or
pop
or
add
jae
shlb
sbb
cltd
movl
aad
scas
dec
push
push
jle
push
cld
mov
sbb
shl
repnz
fwait
loop
pop
cwtl
jle
xchg
mov
outsl
xchg
mov
jl
clc
add
aaa
mov
cmp
mov
adc
pop
inc
in
vpmacssdql
push
pop
push
loopne
xorb
insb
lds
lcall
cmpsb
sbb
addr16
or
push
pusha
call
or
or
push
call
call
das
outsl
or
insb
mov
jl
sbb
repz
jb
mov
jl
jbe
cmpsb
pop
dec
inc
pop
jb
dec
jp
fnstcw
and
call
xor
xor
mov
mov
push
int
cli
jl
xchg
and
pop
xchg
mov
stc
or
ret
or
rolb
dec
xlat
repnz
daa
mov
fidivs
push
shr
push
cmp
daa
insl
lock
inc
das
add
mov
jge
cmpsb
outsl
jecxz
mov
jmp
mov
pop
sbb
mov
or
scas
mov
jg
cmp
pop
fadd
pusha
cmp
iret
push
xor
xlat
xchg
fucomp
stos
pop
sbb
mov
addr16
push
mov
sbb
fs
dec
insb
lea
push
mov
push
idivl
aaa
stos
mov
push
sbb
or
pop
cmp
adc
inc
inc
aaa
and
out
icebp
insb
mov
rorl
mov
mov
bound
into
cmc
out
mov
or
dec
into
mov
fsubp
sti
fisubrl
bound
scas
mov
pop
push
mov
test
sbb
ss
sti
std
shlb
xchg
orb
xchg
or
or
push
mov
lods
ret
mov
mov
or
jbe
scas
adc
mov
mov
push
sahf
enter
shl
mov
add
mov
xrelease
pop
test
or
popl
mov
in
sbb
lret
loope
repz
stos
int3
push
dec
sub
lret
add
adc
test
adc
ret
inc
push
cmp
addb
sbb
add
mov
mov
jo
repnz
ret
mov
pop
scas
jp
push
cmp
and
sub
mov
mov
and
int3
shll
loopne
mov
push
sub
mov
pushf
jns
or
or
mov
push
xor
mov
std
sub
das
mov
sub
test
push
inc
lret
sub
mov
pop
push
cmpl
addr16
cmp
xchg
rorl
mov
in
pop
sbbb
stos
fxch
icebp
stc
rol
push
pop
cmpsl
adc
fbstp
and
cmp
or
cli
enter
xchg
push
add
sbb
dec
decb
in
and
pop
or
xor
xchg
sub
mov
cmc
pop
or
in
es
cmpsl
lret
imul
adc
xor
lods
jle
add
dec
jp
inc
jbe
bswap
insl
aaa
test
lahf
subb
dec
add
push
fistpll
mulb
mov
int
clc
lds
loop
ja
stos
xor
std
adc
sbb
cmc
aas
fiadds
sbb
nop
sub
mov
add
push
shl
imul
sub
aas
dec
inc
in
xor
mov
sub
dec
loop
mov
and
and
sub
sub
sbb
leave
test
mov
xchg
pop
push
mov
fwait
cmp
xchg
loopne
push
popa
pop
fisubrs
pop
sahf
hlt
cmp
mov
xchg
jge
pusha
cmp
inc
add
or
or
and
test
pop
cmp
inc
xor
shll
inc
push
push
pop
push
jg
mov
cmp
cmp
insl
xor
stos
loopne
mov
stc
adc
mov
je
mov
rcll
mov
add
xchg
test
mov
fs
out
stc
jg
adc
adc
in
int
test
stc
js
or
scas
jge
push
aaa
pop
pop
pop
popf
lds
dec
sub
and
or
sbb
jbe
and
sub
inc
sti
push
jns
sbb
inc
les
jnp
popa
xor
jle
jmp
jae
mov
cli
sub
je
outsl
sbb
xchg
ljmp
ljmp
lret
aaa
fwait
ret
mov
xor
and
inc
push
mov
vdivss
mov
cli
inc
popa
insb
test
add
daa
inc
cltd
lods
and
std
mov
push
sub
out
leave
pop
mov
xor
je
shlb
aaa
ret
push
sub
xchg
leave
add
in
xchg
xor
adc
cld
enter
push
ja
insl
ret
cmpsl
int3
adc
dec
xchg
inc
push
pop
insl
mov
inc
jb
arpl
stos
add
cmp
std
push
jecxz
pop
pop
fldcw
daa
in
call
inc
pop
or
xchg
push
fstps
push
cmp
cvtdq2ps
icebp
xchg
mov
pcmpgtw
xor
cmp
pop
cld
mov
lea
jmp
stc
call
dec
fadd
fcmove
inc
mov
inc
rcrb
clc
out
dec
add
pop
fwait
sbb
xchg
insl
pop
lds
jmp
fsubs
sti
jmp
ret
icebp
mov
push
inc
in
js
lea
add
push
sbb
xor
or
fistpl
inc
inc
add
in
fwait
inc
loopne
int
dec
je
ror
aaa
fmuls
inc
or
shll
sarl
fidivl
mov
sub
pop
push
xor
jge
mov
pop
lret
xchg
pop
gs
rcrl
in
sti
inc
inc
std
mov
xor
mov
mov
xor
outsb
xor
sub
mov
in
mov
mov
call
sbb
or
cmc
outsl
inc
push
lods
pop
mov
push
leave
sahf
push
or
dec
pop
out
fidivrs
pop
pop
out
inc
fstpt
f2xm1
pop
jo
lret
in
pop
jae
addb
mov
nop
addb
mov
call
pop
sbb
sbb
cmpl
xor
aad
arpl
and
sub
push
sbb
rcl
movsl
fcmove
cmp
das
insb
push
jnp
adc
add
and
inc
dec
xor
pop
jp
cmc
outsl
cmp
repz
popf
fcoms
pop
pop
xlat
pusha
icebp
aad
or
xlat
clc
xchg
call
cmp
push
divl
xor
inc
enter
scas
int3
inc
addb
or
xchg
jae
mov
mov
out
stos
fdivrp
cmp
repz
sahf
outsl
lret
scas
call
sub
xor
pop
outsl
inc
mov
xor
bound
xor
dec
inc
leave
cmp
cmp
loop
insb
or
inc
sub
jmp
push
std
push
in
sub
ret
in
icebp
aaa
mov
mov
add
roll
mov
je
jo
sub
imul
loope
inc
inc
clc
in
sbb
sbb
sub
ds
lea
test
and
add
int3
add
dec
and
inc
pushf
and
dec
cmp
insb
mov
cmpsb
xor
ja
and
decb
add
orb
fsincos
stos
sub
mov
sub
cmc
repnz
ret
test
cmp
or
inc
or
sbb
sub
in
shrb
cmp
inc
test
mov
cmp
lea
dec
sbb
adc
xor
inc
in
and
jnp
movsb
int3
mov
jne
out
or
dec
mov
out
push
mov
mov
pop
fdivrl
lea
out
test
mov
fiadds
out
sbb
add
mov
adc
or
arpl
mov
push
mov
dec
ja
adc
lret
cmp
imul
ds
sub
call
sub
pop
std
in
ds
add
icebp
xor
push
adc
std
sub
movsl
lods
sahf
jbe
clc
loopne
nop
xchg
imul
std
lods
lret
pushf
pop
sti
cmpsl
repz
xor
inc
xchg
jae
outsb
imul
inc
call
flds
mov
fdivs
stos
push
jg
sub
xchg
inc
int3
mov
jg
dec
icebp
sub
std
sbb
pusha
sbb
add
adc
pop
adc
sbb
negb
push
out
sti
inc
dec
bound
lock
push
call
cmc
or
or
insb
cs
lcall
xchg
mov
sub
sbb
es
leave
adc
add
sbb
mov
iret
pop
fcompl
pop
mov
addl
and
cld
add
jne
mov
xor
pop
mov
call
sub
pop
pop
push
inc
in
mov
push
or
mov
pop
inc
xor
sahf
call
cmpsb
addb
inc
xchg
lock
in
and
dec
sub
dec
or
mov
ljmp
fldcw
pop
test
sbb
mov
jbe
jmp
inc
out
dec
rcr
xor
inc
mov
cmp
ffreep
and
mov
out
mov
leave
les
inc
fadds
lds
andb
xor
les
mov
pop
xor
aam
nop
mov
inc
ret
push
outsl
lock
dec
lahf
insl
arpl
jg
push
cmp
sbb
mov
and
addl
arpl
movb
fbld
dec
sarl
jg
cmp
lahf
enter
lods
push
adc
jnp
inc
push
and
sub
jle
fdivs
and
xor
jecxz
sub
xchg
sti
push
dec
xor
js
inc
enter
pop
rcr
jae
xor
and
sbb
cmp
icebp
add
mov
add
test
add
xchg
adc
fs
push
aad
pop
lods
test
sub
mov
add
mov
mov
sub
aad
push
mov
sar
xchg
xor
ret
scas
and
rcrl
and
fistpl
orb
xchg
fiadds
int
adc
inc
dec
push
cli
insb
shrb
adcb
int
dec
fisubl
andl
cmpsl
add
inc
push
push
xchg
bound
xchg
fcomi
cltd
mov
sbb
testb
sbb
ret
movsl
lea
push
and
push
jmp
or
leave
dec
push
add
mov
ret
loop
std
xlat
insl
mov
mov
xchg
xor
pop
sub
pop
jbe
jb
sub
test
cmp
xchg
into
fs
adc
xor
add
xchg
popf
or
push
in
sahf
in
pop
fnsave
bound
sbbb
dec
das
push
jg
push
imul
das
adc
mov
cmp
sub
lret
psubw
inc
icebp
inc
or
lods
leave
sahf
mov
ret
push
lret
and
push
rolb
mov
sbb
sub
push
dec
add
arpl
lods
xor
mov
sub
xor
jp
push
or
push
out
loopne
jb
xchg
push
pop
sbb
adc
insb
pop
rol
loop
push
xchg
mov
sbb
mov
dec
inc
jbe
and
and
adc
aas
jecxz
adc
lcall
cmp
mov
cwtl
sahf
sbb
inc
pop
mov
inc
add
and
xchg
in
negl
pusha
inc
mov
or
inc
push
sub
xchg
sar
out
fisubl
push
adc
ret
test
int3
lahf
lods
adc
push
test
or
loopne
lea
mov
lret
mov
sub
add
mov
dec
and
jns
xor
inc
lahf
subb
roll
cmp
inc
pop
or
mov
mov
cmp
clc
insl
pop
push
add
inc
inc
sub
cmp
setp
pop
adc
pop
jo
mov
out
pop
roll
adc
xor
sbb
mov
jb
popa
test
lea
mov
mov
mov
gs
sbb
pop
inc
pop
mov
mov
aaa
inc
dec
jle
xor
jg
lcall
lret
add
arpl
add
call
mov
cli
scas
adc
mov
int3
jbe
call
dec
pop
lcall
inc
xor
scas
popa
mov
sub
pop
xor
mov
adc
daa
pop
inc
pop
icebp
and
lea
jmp
enter
mov
aaa
adc
push
dec
push
push
xor
adc
out
bound
and
dec
fs
fmul
or
push
lock
lea
aaa
pop
mov
mov
mov
outsb
xor
jnp
cmp
aad
jbe
sub
mov
fldenv
std
add
ret
stos
xchg
jmp
in
shll
push
inc
popa
or
sub
cwtl
inc
pushf
mov
test
rorl
call
pop
jmp
add
cmc
pop
enter
mov
fiaddl
dec
push
inc
mov
push
push
subb
fldl
xchg
enter
shrl
jmp
bound
pop
or
popa
int
dec
jo
cld
push
mov
dec
repz
nop
ss
cmp
pusha
cld
int
cmp
out
cmp
loop
jge
add
add
push
mov
xor
push
loope
pop
insl
lret
enter
dec
cmp
xchg
sahf
fwait
out
imul
insl
xor
push
rorb
stos
adc
and
in
jae
fnstcw
test
sub
adc
inc
add
stc
mov
lods
lods
inc
sarl
inc
pop
inc
push
sbb
jmp
popf
sbb
mov
push
dec
rcll
add
jp
sbb
mov
pop
mov
mov
dec
xor
stc
push
leave
inc
rol
sub
movsl
dec
inc
dec
lods
inc
sub
subl
push
dec
stos
cmp
push
push
or
inc
cmpb
push
xor
xor
subb
ja
mov
dec
adc
loopne
ficoms
add
popa
ja
in
inc
aas
jge
or
xor
mov
scas
test
inc
mov
cmp
jnp
lret
cmp
cmp
int3
loop
xchg
dec
cmpsb
push
stos
imull
insb
dec
sarl
dec
dec
mov
adc
incl
dec
or
add
test
mov
lods
xlat
push
push
pop
lods
testl
adc
cmpsb
xchg
adc
icebp
pop
aad
lods
jns
push
sbb
cmp
xorb
push
lea
adc
adc
shrb
es
mov
adc
xchg
push
pop
sbb
repz
ss
pop
inc
mov
mov
cltd
adc
cmp
sub
mov
neg
pop
ss
dec
push
lods
cmp
xchg
pop
sbb
push
je
repz
xor
or
dec
out
mov
push
lds
inc
push
xchg
les
into
jns
repz
mov
inc
xchg
add
pop
movsl
in
int
or
xor
add
decb
arpl
packssdw
shld
lret
add
cmp
dec
jl
pop
insb
mov
loop
sub
cs
rorl
ror
inc
cmpsl
lea
adc
mov
mov
jle
push
dec
adc
insb
jae
inc
jnp
mov
sub
ss
and
jo
push
cmpl
dec
mov
xchg
push
cmpsl
inc
add
xchg
daa
add
inc
pop
dec
movsl
ret
lods
sub
cmp
pushf
iret
pop
test
mov
push
pop
pop
addb
dec
xor
pop
mov
mov
and
inc
and
das
fs
and
movsb
adc
and
jmp
jle
aaa
add
jb
jmp
loopne
rcll
int
je
shr
xchg
and
pop
aas
sbb
arpl
cltd
mov
in
mov
or
cmp
xlat
dec
idivb
sub
xchg
inc
push
inc
sbb
dec
in
icebp
sarl
inc
ret
pop
test
add
cmpl
xchg
bound
inc
scas
pop
cmp
dec
or
mov
mov
adc
mov
inc
xor
stc
into
xchg
inc
push
sbb
or
xchg
icebp
orb
cli
push
jge
sbb
mov
leave
push
in
add
adc
and
sub
jns
and
xchg
mov
movsl
gs
jp
adc
dec
std
das
and
sub
into
dec
push
stc
cmp
add
js
dec
mov
mov
data16
sarl
or
in
addb
pop
jo
sbb
or
mov
test
add
push
and
xor
mov
jp
mov
jp
push
jae
pop
lahf
in
sbb
ret
jae
fisttps
adc
xor
inc
scas
dec
enter
mov
adc
cmpsl
subb
or
push
test
sbb
pop
inc
pop
mov
leave
in
push
push
mov
inc
pop
lds
mov
addb
lods
adcb
mov
sub
out
lret
dec
imul
cltd
push
sub
and
sub
pop
inc
into
pushf
pop
or
enter
jae
out
inc
rcrb
stc
sahf
test
inc
es
xor
iret
scas
decl
lods
inc
mov
xor
mov
pop
jb
jecxz
add
lret
dec
shrb
sti
nop
mov
or
mov
xchg
mov
push
inc
pop
sub
js
dec
rcll
push
dec
out
dec
cmovl
pusha
dec
dec
daa
mov
jns
cmc
and
sarb
sbb
ret
outsb
mov
pusha
dec
and
repz
xlat
into
push
cmp
in
out
dec
pop
or
dec
loop
pushf
rcrl
movsb
and
ja
not
mov
xchg
pop
dec
pop
pop
cmp
adc
dec
mov
cwtl
test
inc
add
scas
ficompl
adc
fbld
inc
lcall
mov
hlt
rcll
loopne
add
cmp
out
jnp
aaa
icebp
jmp
stos
daa
jbe
gs
mov
push
imul
xchg
in
addr16
mov
mov
jmp
add
fwait
out
dec
popa
dec
mov
outsl
dec
cmp
adcl
pop
dec
cmovg
xchg
pushw
lahf
jmp
xchg
pop
jno
pop
push
icebp
ret
or
pop
test
xchg
xchg
adc
sbb
ljmp
and
icebp
loopne
pop
push
cmp
dec
pushf
jle
cltd
fisubl
dec
lcall
xor
jl
dec
dec
nop
sub
adc
sbb
daa
repnz
call
lock
icebp
std
pop
jl
dec
xchg
dec
aas
push
inc
orb
and
lock
jle
lret
imul
push
pop
inc
mov
aad
jp
stc
jo
scas
dec
stos
and
inc
rorl
mov
mov
xchg
mov
mov
push
xor
cltd
and
fsubrl
push
call
fmulp
movl
pop
xor
sub
push
jle
xor
dec
pop
sbb
imul
cmp
popa
mov
mov
sub
cmp
je
pop
xchg
sahf
dec
sub
incl
imul
jge
ret
push
stos
scas
mov
dec
pop
or
push
std
sub
mov
icebp
stos
cltd
mov
inc
xchg
dec
add
aam
sub
leave
mov
inc
mov
sub
pop
xor
add
mov
mov
icebp
in
jg
inc
and
clc
es
sub
pop
sti
jmp
enter
push
outsb
lds
sbb
ja
hlt
mov
adc
pop
addr16
jb
pop
sbbl
test
sub
fbstp
orb
jecxz
sub
outsb
out
pop
mov
sub
stc
push
pop
or
jno
cmpsl
in
jns
clc
dec
neg
dec
inc
dec
push
add
mov
das
push
aad
out
dec
cli
gs
sbbl
rcl
dec
inc
dec
mov
push
xchg
dec
stos
cld
cli
and
orl
dec
cmc
sub
cmpsl
dec
subb
dec
xchg
std
orl
cmpb
cmpsl
inc
arpl
dec
jnp
popf
xor
scas
out
jns
sbb
mov
fs
out
push
test
mov
in
and
ficoml
push
pop
adc
jecxz
jle
lods
and
cmpsb
mov
js
pop
daa
push
pop
xor
dec
divb
stos
dec
dec
ficompl
sbb
add
dec
add
jnp
mov
inc
je
cmc
jne
mov
sbb
repnz
cltd
sub
sub
rclb
stos
mov
mov
inc
mov
inc
ficomps
pop
push
rcll
push
outsl
jl
insb
lret
fidivl
fistl
das
pop
lahf
sub
std
sub
insl
clc
scas
dec
mov
add
push
jae
mov
notb
push
dec
push
mov
push
fsubs
or
cld
idivb
decb
xor
add
dec
push
add
popfw
jnp
pop
fs
dec
cld
mov
inc
jmp
in
push
mov
mul
push
push
mov
jp
dec
mov
shll
push
repnz
add
sbb
xchg
and
daa
xor
iret
dec
add
rcrb
mov
cli
push
dec
adc
fldl
dec
loope,pn
lcall
or
lret
mov
dec
jne
and
jmp
lds
cmp
cmp
sub
sbb
sbb
push
and
dec
popa
pop
xchg
rorl
cwtl
xchg
mov
jge
push
mov
jmp
mov
sub
jo
pop
cmp
sub
ds
pop
dec
leave
push
sbb
adc
ds
mov
ss
fwait
dec
inc
ffreep
dec
mov
xor
adc
push
dec
adc
les
movsb
sub
mov
pusha
pop
xlat
xor
jmp
mov
xchg
mov
popa
jp
dec
pop
scas
test
inc
insl
dec
out
push
sti
mov
mov
adc
flds
pushw
push
push
out
dec
sub
add
clts
mov
mov
in
pop
das
xor
mov
inc
xchg
fwait
dec
sbb
fildl
int
mov
into
pop
mov
test
cmp
xor
and
sti
test
test
leave
ret
jne
outsb
mov
cltd
xchg
adc
xchg
lock
ljmp
test
loop
xlat
mov
js
push
pop
iret
mov
ja
dec
fcmovu
xchg
fstps
sbb
cmp
xchg
mov
lea
add
cmp
dec
add
mov
xchg
dec
add
pop
int3
add
bound
cmp
les
mov
push
in
and
xchg
jle
push
mov
push
sbbb
scas
push
xchg
pop
dec
xor
inc
lcall
mov
mov
jmp
ss
clc
adcb
dec
pop
ffree
or
dec
ror
test
and
pop
in
dec
push
adc
out
pop
mov
dec
dec
gs
cwtl
sbb
lea
iret
dec
xchg
xor
mov
rcll
es
stc
sub
sarb
xchg
aam
pop
in
test
xlat
jo
std
adc
inc
or
jle
push
bound
inc
cmp
mov
pop
or
aas
sub
pop
dec
cwtl
outsb
clc
je
xchg
pop
cmp
mov
out
lret
dec
in
jne
cmp
movsb
or
jle
cmp
sub
lret
rcr
insl
sub
jae
add
adc
push
pop
mov
daa
jle
mov
jne
pop
sub
jbe
inc
adc
jg
pop
mov
les
fs
mov
int3
pop
rcrl
dec
sbb
fwait
cmp
pop
rorb
loop
aaa
adc
push
xor
fistl
repnz
or
shll
cltd
push
rorb
jecxz
dec
jbe
push
jnp
imul
or
popa
mov
push
arpl
inc
int3
pusha
shr
dec
pushf
mov
mov
xorl
mov
movsl
mov
cmp
and
andb
inc
fnstsw
fidivl
inc
sub
aaa
scas
jecxz
xor
cmpsl
mov
add
push
jno
mov
out
push
ret
xchg
adc
dec
stos
test
cli
divl
dec
iret
push
pop
enter
icebp
ret
enter
dec
int3
dec
sbb
mov
dec
jmp
aas
pop
shlb
sbb
ret
dec
scas
imul
stc
mov
dec
insb
test
adc
jns
pop
add
jmp
xor
dec
fcos
jbe
test
lods
sub
cmp
lret
ss
mov
rorl
dec
test
hlt
outsl
push
fcoms
stos
clc
es
loop
and
dec
dec
inc
aam
imul
int3
cli
in
cltd
jno
jmp
std
stos
pop
inc
jae
dec
ljmp
push
add
or
inc
leave
fistpl
nop
push
icebp
or
out
loopne
cmp
testl
mov
dec
rorb
push
pop
fwait
sbb
dec
push
fcoms
repnz
aam
decl
cmpsb
dec
ss
rclb
test
mov
jno
mov
inc
rcr
or
dec
mov
and
inc
call
dec
outsl
xchg
push
xchg
sbbb
imul
int
dec
and
stc
inc
dec
adc
sbb
lret
pop
mov
sub
andb
jno
cmpsb
cmp
das
mov
imul
sub
pop
dec
test
faddl
jmp
mov
or
push
mov
dec
add
testb
out
dec
out
mov
mov
cmp
fiaddl
orb
pop
insb
subl
cmp
out
jmp
or
div
cld
adc
xor
push
sub
add
mov
pop
insb
jnp
mov
mov
fcmove
sbb
mov
mov
xor
push
pop
das
mov
pop
dec
mov
lock
ret
sbb
sub
leave
repnz
or
fxam
jl
fimuls
dec
aaa
mov
outsl
xchg
push
lcall
dec
push
adc
dec
cltd
lds
cmpsl
sub
pop
cmp
mov
out
pop
mov
mov
mov
lea
lods
mov
xchg
daa
inc
inc
dec
test
xchg
add
rorl
imul
mov
sub
lock
mov
repz
outsl
sbb
subl
enter
adc
aas
jno
stos
pop
ljmp
js
fs
int3
dec
fdivs
mov
dec
out
cmp
icebp
dec
cs
pop
cmp
inc
mov
ret
mov
roll
ss
jmp
aaa
and
mov
dec
sarb
cs
mov
cmp
sub
add
dec
inc
aad
adc
les
stos
test
popf
sub
or
pop
xchg
or
adc
mov
fs
xchg
stos
push
add
or
cmpsb
and
mov
pop
mov
dec
xchg
daa
hlt
int
or
sub
mov
shlb
fisttpl
arpl
fisubs
inc
pop
data16
push
out
stc
push
or
inc
gs
enter
out
sbb
jnp
jmp
std
outsl
imul
in
push
xor
movb
lret
inc
imul
adc
jg
or
subb
out
mov
adc
or
xor
xlat
rcll
sbb
shlb
cmc
in
pop
dec
clc
into
popa
cmp
dec
test
pop
mov
mov
jnp
lods
mov
mov
xor
mov
sar
push
call
clc
sti
mov
jg
arpl
cmp
clc
shlb
mov
xchg
cltd
leave
inc
push
bound
push
fdivrl
sahf
leave
clc
inc
imul
lret
cmp
cmp
aam
scas
pop
inc
jg
subl
loopne
inc
in
cwtl
hlt
and
mov
mov
leave
out
movsl
inc
sti
dec
in
ss
xor
and
fdiv
ret
dec
inc
sub
ret
enter
clc
cmp
repz
jno
pop
inc
xor
inc
fldl
lods
shrl
ss
xchg
push
cmp
cmc
cmp
js
and
out
mov
adc
into
inc
mov
push
enter
xor
jmp
pop
mov
leave
pop
inc
jno
mov
mov
sub
or
pop
mov
adc
xor
popf
mov
add
fiaddl
sub
andl
or
inc
xor
repz
scas
inc
pushf
dec
mov
mov
shrb
out
xchg
test
sbb
ficompl
jp
xchg
pop
xor
pop
icebp
inc
push
inc
or
and
arpl
cmp
popa
xchg
push
or
sub
jge
mulb
clc
mov
es
clc
and
lods
mov
cmpsl
inc
pop
test
push
inc
dec
dec
cmpsb
push
push
xor
adcl
test
leave
push
cltd
mov
mov
inc
mov
xlat
std
inc
push
dec
or
xchg
xor
je
pop
sub
cmp
jp
dec
jle
fmuls
sti
push
mov
les
out
int3
mov
icebp
filds
jl
pop
sub
jae
arpl
pushf
out
lcall
mov
sub
jbe
adc
mov
scas
lret
mov
jne
push
push
jp
mov
sub
cmp
jbe
out
cmp
leave
pop
cmp
adc
mov
inc
jns
sbb
ffreep
mov
push
mov
pop
sti
pop
stos
pusha
pop
pop
mov
add
mov
pop
aas
pop
lock
scas
insl
inc
ret
push
sub
sarb
sahf
sub
hlt
ficompl
pushf
shrb
mov
pop
inc
xor
dec
jp
shl
cmp
sub
aaa
mov
pop
or
mov
mov
push
insb
and
add
pop
push
mov
aam
add
pop
dec
repz
cmp
xor
pop
cltd
dec
loopne
filds
in
cmp
push
fmuls
out
clc
or
aam
repz
cmpsb
shrb
pop
pop
xor
push
inc
xlat
dec
mov
insl
xchg
pop
pop
bswap
add
dec
icebp
push
sahf
mov
add
or
xor
lret
stc
lret
jge
push
ljmp
leave
or
and
or
push
xlat
sbb
mov
dec
dec
pushl
xchg
mov
sub
xchg
xor
mov
insb
inc
mov
jns
xchg
ret
ficompl
fwait
or
xchg
ret
cmp
inc
jmp
xor
aad
scas
lock
lret
push
lods
dec
and
rolb
cli
mov
data16
and
es
and
pop
and
imul
fistl
mov
es
arpl
pop
jnp
or
cs
jp
insb
arpl
mov
gs
pop
ds
adc
xor
out
inc
or
or
fistpll
xchg
push
and
mov
ja
call
push
sarb
cmp
mov
jo
push
into
add
shlb
push
inc
xchg
int
push
aas
xor
cmp
push
dec
stc
aas
loop
adc
repnz
cmc
sahf
or
mov
inc
cmp
ljmp
mov
roll
sbb
popa
iret
ds
dec
fcmovnbe
push
out
push
jno
mov
callw
xor
addb
decb
pop
popa
xor
jp
sub
pop
xor
push
pop
push
sub
das
inc
fs
add
cmp
jmp
add
sbb
fs
lret
dec
push
push
inc
repz
pop
sbb
sahf
jmp
cmc
mov
lret
test
push
xor
in
xor
out
mov
push
lods
rcl
lods
adcl
jne
enter
dec
ret
mov
jg
call
mov
negl
xchg
inc
cmpl
xor
stos
and
cmp
xor
lods
push
sarb
sarl
shll
xchg
mov
push
jp
mov
popf
add
inc
mov
xor
cwtl
pop
in
or
or
mov
fnstcw
es
int3
enter
cmp
fidivrs
jge
test
pop
push
mov
lret
cmpsl
inc
dec
inc
pop
aam
pop
dec
inc
push
dec
dec
fisttpl
push
cltd
aad
dec
adc
int3
fisttps
outsb
ljmp
lods
xor
xlat
inc
scas
xor
lock
add
popf
push
push
inc
dec
ret
fstps
adc
call
inc
cmc
pop
push
xchg
push
lods
push
je
mov
stos
test
into
push
add
hlt
xor
lods
lea
jns
dec
add
jle
stos
scas
inc
mov
fists
int
rcrb
mov
sbb
push
mov
dec
inc
jmp
notb
add
dec
cmp
jl
pop
cmp
push
repz
cmp
outsl
sub
lret
mov
xor
jne
repnz
scas
push
ss
and
leave
filds
outsb
hlt
shll
lods
stc
mov
lea
xor
pop
mov
and
lahf
sub
imul
pop
pushf
push
mov
test
sbb
fucomip
imul
imul
jbe
rorl
addr16
aad
nop
orl
push
mov
pop
push
in
cs
cmp
jb
pop
pop
mov
sbb
and
dec
into
fistps
mov
aam
data16
ds
out
dec
lods
aaa
dec
mov
loopne
dec
pop
jl
and
sbb
push
and
test
pop
cmovg
addr16
ss
daa
test
xchg
or
pop
mov
push
out
add
xchg
mov
push
add
fdivrl
fwait
mov
adc
and
or
repz
jle
gs
cmp
sub
and
sub
push
cmp
dec
out
mov
lods
inc
sub
cwtl
dec
fsts
inc
hlt
es
sbb
faddl
inc
js
sub
mov
cli
dec
push
jno
sub
scas
imul
ljmp
mov
cli
pop
xchg
cltd
les
loopne
imul
sbb
pop
jno
inc
mov
mov
ds
adc
xorb
test
pusha
push
jbe
cmp
iret
mov
push
dec
inc
push
stos
nop
test
lret
mov
or
imulb
and
imul
xchg
stos
dec
dec
add
sahf
addr16
lahf
inc
ljmp
xor
sub
sbb
jae
out
shrb
xchg
or
fwait
mov
mov
nopl
dec
cmp
mov
inc
dec
sub
fcom
jg
pop
mov
sahf
and
push
stos
dec
roll
iret
cld
rclb
int3
or
les
or
mov
push
mov
in
mov
pop
inc
fiadds
mov
in
or
dec
je
inc
cli
mov
add
fisubrs
or
bound
test
and
lcall
jno
insl
rcl
adc
adc
jmp
gs
repnz
push
pop
cwtl
push
popf
jg
test
push
sub
test
pop
jb
sbb
test
sub
sub
dec
addr16
mov
fdivs
cltd
int
lds
mov
int3
jmp
inc
ret
pop
lret
aad
dec
fistps
inc
int
push
adc
ret
push
add
or
call
push
mov
incl
test
or
sbb
loopne
enter
mov
xchg
nop
hlt
sub
clc
pop
test
jmp
rclb
xor
divb
ret
xchg
jge
fimull
arpl
iret
arpl
cmp
insl
dec
ret
out
xor
mov
ja
fstpl
push
test
enter
fisubl
pop
fldt
push
fisttps
and
sbb
loopne
es
cmp
sub
jg
sarl
mov
stos
leave
dec
ret
mov
push
std
jg
push
push
push
xlat
mov
add
lahf
jnp
pop
aas
neg
dec
jo
call
xor
mov
lea
xor
adc
and
pop
ficomps
lods
push
xchg
sbb
dec
jmp
jns
add
xchg
push
js
push
xchg
and
or
jg
dec
cwtl
loopnew
xchg
rol
xchg
insb
inc
mov
movd
or
pop
or
xor
data16
enter
lods
mov
int
jmp
mov
and
neg
mov
jge
inc
or
sbb
or
in
or
adc
lea
xchg
inc
xor
in
fiaddl
cmp
pop
sub
xor
test
and
data16
in
outsb
mov
push
cs
les
sbb
xchg
pop
fsubr
dec
lcall
call
add
cmp
inc
out
imull
xor
fimuls
xchg
push
gs
jmp
in
aad
fists
cmpb
dec
inc
cmp
test
sbb
push
push
ss
mov
lds
push
fnstsw
loopne
pop
test
imul
pop
nop
cmp
loopne
mov
aad
ljmp
and
cmc
pop
lods
out
cltd
addr16
fidivl
inc
pop
inc
cmp
int3
loopne
cli
mov
sub
or
jae
and
int3
test
pop
dec
out
jmp
adc
das
movsl
stc
xchg
xor
cmp
sahf
xchg
inc
pop
add
icebp
aaa
mov
add
adc
jp
je
pop
aam
dec
lock
pop
push
cmpb
jnp
jno
ret
pop
pop
data16
cli
xchg
ret
inc
sub
scas
xorl
or
push
push
push
ret
leave
sub
pop
push
sbb
mov
movsb
dec
inc
test
or
out
fsubp
loope
dec
test
imul
mov
cmp
test
sub
je
cmpsb
or
pop
inc
adc
cwtl
insb
dec
inc
xchg
cmp
std
sbb
push
jg
sub
cmp
or
insl
subb
out
fcompl
clc
add
loopne
push
dec
inc
mov
mov
loopne
ror
dec
sbb
rorb
xlat
aaa
out
push
sub
cmpsb
adc
test
and
adc
aas
or
pop
stos
cmp
out
jbe
std
xor
aaa
sbb
sub
out
out
dec
dec
or
mov
dec
add
mov
sub
jp
jno
outsl
lcall
sbb
pop
sub
adc
xchg
popa
mov
dec
add
xchg
adc
lahf
add
imull
jp
sub
sarb
pop
xchg
inc
pop
outsl
push
lret
push
jge
push
addb
xlat
orb
cwtl
stos
or
fstpl
mov
push
mov
sarl
and
hlt
push
ja
test
or
mov
lods
test
lret
sbb
jle
mov
pop
rcll
dec
push
test
outsb
push
sub
into
add
inc
sub
push
sub
xor
jmp
dec
shrb
jns
mov
pop
xchg
jnp
sahf
jnp
lahf
adc
addr16
arpl
push
inc
fwait
std
or
pop
xchg
inc
xchg
mov
pushf
pop
push
dec
push
push
ss
clc
add
dec
xor
icebp
dec
test
mov
imul
mov
lods
mov
lods
mov
pop
cmp
mov
inc
dec
push
call
sub
inc
xor
shrb
mov
push
xchg
ds
neg
leave
add
pop
fidivrs
not
cli
add
lods
adc
cmp
aas
sub
hlt
icebp
das
lcall
cltd
jle
jb
scas
xchg
cmp
sub
lcall
mov
adc
arpl
add
subl
xor
ss
dec
xchg
loop
and
inc
movlps
mov
cmp
fs
pop
imul
int
mov
std
sub
mov
sbb
jp
pop
or
or
pop
pop
pushf
or
pop
cmpsl
push
scas
inc
inc
xor
pop
mov
nop
sbb
nop
mov
fisubs
pop
push
rcrl
sbb
mov
pop
jbe
mov
rolb
push
pop
jo
cld
or
and
push
lea
dec
notb
add
lahf
jo
sub
cmpsb
mov
mov
push
fxch
pop
push
push
imul
mov
stc
xor
rorb
fildl
cwtl
mov
mov
ja
daa
inc
into
fnstenv
mov
push
int
jmp
pop
imul
lret
xchg
and
rclb
data16
add
leave
mov
pop
inc
inc
jle
mov
sbb
idivl
aam
test
jno
dec
ret
ror
adc
inc
subl
mov
add
mov
leave
push
sbb
and
pop
mov
clc
ret
push
push
cmpsl
test
ss
iret
and
xchg
mov
push
cmp
mov
loope
lret
negl
dec
cmpsl
cmc
mov
into
xchg
aam
repnz
pop
sub
enter
inc
cmp
lock
mov
xor
xorb
daa
cmpsl
stos
and
dec
and
sub
lahf
insl
lcall
ds
sarb
leave
es
imul
jnp
sbb
or
lret
jb
xchg
jp
xlat
jno
pop
test
push
outsl
pop
cmp
jnp
test
test
cmp
bnd
or
mov
push
int3
cmp
inc
loopne
shrb
mov
jmp
mov
pusha
movsb
mov
pushf
and
fcmovbe
pop
hlt
in
aas
jb
mov
shrl
xchg
into
int3
fdivrs
lahf
inc
mov
mov
imul
cld
iret
pop
aam
sbb
mov
movsl
fisttpl
pushf
inc
scas
mov
test
mov
dec
pop
adc
jecxz
les
jle
xor
add
cltd
and
movsl
rcrl
loop
inc
sub
popa
hlt
cmpsl
les
faddp
push
dec
inc
dec
add
clc
push
cmp
sbb
fsub
or
xchg
into
jno
push
pop
fs
in
inc
adc
iret
and
pop
push
stos
ret
cmp
leave
mov
mov
repz
in
inc
sub
xor
and
add
push
ret
sbbb
shlb
int3
add
push
in
adc
or
sub
push
loope
mov
fstpt
xor
fisttpl
mov
dec
mov
and
ret
inc
in
roll
xor
test
cmp
fcomp
cmp
out
mov
fwait
sti
cmpl
jb
jge
mov
sub
pop
jbe
or
lret
cmpl
inc
jne
inc
dec
push
dec
lods
je
push
dec
inc
lahf
inc
mov
cmc
arpl
lret
inc
inc
dec
icebp
cltd
cmp
dec
ret
inc
fnstenv
dec
dec
jns
dec
add
push
fldl
jp
sbb
xchg
jmp
neg
adc
leave
jbe
sbb
cmp
inc
sahf
leave
sub
inc
xchg
pop
pop
add
lods
push
add
aaa
inc
xor
xchg
inc
leave
mov
mov
pop
inc
dec
mov
ret
mov
clc
ss
std
inc
fwait
pop
sbb
dec
aad
outsl
push
push
add
ret
or
xchg
lret
test
aaa
mov
sub
pop
ret
movb
loopne
sub
push
pop
inc
pop
stos
cmpsl
fstpt
test
pop
xor
into
mov
adc
adcb
fs
pop
adc
movsl
test
pusha
xor
insl
jns
dec
aad
sbb
shr
jl
push
pop
arpl
add
lret
mov
mov
cmp
adc
cmp
bound
xor
or
adc
lret
push
xor
rcrb
and
add
add
repnz
aad
icebp
sbb
fsubs
add
mov
test
push
xor
mov
sbbl
stos
or
and
iret
insb
fadds
jnp
popl
lock
bound
mov
ss
addr16
ficoms
sub
xchg
and
sbb
test
push
jp
fs
mov
jmp
das
daa
fmuls
cmp
data16
aam
shlb
fsubrs
xor
pusha
arpl
jge
push
mov
out
or
testb
insb
mov
dec
rcll
mov
dec
push
push
rcr
jl
mov
jmp
pop
jno
outsl
into
loope
mov
cmp
and
pop
cli
imul
lods
idiv
xor
and
inc
push
out
xor
mov
and
mov
xchg
fistps
dec
ds
ret
jns
cwtl
sbb
mov
subl
cmp
or
int
int
mov
jmp
xchg
or
stos
cmp
xchg
inc
leave
imul
pop
mov
cmc
jbe
adc
cli
jmp
inc
shlb
cmpsb
fidivs
xor
outsb
jmp
insl
dec
jecxz
adc
mov
aaa
lods
jns
add
enter
add
dec
xchg
inc
xchg
imul
mov
mov
fwait
inc
mov
fs
or
outsl
inc
fdivl
arpl
sub
sub
push
int
inc
pop
sub
in
push
jne
mov
jmp
jle
mov
mov
pop
mov
in
lahf
dec
xor
in
lods
push
cwtl
push
push
rcrb
push
cmp
xor
add
out
dec
xchg
pop
aad
mov
add
xlat
push
inc
popa
sub
jnp
mov
mov
xor
mov
add
or
xchg
roll
inc
xor
pop
nop
inc
dec
jp
jl
pop
lods
popa
dec
icebp
mov
inc
iret
inc
popf
xchg
jns
push
sub
mov
aad
leave
enter
dec
jg
add
frstor
dec
mov
mov
call
or
dec
stos
jbe
lds
inc
jnp
add
int3
pop
pop
sbb
xor
les
mov
std
add
je
shl
dec
sbb
pop
lods
dec
rorl
and
mov
pop
push
jmp
pop
leave
pop
int
repz
pop
stos
stc
jo
dec
xor
lds
sub
push
mov
jp
lods
pusha
in
adc
mov
mov
jb
lods
jnp
dec
jns
mov
mov
and
test
adc
sbb
inc
mov
lahf
jecxz
sub
dec
fadds
jnp
jle
xchg
movsl
dec
pusha
leave
decb
xor
add
arpl
jmp
ficoml
test
pusha
push
incb
lods
adc
ds
cld
add
xor
mov
mov
dec
jnp
pop
dec
sbb
and
cmp
pop
mov
push
in
jb
shr
lods
leave
add
rolb
je
xlat
das
cld
movsl
sbb
bound
jo
dec
push
ds
ss
adc
dec
push
in
add
inc
xchg
inc
xchg
pushf
cmp
mov
ja
adcl
jg
or
jecxz
data16
mov
sbb
xchg
jno
icebp
inc
ficompl
cs
jae
shrl
add
dec
and
mov
leave
std
jns
xor
mov
scas
adc
push
rcrl
adc
jbe
into
add
dec
pop
mov
pop
shlb
dec
lcall
lahf
or
dec
icebp
mov
pop
cmp
dec
popf
cld
cmp
loopne
test
ja
mov
dec
js
adc
test
imulb
inc
ss
aaa
imul
es
jle
ja
addr16
jmp
repz
pop
mov
inc
in
dec
add
fwait
jb
ret
mov
iret
sahf
and
lds
push
inc
push
cmp
and
rol
xlat
jnp
popf
into
and
dec
leave
inc
loop
lock
jmp
mov
pop
cmp
mov
dec
or
jae
xor
mov
dec
mov
out
outsl
scas
xor
icebp
pop
fnstenv
scas
cs
add
and
lods
and
push
stc
add
roll
xor
and
push
mov
loop
adc
add
test
cmp
in
js
fisubrl
scas
inc
pop
shl
out
lea
mov
addr16
stos
imul
mov
xor
mov
lds
and
mov
adc
xlat
fisubrs
ds
mov
std
addb
xor
push
test
ja
testb
mov
pop
pop
push
mov
nop
or
scas
cltd
sahf
mov
fdivrs
jb
inc
push
add
inc
pop
pop
aam
or
lock
pop
movsl
push
mov
inc
fdiv
jae
lea
into
ss
inc
add
lret
int
push
movsb
push
dec
xchg
mov
lock
cmp
clc
xchg
dec
inc
inc
push
jl
je
jns
arpl
sbb
adc
pop
mov
inc
push
push
mov
rcl
pusha
inc
aad
jbe
dec
inc
cli
dec
test
call
addr16
call
pop
and
adc
mov
mov
rcrb
sbb
cwtl
sub
lret
call
sarb
test
incl
dec
setae
call
jge
cmp
dec
lea
cmc
push
out
outsl
push
cs
sbb
std
pop
mov
or
shlb
dec
in
and
or
sub
lahf
lock
scas
or
push
cmp
enter
stos
movsl
jae
aam
dec
sbb
fwait
inc
lahf
jb
and
mov
aam
xor
addb
mov
dec
aad
sbb
hlt
loop
fstpt
ret
push
sub
mov
mov
cmp
push
fstps
jp
adc
lret
dec
or
dec
fsubrp
sbb
and
sbb
and
insb
xor
cmp
push
mov
and
imul
jg
mov
inc
out
cmp
push
pop
or
fcos
sub
js
adc
add
cld
sbb
pusha
mov
idivb
ret
dec
adc
push
mov
mov
scas
cwtl
sahf
jmp
or
jbe
mov
sarl
jns
adc
dec
push
insl
add
sbb
mov
stos
test
xchg
mov
ret
push
je
push
ret
xor
divl
mov
cmpsb
lods
and
cmpsl
pushf
ret
in
jecxz
mov
pop
scas
pop
fcmove
fisubrs
addr16
data16
test
inc
stos
mov
sbb
lods
mov
jmp
shlb
mov
inc
gs
addr16
inc
jg
call
and
mov
scas
mov
dec
xchg
dec
loopne
mov
test
xchg
xchg
leave
add
pushf
jne
data16
leave
jecxz
jl
mov
fimull
push
add
mov
pop
out
popa
pop
arpl
mov
movsb
dec
daa
mov
popa
sbb
jo
sbb
rolb
sbb
sub
dec
and
adc
add
push
xchg
adc
push
jb
xor
mov
iret
inc
rclb
test
sarl
rcrb
mov
mov
jo
jmp
sub
call
sub
icebp
xlat
sbb
jae
shlb
jg
xchg
jecxz
xor
std
push
pop
jbe
out
dec
inc
fidivrs
pop
nop
lods
ret
fnsave
sub
mov
inc
mov
scas
dec
aad
add
out
jnp
jl
cmp
sub
or
add
fxch
add
stos
dec
test
aaa
dec
inc
push
push
jge
xchg
ret
test
pop
mov
das
sub
pop
imul
sarl
mov
outsl
cmpsl
xor
jnp
push
fstp
filds
nop
sub
pop
enter
pop
lods
xor
push
mov
sub
and
and
xchg
pop
test
lret
mov
fs
sti
in
mov
push
push
ljmp
jo
push
push
lods
scas
xchg
jecxz
pop
adc
lea
sub
jge
inc
mov
sbb
lahf
adc
xorl
ljmp
xor
mov
pop
clc
push
or
lds
in
ss
mov
push
mov
mov
inc
sbb
ficomps
mov
jle
aas
loop
mov
sbb
jo
roll
int3
clc
scas
mov
cltd
xor
repnz
loop
push
mov
test
aad
jp
testl
subb
cli
mov
mov
and
repz
sahf
pop
jnp
mov
jb
hlt
cmp
and
dec
inc
push
cmpsl
dec
pop
imul
jno
xchg
mov
sbb
loopne
jg
insb
shll
jns
inc
out
std
dec
pop
pop
stos
mov
mov
jmp
repz
or
cmp
push
dec
in
ficompl
stc
push
sbb
pop
lret
loopne
scas
aad
insl
fcoms
sbb
pop
add
std
pop
inc
negb
dec
xor
add
inc
incb
hlt
mov
inc
cltd
inc
loopne
pop
pop
leave
mov
mov
ret
bound
mov
sub
stc
fsts
rorb
mov
mov
insl
sbb
pop
rcrb
fwait
sub
sahf
jp
add
adc
mov
dec
push
inc
jns
inc
inc
movsl
mov
aad
sub
ret
xor
stc
into
fs
inc
pop
inc
xchg
pop
test
mov
outsb
inc
push
dec
lds
sub
adc
xchg
dec
daa
test
mov
ds
cmp
movb
out
or
xchg
jnp
push
dec
sbb
sub
xor
lods
call
dec
leave
test
jne
cs
or
sbbb
mov
divl
sub
fldt
and
adc
ds
and
into
add
aam
xchg
mov
and
lret
in
jns
js
gs
sarb
sub
pop
push
dec
mov
cmp
jecxz
cld
xchg
inc
push
pop
shll
or
sbb
adc
loop
mov
xchg
popf
call
mov
pop
faddl
mov
test
fwait
mov
das
or
add
or
jle
lds
xor
loop
sbb
fcompl
mov
push
movsb
cli
movb
lds
inc
mov
jle
cmp
mov
hlt
pop
ret
mov
sub
scas
push
inc
icebp
and
cmp
scas
shrb
push
mov
pop
mov
shlb
shll
repnz
jg
adc
mov
jl
jne
jae
xchg
insl
repnz
mov
mov
dec
push
inc
mov
push
inc
scas
mov
mov
in
lods
push
add
mov
mov
push
and
ret
jb
fxch
xor
push
sub
insl
js
push
sbb
and
repnz
mov
inc
xor
push
sbb
aas
out
fsts
mov
xor
push
flds
cmp
enter
or
or
and
xchg
and
xchg
push
ja
push
es
sahf
les
ja
xchg
and
pop
aam
push
inc
mov
outsb
push
pop
jecxz
test
pop
pop
outsb
mov
ret
scas
xor
jo
les
cmp
or
jl
pop
push
sarl
sbb
inc
inc
movsl
lods
iret
inc
sub
adc
dec
ljmp
pop
jmp
call
lods
js
sub
push
xor
jecxz
cmp
push
dec
loop
pop
xchg
jecxz
and
xor
pop
rcrl
mov
pop
shrb
adc
or
inc
loopne
jg
adc
mov
gs
ror
shr
scas
mull
stos
fbstp
mov
ffreep
and
pop
push
les
das
jae
adc
cmp
inc
sti
mov
lods
jmp
xor
cmp
ret
push
or
jbe
arpl
or
daa
pushf
pop
jg
bound
jle
mov
shll
mov
pop
sub
iret
roll
xor
std
sub
jae
sub
adc
cmpsb
dec
mov
inc
or
push
jecxz
jnp
mov
cs
cmpsl
dec
or
gs
dec
and
rolb
lock
mov
jnp
mov
popa
jmp
mov
xchg
and
xor
aas
ljmp
lea
jmp
pop
andb
xorl
leave
dec
rcrl
sub
out
sub
push
mov
sbbl
loope
rcll
pop
neg
mov
jmp
shrb
popf
leave
in
mov
mov
push
inc
dec
and
xor
inc
sbb
daa
push
sbb
sbb
push
jb
or
lret
sbb
add
sbb
xchg
dec
dec
sub
pop
daa
pop
movb
pop
out
stos
sbb
sub
imul
repz
pop
call
xor
sti
push
stos
mov
ret
inc
mov
add
cmc
imul
dec
ss
xchg
mov
call
test
ret
xor
jns
add
clc
shr
rorl
test
ret
or
shrl
imul
ret
ret
push
fcomps
outsb
lea
add
inc
xchg
pop
dec
adc
adcb
pop
dec
inc
or
call
call
xor
dec
inc
inc
cmpsl
jecxz
pop
mov
mov
xor
jae
dec
sbb
mov
push
cmp
test
imul
lcall
sub
push
mov
lock
mov
cltd
pusha
and
add
lret
mov
adc
iret
lea
mov
xchg
repz
xor
into
mov
aad
ret
fidivl
inc
mov
aas
jo
mov
inc
mov
add
clc
jecxz
jle
pop
mov
lods
lds
fildl
and
fwait
je
xor
mov
xchg
or
jle
mov
pop
inc
int3
or
imul
sub
js
push
repz
pop
sarb
ret
in
inc
push
mov
adcb
adc
pop
cmp
add
iret
leave
ds
pop
insl
icebp
push
ficoml
popa
imul
arpl
sahf
push
imul
inc
jns
or
mov
cmp
insl
lods
cwtl
mov
aas
test
sbb
aad
jl
cmp
and
sbb
rorb
and
xchg
dec
xchg
mov
ret
and
sarb
out
and
test
pop
test
aad
lahf
dec
mov
add
pop
push
pop
scas
fimuls
lahf
aam
dec
adc
addl
xchg
loop
and
pop
inc
rclb
fbstp
mov
loop
sbb
cmpsl
push
aad
cld
mov
sbb
add
xor
inc
insl
xchg
cmp
push
fimull
aam
inc
ds
mov
je
movsb
daa
cwtl
mov
das
mov
rclb
or
add
lret
xor
and
adc
fiadds
pop
and
mov
sub
and
pop
movsb
insl
das
daa
cmc
jle
pusha
aas
cmpsl
pop
sti
ds
or
push
lahf
ss
pushf
sarb
sub
and
or
sarl
roll
push
cmp
mov
je
imul
cmp
pusha
pusha
and
xor
pop
jmp
sbb
xor
imul
insl
dec
pop
addb
test
inc
jae
push
sti
test
pop
and
and
in
sahf
lret
frstor
push
cmpsl
jne
mov
xchg
imul
and
lods
mov
dec
ret
add
or
jbe
lret
arpl
add
push
insb
cmpl
and
cld
mov
mov
xor
mov
push
addr16
lahf
hlt
push
mov
mov
out
xor
mov
pop
bound
xchg
xor
test
cmp
inc
inc
lcall
dec
jp
into
pop
pop
call
into
daa
adc
insl
icebp
loope
in
andl
je
notb
inc
subb
push
shrl
pop
mov
cmc
pop
or
popl
add
das
and
xchg
adc
fstpt
rcrl
cwtl
xchg
sub
and
or
inc
push
mov
and
adc
pusha
xlat
adc
inc
lret
daa
inc
mov
or
jo
mov
adc
cld
cmp
jae
cmp
xchg
or
and
inc
adc
ret
sbbb
pop
jbe
sbb
cmpl
push
push
push
inc
pop
xlat
lods
push
mov
push
lods
xchg
scas
xorb
xor
sarl
inc
mov
clc
dec
in
std
dec
outsb
inc
lods
pop
push
push
int3
fwait
and
je
stc
ror
mov
mov
aad
push
stc
insl
lock
sbb
mov
aam
adcb
pop
inc
es
jb
andb
inc
adc
push
fwait
jnp
pop
push
decl
sbb
mov
lret
sub
mov
push
cld
push
iret
inc
jl
lods
sbb
ret
push
pop
jnp
jl
xchg
lea
push
fimuls
shrb
inc
lret
mov
add
xor
mov
in
inc
inc
add
dec
roll
fbld
fldcw
shl
adc
push
add
pop
push
pusha
pavgw
xor
insb
cmp
leave
inc
outsb
cwtl
call
dec
sarl
cmp
aaa
cmp
xchg
call
cmpsl
push
sbb
lret
insb
andl
fstl
inc
jge
fisttpll
pushf
and
inc
dec
outsb
cmp
push
push
outsb
ficoml
pop
pop
inc
push
imul
jp
es
sbb
or
jmp
push
repnz
xorb
sbb
sub
lret
fs
nop
sub
inc
and
dec
lock
pop
cmp
arpl
bound
insl
cmpsl
lds
jae
ffreep
xchg
or
cmp
mov
ss
pop
push
add
add
or
into
movsl
aad
cmp
add
xchg
jo
and
shll
and
dec
bound
imul
sbb
sarl
sbb
mov
inc
jg
lcall
fists
jnp
push
cmp
subl
xor
pop
lods
xor
clc
dec
insb
push
iret
dec
pop
inc
pop
xchg
repz
mov
mov
repz
dec
mov
rolb
push
mov
rclb
xchg
cmc
dec
dec
int3
inc
outsl
js
or
popf
and
or
in
push
mov
cmp
mov
lods
lds
stos
mov
addb
push
icebp
sti
cmp
mov
jnp
ret
jp
shlb
and
push
jmp
pop
imul
xor
aaa
add
add
clc
push
scas
adc
ljmp
aad
push
cli
pop
movsb
lret
pop
mov
push
and
pop
je
imul
inc
dec
mov
in
jo
ds
hlt
insl
mov
rclb
pop
mov
push
sub
fidivrs
jno
lock
shr
icebp
inc
pop
movsb
sbb
insl
push
ja
mov
push
push
popf
jmp
mov
out
xor
adc
lds
xor
mov
addb
rclb
push
push
aam
adc
sbb
pop
jno
mov
adc
add
add
jo
mov
inc
push
dec
test
repz
dec
fcomps
out
daa
and
jle
icebp
mov
loop
shl
push
mov
push
mov
cwtl
loop
xchg
jno
inc
cmp
insl
xor
inc
gs
sbbb
dec
or
iret
movsb
fnstcw
inc
mov
mov
daa
je
ret
inc
mov
int3
and
popa
and
add
add
test
bound
or
push
insl
rcl
rorl
ja
push
leave
mov
jl
arpl
dec
sbb
jae
outsl
jl
fst
jmp
imul
cmp
push
or
mov
xor
bound
mov
xchg
and
jg
push
lods
xor
xor
sub
aas
mov
dec
xchg
aad
adcb
or
call
pop
pop
mov
lods
push
xor
bound
mov
sahf
jmp
pop
notl
xor
jnp
mov
or
mov
insb
xchg
test
rorb
mov
sbb
repnz
pop
jmp
jmp
inc
divb
mov
inc
in
fldcw
fadd
test
enter
test
fstps
sbb
mov
xor
js
bound
xor
enter
fistpl
inc
xor
mov
push
xor
or
pop
xchg
fsubl
pop
inc
test
repz
sbb
lock
sbb
xor
adcl
mov
push
pop
dec
jecxz
dec
pop
inc
inc
adc
mov
pop
andb
lds
loopne
pushf
jge
sub
pop
sub
leave
xchg
or
xor
out
pop
push
loop
xor
and
int3
inc
out
or
fsubr
dec
dec
arpl
or
rorl
pop
sub
dec
and
addr16
bound
jb
inc
andl
mov
inc
sbb
jo
xchg
out
mov
push
pop
mov
insb
pop
xchg
xor
adc
mov
push
pop
dec
aaa
fistpl
test
inc
push
movl
testb
mov
sbb
repz
push
add
push
xor
call
xchg
xor
mov
push
flds
sub
xchg
loopne
fcomps
ljmp
mov
pop
dec
sti
xchg
bound
divb
jnp
test
jmp
ficompl
mov
sub
stos
je
ret
dec
dec
jmp
and
ja
and
sbb
jecxz
mov
test
fcmovne
movsl
cmp
clc
mov
dec
mov
or
pop
inc
gs
loopne
pop
pop
inc
mov
outsb
pop
mov
mov
orb
arpl
mov
ja
push
lahf
aam
pop
outsl
std
pop
int3
mov
insl
push
add
add
push
fidivl
inc
pop
sbb
hlt
icebp
fsts
pop
inc
xchg
adc
sahf
jns
xchg
or
mov
mov
rcrl
add
xor
iret
xchg
xchg
add
lock
jle
popf
pusha
sbb
cmc
sbb
lods
xchg
sbb
shll
xchg
aad
loopne
shrb
rcrb
xchg
push
je
push
loope
mov
jmp
mov
adc
repz
jmp
pop
movsl
sti
push
jae
loope
push
mov
sar
dec
std
ret
ss
add
cld
cmpsl
ret
add
mov
push
xchg
cmovge
shll
stc
mov
xchg
enter
call
jg
mov
mov
scas
jb
push
lock
cli
mov
std
int3
cmpsb
push
fnstsw
push
inc
dec
push
cmpsl
loop
sarl
mov
insb
inc
xor
out
ja
repz
das
cwtl
xor
jg
add
push
adc
pop
xchg
mov
lcall
dec
vandps
lret
jnp
push
push
jg
scas
sub
nop
je
mov
fucomi
scas
add
mov
aam
stos
mov
ljmp
ja
mov
pop
ss
mov
push
mov
pop
push
loopne
push
and
push
pop
loope
lods
call
leave
jl
push
je
xchg
pop
sbb
lahf
jne
push
sub
jmp
dec
xor
inc
inc
daa
shrl
pop
sub
fsubl
hlt
inc
pop
xchg
push
xchg
pop
fcmovu
ds
push
jmp
inc
inc
outsl
push
test
mov
inc
outsb
test
add
inc
mov
push
pushf
out
sahf
mov
mov
aam
and
in
mov
icebp
push
mov
sbb
in
fdivrs
add
int
rcrb
mov
test
adc
pop
push
sbb
jle
add
ds
shl
ja
imul
rol
loopne
push
dec
mov
testl
adc
or
mov
jbe
cmp
or
out
sub
loop
jp
test
int3
fcoml
test
jle
ret
mov
enter
inc
mov
dec
ficoms
mov
mov
and
push
fwait
nop
cmp
xchg
mov
iret
loop
pop
aaa
insl
pop
cmp
dec
imul
ret
jb
fbld
test
ror
pop
insl
sub
mov
push
and
pop
cld
sub
mov
clc
xor
push
lea
pushf
cld
clc
loop
push
xchg
or
in
inc
mov
loop
int
xchg
cmp
dec
pushl
imul
in
mov
or
stc
and
xchg
pop
push
pop
mov
mov
adc
imul
xchg
adc
sub
xor
mov
imul
xchg
add
sahf
dec
aaa
pop
xchg
dec
bound
pop
lret
push
xor
leave
mov
jp
ret
jb
lret
insl
and
jp
mov
add
push
icebp
sub
pop
sub
ret
stos
and
out
sub
outsl
fisubl
mov
dec
insl
out
iret
ret
int3
imulb
sahf
adc
dec
ja
mov
sub
loop
pop
add
inc
cmp
dec
dec
xor
int3
jg
ret
orl
pop
fwait
dec
cmpl
pop
and
inc
mul
lret
shlb
enter
inc
jne
xchg
in
fwait
imul
and
pop
add
mov
mov
daa
xor
outsl
adc
bound
and
cli
repz
xchg
adc
sub
fsts
arpl
or
orb
cmc
ret
push
mov
stc
or
insb
mov
push
push
mov
jge
push
adc
push
mov
test
sbb
sbbl
andb
out
dec
inc
pop
fildl
ret
xor
and
dec
iret
data16
into
push
jp
push
sbb
fiadds
fidivrl
test
jecxz
pushf
xor
and
iret
jnp
push
jb
in
xor
js
xchg
int
or
pop
inc
jmp
or
insl
mov
xchg
cwtl
jge
dec
out
mov
fimuls
xor
jo
icebp
rcll
test
out
pop
jle
imul
push
rol
mov
in
int3
xchg
push
sub
xor
inc
cwtl
mov
loop
ficoms
push
test
mov
add
rcrb
pop
mov
adc
xor
inc
pushf
adc
sbbb
or
in
xor
jo
mov
or
mov
cmp
lahf
aaa
clc
mov
adc
nop
cmp
pop
dec
sub
cmp
adc
mov
push
push
cld
inc
shr
fbstp
scas
cmp
jp
mov
xor
div
mov
or
ret
dec
sub
ret
jmp
test
jnp
arpl
xor
fwait
or
ljmp
jbe
lods
mov
jecxz
sub
fsubs
daa
jmp
mov
je
xchg
mov
out
jnp
push
das
mov
push
rcll
sub
push
scas
outsb
iret
inc
add
aas
inc
and
fwait
jmp
mov
imulb
pushf
ja
outsl
xor
mov
int3
pop
and
mov
push
vsubps
fimull
test
shrl
or
pop
pushf
cwtl
jp
inc
inc
jae
sub
dec
js
or
add
pop
cmp
push
cld
arpl
fsubrl
push
pop
sbb
jmp
jmp
pop
pop
mov
in
xor
xor
mov
cmp
xchg
lds
in
std
push
jmp
cli
or
insl
in
test
mov
cmp
fisubrl
push
jnp
int3
negb
enter
jns
rorl
movsl
xor
sahf
pop
jecxz
jg
pusha
mov
fnsave
cltd
push
xchg
decb
jns
adc
into
sbb
inc
pop
leave
pop
aad
pop
jg
jge
sub
mov
dec
insl
pop
lret
xchg
rcr
dec
jl
push
fnsave
mov
adc
fdivl
sahf
hlt
mov
pop
fwait
pop
lds
sub
mov
aad
and
push
cmp
xor
push
es
dec
sbb
out
leavew
andps
fcomi
or
repz
test
or
or
lods
mov
ret
push
push
pop
cmp
jg
out
jmp
jg
dec
and
pop
jnp
je
inc
push
leave
loope
xor
fs
or
push
mov
pop
call
xchg
pop
xchg
ficoml
dec
mov
or
jbe
ficompl
jb
neg
stc
bound
sarb
stos
add
fldl
jp
mov
cmpsb
add
xchg
add
push
faddl
orb
sub
add
movsb
lcall
jb
mov
jae
jns
dec
stc
inc
xchg
int3
mov
iret
rcrl
mov
fstps
sar
dec
or
int
cmp
pop
out
adc
adc
fadds
imul
sbb
sub
sub
cmc
mov
dec
cmpsb
dec
jmp
lods
or
outsb
mov
push
or
mov
lea
movsl
sub
push
add
add
into
enter
jae
xchg
pop
adc
adc
js
adc
dec
cmp
mov
into
rcrb
mov
pop
xchg
inc
inc
inc
xor
xor
dec
arpl
cmp
insb
and
popf
inc
add
das
sbb
shrb
int
mov
pop
mov
ret
jecxz
push
mov
push
and
push
jne
arpl
pop
add
push
stos
inc
call
sahf
bound
loopne
fcmovb
pop
xchg
repz
pop
test
aaa
aaa
add
pop
call
dec
cmp
sahf
sahf
xor
test
das
mov
push
xor
pop
insb
sub
lret
inc
pop
xchg
test
adc
mov
sub
xchg
xor
and
in
xlat
push
mov
std
or
inc
in
outsb
je
and
aad
loop
cmc
int3
jns
aad
fdivs
nop
sahf
out
add
inc
mov
rcl
jno
adc
and
clc
add
test
add
flds
dec
call
sbb
push
loopne
enter
outsb
pop
mov
add
mov
movsl
ja
jb
addl
cmpb
xor
xor
add
loopne
aad
daa
and
insb
jmp
pop
push
lds
mov
mov
js
add
lea
out
dec
lods
adc
push
and
test
enter
xchg
mov
jnp
pop
pop
jnp
fcmovbe
add
outsl
inc
jl
xchg
or
adc
mov
into
jmp
insl
andl
jecxz
mov
lret
adc
mov
or
aas
sahf
sbb
enter
mov
rcrl
fsubl
ret
gs
xchg
adc
hlt
inc
push
xchg
das
jb
in
fmull
out
jno
adc
sbb
mov
repnz
shll
push
or
cmpl
outsb
cs
mov
mov
adc
dec
adc
xchg
sahf
jmp
pop
and
push
cmpsl
cld
sub
xor
cmpsb
lods
add
inc
testb
jb
test
insb
xchg
adc
mov
mov
sahf
mov
or
mov
fdivrp
ds
aas
push
pop
mov
push
iret
fnstenv
jns
cmp
cmpsl
cmp
jo
xor
and
clc
test
pop
and
jp
push
inc
cmpsb
xor
lahf
std
xchg
jle
push
mov
ficomps
mov
sbb
or
dec
xor
mov
fwait
and
aas
cmp
sub
push
gs
jbe
push
lret
xor
adc
sub
dec
in
xor
mov
mov
jbe
adc
movb
mov
pop
jbe
dec
pop
xor
mov
xchg
lcall
dec
rcr
test
cmp
aaa
repnz
ss
cmpl
push
xorb
aas
add
arpl
or
dec
or
inc
mov
repz
dec
imul
sub
xor
xchg
pop
into
cmp
daa
mov
inc
adc
xor
jne
mov
adc
sbb
inc
jge
mov
inc
psubusw
push
xlat
xchg
mov
jecxz
sbb
hlt
pop
jl
mov
push
and
mov
cmp
inc
sbb
dec
xchg
sub
call
mov
insb
in
fcoms
inc
inc
data16
dec
dec
popa
insb
pop
push
aas
sahf
test
push
and
push
or
rolb
push
dec
and
loopne
adc
cmp
xchg
xor
ret
leave
jns
xor
xor
cmp
inc
and
jp
fdivrs
fists
add
adc
aas
mov
sub
test
cmp
inc
adc
mov
in
push
mov
and
adc
push
add
mov
lahf
lods
inc
inc
jp
pop
insb
inc
jle
addr16
push
test
or
push
add
pop
sub
dec
dec
push
in
andb
mov
inc
test
sbb
cli
adc
mov
ret
rcll
imul
mov
icebp
bound
arpl
fstl
cld
jmp
addr16
adc
into
cmp
push
sahf
and
dec
xchg
aad
dec
ss
orb
scas
les
or
dec
cmp
lock
jmp
pop
xchg
out
fs
imul
sbb
add
fstpl
push
int
dec
push
call
cltd
push
daa
mov
xchg
dec
push
sub
pop
dec
xor
and
fdivr
inc
push
mov
sbb
add
lea
jns
cmp
xor
cli
cmp
mov
dec
add
jmp
inc
pop
fsts
sbb
lcall
dec
push
mov
adc
pop
and
push
jae
int3
dec
jle
data16
or
lea
mov
je
ds
imul
ss
or
or
jns
mov
jae
dec
fwait
arpl
dec
dec
jl
xchg
cli
jp
mov
data16
fwait
or
mul
ds
in
push
es
push
dec
xchg
mov
sub
in
lods
aas
outsb
cld
fmul
jmp
push
adcl
fmull
stos
jecxz
cwtl
cmp
xchg
pop
cld
cmp
dec
in
lds
enter
popa
sub
js
adc
jmp
sub
test
rcll
into
add
lret
mov
loope
jne
pop
cmpb
aam
sub
inc
mov
push
mov
shrl
mov
lret
arpl
dec
scas
mov
cwtl
cmp
insl
jp
in
lods
xchg
xlat
mov
dec
xchg
adc
dec
ret
insl
dec
fldenv
sub
adc
jb
in
in
dec
aas
es
ret
sahf
xor
sti
repnz
ljmp
fs
call
loope
adc
scas
insb
sub
leave
repnz
push
sub
sahf
add
cli
mov
and
pop
lahf
and
inc
divl
popf
into
add
arpl
outsl
inc
push
mov
cmp
sbb
movaps
fadd
pusha
jmp
sti
lahf
clc
push
lods
jmp
inc
ret
push
push
lahf
mov
ror
loopne
push
test
shlb
push
data16
sub
pop
call
mov
mov
push
dec
sub
pop
push
jl
push
and
sti
jle
outsb
cmpsb
jmp
cmp
jae
sar
cmp
inc
inc
sub
fstpt
mov
rcrl
jnp
mov
pop
dec
xchg
cmpsb
pop
inc
iret
sbb
push
ds
adc
sbb
sarb
xchg
sbb
jb
shrb
xor
mov
insb
xchg
fwait
or
ret
jle
lret
bound
je
push
xchg
push
ret
mov
xchg
dec
pop
push
mov
movsl
push
fstps
cmp
mov
cmpsb
and
daa
push
xlat
xor
inc
imul
sahf
dec
mov
shlb
and
mov
imul
mov
std
xor
mov
xor
push
mov
and
gs
dec
mov
insl
mov
lret
mov
push
mov
data16
idivl
mov
mov
arpl
inc
out
xor
mov
xor
stos
leave
jne
daa
lods
fidivrl
push
pop
add
subl
inc
push
dec
ficoms
mov
icebp
into
xor
xor
xor
sbb
aam
sub
repz
and
xchg
add
insb
cmp
in
test
sti
dec
inc
fldt
roll
pop
stos
mov
pop
xchg
loopne
push
andb
dec
inc
mov
bound
in
lahf
dec
xchg
arpl
adc
or
cmp
fs
jl
sbb
aam
push
or
inc
and
imul
fnstenv
lahf
pushf
rcll
sbbb
int3
test
xchg
jmp
sub
ljmp
dec
flds
xor
fsubl
add
repz
mov
mov
loopne
sub
neg
cs
pop
jns
movsl
lods
adc
jb
pop
add
sahf
sub
mov
xorl
pop
fs
cmp
inc
xor
lret
sbb
addl
loopne
dec
lods
inc
in
inc
cmpsl
mov
pcmpgtd
mov
lods
add
push
cmpl
cmp
push
jmp
pop
pop
push
loop
inc
sub
and
stc
add
xor
jge
push
jo
mov
fwait
xor
sub
or
lret
push
scas
fdivrl
mov
jg
jmp
cli
sub
mov
dec
insb
dec
adc
dec
stc
arpl
mov
int3
mov
mov
mov
xor
rolb
ret
fiadds
lahf
push
addr16
sbb
dec
xchg
cmp
mov
adc
mov
test
out
mov
popf
popf
in
push
dec
jae
call
mov
add
pop
call
sbb
imul
and
hlt
ds
mov
push
movsb
and
inc
stos
es
add
dec
ret
filds
lods
jp
or
dec
rclb
out
and
aam
lcall
add
xchg
or
cmp
add
lock
imul
adc
sbb
mov
out
push
clc
das
cmpsb
icebp
std
lock
fstpl
js
lea
or
pop
push
push
mov
shrb
xlat
inc
sub
cltd
and
insb
pop
push
ja
mov
push
lcall
cli
lods
mov
xor
pop
rcll
jp
jmp
fcomps
outsb
sbb
jecxz
lret
inc
mov
pop
or
push
push
sti
adc
add
or
mov
cli
mov
ret
or
inc
nop
adc
gs
sub
or
fisubl
add
fiaddl
sub
or
push
push
test
lahf
mov
or
xor
jge
jb
push
adcb
adc
cmp
sub
mov
fstpt
cmp
and
push
xchg
es
jl
xor
sbb
mov
pushf
pop
jmp
dec
sub
dec
push
sbb
cmp
arpl
out
imul
cmp
push
dec
pushf
out
hlt
cmp
int3
cmpsl
lock
push
dec
std
push
mov
cs
stos
xchg
insl
leave
xor
xor
ss
push
adc
testl
xor
or
xor
js
cmpsl
repnz
outsb
pushf
sti
cmp
mov
cmp
or
jb
mov
test
jb
mov
or
out
add
mov
scas
inc
mov
outsl
les
or
shlb
pop
mov
xchg
enter
jnp
push
insb
inc
popf
divb
enter
in
mov
daa
sub
or
pop
insl
sahf
mov
sbb
andb
jae
xor
push
lret
mov
iret
pop
sarl
sbb
mov
add
lcall
pop
int3
fdivrs
in
andb
sbb
lods
mov
cmpsb
scas
loope
dec
jno
mov
jb
adc
push
xor
pop
inc
mov
scas
inc
das
in
cwtl
fwait
mov
ja
in
sub
mov
andl
sub
fstpl
aas
inc
mov
iret
mov
or
pop
sahf
leave
pop
int3
and
jno
xchg
jbe
shll
aaa
test
push
sar
pop
inc
call
enter
lahf
xor
lret
shrl
shr
imul
lock
pop
fisubrl
ds
mov
jecxz
dec
shlb
clc
cmp
pop
sub
out
cltd
in
adc
jnp
daa
mov
sbb
inc
mov
push
nop
ds
cmp
in
fimuls
lock
orb
rcll
push
sbb
iret
push
pop
mov
je
cmp
in
mov
stos
sub
pop
jo
into
mov
pop
rorl
sub
push
ja
xlat
xlat
pusha
sti
xchg
repz
push
insb
and
mov
andl
jle
mov
insb
subb
add
push
into
push
jo
push
pusha
scas
sbb
add
mov
addb
sar
add
inc
xchg
push
jo
shl
enter
repz
adc
and
mov
dec
loopne
inc
pop
xchg
ret
inc
mov
push
rolb
out
rcrl
lret
loop
mov
xchg
or
sahf
lahf
fmull
dec
jg
iret
pop
ds
call
dec
jae
add
cli
push
stc
dec
mov
lret
push
pop
clc
std
sub
repz
or
in
inc
jbe
lret
insl
push
push
subb
xor
cmp
inc
add
loopne
sub
cmpsb
or
outsl
and
inc
adc
cmp
movsl
add
pop
mov
pop
adc
push
adc
xchg
or
push
int3
out
aam
lret
push
cmpsb
jge
ret
insl
notl
lds
pop
xchg
lcall
int
pop
sbb
adc
or
xchg
jo
jg
popf
xchg
stos
aas
scas
mov
dec
jno
mov
aad
cmp
mov
or
inc
jle
and
pop
cmp
stc
cmc
repnz
pop
inc
inc
sub
frstor
lods
cmp
stos
inc
cwtl
mov
clc
roll
mov
sahf
sti
lods
cltd
mov
cmp
sub
pop
inc
mov
shrb
lret
pusha
fcomps
inc
leave
inc
push
cmp
add
xor
pop
and
cld
loope
inc
cmp
movb
mov
or
mov
pusha
mov
dec
ret
pop
or
lcall
in
inc
lods
aam
mov
dec
cltd
push
das
xorb
inc
sbbb
mov
ficoms
pusha
jno
cmp
test
pop
dec
push
pop
inc
inc
into
inc
nop
lahf
insl
mov
fdivrs
xchg
mov
jae
pop
xor
or
outsb
push
dec
xor
mov
mov
cli
pop
fldenv
popf
mov
xchg
or
xchg
movsl
dec
loopne
cli
push
imul
sub
imul
orl
mov
test
mov
aaa
jecxz
sub
or
mov
int
xor
dec
xchg
clc
scas
dec
pop
add
xor
ja
test
or
imul
cmp
sbb
mov
addb
rclb
push
fisubrl
pop
pop
mov
xchg
xchg
insb
add
push
clc
xor
pop
scas
push
pop
out
dec
dec
cwtl
inc
dec
inc
mov
js
leave
les
push
push
into
pop
mov
subl
out
lods
lret
push
sbb
int
aas
xchg
shlb
dec
sbb
jecxz
outsl
call
mov
adc
out
sub
dec
call
xor
hlt
in
dec
pop
test
iret
mov
fstp
call
cltd
xchg
and
rcl
cmpsb
jle
or
sahf
pop
or
pop
inc
fsts
cmp
jno
push
xchg
pusha
cmpsl
mov
lcall
mov
in
inc
stos
and
leave
fnstsw
fnsave
popa
sub
xorb
jns
cmp
pop
test
adc
or
cmp
xchg
lock
arpl
lcall
shrl
mov
add
daa
bound
sahf
rcrl
push
fs
jle
fwait
lahf
inc
int
call
push
in
mov
inc
push
inc
jl
adc
gs
sarl
cld
fcomip
jb
aaa
cmp
jno
mov
push
push
test
and
sbbl
clc
fidivs
push
pusha
fcmovu
mov
pushl
or
push
pop
push
jno
mov
inc
inc
addr16
sarb
shrl
sbb
pop
into
dec
cmpsb
jge
loopne
ss
in
sub
cmp
faddl
test
jecxz
mov
pop
test
xlat
fildl
loopne
shll
into
xlat
mov
inc
push
or
aaa
rol
cmp
push
push
xor
mov
dec
cmpsb
hlt
rcll
mov
sub
inc
inc
bound
int
xor
dec
int
mov
rorb
mov
xchg
pop
icebp
push
aam
cmpsl
inc
mov
pop
xor
jns
xchg
mov
rcr
jl
shr
lcall
push
adc
rorb
movsb
cmp
cmp
dec
insl
jp
dec
mov
sub
mov
sarb
mov
add
or
cltd
adc
fcmovbe
ret
icebp
dec
push
into
xchg
in
sbb
insb
inc
adcb
dec
inc
jb
pop
and
xchg
int
jns
mov
scas
inc
bound
mov
mov
pop
bound
jnp
fidivrl
les
sbb
enter
pop
mov
cmp
push
insl
add
mov
xor
cmp
dec
sub
ret
inc
or
in
loope
fcoml
mov
jl
les
mov
nop
lds
enter
pop
arpl
cmp
scas
sti
and
int3
mov
mov
or
rclb
and
mov
insb
pop
vmovss
sbb
int3
enter
fwait
mov
add
cwtl
jg
xchg
jns
inc
test
dec
push
sbb
dec
xlat
fcompl
xchg
cmpsl
shl
rolb
inc
mov
stos
mov
mov
and
cmp
cmp
jmp
imulb
push
dec
repz
pop
sbb
pop
iret
lret
fucomi
cltd
addr16
xor
xor
out
pop
nop
jns
enter
dec
je
pop
mov
push
sub
ret
cmpsl
lock
dec
inc
imul
lds
imul
mov
mov
jns
sbb
movsb
dec
push
mov
or
jne
lds
mov
sub
mov
mov
popf
or
sub
int3
cltd
cmpsb
pop
dec
jmp
or
stos
jle
pop
pop
test
inc
pop
dec
push
mov
inc
pop
test
push
cmp
dec
lahf
mov
dec
stc
mov
ret
jp
call
insl
addl
mov
inc
aam
sub
pop
pusha
out
imul
and
adc
mov
fsubrs
cmpsb
aas
sarb
jle
fcmovbe
mov
dec
push
push
sub
push
jbe
inc
lret
fcmovu
lods
jb
and
or
dec
jnp
xlat
mov
jo
or
inc
adc
cmp
jae
jmp
test
fstps
pop
mov
movsb
or
out
cmp
iret
leave
mov
pop
cmpsb
inc
sub
pop
push
bound
xor
fistps
push
jle
sub
icebp
loop
pop
and
jae
jnp
into
and
pop
sub
sub
dec
cwtl
lcall
in
roll
dec
xor
sti
push
sub
or
sbb
repnz
jg
push
add
mov
into
inc
loop
mov
lea
rolb
push
jae
cmp
jg
and
sbb
call
and
xchg
inc
sbb
and
lret
push
push
nop
fisttpl
sti
sub
insl
int3
mov
sahf
and
push
push
or
addr16
aad
test
ret
shr
push
or
push
outsb
cli
jnp
out
data16
jnp
out
inc
in
xor
aas
ds
ljmp
loopne
adc
sbb
sub
pushf
xchg
adc
mov
lods
mov
adc
mov
popf
shrl
sub
lea
xor
in
lret
or
adc
jge
enter
or
daa
push
clc
jmp
or
stos
xorb
insb
push
scas
jge
jg
mov
pop
insl
dec
mov
xchg
rorl
sbb
roll
pop
pop
jnp
inc
call
adc
mov
cmp
pop
lods
push
addr16
or
cmp
sbb
dec
and
push
xlat
notl
fimull
arpl
add
mov
xchg
add
xor
mov
sub
je
mov
dec
adc
mov
pop
mov
or
pop
bound
lock
mov
mov
push
fnsave
inc
cmpsb
loope
ja
push
in
pop
xor
call
inc
iret
add
jnp
mov
sub
jle
test
dec
push
inc
inc
iret
jmp
lahf
ja
push
sbb
add
lahf
pop
outsb
loopne
adc
cs
and
xorb
and
push
cmp
rcrb
or
int
dec
mov
adc
cmpl
test
push
ja
jb
jge
add
add
push
mov
lods
add
repz
or
xor
arpl
lahf
jno
test
mov
mov
and
cmp
jns
jbe
lods
pop
xchg
sbb
xchg
lcall
push
stos
bound
dec
pop
enter
loopne
cmc
insb
es
testl
xor
in
jno
pop
or
inc
or
in
lcall
xchg
and
adc
lret
sti
inc
or
cmpsl
push
rorb
bound
push
and
pop
adc
dec
loopne
fidivrl
insb
lret
or
mov
jnp
push
gs
xor
jmp
jp
or
mov
std
push
std
stos
dec
xchg
sahf
leave
enter
cmp
stc
cmp
or
sbb
adc
mov
cmpl
inc
mov
push
gs
xor
fistps
mov
popa
fwait
call
lods
pop
jns
sahf
outsl
inc
sti
push
mov
xlat
xchg
dec
cli
sarl
xchg
leave
or
pop
sub
jp
cli
sub
mov
xchg
fidivrl
enter
jae
movb
sarl
mov
lahf
arpl
push
int3
cmpsl
pop
xchg
push
dec
push
fstps
add
test
mov
ret
insb
adc
lods
mulb
lahf
mov
aas
loopne
cmp
xor
add
adc
fnstsw
fildll
dec
jnp
outsl
push
clc
cmp
pop
mov
lock
outsl
lock
aam
in
dec
mov
push
shrb
sbb
int
lods
or
adc
mov
mov
adc
pop
int3
jnp
mov
cwtl
jb
push
aaa
add
fnstsw
mov
pop
inc
lcall
push
ret
cmp
into
shll
sbb
push
dec
aas
negb
or
sbb
insb
dec
inc
sbb
ja
xlat
add
outsl
cmpsb
fistpll
xor
mov
mov
jp
or
adc
dec
mov
mov
sub
and
pop
push
lods
lea
xchg
bndstx
movsb
sbb
add
push
stc
sahf
xor
repz
mov
and
lahf
push
sbb
pop
xor
jecxz
pop
push
popa
dec
adc
inc
rorb
bound
stc
insl
mov
mov
cmpsl
in
mov
fs
adc
xor
enter
popl
pop
nop
mov
bound
arpl
mov
mov
mov
cmpsb
in
push
mov
fnstsw
push
dec
out
insl
in
mov
fwait
adc
inc
jo
leave
cmp
insl
roll
push
dec
dec
or
aaa
ficompl
add
xchg
jno
mov
mov
repnz
addr16
cmpsl
stos
mov
xor
push
mov
fimull
pushf
dec
scas
push
xchg
push
xor
pushf
push
cmpsb
repz
cltd
roll
out
sbb
push
xchg
mov
push
aaa
enter
dec
jp
adc
add
bound
les
jle
dec
add
inc
scas
daa
subl
push
shrl
mov
inc
mov
xor
dec
mov
jno
mov
outsb
out
xor
fmulp
in
dec
pop
pop
inc
fsubr
adc
ja
gs
mull
mov
dec
ret
dec
xorb
test
dec
out
popl
int3
xor
mov
fmulp
sbb
bound
dec
fcmovb
repnz
rcr
call
ret
loopne
les
aaa
push
daa
mov
add
test
jb
or
sub
mov
and
push
popa
pop
xchg
lcall
rclb
into
pop
sti
fsubl
ds
pop
mov
popf
add
jecxz
rclb
movsl
aad
sahf
sti
jmp
xor
mov
aam
lods
pushf
or
xchg
inc
inc
in
push
push
fistps
lcall
ret
fisubl
movsl
sahf
xor
sbb
xchg
enter
jl
adc
bound
lahf
ret
or
jl
stc
arpl
push
mov
daa
int3
pop
sahf
pop
xor
out
stc
in
ret
rorb
mov
dec
push
lods
cmp
xlat
xor
jo
fcmovu
sti
mov
xchg
sub
fldcw
hlt
fwait
lret
iret
sbb
xchg
int3
arpl
nop
insb
out
sub
mov
pop
es
push
mov
push
mov
mov
les
pop
sbb
dec
test
fs
dec
or
daa
adc
jmp
sbb
jbe
dec
mov
int3
dec
dec
pop
shrl
mov
loopne
dec
cmp
push
std
ffreep
and
scas
mov
jmp
testb
adc
pop
cmc
arpl
adc
mov
push
lds
and
faddl
inc
inc
in
stos
lods
fidivrl
inc
mov
divl
pop
xor
fcoml
jg
stos
les
xlat
push
mov
sbb
aas
dec
push
cmp
pop
mov
pop
or
jmp
pop
cmp
jo
int3
mov
inc
sub
mov
cmpsb
arpl
push
imul
lock
iret
sbb
pushf
rorl
inc
inc
ja
outsb
jp
jp
mov
iret
mov
ss
jle
xlat
or
mov
xor
and
pop
inc
call
cmp
jecxz
or
idivb
push
cli
mov
fnstsw
dec
pop
test
bswap
inc
test
into
ja
hlt
dec
pop
sahf
icebp
pop
mov
jnp
or
and
fstps
cmp
pop
push
sub
ret
mov
and
mov
and
mov
les
lret
adc
imul
dec
mov
fcom
sub
je
or
jg
mov
lcall
dec
mov
cmp
cs
xchg
push
insb
mov
pop
popf
mov
or
mov
hlt
or
ss
nop
inc
pop
stc
addb
pop
mov
dec
xor
push
insb
xlat
std
xchg
lods
pop
mov
fisttps
jmp
cmp
push
out
pop
pmaxub
fbstp
loope
xor
xchg
subl
lret
jo
or
sbb
dec
and
xor
cltd
jge
es
mov
dec
jl
cmp
add
inc
push
loopne
dec
cmp
push
addr16
cmpsl
pop
pop
xorb
aaa
mov
fldt
cmp
push
jns
xor
sbbb
jle
mov
xchg
pop
loope
stc
loop
or
and
sbb
cmp
inc
aad
mov
lods
mov
nop
mov
dec
xchg
int
hlt
sub
xor
stc
mov
or
xor
pushf
xchg
aad
add
push
sti
outsl
adc
mov
push
int
add
icebp
jmp
ds
rolb
insl
pop
rcl
sub
dec
shr
cmp
and
notb
ret
xchg
push
out
mov
sbb
inc
enter
stc
call
lret
loopne
jnp
push
shll
rcrl
jmp
add
fsubr
out
mov
aam
clc
jle
jne
fnstsw
cmpsb
fiaddl
sarl
mov
in
push
mov
std
in
pushl
mov
inc
lret
lret
mov
cmp
inc
fstl
dec
cmpsb
sub
jecxz
dec
push
cmp
roll
xchg
push
dec
cs
adc
lods
mov
or
bound
pop
ja
or
movsl
inc
adc
xor
adc
xlat
test
lds
xor
movsb
sti
mov
pusha
test
mov
or
xor
sahf
pop
ret
inc
pop
push
jge
xor
cmpsl
aam
add
sahf
das
jb
adc
cmp
cmpsl
lods
lods
jmp
pop
rolb
push
push
loopne
in
stc
stos
aaa
jmp
mov
aam
cmc
add
pop
or
orl
or
and
mov
shl
jmp
and
int
jo
loop
enter
dec
push
iret
dec
push
or
and
cmp
or
ja
inc
or
mov
adc
push
and
push
push
andb
scas
mov
mov
mov
or
fsubrl
lcall
loopne
add
xabort
lret
and
jle
cld
xchg
jl
pop
jmp
sbb
dec
and
nop
inc
call
int
lea
inc
sbb
loopne
xlat
push
pop
mov
in
xor
adc
icebp
out
int
clc
fldt
xor
adc
cmp
mov
loope
shl
cwtl
cmp
or
lods
das
es
leave
inc
push
dec
aaa
rcrl
jle
push
jo
adc
int3
lods
jle
xor
ret
dec
sbb
outsl
lods
inc
add
cld
mov
jle
ror
sbb
jae
dec
lods
gs
pop
lcall
adc
cmpb
insl
ljmp
shll
xor
push
inc
daa
jg
cmp
push
push
stc
pop
js
jp
xor
cmp
mov
inc
mov
insl
out
loop
mov
cli
inc
pusha
mov
hlt
sbb
mov
idivl
es
xor
sbb
pop
jg
push
ja
add
cmp
in
sub
cmc
aas
push
and
insl
insl
shrl
sti
rcll
dec
test
pop
mov
ret
subl
arpl
cld
or
mov
and
cmp
inc
lahf
dec
or
add
dec
inc
dec
test
push
push
cmp
push
jle
subb
data16
mov
cmp
sbb
insb
arpl
mov
ret
inc
or
pop
mov
adc
xchg
pop
mov
pusha
add
and
out
or
gs
push
push
imul
and
fcomps
cmp
pop
push
mov
sbb
stc
xchg
jp
shrl
push
cmp
rcll
jae
and
dec
mov
dec
dec
into
dec
icebp
jg
iret
sbb
cld
idivb
les
cmpsl
pusha
inc
sbb
jp
aas
dec
pop
sbb
mov
lea
pop
dec
fmuls
push
dec
mov
sti
test
dec
jmp
out
inc
stc
hlt
test
mov
shl
cmp
enter
repnz
inc
adc
pop
movsl
scas
push
orl
imulb
and
add
jmp
or
sub
inc
jae
mov
sub
mov
inc
cs
mov
push
xor
adc
dec
dec
cltd
inc
and
in
mov
popf
jmp
push
ds
out
sbbb
push
xchg
push
adc
dec
mov
dec
dec
ljmp
pop
dec
mov
inc
push
fwait
mov
lret
and
inc
xor
push
mov
add
in
inc
pushf
pop
lods
fstpt
int3
sahf
cmp
add
mov
or
ss
xor
loopne
lret
loop
lcall
js
jne
xchg
sub
jmp
test
sub
outsb
pop
sub
mov
dec
popf
pop
cmp
js
test
mov
mov
xorl
test
popa
jecxz
jecxz
mov
cmc
jae
xor
pushf
rcll
cmp
pop
into
dec
lock
pop
jmp
cmp
decl
cmp
sub
addr16
or
fnstcw
push
cli
add
loop
nop
leave
xor
pop
jns
jecxz
rorl
rolb
dec
push
dec
pop
lea
add
pop
enter
add
negb
mov
adc
sti
xor
adc
jmp
cmp
or
dec
and
push
ret
xor
mov
test
lret
inc
push
add
mov
push
inc
mov
je
push
or
lret
xchg
clc
pop
adc
enter
pop
shlb
das
hlt
inc
push
pop
or
lds
fwait
ss
in
xchg
and
hlt
push
dec
movsl
rol
clc
bound
mov
jne
pop
pushf
pop
push
cmp
sub
pop
dec
mov
aad
dec
inc
dec
sahf
cli
test
lods
shrb
movsb
mov
shrl
mov
dec
cmp
adc
cmp
int3
sub
push
fstpl
sub
pusha
and
sub
and
add
int3
adc
xorb
imul
cmp
clc
cmpb
inc
sub
lods
ja
add
inc
push
stc
jns
das
pop
cltd
xchg
or
pop
pop
inc
cmp
mov
lret
mov
stc
mov
mov
mov
scas
orb
or
loop
mov
and
sub
and
push
sti
loope
cld
xor
mov
jno
lret
test
andb
ret
xchg
mov
jle
fistl
lea
daa
cli
dec
add
imul
sub
arpl
pop
ret
movsb
repz
or
xchg
mov
or
out
xchg
les
xchg
xchg
lret
fisttpll
and
loopne
pop
pushf
ret
jbe
fstpt
mov
or
ret
out
xor
lret
push
fistps
adc
adc
shlb
imul
lret
rcrb
inc
mov
pop
std
jle
and
and
daa
ja
adc
cmpsl
pmaddwd
cld
call
mov
andb
push
popf
lock
scas
jnp
out
sub
daa
test
clc
in
testl
rcll
aaa
sbb
lahf
dec
adc
cmp
loopne
aad
mov
stc
int3
xor
cmp
inc
insl
icebp
iret
sbbb
sbb
push
ja
xor
and
inc
inc
pop
insl
sbb
or
adc
jmp
dec
iret
jl
call
mov
or
inc
push
sub
inc
std
fadd
jnp
movsl
cmc
or
sbb
and
sbb
stos
cmp
xor
jl
mov
sub
ret
mov
adc
cwtl
sub
push
xchg
cmp
roll
xor
xchg
movsb
enter
inc
and
repz
push
mov
mov
aaa
add
inc
and
addb
fstpl
lea
aaa
addb
inc
test
jnp
orl
xor
cmp
jnp
push
push
inc
subb
sbb
push
inc
cmpsb
pop
mov
sti
insb
aaa
dec
lret
scas
mov
aam
cmp
pop
rol
and
sbbb
fadds
pop
testb
inc
mov
dec
mov
mov
fiaddl
jne
and
test
push
adc
add
cmp
out
test
adc
fs
push
pop
xor
dec
jecxz
pop
inc
pop
insl
mov
mov
fs
ja
sub
sbb
dec
or
cmp
push
shll
adc
fsin
sub
xchg
int
xor
into
pop
cmp
test
dec
das
add
roll
rcrb
loop
add
sub
in
inc
in
sbb
bound
fimull
shl
dec
inc
pop
or
dec
sahf
pop
xor
adc
mov
sub
lcall
pop
mov
mov
shrl
imul
mov
sbb
mov
addl
inc
add
adc
add
mov
lea
push
shlb
push
pop
sub
ljmp
test
scas
call
pushf
mov
and
push
dec
mov
push
jnp
and
lock
and
pop
mov
adc
out
jp
scas
xor
insl
pop
cmpsl
cmp
test
repnz
hlt
dec
xchg
xchg
mov
push
daa
ret
push
mov
xor
sub
popa
dec
mov
ja
ror
fsubs
inc
notb
push
cmpsb
test
jle
das
rcrl
push
dec
mov
push
mov
push
cmp
inc
push
cmp
incb
ret
mov
aad
out
insl
xor
into
insl
mov
ljmp
push
sbbb
pop
inc
push
shll
movsb
movsl
pop
aas
lods
mov
adc
sub
dec
push
dec
push
stc
leave
xchg
clc
jb
mov
dec
andb
addr16
jecxz
into
popf
or
push
cmp
ljmp
scas
push
test
cmpsb
push
pop
gs
scas
mov
mov
xlat
je
mov
ds
mov
mov
jle
stos
or
jns
ja
sub
push
pop
adc
jecxz
cmp
sub
adc
clc
inc
subb
scas
out
mov
in
sbb
xchg
dec
lret
cli
mov
cmc
xlat
pusha
into
xor
int
mov
pop
fcmovnu
stos
or
xorl
and
or
aad
push
cwtl
test
adcl
enter
and
adc
cmp
out
mov
stc
leave
jp
mov
adc
fldcw
mov
push
mov
xlat
ja
push
sub
push
sub
add
outsb
mov
xor
repnz
jle
insb
adc
inc
pop
xchg
mov
sbb
outsb
or
inc
cmpsl
rcrl
pop
inc
addr16
jo
adc
cmp
stc
lods
xchg
push
test
pop
lret
ret
pop
lods
xchg
pop
mov
and
sbb
fmul
imul
pop
jmp
jecxz
es
mov
mov
inc
cmp
and
mov
and
mov
cmp
xchg
dec
repz
jmp
hlt
test
mov
jmp
dec
push
push
lods
test
xchg
and
mov
sbb
int3
in
add
or
push
xor
and
scas
dec
ds
inc
imul
das
push
xchg
pop
fcompl
xchg
jnp
cs
push
addl
aam
mov
pop
ja
bound
pop
xchg
test
and
rcrb
arpl
jmp
xchg
push
sub
dec
lds
shlb
push
outsl
ds
lea
jmp
jno
dec
aaa
loopne
mov
adc
and
jl
jbe
push
cmp
cwtl
loop
push
lcall
and
rorb
out
sbb
enter
or
scas
cmp
sbb
lds
push
cltd
jne
sub
mov
out
loope
rorb
mov
repnz
xchg
lret
xor
mov
push
inc
out
imul
inc
stos
jl
push
pop
imul
push
dec
push
inc
xorl
mov
mov
fwait
ret
dec
jnp
enter
cmpsl
adc
jp
in
adc
in
out
out
enter
cmpsl
rorl
and
sub
xor
in
daa
jp
fisubl
pop
dec
push
push
sbb
inc
call
and
mov
mov
das
ss
jns
inc
std
add
mov
cmpsl
jp
dec
call
mov
pop
jbe
sahf
push
pushf
push
mov
in
inc
jbe
and
ja
imul
xor
test
cltd
fists
iret
ja,pn
repz
out
repnz
jb
in
aam
xor
mov
jnp
cmp
cwtl
mov
inc
inc
pop
cmp
icebp
rolb
add
push
xchg
imul
add
popa
mov
push
lcall
cmp
cmp
outsl
jo
in
loop
mov
dec
mov
std
in
xor
mov
mov
push
hlt
lock
adc
insl
adc
sub
jmp
ja
paddb
repnz
in
pop
dec
mov
push
pop
xchg
mov
mov
rcll
pop
std
insb
ret
inc
xchg
sarb
adc
call
and
push
inc
stos
pusha
aam
leave
test
clc
sbb
lret
pop
fs
push
add
push
or
mov
fidivrs
pop
sub
cmp
xor
pop
cmp
push
jae
and
add
insb
add
fsubrp
mov
je
and
xor
push
imulb
sarl
cmp
mov
lods
push
out
push
fnstenv
jmp
pop
fwait
imul
inc
dec
xor
sub
or
xchg
cmp
add
out
mov
mov
xor
dec
inc
call
push
pusha
pop
std
stos
or
cmp
movsb
xchg
loop
xor
pop
sbb
push
test
sti
aam
xor
test
imulb
addl
inc
jecxz
insb
jns
pop
push
push
insl
dec
sub
mov
adc
mov
mov
clc
cmpsl
adc
jne
inc
loopne
pop
pop
sbb
inc
or
lods
icebp
negl
int3
mov
sub
pop
je
dec
add
mov
or
arpl
fnsave
lcall
inc
xchg
je
mov
sbb
dec
inc
ljmp
mov
jnp
leave
mov
pop
mov
js
push
adc
ret
leave
xor
out
cmp
rcr
lock
pop
inc
push
add
sub
test
in
lret
mov
in
or
lahf
add
xor
dec
pusha
mov
pop
dec
incb
jb
and
clc
aam
sub
xor
pop
in
loop
inc
add
shrb
mov
test
mov
stos
rep
dec
cmp
inc
dec
dec
mov
lcall
xorl
pop
dec
jae
stos
mov
stc
pusha
cmp
xchg
mov
fistpl
xchg
aad
add
pop
cmc
fs
pop
xor
jae
mov
or
jnp
adc
and
jae
shrl
inc
push
imul
push
or
bnd
cld
pusha
fwait
imul
cmpsl
xor
pop
cmp
xchg
mov
scas
push
rol
pop
test
lret
inc
add
sub
mov
in
inc
push
pop
scas
xchg
fs
or
pop
test
test
rorb
push
in
add
ret
xchg
jne
dec
mov
or
aas
pop
fdivs
ret
cmpsb
lret
jb
cmp
sahf
stos
movsb
mov
mov
hlt
test
xor
enter
movsl
pop
and
xor
cmp
push
sbb
or
sbb
adc
inc
push
insl
mov
bound
xchg
and
push
mov
lods
test
or
push
test
test
xchg
into
xchg
test
sahf
push
inc
inc
jno
dec
rcrl
dec
ret
push
das
sub
mov
aam
dec
sbb
dec
in
pop
fisubrl
notb
insb
add
data16
mov
daa
inc
sbb
stos
inc
sahf
xor
push
jge
add
jne
pushf
aad
imul
int3
jmp
mov
cmpsb
es
push
andl
mov
shrb
jp
test
inc
mov
sub
dec
cmp
sbb
andl
into
fistpl
movsb
mov
ret
test
cmp
add
icebp
mov
xchg
subl
sahf
push
mov
pop
mov
sub
mov
int3
and
ljmp
out
punpckldq
arpl
xor
inc
aam
ret
dec
sbb
mov
cwtl
push
xchg
mov
cltd
xor
mov
xchg
lret
or
sti
dec
inc
or
inc
andb
subb
inc
testb
xchg
xchg
fcompl
push
addr16
mov
insb
or
adc
inc
adc
sbb
clc
sti
aaa
aad
bound
mov
iret
or
test
fimuls
dec
and
dec
bound
movsl
cmp
xor
pop
jns
xchg
xor
outsl
cmpsb
mov
push
addr16
mov
sub
ja
cld
je
ret
stos
push
or
sub
aad
mov
inc
test
push
js
mov
call
inc
rcrb
xchg
subb
and
std
jecxz
aaa
pop
cld
pop
pushf
dec
ljmp
lods
out
cmp
enter
lea
push
push
or
mov
lods
sbb
test
add
jmp
sub
jecxz
pop
xorb
fwait
jbe
ss
inc
add
test
hlt
call
addb
xchg
sub
xor
add
in
mov
sub
inc
xchg
jns
movsl
dec
xor
ja
out
loope
push
stos
subb
xchg
fsubl
jmp
pop
inc
dec
mov
in
sarb
xor
pusha
arpl
leave
or
enter
nop
popl
or
std
mov
or
je
test
ret
dec
add
push
in
mov
adc
clc
movsl
call
xor
cmp
jne
aas
pop
cmp
sbb
pusha
add
and
cmc
int3
dec
sbb
add
fcmovnbe
mov
lds
lcall
sahf
pop
jecxz
jns
stos
lds
lds
int
mov
mov
nop
call
adc
pop
adc
xorb
outsl
int
mov
lea
sbb
xchg
mov
out
mov
lahf
ss
lods
push
mov
movsb
mov
dec
dec
inc
call
cmp
push
jbe
imul
mov
push
call
push
cmp
jne
add
push
cmp
stc
xchg
pop
cmp
jo
es
into
add
nop
sbb
pop
push
lods
mov
push
push
mov
mov
mov
sub
add
dec
bound
jle
jne
inc
push
mov
sahf
outsl
shlb
pop
inc
into
mov
cmp
pusha
sub
fwait
add
mov
push
mov
mov
fwait
add
xor
mov
mov
mov
out
jae
mov
inc
sub
test
pop
cmpb
sub
rclb
iret
push
clc
imul
insl
mov
mov
lods
imul
dec
mov
ficomps
cmp
mov
push
push
dec
inc
jbe
fmul
pop
psubsb
inc
mov
mov
int3
fiaddl
xor
mov
loope
sbb
xor
leave
jle
jl
xor
mov
sbb
or
les
fidivs
adc
mov
rolb
dec
mov
inc
pop
mov
dec
fmuls
pushf
mov
into
imul
cmp
push
push
aaa
fmuls
in
repz
sub
sbb
je
bound
inc
mov
pop
mov
mov
lods
hlt
push
sub
popa
mov
andb
out
mov
dec
add
and
ja
lret
add
mov
jmp
mov
dec
in
lahf
xchg
cmpsl
or
popa
loopne
add
bound
pushl
lcall
ss
jae
jno
jnp
xchg
ss
lcall
sbb
push
xlat
cmp
push
pop
cmp
push
add
aaa
adc
das
stc
mov
lods
xor
dec
loopne
int3
inc
sub
lahf
incb
sub
jbe
pop
hlt
adc
adc
dec
inc
mov
nop
ljmp
addr16
inc
mov
cwtl
in
lods
push
not
adc
fwait
aaa
mov
push
dec
push
rolb
mov
jno
incb
push
das
push
bound
sub
adc
sbb
fistl
sub
jno
push
fwait
repnz
add
pop
mov
incl
mov
push
jno
popa
mov
test
xor
or
arpl
roll
mov
dec
push
or
xor
dec
push
aad
pop
daa
inc
pop
out
insb
dec
mov
adc
sub
add
cmp
push
ror
lret
inc
push
add
imul
cmp
sbb
je
mov
addr16
lret
dec
aam
fnstsw
inc
pop
imull
xor
xchg
add
cmc
gs
adc
ds
fstps
sub
leave
push
cld
jecxz
sub
and
cwtl
sub
or
and
cmp
jb
or
lods
lret
addr16
testb
add
lds
mov
cmp
cmc
dec
sbbb
loopne
enter
mov
sbbb
fld
push
cmpsl
jle
push
cmp
dec
lods
in
lahf
push
mov
cmpb
stos
inc
mov
icebp
mov
in
jne
aad
add
jb
pop
xchg
pop
insl
sbb
in
and
repnz
xchg
fbstp
mov
push
push
clc
push
adc
adcl
push
movsb
jg
sub
bound
je
inc
inc
enter
icebp
xchg
adc
stos
mov
jle
in
inc
add
sub
and
mov
inc
sub
inc
lea
ffree
dec
adc
dec
imul
je
add
shlb
lret
dec
imul
sub
rolb
in
sahf
lret
cmpsl
mov
lock
mov
lods
pop
or
or
ficomps
inc
sub
clc
stc
inc
push
fsubs
mov
imulb
icebp
xor
mov
inc
push
jno
mov
and
jnp
adc
nop
sub
fnsave
pop
sbb
mov
addb
xor
jnp
test
ja
and
inc
dec
xor
imul
loop
sub
sbb
cmp
arpl
dec
jecxz
or
push
cmp
stos
arpl
in
mov
sbb
ja
jecxz
xchg
dec
pushf
or
xchg
pop
inc
lock
xor
lds
subb
cli
ds
jae
or
enter
popf
mov
leave
rcrl
sti
cmp
sbb
xor
into
fnstsw
out
lea
jle
push
addr16
inc
flds
imul
push
and
add
decb
xchg
jb
in
cmp
jb
adc
ja
xor
cltd
stos
jno
mov
rorl
adc
ljmp
ljmp
ret
loopne
in
cmp
aad
jmp
ret
jle
dec
sbbl
cs
rolb
scas
data16
sub
jns
jmp
sbbb
pop
ljmp
mov
icebp
js
sbb
mov
push
xlat
inc
fucomi
xor
adc
mov
cmp
or
adc
fs
stos
cld
test
cmc
out
or
ja
add
mov
adc
mov
ret
mov
je
mov
push
test
inc
cli
cmc
mov
inc
adc
jle
fsubr
or
aaa
sub
cmp
inc
cli
dec
into
dec
sub
mov
fbstp
or
jbe
lret
jp
popa
add
roll
adc
inc
add
sub
push
pop
lcall
xor
mov
mov
xchg
adc
push
in
into
popf
mov
jecxz
cmp
and
cs
insl
ficomps
jmp
rorb
lret
sub
mov
fidivrs
outsb
mov
and
sub
jg
into
mov
jp
aaa
xchg
add
add
daa
add
mov
dec
inc
shlb
jge
jae
jnp
mov
or
add
add
adc
out
mov
ret
pop
aad
enter
jg
aaa
adc
rcl
cmp
push
jl
int3
das
and
adc
test
sahf
mov
push
adc
cmp
mov
test
outsl
popa
fnstenv
mov
pop
jmp
pop
sub
insb
test
or
das
inc
jmp
jno
push
sbb
in
iret
push
loopne
sub
xor
sub
sub
std
hlt
pop
jecxz
mov
fstpl
fildll
jb
pop
int
sti
pop
pop
mov
mov
push
xor
xor
mov
add
jle
xchg
sbb
cmp
call
aaa
xor
xor
fst
jge
js
push
mov
dec
int
mov
inc
push
lods
ss
push
and
mov
sbb
inc
pushf
imul
mov
shr
fldcw
pop
inc
push
jb
xor
mov
ds
jge
in
sub
pop
jle
mov
inc
loop
inc
scas
sub
mov
loope
jmp
lcall
and
int
cmp
enter
test
or
mov
inc
mov
mov
mov
sahf
jp
call
lock
addr16
adc
sub
dec
test
aas
pop
xchg
sbb
pop
pop
pop
fsubr
mov
cvtpi2ps
dec
movsb
mov
imul
fstpt
and
mov
push
mov
andb
add
int
mov
lds
pop
fisubrl
jo
nop
push
inc
lods
push
clc
mov
inc
add
dec
inc
pop
imul
xor
mov
jae
pop
sub
sbb
fists
and
ja
nop
sbb
mov
pop
jno
jl
adc
ret
lods
ja
subb
rcll
imul
test
daa
repnz
cmp
push
pop
cmp
cwtl
mov
pop
lock
mov
shr
jns
out
cmp
mov
push
cmp
or
inc
sub
push
jg
popf
sahf
out
cmc
jae
dec
repz
sub
jne
push
pop
imul
jmp
std
enter
sahf
pop
dec
add
mov
xchg
mov
pop
or
xchg
into
pop
addl
mov
cli
lret
pop
mov
sub
adc
cmp
es
aam
or
cmp
push
mov
int3
mov
sbb
jmp
mov
jg
hlt
jnp
jbe
xchg
push
add
xchg
int
not
jne
loopne
adc
test
enter
cs
sub
adc
ja
sub
clc
jbe
jg
jp
ljmp
and
xor
sub
movsl
mov
jae
pop
push
pop
nop
push
pop
dec
pop
jecxz
push
ss
add
fwait
pop
std
lds
loop
xor
push
test
xchg
inc
jns
adc
loop
and
out
scas
push
es
mov
sub
testb
or
and
call
jae
xchg
mov
push
rorb
pop
shrl
xor
inc
imul
pop
je
iret
cmp
movsl
xor
nop
bound
ror
out
aaa
lahf
dec
fwait
or
daa
aam
sub
imul
arpl
pushf
repz
lods
or
shrl
mov
popf
xor
mov
mov
addr16
lods
add
xchg
sbb
cmp
adc
das
lret
xchg
inc
push
pop
popa
add
jmp
or
pop
out
arpl
jbe
es
ror
jmp
adc
mov
es
sub
pop
lea
inc
fs
lcall
add
xchg
pop
pusha
popa
and
in
jg
xor
mov
sysret
into
cmpsb
dec
xchg
xor
scas
xlat
xchg
adc
push
sahf
idivl
xor
bound
mov
jbe
filds
jo
mov
jge
or
in
jnp
pop
fldenv
dec
mov
in
or
pop
add
mov
js
mov
ds
jle
fs
inc
scas
cmpsl
sahf
loop
test
imul
sar
and
cltd
mov
roll
call
lahf
sbb
xor
mov
xor
lea
pop
lds
rolb
push
pop
out
xor
lods
and
iret
add
cmpsb
arpl
or
inc
sbb
mov
pop
adc
mov
sbb
and
lods
ret
hlt
insb
mov
inc
mov
adc
mov
mov
test
arpl
jge
cmp
into
jbe
xor
and
pop
jp
insb
push
movsb
pop
inc
lcall
mov
shrl
lea
inc
pop
xchg
dec
insb
ja
movsl
inc
pop
loopne
icebp
mov
rcrb
xlat
xchg
and
ja
addb
iret
repz
mov
fwait
pop
sub
mov
ljmp
or
mov
adc
fimull
jecxz
mov
push
ss
clc
jnp
xor
sbb
cwtl
fcoms
cmpsb
call
pusha
int3
jle
aam
pusha
pop
aam
xor
lds
movsl
sbb
mov
outsl
jmp
jecxz
leave
lods
inc
aaa
pop
incl
sub
and
dec
sahf
icebp
pop
pop
xor
push
xor
push
fdivl
arpl
mov
in
adc
fnstenv
jl
jecxz
ret
das
data16
push
popa
mov
sti
mov
cmp
lret
das
pushf
imul
push
sahf
sub
pop
add
mov
xlat
lods
into
pop
and
bound
jbe
jne
push
imull
loope
xor
or
add
arpl
jae
je
xor
stos
rorl
jb
jp
lahf
pop
jl
nop
fwait
xchg
inc
sbb
les
lret
add
popf
push
ret
fwait
jge
mov
push
pop
inc
rorb
sub
xor
stc
pop
push
or
stos
jl
rorl
enter
popa
mov
inc
repz
sub
mov
dec
dec
sbb
pop
jecxz
mov
inc
adc
lock
jg
sbb
or
in
out
ficoms
cmp
and
lahf
push
imul
pusha
mov
mov
mov
fcomi
sahf
shr
xorl
or
mov
add
jo
xchg
mov
sub
inc
js
arpl
xorb
movsl
hlt
inc
movsb
stc
insb
sub
push
icebp
xor
fmull
mov
fidivs
sbb
dec
loope
jg
dec
jle
jne
roll
or
das
jns
loop
std
xchg
loop
call
xor
cmpb
pop
adc
pop
outsl
sub
pop
rcl
mov
mov
dec
lds
dec
imul
stc
jmp
jno
cmp
in
push
movsl
dec
gs
fdivr
pop
fisttps
jbe
mov
dec
pop
lret
push
sbb
lods
dec
mov
mov
pop
in
adc
or
sub
mov
pop
outsb
push
push
push
test
push
mov
stos
mov
xchg
lahf
adc
jmp
mov
ret
fdivl
addr16
pop
dec
add
pop
jle
dec
in
cli
cmc
lock
or
jmp
and
out
icebp
xchg
inc
lods
dec
add
cmp
fcmovnb
push
stos
nop
addl
adc
dec
add
sub
test
dec
dec
es
arpl
xor
pusha
ja
adc
add
pushl
aam
lahf
dec
and
and
fdivrl
mov
adc
jno
cmp
pop
pop
fwait
xchg
pop
dec
cwtl
adc
dec
and
inc
mov
das
xor
outsb
pop
cmp
cmpsl
jle
mov
sub
push
pop
mov
dec
mov
sahf
push
stos
out
fmull
cmp
test
fisttpll
cmp
rorl
push
and
cmpsl
mov
dec
push
test
ficomps
jp
ret
pushf
insl
jno
mov
lods
arpl
orb
push
mov
dec
inc
cld
fcoms
or
add
into
lcall
push
push
push
dec
inc
roll
sub
pop
enter
into
aas
test
or
andl
pop
pushf
push
aad
sahf
in
mov
dec
cmp
jp
movsl
fsts
imul
pop
mov
call
adc
xor
xchg
jbe
push
decl
lods
mov
imul
movsl
cli
ficomps
dec
dec
and
sbb
leave
repz
icebp
hlt
dec
dec
cs
adc
inc
in
add
pop
int
movb
imul
dec
sbb
pushf
add
xchg
scas
in
out
pop
pop
sub
dec
sub
dec
outsb
iret
mov
popf
sbbb
dec
xor
jmp
sub
adc
sbbl
dec
les
mov
mov
loopne
cltd
inc
lret
or
outsb
jne
cs
jecxz
sbb
add
dec
sbbb
cmp
testl
dec
imul
xlat
jno
dec
mov
repz
decl
das
mov
les
ds
mov
push
pop
dec
pop
dec
cmp
popa
and
adc
cmp
bound
rol
imul
nop
or
push
add
pop
insl
inc
test
mov
imul
int
fdivp
mov
jmp
fs
jge
in
outsl
jmp
pop
inc
dec
stc
mov
int
sub
pop
pop
loop
jle
or
push
sub
lds
dec
pop
shrl
loopne
mov
cmc
outsb
dec
repz
pop
dec
mov
test
scas
sub
jno
lret
and
xchg
mov
sub
out
sti
outsb
sarb
mov
sbb
ret
das
and
xor
mov
popa
jp
mov
mov
in
out
movsl
aaa
xchg
fucomip
push
mov
pop
xchg
aad
dec
pushf
mov
cmp
addb
jg
gs
pop
mov
ja
andl
xlat
sbb
aad
adc
punpcklwd
push
add
aad
mov
mov
pop
dec
push
jmp
xchg
inc
les
insb
push
stos
repnz
push
add
rorb
push
cmpl
mov
nop
jg
and
popa
insb
lods
das
cmp
vmovss
sub
lret
sbb
and
popa
dec
push
mov
sbb
js
popf
add
je
mov
data16
cld
mov
enter
and
mov
test
dec
pushf
sub
sbbb
pop
xchg
jmp
dec
cmp
xor
cli
pusha
loop
addr16
sub
scas
jne
mov
dec
xchg
cli
mov
jnp
jmp
scas
pop
outsl
xlat
jle
decb
enter
push
mov
sarb
adc
mov
mov
je
jae
dec
mov
repnz
subl
sti
mov
cmp
imul
dec
cltd
adc
xchg
ja
mov
ds
mov
dec
inc
sbb
cmpsl
mov
mov
sub
movsl
mov
ror
ret
xchg
pop
lret
int3
push
push
dec
mov
cld
xor
jbe
std
test
mov
pop
dec
roll
movsl
sub
loopne
dec
xchg
cmp
rol
sbb
add
sbb
lock
pop
cli
ljmp
stos
xchg
inc
xchg
out
add
test
ja
jo
sbb
call
mov
pop
in
std
pop
push
dec
inc
push
push
sub
pop
push
in
mov
inc
or
dec
ret
jmp
inc
and
lock
repnz
pop
sbb
dec
dec
insb
cmpsl
fmull
add
jo
inc
out
jns
mov
into
cmp
js
or
out
dec
xor
mov
dec
fcmovnbe
enter
mov
dec
insl
sbb
jecxz
push
repnz
or
dec
inc
mov
add
adc
loope
jbe
mov
ja
lods
dec
into
mov
mov
nop
push
or
pop
cmovg
cmp
push
adc
fwait
xor
inc
mov
jns
dec
addr16
pop
push
mov
xchg
jecxz
mov
add
push
sub
sub
push
xchg
movsl
loop
sti
aaa
dec
lret
pusha
adc
dec
sbb
mov
dec
jo
push
mov
cmp
cmp
rorl
lods
mov
dec
adc
hlt
mov
jne
pop
pop
xor
push
out
lret
mov
jns
arpl
xor
mov
test
mov
mov
sub
xchg
adcb
cld
sti
dec
fcom
sbb
xor
bound
dec
rorb
cmpsb
xchg
dec
daa
cwtl
mov
cs
dec
jo
mov
sahf
sub
imul
sub
push
pop
nop
pop
les
dec
cwtl
pop
dec
mov
movsl
icebp
sub
push
fsubrp
inc
dec
aaa
cltd
dec
popl
sbbb
mov
add
hlt
stc
and
pop
addr16
bound
imul
dec
or
leave
push
scas
pop
inc
lret
pop
xlat
or
and
movsl
add
clc
cltd
lret
nop
lahf
jl
dec
mov
dec
inc
mov
gs
out
jb
imul
cmp
outsl
cs
pop
pop
push
sub
insl
xor
mov
lock
jne
ljmp
fistpll
mov
inc
jno
dec
aad
xchg
aam
clts
mov
sbb
lret
xchg
dec
inc
sbbl
dec
or
push
fimull
push
outsb
daa
xor
dec
out
dec
cmp
xor
mul
or
pop
add
iret
mov
data16
std
jle
push
adc
or
pop
mov
and
loopne
test
out
pop
sbb
mov
pop
dec
sub
cs
xor
ret
fnstenv
dec
mov
pop
or
mov
test
dec
pop
ficoml
lds
scas
jne
sbb
outsb
jns
dec
and
shlb
sti
js
and
dec
add
mov
dec
es
movsb
test
jecxz
cmpsb
addr16
push
mov
inc
movb
push
push
pop
sbb
imul
push
add
rolb
leave
xor
sbb
sub
cmp
add
lock
insl
jecxz
ret
aaa
ss
inc
jl
ljmp
mov
ljmp
push
jns
dec
imul
loopne
mov
fs
push
aam
jns
js
bound
inc
dec
mov
push
arpl
in
lret
adc
lods
xchg
jbe
or
clc
cmpsl
xor
jmp
sub
mov
cmpsb
xor
pop
lock
pop
roll
idivb
jg
dec
jns
inc
inc
adc
jl
cmovnp
mov
fisubl
leave
fnstsw
and
or
call
ss
sbb
jle
inc
mov
mov
aam
fnsave
mov
xorl
inc
je
sbbl
jnp
in
arpl
jecxz
cmp
sub
gs
bound
lret
ja
cmc
lret
and
stos
dec
sub
adc
sub
aad
stc
xor
enter
std
lea
pop
aas
lods
push
mov
test
mov
ds
sbbb
jle
push
mov
mov
rcrl
mov
push
dec
pop
bound
xlat
mov
cmc
add
push
cmp
push
lods
pop
lods
xchg
mov
push
fwait
push
cmpsl
dec
dec
pop
jecxz
fwait
push
in
lcall
mov
in
int3
xor
stc
or
bnd
push
out
loope
hlt
gs
dec
inc
in
cmpsb
movsb
mov
ret
bound
lret
negl
and
lock
adc
inc
pop
dec
inc
jecxz
rolb
jle
add
pop
subl
in
loopne
lret
cmpsl
sbb
ret
adc
cs
xor
push
cmc
or
fwait
rcrl
jbe
bound
ret
and
fildll
jecxz
cmc
push
inc
and
xor
cs
sub
and
inc
xor
add
or
sbb
aas
sub
into
jl
shlb
and
mov
pop
mov
test
or
sbb
ficoml
mov
lahf
subb
pop
shlb
mov
dec
and
outsb
aam
xchg
pop
rcll
enter
sarb
cmpsb
push
popa
jp
pop
js
and
xchg
roll
pop
cltd
je
jg
mov
aam
inc
das
mov
sbb
clc
cli
in
lds
mov
outsl
cmp
add
jle
test
sub
loopne
ret
in
iret
inc
rcr
cli
pop
vpavgw
fiaddl
and
bound
mov
mov
or
and
pop
push
jl
sub
xchg
sahf
push
cs
xchg
cmpsl
jne
pop
mov
ffreep
xor
loop
mov
sbb
data16
mov
or
repnz
test
dec
add
push
neg
mov
idivl
and
or
pusha
push
or
xchg
adc
pop
pop
mov
cmp
shr
xor
or
pop
pop
pop
sti
inc
in
pop
ljmp
loopne
or
push
rcll
into
sub
dec
jl
jne
xchg
cmp
sub
aad
test
or
lret
sahf
inc
mov
cmp
jle
in
sub
push
sub
jmp
jnp
cmp
inc
leave
shlb
test
pop
sub
test
lods
and
add
xchg
jle
sbbl
push
in
in
shrl
push
cmp
fincstp
mov
lds
mov
sub
or
loopne
mov
shlb
leave
inc
sub
mov
sbb
movsb
leave
mov
test
cmc
mov
xor
jge
cmpsl
sbb
dec
hlt
push
jno
xor
ljmp
push
add
jno
mov
push
push
outsb
inc
mov
push
push
scas
push
pop
imul
push
dec
cld
mov
insl
inc
orb
cmc
pop
aaa
pop
jp
cltd
mov
xchg
in
cmp
repnz
adc
push
push
mov
jo
mov
test
test
push
dec
mov
xchg
sub
jbe
sub
mov
mov
pop
pop
and
repz
adc
cmpsl
add
sub
shrl
fld
jle
repz
or
idivb
test
lret
jnp
sbb
scas
pop
pop
jp
testl
mov
jg
mov
jns
mov
dec
aam
stc
icebp
push
dec
bound
pop
scas
cmc
outsb
aam
cmp
insb
ret
sbb
sub
dec
pop
sub
and
mov
addr16
lods
cltd
lock
xchg
add
int
xorl
inc
jmp
jnp
jle
std
add
pop
jl
or
dec
scas
mov
adc
mull
add
clc
jo
sbb
cmpsl
aad
dec
inc
test
pop
pushf
insl
shl
mov
cld
xchg
xor
std
adc
test
mov
insl
imull
wrmsr
inc
cmpsl
out
cltd
push
jmp
aad
xlat
mov
insl
pop
xor
inc
jmp
sub
rcrl
push
mov
push
xchg
or
in
dec
pop
jb
insb
and
dec
push
xor
push
std
or
mov
test
xor
inc
mov
das
js
push
lds
lods
imul
inc
popa
inc
mov
sbb
xor
scas
in
pop
pop
inc
movaps
ljmp
jle
test
cmp
push
push
sub
test
xchg
shll
inc
lret
add
out
xor
or
mov
inc
xor
icebp
and
pop
cmp
xchg
popf
jl
or
xor
ret
and
cmc
pop
pop
imull
popa
ret
lret
jmp
fisubrl
fcompl
push
pusha
jmp
mov
xchg
imul
mov
mov
xor
insb
sahf
push
jbe
push
ss
adc
call
lret
jmp
iret
fsubl
and
or
mov
pop
lcall
xor
sbb
xchg
pushf
rcrl
lret
pop
fildl
sub
fwait
lahf
int3
push
repnz
fstpt
sbb
dec
or
push
jbe
mov
mov
outsl
inc
test
fdivrs
xor
add
xor
and
rorb
out
shrl
mov
loop
cmpsl
test
and
cmp
push
shll
dec
xor
lret
dec
xchg
loope
cmp
ret
jp
cltd
dec
pop
push
arpl
inc
mov
fsts
das
jp
enter
jns
mov
insl
mov
mov
mov
xor
push
sub
imul
fisubl
sti
inc
pop
lahf
xor
inc
ds
pop
sarl
imul
out
xorl
subb
mov
lahf
fists
jmp
leave
fnstenv
movsl
mov
popf
sahf
clc
pop
xchg
jmp
sbb
push
xor
mov
lcall
in
aam
and
and
push
pop
pop
inc
pop
mov
adc
and
sub
cs
adc
or
push
mov
mov
pop
push
or
xor
pushl
mov
xchg
or
sbb
or
inc
sub
rorb
call
out
sub
jmp
inc
xor
mov
mov
xchg
dec
xor
jmp
xor
pop
int3
sarb
pop
enter
je
mov
insl
push
rcrl
or
add
pusha
adc
mov
push
and
insl
negl
dec
or
pop
mov
sub
rolb
ljmp
aad
add
fidivrs
cmp
in
cmp
and
cmp
outsb
addl
xor
test
je
not
xor
xchg
xor
push
pop
xchg
lret
pusha
and
dec
xor
adc
sub
mov
js
lcall
or
cmpb
pushl
inc
repnz
add
jno
cltd
loop
lods
mov
xor
stc
pop
xor
aad
call
cmp
xor
sahf
xor
jae
sbb
add
call
dec
or
dec
jl
inc
rolb
push
loop
cmp
aam
pop
cmpsb
aam
dec
pop
aad
addb
in
and
dec
aaa
leave
insl
fisubl
imul
or
popf
fwait
clc
inc
fcmovb
adc
or
pop
and
or
xor
inc
mov
add
sbb
cmp
incb
es
movsb
and
test
enter
imul
fnstenv
cld
cltd
push
sub
jge
xchg
adc
pop
sub
jno
fs
push
fdivs
dec
cmp
rcr
pop
mov
ds
mov
mov
mov
stos
dec
inc
mov
xlat
mov
dec
call
add
popa
xchg
add
dec
push
inc
sbb
push
out
adc
sbb
jl
movsb
sbbb
jnp
mov
cld
mov
xchg
pop
inc
push
mov
xchg
dec
or
pop
stc
fwait
nop
pop
mov
pop
test
test
xchg
mov
dec
fcompl
jl
push
inc
mov
cmc
dec
inc
add
in
sub
xor
push
adc
daa
imul
xor
mov
add
or
jl
and
xor
xor
dec
daa
inc
je
pop
lock
jbe
add
jmp
sbb
xor
bound
push
push
pop
add
or
adc
dec
mov
jb
xchg
mov
orb
mov
xchg
and
lcall
inc
mov
aaa
clc
mov
xchg
lret
cld
cmp
inc
scas
into
cmpsb
mov
hlt
fsubrs
in
nop
ret
pop
bound
push
jnp
jbe
sbb
test
or
jo
dec
xchg
lods
inc
mov
mov
mov
push
mov
das
mov
lock
xor
add
pop
ret
pusha
cld
inc
aam
icebp
sbb
jnp
dec
sbb
clc
xor
jge
sub
mov
sbb
mov
inc
movsl
add
pop
inc
and
add
test
add
enter
ss
mov
rorb
dec
jecxz
mov
dec
cld
ffreep
cmp
in
sbb
out
xor
push
test
and
xchg
int3
xadd
repnz
repz
and
adcl
push
push
push
push
mov
dec
mov
dec
sbb
test
push
es
push
lods
das
sub
cmp
inc
fsts
flds
inc
daa
or
cltd
leave
aam
shll
loope
in
mov
push
cmpsb
daa
cli
or
fisubs
imul
inc
xor
ja
adc
mov
sti
push
mov
push
dec
dec
test
sti
lods
in
pop
mov
adc
sub
and
std
inc
dec
insl
xor
insl
loop
call
andb
mov
xor
fwait
inc
dec
hlt
mov
mov
pop
push
pop
out
xor
addb
cmp
jp
int
fists
stos
icebp
push
mov
es
les
mov
in
sub
cmp
imul
fwait
sarb
call
cmpsl
sub
xchg
push
ret
aam
inc
outsb
xor
sbb
push
js
icebp
push
and
adc
sub
push
and
or
xor
daa
std
jg
aas
bound
std
jae
add
add
cwtl
outsl
mov
add
push
bound
jmp
or
cmp
jns
sahf
test
mov
testb
pop
loope
push
or
mov
sub
lret
stc
mov
jl
xchg
lahf
adc
mov
int
push
leave
jge
or
insl
lret
dec
dec
shrb
mov
mov
or
xor
arpl
xchg
mov
mov
adc
inc
daa
add
sarl
icebp
je
mov
add
mov
les
repz
mov
xchg
cmp
fistl
cmp
and
xchg
push
insb
push
mov
inc
xchg
cmp
bound
inc
pop
sub
add
jp
add
jb
cltd
xor
jle
out
imul
pop
sbb
int3
addr16
fisubs
idivl
das
xchg
mov
fnstenv
les
mov
daa
sub
or
dec
decb
mov
lcall
out
gs
push
fcomps
popf
pop
cmpsl
xchg
call
sub
aam
sbb
dec
dec
inc
or
dec
and
jl
bound
jecxz
mov
call
xchg
fisubl
ficompl
insb
filds
and
call
jns
inc
mov
out
cmp
xor
adc
pop
popa
sub
lods
sub
movsl
cmp
xchg
inc
std
pop
std
inc
lahf
repnz
jmp
mov
sub
ja
out
mov
xchg
cmc
or
and
push
pop
inc
inc
nop
rol
scas
mov
lret
push
push
bound
int3
push
dec
lods
cmp
xchg
loopne
fucomi
push
xchg
inc
dec
inc
loop
sub
xlat
dec
dec
jbe
jbe
pop
in
pop
aaa
mov
cli
adc
ret
xchg
pop
incb
loop
into
in
mov
punpckhbw
mov
fcoml
dec
aad
pusha
outsl
mov
adc
and
dec
or
pop
fcompl
sbb
add
loop
jge
xchg
jcxz,pt
leave
xor
int
clc
pop
lret
xchg
push
jmp
js
leave
and
pop
sbb
cwtl
pop
add
loopne
inc
or
pop
sbb
jmp
mov
sub
mov
cmp
mov
ret
xor
jmp
mov
xchg
dec
inc
push
sbb
lods
lea
pop
notl
xor
lahf
jae
jne
xchg
cmp
loopne
ss
bound
dec
mov
fisttps
mov
jnp
mov
xor
aam
fs
jle
and
filds
mov
push
adc
dec
jae
pop
test
mov
decb
test
repz
pushf
adc
out
mov
loope
mov
imul
rcl
mov
inc
jmp
pop
mov
loopne
pop
cli
loope
jns
testl
add
lahf
push
shlb
pop
push
pop
pop
pop
inc
insb
jle
out
leave
xor
mov
shrl
leave
mov
or
stc
jl
movsl
or
pop
sti
and
xor
hlt
sbb
sub
push
xor
les
jo
pop
push
shrl
test
ja,pn
jg
sub
rorl
cld
clc
xor
sub
cltd
dec
repnz
addb
pop
jns
xchg
xchg
sub
je
sbbl
push
mov
mov
test
cmp
inc
jle
mov
popa
push
and
stc
xchg
data16
mov
push
pop
jb
int3
or
cwtl
pusha
jle
shll
mov
enter
aad
pop
xor
jmp
and
aam
lcall
rol
and
push
lea
in
loop
inc
loop
pop
aaa
out
bound
add
dec
data16
jb
out
in
dec
in
pop
cmp
ja
inc
jl
mov
jp
or
aam
fstpl
stos
and
cmp
stos
or
xchg
fwait
inc
sub
shlb
shr
mov
dec
roll
gs
pop
int3
scas
mov
mov
ds
xor
shlb
scas
pop
jl
xchg
inc
mov
pop
add
fistl
sahf
loopne
enter
mov
outsb
or
jg
inc
cmp
scas
test
in
xchg
and
int
faddl
mov
cmp
jae
imul
pop
add
push
insl
adc
inc
in
dec
mov
jnp
sti
repz
lret
mov
into
add
fbstp
push
enter
jb,pn
dec
jmp
fmulp
sub
push
fiaddl
scas
out
add
aas
inc
adc
jmp
mov
in
cmp
insb
pusha
fisubl
scas
add
loop
lods
pop
push
mov
leave
xor
mov
inc
iret
mulb
pop
inc
pop
add
adc
cmp
out
push
push
cmp
inc
jmp
mov
in
mov
pop
xchg
inc
and
and
std
fwait
imul
dec
jae
sbb
mov
mov
je
fs
mov
in
jecxz
mov
mov
xchg
fsub
data16
push
mov
dec
fstpt
icebp
or
xor
mov
cmpsb
loopne
xchg
mov
test
ljmp
test
or
int3
xor
dec
xchg
inc
mov
or
repnz
adc
cmpsl
adc
push
fisubrl
and
mov
pusha
push
enter
mov
mov
sbb
adc
cmp
lea
add
adc
dec
out
and
push
mov
ja
pop
mov
out
enter
insl
sub
cmpl
imul
xor
dec
es
add
aas
inc
pop
mov
in
enter
push
lods
out
cmp
pop
cmp
and
lret
call
std
mov
inc
xchg
push
mov
fbld
dec
nop
mov
lea
mov
xchg
call
add
fstpt
lret
jle
cltd
mov
sbb
cs
jo
iret
inc
lret
mov
popa
hlt
call
call
sbb
sbb
dec
inc
ljmp
push
xor
and
push
fsubrl
imul
xchg
iret
xor
sbb
lret
fstpl
cmpsb
lods
pop
jmp
inc
leave
movsl
mov
jg
sub
jns
dec
dec
push
testl
and
inc
inc
mov
push
push
sub
mov
lret
fucomi
movsl
call
jmp
call
cld
mov
inc
add
push
dec
jmp
lret
ret
sti
sbb
jo
dec
sbb
xor
loopne
test
out
in
pop
pusha
or
jb
pushf
data16
cmp
jmp
bound
out
out
xor
sarb
imul
fmuls
xor
inc
arpl
and
sub
movsb
dec
pop
fwait
test
int
jbe
adc
jl
mov
adc
sbb
bound
sub
adc
pop
inc
inc
push
insl
fstl
jo
mov
fwait
sub
in
xor
inc
xor
daa
dec
or
mov
sbb
lret
and
fisttpll
dec
add
pop
fsubl
sbb
negb
leave
mov
mov
xchg
add
sub
testb
adc
aad
jb
mov
ds
cmp
xchg
fcomi
shlb
mov
sbb
add
mov
insl
jns
jns
ds
xor
leave
jg
loop
call
pop
jnp
mov
scas
push
aad
call
ret
stos
mov
mov
nop
enter
icebp
xor
xor
inc
jl
sbb
addl
mov
jmp
daa
bound
loopne
xorl
mov
push
jecxz
cmpsl
push
or
dec
das
or
roll
lds
fwait
xlat
xor
dec
mov
cmp
dec
dec
mov
or
add
gs
call
mov
push
dec
int3
jmp
lods
add
and
lea
jp
dec
shr
call
mov
je
sbbl
pop
dec
xchg
push
lods
mov
sbb
pop
lods
dec
mov
leave
enter
imul
sbb
push
mov
inc
adc
testl
ret
xor
pop
lahf
sbb
pslld
clc
leave
push
in
sub
lods
inc
arpl
jmp
cmp
push
xor
mov
outsl
sub
std
inc
sub
pop
sbb
iret
mov
xchg
jl
push
out
cmp
sub
push
xor
in
stos
jns
mov
or
loopne
xchg
popa
cltd
fwait
mov
inc
xrelease
insl
in
fiadds
add
cli
pop
add
jg
dec
xchg
push
test
sub
sbb
adc
mov
loop
or
push
bound
insl
rorl
add
adc
sbb
sbb
push
mov
lea
aam
or
pushf
cmp
pop
int3
mov
mov
scas
in
cmp
insl
fistps
inc
sub
sub
add
filds
out
hlt
or
xchg
ds
add
cmpsl
ret
insl
inc
mov
sub
std
sbb
or
dec
push
sbb
cmp
lea
iret
loop
gs
fsubr
or
fdivrs
leave
into
test
jl
loopne
mov
scas
shrl
mov
inc
mov
xchg
mov
sub
mov
mov
xchg
push
addr16
inc
dec
sbb
lds
sub
pop
into
push
aad
inc
cmp
push
jnp
or
cmp
lods
bound
inc
and
es
sub
cmp
std
int
inc
jmp
pop
inc
mov
cwtl
push
adc
pop
mov
push
xor
pop
ret
repz
or
aam
sub
scas
call
pop
jae
inc
mov
xor
push
incb
xchg
jb
pop
pop
test
test
pop
lahf
cmpsb
jno
mov
and
sarl
popf
dec
cmp
mov
or
cmp
ja
xor
mov
insl
insb
mov
xor
je
enter
pop
mov
jnp
cmp
repnz
rclb
stos
sub
enter
sub
add
insb
mov
push
mov
adc
dec
jp
inc
xchg
arpl
inc
pop
xchg
les
mov
pushf
xlat
loop
das
je
xlat
jge
dec
dec
jmp
repnz
mov
pop
add
pop
and
or
fmuls
sbb
pop
xchg
xchg
clc
sub
pop
scas
mov
sub
in
das
mov
ja
mov
imul
jmp
jl
in
xchg
xor
inc
xchg
incb
push
inc
xchg
das
rorl
mov
jb
push
xchg
or
lds
loopne
notb
mov
mov
fisttps
mov
dec
pop
rol
inc
and
aas
pop
or
cmp
mov
inc
outsl
mov
xor
push
pop
cmpb
in
aad
icebp
jne
shr
dec
je
add
jns
lret
int
and
testb
scas
mov
sub
into
add
daa
jp
mov
inc
shll
insl
xchg
dec
sarb
loopne
push
add
xchg
movl
mov
negl
stc
xchg
sbb
dec
xor
jnp
in
mov
xchg
and
fdivr
jnp
mov
daa
mov
sbb
cwtl
es
sub
arpl
daa
lods
ret
and
pop
pushf
mov
js
shlb
ss
aaa
repnz
imul
sbb
out
shll
clc
ret
negb
adc
push
inc
out
pop
mov
dec
fdivs
pushw
test
lods
push
fldl2e
jbe
loop
inc
mov
cmp
in
loope
int
cli
xchg
jl
decl
mov
fs
sbb
mov
shll
test
dec
and
test
mov
or
sahf
or
imul
adc
in
leave
push
pop
push
jecxz
sahf
ret
mov
lea
mov
int3
mov
pop
xchg
mov
adc
xchg
sub
jb
xchg
mov
xchg
daa
ja
ficompl
insb
icebp
inc
data16
insb
ljmp
call
inc
push
call
ret
sahf
mov
cmp
pop
sbb
ficompl
or
sbb
mov
in
pop
ret
jl
or
pop
cs
or
cmp
add
mov
js
jle
mov
sbb
push
push
pop
in
cmp
xor
cmp
xchg
into
xchg
repz
ss
cmpsl
aaa
xchg
jl
aad
lock
outsb
dec
dec
pusha
scas
jle
push
out
sarl
pop
pop
repz
fcompl
pop
dec
inc
enter
sub
lods
or
lods
nop
sub
inc
push
fmul
mov
lods
mov
mov
orb
mov
cmp
dec
xor
ss
mov
xor
xor
mov
ds
addb
mov
inc
in
shrl
adc
enter
xchg
adc
mov
sub
and
cmp
int
mov
adc
inc
pop
bound
mov
dec
or
mov
adc
dec
or
lds
pop
xor
dec
push
bound
push
pop
mov
or
or
lret
arpl
lahf
lods
xchg
xor
xor
jnp
es
cmc
inc
mov
outsb
ljmp
imul
xor
aaa
iret
clc
add
inc
xor
sbb
int3
adc
in
jo
dec
mov
sbb
stos
dec
fwait
push
inc
loope
xchg
sub
aam
cmp
or
aas
aam
sbb
xor
pop
sbb
cmpsb
cmpb
and
fcoml
fbstp
ret
fsts
inc
les
idivl
mov
jecxz
pop
push
fwait
ret
sub
mov
push
jle
sahf
mov
enter
decl
push
mov
push
out
mov
jnp
outsl
mov
mov
push
repz
orb
cmp
add
mov
into
rorb
and
and
dec
cld
xor
imul
roll
push
test
rcr
int
or
ds
mov
cld
lahf
push
inc
jbe
fisubrl
and
loope
pop
pushf
cmp
or
jmp
pushf
mov
jbe
es
idivl
pop
jnp,pt
adc
inc
cmpsb
idivl
push
or
xchg
pop
sbbb
aad
or
call
mov
jmp
lods
sub
mov
inc
or
nop
jge
and
aas
dec
push
sub
inc
jle
sbbb
lret
push
in
sub
inc
mov
or
negl
jle
jns
jne
enter
mov
jg
insl
pop
sub
shll
jle
push
cmp
cmp
and
negl
sub
aad
mov
int3
mov
aaa
mov
cmpl
pop
dec
dec
push
repnz
sub
sbb
popa
or
outsb
and
push
mov
std
jmp
jns
stos
push
movsl
mov
push
rcrw
cmp
insb
ja
aam
nop
loopne
dec
inc
inc
mov
shr
cmp
mov
lea
or
cld
jecxz
pushf
add
mov
pop
mov
leave
inc
and
movsl
push
iret
dec
jp
mov
lea
lcall
push
jnp
inc
stos
jo
fdivrs
mov
fildl
aam
push
cld
lods
arpl
ja
and
pop
jle
adc
mov
lods
push
or
jbe
fimull
or
ss
fsts
pop
adc
mov
mov
std
or
and
pop
sub
shl
and
mov
lret
leave
push
icebp
rorb
xchg
cmc
movsb
daa
subb
jo
push
sub
mov
inc
xchg
insl
and
movsl
pop
and
dec
mov
insl
mov
jmp
push
hlt
or
fcompl
adcl
pushf
aam
sbb
pop
or
repnz
xchg
loope
jns
push
cwtl
lret
xchg
jae
sub
push
mov
or
pop
xor
mov
mov
pushf
and
cli
or
cmp
sbb
addb
inc
test
sbb
push
dec
inc
mov
or
jmp
sub
scas
or
dec
aad
ss
mov
sub
mov
or
pop
push
inc
xchg
jo
and
fldcw
ss
pop
mov
insb
push
stc
lret
leave
scas
outsl
mov
ret
arpl
push
adc
test
in
mov
pop
out
dec
repz
in
jle
loopne
pop
sub
sub
je
push
lcall
sbb
faddl
mov
scas
jmp
push
push
adc
jbe
or
std
lods
bound
dec
adc
pop
sub
mov
cltd
rcl
sub
sub
mov
pusha
hlt
mov
adc
pop
add
dec
or
jge
bound
push
lret
or
dec
pushf
pop
mov
mov
test
test
lahf
xchg
cltd
mov
or
pushf
sub
cmp
inc
adc
gs
addl
or
jmp
cmp
adc
sub
dec
movsb
jbe
out
mov
in
insb
adc
insb
ret
loopne
cmpsl
pop
add
aas
out
addb
xor
pop
aam
dec
pop
sti
pop
inc
dec
call
pop
outsl
lret
pop
dec
insl
clc
xchg
dec
lds
jns
sbb
imul
stos
dec
jp
bound
pop
push
inc
push
add
imul
cmpsl
inc
rol
rorl
pusha
push
insl
cmpsb
sub
dec
mov
les
loope
pop
cmp
js
es
jmp
cmp
fstpl
fisubrs
sti
sbb
leave
jl
xchg
lcall
out
and
add
xor
cltd
pop
xor
out
nop
or
lods
xchg
loopne
arpl
xchg
mov
arpl
iret
inc
leave
rcrl
xchg
loopne
xchg
rcl
inc
jno
mov
xor
inc
push
mov
scas
adc
add
imul
jp
xchg
nop
pop
bound
push
pop
mov
mov
out
ret
pop
lock
lea
jle
out
adc
add
pinsrw
dec
loop
cld
and
cmpsl
into
pop
mov
call
ja
dec
mov
mov
xor
rolb
lea
xor
std
mov
iret
mov
pushf
enter
les
dec
add
xor
pop
test
dec
mov
inc
imul
stc
push
xor
jp
repnz
fwait
stc
jmp
rolb
sub
addr16
and
insb
mov
loopne
mov
enter
xor
sbb
jno
push
xchg
adc
mov
or
jo
ficoml
rorl
in
cmp
sbb
aaa
in
xchg
addr16
testb
xor
in
adc
inc
mov
jnp
mov
and
imul
push
or
sub
aam
cmp
sarl
sbb
loop
mov
push
sbb
xchg
jbe
lret
push
sbb
adc
mov
sbb
xchg
add
out
inc
pop
dec
inc
pushf
daa
push
fs
adc
jle
lahf
leave
sbb
jp
dec
cmpsl
cld
mov
shrb
rclb
out
loopne
dec
sbb
push
fadds
sahf
pop
mov
push
cmpsb
sbb
sub
mov
iret
repz
sbb
notb
or
scas
push
popf
movl
testl
pop
lods
pop
mov
xchg
fwait
popa
or
adc
add
std
mov
dec
add
mov
sbbl
fisubrl
lcall
mov
fwait
or
xchg
push
add
push
lds
or
jp
pop
sbb
dec
push
popf
shrb
pop
mov
js
insl
mov
cmp
dec
pushf
pop
jae
dec
jp
inc
mov
sub
cld
shlb
and
jmp
mov
mov
lea
xchg
cwtl
add
mull
push
pop
inc
mov
push
inc
sbb
pop
into
xor
and
loopne
fbstp
dec
or
mov
fildl
inc
mov
adc
orb
pop
and
sbb
and
mov
xor
dec
jae
mov
xchg
add
mov
insw
adc
adc
and
xor
sarb
daa
repz
inc
lods
sub
push
fsin
mov
and
push
push
ficoml
fstl
cld
pop
xchg
popl
and
loopne
cmp
insb
sarl
pushf
pop
xchg
sti
vpaddd
lcall
sub
lods
pop
and
jecxz
lea
jbe
movsb
int
aas
pop
stos
cmp
mov
pop
jmp
mov
dec
push
sub
addb
dec
je
insb
lods
lahf
lret
xchg
mov
dec
test
or
inc
pop
cwtl
jnp
inc
andb
leave
adc
pop
dec
push
imul
xchg
xchg
fdivs
call
stos
pop
repnz
leave
lahf
sbb
dec
je
push
push
pop
sti
add
cmp
push
lods
jl
das
fcoml
cltd
decl
add
sub
jle
bound
xor
add
pushf
cmc
leave
or
cmc
icebp
scas
popf
sbb
rorl
cwtl
push
imul
out
test
jg
pop
into
mov
fisubrl
cmp
mov
das
inc
pop
push
dec
outsb
push
mov
in
fcomps
push
xchg
mov
lds
push
shl
fwait
push
sub
pop
pop
pusha
adc
ja
mov
push
ret
je
in
movsb
mov
pop
cmp
es
mov
pop
lds
dec
imul
push
pop
das
jb
xchg
push
jbe
sti
pop
and
or
sbb
gs
mov
js
push
cmp
mov
dec
psllq
cmp
sbb
mov
clc
jle
insb
add
inc
inc
add
lods
xchg
inc
xor
add
mov
in
dec
mov
mov
mov
mov
cld
sbb
pop
aad
adc
mov
test
sub
jp
nop
aaa
rolb
scas
pushf
and
or
jno
fimull
push
iret
mov
xchg
xchg
inc
pusha
jle
xorb
popa
or
dec
inc
fwait
cmp
fwait
mov
stos
lcall
xchg
jnp
rolb
bound
push
inc
cmpb
loope
subb
lods
inc
into
fwait
loop
mov
popw
into
sub
or
xchg
or
jmp
or
jle
cmc
and
inc
push
mov
and
xor
and
cmp
out
cmp
or
cmpsl
test
cmpsb
sbb
sbb
jae
push
pop
les
adc
add
push
not
enter
push
xchg
insl
mov
mov
sbb
pop
shll
jg
shlb
hlt
fsubs
inc
sbb
dec
lahf
arpl
gs
mov
sub
mov
or
cmp
nop
xor
jb
or
pop
int3
mov
sahf
xchg
mov
lock
add
mov
push
mov
push
mov
pop
mov
mov
stc
dec
pushf
cmp
lcall
pop
cwtl
insl
pop
xor
fcomip
cmp
mov
movsl
ljmp
lahf
fisttps
xor
into
adcb
jmp
mov
and
jmp
lods
ret
stc
xor
xor
stc
inc
shlb
cmp
push
pop
jbe
rclb
pop
das
mov
jns
push
in
test
fsubs
arpl
push
lret
sbb
sbb
outsl
jmp
pushf
jmp
mov
push
jnp
fwait
mov
sub
insb
mov
adc
push
mov
fld
sub
es
dec
je
and
pop
lock
outsb
mov
mov
jns
mov
ss
or
sub
mov
cmpsl
dec
lahf
xor
inc
movswl
sbb
repz
sub
sbbb
rorb
bound
cwtl
repz
dec
arpl
std
mov
pop
jge
cmovo
add
int3
push
or
pop
pop
orb
push
mov
or
mov
lods
sbb
sti
addr16
sub
jg
push
jge
xor
jle
push
movsl
push
outsl
mov
sbb
cmp
jl
clc
jmp
mov
leave
lea
stos
ret
cmp
adc
xor
jo
das
es
inc
movsb
jle
inc
xchg
push
adc
xor
mov
inc
out
xorb
jmp
imul
fiaddl
mov
xlat
inc
xchg
push
iret
inc
call
adcl
dec
leave
fidivrl
sbb
or
mov
rcr
sahf
jo
jnp
shrb
push
jl
ss
into
inc
cmpsb
mov
mov
mov
push
pop
cmc
pop
into
pusha
aaa
sbb
jne
scas
icebp
nop
dec
add
dec
loop
pop
lret
sarl
mov
sub
int
dec
dec
inc
lods
and
xor
gs
andl
icebp
inc
jle
loop
dec
mov
lods
scas
enter
fxch
xchg
loope
cmp
in
out
cltd
loope
cmp
mov
push
pushf
push
fstpt
mov
mov
jl
int
sub
les
dec
adc
lods
add
xchg
test
into
xlat
imul
lods
jno
sbb
ljmp
xor
xor
push
outsb
and
test
cmpsb
pop
dec
flds
push
push
jle
lods
pop
loope
push
xor
mov
stc
aam
das
jns
clc
jle
mov
jnp
mov
jnp
dec
sbb
xor
loope
mov
or
xchg
loopne
nop
jno
sub
xchg
dec
or
hlt
push
js
add
jecxz
pop
jnp
dec
cmp
stc
or
jns
mov
adc
pusha
mov
sbb
stos
pusha
xchg
push
push
push
pushf
ficomps
pop
cmp
push
cmpsb
pop
cmpsl
dec
jno
out
outsb
mov
and
sub
jp
sub
xor
ss
xor
sub
xorl
mov
pop
dec
dec
mov
in
and
inc
sub
inc
and
shl
push
cmp
xor
dec
fldenv
inc
cld
imul
add
and
adc
je
dec
shr
enter
ja
cmp
cmc
xchg
das
mov
dec
cmp
inc
fildll
pop
sahf
cld
jp
xor
pop
sub
aas
nop
nop
out
fimuls
jle
fidivl
shl
ret
adc
lods
movsb
and
inc
fisubrl
repnz
sbb
mov
or
ds
pop
mov
popf
iret
pop
jl
push
mov
shlb
inc
int3
push
jg
or
push
or
xor
jmp
mov
icebp
ficoms
gs
aad
pop
cmp
xchg
and
xchg
add
jns
jae
fldl
jae
sub
dec
movsl
and
inc
lds
arpl
jge
push
jne
ja,pn
iret
test
mov
sbb
mov
push
stos
cmpsl
jl
fwait
mov
movsb
rcrb
dec
lcall
inc
inc
pop
dec
rcrl
jno
cltd
pop
dec
mov
cmp
dec
stc
xchg
lds
dec
inc
push
int3
pop
dec
fcoms
mov
mov
push
or
daa
push
inc
pop
lahf
dec
adc
fstl
scas
flds
dec
fwait
or
push
inc
xchg
jae
xchg
out
add
xchg
push
lret
sub
jmp
enter
inc
loope
mov
jecxz
adc
movsb
dec
add
sbb
push
push
cmc
popa
pop
push
lods
out
sub
out
mov
push
int3
xchg
dec
add
enter
jge
inc
ficoml
adc
sub
jmp
jmp
inc
in
push
xor
sbb
lahf
jl
ljmp
ret
and
xor
jnp
outsl
sub
daa
cmpsl
aam
inc
dec
sbb
adc
xlat
mov
mov
xor
mov
out
outsb
or
or
lret
jne
jecxz
sub
and
sub
push
inc
dec
jge
push
mov
pop
ja
rorl
dec
cltd
push
push
jae
xchg
call
cmp
arpl
aam
dec
adc
call
inc
dec
jl
popa
outsl
mov
add
pop
leave
dec
or
rcl
mov
push
mov
add
insb
mov
popa
repnz
aas
mov
enter
push
cmp
mov
xor
sbb
fisttpll
xchg
xchg
adcb
mov
sbb
pop
add
in
and
mov
push
jg
sub
push
arpl
lahf
or
adc
jae
push
mov
shlb
popf
ret
int3
inc
lods
push
sahf
ret
sbbb
sub
push
icebp
inc
push
push
xor
out
arpl
inc
pop
push
mov
scas
push
or
flds
cmpsl
cmpl
clc
cmpsl
inc
stc
mov
call
push
jge
sbb
add
mov
push
adcb
pop
hlt
pusha
sub
xor
inc
sahf
out
bound
xor
rep
roll
pop
xor
lock
or
pop
cmp
call
out
jb
xor
adc
push
testl
cmp
div
test
cmpsb
pop
insb
sahf
sti
stos
shll
push
xlat
ret
mov
jmp
dec
jae
mov
aaa
pusha
add
out
dec
and
mov
mov
aaa
popf
sub
xor
out
inc
jnp
hlt
or
pop
mov
push
sub
adc
ja
xor
vmovshdup
xor
mov
mov
loop
test
dec
inc
sub
movl
iret
sbb
sub
pop
sub
outsl
xor
je
pop
rcr
jg
pop
iret
mov
xchg
xchg
ds
shll
push
sub
adc
and
out
push
ljmp
push
mov
dec
and
sbbb
pop
push
xchg
xchg
inc
mov
cmpsl
xchg
lods
jno
dec
xor
test
cmp
add
pop
out
jmp
pop
sub
push
arpl
fcmovnb
push
mov
insl
retw
mov
dec
xor
sbb
shl
test
mov
out
inc
movsb
and
and
or
mov
jnp
cmp
bound
popl
ret
fldt
mov
cmpb
fdivrs
or
push
cwtl
sub
sub
sbb
lahf
sub
sbb
out
loopne
cmp
daa
or
call
add
mov
xchg
cmpsb
es
lret
fsts
adc
push
pop
lods
popf
shrl
loop
ja
sbb
xbegin
dec
les
lea
repnz
xor
or
inc
mov
xchg
rcll
sub
sub
xor
mov
cli
push
imul
inc
loope
add
inc
lods
lods
jnp
ja
mov
rcl
xchg
clc
ss
js
shl
sbb
loopne
and
popa
dec
sbb
xor
leave
pop
out
mov
ds
mov
inc
sar
sbb
or
xchg
pop
les
bound
mov
hlt
fidivs
pop
fildll
adc
cmpsl
add
dec
sbbb
cli
lret
xor
shll
cltd
dec
or
jns
shrl
inc
lock
push
cmp
test
mov
pop
jle
xchg
lods
jbe
xchg
jmp
in
pop
jp
sbb
sbb
aas
push
dec
push
sbb
sti
sbb
xchg
out
sbb
mov
fidivl
sub
sub
enter
pop
mov
jae
lds
int
lods
add
and
mov
or
xor
movsl
pop
roll
scas
sub
cltd
sub
push
lods
sub
push
or
and
inc
out
jmp
je
jmp
imul
lret
loopne
adc
cmpsb
mov
inc
push
jae
xchg
movb
ret
imul
outsl
pushl
addl
imul
mov
jae
jecxz
jp
daa
jns
cmc
push
inc
aad
push
sub
out
push
add
cmp
add
jo
jb
enter
js
or
dec
push
push
out
clc
mov
shrl
std
xor
hlt
or
hlt
leave
sbb
push
lea
js
test
jl
mov
inc
and
aad
aad
pop
add
mov
sbb
mov
jp
adc
mov
addr16
ret
xor
pop
aad
dec
mov
and
add
aad
pop
inc
cmc
xchg
mov
in
pop
cmpsl
and
test
mov
sub
push
imul
push
pushf
inc
mov
leave
xchg
lods
cmp
jge
leave
dec
adc
lods
enter
lock
add
lret
leave
mov
insb
adc
out
clc
aad
and
testb
mov
mov
jl
mov
push
mov
sarl
ret
pop
push
mov
jmp
mov
adc
lds
int3
and
movsl
std
dec
dec
jns
shll
dec
sahf
int
loopne
push
push
loope
iret
pop
shl
mov
pop
lahf
xor
push
aaa
add
cmpsb
jg
shrb
out
and
pop
xlat
inc
out
xchg
and
iret
xlat
xor
pusha
stos
xlat
xchg
jo
aas
or
push
mov
push
out
mov
push
pop
mov
aam
dec
dec
pop
jne
add
fidivrl
and
push
movsl
nop
addb
or
mov
pop
nop
leave
aad
test
xor
popf
scas
lds
inc
push
xchg
push
mov
cmp
push
dec
jle
xor
push
lock
adc
into
movsb
jne
push
daa
jle
shr
rcrb
test
mov
xorl
jg
mov
xorb
subl
aad
push
and
aaa
cmp
push
mov
push
or
ljmp
push
xor
mov
loop
lcall
loop
sub
ret
inc
sbb
xor
out
mov
push
or
sub
repz
adc
int3
mov
add
out
xor
push
jecxz
xchg
adc
inc
sbb
adc
adc
sahf
pop
inc
cmp
rcrb
test
mov
lret
sub
cmc
add
out
or
jnp
sahf
mov
dec
aaa
inc
push
mov
scas
sbb
roll
xor
adcl
push
pop
cmc
imul
push
lods
pop
cmpsb
push
insb
or
aad
mov
pop
adc
mov
cmp
jno
fucomp
fiaddl
or
shrb
cmp
or
xlat
xchg
jle
in
adc
ret
sub
in
add
cmpsb
cmpsb
into
movsl
jl
jle
inc
xor
popl
adc
jo
adc
enter
ficomps
jle
outsb
lahf
dec
sub
test
popf
push
pusha
or
fwait
add
or
sbb
jns
sub
les
adc
add
rclb
repnz
fldenv
ss
cmpsb
shlb
sub
in
iret
jnp
xchg
scas
inc
jbe
cmpsl
mov
or
arpl
jmp
push
cltd
xor
pop
inc
inc
push
cld
mov
sbb
cmp
xchg
mov
adc
mov
cmp
leave
fiaddl
xchg
incb
mov
xchg
insl
pop
mov
pop
adc
arpl
in
pop
jnp
pop
sub
loope
add
incb
sahf
push
ja
push
fisubs
jg
dec
inc
inc
lods
push
jbe
mov
mov
shr
mov
sub
ror
xorb
push
inc
xchg
iret
outsl
jp
cli
into
push
pop
loope
mov
adc
jbe
pushl
add
cmpsl
nop
js
cmp
jmp
jle
cwtl
dec
or
or
int
mov
inc
shlb
call
pop
mov
mov
pop
sub
rcpps
clc
int
push
outsl
lds
add
cld
mov
scas
xchg
mov
insb
dec
jbe
push
out
aas
mov
inc
and
or
stos
outsl
dec
add
xor
mov
loopne
xchg
push
jnp
push
es
add
mov
fisttpll
test
jns
cmp
faddp
clc
enter
mov
mov
jl
das
fstpl
repz
xor
stos
sub
push
test
ljmp
in
xchg
or
test
stos
or
mov
xor
mov
pop
or
cs
insl
fstp
sbb
mov
cltd
push
dec
inc
cmp
cmc
sti
cmc
jge
pop
mov
mov
mov
lods
push
cld
push
dec
inc
sarl
or
lret
dec
enter
jmp
or
mov
push
xor
adcb
fwait
loopne
ret
mov
es
dec
pop
sub
pusha
imul
dec
jg
popa
les
xor
xor
inc
call
xlat
flds
dec
rorl
out
loopne
add
inc
sahf
mov
or
cmp
testl
mov
aad
out
dec
sbb
or
adc
std
sbb
mov
xor
mov
lods
mov
sbb
push
outsl
in
decl
scas
insl
cwtl
add
sbb
push
push
out
adc
sbb
pop
jle
cmc
fmul
aam
add
mov
lret
cmp
in
repnz
data16
mov
xor
xor
mov
or
or
xchg
pop
cltd
mov
sbb
pop
jmp
ret
pop
pop
aam
ljmp
idiv
scas
insl
sub
es
jp
mov
lret
jbe
test
dec
jns
dec
mov
lods
lea
or
pop
into
cmp
or
xor
jne
loop
fcoml
in
ret
adc
fildll
pop
add
push
ret
pop
loopne
rolb
mov
push
movsb
mov
mov
mov
pop
je
shlb
sahf
jo
sub
cmp
mov
fsts
bound
jg
in
mov
inc
call
push
xor
mov
repz
in
shlb
mov
mov
fcomps
sarb
mov
imul
dec
or
aaa
loope
icebp
lret
ja
inc
insl
xor
andl
adc
adc
add
mov
mov
pop
fcmovbe
xchg
pop
clc
sub
cmpsl
sub
ret
add
mov
enter
out
sahf
aaa
mov
std
xor
out
test
mov
xor
out
aam
sti
or
cwtl
incb
add
lods
pop
cmp
push
and
std
movsb
inc
mov
outsb
add
sbb
lods
lods
sbb
push
jge
xchg
loope
cmp
call
xor
mov
mov
mov
push
faddl
push
xlat
scas
test
je
cmp
clc
pop
leave
rcl
out
mov
add
or
pop
stos
pop
mov
pop
adc
mov
sbb
xor
xor
mov
jle
sub
dec
mov
adcb
popf
jmp
fcoms
sub
mov
push
xor
pop
shrb
dec
push
popf
pusha
shll
add
es
loopne
js
adc
mov
outsb
cli
test
in
xor
sbb
and
jne
pop
iret
jbe
inc
mov
and
jb
js
adc
jp
dec
mull
xor
add
mov
fsubrs
lds
sub
push
ret
xor
push
imul
pop
leave
int3
push
imul
add
inc
dec
and
pop
push
xchg
cmp
adcl
jecxz
stc
jae
sub
imul
push
mov
pop
mov
fnsetpm(287
sahf
cmp
jno
aad
ja
cli
lret
jnp
xor
sub
cs
mov
cwtl
leave
fwait
sub
insl
mov
push
adc
sbb
shlb
xor
lods
mov
aaa
inc
push
mov
in
lods
icebp
mov
mov
push
in
xchg
sub
dec
jp
ljmp
and
jmp
stc
inc
push
mov
sub
dec
jp
xor
pop
test
ss
mov
and
add
xor
out
or
sbb
add
jp
aas
into
fiadds
jne
jle
mov
jle
or
push
test
jg
movsl
loop
pop
mov
inc
loope
leave
xor
subl
dec
int3
inc
out
xor
cmp
test
fiaddl
subb
jae
jle
jb
mov
push
adc
sub
int
je
sub
mov
das
and
inc
push
jp
and
ja
es
insb
cld
rcrl
and
stc
push
sarl
push
scas
and
pop
inc
cmpsl
ds
xor
sahf
or
rclb
mov
es
data16
sbb
or
pop
jmp
jp
cmp
mov
jnp
sbb
inc
or
divb
mov
sub
jle
adc
cmp
out
call
sub
imul
sbb
push
add
mov
fwait
mov
loop
imul
out
push
lods
or
sub
clc
lahf
pop
pop
int
jb
push
sub
repz
add
push
sbb
rcrl
clc
jne
dec
rcrb
sub
dec
push
pop
pop
lods
push
xor
lock
movsl
jae
fcomps
xor
lahf
fdivs
mov
ds
loopne
sub
cmp
std
enter
mov
add
lret
xchg
xchg
pop
mov
add
mov
subl
add
adc
xor
jmp
cltd
add
cmp
negb
shrl
dec
jnp
in
andb
fmul
dec
mov
jp
clc
dec
add
or
adc
dec
jb
xchg
or
daa
mov
movsb
xor
cmp
mov
and
cmpsl
adc
adc
and
lret
jnp
xor
dec
xor
in
cmp
fsubrl
gs
dec
pop
ret
int
lods
imul
scas
dec
std
cmp
ret
cltd
pop
dec
adc
xchg
pushf
xchg
dec
fadds
sbb
adc
sub
jb
test
or
fldenv
loopne
mov
pop
mov
push
inc
push
push
dec
or
iret
or
xchg
cmovns
enter
movsb
scas
std
sub
sub
pop
cmp
xlat
hlt
insb
dec
or
mov
movsl
into
dec
subl
repnz
hlt
stos
cmp
sub
and
dec
popf
rclb
lret
hlt
lcall
dec
mov
dec
mov
adc
adc
ds
and
add
dec
ja
jp
stc
in
sub
into
adc
xchg
call
enter
insb
adc
push
cmpl
dec
or
aam
popf
leave
mov
mov
stc
mov
jle
cld
lret
mov
test
movsl
cmp
insb
cli
fwait
imul
ficompl
inc
stos
add
push
outsl
dec
sub
nop
sbb
pop
push
xor
dec
fcoms
adc
dec
test
test
mov
add
js
push
pop
push
push
pop
mov
mov
dec
jl
push
xor
or
insb
xlat
push
adc
xchg
dec
subl
mov
jecxz
and
test
sub
jae
adc
dec
in
cmp
pop
cmpsb
adc
dec
sub
nop
jmp
push
jmp
sub
fnstcw
call
dec
mov
jle
scas
dec
gs
rorl
xchg
out
addr16
sub
mov
mov
idivb
and
xor
lock
xchg
or
inc
push
ret
or
sub
fcoml
sbb
jno
dec
jg
mov
inc
gs
mov
scas
cmpsb
fmull
inc
dec
es
repnz
mov
psubsw
pop
cmp
lds
jmp
pop
jb
out
and
xchg
dec
or
out
push
sub
mov
cmp
dec
lret
pop
jl
arpl
mov
scas
adc
adc
mov
jo
mov
roll
jmp
loopne
ficoml
add
inc
test
lcall
imul
push
or
pop
fwait
imul
cmpb
sbb
out
push
jge
xorl
or
sbb
jns
js
rcrb
sbb
add
push
dec
repz
fdivrp
cmc
and
cmp
out
int
xor
jge
jmp
cmpsb
int
add
push
sbb
test
leave
repz
lods
in
xchg
pop
or
and
ficoml
mov
ljmp
cwtl
push
push
lcall
pop
decl
int3
or
and
inc
jmp
push
inc
inc
lods
add
mov
mov
sub
pop
ror
sysret
xchg
push
mov
push
jns
mul
fimuls
add
lahf
adc
jne
decl
pop
cmp
and
jmp
jo
mov
xchg
mov
mov
arpl
push
dec
sub
lret
pop
or
pop
sbb
inc
dec
inc
push
dec
pop
inc
pop
mov
std
sub
xor
repz
sub
stc
fcoms
insb
jecxz
push
or
or
lock
xor
pop
arpl
mov
jbe
mov
cmp
out
pop
shlb
adc
lcall
push
test
faddp
and
or
jle
cwtl
xchg
add
dec
and
jno
fisubs
adc
movsb
mov
adc
dec
lcall
rorb
call
xchg
imul
push
dec
arpl
mov
daa
aas
dec
jl
icebp
jmp
stos
jg
fisttpll
inc
popl
inc
das
gs
push
mov
nop
sub
loope
lock
sub
std
xchg
iret
push
push
test
stc
addr16
test
xchg
dec
daa
dec
push
inc
roll
cmp
rorl
movsl
ret
les
mov
out
add
mov
rcrb
popl
dec
test
cwtl
mov
xor
das
sub
dec
xchg
add
imul
fsubrs
and
pop
stos
shrl
cmp
dec
push
xor
and
dec
das
push
push
jo
outsl
jmp
dec
test
rep
nop
mov
dec
xchg
inc
fsubr
pop
mov
dec
push
ficomps
insl
jnp
shr
call
add
xor
loop
popf
stos
jp
jne
xor
mov
dec
mov
and
stos
subb
cmc
pusha
in
pop
int
jmp
mov
fcomps
and
and
mov
cmc
dec
outsl
sbb
xor
cli
dec
ss
pop
fwait
es
xchg
mov
dec
mov
push
jbe
xor
decl
jg
test
push
and
xchg
out
jnp
rol
add
adc
ds
xchg
xor
int3
cmpsl
dec
pop
push
cld
mov
inc
cmc
dec
mov
popf
dec
lret
mov
and
inc
push
dec
ficompl
adc
xchg
cmp
mov
jmp
scas
das
rcr
addr16
aad
inc
std
inc
add
ficoms
cmp
xlat
inc
into
push
xchg
inc
movsb
addr16
mul
dec
inc
sbb
out
imul
jmp
sub
pop
sbb
dec
push
fxch
jmp
xchg
cmovns
add
push
dec
cmpsl
ss
pushf
les
push
nop
sub
ret
cmc
ljmp
scas
jns
mov
mov
outsb
mov
test
ss
dec
iret
inc
dec
sub
sahf
dec
enter
mov
adc
lret
arpl
add
sbb
add
xor
cmp
mov
pop
or
fildl
in
rol
aad
dec
sub
jbe
inc
dec
pop
sti
push
pop
mov
scas
jmp
lea
dec
dec
push
lds
add
pop
jl
jne
lods
mov
imul
cmpsb
dec
out
xor
jo
and
dec
inc
sti
cmp
stos
xchg
push
leave
add
outsb
pop
inc
pop
dec
aaa
mov
in
out
les
mov
push
inc
ds
jp
in
add
dec
aas
sub
sbb
inc
das
jge
pop
mov
pop
pop
jno
fdivs
add
mov
xlat
mov
imul
enter
inc
nop
mov
sub
push
jge
cmc
mov
sub
dec
bound
push
ret
pop
pop
aam
sub
icebp
insb
jbe
out
or
fcompl
xchg
inc
sbb
sarb
sub
rorb
xchg
mov
inc
fwait
dec
movsb
testb
inc
ss
xlat
test
cmp
inc
or
cmp
and
or
push
dec
mov
insl
je
loopne
dec
xchg
xchg
dec
out
aad
mov
rorb
mov
xor
add
jl
insb
mov
or
sbb
lods
and
or
frstor
pop
push
adc
lods
icebp
add
mov
iret
mov
out
popf
mov
fwait
into
inc
sahf
aas
pusha
xchg
xlat
shr
push
sub
int
pop
mov
sbb
sbb
add
dec
push
imul
sub
xor
lret
mov
push
ret
xor
push
dec
inc
cmpsb
inc
or
mov
bsf
jl
mov
add
shr
cmpl
mov
repnz
dec
fimuls
pop
ss
ss
xor
sbb
xchg
cmp
xlat
je
xchg
sub
data16
sbb
xchg
sbb
push
mov
pop
jmp
inc
push
ljmp
or
pop
pop
sub
arpl
mov
fisubl
mov
push
mov
cmp
and
pop
test
add
mov
testb
mov
lods
mov
mov
sbb
shll
dec
fiaddl
lcall
push
andb
lret
jbe
xor
inc
and
xchg
pop
lret
jne
jnp
jb
sbb
add
xchg
pop
mov
jnp
dec
das
push
fnclex
jge
cmp
stos
mov
js
push
hlt
pop
sub
pop
push
pusha
pop
lods
and
xlat
push
or
xor
out
aaa
sbb
je
dec
dec
push
push
cmpb
shll
push
mov
mov
test
imul
sbb
mov
mov
jnp
or
jmp
jno
insl
andl
jae
in
pop
lret
sub
mov
sti
jl
and
in
aam
insb
dec
or
ja
pop
imul
adc
dec
add
fwait
and
cld
cmpsl
inc
popa
xor
loop
testb
arpl
inc
mov
outsb
xor
jge
mov
lea
pusha
loopne
mov
xor
mov
in
cld
and
mov
pop
mov
or
jl
sbb
xor
addb
dec
and
jle
jae
push
lods
jecxz
dec
inc
sti
mov
ret
idivb
mov
adc
ficompl
insb
pop
bound
lds
ret
jle
xchg
gs
cld
xor
or
dec
pop
jbe,pt
arpl
mov
insb
sarb
rorl
neg
sub
inc
cli
dec
push
cmp
inc
test
mulb
mov
loopne
jl
sub
pop
mov
mov
cmp
inc
inc
sbb
inc
dec
lds
mov
push
inc
shll
jbe
dec
pop
pusha
leave
sbb
push
jns
cmp
jbe
push
push
loopne
nop
not
dec
out
dec
push
and
mov
push
push
mov
pop
stos
or
movsl
into
sahf
push
and
cmp
xor
test
adc
js
inc
sbb
mov
push
popf
pop
adcb
xchg
cmpb
mov
sub
div
mov
and
arpl
or
arpl
popf
arpl
bound
jnp
sub
lret
fadd
loop
jns
pop
mov
jne
inc
jmp
lret
inc
and
and
dec
cmp
adc
andb
dec
mov
test
xor
and
in
inc
jae
or
jl
push
pop
call
faddl
jle
call
and
mov
ljmp
or
mov
test
xchg
insb
aaa
cs
dec
or
rcl
cltd
and
or
sbb
adc
mov
pushf
insl
shl
sbb
insl
sbb
dec
jp
sti
pop
xchg
arpl
inc
push
bound
aad
jmp
sbb
cld
inc
push
fcomps
test
fimuls
addr16
inc
orb
insl
ret
push
pop
leave
inc
rcr
js
adc
pusha
mov
jle
cltd
arpl
push
pop
icebp
sbb
lret
push
enter
mov
arpl
mov
rol
sbb
add
mov
jmp
mov
jecxz
pusha
pop
dec
rorl
lcall
add
lods
notl
aad
rorb
push
nop
pop
call
cmp
prefetcht0
orl
or
imul
bound
mov
fdivs
clc
fisubrs
loop
push
fwait
pop
dec
imul
push
xchg
inc
test
push
cmpsb
dec
jbe
andb
test
xchg
bound
scas
xchg
push
fidivrl
in
aam
inc
add
mov
sbb
pop
sub
inc
in
mov
in
das
flds
and
pop
sub
mov
shrb
jmp
mov
jb
mov
xchg
stos
lods
dec
daa
and
iret
sbb
cmpsb
lds
popf
sub
mov
push
in
int3
scas
mov
dec
add
ret
push
mov
and
xchg
imul
lret
stos
sbb
or
and
inc
dec
cmp
mov
dec
sahf
adc
aam
cmp
aas
inc
notl
int3
pop
lods
fwait
xchg
inc
xchg
ss
or
iret
sarl
js
mov
repz
imul
inc
push
mov
inc
inc
jecxz
jmp
cmp
adc
bound
xchg
mov
stos
cmp
or
out
iret
push
adc
adc
jle
cmp
xchg
mov
in
cmp
sbb
dec
lret
mov
pop
dec
xor
negb
arpl
aad
jae
fiadds
dec
inc
mov
and
sbb
mov
inc
sub
inc
lahf
adc
jbe
test
jg
out
and
jmp
mov
push
jle
addr16
mov
in
repz
mov
roll
xchg
sbb
inc
ret
xor
test
lret
js
pop
adc
cld
fdivrs
add
enter
push
adc
xor
or
push
add
into
mov
push
or
sbb
dec
sbbb
hlt
fbld
fwait
test
pusha
ds
cmp
mov
fwait
das
pop
jmp
rorb
jnp
mov
out
sti
inc
dec
sub
test
iret
sahf
aas
mov
mov
pop
inc
call
out
std
in
decl
pop
adc
xchg
cmp
addb
inc
roll
pop
mov
inc
bound
rcrb
out
lcall
aas
dec
or
sub
fcomp
loopne
push
pusha
inc
cmc
push
jno
xchg
push
adc
sbb
js
ja
mov
or
dec
jae
and
in
aam
sti
outsb
scas
add
mov
sbb
sbbb
xchg
stos
pop
ljmp
pop
cmp
jne
add
inc
arpl
and
xor
pop
mov
sbb
loop
or
rcll
ret
sub
iret
lods
ret
mov
adc
inc
inc
fsubrl
pop
out
sbb
lret
xlat
jns
ret
dec
call
gs
scas
rcrb
pop
push
push
aad
xchg
xchg
adc
or
mov
pop
fwait
sti
shl
jmp
mov
test
mov
dec
in
lock
mov
rorl
test
adc
fiaddl
pop
mov
push
and
pop
enter
jnp
xor
push
xor
mov
test
pop
test
xchg
arpl
xor
inc
cmpsb
rcll
je
mov
testl
jb
pop
xchg
pop
sub
pusha
sub
add
pusha
in
scas
cmc
or
jg
mov
stos
sub
mov
sbb
or
mov
sti
in
mov
testb
test
dec
cmpsb
xor
lds
adc
or
popl
movsl
test
out
lcall
dec
or
xor
xchg
addr16
sbb
lods
jae
push
out
inc
add
mov
xlat
mov
lods
pop
lds
aam
cmp
out
xchg
scas
add
ret
sbb
rcrb
mov
mov
sub
jb
inc
pusha
ficomps
frstor
pop
dec
lods
cmp
mov
inc
mov
rclb
jae
xchg
sub
xchg
pop
data16
mov
ds
leave
iret
sbb
pop
jp
filds
dec
fdivp
fnstcw
pop
imul
jp
ja
add
xchg
xchg
add
hlt
push
xor
test
not
xchg
jp
call
cmpl
push
pushl
pop
xor
clc
lock
and
ret
xlat
sbb
adc
loopne
mov
adc
jno
cwtl
sahf
cmp
xchg
jne
mov
mov
adc
mov
jp
ficompl
test
lcall
sub
inc
shrl
movsb
mov
dec
sbb
jmp
insl
dec
mov
mov
aam
jns
mov
pushf
arpl
rclb
movsl
inc
jae
jge
dec
stos
fs
and
push
jae
imul
inc
int3
sbb
insl
in
and
sub
push
insl
inc
arpl
gs
xchg
jecxz
lss
ds
fwait
mov
ja
aad
cmp
inc
mov
jae
pop
or
into
xchg
bound
cmp
je
ficompl
mov
pop
sti
dec
inc
inc
mov
lods
sub
mov
repz
int3
mov
or
ret
cmpsl
out
test
cmpb
out
int3
andb
jno
add
and
mov
pop
aas
mov
cmp
or
std
stos
adc
cmp
fidivl
add
xchg
sahf
bswap
add
push
test
and
loopne
fisttpl
push
imull
dec
cmp
lds
push
iret
out
cmp
inc
cltd
inc
pushf
mov
leave
add
jecxz
fidivrs
cwtl
sahf
cmp
sahf
test
inc
and
test
xchg
cmpsl
sub
pop
dec
inc
mov
add
adc
inc
clc
inc
call
jle
lock
daa
std
mov
jp
arpl
cli
in
cmp
ret
gs
push
dec
dec
pop
ret
inc
push
sbb
push
or
fstpl
push
pop
sub
inc
orl
andb
inc
es
xchg
sti
cs
push
mov
fsubs
mov
ljmp
dec
sbb
lret
mov
mov
fcoml
add
movsl
pop
lods
push
xchg
call
jle
js
cmpsl
les
fwait
loop
xchg
test
mov
xchg
decl
pushf
cmove
push
pop
test
outsb
leave
arpl
pusha
xchg
and
push
pop
lahf
pushl
mov
xchg
push
add
idiv
add
jb
adcl
loopne
sub
add
dec
lcall
xchg
push
dec
mov
rclb
leave
mov
sbb
mov
out
test
jle
mov
dec
in
enter
sbb
adc
xchg
cmp
mov
jecxz
cmp
and
test
pop
out
rolb
aam
push
daa
insl
adc
lods
mov
mov
mov
lcall
sbb
xor
popf
into
pop
ss
insb
pushf
jo
cltd
or
jle,pt
cmp
inc
mov
jbe
roll
push
push
pop
sahf
adc
xor
xchg
jae
mov
sub
pop
push
push
jmp
int3
mov
lcall
jb
xchg
fdivrs
fnstsw
leave
pop
push
adc
rcr
mov
lea
and
fnstsw
push
xor
push
sub
or
inc
push
scas
adc
pop
jnp
pop
dec
sbb
js
inc
sbb
fistpl
idivb
jnp
add
xor
push
jmp
cld
sub
in
sahf
int3
jne
cmp
lods
mov
adc
or
out
add
jo
pop
or
xor
mov
shll
aas
cltd
mov
pop
in
arpl
jle
iret
inc
jg
leave
sbb
loope
xchg
and
or
aas
int3
sbb
cld
rorb
call
sar
out
sub
pop
push
int
movsl
fidivrl
lods
in
jb
xor
cmp
sbb
inc
pop
subl
jle
fdivs
popf
mov
dec
sub
mov
ret
xchg
call
add
lods
jns
inc
vpavgw
jns
mov
dec
add
sbb
push
push
add
outsl
out
xor
add
inc
adc
jp
xchg
pop
push
fadd
inc
out
lods
mov
out
sarb
xchg
lea
outsb
sbb
sub
arpl
roll
jl
sub
enter
lods
jp
daa
lret
sub
sub
pusha
sub
ret
std
cmp
adc
xor
fs
add
push
mov
mov
mov
call
jge
jmp
adc
push
aas
inc
dec
mov
test
jno
out
pop
outsl
pop
ds
xorb
xor
and
jb
push
lret
xorb
xorl
call
inc
arpl
ficompl
push
sub
lcall
push
xor
fisttpl
clc
shlb
add
add
cmp
mov
jns
test
push
int3
or
ret
lds
test
test
push
adc
dec
fiadds
sahf
addl
insl
rcrl
and
xchg
sarl
dec
add
je
push
pop
adc
cmpsl
rclb
cli
and
rcll
mov
int
xlat
xchg
clc
inc
pop
push
mov
and
pop
mov
inc
sbb
push
add
sbb
jbe
xor
bnd
ljmp
cmp
jno
pop
jmp
inc
xchg
addr16
push
sbb
or
add
pop
add
mov
loop
inc
adc
jae
xor
das
outsb
xor
jmp
cmp
xchg
jno
inc
inc
adcb
dec
insb
push
cli
adc
mov
es
leave
dec
or
add
ja
testl
cwtl
inc
mov
sti
adc
sub
push
insb
adc
jmp
mov
xor
push
pop
mov
dec
push
xor
mov
int3
loope
sahf
or
xchg
dec
mov
fimull
inc
or
ret
add
push
ss
insb
inc
jb
stos
insl
mov
sbb
push
cmpsb
sbb
es
lea
push
add
mov
imul
cmpxchg
push
xchg
lret
adc
addb
sbb
movsb
inc
scas
push
inc
xor
jl
dec
ja
loopne
pop
pop
test
fnstcw
and
pop
pop
mov
lret
leave
xchg
ds
jae
sbb
mov
mov
orb
xor
sbb
push
aam
push
push
mov
or
sbbb
adc
dec
cld
fidivl
sbb
in
cmp
xor
adc
add
call
xor
push
int
sbb
fisubrl
loop
mov
test
push
push
out
inc
fadd
push
or
jecxz
leave
repnz
pop
pushf
fildll
orl
cmpsb
ds
fsubs
idivl
push
rolb
mov
inc
inc
sub
lods
mov
divl
xchg
pop
lret
loop
int3
mov
inc
shll
imul
jmp
or
cmpb
lahf
push
fwait
test
jae
push
int
adc
adc
push
xchg
out
mov
jp
daa
lea
sbb
cmpb
push
mov
add
push
jl
pop
jo
xchg
hlt
xchg
pop
push
cli
lret
icebp
int3
into
movsl
sub
push
test
push
mov
stos
outsl
mov
xchg
dec
cmp
fidivs
add
inc
int3
dec
adc
sbb
jle
mov
adc
mov
jl
inc
fists
pop
sarl
push
out
js
cmp
into
cmp
xor
inc
mov
daa
ret
push
cmp
jg
xchg
inc
cmc
lock
out
xor
xor
test
rol
stos
sbb
push
cmp
mov
dec
sub
inc
inc
dec
sub
stos
push
in
fdivrs
pop
inc
pop
mov
sbb
jne
jp
les
inc
ficoml
jbe
in
pushf
pop
push
popf
pushf
mov
mov
mov
mov
test
jmp
or
xchg
repnz
sbb
adc
ficompl
inc
sub
inc
enter
pop
mov
or
test
int3
mov
pusha
jae
inc
xchg
mov
fimull
xor
jge
pop
inc
scas
out
push
jae
roll
rorl
push
jae
pop
movsb
sub
orb
pop
das
sub
jge
add
fwait
out
pop
push
lret
mov
xchg
cmp
pop
jne
dec
rcrb
loopne
dec
xchg
imul
addr16
stos
cs
fcoms
roll
push
fldenv
lds
push
test
stc
inc
rorl
xchg
sub
mov
adc
push
dec
clc
mov
movsl
jo
xor
xor
das
or
es
inc
fnstenv
jp
lcall
fimuls
inc
sub
xchg
and
mov
cmp
mov
and
mov
pop
jnp
cmpsl
pushf
xchg
dec
add
call
cmp
xor
pop
sub
daa
dec
insl
stos
xchg
pop
push
xor
push
inc
inc
mov
testb
and
mov
sahf
inc
jg
insb
outsb
clc
xor
pop
mov
mov
mov
pop
dec
loopne
lahf
push
outsl
ret
and
loopne
outsl
and
inc
outsb
cmp
outsb
in
push
inc
stos
call
insl
loop
addr16
mov
xchg
sub
mov
sbb
leave
and
fsubrs
sub
lahf
inc
xlat
out
pop
sbb
jo
xlat
pop
jg
xchg
mov
or
ret
fwait
mov
lock
and
dec
cmp
jmp
xor
insl
shlb
pop
pop
test
mov
mov
or
cmp
aaa
sbb
jge
and
cmpsb
sti
or
loop
aad
add
adc
push
call
jle
dec
or
pop
call
jp
icebp
mov
jno
mov
jbe
xor
xorl
dec
jne
loopne
push
jl
and
push
into
jae
mov
pop
lret
sbb
push
mov
popf
push
xlat
inc
lahf
sbb
mov
adc
aad
cmc
adc
pop
les
pop
ss
xchg
lods
inc
fnstcw
sarb
dec
xor
out
mov
mov
iret
inc
adc
jp
out
cmp
jns
lcall
insb
test
aas
and
and
es
xchg
daa
dec
pextrw
push
or
bound
add
mov
add
jne
cmp
es
cmpsb
sub
sbb
movl
mov
push
insl
or
adc
notl
cmp
in
adc
pop
or
lahf
mov
not
sbb
inc
inc
mov
fisubs
dec
lret
pop
ret
verr
int3
fwait
push
jmp
and
pop
imul
mov
lods
cltd
ret
leave
dec
imul
aad
inc
addb
cmp
sub
pusha
fisubrl
inc
mov
add
int
pushf
xor
push
imul
sub
lock
arpl
push
or
sub
lea
sbb
andl
inc
mov
stos
fwait
out
imul
mov
sub
xchg
pop
push
stos
adc
pusha
call
and
xor
push
adc
sub
adc
cld
pop
and
jmp
pop
mov
inc
inc
insl
scas
jbe
das
mov
mov
xchg
enter
fwait
hlt
sbb
jae
cmc
mov
das
scas
int
ds
sub
jmp
out
jb
mov
pop
mov
mov
mov
insb
inc
sbbl
insl
addb
jmp
hlt
and
push
sbb
inc
inc
xlat
call
arpl
das
gs
push
sub
xor
sbb
lods
sub
sar
jp
fldcw
lret
mov
pop
cmpsb
aas
or
sbb
bound
mov
inc
out
aad
repz
sbb
jae
sub
dec
mov
mov
dec
movsl
sbb
mov
enter
jle
adc
loop
jo
out
rcl
jnp
out
push
pop
jle
sub
loop
and
in
lods
dec
add
xchg
cmp
int3
ja
xor
sub
sarb
fs
pop
outsl
mov
pop
cld
call
jno
fnstenv
mov
ljmp
sub
push
mov
lea
cmp
dec
inc
and
cmp
iret
jae
and
arpl
push
mov
cwtl
inc
xchg
cs
pop
jle
adc
push
pop
data16
pop
pop
bound
fsubrs
jnp
and
call
orb
shr
mov
sub
cmc
cmpsb
inc
sbb
lret
bound
inc
dec
adc
jbe
dec
cmp
push
or
xchg
cmp
pop
scas
dec
push
fiaddl
inc
repz
pop
xor
loop
aad
movsb
inc
xchg
dec
and
dec
out
jl
clc
lahf
enter
mov
cmp
xor
popf
push
fsub
mov
dec
xor
imul
mov
cltd
sbb
sub
clc
inc
jmp
add
and
mov
hlt
cmp
add
add
or
fbld
stos
mov
push
mov
inc
jmp
xor
mov
fs
xchg
push
push
sub
or
mov
adc
ret
inc
ja
popa
jmp
mov
shll
xor
aad
jp
nop
es
int3
insl
cmp
es
pop
add
push
mov
add
push
in
pop
inc
insl
or
push
push
fdivs
sbb
inc
or
or
pop
jmp
xchg
dec
cmpsl
test
sarl
inc
test
test
xchg
xor
mov
sub
fsts
sbb
pop
push
xchg
pop
pop
les
or
push
push
mov
mov
xor
add
lret
cltd
dec
pop
cwtl
push
sbb
leave
push
cmp
mov
mov
cpuid
cmc
inc
cmc
xor
add
mov
push
mov
dec
push
fiadds
pop
inc
daa
jle
inc
fldlg2
outsl
sub
inc
mov
push
arpl
lods
inc
ret
pop
add
add
cld
or
jl
add
data16
aaa
lahf
ds
or
pop
jno
repnz
push
mov
cmpsb
sbb
mov
mov
insl
adcl
enter
std
jp
mov
cmpsl
int
cmp
and
mov
push
int3
add
inc
cli
dec
rcr
jle
sbb
mov
add
in
xchg
inc
cld
xor
mov
orb
pop
mov
test
xor
xlat
pop
in
rcr
jo
xor
xchg
xchg
das
into
jl
outsl
pop
or
mov
adc
ljmp
outsl
loopne
sbb
and
loopne
pushf
dec
cld
pop
and
mov
pop
or
repnz
lcall
sub
push
loop
jg
outsb
ds
jmp
test
push
mov
scas
test
push
or
scas
adc
xor
push
or
push
add
pop
mov
and
scas
addl
jnp
ss
and
mov
pop
dec
inc
adc
cmp
popa
pop
sbb
mov
inc
push
mov
mov
sbb
xchg
jno
lds
sbb
sbbl
repnz
jne
mov
lcall
inc
or
mov
push
test
pusha
lahf
or
in
nop
ret
adc
mov
mov
sub
pop
mov
push
das
xor
mov
or
sub
ret
and
jl
cltd
int3
test
xor
inc
push
sbb
or
inc
test
adc
mov
test
andl
xor
les
xorl
sub
shl
xor
leave
out
rorl
push
jge
xor
inc
jnp
mov
or
push
cmpb
cmp
jnp
loope
pop
jmp
jmp
push
pop
push
inc
lcall
ss
sarl
lret
jle
pop
xor
gs
inc
aam
push
scas
pop
and
mov
xchg
int3
fcom
inc
call
fldt
push
add
mov
imul
movsl
sub
push
pop
pop
inc
dec
inc
in
mov
das
call
jle
pop
push
fildll
sbb
aad
loop
xchg
sub
test
mov
call
movsw
jo
shlb
mull
push
pop
out
mov
pop
jbe
in
in
ret
clc
xorl
call
xchg
push
int
adc
add
pop
jne
lahf
xor
pop
jnp
jecxz
inc
lods
fs
pop
mov
cmpsb
cmp
jbe
jbe
push
push
sarl
xor
add
mov
aam
cmp
enter
fwait
es
stc
stc
or
arpl
or
sahf
cmp
xor
lret
pop
loope
fidivrl
shlb
ljmp
scas
inc
adc
xor
cmpsb
and
pop
das
dec
in
std
call
stos
inc
dec
dec
pop
cs
in
inc
sbb
mov
gs
push
cmp
call
iret
rcrl
mov
jmp
lea
int
fisttpl
jp
iret
sbb
sbb
lret
rcrl
into
adc
enter
xlat
lcall
add
mov
adc
stc
push
or
scas
dec
dec
add
lods
push
sub
imul
and
and
push
add
push
notl
insl
mov
mov
sub
or
and
in
ret
addb
and
mov
push
xchg
insb
xlat
and
sbb
inc
mov
xor
mov
or
fs
and
sub
adc
into
mov
cli
sub
aaa
fsubl
dec
pop
xchg
loop
addb
add
fld
xchg
jne
pusha
cmp
add
dec
mov
jnp
sbb
jle
orl
add
rorb
mov
lcall
dec
inc
inc
shrl
lds
daa
loop
fisttpll
lds
test
jle
cltd
int
add
lods
imul
in
mov
imul
sbb
fnstcw
push
push
sbb
or
mov
jmp
lds
idivb
jbe
mov
mov
inc
jge
or
int
lret
xchg
sbb
inc
push
lock
sub
daa
test
push
and
mov
sbb
cmp
scas
shlb
cmpsl
jecxz
clc
xor
xorb
jns
ret
push
lods
ljmp
mov
xor
mov
add
mov
fdivp
pusha
sub
ret
dec
daa
test
xchg
xor
cltd
add
cmpsl
inc
pusha
mov
test
ljmp
add
pop
ja
leave
inc
xor
iret
push
mov
ror
sbb
jecxz
in
jno
add
call
movsl
mov
xchg
mov
lret
and
cmp
sbb
xchg
xchg
add
leave
inc
incl
pop
insl
jecxz
cmp
jae
loope
cmpsl
or
fsubrs
add
loopne
add
xor
xor
mov
test
push
leave
jle
xor
mov
in
xchg
insb
fimull
mov
sti
xchg
sub
mov
cmpsb
pop
or
hlt
imul
and
mov
sahf
mov
ss
push
mov
push
rorb
inc
mov
cmp
inc
dec
jp
mov
lret
lcall
push
dec
sub
shl
pop
ja
cld
fcoms
mov
lock
inc
aaa
push
cmp
xor
outsb
sti
push
cli
rcl
fisttps
jle
add
out
mov
xor
mov
pop
arpl
dec
scas
lret
mov
cmpsb
xlat
jns
xchg
int
leave
mov
xchg
shll
adc
aam
push
add
test
dec
pop
jae
or
aaa
call
mov
dec
dec
or
les
mov
leave
add
aaa
xchg
jne
xor
inc
rcrb
jp
loopne
pop
dec
push
jns
fiadds
test
icebp
cwtl
xor
cmc
mov
push
mov
sahf
push
clc
nop
jg
sbb
inc
push
clc
das
jns
insb
cltd
or
mov
and
pusha
add
mov
lds
sbb
or
mov
rorb
out
icebp
inc
fcomip
push
js
mov
sbb
push
es
mov
inc
sub
sub
inc
aad
rcll
push
mov
and
scas
dec
int3
mov
sub
lret
arpl
lret
sub
inc
in
loopne
and
mov
xor
sbb
xor
insb
jae
and
cmp
push
stos
inc
bound
add
rclb
adc
push
fldcw
cmp
dec
sub
xor
xchg
aad
xchg
push
pop
iret
mov
repnz
ret
jno
pop
subb
lcall
test
push
inc
push
lods
dec
sarl
insl
xchg
rcr
sbb
outsl
push
test
adc
jns
jmp
dec
pushf
mov
fcmovnb
sub
inc
or
sbbb
cmpsb
sbb
loopne
push
cmpsb
es
or
js
sbb
push
xchg
xchg
outsl
call
push
cmp
loopne
mov
xorl
lods
jle
fxch
pusha
neg
ds
repz
xchg
dec
xchg
jno
loop
push
and
das
push
cld
std
add
pop
dec
test
pop
hlt
scas
lods
pop
push
inc
dec
lret
mov
jae
loopne
and
xor
push
sub
mov
mov
cli
ret
adc
rclb
adc
mov
test
push
rcrb
jecxz
stc
push
lods
ja
xchg
lds
pushf
or
push
das
arpl
mov
inc
fdivrs
pop
dec
das
inc
or
xorl
rcr
pop
cmpsl
lret
imulb
std
push
es
push
jnp
std
aam
fwait
mov
xchg
cmp
sti
lahf
psubusw
test
ficoml
push
add
int3
mov
add
fiaddl
test
das
or
xchg
popa
leave
fidivrl
inc
subl
sbb
jecxz
aam
cltd
shrl
insb
ret
pop
xor
lock
in
std
in
pop
sbb
fisttps
and
ja
jo
mov
inc
add
lods
xlat
out
push
sbb
outsb
or
jmp
jae
mov
jp
jp
jns
es
ret
ljmp
dec
push
sub
push
sbbl
cmp
lock
jle
mov
adc
xchg
mov
fsubrl
xchg
xchg
push
xchg
xor
sbbl
or
into
inc
xchg
cmp
dec
mov
jge
lods
push
in
leave
mov
push
mov
mov
popa
push
inc
adc
ret
leave
push
inc
imul
pop
pop
push
or
insl
rol
mov
sub
cwtl
push
sub
and
cmp
iret
jnp
jge
in
sahf
mov
pop
adc
or
ds
push
fnsave
push
aas
push
pop
test
or
jmp
ret
and
lock
ljmp
lods
loop
adcl
fistpl
push
xchg
pop
and
stc
xlat
push
lcall
in
insl
push
inc
mov
movsl
rcrb
call
xor
sbb
xor
or
das
or
sub
aam
sti
or
dec
or
rorb
leave
push
push
loope
jle
rclb
fnsave
add
lods
std
xchg
lds
mov
add
push
sub
lret
dec
cmp
scas
andb
mov
sarb
xlat
xchg
jle
aam
adc
popa
aaa
sbb
inc
adcl
in
sbb
push
rcr
loop
and
jb
xor
not
jbe
mov
xchg
push
mov
or
out
sahf
jmp
mov
pushf
inc
sbb
flds
imul
jnp
shr
mov
adc
jg
add
push
pop
fnstsw
or
add
fstp
mov
xchg
int3
mov
cmpsb
jp
insb
inc
rorl
and
mov
sbb
mov
pop
inc
mov
or
xor
sbb
push
push
test
xor
rcll
aas
xchg
sub
inc
dec
mov
xchg
outsl
mov
lock
push
sbb
pop
xor
cmpsl
cmp
and
push
das
jle
adc
xchg
sahf
pop
mov
lods
lret
or
mov
lret
je
bound
in
pop
pushf
inc
movsb
bound
shrb
adc
int
or
xor
mov
insb
cmpsb
xchg
jmp
or
dec
iret
jmp
fdivrp
pop
mov
sbb
sbb
push
lcall
xor
adc
int3
test
mov
movsb
or
cmp
into
lahf
adc
dec
cltd
cmpsl
aam
clc
or
inc
xor
xchg
jle
enter
push
or
jns
or
push
or
loop
add
inc
mov
push
pop
cmp
stc
add
cld
sub
aam
xor
aas
mov
fsubs
popf
out
addb
cwtl
dec
jl
push
jecxz
repz
ficoml
add
push
jmp
mov
hlt
shrb
jp
mov
jg
push
bound
cmp
js
cmp
cli
scas
xchg
push
sbb
pop
dec
int
test
jmp
arpl
ja
bound
leave
inc
lds
dec
sbb
jnp
decb
cmpsb
sbb
inc
jle
enter
icebp
or
std
gs
inc
pusha
mov
pushf
adc
dec
mov
enter
mov
test
sbb
ret
and
inc
push
jg
in
sbb
lods
aaa
sti
test
testl
sbb
sahf
inc
imul
cmp
xor
pop
xchg
enter
sahf
lods
inc
xchg
cmp
das
push
das
std
adc
jns
pop
dec
and
inc
push
mov
push
pushf
test
inc
sahf
ficoms
jmp
push
ficomps
loopne
leave
sbb
ds
xchg
or
int3
sub
mov
aam
test
nop
jnp
dec
sbb
dec
bound
push
pop
scas
lods
and
jge
push
rorl
lret
dec
sub
addl
test
movsb
xor
sbb
push
adc
mov
ljmp
and
loop
xchg
ficompl
add
add
inc
clc
jmp
aas
mov
out
jl
jb
aam
pop
testl
sbb
imul
or
cmp
add
mov
rcrl
add
subl
clc
les
sahf
andl
mov
stos
popf
cmp
int3
test
sbb
lods
cmp
xchg
dec
out
stos
xor
mov
call
cli
xorb
movsb
lahf
inc
jne
bound
repz
mov
lods
mov
push
int
shlb
mov
out
inc
xor
sahf
pushf
jg
adc
ss
jae
enter
sub
adc
sti
fdiv
jae
push
jbe
adc
fdivs
inc
decb
rclb
flds
xor
dec
jbe
and
xorw
stos
push
dec
push
push
enter
in
aam
outsl
cmp
inc
and
outsl
jb
call
mov
bound
jmp
insb
call
insb
lods
aam
push
pop
out
mov
dec
jns
mov
addl
sbb
mov
sub
xor
loop
mov
out
mov
sub
dec
clc
cli
push
mov
data16
je
mov
push
pop
xor
insl
cmp
mov
xchg
add
test
dec
jp
daa
lods
in
lret
shrb
lods
adc
and
fs
mov
or
stos
jmp
adc
push
pop
and
mov
int
xor
ss
imul
cmpsl
add
data16
and
fldenv
sbb
mov
sbbb
add
push
gs
pusha
adc
dec
frstor
loop
push
push
mov
jne
xchg
xor
lret
add
push
mov
xor
sbb
mov
shl
adc
inc
jno
cs
pop
add
mov
stos
and
scas
clc
sub
cmp
xor
loopne
jnp
pop
cmp
adc
xchg
pop
sub
or
adc
stc
push
movsl
ss
imul
int3
or
adc
or
push
das
js
loope
or
xchg
mov
dec
sub
ret
mov
rorb
out
icebp
xor
cwtl
push
sub
push
cmp
mov
ds
push
movsb
fwait
inc
rcr
outsl
add
movsl
call
cmp
xor
inc
xor
test
dec
mov
cltd
inc
push
inc
sti
xlat
lods
dec
repz
decb
movsb
inc
call
addr16
mov
pusha
mov
mov
fwait
std
test
xchg
loope
imul
ret
ret
xor
aas
add
adc
adc
inc
cltd
sahf
inc
sub
mov
jp
cli
cmp
mov
or
add
push
sub
ja
sarb
je
push
insl
jb
shr
arpl
add
sarb
ret
stc
loop
lcall
add
sbb
call
xchg
rclb
inc
pop
arpl
cld
adc
cmc
popf
push
mov
daa
into
sub
cltd
mov
mov
and
push
xchg
jae
dec
fimull
jnp
sti
adc
mov
in
call
lock
aaa
cmp
testl
sub
data16
imul
roll
repz
xchg
loopne
aad
mov
sbb
popa
cmpsb
lods
xchg
mov
stc
xorb
enter
sub
into
out
ficoml
mov
cmp
or
lock
ja
repnz
jecxz
inc
ret
data16
push
sbbl
dec
mov
inc
and
sub
pcmpgtb
in
mov
sub
push
aam
jbe
fimull
or
jo
in
adc
cmp
jecxz
push
mov
call
inc
xlat
sti
ret
in
test
dec
pop
mov
in
and
loopne
rcll
jmp
xchg
and
xchg
push
add
lret
mov
pushf
das
mov
and
lahf
mov
sbb
inc
mov
lahf
mov
rol
xchg
pop
js
pushf
lods
mov
insb
mov
enter
in
sbb
mov
into
bound
dec
bound
dec
mov
cmp
pop
mov
xorl
cmp
or
mov
jp
jbe
jns
xlat
stos
add
sahf
and
in
or
inc
decl
cmp
adc
add
jl
and
inc
mov
in
jle
xorl
int
inc
jae
jl
mov
sbb
or
pop
adc
fnstsw
es
cs
es
cwtl
sti
sub
sbb
lock
sbb
mov
pop
in
jge
inc
sbb
cmp
leave
push
mov
push
add
or
inc
dec
lahf
repnz
rclb
inc
pop
lds
push
inc
clc
sub
int
loop
dec
insb
xchg
insl
loop
insb
xchg
add
lods
sahf
hlt
cmpsl
cmp
push
icebp
add
mov
sbb
mov
jnp
mov
push
fcomi
and
je
pop
push
add
call
push
pushf
dec
mulb
mov
add
mov
fdivrl
mov
loopne
incb
inc
xchg
ret
loop
hlt
popa
lret
inc
in
adc
xor
xor
sub
pop
inc
xor
or
int
push
addr16
lods
or
mov
dec
xor
and
jns
dec
sub
inc
shrb
sbb
pusha
popf
pop
cmpsl
loopne
pop
cmp
and
mov
mov
mov
xor
push
xchg
arpl
cltd
pushl
pop
ja
push
pop
push
mov
add
xchg
inc
out
cwtl
sub
mov
pop
adc
in
cltd
and
mov
sbb
lret
adc
inc
push
mov
enter
mov
sub
icebp
out
ret
or
loopne
push
inc
jp
clc
je
out
sub
pop
lret
lea
mov
insb
test
or
inc
mov
cmpsl
inc
xor
stos
adcb
loopne
cmpsl
jno
pop
push
jecxz
xor
fnstenv
cltd
pop
adc
xchg
xor
data16
inc
leave
fistl
in
mov
jmp
inc
out
or
pop
pop
mov
test
cmp
xor
mov
sarl
sarb
fwait
pop
push
outsb
cmp
lock
mov
jmp
xchg
lret
not
or
pop
pop
jge
test
insl
add
retw
andb
jno
loop
cwtl
sub
push
add
xorl
pop
cmp
ja
pusha
iret
test
push
hlt
fadds
sbb
dec
aas
insl
xchg
xor
cmp
and
adc
ret
rorl
or
sbb
mov
mov
and
iret
mulb
sub
mov
dec
pop
pop
inc
inc
jb
dec
inc
jg
fidivrl
cmc
cltd
sub
sbb
std
add
mov
das
mov
push
cmp
mov
xor
add
sahf
adc
adc
jg
int3
jb
dec
dec
push
sbbl
test
push
hlt
push
mov
pop
mov
ljmp
and
sub
pop
mov
enter
mov
popf
pusha
lret
inc
fwait
js
mov
and
in
aam
icebp
stc
pop
out
lods
dec
inc
adc
mov
fstpt
jmp
out
sub
out
mov
xor
inc
lea
sar
data16
mov
inc
xor
gs
int
cmp
pop
jno
pop
data16
sbb
out
xchg
dec
mov
sbb
mov
and
pop
dec
insl
pop
sbb
push
mov
dec
call
sub
lcall
xor
sub
xchg
cmpsl
loopne
sbb
in
pop
jnp
xchg
pop
cmp
call
xor
lds
mov
in
xor
sbb
mov
mov
fdivr
dec
mov
mov
adc
mov
pop
dec
xor
cmc
xor
sbb
pop
add
mov
in
mov
mov
mov
or
or
subb
jp
mov
popa
cli
push
lods
mov
lret
push
xchg
adc
cmp
pop
xchg
sbb
imulb
or
add
test
lcall
stos
ss
fyl2xp1
les
jmp
mov
or
out
xor
hlt
xchg
mov
xrelease
push
cli
sbb
int3
inc
bound
rcl
mov
mov
gs
into
sbbb
xchg
cmp
push
sbb
mov
push
adc
dec
jle
jle
xor
cmp
pushf
add
popf
xchg
jbe
arpl
cmp
xor
movsl
mov
das
jle
movsl
xchg
sahf
ja
loopne
mov
push
repz
cmc
xor
sbb
ret
mov
cmp
mov
pop
out
xchg
lods
call
sbb
movsl
lock
xor
ret
inc
cmp
push
dec
push
in
insb
jecxz
push
sub
ss
jl
shll
icebp
push
sub
rolb
lods
mov
aaa
mov
test
mov
push
xor
adc
push
mov
repz
dec
jbe
daa
inc
mov
jecxz
dec
call
sub
ret
jae
iret
and
sbb
dec
mov
pop
inc
mov
les
dec
xchg
push
mov
pop
inc
subb
sbb
int
jno
cltd
imul
insl
sub
dec
xchg
pop
out
inc
fcomps
add
jp
cld
arpl
icebp
or
inc
or
popf
pop
inc
push
jmp
test
lcall
pop
in
add
test
outsl
jl
jge
mov
cmp
mov
or
push
arpl
adcl
push
test
icebp
pop
inc
inc
and
pop
cltd
cld
test
sbb
mov
mov
jmp
cmpsb
pop
aad
mov
add
popa
or
arpl
xchg
xchg
jmp
dec
aam
xchg
inc
jno
push
aad
imul
roll
xor
cmp
push
cmp
jmp
dec
xor
push
out
outsb
rcrl
push
sahf
cs
fstpl
inc
aaa
repz
jge
or
pop
mov
sbb
imul
das
sub
out
pop
jns
test
jmp
iret
mov
add
outsl
rcrb
xor
inc
mov
adc
stos
jle
push
rcr
stc
mov
or
xor
sbb
int3
sub
add
cmp
inc
out
cmp
push
mov
inc
or
cmp
sbb
mov
sub
jecxz
incb
in
mov
pop
jmp
pop
js
addl
pop
push
xchg
in
clc
call
xchg
push
scas
mov
xorl
push
adc
inc
jnp
into
pop
hlt
dec
sbbb
iret
xchg
insl
mov
icebp
cld
and
ljmp
pop
xchg
mov
and
bound
push
lret
in
repz
inc
inc
mov
sub
je
sub
scas
pop
sti
jnp
dec
cmc
mov
push
add
and
std
js
mov
pop
jle
stos
frstor
imul
mov
movsl
add
in
test
jg
fildll
push
dec
inc
movsl
mov
xchg
adc
int
leave
lock
dec
outsl
cli
sub
add
mov
out
xor
test
push
cmp
leave
pop
push
dec
in
sub
cmpb
cmpsl
int
sbb
push
dec
mov
addb
mov
js
enter
dec
sub
push
jp
pop
jle
push
add
push
lds
lock
dec
pop
xchg
test
rcrl
scas
js
pop
je
jmp
scas
aam
mov
sti
sub
out
aam
out
inc
add
add
push
or
int
into
push
and
cmpsb
aad
incl
jl
test
push
pop
ja
fsubrl
add
addr16
adc
sub
xor
in
mov
pop
push
push
loop
sbb
sub
icebp
pop
sbb
imul
addl
bound
shlb
push
sub
jmp
ret
xor
mov
leave
popa
fisubrs
add
js
arpl
daa
dec
xlat
sub
fs
fistpll
pop
sub
or
push
sbb
or
or
frstor
jmp
jle
pop
sbb
pop
push
iret
mov
or
xchg
mov
add
pop
out
pop
fisubrs
or
mov
mov
in
stos
vsubss
fdiv
dec
fucomip
aad
and
addb
or
sbb
outsl
jg
repz
pop
dec
cmp
ljmp
loopne
fldcw
rcr
sbb
and
fldenv
dec
subb
push
and
xor
push
or
push
sub
xor
mov
stos
or
xchg
jnp
jbe
fwait
xor
mov
ret
mov
repnz
aam
fld1
mov
pop
and
aad
inc
jle
fstl
jae
pop
std
jb
addr16
inc
push
pop
or
testb
and
sbb
test
lods
fiaddl
jne
and
or
ds
fsubl
testl
mov
mov
pop
adc
xor
dec
mov
and
and
or
orl
cmc
inc
sub
test
pop
notb
push
xchg
insl
sbb
or
adc
cmp
les
rcl
sub
call
mov
xchg
mov
rcl
dec
nop
cmp
push
inc
push
ficompl
xor
daa
inc
sbbl
add
jge
add
sbbl
xor
pop
add
cmpsb
xor
fists
jle
inc
mov
inc
insb
dec
call
jle
mov
mov
or
loopne
fstpl
sbbb
pop
mov
xchg
push
das
cmp
jns
iret
insb
sbb
sbb
sub
pop
jp
xchg
pop
xchg
jae
leave
lock
call
or
daa
int3
fmul
clc
push
stos
mov
push
sub
xor
sub
sbb
fs
xor
enter
mov
ja
jle
xlat
arpl
xor
sub
ljmp
scas
xor
ror
mov
inc
mov
rol
scas
adc
les
sub
pusha
clc
ret
loopne
fistps
test
push
pop
adc
cmp
cld
aaa
xor
ficompl
or
xor
ja
sbb
jge
inc
insb
arpl
mov
dec
cmc
jb
lock
xor
or
cmp
aas
test
adc
dec
push
dec
ja
mov
or
or
inc
cwtl
clc
mov
ret
sub
xor
rclb
int
xchg
inc
adc
in
fmuls
sbb
ja
int3
mov
xor
loop
jne
lahf
jb
out
cld
roll
mov
and
rorl
xor
push
sbb
movsl
pop
leave
push
mov
push
mov
in
push
adc
lcall
out
push
sub
pop
dec
push
sarl
mov
xor
rorl
mov
fldenv
xchg
xor
lods
sbb
push
or
int3
pop
loop
cmp
pop
cmpl
push
xchg
push
ret
das
js
mov
fdivrs
aam
push
call
popf
sbb
or
xchg
sahf
ror
frstor
enter
and
cmp
sub
test
mov
mov
mov
dec
out
mov
icebp
cmpsb
sub
call
push
adcl
add
sub
rcll
ljmp
pop
mov
or
mov
loopne
or
xchg
jb
pop
pop
jb
xor
jl
pusha
and
cmp
jb
xchg
jns
aam
xchg
xchg
xchg
imul
cmc
ss
xchg
rorb
repnz
movsl
cmp
lds
sbb
lods
data16
imul
jecxz
jle
xor
lret
mov
addl
inc
loopne
sub
sbb
push
fsubs
aad
or
ds
mov
fcoml
js
push
enter
mov
jg
outsl
sbb
xor
jae
push
sub
mov
and
loopne
call
xchg
mov
push
mov
inc
push
lock
and
add
cmp
enter
mul
and
leave
xchg
sub
fldcw
mov
lods
mov
pop
xor
adc
or
xchg
and
cmp
or
push
mov
insl
pop
push
cwtl
push
pop
pop
adc
pop
mov
inc
mov
lea
mov
jecxz
or
xchg
pop
ror
cmp
movsl
push
pop
pop
mov
imul
xor
and
in
adc
orl
out
xor
gs
xor
pop
mov
adc
mov
sub
pop
inc
inc
jecxz
fsubrl
mov
add
pop
test
cmpsb
sbb
movsl
rclb
and
pop
iret
scas
add
inc
sahf
sbb
fisubrl
fwait
xchg
ss
pop
mov
fsubrl
loopne
push
jge
lods
clc
insb
xchg
mov
cmp
repz
adc
out
inc
je
mov
dec
sbb
fnstcw
cmpsl
or
xor
adc
scas
pusha
mov
daa
pusha
mov
jp
jnp
sbb
mov
add
int3
and
adc
sbb
call
fnstsw
inc
insl
into
pop
mov
cmp
dec
push
out
jg
fs
ret
fst
outsb
cmp
ret
mov
sbb
out
rcr
test
cmp
cmc
fisubrs
fwait
cld
and
arpl
or
jno
mov
push
jo
enter
cmp
into
dec
mov
jle
mov
jecxz
repnz
enter
sbb
inc
fisttps
stc
fdiv
leave
fwait
mov
push
sbb
pop
fsubs
popf
sub
inc
mov
int3
dec
inc
test
in
nop
push
inc
popw
pop
or
xchg
jmp
sbb
lahf
fs
inc
add
xchg
testl
pop
hlt
pop
aam
inc
jecxz
or
jle
mov
xlat
mov
pop
cmpsb
push
or
pop
push
push
cs
stos
hlt
das
ror
iret
sbb
mov
leave
xor
ret
aad
xor
jle
sbb
mov
xchg
cmp
xor
test
sbb
pop
std
add
stos
dec
das
sahf
push
or
loopne
fimuls
sbb
xor
inc
push
call
jl
inc
dec
inc
lret
out
rcll
insl
ficompl
std
fnstcw
lret
mov
ss
fwait
push
jg
jbe
dec
jp
add
insl
shrl
clc
mov
xor
inc
inc
loop
imul
repnz
push
inc
cld
addl
cmp
out
jp
pusha
cmp
add
xchg
sub
ficoml
push
mov
hlt
xor
lock
jnp
jno
add
mov
into
aam
push
cli
pop
add
jnp
mov
adc
lods
pop
mov
push
enter
lea
in
roll
adc
sbb
mov
or
ja
mov
shl
jl
imul
test
push
mov
aas
mov
loopne
push
sub
or
pop
push
in
mov
cmp
aam
into
mov
mov
frstor
testb
push
aad
xlat
lret
or
mull
test
cmc
mov
xor
inc
ss
jp
or
xor
fwait
int3
xchg
xor
push
mov
inc
imul
jle
das
mov
dec
jle
outsl
repnz
lahf
hlt
ret
push
jp
sub
rcl
xrelease
fs
inc
movsb
insl
shl
xor
sbb
int
push
mov
xor
ret
lods
sahf
pop
adc
sub
mov
mov
movsb
xchg
jns
jg
mov
sub
inc
push
or
mov
dec
jns
test
push
addb
aaa
xchg
cmp
aas
dec
loop
aas
add
sub
inc
stos
xchg
fwait
arpl
push
loopne
popa
inc
shlb
lods
jb
subb
mov
das
push
lods
inc
rcll
loopne
ret
mov
push
xchg
push
and
mov
and
fdivrs
mov
inc
fcmovb
push
inc
jnp
mov
xor
or
push
xchg
push
dec
enter
aad
mov
dec
jo
dec
mov
xor
pop
mov
jecxz
ljmp
loopne
sti
pop
addr16
ljmp
imul
loopne
jge
jns
cmp
aaa
bound
push
ret
neg
sub
jg
xlat
pop
inc
xlat
or
sbb
xchg
add
xor
int
and
inc
rclb
popa
stos
xor
imul
pop
sub
add
add
fs
fstpl
data16
lods
adc
pop
mov
insl
pop
jae
sti
inc
and
cmp
lods
add
xor
push
sub
mov
pop
push
test
cmp
jle
ljmp
inc
push
xchg
inc
jge
mov
out
xor
cli
push
sbb
in
test
lcall
jl
rcl
push
adc
jecxz
es
mov
sub
and
je
or
lods
xor
mov
inc
arpl
xor
rcl
or
adc
movsb
mov
xor
dec
test
pop
incb
cld
sub
pop
inc
sub
test
pop
outsl
xor
inc
fmull
shl
data16
fnsave
mov
loope
ret
ror
inc
jbe
cmp
das
inc
subb
adcb
or
rcrl
sub
mov
leave
pop
xor
mov
stc
cmp
and
nop
je
pop
push
call
pop
dec
mov
mov
dec
lods
xor
fcomi
test
subb
daa
mov
sbb
and
mov
fnsave
divl
push
je
mov
mov
or
cli
mov
xor
out
dec
dec
push
cwtl
jb
jecxz
call
push
cmp
push
jle
or
xor
xor
and
daa
inc
mov
cmp
xor
aas
jle
into
sbb
test
mov
imul
and
mov
mov
call
sbb
jmp
imul
dec
sbb
nop
pop
addr16
cmpsb
or
fnstenv
mov
push
adc
daa
jmpw
adc
inc
cltd
inc
inc
xchg
in
subl
pop
pop
cld
ljmp
mov
enter
jecxz
add
arpl
inc
sbb
jno
xor
adc
jno
xor
ret
mov
lcall
in
inc
mov
inc
jb
pop
jg
pop
mov
adc
adc
out
pop
and
xchg
fwait
mov
sub
pop
inc
dec
imul
xor
or
mov
mull
mov
or
cmc
push
outsb
xor
pop
fsubrl
lea
ds
pop
inc
loope
and
add
mov
mov
push
adc
dec
and
stc
push
call
inc
push
xchg
pop
imul
insb
pop
sbb
inc
pop
push
aam
dec
clc
sbb
pop
xlat
add
jmp
sarl
adc
icebp
aad
jecxz
mov
leave
aaa
push
mov
xchg
cmp
sbb
or
mov
pusha
loop
push
xor
bound
pop
inc
sbb
rorl
lock
dec
das
loop
cmpsl
push
xchg
movsl
xchg
jg
cmp
mov
dec
call
xor
push
cmpsb
add
xchg
jbe
inc
xor
jge
call
xor
mov
aam
cld
jnp
testb
pop
insb
or
adc
mov
mov
adc
push
xchg
sti
jle
cmp
out
sti
dec
push
mov
arpl
adc
sahf
pop
clc
or
adc
out
mov
or
ja
pop
jmp
mov
test
rolb
pop
pop
mov
inc
xchg
out
jle
jns
arpl
mov
xchg
addr16
jnp
lahf
or
scas
enter
lret
mov
cld
sub
dec
mov
inc
dec
or
ret
adc
sbb
mov
nop
xchg
cmc
sbb
cmpsb
dec
cmp
lcall
or
in
push
fistpll
movsb
add
adc
sbb
iret
mov
fwait
push
enter
jmp
or
mov
xor
mov
mov
dec
inc
cmp
aam
jnp
lods
push
xchg
jnp
ja
test
pop
inc
pop
sub
repnz
mov
fisubrl
sub
sub
adc
mov
std
cmp
mov
dec
fldenv
shr
pop
push
mov
insl
jl
sbb
mov
mov
or
ret
lret
push
lret
scas
aaa
push
cmpsb
mov
pop
or
xchg
xor
ss
test
popf
subb
sbb
mov
inc
nop
jbe
in
pop
lods
jmp
jne
insl
addr16
fsub
sub
dec
dec
adc
scas
xchg
pop
test
xlat
shll
push
lea
das
push
mov
mov
bound
mov
jecxz
adc
mov
sbb
cmp
movsb
xor
jnp
loope
push
scas
inc
mov
ja
jae
jb
movl
pop
iret
bound
stos
or
in
dec
mov
fsubl
or
mov
cmp
js
inc
int3
ret
aam
loop
push
and
daa
repnz
adc
addb
pop
or
jns
push
cmc
mov
inc
mov
or
fcomps
push
lret
or
leave
dec
imul
lcall
mov
pop
mov
cs
fxam
ljmp
add
pop
pop
add
aam
mov
icebp
ds
mov
in
cltd
inc
adc
inc
pop
add
shll
jns
xor
mov
leave
or
lods
imulb
push
inc
gs
push
jle
xor
lret
inc
jnp
xchg
mov
addr16
push
xchg
adc
jnp
stc
push
push
jge
push
cli
sub
jmp
fwait
adcl
pop
nop
sub
jge
gs
das
mov
and
movsb
and
cmp
insl
andl
or
mov
or
in
js
fstp
inc
adcl
sbb
dec
rorl
pop
xchg
push
push
outsl
fidivs
int
sub
dec
lea
and
mov
jge
fstpt
fisubl
loop
fwait
ds
int3
push
xchg
xchg
push
pusha
dec
push
insb
inc
mov
mov
and
push
mov
dec
insl
cmpsb
xchg
lods
dec
test
cmpsl
jecxz
sub
sti
mov
pop
movsb
or
in
mov
pop
xor
jle
push
xchg
xchg
add
daa
inc
test
fimuls
aas
or
cmp
lods
fisubrs
out
lahf
sbb
iret
dec
mov
xor
sub
push
repnz
lods
mov
shlb
mov
mov
pop
mov
pop
pop
push
shlb
pop
outsb
jnp
mov
inc
iret
xor
mov
inc
jle
cmc
push
loopne
sbb
xor
xchg
pusha
jmp
mov
insb
jle
mov
imul
and
repz
fadd
shll
ja
sub
addr16
adc
mov
leave
fadd
pop
mov
sahf
cli
jbe
pop
cmp
xchg
xor
push
bound
sbb
sub
adc
xchg
jmp
push
pop
out
sahf
test
daa
adc
mov
pop
test
pop
inc
fnstenv
dec
je
sbb
xor
add
or
loop
push
outsl
cmp
mov
movd
scas
and
and
je
adcb
xchg
lods
dec
adc
add
xchg
flds
push
hlt
mov
mov
pop
inc
int3
daa
or
or
xchg
cmpsb
push
int3
ljmp
bound
add
mov
sbb
xor
outsl
push
push
insl
mov
jb
mov
push
shll
arpl
test
rorl
pop
sahf
cwtl
and
xor
les
mov
mov
cmpb
xor
cltd
xor
add
sbb
mov
scas
ds
mov
and
pusha
scas
fstpt
dec
cmp
test
push
jbe
stos
rolb
add
cmpsb
add
sub
addb
in
sbb
loopne
cmp
and
inc
dec
arpl
ret
iret
in
loopne
stos
mov
ds
or
and
and
pop
jb
and
int
sti
mov
mov
fisttpl
loopne
xor
fstl
add
add
and
into
lret
in
lods
push
imul
sbb
mov
fwait
push
scas
mov
add
insb
addr16
jnp
cmp
inc
push
push
jnp
push
mov
cwtl
mov
rclb
sbb
mov
and
or
jns
les
pusha
push
push
dec
dec
pop
imul
add
ja
and
ret
mov
int3
out
xchg
imul
mov
xor
xor
pop
lea
insb
fnstenv
mov
pop
push
cmpsl
pop
fnstsw
ja
mov
and
lret
mov
xor
pop
sub
xor
xor
xchg
lds
arpl
insb
jl
stos
test
mov
cmpsl
dec
jnp
loop
insl
jl
inc
leave
mov
mov
adc
iret
jge
jae
sar
xchg
jle
xor
sub
and
jb
inc
testl
cmpsb
sub
mov
je
orl
add
xor
cwtl
push
add
or
adc
push
jb
mov
pop
jae
mov
cli
punpckldq
xor
cmp
out
xorb
inc
mov
cmp
shl
sub
inc
insb
pop
fistpll
movsl
push
les
movsl
xor
lret
fwait
mov
sti
inc
cmp
adc
xor
cmp
jp
in
jp
xor
and
fiaddl
pop
repz
leave
xor
and
idivl
push
idivb
loop
aad
aas
cmp
sub
les
sub
inc
into
call
out
jge
mov
push
fwait
lods
jmp
in
dec
cmpsb
cmp
cmp
or
push
mov
sbb
dec
jle
push
out
xchg
pop
jp
fsubrl
imul
jne
fidivrl
push
mov
mov
mov
or
inc
add
xchg
in
dec
mov
mov
sub
pushf
sub
cmp
and
pop
xchg
jmp
leave
sbb
pop
or
pop
shlb
sub
pop
sub
and
pop
xlat
mov
mov
sar
insl
pop
push
loopne
insb
out
bound
xor
insb
fisttpll
sbb
push
insb
std
xchg
xor
inc
push
or
push
pusha
mov
inc
mov
jg
roll
dec
pop
in
pop
inc
ret
xchg
imul
cmp
les
std
or
fstpt
add
jl
notl
adc
push
insb
sub
out
mov
adc
mov
inc
pop
sub
fstps
mov
in
push
rcrb
push
ss
pop
mov
sahf
push
lahf
cmp
test
in
clc
mov
dec
bound
pop
mov
jne
stos
sahf
sub
sbb
jb
xor
adc
dec
into
xor
or
sbbl
mov
cmp
and
add
mov
mov
movl
jo
inc
pop
insl
lods
test
mov
sbb
je
stc
test
daa
push
mov
mov
sub
adc
adc
sahf
repz
pop
push
inc
push
cmc
rcrb
pop
xor
ret
push
xchg
fadd
mov
dec
inc
cmp
and
lahf
lret
push
je
inc
enter
mov
lea
sbbb
push
pop
push
push
xor
outsl
dec
mov
mov
outsb
pusha
rcrl
mov
xchg
or
push
sbb
repnz
push
pop
cmp
sub
sub
ds
and
imul
stos
push
and
mov
arpl
pop
mov
pop
cmp
test
and
adc
push
rcll
or
imul
push
cmpsl
xchg
dec
add
add
bound
std
imul
rorl
lods
in
pop
popa
cmp
mov
aad
ret
add
insl
roll
add
xor
lahf
aam
rcrl
push
leave
jmp
mov
cmpsl
test
or
lret
inc
inc
mov
rcrb
push
outsl
dec
faddp
orb
loop
lret
js
lds
stos
inc
xchg
ror
dec
test
mov
xchg
dec
dec
pop
in
pop
pop
xor
cmp
insb
mov
scas
inc
dec
xchg
fcmovb
inc
mov
cmp
mov
push
cmp
inc
sbb
enter
pop
int3
mov
mov
jmp
xor
pusha
sub
inc
jl
add
les
mov
inc
test
or
lea
jp
mov
xor
push
leave
lcall
inc
push
inc
cmpsb
cmpb
cmp
sbbl
fldt
mov
in
test
lods
xor
lds
js
aam
xor
pop
les
jp
pop
sti
mov
cmp
inc
inc
inc
fisttpll
push
dec
clc
inc
cmpsl
das
fwait
scas
iret
out
inc
call
repnz
dec
inc
mov
mov
mov
push
sbb
pop
inc
inc
int
push
adc
imul
mov
xchg
icebp
sbb
jg
mov
pop
dec
or
jmp
cmpsl
dec
aam
add
jne
xchg
xor
mov
aam
or
mov
sub
push
sarl
loop
sub
imul
mov
fdivr
jge
jp
lods
push
js
fwait
xchg
sbb
and
ss
cmp
push
xlat
lods
mov
jnp
lds
aam
cli
and
mov
lock
add
mov
fwait
cs
mov
aam
mov
cmp
jb
lds
pop
mov
in
pop
or
dec
cmp
lods
mov
je
mov
and
rol
arpl
jmp
pop
cmpsb
es
repz
out
cwtl
scas
fistps
inc
sub
jne
lock
movsb
outsl
and
lods
and
ds
dec
inc
lods
cltd
dec
rcll
pop
movsl
lock
arpl
add
lret
sub
clc
pop
and
add
cmp
aam
stc
cmp
pop
push
scas
dec
test
fidivrl
dec
xor
shrl
push
pop
lock
aas
loopne
adc
movsb
push
push
sub
jne
xor
dec
fidivrs
xlat
call
and
push
mov
sub
cmp
nop
dec
jo
and
or
test
push
xchg
std
out
sbb
mov
lods
add
mov
inc
add
jnp
andl
inc
popl
cld
lods
mov
daa
adcl
ds
xchg
pop
outsl
mov
popw
rol
aaa
dec
loope
test
jae
scas
dec
cs
cmp
cmp
push
jae
fwait
in
push
push
mov
push
or
and
les
in
push
jecxz
ds
int
insb
cli
dec
jno
xorl
xchg
addr16
pop
cmpsl
rcrb
and
xchg
jo
push
cmpsl
test
lahf
aaa
mov
add
jg
insb
cmpsb
rorl
cmp
pop
cmp
pop
adc
or
cmp
push
loop
lods
xlat
insb
and
dec
daa
add
jle
cwtl
movsl
dec
out
or
add
and
imul
xor
add
push
mov
or
or
xchg
and
cwtl
inc
mov
inc
pop
jae
test
push
jmp
mov
inc
js,pt
xchg
inc
adc
jg
in
cmp
cmp
inc
loop
cltd
cmp
cmp
cmp
movnti
and
xchg
or
cld
pusha
mov
mov
push
je
xor
ret
xchg
dec
mov
fstl
aaa
lea
leave
out
jl
xlat
push
cmp
xchg
sbb
mov
insl
and
xchg
dec
ret
insb
xor
rcrb
jp
xor
mov
push
sbb
mov
xchg
xchg
fisubl
test
repz
out
sbb
sbb
push
mov
adc
xor
stos
repz
scas
push
mov
dec
incl
out
sbb
inc
mov
push
adc
sbb
add
push
jle
dec
imul
fldcw
sbb
into
ja
bnd
cmp
loopne
data16
scas
dec
cmp
jp
sub
les
jnp
dec
popf
cmc
addb
sbb
jmp
daa
cli
dec
mov
sub
mov
adc
add
stc
or
jae
push
scas
lret
mov
jmp
jae
mov
sbb
mov
or
inc
or
icebp
pushf
icebp
sub
cmp
shlb
neg
mov
jb
lds
jbe
daa
fldz
add
sbbl
jae
ds
xor
jl
lahf
lahf
cmpl
repz
mov
sbb
jnp
and
jae
dec
sbb
cmp
pop
inc
push
in
inc
inc
mov
dec
mov
pop
sbb
push
sbb
insl
cmp
mov
cmp
push
mov
lret
stos
cmc
mov
mov
xchg
cltd
xchg
mov
push
mov
fbld
int
dec
inc
arpl
call
pop
and
lea
xor
iret
sbb
data16
mov
inc
dec
dec
sub
imul
dec
sub
rcrb
ret
imul
lret
or
push
push
jne
sti
push
mov
lock
inc
jmp
sbb
nop
sbb
adc
push
xchg
mov
mov
out
jb
xchg
aad
pop
cmp
inc
adc
cmpsb
sub
or
aam
sar
inc
sbb
into
jl
lock
icebp
lahf
push
mov
xor
cmpsb
or
mov
push
js
sub
mov
xchg
cmp
pop
mov
loopne
std
mov
sbb
jge
sub
fisttps
xor
outsb
jns
dec
dec
push
fs
lods
jbe
pop
mov
add
sub
aam
lods
stc
add
enter
fimuls
adc
subb
mov
pop
gs
or
mov
push
push
and
sub
push
or
inc
jl
sub
pop
les
xchg
push
fsubl
mov
pop
pop
xor
rol
sahf
xchg
mov
arpl
sbb
daa
mov
inc
sbbl
add
xor
inc
in
imul
pop
sub
jnp
jmp
dec
pop
push
add
lcall
icebp
test
dec
cmp
add
jbe
loope
jecxz
dec
xchg
pop
test
stos
enter
lret
sub
dec
sub
pop
adc
xor
cmp
push
cmpb
daa
ret
or
jle
mov
inc
pusha
lret
dec
lahf
repnz
pushf
inc
jmp
sub
mov
stc
sub
cmp
or
scas
fistpll
sbb
or
cmp
sahf
cmc
lods
mov
push
out
cmp
pop
movsl
test
sub
add
das
daa
mov
and
inc
out
inc
adc
test
leave
lock
push
pop
sbb
inc
pop
mov
fbstp
call
mov
jmp
lcall
inc
push
jp
lods
xor
add
sbb
insl
rorl
cmpsb
or
jb
sar
adc
push
mov
movsl
pop
dec
imul
mov
outsb
inc
test
stc
add
pop
mov
divb
clc
stos
cli
aad
xchg
add
rolb
jns
push
push
lds
push
loop
fwait
sub
daa
test
lcall
enter
js
pop
mov
clc
sbb
imul
outsb
rorl
data16
mov
js
dec
xchg
repz
mov
push
xchg
bound
fldl
mov
subb
iret
dec
in
and
xchg
notl
movb
adc
inc
or
sti
je
lret
addl
in
pop
jb
and
push
lods
in
rolb
fstpl
sti
inc
stc
xchg
in
mov
cmpsl
pusha
adc
xchg
push
fwait
mov
int3
inc
push
lret
into
xor
pop
cmc
push
je
jp
aas
cmp
lcall
ja
cmp
pop
adc
stos
mov
into
xor
sub
sub
cmc
and
push
test
xlat
lret
andb
cmp
jge
sub
std
xor
push
sub
mov
push
mov
nop
inc
mov
mov
xchg
or
dec
fcoms
mov
mov
mov
fildl
pushf
push
bound
xor
and
mov
dec
lds
loopne
mov
xchg
cwtl
pushf
dec
lret
mov
lret
and
or
inc
dec
push
test
movsl
jl
mov
call
jg
mov
jle
xchg
mov
mov
or
into
nop
fsubrl
xor
xor
and
lds
and
mov
xchg
pop
icebp
inc
xor
inc
inc
xchg
cld
leave
mov
cmp
call
xchg
mov
addr16
mov
loopne
dec
lahf
test
stos
lret
xor
mov
push
push
jecxz
jge
lret
ffreep
shlb
testl
imul
jno
std
rorl
push
jg
pop
adcl
jb
loope
lret
add
and
mov
push
push
int3
lds
xchg
mov
and
jmp
xor
mov
dec
addb
pop
xchg
xor
or
xor
xor
mov
add
xorb
mov
and
test
mov
inc
mov
adc
jle,pt
xor
shl
leave
push
hlt
adc
jnp
jge
push
xor
add
shrl
dec
jno
push
xchg
fisttpll
cmp
inc
js
int3
inc
mov
push
cmp
push
jae
mov
insb
or
lret
lods
xchg
inc
in
flds
mov
jge
add
enter
out
push
push
xchg
xchg
sahf
dec
sub
gs
xchg
ret
pop
xor
das
insb
shll
loopne
pop
push
pop
adc
dec
adc
sbbb
jb
sahf
jg
sub
pop
lret
mov
daa
xor
or
cmpsb
es
add
lahf
das
and
push
sub
popa
mov
xor
pop
jnp
andl
cmp
inc
xlat
loopne
shll
iret
mov
mov
out
jle
sbb
jne
ja
jbe
pop
cmp
or
enter
add
repnz
cmp
sbb
mov
ficomps
daa
sub
aam
xor
add
add
mov
cli
ficoml
cmpsb
cmp
ret
adc
xchg
movsl
fsts
repz
xchg
adc
ds
adc
ja
push
inc
movsb
fucomip
scas
mov
jo
rcr
add
mov
ret
adc
mov
imul
call
inc
xchg
cmp
cmp
loop
push
sti
call
dec
data16
insb
xchg
jecxz
push
jmp
xchg
lahf
mov
xchg
jns
xchg
ret
int
jmp
cld
jmp
and
and
xor
cmp
dec
and
movsb
xchg
sti
icebp
enter
xlat
cmp
push
fidivrs
stos
pop
xor
cmpsl
sbb
roll
inc
mov
mov
std
pop
push
clc
cmp
movsl
out
sub
out
shr
out
adc
inc
and
pop
leave
cmp
enter
inc
notl
imul
out
ret
mov
fiaddl
fidivl
lds
mov
fs
insl
shl
cmpl
dec
cld
std
out
jecxz
mov
test
cmp
jg
movsb
test
and
insb
mov
loopne
mov
mov
testb
xor
xlat
lock
inc
fsts
leave
push
mov
sbb
imul
and
cwtl
mov
inc
xchg
sbb
xchg
jle
mov
adc
push
xor
out
xchg
xchg
push
sbb
les
push
in
ds
dec
int3
sub
mov
imul
mov
adc
mov
cmpsb
sbb
mov
xchg
jbe
movsb
sarl
cli
das
mov
xor
aad
xchg
cmp
add
jecxz
imul
mov
mov
jge
ljmp
sbb
mov
popa
iret
jle
sbb
jnp
lock
fdivs
push
push
add
mov
inc
xchg
jle
ljmp
enter
xor
lods
lret
mov
iret
and
cmpsb
pop
push
lcall
inc
mov
stos
pop
int
pop
jmp
out
and
es
mov
cmc
stos
sti
inc
fnstenv
cs
lods
pop
fcomps
mov
subb
inc
sbb
push
cmpsl
rorl
add
into
inc
gs
es
inc
cld
or
arpl
mov
cld
sti
or
or
sub
jbe
xor
jecxz
cmp
cmpsl
xchg
iret
imul
mov
add
enter
jmp
mov
lods
xor
outsb
filds
lods
dec
pop
rcll
jb
imul
jno
in
xlat
or
lods
inc
bound
ret
xor
loop
loopne
mov
sbb
mov
cmp
or
negb
xor
or
push
push
lret
mov
cmp
ret
rcrl
lock
pop
or
mov
test
imul
imul
cmp
inc
iret
push
cmpl
sbb
sub
xchg
scas
add
adc
jnp
xchg
sti
add
adc
xor
pop
bound
cmp
mov
jp
rcll
hlt
pop
ror
fisubrs
mov
fdivrp
pop
lods
dec
out
pop
xor
add
in
mov
cmp
ret
arpl
cld
sbb
cmc
dec
mov
adc
push
push
mov
fidivrl
ret
mov
jle
lds
add
push
rorl
ret
repnz
cmpsl
dec
stos
xchg
lcall
loopne
pushf
pusha
fdiv
xchg
mov
stc
lret
mov
pop
add
ret
int3
imul
test
jno
loop
xlat
add
cmp
mov
mov
aad
call
movsb
xor
mov
jl
mov
lret
bound
mov
cmp
ds
mulb
xchg
bound
jle
add
xchg
call
imul
dec
pop
lods
pop
imul
in
gs
lods
sbb
pop
jp
dec
push
dec
adc
mov
jne
insb
dec
pop
repz
fwait
mov
out
dec
pop
repz
adc
aam
dec
mov
cmpl
push
pop
dec
fiaddl
mov
inc
movsb
iret
xor
shrl
mov
mov
sahf
pop
mov
dec
push
jl
rcrl
mov
push
jae
mov
pushf
loope
pop
jb
cltd
popa
lods
dec
cmp
adcl
outsb
cmpsl
pop
mov
jg
insl
inc
enter
push
push
imul
add
jge
lods
dec
shlb
movsb
mov
xor
sub
push
inc
dec
add
outsl
jmp
pop
cmpsb
rclb
fisubrl
jge
inc
inc
xor
sarl
ss
mov
sbb
adcb
repz
and
xchg
push
fnstenv
cwtl
jmp
loopne
push
push
aaa
xor
dec
inc
or
or
lods
and
or
js
pop
pushf
sub
or
fists
addr16
cmp
ss
mov
jle
aas
mov
add
push
inc
dec
or
in
jg
lods
scas
out
ds
or
pop
mov
xor
push
shlb
nop
mov
int3
mov
cmp
sahf
leave
loope
pop
adc
and
or
sbb
add
mov
push
mov
xchg
ljmp
inc
sub
das
add
fsubrl
mov
and
add
cmp
mov
inc
loopne
dec
bnd
xor
mov
ret
ja
sarl
mov
pop
cmp
outsl
pop
ds
nop
mov
push
les
sysexit
xor
mov
icebp
out
lock
and
jecxz
add
and
sbb
ds
xor
popa
int
lret
mov
pop
pop
imul
fcomps
dec
leave
fistpll
inc
dec
out
loope
sub
std
fstpl
push
push
gs
fiaddl
adc
inc
xor
dec
xchg
fistpl
das
jle
mov
cld
inc
insl
mov
fdivl
popa
mov
mov
push
cmpsb
mov
sub
lock
dec
inc
arpl
sbbb
enter
push
mov
dec
sub
clc
inc
in
dec
sbb
and
mov
cmovs
int3
sbb
inc
rcr
dec
cwtl
int3
dec
pushf
push
mov
mov
push
insl
push
sahf
pop
lahf
inc
inc
pop
in
and
xchg
sbb
dec
lret
mov
cmp
pop
addr16
lods
insb
add
and
mov
bound
rolb
pop
shr
nop
arpl
jecxz
pop
inc
test
loopne
das
cwtl
cltd
loopne
in
push
cli
xchg
push
sti
lods
cmp
pop
jecxz
cmp
cmp
add
adc
fidivl
int
xchg
movsb
inc
dec
push
imul
xchg
loope
push
icebp
vpaddb
cmp
or
push
insb
out
or
inc
push
loope
int
pop
stos
inc
mov
push
ds
stos
lret
add
lea
subb
repz
mov
mov
fadds
and
xchg
leave
mov
dec
js
aam
sbb
push
push
aas
test
xchg
loopne
dec
xchg
clc
xchg
shll
inc
xor
jecxz
std
movsl
cs
push
enter
dec
fisubl
push
inc
push
jg
aad
pop
add
subl
pop
aad
adc
shrl
xchg
push
fcmovb
adc
test
aas
mov
mov
inc
xchg
out
and
add
push
mov
push
mov
xor
outsl
fildll
loopne
leave
lods
bound
les
add
addr16
adc
fstps
dec
scas
mov
bound
adcb
push
clc
insl
outsl
or
inc
int3
or
iret
push
dec
lahf
xchg
test
mov
fdivrp
inc
pop
mov
jl
push
fisttpll
orb
jle
subb
mov
or
pop
fldln2
xchg
push
aad
inc
lods
pop
ret
cmpsl
jno
fwait
clc
aad
inc
outsb
test
sbb
hlt
std
mov
test
enter
and
ds
push
fistpl
in
lds
xor
jo
mov
imul
push
aas
mov
arpl
mov
push
in
mov
adc
insl
loop
sub
xorl
xchg
jne
jmp
or
cmp
fsubrs
clc
push
jle
dec
or
mov
push
push
imull
in
xchg
sub
daa
insb
sbbl
in
dec
adc
inc
ret
adc
and
lret
xor
inc
adc
fidivl
push
daa
inc
push
mov
jl
pop
xchg
out
push
dec
sbb
iret
test
or
nop
lods
push
or
sarl
sbb
clc
mov
arpl
ret
sub
rcrl
cmp
jns
dec
cld
sbbb
sub
shrl
cmp
fsubrl
pop
sti
iret
adc
pop
cmc
into
pop
gs
sbb
lods
xor
stos
stos
inc
iret
adc
dec
scas
pop
arpl
pop
pop
or
dec
or
jae
push
pop
push
popf
inc
adc
faddl
ror
push
dec
and
jp
sbb
mov
repnz
xor
sbb
aam
sub
pop
and
cmc
stc
rcrl
adc
aaa
pusha
mov
or
lods
mov
lds
movsb
sbb
pop
xor
xchg
rolb
out
jbe
mov
xor
inc
fwait
mov
das
data16
jbe
sbb
mov
lea
pop
ss
pop
pop
out
xor
repnz
add
jnp
notl
ss
ljmp
pop
xlat
sub
movsl
cld
pop
pusha
test
cwtl
mov
cmp
ds
sub
rcll
out
mov
mov
dec
push
pusha
inc
sub
andb
or
lcall
xor
enter
mov
xchg
loope
pop
jg
insb
sbb
jbe
dec
push
in
mov
inc
dec
outsl
and
arpl
int3
sub
aas
mov
pop
sbb
addr16
cmp
test
aad
mov
aam
hlt
nop
sbb
xchg
inc
push
dec
and
dec
add
lea
xchg
dec
mov
fwait
sub
icebp
mov
mov
pop
outsb
mov
push
jecxz
and
negl
movsl
mov
sar
lcall
jbe
push
xchg
xor
mov
fistl
sbb
test
mov
mov
rol
lock
loop
call
lods
xor
pop
push
sbb
mov
dec
inc
roll
sar
cmp
out
imul
or
sbb
xor
sbb
div
push
pop
loop
lds
push
sbb
arpl
leave
xchg
pop
mov
inc
dec
ja
repz
xchg
or
or
push
sbbl
bound
std
imul
repz
dec
popa
push
rcrl
int3
fcomps
xchg
fimuls
mov
dec
test
pop
xlat
jae
imul
and
leave
ss
call
fsincos
inc
dec
mov
jnp
rorl
das
mov
cmpsl
sub
mov
push
xor
xor
aas
pop
push
dec
jle
lods
ficompl
cmp
mov
or
dec
mov
push
outsb
js
arpl
dec
cli
idivl
hlt
jmp
out
dec
fsubrl
jle
dec
sub
xor
and
mov
call
cmp
pusha
dec
fdivr
ficompl
fists
inc
stc
pop
push
es
mov
cmp
and
lret
call
sbb
adc
loop
push
jp
popa
cli
imul
repz
icebp
sbb
jmp
scas
daa
cmp
imul
inc
and
int3
leave
push
les
jecxz
or
mov
dec
enter
xchg
jle
xchg
mov
sub
cmpsb
ret
mov
dec
loop
or
jmp
dec
cmovns
xor
push
test
sbb
inc
sbb
je
dec
add
fldt
add
or
pop
inc
push
dec
inc
sub
sbb
pushw
hlt
mov
and
mov
out
pop
pop
or
aas
testb
iret
sub
sbb
out
pop
mov
cs
dec
mov
std
jb
dec
in
fcmove
push
push
leave
addb
lods
cmp
cmp
push
cmp
in
pop
pusha
push
aad
test
loopne
push
adc
sbbl
test
stos
ljmp
mov
add
shlb
dec
fistpl
jb
push
mov
insl
fs
dec
pop
or
das
jmp
or
dec
testl
lock
cmpsb
out
sub
popa
inc
fcom
mov
out
mov
ds
xor
insl
dec
adc
jno
dec
mov
addl
dec
push
adc
dec
pop
or
dec
or
cmpsl
insl
lods
push
dec
ds
pop
repz
push
ss
xchg
sbb
stos
push
xchg
jmp
dec
push
adc
inc
xchg
push
or
fistpl
push
repz
pop
inc
dec
stos
sub
lea
sahf
add
xchg
and
cmpsb
xchg
adc
cwtl
pop
out
push
dec
jae
jle
out
dec
enter
dec
cmp
aas
mov
mov
cmp
sti
xchg
ss
mov
rorb
jae
push
inc
into
loop
pop
shrl
mov
pop
mov
out
mov
jns
jne
pop
dec
dec
pop
movb
push
shr
fstpl
dec
push
push
enter
mov
push
ffreep
mov
jecxz
fistps
enter
jle
clc
test
jb
lret
imul
inc
lds
mov
cltd
jnp
addl
mov
dec
jae
xor
xor
fisubl
rolb
fwait
mov
lock
pop
cmp
outsb
clc
mov
fimull
or
mov
cs
jae
dec
loop
push
xchg
inc
pushf
rcl
xor
jmp
dec
scas
dec
jb
adc
hlt
mov
jle
std
push
mov
shl
arpl
adcb
add
lea
addl
xor
std
xchg
jle
pop
mov
sarb
icebp
cmp
call
cmp
dec
aad
push
push
xchg
repz
lock
add
mov
push
or
xor
ret
xchg
in
imul
and
pop
xor
cmc
shrb
inc
imul
mov
sbb
shrl
les
aad
xchg
loopne
sbb
inc
imul
sub
lret
jg
cmp
mov
sar
ljmp
xchg
mov
adc
outsl
jmp
push
push
ljmp
ret
mov
adc
pop
ret
insl
dec
sbb
adc
iret
xchg
inc
jl
sbb
and
mov
pop
mov
jno
cmp
pop
sub
xchg
les
bound
mov
or
push
sub
sub
rol
add
push
daa
fidivrl
sub
xor
in
push
dec
fidivrl
lcall
adc
fidivs
mov
jbe
jecxz
inc
or
shll
xor
xchg
xchg
xlat
lret
insl
cmp
sub
mov
aam
push
jp
sub
dec
dec
dec
xor
mov
inc
mov
cltd
mov
jmp
mov
ret
jns
sub
ficoml
add
loopne
add
mov
cmp
scas
mov
test
cmp
dec
iret
mov
dec
mov
and
daa
lock
leave
jle
scas
leave
dec
mov
sub
in
sbb
push
xchg
mov
movsl
push
inc
leave
bound
mov
js
mov
mov
push
dec
insl
lret
xchg
cli
push
jbe
push
outsb
push
xchg
push
push
fwait
adc
je
andl
insl
hlt
fisubl
outsl
insl
cmp
outsb
in
mov
arpl
mov
xor
mov
in
inc
sub
inc
mov
ret
test
lods
push
mov
sub
loopne
rol
mov
or
jo
leave
arpl
iret
enter
mov
loope
jb
xor
mov
pop
loopne
cmp
push
pop
push
sbb
imul
mov
fidivl
xor
leave
xor
addb
sub
cmpsb
cmp
lea
cmp
scas
jle
dec
rcl
mov
decl
pop
pop
lods
iret
push
lods
outsl
test
int
mov
cmpsb
push
aaa
push
arpl
mov
mov
rcll
add
pop
out
call
push
popl
mov
sbb
clc
dec
call
pop
dec
clc
xor
mov
lods
push
adc
adc
pop
jecxz
daa
loop
sbb
inc
pop
in
adc
popa
mov
cmp
mov
mov
or
pop
out
pop
and
loopne
mov
fmuls
out
leave
sub
or
cld
out
fwait
in
cld
push
and
jecxz
jg
xchg
mov
dec
decl
or
adcb
push
pop
repnz
dec
push
sbb
orb
lods
mov
out
xor
ret
mov
dec
jbe
lods
cmp
pushf
imul
out
push
or
insb
rclb
test
fimuls
mov
mov
mov
adc
jg
mov
out
int
movsl
sub
cwtl
sbbl
pop
mov
xor
inc
or
jbe
ret
outsb
and
and
ret
pushf
sub
aad
lret
xor
js
dec
and
jns
sbb
inc
xor
ret
push
inc
lret
insl
enter
mov
fs
pop
sahf
lcall
mov
fidivrl
pop
dec
shrb
in
ficompl
push
or
cmp
push
sub
cli
mov
incb
fidivs
call
ret
scas
jmp
insb
out
push
adc
jle
shlb
pop
insl
push
addb
jb
xor
roll
jb
loope
xor
add
pop
add
daa
push
cltd
mov
push
in
cmp
inc
loope
push
stos
cmp
orl
enter
lods
xchg
repz
rorl
dec
insb
add
inc
inc
filds
loopne
das
divl
pop
arpl
ss
call
aad
fstpt
aad
out
adc
and
cld
test
or
shll
cmp
in
rcll
imul
xor
or
push
xor
lods
jnp
inc
insb
xchg
scas
xor
jge
cmpsb
icebp
sahf
mov
or
pop
pop
mov
dec
rorb
jno
xchg
push
iret
sub
test
and
xchg
pop
cmpsl
ror
jecxz
pop
fcmovb
inc
pop
xor
mov
ljmp
add
and
in
stc
ret
jae
pop
repz
push
sbb
cli
stos
sbb
adc
lods
cmp
leave
bound
push
sbb
or
adc
jns
aam
pop
test
mov
jns
push
adcb
push
or
xor
xchg
enter
movsl
add
pop
clc
jne
mov
xor
jmp
fildl
and
stos
adc
xchg
xchg
rorb
pop
push
dec
cmc
outsl
test
xlat
mov
repnz
pop
ficomps
bndldx
pop
push
push
clc
jb
push
sub
pusha
and
clc
jno
pop
pop
loopne
mov
xlat
in
mov
cmp
sbb
into
addl
aaa
lret
in
lock
push
insl
or
push
test
ret
adc
imul
out
push
xchg
ljmp
mov
xchg
mov
daa
mov
cmp
pop
sbb
push
aaa
push
pop
int
lds
dec
pop
mov
push
cs
jnp
aam
mov
scas
in
mov
imul
xchg
dec
insl
add
and
orl
dec
and
xchg
and
or
dec
insl
inc
and
insl
daa
jp
inc
cld
std
pop
lods
movsb
cld
inc
jb
add
push
adc
aas
and
lods
mov
es
mov
or
xchg
cmp
cmp
pop
mov
in
aam
pop
lds
cwtl
xor
and
fcmovu
dec
jp
cmpsl
test
pop
cmp
add
mov
xchg
mov
mov
dec
fstl
aas
fdiv
lods
pop
or
addr16
adc
sbb
sbb
gs
fbstp
leave
pop
xor
push
insl
jp
pop
or
xchg
mov
call
inc
xchg
int
mov
lods
jae
pop
cmpsb
push
test
cld
dec
xor
inc
rcrl
mov
dec
lods
sub
imul
mov
add
sti
clc
mov
ret
or
cmp
repnz
xor
fidivl
std
leave
inc
scas
cli
and
icebp
jns
imul
fwait
push
sbb
repz
js
cmp
inc
pop
mov
lret
cmp
ds
subb
inc
xor
pushf
scas
out
pushf
cmp
psrlw
push
add
pushl
data16
loop
inc
xlat
faddl
mov
stc
push
es
ljmp
xchg
xchg
aam
dec
fwait
and
pop
inc
xor
and
cmp
mov
xchg
xchg
shrl
inc
jl
jae
ficompl
dec
arpl
cmp
les
ja
lret
dec
push
in
sarb
cmp
imull
mov
lea
pop
lock
xchg
sahf
rcr
push
lods
stc
xor
in
inc
enter
insb
setg
rorl
pop
mov
sub
cmp
inc
xor
lea
fimull
mov
cmp
inc
or
pop
or
xor
pop
push
lahf
pop
fxch
xor
pop
mov
clc
gs
dec
xchg
sub
scas
mov
fsub
sub
mov
pop
mov
and
xchg
push
int
cmp
jle
movsl
popl
or
mov
inc
insl
lods
fisubrl
fsubl
mov
cmpb
xchg
adc
or
rcrb
ret
adc
adc
repnz
pop
adc
clc
movsl
call
or
shlb
add
mov
add
mov
push
movsl
pushf
lods
mov
pop
push
inc
inc
adc
hlt
fldl
into
pop
scas
mov
dec
lea
les
xor
mov
xor
adc
int
sub
cmp
sbb
call
test
in
mov
inc
xlat
mov
cmp
mov
add
mov
je
inc
jp
and
sbb
sahf
mov
jb
cmp
imul
jb
mov
or
andb
test
xchg
ss
fldcw
push
jmp
jle
clc
mov
mov
push
mov
dec
adc
dec
jmp
mov
xlat
cs
sahf
pushf
xor
notb
jecxz
mov
lret
insl
add
test
push
dec
imulb
adc
mov
es
lret
pop
int
sub
stos
xchg
daa
jecxz
cld
xor
andl
lahf
push
enter
cwtl
adcb
add
rorl
dec
fidivs
adc
cli
insl
inc
push
lock
repz
ljmp
cmp
lds
jbe
or
and
dec
lds
mov
lods
hlt
or
dec
pop
std
mov
sub
or
inc
sub
movsl
jp
or
aaa
jmp
ret
inc
hlt
int
fidivrs
clc
pop
pop
inc
outsb
cltd
mov
notl
shll
aad
mov
or
incb
pop
aaa
int3
mov
mov
push
add
inc
inc
imul
jecxz
and
inc
push
addl
inc
jmp
sub
push
sbb
das
in
sti
cmpsl
xchg
rolb
loopne
push
adc
leave
enter
sub
jmp
cli
xor
enter
daa
ds
fdivrl
or
push
daa
mov
or
mov
pop
lods
push
cltd
and
test
xorl
xorl
cmp
pop
push
sbb
push
mov
repz
sub
or
sub
mov
insl
dec
push
pop
inc
insl
pop
jae
cwtl
jmp
fdivs
shr
ffreep
int
push
dec
sub
stc
inc
inc
xlat
cwtl
push
test
push
mov
and
into
outsb
adcb
inc
pop
out
sbbb
sbb
push
or
ss
sub
lea
subb
jb
aas
dec
sarb
adc
cli
sub
mov
loopne
lret
push
popf
insl
inc
repnz
xchg
mov
mov
mov
arpl
icebp
add
xor
xchg
cld
sbb
push
pusha
fwait
sbb
and
jno
out
aaa
jnp
sub
xor
and
inc
negb
push
lcall
xchg
cmp
dec
push
mov
jne
fldt
imul
lock
ret
jae
inc
rcrb
dec
push
pop
jne
lods
xor
nop
sarb
outsb
ret
pop
imul
orl
pop
dec
cmp
or
test
cmp
sbb
and
sysenter
pop
js
fst
mov
outsb
outsb
or
pusha
pop
sub
pop
in
in
scas
dec
inc
sbb
add
repnz
add
mov
mov
sub
enter
sbb
stos
lods
into
aaa
sub
pop
mov
rcrl
jbe
repz
lock
push
push
mov
add
jns
cmc
test
out
or
and
xchg
sbb
cmp
inc
mov
push
ljmp
in
or
out
flds
jp
idivl
movsl
mov
movsb
jle
sbb
jg
xchg
mov
inc
jmp
cmp
xlat
inc
sub
mov
jg
sbbl
shrl
jnp
dec
popa
mov
add
cmp
xor
push
mov
bound
int
mov
jp
add
test
adc
push
and
cmp
into
dec
xor
clc
lock
adc
leave
inc
addr16
sbb
data16
hlt
sbb
das
or
sbb
mov
xchg
pop
xor
mov
pop
pop
inc
inc
icebp
push
ja
inc
push
dec
ja
stos
xor
out
sub
sarl
cmp
ret
fisubrl
mov
jmp
push
mov
pop
fs
dec
mov
sub
sbb
xchg
xor
dec
sbb
and
into
add
pop
push
in
and
jnp
pop
add
addb
xchg
cltd
popl
sub
mov
shl
add
cmpsb
hlt
loope
jle
hlt
pop
negl
jne
mov
or
scas
test
sahf
sbb
cmp
aad
in
pop
dec
cmp
out
sbb
pop
loop
mov
incl
dec
mov
dec
stos
lcall
sbb
mov
xor
lods
mov
adc
mov
pusha
movsb
fidivl
mov
xor
sub
or
xchg
xchg
arpl
jns
jl
fiaddl
pusha
sbb
push
das
es
icebp
push
ret
movl
fcom
aad
adc
pop
xchg
pop
ja
pusha
xor
add
ja
push
fstps
rcll
aad
add
inc
jnp
data16
push
pop
int
pop
lea
shrl
sbb
xchg
and
mov
loop
jno
adc
hlt
xchg
aad
cmpsl
mov
mov
dec
test
dec
inc
xchg
inc
and
push
xor
fwait
push
movsl
insl
xor
pop
mov
popa
adc
in
scas
mov
cmp
clc
sbb
push
mov
jl
cmp
filds
inc
mov
loopne
scas
mov
inc
ja
push
xor
and
insb
sub
dec
or
ss
enter
push
xchg
loopne
lea
dec
daa
push
imul
sbb
popf
sar
iret
shrb
push
push
xchg
xchg
data16
adcl
sub
or
inc
cmp
adc
pop
sti
fisttps
sbb
aam
adcl
popa
cmp
loop
jl
and
and
mov
mov
jl
mov
call
or
xchg
jb
push
xchg
pushf
mov
ficoml
imul
mov
inc
adc
lods
imul
or
push
dec
sahf
popa
push
pop
mov
xchg
bound
setns
xchg
pop
dec
int
sub
ret
mov
cmp
mov
sbb
test
sbb
ss
lock
mov
cmpsl
aad
aad
pusha
insb
xlat
jne
jmp
xchg
call
push
jl
xor
lods
mov
add
cmp
ret
dec
xor
pop
pop
add
sub
mov
xchg
adc
mov
out
add
and
imul
or
sahf
test
shrb
cmp
sbb
addr16
dec
rorl
adc
or
stos
fs
shrb
pop
xor
jns
ss
jl
push
jle
fwait
jnp
jle
mov
inc
jo
adc
pop
xor
xchg
pop
and
add
addr16
int
int3
sahf
fnstenv
testl
and
fs
xchg
icebp
pop
je
inc
test
push
outsl
mov
fptan
je
ljmp
add
xor
jge
xchg
pop
xchg
lds
lods
sbb
arpl
addr16
into
mov
dec
push
mov
xlat
dec
leave
pop
inc
inc
push
stos
jne
test
and
out
mov
mov
and
adc
sarb
subb
icebp
jg
jne
xor
xchg
pop
mov
mov
daa
push
ficoms
mov
or
xchg
jle
shlb
in
sub
mov
hlt
push
dec
test
or
cwtl
sti
inc
hlt
xor
pop
cmp
hlt
fistl
sbb
xorl
sub
repnz
pop
pop
jns
sbbb
or
stos
xor
and
push
dec
leave
rorb
je
fwait
mov
imul
stos
jecxz
es
sub
sub
lahf
sbb
test
xchg
inc
fimull
jge
clc
xchg
aaa
push
dec
sbb
sbb
data16
aaa
sub
add
mov
mov
xor
pop
incl
jl
push
sarl
mov
xorl
aam
push
gs
fidivrl
mov
fnstenv
adc
aas
test
push
jg
ret
sub
cmp
dec
xor
hlt
jmp
movsl
aad
push
adc
jne
pop
bound
enter
mov
push
or
aaa
lods
dec
add
push
mov
cmp
jmp
push
outsb
lret
xor
cmpsb
inc
xchg
enter
call
mov
push
in
xchg
cmp
push
lods
ficompl
cmp
xor
and
idivb
insl
pause
inc
sbb
aas
mov
push
pop
or
pop
fisubs
lods
mov
scas
adcb
ss
or
or
mov
enter
inc
push
or
data16
lahf
push
stos
mov
or
or
push
inc
adc
insb
mov
jg
mov
add
mov
sub
pop
subl
cmp
outsb
sbb
pop
bound
frstor
fcoms
mov
jle
aam
inc
jmp
jno
and
lds
adc
jle
push
xor
imulb
orb
addr16
jle
pop
scas
xchg
ret
sbb
stos
sbb
cmp
xlat
inc
fs
xor
add
fcoml
movsb
dec
add
push
in
imul
jae
pop
into
cmpsl
adc
mov
adc
push
add
insl
pop
ss
andl
push
cmp
jmp
aam
mov
fistl
adc
or
inc
or
or
sbb
lea
nop
pop
js
mov
inc
in
mov
pop
adc
xor
test
pop
stos
adc
ja
xchg
inc
les
inc
scas
lret
push
mov
aaa
cmp
and
movsl
adc
jne
aam
popa
sub
clc
mov
adc
push
popf
sbb
add
lahf
and
sub
xchg
or
sbb
sbb
pusha
clc
rol
fnstcw
mov
dec
lcall
stc
and
call
pop
mov
sub
sahf
jl
mov
es
xchg
roll
add
int
inc
xchg
cmp
test
in
push
xchg
arpl
inc
cmp
loop
mov
test
jecxz
sub
mov
add
xor
sbb
push
hlt
rolb
outsl
and
mov
aam
lcall
dec
cltd
xorb
sub
push
rcrl
rcrl
add
shrb
add
xor
sbb
int
push
fwait
pop
push
out
iret
sub
mov
ret
and
add
cltd
push
fmuls
dec
inc
xchg
add
notl
or
inc
sub
cmpsb
shll
push
cmp
mov
sbb
xchg
sbb
out
insb
mov
push
dec
fimuls
enter
and
push
loopne
nop
mov
pop
clc
dec
cmpsb
test
push
pop
xor
inc
cmp
scas
xor
lcall
mov
push
push
inc
inc
push
jbe
sbb
jp
cwtl
inc
pusha
dec
sbb
add
movsl
cmp
mov
adc
push
push
push
imul
mov
loopne
jge
xor
mov
mov
xor
and
mov
pop
in
jl
xor
subb
lods
bound
adc
push
mov
lea
and
frndint
cmp
adcb
les
adc
stos
push
ja
xchg
sub
notb
xor
inc
push
push
clc
nop
jo
sub
loopne
inc
mov
or
sbb
shrb
lods
inc
dec
jp
arpl
lods
gs
cltd
inc
mov
inc
sub
push
cmpsl
jl
sub
jl
fnstcw
and
mov
das
jmp
pop
push
inc
mov
dec
inc
les
lods
ds
leave
cmc
cmp
hlt
and
xchg
insl
push
push
lods
ficompl
jecxz
imul
xor
xor
and
mov
pop
cmp
inc
daa
test
dec
mov
xchg
inc
xchg
sbb
xchg
call
rol
inc
mov
jae
xchg
mov
fistpll
je
out
xchg
cmpsb
iret
dec
in
sahf
adc
sbb
jns
cmp
insl
aad
call
mov
rorb
fisubl
dec
inc
test
inc
fwait
xor
idivb
push
jmp
stc
arpl
or
lret
dec
dec
sub
dec
fsubrl
cmp
xor
sahf
out
jmp
flds
nop
ljmp
cmpsl
inc
or
pop
lahf
adc
mov
jp
mov
aas
mov
bound
movsl
xor
sbb
pusha
ficomps
outsb
test
mov
fnstenv
out
pop
js
in
adc
xchg
ret
and
test
enter
inc
jmp
mov
mov
dec
push
cmp
lods
lods
insb
sbb
dec
aam
pop
xor
das
mov
sbb
and
aaa
mov
or
fs
lock
inc
and
int3
outsb
xlat
enter
inc
and
or
out
push
cmp
sbb
es
cld
repz
xchg
xchg
loopne
aam
lea
mov
mov
xor
add
loopne
cmp
jb
out
add
or
stos
pop
nop
mov
xchg
leave
out
and
pop
or
dec
push
mov
sbb
adc
add
out
lods
dec
es
test
addr16
ja
addr16
out
fisttpll
int3
pop
aad
insl
dec
xor
sahf
pop
push
mov
repnz
fs
jecxz
adc
add
pop
lea
lods
jg
out
ss
rcl
mov
rclb
add
inc
test
mov
fimull
sub
jl
popa
lock
mov
imul
call
xchg
ret
jl
xlat
jb
dec
sbb
cmpsl
pop
bound
inc
dec
xchg
sub
dec
ret
in
icebp
cld
cmp
jp
aam
aad
mov
loopne
jnp
dec
xlat
sbb
inc
sahf
stc
mov
sub
dec
push
nop
mov
push
and
adc
mov
out
xchg
stos
adc
dec
sarl
sub
jmp
and
lods
cmp
pop
xchg
sbb
je
mov
sub
ror
sbb
ja
mov
shll
test
aad
add
leave
aam
pop
dec
fwait
or
sub
mov
adc
mov
sbb
jle
jne
xor
dec
pop
inc
mov
or
add
clc
cmp
insb
lcall
add
inc
push
push
xor
jl
dec
jmp
cmp
push
imul
mov
mov
dec
sti
jbe
mov
ja
xor
xchg
out
pop
and
dec
xchg
mov
in
mov
fnstenv
dec
out
cmpsl
push
imul
les
aad
or
dec
pop
push
dec
sbb
push
dec
fmull
fstps
stc
cli
pop
inc
sbb
inc
rcrl
and
or
inc
adc
aam
xchg
push
popf
sub
xchg
nop
rcll
sbb
orl
or
in
or
out
push
xor
inc
push
push
pop
mov
sbb
ljmp
sub
adc
xor
push
stos
and
mov
hlt
pop
sti
mov
mov
scas
dec
pop
push
icebp
ja
pop
inc
ljmp
insl
xor
mov
mov
dec
add
sbb
sbb
arpl
sub
and
test
xlat
out
test
jecxz
cltd
fmull
xor
sbb
pop
scas
pusha
bound
leave
xchg
cvttps2pi
mov
push
inc
ja
out
incb
addr16
popa
and
fmuls
or
push
out
xchg
inc
adc
xor
das
jns
cli
pushf
push
fidivrs
or
sbb
add
xor
ret
add
xor
adc
sahf
pop
inc
pop
scas
or
arpl
lret
call
jnp
dec
sbbl
aam
inc
mov
scas
and
cmp
push
mov
sub
xor
popf
and
out
cltd
xor
cwtl
jnp
pop
into
push
pop
movsl
test
inc
popf
sbb
lret
cmpsl
scas
mov
add
or
cmp
or
fimuls
pusha
xchg
cmp
mov
xor
inc
mov
ss
ret
fcmovbe
divb
int
aam
insb
add
out
stc
xor
insb
xchg
dec
pop
sub
xor
inc
in
adc
or
adc
dec
or
or
mov
addr16
pop
dec
inc
mov
arpl
pop
lret
popf
jmp
fwait
push
xor
inc
or
mov
bound
jecxz
dec
dec
sarl
push
les
jmp
push
jnp
mov
mov
lret
adc
jp
scas
lods
or
loopne
cmp
into
xor
inc
sub
adc
sbb
jnp
lea
xor
add
inc
dec
jae
cmp
aas
and
out
dec
fidivl
mov
sbb
inc
lock
cmp
mov
je
stc
test
mov
mov
xorl
out
aad
imul
and
inc
inc
mov
add
ja
cli
dec
adc
lds
xchg
insb
lret
repnz
daa
sbb
pop
les
sbb
xor
ss
sahf
in
test
jle
adc
movsl
dec
leave
dec
int
or
outsl
or
pop
imul
and
adc
xor
fs
push
or
cs
les
aad
sub
xlat
lahf
push
and
inc
leave
arpl
into
xor
hlt
shll
push
mov
push
cmp
jecxz
push
inc
shlb
inc
fchs
and
mov
clc
add
sbb
cmp
mov
loope
push
xchg
jb
xor
insb
pop
sub
aaa
cwtl
mov
or
pop
je
lret
jb
fcom
mov
mov
mov
dec
clc
clc
mov
xchg
test
repnz
lds
pushf
cmp
push
ffreep
iret
xor
xor
ss
arpl
pop
lods
jl
jbe
es
fcmove
jo
push
shll
mov
in
push
push
xchg
iret
xor
xchg
das
or
add
fsubrl
in
jae
fwait
loopne
mov
and
mov
and
dec
mov
push
into
icebp
push
sahf
push
pusha
or
push
mov
fidivl
pop
mov
enter
in
cmpsb
fcoml
mov
mov
cmp
add
int
mov
lret
inc
and
lock
xor
cmc
shl
mov
push
int
lods
clc
mov
push
push
roll
sbb
or
dec
sbbb
or
shrb
pop
mov
mov
add
mov
push
xchg
icebp
inc
outsl
int3
and
rcrl
push
cmp
sub
fidivrl
jge
or
mov
shlb
ret
aam
jle
arpl
pop
out
loope
add
dec
imul
aaa
push
xchg
mov
es
pop
pop
out
or
xchg
imul
cmp
and
xor
stos
xor
dec
cmp
into
dec
push
push
aas
sbb
out
dec
fisubl
sbb
mov
sbb
jmp
dec
inc
mov
idivl
pusha
outsb
rcll
mov
xchg
inc
add
add
jle
mov
sbbl
out
dec
out
ds
lods
push
xor
push
lods
sub
dec
nop
out
jns
repnz
mov
lret
sbb
jnp
jb
pop
mov
sbb
mov
and
xchg
and
and
daa
fmul
mov
push
mov
iret
jl
lods
adc
push
ret
hlt
loopne
dec
jecxz
iret
sahf
push
rorb
xor
push
incl
loopne
testl
jge
mov
xlat
xor
jp
xchg
cltd
jmp
dec
das
aad
xchg
iret
mov
add
sub
mov
mov
xor
lods
aam
push
cmp
lahf
jg
in
fs
adc
pop
pushf
xor
add
fwait
mov
sub
sbb
enter
mov
or
cld
cmp
sub
repz
mov
fwait
mov
test
and
xor
mov
ret
fisttpl
lret
pop
or
popf
imul
adc
leave
inc
jl
jge
xor
cltd
mov
cmovbe
mov
mov
push
sti
dec
pop
repz
push
mov
das
xor
idiv
clc
jmp
or
jae
popa
dec
in
mov
insl
ljmp
dec
xor
inc
add
imul
jmp
dec
push
adc
out
cli
xchg
sub
movsb
fisubrl
xchg
inc
rcll
ljmp
xor
pushf
cmp
test
hlt
insb
add
dec
or
iret
add
psubd
sub
je
cmp
inc
push
jns
cmpsb
push
cmpsb
mov
inc
ret
fwait
jb
adc
imul
outsl
push
sbb
lock
test
data16
inc
out
popa
sbb
jnp
test
push
jo
lret
sahf
xor
pop
jmp
mov
fmuls
cwtl
cltd
cmp
sub
shlb
or
scas
inc
jns
call
es
sbb
fimull
sahf
insb
mov
push
cmp
arpl
xchg
roll
jmp
sub
iret
and
sub
jle
scas
push
jl
xor
cmp
jnp
sub
xchg
or
xchg
rcrl
jbe
popf
inc
fldcw
and
sub
dec
test
fists
into
mov
addl
ret
add
adc
adc
shll
xor
mov
xchg
mov
sbb
enter
call
add
loopne
fimuls
xchg
iret
push
add
xchg
hlt
mov
push
int3
lods
lcall
bound
insb
xor
bound
xor
sub
adc
mov
sub
push
mov
aas
hlt
movb
mov
out
pop
inc
call
sbb
and
push
sbb
mov
xchg
leave
pop
push
lret
rcll
add
movsb
test
mov
jg
push
sub
push
jg
xchg
pusha
ja
jle
pop
loopne
xchg
cmp
cmp
lods
dec
pop
sti
lret
ficompl
fnstcw
dec
lcall
mov
imul
or
in
add
push
cs
in
mov
mov
cmpb
imul
cltd
inc
aaa
fs
inc
mov
xchg
pusha
add
addb
push
pop
push
fisubs
push
roll
fisubl
sbb
pop
dec
out
sub
xchg
lret
fsubrl
mov
subb
push
push
loope
inc
push
xchg
ss
mov
addr16
cmp
mov
jns
jo
xchg
leave
and
call
aas
ficomps
js
mov
jb
mov
inc
lods
cmp
xchg
aam
inc
or
lods
pop
add
cmpsb
and
iret
mov
mov
mov
push
imul
in
mov
jbe
inc
outsb
mov
icebp
call
sbb
mov
test
imul
or
fisttps
clc
insb
jnp
pop
and
into
insb
push
insb
inc
lea
adc
sub
push
cmp
cld
cltd
mov
inc
insb
jl
mov
hlt
cmp
mov
adc
dec
mov
and
mov
mov
fidivrl
bound
adc
push
lods
pop
shlb
or
lret
call
dec
push
and
lods
ret
or
shrl
inc
fidivrl
insb
test
call
shlb
dec
cmp
xchg
push
mov
pop
pop
xor
pusha
scas
enter
adc
leave
xchg
jne
xchg
mov
cltd
or
mov
cmp
shlb
or
mov
jb
xor
cltd
mov
push
enter
leave
xlat
scas
inc
sbb
repz
jae
bound
lahf
cmovns
pop
sbb
aam
std
xchg
test
pusha
aad
repz
sbb
jge
adc
je
jns
pop
push
loope
jg
push
cmp
or
or
in
mov
das
sub
aas
lods
push
cmc
push
out
ja
test
cmc
in
or
sbb
jecxz
lret
cld
inc
cltd
pusha
and
pop
in
mov
int3
inc
sbb
xchg
dec
ret
sbb
xorl
aam
inc
jo
add
cmpsl
inc
fnsave
jl
out
repnz
lea
cmpsb
fiaddl
jne
iret
rcrb
pop
sbb
cmp
dec
dec
dec
lret
dec
inc
push
movsl
mov
leave
bound
mov
aaa
gs
and
les
movsb
fnstcw
pusha
imul
aas
lea
and
insl
ret
jbe
sub
xor
daa
cmp
push
leave
pop
js
mov
mov
test
xor
iret
and
clc
add
in
xor
push
xor
adc
fiadds
mov
mov
pop
or
ret
xchg
leave
xor
repnz
test
testb
jl
sti
sub
mov
xor
and
in
sahf
test
mov
pop
jmp
enter
pop
das
imul
or
mov
or
xor
lods
popa
jb
push
sarb
pop
inc
xor
mov
jmp
repnz
lds
sub
mov
push
inc
or
jmp
inc
enter
xor
pushf
sbb
jl
sbb
call
pop
mov
es
aas
sbb
mov
test
cmp
aas
adc
jecxz
pop
fdivs
hlt
punpckldq
addr16
push
test
sub
and
cs
inc
decl
out
enter
fstps
cwtl
xchg
dec
test
dec
ljmp
insb
mov
sbb
mov
repz
repz
add
push
and
sub
inc
pop
enter
push
xlat
sti
mov
sahf
pop
loopne
mov
incb
leave
xor
jmp
jbe
pusha
inc
sub
mov
mov
cmpsb
lods
xlat
cmp
roll
and
xor
push
int
mov
cmp
dec
fcoml
leave
dec
push
fwait
push
cmc
pop
mov
mov
pop
dec
mov
lcall
xor
pop
push
leave
pop
adc
loop
pop
fnstenv
ret
push
hlt
mov
lret
push
hlt
mov
sbb
inc
insb
sub
xor
xchg
lods
scas
dec
push
mov
adc
mov
jne
sbb
arpl
mov
int3
fisttpl
mov
stc
mov
add
shrl
cmp
pop
fstl
cmp
sub
dec
push
leave
xchg
jnp
sbb
movsl
cltd
call
call
outsb
lock
aad
jmp
and
or
push
fstl
jecxz
xor
test
mov
adc
push
in
xor
sub
pop
adc
leave
inc
bound
xor
cmp
sbb
or
sbb
xor
in
fs
pusha
inc
adc
mov
add
cwtl
ror
fistpll
mov
xchg
insl
mov
rclb
cmp
xor
icebp
push
sbb
cltd
jns
jmp
jo
xor
orl
pop
jno
jns
and
jns
xchg
push
repnz
pop
jns
add
mov
arpl
sub
and
jg
icebp
jmp
jle
sub
fcoml
fisttps
ja
jmp
loop
push
add
test
push
xchg
and
leave
cmp
xor
stos
or
add
mov
add
sbb
test
test
dec
sbb
mov
movsb
mov
cli
jns
mov
and
or
cmpsb
cmp
or
aas
mov
or
js
mov
jbe
pop
dec
cli
cmp
pushf
cmc
imul
push
test
push
or
mov
jp
out
push
xor
push
loop
pop
bound
fwait
sbbl
pop
sub
pop
aad
jecxz
addb
dec
xor
js
or
and
clc
aad
mov
les
jecxz
or
jnp
bound
testb
iret
fmull
xchg
inc
ds
sub
jp
cltd
mov
pop
loopne
sbb
ss
pop
call
xor
cli
ret
loop
pop
aad
cltd
or
ficoml
icebp
insb
mov
loopne
loop
inc
fimuls
and
int
mov
xchg
cmp
icebp
cmp
jmp
push
push
pop
pop
pop
inc
movb
popa
xorb
push
nop
loopne
or
or
lret
pop
mov
inc
xchg
adc
push
inc
or
push
cli
push
ss
mov
adc
repz
cmp
pop
xor
fldcw
int3
mov
pop
and
cmpsb
push
sbb
lods
jae
fisubl
ja
ret
jle
sahf
fwait
pop
ret
pop
xchg
mov
sahf
imul
push
hlt
iret
jb
push
outsl
xchg
test
imul
xor
fidivrl
jbe
jg
jbe
inc
inc
inc
cmpsl
mov
xchg
or
arpl
ja
mov
cmpsb
sub
fs
clc
push
add
lods
xchg
mov
popf
dec
adc
bound
lret
sbb
ds
inc
movsb
add
in
dec
mov
in
cmpsl
xchg
leave
inc
add
divl
inc
mov
push
cmp
mov
mov
mov
das
fisubl
movl
mov
mov
dec
fnstcw
cld
lahf
stos
inc
push
repz
mov
mov
xchg
and
cltd
test
sbb
xchg
fstps
mov
sub
ret
test
test
pop
mov
mov
addr16
cmpb
sbb
xor
mov
pop
sbb
cmpsl
xchg
or
insb
jb
adc
mov
test
negb
mov
inc
cmpsl
sub
je
push
clc
cmp
loope
daa
inc
out
test
stc
fcmovnb
int
inc
adc
es
test
lcall
or
mov
xor
or
dec
xor
inc
test
sub
mov
adc
and
inc
cmpsl
push
mov
dec
jae
mov
jle
or
mov
std
or
dec
aaa
int
loop
jl
nop
sbb
roll
sarb
ret
push
dec
stos
punpcklbw
pop
inc
cmp
addb
xor
pop
and
clc
inc
dec
negb
pop
imul
mov
hlt
jmp
push
je
xchg
int
fs
adc
and
push
pop
and
das
and
pusha
push
push
jg
mov
add
pop
mov
shll
popf
fimull
adc
call
xor
adc
inc
dec
call
sub
data16
add
mov
dec
jp
ret
inc
lock
push
mov
add
and
icebp
in
out
add
mov
dec
push
dec
inc
test
pop
mov
rclb
adc
pop
jnp
cmp
pop
fdivrs
pop
mov
subb
push
jo
sub
add
xor
dec
pop
es
push
sub
xchg
mov
jp
push
push
lods
int3
stos
fidivrl
pop
sahf
ja
add
gs
or
test
clc
pop
gs
movb
icebp
out
jl
add
inc
pop
loop
mov
rolb
or
dec
xlat
pusha
mov
inc
sbb
sbb
sahf
inc
sub
sub
cmpsb
xor
cmp
pop
out
xchg
jle
jae
aam
inc
dec
dec
jo
or
insl
hlt
sahf
xor
in
mov
in
adc
nopl
rorl
arpl
test
ja
cmp
sbb
test
dec
sbb
inc
xchg
rolb
unpcklps
data16
test
sub
xchg
jp
pusha
test
inc
dec
dec
push
jg
dec
fadds
in
call
ds
out
sbb
int
xchg
popa
or
fs
les
movsb
adc
xchg
or
push
and
pop
into
mov
adc
clc
add
mov
call
xlat
jno
cli
dec
repnz
add
ret
dec
aas
insb
stos
fnstenv
mov
pop
daa
pop
dec
lret
loop
fisubrs
out
cli
adc
push
inc
in
in
sub
bound
push
leave
test
stos
cld
push
adcl
sarl
shll
movsl
into
dec
cmp
sub
mov
leave
inc
or
mov
mov
psllq
xchg
push
scas
lret
dec
pop
push
pop
add
xlat
test
mov
xchg
insb
push
inc
xor
jns
push
sbb
or
pop
ja
xor
outsl
jl
loope
lret
mov
add
mov
and
mov
pop
inc
test
and
or
test
adc
fmuls
pop
loopne
or
popf
cmp
jl
inc
daa
sbb
dec
push
rorb
jne
sub
sbb
sub
pop
pop
inc
jo
jle
mov
cmp
imul
or
and
cmp
dec
or
pop
out
gs
dec
clc
jle
daa
sub
mov
push
shlb
push
rcll
repz
les
lahf
mov
lock
xchg
jb
and
rcll
sub
test
pop
jp
mov
loopne
jle
cmp
inc
arpl
int
sbb
push
in
int
loopne
fisubl
lods
pop
pop
out
imul
xchg
xor
mov
and
push
loop
aam
push
popa
repnz
test
aad
out
pop
cld
push
test
pop
je
fstps
push
sub
cmp
mov
inc
jnp
repz
test
arpl
xlat
pop
xchg
loopne
mov
out
push
mov
and
xor
jmp
xor
xor
jl
push
in
push
fstp
sub
and
lds
sub
ds
scas
jp
js
loop
ret
pop
mov
xlat
pop
xor
xchg
ss
jmp
push
xchg
lods
roll
inc
jne
pusha
flds
jne
lods
cmpsl
pop
mov
shlb
inc
sbb
iret
jnp
test
out
mov
sbbb
insl
jne
lss
fsts
sub
ret
and
nop
mov
and
out
inc
insb
aas
dec
pop
inc
out
push
cs
ficoml
add
inc
push
pop
hlt
out
clc
rol
dec
out
jmp
xor
jp
mov
dec
loopne
pop
test
cs
pop
and
fisubs
sti
clc
xchg
sub
xchg
incl
fwait
mov
or
adc
test
ficoml
mov
sahf
push
movl
mov
or
mov
cmp
arpl
sub
inc
jae
xor
xor
dec
mov
sub
scas
and
pop
dec
fmull
in
leave
and
jno
adc
ja
mov
fsubl
jge
stos
bound
in
mov
pop
mov
roll
loop
pop
jmp
inc
fistps
pop
push
xor
fsin
mov
push
inc
sub
add
push
pushf
xor
push
jmp
and
mov
ja
fsts
and
cmp
pop
xor
mov
aaa
inc
enter
cmpsl
sahf
xor
outsl
inc
dec
mov
cmc
pop
sub
out
sbb
std
cmc
mov
sbb
add
test
aaa
iret
insb
push
int
pop
lea
clc
cltd
stos
adc
push
mov
ljmp
fs
leave
daa
dec
adc
dec
insb
fiaddl
mov
push
xor
aam
and
jae
push
ljmp
inc
lds
aam
stc
stos
imul
hlt
or
movsb
testb
icebp
mov
shlb
mov
inc
fdiv
or
lcall
inc
cmpsl
imul
mov
lds
pop
pop
jb
xor
lods
scas
lcall
mov
push
sbbl
xchg
rclb
mov
mov
rcrl
sub
xor
inc
inc
inc
pop
push
sbb
popf
sub
in
sub
adc
arpl
xor
insb
xor
ret
mov
fiadds
jg
mov
aad
test
xor
jnp
or
cmp
hlt
sbb
push
divb
arpl
dec
aaa
mov
push
push
lahf
sbb
lea
das
fisttpll
ret
fistpll
adc
dec
add
lods
bound
xor
or
pop
pop
fptan
dec
xor
pop
xchg
pop
inc
jmp
and
or
mov
outsl
les
mov
sbbl
ret
bound
leave
mov
mov
add
pop
add
sbbl
xchg
loope
or
mov
xchg
sbb
cmp
les
push
mov
sub
out
cld
test
and
xor
jle
imul
dec
arpl
nop
subb
xchg
daa
dec
cmp
aam
jp
pop
pop
lods
mov
inc
insb
pop
ret
add
dec
shrl
or
fcmovnu
xchg
lods
mov
test
add
insl
inc
sbb
dec
dec
cltd
imul
sub
in
sahf
add
es
jae
sub
or
sbb
icebp
jl
sbb
push
sbb
and
fs
inc
or
ss
clc
dec
pop
xlat
push
push
sbb
hlt
push
and
addl
dec
cmpb
xor
or
popa
push
or
out
sbb
mov
inc
or
scas
mov
and
push
cmpsl
jl
shl
push
cmp
bound
sahf
loopne
les
jmp
sbb
or
and
cmp
mov
add
pop
pushf
push
jle
mov
jl
movsb
int3
nop
mov
lret
xchg
fdiv
ljmp
fs
add
mov
cmp
xor
xchg
test
ficoms
sbb
inc
or
mov
cld
fldenv
test
xor
dec
sbb
shrb
fs
cmp
jg
int3
xor
incl
pop
mov
inc
fisubs
call
sub
mov
cli
rcl
mov
push
addr16
ret
fiaddl
inc
push
ret
add
adc
and
fdivrl
test
inc
xor
mov
insb
ss
dec
and
notb
push
lock
fwait
sbb
mov
daa
push
mov
pop
jo
inc
loope
fdivs
dec
cmp
or
ja
or
jp
arpl
rorb
lahf
dec
add
pcmpgtb
dec
sarl
fdivs
cmp
les
in
xor
lods
pop
out
insl
leave
mov
adc
std
mov
cmp
out
xchg
leave
add
stc
fyl2xp1
lods
pushf
pop
fwait
inc
in
int
add
sbb
xor
in
ucomiss
sbb
cmp
jbe
insl
mov
movsb
dec
inc
mov
inc
cli
imul
cmpsl
insb
and
inc
leave
fildl
push
xor
add
or
mov
adc
insl
mov
jnp
push
iret
jne
repnz
imul
cmp
pop
inc
imul
cltd
cmp
xor
dec
and
jp
inc
fimuls
sub
push
pushl
out
or
mov
shll
sub
cmpl
adc
mov
and
test
mov
or
add
cmpsb
pusha
in
adc
inc
call
xchg
lock
adc
add
lret
sub
fdivrl
stos
js
mov
hlt
sarb
mov
mov
mov
adc
cmp
mov
sbb
push
pop
in
inc
mov
fistpl
popa
jns
jae
pop
dec
ja
aam
jg
dec
mov
stc
fwait
sbb
adc
mov
jnp
adc
imul
and
loop
sbb
xchg
mov
or
push
xchg
call
andl
or
adc
ficompl
push
cmp
push
lods
xchg
inc
movsb
push
xchg
loopne
pop
sti
xor
sub
aas
inc
outsb
cmp
xor
mov
pop
jg
add
jle
imul
testl
xchg
stos
insb
lahf
mov
xchg
push
out
int
inc
daa
jo
add
mov
fisubl
lret
jae
cld
sub
pushf
push
sbbb
ds
rol
sbb
inc
mov
mov
loop
lea
dec
adc
jl
daa
sbb
and
xchg
inc
push
imul
inc
mov
scas
addb
lods
xchg
push
dec
cmp
xlat
or
lret
xor
sub
fldln2
scas
sub
push
es
push
mov
aad
dec
xchg
mov
sub
dec
or
lret
inc
hlt
jp
dec
inc
add
movsb
adc
mov
xchg
push
inc
dec
inc
lock
insb
pop
xlat
inc
adc
jle
mov
or
scas
hlt
loop
push
xor
popf
in
iret
add
add
arpl
mov
lock
push
and
and
inc
inc
loopne
pop
xor
fstl
jmp
fs
insl
xor
or
int3
adc
mov
imul
push
rorl
cmpsb
imul
cmc
pop
xor
in
je
lock
inc
jae
push
sbb
jb
jns
cmpsl
pop
insl
cmp
inc
cld
das
enter
jno
scas
insl
push
pop
push
test
jbe
jb
push
mov
sub
enter
aad
push
pop
mov
push
xor
mov
mov
xchg
jecxz
cmp
push
popa
in
pushf
dec
mov
add
inc
dec
cmp
orl
aad
fists
xor
jo
arpl
cmp
rclb
mov
test
movsl
inc
cmp
scas
inc
or
ret
xor
into
flds
push
sarb
xchg
mov
sub
inc
inc
cmp
pop
pop
pop
jmp
push
mov
xchg
arpl
add
scas
sub
loop
mov
les
lret
push
sbb
cmp
jnp
sbb
and
or
sbb
out
in
outsl
pop
pop
movsl
ret
mov
pop
or
mov
jns
push
jle
push
subl
and
cs
in
mov
add
insl
push
jo
dec
or
inc
mov
inc
add
ds
ja
mull
rcll
cmp
mov
sbb
bound
and
jb
xchg
sbb
add
leave
mov
aam
pop
xchg
mov
std
dec
cmp
push
scas
int3
mov
outsl
dec
push
add
cltd
pop
add
mov
or
jl
lret
jecxz
mov
mov
cmp
mov
mov
jp
sbb
movb
inc
icebp
mov
movsb
pop
or
jmp
stos
inc
or
xchg
xor
pop
push
loopne
fisubrs
push
insb
lret
mov
cmp
cwtl
jmp
push
jge
xchg
iret
inc
pop
dec
stc
inc
leave
pop
push
add
ficompl
xor
jo
test
inc
lds
std
xor
or
leave
mov
jns
xchg
stc
in
or
pop
inc
andl
mov
div
stos
or
lcall
xchg
fcos
lods
mov
js
in
xchg
or
ja
xchg
aaa
add
and
xor
fwait
inc
and
clc
push
sub
xor
test
sbb
add
dec
iret
xor
add
inc
fisubl
fldl
inc
pop
inc
dec
push
and
aas
push
inc
add
or
or
mov
mov
sahf
hlt
sahf
loop
movsl
sarb
fimuls
in
mov
lea
sbb
loop
hlt
ret
add
add
in
testl
jo
lock
pop
xchg
jno
push
insl
mov
lds
dec
addr16
test
shlb
out
pop
js
push
add
popf
lret
or
jbe
cmc
fidivl
or
xchg
xchg
jbe
jbe
jae
push
cmp
mov
je
sbb
push
mov
inc
fwait
jns
aam
push
lea
ror
xor
xor
dec
enter
sbb
pop
je
lock
pop
call
xor
add
add
mov
cmc
lods
cmp
bound
std
add
cmp
sahf
adc
cwtl
sub
add
jb
js
jge
out
dec
cld
iret
incl
dec
test
iret
hlt
pushl
sarb
push
xor
aad
jne
scas
xchg
stos
push
mov
dec
call
fs
xchg
add
pushw
xor
mov
cmp
jns
sti
fnstcw
inc
test
mov
ret
jmp
mov
pop
sub
aam
dec
push
cli
aaa
ficoml
dec
andb
or
test
je
or
pop
mov
adc
add
nop
inc
mov
mov
adc
or
inc
jl
cmp
xor
mov
dec
mov
xor
fldenv
inc
xor
or
sbb
mov
lods
cmpsl
xchg
cld
dec
popf
dec
enter
cmpsl
es
into
ror
mov
test
jge
pushf
mov
adc
into
or
ljmp
cmc
loope
push
or
inc
pop
call
ret
nop
mov
or
xchg
push
int3
and
test
jle
jge
pop
push
mov
inc
sbb
and
imul
xchg
or
and
fdivs
arpl
sub
pop
mov
std
sub
jnp
lret
mul
imul
add
loopne
xchg
ret
jbe
xor
cmc
inc
ja
jle,pt
pop
and
mov
cltd
mov
rolb
out
sub
push
pusha
ret
nop
popf
test
dec
adcb
sbb
jmp
ljmp
movsl
push
mov
pop
nop
fnstenv
cld
mov
dec
pop
jg
pop
adc
pop
inc
push
mov
popf
shrl
andb
sbbb
push
or
mov
dec
pop
popf
clc
xchg
inc
xchg
or
imul
push
pop
ljmp
mov
mov
xor
sub
adc
rol
je
and
call
iret
popf
fs
pop
clc
jae
enter
pop
jae
sub
leave
fwait
jle
cmp
jae
insb
adc
add
and
pop
in
xor
repnz
mov
jbe
sti
scas
or
mov
aad
inc
mov
call
sti
cmp
add
mov
ss
ret
into
mov
loopne
and
bound
test
inc
nop
mov
xor
rcr
and
add
adcb
cmpsl
mov
jle
fnstenv
mov
dec
inc
repz
xchg
inc
test
push
xchg
jnp
shll
sbb
shll
shlb
pop
mov
xor
jg
lods
push
jmp
scas
enter
xchg
dec
push
inc
sub
push
fisttpll
lds
mov
dec
and
ret
clc
pop
mov
mov
adc
mov
push
addl
andl
dec
cmp
pop
inc
xlat
fcmove
xchg
adc
hlt
jecxz
lds
stos
pop
cmp
cld
pop
add
mov
pusha
loopne
jbe
pop
jecxz
lods
rorl
cmp
push
mov
pop
inc
int3
call
add
or
fs
fldl
add
repnz
ds
sub
std
and
mov
and
push
add
push
cmp
pop
pop
push
int
sbb
mov
adcl
rcr
clc
mov
sub
sub
pop
xor
int
xchg
mov
ljmp
or
push
mov
sbb
adc
clc
out
movb
mov
xchg
ret
add
sarl
and
cmp
adc
fcmove
inc
and
sbb
jo
out
in
hlt
ss
xchg
aaa
cld
fimuls
lret
xor
add
js
push
imul
enter
adc
sub
notl
mov
mov
sub
jl
bound
not
loopne
imul
testb
xchg
xchg
push
push
enter
mov
xor
push
pop
jecxz
fdivp
xor
sbb
adc
pop
pop
lcall
or
lods
sub
rorb
movsl
inc
xchg
push
inc
movsb
ror
repz
jae
adc
testl
sub
fmuls
jno
popf
xlat
inc
insl
loop
shl
add
loopne
jbe
dec
cmp
movsb
mov
or
adc
xor
push
jle
mov
jmp
cli
mov
lods
push
mov
jle
sahf
arpl
stc
jo
or
sub
lcall
push
mov
js
mov
outsb
add
mov
popa
xchg
loopne
mov
inc
into
data16
leave
rol
xchg
add
mov
daa
dec
or
divl
jge
add
cltd
jmp
bound
inc
jbe
int
push
sbb
aad
test
jnp
pop
cmp
cmp
or
fwait
jne
mov
shl
or
lock
pop
rcl
xchg
out
lods
cmp
xlat
cmpsb
xor
jb
mov
mov
fisttpl
cmp
clc
sub
mov
imul
and
pop
sbb
fwait
fwait
sub
rcll
mov
pop
pop
add
js
dec
leave
mov
sti
and
xchg
sarl
cld
cmc
jbe
inc
rclb
adc
xor
mov
dec
sahf
ja
bound
mov
xchg
dec
inc
ds
add
scas
pushf
loopne
fsubl
leave
cmp
loope
sbb
mov
pop
lret
pop
lods
push
push
pop
pop
xor
add
adc
mov
mov
sbb
add
push
jle
dec
xchg
fidivrs
dec
mov
inc
jns
aas
cltd
xor
ds
loop
and
fldcw
incb
jl
inc
inc
mov
ret
push
jle
les
add
orl
push
ljmp
sbb
dec
insl
arpl
inc
and
lea
xchg
mov
pop
xchg
xchg
ds
fcomps
sub
cmp
fdivl
add
inc
push
inc
jno
pop
add
call
sbb
pop
orl
dec
mov
xor
jg
popa
bound
divl
cltd
outsl
pushf
pop
xor
jns
dec
test
arpl
sbbl
inc
push
aaa
in
xchg
pushf
inc
call
xchg
aam
out
pop
sbb
lods
shlb
pop
cltd
mov
mov
add
mov
popa
xchg
sahf
or
sub
shlb
loope
out
rol
adc
rol
iret
inc
loop
enter
pop
adc
ljmp
scas
sub
or
jns
adc
in
inc
out
xor
sahf
pop
out
insl
mov
xchg
fiadds
mov
mov
dec
ret
cmp
dec
adc
test
xchg
push
std
xor
sbb
outsb
push
leave
mov
inc
dec
mov
bound
mov
lods
push
or
or
sbb
pusha
mov
shlb
inc
int
sbbb
clc
lahf
mov
xor
fnsave
inc
leave
push
jns
add
pop
fs
test
and
bound
mov
mov
stc
lea
cld
cmc
sub
dec
lret
cwtl
cltd
and
lods
cmp
mov
sbb
mov
push
sti
pop
cmp
xor
shl
inc
push
push
dec
inc
stos
imul
xlat
nop
push
outsl
int3
mov
insl
aaa
or
xor
pop
sub
sub
inc
cmp
test
xchg
mov
pop
out
sbb
jg
fiaddl
aam
jecxz
or
mov
xchg
sbb
dec
xor
lahf
sbb
repz
mov
aaa
sbb
inc
jae
push
xchg
dec
lret
adc
call
sbb
lods
and
jnp
cmp
dec
jg
sbb
add
or
jnp
rcrb
loop
stc
in
jecxz
andb
popf
mov
mov
add
adc
sub
cmp
or
insl
sbb
add
add
mov
mov
in
int3
repnz
jmp
push
adc
mov
mov
test
dec
pop
inc
inc
inc
mov
push
mov
push
test
adc
popf
sahf
sub
inc
fdivrl
bound
insl
lcall
jge
cmc
sbb
decl
enter
pop
aam
and
jmp
popa
adc
popa
lret
mov
lret
jo
jp
xor
mull
mov
inc
ret
bound
fmuls
rolb
mov
jns
mov
mov
or
add
bound
push
rcl
xor
inc
xchg
pop
pop
dec
mov
movsb
add
xor
cmp
jl
ja
cmp
push
fcomps
loop
aam
mov
jbe
orl
add
mov
mov
cmp
adc
mov
sbbl
rcl
cmp
je
xchg
mov
or
stc
push
out
and
xor
popf
mov
sahf
push
lods
xor
or
sub
cmp
add
dec
fisubrs
xor
das
mov
sahf
fcomps
jb
mov
or
fstpl
xchg
pushf
and
jnp
inc
aad
xchg
inc
daa
ds
add
lahf
clc
push
pop
add
aam
sti
rorl
ret
add
add
pop
dec
pop
xor
lret
jle
imul
jecxz
jmp
pushf
cmp
lods
data16
fcomps
mov
inc
push
int
pop
leave
gs
adc
push
int3
iret
mov
push
cld
pop
push
fildl
jecxz
pop
iret
leave
int3
inc
out
js
sahf
sbb
sub
jle
sbb
cmpsl
dec
cmp
xchg
push
call
push
cmp
out
je
and
sbbb
push
mov
leave
leave
fsubp
leave
push
xchg
or
xchg
lods
mov
mov
xchg
into
lods
ljmp
xlat
mov
repz
into
adcb
repnz
enter
jne
mov
fmul
or
cmp
lods
or
out
push
loop
nop
dec
cmp
into
fs
int3
xchg
mov
xchg
pop
ss
imulb
xchg
inc
adc
dec
and
lods
xorl
add
jecxz
fdiv
loope
inc
sub
mov
adc
daa
or
xchg
xor
mov
cmpsl
into
pop
sub
stc
jb
inc
cmc
push
xchg
dec
xor
mov
sub
mov
mov
aad
sbb
ret
jns
mov
sbb
int3
push
aam
add
ret
subl
lods
xor
mov
mov
lret
std
xor
insb
jbe
jecxz
hlt
lret
orps
stos
add
mov
jp
ficoms
aad
int3
xlat
pushf
push
inc
inc
bound
add
stc
push
inc
sub
push
mov
xor
loopne
orl
stos
pop
lods
and
cs
insl
mov
xchg
mov
gs
add
sub
and
nop
addr16
and
inc
dec
pop
push
leave
decb
js
bound
and
push
add
xchg
jge
sub
mov
leave
insb
divl
out
inc
ja
adc
push
push
fs
mov
fistpll
mull
gs
sbb
push
sbb
insb
cmpsb
cmp
xlat
pop
sub
stos
mov
xchg
cmpb
push
lods
jge
lods
es
dec
mov
int
sahf
sub
mov
mov
pop
push
imul
insl
cmp
sbb
lods
push
cmp
mov
fsubr
imul
jns
pop
inc
dec
in
adc
and
jl
adc
sbb
push
sub
mov
add
sbb
add
adc
dec
popf
sbb
sbb
adc
inc
mov
ret
jo
in
fimuls
adc
mov
xor
jb
pop
mov
outsl
movsb
sbb
fst
jg
pop
sahf
pop
shlb
nop
fwait
int
pop
fstps
aas
and
daa
test
imul
cmp
jno
and
cmp
dec
cmpsl
add
lods
fldcw
lods
pushf
arpl
cmpsl
lods
orl
clc
xchg
aas
cli
xor
aam
push
pop
repnz
xor
xchg
adc
push
inc
pop
icebp
push
lret
test
xor
popa
fistpll
mov
inc
rcrl
stos
jbe
shlb
mov
add
dec
into
and
mov
movsb
dec
pop
mov
rcr
popf
mov
call
mov
mov
out
nop
sub
jbe
cs
sub
insb
arpl
jmp
addl
ja
sbb
sbb
lret
hlt
ljmp
insl
fldl
push
pop
push
pop
insl
cwtl
adc
push
arpl
adc
insb
mov
mov
jg
nop
xchg
fmuls
fcmovb
arpl
dec
dec
cmc
decb
xor
mov
sub
leave
insb
mov
arpl
daa
ret
inc
cmp
movsb
xor
flds
fs
fwait
xor
mov
adc
pop
icebp
decb
jnp
mov
pop
repnz
das
push
dec
push
pop
shll
imul
jmp
leave
rcrl
cmp
mov
outsl
mov
cwtl
push
push
adc
add
sbb
pop
xchg
or
repnz
les
insb
pop
xchg
mov
pushf
jnp
fistl
popa
dec
cmp
mov
add
lea
xor
rorb
pop
ret
add
xchg
out
or
scas
cmp
sbb
orl
jp
xchg
loopne
test
mov
xchg
or
jbe
dec
insl
dec
jnp
add
ror
inc
pop
mov
dec
adc
js
adc
icebp
in
int
cmc
add
imul
in
cmp
mov
dec
cld
out
cmpsl
mov
add
dec
push
xchg
add
lahf
or
dec
dec
das
out
xor
adc
ret
dec
cs
pop
test
arpl
ds
jmp
sbb
inc
sub
push
cmp
scas
mov
add
ret
xchg
dec
add
mov
dec
dec
pop
dec
jb
insl
jno
dec
mov
or
imul
fdivrl
fisttps
dec
mov
sbb
jg
inc
mov
dec
jecxz
adc
or
sarb
jmp
sar
jnp
push
dec
test
and
push
addl
mov
pminsw
movsl
out
stc
rorl
mov
dec
cmp
xorl
stos
daa
mov
dec
sub
xchg
add
mov
xor
mov
hlt
dec
push
fadds
mov
push
jecxz
add
mov
cltd
dec
dec
lea
test
enter
pushf
lods
in
rorb
dec
insb
and
dec
xor
dec
dec
cmp
int3
dec
dec
leave
cmc
loope
aad
cmp
out
xor
dec
xor
pusha
push
mov
lods
loop
add
pushf
inc
into
pop
add
inc
push
or
dec
jmp
cmc
in
xor
and
dec
pop
rclb
and
pop
loopne
pop
lods
mov
mov
and
xor
rol
pop
adc
loop
lahf
dec
jns
mov
dec
stos
aam
xchg
inc
mov
mov
lcall
dec
add
or
add
dec
and
arpl
cmp
dec
dec
cmp
aad
pop
dec
fdivp
mov
sub
test
mov
mov
dec
fldl
pusha
sub
adc
sub
es
cmp
je
jl
mov
inc
andb
dec
in
or
push
shlb
out
rcll
xor
mov
ss
cmp
subl
cltd
std
mov
jmp
jne
sahf
mov
shl
dec
jb
mov
sbb
lret
or
dec
shl
dec
loop
jecxz
jmp
jne
cltd
lea
sub
popa
jp
xchg
dec
aaa
mov
test
lahf
dec
dec
jg
cmp
mov
push
rcl
or
cltd
lret
scas
push
std
pop
add
xchg
jae
insl
mov
inc
mov
nop
jo
or
dec
aas
in
mov
dec
test
add
adc
inc
rorb
or
mov
imul
insl
inc
mov
pop
dec
xor
dec
cli
insb
and
or
mov
adc
mov
popf
iret
dec
or
test
jo
dec
ja
adc
and
push
lret
es
jg
mov
in
xor
fistps
inc
xchg
lret
dec
jecxz
mov
sti
je
mov
ja
mov
test
outsl
jb
pop
ss
dec
mov
pop
insl
jl
repz
sti
dec
cmc
and
fwait
dec
jne
insb
sub
mov
push
out
mov
cmc
bound
and
out
cmpsb
scas
dec
incl
in
loop
mov
xchg
pop
mul
mov
add
pusha
jle
arpl
pop
orl
inc
xchg
dec
out
jnp
jne
imul
push
sub
xchg
jns
dec
push
mov
mov
push
dec
inc
rorb
lcall
mov
push
jae
mov
subb
dec
xor
mov
fcmovnb
rorb
mov
cmp
mov
jle
inc
cmc
adc
dec
iret
sbb
sbb
popa
xor
mov
jmp
sub
inc
dec
sarl
movsb
aaa
mov
push
inc
jmp
xchg
sarl
cwtl
cmp
and
mov
xchg
jmp
dec
push
sub
cmp
fs
andl
ds
xchg
adc
aas
lods
icebp
outsl
insl
lods
cmpsl
pop
xor
js
mov
ficoms
ficoml
jecxz
mov
mov
mov
push
jo
fs
cld
mov
dec
mov
xor
inc
push
out
iret
mov
mov
hlt
repnz
mov
shll
mov
jg
out
dec
scas
mov
dec
dec
xor
fsubl
dec
std
es
and
dec
fisttps
adc
neg
ljmp
xchg
adc
dec
sub
leave
sbb
ficompl
hlt
add
cmp
add
and
std
sti
fsubs
ret
dec
xor
dec
jge
leave
xor
cmp
pop
nop
add
imull
aam
dec
imul
loop
scas
push
iret
int
pop
push
mov
mov
insb
loopne
loop
ret
push
iret
sarb
xchg
pop
cmc
fnstcw
xchg
pop
into
call
sarl
aaa
fdivrl
lahf
mov
int
mov
out
sbb
jle
lret
dec
jno
test
subb
sbb
iret
dec
movsl
pop
cli
lock
loop
cmp
std
cmp
jp
push
push
test
dec
nop
jg
addr16
jle
pop
sub
jnp
mov
and
stos
sbb
or
loop
jp
clc
in
outsb
leave
imul
mov
fcmovne
leave
shl
xor
lods
sti
push
bnd
add
cmp
sub
mov
jge
out
jmp
inc
into
xor
and
mov
aam
jb
lods
ret
insl
in
loop
aaa
arpl
jne
dec
mov
adc
inc
jnp
xchg
aad
sub
adc
xchg
pop
mov
cmp
popf
or
adc
add
cmp
xor
imul
mov
or
jle
mov
lahf
add
mov
mov
sbb
mov
shlb
ljmp
cli
adc
and
pop
dec
pop
mov
mov
fiaddl
xchg
cwtl
cmp
call
mov
and
ss
pusha
dec
pushf
sub
negl
add
stos
fs
arpl
fidivl
pop
pop
mov
inc
stos
push
movsb
mov
out
inc
pop
pushf
shll
rcrl
mov
loop
cmp
xor
jb
mov
add
daa
repnz
pop
mov
imull
mov
cmp
sub
jbe
addr16
mov
int3
test
mov
pushf
hlt
loopne
fstl
xor
mov
mov
or
xor
sarb
into
pop
iret
insl
cmp
mov
and
imul
xor
mov
adc
aad
pop
mov
je
mov
sbb
dec
adc
enter
add
push
nop
dec
sbb
sub
xchg
xor
mov
cmp
inc
mov
sub
lcall
int3
xor
dec
jl
mov
sbb
arpl
es
push
jnp
fisubrs
sti
test
mov
mov
in
sahf
insl
mov
sahf
sub
lret
mov
cmp
adc
rorl
repz
jle
outsl
push
aad
inc
and
movb
or
andb
ljmp
fnstenv
negb
inc
and
mov
mov
leave
pop
inc
sub
pop
pop
or
mov
cmpsl
add
addr16
push
fwait
dec
push
stos
sub
mov
mov
mov
imul
sbb
cmp
idiv
das
rcrb
iret
mov
add
and
call
and
testl
pop
inc
push
jmp
fs
add
popf
mov
rcrl
xor
ss
pop
rcl
jecxz
inc
push
push
inc
aad
xorb
loopne
push
clc
aas
pop
sbb
cmpsb
mov
pop
mov
xchg
xor
pop
cvttps2pi
lahf
xchg
inc
imul
les
lret
mov
cld
inc
inc
jmp
add
jne
insb
nop
test
pop
fdivrl
pop
xor
cmpsl
aaa
aad
cmc
lret
call
add
hlt
inc
push
dec
or
out
mov
push
cmp
push
add
inc
insb
mov
imul
mov
jno
shr
pop
pop
push
inc
inc
pusha
push
pop
shll
lds
lock
lds
ja
shl
fistl
pop
lods
inc
shlb
hlt
dec
pop
mov
call
fistpll
xchg
bound
mov
pop
push
mov
mov
mov
les
mov
jl
out
inc
xor
dec
fimull
dec
inc
or
mov
out
cmp
cmp
fsubl
xchg
dec
and
and
lods
jae
sub
push
jns
add
aad
sbb
sbbb
movsb
xor
bound
pop
mov
arpl
pop
sbb
insb
ss
add
rcll
aad
inc
loopne
pop
push
xchg
stc
xchg
inc
jge
ja
clc
rcrb
sbb
push
mov
push
xchg
fidivs
lahf
pop
dec
lods
pop
xor
mov
dec
push
xor
add
mov
add
je
cmp
test
out
xchg
pop
inc
pop
ret
add
mov
or
cmp
mov
mov
fiaddl
jbe
scas
mov
mov
sti
sub
je
and
adc
sbb
and
push
rclb
mov
popf
xor
lcall
imul
fidivl
mov
push
shrl
and
ret
sbb
xor
mov
sub
push
xchg
arpl
jns
std
xchg
insb
xchg
aad
mov
addb
push
xchg
cwtl
insl
and
jp
inc
pop
lods
in
popa
or
mov
lahf
fcomip
inc
sub
adc
sahf
aaa
sbb
cmp
and
cmp
outsl
loopne
pop
jbe
inc
fisttpll
jno
adc
lret
mov
adc
dec
test
or
sub
lret
jb
dec
out
jae
xor
xor
fmul
aad
icebp
cmp
imul
stc
xor
sub
fiaddl
inc
cmpsb
es
aas
and
push
and
push
dec
xor
cmp
add
xor
xchg
sub
push
sub
sbb
cmp
push
xchg
jge
sub
fmull
mov
pop
xor
inc
mov
dec
inc
test
cmp
adcb
mov
pop
or
sbb
mov
sbb
scas
cmp
and
jl
sub
scas
icebp
and
pushf
lahf
or
push
push
jp
in
add
mov
pusha
cmp
outsb
jne
arpl
cmp
andl
adc
stos
inc
mov
inc
lods
push
push
jne
mov
shl
movsl
leave
mov
pop
jle
in
arpl
into
jmp
pushf
mov
fdivrs
mov
xchg
mov
xor
xchg
enter
inc
call
xor
push
sub
pop
in
cmp
mov
adc
mov
sub
mov
push
sbb
mov
fisubs
outsl
fisubrl
jge
mov
inc
shll
enter
loopne
sarb
push
mov
std
mov
sti
imulb
pop
lahf
nop
jo
ds
or
jae
cmp
dec
cli
jp
fidivs
cmp
xchg
xor
xor
pop
ja
fldcw
outsb
xchg
inc
and
and
int
loopne
ret
dec
mov
js
jnp
test
mov
jmp
xchg
push
mov
fisttpl
xchg
add
and
mov
mov
pop
imul
cmp
fldenv
pop
enter
or
sbb
lods
jns
clc
xchg
repz
inc
popf
lret
lret
scas
mov
icebp
test
fistpll
add
push
jns
inc
fiaddl
bound
mov
arpl
lods
cld
xchg
std
mov
loop
mov
mov
and
inc
xchg
arpl
push
sbb
xlat
daa
push
mov
mov
mov
popa
popf
pop
insl
or
daa
pusha
aam
push
rcrb
ja
sbb
push
jp
std
mov
add
insl
lea
jns
mov
add
pusha
or
cmp
inc
jns
inc
pop
pop
dec
inc
add
and
sahf
mov
call
adc
mov
dec
adc
add
mov
popl
jnp
cmp
mov
in
leave
pop
pop
cmp
bound
lret
push
repz
xchg
mov
pop
xchg
lods
fidivl
sahf
fidivl
add
pop
fwait
jb
stos
pusha
mov
inc
mov
roll
jmp
xchg
or
arpl
lods
mov
jnp
jo
test
xor
imul
dec
xor
mov
mov
test
inc
cmp
pushf
movsb
aas
push
add
mov
mov
dec
inc
mov
mov
cmc
lds
push
jg
mov
clc
subl
sub
ret
test
icebp
push
insl
push
leave
arpl
xor
imul
leave
inc
fnstsw
out
imul
cmp
or
pop
push
dec
js
and
mov
or
rol
cmp
arpl
adc
lea
jl
add
data16
insb
arpl
push
xchg
dec
movsl
lea
lods
mov
and
movsl
outsl
sbb
popf
ss
mov
pop
aas
pop
push
push
roll
cmpsl
jnp
sbbl
lock
add
imul
adc
lock
mov
fsubs
sbb
mov
sar
movsl
scas
arpl
call
jl
mov
jl
mov
pop
data16
mov
je
jle
test
or
push
dec
or
dec
dec
adc
pop
push
push
test
xchg
or
add
sbb
lods
insb
pop
mov
pusha
arpl
js
mov
jb
xchg
xor
xor
or
jge
xchg
cld
push
mov
lods
in
pop
sbb
sub
test
add
das
inc
jge
ss
push
jge
xchg
xchg
or
xor
ficomps
mov
jns
jb
mov
dec
mov
jmp
cmpsb
and
push
add
pop
in
pop
testb
cli
shrb
pop
push
dec
out
fwait
push
pop
loopne
mov
mov
mov
mov
lret
push
adc
push
push
sahf
shl
cmp
call
add
sub
xlat
jmp
push
lods
leave
leave
imul
fidivrl
xchg
push
iret
scas
inc
sbb
jg
insb
clc
imul
mov
out
cmc
test
cmp
in
shlw
and
push
push
bound
adc
pop
inc
call
sub
test
test
fisubl
pop
inc
arpl
xchg
cwtl
fisubs
xlat
popa
loopne
lret
add
ret
cmp
fwait
xchg
dec
lods
cmpsl
and
push
xor
call
pop
iret
mov
xchg
mov
pop
jge
lea
mov
push
pop
cmp
lahf
pop
push
pop
aas
insb
sbb
or
xchg
pushl
addr16
pop
rol
fldcw
jns
inc
push
in
mov
call
xor
dec
cmpsl
cmc
es
dec
jae
sahf
leave
aad
es
adc
ja
fidivrl
fstl
roll
jnp
gs
mov
mov
mulb
dec
mov
mov
mov
aad
loopne
jge
jmp
cmp
sbb
add
or
test
jmp
sbb
inc
sub
sti
and
aad
jmp
out
outsb
sbb
enter
addr16
and
int3
movsl
inc
mov
dec
mov
int
xchg
int3
jae
js
sbb
or
cmp
pop
pushf
and
lods
mull
jnp
or
add
dec
cwtl
xlat
iret
cmp
in
out
dec
push
scas
or
push
add
lock
push
lock
cmp
sbbl
push
adc
xchg
loopne
dec
xchg
xor
in
xor
mov
leave
call
mov
sub
dec
rcll
lds
pusha
mov
dec
dec
pop
test
mov
dec
mov
mov
loop
push
adc
cmpsl
inc
jecxz
aas
call
fbld
pop
clc
loop
sub
mov
pop
push
aad
or
dec
mov
mov
mov
jle
inc
dec
push
fistl
push
imul
sub
mov
es
imull
adc
mov
lret
sbb
insl
xor
pop
mov
cs
pop
lods
icebp
inc
xchg
loopne
cmp
xor
sub
out
pop
jnp
dec
xor
aaa
xor
dec
fcmovu
testl
push
es
mov
lds
push
cmp
dec
ds
and
mov
cmpsb
push
push
inc
inc
les
iret
adc
pop
pusha
mov
xor
add
arpl
fisttps
cmp
outsb
out
mov
hlt
jnp
pop
xor
filds
std
sti
or
dec
mov
jns
mov
test
enter
mov
xor
addr16
ja
ja
xchg
cmp
inc
mov
sbb
pop
pop
cmp
xchg
adc
mov
xchg
sbb
aaa
xor
fcomp
inc
xchg
addr16
data16
xor
lods
dec
mov
add
mov
lret
imul
icebp
push
leave
mov
and
mov
lods
inc
xchg
nop
jmp
addr16
inc
add
xchg
mov
adc
pop
push
dec
inc
mov
pop
jg
sbb
jle
adc
pushf
cltd
jmp
lret
bound
into
adc
test
mov
sbb
and
sbb
sbb
outsl
call
inc
mov
cwtl
mov
mov
and
push
jmp
cli
sub
xchg
mov
pop
xor
sub
dec
inc
dec
call
testl
xchg
imul
cmp
or
ret
setbe
xor
fs
and
pop
mov
imul
sub
arpl
scas
scas
fwait
push
pop
lret
push
rorl
test
sub
stc
cmp
nop
lcall
sahf
cmp
fisttps
cmp
cli
inc
stos
fisubrs
pop
cwtl
enter
adc
dec
sub
pop
jle
mov
jecxz,pt
ret
and
fisubs
fldenv
cmp
mov
mov
push
ss
xor
pop
xor
mov
pop
stos
adc
shlb
fwait
pusha
xlat
nop
push
iret
jnp
addr16
imul
sarb
pop
pop
loopne
cmc
push
push
dec
test
cmc
mov
xchg
push
dec
push
test
fcoml
pop
inc
mov
inc
jl
lds
sub
iret
push
negl
lret
pop
adc
push
add
fldl
dec
inc
xchg
sarl
or
arpl
hlt
lret
je
push
add
popf
sub
sbb
inc
xchg
cmpsl
pop
adc
fiaddl
mov
mov
push
mov
lods
pop
rcrl
push
add
mov
push
add
hlt
sbb
test
inc
sti
fsub
adc
aas
add
push
fiadds
dec
mov
jb
movsl
dec
cmp
movsb
mov
dec
xor
div
fsts
mov
das
sbb
mov
sbbb
or
xchg
test
mov
mov
push
cmp
add
pop
stos
or
fwait
dec
movsl
movl
shrl
lret
fstl
es
push
pop
pop
out
jb
add
push
and
xchg
adc
pop
xchg
dec
lea
aam
push
pop
das
lds
xchg
ret
imul
jno
stos
cli
dec
cmp
adc
inc
adc
js
or
pop
push
insl
stc
inc
sub
orb
sbb
dec
nop
add
ds
dec
xor
out
dec
aaa
je
mov
outsb
mov
test
jns
xchg
adc
add
enter
sub
aad
cltd
dec
cmp
jle
push
inc
aad
dec
out
inc
adc
sub
iret
negl
xchg
mov
push
loope
jg
xchg
and
sbb
adc
mov
and
in
gs
pop
sub
xor
push
movsl
ljmp
out
into
and
mov
mov
xor
inc
adcb
xchg
dec
dec
ds
int3
dec
scas
or
add
and
in
mov
push
je
dec
add
dec
mov
pop
divl
add
sub
sbb
call
inc
mov
mov
xor
out
pop
jmp
ljmp
push
fimull
enter
aad
inc
or
cs
pop
push
push
push
lret
test
in
out
xor
cmp
fldt
sbb
rorb
push
sahf
jp
fnstcw
lods
mov
and
cmp
sub
xchg
cld
fmul
les
pushf
jmp
pop
push
inc
pop
mov
sbb
dec
pop
scas
stc
pop
push
push
aas
aam
dec
stos
cmp
daa
sbb
and
sub
push
mov
sub
dec
push
icebp
imul
jnp
lahf
dec
cmpsl
push
cmp
jecxz
dec
imull
pusha
adc
dec
imul
lock
icebp
dec
and
jne
or
xor
pop
mov
stos
outsb
stc
jne
out
sub
mov
push
add
dec
mov
jecxz
push
push
ret
gs
lock
add
incb
js
test
push
pop
rorb
or
push
dec
pop
pop
sahf
sbb
fcom
pop
aas
test
cmpsb
add
out
and
dec
imul
and
mov
fistps
lock
rcrb
jnp
pop
popa
mov
loop
mov
aaa
lcall
fcmovnu
js
lds
mov
sub
push
mov
and
fwait
cmp
dec
push
xchg
mov
or
pushf
push
int3
sub
mov
mov
les
jp
mov
jmp
inc
imul
repnz
cs
jnp
lds
arpl
out
test
dec
push
or
rorb
sub
mov
ljmp
mov
mov
dec
sbb
pushl
int3
popf
push
or
rorl
adc
aaa
sub
imul
sbb
dec
imul
mov
push
fstl
dec
and
popf
inc
adcl
insl
push
sti
out
jbe
fstpt
aaa
cmp
rsqrtps
dec
je
sub
mov
mov
divl
in
push
mov
je
mov
dec
mov
pop
sub
xchg
sbb
leave
adc
dec
xchg
rcll
pop
insl
dec
imul
lret
orb
lods
inc
rcrb
xchg
xchg
pushf
cmp
mov
scas
stos
mov
push
push
popa
sbb
cmp
push
gs
add
dec
jbe
pop
xchg
aas
aam
dec
mov
lret
inc
nop
shl
mov
dec
movsl
ds
mov
loopne
sbb
dec
xchg
inc
out
pop
out
out
mov
movsb
in
mov
xor
insl
xor
gs
shll
adc
push
or
stc
lret
pop
and
xchg
dec
push
lods
fwait
scas
mov
xor
sub
cmc
addb
dec
stos
jns
dec
bound
mov
cli
in
sub
and
dec
rorl
sbb
das
dec
mov
std
cmp
dec
dec
in
cmp
xor
dec
mov
pop
jnp
push
pop
push
stc
mov
dec
xchg
sbb
dec
clc
adc
add
add
add
negl
xchg
dec
roll
xor
dec
stos
mov
lret
sub
je
aad
pop
mov
outsl
test
loopne
std
sub
int3
cmpsb
call
pmullw
and
dec
mov
fwait
sub
or
or
cs
jmp
repnz
cmpsb
imul
dec
addr16
adc
add
jbe
in
mov
pop
imul
pop
subl
sbb
insl
mov
sbb
imul
and
jmp
mov
add
sar
sub
enter
or
xchg
jecxz
int
imul
xor
or
fs
and
je
push
dec
out
mov
pop
pop
faddp
add
mov
dec
mov
mov
push
mov
mov
push
push
mov
dec
lcall
mov
xchg
xor
and
dec
setno
jbe
jmp
jmp
mov
jae
sbb
inc
sbbb
mov
cmp
fbstp
sbb
or
mov
push
loop
mov
jl
jno
push
test
push
nop
incl
jae
imul
jl
mov
sub
ret
movhps
mov
add
pop
mov
pop
mov
xor
pop
das
call
adc
int
pop
clc
dec
push
pusha
lcall
jl
sub
sub
fmul
inc
sahf
pop
push
xor
dec
fimuls
jl
not
dec
mov
jo
stc
mov
mov
dec
cld
fsubs
pop
push
cltd
daa
dec
mov
in
jb
ret
dec
jecxz
sti
outsb
push
pop
shrb
test
insl
jns
in
push
sbb
dec
enter
pop
add
xor
push
call
sbb
into
call
int3
fisubrl
mov
dec
xor
jecxz
dec
pushf
lret
test
sbb
sbb
dec
jo
insl
jp
cmp
inc
push
dec
push
jle
stos
jl
mov
adc
inc
or
push
pushf
jle
out
es
mov
pop
xor
jnp
sub
rol
mov
jmp
in
jbe
jne
outsl
scas
jmp
pusha
jno
mov
into
fldcw
sbbl
fstpl
inc
rorl
dec
divl
ja
dec
sub
cmp
dec
push
jae
cltd
dec
cmp
sar
dec
aam
push
mov
ret
dec
in
mov
mov
fsubrl
int3
fstpl
push
fistl
rorb
inc
jp
in
and
mov
adc
stos
mov
xchg
popf
les
out
bswap
dec
out
stc
arpl
jb
push
into
mov
xchg
add
dec
sub
pop
cmp
mov
pop
movsl
rcrl
int3
xlat
out
lret
aad
pop
xor
out
sub
lock
or
cmp
imul
and
int
push
jae
loop
or
stc
push
dec
ds
add
scas
sbb
sbbb
dec
or
jp
inc
sbb
adc
cmc
pusha
dec
std
jge
in
out
cmp
mov
imul
loopne
mov
inc
aam
and
inc
pop
out
out
xor
iret
mov
cmp
sub
dec
dec
jp
repnz
xchg
mov
inc
push
out
clc
mov
scas
xchg
loope
xor
gs
jno
call
loop
call
cmpsb
mov
push
jnp
jl
pushf
push
xor
lahf
cwtl
imul
out
aam
pop
pop
or
es
enter
fidivrl
pop
shrl
fdivrp
enter
dec
mov
in
arpl
and
jne
mov
jmp
mov
pop
push
in
mov
cmp
sbb
cld
shll
xchg
rol
pop
add
movsb
mov
enter
andb
pop
pop
ret
jns
les
jge
or
cli
icebp
xor
test
adcb
in
xlat
rcrl
cmpsl
or
cmp
pop
cltd
add
adcl
in
movsb
adc
mov
fistl
js
mov
adc
mov
inc
imulb
js
adc
push
fimuls
push
mov
sbb
mov
lret
shr
add
lahf
leave
mov
add
lcall
push
mov
adc
into
mov
sahf
orps
cmpsl
jo
ficoms
pop
test
cmp
sahf
adc
jbe
cld
rcrb
xor
mov
out
inc
imul
push
adc
fisubrs
xor
adc
ljmp
and
jno
pop
and
xchg
sarl
add
ja
pop
mov
sbb
and
pushf
lret
lcall
sahf
cs
sub
ret
test
in
and
xchg
xchg
fwait
mov
adc
loope
loopne
mov
pop
xor
mov
sbb
insl
sbbl
les
xchg
fsubl
mov
push
sub
pop
xor
pop
sub
mov
sub
cmpsl
sbb
cmp
ret
push
sub
cltd
add
push
sti
xor
sub
rol
pop
cmpsb
push
mov
roll
js
jnp
jno
push
imul
loopne
jae
aad
inc
sarl
jb
jae
das
pop
int3
inc
addr16
call
dec
sbb
lcall
adc
insl
mov
push
lods
pop
int3
xchg
das
add
mov
sub
inc
rclb
stc
cmp
jae
xor
mov
inc
jp
inc
bound
dec
fnstcw
mov
adc
inc
mov
testb
ss
pushf
call
repz
adc
sbb
orb
fcmove
pop
xlat
jg
dec
cld
fadds
lods
nop
mov
subb
adc
or
aaa
mov
inc
test
jp
dec
pop
jl
aas
or
xchg
and
arpl
xchg
int
fs
sub
loopne
cmpsb
dec
inc
adc
inc
repz
cmpl
aad
jp
pop
gs
jecxz
pusha
xchg
mov
push
pop
push
popa
mov
or
mov
pushf
lods
xorb
in
popf
push
mov
shll
int3
jnp
int3
fstl
ss
imul
sub
xchg
mov
test
and
fwait
mov
add
inc
and
scas
inc
cmpsl
xor
xor
mov
lret
pop
adc
mov
cmp
inc
push
xor
sub
in
mov
cmpsb
and
push
pop
cmp
inc
pop
out
mov
adc
pop
lds
jl
aaa
cmp
sahf
lods
push
imulb
pop
sbb
pop
dec
insl
inc
data16
out
lds
fdivl
insb
ficoml
mov
mov
mulb
mov
dec
insb
mov
or
ja
stc
cmpsb
fldenv
loop
push
cltd
pop
mov
insb
jne
loopne
ss
out
add
in
xchg
xor
stos
and
dec
in
out
adc
sbb
cmpsl
mov
sarb
jmp
mov
test
or
push
cli
add
addl
shl
jle
cs
sbb
ljmp
fdivrs
dec
pop
mov
insb
sub
push
xchg
inc
inc
aas
cmc
scas
push
inc
pop
or
cmp
pop
pusha
lret
jl
mov
leave
push
and
dec
xor
and
sub
and
pop
xchg
dec
aas
mov
sub
or
inc
push
negl
adc
or
push
jns
or
sahf
filds
xchg
mov
sbb
incl
push
pop
sbb
jns
xor
loop
mov
pop
xor
jge
roll
jl
mov
dec
push
cmc
pop
test
xor
pop
pop
adc
stc
cmp
add
pop
dec
xchg
cli
pop
fistpll
test
mov
mov
sbb
and
movsb
cmc
pop
ficomps
arpl
inc
mov
mov
std
ficomps
mov
push
lods
push
loope
pop
inc
push
cmp
mov
lds
insl
enter
or
push
dec
dec
movb
jne
lods
cmp
ret
inc
mov
mov
stc
insl
fildl
cld
cli
xor
cwtl
in
cmp
mov
jle
dec
or
das
push
jmp
call
or
addr16
movl
pop
mov
gs
mov
insl
test
out
mov
jbe
jge
mov
push
jmp
mov
leave
inc
jg,pn
mov
pop
in
mov
leave
aam
cmp
std
in
xchg
ljmp
or
ja
leave
and
fisubrl
pushf
sti
rcll
cmpsl
out
pop
enter
inc
inc
cmpb
jle
popf
xlat
bound
test
leave
sbb
sbb
mov
dec
enter
lock
sbb
sbb
push
add
mulb
xor
xor
mov
push
leave
dec
cmpsl
add
inc
fs
rcll
idivl
adc
mov
xor
cmpl
inc
add
mov
sub
in
fnsave
push
hlt
push
imul
outsb
cmp
xchg
inc
sbb
mov
and
popa
jns
mov
and
dec
insl
adc
stos
sub
xor
cmc
xchg
in
inc
mov
ret
in
divl
in
aaa
inc
fildl
imul
add
mov
sbb
js
dec
mov
leave
ja
daa
or
cmp
mov
and
push
and
imul
faddl
adc
ss
sbb
rcll
sti
xor
mull
dec
sub
push
xchg
dec
inc
mov
and
das
test
insw
fistl
ss
notb
sarb
inc
pop
mov
dec
fwait
push
int
jl
cmp
cmpsl
push
sbb
sbb
ret
push
or
in
in
lret
inc
pop
xchg
mov
jnp
lret
les
insl
adcl
sbb
sub
add
push
mov
mov
scas
and
insl
outsl
fs
std
mov
or
jnp
dec
jns
pop
inc
enter
jmp
xchg
jne
and
int3
ret
test
ja
ret
push
imul
insl
xchg
or
psubusb
data16
or
sbb
sbb
sarb
jle
xor
xor
inc
push
ljmp
push
adc
push
int3
jp
sbb
bound
fsts
xchg
or
inc
ljmp
fnstcw
mov
and
ficompl
dec
xor
das
mov
xchg
adc
mov
pop
test
sub
insl
popf
or
jo
mov
mov
dec
dec
mov
lcall
mov
pop
or
push
cwtl
inc
xor
movsl
inc
push
pop
mov
xor
and
push
adc
mov
daa
cmpsb
scas
fstpl
enter
sub
lods
in
mov
cmp
out
xor
cmp
pop
cmp
ljmp
push
push
aas
es
mov
xchg
sub
jne
mov
pop
std
sti
leave
stos
test
clc
inc
pushf
mov
call
mov
cmp
inc
inc
enter
or
addr16
negb
ljmp
test
in
leave
fcoml
rcr
ja
push
cs
movl
jno
leave
loopne
int
mov
out
inc
in
ds
leave
cmp
shrl
out
mov
int
xor
mov
mov
iret
inc
push
dec
je
mov
fwait
inc
int
ret
jno
mov
imul
imul
and
bound
hlt
mov
xor
pop
icebp
mov
loop
mov
xor
push
or
sbb
ljmp
mov
add
push
mov
inc
mov
and
inc
rorb
cmp
addr16
adc
and
arpl
nop
inc
and
push
mov
and
and
push
sub
pop
mov
mov
add
cwtl
dec
dec
inc
insl
push
xor
out
movsb
cmpsb
mov
lods
xlat
sbb
outsl
adc
jle
sub
in
sbb
push
mov
sahf
mov
or
add
imul
inc
call
notl
pop
xchg
lods
mov
sbb
and
decb
push
push
addb
jg
out
lods
mov
das
dec
stc
push
flds
jl
pop
ret
mov
push
sub
xor
sahf
iret
xor
dec
sub
xchg
mov
loopne
jmp
adc
hlt
arpl
mov
dec
inc
push
cltd
push
and
push
shll
in
push
xor
and
fsts
pop
mov
jmp
mov
push
xchg
out
mov
mov
mov
or
ret
negl
pop
lds
or
and
xor
mov
mov
cmp
jle
pop
fwait
mov
shll
nop
jg
add
sub
pop
jno
inc
jecxz
cli
out
jp
fwait
inc
sbb
loopne
or
xor
popa
arpl
insb
mov
or
sub
rcrl
push
and
mov
enter
clc
lcall
mov
xchg
sub
mov
sbb
add
lahf
dec
cmp
bound
cltd
imul
add
fnstcw
outsl
add
inc
fisubrl
mov
rcrw
and
jl
pushf
mov
mov
pusha
push
aad
push
jb
scas
ds
xor
sub
mov
dec
iret
clc
ret
mov
adc
dec
ja
or
jne
push
sarl
push
aaa
add
test
mov
cs
or
push
push
stc
fwait
out
sbb
lods
add
cld
sub
loope
sti
std
lret
pop
jecxz
xchg
test
fiadds
mov
cwtl
je
add
inc
adc
shrl
enter
sbb
cmp
cmpsb
pop
inc
insl
into
cmp
cmp
pop
aam
push
pop
mov
xchg
pop
cmpsl
dec
ljmp
lods
notb
sub
out
call
test
pop
addr16
rcrb
adc
adc
jmp
insl
sbb
lds
sbb
cmpsl
xchg
xchg
mov
fisttps
push
cmp
fsubs
scas
mov
mov
cli
jns
cld
lods
add
ficompl
xchg
jl
push
inc
lcall
jmp
les
lret
sub
cli
insl
in
mov
bound
or
and
mov
adc
dec
cltd
flds
cltd
jg
push
inc
pop
int
sahf
leave
andb
cmp
jae
mov
push
jecxz
add
xor
cmp
push
lods
jecxz
mov
cwtl
std
sbb
pop
cmp
mov
out
icebp
mov
cmp
imul
rcrb
popf
jns
xlat
dec
pop
lods
cwtl
test
loopne
push
imul
fldcw
rcrl
fsubrp
test
scas
cmp
outsb
dec
lcall
pop
ret
aaa
aad
mov
and
sahf
fwait
jle
inc
mov
dec
pop
cmp
imul
push
mov
sub
or
inc
adc
sub
jmp
mov
push
pop
xchg
and
imul
push
imul
rorl
xor
bound
cmp
lock
mov
enter
xchg
lock
push
loope
pop
sub
xor
jge
pop
and
sbb
insb
sbb
cmp
xor
ret
and
mov
outsb
faddl
inc
xchg
mov
cmp
loop
cld
dec
cli
jnp
cmp
ret
mov
sbb
inc
push
mov
fdivrp
inc
cmp
mov
inc
push
jno
lods
arpl
cld
jno
fstpl
jmp
or
lahf
lret
addr16
data16
stos
scas
push
dec
sub
repz
jno
pop
pushf
ret
sub
dec
insl
loop
aas
dec
add
loope
inc
dec
call
cs
xor
and
push
mov
call
dec
ljmp
andb
aad
sti
imul
pop
pop
push
fcmovbe
push
inc
push
cmpsl
lea
sbb
mov
insl
loope
add
insl
mov
fadd
mov
or
mov
nop
inc
mov
negb
jbe
xor
push
adc
leave
push
pop
in
xor
lret
fwait
inc
jle
imul
in
leave
mov
ss
lds
jo
out
xor
or
pop
sbb
insb
push
adc
jge
push
add
loope
in
pop
cmp
loop
xor
fiadds
mov
sub
lcall
cmc
inc
add
out
movsb
insb
fldenv
vmovmskps
push
pop
jl
jp
aaa
movsl
pop
mov
mov
inc
repnz
inc
lods
and
dec
add
fldt
int3
push
jmp
cwtl
in
xchg
loopne
ret
stos
mov
mov
sub
xor
jno
pop
mov
adc
ds
inc
lods
pop
rcl
lods
cld
inc
test
mov
add
sbb
fsts
mov
mov
or
cmp
out
sbbb
and
aaa
jnp
sub
cmp
les
pop
pusha
ret
sub
out
or
inc
leave
inc
lods
push
enter
mov
dec
outsb
and
inc
lods
jmp
ds
jmp
jne
or
iret
mov
jl
icebp
and
aaa
scas
jg
ret
es
stc
dec
loopne
in
jl
inc
lret
int
add
mov
xlat
stos
xor
sub
mov
out
cmpsb
adc
xchg
stos
mov
arpl
fldcw
loop
push
mov
push
inc
cld
pop
inc
xor
jns
enter
clc
push
mov
and
add
repz
movsl
mov
gs
inc
jno
ret
push
push
xor
into
cmp
jbe
mov
into
pop
xchg
dec
sbb
mov
mov
mov
testl
pop
xlat
scas
ss
jne
lahf
or
mov
xor
mov
inc
cs
call
dec
and
test
dec
push
lds
mov
dec
test
clc
loop
imul
nop
push
inc
in
cli
stos
cltd
scas
fadds
cmp
outsb
mov
sbb
mov
daa
jmp
dec
and
and
pusha
jbe
dec
imul
or
call
lret
mov
loopne
movsb
or
insl
imul
fmul
push
xor
ljmp
imul
push
push
dec
inc
rcrb
mov
adcl
mov
gs
fdivrl
ja
cmp
push
aaa
nop
shrl
je
and
shrl
test
adc
add
cmp
sbb
sub
mov
in
mov
xchg
and
and
les
dec
idivl
fistl
addr16
ss
out
outsl
dec
pop
mov
jo
and
into
mov
sub
dec
hlt
dec
jecxz
xor
js
add
xchg
fldcw
loopne
and
cmp
cs
xchg
js
jmp
subl
lret
xchg
dec
imul
loope
push
stos
mov
dec
outsl
lock
adc
jbe
inc
push
mov
push
test
in
or
orb
xchg
dec
pop
enter
fisttpll
lahf
jg
dec
dec
scas
imul
mov
dec
bound
mov
pop
push
leave
dec
jno
jnp
pop
adc
arpl
xlat
jmp
sub
dec
movsl
mov
stos
mov
push
adc
shl
std
mov
pop
adc
mov
inc
push
ret
imul
xchg
arpl
pop
pop
in
pop
out
jg
push
xor
sub
cmp
xlat
jb
dec
dec
sahf
or
out
cs
pop
arpl
sbb
xor
pushf
jp
outsl
sub
push
jmp
es
sub
xchg
push
inc
pop
inc
iret
rorb
xor
mov
lea
push
insl
dec
mov
cmc
addr16
scas
push
push
push
mov
enter
fists
outsl
sbb
enter
adc
sub
jnp
aad
dec
stc
jl
scas
add
sub
jmp
bound
fmuls
and
and
notb
adc
call
into
dec
ljmp
sub
movb
mov
mov
mov
and
arpl
sub
xor
nop
repnz
and
mov
push
push
mov
setno
jge
insl
stc
inc
arpl
pop
cld
je
out
pop
aas
test
ficoms
sahf
push
push
xchg
pusha
and
mov
jmp
xchg
dec
pop
loop
dec
lea
lret
and
out
rol
push
dec
sahf
push
xchg
pop
sub
adc
shl
test
mov
dec
outsl
hlt
in
inc
scas
insl
dec
je
cld
pop
mov
inc
cs
or
push
inc
xchg
jmp
mov
lcall
sbb
push
adc
icebp
xor
into
cs
lock
add
dec
and
lcall
rol
adc
pop
cmp
call
and
in
ja
bnd
stc
loopne
insl
imul
adc
jmp
pop
dec
sbb
daa
in
mov
loopne
gs
jecxz
dec
in
mov
in
lahf
inc
and
popl
jae
pusha
ret
mov
and
test
je
in
and
fcoml
mov
daa
lcall
lahf
andb
add
sbbl
outsw
fcmovnbe
test
xor
or
cmc
pusha
insb
xor
mov
adc
dec
roll
or
fs
add
add
test
insl
sbb
add
loope
in
in
lret
int3
add
inc
sarl
loope
mov
sbb
push
scas
sub
inc
aas
in
gs
lahf
push
cld
fyl2xp1
aaa
dec
in
sub
lret
add
mov
jb
testb
imul
or
dec
xor
popa
ficoms
push
roll
dec
jnp
jg
pop
adc
push
push
push
add
inc
arpl
jnp,pt
jae
ds
test
inc
addl
or
aam
stc
xor
loop
pop
dec
adc
inc
pop
mov
mov
add
pushf
sbb
je
iret
inc
mov
cwtl
scas
xor
fcmovb
xchg
scas
repz
cmp
call
or
dec
push
call
cmpsl
cmp
sahf
xor
aam
xor
add
push
pop
adc
or
push
mov
mov
push
jg
pop
imul
adc
push
inc
inc
idivl
int
mov
roll
and
pop
mov
fdivrs
divl
ret
ds
dec
fidivs
rcll
ja
sub
inc
mov
adc
or
add
jo
sbb
or
xor
cltd
sub
lret
ja
mov
lock
fdivr
and
pop
xlat
mov
inc
dec
jmp
sbb
imulb
dec
repnz
mov
gs
jl
inc
inc
push
add
popf
daa
dec
or
cmc
jmp
sbb
rol
add
push
mov
insl
pop
mov
jg
sti
lods
jb
js
das
adc
mov
jmp
pop
fnstenv
test
mov
jne
xor
xchg
push
pop
and
sarl
outsl
subl
arpl
mov
fs
mov
faddl
sub
pop
inc
outsb
mov
push
and
rcrb
jae
add
push
sti
ret
rorl
cmp
mov
loopne
and
xor
xchg
jp
sub
inc
jg
loopne
mov
cld
sbb
int3
push
insb
xchg
and
sbb
push
pop
jnp
mov
dec
aam
leave
popa
mov
sub
bound
stos
or
add
popa
cmpsl
test
ret
leave
inc
xor
popf
mov
dec
fs
insb
inc
arpl
rcl
pop
inc
in
fcom
push
int
cmp
flds
movsl
mov
fs
into
inc
or
add
lock
test
ret
mov
call
mov
lahf
daa
mov
cmpsl
inc
lret
std
sub
test
and
sbb
xor
ljmp
sbb
mov
fldenv
inc
fadd
xchg
mov
imul
add
std
clc
sbb
push
pop
sbb
pop
call
test
rclb
call
mov
mov
pop
sub
xchg
popf
jl
sbb
stos
dec
sub
insb
neg
or
xchg
xor
mov
sahf
ja
sbb
rcrl
sub
xchg
iret
jge
mov
xchg
stc
pop
or
push
xchg
inc
cmp
addb
lods
mov
aad
or
lahf
je
push
pop
mov
push
fistpll
inc
lods
sbb
or
scas
sti
adc
xchg
fcoms
jmp
jp,pt
and
jbe
xor
inc
cmp
mov
sbbb
mov
and
add
pop
and
dec
xchg
sbb
pop
sbb
insl
xchg
pop
in
xor
xchg
lods
mov
and
frstor
mov
iret
ja
jns
cmp
cli
xor
into
mov
iret
mov
mov
jae
add
into
fdivrs
roll
mov
pop
sarb
xor
clc
es
sub
mov
cmpl
addl
cwtl
xor
xor
xor
xchg
pop
dec
xor
lods
iret
jbe
mov
addr16
stos
inc
gs
push
xchg
aad
dec
das
cli
les
addr16
bound
inc
icebp
aaa
lods
fldenv
adc
inc
dec
xor
push
push
sub
outsb
shlb
jg
and
dec
pop
subl
jle
xor
xorl
inc
movsl
insl
xchg
testb
mov
mov
cwtl
enter
lcall
les
adc
divl
or
or
sub
enter
dec
ret
xor
rorb
jae
pop
jnp
aad
mov
sbb
inc
xchg
xor
dec
dec
jle
nop
shl
or
popf
icebp
leave
pusha
inc
inc
fidivl
inc
movsb
loopne
les
jne
dec
pusha
and
insb
mov
repz
in
jno
xchg
enter
std
mov
sbb
fwait
pop
sbb
and
cmp
push
xor
mov
mov
pop
push
sub
jmp
pop
jne
sub
push
mov
pop
xor
ds
loopne
test
cs
pushf
dec
or
sbb
xor
shll
add
sub
fldl
push
aam
fdiv
and
and
cmp
mov
test
pop
testb
aaa
or
scas
jge
dec
pop
xor
xor
das
mov
jle
ss
aad
dec
clc
adc
jle
enter
xchg
sbb
inc
adc
mov
mov
sub
pop
movq
push
sbb
jl
mov
inc
je
out
clc
cmp
pcmpeqb
ljmp
sub
sti
lds
sbb
fstps
push
aam
mov
mov
inc
cwtl
adc
jle
subb
push
mov
add
dec
mov
mov
mov
add
cmp
jle
push
daa
aad
mov
int3
and
push
dec
dec
cmp
pop
inc
mov
pusha
pop
movsb
sbb
adc
sub
adc
or
adc
jg
push
aas
or
mov
jno
icebp
jp
mov
call
inc
lods
jbe
xor
and
std
test
in
add
aaa
mov
lcall
cmp
cmp
mov
lahf
push
loopne
pcmpgtb
roll
and
cmp
jns
push
in
roll
mov
dec
pop
popf
call
cmp
add
mov
aas
clc
and
pop
jns
mov
or
xchg
pop
daa
xchg
into
and
and
and
sub
inc
lods
xor
inc
insb
inc
addl
fcmovu
scas
or
mov
pop
adc
pop
orb
shll
mov
cmpsl
aad
shll
xlat
mov
shlb
loope
cmpsl
clc
push
xchg
aam
xor
xchg
mov
jbe
ss
push
fcoms
xchg
jnp
adc
cmpsb
data16
ja
aas
sbb
out
or
pop
sbb
adc
outsb
je
jle
fsts
insl
ja
push
adc
pop
inc
outsb
cmp
loop
int3
sbb
sub
mov
ds
xchg
or
jne
mov
cmp
pop
ss
shlb
ret
cltd
sbb
fisubl
mov
imul
fidivrl
jl
ja
push
dec
aad
pop
outsl
adc
sbbb
mov
or
mov
lret
sbb
mov
xchg
add
test
xor
sbb
mov
adc
add
adc
xchg
insl
in
xorb
mov
leave
lods
dec
ret
adc
jbe
sub
mov
lcall
mov
cmc
arpl
int
sbb
notb
pop
popa
pop
mov
rcrb
insb
mov
cmp
fsts
sbb
lahf
sub
or
sub
out
test
cmp
xor
lock
push
jg
and
out
and
cmp
inc
sub
sti
sbb
mov
cmp
add
and
in
aad
cli
xchg
mov
int
inc
negb
push
dec
adc
or
sbb
mov
mov
outsb
push
shrl
sub
jnp
xchg
cmp
dec
dec
hlt
xchg
bnd
daa
dec
pop
sbb
cmpsl
addr16
lods
or
push
jne
pop
pop
cmp
push
imul
scas
mov
imul
mov
push
daa
pop
inc
into
mov
push
cli
cmp
dec
insb
push
pop
fs
sbb
ret
cmpb
data16
adc
fsubrs
jae
adc
xor
cltd
ss
mov
add
and
imul
jle
jecxz
mov
dec
lahf
xor
xchg
das
cld
rcl
pop
add
xchg
mov
lods
arpl
int
lcall
nop
mov
jo
loope
ret
jae
test
mov
cld
cmp
arpl
cmp
sti
jl
aam
sbb
push
mov
mov
jg
push
or
and
int
lcall
dec
insb
xchg
dec
adc
sbb
gs
sub
mov
jp
dec
pop
lret
je
ds
rorl
clc
sub
sbbl
into
ds
std
cltd
jmp
or
lret
roll
and
shrb
sbb
xchg
pop
fcoms
and
xlat
jbe
arpl
shrl
xor
inc
and
ljmp
mov
stc
inc
push
scas
jb
out
inc
mov
ds
mov
mov
sbb
pushf
mov
push
pop
push
int3
dec
sub
jns
shrl
bound
mov
mov
xor
pop
pop
cmpsb
pop
xchg
xchg
stc
push
jge
or
scas
or
adc
sbb
test
mulb
sbb
faddl
call
and
into
in
xchg
fs
pop
dec
add
std
inc
jns
cmovg
enter
lods
dec
mov
push
fisubs
push
inc
sub
jle
jge
mov
pop
pop
cmc
mov
test
xchg
in
rorl
xor
inc
push
add
mov
into
sub
mov
les
sbb
xchg
mov
call
sub
inc
sbb
or
sbb
test
sti
pop
sub
ja
adc
pop
into
dec
fistpl
outsb
movsb
popf
je
fld
std
or
dec
xor
mov
fstpt
test
inc
popl
leave
mov
or
cmp
aas
sahf
dec
cwtl
adc
stos
mov
or
push
xor
jnp
fstpt
xchg
dec
mov
ds
sbb
pop
cmp
push
idivl
pop
add
mov
xchg
add
push
pop
shr
jp
jg
inc
push
mov
cmp
push
cld
shrl
push
cmp
adc
insl
jmp
add
sbb
sbb
jnp
mov
xchg
loopne
dec
aam
xor
mov
cld
bound
cmp
push
sbb
sbb
inc
popf
or
enter
jb
or
loope
cltd
arpl
xchg
lret
out
inc
lret
adcl
lahf
test
les
dec
cmpb
mov
pop
pop
pop
rep
mov
ja
ficomps
dec
shrb
jne
jbe
mov
pop
sub
add
add
inc
loop
imul
xchg
in
int
mulb
rorb
stos
jmp
movsl
mul
dec
ljmp
jge
fs
bound
cmpsb
clc
push
repnz
jl
gs
mov
mov
outsb
sub
daa
pop
inc
mov
dec
xor
xor
mov
jmp
push
nop
lea
daa
subl
sub
dec
sti
jb
mov
mov
test
dec
mov
jnp
por
testl
imul
or
fs
aad
ds
mov
xor
add
in
dec
sbb
pushf
pop
es
dec
mov
lods
pusha
or
in
cmp
mov
sbbb
or
cmp
dec
xchg
xchg
xchg
xchg
sub
and
cwtl
lret
or
or
ffree
mov
or
mov
and
pop
rorb
xchg
pop
flds
out
aad
shr
aaa
mov
fldt
push
imul
cwtl
cmp
dec
inc
or
mov
out
or
mov
inc
push
push
ret
dec
sub
pop
stos
dec
xchg
data16
dec
push
pop
lret
and
addr16
cmp
out
cmp
adc
push
dec
pop
fdivrp
mov
cltd
int3
mov
push
sub
iret
js
inc
xchg
sbb
add
cs
mov
insl
js
mov
dec
adc
enter
jge
scas
cmp
xchg
xor
sbb
rolb
pop
dec
ficompl
or
lds
jge
dec
fisubs
or
push
sti
dec
lods
das
in
mov
decb
pop
adc
mov
pop
inc
mov
add
scas
cmp
jns
pop
testl
pop
adc
loope
xchg
jnp
push
in
jns
adc
hlt
pop
pop
dec
jle
lret
dec
cwtl
out
andb
out
int3
pop
bound
out
cmp
pop
ljmp
push
test
je
cld
mov
mov
imul
and
push
cmp
push
mov
xchg
push
jmp
sbb
inc
jb
dec
jae
fcoms
push
inc
dec
dec
push
es
cmp
int
sbb
push
dec
out
jbe
mov
rorb
movsb
loop
scas
out
cwtl
aaa
pop
push
iret
xchg
rorl
dec
xchg
fisttpll
mov
mov
rclb
loop
les
sbb
dec
adc
imull
jmp
xor
lret
adc
cmp
mov
fdivr
dec
jbe
in
sub
mov
dec
and
jg
testb
cmp
lea
xchg
or
rcrb
push
nop
test
jno
push
arpl
and
insb
dec
std
insl
aaa
or
in
or
add
dec
or
jae
fwait
mov
out
js
dec
dec
arpl
jmp
cwtl
fcomps
aam
dec
ljmp
sbb
in
xor
sti
in
dec
xchg
cmp
sub
pusha
dec
sub
pop
inc
jle
test
sbb
mov
push
xor
scas
out
pop
jge
das
mov
adc
aad
push
movsl
mov
cmp
push
jl
mov
xchg
mov
inc
lods
inc
push
lds
shrb
cmp
dec
out
scas
in
sti
insl
mov
in
and
xlat
mov
je
ret
pop
adc
orb
mov
pop
dec
dec
aam
sbb
ds
je
pop
push
out
insl
lods
mov
sub
mov
in
xor
leave
sub
rorl
cli
cmp
push
fbld
test
lods
mov
imul
mov
and
movsb
mov
ja
mov
dec
enter
out
cli
cmp
mov
loop
icebp
mov
sub
dec
push
clc
jmp
mov
pop
pop
sub
mov
push
outsl
scas
ret
sub
cmp
cmp
push
jae
sub
jge
test
pop
lea
imulb
mov
out
jmp
test
push
rcl
daa
mov
stos
xchg
popl
std
pop
adc
dec
into
jecxz
xchg
adc
mov
loopne
cmc
iret
imul
pushf
sbb
inc
call
repz
mov
and
jne
inc
sbb
push
fstps
aad
out
dec
jg
jb
lret
leave
insb
idivl
sahf
ret
pop
jl
push
inc
sub
hlt
loop
jae
andb
insl
dec
imul
dec
stos
pop
pop
dec
in
add
lock
sub
fimuls
loopne
push
fsub
adc
dec
mov
jecxz
dec
lret
aam
jb
popa
dec
inc
fildl
orb
jge
adc
mov
or
and
into
inc
xchg
xor
dec
or
aam
mov
inc
and
insb
stc
sub
imul
jecxz
fisttps
mov
iret
push
xchg
push
mov
pop
test
push
and
dec
test
mov
out
dec
jmp
add
mov
loopne
hlt
ss
mov
xchg
call
loope
dec
movsb
lock
push
shrl
adc
xor
inc
adcb
mov
orl
mov
daa
inc
fsubl
cld
inc
jb
je
mov
sahf
pop
leave
jmp
pushf
js
push
inc
fisubrl
or
and
cmp
dec
xchg
adc
xor
icebp
out
stos
jmp
push
fisttpl
cmp
std
mov
inc
inc
subb
imul
nop
xchg
jmp
enter
dec
mov
ret
test
stc
adc
mov
imul
dec
ds
push
mov
in
dec
cmp
imul
test
cmc
push
jmp
ds
stos
dec
sti
jae
fs
pop
jns
dec
outsb
adc
rorb
loop
jnp
jne
push
adc
pop
dec
and
lods
xchg
dec
sub
pusha
inc
dec
pop
rorl
dec
repnz
movl
mov
dec
xchg
jns
ljmp
mov
sti
dec
push
dec
dec
mov
mov
pop
scas
push
xlat
sbb
int
fsubrl
jo
shrl
xor
out
js
pop
inc
pop
xor
mov
mov
fcoml
xlat
dec
push
cmp
sbb
fwait
mov
mov
arpl
xchg
push
hlt
mov
mov
mov
xor
jl
dec
pop
fstps
or
sbb
sub
sbb
inc
mov
loope
mov
adc
dec
xchg
fildll
out
dec
in
push
aam
cmpb
jmp
sbb
sbb
fimuls
jne
faddl
ds
ja
lret
sub
sbb
push
rorb
sbbb
fcom
dec
pop
xchg
and
loopne
or
dec
js
sbb
out
pushf
enter
call
cwtl
dec
cmpsl
xchg
dec
insb
ret
adc
sub
jae
insl
cld
shrb
aad
imul
jl
mov
mov
or
je
loopne
push
adc
aam
pop
jae
fstpl
push
inc
pusha
lock
cmc
xchg
jl
sbb
jle
outsl
jne
mov
jmp
out
push
std
call
mov
jge
or
lea
mov
sub
ljmp
sub
or
mov
out
sbb
push
push
mov
mov
test
sub
mov
cwtl
xchg
mov
rcr
xchg
pop
arpl
inc
dec
fisttps
fsubrl
fmuls
iret
pop
or
imul
imul
addr16
lock
out
sub
xchg
ja
xchg
ficompl
jno
dec
jecxz
ss
imul
subl
sbb
adc
add
mov
loop
jnp
cmp
push
stos
insb
jbe
insb
jnp
aaa
mov
mov
cmp
jecxz
inc
dec
jnp
mov
in
and
bound
lods
stc
jp
pop
lds
jnp
dec
xchg
xor
inc
lods
xor
mov
pop
lcall
aaa
ds
and
stc
rclb
movd
inc
std
xor
pop
mov
mull
repz
stc
push
sbb
enter
or
jb
mov
sbb
xchg
jns
cmp
mov
cmc
push
das
lcall
shll
pop
sub
add
dec
imul
dec
daa
xabort
insl
xor
push
inc
mov
lods
dec
call
cs
jnp
pop
push
cli
clc
test
es
push
mov
and
les
xor
mov
pop
clc
jecxz
sub
sbb
es
dec
dec
orb
movsb
add
aad
pop
xchg
inc
push
and
aas
push
leave
cmp
dec
inc
es
stc
add
dec
ljmp
in
push
sub
push
ss
adc
call
and
jnp
imul
mov
push
add
add
insb
aaa
jp
pop
fcoml
push
addr16
iretw
dec
jle
and
sub
xor
or
inc
dec
shll
inc
xchg
sub
pushf
mov
mov
mov
in
mov
jno
dec
xor
les
dec
pop
push
lods
or
lea
jnp
movsl
rclb
inc
mov
repz
mov
mov
mov
sub
test
push
fisubrs
imul
das
movl
xor
pop
push
cmc
xor
pop
xor
push
cmp
popf
leave
push
xchg
xchg
hlt
jecxz
mov
loop
cmc
push
mov
fwait
popf
icebp
and
pop
push
xor
pop
add
jmp
test
or
xchg
xor
iret
inc
lods
adc
bound
sbb
leave
int3
pop
adc
lods
sarb
call
xchg
mov
sti
xchg
mov
xchg
xor
mov
ficoml
enter
loopne
add
dec
dec
aad
sarl
popf
clc
icebp
add
lret
adc
push
pop
shll
adcb
clc
lahf
decb
mov
and
push
loop
xor
pop
mov
cmc
in
add
sbb
lds
dec
sbb
xor
pop
mov
mov
dec
inc
inc
mov
pop
sarb
inc
cmp
or
outsl
adc
xchg
mov
sbb
out
xchg
or
loopne
aad
inc
adc
dec
mov
negl
in
or
outsl
mov
out
pop
cld
jmp
xlat
mov
fdivs
jae
or
mov
adc
mov
lcall
cld
int
sub
mov
icebp
add
test
mov
sub
inc
enter
mov
cmp
shll
or
lds
add
gs
jle
jg
push
xor
or
call
test
jo
int
inc
in
cmpsl
push
inc
pop
jb
xchg
sahf
xor
adc
xor
adc
push
or
cwtl
push
pop
xchg
push
jg
xor
shlb
pop
int3
loopne
fdivl
inc
push
sub
push
incl
inc
push
add
aam
pusha
imul
cmpsb
vcvttps2dq
bound
inc
and
imul
sahf
and
jns
mov
push
add
cld
or
xor
jae
aaa
pop
or
pop
sbb
sbb
test
inc
dec
dec
push
mov
or
lods
lods
arpl
xor
insl
subl
imul
imul
push
push
mov
cmp
orl
fdivrl
push
sbb
push
das
call
lods
jbe
mov
sbbb
xor
mov
int
loop
push
mulb
faddl
inc
orl
sahf
mov
je
dec
rclb
push
pushf
xor
mov
and
xor
push
inc
jbe
outsb
imul
jo
xor
jmp
xlat
cld
xor
movsb
mov
mov
pop
pop
sti
inc
sub
jle
mov
pop
lahf
bound
cmp
mov
mov
ficoml
adc
mov
outsl
dec
mov
pop
jnp
int
fldcw
fstps
nop
sahf
mov
sbb
in
adc
mov
push
push
adc
imul
lock
or
mov
pop
jb
inc
fimuls
cmp
fisubl
adc
xor
dec
jmp
sub
test
push
cmpb
testl
sub
enter
xchg
ja
in
sub
je
xor
adcb
stos
xchg
into
adc
xchg
adc
mov
mov
sti
cwtl
mov
bound
pop
insb
adc
sub
lds
mov
mov
mov
cmp
inc
stos
mov
and
adc
ds
fiadds
sub
jae
pop
outsb
movsl
adc
cmp
pusha
loope,pn
mov
pop
mulb
xchg
xchg
mov
pop
loopne
ds
repnz
push
adc
shrb
ret
mov
addr16
push
sti
imul
imul
and
mov
mov
mov
xchg
xchg
or
test
pop
out
ret
fimull
inc
inc
mov
fs
push
mov
aam
movsl
push
jecxz
hlt
scas
pop
jle
movsb
mov
enter
repnz
sbb
std
add
cmpsb
or
push
stc
push
jg
addl
mov
mov
or
mov
jle
add
dec
push
lret
xchg
out
mov
test
xor
rclb
lds
and
je
jmp
sar
push
data16
xor
dec
xor
jg
shll
sub
pop
xchg
sub
call
daa
cmpsb
cmp
cmp
mov
inc
cs
call
out
dec
movsl
dec
ljmp
inc
push
cmpsb
fsubrl
insb
fisubl
sub
inc
sub
in
stos
add
frstor
pop
addr16
cld
and
pop
pop
xor
rcrb
mov
pop
jo
lea
mov
mov
insl
push
push
sbb
and
ds
push
push
jecxz
lds
mov
pop
ret
stos
mov
cmp
loop
adc
inc
or
jecxz
mov
dec
stos
push
add
jge
inc
jo
in
filds
inc
leave
mov
mov
gs
icebp
arpl
lret
pusha
fcomps
iret
and
mov
popa
sub
jb
pop
aad
sub
jb
xchg
adc
push
jmp
mov
js
add
aas
mov
ficoms
mov
lods
pop
repnz
jg
jae
or
adc
ds
fisubrs
or
lock
repz
mov
jno
cmp
adc
js
mov
adc
add
mov
push
insb
rorb
jge
int
mov
inc
bound
mov
fldl
lret
cmp
inc
push
push
or
push
push
mov
sub
xor
arpl
adc
and
cmpsb
je
jmp
out
xor
adc
sahf
sarl
pop
ds
dec
call
inc
scas
mov
mov
pop
push
jle
addb
cmpsl
ljmp
iret
mov
mov
xor
enter
stc
mov
mov
pop
push
mov
imul
adc
mov
aad
mov
inc
cmp
fstps
add
or
popf
mov
subl
loopne
push
mov
or
inc
mov
outsl
insl
xor
pop
dec
mov
out
mov
sub
repz
daa
and
push
mov
in
sub
or
cld
inc
setg
push
jo
xor
mov
dec
int
push
add
outsb
cmp
mulb
stos
xchg
jbe
pop
sarb
or
sub
xlat
mov
ja
mov
dec
pop
rcrl
or
inc
mov
fisttpl
enter
add
sub
and
jno
xor
lret
mov
or
jge
test
inc
dec
push
lret
mov
or
sti
adc
lret
pmulhw
inc
inc
xor
cli
xor
sahf
imul
aad
xor
popf
push
adc
push
sub
pop
ja
xchg
js
mov
into
lret
adc
mov
clc
pop
dec
aas
adc
mov
sti
lret
sarl
cwtl
jbe
cmp
pop
dec
push
sbbl
subl
stos
or
test
push
push
jno
les
aas
lods
and
and
test
or
add
cmp
adc
in
mov
lret
in
jp
fbld
arpl
insl
add
or
sbb
push
mov
es
mov
lds
adc
ficoml
lods
or
je
jb
loop
mov
into
enter
sbb
push
cmp
xchg
outsb
pop
pop
dec
fwait
test
adc
push
mov
ror
mov
pop
enter
inc
jmp
loopne
rcll
prefetchnta
pop
cltd
js
dec
xor
int
jle
adc
add
and
xchg
mov
sub
daa
idivb
dec
cmp
dec
repz
xchg
cmpsl
adc
pop
iret
in
cmp
stc
xchg
addb
push
das
ja
pop
mov
stc
jmp
inc
xchg
pop
and
scas
mov
int3
test
addb
xlat
sbb
push
sub
xor
cmp
mov
add
loopne
dec
jg
push
dec
inc
adcb
cli
in
fiadds
outsl
jae
scas
sbb
stos
pop
mov
lds
adc
repz
jge
lods
jo
ret
and
dec
out
aad
inc
aad
test
ficoms
mov
das
loopne
cmc
aaa
mov
mov
adc
int
adc
and
cmp
ss
adc
inc
adc
xchg
lds
aad
ret
pop
insl
pop
fnstcw
dec
dec
dec
inc
call
dec
add
arpl
sbb
repz
aad
jo
lds
mov
dec
cmp
push
lret
loopne
pop
push
ret
mov
int
fimuls
xor
dec
pusha
mov
cmp
sub
lret
mov
pop
xchg
mov
enter
or
pop
push
fldt
outsl
subl
aad
nop
sbb
mov
sub
cltd
rcrl
scas
stc
loop
lcall
loop
insl
cmp
ret
lahf
and
pop
mov
shll
cmp
dec
gs
push
xlat
outsb
ljmp
inc
jl
data16
or
add
mov
int
sbb
rorl
test
sysenter
sbb
cld
xchg
enter
ret
lods
pop
sbb
mov
in
xor
ja
aad
stc
dec
out
fistl
mov
lcall
mov
dec
sub
movsl
test
xchg
xchg
jnp
adc
push
pop
inc
push
clc
out
insb
or
or
push
pop
lcall
popf
sub
inc
fsubr
pop
push
ja
rolb
ds
and
aas
lret
mov
adc
daa
mov
mov
aas
fnstcw
sub
bound
jnp
pusha
imul
xlat
mov
and
into
mov
push
scas
dec
mov
loop
aas
adc
pop
dec
xchg
xchg
inc
xchg
dec
inc
sarb
insb
push
mov
mov
stc
xor
xor
cmc
jb
jecxz
pop
mov
and
cltd
sub
dec
mov
imul
sti
mov
sub
inc
or
mov
add
dec
hlt
jnp,pt
cltd
jge
mov
idivb
cmp
fnstenv
jae
pop
sub
mov
fcompl
sbb
aad
adcl
repnz
push
jmp
xchg
inc
sbbb
mov
lods
lea
sar
xlat
out
and
fadd
jo
test
movb
bound
and
inc
adc
sub
das
inc
lods
push
xor
inc
push
inc
cmp
sbb
cmp
adc
dec
inc
in
dec
lea
pop
inc
ret
pop
push
int3
jno
mov
aaa
jnp
cmp
jae
or
es
and
or
imul
daa
nop
xor
inc
int3
cmp
mov
push
mov
icebp
sarl
pop
mov
subl
cmp
mov
xchg
add
push
andl
mov
loop
mov
cmp
addr16
das
dec
sbb
pop
dec
fstl
xchg
add
in
in
xor
lods
cmc
pop
pop
rcl
sahf
stos
push
pushf
pop
jg
pop
and
or
mov
test
mov
cmpsl
xor
fildl
fs
fwait
sti
je
and
or
adcb
imul
daa
lea
xor
fmull
pop
sub
dec
repnz
into
int3
sahf
ret
hlt
enter
cltd
xchg
push
mov
cmp
insb
lret
dec
xor
imul
js
jb
and
push
cmp
pop
fadd
inc
iret
sub
pop
pop
aad
sbb
xchg
pop
and
lods
add
dec
and
mov
lods
leave
shrl
les
adc
ljmp
pop
push
out
aam
cltd
dec
cmp
sub
pusha
cmc
mov
inc
add
inc
out
adc
fmuls
or
cmp
dec
pop
shr
ret
xchg
push
insl
jb
rclb
dec
jg
inc
insl
stos
mov
mov
das
jb
sbb
and
mov
inc
push
bound
inc
loopne
cmp
dec
sub
and
popf
aaa
and
js
cltd
mov
sbb
fwait
jmp
imul
mov
loopne
pop
inc
outsb
stos
in
sub
mov
cmc
lods
rcr
popf
inc
sbb
icebp
add
push
ja
mov
popf
fwait
gs
jmp
push
fsubp
dec
cld
or
sbb
mov
loop
pushf
outsl
test
sub
out
iret
leave
lea
aam
xor
scas
push
fsubs
aas
sub
cmp
push
push
xlat
xlat
xor
xchg
bound
adc
iret
mov
jle
les
vpshaw
loope
jl
dec
and
xor
push
loopne
adc
dec
cmp
std
enter
mov
push
jne
push
xor
xsave
repnz
mov
jne
and
ret
mov
pop
add
arpl
inc
sub
ljmp
pop
jno
fwait
enter
sbbb
dec
leave
mov
sbb
int3
push
xor
insb
push
mov
adcl
int
loopne
xor
xor
cmpsl
sbb
push
insb
add
sti
cmp
xlat
xlat
add
and
mov
rcrb
inc
fmuls
dec
jnp
jg
cmp
ja
push
cmp
xchg
lret
pop
push
jp
xor
sbb
pop
or
das
leave
pop
push
inc
lcall
daa
push
mov
shll
sahf
lock
mov
jle
out
push
jmp
push
loopne
pop
cmpsl
cld
or
test
mov
int
scas
or
lea
dec
rcrl
bound
stos
gs
push
inc
mov
jp
pop
js
or
sbb
loop
mov
out
ret
sbb
xor
pop
push
push
mov
mov
and
fcomi
shrl
sub
lds
shrl
rcl
imul
movl
loopne
fcompl
and
or
push
cmp
inc
dec
iret
fs
pushf
jmp
mov
mov
lods
out
fsub
fwait
orb
push
int
push
cmp
sbb
xchg
loopne
add
dec
sub
add
call
repz
jne
mov
orl
push
fimull
les
insl
mov
mov
jb
addr16
shrl
xchg
lret
mov
push
inc
clc
mov
xor
clc
jp
mov
pop
clc
sbb
in
adc
loopne
cwtl
inc
or
mov
outsb
call
mov
test
pop
mov
orl
dec
push
push
ret
mov
lcall
jnp
lret
test
aaa
insb
insb
jns
lods
mov
pop
fs
cmp
push
push
addr16
dec
pop
cmp
pop
mov
adcl
int
loop
aad
push
add
jmp
push
cs
inc
hlt
push
xor
and
ror
adcl
inc
and
mov
jno
jmp
into
sbb
lods
dec
jae
sahf
sbb
rol
mov
rclb
jp
xchg
adc
mov
inc
cmpsl
mov
sub
sub
cltd
xchg
fidivs
or
in
test
xchg
inc
repz
outsb
mov
fs
pop
dec
test
and
and
shll
dec
enter
lods
mov
testb
sbb
lahf
xor
pop
mov
jmp
negb
mov
sbb
mov
addr16
inc
jb
push
popf
or
jmp
lret
add
pop
adc
ss
fs
pusha
pop
cld
pop
test
pushf
in
ja
xor
in
sub
mov
or
mov
mov
lods
sub
popa
enter
out
pop
adc
add
xor
push
jge
mov
push
int3
mov
sbb
mov
ret
lods
or
sbb
push
jne
inc
inc
xchg
xor
cmp
xchg
lea
jp
push
mov
faddp
mov
leave
in
xchg
cmpsl
jmp
push
or
add
sar
fcmovu
inc
mov
leave
shrb
inc
sbb
ret
mov
pushf
mov
mov
xor
cltd
fmulp
loopne
test
xor
insl
push
sbbb
out
gs
imul
imul
pop
pop
push
add
call
and
lea
mov
jecxz
xor
and
ret
sub
xchg
dec
mov
add
insl
pop
sbb
xchg
in
inc
xchg
xor
into
xor
lret
inc
dec
clc
cli
addr16
jmp
mov
insb
lods
rorl
mov
jns
in
enter
push
mov
dec
data16
mov
in
push
push
push
sub
adc
ret
push
js
mov
jle
testl
jle
xchg
icebp
mov
insb
pop
pop
dec
addr16
mov
add
push
pop
mov
loope
dec
push
ja
or
lret
mov
mov
mov
mov
int3
and
adc
or
lods
or
std
sub
mov
fwait
push
mov
negb
jmp
mov
and
mov
mov
or
outsb
adc
sub
leave
xor
mov
pop
sbb
rclb
jae
inc
adc
pop
sahf
scas
pop
adc
loop
mov
mov
sbb
push
mov
inc
xor
mov
jnp
inc
pusha
or
mov
and
rcrl
call
or
imul
fstps
adc
pop
cmp
repnz
fstpl
sbb
push
dec
outsb
adc
insb
xchg
out
gs
nop
xor
jbe
xchg
ret
sub
cmpsl
out
pushf
or
sbb
xchg
aaa
insb
bound
outsb
sti
adc
stos
call
mov
jnp
insb
xchg
lock
inc
ljmp
fcompl
push
dec
xchg
or
daa
imul
or
cmpsb
pushl
push
mov
mov
nop
stc
out
xchg
ja
pop
xor
mov
xchg
pop
mov
aam
dec
lods
dec
sbb
or
pop
cld
add
push
inc
dec
fldenv
sub
fxch
sbb
mov
sbb
fcoml
sub
bound
loopne
and
ja
cmp
in
imul
mov
and
cltd
xchg
bound
adc
mov
cmpsb
aad
fisubl
cmpsb
xor
es
addr16
and
mov
gs
mov
sti
xor
addb
pop
inc
pop
loopne
aam
push
mov
int
jecxz
lea
test
sbb
movsl
mov
inc
sbbb
insb
leave
lock
adc
int3
push
out
fld
pop
push
ja
test
mov
sub
lahf
push
sbb
clc
mov
sbb
inc
test
mov
sbb
mov
jl
jmp
inc
movsl
pop
push
iret
fistps
push
push
inc
push
fstpl
dec
mov
clc
imul
sarl
sub
rcrb
dec
xor
adc
cmpsl
cld
pop
xor
jnp
cmp
aam
lret
jb
imul
push
loopne
insl
in
pop
xchg
test
sub
mov
sub
mov
mov
in
sahf
push
addr16
dec
fmul
xchg
ror
sbb
jmp
cmp
push
or
loope
and
mov
dec
push
ret
test
test
shrb
ss
scas
imul
pusha
ficoms
daa
aaa
fwait
jne
dec
enter
pop
cltd
lea
dec
fists
clc
jmp
xor
and
out
xor
pop
dec
xor
rcr
dec
lahf
push
fnstenv
inc
and
fcom
into
jmp
push
fcmovnb
jg
ljmp
data16
dec
mov
out
pop
xor
mov
icebp
jmp
scas
jb
cs
testb
movb
test
push
pop
xchg
add
dec
movsl
mov
jge
dec
fs
sbb
sbb
repnz
and
and
mov
enter
or
fnstcw
arpl
adc
rorl
inc
rolb
lds
jg
mov
jmp
jno
push
push
add
dec
into
pop
inc
ja
pushf
sarl
rclb
pop
int
stos
inc
jge
mov
out
push
ror
dec
push
or
sbb
push
out
ljmp
fmuls
jmp
push
push
stos
xchg
pop
dec
cmp
aam
dec
adc
fs
pop
jle
xor
dec
idivb
mov
inc
dec
test
cltd
arpl
jle
push
push
stos
aas
dec
mov
enter
xchg
pop
popf
push
ret
std
lea
mov
shl
notl
xlat
push
cli
dec
xchg
dec
insl
test
icebp
outsb
or
outsl
push
adc
pop
pop
data16
fdivrp
push
test
pop
sbb
dec
jp
jo
fs
adc
jle
push
fidivrl
shrb
sub
xor
ret
cmp
sbbb
rorl
add
inc
shr
ja
insl
pop
cwtl
ret
mov
sbb
mov
adc
call
lret
jmp
pop
jecxz
scas
jmp
mov
fists
out
sub
dec
xor
xchg
xchg
inc
lea
mov
cmpsb
jae
test
rcll
mov
je
xchg
xor
cltd
sub
jge
inc
sbb
dec
jle
leave
add
mov
leave
push
std
insl
test
jle
repnz
jg
dec
daa
inc
lret
sub
dec
add
rorb
mov
int3
xchg
adc
jno
lret
cli
push
pop
xchg
cmpsb
dec
outsb
gs
mov
cmp
dec
out
jle
or
sbb
push
mov
leave
inc
inc
and
push
jge
test
cwtl
sub
out
sbb
cltd
out
lret
bound
pop
rcl
aas
jl
dec
sub
ss
scas
and
imul
lea
dec
xor
lret
sub
ret
inc
push
les
mov
imul
and
lret
es
pushf
push
and
ficompl
outsl
jbe
mov
flds
aad
loope
es
lock
xor
outsb
ja
dec
cmpsl
pop
movsb
aas
out
enter
jno
xchg
push
sbb
dec
insb
and
scas
fimuls
fsts
sbb
pushf
jecxz
mov
repz
fidivrl
dec
xchg
popa
arpl
in
jecxz
test
dec
mov
sub
and
xchg
inc
sub
dec
ss
cs
leave
or
xor
mov
add
sub
out
in
push
ret
sahf
leave
ja,pt
inc
fistps
aam
out
dec
cwtl
clc
std
mov
cli
mov
pop
sbb
loope
jns
cmp
pop
enter
push
mov
mov
roll
push
jl
cmp
bound
xchg
lock
mov
pop
stc
jbe
mov
les
scas
hlt
jecxz
or
mov
and
orl
rorl
dec
sub
inc
aad
stos
movsl
push
push
pop
xlat
sahf
mov
ret
xor
push
mov
inc
push
dec
mull
andb
rcll
mov
dec
and
jne
sub
push
std
pop
lret
jmp
call
cmp
pop
cmp
jno
das
cmpsl
mov
mov
sbb
or
mov
mov
dec
scas
dec
inc
lods
insb
lods
cmp
push
xchg
int
push
nop
dec
jno
out
jg
jb
test
adc
pop
dec
inc
push
xchg
clc
aas
push
loop
roll
cs
enter
ss
into
lahf
pushf
dec
dec
push
xchg
jbe
out
push
sbb
lret
inc
pop
lea
or
cmp
out
movsb
mov
dec
addr16
push
aas
sbbl
adc
mov
icebp
pop
or
jae
mov
popa
mov
pop
lds
xchg
cltd
mov
dec
mov
add
iret
repz
push
xor
leave
stos
inc
inc
mov
sbb
stc
sarb
pop
lds
loope
inc
mov
mov
and
push
cmp
jg
repz
push
xor
out
loopne
pop
cmc
push
push
insb
scas
hlt
mov
push
adc
rolb
cs
push
xchg
push
mov
stc
and
arpl
push
pop
sub
pop
fs
movsl
aas
mov
adc
mov
mov
ret
in
push
cltd
and
nop
mov
fcompl
jo
push
in
inc
dec
xor
rep
insl
pop
sub
lods
in
sti
fcoms
xchg
cmovb
dec
sbb
lret
dec
sahf
push
in
xor
mov
inc
fisttpl
push
inc
rcrb
dec
mov
mov
dec
mov
imul
add
imul
and
and
pop
pop
test
xchg
push
mov
lods
sbb
mov
and
gs
imul
dec
jg
pushf
ret
addr16
dec
push
jne
adc
mov
push
or
and
mulb
leave
mov
push
or
iret
and
dec
push
dec
mov
mov
pop
call
pop
ja
movsb
stos
shrl
and
push
mov
or
pop
xlat
cwtl
sbb
mov
push
or
divl
sub
stos
and
ret
push
mov
xchg
arpl
mov
dec
xchg
sbbl
stos
dec
jle
pusha
lret
mov
pop
js
dec
adc
inc
mov
xchg
rorl
xchg
cmp
pop
enter
cmp
icebp
fisttps
push
xchg
inc
aad
add
paddusb
inc
test
nop
dec
fcomi
popf
pop
adc
shrb
push
clc
dec
push
jae
xor
rcll
fisttps
arpl
xchg
rorl
ret
dec
inc
inc
sbbl
push
notl
imul
sub
dec
inc
roll
fwait
mov
stos
fimuls
gs
sub
mov
dec
pop
dec
mov
lahf
ret
dec
push
adc
mov
jmp
lods
dec
push
cltd
sub
imul
pop
mov
xor
mov
dec
jp
scas
imul
mov
add
xor
push
mov
cmp
pushw
jb
push
rcrl
adc
cs
stos
pop
xor
sti
mov
ljmp
je,pn
dec
push
emms
push
pop
lahf
or
push
jecxz
rcrb
inc
inc
mov
jnp
mov
jo
scas
dec
add
mov
ds
rcrb
sbb
sbb
clc
addr16
sahf
dec
cld
jb
lock
out
xchg
out
dec
cltd
notb
cmp
mov
dec
ret
add
imul
adc
pushf
mov
lret
dec
orb
and
and
dec
sub
ss
or
pop
xchg
cs
imul
pop
aad
cmpsb
sbb
inc
es
je
das
shrl
xchg
cs
mov
int
lcall
mov
imul
scas
test
jmp
inc
rclb
cmp
rorl
jno
mov
dec
fcmovbe
cmp
fistl
push
shll
mov
xor
xchg
test
mov
inc
adc
dec
scas
cmp
rclb
loopne
xor
lcall
pop
xchg
cli
push
or
adc
mov
dec
fstp
int
and
loop
cs
jbe
jae
pop
add
inc
xor
mov
ja
ret
test
aaa
mov
les
out
ss
inc
into
add
push
dec
popf
pop
or
out
jle
and
cmpsl
mov
insl
push
xchg
sub
xchg
ret
pop
sarl
dec
loopne
xor
dec
jmp
out
push
cmp
js
hlt
mov
push
xor
pusha
dec
jg
je
sbbl
cmp
mov
inc
mov
dec
imul
clc
add
pop
push
push
outsl
push
cli
push
dec
lea
sahf
dec
jp
adc
int3
cmp
sbb
lods
loopne
pop
jg
inc
sub
push
dec
jno
xor
or
mov
jnp
adc
cmp
stc
gs
testb
dec
repnz
xchg
int
das
dec
adc
xchg
or
leave
mov
ss
mov
in
jbe
cmp
dec
mov
sub
cmp
inc
pop
dec
shl
xchg
mov
out
dec
jno
mov
jmp
pop
inc
cs
rorb
out
cmp
xor
inc
sarl
inc
dec
dec
sbb
icebp
imul
ds
pop
fstps
jb
je
mov
or
cmp
xchg
sub
sbbb
ja
inc
add
jmp
pop
push
not
call
xor
pop
and
addr16
loope
lds
sti
dec
mov
pop
mov
es
cmp
add
pop
mov
push
lret
cmpsl
daa
mov
aam
test
sahf
das
int3
imul
je
shll
and
dec
mov
add
lds
sub
adc
jnp
test
stos
loop
cmp
mov
stc
pop
idiv
xor
sti
inc
mov
ficomps
push
mov
sbb
out
pop
cmpsb
or
addb
orl
shll
pop
xchg
jae
xor
fcomip
fcomps
pop
gs
push
and
jg
leave
jge
pop
shl
jecxz
pop
xchg
aad
xchg
lock
inc
call
sarl
outsb
pop
cltd
inc
mov
push
and
or
mov
mov
dec
repnz
insb
jmp
xchg
inc
xor
sbb
pop
pop
add
roll
rolb
xchg
jae
arpl
leave
dec
idivb
out
mov
mov
rcrl
hlt
mov
cld
lods
pop
movsl
addr16
ds
rcr
dec
push
scas
mov
out
cmp
xchg
add
int3
jle
mov
pop
sub
pop
xchg
shll
mov
push
add
sbb
xor
out
or
and
cmp
inc
leave
inc
dec
xor
or
jmp
ficomps
mov
fwait
mov
hlt
push
lods
dec
arpl
lods
xor
leavew
daa
mov
lcall
mov
cmc
pop
dec
stos
sarl
xor
inc
or
fisttpl
dec
jae
sbb
inc
outsb
or
push
cld
pop
ja
xor
dec
pushw
xor
pop
pop
add
inc
push
mov
inc
inc
push
daa
scas
push
jmp
inc
pop
or
adc
lahf
mov
loopne
add
xor
std
xchg
pushf
and
fs
cmp
cmpsl
xor
pop
das
in
insb
jmp
mov
dec
cli
inc
push
cmp
push
lods
mov
rclb
mov
sbb
test
mov
fildll
sub
inc
xor
mov
cmp
shlb
rcrl
jle
fcoms
or
jnp
add
outsb
sti
imul
or
mov
jno
stos
jp
nop
out
push
push
sbb
lods
in
pop
inc
cmp
pop
arpl
jg
bound
pop
sub
aam
xor
pop
cmpsl
jp
es
inc
push
sbb
cmp
pop
icebp
fcoms
int
push
sarb
xor
push
mov
push
outsl
adc
xlat
ja
rclb
scas
jae
sbb
dec
faddl
int3
nop
add
and
mov
inc
push
cmp
pop
jns
jg
inc
jge
test
aam
dec
mov
dec
lock
out
jno
or
dec
and
andb
jnp
pop
pop
xor
mov
into
mov
movb
lret
push
and
lods
adc
adc
and
loope
fisttpll
hlt
inc
dec
push
lds
mov
add
add
ss
jle
adc
mov
and
outsl
cmp
clc
inc
sub
xor
pop
cmp
sbb
mov
loopne
in
imul
ficoml
aas
cmpsb
sub
repnz
aam
andl
mov
xor
lods
sbbb
or
ror
inc
jo
stos
inc
inc
xor
cmp
test
or
cmp
sbb
jae
loop
xchg
int
imul
and
das
pop
ljmp
outsb
add
btc
es
inc
and
fmulp
insb
pushf
das
aad
mov
or
scas
dec
sahf
std
andl
sub
in
aam
jae
ja
test
rcrb
loope
or
nop
cltd
xor
sub
movsb
test
repnz
gs
inc
andl
jl
movsb
cld
add
jmp
addr16
pop
inc
pop
xchg
push
and
ret
leave
cmp
or
mov
push
inc
ss
mov
aad
mov
lret
inc
push
adc
xchg
mov
jne
sbb
ret
mov
test
stos
insl
cmp
pop
add
pop
xchg
adc
and
lret
push
sbb
dec
andl
jns
popf
mov
xchg
andps
adc
cmp
or
mov
icebp
inc
mov
mov
pop
stos
dec
loop
lcall
or
jmp
pushf
jg
leave
data16
sbb
cmp
dec
in
shlb
fidivl
dec
icebp
and
in
pop
cmp
xchg
cmp
mov
insl
jge
les
jp
test
ljmp
sbb
add
fisttps
and
orl
cmp
inc
sbb
mov
popf
stc
mov
adc
loopne
jl
pop
push
jle
ret
outsb
inc
sub
or
bound
ss
pusha
ss
inc
mov
add
lods
inc
ret
cli
cmp
or
jl
inc
xchg
mov
rol
mov
cli
iret
jge
mov
sarl
xchg
jg
sub
pop
js
ja
int
pop
mov
enter
xlat
popa
add
xchg
push
xchg
mov
or
ret
out
shrl
stos
clc
jle
jmp
in
xchg
arpl
sbb
pop
aam
rorl
cld
fisubs
frstor
xor
cmpsb
fistps
jg
adc
sbb
in
push
ds
sbb
pop
es
cwtl
pop
adc
xchg
jmp
push
push
sbb
cmpsb
std
adc
outsl
mov
sub
push
push
jno
push
and
jmp
dec
push
cmp
sbb
push
stc
xor
pop
mov
js
cld
push
lock
insb
inc
cmovle
outsb
int3
xor
movsl
xor
adc
or
fwait
xor
mov
mov
pop
loop
inc
sub
jne
mov
mov
sub
repnz
jae
inc
pop
sub
inc
xchg
push
pusha
xor
and
cld
fmulp
flds
filds
jnp
out
sub
shlb
mov
ss
pop
jp
fadds
hlt
call
aam
lock
inc
inc
sub
mov
mov
pushf
cmp
or
std
cmpsb
lods
dec
repnz
cmp
add
or
jg
mov
enter
ficompl
add
fwait
mov
ret
ds
sub
jno,pt
inc
inc
xchg
mov
or
inc
test
push
pop
subl
sbb
or
xor
push
nop
adcl
and
das
sbb
outsl
loope
outsb
jns
je
cmc
push
cmp
sbb
mov
add
xchg
jl
mov
cld
dec
push
sub
repnz
or
mov
insl
das
jle
mov
inc
inc
push
sahf
push
pop
jp
pop
loope
sbb
ds
and
jns
cmpsb
mov
pop
sbb
fisttps
leave
lock
call
nop
lahf
repz
jae
bswap
dec
push
and
les
bound
inc
shlb
mov
jo
mov
in
sbb
jnp
cmp
mov
and
ljmp
mov
arpl
xchg
test
cltd
mov
inc
jmp
mov
into
push
xor
pusha
mov
xor
jmp
xchg
or
nop
or
cli
popf
into
mov
lods
push
and
dec
mov
jp
mov
inc
sti
movsb
adc
sbbb
jl
loope
jmp
xchg
imul
pop
mov
loopne
hlt
inc
dec
pop
pop
dec
sbb
sub
cmp
gs
cmp
cmpsl
xor
ret
pop
pop
mov
movsl
ftst
inc
or
cmp
add
je
andl
jne
or
mov
xor
sahf
add
sbb
aad
mov
iret
test
sahf
lds
out
lret
add
shl
fcoml
mov
lahf
or
dec
rcrl
nop
xchg
fcomp
pop
and
pop
pop
test
sbbb
xor
scas
xchg
test
icebp
mov
mov
in
xchg
sub
cmp
xchg
xchg
mov
xchg
sti
sbb
adc
lahf
and
fisttps
inc
mov
xchg
clc
lahf
xchg
jae
fprem1
out
out
push
arpl
sub
shll
add
sti
sahf
outsl
shl
xchg
add
mov
int
dec
adc
jge
bound
xchg
inc
jnp
loope
or
mov
adc
push
and
fstpl
lods
jmp
add
ficompl
xor
push
arpl
inc
xor
addb
inc
hlt
dec
pop
mov
adc
xor
std
xor
ss
inc
mov
lods
sub
rcrl
xchg
sub
inc
cmp
lahf
cs
xchg
push
lods
xchg
jmp
or
aaa
dec
popf
addr16
scas
shll
sbb
ds
adc
dec
aad
mov
and
mov
mov
cwtl
ljmp
inc
fistpl
into
sbb
das
lret
sahf
mov
mov
push
or
jae
int3
mov
test
pop
jp
dec
in
pop
pop
aas
sub
vcvtsi2sdl
repz
sbb
addr16
hlt
lods
test
sub
and
scas
dec
mov
jns
dec
inc
xor
leave
adcb
pop
leave
sahf
jmp
bound
ret
push
sti
ficompl
jno
pusha
jmp
xchg
cmp
push
xor
sbb
xchg
cmp
xor
add
xchg
or
insl
push
xor
sbb
ss
bswap
lock
pop
repz
aam
pop
add
sbb
scas
sub
cmpxchg
arpl
jle
imul
dec
dec
pop
lds
dec
mov
into
es
sub
or
dec
jmp
pop
pop
mov
pushl
test
bound
push
test
sbb
sub
bound
imul
mov
xor
pop
pop
imul
pop
int
insl
jecxz
aaa
jmp
add
sbb
cmpsl
int
mov
dec
adc
leave
test
xchg
add
int3
and
loop
mov
sub
outsb
mov
mov
jo
clc
pop
sbb
adc
and
outsl
inc
lcall
sub
out
or
or
fiadds
imul
dec
push
pop
mov
into
test
xor
push
test
adc
or
fincstp
cmp
inc
sub
jb
mov
add
jle
adc
xor
fistpl
mov
inc
xor
addr16
imul
push
jmp
cli
or
add
jbe
or
shl
cmp
insb
sub
dec
xor
scas
lahf
std
loope
xchg
ret
ret
sub
cmp
adc
sbb
fisubl
push
xchg
lods
add
xchg
add
cmp
data16
cwtl
scas
xor
dec
addb
sub
mov
roll
icebp
pop
lods
jb
inc
in
insl
mov
mov
dec
inc
dec
cmp
jge
lret
outsb
fnstenv
jle
les
lds
dec
jge
dec
sub
jmp
sub
aaa
dec
scas
jecxz
jns
xor
in
pop
clc
mov
pop
pop
test
unpckhps
and
mov
dec
mov
or
dec
inc
jp
sub
out
and
lods
fwait
adc
jp
ljmp
mov
roll
mov
cmp
test
mov
outsb
testl
xor
pop
ret
or
fidivl
inc
xor
xor
mov
fnsave
dec
inc
test
pushf
scas
mov
vunpcklps
test
inc
daa
add
aaa
sub
xchg
jmp
clc
ret
mov
sbb
or
lods
and
sub
int3
lret
inc
sbb
jecxz
xchg
inc
pop
add
xchg
or
mov
sub
inc
arpl
dec
adc
pop
inc
xchg
mov
push
jmp
roll
adc
or
fwait
negb
aam
mov
fdivrs
cmp
sub
mov
imul
cmp
mov
imul
pop
push
add
iret
mov
pop
insl
fiaddl
arpl
shll
pop
das
push
int3
pop
call
add
test
fbstp
int3
cmp
push
arpl
imul
push
pop
pop
jp
jecxz
mov
test
and
cmp
repnz
sahf
cmpl
loopne
sahf
dec
cmp
pop
xor
xor
rolb
lahf
imul
test
mov
xchg
mov
jbe
fidivl
dec
add
xor
mov
aaa
push
and
loopne
aad
test
outsl
enter
stos
pusha
mov
lret
mov
pop
stos
lods
and
sub
rorb
push
fidivl
inc
stc
aad
sub
pop
jge
hlt
jae
mulb
loopne
inc
popa
test
imul
xchg
xor
push
mov
push
pop
inc
fisubs
pushl
or
push
sub
inc
adc
je
xor
int
pop
xor
je,pn
and
sbb
shll
outsb
mov
dec
ret
shll
movsb
das
xor
dec
or
cmpsl
and
pop
push
push
jle
jp
mov
roll
das
cmpsl
shrl
imul
inc
sahf
ljmp
dec
movsb
mov
jl
cmpsl
dec
inc
xor
xor
insb
jbe
jns
jle
cs
jne
aaa
pop
outsl
xor
je
or
pop
pop
mov
or
sub
push
cmp
and
bound
mull
and
xchg
pop
add
pop
sub
dec
push
jle
adc
pop
cmp
pop
lods
push
dec
cmp
ja
stos
pop
insl
in
jbe
fisttpll
inc
popl
fs
and
pop
push
or
ljmp
mov
mov
outsb
mov
hlt
call
outsb
jge
adc
push
mov
ud0
or
inc
jbe
xchg
add
movsl
stc
ja
ljmp
shl
cld
mov
mov
std
and
les
fistpl
clc
clts
dec
pop
xor
mov
lcall
jmp
bnd
pop
jmp
cmpsl
test
test
loopne
inc
dec
mov
adc
or
add
cmpl
movsl
and
sbbb
ret
mov
test
fs
out
jp
cld
in
js
fs
pushf
hlt
outsb
dec
push
and
adcb
bound
addr16
dec
lods
lock
push
outsl
and
vrcpss
out
int
les
xor
dec
cmp
fisttpll
sar
aam
xchg
enter
out
popa
xchg
pop
loopne
add
stos
dec
cmp
imull
orb
add
loope
jnp
into
lret
push
mov
dec
cmp
dec
je
outsl
mov
sub
adc
adc
xor
insl
std
or
cmp
scas
fdivl
testl
xchg
jle
sarb
nop
fimull
leave
mov
dec
and
push
add
mov
sahf
mov
dec
cmp
fwait
push
jl
mov
and
dec
fstl
pop
daa
push
push
leave
out
mov
pusha
dec
add
js
push
imulb
xor
pop
push
sub
imul
dec
dec
cs
popa
dec
jl
adc
scas
jb
mov
mov
pop
mov
aad
mov
subb
int3
addr16
push
jns
fiaddl
into
enter
push
dec
fcoms
je
pop
cmp
jb
jle
mov
xchg
pusha
push
cmpl
sbb
loopne
aaa
and
adc
push
cmp
lcall
int
mov
repz
sbb
outsb
jmp
pop
lock
mov
pop
and
call
sub
dec
push
xchg
loope
negb
xor
xlat
loop,pt
push
mov
cmp
mov
jae
dec
pop
les
sub
push
cmc
fwait
push
xchg
ja
mov
cwtl
inc
imul
push
lret
scas
jnp
into
in
ja
mov
addr16
mov
repz
xor
xchg
loopne
push
loop
push
movsl
cmc
fistpll
adc
cmp
mov
clc
repz
aaa
ret
insb
jbe
clc
ds
arpl
lods
mov
cmpl
xchg
inc
sub
or
xchg
inc
iret
inc
outsb
dec
lods
mov
xchg
lret
inc
sbb
mov
lods
cmp
into
mov
xchg
popf
adc
leave
inc
mov
imul
and
out
leave
cld
rolb
cmp
inc
inc
imul
dec
repz
ror
imul
sbb
sarb
fwait
mov
dec
mov
jecxz
or
mov
out
mov
clc
cmp
loop
pop
push
mov
jecxz
inc
lods
iret
stc
add
in
cmp
cmp
imul
push
add
icebp
xor
pusha
pop
sbb
push
mov
pop
cmp
mov
adc
loopne
xchg
mov
mov
mov
into
pop
sub
or
cmp
and
xor
ror
dec
outsl
adc
xorl
shl
into
add
fxch
sbb
push
insb
mov
sbb
push
pop
pop
lods
add
fwait
dec
xor
mov
pop
lret
mov
dec
inc
mov
lret
es
mov
jecxz
xor
mov
repnz
nop
jg
pusha
pop
addl
xchg
dec
mov
and
in
jmp
mov
pop
or
lds
dec
jp
push
inc
jle
adc
xor
ret
sti
push
pop
xor
push
push
mov
mov
sbb
dec
sbb
sbbb
sbb
push
and
and
xor
outsb
xor
sub
inc
loopne
pop
push
in
clc
loop
mov
sub
fistl
shl
nop
sub
cmp
ss
arpl
sahf
mov
stc
aaa
jle
fadd
outsb
dec
out
xor
nop
leave
cmp
xor
arpl
mov
xchg
jecxz
pushf
cmc
ret
test
aaa
inc
lret
xor
mov
sbb
leave
out
imulb
push
cmc
dec
call
les
mov
xor
mov
pop
or
mov
int3
dec
jnp
mov
push
mov
jbe
ret
aad
loopne
push
stos
mov
les
dec
scas
inc
xor
jns
mov
dec
pop
inc
cld
xor
rcrl
adc
sti
or
clc
sbb
loopne
push
pop
cmp
xchg
jp
addr16
lret
inc
ret
xor
stos
test
cmpb
movsl
sti
xor
stos
call
pop
jns
scas
movsl
imul
mov
scas
mov
enter
inc
adc
cmp
sti
xlat
int3
div
loopne
pop
inc
inc
add
mov
jp
dec
and
mov
cwtl
insb
add
leave
dec
imul
jl
push
fwait
or
sub
inc
push
push
sbbb
mov
sub
out
or
ja
mov
mov
xlat
les
cltd
cmp
jo
xor
push
add
add
dec
leave
cmp
fistpll
mov
lods
sub
dec
add
fsubrl
xor
fnstcw
into
insb
or
fidivrl
push
jb
enter
jmp
ds
popa
bound
lods
xor
mov
mov
cs
jmp
xchg
push
jbe
js
ret
das
inc
sbb
insb
pop
cmp
in
test
and
ret
ja
dec
int3
testl
ja
sub
stos
std
repz
in
xchg
out
jns
jle
push
or
jl
xor
add
xor
std
xlat
xor
cwtl
inc
fidivl
add
lock
dec
jp
cmpsb
and
add
fdivl
adc
push
jne
pop
push
shl
in
dec
cmp
push
and
pop
jge
shlb
dec
mov
out
rcll
js
inc
negb
in
std
add
les
inc
cmp
stos
imul
scas
pop
mov
xchg
xchg
test
sub
leave
jbe,pt
into
daa
add
mov
mov
loop
xchg
vmulps
inc
add
add
je
and
ret
cmp
dec
icebp
imul
push
adc
out
loop
hlt
jmp
cld
std
inc
leave
adc
jae
add
sub
push
jns
cmpsl
push
add
jmp
cld
mov
hlt
clc
mov
sahf
adc
xchg
xchg
das
ror
or
cmp
nop/reserved
and
push
dec
inc
inc
pop
mov
sbb
jp
xchg
andb
mov
cmc
or
add
push
jnp
fwait
inc
testb
imul
jmp
insb
jecxz
push
pop
dec
imul
data16
lods
push
pop
xchg
jp
pop
int3
jp
xchg
jg
daa
in
xor
xor
xor
pushf
add
out
js
push
ret
mov
scas
mov
pusha
cmp
cld
mov
cmp
or
cmpsb
loopne
mov
test
das
data16
int3
adc
xor
dec
adc
iret
test
or
cmc
xchg
bound
rorb
and
jg
sub
and
imul
negl
test
ret
nop
xchg
sbb
inc
adc
pusha
ror
xor
or
outsl
shll
xor
mov
sbb
mov
lock
adcb
push
insl
aad
mov
in
shlb
xchg
addb
push
lret
sar
add
in
pop
jmp
mov
inc
ss
stc
jmp
leave
loop
in
sbb
mov
xchg
insl
add
mov
mov
call
inc
jno
movsb
loop
mov
push
push
arpl
jp
xlat
fidivrl
pop
stos
fs
fnstcw
jle
loopne
lock
add
jecxz
or
scas
lods
cld
xor
stc
cmpb
push
push
and
popf
int
leave
mov
push
sbb
mov
pop
jmp
xor
dec
xor
testl
test
aam
sub
in
jb
pop
sbb
ss
mov
sub
inc
daa
iret
call
bt
negl
adc
popa
lods
adc
jl
test
mov
cmp
in
jae
push
inc
mov
test
pop
inc
cmp
jae
sub
mov
mov
rcrb
fldenv
sub
dec
hlt
fdivrp
sbb
div
incb
jl
jnp
jle
or
jmp
push
clc
push
popa
rcll
sarb
sti
addr16
aas
out
pop
push
cld
outsb
call
inc
adc
mov
jno
inc
lret
insl
test
addr16
cmp
push
arpl
cld
or
imul
push
and
dec
mov
int
test
pop
jns
mov
jae
xchg
add
out
cmp
cwtl
mov
cmpsb
rorl
jae
cmp
jle
xchg
int
inc
jmp
push
or
daa
and
pop
arpl
outsb
inc
lods
xchg
mov
int
insb
jb
pop
lahf
pushf
nop
or
add
sbb
and
out
push
cld
cmpsb
pop
cmp
pop
lods
js
cmp
inc
dec
xchg
mov
and
loopne
sbb
xor
fnstcw
sbb
mov
int
dec
scas
cmpl
pusha
clc
xor
in
pop
add
pop
rorl
scas
fsubp
jae
push
aaa
shlb
pop
loopne
jmp
pop
push
sub
lret
jp
pop
push
dec
push
fstps
mov
in
lods
movsl
icebp
xor
jb
jo
xor
or
insl
stos
jecxz
jne
ja
into
sub
mov
fwait
nop
pop
outsl
cwtl
and
les
icebp
mov
lock
or
inc
aaa
fdivrp
loopne
sbb
inc
jnp
adc
push
xor
sub
ret
dec
and
add
ficoms
push
push
or
arpl
imulb
or
cli
pushl
pushf
aad
andb
mov
call
lret
sub
loopne
xor
loop
ja
cs
xor
mov
lcall
or
popf
dec
mov
jle
loop
in
push
and
loop
je
jo
enter
inc
add
pop
repnz
ljmp
fmulp
cli
mov
loop
pop
sti
sbb
pop
and
fnstcw
outsb
leave
insl
idivl
or
dec
pop
pop
xlat
sbb
ds
lods
xchg
jnp
aam
lret
adc
dec
mov
push
sti
sahf
mov
mov
notb
sbb
insb
decb
cmp
mov
sub
aaa
lds
mov
adc
push
add
insb
push
inc
adc
arpl
push
gs
inc
dec
test
popa
sbb
pop
aad
clc
dec
mov
mov
mov
xor
enter
xor
sub
pop
loopne
fldcw
inc
push
pop
icebp
lahf
jmp
inc
mov
add
xor
pop
add
sub
mov
mov
lods
mov
pop
inc
loope
mov
out
fisubs
pop
aaa
pop
push
lret
pop
shr
lret
jbe
inc
push
jae
into
cmpsl
mov
xchg
sbb
negb
inc
lods
sbbb
int3
push
inc
fwait
insl
shll
mov
fildll
dec
add
inc
cmpsl
xor
or
mov
ja
push
xchg
fnstsw
jge
xchg
fimull
leave
cmp
adc
scas
dec
fstpl
andb
cmpsl
ret
sub
decb
jae
add
in
jns
int3
inc
fdiv
fchs
and
int
cld
mov
aas
cmpsb
inc
rcrb
mov
jmp
stos
lret
fwait
stos
xor
add
test
jmp
add
add
std
jb
pop
jp
pop
dec
faddl
andl
out
dec
mov
aad
mov
aam
jmp
dec
fs
mov
mov
into
gs
push
or
mov
sbb
addl
call
add
jg
jecxz
xor
xor
mov
add
iret
mov
or
pop
insl
out
sbb
test
cmp
icebp
scas
shrl
xor
movsl
adc
pushf
push
mov
popf
mov
mov
sub
test
mov
fcoms
fsubs
push
mulb
push
sbb
inc
sti
and
testb
dec
pop
push
arpl
int3
ud1
pop
subl
and
mov
xor
mov
push
xchg
loopne
rolb
imul
loopne
leave
addr16
adc
das
rcrl
inc
rcr
dec
xor
mov
pop
je
inc
and
imul
idiv
inc
add
mov
sahf
mov
push
or
jnp
test
dec
push
mov
inc
inc
pop
pop
jp
and
pushf
push
mov
jbe
adc
sub
fwait
enter
or
lods
je
mov
int3
xchg
dec
or
mov
push
dec
or
inc
cmp
cmp
inc
jecxz
and
mov
jg
loop
aaa
dec
ja
push
and
mov
add
inc
inc
jno
add
out
pop
xchg
inc
jg
mov
cmpsl
ret
dec
lcall
adc
lret
mov
imul
dec
adc
cltd
mov
push
inc
mov
mov
add
ja
push
mov
sbb
dec
insl
cmpsl
aad
insb
lahf
ss
cmp
and
test
cmp
ficoms
stc
in
xchg
and
sbb
movsl
pop
loope
xchg
mov
fsubr
arpl
adc
lahf
fidivrl
jmp
popa
pop
lret
inc
dec
xlat
cltd
out
mov
mov
push
or
mov
mov
je
lea
mov
pusha
inc
enter
mov
ret
into
pop
rcll
cmp
lret
pusha
add
popa
push
inc
jp
loop
cmp
inc
movsb
mov
xchg
testl
pushf
sbb
out
xlat
les
dec
sbb
lock
faddl
cmp
push
inc
mov
dec
mov
pop
jb
je
sbb
mov
rcll
in
pop
ret
leave
inc
push
ljmp
pusha
xchg
push
clc
into
cmpsb
push
jecxz
shrb
dec
bound
sbb
data16
mov
aas
lods
xor
jg
add
pop
or
jns
dec
xor
int
mov
mov
push
jnp
sub
loopne
stc
add
adc
and
popa
mov
out
pop
sub
or
int3
pop
sub
cli
mov
outsb
lea
mov
fs
ret
testb
test
mov
int
icebp
call
fnstenv
aaa
dec
push
jmp
dec
loop
pop
fdiv
popf
in
int3
mov
sub
sbb
and
sub
dec
sti
orl
ljmp
popf
jae
xor
mov
mov
std
sarb
pop
rcrl
lds
aad
ficoms
pusha
jmp
and
aad
stos
outsl
out
icebp
scas
fwait
lcall
aaa
mov
xlat
add
imul
pop
push
sub
sahf
xor
push
js
loope
outsl
adc
bound
sbb
pop
sbb
sbb
je
pop
test
jge
dec
lods
arpl
or
mov
icebp
inc
mov
addb
fs
aas
cmpsb
scas
ret
xchg
and
ljmp
lods
add
lret
sarl
pop
aas
xor
int3
inc
lods
mov
pop
add
inc
or
dec
xchg
leave
sub
and
mov
push
or
xchg
cmp
movsl
cmp
push
mov
inc
cmpsb
xchg
mov
xchg
std
imul
and
and
in
stc
mov
mov
dec
pop
inc
nop
iret
and
icebp
imul
je
inc
push
mov
daa
shl
sub
test
pop
xor
scas
pop
pop
mov
xor
insl
mov
xor
add
cmp
aad
data16
jg
or
mov
data16
cmpsl
and
xor
popf
and
cltd
lods
mov
adc
sarb
push
fcmovbe
pop
stc
xor
adc
cld
push
pop
mov
js
lods
mov
scas
pop
cwtl
xor
jno
fld
mov
add
mov
cmp
inc
add
mov
sbb
je
out
jmp
lahf
sbb
and
and
mov
push
and
adc
mov
pop
loopne
inc
stos
xor
sti
mov
decl
mov
loop
jl
out
inc
leave
pop
jae
gs
adc
xadd
rcrl
sub
ss
and
sti
jmp
xchg
mov
xchg
aas
or
in
pop
jbe
ficoms
mov
adcb
bndstx
xchg
cmc
ja
call
mov
mov
jbe
xor
mov
xchg
cmp
jle
push
jmp
icebp
fnstcw
push
or
sub
ret
sti
push
outsb
leave
and
sahf
or
fdivrp
icebp
js
fsubrs
cld
jnp
in
lods
insb
ret
cmpsb
sbb
jb
out
inc
mov
xchg
gs
inc
jb
fldenv
shrb
test
xor
outsl
mov
shrl
pop
adc
inc
pop
ljmp
inc
cmp
out
rep
mov
cs
xlat
bound
xorl
sbb
test
out
clc
cli
and
pop
pop
outsb
mov
dec
mov
sbb
lods
xchg
fstpt
inc
dec
mov
push
dec
out
sub
in
call
dec
dec
dec
cmpb
mov
mov
mov
mov
test
sarl
cld
cld
stc
xchg
ret
adcl
jl
jecxz
mov
xchg
fdiv
ror
cltd
pop
repnz
pop
mov
pop
arpl
or
fdiv
lods
add
push
jae
popa
sub
pop
dec
push
ds
or
jbe
negb
mov
xchg
jae
push
sub
xchg
xor
in
adc
cltd
in
add
sbb
rcrl
or
in
dec
xor
dec
loopne
xchg
insl
cld
adc
inc
dec
push
jnp
xor
mov
xchg
add
inc
inc
arpl
xor
pop
sbb
ds
or
inc
mov
fimuls
pop
loope
push
mull
or
fistps
pop
or
jmp
dec
jns
xchg
adc
fwait
mov
jnp
sub
insb
cmp
pop
sub
jecxz
call
push
addr16
sbb
sahf
les
or
fsin
mov
test
sub
lods
out
test
inc
mull
lods
mov
leave
mov
leave
mov
dec
out
stos
lea
inc
push
lret
loopne
out
loop
rcrl
cmp
xor
cmp
mov
sbb
popa
pushf
or
rcr
lea
inc
ret
mov
insl
movsl
dec
push
data16
xchg
hlt
loop
sahf
subl
jp
mov
dec
imul
push
clc
lea
add
cmp
dec
ret
jnp
sbb
xchg
and
push
pop
xchg
adc
loope
xlat
adc
xor
pop
leave
push
jns
outsl
pop
jae
lods
leave
push
ss
add
outsb
hlt
in
test
out
and
mov
push
jno
lahf
adc
rorb
sub
data16
cli
mov
outsl
xorb
nop
xchg
push
xor
add
jecxz
mov
inc
in
nop
fxch
xchg
xchg
mov
cmp
fisubs
lret
clc
mov
sar
sub
inc
xchg
inc
sub
jae
adc
mov
les
dec
xor
pop
ds
bound
ret
in
and
mov
inc
adc
cmp
pop
lret
cmpsb
rcll
mov
jle
dec
inc
int3
ja
setp
rorb
lock
push
sub
cmpsl
lret
push
outsl
nop
pop
test
cmp
lea
push
je
cmpsl
and
dec
arpl
mov
xchg
push
or
fldcw
cld
mov
adc
clc
cltd
xchg
add
pop
inc
stc
pop
fs
add
insl
mov
xor
jo
bound
and
lret
push
pop
inc
xor
adc
or
enter
cmp
mov
add
cmpsb
popa
mov
push
fsubp
pop
inc
sub
push
mov
or
and
lods
dec
add
das
aaa
cmp
sahf
dec
dec
mov
adc
cmp
shlb
insb
jmp
adc
cmpsl
cwtl
jge
call
rcl
int
jp
lret
sbb
adc
sarl
push
mov
inc
fs
int3
push
lock
xor
cwtl
xorb
out
cmp
jge
addr16
fwait
sbb
mov
inc
decb
mov
stos
pop
jnp
ljmp
js
xor
leave
dec
fucomip
and
add
inc
in
mov
shll
push
push
shll
in
push
ja
push
jge
arpl
jns
aam
and
cli
inc
add
xchg
or
and
pextrw
sub
cmp
mov
das
push
fdivrl
add
ret
inc
pop
lods
pop
aaa
pop
jmp
sbb
movsb
ds
xor
sbb
push
mov
push
inc
cmp
push
xorb
lahf
dec
mulb
sub
bound
addr16
push
jl
add
push
mov
cmpsb
dec
sub
jge
jb
les
inc
es
or
and
mov
sub
nop
dec
mov
add
in
ljmp
add
xor
mov
mov
filds
sbb
lock
xor
jle
mov
push
push
aaa
mov
daa
addr16
shl
loop
fisttpl
adc
mov
xor
dec
fidivl
arpl
pushf
and
or
das
lds
outsb
pop
outsb
cmp
jne
jge
das
in
movsl
lret
aam
or
dec
rorb
inc
inc
jno
sbb
mov
scas
stc
xchg
xlat
ds
mov
jns
mov
jnp
xlat
movsl
pop
sbb
jp
divl
xor
cmc
fwait
or
sti
add
sub
mov
ret
push
fdiv
lods
xor
inc
lock
in
xor
jnp
sub
jbe
imul
xchg
fcoml
pushf
cmp
stc
xchg
add
push
addr16
ret
pop
call
pop
loopne
push
aas
idiv
stc
call
aad
imulb
sub
lret
mov
clc
jecxz
mov
cld
adc
lods
arpl
rcrl
adc
inc
ret
pusha
pop
ds
sarl
mov
inc
aam
in
add
insb
mov
or
mov
pop
jnp
sbb
dec
test
mov
add
lret
loop
xchg
in
inc
addr16
mov
cmp
xor
ret
frstor
int
jle
push
xchg
aad
dec
scas
mov
ret
mov
out
jmp
push
and
in
inc
or
mov
fisttpl
call
and
std
lret
test
outsl
shr
dec
leave
in
shll
xchg
ss
test
inc
adc
out
stc
xchg
leave
inc
cmpsl
cmc
call
mov
push
jo
fwait
pop
aad
inc
pop
call
xor
mov
int
and
adc
fsubs
in
cmp
in
pop
push
sbb
and
mov
mov
loop
inc
xor
xor
fwait
push
add
sub
aad
cmpsb
loopne
add
jmp
pop
ror
arpl
jmp
aad
sbb
pop
test
adc
add
pop
and
pop
sbb
mov
xchg
test
sub
leave
cmp
call
inc
out
adc
aad
adc
data16
xchg
sti
inc
hlt
sbb
xorb
lods
mov
adc
cmp
je
jb
xchg
cmp
cmpsb
inc
mov
add
ret
cmpsl
test
pushf
mov
and
mov
stc
imul
mov
stc
movl
add
leave
ds
xchg
repz
scas
dec
pop
out
add
sub
rclb
cmp
daa
movsb
push
xor
sub
mov
mov
faddl
idivl
enter
push
sbb
scas
int3
mov
pop
xchg
test
sub
and
jmp
and
pop
push
leave
pop
adc
mov
mov
mov
in
popf
mov
aas
jmp
or
shl
enter
imul
hlt
dec
xchg
push
orb
sub
insb
movsl
out
sbbl
adc
clc
add
out
and
icebp
repnz
imul
andl
push
dec
mov
mov
ja
adc
and
in
outsb
pop
or
jle
repz
das
clc
cmovno
cmp
imul
dec
inc
call
pop
mov
out
xorb
add
cmp
xchg
mov
inc
out
cmpl
cli
sub
roll
xor
add
or
lahf
fdivrl
mov
pop
mov
js
mov
push
jmp
cmp
cmp
xor
ljmp
mov
mov
adc
loopne
sub
jae
xor
lret
xchg
pop
inc
lahf
push
ds
xchg
or
bound
int
pop
jnp
add
xchg
repz
dec
mov
lods
arpl
cmpsl
in
and
frstor
mov
fildl
pop
dec
xor
jnp
or
and
jbe
cmp
dec
scas
out
add
out
fildll
test
shr
insl
jne
sub
je
or
push
mov
das
hlt
push
dec
pop
inc
test
sub
adc
out
je
add
in
mulb
lahf
outsb
or
jbe
in
cmp
int3
in
lahf
inc
sub
fnstenv
mov
cli
fimuls
aas
loop
cltd
dec
out
inc
jp
or
lret
push
dec
mov
adc
imul
inc
lea
pop
lods
addr16
jge
mov
jo
push
popa
pop
adc
orl
fimull
push
adc
xor
inc
mov
clc
mov
push
out
pusha
sub
xor
inc
mov
or
sbb
pusha
ja
push
mov
adc
xor
repz
push
and
es
and
pop
xchg
xor
test
dec
cmpsl
je
or
jecxz
jg
push
jmp
int
stos
sbb
sub
aad
pop
loopne
hlt
mov
inc
loop
jns
xor
je
adc
mov
inc
stos
ret
jge
clc
insb
inc
fwait
insl
cmp
mov
jg
push
mov
mov
daa
dec
mov
rcll
mov
sbb
inc
es
das
sbb
ljmp
mov
mov
aam
push
stos
cwtl
fidivrl
jbe
mov
push
lods
cmpsl
xlat
push
pop
mov
shl
sahf
pop
js
pop
xor
mov
gs
popf
shll
jmp
sahf
jecxz
pop
pop
xor
stos
xor
test
mov
xchg
arpl
xor
push
and
pop
aam
fwait
lods
or
stos
dec
ret
inc
pop
into
sub
push
test
ds
js
push
xor
je
xorb
out
fiadds
into
xchg
addr16
push
insl
mov
and
les
mov
pop
sub
lret
push
inc
pop
inc
cmp
mov
mov
push
lret
dec
jecxz
cmpl
push
xchg
xor
sub
inc
xor
testb
movaps
shl
js
jns
fcmovnb
sub
mov
loopne
mov
inc
notb
or
mov
lahf
jp
shr
insl
fisubrl
cmp
out
mov
push
out
mov
xchg
pop
mov
xchg
inc
xchg
jmp
and
mov
or
fisttpl
insb
inc
aam
xor
je
jo
inc
pop
xor
shr
xchg
aaa
xchg
and
pop
add
push
fidivl
std
aas
sbbl
shlb
push
push
lahf
idivb
mov
sbb
pop
add
into
insb
push
les
enter
push
or
xchg
sbb
pop
scas
lods
sbb
adc
jmp
shl
outsl
push
addr16
or
sbbl
adc
push
xchg
xchg
mov
pusha
mov
jb
das
and
aad
xor
push
stc
jmp
jg
pop
mov
dec
cmpsl
mov
push
fucomip
fldenv
cltd
push
mov
adc
mov
int3
lods
movsl
or
es
movl
adc
mov
popf
add
jne
sbb
in
aaa
loopne
ret
out
fsts
cld
iret
gs
xlat
fisubrs
enter
test
aas
dec
addb
push
aas
xchg
jae
or
pushf
fwait
jno
pop
leave
test
cmp
push
xor
xchg
jle
mov
addl
adc
out
fs
adc
or
add
insb
xlat
cmc
pop
pop
ficoml
lods
arpl
pusha
mov
pop
pop
loopne
add
jne
enter
dec
inc
jmp
add
pop
sbb
stos
or
sub
pop
out
sub
inc
stos
add
mov
xchg
int
cmp
inc
frstor
sub
loop
push
addb
cmp
adc
leave
test
ret
mov
ds
push
call
ljmp
addr16
repz
pushf
adc
pop
inc
insl
pop
add
andl
add
push
aaa
inc
add
call
mov
jns
jbe
fisttpl
aas
xchg
or
add
aaa
insl
fcmovnb
shll
pop
cld
add
or
xchg
push
imul
jmp
jnp
add
pop
jns
ret
cmp
jns
pop
mov
lahf
enter
jbe
adc
add
adc
jge
mov
stos
sbb
inc
fchs
and
add
mov
push
pop
xchg
lock
pop
imul
cmp
adcb
dec
in
adc
das
dec
cmpsl
fisubs
mov
xor
mov
out
movsl
lock
xchg
jnp
ja
push
add
lods
cld
ja
lds
popa
or
int
aas
jb
cmpl
subl
inc
dec
jp
dec
xor
cmp
sub
push
daa
dec
cwtl
add
sub
pop
pop
ret
outsl
out
push
push
repnz
imul
rcrl
inc
add
lods
lods
ret
mov
pop
lock
jmp
fidivrl
mov
gs
push
add
hlt
dec
push
inc
inc
inc
lret
mov
ret
lret
cltd
pop
out
and
xor
xor
insb
daa
xchg
test
inc
push
mov
or
es
stos
sbb
pop
inc
lahf
aaa
inc
rorb
pop
popa
or
xor
dec
inc
pop
mov
dec
cmp
sbb
add
mov
jo
bound
icebp
push
mov
mov
pop
jecxz
movhps
inc
inc
pushf
jmp
push
subb
fimull
clc
jmp
cmp
cmp
rcrb
cmp
mov
popa
ret
stos
jmp
pop
sbb
and
fldcw
add
aam
sub
and
cmpsl
rcl
insl
fnstsw
sbb
cmp
scas
sub
sub
dec
push
cmp
js
cmp
fcom
pop
jnp
scas
lods
dec
mov
and
pop
lods
jge
pop
cs
les
sbb
lods
lods
pop
popl
pop
pop
cltd
pop
adc
lock
cmp
push
pop
or
adc
shrb
xor
push
xor
xor
xchg
dec
data16
sbb
ja
adc
stos
adc
and
mov
ret
cmp
jae
cld
push
mov
mov
mov
mov
xor
insl
push
test
bound
push
pop
jl
fst
and
lcall
fstpl
dec
insl
hlt
push
or
cmpl
add
les
xor
pop
dec
jnp
sti
adc
enter
mull
dec
js
jmp
insb
mov
daa
xlat
call
icebp
or
jno
push
pop
loop
jl
mov
push
jecxz
push
jnp
cmp
in
push
sahf
clc
inc
inc
aas
sbb
inc
jmp
pop
sbb
pop
xor
add
sbbl
cmp
cmpsb
ss
push
leave
push
das
push
popa
sub
mov
mov
aad
or
lret
dec
fistpll
cmpsb
or
push
jb
and
jl
and
dec
sub
pop
inc
imul
pop
imul
mov
xor
mov
enter
push
sbb
xor
push
cmp
in
xchg
dec
mov
xchg
das
out
push
mov
outsb
popf
decb
mov
adc
xchg
mov
push
add
push
mov
inc
dec
cmp
and
or
ds
orl
cmp
arpl
push
bound
mov
add
lret
push
ret
xor
imul
mov
adc
aad
bound
outsb
push
int
xlat
sbb
mov
and
dec
push
inc
push
jg
mov
xor
dec
iret
dec
jbe
fisttpl
push
call
lahf
outsl
hlt
sbb
jae
xor
fnstenv
jmp
jbe
test
pop
mov
cmc
adc
push
jmp
enter
shl
repz
insb
xlat
pop
mov
mov
mov
fsubrl
add
push
adc
leave
mov
pop
add
push
inc
cmp
mov
push
nop
imul
fdivrl
data16
and
clc
jge
cmp
push
out
dec
in
sbbb
scas
push
cmpl
call
or
or
sbb
sub
jle
mov
inc
dec
mov
popf
and
test
sbb
inc
daa
sub
push
sub
mov
mov
and
or
mov
gs
shl
fnstsw
jb
inc
test
and
and
mov
pop
cwtl
test
mov
dec
aad
or
cmp
fsts
sbb
mov
pop
std
lods
adc
xchg
push
inc
dec
mov
xchg
idivb
lret
jle
into
sbb
xchg
fistpll
insb
orl
lret
push
out
pop
xor
or
inc
mov
cld
push
xchg
insl
fsubp
rcll
gs
mov
or
mov
cmc
or
bswap
dec
bound
adc
arpl
je
cmp
push
mov
inc
mulb
cmpsb
popa
enter
jnp
arpl
cmp
sbb
sub
push
cmp
ljmp
rcrb
fwait
push
push
filds
sbb
inc
inc
pop
jecxz
out
mov
xor
int3
push
shlb
das
mov
mov
mov
mov
mov
sub
int3
movsb
cmp
and
jle
and
or
cmp
pusha
ficomps
mov
aad
imul
cld
insb
sbb
jb
inc
push
sbb
add
xchg
hlt
out
insl
enter
lret
icebp
loopne
enter
int3
pop
and
pop
or
dec
push
sub
fsubp
cmpl
inc
cli
dec
jnp
push
adc
dec
ret
pop
test
dec
aas
mov
adc
mov
aas
fsub
mov
addl
push
je
sub
jns
fstenv
enter
sahf
and
xor
rorb
lods
enter
mov
xchg
and
int
push
sub
push
adc
icebp
dec
ror
mov
lods
out
push
push
sbb
rclb
ret
push
in
jne
cli
add
aas
leave
fisubl
fdivr
adc
mov
or
inc
sub
clc
cmp
mov
dec
lea
iret
fwait
jg
push
bound
inc
ds
and
stos
sbb
mov
mov
add
jns
mov
inc
sbb
scas
lods
pop
lods
shl
inc
inc
inc
jnp
jnp
jns
dec
and
in
push
adc
cmp
mov
mov
lret
sbb
lea
add
sub
mov
inc
out
adc
and
jl
dec
pop
fucomip
pop
jmp
jmp
xor
rorl
movsb
enter
mov
leave
lcall
aad
rol
pop
cmp
cmp
mov
cmpsb
jns
loop
or
lret
in
ret
test
out
and
lea
xlat
inc
inc
mov
fmul
daa
pop
inc
jae
xor
and
sahf
call
jbe
push
pop
mov
xor
add
addr16
mov
pop
xchg
jecxz
cmc
jge
push
and
sarl
sbb
push
sub
push
mov
and
pusha
notb
rorl
sbb
rcr
jns
dec
cmp
push
cld
xor
leave
pop
je
and
pusha
pop
aam
test
push
pop
mov
or
jmp
int
cmp
in
cmp
sbb
xchg
or
faddl
sahf
aas
ds
repnz
loopne
add
push
mov
bound
int3
lods
cmc
inc
pop
aam
or
push
xor
addr16
adc
xor
xor
ret
xchg
fisttpl
test
push
pop
bound
push
adc
lret
pop
xor
jmp
lods
or
add
rorl
mov
cli
into
popa
xor
sbb
int3
dec
jmp
xor
mov
mov
sar
push
imul
stos
bound
inc
movb
and
pop
es
popa
sub
outsl
or
mov
adc
mov
mov
push
dec
ss
dec
ja
jae
dec
jle
push
clc
cli
out
jmp
inc
jp
sbb
add
sbb
adc
jge
jp
add
pop
xor
adc
decl
test
imul
add
mov
xor
imul
sbb
leave
dec
mov
cmc
add
inc
insl
mov
jmp
stc
pop
out
rcrl
lock
or
lock
cmpsl
mov
mov
mov
sarl
xor
mov
cmp
xchg
add
ss
decb
inc
dec
iret
push
cmp
insb
incl
inc
pushf
xchg
jge
pop
cmpsb
jge
push
mov
sahf
das
inc
pop
cmp
mov
inc
js
cmp
xchg
hlt
sub
cwtl
and
lret
leave
pop
es
je
xchg
imul
cli
call
rorl
popf
or
and
pop
mov
sub
push
mov
push
xor
lret
test
ss
jmp
fidivl
push
xor
sub
and
popa
xor
fcmovnu
and
pop
insl
push
push
in
stos
cmpb
mov
mov
mov
push
out
pop
sub
xchg
or
pop
xor
bound
inc
imul
and
mov
in
fwait
sbb
push
sub
push
sub
inc
xchg
xchg
sahf
and
jg
mov
out
arpl
sub
inc
dec
jg
popa
add
mov
pop
add
aad
mov
push
lea
and
or
pop
and
dec
xor
mov
popa
sub
or
repnz
insb
adc
ret
xor
nop
pushl
imul
movsl
cmp
test
imul
xchg
pop
jbe
int3
fstpt
cmp
xchg
xchg
daa
test
mov
dec
out
mov
adc
cmp
pop
data16
jbe
sbb
inc
movsl
sub
sahf
lods
push
mov
pop
dec
push
dec
test
cmp
cld
cmp
nop
insl
push
adc
lods
mov
xchg
sbb
mov
pop
in
adc
test
or
dec
mov
add
xchg
pop
fwait
ljmp
pop
enter
inc
data16
push
dec
ret
out
push
sar
jle
imul
int
mov
cmp
or
xor
or
mov
sbb
xor
rorl
imul
push
add
hlt
sub
xchg
mov
push
mov
sar
pop
pop
sub
sbb
add
cmp
push
es
inc
adc
aaa
inc
cmc
ret
jno
fs
inc
icebp
jo
jae
imul
jecxz
fcoml
jmp
xor
and
in
pop
rcrb
pop
sahf
cmp
pop
or
lret
negb
jg
icebp
pop
faddl
push
lods
and
sarl
sbb
roll
loop
inc
insb
jl
xor
mov
cmpsb
pop
xlat
call
add
repz
or
sbbl
leave
ret
push
or
jae
es
aad
pop
mov
jne
jae
mov
jp
cwtl
xor
dec
push
cmp
mov
xchg
scas
mov
jg
ficoml
inc
cld
inc
sub
push
stos
xor
jp
mov
inc
lret
pop
sbb
sahf
ss
dec
fwait
jae
push
adc
lock
cmp
scas
rolb
rolb
dec
add
mov
inc
xor
xchg
mov
and
jp
dec
lods
push
mov
and
sbb
pop
cmc
rcl
pop
enter
inc
pushf
pop
add
pop
jge
pop
inc
pop
jp
push
cmp
in
push
pop
pop
adc
int
cmc
push
inc
sub
aaa
lock
call
cmpsl
push
or
leave
fistpll
xchg
dec
inc
inc
pop
sub
imul
rorl
jbe
mov
or
pop
mov
sub
push
jp
mov
movb
out
mov
lods
rorl
push
adcb
mov
sbb
mov
jae
add
test
notb
xor
add
jno
orl
xor
inc
pop
mov
adc
mov
dec
jl
in
pop
jnp
out
call
pusha
xor
pop
into
pop
xor
pushf
int
mov
test
les
push
cmp
mov
fistps
aam
dec
scas
insb
push
push
cs
mov
in
pop
jbe
lea
jnp,pt
movsl
insl
pop
sub
add
fstpl
fidivrl
xor
and
mov
dec
xor
inc
adcl
std
vminss
lods
push
mov
leave
leave
fs
jmp
jb
push
mov
cmp
or
xchg
and
cmp
movntps
dec
lds
mov
mov
xchg
and
xor
mov
adcb
dec
pop
outsl
call
add
pop
jnp
mov
das
jbe
out
mov
or
mov
mov
cmp
sbb
dec
and
push
jne
aam
ljmp
cmp
xchg
jmp
pop
adc
sbb
pop
push
lret
adc
stos
shll
cmp
push
test
shll
leave
mov
pop
out
je
add
mov
scas
fidivrl
pop
je
sbbl
pop
dec
jle
push
lcall
notb
mov
sub
xchg
test
fcomi
mov
add
sbb
andb
inc
lcall
mov
shl
hlt
inc
inc
inc
dec
inc
jmp
fidivs
int
cmp
or
loop,pt
orb
xchg
mov
cmp
xchg
test
out
jl
adc
and
fadds
shl
popa
xor
cltd
pop
aas
outsl
jmp
xor
test
pop
pop
jb
aam
sbb
pop
mov
push
es
repz
push
dec
add
cs
hlt
gs
or
js
pusha
pop
jmp
pop
cltd
ret
or
pop
pop
int3
cmp
inc
mov
xor
or
lahf
bound
mov
xchg
push
and
jle
sub
ss
icebp
or
cmpsb
jne
and
sbbl
les
out
sahf
imul
imul
jecxz
imul
arpl
test
and
pop
jge
or
jno
xchg
and
mov
cs
mulb
mov
adcb
dec
add
fwait
cmpb
shl
mov
lret
push
jp
jae
push
and
in
mov
punpckldq
fsincos
and
inc
or
in
out
mov
mov
lret
adc
and
push
das
and
adc
xchg
jnp
test
dec
sahf
lea
adc
int3
mov
clc
inc
cmpsl
mov
dec
cld
cmpsl
or
pop
ja
mov
jle
mov
cmc
or
cwtl
mov
jl
xchg
mov
inc
fdivrs
jno,pt
sub
xchg
xchg
mov
pop
rorb
adc
fst
pop
dec
jmp
ret
aad
aam
inc
call
jmp
mov
mov
xchg
fildll
or
imul
jne
gs
or
and
dec
add
or
mov
es
inc
mov
jle
jge
sub
xchg
popa
inc
adc
cmp
data16
mov
fimuls
adc
jnp
cmp
add
push
scas
clc
jge
xchg
mov
enter
fs
mov
mov
data16
sub
mov
xor
into
add
adc
out
cmp
js
in
and
test
stc
adc
data16
and
push
je
pop
movsb
lret
mov
jecxz
adc
push
or
ror
fldt
and
adc
mov
jge
shll
roll
jo
loop
sub
jl
mov
push
call
add
inc
repz
mov
push
insl
out
aad
mov
pusha
pop
lcall
jbe
mov
movsl
rclb
insb
andl
or
cmp
mov
addr16
mov
cmp
jg
test
nop
fwait
mov
repnz
imul
mov
push
inc
aam
sub
pop
data16
inc
add
insb
mov
es
xor
shrb
scas
inc
stos
scas
and
rcrb
fwait
test
lock
or
push
sbb
icebp
sti
pushf
rcl
rorl
cld
aad
pop
or
fcomp
std
es
sti
push
call
sbb
pop
pop
lahf
xor
dec
lods
sub
fimull
pop
jnp
mov
ljmp
mov
imul
pushf
push
sbb
xchg
ficoms
adc
bound
xchg
jns
sbb
movsl
pop
xor
dec
rcrb
mov
xchg
lock
mov
adc
add
or
pop
popl
mov
xchg
inc
adc
mov
pop
mov
xchg
add
mov
movsl
data16
cmc
arpl
sbb
insb
fwait
pusha
push
xchg
icebp
dec
cwtl
push
fidivrl
call
inc
add
pop
mov
leave
xor
xor
sub
lods
add
adc
xchg
icebp
loopne
jge
mov
leave
sbb
push
push
int3
push
aaa
movsl
shrb
cltd
push
xor
inc
mov
mov
adc
mov
sbb
repz
xchg
cmp
sub
js
dec
out
rolb
jnp
jecxz
mov
enter
dec
jle
cmp
das
addr16
jae
push
jae
dec
fisubrs
pusha
stos
inc
ret
pop
push
pop
mov
xor
inc
mov
in
sub
or
les
xchg
sub
cmp
out
js
pop
fs
mov
sahf
leave
jle
movsl
je
push
in
test
cmpl
xchg
adc
cmp
pop
and
xor
loopne
dec
add
or
xor
inc
sbb
dec
jle
sbb
xor
ret
ja
xchg
mov
addr16
mov
fmuls
cmpsl
arpl
mov
lea
xchg
pusha
mov
rclb
lret
adc
sub
ds
adc
je
push
mov
decl
and
xor
in
inc
push
shrl
mov
fwait
jle
stc
push
data16
pop
mov
aam
out
mov
fstpl
mov
not
jg
add
add
xlat
ret
mov
sbb
or
dec
inc
sahf
sbb
mov
jle
test
sbb
lahf
adc
xor
add
mov
testb
bound
sbb
ja
rol
jno
inc
pop
dec
ljmp
add
jecxz
mov
and
adc
jmp
xor
stos
and
cmp
pop
mov
data16
sti
cmp
or
int3
shl
jnp
push
jle
imul
mov
rorl
shll
add
sbb
les
popf
add
mov
adc
inc
rolb
gs
faddl
arpl
dec
inc
repnz
insb
insl
dec
mov
jecxz
jae
or
dec
ret
jl
sub
dec
mov
loopne
inc
inc
fcom
mov
js
adc
call
xor
loopne
sti
test
push
push
test
xor
jge
adc
clc
mov
pop
mov
call
add
rorb
mov
inc
pusha
mov
imul
jo
ret
outsb
es
pop
sbb
push
movsb
rcrl
push
icebp
fs
mov
aam
dec
cwtl
add
inc
sahf
pop
jnp
in
jno
cmpsb
or
push
inc
xor
popf
js
aam
sbb
imul
test
push
outsl
out
clc
mov
pop
inc
pop
enter
pop
jg
mov
jmp
push
push
in
bound
or
rcr
pop
xchg
inc
xchg
adc
lods
mov
cmp
push
jge
sbb
cwtl
lods
cmp
jbe
adc
mov
lock
sahf
pop
xor
dec
adc
push
add
mov
daa
mov
mov
push
cld
and
xchg
adc
dec
ja
sub
scas
subb
sbb
xchg
or
and
lods
xchg
inc
insl
repnz
inc
fdivl
bound
mov
cmp
rol
mov
ja
or
int3
and
out
adc
pop
mov
pop
push
sub
mov
loop
pop
jp
push
mov
mov
ficompl
insl
cmp
mov
mov
insl
xor
mov
data16
sub
push
pop
push
sahf
push
sub
ja
jecxz
mov
adc
std
enter
add
sti
aaa
insb
xor
push
sub
adc
imul
mov
jo
scas
call
push
xchg
cmp
adc
cltd
sub
sub
pop
scas
jnp
mov
cmp
jo
push
imul
pop
loope
ret
and
ret
push
pop
rolb
xor
sbb
xor
lock
or
orl
sub
mov
xchg
or
call
push
pop
pop
mov
sub
mov
out
push
fmulp
jle
mov
data16
cmp
jge
mov
jmp
sbb
jge
cmp
jbe
inc
insl
in
push
repnz
push
xor
add
cmpsb
in
or
inc
inc
sub
add
aaa
mov
cmpsb
repnz
mov
inc
rcll
mov
sbb
or
push
iret
mov
mov
jle
fisubl
daa
pop
scas
jo
or
mov
add
or
test
pop
cmpsb
mov
and
cltd
or
pop
xor
cmp
repnz
push
mov
mov
in
cmp
leave
add
mov
mov
adc
mov
rol
scas
sub
mov
jecxz
and
sti
enter
dec
and
cltd
xchg
inc
cmp
sahf
sbbl
add
testb
cmp
mov
dec
shrb
cltd
lods
pop
adc
enter
fidivrl
sarl
push
push
inc
inc
into
push
mov
adc
sbb
inc
pop
loopne
scas
and
f2xm1
iret
sahf
ja
dec
xor
mov
inc
sbbb
test
inc
fadds
inc
test
sbb
fsubl
xor
dec
les
fstl
adc
jle
push
xorb
mov
cmpsb
mov
cld
inc
sti
jno
xchg
lods
lret
dec
in
loop
das
mov
pushf
xchg
pop
repz
mov
sub
push
and
mov
sbb
adc
add
rcrb
push
inc
dec
xor
jl
clc
sahf
lret
cmp
movsl
sub
stos
cmpsb
dec
xor
cmp
movsb
xor
cmp
sahf
sub
leave
push
jl
pop
sbb
and
stos
movsb
into
sbb
sbb
inc
push
xchg
notl
jge
dec
popa
repz
ljmp
sbb
mov
dec
pop
cmpsl
outsb
clc
sub
jo
push
pop
cmp
dec
cli
lea
adc
adc
js
das
mov
inc
mov
dec
imul
imul
stos
push
mov
mov
cmpsl
scas
out
jp
dec
add
gs
push
ds
cmp
mov
dec
jno
movsb
mov
insl
lods
dec
xchg
mov
imul
out
push
dec
add
aas
fmuls
mov
mov
sub
mov
cli
inc
jecxz
es
mov
mov
adc
add
rcrl
dec
out
mov
xlat
fs
gs
out
scas
xchg
add
dec
mov
mov
pop
imul
mov
mov
pop
mov
sub
push
das
mov
pushf
fisttpll
mov
dec
add
loopne
insl
dec
mov
dec
out
ret
cmp
leave
dec
cmp
xchg
adc
stos
cmp
push
sti
outsb
adcb
lret
pop
inc
or
push
pop
in
push
imul
dec
ljmp
jmp
je
fsts
push
xchg
adcl
inc
or
aas
int
cmp
test
mov
sbb
dec
mov
pusha
jbe
dec
xor
rcrb
or
dec
ret
add
movsb
mov
lcall
leave
inc
sub
dec
pop
fwait
ret
push
lcall
mov
cmpl
fsubs
andb
sbb
test
dec
mov
xor
lds
ja,pt
dec
fwait
pop
leave
aas
es
mov
adc
push
mov
ss
std
imul
dec
sub
mov
jge
rolb
stos
jnp
movsb
adc
xor
dec
std
mov
dec
add
or
sub
pop
inc
test
push
ljmp
rcl
pop
int
push
or
cmp
jb
sub
cmpsl
cld
fcomp
jns
mov
add
stc
jne
add
or
lret
rclb
dec
bound
ja
dec
push
adc
mov
xchg
add
dec
dec
mov
push
xor
push
push
mov
mov
add
int3
mov
sbbl
push
pop
dec
xchg
imul
aam
out
dec
movsb
jbe
jp
cmpsb
fldcw
aaa
mov
pop
pop
aad
mov
push
roll
dec
push
arpl
es
pusha
ja
push
subl
gs
paddb
push
cmp
pop
push
jle
push
lahf
or
push
int
push
fstpl
test
jle
scas
add
mov
lahf
pop
push
ss
mov
popl
cmpb
dec
pop
cltd
iret
pop
xchg
xchg
sbb
mov
dec
popa
outsb
mov
out
sahf
cmpsl
mov
push
sbb
adc
dec
sub
lret
rolb
fildll
pop
pop
ret
push
icebp
adc
mov
sahf
scas
pop
pop
aad
push
fldl
pop
leave
jmp
inc
clc
call
add
testb
push
adc
in
leave
mulb
or
inc
and
add
test
and
mov
and
test
jnp
insl
and
mov
cmp
sbb
fwait
mov
push
or
enter
xor
fistpl
sbb
jecxz
jb
rcrb
pop
mov
xor
fimuls
pop
inc
out
inc
lds
ss
aam
adc
or
mov
mov
es
inc
aam
js
xchg
aam
or
and
lcall
jnp
pop
shll
icebp
push
push
cmp
mov
jle
ds
push
xor
xchg
leave
stc
push
cli
xchg
push
cmc
data16
test
sub
mov
lret
mov
pushf
mov
push
mov
imul
and
icebp
insb
xchg
and
pop
xchg
push
mov
pop
nop
aam
pop
out
insl
addl
imul
xor
cmpsb
or
inc
jmp
mov
fwait
int3
or
xor
lds
mov
xor
fdivrl
sahf
aaa
testb
out
stos
imul
rorl
jb
add
repz
rclb
out
push
jmp
call
jo
xlat
and
mov
add
mov
fst
clc
pop
imul
push
and
das
mov
sub
inc
rol
popf
xchg
ficoms
int3
cltd
sbb
sbb
push
jnp
sbb
in
xchg
jp
xor
mov
mull
fdivrs
mov
cmp
fsts
mov
decl
test
dec
stos
mov
das
xchg
cmp
push
pop
int
ret
xchg
gs
rol
cmp
or
jl
xchg
sbb
int3
test
pop
test
popf
dec
notl
aam
pop
out
pop
add
mov
fstps
and
push
out
jbe
std
push
pop
jno
jle
fwait
dec
les
test
xorb
pop
xchg
enterw
sti
lods
mov
in
sbbl
insl
push
pop
push
mov
lods
fsts
push
dec
shll
sub
xchg
movsl
mov
insb
add
enter
inc
mov
lods
ficoml
aaa
mov
xor
and
sbb
inc
mov
mov
mov
inc
or
repnz
sub
sub
sub
shrb
roll
movsl
or
xchg
mov
and
mov
pop
xchg
mov
fwait
cmp
or
icebp
bound
sbb
leave
jmp
and
sbb
sbb
pusha
fsubrs
inc
push
arpl
in
les
sbb
andb
lret
call
mov
add
test
inc
jmp
ds
xchg
fldenv
sub
lret
or
dec
rorb
rol
mov
inc
cmp
cmc
push
ficoms
mov
mov
jle
adc
sub
push
insl
cmpsb
out
push
inc
xchg
adc
adc
pop
xor
nop
call
dec
push
cltd
mov
pop
pop
nop
xor
mov
adcl
jle
pusha
inc
xchg
mov
and
insl
test
or
fwait
jecxz
push
dec
add
mov
pushf
push
repz
sti
sbb
loopne
inc
lea
mov
mov
jmp
inc
or
sti
lods
jmp
roll
ret
test
sarl
into
push
sub
mov
xchg
test
adc
lds
fdivrs
cld
aas
xchg
sub
and
mov
dec
jp
jl
xchg
or
or
fs
insb
ret
pop
push
fsub
dec
hlt
addl
mov
mov
mov
das
sbbl
leave
dec
clc
ja
and
loopne
mov
lock
jae
pop
test
pop
cmpsb
mov
dec
xorb
mov
repz
sahf
int
or
push
les
les
pop
sahf
shrl
dec
stc
mov
mov
inc
cmp
addb
loopne
pushf
xor
cmp
dec
xor
xchg
sbb
push
sub
icebp
lds
jbe
pop
push
lret
not
rclb
inc
mov
pop
xchg
lods
rolb
lock
jae
insb
lret
sbb
loopne
adc
mov
xchg
and
pop
movsb
mov
inc
test
mov
push
mov
push
fs
sub
xor
nop
push
xor
mov
mov
icebp
repz
mov
pop
rclb
sub
loop
pop
repnz
mov
xor
rorl
sub
xor
into
xor
xor
data16
addl
stc
add
jbe
dec
push
pop
js
lcall
lods
cmpsl
xlat
push
push
sub
xor
jg
inc
fs
js
outsl
mov
jle
mov
imul
mov
lret
out
stos
dec
lds
or
cmp
xchg
jl
xlat
js
mov
rcrl
mov
pop
xchg
aaa
inc
pop
insl
xchg
push
pop
sbbb
xlat
add
sbbb
repz
jecxz
dec
mov
out
loop
pop
hlt
adc
push
xor
sbbl
mov
jne
jnp
stc
add
arpl
movsl
les
rolb
std
jle
and
and
jnp
or
cmpsb
ja
out
or
xchg
loopne
lret
sarl
pop
lods
shrl
jecxz
std
ror
dec
or
subb
cwtl
push
sub
arpl
stc
or
subl
sbb
cmp
movl
cltd
xchg
jae
or
repnz
lret
divb
adc
das
fildll
mov
jle
ret
test
xor
push
pusha
sbb
xor
mov
dec
mov
lret
or
cmp
jge
dec
xor
repnz
clc
or
add
inc
push
sbb
mov
sbb
shr
or
and
sub
xchg
jnp
int3
mov
test
adc
inc
sub
in
rorb
and
dec
jecxz
cmp
push
push
ja
push
pop
pop
lret
leave
sub
inc
orl
mov
mov
stos
int
adc
lds
inc
push
xchg
mov
pop
ja
aad
xor
pop
xor
push
sbb
cmp
ret
sub
sub
pop
mov
outsl
insb
fiaddl
test
pop
cmc
les
addb
xor
pop
mov
mov
stos
imul
sidtl
push
inc
or
dec
outsb
adc
shr
mov
enter
loope
push
xor
pop
and
jg
xchg
bound
pop
mov
inc
or
iret
xchg
push
push
inc
push
jge
insb
mov
xchg
inc
adc
dec
insb
lods
push
mov
push
mov
mov
mov
pop
dec
cmp
sbb
mov
sub
pop
xchg
xchg
jp
insb
pop
les
fcmovu
inc
push
adc
push
imul
pop
xor
dec
cmp
lods
mov
mov
insb
or
inc
int3
pusha
pop
xchg
leave
jbe
out
fcoms
adc
mov
fcomi
jl
aas
int3
lret
aad
cmc
stos
xlat
aad
loopne
jl
jb
dec
pushf
mov
sbb
nop
sbb
es
pushf
imul
xor
nop
scas
iret
dec
daa
push
mov
pop
fnstenv
push
lret
mov
add
xor
std
xor
dec
in
in
ret
mov
pusha
mov
outsb
imul
movsb
mov
pop
fsubrs
ror
leave
mov
lea
sub
fstl
frstor
cmp
dec
mov
jp
lods
leave
adc
jb
cld
arpl
dec
call
and
cmp
add
cmp
push
fstpt
mov
adc
sahf
mov
stos
xchg
bound
int
lods
mov
stos
mov
loop
xor
cmp
test
xor
mov
loopne
cmpb
adc
push
mov
mov
sbb
fucomip
jl,pt
jle
mov
inc
lret
bound
jnp
and
and
ret
and
les
pop
pop
adc
jnp
int
add
jnp
jmp
push
scas
inc
cs
mov
aam
lcall
inc
out
push
cmp
mov
adc
pop
xor
bound
sbb
add
jns
mov
mov
jmp
xchg
pop
es
call
cmpsl
mov
lods
mov
jne
cmp
pop
lret
sti
cmp
cld
adc
inc
movsb
push
insl
dec
je
aaa
rcll
sbb
pop
xor
xchg
dec
ljmp
push
movsbl
add
jmp
pop
cmpsl
cmpsl
xchg
xchg
jg
cmp
mov
cli
cmpsb
aaa
insl
push
xlat
xchg
mov
lret
xor
cli
rorl
movsl
adc
pop
push
inc
cmp
push
aas
push
adc
push
inc
sahf
xorb
jp
icebp
sub
cli
add
xchg
je
and
adc
jbe
test
sub
rorb
adc
imul
in
ja
ret
push
sti
xchg
push
mov
sbb
jecxz
mov
sbb
pop
adc
rorb
mov
cmp
out
int
push
std
leave
xor
and
mov
stos
notb
jne
inc
mov
sahf
sti
mov
pop
lret
cwtl
insb
lods
enter
push
daa
xchg
sub
or
out
pusha
arpl
clc
pushf
push
iret
pop
pop
jmp
addr16
fsubrl
pop
mov
rolb
cld
movsl
xor
xchg
cmp
mov
xchg
inc
mov
popf
nop
loop
mov
xchg
sbb
rcl
mov
popf
push
femms
xor
sarl
xor
out
push
sbb
cmpl
lods
cs
shlb
lcall
addr16
mov
inc
test
stos
sbb
or
dec
pop
push
rorb
or
arpl
push
out
push
lret
inc
roll
jecxz
jbe
dec
adc
fistps
push
daa
mov
vhsubps
cld
push
add
xchg
add
imul
inc
cmp
sti
xlat
xor
aam
test
outsl
jbe
add
xchg
or
jg
inc
mov
repnz
inc
inc
in
sub
push
ds
call
arpl
pop
push
cwtl
loop
lret
inc
xor
jne
test
fcoms
stc
adc
jecxz
xor
adc
and
leave
push
hlt
xchg
push
mov
cmpsl
mov
loop
mov
lcall
dec
fildl
inc
jnp
test
jne
and
iret
sahf
jecxz
sub
mov
xor
fxch
sub
outsl
push
popa
push
adc
or
mov
inc
mov
xchg
inc
decl
movsb
call
arpl
ds
orb
lock
push
mov
mov
mov
leave
xor
xor
aaa
icebp
insb
sahf
cmpsl
sahf
push
dec
jbe
jp
shrl
adc
and
hlt
stc
sti
inc
inc
jae
stos
mov
loopne
out
idivl
and
arpl
mov
rolb
adc
in
pop
sub
xchg
mov
mov
mov
movsb
add
inc
aaa
mov
fisttpl
cmp
daa
adc
jge
shrb
adc
or
push
and
sbb
inc
mov
nop
and
dec
les
add
add
cmp
insl
subb
lods
iret
push
je
jns
cmpsb
adc
jb
sbb
xor
mov
fs
mov
clc
or
push
std
pushf
pop
mov
mov
xchg
popf
out
push
mov
out
cmc
cmc
mov
adc
rol
pop
xchg
scas
into
inc
or
insl
loop
mov
push
mov
inc
ret
mov
add
jb
cltd
xor
clc
xor
pop
lret
in
jbe
dec
sbb
add
and
dec
fwait
popf
mov
cmp
add
cmp
das
xchg
inc
imul
std
cmp
shll
jno
clc
scas
enter
stc
push
mov
imul
xchg
add
filds
stos
sub
fcomi
or
cmpb
sub
repz
shrl
sbb
pop
mov
insl
enter
sti
lahf
pop
lret
lock
mov
call
and
sub
outsb
push
cmp
scas
arpl
xchg
inc
sub
rcl
leave
xor
sub
pushf
push
rcrb
mov
fsubl
pusha
adcl
out
inc
es
nop
pop
xor
add
push
pusha
je
lea
cwtl
jnp
lcall
lods
mov
or
pop
mov
test
rorl
fdivs
aad
dec
push
lahf
notb
lea
inc
cmp
xor
std
call
jl
outsb
jg
push
icebp
outsl
dec
arpl
jo
jmp
fcmovb
aad
insb
jge
test
iret
sbb
repz
imul
inc
pop
cmp
sbb
mov
mov
push
jmp
dec
fcoml
xchg
stos
ljmp
and
pop
aad
cmp
xchg
in
lcall
push
jl
pop
cmp
mov
out
sti
out
dec
xchg
mov
sahf
add
jo
cwtl
inc
xchg
pusha
daa
mov
xor
leave
scas
cmpsb
rcl
adcl
repnz
cmc
xchg
add
in
sub
out
add
call
arpl
addr16
out
imul
mov
pop
push
xchg
dec
insb
ljmp
dec
in
ror
stos
cmp
daa
dec
movsl
sbb
pushf
shrl
inc
dec
lock
mov
cmc
add
lret
mov
xchg
sbbl
inc
or
lahf
into
cltd
pop
dec
push
pshufw
cmp
jae
jno
pop
dec
mov
pushf
insl
xor
iret
pusha
sbb
imul
sub
cli
pushf
add
xchg
aad
jp
sbb
adc
push
fsubrp
xor
jo
mov
mov
mov
fistpll
int
ds
sbb
dec
inc
sbb
jle
pop
jmp
test
adc
int3
inc
cmp
orb
loopne
jo
inc
jle
jle
mov
dec
shll
imul
stos
loop
movsb
cwtl
push
dec
icebp
out
cmp
push
jecxz
jno
clc
fadds
in
mov
sub
xchg
push
test
mov
add
arpl
loope
sbb
ficoml
mov
dec
gs
or
sub
xor
pop
into
mov
mov
push
ss
outsl
or
jle
insb
push
adc
mov
mov
sbb
clc
mov
inc
xchg
aad
enter
push
jecxz
decb
js
xchg
pop
clc
sbb
loop
out
mov
inc
push
cmp
mov
lahf
sahf
nop
push
add
jl
cvtps2pi
cli
adc
insl
pop
cmp
add
daa
pushf
fcoml
inc
xchg
xchg
cs
fsts
test
lea
xor
lret
test
arpl
pop
add
push
cli
adc
outsl
or
stc
subl
shl
call
xor
cltd
cmpsb
sub
ljmp
push
stc
ljmp
daa
dec
xchg
and
insb
lock
adc
je
mov
call
out
aam
fsubrl
lea
int
loopne
in
jp
sub
cmc
fnstcw
arpl
lods
xor
and
cmp
push
lods
adc
adc
sub
dec
aam
mov
mov
ljmp
xchg
and
xor
inc
sbb
sbb
test
stos
enter
add
or
scas
movl
cmp
jno
inc
leave
and
or
add
sbb
lock
xchg
lea
ljmp
fnstcw
iret
jnp
mov
movsb
lret
std
pop
xor
push
jecxz
in
pop
xchg
pusha
sbb
adc
andb
insb
mov
dec
enter
mov
xor
ljmp
or
push
insb
lret
mov
or
pusha
shll
notl
push
xorb
xchg
iret
neg
jmp
out
jbe
mov
sub
push
mov
js
enter
sbb
cmp
es
sbb
adc
dec
inc
adc
or
lock
inc
lock
iret
fisttpll
mov
mov
jne
xor
xlat
test
or
push
sub
jp
mov
inc
mov
pop
and
push
pop
rcr
stc
xchg
inc
push
mov
and
mov
xor
imul
mov
shll
jg
add
shr
subl
ret
xchg
dec
repz
adc
cld
pop
lahf
add
mov
inc
push
jg
push
and
test
imul
push
sbb
lahf
lods
jns
dec
lahf
pop
imul
mov
mov
adcl
gs
adc
xor
subl
test
jo
mov
xchg
sbb
cmp
mov
push
out
in
xlat
insl
xor
pushf
and
dec
mov
pop
fnstcw
mov
push
sub
xchg
mov
lret
push
xchg
sbb
xchg
push
pop
or
call
inc
std
aas
ja
leave
repnz
test
ja
mov
aad
jns
xlat
cmp
ret
sub
shll
inc
mov
sub
mov
inc
dec
data16
push
inc
adc
data16
aaa
xchg
imul
into
stos
rorl
ja
inc
xor
call
cmp
cs
push
mov
push
jmp
and
mov
or
or
adc
xor
pop
xlat
adc
or
adc
lea
adc
and
mov
pop
xchg
lahf
push
mov
movl
das
movsb
mov
loope
lret
push
popl
arpl
cmp
popa
cltd
push
stos
stos
out
lock
insb
pop
and
jae
shll
jnp
fstpt
xor
push
jbe
test
pop
sbb
orl
mov
cmpsb
bound
jle
dec
call
mov
jo
pop
data16
xlat
jnp
xchg
jae
mov
in
pop
add
inc
and
xor
bound
pop
dec
mov
es
fnstenv
rorl
jo
mov
jle
insl
xor
stc
popa
xor
loop
pop
inc
inc
pop
fucomp
mov
roll
jae
xor
mov
std
mov
sbb
les
cs
cmp
dec
xor
jg
call
pop
sbb
or
xor
leave
xor
dec
or
xor
add
sahf
sahf
leave
inc
sbb
lcall
mov
loopne
pop
xor
inc
inc
xchg
xchg
and
inc
fwait
ss
jnp
inc
enter
mov
jo
xor
adc
jbe
jns
pop
push
mov
int3
dec
jno
cmp
add
or
sub
push
js
stos
dec
pop
lds
loopne
jecxz
adc
xchg
dec
sbbb
or
jmp
arpl
cmp
fcomps
pop
jb
xchg
jnp
je
jmp
and
sub
scas
mov
cli
insl
xlat
imull
rcll
inc
jmp
mov
add
imul
leave
aam
pop
scas
fs
cmpl
pop
and
dec
push
dec
pop
mov
xchg
aad
faddp
cmp
cmp
sub
inc
andl
sub
add
std
xor
jmp
add
es
sahf
xor
js
cmc
jno
leave
adc
jmp
cmp
bound
scas
mov
sub
test
add
sub
add
sbb
nop
cltd
jb
ja
push
lods
pop
int3
imul
loop
inc
movsl
xchg
add
cmp
pop
jmp
dec
je
andb
shl
mov
cmc
jae
push
movsl
lret
push
inc
sbb
fnstsw
mov
xor
xor
pop
jno
jmp
mov
mov
sbb
sbb
add
xor
cli
jmp
jne
xchg
xor
imul
cmp
xor
lods
in
mov
mov
out
jns
mov
mov
pop
jp
xlat
xlat
loope
inc
adc
incl
xchg
xor
sub
out
fldl
mov
imul
das
daa
fisttps
inc
sub
push
ret
loop
pop
dec
adc
ret
ljmp
or
call
clc
jbe
cmp
push
call
dec
clc
cli
xor
sbb
aas
ds
nop
test
hlt
fdivs
jnp
lods
xchg
fisttpl
fistpll
pop
test
xchg
rcrb
decb
sub
or
mov
xor
or
je
aam
aad
ds
jb
pusha
mov
pop
popf
adc
fcmovu
dec
scas
cmpb
imul
ret
and
xor
lret
pop
push
sub
xchg
rcll
pushf
sbb
inc
jo
mov
push
in
xchg
inc
jecxz
mov
jb
pop
rcrl
lret
int
cmp
mov
lods
sbb
dec
out
or
sbbl
xor
adc
mov
add
jo
out
sbb
push
add
cmp
ret
mov
ror
clc
fists
add
cmpsb
popf
add
and
ret
sahf
mov
out
pop
jecxz
data16
rolb
cmp
jle
daa
lods
xchg
movsl
call
or
jbe
adc
jp
adc
das
jo
pop
add
arpl
cmp
mov
pushf
dec
inc
mov
out
sahf
xchg
loop
add
mov
clc
adc
ret
jae
cs
in
adc
cld
int
sub
push
lock
call
data16
das
mov
cmp
xor
pop
xchg
rcrl
dec
pop
fisttpll
mov
fisubl
pop
in
call
or
xor
sub
int
mov
xor
or
and
cmp
addr16
fwait
mov
and
bound
mov
arpl
leave
xchg
mov
outsb
leave
pop
repnz
cmp
stc
xchg
jb
es
dec
cmp
adc
mov
push
imul
sub
sbb
inc
shr
stc
outsb
xchg
adc
rclb
leave
jle
aaa
stc
sahf
enter
ds
pop
les
es
mov
adc
cmovae
ss
outsb
push
push
sbb
bswap
sets
ss
mov
fistps
ja
mov
int3
in
cmpl
jmp
int3
add
scas
or
decl
push
and
in
jmp
das
aad
movsl
xor
inc
jl
lret
or
ret
ret
sbb
in
and
xor
pop
test
xchg
sub
aas
mov
insb
testl
mov
lret
sbb
jle
dec
icebp
mov
sbb
sar
mov
adc
adc
lods
mov
lods
cwtl
cmp
push
lret
mov
sub
sub
jbe
or
mov
test
sbbl
jle
test
push
test
xor
cwtl
sahf
ja
or
and
or
test
mov
push
mov
clc
mov
xchg
or
mov
jp
xchg
inc
add
pop
push
lods
push
inc
orl
mov
std
or
push
fisttpll
dec
sub
mov
ret
mov
sub
subb
xor
push
dec
dec
mov
mov
or
sub
xor
push
mov
daa
adc
xlat
add
in
sbb
sarb
bound
jno
fsubrs
hlt
notl
push
mov
dec
lock
ret
jp
jg
sub
mov
addl
lods
pusha
dec
push
or
push
outsb
lahf
mov
push
dec
adc
in
sbb
jmp
jno
test
push
jns
xchg
add
cwtl
ficoms
add
xchg
nop
cmpsb
or
js
ss
push
inc
int
dec
nop
or
push
enter
inc
push
and
sub
ss
cmpl
mov
mov
fwait
sbb
push
jns
mov
cmp
add
inc
xor
dec
xchg
sub
pop
inc
fwait
mov
ret
dec
cmpb
or
ds
xor
and
adc
cmpsl
bound
mov
push
or
fsubrl
arpl
add
jno
xchg
mov
insl
imul
push
fisttpll
pop
xchg
pop
pop
out
sbb
call
or
sarb
and
mov
mov
or
xor
and
std
fsubrl
push
jle
out
xlat
sahf
fldenv
add
shlb
xchg
mov
dec
or
and
fcmovbe
mov
pop
xchg
sahf
cmp
fisubl
out
dec
stc
shll
jecxz
mov
in
cmpsb
clc
xor
xlat
arpl
jmp
inc
fnstcw
shlb
mov
subb
mov
cli
mov
mov
iret
xor
jbe
mov
pop
fistl
mov
int
outsb
lods
xchg
push
test
fcompl
lahf
mov
mov
mov
test
aaa
cltd
pop
dec
sub
dec
imul
adc
push
xchg
sarb
enter
ficoms
adc
xor
push
cmpsl
lods
loop
inc
daa
in
mov
jmp
sbb
mov
insl
sar
push
in
adc
or
jecxz
push
dec
and
lods
sub
ret
push
xor
pop
sbb
mov
jmp
stos
dec
pop
push
test
adc
ja
cmpsl
pushf
dec
jmp
adc
imul
jp
mov
adc
inc
outsb
mov
xor
ds
sahf
aam
xchg
mov
jns
pop
hlt
and
inc
mov
adc
aas
mov
iret
js
lret
lds
pop
add
daa
dec
dec
test
test
or
xchg
dec
push
add
aaa
std
in
iret
ja
sbb
aas
xor
dec
hlt
mov
sub
mov
mov
mov
stos
lods
pop
sarb
cs
push
je
loopne
scas
nop
ss
pop
dec
add
mov
mov
rclb
fstpt
cli
push
mull
jnp
sbb
cli
daa
mov
lret
fimuls
pop
insl
lock
shll
lods
xor
adc
jae
mov
int
pop
nop
stc
loope
test
add
xchg
inc
lods
icebp
dec
dec
leave
dec
inc
repz
das
xor
loope
sbb
add
mov
je
mov
insl
fcomi
mov
sub
into
push
push
out
or
daa
xor
pop
cmpsl
cmp
ds
pushf
dec
insb
lea
dec
add
imul
clc
jp
jecxz
inc
dec
push
dec
arpl
mov
dec
push
inc
jne
insb
xor
bound
inc
add
les
in
sbb
pop
xchg
arpl
sub
push
lret
mov
or
sti
shll
xchg
mov
sbb
jne,pt
jbe
fiaddl
jns
call
or
fmull
lds
push
in
lret
fxch
shll
and
movsl
movsl
imul
dec
stos
call
imul
outsb
inc
mov
cmpsl
rcll
pop
repnz
dec
xchg
mov
arpl
fisubrs
js
mov
add
mov
andb
cmp
mov
loopne
pop
adc
and
mov
mov
stos
pop
out
cmp
lods
jnp
mov
adc
cld
inc
sub
push
inc
mov
jbe
mov
xor
ja
aaa
and
int3
sub
mov
outsb
xchg
jo
and
repz
mov
mulb
adc
jp
lahf
mov
xor
mov
mov
das
or
test
pop
outsl
jo
cmc
dec
lods
jge
jbe
xor
mov
and
insb
inc
sub
subb
push
test
inc
cmp
in
inc
pop
jnp
loop
pop
imul
gs
sbb
pop
push
pop
pop
jp
mov
add
arpl
fiadds
popf
jle
inc
call
leave
inc
xor
aaa
push
lods
mov
pop
ss
cmc
and
scas
dec
aad
mov
insb
add
push
loopne
ret
pusha
arpl
jp
inc
and
push
push
dec
mov
fimull
or
sar
xor
data16
adc
xor
outsb
cmc
xchg
lods
inc
rcrb
sub
pop
mov
lock
out
cmp
jb
out
push
inc
js
popa
cmp
mov
pop
loopne
mov
je
pop
sbb
shll
mov
lret
mov
popf
icebp
dec
loop
inc
adc
mov
sarb
or
or
inc
subb
sub
jo
push
mov
lock
sub
xor
push
leave
lahf
mov
inc
lret
mul
enter
shrl
dec
mov
or
mull
push
xor
pushf
cmpsl
pop
rclb
mov
shll
enter
sti
sub
ss
adc
pop
push
jmp
mov
and
dec
lret
mov
xor
or
dec
inc
xor
cs
test
in
divb
push
pop
or
sbb
push
jp
clc
adc
int3
pop
stc
test
adc
es
or
lret
rcrb
or
aam
loop
mov
or
xlat
ret
sub
mov
daa
adc
jmp
jb
fs
push
outsl
lods
xor
inc
jo
fistl
and
arpl
or
sub
or
pop
mov
lods
jne
add
enter
iret
dec
jbe
shlb
fwait
adc
sub
xlat
jbe
push
and
jbe
or
dec
jle
ss
mov
orb
in
or
push
mov
mov
aam
clc
dec
sub
push
dec
outsb
shlb
stc
int
lret
adc
loopne
sbbb
js
out
mov
sbb
ja
inc
test
jo
leave
movsb
or
pop
je
sub
lds
inc
ret
stc
lea
pop
adcb
or
and
pop
jl
cmovo
dec
xchg
push
jnp
mov
xchg
cmp
mov
outsb
jne
inc
jle
push
mov
mov
outsl
or
push
pop
mov
mov
pop
pusha
mov
xor
ret
aad
jg
cs
ja
fldl
imul
mov
sbb
ja
out
mov
negb
ret
loop
jle
scas
add
lret
mov
fdivs
xchg
dec
shl
mov
pop
push
cltd
jp
rcll
fnsave
dec
mov
cld
fstl
outsb
mov
clc
add
fs
bound
push
mov
add
pop
xor
cmp
cs
sarl
xchg
pop
mov
jae
xchg
dec
dec
mov
cmpsl
cmp
es
add
jecxz
repz
sbb
xor
ss
cmp
mov
mov
add
and
sbb
or
sbb
xchg
hlt
or
clc
adc
mov
sti
cmp
sub
ja
fisubs
push
push
xor
sbb
inc
and
into
sub
xor
scas
pop
mov
mov
ja
scas
in
loope
ss
xchg
insl
pop
sbbb
dec
and
mov
cmp
sahf
insb
arpl
fisubs
and
jp
pop
or
mov
xchg
fldl
dec
cmc
cmp
movsl
push
push
adc
dec
mov
mov
jb
or
std
add
mov
inc
inc
xlat
nop
add
insl
dec
hlt
xor
dec
lahf
in
cmp
mov
add
lods
xchg
adc
push
push
insl
mov
das
dec
leave
mov
mov
inc
scas
rcrl
ret
sbb
inc
jbe
ds
into
jnp
ljmp
pop
pusha
fwait
push
mov
dec
mov
nop
or
inc
mov
jp
or
shrb
mov
cltd
cmp
sub
mov
iret
jbe
push
in
pusha
je
pusha
in
adcb
inc
inc
in
fmuls
push
sbb
mov
fcoms
or
jge
outsl
cmc
rcrb
sahf
adc
cmp
into
ljmp
dec
sub
mov
pop
fmuls
dec
addl
loopne
fiadds
xor
add
jnp
dec
adcl
aam
cmp
cmc
sbb
dec
inc
xchg
or
or
xchg
add
xor
pop
push
sub
cs
lods
inc
loope
jg
mov
or
or
ret
lock
das
adc
add
push
pop
cmp
xor
sub
add
movsl
imul
int3
dec
fwait
inc
hlt
pop
das
lea
inc
nop
push
xchg
iret
jmp
add
sbb
mov
insb
push
mov
mov
lds
jl
adc
icebp
test
call
mov
rorb
xchg
aam
in
loopne
fdivrl
repz
xor
int3
cmpsb
cmp
or
pop
xor
push
xor
xor
or
xor
arpl
mov
sbb
cltd
lods
mov
xchg
xchg
aaa
repz
lods
mov
bound
jg
mov
inc
mov
in
mov
dec
std
ja
call
pop
pushf
in
xor
jns
sub
cmp
push
ds
mov
sub
xchg
int
insl
lds
or
and
in
or
cmc
pop
pop
xchg
fcmovne
shrl
sbb
sub
mov
in
mov
out
mov
fstl
cmpsb
fistpl
das
xchg
mov
fsubrl
pop
mov
mov
xor
xchg
pushf
and
jecxz
lea
addl
jecxz
test
xlat
jmp
adc
fisttps
outsl
adc
jae
xchg
in
inc
cmpsb
or
adcl
fwait
popf
cmc
lcall
das
mov
or
lret
incl
adc
pop
pop
mov
xchg
loopne
rcll
xor
xor
andl
adc
test
pop
jo
inc
or
pop
jle
mov
jmp
sub
sbb
push
or
pop
mov
inc
inc
add
sarl
sub
lods
imul
test
movb
inc
dec
mov
mov
add
jnp
adc
hlt
lret
mov
inc
icebp
mov
mov
or
xor
dec
and
pop
push
insl
dec
popf
les
ret
shlb
loop
in
dec
mov
and
mov
or
xor
pop
add
inc
sbb
fs
adc
hlt
lods
jecxz
lock
jge
lret
pop
jns
mov
or
xchg
aam
sub
ret
add
faddl
jg
inc
movsl
mov
mov
push
fs
popa
pop
daa
sbb
push
cli
rcrl
or
aad
xor
cltd
jns
mov
jnp
sahf
scas
cmp
pushf
aam
xchg
jl
xor
jno
pop
push
mov
imul
mov
pop
jl
dec
rclb
xor
adc
movsl
testb
out
xor
xor
mov
lcall
xor
mov
push
test
add
cmp
xor
add
fadd
dec
mov
insl
mov
pop
add
pop
lods
push
ds
cmp
xchg
mov
xchg
nop
pushf
cmp
push
jmp
inc
insb
pop
jmp
jne
push
sahf
sub
hlt
rcl
in
push
sbb
pop
addb
xor
fsubl
cmp
mov
add
inc
cmpsl
push
andl
rcll
dec
mov
xor
sbb
xchg
add
xchg
call
pop
dec
push
cli
xchg
jno
scas
incb
push
and
cli
repz
sbb
les
dec
xchg
stos
adc
and
iret
int
mov
insb
push
pusha
not
jo
inc
shll
xor
cmp
inc
sbb
or
jbe
icebp
cmpsb
sub
inc
or
jae
insl
testl
sbb
mov
mov
mov
xchg
jae
xchg
mov
pusha
mov
or
cmp
cmc
neg
jle
pop
aaa
push
cmp
movsl
mov
shlb
lahf
adc
cmpsb
subl
test
push
iret
dec
sbbb
mov
ret
dec
fimull
xchg
clc
pop
jne
lret
jle
lahf
pop
push
jl
mov
add
nop
push
cmp
enter
fisubrl
mov
in
fstpl
insb
mov
ss
sub
lahf
and
dec
push
jp
ss
or
jb
sub
in
fs
cmpsb
pop
hlt
adc
mov
pushf
xor
mov
push
mov
and
shl
push
mov
dec
fcmovb
mov
rep
mov
cmp
pop
mov
mov
daa
ja
test
imul
or
mov
enter
shrl
sbb
adc
mov
mov
xchg
leave
pop
in
dec
pop
arpl
fwait
mov
pop
lods
mov
jp,pn
cmp
sbb
dec
fistpl
jnp
int3
pop
pop
cltd
mov
sub
mov
inc
mov
push
dec
cmp
add
sbb
mov
cmpsb
xchg
mov
sbb
inc
lods
out
pop
test
shl
cmp
jl
jmp
ret
icebp
dec
xchg
sub
pop
mov
adc
lods
mov
add
jecxz
xchg
ds
sbb
jbe
mov
xor
xor
loopne
sbbl
push
lods
sbb
insb
movsl
lods
imul
or
xor
jmp
pop
stc
flds
je
push
pushf
cmp
xlat
scas
bound
leave
or
push
sbb
cmp
mov
fbld
or
sbb
xchg
inc
inc
dec
jae
jbe
sti
pop
inc
rcrb
mov
rol
and
fsts
push
xlat
lods
shlb
cmpb
xchg
movsb
mov
add
mov
push
popf
out
js
dec
lds
mov
or
rolb
call
dec
shlb
xor
sarl
pop
lcall
jle
jmp
sub
xchg
jnp
sbb
imul
jmp
pop
cwtl
cmp
jg
loop
push
or
sbb
lods
inc
jp
inc
addr16
inc
adc
arpl
inc
shll
data16
jno
bound
incb
sahf
mov
rol
adc
and
jbe
jo
shll
inc
pop
xchg
sbb
mov
mov
pop
loop
pop
mov
xor
mov
lods
out
les
push
ret
push
icebp
push
daa
mov
push
dec
bndstx
xchg
jmp
adc
push
sbb
bound
xor
xor
js
and
cmpsl
push
xor
sub
mov
bound
push
xor
sub
cmpsl
mov
inc
dec
test
pop
push
rorb
mov
mov
mov
aam
xchg
movaps
jecxz
imul
pop
push
icebp
push
dec
dec
rcrb
fidivrs
into
dec
lcall
dec
out
pop
or
mov
xor
rorb
mull
insb
jmp
sub
repnz
jmp
stos
call
mov
rorb
int
dec
xor
ja
sub
mov
mov
imul
fbld
adc
cltd
dec
xchg
push
pop
cmc
cmp
mov
xchg
lea
push
inc
nop
rorb
jle
pop
xchg
mov
dec
sbb
movsl
xor
and
add
cmp
bound
call
jmp
mov
or
imul
add
mov
dec
mov
push
xor
dec
and
inc
xchg
dec
js
aas
sub
fisttps
rorl
cmp
mov
dec
mov
dec
adc
in
imul
jns
lock
pop
mov
cli
dec
addr16
xor
lret
lods
pop
insb
xlat
icebp
adc
dec
std
jmp
sbb
mov
test
push
mov
mov
pushf
les
mov
dec
leave
or
mov
sbb
sahf
in
or
ret
mov
dec
inc
pop
popf
cld
rcrl
sub
popa
nop
mov
pop
pop
push
fimuls
or
push
cltd
xor
mov
adcl
sub
clc
dec
jb
mov
mov
push
hlt
call
js
dec
and
shl
imul
xor
repnz
dec
dec
notl
pop
pop
push
mov
push
xchg
inc
jno
scas
aas
push
or
pop
xchg
stos
cmp
scas
roll
inc
pushf
mov
push
pop
mov
sub
dec
fistl
xlat
mov
adc
mov
int3
dec
dec
int
stos
xlat
inc
pushf
cmp
fnstsw
sub
push
lods
xchg
mov
ja
imulb
push
cmp
push
rclb
inc
loope
mov
jg
sbb
pop
mov
pop
add
push
adc
adc
mov
mov
loop
jmp
je
or
dec
jmp
xchg
xchg
xchg
sbb
cmpsb
xor
xchg
pop
push
es
dec
ljmp
dec
dec
fistl
or
sub
imul
pop
jmp
fisttpl
adc
sub
sub
xchg
push
push
and
jmp
loop
push
fcomps
xchg
push
pop
rorl
loopne
dec
cld
inc
ret
jp
mov
and
or
push
fstp
push
dec
pop
add
add
ret
dec
xlat
sub
pop
loopne
jle
inc
imul
xor
ds
mov
add
sub
push
add
rcr
inc
mov
jb
imul
dec
popa
push
dec
dec
cmp
adc
out
idiv
xchg
pusha
sub
scas
dec
mov
es
mov
xchg
push
mov
jns
cmc
sbbl
dec
jnp
incb
stos
dec
pop
add
out
sub
dec
dec
mov
addr16
jmp
xchg
pop
in
stc
pusha
dec
mov
cmp
jmp
adc
push
inc
push
orb
repz
jp
bound
add
enter
xor
push
add
in
inc
adc
orb
pop
aam
fcmove
push
dec
out
dec
fldl
pop
jbe
clc
sub
pop
inc
and
inc
ja
icebp
in
insl
dec
sbbb
push
sahf
or
fidivl
mov
pop
pop
das
notl
dec
nop
adc
or
mov
aad
xchg
in
dec
xlat
fisubrl
repz
push
movsl
dec
icebp
adc
lret
xor
cld
loope
not
lds
sbb
or
cwtl
mov
push
dec
dec
inc
jmp
add
dec
and
push
jl
inc
enter
fiadds
iret
out
mov
mov
xor
int3
dec
test
xchg
lock
jo
loopne
xchg
dec
jecxz
bound
pop
adc
pop
mov
clc
pop
loop
sub
pop
orl
int3
outsb
lcall
adc
fstpl
fnstenv
ja
push
push
or
jle
aaa
mov
xchg
dec
pop
ret
add
hlt
adc
pop
sbb
push
in
sti
sub
cld
ljmp
inc
pop
lret
adc
imul
xor
aad
mov
dec
je
and
cli
imul
nop
jno
insb
andb
les
xchg
dec
add
jo
repz
push
push
jne
xor
cmp
sub
xchg
pop
fisttpll
pop
pop
mov
pusha
mov
test
adc
or
dec
xchg
jge
scas
lahf
mov
jo
aaa
add
out
in
icebp
arpl
cmp
inc
dec
fistps
mov
mov
out
stos
lock
dec
rclb
jg
cwtl
fcom
dec
pop
xchg
icebp
pushf
bnd
lea
mov
jb
mov
push
add
xchg
adc
dec
pusha
ret
jle
bound
sub
mov
pop
or
adc
xchg
and
fcoms
dec
fisubl
mov
dec
out
ljmp
and
dec
bound
adc
dec
stos
sarb
jmp
or
cmp
pop
sub
or
xor
int
xchg
dec
adcl
xor
shll
pop
rcrl
cmp
cmp
je
test
les
mov
mov
xor
mov
rclb
inc
pop
aam
aad
dec
loope
xchg
out
mov
test
aad
fisubrl
hlt
add
js
rcl
int3
inc
or
inc
lret
fildl
cmp
mov
pop
in
pop
arpl
clc
or
mov
lea
push
sbb
pop
std
xor
mov
dec
dec
in
fs
mov
cmp
cmp
mov
pop
lds
mov
or
add
icebp
call
jg
jb
jno
add
decl
popf
sbbl
addr16
dec
out
jle
dec
pop
inc
dec
dec
xor
mov
dec
adc
cwtl
jae
out
dec
rolb
or
hlt
jnp
xchg
jae
adc
out
mov
mov
dec
jno
xchg
daa
inc
cmp
push
int
ret
pop
aas
mov
or
jg
adc
sub
out
inc
inc
sbb
dec
prefetcht1
cmc
dec
rclb
mov
cli
dec
jge
jns
sub
imul
pusha
dec
pop
js
mov
cmp
inc
mov
sub
lock
dec
lds
fwait
js
scas
or
out
clc
cmc
addl
or
mov
mov
scas
hlt
shr
inc
rorl
pop
pop
push
xchg
add
mov
jle
enter
dec
je
jl
out
mov
mov
mov
pop
mov
xchg
aas
pop
or
lods
mov
sub
mov
das
outsb
pop
sbb
fistpl
or
and
addb
sbbl
add
push
xchg
repz
sbb
and
jb
stos
mov
inc
rcll
cld
push
sub
dec
sub
mov
out
jbe
push
pushf
cmpsl
dec
xlat
adc
mov
sub
pop
je
ljmp
mov
or
fucomip
pop
push
popa
cmc
scas
jo
nop
mov
jns
and
cmpsb
out
rorl
aas
sub
and
xchg
scas
xchg
dec
sbb
mov
or
push
mov
int
jne
pop
xor
cld
cs
outsl
pop
test
pop
sti
mov
mov
subl
stc
dec
push
pushf
imul
popf
pop
mov
mov
sub
loope
subb
daa
dec
enter
jb
mov
daa
lahf
dec
pop
dec
pop
pop
pop
push
addb
xorl
loopne
out
and
ljmp
iret
nop
aaa
dec
push
testb
sub
jno
hlt
xor
mov
shll
dec
adc
xchg
push
sbb
mov
lret
rorl
bound
mov
jb
in
ffree
dec
test
jp
jle
insb
imul
dec
push
pop
push
pop
fmull
les
lret
xchg
xor
mov
sub
loop
push
loope
int
mov
fadds
cmp
fidivrl
aas
cmp
stc
pop
out
je
inc
mov
lods
enter
clc
fisubl
mov
push
inc
bound
aas
xor
xor
lcall
test
add
or
xor
std
push
adc
push
inc
add
adc
inc
pop
aad
popa
mov
xor
ficoml
mov
cltd
cmpsb
into
bound
cmp
xchg
jo
dec
in
icebp
jp
insb
push
les
adc
stc
divl
push
cmpl
call
in
add
sbb
add
and
hlt
dec
lcall
push
into
pop
xor
andl
call
and
pop
int
push
iret
or
pop
leave
inc
push
fwait
push
je
lods
push
insl
adc
lret
xchg
fwait
mov
inc
sahf
and
mov
push
mov
cmp
shl
mov
in
jg
js
dec
and
push
xchg
mov
insl
add
sub
inc
push
enter
aaa
aas
xchg
pop
stc
subb
rclb
and
pop
push
xchg
sbb
enter
mov
pop
int
xor
push
in
insl
mov
test
test
cmp
dec
out
shll
xchg
je
xchg
lcall
mov
mov
xchg
leave
inc
lock
pop
push
xchg
adc
ss
fwait
cmpsb
pop
aaa
and
jnp
pop
adc
dec
cmpb
mov
pop
mov
mov
fists
inc
fldenv
sbbb
aam
call
aad
jp
ret
sub
push
sbb
adc
cld
loopne
push
inc
lock
dec
fwait
stc
mov
sub
mov
stos
fsubrs
dec
ja
xchg
mov
pop
mov
mov
test
inc
or
xor
cld
and
stc
mov
pop
xor
daa
xchg
stc
or
or
add
and
lahf
jecxz
lods
jle
sbbl
adc
cwtl
lret
stos
adc
push
divb
insl
popa
xor
and
pop
les
dec
cmp
sub
add
jp
repnz
xchg
mov
loope
push
mov
insb
push
dec
aad
iret
dec
cld
add
movsl
out
adcb
xchg
rorl
psllw
add
adc
cmpsb
rcrb
or
scas
sbb
popl
xlat
or
mov
gs
add
xchg
imul
push
mov
inc
dec
fldt
xor
or
inc
adc
nop
jo
push
int
push
sbb
push
incb
sub
xchg
mov
mov
orl
xchg
leave
fucomip
push
insl
fsubrs
push
pusha
enter
fnstenv
push
pop
arpl
fstpt
dec
or
inc
xor
xor
dec
int3
pop
mov
test
arpl
lods
je
push
cmp
or
lahf
jle
sbb
fstpt
pusha
xchg
push
inc
sbb
xor
call
clc
mov
es
dec
sbb
mov
adc
jae
out
inc
dec
jnp
insb
dec
inc
pop
sbb
push
clc
loop
lods
cmpsb
lret
icebp
dec
inc
imul
les
dec
inc
mov
push
int
lods
mov
add
hlt
xor
xchg
xlat
cli
sarb
sub
sbb
sub
adc
sbb
bound
arpl
or
mov
adc
and
xlat
mov
dec
xor
and
sbb
cltd
jnp
cmp
fs
into
adc
dec
dec
scas
insl
push
push
out
jecxz
adc
xor
mov
xor
notl
inc
xor
and
js
lret
xor
jp
jbe
repnz
mov
les
cmp
sahf
mov
lea
aaa
jmp
cmp
dec
inc
cmp
cmp
or
fstpt
xor
push
lock
inc
mov
xchg
jle
adc
sub
cltd
outsb
iret
push
adc
inc
mov
xchg
xchg
insl
loop
xchg
adc
out
sahf
in
dec
push
cmp
clc
lea
sbb
inc
call
cmpsl
andl
mov
pop
adc
insl
stos
adcl
add
aam
mov
push
int
xchg
js
pop
mov
ja
pop
dec
pop
out
je
sahf
sub
mov
popf
and
notb
int3
mov
rol
sti
aam
shr
jno
and
cmp
fcompl
mov
jg
add
mov
ss
jge
addr16
lock
test
sbb
enter
jns
push
imul
push
inc
push
and
roll
mov
addr16
in
roll
sub
push
or
push
addr16
imul
test
xor
sbb
mov
in
test
mov
cmp
jecxz
das
mov
mov
mov
mov
xchg
inc
cmp
lea
in
sti
sub
xor
stos
inc
push
shlb
dec
bound
sbb
mov
scas
mov
jmp
imulb
dec
adc
add
dec
add
aam
mov
ret
xor
insl
sahf
adc
scas
and
orl
dec
cmpps
int
dec
data16
loopne
push
insl
pop
into
sar
stos
xor
mov
lods
aaa
cmp
lret
insb
aad
jnp
std
outsl
mov
pop
lret
es
cmpsb
jne
in
add
iret
mov
test
scas
push
dec
adc
pop
sbb
sub
test
mov
js
jmp
pop
adc
movsb
lret
fistl
push
rcrb
xor
fdivrl
xchg
rclb
rorl
pop
dec
jns
push
stos
call
pushf
pop
adc
insl
out
jmp
inc
mov
mov
dec
mov
jo
outsb
mov
lret
pop
add
loop
mov
dec
jbe
lods
pop
cmp
mov
dec
sahf
int3
push
push
jle
xchg
jge
cmp
scas
ss
sbb
mov
or
dec
scas
xor
ret
cmc
mov
mov
xor
pop
dec
jp
fildl
dec
popa
xchg
ss
movsl
aam
in
sbb
das
sbbl
pop
dec
xchg
addps
push
mov
jecxz
ja
aaa
nop
hlt
inc
ret
add
test
jle
inc
inc
pop
fwait
xchg
pusha
outsl
cmpl
xchg
push
xlat
add
subb
push
pop
fisttpl
sahf
jg
ds
and
popa
dec
jl
dec
ret
data16
in
cwtl
aam
dec
testb
les
fst
mov
fimull
rep
mov
sub
inc
rcrb
adc
nop
dec
push
adcl
sbb
lcall
add
enter
ficomps
mov
test
xor
dec
pusha
cmp
xchg
jns
lods
in
jmp
mov
push
jae
mov
xchg
mov
mov
mov
jl
cmpsb
xchg
push
shrb
dec
dec
cmp
imul
out
popf
les
mov
mov
adcl
aas
cmpsb
out
cmp
decb
sub
mov
vpmacssdd
cmp
xor
cmp
mov
push
xchg
dec
roll
mov
test
cmc
push
mov
pop
xchg
fs
loopne
data16
mov
adc
out
nop
mov
dec
popf
jp
jle
push
mov
mov
dec
lods
mov
add
dec
xor
adc
into
push
adc
xor
push
ss
pop
sarl
leave
imul
arpl
jno
cmp
ja
movsb
mov
lahf
pop
inc
in
das
jns
inc
xor
push
jl
pop
pop
out
pop
push
inc
dec
xchg
mov
imul
inc
sbb
ret
mov
push
lea
mov
xor
es
scas
sbb
pop
jecxz
fwait
ret
daa
or
vdivss
fs
xchg
push
lods
dec
mov
pusha
push
xchg
dec
cmpsl
mov
rorl
mov
mov
dec
cli
shlb
test
hlt
mov
loopne
je
negl
xor
add
jp
adc
dec
mov
inc
push
imul
dec
pushf
int
scas
imul
test
imul
sbb
inc
fistps
adc
pop
push
push
and
jl
xor
mov
int3
lret
push
sbb
xor
sub
lock
sbb
inc
aad
inc
dec
into
cmp
aad
inc
cmpsb
inc
xor
mov
into
orb
lcall
jmp
out
inc
cld
push
in
push
pop
xchg
insb
pop
jp
call
pushf
add
ss
shr
xchg
int
adc
mov
pop
lds
inc
mov
jl
stos
adc
addr16
xlat
dec
pop
lret
or
inc
and
not
cmpsl
test
jl
popa
push
or
inc
inc
ret
pop
fnstcw
ds
adc
pop
icebp
imul
mov
stc
xchg
imulb
dec
out
enter
fisttpl
sbb
jecxz
mov
xor
cmpsb
pushf
sbb
push
test
ret
xor
test
sub
or
push
dec
jne
mov
movsl
cmp
test
sbbl
inc
pop
add
loopne
aas
mov
mov
adc
add
pushf
adc
outsb
sbb
data16
sahf
dec
or
stos
xchg
mov
clc
xchg
xor
push
cld
pop
sbb
or
pop
and
iret
sub
negl
adc
lret
lods
inc
idiv
insb
or
arpl
push
fs
movl
adc
fdivs
cs
sbb
cmp
lock
jg
mov
pop
js
adc
lods
dec
xchg
jae
fstpt
shrb
aad
loopne
dec
lea
fldenv
jae
push
add
pop
fmul
cmpsb
xchg
dec
cmp
jbe
dec
xor
xchg
inc
jmp
or
pop
and
cmpsb
std
ja
push
mov
inc
xor
mov
mov
decb
sbb
loop
cmpb
insl
popw
out
mov
fidivl
mov
dec
push
or
test
inc
cmpsb
out
inc
aam
dec
enter
fiaddl
inc
call
out
mov
jnp
lods
inc
xchg
adc
xchg
jge
cs
jae
incl
mov
push
hlt
mov
arpl
fstpt
cmp
jge
ljmp
mov
sub
lods
ja
popa
bound
jns
pop
sbb
xor
dec
sahf
xor
cmp
pop
xor
loop
xchg
inc
or
push
add
mov
cmpsl
lods
mov
bound
or
xchg
loope
test
jge
daa
fcoml
inc
std
icebp
or
xor
cmp
jmp
pop
aas
pop
cmp
mov
jge
dec
dec
test
filds
jb
xchg
mov
mov
sbb
jns
mov
clc
repz
repz
pop
jg
inc
sahf
imul
cld
xor
xchg
mov
faddp
pushf
pusha
jbe
or
repz
xor
in
aas
call
inc
and
test
ret
inc
push
cmp
fyl2xp1
out
mov
jae
ds
jo
fisubl
fistpll
or
jecxz
or
cwtl
cmp
lahf
xchg
pop
mov
lret
inc
ret
jge
push
insb
sub
or
mov
pop
movsl
hlt
cmp
scas
and
dec
int3
inc
dec
js
mov
mov
loop
lock
mov
in
lret
cmpsb
sbb
mov
pop
pop
or
pop
and
gs
jecxz
push
inc
pop
jmp
movsb
cmp
call
dec
inc
xor
cs
mov
sub
das
arpl
push
pop
mov
dec
scas
fsubrs
jmp
outsl
adc
arpl
cmp
data16
sbb
sub
mov
leave
inc
xchg
xor
xor
ds
mov
test
mov
xor
pop
dec
jg
mov
jmp
mov
and
xchg
lret
popa
ret
mov
jecxz,pt
outsb
into
cmp
lret
inc
pop
lods
leave
sub
mov
xor
adc
mov
pop
push
out
addr16
lods
and
pop
pop
data16
sbb
mov
pop
push
imul
push
sub
ds
test
movd
jle
xor
inc
pop
push
inc
add
cli
sub
push
enter
loop
ss
add
sbb
lods
mov
dec
cltd
lret
shrb
pop
jge
dec
jle,pt
sub
loopne
rclb
insl
sub
mov
inc
dec
mov
mov
inc
cld
add
cltd
sub
aad
xor
movsl
mov
mov
jg
add
je
scas
cltd
dec
push
mov
mov
xor
das
push
inc
push
out
or
mov
fadd
xchg
sbb
cmp
sbb
sbb
jns
fsub
sbb
shlb
iret
data16
push
fsub
cld
sub
cwtl
jno
adc
jns
xor
mov
jne
not
pop
mov
jmp
lock
fisubl
enter
cmp
aas
adc
xchg
jg
pop
cmp
in
fnsave
push
push
cmp
sarb
sti
pop
jnp
dec
je
cs
insb
inc
mov
nop
jne
adc
xor
in
shl
hlt
fmul
clc
dec
mov
or
mov
sub
popa
sarb
fidivrl
popl
mov
loope
scas
mov
sub
pop
mov
sbb
fisubl
fcoml
dec
jecxz
dec
pop
inc
inc
data16
or
cmp
push
dec
sub
rcll
xchg
out
cmp
shrb
sbb
push
subb
fiadds
dec
push
lcall
outsl
adcb
jb
add
xchg
xor
xor
imul
cmp
xor
jnp
mov
inc
jle
xor
push
or
add
or
xor
add
rorb
push
adc
xchg
sub
cmp
push
mov
loopne
push
mov
jle
xor
push
imul
adc
stc
push
pop
pop
das
mov
testl
push
insb
dec
and
inc
jg
sbb
dec
sub
icebp
mov
dec
insb
pop
es
data16
in
icebp
test
push
jmp
mov
pop
dec
add
stos
inc
cmp
aad
loopne
mov
fisubrs
movsl
loope
adc
dec
or
cld
rolb
fs
mov
dec
call
shrb
data16
lret
test
out
push
fs
loopne
push
repz
cmp
xor
mov
sbb
jb
xchg
push
or
cmp
out
xor
jl
aam
into
adc
xor
out
push
sub
lret
mov
add
sub
mov
jne
xchg
mov
inc
loopne
adc
repnz
lcall
aam
jp
jns
add
or
add
dec
insl
leave
call
lods
mov
push
cmc
add
dec
xchg
cltd
mov
lock
cmp
sbb
enter
daa
or
into
xchg
dec
fdivl
inc
shufps
lock
mov
rclb
mov
push
and
shl
jae
decb
pop
jle
test
repz
push
in
pop
rorl
insl
cmp
jb
loopne
push
cmpsb
ds
movl
xchg
sub
push
test
test
mov
push
rclb
test
push
cli
adc
popf
rcrl
inc
add
fisubrl
je
fwait
add
mov
imul
clc
mov
sbb
push
leave
dec
hlt
fidivl
into
xor
and
add
mov
pop
inc
adc
xor
jmp
or
scas
cmp
inc
fnstsw
insb
lock
dec
xor
lods
cs
test
outsl
adc
mov
cmp
mov
xchg
push
subl
inc
sub
dec
pop
fucom
sahf
sub
fsubs
adc
popf
pop
ljmp
lds
or
cmp
call
pusha
addr16
scas
sbb
mov
cmpsl
mov
imul
mov
xor
jnp
mov
iret
enter
push
ljmp
cmp
bound
push
loopnew
rolb
mov
mov
mov
leave
inc
mov
out
mov
cmpxchg
jl
pop
and
push
and
icebp
mov
ja
in
sub
add
lock
mov
lahf
push
rolb
pop
test
fdivrs
inc
fbld
ljmp
or
fisubl
and
xchg
les
cmpsb
ja
outsl
or
xor
fs
adc
rolb
jae
popa
jnp
xchg
jp
mov
adc
push
testl
mov
mov
pop
jecxz
stos
push
adc
pop
push
int3
mov
mov
cltd
xchg
aam
inc
pop
iret
loop
add
inc
out
sbb
pop
jb
jp
in
nop
call
stc
fdivs
dec
push
loope
push
imulb
rol
add
fbstp
sbb
xor
dec
iret
mov
cmc
xor
or
add
bound
popf
test
inc
out
rcrl
cmp
add
loopne
divb
inc
jp
test
pusha
fdivrl
fstpt
fstl
daa
xor
pop
mov
cmp
mov
dec
inc
xlat
mov
push
push
sti
dec
bswap
lcall
pop
insl
mov
imul
push
xchg
xchg
add
rolb
pop
dec
add
lods
push
add
mov
push
lret
push
call
sahf
stos
insb
addr16
iret
lods
ds
add
dec
out
inc
push
add
xchg
sbb
andb
add
and
insb
push
bound
pop
pop
ret
jg
cmpsb
popl
loopne
test
das
xor
loop
sub
xchg
add
push
mov
xchg
bound
aam
add
rorl
ret
lods
test
fisttpl
enter
aam
enter
cli
cld
int3
sbb
jp
mov
cmp
jns
or
mov
pop
pop
or
sbb
or
mov
push
inc
mov
lds
xor
cmpb
mov
out
pop
mov
push
mov
roll
insb
add
xor
imul
jnp
movsl
sbb
inc
xchg
dec
xor
jecxz
adc
or
xor
stc
xchg
cmpb
fcoml
inc
pusha
daa
enter
repz
inc
sub
loope
sub
pop
jg,pn
popf
xor
das
cltd
int
inc
dec
dec
xor
ss
push
xchg
sub
cmp
int
push
xor
mov
push
fcomps
test
jnp
cwtl
dec
je
fcmovbe
aad
test
mov
negb
and
ljmp
enter
popf
xchg
je
mov
xor
inc
in
cmc
add
sbb
out
inc
scas
cmpsb
mov
xlat
pushf
movb
and
dec
lret
pop
sub
push
clc
outsl
xlat
test
mov
subl
or
add
inc
cmp
push
push
mov
data16
xor
sub
dec
inc
xchg
and
mov
xchg
dec
jo
loopne
inc
stos
mov
inc
and
mov
or
pop
xchg
inc
stos
test
jo
nopl
mov
inc
jmp
cmp
clc
adc
fwait
leave
jns
xor
add
pusha
aad
xor
pop
mov
js
add
gs
fwait
push
jge
add
mov
arpl
sub
push
dec
fisttpll
sahf
outsl
lods
mov
and
mov
repz
nop
and
stc
pop
jae
fbstp
cs
push
ds
cmp
add
xor
nop
add
mov
xchg
sbbb
pushl
jg
mov
imul
dec
call
inc
mov
or
cmpsl
push
fnstcw
xchg
pop
pusha
icebp
jmp
repnz
mov
imul
outsb
out
pop
out
enter
lock
and
pop
arpl
jmp
arpl
mov
inc
mov
scas
mov
jl
or
pop
jnp
aad
dec
lret
roll
push
xor
pop
jp
addl
xchg
sbb
lock
aaa
lods
insb
xchg
in
fstpt
dec
cmp
pop
iret
push
jb
adc
and
mov
ljmp
aas
add
cmpsb
stos
popa
push
sbb
or
xor
xor
dec
sbb
xor
sahf
cmp
popa
imul
sub
int3
leave
pop
sub
lret
pop
pop
imul
jp
adc
pop
add
fwait
mov
pop
movsb
inc
pop
scas
icebp
cld
xchg
lret
sbb
outsb
dec
cmpsl
push
push
subl
pop
loopew
call
js
xchg
pushf
mov
or
in
xor
sub
cmp
mov
out
or
push
pusha
dec
inc
adc
neg
push
daa
pop
pop
jmp
cmp
add
jp
sbb
pop
ja
mov
in
and
pop
dec
das
xchg
das
or
stos
inc
outsb
jle
fstl
mov
mov
jle
add
inc
and
sub
mov
addb
dec
push
imul
das
mov
jl
shrb
and
rorl
cmp
movsb
sbb
shl
pop
cmc
callw
dec
pop
lds
call
add
mov
call
inc
mov
mov
lods
lret
or
shll
push
jae
sbb
cmc
jnp
xor
int
negl
ja
in
jmp
and
out
add
inc
cmp
mov
cmp
bound
cmp
pop
xchg
or
and
pushf
mov
or
push
sub
fs
jg
dec
scas
mov
adc
mov
adc
sbb
xchg
push
dec
dec
jle
out
js
clc
push
dec
sub
xchg
jg
inc
push
aam
push
push
ljmp
fisttpll
push
imul
dec
mov
pop
lea
dec
ja
jmp
into
cmp
lret
mov
out
or
fimull
hlt
or
cmovns
push
pop
dec
mov
pop
cmp
add
test
jecxz
mov
outsb
cld
outsl
jmp
push
aad
pop
pop
test
rol
jg
sub
push
mov
je
repz
dec
jb
jne
add
loopne
jg
lock
adc
pop
xchg
add
or
push
push
push
out
and
jmp
mov
pop
loopne
mov
dec
sbb
mov
fists
fisubrl
sbb
cmp
out
cs
aam
push
or
nop
int3
and
sbb
decl
ret
testb
dec
pop
inc
jnp
mov
adc
in
adc
fldt
push
loopne
add
lock
aaa
pop
icebp
push
cmpsl
jnp
dec
cmp
jmp
test
inc
nop
dec
pop
enter
cmp
jne
bound
jg
mov
xor
sub
add
dec
test
mov
cli
mov
popa
scas
cmp
mul
call
pop
sbb
inc
lcall
sub
test
inc
dec
jle
cltd
fcoml
into
cmp
mov
rolb
push
gs
loop
pushf
sbb
ja
int3
mov
add
push
xchg
or
mov
insb
sbb
dec
push
push
sahf
mov
cltd
mov
dec
fs
movsl
mov
mov
jbe
push
jnp
inc
testb
sbb
lods
inc
xor
scas
dec
fwait
xchg
sbb
mov
hlt
bound
inc
call
adc
dec
add
mov
mov
push
xchg
jp
inc
rcrl
out
lods
cmp
cli
or
mov
pop
sbb
popf
lock
in
mov
add
pop
insb
jns
movsl
imul
mov
push
les
lcall
add
mov
or
inc
sti
ror
dec
test
jae
hlt
push
jmp
add
xor
mov
mov
cltd
iret
lods
lret
adc
dec
inc
dec
pop
dec
lret
xchg
dec
movlps
addr16
rolb
jl
popa
bound
ss
aas
jg
cmp
enter
or
in
in
data16
dec
adcb
xchg
mov
push
cmpsl
cmpl
inc
mov
push
mov
mov
xchg
add
mov
mov
xchg
jp
pushf
sub
sbb
cmp
sti
push
ja
mov
sbb
dec
mov
ret
dec
fiaddl
shl
fstl
dec
or
adcl
lea
out
dec
add
inc
mov
stc
aaa
dec
add
mov
push
push
pop
add
dec
mov
insb
enter
imul
inc
mov
dec
lahf
mov
mov
fcom
dec
fcmovnu
std
add
mov
dec
dec
cld
ret
xchg
xor
inc
rolb
mov
push
pushf
inc
inc
subb
dec
push
push
mov
cwtl
mov
xchg
cmc
xchg
dec
mov
adc
in
out
mov
das
mov
lock
jno
data16
dec
cs
jb
mov
or
das
out
push
and
dec
aad
or
add
cld
dec
cmpsl
enter
arpl
mov
jp
mov
sub
jnp
mov
dec
outsl
out
call
cli
fs
in
push
jnp
movsl
add
int3
cwtl
or
jno
and
sbb
leave
test
int3
test
jae
cmp
push
inc
cmp
seto
sub
pop
in
loopne
cmp
jnp
test
out
cmp
adc
xor
nop
jp
insl
pop
es
mov
push
or
sub
xor
pop
movsl
iret
dec
roll
lahf
xorb
bound
mov
mov
lret
mull
mov
loop
sub
push
xchg
add
imul
lock
xlat
sbb
jnp
loopne
xchg
cmpsl
mov
sub
sub
rcl
leave
inc
sub
mov
jbe
jp
imul
xor
mov
mov
cld
push
cld
cmp
sbb
inc
push
enter
pop
xlat
dec
rcr
inc
rol
pop
fcmovb
pop
cmc
dec
mov
aas
adc
dec
es
inc
mov
xchg
mov
scas
inc
push
out
dec
icebp
in
pop
sub
loope
pop
shll
xchg
loop
bound
mov
sahf
roll
mov
dec
mov
jmp
push
pop
adcb
inc
cld
adc
xor
imul
xor
pop
aad
jg
add
xor
inc
push
inc
popf
inc
xchg
nop
mov
fwait
jmp
mov
ljmp
je
push
mov
repnz
ret
dec
popa
jl
and
fs
cmpsl
negl
dec
xor
mov
dec
and
push
add
out
and
sbb
xchg
inc
xor
ds
call
sti
insl
push
inc
push
das
movsb
hlt
rorb
lock
lcall
cltd
out
mov
xchg
jle
insb
or
and
jl
jbe
xchg
out
cmp
mov
movsl
add
xchg
lahf
pop
std
jmp
test
xor
imul
mov
push
int3
and
mov
rep
xor
enter
xchg
and
cmpsl
out
pop
push
mov
pusha
aad
das
or
lds
mov
adc
scas
mov
in
lods
pop
popa
pop
sbb
data16
and
loop
ret
dec
add
pusha
dec
std
adc
sub
out
mov
jp
mov
dec
mov
mov
cli
push
push
lret
xchg
lret
dec
sbb
bound
aam
or
negb
addr16
inc
push
jbe
push
pop
push
inc
xchg
mov
nop
push
insb
dec
cli
add
cmp
cmp
dec
call
mov
repz
rcrb
xchg
insb
cmp
outsb
push
test
loop
stos
inc
jp
dec
mov
jmp
in
jle
jmp
dec
fldcw
cmp
pop
sbb
mov
ficomps
fcmovnb
pusha
lcall
push
and
mov
arpl
fisubl
lea
dec
sub
mov
dec
jb
sub
mov
aad
add
pop
imul
ret
mov
sub
inc
outsb
mov
jno
mov
inc
pop
push
mov
inc
int3
lock
dec
inc
adcb
data16
movsl
cmp
scas
ljmp
mov
cld
dec
mov
mov
dec
dec
in
push
dec
mov
fchs
cmp
jns
das
dec
lea
or
adc
mov
in
lock
iret
jmp
pop
xchg
sbb
insl
mul
cmc
nop
pop
inc
aad
push
insl
push
sbb
loopne
push
lret
pop
xchg
popf
nop
push
jle
xor
cli
es
pop
adc
inc
pop
pushf
mov
leave
and
mov
aaa
stos
loop
pop
cmp
xchg
fisttpll
dec
pushf
adc
inc
rcll
in
dec
push
lret
cmp
nopl
mov
mov
xchg
adc
and
add
subl
jbe
iret
push
insb
mov
xchg
mov
fs
dec
sub
cmp
pushf
jo
js
mov
dec
jmp
test
sbbb
loop
mov
dec
les
in
dec
clc
ja
mov
inc
sti
test
rorb
dec
dec
lods
and
outsb
imul
push
mov
dec
lret
pop
pop
xchg
mov
or
dec
mov
stos
dec
fwait
push
dec
arpl
mov
xor
movsb
mov
sub
inc
fcmove
lahf
cwtl
aam
xchg
loope
fs
dec
popf
push
dec
mov
jne
jl
mov
jmp
xchg
lea
jns
imul
inc
fsts
dec
push
adc
push
push
dec
dec
and
jbe
mov
sub
jno
loope
jg
lret
rcrb
add
adc
add
loope
or
mov
push
jb
sti
cltd
dec
aas
mov
dec
mov
out
into
je,pn
push
out
loope
test
push
jae
dec
sbb
hlt
loop
test
stos
dec
scas
jp
xchg
dec
fcomps
or
jns
inc
sub
jns
adcb
fdivrs
daa
sub
push
std
jmp
int3
scas
sbb
jp
xchg
push
inc
dec
dec
pop
jmp
and
fisubrl
cmp
jae
jns
add
inc
shll
xor
loope
add
sbb
out
push
ret
sbb
push
jae
cmp
pop
cmpsl
adc
daa
mov
lods
mov
cmpsb
xchg
cmp
movsb
fmul
add
rol
shrl
sub
push
cwtl
cmp
mov
cmp
incb
aad
pop
cmp
movsl
sti
cmp
pop
fisttps
sub
shl
ret
add
fs
lock
jp
mov
jno
sbb
xor
jp
mov
or
rolb
pop
jmp
jmp
clc
aad
enter
xlat
ret
dec
repz
addl
leave
popa
push
movsb
in
mov
pop
sbb
dec
ds
or
sarb
or
fucomi
data16
inc
lock
jl
sbb
nop
dec
das
sub
cmp
test
cmp
test
insl
pop
or
xchg
fisttpl
movsl
mov
hlt
stos
and
es
mov
dec
cmpsl
jmp
pop
fcoml
sbb
outsb
popf
dec
sub
pop
jno
sbb
push
dec
adc
aas
jmp
dec
pop
ss
jmp
mov
sbb
sbb
addr16
pusha
dec
and
ljmp
outsb
pushf
pop
lock
mov
std
xor
cmpsl
insl
std
jge
cwtl
adc
dec
out
jnp
push
into
cmp
mov
mov
adc
mov
jmp
inc
jmp
xchg
mov
test
dec
mov
cmp
lods
std
adc
sub
sbb
sar
pop
lods
or
mov
cmpsl
ds
fsub
pop
pop
dec
arpl
ja
shll
repnz
inc
sub
ret
pop
xchg
dec
mov
in
movl
sub
call
dec
push
pop
sub
dec
sub
mov
cmpsb
mov
push
lcall
pusha
cmpsb
adc
loope
dec
fdiv
ret
push
push
lret
cmpsl
sub
std
or
xor
pop
add
lds
adc
call
mov
mov
sub
inc
in
fimuls
fsubrs
push
add
sbb
dec
int
xchg
ds
aam
fwait
adc
inc
or
dec
ret
add
aaa
lods
dec
std
gs
push
pop
mov
cmp
or
inc
sub
xor
je
pop
insb
push
xchg
and
xchg
mov
xchg
mov
cmc
sub
add
xlat
push
or
mov
dec
cmp
pop
jle
lods
dec
daa
les
gs
lret
dec
pop
xchg
lock
sti
mov
sbb
push
inc
cmpsb
orb
daa
cmpsl
add
sub
dec
test
jmp
sbb
inc
mov
jo
dec
sbb
and
outsl
push
pop
ljmp
ficompl
inc
aad
push
dec
mov
ror
dec
push
mov
loop
into
fsubl
xor
dec
cmpsb
sub
test
subl
jp
inc
and
in
push
dec
sbb
pop
mov
shll
xorl
dec
add
dec
xor
addr16
xchg
subl
sti
dec
sbb
mov
loope
pop
dec
mov
test
mov
loope
sbb
add
push
pop
mov
in
adc
push
loope
aad
aaa
and
mov
cmp
daa
xor
jo
call
mov
orl
cli
mov
lret
les
or
in
fs
ss
push
popf
dec
mov
inc
lret
pop
rorl
cmpsb
dec
ds
xchg
jge
jb
cmp
adc
push
int
mov
dec
ficoml
sbb
arpl
dec
lret
aaa
xlat
or
mov
pop
push
jmp
xor
psubsw
jbe
clc
sub
sti
sbb
xchg
bound
add
cmp
leave
daa
inc
push
push
nop
and
sbb
addb
xchg
inc
imul
cmp
out
lods
rorb
sbb
lods
leave
addb
sbb
addl
leave
addb
jns
xor
cmpsl
sbb
xchg
mov
in
adc
les
sbb
push
cmp
flds
pop
scas
lret
inc
scas
xor
jecxz
jno
leave
push
adc
pop
xchg
fldcw
ja
dec
jbe
mov
mov
xorl
mov
xchg
push
stc
xchg
je
adc
cs
adc
mov
test
test
shrl
fisttpll
cmp
push
shrl
aas
into
push
xchg
and
dec
dec
push
or
xor
mov
jmp
adc
sub
stc
push
es
xor
sub
ret
arpl
push
dec
inc
int
sub
lds
push
mov
test
divl
mov
xlat
jmp
cmp
push
xchg
jle
mov
scas
sub
outsb
ret
insb
adc
repnz
rcll
and
jmp
sbb
push
test
fstps
mov
mov
arpl
and
dec
cmpsb
addr16
lret
in
int3
adc
ja
xchg
loop
xor
jno
xor
sub
jnp
out
subl
dec
loop
cmp
pop
lds
and
push
sbb
jno
cmp
mov
inc
push
cltd
add
push
fwait
xlat
jo
sbb
imulb
mov
aas
add
pop
jl
or
je
repnz
dec
cmp
add
ret
jp
stos
lods
inc
inc
jbe
test
sub
adc
rorl
in
mov
pop
and
test
push
and
mov
xchg
sub
bound
lsl
add
daa
lret
inc
push
bound
test
jne
push
pushf
mov
je
xor
cs
xor
mov
or
loopne
xchg
pop
cltd
xor
inc
repz
pop
inc
ficoml
mov
push
and
cmp
mov
pop
inc
fimuls
xor
in
pushf
iret
in
sub
mov
sbb
cmp
mov
and
dec
inc
push
cmp
xor
jle
out
xchg
mov
sbb
dec
inc
call
cmp
mov
jle
dec
je
dec
add
mov
movsb
or
dec
nop
inc
jnp
pop
cltd
inc
cltd
jmp
or
pushf
cmpsl
dec
cmp
push
mov
outsb
cmp
imul
lret
rolb
movsb
add
push
adc
in
fistl
push
add
ret
inc
sbb
mov
sbb
clc
mov
sbb
inc
mov
xchg
dec
lret
or
ljmp
sbbl
cmp
push
add
add
push
shlb
mov
sti
mov
pop
inc
push
push
xchg
es
sub
inc
mov
dec
jo
fadd
mov
mov
movsb
scas
into
js
cmp
jo
add
xchg
jb
insl
xchg
in
and
je
fiaddl
insb
inc
ds
sbb
fcompl
aad
jecxz
mov
mov
mov
mov
int
dec
xchg
shll
inc
dec
icebp
jp
cld
addb
dec
pop
xchg
push
pop
sbbb
or
mov
inc
or
and
xchg
push
repnz
repz
insb
ror
call
mov
outsb
pop
add
adc
imul
mov
and
pop
mov
push
in
clc
sahf
push
xchg
xor
push
xchg
mov
or
mov
shl
sub
mov
imul
cli
mov
loop
push
das
ds
rorl
mov
dec
enter
pop
push
std
xor
insl
adc
dec
adc
ret
adc
mov
ljmp
cmpb
inc
or
sbb
xlat
imul
cmp
into
xor
xor
xor
lahf
sbb
out
push
and
cmp
mov
lahf
loop
test
mov
pop
push
clc
iret
push
ficompl
mov
fmul
repz
out
dec
aad
lahf
sub
cltd
es
jmp
pop
dec
xor
dec
xchg
or
ljmp
lea
pop
data16
roll
int
sti
adc
inc
pop
divb
out
cmp
lcall
xchg
cs
in
inc
jl
outsl
jp
mov
ret
das
stc
icebp
pop
pop
dec
adc
cmc
popf
stos
sub
ret
jg
jnp
or
clc
pop
add
and
dec
int
pop
mov
sahf
dec
dec
clc
or
pop
out
dec
xor
popa
insb
xor
or
hlt
adc
jbe
imul
inc
push
inc
loope
mov
add
lret
cmp
add
cmp
inc
pop
xor
mov
nop
inc
mov
movsb
jp
mov
mov
xchg
into
mov
jle
jnp
cmp
ljmp
notb
test
pop
add
cmpsb
xchg
imul
insb
mov
popf
or
push
test
cli
push
insl
and
and
movsl
mov
dec
pusha
jmp
mov
xor
xchg
pop
cmp
push
inc
pushf
and
out
sahf
mov
fcoms
sbb
add
mov
mov
jl
push
jge
insl
inc
inc
test
cmpsl
arpl
push
test
cmp
jle
xchg
cmp
out
pop
jle
mov
sbb
xlat
dec
loopne
outsb
inc
test
mov
cmp
lods
push
or
mov
push
sub
call
add
jle
xor
movsl
out
sbb
dec
push
je
adc
sbb
xor
in
add
je
lds
in
cwtl
lods
cs
jb
and
sbb
mov
jmp
sub
or
jmp
cltd
in
xchg
sub
or
cmp
push
or
and
dec
lds
inc
sbb
pop
mov
add
mov
ljmp
push
dec
inc
aam
insl
mov
movsl
dec
divb
or
dec
enter
outsb
pop
ds
lret
cmpsb
inc
ret
jae
inc
xor
cmpxchg
sbb
leave
mov
sbb
ret
imul
test
or
cld
mov
or
sbb
imul
mov
ficompl
shlb
ret
cmp
pop
ss
jmp
mov
push
and
dec
repz
aad
cmpsb
arpl
shlb
add
dec
addb
and
xchg
lds
shlb
sub
push
movsb
out
roll
push
mov
dec
and
mov
xchg
push
mov
hlt
jmp
aam
pop
and
mov
js
xchg
test
cs
pop
xor
push
pop
xor
outsb
data16
or
sub
cmpsl
push
ret
cmp
pop
andl
mov
add
inc
cmp
mov
sbb
ret
mov
or
bound
test
jp
jle
mov
mov
jle
mov
sbb
std
out
cmp
cmp
mov
dec
pop
daa
mov
sbb
fs
scas
xchg
mov
pop
outsb
lahf
push
daa
add
mov
xlat
shrb
mov
lret
pop
mov
mov
in
cmp
leave
fs
and
lds
xor
inc
inc
je
add
dec
jle
pop
adc
pusha
mov
js
ds
dec
mov
lods
mov
jg
dec
les
jl
fldcw
xor
pop
ficoml
ret
ja
test
add
mov
dec
inc
pop
jle
aam
mov
sub
roll
push
xcrypt-ctr
cmpsl
pop
cmpsl
repnz
jle
push
and
jne
sub
jmp
inc
add
dec
cmpl
inc
shlb
or
loop
jle
pop
imul
dec
std
pop
iret
xchg
push
bound
or
out
test
test
sub
or
in
int
push
dec
sbb
jp
out
mov
push
xor
roll
and
push
int
xchg
testl
and
leave
call
arpl
ja
jo
cld
xchg
mov
mov
sbb
sub
push
int
jle
cmpsb
mov
xor
notb
sbb
jle
or
das
sub
push
sbb
fistps
push
aas
dec
sahf
lret
cmp
adc
testl
je
inc
dec
mov
sbb
sub
push
mov
inc
xchg
jg
dec
add
ret
push
or
dec
jnp
aam
add
mov
flds
xor
fwait
sub
fmuls
adc
lods
pop
outsl
xor
sbb
push
ficompl
rcrl
xorb
jns
imul
leave
mov
or
adc
lds
bound
cltd
dec
data16
mov
push
jge
cmpsl
icebp
jnp
jmp
fsubrs
fadds
push
dec
cltd
cmpsl
push
cmp
sbb
lods
cmpsl
adc
sub
call
fwait
xchg
or
push
call
fidivl
rcrl
call
imul
xchg
enter
lods
out
ja
lret
adc
pop
movsl
shl
sbb
enter
out
imul
into
fs
mov
pop
inc
fiaddl
mov
lret
sarl
sbb
mov
into
jmp
xchg
pop
inc
mov
lea
dec
clc
jb
jne
push
push
lods
mov
sub
adc
mov
test
sti
or
and
push
jae
icebp
dec
cli
pop
mov
movsb
push
addb
sub
add
mov
ret
shl
inc
mov
mov
sahf
das
sbb
js
jle
xchg
pop
aas
jge
daa
fstpl
divl
insl
push
push
cmp
dec
gs
fisttps
xor
add
arpl
js
push
adc
dec
lahf
insl
sahf
xor
ja
cmpsl
add
pop
sbb
pop
fdivr
lea
jmp
cwtl
jne
inc
stc
clc
cli
or
pusha
xchg
lea
mov
dec
mov
xor
in
jo
mov
pop
inc
mov
scas
and
dec
mov
push
xchg
ret
cmc
mov
push
dec
lret
xor
adc
xor
das
or
mull
leave
cmp
xor
cmp
pop
jb
test
mov
fisubl
sarl
sbb
jle
mov
out
pop
inc
inc
or
icebp
mov
add
sbb
adc
or
loopne
adc
pop
shll
push
cwtl
insl
fwait
pop
vpmaxub
arpl
mov
xor
test
pop
xchg
lods
xor
jno
push
mov
out
cmp
push
push
and
test
jne
xchg
js
mov
mov
dec
ret
mov
adc
fldcw
int3
cmp
enter
outsl
pusha
fdivrl
or
jnp
xchg
es
out
mov
push
or
jg
mov
adc
adc
loopne
mov
ds
cmc
rorb
sahf
sbb
jle
test
rcrl
adcb
or
test
addb
mov
cmp
fxch
fisubl
lret
sbb
push
mov
dec
nop
mov
pop
xor
mov
sub
test
cmp
add
lds
sbb
xor
or
outsl
mov
pop
xchg
in
sub
push
in
imul
jmp
cmpsl
ficomps
push
loopne
pop
mov
jnp
rcrb
not
sbb
pop
mov
inc
cmp
sbbl
inc
sub
sbb
jbe
lea
jmp
jmp
lahf
repnz
sub
add
jbe
cmp
pop
sbbb
mov
enter
clc
lret
test
dec
test
mov
mov
xchg
stos
imulb
subb
and
mov
out
int
add
mov
fs
mov
adc
loop
jnp
test
lods
add
xchg
sbb
sbb
jmp
mov
fiaddl
and
mov
mov
sub
int3
andl
cmpsb
jecxz
or
push
int3
push
mov
icebp
mov
std
call
xchg
ljmp
bswap
lods
push
movsl
xlat
or
mov
adc
mov
mov
xor
add
pop
test
push
cmp
inc
jge
pusha
pop
dec
aas
push
imul
popa
lret
fnsave
mov
jmp
mov
mov
xchg
mov
loope
sub
lahf
push
pop
xchg
outsl
inc
inc
mov
bound
addl
mov
jp
push
sbb
dec
enter
aas
xchg
sub
pop
xchg
sar
adc
jbe
cmpsb
xor
xchg
bound
imul
and
jecxz
dec
push
loopne
adc
call
pop
push
scas
sbb
iret
inc
dec
or
xchg
push
mov
cs
mov
jl
pusha
cmpsb
fwait
call
push
lods
adc
add
xchg
inc
leave
jmp
or
and
mov
adcb
ffreep
add
xor
and
xchg
jmp
test
xor
inc
or
icebp
stc
push
das
xchg
inc
cmp
add
mov
jp
jae
pop
mov
xor
mov
insb
xor
dec
leave
stc
and
lods
xor
repz
mov
pop
pop
inc
push
xchg
sbb
or
jl
adc
in
or
andb
add
mov
je
or
pop
rcrl
hlt
push
fcomip
out
shll
xchg
sti
jge
lahf
xchg
andl
mov
xor
mov
inc
inc
jne
dec
inc
cmc
jmp
mov
or
mov
or
xor
adc
mov
adc
sbb
sahf
testl
in
or
mulb
push
mov
das
and
sub
stos
test
mov
add
test
xchg
sbb
add
stos
or
pop
test
xor
clc
cmp
adc
cmp
and
adc
dec
dec
test
adc
iret
fwait
xchg
ss
into
mov
clc
jnp
test
jbe
cltd
mov
insb
mov
xchg
dec
roll
cmpsl
loopne
fiadds
mov
ret
add
dec
ret
ja
inc
popf
lret
lock
inc
imul
jmp
test
pusha
add
mov
add
fdivr
sbb
jnp
insl
nop
fsubs
les
int3
inc
push
push
loopne
mov
or
daa
rcrb
mov
dec
xor
dec
pusha
bound
ljmp
or
pop
and
pusha
ds
mov
jl
inc
int3
pop
stc
cwtl
leave
pop
cmpsb
into
ficompl
clc
ret
push
xor
lahf
xor
xchg
add
jle
mov
cmp
push
imul
mov
adc
gs
in
lret
dec
pusha
xchg
int
mov
cmp
movsb
lds
pop
sub
cs
ja
mov
movsl
sub
cmc
and
hlt
stos
subl
push
mov
lahf
add
pop
push
mov
fwait
cli
jmp
cmp
fisttpll
and
jg
pop
or
ja
cld
pop
and
push
arpl
cwtl
adc
xor
sti
pushf
lea
jle
mov
xchg
cmpb
out
test
lds
popa
xlat
out
jg
fdivrl
push
into
shl
push
sub
push
loopne
shlb
ret
pop
mov
pop
xlat
pop
and
mov
sbb
clc
pop
loop
xor
jae
push
lock
pop
add
sti
xchg
sub
jle
jo
mov
aam
jle
mov
cmp
idivb
jb
inc
repz
insl
dec
jmp
or
dec
das
pop
lds
aad
sub
sbb
imulb
adc
xor
fistpll
dec
testw
sbb
jnp
push
testl
dec
lret
outsl
and
mov
mov
xor
push
mov
mov
ja
xor
dec
pop
dec
fstpt
push
sbb
test
icebp
ja
mov
jmp
mov
cli
xor
dec
addr16
fisubs
fsubr
leave
or
dec
ror
mov
add
or
imul
imull
jne
mov
add
jnp
inc
add
into
dec
sbb
cwtl
sbb
jmp
pop
cltd
cld
jmp
push
jecxz
stos
leave
mov
push
in
inc
jp
dec
mov
dec
pop
out
imul
mov
pop
adc
xchg
xor
dec
cmc
pop
sbb
dec
fisttpll
test
sbb
andb
in
mov
rorl
cli
push
jmp
dec
aaa
mov
jl
jmp
adc
pop
push
jp
dec
jmp
popa
jne
popf
jecxz
mov
fcomip
jle
xchg
push
mov
sbb
sub
ret
mov
mov
rcrl
sub
cmp
mov
or
test
dec
adc
add
push
nop
or
mov
out
inc
cmp
xor
jmp
pop
adcl
es
or
cmc
xchg
sbb
insb
lods
mov
dec
lcall
and
sbb
and
stos
aaa
movsb
inc
int3
movlps
dec
and
xor
lcall
fsts
mov
sub
mov
sub
cwtl
jge
and
xor
push
inc
dec
int
mov
insl
ret
dec
add
daa
addl
dec
jne
faddl
dec
lds
pop
outsb
dec
cs
cmp
inc
sub
rcr
mov
lret
fwait
mov
xchg
int
cmp
dec
add
dec
sub
add
aad
imul
sub
cmpsl
mov
out
sub
cmp
scas
rcr
dec
push
aad
sub
push
inc
xchg
mov
cmp
dec
leave
inc
lret
mov
add
dec
mov
pop
dec
and
mov
subl
fs
mov
dec
adc
mov
dec
cltd
push
inc
pusha
dec
jo
and
pop
dec
inc
dec
or
mov
add
or
mov
movl
popa
ljmp
sbb
ss
add
mull
mov
xchg
pop
sbb
inc
sub
sar
pop
pcmpeqb
clc
add
adc
adc
out
imul
mov
test
sub
lahf
mov
out
push
loopne
dec
dec
aad
loope
insb
cmp
push
frstor
rcll
pop
push
lcall
adc
leave
sbbb
add
je
bound
loope
lock
aas
test
pusha
fs
or
sbb
dec
and
js
dec
fs
imul
test
rcrb
out
or
nop
mov
in
dec
pop
mov
cmc
in
jo
imul
and
cwtl
adc
mov
push
sarl
imul
xchg
pop
add
stos
stos
xchg
dec
orps
aam
pop
fsubrp
dec
into
popa
inc
push
js
leave
movsb
int3
fcoml
add
sti
dec
sbb
and
dec
mov
mov
push
pop
dec
popa
xor
mov
mov
push
cmpsb
push
pop
sub
ja
and
pop
dec
fcom
mov
jae
or
xchg
fwait
jmp
dec
cmp
or
lcall
pop
inc
mov
es
js
push
mov
sub
rep
dec
pop
xor
insb
in
mov
leave
xchg
dec
jb
pusha
in
sbbl
imul
push
out
dec
jmp
mov
push
rorb
mov
arpl
xchg
std
sbb
inc
sub
js
imul
dec
pop
and
jno
loop
dec
inc
pop
inc
dec
push
enter
gs
imul
push
nop
push
sbbb
pop
xchg
xchg
pop
jbe
mov
jno
cwtl
shl
dec
movsb
repnz
dec
lahf
sub
push
pop
xchg
inc
into
dec
aam
sub
push
rcr
mov
and
je
scas
cmp
rcrl
dec
sub
and
lcall
mov
mov
push
repnz
ret
pop
dec
xor
lods
jmp
scas
cltd
adc
in
ret
xchg
jae
imull
lds
adc
sbb
pop
add
and
leave
outsb
push
pop
mov
lock
push
sbb
jbe
rol
stos
inc
mov
dec
inc
push
xor
or
ss
jnp
push
loope
mov
mov
jecxz
outsl
adc
pop
and
outsb
jmp
out
dec
movl
sti
aaa
addr16
pop
dec
stos
ss
xchg
and
inc
nop
mov
push
dec
xor
inc
inc
dec
lea
adc
or
jge
aaa
xchg
adc
inc
cmp
mov
lcall
xlat
fisttpl
lods
loope
mov
mov
stos
cmp
cmp
dec
inc
nop
mov
mov
dec
ss
dec
fiaddl
adc
pop
dec
xor
mov
and
cmpsb
ret
jmp
jg
pop
ror
sbbl
push
mov
sub
inc
faddl
mov
mov
ret
push
lock
or
imul
mov
jns
push
in
dec
pop
pop
imul
sbb
xor
cmc
dec
xor
pop
dec
and
int3
imul
dec
enter
jle
dec
rorb
sbb
push
ss
cs
jmp
cmc
adc
je
pop
dec
inc
aam
dec
lret
or
push
xchg
mov
cmp
or
aas
jno
cwtl
sbb
int3
leave
dec
jg
scas
std
pop
das
stc
inc
mov
ret
scas
push
push
sbb
nop
mov
arpl
dec
test
mov
adc
insl
mov
and
test
in
fisttps
cmc
and
xor
sub
inc
mov
cltd
cs
ja
xchg
pusha
decl
das
mov
dec
lret
sub
call
arpl
dec
or
xchg
mov
dec
movsl
pop
add
cmp
ljmp
cmp
sub
std
loopne
pop
adc
movsl
inc
in
cmp
in
jmp
das
ret
imul
pop
pop
push
push
in
stos
lock
xchg
cmp
aaa
or
dec
js
repnz
addr16
or
or
mov
int3
js
and
inc
xchg
pop
push
lds
cwtl
xchg
lea
or
test
inc
push
fprem
mov
fsubrl
cmc
aaa
daa
cli
sub
insl
imul
lock
sbb
mov
push
fidivrl
sahf
push
and
dec
push
mov
lret
lds
mov
inc
jne
inc
testb
or
cmp
inc
pop
pushf
mov
mov
mov
push
leave
add
or
xor
imul
loope
jae
cmp
cmp
xor
add
clc
dec
inc
jecxz
fsts
push
scas
loop
xor
in
mov
out
or
pop
add
pop
dec
ljmp
jbe
jp
mov
sti
push
and
pop
test
push
xchg
mov
lret
dec
push
adc
daa
add
insb
cmc
cmp
bound
int3
data16
sahf
bound
pop
lret
jne
xor
enter
cmp
ficomps
sbb
mov
inc
push
mov
jg
mov
scas
jl
sub
es
jne
lret
mov
ja,pt
psubsw
into
fcomps
es
xor
jmp
pop
rcrb
dec
push
popw
jo
mov
outsl
stc
aaa
mov
shll
sub
mov
push
xchg
clc
and
stos
scas
inc
push
xor
push
ret
push
std
add
call
inc
jle
xor
adc
sub
outsb
cmpsl
add
jg
cli
je
mov
dec
or
cmp
jb
inc
cmpsl
loope
cmp
xor
push
insb
out
or
kmovd
in
add
pop
icebp
xchg
or
mov
call
in
adc
inc
mov
addr16
xor
push
jp
inc
stc
lret
clc
cli
cmpsl
push
jle
jbe
les
jbe
bound
add
mov
mov
pop
mov
popa
pop
xchg
mov
leave
mov
ljmp
mov
test
push
std
hlt
add
pop
jle
jl
je
sbb
clc
jo
in
sbb
inc
mov
jns
add
xchg
push
leave
cmc
xchg
fldcw
fdivr
insl
cmp
jnp
dec
movsb
mov
insb
stc
xor
add
adc
mov
in
in
lods
pop
call
pop
in
outsl
filds
test
into
mov
mov
call
push
ja
mov
mov
and
cmp
jg
loope
jmp
adc
or
rcl
pop
lods
or
jae
or
adc
cmp
mov
mov
pushf
add
cmp
pop
add
stos
mov
orl
or
in
jno
lret
aam
inc
shr
testl
rdtsc
push
sub
jecxz
pop
in
imul
loop
jbe
push
outsl
nop
sbb
inc
rorb
out
xor
repz
jmp
add
inc
mov
clc
or
sbb
mov
out
fistpl
xor
or
adc
sbb
jge
adc
dec
pop
mov
xor
icebp
arpl
outsl
pop
inc
or
jb
cmp
scas
pusha
jle
sub
loope
outsb
addr16
jl
dec
je
pusha
loopne
pop
xor
pop
and
xchg
add
cmpsl
ret
hlt
movzwl
mov
paddw
lods
ljmp
test
add
and
or
push
loope
xor
dec
out
or
mov
push
bound
leave
push
aas
cmc
push
mov
add
xor
mov
dec
mov
jo
pop
and
daa
rorl
loope
sbb
addb
lods
out
dec
mov
or
xor
call
ss
enter
pusha
popf
push
imul
lret
jecxz
jb
cmp
or
mov
ficoms
jle
inc
enter
popa
insb
mov
cld
shl
pop
mov
add
incb
pop
inc
adc
iret
idivl
xor
push
sbb
inc
lock
inc
pop
jbe
jg
adc
filds
adc
and
inc
jle
or
xor
popf
sbb
andb
movsl
stc
adc
test
mov
mov
loopne
sbb
pop
mov
pop
test
dec
xor
roll
inc
test
lret
lds
fmuls
sub
insl
repz
je
imul
or
rorb
xlat
dec
mov
push
mov
fildl
push
or
insl
xchg
jmp
inc
pop
fwait
sarb
or
push
mov
pop
gs
into
sbb
jle
sbb
push
mov
cmp
pop
out
sub
adc
pop
sbb
scas
pushf
leave
xor
push
sbb
sbb
ss
push
adc
faddp
fisubs
test
test
into
sbb
pop
jb
jae
jecxz
jp
and
cmp
push
cltd
add
jnp
jnp
call
mov
sub
cmp
jge
dec
mov
mov
rcrb
sub
rol
mov
mov
cltd
cmp
aam
notl
mov
scas
mov
adc
and
jp
mov
cmpsl
fimull
inc
and
dec
xor
or
or
pop
aaa
adc
std
fnstenv
popl
das
push
leave
stos
stos
hlt
pushaw
inc
sbb
push
xor
fwait
lret
aaa
je
mov
out
xor
outsb
sub
rcll
add
inc
mov
int
test
add
push
addl
pop
adc
lods
pop
sub
lock
leave
mov
insl
cmp
xchg
xchg
lcall
xor
lods
ret
adc
and
and
out
adc
push
dec
fnstsw
jle
push
out
jl
lods
dec
inc
popa
ret
jle
and
xor
push
and
xchg
or
cmpsb
loopne
aaa
ret
sbb
or
call
sbb
xor
cmpsb
xchg
xor
aad
lret
fmuls
lods
xchg
jae
stc
enter
mov
push
push
dec
jo
ficompl
aas
test
push
inc
add
pop
xchg
sbbb
jnp
add
bound
push
dec
pop
mov
cmp
hlt
xchg
xchg
fadds
clc
cli
call
fcoms
adc
jle
ret
xorb
repz
leave
mov
mov
loop
mov
fxch
jae
push
or
mov
adc
lock
add
ss
adc
inc
mov
adc
and
lods
pop
stc
lea
shl
dec
test
inc
iret
push
xchg
fisttpll
xor
jg
aaa
scas
push
cmc
or
cmp
jb
inc
mov
or
and
fisubl
push
push
fdivrs
dec
loopne
ds
call
pushf
add
jmp
mov
jle
jns
cmpl
std
pop
mov
cld
cmp
das
mov
sbb
sbb
xchg
jbe
out
mov
fnsave
fs
or
xchg
int3
je
or
xchg
rorb
inc
mov
mov
mov
inc
add
out
xor
dec
in
inc
clc
adc
negl
dec
leave
mov
sub
in
gs
cmc
dec
add
inc
xor
and
and
in
scas
icebp
mov
mov
insb
pop
shlb
cmp
xchg
out
xchg
sbb
dec
inc
lds
lahf
insb
arpl
insl
inc
push
jne
dec
dec
pop
jae
push
sbb
jp
mov
or
negb
push
imul
notb
rcrb
enter
fs
scas
js
xchg
popa
gs
int
jmp
xor
ljmp
or
mov
mov
xor
pusha
ret
jl
jae
pop
mov
push
std
sbb
jp
fidivrl
mov
push
push
xor
inc
sub
cltd
shll
mov
mov
pop
mov
xor
mov
dec
lds
insb
aam
mov
lret
pop
sti
shlb
fwait
push
fidivrl
pop
xchg
cmp
mov
movsl
pop
push
pop
mov
mov
rclb
ljmp
hlt
xor
out
cmp
popf
test
pusha
ret
out
add
int3
leave
inc
push
jp
testb
xor
jae
sbb
dec
mov
jp
dec
ret
inc
ror
sub
sbb
mov
sahf
popa
cmpsb
cs
dec
jmp
mov
inc
into
mov
scas
push
mov
ja
lret
into
bound
sbb
popa
cmp
lret
xchg
in
rclb
mov
jmp
push
jp
lock
push
pop
mull
inc
xchg
and
inc
nop
sub
push
push
mov
sbb
cmp
dec
iret
out
lret
mov
lods
jp
mov
mov
inc
not
gs
pop
mov
jb
jle
push
jle
jecxz
jae
xor
arpl
push
push
notl
xorl
cli
inc
pusha
mov
add
jle
add
pop
adc
cmp
in
clc
dec
xor
or
jne
and
data16
aam
call
xchg
and
inc
xor
inc
ficoml
cmpsl
imull
cmp
bound
scas
in
data16
int
mov
mov
outsb
shrb
mov
das
jno
inc
jl
call
lcall
push
sbbb
cmpb
aad
dec
out
jb
jl
mov
mov
jnp
mov
adc
cmpsb
test
push
mov
mov
test
flds
movsb
mov
dec
dec
mov
insl
inc
aam
subl
xchg
mov
fs
inc
or
adc
sbb
mov
sbb
leave
pop
ret
lea
xor
leave
xor
rdpmc
out
cmc
out
lahf
loopne
xor
sub
insb
push
xchg
add
sbb
pop
push
jns
mov
hlt
fmuls
xor
loopne
cld
loopne
dec
push
mov
addl
inc
mov
inc
jl
mov
push
call
adc
mov
mov
outsb
xor
orb
inc
icebp
cli
movsl
out
xchg
pop
dec
and
xor
xor
sub
les
mov
lds
es
enter
test
inc
arpl
jl
stos
inc
imul
data16
add
and
lret
adc
pop
adc
fiadds
ja
xchg
lcall
popa
xor
mov
inc
lock
sbb
pop
es
repz
cmpsl
jnp
cvtpi2ps
aaa
add
add
jnp
das
push
sahf
push
int
int3
push
int3
test
xor
dec
cmp
and
mov
outsb
test
imul
xchg
fstps
imul
jno
add
mov
int3
push
sub
aad
and
cmp
imul
add
fsubrl
lds
sbb
stos
mov
les
jl
xchg
mov
pop
test
scas
repnz
sub
push
rcrb
jnp
test
arpl
lods
sar
in
sti
xchg
add
test
scas
or
fucomip
push
sahf
sub
xor
jecxz
stos
ja
lods
dec
xlat
xchg
sbb
dec
xor
ret
pop
outsb
jae
jno
movsb
lret
or
adc
imul
mov
or
xor
xchg
aad
jle
push
or
jns
adc
ret
test
in
loop
lcall
cmp
fistps
roll
loope
adc
ljmp
or
pusha
jbe
pinsrw
mov
cmc
rorl
fcoml
sbb
pop
inc
inc
cmpsb
dec
lods
sbb
xchg
es
or
in
ja
div
jecxz
fcomps
inc
xor
fwait
push
aas
mov
test
mov
or
sub
test
repnz
int3
fnstsw
iret
dec
int
mov
sbb
loop
rcrl
inc
push
lock
pop
dec
dec
cltd
testb
mov
jge
pop
nop
testb
lds
sbb
leave
inc
ljmp
add
push
aas
pushf
sbb
lea
lods
fadd
mov
repz
in
push
push
xor
scas
push
mov
xor
pushf
ret
les
cwtl
pushf
mov
fadd
inc
mov
fistps
ja
mov
pop
xor
mov
ds
mov
or
mov
push
inc
filds
or
and
jne
adc
mov
int3
fnstcw
leave
cmp
test
pop
and
call
xor
aaa
imul
outsl
sub
push
pop
jb
and
lds
jmp
movsl
ss
xor
sub
lods
cmpsl
mov
mov
jb
dec
jmp
imul
jbe
rcl
loope
xlat
cmp
mov
fcomps
mov
imul
xchg
cmp
inc
sub
dec
or
pusha
adc
xchg
in
xchg
mov
dec
adc
xchg
xor
call
mov
out
dec
sahf
into
les
jo
push
sub
lahf
dec
mov
mov
cmpb
dec
pop
add
dec
xor
sub
dec
dec
lret
adc
aad
mov
sub
sub
push
sub
mov
adc
jl
pop
xlat
scas
mov
test
repz
jl
dec
sub
mov
lret
fidivs
fstpl
sahf
adc
dec
adc
mov
mov
push
sbb
xchg
and
out
mov
pop
rolb
or
or
and
incb
sbb
jo
dec
aaa
std
dec
pushf
lea
outsb
scas
mov
and
mov
sbbb
pusha
hlt
or
rcrl
aas
inc
in
imul
or
out
and
fcompl
dec
pusha
jno
mov
dec
icebp
push
xchg
sbb
add
sub
mov
cli
rcll
sub
stos
sbb
mov
dec
add
adc
jb
scas
mov
arpl
out
inc
insb
outsb
scas
push
pop
cld
clc
pop
xchg
mov
aam
add
push
push
xlat
daa
lahf
dec
push
loop
clc
test
push
dec
adc
ficomps
push
xchg
dec
std
jne
mov
lret
js
and
jmp
fucomip
add
xchg
or
loop
mov
pop
or
dec
fcomps
sbb
xchg
out
in
inc
mov
dec
call
test
sub
mov
test
into
dec
or
or
adc
icebp
dec
imul
out
dec
inc
pop
inc
ret
push
movsl
dec
je
sub
imul
pop
mov
xchg
cmp
scas
stos
ljmp
ss
pop
jbe
dec
xor
cmc
or
push
repz
mov
sbb
inc
daa
push
add
sbb
push
jmp
cmp
dec
mov
cmpb
xchg
push
push
popf
xor
dec
mov
in
mov
bound
sbb
push
push
inc
into
inc
cs
stos
jle
dec
pop
out
cmp
pop
rorb
cmp
xchg
pop
dec
loopne
mov
in
ret
in
data16
xor
imul
push
enter
dec
push
int
mov
dec
xchg
push
ds
inc
insb
aad
in
js
jae
cmpsl
pop
dec
inc
scas
cmp
cmp
dec
and
inc
rorl
into
sahf
mov
dec
cmpsb
mov
insl
dec
cmpl
orl
lods
test
dec
lock
fs
add
icebp
int3
dec
adc
xchg
mov
int3
ficompl
or
cmp
div
push
dec
call
inc
push
pusha
mov
popf
shrl
es
scas
inc
loop
mov
cmp
jle
fiaddl
shlb
nop
sub
pop
push
xchg
out
add
mov
in
push
xor
add
jnp
or
call
loopne
lods
xchg
cmpl
leave
xchg
cwtl
cmpsl
incb
gs
add
xor
push
call
push
push
or
fisubs
mov
leave
lcall
cwtl
adc
imul
in
hlt
test
ja
icebp
mov
adc
aad
pop
ficompl
pop
std
xor
imul
arpl
inc
jp
fcmove
cmp
dec
ret
xchg
push
loop
inc
dec
or
cmp
add
ds
push
inc
mov
mov
dec
inc
clc
mov
inc
fwait
dec
frstor
ret
aam
jmp
pop
cltd
adc
inc
lods
outsb
xchg
mov
clc
xor
add
fwait
dec
mov
outsl
jae
fcompl
mov
xchg
add
jge
add
add
xor
xchg
cmp
or
or
xor
cmp
mov
dec
jecxz
mov
pop
test
or
into
cmpsl
aad
xlat
pop
inc
sub
mov
testl
mov
dec
repnz
les
mov
fsubs
xchg
rclb
or
mov
imul
mov
test
push
lea
xchg
cmpsl
xor
push
adc
in
jb
ja
test
push
mov
pop
hlt
inc
inc
leave
cmp
push
mov
ljmp
inc
fldt
and
jecxz
xchg
or
cmp
or
sub
popa
or
or
add
test
dec
cmp
aad
mov
cwtl
mov
add
imul
je
mov
out
or
xor
push
mov
or
lods
rcl
mov
jbe
cmp
sub
jmp
out
mov
lret
lods
lret
dec
out
xchg
sbb
cmp
mov
cli
sbb
inc
enter
xor
stos
inc
aam
mov
or
push
inc
xor
sahf
jl
fwait
sahf
push
or
xor
jl
je
cmp
xor
cmpsl
addr16
jnp
push
out
cmpsb
jg
fcmovb
pop
ret
pop
jnp
mov
ljmp
inc
pusha
dec
mov
push
push
jecxz
int
cmp
fiaddl
xor
xor
mov
pop
faddp
adc
test
repz
push
dec
daa
addr16
mov
inc
sub
data16
std
pop
or
fstl
pop
ss
dec
cmpsl
repz
inc
cltd
xchg
inc
popa
dec
inc
push
into
pop
lret
dec
rcr
add
shr
sub
loopne
dec
aam
insl
lahf
enter
sub
mov
pop
or
dec
data16
mov
or
cmpsb
imull
jae
inc
xchg
push
mov
jmp
jne
push
inc
or
xchg
dec
push
dec
adc
pop
gs
in
xlat
data16
push
pop
xchg
pop
push
addb
and
test
scas
lahf
daa
push
push
fs
mov
inc
push
dec
add
adc
dec
jecxz
loopne
push
mov
iret
imul
adcb
dec
dec
pop
and
sbb
sub
fwait
dec
leave
sbb
pop
pop
dec
ss
xchg
sub
inc
leave
adc
and
aas
call
or
push
test
mov
or
scas
push
rcrb
mov
jmp
lods
ja
aam
orb
inc
mov
ret
jmp
lcall
fsubl
outsb
mov
xlat
mov
xor
cmp
cmp
push
dec
adc
in
mov
and
dec
fisttpll
fistl
leave
scas
loope
nop
ror
pop
adc
shrl
dec
mov
in
out
mov
lcall
mov
loopne
sbb
scas
out
call
push
and
imul
push
lds
imul
or
ja
sbbl
push
push
xchg
test
lcall
popa
jmp
add
dec
mov
rorb
dec
dec
pop
xchg
pop
aam
jmp
push
dec
divl
jp
out
out
testl
and
popaw
xchg
sbb
sbb
push
into
lods
cmpb
in
test
mov
mov
ret
jno
xor
adc
fmulp
pop
push
inc
sub
pop
add
les
inc
push
inc
lods
inc
das
lahf
lds
gs
pop
lahf
push
ljmp
loopne
push
outsb
lret
das
or
inc
addb
pop
jp
push
xorb
iret
out
lods
push
fisubl
inc
adc
jl
in
jl
jbe
fistps
jnp
or
cmp
call
ja
ret
es
movb
pop
xchg
sub
daa
lahf
sbb
adc
adc
fistl
sbb
or
das
loopne
or
sahf
push
lods
aad
push
in
fs
out
jns
stos
enter
sbb
cld
fucomip
fcmove
inc
add
push
movsb
mov
inc
shlb
filds
sbb
dec
add
imul
cmp
jmp
xchg
mov
sarb
xchg
adc
xchg
mov
sbb
outsl
inc
dec
cmpsl
xor
mov
lods
call
in
addl
sarl
or
dec
lahf
or
outsl
sbb
ret
inc
pusha
jp
test
adc
rclb
jge
push
xchg
xadd
es
bound
cld
sbb
aad
dec
jo
into
mov
repnz
inc
call
mov
add
movsb
sbb
xchg
sub
stc
shlb
pop
pop
xor
pop
fstpt
addl
add
jmp
fsubr
fbstp
jnp
adc
ss
lret
enter
sarl
push
pop
xor
arpl
lods
dec
xchg
adc
call
xor
pop
sarl
andb
mov
jg
leave
jbe
and
xor
push
lods
loope
mov
inc
fdiv
xor
clc
push
mov
pop
sarb
dec
dec
push
dec
mov
mov
cmp
or
dec
sub
enter
jg
in
leave
pop
addl
mov
push
popa
je
shrl
push
cmp
add
jg
mov
das
xor
mov
mov
sarl
sbb
leave
inc
dec
push
adc
push
hlt
xchg
xchg
push
push
ss
lods
push
and
imul
add
frstor
sub
outsl
mov
mov
mov
jecxz
movl
ljmp
sub
adc
pop
inc
sahf
sarb
fisubl
pop
pop
and
adc
popa
xor
push
mov
mov
push
rolb
push
xlat
dec
xor
sbbb
ljmp
loop
cs
fsqrt
stos
movl
jp
jne
or
loope
jbe
imul
inc
popf
cmp
cltd
loopne
xchg
nop
push
jmp
mov
in
xor
mov
add
fldenv
adc
push
xor
out
sub
pop
dec
mov
xchg
out
psubusw
sbb
nop
test
pop
mov
mov
scas
clc
mov
xor
iret
jae
push
mov
cmp
sbb
pop
insb
insl
leave
fnstcw
adc
sbb
mov
leave
iret
add
cmp
fs
call
ret
sti
mov
jmp
loop
push
int3
and
popf
push
dec
dec
pop
xor
fmuls
fisubrl
iret
jle
andb
cmpsl
lret
mov
dec
push
jge
xor
jl
push
inc
mov
push
daa
xor
push
cmp
insb
xlat
pop
xchg
push
test
es
dec
test
sbb
jb
push
pop
in
inc
call
movl
out
imul
test
jnp
pop
adc
fstps
lret
loope
push
jmp
cmpsb
pushf
iret
mov
xchg
out
pop
loop
adc
in
fisubrs
or
jmp
pop
sub
sbb
in
leave
inc
jae
xor
imul
mov
arpl
cmpsl
shll
sbb
push
stos
cli
lcall
dec
test
xchg
jnp
add
adc
push
sbb
or
fidivs
gs
sub
mov
pusha
loop
aad
add
test
mov
jae
iret
pop
pop
test
push
add
sbb
push
mov
fcomps
test
sub
and
scas
mov
int3
popf
mov
pop
sar
sahf
dec
stos
add
call
xchg
aaa
fdiv
ljmp
test
mov
std
sbb
sub
cs
and
jae
sub
outsb
fsubrl
and
pop
inc
pop
jmp
enter
xor
push
icebp
ds
bound
or
fcmovnbe
shl
sbb
mov
rorl
mov
cmp
xor
dec
pop
cmpsl
out
pop
mov
fwait
in
xchg
shlb
loop
sub
outsb
aam
stc
push
mov
or
leave
ret
and
push
arpl
addl
push
cwtl
call
jl
push
subl
fs
jge
shl
bound
pop
or
cmp
popf
movsl
xor
test
cmp
pop
enter
push
jae
loopne
adc
xchg
xchg
faddl
dec
add
imul
ss
adc
mov
xchg
cmp
in
adc
cmp
mov
int3
jae
dec
push
aaa
adc
sbb
pop
sub
test
mov
push
fs
push
sbb
mov
data16
inc
fisubrl
repnz
popf
push
push
push
loopne
hlt
pop
insb
enter
xchg
stos
pop
jmp
adc
dec
push
or
fisubl
arpl
aas
clc
push
push
mov
pop
mov
or
jle
mov
xor
add
mov
pop
push
bound
xor
xor
insl
fwait
pushf
fcomps
lahf
imul
pop
and
sbb
sub
sti
pusha
aad
pop
mov
test
mov
push
xor
imul
mov
add
dec
loop
xor
cmpsl
xchg
jae
inc
or
cli
insl
pop
sbb
push
sbb
sub
dec
mov
inc
mov
push
loopne
sub
push
cmpsl
mov
dec
sub
mov
xor
add
dec
ja
xchg
push
iret
les
stc
dec
mov
popf
jl
outsb
pop
ss
mov
push
push
pushf
sub
add
mov
xor
in
in
loopne
out
push
lret
inc
mov
xchg
rorl
and
adc
adc
mov
push
push
mov
jp
dec
add
mov
cmp
movsb
pop
sbb
cmpl
ret
aas
sti
sub
mov
sbb
sub
jge,pt
cmp
or
cmc
add
cmp
xor
sti
push
xchg
jp
dec
imul
cmp
pop
lods
jge
aad
lods
mov
outsb
ffreep
ret
fidivrl
scas
xor
mov
out
dec
sbb
call
loope
sub
loopne
jecxz
dec
lock
rcr
fidivs
sahf
push
out
aaa
lret
push
jge
mov
in
std
pop
loop
lds
enter
imull
cmp
dec
inc
cmp
ljmp
mov
ret
mov
jle
pop
aas
stc
xor
pop
lods
add
jg
test
shll
mov
insb
into
dec
inc
mov
cmp
push
dec
shrl
inc
and
mov
rcl
cmp
rcrl
pushf
int3
mov
stos
pop
xor
mov
sub
call
or
xchg
jns
jmp
sbb
pop
mov
adc
negb
bound
int
fistps
jns
in
mov
mov
rclb
mov
ds
bound
pop
stos
xor
mov
stc
call
das
and
sub
ja
test
mov
rcrl
pop
andl
inc
inc
mov
inc
lods
dec
jbe
push
inc
pop
cmpsl
fstl
mov
xor
mov
and
ja
dec
xchg
and
mov
inc
aaa
push
push
stos
push
mov
pop
push
lods
push
sbb
inc
inc
testb
loop
inc
and
and
dec
mov
lahf
divl
cmp
repz
inc
add
sub
push
in
and
jecxz
fstpt
jb
push
lea
push
and
mov
in
inc
sbb
cmp
and
inc
cltd
sbb
sbb
fmul
bound
pusha
xor
cmp
or
sar
int
xor
sbb
aad
orb
cmp
lock
pusha
clc
adc
outsb
jge
push
lret
shrl
aam
push
xor
cmp
leave
jl
jae
int3
dec
inc
js
lahf
cmp
in
sbb
mov
push
or
push
adc
xor
xchg
mov
dec
sbb
fprem1
xchg
pop
pusha
sbbb
xchg
jnp
in
push
mov
jp
dec
sub
adc
or
inc
pop
jb
sahf
js
shlb
dec
bound
btc
xchg
inc
dec
bound
adc
cmpsb
push
das
mov
lods
add
imul
lret
dec
pop
out
and
sub
out
jbe
shr
sub
shl
cmp
push
adc
mov
jmp
rcrl
mov
aad
rol
hlt
mov
inc
adc
pop
push
sub
in
gs
pop
aas
add
xor
fcomps
inc
add
inc
pop
sbb
xchg
cmp
les
inc
add
fsubl
rol
fstpl
mov
pop
push
aad
inc
xchg
into
cli
push
lea
jns
jnp
xchg
std
xchg
push
fidivl
fisubs
fistl
pop
push
test
sub
adc
sbb
dec
xchg
sbbb
cltd
sbb
mov
aad
jb
push
pop
push
jl
sbb
stos
mov
stos
lods
mov
lret
sub
dec
ss
cmp
rolb
fwait
ret
lea
ja
cli
mov
pop
mov
imul
js
dec
and
ljmp
pop
dec
flds
cltd
popf
sbb
pop
cwtl
cmp
repz
sbb
or
jns
sahf
xchg
cmpsb
push
sbb
mov
add
arpl
cmc
dec
aas
jo
adc
mov
pop
into
xchg
push
push
dec
or
jae
das
jp
sub
pop
int3
push
mov
mov
pop
dec
sarb
orl
sbb
inc
add
or
xor
inc
pop
fucomip
sbb
sbb
adc
ds
dec
pop
xchg
repz
cmpb
inc
repz
dec
push
ljmp
sub
movsb
stos
popa
mov
int3
dec
pop
fmulp
loopne
or
pop
jmp
jns
orb
adc
jp
mov
outsb
push
jns
jne
mov
shrb
cwtl
lock
clc
push
fstpl
pop
sub
mov
stc
icebp
out
cmp
daa
pop
pop
ss
lods
nop
dec
xchg
pop
cmp
mov
dec
push
jb
stos
pop
dec
leave
pop
mov
adc
fsts
mov
loope
aaa
dec
insb
stos
daa
int
push
ss
pop
mov
popf
das
inc
sub
lret
xchg
dec
rorl
inc
jno
insl
lods
dec
cmp
popa
jge
repnz
inc
push
rcrb
sub
les
cmp
loope
cmp
push
mov
or
pop
bound
rorl
lret
gs
jnp
dec
xchg
mov
xlat
dec
ja
div
movsb
push
pop
dec
cmp
loopne
sbb
push
dec
pop
mov
test
call
insb
lret
sbb
push
leave
sub
sahf
pop
jnp
roll
popf
xchg
pop
mov
xor
scas
mov
mov
dec
loope
cltd
mov
or
pop
stos
mov
xor
jns
das
jo
push
in
sub
fs
jmp
mov
push
pop
aad
sub
adc
sahf
pop
add
pop
dec
or
mov
dec
int3
dec
mov
xor
xchg
fstl
aam
push
jb
dec
xchg
mov
sahf
xor
mov
jae
test
stc
mov
add
insb
mov
xor
loope
cmpsl
adc
std
fisttpll
icebp
ljmp
sbb
mov
outsb
test
mov
adc
imul
cmp
add
jo
mov
dec
stos
std
lcall
int3
fstpl
dec
mov
nop
adcl
scas
dec
jnp
sbb
inc
rcrb
or
lcall
imul
dec
daa
xlat
test
dec
jno
push
shl
mov
or
jb
and
icebp
mov
pop
sub
mov
inc
iret
or
pop
mov
decl
cmpsb
pop
mov
inc
dec
and
xchg
mov
movsl
in
push
push
cmp
loop
dec
and
push
dec
aad
test
mov
aam
data16
xlat
mov
dec
sbb
mov
fdiv
cmp
loope
mov
shll
int
push
mov
mov
cs
pop
daa
stos
push
and
je
imul
cmp
pop
popf
or
dec
and
cmpsl
jmp
mov
mov
dec
das
notl
jns
dec
in
call
push
push
push
xor
orb
aam
lock
cmp
fs
sbbb
mov
inc
jo
jp
push
orl
movsb
inc
mov
mov
popl
adc
pushf
xchg
add
pop
inc
and
sub
dec
fs
out
andl
or
dec
mov
lock
dec
icebp
mov
dec
inc
into
lcall
or
addl
rolb
jge
ficompl
mov
lcall
arpl
and
push
aas
adc
hlt
imul
inc
push
ret
push
loopne
pusha
into
fnsave
xchg
sub
movl
paddusb
sbb
inc
icebp
push
shlb
push
test
sub
popa
jp
xchg
pop
pop
pop
mov
leave
dec
inc
shlb
cmp
addl
lret
pop
push
dec
jl
scas
adc
mov
xchg
insl
dec
push
or
pop
cltd
sub
aam
clc
jmp
sti
sar
pop
dec
xchg
test
push
dec
mov
repnz
sbb
jecxz
movsb
sub
inc
lock
in
xchg
out
cmp
sub
adc
daa
lds
dec
pop
and
les
ret
sbb
or
fcomps
dec
ret
cmp
fimull
inc
aas
test
mov
dec
sti
jmp
repz
dec
mov
mov
add
fmul
hlt
dec
or
push
xchg
lock
dec
jmp
push
lret
lahf
test
test
adc
dec
pop
les
push
cltd
pop
sarl
sub
mov
push
cmp
adc
inc
push
bound
int
cs
dec
sti
testb
leave
mov
das
mov
pusha
in
out
push
sahf
cld
ss
xor
add
sub
and
dec
jg,pt
lock
popf
in
mov
or
mov
aam
mov
aad
sbb
fmul
imul
aaa
dec
xor
loop
or
loope
out
pop
mov
or
xchg
cmp
lcall
test
jp
sub
dec
pop
dec
iret
pop
inc
sbb
out
imul
pop
divb
mov
imul
sbb
adc
ret
dec
pop
push
mov
out
inc
mov
out
std
pop
mov
mov
push
dec
dec
ja
mov
jo
clc
adc
lret
mov
ja
cmp
in
xor
push
jbe
add
pop
fisubrs
cltd
int3
mov
mov
jge
dec
std
cmp
xor
test
adc
and
pushf
add
xchg
leave
out
xlat
pop
add
les
dec
imul
dec
pop
repnz
or
push
aaa
and
inc
repz
jle
test
dec
inc
fnstcw
xchg
shlb
icebp
jge
sbb
jmp
fs
mov
dec
xor
rcrb
lods
loope
sub
pusha
sbb
adc
mov
and
iret
aam
nop
addb
sub
dec
cmpb
outsb
stos
push
or
cltd
test
sub
xor
jbe
pop
and
cvtdq2ps
lock
push
push
js
pop
arpl
pop
mov
aas
mov
inc
cmp
inc
cmc
xchg
subb
cli
leave
mov
in
sarb
or
dec
pop
lods
lds
dec
lret
cmp
int
or
mov
cs
inc
rcrl
int3
xchg
mov
dec
or
pop
or
arpl
inc
loop
jbe
xchg
dec
test
inc
pop
ret
cld
jne
adc
stc
xor
enter
pop
dec
imul
xlat
and
daa
jne
jb
dec
dec
mov
repnz
sub
jg
dec
push
sub
jne
push
push
xchg
jle
test
sub
or
dec
mov
mov
in
xchg
shrb
dec
cmpsb
icebp
bound
pop
dec
pushf
pop
add
cs
mov
pop
bound
cld
sbb
dec
inc
push
aas
insl
orl
or
push
icebp
cmp
inc
mov
decl
in
lea
dec
xchg
adc
dec
jmp
add
mov
js
inc
xchg
repnz
insb
cmp
push
sub
aas
jg
cvtdq2ps
mov
mul
ret
lret
jne
xchg
test
ret
inc
pop
loope
and
dec
insb
jp
inc
nop
mov
xor
pop
sub
sub
push
dec
mov
push
dec
dec
dec
enter
xchg
and
mov
lea
movl
mov
push
add
dec
pop
out
in
repz
mov
mov
ret
insl
movsl
mov
fst
push
sbb
pop
add
sub
mov
or
cmp
shll
and
sub
ret
data16
and
lods
mov
adc
dec
rcl
pslld
and
mov
test
insl
add
imul
and
pop
add
repz
js
dec
mov
lea
stc
cmp
fcmovbe
push
xchg
sub
scas
dec
inc
lret
int
sti
jbe
mov
test
inc
dec
stos
mov
adc
mov
outsl
jnp
sub
jmp
mov
dec
pop
js
nop
jle
fnstenv
roll
push
cmpsb
mov
push
xor
and
mov
jbe
mov
pop
mov
dec
add
sbb
jmp
dec
cmovns
imul
leave
dec
sub
mov
and
xchg
pop
push
pop
js
decb
jmp
mov
dec
aas
in
orl
mulps
sbb
sub
jnp
or
pop
pop
pop
dec
and
popf
pop
lret
sbb
mov
jne
and
dec
pop
sub
dec
into
lods
inc
push
xor
es
jnp
jmp
inc
pop
pop
inc
out
dec
fisubs
mov
mov
push
mov
data16
mov
sti
mov
sub
cmpsb
loope
insb
push
jo
push
mov
repnz
orl
sbb
dec
jmp
adc
xor
into
leave
sub
and
jle
mov
jmp
dec
or
pop
outsl
mov
ficoml
loop
mov
in
pushf
fs
scas
scas
xchg
dec
cld
stos
loopne
divl
and
add
mov
add
sbb
inc
or
dec
loop
sbb
cs
sti
sbbl
mov
jge
pop
mov
pop
pop
sti
imul
test
adc
fwait
sub
pop
pop
pop
dec
enter
decl
jmp
aaa
adc
dec
mov
mov
mov
call
cmp
pop
imul
push
or
push
mov
stos
ljmp
sub
adc
aad
or
or
cmp
push
cmpsb
cmpsw
mov
xor
xchg
push
adcb
push
sbb
sub
clc
mulb
mov
or
fs
add
xchg
pop
or
out
push
cmpsb
cmc
xor
subl
sub
push
in
sub
mov
rorb
cmc
je
inc
mov
js
lea
dec
dec
mov
dec
loop
fldcw
lock
lahf
inc
xorl
push
gs
jmp
inc
dec
dec
aas
xlat
out
and
mov
mov
dec
icebp
aaa
inc
imul
cmp
sbb
xor
and
data16
jecxz
fcomps
sbb
mov
jno
lods
int3
sarl
mov
fiadds
adc
mov
fwait
int
mov
sub
fldenv
push
push
and
icebp
popf
daa
mov
xor
inc
mov
cmp
repz
fwait
sahf
in
mov
js
push
and
dec
adc
pop
call
lods
dec
mov
mov
mov
cmp
out
and
cld
mov
add
push
test
stc
loope
nop
or
pop
pushf
inc
or
jnp
pop
sti
and
pop
cs
lcall
mov
es
mov
addr16
sub
aad
enter
mov
repnz
insl
mov
pusha
push
jae
cltd
imul
ret
pop
shr
and
cmp
mov
pop
pop
ficoml
push
aam
push
dec
loope
push
dec
andb
aaa
scas
lods
xlat
push
dec
and
fwait
test
sbb
sbb
dec
xor
movsl
and
xchg
andb
sub
add
loopne
jne
add
mov
mov
test
inc
cmpb
xor
insl
les
pop
ja
out
dec
pop
pop
xchg
lret
pushf
push
movsb
pop
fstpt
rcrl
lea
into
or
sub
inc
jge
mov
imul
lahf
jbe
or
sub
inc
cmp
call
cmpb
mov
or
mov
out
clc
mov
jnp
lret
mov
jecxz
mov
arpl
aad
push
or
call
ret
cmc
xor
imull
fisubl
out
add
jmp
xor
or
push
insl
inc
jmp
cmp
ds
add
inc
fnsave
jnp
cmp
push
fsts
push
pop
pop
cmp
mov
je
and
cltd
sub
cli
sub
and
int3
push
roll
jecxz
jge
adc
lods
out
mov
or
push
ja
sbbb
dec
sbb
fcomps
int
sbb
xchg
xor
insb
fimull
roll
pop
jno
imulb
xor
les
mov
push
sub
cmc
fisttpll
dec
das
and
push
jmp
je
das
data16
cli
ret
sub
push
inc
dec
jmp
rcl
out
leave
out
pop
adc
dec
sbb
push
shrb
or
pushf
push
mov
inc
outsb
sub
cmp
imul
fldcw
dec
dec
lds
hlt
mov
int
pusha
or
jnp
cmpsb
fcoml
scas
orb
aam
or
sbb
pop
aas
fsubrl
leave
arpl
and
out
or
lahf
inc
pop
dec
lods
shll
or
ljmp
mov
push
aam
jae
push
sarb
orb
clc
add
in
pop
rcrb
fwait
aaa
cltd
xchg
xchg
cmp
xor
xlat
cmp
ja
sub
sbbb
jnp
sbb
jb
push
popf
dec
inc
je
mov
xor
push
mov
mov
lock
mov
mov
call
jg
adc
lods
mov
loope
push
lcall
rcl
idiv
push
pusha
push
cmc
js
push
mov
cwtl
jo
mov
pop
mov
push
insl
ret
mov
pusha
scas
xchg
mov
xchg
rep
cli
fisttps
iret
hlt
xor
add
leave
inc
mov
int3
ja
imul
sub
cmp
test
push
pusha
xor
fnstenv
pusha
movhlps
pusha
mov
mov
push
fsubrl
out
mov
mov
iret
dec
int3
lahf
inc
loopne,pt
mov
test
int
pop
sbb
mov
ret
ss
sub
xchg
jp
sub
ror
ds
add
jne
and
push
jbe
insl
dec
inc
cmp
fwait
cld
cmp
xchg
test
clc
in
gs
sub
pop
negl
pusha
push
mov
dec
inc
xor
addr16
and
push
and
lret
lret
das
jg
cli
adc
jno
sbbb
adc
call
cmpsb
clc
or
add
sbb
dec
addr16
dec
cs
hlt
cmp
pop
push
push
mov
and
jb
pop
jmp
xchg
ret
mov
fildl
inc
insb
repz
data16
and
call
data16
es
mov
cmp
ficoml
push
inc
pushf
jmp
int
cld
push
sbb
mull
and
imull
aad
shl
lea
stos
outsl
cmp
clc
mov
cmp
sub
jo
dec
mov
lods
xlat
jge
ss
xor
test
dec
xchg
and
push
lods
mov
dec
pop
lcall
cmp
xchg
bound
dec
xchg
mov
xchg
test
lea
bound
stc
add
out
pop
adc
add
mov
and
mov
sub
dec
in
push
adc
inc
out
push
cmp
mov
imul
sbb
sbb
mov
scas
mov
xchg
outsb
pop
movsb
push
pop
out
mov
rorb
push
subb
mov
ljmp
mov
cwtl
adc
dec
fstpl
inc
and
xchg
dec
in
lret
xchg
and
dec
mov
adc
add
pop
enter
add
cmp
fildll
decl
push
sahf
mov
adc
push
push
test
sub
cmpsb
add
ret
out
int
into
mov
cwtl
ret
scas
lret
sub
test
jbe
dec
pop
popa
sbb
bound
mov
insl
xchg
lret
dec
es
movsb
xor
int
push
and
cwtl
lock
rclb
stc
cmc
dec
daa
cli
jne
or
scas
imul
dec
sar
or
das
mov
adc
xchg
push
dec
gs
subb
inc
fisttps
out
mov
cs
push
shlb
xor
movzbl
dec
mov
aas
popf
dec
or
jge
pop
sub
cmp
adc
in
mov
xchg
lret
add
inc
jecxz
sbb
loopne
mov
lods
movsl
push
or
pop
popa
call
stc
aaa
dec
inc
push
ds
or
arpl
jbe
push
ljmp
shrl
sub
xor
and
dec
daa
gs
or
stos
jo
clc
push
adc
or
push
fcmovu
leave
cmp
mov
mov
jmp
dec
into
mov
push
sub
stos
pusha
inc
dec
cld
in
push
sub
add
dec
mov
lahf
arpl
or
inc
mov
fcmovnbe
push
sbb
push
popf
dec
inc
pop
divl
dec
mov
shll
insl
and
pushf
add
nop
pop
mov
mov
ror
dec
adc
jns
dec
sbb
sub
movsb
jb
dec
insb
fimuls
and
sub
sbb
adc
xchg
or
dec
push
sbb
mov
dec
into
fildl
stos
sub
push
sub
mov
xchg
xchg
sub
and
mov
push
rclb
lret
dec
sbb
adc
jmp
push
mov
sub
fildl
pop
dec
aam
movsl
lahf
add
mov
leave
mov
cmpsb
xor
enter
mov
lret
dec
lcall
jno
mov
ds
push
jmp
xchg
sub
dec
inc
enter
cmc
mov
lret
mov
mov
stos
pop
es
je
int3
inc
test
pop
and
fimuls
outsb
clc
je
stos
mov
into
scas
mov
mov
or
xor
ja
add
repz
imul
mov
cltd
popw
nop
dec
cmp
aaa
xor
fsubrs
xorl
pop
push
aam
stos
cmc
lret
push
xor
add
mov
xlat
sub
mov
inc
movl
loop
dec
pop
shrl
jns
imul
dec
dec
lods
gs
jl
sub
cmp
shl
push
test
repz
outsb
jmp
or
retw
xchg
push
imul
and
xor
mov
adc
pop
mov
leave
aad
add
mov
fnstsw
xor
sbb
pop
es
sbb
aas
push
pop
cmp
add
into
xchg
xchg
pop
push
or
dec
test
pop
xor
add
push
arpl
and
pusha
mov
mov
movsb
ja
mov
test
mov
ljmp
xchg
je
mov
push
xor
scas
call
push
lret
sbb
inc
cltd
mov
insl
mov
inc
mov
pusha
inc
sub
shll
or
dec
jns
mov
lcall
jnp
adc
xor
sbbl
adc
arpl
or
push
flds
jge
push
dec
dec
fldt
das
jns
test
je
lcall
cmp
in
cmp
fidivs
lods
les
jge
inc
hlt
divl
lods
push
inc
inc
mov
push
xchg
push
mov
call
push
xor
out
jb
mov
repnz
imul
xor
mov
fistl
mov
jb
add
xor
cmp
pop
cltd
xor
mov
pop
loope
jmp
xor
fbld
jno
sbb
popf
push
add
andb
mov
xor
cmp
xchg
out
movsb
out
pusha
jne
dec
incb
or
dec
adc
jo
jle
call
push
outsl
out
inc
mov
mov
dec
mov
jecxz
hlt
mov
jle
xor
and
push
bound
adc
pushf
or
xor
push
sbb
bound
enter
loopne
out
push
mov
mov
mov
in
int3
aaa
outsl
inc
int
cmp
je
repz
fbld
jecxz
and
shl
insb
xchg
mulb
mov
insb
mov
lahf
xchg
inc
cmp
lret
lods
jmp
imul
jl
push
xchg
sub
je
lods
pop
int
xchg
and
stc
mov
fnsave
add
int3
add
outsb
jle
mov
jb
jmp
mov
adc
bound
sbb
push
xchg
inc
xchg
jg
adc
pop
leave
out
pop
cmpsb
push
or
rorb
cmp
pop
in
jne
je
cmp
pop
push
sub
mov
outsb
rorl
push
rclb
mov
or
pop
rcrl
data16
pusha
inc
inc
ja
sub
mov
jnp
or
mov
pusha
adc
xor
sarb
sub
test
hlt
pop
les
lret
ja
mov
mov
insb
pop
mov
bound
mov
sbb
pop
cltd
sahf
jnp
jl
xor
call
pop
popf
xor
hlt
into
xchg
xor
test
xchg
negl
das
cmp
xor
movsl
rcl
adc
cmp
jle
fisubl
arpl
js
sarl
add
add
sti
sub
lret
sahf
dec
mov
sbb
sbb
shrl
lcall
push
in
mov
mov
push
stos
jle
cli
mov
lahf
pop
mov
outsl
cld
add
inc
lcall
push
push
shlb
jle
sbb
xlat
mov
leave
sbb
call
xor
push
cmc
adc
xor
out
out
shll
push
mov
mov
outsl
adc
xchg
xorl
cli
mov
insl
push
inc
mov
jge
fcoml
jmp
pop
and
inc
lods
cmpsl
push
popa
push
mov
push
mov
out
lret
xor
call
or
or
fcomps
or
or
and
lret
adc
sbb
sbb
ljmp
and
mov
pop
in
out
xchg
das
rolb
xchg
inc
insb
push
int
mov
jmp
xor
mov
fidivrl
std
int
dec
inc
cltd
push
push
xchg
cwtl
cmp
stc
and
push
mov
pop
loopne
inc
xor
jbe
jecxz
and
addb
je
adc
int
sub
sbb
mov
pop
leave
scas
repnz
fstps
fmul
loope
out
dec
add
js
lret
and
sti
add
jecxz
push
mov
ss
sub
bound
pushf
loopne
mov
adc
roll
int3
orl
test
mov
or
pop
jmp
rclb
pop
adc
ljmp
ret
cmp
int
xchg
pop
out
leave
aam
shlb
fldz
mov
push
or
pop
rolb
aam
mov
push
mull
add
pop
or
jle
jnp
jg
pop
inc
cmpl
pop
adc
xchg
push
add
pusha
or
sahf
bound
adc
mov
dec
or
insb
and
movsb
ror
mov
pop
sbb
bound
mov
mov
mov
dec
in
sub
scas
lea
cltd
xor
stos
dec
sub
push
pop
mov
int
inc
and
int3
mov
push
cmp
dec
add
dec
mov
mov
jmp
push
jle
lret
cld
loop
push
push
or
inc
fstl
ljmp
xorl
cli
xchg
stc
jl
cmp
push
addb
inc
imul
in
in
shrl
mov
pop
enter
movsl
test
cli
and
xor
mov
sub
mov
cmp
mov
fsubrp
and
repz
enter
xchg
adc
je
jl
xlat
xchg
sti
cwtl
adc
lret
ss
mov
jbe
sbb
add
sbb
imul
das
idivl
notl
addl
xor
aaa
cmp
jno
mov
aaa
add
or
cmpsl
sbb
or
mov
ja
cs
mov
imul
into
cmp
xchg
inc
cltd
push
mov
mov
and
add
imul
ficoms
jno
mov
ja
xor
leave
cltd
xor
add
jb
jmp
cmp
and
dec
dec
loop
sahf
int
jecxz
cs
mov
or
xchg
adc
out
or
adc
jp
push
sbb
adc
pop
add
xor
xor
xorb
inc
push
ficoml
aaa
adc
ds
push
xchg
dec
jmp
and
test
lret
mov
push
adc
jmp
jns
add
ja
bound
add
arpl
cltd
pop
mov
sub
dec
xchg
push
jmp
pop
lods
in
test
xchg
push
test
xor
dec
mov
xchg
ret
imul
xor
mov
inc
dec
sub
mov
lea
jl
jge
dec
dec
push
add
inc
jle
add
pushf
dec
xor
sarb
push
pop
xor
shl
inc
push
cmp
loopne
pop
lret
fmuls
int3
mov
xchg
mov
aas
sti
dec
sahf
and
dec
xchg
and
sub
leave
xor
and
pop
rcrb
push
xor
xchg
dec
and
fincstp
pop
mov
out
jge
adcb
lock
imul
es
sbb
rorl
cmp
lods
into
ja
push
and
and
pop
mov
jmp
inc
mov
mov
clc
es
dec
into
fdiv
filds
ret
ret
arpl
pop
inc
repnz
pop
and
jecxz
lods
push
movsb
mov
fisubrs
testb
mov
or
ja
pop
mov
mov
es
ljmp
push
adc
div
pop
ds
test
cmp
mov
jecxz
xchg
fsubrs
loop
testb
or
mov
pop
push
inc
les
testb
je
call
cmpsl
rcl
test
push
scas
xor
outsl
icebp
dec
mov
dec
sbb
jnp
dec
push
xchg
xlat
jl
mov
scas
jmp
rorb
repz
push
mov
pop
xor
inc
into
mov
rcr
xor
push
je
fdivrs
lret
std
imul
jbe
jbe
xchg
mov
jle
sub
loop
cmp
fsts
mov
dec
iret
mov
push
push
fdivs
pop
repz
fists
jge
sbb
cmp
inc
xchg
dec
mov
rep
sub
xor
cmpsb
bound
xor
mov
lret
loopne
jecxz
add
push
add
pop
and
mov
cmp
adc
ret
mov
fiaddl
cs
rorl
mov
cld
mov
xchg
sahf
xor
rcrl
out
jne
dec
xlat
jne
fidivl
mov
xor
inc
bound
dec
dec
cli
dec
pop
jb
push
xor
ret
mov
sub
lock
imul
and
or
inc
shlb
inc
add
xchg
jl
cmp
call
aas
pop
sarl
push
inc
cli
mov
and
push
push
pushf
rcl
jle
cmpsb
loopne
in
ss
mov
mov
cltd
mov
or
mov
xchg
push
mov
inc
fcom
sti
test
cmc
cmp
fs
push
dec
and
ret
test
pop
imul
cltd
test
add
loopne
add
mov
sub
add
inc
js
aad
not
and
sub
iret
mov
jmp
leave
dec
inc
and
incb
adc
jl
mov
mov
out
and
sbb
jle
or
ret
clc
pop
xchg
mov
mov
in
nop
cmp
mov
sbb
clc
movsl
aad
aam
push
or
xor
sbb
lds
mov
shl
test
subl
repnz
leave
add
push
xor
and
movsl
pop
cmpsb
and
inc
js
add
push
ss
xchg
lock
mov
pop
mov
test
ficompl
xchg
sti
je
fiaddl
inc
mov
xchg
adc
cli
xchg
push
loop
adc
push
jg
jmp
dec
dec
mov
incl
push
int
cmp
movsl
fcmovbe
sub
daa
mov
xor
jnp
scas
pop
push
add
int
mov
enter
push
jp
cwtl
insl
inc
pop
loopne
mov
add
fmull
push
pop
scas
sbb
pop
sbb
fadds
or
inc
inc
and
cltd
outsb
adc
pop
inc
mov
mov
jp
insb
cld
jl
mov
mov
les
aad
testl
dec
push
nop
mov
push
addr16
push
adc
mov
mov
dec
decl
std
fcompl
sbb
inc
jo
insl
ljmp
adc
inc
pop
mov
xchg
insb
pop
das
sbb
sti
andl
mov
adc
mov
sub
adc
mov
punpckhwd
or
sub
mov
jmp
lahf
ljmp
inc
xchg
dec
je
shrb
add
dec
lret
inc
push
dec
jns
add
push
inc
mov
mov
in
mov
cmp
jno
lea
jle
mov
int3
lods
sbb
arpl
xchg
inc
xchg
push
fmull
lods
xor
mov
add
sub
lea
clc
ss
leave
add
jmp
mov
dec
sti
rorl
mov
inc
pop
fwait
cs
icebp
jmp
mov
fldt
arpl
cmp
sub
mov
mov
dec
and
xchg
mov
push
ss
jg
add
lds
loopne
aaa
push
ret
call
iret
adc
push
jnp
jae
xchg
push
sbb
pop
dec
cmp
sub
xchg
mov
dec
inc
rorb
add
push
scas
bound
cld
xor
out
sbb
lock
push
push
inc
pop
mov
inc
push
movsl
fwait
testb
xchg
inc
xchg
repz
xchg
push
shll
imull
rcrl
sbb
adc
ret
rclb
cmp
mov
out
and
cld
lret
clc
jge
sub
pop
mov
pop
in
out
push
das
add
push
aam
mov
inc
test
pushf
shlb
dec
rorb
adc
push
mov
decb
repz
jp
ljmp
adc
dec
add
test
xor
les
sbb
mov
cld
or
int
aas
push
or
mov
xchg
das
and
pop
mov
sbb
jb
daa
cli
dec
pusha
popf
stos
in
sbb
xchg
sbb
xchg
cli
or
mov
xchg
jl
lds
loopne
sahf
mov
js
mov
xchg
pop
inc
clc
or
mov
cli
inc
icebp
cmp
mov
lahf
lret
pushf
adc
jmp
dec
cld
xor
shr
cmp
push
test
incb
mov
test
pop
es
cmpsb
pop
mov
lret
add
test
dec
sbb
inc
and
add
push
popa
dec
bound
or
lods
mov
inc
imul
shl
ficompl
dec
icebp
data16
cmpsl
sahf
jbe
test
or
dec
into
push
jl
xchg
dec
mov
or
lahf
inc
mov
add
fdiv
pushf
insl
lcall
xchg
dec
dec
loop
mov
stos
and
mov
iret
scas
insb
add
inc
pop
push
mov
push
pop
fdivrp
dec
gs
mov
adc
out
ja
repz
lahf
cmc
sub
cmpsl
nop
xchg
mov
or
shl
mov
lods
dec
mov
push
inc
pop
mov
addl
or
xor
pop
dec
dec
mov
loop
arpl
or
jb
and
rcrl
push
into
dec
les
daa
pop
and
stc
or
xor
add
xor
outsl
fdivs
dec
sahf
xor
inc
mov
shlb
adc
movl
lock
icebp
pop
sub
or
or
push
jns
pusha
adc
lret
xchg
in
leave
stc
pop
ds
aam
inc
out
mov
sub
aad
push
lods
and
int3
stc
fwait
pop
cwtl
bound
pushf
mov
ret
inc
or
xor
jnp
and
data16
mov
dec
inc
push
xor
pop
mov
mov
aaa
leave
push
cltd
into
mov
lods
in
mov
les
mov
pushf
lock
dec
lret
lcall
mov
out
cmpsb
insl
xor
push
int3
push
pop
push
mov
add
mov
cmp
cmp
jmp
jbe
and
insl
sbb
sub
scas
fwait
dec
add
outsb
jns
pop
iret
sub
pop
and
add
repz
adc
jbe
sub
or
outsl
or
push
aam
sbb
inc
sahf
or
scas
sub
mov
repnz
and
pushf
data16
adc
adc
adc
loopne
rcrl
dec
outsl
lds
stos
jnp
add
flds
cmp
push
mov
test
mov
cmp
mov
jns
mov
lahf
lea
pop
xchg
mov
cli
xor
fcomps
lret
xor
xor
dec
outsb
sub
inc
insl
dec
in
hlt
arpl
pop
jb
mov
cmpb
mov
sbb
out
and
cwtl
ds
cli
adc
lock
push
inc
inc
push
lods
imul
lods
jne
jl
jo
jnp
outsl
inc
push
outsb
mov
cmpsb
push
mov
in
cmp
fistl
mov
fdivs
push
sub
jle
sbb
cmp
sub
fnstenv
sbb
inc
add
imul
push
aaa
cmp
gs
sub
fs
js
int3
les
int3
adc
and
scas
xorb
inc
ja
lea
stos
jne
push
dec
inc
lods
stos
dec
dec
cs
push
loopne
mov
sbb
hlt
rclb
lods
inc
ficoml
pop
mov
js
ja
int3
pop
insl
jle
add
pop
cmp
cmpsl
pop
push
inc
and
andl
enter
into
cmp
push
inc
pop
icebp
enter
pop
push
bound
jl
and
daa
subl
cmp
aad
jne
jle
notb
push
mov
jbe
xchg
mov
shrl
repz
movsb
cmc
aaa
lea
incb
mov
ret
fidivl
repnz
push
call
aad
pop
xchg
scas
mov
inc
jge
pop
cmp
cwtl
dec
ss
push
mov
adc
arpl
dec
push
add
jg
hlt
sub
xorl
loop
jnp
and
mov
mov
in
movsb
ficoms
inc
or
out
or
imul
pop
and
push
das
or
add
push
push
lret
or
push
sti
int
ds
jge
fwait
xor
out
pop
push
call
nop
or
clc
lahf
bound
cli
jae
xchg
mov
or
inc
and
into
mov
arpl
pop
pop
sbb
xor
shl
mov
outsb
inc
mov
push
push
mov
stos
adc
mov
das
lock
inc
push
lea
lret
roll
pop
mov
pop
stos
mov
icebp
xor
xchg
mov
in
mov
data16
adc
sti
adc
sub
add
xchg
loop
in
jb
mov
out
inc
lcall
dec
jns
rorb
das
sub
cmp
aaa
sub
jnp
insl
add
pop
or
adc
lcall
sahf
lods
fwait
push
xchg
dec
int
fiaddl
outsl
push
bound
fistpl
dec
push
in
and
in
mov
test
out
in
push
pop
mov
pusha
xchg
and
inc
dec
pop
mov
mov
mov
lods
sub
dec
loope
lods
outsl
cmovs
js
lahf
aad
enter
sub
mov
push
adc
cmp
ret
andb
icebp
mov
lods
loopne
jo
inc
iret
lret
inc
imul
lret
ret
pop
fisttpll
adc
ret
pop
lret
sarl
mov
mov
push
pop
aaa
insl
xchg
sbb
aam
test
das
cmpb
push
pop
sar
push
test
adc
fcmovnb
ror
push
mov
pop
lock
mov
mov
cmp
pusha
push
leave
push
lods
rcl
adc
and
inc
mov
bound
jg
xchg
jae
inc
lods
xchg
pop
push
out
iret
jecxz
xor
insb
jno
dec
ds
ja
or
lods
sbbb
dec
cmpsl
inc
inc
cmp
fsubrs
dec
orb
push
adc
adc
aad
pop
repz
jecxz
jp
sahf
test
outsb
or
int3
xor
pop
aaa
or
aaa
push
inc
and
lds
push
and
ror
movl
sbb
out
scas
xchg
jne
pop
push
dec
push
iret
inc
xlat
adc
xchg
inc
loopne
xchg
lea
sbb
test
ja
lcall
fld
mov
mov
lea
aaa
lret
icebp
lcall
inc
mov
or
dec
mov
int
jp
pop
adc
cld
clc
mov
or
mov
or
sub
mov
xchg
and
pop
sub
xor
mov
fisubrl
xor
jbe
inc
and
pop
xor
mov
add
inc
outsl
push
sti
sbb
jle
or
aas
shr
dec
imul
lods
shlb
push
and
adc
jmp
dec
outsl
mov
jl
pop
mov
movsb
insb
xorb
loope
mov
push
cmpl
inc
push
inc
incl
scas
sbb
pop
sbb
pop
inc
mov
mov
movsl
inc
je
test
push
scas
pop
sarl
sbb
cmp
daa
mov
mul
btc
insl
bound
cmp
xchg
pop
pop
frstor
aad
add
dec
fwait
pop
and
cmp
mov
jae
pop
push
test
sti
loopne
dec
add
mov
shlb
lahf
call
xor
lret
jl
pop
int
mov
out
movsb
and
add
push
insb
mov
cmp
test
fsts
xor
inc
repnz
cld
or
in
add
enter
add
inc
jb
xchg
pop
pop
fwait
dec
inc
pop
mov
cmpsl
hlt
dec
mov
and
in
cmp
dec
inc
add
jecxz
call
sbb
push
jecxz
repz
negb
pop
adc
mov
movsb
leave
insb
arpl
shrl
dec
pop
mov
pop
dec
bound
ja
sbb
mov
sahf
jge
out
xchg
mov
mov
mov
jle
repz
inc
xchg
cmpsl
jge
pop
xor
mov
insb
mov
scas
iret
jl
push
cs
sbb
xchg
cli
test
mov
xchg
pop
mov
pop
cmpsl
jno
sub
or
pop
or
pop
sub
pop
pop
lahf
pop
fsubrl
sbb
lds
pop
inc
fdivl
subb
xchg
inc
int3
mov
stos
xchg
or
insl
sbb
cmp
lret
cmp
inc
cmp
mov
xor
jge
loop
js
cld
es
mov
jle
xor
mov
bound
sbb
clc
aas
sub
lods
jle
loop
add
ss
jle
iretw
in
cld
and
and
fucomip
mov
pop
imul
lahf
add
adc
rclb
mov
push
mov
cmc
sti
dec
leave
hlt
xchg
mov
sub
clc
jmp
popf
ja
pop
lods
inc
loop
lods
xlat
popa
and
jle
or
sub
cmp
sub
out
sbb
testb
sbb
xchg
es
lahf
test
loop
clc
ret
fisubrl
sti
add
jecxz
pop
jg
fists
push
and
adc
xor
cmpsb
aas
cmp
jb
push
push
fdiv
leave
mov
dec
or
xchg
add
pop
lods
xchg
rcrb
sbb
xlat
lds
imul
leave
mov
aaa
hlt
xchg
mov
inc
pop
push
inc
clc
jg
pop
xor
cmc
int
aaa
pusha
sub
or
mov
push
inc
push
dec
or
mov
ja
stos
cmpsb
fnstcw
addl
xchg
sub
push
das
xchg
jbe
dec
push
dec
pop
rclb
push
adc
mov
add
or
pop
xor
std
sbb
xchg
out
loop
pop
mov
xor
sbbb
or
adc
leave
inc
std
stos
mov
sbb
pop
and
leave
xor
adc
push
fidivrs
fdivrl
lret
orl
sbb
in
inc
aas
dec
add
out
jne
cmpsl
cli
lret
mov
clc
xor
test
jecxz
icebp
pop
gs
xor
xor
rolb
insb
jbe
push
xor
loopne
cmp
loopne
dec
filds
cltd
xchg
sub
cs
push
xchg
cmp
inc
xor
inc
cmc
or
add
and
inc
gs
popa
or
xor
and
sbb
xchg
sub
add
outsl
sub
lods
rep
push
xor
pop
mov
mov
stc
pop
adc
inc
lret
fmulp
push
fnstenv
jbe
clc
dec
lods
jbe
ljmp
std
pop
aad
ret
loope
xor
mov
xorl
call
dec
adc
mov
xor
cmp
push
or
out
jecxz
lods
lds
ja
fmull
xor
dec
adc
sbb
mov
cmp
sub
add
fwait
iret
push
int3
jle
inc
popa
vunpcklps
inc
adc
test
mov
inc
xchg
push
adc
minps
cmp
fwait
and
dec
cld
in
mov
test
sbb
popf
mov
call
sbb
gs
sbb
adc
sub
aam
pop
or
xchg
sbb
fstpt
xor
xor
push
cmp
and
pop
iret
jb
loopne
cmp
pop
cmp
mov
mov
adc
repz
into
aam
lcall
mov
cmpsb
dec
add
jns
repz
in
push
add
lock
or
bound
xor
dec
popl
add
or
add
roll
negl
lret
adcl
insb
sbb
cmp
shlb
mov
rorl
push
xlat
ja
push
lea
add
pop
fsubr
cmp
icebp
fwait
add
push
push
call
test
push
test
xor
cld
aad
push
rcl
popf
adc
inc
out
mov
addr16
xor
aad
add
leave
pop
lahf
adc
mov
inc
jl
cmc
imul
add
lods
sub
stos
insb
xor
inc
sbb
es
stos
xchg
mov
out
push
cld
vmovd
cwtl
lret
dec
hlt
sbb
dec
roll
or
test
aam
inc
mov
dec
push
mov
in
xlat
mov
aaa
xor
ljmp
push
mov
xchg
mov
in
and
fimuls
ret
mov
pop
jo
pop
inc
inc
lret
jge
pop
push
repz
xchg
xchg
roll
sahf
sbb
sbb
test
int
inc
cmc
leave
mov
push
xor
hlt
dec
mov
bound
push
imul
inc
mov
inc
testl
stos
push
idivb
ds
mov
fldl2e
arpl
jns
int3
aas
stc
push
mov
cmp
push
jnp
pop
out
pop
mov
xchg
jmp
clc
mov
dec
test
or
pushf
sbb
mov
cmp
jecxz
xchg
xorb
cmpxchg
and
sub
sbb
push
int
adc
mov
add
mov
pop
cmp
loopne
pop
sub
push
xchg
xchg
mov
dec
popfw
and
sbb
xchg
pop
aad
dec
pop
movsb
ja
sbb
inc
rclb
add
mov
in
out
je
jle
jge
in
inc
sbb
inc
inc
fsubrl
sarb
movsb
lds
ficompl
imul
je
in
push
sub
dec
and
pop
dec
dec
hlt
sub
cmc
add
mov
les
adc
push
fcomps
icebp
xor
fimuls
cmp
hlt
pop
sub
sahf
scas
fdivs
jmp
mov
xchg
outsb
mov
cmpb
jl
dec
test
insl
cld
shl
dec
ret
aas
and
pop
add
pop
lods
push
xlat
fwait
dec
or
scas
mov
dec
movl
out
xchg
lret
push
outsl
out
dec
pop
cmpsb
sbb
push
imul
dec
xor
and
dec
dec
clc
jb
jae
rclb
push
dec
adc
out
sub
imul
mov
adc
add
into
addr16
dec
pop
repnz
jmp
leave
fdivl
xchg
ljmp
ss
jbe
dec
hlt
ret
imul
cmp
lds
enter
dec
cwtl
or
nop
push
dec
lahf
pop
pop
dec
push
sub
cmp
ficomps
sar
add
cmp
sbb
inc
jo
dec
ljmp
pop
dec
pop
xchg
jecxz
std
adc
stos
repnz
inc
mov
pop
imul
sub
lcall
loop
lret
aaa
xchg
xorl
mov
mov
add
popa
enter
inc
and
mov
and
push
dec
clc
jne
idiv
sub
mov
popa
adc
dec
mov
or
icebp
fcom
fistps
mov
jge
mov
push
dec
mov
inc
or
dec
aas
push
push
pop
cmc
jecxz
add
mov
lds
add
leave
rcr
pop
nop
sub
or
sbb
sub
mov
ljmp
dec
loope
mov
jb
mov
rep
cli
xchg
adc
cs
pop
icebp
xor
inc
push
nop
dec
test
stos
xchg
loope
sub
stos
fnstcw
mov
mov
mov
into
or
pop
push
push
dec
adc
int3
cmp
aad
cli
cmp
das
cmpsb
stos
ret
xchg
mul
out
ret
dec
adcl
dec
aad
dec
cmp
mov
xchg
xchg
out
loope
repz
je
imul
push
push
dec
jecxz
outsb
stos
cmpsl
sub
jo
pop
int
sbbl
fimuls
mov
std
push
dec
aas
xchg
mov
cli
pop
test
and
mov
add
aad
push
movsb
dec
bswap
lods
cmp
sub
xor
push
daa
push
cmp
xor
cmp
das
fmull
push
cltd
dec
dec
mov
fcmovu
or
mov
fildl
cmp
inc
jne
jb
mov
dec
push
push
ljmp
and
inc
sub
les
pop
movsb
out
sub
sti
popf
fwait
stos
repnz
ja
pop
popf
add
dec
sbb
lret
push
xchg
dec
add
sar
add
pop
out
jl
pop
mov
in
int3
and
shll
outsl
xor
dec
add
sub
decl
sbb
and
hlt
lock
mov
sub
jp
mov
rolb
add
pusha
dec
divl
sbb
rolb
cld
ja
push
dec
inc
adc
pop
dec
std
pop
test
dec
xlat
xchg
mov
fcomps
nop
imul
ja
enter
push
push
xchg
roll
dec
hlt
arpl
sub
xor
mov
dec
lock
in
push
pop
adc
ret
jl
rcrb
mov
sub
push
lods
lods
lcall
fldl
add
inc
lea
sbb
push
mov
es
mov
movsl
mov
pusha
jecxz
mov
insb
and
inc
xor
ss
inc
mov
sbb
into
sbb
xor
outsb
cmp
imul
notb
jecxz
mov
jno
std
sub
sub
lret
enter
add
push
sub
jp
inc
test
rclb
inc
clc
jo
popa
sub
and
jecxz
push
sbb
icebp
decl
gs
inc
add
and
mov
or
dec
cld
aaa
mov
pop
fbstp
fstpt
push
je
inc
jnp
lea
cmp
stos
pop
lea
add
push
imulb
jecxz
cmpsb
dec
sbb
xor
imul
cmp
ss
sbb
push
lods
pop
or
inc
cmp
mov
xor
mov
xchg
xlat
fiaddl
and
sub
mov
pushf
fiadds
roll
dec
sub
inc
inc
loope
pop
mov
push
ret
jbe
cltd
inc
and
pop
sub
pushf
mov
in
std
loop
push
stos
and
insb
loopne
fldl
enter
push
push
lods
out
adc
movsb
dec
or
pop
mov
jmp
mov
data16
call
addl
jo
xchg
repz
mov
xor
add
adc
rolb
xor
push
adc
imul
aas
add
add
addb
out
push
add
jge
arpl
orb
ss
insb
xchg
pop
frstpm(287
inc
cli
or
cmp
xchg
sub
push
inc
jnp
jnp
adc
in
cmc
push
adc
fsubrl
mov
dec
int
inc
inc
sarb
loopne
jge
lods
bound
xchg
add
scas
jp
iret
sbbb
xchg
push
mov
fidivrl
and
mov
xchg
loopne
imull
dec
scas
jb
loop
notb
and
nop
rolb
jnp
repnz
popa
or
mov
and
or
jns
test
imul
add
lds
adc
call
or
jae
je
gs
outsl
lret
mov
outsb
lcall
xor
pop
mov
add
sahf
dec
fnsave
inc
adc
test
ds
sbb
xorb
mov
inc
pop
jns
pop
and
push
and
pop
out
lds
pop
rclb
xchg
das
ret
and
pop
lahf
adc
jbe
incl
arpl
jnp
insb
pop
xchg
add
sub
xor
sbb
mov
sbb
xchg
enter
arpl
pop
sbb
test
and
mov
push
ficomps
fwait
inc
sbb
ds
mov
jb
iret
pop
dec
mov
test
in
mov
inc
add
push
out
mov
les
mov
jp
push
call
adc
sar
push
sub
mov
xor
xchg
jae
mov
iret
sub
add
ss
ret
lds
xor
push
cmp
js
jnp
xor
push
cmp
add
pop
sub
mov
push
and
sub
popa
or
inc
div
add
ret
xor
xor
or
xchg
insb
lods
mov
push
in
lret
dec
push
pop
leave
enter
pushf
sbb
xor
cmp
dec
cld
in
in
jmp
xchg
stc
pushf
dec
sbb
inc
add
mov
xchg
sahf
fistpl
jle
in
jmp
ss
mov
xor
pop
dec
adc
dec
negl
jo
std
popf
sub
lods
sub
ja
or
ds
xchg
shlb
xchg
stos
and
adc
aaa
add
push
mov
cmc
insl
mov
inc
adc
int3
adc
jp
int3
mov
push
cmp
addl
lds
psrad
fimuls
popa
mov
xor
mov
fimull
pop
pop
xor
cmpsl
xchg
pop
lods
inc
ja
fdiv
pusha
je
push
adcl
divb
mov
pop
imul
jp
fs
pop
fildl
popf
jmp
xchg
or
mov
sbb
loopne
lods
pop
adc
cwtl
pop
push
add
lret
push
shlb
jnp
push
mov
jg
mov
add
out
les
fdivrp
adc
inc
ja
es
leave
dec
push
jns
and
cmpsl
sbb
test
in
inc
leave
mov
adc
mov
mov
movsl
xchg
mov
add
cmp
mov
shll
xor
out
push
stc
mov
xchg
push
ss
xchg
pop
push
jge
cmp
inc
sub
jbe
stc
clc
or
inc
xor
sbb
sub
lds
addb
xor
jmp
dec
push
cmc
adc
mov
dec
fnstcw
and
iret
loop
adc
aaa
xlat
mov
les
xchg
sub
mov
cltd
add
cmp
orb
sub
arpl
jle
dec
imul
push
cmp
xor
jnp
aas
int
push
and
pop
leave
mov
pop
mov
int3
fiaddl
adcl
adc
and
mov
cmp
sarl
aad
call
push
dec
leave
adc
inc
cmc
scas
pop
call
xor
add
push
fldt
fmuls
hlt
mov
mov
sbb
cmp
rcll
mov
jle
add
fcomps
or
pop
push
push
loope
sbbl
pop
jmp
push
push
mov
xchg
pop
pusha
mov
les
pop
pop
add
cmp
or
mov
adc
xor
cmpsl
mov
mov
mov
pusha
jns
mov
fdivs
sub
fnstenv
ret
rcll
inc
mov
inc
xlat
mov
and
inc
jbe
pop
ja
stos
lods
jne
xor
xchg
add
shll
sub
icebp
dec
test
lcall
iret
into
and
fmull
cli
pop
stc
inc
inc
bound
insb
aam
push
test
movsl
or
jne
xor
inc
mov
shrb
jle
xchg
adc
int3
lods
jle
int3
mov
repnz
ja
push
sub
fistps
mov
imul
push
scas
mov
pslld
movb
or
cmp
or
fiaddl
and
rcrl
mov
jmp
fs
repnz
inc
xor
stos
in
lock
or
outsb
mov
adc
aaa
pop
fstps
sti
push
push
call
mov
inc
mov
int
cmc
push
dec
cmc
push
jb
sti
arpl
jg
sub
lahf
subl
out
add
mov
push
aas
mov
adc
jbe
mov
xchg
sbb
mov
dec
leave
sbb
dec
loop
mov
or
imul
mov
enter
in
inc
jmp
or
push
shrl
xor
stc
sub
inc
in
or
shl
divb
call
mov
lret
lret
fwait
jl
lcall
push
test
dec
mov
xchg
outsb
jnp
lods
lods
pushf
mov
sahf
cmp
mul
sbb
fisubs
fsubrl
sbb
sbb
dec
out
jge
add
shrl
sahf
adc
sar
mov
jle
mov
mov
xor
push
push
testl
rcrb
mov
enter
cmpsb
orl
sub
cs
mov
loop
mov
lret
add
xlat
insb
and
leave
aam
dec
add
fstps
sub
adc
mov
aas
xor
inc
pop
push
iret
jnp
test
jns
je
fucom
cld
push
pushf
sub
clc
sbb
aaa
pop
and
jecxz
dec
lods
push
cwtl
jp
mov
xor
mov
insb
push
xor
dec
inc
mov
mov
les
pop
mov
out
mov
and
leave
icebp
idivb
or
dec
xchg
xchg
shll
pop
sbb
decb
or
rol
push
int
pop
xchg
stc
lahf
dec
cld
test
pop
je
mov
enter
negb
adc
push
push
aam
fwait
xchg
orb
int
add
add
inc
fsubl
scas
aam
dec
sahf
mov
lods
test
push
xchg
adc
pop
pop
fs
enter
loope
or
test
adc
pop
out
das
cli
les
jne
jecxz
fcmovb
inc
push
inc
es
push
or
scas
es
and
repz
shrl
push
test
mov
and
jmp
inc
mov
cmp
xchg
pop
sub
cmp
push
and
sbb
fcomps
add
xchg
jbe
lds
outsb
pop
shr
insb
jb
daa
shlb
sbb
add
les
addl
iret
mov
jo
test
inc
pop
push
xlat
cltd
mov
ds
and
aam
inc
pop
mov
imul
cmp
xor
popa
mov
les
mov
in
pop
inc
arpl
pop
push
and
mov
lods
pslld
leave
xor
lahf
mov
sub
fstpl
dec
mov
fisubrs
mov
enter
xchg
dec
test
inc
sub
jl
jbe
loopne
inc
jae
jno
pop
push
pop
insl
mov
dec
sbb
outsb
les
jl
call
mov
ret
jo
pop
rol
fmul
mov
xor
pop
imul
inc
pop
in
orb
cmp
mov
fisubs
adc
sub
jbe
and
repz
pop
jno
xor
cmp
push
xor
jb
nop
sarl
fdivl
int3
pop
mov
je
orl
test
push
add
jmp
gs
loopne
xchg
mov
xor
mov
or
add
jo
dec
push
adc
jge
mov
adc
jo
dec
sub
out
lds
push
outsl
repz
xor
cmpsb
adc
push
mov
cmp
clc
in
ja
jno
xlat
scas
inc
stc
les
inc
sahf
gs
and
loope
movsb
mull
pushf
inc
rorb
divb
incl
into
mov
jle
pop
pop
sub
or
push
leave
jge
js
lds
mov
mov
outsb
jmp
pop
xor
push
sti
or
xchg
dec
int
xor
dec
in
pop
lea
popa
or
and
ret
xchg
insl
inc
inc
mov
mov
xchg
addl
pop
mov
mov
inc
jbe
out
ds
pop
out
int3
rclb
adc
adc
sbb
jb
das
bound
jmp
aad
dec
enter
jno
sub
pushf
idivl
mov
lret
sbb
push
adc
jle
pop
inc
and
xor
scas
jae
dec
xor
shrb
xor
outsb
xchg
sub
repz
mov
test
dec
cmp
sbb
sub
inc
push
pop
test
jl
cmp
xor
jp
dec
mov
je
outsl
xor
jmp
pusha
rol
xchg
dec
das
sti
push
pop
dec
shrb
or
add
clc
inc
stc
pushf
incl
sti
mov
loop
ffree
push
lods
cmp
addr16
push
inc
fstpl
test
xchg
mov
ficoms
mov
cmp
int3
aad
xchg
dec
push
loop
addr16
outsb
push
adc
rcll
xchg
xchg
jge
lods
out
mov
into
inc
dec
cmp
or
loopne
aad
fmuls
add
cmpsb
std
lcall
jmp
inc
arpl
cmp
int
sahf
adc
inc
xor
mov
jl
dec
mov
sarb
fcmovbe
and
in
scas
outsb
cmp
and
idiv
insb
xchg
insb
cmovno
dec
outsb
stos
jno
xor
cmp
sub
mov
stos
test
nopl
les
scas
xor
xor
or
push
mov
push
shll
or
enter
push
cmp
imul
push
mov
pop
fistps
testl
push
je
xchg
lret
shlb
popa
dec
mov
sub
lods
push
add
pop
jns
leave
push
iret
and
dec
inc
rorb
inc
pop
lods
movl
daa
pop
mov
lods
ja
sbb
mov
push
mov
push
jbe
iret
dec
insl
mov
dec
or
pop
adc
gs
and
jp
pop
aas
lods
imul
xor
ret
mov
stc
or
inc
lahf
repnz
fs
sbb
jns
pop
jge
pop
test
or
mov
mov
pop
cmc
sbb
push
xor
or
xchg
push
inc
jae
fincstp
clc
loopne
fdivs
data16
xchg
inc
leave
and
xchg
inc
fsubrl
inc
push
lahf
add
sarl
sub
rclb
and
mov
mov
or
fwait
int3
inc
adc
mov
jecxz
enter
jecxz
mov
push
cli
pop
insl
push
ficompl
xor
aad
adc
shl
ja
stos
cmp
outsb
call
jne
xchg
jb
and
add
jae
or
xchg
push
inc
int
sub
out
loop
clc
cmp
sbb
sbb
iret
mov
jmp
repnz
out
insl
mov
push
inc
pop
out
aad
inc
std
clc
lahf
imul
loope
push
sub
stos
fldl
dec
sbb
lea
ds
adc
dec
es
mov
call
xor
xchg
mov
lock
jb
or
or
sbb
jb
jns
int3
icebp
cmp
jb
cld
mov
insb
scas
jo
lock
pop
lods
add
sbb
test
divl
sub
popl
mov
sti
and
pop
outsb
repz
add
jo
mov
pusha
adc
cmc
loop
popf
mov
inc
push
push
pop
sbb
aad
fdivrp
inc
out
daa
subb
pop
sub
insl
or
sbb
inc
xor
add
sub
stos
test
bound
dec
fmul
mov
cld
jle
push
test
jo
shll
cld
push
scas
sub
ja
cmp
add
addl
rcll
imul
roll
jae
inc
mov
gs
int3
into
inc
stos
lret
outsb
loopne
mov
and
sub
pop
clc
mov
addl
popa
cmp
mov
sbb
inc
cwtl
push
test
lea
cli
adc
ja
xchg
push
xchg
push
pop
and
xchg
or
inc
mov
adc
jbe
pop
movaps
or
fildll
and
inc
cs
lea
stc
add
sub
pop
jp
out
mov
sub
repnz
cs
mov
jne
call
ret
leave
inc
orl
sbb
mov
inc
add
notl
mov
xor
shlb
mov
push
mov
jns
test
mov
ror
cmp
add
inc
or
flds
divb
loop
jbe
daa
dec
popf
inc
pop
add
lods
sbb
mov
aas
jp
imul
push
outsl
inc
cs
bts
xchg
push
push
cmpb
adcb
adc
inc
inc
add
enter
cmpsb
decl
fwait
ja
push
ja
fs
test
cltd
xor
sahf
xor
fsubl
pop
adc
dec
sti
int3
fiaddl
add
fucomip
push
and
push
mov
add
pop
jle
push
sti
leave
pushf
adc
sti
jecxz
cmp
sub
dec
cld
dec
xchg
mov
je
xchg
inc
lds
sub
movsl
xchg
imul
and
add
jb
mov
xor
test
push
and
ret
xchg
jbe
jae
bound
punpckldq
sbb
test
pop
push
in
bound
push
cmpsl
jno
out
dec
xor
mov
cmpsb
xchg
test
insl
test
jp
rcrb
mov
pushf
mov
xor
imul
lods
push
mov
int
push
push
das
xchg
jb
ret
push
inc
inc
test
lds
mov
push
aam
mov
scas
xchg
movl
iret
mov
mov
outsb
loopne
add
out
inc
das
jmp
mov
xor
pop
int
push
lods
mov
pop
icebp
sub
cmc
out
fildl
fildll
lret
push
in
sbb
lods
xchg
fstpl
xchg
invd
adc
mov
lret
jb
inc
push
lods
xor
pop
add
fbld
iret
mov
lds
cmp
jmp
in
mov
pusha
or
jo
pop
push
cltd
ss
add
push
aad
bound
sbb
add
shrb
push
divl
or
mov
xchg
sub
call
pop
ret
cmpsl
lods
xchg
mov
lcall
jge
pop
lods
daa
std
int
dec
fldpi
es
jns
pushf
and
shr
mov
in
xchg
push
lea
cmp
sbb
push
ds
imul
imul
jns
pop
loop
cld
iret
stos
jle
sar
xor
pop
insl
test
xchg
addb
fsubrl
xchg
sbb
inc
scas
fwait
push
jbe
loop
push
mov
mov
or
std
and
xchg
xor
loop
push
mov
xor
add
push
sbb
shlb
cmp
add
mov
mov
gs
push
xor
sbb
movsb
fistl
nop
jmp
fldl
sti
pop
xlat
pop
jns
int3
imul
dec
pop
pusha
in
jl
shl
std
data16
and
dec
jmp
and
sbb
sub
mov
xchg
adc
jmp
inc
dec
cld
das
jno
popa
leave
hlt
pop
inc
dec
jns
dec
push
push
adc
fs
call
inc
fwait
inc
xchg
mov
pop
push
pop
xor
mov
cs
mov
push
xor
dec
xor
das
sarb
xor
sbb
sbb
mov
mov
dec
test
pusha
push
jecxz
sbb
lcall
xchg
lods
sbb
cmpsb
lret
ds
xor
cs
xchg
lods
in
mov
gs
or
add
imul
push
sbb
xor
hlt
testb
mov
inc
and
sbb
aaa
mov
ud2
nop
mov
subb
cmp
push
insb
cmp
cmp
push
ret
movsb
lods
stos
dec
shll
mov
inc
lock
push
mov
xlat
je
xor
pop
mov
jb
jmp
data16
es
add
inc
mov
or
test
xchg
xchg
adc
inc
mov
pop
xor
mov
pusha
aad
sub
push
std
cmp
test
push
lret
fiadds
ror
aad
aam
jmp
repz
pusha
repnz
jmp
push
add
int
add
xorb
xchg
insb
fwait
shll
jge
subl
jl
mov
adcl
loop
sub
pushf
mov
es
mov
inc
fcmovbe
add
push
jmp
xor
fisubrs
or
push
push
mov
push
and
addr16
mov
aad
adc
xor
out
cmp
lods
adc
inc
add
cmpsl
jae
sbb
dec
imul
adc
mov
clc
add
xor
push
sub
outsl
inc
or
in
dec
pop
vpshlb
pop
call
add
inc
xchg
xlat
out
stos
pop
repnz
jp
cltd
adc
or
imul
popa
aaa
sarb
ljmp
jge
stc
in
dec
aam
or
or
xchg
sbb
dec
in
and
rorb
iret
dec
adc
dec
into
xchg
xlat
push
enter
fdivrp
jmp
outsl
adc
fistps
mov
cld
int
pushf
ss
add
or
pop
xchg
dec
cmp
idiv
inc
xor
cmp
xchg
pop
xchg
add
cmp
icebp
sub
dec
sbb
sbb
lret
cwtl
fidivrl
shll
push
fidivs
cmp
dec
orl
or
fwait
sbbb
xor
loopne
in
gs
xor
mov
imul
dec
or
insb
cli
je
lock
cmc
push
sti
jo
sub
nop
scas
dec
jno
and
pop
adc
xchg
fstps
inc
lea
test
push
sbb
je
in
lahf
lds
xor
dec
negl
scas
cmp
sbb
gs
jl
jg
and
std
fucomip
mov
lret
insl
mov
jns
xor
dec
xchg
mov
push
fimuls
jnp
mov
ret
pop
dec
repz
sub
imul
pop
sub
pop
and
push
scas
lret
cmp
outsb
cmp
aad
shll
lock
movsl
and
iret
stos
divb
push
lods
js
mov
sbb
out
mov
shrb
or
test
inc
add
lret
pop
mov
leave
imul
add
je
dec
mov
daa
movsl
mov
stos
aam
mov
pusha
cmpsl
inc
dec
push
mov
shll
test
bound
push
das
push
or
inc
jae
pushf
cmpsl
inc
rep
dec
dec
enter
push
jl
and
cmovs
out
imul
and
movsb
testb
mov
test
mov
sub
sub
push
pop
push
test
dec
les
fbstp
fistpl
pop
push
lods
cmp
push
sub
adc
int
rol
inc
dec
call
addl
into
repnz
pop
xlat
icebp
outsl
jns
dec
jb
cmp
repnz
jnp
mov
leavew
loop
add
xchg
or
xor
mov
scas
stos
push
pusha
es
lret
adc
lods
and
or
sarl
jle
dec
rclb
pop
out
jmp
aas
imulb
adc
mov
pop
lods
push
push
adc
repz
jmp
notb
lahf
idivb
vandps
loop
inc
dec
cltd
mov
inc
fcmovu
arpl
out
pop
add
lods
mov
dec
int3
ja
outsl
jnp
hlt
push
aas
mov
test
adc
jecxz
jmp
cld
lock
sub
jg
cmpsb
out
fsts
sbbl
aaa
mov
adcb
int
outsl
pusha
pop
jmp
add
jns
mov
pop
mov
mov
add
cmp
inc
push
jl
adc
mov
mov
fiaddl
ja
addl
fidivrs
and
dec
mov
jmp
pop
pop
or
inc
lahf
divl
aad
mov
jle
add
ret
in
jp
push
movsl
inc
inc
or
mov
lea
jle
mov
dec
nop
dec
int3
neg
sbb
testl
faddl
dec
lods
in
mov
imul
sarb
imul
dec
aam
fdivl
fst
cs
leave
mov
push
inc
and
inc
loop
sbb
rol
xor
xor
ljmp
inc
jmp
mov
dec
dec
leave
negb
xchg
aaa
aam
push
mov
xor
imulb
xchg
and
xor
dec
stos
or
mov
jbe
xor
scas
sub
inc
pusha
fucomp
pop
outsb
jge
pop
jle
xor
pop
xor
or
pop
cli
loopne
inc
fwait
push
dec
flds
mov
push
cmp
negl
add
xchg
test
mov
xor
shl
enter
std
cli
add
inc
xchg
aas
cmp
xchg
sbb
xor
sub
xorb
ja
addr16
cli
imul
fisttpll
mov
sbbb
mov
sub
jne
xchg
jmp
xchg
mov
adc
push
cmp
xchg
push
dec
aam
stos
pop
push
push
cmp
addl
lret
ret
adc
sub
clc
popf
fimuls
dec
and
pop
dec
add
jno
movsl
mov
dec
jbe
xor
adc
adc
imul
xor
aas
mov
jmp
mov
test
sbb
dec
cmp
test
pop
push
push
push
shrl
es
aaa
sub
or
cmp
lcall
insl
iret
out
movsb
mov
mov
cltd
adc
ret
lahf
fisttpl
les
xchg
push
push
cwtl
aam
ljmp
pop
outsb
mov
cmp
sub
shrl
sub
mov
dec
divb
and
sbb
sar
mov
cmp
lret
cmp
mov
sbb
add
or
xchg
or
fsubrs
lds
aaa
aad
in
dec
dec
mov
fisttps
cmp
jne
and
stc
cmc
icebp
ljmp
shlb
sub
fstpl
push
lret
push
cmp
out
mov
mov
test
adc
sbb
lea
push
sbb
addb
flds
out
arpl
icebp
xor
add
test
cmp
mov
aaa
daa
clc
scas
lahf
or
mov
push
out
mov
fwait
add
dec
mov
mov
cli
mov
push
aad
jnp
sti
jmp
outsl
mov
dec
lods
adc
ret
push
in
push
mov
mov
imul
inc
cltd
add
das
sti
stos
cs
jecxz
in
adc
add
ficompl
das
mov
pop
cmp
xor
insb
mov
loopne
mov
shrb
ret
jg
push
sbb
movb
cltd
adc
rclb
dec
cmp
push
push
push
fdivrs
hlt
mov
mov
or
xor
fbld
xor
sbb
add
inc
dec
dec
lahf
cmp
ret
sbb
mov
cld
cmp
in
pop
xor
dec
jmp
in
js
fmull
pop
xchg
mov
mov
dec
dec
adc
mov
dec
inc
cli
xchg
test
jecxz
jns
or
fidivrl
fcoml
mov
mov
add
loop
push
addr16
cmp
push
push
sbb
out
pop
add
add
xor
cmp
pop
and
testb
jae
mov
rol
int3
insb
loop
test
bound
xlat
push
mov
insb
insl
inc
scas
inc
out
pop
mov
push
das
and
xor
popf
push
push
pop
and
sub
or
pop
or
adc
pop
mov
lds
dec
mov
insb
fisubl
arpl
faddl
xchg
dec
inc
add
push
sub
icebp
orb
aad
cmp
roll
push
xor
mov
jmp
xor
inc
and
or
dec
adcb
xchg
dec
scas
xor
cmp
ror
test
fcoms
popa
cmpsl
out
insb
jns
dec
test
cmpsb
call
mov
push
dec
pop
xchg
push
push
xchg
jne
test
sbb
jge
jp
shrl
das
xlat
into
imul
dec
bound
jbe
icebp
jnp
out
inc
imul
loope
pop
das
dec
mov
clc
jns
lret
jb
ror
ljmp
fsubs
mov
add
or
xor
push
dec
adcl
inc
sub
dec
cs
subl
dec
aas
popa
scas
or
out
push
push
mov
mov
xlat
cmc
add
aaa
push
lcall
rcll
mov
xlat
or
sbbl
jge
xchg
mov
xchg
in
rclb
std
cmp
inc
shr
nop
ret
lock
push
test
jle
data16
mull
in
or
xlat
in
js
mov
adcl
ljmp
add
orb
dec
cli
xor
test
repz
ficompl
or
mov
or
push
inc
test
in
stos
test
aaa
pop
dec
xchg
add
rcrl
repnz
jmp
and
sahf
cltd
mov
push
int
fcompl
gs
push
das
inc
pop
push
xor
mov
mov
sub
xlat
mov
das
les
push
lret
orb
mov
sub
subl
push
fistpl
xchg
xor
orl
dec
sbb
dec
loop
lods
and
movsl
imul
push
cmp
dec
insl
cmpsb
daa
mov
mov
xor
dec
and
pop
push
dec
push
lea
cmp
or
loopne
je
out
movsl
adcb
testl
pop
dec
shrl
jecxz
jg
mov
ss
dec
cmpsb
inc
push
iret
fiaddl
dec
sahf
mov
scas
sti
in
pop
pop
push
push
mov
sbb
push
adcb
xchg
add
mov
and
mov
pusha
cmp
fistpl
push
ljmp
sub
std
or
and
cli
outsb
js
dec
test
adcl
or
dec
mov
fbstp
sbb
push
dec
mov
add
call
add
imul
inc
jnp
push
aas
and
cmp
mov
jp
scas
push
ss
pop
dec
sub
mov
lret
lods
jns
or
out
inc
dec
cmp
xor
sti
dec
xchg
sub
sub
pop
adc
inc
xchg
dec
add
outsl
sub
xor
loopne
mov
ja
inc
rolb
dec
push
jp
nop
cltd
stc
int3
jb
test
or
enter
cmc
mov
xchg
push
inc
jge
push
push
dec
lret
aam
fsubl
jp
xchg
and
and
sub
frstor
mov
in
cmp
jns
and
pop
sub
ret
es
jmp
jp
cmpsl
adcb
jge
jb
dec
sbb
int
dec
testb
mov
aas
outsb
jecxz
xor
jae
jge
std
push
sbb
pop
fwait
gs
inc
push
ret
adc
push
dec
data16
xor
dec
call
inc
addl
dec
adcl
dec
lahf
xor
pop
add
mov
test
sahf
sub
loop,pt
movsb
mov
dec
sub
loopne
dec
nop
push
dec
ficomps
xchg
jae
pop
addr16
dec
call
insl
cmp
xchg
stos
lahf
in
shll
js
mov
aas
cmp
repz
sub
and
xlat
mov
shll
pop
inc
orb
dec
cmc
loope
std
sub
aas
jge
cmp
sub
inc
jle
lret
test
ja
adc
pop
add
lea
data16
mov
pop
push
ds
push
into
add
jno
xchg
and
lahf
pop
inc
lcall
scas
scas
je
mov
xor
add
fwait
dec
test
rorb
dec
pop
add
jp
sbb
enter
jns
ret
pop
roll
cltd
fxch
inc
push
fists
movsl
mov
lcall
adc
sub
jbe
xchg
rorb
dec
sbb
xor
mov
mov
ret
pop
nop
jge
les
xlat
xchg
sbbb
js
jecxz
cmp
cmpsl
in
es
sbb
adcl
and
sti
negl
cli
sub
dec
inc
pop
arpl
push
xchg
lret
mov
cmp
aam
sub
testl
cmc
mov
call
cmp
jo
lods
pop
or
sbb
dec
inc
dec
push
aam
push
push
sub
movb
ja
mov
outsb
in
nop
mov
inc
out
cmp
imul
lds
pop
shll
sub
mov
mov
add
inc
or
push
pop
add
xlat
into
or
jns
je
inc
pop
loopne
or
jle
imul
xchg
jecxz
xor
mov
lret
dec
lock
enter
jae
or
gs
inc
pop
loopne
push
dec
mov
les
imul
iret
sbbl
ret
leave
dec
aad
paddd
ljmp
ficomps
pop
adc
rolb
mov
dec
lds
pusha
clc
fsts
sbb
sub
das
xchg
pop
rorl
dec
push
jmp
adc
inc
dec
and
imul
int
fwait
pop
or
mov
lds
fs
and
inc
cmp
push
shrb
pop
mov
xor
sub
orb
mov
ds
and
ss
loop
mov
mov
inc
jmp
imul
jb
mov
xchg
hlt
scas
push
dec
fdivrs
test
push
dec
pop
leave
push
ret
mov
pusha
mov
dec
pop
aaa
mov
add
imull
inc
repnz
dec
xchg
insl
insb
lahf
jl
mov
ss
jb
mov
ds
xchg
jae
sbb
and
mov
jno
and
sbbb
push
mov
sub
or
testl
out
cs
jl
lods
iret
sbb
pop
push
mov
xchg
mov
jb
or
jae
and
dec
loope
test
mov
jbe
sub
lea
dec
daa
lret
repnz
dec
popa
or
lea
adc
lock
jg
jmp
cld
pop
ret
dec
rolb
add
mov
pop
push
mov
and
xlat
dec
insl
push
testl
pushl
mov
push
dec
stc
cld
aas
sbb
pop
mov
push
or
outsb
inc
pop
fs
test
stos
push
ljmp
cmp
push
data16
push
lahf
or
push
mov
dec
out
rolb
mov
mov
sbb
out
sub
jns
stos
push
push
dec
push
xchg
add
gs
nop
ret
orb
dec
bound
popa
test
xor
sub
cld
jmp
or
cltd
cmp
jno
dec
and
cs
clc
add
fisttps
inc
pusha
sbb
dec
movsb
outsb
mov
mov
dec
mulb
mov
imul
in
sti
and
insb
fisttpl
mov
outsb
add
ljmp
ret
ret
sbb
inc
fstpt
dec
mov
cmp
popa
scas
aas
push
pop
dec
mov
add
pop
fdivrp
orl
in
sub
dec
imul
pop
mov
sbb
add
fsubl
mov
sahf
mov
shrd
adc
inc
insb
and
inc
loope
inc
mov
lea
loopne
xchg
push
int3
cwtl
mov
popf
xchg
jg
sbb
imul
scas
mov
push
aam
push
jbe
xor
pop
push
out
ret
imul
dec
push
mov
call
pop
xchg
xchg
jo
out
xor
shll
adc
inc
daa
xchg
push
dec
jno
sub
cld
or
ffreep
add
mov
dec
lods
iret
pop
leave
fsubrl
and
jmp
pop
jo
call
jge
imul
jg
enter
and
mov
push
add
imul
dec
mov
scas
movsb
add
es
mov
xchg
das
imull
xchg
rol
or
or
jne
cld
and
dec
push
into
lret
or
loope
push
pop
fwait
adc
out
movsb
push
sbb
and
leave
cmpsl
push
nop
inc
jle
lret
mov
mov
pop
daa
mov
jne
jg
cmp
leave
or
cmp
dec
lea
push
inc
push
dec
les
daa
mov
cld
push
adc
or
sbb
cmp
in
and
test
gs
and
lods
les
or
cmp
inc
pop
cmp
mov
xchg
int
and
push
push
movsb
xor
notb
ficomps
stc
jb
jo
test
mov
out
mov
mov
scas
inc
dec
dec
mov
into
push
fwait
xlat
out
int3
inc
mov
dec
scas
cmp
inc
ror
push
xor
jne
into
icebp
mov
and
and
arpl
pop
dec
jecxz
sahf
lods
das
pop
fisttpl
push
xchg
shr
jb
out
leave
inc
mov
mov
jo
sbb
jmp
push
cld
xchg
adc
sub
pop
pushf
pop
xchg
xchg
shl
scas
add
inc
rcrb
sub
pop
leave
lock
and
cmpsb
out
xchg
sbb
int3
dec
sbbb
dec
fld
add
and
xor
dec
mov
addr16
jo
popf
ds
je
mov
cs
xor
or
testb
inc
rcr
cvtdq2ps
jns
std
mov
rcrb
pop
or
mov
mov
xchg
dec
push
fwait
dec
push
inc
adc
nop
dec
pop
out
pop
dec
loopne
in
xchg
xchg
outsb
dec
sub
mov
sub
ja
add
divl
dec
mov
mov
dec
inc
rep
xlat
xchg
pop
or
imul
pop
je
add
cmpsb
insl
dec
int3
cmp
pop
incl
xchg
mov
mov
add
inc
idivl
dec
and
mov
into
inc
mov
clc
dec
das
mov
add
xlat
pop
imul
xor
dec
dec
lods
imul
push
dec
pop
cmp
push
int3
pushf
adc
test
inc
inc
nop
pop
jecxz
jo
xor
loope
pusha
and
fcmovb
sbb
add
mov
xor
push
rorl
mov
push
lock
ds
test
push
xor
dec
std
mov
out
out
dec
out
cmpsl
jmp
dec
mov
sub
insl
jno
clc
fldcw
pop
cs
daa
and
daa
dec
pop
and
testb
dec
adc
inc
mov
push
mov
or
rolb
lcall
xor
enter
lret
dec
nop
pop
es
jecxz
bound
dec
sahf
pop
aas
fsubr
std
jb
lcall
decl
ljmp
repnz
mov
mov
sbb
dec
jne
fistpll
aam
pop
and
or
cmp
lea
cmpsl
push
mov
pop
aaa
inc
fcoms
mov
sbb
aaa
dec
lods
pop
or
push
sub
test
sbb
jmp
out
add
loope
faddl
ret
mov
lret
xchg
orl
scas
dec
jle
mov
dec
mov
dec
sbbb
orb
mov
clc
imul
sub
lret
jmp
fcomps
and
or
dec
es
jl
out
jo
dec
repz
imul
xchg
push
in
xchg
inc
add
cmp
nop
add
cmp
dec
add
jle
les
fmuls
shl
pop
enter
dec
jns
fdivr
notl
push
mov
mov
or
fldcw
addr16
lds
push
repz
ss
shrb
bound
cmp
mov
clc
ret
sbb
out
repnz
sbb
xlat
add
dec
fs
mov
adc
mull
insb
mov
mov
inc
inc
fidivrs
mov
leave
lods
jecxz
mov
stc
test
push
arpl
mov
call
sbb
clc
pop
pop
xchg
mov
mov
jb
loopne
mov
test
jmp
ljmp
cmp
mov
hlt
mov
add
daa
test
jbe
cltd
inc
ds
pop
xlat
loop
sahf
out
push
xor
xchg
push
mov
lods
scas
jne
daa
lods
pop
loope
pushf
cmp
mov
sbb
mov
or
outsl
and
insl
ret
push
sub
adc
sub
sti
mov
pop
cli
mov
pop
pcmpgtb
subl
inc
lcall
stos
enter
inc
cmpsb
push
test
lock
mov
adc
test
fsts
mov
jnp
mov
pop
fimull
push
and
push
jmp
xchg
jg
enter
mov
mov
leave
adc
add
into
inc
pop
rol
push
and
movsl
aas
xchg
aad
iret
fdivr
pop
roll
xor
inc
sub
push
rcl
inc
mov
roll
aaa
int
pop
lds
push
jae
ret
sbb
inc
push
mov
pop
ret
sbb
shrl
js
inc
addr16
or
cmp
xchg
rclb
sahf
icebp
mov
nopl
mov
int
bound
dec
out
jmp
ret
inc
mov
fistpll
xlat
xchg
and
inc
pop
enter
cmp
pop
pop
testb
mov
scas
sbb
cmp
mov
int
adc
mov
xlat
mov
or
movsl
xchg
push
sbb
mov
addb
jg
push
clc
push
inc
testb
xor
subl
fs
jmp
pop
cmp
loopne
fcompl
jno
loope
test
cmp
jno
sarl
push
cmp
shl
add
mov
dec
pavgw
cs
insl
push
arpl
push
inc
cmp
xor
cmp
mov
jle
test
enter
fs
dec
ds
pop
test
push
lea
sub
push
xorl
out
mov
dec
divb
fstl
stc
dec
int
arpl
fisttps
or
mov
cmp
push
jle
jnp
fldenv
push
cmp
clc
inc
push
clc
arpl
pop
into
xor
loopne
or
jle
mov
popa
dec
rolb
push
inc
in
cld
outsl
out
push
push
or
jae
xor
push
adc
int
ret
fwait
adc
iret
out
fidivl
dec
add
mov
loope
and
add
pop
push
mov
leave
inc
outsb
sub
scas
test
xchg
lock
or
mov
push
sub
add
pop
push
insl
xchg
jns
data16
cld
push
lcall
xchg
jb
jae
rcl
mov
pop
dec
test
jl
add
lahf
push
xor
cld
loopne
xor
sti
inc
jp
into
xor
jl
jmp
push
lods
sub
test
repnz
leave
sub
mov
push
cmp
rep
adc
stos
inc
outsb
dec
inc
and
sbbb
mov
data16
fildll
mov
and
daa
test
cmp
push
lods
xor
push
xlat
das
jnp
incl
mov
fadds
inc
and
lods
xchg
in
xor
lret
dec
jmp
testl
sbb
int
enter
fcmovnbe
push
in
push
mov
add
jmp
pop
xor
lcall
test
push
ss
sahf
mov
imul
xchg
dec
insl
ret
aaa
loop
inc
sti
xor
mov
xor
test
push
adc
test
and
xor
mov
mov
jo
inc
or
adc
shlb
cmp
add
sbb
adcl
lods
jae
or
cmp
sbb
jb
stos
cmp
mov
fisttpl
pop
inc
xchg
mov
inc
test
xor
mov
and
push
or
dec
inc
add
mov
das
js
pop
push
or
sti
outsb
fwait
xchg
test
inc
mov
pushl
cmp
mov
sub
pop
sbb
fisubrl
sahf
cmpsb
clc
adc
push
jp
or
xor
pop
pushf
daa
pop
inc
xchg
imul
ss
in
lea
pop
dec
pop
inc
call
xlat
jecxz
mov
das
outsb
adc
add
push
enter
fadds
fnstcw
and
ret
je
imul
movsl
call
jg
in
sti
jb
jnp
in
jle
dec
add
or
adc
lods
and
dec
je
cmc
add
dec
mov
movsb
push
call
sbb
popa
cld
dec
outsb
cmpsl
adc
aad
pop
push
dec
or
nop
sbb
adc
adc
jae
scas
dec
ljmp
push
popf
jmp
mov
pop
test
fsubr
movsl
xchg
jo
in
jns
in
jmp
mov
imul
ss
jecxz
ja
add
mov
inc
mov
push
ss
jbe
pop
aad
popa
inc
and
pusha
mov
hlt
or
push
cmpsb
insb
lods
inc
xchg
xor
or
fsts
idiv
sahf
inc
mov
pop
xlat
pushf
jge
cmpsl
push
pop
fldt
cmp
inc
lcall
push
mov
jmp
jmp
dec
inc
test
jge
xchg
test
dec
and
cmp
cmp
mov
jbe
mov
ljmp
sbb
rorb
hlt
dec
in
jecxz
movb
ficoml
mov
test
imul
xchg
mov
sbb
ror
neg
out
dec
and
por
mov
dec
testl
adc
jbe
cmp
sbb
fstl
push
jg
or
xchg
test
sub
iret
cli
push
in
stc
adc
cld
scas
mov
push
ffreep
iret
dec
enter
push
pop
fadd
or
push
pop
mov
jnp
aam
imul
xor
jbe
mulb
xor
push
dec
call
cmc
test
sti
lret
sbb
ret
or
testb
xor
push
fildll
aam
or
cmpsb
fs
sub
inc
stc
adc
lea
and
push
js
popa
pop
inc
inc
sub
cmp
dec
test
xor
xor
xchg
pop
pop
push
mov
mov
add
insl
jp
rorl
sbb
mov
mov
adc
xor
xchg
cmc
test
imul
xchg
fwait
jnp
nop
loopne
jnp
insl
pop
inc
lods
dec
xchg
fisubl
jp
mov
inc
pushf
push
leave
test
inc
push
call
lods
lea
pop
push
and
xchg
or
xor
add
dec
inc
sbb
jecxz
or
fdivrs
aas
pop
aad
movaps
pop
push
xor
inc
push
add
push
push
test
sub
clc
lahf
dec
bt
fmulp
scas
cli
jecxz
push
int
std
sbb
xchg
std
lods
inc
cmpsb
mov
mov
lock
sbb
or
pop
andl
jnp
popa
push
mov
inc
mov
dec
inc
jp
clc
jmp
fsubp
loopne
fsubrs
jne
cltd
lret
decb
or
fcomps
iret
fidivl
mov
pop
sub
lock
popf
loop
push
push
fists
mov
test
inc
jg
imul
out
xor
sbb
sub
inc
mov
jmp
jmp
fistpl
test
dec
addr16
add
arpl
sti
test
ret
mov
sub
bound
cmp
pop
jnp
pop
enter
out
lock
out
ss
imul
inc
int3
xor
call
add
dec
sahf
mov
jns
cmpsb
jp
dec
inc
es
mov
aaa
pop
add
jle
dec
push
int
jle
mov
test
cmp
jmp
cmp
jno
arpl
pop
mov
cmpsb
pusha
inc
pop
push
cmpsl
jle
daa
jge
out
mov
scas
mov
dec
adc
dec
dec
push
mov
ret
insl
jae
sbb
shll
adc
stc
mov
add
pop
dec
inc
xor
xchg
lods
rolb
push
push
push
dec
ds
mulb
adc
std
das
rcrb
inc
jle
sub
imul
cmp
inc
adc
add
in
mov
push
aad
push
clc
out
fsts
mov
xchg
jae
xchg
and
sbb
mov
shl
mov
icebp
pop
popa
fbld
jnp
jle
test
test
das
jp
pop
ja
sarb
sub
xor
stc
shr
mov
cmpsl
jmp
icebp
sbb
addl
dec
push
cld
jmp
add
cmp
inc
dec
fstpl
insl
sbb
aaa
gs
popa
xor
test
or
and
mov
add
jge
sub
sbb
pop
adc
pop
jp
dec
insb
xchg
xchg
mov
mov
ds
fwait
xorb
loope
jmp
push
mov
jae
add
push
sbb
xchg
dec
xchg
roll
push
fdivrl
mov
mov
int3
adc
adc
pop
addl
test
imul
dec
loopne
pushf
push
cmpb
hlt
sub
ljmp
lret
and
push
mov
jg
pop
ret
repz
xchg
cmpsl
inc
or
jp
shl
lock
testl
adc
cmp
popa
cmp
dec
shrl
pop
xchg
xchg
dec
pop
xchg
sahf
test
add
pop
pop
pop
xchg
cld
loop
mov
repnz
inc
inc
rcrl
call
arpl
pop
cmp
adc
xor
subl
and
sahf
movsb
addl
cmc
int3
add
std
pop
pop
inc
mov
inc
incl
mov
fdivrl
inc
inc
push
mov
mov
ljmp
lcall
and
les
cltd
pop
scas
adc
loopne
filds
test
xor
dec
jle
mov
xchg
insl
loope
lods
xor
int
mov
or
sti
ret
dec
jge
cmp
add
jbe
cmp
aad
adc
test
into
call
push
add
jge
xor
bnd
sbb
enter
adc
sbb
ficomps
sbb
fildll
int
arpl
xorb
mov
jae
mov
pop
xchg
jmp
lret
fcmovnu
jmp
inc
dec
sub
xor
ficompl
lods
inc
lds
lret
xor
lods
mov
shll
push
cmp
mov
sar
jl
jg
sbb
xor
mov
lods
js
sub
adc
ficoms
inc
stc
sahf
xor
pop
jnp
ds
icebp
fimuls
xchg
lock
lcall
xor
lret
xor
lods
sbbl
in
popa
mov
mov
js
je
in
xor
repnz
cmpb
add
or
dec
adc
subl
je
mul
xor
fnsave
pop
adc
dec
push
int
mov
xor
push
cmc
roll
push
test
xchg
dec
enter
cmc
scas
scas
xchg
dec
mov
inc
inc
mov
rcrb
cmp
loop
cmp
sbb
loop
and
dec
mov
inc
fistl
adc
xchg
xlat
xlat
mov
loop
jl
mov
in
sbb
jns
xor
or
std
addr16
rorl
fxch
pop
dec
enter
sbb
shlb
test
add
or
jae
incb
inc
sbb
cmp
lods
pop
jbe
scas
lcall
dec
push
insb
jle
shrb
loope
jb
mov
sbb
and
or
push
pop
into
test
dec
fcomp
mov
jmp
push
cld
stc
sahf
xchg
fwait
jecxz
das
jle
xchg
inc
jp
push
xchg
add
mov
fsub
loopne
mov
in
ss
lea
mov
inc
mov
sub
jp
addb
cli
sti
jl
sub
dec
xchg
hlt
mov
outsl
sub
in
cmc
loop
pop
ds
sub
xor
mov
push
inc
xchg
leave
inc
mov
push
in
ficomps
aam
mov
cmp
mov
ret
sbb
adc
mov
insb
adc
in
jo
fimuls
test
int
test
or
dec
mov
mov
push
cld
and
inc
xor
sub
notb
mov
inc
add
fadds
pop
mov
test
jns
mov
lods
outsb
xor
enter
adc
popf
insb
filds
pop
dec
popa
push
dec
cltd
mov
stos
sbb
inc
or
or
cs
jg
and
xor
xor
push
inc
gs
sbb
out
mul
mov
jmp
lcall
mov
lahf
fimull
cmpsb
mov
adc
dec
ret
add
cmp
fidivrl
cmpsb
std
shll
sbb
push
sbb
bound
popa
cmpsl
lds
jp
out
add
lahf
fistpll
in
xor
fstpt
leave
dec
imul
dec
sti
sub
inc
fbstp
jae
xor
out
pushf
push
mov
mov
loope
adc
mov
sub
push
iret
xchg
aaa
xor
lds
cmp
hlt
sbb
pop
mov
in
xchg
movb
push
adc
aam
push
xchg
fstl
call
jns
lods
dec
push
dec
jnp
in
repnz
sbb
fidivrl
lret
outsl
jl
ds
add
aad
push
rorl
stc
or
lret
mov
push
push
push
jmp
aam
fimuls
enter
jmp
pop
push
mov
push
dec
pop
xor
mov
and
std
xchg
test
sub
dec
add
lods
mov
xchg
inc
stc
fnstcw
xchg
jnp
mov
aad
pop
divb
mov
rcll
aaa
popf
int
sbb
aas
or
sbb
iret
aaa
ja
clc
inc
or
xor
inc
mov
push
fcoml
inc
les
fwait
push
mov
ret
sbb
fstpl
loop
lods
mov
fsubl
adc
dec
leave
inc
mov
shrb
and
add
mov
loop
xor
cli
mov
mov
dec
repz
mov
faddl
sub
push
mov
push
sbb
xchg
sub
pop
cmp
jb
and
outsb
or
imul
jl
inc
inc
pop
jp
test
cmpsl
mov
pop
inc
les
inc
inc
mov
daa
pop
xchg
push
pop
jmp
jmp
jle
fcomps
xchg
dec
mov
push
mov
adc
cmpsl
xchg
adc
mov
js
cmp
jl
nop
pop
add
inc
push
mov
or
imul
imul
mov
pusha
pop
or
xlat
fistpll
jmp
jmp
and
int
ds
idiv
pop
ljmp
dec
js
pop
dec
shll
push
roll
jmp
pop
imul
push
sahf
push
loope
push
jnp
sahf
int
and
loope
mov
loop
dec
outsl
shlb
sahf
mov
clc
lahf
mov
xchg
mov
pusha
sub
xor
leave
mov
clc
lret
jo
add
mov
sbb
inc
xor
loopne
stos
fbld
push
jp
sahf
adcl
pop
inc
inc
xor
inc
cli
gs
cmpsb
sti
xchg
and
dec
popf
pop
test
lea
push
add
sbb
aad
mov
mov
or
dec
iret
cmpl
push
xchg
dec
shlb
dec
dec
inc
std
loop
pop
inc
sub
cltd
push
sub
roll
into
xchg
dec
pop
push
lret
rorl
xor
stos
repnz
adcb
in
shl
pushw
pop
push
push
es
aaa
jmp
ljmp
xchg
jle
add
push
adc
subl
inc
mov
andl
jle
shlb
add
aaa
xchg
sbb
mov
mov
call
fdivr
subb
xchg
or
test
pop
jne
xchg
xchg
or
push
aaa
jg
movsl
mov
sub
adcl
dec
insl
loop
mov
out
dec
xor
fwait
adc
in
dec
imul
mov
lret
adc
pop
mov
cmp
sbb
xor
cmp
mov
out
dec
xor
sbbl
popa
or
das
enter
mov
out
es
mov
pop
adc
dec
xchg
test
mul
ss
push
xchg
add
push
xchg
pop
inc
movsb
mov
dec
xor
mov
jg
scas
push
dec
je
lock
push
jmp
cmpsl
jno
shrl
pop
addb
dec
or
cmp
outsb
mov
fcmovnbe
into
jmp
call
cli
cmpsb
cmp
aam
cld
aad
inc
dec
push
push
cmp
adc
iret
loope
sbb
lahf
loopne
ret
aam
dec
mov
cli
js
mov
pop
rorb
push
dec
aaa
dec
rorb
xor
lods
cmpsl
es
cld
add
cli
scas
repnz
fldt
out
and
pop
loop
fwait
int
xor
dec
test
adcb
cmp
or
das
out
sahf
leave
dec
insb
outsb
mov
sub
jo
lcall
mov
adc
cmp
mov
shrl
dec
and
push
xchg
shrl
sahf
ljmp
test
mov
mov
mov
lods
mov
inc
push
inc
mov
lret
and
pop
lds
push
adc
cmpsb
mov
mov
loop
ret
dec
dec
pop
dec
push
pop
push
jmp
push
pop
jb
adc
lock
out
call
decb
inc
lret
xor
xor
ficomps
lea
aaa
jns
xchg
mov
in
push
inc
popa
roll
dec
xchg
add
adc
sub
dec
jmp
jbe
out
dec
xor
enter
imul
popa
xor
add
dec
sti
outsb
xchg
push
or
test
xchg
mov
push
repnz
dec
lods
cmpsb
loope
pop
push
andl
dec
sbb
mov
cmpsl
ljmp
push
test
ss
out
insl
jmp
cmc
mov
sbb
xor
jnp
pop
dec
mov
roll
sub
push
mov
fldcw
add
stos
and
add
and
fwait
imul
or
lret
pop
sahf
xchg
scas
add
xlat
mov
out
sub
test
or
notl
sub
lret
sbb
jp
mov
sti
int
sbb
pop
jle
movsl
mov
daa
fs
inc
cmpl
mov
mov
in
mov
dec
hlt
xor
jmp
and
sbb
out
ds
dec
pop
add
mov
inc
icebp
in
rcll
push
fsubrl
push
and
or
mov
fdiv
pop
xchg
lret
xor
mov
push
clc
lods
inc
inc
enter
jnp
insb
insl
pushw
rcr
dec
mov
inc
jo
sbb
loope
sub
ds
inc
sub
idiv
dec
adc
repnz
or
ret
pop
dec
cld
ljmp
push
lret
cmp
mov
xchg
dec
mov
icebp
ljmp
xchg
xchg
push
dec
sahf
test
dec
lret
mov
or
dec
fwait
or
ficoml
aad
fstp
sub
ds
rcr
int3
or
dec
test
mov
int3
mov
xchg
mov
jns
lods
das
in
out
mov
mov
nop
cmp
mov
fsts
js
nop
je
dec
rcrl
sbb
sbb
in
lcall
jmp
or
cltd
push
inc
sarl
gs
add
leave
or
lds
movsl
int3
push
sbb
sub
sub
adc
jne
mov
rol
inc
pop
add
jns
stos
cmpsb
decb
movb
jae
dec
int
lahf
push
pusha
adc
inc
mov
push
idivl
and
push
int3
dec
inc
inc
jecxz
push
rcll
pop
mov
mov
dec
dec
adc
repnz
pop
adc
mov
into
aas
sub
loop
dec
cwtl
popa
inc
cmp
js
pushf
dec
or
out
xchg
cmpsl
ret
jmp
test
adc
dec
dec
stos
push
std
push
pop
ret
pop
xchg
pop
lock
test
sarl
ret
sub
popl
enter
out
adcb
xor
into
inc
push
sbb
mov
or
jp
ds
lods
daa
xchg
jecxz
daa
iret
pop
xchg
dec
loop
fwait
and
sub
inc
inc
lcall
adc
decl
and
adc
and
push
cltd
test
inc
push
adc
addr16
mov
cmp
push
mov
adc
dec
cmpsl
out
dec
stc
jb
inc
dec
test
pushf
scas
mov
or
mov
loopne
pop
mov
int3
rorl
bound
enter
mov
inc
loop
dec
push
aaa
aas
loop
cmp
sub
pop
addb
fsubs
ja
cmp
out
ret
pop
sub
dec
sbb
mov
push
mov
lods
lcall
push
arpl
ret
or
repnz
scas
subl
jno
xor
jne
das
cmpsb
inc
push
dec
dec
out
ret
mov
pop
adc
aaa
jmp
jg
cli
push
dec
fistpl
inc
fstl
or
jecxz
negb
push
sarb
call
cmp
fisubs
js
xchg
push
push
mov
jp
pusha
push
mov
jo
push
arpl
mov
inc
xchg
mov
jmp
and
dec
outsb
out
jmp
jne
adc
xlat
sub
les
sbb
xchg
dec
jg
xlat
or
push
mov
push
push
dec
in
mull
int3
jne
mov
push
cmp
fldpi
rclb
aam
imul
jle
xchg
aam
dec
dec
push
jo
call
and
cmp
mov
and
ror
push
in
inc
jl
jo
imul
mov
cmp
xchg
jp
scas
xchg
orb
cmpsb
xor
and
push
pop
testb
imul
adc
inc
dec
mov
and
sub
mov
aaa
and
mov
dec
addr16
movsl
sbb
test
xchg
rclb
push
sbbl
lods
mulb
mov
mov
pushf
sub
inc
std
ret
push
sub
jmp
gs
or
sub
pop
lcall
dec
pop
push
push
push
jl
and
imul
and
lods
fsubrs
mov
xchg
je
pushl
stos
lods
loop
jmp
lea
xor
je
pop
inc
jg
loopne
aas
mov
arpl
pop
dec
mov
out
pop
or
sub
dec
push
jge
push
xor
sbbb
cmp
sbb
fs
mov
push
mov
cmp
loopne
fidivl
xor
jl
out
mov
bound
cmp
nop
jb
jno
mov
cmpsl
and
sub
xchg
mov
imul
lods
sub
movsb
mov
inc
sub
jle
stos
mov
xchg
in
jle
or
add
dec
repz
or
inc
inc
scas
movsl
ja
mov
icebp
bound
roll
sahf
ficoms
mov
incb
fisubs
sahf
and
inc
mov
cmp
fmuls
xchg
mov
aad
inc
je
bound
imul
jg
push
cmc
mov
mov
pop
int3
mov
push
es
xor
leave
lcall
push
pop
mov
pop
fs
jae
pop
addb
push
jbe
das
imul
pushf
int
ret
xchg
push
rclb
nop
shlb
mov
fisubl
clc
mov
idivb
xchg
inc
out
lods
test
mov
push
xchg
xor
dec
sub
cmpsl
int3
xchg
rcrl
inc
push
mov
sbb
icebp
cmp
pop
pop
and
adc
and
clc
subl
loop
push
shl
cld
andl
sbb
scas
adc
arpl
push
push
mov
cmp
jge
sbb
xor
fcoml
xor
dec
mov
xchg
lods
pop
mov
ficoml
dec
adc
andb
pusha
sub
cmpsl
dec
or
cmp
pop
push
push
or
idivb
push
add
and
in
in
jns
popa
and
divl
js
jae
sbb
fs
pop
std
or
fdivp
loopne
jmp
mov
mov
pop
sbb
dec
push
addr16
ror
sub
adc
int3
add
outsb
test
dec
or
cmp
test
dec
add
cmp
sbb
add
loop
outsb
or
push
pushf
pusha
pop
clc
imul
testb
lods
jl
sbb
mov
or
mov
ret
fstl
test
pop
pop
insl
out
pop
push
sbb
cmp
pop
jle,pt
xor
xor
cmpsb
mov
lahf
adcb
dec
mov
jae
fdivs
lcall
lea
mov
jmp
xchg
xchg
jl
push
or
push
cmpb
enter
xor
push
ficompl
sub
adc
xor
pusha
mov
sbb
jg
bound
inc
leave
movsb
push
es
repz
sub
pop
pop
loop
xchg
ja
sbb
filds
cmc
fsin
mov
mov
insb
lods
adcb
push
pusha
je
mov
adc
lock
and
cmp
jno
scas
jecxz
mov
sbb
dec
mov
lret
adc
and
mov
push
cld
sbb
push
push
or
clc
sub
cld
mov
or
jmp
mov
xchg
inc
in
sahf
lock
add
popa
dec
and
inc
cmp
xchg
mov
cmp
jg
dec
scas
jnp
clc
push
pop
jmp
sbb
or
in
lcall
adc
pushl
mov
movsl
ljmp
mov
leave
inc
xor
mov
add
out
sbb
lret
mov
xchg
xchg
insb
jecxz
mov
xor
enter
jne
jo
loope
cmp
jle
xor
inc
sub
rcll
mov
loop,pn
jecxz
xlat
shlb
mov
jne
xor
popf
daa
or
in
bound
lea
mov
cmp
xchg
bound
call
adcb
inc
call
sbb
inc
and
bound
shrl
mov
mov
lock
test
cmc
xor
inc
mov
gs
cmp
xchg
fdiv
inc
cmp
inc
int
imul
dec
mov
enter
mov
or
fnstcw
and
inc
xor
into
mov
mov
bound
and
lds
pusha
int3
xchg
adc
xor
dec
xchg
xor
test
iret
jmp
inc
test
in
fisubrs
loope
fsubrp
movsl
push
testb
cmp
fldenv
in
mov
push
pop
nop
mov
dec
stc
push
enter
pop
repz
fstl
aam
sbb
ss
lea
test
jg
xchg
iret
leave
dec
and
fstps
fs
testl
pop
mov
push
mov
cmp
mov
imul
cmp
inc
push
dec
pop
cli
pop
mov
ljmp
cmp
ret
arpl
mov
repz
adc
xor
mov
xor
rorl
mov
pusha
mov
dec
add
cmpsl
or
sahf
mov
stos
and
leave
sbb
addb
sbb
cmpsb
dec
sub
xchg
leave
xor
dec
add
mov
pop
cmp
jb
xor
xchg
enter
fimuls
jmp
inc
add
sbb
addr16
mov
cmc
cld
ficompl
or
insl
ficomps
sbb
or
jle
sbb
jle
mov
mov
sbb
lods
jnp
js
jnp
fildl
push
sbb
dec
adc
aad
and
add
xchg
fs
negl
ret
clc
xor
pop
inc
out
cmp
int
sti
addr16
jmp
inc
loop
filds
jecxz
in
cmp
loope
imul
sub
loope
inc
movsl
xor
xor
rol
push
loopne
add
jae
sbb
mov
xor
repz
adc
lds
pop
inc
sti
push
inc
push
jns
xchg
xor
dec
push
jmp
fidivrs
jmp
stos
push
xor
js
lcall
xor
mov
stos
lods
movsl
dec
aam
pop
inc
xchg
fiadds
call
mov
or
cwtl
and
pushf
or
mov
ja
inc
pop
and
fcomi
jge
or
adc
mov
sub
dec
add
lahf
add
and
mulb
into
adc
mov
leave
leave
lret
rcrl
pop
ret
mov
jnp
orl
add
lock
neg
jecxz
leave
cwtl
sbb
fcmovb
sbb
cli
mov
dec
test
cmp
jmp
lret
hlt
inc
xchg
stos
push
mov
adc
inc
jle
mov
scas
aad
or
loope
xchg
lds
lret
pop
das
inc
pop
cmpsb
fs
data16
test
sub
mov
dec
cmp
ret
inc
mov
adc
push
iret
jl
or
mov
cli
fcomps
sahf
add
idivb
outsb
dec
insb
and
lcall
out
nop
sbb
jnp
sub
imul
dec
push
and
dec
sub
inc
jb
fsts
cld
xor
fsts
cwtl
pop
push
sti
arpl
mov
fbld
add
push
jae
mov
lods
lods
fsubrs
cmp
cmp
iret
inc
cmp
inc
fimull
pop
out
popa
xor
ret
pop
inc
pop
orb
lret
cs
data16
lea
pop
jl
sbb
aas
jo
lds
fnstcw
inc
xor
out
daa
dec
inc
clc
dec
lret
test
xorl
cwtl
xor
jae
mov
mov
dec
ret
push
pop
add
jle
dec
dec
cmpsb
sub
pusha
mov
shll
outsl
fwait
imul
frstor
fnstcw
inc
push
push
aas
or
pop
test
in
push
loope
mov
fucomi
hlt
ret
scas
mov
cmp
daa
in
xor
inc
inc
sbb
push
push
xlat
dec
jp
aam
das
fildl
stos
cmpsl
mov
cli
in
pop
mov
ds
fnstcw
std
imul
xor
popf
sub
push
or
xorb
jns
mov
or
jae
mov
dec
sbb
ficompl
int3
orb
mov
adc
xor
shlb
add
cmp
pop
jno
aam
fwait
in
test
xchg
mov
sub
lock
adc
leave
xor
push
adc
add
fisttps
push
push
call
jo
repnz
xor
iret
mov
push
mov
pushf
loope
or
xchg
loope
mov
push
dec
xchg
cmp
push
rcl
pop
cmp
jle
mov
cmp
mov
mov
pop
add
mov
fmul
cmp
mov
add
call
bound
insl
fstl
push
mov
into
push
outsb
enter
mov
inc
inc
clc
add
pop
sbb
lds
pop
shlb
shrb
cmp
or
cmpsb
jb
xor
les
out
or
lcall
es
cld
loope
jmp
cmp
xor
mov
add
jns
inc
mov
sahf
insl
lods
leave
or
xor
repnz
rclb
inc
cmpsl
lds
jb
gs
addr16
jbe
jle
jle
loopne
xlat
lds
inc
les
popa
lds
aam
add
sbb
mov
insl
aad
int3
pop
push
sbb
or
cmp
into
imul
shlb
lret
mov
sbb
in
fbld
dec
movsb
dec
mov
or
fs
or
imul
scas
adc
inc
pop
insl
fimull
cmpsb
and
mov
pop
add
dec
or
jnp
movsb
push
jbe
stc
xor
test
jmp
dec
test
repz
mov
add
mov
jecxz
or
cmp
enter
inc
test
sbb
dec
push
adc
mov
mov
inc
aad
ja
push
sub
fisubrl
cmp
dec
roll
jecxz
push
rclb
dec
pop
fwait
imul
dec
and
xchg
mov
dec
adcl
jg
xchg
clc
rcrb
adc
dec
dec
ljmp
sbb
push
adc
dec
add
cmpsb
dec
dec
test
inc
call
dec
ja
sbb
int3
movsb
or
push
pop
shlb
mov
dec
add
dec
mov
or
push
jp
dec
imul
loopne
sub
pop
or
jecxz
cltd
std
iret
mov
or
clc
lock
mov
push
dec
fimull
push
push
cwtl
ja
add
adc
inc
xchg
imul
inc
test
neg
inc
gs
jns
into
mov
orl
mov
cmc
xor
add
sti
fwait
jge
push
call
sub
jmp
sub
cmp
mov
mov
jns
adc
out
ret
xor
pop
sbb
sub
dec
dec
xchg
fdivrs
shrb
dec
sub
cmp
pop
arpl
jo
pop
add
shlb
pop
addb
int
dec
ret
xchg
mov
stos
dec
sbb
stc
stos
lcall
inc
aam
sbbl
or
mov
test
mov
xchg
rorl
dec
gs
je
daa
loopne
cmp
je
insb
aas
shrb
sub
in
jno
inc
dec
pop
rol
lea
loopne
jmp
and
lea
jae
fsts
xor
dec
ret
shrb
xchg
loope
mov
test
repz
rorb
add
xor
sbb
dec
push
and
nop
adc
dec
sub
cmp
jno
add
push
mov
add
dec
and
mov
dec
insb
stos
inc
sbb
jge
cmp
and
inc
lea
jmp
pop
jnp
pop
rclb
ror
dec
shll
out
cwtl
dec
shl
js
push
adc
pop
lret
jle
xor
dec
test
add
imul
push
cwtl
jl
cmpsb
cmc
push
cmp
lahf
int
pop
rolb
pop
jne
dec
sub
fnstenv
cmp
cmp
mov
lea
xchg
jl
push
dec
pop
or
stos
adc
loopne
pop
adc
push
clc
loop
dec
test
dec
mov
and
rorb
bound
stc
ret
add
pop
dec
inc
aad
mov
cmp
enter
out
xor
xor
jle
cmp
cld
xor
lret
repz
jns
jecxz
aad
dec
test
push
pop
pop
aas
sti
loopne
lcall
xchg
dec
mov
scas
rorl
les
push
adc
sub
jns
sub
adc
pop
aam
mov
lds
xorl
sub
lods
icebp
pop
cli
scas
or
pop
adc
adc
mov
mov
aaa
or
push
inc
ret
dec
jae
mov
xchg
psraw
jp
jge
cmc
shrb
subb
mov
das
adc
leave
mov
jmp
mov
dec
lahf
cs
add
stc
dec
nop
inc
leave
aam
inc
sub
jmp
outsl
mov
dec
aas
test
sub
and
jmp
mov
cli
add
idivb
jns
mov
fimuls
mov
shrl
test
scas
movsb
pop
adc
stc
sub
push
add
dec
xor
cmp
out
sbb
cmp
mov
scas
mov
aam
or
adc
mov
pop
in
and
dec
sub
pop
inc
dec
iret
sti
loope
lcall
cwtl
nop
pop
adc
sahf
jmp
arpl
sti
adc
dec
pop
add
mov
test
dec
subb
mov
in
andl
stc
call
dec
xor
mov
jge
dec
scas
pop
dec
xchg
mov
lock
cmp
xchg
data16
jo
repz
fisubrs
push
imul
scas
js
mov
scas
inc
or
lret
jb
mov
mov
iret
cmp
push
xor
dec
add
lcall
popa
jb
dec
icebp
dec
xor
mov
mov
iret
dec
xlat
mov
push
xchg
mov
mov
cmp
lea
popf
cmpsb
and
out
push
push
xor
sub
adc
xchg
or
or
mov
out
leave
mov
jmp
mov
dec
test
rorb
cs
dec
dec
and
push
sub
iret
dec
xor
rolb
xchg
dec
dec
subl
and
out
repz
insb
in
aas
sbb
xor
call
orb
push
dec
adc
stos
or
scas
fisttpl
nop
dec
roll
sub
insl
xlat
and
movsl
imul
out
sbb
pop
cli
int
daa
fwait
mov
push
mov
stc
sub
inc
dec
arpl
inc
dec
pushf
mov
mov
or
andb
fst
inc
xchg
testl
clts
sbb
aam
les
sub
stc
mov
dec
lahf
scas
mov
in
icebp
cs
fstl
add
insb
mov
leave
cmp
inc
shll
in
subl
inc
lret
aaa
push
adc
mov
jns
rcrb
lea
add
das
sti
test
mov
mov
inc
inc
jmp
xchg
mov
dec
pop
sbb
dec
jne
repnz
fmull
pop
loopne
fmull
ret
inc
stos
push
fstpl
stc
xchg
inc
mov
call
dec
inc
cmpsl
adc
ja
sub
dec
xchg
dec
jecxz
mov
loope
lods
dec
or
add
push
sbb
andb
fisttpll
rcrl
cmc
movsl
ss
dec
add
or
movsb
dec
sbb
out
leave
call
sub
inc
aad
lds
mov
sub
dec
out
dec
pushl
cmp
cld
daa
cmpsb
lds
repz
jg
xchg
sbb
out
and
test
pop
fisttpll
or
scas
imul
out
mov
pop
ret
push
mov
dec
dec
sub
xchg
mov
scas
mov
mov
aad
pop
dec
shrl
sub
iret
xchg
stos
dec
push
rorl
mov
dec
or
jae
test
data16
push
xchg
fwait
sub
mov
test
arpl
test
pop
jo
dec
stos
mov
leave
int
add
push
pop
leave
mov
out
int
inc
xchg
pop
cld
sub
arpl
or
and
cltd
dec
ljmp
cmp
int3
cld
sub
test
inc
mov
rorb
loop
shlb
dec
or
xlat
push
aam
mov
into
test
imul
cmpsb
sub
mov
sbb
and
jp
daa
sub
or
fimull
mov
xlat
test
adc
cmpsb
and
cs
inc
dec
sub
bound
sub
dec
cmp
iret
add
adc
aas
or
arpl
std
or
out
or
mov
inc
aam
mov
sbb
out
add
sub
stc
scas
push
dec
arpl
fwait
dec
jnp
dec
fnsave
fcomps
or
loop
cmp
xorb
outsb
test
or
push
push
aam
and
cmp
movsl
pop
push
fldcw
push
or
mov
movsb
fisttpll
and
sub
sub
nop
push
mov
adc
filds
negb
icebp
loop
hlt
or
leave
stc
cwtl
inc
sahf
dec
jne
adc
mov
dec
ja
xchg
or
int3
in
fistpl
out
pop
aam
out
sub
pop
sub
or
cmp
fisttpll
adc
mov
jne
pop
push
sub
pop
in
fcmovne
std
movzwl
add
cmp
push
jp
jns
iret
sub
add
gs
jns
mov
push
jne
xor
outsl
xor
push
and
xchg
cmpsb
andb
cltd
imul
and
fnstenv
pop
xor
push
or
test
mov
insl
inc
popa
xchg
fdiv
dec
rorb
das
test
pop
out
repnz
ja
lret
shld
nop
push
dec
sti
sar
lcall
icebp
lcall
iret
icebp
aad
mov
and
xor
aaa
out
ss
ss
ss
imulb
mov
outsb
shrl
outsb
push
outsb
testl
aas
push
lea
mov
aad
push
sbb
scas
fmull
push
mov
jge
je
dec
outsb
data16
mov
bnd
sub
fcomps
std
dec
sahf
lret
aad
push
subb
pop
push
xor
sbb
fwait
sti
adc
aad
push
cmpsb
outsl
cwtl
push
adc
cmp
aaa
rorb
cwtl
ds
dec
out
inc
sti
cmp
mov
into
xchg
bound
push
lret
and
fisttpll
das
outsb
xchg
cmp
inc
push
pop
jns
ds
and
and
sets
out
imul
pop
popa
nop
gs
cmp
insb
xor
xor
xor
push
ljmp
xor
xor
push
lret
aad
push
and
in
cmpsb
xlat
fstl
adc
xor
loope
stos
sti
insl
jge
jo
push
pop
jo
jo
icebp
mov
loop
std
xchg
push
push
mov
dec
aad
push
mov
cmc
push
test
scas
dec
push
sub
pop
mov
test
mov
mov
dec
or
jo
push
shll
push
jge
mov
or
lods
xor
xor
cwtl
dec
femms
ret
fmul
ret
dec
pop
sbb
lret
or
inc
mov
sbb
fdivl
iret
push
sti
xlat
pop
mov
femms
daa
out
xchg
pop
stos
lea
push
cmp
mov
int
mov
gs
cmp
xchg
push
insb
push
out
aad
push
pop
aam
xchg
lret
pop
daa
xchg
clc
push
loopne
into
orl
out
mov
add
fidivl
mov
xorb
mov
sti
int3
popf
or
push
fwait
cmp
fiadds
inc
cmp
or
pop
sbb
push
xor
rclb
leave
into
sbb
iret
xor
fidivrs
out
and
pop
scas
dec
divl
loopne
insb
sub
divb
mov
xor
and
pop
cmp
inc
xchg
aas
sub
and
dec
lret
push
sti
fwait
addb
nop
iret
mov
fiadds
outsb
aad
mov
dec
mov
icebp
push
std
ss
leave
push
mov
aam
cs
lods
push
xchg
cli
push
push
dec
cs
mov
jnp
sub
out
cltd
icebp
xchg
rcrl
inc
icebp
aas
imul
jns
lods
mov
inc
cmpsb
sbb
pop
rorb
lcall
pop
push
rcrb
out
out
cltd
push
ds
push
js
into
pushf
lret
xchg
jns
outsb
mov
hlt
jmp
mov
inc
cmp
mov
das
mov
xor
sbb
cmp
hlt
push
out
out
and
mov
xchg
out
aaa
mov
mov
jo
or
pop
push
or
cs
fcomps
out
inc
push
jge
pop
pop
and
jecxz
out
pop
cltd
icebp
fisttpl
rsm
sti
push
std
cmp
pop
rcl
mov
push
cli
xlat
pushf
push
ds
and
scas
test
es
cs
outsl
xchg
add
dec
call
aad
int3
jbe,pn
and
fnstcw
jge
jno
mov
cmp
mov
ret
repz
repz
and
dec
xor
xor
into
and
push
xor
iret
push
in
push
mov
mov
push
fmuls
std
cwtl
mov
shlb
dec
dec
in
lds
repnz
push
or
movsl
into
inc
int
xchg
mov
dec
and
xchg
push
sub
aad
push
adc
aad
xchg
xlat
sub
scas
sub
ret
out
gs
pop
mov
cwtl
push
icebp
jmp
std
adc
mov
aam
mov
mov
aad
push
out
mov
scas
cs
mov
out
lods
sti
and
sbb
jno
jne
xor
add
ret
xor
lock
push
arpl
xchg
inc
pop
inc
ret
pop
sbb
push
test
dec
shl
icebp
les
das
mov
mov
les
pusha
jp
jae
adc
out
cltd
xor
xor
add
clc
aam
push
adc
mov
into
imul
mov
pop
popf
mov
dec
cs
das
movl
nop
xchg
mov
test
aam
ljmp
insl
lock
xchg
and
pop
xor
insl
das
stc
xor
sbb
fadd
pop
jns
dec
insl
ffreep
div
pop
and
mov
pop
push
sbb
dec
xorl
push
std
fdivr
mov
push
shr
aad
push
cmp
mov
jb
aaa
push
ja
enter
push
push
cs
rolb
push
push
pop
push
sub
or
sbb
test
aaa
fwait
sub
nop
or
stos
adc
dec
scas
jmp
jg
xor
xchg
push
sub
xchg
fildl
out
push
sti
mov
push
push
inc
mov
aad
fistl
pusha
sub
lock
push
push
push
popa
cs
rorb
jae
inc
iret
cmp
lcall
pop
mov
xchg
mov
inc
fimull
dec
lret
ret
fmuls
scas
or
push
out
outsb
mov
dec
loope
in
inc
xchg
out
popl
add
push
xlat
push
cmp
into
xor
outsb
addb
jg
lea
and
jne
lcall
cmp
loop
test
jmp
xchg
lret
cmpl
pop
add
int
cmp
aad
sbb
std
test
push
adc
xchg
push
call
outsb
out
arpl
add
lea
mov
loopne
insl
fnstsw
icebp
push
sti
and
fcos
cwtl
icebp
adc
mov
mov
push
cmpb
push
mov
outsb
loopne
jmp
insb
psrlq
dec
sub
or
add
sbb
mov
push
push
jmp
cwtl
jnp
cwtl
shlb
addl
cs
or
sub
loope
sub
push
add
movsl
fldl
inc
push
mov
inc
aad
cs
shrb
inc
test
cs
push
pop
scas
adc
pop
out
mov
outsb
mov
xlat
inc
jne
mov
popl
stos
xchg
jmp
rcrb
and
cmpb
int3
or
aaa
cwtl
xchg
xor
push
push
imul
int
dec
xchg
mov
jno
stos
mov
add
leave
shl
lahf
xor
mov
jmp
std
mov
jne
push
inc
out
fwait
enter
subl
jp
imul
push
pop
cmp
xlat
push
ss
punpckhdq
push
loopne
push
js
adc
out
mov
xor
imul
gs
xor
out
cli
aaa
dec
push
adc
sub
inc
out
inc
or
adc
inc
mov
cld
mov
jp
imul
popa
in
jnp
mov
or
inc
movl
icebp
xchg
xchg
push
lods
mov
clc
mov
jp
push
fwait
je
iret
sub
std
and
mov
xchg
add
imul
jge
sarl
xchg
xor
stos
cs
ljmp
data16
push
sti
mov
ret
push
std
popa
pop
out
xchg
mov
iret
adc
outsb
push
into
movsb
scas
out
jp
mov
or
insl
jge
jmp
xor
xor
movsb
xor
aaa
jp
lock
inc
int
aad
push
and
xlat
cmp
fisubrl
fwait
ja
shrl
sti
loop
and
repz
mov
add
push
out
pop
sub
mov
push
xor
sub
xor
mov
xor
dec
inc
inc
push
hlt
imul
stos
push
and
pusha
into
out
cmp
push
mov
sub
and
cmpsl
xor
mov
push
call
scas
xchg
inc
fs
cmpsl
cmp
xor
test
scas
inc
lea
mov
repz
mov
adc
push
or
and
popf
cli
js
xor
in
push
pop
push
mov
push
mov
xchg
xchg
lret
in
mov
cmp
xor
aad
int
lods
pop
adc
stc
push
cmp
mov
mov
shrl
push
loopne
inc
cmpsb
jns
jge
jno
jne
mov
sti
push
sub
addr16
cmpsb
repz
jl
repnz
ficompl
imul
cmp
mov
push
pop
lea
imul
into
in
daa
inc
jp
jp
jnp
sbbb
add
mov
jp
push
jp
jp
jp
jns
shrd
bound
cmp
jnp
icebp
fistps
mov
idiv
test
clc
inc
inc
mov
xchg
jnp
and
and
jg
mov
push
ljmp
jecxz
pushw
mov
xchg
xchg
push
mov
into
es
data16
cld
jns
mov
cmc
xor
xchg
popa
into
out
lea
mov
sub
lods
out
pop
movsb
lahf
xchg
jmp
icebp
leave
jae
jmp
push
out
lcall
div
divl
divl
aad
push
and
jp
push
jp
jp
jp
mov
cwtl
and
sub
sbb
mov
push
jle
hlt
jo
xor
mov
xor
aaa
ds
hlt
push
imul
into
out
cmp
jb
mov
sub
and
and
push
mov
rorb
pop
sub
dec
sub
scas
xor
xor
cmp
xor
test
outsl
sub
into
and
fs
outsb
cmp
outsb
jbe
test
in
rorb
jp
jp
jp
sbb
lret
mov
mov
jo
xor
xor
mov
push
or
icebp
adc
push
push
lods
aad
push
arpl
stc
push
cmp
mov
mov
sub
push
adc
mov
test
push
loopne
addr16
cmpsb
repz
jl
repnz
lahf
adc
addr16
stc
inc
mov
repnz
imul
outsb
adc
inc
ffreep
std
mov
sub
push
imul
pop
xchg
inc
orb
pop
addr16
into
fmull
or
stmxcsr
andb
insl
int3
inc
popa
cwtl
movsl
nop
push
xchg
in
outsb
flds
pop
sub
sti
ds
adc
das
push
push
push
push
aam
cmp
push
xor
xor
push
mov
sti
sbb
push
jbe
sub
ret
inc
xchg
xchg
scas
aad
push
mov
cs
push
movsl
out
repz
xchg
lret
inc
icebp
push
xchg
icebp
jne
loop
fstps
pop
int3
mov
ret
push
pop
sub
pop
push
aam
xlat
jmp
out
inc
roll
sub
dec
xor
scas
push
mov
scas
lret
cmp
xor
ret
push
pop
fwait
aam
push
pop
xlat
sbbl
dec
push
jne
mov
aad
push
inc
sbb
push
inc
xor
enter
push
sub
or
ret
xor
rcll
lea
pop
movl
mov
xchg
and
jno
int
pop
mov
popf
fimuls
mov
push
add
ror
dec
outsl
dec
sahf
and
push
aaa
xlat
dec
push
int
rorl
fstl
cwtl
pop
test
xlat
call
xchg
push
lahf
push
int3
mov
mov
scas
lods
inc
sti
push
shl
nop
adc
and
sbb
xor
inc
push
mov
jne
jbe
dec
xchg
mov
insb
xchg
mov
or
sub
dec
scas
fistps
flds
add
sbb
test
adc
sysret
stos
add
int3
cld
push
mov
add
sbb
iret
inc
cld
aaa
div
push
adc
add
out
shll
lds
push
jge
push
push
mov
and
lock
sbb
sbbb
cwtl
sbb
push
sub
pop
sahf
inc
iret
add
stc
or
std
pop
lcall
orb
xchg
jo
call
out
es
lret
into
pushf
mov
into
xchg
push
push
outsb
scas
inc
sti
sbb
sahf
imul
sbbb
movsl
push
or
lret
in
xor
lock
lret
in
fldt
sbb
push
push
inc
or
pop
lods
add
or
cmpsb
js
jo
jo
adc
pusha
stos
pop
lcall
ret
mov
inc
or
push
and
insl
fnsave
mov
inc
fiadds
push
imul
ss
outsb
cs
cmp
jns
xlat
fldenv
pop
pop
push
xor
jbe
imul
movl
mov
adc
filds
into
lret
sti
cwtl
sbb
cmc
ret
xor
outsb
into
pop
loopne
xchg
add
js
or
lods
sbb
sbb
or
pop
popa
data16
nop
aas
dec
dec
shrb
popa
push
gs
jae
mov
xor
xor
int
lahf
sbb
pop
data16
rorb
sub
out
imul
stc
dec
repz
adc
scas
sub
sbb
inc
jle
mov
lret
stc
cmpl
lcall
addb
push
pusha
push
cwtl
outsl
mov
ret
je
sub
int
mov
and
pop
push
pushf
sbb
pop
dec
pop
or
xchg
mov
jmp
sti
les
push
push
mov
cmp
push
mov
lret
into
pop
or
daa
pop
into
fwait
scas
fmull
inc
addb
clc
and
aaa
insb
dec
shrb
jns
aas
jns
cmp
shll
jle
push
inc
or
rclb
ficompl
adc
pop
sbb
or
inc
cs
rol
xchg
inc
mov
iret
push
outsb
pushf
mov
cmpl
xor
xor
mov
cmp
or
sti
add
call
push
call
push
stos
filds
imul
hlt
sti
and
movsl
jmp
xor
jo
pop
lret
lea
pop
xchg
adc
sbb
inc
mov
jp
sbb
xchg
pop
fimull
lcall
divl
sahf
into
jge
jns
jge
shll
into
dec
outsb
inc
push
loop
clc
mov
jp
imul
xlat
loopne
adc
xor
popf
pusha
aas
js
jo
adc
das
mov
and
mov
outsb
xchg
dec
mov
xorl
adcb
xor
cli
or
add
cmc
pop
rcrl
jo
push
add
shrb
mov
or
aam
push
xchg
sahf
ret
lret
pop
stos
sbb
xor
insl
test
gs
leave
push
or
addb
sbbl
push
mov
sbb
push
rorl
ror
mov
pop
fwait
fwait
pusha
inc
jo,pt
jo
adc
test
inc
xchg
movsl
fsts
stc
push
scas
jbe
ret
shll
sub
xor
xor
xor
mov
xor
dec
or
pop
imul
rcll
mov
xor
sub
lret
inc
add
and
popa
push
vandnps
lods
jno
outsl
lods
insl
pop
popa
fsubl
fnstenv
test
or
push
inc
push
push
ss
in
fistpl
and
insl
pop
push
jns
aaa
xchg
inc
fisttpll
into
call
mov
fld
scas
push
pushf
aas
cmp
test
dec
add
xlat
mov
mov
mov
imul
aam
into
pop
call
push
mov
xor
int
add
scas
add
pop
xlat
jg
jle
inc
fdivl
aam
cs
sbb
and
push
in
push
xchg
fcoml
jg
add
push
roll
loop
mov
fidivl
push
call
xchg
push
adc
inc
sbb
dec
mov
xor
xor
into
mov
int
sbb
lds
inc
sarl
jmp
popa
and
jns
jge
jno
xor
or
aam
cs
push
or
daa
flds
pop
lods
pop
lret
aad
mov
jno
sbb
sahf
fs
nop
push
sub
bound
cmp
leave
insb
push
ret
xor
aaa
push
testl
aad
push
loope
dec
add
inc
adc
dec
sub
add
inc
pop
add
enter
sti
inc
sbb
jno
lret
cmp
enter
ffreep
inc
pop
xchg
aam
ja
lods
leave
inc
fistl
rcrb
insw
mov
jns
push
gs
cmp
lods
lds
aam
push
mov
add
or
rol
sub
dec
pop
xchg
ret
lds
cltd
fldl
xchg
repz
mov
mov
push
jp
sti
rclb
sub
faddp
mov
sbb
inc
jo
adc
sbb
add
push
dec
lcall
pop
stos
aad
push
rcrb
mov
mov
sti
std
add
mov
mov
rcl
push
enter
int
push
inc
jecxz
clc
pop
xchg
xchg
adc
imul
xlat
fiadds
or
stos
aad
push
rcl
push
jns
fistpl
nop
mov
dec
loopne
iret
mov
push
adc
rcrb
iret
pop
sub
lret
insl
stc
sbb
icebp
push
push
pop
and
xchg
push
adc
into
aad
popa
jns
fdivs
push
dec
pop
sbb
andb
jge
rcl
fmulp
mov
int3
push
lods
loope
lea
sti
jno
jne
jne
xor
int3
adc
mov
orb
roll
xchg
push
lea
or
inc
xchg
addb
adc
pop
outsb
testb
clc
in
pop
push
push
xchg
add
stc
fcmovnb
jge
xor
sbb
iret
daa
inc
push
loop
or
int3
xorb
int3
dec
mov
ret
sarl
jp
jns
outsl
iret
lods
js
adcb
aad
fistl
push
in
ficomps
sarl
iret
int
enter
xor
call
lcall
flds
inc
sbb
xor
bswap
xchg
std
dec
ds
outsb
or
mov
inc
or
dec
or
icebp
lahf
cmpsb
sbb
das
ret
push
push
loope
syscall
and
mov
shrb
test
inc
inc
pop
pusha
push
pop
shl
iret
add
jns
mov
aam
xchg
rorl
pop
xchg
data16
fsubrs
mov
outsl
xor
xor
sub
inc
sbb
int
cmpsb
loop
push
stc
sub
in
sbb
xchg
adc
push
fimull
or
mov
aas
jp
call
push
push
add
sub
mov
dec
xor
iret
aad
push
jl
xchg
mov
fistpll
ret
push
popf
lea
inc
mov
sub
or
sub
mov
jns
das
imul
js
add
sub
pop
lea
test
sub
into
sbb
mov
mov
scas
push
call
popf
xchg
xor
ret
push
data16
rorb
fists
test
clc
adc
pushf
mov
pop
mov
lea
mov
dec
xchg
sub
adc
lret
or
sbb
adc
jp
clc
stos
mov
inc
fwait
pushf
popa
jae
aad
pop
jmp
outsb
mov
xchg
xor
jp
call
sahf
sbb
das
ret
inc
xchg
repnz
push
mov
movsl
movsl
pusha
xchg
sbb
mov
lret
or
xchg
add
sbb
cmp
jge
int
int3
adc
xor
fsubrp
xchg
sub
les
inc
fadds
fildl
repnz
fldl
and
inc
xchg
push
ficomps
stos
mov
jmp
jecxz
pop
sbb
mov
xchg
add
lret
cld
xchg
xor
and
lods
dec
or
inc
shr
into
add
inc
adc
or
sub
lret
inc
addl
xor
mov
and
in
inc
shll
pop
push
rcll
xchg
jl
faddp
add
sbb
ror
mov
push
pop
mov
lcall
into
mov
ljmp
cli
shr
jp
adc
xchg
xchg
xlat
xlat
jp
mov
or
push
adc
test
jo
dec
dec
popa
adc
sbb
pop
add
stc
sbb
sbb
pop
inc
add
rol
inc
faddl
imul
pop
push
inc
mov
xchg
mov
pop
fsubr
or
leave
mov
inc
pop
mov
in
test
jge
call
xchg
add
mov
pop
dec
aad
push
or
sti
or
lcall
int
scas
pop
fldl2t
out
test
pop
push
pop
push
pop
pop
hlt
pop
into
pop
pop
xchg
repz
add
inc
xchg
push
adc
or
xor
push
xor
daa
filds
js
push
lcall
jecxz
mov
rcll
push
sub
inc
scas
sbb
inc
push
test
imul
in
leave
rcrb
inc
sub
scas
test
into
lods
add
dec
mov
add
clc
iret
pop
cmp
cwtl
lret
dec
mov
dec
cmp
jno
xor
lret
aad
pop
test
lret
cmp
push
loopne
out
xor
xor
add
out
stos
add
xor
fnstenv
adc
jmp
push
call
and
adc
scas
jbe
sub
call
add
ret
mov
jns
dec
mov
dec
enter
inc
dec
push
pop
insl
cmp
insl
mov
sbb
ret
add
pop
xor
outsb
push
addr16
sbb
movl
sub
orl
add
lds
lods
mov
jp
mov
xchg
add
cld
push
xor
leave
aad
sub
scas
push
adc
jp
pop
mov
or
fildl
xchg
shrb
ret
cmp
out
int
adc
and
bound
xchg
xor
fsubrl
jns
iret
mov
in
scas
roll
repz
push
icebp
adc
adc
add
stc
fiadds
inc
ret
jge
push
xchg
pop
mov
cwtl
inc
push
jp
icebp
xor
jmp
sbb
adc
jb
ja
or
mov
mov
pop
jae
sub
jmp
mov
add
fsubl
inc
fdivl
aad
aam
insl
imul
jbe
adc
scas
cmp
sub
push
leave
into
pop
push
push
push
aam
js
jo
jo
icebp
dec
scas
dec
sti
in
sbb
mov
je
push
and
xchg
mov
pop
or
rcrl
pop
ret
fbld
das
shr
push
cmp
xchg
outsb
jo
xor
sub
aad
ret
aam
jle,pn
pop
or
mov
andb
xor
scas
pop
and
xchg
imul
add
push
lods
bound
sbb
iret
loopne
icebp
lret
mov
inc
cmp
xlat
int
pushf
sbb
icebp
xchg
xchg
pop
mov
call
pusha
pop
rcrl
push
insl
cwtl
pop
jo
sub
stc
or
sarl
jno
xor
adc
stc
lods
shl
popf
xor
out
enter
lcall
fwait
pop
mov
das
and
cmp
adc
aam
push
or
jp
push
dec
rol
std
add
mov
cwtl
adc
push
fists
push
push
mov
scas
dec
aad
push
jns
jnp
jp
adc
or
sbb
inc
push
pop
jecxz
les
iret
nop
inc
add
dec
mov
lods
lock
push
add
and
jnp
dec
lahf
push
adc
cmc
pop
lcall
imul
mov
gs
pushf
int
iret
push
aad
mov
repz
add
dec
lods
outsb
sarl
stc
jmp
or
pusha
xor
jno
faddl
test
pop
push
sbb
ret
mov
iret
dec
sbb
xor
sahf
push
dec
nop
add
inc
or
xchg
in
fs
mov
jmp
push
push
or
or
stos
xor
inc
lods
push
xchg
push
lods
fcmovne
stos
fwait
jmp
stc
nop
enter
int3
adc
cwtl
imul
inc
test
loop
sbb
pop
inc
orb
mov
inc
sahf
lret
int
ret
jnp
pop
push
outsb
repnz
xchg
adc
add
stos
add
movsl
and
pop
xor
lods
lods
pop
test
cmp
fildll
ja
jge
xchg
xor
sub
pop
insb
and
pop
into
movsl
lods
daa
inc
addl
dec
iret
and
popf
test
xchg
pop
pop
pop
or
in
lods
or
push
rolb
sub
mov
flds
bound
lcall
adc
or
pop
dec
inc
std
mov
mov
popf
pop
lds
ss
pop
lds
jge
jno
xor
xchg
stc
dec
outsb
sbb
inc
dec
inc
adc
push
add
sub
sub
mov
inc
sarb
push
fldenv
pop
pop
enter
lret
mov
cs
lods
and
dec
lock
mov
in
xchg
add
pop
icebp
adc
lea
sar
dec
push
adc
pop
push
mov
dec
cs
in
insb
mov
push
add
adc
xchg
or
fwait
xchg
mov
imul
add
sahf
inc
int
imul
push
movsb
aam
fmulp
int
test
lods
xlat
and
xor
orb
jmp
xor
mov
pop
mov
ret
mov
test
inc
sbb
fs
cmp
push
lods
pop
inc
xchg
add
adc
sbb
mov
aam
mov
xchg
jns
sbb
enter
mov
les
push
add
sbb
inc
jmp
push
mov
negb
xor
or
shl
rorb
push
sbb
fisttpll
add
es
call
sahf
subb
addl
pop
adc
xchg
xchg
adc
adcb
lahf
rcrl
scas
int
pop
push
add
push
call
nop
xchg
pop
dec
dec
outsl
jmp
rcll
jge
nop
xor
sbb
pop
inc
adc
push
imul
mov
xchg
cmpsb
lcall
xchg
push
push
mov
nop
sbb
or
inc
push
paddusw
adc
sbb
mov
pop
and
add
lea
and
into
into
insl
push
inc
xchg
flds
rcl
pop
stos
dec
add
xchg
stc
xchg
sbb
imul
and
fsubrl
int3
fsubrs
adc
inc
lods
mov
xchg
dec
iret
dec
pop
push
cli
fwait
sbb
cmp
shll
mov
add
insl
loop
sbb
sbb
pop
rorb
outsl
inc
mov
aaa
into
push
cltd
adc
fstps
stos
or
and
xlat
or
xlat
push
sbb
or
loope
add
cmpsl
sbb
sub
dec
int3
or
jg
fwait
lcall
wrmsr
and
sbb
push
push
icebp
push
or
loop
mov
add
dec
xor
sub
mov
add
rol
pop
sbb
aam
lret
outsl
mov
insb
xchg
and
rolb
icebp
and
jbe
pop
mov
lcall
aam
lret
dec
sbb
pop
insl
xchg
mov
pop
dec
insl
inc
and
xor
scas
push
lods
mov
xor
lds
xchg
inc
adc
les
push
pop
add
cs
pop
fwait
les
push
test
fldt
push
xchg
mov
pop
shl
push
ror
xchg
inc
xor
incb
xor
fcmove
xchg
or
adc
imul
inc
stc
push
ficompl
adc
or
dec
sub
add
enter
pop
fwait
lock
dec
sysret
add
pusha
pop
adc
lret
fcompl
inc
adc
push
sub
push
dec
loopne
stc
add
sbb
adc
roll
lea
push
aam
stos
cmp
pop
jmp
adc
int
shrl
inc
sbb
int3
enter
jmp
fxch
sbb
scas
in
push
sbbb
or
insb
adc
inc
dec
mov
and
into
or
stos
shrb
xchg
adc
pop
orl
adc
adc
pop
xor
pop
call
jp
pop
dec
xor
ret
nop
sub
iret
and
outsb
je
push
lods
in
aad
xchg
aaa
push
dec
paddsw
ret
mov
mov
les
aam
push
mov
dec
pop
shlb
ffree
scas
aad
je
lods
and
jnp
and
sbb
push
bound
gs
pop
dec
outsb
sahf
pop
push
pop
or
adc
sbb
ret
or
and
fistps
push
dec
xchg
adc
rol
inc
sbb
sub
pop
addb
mov
xlat
pusha
pusha
adc
test
das
mov
aad
outsb
cmpsb
inc
sbb
push
pop
inc
sti
out
push
or
shrl
maxps
stos
push
jne
rorb
add
xchg
add
test
xlat
push
add
out
pop
in
xchg
mov
movb
push
shl
adc
ret
pop
pop
rorl
xchg
jmp
pop
add
cltd
pop
lahf
mov
sbb
inc
inc
dec
add
pushf
test
fimull
fcomp
int
cli
or
pop
add
push
sbb
mov
roll
xor
mov
pop
les
jnp
jmp
jnp
aas
int3
xchg
inc
pop
bound
pop
pusha
inc
into
loopne
or
movsb
cwtl
fwait
stc
or
pop
mov
adc
pop
pop
push
dec
lds
in
push
fnsave
pop
sbb
mov
insl
subl
enter
adc
inc
xor
inc
push
outsb
outsl
sbb
mov
inc
insl
dec
cld
and
and
push
and
aad
dec
and
into
fisttpl
call
add
sub
loopne
push
inc
sbb
aam
xor
rcll
sbb
pop
or
iret
test
test
and
insb
adc
pop
cmp
xor
jecxz
sbb
test
push
daa
sahf
or
insl
out
sbb
xchg
inc
mov
push
lret
pop
popf
cmp
rcll
push
shrb
dec
addr16
leave
loop
adc
cmc
inc
ds
test
cltd
xor
test
mov
xor
dec
pop
insb
mov
lahf
ret
add
into
jmp
scas
test
dec
or
outsb
pop
faddl
in
out
or
inc
pop
mov
out
shll
gs
lret
pop
mov
cwtl
dec
jle
inc
push
sbb
scas
inc
cwtl
insl
rolb
xor
xchg
aam
mov
mov
fmuls
rcrl
dec
pop
lods
ljmp
stc
xchg
mov
add
jmp
jmp
mov
add
jl
lahf
mov
xchg
xchg
out
xchg
lret
sub
fsubrl
popa
sbb
xor
xchg
insb
dec
xor
dec
xor
mov
into
pusha
inc
js
lock
push
lret
xchg
fbld
test
or
cmp
xor
in
or
jmp
sbbb
dec
inc
pop
into
cmp
les
jo
adc
dec
push
jle
rcll
inc
pop
jmp
pop
bound
rcll
dec
pop
out
lret
test
gs
inc
outsb
mov
dec
fucomp
mov
nop
js
fwait
dec
or
aam
int3
and
fs
test
and
subl
or
sbbb
lcall
cmpsb
or
push
pop
cmp
leave
inc
xchg
jmp
outsl
pop
pop
push
lods
pop
and
mov
sbb
stos
push
xchg
test
int3
pop
or
das
push
bswap
inc
pushf
pusha
mov
aad
ret
mov
sbb
iret
adc
lea
xor
callw
push
pop
xchg
loop
adc
push
pop
pop
aad
pop
add
call
pop
and
pop
data16
fimuls
push
repz
sbb
dec
pop
fwait
cmovne
dec
push
ds
dec
inc
pop
lods
dec
and
inc
dec
lock
cltd
xchg
xchg
or
dec
lock
add
addb
daa
inc
xchg
dec
xor
xchg
das
neg
iret
jno
rcr
call
rcl
push
sbb
or
ficoms
call
dec
and
int3
push
mov
mov
adc
add
aam
push
xchg
ret
add
push
jle
dec
leave
das
dec
sub
push
movsb
sub
push
pop
mov
imul
push
sbb
enter
push
rcl
push
sarb
mov
cwtl
jbe
cmp
inc
lea
and
adc
adc
xlat
push
fcmovnb
xor
xor
mov
addl
xchg
lea
aad
sub
scas
test
fistps
pop
stos
xchg
pop
push
fidivrs
fcmovnbe
mov
loopne
push
push
xlat
adcb
push
pop
aad
rcl
push
mov
out
sahf
push
imul
adc
dec
push
call
dec
ss
dec
inc
iret
cld
lods
imul
fcoml
outsb
jecxz
and
jnp
jno
adc
test
nop
out
ret
lods
and
push
lock
inc
sbb
sub
pop
aam
sti
adc
lret
mov
dec
inc
and
dec
pop
in
mov
lods
insl
mov
nop
pop
out
repz
sbb
push
pop
cli
dec
imul
xchg
and
push
pop
and
les
iret
or
aad
lods
fistl
push
and
pop
out
pop
pop
inc
push
sbbb
push
inc
dec
push
scas
ss
add
pop
rcl
mov
dec
or
shlb
imul
popa
xor
xor
xchg
fsubl
dec
shlb
xchg
in
out
push
pop
or
dec
mov
or
xor
in
andl
mov
into
outsb
or
sub
or
stc
push
ljmp
push
inc
pop
push
ja
insl
push
pop
push
fwait
add
pop
pop
xor
push
shlb
lret
pop
into
in
out
or
flds
loopne
sbb
dec
fstp
add
loope
call
mov
xchg
insl
add
adc
pusha
aas
call
xchg
int3
pop
and
sbb
faddp
lods
sbb
pushf
xorb
xchg
jmp
push
pop
icebp
fisttpl
push
ret
inc
leave
sahf
movl
fcmovbe
push
cltd
pusha
rcrb
aad
imul
add
filds
or
xor
dec
or
push
or
out
rorb
or
sub
lahf
dec
bnd
inc
test
push
dec
std
lret
rcrl
fstpl
pop
add
push
fisubs
jne
lods
mov
mov
mov
or
mov
xlat
ret
lcall
lret
xlat
mov
into
pop
sbb
insl
std
fld
sbb
pop
lods
aam
xchg
repz
add
dec
rol
dec
xrelease
lods
pop
and
and
iret
mov
or
pop
insl
out
pop
fsubrs
xor
insl
popf
adc
pop
cmp
rorl
jmp
pop
fs
lods
outsb
cwtl
sti
inc
or
dec
sbb
adc
jmp
sbb
push
xlat
pop
inc
iret
in
outsl
or
jbe
orl
or
or
leave
shll
ret
lds
les
inc
rol
adc
mov
pushf
roll
or
push
jmp
xor
add
cmpl
inc
test
mov
xlat
push
jmp
pop
pop
dec
lcall
gs
add
mov
inc
sahf
inc
mov
sub
icebp
dec
shl
xchg
and
fildl
insb
in
and
rcrb
in
add
inc
pop
int3
mov
sbb
pop
jp
ret
jp
sbb
ret
pop
int3
push
pop
inc
pusha
hlt
or
push
adc
cs
mov
jmp
into
insl
dec
ss
imul
inc
add
icebp
xchg
arpl
adcb
in
or
and
rcr
mov
xor
adc
inc
xor
and
xor
fst
push
outsb
jb
pop
add
dec
dec
pop
ret
inc
lahf
mov
dec
call
inc
int
aam
lods
arpl
loopne
pop
dec
pop
mov
sahf
lcall
insb
lahf
xor
xchg
lods
repz
xchg
ss
fs
push
dec
xchg
mov
add
push
insl
sub
aam
in
icebp
popf
inc
pop
and
andl
push
sbb
clc
int
sbb
jp
fst
cmp
pop
jnp
pop
loopne
pop
cwtl
rcl
repz
adc
mov
mov
xorl
mov
pop
and
inc
mov
fcompl
jp,pn
sbb
and
add
daa
mov
pop
pop
push
inc
lds
push
fnstsw
fisubrl
lds
enter
or
inc
shl
sub
adc
push
ja
xchg
xchg
pop
sub
loop
jmp
push
jo
xor
scas
push
adc
add
stc
rolb
mov
push
push
jnp
pop
sarl
popf
jnp
sbb
jne
jne
mov
faddp
outsb
jo
fcmovu
sub
dec
add
into
or
mov
mov
test
lods
cmp
sbb
iret
xor
std
in
sbb
add
mov
xorb
lods
dec
into
out
das
lods
push
and
aaa
dec
mov
mov
add
fimull
xor
xorl
xchg
sti
fwait
rcrl
pusha
or
and
xchg
or
jns
mov
out
stos
aad
mov
into
ucomiss
loopne
add
sbb
inc
pop
sub
mov
ret
pop
dec
loop
stc
addb
inc
xchg
and
lcall
stc
mov
outsl
sbb
inc
pop
adc
pop
push
jmp
scas
insb
int
test
and
fstpl
cmp
leave
adc
dec
adc
nop
jmp
adc
xor
sti
mov
sbb
sub
outsb
pop
pop
insb
add
sbb
cmp
ret
sbb
sub
in
or
mov
dec
lds
leave
mov
cmc
cmpsl
pop
push
cmp
fbld
mov
inc
fldl
xchg
int3
or
adc
enter
into
pop
lods
push
jns
push
mov
push
or
add
repz
adc
lds
jp
sbb
sti
or
testl
push
nop
and
int
and
flds
mov
mov
pushf
sub
scas
pusha
addb
scas
inc
test
pop
pop
dec
jmp
scas
negl
dec
fstl
in
pop
push
fstpl
pop
xchg
inc
xchg
subb
mov
adc
mov
and
push
inc
and
adc
mov
aas
add
xlat
jns
outsb
and
mov
out
pop
inc
or
dec
fdivrs
mov
pop
das
and
fmul
test
sti
inc
pop
add
push
or
pop
inc
mov
sarb
cmp
lds
jnp
sub
movsl
push
js
call
int3
int3
mov
add
mov
and
or
xchg
pop
or
adc
mov
ficoms
insl
ret
loop
pop
popf
les
xchg
xchg
mov
mov
fcmovbe
cmpl
clc
aad
xchg
aam
push
jo
rorb
cmp
xchg
mov
sub
pop
insl
adc
adc
ret
test
sbbb
pop
pop
pop
or
test
jne
nop
lods
mov
ror
fadd
add
push
lods
push
enter
ficoml
fnstsw
adc
pop
int3
lods
fbstp
inc
fidivs
push
in
inc
push
lock
adc
leave
imul
xchg
aam
push
xlat
push
jg
add
das
pop
xor
test
inc
cltd
xor
movlps
or
inc
js
test
fldl
rcl
mov
mulps
cs
jg
inc
cmpsb
or
mov
insb
aaa
fwait
cmp
inc
outsb
xchg
pop
push
pop
or
nop
ficompl
jnp
test
addl
mov
xchg
and
test
xor
mov
or
cwtl
pop
lock
mov
mov
pop
rcrb
sysret
mov
mov
call
mov
pop
jnp
sbb
pop
pop
sbb
xchg
mov
fistps
push
sbb
push
pop
lods
push
and
outsb
push
mov
fdivrl
adc
push
pop
pusha
fsubrl
fcmovu
add
jns
push
aad
ficoms
rorl
rcrb
lret
push
insb
aam
sbb
jl
fiadds
dec
sbb
jno
dec
mov
cltd
inc
adc
dec
pop
xchg
jno
leave
into
xor
pop
sbb
ror
or
insl
neg
dec
out
xchg
jmp
push
push
push
cmp
call
loop
icebp
dec
and
std
out
inc
cmp
imul
mov
fmulp
lods
mov
sub
int
ret
sahf
sub
ret
loop
push
nop
cmpsl
aad
sahf
ficomps
test
das
jmp
paddsw
dec
outsb
cs
pop
lods
and
mov
mov
mov
scas
dec
mov
lret
cmp
push
rol
sub
fisttps
jbe
adc
dec
lds
xchg
push
push
push
push
mov
nop
leave
fiadds
movsl
fisttpl
sbb
repz
or
loop
mov
sti
rclb
lds
popf
aad
mov
mov
leave
fbld
or
cmpsb
loopne
fnstsw
sbb
jbe
int
push
push
and
insb
aad
pop
cwtl
or
or
push
push
pushf
add
rclb
add
mov
dec
imul
ret
or
int3
fiaddl
push
lock
cwtl
movl
mov
push
stc
add
jnp
das
test
inc
xchg
push
jmp
add
in
jbe
mov
movsb
and
dec
add
jno
add
lret
ret
pop
mov
xchg
jne
fsubl
stc
test
ret
cwtl
push
imul
sbb
push
and
cs
cltd
ret
xchg
lds
sbb
loop
pop
lods
or
fldl
packuswb
push
push
xchg
out
call
push
bound
rorl
cltd
sbb
rcrb
fnsave
flds
aas
fidivrs
pop
fimull
sbb
iret
test
pop
inc
push
ret
xchg
add
inc
mov
xchg
inc
xor
ret
fcomps
pop
aam
mov
sbb
sbb
fimull
insl
shlb
ret
enter
outsl
loopne
stc
sbb
pop
push
inc
lea
add
cmc
loopne
leave
push
xor
sbb
int
aad
sbb
aam
adc
xchg
std
lea
loopne
adc
dec
dec
sti
outsl
pop
lret
pop
sbb
and
bswap
out
xchg
pusha
iret
sub
inc
dec
pop
lret
icebp
xchg
cmpsb
adc
mov
and
sbb
nop
xor
jl
dec
scas
dec
les
sbb
inc
sti
loopne
pop
or
or
lock
mov
xchg
das
and
push
adc
jae
faddl
inc
sar
mov
fisubrs
pushf
inc
mov
pop
push
test
mov
add
jae
aad
inc
dec
push
shrl
inc
lahf
add
pushf
lret
or
adc
xchg
dec
fsubs
dec
xchg
pop
and
xchg
xchg
inc
loop
pop
lret
push
pop
pusha
pop
adc
pop
xchg
push
insb
jge
xchg
mov
pop
cwtl
inc
push
fistl
dec
insb
cmp
pusha
movsl
icebp
shll
loopne
into
mov
test
xlat
addl
xchg
pop
iret
lcall
adc
add
popf
push
lret
pop
inc
dec
dec
jmp
fimuls
cvtdq2ps
lea
insb
outsl
cmp
pop
in
pop
pop
sub
xadd
xchg
and
dec
outsl
sbbb
push
shlb
sbb
or
out
push
fsubp
aas
dec
or
dec
out
jecxz
imul
xchg
leave
cmp
sti
pop
push
inc
push
xor
cmpsl
cmp
dec
outsb
push
mov
pop
lods
popf
and
or
fmuls
and
es
fdivr
out
add
test
ss
ror
shrl
loop
xchg
cwtl
inc
aaa
jo
jns
jnp
leave
imul
int
inc
mov
or
jecxz
add
ficoml
add
pop
pop
jb
inc
add
and
out
cmp
xchg
pop
push
sahf
icebp
jnp
pushf
lret
mov
iret
push
iret
xlat
mov
mov
lea
mov
push
push
lods
ds
xor
mov
mov
sbbb
outsl
add
push
xlat
mov
sub
sub
pusha
cmpsb
xlat
pop
push
push
inc
lret
out
cli
iret
sbb
sbb
into
popf
scas
cmp
mov
imul
lods
cmc
dec
pop
call
sbb
adc
sbb
mov
jecxz
loop
popf
fiadds
stos
push
pop
lret
adc
sub
cmp
scas
and
xlat
adcb
or
dec
inc
rcll
pop
loopw
and
lods
and
leave
xor
enter
es
mov
jmp
xor
dec
shlb
das
pop
sub
scas
bound
jo
stc
lahf
rorl
jg
adcb
and
push
dec
mov
popf
shlb
or
scas
cmp
stc
out
stc
xlat
adc
inc
imul
adc
sub
dec
cli
adc
and
xchg
adc
push
sbb
adc
out
sbb
leave
les
test
pop
subl
sbb
pop
mov
or
pusha
cmp
sbb
push
addl
push
lcall
test
sub
xor
fistpl
jg
inc
mov
pop
pop
insb
push
push
fwait
bound
sbb
push
lea
iret
pop
dec
mov
outsl
add
pop
inc
or
out
aad
ficoml
hlt
adc
sbb
inc
imul
jmp
or
enter
popa
pop
pop
sub
fwait
push
lret
inc
insl
lcall
inc
ret
dec
nop
je
add
mov
repnz
push
jns
fdivs
mov
cwtl
jmp
cs
sbb
aaa
inc
rolb
cmp
into
out
inc
inc
aad
push
test
cmp
mov
out
or
stos
pop
rcrb
je
cld
pop
les
jp
pop
repnz
pop
data16
fsts
xchg
sub
and
test
cmp
shrb
mov
clc
test
sbb
in
lods
mov
or
aad
lds
int
dec
dec
push
xchg
or
int3
data16
and
cltd
xor
int3
add
pop
push
jbe
mov
imul
stos
lea
enter
test
push
xchg
inc
insl
mov
mov
fwait
orl
pop
inc
ret
mov
sbb
mov
sbb
inc
test
shrb
inc
lods
pop
and
push
cmp
xchg
adc
sub
add
out
pop
insb
fidivl
dec
jg
push
call
or
mov
imul
inc
xor
inc
sbb
or
sar
xor
test
xchg
and
and
je
test
xchg
nop
dec
ret
pop
xlat
push
mov
sub
adc
or
shrb
and
insl
inc
test
or
adc
mov
adc
and
push
jmp
dec
xor
fbld
fwait
cmpsl
pushf
inc
fdivrl
xor
and
clc
int
shlb
adc
cltd
popf
push
inc
xchg
xchg
inc
testb
sahf
jnp
nop
loopne
push
mov
pop
test
push
repnz
mov
js
rcll
sub
lea
pop
push
or
xlat
ror
jno
insl
loope
cmp
dec
aas
mov
xlat
sub
push
sub
fisubrs
int
ds
dec
push
sbb
fcoml
lods
das
push
enter
push
cmp
sbb
lods
or
add
aam
out
sbb
lea
mov
fsubrl
call
movsl
pushf
jmp
mov
and
dec
push
iret
pop
test
scas
inc
push
pop
pop
les
xor
lods
in
call
stos
clc
jns
outsl
jnp
push
rcr
or
cld
mov
stos
or
in
int
arpl
pop
sbb
xchg
sub
fcmove
out
mov
inc
sbb
jp
dec
jle
add
aad
sbb
xchg
adc
stc
dec
sbb
sub
mov
sahf
fwait
minps
ficomps
clc
fdivl
pop
mov
adc
lret
xlat
dec
jnp
pushf
dec
ss
subb
dec
outsb
iret
insl
dec
mov
inc
icebp
out
add
adc
add
movl
out
xorl
fisubrs
insb
mov
fcmovb
popf
shr
int3
pop
adc
fiaddl
std
inc
xchg
add
xchg
and
or
aas
lods
and
sbb
or
jb
and
and
mov
data16
push
sub
xchg
inc
mov
push
adc
mov
and
sub
dec
leave
sbb
jbe
xchg
xchg
aaa
out
leave
popl
xchg
push
outsb
adc
repnz
jecxz
test
jge
push
sub
inc
dec
mov
cmp
out
dec
insb
in
lret
push
push
xchg
das
jns
and
xor
movl
outsl
ds
push
mov
or
fstps
dec
inc
inc
sbb
fwait
or
sub
imul
mov
stos
push
mov
mov
mov
or
inc
mov
flds
dec
or
nop
imul
lods
or
inc
ret
data16
rolb
and
test
cmovge
sarb
dec
into
mov
inc
shlb
data16
inc
adcb
fwait
scas
lret
inc
push
inc
dec
pop
filds
push
pushf
push
in
pop
adc
cs
outsb
popa
outsb
subb
data16
pop
push
mov
aad
push
rcrb
pop
add
push
dec
inc
push
inc
dec
cmp
iret
and
pushw
jmp
mov
cmp
push
imul
in
dec
push
lods
or
and
out
add
sub
pop
push
dec
pop
int3
xchg
add
jmp
sbb
jns
or
pop
dec
inc
sti
inc
addb
push
insl
and
push
sbb
loope
sub
push
sbb
repnz
pop
add
push
fwait
xchg
test
ljmp
mov
imul
psubq
jge
pop
dec
es
sub
fwait
mov
fsubrs
aam
insb
shlb
push
aad
insb
insb
sbb
stos
into
int
mov
aad
mov
mov
push
push
dec
ss
inc
push
and
fstp
pop
cmp
adc
loopne
push
push
sbbl
outsl
pop
dec
sbb
mov
adc
dec
dec
pop
push
sub
pop
add
adc
and
test
mov
push
out
les
aas
adc
lds
xor
daa
inc
xor
ret
nop
or
sbb
lcall
imul
jns
cmc
sub
movb
mov
subl
sub
cltd
ret
stc
test
aaa
data16
mov
jns
jno
div
fildl
fdiv
pop
mov
pop
push
call
fwait
sbb
jge
jno
mov
mov
push
loopne
jno
nop
xchg
mov
jp
sti
xlat
pop
xorl
test
push
loopne
inc
dec
xchg
push
call
pusha
imulb
mov
les
mov
push
js
adc
cmp
subb
xchg
xchg
pop
add
or
call
jle
dec
lods
aaa
insb
iret
aad
mov
psubq
fiadds
inc
fsubl
in
outsb
push
lods
pop
xor
cmp
cmpl
xchg
pusha
mov
xlat
jae
push
imul
mov
bound
add
jns
pmullw
lock
imulb
movsb
lock
cmp
sbb
cltd
push
sub
mov
pop
sbb
jg
xlat
sahf
aad
fadd
insb
rolb
xchg
xorb
lods
xchg
and
xchg
dec
sub
adc
outsb
jo
jo
lock
push
fwait
add
leave
push
addr16
push
es
sbb
lcall
or
xchg
cmp
dec
sub
dec
leave
mov
mov
sbb
loope
or
pop
fwait
jge
mov
or
arpl
sub
and
into
xchg
dec
outsl
ds
dec
and
adcb
lea
dec
and
push
dec
out
add
dec
mov
lcall
int3
aam
outsb
shrb
mov
jmp
outsb
xchg
pop
dec
pop
pop
or
enter
sbb
inc
shr
inc
mov
push
cmp
out
sbb
and
xor
mov
mov
mov
pop
je
push
inc
insb
fwait
sbb
shll
into
fcoms
lock
jnp
lea
insb
andl
aas
mov
dec
adc
inc
aam
cmp
jmp
or
popl
pusha
pop
push
adc
fwait
inc
push
sti
xchg
dec
aaa
push
sub
adc
pop
popf
add
int
rorl
lods
push
xor
xchg
out
sbb
sub
xchg
out
mov
ficoms
aaa
and
das
xor
lea
inc
out
cmp
aaa
adc
add
sub
dec
out
rolb
mov
aad
jg
fidivrs
push
inc
add
punpckldq
icebp
sbb
inc
iret
in
lods
popl
and
adcb
or
adc
getsec
xor
ret
dec
inc
xchg
dec
fs
xchg
imul
dec
fstpt
inc
xchg
and
sbb
ret
lret
push
inc
lods
jecxz
dec
dec
out
les
mov
fildl
outsb
add
roll
ret
inc
or
jb
xlat
mov
jns
iret
lods
pop
pop
lds
cmp
daa
xor
adc
sub
or
adc
push
mov
or
mov
sbb
mov
out
hlt
mov
jge
sub
xor
ret
dec
das
ret
negl
pop
pusha
cmp
lret
add
rorb
xor
mov
pushf
call
and
or
test
sarl
sbb
int
adc
adc
mov
fadd
dec
notb
loope
dec
test
pop
dec
pusha
jp
ret
fmulp
test
xchg
lcall
in
push
mov
mov
or
insb
sbb
pop
push
pusha
rcll
push
dec
lods
push
sub
adc
xlat
lock
int
pushf
push
lret
insb
call
imul
lcall
adc
sbb
add
aad
dec
mov
ret
pusha
xchg
cmp
or
insl
pand
and
outsb
push
lods
jae
leave
mov
mov
jp
mov
push
rol
jnp
inc
adc
push
insb
mov
dec
rclb
or
mov
int
push
test
push
cs
insl
sbb
repz
sbb
cmp
mov
add
fstl
jnp
inc
pop
call
add
popa
push
dec
add
pop
mov
cltd
out
or
fucomi
add
mov
xor
aaa
dec
inc
xchg
pusha
outsb
push
mov
push
dec
subl
push
imul
xchg
cmc
hlt
xchg
cmp
into
lret
lods
mov
bound
xor
rcl
adc
das
scas
and
adc
adc
roll
adc
and
mov
add
call
or
push
adcb
rorb
jns
xor
popf
xchg
jbe
into
loopne
push
mov
pop
mov
add
sub
push
int
je
fisubrl
pop
test
rorl
pop
ffreep
mov
sbb
es
push
xchg
and
adc
hlt
sub
add
sub
xorl
in
rorb
pushf
lahf
mov
dec
xchg
jbe
les
nop
push
xchg
loop
push
push
fcompl
test
hlt
adc
pusha
push
sahf
cwtl
push
in
jle
pop
inc
xlat
into
ds
sahf
fstps
ja
or
dec
jecxz
fwait
lds
inc
xchg
xchg
push
or
and
xor
int3
adc
mov
add
subl
jmp
mov
xchg
jo
ret
aam
adc
in
mov
add
fstps
adc
pop
lahf
outsb
sbb
test
inc
lret
push
inc
insl
push
nop
add
and
out
mov
stos
pop
mov
fstpl
scas
jp
dec
sbb
cmp
rcll
ret
sub
sub
out
mov
mov
negl
or
push
inc
mov
outsb
test
insb
xchg
inc
jg
fcoml
aam
pop
scas
fcmovu
sub
insb
addb
ror
lcall
push
add
pop
std
push
mov
jo
jns
je
dec
adc
daa
fcoml
inc
sbb
push
jmp
push
pop
and
test
inc
aad
cmp
mov
fsts
pop
dec
lods
sbb
loope
dec
movsl
adc
fisubs
lret
fwait
pusha
stc
adc
sbb
and
loop
add
mov
fmull
lea
xchg
pop
push
mov
orl
loopne
cli
push
ret
or
lods
outsb
leave
dec
daa
sbb
add
push
shlb
push
inc
dec
lods
cs
and
mov
xchg
idivb
popf
push
or
into
sbb
xchg
push
daa
sbb
add
xor
mov
add
push
add
negb
aam
cs
push
lods
mov
leave
sar
sub
sahf
inc
cwtl
xchg
mov
ret
dec
mov
push
jmp
scas
dec
flds
adc
loopne
mov
pop
or
lret
xchg
mov
pop
add
pop
aam
jp
lea
stc
inc
sub
lods
rorl
scas
into
sbb
inc
lahf
loop
call
mov
mov
lret
sbbb
and
mov
add
adc
xor
loopne
pop
fsubrs
mov
imul
insl
vmwrite
movsb
pop
fistpll
push
pop
fildl
pop
pop
ror
or
inc
sub
dec
mov
pop
pop
sub
repnz
or
add
int
ja
lret
jl
push
cmp
add
enter
sbb
cmp
or
xor
xor
sahf
xor
xorl
sar
xor
sbb
xor
push
ret
aam
dec
test
xor
ss
mov
int
dec
iret
cmpsl
sbbb
adcb
cmp
push
sub
sub
xchg
clc
mov
add
aam
jo
mov
lods
into
fs
jge
xchg
jno
xor
pop
stos
mov
cmp
loop
push
or
cmp
das
adcl
out
fcmovne
lcall
stos
pushf
mov
leave
inc
ficoms
lahf
push
push
sahf
cmp
aaa
leave
dec
out
cmpsb
pop
inc
out
xor
xor
sub
sub
xor
in
push
pop
in
sbb
mov
icebp
adc
pop
push
mov
les
push
jle
lds
push
xor
mov
xchg
fadds
iret
mov
inc
push
inc
aad
push
fdivs
inc
cwtl
add
sbb
push
mov
ficomps
lret
add
pop
lds
ret
inc
mov
and
push
lods
lret
mov
push
int3
stc
dec
lcall
fwait
mov
iret
push
adcb
ret
popl
add
add
cmpsb
push
xchg
bound
push
pop
xor
ss
push
ret
test
sub
in
xchg
cmpb
fcoms
sbb
mov
xchg
cmpl
adc
mov
mov
aad
push
orl
sti
ljmp
and
arpl
add
outsb
pop
lods
cmp
adc
aad
push
push
nop
xlat
xchg
jle
test
push
jb
adc
jl
mov
push
sbb
mov
sbb
addb
jp
sti
sar
sbb
xor
ret
inc
push
or
mov
in
sbb
mov
mov
push
insb
ret
and
pop
dec
adc
jp
jg
xchg
jmp
push
and
adc
jmp
shld
sub
out
sbb
adc
inc
xchg
rorl
mov
fidivs
pop
test
cs
insb
pop
and
push
inc
inc
roll
xchg
push
pop
aas
int
mov
or
dec
in
scas
lds
jg
scas
sbb
int
dec
mov
adc
jp
sti
push
push
cwtl
pop
mov
pop
lods
push
and
jecxz
enter
or
xor
pusha
xor
ss
sbb
sbb
mov
inc
push
xchg
ds
fwait
sub
aad
push
push
pushf
xlat
adc
push
into
inc
sbb
push
aam
loopne,pn
mov
fcomp
sbb
dec
cmp
popa
adc
fsts
loop
sbb
pop
ret
sub
lock
inc
leave
in
popl
add
pop
cmp
into
mov
push
loopne
add
push
int
icebp
sti
xchg
jo
shll
jno
ss
inc
lds
rcrl
or
cwtl
add
adc
outsb
adc
push
lea
pop
pop
into
adc
stos
fistpl
adcb
mov
insl
sti
addl
xchg
andb
sbb
add
ja
insl
push
leave
pop
fcmovbe
or
and
or
mov
pop
adc
mov
sbb
jmp
stc
add
xchg
xor
out
sti
mov
pop
mov
popf
xor
sub
dec
stos
inc
sti
loop
or
push
jp
sti
adc
push
aam
rcrl
aas
push
jp
push
jp
jnp
stc
xlat
sti
fistpll
subl
sbb
push
inc
xor
mov
into
lcall
jge
aas
popa
adc
fsts
add
stos
lods
aam
or
mov
dec
cmp
aaa
inc
or
pop
inc
sbb
pop
cvtdq2ps
push
add
pop
subl
aad
fimuls
jbe
iret
xchg
lds
movsl
or
cwtl
mov
aam
ss
xor
faddp
mov
popa
out
dec
mov
and
mov
push
shrb
std
push
test
mov
mov
in
mov
int
add
add
dec
pop
rol
lcall
aad
mov
mov
xchg
mov
insl
jle
inc
and
and
out
dec
push
addl
cs
lods
mov
xchg
or
push
bound
test
push
orb
fsubrs
pop
insb
mov
addb
sub
pop
and
stos
jge
adc
or
sti
and
and
and
mov
ss
outsb
movsb
outsb
daa
outsb
cmpsl
insl
imul
idivl
rcll
mov
and
clc
xchg
or
call
movsb
pop
xchg
push
enter
sub
sbbb
mov
mov
fisubrs
jmp
mov
sbb
aam
lds
sbb
fistl
or
test
xorb
insb
jecxz
add
jns
jge
xor
dec
inc
lcall
lret
hlt
xor
jg
xorb
sub
in
mov
pop
push
or
sbb
clc
clc
xor
inc
fisttps
sarl
push
mov
add
pop
xorl
dec
test
adc
clc
js
ret
rorb
or
sti
aam
hlt
outsb
shrl
sbb
pop
dec
popa
jg
xchg
push
adc
aad
sub
ud2
dec
push
sub
cltd
imul
rorb
sahf
sbb
hlt
pop
xchg
or
add
push
or
sbb
rclb
lds
cwtl
call
inc
insb
cltd
pusha
stc
les
adc
inc
pop
cmpsb
xchg
loopne
push
xchg
pop
xlat
pop
pop
push
ss
test
scas
mov
push
stc
mov
jbe
dec
inc
ret
call
xor
roll
je
sbb
xchg
shr
push
add
loop
pop
cmp
cld
loop
pop
adc
shrl
adc
or
mov
sbbb
ret
lcall
dec
cwtl
mov
stc
add
sbb
push
xchg
in
call
lds
dec
dec
xlat
jnp
or
cmp
fldl
repz
or
xchg
and
inc
xor
iret
push
sahf
inc
push
sti
sahf
adc
xor
or
int
dec
add
or
and
insb
sbb
jge
push
shl
sbb
or
push
int
in
addr16
xchg
loop
mov
jge
jo
push
aad
jle
push
sub
add
addr16
dec
pop
jnp
mov
sub
jno
push
jmp
sahf
call
loopne
push
js
lock
and
roll
sub
movb
dec
pop
imul
xchg
loopne
ret
subl
mov
icebp
fcmovnb
mov
ret
outsb
mov
imul
nop
push
daa
into
fisttpl
dec
lret
enter
adc
shll
fnsave
xchg
dec
lret
pusha
stos
mov
push
loopne
and
push
inc
lret
out
aas
push
fmuls
xchg
or
lods
xorb
sub
xchg
or
pop
ret
addr16
inc
xchg
pop
fldt
mov
imul
test
insl
adc
movsl
jecxz
sbb
mov
push
xchg
push
mov
ja
add
jmp
xchg
sbb
push
into
loop
adc
ret
in
mov
lcall
imul
inc
add
repz
lea
xlat
fwait
mov
cmp
push
or
or
adc
sbb
test
sbb
pop
arpl
sti
mov
pop
add
aam
mov
pop
lcall
lret
push
stc
aam
pop
enter
xor
cmpsl
add
lock
sbb
filds
jg
inc
xor
adc
inc
mov
and
inc
fsubrl
scas
sbb
aaa
xor
jl
leave
mov
push
into
mov
xor
and
decb
push
dec
pop
and
clc
loopne
call
loop
es
ficompl
shlb
ret
push
mov
pop
cld
pop
xor
in
adc
into
jns
shl
ss
xchg
mov
xchg
xchg
cmpb
sbb
xorb
call
inc
cmp
sbbl
add
ret
adc
add
sti
inc
sbb
sbb
rcll
stos
cmp
int3
xor
sbb
daa
sbb
in
lcall
es
sub
lret
cmp
mov
lods
cmp
or
and
push
lods
ds
mov
add
jns
sbb
jp
or
push
sub
or
push
mov
add
dec
inc
mov
outsb
stc
xchg
sbb
adc
add
call
cmp
xorl
jbe
les
shrl
xor
ret
dec
pusha
xor
repz
pop
pop
int
push
fldcw
dec
sub
xlat
and
push
mov
shrl
pop
lcall
push
xchg
cld
fwait
adc
or
popf
sbb
int
pextrw
xor
add
pop
sub
pop
inc
sub
dec
sub
push
pop
lock
inc
or
adc
cmp
outsl
aad
push
dec
pop
dec
xorb
sub
mov
and
sub
fisttpl
add
ret
daa
rcr
mov
push
mov
fstps
shll
jp
jge
fwait
movsl
sti
pop
dec
int
inc
and
nop
aas
repz
in
loopne
aad
xchg
cmp
dec
inc
ss
pusha
adc
pop
aam
lods
dec
and
nop
pop
xchg
push
imul
dec
ljmp
dec
and
cmpsb
insl
xchg
sbb
mov
dec
lods
mov
xchg
scas
pop
jecxz
push
daa
aaa
cmpsb
in
pop
popf
outsb
xor
insl
adc
adc
push
pop
sti
or
nop
loope
mov
ret
mov
sbb
sbb
adc
and
xor
fiaddl
test
mov
cmp
mov
dec
mov
mov
sbb
loopne
mov
enter
scas
jge
inc
cmpsb
mov
xchg
dec
push
pop
lea
cmp
imul
cmp
pop
test
insb
sbb
and
mov
lods
aaa
and
mov
ret
adc
movsl
int3
dec
fwait
xor
and
sub
rclb
inc
xchg
mov
mov
xchg
f2xm1
pop
xor
lea
fidivl
lret
pop
sbb
cltd
fcmovnb
inc
push
jge
sbb
dec
or
xor
xchg
xlat
sarb
mov
adc
or
push
lods
imul
std
ficoml
pop
fwait
imul
pop
and
dec
push
rolb
mov
push
sbb
aad
push
push
aam
mov
lret
push
leave
orb
jo
sub
inc
pop
or
enter
rcl
mov
pop
inc
fistpl
push
sti
lds
inc
fwait
subb
repz
xchg
leave
pop
call
fwait
push
dec
inc
lret
xor
inc
outsb
sub
pop
daa
pop
dec
push
int
dec
jnp
fadd
pop
pop
lods
pop
push
fs
cld
int3
xor
sbbl
and
lods
fisubl
add
push
or
subl
pop
push
pop
roll
pusha
shl
pop
aad
push
push
adc
push
jg
pop
gs
aad
push
int
push
or
ficoms
clc
push
xchg
xchg
jmp
pop
rorl
cmp
dec
and
enter
push
sbb
push
add
cmp
sahf
mov
loop
pop
lods
push
xor
pop
aad
enter
enter
and
outsb
les
sbb
loopne
or
sub
jae
sbb
sbb
cmp
lret
lea
insb
scas
xor
mov
imul
push
and
movsb
les
cmpsb
push
add
mov
int
mov
xor
mov
mov
mov
fldt
fwait
xor
xor
mov
xorb
mov
adc
test
pop
sub
sub
sbb
lods
xor
lods
add
push
sub
or
bound
mov
mov
push
sahf
pop
push
sbb
push
fwait
cmp
cmp
sub
ss
or
mov
push
imul
mov
call
mov
push
filds
mov
pushf
mov
sbb
test
push
push
push
xchg
lods
inc
adc
scas
sub
scas
add
cmpsl
push
inc
push
xchg
add
pop
mov
insl
cmp
dec
aas
mov
push
js
xor
sub
xor
mov
sub
mov
les
ficoms
inc
sub
stos
push
jo
jo
xor
outsb
scas
insb
and
or
mov
leave
or
add
cmpsl
push
andl
fstpt
popa
mov
pop
sbb
mov
push
les
pop
dec
outsb
xor
and
mov
fisubrs
outsb
aaa
lods
mov
xchg
mov
stc
or
xchg
imul
lods
fstps
xchg
lods
scas
leave
xchg
mov
jns
mov
cmp
daa
out
sub
xchg
pop
mov
push
push
cmp
fwait
cmp
mov
cmp
cmp
icebp
push
aas
pop
mov
adc
xor
jle
ret
mov
or
dec
push
mov
add
test
sub
ret
pusha
lods
push
fldt
ret
out
or
pop
mov
jnp
pop
test
outsb
and
adc
inc
aam
enter
outsb
xlat
cltd
int3
lret
push
fnstcw
sbb
inc
push
or
call
popa
shlb
jnp
fcmovnb
sahf
sub
fldenv
adc
or
int3
pop
int3
ret
mov
hlt
adc
into
mov
les
and
or
lret
cltd
mov
lods
ret
lds
rorb
mov
push
pop
add
cwtl
faddl
pop
xchg
loop
or
int
ret
scas
fmuls
rolb
dec
enter
dec
stos
rcrl
icebp
inc
fcoms
rorb
rcl
push
add
push
rcr
fistpl
lds
add
sub
fisttpl
lds
add
rcr
pop
mov
push
pop
lods
lret
inc
test
iret
shrb
movb
fcompl
aad
jp
pop
lods
dec
jle
shl
repz
cmc
ficoml
fbstp
push
aam
mov
sahf
inc
ret
add
dec
insb
fnsave
dec
leave
mov
or
push
fistps
sarl
xchg
leave
outsb
lret
xor
in
push
and
fsubrl
rclb
xlat
aaa
push
dec
pop
dec
fmulp
inc
mov
lcall
shrd
pop
mov
inc
aam
leave
adc
pop
fadd
aam
cmp
hlt
aam
lret
out
int3
insl
shll
sbbb
fsts
jg
fmulp
mov
ret
fcmovnu
pop
pop
fiaddl
stos
rcrl
fstl
push
sbbl
inc
sbb
sarb
xchg
inc
pop
cwtl
jo
lock
mov
cwtl
into
mov
inc
les
nop
fidivl
fisttps
push
or
fimull
pop
mov
lock
lea
sti
push
pop
sbb
rorl
adcb
mov
es
das
fnsave
aaa
lret
inc
int
dec
pop
int3
test
dec
adc
inc
xlat
pushf
push
mov
mov
mov
out
mov
sub
push
bound
setnp
mov
dec
outsb
pop
int3
fildl
and
pop
pop
push
sbb
aam
add
ja
sub
push
or
lret
and
outsb
dec
lods
int
add
lods
dec
xor
push
fwait
inc
pop
leave
lods
inc
xor
jg
sarb
jl
sbb
rcl
faddp
push
insb
push
leave
xchg
push
jl
xchg
push
mov
fimull
mov
add
dec
pop
dec
xor
dec
ss
ss
rorl
fadds
fdivl
pop
iret
pop
fidivrs
push
jne
aad
adc
int3
push
push
add
push
icebp
rcll
ja
outsb
icebp
ret
dec
sbb
lret
jnp
pusha
orb
jo
jo
lock
jge
dec
jne
jne
jne
mov
adc
inc
jbe
roll
mov
adc
inc
addl
inc
push
inc
inc
push
cltd
jle
push
jnp
pop
mov
pop
jle
sbb
pop
imul
fstl
int
push
pop
test
aad
cmp
pop
and
fmulp
sbb
pop
and
les
loop
xorl
les
fcmovnb
push
sti
fcoms
fstpt
pop
fmull
add
inc
pop
xor
adcl
pop
inc
rcl
push
mov
sbb
xchg
movsb
inc
insb
dec
imul
mov
popf
fcos
fcmovbe
sbb
push
mov
jecxz
push
mov
push
adc
rcll
leave
lods
scas
lret
xor
ret
ss
dec
insl
inc
call
aad
pop
push
dec
ficoml
loopne
add
pop
push
dec
leave
sub
clc
xchg
cwtl
dec
inc
int3
shrb
xlat
adc
jae
push
mov
fimull
rorl
pop
lods
into
imul
pop
les
int3
sub
ret
fmuls
inc
pop
sarl
pop
jnp
loopne
sar
pop
test
add
jnp
pusha
rcr
fidivrs
mov
pop
dec
jmp
mov
xor
cmp
adc
int3
dec
inc
fwait
inc
stc
add
rclb
xor
jb
faddl
lods
pop
inc
push
xchg
fldt
pop
pop
sbb
mov
sbb
push
in
pop
movsl
mov
mov
jp
sub
xchg
xlat
leave
into
push
inc
fimuls
dec
aam
lods
dec
and
dec
ss
inc
or
xchg
aas
test
inc
pop
movb
jno
xor
inc
addr16
push
and
rol
pop
pop
fldl
fisubrs
aad
scas
inc
push
cmp
xor
rorb
int3
rorb
aam
xlat
or
fsubrl
cmp
pop
dec
and
lret
or
fstl
fcoml
adc
adc
nop
lods
dec
fstps
inc
lcall
fimuls
adc
sahf
lods
inc
sbb
push
fiadds
and
fstpl
adc
and
push
iret
inc
dec
mov
aam
sbb
pop
sbb
inc
dec
mov
pop
pop
lea
sbb
pop
and
push
dec
shrb
iret
xchg
dec
jmp
and
in
sbb
in
cmp
iret
xchg
sbb
pop
cmp
inc
push
mov
lret
and
pop
int
pop
sbb
push
push
pop
add
rorl
aad
pop
fstpl
fisttpl
pop
and
jbe
push
iret
and
ret
fstps
fisubl
fcompl
rcrl
pop
and
int
inc
sbb
inc
pop
and
pop
dec
into
lods
push
cwtl
pop
mov
inc
dec
push
inc
loop
sub
and
pop
les
push
mov
add
lahf
dec
mov
sbb
push
push
add
call
xlat
ss
dec
shrd
mov
pop
pop
filds
pop
sbb
inc
int3
xchg
enter
and
ret
fstps
aad
fsubrl
shl
push
aas
roll
pop
sub
dec
and
push
fnstsw
or
fsts
xor
inc
jmp
adc
xor
pop
into
dec
insl
push
mov
dec
inc
dec
xchg
ret
pop
inc
pop
cmp
push
mov
mov
add
movl
fimuls
enter
sti
or
push
inc
xor
pop
mov
add
ficoms
dec
jp
or
push
lahf
inc
push
dec
sbbb
pop
fisttpll
xor
lods
xlat
inc
sti
inc
sbb
inc
xor
pop
in
push
push
inc
dec
mov
dec
jnp
loopne
inc
mov
pop
xor
lds
dec
pop
xchg
and
int3
inc
lahf
fwait
pop
loopne
pop
lods
fwait
push
sti
cltd
push
pop
enter
iret
sub
dec
insl
fsubrl
pop
dec
xor
dec
jp
pop
push
fwait
pop
jecxz
cmp
inc
pop
or
dec
or
adc
push
call
loopne
call
inc
inc
pop
lods
pop
mov
push
ficoms
or
push
dec
push
sbb
pop
and
insb
push
imul
imul
or
push
or
and
int3
lahf
lods
dec
fstps
lahf
pop
mov
adcl
dec
pop
enter
adc
lret
inc
sub
lds
lods
int
pop
lret
leave
fwait
leave
mov
adc
push
push
add
call
rolb
xlat
lods
dec
mov
inc
fistps
pop
adc
pop
push
inc
xchg
aad
xchg
dec
cmp
pop
pusha
mov
adc
adc
or
rorb
xchg
inc
inc
ret
leave
sahf
pop
pop
lods
push
mov
filds
inc
xchg
or
rcr
mov
leave
xor
inc
andb
test
push
mov
adc
dec
pop
pop
inc
fistpl
sbb
inc
pop
add
xchg
push
push
mov
dec
adc
test
pop
sbb
orl
ret
fwait
dec
jns
ss
insl
pop
fsts
fcmovne
dec
add
lret
dec
and
inc
xlat
inc
push
aad
pop
adc
push
adc
xor
leave
push
int3
push
sbb
ret
sbb
fstps
lcall
push
dec
inc
xchg
inc
sbb
pop
ret
sbb
pop
adc
ret
add
push
push
mov
flds
inc
push
xchg
leave
or
push
xchg
test
dec
lcall
adc
adc
sbb
fists
insl
mov
fcmove
dec
dec
leave
jmp
adc
pop
inc
enter
push
add
out
dec
insb
dec
scas
push
mov
jne
cmp
xchg
insb
inc
sub
inc
fimuls
lods
push
mov
push
dec
xor
iret
pusha
inc
sub
pop
xor
insl
push
jmp
mov
clc
dec
ret
mov
mov
push
jbe
push
jl
cwtl
push
ja
iret
pop
or
push
addl
pop
mov
outsb
push
lods
aam
lea
fwait
jmp
fstpl
dec
push
sti
dec
xchg
dec
cmp
xor
mov
or
jmp
adc
lods
roll
in
inc
rol
sbb
enter
ret
push
inc
fstps
cltd
loopne
test
xchg
adc
cld
outsb
push
mov
and
or
add
movl
push
ss
es
sub
test
loopne
rcl
inc
inc
adc
push
int
int
rcrl
fdivl
in
adc
fcompl
out
mov
fstps
lret
sbb
or
push
jge
dec
lods
dec
rcrb
inc
push
sbb
inc
ret
lock
push
aam
ror
jae
pop
or
sbb
sbb
push
movsl
add
filds
pop
fcmovb
aam
mov
adc
push
dec
fistpl
inc
sbb
addr16
add
adcb
lret
dec
cwtl
test
dec
add
lods
shlb
inc
jle
roll
lret
fildl
push
inc
inc
or
pop
mov
es
sahf
aad
dec
hlt
inc
sahf
mov
insl
pop
mov
popf
cs
lods
pop
lret
add
push
jmp
lock
inc
pushf
in
inc
ficoml
pop
xchg
add
push
or
rcl
push
adcl
dec
mov
lods
aad
addb
inc
mov
jg
leave
add
mov
int3
nop
loopne
sbb
inc
fcmovb
stos
pop
jmp
sbb
cmp
push
inc
rclb
sub
shrl
xchg
cmp
rcr
or
dec
orb
into
adcl
pop
pop
aad
fcomps
push
mov
shlb
int3
lds
and
push
sbb
cwtl
aad
pop
orb
iret
fwait
test
and
in
fwait
int
pop
aad
fcomps
push
sti
xchg
enter
fwait
or
vpsubusw
ficomps
lock
xor
in
mov
cmp
lahf
lret
lods
aas
or
inc
leave
js
xor
fcmovnbe
les
loop
in
adc
inc
and
push
sub
mov
adc
dec
dec
xchg
rcr
mov
ffree
inc
loop
dec
into
mov
int3
insl
dec
mov
or
pop
pop
inc
fcmovnu
and
dec
fstpt
push
rcrl
jnp
push
dec
movsb
push
clc
rol
loop
add
push
jnp
xchg
fnstsw
lret
rcrl
or
or
inc
inc
rcll
lods
leave
sub
dec
sub
cmp
rorl
inc
or
rcll
outsb
xlat
adcb
dec
xchg
push
ret
jo
lock
and
inc
clc
push
aaa
pop
ror
push
dec
jle
fnstcw
xchg
ret
adc
sub
leave
shll
ret
sahf
movsl
inc
lock
lods
fdivrl
int
out
push
std
int
lret
lds
pop
lock
loop
or
mov
xchg
leave
ds
jnp
nop
xchg
sbb
inc
cltd
lock
subb
push
ds
push
push
call
movsl
dec
sbb
inc
inc
out
mov
ret
movsl
pop
repnz
inc
mov
clc
dec
rolb
rorb
ficompl
pop
mov
fwait
dec
pop
dec
into
fisttps
inc
adc
pop
sbb
push
aam
pusha
lret
dec
shrl
jl
xlat
pop
fcmove
sbb
and
xor
push
iret
popf
push
enter
dec
pop
mov
sti
inc
and
pop
es
rcll
push
aam
fcmovu
and
ret
ret
adc
and
fdivs
pop
iret
sbb
lcall
insl
lret
rorl
int
push
or
xchg
rcl
sbb
int3
xchg
lds
push
fucom
fbstp
leave
lcall
inc
int3
xor
into
dec
push
insl
ror
inc
push
aad
fcmovbe
jmp
sbb
push
inc
fbstp
imul
nop
cmp
fsubl
shll
iret
add
fiaddl
lret
roll
ret
fld
push
sub
fiadds
rcrb
rcl
leave
aad
fiaddl
out
or
adc
add
insl
ficoms
test
inc
inc
adc
into
aam
fsts
inc
dec
push
pushf
add
or
pop
fiadds
insl
shrb
dec
leave
mov
or
push
inc
mov
cmpl
inc
fsubs
ffreep
add
into
aam
enter
mov
leave
dec
rcrl
fwait
xchg
or
dec
mov
pop
inc
push
push
dec
ret
sub
addb
push
ret
sbb
icebp
lahf
pop
pop
fbld
aad
adc
and
dec
inc
sahf
lods
int3
xor
inc
fst
fcomi
mov
pop
fmul
push
pusha
push
lock
xor
dec
push
inc
faddp
jmp
and
and
rcl
sarb
xlat
iret
dec
lret
popf
sti
shl
ret
les
fcmovnb
aam
shll
iret
push
pushf
dec
sub
sbb
fcmove
jnp
inc
push
push
fwait
adc
int3
orb
rol
pop
flds
outsb
rorb
mov
inc
jnp
pusha
push
fstl
jp
sti
shll
mov
mov
inc
lret
leave
int3
fstp
into
adc
shlb
lds
fsubs
pop
push
pop
fst
push
push
lahf
pusha
lret
sbb
fcoml
fucom
pushf
shlb
dec
cmp
repz
adc
popf
inc
les
fstpt
push
xor
push
push
test
sbb
iret
shufps
mov
sbb
sbb
push
pop
mov
rclb
and
and
into
cmp
inc
inc
sbb
pop
xor
aad
adc
enter
int
add
ret
jle
iret
imul
faddp
xor
out
xor
and
ret
push
inc
fstpl
outsb
push
sub
dec
pop
pop
sbbl
pop
pop
push
sbb
out
add
stc
iret
pop
pop
test
loop
jp
movsl
or
faddl
mov
mov
rorb
jo
push
pop
jp
sti
pop
jne
dec
lds
lret
das
lret
into
in
push
jge
aad
rol
fistpll
test
sysret
lret
inc
test
mov
mov
fistps
and
fdivs
pop
call
aad
xchg
sbb
out
lret
inc
pop
test
push
pop
pusha
fsubrp
aad
cld
fildll
dec
int3
or
pushf
mov
fists
rcrb
rcrb
pop
adc
inc
inc
pop
fstpt
pop
or
into
rcll
pop
dec
push
lahf
mov
and
ret
leave
les
xchg
mov
rclb
aad
adc
xchg
push
shll
ret
flds
sbb
sbb
add
xor
dec
pop
pop
fistps
sti
dec
pop
pop
inc
sbb
sti
pop
and
push
int3
lret
ds
cmp
outsb
pop
or
pop
aam
into
pinsrw
xor
pop
out
ret
insb
push
leave
aad
push
mov
pop
lods
xchg
lahf
sti
inc
sbb
inc
test
sbbb
shll
fstl
push
xor
inc
loopne
dec
xchg
pop
jge
xlat
aam
popf
dec
ficomps
inc
sub
xchg
insb
fucomi
xchg
leave
out
test
or
sbb
fcmove
push
sti
fisttpl
inc
fcoml
xchg
rcl
pop
xlat
xor
leave
inc
addl
cmp
out
adc
rcr
adc
aam
inc
inc
push
cmp
fwait
inc
aas
xchg
jmp
loopne
push
push
add
out
jp
enter
mov
cmp
outsb
fimull
aam
fists
rcll
pop
lcall
test
insb
fcmovne
iret
fstpl
filds
mov
xchg
fcmove
sti
lret
int3
add
jnp
mov
ret
lock
outsb
pop
lods
fcmove
dec
pusha
push
pop
dec
insl
enter
lock
lods
inc
xor
fmull
rcl
shlb
dec
int
push
mov
fistps
or
push
into
fistpll
sahf
push
mov
push
int
dec
cli
xchg
cmp
ds
mov
dec
dec
lds
push
add
xlat
dec
xchg
dec
push
cmp
push
test
inc
shlb
iret
pop
test
xchg
aam
jl
push
inc
mov
lds
rorl
rorl
or
jmp
push
pop
ret
mov
int
jg
lock
and
inc
or
pop
pop
inc
xchg
pop
fisttps
lea
aad
adc
inc
add
pop
lds
dec
insl
ret
lret
pop
rorb
inc
and
inc
insb
inc
and
fstpl
dec
push
lcall
ret
jmp
pop
or
fimull
sarl
sbb
lods
mov
into
xchg
fwait
loopne
lods
push
inc
fcoml
insb
pop
aad
xchg
aam
xor
add
and
mov
jnp
sbb
push
lret
mov
cmpb
dec
sbb
shlb
inc
test
ss
jmp
ja
and
shrb
fxch
fidivl
mov
inc
cmp
mov
lahf
insl
pop
leave
push
pop
rorb
push
jp
xchg
into
inc
test
lds
inc
insl
fcmovnbe
pop
adcl
aad
pop
mov
fadd
or
jns
leave
scas
dec
rcr
push
jp
cmp
iret
fnstsw
add
leave
mov
jg
push
pop
faddp
inc
lahf
clc
pop
fstpl
mov
or
inc
int
or
mov
fnstenv
push
mov
sub
dec
push
fimuls
dec
sbb
dec
pop
ret
inc
out
lods
pop
and
fdivrp
push
movsb
iret
jbe
rorb
jp
pushf
daa
dec
in
sub
pop
sbb
adc
xlat
loopne
dec
ds
out
push
add
push
pop
sbb
fistps
fsts
fisttps
pop
push
lret
ficomps
popa
into
ffree
push
mov
sbb
faddl
adc
sbb
pop
sti
pop
out
iret
push
pop
xor
xor
or
push
cmpl
lcall
cwtl
aam
fistl
test
insb
dec
dec
lret
pop
dec
sbb
xor
xchg
jge
or
add
inc
xor
mov
mov
sahf
mov
cmovg
dec
push
inc
daa
pop
ss
inc
lea
dec
mov
inc
sub
pop
iret
leave
pop
fisttps
push
rorb
aam
cwtl
loopne
add
clc
xchg
test
inc
int3
lock
loopne
icebp
test
pop
push
xchg
loopne
adc
inc
insl
inc
mov
xchg
lds
dec
sbb
je
cmp
cmp
push
int3
cltd
js
adc
pop
dec
inc
push
inc
inc
xchg
pop
fbstp
mov
movsl
push
cmp
repz
push
mov
add
shlb
aad
push
and
clc
dec
mov
inc
pop
fldt
push
rolb
in
pop
pop
fcomip
cs
enter
dec
fimuls
pop
pop
fidivl
pop
lods
xchg
xlat
adc
inc
rolb
rcrl
leave
mov
mov
jnp
xchg
dec
jecxz
xlat
movsb
push
pop
pop
aaa
int3
jno
xchg
imul
fwait
add
jmp
dec
dec
aad
fimuls
roll
outsb
pop
lods
push
cmp
stos
xchg
mov
fincstp
dec
jmp
adc
push
and
lods
cmp
shll
or
xchg
pop
fisubrs
lret
rorb
push
inc
rol
mov
shrl
inc
test
shrl
push
pop
sbbl
lcall
sti
xlat
push
ror
aad
lcall
fwait
dec
out
out
pop
pop
cmpsl
clc
dec
out
addr16
inc
jp
enter
dec
inc
fadd
pop
jg
sarl
push
loopne
adc
rcrb
nop
pusha
cmp
repz
pop
push
and
enter
addr16
enter
jle
adc
jl
push
jle
shll
push
loopne
sahf
jl
push
jp
pop
rclb
xchg
sbb
or
aam
pop
push
pop
push
sarb
push
ss
out
movsl
xchg
pop
adc
pop
ret
out
insb
xchg
ret
jg
sbb
shl
inc
jle
add
mov
adc
xor
int
mov
ds
fwait
xor
pop
arpl
pop
xchg
cmp
mov
mov
outsb
inc
lods
inc
fsubl
aad
mov
data16
out
iret
or
adc
pop
sbb
cwtl
pop
pop
loop
sbb
mov
les
lds
mov
xor
cld
or
inc
insb
rcl
jle
push
jle
sarl
mov
popl
fdivs
fsubr
pop
xchg
inc
outsb
push
sub
mov
adc
sbb
mov
pop
add
mov
xor
pop
int
cmc
dec
bound
xchg
fsubl
pop
test
pop
rol
mov
and
les
adcl
sbb
ftst
ss
jge
push
xchg
xchg
mov
sbb
sbb
jg
lret
lods
xchg
or
mov
or
pop
mov
push
xchg
push
push
pop
pop
pop
pusha
pop
popf
push
mov
jecxz
iret
sbb
cwtl
sbb
movl
in
xchg
fists
push
or
int3
pop
adc
aas
pop
jl
dec
xchg
leave
lock
jl
jle
xchg
and
outsb
bound
dec
loop
imul
shl
sbb
fdivp
inc
mov
lods
lds
push
sbb
xchg
fnsetpm(287
aaa
pop
fwait
inc
lahf
push
outsb
pop
sub
addr16
pop
and
lods
es
mov
sbb
dec
int
inc
adc
push
add
pop
add
fcomps
ficomps
ficomps
loop
or
scas
enter
sbb
lcall
aaa
cwtl
jl
sbb
cltd
sbb
pop
xchg
inc
testl
inc
push
pushf
inc
cwtl
jle
ret
lods
daa
xchg
lods
inc
push
mov
xchg
out
mov
add
xor
pop
pop
jae
inc
bound
adc
xchg
add
adc
fwait
ret
add
pop
aam
adc
in
cmp
in
fcoms
adc
rcll
push
add
ret
subb
call
adc
int3
jle
or
xchg
or
mov
push
jl
mov
or
mov
mov
lods
push
push
mov
push
xchg
pop
insl
es
insb
add
push
xchg
mov
and
add
inc
insl
push
add
ret
jp
andb
rcll
sbb
jg
sbb
inc
mov
movsl
fisttps
ffreep
pop
repz
iret
fcoml
sbb
mov
setl
jg
dec
pop
ss
pop
pop
pop
ror
jno
aad
scas
aam
adcb
loop
adc
adc
xchg
xorb
push
xchg
ficomps
sbb
push
clc
pop
test
cwtl
dec
pop
lret
and
lods
sbb
and
cmp
movsl
dec
lea
mov
insb
lds
adc
add
dec
in
cmp
ret
lahf
adc
add
add
ffree
push
sti
lods
pop
faddl
xor
in
mov
aam
jnp
pop
ficompl
xchg
pop
insb
clc
popf
xor
test
fwait
pop
lods
sbb
arpl
inc
xchg
pop
mov
fbld
xchg
pop
jge
cmpb
dec
iret
xchg
cwtl
inc
dec
imul
inc
pop
inc
rcrb
xor
pop
ljmp
push
out
push
xor
add
out
xchg
inc
pop
inc
add
ret
out
lods
daa
inc
jl
inc
arpl
into
ret
ret
cmp
into
or
ret
push
push
jnp
fiadds
mov
add
pop
insb
das
ret
les
cmp
jb
ret
daa
mov
push
mov
push
data16
sbb
xchg
inc
pop
lock
mov
sbb
aad
inc
push
or
fs
or
xchg
or
push
or
push
or
xlat
or
pop
or
xchg
fs
push
or
dec
repnz
cmp
pop
insb
xor
rcl
sbb
sub
xchg
pop
lcall
in
dec
sbb
jl
pop
mov
and
int
decb
mov
dec
sbb
or
pop
leave
add
xchg
cwtl
mov
or
fistl
aad
add
fwait
and
adc
sti
rclb
mov
int
aad
ret
iret
or
loopne
lahf
fwait
dec
cmp
in
dec
pusha
jmp
xor
xlat
inc
pop
adc
xchg
fildl
xchg
push
fnsave
push
into
xchg
adc
int3
rolb
xchg
and
cmp
mov
jne
jp
mov
mov
xchg
pop
pusha
int3
push
cltd
xchg
mov
push
jmp
adc
cmp
and
insl
inc
dec
mov
insl
sbb
out
mov
cltd
mov
xchg
xchg
add
add
es
cmp
mov
movsl
pop
cld
in
loopne
dec
shrb
adc
sub
inc
dec
jge
test
inc
push
shrl
cmpsl
lret
pop
jnp
xchg
add
int3
or
cld
iret
movd
adc
iret
adc
xchg
jle
sarl
push
jle
sarb
push
jle
rcrl
fistl
add
xlat
bound
pop
rclb
xchg
push
mov
xchg
fst
xor
movups
rorl
and
out
dec
rol
mov
and
add
rcl
or
inc
push
jle
ret
jg
dec
test
cmp
lock
hlt
add
xlat
mov
iret
int3
out
cs
xchg
fiaddl
jle
adc
shlb
aad
add
popa
lret
lahf
fstpl
loop
add
cmp
fcmovnbe
push
sbb
add
call
cmp
lret
push
and
lcall
adcb
ja
dec
mov
fnstsw
push
sbb
push
loop
pop
xchg
push
dec
cmp
inc
jp
sti
inc
out
fadds
pop
and
pop
mov
pop
pop
pop
test
push
add
cmp
push
inc
test
dec
pop
push
sub
ja
popf
push
outsb
shl
scas
pop
outsl
push
dec
mov
mov
push
inc
mov
dec
mov
clc
inc
and
int3
push
fwait
dec
and
inc
nop
add
sbb
lahf
or
or
push
inc
rol
jmp
and
and
cmp
ret
pop
mov
push
push
add
adc
lahf
pop
pop
ficoml
dec
jp
sbb
inc
sbb
pop
ret
dec
jmp
aad
or
and
or
or
pop
loopne
pushf
lea
mov
dec
adc
sbb
pop
les
push
int3
fldl
inc
sbb
pop
and
dec
mov
add
int
dec
aas
inc
das
ljmp
push
mov
xchg
mov
xchg
aam
xchg
jne
jns
jge
roll
or
out
sbb
pop
fnstcw
xchg
cltd
loopne
push
jl
pop
orb
or
mov
push
outsb
mov
outsb
subl
outsb
subl
subb
test
outsb
test
outsb
xchg
outsb
xchg
outsb
cltd
outsb
sbb
outsb
sbb
outsb
sbb
outsb
sbb
outsb
pushf
outsb
pop
outsb
lahf
outsb
push
outsb
sahf
outsb
adc
outsb
adc
outsb
adc
outsb
adc
outsb
adc
outsb
xchg
outsb
pop
outsb
xchg
lods
push
xlat
rcrl
inc
mov
dec
mov
dec
mov
or
int
pextrw
push
adc
pop
loopne
inc
inc
lret
arpl
adc
sub
or
jb
rolb
jae
ficomps
bound
mov
outsl
adc
shll
sti
xor
push
push
push
inc
iret
fwait
or
fistpll
loope
pop
inc
pop
stos
dec
add
lods
lock
add
mov
fstps
nop
inc
dec
sub
scas
test
imul
mov
push
cwtl
sub
xchg
pop
adc
push
xchg
outsb
cmc
mov
or
sbb
pop
fdivrp
imul
scas
adc
sahf
hlt
daa
into
cmp
inc
push
pop
fwait
jp
push
and
xor
dec
dec
lret
sbb
scas
bound
xlat
and
pusha
out
enter
fists
shll
stc
rcll
jge
mov
or
popa
jbe
lahf
xchg
adc
push
adc
mov
cmovg
insl
xchg
cmp
push
mov
pop
cmpsb
pusha
cld
faddl
xchg
dec
jmp
scas
clc
adc
sbbl
sbb
jnp
push
mov
xchg
lret
repz
mov
inc
cmp
call
imul
push
mov
sbb
aad
movsb
push
add
sub
cmp
in
cmc
xor
iret
fxch
sbb
xchg
pop
pop
pop
jl
push
mov
jl
inc
arpl
pop
push
cmp
push
test
adc
call
mov
and
mov
jnp
add
fnstcw
aas
fadds
xor
xchg
cmp
or
adc
sbb
insb
scas
fs
sbb
mov
dec
out
out
icebp
jae
orb
mov
adc
mov
loop
mov
xchg
fildl
sub
dec
dec
das
aad
xchg
xchg
dec
dec
xor
ljmp
push
icebp
adc
push
lds
fiaddl
faddl
jmp
ficomps
lret
mov
dec
lahf
push
ret
pusha
inc
dec
cs
iret
pop
cmp
int3
in
jb
inc
lods
inc
mov
xchg
pushf
mov
popf
insl
fdivs
inc
pop
mov
mov
outsb
jl
ffree
inc
push
inc
rcr
mov
sbb
fdivs
sbb
out
out
mov
iret
loop
sub
clc
pop
mov
adc
insl
xchg
and
or
inc
pop
pop
cltd
add
pop
mov
sbb
cmp
inc
mov
dec
sti
adcb
inc
jae
lds
jnp
je
pop
mov
or
push
pop
popl
mulb
lahf
push
xchg
lods
inc
xchg
add
push
jg
inc
inc
mov
or
int
jmp
pop
leave
xor
lods
pop
adc
in
mov
repnz
aaa
inc
pop
pop
pusha
insl
fsubr
and
cmpsl
and
or
jmp
mov
sti
sti
outsl
fistpl
push
popf
fisttpl
iret
adc
inc
test
out
out
cmp
add
add
imul
pop
sbb
push
adc
into
pop
inc
mov
dec
adc
or
fstps
gs
setb
pop
add
scas
adc
push
mov
adc
mov
xor
in
mov
sbb
ret
mov
push
mov
pop
jnp
jno
lret
fldcw
fs
jp
cmpsl
pop
mov
push
cs
adc
jo
mov
xchg
pop
push
ss
mov
sbb
lods
mov
sarb
int
aad
mov
das
jb
or
or
add
mov
cmp
stc
sbb
mov
inc
push
pop
rorl
pop
cmpl
or
sub
inc
push
pop
or
xor
pop
pop
nop
push
fs
insl
mov
test
clc
sbb
inc
xchg
push
mov
loopne
rcll
adc
mov
or
stos
jle
or
push
andb
xlat
push
add
ret
add
ds
arpl
push
or
int3
mov
dec
out
stc
push
add
push
adc
push
inc
insl
out
cld
inc
pop
icebp
popl
push
and
xor
test
mov
push
mov
mov
fimull
pop
in
pop
imul
ret
mov
leave
setno
mov
fwait
lock
xorb
out
pop
cmp
fldt
outsl
push
dec
or
cwtl
lahf
call
add
mov
inc
adc
cmpsl
sbbl
inc
jbe
inc
sbb
inc
imul
lds
movsl
pop
ret
mov
jbe
cwtl
pop
lea
mov
pop
jno
lret
sbb
sbb
cwtl
mov
daa
sub
imul
hlt
call
add
pop
dec
or
in
mov
es
jmp
dec
pop
lret
pop
sbb
int
mov
push
js
fmulp
rep
and
rorl
mov
aam
sbb
and
cli
or
mov
setge
into
je
dec
outsl
lods
fimuls
jmp
xchg
jmp
pusha
ss
ret
shl
dec
pop
pop
cmova
mov
jmp
seto
pop
mov
mov
call
adc
je
add
sti
mov
sbb
fimull
in
push
data16
repz
and
inc
jnp
nop
addb
cmp
int3
cmp
dec
lret
dec
cmpsl
nop
mov
test
stc
jbe
rorb
lret
xchg
aaa
mov
jmp
addb
addr16
xchg
pop
add
movsl
adc
stos
inc
rolb
inc
cmp
dec
mov
lret
dec
out
adcl
lods
iret
cwtl
inc
pop
gs
nop
lcall
cmp
inc
cs
into
mov
adc
call
cmp
call
imul
sub
scas
dec
outsl
lea
daa
push
mov
nop
push
xchg
lods
loope
sbb
lret
jecxz
lahf
scas
mov
push
sarl
cmp
nop
lods
das
loop
mov
clc
std
clc
pop
and
adc
mov
mov
xor
cmp
push
test
and
notb
into
orb
push
sub
imul
lret
or
mov
dec
das
les
mov
addl
stc
sbb
sub
dec
mov
sbb
fdivs
fincstp
stc
mov
pop
add
mov
xchg
or
scas
mov
sbb
mov
inc
xchg
jne
mov
das
sbb
or
test
repnz
inc
push
push
inc
or
rcrb
pop
jle
scas
loopne
push
adc
push
mov
pop
inc
cs
movsl
insl
out
sahf
sbb
dec
mov
leave
dec
mov
gs
filds
popf
jecxz
mov
push
cwtl
adc
iret
leave
inc
and
sbb
inc
aad
mov
test
pop
cmp
dec
cwtl
dec
jg
cwtl
or
mov
sbb
hlt
or
imul
adc
in
push
or
flds
es
imul
sbb
sbb
mov
mov
sbb
inc
cmpsl
xor
fs
roll
xchg
testl
daa
fmuls
pop
push
pop
shrl
cmp
pop
push
inc
das
data16
push
cmpb
adc
lret
mov
fucompp
shll
insb
cs
pop
into
adc
mov
and
xchg
fsubl
push
push
pop
insl
and
pushf
push
fimull
adc
lock
es
adc
mov
lea
fwait
pop
pop
lahf
stos
mov
orb
ficoms
ret
insl
dec
mov
out
das
mov
ret
sbb
push
push
mov
mov
fadds
xchg
sub
ret
inc
int3
or
or
rorb
fcmovne
mov
leave
pop
out
movsl
pop
pop
push
cld
call
sbb
lods
dec
shrd
bound
scas
sar
add
jmp
decb
test
push
push
cmp
xchg
jmp
outsl
push
push
inc
ret
mov
andb
insl
test
packssdw
orb
mov
sub
or
int3
push
and
mov
sub
cs
inc
loopne
hlt
addl
adc
aad
mov
dec
cmp
scas
cmp
int3
sbb
shrb
lret
js
aas
stos
adc
loope
in
iret
bound
xchg
pop
sbb
mov
xor
adc
push
xlat
int
ret
mov
pop
ret
in
fwait
pushf
jmp
sbb
push
and
adc
sub
sub
pop
ret
scas
scas
insb
sbb
aad
jp
add
sbb
cmp
scas
mov
lahf
int3
lret
jmp
sub
inc
pop
and
sub
and
adc
adc
push
aad
fildl
sar
icebp
popf
adc
outsb
bound
inc
ret
nop
and
add
lret
push
mov
cmc
mov
imul
stc
xor
mov
icebp
out
mov
jae
test
roll
dec
ficoml
xchg
sbb
xchg
in
inc
dec
mov
setg
cmp
mov
outsl
mov
pop
mov
jg
rcrl
sbb
and
xor
sub
jae
and
pop
pop
adc
scas
cmp
xor
pop
pop
inc
or
addr16
sbb
inc
repnz
ret
iret
jmp
jno
mov
adc
into
popa
filds
pusha
push
inc
outsb
mov
add
pop
fadd
adc
and
lahf
sahf
mov
dec
pop
mov
push
dec
leave
test
orb
jmp
sti
je
loope
and
push
int
mov
push
push
jmp
dec
call
pop
stos
sbb
push
sub
lods
cmp
push
insb
mov
sti
movsl
xchg
mov
inc
andb
adc
movsb
sbb
xor
dec
int3
int
jmp
sub
inc
jb
or
stc
or
add
cmp
outsl
stos
cs
push
hlt
jg
shll
fnstenv
dec
fxch
pushf
pop
mov
insl
out
rcll
scas
addb
pop
xchg
sbb
mov
insb
arpl
adc
cs
mov
or
fimuls
ljmp
pop
mov
jmp
jnp,pn
dec
dec
fmull
push
insb
xchg
imul
hlt
push
lds
mov
ret
ficoms
mov
mov
mov
out
shlb
lret
in
ret
sub
xor
popa
push
lcall
xor
xor
xor
push
pop
into
scas
pop
pop
push
add
repnz
jl
ret
mov
or
pop
cltd
icebp
ds
cld
push
imul
mov
punpcklwd
lock
int
loopne
or
xor
mov
iret
or
setns
movb
fcmovb
lret
sahf
mov
arpl
xchg
call
or
dec
push
push
cmp
fwait
ja
pop
cmp
push
lahf
aam
aaa
push
arpl
daa
push
fwait
aam
jle
or
mov
mov
push
xor
add
inc
negb
mov
ret
lahf
je
add
adc
pop
lret
out
stc
pop
cmp
ja
xor
cmp
push
dec
leave
push
cs
mov
pop
xchg
bound
fists
lret
repnz
sub
push
pusha
add
cmpb
or
cvttps2pi
dec
or
lcall
fsub
dec
xchg
loopne
sub
scas
push
sub
mov
out
outsl
out
pop
pop
flds
sbb
mov
mov
shrl
jns
pushf
scas
add
mov
rcll
aad
push
mov
push
subb
and
adc
shlb
lret
pushf
inc
insl
leave
sarl
push
dec
push
or
insl
addr16
push
sub
pop
ss
mov
or
in
cmp
roll
pop
andb
inc
test
xchg
push
into
pop
add
aaa
test
cs
gs
xlat
pushf
fcoms
or
jp
dec
mov
adc
xchg
push
inc
pop
mov
pop
sahf
push
jg
cwtl
add
cmpsb
xor
mov
dec
insl
outsl
jne
stc
pushl
sbb
sbb
loope
sbb
ficoml
movsl
shlb
push
xlat
das
mov
aaa
dec
sbb
pop
lods
outsl
xchg
inc
add
sahf
inc
mov
fucomi
outsl
test
pop
cmp
xchg
lret
jle
loopne
xchg
sub
decl
mov
aad
push
pop
aas
aad
push
imul
call
rol
push
push
mov
sbb
jnp
lret
scas
pop
mov
imul
dec
pop
sbb
xchg
je
push
inc
scas
mov
sbb
rorb
dec
dec
mov
inc
scas
pop
lcall
xchg
dec
stos
lods
mov
int3
out
loopne
push
sbb
aad
insb
scas
mov
decb
pop
and
stc
sub
mov
hlt
sbb
inc
mov
push
adc
mov
adc
or
mov
and
sbb
push
sbb
aas
dec
dec
frstor
push
not
mov
adcb
xor
rorl
icebp
push
out
cld
and
cmpsb
xor
adc
js
lahf
push
jmp
bound
add
ss
lea
xchg
cs
mov
andb
ss
jns
int
push
shr
pop
and
sbb
jle
pop
data16
inc
mov
sub
sbb
mov
or
stos
test
push
push
orl
ror
mov
xchg
add
test
adc
icebp
insl
popa
pop
leave
les
sbb
aam
rolb
lods
mov
add
scas
pop
or
cs
out
jne
sbb
xchg
stos
dec
fisttps
cmp
out
pushf
lret
jnp
in
push
test
push
dec
sbb
ret
dec
out
xchg
add
mov
mov
lods
and
fcoms
call
mov
pop
movsl
cmpsl
or
into
mov
xor
mov
or
dec
sar
inc
das
inc
int
imul
ja
iret
or
insl
xchg
stos
push
dec
push
aas
mov
dec
bound
pop
jbe
sbb
jnp
push
mov
adc
inc
fucomip
and
dec
xor
int
scas
jmp
data16
lahf
xlat
cmp
dec
jmp
adc
sti
jg
adc
jle
lea
adcb
pop
sbb
or
fsts
push
mov
cmp
inc
pop
xor
push
pop
inc
leave
inc
loopne
mov
icebp
mov
fxam
and
push
ret
pop
jl
pop
pop
pushf
call
add
push
into
jns
inc
faddp
mul
test
adc
sti
mov
pop
scas
xchg
nop
jg
xlat
inc
or
outsb
adc
lods
push
je
int3
dec
ror
lea
sbbb
push
into
push
movsb
or
pop
or
or
jmp
dec
sbb
adc
cmpsb
pop
fcoms
push
cmp
pop
cmc
lcall
in
subb
cmp
or
leave
fcmovne
fwait
scas
stos
pop
xchg
push
mov
ret
xchg
jmp
pop
mov
imul
insb
pop
or
sbb
add
push
test
inc
xor
fistl
mov
cs
add
jnp
into
shlb
push
stos
ret
and
imul
ror
sbb
jge
cs
out
lcall
shl
xchg
jbe
or
test
cmpb
mov
fwait
out
and
clc
push
sub
xor
xor
push
push
dec
loope
or
mov
inc
cmp
lret
clc
sti
popf
loope
in
mov
sti
xchg
jge
outsb
pop
int
pop
iret
mov
jbe
inc
inc
mov
push
out
push
leave
dec
das
mov
rorb
popa
jno
popa
adc
jle,pt
dec
outsl
ret
lahf
lods
dec
sub
leave
inc
push
cmp
dec
aad
mov
ret
notb
pop
jp
push
loopne
mov
fidivl
sar
loopne,pn
sbb
cmpsb
mov
push
mov
add
cld
fildl
jecxz
hlt
sbbb
xchg
out
mov
xacquire
leave
push
dec
adc
sahf
aad
mov
js
and
scas
pop
mov
rcrb
rcl
leave
pop
dec
pusha
or
inc
push
push
pop
add
mov
pop
ret
jae
pop
dec
and
rcl
pushf
mov
cmc
bt
and
not
push
sar
bt
push
bt
btc
lea
push
bt
cmc
mov
and
sbb
mov
xchg
sub
stc
mov
push
sar
pushf
shr
xor
lea
sete
call
lods
or
mov
inc
mov
js
cmp
sub
mov
scas
jae
pop
pop
leave
cmp
lods
test
pusha
mov
adc
mov
out
leave
inc
scas
or
in
mov
jae
and
xor
mov
shlb
ss
cltd
stos
adc
mov
fcompl
pusha
sub
int3
mov
xor
fcom
mov
and
mov
pusha
mov
pushl
ret
jmp
inc
movsl
imul
push
pop
cmp
pop
push
lcall
pop
movsb
imul
dec
mov
aam
and
stos
dec
dec
dec
inc
xchg
cmp
mov
enter
repz
jmp
icebp
pop
mov
xchg
or
sbbb
mov
jg
ljmp
xor
cmp
inc
or
out
cmpsb
xchg
addb
push
adc
lds
gs
test
xchg
std
dec
cltd
or
mov
test
aad
stos
es
push
push
xchg
sub
fwait
cmc
mov
push
or
roll
and
push
lcall
jecxz
outsl
adc
bound
xor
stos
adc
insl
jno
cld
cmp
add
int
push
pop
pusha
adc
jp
test
pop
xchg
add
ss
jne
lea
sub
in
cltd
outsb
sub
insl
sub
dec
sti
ja
cmpsl
xchg
jnp
pop
pop
not
iret
fwait
imul
cmp
mov
mov
sahf
push
pop
ficoms
cs
rorl
aam
push
aad
push
into
mov
mov
daa
sti
adc
mov
xor
cmp
mov
lock
imul
mov
xor
adcl
int3
sub
out
xor
hlt
repnz
mov
outsl
jnp
xchg
cli
adc
lds
push
shlb
int
sbb
xor
mov
add
cltd
jne
cmp
xorl
lret
sbb
jo
imul
rorb
cs
cmpsb
ljmp
mov
cltd
pop
inc
ds
or
ret
jne
mov
aam
loope
ror
and
adc
lods
xchg
icebp
pop
mov
dec
or
add
inc
or
xchg
cmp
insb
aad
js
sbb
sbb
addr16
lods
xchg
inc
mov
scas
ja
pop
pop
mov
repnz
sbb
cmc
cmp
sarl
xchg
scas
scas
cs
jo
xor
cmp
inc
roll
jns
cmp
add
push
jp
pop
jae
xor
in
fucomi
inc
fstpt
jnp
sbb
out
jge
and
adc
sahf
out
dec
mov
inc
sub
cli
adc
or
jno
jae
jo
push
pop
jge
rcr
aad
mov
add
gs
repnz
mov
int
push
and
sub
shll
lcall
push
xor
lret
push
pushl
in
add
lods
ret
adc
lds
or
imul
pop
das
mov
movl
mov
pushl
lea
jmp
push
sbb
dec
imul
std
inc
lds
jge
inc
mov
out
aam
cld
pop
lahf
imul
sub
push
outsb
add
dec
pop
push
popf
sub
push
int
movsl
mov
lods
clc
popa
pop
idiv
std
gs
xchg
push
rcl
cmp
fwait
fwait
jg
les
adc
into
stos
cwtl
in
push
imul
in
and
inc
mov
mov
adc
cmc
xor
rcrl
cwtl
pop
aam
sbb
popf
cmc
fld
xchg
jne
cmp
add
icebp
fnstsw
mov
loopne
sbb
xchg
outsb
inc
inc
xchg
lods
arpl
gs
data16
mov
data16
push
push
adc
pop
shll
and
dec
fmuls
cmp
scas
cld
xchg
icebp
shl
jp
dec
push
inc
inc
pushf
add
inc
lods
or
or
jle
cmp
pop
mov
outsb
movsl
negl
push
cmp
aad
test
test
arpl
push
and
fsubrl
xchg
int
mov
shlb
mov
push
push
int3
jns
dec
es
jge
test
xchg
inc
sub
dec
popf
mov
cmp
aad
and
sub
mov
push
adc
cmp
and
xchg
xchg
xchg
fdiv
push
push
imul
cmpsl
adc
push
mov
xchg
cltd
addl
push
mov
js
inc
jg
and
std
xchg
inc
jne
lock
outsb
mov
cmpsl
xchg
xor
sbb
and
xchg
push
data16
int3
xchg
mov
or
mov
xor
jecxz
mov
fadd
adc
call
push
imul
cli
dec
mov
jb
push
outsb
fidivrl
mov
add
pop
xlat
cmp
iret
ffree
movsb
and
pusha
les
cld
jl
insb
push
and
imul
dec
jp
neg
inc
push
cmp
add
fisttps
sbb
lret
sub
ficomps
jmp
mov
dec
jae
test
out
loop
sub
cmpsl
pop
fimull
xor
ja
inc
pop
add
fldcw
push
dec
inc
lea
jne
pushf
call
shr
sub
gs
inc
movsl
std
shrl
add
lds
les
jge
pop
lret
testb
push
xor
loopne
dec
and
push
inc
xchg
or
je
sbb
pop
ja
cmp
jmp
scas
fwait
addr16
and
push
inc
mov
test
shr
call
mov
lods
add
aad
movsl
add
dec
sarl
cmp
ds
and
cmc
mov
inc
inc
inc
xchg
pop
cmp
movsb
mov
or
push
fs
push
popa
push
mov
rcl
add
add
add
scas
add
mov
dec
cmp
push
fisubl
lods
inc
adc
fcoms
mov
add
push
push
xchg
adc
adc
fstpt
aad
rcll
rcr
cmp
pop
sarl
mov
sub
mov
inc
push
out
lret
loope
pop
cld
jl
push
inc
pop
pop
fimull
xor
movsl
add
push
inc
out
outsl
fcoms
lea
mov
and
cmp
inc
es
shlb
addr16
sub
jbe
not
sub
in
leave
mov
pop
inc
xorl
cmp
lea
je
jmp
adc
aad
test
cld
jg
or
push
orl
lds
clc
add
pop
xchg
pop
gs
sub
enter
ret
mov
insl
cld
inc
add
push
lret
test
mov
leave
stos
add
dec
iret
arpl
js
test
inc
xchg
add
mov
and
pop
jne
dec
jbe
aad
lds
out
dec
inc
mov
outsl
xchg
stos
loop
push
fld
sbb
shlb
lods
cmp
dec
push
xchg
push
jg
push
cltd
adc
ret
jge
lret
sub
ds
in
sbb
fists
dec
sarl
sbb
notl
data16
addl
xor
inc
ja
je
xor
popf
sbb
out
adc
adcl
rclb
gs
lds
or
stc
inc
xchg
add
lcall
iret
or
stos
jecxz
jecxz
add
stc
mov
jmp
add
sub
cmp
in
mov
orb
lods
mov
je
mov
xor
push
imul
or
pop
ds
xchg
stos
out
and
divl
es
inc
mov
mov
push
jmp
push
loopne
fdivs
or
les
jecxz
imul
fidivl
push
es
xchg
mov
fmulp
scas
lods
cmp
pusha
pushl
pushl
jmp
lea
call
cmp
push
push
cmp
jmp
push
bt
rol
pushf
pushw
popfw
pushf
push
movw
inc
jmp
dec
lods
fs
imul
movsb
and
mov
jl
loop
das
sbb
orb
rcll
jl
and
js
scas
jmp
mov
dec
inc
mov
xor
push
add
xchg
mov
dec
and
cmp
es
inc
jmp
addl
int3
lods
and
jb
movnti
fs
adc
mov
arpl
mov
dec
dec
xor
or
in
sar
cmp
fcmovu
cwtl
mov
pop
push
bswap
lea
mov
lea
push
push
movw
movl
jmp
lcall
aad
lods
adc
xchg
adc
mov
sbb
mov
arpl
push
jne
xchg
xchg
pop
pop
les
or
fildl
jmp
mov
jne
lret
xor
mov
sarb
and
fsubrs
and
push
mov
mov
ret
push
cs
inc
sub
jg
fildll
aaa
xchg
test
cli
stos
pop
mov
sbb
or
mov
data16
mov
dec
dec
cmc
mov
lea
pusha
clc
push
pushl
test
jmp
add
and
add
add
addb
add
adc
add
add
add
add
add
add
add
add
add
and
add
popa
and
add
add
add
into
sbb
add
add
mov
add
add
add
addb
add
adc
add
xchg
add
add
xchg
sub
js
sub
lcall
add
push
sub
add
add
add
insb
test
push
imul
stc
inc
lods
or
or
fiaddl
sti
inc
sub
cmpsb
mov
div
cmp
xor
and
adc
cmp
dec
and
pop
ret
cmpsl
lahf
fs
jbe
sub
in
sub
inc
mov
test
imul
in
mov
sub
cmp
ror
lret
inc
ror
out
pop
outsb
push
je
dec
dec
push
dec
int3
call
fidivrs
jp
ret
jge
out
inc
pop
jne
mov
enter
pushf
hlt
in
int3
nop
js
dec
sbb
mov
sti
mov
rorl
sti
xchg
lea
jb
stc
jmp
and
xchg
pushf
bswap
xor
lea
movsbw
pop
not
setno
pop
push
mov
call
call
mov
fwait
adc
sbb
pop
fisttpl
mov
jo
ficoms
das
and
xchg
sub
push
cmp
call
ficompl
xchg
mov
aas
or
loop
dec
mov
rclb
mov
loop
mov
jno
jae
leave
testb
sub
xchg
adc
jmp
arpl
mov
inc
push
adc
shlb
in
test
jmp
gs
mov
fmul
movb
pop
mov
lea
ja
bswap
movsbw
push
mov
call
pop
gs
pop
imul
dec
xchg
decb
push
pop
mov
xor
clc
negb
cmp
call
fldcw
xchg
in
push
pop
xchg
pop
pop
jne
in
jl
cmpsl
and
sbb
mov
repnz
pop
xchg
mov
jo
sub
mov
push
outsl
int
ja
sbb
cld
cmc
jno
lock
loop
ret
xchg
pop
xor
and
lcall
dec
mov
pop
or
xor
jns
cmp
jp
pop
pop
imul
lcall
dec
xchg
out
inc
mov
popf
fwait
pop
or
dec
dec
mov
pop
push
mov
jl
sub
mov
push
outsl
stos
repz
scas
jp
jnp
cmp
dec
pop
lret
shl
and
push
mov
add
dec
ret
add
dec
cmpsl
xor
xor
in
shrb
iret
pop
scas
lods
adc
push
rcrb
pop
fnstsw
movsl
std
jno
xor
xor
jp
xchg
add
out
frstor
mov
daa
negl
cmp
jp
fldenv
bound
or
mov
mov
ss
cmpsb
or
sbb
jg
imul
inc
and
mov
push
pushl
mov
lods
movl
ror
test
jmp
je
ds
imul
cmpsl
decl
pop
jg
arpl
push
aam
mov
leave
cltd
jno
shr
les
mov
push
pop
push
rorb
mov
xor
xlat
daa
nop
insb
adc
and
shrb
xchg
stc
fbstp
ja
add
xchg
add
pusha
and
faddp
dec
ret
dec
cld
cmc
dec
mov
cmpsb
arpl
jbe
sub
push
ds
cmp
xor
inc
push
aam
mov
test
fisubs
jb
inc
ss
sahf
jbe
pop
cmp
test
sti
or
cmpsb
mov
and
gs
push
test
aad
mov
dec
test
loopne
shrb
jecxz
mov
enter
aas
popf
lock
jecxz
iret
iret
mov
les
lock
dec
mov
outsl
int
add
mov
jb
in
scas
jmp
pop
cmp
fists
cmpsb
sbb
scas
stos
xchg
push
ss
ret
scas
sub
cmc
jmp
idiv
arpl
fs
xor
cs
insb
add
add
pushf
pusha
lea
jmp
rol
movb
jmp
mov
movb
movl
lea
jl
pushf
mov
mov
pop
pusha
pushl
ret
loope
repz
imul
push
jbe
adc
push
mov
loope
or
mov
imul
mov
test
loop
imul
loopne
leave
daa
mov
insl
imul
adc
in
insl
xor
inc
cmp
mov
cmpsb
mov
rclb
sub
xor
add
xor
mov
mov
sub
idivl
aaa
dec
movsl
arpl
cmp
pop
pop
cltd
pusha
lea
jne
push
lea
je
clc
movsbw
add
push
adc
shl
sub
push
bts
shr
rcr
shr
call
sub
xchg
xchg
testl
mov
adcl
pop
loope
xchg
sub
mov
mov
ds
lds
ret
xchg
inc
aaa
pop
pop
xor
dec
mov
jns
push
pop
inc
xchg
add
xor
mov
or
mov
punpckhdq
rcll
movsl
lds
insl
add
ds
cli
ljmp
pop
inc
jns
jle
cmpsb
push
cmc
pushf
cmc
neg
pushf
bt
push
not
clc
call
pusha
jmp
jge
xor
dec
shlb
dec
lods
sbb
loopne
test
mov
dec
loope
lods
xchg
outsb
push
mov
shrl
daa
jne
cwtl
out
sbb
cmp
aaa
pop
adc
loop
sbb
adc
inc
cwtl
add
xchg
fwait
arpl
push
sub
sbb
xor
fistpll
mov
inc
push
test
mov
xchg
imul
push
test
js
push
push
adc
and
add
movsl
insl
push
push
lcall
pop
imul
xor
jge
cmp
loop
je
mov
mov
daa
out
jae
pop
aaa
adc
leave
call
jle,pt
enter
mov
xlat
xchg
popa
lods
jns
mov
mov
jns
adcl
inc
clc
js
mov
pusha
dec
and
cld
les
push
or
in
pop
imul
movsl
jmp
cmc
gs
mov
loop
push
cwtl
loope
mov
pop
addr16
jns
xor
mov
sbb
sbb
add
mov
push
js
or
mov
jb
jmp
out
cli
mov
cmp
fwait
stos
push
push
sarl
cwtl
rcrl
cmp
scas
ds
aad
add
or
add
cwtl
sbb
stos
pop
mov
mov
jmp
dec
and
gs
cmp
adc
repnz
rcrb
pop
fmuls
adc
test
jl
cmp
pop
cltd
dec
loop
sub
call
lret
js
push
mov
enter
pop
ja
ds
xchg
adc
cmpsl
adc
stc
sub
pop
inc
sbb
inc
adc
fstpt
and
or
and
and
dec
pushf
mov
clc
loopne
xchg
js
lret
xor
rcll
pop
imul
xchg
jp
push
mov
pop
mov
andb
mov
xor
ret
faddl
jmp
std
movsl
cmc
cmc
vmread
rcl
mov
push
ja
pop
and
inc
jge
xchg
sbb
test
push
js
inc
adc
dec
lods
ljmp
jo
aam
pop
bound
in
fnsave
xor
sbb
scas
dec
repnz
stc
bt
clc
bt
not
pusha
stc
call
call
loope
rcrl
gs
cmp
hlt
cmp
or
cld
pop
test
sub
test
push
cmp
cmp
sbb
jp
sarb
jmp
cmp
sbb
mov
pushf
test
cmpl
mov
add
scas
scas
lahf
fwait
outsl
aaa
sub
sub
adc
or
mov
shrb
int3
xor
int3
adc
add
sub
arpl
clc
xlat
xor
pop
fwait
stc
movsl
push
jp
inc
shll
ds
clc
repz
push
ret
nop
jno
push
lret
loope
stos
xor
pop
push
out
mov
cmpsl
xchg
aad
ficomps
ret
add
fimuls
mov
pop
pop
jl
fiadds
movsb
lea
pop
test
cwtl
call
out
imul
fwait
xchg
jno
xchg
or
push
fidivrl
push
push
into
lcall
push
aas
femms
in
into
pusha
imul
xor
xchg
fiadds
or
mov
xlat
ja
icebp
pop
dec
dec
out
aas
cltd
cmc
pop
inc
call
add
stos
and
aaa
sub
sbb
mov
daa
in
lock
cmpsl
add
jg
sbb
call
jb
jae
out
jae
test
mov
mov
cmpsl
mov
sub
jecxz
and
push
adc
push
sub
call
xchg
iret
inc
pusha
imul
xchg
jae
or
divl
dec
stos
dec
aaa
out
lcall
lds
sbb
movsl
add
push
jbe
insb
xchg
call
sub
push
je
dec
test
jnp
into
push
jg
add
xchg
inc
out
out
iret
int
sahf
fidivrl
ss
pop
pop
enter
sub
add
jecxz
xchg
nop
adc
jl
cmc
cmp
add
mov
movsb
xor
add
dec
sbb
lret
scas
cmpsl
fwait
jnp
aas
jnp
call
lcall
popa
imul
sbb
jns
sub
out
in
add
jmp
push
and
mov
mov
and
fildl
cmc
lahf
sbb
adc
xor
lcall
or
mov
jge
mov
out
mov
cmp
sti
add
mov
pushf
xchg
cmp
cld
cmpsb
and
movsb
mov
stos
in
ds
fdivrl
imul
lods
stc
fsubs
nop
pop
inc
cmp
loopne
test
dec
and
pop
lods
je
cmp
lea
ja
mov
pusha
ror
setp
sub
bsf
bsf
sar
not
add
add
lea
mov
test
rcr
mov
bt
pusha
pusha
repnz
pushf
push
lea
jne
movzbl
call
ficoml
cli
bound
push
sbb
stos
sub
push
xchg
add
lret
aad
sarl
out
lds
lds
in
sub
das
invlpg
sbb
push
sub
roll
aad
jmp
popf
pop
aaa
sub
sub
repz
addr16
xor
xor
lret
imull
roll
fwait
cld
xor
mov
add
stos
ja
push
sub
not
lret
fwait
stc
stc
insb
mov
lret
or
imul
mov
jp
pop
ficompl
sbb
or
mov
call
jb
leave
out
inc
mov
push
sub
dec
cmp
mov
scas
sbb
stos
pop
cmp
leave
int
lret
xor
clc
push
mov
sub
xchg
add
lahf
stos
xchg
xchg
mov
cmp
sub
mov
js
sub
inc
and
popa
loope
ljmp
es
or
sahf
jp
sbb
ljmp
rcll
adc
lods
ret
cmc
and
add
dec
mov
clc
jmp
pushf
lea
jae
push
lea
jne
call
stos
out
arpl
out
ds
sbb
ss
push
push
push
jbe
mov
lds
ja
sub
cltd
jmp
push
sub
je
hlt
mov
movsl
push
dec
dec
test
pop
mov
xor
mov
out
ror
mov
adc
and
cmp
sub
lret
stos
sub
push
out
mov
push
pop
cwtl
imul
pop
pop
cmp
imul
das
jnp
push
mov
stos
packuswb
aad
call
in
in
lods
stos
push
mov
mov
xor
mov
sub
shrl
xlat
lret
fstl
adc
sbb
daa
stc
sti
add
insl
insl
sarl
js
dec
fisttps
and
and
dec
test
int3
rorl
mov
add
inc
or
ljmp
inc
mov
jecxz
stc
repnz
push
test
rclb
and
int3
sub
insb
in
xchg
test
sbb
push
dec
mov
lea
call
push
cmpsb
xor
push
lock
mov
aad
int3
push
int
xor
push
pop
ret
and
or
frstor
mov
icebp
cmpsb
sbb
pop
retw
mov
and
cmpsb
cli
push
inc
adc
sarb
push
out
scas
push
sub
addl
cmp
mov
push
bt
cmp
call
pop
jge
imul
cs
push
outsb
fidivrs
xchg
push
mov
push
and
in
pop
pop
sarl
add
call
test
sub
lcall
out
xchg
inc
or
push
push
inc
stos
adc
popa
pop
das
hlt
cld
out
ret
and
jecxz,pt
fwait
xor
jge
fsubl
or
rcrl
std
sub
lods
jne
and
frstor
in
mov
scas
stos
lcall
gs
ljmp
data16
js
cld
cli
pop
inc
cmp
and
inc
and
in
loopne
fsts
test
out
pop
pop
ret
sub
aad
fiadds
call
pop
ret
pushl
repnz
cmp
sbb
or
addr16
scas
pop
enter
adc
test
stos
mov
inc
movsl
test
insl
add
and
testb
dec
movsl
test
inc
sub
hlt
loopne
test
mov
or
mov
jl
movsbl
mov
jmp
rcl
imul
xchg
call
xor
xchg
mov
mov
pop
pop
mov
push
sarb
xchg
repnz
mov
push
jg
add
mov
cmp
xchg
cltd
das
xchg
cld
adc
and
js
mov
cmp
dec
mov
int3
xor
inc
mov
out
jl
xor
in
push
and
popa
dec
and
in
shrl
mov
in
jmp
adcb
inc
icebp
imul
mov
popa
sub
fcoml
xchg
inc
repz
cmp
inc
lahf
sti
inc
mov
fidivs
sub
jp
pop
imul
cmpb
xor
xchg
jg
fwait
adc
pop
outsb
pushl
test
sub
movsl
sbb
sub
or
xchg
imul
in
scas
mov
jge
fistpll
dec
scas
divb
cs
out
push
mov
jle
sub
in
adc
cmp
nop
icebp
shrb
fdivs
inc
push
jo
scas
adc
mov
xor
popf
push
jns
jg
aaa
dec
bound
mov
sbb
in
out
rcrb
jbe
dec
add
enter
and
lret
sbb
xor
push
mov
fcmovnb
xchg
aaa
aaa
pop
repz
leave
sub
test
into
popa
mov
int3
xor
jl
cmp
add
fwait
and
and
imul
push
xchg
and
push
adc
cs
sbb
cmp
lahf
out
inc
mov
xor
imul
movsb
or
iret
mov
sub
call
cmp
pusha
cmp
shrl
xor
cmp
movsb
xor
pop
lret
cmp
add
fcmovnbe
stos
outsl
pop
dec
xor
call
add
dec
sbb
loopne
sbb
add
jecxz
mov
jg
inc
cmpsl
maxps
loopne
sub
jnp
sbb
mov
jb
mov
fdivrl
adc
xlat
pushf
push
jg
and
sbb
dec
test
add
cmp
stc
pop
ret
addr16
inc
out
rorb
in
out
dec
adc
cmpb
adc
arpl
fistpll
push
stos
mov
dec
push
shrb
lret
orb
in
dec
in
pop
pop
out
xor
imul
loopne
cwtl
fdivl
and
aam
dec
push
add
stc
mov
lret
repz
jge
jl
inc
jbe
iret
ret
rol
scas
negb
add
or
push
mov
lods
jmp
hlt
loopne
stos
pop
inc
push
add
adc
clc
stc
cmp
pop
dec
mov
xchg
push
push
or
ror
sahf
addb
test
les
and
push
lds
add
das
loope
imul
jecxz
mov
insb
test
sbb
fldcw
pop
sahf
jge
rclb
inc
xchg
adc
rorl
adc
adc
std
pop
aad
xchg
or
shl
and
lcall
imul
dec
and
push
ds
push
mov
cmp
data16
outsb
dec
mov
dec
loopne
mov
push
and
shll
push
cmp
sti
xlat
xlat
adc
pop
lods
aam
sbb
icebp
sbb
imul
sbb
insl
int
xchg
fstps
lods
adc
add
mov
add
aad
lret
stos
outsl
jne
cmp
cmp
cmp
lret
pop
or
push
xor
xor
out
into
push
cmc
cmp
icebp
mov
mov
imul
bound
mov
rep
lea
pushf
mov
mov
pushl
movb
movb
lea
jmp
movzbw
mov
push
pusha
mov
pushl
ret
test
cmc
jmp
pop
mov
pusha
movb
lea
jle
mov
call
gs
dec
imul
cmp
outsl
out
cmpsl
adc
test
lock
psubq
fdivp
mov
adc
pop
add
xchg
repz
mov
aad
mov
idivl
popf
adc
adc
dec
lea
push
lret
nop
jne
loop
mov
mov
pushf
jmp
andl
aaa
push
jne
aad
in
outsl
dec
js
inc
ret
je
pusha
push
sbb
add
nop
jo
and
loopne
sub
test
xchg
mov
add
sbb
or
sub
add
js
mov
stos
test
dec
mov
loope
push
fiaddl
xor
lods
lods
jo
aad
pushf
add
out
mov
ss
xor
sub
test
push
loopne
or
xchg
jp
pop
aas
sub
ja
ret
pop
sbb
ljmp
scas
mov
dec
push
shrb
out
out
sub
fists
jmp
orb
js
lcall
lret
shlb
rcl
and
btc
add
bt
xor
bswap
bts
mov
pusha
pushl
test
call
pushf
mov
lea
jne
pushf
pusha
pushf
pushf
stos
push
push
pushl
movb
lea
jmp
call
ficoml
cli
insb
imul
xlat
dec
mov
xchg
jnp
inc
fwait
sbb
pop
in
icebp
movsb
mov
cmpsl
movsl
icebp
cmp
dec
and
mov
mov
push
dec
cmpsl
xchg
roll
aam
shlb
inc
sbb
pop
hlt
push
outsl
int
enter
ret
pop
mov
sbb
lret
cmpsl
jg
pop
daa
or
inc
xchg
jae
inc
add
in
push
push
jo
cmp
movsb
adc
jo
sub
jmp
sub
push
mov
fsubrl
mov
xor
mov
cltd
add
les
cmc
mov
addr16
sahf
jecxz
into
mov
shll
cli
mov
imul
insl
pop
dec
popa
or
insb
ret
outsb
rcrb
loop
stos
cmpsb
jbe
inc
push
or
hlt
decb
and
mov
imul
cld
jo
dec
lods
clc
inc
test
push
cwtl
sbb
xchg
lcall
cs
pusha
movsb
add
cmp
jmp
lea
cmp
add
lea
sbb
in
dec
dec
mov
rclb
cld
xorl
xor
xlat
fwait
jg
dec
xor
inc
scas
enter
push
jle
cmp
bound
gs
filds
sub
mov
xchg
imul
adc
jl
and
stos
iret
rclb
shl
hlt
clc
es
test
sbb
ss
or
add
cmpsb
negb
xlat
fs
out
sbb
decl
adc
jl
pop
mov
xchg
mov
mov
push
sub
mov
lods
or
jne
movsb
lock
mov
test
mov
outsb
xor
and
icebp
pop
outsb
imul
ds
es
inc
mov
inc
ret
and
cmp
pop
clc
jns
out
je
xchg
mov
xor
daa
sbb
and
sub
dec
test
int3
lea
arpl
out
xchg
xchg
imul
mov
bound
sub
cmc
loop
scas
or
pop
addr16
sub
repz
loope
ret
mov
mov
xchg
mov
insl
lret
lahf
lret
adc
nop
inc
xchg
loope
mov
jns
sbb
jne
jae
push
mov
xchg
xchg
inc
mov
sahf
push
jb
and
mov
cmc
iret
int
sbb
xor
sti
mov
or
in
mov
adc
jecxz
jmp
movsb
dec
ds
cmp
dec
inc
sub
gs
mov
outsb
mov
les
sbbl
rcrb
faddp
cmpsb
testb
test
xlat
xchg
xchg
lods
xchg
leave
adc
push
ds
push
fmulp
mov
pop
cmp
xor
jae
lahf
std
adc
gs
icebp
in
jmp
pop
roll
pop
hlt
and
xor
push
mov
cwtl
fsubrl
test
in
loopne
fstpl
jnp
cld
dec
mov
push
inc
cs
jb
sub
dec
test
outsl
imul
xchg
stc
dec
xchg
cmc
sarl
adc
xchg
repz
push
in
jb
jl
and
cmp
jns
mov
cmc
mov
rcrl
sub
or
and
lea
push
fstpl
fisttpll
adc
aaa
in
jge
push
pop
push
xor
add
or
xor
in
sub
or
pop
adc
femms
fidivrl
fdivs
gs
shrl
stc
rcrl
mov
cltd
std
jge
inc
es
dec
adc
inc
cwtl
and
and
int3
out
out
iret
enter
inc
add
test
ror
test
sbb
test
xchg
adc
rolb
jle
lcall
xor
or
leave
lds
or
mov
lcall
cmp
pusha
test
test
mov
lea
pusha
pushf
stc
cmp
test
pushl
lea
je
jmp
sub
test
imul
inc
lods
jae
repz
cmp
push
adc
divl
cmpsb
xchg
hlt
pop
xchg
addl
cmp
movsl
add
gs
sub
lods
xchg
int
and
adc
les
add
add
dec
dec
add
add
in
and
add
add
add
add
add
add
mov
add
pop
and
lret
add
dec
add
jmp
add
add
add
pop
and
iret
pop
and
push
jne
inc
insb
insb
dec
outsl
jae
inc
popa
insb
insb
inc
popa
arpl
push
dec
push
mov
mov
mov
test
aas
add
push
mov
mov
mov
mov
dec
inc
outsl
xor
xor
fs
insb
add
add
std
popa
lea
je
shld
lea
shl
rcr
add
bswap
adc
bsr
mov
jmp
adc
movb
push
mov
movb
lea
jmp
call
call
cmp
jmp
or
out
jb
sub
sbb
mov
inc
lods
and
push
int3
fwait
je
sti
sarb
movsb
insl
adc
mov
jl
testb
push
mov
and
test
loop
mov
rolb
or
mov
popa
push
stos
adc
jne
dec
cmc
lea
sahf
pop
mov
add
scas
dec
movsb
sahf
push
inc
nop
push
and
push
jg
aaa
pop
gs
scas
mov
inc
and
neg
mov
or
jmp
and
mov
dec
lea
clc
dec
movsbw
mov
jmp
lea
je
cmc
test
cmp
pusha
mov
lea
je
pusha
movw
clc
cmp
jmp
inc
movsl
imul
lods
or
or
add
int
sub
insb
int3
inc
push
add
cmc
cld
mov
mov
or
ja
mov
ds
mov
pop
pop
mov
ja
stos
add
ljmp
clc
jae
imul
lods
xchg
out
push
cmp
push
arpl
rcrl
xchg
and
test
fwait
adc
inc
mov
out
pop
or
jno
test
test
mov
jl
sub
stos
jmp
das
das
push
jmp
lea
not
lea
jmp
push
dec
inc
dec
dec
xor
cs
insb
add
gs
data16
or
and
xchg
add
clc
cmpsl
movsl
or
adc
jae
xor
pop
aad
mov
mov
push
inc
movsl
bound
bound
hlt
in
in
test
test
mov
je
fiadds
out
dec
pop
or
aam
sub
mov
or
fcmovnbe
cmp
loope
sbb
push
out
aaa
sbb
xor
dec
daa
stos
xor
lods
xor
movsl
or
dec
movsb
insb
push
and
in
enter
push
sub
mov
mov
sub
mov
call
call
jmp
mov
inc
je
shrl
xchg
pop
dec
mov
lahf
jg
jno
sti
aad
dec
shll
mov
adc
pop
inc
stos
and
mov
test
shll
insl
inc
push
out
mov
int
and
clc
clc
repnz
jle
cli
lock
sti
sub
adc
aaa
imul
dec
dec
sub
add
sbb
add
mov
and
fdivrs
and
data16
push
pushf
jo
addr16
push
push
lea
je
push
lea
jmp
pop
mov
imul
dec
popf
add
mov
test
lods
clc
fnstenv
jmp
jecxz
gs
mov
gs
in
dec
sbb
sbb
lcall
aam
popf
or
xor
or
inc
push
jb
cmp
jae
call
jl
mov
sub
fcompl
lods
popf
jns
xor
fld
xchg
lea
call
jle
inc
and
jne
gs
or
cmp
aad
adc
jg
jmp
cld
addb
jae
xor
aam
out
inc
xchg
cmpsl
dec
pop
inc
repnz
xchg
cmp
in
sahf
out
pop
lret
pop
push
es
ljmp
enter
inc
push
or
dec
popa
scas
jbe
outsb
lret
fimull
push
data16
adc
es
addb
cmp
ja
jl
and
mov
jge
cld
mov
and
stos
add
xor
mov
xor
sbb
or
jecxz
add
sub
sbb
push
mov
xchg
xlat
adc
push
int3
stos
sbb
dec
into
cmpsb
outsb
inc
cmp
ret
push
push
adc
push
add
cmp
dec
jbe
gs
ds
lcall
scas
xchg
jmp
mov
fs
cmp
call
jge
dec
fistps
fiaddl
in
sahf
js
pushf
mov
push
dec
push
enter
cltd
xchg
out
pop
mov
in
jns
xchg
or
xchg
inc
popf
sti
pushf
sbbb
xchg
outsb
stos
shlb
inc
lret
sbb
inc
psubq
fbld
dec
mov
addr16
jne
xchg
insl
inc
and
mov
gs
push
into
jp,pn
es
mulb
jbe,pn
jge
adc
nop
fs
rolb
mov
lcall
test
jp
jns
xor
and
lret
imul
roll
pop
jmp
loopne
push
adc
data16
in
sarl
add
sbb
mov
out
mov
ja,pn
gs
imul
xchg
jg
push
pop
rcrl
sbb
mov
cld
dec
mov
or
push
ljmp
xor
pushf
cli
jbe
loopne
xlat
inc
sbb
mov
cmp
add
or
jg
inc
dec
xor
cmp
mov
xlat
adc
or
inc
mov
popf
icebp
dec
dec
mov
xor
and
lds
insl
pop
push
dec
xor
leave
cltd
xchg
xorl
bound
jne
adcl
pusha
lea
jne
pushf
pusha
pusha
stos
pushf
lea
jmp
std
pop
mov
imul
and
push
cwtl
clc
jo
cmp
sbb
movsl
popf
popf
aas
mov
ficomps
into
or
ss
and
and
dec
outsb
out
das
aad
fisttps
mov
inc
lods
ret
mov
xor
cmc
out
aas
test
xchg
dec
nop
shll
aaa
xor
jg
loope
loope
out
aas
mov
and
mov
ljmp
fwait
pop
pusha
aas
cmpsl
xchg
push
push
dec
push
or
ficompl
push
sub
fldenv
das
push
outsl
int
js
ficompl
dec
lcall
inc
stos
repnz
sub
arpl
test
stos
push
fstpt
lods
add
cld
je
in
les
dec
sbb
push
sbb
shr
scas
sti
or
popa
xchg
pop
lods
adc
and
mov
lahf
sbb
xchg
add
add
sbb
fidivs
fwait
stc
mov
jg
cmp
sub
cs
inc
push
aaa
setno
add
js
shll
xor
add
xlat
insb
mov
xchg
hlt
insb
xor
fadd
test
push
enter
sbb
insl
inc
cmp
jns
gs
repz
sub
xor
iret
adc
daa
pop
test
mov
and
adc
movsb
clc
pusha
rolb
out
dec
sub
xchg
ja
push
pop
cmp
mov
pop
sti
mov
out
pop
pop
aam
mov
jp
sbb
divb
movsb
pushf
dec
leave
outsl
sub
pop
dec
mov
mov
sbb
scas
push
fimuls
in
stos
shll
inc
je
lcall
sbb
enter
mov
loopne
ljmp
and
jp
test
imul
xor
xor
jg
and
out
gs
divb
mov
out
xlat
stos
or
lea
jecxz
cwtl
mov
mov
pusha
out
cli
pop
fists
sarl
lret
lods
sub
inc
xchg
or
push
sub
xchg
aam
xor
or
mov
aaa
shl
sbb
icebp
insl
pop
cmp
or
jge
push
mov
push
inc
cmp
mov
jp
gs
xchg
inc
mov
fcmovnu
sbb
add
outsb
fsubl
dec
pusha
push
loop
pop
or
jl
scas
pop
jmp
cltd
sub
xchg
adc
les
adc
adc
xchg
arpl
stos
mov
rdpmc
scas
lds
fnstcw
ljmp
cmp
idivb
fcomps
sarb
pop
out
jmp
pusha
lea
jae
jmp
and
jnp
gs
mov
pop
mov
xchg
pop
mov
dec
sub
add
jecxz
jno
mov
mov
out
scas
pushf
xchg
in
sub
jno
sub
mov
push
add
pop
adcb
out
fwait
stc
mov
mov
scas
mov
xchg
jmp
ja
sub
lcall
jnp
negb
cmp
push
outsl
fstpt
ret
jecxz
pop
sti
out
fwait
ja
and
test
popa
in
or
das
push
jne
test
gs
call
mov
cmp
in
loopne
push
sbb
cmpsl
add
bound
pop
rorb
mov
jno
shrb
bound
xlat
movsb
movsb
xchg
ds
pop
push
cmp
jle
in
push
mov
pusha
xchg
out
sti
fcmovnu
inc
stos
out
push
scas
idivb
xchg
nop
mov
repnz
mov
xlat
dec
aas
popf
int
movsl
jo
scas
aaa
mov
inc
lahf
ja
pop
das
div
fistpl
mov
mov
cmc
stc
cmp
push
pushf
lea
jae
call
push
pushf
push
lea
ja
pusha
jmp
mov
lods
clc
bt
ror
bt
test
clc
clc
add
stc
cmc
ror
push
jmp
mov
dec
jl
gs
jl
xor
adc
push
out
xchg
test
mov
pop
inc
test
out
dec
loop
bound
inc
mov
movsl
fidivl
aam
mov
rorl
nop
cmp
xchg
pop
cmp
outsl
xor
jge
cld
sbb
pop
fdivl
in
mov
jmp
push
inc
pop
rorl
gs
in
dec
dec
dec
add
xchg
or
and
add
push
push
and
lock
xchg
js
sbb
fdivrl
mov
inc
sbb
cli
push
push
inc
push
xor
cs
insb
add
cmpsb
jge
and
sbb
adc
cmp
test
add
repnz
ljmp
pop
lret
scas
shll
pop
out
jle
pop
cmp
in
mov
sbb
jae
pop
push
sbb
mov
aaa
and
push
mov
sbb
outsl
lods
jmp
jge
gs
ret
adc
push
lret
inc
stos
out
cmp
add
lret
adc
inc
mov
rcr
jne
outsb
xlat
in
lds
lret
sub
adc
movb
sbb
adc
sub
cld
dec
sbb
mov
jge
fnstsw
cwtl
jg
ret
and
cs
imul
sbb
or
mov
cmp
and
in
sub
jl
push
mov
xlat
aas
xchg
jecxz
xchg
fstpt
mov
push
cmp
add
cmpsl
dec
jecxz
mov
lds
mov
cld
inc
mov
aas
inc
xor
int3
mov
push
rorb
mov
mov
enter
adc
add
xchg
xchg
loope
test
push
mov
cmc
stc
jmp
int3
sub
mov
je
xor
cwtl
movsb
test
push
dec
lea
in
jo
lock
xchg
add
fldl
in
push
and
ss
sahf
jbe
xor
pushf
xor
inc
mov
dec
jb
bound
gs
push
mov
cmpsb
adc
push
lcall
add
shlb
popa
mov
mov
iret
mov
outsb
push
cs
mov
ljmp
cmpl
cwtl
mulb
xor
and
clc
push
pop
bound
mov
push
dec
xchg
sbb
cwtl
xchg
bnd
nop
push
in
xchg
add
out
rcr
sub
add
repnz
xchg
inc
mov
ja
inc
inc
daa
or
out
ret
and
jmp
mov
stc
cmp
push
jmp
pusha
call
call
gs
jbe
cmp
inc
xchg
jp
fstpt
popf
test
adc
cmp
out
clc
jns
call
sub
mov
xchg
sub
pop
cmp
jp
add
cmp
adc
repnz
in
in
popf
or
js
mov
rcrb
ss
mov
neg
iret
scas
stos
ja
sub
js
int3
xchg
sub
inc
subb
cmp
std
pop
fldl
add
mov
cwtl
xorl
and
xor
prefetch
jge
xlat
aad
cmp
cmpsb
mov
dec
test
or
jae
sbb
sbb
test
rcrl
inc
call
in
rcll
sbb
mov
jo
or
ss
outsl
int
xchg
xor
mov
rorb
lock
xor
lea
je
pusha
mov
lea
jmp
lods
cmp
call
scas
les
shrl
cmp
add
jge
ret
aam
and
adc
in
dec
out
cmp
jmp
jb
inc
xchg
cld
loope
loop
pop
or
jne
hlt
cmp
fidivrl
push
xchg
jle
sbb
ror
cmc
aaa
mov
fsts
pop
inc
mov
mov
or
and
ljmp
pop
mov
enter
mov
jo
sbb
inc
cmp
add
shlb
cli
jecxz
pop
imul
movsb
pusha
stc
mov
sahf
pop
gs
push
inc
xchg
std
adc
or
cli
pop
ret
and
test
out
inc
mov
xchg
or
xchg
pop
imul
pop
pop
xor
out
inc
jnp
xlat
xor
jp
cmp
mov
in
sahf
out
dec
push
inc
call
ja
pop
iret
stos
xchg
pop
jmp
adc
div
je
adc
mov
push
pushl
ret
xchg
cmc
sbb
push
stos
and
sub
ljmp
jge
rcr
rcll
jne
jge
inc
js
aam
out
mov
test
mov
adc
jmp
stc
rcl
les
cmp
int3
insl
xor
int3
cmp
jl
xor
notb
mov
stc
fadds
cmp
shll
jmp
jb
lods
pop
leave
jp
cmp
add
ret
jle
dec
adc
lret
outsb
add
imul
sti
pop
mov
imul
add
sub
xchg
xor
divb
imul
cli
cli
movsb
or
adc
jns
push
mov
mov
add
out
stos
or
dec
xor
movsb
int
lcall
mov
in
xchg
inc
mov
leave
xlat
leave
mov
dec
mov
pop
jne
inc
scas
aaa
fwait
ja
mov
push
sti
imul
fidivrl
cs
jle
pop
js
add
aaa
xchg
jnp
imul
sbb
cs
push
jp
push
lcall
jo
xor
sub
adc
dec
xchg
out
adc
ror
lods
lcall
xor
cmp
lret
xchg
loope
data16
add
popa
lcall
inc
dec
xor
pop
and
mov
xchg
js
dec
sbb
movsl
mov
stc
jb
les
cmp
and
lods
sub
pop
ret
xor
data16
mov
out
sahf
outsb
outsb
push
dec
test
stos
xor
jmp
lahf
ss
and
cmpsl
out
addr16
jnp
imul
loopne
mov
sti
sti
loopne
or
mov
jb
add
push
dec
iret
and
fcomip
call
push
ja
jl
cmp
insl
adc
mov
rol
cltd
icebp
pop
mov
sub
icebp
vmread
lret
fwait
mov
ss
scas
fdivrp
leave
jmp
pop
inc
imul
testl
movsb
mov
inc
loopne
rcrl
jns
cmp
adcl
iret
add
push
cmp
test
inc
xchg
ficoml
out
pop
mov
mulb
xchg
or
std
push
cwtl
mov
call
cwtl
xchg
mov
and
fnstsw
repz
mov
hlt
dec
mov
xchg
mov
push
inc
adc
test
mov
sub
cmp
push
enter
inc
insl
xchg
ffreep
mov
dec
cmp
xor
mov
mov
adc
packuswb
pop
jmp
mov
ja
cmp
cltd
pop
insl
jp
dec
dec
mov
out
test
jecxz
jg
pop
xor
mov
xchg
inc
cmp
rcll
lea
aad
dec
pop
gs
dec
leave
lds
and
sub
or
arpl
scas
and
lock
dec
inc
lock
leave
add
xchg
cmp
jle
inc
dec
stos
data16
jl
outsb
lret
std
aas
dec
das
sub
xchg
lret
xor
stc
inc
loopne
cmc
gs
aam
inc
adc
les
stos
cli
stos
sti
imul
out
mov
dec
das
add
mov
push
sub
push
push
add
inc
gs
outsl
fs
gs
imul
add
or
xchg
adc
fdivl
stos
mov
jle
loopne
push
pop
or
push
out
aas
mov
ds
ljmp
add
out
call
adc
aad
stos
jecxz
stos
repnz
out
orb
pop
inc
insb
mov
xchg
rcrb
addb
out
jb
fnstenv
rorb
fsubrl
sbb
xlat
lret
mov
aas
fcmovb
mov
fs
xor
movsl
ffree
into
mov
imul
cmp
iret
sbb
xchg
xchg
cmp
sahf
sbb
pushf
fs
jg
jecxz
inc
into
mov
add
and
mov
jl
xor
fcmovbe
sarb
rcrb
clc
cmp
imull
cmp
mov
addr16
lcall
sbb
push
faddp
shlb
jo
inc
sbb
sbb
les
xchg
jg
imul
test
cmpsb
notb
mov
push
and
xor
fdivs
mov
jno
mov
gs
jl
or
movsb
cmp
in
test
mov
jle
mov
movsl
in
dec
sarl
sub
aaa
out
or
cmp
mov
fcom
inc
and
ljmp
add
lods
test
and
mov
fwait
jnp
sti
popa
mov
dec
sub
mov
rcrl
lea
test
pop
iret
sti
push
sbb
ret
lahf
xchg
mov
gs
gs
inc
scas
scas
pop
sbb
and
jmp
in
shll
mov
xor
xor
mov
cs
xor
ret
arpl
push
mov
xor
cmpl
cmp
mov
push
cwtl
fldcw
xchg
loop
mov
mov
jecxz
mov
dec
jp
mov
sub
aam
adc
push
xor
fdiv
push
test
out
adc
setnp
lcall
xchg
jb
jb
adc
je
jge
sti
dec
daa
out
sub
in
xchg
repnz
and
pop
cmpsb
mov
clc
je
push
adc
jmp
sti
adc
stos
testb
push
pushf
fs
std
mov
cli
ljmp
paddb
lret
or
adc
xchg
adc
gs
xchg
addr16
lret
in
test
out
or
scas
dec
cs
jb
mov
adc
rcr
pop
and
outsb
dec
shll
in
mov
loopne
mov
out
adcl
lea
inc
jmp
movsbw
push
add
mov
test
cmp
and
pusha
mov
add
mov
mov
pushf
movb
lea
jmp
cmc
shr
pusha
pushf
lea
je
jmp
movl
pusha
push
pushl
movb
lea
jmp
test
cmpsl
sbb
fwait
pop
pop
mov
add
push
mov
dec
xor
bound
add
lods
jae
and
jmp
adc
ss
mov
add
xor
fwait
hlt
sbb
push
xchg
jbe
push
fs
leave
dec
mov
addb
lods
mov
jmp
mov
mov
jecxz
lods
or
jge
stos
jbe
and
jg
pop
sub
pop
mov
adc
lds
adc
popf
sti
divl
dec
cmp
sbb
imul
mov
lahf
pop
outsl
jmp
and
xchg
push
call
and
daa
mov
imul
gs
push
out
mov
data16
icebp
flds
inc
sbb
xchg
cmp
xchg
sbb
cmc
out
push
xor
scas
lahf
sbb
push
xchg
int
addr16
sbb
mov
sbbb
xor
xlat
stos
xchg
das
adc
mov
lahf
mov
xor
arpl
dec
mov
into
cs
push
jle
push
scas
incb
lret
adc
and
mov
pop
inc
stos
xlat
sub
jge
pop
imul
test
sub
cmc
les
add
inc
and
jg
mov
cltd
js
aad
imull
int3
adc
int3
jge
add
xlat
mov
out
jecxz
daa
and
xchg
inc
dec
sbb
das
sub
push
out
int
popa
sub
fwait
out
inc
les
or
add
mov
lock
and
lods
adc
mov
xor
loopne
sub
sbb
sbb
rcll
sub
xor
push
inc
rclb
xchg
jae
cvtdq2ps
stos
ss
lods
or
add
sbb
into
and
fbld
add
and
add
mov
adc
cmpsl
lcall
fnsave
imul
addr16
ds
fdivl
xchg
cmp
mov
xor
lock
fstl
hlt
and
sub
mov
xchg
sahf
jbe
mov
lock
bound
cmc
dec
test
dec
sub
inc
add
addr16
into
int3
and
pop
mov
jmp
xchg
cmp
adc
data16
pop
rol
lret
push
inc
adc
gs
and
ret
adc
cmp
bound
and
imul
adc
sub
and
sub
loop
xchg
sbb
lds
movsl
sbb
mov
sub
xchg
and
xor
or
mov
mov
push
mov
shll
cmp
jmp
xlat
sarb
mov
xchg
jno
xlat
inc
jl
aad
ljmp
xchg
jmp
xor
pop
sub
iret
mov
fs
leave
test
mov
and
rolb
mov
enter
mov
imul
cs
cmpsb
divb
or
pop
scas
adc
aas
sub
sbb
cmpsl
sbbl
mov
out
sub
arpl
or
pop
inc
inc
mov
das
adcl
les
repz
imul
sbb
dec
divb
loopne
daa
das
std
gs
or
iret
mov
das
push
push
iret
inc
outsb
mov
inc
jg
cmp
lods
mov
jl
and
clc
hlt
in
enter
cmp
sub
jge
sbb
push
lods
or
lea
adc
push
scas
push
jb
data16
add
es
jb
daa
aas
cmp
imulb
pop
enter
jmp
push
call
out
push
sbb
jg
cmpsb
adc
dec
dec
xchg
or
push
shrl
inc
lods
or
sahf
xlat
pushf
sbb
ficoml
push
cmp
jmp
lahf
jmp
ss
add
fisubrs
mov
xor
out
hlt
inc
fwait
movsl
sub
adc
jae
cmp
sti
scas
cmpsl
adcl
gs
lret
push
aam
pushf
fwait
add
rorl
enter
pop
enter
cmp
clc
lcall
jecxz
pop
adc
xor
push
jns
addb
adc
push
test
sbb
add
lret
lret
enter
cmp
inc
sub
cwtl
add
jae
nop
mov
dec
push
out
inc
lods
or
mul
push
mov
stos
dec
push
xor
inc
cmp
out
or
and
sahf
scas
and
adc
sub
iret
scas
jae
sub
add
xchg
cmc
std
loope
jp
shlb
pop
and
mov
in
cmp
inc
fldcw
xchg
mov
outsl
xor
sub
jle
dec
outsl
add
negb
shll
lods
scas
pop
jo
mov
or
sbb
push
mov
fsub
lret
mov
cmp
int3
mov
aad
imul
cmp
stos
shr
pop
jecxz
xchg
ss
repnz
inc
and
fidivl
scas
add
and
into
sub
mov
xor
fdivl
mov
xor
sbb
call
cld
xor
mul
add
aad
outsl
pop
fs
cwtl
popa
or
push
mov
pop
sub
repz
lds
test
adc
cld
aam
fadds
inc
fcomi
mov
xor
shlb
push
dec
inc
es
mov
sti
scas
scas
pusha
jbe
mov
add
fwait
add
ja
jnp
and
mov
sub
and
bnd
jl
inc
jp
int3
mov
jp
sub
sbb
jo
sbb
vcmpsd
cmp
hlt
repnz
stos
or
pop
sub
pop
rcrl
sbb
inc
scas
or
push
mov
push
xor
mov
sub
dec
jp
out
scas
cmpsl
addl
ret
push
insb
push
or
std
shrb
loop
imul
iret
dec
mov
cmpsl
adc
adc
stc
pop
sub
sub
rcrl
mov
pop
cmpsb
mov
jmp
cmp
cmc
sbb
cmp
in
outsb
and
add
pushf
mov
out
mov
leave
jp
xor
cmpsl
cltd
adc
movsb
into
sbbb
lret
push
repz
jae
add
adc
inc
stc
jg
mov
out
lret
ret
xchg
imul
xor
jge
cmp
jl
sub
pushf
adc
lea
push
call
sbb
nop
imul
dec
ret
movsb
sub
in
gs
in
xor
notl
mov
insb
mov
inc
push
outsb
lcall
pop
fidivs
sahf
or
fidivs
stc
dec
sbb
cmp
orl
in
lret
mov
clc
imul
sbbl
lods
pop
pop
mov
pop
icebp
addr16
jp,pn
scas
mov
ljmp
pop
ret
pop
and
ja
scas
dec
mov
mov
push
dec
fdivrs
test
lret
popa
dec
jmp
adc
mov
jnp
add
and
daa
testl
fsubrl
aaa
inc
es
dec
dec
xchg
jno
frstor
and
sarb
sbb
mov
rol
mov
mov
jle
cwtl
mov
test
lcall
loop
in
mov
aam
pop
sbb
cmp
dec
xor
in
and
add
dec
loopne
test
pop
das
dec
and
dec
scas
dec
lods
dec
pop
jp
daa
jl
dec
aaa
cmp
inc
movb
iret
push
shrb
cmp
movsl
dec
sub
mov
mov
sub
das
or
push
mov
lret
mov
adc
adc
subl
mov
push
stos
pop
popa
jmp
or
std
aas
pop
pop
push
ret
xchg
mov
pushf
and
dec
out
orb
loope
hlt
rol
movsl
imull
mov
and
mov
jge
fstl
imul
dec
lea
sahf
lret
adc
dec
ljmp
cs
dec
fsts
pop
inc
inc
inc
dec
dec
lret
sbb
jecxz
daa
mov
movsb
imul
push
loopne
ljmp
mov
mov
outsb
imulb
test
dec
pop
movsb
xor
mov
mov
xor
xchg
sbb
imul
pop
push
adc
mov
pop
mov
cmp
imul
mov
popa
loopne
faddl
dec
jmp
lahf
fistps
pop
dec
jmp
fmuls
push
lret
dec
addr16
sub
std
dec
push
fwait
sti
in
hlt
popf
dec
jp
push
sub
jns
insb
dec
les
lds
rorl
stc
daa
mov
pop
dec
dec
test
mov
jmp
jmp
push
dec
in
xchg
mov
dec
sub
cmp
xchg
xor
mov
inc
push
lret
add
jmp
stos
adc
jmp
outsb
dec
push
lods
daa
push
test
mov
jp
les
stos
mov
cmp
and
sahf
fsts
sub
or
dec
inc
xchg
xor
dec
mov
lods
mov
or
mov
jge
arpl
rcrb
mov
pop
imul
lcall
mov
jge
push
add
push
ret
dec
mov
mov
add
push
dec
or
call
ret
stos
xchg
in
push
sbbb
gs
xor
jne
inc
sub
cs
mov
jmp
repz
pop
loopne
cmc
dec
lcall
mov
clc
add
lret
push
jg
in
fdivrs
aad
dec
jae
sub
push
push
lret
divl
fwait
movsb
pop
pop
ror
in
lahf
cwtl
lds
add
out
mov
mov
or
mov
rorl
xor
arpl
bnd
lcall
xor
notb
xor
stc
dec
lock
jno
mov
mov
push
ds
jg
test
sub
dec
adc
push
and
sub
out
inc
cltd
je
sub
push
add
arpl
mov
leave
jecxz
dec
mov
lcall
es
pop
andb
jmp
cwtl
inc
push
cmp
jmp
jecxz
testb
inc
fisttpl
gs
repnz
inc
in
xlat
out
aaa
dec
cmp
ja
fcoms
dec
fldcw
adc
adc
xor
xchg
mov
jbe
xchg
fstpt
inc
mov
mov
clc
push
icebp
idivb
orb
push
int3
sub
vcvtsd2si
test
sbb
scas
adcl
mov
push
mov
xor
lds
inc
push
jp
jmp
mov
imul
in
lahf
aaa
push
dec
push
sub
dec
out
je
orb
cmp
mov
adc
or
xor
outsl
pop
ret
dec
dec
imul
pop
jbe
xor
pop
subl
mov
movsl
fistl
xchg
shrl
mov
mov
test
dec
pop
jmp
dec
mov
andl
sub
outsl
push
mov
daa
mov
ljmp
sub
es
push
std
test
inc
jns
xchg
dec
dec
cmp
add
cld
sti
rol
mov
dec
jg
jecxz
dec
push
push
jmp
ficomps
test
js
mov
xchg
and
dec
andb
imul
ret
lock
pop
push
xor
adc
in
fimull
pop
xchg
fcoms
xor
dec
orb
dec
scas
sbb
mov
mov
mov
loopne
lea
dec
or
and
loope
pop
cmp
movsl
fcoml
mov
xchg
sub
leave
xchg
scas
add
push
loope
out
lds
cmp
inc
xchg
les
sub
dec
inc
insl
sahf
pop
mov
xlat
jmp
mov
aaa
movl
pushf
push
int3
cs
sub
inc
lret
lods
movsb
scas
push
ds
dec
leave
inc
std
mov
sub
insb
mov
xchg
setge
xchg
add
es
nop
dec
mov
icebp
stos
into
pop
inc
or
push
push
sbb
jnp
stos
mov
popa
ss
jbe
scas
dec
mov
lods
push
mov
push
jne
and
and
inc
dec
sbb
add
cmpsb
push
movsb
dec
cli
dec
push
popa
mov
dec
xchg
pop
aam
cmp
dec
loopne
inc
and
mov
shll
and
dec
mov
adc
sbb
push
mov
pop
sbb
aas
lret
inc
cli
push
ja
dec
cmpsl
leave
xor
jl
xor
or
adc
xlat
xchg
loop
lds
pop
lcall
push
jp
sub
fs
mov
pop
add
out
xor
sub
push
loop
into
sbb
adc
mov
test
dec
popf
sub
sbb
cmpsl
push
push
cmp
sarb
popf
jnp
mov
dec
mov
icebp
pushf
fmull
add
pop
or
inc
push
movsb
cwtl
dec
enter
fwait
mov
jo
dec
outsl
and
sub
dec
add
addl
clc
xor
push
mov
push
dec
and
fbstp
push
fdiv
inc
enter
mov
push
push
or
mov
cmova
and
lret
mov
stos
sub
jmp
xor
lret
leave
pop
sbb
ficoml
call
dec
add
dec
mov
fsubrs
jnp
dec
add
leave
mov
or
cmp
or
int
inc
popf
cmp
ffreep
mov
pop
int
inc
push
cmp
or
cmp
push
int
inc
adc
icebp
or
cmp
push
int
inc
adc
lock
cmp
push
int
inc
adc
repz
cmp
push
int
inc
adc
repnz
cmp
push
int
inc
adc
shll
int
inc
adc
hlt
or
cmp
sub
or
int
inc
push
dec
or
cmp
and
add
cmp
gs
or
cmp
mov
pop
or
int
bound
sbb
lahf
int
inc
adc
repnz
inc
fcmove
cmp
int
inc
inc
cmp
or
cmp
or
push
inc
xor
aad
ss
or
pusha
or
cmp
sbb
jge
cmp
or
cmp
mov
in
dec
cmp
ret
inc
out
mov
adc
push
or
sub
or
cmp
or
int
inc
lahf
cmp
xchg
pop
sub
lret
int
inc
mov
rcr
cmp
or
icebp
inc
adc
cmc
or
rorl
cmp
or
cmp
fdivrl
mov
inc
jb
test
pop
out
imul
adc
sub
iret
test
cmp
shll
sub
inc
rorb
and
in
out
mov
pop
mov
loope
movsl
and
pop
push
out
inc
test
rorb
and
pop
idivb
and
movsl
scas
movl
out
out
imul
inc
test
inc
loope
xchg
pop
arpl
or
addr16
fsubs
push
les
inc
push
jecxz
test
out
mov
adc
andl
test
mov
sub
or
addl
cli
fsubl
pop
lret
inc
push
sbb
movsb
adc
insb
cmp
notb
sbb
idivb
inc
lret
xchg
add
pop
je
cmp
repz
pop
mov
scas
and
lahf
ret
and
jl
lds
push
aam
loopne
jecxz
adcl
mov
mov
and
dec
and
push
push
out
sub
add
fwait
inc
dec
stos
pusha
add
movsl
cltd
inc
lds
in
and
in
xchg
push
xor
dec
pop
ja
jnp
cmp
pop
movsl
mov
xlat
jmp
inc
push
addr16
test
mov
pop
js
fs
lods
jmp
sti
mov
fwait
push
clc
xlat
dec
xchg
mov
add
inc
fadds
stos
je
mov
sub
adc
sub
jne
inc
jge
add
in
cmpsl
and
andl
insb
test
stos
cmp
sbb
add
cltd
iret
or
lods
int
test
rol
sti
mov
movsl
jge
fs
add
or
inc
movsb
enter
fadd
mov
movsb
add
and
in
adc
mov
lds
add
test
daa
test
and
fcmovnu
aam
push
stos
or
add
adc
or
loope
test
clc
ret
mov
aad
cltd
add
loope
fidivl
repnz
mov
out
ficomps
test
cmp
in
add
inc
clc
cmpb
outsl
jge
inc
jmp
mov
fisttps
fistl
cmp
ret
loope
fisttpl
pop
sub
std
push
pop
movsl
lods
enter
fisttpll
fwait
stc
mov
lahf
aad
imul
lds
push
jne
imul
jmp
push
mov
dec
sbb
lret
jecxz
stc
test
pop
sub
jmp
subl
pop
jne
arpl
cmp
sbb
pop
aaa
orl
les
inc
repnz
fcmovne
lret
sbb
pop
aaa
pop
or
mov
stos
push
mov
pop
sbb
js
in
icebp
pop
push
sub
adc
jmp
out
iret
aas
dec
das
xor
jp
ss
and
in
outsl
movsl
lret
dec
jo
mov
push
lock
xchg
jge
push
jle
sub
pop
dec
inc
lret
lea
iret
sub
push
dec
and
push
int
sub
and
aaa
scas
sub
cmp
mov
enter
lds
cmp
mov
pop
sub
fs
push
daa
das
push
xchg
cmp
and
sub
inc
shll
pop
mov
ds
cmp
push
aas
dec
cli
es
sub
or
inc
xor
dec
xchg
mov
iret
dec
mov
mov
movb
dec
mov
addr16
je
ret
push
adc
rclb
xlat
mov
bswap
mov
lods
xchg
mov
loope
xchg
xchg
test
xor
sarl
xorl
in
xor
das
and
add
out
scas
dec
jbe
dec
out
das
mov
mov
popf
popa
icebp
mov
dec
dec
ja
sbb
int
stos
movsb
ret
aaa
push
outsl
fcoms
pop
and
pop
jns
cmpsb
sbb
mov
adcl
sub
lahf
dec
inc
add
pop
dec
xorb
inc
das
sub
fstps
or
leave
xchg
cmp
in
stos
pop
in
pop
aad
inc
test
cmp
and
pop
inc
mov
sbb
dec
dec
sub
sbb
dec
jns
inc
aad
cmp
mov
dec
inc
adc
int
mov
sahf
push
pop
push
aaa
jmp
dec
sahf
sub
leave
out
pop
adc
fstpt
jp
pop
or
inc
and
and
push
std
sub
insl
adc
fistpll
adcl
cmc
mov
bound
xor
pop
adc
lea
pop
dec
sub
jle
sbb
in
sub
jmp
popa
lret
pop
mov
aad
insb
adc
inc
movl
lret
pop
fidivs
mov
sub
dec
xchg
hlt
pop
hlt
stos
fldt
add
pop
jnp
inc
lret
lret
push
fdivrs
inc
mov
out
rcl
pop
aas
push
fmulp
mov
lds
add
js
pop
xchg
movsl
std
ss
out
xor
jp
mov
sub
inc
jecxz
incb
adc
fmuls
sub
mov
ficoms
and
add
hlt
insb
arpl
pop
jg
jae
xor
jle
flds
cwtl
push
cmp
adc
cmp
shlb
push
ja
lret
and
hlt
pop
xchg
mov
xchg
lcall
fbstp
daa
lea
xor
int3
cs
js
mov
xor
dec
lds
push
sbb
lods
mov
arpl
xor
mov
inc
jecxz
pop
fs
out
add
mov
push
mov
aas
xchg
repz
shr
negb
adc
mov
mov
xor
jb
pusha
roll
arpl
cld
xchg
mov
addb
lret
pop
inc
ja
dec
push
test
dec
dec
xlat
sub
pop
sub
push
or
test
push
sub
sub
roll
pop
sub
mov
inc
sub
and
push
jo
dec
dec
jno
jp
dec
push
push
out
les
addr16
inc
jecxz
pop
ret
or
push
push
or
jecxz
dec
mov
dec
cmpsl
dec
mov
cmpsb
stos
scas
mov
and
dec
cmp
stc
push
mov
outsb
dec
aam
lret
enter
test
mov
dec
jmp
mov
shrb
orl
push
enter
mov
cli
lret
pop
test
inc
sbb
repnz
jmp
enter
mov
mov
push
push
clc
mov
mov
nop
or
loopne
jno
pop
lret
mov
jmp
push
leave
cmpsl
or
adc
dec
mov
mov
dec
and
iret
add
cmp
or
in
lret
inc
out
inc
dec
sub
sub
sub
push
lret
sbb
rorl
clc
inc
mov
dec
push
pop
daa
jbe
or
inc
mov
pop
arpl
and
adc
or
popf
add
inc
dec
loope
sub
cli
fcmovne
or
dec
sbbl
adc
enter
push
mov
test
rorl
enter
int
dec
push
and
mov
insl
or
pop
sub
add
or
dec
sub
pop
jle
lret
add
dec
imul
mov
dec
cmp
inc
inc
lea
jecxz
int
push
roll
andl
mov
dec
setp
pop
out
aas
cmpsl
pop
jle
scas
movsl
stos
push
and
cmpsb
xor
or
sub
cmp
int3
mov
js
jbe
movsl
sub
dec
or
dec
push
repnz
cltd
pop
pop
test
pop
pop
mov
jo
push
subl
adc
dec
out
ud2
sub
add
push
sub
lret
out
add
loope
mov
dec
xor
pop
int
and
pop
leave
mov
test
sub
mov
jbe
and
bound
xchg
sub
lcall
cmp
addr16
push
mov
insb
xor
pop
sub
mov
je
repz
cmpsl
cmpsl
fwait
or
inc
jl
dec
sbb
jae
mov
push
cld
xchg
xor
mov
jle
insl
xlat
sub
jmp
pop
push
aas
mov
or
rcll
pop
repz
or
iret
scas
out
cmpsb
lcall
dec
pop
or
push
std
imul
and
stos
dec
fnstcw
rclb
xchg
jge
cmp
rcrl
mov
and
add
and
dec
inc
mov
movsb
inc
inc
xchg
cmpsl
push
movsl
call
fwait
cmp
jmp
mov
pop
inc
inc
flds
lods
inc
in
cmp
adc
and
push
or
or
or
or
or
imul
dec
jmp
dec
inc
xchg
mov
aas
pop
fdivrp
pop
pop
push
pop
add
stc
adc
or
repnz
push
sub
dec
sub
aam
es
sub
int
dec
cmp
push
sub
dec
arpl
or
sarl
mov
inc
xchg
cmpl
pop
cmp
stos
jmp
and
sub
xchg
pop
push
shrl
das
sub
loopne
dec
cmpl
xor
dec
cmp
xchg
in
dec
adc
dec
lods
sub
or
dec
enter
jns
paddb
sbb
or
cs
out
jmp
outsb
dec
dec
inc
add
jmp
stos
leave
sub
xor
jmp
dec
and
sub
sub
push
mov
sub
out
cmp
or
mov
and
or
mov
and
inc
clc
fnstsw
jbe
add
push
and
mov
aam
popa
cwtl
or
inc
js
and
or
shrl
sti
sub
dec
cs
cmp
mov
fwait
sub
or
jne
pop
or
cmp
jg
scas
sbb
pop
mov
sub
or
rcrl
pop
inc
mov
sub
lcall
pop
shr
dec
test
xor
cmp
scas
inc
sbb
daa
std
or
cmpsb
mov
popf
or
sarl
out
cmp
sub
or
popf
shrl
dec
ret
dec
or
inc
pushf
cmovno
pop
inc
inc
aas
bound
test
pushl
fdivrs
sbb
cmp
pop
and
dec
xchg
decb
fimuls
sahf
dec
jmp
dec
or
dec
inc
adc
icebp
sub
xchg
sub
jno
sbb
cmp
sub
imul
leave
mov
leave
xlat
nop
push
push
and
lret
xor
adc
adc
pop
or
or
inc
aam
popa
shrl
sbb
mov
decl
shrl
push
or
int
rorl
clc
cmp
fcmovb
ja
inc
adc
or
movl
mov
xchg
rcrl
jge
or
mov
xor
dec
int
or
inc
cmc
pop
cmp
sub
shll
pop
pop
test
sub
dec
mov
rcrl
push
cmp
or
cli
inc
xchg
pop
and
fmull
hlt
or
inc
aam
cmp
sub
push
aaa
rcll
adc
push
xor
aaa
mov
inc
cmp
imul
negl
xlat
pop
mov
pop
in
pop
push
push
pop
cmp
pop
pop
push
pop
jge
pop
lahf
pop
mov
push
and
imul
jae
sub
dec
je
mov
dec
mov
shrb
dec
dec
add
dec
or
call
popf
test
mov
xchg
pop
adc
stc
sbb
jmp
adc
xchg
pop
xor
lods
push
push
lret
jnp
jg
xchg
ds
pop
addr16
jmp
xor
fsubrp
aam
js
std
jle
push
jo
pop
push
rcrw
xchg
sarl
ret
jo
mov
les
movsb
out
cvttps2pi
in
fs
or
loopne
jne
inc
push
insb
adc
mov
out
in
test
mov
gs
and
je
int3
jmp
daa
out
push
cmpsl
pop
dec
into
or
lret
gs
test
cmpsl
aam
outsl
das
outsl
mov
dec
ud1
inc
mov
jge
and
dec
and
lea
in
lods
cmpsl
mov
sub
test
push
mov
dec
jae
pop
xchg
mov
inc
mov
or
fdivp
ljmp
mov
fists
dec
mov
aas
xor
adc
jge
adc
lahf
and
push
nop
push
dec
fidivs
sbb
push
dec
mov
mov
push
mov
xchg
pop
or
pop
xchg
aad
lock
out
std
cmp
dec
or
cmp
inc
push
bound
pop
dec
xor
adc
rclb
mov
push
dec
fists
adc
or
fdivrl
or
push
adc
test
stos
cmp
and
cmpsl
adc
mov
xchg
push
jo
xlat
lret
push
aas
lds
push
and
mov
repz
adc
iret
push
inc
cmp
jo
add
mov
adc
push
mov
push
jge
add
mov
out
f2xm1
rorl
pop
out
cmp
sbb
inc
sbb
ds
inc
lock
int
cmc
jno
sbb
lahf
jl
sbb
hlt
dec
dec
js
inc
lcall
rolb
pop
lahf
aaa
adc
adc
ds
push
enter
mov
mov
dec
jb
push
pop
push
mov
or
xchg
ficomps
out
dec
adc
push
dec
cwtl
pop
lret
pop
push
sbb
ss
rcrb
ret
xchg
push
dec
cmp
and
popa
lods
cmc
icebp
lahf
mov
jae
ss
pop
xchg
jb
aas
das
xor
inc
sahf
xor
push
adc
inc
sarl
dec
leave
xlat
jle
jg
dec
fcompl
pop
sbb
jb
adc
fcom
adc
jno
and
cmovle
inc
push
aas
ds
xor
or
jno
push
and
enter
push
aas
push
enter
repz
mov
xor
mov
sbb
sub
fisttpl
repnz
push
push
repz
rcr
sahf
pop
shlb
push
mov
mov
pop
dec
mov
les
mov
cmp
lret
lds
test
addr16
dec
int
dec
stc
or
pop
out
or
mov
push
mov
into
insb
or
sub
enter
sbb
cmpsl
jb
lret
es
in
xchg
push
push
and
dec
out
push
lods
movsl
scas
lret
xchg
or
and
shll
mov
sbb
xchg
addr16
push
insb
mov
dec
sub
cmpsl
test
in
fs
in
mov
dec
out
lock
cwtl
int3
xor
push
ljmp
jno
dec
or
gs
sbb
bound
fistpl
and
add
or
jne
out
jne
pusha
test
arpl
lret
push
mov
mov
movsb
push
add
or
jge
adc
lds
dec
sbb
in
cmpsl
cmpsl
mov
push
das
jns
mov
das
mov
out
scas
cs
shll
jmp
or
je
cmpsb
imul
outsb
add
shlb
fdiv
dec
scas
outsl
dec
and
call
aam
call
sub
aaa
ret
loopne
nop
enter
test
push
sub
cmp
mov
add
lods
ja
ja
scas
dec
mov
test
mov
in
dec
out
adc
dec
push
out
pop
mov
mov
mov
mov
dec
dec
outsl
lods
inc
add
adcb
das
pusha
jle
mulps
sbb
dec
int
xor
pop
popa
inc
and
loopne
shlb
jecxz
ret
mov
add
mov
int
dec
push
inc
pop
fidivl
pop
mov
dec
add
push
mov
mov
xor
add
sub
and
sub
xchg
inc
jb
inc
or
movsb
and
and
mov
xor
ds
jae
mov
fsubs
clc
or
outsl
inc
sub
mov
movsl
in
sbb
adc
sbb
das
sbb
jecxz
cs
lret
xchg
sub
dec
dec
lss
iret
sub
out
in
in
xbegin
pusha
int3
dec
sbb
fldcw
sbb
xchg
jecxz
mov
out
sarl
imul
pop
push
leave
lods
push
gs
dec
jecxz
rol
inc
push
fs
call
mov
and
mov
dec
addl
ret
lea
mov
lret
and
les
loope
sbb
and
add
imul
dec
inc
data16
inc
mov
inc
pop
cmp
dec
stos
fadd
lods
sub
ja
test
sub
and
sub
mov
inc
jmp
dec
jecxz
cmp
test
mov
xor
pusha
test
cmp
and
test
imul
xor
sub
pop
imul
pop
jb
popf
movsb
and
or
mov
int3
or
mov
popa
lds
inc
inc
in
inc
add
outsl
mov
in
add
jp
subl
mov
mov
jecxz
lods
mov
arpl
sti
cs
cmp
pop
lds
add
xchg
cmp
cld
out
bound
mov
sarb
movsb
adc
adc
mov
test
and
sub
push
adc
jns
adcb
mov
in
in
push
inc
cmp
mov
jb
adc
and
mov
scas
dec
dec
mov
adc
jnp
fldl
imul
push
cmc
add
imul
mov
imul
sbb
jmp
fiadds
push
dec
loope
inc
push
dec
inc
imul
imul
adc
dec
ljmp
popfw
daa
xchg
mov
fmuls
xchg
sub
dec
sbb
or
out
dec
loope
sub
push
adc
pop
and
adc
dec
test
xchg
sbb
imul
ret
test
cmp
sbb
adc
or
imul
popfw
daa
cwtl
pop
pop
pop
stc
mov
test
xchg
test
cmp
xor
test
pop
sub
les
mov
or
cmp
sub
mov
aaa
xor
cmp
jecxz
movsl
ljmp
xchg
repnz
ja
inc
and
popa
ljmp
inc
inc
or
dec
mulps
mov
idiv
cmp
jecxz
fsubl
or
lret
test
and
dec
orb
sti
lods
sub
test
sub
mov
inc
add
out
lods
je
into
add
out
lods
je
into
lds
imul
arpl
dec
pop
sbb
push
enter
mov
jecxz
lret
lds
andl
jecxz
inc
sbbl
push
add
stos
and
aad
int3
int3
mov
les
or
movsb
mov
dec
pushf
xor
int
cmpsb
ret
or
jns
int
pop
shll
nopl
mov
sub
pop
shll
shlb
mov
int
sub
mov
arpl
in
lds
add
in
cwtl
fstps
ljmp
rol
pop
and
push
push
shrl
dec
sbb
or
sub
into
add
push
cmpsl
fcomi
mov
sub
inc
mov
or
insb
leave
mov
jecxz
mov
notb
cmpl
int3
mov
leave
test
int3
das
icebp
enter
into
or
aas
add
jg
push
add
cltd
inc
int3
mov
dec
add
pusha
mov
in
inc
test
dec
sbb
test
sub
or
sub
xor
or
and
loopne
mov
fwait
xchg
mov
mov
sub
push
xchg
xchg
mov
or
out
jb
or
std
test
imul
lret
and
add
out
inc
mov
pop
inc
ret
outsl
and
inc
bound
cli
loope
fldcw
or
xor
imul
ja
scas
jecxz
ja
out
pusha
cld
sbb
scas
and
shlb
sub
inc
test
jle
jecxz
sub
stos
test
sub
negb
lods
test
insl
movsb
mov
dec
loope
movsl
add
add
or
enter
add
insl
lea
sub
pushf
sub
or
cs
xorb
xchg
and
sbb
or
insb
test
inc
adc
add
stos
push
jecxz
jbe
shlb
mov
mov
mov
cltd
add
lcall
into
sti
mov
pop
add
ret
pusha
xchg
inc
adc
cmp
loope
inc
add
fwait
pop
mov
in
dec
push
cltd
pop
mov
sub
stos
fildl
faddl
insb
inc
lret
das
movsb
or
adc
clc
xor
loopne
fiaddl
dec
sti
mov
call
add
rorl
popa
mov
add
leave
jns
or
mov
rorl
mov
arpl
out
jp
adc
or
pop
popa
in
movsl
sub
and
sub
aam
mov
mov
xor
mov
mov
add
jb
lret
lretw
sub
hlt
test
cmp
inc
or
nop
sarl
sahf
sbb
push
int3
imul
aaa
repz
mov
ss
fisubrl
pop
scas
inc
mov
inc
lds
stc
cltd
into
and
leave
idiv
and
imul
icebp
xchg
inc
out
xor
lcall
addl
dec
mov
rorl
pushf
add
dec
popa
in
cwtl
in
out
pop
mov
pop
test
add
or
roll
add
sub
lret
and
push
movsb
ss
sub
call
repnz
jp
sbb
cmp
cmp
add
cmp
test
sub
mov
cmc
pop
lds
shl
lds
popf
ljmp
lds
add
lret
shlb
inc
fildll
popa
in
lds
and
inc
add
dec
adc
push
or
into
or
and
push
or
ret
add
adc
insb
mov
out
shll
out
out
pop
and
pop
outsb
and
loope
fisttpll
sbb
adc
std
inc
out
jns
add
lds
add
add
in
push
in
and
sbbl
fsub
mov
scas
fiadds
or
loop
in
cmp
jge
xor
int
cmp
popa
ret
adc
ret
cmp
jp
int
cmp
pop
popa
inc
xor
int
cmp
pop
popa
dec
adc
cmp
int
push
int
jge
xor
int3
sbb
jne
pushf
xchg
push
jne
pushf
faddl
jne
pushf
pop
push
fists
sti
shll
test
dec
and
dec
sti
push
pop
call
push
fstpl
or
and
lea
ret
push
dec
sbb
add
addl
ret
xchg
dec
and
jo
jne
pop
jne
pop
aad
enter
mov
cwtl
ret
aaa
push
jb
je
ja
out
scas
fists
push
mov
ss
add
inc
repz
adc
rcll
ja
aad
pop
lcall
aaa
fimuls
lods
push
mov
lret
notb
popa
and
lds
fidivl
dec
fcmovne
dec
test
cwtl
fcoms
dec
popf
mov
fmul
scas
cmc
pop
cmc
les
xchg
les
testl
xor
or
add
inc
add
faddl
fidivl
sbb
push
vpmulhuw
in
in
jb
and
or
xchg
and
or
inc
mov
scas
fsubp
jge
cmpsl
pop
shll
cs
das
inc
jb
lret
push
ror
dec
scas
mov
rcl
cmp
clc
mov
dec
xchg
jecxz
das
ficomps
pop
fld
iret
push
ret
shll
test
psubusw
sub
outsl
lcall
jp
inc
call
mov
movsb
std
or
mov
cli
call
mov
subl
dec
daa
in
add
subl
out
dec
das
dec
cmovge
inc
dec
rol
fisubrs
out
mov
add
add
sub
test
xchg
push
or
and
scas
out
cmp
lret
iret
jbe
imul
flds
outsl
and
adc
lods
sbb
jmp
mov
imul
das
imul
setle
push
mov
nop
call
fnstenv
sub
xchg
pop
enter
clc
shrl
and
scas
or
shrl
inc
mov
mov
jmp
insl
mov
pusha
xchg
test
lcall
pusha
adc
js
ret
pusha
sbb
fnstenv
imul
sub
imul
mov
pop
pusha
inc
mov
sbb
outsl
jo
cmpsl
mov
xlat
andl
dec
int3
sub
insl
push
pusha
aaa
jp
push
add
flds
out
xchg
add
sub
push
or
adc
mov
dec
xor
data16
lods
mov
in
shrl
imulb
bound
andl
xlat
loope
sub
imul
jp
outsb
adc
shrl
imul
bound
dec
mov
sub
push
jp
outsb
sbb
fxtract
sub
insl
push
pusha
push
jp
loopne
fwait
stc
loopne
insl
push
shrl
and
mov
push
pusha
pop
pop
shll
pop
ror
aas
lea
sbb
adc
lods
dec
dec
add
dec
and
loope
orl
out
sbbb
sbbb
sbbb
sbbb
adc
imul
lds
or
int
stos
pop
out
xlat
insl
push
pusha
inc
jp
outsb
adc
jbe
xchg
jmp
insl
push
pusha
push
jp
outsb
adc
jbe
pop
out
xlat
insl
push
pusha
inc
jp
outsb
adc
jbe
xchg
jmp
insl
push
pusha
push
jp
outsb
adc
jbe
pop
out
xlat
insl
push
pusha
inc
jp
outsb
adc
jbe
xchg
jmp
insl
push
pusha
push
jp
pop
fstpt
sahf
mov
fsub
ds
add
imul
imul
add
mov
cli
repz
clc
aas
xchg
sbb
sbb
xchg
sbb
popa
mov
jbe
cmc
xor
adc
sbb
jmp
jmp
add
insl
inc
rorl
lods
lds
lret
sub
int
sbb
and
dec
mov
or
aam
test
enter
dec
lcall
jg
or
dec
push
pop
dec
xchg
dec
mov
lock
pop
cmp
or
int
shll
dec
inc
cmp
sbb
pop
inc
pop
jns
push
sub
sub
inc
ficompl
pop
arpl
dec
xor
loopne
cmp
leave
fmuls
pop
xchg
mov
dec
jmp
shll
sub
sub
es
add
or
or
push
dec
leave
fwait
sub
test
leave
push
jmp
or
dec
push
cmp
lahf
stos
or
cwtl
pusha
mov
push
pusha
mov
fimuls
popf
leave
gs
subb
imul
dec
mov
mov
mov
sub
sbb
mov
dec
adc
mov
roll
sub
xchg
in
sub
pop
roll
add
xlat
mov
ja
mov
inc
stos
push
push
and
inc
inc
mov
xor
rorl
or
mov
mov
adc
sysret
inc
int
and
test
leave
pop
test
mov
jb
or
sub
cmp
or
ret
push
sub
jnp
jl
sub
jmp
cmc
adc
dec
lds
pop
rorb
inc
or
sub
sub
adc
ret
orl
adc
lahf
mov
xor
fidivrl
call
and
push
inc
cmp
inc
inc
dec
mov
stos
sub
cmp
dec
pushl
adc
pop
fimuls
jp
stos
jne
sbb
dec
int
jp
mov
sbbl
lds
adc
jo
shr
pop
ss
xchg
dec
xor
shlb
in
cmp
mov
xchg
dec
push
cmp
loopne
or
cmp
push
fs
nop
je
fistpll
sti
sub
out
dec
adc
push
shll
pop
adc
mov
mov
out
or
xor
mov
movsl
push
sub
js
xor
scas
xor
cmp
sbb
das
mov
inc
push
xchg
pop
shrl
or
sbb
scas
dec
inc
inc
fisubl
mov
daa
push
pop
jb
push
fsubs
cmp
loope
xchg
xchg
sbb
mov
inc
sbb
in
jne
inc
movl
xchg
in
jecxz
filds
or
outsb
adc
sub
add
xchg
lods
cltd
or
sti
fs
or
cmpsl
shlb
repz
mov
jle
adc
xor
stos
jecxz
iret
cwtl
lock
inc
inc
xchg
insb
lcall
pop
scas
shrl
pushf
adc
xchg
cmp
nop
pop
adc
xor
lds
leave
mov
inc
pop
out
xor
daa
pop
cld
push
adc
out
adc
arpl
push
jae
cmpsb
add
xor
jb
mov
or
sub
jp
dec
and
addl
and
nop
mov
and
mov
dec
mov
inc
add
sbb
aam
xorl
rep
in
jge
mov
iret
ficoms
and
fcmove
push
push
arpl
dec
dec
out
pop
push
dec
xor
push
lahf
dec
push
pop
adc
pop
fildll
jl
iret
lret
lds
ficomps
xlat
clc
fsts
out
das
pop
ret
jge
xlat
pop
sti
flds
pop
xor
push
popf
cmp
shl
rolb
lods
xchg
gs
loope
xlat
divb
cmp
push
add
insl
xor
outsb
lds
insl
icebp
aam
lds
sub
gs
jecxz
mov
inc
inc
jbe
mov
jno
les
adc
add
jle
sti
lock
inc
push
pusha
out
xor
pop
push
call
dec
cmp
bound
mov
faddp
orl
out
and
dec
inc
mov
push
mov
ljmp
jae
lods
das
lret
cld
adc
or
aad
fsts
fidivs
mov
xor
mov
das
je
dec
mov
pop
dec
mov
aas
or
cmp
mov
fsubs
adc
cltd
jmp
aam
lcall
or
push
mov
sub
adc
push
add
lock
iret
dec
push
inc
sarl
dec
or
rorl
repz
pop
xor
and
jne
stos
push
sub
cmpb
loopne
jl
xor
lcall
mov
ljmp
outsb
sub
mov
test
pushf
or
adc
pop
daa
dec
or
add
stos
push
rcl
imul
dec
lcall
mov
inc
xchg
sbbb
fnstcw
sbb
fdivrp
icebp
sti
dec
icebp
pop
mov
inc
cmp
cmp
or
sbb
xchg
leave
lods
xor
test
xchg
jmp
stos
mov
pop
jle
xchg
dec
pushf
pushl
mov
dec
mov
mov
xchg
int
mov
arpl
adc
fsubrp
mov
push
sub
mov
dec
pop
arpl
cmovle
mov
mov
push
ficomps
or
mov
lds
loopne
or
pop
in
dec
lods
xlat
sbb
mov
xor
xchg
adc
lds
int
dec
jle
int
inc
dec
ficoms
mov
sub
and
mov
dec
dec
push
and
inc
pop
in
and
push
pop
fimull
push
pusha
lds
xor
jecxz
enter
test
dec
add
add
mov
sub
inc
or
out
sub
sub
or
and
sub
xchg
sbb
cmp
push
inc
movsl
dec
dec
andb
lea
in
pop
sub
add
inc
movsl
je
push
push
inc
or
push
test
or
aaa
sub
fs
jp
or
dec
test
cmp
push
push
cmp
das
pop
aaa
sub
cmp
dec
or
dec
pop
aad
inc
push
cmp
loop
or
or
stc
les
pop
inc
add
fldcw
or
sbb
lret
lock
fs
dec
and
das
inc
fiadds
in
pop
pop
inc
pop
pop
mov
push
pop
sbb
dec
xchg
jbe
in
dec
xchg
int
push
movl
dec
das
cs
pop
sub
lods
pop
dec
or
insb
cmovae
inc
and
stos
inc
inc
in
test
and
push
dec
pop
in
sub
popa
dec
adc
popa
pop
adc
push
pop
sbb
cmpsl
dec
mov
dec
push
and
int
or
pop
sbb
pop
addr16
dec
lods
jns
pop
mov
scas
ds
push
dec
fistpll
dec
push
inc
fistpll
sub
sub
jle
dec
aad
rclb
mov
pop
push
inc
insl
cmp
loop
or
push
inc
push
jns
push
das
add
insb
inc
insl
xor
or
inc
xor
push
inc
and
pop
inc
cmp
push
inc
adc
stos
orb
push
pop
loope
jne
lock
push
cmp
inc
orb
sub
pop
in
sub
push
dec
dec
cmp
pop
pop
in
jnp
pop
push
lock
sub
pop
das
cmp
pop
and
jmp
cmp
dec
pop
or
dec
adc
es
mov
push
and
mov
push
dec
in
jmp
pop
push
inc
pop
pop
cmp
mov
pop
iret
xor
xchg
in
pop
xor
inc
xor
mov
push
jae
sub
push
fsubs
rcll
js
sbb
lds
pop
xorl
dec
orb
sub
dec
dec
push
xor
dec
dec
adc
stc
imul
dec
dec
int3
in
sub
shrl
mov
dec
cmp
pop
push
pop
popa
mov
pop
int3
dec
mov
and
dec
or
stos
dec
pop
pop
aad
sub
sub
call
mov
xchg
inc
lods
mov
pop
dec
xor
cwtl
inc
fstps
gs
push
push
jne
dec
xchg
ds
push
inc
push
jge
mov
jo
fsts
mov
inc
xchg
dec
int3
mov
jecxz
push
xor
push
xchg
mov
inc
ja
dec
loope
aaa
pop
into
push
aam
adc
in
dec
adc
imul
or
cwtl
dec
rorl
mov
push
push
pop
ret
idivb
push
push
pop
push
jns
dec
push
push
pop
das
sub
dec
es
insl
inc
cmc
dec
fmuls
push
dec
inc
jbe
pop
loope
xchg
mov
dec
ficoms
inc
mov
in
pop
mov
inc
pop
std
stc
sbb
jne
xor
test
movsl
leave
dec
jmp
test
pop
jge
mov
push
ret
push
push
lods
or
test
dec
sub
std
pop
ret
sahf
dec
addr16
in
dec
xor
push
push
ljmp
dec
inc
inc
inc
add
inc
push
dec
or
dec
outsl
cmp
push
ss
ljmp
push
inc
mov
dec
lds
inc
push
inc
inc
stos
fs
daa
ficomps
push
dec
pop
andb
scas
dec
push
xchg
dec
pop
aaa
push
add
push
loopne
dec
scas
mov
pop
sub
sub
dec
test
rcll
jp
sbb
mov
jecxz
inc
cmp
xor
int
rorl
mov
mov
ljmp
inc
or
out
xor
das
ficomps
scas
pop
dec
cmp
sbb
cmpsl
dec
push
popf
sub
outsb
pop
sub
jne
push
pop
dec
sbbl
fstl
sub
dec
dec
and
call
sarl
leave
fstl
mov
dec
and
or
sub
add
rclb
cmp
inc
call
push
sub
mov
lahf
lret
push
dec
test
xchg
xor
adc
lahf
sbb
push
add
cmpsb
sub
decb
outsb
fimuls
das
lahf
pop
ret
aaa
xchg
xor
fistl
mov
push
pop
dec
add
inc
js
dec
inc
out
mov
pop
push
inc
fildl
push
pop
addl
lods
dec
inc
pop
add
xor
mov
push
inc
cs
xor
push
xor
call
xor
adc
mov
lret
pop
inc
mov
mov
std
rorl
fsts
mov
faddl
pop
stos
rcrl
cld
movsl
dec
sub
or
stos
mov
and
lret
call
outsl
pop
fbld
rcll
inc
sahf
stos
adc
jo
shrb
jle
aaa
inc
arpl
shll
flds
xchg
xor
dec
mov
loopne
leave
dec
aad
inc
inc
aad
push
shrb
push
cmp
sub
sub
shll
pop
pop
loope
xor
push
mov
test
lahf
enter
dec
push
pop
sub
inc
dec
or
rorb
or
faddl
mulps
inc
shrl
inc
dec
lret
inc
dec
dec
dec
in
into
sub
push
or
xlat
out
xor
addl
push
pop
xchg
and
xor
pop
daa
and
pop
cmp
pop
dec
das
pop
mov
dec
adc
enter
mov
push
mov
lret
adc
loopne
sub
dec
insl
sub
pop
orl
sarl
inc
outsb
dec
pop
sub
cmp
push
or
pop
lahf
test
lods
jns
jbe
mov
sahf
dec
inc
push
dec
fimuls
loope
fstps
fcoml
jo
imul
sub
push
aas
inc
xor
mov
inc
repnz
js
jmp
mov
test
pop
pop
mov
mov
mov
push
push
dec
push
mov
repnz
xor
push
dec
cltd
dec
lds
inc
pop
sbb
pop
push
mov
faddl
adc
nop
inc
jle
inc
xlat
pop
push
sub
pop
push
jle
int
inc
mov
faddl
xor
in
xchg
test
inc
int3
push
dec
sub
xchg
ds
pop
dec
jno
aaa
or
mov
inc
insl
add
add
orl
pop
icebp
inc
xchg
dec
roll
int
mov
inc
jnp
inc
addl
push
leave
inc
dec
mov
cwtl
pop
mov
inc
push
push
pop
maxps
or
push
sub
insl
dec
popa
popa
inc
add
or
bound
mov
sbbb
inc
pop
push
popf
push
xchg
push
es
push
pop
lods
jl
add
and
push
lods
cli
dec
imulb
sub
cs
adc
ds
leave
mov
mov
test
jns
jecxz
loope
sub
dec
mov
or
leave
push
int
cmp
mov
into
or
adc
adc
mov
pop
insb
add
sub
test
comiss
cmp
sbb
jge
rcrl
stos
inc
popa
push
sti
add
outsb
pop
pusha
rorl
and
and
movsb
dec
inc
out
dec
inc
sub
sub
and
cmc
jnp
dec
xchg
sub
and
dec
int3
inc
add
test
inc
sub
clc
pop
mov
mov
pop
push
inc
std
js
push
inc
orb
mov
outsl
leave
push
jge
pop
dec
sub
pop
push
adc
pop
jae
sbb
sub
xchg
dec
push
pop
lds
push
inc
push
sahf
pop
xor
inc
cmp
fcmove
cmp
push
push
sbb
add
sub
dec
xor
pop
or
dec
push
mov
aas
imul
dec
daa
inc
xor
push
and
imul
insl
jnp
imul
fisttpl
inc
mov
lahf
dec
add
push
dec
add
or
imul
dec
push
inc
mov
pop
mov
stc
popa
dec
adc
call
in
dec
xor
insb
inc
stos
inc
pop
push
pop
mov
fmuls
add
aaa
dec
add
dec
pop
clc
cmp
inc
mov
dec
sbb
mov
rcrl
adc
pop
mov
daa
jae
sbb
jge
sbb
and
mov
fiadds
fcomps
sbb
fwait
inc
insl
pop
pusha
xor
fwait
lea
rcr
imul
push
sbb
imul
push
jg
inc
pop
cmp
push
int
inc
push
pop
dec
ljmp
mov
stc
sahf
dec
cmp
push
imul
cmp
cmp
dec
push
repz
xor
cs
rorl
dec
mov
inc
mov
orb
or
loope
pop
and
add
rorl
imul
andl
inc
mov
hlt
cmp
xchg
mov
dec
push
aaa
fisttpl
popa
adc
sbb
lret
adc
dec
push
inc
jns
rol
loope
push
inc
push
popa
sub
in
pop
push
pop
ret
mov
rorl
dec
add
fldl
pop
mov
stos
popf
dec
push
push
hlt
imul
hlt
imul
mov
sub
daa
imul
js
lcall
test
in
enter
add
pop
xor
push
out
mov
ds
out
mov
outsb
scas
addb
mov
outsl
xor
pop
arpl
js
inc
jle
lcall
jb
dec
push
insl
inc
adc
xor
pop
in
inc
push
out
imul
or
dec
jnp
pop
add
cmp
inc
dec
iret
sbb
clc
frstor
inc
mov
mov
movsl
pop
int3
dec
clc
inc
inc
dec
sbb
cmp
mov
fldl
dec
fwait
dec
jecxz
leave
or
push
loop
popa
or
or
addb
push
pop
and
and
pop
movl
inc
dec
add
mov
xchg
dec
cmp
stos
add
pop
sub
dec
roll
and
dec
dec
xchg
or
das
int
pop
dec
ret
sub
mov
add
xlat
stos
dec
mov
dec
mov
inc
add
pop
lods
push
arpl
and
push
jg
ljmp
push
daa
dec
fcompl
mov
inc
ljmp
aad
dec
aad
addb
dec
int3
dec
aam
sub
in
loope
aas
dec
int3
out
pop
xor
jmp
push
call
dec
dec
push
lea
lds
lret
cmp
popf
dec
push
push
in
dec
mov
dec
test
push
lcall
inc
loope
add
jb
pop
loope
pop
loope
push
loope
cmp
mov
cmp
outsb
and
xor
in
add
add
push
push
or
pop
xchg
dec
sub
dec
sub
or
call
dec
pop
popa
lds
sub
or
cmp
in
lds
mov
or
fnstsw
pop
jmp
out
dec
or
in
cmp
lods
dec
fmuls
cmp
int
inc
push
cmp
or
dec
push
sub
ret
sub
or
cmp
mov
outsb
jl
inc
cmp
push
lret
fildl
dec
inc
cmp
sub
jmp
aaa
cmp
inc
sub
xchg
inc
cmp
push
rcll
pop
leave
or
faddl
mov
jp
add
sub
paddw
sub
inc
push
dec
jle
call
dec
lret
movsb
ret
add
lods
or
ret
dec
dec
lret
dec
sub
icebp
lret
inc
mull
dec
sbb
ljmp
inc
ret
pop
dec
lret
cwtl
movsb
sub
pop
lahf
fadds
xor
jb
inc
mov
je
and
xchg
push
adc
cmp
les
push
pop
orl
jle
push
and
xor
jmp
and
dec
xchg
mov
dec
push
enter
jmp
jo
jbe
dec
inc
pop
inc
fadd
faddp
stc
dec
loope
out
pusha
jle
dec
dec
push
dec
push
int3
aam
shr
dec
cmc
jmp
insb
je
jb
dec
inc
pop
inc
fadd
fcmovb
std
dec
in
jecxz
fs
dec
dec
push
dec
push
leave
ror
xlat
call
imul
pop
inc
fld
ffreep
clc
dec
loopne
out
popa
jg
dec
dec
push
dec
push
int
lret
shr
dec
hlt
ljmp
dec
inc
pop
inc
ffree
fcmovnb
cld
dec
in
loop
gs
or
movhps
dec
xor
aaa
test
scas
mov
dec
add
pop
cwtl
sbbb
daa
mov
dec
adc
mov
xor
add
lcall
mov
dec
adc
push
mov
xor
ss
dec
add
push
cltd
sbbl
mov
or
lea
xor
xor
dec
add
add
dec
and
and
xor
clc
sbb
cmpsl
scas
insl
inc
cmp
push
testl
mov
push
vmovntps
inc
enter
dec
sarb
dec
push
rorb
popa
push
sub
dec
cmp
push
push
mov
das
dec
iret
in
dec
ficomps
or
xor
dec
or
sbb
or
imul
sub
add
sti
or
push
fsubrp
inc
dec
pop
cltd
out
mov
dec
out
inc
inc
lret
or
sub
into
cmp
xor
sub
jmp
sub
sar
dec
dec
inc
sub
sub
sub
out
jecxz
sub
lret
hlt
mov
bswap
xor
pop
cltd
lret
rcll
sub
lret
cmp
sub
dec
sbb
into
dec
xlat
add
push
inc
pop
mov
adc
lods
sub
stos
mov
jbe
fsts
xor
aad
push
adc
int
dec
inc
pop
cltd
int
das
inc
loop
out
mov
int3
pop
inc
lret
adc
push
push
aad
add
fistps
lds
sbb
pop
xchg
ret
mov
sub
mov
dec
pop
or
jbe
mov
sbb
dec
cmp
int3
dec
jns
rolb
push
sub
inc
jle
int3
xchg
mov
mov
shrb
push
xchg
sbb
lds
popf
dec
loope
int
inc
cmp
aad
sbb
lds
fistpl
pusha
fsubrl
dec
push
dec
push
mov
pop
pop
dec
sarl
pop
ror
jns
pop
inc
pop
dec
daa
fcmovne
or
sbb
rorb
fmul
fadds
xor
sub
shlb
sub
pop
inc
and
rcr
adc
sub
arpl
fsubrs
rclb
dec
ja
or
cmp
push
lret
dec
mov
or
dec
mov
or
das
lret
dec
loopne
in
rcr
dec
fcoms
pop
cs
loopne
xlat
pop
jecxz
push
mov
dec
pop
pop
and
rcrl
leave
scas
add
in
lret
lret
sub
leave
or
sub
lret
lds
int3
fwait
inc
mov
pop
pop
cs
push
fisubrl
dec
lret
into
sub
xchg
dec
mov
lds
dec
daa
ret
pop
jl
mov
rol
in
rorl
dec
and
popa
sub
inc
dec
jns
inc
lret
mov
into
pop
gs
cmp
adc
lret
and
into
push
xor
iret
lret
sub
adc
add
pop
dec
daa
dec
or
dec
jns
pop
jge
daa
int
adc
sub
pop
imul
sub
pop
imul
sub
pop
imul
sub
mov
push
dec
mov
xor
mov
ror
pop
inc
shll
mov
sub
out
popa
enter
leave
pop
addr16
dec
dec
inc
pop
push
cs
sbb
out
popa
aad
cmc
decb
sub
das
in
push
dec
movsl
push
lret
cmp
sbb
pop
lret
and
mov
leave
mov
dec
lret
dec
push
sbb
pop
sbb
leave
lret
clc
dec
aad
lret
fmul
cmp
mov
cwtl
lret
pop
js
pop
insl
pop
int3
push
fldenv
shrl
sub
lret
lds
mov
ret
mov
bswap
fwait
dec
popa
push
sub
lret
push
fwait
into
popa
push
sub
lret
fsubr
xor
inc
push
cwtl
add
inc
inc
fcmovbe
and
and
add
in
fmull
cwtl
loope
dec
insl
lea
cmp
sbb
rcr
mov
neg
sub
pop
aas
lret
faddl
sbb
cmp
inc
lret
sbb
into
cmp
sub
into
rol
pushf
mov
pop
es
jns
inc
pop
dec
adc
add
aad
dec
flds
and
leave
and
and
lret
popa
dec
lods
es
pop
loope
insb
cmp
xor
rol
cltd
in
dec
cmp
aas
in
push
enter
dec
lret
pop
fsubl
dec
or
mov
mov
push
or
fcmovnu
xlat
dec
pushf
push
iret
push
in
dec
fcomps
sbb
jns
leave
sub
dec
cs
push
push
push
shrl
int
push
rcl
dec
cmp
insb
cmp
aam
orl
xchg
cltd
orl
push
lret
sub
rcll
adc
dec
and
dec
push
inc
lret
test
dec
cmp
rol
fildll
enter
lret
outsb
mov
shll
or
inc
inc
dec
insb
fcmovne
adc
mov
and
lret
std
lret
lret
insl
lds
pop
cmp
insb
push
cmp
mov
cmp
push
mov
dec
clc
sub
lret
and
xor
push
lret
pop
pop
push
pop
push
into
fwait
dec
lock
sub
lret
and
pop
inc
in
cmp
cmpsb
mov
in
rcrb
pop
daa
ret
push
test
pop
or
lahf
lret
dec
insb
jg
push
in
pop
push
cli
cwtl
lret
sub
lret
pop
jp
stc
fstps
dec
loope
sub
rcrl
dec
xlat
dec
pop
mov
add
pop
mov
push
dec
inc
in
pop
rcrb
nop
aad
pop
jo
inc
pop
ret
sub
jecxz
fucomip
ret
lret
dec
cmp
pop
inc
and
mov
dec
mov
lret
loope
mov
leave
mov
mov
cmp
xlat
sbb
push
lret
loope
pop
shlb
fiaddl
into
sub
lret
sarl
lret
loope
pop
fadd
dec
leave
push
dec
fisttpll
cmp
std
lret
pop
dec
pop
fisttpll
loop
int3
fcmovu
lds
std
iret
inc
sub
pop
sub
adc
pop
pop
and
mov
cmc
rorb
rcrl
loope
adc
into
rcr
int
lret
pop
lret
loope
pop
fsubs
pop
mov
inc
pop
in
psrld
lret
add
inc
fmul
fiadds
pop
mov
mov
lret
roll
jl
fiadds
lret
and
inc
sbb
pop
loope
into
or
mov
or
nop
dec
sbb
stos
pop
and
pop
push
and
mov
push
mov
lret
loope
pop
pop
and
sub
pop
mov
pop
stos
pop
jne
push
fimull
cwtl
sbb
lret
rorl
pop
in
lret
or
dec
pop
inc
fmul
loope
sbb
lds
test
ret
sub
ret
addr16
inc
pop
sub
ror
inc
sub
dec
ds
into
call
jge
aaa
cltd
add
fimull
dec
lret
int
mov
loop
int3
lret
arpl
in
lret
inc
mov
into
push
lret
and
call
lret
jmp
outsl
fmulp
add
lret
dec
inc
pop
sub
lret
aad
popa
pop
dec
push
xor
inc
cmp
into
enter
ror
cmp
add
aad
out
daa
rorb
in
sbb
pop
sub
lret
iret
lret
sbb
inc
pop
push
shrb
flds
dec
dec
xor
sbb
add
pop
pop
xor
jecxz
inc
lds
dec
cmc
jns
pop
shll
xchg
dec
pop
mov
lret
add
lds
adc
add
xchg
daa
inc
or
test
inc
pop
pop
daa
inc
or
inc
and
cltd
add
adc
into
pop
dec
and
add
sub
inc
dec
mov
dec
mov
dec
lret
loope
pop
dec
and
mov
dec
aam
push
ljmp
xchg
lret
sbb
lret
push
mov
jb
mov
push
adc
adcl
xlat
rcll
xchg
xor
vdivpd
adc
and
push
pop
mov
fldenv
push
adc
or
push
jns
pop
sbb
sub
inc
lds
repnz
sub
repnz
lds
daa
ret
mov
repnz
dec
rcrb
push
into
pop
into
cwtl
and
dec
sbb
daa
xchg
push
push
into
and
or
call
push
fcoms
lret
push
mov
xchg
pop
lret
cs
in
inc
push
enter
fisttpl
loope
push
leave
adc
dec
popa
or
jns
xlat
shll
dec
push
adc
adc
lret
fs
sub
inc
lret
rcll
push
add
sub
sarb
pop
xor
mov
pop
fisubrs
mov
in
fistps
push
daa
fmull
stc
ret
cmovge
xlat
push
sub
lds
stos
sub
into
pop
xchg
adc
lret
inc
push
dec
mov
push
daa
int3
or
dec
jns
ficompl
pop
dec
daa
lret
dec
rcr
dec
dec
jns
fistpl
pop
dec
daa
enter
rcr
dec
dec
jns
fdivrs
inc
or
lret
push
dec
dec
sbb
pop
xlat
and
sub
dec
lret
adc
pop
dec
daa
jns
sarb
pop
das
lret
adc
push
loope
lret
fnstenv
int
push
add
push
lret
rorl
mov
mov
into
in
lds
lds
sub
mov
dec
sub
dec
lret
jb
les
in
ret
sti
repnz
lret
jb
dec
in
mov
es
jns
lret
lret
jb
pop
shrl
push
sbb
inc
inc
push
lret
sub
repnz
pusha
lret
lea
shll
lret
std
lret
jmp
into
rcr
loope
xor
sbb
pop
movsl
or
inc
lret
in
into
lret
push
loope
iret
and
in
cltd
add
pop
dec
daa
int
mov
dec
xlat
bswap
cs
dec
lret
lret
mov
ljmp
lods
lret
dec
enter
and
test
push
push
es
add
xor
shrl
movl
test
or
or
xchg
pop
sub
and
sub
dec
dec
lgdtl
in
shll
add
rcl
das
leave
pop
dec
mov
dec
pop
sbb
pop
sbb
and
sub
push
jns
pop
sbb
pop
mov
inc
or
dec
roll
jns
inc
sbb
pop
mov
inc
or
xor
inc
sbb
inc
sbb
dec
sbb
inc
and
sub
xchg
leave
rorl
lds
dec
sbb
sbb
sub
dec
orb
fcmovne
in
push
dec
pop
mov
push
lret
jecxz
push
sbb
lret
mov
dec
dec
aad
inc
dec
daa
rorl
insb
lret
cmp
pop
sbb
rorb
xor
xor
testl
sub
xor
xor
xor
lds
sarb
mov
dec
push
shll
xor
inc
sub
fmulp
loope
pop
fmulp
fistpll
fmull
roll
pop
lret
lret
and
adc
in
xor
sbb
and
or
add
je
pop
add
addr16
mov
dec
fildll
sub
inc
push
dec
and
inc
into
ja
inc
or
push
in
lret
stos
jne
sub
sbb
daa
dec
or
mov
xchg
or
jl
sub
push
or
push
imul
mov
push
lret
lret
adc
lret
add
jmp
mov
cltd
inc
dec
dec
cmp
push
pop
lret
dec
mov
fidivs
xchg
mov
fcom
fimull
lret
fsts
fcmovne
adc
pushf
push
mov
fiaddl
jae
mov
lcall
ds
sbb
sub
les
mov
pop
or
and
call
int3
fistpl
lret
aad
int3
test
add
sub
inc
int3
mov
fwait
push
int
jnp
sub
lret
lret
mov
popf
push
dec
and
dec
mov
xor
inc
adc
lret
in
push
lret
mov
and
fcmovne
push
pop
push
ds
inc
dec
push
fnstcw
rcrb
dec
test
lock
sub
dec
pop
jge
pop
cmp
fsubrl
pop
into
dec
mov
push
pop
pop
lret
loope
pop
pop
aad
into
inc
cwtl
loope
push
inc
and
sub
dec
pop
jl
inc
cmp
sbb
in
inc
into
lret
cld
inc
sbb
sub
dec
sbb
lds
into
les
popf
lret
orl
mov
fmul
arpl
sub
mov
sbb
xlat
stos
mov
stos
lret
stos
ror
pop
popf
daa
push
ret
mov
lret
pop
pushf
daa
fsubr
sub
jl
sub
rcll
popf
dec
pop
mov
cs
push
pop
pop
pop
inc
aad
into
rcr
sbbb
ret
rol
test
movsb
clc
pop
sub
dec
pop
movsb
pop
iret
cmp
test
int3
into
dec
fs
int
leave
and
mov
dec
int3
and
dec
push
or
aam
lret
adc
shll
fnstcw
ror
rolb
lret
test
mov
sbb
and
xor
push
lret
cs
jge
push
mov
flds
in
sbb
push
cmpsl
into
dec
inc
push
jnp
inc
std
lret
jl
rclb
fcmove
lock
fisttpl
rolb
in
inc
dec
lret
ja
popf
sub
cmp
pop
adc
popa
into
dec
mov
jne
test
sub
push
jmp
imul
dec
mov
jle
pop
sub
pop
pop
jmp
outsl
call
xlat
movb
push
cs
mov
leave
mov
leave
xchg
mov
dec
dec
fisttps
sub
push
fwait
in
aas
in
ret
das
inc
es
lcall
or
popa
shr
fmul
stos
and
filds
scas
add
or
rorb
xor
dec
or
cs
daa
in
or
push
lahf
pop
fldcw
lret
std
or
push
jns
adcl
aas
push
or
ficompl
iret
or
push
cmp
dec
push
out
jle
clc
sbb
cld
pop
lahf
dec
or
push
xchg
sahf
pop
int
add
jge
push
sub
cs
dec
test
and
xchg
inc
sub
mov
push
sahf
inc
pop
and
adc
dec
pop
pop
push
loope
fs
lret
inc
out
pop
stc
movsl
lds
je
fwait
add
dec
jnp
addl
dec
dec
jg
aas
int3
or
movsl
sahf
dec
sub
push
push
lods
sub
aam
cmovae
and
xchg
cmpsb
dec
inc
dec
cmp
ss
jnp
lods
mov
pop
pop
es
out
lret
add
call
push
aas
jge
pop
pop
inc
loope
stos
loopne
fistpl
pop
pop
cmp
popa
dec
in
sti
mov
icebp
std
fucomp
mov
push
xchg
test
dec
add
fucomi
movsb
sub
and
roll
cmp
aaa
or
enter
inc
arpl
pop
dec
ret
sub
lds
xchg
xchg
fcomp
and
stos
rcr
or
es
lret
inc
gs
pop
dec
dec
inc
and
cmovs
push
dec
or
and
movsb
and
dec
jmp
sub
sti
inc
push
pop
cmpsl
movntq
jp
or
pop
movsl
inc
int3
dec
inc
sbb
mov
ljmp
push
int3
and
je
push
subps
lret
jnp
lods
mov
xchg
sub
pusha
dec
fisubl
and
sti
pop
adc
or
xchg
mov
shl
dec
push
add
pop
add
rcrl
enter
and
int
cmp
dec
xchg
dec
pop
sub
sub
movsl
sarl
pop
and
cmp
in
stc
mov
pop
jnp
jge
icebp
inc
push
pop
dec
insb
sub
or
add
mov
xor
or
pop
or
aaa
push
or
pop
sbb
enter
dec
cwtl
roll
pop
cmp
sub
pop
push
cmp
adc
pop
lahf
or
dec
int
sub
sub
mov
push
sqrtps
sub
fimull
jnp
jns
inc
cmp
fs
adcb
jle
shrb
sub
ljmp
fisubrl
movsl
jmp
mov
test
inc
sub
inc
popf
dec
xor
or
out
jb
add
mov
inc
sar
aad
fldcw
sub
popf
ret
push
test
cltd
mov
movsl
les
dec
aad
scas
test
or
pop
and
rorb
dec
out
ror
dec
and
push
into
cli
dec
jns
lods
call
stos
arpl
xchg
int
inc
cld
cwtl
cltd
int
pop
sub
pop
fidivrs
dec
push
scas
xchg
iret
pop
outsl
jns
jb
inc
fdivr
jg
int3
mov
mov
insl
xchg
fs
cmp
fwait
adc
bound
cmp
lods
pop
add
insb
js
mov
comiss
or
or
or
iret
push
or
das
ljmp
xor
or
js
pop
fisttps
nop
push
sbb
push
aaa
xchg
mov
push
enter
loopne
call
and
lds
mov
jmp
pavgw
lret
in
or
mov
jle
fidivrl
shll
push
and
shrl
jg
dec
fs
fucomip
push
dec
repz
sbb
cmc
inc
sbb
ret
push
movsb
shll
inc
les
subb
pop
rep
inc
jb
jnp
fcmovne
lret
add
and
dec
mov
je
add
cmpsl
lds
xchg
in
inc
mov
fs
inc
cwtl
test
pop
les
popf
test
rclb
pop
aam
inc
lods
js
cmp
mov
sahf
pusha
push
jle
and
sub
or
lods
jmp
cmovbe
push
adc
xor
leave
and
int
loope
dec
jne
sbb
out
inc
jp
pusha
mov
mov
dec
mov
clc
lret
jns
mov
call
jne
lret
pop
push
fiadds
mov
adc
push
and
and
dec
cmp
into
into
dec
mov
inc
jp
lods
aas
and
dec
mov
mov
jecxz
dec
mov
std
push
in
push
pop
inc
and
dec
xchg
or
rorl
pop
sub
mov
or
mov
cld
add
fnstcw
rorl
mov
or
push
dec
movsl
inc
inc
rolb
pop
sub
inc
or
loope
pusha
push
sahf
add
mov
and
or
sub
mov
pop
std
jnp
push
push
aam
loopne
aam
push
in
insl
ljmp
lret
push
push
call
inc
adcl
sub
dec
js
push
fs
sbb
call
cmp
aad
inc
fadds
sbb
lahf
int
insb
call
dec
and
enter
aam
test
pop
mov
sub
leave
push
dec
mov
jmp
jnp
dec
sbb
lea
sub
and
subl
cmpsl
ja
lods
out
jne
cmp
cmp
sub
in
int
into
inc
cmp
mov
pop
dec
sub
dec
adc
dec
or
fcmovnu
or
and
gs
pop
subps
inc
in
test
ljmp
imulb
push
loopne
push
pop
pusha
fdivr
dec
lret
movsl
roll
popf
rcrl
and
mov
dec
jbe
jne
sub
es
or
lret
jmp
cmp
fldenv
sub
dec
adc
movsl
xchg
jnp
out
sub
jecxz
sub
inc
lock
mull
xlat
out
push
or
jns
adc
fld
psubsb
out
pop
ljmp
call
pop
outsb
int3
pop
roll
add
and
dec
dec
int3
dec
insl
sbb
dec
inc
int
or
inc
pop
es
pop
push
inc
pusha
gs
cmp
sub
jecxz
add
rcrl
pop
pop
jae
push
mov
lcall
out
dec
rorb
ljmp
mov
inc
inc
fisubrs
mov
pop
cmp
inc
dec
lds
mov
push
pop
mov
or
inc
and
xchg
addr16
inc
or
shrl
imul
loope
rcrl
inc
jecxz
and
pop
loopne
push
cmp
clc
int
xor
cmp
inc
gs
push
mov
loopne
lret
xchg
or
sbb
loop
inc
mov
or
shrb
dec
inc
mov
mov
int
dec
lret
dec
fcmovnb
cs
and
ret
dec
dec
fmul
lds
dec
jnp
add
xor
dec
inc
adc
and
int
xlat
cmp
sub
xchg
leave
cmp
pop
and
xor
dec
in
push
dec
nop
dec
rorb
or
nop
rcrb
inc
dec
sub
inc
pushl
sub
cli
inc
or
pop
mov
mov
sub
mov
add
lds
ret
push
fucomip
int
or
fcoml
jg
dec
dec
jo
imul
lods
in
imul
loope
arpl
pop
add
outsl
inc
out
pop
mov
pop
pop
inc
mov
subps
cmp
jns
dec
rorb
inc
lret
inc
xor
or
jo
adc
test
fs
xor
inc
daa
add
push
test
mov
fldenv
lahf
imul
aam
push
pop
ret
and
leave
call
mov
arpl
ftst
data16
sub
push
jmp
pop
mov
jo
in
ss
fstp
jnp
inc
call
sbb
bsr
push
jl
pop
lods
jnp
dec
xor
call
dec
lcall
aas
add
dec
adc
mov
dec
and
pop
xor
subl
jmp
stos
and
leave
loopne
or
loope
mov
inc
and
xor
aam
decb
das
inc
jno
and
push
add
xor
aas
pop
roll
xchg
xlat
sti
je
je
pop
das
loope
cmc
mov
sahf
stos
cld
iret
enter
push
imul
ret
mov
jne
int
and
repnz
inc
aas
pusha
mov
rcr
das
or
outsb
push
dec
loop
lods
inc
pop
dec
dec
pusha
out
xor
inc
int
xchg
add
sub
aaa
dec
inc
cltd
mov
mov
orb
push
mov
pop
pusha
gs
xchg
mov
cmp
insl
or
xchg
dec
pop
inc
xchg
shrl
subb
daa
or
addb
lods
out
neg
add
cwtl
cmp
bound
ficoml
daa
pop
cmp
pusha
nop
and
test
add
and
mov
int
xorl
data16
mov
sub
cmpl
push
test
jg
mov
adc
push
das
pop
sub
dec
sub
outsl
mov
or
into
sub
inc
fildl
pop
pop
pop
cmp
pusha
sub
popf
push
in
dec
cs
or
and
xchg
std
mov
xor
test
pop
test
pop
mov
test
push
int
les
bound
push
add
xchg
mov
inc
sub
pusha
loopne
xor
jecxz
add
inc
add
and
ds
sar
loope
test
xchg
andb
es
sbb
jo
sbb
inc
dec
ret
dec
pop
or
fs
addr16
das
in
fildll
std
lock
push
cmp
mov
fstpl
inc
add
sar
add
cmp
je
and
jne
shll
fld
lahf
cmovne
in
idivb
insl
pop
in
lret
iret
dec
fildl
lret
fwait
enter
mov
lret
cli
add
mov
xchg
les
es
add
pop
dec
in
movsb
push
jnp
negb
sti
sub
xor
sub
movsb
adc
int3
dec
mov
es
mov
dec
and
shll
dec
jecxz
hlt
into
dec
fcmovnu
in
xchg
jns
in
adc
jmp
and
fistpl
add
cmp
aas
dec
test
movb
in
dec
andl
mov
sbb
ret
rorb
rorl
sbb
into
iret
iret
inc
stc
ret
cmpsl
test
sahf
sub
ret
inc
fisttpl
mov
ret
add
mov
dec
pop
sbb
dec
dec
dec
dec
dec
sbb
mov
and
jo
fidivrl
dec
fnsave
xor
sub
imul
pop
dec
aaa
daa
pusha
mov
xchg
and
mov
cmpsb
mov
jns
dec
iret
in
push
mov
lods
dec
lock
call
daa
jecxz
mov
test
inc
test
lret
popa
push
fsubs
lea
or
add
or
les
mov
stos
dec
adc
lret
add
outsl
or
or
mov
inc
and
aaa
xor
and
cs
dec
jge
xchg
cmp
push
scas
roll
inc
pusha
xchg
lea
nop
repnz
iret
inc
mull
addl
imul
das
ficoms
inc
je
inc
cltd
imul
int3
lds
cwtl
push
add
and
or
inc
inc
int
js
movsb
lods
push
and
orl
scas
sub
leave
inc
bound
movsb
int
inc
mov
add
inc
orl
cs
mov
or
dec
xor
ret
mov
out
add
int3
lret
test
in
dec
sar
insb
adc
lods
out
lods
popa
insl
or
shll
and
cld
mov
in
mov
add
loop
pop
mov
push
fdivl
into
adc
cmp
in
addr16
mov
push
mov
sub
sub
lahf
shlb
out
push
and
fisttps
inc
jg
loopne
add
movsl
in
mov
push
inc
or
adc
adc
lods
mov
sbb
je
mov
jge
add
rorb
in
push
data16
mov
rolb
mov
stos
movsb
fs
inc
es
imul
sub
add
lds
outsb
test
scas
cmc
pop
push
and
in
inc
mov
test
daa
pop
and
in
push
dec
mov
clc
into
xchg
loopne
iret
addb
mov
lahf
lret
gs
dec
dec
fimull
addr16
leave
sbb
mov
into
mov
dec
addl
add
out
cmp
incl
fidivs
es
test
in
les
dec
push
inc
call
dec
dec
aas
xlat
movsl
lcall
jnp
test
push
mov
cmp
sub
out
add
cmpsb
dec
or
leave
mov
rcll
test
dec
dec
dec
jmp
outsl
and
jne
sub
jge
inc
lods
jmp
inc
jmp
into
push
jb
iret
test
fiadds
dec
cmpsl
pinsrw
ja
xchg
mov
ficomps
push
fisubs
pop
ror
gs
dec
faddl
push
inc
cmp
mov
mov
or
cmp
or
std
pop
add
clc
fstps
cmp
xchg
jge
loopne
or
dec
adc
inc
xor
ret
add
and
popl
std
cmpsl
mov
ds
fwait
cld
mov
mov
push
aas
mov
addr16
ret
out
inc
fcoml
das
mov
and
dec
and
subl
test
pop
in
mov
imul
mov
sub
push
inc
mov
or
dec
lds
jmp
or
inc
decl
sub
inc
or
imul
sub
stc
xlat
pop
or
adc
dec
push
shrb
fistpl
aam
add
dec
popa
jle
shrb
fistpl
inc
jecxz
inc
sbb
or
pop
cmp
push
in
dec
aaa
pop
jle
fstpl
mov
rcll
push
out
inc
dec
dec
push
dec
inc
jle
dec
popa
push
pop
shr
lret
lret
in
push
push
inc
adcl
rcrl
dec
ss
pop
pop
pop
mov
push
rcll
jecxz
inc
pop
push
outsl
pop
dec
xor
test
inc
mov
shlb
push
shrl
sbb
inc
sub
inc
xor
pop
fisttpll
lret
push
lret
adc
xchg
mov
cmp
dec
mov
daa
inc
loop
or
jge
aad
mov
inc
pop
shll
push
jge
movsl
push
fs
in
push
push
rorl
dec
mov
jo
flds
es
inc
cli
lret
mov
inc
sub
push
shrb
jp
lea
sub
pop
pop
dec
shrl
push
cmp
adc
dec
dec
rcll
test
mov
or
push
pop
cmp
push
sbb
xchg
daa
pop
and
stos
push
dec
fisttps
rcll
lods
mov
add
pop
shrb
jp
sub
push
dec
lods
jns
inc
daa
movl
dec
or
pop
cmp
inc
addb
popf
pop
roll
sub
lret
sbb
dec
dec
dec
xchg
pushf
sub
or
inc
lret
movsl
pop
out
inc
sub
push
shrb
fistpl
aam
mov
rclb
jecxz
inc
aas
dec
jno
xor
rolb
jecxz
inc
pop
inc
stos
aad
cmpsb
or
pop
cmp
push
out
dec
aaa
push
jno
inc
adc
sarl
dec
xor
fmull
push
pop
shrl
fisttpl
aam
mov
rcrl
inc
fldt
leave
inc
ds
das
test
pop
sub
push
loop
inc
ret
dec
mov
inc
in
dec
xor
xor
shl
lret
sub
inc
xor
push
pop
push
mov
fcmovne
adc
xchg
cmp
push
ror
cmp
dec
adc
stos
jmp
inc
fstpt
inc
lret
rorl
std
dec
adc
pop
movsb
inc
or
pop
cmp
inc
addb
std
push
and
inc
inc
rcll
inc
inc
aas
dec
lock
dec
cmp
pop
pop
daa
inc
aaa
insb
push
xor
dec
adc
rcrb
jge
lds
or
sbb
mov
call
inc
add
inc
ror
cmp
inc
ror
inc
dec
dec
sar
dec
daa
pop
loop
inc
rcrl
dec
cmp
push
mov
sbb
test
inc
mov
jecxz
inc
dec
mov
dec
shl
lret
mov
mov
and
xor
dec
in
inc
inc
shrb
mov
push
lds
add
dec
adc
ret
jecxz
lret
inc
lds
pop
in
push
dec
and
rorl
ficomps
xchg
sub
bswap
push
movsb
dec
rcll
sub
lret
sti
push
add
or
inc
fisttps
rcll
dec
das
jp
dec
dec
jo
in
dec
jo
ror
lret
adc
xchg
cmp
pop
ror
jge
lds
in
push
push
ror
lret
jo
fwait
jo
pop
push
arpl
push
xor
lret
pop
jp
cmp
dec
dec
pop
push
imulb
pop
lret
ficoml
pop
push
rolb
sub
lret
fidivrs
test
dec
xor
or
inc
lret
gs
xor
sti
xor
or
pop
cmp
inc
addb
xchg
popa
push
push
shrl
dec
and
pop
pop
dec
popa
adc
sub
lret
jp
lods
popa
dec
movsl
inc
movsb
iret
or
inc
lahf
lret
cmp
inc
ror
jge
lds
in
pop
push
into
lret
push
lret
xor
push
pop
push
adc
push
repz
shl
lret
push
cmp
dec
repz
inc
shrl
movl
lret
dec
jge
lds
in
push
push
rorl
les
add
inc
rcll
test
fcmovne
js
flds
mov
pop
lret
inc
into
lret
pop
lret
adc
inc
int
js
ret
inc
call
sub
ljmp
dec
inc
dec
mov
dec
inc
mov
mov
leave
inc
pop
pop
dec
popa
push
push
dec
or
dec
dec
mov
enter
push
pop
test
push
or
outsb
leave
inc
adc
adc
inc
outsl
pop
inc
xchg
aaa
aam
out
dec
or
xchg
mov
inc
in
cwtl
pop
in
pop
dec
and
pop
cwtl
shr
pushf
push
add
pop
mov
dec
or
push
ret
inc
dec
dec
loope
adc
dec
sub
outsl
cmp
dec
inc
and
or
dec
inc
rcll
jmp
add
push
mov
inc
inc
or
les
or
inc
adc
push
inc
shll
cmp
pusha
pop
in
inc
dec
and
dec
mov
pop
ljmp
repz
xor
or
inc
push
push
xchg
in
dec
loope
mov
inc
loope
inc
shl
jecxz
in
shl
roll
rorb
sar
cmp
sbb
inc
add
push
dec
and
push
push
es
ljmp
aad
into
dec
adcl
or
cmp
ficomps
adc
pop
mov
inc
pop
sarl
inc
mov
aas
pop
mov
fs
in
pop
pop
rcll
dec
lds
dec
or
adc
sti
push
mov
int3
inc
inc
inc
repnz
push
ljmp
das
adc
inc
faddl
inc
inc
aas
dec
mov
in
in
inc
fildl
adc
inc
lds
jmp
pop
fst
cwtl
push
inc
adc
push
in
dec
dec
and
dec
dec
push
aad
pop
push
fwait
inc
addl
pop
ljmp
cli
dec
pop
or
inc
and
lds
les
rorb
imul
rorb
out
pop
lcall
push
add
in
dec
dec
pop
pop
xor
push
pop
es
add
popa
xor
les
adc
dec
fmull
sbb
dec
push
xchg
mov
mov
inc
lret
inc
ljmp
popf
dec
lds
cmp
in
sarl
sub
pop
inc
and
dec
sub
push
ljmp
or
inc
jmp
in
inc
mov
push
dec
sub
dec
jecxz
dec
sub
dec
fildl
dec
push
mov
jb
inc
inc
in
push
flds
inc
pop
aaa
call
fstps
es
jmp
fmull
push
mov
or
push
cmp
pusha
push
inc
adcl
push
dec
xchg
in
dec
and
dec
int
jno
cmp
inc
mov
dec
popf
dec
mov
push
das
dec
pop
adc
arpl
push
ret
lahf
mov
fs
sub
pop
je
xor
pop
dec
pop
pushf
push
inc
pop
cmp
xor
repnz
fwait
pop
sbbl
push
cs
rolb
dec
xchg
pop
into
mov
pop
pop
push
cmp
into
push
inc
dec
pop
dec
add
xor
adc
inc
rolb
adc
inc
pop
pop
outsl
cmp
adc
ds
pop
adc
dec
int
dec
mov
int3
inc
push
mov
dec
xor
push
sbb
xchg
mov
aas
pop
loope
les
orb
dec
lcall
fadds
mov
adc
movsl
push
adc
pop
aaa
pop
loopne
dec
push
aad
add
push
inc
xchg
jecxz
push
roll
pop
rorl
rcl
pop
ss
sbb
xchg
sub
in
or
lret
push
push
dec
xorl
cmp
push
pop
mov
cmove
sub
push
cltd
dec
jecxz
dec
or
aaa
dec
dec
aad
inc
sub
dec
lds
dec
dec
mov
sub
sub
inc
jns
inc
ficomps
jne
pop
outsl
cmp
push
xchg
int
mov
cmovs
push
adc
inc
fcoml
jecxz
dec
or
inc
dec
sbb
dec
sti
pop
mov
push
jno
clc
aas
inc
dec
rorb
dec
popa
inc
in
inc
fildl
push
inc
cmp
inc
in
inc
lcall
mov
ljmp
push
test
push
pop
fistl
adc
and
sub
clc
imul
pushf
imul
pop
dec
movsb
lods
test
rorl
cwtl
inc
in
push
dec
and
mov
adc
dec
faddl
inc
fsubrp
xor
pop
ret
aaa
in
dec
sbb
xchg
popa
pop
sub
dec
inc
pop
pop
outsl
cmp
push
dec
and
adc
aad
into
push
mov
ret
dec
daa
adc
dec
pop
inc
testb
push
sbb
inc
xchg
popa
inc
in
inc
cmp
and
sbb
push
pop
aaa
xchg
pushf
sub
cmp
or
cmp
sbbb
xchg
int
inc
mov
mov
clc
rolb
cmp
or
cmp
or
int
inc
pop
cmp
fidivrl
imul
int
inc
pop
cmp
or
cmp
or
cmp
enter
cmp
stos
dec
pop
inc
xor
inc
aaa
mov
pop
dec
and
dec
int
push
ljmp
in
fwait
shl
fst
in
shl
push
shl
nop
shl
rcl
in
shl
push
shll
aaa
dec
or
dec
mov
dec
shlb
add
dec
inc
aaa
dec
xchg
dec
fnstenv
dec
sbb
dec
pop
aaa
dec
pushf
aaa
dec
fidivs
dec
adc
dec
push
aaa
dec
xchg
aaa
dec
xlat
aaa
dec
or
mov
dec
int3
aaa
dec
push
aaa
mov
roll
or
sbb
dec
and
pop
sbb
inc
push
decl
and
push
movsb
and
inc
pop
pop
jge
jne
mov
lds
leave
add
xor
leave
loope
mov
push
add
out
add
int3
dec
push
mov
push
and
dec
adc
mov
cmovs
push
adc
ljmp
mov
dec
or
dec
gs
clc
mov
xchg
xlat
int3
dec
push
mov
mov
xorl
int
pusha
inc
jmp
dec
jmp
mov
xchg
insl
xor
pop
xor
xor
imul
pop
push
imul
jno
cmp
inc
into
and
mov
inc
fdivrl
mov
dec
xor
dec
xor
and
sub
inc
rorl
ret
inc
or
cmp
inc
cmpsb
cmp
mov
mov
jmp
std
or
int
inc
stos
cmp
and
mov
push
es
inc
mov
inc
push
push
mov
xchg
int
jno
cmp
inc
int3
mov
mov
loop
test
or
dec
lds
ret
inc
js
sub
sub
sub
imul
arpl
inc
sbb
xchg
arpl
in
push
mov
dec
add
lret
adc
add
dec
inc
in
shl
loope
in
rcrl
bound
or
cmp
clc
int
inc
fwait
cmp
into
cmp
adcl
push
rorb
mov
inc
or
pop
mov
mov
rclb
dec
popa
mov
sub
iret
adc
lds
jecxz
dec
in
mull
inc
rorb
inc
inc
inc
ds
mov
in
or
dec
lds
or
pop
aaa
les
in
sub
inc
lcall
movsl
push
lods
dec
pop
outsl
pop
sub
outsl
dec
dec
pop
dec
outsl
cmp
or
inc
fiadds
enter
pop
mov
int
fs
pop
cmp
ret
icebp
popf
dec
jecxz
dec
or
cwtl
popa
je
push
pop
je
mov
insl
dec
loop
dec
mov
inc
mov
int
fs
imul
add
mov
int
xor
or
call
aaa
dec
lock
dec
repz
dec
lahf
fsubrl
inc
lds
pop
inc
adc
in
lea
mov
roll
test
negb
mov
fadds
incb
lret
mov
jne
in
inc
inc
inc
ret
inc
inc
fsub
jecxz
in
sbbb
inc
movsl
pop
int3
dec
dec
xorl
inc
dec
pop
push
ds
push
lret
popa
xchg
in
pop
enter
aas
dec
mov
or
push
xchg
lods
inc
mov
xchg
mov
cmp
rorb
inc
pop
dec
push
rolb
pop
dec
push
inc
xchg
loope
push
inc
xchg
loope
push
pop
xchg
int
addb
push
decl
push
sub
pop
mov
inc
mov
inc
sub
inc
popf
inc
inc
inc
sti
inc
mov
push
jno
pop
mov
cmovp
dec
pop
rorb
dec
dec
aad
inc
or
dec
aad
dec
sub
inc
cmp
inc
loope
into
push
adcb
mulb
inc
adcl
dec
in
inc
es
stos
nop
int
fs
dec
popa
in
test
pop
push
fadds
mov
adc
inc
subl
dec
mul
dec
rorl
testb
jns
inc
push
pop
addb
ficomps
aad
js
pop
leave
cmp
push
and
xor
insl
push
inc
dec
sahf
pop
orl
mov
inc
ljmp
or
push
call
into
add
mov
lret
pop
pop
inc
cmp
adc
adc
push
dec
lahf
lcall
inc
testl
inc
jecxz
pop
push
pop
xchg
int3
dec
and
loop
into
ret
in
or
adc
pop
inc
loope
xor
jns
inc
ficomps
cmp
push
jns
adcl
push
int
mov
pop
add
add
jbe
call
inc
fadds
inc
inc
pop
dec
mov
pop
test
lahf
fldl
pop
and
fiadds
in
mov
or
loop
dec
sbb
in
rcrl
push
lcall
pop
inc
jp,pt
push
rcll
adc
push
adc
mov
fdivs
adc
insl
adc
scas
adc
jecxz
aas
push
loop
push
test
daa
pop
jno
pop
jno
pop
jno
pop
jno
pop
xchg
pop
sub
sub
sahf
int
inc
xor
int
rol
lods
jb
lea
adc
insl
inc
mov
dec
inc
inc
lds
xlat
inc
or
mov
clc
fldl
cmp
mov
add
or
inc
inc
das
cmp
add
pop
inc
sub
scas
dec
lcall
js
sub
sub
sub
sub
sub
sub
sub
jmp
in
shl
lods
shl
out
shl
and
in
shll
sub
das
js
sub
sub
sub
sub
sub
pop
or
dec
push
movsl
jno
pop
jno
pop
jo
test
pop
jno
clc
lret
pop
inc
pop
dec
fwait
dec
adcl
push
in
or
rorb
dec
mov
lret
sub
lahf
or
inc
outsl
cmp
repnz
es
add
push
dec
and
mov
gs
pop
push
mov
dec
adc
push
leave
mov
inc
mov
dec
cmp
pop
mov
pop
jns
adcl
pop
push
mov
std
dec
lcall
inc
es
push
pop
stos
int
fs
and
dec
int3
clc
inc
dec
jno
pop
jno
pop
jno
clc
aas
dec
jg
das
adc
push
adc
xchg
adc
leave
and
inc
push
inc
lods
fsub
dec
dec
or
dec
inc
mov
sub
mov
sub
mov
inc
mov
in
pop
mov
in
pop
mov
in
pop
mov
insb
fwait
dec
int3
pop
mov
andl
push
dec
movsl
push
out
dec
push
rcll
aad
inc
imul
dec
clc
imul
fwait
inc
add
inc
aad
ret
push
xchg
lods
les
inc
cmp
pop
cwtl
popa
pop
or
pop
cs
lret
ficoms
dec
push
aad
inc
leave
cmp
adc
dec
movsl
jne
dec
pop
cmp
pusha
push
sub
pop
dec
and
dec
inc
dec
dec
sbb
add
dec
mov
inc
inc
fwait
dec
sbbl
in
push
es
lret
fnsave
int3
inc
xchg
cltd
dec
popa
push
out
inc
ljmp
inc
adc
add
pop
xchg
jecxz
dec
into
dec
add
inc
fwait
dec
adcl
dec
or
inc
ret
pop
aaa
push
sub
dec
lcall
inc
or
pusha
pop
in
pop
dec
inc
push
les
pop
mov
in
inc
add
push
pop
je
cwtl
dec
addl
inc
inc
jo
or
dec
lcall
inc
fs
sub
pop
jne
pop
sub
iret
pop
and
mov
or
xchg
push
imul
imul
mov
dec
dec
or
mov
int3
dec
enter
dec
mov
add
jle
and
or
xor
dec
enter
pop
sub
mov
js
add
mov
aad
pop
dec
aad
pop
push
imul
test
dec
leave
arpl
aad
cmovb
dec
in
add
inc
in
dec
test
inc
sub
inc
test
adcb
adc
pop
rcrl
inc
pop
pop
fiadds
inc
inc
cmp
add
aas
arpl
mov
dec
dec
aaa
call
inc
mov
in
jno
adc
bound
mov
pop
mov
or
pop
push
leave
dec
pop
add
push
add
inc
pop
lret
or
pop
bound
or
push
dec
sub
inc
imul
push
dec
inc
fs
dec
dec
fs
pop
push
outsl
cmp
or
mov
sub
inc
movsl
dec
in
sub
inc
lds
in
pop
pop
pop
pop
pop
outsl
pop
push
pop
pop
outsl
cmp
push
dec
and
rorl
in
rcrl
inc
xchg
and
pop
dec
popf
dec
mov
dec
jo
jmp
dec
aad
inc
in
inc
cmp
stc
jmp
dec
orl
es
push
dec
xchg
add
push
push
xchg
jecxz
push
rorl
test
daa
sub
dec
sahf
jno
dec
fwait
dec
add
pop
inc
outsl
pop
inc
pop
pop
outsl
cmp
jmp
sbb
dec
pop
pop
pop
fwait
inc
adcl
fldpi
test
push
dec
aad
into
inc
mov
jne
in
dec
and
push
dec
cmp
inc
mov
inc
cwtl
rorl
cmp
sub
dec
inc
fcompl
pop
mov
pop
or
dec
push
dec
or
lret
mov
cmp
pop
and
push
ss
inc
rclb
lcall
pop
into
lret
cwtl
mov
std
pop
xlat
or
pop
ss
mov
dec
stos
dec
inc
aaa
call
jmp
out
push
cld
dec
inc
stos
test
dec
pop
stos
test
shrl
or
imul
test
dec
pop
lcall
push
lcall
or
pop
into
out
fcomps
aaa
mov
pop
jnp
pop
pop
jo
or
push
into
jmp
fcoms
aaa
mov
push
jo
fimuls
mov
js
sub
sub
imul
inc
jo
sub
sub
sub
sub
sub
sub
mov
pop
orl
dec
orl
push
dec
adc
dec
and
or
pop
dec
dec
enter
adc
and
push
inc
pop
dec
mov
aaa
in
dec
sbb
xchg
jecxz
inc
in
pop
pop
into
adcl
pop
fwait
dec
daa
dec
mov
cmp
push
pushf
pop
arpl
testl
xchg
dec
cmp
dec
addl
pop
inc
pop
push
outsl
cmp
inc
aad
orb
pop
mov
fcompl
inc
popa
pop
or
push
cmp
lret
or
xor
inc
leave
pop
push
outsl
pop
dec
addr16
pop
jno
clc
xlat
inc
jo
inc
js
sub
jmp
inc
jg
or
inc
cs
lret
popa
fisubrl
dec
fistpl
jo
jmp
dec
addl
pop
xlat
mov
decl
dec
fmull
cmp
jns
std
ljmp
ljmp
or
dec
fistpl
jo
mov
push
pop
enter
push
pop
xchg
popa
push
or
insl
push
cmp
cmpsl
stos
dec
mov
int3
dec
insl
add
testb
cmp
pop
dec
loop
int3
inc
inc
or
into
pop
add
inc
add
popf
dec
pop
pop
sahf
pop
rcl
xorl
mov
call
dec
subl
pop
inc
mov
push
jnp
sub
push
movsl
pop
cmove
sbb
push
adc
adc
push
lret
sub
leave
mov
dec
rorl
mov
or
inc
push
inc
addb
ficomps
aad
into
push
cwtl
add
leave
push
in
pop
push
subb
jno
pop
ret
fiadds
push
jmp
mov
pop
pop
pop
fiadds
es
call
lret
aad
in
adc
imul
pop
leave
lcall
pop
push
push
dec
rolb
pop
orl
aad
pop
mov
or
cs
mov
sub
pop
push
cwtl
aaa
cs
lcall
popa
push
in
push
cmp
lret
mov
add
inc
insb
pop
sub
imul
out
push
inc
out
inc
mov
movsl
sub
rorl
fildl
mov
lret
dec
imul
dec
mov
sub
enter
movsl
dec
sub
int3
pop
inc
popf
inc
inc
pop
cmp
out
sbb
lods
dec
or
mov
and
mov
pop
push
pop
out
push
xchg
push
out
push
sub
in
dec
push
pop
push
dec
xor
test
in
xor
jno
cmp
rcrl
in
dec
insb
pop
int
dec
mov
lret
daa
rorl
sbb
rorl
in
mov
dec
or
dec
mov
dec
pop
inc
mov
mov
push
call
clc
out
adc
dec
in
inc
lds
inc
in
dec
lods
repnz
sbb
inc
dec
pop
dec
xchg
popa
pop
sub
in
rcrb
pop
pop
outsl
cmp
imul
push
lret
shrl
orl
pop
cmp
lret
fcom
sub
repnz
pop
in
pop
dec
push
dec
pop
popa
test
push
mov
fsubrl
push
or
inc
mov
leave
leave
pop
fs
sub
inc
sbb
int
inc
es
add
cs
push
in
push
adc
add
and
jns
dec
fimuls
xchg
xchg
loope
push
pop
xchg
loope
push
pop
xchg
loope
push
push
xchg
loope
shrb
sub
jns
dec
ficomps
cmp
fidivrl
inc
ficomps
cmp
sarl
push
ficoms
cmp
aam
or
push
popa
sub
dec
or
push
js
cmp
xor
inc
aas
pop
or
ror
orb
pop
mov
ret
push
or
les
pop
imul
or
dec
in
ss
aam
jg
stos
dec
in
inc
sbb
lret
in
dec
inc
jbe
inc
push
test
fmull
nop
dec
in
in
inc
inc
data16
dec
pop
cs
push
push
sbb
pop
push
int3
mov
or
inc
popa
int3
pop
rcrl
ds
pop
ljmp
dec
xchg
mov
test
fdivrl
dec
aad
test
push
adc
adc
inc
dec
loop
cld
fwait
inc
and
push
pop
aad
loopne
push
daa
pop
loop
adc
es
ljmp
rorl
cs
mov
pop
lret
ljmp
shl
fs
sub
in
pop
cmp
in
push
es
or
fimull
fstpl
dec
in
insb
daa
pop
or
or
xchg
arpl
sub
inc
loope
pop
push
xchg
sub
in
dec
and
in
inc
jg
dec
xchg
add
push
inc
xchg
jecxz
pop
push
pop
cmp
into
pop
ret
imul
aas
orl
in
push
pop
es
push
jge
cmp
mov
push
dec
movsl
pop
into
push
dec
mov
dec
inc
mov
mov
pop
mov
jl
daa
push
ljmp
mov
mov
mov
mov
mov
int
fs
dec
aad
inc
ret
jmp
dec
adc
imul
pop
sub
test
inc
inc
ss
xor
dec
in
dec
loop
stc
popa
dec
std
dec
and
push
push
lret
adc
rcrb
dec
jns
inc
iret
mov
push
add
ret
pop
mov
push
outsl
pop
fsts
push
outsl
pop
pop
aaa
dec
scas
ljmp
push
es
ljmp
dec
pop
push
dec
enter
inc
xor
pop
int
xchg
in
pop
scas
push
push
scas
jns
dec
shr
leave
sub
sub
dec
lds
inc
cmp
in
pop
es
ret
mov
jns
push
or
push
lods
dec
outsl
xor
mov
ret
or
push
mov
popa
outsl
cmc
inc
add
dec
pop
outsl
dec
fcmovnu
push
scas
dec
sbb
pop
mov
push
mov
push
cs
push
rorb
popa
push
sub
pop
adc
leave
mov
inc
mov
cwtl
mov
rorl
mov
fwait
dec
mov
ret
dec
or
push
into
jno
lock
inc
add
gs
pop
data16
inc
pop
mov
cs
inc
aad
outsb
push
pop
ss
insl
push
mov
push
pop
push
jbe
push
es
jmp
inc
jo
dec
pop
pop
cmpl
lahf
loop
inc
xor
dec
shlb
insb
rolb
aaa
dec
push
aaa
dec
xchg
aaa
dec
leave
sbbl
xor
add
mov
push
push
cmp
enter
popf
lret
mov
or
sub
inc
or
push
push
iret
into
fucomp
inc
jno
pop
ret
cltd
push
mov
mov
in
mov
mov
in
mov
in
mov
mov
pop
aad
scas
adc
xor
shrb
les
cmovae
push
pop
pop
push
mov
inc
dec
pop
jne
into
in
shrl
inc
into
lock
mov
aas
inc
into
ljmp
dec
fmul
ret
pop
into
out
shrl
into
ret
mov
scas
mov
inc
int
jg
push
int3
jns
jno
clc
es
add
dec
xor
xor
pop
push
adc
push
jmp
inc
cs
push
rcll
cwtl
inc
sub
pop
inc
loope
sbb
loope
xchg
and
mov
in
int
dec
mov
int3
inc
inc
mov
pop
mov
pop
mov
sub
dec
lds
lcall
mov
inc
subl
mov
popa
push
dec
pop
outsb
shl
push
adc
xchg
int
pop
pop
jno
sbb
push
mov
dec
xchg
int3
inc
push
ret
xchg
popa
dec
imul
cmp
popa
inc
inc
inc
fsub
pop
pop
js
push
or
sub
pop
aas
pop
inc
push
push
inc
dec
dec
andl
dec
aad
dec
sub
sub
fnstsw
pop
ficomps
cmp
rcrb
popa
dec
imul
pop
dec
jge
xchg
jb
out
lock
dec
stos
xor
lds
mov
in
dec
mov
pop
das
push
push
mov
ja
mov
sub
les
bound
leave
or
insb
addr16
push
jno
sbb
add
add
pop
push
xor
cmp
and
cmc
sbb
dec
sub
leave
flds
mov
movsb
cmp
push
sub
popf
jbe
cmp
test
cld
pop
cli
adc
loope
mov
les
lret
clc
mov
push
push
xchg
mov
iret
pushf
dec
pop
enter
or
push
pop
in
out
subl
cwtl
dec
jge
sbb
sbb
clc
push
ja
js
adc
dec
test
pop
or
lret
outsl
loop
add
dec
jbe
jle
ret
jecxz
stos
lcall
cs
dec
xchg
dec
stos
dec
aam
and
add
cmp
int
testl
sub
sub
or
int
inc
mov
xor
pop
lret
ret
js
mov
cltd
lds
cmp
inc
or
cmp
aam
rolb
cmp
ffreep
pop
lcall
xlat
and
push
int
inc
adc
pop
or
cmp
inc
sarl
or
pop
aam
cmp
push
int
rcr
popf
shrb
fisubrl
sbb
sbb
int
inc
cmpb
or
cmp
imul
arpl
cmp
xchg
or
cmp
inc
test
sub
xor
cmp
aad
push
xchg
pop
or
jmp
mov
sub
cmp
aaa
pop
pop
sub
inc
cmp
popl
sub
adc
pop
int
inc
sbb
or
cmp
adc
rolb
cmp
or
cmp
or
int
inc
add
orb
dec
sub
mov
inc
nop
cmp
or
cmp
inc
ret
cmp
iret
ror
cmp
sub
push
inc
sahf
cmp
pop
cmp
or
lods
leave
rcl
pusha
enter
cmp
or
cmp
or
cmp
or
or
inc
sarb
push
or
cmp
or
int
inc
ret
or
cmp
adc
xchg
inc
fidivrs
pop
or
cmp
inc
sarl
or
pop
aam
xor
sub
or
int
inc
pop
cmp
cltd
roll
clc
inc
iret
cmp
mov
leave
pop
inc
loopne
cmp
or
xor
inc
inc
mov
addr16
ficoms
ficomps
push
sub
in
or
cmp
or
jmp
jmp
shrl
cmp
or
int
inc
int3
cmp
cmp
inc
lods
or
cmp
out
xchg
cmp
push
roll
ficompl
in
push
lock
mov
ret
roll
int
inc
mov
ret
sub
or
cmp
pop
int
inc
fnstcw
out
fsubl
fimuls
pop
clc
sbb
cmp
cmp
add
cmp
sub
jecxz
xor
ror
sahf
inc
pop
cmp
push
cmp
or
int
inc
dec
cmp
or
dec
xchg
add
push
sub
or
cmp
or
cmp
iret
rorl
or
inc
push
cmp
pop
rcrl
int
inc
cmpl
or
cmp
inc
cmp
sub
or
cmp
insl
orl
or
cmp
addl
cmp
or
pop
dec
and
roll
int
inc
fistpll
adc
pop
or
int
inc
add
add
cmp
inc
push
cmp
dec
mov
or
cmp
or
inc
sbb
sub
cmovo
cmp
dec
jecxz
loope
pop
adcl
lcall
sub
sub
cvttps2pi
push
insb
aaa
or
pop
pusha
push
or
jo
cmp
loop
xor
sbb
stos
lea
fiaddl
inc
fwait
movsl
pop
inc
or
cli
imul
cmp
sub
pop
and
or
sarb
nop
sub
cmp
jle
mov
inc
les
cwtl
cmpl
test
mov
shll
nop
test
xchg
dec
into
and
cmp
sub
cmp
fidivrl
mov
out
and
jle
insl
icebp
sysenter
jae
pop
into
es
in
adc
jge
cmp
dec
stos
pop
dec
subb
js
jnp
shrl
popf
jmp
aam
push
or
push
or
jo
bound
push
nop
daa
pusha
mov
xchg
sbb
mov
jae
pop
and
push
ret
xor
dec
add
mov
sub
xor
enter
cmp
dec
push
mov
out
xor
jns
xchg
shl
shlb
int
push
mov
jmp
test
jmp
test
dec
dec
pop
pusha
ret
int3
adc
sub
leave
lods
push
dec
cmp
imul
dec
sub
jmp
loopne
jns
imul
dec
insb
xchg
loope
push
adcb
mov
pop
in
cli
cld
mov
dec
mov
jns
xchg
sbb
dec
xchg
inc
pop
scas
dec
xor
bound
xchg
or
dec
mov
mov
popf
mov
test
xchg
or
inc
dec
call
sub
jno
aas
push
lret
or
pop
dec
fs
jmp
fsubrl
fwait
mov
xchg
test
or
fimuls
fildll
push
sbb
adc
andl
cmpb
and
shrb
adc
dec
mov
xor
stos
push
jne
dec
pop
fisttpl
gs
test
pop
jae
std
mov
fsubl
daa
mov
jl
imul
stos
jns
dec
mov
mov
jo
dec
sub
stos
out
jl
sbbl
testl
pmaddwd
cmp
push
aam
adc
lret
dec
lcall
cmp
stos
jne
gs
add
xchg
fcmove
jecxz
sahf
insl
mov
fdivs
loope
rolb
inc
cltd
dec
pop
mov
add
mov
mov
xlat
inc
dec
jnp
out
in
pop
lea
cld
or
sbb
and
nop
dec
in
fistps
add
lret
sbb
adc
inc
dec
pop
insb
xchg
in
adc
or
sbbb
stos
out
fcmovb
dec
and
mov
nop
inc
call
fnsave
scas
jns
iret
inc
mov
push
dec
jl
mov
cmp
jecxz
dec
pop
ds
mov
jge
into
or
rep
xor
ret
dec
sbb
cltd
stos
mov
mov
xchg
mov
jmp
inc
add
inc
out
dec
mov
inc
rorl
pop
dec
push
loope
cld
outsl
xchg
cltd
mov
inc
inc
dec
jbe
dec
je
call
inc
daa
or
pop
adc
dec
push
js
adc
mov
pop
imul
inc
cmpsl
enter
mov
mov
inc
orl
mov
or
mov
leave
inc
mov
pusha
les
adc
jmp
xor
dec
arpl
fsin
popa
testl
jmp
push
sub
cmp
imul
inc
test
lods
mov
dec
dec
inc
jbe
jmp
repz
push
and
jno
insl
pushl
xchg
mov
mov
dec
mov
sbb
in
adc
dec
rcrl
rclb
adc
je
jns
hlt
lret
xor
push
xor
or
mov
sti
add
lods
push
cmp
push
dec
loopne,pn
add
fbld
aaa
mov
sbb
lods
sub
pop
pop
xlat
sbb
ja
in
or
stos
and
test
dec
cmp
in
dec
add
push
int3
dec
mov
loop,pt
xor
dec
int3
clc
in
mov
push
mov
stos
pop
mov
int3
jle
outsl
int3
imul
push
sub
outsb
xchg
js
sbb
out
pop
je
xchg
dec
jg
enter
testb
adc
mov
int
popf
inc
dec
dec
mov
xchg
and
mov
jnp
dec
int3
push
sbb
pop
inc
pushf
push
add
jo
inc
mov
cmp
dec
jae
dec
loopne
lods
out
xor
int
sbb
inc
jmp
hlt
push
jl
mov
out
imul
jmp
iret
imul
xor
inc
push
dec
mov
dec
adc
cmp
mov
sub
push
imul
mov
rorb
and
push
outsl
dec
push
rolb
inc
or
aas
push
jno
sub
jecxz
daa
pop
insb
div
icebp
dec
call
fs
lahf
cmp
jmp
xor
mov
pop
pop
mov
stos
clc
xchg
enter
cmp
in
xor
dec
xchg
xor
add
dec
sbb
scas
mov
test
jb
pop
imul
cmpsl
pop
enter
push
dec
rorb
inc
mov
stc
ret
dec
mov
cmc
sub
xchg
and
fimull
daa
mov
or
into
pop
roll
leave
outsl
pop
dec
ss
cmpsb
inc
faddp
dec
repnz
dec
das
cmc
test
sbb
lret
lcall
dec
repnz
xlat
sti
dec
int
nop
or
pusha
or
sbb
test
xor
sub
mov
mov
mov
outsl
dec
lock
adc
pop
xor
out
lcall
loope
jmp
xchg
mov
push
popa
dec
sub
lea
and
sti
xchg
sbb
inc
mov
ficompl
stos
dec
sbb
xchg
push
dec
addr16
jae
imul
or
dec
and
lock
rcl
orb
mov
dec
add
ss
dec
and
dec
mov
iret
xorl
dec
adc
enter
ret
lret
mov
icebp
in
mov
add
jmp
push
int3
pop
cwtl
push
adc
and
pusha
stos
lock
gs
push
dec
aam
mov
orl
outsl
mov
dec
add
fisttpl
dec
cmpsl
mov
push
pop
dec
jmp
sti
cltd
std
and
in
or
shrl
xchg
dec
sahf
jbe
fisubrl
cmp
cmp
mov
mov
in
dec
aad
or
sub
dec
lret
push
adc
cmp
push
stos
xor
decl
cmc
mov
xchg
push
pop
out
push
dec
dec
rol
popf
fs
cmp
jbe
dec
push
fnstsw
jg
sahf
pop
negl
inc
push
outsb
mov
lock
push
dec
fcmovb
call
pop
cltd
push
inc
out
ffree
lock
push
inc
push
dec
mov
enter
movsb
dec
mov
add
bound
add
repz
lods
decl
stc
jne
xchg
sahf
push
push
cmp
lahf
adc
dec
sbb
icebp
movsl
sub
jnp
add
and
jl
push
jo
call
inc
mov
xchg
pop
ss
test
cmp
dec
dec
dec
ffreep
movsl
fsubr
mov
jns
adc
jg
jmp
mov
fwait
xchg
push
dec
movsb
mov
jle
mov
mov
mov
fucomip
pushf
imul
push
repnz
roll
in
mov
mov
in
push
dec
lods
pusha
jbe
imul
push
lock
sub
mov
inc
dec
insb
mov
imul
lods
lahf
jo
pop
daa
test
lds
adc
xchg
dec
dec
repnz
and
mov
rcrb
ficoml
xor
dec
out
mov
push
sbb
out
cmpsb
inc
cmpsb
repz
in
mov
cmp
push
sub
mov
jl
inc
dec
xor
orl
cmpsb
stos
cmc
push
pop
or
push
pop
jge
inc
cmp
add
push
add
dec
xor
fildll
in
lret
and
mov
int
cmp
lock
pop
xlat
sub
dec
dec
dec
jg
rorb
pop
test
inc
pop
dec
sarl
jnp
push
dec
xchg
xchg
dec
or
lahf
add
fldl
stos
into
mov
test
pop
cmpsl
outsl
lret
mov
loope
mov
je
sbb
out
ja
popf
inc
inc
imul
imul
mov
push
sub
xor
sub
sbb
push
mov
dec
mov
aad
in
cmpsb
js
dec
ja
jae
scas
add
inc
mov
mov
sbb
pop
nop
repnz
cmp
jne
lds
fdivp
push
jae
aam
leave
in
adc
push
cwtl
int
mov
dec
ja
fadd
and
sub
push
dec
xor
cmp
mov
jge
mov
inc
imul
push
int
stos
dec
add
dec
mov
push
push
jo
addr16
pop
lret
shlb
pop
dec
adcb
insb
ss
dec
pop
cli
pop
cmp
sub
outsb
loopne
ficompl
stc
dec
addb
shrl
pop
dec
daa
xor
xchg
in
push
in
xchg
int3
mov
clc
lret
arpl
lret
push
cltd
lods
filds
xchg
and
add
xchg
lea
mov
sub
lods
aad
mov
pop
dec
xchg
push
and
add
cmpsb
testl
dec
addr16
push
jno
and
pop
cltd
in
dec
jp,pn
outsl
jae
cmp
or
imul
pop
dec
fidivs
mov
dec
fists
push
rorl
pop
ss
mov
inc
and
sub
mov
cmpsb
bound
dec
xor
sbb
jmp
mov
jns
insl
ret
push
mov
push
inc
or
adc
sub
lret
add
inc
push
dec
and
push
dec
data16
mov
shl
sub
xchg
out
cmp
sbb
pop
js
repz
in
fidivrl
into
or
addr16
dec
xchg
sbb
xchg
shlb
cld
mov
cmp
cmp
mov
test
dec
jle
sbb
sub
xor
dec
sbb
hlt
adc
adc
jl
push
test
popf
lods
cs
jge
dec
dec
xorb
test
push
in
mov
ja
jl
add
mov
mov
jmp
pop
pushf
int
mov
push
dec
test
lods
and
std
push
mov
pop
mov
sbb
dec
gs
test
pop
scas
leave
xchg
ljmp
mov
dec
xchg
pop
mov
jmp
dec
std
out
inc
cmc
dec
mov
test
repz
loope
adc
mov
imull
or
add
insb
loop
sbb
dec
adcb
fcmovnu
repz
inc
inc
and
dec
roll
syscall
cwtl
xor
test
dec
scas
add
scas
push
sbb
mov
sub
pop
dec
mov
push
es
lcall
adc
mov
clc
dec
pop
push
ja
outsb
or
dec
jns
pop
fwait
jne
loope
lods
cmp
adc
dec
sti
leave
daa
js
lret
test
dec
mov
sub
mov
test
mov
mov
cmovns
xchg
pushf
dec
shr
dec
push
jnp
ljmp
xor
jecxz
into
outsb
iret
lods
mov
cmp
fwait
dec
or
arpl
aaa
cwtl
inc
mov
mov
loope
call
and
in
dec
rcrl
rcll
dec
jecxz
pop
stos
mov
in
and
mov
call
popl
dec
rcll
jb
dec
dec
gs
mov
dec
and
sub
jno
sbb
push
adc
mov
imul
sub
mov
roll
xor
push
adc
sbb
inc
add
lea
xchg
dec
xchg
cmpsb
shlb
aaa
inc
adc
fs
pop
sbb
int
jmp
leave
sub
bound
fldcw
lret
xlat
pushf
dec
adc
cltd
adc
sarb
leave
js
dec
push
int
dec
add
cld
hlt
sti
dec
mov
fnstsw
pop
mov
jmp
jne
pop
pop
xchg
mov
ret
in
xor
insl
pop
cmp
fsubrp
inc
lret
push
mov
je
dec
push
loopne
movsl
shrl
mov
mov
push
xchg
add
mov
imul
loope
int
push
int
into
dec
iret
in
outsb
or
mov
or
push
xor
sub
sub
pop
push
les
dec
or
lea
adc
in
inc
out
dec
mov
xchg
or
fs
dec
lret
cmp
inc
outsl
outsb
dec
or
pop
out
mov
sbb
lret
push
jo
test
dec
xchg
push
data16
ljmp
mov
xor
fwait
dec
paddb
jmp
in
push
push
pop
and
adc
push
std
cmc
int
ss
inc
movsb
lret
orb
in
stc
add
sbb
inc
jb
push
jle
scas
inc
aas
dec
mov
dec
aam
or
icebp
cmpsb
addr16
popf
int
cwtl
out
in
imul
sub
ret
inc
xor
inc
inc
ret
imul
add
fisttpl
pop
dec
jbe
int3
mov
cltd
sbb
push
sbb
mov
fwait
add
imul
dec
popf
dec
out
dec
test
in
jmp
into
pop
dec
lret
pop
inc
mov
inc
xchg
adc
jmp
pop
cmpsl
and
cmp
lds
xor
mov
dec
lahf
jbe
add
test
ret
dec
xchg
mov
sub
push
adc
mov
ss
and
dec
orl
mov
pop
into
ljmp
mov
dec
pop
push
dec
repnz
pop
push
push
das
je
inc
inc
mov
int
test
pop
mov
dec
adc
sbb
or
stc
xor
cld
lock
mov
dec
dec
rep
scas
mov
imul
icebp
push
jl
mov
sahf
clc
jg
dec
mov
dec
cmpsb
cmp
icebp
stc
xchg
int
cmp
push
or
dec
jae
fadd
aad
push
cmp
cmpsl
call
cmc
mov
adc
sbb
dec
movl
dec
out
hlt
jb
xor
sub
test
icebp
rcll
xlat
inc
jmp
xor
xchg
inc
inc
pop
push
dec
dec
push
mov
lret
cmp
jmp
insb
popf
pop
adc
aas
shlb
cmp
out
cmp
dec
pop
inc
pop
inc
addb
dec
mov
add
out
sub
mov
lret
or
dec
push
sub
ret
stos
cmp
cmpsl
mov
jl
jmp
mov
push
lahf
mov
int
sbb
lea
sub
inc
js
jns
fwait
cmc
dec
push
xchg
jge
xchg
mov
cmp
addr16
sub
mov
push
pop
test
lds
or
subl
es
imul
sbb
mov
pop
lret
adc
shrb
dec
iret
insl
pusha
mov
sbb
push
adc
dec
dec
pop
adc
or
mov
pushf
aam
mov
or
data16
es
push
insb
stc
sub
enter
and
mov
and
cmp
adc
lods
pop
add
insl
inc
pop
clc
js
sbb
pop
cmpsb
pusha
xor
ss
dec
lret
mov
rorb
cmpsl
lret
lods
jl
add
aas
inc
call
cwtl
imul
movsb
mov
mov
dec
ja
sub
pop
or
mov
ret
mov
roll
in
cmp
xor
lea
mov
pop
push
cmp
in
cmp
jmp
test
iret
pop
or
jo
xchg
mov
sub
mov
mov
mov
dec
cwtl
and
push
jp
lods
xchg
test
push
xchg
mov
mov
shlb
imul
dec
cmp
cmp
and
rclb
sub
rolb
push
or
push
sub
sub
mov
ret
pop
xchg
inc
cld
or
inc
inc
dec
jecxz
dec
inc
int
pushl
aad
dec
pop
mov
mov
mov
outsl
xor
pcmpgtd
inc
push
and
mov
lret
push
mov
push
push
aam
add
sti
icebp
cltd
inc
dec
dec
lods
cmp
je
dec
dec
jbe
cmp
sbb
sbb
sub
adc
jo
push
test
hlt
enter
fucomp
mov
cmpl
arpl
cmp
lahf
jo
leave
push
aad
dec
aam
mov
inc
jecxz
mov
decb
loopne
aad
jl
sub
imul
ficompl
sbb
subb
mov
inc
dec
sub
lcall
call
pop
stos
jecxz
iret
pop
dec
cmp
cmc
push
xor
insl
push
ss
pop
arpl
adc
mov
sbb
jl
dec
xorps
jne
inc
mov
lea
jnp
sbb
test
bound
and
xor
and
jmp
out
dec
dec
bound
mov
loop
out
addr16
pop
popa
mov
cmp
ljmp
jmp
sub
int
hlt
imul
inc
and
mov
loopne
mov
adc
in
cld
out
fs
pop
rorb
cmp
out
pop
outsb
pop
or
jle
addr16
js
int3
inc
push
cmpsl
sbbb
and
push
aaa
add
inc
outsl
negl
inc
fimull
movsb
sub
insl
inc
jmp
lcall
xchg
xor
dec
into
sub
stos
ss
mov
pop
or
insb
pop
push
lret
loopne
dec
xchg
int3
sar
xor
or
stos
xchg
sub
arpl
cmp
mov
dec
gs
push
bound
scas
pop
sub
pop
push
iret
mov
cld
in
ja
pop
sub
stc
adc
fmuls
xor
in
je
imul
push
dec
xchg
les
sub
inc
roll
stos
daa
mov
addb
lods
stc
daa
xor
xor
dec
dec
popa
add
ds
dec
adc
dec
imul
out
lods
int
fucomp
stos
inc
pusha
test
jp
dec
and
fimuls
stos
dec
leave
or
cmp
mov
push
jns
push
stos
inc
mov
pop
dec
cltd
pusha
mov
leavew
repz
enter
shll
inc
mov
rorl
adc
ret
sbb
test
es
stos
xchg
dec
std
dec
sub
mov
pop
imul
mov
jl
jne
inc
ja
dec
mov
xchg
shrl
ficoml
loopne
sub
mov
sub
jbe
push
dec
lock
cwtl
adc
pop
fildll
sbb
inc
nop
sub
push
push
sarb
cmp
inc
add
out
push
pop
stos
fldcw
sbb
cmp
jmp
add
adc
and
mov
push
push
inc
pushf
dec
ds
addr16
ja
push
lret
out
int
push
pusha
aad
add
nop
sub
sub
and
decb
idiv
jns
aaa
addl
mov
loope
sbb
sti
and
dec
sub
lods
insl
xchg
pop
jmp
dec
dec
mov
in
jmp
inc
mov
into
mov
cmp
fsubrl
pop
in
aaa
inc
fsts
xchg
adc
dec
pop
add
outsl
and
lret
sub
divb
jecxz
sub
add
dec
cmpsb
into
lds
dec
aam
mov
push
sub
mov
xor
or
sti
outsl
mov
addr16
dec
adc
sbb
inc
sub
add
inc
mov
das
push
xchg
dec
rorb
sbb
or
fnsave
jns
in
cltd
mov
stos
jno
ud0
pop
mov
cmc
mov
gs
lcall
arpl
test
cld
jge
inc
repz
jecxz
pop
cmc
sahf
and
xchg
inc
mov
stc
mov
pop
sub
pop
cld
pop
push
push
sub
dec
sub
xchg
add
leave
and
mov
mov
lock
test
dec
or
pop
pop
and
add
scas
sbb
loopne
addb
scas
call
sub
lock
xchg
testl
lret
adc
or
mov
dec
mov
xchg
add
aad
dec
movsl
sbb
bound
dec
inc
mov
aad
xor
xor
rcll
stos
outsb
das
xor
rcrb
add
xchg
ds
in
jmp
mov
push
pop
and
movsb
adc
or
mov
inc
sbb
fisttpll
mov
xchg
cmp
clc
sbb
out
xchg
int
shrb
sbb
sub
pusha
mov
xlat
mov
les
enter
push
or
rcrb
xor
sub
inc
sub
push
push
push
into
jmp
xchg
imul
sti
pop
mov
enter
xor
xor
fildl
jmp
sub
lods
cltd
lods
pop
add
daa
icebp
dec
out
push
sub
xor
jmp
imul
dec
adc
adc
cmp
pop
sub
fdivr
fsubs
lret
nop
dec
rorl
lcall
nop
pop
dec
rolb
mov
adc
jmp
pop
jo
fiaddl
sub
andb
pusha
cmc
push
mov
lret
push
or
imul
push
sub
pop
pop
int
int
push
adc
jbe
and
call
mov
cltd
push
mov
jb
sub
ret
xchg
les
mov
loop
mov
push
pushf
shrb
xchg
lret
add
dec
xor
pop
mov
mov
call
inc
adc
mov
adc
pop
jge
cmp
pop
inc
mov
dec
add
loope
jno
dec
mov
iret
and
ret
xlat
push
dec
lds
adc
jbe
or
add
xor
cmp
or
xchg
jge
ss
imul
insb
lea
push
iret
dec
sub
dec
or
dec
out
dec
addb
ja
data16
out
mov
xchg
dec
push
js
pop
in
lret
into
xor
cmpsl
fstps
push
push
mov
fwait
scas
ret
repz
mov
adcb
out
dec
push
lods
push
mov
and
mov
and
push
pop
cld
out
push
out
push
mov
popf
sbb
stos
jb
dec
adc
xor
icebp
push
jle
mov
mulb
test
push
pusha
sbb
or
xchg
scas
in
push
inc
bnd
adc
cltd
std
add
in
and
jo
pop
stos
mov
into
call
cltd
sub
in
dec
mov
or
inc
inc
dec
stc
outsb
lahf
xchg
mov
test
mov
enter
dec
icebp
and
xchg
lods
add
add
popl
imulb
into
cmpsb
test
cs
les
dec
sarl
mov
sub
sub
fstl
dec
lcall
jne
daa
and
or
and
insl
insb
nop
cli
lods
or
or
xchg
loopne
imul
aam
mov
sub
popa
sahf
ja
mov
or
test
mov
pop
add
mov
mov
mov
mov
xchg
dec
push
js
mov
sbb
test
cmp
das
push
dec
aad
clc
sbb
and
pop
mov
cmp
inc
iret
imulb
cltd
push
add
ljmp
test
mov
dec
movsb
push
jmp
sub
les
and
dec
or
shlb
mov
add
dec
mov
sahf
ret
enter
and
xor
mov
inc
dec
jns
bound
and
call
mov
fistpl
daa
dec
jg
mov
dec
add
in
mov
fwait
adc
push
mov
mov
xor
imul
mov
push
push
ja
mov
enter
xchg
int3
dec
dec
imul
movsl
mov
pop
adc
mov
outsb
sub
popf
xchg
or
fadd
leave
push
dec
inc
shlb
out
loop
dec
aam
cmpsb
or
xor
outsl
push
dec
push
daa
dec
inc
xchg
cmp
push
cmp
out
pop
inc
mov
pushf
mov
std
mov
pop
jnp
dec
bound
mov
dec
sti
xlat
mov
and
ss
clc
rol
mov
pop
or
cwtl
std
lods
jne
pop
xor
lods
dec
push
pop
push
and
dec
je
jecxz
push
mov
xchg
dec
andb
enter
jb
mov
stos
jne
aas
xchg
push
dec
lret
or
cli
pop
cmpsl
imul
xor
mov
int
sahf
pop
sub
sbb
leave
loopne
jg
out
pop
adc
pop
adcl
push
lcall
sub
cmc
std
js
mov
push
lods
addr16
fadd
repnz
cltd
ljmp
inc
in
adc
xor
jmp
in
sahf
jmp
push
xchg
ljmp
and
fistpll
iret
xor
arpl
xchg
nop
fldcw
shrl
jnp
inc
pop
call
stc
and
mov
jl
mov
test
decb
orl
inc
adc
pop
adc
inc
xchg
mov
dec
push
pop
inc
dec
das
pop
iret
imul
jnp
pop
ljmp
cmp
shl
int
pop
dec
mov
adc
sub
orb
push
pop
mov
jne
rorb
xlat
inc
fucomp
xchg
pop
pop
dec
pushf
jl
add
imul
push
sub
pop
mov
testb
aas
mov
jle
mov
int3
cmp
sarb
sbbl
neg
out
pusha
sub
shr
aad
out
cmp
negb
fildl
sbb
mov
sub
lcall
scas
and
push
pop
pop
dec
mov
icebp
js
inc
movsb
pushf
jmp
cmpsl
cltd
enter
xor
mov
into
ja
rolb
jnp
mov
push
dec
call
inc
inc
push
inc
push
dec
xor
cs
insb
add
shrb
cmp
neg
jmp
pusha
bt
cmp
sub
stc
xor
call
adc
cmc
sbb
jg
add
insb
push
nop
cmp
cmpsl
pop
gs
test
enter
cwtl
test
jmp
test
or
push
jnp
jmp
xchg
mov
inc
iret
lods
shll
jb
cmpsb
repnz
inc
add
push
jl
insl
inc
sbb
addr16
cmpb
jne
hlt
inc
imul
sbb
mov
int
push
insl
scas
aaa
xor
insb
testl
push
pop
xlat
adc
ret
nop
xchg
jmp
popf
jae
loop
sbb
rcll
jle
shll
outsb
mull
sub
and
addl
cmp
jno
je
xor
jmp
pop
fs
popa
adc
push
je
fwait
stc
pop
sub
ficomps
push
jle
outsb
fisubrl
jb
cmp
jecxz
mov
cltd
in
bound
sbb
push
das
popa
out
cmp
adc
popf
xchg
repz
int
out
and
loop
cmpsb
lcall
adc
insb
enter
ffreep
movb
cs
gs
mov
aas
stos
sbb
xchg
mov
rclb
das
sbb
adc
gs
push
mov
imul
mov
and
cmp
cmp
push
pop
fmuls
pop
xchg
stc
faddp
cmp
xchg
pop
inc
stos
popl
lret
mov
stc
jno
mov
les
add
mov
or
fdivl
leave
leave
and
ret
mov
rcl
jmp
call
into
in
cs
gs
cmc
jno
and
xor
adc
cmp
ret
stos
cmpsl
and
sbb
icebp
xchg
orl
dec
xor
mov
movsb
mov
pop
je
femms
inc
dec
xor
cltd
add
pop
je
outsl
dec
dec
lods
push
push
sbb
mov
dec
cmpsb
icebp
pop
mov
fs
inc
lahf
fwait
pop
out
sahf
outsb
ss
rclb
repnz
shlb
ret
cmc
pop
jg
imul
int
not
call
lea
je
bsr
xor
cmc
mov
jmp
out
int3
das
insb
gs
mov
xchg
fnstcw
xor
pop
or
nop
mov
outsl
fdivs
imul
and
pusha
enter
mov
or
dec
jecxz
lea
mov
inc
test
test
add
and
movsb
cmc
or
cltd
jns
push
adc
jns
gs
cmp
ja
roll
das
insb
gs
movsb
adc
mov
mov
in
mov
mov
sub
jno
or
mov
lret
scas
fstp
mov
or
daa
rcl
stos
cltd
in
pop
mov
sbb
sbb
xor
add
and
push
jns
pop
jns
out
fistpll
test
or
lods
jne
adc
mov
jns
sbb
es
cwtl
xchg
fcmovb
mov
fs
jne
sub
and
shr
xor
bsf
shl
or
btc
mov
jmp
xlat
in
and
insb
gs
pop
rcll
jno
popa
loope
add
mov
cwtl
xorl
jo
test
mov
stos
movsl
loope
jg
push
xchg
push
scas
push
fs
inc
push
cld
hlt
pop
cltd
mull
sarl
repz
lods
cmpsb
out
push
xchg
sti
pop
mov
scas
sbb
mov
cmp
orb
clc
lret
mov
int
iret
cmp
data16
lcall
xchg
mov
sahf
push
xor
gs
call
ds
je
insb
movsb
cld
insb
aam
js
adc
add
xor
movsb
mov
mov
jecxz
repnz
jo
dec
pop
cmp
wbinvd
fsubr
repz
sub
aaa
loopne
mov
das
and
jmp
imul
and
lret
inc
movsl
repnz
shl
in
inc
adc
inc
cmp
hlt
outsb
ljmp
sarl
arpl
sbb
jge
dec
inc
stos
xchg
ljmp
fwait
out
mov
inc
lahf
repz
lahf
pop
add
andl
or
add
cwtl
push
imul
xorb
mov
push
push
dec
into
aaa
xchg
stc
dec
pop
es
fcmovne
dec
mov
movsb
enter
push
xor
xchg
call
xchg
push
arpl
push
mov
fistpll
enter
add
mov
fidivrs
mov
cmp
jle
lcall
mov
jle
movsl
adc
mov
dec
ret
gs
jnp
sub
mov
inc
xchg
add
push
mov
jp
mov
mov
xor
mov
xchg
cwtl
jle
scas
sbb
imul
dec
cmpsl
sbb
or
push
mov
push
nop
nop
js
lds
mov
popf
jmp
in
inc
test
movsl
xor
adc
pop
enter
insl
mov
insl
xchg
xchg
dec
push
fidivrl
nop
or
jl
cs
dec
cs
or
aas
mov
or
sti
mov
dec
daa
out
dec
movsl
inc
push
test
cmpb
adc
into
adc
ds
mov
push
mov
sbbb
adc
and
pop
gs
pushf
jo
or
add
add
jbe
cmc
int3
outsl
xor
xor
or
lds
in
gs
inc
xor
xor
xchg
bswap
push
xchg
adc
jp
pop
test
ja
test
mov
or
cld
insb
cwtl
call
pushf
push
ror
ficoms
pop
int3
scas
popf
in
jmp
and
and
mov
ror
add
movsbl
call
ljmp
xchg
aaa
cmpsl
sti
arpl
cmpsl
sbb
es
mov
mov
jbe
or
sar
lret
pusha
imul
jmp
test
sub
inc
inc
scas
stos
or
int
mov
pop
dec
and
mov
pop
rcrb
pusha
dec
mov
int
xor
sbb
sub
or
popf
andb
js
sub
sarl
fisttpll
sbb
jl
xchg
clc
mov
cmp
fisubl
xor
mov
jmp
scas
lods
or
shrl
pop
dec
or
int
in
inc
adc
dec
mov
subl
pop
mov
movsl
popf
mov
or
jge
pop
mov
xor
test
fs
ja
movsbw
jmp
repnz
jmp
cmc
xor
xor
gs
xor
inc
ds
push
mov
pop
push
mov
and
jne
dec
lret
and
or
in
loopne
push
mov
and
push
ja
loop
lret
daa
and
or
jp
add
lea
cmp
adc
mov
int3
xor
lret
pop
cltd
popf
mov
test
pop
cmp
inc
inc
test
inc
inc
pop
xchg
and
add
mov
push
push
adc
mov
sub
fwait
popf
xchg
adc
add
jg
rorl
dec
or
pop
idiv
gs
dec
xor
aaa
xchg
repz
dec
xchg
out
imul
loop
mov
push
shll
test
xchg
repnz
xchg
repz
jecxz
adc
pop
fildll
mov
pop
test
sub
jge
aas
inc
int3
xor
lea
and
ja
inc
inc
mov
cs
xchg
in
xchg
cmp
je
ret
or
jbe
daa
cmp
aad
xor
jl
clc
je
dec
ret
lcall
xor
sbbl
fmuls
fdivrl
clc
loopne
lods
or
jecxz
mov
cmp
pop
xchg
sarl
push
aam
mov
mov
dec
mov
mov
sub
ja
lret
aaa
lret
sub
imul
and
mov
cmpb
add
addr16
xor
movsl
fld1
mull
and
dec
pop
rcl
fwait
xchg
or
out
jle
cli
adc
fmul
inc
stos
or
leave
aas
ljmp
push
mov
int3
mov
test
sbbb
int3
and
dec
mov
cmp
andl
fsts
xchg
mov
add
add
imul
dec
jo
outsb
add
js
ss
gs
sbb
cmp
dec
mov
mov
stos
push
inc
pop
mov
imul
nop
cld
or
mov
data16
les
sbb
fistpl
in
adc
rorl
scas
daa
cmp
pop
shlb
inc
jb
cmp
out
xchg
push
es
mov
into
push
aad
push
push
ljmp
jbe
add
pop
xor
cs
insb
add
gs
dec
mov
jns
inc
test
dec
mov
push
mov
arpl
mov
mov
jl
jno
sub
sbb
xlat
inc
out
fsubr
hlt
gs
or
adc
insb
add
icebp
dec
inc
mov
mov
inc
xor
movsb
test
xchg
push
arpl
xchg
test
gs
mov
movsb
adc
aam
xchg
jo
adc
mov
std
push
mov
xchg
sub
push
sub
mov
cmp
mov
sub
cmp
pop
push
rcl
les
xor
loope
sbb
jmp
push
addr16
imul
push
aas
xchg
jb
es
sarb
outsb
dec
inc
ds
push
nop
jbe
jge
mov
cli
push
aaa
insb
gs
pop
ret
aaa
mov
addr16
dec
cmpsl
out
pop
mov
mov
loope
mov
loop
imul
xchg
out
leave
pop
pop
push
inc
mov
or
jno
push
scas
pop
jne
int3
mov
mov
jae
lock
mov
push
je
or
dec
xchg
or
bnd
lods
xor
hlt
call
pop
push
dec
cmp
cmp
adc
adc
xchg
bsr
mov
not
sbb
mov
pushf
mov
add
jmp
fdivs
fidivrl
insb
gs
mov
mov
push
scas
sbb
mov
div
xchg
fadd
mov
mov
sbb
push
mov
stos
fdivrs
lea
pop
lret
sbb
ficompl
adc
insb
lret
mov
das
sahf
sahf
mov
jno
out
add
sbb
fldt
jno
es
lcall
add
jnp
fucomp
xor
in
inc
push
fs
mov
pop
out
into
push
cmc
gs
aad
lea
or
add
mov
aas
jnp
cmp
iret
adc
jg
inc
xchg
jecxz
and
fdivrs
mov
or
inc
stos
imul
sarb
mov
into
outsl
sub
aam
mov
ja
pushf
movsb
cmpb
cwtl
jo
and
pop
jns
data16
cmp
fs
jl
pop
out
outsl
int
outsl
or
mov
add
fmul
mov
hlt
or
mov
scas
hlt
je
and
mov
gs
stc
rorl
int
test
lret
inc
mov
push
outsl
shrl
mov
jg
rcll
into
mov
or
mov
test
stos
insb
dec
cs
mov
cmp
les
or
add
lahf
cmp
xchg
adc
adc
cmp
pop
jg
push
in
pop
mov
add
inc
xor
aad
dec
stos
outsl
dec
out
lea
call
jmp
pop
lcall
imul
xchg
pop
dec
lahf
jecxz
sub
mov
xchg
out
xor
shlb
test
fadd
jns
inc
cmp
mov
ficomps
push
jnp
jnp
jmp
lcall
icebp
leave
lret
sbb
int
in
lret
xor
jle
dec
and
cli
mov
sub
and
push
dec
cmp
in
int
insb
gs
pop
mov
test
cmp
mov
mov
and
sbb
imul
mov
inc
mov
stos
adc
jo
stc
lret
iret
mov
mov
faddp
les
sub
mov
cmp
rorl
push
inc
xor
addr16
cli
mov
mov
mov
lcall
mov
push
sub
out
jp
xchg
pusha
orb
jl
lock
inc
jge
cmp
cli
dec
lret
and
push
cmpsb
mov
xchg
es
addl
cmp
mov
adc
sbb
sub
jne
ror
cmp
outsl
fdivs
imul
dec
xchg
xchg
data16
lahf
jle
loopne
jno
je
imul
cmp
mov
fwait
cmp
daa
mov
popf
push
test
fistpl
idiv
movl
lea
jno
push
movl
push
mov
pusha
lea
jmp
jp
cmpb
gs
or
and
adc
and
shlb
adc
fcmovbe
movsb
jp
fs
scas
cli
inc
push
push
adc
aam
insb
gs
pushf
cwtl
enter
fwait
jp
add
jmp
dec
and
dec
test
mov
out
ret
cmp
cs
adc
dec
pop
jmp
inc
add
in
insb
cmp
jge
and
sbb
ret
mov
in
test
mov
das
xchg
pop
notl
mov
pop
das
sub
mov
xor
cli
mov
pusha
out
stc
push
aaa
arpl
pop
test
add
mov
addr16
jns
pop
push
lret
inc
pusha
jnp
mov
sbb
insl
jns
leave
jb
dec
dec
movsb
or
fldcw
jb
mov
scas
jge
mov
hlt
or
mov
cmpsl
jg
push
or
xchg
repnz
cmp
loop
cmpsb
mov
test
scas
lods
jbe
pop
cmp
gs
mov
xchg
jecxz
jae
push
mov
cmpsl
call
int
daa
pop
shrl
pop
pop
repz
mov
mov
in
sti
fs
xor
fmuls
lods
sub
xor
iret
ret
xchg
cmc
xchg
sub
pusha
xchg
xor
jno
test
int3
addb
jg
imul
in
in
mov
mov
inc
pop
sbb
jl
pop
push
push
xor
lret
aaa
mov
out
push
mov
repz
inc
pop
push
sbb
mov
popf
push
aas
loope
mov
cmp
and
ds
jp
and
out
inc
jmp
pusha
test
and
fisubs
aad
add
mov
ficoms
mov
and
jb
mov
outsl
push
ds
xor
add
div
jecxz
addr16
inc
shrb
push
xchg
clc
fdiv
rcrb
out
pop
fistl
daa
cmp
sbb
cmp
repnz
xchg
or
aas
daa
test
bound
push
out
out
lahf
mov
in
push
mov
sub
push
and
xor
inc
stos
xchg
data16
jo
dec
xor
push
mov
pop
sti
inc
test
data16
mov
push
arpl
xor
insl
xchg
mov
jbe
repz
dec
repz
cmp
ds
push
das
adc
daa
movsb
xchg
push
fnsave
lock
sub
das
cmp
xor
lods
push
and
aas
mov
das
sbb
rcl
cmp
insl
sti
movsl
sbb
mov
aas
cmp
add
mov
out
push
mov
cmp
or
imul
arpl
mov
ret
jno
ret
push
insl
push
enter
int3
in
ds
fldl
imul
js
cmp
into
cmc
ret
jb
mov
fidivl
mov
mov
pop
push
add
dec
mov
xchg
jno
sti
arpl
dec
inc
lahf
pop
sti
arpl
or
jae
aad
loopne
sbb
popf
push
leave
pop
ss
notb
push
mov
data16
pop
cmpxchg
loop
fldt
cmp
test
push
cmp
sbb
xchg
cld
hlt
mov
pop
mov
jmp
mov
sti
fs
arpl
pushl
les
leave
inc
lea
aas
adc
inc
xchg
dec
inc
loop
enter
arpl
jp
int
inc
xlat
lahf
jae
push
mov
loopne
mov
mov
and
in
sbb
int
xchg
pop
mov
out
shll
adc
jae
jmp
push
cwtl
pusha
mov
inc
inc
stos
adc
icebp
xlat
es
es
mov
std
fldt
das
push
rorb
pushf
sub
push
add
adc
or
fs
nop
stos
repnz
xchg
mov
jle
pop
adc
loope
xor
jle
inc
lods
xchg
sub
arpl
movl
pop
jmp
mov
arpl
push
mov
lods
jl
inc
out
fsubp
push
dec
mov
ret
call
pop
ret
sub
mov
mov
das
out
fcoml
cwtl
insb
test
clc
fldl
cmp
test
inc
sub
sub
jmp
or
inc
inc
add
mov
lods
xchg
adc
inc
jnp
cmp
jno
lret
es
mov
outsl
cmp
xchg
fs
mov
sbb
xor
call
cmp
fiadds
pop
mov
nop
mov
pop
inc
sbb
shrl
mov
fidivrl
pusha
aam
scas
xchg
lock
test
pop
xor
data16
lahf
or
in
lods
filds
xchg
jl
ds
lds
pop
mov
pop
insb
cmp
or
ret
pop
xchg
in
mov
frstor
pushl
xchg
inc
mov
test
stc
jnp
inc
pop
push
pop
push
mov
pop
dec
jl
shrl
xchg
ss
sti
ss
ja
popa
mov
push
lret
xor
out
add
jo
and
decb
lods
jne
aaa
inc
xchg
scas
adc
lret
stos
sub
jns
sub
jns
pop
adc
pushf
add
scas
xchg
shll
sub
rcr
test
out
inc
mov
loopne
add
mov
or
mov
jge
adc
dec
mov
insl
fcomps
xor
jbe
sub
lcall
xlat
pop
pop
out
jg
out
gs
mov
shrl
jo
mov
cwtl
xchg
or
shll
xchg
push
notl
icebp
imul
jg
push
aad
fcmovnbe
jl
push
cmp
js
sahf
pop
decl
xchg
xor
dec
sbb
test
jno
loope
pop
repz
gs
stos
rcr
sub
test
jmp
pop
movsb
insb
inc
sahf
xor
jge
in
inc
call
arpl
and
push
push
push
notb
scas
in
jle
dec
in
ja
sbb
pop
dec
nop
int3
testb
push
dec
mov
loop
repnz
or
mov
jo
ret
scas
div
dec
mov
jno
sub
out
xchg
lret
mov
sbb
hlt
repnz
loop
stos
out
adc
dec
pop
inc
inc
mov
repz
jmp
lcall
xor
inc
test
inc
ret
or
insb
push
jbe
pop
adc
sub
repnz
xchg
fisttps
and
scas
idivb
cmpb
and
es
leave
xor
xchg
pop
shll
inc
pop
jg
shlb
loop
mov
xchg
lds
xchg
mov
test
dec
les
mov
pop
xchg
cmc
pop
ret
gs
and
repz
stc
inc
aas
mov
sahf
push
cli
repnz
imul
push
lcall
cmp
out
add
in
mov
sub
mov
or
jbe
jecxz
sub
adc
and
lret
and
xor
pop
push
inc
dec
dec
mov
hlt
in
sbb
call
icebp
clc
push
mov
push
cmp
sbb
dec
out
push
subb
negl
jmp
sub
mov
clc
jne
fstpt
and
push
cmp
fwait
xchg
aam
mov
mov
leave
filds
clc
and
test
inc
and
push
xor
cmpsb
pmuludq
cmp
cld
cli
outsb
shlb
pop
das
fsts
mov
arpl
nop
clc
push
and
aas
jmp
mov
lods
test
popf
ja
mov
jnp
mov
sbb
jae
pop
push
xor
mov
push
push
push
mov
aas
cmp
sti
ret
adc
sbb
cltd
icebp
fimull
sub
loope
das
ja
out
ret
and
cmp
pop
or
iret
adc
ds
jg
iret
sub
sbb
hlt
fsubrs
aam
mov
pop
pop
cs
lods
dec
add
cmp
addr16
push
int
lock
mov
mov
les
sub
cld
mov
add
repz
mov
push
and
push
jbe
test
jno
mov
jmp
push
mov
sahf
inc
ljmp
cmp
sub
jns
test
or
mov
jo
inc
call
dec
pusha
imul
mov
cld
js
mov
jp
mov
push
popa
xchg
nop
stc
repnz
mov
push
jmp
stos
rorb
loope
pop
push
leave
xor
and
jo
sarb
sub
enter
pushf
dec
sub
icebp
cmp
loop
aas
mov
repz
add
outsl
cmp
cld
xor
loop
scas
cmpsl
dec
mov
push
mov
sbb
push
andb
push
std
push
outsb
jcxz
inc
out
stos
or
inc
sub
pop
sbb
adc
mov
stos
cmp
in
sub
pushf
out
ljmp
xchg
or
call
inc
mov
test
cmp
test
mov
and
xor
lods
lcall
fst
cmp
lahf
fwait
mov
in
mov
ficoml
aad
xchg
mov
pop
jg
pop
outsl
pop
mov
mov
jae
lea
insb
xchg
mov
ss
pop
pop
mov
mov
xchg
or
adc
lahf
push
sbb
jge
lret
add
repz
and
fimull
mov
mov
xor
frstor
mov
sub
cmp
xor
scas
pop
cmpxchg
add
cmpsb
push
notb
sbb
mov
xor
clc
adc
aad
xchg
push
mov
xchg
and
mov
sbb
jae
aam
pop
xchg
jg
ret
cwtl
mov
sbb
xor
xor
mov
mov
xchg
adc
mov
jno
add
cltd
testl
sbb
inc
xor
jg
mov
mov
adc
sbb
in
push
cmp
jbe
outsl
into
pop
mov
add
xchg
test
fadd
or
cs
pushf
add
push
sub
and
mov
lock
push
fwait
arpl
pushf
sbb
sbb
dec
dec
cld
movsl
test
jns
lea
add
pushf
cmpb
push
add
enter
or
icebp
into
ffreep
mov
mov
adc
and
add
jecxz
outsl
fcom
mov
push
cmpsb
sbb
pop
xor
iret
movsb
cwtl
outsl
jecxz
pop
jno
fs
fwait
sbbb
insl
aad
and
fs
cmp
in
mov
push
mov
xchg
adc
push
mov
mov
mov
mov
xchg
mov
daa
nop
xor
cs
mov
mov
into
mov
ret
jmp
cmp
aas
and
and
outsb
into
fnstenv
push
repnz
test
push
jecxz
cmp
inc
packuswb
les
add
cmp
jmp
scas
negb
xchg
pop
dec
cmp
xor
ret
ljmp
dec
xchg
cmp
popf
push
mov
mov
mov
add
add
adc
cmpsb
scas
clc
incl
mov
inc
cs
rcr
out
addr16
popf
cmc
int
aad
and
aaa
loope
inc
mov
pusha
and
pop
andl
int
iret
dec
cld
js
fnstcw
pop
ja
lods
jno
rcrb
test
sub
movsl
std
pop
add
sahf
insl
aad
lret
cmpsb
jbe
sbb
pop
mov
fldcw
fidivl
fwait
cmp
scas
and
jae
add
je
fdivrl
sbb
adc
or
jg
adc
sbb
rcrb
les
pmulhw
push
mov
push
dec
xchg
jle
cs
dec
sbb
cmp
pop
scas
std
aad
ss
xchg
cmp
fs
iret
inc
test
ss
pop
rorb
add
jae
aas
test
test
push
mov
dec
and
cmp
adc
bound
adc
subb
or
pop
repz
in
inc
sub
test
mov
pop
pop
into
and
inc
push
add
ds
jo
mov
mov
pusha
sub
cmp
pushl
in
fwait
and
test
sub
rcr
shll
and
jb
fidivs
lahf
xchg
jl
ffreep
xor
ja
addr16
mov
dec
pop
sub
insl
into
mov
mov
dec
test
pop
fiaddl
and
jb
dec
movsb
add
fs
cmp
aas
shll
ret
sub
das
mov
mov
por
mov
bound
lods
sub
leave
xor
inc
aas
cli
repz
mov
adc
adc
push
mov
jmp
popf
mov
add
sub
pusha
push
dec
mov
add
add
nop
pop
outsb
pusha
xor
mov
xchg
scas
rcll
and
push
es
push
rorl
mov
xorb
sbb
sbb
dec
mov
mov
add
pop
mov
aam
mov
xchg
repnz
cld
fs
xchg
pop
mov
mov
pop
inc
sub
ljmp
add
push
das
xchg
outsb
daa
fcmovb
ja
flds
jnp
jo
pop
rorl
popa
xor
jb
je
test
jno
in
dec
cs
jl
mov
pop
jno
cmp
jo
sub
outsb
mov
mov
sbb
mov
xchg
or
mov
fsubp
int3
mov
shll
mov
fdivrl
call
sarb
and
shlb
movsb
mov
testl
lcall
fwait
repz
sub
pop
inc
stos
push
dec
mov
sbb
packuswb
push
leave
fisttps
mov
xlat
mov
std
cmpsl
vmread
mov
rorl
jbe
lods
dec
jecxz
xor
xchg
cwtl
icebp
out
push
mov
jecxz
xor
jae
in
cmc
leave
daa
insb
or
mov
and
les
into
lahf
shlb
or
xlat
and
inc
add
xchg
icebp
jb
mov
jl
mov
mov
xlat
and
outsl
push
cmp
sub
movsb
loopne
sti
xlat
sub
mov
mov
clc
outsb
ljmp
jecxz
mov
cmpsl
call
sub
dec
enter
jnp
pop
call
insb
les
or
sub
sbb
or
dec
ss
dec
jae
push
aas
jnp
cmp
fisttps
mov
sub
adc
inc
mov
cli
test
mov
jnp
stc
push
and
fwait
mov
sub
dec
ja
insb
inc
call
in
hlt
out
mov
mov
clc
xchg
push
sahf
push
out
dec
xchg
inc
cltd
ret
std
negb
into
push
movb
out
cwtl
mov
js
lahf
pop
cmc
sbb
jle
fbld
mov
jno
pop
pop
pop
lcall
jnp
push
and
push
mov
pop
cmp
repnz
dec
mov
repz
pop
mov
arpl
inc
mov
loope
lock
fmull
clc
jns
movsl
sbb
movsb
mov
push
pop
sub
xor
mov
nop
jne
pusha
cmp
xchg
rclb
jnp
ret
xchg
lods
sti
push
and
jb
jge
clc
dec
repz
xchg
mov
pop
cmp
mov
or
lret
cmc
dec
dec
rcll
cmp
fdivl
lods
sbb
inc
mov
xchg
fs
popf
insb
loopne
and
js
xchg
mov
push
cmp
cmc
out
ss
xchg
jl
lcall
insl
fdivrl
sahf
pushf
sbb
mov
lods
adc
xchg
fldcw
adc
hlt
sti
arpl
sub
insl
aad
loopne
mov
mov
xchg
into
jo
push
ljmp
pushf
shl
lods
adc
cmp
ljmp
mov
mov
xor
pop
fwait
test
sub
test
mov
or
pop
add
cmc
repnz
sbb
mov
add
jnp
jecxz
pop
popa
sbb
je
lds
adc
push
out
jno
hlt
lret
int3
lret
xchg
or
ss
ret
mov
bnd
mov
xchg
test
push
inc
adc
mov
push
mov
xchg
or
mov
adc
out
into
adc
out
insl
loope
das
popa
add
sbb
and
les
or
enter
into
jg
jo
sbb
push
or
dec
mov
stos
jecxz
in
ss
test
mov
imul
or
inc
jl
pusha
outsl
rcrb
or
mov
xchg
sub
mov
dec
aaa
addr16
sbb
push
mov
aaa
cltd
xchg
or
jb
and
cmp
lea
mov
lcall
rorl
sarl
or
inc
cmpsb
addl
and
mov
pop
shlb
lcall
dec
mov
mov
jnp
jbe
aas
xchg
out
mov
xchg
push
fcompl
cmp
sub
movsl
dec
repnz
shlb
es
add
aad
outsl
add
nop
clc
loope
xor
inc
mov
pop
jge
inc
ficompl
mov
int3
enter
push
push
push
jl
xchg
xchg
mov
stos
cmpsl
jnp
mov
and
pop
inc
scas
xchg
or
scas
out
out
in
push
pusha
outsl
lods
iret
sbb
jns
subb
inc
or
cmp
mov
dec
xor
aam
inc
movsb
or
mov
lret
push
pop
sub
mov
mov
jbe
xor
cmp
add
addr16
jmp
pop
into
ret
mov
jns
jae
push
xchg
out
outsb
insl
xor
scas
and
push
xor
pusha
test
or
push
mov
int
cmpsl
subl
and
mov
repnz
jns
pop
adc
int
leave
iret
scas
js
aam
xchg
insb
inc
push
stc
dec
jge
xchg
fiaddl
and
insb
pop
into
mov
xchg
mov
rcrl
lea
mov
dec
add
xchg
and
int3
in
jbe
mov
jbe
sti
arpl
les
pusha
enter
ret
aas
mov
sti
aaa
imul
pop
lods
movsl
sbb
mov
add
mov
js
inc
sahf
ror
sub
or
ffree
jp
push
adc
lahf
testl
stos
out
mov
lret
xor
bound
daa
mov
int3
clc
fistpl
loope
leave
mov
mov
outsb
sarb
inc
out
push
mov
pop
pop
xor
or
lret
in
push
dec
dec
repz
push
cmp
mov
push
jl
xchg
dec
lods
packuswb
std
mov
lock
lcall
push
bound
push
dec
cmpsl
maskmovq
sub
sarl
dec
xchg
mov
sarl
repnz
into
ret
lock
ret
add
sbb
out
inc
adc
mov
xchg
cmp
or
js
ret
jno
lret
aas
sub
pop
sub
cmpsb
add
adc
dec
mov
jmp
les
lock
mov
push
cmp
insb
sarb
push
cli
ficoms
fmuls
jle
sub
testl
push
jmp
and
leave
cwtl
lock
call
add
xor
adc
pop
mov
mov
sbb
inc
mov
push
sbb
jle
gs
xchg
jecxz
sub
mov
popa
or
enter
mov
repz
sarb
jbe
es
mov
adc
leave
daa
dec
imul
insb
push
negb
adc
push
sub
inc
pop
roll
or
cmp
and
add
xchg
pop
mov
and
stos
or
add
das
ja
lds
xor
inc
scas
jle
and
pop
iret
adc
in
pop
xor
cmp
jg
dec
out
or
xchg
jge
add
shlb
lcall
push
pop
inc
mov
add
pusha
mov
lods
lds
es
mov
faddl
cmc
imul
xor
dec
loope
mov
adc
pop
aaa
jae
in
int
mov
cmp
in
mov
repnz
pushf
dec
std
inc
inc
mov
sbb
push
movsl
scas
mov
mov
mov
in
push
aaa
das
jo
sub
xchg
pop
fsts
fcom
dec
mov
mov
loop
in
lret
test
or
push
xchg
imul
ret
mov
inc
cmp
mov
sub
lret
mov
dec
adc
popa
pop
fucomp
in
push
mov
push
mov
lcall
add
movl
mov
popl
pushf
test
pop
xlat
dec
shll
cwtl
in
pop
push
test
jno
fstpt
outsb
mov
adc
out
inc
clc
inc
mov
or
call
cmp
addr16
cmpsl
nop
fsubr
cld
gs
inc
lahf
cwtl
or
je
pop
adc
lret
ret
into
imul
fwait
add
push
cmp
loopne
sub
jl
dec
and
enter
xor
mov
sbb
xor
pop
inc
shrl
ljmp
add
dec
inc
ret
sub
or
sbb
lcall
dec
and
push
repnz
pop
das
daa
or
inc
in
es
mov
or
jns
rcll
mov
lahf
mov
add
pop
add
scas
and
jge
push
into
push
jg
xor
out
arpl
push
push
scas
cmpsb
mov
es
repnz
xrstor
cmpb
adc
sub
loop
je
out
or
cmp
fists
mov
jmp
cmp
fsub
call
fwait
xchg
xor
int
xor
cmp
mov
ja
movsb
cmp
bound
and
lcall
shlb
adc
ljmp
pop
jecxz
dec
mov
or
lret
add
in
pushf
cli
pop
push
dec
rorl
xor
pop
outsb
test
rcrb
and
mov
push
mov
out
adc
add
repz
push
dec
std
pop
pop
mov
mov
pop
lahf
jle
cmp
scas
sub
ret
je
int3
adc
test
in
cmpsb
sbbb
mov
nop
cmp
iret
jne
roll
popf
out
cld
add
leave
cmp
add
test
lret
test
clc
inc
lahf
out
fst
sbb
addl
into
fnstsw
lret
fidivs
pusha
rcl
pop
paddq
adc
movsb
jne
inc
mov
ret
popf
popf
icebp
scas
lods
iret
sti
insb
mov
mov
stos
shll
out
js
push
add
jb
mov
mov
je
ja
xchg
cmp
nop
aam
mov
jb
push
ss
and
movsb
push
jg
mov
or
sarl
mov
inc
and
rcr
sub
dec
mov
hlt
loop
cmpsb
pusha
leave
test
aad
aaa
cmpl
jle
aad
in
jns
cmp
mov
ss
jnp
jp,pn
ret
stos
xor
and
lret
dec
ss
stos
pop
fstpt
push
pop
lods
and
xor
mov
out
loope
adc
test
or
cwtl
add
scas
push
insb
outsl
fildll
scas
add
mov
lock
lods
and
aad
mov
out
jle
ja
pop
ja
cmp
jnp
stc
pop
inc
pop
lock
dec
mov
mov
mov
jbe
repz
das
lahf
pop
popa
sbb
sti
cld
test
jae
push
push
mov
adc
mov
aas
inc
mov
lods
xchg
pop
cmp
rol
mov
nop
xor
and
mov
xor
bound
pop
pop
enter
mov
cmp
clc
fdivs
and
lods
sbb
and
je
xor
add
xor
sbb
push
iret
cmpsl
lahf
xchg
push
and
sti
jecxz
lahf
lahf
outsl
test
dec
push
je
sarb
insb
mov
push
cmp
push
adc
inc
sub
testb
movsb
int
dec
mov
iret
lret
imul
dec
es
push
cmc
jg
pop
pop
leave
xor
dec
push
jp
lahf
cmp
shlb
icebp
mov
cmpsb
out
mov
jle
aam
movq
pop
jecxz
mov
outsl
push
sub
test
push
cwtl
mov
adc
push
insb
and
mov
push
mov
add
sarb
loope
vcvtsi2ssl
inc
inc
pmulhw
mov
clc
shrl
jb
cli
arpl
in
or
fcmovb
pop
repz
test
filds
pop
mov
scas
lcall
out
scas
jmp
push
cs
hlt
movsb
mov
outsl
mov
sbb
pop
popa
jp
dec
sub
inc
jo
mov
je
outsl
pop
aam
scas
pop
inc
push
push
es
pop
jae
cli
sub
fdivs
xchg
mov
dec
push
out
out
out
mov
xor
call
out
sub
pop
insb
cmp
movsb
and
in
test
les
pop
aad
lods
stos
and
push
sub
jne
loope
hlt
mov
out
push
sbb
cmp
cmp
add
pop
addr16
mov
xor
addr16
ret
sub
pop
cmc
gs
sub
popa
rcl
cltd
pop
push
push
imul
test
lret
dec
cli
outsb
int3
sahf
mov
push
leave
leave
xchg
insl
pop
sub
in
movsl
test
lar
mov
and
inc
dec
dec
inc
push
dec
xor
cs
insb
add
mov
push
push
pusha
lea
jmp
xor
jle
insb
gs
jmp
xchg
out
aas
xor
fistps
daa
xchg
ja
push
popf
addb
cmp
push
test
adc
inc
mov
stos
adc
leave
loope
pop
mov
jnp
sbb
gs
mov
ja
sbb
or
ds
pop
sub
movsl
push
and
fs
pop
cltd
movsl
dec
call
outsl
mov
xchg
pushf
mov
adc
enter
imul
or
test
push
push
dec
lea
adc
or
pop
insb
gs
icebp
sarb
je
push
addr16
gs
xor
outsb
mov
movb
xchg
xchg
xor
outsb
mov
sub
fistps
dec
sti
dec
lods
jo
mov
sbb
add
add
push
push
inc
inc
and
imul
jl
shrb
push
pop
insb
gs
movsb
or
pop
mov
mov
test
imul
xor
mulb
mov
adc
xchg
xchg
xor
cld
dec
mov
adc
sub
push
push
stos
pop
mov
out
scas
xchg
arpl
or
fcmovnb
mov
cwtl
loopne
and
iret
shlb
loopne
insb
gs
inc
mov
inc
mov
pop
fbstp
mov
inc
es
mov
xchg
sbb
pushf
cmpsl
movsb
mov
dec
mov
bts
dec
xchg
jno
repnz
dec
mov
lds
or
xchg
clc
popa
mov
adc
stc
repnz
mov
jnp
mov
out
js
aaa
sbb
sub
int
gs
xchg
in
sahf
push
push
inc
push
fcmove
cmpsb
mov
js
movsl
scas
scas
addr16
push
push
pop
mov
jno
cmp
xchg
icebp
dec
cltd
adc
int
les
push
clc
in
sub
out
xchg
pop
dec
mov
jle
mov
insl
xor
fcoms
mov
push
and
push
mov
nop
cwtl
cs
adc
cmp
cmp
mov
add
inc
push
mov
push
mov
sbb
cmpsb
adc
sbb
lock
add
dec
test
and
pop
mov
gs
dec
stos
sbb
ds
dec
xchg
push
mov
mov
xor
sahf
insb
lret
enter
mov
mov
cmp
xchg
mov
mov
push
push
push
push
dec
sbb
movsb
xchg
js
inc
sahf
push
mov
aad
bnd
push
pop
insb
gs
pop
movb
dec
mov
mov
pop
fbld
and
pop
mov
imul
xchg
push
and
mov
fnstenv
mov
add
in
arpl
mov
jl
sbb
repz
sbb
cwtl
or
sub
cmp
out
stc
movsb
sbb
xor
push
out
ljmp
sub
dec
mov
out
ret
in
pop
insb
xor
inc
xchg
adc
fcompl
xor
das
mov
xchg
jns
jmp
adc
adc
insl
mov
test
in
add
addr16
popa
pop
xor
into
mov
stos
scas
ss
sbb
push
and
mov
insb
lret
push
inc
out
xchg
lock
push
xor
daa
pushf
mov
or
cltd
dec
stos
or
in
jge
push
xchg
and
xchg
push
inc
push
ljmp
inc
xlat
pop
jmp
pusha
mov
pushf
jae
lock
std
std
addl
ret
jnp
shl
leave
shrl
mov
pop
lods
ss
iret
pop
mov
inc
test
dec
leave
and
aam
pop
movl
clc
xchg
out
test
movsb
lods
xchg
popa
inc
fdivp
add
jle
inc
push
mov
in
xchg
push
data16
hlt
test
enter
lret
push
enter
rorb
movl
push
pusha
call
pushf
lea
je
call
add
inc
gs
jo
outsb
inc
imul
add
shlb
in
bt
neg
jmp
mov
gs
cltd
add
aad
movsl
and
jecxz
pusha
dec
inc
xor
pop
jmp
test
in
inc
push
dec
lods
icebp
dec
sub
or
dec
mov
mov
out
insl
mov
push
inc
jge
pop
lock
inc
pop
adc
push
sahf
push
lret
sbb
and
pop
xchg
jnp
push
push
sub
rcrl
daa
arpl
movsl
lea
pop
insb
gs
lahf
pmullw
fs
ss
cmc
dec
das
les
in
test
inc
and
les
inc
nop
test
jnp
or
data16
iret
iret
mov
clc
in
rclb
xchg
sbb
add
loopne
mov
ds
dec
ficoms
pushl
ret
jne
xor
cmp
lret
pop
insb
gs
pop
push
sbb
orb
cld
pushl
jecxz
jnp
add
sub
lahf
pop
cmc
push
js
addr16
mov
shlb
inc
adc
adc
cli
fadds
mov
loop
stos
stos
stos
pop
mov
ljmp
jno
cld
and
push
mov
inc
pop
iret
add
cli
pop
mov
push
adc
insl
mov
jno
test
cs
cmc
lds
adc
lcall
xorb
sub
aam
sarb
out
lcall
sbbl
add
add
sub
sub
fs
sbb
aad
and
add
add
add
add
add
dec
and
add
add
add
add
add
and
jl
and
rolb
add
add
add
pop
sub
test
sbb
sub
and
rolb
add
add
add
int
and
add
sbbl
add
add
jecxz
and
pushf
cmp
sbb
jle
sbb
movsb
cmp
sbb
loopne
and
add
sbbl
add
add
adc
cmp
sbb
add
add
sbb
sbb
add
cmp
sbb
loop
and
add
add
cmp
sub
pushf
call
rorb
popa
insb
sbb
or
add
or
mov
in
gs
push
bound
in
ds
stos
sbb
cld
mov
xor
mov
xchg
imul
outsl
inc
sub
out
lahf
ds
push
push
mull
sub
cwtl
das
mov
xor
ds
xchg
in
fdivrs
xchg
lods
jmp
lahf
mov
movsl
jmp
jp
mov
sub
fidivrs
scas
push
insl
imul
lahf
sahf
jmp
clc
bt
sub
cmp
xor
mov
push
jmp
cmp
dec
mov
jae
aas
cmpsl
incl
sub
sub
in
lods
sbb
pop
or
jle
test
sub
js
jb
pop
mov
pop
fsub
ret
mov
mov
sbb
mov
jmp
push
xor
xchg
aas
fwait
stc
jno
add
cld
inc
inc
cmp
ror
xchg
nop
fs
cmp
mov
in
imul
imul
jge
xchg
leave
bound
mov
pusha
pushl
pushl
ret
cltd
negl
popa
insb
gs
mov
jo
and
add
popf
xchg
in
jbe
push
cmc
cmp
and
adcl
mov
jo
add
jb
dec
inc
sbbb
xorl
mov
lret
test
pusha
leave
daa
test
xor
and
clc
pop
rcrl
sbb
sbb
lods
imul
mov
popf
call
fwait
mov
in
arpl
push
or
and
pop
or
push
or
lret
das
xchg
jnp
pop
jecxz
fwait
imul
pop
call
xor
pop
arpl
stos
pushl
lea
jmp
in
dec
bound
rorb
cli
push
push
xchg
ljmp
cmp
outsb
and
pop
loop
push
dec
inc
mov
gs
or
bound
jne
insb
pop
or
mov
notl
stos
mov
int3
stos
rep
sub
and
data16
lea
out
dec
test
cmp
mov
pop
mov
test
sbb
out
mov
sub
push
dec
test
gs
pop
sub
shr
test
add
dec
cmpsl
imul
add
enter
insb
fdivl
add
add
mov
fnstcw
jl
jnp
nop
hlt
je
and
pop
sub
xlat
lahf
mov
idivl
rcl
int
stos
dec
loopne
pushf
inc
inc
cmp
hlt
jne
xchg
sahf
xor
aaa
rclb
cltd
dec
sub
jb
mov
ret
mov
jae
dec
sbb
repz
mov
mov
test
rclb
insb
gs
mov
mov
cmp
xor
xchg
jg
inc
xor
data16
loop
or
push
jbe
lods
jg
jp
aam
xchg
push
cmp
cmp
imul
xchg
push
dec
lret
cld
cmpsb
and
dec
pop
in
aad
xchg
scas
xor
sub
or
and
dec
mov
lea
addb
cmpsb
scas
mov
in
xchg
ljmp
add
in
popa
mov
cltd
rcll
pop
mov
jbe
mov
pop
push
rol
cmpsb
jle
mov
mov
pop
jae
cmp
add
dec
jo
outsb
push
jb
outsb
je
jb
add
push
fs
gs
das
fbstp
lahf
pop
mov
dec
mov
ret
sarb
sarb
fidivs
push
push
inc
pop
outsl
jg
sub
js
xchg
ss
outsl
mov
mov
pop
and
scas
or
xchg
mov
push
add
pushf
movsb
cmp
add
rcl
pushf
sub
insl
negb
fistl
fisttpl
pop
or
mov
aad
orl
jne
popa
pop
and
loopne
fsubrl
clc
iret
dec
inc
push
dec
inc
dec
xor
cs
insb
add
push
jg
push
fs
gs
jl
dec
nop
hlt
inc
xchg
in
fs
shr
sarl
out
push
pop
xchg
jnp
dec
lods
push
aas
test
pop
dec
inc
mov
dec
inc
pusha
pop
mull
daa
lods
shlb
and
movl
mov
out
fdivs
cltd
aad
inc
push
movsl
sti
xchg
jnp
and
adc
sub
lret
das
inc
adc
leave
xchg
push
sbb
lds
cmp
scas
or
sar
les
out
gs
sub
push
ret
negb
sbb
ror
jmp
mov
jmp
pop
cli
cmp
pushf
or
rcl
aaa
ja
xor
in
sahf
mov
dec
pop
pop
mov
fnstenv
push
pop
xchg
add
mov
xchg
xchg
jo
iret
push
add
fabs
lds
inc
or
lret
aas
nop
sbb
jle
pop
test
lock
in
dec
loope
outsl
test
int
or
movsl
subl
rcl
and
mov
inc
push
aaa
xchg
jnp
insb
gs
ret
fisubs
mov
jb
xor
push
ljmp
mov
xchg
pop
xchg
sub
cmp
or
push
movl
mov
jb
sub
daa
repnz
add
pop
mov
fsubrs
jbe
xchg
mov
sub
fs
cmp
rcl
test
jl
cmp
jp
lods
pop
dec
inc
mov
pop
stc
data16
gs
call
mov
mov
dec
sarb
loope
jmp
shlb
lock
push
xchg
jp
sbb
mov
add
jne
stos
push
inc
pop
rolb
cmovle
cmpsl
add
and
or
cs
lods
loope
xchg
lahf
mov
popf
inc
stos
adc
add
sahf
or
dec
cmp
cmp
add
mov
fisubs
add
jne
sbb
jge
cmpsl
dec
mov
std
ror
movsb
dec
test
insb
gs
jns
dec
mov
sub
push
and
fsubrl
push
scas
sub
sbb
cmp
cli
dec
ret
ret
outsb
push
and
into
mov
xchg
mov
xchg
gs
mov
call
mov
jno
sub
dec
sub
push
cltd
loop
scas
lods
sbb
push
pop
and
xchg
cmp
xor
pop
jle
inc
xor
out
push
enter
jns
imul
cmp
xor
fcompl
data16
scas
idivl
or
adc
or
dec
xor
dec
pop
pop
shrb
pusha
insb
lods
sub
gs
lds
gs
in
mov
inc
es
stc
inc
cltd
test
out
sub
mov
xor
icebp
nop
pop
add
adc
jmp
fisttpl
pop
xlat
rclb
jmp
das
jo
test
adc
in
insb
sub
ss
test
fstpt
gs
inc
and
add
mov
jl
push
dec
sub
mov
inc
mov
arpl
add
je
gs
arpl
popa
jo
add
rcrb
add
cmpsl
pop
add
idiv
into
in
push
jmp
add
cmp
adc
in
in
xor
iret
lock
insl
lds
jne
mov
dec
dec
nop
hlt
fcoms
out
xchg
test
ss
shr
mov
jmp
lods
or
push
push
mov
repnz
jl
mov
incl
ret
rcrl
loopne
mov
iret
int
jp
cld
out
jno
mov
frstor
in
adc
in
outsb
in
jecxz
mov
fbstp
mov
xchg
jbe
push
repnz
inc
push
add
ror
push
in
and
inc
cmc
dec
cmp
enter
push
popf
add
or
leave
and
sahf
stos
out
in
push
call
popa
loope
sahf
fisubrl
xlat
inc
sahf
pushl
fbld
add
movsb
jle
pop
and
incb
daa
jnp
cli
sahf
popa
das
std
out
mov
push
xchg
push
and
popf
or
adc
or
sbb
inc
mov
inc
xor
mov
or
dec
movsl
pop
pop
int
xchg
nop
adcb
and
jbe
rol
jmp
rol
pushf
bt
call
jge
jge
insb
gs
test
jo
adc
sub
sti
inc
mov
jp
decb
test
mov
shlb
shll
mov
imul
xchg
scas
imul
fidivrs
mov
cmc
and
je
stc
inc
insl
pop
or
sub
push
add
nop
or
das
inc
dec
mov
push
cmpsl
adc
mov
imul
xor
sbb
cltd
scas
push
and
and
and
leave
xor
mov
cltd
jmp
scas
repnz
mov
psrlq
mov
incb
jne
iret
pop
jae
add
hlt
jmp
or
pop
stos
xchg
mov
fdivrs
dec
das
jae
sub
inc
inc
cmp
pop
popf
cmc
pop
add
hlt
in
inc
mov
or
fwait
stc
push
sbb
fcmovb
rcrl
es
loope
xchg
lock
inc
dec
adc
ljmp
mov
xor
inc
cmp
imul
shlb
call
jo
xor
sbb
sub
dec
xor
subl
lcall
inc
stos
divb
push
into
into
mov
out
xor
repz
cmp
sbb
mov
jp
dec
ss
jle
aad
pusha
test
or
mov
leave
sbbb
or
or
mov
popa
mov
inc
push
or
inc
lods
xchg
test
mov
xchg
ljmp
dec
push
pop
stc
in
mov
mov
add
dec
lods
jmp
cmp
in
into
inc
jae
je
mov
mov
orl
imul
leave
insb
gs
jns
scas
jmp
imul
fdivrs
test
sub
in
lods
lock
rclb
push
lcall
or
aad
pop
scas
pop
jne
inc
cli
mov
mov
mov
mov
addl
jecxz
pop
ret
hlt
inc
xchg
or
lea
pop
int
mov
aaa
jae
andb
mov
mov
xor
fsubl
sub
add
decb
out
insb
insb
sub
jb
dec
mov
outsb
out
loopne,pt
icebp
test
add
mov
pop
ss
pusha
int3
cmp
mov
mov
dec
sub
divl
mov
loopne
les
inc
jle
in
mov
mov
ret
pusha
dec
mov
xchg
add
call
test
cmp
mov
cmp
mov
daa
mov
jb
lods
or
sbb
movsl
imul
mov
dec
and
insb
insb
gs
cmp
xor
or
icebp
mov
dec
out
clc
js
xor
loop
popa
cmp
in
mov
mov
jno
test
fcmovne
int3
shrb
pop
inc
push
mov
faddl
mov
iret
add
stc
popa
daa
not
and
dec
or
inc
movsl
mov
ja
cmpsb
shlb
push
cmp
loop
cmpsb
xchg
xchg
inc
mov
mov
scas
jbe
and
xlat
insl
insb
gs
mov
push
and
push
jp
cmpsb
push
rolb
add
xor
xchg
jmp
sub
sub
jb
mov
test
iret
dec
mov
fcmove
pushf
cli
xchg
in
dec
std
push
pop
and
ret
addr16
jo
jno
jne
pop
push
idivl
jbe
ds
out
mov
jb
push
push
je
repz
popl
mov
mov
lea
ja
pusha
push
pushf
call
dec
dec
inc
inc
push
push
xor
cs
insb
add
test
bt
sub
xchg
mov
bsf
lea
clc
add
adc
mov
bsr
mov
stc
stc
cmc
test
call
clc
bsf
clc
rol
push
xor
cmp
mov
rcr
push
movsbw
sar
or
shld
push
sar
clc
mov
push
sar
xchg
and
jmp
lock
ret
gs
ja
cmp
xchg
jmp
xlat
aaa
add
sub
imul
push
stos
or
jb
xor
sbbb
ret
mov
sub
in
mov
les
into
into
mov
or
ror
sub
shlb
cltd
mull
and
push
shr
cmp
mov
mov
mov
sahf
mov
inc
pop
jge
xchg
xchg
mov
and
pusha
mov
adc
loopne
jl
inc
cmp
jp
sahf
or
cmpsb
outsb
dec
dec
lea
pop
movzbw
bswap
mov
pushl
call
cmc
cmp
pushf
call
dec
test
outsl
insb
gs
jge
pop
sarl
stos
repz
loope
sub
or
xorb
fwait
out
cmp
inc
aas
cmpsl
movsl
dec
and
gs
test
bound
mov
leave
or
push
pushf
hlt
mov
dec
mov
xchg
jmp
push
inc
pop
inc
xor
jmp
xchg
in
pusha
adc
sbb
fistpl
in
dec
cmpsl
gs
and
test
aam
sbb
inc
lods
and
gs
sbb
lds
gs
enter
inc
or
jbe
ja
inc
pop
rolb
sbb
cmc
and
pop
aaa
mov
jg
xor
clc
sbb
and
insl
push
inc
out
jmp
test
stc
mov
dec
sub
push
ss
dec
xor
gs
dec
outsl
insb
rolb
mov
cmp
int3
or
daa
dec
dec
cs
jge
movsl
add
cmp
nop
push
ds
stos
sahf
mov
xchg
push
jbe
notl
push
dec
xor
flds
adc
inc
mov
mov
pop
rorb
add
lds
inc
cli
dec
mov
cld
call
jo
push
cmp
add
inc
mov
pop
adc
je
cmp
in
and
insb
gs
inc
lods
or
mov
pop
mov
idivb
lods
je
pop
jno
rcrl
push
insl
push
inc
inc
test
movsl
mov
outsl
push
shrb
les
cltd
imull
cmp
lret
mov
sub
sbb
rclb
loop
test
or
rcll
lret
es
lds
aad
jl
dec
dec
adc
inc
ret
aaa
xchg
aad
jp
ja
push
jp
sub
push
or
fidivrs
sahf
dec
xchg
inc
inc
inc
mov
test
cltd
adc
or
sub
shl
rcrb
out
fsubrl
pushf
cli
mov
jo
pushf
add
int
movsb
movsb
mov
push
imul
mov
stos
push
outsl
stos
cmpsl
popa
mov
cmp
enter
pop
nop
sti
cmp
lock
xchg
or
test
sbb
les
xor
jb
xchg
outsl
pop
xor
daa
jmp
mov
nop
clc
push
sbb
push
imulb
mov
mov
aaa
loope
cmpsb
add
sub
dec
mov
fsubrl
les
je
sbb
fisubrl
in
mov
xor
fcmovnu
lds
pushf
adc
jmp
lds
out
pop
sub
adc
int3
pushf
jnp
jae
push
sbb
out
imul
pop
pop
cmp
or
in
aam
push
mov
jg
pop
jne
jb
gs
ficoms
push
push
xor
and
mov
xlat
shlb
sbb
loop
std
outsb
pop
mov
test
jmp
mov
add
sbb
bound
test
xchg
mov
adc
lds
jp
jae
mov
or
dec
mov
stos
pusha
and
roll
and
xlat
push
xchg
cmp
sub
cld
lret
push
movsb
loopne
mov
in
jge
insl
mov
or
or
loopne
jl
push
dec
test
jns
cmp
lea
jae
push
call
jl
pop
jb
shlb
pusha
fcomps
or
cs
dec
cs
inc
stos
or
mov
enter
bound
sub
inc
xchg
adc
insb
imul
iret
xchg
jle
leave
and
into
mov
push
sbb
push
in
push
xchg
icebp
repnz
fcoms
xchg
iret
repnz
mov
lret
dec
xchg
test
and
mov
loope
cmc
neg
push
not
jmp
and
gs
xchg
mov
aas
xchg
ja
sbb
cmpsl
mov
mull
lock
pop
in
rcl
jp
mov
rep
int3
jb
addr16
xor
dec
cmpsl
and
inc
inc
xor
mov
pop
inc
cmpsb
mov
into
leave
sti
icebp
icebp
shlb
cmp
sti
outsl
xor
fs
push
sbb
dec
adc
das
jne
xor
xchg
stos
repnz
data16
inc
mov
sub
stos
nop
rolb
popf
or
cmpsl
jecxz
mov
mov
jne
rdmsr
fmul
ss
sbb
imul
inc
inc
xor
mov
scas
jmp
dec
arpl
cmp
int
inc
sub
in
shll
or
das
ret
xlat
shrl
test
push
cmp
pusha
lea
jbe
test
sub
rcr
neg
dec
bsr
mov
and
mov
rcr
add
and
jmp
push
and
je
gs
or
in
nop
lock
add
sbb
pop
clc
aaa
mov
xor
movsl
popf
fldcw
decb
xchg
inc
sub
add
out
jge
xchg
out
push
xchg
sub
jmp
mov
adc
testb
scas
xchg
sub
inc
test
jmp
add
imul
jne
les
aam
jge
arpl
fcmovb
lcall
ret
pushf
push
shll
fwait
lcall
jp
cmp
gs
popf
in
popa
movsl
in
imul
dec
dec
mov
mov
jge
jne
mov
mov
push
dec
dec
lods
stc
inc
push
cmpsb
lgs
jno
fcmove
inc
adc
mov
aaa
rorb
sti
imul
mov
and
decb
ss
lcall
es
pop
lods
cli
outsl
xor
out
scas
sub
xchg
jne
adc
bnd
xchg
je
out
or
sbb
aam
lods
jl
inc
sbb
les
lret
insb
insb
dec
inc
fsubr
and
gs
outsl
mov
ja
xor
imul
pop
jae
filds
cmc
fnsave
sub
pop
dec
add
push
outsl
int
mov
mov
ljmp
repz
xor
cvtdq2ps
xchg
dec
mov
adc
xchg
pop
jne
sahf
sub
mov
jb
ss
push
out
lret
pop
mov
jno
ret
mov
dec
jbe
gs
dec
stos
out
cmp
mov
push
xor
clc
pusha
sti
es
out
pop
cmp
push
fnsave
add
fcmovnb
dec
repnz
cmp
loope
mov
and
adc
sti
sahf
add
mov
scas
pop
jne
jg
add
ret
sti
mov
mov
jp
inc
adc
cmc
jo
push
sarb
cltd
subb
xchg
jmp
ret
loopne
sub
pop
shll
xor
int
popa
dec
or
jmp
test
pop
fisubrl
sub
aad
xor
test
add
jmp
jle
push
jbe
gs
das
fwait
jg
adc
xor
mov
lds
sbb
add
outsb
mov
sub
std
insl
leave
movsl
insl
lret
sahf
xchg
dec
pop
and
fwait
subl
out
stos
jmp
inc
sub
jge
insl
imul
test
out
int
scas
or
sub
fstpl
and
cld
push
mov
shrl
push
outsl
fildll
stos
adc
adc
mov
lods
ret
aam
out
test
xchg
push
out
push
jne
sbb
loope
lds
xor
cmp
repnz
push
icebp
pop
mov
dec
insl
sub
jbe
int
js
push
fidivrl
xor
push
dec
jmp
std
rclb
outsl
cmpsl
test
inc
xor
mov
cs
das
inc
icebp
mov
push
ljmp
cmp
cmpsl
outsl
clc
or
negb
or
fsubrs
and
aad
xor
or
mov
push
stc
xor
test
out
repz
imul
push
outsb
or
sbb
add
out
hlt
and
cmc
cmpsb
dec
cmp
or
or
or
cmp
pusha
inc
pop
sub
push
leave
popa
push
out
subb
pop
cmp
or
adc
mov
pop
ficoml
call
and
dec
vpavgw
outsl
pop
mov
mov
sub
push
push
into
ljmp
push
sub
xlat
ds
pop
inc
jbe
push
push
jb
mov
cs
push
push
pop
fnstsw
sub
push
push
push
jle
xchg
dec
xor
xor
xchg
cmpsb
in
ret
fldcw
and
outsb
sub
dec
inc
jno
stc
mov
pop
or
unpckhps
fimuls
clc
mov
push
lahf
inc
add
lds
add
movsl
push
sbb
dec
les
mov
dec
mov
dec
roll
icebp
rol
inc
mov
push
xlat
outsl
xchg
add
dec
sub
scas
add
gs
ss
imul
add
xor
in
mov
mov
andb
mov
or
push
and
int
lret
cmp
in
dec
and
icebp
andl
jbe,pt
or
bound
xlat
xor
mov
enter
fisubl
xchg
lods
jl
mov
rorl
add
mov
mov
jb
ret
dec
xlat
xor
int
mov
leave
leave
pop
push
pop
xlat
jge
mov
inc
out
leave
out
std
jns
int
rol
test
and
mov
in
test
push
or
jmp
or
cwtl
test
test
stc
push
shrb
dec
dec
scas
mov
fwait
mov
fidivrs
dec
push
inc
rcl
jo
push
dec
imul
or
and
push
or
jmp
lret
dec
and
leave
fstps
into
sbb
loope
jmp
in
jle
pop
mov
and
fstps
jmp
cmpsl
mov
push
aam
ja
xor
sub
ret
sub
push
aaa
push
jbe
mov
xlat
push
stc
pop
cltd
lods
out
adc
dec
cmp
push
clc
out
and
pusha
lea
int
lahf
out
dec
mov
xchg
mov
mov
pop
enter
enter
mov
xor
push
or
sarb
int
sub
pop
cmp
clc
mov
xchg
leave
and
outsl
das
and
int3
cmp
jno
and
xchg
or
mov
lret
push
mov
icebp
mov
fistpl
neg
inc
imul
and
add
mov
jmp
sub
dec
lret
mov
outsl
roll
ss
mov
js
xchg
dec
jb
dec
fldenv
mov
dec
arpl
sub
push
push
and
or
and
sub
das
jbe
mov
popf
dec
xor
mov
aam
push
jns
jnp
sti
hlt
mov
push
aas
jbe
push
xchg
sbb
sets
xlat
inc
push
pushf
sub
cs
int
mov
in
push
lret
inc
fisttpll
movsl
pop
jmp
pop
aam
sti
lret
mov
mov
xor
jecxz
mov
cmpsl
add
push
cmp
sbb
pop
inc
leave
insl
and
fnstcw
lret
cmp
and
shrl
mov
mov
mov
push
or
jbe
jns
leave
jae
adc
sub
iret
stc
data16
mov
fstpl
mov
lcall
or
stos
mov
dec
dec
jns
loopne
pop
popa
fistl
lock
sub
or
das
inc
jno
add
xor
out
sub
sub
imul
rorb
jg
iret
mov
ja
add
cmp
stc
mov
lahf
pop
push
cmp
mov
aaa
xchg
add
jp
sarb
pop
mov
jne
cli
mov
inc
stos
push
push
xchg
add
rcrl
pop
outsl
sub
inc
xor
fiaddl
mov
adcl
dec
rorb
mov
sbb
xor
loopne
inc
cmp
jns
nopl
ret
sbb
rorl
fwait
addr16
rorl
cltd
dec
outsb
pop
jecxz
testb
leave
into
inc
rcrl
lods
mov
mov
ss
mov
aad
rclb
shr
jbe
inc
dec
xor
aam
std
notl
and
push
adc
mov
add
cmp
mov
jns
test
mov
ja
push
int
dec
pop
dec
and
rcl
test
adc
push
pop
add
jbe
jns
jno
ja
xchg
pushf
dec
cs
mov
test
sub
adc
inc
add
mov
or
push
and
inc
sti
inc
jns
xlat
xchg
stos
dec
push
test
gs
dec
dec
inc
in
call
mov
lret
inc
cmp
cld
jmp
inc
dec
or
push
je
sub
dec
jbe
inc
ds
sbb
push
or
pop
inc
pop
push
mov
imul
xor
scas
inc
jno
dec
jno
dec
sub
mov
cmp
push
loop
inc
push
add
aad
jecxz
ljmp
jp
mull
sbb
les
mov
test
pop
aam
pop
dec
pop
jnp
lock
testb
vpdpbusd
push
imul
ss
sahf
xchg
and
push
clc
inc
cmp
test
or
sub
lds
lcall
iret
push
sub
out
or
inc
iret
pop
shlb
je
mov
mov
cltd
xchg
shlb
pop
ss
pop
mov
xchg
push
mov
fnclex
lods
xchg
dec
sub
mov
push
lea
dec
push
inc
ss
sar
dec
lds
leave
ss
adc
js
dec
sbb
sub
push
mov
pop
xchg
ja
add
mov
or
pop
push
pop
ja
in
fwait
cs
int3
aam
lods
sbb
insl
adc
and
inc
gs
jbe
xchg
lods
inc
jp
pop
mov
aam
push
fadds
js
mov
pop
push
jge
stc
sbb
sub
loope
in
or
rclb
mov
xchg
cld
lock
fcoml
rcr
mov
xchg
fldz
push
lret
or
adc
in
mov
push
cmp
dec
shrb
push
dec
lds
jbe
xchg
xlat
clc
push
and
add
jecxz
call
js
inc
pop
pop
aad
pop
or
popa
sbb
mov
cmp
or
stc
push
push
pop
push
fnstcw
imul
and
test
and
xor
sub
roll
sub
js
lds
mov
lahf
xchg
jns
jle
stos
pop
shrb
shl
sahf
adc
push
sub
push
aad
enter
shl
test
enter
push
icebp
xchg
cmp
aaa
mov
dec
aam
aas
fldcw
fadds
jmp
cmp
inc
dec
dec
roll
pop
cmp
mov
sti
enter
pop
daa
je
sti
subb
push
mov
pop
ja
or
mov
fsts
shll
out
add
xchg
jmp
pusha
subb
loopne
add
pop
lret
push
test
out
push
mov
enter
scas
push
ss
lcall
fimuls
or
dec
aad
xor
or
add
inc
add
mov
mov
icebp
mov
mov
leave
inc
xor
or
cmp
dec
mov
push
clc
nop
mov
and
int3
fistl
dec
cmp
ds
shll
or
sahf
in
pop
imul
in
test
stos
pop
adc
repz
cmp
dec
stc
sub
dec
push
add
lahf
cmp
jns
int3
sub
outsb
jns
leave
loopne
or
hlt
mov
pop
push
push
int
rcl
sub
movsl
sbbb
rorl
js
pop
popf
xor
popf
and
repz
and
aaa
test
jecxz
imul
add
fcomps
dec
int
mov
stc
sub
enter
lods
sbb
sub
pop
adc
and
and
mov
shr
aaa
jno
test
add
aad
int3
inc
mov
mov
cmp
sub
lcall
clc
stos
adc
push
fidivl
inc
std
jmp
pop
shrb
inc
pop
cmpsb
lret
add
mov
pop
or
in
xchg
dec
pop
pop
outsb
lret
sbb
iret
mov
ffreep
test
mov
or
idivl
aad
sub
scas
dec
pop
fs
cmp
xchg
dec
movl
int
push
sub
cmp
push
sub
popa
int3
sbb
test
add
inc
shll
pop
dec
pop
lock
or
xchg
mov
jns
pop
pop
push
int
jp
xlat
fwait
mov
sbb
jmp
loope
inc
push
shll
js
mov
enter
iret
pop
loope
shl
sbb
push
rorl
punpckldq
loope
mov
sub
popf
xor
dec
pop
mov
daa
aam
push
sahf
adc
pop
pop
jae
lret
and
sbb
cmp
adc
aad
jmp
push
popa
cmp
int
xlat
jae
mov
xlat
and
mov
add
pop
mov
cmp
or
nop
rorb
enter
mov
out
xchg
cmp
dec
sub
inc
popa
or
mov
push
inc
lret
pop
loopne
pop
sub
mov
hlt
xor
icebp
insb
push
sub
lods
in
fimull
loop
mov
inc
in
out
mov
lret
mov
in
xor
inc
cmp
or
test
or
int
mov
pop
or
or
xor
nop
mov
mov
sbb
inc
dec
leave
and
mov
xor
sub
push
sub
xor
cmp
jnp
push
out
push
push
loope
dec
xorl
and
inc
es
cmp
push
pop
pop
add
loop
mov
sub
adc
jle
cs
xchg
mov
dec
addl
adc
aam
dec
imul
fsts
xor
dec
lds
lea
fisubs
bound
loop
imul
ja
mulb
inc
pop
jmp
add
sbb
ja
popa
push
adc
jne
lret
and
adc
leave
in
repz
popa
ss
pop
fadd
and
inc
push
leave
mov
dec
jno
xchg
jp
stos
push
push
inc
adc
dec
pusha
std
fsubs
and
xor
xor
in
lods
mov
fisttpll
lcall
fimull
pop
mov
fwait
rorl
scas
mov
sub
xor
leave
testl
xchg
push
jne
mov
push
and
cmpsb
movsl
jno
int
ds
or
inc
pop
pushf
enter
dec
notl
cld
imul
mov
jns
aam
jmp
arpl
cld
jmp
and
or
dec
fwait
xchg
mov
push
push
inc
fildll
push
dec
hlt
lods
sub
lods
sub
out
pop
jmp
push
xchg
mov
mov
shll
sbb
xor
dec
or
xchg
fbstp
repnz
in
loopne
add
xor
in
and
or
mov
add
push
xlat
sarl
dec
jl
pop
lret
fldln2
or
int
test
int
sub
fmuls
jne
add
sbb
inc
lcall
aaa
push
popf
xor
add
and
ret
adc
sarb
fmull
mov
clc
jne
mov
pop
stos
pop
lret
stos
sbb
lahf
xchg
push
int
jmp
imul
push
lahf
cmc
stc
jo
aas
adc
or
jle
sbb
testb
clc
mov
inc
cmc
and
add
and
sub
icebp
xor
test
shll
lds
in
lret
aad
cwtl
push
lret
mov
adc
in
stos
push
cmc
cmp
or
add
jecxz
les
mov
pop
cwtl
pop
dec
stos
pop
into
pop
sub
add
adc
stos
pop
repnz
mov
in
sub
sti
shll
and
pop
cmpl
das
out
sub
push
jmp
adc
sbb
jmp
cmp
push
int3
inc
test
or
les
mov
push
or
push
dec
push
imul
rorl
pop
push
cs
pop
dec
mov
lret
aas
cmpsb
pop
jbe
dec
or
and
leave
pop
dec
pop
cs
pop
shl
pop
rolb
jo
movsl
push
xor
jb
xchg
push
scas
jbe
stos
dec
shll
and
jb
add
stos
clc
cmpsb
push
mov
inc
jo
mov
imul
xchg
cmc
call
jb
mov
jb
rcrl
fsubrs
xor
cmpsl
rol
add
add
aas
lods
enter
lds
add
ja
leave
lret
out
fcmovbe
ss
mov
push
mov
rolb
pop
pop
sbb
lods
rorb
lcall
push
insl
pop
xchg
xchg
loope
rcl
xor
cmp
jg
pop
stos
pop
mov
add
push
test
adcb
add
lret
inc
xchg
cmpsb
add
arpl
mov
pop
cmp
jecxz
sbb
dec
sub
pop
sub
sti
out
dec
and
sbb
adc
imul
lcall
popa
test
es
dec
push
mov
out
add
inc
shl
fnsave
sub
adc
xor
fstps
lret
inc
and
scas
add
adc
sbb
inc
ret
mov
pop
mov
aam
add
dec
jge
sub
add
xchg
call
inc
sarl
dec
fsub
fcoms
inc
adc
xor
int3
mov
jnp
pop
and
sbb
test
mov
xor
pushf
popa
in
xlat
lods
es
lret
idivl
nop
lret
push
lods
xchg
dec
sub
loop
daa
push
adc
mov
push
inc
pop
lods
lea
add
pushf
fmuls
stos
push
fnsave
push
in
pop
xor
adc
pop
adc
mov
and
ss
adc
xchg
imul
out
sahf
jg
ljmp
fst
sbb
leave
adc
mov
leave
mov
mov
cmp
xchg
rcrl
movsl
or
clts
add
popf
xor
push
ss
das
sub
add
add
shll
push
xchg
xor
cwtl
cmpl
out
mov
mov
ss
outsl
clc
decb
popl
call
aas
xor
push
jge
jp
xor
ret
and
cwtl
jge
pop
das
xlat
sub
jecxz
mov
or
push
jmp
aas
inc
adc
insl
das
leave
call
sub
cmp
push
ret
insl
data16
enter
mov
mov
push
inc
adc
mov
adc
adc
mov
in
fwait
cmp
push
stc
jae
mov
inc
loope
fdivr
stos
jae
out
lock
movsl
out
cmp
pop
sub
sub
mov
push
jne
sbb
push
inc
mov
adc
push
ret
inc
add
mov
insl
push
xchg
ss
pop
cltd
mov
in
sbb
adc
xchg
cs
call
es
push
push
push
add
sub
pop
push
push
cs
outsl
cltd
and
xchg
das
dec
or
sarl
enter
pop
jecxz
push
pop
dec
loop
cltd
mov
mov
push
ficomps
cmp
out
popa
adc
and
pop
dec
cwtl
repz
aas
data16
cmp
cli
adc
or
imul
rcrb
or
mov
cmp
js
jns
cmp
adc
fldcw
test
or
not
ds
jnp
cmpsb
movsb
jns
outsl
sub
lea
xchg
mov
xchg
sbb
or
orb
insl
sbb
dec
and
pop
pop
shll
std
out
sbb
fwait
sbb
iret
add
bound
xchg
jmp
flds
or
call
aam
inc
div
jge
jp
jne
pop
add
lret
inc
add
cltd
xor
stos
jp
dec
xchg
sbb
daa
arpl
add
call
in
jge
dec
aad
insb
in
ror
insb
lods
add
or
dec
lcall
ss
dec
pop
lret
jg
xor
lods
aad
movsl
decl
mov
sbb
sub
dec
loop
negb
dec
push
cltd
inc
fstl
lahf
pop
and
lret
adc
and
icebp
mov
pop
sub
cmpsl
sub
cmp
cli
imul
xor
push
inc
cmc
add
ja
lock
inc
adcb
shlb
jmp
shlb
pop
mov
sub
xchg
repz
push
movsl
lds
fists
jno
mov
jbe
push
rclb
jg
and
pop
xlat
fwait
insl
scas
and
pop
insb
cmpsb
or
mov
mov
jno
inc
push
and
sub
cmc
mov
cld
jmp
mov
setle
rorl
inc
mov
xchg
fnstenv
jo
dec
flds
or
pop
push
lahf
in
in
or
adc
cwtl
pop
xor
jnp
and
aad
sub
push
roll
add
cmp
adc
iret
inc
push
push
daa
jns
jns
sub
pop
lock
int
and
xchg
xor
inc
imul
mov
int3
inc
or
or
inc
lds
shll
cmp
and
testb
inc
add
lds
rcl
dec
out
loopne
inc
int3
adc
jae
xchg
lretw
mov
in
ds
pop
jle
inc
mov
fadds
lods
push
rcr
mov
shrl
sub
cmp
jns
push
xor
jo
push
dec
push
push
and
les
into
mov
push
cs
lods
push
jno
push
and
lret
rcl
aad
aad
push
or
lock
push
test
adc
dec
jno
adc
and
xchg
daa
xor
add
clc
mov
pop
roll
and
mov
and
jmp
and
shll
or
fdivrs
call
xchg
or
lock
mov
push
nop
lahf
in
rcr
neg
dec
int
jmp
ss
xchg
lea
push
mov
adc
mov
cmp
push
dec
aas
fwait
aam
insl
adc
add
mov
sbb
mov
jno
jnp
inc
stos
sbb
mov
fisubl
fcomps
call
fistpll
sub
aaa
cmpsb
dec
xchg
cmp
push
aad
and
test
lcall
mov
sbb
pop
jge
out
adc
fimuls
pusha
sbb
jecxz
and
xor
add
add
pop
leave
sbbl
mov
push
xor
lock
mov
shl
hlt
loope
fisubrl
outsb
push
lock
sar
dec
fdivrs
lret
xchg
or
lret
pop
mov
fdivrs
mov
push
test
push
xor
cmp
mov
loope
imul
sub
push
jp
lret
jmp
xor
imul
bswap
mov
xchg
dec
inc
and
aas
icebp
mov
adc
add
mov
gs
loopne
mov
in
mov
jb
xchg
outsl
pop
and
jb
fdiv
mov
adc
mov
movl
arpl
jns
sub
pop
add
mov
clc
mov
push
mov
add
push
dec
out
cmc
loope
loop
int3
out
mov
rcll
xchg
cli
imul
mov
outsl
sar
std
add
inc
or
scas
pop
js
je
mov
int
mov
scas
mov
iret
int
clc
loop
pop
cmp
stc
fisubl
push
lret
jmp
std
nop
pop
dec
mov
fdivrs
sbb
cmpsb
sub
jmp
xor
lods
int
faddl
inc
movsl
clc
mov
mov
aad
inc
adc
sbb
adc
xchg
cmpsb
sarl
mov
shrl
test
jbe
enter
stc
add
fimuls
sub
lcall
inc
mov
push
or
pop
pop
jmp
mov
dec
aam
and
add
les
jbe
inc
out
inc
push
xchg
in
in
or
std
fimull
push
or
pop
pop
inc
jecxz
fdivp
loopne
into
xchg
mov
test
nop
out
cmp
pop
enter
enter
loope
faddp
push
sbb
xor
xor
stos
sub
xchg
sbb
xchg
or
or
or
rcrb
pop
cmpsb
fwait
leave
cmp
push
loop
and
sub
cwtl
leave
push
stos
sar
or
dec
push
testl
dec
hlt
icebp
xor
push
pop
inc
lods
jmp
sbb
in
fisttps
fiaddl
sub
inc
sbb
or
push
dec
cmpsb
fmul
xor
testb
lret
les
stos
out
or
ret
mov
pop
popf
fsts
mov
ds
out
sub
icebp
jno
clc
or
jns
insl
add
mov
out
xchg
call
mov
dec
push
adc
xor
fcmovu
fwait
sbb
pop
or
add
cli
mov
adc
loop
mov
mov
rorl
test
sub
test
pop
push
testb
cmp
divl
xchg
push
roll
pop
or
and
test
ficoml
mov
pusha
sub
pop
mov
sti
aam
and
mov
sar
fxtract
mov
imul
xchg
inc
bound
jmp
jmp
or
push
xor
cmpsl
decb
push
ja
inc
mov
repz
xchg
push
push
aad
sbb
jo
sub
pop
gs
shlb
and
mov
dec
in
popa
std
jbe
lods
add
in
jbe
fwait
or
dec
mov
ja
pop
push
out
xchg
adc
scas
mov
lea
push
pop
and
sub
aad
cmp
imul
std
jle
sbb
out
xor
shrl
dec
xor
or
mov
xor
push
dec
jb
add
orl
inc
or
shlb
inc
adc
sarl
pop
xor
cwtl
push
clc
addb
and
arpl
add
push
cwtl
loope
shll
or
cmp
iret
jmp
divb
xor
shrl
sarb
test
ss
adc
push
movsl
fsts
mov
push
cmp
lahf
lods
or
shrl
loope
inc
mov
stos
pop
testl
jmp
inc
mov
jne
rorb
or
dec
mov
add
cmp
adc
mov
ror
popa
ficoms
sbb
and
loope
xchg
push
add
insl
xor
aaa
mov
fidivrs
insl
add
insl
push
and
mov
int
int3
mov
jmp
xchg
je
dec
cmp
mov
mov
mov
ss
pop
ljmp
rcrb
stos
dec
add
jp
cmp
mov
insl
mul
mov
addr16
push
dec
rcll
out
lret
adc
lods
aad
push
adc
dec
insl
dec
enter
and
hlt
xor
cmp
std
mov
cmc
push
dec
cmp
lret
bound
scas
ja
test
test
sbb
shlb
mov
dec
dec
pop
sbbl
idivb
int
stc
aam
dec
or
orl
mov
inc
adc
sbb
sahf
jg
leave
loop
fidivl
sub
dec
iret
iret
jae
shlb
movsl
pop
test
inc
push
pop
daa
jbe
sbb
stos
cmp
jecxz
jmp
scas
sub
add
fsubr
arpl
lea
jmp
lret
arpl
sub
jmp
lret
add
negl
fnstcw
addr16
movntps
lea
sub
add
out
sub
and
rcrl
mov
inc
in
cmp
dec
pop
pop
xchg
add
push
in
icebp
jl
mov
repnz
pop
outsl
xor
call
add
mov
test
xchg
rcll
xor
jbe
push
das
mov
jg
inc
movsb
adc
mov
jmp
hlt
sarl
sahf
cwtl
mov
and
push
sbb
add
mov
xor
and
icebp
insb
imul
add
push
adc
sub
pop
das
add
lcall
mov
push
lock
lock
xchg
push
adc
inc
das
or
push
cwtl
jle
cltd
and
nop
jmp
cs
lret
mov
mov
loopne
pop
and
dec
mov
sub
mov
mov
fildll
mov
cmp
incl
or
sub
add
test
add
mov
fimull
loopne
and
pop
mov
loopne
sub
fmul
mov
notl
xchg
xor
and
popf
fidivrl
idivl
xchg
aam
loopne
mov
pop
lret
imul
inc
xlat
dec
xchg
dec
test
mov
inc
jl
dec
inc
popf
idivl
mov
sahf
mov
cs
lcall
loopne
test
and
repz
scas
dec
push
fdivr
jge
cmp
add
jg
fxch
xor
lods
adc
aaa
push
jmp
fcompl
or
das
or
jle
or
int
push
lret
pushl
or
adc
loope
outsb
loop
ljmp
testl
or
push
subl
pop
sub
cmpsl
iret
out
lret
inc
dec
mov
pop
inc
adc
jmp
push
add
and
dec
fnstsw
ljmp
aam
rorb
loopne
and
push
jae
iret
xor
cs
fildl
bound
pop
nop
pushf
aas
jnp
inc
rcl
sub
push
pop
imul
add
dec
jl
pop
outsl
mov
sbb
repnz
pop
cmpsb
aad
pop
cmp
pop
loope
jge
and
xchg
lds
and
pop
data16
pcmpgtd
push
xchg
vpaddq
push
fcmovnb
push
repz
sbb
cmpsl
sbb
dec
pop
packsswb
xlat
shlb
jmp
push
sahf
sub
jl
in
dec
stos
testb
xor
imul
loopne
sbb
lret
ror
mov
jl
outsb
rolb
mov
sbb
flds
int
stos
fcoms
push
stc
pop
cmp
pop
xor
into
test
jge
sbb
sbb
pushf
sub
pushf
gs
daa
dec
sub
add
and
inc
addb
mov
mov
mov
inc
rcr
or
outsl
or
add
out
notb
or
das
rcl
cwtl
sbb
fldenv
fs
inc
mov
xchg
jle
or
mov
cmovae
fcoml
faddl
cwtl
jmp
loope,pt
mov
mov
inc
inc
sub
inc
dec
test
and
orl
cs
inc
fadd
out
lods
int3
mov
pop
dec
mov
mull
cs
add
xor
cmp
stc
fcmove
mov
hlt
dec
pop
enter
push
dec
cmp
loope
lods
cmpsl
lock
dec
mov
add
inc
leave
pop
jae
jbe
pop
inc
out
into
cmpb
cmp
aas
cmp
and
jnp
shr
or
cld
sbb
mov
rclb
dec
call
push
nop
bound
xlat
roll
or
int3
mov
cmpsb
test
test
sbb
inc
sarb
cmpl
xor
dec
mov
daa
xchg
ja
and
mov
rclb
mov
jo
add
out
adc
cmc
sbb
mov
sar
sub
add
fsubs
add
mov
clc
jb
or
adc
dec
loop
movsb
add
push
jae
loop
cmp
pusha
and
push
jp
mov
pop
fisttps
fnstcw
xor
cmp
inc
fwait
cmp
and
enter
cmp
pop
add
in
bound
xor
mov
cmp
add
test
dec
mov
stc
fiaddl
adc
dec
popa
pop
mov
into
add
cltd
add
pop
mov
mov
sub
jne
pop
movsl
out
sub
cmp
outsl
add
bound
test
bound
dec
imul
shrl
xor
pop
dec
aad
ret
xor
cld
xchg
loope
or
dec
sarl
test
jle
and
dec
and
mov
jge
inc
push
xor
in
insl
adcb
mov
dec
push
push
stc
sub
int3
pushf
das
int
es
hlt
xchg
sub
mov
mov
adc
mov
and
test
imul
sub
inc
decl
arpl
decl
js
fdivl
jmp
add
or
clc
mov
pop
neg
sbb
sub
call
dec
imul
pusha
shll
mov
sbb
inc
movl
push
fsts
mov
in
popf
ficoms
mov
fnsave
mov
pop
rcl
sbb
clc
jmp
pop
sub
out
xor
ror
pop
mov
aas
ret
movsl
xlat
int3
cld
mov
in
pop
mov
xlat
sbb
orb
push
test
jne
push
repz
std
sbb
hlt
mov
push
xchg
movsl
jne
enter
push
fistpll
cmp
dec
sbb
push
mov
mov
fwait
daa
insb
adc
mov
sub
out
jns
mov
sahf
sub
xor
loop
pop
inc
jle
test
dec
insb
dec
and
ficompl
xor
adc
shrl
sub
xor
les
enter
cli
jmp
outsl
jns
pop
aam
arpl
sub
or
std
incb
jbe
sub
cmp
mov
popa
test
adc
jge
sbb
inc
cmp
cmp
andb
mov
int3
rorb
lret
add
outsl
jns
push
cmpsb
loop
into
fisubl
push
stc
aam
aam
movsb
sbb
mov
cmpsb
xor
mov
out
lea
cmpsb
shrl
mov
jg
roll
add
sti
xor
dec
sbb
jo
cmp
cmp
adc
adc
lds
jmp
hlt
pop
add
cli
lds
cmpsb
mov
jle
hlt
aaa
push
jp
fxch
cmp
sbb
jb
or
mov
cmp
xor
test
in
lock
mov
mov
je
nop
pop
pop
mov
es
loopne
inc
xor
mov
mov
insb
fcomps
fdivrs
lret
rcr
jp
not
leave
and
fstps
in
dec
movsb
jp
sub
jl
cwtl
adcb
sub
jp
sbb
push
mov
mov
lret
dec
jo
out
testb
aad
setp
and
inc
and
dec
and
dec
jmp
inc
into
pushf
scas
aaa
push
adc
add
adc
sbb
imulb
js
rclb
add
test
or
neg
add
and
aam
cltd
ror
add
jl
sbb
mov
add
adc
flds
mov
mov
fimull
shrl
mov
rol
and
nop
jb
fidivrl
ror
popa
fimull
jne
pop
adc
inc
lock
aaa
out
add
jnp
gs
shlb
push
cmc
sbb
clc
sub
jmp
ret
pop
lret
data16
dec
mov
cld
sarl
push
daa
add
aas
cmp
cmp
push
lret
js
lret
out
sub
jae
ljmp
xchg
ror
mov
js
arpl
push
jae
adc
cmp
xorb
mov
push
popa
inc
repnz
mov
imul
hlt
mov
arpl
stos
out
aad
or
rorl
mov
sub
jmp
in
idivl
insl
or
lret
mov
fisttpll
and
enter
push
stc
push
jbe
icebp
mov
clc
mov
push
xor
cmpsl
jne
dec
mov
push
or
pop
xchg
mov
mov
mov
incb
push
push
addr16
lods
dec
movsl
sarl
cwtl
popa
aam
jbe
addr16
iret
jnp
cmp
int
add
insl
lret
lds
leave
inc
xor
mov
and
std
push
enter
xor
lcall
and
loopne
push
or
bnd
inc
pop
inc
out
add
push
fbld
rorl
test
add
sub
cmp
cwtl
xor
add
in
cmp
cmp
lret
incl
repz
jmp
cs
adc
mov
outsl
add
add
jns
pop
test
pop
jp
cmp
test
inc
test
fucomp
andb
pop
cltd
int
fldt
and
data16
mov
xchg
mov
inc
shrb
mov
pop
je
addb
fisubrs
rcl
dec
xlat
mov
jge
dec
adc
push
and
cltd
add
clc
aam
mov
jmp
das
in
int3
sub
dec
shll
or
and
nop
rcl
mov
stc
mov
lahf
das
or
fimuls
ss
mov
mov
stc
pop
shlb
pop
mov
mov
push
inc
jp
fsubl
mov
dec
fnstenv
push
cmp
mov
sbb
stos
mov
loope
mov
sub
mov
mov
push
int
adc
mov
or
pusha
mulb
xor
pop
push
adc
fdivs
add
lods
mov
cmp
sbb
cs
cmp
stc
fiaddl
popf
and
faddp
repz
add
ss
je
pushf
cmp
inc
pushf
lods
xchg
lods
cltd
pushf
and
nop
test
dec
push
aad
ja
js
pop
push
xchg
lea
mov
fldt
rclb
sub
add
das
jmp
lret
inc
mov
sti
xchg
popa
fwait
add
sub
push
mov
mov
int3
push
mov
or
or
sbb
dec
loopne
mov
or
clc
mov
cmpsl
push
outsl
pop
or
test
adc
sbb
xor
dec
pop
mov
mov
adc
add
mov
test
outsl
adc
in
xor
jnp
inc
sahf
add
adc
cmp
cmpsl
adc
adc
subl
mov
xchg
cli
sub
sub
into
int
pop
stos
sbb
int
imul
mov
sbb
shlb
mov
in
daa
sti
lock
int3
int
dec
es
cmp
and
sub
xor
in
adc
pushl
cmp
cmp
cli
push
hlt
cmpsb
add
jnp
in
sub
leave
ficoms
or
mov
adc
dec
push
shr
pop
cmp
xchg
shrb
push
les
faddl
shrb
cmpsl
das
faddp
sub
xor
ret
mov
mov
lea
adc
cmc
push
push
sub
fistpl
pop
ficoml
jl
popf
mov
xchg
popf
fnsave
lods
jmp
pusha
adcl
loop
movsb
das
lret
jnp
stos
in
add
cwtl
pop
in
push
stos
lods
or
and
fcmovne
pop
pop
fimuls
mov
pop
stc
mov
lcall
dec
iret
xchg
and
loope
xchg
push
enter
jle
push
movlps
xchg
int3
stc
enter
test
add
dec
inc
pop
lock
shll
loop
lret
repz
call
sub
push
xor
adc
sub
in
add
lret
or
sbb
jb
lret
or
push
cld
daa
leave
add
mov
or
jo
ret
jne
js
pop
js
aaa
xor
cwtl
inc
daa
lods
pop
ss
jno
and
cmp
push
mov
aaa
push
movntps
stos
movsb
test
jbe
in
jecxz
lds
push
loopne
sbb
push
xchg
sar
shlb
js
test
ficoms
jb
clc
or
sbb
push
pop
mov
xchg
loope
pop
fwait
cltd
ret
popa
fmull
sbb
lret
push
adcl
insb
sbb
orl
cwtl
mov
dec
je
dec
fstps
out
inc
fcomp
out
mov
ror
add
je
and
fdivs
pop
adc
fmuls
add
mull
in
sub
fdivr
sub
andl
je
adc
clc
call
clc
aaa
cwtl
sbb
shl
sbb
mov
aaa
lods
adc
aam
dec
sub
lods
mov
jns
ret
pop
xlat
in
mov
in
xchg
je
sub
sbb
js
movb
mov
push
imul
adc
popa
cmp
stos
xchg
into
insl
mov
nop
and
in
popf
cmp
sub
sub
sub
mov
sub
into
in
out
mov
push
xor
imul
sbb
sti
rorl
lea
push
sbb
sub
push
jae
mov
divl
adc
cmp
mov
xchg
addb
push
nop
jno
mov
icebp
fldenv
les
jbe
int3
mov
popl
data16
inc
push
sbb
icebp
cmp
add
cmp
fninit
adc
popl
cmp
add
and
inc
aas
jns
mov
ret
aad
addr16
cmpsb
fadds
fisttps
pop
fcompl
cmp
adc
outsl
orb
mov
sub
dec
mov
repz
hlt
sbbl
push
imul
mov
dec
imul
repz
push
pop
mov
repz
aad
inc
incb
outsl
add
imul
xchg
mov
data16
sub
iret
push
lret
fwait
lret
sbb
xchg
cmpsb
outsl
aad
push
flds
out
dec
and
les
popa
dec
shlb
pop
lahf
add
hlt
dec
in
push
scas
add
shll
inc
xchg
addl
aam
popa
xchg
cwtl
and
gs
push
xchg
add
jo
aaa
adc
pop
fsubl
mov
andl
pop
insl
mov
jb
imul
mov
push
ljmp
aad
mov
push
iret
pop
js
addr16
mov
jp
xor
jae
stos
daa
xchg
sub
xchg
pop
sub
in
push
movl
cmc
sub
cmpsl
dec
outsl
xchg
subb
mov
pop
sub
in
jno
and
lock
mov
out
add
inc
imul
cmpsl
or
xchg
out
int3
dec
sarb
dec
popa
out
mov
dec
jge
aad
sahf
fcmovbe
cmpsl
andb
psrlq
push
shl
mov
shll
push
push
lods
pusha
pop
ss
fwait
sbb
xchg
rorl
sbb
adc
pop
roll
je
dec
push
and
nop
into
sub
add
dec
inc
dec
push
stc
aad
int
aas
sub
in
sbb
ficoml
pop
sub
sub
hlt
loopne
push
mov
pop
adc
jmp
sub
test
shrb
test
sti
or
cmp
mov
pop
push
adc
add
int
negb
bound
lret
pop
sti
pop
ja
or
push
push
or
mov
imul
xlat
xchg
rol
les
or
loop
push
out
inc
jp
or
aam
arpl
in
sub
daa
fstpl
jb
lret
pushf
xchg
insl
fidivrl
callw
imul
mov
or
xor
in
imul
out
mov
sub
movsl
sub
movsl
pop
cld
pop
mov
mov
test
jns
addl
in
inc
ds
mov
rcll
or
push
jns
dec
mov
push
cwtl
pop
jp
sahf
pop
pop
pop
mov
and
xchg
mov
mov
sub
cmpsl
add
rorb
fdivrp
lcall
shl
dec
sbb
adc
fs
iretw
fwait
pop
ret
outsb
cmp
pop
mov
and
inc
rcrb
dec
dec
movsb
into
inc
in
lret
xor
clc
jne
xchg
pop
daa
rorb
add
xchg
testb
imul
mov
mov
dec
add
or
sub
test
xchg
push
or
lods
pop
outsb
dec
mulb
jne
xchg
push
repz
pop
sbb
aam
jns
pop
int3
sbb
mov
jb
pop
jb
inc
pop
or
outsl
repnz
fcoml
orl
repnz
shlb
adc
jl
xorb
dec
or
arpl
mov
sub
cs
pop
sti
in
sub
les
dec
into
in
push
std
les
testl
xchg
in
push
and
mov
pusha
sub
in
fnstenv
and
dec
mov
fcoml
addl
cltd
add
aaa
loope
dec
adcb
sub
ss
or
ret
pop
and
cmp
and
outsl
xchg
test
repz
je
in
out
rclb
fld
gs
pop
inc
cmc
out
mov
ljmp
fsubp
fstps
add
mov
gs
aaa
ficoms
ljmp
gs
jecxz
pop
jb
or
insb
gs
fcom
dec
in
mov
gs
hlt
and
push
js
jae
hlt
add
mov
shrb
jp
lods
ss
add
imul
adc
dec
stos
and
into
inc
mov
pop
aam
lods
addb
mov
lods
rorl
push
ja
lock
push
pop
aad
dec
dec
out
fldcw
out
popa
xchg
ss
cmp
push
dec
fistl
pop
adc
cmp
mov
lret
sbb
mov
xchg
or
addl
xlat
xorb
xlat
jnp
jb
sbb
loope
and
fimuls
in
cmc
xor
mov
aas
sbb
lods
orb
in
jmp
cmpsl
jo
in
jns
pop
aad
push
into
dec
jno
mov
add
subb
mov
insb
ret
in
adc
jecxz
xchg
movsl
mov
cmp
fistps
clc
cmp
push
cmp
push
sbb
jmp
sub
aam
pop
scas
inc
push
jle
insb
xor
pop
bound
xchg
ljmp
sbb
addr16
sbb
sub
sub
in
jl
std
inc
loopne
hlt
xchg
pusha
cmp
push
sub
cmp
icebp
inc
call
pusha
in
pop
push
jne
push
data16
lods
xchg
and
add
mov
jle
aam
loope
fyl2x
add
push
mov
bound
and
sub
ljmp
pop
lods
mov
repz
sub
pop
xor
ret
nop
lret
sub
lahf
push
pushw
mov
pop
mov
add
outsb
cmc
popf
lods
xlat
xlat
int3
pop
cmpsl
adc
ret
xor
ret
pop
pop
mov
mov
sbb
addr16
push
add
dec
add
lods
push
jge
sub
jl
test
dec
sbb
add
sbb
mov
push
sbb
jecxz
jecxz
imul
inc
jmp
rcr
pop
and
inc
mov
inc
jns
insb
das
jge
push
lods
cs
mov
jle
das
and
push
xchg
sub
insb
pop
fbld
insl
les
sbb
arpl
jno
sub
lods
jae
mov
pop
cld
int
arpl
push
orb
mulb
ror
add
jl
lods
cwtl
rorb
push
lds
push
mov
pop
adc
pop
xor
fwait
xlat
mov
std
dec
cmp
int3
ljmp
push
daa
xor
addl
cmp
in
fdivs
sbb
or
sub
loope
fnstcw
pop
cmp
xchg
mov
enter
mov
imul
add
jo
dec
mov
adc
std
test
add
or
cmp
inc
pusha
mov
mov
jb
lahf
cmpsl
stc
push
push
pushf
arpl
inc
push
dec
clc
fimull
bound
imul
shlb
icebp
ret
inc
dec
inc
pop
jp
ret
mov
pop
filds
jmp
loop
jne
fldenv
ret
mov
sbb
dec
inc
rep
mov
sub
add
inc
mov
sbb
mov
std
adc
and
add
xchg
sub
loop
mov
pop
scas
sub
pop
daa
aad
int
cld
lcall
loop
push
or
mov
daa
mov
sub
pop
shlb
lods
add
xor
push
and
pop
jmp
and
cld
add
movsb
jl
pop
cmp
jns
mov
js
mov
dec
lock
mov
xchg
and
mov
int3
add
inc
push
stc
rcr
or
rclb
popa
dec
fcomps
jns
hlt
and
fsubrl
pop
sub
movsl
jne
xchg
aaa
pop
or
mov
pop
pop
fisttpl
xchg
push
mov
into
add
or
and
mov
in
scas
shlb
lds
ret
xchg
aas
dec
adc
adc
inc
pusha
aad
lret
mov
push
inc
pusha
aam
in
iret
jb
sarl
inc
pop
les
add
frstor
push
or
pop
add
add
and
mov
rorl
add
imul
dec
sub
mov
mov
xchg
mov
pushf
arpl
sub
mov
or
fldenv
sub
ret
mov
add
subl
mov
mov
sub
mov
push
mov
ret
subl
mov
cs
outsl
pop
jo
xchg
push
add
out
pop
ret
subl
fwait
push
ret
enter
in
aas
ret
scas
int3
push
movsl
push
mov
mov
shrb
fcmovnb
mov
mov
les
add
sub
adc
fcomip
nop
mov
xchg
fidivs
xor
mov
push
int3
xchg
mov
mov
dec
aas
jle
xchg
jecxz
lcall
aam
je
pop
jecxz
aad
dec
add
mov
test
fsubrl
gs
fsubr
popf
inc
popf
lcall
or
cwtl
adcb
fdivrl
gs
push
xchg
in
test
adc
and
add
ja
and
push
push
aad
aam
push
push
mov
mov
and
gs
pop
inc
mov
jae
aas
mov
sahf
mov
and
lds
mov
mov
movsl
dec
pop
cs
shlb
push
jge
js
bound
pop
in
sub
inc
in
cmc
adc
ficoms
int3
arpl
lahf
int3
pop
pushf
adc
inc
mov
xchg
push
lahf
jp
xchg
add
test
push
repz
push
addb
sbb
ja
and
loop
daa
push
push
aad
push
sub
pusha
adc
jge
das
push
js
fdivl
test
dec
into
cmp
sub
xchg
xchg
add
aam
inc
and
pop
mov
xor
xor
sbb
repnz
and
add
imul
cmpsb
xchg
loop
daa
push
mov
arpl
aam
push
aad
movsb
and
push
aam
mov
and
add
pop
std
xchg
rorl
jecxz
sub
mov
inc
movsl
mov
dec
and
add
mov
ljmp
inc
xlat
jp
fwait
adc
inc
loope
inc
pop
aad
rcr
mov
jnp
sbb
notb
jg,pn
jmp
shll
cwtl
popa
int3
pop
mov
cmp
aaa
call
mov
mov
and
in
jp
or
dec
cmp
jo
dec
push
xchg
dec
aas
loop
test
out
out
aam
cmp
out
sub
loopne
pop
add
or
sub
dec
repz
aam
sub
add
fcompp
mov
fcoms
add
and
call
inc
jle
push
pushf
inc
ss
pop
sbb
imul
or
out
add
push
pop
ret
mov
jl
dec
sub
andb
cmp
ss
pop
dec
cmp
les
outsb
cwtl
push
or
and
mov
add
or
sub
es
adc
and
test
mov
and
push
lods
movsl
lcall
insb
lahf
jae
fs
shrb
inc
push
shlb
push
sub
sbb
inc
jbe
insb
jl
cmp
dec
jle
jg
movl
jmp
data16
fcoml
js
inc
sub
fidivrl
sub
sub
cmp
out
sub
xlat
in
popa
adc
popa
arpl
shrl
xchg
les
fsubl
orl
or
mov
sarl
out
adc
mov
lods
push
or
jb
inc
dec
ds
xchg
fwait
pop
mov
orl
bound
sbbl
or
add
dec
xlat
xchg
jbe
push
jl
adc
repz
out
mov
nop
lods
and
add
hlt
and
mov
aaa
icebp
shr
mov
xchg
data16
jp
and
add
pop
cmp
sub
outsb
sti
je
or
xor
xchg
cld
sarl
jbe
cmp
rcrl
ja
push
and
pushf
cmpsb
jmp
xor
jo
sbb
add
push
xchg
mov
into
sbb
pop
loope
sahf
setb
lcall
inc
push
loope
or
jecxz
int
or
loope
ficompl
jnp
mov
sub
mov
inc
fcom
shll
push
popa
add
push
add
lods
mov
or
adc
jnp
mov
cmp
rcll
dec
push
fstps
bound
sub
push
rorl
and
sarb
test
jne
dec
dec
add
inc
adc
sbbb
cmpsb
add
fmulp
shrb
popa
or
ja
cmpsb
pop
fistpll
lds
sarb
fists
loope
aas
fs
rcr
loope
out
push
push
adcl
add
jmp
sub
xchg
jmp
mov
xor
push
fldcw
sahf
sbb
mov
sub
fcoms
rcr
lods
lahf
inc
aas
mov
pop
inc
push
add
add
mov
in
adc
jmp
dec
aad
cmpsb
mov
push
outsb
adc
jae
xchg
push
outsb
mov
outsb
loop
add
cld
mov
sub
adc
out
rorl
vmovhps
cltd
pushf
test
lret
cmp
lret
jmp
add
iret
outsb
adc
push
call
push
pop
fldcw
mov
or
sub
in
xchg
es
xor
mov
cmp
mov
cmpb
pop
mov
vsubss
jg
lret
ja
pop
lods
addb
mov
dec
rorb
cmp
xor
add
insb
jae
inc
lcall
scas
out
xor
test
mov
pop
dec
ret
loop
mov
fcmovnbe
lret
pop
sbb
dec
fwait
xlat
or
mov
pop
pop
scas
subl
pop
xchg
add
jbe
ds
pop
push
cmpsb
mov
add
pop
push
cmc
into
cwtl
cwtl
jle
repz
aas
daa
lret
dec
inc
mov
jge
cs
ljmp
push
sbb
dec
inc
inc
into
js
mov
mov
push
cmp
cmp
pop
push
push
lock
mov
inc
push
push
adc
add
adc
ss
add
addr16
dec
push
adc
repz
push
add
pop
dec
popa
out
pop
aam
aaa
push
mov
push
pop
sbb
push
sub
mov
pop
dec
bound
aam
popa
push
push
stc
mov
mov
push
mov
dec
sub
xor
sbb
xchg
mov
iret
ljmp
dec
ret
ret
push
stc
mov
das
pop
dec
inc
add
in
push
mov
adc
mov
or
sti
adc
dec
pushl
jbe
mov
dec
inc
lahf
dec
fsubr
mov
bound
mov
dec
jbe
mov
dec
pop
outsl
ret
pop
mov
sub
lea
aas
imull
outsb
xchg
adc
bound
mov
mov
dec
roll
loopne
cmovns
lret
adc
lcall
outsl
stos
cmp
pop
adc
dec
loope
jae
jns
nop
aad
push
jne
les
imul
lahf
fbld
mov
ret
xchg
repnz
lcall
lea
int3
insl
data16
jmp
loopne
and
push
in
cli
jnp
flds
jo
or
xor
nop
xlat
mov
jp
mov
add
push
addr16
fidivl
push
int3
sti
add
and
nop
adc
mov
lods
ret
iret
dec
jbe
aam
aaa
flds
orb
mov
cli
cmp
aam
push
out
pop
aam
push
jno,pn
aam
push
lret
fs
mov
inc
aad
jbe
fnstcw
sub
iret
mov
inc
fsts
pop
fcom
jg
ret
call
loopne
add
push
dec
sub
add
push
daa
push
arpl
inc
stos
jg
jns
das
cmp
xlat
out
mov
xlat
sahf
and
xor
mov
int
fabs
leave
mov
stc
fimull
fstpl
es
imul
mov
mov
fisubrl
sub
fisttpl
lcall
sbb
mov
ss
or
sub
xchg
fwait
inc
pop
shrl
fmulp
testl
push
into
aam
inc
pop
cmpsb
xor
movsl
lods
out
das
bound
sub
add
ror
das
cli
gs
aad
fisttpl
in
sub
xor
sbb
ret
in
mov
inc
mov
aad
mov
jo
enter
fistps
clc
int3
mov
xor
lods
pop
jecxz
ja
addr16
insb
int
jbe
xchg
lret
cmpsb
sbb
ja
popa
das
dec
fsubl
paddusw
pop
xchg
outsl
pop
pop
xchg
lds
popa
pop
sub
dec
mov
mov
dec
ficoms
cmp
icebp
push
idivl
mov
and
shrl
divl
push
mov
insb
stos
jg
cmpsb
dec
into
pop
fidivrl
jo
xchg
sbb
lds
hlt
mov
add
scas
adc
enter
dec
ja
push
out
sti
or
jae
jb
int3
or
loope
jecxz
into
push
loop
imul
dec
add
lcall
into
lods
pusha
insb
mov
jp
lods
xchg
ret
loope
sti
ja
xorb
insb
pop
inc
xor
daa
aam
mov
and
or
imull
es
xor
arpl
fcmovnbe
insb
sbb
fwait
idivb
jb
lret
mov
cmp
push
shrl
mov
xor
sub
pushl
cmp
add
adc
cli
ror
mov
out
sub
pop
aam
loope
or
mov
mov
pop
dec
lods
jg
add
add
loope
loopne
pop
mov
movsb
sub
sub
dec
push
inc
bound
mov
pop
inc
fistpll
andl
mov
lret
inc
add
mov
shrb
pop
sub
xchg
jns
or
jbe
and
lea
shrb
subl
inc
daa
mov
lods
mov
insb
bound
aas
xor
jne
insb
mov
cmp
push
dec
aam
sub
scas
frstor
mov
fisubrs
mov
rcll
mov
bound
data16
push
notl
insl
es
fists
subl
dec
mov
or
xchg
js
mov
push
pushf
xor
mov
adcl
mov
data16
sahf
mov
ret
leave
arpl
es
xor
leave
mov
in
fisubrs
cld
pop
das
popa
pop
gs
in
mov
sbb
push
lock
data16
inc
xchg
rorb
bound
jmp
roll
or
mov
adc
or
stos
fmull
jnp
jbe
ret
loopne
mov
sub
cwtl
inc
push
xlat
cmp
dec
push
dec
or
ljmp
or
daa
mov
adc
imul
cmpsb
popa
subl
inc
sub
inc
lods
in
iret
sbb
jne
stos
jecxz
pop
push
das
int
cmpb
mov
fs
pop
and
sub
cli
add
enter
mov
lods
sahf
dec
idivb
pushf
dec
mov
sbb
mov
cmp
dec
ljmp
inc
cmp
jecxz
aad
adc
rcll
stc
cmpsb
dec
fwait
mov
lret
leave
mov
sub
cmpsl
repz
fcmovnb
rcl
fnstsw
xchg
insl
fiaddl
idivl
lret
nop
mov
or
fldz
insl
hlt
adc
imul
test
push
lea
aam
cltd
inc
lret
enter
or
mov
push
aad
pop
or
mov
jne
pop
mov
dec
movsl
pusha
das
test
sub
clc
pop
pop
lea
inc
dec
mov
sbb
pushf
xor
loopne
adc
loop
not
cmc
adc
jae
lock
or
stos
dec
xor
sti
negb
cwtl
bound
pop
ret
sub
in
xchg
dec
ret
add
hlt
aad
pushf
sub
adc
ss
push
loopne
cwtl
mov
push
adc
add
xchg
lret
push
aam
insb
push
int
push
clc
push
int
arpl
popa
push
and
adc
mov
int
xchg
sbb
fnstenv
xchg
test
mov
lcall
testl
cmc
in
inc
pop
inc
cmp
subb
jno
xchg
push
sub
pop
mov
push
add
iret
into
xchg
call
fwait
or
jmp
in
jp
or
sub
iret
das
push
ds
push
mov
mov
ss
mov
or
xchg
push
adc
out
jns
cmpsl
mov
adc
cmp
out
inc
into
fildl
mov
sub
and
lods
hlt
xchg
pop
cmp
fnstsw
dec
sahf
int
out
mov
adc
inc
sub
outsb
jge
cmpsb
or
mov
add
clc
out
sub
jb
push
jo
mov
or
or
mov
daa
dec
es
or
mov
dec
pop
fisttpll
push
int
pushf
adc
inc
mov
out
stc
push
imull
add
cmp
lds
dec
or
imul
adc
jae
or
orb
adc
repz
mov
push
call
ret
add
roll
xlat
popa
mov
popa
mov
pop
mov
fwait
add
aaa
in
mov
stos
fsubl
lret
subl
adc
fdivrl
ljmp
out
push
dec
push
out
loopne
xchg
adc
lret
out
and
push
sub
inc
lods
cmp
pop
fstps
lret
push
ljmp
dec
call
sbb
or
mov
sub
outsl
adc
xchg
sub
or
fsubrl
lcall
bound
jg
stos
ss
aad
lret
out
sbb
iret
add
pop
dec
enter
sub
dec
pop
sub
clc
xchg
cmpsl
xor
test
bound
in
out
or
xor
ficoms
aam
push
hlt
in
cmpsl
cli
lret
data16
sub
lea
jp
mov
lods
ds
mov
sbb
lcall
lock
lret
divl
adc
push
lods
leave
jb
jae
and
or
jbe
mov
aas
jbe
call
loopne
into
jl
cmp
adc
add
ss
fcmovb
add
push
lock
xor
jecxz
push
out
imul
dec
nop
push
jo
sbb
add
push
iret
xchg
adc
cmp
mov
data16
cmp
adc
xchg
insb
mov
xchg
daa
push
mov
je
add
rorb
fldl
repnz
dec
and
imul
dec
mov
lods
shlb
shl
ss
adc
or
loope
stos
loopne
cmp
or
inc
stos
fistps
push
inc
data16
adc
ret
gs
jle
pop
mov
pushf
adc
mov
pushf
mov
leave
sub
sub
jb
enter
jb
or
ret
scas
jl
sub
xchg
xor
shlb
lret
out
lahf
xchg
pop
mov
sub
cwtl
inc
push
sarl
push
imul
dec
push
pop
rcrb
hlt
inc
or
ja
pusha
pop
cmp
ret
adc
nop
leave
rclb
je
add
cmp
pop
push
adc
mov
push
in
in
mov
sub
or
push
pop
shl
mov
lds
push
and
lret
arpl
call
pusha
adc
imul
jmp
and
add
lds
push
or
fcomps
dec
or
adc
aad
and
out
xchg
xchg
sti
pop
movsb
aam
jns
pop
inc
add
or
xchg
cwtl
cmp
dec
push
adc
dec
aad
mov
sub
jne
aam
xchg
xor
aas
hlt
out
andl
pusha
enter
xchg
sub
int3
into
add
sub
into
insb
into
loope
cmp
mov
or
dec
sub
mov
dec
dec
push
xlat
mov
dec
xor
push
mov
negl
xchg
or
insl
lret
insl
xor
std
addr16
dec
pop
cmpsl
xor
cltd
lods
shrb
cmpl
mov
mov
lea
sbb
fidivrl
lods
push
xlat
in
mov
push
iret
mov
adc
jb,pn
or
loop
push
fstpt
mov
mov
cwtl
int
cmp
mov
push
outsl
add
lds
call
mov
test
cmp
mov
sub
or
jl
lret
push
push
pop
inc
sub
enter
lret
xor
xchg
jge
cmp
lds
adc
fldcw
cmp
jecxz
rcll
imul
pop
outsb
push
cltd
and
xchg
rorb
lahf
loop,pt
or
mov
stos
fisttpl
das
mov
mov
add
out
lcall
loopne
push
inc
add
mov
fsubrs
jbe
sbb
xlat
sub
sub
mov
xchg
sub
ret
inc
add
mov
xchg
ror
int
stc
les
test
out
push
aad
aaa
enter
cld
jo
sub
enter
cmp
clc
lock
sbb
xchg
cmpsb
xchg
mov
aad
cs
lahf
enter
popa
rorb
mov
decl
rorb
punpckhdq
mov
inc
sub
dec
shlb
sub
call
jp
adc
adc
cmp
sub
arpl
push
shrl
or
in
gs
mov
fidivs
icebp
fldln2
call
adc
or
rorb
dec
aad
stc
data16
test
leave
shrl
into
cmpl
and
nop
leave
push
push
sbb
push
cmc
mov
pusha
out
daa
in
rorb
or
push
jecxz
and
add
aas
xchg
sub
xor
pop
pop
daa
add
cmc
and
add
mov
sub
add
mov
dec
jl
push
xchg
dec
adc
shrl
mov
in
mov
lods
adc
xchg
cmp
in
or
pop
rcrb
xor
xor
sub
or
push
mov
mov
mov
test
mov
sub
ds
adc
jmp
xlat
insb
fldcw
or
add
xor
jmp
adc
mov
mov
mov
mov
addr16
dec
jmp
adc
or
popa
movsb
push
xchg
pop
jmp
or
leave
dec
add
add
mov
or
sub
or
push
jl
popf
add
jl
in
stos
inc
mov
popa
sub
inc
push
rcrl
mov
adc
add
xchg
mov
jbe
sub
push
dec
cmp
or
inc
enter
pop
lret
lret
ret
movsb
call
sub
das
or
add
cwtl
cmp
in
mov
cmp
fwait
je
leave
fucomp
jne
test
int
pop
adc
mov
dec
ret
push
sbb
out
push
gs
test
fmul
inc
fisubrl
jns
dec
enter
jae
out
sub
mov
push
bound
push
mov
iret
rclb
out
test
out
lcall
push
push
mov
cs
int3
xor
mov
insb
cs
xchg
dec
test
inc
and
or
jmp
test
inc
cmp
pop
cmp
fcompl
stc
mov
sub
cmc
add
push
pop
in
sbb
into
sub
xchg
in
shrl
push
mov
rclb
shlb
adc
xor
das
mov
cmp
xor
inc
fcompl
sub
pop
jmp
mov
pusha
pop
pop
xchg
addr16
and
test
in
or
inc
addr16
mov
sbbb
mov
sbb
nop
mov
gs
add
enter
jne
dec
testl
icebp
mov
aaa
rcr
mov
mov
or
add
push
adc
shlb
enter
das
inc
inc
mov
mov
int
push
jp
in
rclb
and
jmp
jne
pop
call
adc
popf
insl
movl
and
adc
testb
leave
pop
testb
adc
add
loope
xor
xchg
insl
out
js
jne
or
sbb
push
or
or
pop
xorl
jmp
adc
js
hlt
or
push
or
push
mov
or
into
imul
fbstp
pop
xchg
in
push
or
call
jnp
add
jp
inc
xchg
or
xchg
aaa
push
aas
dec
ja
rcrl
into
jp
and
xchg
sub
push
jns
sub
push
cwtl
fcoms
and
popa
adc
sub
xchg
shll
xlat
push
add
aad
cltd
aas
dec
mov
sub
aaa
mov
dec
lods
mov
or
cltd
or
pop
jp
dec
add
mov
add
sub
ret
xchg
idivl
adc
stos
dec
rclb
xchg
aaa
mov
inc
and
pop
stos
sub
aaa
push
bound
xor
aaa
or
notl
or
neg
sahf
push
cmpsb
push
pop
icebp
jle
lret
cwtl
insl
aaa
push
pop
loope
cmp
aaa
outsl
bound
push
adc
scas
jle
inc
mov
cwtl
fnstcw
push
fildl
pop
pusha
or
pushf
shrb
adc
add
mov
add
sbb
mov
in
je
hlt
rolb
popa
je
pushf
fistpl
imul
and
and
xor
mov
out
cli
adc
movsl
push
jecxz
sub
je
std
lds
data16
dec
jmp
xchg
data16
hlt
dec
lcall
or
fidivs
cvtpi2ps
movsl
jne
xchg
or
repz
mov
mov
cmpsb
and
sbb
mov
scas
shll
mov
fcoml
aam
or
orl
orl
xor
inc
sub
aam
or
and
or
or
pop
xchg
xor
clc
movsl
mov
hlt
outsb
aad
cmpsl
pop
xchg
mov
hlt
orl
mov
push
pop
inc
and
or
outsb
clc
jbe
xor
dec
movsl
in
adc
popa
inc
jbe
push
sub
adc
add
dec
jbe
or
adc
in
push
xor
mov
dec
xchg
xchg
sub
xchg
xchg
push
mov
xchg
or
push
xchg
aad
jns
jg
or
cmp
push
xchg
es
or
into
in
or
jne
xchg
xchg
add
ljmp
jl
adc
jno
jp
pop
cmp
or
or
or
xchg
scas
and
jne
mov
mov
or
rcll
xchg
or
xchg
or
pop
rclb
mov
jl
ret
mov
inc
push
jbe
scas
not
or
add
movsl
push
dec
mov
mov
or
dec
push
aad
push
add
orl
imul
inc
mov
or
insb
aad
ret
dec
or
add
dec
xchg
cmc
or
xor
dec
pop
in
adc
or
mov
dec
flds
sbbb
jbe
movsl
push
dec
cmc
orl
stos
insl
xchg
repnz
jg
outsl
ss
jl
xchg
adc
ljmp
cld
mov
je
out
mov
add
adc
mov
lret
inc
cmp
pushf
cwtl
adc
or
xchg
mov
out
and
cld
imul
adc
push
xchg
fstpl
loopne
xchg
sahf
std
fdivl
les
ljmp
mov
rcrb
pop
pop
push
xor
into
aam
add
shrl
lods
loopne
jp
sub
loope
in
int
insb
in
mov
es
nop
mov
not
inc
iret
mov
cmp
movsl
mov
bound
add
mov
add
mov
mov
dec
sbb
and
lcall
pop
push
pop
shlb
jg
insl
jne
sbb
das
push
or
sub
mov
mov
jecxz
je
mov
pop
push
stos
or
xor
pop
in
outsl
cmp
loope
adc
adc
cld
sub
pop
in
add
out
in
movsb
jb
pop
shlb
testb
aad
jns
adc
add
xchg
call
inc
xlat
xchg
fwait
int3
mov
sbb
xchg
into
in
mov
cwtl
int3
divb
subl
mov
imul
mov
ret
dec
inc
mov
sub
push
mov
scas
dec
mov
add
shlb
mov
add
rolb
or
sub
rorb
sbb
pop
repnz
mov
cwtl
repnz
push
fistl
jne
push
push
dec
adc
pop
adcl
data16
pop
fdivl
ret
sub
adc
dec
test
mov
and
xor
ljmp
mov
xchg
mov
jle
xorb
jle
adc
or
mov
gs
or
or
sbb
xor
std
shll
push
mov
sbb
jns
add
scas
fcmovbe
dec
lods
or
add
sub
mov
or
xchg
or
es
ljmp
push
mov
fs
andb
mov
or
jbe
ja
xorb
adc
jo
outsb
jno
aad
in
push
jmp
or
adc
dec
out
repz
push
jne
xchg
jns
notb
ja
pop
adc
mov
call
or
adc
aam
xor
xor
or
push
xor
xchg
mov
or
xor
jns
adc
fisubrs
jo
data16
push
inc
cld
dec
sbb
rorb
push
or
rcll
xchg
cmpsb
adc
or
in
adcl
or
insl
jo
push
imul
sbb
or
sbb
nop
or
or
jnp
xchg
jns
insb
mov
xchg
adc
nop
or
outsb
adc
nop
or
xor
adc
xchg
mov
mov
inc
inc
mov
mov
jns
or
ret
lock
sub
jns
inc
add
mov
sarl
adc
stos
leave
inc
lock
fs
or
adc
orl
js
or
or
ja
or
insb
dec
cmp
sbb
adc
push
xchg
jns
test
ja
adc
sub
or
lcall
jno
or
push
or
push
orl
or
pop
xchg
fiadds
jl
ss
mov
daa
in
ljmp
push
mov
xchg
aaa
pushf
xchg
call
fstps
xchg
or
add
sbb
adc
je
push
rcll
or
mov
xchg
jbe
or
daa
add
pushl
adc
sub
je
cmpl
rcll
stos
shrl
sub
adc
inc
xchg
mov
subl
je
sub
adc
mov
ljmp
imul
push
xchg
js
repz
push
mov
mov
push
stos
mov
xchg
push
push
pop
mov
jl
fsubrl
push
sbb
or
daa
and
pop
cld
sahf
subl
push
jne
js
sub
jg
push
popf
mov
push
fidivrs
xchg
sub
fiadds
push
push
mov
pop
xor
jae
js
sub
mov
add
stos
pusha
pop
push
xchg
sub
inc
push
imul
mov
pop
xor
jb
mov
movl
imul
fbstp
pop
jbe
pop
xchg
ror
pop
cld
sbb
js
fsubrl
pop
cld
dec
sub
fdivrl
fistpl
neg
lods
lahf
in
dec
mov
mov
fists
sub
mov
sub
aaa
mov
or
jecxz
sub
es
fimuls
add
cmp
loope
in
sub
push
dec
mov
nop
add
xor
pop
fmuls
pop
pop
fs
mov
aas
mov
xor
lret
mov
loope
xor
dec
aas
jl
jmp
ficoms
lcall
pop
push
sub
pop
jns
add
ret
and
cld
lcall
jl
cmp
aam
arpl
addr16
nop
jne
repz
lahf
push
enter
mov
inc
sub
fldenv
and
mov
push
mov
es
inc
sub
shrl
mov
pushf
add
jno
push
jnp
sub
fstpl
adc
das
std
shr
cmp
push
sub
ja,pn
push
fnstenv
repnz
pushf
sar
cmp
cltd
or
push
inc
loop
add
or
ljmp
int3
call
adc
sbb
mov
outsb
pushf
mov
in
sub
stos
pushf
push
mov
cld
sbb
lea
mov
sub
jns
pop
sbb
or
add
cmp
lret
cmpsb
mov
sub
mov
xchg
sbbb
ja
int3
pusha
rcll
leave
popf
fcompl
sub
xchg
mov
jae
adc
repnz
jp
pop
jge
lds
xor
out
mov
push
xlat
push
jp
cld
mov
into
and
movsl
andl
fmull
or
fimuls
mov
inc
imul
cmp
sbbl
mov
add
popf
lcall
gs
dec
loope
jle
dec
sbb
dec
addr16
inc
lret
shrl
insb
shrb
add
pop
popf
fldcw
cmp
add
subb
cld
push
cltd
pop
cltd
sub
inc
push
jns
inc
add
push
jne
mov
lret
jle
fdivr
cwtl
pop
sbb
ss
int3
cmpl
sbbl
loope
push
mov
pop
aaa
enter
ja
test
fsubl
jge
cmp
dec
cmp
cmpsl
add
jno
lods
insl
pop
sub
push
out
adc
push
or
push
mov
shrb
shrl
jl
or
pusha
xchg
lods
bound
xchg
sbb
pop
or
mov
rcl
push
repnz
sahf
pop
pop
sbb
pop
adc
sbb
xlat
or
fadds
inc
cmp
push
mov
and
add
sub
sbb
int
add
inc
stos
or
fwait
pop
or
popf
inc
sub
jge
sub
pop
mov
js
inc
pop
imul
in
and
scas
fidivs
mov
pop
test
pop
dec
test
aaa
daa
push
jge
daa
dec
mov
mov
inc
pop
or
imul
sub
dec
les
push
adc
sub
not
insb
sub
inc
mov
push
roll
sub
cltd
mov
std
cmp
ljmp
add
ljmp
mov
xor
push
sbb
dec
insb
sub
sbb
pop
fwait
mov
sub
rcrl
sbb
popa
push
mov
flds
pop
push
enter
cmp
ljmp
sub
dec
lret
mov
mov
xchg
inc
sub
cmp
outsl
mov
popa
lret
push
push
cmp
int
les
ss
push
out
dec
les
add
sub
popa
push
mov
sarl
pop
popa
shl
adc
lcall
sub
pop
mov
lret
push
sahf
aad
insb
pop
fnstenv
in
in
je
aaa
jbe
ljmp
add
aad
jo
jno
mov
sub
fnstenv
das
mov
pop
movsl
pop
or
pop
call
dec
jmp
xor
adc
leave
dec
add
xor
adc
lcall
mov
and
pop
in
imul
dec
flds
loope
pop
imul
jne
pop
inc
mov
ficompl
sub
mov
sub
sahf
imul
daa
sub
ljmp
pop
outsb
pop
test
add
shll
int3
test
aaa
ljmp
repnz
sbb
xchg
fimull
push
scas
and
xor
call
dec
sub
jns
mov
call
jmp
hlt
ljmp
loopne
or
lret
cli
subps
stos
xor
call
cmpsb
flds
loope
pop
loopne
imul
mov
add
in
dec
sub
and
push
jae
mov
push
sbb
sub
or
pop
lretw
in
lret
insb
sub
pop
xor
call
mov
pop
mov
add
push
inc
push
xchg
add
adc
in
dec
vpunpcklqdq
sub
ss
in
or
mov
or
popl
mov
cmp
int
rcrb
dec
or
mov
jns
adc
lds
dec
push
sbbl
sub
sub
fwait
in
dec
sub
sub
adc
popa
mov
mov
insb
sub
in
popl
xchg
mov
add
in
int3
dec
mov
jbe
or
and
sub
lret
fwait
mov
insb
popl
lahf
pop
cmp
add
sub
das
popl
add
and
call
pop
dec
imul
repz
out
sub
mov
fisubrs
add
and
mov
add
push
scas
rorl
dec
call
lea
sti
inc
dec
push
xlat
fstpt
add
lds
insb
sub
push
popl
pop
pop
xor
add
in
out
lds
pop
sub
into
ljmp
jb
in
scas
add
daa
pusha
and
ficomps
outsb
xor
int3
and
addl
pop
imul
les
mov
sarl
mov
and
sub
nop
sbb
pop
mov
cmp
mov
add
push
pusha
shll
adc
sub
jecxz
pop
hlt
pop
cmp
mov
ss
dec
sarl
pop
inc
add
push
jns
and
sbb
mov
inc
subb
loopne
add
aaa
js
rclb
sub
or
pop
daa
testl
pop
arpl
loop
pusha
mov
jns
sub
inc
xor
call
ja
cwtl
and
jns
mov
add
js
adc
jecxz
pushf
insb
sub
ret
aaa
call
insb
flds
loope
fnstenv
dec
call
lock
mov
inc
popl
fbstp
inc
ret
sub
pop
sbb
jne
scas
sub
ljmp
ss
loop
pop
mov
mov
dec
xor
cmp
aas
aam
call
jp
andl
aaa
pop
pop
imul
and
sub
xor
inc
vpunpcklqdq
inc
pushl
inc
and
shll
mov
push
and
pop
out
in
cwtl
mov
add
in
vcmppd
push
or
cmp
or
rcll
mov
shll
mov
flds
sub
or
aaa
add
call
push
dec
and
fprem1
cmp
push
xchg
sbb
add
in
sub
movsb
popl
sbb
mov
sub
pop
ljmp
imul
inc
push
leave
and
pop
jg
daa
les
add
adc
in
pop
lds
dec
cmpsl
in
jecxz
out
sub
sub
into
imul
inc
je
cmp
push
mov
push
pop
call
xchg
sub
sub
sub
imul
and
es
jns
mov
cmp
pop
dec
imul
icebp
sub
ljmp
fs
cmp
mov
mov
flds
sub
or
ja
inc
idivb
mov
daa
mov
push
aad
mov
add
cmp
pop
insb
dec
fwait
xchg
movsl
sub
ljmp
out
sub
pop
subb
stc
and
dec
fnstcw
jns
jo
cmp
dec
outsb
fstps
mov
mov
flds
loope
pop
rcrl
mov
add
cmp
or
mov
int
les
fsts
mov
add
movsb
push
imul
and
mov
imul
cwtl
pop
dec
imul
int
les
fsubr
sub
shrl
icebp
pop
sarl
sbb
add
insb
sub
sti
popl
mov
and
in
fildl
push
adc
sub
mov
xor
push
sahf
daa
loopne
jnp
pop
test
scas
add
sub
pop
iret
mov
or
popl
or
icebp
lret
in
sbb
cmp
cli
popl
lcall
sub
pop
les
cltd
adc
sub
mov
lcall
sub
dec
xchg
pop
ds
lret
in
pop
vpunpcklqdq
fistpl
arpl
cmp
mov
pop
sbb
push
fwait
int3
test
mov
push
jnp
xor
ffree
rolb
adc
add
mov
xor
xor
ror
pop
int3
in
flds
loope
fnstenv
cmpsb
inc
pop
xor
call
xchg
sub
dec
adc
dec
mov
call
in
cmp
aas
pop
das
rcr
sarb
mov
out
cli
push
mov
pushf
movsb
and
lahf
out
or
aaa
scas
sub
fldcw
popf
adc
sub
mov
xor
push
pop
inc
repz
ljmp
add
insb
dec
add
pop
sub
repnz
inc
imul
and
dec
jg
pop
fidivrs
pop
xchg
rcl
out
dec
pop
pop
pop
jge
ds
pop
cmpsl
pop
push
xor
roll
cmp
sub
lds
or
ja
jb
es
ret
pop
mov
mov
add
in
jle
fwait
insb
dec
mov
push
ljmp
pop
imul
psubsb
call
inc
adc
lret
in
icebp
add
jle
cmp
shr
sub
mov
xor
push
gs
or
aaa
mov
addr16
jno
mov
mov
ljmp
dec
jns
xor
sbb
mov
inc
fisubs
shl
mov
roll
hlt
jns
jle
mov
adc
adc
jg
add
insb
sub
jo
add
sub
push
vpunpcklqdq
fidivrs
ja
or
popl
or
xchg
push
call
aas
push
xchg
fld
mov
sti
flds
sub
or
shrl
xorl
inc
xchg
xor
push
std
daa
lock
jae
pop
xchg
cmpsl
ret
pop
cmp
pop
fildll
and
and
xor
add
les
adc
dec
repnz
add
xor
inc
rclb
mov
add
mov
push
insb
dec
adcb
movsb
sub
jb
dec
cmovnp
pop
jb
sub
fs
push
int
mov
jae
in
xor
dec
and
mov
push
ficoms
jns
out
cmc
xor
int3
and
adc
fstpl
shll
or
xchg
rcll
mov
jne
add
sub
fildl
popa
or
aaa
pop
test
sub
dec
imul
inc
cmc
inc
cmp
ljmp
call
pop
shrb
mov
ljmp
flds
imul
xor
xor
cmp
sub
sub
adc
fxch
sub
mov
pop
and
pop
jecxz
test
dec
sub
into
and
fnstenv
mov
or
rorl
int3
mov
push
mov
mov
shll
mov
add
in
push
dec
add
ljmp
mov
in
push
lds
sub
testb
mov
xor
call
dec
mov
pop
push
fidivrs
jns
lods
lds
dec
push
dec
aas
test
dec
xor
stos
clc
test
arpl
test
inc
loope
loope
mov
mov
push
cmp
fstl
mov
ja
test
push
adc
mov
in
push
movsb
pop
push
dec
shlb
push
jg
or
movl
jnp
dec
push
push
shlb
sub
dec
push
ret
gs
not
sub
jmp
enter
lock
jl
jg
mov
ror
pop
les
movsl
hlt
cmp
sbb
ds
clc
adc
jb
dec
roll
lock
lahf
sub
scas
sar
fcoms
inc
dec
add
cmp
data16
dec
lret
aad
push
cmpsl
mov
aad
xchg
push
jo
mov
add
pop
add
mov
mov
mov
push
mov
insb
jl
lahf
movsl
and
mov
xchg
shrb
loopne
jl
cmp
movsl
fdivl
in
rol
in
subl
dec
ret
in
in
push
mov
in
pop
xor
mov
int3
pop
je
add
or
xor
jl
lahf
and
adc
fstps
in
sub
cmpsb
add
rol
inc
adcb
push
xor
mov
pop
push
jnp
dec
imul
pop
mov
out
mov
add
dec
iret
addl
pop
mov
in
ljmp
pop
inc
je
fsts
sub
xor
jge
dec
jp
sarb
imul
or
loope
sub
scas
add
ret
mov
test
dec
sub
fistpl
cmp
dec
push
cltd
sub
fdivrs
frstor
and
stos
or
adc
je
in
aam
mov
push
add
jg
movsl
cwtl
mov
sbb
jnp
andl
test
decb
and
rorl
movsb
mov
arpl
fstps
je
adc
fisubrl
sub
out
xchg
aaa
test
or
add
dec
pop
test
mov
mov
mov
je
mov
sub
mov
dec
xchg
xchg
movsl
or
rep
les
pop
in
push
aas
dec
jle
or
mov
fimuls
and
mov
movsl
adc
push
or
cmpsb
fdivl
dec
aas
xor
mov
imul
rcr
lds
add
aam
loope
shll
xor
lahf
and
pop
aam
in
imulb
or
aad
enter
push
jle
mov
test
mov
cmpsb
lret
jge
pop
in
sbb
and
adc
outsl
aas
mov
scas
push
sahf
dec
dec
in
sub
and
jbe
inc
gs
outsl
dec
lds
in
add
daa
xchg
ljmp
inc
aam
mov
sub
and
sub
and
inc
and
xchg
xchg
js
into
bound
loope
rorl
inc
pop
out
test
add
push
bound
adc
mov
add
lcall
adc
cmp
jnp
in
pop
sbb
dec
push
popa
in
call
or
pop
xchg
mov
cltd
popa
jmp
into
adc
scas
add
sub
movsb
adc
cmp
pop
loopne
sbbl
lods
repz
push
loop
mov
ret
jns
int
pop
imul
es
call
mov
mov
lret
fld
xchg
dec
or
nop
lcall
push
pop
ffree
ret
inc
pusha
mov
add
push
es
sub
cs
add
pop
mov
ret
loope
fnstenv
adc
pop
movsl
pop
mov
inc
faddp
jns
in
jmp
ret
or
inc
push
and
push
loop
push
cmp
pop
inc
mov
xorb
ljmp
mov
int3
or
dec
aad
lock
mov
sub
inc
in
dec
push
add
loope
js
xchg
mov
add
sub
test
sbb
push
xchg
pusha
adc
xchg
mov
mov
and
adc
adc
mov
dec
adc
pop
sahf
mov
mov
sub
and
adc
pop
push
addl
mov
adc
cwtl
in
mov
adc
movsb
adc
pmulhuw
ret
call
adc
xchg
add
clc
pop
arpl
mov
push
ss
jns
scas
and
insl
or
into
fisubrs
arpl
cmpsl
mov
jge
mov
lret
call
fisttps
leave
push
dec
xlat
xor
rcll
in
mov
push
aaa
push
mov
sbb
mov
ror
pop
xlat
lcall
cld
data16
orl
aam
pop
cmpsl
add
rcrb
hlt
dec
scas
jno
mov
fadds
mov
lret
or
and
mov
lahf
out
movl
xor
pop
call
xchg
cmp
mov
stos
mov
mov
loop
stos
xor
add
xchg
adc
adc
or
ficomps
add
jl
xor
ret
jg
and
xor
cmpsl
inc
pop
and
inc
mov
dec
js
dec
and
or
xlat
dec
mov
or
aad
dec
aad
push
out
shrb
ret
xor
fldenv
shrb
test
sub
pop
jge
es
pusha
lock
js
adc
or
jbe
pop
rclb
fucomip
mov
imull
pop
add
lret
loope
fldt
cmc
inc
mov
cwtl
add
outsb
adc
vcmpsd
push
jns
in
pop
push
movl
lds
xlat
pop
cmpsb
dec
lcall
sub
inc
out
and
mov
loopne
add
popf
and
and
pushf
adc
dec
pusha
xor
loop
popa
and
or
cmp
mov
add
push
jl
cmp
xor
xor
fsubrl
mov
scas
stos
or
jle
scas
aam
psrlw
sbb
aad
dec
xor
arpl
daa
pusha
dec
push
js
cmp
fidivrs
shll
loope
sub
adcb
dec
pop
xchg
aaa
nop
mov
lret
inc
xor
lcall
fisttpl
sub
jns
push
pop
jmp
xor
pop
fwait
inc
jne
sub
aaa
sub
test
inc
mov
push
and
stos
pusha
adc
fimull
aam
add
cmp
mov
push
cmpb
loopne
xor
sub
mov
adc
xchg
mov
inc
loopne
cmp
cmp
rol
mov
jb
stos
pop
lods
mov
pop
outsb
sub
inc
in
inc
mov
std
add
add
push
loopne
cli
dec
xor
aam
adc
sti
adc
loopne
shll
sarb
rorb
mov
loopne
dec
sbb
in
int3
cmp
fneni(8087
stos
cmp
loopne
notb
xlat
inc
stos
fisttpl
cmp
pop
fisttpl
pop
pop
ja
ret
add
xchg
sub
add
add
xchg
popa
stos
pop
iret
add
jl
push
mov
and
lea
sub
and
clc
jne
repnz
rolb
sub
cmc
jnp
mov
adc
inc
stos
pop
loope,pn
pop
push
int
xchg
add
xor
inc
or
mov
dec
pushf
lahf
popa
cmp
sahf
sbb
sub
cs
pushf
cmp
sub
add
fs
pop
ljmp
jbe
ds
popa
in
insb
lahf
out
or
adc
lret
adc
and
ret
pop
sbb
loope
flds
xor
test
or
fbld
pop
lods
pop
and
xchg
push
pop
pusha
loope
xor
enter
loope
fimuls
mov
push
cmp
jns
add
dec
xchg
jmp
imul
xchg
sub
loope
adc
loope
adc
andl
mov
in
loop
adc
mov
pop
fstps
inc
das
ret
pop
xchg
push
xchg
add
pusha
sub
xchg
sbb
xor
dec
push
sarl
enter
rcll
mov
mov
popa
outsb
lods
xlat
mov
mov
or
dec
push
and
add
xor
mov
adc
mov
pop
and
in
pop
popa
xor
mov
pop
sahf
aas
xor
xchg
stos
repnz
xchg
xchg
into
sub
inc
loope
xor
or
sti
mov
cmp
cmp
ret
mov
add
in
inc
ret
xchg
aam
xor
ss
stos
out
adc
pop
and
push
push
sbb
xor
sbb
in
dec
aad
push
nop
and
jne
push
mov
lret
test
or
aas
jle
or
xor
or
pop
scas
fs
inc
add
loopne
mul
xchg
sbb
adc
pop
sub
scas
data16
cltd
fisubrl
insb
leave
scas
aaa
adc
mov
jmp
into
adc
flds
outsl
addps
ds
lods
sub
daa
add
fldcw
lock
and
inc
push
push
inc
xor
jecxz
enter
je
xchg
jge
adc
cwtl
adc
loop
jg
xchg
das
pusha
pushf
mov
aas
decb
das
test
pop
mov
enter
sub
mov
cmp
inc
loop
inc
dec
cmp
rolb
or
inc
mulb
xor
mov
lods
aam
dec
dec
out
aaa
xor
cmp
out
sub
mov
pop
push
iret
sub
mov
push
cmp
enter
shll
cs
mov
sub
cs
push
imulb
je
mov
enter
aas
lock
mov
mov
ljmp
xchg
in
mov
pop
add
std
outsl
add
sub
js
outsl
mov
iret
or
outsl
push
in
in
fs
negl
mov
popl
test
les
xor
xchg
jp
dec
fisttps
push
jmp
xchg
mov
xlat
pop
mov
shufps
jmp
sahf
aaa
sub
sub
inc
mov
add
cmp
inc
lea
jp
pop
inc
adc
iret
inc
pop
jno
aam
push
xor
add
scas
sub
or
ud1
iret
mov
jmp
mov
push
mov
xchg
sub
sub
sub
out
jns
push
out
outsl
pop
mov
sub
out
sbb
dec
and
pshufw
push
js
xor
loope
push
sbb
lock
or
fsubrl
add
pushf
das
jne
pop
pop
mov
mov
push
mov
mov
mov
leave
sub
xlat
aam
lahf
adc
xor
sub
scas
pop
xchg
dec
ret
dec
lcall
and
test
inc
mov
and
push
mov
xchg
iret
and
nop
leave
dec
insb
in
and
sbb
cmp
dec
jge
or
int3
cmp
insb
call
inc
rolb
sub
mov
adc
add
aas
fnstcw
mov
popa
mov
jnp
fldl
pushf
sbb
movsb
mov
push
mov
movsl
ss
insb
lods
iret
int
dec
sarb
pop
je
les
test
lahf
dec
xchg
adc
add
cmpsl
cmp
lock
sub
in
xor
mov
mov
fnstcw
inc
sub
pop
push
mov
sub
pop
lds
popa
in
in
or
adc
test
sub
and
inc
pop
aas
in
or
shll
int3
cmp
or
add
in
int3
pop
ja
fmull
or
sbb
nop
cmpsb
testb
pop
jnp
std
dec
push
in
ret
sbb
mov
inc
iret
sub
in
push
sub
pop
mov
repnz
rcll
lods
in
mov
push
insb
pop
in
iret
in
mov
mov
jge
scas
dec
gs
dec
xchg
int
orl
loope
stos
adc
mov
shll
sub
popa
mov
push
int
mov
sub
in
inc
sub
arpl
push
jae
push
sub
je
mov
pop
xchg
dec
sub
dec
es
dec
out
lea
dec
inc
ja
int3
pop
iret
in
test
inc
int
mov
imul
inc
lahf
insl
mov
adc
cmp
hlt
int
shrl
insl
cmp
pop
loop
cli
cmp
ret
xlat
sbb
into
add
jne
sub
sti
cli
add
push
mov
aad
mov
imul
mov
cmp
dec
cmpsb
mov
sbb
loope
cmp
mov
in
mov
mov
repnz
jb
sbb
lcall
or
add
scas
sbb
adc
pop
or
jle
loope
sbb
shrb
inc
js
push
fs
ds
jns
std
in
iret
sub
dec
jb
cmp
jl
mov
stos
fldt
aam
mov
mov
mov
or
mov
sub
pop
jmp
mov
sbb
xchg
and
shll
imulb
cmp
push
cltd
mov
pop
call
mov
adc
mov
and
mov
push
cwtl
lods
mov
fabs
inc
int3
mov
pop
sbb
dec
cmp
mov
add
mov
scas
jns
insl
les
jb
pop
stos
add
outsb
mov
icebp
adc
sbb
sub
push
jb
fbld
mov
cmpb
les
in
jb
pop
mov
jno
dec
sbb
loope
cmp
mov
in
mov
mov
push
aaa
or
or
popf
scas
int3
sarb
sub
stos
js
xchg
outsb
mov
pop
jns
sbb
or
sbbb
jno
pop
push
mov
mov
loope
pop
mov
xor
in
cld
lret
sub
sbb
add
push
mov
mov
mov
in
sub
jb
sub
mov
adc
cmpl
sub
and
xchg
and
scas
mov
sub
mov
addb
pop
or
push
push
xchg
and
sbb
cmp
push
in
in
jb
sub
into
mov
vpmaxsw
mov
pop
js
dec
loopne
pop
cmc
mov
inc
sbb
fsubrs
out
lret
cli
out
mov
jg
xchg
insb
jb
pop
les
xor
aas
aad
call
jno
mov
inc
push
mov
xchg
sub
add
in
lret
call
call
cmp
dec
mov
ftst
lret
sbb
test
into
movsl
adc
pop
push
lret
xchg
insb
in
sti
add
ljmp
mov
imul
in
insl
inc
in
mov
sbb
dec
pop
enter
aam
add
xchg
outsb
sub
stos
sbb
cmp
fs
mov
adc
pop
mov
xchg
dec
cmp
ficomps
xchg
sub
lret
cwtl
es
in
lret
inc
inc
lret
mov
cmpl
test
ss
es
mov
in
jge
jmp
insb
movl
inc
or
jo
dec
xchg
orl
in
cmp
fldt
pop
cld
or
in
jnp
lcall
sub
mov
dec
mov
ficomps
mov
sub
sub
int3
call
fildl
cmp
and
scas
lret
add
aam
mov
in
cmc
dec
add
stos
imul
cmp
pop
dec
mov
out
push
sub
push
push
lret
call
lret
mov
dec
repz
dec
outsb
pop
scas
scas
dec
cmp
sub
ljmp
sub
enter
mov
jmp
push
jp
test
mov
in
daa
mov
mov
push
pop
jge
and
sbb
mov
test
inc
or
popa
loop
cmp
cmp
pop
lds
add
loop
pushf
fstps
jp
xor
sub
xchg
daa
int
loop
in
inc
adc
push
bound
js
enter
pop
mov
sbb
mov
or
cmp
cmp
and
inc
cmc
mov
add
sub
sub
into
push
mov
lahf
xchg
scas
dec
xchg
mov
test
jmp
out
push
pop
arpl
push
add
push
fiadds
js
repz
jge
roll
jns
jnp
fstpt
cld
stos
pop
or
insb
jnp
mov
in
out
inc
or
xchg
mov
addr16
sub
cmp
ficomps
js
adc
inc
or
pop
and
ffree
popa
js
push
inc
xchg
jmp
xor
mov
add
xor
ljmp
subb
push
stos
fiadds
sahf
dec
scas
sub
ljmp
jne
enter
cmp
loope
roll
or
enter
pop
in
inc
in
cli
adc
dec
pop
outsl
movl
addl
jb
imul
mov
pop
inc
flds
push
sub
sub
cmp
sub
lahf
andb
inc
xchg
or
or
jg
pop
dec
scas
pop
inc
pop
movw
jmp
or
faddl
test
js
push
lock
pop
imul
in
push
pop
and
jne
inc
lds
loop
cmp
insb
test
xor
mov
repz
sbb
leave
mov
fcmove
inc
adc
cmpsb
rcll
aas
hlt
sub
push
scas
xchg
imul
pop
jmp
jae
mov
out
jns
in
out
jmp
mov
xchg
shrb
mov
jmp
fsubrl
jbe
pop
and
rorl
mov
fsubrp
mov
adc
and
pop
xor
sub
movl
orl
inc
imul
aaa
mov
or
xchg
mov
inc
aad
dec
les
fstps
test
jne
sub
shlb
pop
pop
andb
fldln2
sahf
leave
inc
mov
add
pop
xor
fsubs
or
pop
pop
cmpxchg
dec
rorl
jbe
not
fisubrl
pop
push
push
jmp
shrl
mov
jo
dec
sbb
ret
outsb
sub
sbb
clc
push
pop
cmc
and
imul
clc
push
sbb
popa
andl
or
sbb
ja
icebp
mov
loopne
shl
sub
xor
pop
rolb
xor
fisubrs
xor
popa
push
jge
insb
mov
andb
inc
adc
add
out
loop
in
das
and
mulb
inc
xchg
mov
imulb
jns
out
lcall
mov
and
insb
pop
in
cmp
mov
imulb
xor
aaa
into
out
test
mov
rcll
sub
dec
aam
push
jne
pop
outsb
adc
jns
xchg
xlat
add
cmp
jnp
mov
jmp
pop
aam
lret
inc
mov
lahf
lds
lods
push
push
inc
mov
test
xlat
mov
pop
xlat
ja
test
jae
les
push
mov
or
sbb
sub
aam
push
aam
and
in
mov
fidivl
push
sub
dec
sahf
sub
mov
jl
loop
loopne
pop
sti
divl
sub
addr16
mov
and
dec
jle
sub
mov
push
ja
cmpsl
adcl
cmp
lret
pop
xchg
push
loop
add
aaa
sub
xor
std
pop
pop
call
rolb
push
jmp
ja
pop
rol
sarl
ja
jle
popf
mov
add
mov
jae
sarb
mov
pop
mov
push
dec
lds
sti
mov
lret
mov
jne
pop
xor
in
faddl
xchg
xor
loope
cmp
xor
mov
fistpll
dec
adcl
mov
sar
mov
dec
pop
rcrl
mov
dec
test
xchg
fimull
jge
fldl
xor
add
or
imul
jl
dec
adc
pop
jl
pop
fistps
xlat
sub
call
sbb
add
xchg
lods
mov
sub
or
push
add
cltd
mov
out
or
mov
mov
xlat
sub
movb
lea
testl
add
mov
add
xor
iret
out
cmp
and
or
cmp
ret
sub
push
mov
stos
sub
pop
sbbl
cmp
xorl
sbb
imul
xorb
dec
mov
inc
mov
pop
lret
push
fistps
cmc
aas
dec
jle
or
sbb
dec
std
and
aad
sub
mov
xor
mov
adc
sub
aaa
stos
dec
scas
aaa
pop
mov
xchg
sub
adc
mov
dec
sub
inc
daa
push
mov
sub
sahf
mov
dec
push
jns
pop
je
lods
mov
add
je
mov
aaa
sete
adc
xor
int
stos
pop
sub
sub
push
rclb
pop
xchg
push
test
sub
xchg
mov
int
shr
dec
aam
mov
cld
jne
mov
rcrl
mov
xor
call
inc
jne
push
aam
pop
mov
xor
sub
int
ret
sub
mov
jae
mov
hlt
inc
sbb
or
mov
inc
ja
aas
mov
scas
std
xor
aam
cwtl
les
add
in
arpl
call
rcll
inc
lods
mov
mov
mov
nop
push
ret
add
sbb
sbb
pop
leave
stos
sub
cmp
divl
dec
mov
iret
roll
fisubl
dec
ret
orb
mov
sub
pusha
addr16
mov
mov
pop
nop
mov
rclb
pop
jmp
push
mov
dec
rcll
inc
push
add
and
andb
lcall
inc
xor
jne
sub
or
add
sub
push
ret
xor
in
ds
add
aas
notl
pushl
mov
sbb
pop
cmpps
pop
test
stos
dec
lock
inc
or
cmc
fsubrl
iret
cmc
adc
js
pop
sbb
mov
addl
sbb
rcrl
add
sub
push
mov
mov
inc
sbbb
es
cmp
jne
mov
adc
addr16
cmc
mov
pop
inc
mov
cmp
jns
movsl
mov
fidivrl
fisttpl
popf
mov
pop
sbb
xchg
add
mov
pop
call
addl
addr16
or
in
add
xor
outsb
mov
stos
xlat
xor
xchg
sbb
in
imul
add
jae
xorb
push
sub
sub
inc
hlt
sub
push
into
pop
lahf
add
sbb
sub
movsl
cwtl
hlt
insb
int3
xor
jle
push
rorl
push
sub
jno
jb
ret
int
adc
mov
aad
mov
in
pop
jb
aam
jns
push
inc
jbe
xchg
into
insl
jb
xchg
adc
ss
push
enter
xchg
fidivs
inc
sub
fwait
scas
jg
insb
fistl
out
ret
in
lock
xchg
or
mov
lods
inc
ret
ja
xor
scas
sub
jl
ja
sub
xchg
mov
push
mov
xchg
addr16
aam
push
rcll
jg
xchg
push
into
xor
repnz
cmpsl
mov
mov
adc
repnz
ss
js
scas
sbb
lss
dec
or
dec
fwait
mov
add
cmp
push
test
pop
or
mov
sub
sarb
fcmovbe
imul
jns
push
pop
fisttpl
repnz
jns
lret
shrb
in
repz
setae
push
stos
mov
nop
dec
popa
bnd
dec
inc
pop
jae
stc
cmp
out
xor
adc
sub
js
movsb
push
cmp
adc
sub
fistpl
jnp
aad
xchg
add
ja
rorl
inc
pop
in
jns
shll
dec
sub
xor
sub
les
int3
mov
push
dec
mov
pop
rcrb
xchg
mov
xchg
push
mov
adc
mov
push
jns
cmp
pop
add
mov
and
or
jae
shll
dec
jns
into
ret
xor
fidivrl
sub
adc
rclb
and
inc
mov
mov
or
inc
xchg
push
sub
xchg
xchg
dec
enter
mov
mov
add
mov
sbb
mov
inc
xchg
pop
push
push
int3
mov
and
push
xor
cld
js
popf
rcl
sub
ret
dec
add
sub
mov
xchg
repz
aad
push
addr16
pop
movsl
or
popa
mov
push
subl
decl
xchg
xchg
fsts
push
mov
out
lret
mov
mov
in
in
mov
cwtl
or
leave
jno
aad
adc
jg
sbb
mov
fwait
push
push
xor
inc
ret
aaa
lea
hlt
mov
push
add
in
or
xchg
xchg
add
push
cltd
mov
mov
rorl
push
push
es
jo
sahf
add
std
and
add
in
xchg
jnp
stos
or
inc
mov
mov
sub
fcoml
nop
js
pop
push
cmp
adcb
in
ret
adc
mov
int3
mov
popf
adc
jb
add
sub
or
push
push
fnsave
mov
ds
ficoml
mov
call
adc
cmpsl
mov
xor
mov
add
cmp
inc
xchg
mov
xor
lock
fcoml
js
pop
lock
nop
aaa
movsl
lock
adc
adc
nop
adc
int3
and
cli
int3
add
ret
rorl
test
inc
pop
int3
and
pop
inc
jno
sub
xor
int3
sub
int3
pop
add
cmp
sbb
in
mov
push
jns
xor
int3
and
cltd
push
je
aam
cs
imul
and
pop
push
jge
push
jno
adc
fisubrs
push
push
adc
mov
jbe
popa
add
imul
mul
inc
stos
hlt
xchg
data16
jbe
popa
push
popa
lods
push
scas
jbe
int3
aaa
mov
mov
push
sahf
mov
aaa
out
push
test
loope
in
outsb
xchg
popa
add
je
out
add
and
inc
js
and
inc
push
aaa
icebp
aam
js
adc
jbe
addr16
pop
outsb
sub
loope
aad
mull
pop
cwtl
mov
rcll
popa
mov
push
mov
mov
out
fcoml
inc
xchg
inc
popa
js
adc
ja
aam
js
push
push
jbe
xor
inc
outsb
sub
pop
and
push
ss
jle
xor
in
adc
popa
aaa
push
push
popa
push
push
loopne
pop
or
push
negb
insb
sarb
jmp
popa
lret
jbe
int
mov
mov
push
nop
mov
in
xchg
mov
pusha
xchg
popa
adc
pusha
adc
arpl
pop
js
inc
and
inc
push
sub
inc
push
adc
xchg
in
addr16
data16
jbe
cltd
pop
jmp
rcrl
push
mov
xor
popa
fstl
popa
xchg
ds
call
js,pt
inc
arpl
adc
imul
pop
xchg
in
xor
xor
and
movsb
cmc
std
loope
mov
in
xor
jne
sub
jg
in
mov
pop
and
inc
fwait
push
andb
adc
xlat
lahf
ret
or
push
push
push
negb
lahf
lcall
outsb
add
ror
popa
sbbb
ja
sub
loop
cmp
sub
idivl
aas
push
mov
rolb
mov
in
cmpsl
mov
mov
pop
mov
dec
pusha
mov
ret
in
mov
movsb
incb
stos
popa
cmpsb
mov
movsl
jle
roll
mov
mov
jmp
jl
or
mov
jae
xor
cs
dec
cmp
xor
loop
fsts
aas
fcoml
decl
in
scas
scas
loope
cmp
out
add
jg
decl
mov
scas
mov
cmp
int3
incl
mov
cmp
out
mov
jb
or
jg
faddp
jmp
imul
pop
jp
pop
dec
lahf
inc
or
loopne
push
mov
fwait
lds
pop
stos
sub
roll
aad
or
enter
shlb
mov
pushf
fcoml
pop
cmp
adc
lret
push
stos
ret
pop
and
daa
add
dec
xchg
jl
push
popa
jl
movsl
dec
dec
inc
jnp
stos
push
mov
pop
jl
add
jl
pop
sbb
mov
xchg
insb
pop
jns
notb
mov
dec
aam
and
rcr
pushf
into
push
mov
push
add
xchg
xchg
aam
push
rclb
bound
push
add
mov
mov
add
int3
test
jbe
pop
dec
inc
daa
pop
shlb
add
dec
aad
push
decl
add
cmpsl
stc
push
push
add
test
dec
outsb
fisubs
mov
lret
add
inc
rorb
lods
jecxz
scas
mov
jge
inc
pop
xlat
jns
jg
repz
orb
lods
pop
add
inc
push
mov
jb
stos
sub
dec
fadds
std
jle
clc
mov
sbb
dec
pop
subl
mov
sub
subl
mov
pop
lcall
mov
pop
aam
mov
pop
add
imul
mov
pop
mov
popf
sbb
in
pop
sbb
loope
pop
icebp
inc
hlt
jge
lds
loope
pop
jno
push
call
pushf
cmpl
shlb
sub
fidivrl
outsl
lret
rcrl
in
dec
adc
pop
fcoml
and
pop
daa
xchg
dec
xor
lahf
mov
adc
mov
pop
xchg
pop
mov
movl
fisttpll
push
mov
mov
popf
stos
mov
iret
inc
idivb
popf
mov
pop
popf
jo
dec
aad
clc
push
inc
sarl
aam
sbb
insb
push
std
aaa
dec
inc
or
cmp
ret
adc
sbb
loope
cmp
addl
jns
sbb
or
sub
xor
loope
pop
dec
in
mov
sub
sub
jns
cltd
mov
in
leave
push
adc
int3
push
add
leave
pop
cmp
shl
inc
sbb
xor
sbb
inc
jbe
in
or
sbb
add
pop
fisttps
mov
es
push
ret
dec
adc
add
fistpl
xchg
mov
sub
sbb
fcompl
add
ror
sbb
jo
xchg
sub
cmp
aad
pop
push
mov
jle
mov
add
arpl
and
mov
inc
dec
mov
pop
cmp
xlat
mov
js
sub
jbe
lods
fsubs
scas
inc
lret
mov
inc
jns
add
fs
dec
lcall
adc
mov
test
cmp
push
xor
ljmp
inc
sarl
in
dec
xor
push
repz
cwtl
popa
loop
repz
xor
ljmp
inc
rcrl
in
dec
adc
push
roll
jbe
leave
stos
add
xor
loopne
pop
loop
mov
xorl
sarl
ficoml
fidivrl
test
out
xor
loopne
pop
ret
xorl
mov
or
cmp
pop
mov
ds
loopne
lcall
xor
sar
pop
in
dec
mov
push
jae
sbb
imul
loope
sbb
adc
mov
jecxz
inc
pop
fnstsw
sub
cmp
cmp
cmp
xorb
es
push
and
jge
pusha
cmp
mov
pop
xor
testl
out
das
fsub
loope
cmp
xor
in
dec
ss
cmc
popa
jnp
outsb
popa
sbbb
jnp
dec
addr16
mov
mov
fildl
jb
js
out
mov
sbb
jge
sub
rcl
add
aas
aaa
mov
adc
outsl
rcl
mov
in
and
jne
inc
mov
sbb
in
jae
inc
push
fstpt
mov
ret
popa
xchg
mov
fcomi
outsb
adc
lea
ret
pop
enter
ret
jns
shrb
pop
sti
pop
cmp
jg
aad
push
pop
fldcw
pop
jae
mov
ret
push
ficomps
mov
mov
sbb
stos
pop
int
sahf
sub
ret
dec
sbb
test
sarl
mov
cmp
sbb
lock
sub
push
cmpsb
test
cmp
fs
xchg
shr
cmp
xor
add
out
rcrl
aaa
xor
xchg
fstl
js
movsb
add
fistps
into
lret
aas
sub
jnp
inc
mov
add
addr16
adc
js
lret
js
fstps
js
cmp
les
mov
xor
shrl
test
push
adc
cwtl
imul
jne
pop
arpl
in
cwtl
js
sbb
adc
mov
dec
test
adc
and
mov
mov
add
jp
in
push
add
hlt
fcoms
push
fcomps
dec
lock
imul
repnz
into
cmp
cmpsb
mov
fdivrs
xchg
shlb
cmp
mov
js
mov
call
ljmp
pop
mov
lcall
insl
loop
xchg
popa
jne
lea
aam
js
ja
xchg
icebp
jbe
inc
lds
or
enter
js
imul
in
dec
xor
push
cmp
mov
push
push
jbe
popa
pop
or
sub
aaa
negb
adc
pop
xor
push
xchg
popa
addr16
int3
popa
mov
push
add
sbb
xor
mov
xchg
popa
sti
push
addr16
mov
lods
dec
push
outsl
dec
repz
and
jns
inc
xor
pop
lods
incl
nop
push
cltd
loop
sti
andb
cmp
rcrb
xlat
xchg
dec
mov
sbb
aaa
or
dec
in
fnstcw
jns
cmp
les
adc
and
insl
rcrl
mov
movsl
ffree
inc
cmc
je
xchg
or
iret
sti
push
andb
lds
popa
push
scas
mov
pop
mov
jno
jl
mov
rol
or
daa
lods
repz
call
arpl
xchg
clc
rorb
fsts
stc
stos
xor
add
dec
fwait
pop
push
loope
cmp
push
push
dec
fmul
aaa
xor
mov
stc
in
popa
inc
mov
in
lock
jo
aas
aas
pop
or
negb
push
sub
in
fldcw
dec
mov
in
add
xchg
out
add
lds
push
adc
popa
int
mov
sti
loope
cmp
push
sub
scas
pop
add
das
loopne
mov
inc
mov
cmp
ret
xchg
js
push
pop
pusha
loop
add
inc
in
pop
loopne
push
ret
clc
and
shlb
jl
les
xchg
data16
js
jnp
fidivl
inc
xchg
mov
sub
data16
xchg
cmp
sahf
xchg
xchg
dec
mov
mov
mov
adc
xchg
xchg
js
dec
xchg
rcrl
pop
popa
cmpsb
pop
pop
mov
cmp
adc
xor
push
jno
adc
daa
js
fld
jbe
sahf
pop
iret
outsb
sub
pop
test
push
lea
and
call
sbb
out
outsb
sbb
in
adc
pop
je
and
pop
in
scas
rcrl
xchg
loope
cmp
stos
lret
push
test
loope
pop
and
add
fisubl
dec
xchg
es
push
andl
pop
pop
in
imul
bound
pop
push
aas
push
xchg
push
leave
xchg
xchg
inc
and
jb
and
dec
cmpsb
incb
in
dec
outsb
sub
lock
stos
pop
stos
aam
loopne
push
cmp
add
adc
mov
pop
addr16
sbb
in
repnz
lds
pop
ljmp
xchg
pop
dec
call
or
dec
mov
push
jno
xchg
xor
sub
sub
xchg
and
add
xor
scas
add
or
aam
cmpsl
push
pushf
add
add
in
test
ret
mov
or
insl
jnp
mov
repz
and
xchg
hlt
xor
imul
call
insb
mov
jae
push
lret
call
nop
loope
fstp
mov
lods
jg
and
mov
loop
bnd
jns
inc
cmp
in
dec
testl
repnz
fcmovnb
mov
pop
and
repnz
add
call
fs
pop
dec
aam
js
cltd
in
mov
sbb
daa
mov
push
mov
dec
xchg
add
popf
cwtl
xor
and
mov
lods
daa
jo
out
ficomps
jns
ficomps
add
cmpsl
test
dec
jle
xor
mov
mov
pop
test
int3
testl
cmp
fldenv
ficoms
ficompl
push
daa
ret
fs
mov
jne
xlat
loope
sbb
les
mov
xor
cwtl
fidivs
popf
sbb
movsb
call
sub
stos
ficoms
mov
imul
sbb
hlt
in
push
scas
xchg
popw
jg
jecxz
inc
xchg
movsb
jns
in
lcall
and
mov
js
in
imul
and
stos
pop
ffreep
in
lcall
sub
pop
push
xor
fucomi
lods
rol
mov
movsl
mov
out
pop
in
xor
sbb
cmp
push
and
dec
ftst
push
test
pop
adc
lcall
in
sub
sbb
adc
jecxz
xchg
inc
sub
sbb
sbb
pushf
out
addr16
xchg
dec
xchg
sub
and
orb
rorl
nopl
mov
push
rcrl
in
dec
push
inc
push
aad
inc
std
loope
sahf
mov
popa
xor
mov
outsb
sub
mov
insb
add
fxam
gs
andl
into
sub
aad
jle
jp
dec
push
mov
add
sahf
test
jb
or
test
lds
out
adc
sub
xchg
xchg
dec
out
add
aad
add
int3
add
insb
mov
inc
add
sub
movsl
add
fsts
lock
repz
aas
mov
jbe
mov
xor
fs
rol
pop
pop
popa
xchg
rcll
js
xchg
mov
adc
out
add
mov
dec
test
in
push
sbb
stos
call
mov
xchg
add
adc
mov
in
stos
popa
in
lret
xor
pop
and
ret
pop
sbb
lret
cmpsl
sub
rcll
lods
ret
aas
movsl
inc
lret
lods
add
subb
subb
shll
inc
and
ljmp
mov
cmp
and
add
push
repnz
sbb
stos
pusha
and
imul
mov
inc
stos
dec
xchg
inc
mov
hlt
aaa
cli
inc
or
push
mov
loope
adc
sub
bound
imull
mov
jb
imul
popl
xor
jb
inc
push
arpl
aas
rol
push
or
mov
addl
sub
ljmp
popf
and
mov
aas
pop
test
dec
mov
into
lahf
inc
arpl
test
xchg
sub
ret
add
addb
rcll
and
mov
cli
inc
fnstenv
loop
outsb
mov
into
rcll
xchg
sub
faddl
dec
and
aas
xchg
sub
andb
mov
jne
push
in
add
pop
mov
shll
insb
xchg
adcl
inc
adc
cmpsl
inc
push
pop
add
inc
ja
arpl
dec
shlb
out
call
adc
loop
push
add
not
add
test
dec
outsl
ret
out
sbbl
xor
lret
addl
test
sub
gs
mov
sub
pusha
gs
adcl
push
mov
pop
jb
mov
test
jecxz
gs
sbbb
xchg
ja
sub
sbb
ss
scas
add
xchg
or
dec
xor
mov
in
in
and
add
push
test
mov
xchg
pusha
aaa
mov
call
rcrl
dec
hlt
adc
add
push
sub
gs
push
xchg
mov
xlat
jecxz
gs
mov
in
push
pusha
xchg
pop
mov
es
sub
int3
pusha
push
testb
push
fildl
imul
jne
pop
sarb
xlat
fldenv
js
adc
push
sarl
pop
enter
lock
mov
and
dec
push
rcrb
ror
xchg
sti
je
lock
jmp
ret
xchg
gs
mov
aas
fadd
pop
dec
inc
sub
xchg
or
jmp
addl
cwtl
mov
rclb
jns
xor
ret
mov
mov
mov
dec
jnp
xor
jnp
sub
dec
rolb
mov
sub
xchg
bound
pop
jno
addl
push
scas
ret
add
add
cmp
jnp
dec
imul
lcall
adc
fcmovnb
mov
mov
mov
out
lds
or
cmpl
int3
inc
add
inc
inc
sbb
mov
ftst
inc
in
sub
stos
pop
in
aam
mov
imul
sub
popa
fbld
mov
imul
or
sub
iret
mov
imul
addl
pop
add
sbb
inc
movsl
mov
xchg
add
aad
outsb
in
dec
lds
mov
xchg
xchg
iret
loop
or
popa
add
dec
sbb
pop
imul
repnz
and
fisubs
dec
lret
pop
inc
roll
fisttpll
push
push
stos
rcrl
pop
add
mov
out
loope
pop
test
add
addl
sub
sub
in
sub
stos
pop
xor
lods
incb
outsl
xor
sub
add
ds
push
cmpb
xor
mov
and
inc
iret
push
jp
stc
sub
push
adc
popa
pop
xlat
cs
adc
rcl
or
ss
ljmp
dec
xor
in
xor
ja
imul
movb
pop
pop
adc
push
aad
les
and
sub
outsb
sbb
mov
bound
xlat
pop
orb
cmp
mov
into
in
push
mov
mov
pop
imul
imul
movb
pop
inc
push
pop
mov
subl
sbb
xchg
mov
mov
loope
sbb
aaa
jb
or
push
outsl
ss
ljmp
aad
and
mov
mov
mov
sub
idivb
mov
mov
mov
mov
orl
xchg
ja
ss
cs
pop
jbe
cmp
sahf
inc
add
cmp
inc
push
outsl
jns
xchg
cs
inc
mov
es
fidivl
inc
sbb
jns
push
movsb
cmpsb
inc
sbb
flds
add
inc
sbb
or
adc
inc
ret
arpl
add
lret
mov
fiaddl
add
outsl
and
dec
movsb
outsl
sub
dec
outsl
push
je
mov
in
mov
inc
pop
mov
inc
es
mov
in
in
inc
mov
mov
sub
cld
scas
add
sbb
jp
in
scas
cmpb
pop
fbld
or
push
mov
inc
add
enter
addl
adc
iret
pop
mov
xor
leave
jp
sub
sbb
pop
xor
xchg
out
js
push
call
fldl2e
and
cld
sub
push
or
pop
jp
call
inc
out
js
adc
stos
adc
mov
shll
shl
das
fs
lahf
das
ds
cmp
sub
das
fmulp
orl
pop
lds
or
xor
cmc
mov
ret
mov
cs
jmp
lods
outsb
imul
and
ret
mov
jmp
jmp
aad
add
daa
gs
jp
aad
int3
lock
aaa
push
xchg
mov
xchg
xor
ljmp
lods
aaa
std
lods
call
jmp
rol
aaa
jns
test
add
lret
lret
sub
sbb
rcl
int3
int3
mov
or
dec
int3
push
test
int3
lahf
sbb
mov
int3
add
mov
lods
jo
and
data16
scas
push
leave
ret
pop
dec
mov
jbe
jnp
mov
dec
movsb
dec
fdivrl
or
cmp
ss
jnp
dec
inc
aas
xchg
insl
or
xchg
cld
mov
sub
loope
cmp
xor
sbb
mov
push
pop
in
add
jp
mov
mov
jp
dec
jge
xchg
mov
mov
cmc
int
insl
xchg
stos
cmp
fnstenv
adc
in
adc
lea
loope
fidivs
loope
aaa
pop
lods
or
push
xchg
imul
insl
das
add
xchg
sub
lods
mov
pop
xchg
int
in
adc
lcall
subl
in
mov
bswap
jns
lret
jmp
xlat
in
cmc
in
in
jnp
movsb
lds
mov
in
xor
in
lcall
mov
fidivl
pop
leave
aam
orb
sub
or
sub
jns
arpl
sbb
mov
mov
pop
mov
sub
sub
pushl
push
sub
add
hlt
dec
pop
mov
orl
add
cmpsl
js
aaa
sti
adc
pop
dec
lcall
pop
cli
pop
sbb
aas
int3
je
in
decb
pop
adc
xor
push
push
xor
push
fimull
push
push
xorl
mov
sub
out
push
add
mov
dec
je
jne
pop
push
pushf
push
jns
xchg
stos
outsl
pop
daa
or
out
add
inc
add
pop
cmp
mov
in
stos
adc
std
xor
jne
cmp
pop
int3
loopne
or
mov
lret
jle
cmpl
sub
dec
xchg
ljmp
mov
xchg
jns
and
jnp
dec
jo
cltd
dec
or
push
or
or
or
or
xor
loope
pop
in
mov
sub
inc
mov
sub
sub
jne
jle
shrl
mov
xor
rcll
mov
push
stos
leave
add
sub
add
mov
jns
inc
imul
xchg
mov
sarl
movb
outsl
popa
mov
fwait
shr
rcll
outsb
sub
stos
pop
xchg
js
js
xchg
sub
mov
in
out
stos
pop
scas
stos
xchg
in
push
sub
lret
mov
adc
xchg
js
mov
jmp
mov
aam
pop
sbb
call
in
mov
dec
mov
mov
jae
into
nop
loope
or
pop
lret
les
pop
testb
sbb
cmpb
pop
ja
mov
sub
fidivrs
sub
add
push
sub
cmc
cmc
jbe
fs
adc
gs
into
mov
rol
div
repnz
mov
int3
lret
add
dec
push
add
dec
mov
daa
ror
mov
push
add
cmc
int3
in
mov
jns
inc
in
repnz
lret
add
repz
xor
jne
daa
insb
call
mov
fwait
mov
jne
aam
pushf
xchg
jo
dec
fmull
pop
adc
js
mov
ret
test
test
ss
jns
cmp
leave
xchg
or
enter
mov
stos
imul
mov
pop
addb
push
stos
call
dec
cs
int3
adc
mov
in
stc
lods
cmp
mov
dec
pushf
sub
adc
aaa
lods
mov
cli
jns
xor
xchg
or
mov
daa
dec
call
repnz
xchg
or
sbb
xor
divl
or
ret
or
xchg
add
lods
sbb
bound
mov
push
add
fnstcw
loope
fldl
xor
fwait
in
or
std
and
leave
imul
dec
sti
xchg
add
fld
cmc
inc
mov
dec
ss
in
movsl
inc
lds
pop
fs
insb
pop
mov
addl
out
adc
sbb
imul
imul
sbb
lds
mov
pop
ret
push
movsl
jae
lahf
pop
or
fisubrs
in
jge
inc
sahf
test
cs
inc
leave
fiadds
xchg
xor
pop
or
into
loope
cmp
adcl
add
adc
jb
add
testb
mov
mov
inc
insl
pop
and
or
sbb
cmc
fnstcw
sub
mov
std
mov
outsb
adc
aad
add
in
and
int3
mov
xor
xchg
ds
or
insb
outsb
sub
dec
aad
ss
jns
scas
scas
add
loopne
shrl
int3
jnp
cmpb
int
sahf
sub
cmp
push
outsl
mov
sub
ror
mov
sub
out
insb
or
lea
outsl
std
xchg
int
xchg
mov
rcrb
xchg
mov
inc
lcall
adc
rcl
mov
jnp
int3
push
sub
aad
jne
fldcw
jbe
scas
pop
enter
inc
jbe
push
insb
inc
jbe
xor
mov
dec
push
mov
xchg
add
push
adc
aad
add
in
ja
sub
adc
xchg
add
sub
mov
jp
push
and
fadd
dec
adc
sub
jle
sub
push
scas
push
sub
inc
sub
xor
jle
dec
and
xchg
addr16
add
adc
push
adc
es
call
jle
jge
es
call
idivb
aaa
push
add
xor
dec
xchg
scas
or
les
fimuls
in
mov
mov
lahf
loope
mov
pop
pushf
in
cmp
insb
in
mov
and
push
cmp
mov
inc
mov
in
xchg
fadds
mov
ss
push
pop
xchg
add
scas
mov
flds
sub
cmp
cmp
iret
jbe
aas
aam
js
cmp
sub
jl
push
xchg
aaa
inc
and
ja
rcll
xchg
dec
jo
idivb
xchg
xchg
call
xor
or
or
outsb
sub
rcll
outsb
sub
xchg
sbb
adc
test
lods
inc
and
xchg
add
leave
shr
inc
mov
mov
outsb
int3
shll
dec
sbb
xchg
xlat
or
clc
pop
ds
push
fnstcw
jbe
sub
cmp
push
or
push
adc
js
testl
in
push
or
in
aaa
scas
imul
rorl
mov
pop
aas
imulb
dec
mov
jl
xor
aam
aas
jae
ret
pushf
push
enter
xor
pop
stos
fstl
adc
pop
dec
push
dec
mov
out
jl
pop
adc
flds
mov
or
jbe
ljmp
lcall
xchg
adc
mov
xor
push
mov
adc
push
dec
movsl
sbb
scas
mov
aaa
xor
or
inc
es
in
pop
push
xchg
aaa
xor
imul
lock
out
clc
mov
fisubrs
push
adc
adc
mov
add
cmp
push
cmc
mov
and
and
icebp
sbb
int3
or
subl
mov
fdivrs
push
into
inc
jge
dec
xor
push
and
nop
push
sbb
rclb
inc
je
add
dec
push
pop
and
out
je
push
xlat
mov
sbbb
mov
mov
xchg
out
and
jmp
sbb
fiadds
in
jecxz
lock
xchg
in
and
popa
scas
push
xlat
shl
int3
xlat
pop
or
xchg
jbe
mov
mov
push
jmp
jnp
cli
mov
loope
je
iret
out
pop
je
add
mov
out
jg
xchg
pop
lock
jo
sbb
mov
dec
dec
loope
mov
mov
js
xlat
lret
xchg
or
dec
sbb
lret
popf
jmp
aad
xlat
dec
aas
lods
pusha
lds
in
pusha
loopne
mov
pop
jnp
loope
sub
leave
cmp
imul
add
sub
test
push
sub
lret
fsub
dec
cs
mov
mov
das
dec
dec
sbb
stos
movsl
xlat
sahf
pop
or
xlat
lret
mov
push
std
ret
cmp
push
sub
push
push
lock
in
mov
enter
fsubrs
out
dec
js
roll
cs
and
jmp
and
cmp
jp
stos
test
adc
jmp
inc
leave
stc
mov
dec
adc
stos
lods
fwait
pop
dec
nop
hlt
dec
adc
jmp
mov
out
dec
adc
imul
pop
fdivrl
fcmovnu
push
inc
loop
mov
adc
fsubs
and
das
clc
mov
inc
hlt
mov
fistpl
stos
jnp
repz
incb
insl
nop
lock
mov
xchg
popa
push
int
sub
fucomi
push
adc
jne
icebp
push
inc
inc
fldt
xor
adc
dec
mov
adc
cmp
out
fsubl
pop
xor
and
mov
push
inc
popf
xor
jecxz
fwait
js
mov
sbb
adc
stos
mov
sub
movsl
lds
adc
in
movsb
mov
inc
dec
pop
push
adc
dec
jmp
and
pop
fistpll
cld
rcrb
push
xor
aam
pxor
inc
lret
push
inc
test
lea
fs
xchg
ja
jmp
imul
scas
dec
cmpl
mov
mov
xor
adcl
enter
adc
pushf
mov
nop
jp
sbb
cmpsb
popa
aas
pop
mov
arpl
push
dec
outsb
in
add
sub
cwtl
sbb
aaa
jne
dec
mov
pop
xor
jno
cmp
sbb
jmp
scas
add
mov
jne
adc
outsl
pop
mov
sub
adc
aad
in
std
xchg
adc
xchg
imul
inc
jno
cltd
xchg
or
mov
cmp
jmp
cmc
enter
pop
insl
aas
push
lea
dec
mov
xchg
mov
xor
incb
or
lods
cmp
sbb
cmp
and
mov
inc
mov
dec
dec
add
and
cmp
out
stos
adc
jbe
xor
sbb
pop
dec
pop
push
int3
enter
lret
mov
aad
push
mov
inc
sub
mov
rcrl
inc
sbb
call
pop
aad
iret
dec
push
jne
inc
into
icebp
dec
push
jne
push
inc
sub
rcll
call
inc
push
hlt
or
dec
rorb
imul
rcr
mov
shll
push
push
enter
push
lea
mov
and
add
xor
lds
stc
sbb
mov
in
popa
mov
cmc
mov
std
add
into
jne
push
jne
pop
cmp
mov
sub
adc
xor
jl
lret
ljmp
xchg
je
xor
jb
xchg
shrl
or
xor
push
cs
repnz
aam
pop
inc
icebp
push
js
enter
cmc
flds
enter
fdivrs
fldt
scas
mov
into
inc
loop
pop
jmp
xor
and
flds
int
je
mov
shrb
lock
jmp
inc
push
mov
cwtl
test
and
inc
inc
lret
int
inc
push
test
stos
and
leave
fildll
sub
or
xchg
push
inc
into
adc
adc
je
lcall
push
push
das
xor
pushf
aas
mov
mov
jmp
xchg
xchg
mov
movaps
dec
popl
test
and
ljmp
push
lods
mov
sti
movb
dec
pusha
sub
xor
jmp
or
add
xor
cld
rorb
xchg
bound
push
std
adc
sub
jns
fsts
jg
loop
and
mov
pushf
xor
mov
dec
push
adc
mov
fs
push
pushf
lds
mov
mov
in
pop
aaa
xchg
jb
push
dec
xchg
mov
sub
inc
jo
int3
pop
dec
mov
es
add
jb
aam
add
jecxz
fldcw
leave
adc
enter
movb
pop
sub
jno
int3
dec
and
daa
dec
push
sub
daa
ds
std
adc
cmp
mov
add
or
add
jb
jae
es
push
jb
push
xchg
push
aas
adcb
cwtl
inc
shlb
out
outsb
add
or
dec
xlat
mov
loope
sbb
outsb
mov
cmp
xchg
adc
cmp
lcall
mov
dec
add
movsl
repz
aam
push
pop
mov
push
and
xchg
mov
jb
loope
lret
enter
pop
test
ror
push
and
data16
test
jp
xor
push
roll
gs
addl
xlat
or
push
add
pop
or
xlat
dec
dec
mov
adc
mov
jge
outsl
push
fildl
stc
mov
fcmovnb
mov
push
out
xchg
fidivrs
add
jge
stc
inc
pop
roll
rcrl
pop
push
in
inc
dec
shlb
repz
test
xlat
clc
push
loopne
pop
pop
popa
adc
hlt
shlb
aam
push
shrl
adc
nop
idivb
sub
dec
in
sub
addl
pop
ret
aad
ja
push
in
or
dec
add
jecxz
call
sub
lahf
into
jmp
push
hlt
mov
push
lea
fldenv
call
adc
adc
jne
adc
jle
jbe
push
add
pop
adc
push
push
push
jo
pop
fwait
xor
pusha
ja
sbb
stos
out
notb
pop
in
fsubr
and
mov
movl
jg
sti
adc
stos
dec
jmp
mov
sbb
addl
mov
lods
push
mov
sbb
sbb
add
push
icebp
out
flds
push
cmp
push
in
in
jecxz
test
addl
adc
mov
jl
rorl
jae
push
adc
imul
jne
ljmp
adc
pop
pop
in
in
adc
data16
fbld
iret
inc
adc
dec
in
aam
inc
xor
jge
jecxz
int3
jo
lock
jno,pt
xor
and
cmp
sub
sub
mov
xor
cmp
loope
pop
mov
mov
aam
sbb
shll
sub
pop
push
into
and
inc
pop
stc
aad
insl
leave
mov
orb
loopne
lock
arpl
mov
ljmp
imul
daa
dec
xor
in
popa
or
lock
ret
sub
cmp
inc
sub
shl
inc
lds
in
add
xor
mov
sub
push
les
rcl
rorb
sti
add
inc
in
pop
mov
cwtl
mov
sbb
xor
dec
inc
pmullw
scas
or
sbb
xor
sub
lret
in
inc
inc
xor
mov
inc
stos
pop
outsl
fld
xor
or
in
stos
icebp
pop
pop
lret
sub
inc
cmp
push
sub
nop
xor
dec
sub
lret
aaa
out
fcomi
and
scas
int
pop
push
rorl
sub
add
popa
fwait
dec
ficoms
imulb
mov
dec
adc
and
add
rclb
add
into
int
daa
xchg
xor
je
push
mov
fldenv
sub
cmp
fimull
out
cmp
sub
jnp
rcrl
sub
aam
popa
push
push
iret
ret
add
sub
add
dec
in
xor
push
pop
add
imul
mov
sub
jno
pop
flds
and
mov
cld
flds
in
in
xchg
cmp
mov
popa
je
pusha
fimuls
fldenv
in
sub
fldln2
sub
add
sub
mov
add
mov
push
mov
mov
xchg
push
aad
sub
cmp
iret
loop
push
push
mov
aad
fs
inc
adc
add
outsb
sbb
inc
cwtl
xchg
mov
rcl
sub
cs
pusha
cmp
jno
push
dec
sbb
loope
aam
popa
rclb
ret
add
sub
cmp
stos
xlat
dec
push
pop
sub
pop
pop
jecxz
mov
fpatan
popl
push
flds
mov
icebp
rolb
xlat
sub
xor
sub
cli
xchg
add
sub
movsb
xchg
push
sub
scas
cmp
lret
je
pop
jle
roll
sub
add
cmc
adc
aas
rclb
push
add
mov
adc
in
dec
sub
cs
push
sub
je
mov
sub
lret
aad
or
sti
mov
dec
leave
jne
andl
outsl
outsl
pop
dec
pop
jg
lret
pop
sub
int3
pop
cmp
lea
repnz
ljmp
cs
lods
or
push
dec
adcb
push
and
sub
push
in
push
mov
js
sbb
ss
dec
test
loope
aam
popa
jno
insl
ret
add
sub
mov
aaa
xor
inc
dec
pop
das
cmp
shl
xchg
and
mov
jns
pop
or
xchg
push
cmpsb
xchg
dec
adc
iret
jns
lods
or
ret
add
sub
xor
dec
mov
sub
gs
mov
mov
or
xchg
fimull
sbb
lahf
dec
pop
fdivp
sub
dec
vmaskmovdqu
fincstp
mov
aad
outsb
pop
mov
in
fcompl
rcll
adc
icebp
push
and
les
fldenv
sub
cmp
inc
dec
adc
dec
stos
cmp
stos
dec
pop
mov
loope
aam
popa
adc
ret
add
fldenv
sub
cmp
dec
cmp
idivl
mov
or
mov
sub
jnp
aad
or
and
aad
insl
lret
in
cmp
out
mov
sbb
fldt
mov
jb
rcrl
bound
nop
lret
aad
or
stc
jns
repz
push
adc
pop
sub
dec
in
sub
pop
ffree
in
dec
fisubs
lahf
jle
sub
xchg
sub
lret
aaa
jecxz
fnstenv
ds
or
dec
ja
imulb
push
sahf
pop
subb
test
fldt
mov
pop
fisttps
dec
cmp
das
jns
or
pop
pop
ret
add
sub
rcll
mov
fimuls
in
aaa
lds
fsts
jg
push
sub
pop
fs
add
sub
mov
faddp
enter
sub
adc
add
out
or
cmp
rcr
add
jmp
orl
pop
cmpsl
ret
in
cmc
mov
lods
or
sub
or
flds
pop
lahf
pop
cmpsb
pop
jl
ss
or
sbbb
aad
outsb
pop
rol
push
push
in
lcall
xchg
in
xor
aad
or
aad
out
pop
pop
aad
outsb
pop
cltd
ret
in
xlat
call
push
sub
cs
jne
ret
add
sbb
adc
jno
jns
push
pop
js
mov
add
sub
dec
mov
push
xlat
add
dec
pop
sub
push
jg
add
sub
dec
push
cwtl
sub
jnp
test
shrl
iret
mov
push
or
cltd
dec
test
in
xor
flds
in
in
pop
ds
push
test
shrl
or
push
ret
add
sbb
ficomps
in
pop
mov
dec
dec
push
push
xchg
push
shlb
pop
jmp
push
lret
sarl
out
pop
fsubrl
adc
sbb
or
add
mov
push
lret
mov
int
in
push
xchg
cmp
mov
out
or
jno
aad
or
cmp
sub
lret
aad
sub
cs
ljmp
cs
js
sahf
dec
xor
or
mov
sub
mov
test
arpl
push
inc
add
int
pop
sub
pop
rcrb
int3
out
xlat
test
add
mov
sub
inc
aad
fs
test
daa
fs
cmp
push
loope
add
icebp
sub
push
stos
xchg
add
sub
jne
test
xchg
aad
fs
rcl
clc
fs
pop
aad
fs
pop
dec
xchg
shrl
inc
dec
jl
mov
sub
dec
cmp
adc
pop
pop
jecxz
inc
pop
mov
lods
rol
outsl
pop
pop
fnstenv
inc
inc
aad
fs
vpminsw
add
in
inc
pop
mov
rolb
fldt
jle
add
outsb
sub
cmp
sub
push
in
add
cmc
dec
push
cwtl
subl
imul
pop
cwtl
in
xor
fldenv
in
cld
es
dec
in
fldenv
in
cmpsb
fisttps
shrl
andl
push
cwtl
subl
neg
daa
push
dec
out
push
je
xorl
jnp
push
sub
dec
cwtl
andl
int
pop
out
outsl
pop
push
pop
inc
dec
pop
test
pop
rcrl
ror
jb
ljmp
cs
ljmp
cs
ljmp
mov
mov
int
pop
insl
outsl
pop
push
pop
jge
inc
daa
ss
es
push
push
shl
pop
aad
fs
fcmovbe
fs
cmp
xchg
add
sub
jmp
push
jmp
cwtl
in
mov
out
or
jg
je
pop
outsl
rcll
outsl
pop
enter
aad
loop
pop
dec
fptan
jmp
push
aad
fs
xchg
pop
pop
rolb
dec
sub
shll
fs
lret
aad
fs
std
ds
ja
add
popa
outsl
pop
dec
pop
jno
dec
pop
sub
int3
pop
cmp
shll
jp
pop
dec
shl
inc
cs
scas
or
push
dec
shrl
aad
fs
cmp
push
out
xchg
add
ljmp
pop
push
test
mov
lcall
pop
aad
fs
fst
out
sub
cmp
mov
mov
ficoms
xchg
add
jp
push
shll
mov
daa
pop
rcl
icebp
scas
or
icebp
mov
adc
dec
mov
aad
outsb
pop
and
in
jno
aad
sub
dec
mov
ficoms
cmp
jo
les
pusha
dec
push
cwtl
cmpl
out
aad
sub
mov
mov
stos
cs
mov
or
outsl
dec
pop
pop
and
insl
pop
outsl
pop
fstps
rorl
outsl
pop
pop
pop
test
dec
pop
bound
fcomp
jb
inc
inc
aad
fs
flds
aas
in
inc
cmp
flds
stc
in
inc
pop
mov
rolb
pop
sub
jge
add
sub
es
add
ss
loopne
lock
inc
cwtl
loope
repz
loope
mov
push
pop
mov
adc
cmp
fsubrl
test
arpl
pop
stos
dec
sahf
cli
ss
dec
sbb
sub
mov
aad
or
fisttps
pop
push
aad
outsb
pop
sbb
in
push
sbb
pop
sub
mov
insl
stos
dec
mov
es
pop
f2xm1
jnp
rcl
jp
ud1
push
or
xchg
push
and
pop
rorl
sub
inc
lret
push
xchg
lcall
add
add
fwait
cmpsb
pop
cli
pop
sub
dec
or
outsb
push
popf
pop
ss
dec
sbb
popa
cwtl
dec
sarb
pop
loope
dec
rcrl
rcrl
roll
or
popa
jnp
push
add
imul
shrl
sub
and
loope
aam
popa
ficoml
ret
add
xchg
mov
xchg
pop
inc
xchg
sub
js
aad
cli
add
dec
mov
jns
xchg
cli
js
ret
pop
push
flds
dec
in
or
sbb
mov
mov
inc
rcl
outsb
pop
dec
ret
add
dec
sbbb
mov
sub
inc
aad
outsb
pop
add
in
push
fcmovnbe
push
in
inc
sbb
ja
mov
movsl
jge
shll
fsubrl
cli
push
or
rol
xchg
jmp
outsb
pop
das
ret
in
jp
je
pop
stc
rcll
pop
push
sub
dec
sub
lret
aaa
in
fnstenv
sbb
enter
or
lret
xlat
dec
push
xchg
pop
dec
roll
mov
js
push
mov
pop
lret
sub
cmp
dec
dec
fistpl
adc
jb
mov
mov
dec
cwtl
loope
push
mov
add
nop
add
fwait
in
dec
add
sbb
sub
mov
mov
dec
int
rcrb
sarl
out
pop
inc
push
lretw
daa
mov
insl
mov
pushf
adc
in
imul
sahf
adc
add
cmp
mov
les
xor
dec
xchg
movsl
jp
lcall
mov
or
call
xor
inc
cmc
jge
mov
sub
loop
cmpsl
pop
aaa
mov
push
pop
jge
clc
inc
lret
mov
and
sti
add
mov
into
jg
sti
jns
pop
insl
ret
test
pop
sti
jnp
stos
aaa
cmp
bound
dec
in
loopne
je
inc
dec
mov
inc
dec
sti
xor
js
cmp
jp
cmp
je
cli
add
stos
out
std
dec
sbb
xchg
int
mov
shlb
out
std
mov
or
inc
out
pop
cmpsb
xor
jbe
loop
sbbb
sbb
subl
mov
lods
mov
mov
hlt
sub
lret
xlat
pop
xor
xor
std
push
insb
xlat
jbe
js
sarl
xor
sub
cmp
loopne
push
mov
lret
je
rorb
inc
and
jnp
xchg
fs
iret
pop
push
js
fldenv
shl
push
pop
cmp
or
call
pop
lea
loopne
xor
jbe
popl
lret
movsl
aam
fwait
cmpl
add
pop
and
inc
cmpsb
ds
lret
sub
mov
shrl
cmpsb
xchg
pop
cli
int3
stos
sub
in
push
add
sbb
and
inc
mov
cmc
stos
insl
cs
mov
cmpsb
mov
pop
xor
int
roll
push
pop
or
lods
mov
pusha
iret
daa
jbe
and
nop
or
sbb
jle
js
pop
test
sub
and
add
and
adc
pop
push
sub
cmpb
iret
adc
imul
loope
int3
ret
lret
sub
dec
daa
push
roll
fcomps
jno
mov
pop
sbb
mov
jg
jns
push
cmp
xor
add
sub
cwtl
pushl
cmp
sub
stos
push
mov
sub
sub
test
pop
pushf
xchg
cwtl
xor
into
in
add
mov
fsubs
pop
in
push
lret
or
int3
add
pop
sti
dec
fld
jbe
dec
mov
leave
bound
cli
and
dec
jo
mov
adc
pop
push
das
fwait
arpl
push
and
sub
cli
pop
push
addb
jecxz
or
inc
enter
mov
dec
addps
mov
loopne
in
mov
cmpsl
popa
ljmp
add
sbb
pop
fdivs
inc
loop
popa
fnstenv
cmp
scas
ret
pop
lcall
mov
loope
jns
adc
jns
int3
outsb
in
dec
pop
sarl
aaa
lret
addr16
in
dec
xor
push
cld
add
in
loope
pop
jno
rolb
sbb
adc
sub
cmp
ss
in
andl
or
cltd
outsb
push
lea
insl
inc
mov
jo
adc
ds
push
in
cltd
popa
xchg
lcall
out
insb
pop
cmc
into
add
xor
mov
into
sub
mov
movsb
mov
dec
cmp
inc
jne
stc
pop
das
stos
adc
in
mov
and
std
mov
into
sub
mov
bound
mov
sub
leave
mov
jo
mov
jmp
imul
stc
sbb
sbb
sub
inc
pushf
loope
aaa
pop
sbb
pop
mov
and
sub
data16
in
into
ret
pop
mov
andl
add
sbbl
in
xlat
repnz
inc
pop
jns
mov
inc
mov
into
and
mov
cmpsb
je
data16
cmpsb
cltd
sub
movb
and
mov
pop
loope
sbb
xor
mov
cmp
xor
xchg
xchg
sub
cld
in
adcl
lea
inc
lock
pop
stos
mov
movsl
sbb
cltd
inc
js
jns
outsb
in
enter
fsts
push
outsb
mov
inc
aaa
pushaw
loop
icebp
movb
aaa
int
pop
inc
jae
xorb
jae
and
pop
out
cmp
arpl
push
std
push
andl
std
and
hlt
or
xchg
dec
test
pop
push
fsubs
add
push
es
xor
mov
cltd
daa
inc
mov
xchg
gs
cli
xchg
mov
jno
inc
loop
sbb
mov
xchg
sub
pop
nop
andl
pop
out
daa
mov
dec
mov
es
mov
mov
mov
add
sub
or
cmp
fmul
subl
xor
xor
pop
mov
in
fbstp
loop
xlat
insb
pop
jg
xchg
daa
mov
dec
jle
mov
cmpsb
cmp
shll
pop
push
dec
incl
sahf
pop
push
push
ss
lods
cmpsb
cmp
adc
daa
sub
xchg
xor
outsl
xchg
sub
mov
inc
push
cli
add
in
rclb
xor
aam
mov
loop
sub
fs
mov
in
sub
pop
xor
add
cmp
sbb
in
jmp
shll
into
add
xor
addr16
lds
add
imul
dec
add
fwait
add
ja
xchg
js
ficompl
in
xchg
js
and
scas
adc
xchg
sub
or
not
add
jo
cld
in
test
dec
add
mov
mov
sub
ss
arpl
xchg
push
add
and
mov
and
xchg
mov
xchg
test
push
dec
xchg
bound
in
into
add
sti
xor
addr16
sbb
or
dec
jno
addl
aaa
mulb
push
iret
mov
dec
xchg
inc
mov
fstps
in
sub
movb
cmp
cmp
adc
fs
andl
inc
adc
sub
popa
sbb
pop
add
mov
dec
sbb
cmp
pusha
js
imul
out
and
push
and
stos
dec
jle
cmpsb
lds
es
or
add
xchg
in
xorb
add
push
xor
mov
in
stos
add
pop
jno
movsb
mov
jg
push
cmp
cmp
int
xchg
in
pop
mov
or
dec
pop
inc
push
sbb
push
lock
stos
fldt
bound
pop
xchg
pusha
add
fnstcw
bound
in
stc
add
sarl
pop
mov
push
inc
mov
stos
push
sbb
push
mov
pop
out
mov
das
mov
out
movsl
iret
mov
fstps
ret
ret
lcall
jns
andl
push
std
js
js
subl
mov
jmp
ret
aaa
mov
adc
aaa
mov
fcoml
loope
cmp
pop
js
leave
pop
cmpb
and
push
daa
arpl
mov
fcompp
mov
in
sub
es
add
in
xor
faddl
fwait
inc
inc
push
xchg
mov
in
or
push
jecxz
sti
adc
arpl
dec
jae
fsubrl
and
push
sar
cwtl
loope
cmp
pushf
in
xchg
adc
stos
fisttpl
mov
hlt
in
cmc
mov
mov
dec
mov
push
pop
add
jmp
ret
popa
push
sti
ret
ret
xor
or
dec
sbb
xorl
xchg
xor
imul
and
push
cli
inc
in
dec
mov
push
jo
add
sub
ja
dec
jnp
dec
add
into
mov
mov
pusha
in
dec
xchg
and
and
push
call
movsl
loope
sti
in
lods
add
cmp
cmpsb
mov
cmpsb
aas
cmp
cmp
adc
sti
xchg
in
or
pop
pusha
push
sbb
push
push
repnz
push
lea
cmp
int
subb
lods
inc
rolb
loopne
mov
push
inc
or
dec
sbb
push
mov
out
sti
or
rorb
into
into
add
jge
rorb
cmpsl
add
shll
inc
pushf
add
aas
push
loopne
fsts
into
add
sbb
mov
into
sub
add
repz
mov
in
arpl
push
pop
add
adc
mov
shll
or
add
add
sbb
mov
into
sub
inc
jns
mov
mov
and
push
adc
pop
add
sbb
and
stc
or
shll
or
cmp
data16
orl
pop
imul
push
cmc
andl
stos
roll
dec
adc
xchg
sub
cld
add
enter
rcrl
aaa
mov
or
cld
into
addl
inc
pop
outsb
scas
sarl
aad
scas
mov
pop
xor
outsb
jns
mov
pop
xchg
aaa
js
fpatan
and
mov
iret
or
jae
adc
stos
jae
jae
xchg
cmp
adc
pushf
in
xor
cmp
pushf
in
xchg
shll
in
mov
or
fnstcw
outsb
sub
mov
in
ja
ret
pop
ret
in
sub
xlat
in
sub
aas
popf
out
push
push
mov
loopne
pop
js
sub
xor
iret
jae
dec
adc
into
mov
stos
adc
pushf
in
or
jb
push
in
pushf
in
push
flds
push
out
cld
in
int
sub
in
movsb
ret
fsts
ret
pop
out
in
jg
andl
dec
roll
dec
mov
pop
scas
js
add
faddl
js
imul
fmull
fadd
js
and
daa
and
push
mov
cli
inc
jb
mov
inc
and
or
iret
ss
adc
cmp
add
subl
shll
push
adc
scas
mov
es
pushf
in
xchg
icebp
punpckhdq
imul
pop
js
test
and
pop
das
xchg
sub
arpl
daa
jnp
dec
dec
inc
mov
cmp
and
sbb
adc
insb
ss
or
cmp
pop
into
subl
mov
mov
mov
lds
int
roll
push
xor
xor
test
fstps
insb
add
nop
aaa
jmp
pop
arpl
repz
and
pop
cmp
cmpsl
mov
push
jge
jns
hlt
lods
scas
lds
pop
in
jne
aaa
or
aad
in
aam
fwait
or
adc
add
aaa
aaa
out
or
jae
xchg
xor
int
sub
adc
in
cmpsb
imul
ss
sub
in
jns
loope
imul
sbbb
loope
cmp
jge
les
or
pop
call
insl
imul
inc
cmp
sub
subl
lea
xchg
dec
or
imul
arpl
inc
loope
pop
inc
scas
shrl
mov
scas
lds
cmpl
jns
insb
in
lea
pop
or
rorl
scas
or
jae
int3
xor
mov
insb
adc
lods
mov
unpckhps
scas
sub
scas
adc
or
insb
sbb
pop
dec
xorl
inc
mov
push
int
out
sbb
scas
push
adc
jmp
in
pop
add
sbb
sti
aaa
outsl
call
in
in
push
decb
adc
or
inc
dec
mov
stos
sub
mov
push
fsubrl
add
push
sub
sub
in
mov
loop
mov
dec
push
dec
xor
push
inc
aaa
or
sti
pop
ret
xchg
in
movsl
adc
push
sub
dec
xor
xor
xor
loopne
adc
ret
sub
mov
push
aam
or
sti
xchg
in
daa
mov
or
dec
push
stos
push
fldl
push
mov
mov
in
sub
push
and
lret
mov
sbb
add
pop
dec
mov
fs
add
ljmp
push
fcoms
dec
mov
testl
aaa
loope
fnstcw
add
rcrl
inc
pop
add
push
sub
adc
sbb
mov
into
sub
dec
jns
mov
stos
daa
cmp
sub
and
and
jnp
aaa
pushf
mov
stos
loope
cmp
js
mov
pop
inc
jns
add
push
stc
lret
subl
mov
imul
out
iret
mov
fld
jmp
dec
sahf
stos
push
pop
add
dec
or
int3
iret
mov
sbb
lret
push
cmp
cmp
sub
xor
out
movb
pop
xchg
aaa
and
fstps
push
or
jmp
push
adc
in
mov
push
popa
mov
stos
sub
or
dec
lock
adc
xchg
popa
xchg
sbb
ret
sub
les
subl
js
fimuls
ja
dec
js
fcoml
lret
sub
pop
out
dec
jge
adc
aad
inc
mov
push
mov
or
ljmp
push
adcb
push
lcall
or
mov
mul
sti
pop
mov
push
js
subl
jns
popa
mov
or
sub
sti
xor
subl
js
pop
pop
adc
js
fmull
dec
mov
and
sti
pop
sub
lods
mov
movb
jns
mov
popa
or
xchg
dec
in
sub
sti
xor
or
lret
add
or
hlt
in
iret
adc
stos
fldt
sti
aam
mov
out
sbb
mov
mov
xor
std
sti
adc
stos
pop
or
xlat
orb
ds
sub
jns
inc
and
insb
addr16
sti
aas
add
mov
cld
cmp
sbb
aam
mov
js
dec
sbb
mov
mov
movb
adc
mov
sti
cmc
sti
fucomip
dec
mov
push
jno
test
sub
push
loopne
xchg
inc
bound
push
mov
sub
stos
push
dec
and
mov
adc
aaa
mov
sub
jle
jmp
pop
es
ss
push
lods
adc
mov
xchg
mov
or
dec
pop
or
stos
icebp
inc
cmpsb
lret
push
xchg
push
sbb
xor
testb
or
icebp
inc
enter
push
std
pop
add
and
shll
jns
push
add
or
fildll
or
ret
sub
pop
shl
jb
jb
leave
outsb
lock
outsb
sub
test
sub
mov
push
int3
mov
clc
add
mov
lds
pop
cltd
add
fidivs
pop
andl
mov
fisubrl
sub
in
dec
push
add
sbb
mov
jbe
push
cmc
cli
pop
fdivs
dec
xchg
popa
jle
or
dec
xchg
repz
mov
lods
pop
jbe
xchg
push
test
int
inc
push
leave
imul
pop
jmp
lcall
iret
call
int
or
pop
sbb
mov
call
push
lods
pop
inc
adc
enter
sub
cltd
loope
sub
fadd
inc
shufps
int
dec
enter
sub
popa
test
push
mov
jns
xor
mov
clc
shlb
inc
adc
jno
push
out
push
int3
stc
xor
pop
ror
bound
xor
dec
or
repnz
dec
inc
push
fisubl
outsl
dec
pop
or
addr16
jmp
dec
dec
jno
leave
mov
or
or
fcom
ret
adc
mov
popa
push
icebp
lret
pop
hlt
dec
jnp
mov
inc
dec
or
cld
movsl
test
loope
ret
jmp
fcoml
fdivrs
sub
adc
leave
dec
outsl
sub
fisttps
outsl
rcrb
mov
pop
push
pop
jmp
test
insb
shrb
std
jle
lret
pop
gs
test
bound
add
in
es
jle
icebp
adc
sub
int
add
vandnps
xor
cwtl
dec
addl
outsl
dec
in
outsb
mov
ds
std
pop
inc
hlt
sbb
xchg
aad
dec
push
in
mov
cmp
sar
sbb
dec
and
push
ror
sub
rorl
imulb
pop
call
dec
ljmp
loope
cmp
test
sub
jmp
aad
das
cmpsl
ljmp
inc
cmpsl
leave
out
push
inc
and
int
cmp
sub
add
pop
jecxz
jecxz
cmp
insb
insl
inc
fldenv
pop
pop
test
lea
or
sub
inc
fnstenv
xlat
dec
inc
enter
inc
adc
iret
pop
lds
cmpb
icebp
mov
das
imul
dec
sbbl
dec
and
mov
sar
adc
cmp
xchg
je
push
mov
xchg
ror
stos
push
cmp
xchg
prefetch
sub
repz
push
mov
cmp
pop
gs
mov
xor
out
inc
pusha
cmpsl
nop
stc
or
mov
andb
xchg
or
push
cmp
sbb
xchg
mov
or
mov
stc
adc
push
imul
hlt
mov
call
push
inc
cmc
and
icebp
cmpsb
hlt
mov
add
shr
mov
int
call
loope
icebp
jge
and
push
push
ljmp
cltd
lret
imul
push
push
jmp
aaa
sub
adc
inc
test
mov
int3
clc
mov
cmp
dec
xor
into
mov
subb
push
lret
js
cmpsl
fs
sub
pop
lods
std
lret
gs
pop
arpl
dec
fsts
push
dec
ds
int3
sub
std
push
inc
mov
cli
sub
icebp
cmp
inc
lret
or
or
sar
pop
or
in
enter
xchg
lods
jb
dec
pop
popa
fdivrl
sub
sub
xchg
sub
inc
add
xor
or
fistps
shrb
jae
fdivrs
push
xchg
or
lds
pop
jbe
jmp
sub
rcrb
pusha
lcall
adc
int
cmp
push
sub
inc
dec
jmp
add
test
push
imul
or
mov
and
and
add
cmp
aaa
jno
push
pop
cmp
adc
stos
inc
xchg
mov
sbb
adc
lods
in
pop
shlb
cmp
jno
and
inc
jbe
inc
and
pop
leave
ss
hlt
icebp
push
call
sub
ficoml
add
push
aaa
pop
cmp
lret
stos
imul
lret
xor
xor
out
outsb
out
push
jnp
stos
mov
enter
in
mov
jb
scas
fcmovnb
fstpt
xchg
push
push
push
fwait
inc
sub
out
cs
out
popa
or
push
sub
xchg
push
cwtl
inc
and
cwtl
imul
lret
sub
rorb
xchg
pop
jns
and
inc
add
push
lret
fimull
push
inc
test
inc
sbb
xchg
rorw
add
push
stos
add
and
out
aaa
mov
fcoms
dec
mov
sbb
clc
mov
pop
xor
stc
push
push
add
sub
dec
out
xor
dec
mov
ss
in
push
fisttpl
jmp
dec
pop
push
or
and
inc
pop
pop
and
mov
sbb
or
and
je
or
sbb
enter
int3
lds
dec
add
push
ljmp
add
repnz
sbbl
push
add
xor
stc
std
dec
out
jae
xchg
mov
xchg
xchg
mov
into
xchg
test
push
mov
inc
lret
dec
pop
jge
adc
xchg
repz
das
ret
cmpsb
cmp
loopne
lret
jmp
jns
adc
mov
cmp
ja
movsb
adc
lea
leave
add
inc
enter
push
insl
lret
insl
mov
loope
test
hlt
insl
jae
inc
fwait
pop
dec
mov
negl
sbb
hlt
xchg
loopne
imul
leave
adc
sub
sti
fstps
jbe
ljmp
rcrl
jnp
imul
sbb
and
dec
adc
outsb
inc
call
fiadds
cmp
jg
int3
cmpl
dec
inc
dec
fwait
sbb
add
push
rcll
or
sub
push
pop
loope
or
xchg
and
xor
sbb
push
cmpsb
rcrl
ss
scas
imul
xchg
xor
cmp
shl
inc
mov
dec
or
fmuls
into
ret
aad
mov
inc
fwait
inc
and
cmp
or
daa
dec
add
imul
mov
or
ret
cmp
stos
cmp
pop
int3
sub
ja
scas
mov
pop
lret
push
or
dec
xorb
dec
std
jbe
aad
dec
or
lret
pop
sub
mov
add
in
add
sub
sbbl
dec
lcall
les
pop
scas
mov
movl
addl
mov
enter
mov
outsb
cmp
dec
sbb
psubsb
leave
bound
hlt
sub
add
pop
imul
lret
mov
in
scas
dec
test
lcall
mov
push
jb
xor
or
into
out
fldenv
int
sub
sbb
mov
mov
and
sbb
inc
push
lahf
inc
aad
add
mov
ret
fnstcw
movsl
xor
js
iret
daa
arpl
lods
add
inc
lret
pop
loop
pop
or
inc
push
shl
stos
push
or
insl
inc
dec
daa
mov
ret
in
and
add
lds
cmp
loope
sbb
daa
loope
cmovge
movsl
sub
dec
leave
cmp
inc
pop
or
mov
xor
packsswb
lret
sbbb
lret
int3
or
push
ljmp
inc
inc
mov
pop
or
bound
cmp
and
xchg
rcll
stc
or
orb
cmp
or
lds
cli
or
xor
jmp
movsb
repnz
inc
cmp
test
pop
mov
cld
mov
push
adc
int3
das
mov
fnstenv
sbb
flds
jbe
mov
or
jae
mov
dec
lock
sub
or
xchg
dec
dec
in
rorb
add
xor
xchg
lret
cwtl
fnstcw
int3
daa
gs
sahf
out
mov
shl
mov
cld
or
into
jp
out
ja
and
outsb
cld
lea
ret
lods
loope
loopne
testb
aas
fisttps
xor
inc
pop
call
mov
and
dec
push
mov
js
or
out
sub
popl
insl
push
loopne
mov
push
sbb
sub
sub
sub
cmp
sub
pop
lods
enter
cmovg
jb
int
mov
lret
lret
sub
clc
xchg
lret
pop
fwait
into
enter
adc
xchg
mov
enter
cmp
ds
xor
hlt
dec
sbb
ror
push
dec
out
inc
push
cmpsl
test
push
hlt
push
iret
dec
das
into
cmpsl
pop
cmpl
imul
pop
ret
sbb
xchg
imul
iret
lret
sub
inc
fmull
and
loope
push
addb
ret
movq
outsb
push
push
popf
test
cmp
js
or
mov
lret
push
push
in
cwtl
rorb
add
jmp
sbb
mov
mov
xchg
sub
push
adcl
dec
dec
pop
leave
mov
imul
das
dec
cmp
and
fisubs
and
fwait
push
aas
shll
adc
cmp
in
jmp
imul
fldenv
rorb
lahf
dec
fildl
das
inc
inc
dec
arpl
dec
cmpsl
or
mov
imul
dec
dec
sbb
push
out
adc
and
lods
xor
inc
clc
inc
dec
popf
in
mov
cld
or
dec
insb
mov
inc
into
ret
mov
adc
lods
dec
inc
lret
sbb
stos
xor
jmp
mov
aaa
fildll
dec
xor
mov
stos
mov
dec
jne
fmul
dec
jb
dec
imul
mov
lods
fscale
mov
sub
int3
push
mov
test
mov
push
dec
or
fucomi
push
in
inc
lret
and
mov
or
rclb
dec
mov
cs
popf
add
push
sbb
scas
jecxz
or
jmp
stc
push
jbe
adcl
out
hlt
mov
dec
fwait
loope
paddsb
test
loope
hlt
out
or
dec
mov
dec
mov
add
loope
jns
dec
repz
mov
hlt
mov
ljmp
pusha
iret
andl
or
pop
mov
jo
lods
dec
and
leave
sbb
dec
cmp
fildl
lret
inc
jecxz
mov
fisttpll
daa
test
xor
das
dec
or
xchg
leave
sub
inc
dec
pop
jns
scas
push
sub
add
dec
sub
mov
test
fidivrs
push
lcall
mov
add
mov
dec
clc
icebp
mov
shrb
mov
stos
aad
fisttps
dec
and
xchg
push
outsb
sbb
inc
mov
and
push
and
mov
sbb
aas
pop
dec
or
dec
loope
or
les
dec
ljmp
push
sub
fstps
mov
or
dec
xor
jne
mov
mov
adc
cltd
pop
int3
xor
cmp
leave
lea
jbe
daa
mov
movsb
int3
and
xor
mov
into
idivl
jmp
dec
sub
cli
mov
sbb
or
lcall
xor
push
stos
cmp
sub
push
sub
push
ss
pop
test
fidivrs
stos
stos
repz
arpl
dec
push
sub
xor
push
cmp
mov
arpl
mov
cmpsl
cmpl
and
test
out
inc
xchg
in
xor
das
lret
mov
inc
adc
clc
push
jne
and
shlb
rep
cmp
jp
pushl
and
xor
push
sbb
jb
rorb
or
dec
insl
out
xchg
xor
xor
xchg
jmp
push
push
mov
cmp
xor
push
xor
fnstsw
int
jecxz
and
es
or
pusha
call
cmp
dec
xchg
popa
movsl
dec
js
leave
pop
hlt
xchg
dec
sub
inc
lods
das
cmpsl
dec
cmp
sbb
mov
adc
push
push
xlat
divb
xor
test
pop
pop
xchg
sti
dec
hlt
sub
lea
ffree
test
mov
push
shr
hlt
clc
adc
mov
mov
into
sub
pop
fisttpll
pop
xor
inc
push
cmp
inc
rcr
dec
inc
and
xor
inc
jbe
sbbb
ret
test
test
aam
ljmp
aaa
fdiv
lds
fxtract
or
jmp
sub
cmp
dec
mov
jmp
flds
sub
jmp
sub
sub
mov
mov
or
pop
and
arpl
leave
jno
dec
mov
mov
mov
inc
lods
push
cwtl
mov
sbbb
cwtl
or
jmp
es
out
repnz
add
in
mov
push
cld
jle
or
int3
out
int
cmpsb
sbb
lret
dec
xchg
hlt
lock
dec
cmp
push
bts
and
xchg
int
mov
cmp
cmpsl
in
mov
lret
out
mov
stc
mov
andb
dec
or
ret
sub
mov
mov
inc
gs
and
or
inc
iret
xor
test
mov
dec
stos
fstp
sti
push
test
loope
or
flds
sub
aaa
add
cmp
sub
and
aaa
pop
sbb
push
icebp
std
push
mov
stc
ret
dec
daa
push
test
out
xchg
inc
fstpt
aad
mov
push
rcll
mov
mov
loopne
cmp
out
es
lea
shrb
sub
fldcw
xchg
orb
sub
pop
pop
out
push
and
dec
cmp
dec
sbb
imul
pop
leave
int3
in
push
mov
mov
push
cmp
iret
hlt
ret
or
push
lds
lahf
jbe
jg
jg
pop
das
dec
push
sbb
out
push
xchg
aaa
movb
sub
out
pop
in
fnstenv
inc
push
jbe
out
mov
push
push
mov
push
pusha
inc
mov
notl
dec
dec
hlt
in
or
std
out
loop
inc
dec
ret
mov
insl
or
add
cmp
push
fnstenv
or
out
dec
xlat
sub
in
push
sub
or
and
push
mov
push
add
or
arpl
mov
jno
push
xor
mov
leave
out
jnp
jb
push
ds
hlt
adc
mov
push
inc
out
jp
xchg
push
fistl
ret
mov
arpl
pop
loopne
inc
pop
jl
cmp
xor
out
dec
jno
addr16
dec
ds
xchg
outsl
mov
pop
mov
leave
pop
cmp
dec
testl
mov
cmp
leave
icebp
push
mov
and
or
or
in
dec
out
test
pop
push
cmp
stos
mov
call
insl
adc
push
sub
add
mov
dec
repz
mov
lods
lods
or
mov
sub
inc
xor
adc
cmp
test
ljmp
mull
inc
sub
inc
xchg
sbb
fisttpl
adcb
inc
clc
outsb
sbb
pop
repnz
bound
or
push
push
cmp
jecxz
mov
xchg
movsl
and
stc
ja
inc
or
loop
aas
dec
cltd
cmpsl
xchg
and
in
mov
pop
enter
cld
pop
push
hlt
lds
nop
leave
add
dec
fwait
push
shll
rolb
fnstcw
push
lock
xor
mov
inc
mov
inc
fcompl
cmp
iret
and
add
inc
dec
and
add
dec
add
rorb
popf
icebp
add
fadd
dec
xor
in
xor
rorb
fwait
or
xor
xchg
dec
add
rcrl
stos
mov
inc
testb
repz
sbb
push
cmp
add
inc
mov
lods
pop
leave
jno
or
or
adc
mov
dec
inc
jae
dec
jne
ret
call
mov
sti
sbbl
test
dec
loope
std
lea
je
xchg
sbb
imul
sub
xorl
in
or
sti
lea
ret
int
push
dec
cmp
pop
xor
pop
dec
ret
dec
adc
arpl
ja
leave
bound
inc
nop
xchg
cmp
imul
mov
shll
movsb
cld
popa
les
lds
fildl
sub
or
out
dec
pop
dec
in
clc
les
mov
lea
and
sub
icebp
cmp
call
lret
pop
mov
and
jecxz
jno
stc
fildll
lods
sti
into
call
push
test
dec
imul
or
loope
xchg
inc
movsl
inc
dec
inc
mov
dec
pushf
mov
dec
sbb
xchg
inc
xlat
in
imul
inc
push
add
and
xor
fwait
mov
dec
jmp
push
push
mov
sub
das
push
mov
aad
in
call
push
push
leave
jno
dec
dec
dec
cltd
mov
loope
xchg
add
dec
jmp
inc
loope
or
in
mov
dec
daa
inc
ljmp
imul
cwtl
call
xchg
add
jl
cli
inc
mov
enter
test
cmp
pop
stos
fdivs
test
out
lret
cmp
in
insb
icebp
lods
ret
iret
xchg
das
or
xchg
out
loope
imul
push
ljmp
lods
in
pushf
jmp
leave
repz
cmp
xor
and
filds
pop
cs
or
inc
shlb
loopne,pt
pop
sbb
dec
adc
xor
adc
or
dec
ja,pn
rol
dec
dec
dec
call
orl
inc
and
and
dec
mov
mov
inc
cli
xor
lods
lock
ja
inc
ret
sbb
adc
out
icebp
cmpsl
sarb
fnstcw
or
rcrl
sub
cmpsb
into
cwtl
shlb
xor
in
cmpb
ror
pop
ret
cmpsb
stos
lret
cmp
xor
dec
lret
cs
inc
mov
add
cmp
lcall
push
std
and
jp
rorb
pushf
inc
nop
or
push
les
or
fdivrl
jno
lock
jecxz
push
enter
mov
xor
int
lds
mov
add
inc
mov
pop
stos
sub
xor
out
sahf
lahf
inc
dec
xchg
push
enter
dec
stc
xchg
jmp
cmp
add
iret
in
inc
les
inc
jecxz
mov
mov
jmp
sub
bound
sbb
pop
cmp
xor
jbe
mov
out
popa
int
jp
cmp
dec
and
inc
fdivs
fldl
bound
adc
ljmp
sub
addl
mov
xchg
and
dec
lret
mov
mov
mov
xchg
sbb
out
add
add
pop
faddl
inc
je
ret
int
call
pop
int3
push
fwait
and
push
mov
xchg
stc
push
add
aas
out
dec
mov
adc
test
dec
cmpb
mov
fsts
pop
pop
jbe
mov
sbb
sbb
insb
ja
pop
dec
and
in
push
stc
push
leave
pop
dec
xor
dec
xorb
cmp
or
das
outsb
pop
push
adc
and
fisttpll
dec
or
or
test
push
xchg
add
mov
les
ret
pop
lret
inc
loop
lds
leave
xlat
jmp
ret
push
jge
push
cmp
inc
sub
dec
enter
dec
pop
dec
dec
data16
fucomip
jmp
scas
xchg
inc
hlt
cmp
leave
movsl
ss
cltd
lret
ja
rcrb
sub
inc
pushf
xor
out
push
xchg
nop
push
pop
pop
les
call
enter
cltd
xchg
dec
dec
shl
bound
out
jo
sub
adc
addl
test
xor
stc
inc
dec
scas
dec
stos
mov
xchg
in
cli
sbb
sub
sbb
mov
push
push
jae
cmc
dec
subl
xor
mov
push
data16
insl
jb
enter
xchg
lret
dec
fcmovne
loop
cmp
insl
jae
in
inc
mov
xchg
cmpsl
bound
sub
jae
fstpt
cmp
jecxz
popf
mov
dec
inc
lret
mov
dec
arpl
ror
add
xchg
mov
mov
jno
cli
add
xor
and
out
push
push
das
lods
lock
push
or
mov
aad
or
stos
fistpll
pop
pop
loope
loope
mov
inc
imul
dec
ss
aad
cltd
push
fwait
and
out
dec
inc
mov
mov
mov
sbb
or
adc
adc
dec
movsl
js
xor
sarl
cmp
inc
scas
dec
pop
mov
sub
cmpsl
and
dec
shll
push
int
sti
dec
iret
sarb
inc
xor
dec
adc
dec
mul
dec
dec
dec
jg
repnz
shll
cwtl
int
cmp
pop
enter
push
dec
mov
inc
mov
inc
add
push
test
pop
pop
lret
in
or
andb
shrb
and
out
xchg
cmpsl
sub
shlb
int
icebp
push
jmp
jmp
dec
push
sub
dec
arpl
mov
out
in
divl
lret
or
mov
sub
inc
shrb
xor
dec
mov
aad
leave
xchg
mov
sub
add
sahf
mov
xor
lret
outsb
or
outsb
out
outsb
fsubrs
adcb
dec
or
fisttpll
jecxz
mov
jge
lds
sbbl
cmc
in
out
jae
mov
cmpsl
sub
push
mov
adc
adc
xor
push
out
push
jnp
arpl
icebp
fxtract
aas
jecxz
cmc
cs
imul
mov
adc
std
push
and
mov
clc
mov
sti
leave
jmp
mov
lods
mov
pop
sub
xchg
and
aas
inc
push
mov
mov
cmp
andl
dec
cmpb
cmp
cmp
imul
and
gs
int
cmp
dec
mov
test
cmp
hlt
cmp
in
sub
push
pop
xchg
ret
insb
inc
js
je
hlt
mov
xchg
hlt
and
push
lret
jnp
mov
dec
jmp
jnp
xchg
hlt
shlb
cmpsb
ret
leave
xchg
into
das
push
pop
mov
and
test
and
stc
adc
hlt
dec
pusha
xor
arpl
lods
or
push
mov
in
pop
ja
add
clc
fsubl
int3
rolb
repz
fmull
push
jle
push
insl
and
and
xchg
pop
and
test
sbb
mov
adc
inc
test
and
add
rorb
orl
aad
push
mov
in
outsl
mov
loope,pt
lods
push
inc
mov
dec
lahf
or
stos
test
push
add
test
lock
shrl
arpl
or
jne
xor
inc
mov
dec
repz
mov
inc
xchg
imul
push
cmpsl
imul
dec
arpl
nop
in
cltd
adc
inc
sub
inc
mov
pop
test
mov
sbb
jo
inc
sub
jg
es
jnp
mov
jmp
jbe
sbb
or
dec
push
inc
mov
sbb
arpl
jle
insb
inc
jno
test
lret
sub
push
dec
mov
out
dec
dec
xchg
xchg
addps
sub
mov
mov
orb
inc
and
push
cmp
inc
jp
jle
jmp
aas
add
arpl
test
inc
mov
mov
pop
lods
or
dec
sbb
push
fidivrl
into
jno
sub
fwait
sub
repnz
sbb
jmp
andl
addb
sbb
shl
push
xor
sub
pop
cmp
adc
mov
jbe
movsl
fsubrl
lahf
push
sub
js
xchg
cwtl
das
dec
inc
sub
sbb
dec
push
or
shrl
mov
fsubrs
arpl
cld
imul
cwtl
adc
cs
adc
int
iret
lods
paddsw
mov
fidivrs
push
enter
int
shr
and
lahf
repz
pop
les
inc
adcl
outsl
inc
sbb
and
insl
lods
addr16
inc
aam
pop
popa
bound
icebp
hlt
or
xchg
dec
dec
stos
push
lahf
cmp
outsl
inc
inc
daa
sbb
cwtl
xchg
jle
xorl
pop
icebp
mov
cli
aad
movsl
inc
les
out
lcall
leave
sahf
add
push
or
mov
or
add
push
adc
mov
mov
push
pop
mov
ds
pop
dec
mov
sub
sub
or
mov
imul
xor
fnstsw
into
test
mov
adc
sahf
push
in
imul
lods
or
es
out
push
les
and
dec
orb
jbe
dec
xchg
inc
das
arpl
out
fcmovu
les
movsl
add
and
or
mov
push
inc
sbb
or
sbb
ficomps
call
mov
xor
sub
pop
dec
dec
sarl
lret
cmpl
popa
dec
ror
sub
mov
cmp
dec
imul
sarl
dec
ljmp
mov
stc
push
sub
lret
xor
pop
cmp
enter
repnz
insb
add
jp
sub
and
push
pushf
iret
mov
lret
xchg
jge
sub
inc
xor
mov
das
stos
clc
aad
or
dec
imul
enter
lahf
inc
mov
jmp
orl
jg
aas
xor
jns
aam
aas
testl
mov
leave
jl
xor
cmpsl
and
adcb
inc
or
adc
add
mov
mov
inc
mov
jae
stc
xchg
push
cmpb
fbld
jg
dec
xchg
sbb
mov
or
pop
cmp
hlt
pop
cmpw
roll
mov
dec
sbb
mov
sub
push
std
in
sahf
mov
cmpl
ficompl
push
dec
lret
xchg
shll
lea
int
sub
sub
test
mov
jae
mov
push
sub
sbb
fadds
cwtl
jnp
pop
jae
int3
lret
adc
repz
adcb
mov
repz
jnp
int
outsl
sbb
daa
aas
inc
xor
std
push
add
inc
push
test
sub
leave
dec
dec
lds
push
jg
lret
shll
mov
dec
push
or
lods
cmp
into
lret
jno
dec
shl
iret
xchg
lret
mov
in
es
out
inc
ret
dec
dec
iret
dec
dec
dec
into
test
dec
inc
das
ror
lds
lods
ret
sub
into
cld
movl
int3
inc
pop
mov
mov
lret
ret
and
dec
imull
jbe
inc
lds
rolb
xchg
and
xchg
hlt
add
in
test
sub
ljmp
es
lret
add
lock
sarl
push
jo
cwtl
pop
das
pop
add
enter
insb
and
dec
adc
dec
dec
add
add
into
mov
sbb
outsb
cmp
pusha
int3
and
pop
iret
pop
call
add
mov
pop
mov
dec
or
dec
mov
pop
stos
sub
pop
ret
stos
pusha
inc
daa
in
or
inc
flds
inc
scas
icebp
adc
sub
ret
rcrl
xor
or
loope
stos
pop
or
or
gs
jno
dec
mov
in
loopne
loop
das
or
jge
or
or
sub
jg
dec
and
cs
imul
or
xor
int
lahf
bound
cmp
scas
cmc
dec
sub
repnz
fmul
ret
mov
iret
fabs
push
sub
into
rcr
push
test
push
inc
cwtl
sbb
cltd
jecxz
js
or
rorl
sbb
adc
cmp
int
ror
mov
lret
adc
jns
sahf
mov
sbb
out
sarb
repz
and
data16
jmp
ja
decl
jns
call
test
cmpsb
mov
xor
jecxz
hlt
test
mov
clc
shll
mov
fimull
lea
adc
insl
aam
pop
inc
xor
inc
test
imul
sbb
push
adc
mov
sub
out
xor
jp
dec
dec
mov
popa
dec
sti
fimuls
adc
or
mov
mov
xchg
cmpsl
sbb
push
mov
int
dec
xlat
jmp
push
mov
lret
fnsave
out
lret
into
push
pop
xlat
addb
mov
mov
pushf
loop
sub
cwtl
adc
and
insb
loop
out
mov
pushf
inc
cmp
sub
cmp
pop
fidivs
leave
filds
or
popf
das
addl
aaa
test
loop
dec
inc
rorb
xchg
roll
dec
leave
mov
pop
mov
jo
mov
hlt
inc
jmp
inc
sub
dec
dec
or
pop
lods
cltd
int
insl
dec
inc
rorl
movb
xor
or
call
mov
cltd
mov
inc
mov
dec
mov
add
jb
or
mov
xor
inc
inc
or
push
xchg
test
sub
inc
mov
or
dec
fldenv
mov
sbb
scas
and
add
jbe
sbb
inc
inc
adc
push
addl
das
add
call
inc
stos
jae
xor
int3
xadd
adc
or
dec
push
add
push
cmpsb
add
push
daa
jge
js
iret
sbb
mov
shrl
push
inc
and
push
and
adc
out
adc
jbe
xor
dec
fnsave
out
lret
enter
mov
jnp
and
ret
xor
push
call
int3
mov
mov
push
ja
xchg
imul
pop
cwtl
sub
stc
mov
imul
mov
sbb
push
and
aas
or
int
mov
mov
push
pop
pop
xor
xchg
sbb
loop
mov
dec
dec
push
mov
aaa
arpl
repnz
sub
enter
inc
daa
leave
jo
xor
jmp
mov
push
inc
int3
xchg
pop
mov
sbb
sub
cmpsl
sub
insl
pop
inc
cmp
dec
testl
movsl
mov
push
cmp
call
push
subl
lret
sbb
ja
sti
and
mov
cmp
sbb
adc
pusha
mov
movsl
lahf
dec
mov
fnstenv
and
or
dec
flds
into
add
test
addr16
inc
in
xor
jae
mov
mov
mov
lods
in
adc
fidivrl
insb
pop
sub
push
mov
call
enter
and
adc
cmp
mov
dec
sub
call
and
flds
inc
dec
add
test
out
mull
lret
jmp
outsb
test
xchg
cmp
sub
cmpsb
cmp
lret
push
push
addl
dec
adc
cltd
rolb
push
mov
and
pop
imul
cmpsb
add
fmuls
in
xchg
lret
imul
inc
mov
or
leave
gs
data16
rolb
data16
mov
inc
cmpl
ret
push
pop
in
pop
test
dec
out
lock
movsb
and
lret
mov
jg
mov
cltd
out
sub
jmp
jae
mov
push
fldenv
enter
pop
aas
pop
mov
jmp
mov
in
sub
or
inc
cmp
lret
push
popl
xor
cmp
loope
dec
pop
push
in
les
fcoms
lea
mov
pop
cmp
pop
pop
or
out
dec
and
jmp
pop
stos
xor
jmp
inc
mov
xchg
and
dec
push
sahf
xor
rolb
inc
xor
lds
shlb
or
push
clc
enter
in
inc
mov
das
sub
scas
in
mov
mov
cli
add
rcr
add
popa
jmp
leave
mov
roll
mov
or
test
xchg
das
out
add
out
out
mov
test
xchg
inc
imul
xchg
pop
call
daa
in
pop
add
cmpsl
add
ret
pushf
sbbl
fwait
in
movsl
inc
and
ja
adc
rdtsc
jecxz
jo
cmpsb
jmp
xor
enter
stos
xor
or
sub
push
daa
pop
mov
inc
scas
test
jecxz
xor
xor
or
sub
xor
push
cmp
cmp
lret
or
mov
hlt
sub
add
jns
rorb
cmp
enter
fsubrs
lds
sub
add
and
mov
xchg
hlt
jg
cltd
clc
cwtl
aam
lods
inc
jecxz
je
dec
xor
add
cmpsl
outsb
cmp
xlat
cmp
dec
cmp
add
add
dec
add
lock
stc
push
scas
or
dec
or
sub
sub
dec
pop
fwait
add
and
adc
inc
aas
mov
popa
cmp
and
mov
mov
mov
cmpsb
dec
sub
ds
jmp
negl
cli
add
jnp
dec
push
fisttpll
cmp
fisttpl
cltd
stos
push
jmp
pop
hlt
and
cs
adc
int3
jns
pop
fs
push
ja
push
lret
aas
ja
sub
sub
or
adc
loop
enter
jbe
or
cmp
push
pop
stos
arpl
ret
rcrl
aaa
sub
inc
imul
or
mov
sbb
dec
or
shr
sbb
add
pop
pop
xchg
sbb
fidivrl
lret
cmpsb
hlt
cltd
push
inc
sbb
mov
and
popa
cmp
mov
xor
clc
cmp
fs
dec
enter
add
or
or
imulb
inc
in
rolb
cmp
lods
loope
out
xchg
adc
mov
xchg
aad
pop
lds
xchg
popa
inc
pop
les
inc
inc
aam
js
inc
test
xchg
movb
cmp
cmpb
xchg
mov
aas
test
cmp
adc
outsl
and
jecxz
dec
ret
out
inc
push
and
add
fcmovnb
jl
add
mov
sti
mov
push
mov
jnp
out
pop
mov
movsl
xor
fistl
dec
fimuls
adc
mov
push
and
nop
arpl
xor
and
cmpsb
clc
dec
xchg
sti
add
mov
mov
hlt
iret
mov
test
outsl
mov
imul
jae
fisubrl
and
call
mov
sub
int
inc
xchg
pop
mov
roll
aaa
ror
dec
outsl
cmp
or
sarl
fnstsw
decb
mov
aad
add
cmp
test
cmp
dec
test
cmp
shlb
push
mov
loop
inc
and
inc
add
mov
subl
xchg
enter
push
xor
dec
dec
vmovapd
adc
xchg
outsl
popa
popa
shr
mov
outsl
mov
mov
clc
pop
or
mov
enter
lds
aas
dec
into
insl
cmpsl
test
outsl
push
loopne
xor
scas
add
enter
and
jecxz
roll
clc
xorps
inc
fldenv
push
pop
das
test
out
lds
cmp
and
test
push
push
mov
cltd
sub
aaa
pop
les
inc
adc
jne
push
dec
inc
lret
stc
adc
pushf
jb
jbe
das
bound
add
pop
xor
shlb
mov
cwtl
dec
sub
inc
cmp
lret
sub
rcr
icebp
sbb
xor
push
lods
addb
cmp
imul
bound
push
mov
dec
aad
rcll
pop
fistpl
fwait
sbb
cmpsb
sub
lcall
push
mov
jno
dec
jb
mov
xchg
mov
or
test
jecxz
dec
sub
ret
in
jno
jne
dec
pop
fmull
pop
inc
dec
xchg
cmpsb
mov
sahf
inc
and
cltd
push
aas
aad
into
cmp
sub
mov
sub
insl
cmpsb
pop
into
add
ret
sbb
push
jae
stos
xchg
inc
sarb
xor
push
clc
test
enter
js
and
add
add
pop
loope
jecxz
mov
sub
mov
popa
dec
cmp
mov
test
jnp
inc
call
or
sub
test
dec
xchg
jmp
push
mov
cmp
inc
lock
sbbl
aaa
pop
pop
imul
mov
jg
stos
shr
jbe
lods
pusha
or
xlat
repz
insb
int3
dec
add
test
out
test
test
shll
cld
cmp
in
daa
dec
xchg
ds
fistps
mov
dec
mov
inc
mov
rcll
aad
push
fcmove
pop
xchg
add
push
imul
and
int3
push
and
inc
push
lds
mov
mov
mov
int
and
mov
or
sbb
dec
in
push
push
data16
in
pusha
pop
test
xor
pop
push
out
int3
sbb
add
xlat
push
inc
jg
addr16
imul
std
cwtl
or
enter
push
in
sahf
fistpl
inc
rcrb
dec
fmul
pop
pop
inc
fwait
pop
mov
jo
sub
xchg
imul
aad
cs
movsb
lods
cmp
cltd
in
sub
xchg
vmread
int3
enter
pop
or
and
loopne
loop
stos
pop
mov
push
lret
jbe
add
pop
inc
outsl
or
fs
pop
dec
loope
dec
sbb
xchg
out
mov
pop
mov
dec
in
sub
push
jge
mov
push
push
ljmp
or
xlat
xor
inc
sbb
push
xor
xor
or
shl
or
xor
enter
mov
cmp
add
std
and
inc
lret
or
push
cmp
pop
ret
sub
fldcw
shrl
pushf
sub
leave
shr
mov
cmpsb
inc
jb
inc
cmp
add
lret
or
and
fnstsw
lea
add
or
mov
jecxz
mov
mov
xor
lock
adc
cmp
mov
out
xchg
xchg
int3
jnp
sbb
imul
ja
push
jbe
loop
pop
mov
popf
cmp
mov
pop
cmp
xor
out
pop
pop
add
mov
and
jbe
cmc
pop
test
mov
test
sahf
dec
sbb
inc
lret
adcb
lds
fldl
mov
push
loope
iret
pop
cmpsl
roll
in
jle
pop
cmp
neg
mov
mov
sub
pop
popf
mov
push
xor
or
int
aad
jp
enter
cli
stc
sbb
cmpsl
dec
jmp
scas
rolb
fimull
jnp
jnp
sub
jmp
insl
das
dec
pop
jecxz
mov
lods
aad
adc
push
push
add
sbb
sbb
and
rcrl
inc
lcall
and
aad
roll
loope
jb
push
jb
mov
sub
cli
push
cmpsb
aaa
aad
jae
adc
sub
and
mov
xchg
stos
xor
fldenv
pop
or
cmpsl
roll
mov
lret
pop
and
test
xchg
add
dec
testl
shl
lds
or
fwait
dec
das
ja
clc
or
addl
clc
push
push
xchg
cmp
cmpsb
jbe
testb
inc
and
pop
pop
jo
cmp
adc
push
or
push
jmp
or
mov
ficomps
pushf
mov
dec
xchg
aas
push
add
add
xor
iret
mov
aad
stos
cmp
xor
add
cmp
jl
jae
outsl
jb
jnp
xchg
stos
dec
add
fmul
ret
stc
adc
mov
xor
out
push
sub
in
inc
push
dec
loope
sbb
cmpsl
pop
pop
les
test
xchg
lods
dec
xor
addr16
stc
xchg
mov
sub
adc
cmp
insl
ja
or
mov
loopne
lahf
aad
outsb
jo
mov
or
call
stos
jo
call
je
mov
int
add
and
inc
xor
pop
aad
push
sub
jecxz
sbb
and
aaa
shrb
push
jle
xor
add
jmp
jle
push
jmp
stc
dec
bound
imulb
loopne
jnp
or
iret
dec
add
ret
or
mov
cmp
int
pop
adcl
clc
imul
cmp
mov
int
push
push
or
mov
icebp
out
add
mov
test
mov
push
es
or
test
scas
adc
inc
jo
pop
add
cmp
pop
add
pop
popf
jmp
pop
push
fldenv
mov
in
adc
dec
cwtl
or
ja
cmp
fadds
scas
inc
mov
call
and
mov
and
repz
sti
adc
jmp
mov
lods
in
sub
and
mov
repz
inc
icebp
pop
mov
mov
add
frstor
adc
shll
pop
sub
iret
or
jl
xchg
int3
icebp
int3
inc
xlat
jno
ret
mov
mov
ja
clc
popa
and
call
imul
add
ds
lods
test
inc
xchg
push
push
mov
xchg
or
loop
or
ffree
lock
icebp
aas
push
shl
add
or
int3
pop
addb
xor
leave
cli
repz
mov
pop
lds
and
add
or
pop
dec
mov
xchg
sub
icebp
cmpsl
push
push
lods
xor
sub
dec
xchg
sbb
cmp
popa
or
addr16
push
jge
pop
dec
cmp
loopne
arpl
inc
adc
inc
rclb
div
sbb
clc
xor
scas
sbb
mov
in
outsl
dec
incl
sub
lods
sub
or
mov
lret
lret
adc
pop
dec
mov
popf
int3
lds
sub
xchg
xchg
sbbb
sub
mov
or
call
loopne
dec
sbb
dec
sub
cwtl
sub
mov
and
push
xchg
or
addr16
dec
sub
dec
out
pop
pop
pop
out
push
jmp
hlt
dec
stos
addb
dec
data16
xchg
imul
add
mov
int
cmp
iret
mov
lcall
sub
stos
mov
pop
inc
or
cmp
or
jne
leave
mov
aaa
inc
and
hlt
xorb
shl
mov
jo
out
aad
xchg
popf
ljmp
sbb
test
cmp
or
fiadds
xchg
sbb
sub
push
cmp
cwtl
dec
test
inc
call
lods
inc
pop
and
inc
mov
loope
loope
inc
scas
orl
xor
dec
or
lret
aaa
shrb
fs
inc
jmp
dec
lret
daa
ror
sbb
pop
inc
mov
cmovne
repnz
jle
cmp
fdiv
insl
popa
pop
insb
jg
loop
dec
mov
pop
add
fisttpll
xlat
into
in
loope
mov
xchg
sbb
mov
mov
dec
xor
into
xchg
ss
jle
roll
movsl
dec
sub
arpl
lock
jne
dec
rcrl
fisttpl
sbb
jno
xor
pop
jmp
and
pop
mov
sub
push
mov
jge
inc
test
sub
fnstcw
mov
cmp
add
cmp
adc
inc
push
cmp
push
mov
call
dec
inc
aam
repz
je
and
dec
pop
insl
das
and
imul
sub
dec
cli
mov
jg
cmp
cwtl
outsl
popf
push
stos
inc
mov
mov
shrl
sbb
cmp
xor
pusha
pmaxsw
mov
add
or
inc
or
lds
pusha
cmp
dec
ret
sub
cmp
dec
or
sbb
pop
push
or
pop
lods
mov
subl
pop
sub
sub
mov
push
neg
mov
aad
dec
pop
pop
push
sbbb
pop
mov
sub
inc
adc
call
sub
jge
xor
add
inc
pop
inc
add
cmp
sti
push
in
dec
add
lret
jbe
sub
frstor
xchg
sub
hlt
in
jnp
pop
jmp
lds
mov
or
call
mov
jecxz
lock
shlb
xor
icebp
pop
hlt
scas
outsl
mov
lcall
inc
mov
or
insl
es
push
sub
inc
mov
insl
dec
mov
jmp
inc
icebp
push
aad
dec
fsubr
sbbl
xchg
aam
add
sti
fwait
lret
sarb
lret
dec
dec
push
xchg
lods
enter
mov
ljmp
enter
or
xchg
int
test
push
sub
loope
pop
ret
mov
pop
iret
icebp
cmovp
dec
popf
xor
loopne
push
fistl
jnp
jne
xor
pop
and
sbb
or
cmp
and
jge
lret
push
insb
pop
stc
mov
leave
andb
xchg
int3
bound
ror
sbb
or
mov
add
pop
inc
fwait
pusha
pop
xchg
cmp
pop
gs
lahf
movsb
or
xchg
daa
mov
fcmove
jl
fadds
xor
ficompl
jecxz
mov
pop
iret
sub
imul
test
lcall
mov
xchg
into
outsl
lret
cmp
lret
dec
cwtl
popa
dec
sub
lret
arpl
cmp
je
xchg
or
xchg
dec
mov
nop
dec
or
cmp
rcll
pop
or
dec
cmp
je
cmpsl
sbb
pop
stos
lret
and
pop
ror
iret
or
fwait
stc
push
sti
add
inc
cmp
addb
fisttpll
test
kandw
inc
mov
ffreep
push
bound
in
icebp
out
dec
fstps
mov
sub
cmpsl
dec
arpl
mov
xor
movsl
push
sahf
inc
aas
add
dec
adc
int
je
push
jge
or
into
movsl
popa
jmp
inc
mov
hlt
test
out
mov
pop
out
jmp
fbstp
loopne
cmp
lret
cmp
jmp
enter
lcall
push
pop
add
dec
sub
cli
int3
cmp
dec
ljmp
andl
push
xor
push
fsubr
lock
xchg
sub
xchg
aad
ret
js
cmpsl
xor
jb
call
add
sub
mov
sub
dec
pop
addl
cwtl
rclb
jp
mov
pop
fs
sbbl
or
not
add
jno
mov
call
call
cmp
mov
or
sub
sbb
fstpl
inc
movb
add
lret
adc
ds
repnz
sbb
mov
andb
jae
sbb
xor
adc
movd
and
adc
mov
or
add
fwait
and
push
or
pop
das
mov
mov
roll
mov
dec
mov
lret
into
add
inc
xor
lock
outsb
adc
xchg
dec
and
inc
pusha
inc
andl
arpl
and
sub
push
sbb
outsb
adc
sub
lret
cs
cmp
pop
xor
fisttps
sbb
mov
fldenv
addl
insl
sbb
divl
loope
dec
add
dec
repz
xor
push
fidivrl
nop
and
xchg
test
cmp
clc
inc
adc
fs
pop
inc
in
add
dec
cmp
stc
cmp
shl
pop
test
stos
mov
dec
loopne
std
jns
shr
mov
std
rol
loope
mov
iret
xchg
les
addl
mov
divl
adc
add
dec
mov
dec
imul
dec
es
xor
xchg
add
clc
jmp
mov
push
adcb
mov
test
ret
inc
jecxz
lret
or
sub
inc
jg
sbb
pushf
dec
cmpsb
sub
push
cmp
ja
adc
inc
lret
orl
push
sbbl
stos
pushf
sub
adc
in
pop
inc
arpl
inc
inc
push
cs
paddusb
ljmp
out
cwtl
fildl
mov
add
in
mov
push
cltd
sub
inc
or
test
fsts
andb
dec
mov
inc
mov
inc
pop
rcl
dec
sbb
das
cmp
sahf
lahf
scas
inc
sub
dec
arpl
push
mov
jge
mov
in
jecxz
sbb
lret
and
es
sub
fmul
mov
push
inc
xor
lcall
je
and
lcall
or
sub
mov
mov
lret
or
sub
enter
mov
mov
mov
sbb
stc
loope
fmul
inc
jl
ret
sub
lods
int
xchg
inc
jns
jp
mov
and
int
jbe
js
stos
in
jge
dec
pusha
rcrl
enter
inc
mov
jns
int
pop
adc
lcall
dec
jmp
rorb
xchg
mov
or
xchg
popa
mov
jnp
jns
sub
inc
or
add
push
pop
aad
cmp
fdivs
sbb
pop
jge
rcr
mov
add
lods
jle
pop
pop
stc
mov
sub
sub
int
xor
out
add
add
test
push
and
jo
jne
pop
sbbl
pop
xchg
std
sub
clc
pop
leavew
inc
inc
mov
shll
inc
pop
in
cmp
cmp
bound
cmp
xchg
dec
mov
shll
fnstsw
mov
pushf
rclb
mov
sbbb
sbb
mov
ljmp
mov
inc
scas
push
jmp
fsubl
stos
push
adc
rcrb
lret
mov
out
movsb
orl
outsb
sub
imul
addb
jmp
ljmp
pop
pop
pop
or
lret
stos
mov
mov
or
mov
dec
adc
into
and
push
pop
ss
push
pop
fsubrl
pop
adc
subb
jbe
stc
dec
push
das
push
sub
cmp
or
cmp
lock
inc
mov
lods
fldcw
and
cmp
or
cmp
mov
roll
inc
jnp
mov
xor
fistps
movsl
ss
enter
xor
mov
pop
sub
push
shll
and
call
push
fsts
cmp
pop
int
mov
adc
pop
pop
into
das
iret
or
sub
push
fnstcw
fmull
add
insl
in
jle
push
push
fsubp
inc
mov
or
jae
cli
mov
stos
sub
cltd
lds
stos
sti
push
cmp
mov
pushf
rorl
lods
into
mov
or
flds
inc
mov
sbb
test
into
lods
sub
dec
jmp
xchg
out
sub
mov
jmp
inc
xchg
adc
mov
jns
ret
push
adc
sub
adc
lret
mov
pop
js
push
pop
fmull
cs
mov
lods
lret
sub
pop
mov
jmp
imul
shll
cmpl
lahf
rcrb
movb
xchg
push
daa
jnp
outsb
stos
addr16
mov
mov
sbb
or
daa
cmpl
rol
pop
ret
jmp
mov
dec
icebp
mov
mov
add
or
sbbl
push
inc
rorb
jge
leave
jae
push
jecxz
jmp
dec
lret
lock
dec
pop
ret
or
movsl
addr16
rcl
rorb
loope
lret
mov
sub
pop
loopne
sbb
inc
mov
sub
or
pop
in
ljmp
pop
scas
in
rcrl
mov
arpl
cmp
imul
sbb
jg
push
sub
jle
push
lret
dec
push
push
push
jns
ja
shll
xor
pop
sbb
dec
fmull
push
mov
push
cwtl
xor
pop
mov
mov
xchg
xchg
bound
jns
arpl
xchg
and
dec
leave
xchg
call
push
jp
or
iret
int3
sbb
cmp
sbb
ret
mov
iret
cltd
cmp
call
mov
cmp
jbe
in
push
inc
add
fcompl
sbb
pop
fildll
dec
jle
adc
test
cmp
dec
push
stos
mov
inc
push
loope
pop
pop
adc
leave
add
shr
btr
ja
cmp
adc
xchg
mov
ficoms
mov
imul
ja
cmp
inc
inc
iret
out
push
cmp
into
cmp
dec
or
clc
aaa
push
imul
stos
les
push
adc
jne
inc
arpl
mulb
mov
pushf
and
mov
nop
stc
adc
cmp
in
cmp
loope
out
pop
sub
mov
sub
cmp
insl
cltd
inc
shlb
sub
mov
mov
cmp
inc
out
pusha
stos
test
dec
pop
insl
push
sub
cltd
mov
ror
inc
xchg
sub
aaa
sub
cli
sub
lret
mov
shrb
outsl
mov
pusha
xor
aad
lret
leave
out
ljmp
stos
ljmp
cmp
mov
mov
movb
test
lods
inc
xchg
repz
sbb
iret
pushf
repz
imul
xor
jae
je
push
add
push
pop
push
ss
jmp
dec
cs
xlat
repnz
or
adc
gs
aam
cmp
movsl
popl
bnd
mov
sahf
outsl
cmp
xor
cmpsb
repz
xor
pop
push
out
enter
push
or
ret
jmp
sbb
xor
jae
push
pop
aam
dec
add
pop
jbe
lea
stos
lods
aad
and
sti
cmp
pop
ret
orb
jecxz
in
push
dec
fisttps
xor
ror
mov
pop
jns
fsubrs
loopne
lcall
leave
out
jae
je
dec
sti
fsubs
test
ret
mov
xchg
mov
sbb
push
gs
loopne
pop
lcall
inc
inc
sub
mov
ret
push
adc
pop
dec
inc
movsl
cmp
mov
xchg
dec
mov
sbbl
movsl
in
inc
sbb
cmpsb
xchg
mov
repz
push
pop
out
imul
fimuls
in
inc
and
sbb
push
xchg
push
mov
sub
mov
imul
mov
xor
leave
xlat
rclb
jmp
dec
jl
cmpsb
test
int3
dec
push
mov
pushf
sub
adc
hlt
jns
test
sti
cwtl
mov
inc
addl
sub
sub
or
das
roll
fmulp
lds
inc
and
aaa
stos
loope
cmp
in
dec
pop
pop
stc
push
and
int
shl
bound
push
jnp
mov
add
cltd
mov
cmpl
sub
push
push
xchg
xchg
add
cmpsl
mov
ja
sub
push
mov
scas
stos
jno
inc
pusha
pop
lock
dec
sub
cmp
push
jbe
outsl
dec
mov
or
xor
and
sar
push
lds
cmp
and
xchg
and
testl
test
and
cmp
inc
sub
mov
in
pushf
and
mov
mov
mov
xlat
pop
fbld
push
sbb
cmp
idivl
fists
cmp
faddp
mov
int
mov
push
lds
test
xor
sub
xchg
pop
inc
adc
lods
test
pop
in
jle
push
lahf
fistl
fcompl
pop
jns
clc
cltd
pop
lret
pop
clc
jnp
arpl
cmovo
cmp
sub
inc
mov
and
lahf
pop
sbb
push
adc
cmp
movsb
cmpl
lret
sub
or
lock
sbb
loopne,pn
mov
fisttps
adc
cmp
mov
cmp
out
inc
nop
pop
cmpsb
mov
and
adc
jg
int
jbe
adc
jl
loope
imul
sub
nop
scas
jmp
stc
or
push
in
push
cs
push
cmpsl
or
jmp
add
xor
add
and
cs
and
inc
sbb
add
fistl
dec
or
mov
add
lret
ja
xor
decl
into
xor
dec
add
add
push
cltd
pop
dec
jle
sub
jmp
stos
xlat
xlat
pusha
js
mov
xchg
ficomps
andb
int
test
test
dec
pop
lock
pop
sub
shr
into
cmp
inc
cld
mov
in
sub
fxch
dec
dec
ret
and
jbe
inc
cmp
dec
in
and
xor
test
fadd
dec
sbb
xchg
mov
in
movsb
dec
les
enter
pop
in
iret
sbb
inc
arpl
in
jb
loopne
pop
jmp
fsts
add
shrl
frstor
mov
mov
inc
call
adc
flds
or
inc
and
adc
push
ftst
cli
stos
sub
mov
call
lea
ret
push
jg
mov
sbb
rol
in
vpunpckhdq
fistpll
push
dec
dec
mov
cmp
leave
nop
sub
mov
sarl
mov
add
int
xchg
cmp
mov
cmp
dec
xchg
dec
aad
mov
mov
scas
adc
pop
outsb
rcrl
shrl
rorl
dec
mov
clc
xchg
cmpl
in
push
jg
inc
push
test
xchg
sub
enter
iret
mov
test
push
dec
test
mov
dec
or
test
push
dec
jns
xchg
movsb
addr16
dec
dec
xor
cmp
jnp
dec
jl
jle
dec
loopne
mov
xor
pop
xlat
popa
dec
or
mov
push
aad
call
int3
pusha
jae
aas
imul
stos
ficompl
in
jae
ss
mov
and
mov
push
xor
js
mov
adc
lods
mov
add
mov
in
inc
pop
inc
imul
or
and
adc
inc
cwtl
adcb
mov
cmp
mov
push
pop
test
gs
fcmovnb
or
jmp
fdivs
mov
pop
sub
dec
sub
push
xlat
int3
cmpsl
enter
adc
jecxz
push
mov
leave
mov
rcll
stos
push
rolb
ret
test
fwait
mov
push
xor
xor
dec
sub
pop
sti
imul
mov
jmp
outsb
test
fcompl
xchg
sbb
pop
mov
pop
add
sub
mov
mov
imul
shll
repnz
dec
pop
ficompl
jg
fldenv
sub
jp
jecxz
into
movsl
icebp
test
add
push
in
jne
sub
push
test
push
leave
call
cmp
fxch
aas
iret
stos
fcoml
sbb
mov
adc
pop
mov
loopne
loop,pt
xor
lock
scas
mov
sahf
xlat
jno
out
mov
popf
or
cmp
pcmpgtb
mov
adc
jp
rorb
dec
dec
cld
push
sahf
or
mov
push
push
jecxz
dec
pushf
add
cmp
or
cmpsl
lret
out
repnz
and
lds
xchg
sub
mov
cmp
xor
insb
or
mov
push
mov
xchg
sbb
pop
decb
movsl
scas
out
add
test
into
dec
mov
shlb
mov
add
cmpsl
mov
and
push
fldl
mov
lea
pop
lds
or
mov
mov
mov
mov
lcall
sbb
fxch
pop
insb
sbb
loope
dec
sub
cli
or
inc
ficompl
sbb
mov
loope
pop
mov
out
test
and
repnz
imul
mov
pop
stos
pop
pop
push
int
mov
mov
movsl
int3
pop
dec
mov
and
or
cmp
inc
or
int
inc
fstpt
and
mov
inc
jge
outsl
dec
xor
stc
aam
jecxz
jg
popa
jle
out
or
sbb
outsl
fabs
push
or
and
cmp
inc
popa
out
mov
jle
sbb
adc
and
dec
or
adc
inc
mov
roll
adc
dec
inc
inc
sub
inc
stos
gs
and
out
lods
dec
ret
or
into
stos
or
stos
mov
pop
sub
cmpsl
xlat
test
or
hlt
inc
cmp
ficoml
out
inc
push
pop
jns
inc
sbb
mov
inc
push
mov
pop
mov
xlat
or
mov
insb
push
repz
int3
inc
sub
mov
inc
out
dec
inc
lods
ljmp
repnz
cmpb
or
pop
adc
sbb
jle
inc
jmp
int
lods
lea
mov
mov
test
stos
push
push
or
dec
sub
dec
fadds
into
pop
ret
mov
cvtpi2ps
push
pop
popa
jg
push
stc
clc
xor
test
cld
incl
out
out
add
mov
call
mov
jne
inc
and
jb
outsl
add
shlb
dec
int3
push
test
mov
lret
lods
jecxz
insb
out
sti
lret
lcall
pop
inc
xlat
or
test
inc
adc
test
je
push
shlb
mov
and
xor
sbb
fdivrs
fldcw
jmp
fistl
or
sbb
in
sbb
sbb
sbb
and
leave
imul
std
push
jecxz
daa
in
sbb
and
mov
push
test
fcomip
dec
stos
testl
cmc
dec
mov
jge
push
enter
pushf
mov
or
ret
cmp
and
in
fs
test
out
out
xchg
cmp
enter
ret
mov
sub
pop
mov
adc
lods
out
imul
jne
cltd
sbb
mov
jb
sub
rcrl
test
push
int3
sub
iret
ja
popa
popa
jge
enter
mov
mov
push
into
fstpl
sub
sub
sub
dec
mov
cmp
je
inc
popa
popf
or
push
xchg
push
lcall
mov
xor
and
iret
lret
sub
jbe
dec
popf
add
shrb
xchg
pop
pop
and
stos
mov
inc
clc
jns
fisubrl
lods
add
xor
sub
mov
test
or
movq
cmp
inc
mov
mov
pop
inc
jnp
gs
mov
into
pop
jb
fisubrl
add
stos
cmp
ret
jecxz
xor
aaa
hlt
dec
test
inc
jecxz
enter
pop
jns
leave
pop
hlt
jmp
sbb
mov
je
or
dec
sbb
in
ret
pushf
inc
xor
or
sub
aam
fcoml
andb
and
arpl
or
cmp
pop
outsl
adc
bound
push
popf
jno
sub
push
mov
push
inc
push
pop
ficoms
arpl
addl
lods
arpl
jbe
mov
inc
push
clc
or
inc
daa
jmp
lahf
or
clc
loope
push
imul
lahf
hlt
das
fadd
dec
mov
inc
lods
or
sub
cmp
or
sub
mov
inc
stos
aaa
cs
inc
cmpsl
or
inc
hlt
push
scas
rcrb
fwait
or
cli
dec
xor
push
lret
and
push
inc
push
loopne
push
pop
jl
mov
cmp
ret
dec
lds
inc
ja
ljmp
mov
push
cwtl
adc
in
lret
mov
dec
int
out
sub
dec
sub
xchg
hlt
or
or
dec
dec
adc
jns
cwtl
dec
push
imulb
sarl
out
push
sti
jbe
and
dec
orl
insl
pop
xchg
iret
testb
sarb
rcrb
jmp
enter
mov
ja
movl
push
imul
lods
add
loop
push
test
xchg
cs
push
loopne
lret
das
xchg
in
aaa
xor
jmpw
cmpsl
iret
out
xchg
cmpsb
adc
xchg
in
jno
add
push
test
push
hlt
jg
adc
or
push
dec
in
leave
add
enter
in
mov
cmp
inc
pusha
mov
leave
dec
clc
lods
mov
lcall
adc
sbb
xor
int3
xor
shrl
stc
movb
cmp
mov
insl
push
movsl
dec
jle
xor
pop
arpl
pop
insl
iret
xchg
or
mov
nop
adc
jnp
inc
xor
jns
mov
fld
sbb
ret
mov
xor
sbbl
inc
stos
xor
lea
mov
mov
jg
ret
insb
xchg
push
cmp
pop
lahf
sub
or
xor
clc
adc
push
bound
adc
xchg
xchg
and
sti
lcall
sarb
popf
push
pop
lret
sub
sub
scas
sbb
shl
pop
mov
and
insb
pop
rol
out
push
sub
hlt
setle
dec
jo
fcomi
mov
mov
fadd
dec
sbb
mov
add
lds
xchg
ss
test
aam
sti
pop
adc
fdivs
test
xor
sahf
test
inc
mov
sbb
mov
adc
stos
mov
jnp
rcrl
imul
dec
and
subl
push
xor
dec
push
popa
nop
fisubrs
or
pop
dec
ror
in
cmc
pop
or
add
push
sub
test
cmp
xchg
push
jnp
sub
daa
xor
pop
test
sub
rcll
ss
xor
sbb
aad
mov
subl
loopne
add
lods
rorl
lea
jp
jge
in
and
fimuls
dec
loop
xchg
enter
sbb
adc
jmp
outsb
jge
stc
sti
push
pop
lret
pop
push
icebp
sbb
arpl
es
mov
pop
cmp
test
pop
push
mov
scas
es
test
inc
call
cmpsl
cmc
add
leave
or
add
movsb
inc
xchg
add
jnp
or
enter
pop
in
ret
out
scas
xchg
addb
scas
cmp
hlt
enter
pop
adc
fcomps
cmp
xchg
call
aas
xchg
xchg
push
nop
pusha
fdivs
inc
shll
and
les
je
enter
sbb
pop
ja
cmpsl
mov
shlb
and
aad
mov
sub
and
ja
mov
insl
lret
bound
xchg
out
pop
test
fidivl
lret
repz
lea
cmp
mov
sub
or
push
loop
ret
inc
sub
mov
lret
addl
mov
jo
dec
pop
push
mov
or
mov
insl
pop
das
xchg
pusha
repz
int3
add
mov
fiadds
jns
inc
mov
add
mov
loop
cmp
lret
dec
stos
adc
pushf
and
popf
pop
sub
jl
push
add
movl
fstpl
in
pop
push
inc
inc
mov
inc
clc
shufps
inc
data16
xrelease
adc
cmp
sub
or
lods
scas
dec
push
fldt
pop
fdivs
into
or
ret
aam
out
push
push
pop
pop
fnstcw
int3
iret
fildll
adc
hlt
sbb
repz
orl
jae
sub
add
dec
out
test
iret
sub
out
adc
inc
xchg
lret
mov
mov
loope
push
mov
aad
inc
rorl
into
inc
pusha
pushf
incl
pop
jl
flds
scas
lods
dec
lods
mov
daa
pop
jnp
shll
xlat
out
pop
call
out
sbb
or
pop
cs
xchg
sbb
lret
scas
cmpsl
test
pop
inc
shll
insl
xchg
pusha
dec
add
and
test
bound
adc
push
leave
push
add
loopne
je
lret
shrl
aam
push
js
test
xchg
lods
ficoms
insb
divl
shlb
enter
daa
push
add
scas
inc
insb
leave
push
mov
test
lret
mov
dec
cmp
mov
bound
lock
cmp
leave
dec
dec
push
std
ret
out
inc
add
sub
dec
cmp
mov
xchg
inc
sub
inc
xlat
popf
insb
dec
ss
rolb
lret
mov
jnp
push
das
adc
js
inc
or
cmpb
jo
stos
adc
cmp
adc
scas
arpl
push
sub
fwait
xor
xchg
out
popa
or
pusha
cli
xor
push
or
push
scas
pop
cmp
xchg
dec
loopne
push
sbb
mov
pop
icebp
and
rorb
xchg
cmpl
inc
fwait
lea
orl
rorb
jo
dec
mov
lock
in
inc
daa
add
outsb
push
shrl
daa
fsubl
aaa
arpl
out
sbb
jne
mov
outsl
pop
dec
jne
pusha
outsb
sub
push
loope
loope
or
fldcw
xor
lods
in
call
inc
xor
mov
in
repz
adc
scas
mov
sbb
test
dec
xchg
inc
lods
cwtl
xor
jne
xchg
sbb
mov
sti
mov
lods
out
mov
add
rcrb
sub
loop
cmc
cmp
dec
pop
xchg
mov
outsb
cmp
insl
inc
leave
dec
into
cmp
add
cmpsl
jmp
ret
test
hlt
test
jo
jmp
in
cmovne
pop
enter
inc
sub
pop
pop
xor
fidivl
fs
sbb
sub
fwait
mov
test
es
add
cmpsl
dec
ret
lret
fwait
stos
xchg
cmpsb
jmp
pop
pop
lock
hlt
pusha
pop
cmpsl
inc
inc
add
sahf
stos
jle
mov
mov
loope
cmc
jp
mov
push
jns
and
pop
add
clc
fcoms
and
dec
mov
test
or
aam
sub
mov
push
test
pop
add
in
sbb
jg
pop
push
cmp
mov
xchg
fildl
jne
or
flds
scas
aaa
xor
ret
or
loop
mov
push
mov
dec
dec
cmp
push
testl
enter
mov
push
fisubrs
subb
jg
jns
jbe
or
loop
test
sub
inc
jb
sbb
mov
in
jmp
outsl
and
cmp
push
mov
pop
dec
or
mov
mov
inc
call
roll
sub
lret
lods
lahf
out
out
icebp
jecxz
int
ret
ja
ljmp
pop
addl
ret
orl
or
add
push
enter
daa
dec
sbbl
sub
jae
mov
and
dec
or
cmp
dec
in
push
sub
pop
sub
push
mov
mov
dec
cmp
popf
popa
insb
loop
fs
mov
loop
push
inc
ret
and
jb
xbegin
in
or
ffree
lds
cmpsl
inc
cltd
cmp
pop
jp
inc
in
lods
mov
mov
push
push
int
xchg
inc
sbb
xor
pop
call
lds
dec
xchg
cmpsb
jle
arpl
iret
push
pop
lods
call
mov
inc
int
scas
inc
and
cmpb
adc
cmp
or
addb
rcr
push
mov
adc
inc
sub
pusha
push
test
xor
push
mov
xlat
mov
mov
jmp
adc
mov
push
xchg
in
loop
push
dec
mov
adc
ret
popl
push
sbb
les
xor
sub
cmp
inc
test
flds
fsubrs
dec
subl
dec
adc
imul
lea
or
dec
aas
sbbb
inc
imul
dec
push
fnstcw
pusha
pop
mov
xchg
fdivrs
fcmove
pop
cltd
loope
sub
push
push
testl
add
repnz
int3
lret
jp
or
cmpb
jle
clc
jg
xchg
aaa
pop
push
adc
pop
push
bound
aaa
dec
push
xor
aam
pop
pop
stos
sbb
push
add
call
dec
leave
sti
xor
xor
lret
xlat
jle
std
mov
sub
or
fldt
xor
test
testb
pop
cwtl
and
and
jle
sbb
jl
dec
lret
in
adc
clc
or
addb
adc
rolb
push
leave
xchg
push
sbb
test
lret
xchg
dec
push
cmpsl
orl
dec
push
test
cld
xor
add
sub
xchg
stos
lds
or
aas
adc
and
push
lret
enter
dec
mov
insb
dec
icebp
dec
push
dec
add
dec
push
mov
fldt
xor
aas
adc
pop
pusha
dec
arpl
pop
mov
mov
dec
and
fwait
stos
je
sub
pop
sub
lret
subb
jge
loopne
mov
mov
rcll
leave
sub
sub
lcall
xchg
enter
pop
dec
pop
in
cs
fimuls
push
dec
dec
data16
pop
and
mov
cmp
sahf
push
add
mov
imulb
pop
push
pop
push
ja
std
ja
sti
xchg
pop
test
inc
dec
roll
add
push
push
mov
pop
xor
sub
ror
fsubrs
call
jne
roll
enter
xchg
sbbb
jmp
scas
pop
jge
shlb
in
dec
mov
test
std
dec
rcrb
mov
push
repz
sbb
aaa
xchg
imul
pop
xchg
data16
cwtl
lods
add
inc
mov
push
lret
or
jbe
push
lea
adc
bound
repnz
lods
mov
inc
push
mov
ret
xchg
xchg
ret
push
pop
cmpsb
push
mov
mov
rcrl
dec
xchg
test
dec
adc
lock
push
inc
out
or
inc
icebp
cmp
mov
adc
adc
cmp
stos
and
les
inc
mov
xchg
push
cwtl
jnp
push
dec
cmpsb
mov
push
popa
popf
xchg
lret
or
and
push
sarb
cmp
or
cmp
popa
inc
dec
inc
and
in
pop
aad
scas
sarb
cmpsl
or
fwait
mov
lcall
fcoml
sub
arpl
nop
xchg
sbb
jecxz
add
adc
jmp
dec
push
loop
test
rcrl
sub
js
sub
test
testl
xor
out
fadds
jge
inc
pop
lcall
orl
adc
mov
pop
mov
scas
lcall
xor
test
rorb
subl
mov
jb
fwait
testb
mov
ljmp
cmpsb
out
inc
addr16
mov
jg
jns
mov
adc
cmp
imul
mov
xchg
xor
in
xor
rclb
test
call
and
fs
in
clc
jnp
fistpl
adcb
xchg
leave
out
in
dec
xchg
push
add
xchg
lea
xorl
lret
push
inc
arpl
xor
xchg
aam
add
in
dec
sub
int
and
ja
adc
and
dec
cmp
lods
inc
sub
sarb
xchg
or
int
inc
ds
xchg
fimull
sub
insl
ret
add
iret
inc
sbb
and
mov
dec
push
aam
ret
fiaddl
sbbl
xor
mov
pusha
push
mov
lea
cmp
in
imul
mov
sarl
lahf
or
int
inc
cmp
add
or
arpl
jbe
cwtl
inc
imul
pop
out
fisttps
addl
leave
arpl
jp
mov
into
insl
push
fsubs
mov
adc
nop
inc
xor
xlat
xor
inc
aaa
jg
mov
mov
xor
or
push
push
mov
and
jle
lcall
add
adc
test
lods
mov
sbbb
mov
pop
dec
jg
xchg
mov
cltd
inc
pop
xchg
xchg
sar
dec
dec
loopne
inc
sbb
sbbl
lods
lods
sbb
sub
adc
int
sbb
out
dec
out
fistpll
lock
cmp
or
enter
sub
mov
jns
popf
fwait
adc
sub
or
or
inc
pop
dec
add
imull
cmp
pop
xor
leave
scas
jbe
push
mov
enter
test
mov
hlt
or
fistps
mov
leave
sar
pop
mov
movsl
dec
inc
add
jns
ret
dec
enter
test
iret
pop
mov
jmp
pop
mov
jbe
in
cs
stos
lds
stos
cmp
jno
add
add
std
lret
insb
xor
jnp
push
inc
xorb
xor
fucomi
mov
and
andl
fnstcw
fdivs
mov
xchg
dec
aam
inc
and
pop
add
test
jmp
or
orl
fdivs
push
lea
call
push
jno
mov
out
mov
xlat
add
pop
cltd
pusha
push
hlt
lret
sub
lds
inc
call
adc
sbb
pop
lods
inc
mov
inc
dec
mov
popa
xor
xchg
pop
shr
sub
inc
outsb
loopne
inc
sar
fnstsw
lds
inc
pop
ss
fyl2x
call
or
lods
jae
cmpsl
insl
xchg
push
dec
popa
sub
mov
pop
addb
cmc
lret
inc
lock
insb
and
test
adcl
in
cmp
jecxz
inc
out
cmp
lret
xor
into
sbb
push
test
pop
pop
sub
or
movsb
sbb
mov
mov
ss
pushf
add
cmp
dec
pop
sub
xchg
mov
inc
add
cmp
pop
arpl
push
mov
jmp
add
xor
flds
push
sub
lods
inc
or
sub
das
cmp
mov
xchg
ljmp
pop
sbb
inc
push
paddb
fptan
mov
dec
insb
enter
ror
aaa
fnstsw
lds
jbe
inc
enter
inc
lods
lcall
cmpsb
push
xor
push
add
lock
xor
fidivrl
in
aaa
add
inc
sbb
and
cltd
movb
ss
ds
in
jecxz
jg
fiaddl
in
test
lcall
xor
fiaddl
jecxz
jno,pt
stc
insl
jmp
sahf
fildll
fldenv
push
push
iret
or
fsubr
inc
jnp
mov
pushf
aam
repz
sub
adc
inc
mov
inc
loopne
cmpsl
push
lods
bound
pop
sub
jnp
iret
xlat
pop
lods
xchg
dec
xlat
fcoms
push
daa
mov
push
ror
scas
or
cmp
ret
andl
in
lea
les
cmp
ljmp
inc
ret
or
add
mov
or
pop
mov
add
adc
xchg
push
shrb
or
bound
add
movsl
ret
jle
dec
sti
mov
adc
push
sbb
jecxz
ret
dec
push
ja
movsb
inc
jmp
mov
orl
add
orl
jns
sbb
pop
inc
pushf
fstpt
inc
dec
arpl
sub
jle
jb
test
push
dec
push
nop
inc
sahf
rol
jne
in
mov
dec
inc
mov
int3
and
xor
inc
mov
pushf
rcrl
sbb
inc
cli
orb
outsb
andb
sub
dec
inc
add
pushf
cmp
test
imul
sbb
inc
dec
lds
sub
sbb
sub
jbe
sbb
add
fisttpl
sbb
mov
es
loop
ljmp
mov
in
orl
adcl
sub
aad
insb
aam
mov
or
cmp
sub
xor
push
push
dec
arpl
stos
xlat
pop
dec
movl
add
clc
dec
or
rclb
pusha
in
and
ror
imul
imul
mov
in
pop
dec
sar
sub
hlt
mov
jl
adcl
or
fsubrs
divb
popf
pusha
add
and
je
sti
leave
je
out
mov
cmpsl
sub
call
bound
lods
daa
dec
dec
pop
adc
add
nop
mov
jmp
add
ss
in
fisttps
cmc
inc
mov
pop
or
sahf
fs
int
cmc
cmpl
fnstcw
mov
mov
ss
outsb
sub
jno
xor
push
xchg
fldln2
inc
jl
xchg
in
loope
xor
dec
jns
cmp
adc
nop
inc
arpl
out
mov
inc
mov
scas
sahf
sub
sbb
jo
ss
fldcw
lret
popa
out
push
jg
popa
xchg
sbb
ljmp
js
dec
sub
pop
fneni(8087
add
cwtl
lds
js
mov
dec
int
inc
dec
cmp
rclb
arpl
pop
out
sub
into
xchg
or
push
rcl
pushf
jmp
dec
lods
mov
add
or
dec
pop
pop
faddp
cmp
in
inc
lahf
jae
push
int
stc
sbb
inc
sub
adc
pop
ss
xor
xchg
sub
andl
shlb
inc
push
xchg
test
and
sbb
cmpsl
add
mov
dec
inc
call
pop
aaa
add
imul
sub
fisubrs
mov
adc
adc
xchg
into
lods
inc
clc
xchg
out
xchg
mov
pop
cmova
sub
jns
iret
roll
and
inc
lcall
xor
aam
out
ja
pusha
inc
pop
cmpsl
and
in
sub
or
enter
add
inc
leave
add
mov
scas
pop
out
push
movsl
add
pop
imul
mov
cmp
push
mov
lods
ljmp
mov
adc
xchg
lret
hlt
fcmovbe
fistl
repnz
mov
int
ljmp
jecxz
pop
push
xor
and
movsb
xchg
rorl
pop
mov
inc
xchg
xchg
sbb
icebp
ljmp
ljmp
lods
test
stc
xchg
dec
push
adc
shrl
lea
sub
xchg
stos
lcall
ljmp
mov
cmp
repz
push
or
xor
dec
mov
das
test
dec
mov
rorl
push
jmp
outsl
aam
add
push
inc
iret
dec
add
pushl
push
or
push
sub
lahf
leave
hlt
loope
mov
fildl
adc
pop
repnz
imul
pop
pop
test
jns
sbb
push
hlt
mov
sub
loope
dec
mov
mov
pop
test
adcb
dec
sub
sbb
push
push
lret
mov
xor
lret
or
loopne
iret
cmpsl
out
sbb
hlt
into
push
fistpl
arpl
sub
mov
cmp
sub
or
and
pop
dec
sub
dec
ret
mov
insb
add
in
mov
adc
lock
lea
lods
sub
push
jo
out
cmp
inc
push
fidivrl
jle
push
nop
faddl
lret
push
subl
imul
jmp
aad
dec
pop
mov
clc
dec
mov
sahf
sub
hlt
dec
or
lret
adc
daa
inc
pop
xchg
dec
add
mov
mov
or
xchg
stos
sub
insl
inc
pop
sbb
mov
mov
into
stos
add
fs
pop
shlb
stos
push
test
push
lods
das
imul
jecxz
or
mov
jmp
cmc
inc
and
stos
das
jmp
lods
data16
adc
and
clc
jnp
and
roll
adc
sub
imul
mov
test
dec
xorl
pop
xchg
add
popa
push
pop
inc
insl
rcl
xor
xchg
add
fnstsw
cmp
cmp
leave
stc
adc
movsl
test
lods
jae
xor
iret
jno
fdivl
jno
and
add
mov
fstps
add
mov
mov
add
add
in
pop
push
outsb
cmp
cmc
pop
or
and
fsubp
pusha
int
dec
fstpl
xor
cmp
adcl
sub
push
mov
xor
add
adc
pop
sbb
fs
pop
ret
push
mov
pushf
mov
pop
or
loop
rcrl
shlb
shl
xor
into
je
out
mov
dec
int3
addb
jecxz
arpl
or
arpl
bound
iret
lret
or
int
imul
clc
and
es
dec
or
or
push
punpcklwd
mov
in
xchg
bound
push
mov
repnz
orb
pusha
fs
adc
jle
xchg
shll
xor
loope
stc
xchg
push
insl
sub
push
jmp
cmp
xor
dec
inc
jmp
push
iret
lret
fldcw
testl
jno
sub
arpl
mov
add
push
fdivr
repz
inc
add
xor
push
xlat
in
pop
cmc
add
lds
pusha
xchg
inc
sbb
push
repz
dec
in
fcoml
jo
lret
int3
push
inc
mov
xor
shl
cmp
sub
sub
lods
mov
sub
pop
and
cli
pop
xchg
mov
push
mov
pop
sarb
mov
adc
add
rolb
push
hlt
add
jno
aas
xor
jo
pop
dec
mov
enter
mov
jecxz
jge
leave
sub
or
add
mov
pop
mov
rcrb
sbb
jbe
pop
loop
pop
mov
pop
push
fsubs
add
add
dec
outsl
lds
dec
lds
push
dec
cmp
add
sbb
leave
adc
jnp
test
adc
ss
push
cmp
xchg
pop
rorl
xchg
sub
or
pop
and
lahf
dec
pop
adc
xor
lret
lods
and
dec
pop
cld
test
arpl
cmp
jecxz
pop
cmp
insl
cli
inc
aad
or
pop
sbbl
shll
in
clc
xor
push
rol
int3
and
xor
ficoml
negl
iret
jecxz
cmp
loope
push
adc
lret
lcall
insl
sahf
dec
int3
sub
lret
dec
sub
cmc
mov
cmp
fidivl
loop
fs
or
jbe
inc
push
mov
test
push
pop
jno
lret
xchg
sbb
rcrl
cltd
sub
arpl
add
test
popa
dec
sarl
pcmpgtw
insl
inc
pop
int
lret
dec
shrl
int3
sub
dec
push
pop
dec
idivb
inc
ja
cwtl
loope
in
iret
loope
test
push
xor
sub
xchg
call
jnp
popf
insb
aam
sbb
bound
xchg
inc
dec
loope
gs
dec
jnp
adc
ljmp
adc
fisubs
xor
dec
ret
adc
push
dec
mov
iret
daa
mov
rol
lret
js
or
cltd
dec
icebp
xor
and
jmp
jno
dec
push
arpl
jecxz
add
pop
test
call
add
mov
call
arpl
push
lods
mov
push
pop
das
dec
cltd
in
add
dec
int3
into
cmp
sahf
loope
sub
add
or
mov
mov
and
mov
dec
pop
jo
xchg
dec
rorl
enter
addl
loopne
mov
add
add
arpl
insl
jns
es
aad
mov
push
fisubs
popa
pop
leave
dec
push
test
sub
xlat
loop
lahf
mov
dec
lods
xlat
lret
mov
fld1
mov
gs
rorl
xorl
sbb
xor
sbb
or
mov
ret
inc
fdecstp
mov
sub
jl
sbb
push
pop
add
cmp
lret
loop
scas
adc
inc
lret
leave
pop
hlt
orb
push
xchg
rcr
pushf
testb
mov
add
jmp
sahf
in
mov
mov
shr
xorb
xorl
dec
aaa
xchg
push
xlat
push
dec
add
std
push
loop
aaa
inc
fs
push
fldenv
dec
shrl
mov
cmpsl
mov
push
arpl
xor
ret
cwtl
inc
or
add
cltd
ja
mov
popf
and
jmp
inc
pushf
into
inc
sarb
push
clc
and
call
cmp
lods
scas
icebp
jle
mov
sbb
mov
out
scas
push
lds
jle
adc
sbb
xor
mov
lds
sub
dec
lahf
sahf
stos
pop
in
push
xchg
cld
sub
pop
mov
insb
fidivrs
xchg
xlat
and
call
jp
xchg
popf
pushf
sub
adc
jo
push
shr
dec
in
add
push
hlt
add
bound
add
test
clc
jne
xchg
in
mov
sub
call
mov
xor
imul
xchg
xor
pop
xchg
sub
sub
pop
or
jp
mov
int
cmp
int
add
jge
dec
or
inc
movsl
xorb
into
pop
loopne
insl
test
les
ret
addb
or
imulb
fs
inc
add
jp
inc
shld
mov
inc
and
or
movsl
fwait
mov
lret
and
pop
mov
les
sbb
sub
cld
lods
mov
ret
faddl
aaa
cmp
sub
shrl
loope
mov
mov
ja
rorb
loope
pop
rcrl
orl
les
lds
xor
int3
insb
inc
pop
ret
out
fisttpl
mov
sahf
inc
inc
cltd
ror
cmp
xchg
inc
push
ret
and
dec
ret
andb
fists
add
stos
dec
dec
popa
sahf
dec
dec
aam
push
xchg
or
pop
aaa
pushf
jb
popaw
divl
push
dec
in
mov
push
jmp
cwtl
sbb
aam
adc
push
pop
fisttpll
push
mov
sbb
mov
enter
fildll
lret
insb
in
dec
addl
cmp
jle
pop
lods
loopne
and
cltd
sbbl
not
mov
add
dec
sbb
mov
lea
mov
leave
bound
push
dec
cwtl
fildl
cwtl
fdivrs
leave
push
inc
int
push
in
cmp
lret
jle
mov
andps
js
sub
sub
mov
push
push
pop
inc
mov
fildl
cmc
inc
cwtl
fcmove
or
aas
mov
sub
in
lahf
lods
sub
jl
mov
fstps
fidivl
sbb
out
jae
cltd
jecxz
cmp
orb
sbb
clc
adcl
inc
cmp
xchg
sub
call
out
mov
cmc
inc
mov
repnz
fnstenv
pusha
fstpt
xor
fstl
aad
lock
mov
fadd
imul
pop
aad
and
or
sbb
jge
dec
dec
sarl
sub
sarb
dec
adc
and
in
shrb
xor
fiadds
cmp
push
and
in
aam
adc
xor
inc
mov
add
mov
sbb
and
pop
mov
pop
sti
mov
mov
jbe
adc
cltd
imul
test
mov
fst
movb
std
pop
sarb
pop
jecxz
or
ss
pop
jmp
or
jns
sub
sti
sub
popa
inc
or
mov
adc
add
mov
xor
mov
jge
mov
stos
icebp
inc
adc
ret
in
mov
loope
pop
inc
add
loopne
loope
cmp
xchg
out
lret
out
mov
sbb
sbbl
push
or
ficomps
push
jecxz
push
adc
jl
jae
push
add
adc
scas
add
pop
pop
mov
pop
clc
shlb
stos
dec
rcl
sti
iret
loope
pop
xor
jp
and
sbb
call
jno
mov
sub
clc
aas
daa
dec
mov
mov
fdivrs
push
lods
mov
loope
inc
inc
cltd
loopne
pushf
dec
lock
roll
fstpt
mov
inc
pop
ret
add
inc
loope
mov
dec
mov
mov
push
in
push
push
jne
inc
loope
mov
ss
mull
mov
test
std
mov
addl
cmp
jbe
mov
push
cmp
jecxz
test
lods
jns
repz
insb
lea
subb
adc
sub
xchg
sbbl
jge
mov
out
jmp
xchg
loope
icebp
cmp
clc
je
test
xchg
fisubrs
mov
mov
movsl
mov
pop
scas
fimull
xchg
xor
loope
and
pop
out
inc
jb
movsl
leave
test
fld
mov
je
mov
dec
pusha
jbe
push
out
adc
or
fdivrl
mov
lcall
pop
lret
shrl
or
cmpsb
add
jecxz
adc
push
stos
in
int3
pop
mov
lds
enter
pusha
sbb
sahf
lgs
arpl
imul
stos
xchg
sarb
popa
out
test
xor
das
add
fiadds
jb
sbb
popf
jp
push
or
sub
dec
fmuls
inc
and
out
push
cmpsl
shll
ret
or
dec
push
mov
jbe
mov
ss
add
mov
jmp
std
mov
imul
cmpsl
imul
cmp
xchg
push
mov
sti
and
inc
sub
cmpsb
enter
pushf
fbstp
hlt
outsl
inc
out
xor
in
inc
arpl
sub
inc
sub
adcl
ret
jno
mov
pop
cmp
outsl
daa
pop
jmp
mov
sbb
and
pop
xchg
sub
mov
add
iret
in
adc
xor
cmp
popl
rcrl
cmpsb
test
add
pop
js
sub
push
scas
sub
push
outsl
mov
fmul
cltd
in
not
sub
scas
js
mov
outsl
dec
adc
xlat
dec
xor
inc
fistps
inc
cmp
dec
jecxz
xchg
push
inc
loop
pop
mov
cmp
push
push
mov
std
int
or
das
add
adc
push
dec
cwtl
fadd
sbb
jmp
lds
dec
test
dec
dec
test
into
mov
xor
or
lret
sub
cmpsl
les
dec
rcr
roll
ret
dec
inc
fldenv
test
mov
das
inc
lret
add
fldcw
pop
in
fcomps
pop
fcmovnb
pop
pminub
pop
or
fisttpll
pop
fadd
fbstp
orl
std
inc
fisubrs
insl
sub
xor
ret
adc
cmp
lds
loop
adc
push
pop
mov
xlat
test
cmp
mov
cld
pop
pop
pusha
inc
jle
or
call
aam
inc
xor
mov
sbb
pop
and
or
cmp
add
pcmpeqd
sahf
sbb
enter
cmpl
mov
push
mov
int3
mov
fldenv
test
sahf
sbb
ret
cmpsl
cli
sub
mov
sub
lds
lds
jmp
movsb
mov
mov
pop
in
scas
dec
addl
cmp
sbb
dec
xchg
and
push
sub
ficoms
nop
insl
push
scas
notl
pop
lret
repz
jle
jg
dec
inc
enter
xlat
insb
mov
sub
add
bound
sub
loope
pusha
cmp
stos
or
adc
test
scas
xchg
add
bound
mov
mov
fildll
aam
adcb
xchg
pop
xor
testl
mov
aad
hlt
subb
into
leave
ja
dec
sahf
mov
add
bound
ds
cmp
aam
lret
push
inc
inc
push
dec
mov
test
sbb
xlat
adc
mov
add
filds
fnstenv
out
add
mov
rep
sub
cwtl
mov
in
pusha
lret
dec
fcmovne
enter
sub
vcvtsd2si
ror
mov
cs
leave
push
or
sub
dec
xchg
ljmp
inc
dec
insb
cmpsb
cmpsl
sbb
inc
xor
or
cmpsb
fsts
popa
sub
cli
push
cmc
jmp
test
outsl
outsb
push
inc
xor
pop
les
arpl
in
out
call
dec
push
lahf
xor
dec
cli
mov
test
adc
jge
adcl
ja
fldt
mov
das
icebp
dec
in
nop
sbb
rcrl
int
lods
adc
add
add
cmp
mov
sbb
adc
popf
xor
xor
lock
aad
les
je
movb
adc
popa
daa
cmp
push
and
pop
lcall
fisttpll
mov
push
fwait
push
int
in
jmp
xchg
inc
lods
cwtl
cmp
or
test
jo
test
imul
and
cmp
decl
jecxz
sbb
inc
sbb
add
arpl
pusha
mov
cmpsl
or
clc
inc
outsl
mov
cmp
dec
lea
rol
pop
adcb
push
xchg
aaa
outsl
sti
clc
bound
icebp
cmp
xor
pop
xchg
push
jo
loop
adc
push
sub
dec
pusha
aaa
dec
cmp
pop
adc
mov
rorb
cmpsl
push
in
jnp
pop
mov
pushf
shrb
inc
sahf
pop
pop
les
int3
stc
xor
jp
sahf
adc
std
cmpsb
xor
push
shr
rolb
movl
jmp
jl
mov
xor
loop
sub
dec
jno
push
xor
or
adc
inc
cmp
or
mov
add
test
adc
and
popa
push
cmpsl
in
pop
mov
xorb
adc
lods
dec
xor
xor
outsl
lea
lcall
dec
sub
sbb
lods
subb
inc
dec
push
dec
mov
in
xchg
leave
push
hlt
sbb
sub
inc
dec
mov
mov
adc
mov
push
push
loop
pop
jge
inc
in
xor
cmp
cmpsb
test
xor
dec
lods
into
fidivrs
cmp
mov
mov
add
push
sub
clc
lahf
sbb
push
aas
mov
iret
or
leave
sub
call
add
lret
sti
enter
xchg
daa
out
lods
mov
insl
dec
int
lods
jbe
and
pop
jl
xchg
xchg
ja
and
dec
int
fisttps
mov
faddl
loope
dec
or
cltd
cwtl
pop
outsb
aam
filds
mov
dec
cwtl
add
and
or
addr16
push
sub
pop
xchg
or
js
push
je
mov
loope
sbb
int3
mov
sbb
test
mov
inc
and
sti
cs
and
addl
pop
push
mov
out
and
fwait
rcrl
iret
imul
sub
fmul
sub
sbb
inc
dec
sbb
das
ficompl
lea
scas
pushf
pop
pcmpeqd
sub
push
je
loop
stos
fldt
jbe
test
popf
fwait
lock
lahf
mov
fdivl
outsl
sbb
lret
leave
xor
push
adc
xor
or
imul
xchg
out
push
or
dec
sub
cs
icebp
test
es
or
sub
nop
or
ret
sarb
icebp
aam
dec
mov
sub
sub
inc
dec
sub
mov
cwtl
fistpll
enter
leave
test
pop
addl
and
xlat
jno
pusha
mov
popa
or
pop
cmc
dec
out
inc
jg
test
scas
outsl
push
stos
pusha
cli
in
jge
fcmovne
add
xor
out
ljmp
inc
insl
dec
fists
std
fwait
pop
or
xchg
or
fnstenv
adc
shll
or
cmp
dec
sub
dec
dec
and
loope
test
bound
int3
in
jb
leave
add
adc
inc
sub
sbb
or
push
lcall
cmp
clc
cmp
mov
dec
fwait
repnz
mov
fiadds
fimuls
xchg
outsl
std
pop
sbb
push
mov
push
xor
enter
jle
cmpsb
das
shrl
test
mov
push
shrl
inc
fisttps
mov
dec
push
cmp
add
or
lret
idivl
inc
jecxz
fldt
pop
std
lret
cmp
lret
or
dec
sub
jno
iret
lods
ja
addr16
cmp
dec
sub
into
add
or
shrl
dec
ret
clc
adc
lods
ret
or
dec
inc
sub
inc
fldt
inc
rol
sbb
and
enter
fsubrs
scas
pop
add
dec
adc
adcl
push
in
xchg
cmp
mov
pop
and
dec
fistps
rcr
push
rorl
push
fsub
shrl
push
rcl
push
sbb
in
aam
push
sub
dec
push
fsubs
or
fldcw
fildll
flds
dec
sub
int
dec
or
iret
fsub
dec
sub
rol
add
sub
flds
ret
sub
inc
roll
dec
flds
xchg
rol
pop
sub
dec
pop
fsub
sbb
fcmovnb
pop
das
scas
fimull
cltd
ss
mov
fnsave
inc
pop
into
fidivl
repnz
cltd
aam
and
sub
push
push
enter
mov
inc
fimuls
cmp
mov
imul
xchg
lret
dec
inc
rol
push
cltd
ljmp
daa
arpl
in
sbb
xor
inc
adc
nop
and
sub
aad
fwait
in
imul
mov
mov
add
pop
pop
inc
out
add
xor
inc
icebp
cmpsl
ret
pop
pop
lcall
ds
sbb
std
push
mov
xorl
xchg
das
pop
bound
mov
in
xor
lods
insl
enter
fimuls
fsubr
cmpsb
call
mov
inc
cmp
xor
inc
xor
adc
addr16
and
cmp
mov
sub
repnz
mov
dec
jno
enter
dec
rorb
lret
aad
sub
pusha
decb
lods
ds
inc
dec
call
adc
stos
inc
cmp
jb
pop
xlat
lods
lret
pop
arpl
or
sub
mov
inc
or
mov
jbe
sub
pusha
pusha
je
std
or
lods
bound
dec
push
adc
icebp
push
dec
into
push
sub
mov
hlt
sub
fldt
imul
lret
insb
clc
popa
ja
dec
roll
mov
dec
jb
lds
cmp
out
fadds
mov
movsl
arpl
or
insb
push
int3
or
cmp
jmp
push
call
dec
loop
leave
dec
cmp
test
sub
shlb
popa
push
out
test
stos
ds
mov
and
mov
pop
jge
out
adc
fbld
fsubr
sar
mov
mov
push
fldenv
push
ror
mov
dec
enter
xchg
mov
lret
lret
add
stos
int3
popa
stc
call
ret
lea
push
and
repz
shll
jecxz
shr
pop
bound
punpcklwd
inc
cmp
mov
sub
std
aam
xchg
add
xor
lods
iret
insl
lret
or
xchg
xchg
nop
sbb
in
mov
or
inc
clc
aas
and
enter
cmpsl
jmp
imul
xor
cmp
mov
or
in
cmp
and
sarl
xor
insl
adcl
iret
push
inc
test
jecxz
lods
and
mov
jmp
std
pop
inc
stos
jp
inc
call
dec
enter
insb
mov
cmpsl
mov
sub
push
mov
pop
pop
push
adc
in
rcrl
test
sub
pop
pcmpeqd
inc
sub
les
pop
mov
mov
xor
inc
inc
mov
fbstp
jmp
inc
imul
mov
shrb
fld1
je
mov
notb
ljmp
jp
pop
mov
jg
xchg
mov
fwait
icebp
jne
add
dec
xchg
dec
pop
add
inc
jnp
push
mov
aam
cwtl
loopne
adc
int
and
les
pop
sub
int
dec
or
xchg
xor
cmp
dec
test
testb
jbe
pop
push
lea
out
sub
mov
or
adc
out
insl
pop
pop
dec
fwait
pop
mov
addl
loop
pop
mov
jp
pop
xchg
inc
inc
subl
mov
jns
mov
jmp
lds
daa
add
sar
sub
lret
pop
and
inc
push
bound
add
add
xor
test
loop
mov
test
cli
mov
das
rorb
push
pop
loopne
or
fsubr
clc
lods
mov
xchg
aam
lret
xchg
add
jl
and
pop
adc
push
popa
hlt
jp
dec
fdivs
pop
ret
js
in
es
add
arpl
mov
lret
out
addr16
jge
call
xchg
add
sub
mov
xchg
test
in
ss
mov
add
sbb
or
out
sbb
pop
sub
push
xchg
push
xor
fldt
adc
dec
push
imul
adc
mov
push
mov
filds
call
ret
movsl
nop
jl
les
sbb
and
es
sub
xor
mov
sbb
fistps
rcr
scas
cltd
mov
je
dec
sar
add
movb
sbb
sub
ss
out
inc
cmc
iret
jg
cmp
mov
sbb
xor
xlat
sub
jnp
jp
mov
add
sti
test
adc
scas
lods
xor
ret
leave
cltd
addr16
fldcw
xor
mov
pmulhuw
dec
jmp
jle
pop
xchg
sahf
fldenv
mov
sti
cmpsl
test
sti
jle
cltd
sub
ficoms
test
or
and
addl
rolb
jmp
test
sbb
ds
aaa
cmp
ret
mov
inc
xchg
and
testb
or
fistl
addr16
lds
inc
lret
mov
or
fwait
out
int3
or
add
fnstenv
fcomip
dec
rcl
test
stos
leave
pop
push
scas
jbe
dec
and
mov
xor
jl
inc
inc
dec
into
cmp
fwait
popa
dec
sub
dec
add
dec
dec
jns
push
pop
mov
sar
adc
jb
mov
mov
jb
aam
xor
or
sub
dec
mov
and
mov
push
clc
cwtl
sbb
adc
imul
lret
cltd
inc
sub
cmpsl
arpl
sbb
jno
xor
jmp
adcl
xchg
sbb
loope
fs
adc
addr16
mov
fldl
mov
hlt
mov
daa
icebp
lcall
dec
pop
adc
sub
or
cmpb
ljmp
bound
push
pop
mov
int
inc
mov
mov
add
imul
lret
dec
adcb
mov
into
inc
fisubl
cmpsl
mov
adc
jle
mov
or
or
repz
lahf
popa
mov
pop
hlt
int
icebp
insb
es
shll
mov
addl
push
or
sahf
outsb
ljmp
jmp
inc
push
daa
dec
jl
jp
into
das
ret
call
mov
sahf
jp
xchg
adc
jp
test
loope
fdivs
cltd
sti
xorl
rolb
add
dec
pop
sbb
sub
sbb
lret
outsb
cltd
and
and
xchg
xor
shl
sub
js
inc
and
xlat
inc
pop
in
mov
stos
popa
in
jmp
loop
pop
insl
dec
cmpb
sub
push
arpl
jle
xor
rcrb
or
sub
hlt
cmpsb
fiaddl
enter
cltd
sub
sub
and
mov
and
negb
loopne
add
cs
and
xlat
dec
xor
lods
mov
adc
dec
pop
inc
es
repz
rol
mov
dec
cmp
sub
stos
stos
sub
arpl
mov
add
in
scas
push
adc
in
dec
push
push
clc
in
xchg
rorb
push
mov
jg
mov
in
inc
push
pop
sub
aam
pop
cmpsb
insl
jns
inc
or
inc
dec
pop
insl
test
xchg
pop
test
aam
bound
loopne
adc
lods
addb
jecxz
inc
cmp
insl
inc
mov
loope
enter
cltd
pop
add
ret
add
or
sub
aaa
sahf
pusha
xchg
fucomp
add
inc
je
cmp
jns
push
fmull
dec
inc
or
jae
hlt
dec
int
testb
xchg
test
negb
mov
inc
popa
inc
sbb
xchg
inc
add
inc
pop
out
jle
daa
cmpsl
sbb
sbbb
push
push
nop
dec
jmp
data16
xor
add
ljmp
dec
insb
push
ss
sub
rolb
lret
jbe
bound
pop
mov
adcl
push
mov
xchg
jg
inc
dec
loop
add
sbb
shrl
sbb
into
in
inc
inc
add
or
push
sbb
rcll
dec
pushf
lea
push
fsubs
fprem1
inc
stos
push
bound
in
fld
cmp
push
fiadds
ss
insb
mov
lret
les
repz
lock
test
stos
inc
jge
sub
adc
bound
adc
adc
pop
andb
dec
in
stos
repz
inc
icebp
jl
lret
leave
fistpll
push
icebp
std
push
sbb
mov
lret
pop
or
imul
imul
loop
imul
sbb
adc
daa
repz
and
bound
test
enter
cmpsl
add
dec
inc
clc
inc
dec
push
ljmp
push
stc
xor
xchg
push
aam
out
daa
or
incl
enter
jmp
subb
orb
out
pop
cmpsb
psubusw
dec
jle
in
mov
stos
xchg
enter
jmp
adc
ljmp
xor
dec
add
out
adc
ret
movsl
pop
cmp
sub
mov
lea
dec
push
les
aas
xchg
sti
outsl
pop
jmp
rep
xor
push
xor
incb
into
adc
repz
iret
subb
mov
and
adcl
mov
aad
mov
xchg
cltd
sbb
stc
pop
or
fistl
ss
dec
mov
ja
adc
ja
insb
cmp
and
and
mov
adc
xchg
daa
mov
idivl
int3
sbb
in
jo
or
inc
lret
int
sbb
sub
mov
lods
addr16
ja,pn
sub
leavew
rol
sbb
bound
enter
sbb
push
inc
inc
jb
loope
ret
pop
lret
jmp
sbb
mov
imul
sub
imul
push
jo
in
nop
sub
and
push
mov
push
or
or
mov
dec
mov
arpl
inc
mov
xchg
mov
adc
pop
pop
mov
insl
cwtl
adc
stos
or
insb
adc
dec
pusha
adc
and
or
arpl
cmp
lea
jge
in
leave
jno
sbb
inc
insb
ret
mov
roll
jno
fwait
and
pop
fsubl
popf
or
add
ds
enter
or
jl
cmp
add
mov
inc
stos
dec
adc
xchg
das
cmp
xchg
push
mov
ret
dec
call
sbb
and
mov
ror
mov
cmp
add
lock
cmp
dec
je
dec
add
enter
and
cmp
mov
push
call
test
mov
dec
and
in
rolb
jp
jmp
cli
cwtl
or
lret
jb
mov
iret
cmpsb
add
push
pop
es
or
out
push
and
inc
sub
mov
push
mov
or
pop
mov
lret
xor
push
lods
inc
lock
mov
stc
ret
or
cmp
test
mov
sub
cltd
mov
mov
out
dec
leave
jmp
nop
cs
ja
dec
mov
fstps
push
test
cmp
adc
cmp
adc
clc
add
push
das
sub
stc
mov
add
stos
cli
jmp
pushf
test
frstor
xchg
aas
stc
sbb
and
and
cmp
insb
enter
mov
adc
into
ret
xor
aad
or
call
nop
pop
mov
xchg
test
push
xor
adc
dec
nop
clc
adc
repz
fdivr
jns
mov
inc
pop
or
mov
nop
gs
bound
adc
in
dec
loop
sbb
pop
sub
xchg
push
clc
enter
push
sub
sbb
mov
mov
push
sub
sub
cltd
xchg
fiadds
sbb
imul
push
mov
leave
mov
cmp
jge
and
subl
jg
jnp
push
dec
xor
xchg
xchg
cld
xchg
imul
push
in
test
dec
insb
pop
scas
add
fsubr
cmpb
hlt
inc
fimull
push
aad
clc
xor
fistl
mov
mov
jmp
mov
bound
or
int3
js
out
repz
xor
cmpsb
leave
cmp
les
shlb
or
push
test
or
imul
inc
les
sub
xchg
orb
and
xor
dec
cwtl
xor
xchg
into
mov
cld
adcl
mov
push
sbbl
ud0
and
clc
mov
add
mov
pop
jo
adc
jmp
cmp
dec
dec
inc
faddl
pop
adc
scas
add
test
lea
dec
xchg
xor
pop
fld
mov
pop
arpl
inc
ret
adc
jle
cmpsl
imul
xchg
inc
dec
cmpsl
lcall
mov
repnz
and
mov
and
dec
repnz
mov
fbstp
inc
xchg
cli
lock
outsb
leave
jbe
lcall
jbe
xchg
mov
push
in
sbbb
cmp
or
or
imul
inc
repnz
dec
mov
int
dec
pop
xchg
sbb
mov
jmp
ja
push
fstp
addr16
add
mov
into
leave
roll
adcb
or
inc
sbb
hlt
lods
addr16
dec
inc
scas
cmp
data16
mov
mov
sti
cmp
out
rorb
in
push
or
fdivl
pop
call
jp
js
fisubrs
movsl
sbb
or
sti
dec
jmp
xchg
das
popf
adc
in
jecxz
pop
lds
fs
mov
lret
push
jp
mov
cmp
inc
cwtl
push
orb
insl
sbb
sahf
xor
cmp
ret
and
sbb
or
lret
rorb
lds
loope
add
sbb
roll
mov
push
xchg
inc
mov
shll
sub
hlt
mov
scas
and
icebp
sub
mov
sbb
in
sbb
imul
movsb
mov
pusha
fildll
insl
test
xchg
inc
mov
into
jle
clc
test
pop
or
mov
lds
and
dec
scas
or
cmp
mov
mov
push
mov
bswap
loopne
sub
push
mov
ret
sub
stos
fistpll
inc
and
push
xor
enter
push
push
dec
mov
xchg
imul
ret
dec
xchg
dec
icebp
jo
xor
dec
call
and
sarl
and
insl
mov
cmp
es
dec
sub
mov
in
fld1
mov
in
add
lret
add
lock
mov
jne
int
mov
add
repz
stos
mov
push
je
mov
and
xor
scas
lcall
mov
cmpsb
fsubl
add
jo
ret
out
xchg
clc
xor
jo
mov
or
fldt
imul
mov
or
xchg
xor
dec
ret
inc
stos
leave
in
ja
clc
xchg
bound
mov
jp
mov
and
inc
and
dec
push
mov
out
pop
sbb
dec
lds
aaa
sub
hlt
mov
imull
mov
or
and
jmp
mov
leave
mov
in
shll
dec
fists
cmp
cmpsl
daa
lock
mov
inc
scas
lret
test
or
cmp
outsb
jl
sub
xor
inc
cmp
lret
es
mov
pop
mov
cs
jg
fldenv
imul
leave
push
add
dec
inc
cmp
or
and
sbb
mov
lret
sub
xor
leave
popa
adc
incl
shrl
jg
mov
inc
add
aas
and
jbe
inc
push
sub
fcomip
ret
stc
push
inc
popf
test
dec
jg
mov
push
add
pusha
fwait
adc
sbbb
jecxz
adc
mov
dec
leave
inc
mov
push
frstor
xchg
mov
add
jns
ret
mov
test
push
dec
ds
pop
pop
loope
shll
movsb
les
jl
in
imul
add
insl
sbb
push
push
cld
mov
push
fildl
jmp
rcr
jp
mov
aaa
or
fiaddl
sub
lret
aam
imul
push
loopne
push
adcl
leave
enter
cwtl
fisubrl
clc
cmc
leave
jns
mull
or
mov
xchg
xor
push
jnp
mulb
movsl
jbe
push
stc
inc
push
jg
dec
lods
xchg
xor
or
fmull
inc
pop
cmp
cmc
and
xor
mov
mov
xor
pop
mov
aaa
push
push
enter
push
in
iret
mov
negl
loop
call
dec
xlat
popa
push
dec
rcl
push
stos
clc
ret
int3
pusha
and
rorl
xchg
sbb
push
mov
sbb
cmp
or
mov
lods
fisttpl
push
lods
add
sarb
dec
sub
lret
xchg
mov
aaa
insb
adc
mov
aaa
mov
or
push
je
cmpsl
fstp
es
sti
and
jecxz
xor
out
cmp
xor
leave
popa
push
push
xlat
sbb
sub
adc
out
adc
cmp
add
hlt
adc
loopne
xchg
mov
add
loop
icebp
jecxz
mov
add
inc
lods
iret
jbe
push
repz
sbb
jg
icebp
popa
sub
ror
in
adc
mov
push
loop
mov
push
sub
jo
pop
cmp
add
and
fimull
lret
push
adc
pop
ret
addr16
xchg
setge
cwtl
sub
lock
es
fsub
mov
push
jbe
enter
lret
inc
bound
xchg
in
cmpl
xor
testb
test
rol
dec
iret
insl
xchg
mov
dec
shrl
mov
or
loope
mov
repnz
inc
mov
cltd
std
rolb
pop
push
inc
mov
testb
test
pop
movsl
lret
dec
ret
sarb
idiv
sub
jl
add
pop
fmul
pop
aam
mov
xchg
sub
sbb
out
imul
adc
mov
push
lods
jecxz,pn
popa
test
stos
or
mov
push
imul
sub
xchg
or
dec
sub
ss
add
popf
push
cmp
add
iret
mov
bound
out
dec
inc
pop
lahf
dec
leave
add
xchg
popa
outsb
sub
inc
leave
fmuls
dec
ret
and
ret
ds
hlt
dec
jle
xor
sub
jg
inc
jle
pop
lods
aam
test
mov
leave
fbstp
imulb
sub
pop
lds
mov
sub
inc
test
or
adc
movsb
inc
or
mov
dec
add
jbe
pop
adc
mov
mov
imul
push
xorb
cmp
mov
sbb
loopne
cld
dec
cmp
test
leave
push
pop
test
mov
mov
shl
push
roll
mov
sbb
jno
xlat
inc
push
iret
fsub
addr16
inc
rol
into
ret
and
rorl
in
push
pop
rorl
loope
sbb
mov
scas
or
flds
sub
push
sub
xchg
call
jmp
pop
push
dec
sarl
sbb
cwtl
rolb
inc
roll
fcmovu
loope
or
sub
stc
pmulhw
pop
dec
or
rorl
test
pop
in
push
lcall
pop
add
pop
sub
enter
fimull
stos
push
cld
in
mov
fwait
into
test
push
pop
rclb
add
xor
lret
mov
sbb
lahf
lea
ret
pop
aaa
cmp
or
add
xlat
cltd
loope
dec
fmuls
test
pusha
jno
daa
xchg
pop
mov
loope
sub
stc
mov
and
lret
mov
loope
dec
roll
sub
iret
into
mov
jae
push
out
and
xchg
mov
mov
mov
jle
push
push
and
xchg
loop
rorb
insl
stc
insl
xchg
dec
sub
flds
pop
mov
sti
xchg
xchg
jns
xor
pop
sbb
push
xchg
daa
push
jg
loope
aad
sub
es
add
into
inc
pop
mov
jo
sbb
dec
and
inc
ret
and
sbb
cmpsb
sub
sahf
sbb
jbe
jae
dec
or
inc
je
push
and
sbb
repz
out
int3
xchg
dec
xchg
ret
js
pop
and
add
clc
fsubrs
outsl
xchg
aas
hlt
loop
movsl
call
cwtl
push
sub
jle
mov
stos
push
inc
push
in
cmpsl
push
and
sti
inc
popa
movsb
int3
cs
stc
sub
fisttpl
adc
movsl
dec
pop
cvtps2pi
sub
lret
add
jbe
fisttpll
ficompl
fldcw
xlat
sub
or
inc
cwtl
popa
mov
cmp
pop
lret
cs
dec
cwtl
popa
jmp
pushf
fidivs
or
jo
aas
pop
sub
sbb
shr
or
add
push
mov
dec
fsubrl
test
or
enter
push
call
pop
or
pop
fldenv
in
sub
push
inc
aad
pop
nop
sub
lret
loope
in
dec
cmp
leave
sub
xorl
or
xlat
mov
inc
dec
jmp
xchg
iret
push
daa
in
sub
pop
bound
mov
outsl
lods
fwait
stc
ret
inc
dec
push
cwtl
dec
or
rcl
sub
popa
push
add
pop
and
jle
xlat
xchg
inc
push
push
xchg
iret
ds
mov
lahf
dec
adc
sub
adc
xchg
dec
lods
repnz
shll
dec
clc
icebp
mov
mov
xchg
mov
out
pop
clc
bound
inc
add
popa
push
faddl
adc
and
popa
push
addr16
sti
xchg
adc
mov
cmp
loope
scas
cmp
movsl
pop
pop
cs
cmpsl
lods
jmp
sarb
cmp
sub
ret
jge
jno
dec
cmpl
mov
js
and
test
mov
push
mov
jns
enter
fmull
test
push
mov
iret
loopne
or
mov
push
sub
dec
xor
lods
in
mov
or
roll
mov
pop
push
jecxz
xchg
inc
xor
sub
ret
lret
push
call
sub
movl
mov
sahf
or
data16
cmpsl
jne
scas
mov
lods
mov
mov
xchg
xchg
sub
popa
dec
xor
loopne
sub
loop
bound
mov
xchg
inc
pop
mov
iret
adcl
xchg
push
dec
stos
stos
add
push
insl
lods
shl
fxch
out
xchg
repz
sbb
cmp
push
xor
jnp
push
aas
cmc
mov
daa
xchg
insb
and
xor
iret
jl
mov
add
aam
lret
xor
dec
pop
in
push
dec
mov
xor
lds
enter
xor
dec
xsaves
leave
cmp
mov
lahf
inc
adc
sar
rcrl
jcxz
dec
cmc
imul
mov
xor
mov
dec
mov
sub
add
cmp
in
ds
dec
flds
cltd
sub
and
or
ret
add
test
jbe
and
in
sub
cmp
addr16
in
push
jb
out
push
movsl
imul
fistl
jb
cmp
gs
pop
xchg
xchg
test
mov
pusha
test
and
test
cmp
or
leave
xor
sub
nop
inc
jne
aaa
add
and
mov
test
mov
pop
pop
js
cltd
jnp
and
fnstcw
mov
lods
iret
push
push
push
inc
mov
sub
pop
sbb
mov
sti
sub
sbb
dec
cmpsl
push
mov
dec
push
pop
sbb
push
lret
mov
push
mov
jecxz
push
cwtl
outsb
jbe
inc
xchg
or
gs
jne
cmp
arpl
adc
xchg
lcall
outsb
mov
fcmove
ret
sub
dec
std
mov
jae
in
cmc
fs
bound
add
pop
mov
pop
ret
sti
enter
call
pop
sarl
dec
xchg
bound
mov
jge
jge
or
sbb
sub
cltd
mov
mov
push
jmp
test
cmpsb
xchg
mov
sub
dec
push
fildl
mov
xchg
sub
xlat
mov
fadd
or
xor
dec
lea
mov
rorb
add
jmp
cli
rorl
sub
jbe
movl
mov
aad
out
in
inc
cmp
xchg
popa
fstpl
imul
sub
cltd
inc
mov
push
push
cwtl
inc
sbb
ret
jns
push
xor
cmp
xchg
rorb
ret
cmpsl
mov
xchg
enter
xor
leave
loope
ret
and
cwtl
pop
pop
xorb
adc
mov
dec
frstor
mov
jno
xor
shl
mov
mov
insl
add
mov
aam
dec
xor
daa
pusha
mov
inc
jmp
mov
int
jg
movsl
idivl
stos
and
fldenv
xor
mov
xchg
mov
mov
add
andl
dec
aad
xlat
mov
ret
mov
or
xor
test
inc
or
mov
push
sub
aas
sarl
sub
insb
pusha
cmpsb
clc
fnsave
fwait
test
jns
add
mov
out
repnz
pop
iret
and
jbe
mov
fsub
and
mov
std
shrb
cmp
sbbb
stc
pop
daa
in
pop
movsl
arpl
adc
out
mov
testb
push
mov
rorl
loop
repnz
loope
cltd
fsts
insb
out
and
mov
jge
xchg
dec
ret
push
fldcw
dec
repz
push
fdivs
inc
pop
mov
inc
or
sbb
push
sbb
aaa
mov
jno
cmp
mov
adc
mov
ds
insl
dec
or
xor
mov
int3
push
fstl
movsl
scas
ljmp
cmpsl
mov
lods
out
pop
mov
xchg
push
clc
and
jmp
mov
pushl
mov
ret
sub
enter
jmp
cmpsl
or
mov
or
or
test
jl
int3
iret
cmp
js
xor
jmp
mov
dec
xor
lods
xor
dec
pop
fadds
dec
syscall
or
lret
pop
leave
pop
add
movsb
in
ss
cmp
loope
or
dec
cltd
shr
loope
iret
lret
lods
xchg
jp
jnp
push
fists
push
mov
int
or
sub
mov
testl
aaa
sub
push
vmread
cmpsl
xor
dec
cmp
lret
test
mov
pop
fldcw
pop
in
xor
arpl
insb
addr16
jb
or
dec
test
pushf
xchg
stos
aaa
dec
and
test
pop
dec
dec
and
ds
and
pop
test
push
push
cwtl
add
push
add
cmp
into
loope
inc
ret
in
add
jge
dec
add
dec
jbe
inc
inc
xor
or
cmp
mov
movsb
lods
adc
pop
jae
xlat
in
mov
aad
jne
pop
jns
outsl
sub
sub
mov
stos
xor
sub
sub
mov
xchg
mov
xorl
cmp
cmp
dec
adcb
and
stos
outsb
je
jmp
inc
in
aaa
mov
lds
jmp
or
xchg
pop
mov
sub
sub
into
mov
lods
leave
mov
push
mov
cmp
jae
adc
or
cmp
arpl
xchg
insb
jno
mov
daa
ljmp
decb
push
ret
inc
imulb
push
or
push
cmp
stos
into
dec
aam
jg
data16
lcall
mov
inc
test
sub
push
into
test
sbb
cmp
rcrb
xchg
hlt
out
lret
sbb
lcall
pop
and
decl
movsb
xchg
sub
cld
clc
push
sub
cmc
hlt
insl
mov
or
iret
xchg
add
out
sahf
jecxz
lret
into
out
dec
adc
push
lods
dec
push
call
loopne
test
in
pop
lret
sbb
fisubrl
daa
sarb
or
pop
dec
mov
and
jmp
pusha
outsl
loope
push
mov
inc
sub
sub
sub
inc
negb
and
les
inc
add
xchg
dec
jecxz
mov
sub
sub
or
and
adc
leave
or
cmp
pop
or
int
shll
dec
mov
in
fisttpl
movsb
and
sbb
fwait
mov
in
outsl
cld
sbb
jae
sub
adc
pop
fdivs
cmpsl
shl
mov
pop
dec
sbb
add
or
fisubs
ret
fwait
or
xchg
jecxz
fnstcw
adc
testl
xchg
enter
or
pop
dec
inc
cmp
lock
dec
ret
push
arpl
inc
cli
dec
inc
rcl
mov
pop
cmp
bound
icebp
add
sub
lret
xchg
pop
lea
lret
vhaddpd
repz
cmp
cs
lret
mov
pop
jo
sub
repnz
bound
test
inc
fwait
std
or
xor
ret
sti
sbb
push
js
jle
fiadds
push
xor
add
dec
cmp
cmp
push
or
or
mov
sbb
jnp
imul
cltd
shll
pop
pop
push
pop
jl
dec
inc
pop
ret
mov
loope
incb
movsl
push
into
xor
cmp
push
push
cmpsb
aad
add
mov
xchg
cmp
push
mov
loopne
mov
rorl
hlt
stos
pop
rol
rcrl
and
clc
mull
stc
lahf
ret
rol
test
pop
push
push
dec
xor
sub
mov
lock
push
dec
rcrb
jns
inc
sub
std
pop
xor
inc
in
adc
and
push
pop
push
xchg
pop
imul
mov
and
add
arpl
xlat
adc
inc
lcall
push
hlt
cmp
dec
mov
jmp
bound
push
push
notl
dec
inc
and
pop
dec
or
adc
jg
pop
icebp
pop
test
mov
addb
stc
and
call
inc
fisttpll
iret
lret
xor
andb
js
or
fwait
add
push
sub
cli
popa
sbb
lea
mov
aad
sub
enter
or
bound
pop
inc
imul
ror
push
pop
es
jp
inc
jno
inc
jp
dec
mov
hlt
imul
or
jmp
hlt
xchg
pop
test
mov
push
outsb
pop
divl
cltd
out
dec
outsl
movsb
out
ja
cmpb
push
mov
mov
adc
pusha
sbb
lcall
push
mov
lds
test
fstps
mov
in
cmp
jmp
aam
scas
in
add
xor
jge
lds
sbb
fidivl
aam
insl
loopne
fildl
mov
arpl
adcb
dec
and
or
mov
cmc
ror
in
fisttps
ret
push
call
xor
movb
je
pop
stc
fsubrp
pop
mov
push
mov
cmp
movsl
ret
cmp
push
adc
mov
add
or
ret
xchg
xchg
das
adc
sbb
in
or
and
mov
ret
jg
push
leave
shll
imul
iret
addr16
add
inc
cmp
rcr
hlt
cmp
sarb
add
or
stos
inc
mov
test
lea
clc
fisttpl
pushf
lods
jmp
and
cmp
insb
cmp
jp
int3
ret
sbb
inc
insl
sahf
xlat
jg
lods
cli
or
push
ljmp
pop
iret
jp
inc
push
adc
out
xchg
stos
inc
dec
mov
cwtl
sahf
aad
pusha
divb
fsubr
xchg
sub
in
mov
mov
movl
lret
dec
insl
in
xchg
jecxz
lret
loopne
or
out
cmpsl
ficompl
sub
xchg
push
loope
or
lahf
push
int3
fcomp
inc
add
inc
jne
aad
and
sub
fmuls
pop
leave
movsl
int
pop
in
sbb
and
inc
scas
inc
push
mov
adc
mov
pop
scas
mov
sbb
push
xor
dec
stc
adc
sbb
mov
push
cmp
orl
fnclex
rcrl
jae
rcrb
clc
mov
fstpt
xchg
test
cmpl
or
fbstp
repnz
pop
gs
sub
pop
insl
cmp
outsl
clc
fadds
push
data16
pop
repz
fldenv
ljmp
stos
xchg
dec
scas
or
test
out
push
mov
cmp
mov
jp
mov
jnp
fisttpl
sbb
or
pop
sbb
mov
lods
inc
pop
or
adc
add
fldt
inc
jae
push
jp
das
fmul
push
cmp
int
mov
push
ret
add
cmp
lods
stos
popa
mov
add
and
cmp
inc
inc
xor
adc
jnp
cmp
cmp
hlt
cmpb
add
sti
add
loop
mov
dec
and
into
fsts
xchg
add
inc
jp
stc
icebp
or
frstor
inc
outsb
insl
das
xchg
shl
jl
jb
sti
sahf
lahf
nop
ljmp
cmp
sub
fdiv
inc
xor
out
call
test
xchg
pop
jo
push
pop
idivb
repnz
pusha
lret
in
ss
pop
fninit
xchg
xor
lock
rcrl
adc
ss
ret
add
divl
or
ljmp
mov
shll
addr16
xor
push
leave
xchg
mov
mov
cwtl
rorl
test
sub
dec
hlt
insl
lods
or
push
adc
push
and
leave
mov
push
rcrl
sub
xor
sbbb
test
jae
push
dec
test
aas
aad
in
test
ret
sub
mov
pop
push
xor
push
shlb
extrq
push
push
ficompl
or
mov
mov
or
or
xorb
sbb
pop
leave
lods
sbb
push
test
xchg
sub
push
dec
dec
loope
es
movsb
cwtl
rorb
enter
hlt
mov
sub
cmpb
push
cmp
xorb
push
dec
and
inc
stc
into
sbb
loopne
sahf
sbb
fsubr
addb
or
test
div
sub
insl
lods
pushf
movntps
test
cmpsl
dec
rcl
jbe
ficomps
mov
sbb
pusha
outsl
xchg
mov
in
adc
in
xor
and
adc
and
xchg
dec
and
insl
mov
mov
mov
mov
dec
jno
mov
jno
adc
dec
int3
mov
fucom
lods
push
push
insb
xlat
or
mov
sbb
popa
pop
xor
xor
jecxz
leave
cs
stc
iret
loopne
imulb
cmpsb
ret
jno
int3
lahf
ds
mov
test
jle
add
xor
inc
sbb
cmp
xchg
popa
xor
jl
mov
scas
cmp
add
in
hlt
std
out
xchg
aaa
call
lock
test
xchg
rcll
xor
push
fucomi
lret
lret
bound
jge
xor
dec
rol
pop
or
push
push
xchg
lret
sub
mov
in
mov
sarl
int
clc
dec
jge
shrb
cmp
clc
jae
dec
into
xchg
enter
add
inc
and
out
sub
out
jo
mov
pop
jno
mov
scas
and
sbbb
and
sahf
push
mov
cmp
jno
insb
mov
cmpsl
sbb
aaa
ficomps
hlt
or
leave
out
add
stos
loopne
lds
mov
int3
xchg
or
push
leave
sbb
xchg
xchg
adc
add
and
in
push
ja
mov
shufps
xchg
sub
cmp
xor
fs
lea
adc
cmp
jmp
out
or
sbb
xchg
filds
lahf
addr16
insl
push
fdivl
das
push
dec
aam
repnz
cli
xchg
ret
jecxz
lcall
or
mov
sub
inc
jno
cltd
jecxz
arpl
dec
dec
inc
and
dec
fcmovnu
addl
push
ljmp
sarl
shrl
test
rsm
jb
inc
ds
push
ljmp
scas
add
in
insl
xlat
ret
out
push
push
aas
sbb
sarb
sbb
sub
sahf
fsts
pop
scas
ret
rolb
add
sbb
sub
and
jae
cli
ffreep
das
xorb
js
jmp
mov
mov
pop
adc
mov
mov
mov
xchg
cmpsl
dec
insb
int3
rcrl
inc
jge
lods
fs
push
mov
ret
imul
pop
add
sti
in
insl
lods
cmc
inc
mov
mov
mov
bnd
pop
push
pusha
lret
push
arpl
xchg
daa
clc
jge
push
clc
sub
orl
mov
sbb
jo
imul
pop
push
mov
aam
jnp
das
jecxz
fs
adc
aas
xchg
mov
and
test
pop
shl
addr16
aam
pop
je
jmp
ds
push
pop
adc
pop
stos
sub
enter
test
leave
xor
les
dec
mov
mov
jno
int3
sbb
jmp
push
in
sub
mov
scas
ljmp
push
pop
std
cmp
mov
mov
cmpsb
sub
bound
test
sbb
stos
js
clc
push
sub
xor
adc
dec
xchg
cmp
in
cli
or
jb
arpl
mov
add
cmp
push
in
pusha
jmp
insb
mov
xchg
and
sub
jmp
cltd
sbb
lret
and
int
hlt
add
call
out
je
lcall
mov
and
and
xor
ds
pop
lods
rcl
adc
imul
mov
cs
dec
pushf
mov
js
sub
fucomip
lock
lods
icebp
out
lods
adcb
shl
test
rorl
jbe
lea
mov
inc
pop
xchg
bound
notl
adc
inc
sub
and
jns
dec
pop
fnstcw
pop
div
or
xchg
xchg
sub
xor
lahf
cld
lret
dec
out
mov
js
addr16
cmp
sbb
cmpsb
mov
pop
leave
jecxz
sarb
adc
pop
and
movsl
add
lods
mov
insb
subl
mov
xchg
in
stos
dec
stos
addr16
ror
andb
lcall
loopne
ja
out
arpl
movsb
xchg
shl
push
jo
add
repnz
xchg
sbb
sar
sbb
dec
mov
push
sahf
dec
cltd
fs
jecxz
pop
mov
or
xlat
fs
sbb
mov
mov
ror
or
dec
rorl
cmp
cmp
out
mov
jnp
sub
dec
jnp
lret
andl
xchg
pop
loopne
fstpl
imul
sbb
add
jecxz
cld
sbb
jp
shrb
sahf
jnp
xchg
mov
xchg
nop
iret
or
popa
imulb
fs
ret
into
int3
das
and
mov
jecxz
cs
or
int
jl
sbb
stos
cld
dec
jl
add
dec
dec
adc
dec
inc
loopne
incb
pop
jmp
lea
dec
aam
push
jae
pop
sub
dec
lods
stos
ret
gs
lea
fwait
jmp
cmp
leave
inc
cmp
push
insl
movsl
mov
loopne
mov
fstl
inc
lret
add
pop
or
sbb
push
mov
or
outsb
dec
jne
and
aaa
push
jnp
xor
or
mov
pop
sbb
inc
mov
xor
mov
fs
dec
push
pop
sbb
mov
sub
xor
pop
cwtl
or
aam
mov
cmp
inc
lret
aam
jnp
aaa
sbb
shl
out
into
jbe
mov
jmp
add
je
inc
xor
stos
xchg
or
dec
xchg
scas
fimull
lds
push
inc
mov
outsl
dec
adc
sbb
add
or
inc
xchg
dec
sub
inc
pop
gs
jl
cmp
addr16
pop
lret
fadds
xchg
repnz
dec
in
push
enter
xor
loopne
adc
lods
test
fdivr
je
push
pop
mov
sti
leave
cmp
insb
inc
sub
adc
int
pop
inc
inc
lret
lret
inc
pop
pop
mov
inc
xor
out
insb
mov
inc
inc
xor
cwtl
jle
ret
jmp
repz
sub
mov
lds
or
sub
adc
lds
mov
inc
or
mov
lods
enter
pop
or
loopne
and
test
push
ljmp
gs
movsb
inc
mov
inc
cmpsb
in
push
setle
test
fidivrl
xchg
or
repz
aad
inc
dec
push
mov
cmp
addr16
popa
leave
and
jae
mov
mov
add
sbbl
mov
inc
loop
mov
unpcklps
out
inc
xchg
faddl
bound
jae
mov
and
adc
inc
jle
aad
jg
xor
inc
jns
dec
jno
mul
mov
cld
sub
hlt
das
jnp
cmp
mov
push
add
jl
lret
or
das
xor
into
xchg
cmp
cmp
pop
xchg
insb
inc
movsb
cmovnp
sbb
cmp
scas
ret
fiadds
mov
cmp
movsl
xlat
dec
add
xchg
add
repz
or
and
mov
ret
and
or
mov
push
cmp
add
cltd
and
lods
xor
and
daa
pop
lret
xor
mov
xor
adc
cltd
ret
and
xorl
push
imul
push
or
fs
adc
add
and
xorb
jecxz
sub
aad
inc
or
shll
sti
xor
stos
xor
push
sub
mov
dec
jns
mov
pop
jb
clc
jg
cmpsl
aam
xcrypt-ofb
cmpsl
test
lds
adc
dec
pop
mov
cmpsl
jmp
subl
sub
imul
and
adc
mov
or
or
xchg
xchg
insl
inc
aam
bswap
mov
sti
mov
rclb
pop
jp
and
out
jmp
daa
sub
aas
je
push
sub
jmp
adc
clc
fs
jnp
add
jge
or
leave
pop
fisttpl
sub
or
jae
ficompl
loope
shrl
cmp
jo
jbe
push
mov
cmp
add
stc
adc
imul
lret
cmpl
pop
test
mov
push
rcl
sbb
add
addr16
addb
stos
push
insl
sub
pusha
sbb
nop
mov
dec
xchg
bound
insl
mov
mov
mov
mov
xor
sub
pop
int
jb
addr16
inc
test
push
in
sbb
call
cmpsl
or
inc
lods
repnz
inc
lret
inc
outsl
sub
sbb
stc
mov
push
pop
or
repnz
out
adc
or
adc
mov
hlt
loop
dec
push
stc
clc
mov
sti
lods
cmp
sti
jmp
pop
pop
cmpsl
mov
mov
scas
xor
xor
sbb
pop
sub
into
test
lret
mov
pop
pop
ret
jmp
inc
lret
cmp
sbb
fsubs
clc
xor
jg
dec
push
lea
and
cmpsl
xchg
pop
mov
jp
cmpsl
jecxz
lods
push
int3
add
inc
adc
movsl
cmp
ror
cmp
adc
jno
in
jns
mov
jb
dec
mov
popa
mov
and
cli
mov
cs
dec
cli
fadds
dec
rcl
lret
enter
pop
push
sub
js
sbb
lods
jl
rcl
loop
outsl
jl
push
inc
aam
jae
test
iret
adc
jae
mov
adc
ret
leave
outsb
lds
inc
gs
inc
ret
mov
cmpsb
pop
mov
push
fstpl
xor
and
out
cmp
mov
or
arpl
enter
fwait
rorl
sbb
or
inc
ret
rcr
xchg
clc
mov
fwait
mov
call
les
and
push
mov
das
shrl
jecxz
mov
add
dec
xor
or
pop
sub
pop
mov
and
sti
dec
leave
jae
jne
dec
ret
pop
arpl
cmpsl
mov
sub
jno
cltd
lret
mov
xor
mov
je
insl
mov
adc
insl
mov
cmpsb
sub
sbb
and
rcrl
pop
jae
inc
cmp
push
iret
inc
sti
dec
aas
fs
sbb
hlt
imul
inc
ret
cmpsb
stos
clc
inc
inc
mov
outsl
in
nop
cmc
adc
adc
leave
rcll
mov
or
enter
int3
filds
test
imul
fdivrl
adc
ret
push
imul
pop
je
jbe
sub
pop
movsl
inc
int
hlt
push
inc
rolb
mov
mov
sub
pop
push
test
mov
inc
jmp
shlb
cmp
and
rcr
inc
or
mov
int3
inc
mov
mov
ret
sub
ret
arpl
ret
hlt
fisttpl
stc
mov
xchg
mov
insl
leave
push
shl
hlt
sarb
cmp
inc
call
cmc
stc
jbe
bound
dec
fwait
mov
test
mov
and
ja
or
in
into
pop
jnp
jmp
pop
out
test
mov
shrb
push
sub
clc
mov
sarl
gs
push
push
cmpsl
mov
dec
cwtl
in
xchg
jmp
inc
stos
adc
mov
lcallw
mov
inc
cmpsb
aaa
enter
mov
xor
xor
mov
mov
or
mov
jmp
fsubrs
jecxz
xchg
cmpsl
or
nop
and
cmc
mov
push
mov
and
and
cmpsl
xlat
pop
lods
ficoms
push
inc
gs
addb
jno
stos
xor
fidivrs
push
sahf
enter
dec
xchg
dec
cmpsl
dec
mov
aad
int
push
imul
insb
repnz
mov
in
mov
in
sub
mov
lret
fucomip
push
or
add
dec
stc
imul
dec
push
int
mov
out
jae
test
xchg
and
lds
std
mov
xor
sub
cmp
fdivl
pop
imul
jb
insl
mov
lods
xlat
dec
rcl
or
cmp
movsl
mov
incb
clc
addr16
ds
mov
sub
sub
ss
pop
inc
and
jmp
ret
in
push
and
loope
in
pop
mov
xchg
jecxz
push
out
dec
cmpsb
in
pop
cmpxchg8b
int3
mov
aad
scas
or
mov
int3
push
cmp
popa
jge
push
mov
pop
stos
je
js
push
clc
int
dec
dec
fnsave
dec
mov
mov
je
mov
int3
push
cmp
jecxz
xchg
test
nop
dec
rcl
xchg
push
gs
sbb
mov
out
hlt
rorb
mov
hlt
outsb
adcl
push
cmp
push
cmp
and
popa
jmp
sub
cli
inc
lods
inc
xchg
out
pop
and
or
jmp
shll
adc
dec
jl
aam
leave
cmpsb
sti
sub
movsl
out
out
orl
fmuls
sub
ja
cld
mov
lcall
adc
out
fisttps
mov
add
es
pop
cmp
hlt
or
pop
int
mov
xchg
xor
jnp
in
mov
adc
mov
dec
jae
fdivs
mov
lods
xor
repnz
insb
jmp
arpl
xor
sbb
pop
sub
mov
sub
imul
pop
fldl
loope
sub
adc
jmp
in
push
add
mov
shlb
sahf
or
cltd
int
leave
addl
xlat
pop
mov
das
pop
div
cmpb
test
mov
jmp
adcb
outsl
jle
inc
pop
data16
xchg
iret
or
dec
and
pop
mov
xchg
loopne
push
jmp
roll
cmpsb
mov
pop
cltd
jne
mov
dec
popf
fstpl
lds
out
arpl
jno
jmp
xor
nop
push
dec
cmp
mov
clc
fwait
pop
sti
adc
lret
minps
outsb
dec
aam
sub
sbb
inc
mov
inc
rorl
imul
pop
jb
lcall
mov
in
adc
push
add
loope
into
loopne
cmp
ds
fucomi
pop
lods
inc
jle
mov
mov
sbb
mov
push
imul
cmp
push
sub
inc
ffree
pop
and
lock
rcrb
add
pop
ret
dec
shlb
adcl
inc
add
push
scas
add
or
inc
push
int
daa
lret
inc
ret
insb
hlt
daa
pop
fcoms
add
leave
sub
jo
add
mov
loope
mov
int
mov
jle
xor
push
and
lcall
mov
int3
cmp
enter
int
repz
push
or
adc
shr
xlat
lret
or
or
stc
or
rolb
or
ljmp
out
lock
or
push
jne
or
mov
sbb
pop
in
push
mov
or
fdivr
lods
dec
lret
lcall
mov
inc
mov
cmpsl
mov
xchg
or
jl,pn
neg
or
fcomip
sub
mov
clc
ds
xor
shrl
subb
pop
mov
pop
stc
sahf
mov
fisubs
les
sbb
mov
cmp
push
xor
fwait
push
mov
pop
inc
jl
xchg
call
das
xchg
cli
dec
rol
iret
xchg
leave
xor
mov
gs
data16
or
sub
ficompl
ret
stc
cmpsb
and
mov
push
ret
sbb
enter
loop
cmpsb
popa
cmp
call
or
mov
outsl
ljmp
cmpsl
in
and
data16
sbb
cmpsl
mov
daa
or
jae
in
mov
pop
and
jmp
mov
xchg
pusha
fsts
xor
push
sub
mov
and
mov
push
jbe
jp
jp
jo
jge
jno
insl
dec
xor
push
aad
hlt
dec
int3
inc
stc
push
enter
adc
inc
xor
pop
inc
lods
fldcw
fmull
stos
mov
and
adc
and
sub
into
aad
je
xchg
and
lods
enter
and
sbb
andl
mov
mov
arpl
mov
mov
out
or
outsb
sahf
sub
pop
pop
dec
lods
xorl
cmpsb
nop
fldl
pop
cmp
mov
aaa
ret
mov
push
sub
fldl
add
push
adc
push
xchg
xor
ss
push
jl
add
pop
loop
mov
jmp
push
pushf
sbb
inc
pop
aas
sub
jmp
bound
jo
movsl
insb
inc
aad
inc
dec
andl
negb
test
fbstp
sub
jle
push
insl
or
cwtl
aad
push
dec
jle
or
cmovne
mov
push
ds
and
adc
into
inc
pop
cltd
xor
cs
clc
mov
rcll
xor
imul
add
imul
fistpl
inc
push
mov
dec
jno
cli
ja
aas
leave
sbb
pop
sahf
aas
sbb
xchg
lahf
es
mov
adc
pop
stc
neg
cmp
xor
fisttpl
imul
mov
ret
test
xor
pusha
adc
and
add
lret
or
imulb
pusha
ret
add
dec
frstor
in
mov
scas
ss
or
sub
mov
add
or
mov
sub
dec
dec
imulb
sub
cmpsl
jmp
dec
mov
mov
pop
orl
and
mov
xor
xchg
xchg
insl
dec
lret
sub
gs
addr16
fxch
cmpsl
fimull
cld
dec
fildl
pusha
sub
test
out
push
aad
aam
movsl
ds
sub
cli
jg
ret
jmp
mov
sub
fwait
arpl
xor
cmpsb
sbbb
mov
pop
push
push
jl
stos
add
and
rol
sbb
xchg
inc
mov
or
mov
mov
cs
loopne
ror
scas
in
inc
pop
inc
xlat
fisttpl
addr16
mov
or
and
or
and
cmp
jmp
pop
mov
push
dec
fldcw
cmp
fdivl
hlt
add
jmp
dec
fwait
pusha
loopne
push
loopne
xor
xchg
jge
or
int3
vminps
je
mov
int3
cmp
je
or
push
dec
lahf
pushf
imul
cmp
pop
cmp
xor
lods
add
dec
popl
out
jae
loop
mov
mov
sub
js
call
testl
pop
lods
add
and
inc
cmp
aaa
add
in
bound
or
scas
cmpsl
je
jmp
mov
movsl
lret
sarl
rclb
insb
lret
xor
add
mov
hlt
enter
cmp
mov
aas
fsub
orl
pop
push
rorb
rcll
xchg
and
mov
jbe
xchg
iret
sbb
shrb
fisubrl
push
test
leave
mov
jmp
dec
mov
fistl
xor
mov
lds
push
cmp
sub
xchg
inc
imul
push
xor
fldl2e
fmul
add
incl
jecxz
pop
cmpsl
test
mov
inc
cli
das
mov
inc
out
lock
mov
dec
sub
add
lods
and
test
or
outsl
cmp
leave
fmull
jl
rcrb
xchg
pop
xor
inc
push
mov
clc
dec
or
jbe
mulb
std
nop
inc
pop
push
clc
jmp
sbb
pushf
int
xchg
cmp
into
add
xor
push
int3
idivl
popa
push
add
lea
push
dec
mov
scas
push
ja
cmova
lds
ffreep
cli
loope
pop
mov
lock
adc
ja
or
xor
sub
xor
sub
ror
adc
into
or
sub
lds
js
iret
pop
or
xor
stos
xor
jne
xchg
xor
pop
arpl
or
sbb
or
xor
call
xor
cmpsb
inc
jnp
cmpsl
test
mov
mov
or
iret
push
jl
or
mov
push
cmpsl
jnp
adc
fwait
cmpl
sub
jb
push
mov
mov
sahf
mov
outsb
stc
sbb
je
mov
into
xor
add
insl
lods
mov
jmp
pop
push
mov
ucomiss
ja
in
mov
add
jecxz
sbb
or
mov
dec
cmpsb
dec
mov
inc
clc
mov
sub
dec
jle
and
sbb
xor
aas
inc
lods
cmpsb
pop
xchg
push
call
sub
dec
ret
mov
mov
or
pop
xor
sti
adc
not
rorl
xchg
jp
shrl
int
inc
pusha
aas
inc
sub
push
jmp
jmp
push
leave
sub
dec
mov
cmp
sub
or
filds
cmp
insl
add
mov
addl
test
cmpsb
pop
lahf
out
mov
jnp
frstpm(287
pop
add
pusha
js
out
or
fildl
dec
mov
loope
rcrb
and
add
mov
push
or
rcll
daa
dec
out
and
mov
xchg
push
cli
pop
aas
repnz
bnd
mov
push
mov
mov
sbb
inc
iret
pop
jbe
jbe
or
ficompl
mov
push
in
mov
pop
out
push
lret
cmp
imul
mov
leave
sbb
into
inc
leave
into
aam
fildll
and
aam
xor
xor
aam
jmp
shlb
hlt
inc
js
rcll
inc
add
push
insb
mov
push
pusha
out
das
cmpsb
stos
enter
pusha
dec
sbb
xchg
lret
push
sbb
in
mov
cmp
popa
mov
jb
push
pusha
stos
jg
mov
mov
stos
push
dec
xchg
arpl
pop
fiaddl
pop
stos
rol
cmp
pop
ror
iret
cmp
mov
pop
int3
mov
pop
lret
cmp
dec
or
mov
push
or
sbbl
dec
mov
mov
inc
xor
cmp
mov
add
xchg
add
out
jbe
in
rcrl
lods
hlt
fildl
dec
leave
dec
das
cwtl
mov
inc
lret
inc
popf
enter
sub
dec
mov
dec
add
or
out
loope
rorl
mov
cmp
fdivl
or
data16
push
and
and
or
pop
jge
dec
xchg
mov
je
cwtl
push
ret
sbb
inc
inc
mov
dec
lock
icebp
mov
daa
sbb
add
aad
mov
push
bound
fisubrl
enter
inc
lret
cli
cmpsl
xchg
outsl
jb
inc
jl
data16
mov
xchg
xor
es
stos
xchg
testl
ficompl
dec
cs
dec
cmpsl
leave
sbb
rolb
xchg
push
jb
sar
xchg
inc
lret
rorl
jmp
aad
in
inc
pop
or
jae
adc
and
stos
int3
arpl
stos
hlt
ret
into
cmp
add
push
repnz
or
dec
rorb
dec
es
sub
call
mov
or
dec
add
xor
xlat
jge
clc
inc
leave
jb
push
sbb
or
cmp
push
subl
mov
call
insl
cmpsl
movsl
push
jb
nop
dec
ja
subl
lea
insb
push
loop
add
mov
xchg
inc
add
aas
xchg
jmp
mov
sub
out
or
dec
sbb
stc
jne
push
int
aas
sub
xor
mov
cmpsb
mov
add
sti
mov
pop
sbb
inc
adc
mov
ss
sbb
or
and
dec
lcall
sbb
jb
shlb
bound
leave
insl
xor
adc
fcompl
stos
jecxz
lods
call
rorb
xor
inc
mov
ret
xor
and
arpl
jnp
rclb
fnstcw
lds
or
into
leave
mov
notl
negl
fildll
jbe
pop
dec
add
pop
orl
push
sarb
ja
mov
ljmp
pop
dec
hlt
aaa
out
movsb
lods
dec
idivl
sub
jae
dec
inc
flds
test
cmp
fwait
and
pusha
push
or
ja
mov
cld
and
jne
jl
xor
inc
lret
jl
out
inc
pop
insl
in
imull
mov
xor
sbb
fisubl
nop
mov
mov
mov
int
out
adc
and
ss
data16
leave
inc
aaa
mov
lret
ds
outsl
clc
adc
fldt
pusha
inc
xor
or
in
mov
imul
dec
rol
or
loopne
inc
ljmp
jle
loope
mov
fimull
sub
int
rcll
or
cmp
lcall
pop
push
cmp
out
into
loopne
sti
sbb
push
mov
jo
pusha
jg
sbbb
push
xor
std
xchg
lock
mov
push
arpl
test
dec
xor
mov
cmp
mov
mov
enter
hlt
test
jmp
mov
sub
stos
das
adc
xchg
push
scas
out
loopne
adc
mov
sub
rcr
dec
inc
lahf
sub
add
std
loopne
aas
pop
rorl
jo
lods
outsb
mov
fbld
pop
jno
lds
loope
insb
jnp
ret
push
xor
add
jecxz
xor
clc
mov
enter
outsl
jno
hlt
test
sahf
push
adc
sub
lock
push
inc
repz
and
dec
shrd
pop
mov
cmpsb
sub
in
push
fmull
mov
fnstcw
dec
push
sbb
push
dec
sbb
outsb
clc
dec
and
xchg
or
gs
add
cmpsl
mov
inc
dec
jp
jns
inc
jecxz
loop
adc
jnp
cmp
in
insl
outsb
and
outsl
inc
push
outsl
fsqrt
cmpsb
push
fwait
stos
push
lcall
jmp
test
sub
push
dec
scas
adc
test
xchg
push
cmp
pushf
push
push
cmpsl
inc
fwait
xor
adc
clc
mov
or
mov
or
mov
cmp
lds
iret
decl
dec
adc
xchg
das
sub
sub
scas
push
lcall
inc
ss
shlb
negl
pusha
pop
sub
imul
sub
mov
or
out
push
push
int3
and
ljmp
push
mov
sub
cmp
lods
mov
dec
daa
decb
nop
sti
out
xorl
pop
cli
xchg
mov
call
rol
scas
or
dec
xchg
xchg
cld
xchg
lret
push
xor
lea
rsqrtps
or
rol
ljmp
jnp
xorl
stos
lods
jb
and
push
loop
out
shrb
xchg
sub
orb
and
leave
icebp
mov
mov
inc
sub
jae
sub
xlat
dec
sub
iret
cwtl
sub
in
stos
out
mov
mov
mov
mov
aaa
rcr
mov
stos
dec
jg
mov
pushf
xor
cmp
sbb
es
int3
icebp
adc
mov
das
or
movsb
insl
icebp
xor
mov
dec
mov
out
mov
xor
add
outsl
test
sub
into
push
xor
pushf
jg
aaa
dec
in
fistl
add
mov
adc
sub
dec
call
ja
add
mov
lods
lods
inc
adc
sub
in
mov
repnz
ljmp
push
mov
xchg
popf
xchg
pop
sub
pop
xchg
xor
fldenv
xchg
jae
pop
mov
inc
clc
jne
pop
add
out
cmc
jno
pop
jge
mov
scas
ret
sbb
jnp
xor
dec
xor
and
push
and
adc
sbb
xchg
stos
dec
push
or
cld
imul
pop
pop
outsl
in
mov
xchg
jmp
mov
inc
add
das
fidivrl
add
test
pushf
mov
or
push
xor
mov
leave
adc
cmp
in
mov
dec
pop
pop
jo
stos
push
outsb
dec
adc
xor
testb
loopne
add
aad
fcmovnb
scas
fdivrl
int3
xor
fadds
sub
sub
sarl
sub
hlt
sub
or
leave
test
scas
imul
adc
insb
popl
mov
and
fwait
jmp
mov
fildl
int3
pop
push
loope
cmp
outsb
mov
cmp
sub
and
sti
into
int3
adc
sbbl
arpl
imul
sbb
sarb
imul
mov
aam
arpl
std
decb
mov
sti
sbb
inc
xor
add
xor
add
xor
stos
fnsave
or
mov
sub
rcrb
sub
mov
mov
inc
rclb
mov
stc
xchg
jns
iret
mov
lcall
ret
int3
add
inc
dec
jp
ret
in
mov
lds
arpl
cmp
adc
mov
leave
sub
addr16
dec
add
in
mov
and
jns
jns
mov
dec
xchg
nop
or
cmc
jmp
xchg
std
xor
add
in
mov
cmp
orl
imul
shlb
sbb
cmp
rep
cmp
out
test
cmp
adc
dec
pop
lds
sbb
inc
rcrl
pop
fimull
cmp
or
inc
mov
mov
add
mov
ror
cmp
push
out
add
xchg
push
pop
test
sub
stos
or
aam
mov
cmp
or
sub
add
aas
sbb
pop
dec
and
pop
dec
lret
push
or
jbe
adc
or
cmc
xchg
in
pop
inc
aas
fsubr
dec
dec
or
iret
movsb
mov
pop
pushl
dec
lret
jp
loop
mov
fcmovnbe
sbb
pop
or
lods
mov
pop
add
sub
pushf
loop
shll
in
fadd
fadds
push
aaa
sbb
mov
rorb
inc
andl
stos
jle
pop
dec
pop
test
loopne
stc
jl
push
adc
je
loop
stos
inc
in
xor
outsl
xchg
dec
mov
push
test
cmpsb
mov
das
sbbl
pusha
jecxz
gs
jg
and
dec
movsb
or
or
out
or
enter
push
cmpsl
cmp
jno
push
aam
dec
mov
ror
dec
mov
pop
dec
push
inc
cmp
or
flds
sub
inc
mov
shll
push
pop
cmp
or
mov
sub
call
cmp
insl
ret
stos
scas
mov
add
mov
xchg
dec
pop
mov
and
mov
lcall
mov
sub
push
fmul
stos
ja
shl
or
daa
adc
pop
vmovq
or
sub
dec
xchg
cltd
add
repnz
inc
pop
push
mov
dec
sbb
mov
add
sub
jmp
pop
mov
cmp
dec
std
dec
inc
js
pop
out
or
aam
fs
pop
sbb
addb
scas
test
mov
and
lds
fdivrl
insb
fldt
jae
mov
push
inc
test
ficomps
mov
lret
sbb
and
addr16
pushf
inc
loope
sbb
push
dec
lret
sbb
or
je
imul
dec
mov
pusha
add
ficoms
test
sub
add
adc
pop
cld
jns
les
pop
and
stos
pop
adc
int3
repnz
sbb
aam
jns
inc
aam
jns
arpl
decb
add
sahf
rcrb
into
fwait
rcr
icebp
lds
je
pop
mov
into
adc
sub
cmpsb
mov
jmp
push
out
lret
sti
loopne
sahf
adc
mov
aaa
leave
test
push
pop
mov
test
icebp
fmull
cltd
outsb
aam
mov
jne
imul
mov
add
mov
shrl
mov
call
popa
fwait
pop
insl
ret
rclb
bound
mov
bound
icebp
shr
cmp
int3
call
push
mov
lods
into
cmp
cli
push
in
adc
jnp
sbb
outsl
and
test
adc
xor
mov
sbb
repnz
lret
add
pushf
cmovge
or
push
bnd
sub
jns
xchg
or
pop
mov
and
scas
sti
xchg
shl
icebp
mov
jecxz
and
and
sub
cwtl
lods
add
inc
cmp
orb
pusha
scas
xchg
pop
mul
pop
enter
mov
cmpsb
inc
mov
in
add
mov
div
lods
jae
in
cmpsl
or
sbb
fnstsw
lods
hlt
dec
jbe
ss
imul
cmovae
cmp
data16
fwait
xor
inc
clc
cltd
frstor
and
jnp
dec
faddp
cmp
subb
test
ds
lret
cmp
pop
hlt
sbb
sub
popa
frstor
ja
in
fst
dec
pop
cmc
push
mov
xchg
fdivl
sub
icebp
fdiv
leave
push
mov
lahf
cld
dec
add
inc
cmpl
bound
fincstp
cmpsl
mov
jecxz
into
or
fld
mov
jmp
test
adc
mov
out
sub
dec
test
lret
je
jmp
xchg
sbb
dec
jecxz
test
sahf
scas
and
movsb
or
dec
or
mov
sub
mov
enter
mov
sub
push
scas
and
dec
jne
sbb
mov
mov
add
add
into
rclb
insb
sarl
adc
jne
push
mov
testb
sbb
out
mov
out
imul
cmp
mov
mov
adc
out
adc
out
xchg
inc
out
lret
mov
or
inc
mov
push
sub
mov
addr16
rcrb
pop
pushf
sub
in
or
les
or
push
sbb
add
add
pop
jnp
aad
hlt
and
inc
inc
lea
add
lock
cmp
mov
insl
push
imul
int3
js
insb
sbb
in
mov
out
cmp
ss
mov
inc
fnstsw
sbb
fcoms
xor
sub
jmp
leave
jmp
mov
das
sub
xchg
shrl
sub
adc
popa
or
dec
lds
and
mov
scas
insb
xlat
dec
sub
push
sub
pop
adc
leave
shrb
test
lret
or
enter
jg
mov
pop
push
cltd
shrb
inc
mov
stos
inc
cs
icebp
insb
je
pop
rol
arpl
push
cltd
and
and
insl
daa
out
jnp
xchg
sub
push
js
mov
outsl
jg
ja
outsb
orb
sub
repz
pop
lret
in
adc
adc
lret
aaa
sbbb
in
xor
out
push
sub
dec
out
les
cmp
dec
adc
in
je
fsubl
jno
stos
js
pop
jnp
mov
mov
or
add
stos
inc
out
test
dec
addr16
sub
sub
sub
fldl
xchg
shll
xchg
insl
pushf
rolb
fs
cs
clc
mov
movsb
pop
dec
push
lea
jg
dec
push
mov
jl
add
fsub
push
dec
mov
fucomip
inc
faddl
sub
mov
mov
and
insl
test
add
jle
imul
jo
xchg
dec
mov
adc
lds
subl
jl
dec
testb
lds
push
int
outsl
jl
sub
insl
mov
xor
stos
mov
jne
add
rcl
pushf
lds
xchg
rorl
sub
pop
call
dec
inc
mov
cli
mov
xlat
push
pop
out
outsl
pop
fadds
loop
repz
mov
out
outsb
dec
xor
leave
pop
push
addb
shrl
mov
dec
dec
sbb
test
jb
push
shlb
adc
shrl
add
clc
inc
shll
out
jp
and
stos
pop
test
out
dec
and
mov
pop
mov
decb
sar
imull
push
test
test
mov
add
sub
add
ds
or
hlt
xor
lret
inc
jbe
mov
in
xchg
inc
xor
daa
int3
ja
inc
dec
dec
mov
cwtl
mov
dec
push
roll
rcl
out
shll
dec
fmuls
xchg
mov
add
mov
sub
les
mov
ds
push
lds
mov
or
or
lret
ret
sub
repz
inc
insb
cmp
inc
in
lds
or
mov
sub
pushf
sub
pusha
xchg
insl
ret
cmp
inc
mov
sub
scas
fldcw
mov
dec
loope
push
in
add
leave
in
push
jbe
mov
inc
xorb
cmpsl
mov
xor
mov
icebp
insl
dec
jb
data16
out
jo
ret
sub
setg
arpl
cld
rol
mov
popa
pushf
push
insl
add
rorb
cmpsl
scas
and
xchg
pop
adc
jle
inc
mov
mov
fs
scas
sbb
pushf
call
mov
cmp
lock
inc
es
xchg
or
adc
imul
jge
dec
cli
std
mull
mov
lahf
cmpb
iret
cmp
cmp
call
rorb
pop
xor
inc
push
ljmp
push
fs
mov
sub
xlat
mov
and
lods
jmp
in
mov
inc
jecxz
mov
mov
dec
cs
stos
jg
enter
ds
push
sbb
loop
fistl
and
mov
in
push
jnp
adc
dec
add
int3
xchg
daa
mov
pop
adc
js
shl
js
mov
lods
cmp
leavew
xlat
pushf
push
int3
push
std
imul
rcl
inc
cmp
pop
in
js
pusha
loop
inc
std
cli
xor
rcrl
sub
rcrb
push
testl
cmp
shrl
or
inc
jge
icebp
dec
adc
dec
push
decl
cmp
negb
fildll
inc
dec
insb
mov
jb,pt
shll
rorl
adc
sub
or
cmc
cli
or
pop
imul
dec
sbb
test
addl
push
inc
push
add
mov
dec
add
sarb
popa
xorb
cmp
mov
add
sub
jp
sub
mov
lds
push
inc
adc
jbe
push
jb
shr
sti
aas
popa
dec
int3
addb
aas
js
pop
push
sarb
cmpb
in
movsl
rol
inc
cltd
add
cmp
mov
mov
pop
nop
cmp
loope
xor
cltd
add
adc
sbb
push
sarl
push
push
in
shl
arpl
rorl
in
sub
inc
js
xor
inc
jg
cmp
inc
xchg
cmp
or
or
insb
int
inc
and
test
xor
mov
bound
insl
jno
cmpb
push
repz
dec
stos
mov
repz
fsts
push
pop
imul
enter
or
outsb
dec
mov
mov
pushf
in
push
loope
ret
add
dec
sahf
fadds
flds
mov
bound
add
or
decl
mov
or
cmpsl
pop
pop
mov
adc
jae
pop
shlb
xchg
jbe
ljmp
or
lods
sub
or
outsl
lods
inc
int3
xor
inc
sub
add
push
fisttps
outsl
dec
inc
fildl
mov
ja
rcl
inc
pop
dec
add
cltd
push
in
sub
stos
mov
cmpsb
rcll
sbb
test
push
jnp
dec
les
or
sbb
jnp
push
cmp
dec
add
sub
in
add
mov
sub
aad
loop
sub
jmp
or
add
pop
dec
shll
push
jecxz
dec
mov
mov
dec
test
or
popa
xor
pop
pop
sub
mov
orl
push
lret
loope
fnstsw
add
sub
test
and
mull
xchg
xor
add
jmp
test
aam
std
les
sbb
sub
fldt
push
cwtl
jo
fsubl
cmp
repnz
sbb
stos
fcomp
sub
rorb
cmp
addr16
les
mov
jp
int3
sub
je
jecxz
cmp
xchg
insl
fidivrs
lret
dec
outsb
xchg
in
add
enter
add
test
jmp
je
pop
mov
fiaddl
movsl
or
xchg
leave
jmp
lds
xchg
or
push
cmp
in
jl
xchg
test
sbb
lret
in
push
mov
cmp
mov
popa
pop
mov
sbb
inc
aas
cld
test
and
or
cmp
xor
push
sub
das
or
adc
add
adc
and
pusha
mov
enter
jbe
mov
or
add
jb
mov
sbb
inc
stc
or
out
jbe
and
pop
cmp
mov
mov
out
jecxz
into
shrl
inc
int
in
dec
loopne
push
push
mov
mov
clc
sti
sub
jmp
add
adc
lret
mov
and
enter
sub
das
cltd
shrl
sahf
inc
push
stc
sub
push
rol
aam
push
dec
pop
sub
ret
aad
ficomps
cltd
ret
push
dec
pop
cltd
loope
sub
sub
jno
inc
popf
fucomp
lods
addr16
jl
dec
ret
sub
leave
pop
fsubl
and
rorb
or
sbb
push
loope
jmp
in
out
bnd
dec
mov
inc
xor
iret
mov
add
mov
push
add
adc
pop
jne
test
jns
les
jmp
lret
dec
test
js
sbb
inc
rorl
push
outsb
int3
pushf
int
fnstenv
jecxz
int
sbb
dec
sbb
sbb
arpl
pop
lret
cmp
or
mov
fwait
xor
xchg
out
dec
dec
imul
push
movsl
pop
fsubl
clc
jo
ret
xchg
jo
aaa
pop
sbb
mov
sub
ret
mov
insl
sbb
push
xor
out
mov
stc
popw
mov
cmp
stos
imul
and
jnp
push
cli
mov
mov
xchg
mov
lret
inc
xor
std
imul
std
mov
and
mov
stc
adc
jae
add
dec
je
push
pop
pusha
clc
aaa
lods
inc
adcb
stc
adc
jae
arpl
jno
lret
aam
pmovmskb
mov
sbb
push
icebp
mov
or
jnp
cmpsl
mov
js
adc
mov
test
cmpsl
loopne
rcr
cmp
sar
mov
add
stos
fmuls
iret
mov
lret
add
jle
xchg
dec
dec
inc
pop
arpl
loopne
jne
sub
cld
mov
icebp
adc
setb
jno
dec
stos
cmp
ja
jecxz
cli
inc
adc
mov
cltd
pop
mov
xlat
and
push
add
int
ljmp
inc
ja
repnz
lds
cmc
push
clc
dec
orl
or
mov
insb
sub
xor
mov
sub
test
pop
int
dec
jecxz
outsb
in
test
out
in
dec
push
call
sbb
xor
cmpsl
sub
rolb
xlat
xor
ss
lds
push
mov
lds
add
jmp
mov
sub
xor
ror
xor
mov
pop
adc
fildl
and
push
and
fptan
jg
aad
mov
arpl
sahf
rorb
stos
test
mov
xchg
or
cmp
orl
sub
dec
cmpsl
testl
adc
jge
notb
shll
cmp
pop
adc
sub
out
inc
adc
orl
jbe
pop
mov
cltd
jno
ret
mov
ss
lods
push
push
dec
mov
mov
leave
cmp
dec
int
sub
dec
rcll
nop
andl
inc
mov
push
lock
mov
dec
or
stos
pop
pop
mov
jp
outsb
sub
mov
xor
mov
xchg
sub
xchg
sub
test
xchg
sub
and
daa
std
popa
insb
mov
or
xor
sbb
or
lcall
xchg
or
in
lret
push
jle
leave
insl
in
xchg
add
and
jp
sub
and
pushf
mov
adc
pop
cmp
add
jbe
pop
mov
jne
std
cmpsb
or
and
ljmp
aam
or
enter
pop
lret
push
mov
test
les
or
jns
rcrl
cmp
stc
push
inc
mov
add
inc
push
mov
push
jp
fsubs
pop
rorb
out
mov
push
xorl
push
sub
mov
pop
mov
or
add
jmp
loope
arpl
aam
roll
shlb
xor
or
decb
fldenv
cmc
sub
insl
jno
pop
stc
jmp
popa
jecxz
test
fldenv
hlt
jae
pop
test
and
inc
cmpsb
in
mov
cli
dec
dec
lahf
bound
cld
andb
bound
hlt
test
fldenv
jns
std
inc
shrb
scas
iret
push
lods
mov
std
flds
or
sbb
cmp
mov
jo
and
jmp
mov
xor
push
insl
aas
dec
mov
push
stos
orb
cmp
sbb
add
or
out
xchg
inc
imul
push
adcb
cwtl
lock
push
lds
dec
jbe
and
mov
add
outsl
push
inc
bound
les
push
xchg
pop
inc
in
data16
fdivrl
sbb
pop
jo
dec
or
cmp
xor
mov
xchg
push
out
nop
mov
xor
inc
sbb
sbb
mov
xchg
jbe
hlt
lds
inc
inc
sarl
bswap
pop
stos
int3
ds
push
fcmovnu
jl
jbe
xor
ja
stos
in
lea
scas
pushf
or
stos
shlb
sbb
xchg
dec
mov
inc
cmp
cmp
stc
push
jmp
mov
dec
mov
mov
incl
ficompl
pushf
cmp
and
lds
ja
mov
xchg
xchg
mov
xchg
rorl
mov
stc
push
mov
popf
and
imul
dec
je
jnp
jmp
sbb
add
ljmp
sub
fwait
lahf
lods
sbb
loop
fists
enter
pop
sahf
push
add
bound
fwait
mov
mov
outsl
add
fnstsw
or
cmp
sbbb
jmp
mov
sub
push
xlat
in
sbb
and
shrl
cli
or
sbb
cmp
jmp
cltd
adc
ret
test
mov
dec
push
cmp
sub
nop
xorb
leave
cmp
sbb
dec
out
xor
daa
adc
mov
jns
lret
shll
pop
je
inc
out
push
insl
sub
push
mov
les
repz
insb
sub
das
push
aaa
test
mov
and
pushw
and
icebp
dec
aad
jmp
pusha
ljmp
shll
mov
stos
test
inc
mov
lods
xchg
sbb
mov
dec
dec
dec
jmp
mov
cs
rclb
nop
adc
xchg
add
imul
mov
cmp
and
or
sti
and
ss
inc
aam
loopne
out
scas
xor
mov
mov
sarl
lock
mov
adcl
xchg
push
dec
push
dec
adc
add
inc
cmp
outsb
pop
mov
sbb
popl
fstpt
pop
fsts
repnz
fcomi
jb
cmpsb
sbb
subb
add
mov
inc
fsubr
loopne
jnp
loopne
pop
aaa
push
push
ret
das
into
adc
lock
mov
dec
mov
cmp
pop
test
notb
dec
mov
jecxz
out
repnz
lahf
int
daa
into
jecxz
repz
scas
out
incb
movsb
and
dec
lahf
cmpsb
andb
sar
sbb
sbb
jmp
fisttpl
imul
inc
sub
ja
std
lahf
jp
into
add
or
mov
jecxz
adc
loopne
lds
idiv
lock
mov
xchg
cmpsl
xchg
clc
int
and
fwait
pusha
mov
bound
shl
jb
mov
cmp
mov
adc
arpl
hlt
or
inc
mov
aaa
leave
or
les
popf
dec
add
push
and
mov
out
inc
sbb
lock
data16
dec
cs
xor
dec
adc
hlt
pop
dec
dec
or
gs
sbb
jbe
add
clc
xor
mov
out
mov
push
orl
imul
mov
out
mul
sub
cmp
lahf
pop
outsb
das
inc
push
fisttpl
xchg
dec
icebp
inc
pop
xor
cmp
loop
push
imul
adc
fisttps
imul
push
fists
scas
sbb
in
jg
mov
or
push
push
pop
fld
mov
test
mov
leave
sbb
inc
push
pop
lods
dec
xchg
loopne
push
ret
pop
xchg
and
insb
pop
insl
cmpsl
push
mov
adc
aaa
dec
mov
xchg
je
scas
aas
dec
mov
js
aam
andb
out
or
test
sub
gs
jb
mov
push
add
sub
mov
push
pop
in
mov
pusha
or
xchg
pop
add
js
scas
sub
inc
or
jle
pop
js
lret
rorb
jnp
pop
ret
push
into
xchg
lret
inc
cmp
mov
adc
bswap
pusha
into
and
xor
iret
sbb
sbbl
adc
mov
subb
and
das
aaa
add
pop
mov
inc
imul
fdivrs
jb
dec
xor
fsubl
adc
mulb
not
cmp
and
jge
xchg
inc
test
in
jmp
movl
es
and
mov
scas
iret
cli
jecxz
cmp
or
out
andb
dec
ja
mov
pop
or
in
push
das
int3
xor
add
and
and
mov
xlat
xchg
imul
js
fistpl
shrl
loopne
cmp
sub
pushf
mov
jno
lret
clc
je
ss
pop
stc
pop
push
adc
inc
cmp
fs
adc
mov
pop
inc
lret
cmp
aam
pop
mov
mov
lcallw
and
lods
mov
out
pop
vpavgw
movsb
or
dec
clc
dec
cmp
out
adc
pop
inc
ds
xchg
xchg
inc
ds
ss
push
cld
pop
js
enter
or
sti
leave
push
cmp
cwtl
add
xlat
imul
or
test
mov
adc
pop
in
mov
dec
sub
inc
xor
shll
jmp
cmp
mov
mov
sbb
dec
push
call
enter
and
and
mov
sbb
idivl
stc
xor
mov
inc
mov
mov
repz
mov
and
jp
jecxz
or
push
mov
repnz
jl
jae
or
push
ljmp
icebp
subl
sub
into
leave
les
dec
fwait
sub
dec
adc
dec
jmp
xchg
nop
pop
inc
jae
sbb
push
push
enter
shlb
fwait
xchg
outsl
pusha
enter
xchg
bound
inc
sbb
fwait
addb
mov
pop
add
dec
cli
dec
pop
loopne
std
mov
xor
popa
rorl
mov
mov
xchg
inc
jge
stos
js
int
inc
insb
or
ficoms
mov
cwtl
repz
push
adc
wrmsr
add
leave
movsb
push
or
pushf
jae
loope
lds
sub
enter
mov
adc
add
inc
mov
add
orb
pop
xchg
loop
dec
mov
xor
flds
lret
test
lods
dec
scas
andl
aad
lret
cmp
insb
xor
sub
inc
loope
mov
fsubrs
shll
dec
test
adc
push
xor
xor
inc
cmp
xor
sub
push
push
iret
hlt
or
sub
stos
insl
lret
dec
stos
jo
pop
daa
dec
sub
mov
shrl
icebp
mov
sbbl
arpl
sub
xchg
lret
or
lods
dec
mov
gs
fistl
mov
test
xor
in
cmp
mov
push
add
mov
mov
jecxz
push
repnz
aad
out
insb
lods
sub
dec
sbb
test
or
fists
ret
fdivrs
frstor
mov
mov
dec
loop
ja
xor
add
lret
leave
dec
push
nop
mov
pop
test
negl
out
add
sub
popf
dec
sub
sbb
inc
insl
inc
add
pop
adc
dec
fstpl
lret
push
outsl
bound
jne
movsb
rol
mov
adc
mov
add
mov
xchg
stc
inc
xor
push
lods
cmpsb
xlat
and
inc
dec
ret
lret
insl
imulb
mov
sub
je
leave
dec
sub
lds
stos
mov
sub
in
adc
jae
xor
ljmp
js
hlt
aaa
adc
mov
jl
ret
cltd
bound
mov
sti
mov
lods
in
mov
dec
push
xor
push
pushl
fisttpll
and
sbb
rep
adcb
fldenv
ja
dec
adc
lods
outsl
mov
fmuls
cmpsb
sbb
out
xor
bound
sub
xchg
int3
aad
pop
and
xor
flds
inc
adc
mov
mov
rorb
inc
add
pop
cmp
lcall
and
andb
xor
insl
mov
popf
xor
outsb
int3
pop
leave
mov
inc
cmp
pop
enter
xor
into
push
cmp
loopne
sub
aas
nop
xchg
jmp
push
lcall
mov
inc
mov
cmp
xchg
xchg
or
mov
mov
sbb
sub
cmpsb
leave
shll
hlt
sbb
push
fists
push
int
in
movsl
inc
outsl
stos
dec
sahf
sub
dec
jno
mov
popf
das
xor
add
outsl
addb
popl
int
mov
and
cmp
jmp
jbe
negb
jl
adcl
int3
or
out
ret
sub
ret
push
fwait
cmp
sbb
scas
ror
popf
jae
add
sub
add
adc
sub
aad
mov
lret
test
in
notl
fwait
or
or
ret
inc
adc
pop
aam
cwtl
clc
lods
dec
addl
or
cmp
jbe
sbb
pusha
out
negb
pop
enter
or
jbe
mov
ret
rol
xchg
imul
dec
daa
xor
jbe
mov
inc
and
test
and
jl
mov
clc
in
sbb
dec
aas
dec
hlt
std
rcrl
xchg
fstps
mov
jmp
adc
imul
aas
fprem
mov
leave
pusha
cmp
loope
pop
jge
dec
adcl
movl
movl
out
ror
pop
dec
inc
add
cmp
push
pop
or
mov
jmp
jecxz
stc
sbb
lahf
dec
xorb
pop
inc
push
out
jge
jbe
inc
jnp
push
pop
das
sarl
dec
cmp
add
mov
jl
sbb
push
pop
mov
cltd
mov
jle
sbb
incb
idivl
jg
sub
jo
imul
rcll
sarl
mov
adc
lret
mov
pushf
mov
and
adcl
incb
dec
mov
inc
xchg
cwtl
inc
fisubs
inc
fistps
loopne
xor
std
frstor
stc
sahf
and
sbb
inc
fiadds
push
fldcw
in
inc
inc
sub
movsb
daa
mov
popf
sahf
xchg
add
push
test
fsubp
xchg
mov
jl
lret
jecxz
xor
roll
sub
xchg
or
leave
arpl
mov
cmpsl
mov
pop
jnp
mov
adc
mov
dec
push
ret
jg
pop
rorl
push
iret
cmp
inc
pop
cmp
push
dec
cltd
loop
pop
sti
pop
cmp
mov
loop
mull
dec
adc
ret
inc
sub
jno
cmp
inc
pop
adc
cmp
push
shlb
out
test
sbb
jne
movsb
add
mov
shrl
lret
imul
stc
imul
xlat
cmp
sbb
andl
mov
and
je
and
lret
divl
sub
hlt
and
das
dec
out
hlt
sub
xchg
fsts
pop
jle
xlat
sub
js
dec
push
test
shll
push
insl
aas
mov
sbb
xabort
mov
pop
xor
lahf
addb
hlt
xor
int3
repz
int
add
mov
cmp
cmp
mov
enter
inc
pop
and
push
adc
pop
fstpt
xor
in
leave
scas
rcll
push
loopne
addr16
jbe
jg
xchg
aaa
out
inc
lods
mov
addr16
pop
imul
jbe
cwtl
shll
outsl
cmc
xor
popa
arpl
clc
mov
dec
mov
push
inc
jmp
push
sub
mov
shl
mov
mov
push
std
stos
ficoms
lret
sbb
lret
clc
add
adc
lea
fisttpll
mov
inc
pop
mov
mov
icebp
pop
sbb
loope
push
aad
into
pop
mov
test
inc
add
hlt
fbstp
cmpsl
call
jecxz
sbb
rcl
pop
mov
lods
or
mov
mov
imul
rorl
fcmovnb
xor
cwtl
add
sbb
add
jae
es
movsb
sbb
sbb
mov
call
lahf
mov
in
ret
cltd
pusha
clc
iret
jecxz
cld
inc
mov
mov
cmp
sbb
or
imul
sub
addr16
mov
out
sub
lock
cmp
inc
in
insl
mov
dec
pop
cmp
fcomps
fnsave
push
outsl
add
lret
inc
mov
pop
shl
or
cmp
leave
and
fstpl
xor
mov
xlat
mov
xor
and
shll
add
and
pop
sbb
add
xchg
or
sbb
inc
or
push
insb
loopne
aaa
xchg
add
out
insl
out
leave
hlt
adc
fs
mov
stos
out
mov
ret
or
orb
cmc
mov
js
dec
or
lods
cmp
adc
sub
or
loope
mov
lret
inc
fnstenv
or
lods
mov
inc
pop
mov
dec
xlat
sahf
push
push
rorl
outsl
in
popf
sti
repz
sbb
or
insl
or
data16
jo
loope
mov
sbb
inc
das
sub
andb
sub
fcmovu
and
rcr
fwait
dec
sti
pop
fucom
push
cmc
jecxz
cwtl
push
add
dec
js
out
xor
push
ret
jecxz
test
movntq
dec
out
lret
xchg
xchg
call
fstps
test
mov
add
xchg
clc
decb
aad
int
cmp
aas
sbb
xchg
mov
imul
inc
dec
clc
int3
leave
inc
pusha
jmp
sub
and
lods
adc
push
icebp
jmp
sti
popa
or
adc
bound
and
mov
je
fsubs
test
pop
lds
enter
data16
or
mov
je
jb
or
xor
mov
cmc
inc
jmp
inc
or
gs
sub
leave
pop
cmpl
pop
mov
stc
testb
adc
cs
dec
and
xor
xchg
jl
add
sbb
pop
xor
jns
or
add
hlt
addb
dec
push
sbb
xchg
cmpsl
shrl
ror
lret
sbb
mov
fwait
and
add
push
push
cltd
fiadds
or
pop
movsl
aas
lret
sbb
sub
out
and
aaa
movsl
ljmp
adc
icebp
sti
shl
adc
shll
sbb
sarb
adc
pusha
rcrl
jo
mov
cmp
cld
subb
adc
lahf
push
xor
dec
cltd
stos
lods
inc
jmp
sarb
pop
pop
lods
aaa
leave
xchg
mov
push
pop
test
movsl
sub
inc
pop
ret
xchg
dec
add
insl
and
roll
sbb
jns
test
xchg
andl
jb
push
mov
fldcw
lret
inc
xorb
lret
lret
push
sub
dec
mov
std
jg
xor
mov
imul
loopne
int
jp
js
hlt
loope
push
or
in
add
push
cmp
int
mov
or
inc
das
mov
scas
mov
das
cltd
lods
fmul
outsl
xor
sub
ret
lds
es
jmp
or
add
scas
sbb
insl
inc
rcr
pushf
popl
dec
adc
hlt
cmc
rorl
dec
cmp
hlt
sub
repnz
cwtl
call
aam
ret
lret
xchg
push
loopne
in
push
jmp
cmp
or
inc
xchg
cld
mov
outsl
cmc
add
shrl
cld
aaa
sahf
cld
call
xor
sub
xchg
rcrb
push
dec
popf
or
stos
int3
aam
inc
push
jmp
insl
push
cmp
xor
mov
push
insl
lret
jae
imul
and
shrl
mov
sbb
xor
shl
aam
ss
in
lods
jbe
xor
pop
dec
iret
ror
push
cmpsl
lds
mov
mov
mov
and
jno
sub
js
adc
sbb
cli
xchg
mov
sub
sub
push
sbb
or
imul
or
mov
xor
xchg
in
mov
cmp
cmp
xor
flds
outsl
cmp
cwtl
mov
mov
jbe
push
xor
out
lret
movsb
and
jmp
les
sbb
jne,pt
mov
jns
dec
in
fst
test
popa
test
push
hlt
push
dec
ds
pop
stos
xor
inc
arpl
dec
push
push
sub
jo
add
add
pop
xchg
push
lret
sahf
imul
cmp
adc
jmp
rorb
arpl
enter
int
int3
fimuls
push
push
cmp
lahf
jbe
xor
push
scas
sbb
imul
mov
mov
sub
push
xlat
pop
fldl
es
fwait
ret
pushf
enter
gs
cmp
dec
add
dec
jbe
pop
sub
cmp
jmp
lea
adc
test
test
sub
mov
out
xor
lods
inc
cmpsb
xchg
pop
jmp
jbe
adc
enter
add
loope
in
or
leave
int
lock
arpl
lods
mov
sahf
out
fstp
sbb
sbb
pop
dec
push
mov
mov
shrl
pop
cmp
mov
jp
xor
xor
mov
adc
rcrb
push
push
pop
into
ret
ret
pop
ret
cltd
jbe
fcoml
lret
std
std
cmpsb
sarb
sti
jnp
sub
jmp
adc
xchg
ffree
dec
cmp
fwait
sahf
lods
dec
adc
test
mov
sbb
add
cmp
sub
fcomip
dec
dec
roll
shlb
cmp
or
sbb
leave
mov
pop
or
cmp
or
or
leave
sahf
dec
cmp
push
aas
push
push
mov
or
negl
in
adc
lods
push
int
sarl
dec
lock
xchg
cmpsl
loope
mov
cmp
xor
mov
mov
int3
lret
lods
dec
addr16
mov
movsb
jg
xchg
jg
loopne
pop
inc
push
pushf
movsl
scas
cmp
sub
clc
push
jmp
fwait
pushl
sub
ret
or
lret
insl
or
push
mov
daa
loopne
mov
mov
in
arpl
ljmp
xor
cmp
push
jge
sbb
push
out
push
aaa
fistpll
insb
nop
jmp
clc
mov
cmp
orl
mov
xchg
or
add
sbb
and
ds
pop
inc
dec
cs
sub
test
push
ja
xchg
lock
add
lods
inc
push
xor
movsl
jbe
bound
shr
lods
pusha
lret
shrb
dec
pop
in
sbb
testl
fidivrl
or
aas
sbb
sub
inc
mov
inc
sar
mov
mov
push
mov
mov
shr
pop
or
jne
mov
or
add
dec
cli
inc
push
pop
mov
out
inc
test
stos
int3
push
mov
push
rcrb
inc
cmp
inc
bound
mov
int3
cmp
iret
mov
leave
dec
dec
pop
icebp
jmp
enter
inc
or
in
push
out
push
xchg
and
in
cmp
in
xchg
insb
pop
push
cwtl
dec
js
and
xchg
and
add
jmp
sbb
call
dec
sbb
lods
inc
mov
mov
dec
sub
inc
or
dec
mov
adc
mov
ss
jnp
test
out
insl
js
mov
xor
std
dec
data16
push
clc
popf
int3
add
xlat
xor
mov
sbb
in
xchg
test
dec
xchg
insl
add
push
dec
mov
ss
into
jno
mov
imull
pusha
mov
push
rcr
dec
push
mov
inc
sub
mov
cmp
fstps
xor
popf
jo
dec
leave
shr
pop
arpl
out
and
dec
push
pop
sbb
cmc
fwait
enter
cmp
push
adc
lcall
sbb
mov
jmp
jnp
xchg
xor
pusha
mov
pop
jl
dec
aad
pop
inc
pop
aaa
dec
mov
add
adc
jmp
inc
push
push
lahf
icebp
jle
mov
and
inc
into
add
dec
add
std
or
or
sub
jecxz
xor
jmp
cmpsl
xchg
leave
icebp
fnstcw
sbb
repnz
lret
add
add
jmp
push
pop
dec
fistl
in
adc
sub
mov
pop
mov
leave
mulb
add
xor
push
mov
pop
decl
xchg
cmp
or
mov
adc
repz
add
test
cs
cli
js
add
or
push
pop
rol
jge
decl
sarb
or
adc
xchg
std
call
outsb
loopne
cmpsl
jecxz
lods
lret
adc
call
out
aaa
inc
imul
cltd
int
mov
dec
or
ja
add
push
mov
sub
dec
dec
sbb
add
adc
iret
and
outsl
mov
dec
lcall
rcrl
jmp
mov
xor
dec
or
test
movsb
and
dec
dec
repz
or
cmp
pop
xchg
sbb
imul
jns
pop
hlt
pop
mov
or
out
and
mov
inc
rolb
stos
int3
lret
ss
mov
jno
test
mov
stc
ds
push
enter
cmp
pop
in
push
push
js
sub
aas
mov
push
mov
adc
sub
mov
dec
out
xchg
dec
inc
int
bound
mov
adc
xchg
push
ret
dec
incb
loopne
ror
ss
jbe
fwait
pop
mov
sub
push
sahf
adc
jbe
dec
inc
add
inc
add
sbb
push
std
popl
push
lock
in
mov
adc
and
inc
out
fists
add
stos
xchg
dec
ror
loopne
ficompl
in
cmpsb
push
sub
roll
sub
push
sub
or
cwtl
mov
test
idivb
or
push
scas
rorb
lea
cmpsl
xchg
hlt
cmpsl
jb
mov
mov
ret
call
xchg
movl
ja
push
cmp
dec
pop
jge
loopne
mov
shll
rclb
jns
imul
incl
aad
cltd
ja
xor
call
add
xor
or
push
scas
push
jno
push
iret
mov
sahf
mov
or
cmp
das
mov
xor
pusha
cmp
dec
jl
mov
mov
xor
xlat
test
lret
dec
mov
push
fmul
and
fmuls
cmp
addr16
rol
and
add
outsb
daa
sub
xor
jge
mov
leave
dec
dec
sub
mov
xor
inc
loop
xchg
sub
jle
pop
popa
shll
mov
mov
cmpsl
repnz
enter
push
in
lds
mov
mov
dec
mov
cmp
mov
mov
mov
push
dec
dec
ljmp
mov
movsl
adc
sub
dec
in
pusha
jecxz
and
jmp
mov
insl
addr16
push
cmp
pushf
in
mov
mov
int
mov
adc
xor
inc
push
mov
mov
sub
rorb
mov
pop
lret
inc
mov
mov
clc
cld
int
lret
and
inc
cmp
rorb
sbb
lret
cmovnp
enter
and
cli
test
push
and
lods
test
or
cmp
add
sbb
out
add
sbbl
dec
dec
sbbl
inc
cmp
and
lret
int3
dec
and
inc
cmp
mov
stc
les
xchg
mov
inc
cmc
std
int3
inc
addr16
pop
ret
dec
pusha
cltd
cmp
and
xor
inc
sub
bound
dec
dec
in
adc
imul
xor
int
inc
mov
cwtl
cwtl
int
loop
mov
jmp
popf
test
pop
test
nop
imul
mov
dec
mov
cs
es
xlat
int3
xlat
adc
pop
in
mov
frstor
inc
push
add
out
lods
xchg
daa
cs
xchg
or
int
stos
lods
pop
inc
sbb
cmp
inc
sahf
lahf
jecxz
jmp
mov
cmp
sub
addr16
push
cmpsl
or
mov
icebp
addr16
pop
jge
fwait
pop
xlat
mov
mov
outsb
aas
aaa
push
xchg
jns
dec
add
psrlq
lret
fdivl
fsubrs
rolb
add
xor
pop
push
adc
out
jae
mov
xor
loop
dec
push
and
in
lret
arpl
adc
fildll
lret
mov
dec
data16
dec
pop
nop
pmaxsw
jno
int
cmpsl
aaa
mov
pop
gs
insb
jbe
iret
mov
add
pop
adc
loop
mov
sub
dec
bound
hlt
mov
sub
icebp
cmp
scas
call
loope
scas
xor
inc
mov
imul
push
out
jg
cmp
test
aad
cmp
and
ficoms
add
lods
adc
call
inc
dec
push
dec
clc
aaa
test
xchg
inc
pop
inc
and
xchg
push
in
sub
sub
push
stos
mov
inc
nop
ret
dec
stos
dec
clc
fisttpll
cltd
mov
pop
or
xchg
inc
outsl
movsb
cmpsl
imul
mov
jge
fs
mov
dec
sbb
mov
sub
jmp
push
imul
mov
clc
cmp
sub
enter
orl
imul
ret
pop
aas
cmp
push
add
cmpsb
clc
fnstsw
ret
mov
aam
sub
jp
cmp
mov
xchg
aaa
or
pop
es
inc
cmpsl
dec
mov
dec
nop
ja
loop
pop
and
cmp
xchg
or
and
push
and
cmp
cmp
push
dec
enter
jno
pop
dec
add
sub
dec
int3
sbb
aas
orl
dec
inc
jmp
add
and
mov
addl
call
push
addr16
adc
xor
mov
push
pop
mov
int3
stos
inc
xor
arpl
push
in
sti
stc
push
mov
pop
sub
sarb
mov
cmpsl
test
das
push
adc
sub
push
cmp
adc
mov
xchg
dec
mov
adc
mov
mov
insl
mov
cmpsl
stos
hlt
jmp
stos
int3
jg
add
test
andl
hlt
dec
rcll
adc
mov
adc
mov
push
mov
lods
dec
mov
aad
stos
movsb
push
and
pusha
imul
scas
movsb
sub
xchg
xor
inc
ficompl
xor
mov
ss
dec
insb
dec
add
pop
pop
rolb
adc
mov
stos
mov
mov
popf
stc
popf
mov
rcrb
ds
faddl
les
push
mov
or
dec
push
mov
sub
cmp
or
cwtl
add
enter
flds
inc
ja
or
fcoms
mull
sti
xchg
sub
or
rol
cld
rolb
inc
sbb
test
enter
imul
nop
xchg
mov
or
mov
inc
int
dec
sbb
cmp
enter
popf
cmp
or
cmp
into
mov
loopne
xor
out
mov
xchg
sub
mov
dec
dec
dec
push
scas
fwait
or
insb
sub
sbb
jb
xor
in
and
pop
stos
sub
call
insl
jne
mov
in
inc
inc
cmpsl
adc
inc
int
pop
scas
loopne
pop
xor
sub
push
out
push
scas
add
hlt
fs
sub
shrl
inc
inc
aas
cmp
sbb
testb
pop
or
jecxz
or
and
test
push
add
and
or
jae
icebp
adc
jae
pop
lods
sbb
shrb
cmp
inc
dec
sbb
popa
mov
cs
into
ljmp
and
loopne
dec
out
clc
pop
pusha
call
int3
inc
cmp
mov
dec
push
or
sarb
push
inc
dec
hlt
mov
and
ss
into
fdivrl
dec
out
lret
call
lea
sbb
sahf
movb
add
lock
cmp
push
outsl
enter
out
xchg
stos
jle
fstps
push
lods
cmpsb
daa
das
jmp
ds
pop
sbb
jmp
in
in
mov
out
jbe
repnz
xchg
push
cmovp
dec
cmp
jecxz
ret
cmp
dec
pop
sub
adc
enter
ret
pop
scas
outsb
inc
add
insb
pusha
push
push
jb
dec
xchg
push
subb
lods
adc
or
gs
aaa
or
cmpsb
adc
pop
cltd
push
sbb
sub
clc
ret
sahf
or
loope
sub
push
or
inc
adc
or
hlt
sub
dec
inc
std
lahf
lds
subb
inc
scas
fnstenv
lods
jl
pop
movsb
loope
cmp
movsb
mov
shrb
xchg
fisttps
jns
lret
stos
bound
sarl
adc
mov
xor
sbb
sub
stos
in
lahf
mov
out
lret
bound
xchg
jg
repz
mov
add
sub
push
or
iret
loopne
mov
or
dec
mov
mov
fisubl
rorb
xchg
sahf
pcmpeqd
dec
dec
out
push
cmpsl
mov
inc
clc
cld
shll
roll
mov
jge
push
mov
cmpb
adc
subl
daa
jb
or
arpl
dec
lea
sbb
sbb
dec
push
xchg
repnz
push
addr16
jnp
dec
loop
js
lret
jae
inc
icebp
out
inc
push
addl
mov
inc
lret
movsl
jnp
ja
dec
lods
ja
xor
jnp
pop
add
xor
jnp
jne
sub
insl
add
sbb
sbb
xor
pop
sbb
sahf
jnp
cltd
enter
add
and
bound
xor
lods
ss
stos
mov
jmp
adc
jns
icebp
leave
and
je
imul
add
sbb
pop
ds
sub
cld
inc
jmp
ja
push
scas
je
lret
mov
jns
xor
dec
push
jbe
sub
stc
push
data16
sqrtps
in
in
stos
lret
dec
dec
hlt
rolb
pusha
xchg
mov
and
stc
push
or
mov
xchg
es
cmp
dec
jp
out
adc
cmpsb
test
jmp
and
pop
push
call
inc
je
es
mov
fcmovnbe
out
imulb
testb
dec
loopne
cs
and
jge
jae
daa
sbb
frstor
mov
mov
std
movsb
xor
rorl
icebp
mov
inc
in
xorb
fstps
insb
insl
dec
sbb
loop
pop
cmp
in
outsl
mov
mov
movsl
sbb
sahf
loop
adc
mov
stos
adc
adc
and
add
movsb
lret
push
push
or
imul
cmp
aaa
pop
add
lods
dec
fnsave
into
adc
fucomi
xorb
jmp
flds
ja
cwtl
xchg
cmpsb
inc
xor
iret
or
and
dec
insb
adc
jne
and
iret
pop
sahf
test
test
in
or
xchg
jp
enter
ror
leave
mov
cmpsb
push
daa
arpl
xchg
jmp
lret
iret
mov
xchg
fcmovb
xchg
xor
add
aad
fmul
mov
or
inc
iret
icebp
jge
mov
out
daa
inc
add
test
mov
int
push
sub
or
mov
mov
jg
rcrl
lods
sub
pop
mov
jmp
inc
in
divb
add
push
mov
inc
dec
loopne
std
mov
ret
pop
outsb
add
pop
aam
mov
xchg
pop
rcll
insb
or
jo
xchg
clc
test
push
mov
push
incb
iret
jecxz
lret
jne
jb
push
add
aam
subl
pop
fdivr
or
sahf
or
sbb
hlt
rorb
sarl
push
sbb
mov
xor
sub
in
addr16
mov
dec
outsb
jmp
movsl
into
in
lret
outsl
sub
xor
jae
ret
pushl
dec
fimull
nop
shl
xlat
sti
shlb
mov
dec
hlt
test
in
jmp
arpl
cmp
cmpsl
cltd
imulb
arpl
jmp
jno
int
hlt
sar
sarl
fiadds
xor
and
ret
mov
xor
pop
xor
inc
sbb
add
loop
jmp
mov
ljmp
cli
inc
sub
dec
roll
add
mov
push
or
add
lret
xchg
mov
mov
or
movsb
lret
push
push
xlat
subb
popa
jnp
jge
leave
pop
mov
rcrl
ds
cmp
in
inc
leave
mov
push
sti
inc
add
inc
les
push
pushf
pushf
mov
pop
lods
xlat
xlat
inc
addr16
imul
sbb
shll
enter
dec
rol
push
xchg
testb
hlt
divl
jmp
leave
add
or
test
iret
mov
enter
mov
mov
iret
lret
mulps
adc
pop
adc
mov
inc
rcr
or
adc
xlat
mov
testl
push
loop
enter
fnstenv
sub
push
hlt
mov
js
fimuls
jmp
or
sub
cmpsb
xor
hlt
jae
pop
out
test
xor
iret
mov
into
cmp
cmpsl
or
gs
inc
dec
pop
inc
sbb
inc
hlt
fnstcw
lret
addr16
arpl
or
mov
out
mov
adc
mov
insb
pop
das
xor
pop
cmp
cltd
sbb
bound
push
inc
fldenv
cmp
mov
push
in
cmp
jg
jmp
loop
mov
or
cmpsb
fs
or
leave
aam
cmp
imul
push
sub
fs
or
adc
stc
and
pop
fstp
lods
xchg
mulb
add
stos
inc
in
adc
mov
cltd
loopne
popf
xor
stc
idivl
and
add
lock
pushl
popa
stos
into
insb
aad
lods
popf
lcall
test
push
pop
sub
int
xor
pop
adc
loope
lods
inc
call
push
xor
cmpsl
call
ret
in
mov
lret
inc
into
dec
or
cltd
add
dec
mov
jmp
enter
push
jae
std
and
add
lods
pop
or
stos
sbb
and
adc
mov
mov
and
add
dec
sub
mov
adc
shrl
lea
shrb
imul
mov
ds
inc
dec
cmp
lods
ret
divb
pop
or
roll
inc
int
call
shrl
mov
inc
nop
jge
push
sbb
out
adc
jnp
cmp
jp
mov
cmp
outsb
jecxz
loopne
dec
jecxz
lret
inc
dec
inc
jae
xchg
adc
cmp
or
pop
js
rorb
inc
sub
enter
rcr
leave
jae
shrl
add
mov
push
dec
sahf
or
in
inc
sti
push
mov
sbb
xor
out
push
in
in
dec
and
call
sub
sbb
sbb
dec
xchg
push
addr16
sbb
xchg
push
rorl
enter
jmp
lods
outsb
fdecstp
mov
sbb
pop
ss
aam
dec
pop
test
or
add
mov
adc
insl
mov
inc
int3
cmp
push
gs
pop
jmp
push
lds
stos
lret
psubsw
stos
psubsb
or
insb
int
comiss
insl
punpckhdq
sub
jp
stos
rorl
or
jbe
int3
push
sub
pop
stos
push
loop
lods
mov
int
arpl
pop
push
mov
push
mov
dec
insb
xchg
mov
adc
push
pop
popf
shlb
insb
jecxz
in
inc
mov
mov
add
inc
jl
cmpsl
sub
cld
test
pop
lret
lret
ds
dec
pop
xchg
push
xor
inc
dec
aam
in
cmpsl
pop
int
cmp
outsl
in
xor
push
jnp
dec
dec
mov
pop
out
xor
les
clc
mov
push
pushf
out
popf
fwait
dec
in
cld
mov
mov
inc
fidivrs
or
sbb
pop
dec
fstl
ret
loop
mov
daa
cmp
mov
imul
mov
lret
mov
mov
loope
fnstsw
sbb
mov
jecxz
loopne
or
jno
bound
and
pop
dec
stos
mov
cmp
or
pop
cmpsl
push
and
mov
jg
mov
add
ret
imul
leave
lret
push
xlat
call
iret
pop
fwait
or
pop
rcrl
insb
jmp
xchg
mov
jecxz
xchg
mov
lret
xchg
jle
inc
negl
rcr
popf
push
leave
mov
cmp
jp
cmp
dec
and
movsb
fadds
inc
or
cmp
imul
lahf
fwait
xchg
test
cmp
pop
jno
popa
lret
jo
enter
or
movsl
sahf
lret
insl
shlb
lcall
enter
inc
out
xchg
mov
xor
shll
insl
leave
mov
lret
insb
adc
jmp
cli
push
sub
xor
and
dec
enter
pop
and
dec
sub
ja
lret
cmp
sbb
mov
jle
lea
xchg
push
dec
sbb
aam
fstpl
repz
cmc
int
mov
inc
inc
jle
or
jns
push
cltd
orl
push
fs
xchg
jnp
gs
add
inc
or
in
xchg
sbb
movsb
pop
sub
ljmp
aaa
sub
cmpsb
dec
pop
mov
mov
aaa
pop
enter
imul
dec
test
sbb
fs
mov
add
cmp
stc
int3
push
jns
mov
scas
hlt
enter
sti
xchg
mov
xor
add
inc
lret
les
or
mov
adc
mov
dec
pop
mov
mov
mov
repz
push
or
mov
mov
test
pushf
in
sbb
inc
pop
push
pop
xor
add
lret
cmp
xor
jns
mov
nop
lret
jnp
cmp
inc
xchg
mov
xlat
clc
xor
mov
mov
sub
or
sbb
fcmove
sbb
shrb
pusha
mov
push
jmp
push
push
xbegin
int3
cmp
xor
and
or
out
icebp
add
add
and
push
mov
iret
shrb
hlt
inc
dec
sub
orl
dec
dec
or
test
mov
mov
shll
mov
push
push
adc
push
mul
daa
add
xchg
mov
in
out
repz
xchg
and
addr16
inc
cmpb
jo
cmp
or
sbb
clc
inc
or
cmp
or
ss
cmp
clc
scas
inc
aaa
push
push
faddl
mov
push
dec
jnp
push
xor
movsl
xor
xchg
mov
mov
cld
pop
and
ret
dec
mov
jne
enter
adc
inc
stc
push
xor
push
sub
dec
sub
mov
inc
and
int3
dec
je
mov
push
and
and
push
push
dec
or
lea
dec
roll
add
jmp
push
lret
addr16
xor
and
cmp
push
cltd
cmp
ret
mov
xor
mov
in
test
jmp
sub
and
xchg
aas
shll
add
push
push
adc
test
pop
push
adc
pop
jbe
inc
pop
fistpl
dec
ret
xchg
cmp
adcb
inc
cld
fisubl
dec
lea
add
and
push
out
push
dec
mov
sub
push
gs
xchg
jge
mov
pop
push
inc
out
dec
and
bt
or
mov
mov
push
mov
add
mov
lret
mov
or
dec
cwtl
insb
dec
push
lret
jmp
push
pop
xchg
iret
jp
mov
sarl
lock
lret
sti
push
jl
push
jbe
lods
stc
cmp
dec
mov
mov
adc
int3
fs
les
jl
les
jg
mov
add
pop
in
pop
cmc
lods
mov
pop
aaa
pop
dec
lcall
lds
mov
ret
or
mov
aas
jle
in
test
sbb
int
cmp
push
add
push
xor
jecxz
daa
mov
pop
mov
or
adc
adc
popf
bnd
sbb
scas
jae
pop
mov
dec
push
arpl
adc
mov
repnz
notb
push
jns
and
cwtl
inc
pop
jns
sbb
out
lods
dec
mulb
sahf
stc
push
es
rclb
clc
add
cmp
xchg
icebp
sub
xchg
lcall
nop
inc
das
or
push
and
pusha
cld
dec
inc
push
pop
adc
add
add
dec
push
sub
push
sbb
dec
insl
or
pop
or
ret
arpl
imull
shlb
arpl
push
xchg
adc
inc
lret
rcrb
xor
adc
test
dec
cmpsl
adc
cli
out
push
push
adc
jb
inc
pop
jmp
adc
inc
loopne
pop
imul
push
push
lods
icebp
cmp
iret
in
inc
dec
cmpsb
push
ljmp
sti
pop
inc
xchg
sbb
ss
popf
adc
jecxz
xlat
bound
or
movsb
loopne
test
adc
movsl
lods
xchg
mov
ljmp
or
xor
push
xchg
test
inc
jmp
out
push
mov
sub
sbb
lds
dec
xor
inc
and
xor
push
mov
cmp
lret
jmp
xchg
add
rcll
lods
and
cmp
in
sbb
xor
dec
mov
and
in
ja
xchg
notl
dec
cmovo
add
dec
call
dec
inc
sub
add
lods
jno
push
lea
cmpsl
xchg
push
orl
lds
push
sub
xchg
insl
ret
mov
push
xor
imul
pop
mov
lds
xchg
add
push
add
pop
mov
mov
inc
or
clc
insb
sub
inc
pop
stc
dec
push
cmpsb
lret
mov
mov
cmp
in
addb
rolb
inc
or
xchg
and
dec
jne
push
idivb
pop
mov
sub
sarl
jne
inc
imul
mov
popa
push
and
stc
inc
imul
xor
out
add
arpl
cmp
lret
rcll
add
fld
ds
ret
mov
test
bound
or
mov
rcl
dec
adc
inc
push
or
cmpsl
mov
lock
push
cmpsl
aas
cwtl
clc
inc
andb
hlt
mov
inc
add
or
push
shlb
inc
adc
push
scas
mov
insb
out
xchg
xor
les
adc
xor
inc
dec
cmp
or
addb
jns
popa
sub
test
cmpsl
and
sub
stos
out
jnp
cs
sub
ffreep
or
adc
fisttpll
pop
xchg
sbb
push
cwtl
xlat
sbb
lret
arpl
sti
into
cmp
cmp
xchg
aam
jmp
xor
push
out
pop
add
lret
inc
jb
adc
cltd
insl
ret
lea
mov
in
inc
imul
push
aam
add
mov
lret
xor
inc
add
lret
js
pop
xchg
pop
std
imul
cmpsb
int
loopne
setno
ret
dec
mov
sub
imul
and
dec
or
jecxz
fdivrs
lret
mov
cmp
or
imul
mov
push
mov
lret
aas
pop
out
inc
pop
imul
mov
incb
add
xchg
imul
fstps
cmc
outsl
sub
mov
out
or
out
dec
es
xor
insl
hlt
in
cs
sub
gs
lods
add
sar
ja
push
dec
std
push
cmpsl
aam
in
pop
jae
push
and
or
add
idivb
lods
hlt
ljmp
mov
xor
lahf
push
xor
lods
xchg
sti
int
dec
lds
sub
cmp
int
ds
hlt
or
fwait
subb
mov
stc
dec
or
leave
xor
mov
push
cltd
out
mov
push
outsb
pop
dec
popf
push
sub
negl
mov
imul
fstpt
fsubs
jmp
ss
jns
outsl
lret
push
lods
cmc
mov
inc
cmpsl
add
fs
cmp
sub
mov
mov
pop
mov
cmp
mov
xor
int
pop
mov
call
or
mov
sub
xchg
cwtl
cs
mov
push
adc
mull
adc
data16
jmp
pushf
lea
cmpsb
adc
int3
mov
inc
xchg
pop
push
adc
push
and
inc
add
jecxz
in
jmp
outsb
imul
mov
scas
jmp
or
dec
cmpsl
xor
pop
fiaddl
sub
pop
sub
mov
in
pushf
shrb
push
add
xor
mov
and
mov
mov
add
pop
loopne
push
push
aas
leave
cmp
inc
push
mov
enter
call
xchg
mov
mov
cmpsl
mov
lods
inc
add
mov
mov
jmp
pusha
sub
rcll
cmp
inc
add
adc
in
inc
lcall
adc
cmpsl
mov
mov
fsts
sbb
add
arpl
push
incl
cmpsl
pop
testl
dec
jo
rcrl
rcrb
and
adc
mov
inc
pop
xlat
jp
adc
out
stos
adc
mov
mov
push
mov
inc
lret
inc
fmuls
fdivs
push
stos
inc
dec
out
movsl
imul
inc
pop
mov
and
lret
and
adc
js
dec
ficoml
sub
in
dec
cmp
adc
test
testl
aad
sub
pop
lret
in
decb
dec
out
mov
out
sub
in
sahf
out
xchg
xchg
nop
lret
adc
loopne
in
andl
dec
push
lret
mul
sbb
addl
push
inc
or
clc
or
jno
daa
push
stos
cli
ljmp
push
mov
cwtl
adc
inc
iret
fistpl
add
bound
mov
pop
push
mov
repz
push
sbb
test
test
orb
sub
inc
mov
imul
and
cmp
ljmp
jg
insl
add
or
fs
and
cmpb
mov
jecxz
lods
aam
mov
mov
sub
rcrl
addl
jmp
cmpb
mov
sti
cmp
in
in
ret
sbb
inc
stos
and
dec
popf
leave
lcall
das
rdpmc
test
ja
or
pop
or
add
adc
inc
movsb
mov
adc
sbb
lahf
jnp
test
inc
loopne
andl
mov
sbb
mov
fwait
jmp
mov
push
or
sub
dec
or
int
inc
fistps
sub
sub
out
inc
sub
add
and
xchg
or
dec
and
dec
sahf
mov
cmpps
fbld
dec
mov
ret
loopne
loope
push
out
and
js
test
clc
stc
lret
fnstenv
daa
adc
jnp
call
inc
icebp
cmp
push
subb
inc
in
push
mov
lods
pop
xchg
sub
inc
adc
pushf
cs
in
jg
loopne
xchg
sub
jl
cltd
addr16
push
or
or
dec
addb
fs
rorl
pop
stc
daa
clc
ds
jmp
inc
add
mov
jns
pusha
cmpsl
adc
or
mov
pop
cmp
cmp
push
mov
xor
cwtl
push
pop
into
jo
mov
cmpsl
bound
andl
mov
fbld
sbb
jbe
mov
mov
mov
lcall
lret
and
stc
pop
roll
jg
popa
xchg
jno
test
or
add
xchg
imul
jno
add
dec
jno
sub
les
cmp
sbb
outsl
sub
push
lcall
sbb
or
xor
lds
pop
cmp
jne
xchg
dec
sub
and
fidivrs
popf
sub
dec
inc
or
pop
add
and
push
or
ret
pop
and
push
sahf
dec
pop
adc
mov
enter
sbb
popf
and
mov
hlt
movsb
orb
fbstp
xor
adc
adc
inc
inc
into
pop
loopne
pop
or
push
popf
jnp
mov
dec
push
decl
lods
jns
pop
aaa
ror
cmp
sbb
push
xor
pop
icebp
dec
clc
pusha
es
mov
not
imul
fwait
int3
lods
xchg
cmp
xor
mov
dec
add
in
xor
or
movsb
inc
gs
lret
mov
pop
and
xorl
mov
inc
xchg
add
push
cmp
repz
rclb
sub
inc
jae
and
mov
hlt
add
rcll
lret
dec
xchg
lahf
roll
int3
mov
and
cmp
dec
fidivrl
mov
popf
jp
and
or
pop
stos
jp
fldcw
xor
lock
push
fisttpll
jge
and
lret
enter
mov
pusha
fidivs
push
ret
inc
stos
lock
push
rcll
or
lods
mov
stos
push
cmp
sbb
sub
dec
add
inc
rcr
inc
jg
push
es
test
or
ljmp
mov
mov
add
out
cmp
xlat
bound
insl
inc
adc
data16
cmpsl
lret
arpl
fcomps
mov
mov
dec
mov
fstps
pop
inc
push
bound
out
adc
lds
mov
mov
jp
ljmp
pop
bound
in
dec
pop
test
jge
stos
call
les
sub
cwtl
or
mov
dec
jnp
dec
push
xchg
dec
repz
ret
in
data16
pop
jge
lods
icebp
out
pop
jp
mov
lcall
cmp
sub
push
and
fstps
push
pop
pop
loopne
jae
daa
into
xchg
pop
dec
cmp
ja
std
idivl
repnz
ret
insl
inc
lret
sub
inc
xor
push
or
pop
in
cs
and
lock
xor
mov
mov
push
movsb
cmpsl
xchg
sub
dec
push
ret
inc
pop
or
popa
inc
push
dec
xor
mov
cmp
and
sbb
or
sbb
push
sub
sbbl
rorl
inc
dec
xor
loope
clc
inc
lcall
movups
pop
and
cmp
aaa
mov
xchg
cmp
push
sub
fildl
sahf
pop
cli
lret
add
mov
push
inc
call
inc
cmp
jmp
sub
cmp
push
mov
in
jmp
inc
xchg
dec
cltd
add
push
add
mov
mov
pop
cmpsb
mov
gs
or
xchg
add
je
jbe
push
sub
pop
jnp
inc
ret
xor
ja
xor
subl
inc
push
movb
mov
shlb
push
dec
cmp
adc
push
mov
clc
mov
test
cwtl
push
rcll
pop
adc
popf
pop
xor
lcall
dec
xchg
sub
sub
sub
cmp
ret
sub
dec
out
repnz
icebp
cs
push
mov
dec
cmp
sbb
mov
and
xor
sub
sbb
sub
or
cld
lcall
aam
loopne
push
cmc
fldenv
ss
push
push
push
xchg
lret
mov
mov
inc
enter
js
arpl
xor
jmp
sbbl
ret
call
mov
call
dec
jbe
enter
shl
out
mov
lahf
data16
bound
jno
or
mov
mov
call
lock
pusha
dec
xor
shrl
dec
cmpb
sbb
or
addb
and
imul
add
imul
inc
mov
inc
cmp
loop
mov
xlat
in
push
in
and
sahf
std
inc
ret
xchg
rolb
and
loopne
push
iret
add
add
xchg
shr
push
lods
sub
inc
mov
dec
jecxz
rcll
mov
addl
inc
dec
add
int
adc
mov
cmp
cmp
xchg
into
je
loope
scas
lods
or
push
into
mov
jo
rolb
or
out
adc
xor
or
int3
push
cmp
int
or
insb
sub
addb
add
fisubrs
addr16
mov
jmp
shl
in
int
mov
adc
out
add
das
jae
mov
lods
insb
repnz
leave
add
xor
or
add
call
shll
lds
test
mov
jbe
mov
ffree
jl
jno
inc
insl
mov
lods
inc
in
inc
out
enter
jp
daa
int
or
and
mov
xchg
cmp
mov
add
fmuls
in
jae
pop
cmp
pop
cmp
push
xchg
mov
mov
psubsb
push
sbb
and
in
and
mov
pushf
pop
pop
repnz
dec
adc
pop
jo
sti
mov
lods
lahf
mov
arpl
lds
mov
testb
addr16
call
jmp
xchg
mov
mov
loopne
adc
and
movsl
aas
pop
jge
inc
lret
jge
mov
insb
es
and
add
adcb
jge
dec
mov
out
mov
lock
and
int3
xchg
jg
cmp
jb
sub
ret
mov
testb
xor
outsl
xor
mov
insl
outsb
icebp
add
ja
pop
imul
std
lods
outsl
inc
sub
inc
jmp
leave
sub
fld
or
stc
dec
inc
and
jecxz
xchg
jp
lock
inc
scas
dec
ds
insb
stos
add
shll
ret
mov
ret
sbb
addr16
loopne
cmp
jno
sbbl
lds
out
inc
add
add
hlt
out
decb
lea
aam
xchg
xchg
std
call
out
aad
mov
jle
dec
lods
fidivrl
dec
adcb
jl
push
inc
cmpsl
mov
adc
lret
arpl
xor
jle
adc
push
cmp
fistpl
jmp
push
inc
sub
sub
icebp
push
xchg
dec
xchg
out
in
push
fmull
sbb
lret
test
and
out
fidivrs
or
push
adc
mov
sbb
mov
sarl
mov
stc
jmp
xchg
cmp
sub
cmpsl
aam
stos
cmp
dec
push
pushl
pop
loope
xchg
xchg
inc
std
dec
jb
jbe
filds
int
cmpsb
adc
mov
fnstenv
gs
imul
addb
lods
cmpsl
mov
pop
hlt
popa
dec
mov
je
xchg
sbb
jae
addr16
or
loop
mov
decb
das
and
dec
inc
or
jecxz
xor
mov
iret
jmp
ret
xor
bswap
sub
dec
sbb
add
xor
and
cld
es
sbb
and
out
daa
and
or
adc
sub
jno
push
ss
loop
enter
dec
mov
stc
es
sub
imul
lods
xorb
mov
pop
push
aad
pop
xor
inc
call
lret
or
sbb
repnz
inc
sbb
inc
lods
rorl
cmpsl
in
push
sbb
rol
nop
das
lret
enter
mov
rolb
sub
lret
sub
lret
pop
hlt
cmp
add
dec
sbb
clc
xor
enter
add
loope
jbe
mov
jno
sbb
arpl
icebp
mov
insl
mov
hlt
or
loopne
fmuls
mov
add
cmp
mov
enter
bound
push
fimuls
loope
sub
cmpsl
sbb
lea
lret
out
adc
stos
push
cmc
sub
inc
scas
pop
dec
jle
mov
popf
lds
sub
jb
xor
add
orb
mov
xor
xlat
sbb
dec
bound
inc
fwait
daa
mov
push
jno
jbe
jmp
jecxz
test
jbe
bound
adc
rcl
dec
and
loopne
popf
mov
insb
adc
ljmp
addl
into
add
mov
lds
scas
repnz
lods
inc
fcomip
mov
sbb
jo
fwait
cwtl
dec
bound
sub
or
mov
into
mov
pop
mov
stos
sbb
push
xor
push
popf
jmp
cli
ficoms
or
daa
and
xchg
xorl
arpl
sub
push
les
add
mov
adc
adc
jbe
jmp
xor
xchg
shll
xor
xchg
mov
and
adc
and
sub
mov
mov
imul
xchg
addl
stc
inc
push
inc
mov
imul
pop
xchg
mov
sub
cmp
sub
jae
and
xchg
test
js
xor
sbb
push
mov
test
cmpsb
and
ja
mov
sarl
or
aam
add
sar
xor
dec
jne
cmp
push
mov
jmp
pop
lret
push
idivb
inc
leave
cmp
sbb
cmp
ret
dec
fld
std
aam
outsl
repz
push
leave
hlt
int
stos
ret
pop
and
add
push
mov
lods
cmpsb
sub
lret
rcll
mov
mov
loope
and
std
shl
ss
repz
mov
dec
lods
cltd
xchg
adc
stc
out
push
xchg
insl
clc
outsl
cmpl
mov
xlat
mov
and
sub
or
out
pop
mov
or
arpl
push
cltd
push
sti
dec
flds
imul
push
push
pmuludq
shrb
test
icebp
sbb
cmpsl
push
dec
dec
sub
mov
punpckhwd
inc
cmpsl
mov
dec
dec
negl
loope
pop
add
add
or
dec
mov
fwait
mov
dec
sbb
pop
inc
cmpsl
clc
xor
clc
sbb
fldl
inc
or
out
int
cmp
leave
movsl
mov
sub
mov
lret
shlb
hlt
sbb
test
cmp
stc
mov
cmpsl
mov
hlt
jnp
push
cmp
test
add
push
push
xchg
cmpsl
adc
out
adc
jo
cmpl
xchg
mov
out
inc
fwait
mov
and
xor
daa
icebp
mov
xchg
xor
pop
jmp
call
frstor
mov
lret
and
push
in
test
pusha
xor
cmp
push
mov
xor
jnp
testl
dec
enter
repz
test
adc
pop
cwtl
sarl
inc
pop
jb
inc
sub
orl
ds
pop
in
nop
cld
cmp
mov
popa
subb
imul
pop
and
stos
and
inc
add
pusha
mov
je
sub
imul
jl
dec
jnp
scas
jbe
xchg
js
or
sub
inc
sub
lret
sahf
arpl
iret
shlb
lods
xchg
rcll
jl
sub
and
jecxz
orl
js
fcmovu
dec
cli
mov
or
inc
add
or
and
repnz
xor
dec
arpl
or
data16
movsb
mov
dec
and
shlb
cmp
sbb
adc
dec
mov
pop
loop
sbb
pop
sub
cmp
les
out
xchg
mov
movntq
out
or
aaa
mov
stc
mov
sub
out
jb
add
fwait
inc
leave
pop
xchg
cmpsl
or
mov
mov
shl
je
test
dec
fimuls
mov
fsubrs
dec
add
dec
scas
sub
imul
mov
sub
dec
pop
int3
adc
xor
inc
cmp
ret
rol
call
ret
test
out
lret
idivb
out
addr16
aaa
inc
cmp
lret
lods
add
inc
jecxz
xchg
pop
rcll
xchg
cmpsl
pusha
sub
das
push
andl
mov
jg
xor
clc
aaa
bound
mov
or
and
pop
test
push
idivl
add
ss
sbb
and
stos
xchg
cmpsl
pshufw
add
cld
push
imul
xchg
pusha
and
xor
jb
pushf
mov
pop
xor
mov
sbbl
push
dec
push
mov
cmp
pop
pop
jp
inc
jmp
xchg
lret
dec
js
add
fistpl
sbb
enter
les
orl
jp
out
xchg
push
cmp
jp
inc
add
outsl
mov
loop
icebp
jns
jns
sub
push
xor
add
mov
inc
cmp
jne
lods
aaa
push
pop
dec
add
loope
lret
push
and
push
mov
push
pop
int3
mov
pop
add
test
std
aaa
or
adc
pusha
mov
xchg
mov
or
enter
push
int3
add
sbb
pop
cmp
cmp
leave
push
clc
imul
jg
loop
mov
cwtl
mov
sub
in
pop
sub
lds
push
mov
xor
mov
pop
jne
mov
fadds
sbb
clc
icebp
imul
xor
rcrb
test
mov
push
cmpsb
pop
mov
je
ret
mov
and
xchg
sub
icebp
or
lods
scas
push
add
mov
fildl
dec
hlt
lret
dec
ja
repnz
loopne
mov
inc
ret
aam
push
jmp
pop
mov
or
lds
pop
lea
adc
pop
sbb
lcall
rcll
repz
jecxz
xchg
leave
dec
push
and
xor
inc
push
sub
push
adc
sub
xchg
dec
mov
jg
sbb
aam
cmp
mov
pop
push
test
mov
mov
sbb
les
push
inc
or
mov
cltd
mov
addl
not
aad
aad
sbb
mov
cmpsl
or
lret
insb
pop
mov
roll
pop
xor
sub
or
mov
cmp
sbb
inc
outsb
and
lret
int3
jmp
cmp
inc
jle
push
in
mov
pop
mov
stos
jbe
mov
iret
push
stos
movsl
jl
arpl
mov
lcall
scas
dec
inc
jge
mov
leave
adc
push
rcrb
and
xor
cmp
sbb
push
add
dec
fdivrl
lock
mov
xchg
fidivl
adc
xchg
push
and
push
pop
xor
fmulp
mov
iret
pushf
sbb
in
dec
lods
movsb
sar
mov
mov
dec
add
push
push
push
jnp
jmp
xchg
sub
push
or
pop
ret
cmp
mov
imul
or
push
jno
dec
outsl
dec
mov
popa
ds
sbb
jg
mov
cwtl
shrb
mov
jle
dec
loope
jmp
mov
push
into
and
add
into
sub
jle
fldenv
leave
pop
mov
pop
push
pop
leave
jns
fwait
push
loope
repz
sar
mov
dec
mov
jmp
ljmp
pop
push
and
in
adcb
cmc
xchg
mov
mov
mov
sub
mov
fistpl
lahf
das
lock
fwait
cmp
push
fisttpl
leave
push
and
cmp
out
movl
addr16
lret
in
aaa
cmp
jne
js
push
mov
rcr
iret
lods
mov
or
jp
lods
sub
aad
dec
fistpll
inc
movsb
fldt
lret
add
rcrl
inc
pop
cmpsb
int3
loop
mov
es
mov
ljmp
fisubl
sbb
dec
xchg
add
dec
arpl
dec
dec
shll
mov
jmp
imul
or
or
out
or
ret
add
jns
lds
sbb
or
pop
outsl
mov
scas
pop
test
lods
pop
sub
les
subb
dec
std
push
push
lret
sbb
push
dec
arpl
xor
or
out
clc
ss
dec
dec
cld
leave
push
out
push
hlt
fbstp
fwait
sub
cmp
das
add
stos
stc
adc
les
jge
std
xchg
sub
addr16
sbb
stc
in
xor
iret
popa
mov
mov
pop
out
mov
mov
and
js
push
mov
orb
dec
out
jns
or
inc
push
cs
inc
mov
lds
xchg
mov
pop
cmp
inc
fucomi
popa
pusha
or
mov
dec
jo
push
push
cli
pusha
lea
arpl
mov
inc
or
flds
adc
inc
adc
ret
shlb
shll
fnstcw
fimull
mov
mov
cmp
mov
jbe
scas
mov
or
xchg
cmc
test
or
cmpsl
sub
repnz
push
cmp
sub
mov
xlat
cmp
fidivrs
jbe
filds
jmp
shll
insl
jl
push
fistps
mov
mov
mov
fdivrl
sub
inc
lea
pop
push
ds
mov
ret
adc
push
mov
lret
add
jle
popa
out
cmp
inc
dec
sub
fwait
mov
movsb
mov
pop
xor
mov
fisubrl
mov
and
fsubs
leave
xor
push
hlt
in
mov
and
mov
add
and
jmp
mov
mov
shrl
sbb
iret
or
call
pop
test
push
das
into
and
mov
das
and
shlb
xchg
add
adc
pop
sti
jmp
ss
adc
and
les
cmp
pop
pop
cli
ret
pop
add
or
xchg
andb
ret
stc
outsb
xor
jmp
xchg
mov
cs
xchg
cmp
push
pusha
enter
clc
mov
sub
in
hlt
int
aam
adc
insb
lretw
ret
dec
adc
pop
or
rolb
push
sbb
rol
pop
sub
dec
mov
inc
xchg
cmp
xchg
push
pop
inc
mov
cmp
or
fwait
sbb
inc
xor
fucomp
sub
daa
cmp
cwtl
lods
orl
int3
cmp
les
lods
mov
mov
fsubs
fcompl
insl
xlat
mov
inc
cltd
pop
jp
adc
into
jns
ss
sub
mov
sbb
into
lahf
xor
lret
xor
and
jge
sub
imul
sahf
pop
les
sub
jno
xor
int3
xor
bound
pushw
insl
ror
and
into
ret
sbb
int3
loop
iret
push
jbe
push
clc
push
fsts
scas
loope
inc
fstl
mov
push
stos
loope
mov
jbe
mov
jmp
fbld
push
stos
push
mov
xor
cld
stos
adc
jmp
in
push
jae
mov
js
pop
sub
loop
fdivs
mov
mov
lds
inc
xchg
xchg
mov
mov
mov
push
adc
or
push
jmp
inc
and
mov
pop
jmp
mov
sub
dec
jle
push
mov
call
cmpsl
pop
rcll
enter
cmpl
out
stos
jmp
inc
jne
xchg
shl
cli
inc
jmp
andb
sbb
int
xchg
mov
fildll
sub
dec
repnz
rclb
iret
and
pushf
sbb
iret
or
and
mov
jg
jne
lret
cmp
sbb
and
xchg
mov
sub
add
dec
cmp
hlt
xchg
outsl
stc
icebp
or
lods
inc
mov
mov
jecxz
sub
inc
dec
popa
stc
mov
leave
inc
sub
push
mov
in
sub
adc
mov
cmpsl
jp
sarb
xchg
dec
push
dec
cwtl
push
pop
add
jmp
aas
mov
test
cmp
adc
cmp
pusha
sub
jne
test
int
loope
insb
shll
jl
movsb
or
sbb
ret
push
dec
jle
cmpsl
popf
cmp
leave
orl
shr
xor
or
cwtl
inc
pop
in
or
inc
mov
mov
sbb
jb
push
adc
inc
jle
out
mov
jnp
or
lret
xor
in
scas
aaa
stos
call
ljmp
iret
or
ret
xor
xor
jbe
dec
es
dec
cmp
sbb
inc
add
adc
je
xchg
xchg
das
das
add
mov
fbld
jecxz
aas
dec
les
sbb
mov
loop
cmpsb
fnstcw
pop
pop
aam
mov
inc
adc
push
and
push
add
testb
stc
jecxz
arpl
add
mov
mov
ja
mov
aam
js
xchg
mov
insl
ret
cmpsl
jle
lods
cs
xor
cmp
cmp
sahf
loope
out
adc
sub
sbb
xor
jnp
cli
cmpsb
imul
icebp
clc
lret
or
test
lea
int
lret
adcl
shll
xlat
leave
test
rolb
xchg
mov
outsb
loope
cmp
push
leave
ret
add
fistps
lods
jbe
sub
in
std
dec
or
push
mov
push
xor
push
arpl
lret
cli
inc
jns
or
jp
out
sbb
sti
dec
cmp
in
push
mov
inc
cmp
mov
or
sbb
ds
je
lds
cmc
lods
mov
adc
mov
or
fnstcw
hlt
popf
pop
cmp
sub
and
les
pop
fsts
aas
pop
sub
xchg
mov
push
int
loopne
mov
mov
orl
or
mov
call
test
mov
jb
test
pop
aam
sbb
dec
fs
sbb
mov
jbe
xor
test
jg
jb
and
lcall
pusha
sub
leave
push
insl
and
ffree
out
mov
leave
and
lret
sahf
mov
inc
dec
mov
inc
out
adc
ljmp
pop
jbe
repz
cmp
dec
cmp
adc
pop
mov
xchg
dec
inc
xchg
shrl
mov
add
lret
inc
sbb
pop
cltd
std
xor
cmp
dec
jmp
hlt
aad
sub
fmuls
mov
cmp
pop
dec
inc
mov
jecxz
subl
loopne
lret
stc
jae
or
push
sbb
fiadds
testl
cli
push
dec
mov
call
cmovb
jmp
adc
push
in
jb
mov
push
shrb
add
ljmp
pop
mov
insl
rclb
inc
or
push
das
jns
cwtl
les
aam
mov
cmp
lret
in
adc
inc
outsl
leavew
movsl
ss
push
pop
add
roll
scas
stc
ss
xchg
lret
and
add
mov
cmc
sbbb
int3
adcl
prefetch
add
lret
adc
inc
shrb
mov
or
mov
xchg
int3
push
mov
sbb
mov
cmp
pusha
dec
mov
push
into
sbb
jo
lods
inc
xchg
das
jnp
mov
jle
mov
and
fcoms
fmull
in
jo
mov
mov
mov
in
and
mov
xchg
inc
lds
mov
jnp
cmp
test
adc
dec
or
and
repz
mov
insb
dec
xchg
inc
sarb
dec
pop
jnp
inc
adc
xchg
push
sub
dec
clc
fdivrl
mov
xadd
dec
mov
mov
cs
pusha
mov
pop
sbb
arpl
outsl
les
fistl
bound
and
into
dec
sbb
inc
add
test
fsub
dec
sbb
popa
mov
mov
popf
or
mov
push
hlt
inc
hlt
cmp
jae
rclb
dec
pop
adc
enter
xor
hlt
push
adc
jle
mov
jle
sub
shr
mov
jmp
inc
mov
lods
adc
mov
mov
and
mov
sahf
push
dec
push
pop
clc
fidivrl
repz
push
adc
sbb
sub
test
pushw
je
dec
mov
aas
mov
adc
push
xchg
es
mov
test
dec
adc
sbb
stc
jne
cmpsl
cmp
lods
jbe
pop
sub
xchg
xchg
sub
test
mov
lods
mov
call
push
out
add
or
cltd
dec
dec
push
sbb
sti
bound
aaa
adc
adc
jmp
xor
cmp
shrb
xchg
je
mov
jbe
pop
scas
sbb
mov
dec
stc
push
pop
pusha
add
sub
add
lret
sti
movsl
add
mov
xchg
dec
rolb
popa
push
jmp
push
and
out
mov
mov
fimull
das
vunpcklps
das
mov
jl
xchg
mov
jle
mov
inc
cmpl
xor
push
push
ja
ja
adc
test
lods
mov
or
add
and
fldl
arpl
push
jle
cmpsl
pop
push
push
mov
xchg
xchg
cmp
loop
push
scas
adc
dec
push
xor
dec
or
call
cli
sub
sub
cmp
andb
push
mov
push
in
pop
roll
inc
jns
inc
ljmp
popf
stc
add
or
bound
xchg
cmp
aaa
out
cmc
add
jne
jecxz
add
or
mov
jb
jecxz
push
mov
ja
pop
jecxz
cs
daa
xor
mov
and
jle
dec
adc
add
leave
jo
or
call
cmp
xchg
and
inc
dec
stc
in
xchg
sub
ds
pop
push
int
lret
movsl
and
inc
add
sub
ljmp
push
cmp
pop
ret
or
sub
or
std
mull
idivl
and
out
aad
jo
push
negl
push
sarl
inc
ffree
sti
arpl
in
sub
cmp
shll
jl
xchg
add
stos
inc
fxch
push
das
jecxz
sbb
shlb
and
dec
rcrl
adc
out
mov
mov
das
popf
mull
add
xchg
in
cltd
mov
fcoml
iret
ss
stc
or
xchg
inc
cwtl
cs
xor
test
fildll
xchg
je
cmpsl
dec
xchg
push
pop
push
testb
push
ja
sbb
jno
pop
dec
insl
inc
out
push
jmp
adc
cmc
push
mov
je
xchg
nop
dec
pusha
jl
and
or
shrb
dec
or
lods
repz
add
mov
push
stos
or
cli
mov
idivb
jmp
sti
pusha
xor
inc
xor
stos
data16
dec
jg
add
sbb
iret
mov
fs
adc
arpl
cli
dec
xor
into
arpl
dec
or
outsb
dec
cltd
mov
jmp
or
popf
pop
inc
mov
dec
push
cmp
das
add
fiadds
inc
push
cmpsl
pop
hlt
shll
sbb
fldcw
sahf
fimull
jp
sub
lods
cmp
xchg
dec
add
icebp
js
sbb
dec
mov
xchg
lret
mov
hlt
test
cmp
jo
mov
push
cli
and
dec
lds
outsl
mov
xchg
call
cmp
pop
and
popa
push
and
add
sbb
lret
lods
movsl
mov
and
add
lret
lock
nop
arpl
inc
mov
mov
pop
outsb
adcb
inc
cmpsb
and
mov
adcl
mov
or
negl
aas
mov
inc
lds
mov
mov
mov
add
popa
arpl
xchg
cs
push
fisubrs
mov
nop
xor
xor
and
mov
jecxz
add
and
out
mov
mov
inc
in
adc
lods
sbb
xor
hlt
dec
cmpsl
hlt
cmp
inc
das
pop
push
pop
jae
jno
mov
xchg
dec
cmp
jnp
sub
psllq
js
imul
and
cmpsl
roll
or
clc
jbe
mov
cmp
or
cmp
repz
dec
shlb
ret
jno
or
jae
mov
icebp
inc
leave
adc
std
jns
cmp
or
enter
imul
mov
in
lea
push
add
mov
leave
or
pop
mov
lret
push
aad
jns
dec
leave
lock
mov
int
mov
ret
cltd
dec
push
or
mov
test
fistpl
inc
push
and
fbld
pop
mov
cmpsb
jmp
sub
inc
inc
xchg
popl
pop
cs
adcb
dec
insb
aam
sbb
cmp
mov
fstl
inc
inc
mov
out
mov
jo
imul
or
fmull
bound
loopne
sti
jbe
jecxz
mov
loopne
push
xchg
fists
sbb
lods
and
leave
cwtl
or
or
test
loop
dec
jns
dec
and
nop
push
ret
mov
jmp
mov
inc
mov
scas
dec
xchg
je
cmp
mov
mov
fmuls
ljmp
cmovle
into
int
sahf
popf
push
movsl
sub
xor
int
adc
mov
mov
fwait
push
push
xchg
adc
bound
orb
and
ja
dec
jmp
out
lds
push
andb
rol
popf
xor
or
outsl
sub
rcrb
inc
ja
pop
dec
in
mov
jmp
pop
cwtl
add
pop
or
mov
int3
mov
add
add
jnp
loopne
sub
lock
jmp
sbb
sbb
sti
cmpsb
int3
xchg
cwtl
jge
cmp
loope
push
aad
jmp
mov
add
jo
loopne
incb
add
mov
xor
sbb
jbe
les
mov
and
mov
adc
negb
scas
dec
inc
in
mov
and
les
xor
into
cli
jae
inc
pop
in
mov
arpl
pop
pop
lock
sub
stc
inc
mov
imul
dec
pop
mov
mov
pop
mov
dec
loopne
rolb
fwait
pop
enter
jnp
outsb
es
mov
shll
jmp
and
xchg
xor
cmpsl
dec
and
ret
push
outsl
xor
leave
enter
in
pop
or
movsb
sub
movsl
les
push
rcrb
fisttps
fldenv
pop
js
sub
lods
pop
mov
mov
into
mov
dec
inc
mov
mov
dec
mov
mov
fsubs
dec
dec
xchg
mov
mov
ljmp
and
and
push
out
lods
stc
ss
punpcklbw
incl
sub
cmpsl
xchg
jecxz
pop
std
aas
mov
out
and
and
inc
cmpsb
or
pusha
push
pusha
or
dec
inc
ret
add
add
jbe
movl
lret
sub
outsb
and
xor
cmpsl
jno
fucomp
adc
lea
mov
dec
dec
loopne
int
rcrl
rcl
dec
jle
insb
sub
inc
mov
push
outsb
mov
repnz
mov
and
je
add
cmp
pushf
das
and
in
xor
jle
push
mov
mov
sti
rcrl
shlb
mov
jb
push
add
mov
rcrl
mov
int3
faddl
pop
push
xorl
arpl
lds
inc
inc
inc
cmp
or
repnz
das
sti
xchg
pusha
dec
sarl
or
mov
mov
or
leave
out
inc
ret
jns
adc
cmp
leave
xor
pop
hlt
test
jbe
and
loopne
mov
call
jnp
inc
xlat
in
js
mov
dec
mov
add
imul
lcall
arpl
int
and
call
sbb
enter
and
test
ret
jg
cmp
out
jb
jcxz
arpl
jecxz
mov
mov
mov
mov
cmpsb
adc
test
std
mov
jecxz
mov
push
call
mov
shrl
or
xor
adc
push
push
aaa
lods
mov
pop
and
enter
xchg
sub
or
jbe
js
sub
int
push
lock
jbe
pushf
jae
push
jno
add
inc
dec
jg
adc
loopne
popa
or
xor
fmull
out
mov
out
mov
lret
dec
fildl
test
mov
pushf
pop
or
leave
fwait
or
dec
dec
jecxz
lret
sub
popa
imul
xor
sub
mov
or
jbe
dec
mov
roll
sbb
adc
call
testl
leave
inc
add
cmpsb
or
jl
jno
jp
insl
sub
and
sbb
leave
fnstsw
pop
sub
pop
jno
dec
add
pop
daa
xlat
sbb
cmp
sbb
inc
cmp
shrb
push
cmp
mov
lretw
int3
pop
dec
inc
xor
mov
ja
fnstcw
int3
xchg
loope
aad
sub
or
sti
sub
shl
cmpsl
sar
add
loope
test
or
xor
or
add
push
jbe
add
dec
ja
idivb
push
pop
add
outsb
xorl
mov
pusha
dec
fnstcw
in
aaa
rorl
shrl
int3
lahf
and
fmull
jecxz
out
fdiv
arpl
jmp
push
add
mov
lcall
sub
inc
xor
xor
dec
inc
jnp
insl
dec
xlat
cs
les
ror
bswap
xchg
jmp
aad
ljmp
mov
test
or
dec
ljmp
add
shrb
inc
adc
or
jns
addr16
push
movsb
out
movsl
dec
sub
sub
jmp
mov
mov
scas
imul
push
pop
imul
sbb
pop
cmpsl
dec
xor
aad
mov
jne
jl
lcall
mov
das
jnp
mov
mov
xchg
mov
pop
adc
or
das
int
sub
pop
push
ds
dec
stos
push
pop
mov
inc
ret
mov
dec
insb
dec
cwtl
sub
rorl
dec
rcr
mov
xchg
or
cmp
dec
pop
push
add
out
inc
repnz
int
or
push
std
insl
lods
shrb
sub
sbb
xlat
cmpsl
and
pop
rorl
push
xchg
xchg
mov
out
or
imul
out
adc
mov
sub
jbe
jmp
lret
dec
dec
outsb
dec
lret
cwtl
orb
jbe
cmpsb
cli
pusha
rcrl
xor
jecxz
and
dec
dec
inc
int3
roll
decl
add
mov
dec
dec
pop
cmpsb
xchg
xlat
pop
pushw
enter
or
mov
dec
hlt
dec
mov
pop
adc
hlt
fdivrl
rorb
add
idivb
cmpsb
aam
or
inc
mov
xchg
rorb
arpl
mov
mov
cmpsb
xor
and
mov
stc
aad
pusha
mov
jecxz
addb
mov
fwait
push
inc
mov
xchg
jmp
push
or
sub
pop
cltd
dec
enter
xchg
data16
jnp
dec
cmp
arpl
leave
inc
lret
dec
icebp
add
mov
cmpsl
add
cmpsb
pop
dec
jnp
ljmp
xor
js
int
inc
in
lea
and
inc
cltd
mov
mov
mov
mov
dec
aad
push
pop
cli
out
push
lods
in
ja
mov
cmp
fstpl
orl
aad
push
jmp
aam
mov
mov
push
cmpsl
xor
fisttpll
jmp
sub
sbb
inc
dec
cs
aad
push
and
add
mov
lret
mov
jmp
addl
jno
or
mov
xchg
insl
aas
iret
lret
aam
sub
inc
sub
rcrl
cmc
jp
mov
ljmp
inc
lret
dec
sarl
adc
fs
pop
popf
ljmp
dec
pop
inc
out
fisttps
pop
push
xor
push
in
hlt
jnp
in
push
mov
add
add
lret
jno
test
clc
jge
pop
fdivr
xchg
fmulp
dec
je
in
hlt
and
lcall
lea
ljmp
sub
push
and
inc
jbe
push
loopne
cli
in
sar
ret
push
mov
or
cltd
aad
or
int
mov
bound
push
call
push
mov
add
dec
test
fs
xlat
add
jp
cld
insb
mov
lret
dec
push
jmp
lret
add
xor
jp
insb
loopne
pop
dec
jmp
push
push
add
in
inc
imulb
jb
or
sahf
or
push
addr16
inc
hlt
pop
lret
outsl
inc
pop
mov
data16
je
testb
sub
jecxz
repnz
push
loopne
dec
or
mov
adc
mov
sbb
stos
test
mov
mov
js
push
aam
dec
xor
je
lahf
mov
xchg
or
nop
push
add
and
jbe
rorl
icebp
inc
jno
xchg
in
xchg
fnstsw
lcall
out
lock
outsb
push
loopne
fstpl
jle
lahf
dec
je
stos
push
inc
cmp
cmp
sub
cmp
or
mov
push
xor
pop
pop
test
ljmp
ljmp
iret
push
icebp
adc
adc
sub
sub
fs
mov
ja
gs
mov
pusha
and
rorb
lret
cmpl
push
xorb
cmp
rcl
adc
data16
and
sub
ret
inc
enter
int
xchg
repz
loop
sbb
dec
inc
leave
xor
inc
mov
pop
repz
sbbb
insb
into
imul
icebp
arpl
mov
iret
or
xchg
lods
and
pop
call
cmp
dec
and
jae
xor
outsl
enter
jns
and
mov
test
sub
sub
xorl
out
or
jo
mov
push
jl
arpl
outsl
fcomps
fsts
cmp
mov
and
xor
iret
mov
and
or
ja
lods
xchg
mov
imul
ror
xchg
cmp
jo
add
inc
mov
fs
or
ja
inc
add
mov
push
je
cltd
scas
test
es
jb
cwtl
add
cld
test
jns
pop
lret
arpl
add
xchg
push
push
loopne
mov
xchg
testb
arpl
xor
adc
fdivrl
mov
int
push
xlat
call
lock
xor
loope
outsb
dec
shl
pusha
pop
mov
jb
xchg
or
mov
test
xor
xchg
add
fdivr
stc
sahf
or
adc
gs
and
add
leave
cld
imulb
xor
int
cmp
pop
xor
test
js
lret
shr
dec
pop
iret
fadds
popl
ss
hlt
sub
mov
sub
dec
dec
push
sbb
jmp
aaa
pop
xchg
and
bound
sub
loopne
jne
sub
jle
hlt
enter
sub
dec
popf
sahf
sbb
adc
loopne
and
push
pop
pop
call
pop
inc
mov
cmpsb
and
inc
subb
xchg
inc
enter
push
jnp
scas
push
inc
dec
mov
clc
imul
add
jno
stc
or
push
repnz
mov
xchg
sub
fsubrs
insl
dec
loopne
lret
fisubl
into
out
jle
pop
clc
aam
push
stc
adc
pop
pusha
mov
ljmp
pop
int3
cmpsl
xor
cltd
pushf
in
out
rcr
bound
fisttpl
inc
pop
test
push
imul
cmp
or
fwait
subb
rol
add
out
mov
into
mov
xor
daa
pop
or
sbb
dec
sub
jno
cmp
or
sbb
push
jle
adc
loope
pushf
movsl
popf
mov
into
rclb
addl
sahf
xchg
es
adc
sbb
or
mov
inc
dec
adc
xor
leave
mov
mov
pop
dec
ret
inc
pusha
jmp
xorl
dec
popf
mov
mov
pop
bound
push
dec
cmp
mov
mov
popa
mov
test
push
sahf
cmpsb
ja
cmp
inc
loop
push
and
test
adc
orb
dec
sub
mov
pop
or
dec
mov
lods
jle
mov
sti
sti
inc
cmp
in
push
ds
or
sbb
rorb
clc
fdivrs
jnp
xlat
insb
cmp
leave
fists
pop
scas
xchg
sbb
push
pop
rol
add
adc
or
mov
in
xor
sbb
xor
negb
xor
fs
sbb
mov
jbe
std
mov
mov
mov
lret
fstpl
test
out
inc
mov
dec
pop
lret
in
inc
mov
push
fidivrs
pop
pop
lcall
push
xor
shl
xor
pop
mov
std
outsb
lret
dec
inc
xchg
xor
shlb
scas
pop
mov
cmpsb
jmp
sub
dec
sbb
into
pop
andl
mov
cwtl
adcl
push
arpl
xorb
adc
pop
lret
inc
push
xor
inc
add
dec
dec
call
dec
inc
inc
or
mov
aaa
aad
sub
out
divl
push
cli
cwtl
mov
testl
arpl
xor
lods
xchg
add
mov
xchg
push
inc
addr16
and
dec
jno
test
and
xor
xor
jmp
cmp
cmp
jmp
in
loope
cmp
shl
push
sti
inc
cmp
out
das
fiaddl
sub
pop
adc
cmpsl
xchg
mov
push
and
shlb
sub
xchg
in
testb
mov
lds
filds
sbb
mov
xorb
lret
jmp
int
pop
jmp
cltd
pop
mov
mov
hlt
mov
imul
call
lret
add
nop
out
js
lret
sbb
dec
adc
and
cli
out
rcrb
aam
sub
push
mov
jae
adc
dec
sti
mov
into
and
lret
mov
lock
test
dec
arpl
cmpb
xchg
leave
int3
or
inc
mov
mov
inc
mov
or
int
push
out
adc
push
adc
cmp
add
cmpsl
jecxz
push
mov
scas
loopne
cmc
xchg
loopne
pop
into
xor
dec
jp
xor
jge
call
leave
xor
out
mov
xorb
sbb
int
xor
inc
add
mov
adc
inc
dec
add
sarl
loop
cld
lods
sbb
mov
lret
sub
jp
lods
cmp
or
insl
jmp
xchg
push
cmpsl
pop
out
add
pop
mov
inc
xor
add
rcrb
mov
sbb
sub
xor
das
mov
ljmp
sbb
inc
mov
push
pusha
popw
icebp
xchg
or
lods
push
add
sbb
and
pop
add
dec
insb
xor
pop
add
inc
mov
sahf
mov
inc
gs
cs
fimull
fmull
into
push
mov
sbb
call
mov
lds
testb
fwait
push
fsub
mov
inc
inc
push
xchg
add
outsb
or
sub
dec
addr16
fmuls
cmp
and
repz
adc
mov
daa
int3
lret
mov
push
lods
adcl
mov
push
mov
lret
inc
int
cmp
dec
dec
jno
sub
lds
into
push
xchg
test
inc
mov
inc
stc
mov
jp
pop
or
out
adc
or
and
mov
aaa
mull
aas
sub
shlb
adc
inc
mov
nop
push
adc
push
mov
out
cmpsl
int
inc
sub
add
cmp
movsb
mov
mov
inc
das
sbb
pop
mov
fadd
pop
pand
aam
or
pop
ss
cmp
leave
loop
dec
or
sahf
inc
add
mov
xchg
dec
jne
dec
mov
mov
clc
int
repnz
orb
popa
out
fistpll
icebp
rcr
xchg
cmp
lods
lret
fs
loopne
push
scas
jno
or
and
ja
sub
xor
call
adc
xchg
lret
outsl
xor
or
dec
stc
lret
ss
push
xchg
mov
dec
add
xor
pushf
test
sti
dec
adc
and
hlt
adcb
mov
or
int3
cltd
test
dec
stos
push
cmp
sbb
ret
or
sti
inc
add
clc
mov
xchg
popf
cvtps2pi
adc
push
mov
out
ljmp
push
mov
inc
mov
lods
test
inc
clc
addl
pop
jmp
cld
sbb
or
xor
movsl
dec
stc
out
repz
jmp
mov
dec
add
pop
push
cmp
mov
dec
lds
mov
ror
mov
stos
xor
adc
loop
push
enter
out
in
stos
pop
in
dec
pop
inc
adc
roll
outsb
inc
cmp
in
mov
and
push
int
adc
loope
ret
xor
xor
ret
cmp
push
inc
xor
out
dec
add
cltd
jo
push
cltd
mov
push
jmp
stc
push
enter
dec
mov
shl
aad
leave
add
bound
leave
jns
push
push
push
xchg
sbb
push
dec
sbbb
int
add
and
and
sbb
rclb
pop
out
sbb
pusha
dec
fbstp
push
fwait
and
adc
and
cwtl
stos
adc
jne
jmp
adc
or
out
mov
lret
stos
jbe
jo
fs
arpl
mov
xchg
add
and
fs
ja
inc
shr
and
mov
andb
and
jns
push
daa
sub
cmpsl
xchg
les
in
sub
jae
inc
das
popf
int
mov
adc
mov
stos
jge
xlat
dec
sbb
jmp
hlt
popf
insl
and
daa
daa
pop
orb
inc
lret
dec
test
push
sub
cmpsl
test
and
push
aaa
push
int
scas
int3
mov
mov
fldenv
xchg
or
fwait
dec
xchg
xchg
mov
sbb
mov
lods
mov
ret
add
movsl
mov
inc
cmpsl
add
cmpsl
jmp
movsb
test
call
xchg
loopne
cmp
outsb
add
lahf
adcl
pop
push
stc
sub
xor
cmpsl
dec
mov
int3
sbb
int
loope
push
pop
clc
in
test
and
pop
pushf
pop
pop
aas
pop
in
lea
bswap
mov
stos
mov
int
push
xchg
mov
xchg
mov
bound
jnp
dec
icebp
pop
enter
out
fwait
xchg
jmp
mov
ret
lods
notb
mov
lret
cs
leave
xor
adc
jmp
inc
wrmsr
addb
mov
lret
test
cmp
inc
leave
fistpll
bound
icebp
ss
hlt
pop
sub
jecxz
arpl
and
dec
mov
xchg
sub
mov
aam
leave
push
mov
enter
adc
ja
subl
iret
in
jbe
daa
xor
dec
pop
xchg
pop
cmp
and
ror
sahf
push
sub
loopne
test
sub
mov
mov
mov
xlat
fsubp
mov
pop
cmpsl
imul
mov
test
cs
add
and
rclb
int3
add
cmp
or
jbe
bnd
pop
mov
lods
arpl
and
add
dec
mov
cltd
imul
xchg
cmpsb
adc
inc
mov
out
xor
or
lds
clc
and
mov
hlt
cmp
popl
sub
je
in
mov
dec
jmp
mov
xlat
test
cmp
mov
dec
xchg
cmpsl
xor
jae
les
sub
add
sbb
ljmp
leave
call
ja
xor
xchg
adc
xor
xchg
cmp
fcom
and
mov
enter
push
or
rorb
leave
dec
xor
repz
push
lods
inc
fwait
sub
lods
pop
pop
stc
adc
fnstenv
xchg
fwait
dec
sub
test
shlb
push
push
jno
dec
or
push
jne
es
sub
pushf
mov
or
xchg
sbb
dec
pop
arpl
scas
les
mov
pop
inc
dec
push
pop
xor
out
movsb
pop
leave
out
dec
push
insl
xor
ds
inc
nop
fnsave
and
movsl
push
or
sub
dec
arpl
cmpb
js
xor
fadd
push
test
jg
ja
aam
sbb
xor
mov
ret
inc
pop
in
out
mov
push
and
xor
xorb
sbb
or
lcall
add
jl
push
call
aam
jp
sbb
lcall
sub
arpl
and
mov
call
fnsave
pop
test
xchg
mov
mov
sti
pop
xchg
rol
fsubr
pop
dec
jecxz
pop
fmul
js
outsl
fld
add
ror
imul
add
and
shrb
inc
add
outsl
add
cmpsl
test
sbb
pop
xchg
or
or
inc
push
clc
add
js
test
xchg
inc
fnstenv
mov
mov
add
lret
stc
push
imul
cmpsl
xchg
xor
bound
imul
adcb
inc
inc
adc
mov
inc
pop
mov
xor
adc
push
or
movsb
shrb
in
icebp
out
jno
xchg
mov
and
or
jno
loopne
ficompl
in
xchg
imul
dec
mov
or
shr
xor
loopne
inc
mov
phsubsw
mov
cmp
push
inc
mov
imulb
icebp
ja
iret
test
sub
and
adc
push
testl
out
cmpsw
in
in
xchg
arpl
sbb
mov
jecxz
loope
add
push
push
mov
dec
filds
push
cmp
test
and
push
stc
push
enter
mov
les
mov
aam
mov
loop
lods
cs
imul
ret
jnp
mov
mov
or
xchg
push
xorb
sub
test
jle
xor
mov
in
popf
mov
lods
repz
test
inc
cs
jmp
dec
inc
int3
or
cmp
popf
sub
jmp
jbe
mov
mov
aam
in
pop
adcb
xor
andl
filds
cmpsl
loopne
pop
cmc
adc
loop
cmp
roll
push
mov
and
mov
icebp
ds
fsubs
andb
inc
or
int
and
push
les
cmp
test
xchg
ficompl
lcall
out
xor
insl
jo
push
inc
rcrl
jl
imul
das
push
enter
or
shrb
lock
stc
mov
sub
mov
imul
mov
dec
or
or
mov
dec
cmp
cli
mov
int
push
lret
mov
lods
lea
scas
dec
in
outsl
das
pop
push
enter
icebp
jge
jno
sbb
push
inc
loop
xchg
rcr
push
mov
lods
test
add
pop
xchg
mov
fld
cmpl
enter
adc
xchg
dec
int
leave
cmp
cmpsl
cs
aad
ja
mov
and
adc
insb
outsl
mov
in
enter
inc
iret
xchg
or
cmp
ret
xorb
movsl
rcrl
add
arpl
push
xlat
stc
sub
imul
mov
cmp
push
inc
ds
mov
cmp
adc
test
add
and
adc
sbb
xchg
lret
xor
lahf
pushf
xchg
dec
lods
xchg
mov
shl
cmpsl
insb
pushf
mov
enter
inc
fdivrs
in
into
outsb
mov
sbb
ljmp
push
pop
subb
loop
sbb
xchg
nop
pushf
cmpsb
pop
or
pop
mov
pop
pop
mov
jno
pop
xchg
mov
push
xchg
inc
fcos
arpl
pminsw
dec
mov
ret
lock
xchg
aad
sbb
adc
cmp
ds
and
clc
xor
xchg
and
fdivrs
or
push
inc
mov
xor
pop
repz
or
xchg
inc
push
lds
sub
mov
push
aas
mov
inc
push
xchg
nop
pop
lock
push
shrb
das
jmp
test
sub
lds
imul
inc
out
mov
stc
in
cmp
aaa
aad
push
dec
pop
rolb
mov
cmp
sbb
inc
fdivl
cmpsl
out
aaa
or
mov
and
rcrb
stos
cmp
arpl
inc
push
push
dec
popf
or
fwait
pop
test
imull
mov
in
push
fmull
pop
outsb
xorb
mov
mov
pop
shll
jg
pop
pop
mov
lds
decb
add
push
push
or
mov
repz
enter
dec
push
or
mov
ja
dec
stos
xor
mov
push
mov
adc
and
loop
push
cmp
xchg
cli
and
loope
jge
xchg
sbb
push
add
inc
pop
pusha
inc
or
imul
lret
xor
or
cmp
xchg
in
sahf
jo
pusha
fcoml
dec
imul
add
lret
clc
or
bound
or
mov
mov
out
push
sbb
pushf
ret
das
inc
cmpsb
lret
mov
ja
inc
add
pop
mov
lds
mov
ror
shrb
push
mov
mul
int
iret
and
cmp
cmp
and
insb
and
ret
jg
cli
push
int3
jge
ret
aaa
fwait
pop
push
pusha
enter
sbb
lds
addr16
xchg
arpl
in
nop
int
std
jp
out
adc
pop
fwait
or
or
in
xchg
stc
shrl
add
or
or
cmpsb
or
dec
add
and
ja
xorb
jmp
stos
arpl
lret
push
pop
push
idivl
push
dec
add
stos
push
cmpsl
cmc
das
mov
xor
rcll
or
loopne
inc
mov
dec
mov
movsb
cmpsl
hlt
out
xor
xchg
mov
lods
adc
fcomip
decb
nop
stos
jmp
pop
notb
dec
and
icebp
xchg
dec
cmpsl
jb
popf
pop
rorb
jge
fwait
inc
mov
dec
loopne
lret
lods
out
xor
pusha
ljmp
mov
ja
mov
pusha
adc
sbb
pop
rsm
insb
fists
sbb
add
mov
inc
cld
sbb
adc
nop
testl
movl
pop
mov
dec
xchg
mov
out
repz
push
mov
sarb
leave
pop
mov
sub
pop
test
mov
sub
mov
fs
cmp
mov
std
cltd
insl
dec
out
adc
test
fcmovbe
dec
add
push
les
mov
repz
cld
jae
movsl
jb
fs
pop
push
push
gs
or
push
mov
shrb
inc
aaa
sbb
mov
cmp
insb
sbb
testl
iret
pop
xchg
adc
jecxz
xchg
mov
inc
sub
mov
int
pop
leave
mov
clc
hlt
push
loopne
inc
ret
mov
mov
mov
jb
popa
xchg
out
outsb
push
xor
or
mov
mov
sbb
adc
mov
adc
test
push
jmp
jmp
sahf
and
inc
imul
push
int3
lret
or
fsubr
add
jb
sub
xchg
mov
mov
decb
adc
add
dec
mov
out
lds
mov
sbb
sbb
adc
fldenv
adc
fisubl
pusha
ss
sbb
mov
sbb
es
lock
inc
mov
pop
push
xchg
or
pop
jg,pn
rclb
fst
arpl
or
test
jns
fistl
iret
jmp
fistl
dec
cmp
xchg
cmp
push
cmpsl
adc
add
adc
push
cld
xor
mov
cmp
mov
sbb
bound
stos
inc
mov
jb
mov
out
pop
cmp
push
in
mov
fldl
mov
and
popa
and
mov
jmp
sub
dec
xor
adc
das
shlb
int
push
mov
repnz
loop
jle
pop
adc
in
and
orb
arpl
int
dec
sbb
xchg
inc
out
call
pushf
pop
and
jb
stc
mov
pop
add
push
test
jmp
mov
push
sub
mov
stos
mov
or
add
add
or
pop
xchg
push
mov
mov
lods
stos
xor
mov
loope
jp
add
dec
ret
adc
std
dec
push
pop
outsl
sub
cmpsb
xor
pop
std
es
rorb
mov
dec
add
add
inc
adc
iret
add
push
dec
cmp
lahf
rol
pop
test
cmp
lods
mov
inc
scas
add
out
neg
sbb
lret
cs
inc
rorb
aad
xor
lret
jb
je
neg
xor
je
dec
stos
aad
loope
enter
leave
jno
push
inc
ret
ds
mov
std
shl
mov
clc
ret
repz
fimull
mov
add
sbb
and
pushf
mov
add
cmp
pop
sbb
arpl
cmp
sub
scas
cmpsl
xor
scas
leave
xor
or
repz
outsl
dec
fisttpll
push
sub
mov
enter
mov
push
sub
into
jl
jle
sbb
lods
sub
clc
and
push
jmp
shll
mov
std
shrb
imul
sarl
les
mov
pmulhw
xchg
and
jbe
pop
or
cmc
add
out
and
mov
ret
dec
nop
push
aaa
jg
insl
push
lock
in
inc
inc
inc
mov
iret
lcall
test
inc
ljmp
mov
fsts
paddw
pop
jp
pop
mov
mov
mov
add
mov
daa
cwtl
jnp
fisubrs
and
into
int
push
lods
xchg
daa
into
fcomi
lods
dec
mov
mov
fdivrl
add
push
or
pop
mov
cld
mov
and
inc
lods
cmpsb
inc
xchg
xlat
cmova
test
andb
mov
das
cmp
push
lret
or
in
sub
cmpsb
sbb
addl
lret
enter
push
movsl
xor
test
push
in
ficomps
inc
xchg
insb
and
sbb
icebp
and
jo
loop
arpl
inc
push
lods
int
pop
jp
out
dec
mov
ficompl
leave
jnp
push
clc
hlt
adc
mov
sbb
movsl
inc
cmp
sbb
hlt
or
or
ret
data16
int
into
ja
cmp
sbb
repz
in
pop
popa
mov
jmp
push
cmc
rol
test
loopne
cmp
mov
mov
jmp
ds
pop
mov
idiv
in
sbb
mov
sarl
lret
xchg
dec
sub
pop
cmc
pusha
dec
mov
or
inc
and
push
dec
fxch
call
leave
insb
cmpsb
jbe
push
dec
test
sbb
mov
clc
inc
push
ud1
dec
mov
inc
push
orb
and
jecxz
inc
pop
or
xchg
fwait
mov
cld
push
mov
sbb
and
loop
mov
leave
and
mov
cmp
gs
ss
lock
bound
inc
cmpsl
stos
cmp
out
lds
dec
mov
mov
cmp
push
or
popa
jp
inc
pusha
inc
cs
stos
add
xlat
repnz
ret
or
pop
push
inc
pusha
ja
rcr
mov
xchg
fwait
adc
movsb
scas
or
sbb
inc
dec
push
ljmp
aaa
mov
dec
lret
add
adc
inc
pop
and
adc
mov
add
mov
rclb
add
iret
adc
pushf
or
push
lods
sti
test
gs
in
inc
jae
xor
sbb
push
aam
int
leave
out
icebp
lock
xor
push
imul
cmp
lods
lods
xor
lods
in
jp
insl
or
sub
movsb
push
int
sub
inc
ja
fwait
enter
hlt
push
mov
pop
inc
sub
push
das
push
fistpl
mov
pop
fisubs
cmp
mov
xchg
clc
xor
loopne
push
iret
mov
or
js
hlt
jmp
cmp
and
mov
arpl
pop
jmp
adcb
shl
push
bound
sub
mov
mov
not
std
pop
sarl
push
mov
adc
or
sub
lret
push
mov
add
and
pop
mov
inc
mov
jne
sub
enter
cs
mov
bnd
mov
push
add
mov
pusha
sysret
adc
mov
mov
fisubrl
outsl
pop
stc
shlb
lds
test
or
adc
rcrl
push
sub
push
cld
and
jg
fdivrs
dec
shrl
sub
das
in
cmp
outsl
fisttps
cmp
or
cmpsb
push
or
mov
int
mov
mov
xor
sub
icebp
call
pop
pushf
pop
dec
cmp
js
fstps
push
hlt
pop
pop
mov
add
movb
add
push
or
imul
lret
lret
lret
pop
add
sbb
push
adc
sub
adc
nop
and
and
xor
loop
cmp
push
xor
mov
cmp
lea
jp
aas
shl
cmp
in
mov
sub
ficomps
enter
mov
xor
and
test
mov
stos
adc
call
int3
out
mov
dec
mov
xor
fadds
call
out
scas
loopne
adc
or
inc
fwait
aas
rol
iret
enter
ret
cmpsl
int3
divb
cmp
lret
push
outsl
test
movsb
in
nop
into
push
fisttpl
xor
imul
js
enter
in
pop
cmpb
push
xor
popf
leave
push
cmpsb
jle
cltd
imul
scas
sub
out
sub
xor
cmpsb
std
popf
dec
insb
push
jmp
shl
fisubl
add
cltd
pusha
pop
xchg
orb
pop
hlt
push
jbe
mov
push
and
jno
adc
jecxz
push
das
clc
dec
add
dec
mov
cmpsb
filds
mov
cmp
push
sub
mov
xchg
mov
mov
iret
cmp
xchg
mov
sbb
mov
push
jns
cs
adc
mov
push
jbe
bound
sub
adc
mov
pop
and
nop
lahf
mov
push
js
test
enter
or
das
addr16
or
cld
add
push
cmpsb
sub
pop
xchg
xchg
sbb
dec
pop
dec
scas
lods
sbbl
jmp
arpl
loopne
add
dec
inc
dec
rorl
enter
repz
outsl
lahf
loopne
out
mov
cld
sti
inc
mov
push
jbe
jbe
mov
dec
cmpsb
test
cmp
mov
inc
rorl
inc
inc
push
pop
jno
inc
mov
jle
xchg
mov
jns
shl
dec
in
mov
lods
pop
ja
push
sub
mov
clc
mov
jge
mov
ficompl
inc
dec
mov
stos
push
add
jbe
xchg
and
mov
vmread
mov
dec
in
or
jmp
jbe
cwtl
scas
or
rorb
aad
repz
loope
push
dec
inc
dec
and
sub
push
push
rol
mov
or
add
roll
addl
dec
or
add
sub
jns
dec
cmpb
xor
in
or
std
pusha
inc
sub
lods
bound
int
cld
mov
mov
pop
push
ja
dec
fadds
xchg
andb
out
loope
stos
fldcw
add
lret
call
add
std
lods
and
sub
popa
mov
adc
sbb
mov
iret
and
insb
cmp
pop
pop
mov
sarb
in
sbb
dec
or
push
sub
dec
and
test
movsl
pop
adc
rcrb
mov
subl
sahf
fsubrs
mov
sbb
or
mull
insb
dec
out
lods
inc
cmpsb
xor
inc
adc
dec
cmp
cmp
stos
adc
dec
frstor
jae
fwait
mov
sub
pop
or
fdivrs
push
out
jle
arpl
push
mov
dec
push
lock
test
jecxz
inc
rcr
mov
sbb
adcb
and
out
dec
rorl
mov
pop
cmpsb
test
pop
in
mov
push
and
inc
popa
inc
jnp
in
shll
jbe
mov
in
fnstenv
aad
insb
cmp
lock
aas
pushf
lea
cwtl
lock
mov
std
test
insl
add
xchg
lods
push
andl
fldt
movsb
insl
cmc
or
lods
add
fldcw
cmp
jmp
negb
xchg
pop
inc
in
xorb
adc
jo
jae
fwait
mov
cmc
stc
arpl
ret
inc
and
mov
add
jmp
dec
loopne
cs
dec
mov
or
mov
leave
xchg
push
or
mov
insb
inc
mov
out
push
sbb
lods
mov
cmpsb
mov
fcomps
or
cmp
add
dec
pop
dec
or
xchg
data16
xchg
cmp
inc
shll
inc
jnp
mull
push
outsl
cmpb
icebp
loop
push
sarb
bound
push
add
mov
ss
jecxz
cwtl
add
mov
roll
dec
jbe
mov
leave
sbb
icebp
movsl
sub
xor
mov
xchg
mov
inc
push
push
enter
cmpl
mov
mov
ljmp
std
enter
dec
pop
inc
or
rcrl
inc
dec
mov
push
dec
and
in
fs
data16
mov
lea
push
movsl
dec
cli
in
neg
mov
add
dec
ljmp
or
xchg
sub
in
divl
inc
ficoml
cld
scas
imulb
push
mov
pop
jl
arpl
sahf
push
add
cld
mov
push
cld
lock
out
or
pop
pop
lret
arpl
cmc
fstps
aas
mov
inc
int
xor
flds
add
add
push
cmp
lods
mov
xchg
push
outsl
andl
push
jno
or
inc
lods
lret
stc
outsb
add
rorb
lds
pop
cmp
movb
dec
rclb
ror
or
lahf
xchg
dec
movsb
in
aam
dec
sub
add
sub
add
lret
push
xchg
insl
xor
mov
pop
bound
pop
and
data16
fwait
mov
mov
pusha
mov
fwait
cmp
into
jnp
cmpsl
stos
popf
lcall
test
popa
ret
adc
repz
sbb
cmpsb
ja
push
push
lret
imul
push
sub
and
sbbl
nop
add
pop
xor
inc
mov
lods
cwtl
daa
or
mov
movsl
aaa
dec
and
adc
sub
aam
mov
test
leave
or
ret
in
imull
push
lds
cmp
add
decb
test
push
clc
shrb
aam
pop
pop
mov
cmc
pop
loop
inc
int
and
jmp
movsb
xchg
imul
push
sbb
mov
imul
mov
mov
jbe
push
dec
inc
stos
push
sub
cmp
dec
pop
jns
jmp
add
push
adc
dec
inc
sub
dec
aad
pop
dec
push
jns
inc
add
push
mov
push
in
push
loopne
xlat
or
and
outsl
inc
lret
pop
jns
call
lret
push
add
jp
lret
and
push
imulb
xchg
lret
or
imul
repz
mov
sub
push
add
push
xchg
and
push
xor
adc
fimull
sub
subb
pop
inc
sub
inc
mov
xor
sbb
xor
fldln2
ss
lods
insl
inc
ret
das
out
lcall
sbb
push
pop
adc
psubusw
push
sub
push
sub
push
sub
push
sub
push
sub
fs
or
leave
in
push
lahf
and
or
xchg
inc
or
sub
jecxz
or
dec
push
outsb
add
insl
push
in
add
lea
or
lods
push
jmp
push
je
pop
in
jmp
mov
int3
enter
fsts
adc
cmp
push
sub
dec
dec
push
jp
mov
dec
push
clc
and
push
mov
inc
stos
push
sub
push
sub
push
in
adc
or
mov
cmp
cmp
add
icebp
fisubrs
fsubl
push
andb
inc
fnstenv
cmp
dec
fldcw
cwtl
push
shrd
mov
fldcw
inc
cwtl
jecxz
dec
inc
xchg
dec
popa
enter
aam
stos
cwtl
push
and
int3
xchg
faddl
stos
rorb
inc
faddl
lret
test
push
jmp
mov
sbb
scas
dec
sbb
cmpsl
sbb
mov
dec
push
or
xor
push
xor
mov
icebp
cmpb
or
mov
rorb
in
shrl
int3
add
dec
fmull
rcr
dec
aam
lcall
fisttpll
roll
dec
popa
pop
inc
das
sub
mov
jl
les
sbbl
push
xor
ret
repnz
int3
push
or
mov
inc
mov
xor
sbb
iret
mov
inc
push
shr
cmp
jno
dec
inc
gs
cmp
or
stc
je
stos
fstpl
and
mov
iret
or
pop
pop
xlat
pop
scas
pop
pop
test
repz
daa
pop
mov
push
fnstcw
mov
sbb
shll
iret
mov
xchg
mov
xor
fwait
lret
fimuls
fwait
and
pop
inc
sbb
mov
into
push
cltd
lds
in
cltd
test
leave
pop
add
loop
push
loopne
fldt
pop
inc
push
add
jle
add
add
mov
sub
push
mov
lss
dec
add
mov
mov
sub
inc
pop
addr16
adc
push
cmp
and
mov
xlat
push
or
das
jg
arpl
jle
push
push
mov
aas
mov
or
sbbl
xchg
sbb
jge
or
or
fcmovnb
sbb
mov
xor
mov
dec
cmpsl
lret
jle
xchg
mov
push
loope
push
push
je
pop
or
out
xor
clc
push
mov
sub
mov
or
push
cmp
jno
cmpl
and
and
leave
sbb
hlt
xlat
out
xchg
pop
lret
cmpl
insb
in
and
adc
jae
ret
mov
cmpsl
outsl
frstor
mov
mov
and
hlt
in
insb
inc
or
xor
jo
rorl
jo
xchg
test
push
jecxz
add
add
test
mov
add
out
jmp
cli
sarb
xchg
or
dec
mov
inc
aaa
rcll
mov
leave
adc
xor
incb
mov
movsb
fnsave
xor
dec
dec
push
mov
and
or
jle
dec
jle
dec
xor
clc
xchg
sbb
fs
dec
int
xor
iret
pop
addl
rorl
mov
jmp
push
rclb
imulb
push
xchg
xchg
jbe
hlt
pusha
adc
sub
pop
add
and
adc
rol
stc
ss
sub
or
sub
add
mov
xchg
push
inc
stos
test
popa
ret
or
lahf
adc
mov
ret
cmp
adc
lret
fsubl
in
inc
push
ja
dec
push
or
es
or
lods
and
mov
ss
mov
callw
inc
add
ja
sub
dec
xor
call
push
xor
jle
cmp
mov
sub
dec
xor
push
xor
inc
and
inc
or
out
call
pop
inc
rorl
insb
xchg
insw
sbb
sbb
loopne
cltd
mov
sbb
lock
hlt
mov
dec
cwtl
dec
pop
pop
push
cmpsb
pop
hlt
xchg
push
cmp
fidivrs
mov
popa
stos
inc
out
xor
add
rolb
lret
mov
mov
xchg
and
stos
hlt
leave
add
sbb
scas
lret
dec
push
and
pop
inc
fcomip
les
dec
or
cmp
je
jecxz
push
or
or
shl
orb
movsb
inc
xor
add
mov
dec
or
or
xor
cmc
xchg
out
sbbb
xchg
test
enter
mov
loopne
aas
mov
icebp
inc
int
jmp
sub
pushf
or
jnp
addr16
or
cmp
mov
add
xor
out
xchg
adc
testb
add
hlt
or
inc
out
dec
inc
int3
or
dec
xchg
push
add
push
mov
mov
cs
jb
mov
jbe
pop
test
orb
daa
inc
stos
pop
cmpsb
add
or
test
jno
mov
push
out
leave
insb
xor
and
mov
mov
int3
jnp
in
outsl
and
sub
mov
add
inc
add
addb
sub
push
rorb
jmp
shrl
adc
xor
enter
push
xor
adc
sub
add
push
mov
inc
and
pop
mov
push
or
sub
cmp
cwtl
int3
aaa
sub
dec
pop
add
dec
cmp
cmp
inc
xor
xchg
jbe
iret
iret
jae
jnp
lea
enter
mov
enter
rcll
dec
or
mov
test
cmpl
call
cld
fisubrs
dec
jp
pop
cmpsb
mov
lret
mov
push
dec
sbb
orb
or
cmp
insl
fs
add
xchg
add
mov
jl
xlat
arpl
inc
stc
mov
dec
pop
adc
mov
cmpsl
lret
lret
xor
andl
movsb
cs
je
and
das
jp
sahf
mov
mov
lahf
aaa
push
cmp
dec
push
lods
mov
xor
push
xchg
ja
out
adc
push
sub
mov
sbb
outsl
xchg
in
push
jnp
add
jmp
lds
push
fbld
ljmp
out
ja
out
inc
mov
cmpsl
stos
fstpt
sub
enter
sub
add
data16
mov
and
mov
pinsrw
pop
mov
pop
push
repz
gs
loopne
stos
out
adcl
mov
jge
clc
sub
je
or
cmp
mov
pop
add
mov
arpl
cwtl
jmp
iret
leave
mov
mov
sub
cmp
arpl
orb
sub
ror
idiv
jnp
pmulhuw
mov
or
sub
clc
jecxz
mov
test
cmp
jnp
stos
dec
mov
pop
daa
xchg
mov
scas
into
test
rcrb
roll
decb
inc
stos
or
arpl
sub
xchg
dec
mov
mov
jae
xchg
dec
imul
test
lret
enter
push
shr
jo
scas
int3
popa
repnz
pop
sub
or
mov
test
jbe
dec
in
push
lret
aam
adc
adcb
inc
pusha
icebp
jne
mov
enter
test
jl
cltd
adc
stc
shrb
sbb
icebp
xchg
pop
and
xor
push
mov
out
test
scas
loopne
sti
adc
mov
xchg
icebp
fs
ja
hlt
sbb
loope
pop
lds
add
mov
dec
xor
dec
mov
test
dec
jae
mov
orl
fnsave
nop
mov
lods
mov
idivl
cmp
xlat
add
fs
pop
xor
inc
jae
mov
pop
mov
inc
mov
shl
xor
jnp
dec
adc
dec
add
dec
fisubl
adc
lods
test
fsubl
adc
andl
or
enter
push
data16
or
loopne
adc
dec
mov
enter
inc
imul
or
sbb
inc
inc
mov
ret
je
pop
sub
and
dec
fs
or
mov
imul
xchg
pop
ja
jnp
sbb
scas
dec
xchg
mov
cmpsb
cmpsb
test
sti
jbe
pop
ss
dec
lret
or
test
cmp
lcall
lods
and
nop
mov
lret
xorl
arpl
inc
adc
std
pusha
lcall
lcall
push
mov
int
dec
ror
arpl
ret
dec
mov
iret
jne
dec
leave
into
lret
jne
imul
lret
out
adcb
lds
scas
add
dec
sti
and
dec
pop
inc
hlt
dec
inc
outsl
addl
loopne
notl
cld
lock
flds
iret
mul
push
xchg
mov
or
add
push
sub
clc
inc
and
push
inc
pop
inc
jg
sbb
xor
test
test
sub
mov
std
adc
dec
rorl
lea
sub
in
inc
iret
loope
inc
dec
push
loopne
sti
rolb
out
dec
enter
mov
or
cmpl
sub
lea
ret
lahf
inc
jle
add
xchg
rcrl
imul
xor
adc
and
cmovno
adc
loope
or
enter
push
fldenv
sahf
pop
xchg
jle
push
push
cmpsb
xchg
sub
les
push
icebp
dec
xor
arpl
push
rcrb
lret
repnz
jae
and
or
cmpsl
inc
orb
ja
push
pop
sbb
in
xchg
jb
push
dec
fldt
xor
inc
sti
dec
push
inc
dec
jge
xlat
xor
mov
arpl
pop
xor
cs
cmpsl
cmp
out
mov
fistl
jo
negb
and
je
xchg
imul
imul
xchg
xor
push
adc
movsb
out
adc
frstor
mov
int
lcall
or
cwtl
mov
xchg
iret
jnp
or
xchg
imul
aam
subl
and
stos
roll
pop
pop
insb
orb
xor
subb
jbe
std
call
call
push
sub
dec
jnp
push
pop
push
inc
mov
shrl
int3
adcl
rclb
in
dec
data16
rcrb
hlt
test
cli
bt
pop
cmpsb
add
leave
mov
inc
xor
clc
add
xlat
mov
adc
inc
inc
flds
inc
sub
cmp
sub
sub
incl
inc
sahf
pop
fadd
push
es
xchg
out
int
fcompl
cmpsb
and
into
xchg
pop
es
mov
sahf
xchg
nop
add
sti
mov
cmpsl
mov
push
or
mov
iret
mov
pop
sub
insb
mulb
push
loop
sbbl
push
out
adcb
loop
shrl
in
push
sbb
cmp
cwtl
movsl
xor
mov
dec
jp
shl
sahf
xchg
pop
sbb
cmp
cmpsl
mov
cmpb
shlb
jecxz
dec
icebp
adc
jg
pop
push
ret
mov
push
push
insl
es
jns
out
outsb
mov
and
leave
aaa
loopne
fwait
sbb
add
mov
fisubrl
add
arpl
test
cs
dec
enter
add
inc
pop
adc
inc
scas
arpl
pusha
lret
add
fs
push
mov
sbb
ja
scas
pop
call
jp
ljmp
fcomi
dec
pop
sub
or
test
in
mov
xor
pop
dec
xor
xor
sbb
rclb
iret
cmp
cmp
sub
sub
aaa
dec
gs
inc
mov
addb
fcoml
jp
dec
dec
in
test
adc
jp
das
adc
fucomp
lods
adcl
sbb
pop
mov
or
aaa
insb
adc
int3
adc
add
iret
push
ficomps
outsb
jecxz
mov
out
orl
jl
jge
ja
push
inc
inc
jle
adc
loop
push
cld
xchg
rclb
push
test
insb
lret
jmp
shlb
push
cmpsl
xorl
cmpsb
lods
xchg
insl
loopne
inc
js
cmp
dec
inc
sti
cmpsl
pop
mov
dec
jns
cmp
dec
jae
cmp
stos
dec
test
cltd
dec
push
xlat
pop
push
xor
mov
addr16
mov
fistpl
push
jno
mov
aad
jle
cmp
adc
cli
xchg
dec
jno
or
js
loopne
lea
dec
test
lret
adcb
jo
jnp
ret
sub
mov
adc
call
fsubrs
push
lcall
stos
and
push
mov
cwtl
mov
and
and
rclb
mov
pop
cmp
xor
arpl
orl
xchg
inc
rolb
mov
pop
add
xchg
mov
mov
js
dec
adc
repnz
test
int3
or
mulb
or
mov
movsl
stos
dec
inc
out
push
test
add
jg
mov
rcll
out
and
cmc
mov
data16
mov
sub
outsl
add
out
sbb
mov
aas
mov
out
cli
push
inc
mov
aad
out
repz
loope
cs
push
sub
and
pushf
sub
push
mov
adc
inc
testl
call
push
xchg
jnp
push
lods
push
out
mov
addl
je
dec
sarl
jmp
inc
test
jl
xchg
push
scas
add
push
push
mov
sub
imul
lds
rcrl
push
fs
sub
adc
xchg
icebp
sti
inc
mov
enter
mov
mov
dec
xchg
xchg
sub
push
mov
push
adc
popf
test
iret
inc
pushf
xor
aad
dec
aam
inc
jp
pop
das
mov
cmpsb
xchg
cmp
push
sub
rcl
inc
inc
ss
jg
ds
aas
mov
aad
xor
dec
sub
in
ja
lret
jb
inc
movsb
inc
lret
jmp
push
outsl
outsb
xchg
repnz
mov
jo
das
cli
imul
adc
shrb
mov
loop
sbb
cli
jmp
sub
xchg
push
jmp
or
ljmp
mov
dec
inc
sub
imul
dec
fstpl
mov
cs
pop
fwait
push
out
xor
cli
popf
xor
and
sti
rorl
cmpsl
pop
sahf
les
mov
gs
lds
in
mov
add
in
nop
lods
into
or
pusha
cmp
dec
into
lret
call
ss
andl
jnp
add
jb
shl
jg
mov
inc
rolb
and
repz
cmp
test
mov
cli
fsubs
push
int
jmp
out
pop
ret
das
mov
inc
dec
adc
loop
push
sub
sbb
mov
lock
fistl
outsb
or
pusha
stos
test
cmp
arpl
mov
adc
dec
les
adc
push
inc
aaa
jbe
jo
out
jnp
sbb
xchg
aas
sbb
mov
popa
pop
jo
int3
dec
movsb
out
and
nop
aam
mov
inc
fildl
or
scas
hlt
add
push
shlb
xor
push
insl
jp
ret
mov
popf
add
repnz
repnz
add
sbb
jl
push
sub
add
adc
leave
adc
mov
adc
sub
jp
aas
and
cmpsl
mov
or
enter
xor
repnz
pusha
add
xor
jmp
filds
cmp
xor
mov
and
jge
cli
add
int
mov
lods
orl
inc
pusha
aam
mov
push
lods
test
dec
dec
ds
adc
xchg
pop
or
les
std
insl
mov
pop
inc
push
gs
mov
fidivrs
popf
int3
fwait
shrb
mov
les
and
dec
add
call
mov
cmpsl
mov
int
mov
sub
aaa
or
sub
out
sbbb
addl
ret
ret
loopne,pt
sub
ret
or
int3
daa
sbb
and
popf
sub
and
int
pop
pop
dec
addl
fucomi
dec
inc
leave
sbb
xchg
cmp
mov
dec
lret
push
in
fldt
in
and
fdivrp
stos
popa
jge
push
daa
mov
sub
add
dec
adc
repnz
dec
fwait
or
addl
jecxz
sub
aaa
stos
add
sbbl
mov
cmp
es
das
sub
mov
mov
pop
iret
dec
cmp
cmpsl
lods
pop
jo
or
loopne
xor
dec
push
push
ljmp
and
mov
lret
push
lret
cmp
loopne
push
imul
inc
gs
or
sub
mov
mov
lret
dec
int3
add
lods
call
addb
xor
bound
ds
ficompl
jb
pop
scas
dec
adc
insl
cltd
inc
sbb
push
mov
mov
sbb
dec
in
leave
and
mov
neg
push
pop
sahf
rcll
or
fmull
outsl
push
pop
enter
ja
enter
outsb
ljmp
or
push
inc
or
cmp
imul
jo
int
dec
pop
sbb
loop
sub
ljmp
push
or
dec
cmpsl
sbbb
inc
clc
addl
pop
mov
push
arpl
push
ret
ljmp
call
inc
pop
jnp
repz
mov
and
rcrb
xor
sub
test
inc
lret
mov
mov
insl
ret
lods
add
or
lods
xchg
loopne
imull
jecxz
test
arpl
dec
lahf
out
jnp
pop
icebp
xor
add
shll
push
sub
or
sahf
clc
dec
imul
dec
aam
mov
pop
adc
inc
mov
mov
sahf
rclb
cmp
sbb
and
lods
jae
les
push
pop
jmp
mov
bound
ret
popf
mov
shr
xor
or
jno
pusha
rcrb
icebp
push
jmp
orb
call
mov
mov
or
dec
imul
push
cmp
lret
jo
inc
shlb
shl
fistpl
in
repnz
sub
sub
bound
xor
sahf
scas
inc
xchg
int
mov
scas
insl
enterw
sub
inc
sbb
or
sub
push
mov
rcl
ds
outsb
and
pushf
push
sub
and
or
lret
add
rorb
inc
ret
fldenv
sub
xor
mov
push
mov
adc
and
inc
or
and
aas
or
cwtl
jecxz
in
and
and
push
rcrb
dec
in
lock
lea
out
or
mov
inc
es
sub
lods
rclb
jle
and
frstor
xchg
fsubs
aas
mov
hlt
ljmp
int3
mov
mov
dec
enter
daa
dec
cmp
sbb
popa
dec
xchg
jno
imul
movsl
sub
mov
test
push
pop
inc
arpl
sub
lret
or
int3
inc
mov
fcompl
jae
sbb
push
jbe
or
iret
xchg
and
fnstcw
lahf
push
sub
fisubs
aas
jle
or
cmp
les
mov
fs
inc
cltd
push
jecxz
mov
out
mov
popf
mov
pop
jne
inc
leave
lds
lods
je
stos
incl
int
xchg
dec
pushf
stos
sti
jo
push
xchg
fsubl
aad
mov
mov
fisttps
rclb
insl
loopne
or
mov
int
xchg
insb
add
std
fldcw
and
fsubl
int3
daa
mov
add
mov
push
outsl
imul
push
cmp
push
xlat
movsl
rcll
jbe
mov
push
or
xchg
hlt
xor
in
jbe
ficompl
mov
pop
pop
xchg
pop
mov
mov
icebp
add
je
mov
push
xchg
push
push
cmp
dec
push
push
sbb
ret
lret
imul
push
sub
iret
add
lret
mov
in
jmp
inc
leave
push
cmc
push
sub
or
xor
adc
lret
and
sbb
out
sub
xchg
out
push
dec
jge
fsubs
ljmp
inc
int3
jb
xchg
pop
mov
push
addr16
ss
lret
xor
jge
cli
cwtl
jmp
mov
lea
std
push
dec
jnp
jmp
lret
or
sbb
and
inc
or
mov
sub
ror
mov
push
or
inc
jmp
jns
inc
lcall
jecxz
push
or
mov
cmp
pop
sub
push
fldenv
add
mov
bsr
sub
inc
inc
dec
add
cmp
pop
pushf
fxch
add
adc
ss
sti
or
fs
jae
inc
sub
sbb
inc
sub
add
dec
int3
sbb
mov
sbb
mov
loope
dec
imul
xor
dec
dec
xchg
pushf
ljmp
mov
xor
pop
lds
out
inc
xor
sub
shlb
push
xor
cmp
inc
mov
scas
sub
rcll
into
test
imul
pop
inc
mov
and
adc
sub
clc
and
xor
cmp
sbb
stos
test
sbb
lret
lret
push
sbbb
into
ret
fdiv
fildl
jno
jne
mov
insl
mov
dec
push
les
push
push
mov
mov
jo
bound
mov
outsl
repnz
push
cs
push
ljmp
inc
imul
push
shrl
test
inc
imul
inc
fisttpll
fxch
pop
lret
aas
xchg
aam
jle
mov
jbe
mov
je
iret
pop
add
adc
fcompl
stc
jbe
imul
add
scas
addl
add
jmp
out
mov
aaa
sti
jnp
adc
les
jae
out
sub
in
adc
xor
mov
fnstsw
aam
jnp
sbb
stc
xchg
push
dec
jae
cmpsb
dec
or
cmp
mov
in
popa
bound
fs
imul
test
js
push
cmp
jbe
mov
push
sbb
xlat
inc
or
cmp
mov
fsubs
jbe
mov
xchg
cmpsb
dec
add
js
dec
into
mov
mov
rorl
dec
sbb
cmpsb
fs
sub
push
mov
push
mov
mov
adc
scas
insl
stos
in
out
xchg
add
sub
fwait
xchg
incl
inc
xchg
std
lods
jae
iret
lea
inc
xlat
mov
sub
add
push
int
ret
adc
and
subb
movsl
ret
mov
into
pop
lret
jnp
jl
mov
pop
jle
push
dec
arpl
dec
push
or
mov
jmp
pop
mov
fistps
test
xlat
sti
push
hlt
leave
loopne
int3
out
inc
cmpl
push
lret
fmul
sub
cli
dec
lock
cmpsb
or
dec
in
or
jmp
dec
sub
int
jecxz
imul
push
mov
and
fstps
or
jmp
outsl
jnp
add
sbb
adc
mov
mov
xchg
aad
add
pop
ja
push
loopne
adc
sbb
test
fldcw
fmul
icebp
add
push
mov
iret
aaa
jns
mov
inc
add
xchg
or
dec
sbb
pop
cmpsl
inc
lods
mov
lock
jns
add
imul
int
dec
clc
push
lea
add
insb
mov
mov
out
inc
xor
xor
mov
cmpb
into
sub
jecxz
pop
push
jno
jle
fcmovnu
push
adc
enter
ret
xor
mov
and
mov
into
mov
dec
adc
cmp
mov
pop
mov
pop
and
pop
mov
mov
and
pop
pushf
add
jecxz
and
adc
aad
or
jae
popa
jno
loop
jmp
in
xor
cmp
jns
outsl
mov
sub
mov
add
push
dec
add
sub
adc
jecxz
sbb
xchg
lahf
fimull
mov
in
into
stc
lock
mov
cmp
mov
mov
das
lea
add
or
lret
jne
inc
sub
test
add
rorb
inc
or
cltd
in
test
test
and
sub
jb
sahf
outsl
mov
or
sbb
add
test
push
icebp
sbbl
call
das
lods
sarl
pop
nop
sbb
or
and
fmul
pusha
jl
jge
test
fwait
dec
jbe
out
jmp
sub
mov
push
xchg
mov
out
xchg
aad
mov
push
push
mov
int
jl
mov
sbb
jne
fdiv
push
repz
mov
mulps
mov
mov
ja
dec
jle
pusha
xor
xor
sahf
add
jne
inc
popa
pushf
addr16
scas
or
adc
or
sbb
lcall
and
or
cs
mov
push
int
inc
push
push
clc
or
or
mov
and
mov
adc
sub
sub
in
dec
xchg
sub
call
dec
lds
or
or
scas
add
mov
pop
push
adc
sbb
lods
jecxz
cmpsb
add
sub
adc
add
fsub
and
mov
inc
filds
in
in
or
fmuls
fiaddl
xor
xchg
pop
loop
add
mov
sbb
and
sbb
sbb
cmpsl
repz
add
sub
xchg
and
cs
fildl
xlat
cwtl
mov
sbb
xchg
mov
iret
int3
cwtl
rolb
cmpsb
es
jge
testb
push
push
push
mov
sub
sbb
sti
adc
test
dec
mov
loope
jmp
add
sbb
aad
mov
cmp
in
jmp
jge
add
adc
mov
jns
mov
pop
dec
fcomip
lahf
loope
push
pop
and
inc
add
or
rolb
sbb
sahf
pop
mov
cmp
push
js
and
xchg
incb
mov
mov
inc
sub
mov
repnz
jbe
inc
out
xor
lds
push
inc
mov
mov
fldenv
cmp
pop
mov
mov
hlt
or
in
daa
movsl
leave
sub
je
andl
pop
add
or
mov
xor
daa
insb
xchg
dec
and
dec
in
test
in
inc
int3
or
push
jmp
enter
jmp
pop
daa
xor
adc
js
mov
adc
inc
dec
and
adc
in
das
adc
hlt
ljmp
lea
imul
inc
leave
mov
mov
mov
xor
pop
jmp
mov
inc
xlat
les
insb
mov
fbld
movsl
fidivs
mov
aaa
pop
cmp
inc
arpl
fldenv
sbb
dec
xchg
lods
movl
fstps
cmp
add
xchg
sub
mov
pushf
cmpb
add
cmpsl
pop
fsubl
inc
mov
mov
faddp
leave
mov
fdivrl
fwait
xor
adc
mov
shlb
jg
cld
and
leave
push
scas
sbb
xor
scas
lods
inc
ss
jmp
dec
mov
adc
insb
xor
xor
data16
lods
loopne
addl
adc
sub
lds
int3
pop
orb
rcll
je
sub
dec
cmova
into
and
leave
ret
or
int
sbb
std
scas
enter
push
push
cmp
pop
in
xor
push
push
mov
idivl
cmpsl
pop
sub
adc
ret
inc
xchg
leave
inc
jge
xor
add
pop
fld
nop
sti
movsl
das
test
pop
jecxz
sbb
add
insl
or
push
or
imul
inc
jo
sub
mov
xor
negb
push
jne
shrl
aam
cwtl
xchg
pop
jne
shlb
pop
lret
fistpl
addr16
int3
cs
dec
cmpsb
subl
loop
dec
sbb
popf
psubb
add
fwait
loopne
and
mov
dec
push
cmp
outsb
leave
mov
adc
iret
mov
xor
rcrl
cmp
inc
lds
out
out
xchg
add
adc
clc
lcall
pop
movsl
cmpsb
push
mov
mov
fidivrs
aaa
sbbl
aaa
rorl
or
mov
xchg
in
loop
sbb
push
int3
xor
mov
js
cwtl
cmp
push
push
pop
mov
cmp
cmp
jmp
out
mov
xor
push
inc
sbb
cli
fcomps
dec
inc
mov
push
imulb
sub
mov
fnstcw
fidivrl
outsl
enter
lret
dec
xchg
ljmp
adc
ljmp
push
pushf
cwtl
fmuls
push
add
imul
sub
jmp
stos
dec
push
xchg
lds
dec
dec
stos
sub
mov
xchg
pop
ljmp
out
icebp
sbb
push
out
das
shrl
lret
imul
hlt
dec
leave
addl
or
xchg
orb
fidivrs
jle
in
ret
mov
jmp
rcrl
jg
adc
push
xchg
inc
leave
xchg
sbb
mov
cmpsb
sub
mov
sarl
and
enter
rol
adcb
loop
jb
fmull
repz
lahf
jge
add
sub
loop
cmp
pop
lds
pop
sub
xacquire
mov
adc
adcl
inc
rorl
popa
push
sub
lods
adc
fldt
dec
dec
push
lods
inc
lea
je
jecxz
lea
mov
loop
lret
inc
fnstcw
and
aam
cmp
jno
xchg
in
xchg
pop
insb
test
in
mov
or
xor
in
ljmp
adc
je
bound
sub
inc
aaa
mov
sub
jnp
add
jecxz
jo
pop
dec
dec
fisubrs
imul
mov
mov
mov
lock
jmp
call
sub
inc
inc
xchg
and
push
lods
and
fmul
into
stc
push
lock
ds
test
push
mov
adc
std
ret
ftst
xchg
and
pop
dec
into
push
inc
data16
ja
leave
mov
jmp
ljmp
insb
stc
inc
jbe
pop
les
cmp
insl
clc
dec
ja
xlat
and
mov
mov
xchg
faddl
mov
xchg
fwait
pop
subb
dec
or
jle
jl
mov
push
jmp
in
in
test
push
inc
arpl
mov
jecxz
dec
add
out
mov
push
ljmp
jbe
int3
add
ljmp
adc
or
mov
and
or
push
imul
mov
repz
dec
repz
adc
or
push
xor
sub
dec
in
mov
and
mov
hlt
ja
inc
inc
dec
push
dec
lods
arpl
mov
lret
ficoms
enter
in
je
mov
mov
push
and
jp
or
add
lods
push
jge
dec
fldenv
cmp
int
sbb
push
jne
sbb
mov
pop
xchg
mov
sbb
mov
push
sbb
push
dec
cmpsb
aas
jecxz
jmp
call
jbe
sbb
mov
in
movsb
addr16
lret
sbb
ljmp
or
mov
xchg
icebp
rcll
push
xchg
jle
and
push
jecxz
enter
adc
mov
sbb
adc
pusha
lds
test
je
or
arpl
sbb
push
loope
mov
jae
mov
lea
and
dec
mov
pop
sub
mov
add
mov
dec
outsb
jnp
xor
in
adc
adc
enter
dec
jle
loop
iret
cmp
push
pop
loop
push
int
divb
lret
push
sahf
cmc
push
fwait
and
adc
or
sub
cld
add
out
icebp
xchg
call
hlt
push
jne
ljmp
cmpsb
or
sub
loopne
or
jle
or
rsqrtps
decb
push
add
faddl
jne
xlat
imul
sbb
cmp
ljmp
stos
xchg
imul
xchg
jbe
sbb
rcr
mov
add
or
dec
test
loop
int
notl
dec
ret
and
cmp
movsl
or
sub
js
adc
test
xor
xchg
test
into
out
adc
mov
hlt
cmc
stos
and
outsl
cs
pop
cmpsb
leave
and
cmp
lods
add
fldcw
push
pushf
push
adc
pop
adc
add
movsb
mov
cs
adc
rcll
or
lods
and
outsl
lret
mov
mov
push
mov
scas
test
sub
add
fstps
rcrb
movsl
inc
decb
sub
jmp
add
in
add
sub
pop
jo
adc
jmp
adc
jl
or
add
ret
push
mov
lret
pop
jno
lea
push
fildl
fwait
cmp
cs
jle
xchg
ljmp
lock
lds
xor
pop
pusha
mov
and
scas
jbe
sub
out
jmp
mov
cmp
pop
adc
pop
lret
push
jle
add
roll
mov
cmpsl
mov
inc
dec
pop
inc
lahf
inc
mov
mov
aaa
dec
ror
mov
cmp
cld
or
and
iret
hlt
leave
movsb
cld
clc
in
dec
pop
inc
sbb
add
inc
push
rolb
adc
cmpsb
adc
lds
cmp
popf
movsb
jmp
cmp
mov
adc
xor
adc
sbb
add
mov
push
fistps
loopne
fnsave
cli
bound
rorl
stos
adc
cmpsl
ret
scas
inc
cmc
stc
xor
bnd
dec
ss
add
dec
stos
xchg
cld
mov
xor
cmp
int
add
and
sbb
rorb
jbe
int3
cmp
xchg
inc
mov
call
aas
data16
fildl
mov
push
inc
shl
aad
xchg
repnz
sbb
sti
enter
inc
mov
xor
bound
inc
sbb
call
cmp
inc
dec
insl
jmp
addb
jge
inc
mov
je
inc
ret
enter
dec
and
pshufw
test
mov
pusha
jae
std
mov
push
stos
jno
popf
dec
dec
sub
adcb
push
pop
mov
and
out
xchg
or
imul
cmp
jno
dec
cmpsb
fstl
sub
callw
gs
cmp
leave
das
or
inc
add
mov
ds
hlt
call
pusha
mov
int3
call
jecxz
jmp
dec
mov
and
fs
and
out
mov
push
and
mov
lds
dec
pop
mov
dec
jo
gs
push
xchg
sub
adc
mov
pop
xchg
cmp
push
push
sbb
int
jge
inc
orb
rcrl
dec
push
nop
loopne
cmove
sbb
stos
push
sarl
inc
pusha
dec
out
lret
fdivr
jnp
dec
push
push
outsl
int3
inc
dec
push
ror
aas
ljmp
int3
add
ljmp
enter
xchg
fnstcw
int3
dec
test
cmpsl
mov
enter
jecxz
add
test
xchg
sub
dec
stos
sub
mov
in
pusha
ja
mov
cmp
mov
ret
jle
insl
fisubs
adc
push
sbb
mov
fcmovbe
xor
sbb
mov
subl
scas
add
lret
jbe
and
imul
cmp
xor
int
inc
iret
or
mov
mov
imul
pop
jmp
setae
and
xchg
pop
ret
mov
push
inc
push
adc
dec
inc
mov
rclb
push
inc
pop
dec
push
dec
sbb
jb
mov
dec
push
in
xor
pop
aas
rclb
repz
adc
jl
test
cwtl
sbb
mov
arpl
push
adc
jmp
jg
loopne
jbe
xchg
push
lret
in
repnz
cmp
inc
loope
and
mov
jnp
push
popf
and
js
add
jo
pop
push
loopne
sahf
out
pop
jns
mov
lret
mov
mov
gs
in
test
mov
or
or
pop
mov
dec
sub
aaa
xor
or
ja
lds
fldcw
sub
mov
dec
or
pop
mov
xchg
dec
insb
in
push
inc
loop
mov
jp
sub
sub
and
pop
inc
mov
pop
mov
mov
icebp
shrl
inc
cmpsb
mov
fcmovnu
adc
cmp
add
orl
es
out
xor
out
int
adc
pop
xor
or
mov
dec
inc
add
xor
mov
std
add
jl
lods
fcomps
cs
stos
jns
sbb
cs
and
xchg
mov
jae
fdivl
js
lods
cltd
mov
mov
lret
pusha
or
inc
sub
push
subl
aaa
lods
ljmp
push
adc
xor
inc
pop
ror
adc
or
inc
dec
mov
test
cmc
repz
xchg
iret
popa
dec
lods
aad
cmp
dec
jecxz
mov
sbb
repz
push
mov
insb
adc
fs
ds
dec
in
in
jno
pop
push
and
mov
aas
push
inc
into
fbstp
jmp
out
xor
ret
jp
mov
push
rcrl
test
pop
out
mov
sub
lret
jmp
fxch
jbe
cmp
dec
adc
push
cmpsb
lret
lret
fcmovnu
in
lock
inc
fwait
lret
pop
xor
cmp
xchg
dec
decb
test
pop
lret
push
faddp
mov
or
sbb
ds
jmp
aaa
sahf
jge
xor
lds
shrb
xor
or
imul
aaa
mov
fstp
inc
and
test
bound
pop
lret
dec
push
mov
jecxz
rclb
test
lcall
sbb
mov
int
dec
jecxz
dec
fistpl
push
jecxz
icebp
in
and
xchg
inc
fldenv
and
stc
mov
insb
cmpsb
ret
or
jnp
dec
mov
test
cmc
cmp
cli
add
fcmovne
insb
dec
fsts
push
loopne
jle
adc
dec
add
jnp
and
adc
mov
test
mov
cmp
push
jle
push
xchg
adc
les
adc
inc
xchg
push
clc
fistps
aam
imul
rorl
icebp
mov
mov
shl
leave
mov
mov
stos
ljmp
sbb
pushf
loope
pop
dec
xor
mov
push
sub
dec
cmpsb
cmp
mov
arpl
cmpsl
xchg
add
add
imulb
push
cmpsl
sub
fstl
jnp
adc
addl
outsb
mov
jp
paddusb
sbb
push
cli
mov
out
test
mov
stos
fcmovb
jge
sbb
sbb
leave
or
push
adc
in
imul
fwait
ret
fcoml
fmuls
iret
cmpsl
arpl
in
mov
stos
inc
enter
adcb
bound
inc
add
out
imul
adc
inc
mov
and
add
pop
aam
cmpsb
or
push
or
sbb
push
roll
xor
sbb
and
dec
pop
dec
xchg
jg
jmp
divb
int3
cmpsl
xor
inc
xlat
mov
insb
dec
dec
mov
inc
sub
jp
sub
mov
cld
insl
cmpsl
sbb
adc
jp
aad
adc
lahf
xchg
and
xor
fldln2
push
adc
jae
mov
imul
adc
adc
test
or
cmp
mov
jmp
pop
nop
cmp
xchg
mov
push
jnp
or
insl
cmc
sub
push
jmp
insb
bound
hlt
nop
in
adc
in
jmp
test
mov
add
mov
mov
push
out
mov
lock
mov
jecxz
mov
rolb
ljmp
mov
test
icebp
inc
mov
lods
cmp
outsb
xor
inc
mov
rolb
inc
adc
cmpsb
ljmp
rcr
mov
adc
hlt
imul
scas
int3
add
mov
sub
mov
leave
push
mov
and
sub
sub
mov
xor
cmp
adc
cmpsl
push
mov
jge
shlb
mov
popa
stc
not
ljmp
dec
push
lret
ljmp
push
or
cmpsl
enter
and
add
mov
lret
lret
imul
or
add
ficomps
cmp
lods
shl
sub
mov
xchg
insb
shr
aas
fstps
cwtl
mov
add
lods
lret
xchg
cmpsl
inc
lock
test
lods
inc
add
mov
mov
inc
insl
loopne
ss
lea
into
mov
test
pop
mov
mov
inc
xor
mov
sub
dec
lods
mov
mov
movsl
test
and
xchg
pop
mov
push
sub
mov
clc
popf
xor
adc
enter
sti
nop
cmp
sti
rorl
orb
mov
adcl
dec
mov
daa
sti
jmp
sbb
inc
iret
jp
xor
lock
out
push
xchg
and
jmp
in
or
inc
push
mov
scas
ja
imul
mov
inc
pushf
xor
int3
sub
xor
jecxz
movsl
jnp
enter
js
and
enter
or
fucomi
push
fadds
jp
lods
test
rol
cmp
lds
lret
andb
and
ret
jns
in
mov
push
sbb
cmpsb
adc
jnp
or
jbe
sbb
fisttpll
mov
sub
and
mov
inc
enter
call
lods
punpckldq
inc
push
in
adc
jmp
hlt
jmp
mov
adc
push
pop
sti
inc
insl
ficoml
or
in
int
cmp
add
ret
xor
dec
push
jbe
inc
repnz
gs
xor
cld
movsl
sub
imul
in
int
mov
ret
arpl
inc
sbb
pushf
inc
movb
imul
jnp
mov
dec
and
gs
fbstp
mov
imul
pop
push
std
test
sbb
insb
ljmp
les
clc
cwtl
clc
aas
orb
fmull
adc
lock
mov
leave
imul
faddl
sbb
shr
mov
repz
ds
mov
xchg
dec
inc
dec
pop
hlt
add
pop
jge
stos
mov
jno
and
sbb
into
sub
mov
loope
subl
or
jmp
icebp
pop
stos
insl
or
cld
adc
pop
clc
dec
shll
sahf
mov
in
bound
dec
push
cmp
jne
cli
sti
sub
pop
inc
sarb
inc
scas
sbb
mov
add
iret
jl
jno
cmp
outsl
cmpsl
in
aaa
cli
fbld
sub
xchg
sub
jnp
rcl
pop
push
pushl
in
pushf
iret
add
adc
push
test
dec
add
dec
aas
dec
in
sbb
iret
xor
add
pop
movsb
enter
jmp
imul
xor
fucomp
jmp
sub
call
pop
mov
xchg
mov
in
popa
push
int3
cmpsl
enter
pop
lret
xchg
mov
leave
and
or
clc
arpl
xor
add
xchg
or
pop
test
addr16
cmpsb
stos
scas
rcrl
add
inc
lret
mov
adc
inc
push
out
ljmp
roll
jbe
jne
lds
dec
push
and
pop
aad
lahf
sub
adc
cli
shr
bound
adc
movsb
mov
lcall
push
mov
pop
lret
mov
xchg
mov
and
orl
lret
in
lret
ret
pop
rcrb
dec
or
inc
dec
lods
and
cltd
xlat
std
ljmp
mov
iret
and
add
adc
cmp
push
stc
push
push
mov
cmpsl
xchg
aas
out
inc
add
dec
adc
xlat
bound
test
pop
cltd
or
mov
lods
outsl
push
mov
ret
in
test
addb
test
add
mov
sub
loop
xchg
test
xor
shll
rolb
lret
addr16
mov
daa
inc
pop
arpl
sub
sub
rdmsr
jecxz
push
stos
mov
out
ljmp
and
inc
and
andl
in
arpl
and
push
push
cltd
scas
fdiv
add
sbb
notb
or
ljmp
icebp
in
pop
xchg
lods
dec
xchg
lret
and
mov
cs
out
iret
pop
ror
aam
lock
notl
lret
xchg
sti
lretw
xchg
mov
imul
fdivr
pusha
fiadds
repnz
movl
data16
cmp
xor
push
sub
icebp
neg
mov
sarb
mov
dec
sbb
and
lret
xchg
or
sub
leave
xchg
dec
andnps
loopne
dec
and
out
pop
das
icebp
cmp
cmpsl
ljmp
jo
mov
push
out
push
insl
dec
jl
fsubs
adc
add
jmp
aad
jmp
pop
xor
dec
cmp
add
jbe
and
push
mov
fldenv
psubusb
adc
enter
add
daa
aad
add
divb
rcrb
push
jge
dec
or
jb
addl
int
dec
mov
int
adc
subl
rorl
mov
dec
pop
lods
fsubrl
stos
into
mov
addl
pushf
sub
stc
aad
lds
int
sbb
push
leave
pop
cmp
pushf
xchg
stos
mov
test
pop
hlt
mov
sbb
insl
push
out
js
mov
add
jp
xor
jmp
mov
mov
inc
jbe
mov
pusha
hlt
sub
popa
push
mov
fdivl
leave
cmp
and
out
out
push
int
xlat
hlt
subb
cmp
jno
inc
push
dec
or
popf
out
add
les
mov
push
sub
cmp
mov
dec
fisttpl
or
fmul
popf
loope
in
pusha
movsb
or
xchg
push
js
jl
pop
mov
lods
shlb
sub
cmp
scas
push
ja
pop
popa
fcomp
sub
clc
jno
jg
arpl
jg
and
in
dec
cwtl
int3
mov
lret
bound
ljmp
sub
sbb
insl
shlb
cmp
add
mov
int3
jecxz
jmp
lcall
inc
fdivrl
xor
out
add
inc
fwait
iret
rol
mov
mov
bound
and
pushf
jmp
push
into
adc
dec
lret
mov
ret
mov
lret
out
repz
stos
xorps
push
mov
jo
lret
cmpsb
dec
mov
pop
mov
lock
xchg
adc
into
xchg
jmp
js
jae
rolb
lds
lea
inc
aaa
into
sbb
and
dec
sub
lret
push
cmpsb
jg
jmp
ficoms
movsl
stos
lret
daa
lea
ret
hlt
mov
cmp
arpl
es
add
pop
sub
jle
dec
mov
rorl
jmp
dec
sub
out
xor
dec
sbb
push
dec
inc
subb
adc
sub
movl
scas
or
inc
loopne
xchg
cmpl
sub
xlat
outsl
jmp
inc
bound
sub
pop
and
lea
mov
fwait
jnp
cmp
inc
test
jo
add
stos
push
cmc
lret
xchg
stos
or
inc
cmp
jo
lods
cltd
into
sub
subl
mov
lea
rol
add
aas
cmp
rcrb
adcl
pop
mov
mov
scas
push
pop
mov
pop
int3
int3
jmp
cmp
mov
mov
mov
clc
mov
sti
fmul
ljmp
in
xchg
mov
aaa
repnz
adc
mov
or
adc
negb
xor
xor
sti
lret
and
inc
push
or
inc
imul
inc
sub
mov
shr
lds
and
add
sbb
cvtps2pi
loopne
andl
cmpsl
leave
jg
pop
pusha
lret
mov
sbb
and
out
sub
sub
arpl
add
cld
dec
dec
loope
cmpb
hlt
orl
stc
push
xchg
aaa
jno
aas
ret
sub
cmp
dec
rorb
dec
push
shlb
dec
adc
jmp
in
cmp
sub
rcrb
xor
fwait
sarl
inc
inc
jbe
fnstcw
in
or
pop
push
dec
pop
fisubs
xor
mov
dec
shr
cmp
in
leave
xor
test
cmp
or
leave
jl
sbb
sub
mov
pop
jg
pusha
dec
lea
adc
sub
lret
fwait
inc
push
outsb
str
fisubl
push
adc
lock
add
sub
enter
mov
clc
mov
sub
sub
cmp
jns
dec
mov
inc
call
jle
mov
jae
repnz
add
int3
jmp
rcll
push
bts
arpl
add
jb
outsl
xchg
in
js
shll
push
iret
lahf
loopne
push
jg
out
inc
jg
faddl
arpl
mov
mov
aaa
jg
incl
dec
jae
adc
jle
shrl
push
jge
and
out
xchg
int3
mov
es
pop
sar
lock
ficompl
out
mulb
clc
loopne
mov
clc
add
into
push
sub
mov
push
push
cmp
popf
ror
imul
mov
inc
mov
xor
cmpsl
testl
flds
cmp
inc
xchg
mov
ret
add
pushl
fbstp
dec
sahf
dec
test
cmova
add
aas
int
mov
lret
xchg
xchg
lods
add
int
mov
rol
cli
jno
sub
inc
inc
fwait
std
or
add
aas
cltd
jle
in
je
sbb
jae
push
and
in
negb
loopne
rorb
test
dec
add
cmpb
xor
jae
fwait
out
dec
arpl
add
leave
pop
jnp
push
pop
rcrl
and
in
or
inc
icebp
adc
lods
roll
rol
push
mov
jno
pusha
dec
lds
iret
sub
cwtl
xchg
shll
mov
add
sti
or
dec
xor
repnz
cld
jecxz
xchg
jmp
sub
push
out
hlt
dec
mov
movsb
pop
lea
sahf
pop
inc
cmpsl
or
pop
dec
sbb
fisubrs
pop
dec
sbb
jbe
push
out
int
xchg
mov
dec
dec
imul
or
dec
mov
repnz
mov
sub
xor
sub
arpl
fwait
inc
gs
mov
adc
lds
fisubs
mov
cmpsl
popa
mov
xchg
sbb
push
in
incl
iret
cwtl
stos
push
push
mov
pop
pop
inc
adc
push
sbb
jle
dec
jnp
jl
in
pop
pop
sbb
pop
jb
and
je
out
pop
orb
out
adc
or
les
jae
aam
inc
dec
call
rcll
dec
sub
push
jge
cmp
test
xchg
or
sarb
lret
sbb
push
cmp
push
push
mov
addl
icebp
jmp
push
jb
xor
cmp
lret
cld
int3
dec
ror
dec
lods
out
xor
rcrb
data16
lahf
dec
pop
dec
lock
loope
mov
or
shlb
mov
scas
je
push
bound
lret
popa
out
ss
mov
dec
or
mov
clc
dec
push
pop
sbb
jecxz
or
pop
adc
mov
les
pushf
mov
lret
rorl
ror
int3
aam
mov
bound
sbb
les
fld
sub
flds
les
sub
jnp
jnp
adc
mov
pop
mov
dec
and
in
xor
hlt
xchg
push
jnp
push
shl
push
stos
dec
mov
dec
sub
mov
inc
lret
dec
lret
popf
add
cs
push
insl
jmp
stos
push
rcll
and
jbe
leave
xchg
pop
and
leave
sub
pop
lods
or
movl
ret
loop
xorb
jno
mov
adc
sbb
cli
add
or
add
inc
les
jl
fiaddl
mov
loop
fcoml
mov
popf
jb
dec
fcmovnu
inc
mov
lret
mov
and
leave
push
sbb
adc
sub
adc
lds
sbb
xchg
jnp
jne
jnp
clc
mov
sbb
mov
movb
xor
test
or
adc
jns,pn
mov
ret
sub
push
orb
inc
lock
dec
inc
push
inc
popf
aad
jno
int
push
lods
jno
arpl
sub
lcall
dec
sub
lods
xor
pop
cmc
fnstenv
insl
jb
aas
loope
je
data16
mov
fucomip
xchg
ljmp
xorb
mov
mov
jae
xor
jle
cmp
push
inc
add
sbb
pop
subb
repz
ret
sbb
add
les
in
or
inc
sub
out
add
mov
pop
pop
int3
sbb
out
sub
dec
jns
jl
test
and
pop
int3
mov
loopne
insl
cmpsl
es
lret
fiaddl
xor
mov
int3
add
dec
lret
insl
xchg
and
lds
pop
or
icebp
or
or
jnp
cld
rcl
lret
fiaddl
fstps
pop
push
or
jg
fwait
sbb
das
inc
mov
hlt
add
std
stc
inc
cmpsl
pop
cs
in
in
jb
jae
add
inc
cmc
mov
adc
fwait
jl
jae
out
cltd
jbe
push
dec
cmp
add
xor
sub
mov
jle
jmp
xchg
inc
push
mov
dec
adc
movsl
push
adc
sar
and
aas
loopne
lods
lret
push
sub
sub
sbb
jbe
xchg
xchg
out
aaa
dec
xor
les
dec
mov
int
cld
jno
call
and
adc
cmp
add
or
out
sti
stos
mov
mov
xchg
xor
or
or
in
mov
sub
sbb
lahf
mov
sbb
mov
dec
aaa
fsubr
dec
arpl
fidivl
mov
ret
adc
out
out
hlt
and
out
mov
enter
adc
xchg
or
test
scas
push
jge
test
outsl
insb
inc
ljmp
leave
mov
adc
and
xchg
xor
pop
mov
xor
push
inc
lods
xor
jb
test
jle
incb
sbb
hlt
fiaddl
gs
pop
cwtl
movl
push
adc
hlt
cmp
mov
ret
arpl
cmp
sbb
fcompl
dec
jp
lret
pop
cmp
lret
rorl
xor
jl
dec
sub
dec
enter
loope
std
mov
cli
fildl
hlt
rcr
stos
fcmovnb
inc
dec
aam
sub
or
enter
xchg
lods
int
mov
push
push
ss
jnp
ja
enter
lcall
mov
imul
into
jmp
int3
sbb
and
scas
pop
dec
test
lods
or
cmpb
inc
jbe
inc
or
sbb
jle
sub
xchg
inc
push
push
aad
push
mov
sub
dec
lahf
out
shlb
inc
ja
arpl
pop
movl
mov
jl
and
add
cli
ljmp
xor
xor
jecxz
cld
imul
lret
or
into
mov
cld
and
mov
sbb
sub
out
mov
jge
xchg
js
or
push
add
cld
mov
inc
rcl
add
pop
fsubr
lea
cwtl
ja
jnp
loope
iret
lret
or
lods
push
cli
inc
nop
mov
mov
aad
xor
aam
xor
sub
arpl
loopne
adc
and
icebp
aad
adc
mov
or
mov
xchg
jl
pop
xlat
adc
fwait
adc
adc
pop
push
and
enter
and
iret
pop
dec
and
leave
or
sbb
cs
push
pop
roll
lds
sahf
pop
pop
dec
decb
push
lods
imul
mov
movsb
sub
cmp
nop
ret
dec
xchg
int
shlb
cmpsl
movsl
mov
dec
je
push
jmp
leave
mov
jecxz
lods
mov
mov
or
inc
call
int
inc
lock
test
ljmp
cwtl
sahf
lock
test
incb
mov
call
xorl
adc
je
adc
jb
mov
mull
mov
rclb
push
mov
mov
mov
sub
sub
dec
mov
dec
cmpsb
fisttpll
inc
inc
sub
xlat
cmp
fnclex
lcall
dec
into
movsl
mov
inc
dec
push
push
pusha
cld
imull
xchg
sub
jno
push
pop
pop
loopne
div
scas
xor
mov
mov
push
inc
mov
inc
jle
ret
push
cwtl
push
arpl
add
imul
addr16
movl
loop
xchg
sbb
cmp
or
push
cmp
je
jge
dec
dec
stos
lds
pop
sbb
pop
sbb
push
pop
leave
stos
jnp
mov
inc
push
mov
lods
loop
xor
ret
sub
adc
pop
push
push
fistpl
mov
and
bound
jo
dec
inc
les
shr
flds
aaa
push
xchg
icebp
hlt
mov
xchg
xchg
inc
xor
stos
pop
or
jno
jmp
dec
lods
push
call
sub
mov
movsl
or
jl
or
inc
mov
lods
mov
imul
les
adc
xchg
mov
imul
or
jae
sarb
jg
push
mov
hlt
dec
jmp
sub
or
loope
sub
adc
mov
cmp
cmc
push
jecxz
lret
or
lret
jg
mov
hlt
dec
pop
and
lahf
imul
cmpsl
cmp
inc
out
pop
lret
lods
int
push
add
rolb
and
orl
fcmovne
jp
pop
movsl
les
ja
xchg
aam
insb
pop
aaa
jp
mov
mov
aas
in
or
ret
aas
loopne
ja
mov
dec
or
das
gs
pushf
addr16
fsincos
popf
and
sbb
out
out
add
and
loopne
adc
test
shlb
arpl
pop
idiv
subb
popf
or
enter
cwtl
fidivl
push
xchg
shrl
xor
repnz
push
jmp
mov
sbb
clc
jecxz
and
add
sbb
stc
enter
dec
jmp
fbstp
sub
popa
pop
dec
int3
push
jb
jp
dec
pop
inc
rolb
andl
push
sbb
test
lret
add
mov
push
mov
mov
jge
mov
push
rol
cmpsl
add
scas
arpl
push
adc
mov
test
dec
incl
xchg
xor
cmpsl
jno
xor
mov
fs
jnp
push
pusha
mov
xchg
mov
sti
pusha
shrl
mov
or
xchg
mov
hlt
mov
pop
sbb
mov
and
repnz
xchg
in
add
inc
out
into
lods
pusha
faddp
cmp
std
stos
mov
xor
or
cltd
int
sar
lock
lods
imul
addr16
ds
inc
jnp
mov
xchg
testl
subb
popf
rcrb
sub
or
or
jae
inc
push
cwtl
cmp
or
bound
idivl
jmp
cld
jo
cltd
sub
adc
inc
test
insb
sbb
push
cmc
daa
rorl
addl
sub
xor
std
nop
lods
lret
call
loope
adcb
pushf
addr16
cmpsb
xor
fwait
inc
test
pop
xchg
cmp
xchg
mov
cmp
dec
andb
xor
pusha
shl
adc
and
mov
xor
or
imul
and
and
arpl
int3
fistps
repz
pop
inc
xor
imul
add
cmp
xlat
or
sub
fiaddl
pop
inc
xor
aaa
int3
jns
roll
mov
push
int
push
int3
mov
jmp
lret
stc
jmp
daa
rcll
adc
fldt
xor
popf
jae
pop
jecxz
mov
sti
andl
pop
rorl
insb
dec
and
sbb
jb
mov
cmp
aas
xor
ja
jecxz
stos
sbb
jno
insl
popa
xlat
cwtl
pop
insl
insb
iret
mov
push
xorb
into
pop
push
lods
insl
fstl
mov
jbe
inc
daa
jle
scas
sbb
fldl
js
push
in
mov
dec
mov
call
and
dec
pop
out
stos
sbb
mov
xor
fisttpll
jg
or
lahf
mov
sbb
sti
rclb
or
mov
shlb
and
fldenv
add
neg
enter
inc
cmp
fxch
and
call
fs
in
lahf
js
in
pusha
pop
mov
lea
ret
cmpsl
subl
ss
and
and
xchg
cld
xor
test
fisubs
cmc
movl
push
or
test
pusha
jnp
test
hlt
dec
inc
or
cmp
outsb
xor
adcb
shlb
imul
jb
sub
sub
test
dec
fmuls
and
push
mov
dec
jno
fxch
push
mov
mov
pop
test
lahf
sbb
lock
mov
mov
cmp
ret
jb
fldl
push
cli
aaa
ljmp
push
sbb
pop
xor
ja
lahf
sbb
add
adc
lret
add
ret
inc
xor
call
fstpt
mov
out
mov
adc
bound
push
mov
push
and
out
mov
or
ljmp
and
xchg
movsb
mov
in
jg
mov
xor
pop
mov
sbb
mov
cmp
or
and
loop
dec
mov
into
inc
dec
repz
jmp
adc
dec
test
push
adc
out
push
push
pop
cltd
xchg
leave
sub
xchg
jmp
filds
add
mov
xchg
inc
loope
shr
pushf
jae
adc
pop
dec
fsubp
mov
lock
xchg
sub
lock
sbb
outsb
xlat
xchg
xor
into
mov
iret
stc
adc
adc
call
mov
push
scas
mov
cmp
adcl
lret
jmp
mov
shl
inc
aam
pop
sbb
lea
sbb
pop
cmp
xor
xor
add
dec
pop
push
fldl
mov
cmpsb
mov
adc
or
repnz
andl
std
rolb
and
dec
ds
push
dec
loop
decl
sub
fidivs
orl
dec
sbb
in
xchg
cwtl
and
push
xor
fcoms
jns
dec
add
sub
adc
dec
and
in
sub
sbb
insl
lds
loop
push
sub
movsb
pop
cmp
aad
ds
out
into
lcall
and
add
outsl
xchg
mov
xor
aam
rcl
mov
aad
stc
and
fstps
sbb
idivl
push
sbb
fsubrp
fnstenv
xchg
sub
sbb
fldt
pusha
xchg
insl
sbb
rcl
add
mov
divl
fsts
lods
test
cmp
dec
push
cmpsl
nop
xor
sbb
xchg
mov
xchg
jb
push
sub
in
mov
dec
or
sub
in
das
adc
lahf
pop
push
mov
add
call
fisubs
test
adc
movsl
orl
and
mov
inc
xor
mov
in
aaa
jle
pop
pop
mov
shlb
xor
and
push
leave
imul
add
add
jne
icebp
loope
or
jmp
mov
rclb
dec
jmp
sub
scas
pop
test
pop
inc
test
mov
clc
leave
mov
adc
mov
mov
jle
xchg
mov
pop
call
ror
fadd
test
ss
imul
shrl
inc
xchg
rorl
inc
mov
call
inc
not
test
pop
add
aaa
xchg
push
xlat
shrl
pusha
dec
push
mov
sub
pop
sbb
mov
stos
inc
mov
cmp
push
imulb
cld
test
outsl
and
movsb
xchg
jle
dec
mov
dec
dec
cmp
loopne
dec
cmc
or
sbb
sarl
xorl
xor
stos
aad
dec
push
enter
into
xor
inc
sub
inc
or
jmp
pusha
sub
popa
xor
pop
outsb
hlt
sbb
inc
inc
xchg
xchg
xchg
jbe
pop
cmp
cmp
das
leave
mov
gs
mov
negb
test
mov
fimuls
sti
mov
sub
jns
dec
fdivrs
jb
cmp
arpl
in
dec
sbb
jmp
lret
or
mov
jle
xlat
pop
leave
dec
cmpsb
push
outsl
push
mov
idivb
and
push
push
xchg
or
dec
insb
adcl
movsb
mov
xor
out
mov
mov
fdivrs
adc
call
dec
jb
pop
inc
lret
cmp
bound
mov
pop
mov
xchg
jmp
and
out
adc
mov
pop
outsb
sub
outsb
or
dec
inc
out
xchg
test
sub
cwtl
push
add
int3
into
jge
out
lock
mov
jno
xchg
lods
xor
ljmp
mov
xor
push
sbb
mov
insb
jb
sbb
lret
ret
lret
dec
jmp
enter
lret
sub
xchg
add
xor
mov
shlb
dec
pop
push
pop
stos
xor
sub
pop
add
jmp
mov
mov
das
ret
cwtl
movsb
dec
add
ja
ljmp
push
shlb
cmp
stos
lret
lods
dec
or
mov
adc
push
xchg
sbb
cmpsl
xchg
xor
sub
push
mov
jle
jnp
sahf
testl
cs
cmc
nop
lahf
insl
and
inc
xchg
xor
insl
and
stos
xor
cmp
stc
inc
jle
xor
loopne
xor
and
lock
fcmovnu
lret
clc
sbb
into
out
loope
mov
cmp
jno
and
push
xor
mov
movsl
repnz
out
shr
data16
hlt
dec
sbb
sub
jmp
andb
pushf
repz
lods
dec
mov
inc
add
push
sbb
subb
mov
xchg
mov
movsl
add
enter
xchg
jmp
cmpsl
lea
adc
test
adc
dec
data16
imul
int
mov
mov
adc
dec
push
cmpsl
test
jmp
push
lods
dec
mov
icebp
arpl
cmpsl
push
dec
dec
adc
aam
pop
or
adc
mov
adc
out
pop
cli
shrb
lret
cmp
ljmp
or
dec
push
push
notb
or
add
pop
mov
jecxz
mov
push
call
push
jmp
aam
pop
sub
mov
lcall
pop
and
or
xor
loopne
mov
push
cmp
cmp
test
mov
and
add
mov
je
xchg
lods
mov
andl
xor
sub
mov
push
add
xchg
mov
insl
dec
push
arpl
push
rolb
scas
js
mov
xlat
dec
pop
lds
add
dec
pushf
icebp
sbb
lret
outsb
mov
movsl
insl
mov
mov
and
arpl
push
push
cmp
cmc
mov
mov
mov
ja
icebp
cmp
leave
add
stos
add
or
push
pop
dec
mov
rorl
mov
fxch
xchg
cmpsl
add
mov
mov
xchg
xchg
dec
imul
cmp
jl
sub
jecxz
jl
add
push
pop
jnp
leave
adc
mov
ret
bound
mov
sub
push
icebp
data16
inc
cmp
add
lret
pop
and
xor
aaa
leave
mov
aam
shl
leave
mov
daa
jbe
stc
inc
xchg
xchg
je
push
stos
cmp
mov
outsl
inc
and
popfw
call
leave
idiv
mov
in
hlt
arpl
rol
mov
loopne
dec
jg
cmpsb
push
sub
adc
insb
push
cmpsl
mov
pop
sub
cmp
mov
add
and
enter
cmp
leave
inc
lret
inc
sub
mov
aaa
mov
pop
add
rol
mov
inc
mov
sbb
xchg
jecxz
test
in
cltd
shll
push
in
sub
leave
push
add
sub
lret
ljmp
mov
hlt
jmp
or
sbb
cmpsb
lret
test
dec
xorl
or
ja
lret
xor
xchg
sub
adcl
xlat
leave
xorb
dec
je
pop
add
nopl
sbb
sub
enter
cmpsb
into
dec
mov
pop
add
jo
pop
loope
fcoms
adc
add
mov
fcom
inc
xor
push
ja
stc
xchg
sbb
sahf
out
adc
push
inc
add
data16
and
mov
and
cld
push
nop
fxch
sbb
ja
hlt
push
push
into
ljmp
or
push
jecxz
dec
sbb
dec
push
mov
mov
lods
fists
push
xor
pop
xchg
lahf
cwtl
or
sub
jecxz
xor
or
mov
push
loopne
test
arpl
fsubr
jo
adc
or
pop
icebp
push
cmpsl
into
dec
adc
aaa
clc
dec
fmull
sbb
mov
addr16
int3
negb
push
xor
rolb
sub
add
hlt
mov
int
push
mov
sti
lret
inc
sbbl
or
cmpl
mov
sub
mov
jno
mov
jp
cs
loope
iret
adc
inc
scas
mov
push
cld
sub
dec
pop
mov
test
les
bound
int3
pusha
xchg
mov
mov
push
or
xchg
lret
std
int
push
adc
sbb
or
sub
in
outsl
push
dec
xor
xor
dec
cmpsb
push
cmp
pop
jmp
cmpsl
out
adc
push
or
cwtl
stos
pop
xor
test
mov
push
fabs
jb
in
test
dec
and
vpsllq
adcb
js
lea
sbb
cmpsl
rolb
out
adc
inc
push
inc
cmp
addb
push
mov
into
inc
arpl
push
cmpsl
out
adc
shlb
std
call
scas
subl
outsl
dec
cmpsb
jecxz
jle
dec
sbb
mov
or
and
inc
mov
fdivl
fstl
fiadds
push
or
shlb
push
and
jo
arpl
stc
cmpsb
and
pop
adc
mov
pop
push
lods
inc
aaa
adc
aam
adc
fadd
fildll
and
cmp
jmp
jle
jno
aas
scas
loope
xor
push
sbb
sub
cmpsb
loop
mov
push
repz
jb
jmp
dec
cld
mov
leave
xchg
aam
das
ret
push
jno
sub
mov
lods
or
push
push
lret
cwtl
mov
repz
sbb
sub
cmp
rorl
mov
mov
leave
fstl
xlat
push
mov
test
jae
addl
mov
mov
or
dec
mov
leave
mov
xchg
inc
ljmp
sub
scas
roll
sti
adc
xor
call
fwait
push
daa
dec
or
rolb
cmc
cwtl
adc
push
stc
ss
or
mov
push
shll
and
test
pop
mov
clc
lcall
jbe
cmpsb
mov
sbb
outsl
int
mov
pop
addr16
xorl
adc
add
rcrl
dec
dec
scas
mov
add
repz
inc
sub
hlt
pop
jb
dec
into
add
dec
fwait
into
sbb
je
cltd
xchg
sbb
scas
jbe
dec
mov
push
xchg
add
mov
cltd
or
pop
and
lret
repnz
sbb
push
pop
xchg
jmp
sub
and
shrb
xor
and
loopne
cmpsb
mov
movsl
subb
out
shll
icebp
lods
push
testb
add
int
adc
mov
cmpsb
inc
mov
dec
rcr
dec
sub
pop
ret
mov
js
in
fnsave
or
push
rolb
and
xchg
popf
ret
lock
jae
andl
andl
jno
stos
lds
fildl
fimuls
fwait
dec
mov
mov
sahf
pop
mov
sbb
pop
sbb
aas
push
dec
dec
push
pop
mov
dec
mov
lds
sub
enter
outsb
ss
xchg
jb
lahf
inc
add
add
inc
and
mov
loope
sub
dec
pop
or
add
add
sub
push
or
xchg
mov
jnp
add
cmp
in
mov
mov
fstps
push
mov
clc
jno
aaa
dec
xor
inc
pop
call
mov
jb
adc
pushf
adc
dec
das
and
push
dec
loope
push
int
dec
into
or
out
adc
iret
test
sahf
es
loope
rcll
fbld
cmpsl
mov
int3
and
sahf
xchg
lret
int3
sti
fildl
enter
es
push
cltd
jmp
add
or
divl
imul
cmpsb
repz
sbb
mov
adc
or
jecxz
xlat
int3
push
arpl
outsb
jge
idivb
jp
cmp
mov
adc
sahf
sarl
shll
cmp
xor
mov
xchg
imul
xor
jae
jno
sbb
test
jae
das
out
loope
pop
lea
inc
aam
cmp
cmpsl
push
arpl
jb
lods
sub
aaa
xchg
ljmp
outsl
jbe
mov
dec
push
cmp
add
or
add
push
shrl
pop
xchg
dec
inc
imul
fxch
mov
or
adcb
cmp
jb
sbb
and
adc
pop
mov
call
mov
pop
inc
or
lods
arpl
mov
inc
and
xor
cltd
int
rclb
leave
mov
mov
into
mov
fs
hlt
dec
xor
jg
mov
lods
icebp
nop
mov
dec
xor
push
mov
mov
mov
push
xchg
out
add
mov
mov
stos
inc
lods
jae
clc
dec
in
sub
jmp
mov
mov
in
xor
push
loop
loope
and
fimull
pop
sub
rcrl
mov
jb
xchg
push
push
jmp
fistl
add
push
int
mov
add
ds
dec
add
call
xchg
xchg
insl
pop
mov
mov
pop
mov
rcll
lods
sbb
mov
das
sub
jb
mov
push
popa
push
mov
in
arpl
and
xor
mov
jecxz
dec
push
push
andb
inc
fchs
dec
pop
adc
sbb
jecxz
mov
sahf
enter
push
xlat
or
sub
adc
xor
popa
push
ja
inc
or
call
dec
repz
lds
shlb
pop
ja
mov
push
loope
push
xchg
in
add
mov
stc
int
or
xchg
movsl
or
mov
pusha
sub
xchg
out
inc
decl
leave
fdivrp
psubsb
inc
test
call
or
cmc
loopne
cmpsb
add
cmpl
jae
dec
mov
insl
js
dec
xchg
dec
adc
mov
hlt
leave
mov
mov
aas
add
loopne
stos
cmp
imul
mov
lods
jmp
movsl
or
add
or
cmpsb
jecxz
sbb
je
push
jp
pop
dec
add
loop
add
addl
loop
cmp
and
aad
dec
mov
pop
dec
xor
lret
lret
push
popl
mov
aam
xlat
ret
sar
in
jae
mov
and
aad
scas
cwtl
insb
or
or
jmp
jne
test
enter
or
cmpsb
pop
or
push
hlt
or
add
dec
push
jp
cmp
imul
cmp
sbb
test
xorl
imul
dec
js
dec
fadd
out
loopne
jl
inc
xor
test
imul
or
stc
cmp
dec
popa
ja
mov
imul
lods
movb
vaddsubps
inc
lods
fsubrs
dec
sbb
jno
mov
or
imul
push
or
adc
stos
add
in
imul
pop
sub
cmp
clc
and
pop
mov
or
test
mov
hlt
in
sahf
jno
mov
mov
mov
sub
xor
sub
test
scas
dec
and
dec
dec
sahf
jno
or
ss
lea
rolb
inc
lcall
loopne
xor
mov
or
lret
out
data16
jmp
cmp
sarb
and
lret
jecxz
nop
enter
or
outsl
jnp
pop
sub
std
jl
adc
les
pop
sub
sub
or
cmp
cmp
dec
call
inc
mov
push
lds
dec
jno
sbb
dec
imul
jmp
pop
lock
lret
leave
cmp
or
stos
xchg
add
leave
adc
inc
jbe
je
push
idivl
dec
cmp
mov
cmp
cmp
mov
fldl
jnp
movsb
int3
mov
xchg
mov
jae
or
stos
sbbl
stc
das
dec
roll
or
sarl
sahf
leave
add
stos
pop
inc
shr
fadd
cmp
dec
out
pop
fwait
push
arpl
xchg
inc
xchg
cmp
mov
out
mov
stc
loopne
and
or
jmp
or
out
inc
int
mov
xor
sub
dec
test
lcall
out
dec
inc
mov
and
inc
mov
and
push
addr16
push
pop
mov
push
stc
jbe
or
jae
dec
jae
clc
mov
xor
lret
fcmovnbe
xor
pop
pop
push
push
fistps
cmp
or
dec
add
or
int
jnp
or
dec
jmp
xor
leave
in
lds
lods
dec
daa
enter
lret
subl
mov
lock
mov
popf
mov
dec
out
jno
sub
pusha
lret
loop
mov
jmp
or
dec
jecxz
push
movsb
sbb
xchg
sub
out
xor
mov
lcall
inc
sbb
dec
icebp
pop
pop
jbe
test
mov
int3
test
les
push
pop
out
pop
cmp
push
mov
subb
mov
mov
movsb
sub
test
sbb
mov
pop
cmpsl
mov
xchg
add
and
dec
sahf
mov
cmp
rolb
pop
in
push
sub
loopne
push
xor
fmuls
xchg
push
pop
sub
imul
pusha
out
jb
inc
cmpsl
enter
das
push
dec
cld
cmp
dec
push
stc
outsb
lods
or
es
in
dec
jbe
stc
cs
aaa
adc
dec
adc
dec
test
into
push
cmp
dec
adc
inc
iret
arpl
mov
fs
add
test
out
bound
js
mov
ss
xor
jmp
adc
in
inc
div
sbb
call
push
insl
dec
and
dec
sbb
cmpl
push
lea
jbe
adc
lods
and
ret
out
dec
sub
aad
repz
mov
jl
or
mov
shll
sti
mov
outsl
lods
data16
xor
fcmovne
or
aaa
jge
sub
lea
out
rclb
lret
pop
push
mov
int
and
dec
rorb
lods
cmpsl
jbe
out
add
lret
cmpsb
das
sub
xor
add
mov
pop
push
pop
jno
mov
sub
dec
loop
push
jle
test
je
test
or
fld
or
mov
sbb
mov
and
and
sbb
mov
out
mov
popf
push
outsl
push
sbb
xchg
je
or
push
mov
adc
and
bound
and
movsl
mov
sbb
mov
cmpsl
mov
rol
or
pushf
xor
lea
add
mov
sub
mov
adc
add
lahf
and
std
enter
or
hlt
nop
or
jnp
lods
es
dec
cmpsl
enter
jo
andl
cmpsl
pop
addr16
add
loopne
mov
mov
push
jecxz
stc
sbb
mov
adc
insb
jae
les
or
lret
lahf
jmp
sarl
or
js
rcl
aas
or
and
pop
cmp
js
mov
push
xchg
stc
jp
dec
aad
call
xchg
into
dec
mov
cltd
into
push
and
mov
inc
sub
pop
rorb
arpl
jno
cmc
adc
sub
or
sbb
or
or
or
sub
mov
nop
lds
sub
nop
jg
aam
xchg
push
jne
push
rcll
mov
pop
in
insl
adc
mov
enter
or
int
shrb
and
mov
sub
sbb
iret
mov
mov
hlt
shll
orb
fidivs
loope
iret
inc
bound
inc
stos
cmp
xorl
and
cs
mov
mov
ss
sarl
mov
lods
sub
xchg
mov
mov
cmp
dec
lcall
jecxz
sub
jnp
and
and
jbe
push
loop
arpl
dec
cld
push
stos
xor
jecxz
int3
int
xor
push
sbb
fsts
mov
jge
and
inc
shr
mov
pop
xchg
jns
lret
xor
and
rorb
scas
hlt
mov
lret
dec
test
sti
inc
pop
ficoms
cmp
and
add
xchg
mov
in
and
mov
fnstenv
push
insb
enter
loop
adc
pop
pop
ret
dec
mov
imul
inc
lock
cmp
sti
xchg
pop
ljmp
or
sub
andb
lods
xor
lods
fbstp
jle
mov
std
sahf
insb
inc
std
add
das
push
das
jge
cs
adc
xchg
mov
xchg
les
in
jno
mov
or
push
lss
rcl
pop
incl
fmull
inc
enter
add
xchg
mov
pop
stc
into
dec
inc
and
pop
push
and
sbb
xlat
daa
fdivrs
cmp
lcall
pusha
add
cmp
push
sarl
push
dec
adc
dec
jl
bound
and
sub
lcall
bswap
inc
xorl
shll
leave
call
ja
inc
inc
jmp
adc
sbb
inc
mov
mov
jle
dec
dec
mov
push
iret
lods
cld
rorl
out
sub
xor
and
push
fcmove
mov
and
sbb
pop
cmp
or
insb
or
mov
mov
add
sbb
inc
mov
mov
aaa
popf
cmp
pop
sub
ljmp
das
push
insb
xchg
xor
into
mov
xchg
cwtl
cmp
dec
cmp
and
mov
jge
pop
xchg
dec
mov
lret
cld
nop/reserved
sti
mov
out
push
mov
adc
or
imul
subl
xor
outsb
stos
hlt
and
subps
in
sbb
bound
std
cmpl
enter
inc
in
hlt
or
cmpsl
jecxz
fcompl
loop
mov
dec
repnz
fnstcw
sbb
or
cmp
push
test
mov
clc
lea
clc
jp
addr16
bound
inc
sub
or
push
or
cltd
dec
jmp
lcall
cmp
mov
or
xor
jb
fisttpll
shll
jbe
push
dec
lods
stc
push
mov
int
js
cmpsb
insb
mov
scas
fdivl
mov
data16
lods
cmp
pop
stc
rol
jo
cmpsl
adcb
sahf
leave
push
xlat
inc
jecxz
cmp
pushf
jl
mov
popf
lock
out
jp
pop
sbb
and
dec
pop
das
mov
pop
sbb
jbe
and
mov
cmp
jo
test
fcomps
mov
int
jne
cmp
jbe
adcb
lret
push
imulb
push
push
test
fsubrs
iret
mov
xchg
pop
iret
test
outsl
push
int
shlb
adc
hlt
mov
dec
movsb
dec
lods
ss
out
aam
jecxz
and
test
jl
mov
shlb
int
sub
scas
nop
pop
mov
pop
and
aad
int3
mov
in
mov
sub
fimuls
inc
adcl
das
pop
mov
movb
lret
mov
cmp
cmp
ret
cmc
mov
orl
mov
push
cld
dec
and
hlt
dec
push
mov
jecxz
xchg
insl
push
mov
movb
int
lds
test
enter
imul
pusha
adc
jecxz
jg
lock
mov
dec
ss
test
popa
xorb
int3
mov
aam
jecxz
cmpb
into
adc
sti
sbb
push
pop
cmpsb
mov
and
lcall
xchg
push
jp
or
xlat
or
add
sub
mov
pop
fwait
mov
repnz
mov
out
add
dec
aad
pop
adc
call
push
xor
andb
and
add
add
dec
dec
add
mov
cmpsb
jnp
pop
cmp
adc
cmp
xchg
dec
fld
jecxz
cmpsb
or
or
test
pop
mov
ret
cmp
dec
negl
sahf
movsl
and
jecxz
in
cmp
add
popl
and
mov
or
dec
fxtract
nop
inc
rcll
inc
dec
cltd
pop
incl
mov
add
int3
cltd
mov
cmp
inc
sbb
je
push
subb
dec
punpcklbw
pusha
sbb
mov
mov
mov
jmp
push
sarb
jmp
loopne
sub
push
mov
mul
mov
test
or
sub
insb
iret
mov
push
mov
cmc
popa
dec
jle
mul
sbb
push
inc
out
or
jecxz
or
mov
push
pusha
adc
add
or
leave
iret
in
or
pusha
nop
cmp
xor
xchg
test
sub
adc
sbb
sub
js
imul
int3
mov
lods
insl
imul
addl
xchg
sbb
xchg
cmp
ja
mov
mov
popf
ds
in
push
in
mov
pusha
fadds
sti
out
ljmp
addl
xor
push
cmpsb
aad
int
jb
adc
push
push
cwtl
mov
cmp
inc
add
xor
cmp
add
imul
add
lea
mov
pop
inc
jno
mov
xchg
adc
pop
lock
cmpl
testl
xor
lcall
mov
insb
add
int
pop
sti
dec
dec
push
cmp
lods
lret
inc
sbb
aam
ret
sbb
insb
dec
imul
cmpsb
bound
mov
mov
ror
imul
add
into
and
or
pop
cmp
aaa
insb
data16
int
mov
fildl
in
sub
mov
push
xor
pusha
xchg
sub
mov
inc
push
fldcw
jmp
push
xchg
andl
inc
popa
sub
fsubrp
loope
dec
insl
das
lret
fwait
add
int3
int
dec
push
push
fisttpll
mov
pusha
test
add
mov
jno
and
into
mov
inc
aam
lock
push
and
mov
loop
pop
sarb
rcrl
fcomps
sub
ljmp
inc
dec
movb
sub
ret
ficompl
push
xor
and
push
arpl
test
leave
pusha
pop
icebp
orb
test
mov
mov
sbbb
inc
hlt
repz
add
or
dec
pusha
lahf
ss
lds
cmpsl
mov
or
jl
push
cli
pop
in
hlt
and
add
out
push
and
jmp
inc
sbbl
leave
dec
mov
inc
cmc
movsl
sbb
cmp
cmp
enter
or
mov
hlt
std
pop
outsl
dec
mov
lret
jns
add
iret
lret
mov
sti
pop
xchg
cmpsb
jo
push
in
xor
cmpsl
adc
sub
mov
mov
negb
inc
int3
out
and
rorb
mov
and
mov
mov
ret
cld
lock
sbb
fs
jmp
addl
imul
and
fisttpl
cld
cmp
test
add
dec
in
das
mov
arpl
xchg
add
pop
outsl
sub
or
adc
jne
subb
cmc
sub
cmp
es
in
xchg
in
mov
inc
inc
mov
mov
les
jnp
xchg
add
or
dec
or
cmp
adc
xor
pop
es
adc
iret
xchg
dec
xchg
inc
or
cmp
pop
sbb
inc
int
inc
mov
iret
ror
jbe
inc
or
mov
sahf
pop
fmul
dec
stos
dec
jmp
push
add
inc
andb
rolb
xchg
dec
mov
mov
test
sti
xchg
lret
or
int3
insl
add
sub
out
xor
mov
cmc
test
mov
popa
sub
cld
loop
mov
iret
mov
aam
lea
rclb
cmpsl
mov
jo
sub
and
fstps
mov
sub
xor
les
adc
stc
std
pop
xorl
push
fisubs
dec
adc
andl
mov
pusha
mov
ds
cmp
int
cmpsl
jne
cltd
mov
enter
xor
lret
lods
xor
shrl
dec
dec
iret
lock
inc
rcrb
test
lods
jne
flds
popa
rcll
and
daa
xor
cmp
inc
mov
add
add
dec
ret
dec
lock
cmp
pop
ficomps
pop
add
rorb
inc
cmpsl
mov
lret
or
scas
xchg
pop
pop
cmp
push
xchg
dec
cmp
fisttpll
xchg
mov
mov
xor
stc
icebp
pop
xor
insb
inc
in
push
movsl
lret
pop
int3
test
push
mov
xchg
mov
sbb
mov
loopne
add
mov
xor
clc
into
test
mov
xchg
dec
and
ret
lcall
push
sub
ss
sti
mov
cld
nop
pop
in
enter
ret
pop
push
pushf
rcr
dec
pusha
sub
dec
adc
cmp
ret
mov
cmp
inc
clc
ret
mov
dec
or
xchg
jge
loopne
pop
add
in
subb
jmp
add
shll
ret
add
add
dec
pop
pop
inc
lea
in
cmpsb
and
shl
dec
jne
cmpsl
out
in
adc
adc
lgs
mov
mov
das
clc
dec
sbb
cmpsb
dec
hlt
loopne
pop
lds
movb
call
xlat
adc
xlat
insl
push
divb
clc
or
es
ror
xchg
cmp
int3
mov
or
fisttpl
mov
mov
jl
sbbb
inc
mov
push
mov
out
orl
inc
popa
negl
int3
push
popf
andb
fxch
jg
in
std
sub
inc
jecxz
pop
clc
push
ss
push
or
int
mov
xor
push
out
inc
cmp
mov
mov
xchg
add
std
pop
add
aaa
push
pop
call
inc
hlt
and
and
ret
adc
mov
fwait
inc
mov
filds
push
xor
fsts
sbb
or
xor
xor
adc
push
shrl
bound
jno
sub
arpl
hlt
aad
dec
stc
fcoms
pushf
jmp
scas
repz
jecxz
call
stc
cmpsl
in
add
insl
sub
sub
aad
mov
sub
test
push
lds
xchg
xor
movsl
sub
pushf
pop
stos
popa
out
sahf
xor
push
push
xor
shlb
es
lods
push
and
popa
mov
dec
xchg
stc
xchg
mov
pop
adc
bound
inc
daa
jge,pn
dec
add
test
pop
push
or
cmpsl
pusha
push
sub
std
imul
xchg
clc
inc
adc
xchg
mov
dec
in
mov
pop
inc
arpl
dec
fsts
push
sbb
mov
nop
add
push
mov
or
sub
enter
pop
or
data16
and
push
jns
mov
mov
or
inc
lods
jmp
das
cmp
popf
or
mov
mov
sub
shll
fidivs
xchg
or
jno
movsl
push
test
and
pop
rorb
pop
dec
sub
js
inc
pandn
arpl
aaa
or
mov
dec
and
imul
sub
or
test
mov
push
mov
repnz
cmp
arpl
sub
mov
fldcw
cmp
cs
aaa
sub
ret
pop
je
arpl
sar
leave
inc
sub
adcl
sti
xchg
adc
fnstsw
or
cmc
ret
sub
addb
mov
adc
dec
cmp
cltd
fs
notl
add
shl
mov
in
add
pop
add
sti
cmpsb
cmp
loop
pop
jne
add
add
outsl
vandnps
xchg
jecxz
fdivs
jbe
repz
adc
jge
or
pusha
mov
dec
add
adc
es
bound
dec
jb
adc
sbb
mov
xor
sti
nop
daa
lahf
int
cltd
push
push
sub
int3
pop
dec
or
fstl
fsubrs
and
push
xor
adc
sub
or
or
jno
mov
jmp
ljmp
pop
add
sbb
imul
out
pop
xor
mov
hlt
movsl
mov
rclb
nop
inc
je
jo
jmp
shll
sbb
mov
in
pop
addr16
jmp
lahf
or
cmc
push
sub
add
or
outsl
add
inc
jge
pusha
pop
mov
xchg
jns
xor
pop
cwtl
in
adc
sbb
sbb
dec
popa
sub
pop
push
sub
les
imul
test
push
enter
push
and
adc
sbb
mov
out
push
inc
pop
or
inc
jno
rorb
add
rclb
cltd
push
inc
fldcw
lahf
cmp
mov
dec
lods
imul
sub
xor
mov
icebp
push
inc
xchg
or
jp
inc
inc
movsb
sbb
cmp
adc
cmp
push
mov
pop
lods
inc
jae
mov
push
push
cmp
aas
lods
ret
or
lods
xor
sbb
dec
lock
pop
add
pusha
arpl
fsubs
dec
and
adcb
inc
or
or
inc
sub
inc
cld
rorb
and
jl
lds
sub
or
sub
sub
lret
or
lret
clc
rorl
sbb
gs
js
adc
xor
cmp
mov
sbb
pop
push
push
loopne
sub
movsb
add
pop
aad
mov
shrb
aad
dec
dec
shl
in
sbb
sub
pop
mov
jns
jl
inc
test
cmpsb
out
decl
adc
push
ja
mov
cmp
dec
test
outsl
push
inc
fadds
push
outsl
mov
ja
sbb
xchg
sub
xlat
mov
aaa
sbb
inc
xor
mov
pop
or
pop
jo
or
addl
sub
add
push
daa
jecxz
lcall
popf
sub
aam
jnp
loopne
pop
adc
push
ret
pushf
push
mov
add
mov
bound
push
push
mov
subb
and
dec
xchg
lods
cmp
inc
cmp
ret
cmp
mov
cmp
loop
fsts
iret
add
inc
out
and
or
add
mov
lods
sbb
and
into
mov
or
xor
lds
inc
cmp
out
push
dec
addl
inc
jmp
xor
cmp
jl
xchg
aad
imul
call
mov
mov
add
inc
imull
jle
jns
mov
inc
stos
es
mov
or
sbb
or
insb
jle
lcall
dec
pop
std
xchg
fldenv
loope
dec
loop
loope
subl
adc
push
enter
pop
fwait
mov
jbe
push
fisubs
shrl
inc
out
in
push
pop
daa
sti
cmp
imul
lock
in
xor
test
add
psraw
and
inc
lock
dec
popa
fs
cmp
inc
and
inc
xor
hlt
enter
xchg
sbb
sub
jo
xor
and
fbstp
loope
sub
xchg
int
ds
clc
push
outsb
out
jmp
xlat
fisttpl
stos
ljmp
adc
and
scas
jnp
dec
rcl
sub
add
mov
pop
mov
mov
dec
fsubrs
dec
xlat
hlt
test
inc
addb
mov
in
add
inc
sub
push
arpl
jns
dec
or
mov
push
mov
mov
or
mov
adc
pop
push
jmp
andl
ror
leave
cmovo
inc
dec
in
lods
call
shll
imul
stc
insb
rolb
push
imul
dec
rorl
sub
and
add
loopne
pop
cmp
out
mov
lock
icebp
inc
test
rcl
insl
inc
push
daa
inc
or
push
enter
sbb
shl
mov
dec
dec
sahf
mov
test
int
int3
test
or
sub
xchg
mov
mov
sub
out
dec
mov
enter
mov
inc
push
mov
leave
shlb
scas
into
arpl
int
sub
xchg
add
mov
clc
push
shlb
test
in
jnp
insl
mov
mov
dec
bound
mov
mov
jle
mov
xchg
pop
lock
int
stc
push
lods
mov
dec
idivl
lret
mov
inc
cwtl
dec
inc
jmp
out
pusha
leave
sahf
fcmovu
xchg
pop
clc
mov
or
dec
lret
arpl
push
adc
push
idiv
and
inc
imul
jb
lods
push
push
test
sub
or
inc
xchg
test
and
sub
adcb
dec
push
cwtl
ljmp
test
mov
divb
into
inc
nop
sbb
lods
jl
or
push
dec
iret
mov
push
inc
ss
pop
js
insb
inc
or
dec
fisubrs
addr16
mov
cmp
int
pop
mov
rcl
es
aad
dec
cmp
cmp
mov
int3
jbe
mov
ret
push
jmp
mov
lock
cmc
addb
movsl
nop
int
pop
mov
mov
inc
enter
dec
sbb
mov
test
xchg
mov
sub
testl
hlt
sbb
xor
int3
inc
icebp
inc
push
or
insb
pop
jle
sbbl
adc
pop
sahf
add
mov
stos
pop
out
repnz
or
adc
jecxz
std
sbbb
sub
pop
xchg
or
xchg
mov
arpl
add
lea
cmp
pop
pop
cmpsb
cmp
xor
fyl2x
cmpsl
sub
pop
sub
inc
dec
push
cmp
cld
inc
inc
outsl
fldt
xchg
sti
and
das
and
sahf
dec
stos
fsubrs
cs
lods
movl
sub
leave
push
imul
ret
outsl
sub
shl
mov
into
adc
xchg
into
loopne
or
or
jecxz
sti
sbbl
rclb
inc
ja
sbb
sub
test
mov
mov
dec
fcmovnb
addl
and
mov
dec
sbb
or
imul
out
inc
lods
lods
test
sbb
dec
jecxz
daa
fsts
das
push
imul
dec
andb
inc
enter
test
mov
pop
into
cmp
pop
lret
xchg
mov
pusha
xlat
cltd
fs
lods
mov
push
dec
push
pop
enter
enter
or
mov
dec
inc
jge
mov
ffreep
sbb
pop
outsb
inc
aad
cltd
pop
scas
loope
and
cmc
lds
inc
loopne
ret
pop
jmp
dec
jl
outsl
loop
rcrl
sbb
mov
test
divb
dec
scas
inc
xor
push
push
addr16
mov
popa
inc
and
pop
cmp
loope
inc
dec
mov
inc
inc
ret
fsubrs
sub
pop
lds
and
mov
pop
stos
ret
pop
ljmp
cmovnp
mov
enter
shl
or
pusha
adc
push
clc
inc
movsl
inc
mov
adcl
dec
lods
push
call
lods
nop
inc
and
lret
lods
mov
inc
mov
clc
or
inc
adc
jno
cld
jecxz
sbb
fwait
lret
or
pop
loop
ret
fisubs
sub
inc
inc
xchg
in
imulb
aaa
sbb
movsl
or
stc
xchg
std
sub
iret
adc
dec
aaa
fwait
in
mov
xor
xor
xor
out
mov
aad
adc
sahf
lods
lahf
clc
addl
ja
lret
nop
movsb
popa
leave
sbb
lds
int
in
sbb
dec
rol
push
repnz
sub
push
aaa
test
adc
movl
sub
pushf
cs
xchg
mov
aam
push
cltd
iret
or
or
cltd
ret
sbb
data16
xor
cmp
or
cmpsb
adc
xor
adc
pop
cmp
imul
and
in
mov
clc
mov
movsl
insl
dec
cmp
ficomps
mov
pop
jp
jo
fnstenv
movsl
or
daa
xor
mov
leave
sub
je
outsl
mov
push
fiadds
imul
xor
dec
jge
cli
inc
sub
adc
cmp
push
lods
mov
jb
sahf
ds
enter
pop
cmp
push
pop
lret
ret
adc
sbb
lods
mov
pop
push
jecxz
xchg
adc
daa
or
pop
das
fiadds
or
adc
xor
roll
or
pushf
inc
inc
and
dec
flds
les
rorl
push
cwtl
sbb
and
lds
lret
mov
cmpsl
lret
sbb
shl
stos
or
mov
or
pop
es
or
test
fsubrl
es
je
rcr
or
push
sub
test
cmpsb
pop
or
sbb
add
push
push
and
sbb
push
xchg
jnp
add
or
lahf
jb
adc
pop
shr
lea
insl
or
aaa
cmp
xchg
fs
xor
sub
xchg
cmp
insb
dec
mov
inc
jbe
sbb
dec
dec
dec
lret
bound
ds
lret
pushf
test
mov
lods
stos
sti
outsl
dec
pop
or
test
bound
cmc
je
adc
mov
lods
sub
mov
ja
mov
ficoms
and
ds
mov
xor
out
pusha
mov
orl
ret
cmp
pop
add
mov
adc
movsl
add
add
insl
test
dec
dec
lcall
xorl
cmpsb
inc
pop
xorb
stos
in
jno
inc
xchg
mov
cmp
push
movsl
or
aam
jae
jb
imul
push
inc
stc
aam
rcrl
popa
and
stos
sbb
std
test
test
xlat
and
ficompl
adc
fstp
mov
ret
cmc
add
movsl
cmp
or
or
adc
rcll
push
lods
push
ficoms
cmp
in
add
mov
adc
xchg
jp
nop
and
jnp
xor
adc
xor
cmpsl
pop
sub
mov
mov
or
lds
mov
xor
ret
scas
inc
in
cld
popf
test
sbb
or
leave
push
cld
sti
lods
push
and
sbb
popf
inc
pop
sub
mov
in
jmp
lahf
pop
roll
xchg
sbb
mov
addr16
faddp
je
xor
jge
cmp
xchg
and
pusha
dec
and
les
push
mov
dec
inc
sbb
test
sub
pop
or
sub
int
or
insl
fnstcw
push
repz
inc
jno
sub
out
cwtl
frstor
ss
inc
loope
inc
int
ret
sbb
xor
shr
pop
inc
mov
add
lret
xchg
cvtdq2ps
flds
pop
mov
int
fsub
lret
das
pop
mov
adc
pop
setns
or
fldenv
or
mov
add
push
shr
xlat
inc
cmc
push
fdivl
jg
les
mov
mov
mov
iret
ret
xlat
xchg
in
in
insb
les
and
ret
jne
fisttpl
add
push
mov
push
hlt
lods
cmp
add
int3
enter
pop
repnz
pusha
fwait
cwtl
aas
loop
sbb
lods
adc
or
jbe
rcl
test
mov
arpl
push
mov
mov
lahf
dec
insl
mov
pop
or
sahf
cmp
mov
cltd
xor
pop
jecxz
rcr
call
jb
xchg
dec
mov
add
jmp
shl
pop
and
mov
js
mov
mov
pop
sbb
ret
sahf
addl
dec
dec
jnp
out
lret
testb
insb
and
cli
es
cmc
cltd
lock
arpl
push
mov
div
mov
sbb
xchg
lret
sbb
pop
aad
sub
mov
mov
sar
or
jmp
lret
test
cmpsl
xchg
xorl
mov
push
out
faddp
jns
clc
adc
inc
or
mov
jbe
cmpsl
hlt
cmp
cwtl
fcmove
jmp
int3
fcmovb
or
leave
push
rorb
inc
inc
dec
push
xchg
mov
popa
cltd
and
pop
push
das
add
leave
mov
insb
dec
dec
pop
int3
movb
add
addr16
mov
sub
jb
add
or
leave
mov
add
icebp
jg
inc
push
lods
push
cmp
es
adcb
je
popa
pop
dec
sub
push
das
test
inc
push
inc
stc
dec
cmp
cmpl
xchg
test
or
fldt
pop
dec
out
push
and
popa
loope
jp
stos
lret
sub
leave
mov
clc
dec
jmp
sbb
dec
cmpsl
in
or
and
jnp
stc
mov
mov
cmp
cmp
sbb
call
push
or
addr16
xor
repz
or
inc
test
add
test
inc
lahf
and
pop
data16
dec
ficomps
repz
cmpsl
test
pushf
repz
pop
ja
sbb
and
mov
mov
lret
inc
in
pop
inc
xor
movl
aad
enter
adc
loope
and
insl
cmp
in
mov
inc
int3
lret
test
adc
out
mov
adc
add
loope
shll
lds
iret
fildl
and
test
xor
lods
push
stc
sbb
push
xchg
dec
rep
pop
inc
inc
adc
cmp
fildl
mov
insl
pop
lahf
rcr
add
mov
aas
add
sub
cmp
out
icebp
arpl
jl
inc
mov
inc
aaa
js
icebp
in
mov
cs
dec
aas
lret
dec
inc
clc
push
or
push
lret
jnp
popf
mov
sub
or
pusha
lods
cmpsl
sub
xchg
mov
jns
dec
inc
lods
inc
lea
lret
fld1
test
mov
frstor
sbb
and
or
sub
imul
fcoms
es
or
sbb
push
icebp
pop
pop
imul
mov
sub
mov
fistl
sub
sub
ljmp
ret
jmp
or
push
cli
test
mov
in
pop
movl
adc
stc
fimull
and
push
ret
xor
insl
addl
sub
hlt
or
cmp
cmp
and
rorb
imul
dec
lea
and
push
mov
clc
jbe
mov
rorl
popf
dec
push
adc
sub
push
repnz
sub
rolb
sub
sub
sub
aaa
out
xor
int
sub
imul
mov
adc
ja
je
add
jmp
mov
add
cmovae
movsl
or
inc
mov
push
std
jmp
dec
pop
das
inc
push
subl
add
push
push
xor
fisubl
popa
dec
outsl
pop
push
fsubrl
jmp
pop
pop
push
push
dec
mov
and
dec
sub
or
mov
int
aaa
in
out
xchg
call
xchg
bound
test
popa
xchg
fildll
bound
inc
lret
dec
cmp
pop
inc
dec
mov
sbb
data16
and
lcall
fcoms
fistps
shrl
xchg
or
sub
fisttpl
jmp
cmp
scas
je
loopne
or
xchg
fisttpll
sub
sbb
pop
inc
mov
adc
and
cmp
lds
rcl
pop
call
dec
clc
xchg
inc
dec
cmp
pop
hlt
in
inc
pop
dec
sahf
pop
dec
mov
rcr
cmp
mov
mov
or
repz
enter
or
lea
mov
stc
inc
sub
int
popa
and
imul
out
add
or
dec
inc
in
rcll
lods
inc
xchg
inc
sub
mov
add
rol
jp
inc
sahf
sarb
lret
insl
inc
and
mov
lds
pop
out
xor
das
sbb
or
sub
cmc
add
arpl
addr16
dec
in
xor
inc
adc
loopne
hlt
notb
in
xor
add
inc
adc
rclb
xlat
adc
and
lcall
push
pop
adc
mov
pusha
sti
test
xor
out
add
or
in
jo
pop
adc
sub
dec
hlt
scas
or
lods
iret
ljmp
les
mov
std
cli
imul
xor
shll
or
lock
pop
dec
popf
jmp
and
push
push
repz
sbb
xchg
lret
jmp
sbb
in
inc
adc
dec
xor
subb
cmp
repz
xchg
sub
pop
andb
sub
mov
out
fcmovnb
fs
xchg
popa
aad
dec
in
adc
pop
lock
out
mov
pusha
add
mov
int3
adc
xor
adc
dec
and
cld
pusha
or
or
adc
movsb
mov
pop
dec
cmp
push
jg
fs
and
mov
or
sub
push
lret
add
or
dec
movsl
sub
push
cmp
pushf
cwtl
test
jb
push
jge
dec
inc
sub
cltd
imul
pop
inc
hlt
sahf
ficoml
sbb
add
mov
movsb
or
sub
orb
xor
xor
sbb
stos
or
ljmp
add
pxor
cmpb
push
stc
push
lret
adc
cmp
adc
adc
jmp
lret
push
xchg
clc
hlt
mov
and
dec
cwtl
sbb
sub
or
es
adc
adc
push
jno
daa
push
lods
add
pop
push
imul
dec
push
in
xchg
jno
pop
pop
pushf
in
inc
aad
movsb
repz
mov
imul
in
cltd
inc
mov
subl
leave
pop
inc
cmp
inc
xlat
lds
or
xchg
inc
dec
or
or
fs
addr16
or
mov
inc
jmp
push
hlt
inc
ds
pop
dec
jg
out
sbbl
add
dec
lret
inc
hlt
int
insb
push
dec
push
push
cmpsl
mov
adc
test
bswap
jmp
cmpsl
repnz
pop
loop
cmp
cmp
stos
out
mov
imul
xor
mov
mov
adc
les
nop
shlb
icebp
test
push
iret
out
push
push
jno
nop
orl
jno
cmpsl
mov
loopne
sub
pop
jecxz
sub
hlt
xchg
jae
int
and
fisttps
sahf
push
fwait
cltd
inc
jo
xchg
sbb
repnz
inc
add
lret
dec
add
jle
rsqrtps
jmp
lret
mov
sbb
sub
sarb
jnp
das
push
add
sub
mov
roll
sarl
in
shrl
andl
lret
shll
dec
mov
inc
adc
or
push
andb
rorl
dec
cmp
mov
lea
aad
pop
xor
in
fs
cli
xlat
or
jmp
sbb
dec
xor
xchg
insb
xchg
scas
ror
xor
xor
scas
out
jbe
fmulp
push
mov
mov
ficomps
jae
pop
stc
aas
lea
cmp
rorl
xchg
dec
sub
cmpsl
jmp
std
or
or
stos
inc
dec
hlt
mov
imul
dec
mov
jae
lods
sub
ljmp
cmp
xor
dec
push
ret
mov
out
outsb
cmp
lods
or
adc
xor
enter
or
sub
push
leave
pop
pop
mov
jbe
fsubs
sbb
ret
mov
fisttpll
xchg
add
mov
mov
sbb
shll
icebp
cmp
jb
ljmp
mov
xchg
fwait
pop
fistpl
dec
and
push
sahf
jnp
subb
and
sub
sarb
inc
jno
fwait
mov
sbb
jo
loope
lret
ss
mov
pop
cmp
xor
mov
les
fdivs
inc
popf
mov
pop
rorl
aam
mov
mov
mov
and
addl
shlb
mov
loopne
inc
aad
mov
sti
pop
cs
push
sbb
out
sub
mov
jecxz
jne
scas
test
cmp
mov
xchg
hlt
jnp
fiadds
sahf
add
bound
dec
cmpsl
sub
push
cld
scas
ret
mov
cmp
sbb
inc
sub
adcl
xor
push
sti
adc
icebp
inc
sbb
sti
aaa
jg
fiaddl
push
lret
sub
and
out
pop
dec
cmpsl
int
enter
mov
test
or
dec
jnp
dec
scas
push
mov
lar
dec
jle
sub
addl
jge
inc
mov
or
dec
xorl
add
and
lret
dec
adc
adc
adc
inc
in
fadds
enter
jmp
mov
js
and
or
fldpi
inc
xchg
mov
cmpsl
sbb
cmp
dec
subb
test
ja
push
inc
mov
pop
sub
enter
jne
adc
jae
inc
push
adc
dec
cmp
sub
pop
add
fisttpll
int3
adc
aaa
xchg
dec
xchg
mov
xor
cmpsb
je
lods
sbb
cs
pop
cmp
or
or
pop
insb
bound
push
in
hlt
xchg
add
push
shl
or
test
int
fmul
fistps
arpl
sbb
xor
or
mov
fdivrs
lods
inc
adc
adc
insl
or
adc
aam
sahf
loope
push
mov
ret
push
cli
dec
rcrb
pop
in
inc
lret
pop
and
fildll
or
loopne
xor
das
stc
jl
push
xchg
or
out
push
push
pop
fwait
cmp
call
pop
inc
push
push
xor
push
jnp
push
xchg
dec
frstor
adc
dec
fdivr
cld
cmp
out
bound
sti
mov
roll
ss
cmp
jmp
insb
insb
push
or
xchg
aas
in
cwtl
add
out
addb
push
xor
daa
and
xchg
xorl
cmpsl
loop
jbe
sbb
inc
mov
jbe
mov
loope
arpl
jb
dec
dec
mov
mov
xchg
push
jbe
add
mov
inc
lods
mov
fiadds
jecxz
mov
test
sbb
in
out
jecxz
loope
mov
dec
mov
int
enter
mov
sbb
xor
inc
push
pop
pop
shrl
je
stos
xor
dec
loope
leave
dec
cmpsl
xlat
push
call
mov
push
call
cmpsl
cmp
andb
push
aam
xor
mov
lds
test
mov
mov
imul
aas
jbe
adc
andb
adc
stos
cmpsl
test
pusha
das
add
loopne
add
hlt
mov
aad
int
adc
mov
fwait
mov
sbb
xchg
and
dec
cmpb
jmp
je
mov
adcb
pusha
leave
jnp
pop
inc
adc
push
dec
pop
call
aam
sbb
loopne
pop
jge
aas
rorb
jle
leave
jl
add
lret
sub
mov
xchg
test
pushf
or
fxch
push
out
lea
les
or
test
mov
lret
push
sub
loopne
fiaddl
negl
inc
push
or
xor
mov
dec
pop
popa
sub
or
jmp
or
mov
and
dec
adc
push
cmp
sub
ljmp
sub
inc
and
xor
sahf
inc
fsubl
ss
bound
mov
fwait
or
dec
push
pop
fwait
inc
or
fbld
mov
dec
lods
sub
pop
mov
xor
jnp
mov
cmp
xchg
cmovb
xor
sbb
dec
pop
jmp
imul
test
loop
mov
or
mulb
lahf
mov
dec
push
lods
or
xchg
leave
in
cmp
push
dec
imul
idivb
inc
hlt
fmul
fidivrs
jae
pop
and
lock
sub
cmp
faddp
ja
test
or
and
insb
fadd
pop
lds
pop
cld
mov
pop
lret
mov
mov
cli
dec
jecxz
mov
stos
test
mov
outsb
jle
add
mov
movsl
addr16
dec
lock
push
xchg
out
adc
lea
inc
das
or
cli
inc
nop
or
sbb
mov
push
sbb
iret
lods
in
repz
lods
inc
xchg
lods
int3
cmp
xchg
jnp
cmc
js
sub
fst
fcomps
push
loopne
pop
pop
push
rcrb
sub
mov
mov
dec
mov
fdivrl
dec
or
xchg
adc
mov
sahf
cwtl
and
mov
xor
repz
shr
sub
imul
lock
fcompl
or
lock
add
lock
shrb
mov
add
std
mov
push
add
xor
dec
fmuls
adc
and
lods
js,pn
mov
cmp
int3
hlt
fdivrs
and
out
add
inc
popf
lret
dec
xor
mov
sub
jp
pop
addb
mov
pop
les
or
mov
in
xor
or
cs
and
repz
subb
inc
pushf
or
add
sarb
cmp
in
iret
push
pop
cmp
in
mov
xorb
clc
xchg
mov
xor
dec
enter
xchg
jb
sahf
mov
bound
xchg
int
mov
test
jmp
dec
adc
adc
sbb
inc
xchg
mov
flds
sub
mov
cmpsl
lahf
repz
popf
iret
rorb
mov
mov
mov
mov
sbb
je
repz
jmp
mov
or
inc
dec
test
dec
cmp
mov
push
and
sub
xchg
call
movsl
lret
jl
sbb
sub
iret
test
or
inc
inc
adc
cltd
fsub
fisubrs
or
outsl
cmp
jb
xchg
pop
aam
inc
and
lods
xor
imul
into
outsb
mov
loop
inc
fs
adc
sbb
and
add
xchg
lods
sti
sbb
inc
mov
fisttps
insl
sub
push
jb
cli
mov
and
fmull
adc
dec
cmc
out
mov
push
inc
dec
and
sub
lret
pop
jb
adc
inc
mov
mov
dec
xor
out
pushf
sbbl
cmp
lds
sbb
add
inc
imul
or
add
dec
sbbl
outsl
xchg
cmp
inc
jb
lods
hlt
stos
arpl
or
fiadds
mov
mov
pop
or
push
in
inc
push
lods
mov
or
xor
sub
xor
push
lret
add
sarl
movsl
cld
mov
and
inc
inc
sub
stos
mov
imul
mov
inc
out
dec
push
xchg
rolb
frstor
rorl
dec
arpl
aad
stos
repnz
mov
rclb
lahf
out
sub
fbld
jl
push
and
cmpl
int
push
mov
lods
idiv
pop
and
push
cli
xchg
mov
pop
int3
push
mov
dec
popa
lods
and
jmp
mov
std
fisubrs
push
test
testb
jmp
mov
xor
mov
inc
push
mov
rorl
fistps
mov
imul
imul
dec
pop
ja
mov
insb
mov
outsb
xchg
stc
sbb
cmpsl
mull
cmp
pop
pop
and
mov
inc
inc
or
or
mov
jbe
int
inc
fstpt
int
jl
repnz
fcoml
frndint
fdivrs
push
push
loope
adc
pop
orb
and
xchg
mov
cmpsl
stos
adcb
sbb
inc
lret
gs
inc
gs
xchg
mov
sub
sub
add
pop
add
test
test
mov
add
or
test
add
push
outsl
stc
aaa
out
ss
pop
push
xor
stc
adc
add
add
mov
push
xor
clc
lods
and
repnz
jnp
pop
rol
mov
dec
popa
call
lcall
or
jecxz
das
jg
fadds
mov
sbb
rorl
xchg
inc
inc
add
popf
aaa
enter
int3
inc
inc
jecxz
outsl
lods
xor
mov
mov
mov
sub
inc
mov
inc
cmpsl
std
inc
sub
lods
or
adc
sub
add
pop
ja
jle
out
jle
rolb
pop
inc
push
mov
int
mov
insb
mov
clc
arpl
add
sub
test
dec
push
stos
dec
icebp
cmpsl
sub
mov
cs
push
inc
dec
push
xor
sub
mov
je
hlt
cmc
xchg
call
sub
jo
adc
push
pop
mov
pop
repz
jle
outsl
add
rclb
sub
mov
loop
inc
flds
inc
dec
xor
jmp
dec
adc
ret
addr16
xor
adc
jb
ret
fnstsw
enter
xor
inc
into
xor
sbb
mov
inc
je
movsl
jno
adc
pop
push
inc
add
cmp
enter
xor
lret
mov
push
cltd
aas
or
ja
rorl
lret
insb
lahf
imul
inc
dec
mov
gs
cmp
out
sub
inc
ret
mov
jecxz
cmp
clc
cmovg
mov
icebp
mov
call
scas
icebp
imul
rorb
mov
sub
clc
stos
pop
or
mov
push
or
sub
cmp
adc
or
loop
add
jnp
sbb
mov
lret
jno
call
leave
dec
dec
mov
mov
xchg
pushf
add
out
scas
icebp
adc
pop
mov
dec
out
inc
push
or
add
add
push
leave
cs
mov
mov
aas
mov
dec
cmp
push
cmp
adc
sbb
adc
mov
jle
scas
ljmp
inc
das
push
in
sbbb
and
shlb
lret
pop
pop
int
loopne
popa
cmp
jmp
xlat
hlt
scas
inc
and
sub
mov
in
out
push
enter
jo
or
and
mov
fmuls
lea
test
lahf
lock
push
hlt
nop
add
cmp
mov
inc
inc
mov
and
loopne
push
mov
sbb
nop
clc
mov
or
sub
pop
rclb
push
xor
call
sarl
xchg
les
insb
push
cmpsb
cmpsl
pop
pop
mov
push
aad
subb
clc
mov
xor
test
dec
add
push
and
mov
pop
loopne
jbe
jecxz
js
dec
in
xchg
scas
sbb
sbb
push
inc
clc
and
repnz
popf
and
jecxz
sarl
loope
lock
mov
inc
add
imull
out
mov
mov
mov
jmp
cmpsl
dec
cmp
cli
xchg
fmuls
insb
and
je
dec
sub
ss
and
dec
jbe
add
imul
inc
fyl2xp1
lret
lds
cmp
pop
in
or
jno
mov
and
adc
mov
pop
jne
sbb
xor
xchg
cmpsl
adc
adc
push
sbb
fwait
insl
push
mov
daa
clc
mov
inc
mov
test
push
inc
sub
jg
jmp
or
jmp
mov
inc
lea
mov
jae
mov
cmp
scas
cmp
stos
lock
and
out
dec
cs
cmp
jmp
cmpsl
jns
nop
add
leave
in
jbe
sub
jmp
add
inc
lods
int
std
lock
inc
lahf
xlat
and
jle
ret
push
adc
xor
test
popa
or
pusha
or
sub
add
jbe
ret
add
test
int3
add
stc
insl
dec
cmpsb
les
push
icebp
push
jg
push
xchg
adc
clc
mov
xchg
adc
test
test
popl
call
pushf
xchg
sub
mov
mov
leave
adc
jmp
dec
mov
repnz
loopne
jp
xorb
pop
cmp
ljmp
jmp
cmp
cmp
mov
jbe
fs
mov
jle
dec
xchg
or
push
jnp
ljmp
and
pop
les
dec
sub
jle
push
push
icebp
pop
mov
xchg
mov
pop
sub
imul
push
aas
cmp
xchg
xor
push
roll
cmp
bound
inc
lods
add
pop
sti
shrb
or
add
ja
es
pop
mov
inc
repz
stc
outsl
lahf
mov
xor
or
push
sub
and
lret
outsb
mov
fnstcw
sbb
imul
jmp
hlt
lret
and
sbb
rorl
cmp
inc
jb
push
pop
mov
fwait
xchg
push
lret
pop
inc
cli
or
dec
popf
orl
or
test
sub
sub
jp
insl
arpl
jmp
std
adc
cmc
popa
lretw
test
pop
xor
adc
cwtl
xlat
inc
jbe
jge
jp
ljmp
or
int
ret
nopl
stos
or
pop
sub
adc
or
stos
mov
inc
inc
xor
jmp
pop
add
iret
sub
inc
xchg
jb
js
cmpsb
push
iret
loope
rolb
shrl
add
sub
cmp
ret
jo
repz
loope
xacquire
fisubrs
enter
push
xor
adc
sbb
in
lret
dec
cmp
xchg
dec
fucomi
fsubrl
dec
mov
and
pop
adc
rolb
add
add
lds
stc
xchg
dec
cmp
loop
stc
imul
inc
popf
push
stc
test
push
dec
insb
sub
nop
or
stos
int3
insb
call
cwtl
dec
inc
mov
inc
inc
cmp
packsswb
iret
sub
cs
ret
push
mov
mov
jno
push
insb
push
add
xlat
shl
or
mov
lcall
mov
xchg
clc
push
cmp
test
xchg
inc
dec
arpl
das
jmp
cmp
outsl
arpl
sub
sbb
xor
and
fadds
inc
clc
leave
push
xlat
mov
lcall
xor
add
push
cmp
movhlps
mov
mov
mov
xor
jmp
insl
leave
mov
jne
jae
hlt
dec
aad
clc
mov
repz
dec
push
or
inc
leave
movsl
jecxz
jo
loop
xchg
sub
std
fsub
add
fistpll
adc
inc
dec
dec
lret
addb
ljmp
mov
mov
xor
xchg
mov
cmp
or
dec
cmp
or
jmp
dec
sub
or
and
fisttps
jle
scas
pop
out
xchg
adc
call
cld
call
jle
mov
or
add
rcrb
loop
xor
repnz
pop
cmp
jge
inc
fldt
leave
or
adc
sub
arpl
dec
dec
jge
fucom
inc
mov
aad
or
inc
shlb
jns
cltd
pop
mov
adc
push
add
ja
xchg
adc
add
mov
add
or
inc
stc
subb
cli
jge
add
mov
or
cld
pop
pop
fists
mov
push
ss
fstpt
push
cmc
lahf
push
fsubp
pusha
enter
push
cmp
call
jg
adc
leave
pop
lret
js
pusha
push
clc
pop
sub
and
mov
or
lcall
insb
jp
shrl
pop
and
in
pusha
ss
jb
test
mov
lods
ja
mov
dec
test
adc
lds
imul
sbb
and
lock
orps
push
clc
shlb
rorl
and
inc
jbe
inc
xchg
adc
inc
jbe
mov
jno
ja
mov
in
adc
jmp
lret
cmpsl
dec
jmp
imul
jle
fcoms
imul
xor
lock
mov
push
sbb
mov
fisttpl
cmpl
jne
inc
insl
lret
xchg
adc
inc
outsb
xor
pop
aad
in
jae
xchg
mov
dec
dec
jmp
push
jp
xrelease
call
adc
mov
mov
mov
int3
jmp
nop
mov
jne
and
jmp
das
les
adc
fidivl
pop
sub
dec
das
mov
ret
mov
push
je
lcall
xor
adc
dec
xor
jno
iret
jmp
xchg
jns
sub
or
out
xlat
popl
cltd
icebp
and
dec
mov
jmp
dec
pop
shrl
shr
iret
psllw
dec
xor
sub
outsl
lcall
fcomps
jecxz
lcall
push
fisubrs
pop
mov
pop
jae
cmp
test
push
pop
sub
aaa
mov
rcrl
popa
ja
pop
pop
lret
sub
dec
push
jbe
icebp
push
add
push
inc
iret
dec
loope
aas
loop
fmuls
cltd
sub
fcmove
sahf
jae
cmp
aaa
xor
add
lret
movsl
add
lcall
mov
leave
or
sub
imul
repnz
ret
rcrl
dec
lret
cmp
stos
sar
push
test
dec
adc
stos
cmpxchg
cwtl
loope
es
dec
push
sti
adc
add
mov
ret
push
jb
fsubrl
sub
push
inc
leave
sbb
sub
outsl
test
sub
bound
push
ljmp
sbb
jmp
hlt
sbb
sarl
dec
imul
push
push
jmp
aaa
in
rep
dec
rcrb
add
dec
mov
imul
ss
mov
pop
jle
sbb
lahf
adc
stc
jno
iret
xor
pop
incb
ficompl
dec
insb
cmpsb
xchg
inc
icebp
ljmp
mov
adc
jmp
add
bound
scas
test
xchg
outsl
dec
jecxz
rorl
imul
sub
icebp
mov
ret
sbb
xchg
cmp
rorl
mov
mov
hlt
int3
adc
div
jne
push
cmp
adc
push
clc
sbb
test
adc
jb
xchg
mov
sub
out
xchg
mov
sub
popf
lock
or
subps
scas
movsl
inc
fs
and
imul
inc
fcmovnb
fcmovnu
and
dec
xor
jns
mov
dec
sahf
repz
mov
fnstenv
popf
jmp
add
xor
pop
dec
inc
push
dec
xor
fcomps
cmc
cmp
dec
test
fwait
or
iret
popa
add
mov
dec
jno
push
std
je
fincstp
or
lea
fistpl
push
into
in
popf
pop
xor
xor
fs
imul
or
mov
in
mov
idivb
mov
rorb
mov
mov
xchg
lahf
inc
jo
pop
jo
push
addl
mov
leave
lds
mov
push
or
cmp
pop
cmp
call
repz
push
insl
xor
sub
or
mov
je
mov
jmp
out
ret
jae
lds
dec
enter
lahf
push
push
inc
rorl
mov
or
adc
inc
dec
inc
test
adc
sahf
ffree
ror
leave
pop
outsb
adc
and
jp
push
mov
xchg
loopne
subb
push
cmc
imul
push
ret
mov
lock
lods
call
leave
into
jb
push
jne
sbb
jns
out
testb
loopne
pop
sbb
sub
imul
int
cmp
out
dec
add
push
dec
xchg
xchg
dec
mov
inc
dec
adc
fisttps
sbb
inc
lahf
or
or
adc
enter
stc
shll
cmp
mov
jmp
dec
je
or
sbb
stos
adc
push
int3
pop
pop
sub
stos
dec
pop
leave
popf
cmp
imul
push
push
shll
cmp
push
imul
fisubrl
push
mov
cmp
xchg
cmp
sub
fld
sbb
inc
push
push
rorl
jb
icebp
inc
cs
das
sti
inc
add
add
orl
xor
sti
sub
popa
add
outsl
imul
adc
or
jno
sbb
vxorpd
fiaddl
push
mov
sbb
jnp
or
rorl
inc
pushf
mov
out
and
or
mov
int
call
stos
arpl
cmp
add
cli
inc
jp
adc
inc
icebp
and
movsl
add
cmp
inc
data16
es
and
mov
jmp
int3
inc
sbb
enter
or
mov
sub
add
repnz
sub
test
cmpsb
xlat
call
xchg
add
mov
cmp
dec
pop
add
flds
or
dec
enter
inc
hlt
push
aam
or
pop
fimull
loope
addr16
and
lret
test
xchg
or
inc
cmp
int3
inc
cmpsl
dec
mov
lret
loope
std
fisubl
and
push
lea
insb
ret
bound
mov
dec
sbbb
addl
frstor
dec
ficompl
xchg
and
cmpsl
dec
ljmp
mov
jl
inc
scas
pop
push
mov
lret
nop
pop
dec
lock
cmpsb
aam
test
or
ficompl
in
and
loop
and
cmp
cltd
and
imul
add
xchg
xchg
mov
adc
fistl
fwait
loope
addl
xor
push
inc
negb
dec
ret
xlat
stos
loopne
adc
xchg
push
bound
sbb
xchg
push
sub
sbb
stos
cmc
scas
or
ds
inc
or
jo
cmc
mov
bound
or
or
xchg
fcoms
aam
call
inc
fcomi
cld
sub
add
shl
shrb
out
mov
cld
mov
pop
ret
xchg
dec
rcrb
pop
mov
inc
pmaxub
bound
push
lret
mov
xor
lods
mov
pop
add
in
pop
insl
sbb
inc
jmp
inc
push
clc
int3
and
mov
xchg
sub
sbb
sub
pop
jmp
andb
loop
pop
add
cmc
xchg
imul
outsb
cli
push
push
pop
test
in
push
and
stos
outsb
and
mov
inc
fs
clc
testl
sub
aad
jno
mov
loopne
fiadds
jb
mov
fs
pop
mov
push
cli
or
or
push
mov
inc
shrb
call
fs
cmpsl
cmp
mov
insl
mov
cmpsl
clc
lahf
rorb
negb
mull
lret
inc
incl
pop
idivl
neg
pop
add
ds
inc
enter
roll
mov
mov
sub
inc
push
out
xchg
arpl
movntq
out
mov
mov
stos
in
mov
push
out
mov
lea
xor
sbb
int3
mov
and
mov
cmpsl
outsb
inc
adc
mov
or
push
pop
rorl
xor
add
jns
jno
iret
pop
add
or
dec
mov
sbb
iret
mov
lods
enter
sti
pop
fsubrl
pop
imul
mov
mov
mov
addl
push
and
dec
mov
mov
outsb
push
push
imul
sbb
xor
lret
inc
lods
mov
push
lods
add
ja
bound
sti
lahf
test
mov
and
add
bound
add
cmp
adc
pop
cld
outsl
lret
xchg
out
push
sub
inc
sbb
lret
xchg
pop
int
cmpsl
dec
outsl
cmp
lret
cs
repz
mov
mov
call
dec
fsubl
or
and
iret
push
and
dec
mov
dec
ret
or
bound
mov
cmp
enter
mov
sbb
jmp
mov
adc
cmpsb
sub
sub
imul
pop
lea
push
or
push
inc
stc
loop
mov
jne
in
dec
js
add
or
pop
jge
sub
cmp
push
mov
lret
xchg
push
and
xorb
popf
fldt
jecxz
lock
shrb
sbb
cmp
out
inc
xchg
mov
xchg
or
test
icebp
inc
inc
out
adcl
dec
leave
add
pop
outsl
dec
lcall
cwtl
ja
mov
dec
jmp
add
push
mov
arpl
mov
aaa
mov
imul
xlat
and
iret
fnstcw
cld
popf
sub
pop
jmp
aam
cmp
push
pop
cmp
arpl
or
sbb
mov
add
add
dec
out
sub
pop
fadds
push
movsb
int3
pop
sub
add
cltd
jg
mov
add
xor
fldcw
enter
push
push
or
add
test
or
mov
cwtl
popf
cltd
cmp
mov
or
out
push
stc
cld
pop
in
fdivl
cli
mov
push
lret
sbb
pop
xchg
stos
aad
sarb
push
insl
ret
sbb
repz
repz
sahf
xor
mov
push
pop
xchg
rcl
push
out
push
lds
aad
sub
xor
stos
or
cltd
push
add
xchg
mov
xor
lea
jecxz
xchg
pop
paddq
mov
push
repnz
sub
sub
sub
mov
pop
iret
iret
sbb
rcrb
add
das
xchg
imul
dec
mov
sub
pop
std
xor
shr
aam
push
add
jmp
dec
pop
sub
ficoms
ficompl
xor
inc
mov
sub
inc
xchg
scas
sub
mov
cmp
push
jmp
or
sub
sub
jmp
mov
add
sub
or
mov
fldenv
fdiv
jae
push
push
add
cmp
ss
std
lods
adc
stos
dec
cmpb
add
outsl
stos
call
repz
inc
rcl
pop
mov
loopne
pop
leave
xlat
fnstsw
mov
adc
xchg
xchg
nop
test
dec
xchg
lds
je
hlt
lods
hlt
mov
cltd
ror
mov
insl
or
push
clc
sbb
and
addr16
pop
mov
stc
xchg
jmp
xor
push
int3
in
icebp
xchg
cmp
xchg
imul
lds
lret
mov
shl
xor
xchg
cltd
or
mov
icebp
rcll
push
add
adc
xchg
jno
pop
fcompl
lods
mov
dec
repnz
push
mov
cmp
out
adc
xchg
cmpl
or
sbb
jmp
dec
xchg
xor
lea
dec
rclb
mov
xchg
faddl
repnz
je
inc
in
adc
add
mov
cmp
aas
aam
pop
xor
sub
xchg
sbb
inc
icebp
movsl
loop
dec
insb
aas
ror
jecxz
or
dec
cmp
jbe
cmpsb
test
jns
out
icebp
push
lea
mov
adc
fstpl
push
insb
inc
jg
scas
xor
les
mov
adc
outsb
rcrb
adc
adc
pop
inc
xchg
test
or
mov
roll
lock
rcl
outsb
fisttps
cmp
or
pop
sub
rcrb
adc
mov
adc
adc
or
and
pop
push
cltd
pop
fldt
insl
inc
in
dec
xchg
sub
pop
lods
or
mov
sub
fldt
sbb
lods
xlat
jge
enter
or
jne
outsl
or
leave
inc
sub
sub
dec
out
inc
xor
loop
jmp
xchg
in
in
jge
mov
xchg
mov
fstpt
neg
sbb
mov
and
fcompl
mov
xchg
cmp
jle
inc
imul
lret
sub
pop
or
aad
insl
iret
sub
rcrb
fistpl
push
test
sbb
or
inc
addl
loopne
in
inc
cmp
sub
or
push
daa
push
lret
xchg
loopne
xchg
push
sub
mov
lcall
jns
lret
daa
sub
inc
dec
push
sub
xor
fisttpl
or
mov
push
lret
loopne
movl
stos
lret
xchg
mov
dec
mov
xchg
lret
push
sbb
lock
adc
inc
dec
or
and
jno
mov
clc
lods
bound
push
or
mov
adc
pop
jmp
add
push
insl
fisubrl
inc
out
cmp
rcl
or
mov
add
cltd
xchg
les
shrb
mov
dec
pop
sub
lds
psrlw
and
dec
cltd
push
or
loope
sub
pusha
push
push
enter
sub
sub
inc
int
push
lds
das
xchg
int
int3
hlt
dec
adc
dec
rcrl
add
pop
jge
fstl
loope
pop
sub
add
cwtl
jecxz
lret
and
inc
pop
pop
outsb
lds
fcmovnbe
or
push
cltd
loope
sub
roll
dec
inc
test
or
and
dec
insb
adcl
pop
mov
int3
dec
pop
add
pop
mov
xchg
jae
enter
inc
popa
sub
test
or
jmp
add
and
sbb
sbb
es
push
jmp
mov
jl
rep
leave
addl
aad
clc
imul
sbbb
fistpl
mov
ret
icebp
mov
arpl
mov
push
loopne
scas
sub
insb
cli
loopne
lods
jbe
xchg
sub
dec
sub
faddl
push
cmpb
loop
xchg
xchg
jl
testb
rcrb
jbe
pop
cltd
sar
sahf
pop
stos
cmpsl
pop
mov
mov
jecxz
or
loope
mov
pop
push
mov
pushf
mov
in
adc
popf
xchg
dec
shlb
inc
mov
mov
pop
lcall
rcrl
mov
sarb
int
push
stos
sub
orl
push
mov
cli
inc
imul
outsl
mov
xchg
push
push
test
jmp
sbb
sahf
xor
or
jge
sub
push
or
or
leave
mov
lods
dec
dec
insl
and
xor
dec
pop
cmpsl
mov
paddsw
dec
push
test
std
add
adc
xchg
pop
push
mov
xor
std
clc
sbb
jp
mov
lods
mov
leave
sub
or
add
push
dec
push
push
pop
flds
push
imul
pop
xchg
xchg
pop
mov
out
jge
jg
pusha
shrl
pop
rorb
inc
insl
cmp
push
stc
aad
leave
adc
xor
xor
imul
std
icebp
hlt
mov
mov
lret
jns
lea
jle
fadd
fisttpll
inc
inc
rorl
clc
inc
mov
mov
leave
push
cwtl
test
insb
rcrb
ds
adc
xchg
lahf
jbe
fidivrs
inc
pop
cmp
fnstsw
xor
and
push
pop
jg
sub
or
mov
and
out
push
addl
push
or
dec
or
fisttps
loope
cmp
pop
dec
push
shrl
mov
pop
lds
rcr
test
add
rorb
push
inc
inc
push
jecxz
outsl
leave
pop
rorl
xor
mov
or
lcall
or
inc
inc
rorl
cmp
dec
inc
sub
in
inc
fstpl
jg
addr16
daa
jae
xor
ret
sub
cmc
lods
cmp
push
aad
aad
imul
imull
or
fimull
std
or
div
push
push
lret
dec
add
inc
or
std
add
pop
into
lret
iret
sbb
pop
mov
sub
imul
dec
fldl2e
cwtl
in
pop
add
dec
mov
shll
adc
scas
mov
divl
mov
rolb
or
cltd
test
xor
add
ret
inc
fldl
sub
inc
dec
aad
lods
leave
sub
cmp
sub
inc
das
push
lret
repz
ret
lea
hlt
jl
dec
push
cmpsl
test
sbb
xor
aaa
jmp
pusha
add
add
and
dec
jns
pop
pop
mov
jp
mov
or
jl
roll
inc
jmp
iret
sub
or
fisttpll
ror
loope
js
daa
sub
filds
mov
inc
std
add
shll
stos
pop
push
mov
int3
xchg
xor
dec
fxam
es
push
mov
sub
mov
mov
lea
add
mov
push
pop
jb
pop
ror
jbe
xor
cmpsl
sub
sub
in
dec
fwait
push
rcrl
push
movsl
cs
aad
lret
fildll
push
or
adc
and
push
cmp
aaa
cltd
push
lret
xchg
rorl
jbe
out
cmpsl
out
xlat
pop
test
out
clc
enter
test
leave
daa
xor
scas
jns
jno
push
push
jge
orb
rol
lods
pop
or
xchg
xchg
ret
hlt
cmp
inc
push
fisubrs
xor
lock
shll
mov
cmp
fwait
stc
jmp
push
sub
mov
inc
lods
and
sub
mov
in
push
mov
test
cmpsl
dec
mov
rcl
sbb
inc
mov
xchg
and
cmp
sbb
mov
popa
fldcw
roll
cmpb
cld
push
adc
xchg
rcrl
mov
ljmp
addl
arpl
add
arpl
nop
aaa
sbb
insb
ljmp
sub
sbb
frstor
arpl
mov
ret
shrl
inc
sbb
jmp
pop
lods
push
int
loope
cmp
mov
and
repnz
inc
jnp
outsb
rcr
test
in
inc
dec
add
add
jno
lods
aaa
push
push
enter
dec
pop
iret
test
jbe
in
mov
je
icebp
or
xor
stc
cmpsb
leave
xchg
cmp
jle
or
add
pop
push
es
jg
cmpsl
sahf
pop
push
mov
jp
std
insb
dec
aas
inc
lret
mov
fimuls
ret
push
jns
cmp
test
sub
ds
mov
sub
push
push
mov
test
clc
cmp
push
xchg
flds
dec
mov
in
sbb
in
lds
xchg
pmullw
arpl
orl
sahf
sub
adcl
add
addr16
hlt
and
add
cmp
push
pop
sbb
popa
sub
jae
pop
stos
or
jns
pop
add
lds
mov
push
inc
in
out
test
repz
std
adc
test
jge
sti
sub
pop
pop
lret
sub
or
mov
into
or
aad
or
aaa
test
or
sahf
push
jae
inc
xor
mov
cwtl
rclb
in
dec
out
cltd
jae
xchg
or
lds
add
jmp
scas
popf
call
fwait
lret
mov
xchg
jl
cmp
sbb
push
sbb
in
imul
enter
std
orl
int
jge
or
ds
sub
loope
aaa
scas
mov
jne
and
mov
push
inc
jbe,pt
test
cmp
les
cmp
cmp
xor
inc
jp
inc
imul
pop
movsl
clc
cwtl
loopne
aas
leave
sbb
sbb
pop
pop
hlt
add
sub
inc
mov
pop
adc
adc
dec
lret
in
xor
inc
inc
addb
fabs
inc
pop
add
xchg
dec
iret
sti
shrd
cmp
jo
in
cmp
push
inc
rol
call
clc
mov
push
ret
into
and
cmp
push
test
adc
mov
push
mov
movsb
xchg
xchg
and
dec
and
push
loopne
lds
hlt
stc
insl
test
add
push
push
in
pushf
push
pop
dec
dec
inc
mov
lret
pop
mov
insb
int3
dec
dec
arpl
ret
pop
inc
iret
add
stc
push
xchg
popa
fidivl
push
push
in
inc
roll
ja
mov
jns
push
sbb
cltd
addr16
dec
insl
daa
dec
subb
sub
dec
iret
xor
jbe
mov
sub
lea
lds
sub
dec
shrb
in
xchg
or
cmp
or
cmp
ror
cmp
adc
dec
aad
pop
mov
pop
jnp
cld
jmp
dec
mulb
out
loopne
push
cwtl
mov
sarb
cmpsl
cmpsl
add
jmp
test
ret
in
dec
inc
mov
dec
fs
lret
adc
or
stos
dec
cltd
pop
push
movsl
inc
sub
fisttpl
push
daa
add
dec
fimull
dec
in
or
inc
lds
sub
shll
dec
add
push
jmp
and
ficomps
pop
gs
inc
mov
pop
jbe
and
sub
iret
and
push
mov
dec
jo
push
mov
and
inc
sub
add
imul
mov
cmp
push
push
sbb
ret
inc
cmp
clc
mov
call
cmp
cmpsb
push
or
cli
mov
push
int3
sub
cli
aas
jns
cmpsl
clc
mov
cld
ss
lds
scas
lret
enter
mov
imul
dec
xor
dec
in
xchg
cmpb
pushf
test
ret
fistpl
mov
mov
mov
outsl
mov
mov
imull
xlat
mov
xlat
cltd
ja
inc
out
je
mul
scas
inc
and
xor
popf
scas
and
in
xchg
repz
xchg
or
jae
inc
xchg
scas
movsl
and
dec
and
dec
imul
ficoms
inc
inc
xchg
dec
cmpsl
mov
add
xor
push
or
out
ljmp
enter
add
push
pop
test
scas
enter
mov
pop
add
fisttpll
cld
pop
inc
dec
mov
je
out
sbb
arpl
and
and
cwtl
rolb
jno
jg
inc
or
call
arpl
jns
inc
inc
decb
lds
inc
add
das
mov
push
leave
fdivl
in
inc
lret
lret
push
jbe
out
and
stos
sahf
popf
test
mov
pushf
mov
pop
sbb
sub
in
or
xor
xor
xorb
mov
push
and
mov
out
jg
mov
outsl
and
sbb
outsb
pop
adc
in
adc
xchg
inc
inc
adc
cwtl
popa
call
call
pop
mov
cmp
jmp
adcb
int
stos
mov
dec
lods
dec
xchg
cmp
xor
cld
shlb
push
dec
mov
fisttps
data16
add
imul
aad
push
daa
stos
cltd
cmp
push
test
loop
and
push
jg
sub
rcrb
aam
adc
push
fcompl
stc
int3
leave
cmp
mov
stos
or
mov
inc
loopne
jle
stc
rcrl
push
or
std
pop
loope
or
jno
les
or
mov
add
decb
mov
cmp
loopne
mull
dec
add
push
sti
in
add
dec
dec
pop
xor
lret
enter
inc
pop
test
fnstcw
adc
lock
jo
fimuls
lds
frstor
outsl
outsl
inc
xchg
pop
std
jo
fmuls
cmp
lods
jle
push
push
push
jae
or
pop
jno
mov
push
dec
or
andb
daa
mov
push
push
jp
sbbb
adc
xchg
sahf
push
stc
enter
mov
adc
sbb
mov
test
push
vcompresspd
imul
sub
inc
cmpsl
mov
ret
leave
jno
inc
iret
dec
jnp
daa
rcrb
mov
imul
mov
ret
pop
sub
push
adc
inc
xchg
out
cmp
jecxz
inc
xchg
or
outsb
push
sbb
cli
jno
sub
jmp
mov
jno
push
sti
adc
lock
insl
aaa
fisubrl
mov
ds
adc
add
pop
mov
sub
mov
xor
dec
pop
fistl
add
sbb
xchg
enter
jno
jae
test
icebp
testl
xor
outsb
sbb
ss
rolb
xor
xor
lcall
stos
inc
outsb
jmp
pop
outsl
dec
xchg
clc
shll
insl
fildll
jmp
jnp
pop
mov
test
push
iret
add
pop
push
add
xchg
insb
cmpsl
mov
jbe
in
out
push
rclb
jle
jne
dec
into
scas
out
add
out
adc
push
out
or
sbb
or
cmp
cmpsb
test
or
push
loopne
pop
mov
mull
inc
dec
fidivl
inc
add
xlat
or
jmp
stos
stos
adc
xchg
cld
stos
pop
not
enter
test
cmp
cmp
pop
or
push
testb
lods
pop
and
pop
loope
mov
daa
add
leave
adc
fs
sub
add
or
sbb
inc
in
test
inc
mov
adc
aaa
sub
adc
push
pop
loope
in
or
mov
xor
cmp
enter
lock
add
shrl
xlat
mov
inc
mov
hlt
fiadds
push
aam
shll
insl
outsb
or
mov
in
add
jae
sbbl
jmp
and
cltd
mov
sub
test
push
mov
mov
imul
pop
clc
pop
mov
push
push
mov
imul
xchg
or
mov
lret
mov
jmp
or
xchg
dec
or
cmp
lds
push
arpl
jge
jecxz
fcmovbe
dec
hlt
scas
stos
jle
mov
shlb
and
or
xor
daa
and
push
loope
cmpsb
add
les
fnstsw
push
pop
inc
xchg
addr16
push
xchg
mov
inc
sub
cmp
lret
xchg
inc
aam
cmp
mov
or
outsb
je
push
imul
push
xor
cmp
int3
jae
call
sbbb
sete
lea
cmp
shlb
pop
imul
test
sahf
enter
movb
dec
cmp
mov
pop
add
jmp
pop
cmpsl
mov
xor
mov
add
cmp
sti
jl
and
push
pop
addb
insl
hlt
and
test
lcall
data16
push
jbe
adc
addr16
icebp
dec
ja
xor
push
dec
push
pop
add
ret
int3
push
add
mov
push
xor
xchg
or
aam
mov
xchg
xchg
inc
daa
movl
and
push
sbb
adc
fisttpll
mov
mov
inc
ja
sahf
lret
jae
paddq
cmp
sbb
scas
adcl
or
add
lret
dec
jne
mov
aas
mov
lret
sbb
jl
daa
in
loop
sbb
scas
pop
mov
mov
divl
sbb
and
mov
mov
dec
stc
push
mov
loopne
pusha
fwait
xor
adc
clc
test
jno
cmc
ret
insb
icebp
arpl
rorb
jbe
mov
sbb
mov
popa
sbb
sbb
shlb
sbb
push
jecxz
flds
jns
rorl
ljmp
jae
xchg
enter
orb
push
sub
adc
js
jne
pop
ja
into
mov
and
jno
mov
add
mov
lret
es
jbe
or
inc
arpl
mov
push
dec
jmp
adc
test
sub
cmp
mov
cmpsl
add
in
in
mov
test
xchg
into
push
sub
loop
leave
add
jbe
cld
fstpt
jae
xor
sub
cld
pushf
sbb
addb
jmp
jne
inc
repnz
sbb
mov
xchg
sbb
stos
cmp
add
inc
lods
mov
into
xchg
iret
xor
scas
xchg
sbb
rcll
xorb
incb
and
clc
insb
pop
pop
sub
cmovle
mov
aaa
jbe
xchg
imull
mov
push
mov
insl
jno
xor
dec
xor
aaa
mov
out
scas
fwait
sbb
test
stc
sahf
sbb
testb
data16
lds
outsl
mov
cmp
insb
arpl
iret
test
jge
push
mov
in
rorl
iret
cmpsl
mov
adc
inc
rorl
adc
dec
cmp
loopne
mov
cmp
or
push
xchg
ret
hlt
ror
sbb
and
scas
gs
stos
push
mov
loop
lds
shll
dec
gs
je
testb
mov
fmul
jmp
pop
dec
pop
inc
sub
adc
das
dec
out
xor
data16
or
mov
sbb
push
xlat
rcr
sbb
cmc
aas
into
xchg
repz
sub
cmp
xlat
push
push
out
xchg
sub
push
sub
adc
stc
adc
es
inc
out
insl
mov
cmp
cmp
jno
dec
arpl
shll
lock
add
push
arpl
add
enter
aas
sti
pop
and
add
add
stos
mov
cmpb
mov
lds
popf
gs
pop
bound
mov
iret
and
orl
pop
inc
ja
add
iret
pop
inc
dec
dec
arpl
adc
ja
sub
inc
inc
inc
dec
insl
jg
call
xchg
clc
aas
and
fwait
ds
jbe
xchg
movsb
in
clc
xchg
mov
inc
outsb
fwait
adc
inc
mov
dec
dec
inc
xchg
mov
dec
arpl
repz
cmp
mov
sub
fdivrs
pop
push
inc
cmp
nop
outsb
dec
jne
push
jmp
mov
inc
addl
stc
push
ljmp
cmp
sub
dec
test
dec
add
push
pop
push
pop
scas
lea
and
inc
dec
cwtl
scas
bound
lcall
fwait
loope
jnp
cmp
mov
dec
addr16
and
imul
out
cmp
sub
inc
int
dec
addb
mulb
dec
add
mov
or
daa
inc
jle
add
push
mov
and
jae
insb
pushf
and
mov
popa
ret
das
push
push
mov
xchg
in
jne
ret
xlat
mov
das
mov
ljmp
pop
in
push
inc
ljmp
jl
or
into
clc
push
cmp
cmpsb
pop
cmp
popf
jb
in
pop
into
dec
mov
cmpb
enter
mov
add
dec
cld
add
jecxz
sub
and
fcomps
jp
jg
jb
lea
cmp
lret
sbb
push
pop
mov
xchg
dec
or
popa
add
pusha
xor
sub
pop
hlt
repz
movl
mov
imul
enter
mov
xchg
imul
hlt
mov
out
mov
ljmp
sub
mov
shr
je
imul
lds
movsl
imul
popa
dec
in
sub
cltd
out
xor
add
rcrb
xchg
push
jp
jbe
jnp
in
pop
push
pop
push
loop
pushf
dec
xor
mov
cmpsl
or
test
cltd
ja
out
cmp
out
in
leave
ret
push
xchg
int3
rorb
dec
push
adc
iret
xchg
mov
jmp
xor
lods
lock
sti
inc
mov
xchg
dec
mov
jmp
push
pop
pop
mov
leave
push
cld
mov
mov
inc
stos
and
xor
cmp
mov
xor
int3
jnp
cld
push
lods
pusha
sub
mov
aam
mov
push
pop
adc
mov
xor
in
xchg
inc
mov
pop
gs
dec
sub
out
ljmp
push
rcr
jmp
xchg
fnstenv
mov
or
dec
xchg
imul
orb
jnp
jg
nop
push
lret
imul
pop
repz
jl
dec
xchg
push
cmpsb
inc
les
pop
mov
pop
arpl
push
mov
int3
test
push
xor
lods
out
loopne
mov
mov
stc
ljmp
push
add
into
daa
fsubrp
mov
dec
fwait
add
adc
bound
cmpsl
or
sti
or
aad
mov
sbbb
mov
dec
add
int3
bound
loopne
inc
out
and
mov
xor
push
aam
sub
mov
imul
mov
sbb
cld
inc
leave
test
push
sbb
push
in
mov
mov
xchg
pop
test
sahf
cwtl
mov
dec
mov
rorl
or
mov
pop
or
lahf
int
add
jb
call
dec
inc
jno
mov
inc
push
sub
xchg
sbb
or
jge
lahf
push
pop
aam
loope
mov
cmpb
pop
inc
out
imul
xor
cmpsb
dec
popa
sub
test
mov
lds
aam
add
sbb
orl
loopnew
dec
and
add
in
push
or
lret
cmp
pop
inc
xor
dec
insb
shl
psraw
sub
mov
jno
lcall
daa
adc
int3
sub
ret
mov
imul
ret
ret
sahf
pop
jmp
nop
cmp
mov
das
dec
cs
ja
imul
test
inc
mov
cli
add
or
data16
ljmp
jg
lods
dec
and
xchg
push
and
lds
popa
lock
cmp
ss
inc
in
add
ja
lea
pop
jmp
xor
pop
inc
rol
cmpsl
les
xor
mov
dec
fdivrl
rcrl
xor
das
aad
sbb
sbb
jo
adc
push
pop
sarl
push
rcrb
out
adc
mov
ret
and
mov
sbb
test
rcr
fiaddl
lret
inc
arpl
pop
jmp
pop
out
sbb
pop
mov
sbb
xchg
dec
dec
dec
xchg
clc
test
scas
mov
jmp
dec
cmp
lds
xor
push
aam
jnp
aas
call
leave
dec
xchg
std
mov
jle
leave
mov
cli
ss
mov
mov
xchg
cmpl
int
sbb
leave
push
mov
insl
mov
and
ss
lods
push
aad
xor
rcrb
imul
add
or
pop
int
rcrb
jl
add
je
daa
cmp
sub
roll
inc
mov
pop
mov
or
dec
xlat
jno
lret
xchg
and
xor
hlt
ja
mov
adc
mov
sbb
pop
int
xor
sbb
aam
repz
xchg
stos
mov
outsl
in
aaa
mov
fildl
mov
lock
cmp
adc
or
push
ret
mov
pop
in
inc
std
sbb
test
test
adc
or
xchg
xchg
fadds
jne
into
pusha
jmp
cli
inc
sub
mov
out
mov
pop
and
and
rorl
fsubl
lret
sub
adc
testl
jmp
mov
xchg
rorl
jp
cwtl
bound
jmp
mov
or
aam
mov
imul
out
icebp
or
mov
lahf
xlat
cmp
loopne
adc
push
aaa
xor
rolb
test
push
jae
ret
jge
lea
leave
cli
addr16
pusha
add
adc
add
pop
mov
movl
movsb
icebp
mov
jecxz
gs
xchg
xchg
scas
into
xor
pop
shrl
dec
mov
xor
push
into
or
mov
rcrl
push
cmpsl
mov
sarb
or
sub
test
pop
loopne
maskmovq
call
sub
pop
push
dec
lods
cmp
imul
fs
xor
test
scas
and
cmp
cmp
int3
xor
ret
sti
fmul
pop
and
lds
lret
mov
mov
inc
nop
mov
add
pop
stos
lret
decb
add
sar
fcom
jle
lret
lds
mov
jns
fildll
push
lcall
daa
sub
lsl
cmpsl
pushf
jp
jnp
into
pop
pop
pop
mov
stc
xor
out
push
loope
into
adc
cmp
inc
inc
jno
mov
sub
inc
std
cmp
or
jmp
add
ss
fsubrs
pop
out
xor
test
int3
jp
loope
fsubrl
push
lret
add
or
leave
lock
inc
mov
adc
mov
inc
xchg
pop
mov
js
dec
in
icebp
sarb
stos
add
pop
xchg
hlt
loop
sub
pop
daa
or
dec
adc
enter
sbb
hlt
pushf
subl
fidivs
xor
dec
lds
scas
jge
clc
icebp
xor
stos
jle
pop
jno
or
data16
sbb
dec
or
mov
push
cmp
push
dec
or
inc
inc
jae
mov
negl
dec
mov
mov
repnz
lret
pop
jp
jle
pop
cmp
data16
cmovge
sub
push
and
fiadds
dec
imul
fistl
mov
imul
mov
in
cmp
movsl
enter
dec
adc
faddl
iret
movlps
mov
adcl
mov
mov
xor
mov
sbb
add
push
mov
bound
or
data16
cmp
aam
sub
jecxz
jbe
xchg
add
or
into
dec
cmp
addb
rorl
test
push
idiv
std
adcb
or
cmpl
stc
iret
push
test
mov
ret
inc
xor
rolb
sub
aam
inc
ret
push
mov
imul
or
outsl
mov
mov
pop
or
xchg
test
sub
notb
bound
imul
inc
inc
mov
icebp
jnp
dec
stos
jns
sbb
dec
push
sub
out
cmpsl
jb
enter
xchg
out
mov
stc
cmpsb
in
aas
inc
ds
pushf
cmp
push
mov
pop
mov
pop
rol
add
lods
sub
lcall
je
fisttps
xchg
arpl
lock
aas
pop
lret
or
mov
imul
sub
les
pop
aam
xor
push
aaa
lock
rorl
adc
aaa
pop
rcll
movswl
out
lahf
insl
gs
push
int
adc
adc
fists
int3
popf
jnp
jae
lock
shlb
js
arpl
inc
and
rorl
xchg
push
popa
daa
mov
test
adc
es
push
dec
ja
cmp
sbb
xchg
rcrl
mov
adc
jb
lret
imul
sub
mov
jmp
icebp
or
mov
es
xchg
scas
aaa
xor
test
enter
push
inc
fists
ret
hlt
and
int
mov
lahf
ret
jmp
lret
loopne
aas
rorb
or
pinsrw
or
arpl
or
stc
xchg
scas
inc
dec
jnp
dec
xor
ljmp
add
jne
arpl
mov
sti
or
mov
jl
mov
jl
push
pusha
outsb
jnp
je
bound
push
jns
cmpsl
add
xchg
mov
flds
mov
lods
arpl
insl
mov
pop
sub
xor
sub
dec
mov
movsl
lahf
ret
or
xchg
fisttpll
sbb
sahf
std
out
dec
testb
pop
jns
xchg
lea
ret
or
mov
ret
cmp
fwait
xchg
add
jo
jg
push
nop
inc
sub
xor
dec
out
mov
movsl
adc
dec
arpl
or
out
insl
cmpsl
inc
clc
mov
mov
jecxz
mov
inc
inc
ja
mov
loope
scas
add
pop
repnz
outsb
jbe
mov
ret
xorb
cwtl
popf
mov
add
pop
js
mov
add
int
and
lret
test
shlb
inc
pop
nop
dec
push
and
loop
sbb
xor
ja
mov
cmovno
sub
hlt
arpl
sub
aam
or
stos
inc
out
loop
popf
xchg
lods
inc
or
ficomps
xchg
rcrl
inc
mov
inc
jns
jns
mov
stos
push
repz
dec
mov
or
cmpsl
xchg
cmp
stos
inc
aam
stos
push
mov
je
pop
dec
inc
ret
pop
scas
testl
inc
jbe
adc
lret
add
mov
call
jb
scas
stos
lds
dec
ja
cmp
adc
fimull
xchg
sub
mov
xor
and
sbbb
dec
push
test
mov
add
push
and
xor
mov
sbb
push
push
cmpsl
inc
enter
xor
lret
fmull
push
mov
sti
jmp
sub
inc
jecxz
out
jmp
mov
xor
out
addl
sbb
clc
addb
in
or
jmp
icebp
in
scas
jno
cmp
mov
ret
and
ja
test
or
jb
leave
ljmp
aam
jle
pop
es
cmp
jno
adc
push
jp
dec
push
inc
imul
sti
sub
ret
sub
adc
das
or
ljmp
inc
push
sub
test
aas
jge
pop
dec
push
dec
nop
cmp
lds
cmpsl
xchg
mov
stc
push
xchg
arpl
test
aam
sub
test
or
mov
mov
or
push
adc
inc
lret
jmp
cmpsb
jmp
add
push
jns
push
into
jmp
loop
les
inc
push
adc
add
xchg
mov
shll
push
or
jecxz
out
and
imul
sbbb
ffreep
inc
das
jns
or
mov
add
stos
clc
adc
mov
jo
movl
dec
inc
lods
adc
jns
jno
ret
iret
popa
add
xchg
cmp
sahf
scas
pop
or
mov
mov
adc
call
or
lret
dec
std
cwtl
pop
dec
cmp
pop
sub
repnz
mov
aas
dec
sub
daa
cmp
cmpsl
push
lcall
imul
mov
lods
popf
gs
sub
push
sub
xchg
stos
push
push
cld
mov
out
jbe
push
cmpsl
mov
int
aad
sbb
xor
jmp
cmp
out
add
mov
test
mov
mov
sbb
rolb
lock
in
and
cmp
dec
dec
aaa
outsb
out
popa
xor
dec
xchg
mov
cmp
pop
cmp
xchg
add
inc
inc
push
int3
cmpsl
mov
inc
push
dec
in
push
dec
pop
mov
fwait
sbbb
rorl
cld
sbb
or
shrb
clc
add
or
push
dec
loop
push
shlb
adc
add
inc
xor
fdivl
xlat
mov
icebp
xchg
shl
push
lret
stos
push
idivb
xchg
xor
sarl
add
fildl
sub
bound
cld
hlt
leave
pop
xor
or
sti
aad
sbb
and
jno
inc
imul
xchg
add
xchg
cmp
or
cwtl
or
sbb
pop
push
sbb
inc
cmpsb
lds
xor
add
xlat
mov
and
arpl
gs
lret
push
lahf
mov
fwait
mov
jmp
leave
push
jmp
lcall
cmpsb
inc
bound
mov
in
adc
arpl
popa
adc
stos
mov
mov
inc
andl
xor
push
out
adc
sbb
mov
mov
pusha
mov
into
mov
sub
addb
xor
mov
in
push
push
lods
lret
push
jle
fisttps
add
jnp
outsb
jecxz
int3
mov
in
ss
cmp
push
in
mov
adc
push
add
sbb
add
sub
mov
cmp
mov
fdivp
and
jb
jo
das
imul
test
test
adcl
push
jecxz
or
or
pop
cmp
dec
push
daa
mov
fisttpll
cwtl
bound
scas
fs
pop
sbb
cld
lret
cli
sbb
cwtl
fcmovne
pushf
pop
cmpsb
test
sbb
xor
inc
scas
jecxz
push
mov
mov
sbb
cli
call
jbe
int
insb
je
subb
andl
popa
stc
insl
icebp
dec
jmp
ss
jne
or
ficompl
ror
xor
mov
push
sbb
inc
cmp
out
ss
loop
test
addl
lods
or
test
loopne
xchg
xor
add
lds
lds
pop
addb
mov
mov
addb
call
or
xchg
fsubr
sub
jno
ffree
lods
mov
imul
xor
pop
iret
mov
popf
stc
test
pop
jnp
sbb
or
xchg
push
daa
dec
out
sahf
inc
inc
in
inc
cmp
mov
and
std
dec
push
sub
aad
lods
cmp
pushf
movl
popa
sbbl
mov
lret
icebp
sbbl
fists
out
test
iret
setl
out
pop
lock
pop
iret
mov
iret
cltd
mov
flds
cmp
pop
fldt
imul
push
subl
add
mov
pop
inc
jle
aam
jbe
movsb
inc
inc
or
jl
gs
add
mov
clc
int3
inc
or
sbb
test
flds
push
mov
inc
add
aas
mov
and
fmul
stos
dec
adc
ss
adcb
iret
push
insb
pop
add
sbb
inc
lock
add
add
inc
imul
nop
daa
inc
jge
dec
pushf
sub
out
add
fisubrs
adc
in
xor
mov
test
test
test
xchg
lret
jle
or
push
dec
ret
cs
cmc
mov
adcb
dec
jge
pop
mov
ret
adc
cld
leave
dec
stos
sbb
inc
orl
mov
mov
dec
test
or
dec
mov
cmpsl
adc
rcrl
jecxz
dec
ret
inc
xor
testl
jne
sti
sub
clc
jmp
xor
pop
ja
lods
addr16
enter
icebp
xchg
push
cs
int3
add
lods
mov
push
cltd
sbbl
sub
sbbb
cmp
lds
dec
aad
sbb
repz
push
les
xlat
mov
insb
leave
subl
loope
stc
dec
adc
lods
fsubrl
ja
adc
xchg
in
in
out
push
insl
add
fdivs
push
insl
and
negb
icebp
hlt
or
dec
cmp
fsts
das
hlt
popf
insb
movsl
cmp
mov
xlat
xor
jae
in
enter
inc
ja,pn
or
jae
mov
std
jnp
test
xorl
insl
stos
mov
inc
dec
sub
adc
ret
daa
or
xor
pusha
leave
xchg
data16
cld
adcl
push
sbb
mov
dec
rcr
add
sub
or
ss
push
sub
dec
push
push
push
pop
cmp
imul
cmp
and
mov
mov
cmp
into
dec
xchg
arpl
mov
in
and
pop
ficoms
add
sub
cmp
xchg
xchg
movsl
sbb
fimull
and
pop
sbb
stos
cmc
pop
gs
and
add
or
loopne
sub
xor
int
ret
rcll
inc
ja
jecxz
or
mov
leave
and
jne
mov
inc
repnz
imul
les
dec
or
add
mov
lcall
in
push
ficoms
sarb
fwait
mov
nop
or
sub
xor
add
push
sbb
je
cmpsl
cmp
sub
cmp
dec
int
add
mov
xchg
test
xor
lret
inc
dec
loopne
adc
rcr
sarl
fistps
vpmacssdql
and
into
xor
iret
pop
adc
add
mov
mov
cmc
mov
fiadds
js
mov
dec
shlb
sub
lret
mov
inc
inc
mov
ftst
or
xchg
xor
mov
lret
clc
frstor
vandpd
mov
dec
lret
jle
cmpsl
inc
sarl
sbb
aaa
push
cmp
push
scas
fisttps
push
cmp
stc
and
in
insb
dec
pushw
sbb
sub
inc
or
xor
dec
insb
adc
cmp
push
add
fcoml
inc
outsb
mov
lea
add
or
adc
mov
out
sub
stc
push
scas
cmp
mov
loop
sbb
dec
int
mov
sarb
sti
pop
mov
or
enter
inc
lods
stc
sub
adc
dec
sbb
icebp
sar
or
leave
call
mov
lcall
shll
enter
sub
push
add
xchg
das
mov
imul
jne
pop
bound
out
cltd
into
sub
out
in
fildll
loope
pop
add
dec
popf
sbb
pop
or
mov
js
sub
jbe
test
lret
or
arpl
dec
insl
les
std
push
movsl
fs
mov
inc
dec
add
cwtl
cmp
sub
out
iret
xchg
inc
fldcw
clc
jno
loopne
outsl
bound
xchg
or
push
insb
push
popf
xor
pop
shr
out
push
je
imul
push
mov
addr16
mov
mov
js
dec
push
test
jecxz
call
mov
into
sub
pop
pop
in
pop
push
ljmp
inc
push
call
cmp
leave
enter
cmp
dec
push
call
lcall
jmp
or
int
or
and
dec
arpl
push
scas
inc
hlt
test
or
inc
jge
ret
adc
cmp
or
push
or
fiaddl
insl
out
orl
ss
or
int3
popa
dec
mov
int
enter
lds
outsl
test
outsb
sbb
dec
dec
enter
dec
ja
xchg
push
outsb
jg
loop
mov
jle
popf
xor
inc
subl
inc
push
pop
and
lret
cli
inc
insb
mov
mov
jne
pop
pop
mov
imul
mov
xor
out
int3
xor
iret
inc
fwait
pop
cli
mov
ljmp
scas
jo
sub
dec
sub
fistpl
addl
and
int
fs
and
aas
outsl
jge
imul
pop
cmp
xchg
inc
in
dec
inc
aam
cmp
mov
inc
push
xor
xchg
sub
movb
cmp
mov
lret
pop
cmp
shrl
or
pop
dec
jecxz
jae
jmp
mov
jne
gs
cmpsl
mov
xor
ds
pop
dec
hlt
fdivrl
sahf
adc
test
mov
shlb
or
xor
inc
in
pop
lds
pop
and
popf
push
imul
inc
cmp
jmp
sub
sti
dec
xchg
out
sahf
cmp
imul
or
sbb
stos
add
insb
lock
or
mov
out
rep
add
mov
sbb
adc
add
lcall
add
jne
sti
ffreep
push
popa
cmp
adc
gs
js
fs
xchg
pop
lds
test
inc
push
iret
pop
dec
fiadds
jnp
pop
push
mov
jmp
cmp
mov
inc
shl
dec
cmp
cmp
add
adc
mov
and
dec
or
ds
push
inc
push
lret
cmp
dec
add
pop
mov
leave
xorb
dec
stc
in
out
imull
xchg
add
iret
dec
push
stos
stc
or
pusha
lret
idivl
ret
mov
push
jno
push
sub
xor
les
addr16
mov
je
mov
sub
ror
dec
xchg
fldcw
pop
insl
push
and
or
xchg
into
xchg
or
xor
mov
inc
inc
out
leave
mov
add
fcomi
ret
jp
pop
pop
hlt
jecxz
out
xchg
xchg
xchg
push
stos
out
push
jno
jecxz
add
icebp
jle
push
pop
int
xchg
mov
mov
xchg
cmp
lods
push
inc
pop
dec
push
out
xor
inc
add
push
ja
arpl
inc
jo
mov
inc
dec
mov
pop
push
inc
inc
sub
enter
inc
imul
bound
outsb
xor
xchg
add
sahf
stos
pop
xchg
rorb
add
fists
sub
rolb
mov
fwait
test
or
imul
dec
pop
shll
mov
seto
cmc
dec
nop
jns
pop
in
and
cltd
push
mov
out
jnp
lea
add
shrl
cld
pop
jmp
mov
or
negb
or
push
adc
pop
push
mov
sub
out
xchg
test
add
popa
sub
leave
out
push
cmpsb
push
xor
loopne
pop
xor
testb
or
push
adc
cli
std
sub
mov
cmp
push
or
mov
mov
lret
leave
sarb
cmp
mov
sbb
popa
dec
push
and
push
shrl
popa
test
mov
int3
dec
sub
or
xchg
ljmp
sbb
pop
iret
inc
call
testl
jle
add
and
aas
and
mov
add
inc
lret
clc
push
and
fwait
ret
xor
inc
or
mov
and
mov
into
leave
push
lcall
and
lcall
cmp
insb
adc
xchg
cmpsl
leave
ficompl
daa
dec
stos
sub
dec
xor
dec
mov
cwtl
iret
cmp
sbb
aas
rorb
adc
dec
cmp
das
pop
cmp
push
push
inc
pop
shll
sarl
and
xchg
mov
and
aas
mov
or
repnz
lahf
rolb
shrl
mov
dec
mov
icebp
adc
sub
les
xchg
repz
xchg
int
mov
push
sbb
jne
lock
add
dec
clc
cmpsl
jb
daa
mov
xchg
sub
rcl
mov
fsub
or
mov
or
push
stc
sbb
cmpsb
mov
dec
aad
lods
js
sub
mov
add
dec
push
xchg
leave
cmpsb
call
frstor
pusha
sub
dec
loope
inc
in
sub
sub
dec
ds
enter
cmp
mov
rcll
dec
and
sti
bound
call
sbb
test
or
loop
pop
ror
adc
sbb
push
xor
in
jecxz
jle
sbb
jnp
cmpsl
push
lret
jno
jb
cmpsb
push
xchg
lea
ljmp
push
pop
mov
repz
xchg
cmp
imul
adc
add
cwtl
fldcw
stos
push
sub
inc
and
test
push
ds
js
jne
mov
xchg
jo
lock
out
repnz
enter
ja
mov
push
enter
hlt
inc
ficoml
callw
psubsw
sub
test
enter
stos
push
orl
ljmp
inc
dec
lds
dec
mov
out
xchg
lret
aam
mov
int
jmp
roll
push
jp
pop
les
add
sbb
movsl
ja
out
pop
iret
mov
or
pop
and
add
jmp
lret
js
sbb
adcb
mov
xchg
scas
fisttpll
inc
sbb
jno
rol
or
push
dec
fnstenv
push
mov
aas
jge
xlat
outsb
icebp
cmp
push
xchg
push
hlt
sub
mov
xor
repz
pop
pop
xor
sbb
inc
push
stc
xchg
mov
in
movsb
into
sarb
push
call
aad
push
add
sub
xor
mov
aaa
jmp
stc
adc
pop
lea
pop
mov
imul
pop
sbb
sub
aas
mov
mov
les
test
loopne
mov
dec
pop
mov
pop
call
lds
pop
mov
ss
mov
mov
out
aas
out
xchg
cmpsl
jne
nop
jecxz
jle
mov
dec
dec
pop
fwait
sbbb
sub
jbe
cs
mov
ret
dec
movsb
out
inc
jb
add
and
fs
pusha
dec
pop
insl
adc
pop
test
cmpsl
dec
push
mov
int3
push
cmp
or
add
mov
aad
ret
pop
int
push
add
lcall
lock
lret
ret
adc
pop
cmp
stos
sub
inc
mov
push
pop
lea
insb
aam
enter
insl
inc
sub
test
stos
dec
sub
enter
or
enterw
add
pop
sub
adc
ljmp
dec
inc
inc
subb
lret
sbb
jae
movsb
mov
outsl
in
sbb
sahf
rorl
jecxz
push
dec
fnsave
pop
loopne
popa
sbb
dec
cmpsb
in
es
xchg
outsl
push
push
sub
add
fimull
incb
in
jb
fstpt
pop
outsl
dec
sbb
sbbb
lret
popa
inc
sbb
and
dec
stc
stc
xor
into
add
sarl
push
je
sbb
stos
enter
push
lret
pop
mov
and
imul
aas
movsb
dec
fldenv
mov
dec
sub
push
inc
jmp
loop
xor
icebp
outsl
or
xchg
mov
fadds
test
push
test
stos
sahf
icebp
jne
inc
jle
lret
hlt
test
ret
iret
stc
mov
and
in
push
je
jmp
dec
xlat
rorb
sti
mov
pop
std
sbb
push
inc
stos
cmp
lods
sub
scas
xor
fs
fcmovnb
push
jmp
int3
xor
hlt
or
xor
pusha
fldl
cmp
jge
pusha
mov
jecxz
inc
iret
loop
out
cld
pop
sbb
daa
inc
insb
ret
inc
mov
sub
sar
loope
pop
adc
sbb
pop
daa
add
int
lcall
pop
repnz
mov
jmp
cmp
mov
pop
xor
and
stos
mov
pop
ror
xchg
mov
aas
dec
rclb
into
mov
sbb
out
stos
lds
and
fs
imul
ss
in
sahf
or
fmull
xor
gs
pop
adcb
hlt
inc
mov
sbb
and
or
std
push
push
adc
ret
xchg
xchg
mov
add
xchg
inc
push
filds
mov
xorl
pusha
sbb
loopne
adc
xor
fimull
push
xor
stos
inc
pop
sbb
pusha
jmp
add
or
pusha
push
inc
xchg
cmp
mov
loopne
lret
and
fstpl
sti
jbe
scas
cmp
fiadds
inc
in
cmpsl
mov
adcl
push
push
sarb
jmp
mov
ret
mov
ss
push
dec
mov
inc
add
dec
out
lret
pop
or
and
enter
jb,pt
pop
push
leave
scas
jmp
popa
cmp
rcrb
add
orb
insb
sbb
pop
pop
sub
adc
call
dec
dec
add
xchg
sbb
inc
sbb
cmp
fwait
ja
pop
int
push
rcrl
pop
dec
sbb
fincstp
aaa
sub
aam
mov
add
add
cmp
adc
jbe
insb
mov
int
mov
mov
ret
shll
sbb
pop
sub
and
xchg
xor
sub
aam
sbb
xor
inc
inc
cmp
or
mov
sub
sub
test
push
sub
call
mov
filds
jg
dec
sbb
push
stc
or
out
and
jae,pt
inc
mov
in
nop
pop
test
xchg
sub
pop
mov
int3
ja
cmp
xchg
dec
inc
cmp
mov
int3
push
fwait
mov
test
mov
into
int
loop
out
and
jecxz
test
sbb
jge
push
in
sbb
inc
cmp
lahf
mov
lods
filds
frstor
mov
in
rcrl
cmp
in
lods
fwait
pop
lret
push
test
sub
sub
js
push
mov
push
jp
inc
jecxz
jge
sbb
sub
loopne
fwait
testb
sub
insb
fchs
dec
xchg
push
push
and
dec
xor
imul
adc
xchg
lret
ret
add
jecxz
loope
popa
sub
push
fbld
dec
jmp
lret
mov
dec
pop
imul
dec
sub
lret
mov
shr
adc
cmp
int
pop
dec
push
pop
mov
imul
ja
sahf
inc
aad
or
cmp
cmc
data16
push
hlt
leave
xchg
in
inc
push
mov
idiv
fldenv
and
movsl
mov
mov
push
push
out
adc
and
orl
fcomps
dec
sbb
sbb
lret
in
add
xor
lret
dec
inc
cld
inc
int
lds
flds
xor
mov
add
iret
in
jno
stos
arpl
out
aam
lret
jnp
inc
mov
lret
fmuls
xor
push
pop
sbb
or
dec
int
ja
mov
add
dec
or
lcall
test
mov
out
cmp
xor
adc
mov
sub
push
loop
mov
hlt
call
addps
xor
arpl
push
cmp
adc
push
arpl
and
into
jmp
or
dec
jp
push
enter
adc
out
imul
loope
sbb
adc
mov
add
aaa
sbb
push
adc
cmp
and
arpl
lcall
dec
pop
adcb
popa
inc
dec
push
or
cmp
cmp
ret
andl
push
pop
and
clc
adc
lds
orl
cwtl
fistl
stc
or
xor
icebp
jno
inc
mov
stos
loope
cmp
xchg
repz
nop
test
mov
pop
xor
bound
int3
push
out
cmp
dec
arpl
pop
dec
lcall
mov
add
int
pop
sub
adc
cmpl
xor
dec
scas
mov
popa
jnp
fbld
inc
fstpl
xchg
imul
lds
and
in
js
dec
fmul
push
pop
pop
sub
loopne
inc
js
insl
sbb
pop
pop
mov
xor
leave
pop
fldt
in
dec
mov
xchg
mov
pushf
cmp
dec
imull
add
cmp
out
jge
dec
jnp
pop
add
inc
adc
dec
fwait
stos
arpl
adc
dec
pop
jne
fisubrl
mov
sbb
bound
es
cwtl
dec
mov
andb
ss
mov
loope
lds
into
and
jns
pop
sbbb
pusha
mov
lcall
inc
mov
dec
and
ljmp
popa
sub
shlb
jns
mov
iret
stc
mov
cmp
xchg
mov
sti
aaa
push
das
test
cmp
dec
insb
cmp
mov
mov
test
sbb
mov
stos
cmp
mov
xchg
cmp
jecxz
nop
sahf
or
lret
lret
sbb
sub
mov
bound
in
xor
movl
or
fmuls
fistpll
push
jo
or
outsb
xchg
fwait
xor
push
adc
push
dec
mov
sub
stos
int3
dec
and
dec
or
pop
pop
iret
push
lret
dec
pop
xor
outsb
inc
inc
sub
ds
jl
mov
cmp
jle
jae
insb
inc
out
cmp
cmovnp
insl
push
test
jge
adc
inc
mov
pop
cmpsb
dec
cmpsl
jbe
stos
inc
fwait
jp
ljmp
and
pusha
sbb
test
cwtl
in
loope
pop
xor
hlt
dec
repnz
flds
inc
iret
shl
mov
repnz
adc
xorl
rorb
cmc
push
out
lods
or
enter
mov
gs
fcomps
ficompl
cmpsl
mov
dec
stos
push
sbb
dec
jp
repnz
sub
enter
mov
add
js
jle
xor
cld
test
xlat
dec
mov
push
hlt
mov
and
jo
xchg
sub
lret
shll
pop
ret
dec
popa
test
add
addb
dec
es
push
jmp
inc
sub
pop
ljmp
xchg
je
mov
and
mov
sub
xor
add
andl
jmp
out
adc
jb
pop
psllq
jne
add
mov
int
xlat
pop
dec
repz
push
inc
xchg
call
mov
cmp
mov
pop
push
scas
mov
sub
mov
jecxz
adc
mov
std
inc
lods
dec
jno
aad
int3
jmp
addl
pusha
loope
and
dec
cmp
cmp
dec
push
pop
andl
loopne
push
adc
inc
aam
adc
jmp
or
push
test
pop
sbb
cmpsl
int3
and
jmp
cmp
fwait
push
push
cmp
clc
or
push
push
hlt
fs
lds
and
pop
and
push
lret
add
xchg
movsl
push
cmp
inc
ret
inc
aad
mov
arpl
jmp
add
out
scas
xchg
cmp
mov
mull
add
ficoms
lret
add
leave
dec
in
out
push
dec
enter
adcb
lret
inc
das
dec
push
enter
gs
dec
dec
and
or
in
lret
les
xchg
cmp
into
or
flds
hlt
dec
popa
push
loopne
dec
and
inc
int
jns
mov
push
inc
xor
sub
add
inc
lret
inc
push
pop
inc
push
or
add
loope
cld
into
movsb
mov
or
gs
cmp
adc
adc
int
adc
jge
xor
push
mov
push
xor
sqrtps
pop
test
ja
pop
mov
inc
cmp
sub
rol
shl
enter
pop
imul
inc
dec
out
xchg
hlt
mov
pop
fstpt
add
jno
inc
pop
adc
mov
imul
ss
out
jno
jge
shll
and
pop
mov
ljmp
cmovae
fwait
or
imul
mov
mov
hlt
in
mov
xor
push
pop
cmp
mov
arpl
jle
pop
sarb
inc
jmp
cmpsl
or
hlt
or
jmp
imul
bound
xchg
jg
out
inc
adc
sbb
popl
pop
xchg
or
into
int3
sub
add
aaa
mov
lds
push
mov
int
test
popa
loope
mov
add
dec
orb
lahf
dec
sbb
test
dec
pop
bound
dec
cmp
or
fsubrl
mov
fwait
cmp
lcall
dec
ret
sub
jbe
fstps
dec
out
loopne
add
sbb
or
mov
xchg
ss
xchg
pop
subb
mov
or
clc
mov
pop
pop
insb
add
lock
int3
dec
push
xchg
push
sahf
xchg
fwait
dec
ds
xor
xchg
icebp
jmp
mov
xchg
and
lret
pop
pop
mov
std
pop
jecxz
dec
dec
xchg
add
jb
lret
xor
pop
xor
pop
fidivrs
dec
loopne
dec
mov
imulb
les
xor
mov
add
mov
mov
lahf
test
cmp
stos
jbe
and
dec
enter
lods
inc
dec
sub
adcb
orl
fsubl
aaa
rorl
mov
leave
lret
xchg
pop
pop
mov
in
adc
and
xchg
aad
push
push
inc
xor
dec
leave
int
lods
inc
int3
push
rol
lods
pop
sub
xor
sub
imul
bnd
daa
jmp
sub
mov
jecxz
push
loopne
mov
jle
adc
push
hlt
mov
cmp
jbe
push
data16
mov
xchg
movsb
stc
inc
mov
jmp
add
adcb
sbb
rorl
lods
xchg
mov
sub
mov
jecxz
pop
dec
push
or
enter
out
and
and
xor
push
xchg
test
inc
dec
jmp
clc
mov
or
lds
lret
clc
xchg
push
push
rcrl
lds
subl
dec
push
outsl
mov
add
mov
dec
xchg
sub
inc
sbbl
add
push
mov
hlt
add
inc
pop
dec
jle
jecxz
inc
ror
dec
mov
outsl
mov
sbb
cmp
dec
lea
gs
or
das
adc
out
in
js
cmpsl
push
mov
xor
imul
mov
sti
jmp
out
int
inc
out
test
test
scas
es
push
sub
mov
add
arpl
lret
out
mov
rolb
lret
addb
sbb
push
pop
sub
cmp
or
cwtl
xlat
test
dec
in
push
sbb
test
leave
push
jns
mov
xchg
dec
pop
aam
cmp
cmp
insl
in
cmpsl
push
pop
outsl
dec
cltd
and
sub
inc
int
mov
out
or
aas
inc
lret
outsb
adc
or
cmp
ret
xchg
in
pusha
dec
int3
lret
imulb
xor
jmp
mov
ret
adc
call
xchg
out
sti
test
stc
scas
mov
bound
pop
or
in
jp
arpl
sbb
ret
mov
lret
ds
cwtl
sbb
je
add
mov
lds
push
arpl
dec
std
pop
leave
mov
test
js
mov
sbb
lret
dec
pop
push
mov
jecxz
notb
ret
repnz
repnz
pop
out
sub
scas
addr16
repz
and
cs
ret
repnz
ret
dec
sbb
popa
ret
mov
inc
mov
push
sbbl
test
lcall
es
dec
orl
jmp
xchg
push
cmp
jne
scas
xchg
pop
insl
int
and
cmc
mov
pop
pop
addr16
inc
iret
or
bound
dec
pop
mov
mov
dec
dec
arpl
mov
in
iret
cmpsl
xchg
pusha
add
jle
int
arpl
add
sbb
sahf
dec
test
dec
add
pop
xchg
outsl
cmp
ret
push
dec
outsb
push
rcl
cmp
xor
test
sbb
repnz
insl
std
movsl
sahf
dec
cmp
aas
pop
adc
adc
insb
int
sbb
xchg
daa
iret
or
divl
pop
and
sti
pusha
mov
lcall
inc
pop
rclb
inc
sar
jg
loopne
jns
pop
xor
and
data16
dec
in
out
jno
imul
sbb
bound
pop
imul
sbb
and
lahf
loope
sub
aaa
lret
sub
inc
lock
cmp
fimull
pop
insl
mov
adc
insl
and
add
xor
pop
mov
jge
xchg
jmp
cmp
decl
sbb
hlt
xchg
in
flds
test
mov
or
inc
les
wbinvd
or
out
rorb
lea
adc
loope
pop
inc
ds
dec
insb
mov
in
push
jecxz
shll
loop
xorb
shrb
mov
sahf
push
ljmp
push
enter
out
jb
ljmpw
iret
imul
adc
mov
mov
imul
call
shll
inc
ret
and
xlat
mov
lods
clc
repnz
dec
push
arpl
aad
dec
inc
imul
inc
test
sub
mov
jp
stos
loope
cmc
fldenv
adc
cld
pop
push
push
dec
bound
jg
push
rorl
inc
mov
dec
cs
sbb
jmp
mov
mov
mov
push
inc
stos
push
loopne
adc
popa
cmp
ljmp
sub
aas
mov
movsl
pop
lods
sbbb
jmp
mov
sbb
pushl
and
add
pop
sbb
xchg
sbb
mov
inc
stc
push
scas
dec
or
add
sbb
xchg
gs
or
and
dec
mov
scas
je,pn
lea
or
jno
inc
lahf
or
or
sbb
es
inc
pop
sub
sarl
sarb
dec
jle
bound
jp
dec
sub
mov
xlat
pop
jp
xchg
sub
sub
clc
lods
mov
aam
lcall
sti
negl
cmp
enter
lea
pop
xchg
lret
adc
dec
pop
mov
sub
inc
ror
ss
daa
mov
scas
jne
pop
push
sbb
dec
sbb
pop
and
pop
push
clc
dec
gs
cmove
xchg
or
cli
jmp
or
pop
bound
dec
insb
push
pop
clc
cmp
lret
xchg
mov
cmpsl
cmc
inc
inc
lret
or
cmc
or
clc
pop
stos
cmpl
dec
mov
mov
jge
pop
xor
lods
add
cld
test
or
insl
jbe
fadds
adcl
add
imul
mov
inc
cs
dec
sbb
int
or
or
add
cmc
arpl
or
cwtl
mov
mov
lock
jo
jecxz
cmpsb
ffree
mov
loope
xchg
cmp
inc
or
repnz
adc
cmpl
dec
jg
xor
xor
enter
out
jnp
dec
inc
pop
add
and
cmp
repz
jmp
push
xor
cld
pop
leave
dec
notl
pop
sub
push
add
les
add
dec
ds
or
xor
adc
dec
xlat
scas
lods
xchg
lldt
addr16
call
mov
lock
mov
shll
lds
or
xchg
push
cmp
loopne
fbstp
mov
loopne
std
int
movsl
hlt
push
dec
aas
cltd
fiadds
mov
sti
jl
aam
jae
mov
rolb
sbb
rorb
arpl
fadds
mov
mov
xchg
or
push
mov
mov
ret
lods
out
adc
enter
shrl
mov
lds
and
ljmp
and
out
adc
sahf
add
or
adc
add
mov
mov
int
add
inc
pop
fstpl
pop
sbb
sub
scas
mov
stos
and
jbe
or
cmc
mov
mov
sub
jp
pop
sti
dec
push
mov
inc
pop
sti
jbe
mov
inc
add
cmp
dec
pop
fwait
add
or
call
mov
cmpsl
mov
lods
aad
xchg
insl
pusha
cld
lods
shll
mov
inc
or
leave
mov
or
pop
adc
pop
inc
jmp
mov
pop
xlat
in
icebp
dec
test
int3
dec
enter
xchg
cmp
test
pop
or
mov
dec
pop
lret
lods
lcall
inc
xchg
xchg
int
fwait
push
xchg
das
push
mov
sub
sahf
dec
aas
clc
cmpsb
ret
mov
push
out
aam
dec
out
nop
movsl
push
or
xlat
push
or
sbb
add
jp
or
mov
icebp
pop
xchg
add
std
scas
or
popa
push
lods
int3
lcall
cmp
dec
mov
or
push
inc
in
repz
and
sahf
roll
jb
pushf
dec
xchg
lahf
mov
out
sub
dec
jg
inc
pop
popf
pop
repnz
pop
adc
into
cmp
sub
mov
in
sub
mov
push
cmp
cltd
cwtl
lret
mov
int
stc
lret
mov
and
sub
ljmp
pop
nop
stos
lret
cltd
and
scas
sbb
cmp
into
or
and
outsb
mov
hlt
jg
add
inc
pop
loopne
dec
xchg
jo
imul
xor
fsubl
xor
leave
add
dec
stos
clc
pop
add
cs
or
or
adc
cmp
mov
leave
dec
test
loop
sub
mov
dec
cmp
int3
sub
xor
xchg
fistpl
jecxz
mov
push
mov
or
cmp
hlt
sarb
sahf
or
sub
leave
pop
mov
scas
sub
cmp
sbb
in
xor
dec
mov
inc
pop
xchg
je
shrb
in
xor
xor
int3
popf
sbb
cmp
jb
mov
push
xor
push
or
fistl
xchg
popa
notb
fcoms
shl
jb
dec
push
mov
push
jnp
out
ror
int3
or
fstpl
or
test
clc
pusha
in
cmpsl
aam
insl
cmp
out
xor
lret
cltd
in
adcb
imul
cld
sbb
mov
js
mov
lods
cmp
sub
xor
dec
jnp
push
sbb
push
jg
and
dec
inc
adc
lods
jns
movsb
mov
arpl
insl
xchg
ret
cltd
lods
dec
sbb
mov
mov
jnp
sarl
jl
sarb
or
mov
fmulp
dec
jmp
ljmp
adc
mov
push
repz
cmp
push
scas
psubusw
adc
mov
dec
add
je
lret
lds
cmpsb
xchg
push
sub
fcomps
add
mov
rcrb
jmp
add
test
cmpsl
bnd
es
jp
sub
add
loope
cmp
sbb
add
sub
push
lcall
xchg
pop
inc
ret
lock
inc
and
mov
pushf
pminsw
mov
dec
and
es
jmp
mov
or
pop
add
aas
add
dec
sub
ret
aas
mov
popa
dec
sbb
cmp
adc
mov
jecxz
lods
loop
xor
add
das
shrb
bswap
sbb
into
lds
mov
jns
inc
cltd
sbb
stos
scas
rclb
dec
mov
push
add
add
sahf
jb
fmuls
in
xchg
pop
out
popf
out
and
imul
cmp
ret
test
into
dec
add
add
cmc
push
inc
or
cmp
les
daa
cmpsl
jmp
mov
mov
xchg
inc
mov
and
sahf
sbb
sbb
and
loop
or
insb
pop
dec
popf
dec
popa
lcall
out
adc
loopne
lcall
adcb
xchg
xor
data16
mov
orl
mov
test
add
divl
inc
inc
mov
pop
jmp
outsb
mov
pop
aaa
outsl
enter
daa
cmpsb
add
lods
psrlw
add
sub
mov
cmp
in
lods
arpl
fwait
aaa
repz
pop
sbb
cmpb
fs
push
into
loope
inc
and
inc
inc
scas
mov
arpl
cmp
mov
mov
add
jmp
test
and
call
aad
adc
inc
mov
leave
or
in
sub
mov
dec
fwait
xchg
or
inc
lods
adc
shll
pop
inc
leave
add
dec
enter
loopne
jmp
in
cmp
cltd
dec
enter
or
jp
and
test
idivl
push
enterw
fs
sub
pop
mov
cli
jl
into
pusha
and
lcall
dec
in
pop
data16
cmp
dec
aas
std
out
aad
lock
add
rorl
inc
lret
xor
and
dec
jg
push
rcrl
int
sahf
xor
push
pop
mov
or
jno
cmp
ret
xor
inc
stos
dec
dec
sbb
pop
xchg
fsubr
inc
clc
push
inc
mov
adc
dec
and
cmp
insb
into
sub
dec
pop
lahf
adc
xor
mov
lret
dec
xchg
mov
into
or
mov
push
imul
sti
pop
lods
int
jecxz
in
adc
clc
push
add
adc
ret
dec
loopne
sub
jbe
push
inc
mov
add
inc
lods
lret
mov
pop
xor
jmp
xor
dec
out
pop
inc
stc
fisubs
mov
icebp
movsb
inc
out
cmovb
jns
jae
jb
andb
loopne
cmpsl
cmp
or
and
aaa
inc
movsl
int3
mov
mov
xabort
into
cs
and
call
out
addl
pop
imul
shl
dec
std
int3
imul
dec
shlb
addl
xchg
or
shrb
push
mov
pop
and
jp
outsb
rcrl
shrl
xchg
cmp
daa
inc
int3
icebp
call
subb
dec
fsts
lods
iret
push
hlt
sbb
mov
ja
sub
int
outsl
mov
aad
dec
orb
sbb
out
xcrypt-ecb
cmpsl
iret
add
mov
insl
imul
push
dec
adc
jb
push
pop
sbb
mov
out
jecxz
push
mov
xchg
clc
pop
jmp
dec
inc
icebp
arpl
andb
mov
pop
sub
cmpl
jp
enter
loop
inc
stc
mov
dec
add
inc
xchg
mov
push
iret
pusha
cmp
and
cmp
sub
mov
push
call
xor
jne
jns
movb
dec
lds
loopne
xlat
xor
inc
loope
add
add
fcmovnb
push
out
push
pop
pop
ret
in
mov
dec
lret
icebp
sub
cwtl
int
mov
or
int3
adc
cwtl
ficoms
iret
aad
jae
jne
jl
out
aaa
sbb
lret
movsb
clc
dec
xor
mov
insl
and
mov
or
adc
movsl
pop
mov
icebp
inc
stos
call
xor
push
cmp
mov
mov
imul
xchg
add
stos
mov
je
cmp
mov
push
mov
xor
xorb
dec
ds
sub
std
cwtl
mov
imul
repz
cmp
fs
stc
mov
popf
iret
add
bound
mov
iret
pop
push
inc
sub
xor
rorl
cmp
fistpl
adc
jle
fwait
leave
addr16
adc
pop
pusha
and
sbb
lods
bound
pop
dec
ds
call
adc
xchg
mov
movsl
pop
and
or
push
fiaddl
or
ss
fadds
stos
hlt
adcb
sub
add
mov
cwtl
ljmp
inc
lds
jno
jne
insb
call
jbe
enter
jecxz
ret
cmp
and
cli
cmpsl
dec
pop
and
mov
push
add
andl
cmp
xor
cmp
add
push
fwait
nop
repz
xchg
scas
lcall
push
shrb
dec
xchg
imul
pushf
or
adc
jo
mov
and
sarb
mov
sub
push
imul
add
or
adc
lret
and
inc
mov
sub
sub
loopne
xor
pushf
jecxz
ss
sbb
xchg
sub
bound
sub
xchg
vmulss
ljmp
adc
pop
jae
sarb
pop
hlt
mov
jns
adc
jg
imul
jp,pn
test
dec
xor
sub
test
jns
jecxz
push
lods
add
gs
ds
dec
xchg
jns
and
lock
pop
rcrb
sbb
cli
icebp
in
test
dec
or
cmp
cmovbe
imul
push
push
cmp
or
sub
js
stc
in
push
mov
int3
aas
test
jne
ds
int3
or
jle
pop
arpl
and
ret
xchg
call
lea
loope
jns
sub
ljmp
mov
and
scas
pusha
mov
aam
jb
clc
movsb
faddp
imul
push
js
pop
lea
clc
bound
jns
cmp
jle
push
cmp
clc
jnp
or
cmpsl
and
int
fdivrs
dec
js
push
sarl
jmp
mov
je
xor
rolb
mov
adc
int3
xor
jmp
xlat
or
xlat
dec
fstpt
and
jo
addb
jle
test
inc
hlt
lds
cmp
lret
or
out
push
out
or
loopne
inc
fcmovnb
sub
push
hlt
int3
xlat
in
dec
cli
push
sbb
jne
insl
lret
adc
or
dec
in
mov
arpl
hlt
cmpl
daa
and
adc
cmpsl
inc
fldpi
mov
shl
fsubrl
popa
hlt
sarb
aas
hlt
scas
push
dec
inc
fisubs
ret
add
mov
mov
inc
or
cltd
rorl
push
or
out
sti
or
sub
ret
cwtl
vmovshdup
bswap
or
push
jnp
mov
mov
insl
dec
leave
aad
mov
or
jo
inc
cltd
lret
cltd
out
xor
out
push
sbb
cltd
and
mov
mov
test
dec
pusha
in
sub
adc
ss
cltd
push
mov
lret
mov
fwait
out
add
xor
mov
out
or
pop
inc
sub
mov
lds
aam
xor
inc
and
cmpsl
sbb
sbb
mov
movsbl
stc
mov
sub
mov
dec
dec
mov
movsb
xor
lahf
add
inc
dec
push
sbb
cmpsl
in
and
or
jmp
adc
lea
leave
or
push
sub
scas
adc
cltd
mov
ja
test
dec
insl
repz
mov
push
daa
mov
push
jge
test
loopne
inc
dec
testl
gs
pop
dec
movsl
fsubs
push
cmpsb
pop
pop
rclb
and
inc
mov
out
daa
dec
testl
aam
pop
dec
test
push
jns
int
lret
jns
xor
leave
mov
enter
in
mov
enter
ficomps
pop
cs
pop
mov
push
xlat
iret
push
stc
inc
data16
mov
push
test
sub
loope
push
fnstcw
das
jmp
cmpsb
clc
fisttps
mov
add
mov
and
adc
cmpsb
push
test
ss
das
dec
cmp
pop
test
out
lds
jns
dec
xor
je
mov
lret
das
into
inc
rcr
mov
insl
push
push
mov
lds
fisubrs
dec
xchg
popf
pop
mov
fsubrs
decl
pop
hlt
xchg
xor
push
cmp
dec
xchg
icebp
clc
insl
mov
mov
push
std
rcrl
test
cli
jle
dec
bound
add
aam
add
mov
and
ljmp
cmpsl
xor
mov
sbb
adc
push
adc
enter
mov
xchg
cwtl
scas
mov
adc
sbb
pop
dec
test
jns
mov
lea
add
xchg
scas
xchg
push
rolb
pop
dec
nop
fsts
push
rorb
ret
or
or
f2xm1
pop
sub
leave
lods
leave
test
pop
sub
out
xchg
push
sbb
ret
mov
xchg
ds
mov
pop
into
sub
fisttps
sub
inc
or
lret
sub
pop
push
sub
and
leave
jbe
jmp
jo
shlb
in
or
push
mov
lahf
adc
aad
int
push
xchg
ds
pop
push
in
sbb
cmc
cmp
sbb
imul
cli
push
call
mov
or
dec
ror
mov
cmp
push
add
xlat
shll
mov
orl
nop
jmp
xchg
and
mov
mov
in
sbb
out
push
inc
test
dec
pop
hlt
int
sub
or
mov
fstl
pop
xchg
lret
mov
mov
xlat
add
mov
jbe
xchg
mov
in
aaa
data16
test
or
insl
push
out
xor
dec
rclb
imul
jbe
loop
or
or
bound
jo
or
push
fistpll
dec
insb
fsubs
mov
adc
ror
call
cmpb
mov
in
mull
pop
sub
push
hlt
jle
sbb
cmp
movsb
cltd
popf
test
mov
leave
bound
dec
lods
push
cmp
js
xchg
test
mov
pop
pop
jae
shll
out
leave
xchg
xchg
push
push
fsubrl
insl
lds
fidivrl
sub
pop
and
test
sub
mov
cmp
stos
adc
mov
sarw
lock
mov
push
data16
mov
ljmp
cmpsl
test
jp
ret
and
into
xchg
ficoms
mov
outsl
test
rorl
outsb
insb
sbb
sub
js
pop
pop
or
add
int
imul
ficomps
xchg
and
inc
insl
dec
test
stc
sahf
pop
jo
outsb
insl
dec
cs
push
dec
push
dec
pop
jge
mov
sub
lds
lds
and
lret
mov
mov
dec
jecxz
and
mov
mov
mov
insb
sbb
mov
sub
cmp
fsubrs
sarl
mov
mov
xlat
sub
mov
add
jle
sahf
add
push
sub
jnp
idivb
jno
dec
add
and
lret
push
enter
dec
push
ror
loopne
int
adc
dec
icebp
sub
sar
xlat
push
dec
lret
fstps
xor
mov
imul
or
mov
sbb
jmp
icebp
adcl
dec
and
inc
fstps
into
jmp
pop
out
xchg
loope
movb
and
jecxz
aam
sbb
sub
outsb
testl
loopne
aam
adc
jl
ret
data16
pop
add
iret
in
dec
lret
fadds
cmp
push
push
ret
cld
adc
cmpsb
lods
inc
int
mov
push
xor
cmpsl
rcrb
dec
cs
inc
mov
imul
mov
repz
mov
je
sti
fwait
mov
push
push
pmullw
jmp
aaa
hlt
dec
movsb
sub
pop
ret
xchg
add
xor
loopne
pop
js
daa
xchg
mov
bound
mov
addl
sub
dec
outsb
iret
inc
hlt
jns
xor
adc
push
enter
push
stos
add
out
xor
fmuls
lret
pop
hlt
or
mov
int
push
ljmp
test
pmullw
ss
sub
mov
xchg
inc
enter
shrl
or
testb
insb
adc
or
xor
lret
fisttpl
clc
xor
mov
mov
mov
dec
iret
add
mov
mov
mov
mov
push
adc
inc
sarb
or
ss
add
push
mov
push
dec
clc
mov
lods
dec
and
hlt
dec
and
inc
jno
les
xchg
gs
adc
sbb
jnp
cwtl
cmpsb
lods
mov
xor
mov
inc
orb
ja
subl
cmp
clc
cmp
cwtl
ret
push
mov
int3
cmpsl
jecxz
in
iret
lret
or
inc
xor
add
loopne
or
xchg
mov
sub
and
enter
addr16
pushl
es
jmp
jle
push
adc
adc
push
sub
loop
jmp
sbb
nop
test
push
cmc
clc
mov
test
rcrl
dec
sbb
pusha
int
jno
jge
dec
add
out
dec
lods
mov
push
mov
ret
pop
popl
mov
cmpb
add
ja
lret
iret
clc
push
insb
sahf
mov
lret
loopne
cmc
aam
clc
push
or
jp
leave
repnz
sbb
add
aam
fildl
lret
mov
inc
xchg
out
pop
jge
fcomi
adc
test
or
or
pushf
lods
pop
add
adc
dec
nop
jmp
inc
fdivl
xchg
xor
and
lds
pop
pusha
inc
fs
cmpsl
dec
pop
dec
or
ja
pop
shl
std
aaa
jb
lods
mov
mov
inc
jmp
ss
push
inc
inc
outsb
pop
loope
mov
popf
dec
out
lcall
pushw
into
jp
imul
push
iret
inc
cltd
pop
pop
loope
add
add
inc
push
xchg
push
cltd
fdiv
cmp
cwtl
jge
inc
out
dec
add
fcmovnb
cmpsl
mov
or
sub
sub
or
mov
pop
mov
lcall
dec
movsl
push
or
aas
fmuls
xchg
cld
add
pop
fwait
mov
loop
pop
push
int3
add
mov
adc
add
dec
adc
fsubl
shll
inc
ret
jecxz
mov
jmp
cmp
push
sarb
popf
aad
movsl
dec
lret
loope
mov
dec
mov
push
int
jmp
cmc
jecxz
enter
rcll
fbstp
mov
pop
aaa
cwtl
aas
push
mov
adc
or
or
mov
push
push
sub
shr
pop
idivl
iret
jb
rcrl
iret
stc
insl
aaa
or
add
add
mov
ds
cs
ret
mov
xchg
jge
mov
ret
sbb
fdivrs
xor
lods
sbb
sub
ret
dec
jecxz
push
sub
pop
aad
mov
push
call
sbb
sbb
dec
fdiv
pop
nop
fwait
dec
fistpl
pop
inc
mov
pop
xor
mov
inc
inc
jnp
stc
enter
xchg
test
fimuls
push
nop
add
mov
mov
out
adc
push
dec
push
out
mov
lret
mov
fstpt
das
enter
daa
rcr
in
jge
js
ror
movsl
cmpsl
sbb
ja
inc
cld
and
or
lret
lret
cli
popf
jmp
dec
xor
lds
pusha
mov
dec
movsl
inc
inc
pop
popf
inc
add
lds
add
add
lret
push
loope
adc
stos
cmpsl
call
mov
push
pop
sbb
pusha
dec
xchg
sti
xor
fstl
adc
xlat
dec
int
add
mov
jecxz
mov
mov
ljmp
inc
fsubrs
sub
js
sub
or
cmp
repz
lods
adc
mov
mov
pop
mov
jl
jmp
xor
push
cmpsl
fstpl
jmp
int
cmp
mov
fwait
dec
repz
roll
and
adc
lds
mov
lret
scas
xor
subl
hlt
sub
imulb
mov
inc
mov
and
adc
cmp
leave
adc
sahf
cmp
lock
shrb
out
icebp
cmpsb
add
lret
sbb
cwtl
pop
mov
jnp
sub
jmp
insl
xchg
arpl
push
jl
stos
insb
or
xchg
cmp
add
xor
jecxz
sub
fstpt
imul
mov
sub
dec
push
daa
dec
or
or
lea
mov
and
arpl
and
push
movsl
add
popa
orl
dec
cs
ss
ja
in
rorl
mov
enter
sub
mov
pop
bound
dec
rep
mov
xchg
or
cmpsb
stos
add
and
mov
jnp
xor
push
or
into
test
mov
and
loope
inc
adc
shrl
mov
adc
sbb
leave
flds
pop
in
lret
mov
enter
mov
jo
push
inc
add
pop
sub
cmp
clc
jl
sub
sub
jns
scas
push
mov
push
sbb
sbb
shrb
cwtl
lods
jns
lock
mov
jns
insl
and
lds
inc
xchg
mov
loopne
fwait
cmpsb
loopne
mov
and
js
test
mov
cmpsb
outsb
lret
push
out
mov
or
sbb
and
adc
inc
stc
xchg
xchg
push
jg
mov
push
icebp
mov
insl
pop
iret
jmp
xchg
cmp
insb
sbb
mov
mov
repz
mov
fildl
mov
pop
sub
xchg
out
popf
inc
mov
xchg
cmp
adc
xor
adc
xorb
stos
mov
mov
in
xorb
fstl
mov
fwait
sub
mov
adcb
pop
adc
mov
hlt
fdivs
aaa
mov
cmp
outsl
cvtpi2ps
stos
or
xchg
mov
lret
or
jle
jle
arpl
popa
loope
lret
dec
arpl
aam
lret
aaa
sub
in
cli
inc
sahf
imul
add
imul
hlt
or
call
dec
inc
sub
subl
add
loopne
push
cmp
add
pop
xchg
loop
pop
test
aad
xchg
xchg
and
lods
inc
popa
adc
pop
and
xchg
cmp
lea
xor
call
jne
dec
movsl
dec
scas
or
aaa
cmpsb
dec
and
hlt
and
pusha
mov
pop
xor
adc
mov
pusha
in
jno
mov
ret
pop
adc
push
hlt
xor
xor
cltd
jno
ror
mov
dec
xor
sbb
mov
mov
cmc
jnp
sbb
loope
int
and
lret
or
jge
add
insl
ror
dec
xchg
mov
or
adc
into
gs
mov
rolb
xor
js
test
pop
mov
shll
ret
imul
adc
stos
test
or
mov
subb
rcr
mov
pop
sub
pop
std
test
sbb
cmpsl
adc
inc
arpl
jae
out
sub
nop
insl
sub
hlt
mov
jl
push
in
mov
jno
pop
push
loop
push
jmp
dec
jmp
mov
dec
pusha
jnp
lcall
insl
out
jae
xchg
or
jge
push
mov
inc
ss
mov
fldt
ds
fcompl
mov
ljmp
hlt
out
add
cs
xchg
out
iret
loope
testb
sub
pop
call
out
xor
rorb
cltd
jmp
dec
adc
push
repnz
adc
repz
lcall
cmpsb
icebp
or
sub
cltd
jno
int3
xor
mov
mov
mov
adc
lcall
pop
popa
enter
lcall
sub
ret
insb
flds
hlt
pop
outsb
scas
and
push
rorb
repnz
mov
and
rcll
cmpsl
rcrl
int3
hlt
mov
push
add
rclb
jmp
inc
jge
lret
sbb
cmp
rcrb
cmp
imulb
xchg
scas
andl
mov
mov
dec
push
and
cmpsl
loopne
jge
adc
inc
xchg
sbb
push
bound
popf
adc
mov
pop
or
lret
sbb
fmull
imul
lock
jg
pusha
subl
shll
lods
das
mov
repz
mov
in
addl
dec
adc
add
pop
mov
pop
mov
and
movsb
adc
lock
sub
xor
pop
inc
jns
add
aad
and
add
aaa
add
lods
loope
addr16
add
shll
dec
mov
outsl
out
pop
jge
adc
inc
add
inc
ret
sub
outsl
cmp
enter
js
scas
push
lret
sbb
and
jo
add
sbb
mov
pop
std
outsl
leave
dec
dec
ret
jp
inc
mov
insl
cmp
cmp
out
mov
pinsrw
scas
pusha
dec
pop
adc
xlat
pop
cwtl
sbb
xorb
inc
aaa
sbb
cmpsb
mov
movups
imul
mov
inc
push
fptan
pop
inc
aad
cmp
roll
lods
push
stc
pop
cmp
adc
fdivrl
mov
fsts
mov
fldenv
aad
pop
jp
fstpt
fcmovnbe
sub
jecxz
dec
dec
call
dec
cwtl
xchg
insl
fadds
imulb
inc
scas
or
sbb
popf
sti
jl
jns
aam
dec
sub
jmp
pop
mov
test
mov
jle
sbb
dec
fstpl
incb
xor
xchg
dec
xor
in
pusha
mov
push
push
sbb
xor
inc
movsb
pop
adc
mov
sti
sbb
arpl
mov
inc
jecxz
jo
adc
dec
ja
sub
jno
mov
test
ret
inc
aas
mov
dec
aam
inc
movsl
pop
sub
xor
lcall
push
sbb
addb
dec
cld
lods
sbb
xchg
sub
jmp
jno
sub
adc
sahf
xchg
fwait
cltd
dec
rol
dec
pop
add
insl
push
push
pushf
push
xor
inc
test
fnstcw
sub
out
mov
mov
pop
subb
push
adc
xchg
pusha
jo
push
mov
jg
cmpsb
enter
dec
cmpsl
call
pop
xor
mov
push
cmpsl
push
dec
rcll
lret
jle
pop
movsl
mov
cmpsb
leave
or
int
inc
mov
cmp
popa
loop
std
sub
out
loope
scas
jmp
or
fldcw
sub
cmp
pop
adc
jl
inc
inc
test
mov
dec
cmp
shll
ret
sbb
pop
fldcw
inc
mov
or
push
push
iret
jl
in
leave
jmp
jmp
pushf
fnstsw
movsl
shlb
loope
push
or
mov
ret
fdivrs
ret
mov
pop
movsl
pop
mov
jle
mov
and
ret
arpl
sbb
cmp
js
dec
sbb
rcr
movb
lret
andl
inc
xor
pop
jmp
cmpsl
pop
mov
dec
push
add
mov
shr
dec
pusha
mov
xchg
fwait
idivl
ret
jge
cmp
jecxz
pop
loope
in
loopne
fidivs
sbb
push
out
aaa
insl
adc
cmpb
arpl
and
push
rorb
jecxz
loopne
ret
bound
sbb
mov
out
push
loop
mov
mov
in
inc
push
cmp
pushf
dec
jg
je
jl
ja
mov
out
push
or
add
fbstp
dec
out
adc
pop
fcoms
gs
mov
fwait
cmpb
pop
es
pop
xchg
mov
in
dec
mov
jecxz
hlt
mov
out
mov
loope
sbb
and
int3
xchg
dec
push
jo
cmp
les
xchg
out
dec
fprem1
out
arpl
pusha
shl
int3
xchg
ja
xchg
or
xchg
and
add
inc
testb
ret
lret
movsb
inc
stos
sbb
pop
and
mov
push
outsb
pop
mov
and
cmpb
sbb
dec
arpl
inc
aad
adc
out
add
pop
out
in
je
test
mov
sbb
test
mov
rorl
pop
divl
ljmp
push
lahf
loope
push
fwait
dec
sbb
pxor
stos
arpl
les
lret
insb
dec
jmp
add
shlb
popa
push
into
mov
mov
pop
push
aad
lods
xchg
mov
sbb
fldenv
or
add
in
push
popf
jb
in
dec
clc
leave
arpl
cmp
sbb
je
push
sub
outsl
ja
test
enter
jmp
jl
inc
sub
mov
sub
or
push
jp
aaa
push
push
mov
dec
mov
xchg
roll
movaps
test
inc
stos
xchg
ljmp
jmp
cmp
jbe
aas
dec
mov
ret
dec
fnsave
clc
fistps
iret
sbbb
add
xchg
bound
imul
pop
mov
into
adcb
sub
and
and
mov
cmp
hlt
push
xor
cmpsl
mov
xchg
in
xor
dec
dec
out
and
insl
movb
push
dec
imul
adc
mov
pop
popa
dec
dec
xor
mov
in
cltd
pop
sub
inc
into
dec
mov
mov
icebp
mov
loop
je
xchg
stc
hlt
stos
loopne
add
sbb
mov
cmp
xchg
ret
dec
mov
pop
xchg
loopne
pop
sub
jno
icebp
dec
fmul
hlt
dec
sbb
add
dec
push
sbb
push
shlb
and
sti
lds
stc
add
mov
fmul
shl
dec
adcl
mov
xor
inc
bound
lret
icebp
push
dec
fiadds
dec
es
adc
and
insl
bswap
jae
xor
mov
hlt
jae
sub
lods
or
mov
leave
jl
vmovlhps
cmp
dec
sbbb
inc
mov
movl
push
iret
lds
push
ljmp
jmp
push
int
repnz
unpcklps
pop
negb
or
enter
inc
les
add
jmp
dec
pop
pop
cmp
mov
cmpsl
sub
cmc
xchg
pop
shl
sub
add
cmpsb
mov
xchg
mov
mov
in
fbld
lds
dec
je
xchg
addr16
and
inc
les
dec
adc
arpl
fsubrl
sub
cmp
mov
stos
inc
cli
cmp
add
aam
dec
cmp
cmp
cmp
notb
inc
vpshlb
and
subl
aaa
lcall
dec
lcall
dec
lea
inc
loop
jle
jl
jbe
pop
call
mov
cltd
lcall
dec
mov
mov
adc
ror
cmp
mov
mov
lret
lahf
dec
enter
or
push
into
fidivs
cmp
shll
mov
and
pop
aaa
xchg
mov
mov
cmp
orl
jp
data16
mov
insb
insl
test
inc
sbb
pushf
sti
iret
call
mov
push
pop
iret
mov
jp
jns
sub
fs
int3
cmc
xchg
mov
add
fidivrs
enter
mov
mov
mov
inc
andb
aaa
in
push
xor
into
mov
bound
mov
pop
negl
pop
mov
fwait
hlt
pop
out
es
jmp
pop
and
push
push
data16
in
sahf
out
inc
and
xchg
and
into
data16
test
imul
pcmpeqd
and
cs
mov
push
call
or
and
inc
fiaddl
inc
push
inc
in
imul
js
inc
in
inc
cltd
jecxz
insb
xor
aad
xor
dec
inc
arpl
xchg
dec
push
fisubs
enter
fimull
xchg
mov
sbb
and
push
pop
pusha
cmpsl
xchg
xchg
jb
sub
adc
pop
shll
jbe
ljmp
mov
push
jl
pop
mov
leave
and
lret
inc
js
dec
lock
cld
add
in
mov
pop
push
out
jle
mov
dec
sbb
mov
enter
loop
push
push
fs
sbb
ljmp
add
fidivrl
aaa
insl
sarl
cld
or
shrl
dec
mov
push
into
xor
cmpsl
jbe
idivb
sbb
jbe
jmp
push
bound
fucomip
mov
test
ror
addr16
cld
jb
fwait
sbb
cmp
adc
or
sbb
pop
push
pop
dec
mov
in
ret
sub
cli
sbb
loope
xor
mov
lea
cmp
dec
test
mov
lods
and
inc
bswap
cmpsl
cmp
call
dec
faddl
dec
ljmp
add
lret
mov
inc
sbb
jl
inc
clc
orb
int
cmpsl
lods
js
adc
enter
mov
inc
cmp
shrb
dec
sbb
int
pop
testl
xlat
ret
or
sub
xchg
popa
push
out
cmp
pop
dec
imul
fimuls
dec
lret
pop
dec
js
add
or
jb
arpl
adc
cs
icebp
jo
loop
ffree
es
leave
sbb
push
pop
popa
jb
cmpxchg8b
jne
add
mov
loop
das
loope
orb
or
push
jmp
xchg
dec
mov
loop
and
sbb
out
jno
inc
loope
inc
rcr
jmp
lds
lcall
or
into
jo
hlt
sti
sbb
and
icebp
fs
mov
mov
pop
jmp
je
cmpsl
sub
repz
int3
std
lods
in
jo
xor
cmpsl
jmp
fisttpl
lcall
sbb
enter
pop
in
int
adc
rcl
orb
int3
and
cmp
xlat
imul
dec
in
adc
sub
dec
cmovge
js
inc
test
scas
shll
hlt
and
into
cltd
mov
dec
add
add
xchg
in
mov
xor
flds
std
incl
int3
out
adc
inc
daa
clc
jmp
mov
mov
and
and
test
mov
inc
aaa
sti
push
sbb
pop
dec
test
dec
pop
push
call
push
mov
sub
mov
enter
or
dec
nop
add
mov
clc
ljmp
lret
add
shr
inc
dec
xchg
mov
popa
cli
sub
pop
cmp
sbb
cmp
pop
inc
fwait
sti
pop
fcmovnbe
pop
or
shrl
out
inc
sub
daa
jmp
cmpsl
pop
cli
rolb
fs
inc
sti
les
stc
cmovne
jmp
pop
mov
and
stos
mov
mov
fimuls
inc
mov
pop
dec
xchg
dec
addr16
addr16
rolb
dec
mov
or
int
inc
daa
add
leave
sub
push
mov
or
arpl
out
insl
and
xchg
jmp
pop
jp
outsl
ljmp
mov
sbb
sti
jmp
fistpll
jmp
push
add
imulb
call
in
push
mov
xchg
call
jge
aad
sub
mov
cmpl
lods
or
and
sub
jae
lods
mov
inc
or
cmc
pusha
dec
sub
push
hlt
addr16
mov
inc
xchg
lcall
jnp
repnz
mov
ljmp
jbe
pop
sub
rclb
push
enter
jge
xchg
and
insl
insb
xor
add
cmp
leave
xchg
cmp
rcrb
int3
push
push
add
and
imul
fnstcw
or
mov
mov
flds
fwait
aam
jle
imul
jp
xchg
pusha
push
lea
or
sub
mov
lret
insb
std
sub
outsl
cmp
cmpsb
out
sub
pop
ret
in
jb
lret
std
jmp
movsl
mov
push
imul
cmpsb
push
cmp
push
cs
mov
test
lods
xor
push
pop
mov
dec
push
stos
adc
pop
mov
pusha
pop
push
cmpsb
inc
sub
imul
adc
mov
mov
or
mov
push
test
xlat
push
mov
xchg
and
loopne
cmpsl
aaa
mov
push
dec
clc
xor
loop
cs
sub
jmp
repnz
aad
inc
int
sub
mov
into
mov
sub
sahf
imul
jl
pop
lods
push
mov
xor
in
pop
iret
sbb
adc
testb
imul
cwtl
and
sahf
es
mov
mov
in
fsubr
sahf
insb
inc
pop
sbb
rorl
jle
sahf
pop
add
pop
in
lods
cmp
add
rclb
push
insl
xor
pop
out
loop
pushf
adc
push
loope
push
leave
repz
jae
rorl
mov
xchg
cmc
mov
or
sub
dec
sub
pop
scas
add
mov
or
cmpsl
adc
mov
pop
sbb
push
inc
pusha
inc
push
push
jne
popf
xchg
pop
jne
arpl
mov
pushw
and
and
and
xor
mov
sub
clc
leave
cltd
test
shrb
ja
dec
xlat
mov
add
cmp
push
cld
lret
mov
loopne
shll
jg
jge
inc
cltd
mov
add
mov
inc
inc
push
cli
addr16
jecxz
push
mov
addr16
cmp
lods
xchg
cmp
aad
fstpl
loop
jecxz
cmp
ja
push
xor
sbb
jne
daa
daa
xchg
mov
int
lods
mov
pop
int3
mov
xchg
les
dec
sbb
mov
mov
push
add
iret
cmc
sbb
xlat
cmpb
sub
aam
sub
into
push
pop
fs
arpl
shll
xor
pop
inc
push
sub
testb
pop
mov
mov
cmc
test
in
mov
or
and
jecxz
addl
push
fiadds
or
pop
xor
and
pop
and
frstor
js
iret
push
cwtl
pop
sarl
push
lret
rdtsc
mov
xor
cmp
sbb
sti
data16
cmp
push
popf
ror
lret
int3
pop
clc
or
add
aad
xor
xchg
and
stos
or
les
inc
aaa
mov
inc
shll
ss
or
mov
and
out
std
into
push
dec
xor
jo
das
lret
sub
jl
pop
mov
sahf
cmp
lret
ror
ret
insb
in
shll
in
and
xchg
shrb
mov
mov
repnz
add
push
and
pop
in
xchg
into
sub
lret
fisttps
xor
inc
inc
dec
in
xchg
mov
hlt
call
push
int
fstl
pop
leave
or
xor
in
xor
push
lds
push
sub
mov
jo
mov
jmp
in
ja
clc
mov
ds
jp
repz
pop
lock
hlt
rcrl
out
xchg
data16
xchg
icebp
xlat
ficoms
jbe
loopne
fsubrl
out
jmp
add
out
lock
in
movsl
idivl
ffreep
fldcw
cmp
test
hlt
mov
cltd
int3
xchg
cli
mov
enter
imulb
or
fs
cmp
sub
inc
jp
out
arpl
cwtl
xchg
mov
jg
rorb
cmp
insb
inc
dec
lds
fwait
sbb
je
pop
or
dec
inc
and
pop
test
test
dec
or
arpl
fbstp
push
ljmp
mov
enter
je
xchg
dec
add
or
lret
dec
add
mov
lock
pop
roll
push
je
fld
bound
sub
lret
out
and
int3
dec
or
push
jmp
jg
in
div
push
out
call
mov
lods
dec
sbb
cmpsb
lock
insb
dec
leave
test
cmpsl
int3
cmp
leave
adc
dec
cmpsl
ss
cmp
dec
repz
mov
jnp
loope
jmp
inc
cmc
mov
pop
leave
loope
cmpsl
xor
add
xchg
push
mov
std
mov
mov
test
test
mov
insb
scas
inc
cmpb
rorb
or
stc
aam
jmp
ret
xchg
pop
inc
lahf
add
pop
mov
shrl
test
inc
mov
imul
les
incb
mov
testl
out
inc
xlat
jb
loop
mov
mov
pop
add
scas
mov
stc
stc
inc
push
scas
cmp
es
mov
sub
sbbl
mov
lods
dec
pushw
xchg
inc
mov
mov
out
push
jns
add
fstpt
outsl
dec
jmp
rcl
in
cmp
sar
xchg
out
adc
lea
das
inc
dec
cmp
ret
iret
xchg
add
pop
add
jle
ret
mov
lds
cmc
cmp
sbb
scas
enter
mov
das
lea
test
dec
in
enter
pushf
push
cmp
mov
mov
fldcw
in
ret
scas
lret
pop
int3
xchg
movsl
outsl
rcll
sbb
fmuls
jecxz
inc
and
outsb
int
mov
inc
ret
sbb
xchg
enter
cmpsl
mov
rcrl
sbb
push
in
adc
push
lds
sbb
mov
test
push
popa
inc
inc
pop
cmp
cltd
push
fld1
out
loope
sub
mov
push
dec
xchg
dec
test
mov
sub
jle
cmpsl
das
in
das
and
popa
or
shrl
ljmp
jmp
popa
leave
cmp
push
sti
mov
xor
loopne
mov
dec
inc
ror
add
jmp
scas
enter
inc
out
inc
xor
imul
xchg
pop
rclb
or
dec
dec
addb
pop
lds
or
ret
inc
mov
jp
jne
jmp
icebp
jle
dec
pop
mov
pop
mov
adc
scas
arpl
inc
fwait
dec
hlt
jmp
push
jns
cmp
mov
lods
mov
clc
push
repz
jo
sbb
cmpsb
cmpl
inc
subl
mov
xchg
pop
sti
lret
cld
or
and
mov
out
hlt
lods
xchg
inc
add
xor
xchg
dec
out
mov
and
cmp
cmpsl
sbb
out
push
inc
inc
shl
lds
pop
dec
clc
call
inc
sub
inc
pop
sbb
mov
xor
mov
or
mov
jnp
jle
mov
dec
mov
fstl
pop
xlat
sbb
inc
adc
dec
or
mov
lret
inc
sbb
mov
psubsb
insl
mov
mov
cmp
jmp
mov
xchg
lods
hlt
aaa
add
fsubrl
cmp
gs
pop
hlt
in
std
dec
mov
stos
cmpsb
sub
fwait
push
test
mov
inc
mov
xchg
les
sub
cmp
push
dec
inc
lods
stc
xor
lea
imul
mov
add
ljmp
out
sub
mov
hlt
jge
push
jle
out
ljmp
jno
jns
sub
sub
xchg
cmp
pop
mov
and
lock
bound
mov
sahf
stos
push
xchg
cmp
jbe
cmp
cmp
hlt
jmp
and
sbb
fistpl
out
xchg
xchg
clc
ja
ss
movsl
or
dec
xor
cmp
ret
cmpsl
sbb
or
mov
and
adc
mov
gs
lods
or
inc
mov
ss
sbbl
rcll
jns
xor
bound
add
loop
jmp
mov
mov
pop
dec
stc
add
mov
pop
jecxz
or
clc
inc
outsl
pop
xor
ds
adc
and
adc
xchg
and
sub
jae
cmpsb
std
pop
xchg
pop
ret
or
cld
iret
cmp
jae
stos
dec
jo
test
fdivrp
adc
add
cmp
xchg
inc
popf
out
push
insl
push
leave
std
notl
xchg
mov
sti
lcall
imull
out
mov
adc
sbb
lods
leave
addl
jmp
int
ror
iret
fildll
sub
pop
adc
add
popa
sbb
hlt
in
lds
loopne
sub
mov
aam
pop
or
sub
notl
mov
inc
lea
lods
dec
rcll
fldenv
jp
and
es
pop
mov
push
push
xor
adc
add
pop
pop
push
data16
test
dec
sti
and
test
mov
out
push
and
iret
push
or
xchg
jno
xchg
aaa
lods
push
add
mov
add
test
aaa
push
cmpsb
ret
jae
mov
lret
in
pop
sub
mov
insl
lret
inc
xor
mov
xor
stc
and
scas
lret
dec
ljmp
mov
mov
jno
xor
push
insl
shlb
mov
aad
mov
mov
mov
jp
lret
lods
jmp
rclb
hlt
dec
int3
enter
cmpsb
pop
hlt
mov
leave
stos
xchg
pop
ss
push
mov
mov
add
or
icebp
or
js
inc
movb
lods
xchg
mov
insl
mov
rcrl
fcmovu
fmul
push
repnz
out
xchg
xchg
mov
mov
imul
mov
loop
into
inc
mov
dec
stos
cmp
push
xor
mov
dec
mov
insl
adc
inc
dec
xabort
int3
push
jno
inc
enter
inc
dec
push
xor
iret
out
lods
iret
sub
xlat
lret
sbb
in
push
xchg
adc
and
sub
lock
enter
push
add
inc
jnp
pushf
mov
loopne
imul
bound
xor
sbb
mov
mov
leave
jnp
insb
cs
mov
in
jmp
push
push
xor
mov
cmp
jne
outsl
dec
in
fstpl
andb
jge
sbb
repz
sub
xchg
cmp
int3
sub
adc
add
xor
enter
rcrb
sub
mov
popa
or
cmpsl
or
xor
lret
sub
leave
stos
dec
lret
rorl
ljmp
cmp
push
pop
jno
lcall
inc
int
and
movb
shll
repnz
inc
rorl
add
test
cmp
aam
les
or
inc
insb
add
xlat
add
notl
xor
and
push
and
mov
cmp
inc
loope
sbb
xchg
fsub
or
pushf
adc
push
mov
xchg
mov
push
iret
and
pop
fadd
fs
sahf
inc
es
clc
ss
adc
aaa
or
xorl
out
bnd
cs
xchg
sub
and
xchg
lods
mov
repz
pop
lock
insb
leave
jmp
pop
pop
or
xlat
mov
sub
test
inc
fadd
shlb
push
cmp
cmp
in
aad
or
lcall
pop
push
or
sbb
outsl
mov
shr
pusha
cmp
adc
adc
pop
mov
cmp
sub
popf
xchg
leave
lret
xchg
pop
xor
xchg
jmp
xorb
mov
cmpsl
push
xchg
push
hlt
test
cmpsb
jle
test
push
in
or
nop
ret
das
idiv
add
add
jl
loop
push
test
movsl
dec
out
pop
bound
es
sub
dec
push
jne
jnp
mov
into
pop
jecxz
loope
mov
xor
xchg
insw
sarb
adcl
pop
es
shll
popf
dec
inc
mov
mov
aam
orb
sbb
iret
int
or
xchg
dec
jae
adc
pop
mov
adc
icebp
out
dec
cmp
sbb
push
inc
push
lcall
sub
cmpsl
test
enter
loope
hlt
sub
jbe
loopne
jbe
adc
mov
add
mov
sbb
jbe
push
mov
cmp
outsb
xor
adc
orb
jge
add
clc
stc
enter
add
sarb
lods
mov
aas
mov
pop
and
out
iret
cmp
das
xchg
dec
loope
out
inc
push
pop
sub
data16
rcrl
movsl
mov
sub
jo
push
push
jecxz
xchg
sub
mov
sbb
push
mov
sub
subb
xor
adc
shrl
pop
pusha
xor
iret
inc
jle
xchg
dec
bound
dec
fldenv
outsb
int
xor
inc
xor
ds
jmp
pusha
or
adc
insl
mov
inc
nop
inc
popa
sbb
mov
pop
lods
out
mov
std
ss
ss
sbb
pusha
lret
xchg
cmpsb
and
test
mov
sub
in
testl
jmp
shrb
fs
clc
test
add
pop
inc
sbb
jmp
pop
push
xchg
inc
in
mov
jp
mov
sbb
sar
mov
push
pop
pop
jae
sahf
lret
dec
sahf
leave
mov
fs
insl
xor
out
addl
push
xchg
leave
loop
sub
sub
nop
dec
fwait
sarl
mov
ret
cmpsl
adc
test
insl
test
or
push
adc
mov
mov
stos
sbb
and
imul
xchg
lcall
lahf
adc
lods
jle
sub
inc
hlt
push
or
jle
xor
clc
mov
mov
sbb
push
int
mov
adc
idivb
imul
aas
push
and
out
jo
pusha
ja
xchg
push
mov
loop
clc
jecxz
inc
rol
lock
lahf
lret
or
jle
dec
mov
lcall
jecxz
sub
in
xor
pop
jge
xchg
push
pop
iret
jmp
xor
dec
dec
shrb
xchg
mov
pop
bound
push
dec
stos
jmp
cmpsl
addr16
dec
inc
out
add
cmpsl
xchg
or
cvttps2pi
shlb
cmc
insb
inc
imul
cmp
push
adc
dec
cmpsb
lcall
insb
es
mov
hlt
test
sti
xor
mov
xor
lret
xor
push
clc
mov
jnp
mov
dec
jmp
roll
xor
inc
insb
xor
mov
loopne
inc
jle
xor
sub
xor
insb
xchg
push
mov
movsb
scas
in
dec
sahf
repz
std
add
mov
push
sub
or
into
mov
cmpsb
jbe
lret
sub
rol
cmp
in
lock
pop
cmp
xchg
dec
add
imul
adc
and
push
call
roll
xor
subb
into
clc
sbb
mov
into
and
sahf
fimull
xchg
cltd
jb
subl
lret
dec
sub
adc
das
dec
inc
pop
cmp
icebp
and
xchg
push
push
mov
cmp
pop
inc
sbb
jns
cmpsl
mov
outsl
pop
add
mov
or
dec
jnp
fimuls
cmp
dec
fsubs
inc
cmp
add
loopne
dec
js
cmp
ret
inc
mov
pop
cwtl
mov
sbb
icebp
arpl
inc
jle
inc
into
mov
push
pop
test
dec
in
lods
test
inc
mov
xor
ss
fsave
xchg
xchg
nop
cmp
xchg
insl
or
add
jp
xchg
mov
wrmsr
or
mov
xor
lret
mov
rorb
or
roll
jmp
and
pop
fdivs
cmpsl
pop
sbb
sub
or
jne
push
push
inc
into
scas
mov
cmpb
int
iret
sub
pop
dec
das
inc
inc
xchg
inc
xor
scas
gs
mov
fisttpl
lods
or
int3
ss
inc
jp
xchg
push
in
add
shll
test
push
and
in
xchg
aas
cmp
loope
loopne
inc
out
mov
mov
out
fldenv
push
jle
dec
dec
lods
out
cmpsl
inc
lods
push
jmp
xchg
std
push
sar
hlt
shll
insl
xchg
pop
test
push
out
jecxz
mov
and
lret
pop
mov
push
push
push
jnp
cli
dec
stos
dec
push
into
jle
dec
out
lret
xchg
mov
mov
iret
pop
jne
adcb
or
mov
jle
mov
or
inc
in
and
mov
mov
mov
loopne
dec
adc
xchg
add
mov
cmpsl
sbbb
dec
outsb
jmp
cld
add
fabs
rorb
xor
push
push
hlt
jecxz
jle
cmp
pop
sub
mov
movsb
adc
xchg
imul
fwait
hlt
into
dec
cmp
xchg
pop
into
test
lahf
jno
inc
xchg
and
or
fidivrs
xchg
pop
inc
jecxz
add
adcl
test
out
js
out
mov
sub
dec
dec
add
add
call
mov
popl
loope
outsb
inc
jl
mov
das
sbb
jne
push
mov
inc
fsubs
dec
mov
inc
push
hlt
add
push
andnps
pop
xor
xor
in
and
push
cmp
test
or
xchg
jns
insb
sub
les
xchg
jmp
xchg
scas
jne
mov
int3
inc
aaa
les
inc
jne
dec
test
xchg
dec
jp
jno
into
add
or
mov
push
pop
sbbl
pop
into
dec
idiv
pop
mov
jno
int3
jg
test
jp,pt
lret
sti
rorl
pop
push
sbb
loopne
scas
insl
into
add
push
ret
lret
ss
lret
jl
imul
or
or
pop
inc
out
enter
roll
mov
dec
pop
sbb
enter
push
dec
jmp
sbb
cli
aam
lahf
icebp
dec
test
loope
movsl
loop
dec
push
and
out
cmc
jbe
mov
icebp
pop
out
sbb
icebp
icebp
sub
outsb
xor
dec
inc
mov
clc
hlt
push
stc
aad
call
pop
dec
jbe
cld
and
incl
jnp
mov
dec
rol
or
and
cwtl
sub
and
or
in
in
stc
outsb
pusha
fwait
mov
or
negb
lret
and
ret
fs
inc
aas
mov
mov
mov
lret
nop
inc
pusha
jmp
lret
pop
cmpsb
sub
pusha
xchg
fmull
xor
lret
dec
lret
test
call
mov
mov
dec
sbb
mov
cmp
fldl
mov
dec
cmp
inc
add
pop
out
xchg
icebp
mov
dec
add
xor
call
and
add
inc
and
in
sub
into
inc
arpl
loope
sbb
dec
jno
iret
dec
ret
jo
mov
enter
test
arpl
insl
addl
jnp
dec
stos
lret
call
test
enter
int3
xchg
jae
repz
outsl
mov
test
int3
mov
lea
imul
test
xor
daa
test
dec
jmp
cmp
inc
movsb
pop
mov
pop
dec
or
out
aas
mov
repnz
add
loope
xchg
dec
jb
sti
je
xchg
clc
xor
mov
fcomi
sbb
dec
adc
lret
fisttpll
pusha
adc
lret
add
jne
sbb
ret
pop
sub
push
cmp
mov
cmp
std
sbbl
sti
sbb
out
in
dec
add
aad
xor
sub
jecxz
mov
sub
scas
popa
inc
enter
fnstsw
inc
inc
fcoms
adc
out
shll
loopne
fidivl
mov
or
lret
cmp
push
fcomi
leave
or
lret
xchg
pop
out
inc
lret
push
imul
dec
pop
push
out
cmp
int3
adc
aaa
jne
int3
push
mov
mov
add
or
push
sbb
xlat
lods
cli
dec
jmp
and
into
or
mov
xchg
nop
pop
lods
mov
ficomps
add
iret
dec
js
inc
or
mov
sub
aam
incl
iret
sub
loopne
in
test
and
sbb
pop
mov
xor
mov
xchg
push
add
sub
push
inc
dec
add
fsubrs
inc
cmp
sub
dec
jmp
bound
icebp
pcmpeqb
or
pop
int3
repz
hlt
dec
test
stc
out
imul
push
mov
inc
xchg
dec
pop
mov
pop
mov
lds
xchg
fistl
inc
fstpt
ds
or
dec
mov
sub
or
cmp
mov
dec
cmp
in
jae
stos
out
jecxz
test
lahf
mov
sbb
xchg
sub
mov
cld
or
shll
xchg
and
repnz
clc
and
inc
lret
cmpb
loop
and
pop
cmp
negl
push
std
mov
fimull
or
mov
adc
mov
xlat
adc
cwtl
leave
in
pop
call
lret
test
push
iret
or
cltd
ja
dec
testb
cmp
sub
sub
xchg
jmp
mov
push
out
xchg
lret
mov
sti
jb
iret
loop
xor
out
fistpl
sti
dec
jbe
sbb
xchg
cmp
dec
or
sbb
push
mov
add
sbb
push
mov
inc
pop
sub
xchg
pop
jno,pt
mov
inc
or
fisubrs
inc
inc
push
or
lret
jae
xchg
pop
mov
sub
mov
mov
mov
leave
and
es
shll
enter
and
js
mov
and
nop
mov
sahf
les
sub
mov
xchg
ret
fs
adc
cmp
dec
add
pop
sub
out
lret
addps
dec
out
or
test
xor
imulb
inc
aam
in
adc
push
lret
xor
enter
leave
js
mov
xor
inc
lock
pop
adc
popa
mov
ss
inc
stos
dec
xchg
ljmp
dec
cli
inc
lods
test
mov
test
inc
lods
cmpsl
sbb
pop
or
jb
and
enter
adc
and
xor
loope
dec
ss
stos
mov
cmc
sbb
fwait
pusha
pop
in
sub
jmp
mov
loop
psllq
jbe
insl
cld
add
test
mov
pop
out
pop
add
in
dec
jne
outsl
aam
cltd
inc
imul
decb
and
insl
add
lcall
or
mov
enter
enter
in
add
out
mov
insb
stos
mov
mov
add
or
lods
mov
add
xor
mov
cmpsb
mov
pop
int
dec
fadds
pop
xor
lahf
sub
icebp
sbb
inc
aad
lods
mov
mov
pop
ret
inc
or
mov
mov
push
scas
cmp
in
mov
push
sub
aad
lds
inc
push
bswap
pop
sub
out
loope
xor
ja
scas
dec
mov
sub
add
lock
fsubl
ljmp
push
lahf
dec
addl
push
adc
repz
jnp
pop
ljmp
insl
test
loope
mov
shll
lret
dec
jecxz
lret
cmc
xor
and
sarb
mov
and
sbb
pop
dec
push
int3
add
lods
jnp
mov
dec
bound
cld
movsb
loope
or
jns
test
cmp
pop
cld
or
dec
sbb
dec
icebp
pop
lret
int3
sbb
cli
xrelease
jle
mov
sbb
popf
out
stos
int3
dec
test
dec
sti
dec
mov
xlat
and
add
pop
fisttpll
inc
inc
mov
and
mov
stc
sub
and
into
jno
decb
stos
sbb
jp
test
push
cmpsb
inc
jmp
int3
jmp
iret
xchg
pusha
sti
sbb
scas
cmp
lret
clc
faddl
rol
enter
mov
cld
push
mov
add
mov
add
nop
cmp
mov
pusha
add
mov
cmp
in
jns
lret
and
bound
cs
pop
jmp
push
and
stos
lcall
xor
test
dec
enter
push
push
jge
aam
loop
or
push
push
cmp
push
or
mov
loopne
inc
push
inc
sbb
pop
mov
popf
lods
lods
dec
push
subl
add
jne
inc
les
mov
outsb
adcl
pop
lods
push
lods
fistpll
pop
daa
xchg
inc
jo
inc
in
adc
cmp
shrb
imul
pusha
inc
xchg
sub
push
test
push
mov
cmp
movsl
sub
sub
ljmp
mov
or
lret
dec
inc
push
xchg
xchg
mov
mov
pop
mov
jmp
cli
sub
dec
mov
inc
fstpl
pusha
js
nop
rclb
pop
outsb
mov
mov
imul
clc
pusha
inc
push
dec
out
xor
cmp
call
dec
mov
mov
clc
fs
jmp
push
pop
sub
push
push
xor
clc
jg
xchg
out
adc
mov
lcall
call
xchg
xor
in
jbe
mov
in
xor
push
and
outsl
jns
add
adc
test
mov
cmp
dec
mov
sbb
mov
cmpsl
dec
clc
cmpsb
in
add
mov
in
sti
xchg
mov
dec
lds
inc
test
lods
push
xchg
sbb
and
inc
data16
out
leave
cmp
adc
enter
pop
ljmp
dec
fldpi
and
dec
inc
push
enter
xor
pop
dec
mov
xchg
loopne
mov
adc
rorl
cmp
flds
cld
cmp
add
je
pop
push
pop
pusha
lods
push
cmp
push
cmpsl
or
mov
lds
add
xor
inc
lret
jmp
inc
and
out
gs
ja
mov
stc
dec
mov
movsb
mov
sub
jne
and
insb
mov
movsl
cmovo
dec
add
push
sub
and
sub
insl
or
mov
pop
or
cmpsb
inc
adc
outsb
inc
xchg
adc
dec
aaa
insb
insl
jle
jmp
iret
pop
adc
in
je
dec
iret
cld
jge
lods
sbb
int3
enter
push
mov
jge
mov
xchg
jae
push
dec
jge
sub
mov
and
ss
xor
add
leave
sub
jmp
out
aam
sbb
sub
sub
daa
sub
adc
hlt
cmp
push
inc
xchg
add
arpl
xchg
hlt
movsl
mov
and
cld
jge
repz
dec
dec
jecxz
pop
adc
jp
push
jp
adc
and
jecxz
pop
xor
test
dec
sbbl
mov
inc
pop
push
pop
ret
stc
push
mov
movsb
ud2
leave
leave
repz
leave
adc
sub
fs
lea
or
lret
imul
push
cmp
mov
in
mov
mov
sbbl
adc
insb
cmp
xorl
ret
sbb
adc
and
inc
mov
insl
loope
xchg
nop
inc
imul
mov
pop
push
dec
addr16
add
in
cmpl
aas
dec
sub
out
dec
fisttps
cmovnp
inc
inc
test
pop
or
iret
mov
xchg
ljmp
inc
cmpsl
aad
mulb
jmp
mov
or
aad
popa
popa
and
frstor
adc
mov
push
mov
icebp
aad
out
jmp
stos
or
movsb
pusha
jne
leave
or
hlt
cltd
fwait
and
sbb
mov
lret
nop
lcall
enter
in
fmulp
mov
fstl
adc
mov
dec
in
or
jmp
lcall
sbb
adc
add
ret
jl
jmp
xor
sub
mov
or
sub
push
cmp
inc
cmpsb
shlb
adc
dec
sbb
loop
mov
pop
lret
pop
leave
or
mov
jnp
lret
or
loopne
push
xor
push
mov
xchg
inc
xchg
xchg
sbb
cmpsb
dec
push
fldcw
je
cmpb
stc
pop
addr16
movl
or
sub
imul
mov
push
push
cmp
sub
and
cmp
in
xchg
icebp
cli
leave
int
inc
fdivrs
loop
loope
test
sub
jmp
leave
sub
in
mov
dec
cmpb
jmp
leave
icebp
pop
mov
fdivl
std
xor
mov
push
mov
ss
push
mov
icebp
inc
ret
mov
cmp
mov
adc
mov
adc
sbb
mov
push
enter
syscall
inc
inc
in
cwtl
cltd
jp
pop
mov
loop
inc
out
aam
js
hlt
or
mov
adc
incb
jp
jns
jns
lods
out
lds
push
loop
icebp
push
sub
sub
in
clc
outsl
or
dec
xor
or
add
adc
scas
test
test
dec
push
pusha
xlat
stos
rorl
adc
mov
mov
push
cmp
out
xchg
mov
and
stos
sbb
sub
xorb
movsb
imul
dec
in
int
outsl
lock
dec
jmp
or
cwtl
dec
jle
inc
incb
pusha
das
lcall
imul
scas
add
mov
jne
dec
loopne
int
icebp
pop
push
push
xor
jecxz
imul
mov
sub
lret
push
test
or
fsubl
xlat
jmp
sbb
leave
je
inc
fnsetpm(287
adc
mov
test
cmp
mov
shrb
mov
xor
mov
cli
lds
sbb
sbb
cltd
shl
sbb
cmp
mov
std
sbb
or
lret
push
cmp
in
jl
into
rorb
aas
dec
cltd
stc
push
mov
jnp
dec
xor
std
sbb
push
aad
into
dec
pop
and
call
pop
mov
lea
popa
lods
push
lret
cmp
xchg
cmc
mov
jb
es
les
dec
sbb
jno
pop
sub
push
xlat
push
mov
mov
jne
sbb
sar
push
xor
inc
push
imul
or
pushf
lahf
out
stc
xchg
leave
dec
cmp
outsb
pop
movsl
mov
jo
std
push
mov
gs
mov
and
or
dec
push
inc
xchg
mov
fst
xchg
or
dec
shrl
pop
inc
push
inc
pop
xchg
xchg
loope
mov
iret
outsb
sbb
inc
sub
mov
mov
push
cmp
inc
data16
fcomip
test
in
push
dec
nop
outsl
scas
push
jle
and
add
out
sub
je
inc
xchg
movl
cmp
push
inc
and
xlat
and
cmp
cmp
sti
outsb
lock
dec
orl
and
add
push
and
push
add
mov
pop
inc
mov
dec
adc
dec
jno
sub
push
mov
ret
fistps
into
fcomps
xchg
cmpsb
cmp
ss
pop
outsb
cmp
dec
adc
add
push
push
rcrl
cmp
jae
inc
dec
mov
xor
mov
lret
mov
fcompl
or
and
ja
and
pop
dec
scas
jecxz
sub
mov
cmpsl
imul
mov
dec
pop
mov
test
xchg
sub
dec
xchg
adc
mov
push
movsl
cmp
js
mov
sbb
pop
push
inc
icebp
or
mov
into
adc
pop
inc
movsb
push
push
mov
daa
lcall
dec
mov
dec
sub
dec
dec
dec
es
fwait
mov
aad
movsl
inc
push
mov
cmpsb
aad
jecxz
shl
aam
cmp
cmpsb
push
fbld
pop
vminps
inc
mov
sbb
pop
pop
mov
lcall
jb
mov
addr16
jle
mov
inc
js
out
mov
inc
or
push
test
xchg
pop
and
pop
jp
std
mov
xorb
sub
jbe
pop
out
cmpsl
jmp
inc
imul
scas
insb
aam
call
xchg
pop
cmp
push
and
cmp
repz
mov
clc
dec
pop
stc
icebp
dec
subl
inc
push
loope
xor
loope
in
xor
mov
xchg
bound
jnp
je
fsts
test
lret
mov
hlt
or
dec
pop
dec
mov
cmpsb
or
mov
popa
out
aas
js
scas
cltd
pop
in
lret
lds
push
dec
lea
aas
leave
and
shrb
mov
sbb
out
in
testb
push
inc
cmp
push
xchg
add
jno
ja
test
mov
push
lret
add
inc
mov
fsubl
pop
fisttps
xchg
fdiv
mov
add
xor
inc
cld
ss
aas
dec
es
push
push
add
xor
loope
lds
ja
jl
decl
dec
mov
add
mov
sub
xor
sub
or
orl
mov
add
xchg
inc
jle
push
mov
jge
and
pusha
cmpsl
sub
lret
inc
jnp
push
cltd
cmp
push
stc
fwait
or
push
pop
sub
sub
add
push
jg
mov
rorl
jbe
int3
rorb
in
outsb
mov
hlt
mov
cltd
or
inc
push
sub
cmp
sti
sub
je
cmp
add
sub
pop
les
jbe
int3
loop
stc
push
or
test
pop
add
mov
mov
pushf
pop
sbb
lahf
mov
dec
shrd
xor
add
rcl
dec
xor
aad
rclb
int3
jb
ss
iret
lcall
dec
and
xchg
test
lds
add
sbb
pop
gs
sbb
add
push
sbb
sbb
in
mov
dec
insb
push
xchg
dec
sbb
rorl
sbb
enter
xchg
push
pop
sbb
sarl
scas
iret
pop
jne
lods
dec
ja
jl
or
inc
lret
lret
stos
push
mov
fwait
int
xor
es
dec
cmpsl
dec
pop
les
out
test
push
inc
fs
dec
out
sbb
dec
int
test
dec
cmp
sub
jecxz
mov
out
xchg
mov
mov
mov
mov
in
xchg
rcrl
push
push
imul
sub
stos
push
ds
cli
pop
cmp
enter
push
pop
push
dec
int
cmc
or
add
arpl
lods
mov
pop
insb
outsb
mov
inc
dec
fstpt
add
in
inc
fdivrp
mov
call
add
cmp
mov
push
fst
dec
pop
std
int
inc
dec
dec
mov
pop
iret
sub
lods
popa
insb
fbld
dec
mov
imul
sbb
add
dec
sub
sub
or
dec
inc
and
mov
dec
pop
mov
in
ret
push
cwtl
roll
push
inc
popa
addr16
push
icebp
inc
jnp
pusha
lahf
fistl
jnp
mov
aas
sub
sub
add
sub
je
mov
push
call
sub
pusha
outsb
pop
and
es
shl
jo
dec
mov
mov
push
out
loopne
cld
sbb
stos
cmp
pop
pop
jbe
fstl
fwait
push
je
jge
dec
push
bound
dec
lds
dec
cmc
mov
sbb
cmp
fs
shll
add
jmp
dec
pop
push
jl
push
push
in
jmp
data16
xlat
roll
pop
insb
push
cmc
fistpl
fldt
leave
jg
bound
ja
add
aad
test
leave
fmull
xor
jnp
pop
es
add
mov
mov
and
out
cmp
andb
jmp
dec
jno
mov
test
xchg
push
xor
das
test
pop
sbb
xchg
sbb
add
or
orl
fcmovne
xor
add
and
push
pop
pop
push
xlat
inc
scas
int
lods
icebp
mov
lods
cmp
out
dec
xchg
xchg
jb
xchg
mov
sar
aas
in
dec
jnp
enter
mov
sub
out
in
add
push
and
add
inc
frstor
mov
cmp
push
fs
sub
jae
iret
sub
in
xor
filds
mulb
mov
mov
sub
pop
pop
push
scas
out
cmp
sbb
push
sbb
dec
sub
test
add
jl
test
hlt
or
sub
dec
dec
mov
xor
xor
insl
sub
mov
sub
push
lods
stos
loopne
sub
or
fstpl
pop
mov
inc
mov
icebp
push
rcl
lock
shlb
and
mov
and
cmp
js
dec
xorl
add
imul
sub
mov
mov
vmovaps
dec
fsts
push
call
mov
out
or
cmpsb
cmpl
daa
shr
push
xchg
cltd
addr16
sbb
call
and
or
pop
stos
sub
add
mov
test
stos
aam
sub
or
jno
lret
leave
sub
xor
xchg
lods
jbe
inc
int3
orb
cmpsl
lods
addb
je
xor
cmp
xchg
xchg
push
bound
sbbl
push
loop
arpl
lods
mov
lods
xchg
pop
adcb
icebp
xchg
sbb
inc
aam
inc
push
push
xchg
and
fisttpll
int
lods
xor
test
sub
fstps
dec
push
jmp
add
pop
cmp
sub
pop
dec
push
jmp
lds
dec
leave
or
mov
cltd
mov
or
sub
fabs
fmull
sub
sub
inc
rcrl
int
sqrtps
inc
or
shrl
push
jmp
fisttps
and
inc
dec
push
cltd
rcl
add
or
mov
pop
rol
push
inc
pop
rolb
or
into
insl
pop
vcmpps
push
pop
into
pop
push
rorl
sub
push
mov
in
leave
or
dec
addl
in
dec
dec
pop
enter
pop
or
pop
dec
pop
rorl
dec
mov
mov
inc
flds
shrb
insl
sub
xchg
ror
prefetch
pop
lods
stos
inc
std
dec
sub
pop
dec
cmp
dec
inc
test
add
into
cmp
inc
dec
mov
loope
sub
push
rcrb
inc
pop
push
pop
mov
sub
pop
sub
or
sub
dec
loope
or
inc
add
sub
lds
pop
mov
int
inc
fcmovb
ret
or
cmp
pop
cmp
dec
das
flds
sub
push
cmp
sub
les
push
fistpl
imul
hlt
dec
pop
ret
lds
inc
ret
or
fdivrl
pop
enter
dec
mov
fistpll
pop
sub
inc
dec
sbb
rcll
or
dec
in
rcll
add
dec
dec
rclb
pop
inc
push
rcrl
pop
into
ror
push
sub
or
push
or
sub
lret
pop
dec
into
std
aad
jbe
push
add
and
xchg
sub
fnstenv
sub
iret
mov
dec
sahf
xlat
mov
sbb
sub
dec
cmpsl
xor
subb
inc
jge
push
adc
dec
add
cs
push
cmpsl
lret
outsl
jns
sbb
sub
lret
adc
lret
enter
xor
mov
add
push
cli
out
dec
pop
push
out
xor
test
jbe
imull
cmp
pop
push
jle
pop
adc
mov
in
das
push
clc
and
mov
stc
cmp
jns
mov
je
mov
mov
push
adc
dec
mov
leave
dec
push
jnp
or
dec
and
cmpsb
insl
cmp
daa
add
dec
or
inc
mov
xchg
cmp
in
mov
js
push
pushf
or
ljmp
push
adc
push
or
push
stos
rcrb
ficomps
dec
es
lcall
push
lds
jae
adc
mov
shr
cmp
xchg
mov
sbb
dec
dec
inc
lods
dec
xor
dec
pop
arpl
xor
and
xor
cld
int3
inc
fucomip
je
and
mov
mov
mov
stc
outsb
jno
fs
iret
mov
das
mov
push
pop
mov
insl
push
sbb
push
insl
push
push
enter
mov
bound
cmpl
jl
sub
out
mov
mov
xor
stos
cltd
cmp
sub
or
call
mov
add
clc
icebp
cltd
inc
mov
scas
out
jmp
push
jbe
pop
repz
dec
ret
imul
jne
rorl
nop
ror
hlt
enter
mov
push
mov
dec
xchg
or
xor
hlt
add
push
mov
or
icebp
pop
sti
and
mov
mov
lcall
rcll
imul
mov
enter
loopne
dec
test
clc
cmpl
dec
pop
sub
sti
in
dec
xchg
mov
inc
in
rcr
mov
subl
frstor
inc
andl
imul
jnp
pop
inc
sub
test
dec
or
or
ja
out
mov
out
loop
aad
jo
test
xor
mov
scas
mov
andl
sbb
scas
test
pop
sbb
fwait
dec
cmp
sti
or
or
jmp
push
enter
loope
hlt
sbb
inc
sbb
mov
fwait
imul
and
push
mov
pop
pushl
dec
cwtl
fwait
insb
fsubrl
aad
loopne
mov
cltd
dec
out
mov
leave
add
hlt
xor
scas
jmp
mov
ss
push
imul
xchg
test
das
sbb
xlat
adc
dec
push
xchg
fldenv
roll
push
in
pop
out
lret
jl
jmp
pop
dec
test
jb
push
and
push
push
mov
cmp
push
pop
jbe
dec
dec
xchg
mov
sub
add
xor
cmpsb
mov
enter
dec
imul
popf
bound
add
mov
hlt
std
std
mov
jo
mov
adc
fdivrp
mov
and
pop
inc
and
dec
sub
push
lock
dec
mov
ficoml
mov
out
jp
loope
dec
stos
les
leave
out
push
cmpsb
in
lods
mov
leave
mov
add
and
iret
adc
in
sbb
push
test
enter
push
shrl
push
dec
mov
add
adc
leave
pop
xor
lock
adcl
mov
inc
jns
push
push
adc
cld
push
repz
mov
sbb
mov
cwtl
into
out
push
sbb
or
xchg
mov
push
insb
cld
outsl
ss
or
inc
pop
test
lock
hlt
divb
jmp
adc
into
in
inc
movl
dec
sbb
leave
or
mov
insb
aad
pop
sbb
sbb
inc
repnz
cli
pop
inc
jnp
or
sbb
lcall
dec
aad
sub
pop
repz
inc
xor
pop
inc
push
out
mov
idivb
adc
pop
nop
cmpsb
inc
sar
xor
mulb
lods
mov
enter
imul
sub
mov
ret
out
das
cmp
arpl
subb
das
in
gs
dec
cmp
pop
mov
bswap
insb
addl
dec
sahf
pop
push
icebp
push
add
pop
push
dec
aad
push
cmp
lea
les
or
mov
sub
push
xchg
data16
shr
addr16
insl
int
mov
int
push
dec
stos
cli
dec
or
cwtl
lds
mov
cltd
ret
pop
push
loop
pushf
sub
or
jmp
data16
pusha
fstpt
jge
and
push
inc
imul
push
push
rorl
inc
or
add
xchg
xor
mov
inc
push
movsb
inc
add
cmp
cmpsl
rclb
xchg
ja
ss
mov
outsb
xchg
mov
push
xor
inc
int3
jmp
jecxz
jb
xor
sarl
jo
scas
adc
inc
sarl
dec
dec
mov
out
mov
push
push
daa
mov
xchg
push
jmp
sub
fsts
popa
cmp
push
sarl
outsl
lea
shrl
arpl
hlt
subb
jge
lock
enter
andb
insb
or
sub
bound
jae
add
mov
xchg
cmc
repnz
les
lock
test
add
stc
push
xchg
imul
adc
push
dec
sbb
inc
div
stos
adc
xor
icebp
in
mov
inc
and
test
pop
sbb
push
inc
dec
sub
push
pop
loope
adc
sbb
push
adc
dec
push
or
jl
arpl
daa
dec
mov
dec
enter
sahf
cmp
push
lahf
test
pop
xor
or
adc
dec
sub
pop
jae
jnp
push
or
dec
sbb
ljmp
xor
ljmp
jnp
ljmp
popa
add
out
clc
push
or
mov
adc
sub
test
add
clc
dec
lea
lea
and
dec
add
mov
jp
imul
lret
inc
mov
mov
xchg
and
or
sub
ljmp
test
in
test
or
xchg
sahf
insl
orl
sbb
lret
mov
inc
stos
mov
repz
add
cwtl
pop
xor
mov
imul
cmp
mov
pop
cmp
mov
into
lods
mov
std
inc
or
cld
push
mov
mov
xchg
mov
push
cmp
jle
sub
loope
inc
call
test
sub
jecxz
jmp
out
xor
out
jcxz
and
pop
mov
and
jmp
inc
and
cmp
test
mov
test
xor
add
add
add
decl
or
adc
add
mov
out
pop
push
cmpsl
adc
push
or
scas
fadd
adc
shrb
dec
sbb
mov
push
xchg
call
cwtl
ret
lret
mov
test
cld
mov
ret
xchg
sub
pop
sbb
cmpsl
sahf
cmp
mov
scas
loope
stos
dec
mov
dec
cmp
mov
sub
push
push
mov
add
pop
iret
out
gs
leave
and
inc
lea
jp
mov
dec
repz
leave
out
xor
adc
pop
push
jbe
iret
sti
lods
call
shrb
fisubs
mov
scas
out
push
xlat
adc
dec
push
insl
repnz
clc
add
stos
movsl
sbb
leave
or
lock
xchg
cmp
push
es
push
cmp
add
jecxz
inc
roll
mov
jge
arpl
ss
out
cmpsl
ror
aam
or
jno
ds
add
pop
mov
lret
rcll
mov
test
jmp
orl
sbb
add
pop
pop
cmp
mov
sbb
xor
js
pop
clc
addl
push
pop
fwait
and
shrl
sub
adc
xor
add
push
pop
int
mov
xchg
movsb
orb
push
out
pushf
sarb
ret
jg,pn
jle
sbb
cwtl
aam
inc
push
pop
cmpsb
enter
pop
sar
out
mov
aad
pop
xchg
cmp
add
test
pop
mov
jmp
jnp
xchg
jecxz
imul
xchg
push
popf
add
mov
sbb
inc
inc
lds
sub
cwtl
rorb
mov
inc
inc
mov
dec
loopne
fdiv
sub
xchg
sub
push
mov
xchg
inc
outsb
shlb
movsl
jae
outsl
popa
dec
jae
mov
mov
inc
loop
or
mov
xchg
inc
fbld
loopne
cmp
adc
sub
dec
dec
sbb
lods
out
pop
es
in
sub
cmpsl
int
push
dec
pop
inc
inc
mov
push
push
lods
stc
jmp
mov
or
xchg
push
fidivrl
or
iret
lea
or
movsb
xchg
push
xchg
mov
in
imul
js
add
ja
dec
sub
inc
mov
adc
dec
mov
push
dec
shr
jp
mov
sbb
cmc
aas
shrb
arpl
outsl
mov
mov
loopne
das
repnz
push
sub
bt
outsl
sbb
call
xchg
lods
or
adc
jecxz
out
repnz
scas
rorb
dec
or
or
ret
stos
inc
lods
push
inc
mov
cli
jmp
pop
scas
imul
psrld
inc
add
pop
lock
jbe
lock
dec
call
movsb
cmp
call
lea
and
jecxz
jb
cmpsl
dec
push
sbb
inc
dec
xchg
imul
inc
push
cmp
mov
xor
data16
int3
outsb
mov
jae
mov
or
test
fisubrs
inc
or
pusha
cmp
pop
sub
lret
fdivrs
adc
mov
test
sbb
pop
ja
test
cmp
pop
sarl
jle
mov
xchg
sbb
push
ror
or
imul
add
cmp
ja
mov
dec
ds
out
jle
pop
lret
ret
subb
xchg
push
fstl
jbe
inc
xchg
jle
push
fnstenv
into
mov
lret
lret
dec
ret
imul
cmp
dec
jmp
inc
cli
pop
xchg
pop
sub
mov
xchg
and
addr16
dec
xchg
mov
push
lea
add
xorb
cmc
repz
enter
imul
and
mov
push
dec
into
jmp
fwait
or
pop
push
lret
cmp
repnz
pop
enter
outsl
xor
es
lahf
dec
pop
or
mov
dec
inc
xchg
lods
hlt
or
mov
xor
lret
xchg
loope
mov
adc
push
push
js
sbb
or
dec
sbb
sbb
push
out
mov
dec
int
test
rolb
push
pop
mov
push
mov
int
cmp
fdivrs
sar
ret
out
daa
and
pop
cltd
out
push
out
lret
incl
dec
xorl
pop
adc
jb
sbb
cmp
dec
lods
push
mov
subb
sahf
fcompl
push
mov
dec
scas
mov
addr16
pop
test
sahf
mov
mov
jno
push
push
gs
jle
js
lods
ja
mov
mov
xor
cltd
ds
xlat
add
or
sbb
adc
sub
icebp
add
adc
lret
lret
cmpsl
inc
jmp
mov
push
out
push
jno
dec
lcall
hlt
sbbb
fldl
mov
jb
std
pop
fstp
shl
mov
fsubr
xor
sub
push
test
pop
iret
mov
test
clc
mov
hlt
je
in
or
daa
enter
or
test
sub
or
fadd
sub
mov
dec
push
addb
pop
lcall
xchg
xor
subl
push
mov
popf
xchg
pop
rclb
in
loope
dec
not
xor
cmc
imull
or
ja
jecxz
lret
add
lret
inc
dec
mov
lret
mov
shrb
lret
pop
aaa
fstl
and
push
xor
xor
push
int3
and
mov
and
sarl
pushf
subb
fldpi
int
and
cs
dec
cmpsl
adc
inc
rolb
mov
push
and
fwait
andb
sub
mov
or
in
dec
inc
mov
sub
sub
lea
int
lea
sub
ror
ret
adcb
push
jl
xor
out
xor
es
pushf
int3
jns
testb
inc
push
cmp
add
leave
pxor
sbb
sbb
sub
sbb
call
inc
iret
or
aam
sub
cmpl
pop
testb
sarb
insl
inc
dec
or
scas
jnp
mov
mov
mov
out
inc
out
andb
leave
sub
dec
push
bound
jno
les
leave
add
pop
incb
cmp
ret
sub
mov
jbe
fisttpll
mov
inc
lea
xor
or
and
push
push
shlb
dec
dec
lret
imul
adc
fidivrl
push
cmp
pop
int
sbb
negb
sub
jecxz
cmp
lods
inc
call
adc
inc
jmp
addb
test
jmp
or
imul
dec
jecxz
inc
dec
arpl
insb
aad
ss
arpl
or
push
xor
dec
or
sub
and
lret
daa
add
mov
imul
mov
pop
or
leave
fdivr
mov
mov
lret
jno
pop
movsl
aad
arpl
sub
jge
call
int3
insb
cmp
xor
lods
fdivrp
xor
jne
in
dec
push
insl
dec
lds
pop
lret
aam
movsb
mov
xchg
ss
and
or
jbe
les
adc
add
cmpsb
mov
push
aam
ret
notl
bound
cmp
mov
loope
hlt
test
cmp
dec
fnstenv
ds
pop
or
ljmp
adc
xor
scas
mov
push
dec
dec
fadds
cltd
cmp
pusha
or
push
lret
mov
xorb
and
in
adc
dec
icebp
add
push
ds
iret
adcl
push
loope
rcll
into
fdivrs
dec
jnp
cmp
inc
push
cli
add
leave
daa
push
repnz
clc
push
lret
push
mov
orl
dec
lcall
call
testb
mov
pop
and
iret
pop
lret
add
insl
lret
int
dec
push
sti
mov
mov
jle
xor
push
push
cs
shlb
adc
orb
and
jmp
es
rcr
or
loope
and
push
lds
sbb
aas
enter
sti
fs
jns
jg
fistpl
xor
jecxz
repnz
dec
add
dec
pop
aas
cmpsl
xor
dec
lret
pop
push
dec
xor
out
inc
xlat
pusha
fimull
sub
movl
xchg
xchg
out
icebp
std
mov
shrb
push
lret
loopne
jmp
dec
scas
inc
add
and
inc
fucomi
sub
fxch
dec
fldenv
cmp
hlt
dec
cmp
sub
lret
dec
inc
and
test
sti
add
lret
sub
sub
ljmp
outsl
push
jmp
pop
dec
aaa
int3
imull
cmp
bound
loope
fnstcw
cmpsb
les
push
sub
shl
pop
add
and
sbb
adc
inc
stos
push
jno
add
in
cmp
cmp
das
cwtl
imul
ficomps
dec
or
roll
in
mov
fld1
xor
lret
dec
sbb
and
inc
inc
push
jl
in
inc
dec
in
push
add
xchg
pop
and
in
call
movl
pop
mov
rorl
out
mov
fs
cmp
leave
jns
lahf
pop
sub
mov
jo
out
xchg
cmpsl
push
mov
lea
ror
pusha
pop
push
jmp
test
xlat
push
xchg
pop
fstpt
fnstcw
push
mov
dec
ret
sub
in
lret
or
sub
push
mov
inc
leave
xor
fdiv
dec
ficompl
cmc
aaa
mov
sbb
lret
push
inc
enter
inc
sbb
insb
mov
mov
mov
dec
int
add
ret
das
in
cltd
or
cmpsb
and
cli
mov
lret
dec
stc
cltd
pop
push
inc
xchg
call
sbb
push
sbb
lock
std
xor
stc
fadds
fimuls
imul
andb
or
pop
mov
xor
inc
mov
sbb
test
dec
repz
cmpsb
mov
push
jne
cmp
pop
mov
fwait
inc
mov
mov
in
insb
mov
loop
dec
xor
xchg
loop
aam
mov
aaa
sbb
sbb
dec
fmull
inc
inc
lret
hlt
push
test
cltd
push
jmp
test
mov
xchg
push
mov
movsb
push
stc
jo
inc
inc
outsl
pop
mov
cmp
inc
push
xor
outsl
fnstenv
insl
jbe
bnd
cmp
dec
repz
rcll
notl
mov
push
jge
adc
fldcw
int
sub
ret
andl
cmc
push
aad
call
push
in
mov
inc
or
inc
xchg
call
xor
fdivrs
jecxz
int
ljmp
dec
inc
ds
adc
pop
mov
jbe
and
fistl
in
dec
push
cmp
mov
pop
sub
inc
sub
mov
dec
or
addb
je
pop
sahf
lds
or
lcall
jbe
lds
and
xchg
jne
mov
sti
int
test
fildl
xlat
pop
loop
lods
incl
sub
int
push
cmp
addr16
dec
loop
pop
iret
add
cmpsl
sbb
add
mov
dec
sbb
inc
lret
dec
xchg
outsl
into
xchg
shlb
rol
jae
pusha
or
push
push
dec
out
push
cmpsb
imul
sub
in
icebp
sti
sbb
push
push
adc
jmp
cs
add
pop
addl
cmp
in
inc
inc
cld
add
call
mov
ret
es
push
cltd
dec
cmp
rorb
rol
rolb
inc
loopne
enter
cmp
ror
push
cltd
int
inc
or
sub
lods
or
or
test
xchg
out
iret
test
cmpsb
pusha
out
js
xchg
cmp
v4fmaddps
insb
mov
mov
stc
inc
dec
jle
lahf
insb
mov
and
mov
or
pop
outsb
lds
mov
and
bound
icebp
add
pop
ret
mov
shll
fidivrl
in
call
pop
xchg
outsb
and
fwait
mov
mov
loop
insl
ret
mov
repz
or
les
mov
mov
mov
and
add
cmpsb
fisubs
in
push
inc
mov
add
in
dec
pushw
les
ret
add
jmp
cmp
insb
or
popa
stos
sub
clc
adc
jge
shrl
push
jbe
jle
cmp
sbb
popf
mov
scas
jp
inc
inc
push
lcall
sbbl
iret
cmp
inc
cmp
ret
xor
subb
ljmp
clc
dec
inc
inc
fstpt
or
arpl
cmp
inc
inc
test
dec
bound
cmp
or
sbb
xor
mov
loop
imul
test
aaa
mov
scas
cmp
push
dec
adc
xorl
pushl
lods
xor
sub
int3
xchg
push
cmp
and
lcall
lds
rorl
adc
shrb
dec
add
arpl
outsl
rcrb
jge
cmpsb
test
pop
fldl
cmp
or
sbb
arpl
and
add
hlt
test
pop
ss
int
jb
or
pop
lea
cmp
sbb
dec
mov
dec
lret
loop
mov
outsb
cmp
xor
ja
test
xor
pop
dec
enter
ss
hlt
adcb
lods
xlat
adc
lret
je
and
fucomi
lret
or
aaa
out
mov
mov
in
aas
or
xor
cltd
lods
inc
sub
gs
in
shl
dec
rcr
pop
inc
pop
add
lds
loopne
xchg
add
lret
iret
pop
cld
int
hlt
and
or
imul
push
xor
loope
dec
jecxz
and
cwtl
cli
push
or
leave
sarb
leave
inc
xor
jp
sub
adc
sbb
scas
es
dec
pop
cmpsl
fidivrl
pop
fists
lods
fsubrs
pusha
sar
mov
pop
int3
inc
lret
sbb
mov
inc
into
xchg
jbe
pop
add
push
stc
xchg
jmp
sahf
mov
test
and
dec
mov
cmc
pop
movsl
pop
popf
push
bound
lea
add
inc
lret
add
jp
dec
shll
mov
lret
leave
stc
scas
add
test
movsl
inc
fcmovnb
addb
lods
mov
arpl
xlat
mov
push
icebp
xor
inc
pop
mov
mov
mov
cmc
pop
inc
mov
rcll
adc
push
adc
test
nop
les
jg
xor
ja
pop
xchg
sbb
cmp
into
insl
lea
xchg
dec
in
mov
imul
sub
xchg
cmp
sub
adc
hlt
imul
jmp
loop
lods
pop
loope
out
and
sub
loope
enter
push
add
pop
fcmovne
mov
jmp
jae
divl
mov
sub
out
jmp
mov
add
inc
imul
or
push
pop
shlb
in
cmpsl
mov
int
lods
jno
enter
loop
mov
jbe
xchg
pop
push
aam
sub
cmp
out
jmp
sbb
lds
mov
mov
jb
or
gs
cmp
sbb
jecxz
movsl
mov
int3
push
xor
sub
test
test
aad
leave
test
jno
inc
test
mov
mov
cmpsl
push
stos
mov
push
sub
and
adc
stc
push
or
pop
dec
push
not
push
mov
jb
xor
scas
jnp
mov
inc
call
stos
fstp
jmp
sbb
repnz
push
sbb
pop
or
das
ror
jecxz
sbb
inc
fwait
jecxz
pushl
or
mov
clc
push
jns
mov
adc
xchg
pop
mov
pop
sub
xor
mov
jg
in
repnz
cs
enter
mov
and
pop
push
push
dec
push
loope
ja
sbb
aad
xlat
sub
leave
jns
pusha
shlb
popa
sub
movl
test
aaa
or
fwait
cmp
jecxz
stc
inc
xchg
mov
pop
loop
mov
dec
fldenv
add
pop
in
les
cmp
data16
xor
shl
pop
mov
dec
add
mov
ret
and
mov
fdivrs
int
das
pop
aam
lret
cmpsb
pusha
inc
mov
jmp
add
pop
xor
inc
iret
push
dec
add
add
in
and
das
cmpsl
or
fcmovb
mov
sbb
xchg
dec
pop
cwtl
hlt
inc
or
fldl
movsl
adcl
imul
mov
dec
sbb
pop
or
or
adc
cltd
dec
repz
inc
aam
fnstsw
scas
icebp
inc
lahf
fst
lock
pop
or
loopne
mov
or
icebp
inc
mov
adc
add
push
pop
rolb
sub
shlb
and
faddl
sbbl
xchg
fisttpll
stc
cwtl
pop
test
popf
dec
orb
sahf
shl
pushf
fcompl
jp
xchg
mov
aam
fsts
cmp
push
jecxz
dec
jns
or
dec
adc
mov
cltd
test
sub
xor
dec
lret
cmp
push
sub
aas
inc
pop
jae
cltd
xchg
iret
jno
das
push
test
push
pop
mov
jno
xlat
add
inc
mov
dec
ret
pop
dec
fnstcw
fimuls
sub
pop
cs
sbb
jecxz
rolb
and
adc
outsb
mulb
adc
movsb
xchg
xchg
push
addl
pushf
push
sub
dec
cmp
lahf
mov
sub
mov
hlt
sub
pop
arpl
pop
push
clc
jge
mov
dec
pusha
add
popf
lods
aam
ja
es
rolb
or
nop
cltd
lea
enter
arpl
and
cmpsb
sbb
xor
mov
push
add
lock
mov
sti
pop
mov
push
mov
inc
fcom
cwtl
adc
cmp
and
int
gs
sub
push
jno
es
imul
rol
or
shrb
fildl
iret
scas
push
sbb
fildll
aaa
aaa
sub
int
mov
mov
clc
movsb
stos
jnp
or
mov
or
inc
call
enter
out
repz
adc
or
xor
hlt
imul
mov
jp
dec
dec
xor
mov
jb
shrl
or
and
cmpsb
sbb
jae
sub
cltd
mov
lret
test
pop
cs
mov
scas
inc
or
pop
sar
les
scas
adc
jmp
lea
xchg
lret
pop
jecxz
sbb
test
dec
shlb
outsb
loopne
mov
lds
add
vmovaps
mov
push
in
mov
adc
call
mov
dec
enter
cmp
clc
xchg
iret
pop
mov
sbb
and
lcall
inc
push
push
loopne
and
mov
popa
fldenv
popa
fsubrp
push
sbb
cli
test
mov
inc
leave
xorb
inc
fwait
call
or
inc
faddp
lea
push
or
push
add
fwait
arpl
push
loope
loope
enter
insl
push
aas
mov
arpl
sbb
sahf
pop
jmp
mov
test
push
add
sbb
mov
cwtl
lds
in
leave
jecxz
sbb
and
or
rcrb
jmp
ret
stos
outsl
add
nop
call
icebp
fwait
xor
inc
jno
hlt
stos
sbb
inc
jmp
dec
mov
pop
add
aaa
jbe,pn
xor
mov
or
add
daa
lock
out
add
rcrl
mov
adc
in
idiv
xchg
push
loop
std
out
cmp
cwtl
add
xorb
xchg
fldl
imul
xchg
js
hlt
add
fistpll
adcl
push
mov
fs
fists
fisubl
loopne
ds
das
in
test
rcr
xchg
sti
and
shrl
imul
imul
cmp
dec
lret
jmp
inc
jae
pop
xchg
cmp
sbb
or
xchg
rcr
in
xor
addr16
xor
mov
not
sbb
sub
popf
xchg
push
out
out
sub
div
jmp
test
es
dec
add
inc
push
push
in
dec
mov
sbb
push
adc
aas
lods
pop
mov
cs
xchg
stos
add
add
xor
lcall
mov
jecxz
mulb
gs
test
xor
enter
pop
mov
sub
dec
jge
enter
pop
inc
arpl
scas
dec
cmpsl
jo
and
mov
mov
cmp
add
cmp
inc
rolb
das
mov
in
adc
lods
or
cmc
add
dec
mov
dec
leave
enter
inc
int
mov
push
cmpsl
pcmpeqb
scas
xchg
and
out
inc
cmp
inc
stos
dec
inc
adc
sub
push
loopne
rcr
xor
int
xor
dec
xchg
inc
pop
hlt
mov
cmpsl
dec
cmp
jecxz
sub
sarb
sub
sub
sbb
inc
ret
xchg
mov
pop
or
aad
dec
cmp
loopne
xchg
cmp
out
and
or
pusha
dec
fwait
mov
pop
repnz
sarl
cmpsb
sub
sbb
je
xor
pop
pop
int
lea
sub
sbbb
dec
fcmovne
call
ja
popa
sub
rcr
smsw
xchg
adcl
xchg
mov
movsl
mov
shrb
lds
cmp
fdivr
push
dec
insl
push
loop
and
les
popf
adc
das
imul
or
cli
lds
mov
ret
pusha
push
push
sti
push
inc
inc
jge
rorl
bts
sbb
leave
sub
loopne
aaa
adc
dec
rcr
std
lret
shlb
jecxz
push
push
push
fldenv
add
add
or
lods
inc
fwait
jmp
pop
lcall
adc
push
ds
push
sub
hlt
into
sub
js
or
cs
pushf
rclb
lcall
mov
fildl
pop
std
cmp
daa
orb
xor
push
insl
mov
inc
mov
ficoml
fmul
or
adc
sbb
sub
insl
cmp
jmp
xchg
sub
mov
mov
fsubs
dec
push
mov
push
lods
xchg
inc
sub
loope
cmp
adc
enter
push
lds
mov
and
cmpsl
clc
xor
jnp
cwtl
mov
pusha
push
inc
lods
mov
out
and
and
lock
mov
popa
out
xchg
xchg
mov
or
add
xchg
inc
roll
pop
cmp
lret
je
mov
or
push
cmp
cmp
lods
jg
arpl
push
dec
js
cmpb
pop
dec
mov
mov
sub
sub
inc
out
hlt
lds
or
mov
ja
cmp
lret
and
push
enter
scas
mov
add
sbb
sbb
out
or
imul
push
cmp
and
bound
lods
dec
add
jmp
jno
xor
xor
andb
orl
outsb
pusha
out
dec
dec
mov
dec
cmpsl
ret
xor
int3
mov
lea
iret
xor
stc
dec
imul
lods
aaa
xchg
mov
pop
cmp
bound
pop
pmaxub
push
xchg
int
mov
insb
push
push
mov
lds
xorb
inc
dec
int3
sbb
pop
leave
push
scas
subl
lret
int
sub
out
inc
sbb
enter
pushf
rcrl
mov
jp
dec
insb
jge
bound
stc
outsb
mov
in
sub
add
xorl
or
out
pop
shrb
xor
add
movsl
loope
ss
cmp
mov
rol
bound
adc
int3
xor
xchg
hlt
adc
stc
jne
packuswb
loopne
int3
sarb
pop
pop
test
orb
adc
test
test
xor
mov
add
jmp
dec
cmp
dec
push
push
adc
enter
jo
pop
lock
xchg
push
vdivsd
dec
dec
push
lods
xor
rol
push
and
fsubrs
mov
fldt
inc
xchg
mov
push
out
lock
or
sbb
call
cltd
in
rcrl
nop
iret
and
push
lods
fnstenv
shll
inc
fbstp
mov
repz
fcomip
or
iret
pop
insb
or
lods
add
ror
shl
and
push
cmp
inc
mov
mov
leave
mov
xorb
in
shrl
or
cmp
fsubrs
pop
lahf
out
sub
int3
sbb
in
sub
sub
sahf
xor
and
out
push
pop
jmp
loope
mov
rorb
scas
shll
or
push
scas
add
fisttpll
incl
fsubrp
popf
subl
xchg
jns
cmp
clc
loope
add
or
mov
pop
xchg
shll
mov
cmpsl
or
mov
add
inc
loope
popa
dec
shll
mov
sti
leave
sbb
push
dec
mov
or
fs
mov
push
cmp
push
jb
jg
mov
mov
inc
loope
aas
aaa
lret
adc
icebp
or
sbbl
push
sub
push
sti
jnp
sub
out
mov
sbb
dec
ficomps
cmp
stc
adc
sbb
repz
inc
ret
mov
loope
adc
pop
loopne
or
inc
pop
shlb
or
jno
fstps
sbb
xor
lret
lcall
push
jg
out
dec
movsb
shrb
jbe
or
add
pop
fnstcw
imul
aad
ljmp
cmp
adc
xorb
push
jge
cmp
outsb
dec
pop
inc
xor
daa
test
fldenv
xchg
in
insb
adcl
mov
and
dec
loop
int3
cmpsb
aam
or
or
lea
adc
addr16
mov
adc
stos
adc
fidivl
push
cmp
dec
ret
sub
fsubs
rorb
mov
inc
pop
cmpsb
enter
lret
enter
lcall
movsl
aam
sti
rcrl
mov
cmpb
xchg
mov
dec
xlat
mov
aas
dec
or
pmuludq
xchg
lret
sub
inc
sbb
pop
push
pop
xchg
popa
ret
inc
mov
sub
jo
aaa
sbb
test
jmp
jae
pop
jle
jno
push
leave
jp
out
pop
out
cmp
dec
mov
xor
adcl
mov
push
jecxz
dec
push
xchg
xor
aaa
pop
bound
orl
pop
lods
push
testb
mov
imul
stos
xchg
mov
insb
jmp
lds
dec
rclb
xchg
inc
mov
dec
cmc
and
aam
sub
cmp
xor
inc
or
push
jle
out
mov
push
dec
mov
pop
mov
xorl
jl
mov
add
imul
dec
xchg
test
or
cmp
xchg
lods
iret
inc
jb
arpl
lret
pop
fists
mov
insl
dec
inc
rorl
and
add
enter
mov
addb
fdivl
shlb
and
leave
add
rol
mov
jl
inc
pop
int
mov
jmp
shlb
xchg
xlat
xor
add
rcr
push
lods
dec
and
cmp
cmp
inc
xor
xor
mov
pop
cwtl
enter
jo
into
or
fimull
xchg
jecxz
sub
or
add
aad
pop
repz
cmp
movsb
mov
data16
cmpsl
imul
clc
push
lds
fdiv
mov
sbb
mov
cmp
push
pop
add
mov
push
lock
and
andb
aam
or
clc
scas
push
sahf
js
mov
jae
cmp
inc
inc
aad
push
lods
out
out
cwtl
or
cs
loop
fisttpl
repnz
mov
shl
addb
fisttpl
xchg
inc
mov
dec
out
xor
sbb
subb
dec
push
mov
fmulp
mov
xchg
xor
inc
inc
sub
ljmp
leave
sub
xor
arpl
test
das
lahf
ljmp
push
lods
addr16
test
mov
xchg
xor
dec
into
out
xchg
out
push
divl
sbb
icebp
dec
arpl
push
mov
xor
pop
int
mov
dec
sub
aaa
inc
test
lods
mov
aaa
fsqrt
bound
add
into
lea
push
inc
xchg
call
fisttps
fnsave
out
rep
pop
mov
cmp
cmp
lds
or
dec
mov
hlt
dec
mov
add
fsubrl
lret
mov
lret
xchg
les
fnstcw
int
loop
push
cmp
push
pop
test
jp
mov
push
outsl
subl
mov
cmp
enter
mov
hlt
and
out
xchg
lock
cmp
dec
ss
ja
mov
leave
push
out
sbb
dec
xor
in
pop
int3
dec
jnp
ds
or
adc
mov
pushf
inc
gs
call
loopne
lods
fadd
or
dec
into
mov
icebp
cltd
push
loope
ror
or
icebp
roll
or
cmp
ja
cwtl
adc
pop
push
and
nop
mov
out
xchg
or
aad
or
shr
jmp
and
push
hlt
dec
sbb
and
lock
int
pop
push
popa
add
and
or
mov
mov
push
test
call
xchg
outsb
fistps
pop
dec
cwtl
imul
push
int3
or
rol
pop
pmullw
fisubl
loop
mov
lcall
or
pop
mov
std
das
jle
stos
sub
cmp
lods
pop
add
insl
inc
add
and
and
ljmpw
lret
dec
dec
ljmp
pop
mov
xchg
push
add
mov
repz
icebp
int3
rcll
popf
lock
push
outsl
std
pop
and
dec
leave
aas
in
mov
dec
stos
xchg
aaa
dec
xchg
fistl
push
fcoml
push
lds
mov
cmp
pop
dec
jg
jmp
cmp
lret
push
mov
xchg
inc
cmc
pop
pop
mov
push
jmp
push
xorb
mov
sbb
test
rorb
test
cmpsb
lret
pop
sbb
imul
stos
cmp
ljmp
pop
sub
movl
dec
cli
ret
mov
push
stc
and
pextrw
dec
add
add
into
sub
or
inc
int
enter
inc
arpl
adc
add
xor
out
push
mov
jp
movsl
inc
mov
mov
and
and
sub
mov
stos
loopne
inc
orl
pop
outsl
hlt
loopne
cmp
lods
out
icebp
xchg
push
inc
pop
shl
pop
enter
jo
cmp
lods
adc
lods
dec
or
jmp
cltd
sbb
xor
adc
ret
shlb
mov
inc
shl
xor
insl
cmp
movl
ret
pusha
dec
js
sbb
mulb
mov
jno
dec
lcall
add
or
aaa
ljmp
or
int3
mov
or
enter
cld
and
lea
dec
or
jns
sbb
or
enter
imul
xchg
stos
vhsubps
and
cltd
jnp
and
bound
sbb
hlt
mov
sub
dec
xchg
pushf
push
lods
pop
fimuls
sbb
mov
lock
dec
daa
int3
shl
xchg
iret
test
push
filds
xchg
mov
xor
sti
sbb
jecxz
in
loope
pop
popf
ror
or
add
mov
and
stos
repz
rorl
sbb
jl
adc
push
ret
cmpsb
lock
icebp
pop
inc
pop
daa
test
add
jae
add
jmp
stos
lock
cmp
jmp
sub
outsl
xlat
shlb
jne
test
or
inc
or
xchg
push
int
jecxz
sub
loopne
pop
mov
cmp
sub
pop
inc
dec
out
sub
cmp
push
mov
mov
jns
sub
iret
pop
fldcw
or
in
mov
and
jnp
push
push
ud2
dec
mov
fisttps
add
test
std
arpl
hlt
fcomps
mov
psubsw
test
cmpsb
leave
or
mov
mov
imul
push
sub
lods
enter
std
mov
in
ds
mov
dec
popf
add
outsl
or
cs
rcll
nop
dec
leave
daa
daa
jl
jbe
outsl
das
fcmovnu
lret
jns
and
repnz
add
sub
sub
mov
fcmovnu
loopne
repnz
lcall
or
mov
arpl
ljmp
into
mov
cmp
push
mov
aaa
rorl
fistl
sbb
flds
fmulp
fldcw
out
mov
sarb
scas
sub
inc
or
sub
dec
rcrl
inc
jecxz
dec
mov
cmovg
inc
or
clc
inc
xorl
and
and
or
xor
lock
mov
dec
push
out
test
mov
iret
das
pusha
ljmp
fwait
sahf
and
pop
dec
sbb
cmp
sub
inc
jge
test
outsb
mov
sbb
or
fstpl
mov
xchg
and
cwtl
fs
ljmp
adc
or
sbb
sub
cmpsl
out
std
xor
fisubrl
bswap
and
jle
notl
jl
sbb
adc
add
fwait
aad
rorb
and
mov
stos
mov
dec
push
sbb
cmpb
inc
cmc
xor
push
in
mov
aas
int
jge
daa
xor
add
lcall
int3
push
add
ret
hlt
imul
push
insb
xchg
mov
outsl
or
pop
adc
mov
pop
lods
ss
push
in
test
int
or
fsubrl
inc
out
fs
cwtl
mov
adcb
jg
push
rorl
xor
fs
aam
testl
adc
in
loope
mov
mov
jle
jno
pop
out
ret
inc
xor
sub
xor
push
neg
mov
dec
jnp
lods
dec
jg
loope
mov
adcl
ret
pop
sar
loopne
mov
test
imul
adcb
mov
fidivs
packuswb
out
in
fisubrs
es
loopne
daa
das
sahf
or
icebp
sub
or
mov
sbb
sti
dec
clc
lds
ja
pop
and
push
int
rorb
lcall
cmpsl
fisttps
dec
mov
in
les
mov
dec
popf
mov
inc
orl
and
dec
out
pop
or
pop
or
xchg
push
sub
sti
aam
mov
daa
jecxz
or
stc
xor
add
test
jmp
dec
or
imul
cmp
or
into
pusha
push
hlt
test
cmp
xchg
and
xchg
cmp
rorb
adc
mov
dec
or
adc
clc
or
icebp
lcall
in
pop
dec
or
outsl
or
push
or
daa
push
or
push
sbb
addb
sub
or
lret
lock
out
xchg
adc
scas
sub
inc
and
sub
and
fcmovb
mov
dec
pushf
roll
xchg
or
nop
dec
lds
mov
pop
leave
rcr
pop
or
test
flds
inc
scas
mov
mov
adc
stos
dec
mov
inc
enter
dec
jmp
lcall
or
push
rcrl
aam
ffree
adc
aaa
sub
sub
imul
popa
sub
mov
xorb
adc
push
and
lret
enter
arpl
mov
or
jge
sub
mov
mov
mov
faddl
cmp
add
dec
hlt
stos
push
in
repz
outsb
jns
stc
push
or
into
mov
jmp
hlt
mov
mov
jo
rolb
dec
lea
cmp
dec
dec
mov
adc
fcoms
jo
and
icebp
pop
push
cmp
orl
inc
movsb
lods
lret
xor
orl
add
sahf
sbb
sub
cs
and
dec
fmulp
cmp
cmpsb
aaa
scas
sub
cmpsl
sub
test
mov
push
cltd
sub
add
dec
inc
out
out
sub
ljmp
add
jge
cmpsb
lods
mov
cs
push
rcrb
inc
inc
xchg
dec
rcrl
inc
inc
fmuls
jl
pop
in
jno
ret
daa
inc
mov
movsb
ljmp
enter
mov
pop
sub
jae
ljmp
stc
ss
out
cmp
nop
cmp
or
jle
fnstsw
or
mov
add
rcll
sbb
cltd
shrl
push
pop
jb
popa
xor
or
in
lea
add
in
out
mov
sub
or
push
pop
shrb
lods
inc
sbb
or
data16
add
hlt
inc
rcl
or
push
mov
push
or
pop
outsb
pop
test
ss
imul
xchg
inc
cmp
shll
sub
jne
xor
pop
push
cmp
or
sub
leave
inc
int
pop
test
loope
test
sbb
cmp
jae
or
push
inc
out
aaa
xchg
ljmp
lret
cld
stc
shlb
jno
leave
inc
sub
mov
shr
and
dec
push
sub
cmp
iret
leave
add
aam
sub
lea
rorl
sub
shr
sub
push
push
or
sbb
xlat
push
fldt
mov
xchg
leave
shrb
xchg
ret
imul
jmp
adc
outsl
xchg
insb
enter
mov
test
divb
mulb
js
bound
in
and
mov
adc
mov
jmp
add
dec
addb
pop
cmp
imul
mov
sub
and
sub
hlt
mov
or
arpl
or
int
sbb
bound
adc
lret
and
sub
inc
or
sub
xchg
xchg
js
test
lods
test
shrb
dec
inc
scas
imul
mov
push
arpl
cli
mov
and
dec
negb
enter
push
cmp
jp
pop
out
addr16
mov
push
in
add
mov
cld
cmpb
jb
insb
dec
fildl
fstpl
out
push
int
and
fcmovne
pop
dec
imul
loopne
jg
movsl
lret
dec
or
dec
jmp
sbb
or
sub
xchg
bound
popa
cmpb
and
jecxz
push
insl
repz
inc
cmpsl
sti
push
dec
sarb
pop
lret
loopne
push
je
cltd
inc
lock
sbb
loopne
cld
mov
push
mov
cmp
inc
stc
inc
mov
testl
mov
inc
fstl
dec
jp
jbe
outsb
insb
cmp
ficomps
arpl
adc
dec
ss
adc
andb
sbb
sbb
xchg
insb
push
and
nop
adc
adc
xchg
add
or
lods
sbb
push
or
out
push
xchg
stos
xor
insl
inc
into
jbe
lods
inc
and
lea
dec
jle
add
ljmp
cmpsl
cmp
test
or
add
mov
mov
int
dec
sub
das
dec
mov
mov
sub
mov
out
adc
sbb
test
sub
dec
int
mov
out
adc
or
adc
sbb
jb
mov
jle
sbbb
inc
xchg
pop
push
xchg
mov
mov
sbb
leave
jne
xor
sets
insl
mov
mov
cmpb
lret
sbb
xchg
push
sbbb
cmp
sub
lcall
pusha
sbb
push
cmp
clc
push
and
into
inc
jmp
pusha
xlat
jge
rcrb
mov
insb
mov
hlt
or
sbb
sub
cmp
sbb
lea
enter
out
into
sbb
add
popf
xor
push
test
push
add
fcomps
lock
orb
pop
add
int3
test
flds
dec
xor
lret
lods
cmp
test
add
shl
in
or
scas
mov
bound
dec
sub
test
or
dec
inc
out
call
pop
rcll
xor
outsb
sub
cld
imul
pop
dec
xor
jae
dec
jp
mov
pop
rclb
rol
cmpsb
sub
or
and
shrl
or
pop
jae
pop
sub
lcall
and
xchg
rorl
push
mov
jbe
test
out
cmp
mov
mov
mov
sub
jae
xor
out
or
sarl
and
sbb
xabort
sub
ds
add
pop
adc
cmpsl
out
stos
or
arpl
mov
adc
out
lock
push
test
jmp
daa
mov
stos
pop
dec
roll
dec
jge
out
shrb
inc
lret
dec
push
sub
inc
out
loop
fistpll
fldenv
jmp
aas
leave
mov
mov
push
aaa
sbb
out
jno
in
inc
ja
pop
sbb
lock
mov
pop
out
sub
or
or
pop
xor
mov
stc
out
or
imul
add
fimuls
add
mov
pop
stos
xor
sbb
ret
sbb
lret
es
or
sbb
xchg
mov
pop
or
ret
fldl
out
ja
pop
inc
jle
cmp
popl
aad
clc
int3
dec
inc
into
hlt
cli
push
scas
cmp
dec
xorl
xor
shlb
and
imulb
mov
or
push
lahf
cmp
inc
xlat
orl
popf
pop
aas
jmp
imul
cmc
ljmp
inc
inc
pop
sub
sub
jle
testb
xor
je
lock
test
jle
jo
outsb
adc
or
jp
xchg
imul
xor
mov
xchg
pop
scas
js
lods
test
aaa
enter
lds
ljmp
sbb
mov
add
mov
pop
or
xchg
mov
xor
sti
adcb
loop
jecxz
cltd
push
mov
dec
rorb
cld
fldcw
sbb
and
popw
sub
mov
add
shr
int
mov
mov
data16
call
imul
movsl
lret
int3
xor
inc
in
mov
and
sub
test
pushf
xor
inc
adc
pop
sub
mov
nop
xor
fs
mov
scas
ror
adc
enter
dec
imul
enter
lret
sti
push
je
cmp
ljmp
pop
sub
xor
dec
sbb
hlt
mov
fisubrs
pop
sahf
jnp
push
jle
mov
push
dec
test
lret
lret
cli
pop
clc
fldenv
shr
jmp
push
xor
stos
insl
xor
or
jmp
adc
sub
cwtl
rclb
or
xor
or
sbb
xlat
jecxz
push
jmp
mov
jmp
push
rorl
pop
orl
out
mov
stos
add
inc
dec
test
leave
lods
inc
sub
jmp
mov
shrl
sbbl
mov
lret
aam
lret
rorl
fs
inc
repz
je
cld
daa
adc
test
push
or
sbb
out
mov
hlt
dec
scas
or
loopne
stc
dec
out
or
push
icebp
add
data16
sbb
and
mov
sub
dec
mov
enter
dec
shl
fstpl
mov
push
dec
stc
xor
adc
push
dec
adc
sarl
js
jns
dec
lods
jb
push
mov
jo
sub
add
or
mov
bound
dec
cmpsl
mov
fildl
movsb
std
inc
sbb
inc
inc
iret
mov
shrb
adc
syscall
and
cmpsl
inc
add
sub
fs
inc
or
and
movsl
stos
mov
int
mov
imul
cmp
xlat
scas
pop
sbb
out
sub
dec
inc
dec
push
sbb
sbb
aam
mov
mov
add
xor
add
xchg
notb
mov
push
loop
aas
test
hlt
ret
fidivrs
cmpsw
gs
scas
dec
add
pusha
bound
dec
scas
mov
dec
jnp
icebp
xor
mov
pop
cmp
pop
add
orb
sub
add
pmuludq
inc
push
sti
add
cmpsb
rol
out
mov
mov
push
jg
andps
hlt
and
imul
hlt
push
in
and
sub
inc
sub
jle
mov
fs
jecxz
inc
sbb
loope
out
hlt
insl
xchg
cmpsl
pop
mov
dec
xchg
adc
js
mull
jnp
xor
and
cmp
pop
pushl
mov
lods
xchg
cmp
sahf
rolb
int3
sub
lods
and
hlt
pop
cltd
add
enter
xor
imul
xchg
loop
stc
and
mov
sub
jno
add
pushf
push
in
mov
push
inc
add
sbb
jnp
movups
sub
dec
outsb
loopne
cmp
jo
mov
fwait
push
push
lods
rorl
pop
cmpsb
ss
jmp
cld
mov
mov
out
jnp
inc
dec
jbe
insl
adc
cld
mov
shrb
fdivl
sub
leave
cs
enter
pusha
push
ret
add
repz
pop
ret
xchg
out
mov
push
mov
inc
jns
stc
clc
stc
xchg
cmpsl
das
mov
int3
out
inc
repnz
pop
xor
inc
mov
jno
push
mov
fildl
jmp
mov
inc
imul
loopne
push
test
ljmp
test
cpuid
mov
pop
xchg
add
fldenv
ljmp
dec
inc
daa
pop
lods
loop
xlat
mov
sub
sub
icebp
sub
jns
cmp
fildll
sub
ljmp
int
mov
ret
push
fcmovbe
adc
pop
and
jns
adc
inc
addr16
add
push
test
sub
sbb
test
xchg
xlat
test
xorl
cmp
xchg
stc
pop
ret
sbb
je
gs
int
pop
out
mov
das
xchg
pusha
cmc
sbb
pop
call
and
scas
hlt
mov
int3
cmpsl
int3
cs
test
xchg
jbe
ror
dec
subb
test
pop
movsl
out
fs
repz
arpl
add
jb
bound
push
pop
lods
and
jne
xorl
inc
inc
fidivrl
xor
fmull
out
call
lret
xchg
adc
jo
out
jnp
push
xor
xchg
lret
repz
xor
ss
cmp
dec
subb
fisubl
lret
pop
leave
inc
pop
dec
dec
inc
adc
stos
pushf
xchg
push
dec
cmpsb
adcb
enter
push
fimull
test
fnop
xor
ja
jbe
ss
push
push
inc
repz
push
mov
mov
mov
xchg
dec
mov
pop
adc
loopne
test
mov
push
rcr
cmp
jbe
dec
sub
jmp
or
jl
mov
sub
xor
outsb
fimuls
inc
inc
repnz
shlb
adc
sub
push
jmp
mov
dec
call
stos
loopne
sub
imul
std
enter
shrb
sti
mov
mov
xor
je
insl
imul
add
and
cli
xor
and
pop
push
push
push
xor
push
push
push
push
mov
popa
dec
or
test
ljmp
cmp
or
insl
pop
xor
sub
xor
jge
xchg
and
xchg
outsb
cmp
int3
test
test
add
aam
xor
sub
leave
push
cmp
add
loop
in
and
imul
test
xor
sbb
mov
lea
dec
mov
inc
mov
cmp
add
pop
pushf
cmp
call
loope
pop
adc
sub
and
insl
cmp
daa
or
and
jp
sub
jo,pn
push
jp
pop
xor
mov
enter
mov
mov
in
inc
lret
or
mov
push
dec
mov
push
mov
repnz
dec
popa
fcmovu
mov
insl
stos
pop
add
ljmp
push
pop
and
xor
xchg
cmp
xor
loope
xchg
push
test
mov
sub
fnstenv
aam
test
leave
pushf
inc
dec
mov
push
popa
push
arpl
leave
cli
push
iret
cmpsl
sub
test
or
mov
lret
test
into
jge
cmp
icebp
sahf
adc
push
cmpl
fidivrl
and
test
inc
idivl
mov
mov
mov
outsb
adc
pop
xchg
mov
pusha
cmp
cmpsl
mov
mov
push
and
jp
iret
int3
sub
pop
lret
push
sbb
cmpb
insb
add
dec
dec
hlt
loope
test
jecxz
rorb
int
lret
ljmp
hlt
popa
xchg
push
jecxz
jmp
insl
or
les
hlt
mov
ret
mov
and
shlb
fnsave
mov
inc
sub
pop
or
or
lret
and
fidivrs
mov
sbb
mov
push
inc
sub
int3
ja
cmc
lea
jae
imul
negl
decb
popa
adc
gs
fisubl
dec
ja
clc
xor
loop
bound
lret
cli
popf
cmp
push
dec
lret
xor
jbe
inc
mov
and
and
mov
push
xchg
and
push
lods
rorl
in
or
call
movb
inc
sti
add
add
push
call
xchg
int3
out
rolb
inc
orl
icebp
dec
cmpsl
mov
sub
pop
or
pop
imul
and
xor
xchg
xor
ror
dec
outsb
movsb
fdivs
xlat
enter
ds
pop
movsb
ret
mov
lds
outsl
dec
mov
or
int
push
or
xor
cmpsl
and
inc
cmp
jmp
cli
enter
hlt
mov
ss
sbb
inc
mov
mov
adc
xchg
cmpsl
mov
sahf
gs
mov
xor
inc
pop
sbb
mov
cmpsl
call
or
in
call
or
popa
mov
xor
jmp
loope
sbb
push
test
pop
sarl
add
mov
sbb
xor
or
lahf
inc
in
fdivrs
lea
mov
scas
leave
dec
or
movsl
mov
cs
push
and
mov
mov
pop
andl
int3
add
mov
insb
loope
jmp
xchg
or
cmpsl
push
and
test
repz
pop
mov
mov
jl
sbb
int
lds
jmp
sbb
push
jbe,pt
sbb
ljmp
lret
add
push
push
pop
out
ds
sub
cmp
fsubrl
cmc
out
mov
insb
add
and
iret
pop
fmull
xchg
stos
jp
mov
leave
cmp
fldl
jge
xchg
add
out
xor
jnp
mov
mov
xchg
mov
scas
sbb
push
add
push
cmp
mov
out
xor
jg
mov
inc
aam
push
xor
push
sbb
mov
inc
push
sbb
xor
sub
dec
xchg
push
push
es
jl
pop
push
cltd
push
pop
shlb
pop
mov
jle
mov
mov
data16
jl
add
or
bound
lea
lea
pop
push
adc
shrb
sti
cltd
rcpps
rorb
inc
sub
fs
push
inc
pop
pop
shlb
cmp
aas
hlt
sub
inc
jo
shlb
jbe
add
loop
sbb
push
int
fs
in
cmp
decl
arpl
dec
aaa
es
aas
inc
int
sub
das
hlt
push
or
out
scas
lret
dec
je
dec
bound
jae
shl
pop
sub
shll
or
cmpsl
shr
cs
inc
in
test
dec
sub
leave
lahf
cs
mov
test
hlt
add
cmp
setge
fists
int
mov
lret
cmpl
sub
popa
enter
cmp
pop
in
mov
adc
aad
mov
notl
add
or
dec
xchg
fstps
call
and
ja
pop
mov
loopne
scas
or
cmpsl
or
insw
push
inc
add
inc
and
scas
pop
lods
loop
push
inc
inc
sbb
mov
jo
mov
dec
mov
loop
xor
and
sahf
ret
inc
fs
jbe
or
icebp
lds
xchg
movsl
enter
mov
jno
dec
cmp
and
and
out
jns
add
push
lcall
xlat
fwait
sub
and
pop
loopne
mov
sub
in
and
mov
scas
dec
sbb
jns
sub
mov
dec
daa
dec
push
jmp
leave
and
dec
sbb
xor
adcl
insb
mov
cmpsb
adc
mov
dec
add
lret
arpl
popa
les
pop
imul
stos
dec
popa
gs
outsl
and
mov
in
cmpsl
inc
leave
dec
out
xor
shlb
add
cmp
inc
sbb
ret
pop
das
hlt
jo
mov
cltd
icebp
cmpsl
or
jp
sub
or
adc
jnp,pt
or
mov
loop
pop
xorl
sub
jnp
in
cmp
clc
and
clc
jecxz
pop
push
and
dec
jmp
xchg
cmp
out
push
ds
call
adc
adc
or
mov
lods
in
and
inc
xchg
jg
mov
int
and
dec
in
jl
dec
enter
test
dec
cmpsl
sub
lods
ja
xor
dec
push
mov
lds
add
or
xor
or
movsl
jmp
imul
inc
adc
cmp
shll
jl
pop
xor
and
xor
sub
pop
test
mov
imul
movsl
sub
popa
mov
push
push
cmp
or
subl
cmp
shll
push
mov
mov
pop
cwtl
pmuludq
jae
in
test
call
inc
les
sub
cmp
das
push
add
call
das
les
enter
and
cs
sub
push
cmp
sub
push
add
sbb
dec
mov
arpl
cs
lcall
and
repz
ret
ficoms
mov
mov
iret
xchg
xchg
rclb
dec
dec
arpl
dec
call
push
ljmp
stos
push
mov
ss
aas
or
sbb
sub
mov
push
orl
mov
mov
leave
xchg
hlt
and
roll
insb
sbb
enter
xchg
dec
push
add
js
lds
cltd
int
mov
fnstcw
in
xchg
cmpsb
push
sti
popa
shll
mov
roll
call
enter
clc
int
ja
push
sub
jmp
lods
stc
inc
mov
and
push
mov
push
cmpsb
cmp
dec
add
repz
repz
cs
jns
lret
dec
cmpsl
jnp
rclb
lret
mov
aas
dec
cltd
sub
hlt
and
or
leave
imul
popa
adc
push
call
and
mov
push
push
pop
popf
xchg
jmp
out
and
push
imul
sbbb
clc
xchg
pusha
ljmp
fisubs
int
std
pop
or
arpl
sbb
xchg
int
add
es
adc
sbbl
enter
pusha
es
mov
stos
enter
or
fcomps
xchg
in
fstl
mov
dec
add
ds
bound
pushf
aaa
inc
pop
sbb
xchg
mov
inc
xor
or
sbb
imul
jb
jb
adc
shrb
mov
cmp
jno
pop
stos
stc
xor
leave
pop
pusha
mov
pop
dec
dec
mov
jnp
mov
push
cmp
fdivrs
sub
in
xor
pop
imul
lcall
fists
shlb
and
int3
push
and
push
pop
inc
int
adc
inc
cmc
insb
punpckhbw
sub
int
inc
leave
mov
sub
or
sub
shrb
clc
fldl
push
rcll
inc
xlat
push
rcll
inc
push
lret
jge
inc
cwtl
or
push
lret
or
inc
aaa
inc
push
sub
cmp
ss
bound
addr16
lcall
or
int3
xor
sbb
pop
int
dec
test
aad
aaa
push
sbb
xor
test
pop
popf
push
mov
in
add
dec
push
sbb
push
cmp
dec
jmp
pop
sub
jmp
movsl
cmp
dec
arpl
jecxz
fcoms
fmuls
pop
fwait
dec
shl
fcoml
int
sbb
ret
push
fidivrl
fisttpll
fmul
filds
sbb
mov
dec
xor
lret
mov
or
mov
or
mov
es
inc
dec
push
shrb
enter
push
pop
or
dec
jl
sub
add
bound
push
cmp
or
data16
test
xchg
inc
adc
insb
test
out
cmpsb
dec
mov
mov
push
enter
xorl
lcall
cmp
xor
es
in
dec
dec
cmp
add
sbb
insb
sub
dec
xchg
cwtl
arpl
or
pop
mov
adc
mov
bnd
pop
lea
mov
cs
mov
xchg
pop
aam
cmp
lret
in
jmp
stos
push
or
mov
push
repz
ds
lcall
lret
mov
xor
sub
and
xchg
in
sub
dec
cltd
ret
cmp
mov
lret
movsl
and
sbb
and
ljmp
enter
mov
aam
mov
xchg
xor
in
dec
sbb
fidivrl
cmpsl
mov
mov
or
and
and
jbe
mov
mov
mov
mov
lret
xlat
inc
cmp
hlt
add
mov
fmulp
pop
pop
stc
pop
pop
sub
jge
xor
in
dec
or
int3
int
xor
xchg
daa
leave
sub
clc
fs
and
rclb
dec
jmp
pop
mov
jp
fdivr
xchg
pop
push
cmp
pop
cld
sbb
adc
pmuludq
popa
and
cmp
add
sub
test
sub
jl
cmp
icebp
and
out
jle
mov
out
ljmp
in
dec
cmpb
stc
jno
leave
push
jl
jbe
adc
jmp
out
adc
mov
dec
cmp
sub
cmp
xchg
fsts
std
int3
fstl
mov
sbb
adc
enter
cmpsl
xchg
clc
hlt
dec
add
mov
int
mov
outsl
fmull
or
push
mov
mov
sbb
ja
jecxz
out
and
or
mov
out
add
push
and
jp
jne
out
mov
loopne
sub
mov
popa
mov
movsl
add
jecxz
add
loop
add
cwtl
push
pop
fwait
mov
sahf
pop
sar
push
mov
xchg
int
inc
jecxz
popa
push
mov
add
fsts
sbb
daa
icebp
pop
push
pusha
mov
add
addr16
insl
sti
push
and
xchg
cs
lret
sbb
cmpsl
adc
pop
enter
loope
das
out
scas
pop
mov
push
cmp
aas
pushf
out
enter
jp
outsl
test
in
xchg
cmp
add
inc
push
test
dec
cmpb
add
and
cmp
movsl
lret
push
insb
xor
idivl
pop
cmpsl
lods
orl
fwait
adc
bound
insb
stc
xor
or
addr16
jno
cmp
test
lret
lds
adc
xchg
jae
je
xchg
std
or
insb
rcll
sub
scas
lret
push
sub
leave
or
pop
adc
push
sub
iret
inc
xchg
inc
stos
or
insl
leave
sub
scas
cmp
dec
adc
push
inc
fldenv
cmp
xchg
test
push
mov
leave
mov
sbb
cld
popa
jmp
adc
cmp
inc
pop
loop
xor
sti
pop
insl
scas
lret
inc
lret
dec
sbb
in
xor
imul
in
pushf
inc
push
push
inc
lret
inc
push
xchg
ss
insb
adc
sub
push
popa
dec
sbb
arpl
pushf
cmp
mov
loope
iret
cmpl
leave
cmp
mov
fildll
test
inc
push
or
out
scas
add
xchg
lods
shll
pushf
cmpsl
mov
and
xchg
cmp
xor
or
add
sbb
test
pop
iret
jns
cmp
es
jmp
icebp
mov
fisubrl
shlb
imull
test
dec
push
push
aad
or
dec
mov
shlb
push
add
push
out
imul
dec
cmp
inc
sbb
lods
call
aam
lret
hlt
push
push
dec
aad
sub
mov
pop
andl
pop
mov
ds
push
faddl
in
aam
add
push
mov
in
fildl
in
xchg
push
add
or
sahf
mov
cs
push
sahf
cmp
jmp
pop
hlt
mov
push
push
mov
pop
push
push
dec
sub
xchg
mulb
fyl2x
push
cwtl
stos
aam
fisubrs
cltd
and
push
retw
cmp
imul
cwtd
clc
or
test
sti
or
movl
jmp
xor
push
pop
shrl
xor
lret
or
lds
cmpsb
ds
std
inc
pop
jecxz
stos
sbb
fdivrs
mov
xor
jmp
push
cmp
lods
or
and
or
fscale
push
adc
in
repnz
lret
dec
dec
dec
jnp
out
xchg
roll
and
shlb
adc
mov
dec
xor
sbb
aas
or
xchg
inc
fimuls
or
cli
dec
xor
cmp
sbb
enter
mov
dec
les
loop
mov
sub
sub
adc
push
and
daa
sub
pusha
xchg
ja
cmpsb
lret
push
cmp
xor
call
or
cmpsl
mov
dec
bound
sub
hlt
mov
or
aad
dec
sbb
push
lea
jmp
test
outsl
xor
cmp
inc
in
adc
mov
pusha
cmp
or
out
jge
add
movsl
adc
cmp
clc
or
sub
xor
js
and
lret
mov
out
out
ja
insb
dec
pop
and
push
sbb
lock
aaa
stos
inc
cmp
enter
pop
mov
lods
add
cmp
mov
in
sub
mov
mov
aaa
lds
mov
sbb
ret
mov
lea
jl
adc
or
out
dec
xor
push
insb
add
jmp
cmpsl
mov
push
arpl
cld
cmc
cmpl
insl
jnp
push
je
lock
stc
aaa
jbe
pop
outsb
jo
xchg
leave
adc
cmp
lret
pop
repz
imul
pop
pop
mov
andb
cmp
dec
push
int
dec
pop
jg
shlb
insl
inc
insb
jne
loope
lea
sub
ret
fists
rcl
int
dec
xchg
cltd
and
dec
stc
xor
pushf
and
int
sbb
mov
popa
dec
lods
imul
jno
sbb
les
cs
mov
filds
pop
out
and
jns
inc
push
mov
and
and
dec
lds
dec
push
push
and
and
daa
jbe
xor
mov
mov
jo
jp
cmpsl
andb
ja
inc
push
scas
sub
inc
mov
and
mov
testb
mov
lock
add
mov
cwtl
int3
mov
idiv
sbb
mov
xchg
dec
adc
jo
push
jmp
test
test
mov
mov
inc
lea
test
add
or
xchg
push
add
cmc
xor
push
fnstcw
xor
adc
shrl
int
adc
inc
repz
decl
pop
or
cmp
jne
loopne
pusha
sub
mov
outsl
jae
test
sub
and
pop
enter
scas
mov
or
mov
inc
sti
mov
sete
leave
pop
inc
or
imulb
dec
imul
push
dec
inc
or
mov
mov
xchg
dec
xor
or
or
iret
cmpl
adc
sahf
enter
in
push
hlt
xchg
sub
xor
imul
sbb
ljmp
movsl
add
lea
add
mov
loop
mov
leave
leave
push
or
xor
dec
inc
mov
push
xor
decb
pop
push
add
xchg
movl
push
repz
cltd
mov
xor
add
aad
test
ret
imul
sub
test
scas
push
fdivs
cmp
imul
pop
dec
push
jmp
fsubs
iret
adc
mov
jp
xchg
loope
and
inc
rorl
mov
js
lods
pop
mov
cmc
xchg
and
adc
cmp
lcall
das
xchg
sub
mov
pusha
int
mov
test
sub
xacquire
xor
and
loop
mov
cmp
stc
jb
enter
clc
xchg
int
add
lret
jno
dec
dec
psraw
lahf
or
cmpsl
sub
hlt
out
int
call
mov
inc
jmp
hlt
test
and
imul
mov
dec
pushf
or
xchg
idivl
clc
ret
es
dec
dec
lds
push
push
mov
jae
xchg
lret
mov
push
clc
psubsb
repz
ret
inc
int
or
jbe
pmuludq
mov
lret
mov
mov
les
push
repz
adc
mov
aam
xchg
push
push
push
shlb
jbe
lret
mov
jne
and
inc
aaa
dec
mov
mov
popa
pusha
aad
and
mov
lds
xor
jo
addb
mov
mov
rolb
push
sbb
cwtl
add
mov
rcrl
mov
dec
call
dec
cmpsb
test
inc
sbb
pop
jp
test
and
addl
add
out
cmp
lret
mov
cmpsb
jmp
inc
dec
inc
dec
sbb
push
push
push
cmc
cmp
je
xchg
or
and
cmp
test
push
fs
adc
dec
pusha
lods
daa
fmull
ljmp
cs
pop
and
push
add
pop
push
sub
cwtl
jle
insl
push
inc
out
jb
cmpsb
jmp
cs
xor
xchg
in
xor
adc
or
xchg
lcall
insl
add
cmp
inc
into
pop
mov
mov
out
sti
arpl
xor
out
xchg
es
xchg
aas
hlt
and
pop
dec
sbb
fisubs
lods
aaa
pop
and
xchg
or
or
jno
das
push
jmp
xor
cs
cmp
push
lods
jns
test
dec
add
mov
mov
mov
jmp
rolb
pop
mov
hlt
dec
pop
mov
ss
or
or
mov
pop
and
push
fs
mov
push
mov
fsts
lahf
mov
das
dec
cs
cmpsl
loopne
pop
je
ja
sahf
dec
call
leave
jo
pop
mov
add
arpl
call
or
mov
roll
pop
push
cmpsl
rorl
jecxz
stos
push
daa
sub
clc
sbb
shrl
mov
push
sub
lcall
mov
xor
sub
stos
add
ret
int
loopne
cmp
std
outsb
or
dec
add
lret
and
notl
rcr
push
shrl
push
mov
xchg
push
ret
mov
andl
clc
xchg
stos
xor
leave
ljmp
cmpsl
rorl
scas
stos
idivb
out
mov
or
lods
or
xchg
lods
inc
jge
or
push
sub
in
loop
dec
shll
mov
sbb
inc
pop
sbb
and
lret
loopne
in
gs
jmp
and
adc
sub
enter
sbb
test
add
es
jecxz
cmc
outsb
hlt
and
sub
cld
mov
push
and
lret
mov
adc
mov
std
stos
cs
push
inc
enter
out
lock
call
dec
xor
mov
in
adc
sub
mov
loope
dec
inc
repz
loop
dec
mov
mov
jno
inc
jl
scas
jbe
push
sahf
lea
fs
cltd
outsb
sub
shl
out
in
xor
and
js
loopne
mov
in
jbe
dec
iret
mov
out
iret
inc
into
mov
pop
jns
scas
lods
xchg
in
mov
fadd
lret
push
sub
pop
leave
idiv
fmul
es
out
ljmp
insl
ja
lret
in
stos
clc
mov
fdivrs
mov
mov
sub
and
inc
dec
dec
popa
jbe
lods
and
push
pushf
sub
cld
sub
rcrb
push
hlt
add
push
jle
lcall
xor
cmpb
inc
mov
mov
cli
je
imul
cli
or
cmp
mov
inc
inc
lret
or
in
mov
jge
and
and
sbb
stc
loope
jns
out
pop
cwtl
mov
or
lret
test
push
inc
pop
int3
and
or
dec
or
test
push
mov
mov
sahf
mov
test
scas
pushf
add
leavew
add
imul
repnz
sub
xchg
pop
jbe
call
insl
flds
push
sbb
ss
pusha
pop
add
dec
icebp
pusha
adc
push
push
lods
inc
jle
imul
pusha
hlt
add
hlt
jge
jae
lcall
in
sbbb
inc
jno
lea
pushf
adc
imul
adc
ljmp
xchg
pop
xchg
pop
sub
sub
or
imul
inc
add
and
ljmp
nop
sbb
sarb
sbb
xor
or
push
jle
loope
jmp
int
inc
jns
test
pop
xchg
rcll
and
out
call
mov
cmp
inc
arpl
inc
jbe
push
fwait
js
or
mov
xlat
push
loopnew
push
std
push
pop
popa
dec
jle
jp
ss
jl
push
imul
mov
or
sbb
push
idivl
fbstp
jbe
pop
and
dec
stos
dec
subl
xor
inc
xor
std
jbe
leave
xchg
arpl
mov
clc
stos
call
xchg
pop
sbb
add
and
cld
iret
inc
mov
pop
jnp
fistpl
fnsave
andl
inc
imul
inc
lret
pop
mov
in
bound
xchg
pop
xor
push
mov
std
dec
cltd
call
arpl
pop
push
push
add
out
inc
jo
push
faddl
cmp
or
in
pop
aas
push
pushf
sub
push
push
sub
jle
jl
pop
arpl
pop
and
scas
pop
inc
jl
inc
pop
lea
lds
arpl
mov
outsl
ret
int3
push
sub
cmp
or
cmp
pop
pushf
mov
fcomps
pop
push
sub
fsubl
pop
xor
notl
and
jbe
dec
jae
sub
or
inc
xor
adc
xchg
loopne
das
mov
jo
loopne
fimuls
mov
xchg
dec
rcrb
sub
mov
dec
icebp
nop
lea
lods
push
fbld
or
aad
imul
push
lahf
xchg
clc
lods
stos
mov
push
sub
and
bound
fadds
in
xchg
and
bound
andl
push
loopne
hlt
xchg
ja
pop
outsb
dec
movl
subps
outsl
or
mov
adcl
shll
and
dec
das
mov
mov
push
cmpsl
lds
cmp
xchg
int3
cmpl
clc
insl
push
jno
bound
add
push
xchg
cld
mov
jmp
popa
cmc
shl
mov
lea
adc
jno
jmp
xchg
cmp
cmpsl
push
clc
push
jb
test
sub
dec
clc
mov
cld
mov
pop
and
in
aaa
sbb
test
pop
test
cmp
push
jb
inc
push
or
hlt
jecxz
add
sysexit
insl
daa
lods
inc
dec
iret
int3
and
sub
ja
out
sub
dec
add
aaa
test
lods
xor
xor
and
and
outsb
test
jb
jmp
mov
push
fincstp
lret
sbbl
add
pop
cmpl
shll
call
cmp
and
push
push
inc
das
lods
sahf
mov
dec
xor
cmpb
into
stos
out
pushf
popa
stos
push
mov
jp
add
in
idivl
insl
adcb
xor
testl
insl
sbb
and
into
and
add
sarl
mov
adc
addr16
lds
sub
in
insl
xchg
movsl
adc
mov
inc
fcomps
and
in
jmp
pop
or
outsb
jmp
clc
inc
cs
fiaddl
and
add
outsl
das
shr
push
in
push
arpl
sub
fdiv
stos
outsb
dec
testb
das
jmp
fwait
inc
sub
out
pop
mov
add
insb
mov
push
enter
sti
cwtl
xor
stos
mov
frstor
push
mov
push
leave
mov
pop
xor
cs
mov
mov
push
int3
enter
fidivs
aas
sub
pop
enter
jns
xor
ror
xchg
insb
lods
in
negl
cwtl
rolb
cmpsb
test
inc
push
js
mov
push
imul
and
in
test
inc
dec
ds
mov
stc
scas
ret
mov
and
sbbl
cmp
outsl
enter
sub
dec
mov
jno
mov
cmp
call
cmp
aad
xor
movsb
stc
movsb
into
mov
ja
jns
mov
xor
lods
sub
in
outsl
dec
cmp
or
outsb
movb
into
sub
or
and
out
lahf
adc
fisttpll
call
into
xchg
adcl
and
or
enter
xlat
insl
icebp
or
ss
in
in
mov
xchg
stc
push
push
jbe
cmpsl
rcll
or
jl
mulb
and
out
inc
sarb
lret
in
jle
test
lock
hlt
jns
adc
jp
mov
and
jbe
test
clc
and
jmp
dec
push
mov
pushf
fldenv
icebp
sbb
xchg
fnstenv
test
lods
xor
push
iret
xor
ficomps
xor
xlat
int
pop
jge
rol
xor
mov
psubw
inc
sbb
or
dec
fs
fwait
dec
sahf
scas
xchg
ljmp
push
dec
xchg
mov
fcoms
jge
mov
sub
pop
insb
xchg
and
in
fstp
daa
int
int
add
sub
jge
cmpl
test
fimull
or
clc
sub
add
inc
xchg
leave
into
into
mov
mov
dec
jo
movsb
push
sti
push
int3
cmp
and
ret
dec
gs
add
fbld
cmp
add
xor
pop
stos
in
addl
cltd
mov
stos
xor
jmp
lret
loop
call
mov
pop
or
pusha
and
mov
pusha
dec
inc
xchg
adc
dec
and
mov
in
xor
test
movsb
add
mov
subb
sub
stc
xchg
jmp
repnz
adc
mov
mov
sub
pop
xor
ss
pop
or
jle
mov
hlt
dec
mov
xor
stos
sbb
fisttps
lret
loop
sbb
imul
and
dec
push
out
xchg
pop
pop
mov
xchg
and
xor
movsb
lret
add
sub
sbb
dec
or
dec
lods
nop
and
sub
inc
lret
push
inc
xor
test
testl
mov
or
inc
ret
jnp
pop
mov
or
ret
arpl
pop
popa
mov
push
and
cmc
arpl
pusha
pushf
rcrb
xchg
xchg
xor
jmp
repz
insl
leave
dec
xor
sub
adc
cmp
dec
stos
push
inc
mov
imul
pusha
mov
fwait
dec
lahf
cmp
lods
test
and
dec
test
stos
dec
xor
jecxz
jg
cs
cld
and
mov
imul
jp
sub
or
xchg
in
add
and
xor
test
xor
jle
dec
lret
xor
call
fiaddl
fisubl
aaa
test
mov
sub
sbb
push
dec
pop
imul
jmp
cmpsl
je
push
test
xor
add
or
pusha
pusha
add
popa
and
lret
int
out
cs
mov
mov
lods
jecxz
push
lods
or
jmp
mov
stc
jp
jbe
and
cmp
cmpsl
mov
lea
mov
or
cld
bound
mov
jmp
andl
add
in
pop
push
stos
sub
mov
lds
xchg
pushf
sub
je
lods
lea
jbe
jl
jne
test
rcrl
push
pop
or
jo
mov
push
push
mov
push
add
dec
lds
mov
jbe
xchg
in
add
pop
jnp
pop
or
cmpsl
or
lds
adc
xchg
shrl
add
cwtl
lret
sbb
push
dec
lret
loope
mov
mov
cmp
enter
xchg
pop
lock
xor
and
stos
jbe
sbb
movsb
xor
inc
out
test
into
stos
inc
dec
xor
stos
inc
dec
jg
sbb
push
test
jge
sub
nop
jae
pop
int3
and
pop
jmp
movsb
inc
xor
pop
xchg
xor
or
jmp
adc
outsb
add
jmp
insl
lods
lods
jle
cmp
popf
mov
xor
add
push
hlt
ficoms
movsb
ljmp
cld
dec
push
lea
cmpsl
insl
js
and
gs
fldt
mov
lds
sbb
test
mov
cmp
orb
xor
xor
inc
popa
es
mov
ss
popf
or
cli
imul
pop
push
cmpsl
cs
aad
iret
movsl
sbb
stos
add
dec
imul
pop
or
pavgw
mov
pop
outsb
add
pop
call
dec
dec
push
pop
xor
push
mov
dec
pop
stos
lahf
stos
leave
mov
mov
arpl
push
int3
push
jae
repnz
xor
andl
sarl
lods
icebp
arpl
fmull
jmp
cmpsl
jae
sub
adc
and
mov
pop
lods
mov
or
push
inc
xlat
inc
test
fcoml
push
fs
adc
push
ret
push
push
bound
pop
fs
mov
xor
lcall
or
cs
int
sti
fldcw
dec
loop
or
xor
and
push
das
push
mov
popa
pop
stos
inc
lret
mov
or
push
insl
pop
jmp
mov
stc
xchg
leave
xchg
scas
pop
in
out
scas
addb
add
loope
xor
sub
or
addr16
sbb
cmp
imul
test
dec
scas
pusha
cmp
pop
test
insb
out
pop
push
out
pushf
daa
jle
adc
loope
pop
lret
subb
in
sbb
js
bound
sbb
mov
pop
in
lret
jg
imul
ret
or
cli
push
out
or
stos
shl
out
push
adc
cmpsb
sub
lret
jle
mov
sahf
test
xor
repz
cli
fsubr
sbb
xchg
mov
insb
mov
shl
stc
jmp
loop
xchg
pop
push
mov
push
xor
add
rcl
pop
sbb
bound
sub
xorl
cmp
enter
dec
hlt
sub
mov
adc
dec
cld
dec
repnz
dec
lcallw
xchg
pop
ret
mov
mov
out
popf
sahf
pop
push
insl
sbb
push
xchg
and
push
outsl
hlt
jmp
repz
mov
lods
pop
out
sti
push
jne
loopne
dec
in
dec
xor
mov
add
insl
mov
sbb
arpl
dec
fstpl
dec
mov
call
pop
xor
dec
stos
xchg
adc
ljmp
push
lock
cli
mov
xchg
add
push
dec
jae
push
packuswb
xchg
ja
push
add
mov
push
icebp
mov
pop
mov
in
movsb
cmp
or
test
and
insl
jb
pop
push
mov
int
js
addr16
and
sub
or
lods
seta
stos
inc
jmp
dec
imul
outsl
cmpsl
imul
or
leave
dec
sub
orb
jg
sub
jo
test
jle
cmp
shr
mov
pop
lds
jl
adc
fmull
push
dec
adc
arpl
clc
inc
in
jno
arpl
or
leave
leave
add
xor
outsl
out
mov
stos
push
xchg
rclb
xlat
pop
out
enter
adc
sub
jl
jmp
push
jnp
or
lds
ror
cmp
mov
jg
jnp
out
or
pop
leave
sahf
push
mov
sbb
jmp
or
cli
push
and
int3
cs
xchg
test
in
xchg
fmuls
jno
or
push
enter
lods
or
xchg
out
sbb
div
fbld
push
mov
unpckhps
loopne
jmp
in
aaa
or
dec
ja
call
iret
adc
stc
outsb
cmp
sub
jmp
subl
mov
dec
pop
int
stos
bound
adc
movsl
jp
stc
scas
inc
dec
enter
movsl
pop
icebp
cmp
fimull
fadds
stos
dec
adc
addr16
push
adc
lods
dec
gs
test
mov
sbb
icebp
sub
mov
lods
push
pop
pusha
lret
xor
add
mov
hlt
adc
jecxz
ss
and
es
xchg
jnp
mov
dec
cmpsb
imul
mov
out
dec
xchg
xor
leave
mov
sbb
rclb
pop
sub
and
xor
jmp
sub
lods
insb
push
iret
dec
out
mov
xor
out
hlt
jb
pop
pop
shrl
fidivs
das
xor
out
sahf
add
or
call
cmpsl
cmp
insl
dec
addr16
jo
xor
in
push
lret
jle
dec
aad
clc
nop
in
xor
inc
je
jg
dec
pop
leave
ss
sub
iret
imul
fmuls
fistl
stc
inc
hlt
xchg
mov
xorb
imul
sub
mov
scas
dec
lret
dec
rcrl
dec
xchg
push
xchg
mov
cmp
dec
in
and
int3
cmp
mov
adc
xor
dec
out
repnz
out
andb
pop
cmpb
jno
in
inc
push
movsl
mov
outsb
cmp
fdivrs
dec
arpl
jmp
or
push
imul
and
pop
push
es
jmp
andl
sub
mov
ljmp
pop
sbb
adc
xchg
push
jnp
mov
cltd
mov
pop
iret
dec
cmp
and
and
pop
pushf
xchg
push
jmp
cmpsl
test
and
mov
sub
jmp
mov
icebp
inc
repz
shrb
orl
imul
add
jo
enter
fildl
mov
jmp
das
and
pop
inc
dec
lahf
push
aaa
test
dec
leave
in
into
cmp
stc
and
mov
sbb
lods
int
mov
and
stos
mov
and
mov
iret
inc
lods
jmp
inc
sub
mov
dec
dec
pop
dec
add
cld
mov
inc
fistl
out
push
xchg
out
ljmp
pop
fstpt
xchg
xor
shrb
idiv
sbb
inc
subb
movsl
mov
mov
sub
adc
and
dec
cld
push
xchg
jns
fisttpl
jmp
hlt
xchg
fwait
call
js
add
jl
aad
inc
sbb
push
sub
lock
int3
xchg
ret
cmpsl
lods
jbe
mov
addr16
clc
mov
ret
lret
dec
pop
inc
inc
lret
jno
mov
cmc
adc
inc
int
movsl
arpl
xor
jecxz
cmpsb
mov
std
sub
sbb
push
dec
sub
adc
enter
es
jbe
pop
popa
and
inc
sbb
sbb
dec
jecxz
add
fxch
dec
cmp
dec
lods
dec
jp
ljmp
enter
subb
push
mov
xlat
test
out
jp
ja
jecxz
iret
sbb
mov
xchg
cmpsl
push
cmp
fmuls
test
xorl
or
cmpsl
push
loopne
roll
mov
scas
push
cmpsl
lds
test
sbb
stc
pop
icebp
pop
jbe
loope
or
rorl
sub
and
pop
sbb
push
xor
dec
mov
and
ret
lret
test
push
scas
sbb
mov
jns
mov
dec
jecxz
fldcw
push
incb
xlat
sbb
mov
pusha
dec
push
add
arpl
mov
or
stos
in
push
adc
in
cltd
and
jmp
mov
jmp
inc
jbe
cmpsl
push
pop
push
sbb
orl
sbb
leave
inc
int
inc
mov
out
sub
inc
int
ds
into
in
add
ret
mov
loopne
jle
orl
fldt
push
hlt
in
vphaddubw
hlt
cmc
pop
pop
lret
inc
stos
mov
and
mov
or
add
aad
dec
ja
popf
add
dec
and
orl
xor
hlt
push
jmp
ds
int3
aam
inc
cmpsl
or
andps
and
aam
cwtl
pop
std
lea
sbb
mov
dec
sahf
push
add
lods
sub
scas
mov
add
sub
push
fisttpl
jae
test
xor
cmpsl
sub
in
sub
mov
cmp
mov
mov
inc
test
jbe
sbb
inc
dec
hlt
shr
mov
mov
and
lret
xchg
or
ss
cmpsl
outsb
pop
clc
xor
mov
mov
dec
stos
add
and
enter
inc
cmp
fiadds
mov
lods
into
arpl
and
icebp
add
cmp
cmp
pop
mov
fcmovnb
loop
or
les
dec
and
cmpsb
xchg
dec
mov
loopne
dec
pop
scas
rorl
insb
das
inc
dec
sub
jmp
cmp
je
sub
or
test
add
insl
orl
insl
xchg
or
inc
cmp
pop
lds
mov
and
pop
xchg
movsl
mov
mov
and
jecxz
dec
or
out
push
out
push
test
or
mov
inc
mov
or
cmpsb
xlat
int
and
xchg
inc
xchg
inc
adc
push
test
fbstp
adc
inc
sub
inc
xchg
insl
aam
pop
fistl
xchg
cs
loop
call
adc
icebp
sbb
inc
cmpsb
sbbl
int3
add
and
stc
and
and
mov
into
out
or
int
call
int
xor
and
sub
or
out
xchg
mov
data16
dec
mov
jmp
push
pop
int
and
sti
mov
mov
xor
fdivrl
enter
cmpsb
cmp
lods
xor
push
loope
ja
fucomip
lret
repnz
test
lcall
iret
pop
cmpsl
mov
mov
inc
inc
hlt
sti
icebp
add
add
pop
mov
shll
addr16
outsb
arpl
fisubrl
pop
daa
insb
enter
or
pop
sbb
push
imul
test
loope
sub
jmp
push
rclb
int3
insb
mov
sbb
pop
add
dec
popa
out
mov
out
int
das
add
std
dec
pop
jge
add
jno
jnp
icebp
fadds
pop
pusha
adc
mov
adc
lea
cld
cmpsb
aas
push
mov
int3
push
push
cmp
scas
mov
jmp
pop
sbb
or
scas
fldcw
popa
jns
mov
xchg
mov
ja
leave
mov
rcll
cmp
loope
pushf
and
dec
add
int3
mov
mov
pop
outsb
fisttpl
in
icebp
mov
pop
mov
dec
or
fs
jmp
xor
adc
enter
int
imul
xchg
fcoml
push
inc
negb
inc
pop
clc
inc
leave
push
and
inc
jp
enter
cmpsb
scas
add
jb
arpl
xchg
adc
jecxz
pop
shlb
xor
pop
mov
jl
sti
fimuls
sub
lds
and
out
push
loopne
imul
lahf
mov
std
push
push
out
add
push
jmp
mov
movzwl
fdivl
or
inc
sub
push
cli
cmp
mov
in
xchg
xlat
inc
lea
sub
int3
mov
enter
hlt
nop
add
dec
and
or
outsb
sbb
in
stc
ror
sub
xorl
sar
cmp
or
test
stc
movsl
inc
dec
repz
int3
test
aaa
add
dec
mov
lret
bound
mov
add
hlt
add
imul
lods
xor
cmpsb
dec
test
or
rcll
aam
mov
sub
dec
push
enter
repz
sbb
xchg
mov
pop
jle
inc
dec
cmp
stc
pop
icebp
adc
imul
adc
testb
lea
lret
and
jmp
xor
inc
ds
imul
insb
jmp
jns
mov
ret
push
aas
jecxz
pop
int3
or
fisttpll
add
adc
sbb
push
leave
mov
and
lret
loopne
push
jns
out
negb
mov
cmp
shll
addr16
cmp
sbb
enter
inc
adc
mov
aam
inc
xor
inc
imul
push
sbb
inc
pop
xor
js
inc
mov
push
out
hlt
sarl
out
add
mov
or
mov
in
shll
ret
int3
adc
push
cmpsb
xchg
sub
jp
mov
jecxz
mov
call
clc
loope
pop
into
and
or
sahf
push
push
test
aas
xchg
nop
mov
sbb
push
in
repnz
jp
decb
scas
cmpb
push
leave
adcb
xor
dec
dec
sahf
push
test
jnp
add
inc
jle
in
mov
loope
push
or
adc
cmpsl
ljmp
int3
pusha
or
mov
push
jno
dec
fbld
mov
sbb
or
mov
lds
or
mov
lods
xor
adc
add
inc
mov
mov
push
insl
pop
in
jmp
xor
push
cmp
fidivrl
mov
sub
stos
and
leavew
int3
dec
pop
push
and
sub
add
mov
pushf
scas
rolb
loope
or
hlt
and
scas
cmpsb
jmp
push
sbb
jmp
loope
adc
ljmp
adc
dec
mov
lret
sbb
dec
push
mov
xlat
pop
sbbb
pop
into
pop
add
or
inc
xorb
pop
jmp
test
mov
and
xchg
arpl
add
push
or
std
stos
js
mov
movsl
jle
jo
mov
test
mov
mov
lahf
das
or
cmpsl
dec
dec
mov
mov
xchg
out
dec
push
jnp
add
icebp
loopne
fst
or
andl
inc
pop
pop
sub
pop
mov
pop
cmp
iret
fsubl
test
cmp
or
jns
xchg
jns
jle
inc
add
call
adc
sub
out
and
nop
pop
dec
and
hlt
insl
sti
loope
jle
and
pusha
ja
insl
in
sbb
and
insb
ja
xor
mov
fsubrl
and
int
leave
cwtl
icebp
negb
pop
sub
mov
call
and
shll
sahf
dec
add
jl
mov
pop
inc
and
mov
push
in
int
jns
dec
xor
ljmp
sbb
push
pop
cmc
test
arpl
aam
dec
sbb
ret
mov
cmp
jmp
shl
push
sub
inc
xlat
jmp
arpl
push
fstl
or
and
into
xchg
or
inc
cmp
pushf
sub
daa
jmp
imulb
mov
popl
mov
sub
test
ret
inc
mov
rcl
scas
int
jmp
orb
dec
adc
mov
push
sub
or
lea
push
nop
sbb
sbb
mov
inc
jmp
loop
push
and
fmulp
push
data16
lea
jmp
mov
push
push
mov
pop
adc
shll
ret
pop
sub
mov
xchg
mov
jbe
push
jne
stos
insb
shrl
je
shrl
xor
test
mov
call
add
sbb
inc
repnz
icebp
xor
mov
in
enter
push
in
lock
movsl
or
int3
adc
fimuls
and
mov
dec
xor
cmpsl
shll
jae
arpl
jno
jbe
xor
mov
test
out
mov
sti
enter
clc
stc
mov
inc
scas
xlat
int
xchg
or
sub
iret
or
mov
stc
jb
xor
mov
adc
sub
sub
pop
mov
sbb
insl
xchg
and
xchg
roll
adc
sahf
mov
and
and
js
call
ret
inc
jbe
jge
ret
aaa
ljmp
dec
push
cmpl
dec
inc
mov
adc
pop
mov
nop
mov
xor
jp
jmp
and
cmp
push
scas
insb
lret
add
add
rorl
mov
mov
jp
mov
xchg
cmp
add
mov
inc
jmp
or
mov
sub
xchg
imul
mov
mov
clc
xor
and
movsl
daa
cmp
xchg
fsts
mov
lea
orb
push
inc
mov
push
inc
and
orl
lods
pop
aas
test
or
clc
icebp
aam
adc
and
xchg
mov
test
fildll
mov
cmp
in
aam
loope
mov
or
repz
sbb
arpl
int3
xchg
andl
add
cmp
jae
inc
or
mov
cmpsl
stos
stos
push
mov
inc
xchg
mov
inc
ljmp
jmp
jnp
andb
clc
rcll
std
inc
and
call
xor
sbb
dec
shrl
dec
mov
pop
sub
or
in
movsl
push
ja
xchg
hlt
imul
cmp
arpl
test
mov
rcrb
imul
add
lret
dec
ja
inc
sub
jbe
fwait
xchg
mov
lahf
sub
out
xlat
lcall
fidivl
push
lret
push
cmp
jmp
cmpsb
or
pop
call
xchg
push
mov
jns
mov
pop
sti
hlt
stos
sbb
pop
imul
mov
cmpsb
dec
das
or
test
bswap
cmp
cmpb
in
sub
sub
or
ret
in
add
ret
lcall
inc
jmp
mov
bound
es
xchg
mov
or
mov
sub
mov
adc
add
hlt
jae
lcall
cmpsb
lods
iret
lret
or
aaa
dec
lods
or
xchg
adc
mov
push
xor
lds
in
daa
call
in
cmp
hlt
jp
pop
mov
xchg
ja
dec
inc
daa
cmp
icebp
xor
mov
daa
and
fninit
icebp
or
icebp
or
aam
dec
sub
ljmp
lret
add
mov
xchg
mov
in
shrl
xor
hlt
mov
ret
or
mov
fcmovnb
push
leave
jg
and
mov
mov
mov
xchg
mov
adc
mov
sub
pop
out
mov
mov
and
push
outsb
notl
test
repz
jbe
or
pusha
test
add
pop
or
aaa
xorl
cli
cmp
xor
jmp
test
mov
sbbb
in
mov
push
mov
or
ret
jo
or
xchg
ljmp
leave
test
adc
push
cmp
sbbb
fcomps
mov
mov
fsubr
xor
push
xor
aam
int
loop
push
jno
mov
xor
cwtl
jmp
sub
in
mov
ror
insb
popf
or
aad
push
mov
adc
aad
leave
or
fdivrs
out
jecxz
std
mov
int
xchg
mov
push
push
mov
xor
mov
fldcw
enter
test
loopne
pop
sub
dec
mov
mov
cmp
pop
scas
rcrl
fsubrs
sbb
cmp
aaa
pop
add
jo
push
pop
dec
dec
push
adc
hlt
sub
imul
mov
xor
out
add
aam
dec
mov
bound
ret
pusha
xchg
mov
jl
mov
xor
clc
add
xor
faddl
pop
loope
mov
pop
test
inc
push
and
mov
or
mov
pop
sub
push
add
clc
add
jl
cmc
scas
fsubrs
or
or
gs
ret
aad
mov
push
push
xor
enter
stc
adc
or
jge
add
rcll
sub
adc
add
mov
jo
mov
stc
push
dec
pop
stos
adc
sub
not
dec
push
add
inc
add
cmp
lret
adc
in
xor
or
lret
scas
les
bound
aad
sub
dec
mov
imul
xchg
movsb
mov
aam
sub
xor
syscall
dec
lret
lahf
sub
leave
fs
pop
aam
in
hlt
jle
add
aad
dec
jmp
xlat
or
ret
sub
adc
xchg
and
mov
or
ds
call
cmpsl
iret
adc
cmpsl
dec
and
add
jecxz
mov
insl
sub
push
repnz
cltd
mov
mov
add
push
hlt
lret
pop
cmpsl
das
add
sbb
outsb
mov
inc
jl
orb
mov
hlt
movsl
fidivs
xchg
cs
jmp
push
mov
loope
dec
stc
mov
clc
aam
pop
insl
movsl
imul
jae
sub
add
imul
sub
or
pop
pop
adc
call
int3
out
mov
pop
sbb
shrb
arpl
mov
xor
add
test
scas
dec
lds
insl
cmpsl
sub
xchg
dec
enter
lods
loope
push
push
cltd
inc
test
popf
call
jae
mov
dec
pop
push
shrb
lret
jmp
or
mov
push
lods
xchg
or
push
xchg
inc
push
psubq
aam
lock
pop
inc
sub
sbb
aaa
test
sub
inc
je
mov
dec
xchg
cmp
mov
in
xlat
fldcw
iret
cvtps2pd
repnz
rcrl
ss
arpl
div
das
jmp
mov
sbb
imulb
js
push
sub
ror
sub
or
sti
sub
inc
leave
or
lock
cmp
inc
and
mov
fisttpll
addr16
sub
in
lock
adc
imul
hlt
inc
lods
lods
les
stc
mov
ss
sbb
imul
mov
push
xor
in
jo
mov
dec
test
push
dec
stos
mov
int3
fyl2x
ja
xor
stc
and
or
jo
testb
leave
imulb
mov
es
dec
dec
stos
mov
icebp
pop
xchg
inc
imul
sub
cmp
test
dec
jo
stc
std
jmp
cld
lahf
mov
sub
enter
lock
dec
jmp
cmp
cmc
hlt
or
jge
leave
mov
outsl
test
into
inc
pop
test
push
push
mov
dec
dec
or
xchg
adc
sbb
dec
ljmp
xor
mov
pop
mov
pop
inc
mov
mov
jmp
mov
jmp
sbb
cmpsl
insb
xabort
dec
testl
cmpsb
cmp
lea
testb
or
je
inc
or
jb
imul
cld
stc
out
dec
or
lods
and
mov
pop
subb
enter
mov
mulb
mov
ret
or
into
leave
cmp
or
sub
imul
add
or
in
adc
inc
or
sub
inc
mull
push
jl
mov
jge
jne
lret
pop
fildll
jno
inc
push
leave
pop
mov
adc
xchg
ljmp
and
xor
cmp
insb
pop
sbb
push
dec
push
push
sbb
int
push
and
paddsw
pop
or
add
dec
xor
dec
out
sub
pop
and
sub
mov
xor
dec
xlat
xchg
hlt
add
sbb
pop
aad
inc
mov
pop
inc
cmp
sub
adc
pop
or
pop
nop
call
js
inc
sarl
mov
xor
sub
daa
cmp
sahf
ds
or
dec
dec
enter
jle
push
cmp
cmpsb
sub
hlt
ret
dec
loope
pop
cs
pop
test
sbb
push
or
push
fwait
pop
in
cmpsb
push
in
xor
inc
add
cmp
push
fdivl
mov
inc
cmpsl
cmc
test
jno
sbb
scas
inc
orb
fmull
mov
xor
sub
shll
sbb
add
adc
push
lods
jbe
vscatterqps
sbb
ljmp
sub
lret
jecxz
sub
pusha
jne
dec
pop
cmpsl
orb
insb
push
xchg
lock
decb
rorl
gs
int
lret
pop
dec
xorb
into
mov
add
fcmovnu
loope
adc
ds
sti
xlat
push
jmp
pop
rcrl
adc
test
adc
int
nop
dec
pop
scas
rclb
imul
mov
cmp
fsubrp
scas
sbb
jnp
push
add
hlt
mov
sbb
sub
push
pop
ljmp
inc
fnstenv
lahf
repz
lods
mov
xchg
xor
test
push
decb
pop
xchg
test
pusha
enter
sub
push
mov
dec
or
jbe
enter
pop
mov
sbb
push
test
imul
ss
jg
repnz
imul
sub
inc
mov
lret
mov
stc
or
hlt
xor
mov
movsl
test
lds
mov
sahf
xor
pop
xchg
cmc
xchg
dec
orb
movsl
enter
pop
call
sub
or
hlt
jne
out
sti
mov
xor
subb
shr
cmp
jb
add
jmp
inc
fwait
rcl
mov
leave
test
push
cmp
dec
cmp
xor
xchg
pop
dec
int3
sub
test
push
push
in
fwait
and
sahf
mov
mov
sub
and
or
lods
pop
lods
xor
mov
add
or
stc
adc
xchg
ret
fmull
loopne
iret
andl
add
sub
and
fyl2x
cmp
dec
fiadds
dec
jecxz
add
stos
mov
lret
push
popa
pop
mov
pop
mov
lcall
mov
test
sbb
push
subl
mov
add
shrl
mov
jg
pop
aaa
test
mov
sub
and
jmp
xchg
sbb
pop
cmpsl
rcrb
add
pop
dec
or
cwtl
inc
js
stos
pop
sub
mov
das
xor
out
clc
pop
clc
ret
add
sub
push
xor
mov
ss
sbb
int3
xchg
add
mov
push
mov
pop
push
icebp
out
xor
hlt
int3
mov
jmp
lret
mov
sub
or
mov
cmp
xchg
cmpsl
or
mov
push
insl
daa
mov
dec
fcoms
or
lret
sbb
test
inc
and
xchg
leave
xchg
bound
xor
out
in
pop
dec
mov
pop
mov
ja
push
jns
popf
icebp
test
xchg
xorb
push
sbb
movsl
cmpsl
mov
lock
jae
xchg
sub
push
call
xchg
repnz
jae
mov
sbb
repnz
int
sub
mov
push
scas
sub
test
ss
pop
pusha
lret
insb
push
mov
insb
ret
push
in
pop
gs
inc
imul
lds
imull
stos
out
lods
dec
cld
int3
pop
packssdw
push
sarl
mov
shrl
sub
fwait
iret
cmpsl
pop
mov
fcompl
movsl
shrd
sub
inc
or
adc
inc
repz
xchg
hlt
jmp
int
leave
dec
rorb
xor
sbb
aam
push
mov
in
jns
xchg
icebp
sub
call
sub
imul
or
enter
jmp
push
fidivrl
xor
cs
ljmp
scas
std
mov
inc
outsl
push
add
inc
das
sub
push
mov
int
pop
or
mov
pop
push
adc
dec
inc
push
je
mov
out
fisttps
mov
pop
push
outsb
push
pop
inc
inc
add
sbb
mov
fxch
mov
flds
adc
adc
out
mov
add
outsb
fcmovne
sub
dec
fcoms
jecxz
dec
pop
push
inc
lret
mov
dec
adcb
sarb
push
inc
xchg
mov
dec
pop
fildll
mov
ret
jecxz
dec
jge
int3
xor
add
mov
shrb
jmp
xor
or
fstpl
jp
negb
fisttpll
enter
pop
int3
mov
flds
mov
adcl
push
xor
sub
jmp
iret
sub
sub
xchg
push
jecxz
dec
sub
push
int3
mov
dec
adcb
or
pop
nop
adc
push
inc
xchg
mov
dec
fcmovnu
sub
sub
or
inc
arpl
dec
sbb
hlt
in
jp
push
insl
adc
inc
xchg
mov
out
out
jb
lret
mov
test
out
push
jg
rolb
jmp
add
dec
dec
in
lret
push
sbb
sub
enter
xchg
rorl
cmp
enter
or
sub
sub
adc
rol
fisubs
stos
into
xchg
sub
sub
dec
iret
repnz
notb
xchg
cmpsb
bound
adc
pop
imul
xchg
ss
mov
add
aam
jns
ss
cmp
lret
push
sub
stos
in
sub
jbe
and
push
mov
cmp
call
jns
push
call
pop
sarb
sbb
inc
ja
xchg
mov
jbe
or
dec
ret
les
add
lcall
lret
or
sub
mov
cmc
test
in
push
orb
or
mov
xor
mov
cmpl
imul
fdivrl
fadd
inc
jo
dec
sub
or
push
aaa
pop
dec
mov
hlt
sbb
cmp
cmp
rorb
dec
jns
add
add
pop
push
push
outsb
fisubrs
cmp
ret
xor
push
xor
inc
hlt
clc
cmpsl
or
leave
xor
test
outsb
xlat
sar
or
cmpsl
aad
in
sbb
and
xor
mov
iret
xchg
adc
mov
mov
dec
push
push
and
into
dec
sub
mov
push
mov
mov
ljmp
js
loope
add
xchg
cs
fmul
jbe
lret
add
jg
xor
and
dec
mov
push
push
pop
cmp
ljmp
dec
adc
or
push
adc
sbb
mov
movl
cwtl
xchg
insb
pop
dec
orb
dec
in
sahf
sub
addr16
inc
sub
cli
or
shrb
fildll
mov
cmp
pop
push
push
icebp
bound
mov
push
mov
movsl
push
je
scas
or
and
push
push
cwtl
cltd
cmp
cmpsl
inc
pop
xor
jo
pop
sbb
daa
xor
scas
outsl
lds
test
rcrl
addb
sub
js
stc
xchg
sahf
dec
pusha
in
pop
es
cmp
dec
ret
sub
or
sub
or
dec
call
push
iret
cmpsb
pop
adc
movsb
push
lret
lods
shl
adc
fs
out
sub
fimuls
gs
and
pop
dec
cmpsl
mov
arpl
dec
imul
clc
push
and
ljmp
xor
aas
xor
cwtl
insl
rcl
test
pusha
hlt
mov
xchg
sbbb
fsubrs
mov
push
lret
jbe
pop
int3
cmpsb
ja
enter
cli
add
add
jae
pop
mov
test
mov
pop
xchg
jecxz
imulb
imul
mov
scas
xchg
insl
mov
mov
cltd
loop
pop
sbb
jbe
jmp
stc
repz
je
mov
and
jno
insb
or
jp
sbb
mov
loope
sub
aas
int3
add
test
insl
cmpsl
pop
repnz
rclb
hlt
bound
mov
add
pop
fisubrs
aas
xor
cli
ja
push
push
movl
cmp
icebp
subb
fcomi
xchg
test
xor
push
or
std
lret
cmpsl
ret
jge
ret
mov
cmp
mov
pcmpeqd
adc
push
jnp
xor
test
sub
outsl
xchg
mov
lret
clc
scas
dec
pusha
fidivrs
sub
lcall
loope
mov
pop
xchg
mov
jg
into
add
lods
lock
call
push
or
into
data16
mov
jl
jecxz
hlt
scas
jle
scas
leave
jg
setno
cmpsl
push
pop
mov
mov
pop
add
push
inc
add
pop
cs
lds
jecxz
adcb
out
pop
into
inc
cmc
dec
mov
loop
popf
xchg
test
mov
pop
or
dec
jb
cli
in
push
std
jmp
adc
cs
les
inc
fdivrl
xorb
sub
ret
pop
mov
jl
subw
into
scas
dec
jae
xor
insb
jae
in
test
xchg
push
testb
jnp
sub
sub
sbb
inc
mov
clc
dec
and
hlt
fldenv
movsb
or
jnp
add
mov
xchg
jb
jmp
inc
stc
icebp
leave
fisubl
sub
mov
jmp
xor
aad
sahf
rcrl
sahf
sub
sub
cmpsb
mov
cld
add
or
cmp
dec
mov
es
ljmp
imul
dec
sub
sub
adc
dec
in
hlt
test
inc
push
xchg
add
mov
and
insl
jg
lods
sub
cmp
jge
xorl
dec
sub
test
or
adc
dec
dec
arpl
dec
test
movl
leave
test
push
push
mov
mov
inc
and
insl
andl
jp
sti
jmp
cmpsb
mov
cmp
dec
in
movsb
push
sbb
cmp
jno
iret
and
lahf
mov
fldt
xor
dec
hlt
push
fcompl
int
inc
push
or
lds
sub
pop
data16
test
cmp
movb
leave
adc
jecxz
cmp
pop
in
icebp
fwait
mov
loopne
sbb
jmp
lret
add
sub
push
ljmp
inc
push
push
xor
inc
mov
jle
cmp
or
cmpsl
test
cmpsl
sar
imul
adc
cs
cmp
xor
mov
bound
cwtl
test
arpl
push
fldenv
jbe
orl
out
dec
push
popa
data16
repz
cld
addr16
cmpsl
in
mov
xlat
xchg
and
push
mov
or
push
xchg
popl
lahf
scas
subb
out
or
das
mov
lcall
xchg
adc
int
jg
movsl
jecxz
scas
je
add
out
or
int3
sbb
mov
push
lret
xor
xor
or
imul
stos
pop
test
adc
hlt
mov
xor
inc
xlat
add
daa
push
sub
inc
mov
notb
orl
dec
cmp
adc
lahf
in
sbb
push
out
pop
mov
loope
dec
sbb
mov
je
dec
push
test
xor
inc
xlat
sbb
mov
or
push
in
adcl
sub
xchg
lret
hlt
cmp
adc
arpl
mov
popa
and
add
cwtl
sbb
jle
dec
and
mov
stos
mov
sbb
mov
or
push
cmp
push
dec
dec
adc
jp
adc
jl
push
push
loop
lods
ds
out
xchg
push
push
lret
cmpsb
dec
out
jl
mov
test
getsec
push
aam
pop
cmp
pop
mov
xchg
in
stos
add
sahf
rolb
and
push
xchg
jg
push
mov
mov
push
jno
hlt
popf
mov
jae
ret
mov
xor
mov
adc
lret
push
sbb
or
arpl
int3
outsl
push
jmp
push
push
adc
pushw
ret
sti
fs
xchg
loopne
shll
idiv
xchg
dec
inc
cmp
mov
and
fnstcw
jno
lods
cmp
pop
arpl
jl
clc
fldt
shlb
mov
sbbl
inc
les
pop
inc
scas
push
cmp
add
pusha
push
sub
xorb
or
fistps
lea
data16
les
push
push
mov
clc
dec
bound
test
mov
jo
xchg
mov
push
cmp
mov
and
or
fucomp
push
or
outsb
and
sub
data16
ja
lret
xor
das
adc
mov
mov
push
mov
pop
jle
bound
out
mov
and
incb
cmp
mov
mov
ror
out
and
push
push
loop
rorl
cwtl
dec
sbb
push
sar
push
clc
xchg
jnp
rcrb
leave
insl
dec
jecxz
pop
or
mov
fndisi(8087
cmp
push
add
jnp
xor
jb
inc
int3
mov
lret
mov
add
and
ljmp
int3
mov
jb
or
sahf
sbb
clc
imul
mov
hlt
jnp
inc
dec
faddl
adc
add
xlat
rorb
inc
xchg
dec
inc
push
fnstcw
push
test
popl
sahf
sbb
popa
shl
cli
mov
clc
mov
enter
lret
orl
popa
lds
mov
inc
or
jns
mov
je
or
cmpsl
xchg
aam
sbb
add
add
rorl
sbb
mov
fmuls
inc
ror
sub
and
inc
adc
repz
dec
mov
or
arpl
hlt
mov
aam
leave
lods
jmp
test
insb
setp
enter
loopne
clc
adc
dec
xor
and
add
jbe
movsl
push
or
dec
add
fwait
push
push
jb
mov
xor
dec
inc
cmpsl
test
dec
push
dec
mov
outsl
in
jb
dec
ss
aaa
flds
add
inc
push
dec
push
and
icebp
dec
inc
or
hlt
call
inc
outsb
xor
inc
add
inc
push
outsl
sub
mov
or
push
hlt
imul
cmpb
arpl
loop
push
pusha
cmp
fistpll
push
and
inc
push
pop
rclb
test
or
cmp
xlat
cltd
mov
mov
inc
int
inc
loope
xor
mov
lea
or
jle
jg
pop
dec
push
cmp
jnp
stos
movsl
hlt
icebp
pushf
mov
test
dec
bound
mov
loop
fs
les
mov
pop
mov
lock
icebp
and
aad
stos
ret
inc
mov
and
dec
in
sub
fildll
push
adc
jbe
or
pop
ljmp
ret
lret
sbb
add
pusha
push
mov
adc
inc
leave
ret
adc
xor
xor
roll
pop
mov
js
loop
mov
xlat
sub
sub
inc
in
and
cmp
test
cmp
lret
cmp
test
das
inc
dec
push
xor
icebp
or
ja
popa
cmpsb
scas
lret
xchg
xchg
enter
jno
mov
lret
mov
fsubl
test
pop
xchg
popf
mov
cmp
mov
mov
push
dec
out
pop
outsb
lret
dec
mov
add
je
dec
bound
pop
mov
fildll
jecxz
or
mov
out
mov
pop
push
mov
and
add
push
xchg
std
pushf
shl
mov
add
ljmp
or
clc
push
mov
seta
sub
out
and
or
inc
in
xor
fcmovnu
or
or
mov
fnsave
jae
inc
in
xchg
mov
sub
fistps
jg
repnz
pushl
xor
jge
into
bound
pop
cmp
fcmovb
pop
mov
cmpsl
leave
dec
in
hlt
mov
or
add
xchg
dec
into
and
mov
sub
mov
push
cmp
push
stc
or
sub
aaa
and
testl
adc
shll
and
pop
mov
sub
xor
repnz
xor
idiv
push
lea
or
cld
pop
imul
cmp
fwait
dec
jecxz
cltd
sbb
int3
fs
dec
mov
inc
frstor
enter
push
in
lret
cmp
dec
les
enter
adc
dec
or
insb
xor
lods
testb
cmpsl
fcmovnu
dec
test
inc
pop
pop
fistpl
sub
lods
fsubr
xor
fmull
std
pop
sub
sub
inc
jp
push
enter
fisttpl
mov
push
in
inc
call
pop
push
pop
dec
jmp
hlt
push
mov
je
pop
lahf
dec
mov
and
xchg
stc
ret
mov
push
jo
xor
push
pop
fsubrs
sarl
dec
mov
push
in
or
cltd
lds
das
mov
xlat
rolb
or
mov
leave
add
inc
outsb
xchg
add
add
fmuls
rorb
out
sbb
dec
aas
mov
ja
sub
sub
sub
push
and
inc
push
pop
shll
sub
and
enter
hlt
jmp
add
leave
hlt
push
xlat
cmp
jno
mov
jmp
sub
das
xor
pop
loopne
jnp
cmp
xlat
loope
fldt
in
cmpsl
push
lods
xor
leave
xchg
push
loopne
out
xchg
xchg
clc
xor
pop
int3
xor
cs
test
in
cmp
dec
leave
inc
stc
test
sahf
dec
lock
or
sub
jmp
sbb
fcmovbe
or
push
push
stos
sbb
inc
and
shll
loop
rclb
cmp
or
stc
sub
cmpsl
and
xlat
cld
xlat
stc
xchg
adc
cmpl
xor
add
repnz
inc
xor
enter
cmpsl
inc
sbb
mov
stc
sub
lods
pop
cmpsb
xchg
sbb
inc
lahf
mov
sub
test
shll
dec
cmpsl
sub
lods
dec
lret
fadds
adc
fnstcw
add
inc
adc
leave
xor
cmp
lods
xchg
sbb
cmp
dec
push
std
popf
fnsave
xor
enter
xchg
jecxz
and
dec
cmp
loope
or
inc
dec
push
inc
test
fstpl
sub
sub
call
push
pop
sub
stc
inc
leave
xchg
arpl
fildl
jge
and
insl
iret
inc
enter
lret
mov
xchg
jo
out
xlat
leave
pop
mov
dec
sub
out
in
rol
mov
aam
mov
fneni(8087
xchg
xorl
test
dec
or
test
loopne
dec
lret
xchg
insb
cmp
aas
mov
push
clc
mov
vcvtsi2sdl
mov
push
into
sbb
inc
imul
push
pop
in
xor
leave
push
and
cmpsb
mov
int
call
fnstenv
hlt
push
movsb
push
mov
repz
push
mov
addb
dec
out
insb
in
lcall
mov
lret
das
mov
stc
sub
push
fldcw
les
iret
inc
and
out
out
dec
inc
les
hlt
inc
mov
lea
dec
xchg
pop
mov
ficomps
outsb
lret
jecxz
adc
inc
pop
add
dec
pop
add
pop
fs
cli
popf
out
adc
ret
pop
cmp
out
inc
cmp
cmp
adc
addl
mov
popa
push
dec
imul
fldz
inc
mov
cs
adc
test
and
aas
nop
cmpsl
test
gs
dec
lock
mov
loope
ret
ss
or
lds
repz
jge
stc
add
xor
lods
add
test
clc
add
stc
jbe
mov
jo
push
shl
dec
xlat
aam
ret
je
sub
sub
mov
inc
adc
stos
push
int3
pop
fwait
cmp
cltd
cli
sub
and
lods
rcrl
push
mov
cmp
cmp
jb
mov
dec
or
call
add
aaa
inc
push
popf
test
mov
lcall
dec
call
pop
jnp
icebp
xchg
lods
adc
repz
arpl
call
and
loopne
test
and
lret
mov
mov
enter
push
sahf
sub
cmp
in
leave
sub
mov
push
mov
fildl
ret
mov
mov
add
mov
or
sub
inc
push
lods
cmp
add
aas
sub
in
add
mov
mov
pop
or
cmpb
pop
rcl
dec
cmp
cli
and
xor
roll
and
das
mov
push
lret
enter
cmp
add
cmovge
out
mov
mov
iret
add
adc
cmpsb
andb
imul
stc
adc
mov
push
ffreep
daa
lock
and
or
icebp
icebp
dec
and
push
sbb
pop
rorb
xorl
fstps
sbb
sbb
es
jno
fstps
adc
jmp
neg
iret
xor
xor
or
inc
push
shlb
pop
notl
aam
mov
addr16
push
or
pop
mov
mov
jno
push
in
cmp
lods
jb,pt
sub
fldcw
enter
sub
ljmp
pop
enter
cltd
fdivp
or
loope
push
sbb
fsts
out
adcb
jmp
lahf
sbb
adc
adc
out
sbb
mov
add
pop
fidivrs
dec
jae
inc
imul
ficoml
stc
xchg
sbb
adc
adc
and
pop
mov
jg
ret
sbb
fidivl
mov
xor
jge
mov
aaa
clc
outsb
or
pusha
and
sub
bound
int3
dec
out
aas
ret
inc
push
mov
rcrl
das
int
dec
popa
or
mov
pusha
xor
subl
pop
dec
dec
in
scas
nop
sub
shll
and
ja
or
xor
pusha
outsl
sbb
dec
cmp
testb
xchg
lret
or
loop
inc
or
dec
xchg
enter
mov
or
jmp
rclb
sub
fsts
jo
lods
cmp
leave
jmp
inc
sbb
push
movsb
mov
enter
rorl
loope
sub
jns
lds
push
outsb
mov
ret
loope
push
stc
jb
mov
test
out
movsl
mov
xor
in
stc
mov
adc
movsb
mov
test
out
dec
mov
les
nop
or
mov
ffreep
and
xchg
xchg
push
pop
addr16
daa
xchg
inc
test
jne
enter
xchg
out
loopne
out
lods
daa
xchg
repz
lods
xchg
dec
pushf
sbb
add
adc
or
dec
add
inc
xchg
fildll
or
adcb
sarb
jmp
push
pop
sub
sbb
inc
dec
bound
sub
icebp
sahf
cltd
sub
outsl
cwtl
loop
add
sub
or
lahf
jns
push
les
inc
or
mov
push
je
sbb
mov
xchg
jmp
xchg
xchg
push
out
push
cmpsl
mov
leave
or
std
std
dec
sub
pop
dec
test
cmp
enter
clc
dec
dec
mov
cwtl
pop
cmp
lret
push
lods
mov
push
cmp
lods
jb
lcall
cs
xor
mov
fisttpl
mov
cmc
pop
call
fsubrp
xchg
leave
aam
icebp
jle
shr
pop
js
fsubl
xchg
popa
jmp
pushf
pop
and
ljmp
sbb
insl
mov
movsl
or
mov
lods
push
out
insl
rorl
jle
and
das
adc
dec
and
xor
std
or
mov
cmp
iret
mov
int
cmp
jae
clc
xor
mov
lods
sub
sahf
xlat
mov
outsb
lret
push
call
shll
inc
ljmp
inc
or
push
adc
jne
inc
sub
dec
into
ja
movsl
out
push
jae
cmp
dec
stc
out
call
sbb
add
adc
es
loop
push
stos
mov
inc
dec
enter
pop
push
movsl
je
dec
adc
cwtl
mov
or
out
mov
outsb
test
adc
sbb
xchg
adc
jle
xchg
ja
sub
xchg
pop
push
adc
ret
cmp
pop
pop
dec
lods
add
xor
decb
adc
cmp
dec
nop
shll
mov
cmpb
inc
jmp
mov
inc
push
push
dec
pop
sub
leave
jno
leave
push
imul
sbb
mov
repnz
frstor
sti
xchg
popf
jp
adc
fistpll
push
xchg
add
dec
dec
jmp
in
xchg
scas
stc
push
gs
jmp
adc
ss
push
or
push
clc
push
dec
or
leave
xchg
ds
inc
fisubl
mov
aas
cmp
pop
push
fmuls
pop
xchg
dec
lea
mov
out
clc
imul
or
lea
cmp
inc
cli
pop
or
adc
orl
les
push
mov
xor
sub
sarb
adc
enter
fsubrl
rcr
add
push
mov
fcompl
repz
in
ja
xchg
dec
push
xchg
dec
xchg
int
or
out
xchg
sub
out
dec
sti
xor
or
je
fwait
jae
sub
arpl
pop
test
xchg
add
adc
cmp
sub
call
fcompl
pop
int3
pop
xlat
movsl
test
jne
push
or
sub
or
mov
inc
xor
jns
cmpsl
xchg
cmp
dec
outsl
out
push
out
std
cs
push
test
lret
in
inc
mov
fidivl
pop
inc
std
lret
aas
sub
lock
data16
mov
iret
pop
push
jle
rol
pop
push
ret
sub
clc
in
repz
sub
dec
dec
mov
pop
xor
xlat
mov
cs
mov
or
sub
pop
inc
popf
jmp
sub
cwtl
hlt
sub
sarb
imul
scas
xor
nop
loop
ja
add
xchg
mov
dec
out
sbb
repnz
dec
pop
into
out
mov
loope
xor
ss
or
sti
mov
xchg
js
icebp
hlt
test
add
cmpsl
push
mov
ja
xchg
adc
inc
mov
lods
loope
push
pop
lret
sub
fmul
sub
cmp
int
hlt
pop
insl
test
mov
cmp
pushf
jns
push
jmp
orl
pop
cmpsb
call
mov
jl
or
fcmovnbe
sub
pop
in
add
lods
popa
inc
bound
out
mov
dec
insb
xchg
inc
adc
in
push
pop
or
push
test
inc
out
sub
repz
stc
add
shrb
jmp
or
sahf
push
fucomip
xlat
mov
mov
sbb
fcoms
in
roll
lret
xchg
cmp
dec
mov
stos
inc
pop
into
frstor
popa
lret
loope
pop
in
push
jmp
popf
fucom
das
shlb
sbb
loopne
mov
cmp
rolb
pushl
faddl
pop
cmp
mov
rorb
imul
jecxz
test
dec
shl
stos
lret
call
rcr
in
jmp
jmp
or
push
leave
push
sbb
mov
dec
fldcw
pushf
call
shrl
xor
mov
sbb
mov
xchg
push
mov
rcr
and
shll
and
jnp
mov
out
or
mov
or
outsb
in
mov
inc
pop
cs
or
or
cmpsl
in
mov
imul
mov
jle
cmp
stos
clc
clc
insb
sahf
lock
ret
pop
shll
lods
hlt
xor
and
cmp
inc
pop
mov
and
push
or
xor
jl
dec
xchg
outsb
or
sub
and
fisttpl
inc
fisubs
or
dec
xor
jmp
stos
push
xchg
xor
add
into
dec
sbb
cmpsl
lret
popa
xchg
iret
in
cmpl
test
xor
xchg
push
mov
adc
mov
mov
int3
pop
sbb
pushf
js
xor
or
js
and
or
int
jmp
jecxz
dec
push
loope
mov
stos
shl
sub
adc
leave
or
or
pushf
add
pop
jbe
daa
loop
outsb
int3
aaa
sub
sbb
test
mov
jl
sbb
or
and
int3
and
loope
xor
add
dec
cmp
xchg
stos
inc
inc
or
rcll
icebp
dec
int
inc
adc
mov
push
fs
mov
push
mov
and
es
cmp
js
mov
clc
scas
xchg
rcll
cmpsb
jbe
hlt
sub
outsb
add
or
jecxz
inc
dec
or
push
push
and
adcl
inc
cltd
xchg
xor
loope
adc
push
leave
dec
les
bound
insb
in
mov
pop
call
xor
repz
add
jl
mov
shrl
dec
cmp
jp
inc
jl
push
push
int
stos
arpl
cmc
cli
xor
cmp
std
in
adc
mov
test
or
push
mov
push
lea
adc
sbb
int3
inc
sar
int
push
gs
popl
or
pop
cmp
cmp
or
dec
leave
scas
add
cmp
enter
pop
into
loope
lods
and
mov
arpl
fcomps
dec
xor
test
and
mov
fsubl
dec
in
and
sbb
sahf
movsl
sub
jecxz
sar
sub
sub
insl
imul
adc
icebp
xor
sub
out
movl
fwait
mov
dec
push
dec
ret
mov
push
fisubs
pop
jnp
dec
sub
ret
xchg
push
adc
das
leave
and
rorb
jmp
hlt
hlt
sbb
or
sub
stos
inc
jmp
or
sbb
jle
dec
hlt
test
xor
pop
cmovno
or
sbb
or
and
and
mov
sub
and
movsl
and
jae
cmp
lods
aaa
xor
enter
pop
inc
sub
into
hlt
push
dec
rorb
out
adc
dec
stos
cmc
or
pop
mov
pop
or
push
or
lods
movsl
jmp
inc
stos
sub
call
repz
mov
fwait
ja
aad
shlb
push
call
sarb
sbb
sbb
sub
jnp
push
or
dec
lret
outsb
push
push
cmp
push
jnp
adcl
notl
test
lds
or
xchg
xchg
testb
xchg
xlat
cwtl
rcrb
out
hlt
jl
in
inc
ljmp
imul
aas
pop
cs
mov
pop
loopne
sub
outsl
pushf
mov
mov
mov
mov
jecxz
sub
inc
popa
in
fildll
push
dec
inc
pop
sub
in
jo
mov
bswap
mov
mov
ljmp
adc
xor
add
leave
dec
push
push
adc
arpl
push
and
out
out
loopne
adc
push
adc
loope
cmp
mov
jle
pusha
push
shll
es
lret
push
hlt
mov
clc
jno
jge
push
mov
iret
and
mov
mov
xchg
in
popf
mov
mov
adc
pusha
cmp
loopne
ret
dec
mov
and
jae
or
or
cmp
popa
sub
pop
or
pop
cmc
enter
leave
inc
mov
or
lcall
push
push
adc
dec
rcrl
dec
pop
jp
inc
jns
xchg
mov
out
lods
dec
xorl
fdivrl
lret
sub
addr16
enter
pop
cmp
movsb
xchg
and
testb
popf
outsl
add
inc
fs
insb
inc
jne
mov
cld
jp
and
stos
and
jns
mov
xchg
enter
aad
fnstenv
ds
loop
sub
push
mov
into
push
fiaddl
aad
scas
pop
cmp
dec
or
cmc
pushf
jl
mov
lds
cs
mov
inc
fwait
mov
push
and
lods
and
out
xchg
lods
or
jmp
push
pop
mov
or
push
je
push
mov
mov
and
add
adc
mov
mov
xchg
jbe
inc
enter
das
jo
cmp
adc
arpl
pop
sbb
arpl
push
jmp
test
xchg
jmp
xchg
or
data16
sub
cli
inc
cltd
out
or
addr16
sub
add
sub
sub
inc
dec
push
dec
push
test
pop
or
xchg
add
or
ret
mov
mov
sub
add
mov
fwait
jl
adc
xchg
subl
fmull
or
sub
jae
stos
dec
insb
inc
enter
adc
mov
ss
loop
test
pop
add
cmp
in
push
or
push
repz
mov
mov
pop
mov
mov
pop
add
orb
or
jbe
cmpsb
inc
mov
les
adc
mov
adc
xor
jge
xchg
and
inc
scas
mov
aam
pop
sbb
dec
and
push
test
mov
and
fimull
dec
aam
jge
stc
dec
jmp
lret
push
stos
loope
or
mov
sub
jne
and
scas
pop
cmp
add
mov
sbbl
jl
pop
mov
stos
outsl
push
xchg
inc
stc
push
adc
pop
jle
dec
fbld
or
mov
cmpsl
sub
into
mov
pop
mov
shrl
hlt
add
clc
adc
adc
push
outsl
addb
imul
xor
cld
sub
repz
fstpt
pop
icebp
sbb
sub
xor
mov
push
xlat
inc
cmp
adc
pop
std
enter
or
pop
int3
dec
test
mov
inc
inc
sub
mov
jo
mov
and
frstor
fsubs
aaa
call
sub
icebp
inc
push
xchg
inc
cmpb
incl
lahf
dec
sbb
xlat
lea
or
mov
sub
andl
rorb
or
push
insl
xchg
pop
shll
out
xor
fcmovb
cli
ds
test
pop
imul
mov
pushf
lds
daa
clc
xor
jo
arpl
clc
lea
ret
orl
in
jb
xchg
push
and
and
or
aas
js
inc
repz
sub
xchg
std
xchg
or
aad
into
mov
mov
repz
sahf
adc
sbb
mov
jnp
stos
jnp
sbb
lods
mov
or
stc
movsl
leave
push
scas
aas
lds
lcall
dec
push
leave
popa
cmp
movsl
hlt
ret
popf
xor
jae
xchg
fcomp
push
or
pop
int3
dec
xor
push
adc
jb
bound
fldenv
inc
push
fdivr
hlt
fisubs
sub
push
xor
xor
subl
loop
add
dec
mov
push
push
pop
sbb
lret
xor
fdiv
sub
or
int
add
sub
notb
jb
mov
push
xlat
enter
sub
lods
xor
sub
mov
push
mov
pop
add
clc
push
hlt
movsl
stc
jmp
movl
ret
or
xchg
or
rolb
nop
push
hlt
pop
pop
dec
xchg
int3
xor
or
mov
insl
push
cmpsb
sub
mov
push
hlt
insl
mov
add
fisttpl
les
addr16
dec
inc
aaa
adc
hlt
mov
cmpsb
aaa
push
mov
sbb
inc
out
mov
jg
out
ficoms
adc
negb
outsb
pop
pop
into
jecxz
sbb
loope
lods
and
popa
mov
sub
push
stc
inc
out
xchg
test
rol
dec
nop
dec
in
lret
or
fisttpl
in
and
push
pushf
aam
add
sbb
cmovnp
imul
mov
enter
push
push
rol
push
leave
das
or
add
dec
xchg
and
add
cmc
cli
dec
arpl
sbb
shl
js
sub
sbbb
xchg
lods
cmp
xchg
xor
sub
push
jmp
mov
pop
push
lods
cmpsl
mov
call
inc
dec
in
cmpsl
imul
lcall
nop
cmp
aam
jmp
jb
popa
xlat
cmpsb
pop
insb
xchg
sub
loopne
or
je
push
add
lods
sub
imul
adc
dec
decb
stos
push
clc
cmpsl
test
sub
lret
add
lcall
jl
subb
test
or
popa
cs
in
outsl
lock
test
insl
in
mov
cmovl
lods
lcall
xchg
sub
jmp
lea
inc
pop
mov
fstl
pop
mov
mov
in
leave
jnp
xchg
or
sahf
add
inc
mov
lods
and
sub
pop
add
daa
scas
fstpl
adc
jle
add
loop
mov
pop
mov
push
fs
in
fwait
add
das
jmp
int
jae
out
das
jge
push
outsb
ror
hlt
sbb
dec
iret
stos
xor
pop
jge
lods
jmp
dec
pop
outsb
addb
xor
pop
cmpsl
inc
cmp
or
sarl
sub
sub
mov
inc
test
dec
mov
add
in
out
insb
push
dec
inc
popf
or
mov
push
scas
push
dec
dec
add
xorb
insb
sbb
and
or
xor
sub
fcomps
mov
popa
dec
cmp
mov
push
jbe
jae
push
ficompl
jmp
mov
nop
cmpsb
cmp
inc
jp
outsb
mov
popa
cmpl
xchg
lret
lock
into
icebp
bound
mov
scas
cmc
push
popa
push
xor
leave
push
xor
nop
dec
adc
sub
jmp
clc
adc
adc
jnp
fcom
fucompp
add
hlt
fistpll
rcll
clc
xor
aam
cmp
leave
sbb
mov
mov
or
movsl
jecxz
scas
mov
inc
lea
and
push
lahf
jg
jns
sub
rolb
mov
dec
xor
jmp
lock
jo
cmpsl
add
adc
fdivrs
pop
lods
mov
in
test
dec
mov
xor
inc
fldcw
adc
xor
insb
fdivrl
lret
int
mov
inc
or
rolb
push
ret
mov
jmp
mov
add
or
xchg
int
pop
inc
cltd
cmp
mov
xor
or
inc
ds
clc
imull
pop
adc
pop
int
xchg
int
jmp
rcrb
pop
sub
aaa
xor
cmp
int
sub
jbe
jl
outsl
stos
out
pop
add
mov
push
int3
mov
push
xchg
and
jecxz
pop
jb
call
and
aam
xor
mov
mov
stos
pop
lret
dec
cmpsb
jecxz
push
jmp
push
xor
lods
push
or
inc
or
sub
sub
sub
lgs
aad
popl
xchg
xchg
jp
jbe
cs
cmp
mov
xor
or
sub
push
outsb
or
push
loop
cmpsl
jns
xchg
dec
jne
hlt
outsb
mov
jb
sbb
loop
jmp
shrl
sbb
dec
adc
xchg
adc
mov
ret
sub
or
fsubrs
orb
inc
nop
cli
add
cmpsl
sub
addl
clc
push
mov
hlt
dec
mov
testl
xchg
negl
and
cmp
xor
pop
xor
out
icebp
not
call
lret
loope
dec
jg
cmp
push
add
imul
mov
add
ja
jo
in
push
push
mov
test
jno
rcr
test
xor
iret
cmpsb
stos
or
aam
sub
sbb
adc
mov
bound
pop
cmc
addl
sbb
inc
dec
push
and
dec
xchg
imul
inc
cmpsb
sub
icebp
add
negl
shrl
push
fsts
mov
mov
shlb
dec
push
mov
push
cmp
push
divb
and
lods
jne
loop
aam
mov
mov
scas
push
cmp
leave
mov
cs
cmpsb
test
rcrb
push
sub
out
imul
pop
inc
fsubr
push
outsb
int
testb
cmpsl
mov
jns
insb
pop
aad
cmp
pop
loope
jno
inc
lret
in
inc
mov
fildl
and
dec
int
mov
call
into
icebp
or
push
push
test
std
mov
pop
lds
addr16
ret
push
sub
in
es
jae
sarl
clc
sub
lret
cmp
enter
sub
mov
cmp
mov
pusha
call
pop
mov
sbb
adc
or
inc
aad
dec
jmp
push
xorb
int3
repz
mov
mov
inc
sbb
imul
mov
fwait
ljmp
sbb
test
leave
cmpsb
dec
pop
push
subb
pusha
sub
xchg
call
andb
or
mov
inc
add
mov
cmpb
cmp
xor
decb
push
movsb
sbb
int
pop
mov
lea
jl
xlat
pop
cmpsb
js
lret
lahf
ljmp
pop
sahf
xorb
out
or
enter
or
negb
mov
jmp
lret
mov
lock
dec
sbb
into
or
cmp
loope
mov
and
stc
shl
dec
test
inc
pop
dec
sbb
hlt
adcb
or
lock
push
or
roll
and
hlt
scas
jo
int
and
popa
xchg
add
xor
xchg
mov
sbb
cmp
imul
push
sub
fsubrl
test
jbe
ja
mov
dec
pop
popf
push
sbb
or
and
push
sar
sbb
mov
inc
sbb
or
inc
mov
or
in
cwtl
mov
xchg
inc
cwtl
mov
jle
mov
dec
sub
jo
xchg
mov
hlt
lods
std
or
add
jg
adc
sub
xchg
cmp
out
or
push
mov
das
int
mov
jns
hlt
cmp
and
jl
cmp
mov
add
or
push
mov
push
insb
add
das
xchg
xchg
sub
addb
insl
cmp
pop
js
ret
je
out
out
cmp
in
stc
xchg
dec
or
inc
push
addr16
push
adc
mov
test
dec
sub
arpl
gs
enter
mov
xor
mov
mov
hlt
or
push
jne
mov
test
xchg
or
dec
test
out
aas
aad
xchg
insb
pop
rorl
outsb
cmpsl
pop
lods
hlt
lret
mov
fisubs
orl
mov
movl
mov
dec
pop
cmp
mov
jo
repz
push
sub
lahf
mov
or
xchg
add
sbbb
push
sub
cmpps
mov
ljmp
mov
jmp
es
or
mov
mov
mov
jecxz
inc
jg
popf
popf
pop
jecxz
pop
dec
push
dec
aam
jg
data16
mov
sub
ss
sbb
cmp
lret
push
xchg
leave
test
fxch
or
mov
adc
shlb
fxch
inc
in
fsubrl
aad
out
shrl
inc
lods
push
call
inc
repz
sbb
adc
cld
adc
add
lahf
sbb
push
rcr
mov
mov
xor
pop
push
jno
call
jne
dec
push
hlt
bound
mov
lock
push
mov
outsb
push
fisubrl
or
shlb
int3
sbb
and
dec
sbb
imul
lret
dec
dec
hlt
adc
insl
pop
dec
shrb
cmp
add
sub
mov
int
mov
cmc
lcall
call
and
xchg
xor
sbb
sbb
std
clc
roll
jle
inc
lret
test
xor
inc
adc
xor
mov
push
fildl
mov
mov
dec
notl
pop
dec
and
add
xchg
aad
insl
in
mov
xor
or
or
shlb
mov
fisubl
sub
cmpsl
movsl
adc
mov
arpl
fistl
addl
mov
or
inc
scas
inc
xchg
loopne
pop
pop
sub
rcl
int
push
inc
jmp
testb
jbe
sbb
cmpsb
dec
dec
mov
pushf
andl
sub
push
jle
pop
shlb
push
dec
fists
xor
push
mov
inc
je
jns
insb
or
mov
jmp
test
lods
push
pusha
jbe
adc
mov
cmp
dec
push
in
filds
xor
mov
sahf
clc
mov
or
jle
pop
mov
je
mov
mov
lret
push
xor
mov
push
cmp
xorb
sub
dec
stos
mov
mov
mov
or
cmp
outsl
dec
ljmp
enter
inc
xlat
std
cmpsb
jnp
inc
arpl
jns
mov
shlb
inc
or
cmp
ja
subl
push
sti
mov
sbb
cmp
xchg
arpl
push
call
pop
mov
inc
dec
inc
ljmp
pop
fwait
loope
push
cmpsl
je
push
dec
jbe
push
and
adc
pop
push
dec
push
mov
inc
test
gs
cmp
shrl
push
pop
inc
mov
pop
pop
aam
mov
and
sahf
and
xor
rcl
xchg
dec
cmp
les
cs
stos
and
sub
std
sub
adcl
in
pop
lret
mov
pop
mov
ljmp
or
xor
test
cmp
dec
div
enter
dec
enter
stos
or
call
xchg
outsb
jle
pop
jne
in
das
lea
stc
and
lret
adc
loopne
mov
mov
or
add
call
mov
inc
into
pop
adc
sub
adc
cmp
or
stc
movsl
leavew
mov
add
lahf
loopne
cmp
mov
scas
pop
fucomi
push
push
mov
or
add
mov
xchg
xchg
xor
inc
std
lret
pop
fxch
orl
jg
add
push
xor
mov
sub
xchg
jmp
and
ret
das
addb
dec
dec
clc
push
and
sbb
aad
andb
in
dec
push
dec
cs
fs
popf
cmpsl
andb
inc
mov
insb
dec
in
neg
shr
sbb
lods
mov
inc
dec
ja
and
xchg
xlat
int
cli
loopne
cwtl
dec
jle
pusha
or
sub
xor
and
hlt
lret
cmp
inc
call
sarl
lahf
mov
adc
or
mov
in
dec
and
dec
rcrb
and
lret
out
test
dec
push
sub
js
scas
add
in
mov
das
test
ljmp
mov
sub
sub
push
pop
loope
stos
or
jmp
popf
ljmp
lret
lret
sbb
movsb
rclb
and
mov
inc
dec
test
int3
mov
bound
lods
inc
cmp
lret
xcrypt-ecb
cmpsl
dec
stos
inc
lods
arpl
jmp
ljmp
add
jle
sbbl
arpl
dec
sub
repz
dec
sbb
add
xor
cmp
out
inc
or
stos
aam
mov
imul
inc
adc
jle
orb
dec
ljmp
in
push
dec
lret
xchg
int
pop
pop
xchg
or
lret
aaa
fisubrl
stc
mov
xor
cmpsl
push
xchg
jmp
pop
cltd
hlt
xor
push
or
sbb
addl
daa
jb
lret
aaa
or
movsl
das
and
xchg
mov
mov
dec
cltd
fsubs
push
imul
adc
arpl
push
dec
mov
add
jmp
lods
fidivrl
jns
cmp
sbb
dec
sbb
mov
clc
imul
jae
pop
ss
or
mov
test
lods
or
lahf
pop
and
dec
out
nop
xchg
stc
xor
adc
cmp
enter
imul
mov
sub
push
aam
daa
nopl
push
inc
enter
mov
dec
std
sub
in
mov
mov
cmp
sub
test
lret
sbb
or
jmp
mov
jg
jmp
orl
push
ja
xchg
dec
rolb
inc
roll
add
jbe
lret
mov
imul
dec
repz
jnp
arpl
movl
adc
dec
std
push
test
or
shrl
ss
sub
jbe
cmpsl
adc
mov
jecxz
or
add
cld
push
in
hlt
loopne
loopne
andl
xchg
movsl
push
pop
fnsave
push
in
push
call
insb
push
lea
push
xor
scas
xchg
lret
pop
pop
insl
inc
shrl
pop
fldenv
and
int3
idivb
mov
jmp
or
hlt
adc
jo
push
sub
sub
sarl
test
sahf
pushf
adc
jae
inc
lods
xchg
mov
cld
outsl
setns
sub
pop
inc
adc
mov
jmp
in
jo
out
mov
or
inc
dec
hlt
mov
xchg
jno
mov
sbb
inc
int
fbld
push
pop
dec
or
add
lock
pop
add
in
std
add
or
dec
test
enter
or
insb
adc
mov
out
mov
insb
mov
rcr
push
lret
adc
clc
loopne
dec
das
adc
dec
sub
and
pop
push
add
mov
in
adc
jns
repz
pop
push
lret
xchg
jmp
ja
dec
cmp
stos
in
pop
fisubrs
sbb
dec
mov
mov
in
mov
add
inc
cmp
lods
mov
roll
inc
lret
enter
sub
fdivs
jne
sub
in
pop
bound
daa
push
dec
bound
jo
cmpb
filds
test
sbbb
dec
in
lea
cmp
pop
add
nop
add
mov
and
pop
lret
lcall
dec
and
inc
inc
dec
xchg
int3
insl
xor
into
push
inc
out
xor
or
mov
idiv
xchg
cmp
sbb
sahf
dec
cmp
and
mov
add
sti
fs
or
insl
leave
daa
sbb
test
and
ss
mov
lds
xlat
loop
fldlg2
cmp
cmp
pop
ret
sbbb
cld
insb
xchg
sahf
imul
in
nop
repnz
in
push
call
popf
adc
lret
aad
pusha
fldenv
cmpsl
rcrb
xlat
add
loop
ja
dec
and
out
jb
mov
in
xchg
mov
outsb
pop
and
stc
push
adc
push
clc
pop
iret
dec
das
add
xlat
xor
dec
pop
mov
sub
ss
jnp
test
dec
xor
outsl
pop
gs
movsl
outsb
mov
imulb
add
push
push
imul
jne
xchg
or
mov
jnp
pop
lahf
sub
adc
jno
xor
or
push
lods
divb
or
push
jle
push
sub
loope
es
xchg
in
inc
pusha
loopne
aaa
or
stos
sarl
hlt
into
out
push
data16
in
sub
lds
xchg
jmp
pop
add
cltd
enter
ret
dec
pop
pop
xor
jno
out
push
dec
add
das
fwait
enter
dec
or
lret
shl
outsl
cmp
push
pop
lret
movsl
ja
or
and
sub
fimuls
das
dec
dec
sub
ja
ljmp
aaa
adc
sbb
mov
fdivr
out
fs
test
les
jmp
in
sbb
cwtl
sti
lods
lods
sbb
arpl
loop
inc
mov
bound
adc
jmp
xor
push
add
mov
add
mov
je
ret
xchg
sub
divb
push
jns
out
sbb
sub
dec
imul
add
inc
or
jno
or
cs
sbb
mov
jno
push
dec
inc
call
and
jbe
leave
mov
pop
outsb
and
hlt
lea
bnd
test
andl
cmp
push
mov
cmpsl
lret
into
sub
mov
mov
cmpsl
insb
mov
mov
jle
or
leave
fwait
cwtl
adc
test
in
xchg
mov
cmovae
jle
imul
xor
xor
jo
lret
out
or
xor
cltd
and
pop
scas
movl
inc
ds
jle
xor
aas
or
cmp
dec
adc
test
hlt
loopne
mov
sub
pushf
stos
inc
dec
call
jl
or
adc
icebp
nop
cmpsl
out
stos
clc
stos
jmp
hlt
push
xor
mov
call
data16
mov
jo
inc
dec
cmp
inc
xlat
cld
lods
mov
inc
push
int
aam
and
inc
mov
jbe
jmp
mov
test
hlt
aaa
jno
mov
add
std
dec
jno
mov
jg
mov
add
rcll
push
pop
and
mov
mov
testl
cwtl
int3
xor
in
jmp
sbbb
inc
mov
loop
jmp
fadds
push
movsl
sbb
lret
mov
popf
inc
call
sub
dec
out
push
xchg
push
fnstcw
add
sbb
mov
cmpsl
inc
arpl
xchg
xor
fwait
scas
mov
ret
or
dec
sub
in
push
inc
or
push
in
into
or
push
test
das
push
sbb
rcrl
push
mov
or
cmc
lcall
xlat
cmp
ljmp
add
xor
sub
adc
inc
mov
stos
pop
xchg
sub
jge
pop
mov
jns
iret
sub
adcb
sbb
les
and
lds
mov
or
jl
and
sbb
rorl
pop
or
mov
or
repz
pusha
sub
dec
pop
leave
push
adc
call
push
mov
das
daa
push
mov
test
push
scas
cltd
adc
lods
dec
xor
shll
jmp
adc
mov
jbe
shr
sbb
rclb
adcb
jne
outsb
mov
inc
repnz
ret
sbb
push
cmp
fstl
int
loopne
or
pop
adc
add
lea
push
push
int
and
mov
xchg
pop
or
mov
enter
flds
lods
shr
xadd
pop
push
and
mov
push
ret
cmp
testl
xchg
cmpsl
xor
lods
dec
lret
xchg
incl
add
mov
jg
sub
push
hlt
mov
xchg
mov
fldt
lods
mov
bound
xchg
sub
ret
mov
test
fldl
int3
pop
inc
js
mov
adc
sub
push
lds
push
dec
aam
add
out
gs
call
mov
test
popa
hlt
jne
adc
sbb
call
aad
dec
mov
imulb
and
imul
push
jnp
movsl
jo
test
add
in
mov
in
mov
mov
inc
gs
jno
js
sub
jge
test
sub
sub
mov
sbb
mov
scas
dec
dec
add
or
dec
mov
lret
into
movsl
pop
js
jmp
mov
xor
es
push
call
dec
dec
popf
sub
in
and
fisttpl
popa
clc
adc
jle
sub
cmp
sub
cmp
pop
sbb
mov
xchg
mov
lcall
xor
dec
enter
jmp
mov
insl
call
xor
lock
inc
add
mov
cmpsl
in
je
cld
cmp
daa
sub
add
cltd
subl
popa
ds
cmp
or
lods
push
or
mov
cmp
and
fdivl
push
arpl
mov
mov
add
cmc
or
or
testl
push
mov
test
gs
int
cmp
hlt
or
add
push
sbb
or
mov
cmpsl
cmpsl
shl
xor
ljmp
repnz
lret
xor
fistps
daa
stc
ss
mov
or
or
cmp
pop
mov
xor
lods
lods
jb
pop
mov
lret
insl
out
adc
lret
cwtl
lahf
xchg
clc
adc
push
data16
adc
int3
popa
add
xchg
pop
dec
push
pusha
jne
mov
xor
jl
daa
add
dec
inc
cs
pop
xchg
test
jge
cwtl
add
inc
and
hlt
jbe
jmp
stc
push
lret
daa
ficomps
outsl
pop
xor
push
int3
hlt
lods
fucom
inc
insl
push
mov
xor
or
movsl
inc
lret
push
cltd
mov
cmp
push
lret
adc
jecxz
cmp
mov
mov
push
jmp
roll
adc
adc
dec
hlt
subb
pop
dec
push
sub
mov
dec
cmpsb
push
and
sbb
or
hlt
mov
in
xlat
cld
fmull
push
sti
leave
shrl
imul
sub
bound
daa
mov
and
test
and
sbb
sbbb
sub
dec
mov
sub
cmp
pop
rcll
fisttpl
xchg
add
fucomip
arpl
and
pop
jmp
xchg
enter
xchg
mov
bound
mov
pop
call
rorb
sbb
je
adc
std
jb
scas
sahf
lock
pop
mov
lods
and
mov
rcrb
or
lods
mov
jge
jb
shll
or
dec
dec
jbe
addr16
pop
dec
movsl
inc
mov
inc
outsb
and
xchg
mov
pusha
rol
out
lods
inc
addl
inc
jl,pt
xchg
and
mov
push
inc
rorb
and
push
out
stos
inc
aam
push
out
jnp
aad
into
fdivs
xchg
inc
cmp
mov
dec
pop
sub
jno
testl
or
xchg
xchg
jnp
mov
jno,pn
cmp
sub
repnz
jl
mov
das
mov
cmp
sub
mov
dec
mov
push
ret
out
push
push
mov
or
sbb
adc
in
jno
dec
lret
sub
leave
cmpsb
mov
insl
jmp
lret
fnsave
sub
fucomip
fimull
push
nop
test
add
ja
push
mov
dec
mov
idivb
cmp
int3
adc
outsb
int
xor
outsb
fcmovnu
sub
dec
pop
sub
mov
xchg
mov
test
sub
lock
cmp
inc
mov
rol
insb
icebp
cmp
xor
lock
mov
add
lds
lods
dec
cmpsl
mov
inc
pushf
xlat
sti
or
into
xchg
hlt
xor
xchg
outsb
aam
clc
popa
xchg
inc
leave
and
hlt
mov
hlt
xor
adc
push
test
inc
in
pop
in
adc
add
adcl
dec
adc
vmwrite
adcl
out
xorl
lret
outsb
inc
cmp
loope
sub
mov
dec
or
and
pop
dec
sahf
sti
testl
xchg
sbb
and
and
xor
test
mov
xor
jns
aad
pop
cmpsb
add
shrl
push
pop
in
push
jbe
and
dec
ficompl
inc
add
inc
hlt
xor
mov
jg
xchg
or
enter
stc
dec
enter
hlt
mov
push
lcall
cld
movl
xlat
pop
xchg
cmp
push
mov
int
pop
add
mov
add
jecxz
xor
mov
xor
jne
mov
in
faddp
or
pop
sub
mov
repz
pop
add
dec
mov
and
xchg
mov
and
xor
xchg
mov
pop
popf
jne
rorl
mov
and
dec
into
or
mov
dec
mov
fbstp
lcall
inc
jle
hlt
lds
or
inc
shrl
sahf
call
push
xchg
xchg
movsl
cld
fnstcw
sbb
hlt
stos
sub
pop
out
idivl
mov
add
jbe
mov
cmp
inc
dec
bsr
and
out
mov
lcall
push
mov
dec
inc
bound
invd
or
arpl
cli
inc
ljmp
ret
out
adc
icebp
lret
cmp
xlat
das
int3
cmpsl
outsl
orl
enter
jmp
dec
and
and
mov
xchg
js
add
or
sub
jmp
adc
push
test
lret
call
sbb
or
lods
call
leave
pop
and
push
lea
arpl
lods
repz
insl
xorb
test
xor
dec
add
fiadds
adc
or
inc
cltd
out
jno
sub
jbe
int
sbb
push
mov
testl
out
adc
push
loop
sbb
push
out
xor
mov
adc
mov
sbb
add
lock
mov
mov
lret
jmp
mulb
das
popa
jp
adc
test
sbb
xchg
nop
mov
xchg
cmp
pop
dec
outsb
xor
call
shll
js
jl
mov
dec
lret
jb
incl
sbb
cmp
sub
mov
cmpl
xor
jae
inc
mov
sub
out
adc
inc
cmp
jmp
jecxz
mov
and
arpl
mov
sbb
jle
add
test
jl
add
dec
cmp
and
push
or
popa
lret
insb
xor
lahf
mov
mov
loopne
leave
jbe
lcall
mov
hlt
divl
lahf
imul
xchg
jmp
rep
mov
fwait
xlat
loop
fadd
mov
test
or
lret
push
adcb
mov
sti
adc
test
aad
rorb
inc
xchg
cmp
push
shll
hlt
or
int
rcll
lcall
lods
hlt
and
test
call
cmpsl
mov
and
ss
cmc
stc
in
mov
sub
dec
sysenter
xchg
in
rolb
pop
out
xlat
jno
mov
push
mov
outsb
in
inc
sub
push
inc
addr16
cmpl
add
or
cltd
or
add
xchg
stos
inc
push
in
mov
ljmp
ret
test
inc
push
pop
stos
xchg
mov
sub
jo
and
dec
and
dec
mov
and
push
out
cld
leave
push
enter
mov
mov
fildll
aad
nop
xor
xchg
push
dec
pop
push
push
inc
dec
call
sbb
test
cmpsb
push
or
pop
sarl
sub
hlt
scas
xchg
fimuls
pop
out
sub
sub
jmp
dec
in
hlt
lea
stos
fdivl
bound
pop
orl
cli
lret
out
call
sbb
and
imul
xchg
or
stos
or
or
sbb
or
inc
hlt
in
pop
xchg
cmpsl
pop
pusha
cmp
lods
or
pop
adc
jp
fmull
mul
clc
adc
mov
lods
lret
leave
loope
aad
imul
lahf
pop
scas
push
inc
ss
pop
ss
mov
push
adc
push
add
aaa
push
ss
inc
mov
or
int3
pop
pop
add
add
cmpsl
or
dec
leave
arpl
sub
jmp
xor
repnz
jno
adc
add
repz
cs
adc
loopne
jmp
and
aam
out
aad
orl
sbb
out
push
in
adc
cmp
jne
cltd
test
ret
fsubrl
sub
add
mov
jns
sbb
add
inc
pushf
sbb
or
dec
lock
int3
subb
adc
ljmp
pop
dec
mov
jecxz
out
loope,pn
sub
add
aas
mov
cmp
pop
pop
fmull
jmp
push
and
xchg
leave
or
jbe
subb
xchg
lea
xchg
or
addr16
xor
cmpsl
stc
xchg
and
call
sahf
sub
xlat
xor
mov
or
les
pop
dec
enter
ficompl
dec
dec
or
test
jne
sbb
or
aas
adc
dec
xor
sbb
mov
mov
icebp
jg
push
or
jne
sarb
add
pop
and
loopne
sub
aam
jbe
call
xor
clc
mov
cmp
scas
aas
or
cmpsl
scas
jp
xchg
decb
sbb
adc
xor
inc
add
pop
stos
icebp
scas
adc
adc
cmpsb
xlat
out
xchg
jno
clc
out
pop
jge
ljmp
test
mov
out
orb
enter
mov
xor
ja
jb
jbe
ret
mov
jno
dec
lds
adc
sub
decb
fcompl
outsb
sub
in
inc
fdivr
pop
and
dec
bound
imul
lock
xchg
or
mov
jbe
jmp
stc
insl
mov
neg
adc
iret
sarb
mov
lds
pop
lahf
pop
mov
cmp
icebp
dec
and
ss
and
cli
push
xchg
sub
mov
cmp
mov
dec
cli
ljmp
push
push
in
add
xor
sub
mov
xchg
bound
insl
mov
js
std
or
cmp
xor
aaa
bound
in
hlt
add
add
sub
inc
inc
in
insl
dec
int3
cmpsl
or
inc
pop
mov
stos
movlps
or
mov
cltd
fisttps
dec
push
pop
pushf
add
jmp
push
pop
push
mov
pop
fwait
bound
jmp
dec
stos
test
shlb
call
fnsave
andl
inc
stos
icebp
testl
stc
sub
das
or
mov
xchg
test
imul
stos
or
lods
cmp
dec
xor
in
inc
in
lds
add
or
outsb
loope
imul
test
add
xor
add
sub
sarb
cmp
shrb
stos
insb
jns
int
imul
add
sahf
bound
push
mov
dec
lods
andl
inc
repnz
aad
and
xor
hlt
and
mov
aam
dec
repz
ljmp
or
fcmove
orb
int
shrb
js
mov
push
fwait
push
les
and
inc
aaa
sahf
lds
or
dec
dec
sub
sub
xor
aas
es
es
mov
cmpsb
dec
sbb
stos
dec
mov
mov
shlb
test
xor
lock
in
cmp
add
xlat
popa
sbb
xor
or
std
repz
aad
hlt
xchg
dec
sbb
dec
xlat
cmp
call
mov
loopne
jbe
adc
inc
jp
pop
inc
into
out
or
icebp
mov
int
in
and
mov
stos
xchg
daa
add
sarl
aas
inc
push
mov
insb
mov
out
cmp
andb
outsb
mov
push
lcall
sub
or
inc
xlat
cmc
jge
add
adc
xchg
loope
jmp
push
das
jp
jns
push
xchg
out
xchg
xchg
push
xchg
ljmp
inc
jnp
test
js
hlt
outsl
add
cmpb
jmp
mov
or
inc
shrb
and
pushf
aam
jp
push
ss
dec
xlat
rcl
dec
bound
shll
mov
push
or
mov
mov
fstpl
push
ja
iret
push
or
add
aam
mov
subb
and
gs
sahf
loope
mov
push
sub
add
scas
mov
or
cmpl
call
add
mov
scas
inc
and
mov
loope
popf
inc
mov
test
inc
fnstsw
or
jmp
dec
push
jne
loop
cmpsl
in
loopne
jbe
test
jle
sub
cmpsb
cmp
adc
ja
int
or
or
jmp
pop
sbb
pop
fldl
out
xchg
push
push
xchg
cld
mov
inc
or
push
inc
or
in
enter
adc
dec
into
lods
xor
inc
fmulp
dec
mov
dec
mov
add
cli
xchg
shrl
push
sbb
sub
mov
sub
push
jmp
mov
pop
loope
ror
push
xor
mov
loope
ror
adc
or
into
mov
arpl
pop
pop
stos
inc
dec
pop
enter
lods
jle
addr16
shlb
aad
adc
ret
shll
jle
cli
loope
push
imul
aas
fldl
xlat
nop
leave
or
sub
inc
or
sub
int
movsl
fisttpll
ds
sub
xor
mov
add
loope
cmp
add
and
inc
jns
dec
popa
fwait
or
jbe
sub
jmp
scas
pop
fsts
rcrl
dec
sub
scas
fisttps
dec
or
ret
in
or
jp
andl
mov
lds
jo
xor
out
lods
out
or
and
xchg
fldenv
test
lret
adc
jae
xor
imul
pop
int3
jge
insl
mov
jge
push
jle
or
cmpsl
sub
jb
ds
xlat
int
rol
mov
stos
out
inc
push
inc
jg
jp
dec
sbb
ljmp
mov
cmpsl
jle
cmp
stc
enter
xlat
icebp
and
aam
mov
pop
out
lret
inc
and
inc
mov
xchg
out
mov
or
hlt
jl
adc
cmovge
rorb
ljmp
rcrb
xorb
icebp
sbb
xchg
bound
inc
xchg
std
into
adc
jl
ja
inc
mov
jbe
and
popf
sbb
jle
fdivs
cmpsl
push
or
adc
cmp
nop
add
add
ja
jnp
add
adc
and
clc
inc
cmp
pop
enter
push
lahf
test
mov
jg
jae
inc
dec
mov
arpl
mov
andl
or
dec
rol
inc
mov
cmpsb
imul
leave
aad
cmpsl
in
xchg
fistps
pushf
mov
sti
aam
sub
test
inc
in
leave
xchg
push
mov
adc
sub
inc
pop
dec
sub
dec
pop
xchg
pop
push
jl
push
repnz
mov
adc
pop
and
sbb
add
shl
xchg
xchg
mov
inc
mov
inc
cmpl
rcrl
push
adc
out
cwtl
pop
stos
test
pop
push
insb
into
sbb
pop
adc
dec
sahf
hlt
or
sub
lcall
and
leave
sub
cwtl
jmp
adc
lds
and
cmpsb
test
push
or
addr16
dec
testl
push
push
adc
push
add
rcll
dec
inc
or
push
cmp
test
mov
mov
inc
dec
leave
test
jmp
jo
adc
mov
shrl
xchg
leave
add
pop
out
mov
imull
and
dec
cmpsb
adc
pop
inc
jbe
push
sbb
fs
jns
adcb
dec
xor
inc
stos
mov
outsb
arpl
xchg
xchg
sbb
in
push
jmp
sbb
adc
xchg
lea
leave
fnsave
add
inc
stos
mov
add
xchg
fwait
stos
push
rcrl
and
lcall
faddl
mov
fdivrl
pop
xchg
cltd
cmp
fdiv
dec
test
inc
mov
xchg
lods
jp
incb
pop
pop
xchg
jg
xchg
dec
dec
push
mov
pop
pop
and
out
or
mov
mov
xchg
sub
sbbl
pop
shll
or
push
inc
or
into
scas
pop
lock
xchg
cmp
fldenv
outsb
mov
and
push
test
cmpb
jno
adc
dec
jae
jno
lcall
push
xlat
or
pop
shl
or
inc
cmpsb
or
loope
push
mov
add
pop
enter
push
pushf
out
das
rorb
lret
inc
lret
mov
scas
andl
or
pop
rol
sub
sub
stc
adc
sub
dec
pop
mov
daa
inc
jnp
leave
push
jecxz
push
sti
pop
pop
fnstcw
xchg
jnp
pop
mov
mov
hlt
push
out
push
jecxz
or
sub
mov
shll
push
pop
lds
sahf
clc
dec
jb
icebp
ja
enter
add
xorl
dec
scas
add
ss
add
cltd
sub
sub
mov
jb
mov
in
imul
or
or
inc
mov
pop
shl
mov
or
dec
aad
and
add
jecxz
and
pop
sti
mov
ljmp
ror
and
add
pop
dec
hlt
mov
popa
add
sub
enter
push
xchg
xor
adc
push
dec
jp
repz
nop
push
leave
and
or
pop
jmp
pop
jp
adc
dec
push
jmp
push
int
pop
cld
fistps
push
jl
or
flds
push
sbb
pusha
scas
cmp
push
push
loopne
data16
dec
arpl
into
pop
pop
popf
out
aas
out
fsubrl
outsb
dec
imul
out
imul
dec
inc
stc
scas
sbb
sub
adc
out
or
stc
addb
mov
les
mov
stos
sub
sbb
addr16
addb
mov
push
sub
hlt
int3
iret
jge
mov
call
dec
pushf
sbb
hlt
jmp
test
outsl
or
push
add
or
pop
lock
icebp
scas
or
mov
mov
xchg
jae
lods
call
enter
movsl
into
jg
clc
push
cs
jl
or
jno
mov
pop
and
lods
dec
mov
mov
pop
shrb
out
mulb
das
das
mov
outsb
jns
fsubrs
scas
fsubs
sbbl
iret
rcrl
sub
test
xchg
lret
fildl
pusha
roll
imul
pop
mov
cmpsl
mov
call
rcr
mov
cs
clc
scas
fst
lods
inc
inc
clc
out
or
sbb
movsl
pop
mov
fstl
push
mov
shrl
lods
loopne
add
dec
pop
add
dec
xchg
pop
push
lret
hlt
pusha
push
ror
push
popa
repz
arpl
in
imull
lods
adc
bound
mov
add
daa
or
jo
xor
out
repz
sub
mov
mov
arpl
shlb
cmpsl
loope
sub
jl
xchg
fucom
test
pop
bound
and
xor
inc
lods
mov
jecxz
mov
mov
lcall
out
pop
out
hlt
inc
lods
lock
and
jp
add
sub
test
dec
inc
or
pushf
mov
fld
sbb
mov
pusha
add
jmp
shlb
push
jp
out
jae
jp
popf
adcb
jae
insb
adc
cmpsl
popf
movsl
lret
icebp
xor
or
sbb
pop
hlt
cmpsb
mov
mov
insb
sbb
shlb
or
jmp
enter
test
xchg
sbb
adc
pop
push
inc
sbb
enter
leave
or
sti
aad
fmuls
mov
push
inc
add
stos
fwait
ss
out
movsl
cmpsb
push
cmpsb
lods
dec
imul
aam
dec
insb
jno
push
or
adc
mov
mov
push
sub
push
cmp
dec
cmp
leave
shll
outsb
jmp
xchg
enter
add
jl
and
xor
push
andb
out
add
inc
mov
das
add
lret
cmp
dec
add
inc
lret
pop
dec
adc
flds
and
mov
add
sub
or
aas
dec
data16
or
xor
push
mov
pushf
test
fucomip
cmp
dec
pop
xor
cmp
scas
lea
daa
jns
cmp
je
adc
add
add
addr16
cmp
leave
add
cmpb
jle
cmp
add
into
lcall
inc
dec
jp
mov
push
inc
push
outsl
js
aaa
fdivs
xor
inc
or
fwait
je
dec
sub
mov
cmp
bound
xchg
test
lods
fnsave
jl
mov
inc
xlat
jnp
add
inc
xor
pop
outsb
lock
add
lcall
mov
enter
push
push
loopne
sub
sti
add
push
jecxz
or
loop
sbb
dec
xorb
mov
sbb
cli
jmp
or
pop
pop
cli
fstps
out
jmp
sbb
jae
mov
std
dec
adc
sbb
leave
inc
arpl
mov
jle
enter
jo
outsl
mov
xchg
test
lds
or
push
mov
mov
cmp
into
sbb
leave
stc
xor
rcrl
inc
pushf
int
inc
sub
jb
sbb
xchg
inc
int3
add
sbb
dec
fildl
or
mov
push
and
adc
ret
xor
jo
sbb
xchg
int
out
xchg
out
xchg
mov
inc
popa
mov
subl
das
xchg
or
fsubrs
inc
mov
test
sbb
adc
dec
out
xchg
or
push
ljmp
pop
fstpl
push
fldt
add
push
mov
pop
movsb
scas
ret
adc
pop
inc
inc
mov
movsl
jbe
jp,pt
sahf
jle
dec
int3
push
pop
or
pop
inc
call
shl
mov
cmpsl
push
testb
mov
cmpsl
mov
inc
out
cmc
push
adc
mull
les
sub
mov
xchg
shll
xorl
leave
inc
push
pop
sbbb
push
mov
jle
sub
mov
add
sub
mov
mov
xchg
imul
push
inc
xchg
adc
lcall
mov
dec
push
pop
add
jmp
or
lea
cmpsl
pop
add
add
sbb
or
jae
movsb
and
add
movsl
test
int3
addl
dec
popf
add
mov
add
or
mov
ret
sub
push
fsubl
xchg
mov
call
xor
repnz
jl
fcmovne
xor
add
stc
testl
sbb
es
or
pop
sub
enter
mov
or
shll
mov
addr16
xor
cmpsl
dec
jp
cmp
out
test
inc
dec
cmp
loope
fxch
pop
shrl
sub
scas
call
test
inc
inc
add
stos
add
push
lea
insb
sbb
or
int3
andb
mov
push
or
push
or
cvttps2pi
mov
lods
inc
sub
dec
sub
das
leave
andb
cmp
rorl
fcompl
lock
leave
dec
int
adc
loope
xchg
mov
test
cmpsb
adc
mov
pop
lock
addr16
add
cmp
mov
add
das
xchg
imul
sbb
sub
cwtl
xchg
hlt
jno
jge
jae
push
push
xchg
add
sub
mov
prefetch
dec
inc
mov
jle
push
jle
imul
leave
lret
ds
mov
xchg
inc
dec
push
hlt
and
lods
push
insb
xchg
inc
jg
mov
out
or
jbe
mov
xorb
pop
out
sbb
push
insl
in
jo
push
push
add
test
rorb
test
sub
loop
jmp
setae
fwait
dec
add
loope
or
and
ss
xchg
call
out
jp
nop/reserved
das
imul
aas
int3
pop
out
dec
push
mov
sarl
icebp
sbb
dec
xchg
jmp
fisttpll
mov
lret
pop
xchg
jns
dec
jle
mov
xor
pop
jge
aad
pushw
aas
mov
mov
lds
loope
cwtl
lods
ja
xchg
leave
outsl
mov
call
jno
lods
pop
fiadds
cmpsb
dec
popa
out
xor
cmp
mov
mov
jmp
lods
mov
sbbb
sbb
sbb
xor
xor
int3
sbb
dec
sarl
xchg
pop
imul
and
in
ds
jb
lods
jb
xor
or
dec
add
lock
cmp
outsl
sub
push
xchg
jmp
adc
outsb
jmp
or
daa
push
loop
fucomip
hlt
shlb
fnstcw
or
add
movb
jo
cmp
dec
cmpsl
int3
xchg
int3
sbb
sbb
test
add
xor
push
add
adc
aaa
addr16
mov
adc
and
sub
cmp
jnp
cmp
mov
outsb
cmc
adc
ds
or
sbbb
leave
fimull
fwait
lret
cmp
sub
js
xlat
cld
pop
gs
lret
out
in
stos
or
adc
sub
fwait
dec
mov
fisttpll
add
int
push
xchg
fcomps
inc
lds
shll
dec
rcr
sub
into
add
or
sub
in
mov
sub
sub
sub
in
sarl
pop
and
sub
adc
fsubs
mov
loope
pop
ret
xor
jecxz
push
loope
xor
dec
dec
sub
dec
or
or
std
hlt
sub
jno
mov
mov
dec
in
xor
push
fildll
dec
cmpsl
rcll
adc
jnp
adc
arpl
int
lret
ret
insl
pushf
fcmovu
inc
subb
aad
push
jle
pop
pop
test
mov
icebp
jbe
and
insb
add
lods
cmp
dec
dec
dec
or
mov
mov
push
addr16
sub
push
push
enter
pop
lcall
daa
pop
fs
add
psubw
mov
or
movsl
jbe
and
and
aam
inc
xor
lea
sub
and
push
cmp
mov
jmp
clc
lahf
mov
adc
inc
dec
mov
rcrb
jmp
cmp
ds
xchg
add
dec
xchg
loopne
adc
xchg
dec
rorb
dec
pop
cmpsl
repnz
mov
mov
test
cmp
push
jb
call
cmp
push
dec
push
outsb
add
out
and
sub
test
mov
inc
jp
and
jb
sbb
scas
xchg
fld
mov
dec
rol
pop
icebp
inc
cld
popf
push
cmp
adc
lea
push
push
insb
cs
aas
cmp
insl
xor
sub
jmp
xchg
xchg
sbb
push
lahf
test
lds
fcmovnu
repz
cmp
insl
dec
jg
test
mov
loope
repz
cmp
fsubr
es
scas
mov
negb
lods
cmp
popf
popf
std
std
dec
clc
fs
std
aaa
add
rcrl
aas
jge
flds
leave
jo
mov
into
addl
and
mov
and
add
test
sti
cs
jecxz
scas
cmp
xor
ds
sub
mov
or
push
lret
jnp
fmul
dec
mov
pushf
iret
call
shll
push
mov
icebp
outsl
aam
jg
or
adc
mov
push
daa
xor
inc
dec
or
lock
mov
cmp
mov
mov
out
repnz
lea
leave
into
xchg
arpl
in
cmp
inc
sub
push
cmp
fwait
jbe
lea
push
imulb
or
push
add
xchg
jge
pusha
pop
jno
fcom
cmc
mov
in
sbb
xchg
xor
dec
or
pop
mov
in
adc
sbb
cmp
adc
enter
call
pop
ljmp
pop
jle
pop
dec
pop
or
inc
fnsave
push
dec
inc
rorl
push
and
mov
jge
lcall
out
pop
xor
adc
lea
or
popa
inc
mov
movb
mov
sbb
jmp
out
mov
dec
outsb
dec
add
lods
repz
cld
pusha
enter
dec
movsl
hlt
cmpsb
ss
cltd
inc
lret
sahf
jne
mov
push
mov
in
add
push
mov
test
loopne
dec
xchg
into
pop
out
mov
leave
pop
jnp
push
outsb
hlt
push
loope
out
call
xor
sarb
cmp
fdivr
xor
xchg
loopne
jl
push
pop
sub
mov
arpl
das
add
or
push
jge
xor
adc
dec
push
fs
sbb
mov
mov
stc
gs
xor
pop
daa
ja
imul
sub
adc
sub
sti
jle
dec
int3
and
popa
push
iret
pop
orb
subl
jmp
jbe
sub
push
and
sbb
orl
and
xchg
scas
add
sbb
movsl
push
stc
jg
ljmp
adc
lock
mov
push
out
xor
sahf
sbb
mov
pusha
push
bound
push
inc
mov
cmp
test
mov
dec
cvtps2pd
mov
add
jge
push
mov
adc
movsb
add
ds
mov
stc
inc
xlat
cmp
mov
aaa
movl
ljmp
jmp
lar
add
pop
inc
ds
add
sub
inc
outsb
cmp
sbb
imul
or
ds
cmp
fnstenv
mov
pop
sub
enter
nop
dec
pop
pop
pop
jmp
rorl
fldcw
pop
fcmovbe
pop
in
xor
mov
xor
lods
sub
jmp
bound
rcll
xor
movsl
das
imul
sub
xchg
popa
or
cld
test
in
mov
dec
jno
lods
pop
pop
lds
sahf
jae
adc
and
adc
cmp
xor
inc
mov
test
imul
xor
and
xlat
inc
int
pusha
inc
rclb
ret
cmpsl
xor
adc
mov
test
jno
aam
xor
call
cmpsl
xor
push
pop
add
push
mov
movsl
inc
or
mov
call
loopne
inc
addb
sub
inc
lea
fnsave
pusha
mov
pop
ss
outsl
adc
push
cmpsb
sbb
cmp
add
push
loopne
or
shl
aam
ja
mov
test
push
arpl
pop
fs
add
and
enter
repz
jmp
lret
add
mov
loopne
jecxz
or
jne
lods
mov
pop
fimull
imul
jecxz
jle
scas
push
push
sub
lds
popf
push
cmp
icebp
jg
pop
test
call
mov
and
pop
popl
lret
aas
dec
xor
and
jl
sub
jo
adc
loopne
hlt
gs
inc
and
push
dec
pop
xchg
and
cmp
cs
es
xor
or
inc
in
std
hlt
stos
sub
push
push
sbb
push
aam
pusha
and
mov
cwtl
sbb
inc
lahf
mov
cmp
inc
stc
je
ret
sub
push
shr
jle
testb
out
frstor
nop
cmp
popa
rclb
jbe
pushf
inc
shlb
bnd
jl
ret
sbb
dec
mov
stos
int3
jmp
push
sbb
inc
fndisi(8087
dec
mov
pop
lret
movsl
aam
cmpb
push
arpl
mov
sub
xchg
and
and
push
arpl
pop
cmp
jbe
sbb
xor
jl
mov
test
jl
mov
dec
mov
xchg
addl
stos
adc
mov
or
mov
in
mov
cmp
js
xor
pop
scas
mov
dec
bound
in
inc
inc
pop
lret
cs
inc
out
inc
dec
dec
int
jnp
sbb
mov
push
mov
lret
sbb
rolb
sub
xchg
addl
cmp
xor
xor
sub
lods
xchg
adc
add
xor
jns
int3
dec
dec
inc
iret
dec
xchg
mov
jo
or
pop
xchg
mov
insl
loope
std
into
adc
clc
jecxz
rcll
cmp
xchg
sub
xchg
sbbb
cmp
push
or
adcb
push
psubusb
enter
rolb
stc
and
xlat
pusha
icebp
lahf
in
cmpsb
lret
jmp
lret
shrb
xor
push
or
sub
aad
pop
push
and
es
repz
pop
adc
subb
fsubrs
mov
xchg
stos
inc
jecxz
stc
lret
lahf
push
mov
push
xchg
pop
jmp
dec
jbe
or
mov
xor
sub
mov
xchg
xor
jno
es
icebp
xchg
cmc
aas
outsb
inc
mov
xchg
mov
dec
idivb
std
sti
xor
adc
add
imul
lods
aad
dec
or
loopne
imul
es
lods
jge
mov
lods
jb
cmp
cmp
adc
pop
jg
popf
sbb
dec
xor
sub
orl
mov
sbb
inc
lock
xchg
imul
xor
inc
enter
push
addb
test
pop
out
repz
xchg
push
mov
in
dec
sub
xchg
xchg
clc
push
mov
xor
test
xchg
out
jns
call
cli
cmp
ss
dec
mov
fstps
lds
sbb
xchg
outsb
fsubs
ss
push
mov
and
subb
inc
into
in
ret
xor
mov
leave
stc
test
test
call
andb
loop
lods
add
roll
push
out
outsl
push
mov
add
fdivrl
mov
dec
ror
je
sub
dec
dec
sub
cld
jle
xchg
xorb
cmp
jne
data16
scas
xor
adc
sub
xlat
ret
xchg
enter
sbb
mov
push
jmp
inc
xchg
or
adc
inc
enter
test
sti
dec
inc
inc
loop
loopne
mov
dec
inc
jmp
jle
mov
pop
xor
inc
push
hlt
std
push
sbb
add
jae
adc
sub
in
repz
mov
sbb
or
sub
push
dec
xchg
in
ss
push
dec
or
hlt
jmp
xlat
loop
mov
inc
and
add
add
jbe
fsts
adc
and
js
or
mov
and
xchg
push
sbb
hlt
mov
test
adc
das
jae
mov
sbb
mov
jmp
adc
ljmp
mov
sbb
add
outsl
cmp
arpl
shl
push
test
insl
pop
xchg
sub
add
and
push
test
inc
pop
cmp
and
enter
xchg
xchg
orl
lds
and
xchg
xchg
pop
enter
fiadds
ret
dec
ret
inc
arpl
in
data16
jmp
or
in
clc
icebp
adc
push
jmp
mov
add
adc
sti
and
xchg
cwtl
or
insl
in
cs
sbb
or
and
dec
xor
cmp
lock
cwtl
jb
push
mov
sub
push
lret
push
fiadds
and
pop
repz
pop
cwtl
sub
add
mov
repz
out
arpl
dec
sub
pop
and
sbb
test
jecxz
mov
test
shl
add
movsl
and
cmp
addr16
or
add
pop
fwait
or
or
mov
roll
lods
pop
adc
mov
mov
cli
and
mov
jno
rcrb
push
xor
xor
shlb
lods
pop
adc
insb
inc
mov
push
mov
sub
or
dec
incl
and
imul
jo
leave
cld
int3
leave
addr16
and
dec
scas
stc
mov
mov
hlt
adc
cmp
sbb
cltd
leave
sbb
cli
xor
adcb
cmp
cmp
mov
shl
dec
popf
jecxz
xchg
jmp
pop
and
out
push
and
jne
xor
loopne
sahf
sbb
ret
test
dec
inc
sub
mov
and
sub
dec
hlt
adc
cwtl
lret
push
mov
sub
add
dec
hlt
test
imul
and
out
xor
outsl
jmp
lods
or
push
out
cmp
repnz
sbb
mov
mov
ja
sub
leave
dec
dec
jbe
xor
inc
inc
adc
adc
nop
inc
inc
sbb
fildll
sti
or
or
cmp
sub
imul
sbb
jnp
push
aaa
jnp
rolb
push
lret
fimuls
mov
sub
lock
loopne
sbb
fucomi
call
inc
insl
dec
icebp
movsb
cmp
xor
popa
lcall
sub
push
inc
or
shlb
mov
xchg
pop
enter
add
push
xchg
pusha
push
xor
push
jl
push
or
pop
arpl
inc
fnstcw
dec
popa
mov
jne
and
iret
mov
scas
cmp
adc
into
popf
mov
pop
fstps
push
loope
cmp
fsts
out
popa
pop
xchg
adc
enter
jmp
ret
dec
bound
sub
push
outsb
add
dec
stos
fistps
fstl
sbb
or
dec
data16
push
pop
incl
sbbb
mov
push
movsb
loopne
pop
xor
fisttpll
pop
inc
int
loopne
arpl
imul
shrb
xchg
nop
movsl
jns
inc
jbe
mov
pop
dec
cli
xchg
mov
lock
sub
les
xor
xor
cmpsl
xor
rorb
add
lds
outsl
pop
cmp
add
shl
cmc
cs
or
cmp
jl
cmpsb
outsl
pop
shl
push
lods
inc
pusha
rorl
cmp
clc
lock
cmp
ror
sub
repz
inc
lret
cmp
cmpsl
aad
roll
sub
leave
jmp
xor
inc
sbbl
push
enter
cmp
in
fwait
or
sub
imul
jecxz
inc
xor
sub
mov
sbb
push
pop
inc
cmpsb
cmpsl
cmpsl
mov
cwtl
or
mov
pop
push
loopne
sbb
inc
lret
jae
or
push
pushf
mov
movsb
mov
enter
xor
lods
mov
push
movb
mov
inc
into
sar
gs
fistpl
std
add
ss
jle
aas
and
lret
lret
pop
push
mov
jecxz
subl
insl
or
pop
cmp
inc
in
or
sti
fwait
stc
mov
ret
cs
dec
or
leave
pop
icebp
leave
mov
jmp
mov
test
push
and
cld
or
sub
jbe
mov
fdivs
popf
test
lods
add
sub
out
movsb
lods
mov
mov
jge
xorb
mov
pop
cmp
push
sub
sub
lea
call
outsl
push
mov
fildl
es
sahf
mov
jae
gs
jae
adc
test
add
sub
aad
sub
jnp
lret
addr16
inc
adc
or
test
enter
xchg
xor
jns
inc
jecxz
pop
popa
mov
aaa
mov
mov
fisubl
pop
and
mov
jmp
lret
adc
dec
jno
test
and
mov
test
or
push
add
inc
iret
addl
add
dec
jecxz
in
jne
cli
leave
out
jno
add
mov
or
mov
shrl
jecxz
and
or
adc
push
lods
inc
pusha
jnp
pushf
rclb
hlt
or
rcl
push
test
cmp
mov
call
mov
lret
adcl
pusha
out
or
js
dec
xor
jecxz
xor
inc
out
or
insl
cmpsl
shrl
int
sub
inc
sbb
pushf
cmpsl
or
imul
repz
popa
add
pop
test
push
mov
add
shll
pop
unpcklps
mov
mov
movsl
stc
out
pop
xor
inc
loopne
imul
cmp
scas
inc
add
lret
push
sub
fnsave
repz
adc
fs
cli
subl
jp
lods
jnp
fwait
out
add
flds
add
shlb
dec
cs
pusha
call
jge
sbb
icebp
int3
inc
leave
push
inc
out
push
adc
xchg
cwtl
lods
sahf
add
jle
adc
clc
or
dec
les
jnp
clc
rcrb
xor
mov
fstpl
mov
fisubrl
or
clc
mov
test
loopne
xchg
in
pop
int3
adc
jmp
xor
push
and
arpl
xor
stc
push
test
jbe
int3
mov
cli
or
sarl
xchg
or
mov
in
stc
data16
addr16
mulb
sarl
cmp
cmp
mov
addr16
fwait
call
push
pop
sbb
pusha
push
aam
orb
inc
outsl
test
xchg
jnp
jo
ljmp
mov
lret
hlt
dec
stos
mov
xor
dec
cmpsl
push
mov
icebp
mov
mov
sbb
sbb
and
pop
xchg
dec
jecxz
test
lods
and
add
push
shrl
bound
iret
cmp
sbb
cltd
fcmove
pop
push
loopne
shrl
call
fwait
add
insl
and
cmpsb
sbb
add
pop
pop
inc
icebp
sub
aaa
xchg
enter
das
sub
pop
test
sub
cmpb
mov
push
inc
mov
or
mov
insl
xor
les
dec
fst
lret
cmp
mov
pop
insl
xor
orl
sbb
enter
push
dec
jecxz
add
push
or
add
int3
dec
mov
jno
dec
mov
dec
testb
or
adc
mov
fildll
mov
xchg
cmc
xchg
jns
push
faddl
xchg
cmpsl
insl
push
rcr
and
in
sahf
stos
and
ja
in
push
call
xor
or
sub
push
push
and
add
xor
sub
imul
sub
or
add
loopne
lret
mov
mov
dec
xlat
sbb
adc
in
pop
lods
xchg
jg
enter
sub
jbe
in
mov
les
mov
xchg
jmp
sub
inc
pop
push
loope
in
xchg
inc
jp
jl
and
into
mov
out
mov
mov
outsl
addr16
stos
fcmovu
fbstp
mov
addr16
int3
fdivrs
faddl
cmp
insl
mov
inc
jecxz
lahf
mov
movl
dec
insl
bound
out
mov
and
jl
inc
inc
inc
push
inc
mov
popaw
mov
adc
test
mov
or
jae
movsl
cmp
or
add
sub
leave
cmpsl
addb
jecxz
pop
insb
mov
pop
ljmp
mov
sub
outsl
imul
sub
lcall
cs
inc
and
pop
into
fiaddl
clc
test
les
int3
mov
add
ret
rcll
lods
imul
iret
mov
imul
mov
insb
jle
mov
mov
or
loope
in
jno
dec
pop
or
iret
shlb
jmp
cmp
jbe
sub
cmc
enter
jo
sahf
jnp
inc
lret
xor
sub
in
hlt
iret
fnstcw
xchg
aam
push
roll
add
les
cmp
int
dec
aam
pop
pop
fcoml
insl
dec
pop
push
push
xor
and
push
rcr
sub
call
inc
fs
pop
sbb
aam
imul
add
mov
sub
in
sahf
addb
shr
iret
or
outsl
mov
clc
mov
js
mov
dec
cmc
or
add
fbld
jmp
mull
sub
xchg
mov
mov
es
inc
dec
cmp
or
rorb
push
adc
mov
dec
push
and
cmpsl
inc
jb
fwait
lods
out
or
fsub
pusha
xor
jbe
adc
jg
imul
pop
fld
das
in
push
mov
add
dec
push
xchg
sub
mov
jmp
fcom
xchg
xlat
out
or
mov
and
in
sbb
xor
ror
inc
jmp
jnp
jle
cmp
imul
repnz
aad
hlt
mov
inc
fldt
shll
mov
inc
ret
mov
inc
adcb
dec
fcmove
cmp
iret
or
loope
sbb
gs
call
negl
loop
lods
fnstcw
cmp
pop
add
xor
lock
jge
dec
push
cmpsb
jo
dec
push
push
add
jg
ret
jns
ss
imul
ret
daa
sbb
dec
or
add
lods
or
aam
inc
fwait
inc
push
add
nop
pop
cmp
or
gs
das
inc
in
and
jg
sub
mov
test
outsb
mov
and
mov
jle
das
xor
sub
mov
sub
sbb
in
inc
mov
inc
cmp
sbb
inc
in
mov
push
aam
test
jae
sbb
fsubl
mov
in
fxch
xlat
mov
aas
add
push
test
leave
rcrb
jge
xchg
jmp
xor
jmp
rclb
inc
popa
cmp
and
xor
pop
dec
dec
dec
pop
dec
dec
outsl
pop
dec
sub
or
and
nop
mov
int3
dec
ljmp
leave
lods
lret
mov
mov
xor
inc
roll
dec
and
adcb
push
int3
push
pop
inc
daa
movsb
test
xor
jae
call
lret
cs
push
rolb
push
mov
fmull
out
popa
in
adc
bound
inc
dec
and
mov
add
aaa
arpl
push
leave
loop
jb
dec
push
rol
lods
popa
dec
ss
lods
xchg
jg
cmpsl
imul
push
mov
insb
lcall
inc
adcb
pop
mov
mov
cld
add
xchg
jnp
mov
jns
fwait
lds
ds
and
inc
jae
leave
rep
and
add
mov
sub
cmp
xchg
mov
cmp
test
and
push
xor
pop
cmpsl
in
jecxz
adc
rolb
dec
mov
sub
stos
push
adc
stc
in
out
xchg
xchg
add
xor
insb
xor
andb
jle
mov
cltd
gs
pop
push
jg
repz
xorl
xchg
jge
bound
andb
mov
xor
xlat
and
mov
lds
lock
sbb
xor
jmp
jmp
mull
add
xor
fisttpl
fldenv
push
mov
pop
adc
fldl
imul
or
or
scas
inc
pop
shrl
shrd
cmpsb
pusha
je
or
loopne
jns
mov
push
or
pop
inc
lret
inc
movsl
idivb
shll
lcall
or
cmpl
sbbl
arpl
mov
xchg
dec
xor
jnp
mov
test
movsl
push
enter
aaa
int3
mov
mov
loope
hlt
adc
cmp
ror
dec
fmulp
nop
sahf
fcoms
mov
rclb
orb
sub
xlat
push
mov
aad
orl
mov
mov
shlb
or
fildl
push
int3
inc
inc
repz
ffreep
mov
jae
lret
jno
andl
and
cmp
jae
fsts
fimuls
jg
cmp
jnp
shr
push
aad
jle
mov
imul
rolb
movsl
int
push
rcll
insl
inc
dec
dec
xchg
mov
mov
es
inc
lds
leave
inc
or
adc
aaa
push
imul
js
push
cmp
adc
int
pop
stc
inc
fdivl
jmp
jnp
pop
sarb
push
adc
jle
push
movsb
lret
lds
testb
lret
into
push
jp
int
inc
lret
xor
xor
sbb
xlat
or
movsb
fnsave
mov
inc
add
enter
lret
mov
rorb
xor
xor
xchg
xchg
fs
mov
flds
les
xor
pop
fisttpl
repnz
leave
lret
add
call
and
lods
and
insb
int
hlt
cmp
dec
icebp
fnop
mov
vpcmpeqw
insb
imul
inc
shlb
icebp
scas
adc
push
pushl
stos
enter
push
xor
pop
sbb
sti
or
dec
cmp
mov
inc
pop
pop
imul
dec
shrl
je
adc
lock
nop
cltd
push
mov
cmp
cmpsl
inc
call
es
hlt
test
or
in
push
hlt
add
je
jne
adc
into
dec
dec
pop
lahf
push
xchg
fidivl
js
shrl
jmp
mov
xor
pop
mov
mov
inc
mov
sbb
dec
sbb
xor
lcall
out
imul
das
or
rolb
xor
fwait
jle
mov
mov
clc
lahf
fwait
mov
sub
dec
pop
xor
inc
ja
je
sub
andb
add
fwait
out
aaa
repnz
pop
mov
mov
xchg
addr16
test
push
lock
push
sub
clc
loope
push
mov
sub
jbe
xchg
cli
arpl
mov
xchg
fldcw
xchg
sarl
mov
xor
pop
gs
hlt
cmp
pop
dec
or
cmp
sarl
and
push
mov
pop
dec
mov
rcrl
repz
ja
sub
pop
pop
fdivrl
jp
aam
test
orb
pop
clc
dec
jnp
push
hlt
stos
sbb
sub
pop
shlb
hlt
lods
mov
cmpsb
bound
aaa
jbe
dec
push
xlat
mov
cld
rorb
pop
xlat
imul
dec
enter
loopne
add
loopne
lret
dec
mov
cmp
rcll
inc
loopne
fdivrs
bound
push
push
xchg
or
mulb
dec
adc
dec
scas
mov
lret
xlat
sub
dec
fisttpll
out
cmp
pop
add
xchg
jmp
jno
sub
add
mov
out
push
sbb
or
shrb
sub
ret
hlt
dec
and
dec
adcl
mov
add
xor
outsb
and
adc
push
jne
mov
int
enter
negl
or
ret
add
leave
push
cmp
mov
hlt
push
and
cmp
sub
mov
mov
cmp
push
xlat
add
int
leave
jno
test
inc
iret
stc
dec
xchg
ljmp
push
pop
mov
pop
add
push
in
cmpsl
xchg
or
popl
addr16
sbb
pop
sbb
int
lret
pop
aas
xchg
inc
xlat
pop
repz
adc
push
or
push
add
or
jbe
lods
inc
push
call
add
hlt
or
jle
cmp
rorl
lods
lret
out
xchg
inc
sub
add
pop
pop
loopne
lret
cmp
call
push
jmp
out
dec
movzwl
dec
xlat
jle
push
mov
adc
adcl
je,pn
jge
adc
xlat
push
pop
icebp
loop
dec
mov
and
pop
in
or
std
daa
add
xchg
xor
imul
fadds
add
js
call
lock
out
xchg
inc
lods
add
push
mov
sub
sar
xor
jecxz
sarb
dec
inc
jecxz
add
test
les
inc
mov
add
test
fcomps
dec
int3
shrl
dec
sbb
push
add
aaa
int3
push
xchg
adc
aad
add
aaa
arpl
lea
icebp
out
cmp
adc
mov
cmp
loop
or
stos
out
jmp
dec
ja
sub
leave
cmpsl
xchg
loopne
dec
pop
lret
add
addr16
stos
scas
or
test
loop
clc
xor
mov
cmpsb
mov
in
mov
cmp
sahf
pop
mov
pop
jge
ficoml
pop
fistps
cli
inc
xlat
imul
ja
in
cmp
jle
jno
fwait
cmpsl
dec
mov
inc
inc
aad
mov
push
dec
testb
negb
push
outsb
insb
sbb
sub
adc
ret
add
loop
cs
cmp
or
or
fsubrl
sub
xchg
lret
iret
or
rcr
mov
xchg
insl
inc
xchg
xor
push
jmp
inc
mov
mov
pop
nop
sti
in
pop
push
add
out
xor
cmpsb
xchg
and
push
ss
add
shrl
int3
out
loope
jl
and
mov
cmp
rorl
fsubrs
pop
xor
push
mov
cmp
mov
inc
mov
jge
sub
mov
inc
adc
xchg
ficoms
cmp
test
scas
imul
int3
jae
outsb
dec
xchg
inc
mov
rorl
push
dec
dec
inc
adcb
sub
mov
dec
test
stc
in
sbb
inc
cmpsb
int
je
push
decl
scas
cmp
out
adc
mov
push
in
es
or
and
mov
push
leave
ljmp
inc
aam
call
pop
enter
in
mov
idiv
inc
stos
mov
pop
test
ljmp
inc
sub
xor
scas
add
out
sti
fdiv
clc
pop
cmp
into
fdivrl
out
jg
int
push
mov
call
sub
inc
int
fidivrs
nop
sbb
rcrl
ret
adc
sub
xor
jecxz
push
lds
mov
xchg
out
rolb
jno
adc
adc
inc
inc
loop
in
stos
inc
shr
xor
pushf
sbb
mov
hlt
insl
push
loopne
sbb
and
repz
rorl
inc
push
push
inc
mov
cwtl
sbb
sub
sub
sub
repz
inc
adc
cmc
jg
mov
insl
dec
xchg
imul
aaa
dec
jb
aaa
addr16
fildl
push
mov
ror
mov
hlt
push
push
sarl
xchg
fs
insl
cli
subl
dec
adc
or
stos
xchg
stc
stos
nop
and
cmp
jp
outsl
gs
rol
fistpl
hlt
inc
out
leave
pop
fstps
inc
push
lods
sub
add
cmpsl
jb
inc
icebp
hlt
add
add
and
out
hlt
stos
mov
cmpsl
subl
mov
dec
ja
lcall
adc
aaa
mov
lods
orb
jo
cmpsl
pop
add
or
lods
adc
inc
push
int
sub
mov
fistpl
int
mov
dec
jmp
sahf
enter
dec
cmp
jle
or
das
or
int3
lea
shll
push
sub
push
dec
or
cmp
icebp
or
cmp
mov
cmp
sbb
loop
push
shr
leave
inc
fldcw
popa
add
lcall
inc
adc
stos
pop
jno
adcb
mov
lods
or
cmpsl
xchg
mov
jne
adc
addr16
or
cmpsl
jae
ljmp
out
sub
push
inc
dec
inc
test
insb
shll
popa
fdivrs
stos
jecxz
and
push
dec
adc
mov
nop
iret
jecxz
jae
fwait
arpl
mov
and
leave
movsb
scas
pop
pop
mov
popf
imul
push
sbb
fsts
ficoml
mov
lds
sbb
push
mov
call
insl
orl
les
arpl
push
sbb
arpl
int
sysexit
dec
daa
in
sbb
enter
xorb
xchg
scas
fidivl
add
sbb
and
test
sbb
mov
mov
pop
scas
pop
dec
xchg
xchg
addr16
xor
lods
dec
cmp
test
js
hlt
or
mov
sub
xchg
cld
into
hlt
lcall
fidivrs
mov
in
fucomp
test
int3
out
pop
mov
inc
xor
lods
jl
sbb
sub
insb
push
ds
rcrl
jnp
hlt
aaa
mov
dec
xchg
xor
outsb
dec
dec
movsl
cmp
dec
pop
inc
jnp
inc
lds
and
mov
push
mov
cli
adc
iret
pop
mov
mov
icebp
insb
jae
mov
push
fdivrs
mov
imul
xchg
xor
in
ljmp
or
andl
lea
xor
push
pop
pusha
mov
pop
or
cmp
lret
jne
sahf
out
loop
sbb
lret
stos
ja
cmp
cmc
jbe
dec
data16
sbb
arpl
xchg
mov
hlt
mov
aas
pop
lods
lret
mov
sbbb
std
rorb
jne
insl
adc
add
lret
dec
dec
mov
imul
psraw
std
sbb
pop
hlt
jmp
inc
pop
xchg
scas
cvttps2pi
dec
and
ret
shlb
ljmp
and
jo
cmp
cltd
push
fstps
out
test
dec
cli
pop
pop
mov
stos
movsb
fldenv
imul
lock
rep
sbb
mov
xor
adc
and
ret
xchg
out
mov
jle
movsb
jl
test
movb
fisubrl
popa
das
fsubrl
imul
das
jno
mov
or
fiaddl
in
xchg
sti
mov
push
in
pop
test
push
arpl
std
or
push
imul
jb
inc
jns
es
test
cli
outsb
push
sarb
inc
jnp
mov
orb
enter
addr16
das
loop
lret
in
imulb
xchg
push
clc
cmp
fwait
push
mov
jl
stc
addr16
or
stc
push
in
push
or
int
cs
or
mov
xchg
inc
jp
jecxz
aad
pop
mov
adc
sbb
sbb
or
xor
sbb
enter
sbbl
ror
inc
mov
out
nop
inc
out
js
lds
aam
push
add
adc
lret
pop
push
mov
cld
xchg
cmc
mov
xlat
mov
xor
sub
push
and
cmpsb
lret
jle
push
xlat
hlt
in
nop
inc
sub
daa
pop
enter
and
outsl
bound
and
push
fs
dec
std
call
jp
mov
push
testb
aad
dec
lods
cmp
push
xchg
aam
xchg
lods
pop
jb
out
and
pushf
pusha
stos
or
xchg
inc
mov
push
insb
or
dec
mov
or
lods
repnz
xorl
mov
pop
jmp
xchg
inc
lea
fcmovu
leave
lods
lret
scas
gs
lret
ret
push
cmp
add
jbe
cmc
addl
push
xor
lods
sub
or
inc
fcoms
lods
inc
shll
cmp
jmp
adc
pop
in
movsl
and
lods
aad
out
loop
cld
pop
ljmp
dec
adc
dec
sub
in
inc
cmp
or
pop
out
lret
pop
enter
adc
xor
inc
adc
std
mov
aam
jge
and
insb
adcl
sub
jecxz
add
insl
jae
jne
mov
inc
sub
pop
or
mov
or
or
push
jmp
testl
rcrb
pop
fsubrp
clc
iret
and
push
in
leave
pop
add
dec
inc
js
cltd
loop
lahf
inc
int3
dec
and
ror
div
scas
dec
movsb
adc
lret
bound
sub
jbe
int
aad
cmp
inc
rcll
stos
inc
xor
push
ret
push
inc
hlt
shll
xor
jge
sbb
mov
shll
xchg
fcomps
sbb
int3
in
scas
jle
lods
dec
xchg
lds
mov
mov
or
xor
imull
cmp
mov
cmpsl
insl
or
mov
enter
xorl
sub
mov
test
test
mov
xchg
data16
cmp
xor
fs
push
sub
push
cmp
arpl
dec
daa
pop
test
movsb
adc
popf
push
add
add
add
not
clc
int
mov
cld
pusha
in
mov
pushfw
xchg
mov
add
es
arpl
xchg
mov
mov
dec
lds
fldenv
add
hlt
insl
pop
and
mov
dec
aaa
mov
lock
push
addr16
shl
mov
inc
xorb
sbb
push
adc
xchg
mov
jbe
scas
insl
inc
lods
pop
pop
sub
sub
dec
cmp
popf
cwtl
imul
inc
adc
lretw
adc
dec
insl
aad
mov
lahf
into
jmp
decb
ror
mov
inc
cmp
popa
mov
clc
cmc
ror
sub
arpl
and
dec
dec
imul
mov
mov
dec
dec
cmpsl
push
push
push
add
fldenv
mov
in
push
enter
loopne
std
jp
fcomip
dec
push
sub
xchg
or
push
lret
hlt
orl
fdiv
jo
pop
negl
shl
scas
cmp
lods
cmpsb
dec
popf
enter
lods
mov
movsb
es
clc
push
stos
inc
jecxz
and
pop
dec
pop
cld
pop
das
and
pop
imul
aad
mov
jne
rclb
xor
xor
push
shrl
scas
push
das
icebp
push
fucomp
push
or
sub
and
ss
jmp
sbb
jp
push
test
aam
js
hlt
dec
je
cmp
dec
shr
push
add
pop
jbe
andl
inc
push
or
loop
jge
sub
es
jmp
push
ljmp
jae
icebp
lcall
or
jno
gs
sub
or
ljmp
mov
mov
dec
and
rcrb
cmp
push
xor
xlat
test
mov
push
rcrl
sbb
mov
lock
inc
push
out
mov
sub
cmpsl
iret
jmp
and
ljmp
pop
mov
cmp
pop
add
ljmp
cmpsl
sub
faddl
xor
aad
jae
pop
lods
rcll
adc
jbe
cmp
bound
flds
das
mov
push
adc
or
add
xchg
ss
imul
xchg
sub
push
mov
in
and
mov
dec
mov
ja
adc
lds
push
dec
push
jg
or
jae
mov
xor
lods
shl
push
ljmp
jmp
sub
stos
test
leave
stc
mov
pop
jp
movl
push
lahf
gs
sti
pop
or
pop
fldenv
repz
outsb
lret
test
lret
inc
jmp
arpl
cmp
jnp
popf
jmp
mov
xor
pop
sub
add
fwait
push
out
icebp
sbb
dec
hlt
add
add
movsl
cmp
in
sub
insb
inc
cmp
mov
fsub
rolb
into
or
loope
inc
mov
jno
xchg
std
mov
mov
mov
call
cmp
jnp
test
test
jne
add
loop
adc
js
int
push
xchg
ret
cmp
pop
jmp
je
dec
lds
sbb
ljmp
mov
out
aad
outsb
and
mov
xchg
aad
leave
enter
jns
leave
and
fiaddl
in
mov
inc
call
ljmp
cs
sahf
dec
lcall
loope
dec
lods
pop
push
cmpsl
sbb
arpl
ljmp
xchg
push
lret
call
ljmp
fucomi
jno
sub
rcrl
or
sub
scas
mov
jbe
xchg
push
inc
inc
and
push
push
outsl
insb
lret
xor
arpl
and
dec
ja
loopne
ror
fsubrp
jns
or
out
fists
xor
jbe
push
clc
cwtl
and
push
push
andl
add
mov
sarb
loop
xchg
fldpi
xchg
mov
call
push
cld
mov
ss
jmp
dec
stc
ljmp
sub
dec
stc
nop
dec
lcall
cmp
dec
mov
cld
fldt
or
leave
fmull
dec
push
fs
shlb
roll
leave
flds
lret
insl
inc
or
mov
in
shrb
or
idivl
outsb
xlat
inc
cmp
ficomps
sub
dec
andl
lret
add
add
jmp
and
imul
mov
add
adc
rol
inc
sbb
shrb
fsub
jmp
movsb
dec
sub
push
leave
sbb
jecxz
sub
loope
dec
jle
dec
andl
dec
js
leave
sbb
lds
pop
fldenv
in
inc
sbb
cmpsb
or
sub
inc
sub
mov
push
in
stos
jo
pop
sub
mov
pushf
adc
push
roll
daa
dec
dec
movsl
mov
cs
out
sar
push
inc
nop
pop
adc
dec
pushf
in
repz
sub
in
scas
popf
pop
fwait
scas
or
in
sub
push
sbb
sub
insb
insb
sbb
fwait
icebp
xor
cs
popl
fnstenv
ret
sub
cmp
sarl
push
add
adc
xchg
fimull
push
clc
or
iret
imul
and
mov
mov
pushf
ja
sahf
push
lahf
mov
call
cmp
inc
pop
or
and
mov
sbb
jmp
in
ret
aam
cs
leave
jg
lret
es
push
mov
lods
or
jge
sub
mov
mov
scas
jbe
mov
enter
pop
mov
dec
sub
inc
jecxz
or
dec
xchg
pop
out
push
xchg
andl
lods
hlt
test
aas
int3
and
jmp
imul
xchg
int3
pop
add
lret
icebp
std
mov
inc
add
mov
sbb
lahf
cmp
adc
mov
imul
inc
das
sub
dec
mov
inc
add
ret
sub
hlt
mov
rorb
mov
call
cmp
popf
jnp
inc
or
jmp
add
pop
mov
push
xlat
add
sti
hlt
cmp
jge
sbb
or
mov
ljmp
fidivrl
and
xchg
test
rcrl
cmpl
jg
lods
jns
sub
sub
jmp
pop
jge
pop
mov
inc
jp
push
dec
dec
imul
ljmp
mov
cwtl
das
mov
fmuls
into
ljmp
and
icebp
outsb
pop
cli
cmp
fwait
push
clc
push
push
add
addr16
jge
xor
imul
add
jle
in
addb
lea
sahf
mov
xchg
dec
lods
and
push
jle
add
outsl
pop
pushf
adc
sbb
sub
pop
sub
popa
mov
dec
sbb
sahf
fnstcw
in
adc
mov
bound
bound
push
test
fsubp
xor
ret
adc
sti
adc
or
les
sub
push
sbb
push
and
ljmp
push
xchg
add
ja
in
pusha
or
in
test
ret
sbb
das
pop
inc
push
stc
out
cmp
mov
dec
mov
je
dec
loopne
and
fstp
je
sbbl
pop
fdivrs
push
sub
xorl
les
mov
out
clc
in
and
inc
rorb
pop
push
xlat
sub
sarl
xchg
jae
mov
insb
in
in
aad
xchg
test
xor
cmp
mov
loop
mov
and
sbb
sbb
bound
add
pop
les
mov
mov
scas
push
je
jle
pop
cmpsl
sub
and
ss
mov
and
in
fildll
inc
fs
jno
hlt
stos
xchg
fisttpl
pop
rcll
addl
add
addb
jbe
and
jb
rcll
scas
ret
push
iret
sub
xcrypt-ecb
cmpsl
mov
mov
mov
cmp
xor
sub
cmp
push
mov
fcmovu
mov
jecxz
jno
je
daa
out
jno
cld
insl
jb
stos
je
xchg
aas
dec
jg
mov
push
inc
push
lock
pop
inc
lods
inc
fwait
xor
insl
pop
movb
xlat
mov
insb
rorb
adcb
inc
add
add
jno
call
fcompl
fmull
mov
call
dec
popf
out
mov
mov
inc
xor
out
adc
dec
mov
lds
lret
call
stc
int3
addr16
mov
insl
daa
outsl
sbb
aad
jmp
mov
fwait
push
loop
xchg
rcrl
loop
jp
cmp
lret
dec
addr16
pop
je
inc
jl
mov
dec
mov
inc
loop
lea
cmpsl
mov
add
std
fldenv
ljmp
lret
sbb
enter
dec
adc
test
cs
pop
dec
dec
and
pusha
loope
mov
push
dec
mov
sub
inc
inc
dec
cmpsl
dec
popf
push
add
call
popf
mov
addb
icebp
aad
hlt
add
jp
xchg
gs
push
sbb
in
jmp
lret
adc
xchg
lods
xchg
push
mov
loopne
ror
xor
pop
or
testl
xchg
add
icebp
out
jo
loope
cmp
int3
xor
or
dec
mov
sysexit
inc
sarl
pop
mov
cs
mov
pcmpeqb
inc
imul
lods
mov
or
jo
lret
adc
scas
rcl
mov
sub
loope
ss
pop
or
aas
pop
arpl
adc
pop
rcrb
inc
push
push
dec
xor
xchg
jle
test
fwait
stc
mov
sbb
mov
pop
and
mov
xchg
clc
mov
mov
fs
add
orb
fimull
pop
push
pop
push
adc
add
ret
and
or
stos
sub
cld
cmpsl
pop
and
dec
dec
fdivr
sbb
add
imul
dec
xor
cmp
sub
lods
ret
data16
sub
js
push
cmp
jb
arpl
sub
jne
insl
int
inc
xor
mov
mull
int3
clc
movb
inc
push
xor
jmp
addr16
out
imul
mov
mov
or
sub
cmp
jge
adc
test
lret
lds
test
sbb
ja
orb
jno
dec
sub
in
cmp
push
sarb
dec
cwtl
jne
cli
cmp
fdivp
insb
fwait
ret
lret
sahf
mov
xchg
jae
push
xchg
jmp
cs
add
bound
lret
sbb
cmpl
or
push
dec
lods
scas
inc
rcr
pop
add
inc
ret
fldcw
sub
or
mov
pusha
xor
js
pushf
pop
fdivrs
push
dec
loope
pop
sub
jle
xor
mov
push
test
out
xchg
scas
bound
inc
insb
xchg
bound
pop
dec
lahf
cld
fsts
cmp
sbb
xor
dec
andb
lds
faddl
push
jne
adc
mov
scas
js
sbb
insb
pop
cmp
xorb
int
mov
inc
add
push
jae
mov
lods
inc
or
jae
dec
jle
dec
jbe
testb
fbstp
aam
imul
out
ja
out
or
adc
add
arpl
pusha
ja
lret
cmp
inc
fs
loop
sbb
xchg
or
lds
sar
dec
mov
mov
pop
je
or
loop
and
daa
mov
add
lods
jmp
jecxz
jmp
cmp
loop
or
test
sarl
lea
jae
loop
ret
mov
mov
inc
mov
lret
bound
add
push
pop
adc
inc
push
push
add
sahf
movsl
mov
sahf
fbld
sub
add
rcll
in
push
adc
cmc
cs
testb
es
inc
push
out
or
stos
leave
inc
dec
cmp
jbe
inc
pop
insl
and
sbb
push
icebp
push
out
mov
subl
mov
sarl
in
cmpsl
out
xorb
mov
inc
cmc
xchg
add
mov
jecxz
sbb
cli
push
stc
jb
mov
xor
mov
inc
imull
or
adc
xchg
dec
out
mov
xchg
jl
cs
sti
mov
stos
stos
cmp
push
push
test
ret
outsl
lds
fldcw
jecxz
out
cmpsl
imul
std
inc
loope
call
xor
xchg
mov
fdivrl
dec
stc
cwtl
or
xchg
hlt
js
in
jmp
cs
sub
aad
ljmp
or
rol
push
fisubrl
pop
xor
mov
pop
sub
dec
mov
jle
in
push
loope
out
mov
imul
jae
leave
pop
cmpsl
stc
out
xchg
or
hlt
iret
xchg
pusha
iret
jp
sub
jecxz
shl
pusha
icebp
sub
loopne
cltd
cmp
hlt
aad
jbe
xchg
sbb
mov
popf
out
add
inc
mov
cmp
or
adc
jp
ss
testl
sbb
lods
insb
push
xor
jb
out
sub
je
int3
es
mov
fcoml
sbb
dec
mov
mov
xchg
push
rcrb
adc
inc
enter
aam
sar
insl
inc
adc
sbb
imul
sub
mov
sub
or
xchg
leave
imul
dec
jmp
sbb
cmpl
adc
lret
and
das
cltd
insb
xor
lea
sub
xchg
dec
imul
sub
mov
adc
adc
pushf
aaa
push
dec
and
flds
icebp
cmpsl
fildll
sub
lods
mov
adc
jbe
fdiv
jno
adc
ret
jl
sbb
inc
andb
pop
xchg
enter
bound
outsb
cmp
mov
dec
lcall
iret
in
push
test
xorb
xchg
lods
sub
jo
lods
inc
rclb
andb
scas
ret
out
xlat
add
push
out
mov
or
ret
jbe
dec
jge
lea
hlt
shrl
mov
mov
test
adcl
xor
scas
fidivs
mov
jno
ljmp
roll
sub
push
mov
add
xchg
cmp
cltd
inc
inc
push
mov
inc
sub
xchg
push
lods
and
cmp
test
add
adc
push
sbbb
mov
call
push
add
lea
xchg
sar
or
inc
and
jno
dec
sbb
sahf
bound
pop
cwtl
inc
xor
add
and
aaa
out
cmp
into
imul
xor
inc
dec
mov
leave
dec
push
mov
sub
iret
sbb
and
imul
push
pop
subb
xor
mov
es
aaa
and
xchg
sbb
xchg
nop
insl
imul
lret
sub
inc
std
mov
stc
sarl
jbe
popf
mov
cwtl
adc
lahf
mov
int3
mov
sbb
add
xorl
jp
jmp
push
mov
mov
xchg
add
jno
sub
loop
mov
call
out
mov
mov
jo
mov
arpl
xchg
loopne
rcr
xorb
addl
fistpll
pusha
push
and
popf
pop
lods
xchg
jl
vmovd
sub
mov
mov
movsl
sbb
fdivrs
jne
sub
or
fisubrl
fstps
icebp
push
ret
fnstcw
call
push
xchg
mov
mov
fucomi
sub
movl
ds
loopne
shlb
and
xor
imul
xchg
sub
lods
push
push
pop
xor
or
out
in
mov
hlt
movl
sub
pusha
mov
mov
cmp
rcrb
lds
inc
add
pushf
popa
js
int3
loope
in
addr16
fdivrp
mov
inc
out
iret
push
das
dec
mov
shl
xchg
mov
inc
loopne
xor
mov
or
mov
or
lods
push
ds
test
sbb
inc
aad
push
xchg
or
and
xor
cmp
out
fs
inc
inc
imul
iret
add
push
lods
cmp
lds
push
sub
imul
cmpsl
xorb
sbb
mov
lods
jg
cmp
sbb
in
or
xchg
daa
je
cmpsl
lea
jmp
cmc
jmp
clc
push
imul
add
xor
push
mov
sub
adc
sbb
loop
cmp
fcoms
lret
mov
sub
mov
lahf
leave
jecxz
inc
popf
into
ss
out
add
pop
inc
add
mov
mov
inc
mov
les
adc
scas
mov
pop
pop
sub
je
std
int
arpl
and
add
cmc
and
add
cmp
cmp
icebp
pop
pop
int3
aam
xchg
pop
mov
insb
scas
lds
mov
mov
lret
or
stos
out
jle
xchg
scas
pop
cmp
in
mov
mov
and
aaa
data16
les
add
rcl
fs
push
push
xchg
jnp
cli
jo
or
lret
mov
cs
cmp
and
shl
xlat
push
or
dec
clc
inc
ret
push
push
aam
dec
insl
push
xor
lret
dec
lcall
jecxz
int
aas
sub
into
ljmp
das
add
cmc
imul
loopne
sbb
arpl
and
lret
loopne
jle
ret
outsb
xlat
jno
jecxz
ss
out
stos
cmp
and
jg
insl
loop
ljmp
pop
movsb
insb
mov
insl
dec
lcall
push
pop
lea
mov
inc
arpl
aad
leave
mov
fsubrl
dec
cmp
mov
mov
clc
bound
pop
int
cltd
sbb
jbe
mov
jae
shll
movsl
mov
pop
data16
lock
aas
filds
pop
arpl
push
adc
mov
int
dec
pop
stos
mov
add
push
inc
cmp
sub
push
stc
xchg
or
leave
hlt
adc
adc
and
iret
jp
aam
mov
jle
xchg
xchg
std
sbb
cmp
and
pop
mov
das
and
adc
pop
mov
je
mov
xor
xchg
mov
dec
addl
pop
lahf
dec
mov
rol
imul
jmp
stos
ret
loopne
mov
data16
dec
lods
cmp
int
or
push
xor
add
add
jge
sbb
leave
inc
in
jno
mov
xchg
fldcw
imul
cwtl
jp
hlt
dec
jecxz
xchg
nop
outsl
jmp
outsl
jne
inc
mov
ret
in
mov
push
dec
jno
icebp
pop
xchg
pop
repnz
arpl
or
push
cs
add
inc
sbb
pop
mov
in
mov
mov
enter
xchg
and
mov
cmp
pop
and
xor
inc
xchg
mov
mov
mov
out
pop
lods
lods
test
push
mov
insl
inc
ret
inc
and
stos
dec
xchg
movsb
das
pop
les
cmp
or
sar
popa
push
pushf
sbbb
ja
shlb
test
push
sub
sbb
jle
fisttps
and
sarl
lret
scas
mov
xor
loope
and
mov
dec
add
or
ss
add
lret
mov
sub
and
xlat
or
call
jle
mov
fs
xchg
push
into
and
add
and
xor
rcll
or
and
push
jle
and
popa
hlt
loopne
fmuls
add
inc
lret
stc
xchg
push
or
mov
fwait
cmp
fmuls
shll
sarl
pop
and
rcll
pop
pushf
xor
mov
pop
inc
and
inc
pop
je
in
xchg
mov
inc
out
cmpsl
or
or
xor
and
mov
iret
inc
dec
adc
imul
mov
sub
rolb
out
insb
enter
push
cmp
pop
xchg
pop
inc
bound
cmp
pop
mov
leave
xor
jbe
lea
test
sbb
fisttps
scas
test
and
jmp
inc
cmp
das
movsl
dec
repnz
or
cmpsb
fdivrl
lock
call
cmp
mov
call
mov
jo
or
push
push
push
jle
ret
sub
mov
outsl
in
cltd
sahf
jmp
incl
sub
cs
bound
imul
jne
mov
ljmp
pop
orb
in
push
jmp
mov
scas
mov
rclb
mov
inc
int3
stos
sub
jmp
nop
hlt
test
mov
jg
iret
cmpsb
xlat
loopne
mov
das
push
cmp
mov
and
inc
adc
jecxz
test
dec
shlb
mov
dec
and
into
and
sub
in
ja,pn
mov
daa
xchg
bound
icebp
test
or
pop
gs
test
push
xchg
sbb
dec
jne
mov
pusha
push
sub
lods
ja
in
push
fwait
adcb
cmp
inc
push
lock
roll
call
push
sub
or
int
dec
dec
pop
mov
xchg
push
sbb
or
lret
int
invd
dec
pop
icebp
pop
push
out
dec
stos
dec
xchg
or
dec
sbb
push
inc
icebp
add
pop
mov
add
hlt
sbb
jl
mov
cld
repz
sub
inc
xchg
popf
mov
jae
add
jle
in
mov
lret
jp
xchg
sbb
enter
cmp
dec
xor
sub
pushf
adc
fimull
xor
cmp
or
lret
mov
push
jne
pop
add
inc
rcrl
pop
clc
cmc
or
lret
dec
xlat
xor
cli
mov
mov
prefetch
or
mov
xchg
aam
and
sub
lahf
lods
popa
dec
fnstcw
pop
jl
xchg
lret
mov
sbb
int3
dec
test
loop
dec
inc
fistl
mov
adc
int
dec
xor
jl
lcall
lahf
inc
fs
aas
loop
add
mov
adc
push
int
sahf
imul
mov
or
mov
xor
and
sub
addr16
xor
inc
fsubrl
and
mov
cmp
jae
xchg
repz
testl
xchg
sub
roll
or
ss
scas
sub
mov
adc
jl
mov
jno
movnti
dec
mov
sarl
loope
inc
out
aad
xor
lret
mov
arpl
adc
clc
mov
pop
cmp
mov
jo
mov
push
fldt
add
mov
push
orb
cs
jae
push
xchg
xchg
call
leave
cmp
sahf
inc
mov
mov
add
cld
lahf
push
cli
icebp
stos
stos
and
sbb
loopne
pop
push
jmp
sbb
or
fistpll
movq
test
add
jb
loopne
sbb
out
add
rcrb
sub
add
add
dec
add
pop
push
jmp
out
push
sub
jmp
or
add
lret
lret
bnd
mov
xor
call
test
mov
fistps
outsl
jb
jl
in
sbb
xor
call
out
or
fdivs
js
add
pop
mov
arpl
xor
rol
out
xchg
scas
fdivs
fwait
adc
cmpb
cltd
dec
repz
data16
pop
arpl
or
jno
or
xchg
mov
mov
cwtl
xchg
mov
pop
stc
fnsave
scas
xchg
in
pop
xchg
cmpsl
test
jecxz
mov
push
xchg
bound
mov
bound
jecxz
test
pop
adc
cmp
push
pop
out
push
imul
push
add
push
or
mov
aas
repz
mov
xor
lock
sub
mov
and
in
xor
or
outsb
dec
xor
add
xor
aas
gs
std
or
dec
in
pop
mov
pop
mov
sbb
push
in
stos
ret
dec
fwait
scas
fwait
pop
insl
movsb
fwait
mov
in
scas
xlat
fisttpll
sbb
adc
and
push
adc
mov
fwait
pop
or
repz
and
or
loop
insb
jmp
inc
xor
add
jp
cli
xchg
xchg
out
dec
or
mov
in
mov
inc
add
inc
jl
push
mov
arpl
cs
jmp
jl
outsb
jne
shll
sbb
pop
pop
push
pop
mov
scas
push
test
push
xlat
in
jle
mov
mov
sbb
pushf
out
jne
loop
sub
sbb
inc
filds
xchg
dec
lahf
or
sub
into
iret
in
inc
mov
xlat
paddsb
fistpll
cmp
push
loope
pop
out
out
ficoml
mov
and
cmp
or
inc
push
insl
cmp
fisttpll
loope
push
push
xor
adc
test
out
cmp
fwait
popa
ds
adc
sbb
ficoms
inc
lds
sub
xchg
fdivp
nop
ret
push
sbb
mov
dec
inc
dec
push
sub
pop
xchg
xorb
pop
outsl
lea
push
into
cmpsl
loop
mov
clc
adc
mov
dec
movhps
fmull
fwait
mov
movsl
push
out
fldlg2
sbbb
push
sbb
jl
orl
call
jmp
sub
cmp
cmpsl
nop
cwtl
in
dec
or
push
insb
fxch
cld
xchg
lods
mov
into
pop
push
mov
push
cmpsb
test
lods
dec
sbb
inc
hlt
in
ljmp
cmpsb
mov
clc
mov
test
out
or
push
and
leave
in
add
jecxz
pusha
inc
ss
cmp
lods
inc
add
push
ja
daa
push
out
fwait
cmpb
xchg
xchg
dec
mov
dec
hlt
cmp
dec
xchg
adc
mov
frstor
mov
sub
fstl
hlt
or
push
jnp
mov
xor
repz
sbb
sub
ss
inc
mov
sbb
or
hlt
andb
insb
leave
mov
and
lea
inc
pop
scas
sub
cltd
lahf
inc
mov
int
in
dec
cmp
test
mov
push
xlat
adc
or
call
xchg
sahf
xor
sbb
lock
pushf
mov
jmp
mov
push
lock
jmp
jbe
lds
out
call
mov
enter
iret
push
mov
out
sbb
xchg
shr
cmp
test
or
les
dec
inc
mov
out
mov
xchg
add
lret
xchg
add
inc
movsb
and
mov
stc
insl
mov
or
and
out
jno
inc
je
aam
fisttpll
mov
das
xchg
cmpsb
dec
leave
mov
xchg
mov
lods
xor
fidivrl
push
xchg
mov
sub
jge
cld
or
mov
stos
nop
shrb
lods
mov
jge
push
mov
loopne
addr16
mov
or
push
fdivrs
pusha
xor
fisubrl
lret
xchg
adc
mov
xchg
push
cmc
mov
fldenv
push
outsl
pop
pop
pop
xchg
and
aad
dec
in
test
adc
xchg
in
cmpl
leave
inc
in
jb
fiadds
mov
sbb
push
jg
dec
cld
cwtl
outsl
push
dec
ret
mov
les
shlb
mov
addr16
mov
push
das
push
cmpsl
mov
out
push
addr16
aam
mov
pusha
inc
push
shrl
pop
test
testb
rorb
sbb
enter
outsl
hlt
or
call
cmp
xor
imul
jb
mov
icebp
mov
and
jp
cld
out
mov
and
mov
sub
adc
add
dec
sub
daa
push
aad
out
sub
jbe
xchg
aaa
arpl
add
cld
cwtl
push
in
adc
arpl
sub
cmp
adc
or
inc
stc
orb
cmpsl
or
adc
ret
scas
or
addr16
sub
dec
hlt
insl
or
mov
mov
fs
mov
fstp
adc
add
jge
shlb
xor
shl
xor
mov
ss
cmp
roll
pusha
arpl
cmp
lea
pushf
fwait
xchg
lea
inc
jmp
sub
lock
int
push
adc
enter
loop
push
clc
adc
jb
and
or
nop
fistps
hlt
test
ja
adc
pop
inc
dec
sbb
test
dec
movsb
bound
fmuls
push
mov
sbb
and
xchg
mov
add
out
push
lods
lcall
fistpl
arpl
pop
and
mov
mov
sbb
mov
ret
cmpl
inc
lods
hlt
mov
ljmp
pop
mov
mov
in
pop
daa
enter
cmp
orl
adc
inc
ret
cmp
pop
loope
xlat
sbb
mov
sub
lret
sbb
ret
in
sub
mov
sbb
xchg
fs
xchg
leave
jo
daa
shr
fisttpll
test
icebp
sbb
jmp
pop
mov
pop
inc
int
push
jecxz
in
roll
or
gs
inc
pop
inc
mov
and
dec
xchg
sub
xor
push
add
xchg
lahf
int
mov
sub
lods
push
and
jno
inc
and
movsb
repz
enter
lret
jp
scas
push
dec
lods
add
xchg
and
inc
add
shrl
xchg
imul
cmpsl
add
movsb
stos
xor
fisttpl
inc
or
scas
pop
pop
xor
clc
xchg
sahf
clc
pop
cmpb
adc
ja
sub
mov
addb
pop
or
addr16
es
imul
cmp
mov
je,pn
pop
frstor
pop
mov
cmp
mov
cwtl
dec
stc
lea
jl
or
adc
pop
sub
mov
add
xchg
add
push
lods
cltd
push
add
inc
stos
cmp
mov
fists
cmc
call
push
loopne
imul
push
and
lock
aas
cmpsl
pusha
mov
and
sbb
ja
sub
out
test
dec
add
bound
inc
jae
orb
shrb
bound
mov
aad
scas
std
in
cmp
clc
inc
mov
cmp
pop
sar
push
xchg
inc
test
in
xor
leave
inc
stos
outsl
sbbb
mov
xchg
sbbb
push
cmp
bsr
sbb
loope
dec
jno
int
loope
xor
mov
and
xor
push
mov
call
and
and
and
into
push
and
sub
dec
jb
jge
out
adc
mov
or
test
rcrl
sbb
adc
mov
js
nop
mov
push
lods
push
sub
lods
lret
mov
pop
lret
cwtl
jle
mov
pop
clc
xchg
pusha
nop
pop
or
jbe
data16
out
lahf
jbe
pusha
std
xor
mov
or
mov
arpl
fs
sbb
dec
jl
bound
jge
xchg
out
jmp
xchg
push
sbbb
mov
out
jle
aad
push
or
push
cmp
cmp
add
xor
hlt
iret
push
mov
add
rclb
mov
das
out
or
add
or
movsl
lret
sahf
sub
push
xchg
sbb
xor
push
pop
mov
dec
mov
jmp
jle
ret
ret
mov
enter
das
lret
jmp
movsb
mov
insl
add
lods
bound
fsubl
jb
fistl
inc
lret
cltd
or
dec
mov
ss
lea
hlt
or
test
jle
addr16
dec
xchg
sub
call
lcall
jmp
cld
xchg
push
in
jae
mov
jno
mov
call
in
inc
loop
rcrl
xor
popa
lds
daa
push
outsb
push
sub
mov
imul
jl
xor
push
cmp
stos
jno
mov
and
add
ja
repnz
sub
stos
in
js
out
inc
mov
and
pop
dec
loope
sbbb
xor
and
mov
hlt
dec
stc
xlat
int
mov
addl
hlt
jecxz
in
mov
push
adc
jb
push
jmp
movsl
sub
cmpsb
lcall
int
sub
xor
add
jb
push
lret
stos
adc
xlat
sub
xor
jmp
test
icebp
push
jne
dec
push
pop
inc
sarb
les
or
testb
jg
fidivl
xor
xchg
lcall
inc
mov
mov
jl
xor
cmp
loope
mov
leave
addr16
mov
sbb
pop
xchg
inc
mov
or
mov
fstpt
mov
mov
sub
push
pop
pushf
jbe
sbb
xchg
cltd
cmpsl
gs
cmp
cltd
jg
mov
or
pop
mov
add
jo
push
fidivl
mov
dec
insb
daa
repz
xor
mov
daa
insl
pop
roll
or
xor
clc
lods
sbb
int3
dec
dec
jmp
out
cltd
into
dec
cwtl
orb
lret
mov
or
mov
int
jp
mov
mov
movsl
push
stc
cmpl
push
jmp
pop
out
push
xchg
sbb
adc
insl
ja
addl
mov
and
mov
cwtl
jp
cmpsb
cld
ja
cli
and
loope
mov
fwait
cltd
and
mov
sub
ja
sub
daa
jl
lods
adc
into
loopne
loop
push
sbb
add
pop
jmp
loop
aaa
push
mov
loope
cmp
or
lods
or
sub
mov
sbb
sub
inc
sub
jo
test
sbb
testl
inc
lahf
dec
stc
and
leave
ret
dec
jecxz
ret
cmp
add
sub
out
dec
jbe
idivl
jg
dec
mov
pushf
sub
dec
or
cmpsl
xchg
das
xchg
cwtl
iret
jecxz
mov
dec
jle
lahf
imulb
and
pop
push
mov
cmp
inc
pop
push
pushf
mov
hlt
sub
jecxz
sti
jl
stos
add
mov
push
push
and
mov
fisttpll
xchg
mov
pop
and
mov
in
mov
mov
mov
mov
in
add
inc
push
adc
bound
hlt
sub
inc
idivb
cs
inc
cmp
dec
and
ja
xchg
fsts
push
pop
push
sub
clc
rorl
leave
inc
mov
imul
sbb
mov
xchg
mov
lds
hlt
in
fmuls
inc
lods
mov
stos
enter
rcrl
push
cmp
test
repz
xor
or
dec
ljmp
cmp
outsb
pop
or
mov
mov
lods
cmpsl
and
sub
dec
push
leave
add
and
xor
and
sahf
inc
sub
mov
das
popa
and
mov
xlat
push
leave
lds
jo
hlt
pushl
jmp
lahf
xor
loope
add
add
cltd
std
add
mov
mov
fwait
lret
test
mov
std
add
adcl
hlt
adc
and
out
repz
mov
mov
popa
adcl
hlt
mov
test
push
push
push
bound
push
incl
pop
sub
aad
jp
xchg
sbb
pop
or
rorb
fisubl
pop
xchg
dec
push
cmp
in
dec
pop
jl
jmp
inc
push
pop
mov
repnz
or
sub
jnp
repz
ss
sbb
cmp
xchg
adc
shlb
lret
inc
cmp
aad
leave
lahf
or
jbe
inc
inc
rcrl
fmull
cmp
popa
jp
mov
pushf
notb
rcll
inc
cmc
adc
mov
enter
mov
popa
push
insl
push
les
hlt
jecxz
or
test
fisubrs
jne
xchg
sub
mov
inc
inc
fisttpl
loope
mov
cmpsb
cli
mov
int3
sbb
lcall
inc
fsubs
add
int
xlat
dec
mov
mov
dec
aam
sbb
int
fcmovb
xor
cltd
mov
push
dec
clc
cmpsl
or
lods
inc
stc
inc
xchg
cmpsb
or
jmp
mov
push
xchg
ljmp
push
jae
and
jns
rcl
jmp
and
mov
insb
dec
adc
jle
inc
fwait
xor
or
xor
jo
cmpsl
daa
loop
inc
lret
mov
and
adc
test
enter
subb
fimull
hlt
mov
sub
inc
cmp
jnp
cmp
loope
lods
mov
sti
mov
insl
dec
push
sub
addr16
jae
cmp
out
mov
fwait
je
pop
aam
imul
aaa
sub
sbb
dec
leave
xor
cmp
test
jmp
cmp
jecxz
or
addr16
xor
int3
add
lds
in
mov
jns
sahf
inc
adc
pop
into
call
adcb
jg
test
sbbl
xchg
insb
mov
inc
push
inc
lret
sbb
dec
sub
loop
or
or
sbb
mov
or
popa
sub
pop
push
xlat
cmp
push
imul
pop
mov
add
in
insb
mov
sti
int
dec
push
or
lret
lret
mov
movsl
repnz
mov
dec
pop
cltd
adcb
mov
adc
jecxz
out
xlat
insb
cmpsl
inc
es
movsl
jae
inc
clc
ss
push
ljmp
jno,pn
out
js
adc
dec
adc
push
jae
xor
cmpsb
jmp
push
sarl
inc
inc
dec
mov
test
or
or
push
sub
inc
insl
aad
imull
inc
pop
jp
iret
das
ret
hlt
mov
lahf
imull
cmp
or
pop
cmpsb
test
sub
add
mov
xor
pop
mov
clc
xchg
xor
mov
push
and
dec
cmc
ret
stos
addl
and
clc
jg
jno
pop
fdivrl
cmp
mov
xchg
sbb
stc
jno
add
call
adc
jg
aaa
fwait
scas
lods
nop
loop
test
and
ss
mov
add
inc
push
loop
dec
cmp
sti
xchg
pop
test
arpl
inc
mov
insb
push
inc
test
fimull
es
dec
jae
jnp
jb
sub
nop
loope
push
add
cmp
mov
and
push
xor
sbb
test
dec
int
stos
push
sbb
imul
popa
mov
stos
jl
push
cmpsl
sbb
add
mov
cmpsl
pop
sub
mov
rcrl
aaa
or
ss
aas
addl
loopne
dec
rorb
shlb
mov
cmp
stos
adc
sbb
mov
mov
je
dec
sub
orb
rorl
ss
nop
fsubrs
pop
inc
dec
dec
sbb
jmp
or
and
loopne
ret
mov
loop
push
ret
leave
push
xchg
xchg
sbb
test
or
sub
dec
in
ljmp
inc
movsl
sti
inc
rcrl
inc
mov
fsts
cmp
mov
push
int
push
push
adc
testb
pop
xchg
rcrl
mov
mov
inc
arpl
mov
lds
add
cmc
stos
pusha
pop
mov
gs
call
mov
ds
and
sbb
adc
mov
pop
ja
lret
insl
pop
js
or
lock
xchg
fbstp
push
je
int
inc
lods
cmpsl
sub
push
out
mov
dec
fisubrl
insl
push
or
arpl
cmp
cmc
lods
arpl
lahf
call
arpl
loop
andb
cld
add
lods
pop
enter
dec
in
inc
js
cmp
add
xchg
es
insb
cmpsl
enter
in
sbb
shl
orb
popa
and
das
hlt
push
mov
loop
cmp
leave
or
push
loopne
test
and
daa
imul
cwtl
cmp
sbb
and
inc
sbb
imul
sbb
jg
jb
or
cmp
sahf
daa
subb
sub
mov
in
mov
arpl
inc
xor
and
mov
sub
mov
jecxz
loope
push
ds
mov
xor
andl
jno
repz
lea
lds
cmp
xchg
lds
pusha
and
mov
fucomip
add
inc
dec
lcall
mov
push
jmp
es
fistpl
pop
xchg
bound
inc
aas
je
test
mov
int3
imul
rcrb
out
cmp
mov
push
sub
lahf
mov
adc
lret
xchg
push
xor
mov
and
push
shrl
push
xchg
mov
int3
ret
dec
jno
dec
cld
add
inc
dec
cwtl
adc
ficoms
lret
sbb
mov
sub
adc
pop
cmp
flds
xchg
and
cmc
out
aas
int3
sbbb
outsb
cld
iret
cmp
xchg
pop
stos
inc
int3
dec
dec
push
dec
movsl
mov
and
outsl
dec
aaa
test
xchg
inc
or
inc
out
outsl
push
fucomip
or
lds
aaa
mov
xor
or
dec
cmpsb
mov
lahf
leave
dec
icebp
push
push
push
xor
int3
sub
sub
jmp
fsubrl
addb
inc
in
mov
ds
xlat
pop
stos
loopne
jl
pop
popa
or
push
xor
stos
pop
inc
dec
pop
sub
cltd
add
pop
addr16
dec
pusha
dec
cltd
mov
cwtl
xor
sbb
dec
adc
pop
outsl
mov
out
mov
jmp
pop
dec
cmp
dec
sbb
pop
or
jbe
sub
push
fdivs
mov
mov
adc
inc
lret
lret
pop
xchg
cmp
in
add
inc
dec
or
out
rolb
mov
jb
add
sub
sti
mov
cltd
add
dec
dec
int3
insb
jno
jno
add
psraw
dec
pop
loope
push
sbb
ret
push
mov
add
cmpl
dec
mov
arpl
mov
inc
cmp
dec
cmp
or
xor
ds
ljmp
and
dec
push
fistps
popa
ror
pushf
popa
lods
pop
xlat
push
xor
fdivrs
sbb
leave
in
incl
dec
negl
cmpb
xchg
test
mov
sub
sub
mov
mov
or
insl
dec
xor
fildl
jnp
aas
data16
clc
test
jmp
sub
mov
in
and
sahf
adc
xchg
dec
dec
fistpll
xorl
push
mov
out
out
adc
dec
inc
lcall
mov
cmp
add
cmp
sub
addl
shrl
dec
sub
sub
xor
mov
sub
push
dec
xlat
leave
aas
mov
jmp
inc
mov
push
lcall
xor
leave
sbb
lcall
loope
mov
add
jbe
fwait
movsb
ret
lea
popf
jg
push
loope
fwait
lret
aas
pop
mov
fxam
sbb
je
pop
or
sub
pop
shrl
sub
loopne
in
sbb
lret
repz
cmp
xlat
or
jle
scas
faddl
repnz
subb
mov
mov
mov
mov
mov
enter
xchg
jl
pop
insb
xor
rcll
sub
insl
dec
xchg
pop
push
into
add
out
adc
cmp
pop
mov
int
dec
xchg
dec
and
xor
rorb
inc
add
dec
xchg
add
dec
sbb
sub
inc
popf
dec
dec
lret
dec
lret
mov
fs
add
or
mov
and
push
jne
arpl
fsts
int3
mov
in
jae
roll
pop
cld
cmp
add
std
jg
lds
push
fwait
mov
movsb
scas
in
pop
cmp
stc
add
int
adc
xor
inc
mov
dec
test
fisubs
jge
dec
inc
pop
dec
shl
out
add
decb
fildll
or
enter
dec
push
int
dec
dec
imul
std
fwait
aas
sub
xchg
xor
jmp
xor
dec
lea
cmp
idivl
sub
inc
enter
fmuls
mov
dec
aam
jnp
clc
stc
push
int3
lods
push
outsl
movsl
mov
in
jbe
or
loop
call
and
inc
xor
or
shl
adc
and
xacquire
adc
xchg
jno
ds
xchg
push
inc
ja
jbe
lods
aam
pusha
jmp
mov
push
adc
popf
movsb
sbb
add
inc
and
test
mov
push
jo
xor
clc
cmp
das
cmp
sahf
jmp
pop
pop
sub
adc
xor
in
xor
lds
xchg
jbe
jle
pop
inc
in
add
dec
jmp
push
jmp
sub
mov
push
cmc
test
sbb
mov
xchg
andl
or
push
mov
xchg
loop
sbb
sarb
xor
cmp
mov
push
xor
dec
test
jg
cmp
pop
push
dec
ret
sub
enter
mov
cmp
es
es
mov
sub
push
or
ficoms
insb
mov
lock
icebp
je
in
lcall
mov
xchg
sbb
cmpsl
mov
loop
imul
jle
dec
pusha
mov
adc
mov
subl
add
test
and
outsb
fisubs
incb
clc
inc
test
sub
test
mov
test
in
cmp
je
xchg
sub
push
dec
inc
xchg
pop
pop
adc
push
jmp
notl
dec
push
rorb
cmpsl
js
test
inc
or
cltd
aaa
das
push
movsl
hlt
or
xor
das
push
dec
cmp
orl
dec
sbb
mov
shrl
imul
fnstcw
xlat
sub
nop
cwtl
sub
xchg
push
mov
push
and
icebp
xor
jmp
mov
sbbb
shl
out
push
xchg
mov
insb
sbb
fiadds
pusha
jmp
jne
push
jns
and
icebp
ss
mov
push
mov
dec
out
cmp
jo
mov
nop
xorb
mov
xor
jg
dec
stc
int
pop
pop
xchg
and
mov
popa
out
enter
push
test
jl
pop
cli
jno
insl
rcr
loopne
pop
fisttpl
jnp
sub
mov
and
loope
or
fsts
push
cltd
lock
lock
add
jb
stc
jecxz
dec
cmpsb
mov
inc
mov
arpl
insl
sub
mov
scas
lea
sub
popa
cmpsl
xor
leave
xchg
mov
mov
loopne
or
cmp
hlt
js
enter
pop
in
enter
mov
int
xor
jmp
stc
int
pusha
in
adc
cmp
inc
and
dec
add
mov
lds
jns
cmp
jae
inc
or
aaa
mov
add
xchg
adc
pop
inc
and
inc
repnz
jb
adc
sbb
push
leave
mov
bound
sahf
or
adc
and
rorl
sbb
add
adc
or
lods
or
adc
xchg
mov
aas
loopne
push
or
jge
into
pop
push
xchg
push
push
and
fistpll
aad
je
xor
sar
lret
cs
int
inc
push
jmp
cld
xor
add
jb
push
ljmp
jmp
mov
cs
out
push
leave
aaa
lcall
scas
mov
stos
arpl
xchg
or
lods
pop
loop
push
call
xchg
lock
sbbl
loopne
mov
das
jno
sub
bound
loopne
je
popa
bound
lods
push
std
pop
and
shr
xor
sub
mov
sub
ret
cmp
and
cmp
sbb
pop
cltd
mov
out
inc
es
clc
inc
mov
cmp
push
stos
jg
add
lock
xlat
inc
inc
loopne
je
jnp
out
add
inc
jmp
imul
add
and
into
mov
xlat
jle
mov
frstor
or
test
aaa
fdivrl
fldcw
mov
add
mov
mov
inc
icebp
stos
test
mov
cwtl
jl
sbb
mov
mov
daa
leave
and
cs
xor
jb
scas
jecxz
push
outsl
sub
icebp
mov
cmp
mov
jnp
inc
mov
xchg
scas
push
mov
test
stc
scas
imul
sub
leave
jae
test
setle
push
jp
jge
mov
or
ss
pop
push
fnop
xchg
ret
enter
xor
jno
inc
cmp
cmpsb
pop
push
mov
bound
icebp
inc
add
aam
jl
scas
push
insl
cmp
mov
stos
hlt
push
scas
cmp
leave
add
mov
inc
lods
call
mov
into
add
mov
adc
outsb
pop
or
push
cmp
cmp
inc
or
sub
fnsave
enter
sub
enter
cltd
mov
add
movl
roll
cmpb
and
push
cmp
fnstsw
aaa
and
imul
fwait
push
loop
andb
jl
addr16
jmp
leave
mov
movl
sarl
push
bound
lock
xchg
pop
inc
adc
sub
mov
xchg
push
push
mov
mov
inc
cs
std
sub
sub
leave
inc
jae
idivb
cmp
leave
adc
popa
jns
mov
movsb
mov
lods
pop
and
cwtl
or
sbb
add
mov
dec
rcll
test
dec
push
lea
fmulp
dec
dec
dec
inc
lahf
icebp
lcall
or
pusha
dec
add
ror
aam
jmp
dec
call
repnz
jno
inc
xor
inc
dec
jnp
addl
xchg
mov
insb
push
cltd
add
sub
dec
test
mov
xchg
mov
cmpsb
clc
in
rcr
xchg
dec
clc
orl
fstl
iret
pop
inc
test
imul
inc
jle
mov
mov
pop
dec
cmp
and
mov
icebp
aam
fistpl
xor
leave
fnstcw
inc
rcll
sub
sub
hlt
popa
dec
cmp
push
dec
jg
cmp
sub
xor
cltd
pop
pop
aaa
push
enter
cmpsb
add
xchg
or
and
push
cli
imul
outsb
push
mov
loop
loope
repz
or
xchg
leave
mov
jnp
push
stc
lock
bound
out
push
fwait
lret
cmp
add
nop
mov
and
daa
xchg
push
add
sbb
xchg
dec
xor
jl
jmp
test
dec
jle
dec
jo
push
push
push
mov
xor
sbb
and
in
push
sbb
and
push
and
jnp
mov
stc
call
bound
or
push
sbb
loop
hlt
inc
cmc
data16
cmc
aad
jno
out
lret
lret
pop
loop
js
dec
mov
aas
pop
lds
mov
push
popf
addr16
pop
push
ret
lcall
rorb
sbb
cmc
leave
mov
jle
dec
mov
dec
pop
rorb
mov
inc
add
cli
push
mov
inc
xor
mov
imul
loopne
push
js
fadds
loope
fldcw
test
cmc
inc
and
jmp
add
into
inc
pop
mov
push
cmp
inc
xorl
push
int3
mov
fldcw
test
sub
ret
sarb
cmovbe
movq
outsb
in
push
jecxz
sub
mov
loope
fnstcw
addr16
das
lods
icebp
rol
repz
loop
push
dec
out
or
fstpl
dec
inc
pushf
mov
int3
push
jl
push
xchg
outsl
pop
cli
add
lods
leave
mov
cld
mov
xchg
mov
sub
fistpl
mov
dec
and
dec
add
add
sub
jmp
adc
inc
call
cmp
push
je
sbb
inc
leave
jmp
pop
inc
sub
loop
jge
inc
xor
lret
inc
ja
sarl
mov
test
stos
fs
mov
dec
lret
ret
cmp
mul
aaa
push
aas
push
add
dec
es
add
inc
pop
leave
repz
xor
jmp
loopne
sbb
leave
pushf
test
popa
dec
imul
loop
jns
push
imul
and
inc
out
or
je
pop
jo
push
fildll
mov
dec
ficomps
mov
jg
jmp
mov
int3
lcall
stos
addb
xor
enter
pop
lahf
call
inc
hlt
mov
push
mov
mov
mov
fsubs
mov
sub
fldt
ja
test
mov
cmp
pop
in
cmp
ret
subl
inc
inc
add
sbb
sub
imul
cmpb
push
pop
pushf
or
ret
insb
xlat
leave
push
push
mov
ds
and
pop
or
push
hlt
xor
push
cmp
arpl
dec
loopne
xchg
loop
call
pop
push
add
xlat
fwait
pop
ret
sub
andl
scas
test
pop
dec
lock
imul
les
mov
mov
or
faddl
leave
lods
fldt
cmp
mov
test
sub
push
adc
shr
dec
jae
in
incb
call
jecxz
insl
mov
jge
imul
stos
push
adc
pushf
int
or
lret
lds
push
or
aaa
lret
adcl
ret
iret
test
into
sub
and
pushl
mov
inc
xor
dec
mov
pop
jbe
mov
sti
add
decl
jnp
pop
push
inc
fmull
mov
mov
int3
fstps
mov
iret
lcall
jecxz
and
push
bound
jmp
cmp
push
cli
sbb
add
inc
sbb
leave
mov
sub
dec
sar
aas
jl
mov
jge
sub
shr
loope
inc
mov
pusha
mov
test
pop
ret
mov
or
inc
dec
sub
psubusw
rorl
jmp
imul
xchg
cmpsl
inc
dec
jmp
jno
inc
inc
jmp
std
and
jmp
or
das
mov
test
stos
lea
or
mov
sub
out
xor
sbb
push
inc
xor
cmp
push
lret
inc
ljmp
push
mov
dec
inc
enter
inc
sub
or
and
loope
scas
and
inc
inc
mov
dec
xor
pusha
and
int
cmp
jbe
out
int
push
add
lret
mov
into
mov
or
lcall
mov
mov
mov
mov
sbb
mov
out
dec
sub
mov
sbb
jo
jmp
ucomiss
cmpsb
add
out
mov
shll
pop
jbe
cmpsb
xlat
xchg
add
inc
add
jl
xchg
add
jbe
mov
pushf
in
psllq
outsb
ljmp
or
xlat
jmp
inc
fstpt
fildl
push
std
or
sub
xlat
fs
out
xchg
adc
xchg
loop
sbb
lods
jnp
dec
test
inc
fstp
mov
jmp
push
cmp
fucomi
clc
add
ds
push
fistps
mov
dec
lds
inc
cmp
cwtl
sbb
xchg
daa
sub
addl
in
add
pushw
popa
or
jp
pop
sbb
sar
sub
or
push
pushf
scas
dec
jl
jns
inc
push
inc
push
xor
je
pop
dec
adc
push
icebp
mov
cmp
mov
sub
jae
or
sub
sti
xchg
test
aaa
mov
add
ljmp
jns
mov
pop
outsl
and
adc
fstps
mov
dec
mov
adc
leave
lds
adc
loopne
int
xor
ret
fwait
push
mov
pop
roll
das
lcall
mov
fadd
dec
pop
imul
xor
data16
mov
movsl
cmpb
add
and
fisubs
xor
sub
clc
insl
bound
mov
iret
pop
push
mov
inc
or
add
or
jae
mov
sub
push
mov
sti
dec
popa
push
and
sub
adc
lea
jl
jmp
push
jbe
scas
mov
add
test
pcmpeqw
push
xlat
int3
in
dec
jl
stos
mov
aam
and
cmp
jnp
cmp
or
and
test
mov
daa
aam
into
push
dec
scas
xor
xor
mov
push
pop
push
rcrl
xlat
sbb
lret
shrb
xchg
inc
jmp
xor
inc
dec
dec
sub
lea
addr16
mov
dec
dec
mov
mov
dec
dec
inc
pop
inc
add
inc
xor
loop
inc
in
popa
lock
inc
dec
pop
xlat
gs
push
sbb
inc
push
cmp
mov
pop
dec
lcall
cltd
jne
je
jb
icebp
inc
pop
das
sub
popa
inc
xchg
or
out
scas
or
fistl
stos
xor
mov
sbb
dec
lret
mov
xchg
mov
jl
cltd
fdivs
jne
add
or
aas
inc
and
push
enter
and
leave
das
add
dec
xchg
mov
dec
inc
dec
add
pop
sub
inc
inc
pop
xor
pop
push
into
fisttpl
dec
rorb
aam
or
push
roll
ja
or
out
sub
repnz
js
les
push
in
lret
fisttpll
adc
fxch
mov
push
sub
adc
push
in
cmp
xor
xchg
in
mov
sbb
dec
neg
lret
dec
gs
inc
sub
loope
leave
inc
dec
lahf
jae
or
dec
push
sub
pop
fiadds
dec
mov
pusha
jb
pop
cmp
out
push
pop
add
stos
pop
mov
sub
dec
shlb
jo
mov
push
sbb
push
adc
or
inc
pop
or
xchg
call
pop
pop
add
imul
push
dec
push
flds
lcall
push
or
xor
push
lds
pop
filds
dec
mov
and
pop
sbb
push
test
add
or
cmpsb
cmova
and
pusha
pop
test
fcmove
inc
xor
pop
aaa
not
push
cli
roll
repnz
push
add
arpl
and
lret
addb
and
push
outsb
xor
rolb
dec
insl
and
test
lods
add
shl
je
dec
jne
call
ror
icebp
je
pop
sub
add
sbb
add
mov
mov
pop
call
pop
inc
inc
mov
push
popf
dec
mov
pop
xchg
inc
fildl
dec
add
sub
sub
mov
dec
or
jecxz
fmull
nopl
lea
jmp
adcl
pop
lret
lds
pop
mov
fbld
call
iret
std
add
xorl
addr16
sub
sub
sub
fwait
hlt
sbb
push
leave
or
jae
insl
fnstenv
mov
arpl
lea
inc
mov
adc
dec
enter
insl
jnp
dec
pop
int3
mov
pop
or
push
inc
pop
loop
sub
add
mov
test
push
push
stos
dec
stos
pop
aas
adc
dec
xchg
or
inc
fmulp
ljmp
dec
jo
aas
lahf
loopne
ffree
movb
sub
or
mov
mov
lret
fistl
mov
inc
pop
jl
inc
add
dec
sbb
je
or
mov
aaa
pop
mov
xchg
xchg
mov
outsl
inc
repnz
pop
cmp
fmull
or
pop
pop
push
and
inc
cmp
add
jb
popa
mov
rcll
inc
push
adc
add
pop
pop
lea
addr16
ljmp
pop
int3
rcll
pop
inc
mov
fnstenv
imul
pop
stos
mov
gs
pop
and
orb
adcl
push
test
inc
push
rorb
aam
push
dec
or
inc
out
push
inc
fiadds
rcrl
push
and
sbb
pop
inc
sbb
mov
mov
add
pop
sub
xor
pop
add
add
pop
and
inc
or
or
imul
leave
gs
sub
into
or
shrb
test
inc
fld
xchg
add
dec
inc
pop
out
pop
pop
dec
push
inc
lcall
or
dec
pop
push
ret
sbb
pop
pop
pop
pop
scas
xchg
out
cmp
sub
pop
xchg
ret
shll
js
dec
add
fildll
inc
dec
mov
aam
add
lret
int
mov
ss
call
int3
and
imul
cmc
mov
rorl
inc
sub
sub
push
pop
imul
dec
or
or
mov
ficompl
or
aad
xchg
push
pop
jns
pop
dec
fildl
sub
sub
or
inc
pop
jge
pop
dec
fmuls
push
cmp
or
push
dec
xchg
jo
rorl
inc
push
push
pop
ret
add
mov
fsubs
sahf
fdivr
stc
mov
fbstp
ds
dec
dec
fnstenv
pop
sbb
cmp
push
add
push
dec
sub
sahf
and
dec
push
cld
mov
push
dec
lcall
xor
insb
dec
sub
addb
sub
dec
add
pop
inc
mov
inc
cld
dec
or
adc
dec
add
dec
pop
inc
sub
fmuls
int3
sub
inc
mov
out
push
adc
out
or
push
lods
jge
pop
pop
inc
mov
sbb
mov
vorps
cld
dec
lret
inc
mov
mov
or
xchg
popa
dec
sub
dec
sub
xorl
pop
jecxz
or
dec
mov
pop
add
shrl
push
push
push
mov
pop
pop
sbb
dec
push
sub
ficomps
dec
aaa
sub
xchg
or
cmpsb
dec
pop
fnstenv
ss
dec
dec
or
cltd
mov
dec
ljmp
inc
dec
push
ficoml
push
dec
mov
push
and
xor
dec
push
xorl
dec
pop
loope
jge
in
sub
dec
push
jl
fdivrs
add
dec
hlt
cli
mov
mov
repz
dec
lds
fimuls
dec
enter
hlt
dec
sbb
mov
jns
adc
movsb
addr16
lods
xor
push
add
add
mov
dec
xchg
mov
and
dec
cmp
out
add
sti
push
mov
add
add
mov
das
repnz
add
sub
fmul
add
xchg
sub
inc
mov
add
lahf
mov
or
cmp
std
dec
dec
enter
mov
orb
dec
pop
rcrb
roll
lret
add
sub
push
lret
add
aam
notb
inc
jmp
dec
inc
cmp
mov
and
aad
mov
jl
aas
pop
rol
dec
add
adc
dec
pop
iret
and
testl
roll
cmp
sbb
sub
pop
push
loope
and
rolb
mov
sub
push
sbb
cwtl
add
loop
dec
dec
iret
pop
fwait
cs
or
iret
dec
pop
mov
and
dec
les
and
dec
inc
mov
and
ret
inc
add
lods
mov
or
outsb
push
push
adc
sub
inc
mov
add
dec
rcll
rcr
rcrl
rcrl
pop
fcmovb
sbb
sub
mov
sbb
dec
pushf
test
dec
iret
fstp
dec
or
mov
pop
lret
shl
or
pop
loope
int3
aam
rorl
aaa
cwtl
add
or
dec
pop
mov
adc
pop
sub
repz
fadd
dec
or
add
pop
outsb
sbb
mov
pop
inc
icebp
sub
mov
scas
lea
testl
dec
sub
sbb
and
push
enter
pop
pop
push
pop
dec
xchg
das
mov
add
rcll
rolb
ret
rorl
pop
leave
dec
inc
sub
push
xor
pop
add
mov
push
push
sub
aam
flds
push
sub
nop
sub
push
jb
dec
je
xchg
dec
cwtl
pop
fnstcw
or
cmpsb
cmpsb
xchg
jns
scas
in
push
and
mov
xchg
add
mov
movsl
push
ret
ret
sbb
push
stos
sub
outsb
shr
jmp
divb
mov
mov
xchg
mov
mov
mov
jg
fmull
push
jp
cmp
and
insb
xor
mov
push
sub
push
js
add
call
dec
xchg
out
cld
adc
jp
fisttpll
lds
into
adc
fimull
inc
dec
lret
ljmp
imul
add
shll
xchg
sbb
pop
sub
outsb
sarl
lock
pop
push
add
imul
aaa
cmp
mov
mov
out
push
inc
sbb
lods
pop
daa
in
push
dec
ret
lcall
in
fisttps
lret
pop
jecxz
insb
push
fs
test
push
sub
pop
imul
inc
pop
push
mov
and
mov
add
aaa
or
ss
fnstsw
add
mov
ss
inc
inc
jae
inc
mov
push
aas
pop
es
lods
les
add
push
iret
cmp
imul
mov
mov
add
fldenv
inc
mov
js
or
call
and
xor
in
cmpb
inc
adc
les
adc
fldcw
adc
cltd
pop
dec
mull
add
js
xchg
mov
inc
inc
dec
mov
dec
dec
dec
add
xchg
int3
clc
inc
roll
int
dec
nop
xchg
add
or
sub
and
mov
cmp
dec
fstps
xlat
dec
sbb
arpl
sub
dec
sub
mov
and
inc
cmp
inc
test
call
sub
js
sbb
in
ret
pop
inc
movsb
xor
pop
std
adc
push
push
jmp
fnstcw
or
cmpsb
dec
or
fisttpll
inc
insb
add
push
adc
outsl
jbe
fiadds
push
dec
sub
adcl
dec
fldl
int
push
xor
imulb
mov
mov
xlat
icebp
pop
dec
push
testb
push
bound
dec
mov
ja
out
stos
mov
shr
jno
mov
and
lds
and
stc
call
outsb
shr
sbb
call
dec
inc
adc
jnp
push
call
adc
aaa
cmpsb
pop
mov
stos
add
inc
sub
or
inc
hlt
jmp
scas
push
sub
lds
stos
cmp
inc
js
mov
and
dec
ja
shrb
inc
adc
into
jge
nop
ja
das
cmp
inc
outsl
add
push
dec
add
pop
ja
inc
aaa
xlat
mov
ja
add
pop
or
xor
jae
lahf
push
dec
push
sub
push
xor
shrl
pop
or
dec
xchg
add
xor
cmp
inc
dec
inc
push
adc
jp
cmp
push
xor
jae
xor
addb
and
and
dec
xor
mov
inc
sbb
inc
fwait
dec
pop
push
xchg
aaa
xchg
dec
pop
sbb
dec
pop
rorb
leave
push
roll
or
push
sub
test
pop
jle
mov
dec
inc
jecxz
repnz
or
inc
xor
jle
add
inc
test
imul
inc
roll
shrl
fimuls
dec
sub
and
pop
lret
or
mov
insb
mov
pop
pop
inc
cmp
inc
dec
xchg
push
cmp
mov
mov
xchg
sub
dec
dec
dec
inc
idivb
xchg
lea
sub
scas
dec
push
in
repz
pop
rorb
or
inc
or
or
dec
xchg
outsl
xor
call
and
or
mov
mov
dec
dec
shll
mov
lods
popa
dec
add
and
pop
dec
sub
push
dec
add
maskmovq
testl
pop
pop
mov
push
push
adc
shlb
xor
leave
xor
fnstenv
push
push
in
jge
xchg
lods
test
inc
lds
or
push
pop
roll
imul
inc
jbe
fabs
mov
inc
sub
xchg
ret
aam
fwait
scas
in
cmp
xchg
fists
pop
cmp
fnsave
or
ss
lret
mov
data16
push
pop
clc
aas
flds
inc
sub
scas
lds
cmovp
idivb
enter
mov
dec
fstps
lds
adc
sub
dec
pop
lods
roll
mov
call
pop
stos
stc
call
rorl
movsb
add
cltd
add
dec
repnz
add
inc
fcmovnb
call
pop
or
call
jp
adc
cmp
rcrb
gs
inc
hlt
scas
mov
inc
xchg
mov
lods
mov
pusha
pop
inc
mov
xor
sub
pop
mov
pop
and
out
mov
popa
pop
inc
lock
pop
les
mov
xor
test
pop
adc
sub
or
xor
sbb
and
pop
flds
subl
ja
push
shlb
fstps
add
in
xchg
std
or
into
mov
dec
jns
fildll
mov
out
orl
int3
jmp
or
sub
push
pop
ret
lret
es
cwtl
inc
inc
mov
lret
sub
pusha
pop
mov
test
inc
stos
fisttpll
dec
call
sub
pop
aam
mov
cvtdq2ps
shl
dec
lods
sbb
call
lret
stos
call
lds
sbbb
dec
add
call
add
lcall
pop
pop
cmp
test
pop
nop
dec
or
dec
cmp
leave
push
add
stos
mov
int3
xor
mov
xor
cmpsb
es
stos
lret
cltd
dec
loope
pop
fcomps
pop
inc
lods
outsb
sti
push
sbb
add
xchg
mov
add
sahf
and
dec
push
cmp
mov
fwait
pop
and
loope
push
dec
sub
pop
mov
pop
xor
dec
cmp
dec
and
xor
dec
inc
sub
or
dec
rcrl
mov
adc
nop
mov
rcll
stos
pop
sbb
cwtl
xchg
sbb
mov
pop
mov
fwait
pop
dec
and
testb
cmp
push
fld1
int
shrl
sub
push
shll
jmp
push
mov
push
or
adc
lods
pop
and
cltd
and
mov
cmp
xchg
insl
xor
add
add
dec
int3
call
sub
das
mov
or
mov
xor
mov
lret
incb
xor
mov
sbb
inc
fucomi
inc
mov
and
sub
or
mov
inc
pop
adc
ss
push
inc
fisttpll
js
inc
movsl
dec
leave
cs
mov
xchg
lret
fsts
sti
add
dec
sahf
aam
sbb
pop
cmp
mov
fwait
add
inc
mov
inc
adc
iret
dec
and
inc
and
imul
adc
mov
inc
inc
cmp
dec
stos
add
mov
inc
dec
test
dec
dec
flds
testb
sbb
out
sar
xchg
sub
cmpsl
sub
ljmp
inc
fistpl
adc
jg
or
dec
push
pop
popf
inc
pop
inc
push
and
pop
das
cwtl
fcomip
dec
lods
sbb
pop
fadds
and
add
test
roll
dec
pop
roll
dec
sub
or
daa
mov
and
jecxz
dec
or
ss
jp
and
inc
inc
dec
dec
popf
push
sub
imul
push
popf
push
lods
add
je
dec
popf
lods
dec
or
dec
pop
dec
cwtl
inc
or
dec
pusha
pop
mov
jnp
pop
pop
inc
mov
les
dec
push
inc
clc
mov
push
es
das
int
fsubs
push
ror
or
dec
ss
lea
or
int
inc
inc
inc
dec
call
dec
dec
jbe
movsl
push
mulb
call
inc
fsincos
popf
pop
cmp
xchg
pop
add
mov
add
shll
adc
cmpsl
loopne
or
aas
pop
das
call
dec
pop
pop
hlt
add
sbb
mov
mov
adc
sub
inc
dec
xchg
add
pop
dec
pop
pop
push
cmp
cmc
mov
xchg
mov
sbb
dec
pop
leave
inc
inc
or
dec
orl
dec
loope
sub
das
inc
enter
push
cltd
pop
cmp
and
sub
mov
xchg
cmp
push
pop
sub
mov
pop
jl
das
dec
push
dec
adc
dec
inc
or
mov
inc
flds
pop
sub
xchg
sub
das
push
jl
or
push
pushf
push
mov
inc
dec
push
or
lods
mov
push
pushf
lcall
push
dec
add
mov
inc
dec
dec
inc
fsts
inc
push
pop
rcrl
mov
sub
dec
pop
inc
pop
push
rcrl
js
dec
fldenv
mov
add
push
cs
pop
std
jne
pop
je
pop
and
popf
imul
cli
inc
sub
dec
sarl
inc
lods
in
fdivrs
dec
rorl
or
jae
push
jae
dec
push
dec
aam
stos
inc
cmp
cltd
pop
sbb
push
and
pop
inc
and
dec
dec
inc
jno
cmp
pop
add
pop
lcall
dec
inc
flds
xchg
insl
dec
ret
flds
adc
dec
pop
jns
clc
sub
dec
pop
sub
cmp
aam
pop
dec
dec
push
sbb
movsl
out
lret
imul
push
inc
out
pop
push
lret
insb
les
lods
loop
stc
stos
sub
sbbb
sub
lret
imul
or
or
or
cwtl
lret
jne
loope
lods
sub
dec
fcoml
push
adc
dec
dec
icebp
push
cmp
adc
or
movsb
push
jl
repz
mov
push
push
mov
cld
lds
pop
mov
xor
sub
dec
push
inc
dec
inc
lret
sbb
pop
adc
pop
insb
int
pop
dec
adc
fbld
dec
xchg
sub
sub
std
cli
xlat
fcompl
mov
or
sbb
mov
sub
pop
cmp
jae
cmp
pop
cmpl
inc
xorl
xor
sbbl
xlat
inc
cmp
sub
pop
std
xchg
xlat
inc
loop
sbbl
and
or
push
mov
mov
fwait
dec
cmp
fsubrl
mov
pop
scas
cmp
je
dec
pop
das
add
mov
xchg
bound
cwtl
dec
pop
dec
sub
sub
or
jle
pop
push
adc
inc
dec
dec
lcall
sbb
lret
shr
in
sbb
adc
inc
dec
movsl
add
adc
fcomp
dec
sbbl
sub
push
adc
mov
insb
add
mov
dec
stos
adc
inc
sub
call
mov
sub
adc
int
pop
scas
jp
lds
inc
add
or
cltd
dec
sbb
add
cltd
mov
das
push
or
test
and
dec
orb
mov
pop
dec
sub
in
cmc
int3
pop
xor
out
fisubl
cmp
cmp
mov
xchg
lds
mov
xchg
pop
inc
mov
shrl
push
aas
mov
arpl
out
shll
je
mov
mov
xor
pop
pop
xchg
pop
push
pushf
into
mov
je
aad
loope
sub
xchg
jo
xchg
inc
jno
sti
inc
test
dec
inc
jp
push
inc
add
push
mov
xchg
mov
dec
xor
and
nop
cmpb
mov
mov
sub
mov
push
in
in
insb
sub
pop
rcrl
in
fists
jle
cmp
xor
jecxz
dec
addr16
sub
ljmp
cmp
clc
sbb
or
mov
in
pop
dec
xchg
xor
inc
ficomps
inc
pop
dec
sub
push
push
push
dec
ror
mov
pop
cmp
and
and
bswap
dec
inc
dec
in
add
in
add
dec
aam
insb
jmp
mov
cmp
fwait
pop
pop
sub
pop
lret
pop
mov
pop
out
inc
sar
fabs
mov
push
dec
inc
mov
enter
or
push
pop
orb
pushf
aam
flds
inc
sub
push
fabs
test
dec
sub
inc
adc
or
es
mov
push
pop
inc
pop
dec
lea
jno
cmc
and
shrb
int
mov
call
jecxz
dec
push
lret
mov
imul
fildll
dec
dec
inc
mov
and
inc
push
and
into
or
pop
inc
or
dec
test
pop
add
or
push
dec
cmp
mov
dec
lods
push
ds
pop
sbb
nop
sub
xchg
or
inc
in
sub
inc
dec
dec
sahf
adcb
inc
inc
lds
add
int
fwait
or
pop
xchg
xor
mov
push
inc
cmp
xchg
sti
into
adc
xlat
sti
push
push
inc
lods
xchg
int3
adc
lods
inc
push
popf
mov
lds
imull
cmpsb
dec
xor
pop
les
subb
jmp
inc
cmp
inc
and
pop
flds
add
sub
sub
roll
sbb
dec
adc
stos
dec
dec
in
loope
pop
mov
mov
add
inc
push
flds
iret
jbe
pop
jnp
lret
pop
mov
sbb
inc
iret
into
loopne
lret
loope
test
push
rorl
xchg
jge
dec
dec
data16
ds
rorl
sbb
rorl
dec
fwait
pop
or
pop
dec
sbb
adc
push
sub
call
sub
adcl
fwait
pop
or
lret
iret
les
or
into
xchg
adc
pop
pop
lret
xchg
imul
adc
xor
or
or
es
lods
daa
aad
lret
filds
enter
in
int
iret
sub
pop
cmp
cmp
push
ret
mov
test
inc
test
push
adc
mov
xor
rol
pop
fmul
jp
les
or
cs
scas
dec
shrl
push
mov
mov
dec
lret
or
dec
stos
push
pop
lret
lea
dec
jmp
cmp
mov
push
jmp
pop
cmp
dec
xchg
out
xor
ret
flds
dec
sub
inc
sub
pop
pop
add
flds
xorb
cmp
int
lret
rorl
mov
cltd
aas
pop
scas
sub
pop
sub
cmp
dec
stos
lret
sub
pop
push
call
mov
or
fwait
sub
dec
add
or
nop
dec
pop
shrl
dec
sub
mov
inc
inc
dec
sub
or
pop
lret
dec
dec
repz
pop
rorl
iret
aam
cmp
dec
add
pop
ljmp
xchg
sub
xlat
push
push
sub
cmc
add
out
or
int3
adc
sub
push
fcomp
dec
das
rcll
dec
cmpsb
es
xchg
mov
and
inc
dec
adc
dec
sbb
mov
mov
add
dec
jge
add
or
dec
lret
push
roll
mov
dec
ud2
inc
leave
and
lret
sbb
jp
enter
inc
imul
inc
dec
icebp
flds
pop
in
insl
sub
push
mov
stos
pop
or
leave
aam
push
pop
mov
fbld
popa
in
xchg
dec
dec
shr
add
pop
jp
pop
lret
inc
lret
sub
pop
movsb
lret
dec
push
jg
dec
dec
pop
pop
popf
lds
push
dec
sbb
bswap
sub
and
hlt
dec
pop
pop
addb
dec
mov
dec
cvtdq2ps
popl
into
fxch
push
or
sub
sub
inc
dec
push
or
das
int3
push
adc
xchg
add
add
aas
cs
add
pop
inc
or
arpl
and
lret
cwtl
mov
add
or
inc
dec
clc
rcrl
pop
add
jns
xor
push
sub
aas
push
sub
cs
pop
pop
push
fnstcw
add
sub
or
dec
icebp
ret
sbb
pop
sbb
dec
push
daa
sbb
dec
push
add
dec
rcr
dec
dec
scas
push
add
int
scas
dec
cmp
sbb
pop
and
add
out
jle
sub
inc
in
fistpl
sub
mov
lret
pop
sbb
mov
sbb
gs
cs
add
das
pop
dec
add
cmp
jno
rcrl
fwait
in
fsubrp
lret
inc
aaa
lods
mov
pop
fnstsw
rcrl
or
cmpl
inc
aas
mov
add
mov
sbb
mov
pop
int3
pop
insl
jns
lret
lret
test
xchg
push
std
popa
nop
push
xor
iret
xchg
mov
push
or
mov
mov
push
into
sbb
dec
adc
push
pushf
sbb
int
rclb
fdivrl
pop
add
adc
iret
pop
dec
sahf
cltd
fistpl
cmpl
scas
lret
scas
sub
rorl
pop
stos
cltd
les
movsl
push
dec
stos
daa
rorb
inc
sub
adc
sub
inc
into
xchg
loop
inc
dec
xchg
sub
mov
scas
add
mov
dec
lret
inc
rorl
lret
or
push
pop
push
mov
jne
pop
pop
mov
xchg
iret
xchg
dec
or
sbb
xchg
dec
enter
dec
cmp
sub
lret
xchg
xchg
cmp
or
popf
inc
in
int3
dec
lret
dec
dec
inc
cmp
dec
inc
cmp
dec
roll
les
fs
push
cmp
dec
and
add
ret
jae
lret
dec
inc
pop
mov
inc
mov
dec
lret
add
xor
and
dec
push
fldenv
testb
enter
gs
lods
add
cmp
xor
push
fildl
test
bound
das
dec
outsb
push
ljmp
in
adc
lret
and
mov
dec
aas
mov
xor
lret
outsl
inc
inc
lods
push
sub
addr16
int
sahf
jnp
sub
xor
fstps
pop
movsb
stos
scas
icebp
bnd
jle
push
mov
imul
and
cli
stos
repz
or
out
jmp
xchg
addr16
jecxz
pop
shll
dec
and
sub
icebp
std
adc
push
jno
and
fsubs
aam
je
cmp
in
loopne
mov
daa
sti
push
jae
cmp
les
fildl
pop
repz
in
stos
loopne
dec
adc
das
imul
cmpsl
ljmp
mov
out
mov
add
les
mov
cmpsb
mov
push
rolb
pusha
adc
movsl
xchg
pop
and
fnstenv
ret
leave
scas
pop
mov
mov
push
jno
mov
sub
data16
ret
fidivl
mov
push
sarl
cmpb
xor
mov
lods
test
sbb
inc
or
aam
movb
fdivr
push
icebp
and
push
adc
jmp
add
cltd
ljmp
fs
jnp
in
jge
push
ljmp
cmp
cs
push
rcrb
sarb
std
or
repnz
jno
sub
jg
dec
stos
daa
xchg
div
mov
and
or
lret
in
jo
popa
lret
sbb
cltd
pop
add
cli
iretw
sub
movsb
imul
adc
fs
dec
test
push
push
mov
sub
repz
jmp
retw
push
jg
cmp
adc
imul
add
inc
lahf
jg
inc
aaa
aaa
pop
pop
jmp
stos
mov
or
in
mov
jno
mov
je
xor
clc
inc
nop
mov
fucomi
xchg
fbstp
or
packuswb
in
mov
dec
jle
inc
imul
mov
arpl
nop
stc
fidivrs
mov
sub
push
mov
test
inc
jle
adc
fcoml
dec
xchg
and
inc
adc
aas
cwtl
and
pushf
js
adc
shlb
mov
xchg
popl
lret
mov
push
jno
inc
lods
or
in
pop
rcll
fmull
add
pop
pop
sahf
shl
mov
adc
test
insl
xor
jns
mov
cmp
mov
stos
pop
push
cmp
pop
pop
mov
cmp
cmp
and
mov
mov
mov
adc
out
cmpsb
xchg
bound
cs
dec
stos
enter
sub
testl
push
stos
add
dec
xchg
fisubl
push
in
mov
jae
stc
testl
push
jmp
adc
mov
insl
mov
rorl
mov
push
aaa
jbe
xor
push
mov
xchg
xor
out
in
cmp
add
fsub
mov
lods
or
ss
pop
lds
cwtl
and
outsb
push
cld
push
jp
in
mov
mov
cld
insb
test
mov
inc
out
cmp
cmp
test
fsubs
addb
test
adc
push
mov
adc
dec
pop
jno
aam
lods
lock
shlb
dec
mov
add
fisubrs
shlb
or
add
add
pop
mov
fdivs
xor
mov
xor
cmp
movsb
movsb
mov
inc
jg
jb
fidivl
fwait
pop
insb
je
ss
adc
fcomps
sti
xor
inc
sub
sub
mov
clc
in
lods
or
outsb
loop
repz
cmc
lds
pop
movzbw
pushf
setbe
mov
movsbl
mov
call
mov
jmp
out
dec
ret
pop
jno
pop
mov
jle
push
and
push
sti
movsl
fsubrp
inc
adc
sti
cmp
in
ss
test
sbb
lds
sub
jg
mov
push
jg
sub
xor
jnp
pop
and
outsb
push
push
or
push
cmp
inc
dec
cs
add
js
dec
ror
mov
in
pop
inc
pop
jmp
ret
push
inc
ja
aam
sbb
cmp
jae
mov
add
and
lds
iret
mov
sub
xchg
sub
jno
icebp
imul
gs
inc
test
insl
clc
xor
ffreep
sub
push
pop
int3
loop
mov
mov
or
mov
aaa
sbb
xor
xor
gs
or
cmp
xchg
testb
mov
jmp
clc
insb
aad
mov
in
push
pop
and
imul
pop
mov
sbb
jl
cmpl
xchg
int
insb
xor
ret
sub
dec
iret
inc
sbb
mov
outsl
aaa
or
out
xlat
adc
insl
js
loopne
pop
push
dec
and
fnstcw
push
test
popf
add
loope
test
jns
dec
or
sbb
addr16
mov
test
pop
inc
push
inc
add
lods
fcoms
movsb
jl
cmp
sbb
hlt
hlt
enter
fmul
sbb
dec
adc
mov
gs
divl
push
mov
lahf
pop
ja
fstpt
out
dec
maskmovq
mull
insl
int
nop
lds
lds
mov
jnp
jne
dec
xchg
mov
cltd
xchg
out
push
insl
push
cmc
xchg
jbe
mov
push
cltd
add
xor
pop
les
push
in
popf
pop
pop
inc
loope
negl
adc
pop
mov
xor
imull
push
sbb
int
test
nop
test
js
call
xor
push
roll
jne
and
push
loopne
sbb
dec
and
mov
push
bound
jp
add
dec
pop
mov
xor
pusha
pop
scas
pop
fmul
call
lret
enter
fwait
out
hlt
fbld
aad
or
das
lret
into
xchg
nop
call
in
lret
and
adc
fisubs
and
rolb
aas
popf
int
aad
fidivrl
xchg
push
fisubrl
dec
xor
jg
mov
pop
jno
imul
xor
loope
xor
gs
call
lret
jno
mov
ss
and
inc
cmp
and
xchg
pop
cli
idivl
ret
pop
pop
inc
dec
xchg
mov
mov
imul
and
or
add
xchg
jmp
dec
inc
aas
and
jmp
orl
cmp
add
shll
fistps
cmp
inc
rorl
stos
imul
push
repnz
out
fstl
mov
stos
pop
inc
adc
jmp
and
gs
mov
jmp
loope
xchg
sub
adc
aas
aas
cmp
pop
dec
cmp
mov
in
movsl
and
sub
lds
into
pushf
pop
cmp
xor
stc
lds
sbb
std
pop
xchg
arpl
sub
outsb
push
cmp
jmp
pushf
lea
ja
bswap
not
bswap
push
mov
mov
mov
movsbw
bswap
mov
bswap
mov
mov
mov
pusha
call
mov
movsbw
push
jmp
in
into
pop
jno
dec
stos
sub
dec
mov
ja
arpl
and
jecxz
movsl
mov
fucomp
xchg
xchg
in
arpl
nop
and
test
movsl
jno
insl
popa
add
les
mov
mov
or
xor
aam
test
pop
jne
dec
and
into
je
push
inc
movsl
clc
xchg
add
jb
cmp
into
cs
dec
push
insb
push
mov
loopne
dec
rorl
lock
xchg
imul
or
push
aam
insb
dec
sbb
cld
cld
pop
cwtl
sbb
out
xchg
pop
push
sub
mov
scas
push
jb
cs
stos
and
jl
or
bound
xor
pushf
in
dec
arpl
mov
inc
test
mov
mov
inc
test
aad
xchg
dec
mov
cmc
pop
mov
adc
xlat
rcll
mulb
pop
sbb
adcl
add
std
cmp
xor
and
jp
js
xchg
jne
fildll
ja
and
inc
ret
mov
push
fcmove
mov
mov
int
mov
out
loop
aas
and
mov
arpl
int
jmp
cmpsb
add
pop
jno
or
aam
mov
jo
pop
mov
sbb
mov
out
mov
repnz
ljmp
shrl
movsb
lcall
pusha
pop
xchg
xorl
push
push
in
dec
push
cmp
movb
sub
dec
mov
dec
popf
icebp
mov
xor
icebp
fst
shll
sahf
out
push
sbb
call
and
pop
jno
aaa
sbb
mov
outsl
mov
and
mov
incl
in
lret
mov
cmp
enter
fs
cmp
rcrl
xchg
cmpsl
adc
xor
mov
das
sub
ffree
jo
hlt
in
int
jnp
lcall
rcrb
xor
popf
jmp
loope
mov
sub
xor
adcb
bsf
push
sub
mov
btc
jmp
pushf
push
movl
movb
lea
jmp
fwait
mov
pop
jno
mov
xchg
push
lret
push
data16
jb
xchg
in
inc
sub
push
mov
cwtl
aam
test
aas
out
movsl
mov
inc
push
maxps
nop
push
inc
dec
lahf
add
dec
sub
sbb
pop
push
push
xor
jle
lods
adc
jmp
aaa
mov
xchg
push
test
push
shlb
add
scas
mov
fs
add
and
fwait
sub
mov
mov
and
mul
lret
mov
push
or
int
les
adc
shlb
pop
aad
mov
popa
test
pop
fsts
jns
jmp
movsb
and
sbb
xor
test
shll
mov
aam
mov
mov
in
dec
adc
jnp
push
mov
pusha
fnsave
clc
cld
out
dec
mov
cmp
loopne
incl
in
xor
adcb
jecxz
stos
imul
stos
lock
arpl
mov
or
rcrb
pop
and
jecxz
adc
hlt
loopne
lods
movsb
je
cmp
jp
cs
stos
lahf
int3
push
imul
fs
inc
lods
clc
push
mov
jo
push
out
adcl
outsb
push
iret
cmp
aas
test
xchg
sub
add
movsb
and
jg
inc
pop
add
fs
stos
in
sbb
fcoms
aaa
and
inc
jp
dec
xor
cli
mov
ret
cs
daa
fdivrs
cmp
fwait
jae
adc
mov
sub
hlt
cmp
dec
inc
xchg
insl
gs
fisubl
gs
jle
data16
cmpsb
out
xor
cmc
call
stos
jge
sti
hlt
push
imul
add
je
add
movaps
jno
jbe
cmc
lods
and
and
fcom
push
jg
or
clc
stc
mov
mov
sub
stc
mov
outsb
int3
lret
xor
addl
push
sub
mov
dec
push
loop
lcall
stos
mov
sub
fdivrs
push
insl
mov
mov
mov
outsb
lret
add
mov
in
push
loop
lahf
mov
sub
ret
je
dec
cmpsl
adc
ds
icebp
jmp
je
pushl
out
cmpsl
adc
xor
icebp
test
loop
fidivrs
pmulhuw
dec
xor
adc
sub
inc
push
pop
and
in
push
mov
pop
daa
jns
jae
cmpsl
nop
clc
mov
adc
and
cmc
adc
add
es
mov
imul
dec
cmpsb
pop
xor
sub
xchg
rolb
jno
frstor
mov
push
int
insl
mov
pop
fnstcw
add
xchg
in
repnz
test
rolb
mov
aad
mov
cmp
push
gs
add
mov
push
push
lods
hlt
mov
sub
pop
pop
or
push
insl
sub
adc
mov
enter
push
addl
add
sbb
fildll
and
jecxz
sarl
and
mov
and
gs
clc
push
jo
sbb
shlb
push
cmp
call
int3
outsb
scas
out
call
xor
pushf
aad
jge
jge
iret
hlt
call
in
dec
jb
cmp
jmp
into
rcrl
inc
add
or
call
push
inc
xchg
add
and
rclb
sub
inc
inc
mov
insl
mov
mov
xorb
out
cmp
pop
enter
push
push
ja
cmpsb
push
ret
cmp
sti
ror
mov
sti
mov
fnsave
pop
mov
adc
lahf
mov
arpl
mov
xchg
fildll
xchg
sysret
pushl
mov
xor
add
cmovns
add
xchg
repnz
stos
or
push
dec
stos
xchg
pop
cmp
icebp
sub
mov
mov
sahf
bound
loop
mov
std
sti
push
inc
movsb
add
test
jae
sub
push
cli
pop
cli
jo,pt
pop
mov
ret
daa
or
jmp
mov
ja
das
pop
jmp
jmp
iret
test
mov
stc
pop
fs
push
outsb
loop
stos
cli
bound
mov
out
xchg
adc
pop
push
or
call
inc
movsl
push
and
aaa
add
jge
jno
sarb
push
aas
fwait
inc
xor
popf
mov
push
adc
std
out
xchg
repnz
xor
ja
adc
fadd
or
sbb
or
push
jge
andl
je
xor
lock
mov
lret
sbb
mov
lea
jae
xadd
bsr
mov
and
sar
movzbl
mov
sar
stc
mov
pusha
cmp
cmp
bt
sub
cmp
push
bt
repnz
movb
call
sub
gs
insl
frstor
inc
and
mov
mov
lods
lock
dec
nop
fdivrl
mov
xor
mov
scas
jae
xor
pop
clc
movl
inc
cmc
dec
stos
pop
inc
inc
push
mov
in
cld
adc
sbb
adc
gs
adc
mov
inc
cmc
dec
test
fdiv
xchg
push
mov
testl
or
das
and
xchg
sbbb
sub
shr
test
push
cmp
in
add
aad
leave
in
cli
repz
mov
cmp
adc
mov
mov
cmp
cmp
andl
cmp
icebp
ficompl
decb
out
sbb
add
popf
insl
lret
push
test
fcmovne
and
dec
ds
into
xchg
jp
cmp
adc
dec
push
mov
into
call
lea
jne
push
movzbw
lahf
movb
jmp
repnz
shlb
or
std
imul
fiaddl
cs
dec
dec
pop
repnz
pop
lods
sbb
jbe
pop
mov
ficoml
jle
js
sbb
inc
es
mov
mov
sub
mov
xchg
add
rcrb
loope
sbb
pop
pop
or
pop
mov
push
das
sbb
pushf
sti
cmp
xor
shlb
aaa
popf
leave
and
sbb
mov
adc
out
add
into
adc
mov
shll
mov
lock
cmp
or
bt
mov
call
pushf
pusha
movl
pushl
movl
movb
movl
pushl
lea
jmp
test
pop
enter
js
sbb
loopne
rclb
mul
lods
mov
daa
fnstenv
push
jg
loop
xlat
cli
inc
inc
add
std
lock
nop
xor
jmp
test
inc
cld
out
pop
cmp
xchg
sti
arpl
jmp
stos
jae
pop
das
repz
sbb
inc
hlt
flds
pop
pop
inc
test
gs
std
dec
in
mov
push
mov
mov
mov
std
imul
movsl
lahf
bound
and
xchg
mov
cmpsb
jp
clc
push
pop
mov
stc
in
lcall
jecxz
stos
add
sbb
notl
aam
add
push
push
or
sbb
lds
je
int3
mov
sahf
cld
outsb
lcall
push
sbb
mov
popa
xor
fildll
push
inc
inc
repnz
jno
ss
push
push
mov
mov
inc
in
in
pop
movsl
movsl
mov
test
push
mov
add
fwait
inc
mov
jl
mov
divl
test
dec
cmpsb
pop
cmpsb
inc
xor
and
adc
movsb
out
out
mov
xor
std
dec
push
prefetch
cmp
add
xchg
cmp
cmpsb
sub
xlat
lret
nop
pushf
jle
addr16
fnsetpm(287
faddp
rorl
mov
dec
dec
dec
mov
push
adc
pop
lahf
sbb
xor
mov
cld
les
pop
xchg
test
mov
sub
imul
jb
push
cmpsb
push
jbe
ss
repnz
repz
dec
mov
inc
movsb
xchg
std
sti
adc
xor
in
insb
aad
mov
fldt
imul
lock
pop
mov
inc
or
divb
pop
stos
in
jge
pushf
mov
cmp
movsb
cld
mov
push
imull
mov
lods
pop
movsl
loope
subl
scas
xchg
pop
sub
lret
addb
divb
shrb
and
fs
ja
test
shl
rcl
add
sub
shld
add
bts
bsf
mov
bt
xor
cmc
mov
mov
clc
clc
cmp
call
jne
cmp
push
aam
mov
pop
enter
jg
std
retw
call
and
jg
dec
mov
lret
jmp
cmp
sbb
fbld
scas
pop
dec
daa
mov
cmpsb
cmp
aas
inc
sahf
xor
jmp
test
push
fucomi
mov
fwait
pusha
pop
jmp
shlb
add
xor
in
adc
add
jno
mov
sub
xlat
mov
sti
repz
in
add
faddl
xlat
jmp
sti
aaa
fldcw
gs
mov
mov
push
aam
test
jl
xor
repnz
movsb
or
pxor
lock
int3
or
lcall
cmp
mov
or
popf
push
sbb
into
insb
call
mov
dec
adc
add
inc
dec
jbe
roll
adc
je
jp
xchg
push
push
movsb
cld
gs
lret
cmp
cltd
adc
mov
mov
cmpsb
je
adc
imul
xchg
ds
push
imul
popf
in
ljmp
xchg
xchg
or
shlb
jbe
notl
inc
adcb
and
jae
call
dec
test
out
inc
mov
xchg
add
or
in
cmp
cli
push
push
mov
xchg
pop
fstl
ja
imul
scas
or
cmpsb
and
mov
xor
pop
mov
mov
lods
hlt
pop
mov
adc
mull
push
int3
dec
cmc
std
loop
ret
ftst
mov
xor
pop
vunpckhps
enter
push
das
push
outsb
test
loopne
cmp
pop
sub
mov
xchg
hlt
push
sbb
in
mov
jo
dec
sbb
xor
sbb
movw
cmp
jmp
add
inc
js
je
jb
arpl
jae
xchg
sub
jno
in
xor
add
push
mov
sub
or
cmp
cltd
repz
pop
lret
dec
dec
test
shrb
xchg
mov
jne
xchg
iret
xor
mov
add
in
cmpb
sbb
pop
mov
mov
scas
lock
sub
dec
dec
cld
push
dec
lcall
inc
movsl
lds
int
mov
xlat
lahf
ja
das
daa
and
lret
xchg
jg
pop
mov
and
nop
test
cmp
mov
cmp
clc
call
mov
inc
insb
jno
fnstenv
inc
mov
sub
mov
push
clc
sbb
jne
or
or
mov
fnstsw
mov
fs
and
in
lds
sub
lret
imull
lods
push
je
cli
sbb
pop
sbb
mov
inc
movsl
repnz
std
cmp
xor
cli
out
add
movsl
jbe,pn
repnz
push
inc
and
out
rcl
stos
xchg
push
pop
je
xor
das
cs
push
not
pushf
pushf
push
cmc
rol
std
pushw
popfw
push
jmp
mov
stc
jmp
btc
sub
shr
lea
sub
cmc
call
lea
call
push
pushl
call
adc
insl
jno
jge
sub
loope
test
scas
mov
push
add
push
mov
inc
ret
loopne
ret
or
xor
sbb
std
and
sub
pop
cmpb
add
pusha
leave
fildll
xor
dec
push
push
jno
inc
and
jmp
inc
pop
cmp
and
mov
and
cwtl
sbb
add
mov
je
and
fdivrs
pop
add
pushf
call
clc
pushf
add
add
jno
bt
cmp
call
jo
outsb
jno
test
popa
aad
int
frstor
xor
jmp
ret
das
push
pop
movb
inc
cld
sbb
pushf
clc
loop
test
daa
pop
loopne
pop
mov
and
loop
mov
arpl
xor
idivb
loopne
loope
test
lcall
iret
sbb
xchg
loopne
fnstenv
into
sub
xchg
sub
fwait
ljmp
gs
inc
xor
mov
jecxz
loop
push
out
and
xor
adc
mov
data16
das
shl
std
int3
mov
movsb
adc
insl
test
dec
repnz
xchg
into
cld
mov
nop
or
imul
dec
cli
subl
or
imul
sub
mov
je
cmp
test
fdivl
sub
ja
adc
inc
mov
jns
sarb
enter
dec
sub
fdivs
outsb
filds
daa
fs
gs
dec
cs
adc
hlt
xchg
add
ds
adc
clc
push
gs
jbe
insl
test
sub
jg
sahf
pop
add
mov
xor
ret
pop
add
das
adc
lahf
add
call
jl
cmpsb
jmp
subl
addl
adc
in
add
arpl
ret
jb
dec
xor
idivb
stos
mov
jge
lmsw
gs
sarb
movsb
lock
cmp
hlt
push
mov
call
dec
scas
divl
jb
mov
jo
mov
call
push
push
imul
andb
enter
repnz
mov
xchg
movntq
add
sahf
push
je
pop
inc
jae
scas
or
push
inc
jb
ljmp
mov
dec
sub
xchg
imul
sbb
fmuls
stc
bt
cmc
rol
call
ljmp
rorb
fdivrs
and
add
loopne
nop
pusha
imul
test
adc
cmpsl
sub
and
loop
cli
add
imul
aad
jge
loopne
std
popa
lret
neg
shld
mov
stc
scas
hlt
fsub
mov
dec
mov
dec
push
lahf
scas
xchg
movswl
mov
jmp
inc
mov
jle
and
pop
mov
ja
inc
xor
dec
scas
mov
into
aam
xchg
cli
mov
fs
ja
push
push
push
inc
lea
not
inc
inc
clc
cmp
jmp
push
mov
jno
gs
mov
aad
cltd
in
cmp
mov
or
pop
xor
mov
pushl
sub
mov
test
and
mov
into
int3
adc
inc
insb
insb
test
aas
lahf
mov
stos
scas
adc
cmp
xchg
subl
sub
mov
mov
in
cltd
jne
cmp
test
ja
ja
dec
bnd
and
rol
pushl
movw
bt
shr
pushf
movl
lea
je
pusha
adc
push
pusha
push
lea
jmp
mov
gs
xchg
repz
mov
mov
arpl
clc
bound
mov
xor
xchg
int3
loop
jbe
xor
aas
repnz
nop
push
push
dec
iret
cmp
repnz
test
jge
sbb
jg
jp
dec
lret
inc
xchg
rol
negb
pop
inc
mov
enter
pop
adc
test
rcrl
lods
xchg
imul
mov
lret
and
jno
imul
xchg
in
icebp
xor
imul
inc
inc
pop
mov
insl
inc
sbb
mull
add
stos
or
pop
push
sbb
rcrb
jl
fstpt
insb
aas
xor
dec
push
inc
ffree
subl
pushf
gs
sbb
lds
gs
pushf
cld
jl
int
mov
sbb
and
xor
inc
ffree
mov
lock
mov
fs
and
pop
push
dec
pop
or
stc
jno
push
fsubrl
lods
mov
movsb
in
stc
sbb
lcall
ror
and
rolb
pop
psubusw
mov
cs
imul
rcrl
lods
or
sub
fs
fisubrl
mov
jb
bound
push
cmp
cmp
sub
mov
jmp
adc
sar
mov
test
cmp
cmpb
jmp
movsbl
lea
push
mov
call
pusha
mov
push
pushf
pushl
ret
pusha
lea
jb
stc
stc
bt
cmpb
jmp
jae
fadds
xor
xchg
or
aam
nop
xor
loopne
mov
addr16
push
shll
aaa
jns
sbbl
jge
inc
fdivrs
inc
lods
xchg
xchg
addl
nop
ffreep
mov
xchg
gs
test
fnstenv
mov
xor
mov
sub
out
mov
out
lcall
push
lods
jns
pop
movb
pusha
lea
ja
sbb
pushf
sub
or
setae
shld
mov
add
add
bswap
mov
push
mov
cmp
repnz
pushf
jmp
btc
pusha
mov
movw
bt
bt
sub
jmp
pushf
pushf
push
mov
push
mov
pushf
pushl
lea
jmp
jmp
repnz
shlb
adc
dec
xchg
adc
popa
insb
dec
stc
and
sub
loop
mov
jne
jmp
in
pop
rcl
int
xchg
aam
push
inc
pop
in
xchg
push
mov
push
int
push
push
rcl
sub
repz
adc
lods
or
add
pop
int3
fdivl
jp
popf
sbbb
je
cltd
xchg
push
addr16
mov
sbb
add
sub
bound
jo
sub
in
mov
fdivs
adc
xor
int3
sub
mov
shr
clc
cli
cmp
gs
inc
movsb
cld
push
jge
xchg
jns
and
dec
cmp
sub
sti
dec
iret
inc
ret
xor
lret
mov
lds
fimull
aad
sub
in
out
sub
add
lcall
pop
out
hlt
fbstp
cli
push
add
insl
addb
repz
mov
sub
inc
and
jae
ds
ret
xor
or
aad
fidivs
push
into
pop
mov
data16
xor
push
add
dec
mov
sbb
aad
xchg
imul
loopne
dec
sub
in
test
push
add
mov
test
fcomp
mov
pop
sti
outsl
and
icebp
rolb
test
pop
mul
jo
lods
add
jbe
mov
jl
xlat
mov
mov
test
fsts
jmp
xchg
sub
pop
iret
outsl
mov
cmp
mov
and
in
xchg
adc
jb
and
dec
iret
mov
or
aas
mov
xchg
in
adc
stc
pop
sub
dec
mov
call
xor
ja
mov
push
push
sub
int3
fwait
pop
repz
xchg
iret
sbbb
mov
imul
lods
ret
push
cmpsl
jg
dec
inc
daa
out
xlat
xlat
mov
jae
xchg
pop
dec
inc
and
movsb
jo
pop
add
dec
outsl
arpl
inc
jb
add
imul
je
outsl
outsb
and
jb
jb
and
jae
add
inc
inc
dec
xor
cs
insb
add
gs
pop
jg
sub
push
ret
inc
ret
lahf
inc
pop
sti
out
inc
sub
adc
dec
xchg
xchg
add
test
cmp
lds
cmc
mov
insl
shlb
rcrb
jl
xchg
pop
sbb
dec
cmp
sbb
into
mov
dec
push
push
out
mov
ljmp
jmp
jno
jae
inc
cmpsl
jmp
fistpll
mov
inc
mov
inc
daa
leave
out
pop
mov
fs
add
or
les
ja
mov
sub
cwtl
push
scas
lods
adc
lcall
add
mov
vpsubusb
xchg
scas
setl
mov
dec
jge
xor
push
jl
xor
pop
into
mov
push
dec
sbb
ret
jle
push
jl
mov
fwait
int3
xchg
lods
arpl
gs
lret
sbb
push
mov
jecxz
cld
jnp
mov
xchg
add
add
mov
pop
cld
dec
nop
pop
outsb
dec
push
sub
push
push
cwtl
movsb
aam
mov
sbb
xor
enter
pop
mov
mov
dec
dec
mov
sbb
lahf
sti
test
inc
add
movsb
xchg
pop
xor
shlb
push
aad
sbb
negb
jbe
js
gs
lret
adc
test
sarb
inc
xor
cltd
scas
lods
inc
ffree
jmp
cmp
cld
inc
mov
xchg
inc
or
lret
pop
add
arpl
out
nop
mov
jp
sub
repz
not
sub
dec
in
stc
dec
cmp
xchg
sbb
ret
sub
mov
pushf
gs
jae
mov
js
gs
jb
ds
inc
and
jno
test
int
or
cli
cmp
xlat
das
jg
xor
repz
loope
pop
xchg
cmp
cmpb
push
add
dec
inc
enter
sahf
inc
ds
sahf
mov
inc
push
into
lcall
jbe
jno
mov
cmpsb
notb
cmp
in
mov
loop
movsl
mov
movsb
adc
scas
in
cmp
sbb
jae
sti
test
adc
insl
add
lock
inc
cmp
or
stos
xor
call
xor
jno
aas
subl
inc
cmp
pop
iret
cmpsl
mov
fs
invlpg
gs
cld
js
inc
les
js
sub
decl
gs
push
dec
test
fnstsw
cmp
ret
and
popf
push
inc
pop
xorl
loop
test
outsb
xor
inc
out
lods
lea
mov
add
mov
lock
mov
dec
sbb
lods
xchg
cmpsl
dec
out
ret
ja
jbe
lret
inc
mov
scas
es
push
jle
jbe
xor
ja
fisttpll
or
inc
add
imul
sahf
push
bound
jp
stos
inc
fsubrs
scas
sbb
xchg
test
cmp
jb
aaa
xor
and
enter
addr16
jne
divb
hlt
sbb
test
je
pop
or
pop
mov
xchg
xchg
test
pop
mov
bound
and
test
int
cltd
idiv
aaa
imul
aad
leave
pusha
pushf
push
pushf
lea
jmp
in
and
jno
stc
inc
xchg
cmc
push
sarl
in
mov
inc
add
xor
out
mov
lods
sbb
adc
jecxz
adc
jl
cld
mov
mov
xchg
push
pusha
insb
adc
xchg
repnz
cmc
lret
mov
out
pop
rcl
adc
cmpsl
and
xor
fildl
cmp
out
scas
sub
jp
xchg
sbb
mov
pop
push
and
repz
lcall
pop
pushf
aaa
push
sbb
xchg
push
jnp
gs
pop
test
gs
lea
test
test
scas
jp
cmp
shl
cmp
jns
movsl
std
insl
pop
cltd
push
nop
lds
pop
aas
add
call
stos
jns
test
imul
dec
mov
in
xor
xchg
push
fwait
les
sahf
inc
dec
loop
mov
xlat
mov
and
jp
testb
pushf
add
xor
das
imul
and
enter
inc
and
fcom
lods
js
push
xor
repz
sbb
rorl
gs
adc
adc
popa
shll
cli
mov
repnz
and
lret
insb
enter
push
inc
cmp
cltd
or
repnz
mov
cltd
test
loopne
and
xchg
pop
cmp
mov
es
add
xchg
in
lods
adc
xor
push
jle
inc
pushf
mov
jne
leave
pop
cmp
add
sub
in
sbb
loopne
insb
fdivs
das
pop
repz
cmpsl
fwait
outsl
lds
es
incb
arpl
inc
lock
movw
pushf
lea
jae
shrd
or
bsr
mov
movzbl
mov
sar
setno
mov
pushf
clc
sub
bt
cmp
movb
repnz
push
lea
jne
sbb
rcr
sar
mov
call
imul
jl
gs
inc
cmpsb
ljmp
cmp
mov
test
sar
js
ds
jmp
push
mov
aad
stos
stos
mov
addr16
and
test
clc
out
mov
data16
and
add
jns
inc
adc
cmp
fwait
div
ljmp
out
ret
pop
rcrl
mov
jno
cmp
push
inc
and
lock
gs
dec
shlb
push
or
in
sub
xor
add
jno
std
out
int3
cmp
dec
testl
es
stos
inc
imul
ss
ret
pop
aaa
mov
pop
mov
data16
dec
mov
aaa
xor
out
scas
stos
jg
das
and
inc
stos
dec
popf
jb,pn
cmp
jo
inc
jge
gs
cmp
mov
jae
jne
add
xor
or
xor
xlat
jae
push
ret
movsl
mov
adc
push
mov
int
jg
jne
mov
jo
loopne
pop
fisttps
adc
xchg
cli
sbb
mov
jge
pop
adc
out
sarl
xchg
notl
mov
mov
movsl
imul
jmp
stos
movq
and
aam
add
sbb
xchg
or
je
dec
push
mov
fs
cmp
cs
clc
mov
movl
pop
jo
dec
mov
mov
mov
imulb
lock
scas
nop
mov
arpl
cmp
adc
leave
cltd
xchg
jo
data16
leave
dec
mov
push
sub
mov
imul
fdivrs
int
fisttpl
inc
jno
inc
add
popa
dec
sub
scas
push
out
mov
stos
add
xchg
xchg
ds
mov
add
popf
add
in
mov
pushf
or
aas
das
and
add
xor
jo
out
scas
icebp
gs
repnz
aad
rcl
mov
scas
in
adc
xchg
jne
and
insb
enter
fdiv
xchg
cwtl
ja
aaa
maskmovq
mov
pop
out
mov
add
dec
fidivrs
push
out
in
and
call
fnsave
jg
fiaddl
out
cmp
ficoms
out
loop
rorl
inc
mov
rorb
gs
jnp
mov
fcmovb
add
stos
movsb
add
orl
dec
xor
xlat
mov
sbb
fwait
pop
add
xchg
xor
loop
call
aaa
or
hlt
add
and
inc
shl
cmpsl
movsl
jmp
out
test
js
mov
pop
rcrb
repnz
lock
scas
cmp
movsb
adc
sbbb
inc
lret
cmp
sub
xchg
xchg
int
mov
aam
nop
daa
and
xorb
fsubrl
lock
insb
aam
cmp
out
add
adc
fbld
lock
repnz
loopne
mov
push
nop
adc
or
xlat
pushf
mov
xchg
cwtl
test
sub
ret
jbe
pop
push
mov
jl
cld
mov
push
out
in
push
mov
and
rcrb
mov
mov
leave
sahf
std
jns
jae
int3
popf
mov
fs
sub
int3
mov
cmp
mov
adc
fdivrs
xorb
in
popf
or
and
cmp
add
test
in
leave
outsl
or
pop
push
lds
jns
xchg
or
scas
pop
addr16
daa
test
nop
int3
imul
xchg
roll
dec
xchg
call
xchg
nop
xor
jg
adc
jmp
sbb
inc
out
enter
lea
sbb
jle
inc
xchg
icebp
xor
mov
mov
mov
jg
inc
pop
testl
xor
test
cmp
loopne
mov
cmp
btr
mov
pushf
call
in
add
xorl
ja
test
in
mov
and
movsb
outsb
nop
add
mov
popa
push
mov
mov
jecxz
mov
inc
std
jno
inc
jmp
cli
fldt
sbb
jno
shlb
cli
stos
jns
shlb
inc
mov
loope
jb
pop
insl
mov
mov
sbb
sbb
xor
or
jns
sub
mul
sub
mov
lcall
mov
imul
not
lret
xchg
arpl
pop
pop
jbe
loop
mov
xorb
fcomps
clc
dec
mov
rorb
adc
mov
or
add
dec
lret
in
dec
xchg
add
gs
test
jno
mov
xchg
negl
adc
addr16
subb
xlat
push
inc
jg
arpl
hlt
adc
adc
cld
lock
inc
add
fsubrs
sub
test
gs
imul
scas
daa
mov
jae
adc
loopne
pop
nop
mov
and
mov
ret
pop
jnp
jae
xor
scas
pop
les
aam
fwait
xchg
sub
cmpsb
mov
dec
dec
inc
add
faddl
or
inc
sbb
loope
lock
mov
xor
mov
jl
js
insb
pop
inc
and
fsubl
or
xor
pushf
movl
jmp
push
mov
xorl
push
sahf
add
ljmp
xchg
test
clc
mov
mov
fdiv
js
push
mov
int3
pop
pop
and
popa
rclb
mov
mov
stos
mov
push
mov
fs
outsb
xlat
in
test
cmpsb
push
ffreep
push
fsubr
pop
xchg
pop
cmp
int3
mov
mov
sahf
lret
push
mov
cmp
iret
mov
mov
xorl
xlat
ret
ret
testb
and
cmpsl
repz
mov
lock
or
scas
or
mov
pusha
mov
push
inc
inc
and
dec
cmpsl
cltd
pop
pushf
pusha
fildll
cwtl
pop
dec
cmp
lcall
mov
inc
cwtl
cwtl
jl
fiaddl
inc
cmc
fidivl
mov
ja
imul
pop
jge
and
dec
outsb
mov
mov
lcall
cmp
pop
mov
ret
mov
xchg
push
push
inc
adc
inc
lods
rorl
dec
and
sbb
test
shlb
mov
cmp
stos
push
fsubrp
rorl
cltd
xchg
add
movb
push
mov
xor
popa
addb
dec
mov
or
jno
jecxz
adc
aam
add
pusha
and
mov
add
fs
aam
addl
sub
imul
pmaxsw
ret
pop
ds
or
fidivs
push
sbb
mov
gs
pop
mov
int3
and
or
mov
jg
sub
push
mov
push
arpl
ror
xchg
xchg
lea
push
aad
push
add
lahf
mov
xchg
push
rclb
push
ret
inc
cmc
sbb
cmp
mov
sbbl
jo
int
or
daa
outsl
push
mov
cmp
popa
inc
sbb
push
xor
inc
xchg
xchg
lea
jne
clc
shld
bsf
mov
bt
xor
shl
bsr
sub
btc
bsf
rol
mov
cmc
cmc
jmp
hlt
xor
test
cmp
jmp
icebp
icebp
sbb
in
dec
fs
dec
fists
or
add
sarl
push
jp
mov
or
pop
aaa
or
dec
cmpsl
pop
pop
jecxz
movsl
adc
mov
loopne
out
out
pop
dec
cmp
pop
and
js
push
mov
int
dec
or
leave
lea
xchg
mov
lar
in
cmp
gs
sub
mov
pop
stos
xchg
test
xchg
adc
fldcw
adc
movsl
imul
pushf
inc
mov
mov
xchg
mov
mov
push
mov
js
pop
test
jl
sbb
jecxz
cmp
sbb
xchg
testb
jo
stos
adc
push
repnz
in
mov
pushf
call
push
rorb
into
shlb
inc
fildll
sub
jo
inc
ret
fnstcw
cmp
sbb
daa
pop
mov
mov
inc
inc
xor
jmp
pop
push
and
scas
inc
out
xor
out
test
add
fs
imul
add
gs
jb
bound
fisubrl
xchg
loop
and
lea
stc
cmp
adc
lcall
mov
lods
pop
ds
ss
sub
subb
inc
subb
fldt
dec
xor
push
push
add
daa
ja
mov
mov
jp
repnz
in
push
clc
pop
xchg
and
fsts
ror
sbb
leave
mov
fdivrl
mov
iret
xor
xorl
jmp
repz
xchg
ds
jecxz
je
xchg
cmp
jmp
leave
sbb
mov
aaa
push
sub
jb
and
enter
push
cltd
jmp
movsb
into
mov
in
push
push
sbb
adc
and
cmp
mov
imul
pusha
inc
in
fisubrs
loope
jp
nop
mov
pop
xchg
mov
add
inc
ud0
repz
lea
mov
call
xchg
hlt
sbb
jno
add
xor
sbb
inc
xchg
xlat
push
inc
and
aad
adc
xchg
inc
jl
mov
mov
into
aaa
pop
in
jmp
int
shrb
in
sub
mov
cld
mov
fwait
cmp
ss
pop
inc
addr16
push
in
dec
test
fistps
into
cli
push
xchg
fcom
sbb
fists
lods
jo
dec
or
rcrb
pop
sub
dec
inc
mov
mov
jno
dec
int
jge
push
mov
rcll
fsubrs
stos
stos
out
mov
inc
jl
dec
mov
jno
adc
fimull
aas
ror
sbb
lds
cmc
insl
pop
xchg
lods
inc
aam
lret
cwtl
jns
inc
sarl
test
sbb
aas
subb
repz
push
push
jg
sbb
mov
sub
clc
loopne
rcll
imul
xor
loope
push
pop
in
cli
jbe
and
cmpsb
cld
aam
adc
pop
inc
sub
js
push
jae
sub
push
xor
jno
in
arpl
mov
loop
and
xor
dec
daa
or
jp
cli
das
js
leave
add
push
rcrb
xor
and
leave
lods
test
xor
cmc
mov
sarb
adc
mov
pop
fistpl
inc
stos
idivl
mov
jnp
xor
dec
inc
mov
jb
outsb
sbb
sbb
add
mov
sarl
xor
ret
pop
fcomps
adc
pop
push
cmp
lds
jmp
pop
leave
add
imul
pop
cmp
inc
ret
sub
popa
or
inc
inc
test
leave
test
and
jmp
fcmove
sub
enter
push
mov
je
xor
sbb
call
clc
cmp
cmpsb
adc
scas
mov
xlat
push
lds
or
xor
insl
mov
pop
cltd
pop
sbb
dec
sub
lods
pop
inc
dec
loope
mov
and
aas
cmp
sbb
test
or
fcmovnbe
lcall
lds
aas
popa
sbb
andb
dec
dec
xchg
dec
arpl
mov
mov
das
lahf
pop
pop
pop
add
xlat
lret
xchg
pop
and
shrl
mov
daa
pop
push
mov
test
jo
dec
mov
pushf
add
inc
sbb
dec
and
push
adc
mov
vpsubsb
repnz
pushf
mov
or
or
mov
popa
sbb
jne
sbb
jnp
and
daa
in
adcl
add
scas
mov
pop
mov
mov
mov
push
xor
cmp
xchg
out
jnp
fdivrl
loope
sub
pushf
mov
xor
or
mov
int
fldl
and
mov
loope
mov
lea
in
int
mov
lods
jl
xor
out
sub
jb
pop
add
cli
arpl
aad
inc
in
sub
repz
mov
ret
add
cli
mov
jbe
xchg
shrl
out
adc
pop
push
loop
je
xor
push
push
adc
scas
mov
inc
adc
es
xchg
push
out
loopne
sbb
repz
addl
xlat
pop
adc
mov
in
pop
fidivrl
sbb
sub
or
repnz
test
dec
dec
sbb
sbb
cmp
mov
shll
adc
stos
pop
fadds
fadd
pushf
pushf
push
les
repnz
mov
sub
lea
jne
not
xadd
dec
shl
mov
jmp
jmp
cmp
mov
push
push
lea
je
bt
jmp
dec
test
mov
mov
jle
push
xchg
xchg
movsl
add
xchg
movsl
pop
push
mov
ja
daa
fcomps
or
movsb
adc
push
cli
or
inc
out
lea
mov
dec
add
jle
stos
shlb
add
dec
mov
subb
adc
pop
jg
stc
insl
push
int3
lds
test
cmp
dec
scas
pop
aam
sbb
das
push
data16
stc
sbb
les
adc
imul
out
pop
mov
xor
sub
fisttpl
popa
lods
stos
mul
sub
call
xchg
jne
xor
jo
cmpsb
in
and
mov
cmp
and
leave
xchg
lea
xor
lahf
and
xor
fidivl
mov
out
mov
mov
xchg
idivl
jl
hlt
in
insl
push
push
aaa
jge
repz
cmp
jb
cmp
icebp
in
dec
popa
aam
add
fdivl
cltd
aas
andl
cli
or
pusha
push
and
lea
sbb
xchg
add
push
jp
nop
add
jns
aam
int
jne
inc
adc
movsl
jno
sbb
aas
sbb
jbe
es
add
gs
pusha
mov
int3
and
insb
push
cmpsb
adc
cmp
jge
rdtsc
xchg
icebp
pop
movsl
sti
jb
xchg
sti
aaa
push
imul
xor
push
cld
jl
sti
fwait
mov
cmp
outsl
fdivrs
lea
mov
jle
std
dec
ficoms
mov
js
mov
ja
mov
sbb
mov
pop
dec
sub
jns
test
xor
in
lods
movsl
xchg
stos
inc
testb
loope
lods
lods
imul
iret
aas
cmpsl
daa
ja
and
pop
mov
outsl
out
mov
lods
lods
mov
sbb
lea
popf
cltd
scas
inc
or
dec
test
ja
mulb
and
xchg
aad
cmpl
xchg
repnz
or
stos
add
out
fdivl
and
sti
xor
in
sbb
pop
push
mov
cmc
xchg
or
xchg
sti
in
pop
or
inc
jo
nop
int3
sahf
cs
outsl
xor
mov
or
out
mov
and
jecxz
pop
jmp
push
lds
clc
push
add
out
scas
sti
ja
xor
jmp
add
stos
iret
int
mov
scas
sti
adcb
adc
pop
pop
push
mov
inc
adc
fs
daa
dec
mov
adc
lahf
test
invd
je
cmp
jp
inc
push
add
jae
cmp
inc
cltd
enter
mov
lret
adc
push
rcrl
add
mov
cli
into
lcall
lret
or
mov
inc
xor
jg
jno
sahf
push
vpmovusqb
shlb
mov
bound
fcmovbe
xor
jecxz
icebp
insl
lds
nop
out
jg
lods
push
je
pop
fistpll
lods
adc
push
fcoms
inc
mov
inc
push
sbb
call
cld
xor
jecxz
pop
sub
lds
stos
or
cli
pop
adc
loopne
lds
sbb
mov
sub
add
fdivrs
mov
dec
adc
filds
bt
pushf
cmc
clc
ror
pushl
not
pushf
pushf
call
shl
mov
jmp
rcrl
jno
daa
lahf
sti
pop
iret
cmp
pop
fildl
jmp
clc
adc
cmc
rep
out
sub
dec
lods
out
ljmp
stos
or
inc
xor
sbb
int3
inc
jae
addr16
push
push
cmpl
mov
push
inc
mov
or
dec
lods
pop
lret
addr16
push
xchg
aam
xchg
js
push
pushf
fcomps
icebp
imul
sub
out
pushf
lea
jae
push
bt
cmp
jmp
icebp
pop
or
loopne
and
movsb
or
hlt
adc
int3
mov
sbb
jmp
mov
jle
bnd
ret
xor
push
jg
or
cmp
sarl
push
mov
push
rcl
enter
dec
xor
sub
sarl
das
div
jno
mov
sarl
mov
xorb
in
mov
lea
and
dec
lahf
push
shlb
fdivrs
in
in
mov
sub
jns
movsl
stc
mov
sar
call
jge
push
xchg
jno
rcll
imul
mov
das
jno
prefetch
rcll
aad
add
insb
aad
mov
fstpt
sub
mov
sub
fwait
add
cs
sbb
or
mov
inc
or
mov
std
inc
lahf
clc
mov
adcl
test
push
rcrl
adc
lret
cmpsl
mov
cmp
mov
or
mov
jno
clc
pop
fadds
add
push
test
rcrb
scas
lods
sub
sbb
ljmp
incl
std
pop
aad
iret
iret
mov
or
adc
gs
cmp
mov
xor
sti
movl
pop
mov
adc
or
mov
xor
and
xchg
jp
sbb
mov
or
fidivrl
mov
jp
dec
loope
test
mov
jp
inc
lcall
cmp
in
out
into
sub
cli
jg
das
lea
test
shl
iret
enter
xchg
xchg
dec
and
jno
cmp
jnp
inc
mov
js
dec
push
cld
xor
test
pop
xchg
add
ja
push
dec
lods
mov
cmpsb
test
inc
cmp
lds
push
fwait
js
int3
sbb
mov
stc
adc
cmc
push
sbb
mov
test
sete
sub
movzbw
push
push
mov
daa
shr
dec
shld
push
rcl
lea
clc
aaa
push
shr
stc
sub
adc
mov
bt
call
jge
xor
push
pushf
clc
push
rolb
pop
test
pusha
enter
sbb
jnp
dec
and
xchg
and
mov
insl
aad
std
leave
fists
loopne
jne
cmp
mov
jae
mov
int3
idivb
rorl
push
pop
dec
lret
add
call
out
mov
adc
push
mov
leave
xlat
in
dec
xor
push
cmp
aas
data16
call
add
lods
sub
xchg
imul
jae
xchg
lods
stos
out
mov
int
jno
cld
push
mov
insb
mov
mov
push
jnp
sbb
push
mov
xor
out
lret
js
cmpsb
xchg
jle
enter
je
pop
add
call
fldenv
sbb
daa
sbb
jbe
in
xchg
jge
xor
scas
popf
scas
xchg
or
lds
mov
loop
fcomip
mov
daa
cmp
jle
ja
mov
lcall
lret
ljmp
and
cmp
gs
rclb
sub
inc
mov
inc
push
idiv
stc
pop
mov
in
mov
jae
cmp
inc
sbbb
jno
cmpsb
cmpsb
fwait
adc
shrb
xchg
pop
leave
int
es
movsl
mov
sbb
pop
inc
pop
inc
cmp
loopne
xchg
add
add
negl
mov
hlt
pusha
cmp
or
int3
mov
mov
hlt
push
mov
cmp
fs
daa
out
dec
les
dec
xchg
adc
std
dec
mov
sbb
inc
add
out
xchg
sti
sbbl
loope
loope
lds
mov
leave
sbb
mov
and
dec
pop
cmp
das
neg
cli
stos
cmp
inc
pop
into
or
sbb
les
roll
mov
inc
adc
lds
ljmp
add
xchg
jno
arpl
daa
out
arpl
xor
jnp
movsb
test
or
enter
xchg
es
into
jne
test
jecxz
cltd
or
fcoml
adc
xchg
jl
or
sahf
dec
xchg
adc
outsb
lods
in
cld
test
sub
or
or
bound
dec
cmpsb
dec
xor
in
stos
cli
xchg
imul
lods
or
pop
push
dec
adc
popf
leave
sub
or
mov
cld
adc
jno
add
loopne
movsb
call
or
loopne
mov
sbb
mov
fnstenv
inc
je
jno
flds
lock
icebp
mov
or
push
push
mov
jns
mov
adc
inc
stos
or
inc
push
xor
mov
leave
repnz
adc
shll
jge
popf
jl
xorps
repz
jnp
daa
pop
repz
xlat
adc
out
mov
add
std
push
mov
xchg
jno
ret
loop
lret
notb
push
bound
xchg
dec
and
jne
xor
jbe
adc
or
pop
pop
jmp
gs
or
outsl
xor
lods
push
push
lahf
xor
xor
cli
fsts
push
mov
push
fsubs
pop
or
daa
adc
leave
shll
icebp
loope
cltd
xchg
out
add
xor
push
or
fucomp
daa
jmp
lods
adc
adc
fsubrl
cmp
lods
adc
leave
nopl
cmpsl
jbe
and
xchg
add
or
nop
repz
adc
imul
lea
loop
jae
mov
xor
cmpsl
fwait
xchg
hlt
pop
cltd
lret
mov
sbb
aaa
pop
not
ds
sti
testl
xchg
frstor
dec
sbb
in
in
js
inc
inc
and
mov
xchg
xchg
pop
pop
lea
jne
call
push
dec
dec
dec
dec
cs
insb
add
mov
cmp
cmc
test
cmp
call
movb
jmp
pushf
call
test
jmp
lock
ret
gs
mov
ja
aaa
or
dec
mov
enter
adc
stos
dec
xchg
and
push
pop
jo
cmp
jns
stos
lock
daa
out
adc
data16
add
sub
repz
cli
and
inc
cs
test
pusha
adcl
mov
jecxz
das
sti
lahf
xchg
arpl
pop
jecxz
lret
sub
in
out
sub
inc
adc
xchg
int
xchg
jno
fiaddl
cli
jbe
xor
cmpsb
es
inc
cmp
jle
in
push
stos
cmp
movd
sub
fsubrl
nop
outsl
xor
out
ret
lahf
arpl
das
sti
jecxz
mov
fstl
and
hlt
push
mov
pusha
pushf
mov
pushf
mov
jmp
pop
push
mov
fdivl
call
clc
insb
mov
pushf
jl
ds
daa
or
and
xor
insb
test
cmpl
mov
push
shlb
push
cmp
pushf
adc
leave
ljmp
xchg
lcall
insb
mov
lods
sbb
lahf
sbb
notl
pop
ret
sub
js
ret
std
fmull
out
cmpsl
mov
jecxz
mov
mov
or
fnstsw
inc
daa
mov
jbe
fsubs
cwtl
jno
stos
incb
es
xor
xor
rorl
jbe
and
das
mov
jb
fxch
mov
ja
pop
xchg
int3
dec
add
call
idivb
push
stos
adc
jae
add
pop
add
icebp
dec
mov
push
jae
in
ljmp
adc
dec
stos
in
jbe
pop
and
xchg
pop
rorb
lea
dec
adc
cltd
pop
jae
scas
popf
mov
xchg
pop
repz
mov
mov
imul
jge
insl
fnstsw
xor
aad
xchg
jno
ljmp
leave
cmp
stos
sbb
mov
test
cmp
cmpsl
cmpsl
pushf
or
pushf
subl
cmc
mov
lods
mov
mov
dec
lods
out
xchg
add
aaa
mov
mov
dec
and
sbb
popf
xchg
mov
sbb
xchg
inc
fcoms
xchg
inc
mov
in
lods
jne
xor
stc
fnstcw
mov
adc
sub
lea
je
pusha
movb
mov
lea
jmp
test
lahf
icebp
dec
jg
mov
sub
stc
aam
xor
fisttpl
icebp
cmp
jmp
xchg
dec
or
iret
lods
push
push
push
inc
test
jbe
push
pop
mov
inc
push
xor
cs
stos
inc
nop
ja
cmp
push
jno
push
leave
ret
inc
mov
mov
dec
inc
js
dec
add
notl
xor
in
or
push
sarb
pop
addr16
scas
xchg
leave
out
out
jle
mov
inc
lea
inc
cmp
iret
pop
dec
dec
xor
inc
mov
repz
dec
push
pop
mov
dec
fstps
stc
mov
inc
mov
jo
fistpl
jne
mov
arpl
xor
dec
cmp
inc
jmp
sbb
lock
jns
dec
sbb
xchg
fisubl
cmp
stos
push
push
in
imul
fnstenv
adc
sbb
or
push
lret
jp
push
push
int
mov
cmp
inc
mov
leave
push
ja
push
dec
push
out
xor
jmp
xchg
pop
mov
lea
enter
lods
or
aad
jl
sub
mov
insl
fmul
lret
jmp
pop
test
into
xlat
jno
or
stos
mov
insb
sub
sbb
pop
fldl
dec
xor
adcl
inc
lds
movsl
xchg
nop
in
addr16
push
mov
inc
cwtl
imul
dec
push
pop
cltd
cmp
outsb
sbb
pop
mov
cmpsl
mov
pop
test
dec
sbb
hlt
inc
std
mulb
add
pop
or
push
test
adc
ror
inc
fmuls
in
daa
clc
movsb
jns
inc
ficoms
popa
inc
pop
cmp
es
mov
jmp
mov
test
push
pop
dec
sub
sbb
aam
and
mov
fisubrl
sub
jmp
mov
mov
es
call
xchg
or
dec
cmp
sbb
lret
xor
jmp
adc
ss
push
lcall
mov
leave
mov
dec
mov
icebp
sub
fldl
mov
sub
inc
mov
add
push
std
ljmp
push
jns,pt
fs
xor
sub
adc
test
sbbb
push
fimull
decl
jecxz
push
or
cmp
int
lret
xor
lods
xchg
jp
cmp
cmp
cs
xchg
mov
adc
and
rclb
push
aam
xor
push
mov
dec
dec
mov
xor
mov
out
xchg
dec
xlat
push
or
testl
xor
sahf
xor
push
into
test
pop
pop
pop
test
cmp
out
repz
mov
pop
out
push
rolb
test
mov
or
sbb
fldenv
int
dec
mov
mov
enter
xchg
jl
mov
dec
push
cmc
int
inc
jmp
adc
push
lods
dec
mov
jo
dec
push
ljmp
sbb
xchg
into
xchg
xchg
dec
pop
pop
inc
fcmovu
mov
sbb
jmp
hlt
push
inc
ficomps
enter
mov
dec
leave
pop
addr16
addr16
call
paddusb
sub
das
test
mov
das
es
dec
in
popf
fstpl
dec
popf
lea
in
adc
int3
lret
or
das
mov
adcl
or
mov
fcoml
sub
xchg
adc
jmp
iret
push
rorb
and
daa
add
or
lds
icebp
cltd
adc
enter
mov
inc
mov
sub
ret
aas
dec
arpl
and
push
or
loopne
push
aam
push
push
repz
and
push
cltd
mov
dec
or
sbb
xor
mov
or
rclb
stos
pop
enter
sub
mov
daa
stos
jle
inc
jp
xor
sub
vpmullw
cmpl
xorb
or
std
iret
dec
xor
ljmp
mov
jmp
push
dec
mov
sub
lods
rcrb
fidivrl
and
sbb
lock
dec
or
push
int
int3
lods
mov
mov
pop
insl
ss
lea
mov
mov
dec
add
and
fimull
xlat
cmpsb
dec
inc
addr16
add
lods
std
aad
jg
inc
sub
outsb
lcall
fcoml
mov
mov
enter
jne
and
xor
push
mov
mov
scas
into
mov
inc
les
enter
inc
jo
jbe
jno
push
scas
inc
sub
jae
popa
fs
arpl
adc
xor
lcall
push
ret
popa
stos
sbb
fs
sub
addr16
lock
cmp
pop
inc
jnp
mov
aad
imul
dec
inc
jne
push
cmc
sahf
mov
popf
cs
iret
adc
mov
inc
adc
movsb
mov
and
dec
push
inc
fisubl
jnp
cli
mov
xchg
fyl2xp1
negl
xor
outsl
insb
icebp
or
sbb
push
xchg
or
pop
lret
dec
pop
scas
shlb
xor
das
mov
xor
push
clc
push
cs
xchg
sub
out
xchg
inc
popf
adc
dec
xor
cld
aas
or
xchg
jmp
adc
pop
pop
jnp
addr16
push
in
sbb
ljmp
rolb
sti
adc
inc
sar
push
dec
dec
add
jne
cmp
sub
xorb
cmp
cmc
dec
jp
jbe
push
ss
popa
mov
lock
xchg
inc
enter
sbb
test
push
cmpsl
or
gs
inc
jne
xor
push
bound
lods
or
dec
or
test
or
pop
inc
sub
fidivrs
test
sub
fcmovu
rolb
inc
cli
cmp
mov
jecxz
enter
adc
and
inc
aad
icebp
popa
inc
xor
cmpsb
mov
mov
sbb
mov
mov
or
push
sub
inc
test
test
scas
dec
fldenv
xor
add
lret
jb
int3
ret
adc
mov
push
adc
sbb
aaa
inc
mov
ljmp
lcall
ficoml
jg
cmp
fdivrp
mov
icebp
mov
push
leave
inc
xor
inc
sub
flds
sub
dec
repz
pop
daa
push
pop
fnsave
je
xor
fwait
inc
sub
leave
or
movl
mov
lret
cmp
mov
popf
mov
push
stos
sub
sbb
adc
enter
pop
iret
enter
sbb
or
stos
and
dec
push
sub
add
movsl
cmp
test
outsb
push
shlb
loope
dec
pop
inc
clc
jmp
pop
dec
push
inc
push
inc
sub
in
inc
jmp
int3
ficoml
adcb
xor
lahf
mov
adc
adc
bound
cltd
mov
ljmp
je
faddp
mov
and
aad
test
stos
rclb
test
push
pop
mov
nop
fwait
int3
imul
cs
xchg
sub
sbb
dec
dec
sub
mov
pop
js
lret
adc
adc
fldt
push
ljmp
fdivrl
push
jmp
fsts
sub
testb
fidivl
fsts
inc
xchg
lods
cld
adc
dec
mov
outsl
mov
add
ljmp
push
sbb
imul
popf
fdiv
test
dec
ja
scas
inc
cmp
mov
pop
pop
shlb
int3
push
fisubl
insb
dec
pop
xchg
sbb
mov
int3
mov
xchg
mov
lret
rclb
jge
enter
popa
sar
jmp
pop
pop
pop
mov
add
or
xor
pop
inc
call
aad
sbb
out
or
inc
or
cmpl
mov
pop
prefetchnta
lahf
gs
adc
scas
xor
adc
cmp
xchg
sbb
sub
xor
or
pop
pop
inc
push
adc
pop
leave
mov
div
cs
iret
dec
in
insl
fistl
cmp
dec
mov
clc
dec
call
sub
dec
dec
cmp
movsl
in
mov
scas
mov
int3
sbbb
stos
mov
iret
lods
pop
pop
test
xchg
out
dec
das
and
loopne
xlat
jae
cmp
fxch
call
cltd
fidivrl
out
in
test
jno
insl
aad
dec
mov
roll
mov
out
add
sub
pusha
outsb
push
pop
notb
ds
inc
jl
insl
push
pop
inc
notl
ret
push
jge
inc
inc
rcrb
std
mov
cmpb
dec
inc
cld
jg
or
popf
aad
iret
scas
jb
stos
lret
xchg
outsb
or
dec
xchg
lds
adc
cmovp
loope
iret
inc
mov
icebp
mov
inc
pop
or
or
push
push
push
out
push
xor
ss
adc
xor
sub
xlat
dec
mov
push
loopne
jecxz
add
into
es
jbe
bound
push
mov
xor
and
cmp
repz
push
sbb
jne
rcrl
fisttps
test
xor
cmpsl
mov
roll
sbb
ret
subb
or
ret
cmp
sbb
mov
fldenv
mov
jae
cmpsl
enter
jno
xor
xchg
adc
cmp
inc
inc
ja
xchg
xor
or
cmpsl
and
and
loopne
inc
add
in
ja
or
cmp
pop
and
insl
ror
push
dec
mov
leave
test
js
ljmp
add
fcoms
shlb
pop
int
dec
ss
lods
fisubrl
fnstenv
cmc
scas
adc
adc
movsb
add
arpl
dec
fcoms
sub
sbb
repz
int
inc
dec
mov
mov
mov
sahf
lea
mov
jmp
out
and
and
xchg
xlat
and
xor
movsl
int3
fdiv
mov
mov
subb
test
jecxz
fs
lds
adc
lock
scas
lret
ja
push
mov
dec
aaa
bound
loopne
or
cmp
mov
sahf
add
ret
imul
dec
sbb
pop
lock
fcmovu
mov
cmc
clc
xor
lds
enter
or
sub
stos
loope
test
cmp
shll
xchg
xor
push
adc
push
int
mov
mov
dec
mov
lock
sub
or
popa
lea
pop
cltd
push
mov
and
shlb
mov
pop
ja
xor
ss
and
or
pop
enter
jns
aaa
les
and
cwtl
cs
fldt
std
scas
pop
shlb
int3
mov
test
push
mov
push
sbb
jecxz
cmpsl
push
outsb
int
sar
lret
pusha
cltd
leave
sub
xor
mov
mov
ss
push
arpl
pop
inc
jns
cmp
sub
cmc
or
lret
imul
int3
or
cmp
jmp
jbe
add
inc
push
xor
lock
cmp
pop
bound
sbb
adc
adc
pop
pushl
mov
xchg
in
xor
dec
sbb
sbb
dec
sbb
cmp
mov
sub
inc
in
hlt
jle
mov
lret
dec
fsubs
sbb
dec
mov
lea
test
cld
dec
adc
xor
adc
pop
mov
arpl
cmp
mov
movsl
popf
add
inc
sub
lahf
scas
cmp
hlt
mov
inc
xor
aaa
jge
int
ror
js
mov
rolb
or
and
inc
pop
adc
push
add
out
aaa
iret
in
into
push
push
into
jb
lea
jge
jne
shr
dec
imul
rcrl
cmp
push
dec
inc
jecxz
mov
mov
inc
mov
les
xchg
enter
push
push
leave
inc
dec
js
or
loope
sbb
xor
push
mov
mov
mov
repnz
inc
or
xor
dec
fnstenv
inc
add
mov
jno
shl
clc
sub
jne
movsb
push
cwtl
mov
add
int
adcl
jle
hlt
or
ss
cmp
mov
push
xchg
sbb
das
lret
sub
adc
adc
and
iret
into
addb
inc
cmp
aaa
nop
inc
adc
stos
sub
cli
mov
mov
dec
xchg
in
int3
loop
push
push
test
mov
pop
jno
int3
ljmp
xor
cs
pop
movsb
inc
lret
test
cmp
pop
data16
add
incl
xchg
add
test
jmp
pop
dec
xor
xchg
cmp
xor
jmp
lds
jmp
addr16
test
and
ljmp
imul
add
xchg
fcmove
add
xchg
inc
add
mov
out
inc
je
imul
btr
cmc
dec
loop
into
adc
push
scas
dec
push
pop
adc
sub
xchg
push
dec
iret
cmp
mov
loopne
adc
jmp
rcrb
adc
jae
ss
add
outsb
insl
lret
mov
cmpsb
jmp
insb
aaa
call
adcb
mov
pusha
inc
or
add
xor
ds
das
mov
out
dec
inc
mov
lock
sbb
sbb
iret
mov
or
sbbl
in
cmp
or
jge
mov
mov
movsl
in
imul
cmp
dec
and
dec
cli
fcmove
push
and
lods
mov
sbb
loope
or
adc
jbe
push
push
xchg
xor
in
mov
lahf
sbb
imul
xchg
push
je
and
pop
jnp
dec
xor
popa
fcmovb
sub
inc
cmp
adc
mov
sub
addb
into
shll
cmc
out
mov
mov
dec
cmpsl
ficompl
xchg
mov
jg
fnstenv
repz
mov
mov
sbb
aas
sub
mov
sbb
xchg
lock
lods
dec
rclb
hlt
scas
mov
lret
ret
push
sbb
xchg
push
ss
jnp
dec
jae
push
pop
push
dec
add
stos
jo
lds
loope
push
sub
leave
imul
sbb
xor
int
dec
mov
cmp
fdivrs
sarb
sub
inc
mov
lret
or
or
cmp
loope
lods
rorb
loope
mov
dec
mov
sbb
xor
sbb
xchg
or
jo
out
int
cmp
xchg
loopne
adc
das
mov
push
and
leave
dec
inc
xlat
setb
pop
lds
mov
cmp
int3
and
out
sub
gs
mov
adc
pop
shll
adc
int3
or
pop
repz
cld
mov
rcll
cmp
or
loopne
adc
push
pushf
inc
push
loopne
mov
sbb
cmpb
mov
loopne
push
aad
lds
clc
or
mov
or
dec
dec
sahf
filds
mov
jp
das
sbbl
inc
pop
addb
neg
iret
pusha
bound
mov
adc
or
lock
ljmp
or
mov
inc
aad
cmp
xorb
jb
and
fisubs
clc
push
into
xchg
pop
mov
mov
scas
sub
testb
aam
mov
dec
out
hlt
xor
mov
pop
mov
lds
lret
inc
lret
xchg
pop
or
xor
mov
loopne
pop
std
sub
jbe
repnz
add
andl
movsl
hlt
xlat
add
push
xor
jecxz
leave
mulb
mov
cmp
and
add
push
jmp
rorl
xchg
ljmp
mov
loope
js
xor
xchg
sbb
mulb
testb
dec
inc
leave
inc
ss
mov
decl
push
insl
mov
add
xchg
pop
inc
pop
aad
imul
add
and
cmp
in
mov
mov
adc
rolb
in
push
enter
adc
cmp
pop
push
jb
lea
inc
idivl
sub
mov
or
ss
iret
mov
add
inc
fistpl
cli
add
or
or
xor
ss
cmpsb
inc
add
adc
push
fcoml
jnp
and
mov
xor
dec
xor
or
lahf
inc
fsubrs
ret
incl
roll
dec
inc
sar
cs
jmp
mov
jbe
inc
imul
mov
pop
xchg
or
push
mov
sbb
imul
es
add
push
sbb
loop
sbb
popa
push
sahf
xor
jbe
push
pop
call
mov
jb
mov
fidivl
push
pop
xchg
mov
ja
inc
jns
mov
xor
cld
inc
lret
dec
sbb
test
and
in
pop
pop
dec
into
inc
flds
mov
xor
sub
outsl
mov
call
jge
push
lods
shr
testl
into
sbb
pop
addl
out
les
pusha
leave
lock
repz
popf
nop
jmp
in
lret
test
sbb
pop
xchg
test
add
adc
ret
lods
xchg
xor
insb
sti
int
pusha
pop
cmp
xor
sbb
dec
je
push
iret
in
mov
out
pusha
dec
cmp
dec
sub
dec
push
push
xchg
fsubl
inc
iret
push
fiaddl
lods
mov
adc
test
pop
inc
pop
pop
sub
mov
out
clc
stos
je
int
push
mov
jg
ds
mov
and
push
mov
cld
inc
mov
jnp
in
and
daa
sahf
call
rcrl
dec
inc
fcmove
repz
mov
sbb
push
mov
mov
xor
out
ficoml
lds
push
xor
das
subl
dec
pop
push
loop
or
ret
roll
movsl
loope
jno
icebp
pop
in
cltd
dec
push
xchg
push
cltd
push
sarb
inc
cld
adc
sub
dec
dec
sbb
psubd
pop
xor
adc
xchg
xor
xor
inc
mov
inc
or
lea
fwait
pop
xchg
scas
adc
pop
push
sbb
jmp
notl
xor
cmpl
pushf
xchg
idiv
data16
pusha
mov
aad
mov
test
enter
iret
mov
lock
sub
push
addr16
jne
cs
sub
mov
or
aad
mov
inc
call
add
mov
mov
pop
or
rol
inc
mov
sbb
sbb
lds
fidivrs
hlt
adc
and
and
push
adc
cmp
xor
fisubl
ficoml
and
push
or
xor
inc
test
movsl
and
pop
xchg
sub
inc
pop
add
dec
push
pop
inc
xchg
or
mov
in
add
mov
dec
lods
loope
inc
or
in
push
movsl
push
insl
lods
andl
push
and
clc
arpl
dec
in
pop
test
cmp
mov
mov
pop
lret
adc
mov
iret
repz
xor
xchg
cmp
rcll
inc
aam
into
cld
fidivl
xchg
imul
dec
sbb
cmp
dec
adc
mov
cmp
inc
aad
test
mov
mull
scas
mov
xchg
mov
adc
jp
loopne
xor
mov
push
mov
pop
stos
inc
mov
shrb
jbe
cmp
pop
sbb
mov
nop
jne
push
push
adc
into
std
rclb
out
cmp
fisubs
pop
les
bound
push
shll
xchg
pop
lret
imul
adc
jns
fdivl
pop
out
cmp
adc
fstl
enter
mov
push
imul
mov
xor
leave
xchg
mov
pop
xchg
int
xor
or
fsubr
dec
push
jp
pop
aaa
inc
or
ret
xchg
imull
pop
mov
cmc
pop
push
adc
jmp
jmp
dec
mov
out
leave
push
int
mov
inc
inc
mov
mov
xor
inc
mov
add
lahf
and
inc
gs
adcb
sbb
mov
cmpl
repz
test
inc
adc
add
sbb
push
imul
dec
icebp
inc
mov
daa
stc
rol
int3
jnp
pusha
dec
mov
jb
jle
jno
shll
and
in
dec
ucomiss
cmp
pop
mov
lret
dec
push
fistl
sbb
fwait
adcb
and
fistpll
leave
pop
mov
push
sbb
cmp
xor
int
testl
xor
insl
sub
aad
addb
inc
mov
inc
std
daa
inc
mov
into
cwtl
inc
or
cmp
scas
leave
xor
pop
push
sub
int
mov
mov
inc
sbb
xor
out
int
sbb
pushf
jl
sbb
jb
push
decl
pop
mov
rcr
rcll
mov
or
push
xchg
aam
or
pop
push
mov
cs
loop
insl
jns
js
pusha
fsubs
and
test
pop
xchg
adc
adc
or
xchg
adc
int3
ds
inc
andl
loope
cmp
push
scas
scas
push
pop
add
out
dec
add
loop
mov
pop
outsl
sbb
sub
jmp
mov
sub
push
mov
clc
mov
jle
fsubrl
insl
push
ficomps
ficoml
imul
push
insb
clc
pop
push
enter
and
jae
shll
imul
fistpl
inc
lret
lret
je
dec
or
or
push
and
test
jmp
sub
sub
leave
in
shll
fwait
mov
and
into
and
int
inc
leave
or
dec
add
test
das
and
dec
inc
movsl
dec
lods
lds
pop
cmp
dec
jp
or
imul
test
lret
dec
ljmp
test
les
mov
stos
add
inc
pop
dec
rcrl
xor
aad
sub
dec
lret
dec
dec
flds
lret
inc
insb
dec
sbb
xlat
or
pop
sbbl
dec
cmp
dec
pop
int
mov
shll
lods
inc
sub
pop
sbb
inc
push
or
ret
fadds
daa
sti
dec
stos
dec
push
roll
ffreep
inc
dec
pop
inc
mov
dec
pop
inc
mov
sbb
dec
addl
cmp
cmp
or
dec
fdivl
add
dec
or
lds
dec
sbb
ret
pop
into
dec
add
pop
add
lahf
push
lods
dec
sub
pop
push
add
fbld
aad
dec
lods
dec
or
sub
int
dec
into
or
ficoml
dec
rcr
pop
push
sbb
rorb
fmulp
add
enter
sub
test
roll
mov
inc
fistps
pop
mov
lea
fcom
mov
into
fcmovne
add
fldl
push
pop
in
ror
dec
ror
lods
sbb
int3
push
xchg
pop
fcomp
adc
inc
dec
pop
inc
pop
pop
add
inc
inc
dec
mov
fxch
fxch
cwtl
ret
in
ret
sbb
pop
dec
push
mov
dec
into
push
sub
fs
das
xor
add
mov
xchg
or
mov
or
xor
aaa
jo
dec
icebp
push
or
mov
xor
push
mov
repz
inc
arpl
lods
xor
ss
add
dec
xchg
orl
mov
adc
add
fnstenv
movsb
xor
aas
int3
arpl
lahf
cmpsl
imul
leave
push
mov
cmp
repz
add
jecxz
aaa
pop
xor
jb
xor
add
xchg
scas
call
rcrb
or
sbb
aas
mov
test
dec
fwait
inc
xor
jle
or
jns
js
jmp
add
pop
adc
and
dec
icebp
push
shlb
lods
sbb
push
rolb
mov
jmp
push
loope
add
fimull
fmuls
scas
pop
push
ficoms
roll
pop
sbb
or
mov
mov
call
iret
movsl
mov
imul
aas
pushf
clc
pop
cmc
pop
inc
in
mov
sbb
and
and
xchg
outsb
jle
pop
jns
mov
mov
sbbb
or
leave
cmp
pop
lods
sti
mov
test
adc
jecxz
pop
xor
int
jae
stc
jmp
arpl
dec
push
push
push
inc
popf
push
dec
push
mov
mov
sbb
adc
adcb
sbb
mov
sbb
xchg
jge
test
inc
mov
leave
xor
sub
inc
pop
orl
lret
xor
push
xchg
cmpsb
inc
test
xchg
xchg
orl
into
push
stos
movhps
pop
pop
xchg
xchg
iret
lods
sarl
test
test
pop
leave
xor
adc
or
dec
push
outsb
lods
or
mov
sbb
loopne
mov
or
sbb
and
adc
sub
shrl
out
dec
inc
mov
insl
pop
sub
hlt
mov
cli
icebp
out
adc
sub
inc
ss
sarb
push
aas
call
inc
and
push
and
cmp
fimull
dec
daa
cmpb
dec
in
inc
mov
pop
push
shl
loop
mov
xchg
cmp
in
mov
add
push
pop
add
pop
push
or
mov
jecxz
inc
adc
icebp
insl
push
xor
or
std
sbb
xor
enter
xchg
aam
pop
imul
loop
mov
sbb
pop
push
and
pop
out
add
enter
or
imul
fidivs
add
cmpb
ja
xor
jae
inc
dec
jecxz
outsb
mov
jo
inc
mov
fsubrs
sbb
addr16
sub
shll
int3
out
inc
pop
lcall
pop
iret
mov
gs
xchg
sbb
je
leave
mov
cmp
rcrb
pop
call
clc
dec
add
pop
add
jae
pop
popa
mov
xor
inc
mov
adc
add
pop
xor
push
dec
aaa
xor
lds
or
fadds
inc
jmp
push
mov
into
xor
arpl
mov
xlat
lcall
fistpl
sbb
inc
push
push
jae
mov
aaa
mov
mov
pop
mov
cmp
fisttps
fldt
xor
add
iret
push
or
imul
mov
xor
test
push
cwtl
ss
mov
cs
xchg
pop
pop
rclb
mov
adc
sub
inc
push
mov
mov
lret
push
fwait
push
sbb
fstl
pop
loope
repz
ret
mov
xor
and
mov
cmp
mov
lahf
dec
cmp
pop
add
push
lret
inc
dec
inc
xchg
jge
add
push
ficoml
imul
lods
xchg
lds
addb
sahf
add
lahf
addr16
pop
lret
and
shlb
fcompl
gs
mov
xor
dec
out
fmuls
bound
hlt
aad
in
and
add
insl
ss
xor
mov
push
push
xor
xchg
shr
iret
shrb
push
pop
repnz
mov
loope
test
jle
sub
inc
pop
or
pop
enter
aad
xlat
push
jmp
test
xchg
push
cmp
mov
testb
jmp
add
inc
add
bound
jmp
mov
cltd
dec
outsl
or
iret
xor
dec
enter
fnstenv
fwait
pop
lcall
sbb
sti
dec
cltd
dec
es
loopne
sub
mov
jnp
scas
inc
lea
in
inc
fistl
and
push
ss
jmp
inc
iret
or
inc
sbb
cmpsb
cmc
leave
dec
stos
ret
dec
jbe
cmp
pop
lods
cli
arpl
mov
xlat
or
and
mov
add
xor
and
ror
mov
rcrb
les
js
pop
mov
imulb
or
nop
outsb
jo
dec
cwtl
pop
in
mov
popa
fisubs
incb
dec
sbb
inc
mov
std
mov
es
ret
cld
dec
jp
fdivs
inc
imul
in
or
fst
sbb
xlat
mov
dec
icebp
push
imul
insb
shll
sub
cld
and
pop
js
or
rorl
or
or
mov
outsl
fmuls
sub
and
fstpt
or
je
lret
inc
mov
xor
push
and
pushl
fwait
mov
push
mov
dec
sbb
mov
imul
or
pusha
push
pop
dec
stc
push
jno
pop
fldt
int
jmp
stc
in
enter
xchg
or
inc
jne
movsb
inc
andb
cmpsl
scas
pop
in
and
dec
orl
test
fdivrs
fstl
or
pop
test
das
push
or
mov
push
out
jns
xor
cmpb
lcall
dec
cltd
mov
je
test
mov
sub
stc
mov
mov
dec
sbb
inc
data16
js
rolb
ret
xchg
dec
cli
pop
int
inc
fdivrs
xchg
iret
inc
or
call
xor
xchg
push
cmp
sbbb
mov
dec
mov
mov
lea
add
sti
movsb
push
dec
mov
sbb
dec
out
shrb
repz
push
pop
fstpt
sbb
xchg
sbb
movsl
mov
fwait
mov
sbb
push
shll
push
clc
cli
cwtl
fs
imul
sub
adcl
call
dec
adc
and
cmc
bound
mov
or
hlt
jns
cmp
adc
data16
ja
fildl
and
mov
sub
inc
int3
mov
cwtl
stc
jg
cmp
fdivrl
mov
add
mov
pop
andb
enter
sub
xor
cmp
leave
jns
inc
decl
or
sarb
aas
dec
sbb
ret
xchg
sbb
xor
dec
push
xlat
mov
pushf
sub
mov
lods
xchg
push
dec
push
pop
sub
test
dec
hlt
xor
test
loopne
cmc
fmul
push
shll
mov
outsb
mov
jp
int3
es
xor
add
add
adcb
adc
bound
addr16
fcmovne
sbb
stc
popf
scas
mov
pop
jp
fcomi
jle
push
daa
mov
jp
cltd
pop
pop
lahf
mov
stos
ret
dec
cmp
sbb
sbb
icebp
outsl
dec
divb
loope
push
mov
and
ret
inc
dec
ret
inc
mov
dec
pop
xchg
lahf
and
mov
dec
cmp
or
and
cltd
pop
mov
xchg
fidivrl
sahf
out
fdivs
cld
mov
sbb
gs
stc
pop
jp
push
pop
pop
sbb
push
ljmp
mov
mov
pop
jns
adc
fcomps
addb
inc
pop
inc
xor
or
jge
dec
or
cltd
loopne
xor
jl
and
mov
sbb
mov
dec
pop
int
sbb
pop
dec
std
insb
xor
jle
sbb
inc
rcll
test
cwtl
sbb
aas
mov
inc
lea
enter
dec
inc
pop
fstp
push
adc
inc
bound
fmuls
jg
jle
xor
shll
pop
loopne
dec
clc
stos
push
movsb
dec
stc
or
push
sub
test
pop
lret
and
test
xchg
inc
pop
imul
lahf
jo
ret
call
ret
lret
xchg
iret
int3
imulb
repz
fisubl
jle
mov
arpl
or
imul
imull
add
push
rorl
fisubl
jns
pop
inc
popa
xor
jp
ss
push
adc
mov
pusha
daa
ja
in
adc
pop
dec
jne
xor
xor
sti
sub
cmp
mov
adc
add
dec
pop
in
push
cmp
loopne
mov
xchg
sbbl
dec
pop
test
mov
mov
in
push
push
stc
adc
jnp
push
mov
or
repnz
insb
push
ret
push
inc
cmp
mov
dec
cmpsb
pop
lods
mov
lods
xor
push
outsl
and
or
pop
ret
dec
dec
cwtl
lahf
mov
fwait
mov
push
test
test
mov
enter
adc
pop
xor
lods
sbb
js
mov
lea
sbb
jmp
inc
fisubrl
cmp
dec
mov
mov
sarb
cmc
into
fidivl
iret
ret
push
rcr
mov
mov
dec
inc
repnz
cmc
dec
add
mov
and
xchg
push
add
xor
mov
push
cli
jecxz
sub
sub
lods
imul
cltd
std
dec
adc
ret
fsubrl
jp
add
fnstsw
xchg
or
fldcw
bound
sbb
push
sub
pushf
adcl
mov
pop
lahf
lahf
or
push
dec
movsl
cmpl
pop
push
loop
dec
lcall
mov
add
subb
and
and
sbb
sti
lea
inc
adc
repz
aam
inc
jb
adc
mov
pop
clc
inc
sbb
iret
mov
or
pop
out
sarl
xor
pop
ds
out
cld
cmp
push
push
cltd
ret
cmp
jmp
imul
dec
sahf
push
mov
sbbb
inc
push
dec
jl
xlat
mov
or
mov
ficoml
push
add
imul
je
shr
inc
in
daa
xchg
mov
mov
adc
pop
imul
outsb
pop
xor
pop
les
jmp
and
loope
cli
push
cmp
xchg
mov
daa
and
dec
arpl
add
push
loope
jb
imul
inc
add
clc
pop
das
mov
sub
jno
enter
inc
repnz
out
fildll
sbb
mov
mov
cs
push
or
jmp
mov
outsl
mulb
jnp
jb
add
xor
cmp
xor
cwtl
int3
sub
jb
out
sub
enter
add
iret
mov
jmp
cmpsl
and
cld
push
imul
dec
ja
push
ret
inc
mov
aad
mov
add
dec
xor
insb
add
inc
push
inc
push
dec
call
pop
ljmp
sub
dec
pusha
pop
xchg
lds
inc
popf
stc
xlat
out
inc
frstor
repnz
sub
bound
push
push
int3
test
in
lcall
cs
dec
or
sub
negl
inc
mov
data16
aad
mov
dec
add
mov
or
mov
clc
popa
addl
ds
int
ficoms
push
add
outsl
mov
enter
loope
mov
adc
call
daa
popa
lods
lds
imul
sahf
adc
scas
xor
pop
sub
ret
jle
rcrb
xor
lods
fldt
or
or
pop
or
adc
inc
dec
frstor
mov
xor
sar
xor
pop
ljmp
mov
ds
pop
je
das
or
push
cmpsl
int3
loop,pn
xor
pop
jae
aaa
dec
pop
outsb
mov
jp
mov
sub
roll
mov
or
push
or
addr16
loope
dec
inc
fdiv
int3
sarb
jmp
test
cmp
pop
lret
xor
addr16
add
adc
fwait
mov
push
enter
push
leave
ficompl
nop
mov
and
xor
ljmp
scas
lea
pop
dec
mov
fsqrt
dec
adc
push
ds
aas
cmp
jge
push
fmull
inc
lds
imul
push
and
cmpsl
loopne
mov
inc
jg
leave
icebp
inc
xchg
mov
inc
push
shlb
pop
or
add
inc
xlat
stc
inc
sbb
sub
or
loopne
out
adc
mov
and
fcompl
and
inc
dec
pop
pop
jecxz
fwait
das
inc
sbb
dec
jl
lds
pop
cmp
mov
push
mov
aas
lods
dec
subl
mov
sbb
lds
mov
lds
lcall
add
sub
test
mov
xchg
xchg
pop
out
push
inc
daa
or
or
xlat
and
subb
ljmp
enter
push
xlat
out
in
dec
xor
dec
popa
ret
pop
push
add
adc
in
or
dec
pop
push
imul
adcb
dec
dec
xor
and
ret
lock
jge
cmc
js
imul
sbb
mov
dec
push
or
jae
cmp
lahf
xor
adc
js
lods
xor
adc
imul
data16
push
dec
pop
mov
jg
negl
ja
outsb
decb
fwait
test
sbb
data16
xchg
sub
mov
or
lcall
lods
stos
push
mov
xchg
jecxz
adc
and
push
jae
add
test
and
jmp
sub
cltd
xor
int3
cmp
dec
into
push
mov
ret
dec
nop
xor
inc
or
ficompl
push
pusha
int3
outsb
icebp
ret
dec
cmp
dec
loopne
inc
ss
pop
icebp
fdiv
jecxz
pop
sub
shlb
mov
in
push
leave
jg
mulps
enter
cmp
das
cmp
test
lods
push
ljmp
lret
lds
dec
push
rcl
push
pusha
add
and
sbb
mov
sbb
lods
add
lret
insb
and
jle
inc
xchg
aas
lds
pop
push
stos
pop
mov
jne
add
add
in
dec
sti
pop
or
push
push
cli
shrl
lea
aad
cmp
mov
sbb
cmp
inc
inc
stc
pop
neg
push
nop
or
add
leave
cmpsl
fadds
jb
cmpsb
repnz
aad
inc
sbb
popf
pop
in
jne
bound
sti
je
push
stos
push
lcall
xchg
repz
inc
movsb
repz
int3
loope
push
fistl
sbb
sub
ret
gs
in
pop
sbb
pop
mov
push
dec
divb
mov
pop
into
cmpsb
adc
subl
je
mov
push
xor
pop
xchg
mov
pop
add
test
test
imul
mov
inc
push
dec
stc
movsb
jnp
fldl
cmovo
adc
xchg
xchg
mov
sarl
sbb
adc
push
jne
aad
ret
jb
leave
int
inc
fiaddl
sbb
enter
ja
mov
add
adc
xchg
xchg
jns
mov
in
enter
mov
push
add
stc
mov
pop
es
rcr
xor
mov
sbb
jl
sub
push
pop
jp
pop
pop
add
push
mov
stos
sti
and
nop
scas
int
clc
pop
ret
mov
and
inc
pushf
sti
push
nop
xchg
aas
sbbl
popa
dec
aam
adc
xor
imul
inc
jp
imulb
adc
cwtl
jns
imul
mov
loopne
xor
lods
fisttpl
xchg
lea
sarl
mov
add
dec
adc
add
or
imul
jle
in
push
cli
cmp
pop
clc
imul
ficompl
cmp
inc
or
leave
adc
out
adc
sarl
call
insl
push
loop
cmp
cmp
test
add
fwait
dec
repnz
fisttpll
or
mov
inc
fmuls
xchg
sbb
jb
mov
xor
dec
hlt
ljmp
jp
jns
roll
adc
rol
sub
or
xor
and
xor
testl
pop
clc
dec
cmp
stos
xchg
clc
xor
jb
adc
in
dec
adc
pop
push
xor
mov
cmpsb
callw
lahf
shll
xor
inc
sar
daa
inc
mov
fwait
outsl
sahf
sub
jle
pusha
or
push
cmp
add
cwtl
or
shll
and
ret
sub
push
sub
mov
cmp
and
mov
popf
or
mov
ret
int3
inc
pop
jg
scas
jp
imul
sbb
xor
xchg
pop
cli
adc
dec
rorb
movsl
clc
dec
icebp
cmpsl
test
mov
pop
xor
add
arpl
mov
pop
sbb
gs
inc
cs
inc
and
sahf
mov
enter
imull
add
pop
jns
sbb
xchg
arpl
push
and
in
orb
test
mov
or
push
test
out
dec
dec
repz
test
dec
pop
push
mov
adc
sub
xor
jp
jecxz
and
pop
adc
inc
test
movb
sbb
add
cmp
sub
adc
out
pop
fwait
jge
out
or
fldenv
pop
jge
inc
adc
ret
or
icebp
or
movl
push
push
pop
test
popa
dec
inc
repz
sub
lcall
dec
popf
imul
xor
push
xor
adc
mov
mov
xor
fisttps
int
mov
sbb
bound
stos
sub
loop
and
add
cmp
adc
xchg
sbbb
pusha
mov
dec
dec
xor
or
aam
sbb
mov
or
ljmp
arpl
mov
pop
fisubl
xor
add
fldcw
in
adc
xchg
xor
stos
out
inc
jmp
dec
or
rcrl
bound
cmp
add
mov
dec
jecxz
sub
arpl
ja
add
pushf
sahf
ss
sub
cmp
cmp
in
out
stc
jge
dec
out
inc
inc
or
aam
data16
insl
pop
mov
js
dec
pop
movsl
xchg
int
jle
adc
sbb
sahf
enter
push
jecxz
inc
sub
sub
fdivs
sbb
scas
clc
bound
into
xor
test
fbld
test
cmp
idivl
lds
dec
push
fisttpll
cmp
inc
out
lea
cmp
mov
hlt
adc
push
clc
dec
inc
dec
add
add
inc
push
pop
adc
cmp
lods
bound
mov
scas
ret
out
lods
dec
cli
lahf
dec
int
enter
mov
rcll
loop
sbb
fldl
push
jle
mov
dec
fs
pop
pop
push
cmpsb
pusha
or
mov
inc
jne
scas
dec
loopne
or
movsl
jecxz
jbe
pusha
call
imul
jmp
fmuls
scas
sub
xchg
lahf
mov
aaa
dec
outsl
or
cmp
sub
imul
dec
mov
mov
xchg
iret
xchg
decl
and
add
in
mov
or
hlt
push
pop
cmp
mov
ds
mov
nop
dec
pop
xchg
lods
mov
fcmovu
mov
pop
arpl
and
xor
pop
pop
pop
outsl
in
sahf
mov
addr16
lret
sub
hlt
pop
ud2
push
dec
pushf
ret
sbb
nop
cli
cwtl
dec
fidivrl
xor
push
imul
rorl
or
mov
scas
mov
mov
dec
jb
stos
xchg
jne
dec
cmc
cmp
add
mov
adc
dec
test
jecxz
cltd
repnz
xor
dec
adc
ds
iret
out
sub
loop
into
cld
jl
inc
stc
jle
lods
lock
push
mov
add
xchg
shlb
aas
sbb
xor
dec
pop
push
sarl
out
inc
pop
js
lahf
into
pushf
sbb
subl
pusha
daa
test
inc
inc
xchg
int
pop
movsl
xlat
cmpsl
aam
cli
jno
xchg
push
push
out
mov
lret
lcall
popa
outsl
fwait
insl
inc
xor
cwtl
add
roll
mov
adc
popa
xor
or
in
fstps
mov
dec
inc
cld
cmpb
lahf
pop
test
xor
imul
push
and
xor
dec
jae
sub
out
fcomps
push
test
or
dec
scas
mov
int3
call
sbb
jb
add
loopne
inc
cmp
enter
inc
in
hlt
jmp
pushw
pop
push
nop
ret
or
pop
dec
and
leave
push
xor
test
mov
dec
subb
inc
imul
fs
and
sbb
pop
mov
dec
pop
insl
sub
in
mov
rcr
sbb
fstpl
inc
mov
pusha
add
pop
dec
repz
jmp
xor
stos
out
and
sti
sbb
mov
adc
icebp
negl
sub
pop
outsl
pop
addr16
cmp
push
out
dec
jge
rclb
add
push
rorl
data16
adc
and
loop
popa
test
dec
std
hlt
jo
mov
mov
fs
pop
push
mov
sub
mov
dec
xor
call
push
dec
add
mov
imul
push
or
cmp
inc
nop
jle
jmp
inc
fcomps
or
dec
jmp
test
in
sbb
inc
pusha
sub
insb
ja
movsb
xor
add
call
cmpsb
cs
fimull
iret
pop
jle
test
cmp
fcos
add
scas
or
dec
cmp
mov
aaa
jb
dec
cmp
mull
in
xor
inc
pop
dec
mov
add
or
scas
mov
js
mov
push
or
cld
ljmp
cmpsl
jo
dec
sub
nop
lret
in
dec
scas
lock
imul
shll
jno
mov
sahf
jg
repz
ja
sbb
xchg
scas
mov
push
cs
dec
adcl
loope
das
adc
scas
addr16
mov
and
sub
fbld
data16
push
or
xchg
imul
ss
stos
call
insb
jg
xor
and
jl
aas
mov
or
sbbb
xchg
je
icebp
sub
rcl
lods
inc
dec
add
dec
nop
sub
and
and
jp
fmulp
shl
inc
dec
xor
aam
call
xchg
push
xchg
pop
mov
flds
daa
add
sbb
je
leave
mov
adc
pushf
pop
or
es
push
jle
stos
movsl
pop
push
dec
xchg
shrl
aaa
pop
mov
inc
push
adc
pop
test
clc
icebp
mov
cmovns
jbe
dec
and
push
pop
mov
mov
ror
pop
addr16
lret
cmp
stc
mov
dec
popa
inc
lds
sub
imul
pop
dec
inc
dec
lea
adc
mov
data16
dec
jbe
mov
es
lret
mov
dec
pop
xchg
jp
dec
inc
out
icebp
adc
dec
iret
mov
aam
adc
aam
and
pop
adc
int3
xchg
jae
cmp
pop
sub
push
inc
iret
setnp
mov
add
mov
mov
mov
inc
call
dec
hlt
in
lods
push
out
lea
push
push
cmp
xchg
xchg
inc
and
sub
sar
dec
push
push
push
daa
ds
dec
xchg
aas
xor
pushf
testb
insl
mov
dec
adc
fnop
inc
imul
pop
lds
sahf
lret
clc
dec
movsb
in
sets
fsubr
scas
or
dec
mov
dec
rcrb
loop
sbb
jmp
arpl
cmp
shrl
xor
dec
mov
add
jp
or
and
add
subb
stc
nop
jge
pop
into
dec
pop
int3
jp
jmp
cmpsl
pop
pop
mov
pop
shrl
xor
fistps
jge
jo
int3
jb
pop
dec
dec
insb
inc
filds
scas
dec
or
dec
test
popf
dec
mov
fmul
xor
lods
mov
xor
iret
idiv
ds
stos
adc
in
cs
mov
notl
aaa
test
ret
jmp
repnz
pop
fisttpll
xchg
adcl
jg
pop
shl
daa
mov
sub
cmpsl
dec
repz
test
insb
addr16
push
xor
sub
repz
push
add
cld
aad
test
sub
mov
testl
addr16
dec
out
movsb
add
rcr
mov
dec
inc
sahf
cmpsl
out
int3
pop
pop
push
aad
jmp
shrb
adc
outsl
repnz
jle
int
inc
loop
ds
mov
dec
cmp
fcomip
inc
push
sub
cmp
ret
pop
xchg
xlat
xor
fimuls
mov
lret
and
xor
out
das
fstpl
test
push
push
cmp
mov
aaa
lea
outsb
push
ret
push
aas
push
repnz
int
daa
dec
pop
lret
scas
cmp
sbb
shlb
dec
mov
push
sahf
mov
dec
mov
pop
cmp
jmp
xlat
xor
cli
sbb
cltd
lods
cmp
dec
das
inc
pop
pop
xchg
lcall
inc
xchg
xchg
push
fldt
fs
outsb
test
insl
jmp
subl
dec
aam
int
lahf
pop
pushf
xchg
dec
gs
sbb
mov
dec
das
mov
push
lret
mov
popa
arpl
dec
and
or
push
sbb
add
into
jge
pop
adc
xor
ja
pop
dec
cmp
aad
test
imul
adc
mov
out
push
dec
pop
dec
jle
or
jns
add
push
js
out
jmp
adc
xchg
icebp
add
or
xor
mov
in
jo
push
pop
insb
or
clc
and
lock
imul
lods
add
cmp
xchg
int
cmp
test
push
pop
adc
mov
mov
mov
inc
out
and
mov
sub
sub
lods
or
dec
sbb
inc
dec
sbb
lret
pop
lods
loope
xor
out
jo
arpl
fisubs
into
mov
jnp
jae
dec
push
loopne
mov
test
push
sub
xor
cmp
sbb
das
sti
dec
test
sub
add
push
jl
jnp
add
test
ds
movsl
sub
inc
aam
lahf
mov
call
adc
inc
ficompl
dec
in
das
arpl
jmp
jb
push
int
xchg
fbstp
lock
mov
push
jl
call
adc
push
inc
inc
ss
out
push
lds
sbb
test
cwtl
ret
aad
push
cltd
pop
mov
rclb
ficoml
pop
orb
shll
inc
int3
cmp
xchg
leave
mov
cmpsl
mov
mov
adc
or
sub
jno
xchg
clc
sub
int
mov
test
push
mov
adc
dec
es
inc
incb
stos
mov
dec
xor
mov
adc
add
jae
pop
test
mov
icebp
jo
dec
jae
std
and
popa
inc
das
nop
scas
xlat
fwait
cltd
inc
in
pusha
leave
shrb
mov
in
sbb
das
sahf
subb
sbb
mov
repnz
divl
and
scas
push
inc
mov
inc
xor
popf
into
sbb
or
mov
inc
dec
insl
xor
addb
pushf
push
mov
push
or
shl
popa
dec
or
inc
imul
and
xor
dec
sub
xor
jnp
in
aam
mov
cmp
movsl
sub
mov
ss
cltd
sbbl
push
xlat
dec
cltd
ror
and
subl
push
dec
mov
scas
inc
movsl
ljmp
insl
jge
sbbl
xor
outsb
jnp
sti
cmc
icebp
jbe
in
jb
push
je
dec
dec
pop
ror
or
adc
and
mov
leave
out
mov
jno
pop
push
pushf
sbb
and
or
imul
pop
out
scas
push
loop
sti
dec
fmul
pop
xchg
mov
outsb
push
xchg
jb
mov
mov
xchg
jnp
out
int
or
test
fisttpl
sti
mov
and
subb
nop
push
sahf
fisttpll
or
dec
or
fdivr
dec
imul
xchg
or
sub
in
and
stc
mov
pop
fbld
cmpsb
aam
jecxz
iret
mov
daa
pop
push
ja
jmp
xor
movsl
popa
cmp
call
ja
adc
dec
mov
fcompl
or
in
push
aaa
aas
jl
insl
or
jnp
pop
dec
dec
sub
scas
pop
into
imul
dec
pusha
jo
insl
pop
dec
or
aas
jno
scas
xor
js
and
pop
xor
jmp
xchg
outsb
pop
pop
test
dec
aad
inc
sbb
mov
dec
pushf
into
add
in
and
push
jns
clc
ja
pop
bound
scas
popf
mov
fcmovne
fcompl
push
fdivrp
dec
imul
shll
lahf
mov
out
cli
cmp
or
or
mov
xchg
push
cld
pop
negb
enter
mov
test
lea
dec
fisttpll
mov
ljmp
add
cmp
sti
inc
mov
add
popa
dec
mov
cmp
pop
pop
in
add
sbb
sub
fldcw
and
into
adc
clc
add
sub
lds
inc
jae
out
ljmp
dec
int
adc
sub
gs
out
push
cmpsb
repz
in
mov
popa
and
adc
push
icebp
arpl
inc
push
push
cmpsl
adc
add
jne
sub
fiadds
loop
mov
pusha
dec
movsl
jp,pn
movsb
mov
sub
xchg
nopl
repz
pop
push
hlt
push
iret
jns
orl
inc
das
jmp
cs
mov
xor
adc
jmp
ret
sbb
jne
outsl
mov
mov
cli
fstps
push
insb
fnsave
dec
fsubs
pop
imul
dec
pop
test
enter
ss
imul
mov
and
add
push
pop
push
add
ret
inc
call
inc
loope
test
insb
jp
mov
pop
and
inc
filds
mov
inc
dec
push
je
pop
ja
pop
mov
stos
or
xor
setnp
mov
xchg
pop
dec
mov
cmpsb
or
xor
stos
mov
dec
dec
jo
mov
or
push
sbb
int3
sub
imul
or
dec
fiaddl
mov
inc
inc
fsubs
mov
cmpsl
xlat
aaa
jmp
xor
add
sbb
jbe
jno
in
cld
sub
int
push
pop
fisttpl
mov
outsl
sti
mov
aaa
mov
lds
add
mov
push
inc
pop
dec
scas
mov
dec
ficoml
arpl
xor
lahf
dec
aam
int3
dec
aas
push
test
pop
add
roll
shrb
sti
push
dec
mov
mov
or
inc
jmp
pop
ror
push
enter
add
dec
mov
call
sbb
sub
push
leave
fstps
dec
pop
mov
add
sti
call
dec
pop
pop
jg
mov
cmp
mov
mov
inc
adc
xchg
setle
int
es
push
add
inc
or
mov
xorb
mov
xchg
push
dec
popa
rcll
jmp
inc
aam
sti
sub
insb
movsl
into
sbb
pop
aas
sbbl
pop
add
fdivp
arpl
push
xchg
mov
push
pop
add
pminsw
in
imul
mov
movsb
sub
xchg
pushf
sub
outsl
push
mov
subb
loope
out
movsl
mov
dec
or
pop
fwait
mov
inc
dec
inc
inc
pop
push
mull
sbb
in
hlt
dec
sbb
ds
or
subl
arpl
add
mov
ds
inc
stos
dec
sub
clc
ss
fs
push
jbe
je
inc
mov
inc
mov
or
mov
in
test
fstpl
xor
push
fidivs
pop
enter
add
dec
nop
push
mov
stc
dec
adc
and
fmuls
cmp
insl
or
dec
in
dec
popf
mov
lock
int3
cmp
dec
or
js
and
dec
mov
dec
jns
dec
mov
in
pop
jmp
or
pop
mov
dec
pop
dec
arpl
fwait
out
and
pop
or
in
mov
mov
callw
cmp
das
mov
fxtract
in
xor
out
leave
imul
cs
inc
mov
cmp
es
test
addr16
movsl
inc
sahf
mov
mov
dec
and
insl
dec
inc
pop
pushf
xchg
xchg
jb
push
mov
jmp
dec
inc
adc
push
dec
mov
sub
push
insl
xor
inc
sbb
fistpl
adc
dec
inc
jmp
xchg
pop
rorl
push
xor
inc
pushf
or
outsb
bound
xchg
loop
aad
dec
out
cld
decb
dec
stos
cmpsb
sub
sub
mov
aam
cltd
inc
enter
mov
cmp
into
fists
lret
dec
push
jae
fisubl
jl
jge
jo
jg
loope
add
cmp
je
stc
jmp
int3
es
jmp
repz
push
sahf
fucomip
in
stc
inc
add
ret
rcll
mov
pop
jmp
push
mov
dec
int
adc
sbb
cmc
dec
xor
xlat
sub
fs
push
mov
orb
into
add
dec
xor
xor
ljmp
cmpsl
test
jp
sub
jbe
fsubrl
pop
push
inc
dec
xor
ret
out
jno
cs
cmp
jo
cmc
pop
in
push
dec
loopne
and
imul
je
jmp
xor
mov
cmp
push
jne
loope
rorb
inc
xchg
jbe
ds
push
dec
xor
movsl
xor
and
or
cltd
xchg
aam
mov
mov
call
lahf
inc
mov
push
dec
push
dec
adc
insb
stos
sbb
jmp
pop
pop
push
iret
ja
or
xor
inc
mov
or
mov
xchg
call
aaa
cli
ja
sub
aam
add
lods
outsb
mov
push
jbe
xor
loope
shlb
or
shll
xchg
out
mov
imul
leave
jp
sbb
mov
js
rorb
rcr
out
popa
push
sub
lods
and
ja,pt
cmpsl
mov
xchg
addb
cmpsl
dec
xchg
sub
and
xchg
clc
in
dec
pop
cmpsb
repnz
add
das
daa
sub
jge
call
lret
sarl
push
jo
adc
xchg
ret
mov
inc
cmpsl
rorl
es
push
in
loop
imul
sbb
aas
mov
test
rol
add
inc
iret
ret
inc
nop
sti
sub
fnstsw
cli
arpl
mov
stc
mov
dec
cmp
sub
cli
push
pop
dec
add
inc
lods
sbb
inc
ret
or
mov
insl
push
or
fwait
mov
jecxz
in
push
sbb
lock
inc
dec
int3
mov
push
test
inc
rorb
stc
jg
xor
rorb
add
adc
push
arpl
sbb
leave
sbb
jl
aaa
dec
lret
cld
xor
lock
int3
fcmovbe
dec
adc
rcll
ret
xor
fdivrs
and
imul
mov
fbld
pop
cmpl
leave
inc
xor
ret
mov
push
and
mov
mov
push
stos
mov
pop
pop
or
xor
out
fistpll
aad
add
pop
dec
cmp
xor
xlat
inc
sub
sbb
and
add
push
jecxz
xchg
movsl
add
mov
popa
and
push
pop
push
mov
push
fs
cli
pushf
scas
push
out
or
fldt
ret
inc
loope
dec
shr
pop
subb
nop
cwtl
sarb
dec
dec
jge
test
push
lret
mov
or
push
push
into
pop
xor
push
ret
notl
adc
sarb
aam
adc
repnz
xor
mov
insb
fdivrs
mov
sbb
lret
mov
push
sbb
pushf
scas
cmp
into
or
dec
pushf
popf
sbb
cmpsl
dec
lock
push
inc
add
dec
addr16
lret
mov
les
push
lods
or
or
loop
mov
ss
scas
cmp
mov
jmp
inc
mov
cmp
cmp
xchg
mov
dec
inc
adc
inc
sbb
push
inc
bound
pop
mov
xor
mov
pop
pop
jp
clc
fimull
dec
lcall
notb
call
push
sbb
inc
add
mov
daa
mov
sub
mov
scas
jb
mov
pop
shlb
add
jp
rclb
or
inc
xchg
add
adc
inc
jp
lods
dec
enter
test
pop
xor
pop
test
and
insl
add
mov
push
and
push
or
push
mov
add
sbb
push
push
cmp
dec
subl
shrl
sbb
and
aaa
xor
fdivrs
mov
pop
dec
push
scas
inc
loopne
inc
ja
jl
jle
jnp
or
mov
jecxz
push
lods
lock
xchg
sbb
adc
dec
and
imul
lret
test
jge
das
in
aad
sbb
in
dec
cltd
xchg
pop
jbe
push
dec
push
sbb
ret
fwait
std
rolb
inc
mov
addl
push
cmp
sbb
in
pop
sbb
pop
aaa
les
sub
and
dec
xlat
inc
mov
inc
cwtl
movsb
fs
scas
inc
push
cltd
sahf
shll
or
mov
sub
cmp
pop
dec
mov
jle
sahf
jecxz
jmp
cmp
add
cmp
jno
jne
sbb
repnz
cwtl
or
or
es
mov
into
aad
imul
ja
orb
bound
es
mov
xchg
xor
cltd
push
imulb
cmp
idivl
lea
push
cmp
inc
pop
bound
xchg
mov
iret
ror
sub
push
add
mov
in
mov
call
popa
mov
adc
pop
fcmovbe
and
je
mov
push
jge
lea
iretw
les
lds
cmp
sub
imull
jne
push
or
fs
inc
stos
cmpb
leave
adc
mov
aam
lea
and
sarb
in
sti
sar
pop
arpl
mov
stos
push
test
aas
xchg
orb
mov
push
pop
ret
lock
insb
arpl
adc
pop
mov
test
aaa
addl
mov
dec
lods
aad
pusha
out
mov
push
sub
and
dec
das
mov
dec
neg
call
lods
xorl
and
xchg
push
cmp
or
pop
jg
lods
xor
and
add
imul
lret
dec
insl
lahf
sub
lret
pushf
into
push
inc
dec
or
cmp
ljmp
jecxz
mov
icebp
inc
ds
inc
cld
dec
cmpsb
xor
nop
dec
and
jge
mov
xor
add
cmp
push
pop
xchg
lods
mov
lret
pop
push
add
pop
mov
inc
gs
dec
inc
xor
mov
ljmp
pop
inc
icebp
mov
faddl
sarl
cmc
cmp
shrb
jp
aaa
push
sbb
mov
mov
cmp
mov
cmp
outsl
call
sub
insl
es
or
inc
es
inc
enter
arpl
jns
push
into
push
addr16
lock
jmp
pop
and
pop
adc
mov
and
subl
and
xchg
or
xor
nop
mov
int3
cs
adc
add
fnstcw
mov
jae
popf
xlat
pop
xor
cmpsb
cmp
push
lods
adc
pop
push
adc
mov
or
arpl
aam
inc
pop
pop
push
fildl
int3
cltd
data16
inc
adc
pop
out
xor
xor
adc
xchg
dec
inc
mov
std
mov
mov
pop
enter
or
fwait
dec
ljmp
test
outsb
sbb
dec
mov
sub
cmp
movsb
das
xor
mov
jge
xchg
std
pop
enter
pop
lea
fstpl
mov
mov
mov
mov
out
push
pusha
mov
pop
jl
inc
dec
cmp
xchg
xor
push
mov
inc
cli
dec
mov
jle
js
stos
add
mov
add
inc
pop
jle
int3
or
inc
clc
fcoms
sub
xchg
iret
and
lds
lods
insl
imul
lea
repnz
sarl
arpl
in
push
ret
lods
mov
pop
jmp
cmp
pop
and
mov
movsb
or
xor
lods
inc
fstpl
pop
pop
bound
xchg
mov
bound
lret
stos
popf
mov
add
mov
and
cld
jmp
adc
mov
mov
stos
sbb
xchg
loopne
das
cmp
sub
pop
sub
inc
push
std
es
adc
push
je
jle
mov
movsl
xor
xor
cmp
push
xchg
sub
inc
mov
adc
repz
lret
jle
nop
leave
dec
push
jecxz
pop
cmp
mov
cmp
inc
outsl
mov
mov
into
aaa
sub
jmp
xor
inc
fildl
ja
sti
or
jbe
push
out
mov
xor
push
and
sbbl
dec
push
xorb
cmpsl
dec
mov
jnp
icebp
loop
mov
xlat
jns
push
fcmovnbe
test
rcll
sub
out
lcall
jae,pn
lret
rorb
dec
jge
dec
mov
or
popa
add
lods
add
inc
bound
pop
dec
pop
jns
adc
js
cmp
mov
outsl
and
sti
pop
xor
jp
mov
sub
fimuls
repnz
arpl
add
jp
pusha
out
inc
push
sub
push
sbb
mov
std
stc
inc
loopne,pn
inc
mov
dec
sbb
cmp
cmc
xor
jmp
cmp
push
dec
mov
pop
sub
ret
pusha
imul
mov
sub
mov
cmpsl
icebp
jnp
std
jmp
sahf
mov
roll
insb
xor
in
pop
dec
dec
mov
out
jle
or
xchg
pop
and
xor
and
dec
int3
jp
fdivr
push
xchg
jne
mov
dec
ret
inc
sub
pop
pop
mov
sub
or
dec
loop
sub
mov
das
fmull
push
sbb
jp
stos
xchg
int3
je
imul
int3
cmpsb
in
dec
clc
rcll
jge
fimull
stos
jl
call
mov
sub
dec
icebp
mov
loopne
mov
mov
frstor
outsb
dec
imul
push
mov
add
fidivl
fldcw
push
push
pop
push
inc
xor
cmpsl
sar
dec
inc
test
out
add
inc
insl
clc
push
mull
sbb
int
shrb
sub
xchg
push
or
lret
or
inc
cmpsb
mov
mov
scas
pop
pop
jbe
iret
pop
sbb
movsl
rcrl
push
ds
pop
stos
mov
cltd
push
xchg
jmp
ss
int
pop
inc
int3
in
lock
push
loope
frstor
int3
sub
dec
mov
sub
leave
adc
xchg
int
sbb
xchg
mov
leave
sbb
imul
cmp
es
rcll
mov
in
mov
push
jo
pop
cltd
jp
cmp
in
dec
pop
test
sub
mov
lds
mov
inc
iret
push
xchg
cmp
lods
aaa
cs
fstl
adc
enter
int
shrb
fstps
mov
sub
cmpsb
or
or
pushf
jno
fmuls
jecxz
cltd
in
push
jg
in
sbbl
cmpsb
xchg
repz
and
shrb
mov
or
or
fsts
adc
jno
xchg
in
lret
fcoms
push
dec
ja
dec
xchg
jno
pop
xor
fimuls
and
and
jle
jecxz
mov
add
jo
sub
or
dec
adc
pop
fstpt
idivb
push
imul
mov
pop
sti
mov
test
push
pop
adc
sbb
cmp
lock
sbb
lea
cmpsl
mov
xchg
rcrl
jae
add
pop
pop
mov
mov
fs
es
fwait
dec
shl
push
lds
dec
into
push
clc
inc
xor
clc
push
mov
cmpl
inc
push
adc
lock
xchg
ret
pushf
inc
leave
mov
arpl
xchg
cmp
mov
pop
call
xorb
sub
mov
cmp
dec
jecxz
fdivl
xor
push
rol
fisubrs
lea
andl
inc
aas
and
pop
sahf
lock
cmp
xchg
push
push
adc
jle
cmp
pop
cmpsl
sub
inc
adcb
fwait
incb
into
dec
push
stos
js
out
mov
and
cmpl
xor
xor
mov
pop
cltd
popa
test
or
jno
xchg
add
cs
loop
dec
scas
inc
xor
and
xorb
push
sbb
xor
adc
adc
dec
ret
mov
mov
jno
repz
add
mov
mov
xchg
pop
mulb
jecxz
sub
jno
dec
cmp
lret
nop
imul
test
jp
and
leave
adc
dec
or
pop
idivb
fsubrs
subb
aas
sub
ret
push
add
pop
aad
ret
inc
sbb
popa
lods
cmpsl
dec
jge
dec
push
push
fs
into
sbbb
dec
ret
insb
jecxz
or
mov
pop
pop
inc
call
sarl
xchg
xchg
xor
into
pop
push
adc
arpl
sti
inc
mov
fwait
mov
ss
sti
mov
add
cmp
xchg
inc
xor
enter
inc
rcrl
mov
pop
js
or
pop
fs
and
mov
xor
xchg
mov
mov
mov
jecxz
mov
loope
xchg
push
pop
inc
pop
popf
ljmp
jecxz
imul
cmp
enter
mov
fwait
arpl
jnp
ret
add
mov
ja
lods
dec
inc
out
in
and
fcomps
int3
add
push
mov
xor
sub
and
dec
adc
test
xlat
hlt
inc
sbb
loop
lods
outsl
sub
and
jecxz
mov
test
sbb
js
in
xchg
sub
lock
dec
cmp
dec
cld
jge
push
xchg
push
mov
and
in
sub
je
lods
shlb
daa
cli
call
call
xor
jg
inc
jg
add
add
jnp
dec
xor
pop
cmp
inc
int
js
sbb
sub
and
inc
inc
insb
push
inc
pop
push
ss
mov
jecxz
daa
je
and
scas
rolb
orl
push
inc
cmp
sbb
dec
dec
xorb
push
or
clc
xor
out
sub
mov
cmp
push
pop
outsb
dec
test
out
in
sbb
flds
fcoms
in
mov
fsubrs
into
inc
imul
mov
pop
fnsave
push
push
ds
push
and
pop
in
imul
cmp
dec
add
dec
loop
out
int
adc
test
sub
int3
jmp
stos
jns
sti
test
add
data16
or
push
sar
outsb
mov
push
push
les
mov
in
sbb
and
sbb
ret
jns
xor
daa
rol
insl
push
xchg
call
pop
sti
out
inc
test
and
ja
repz
test
pop
das
test
push
rorl
in
pop
pop
adc
das
cld
pop
je
in
dec
fadd
pop
ret
mov
add
lret
sub
or
fisttpl
stos
jmp
sub
pop
ljmp
xlat
insl
jecxz
lods
out
lods
insb
inc
jle
adc
stos
sti
push
dec
loop
and
int3
out
pop
inc
mull
xor
lds
and
iret
cwtl
test
jnp
mov
int3
adc
add
sti
ror
pop
std
ljmp
mov
jle
dec
xchg
mov
leave
cmp
lret
adc
ret
js
out
inc
or
xor
mov
inc
jp
cltd
mov
jmp
adc
sbb
and
and
xchg
test
sub
outsl
test
inc
xor
loopne
out
add
daa
movsl
cmp
dec
mov
and
jl
dec
pop
insl
lcall
push
sarl
sub
jmp
xor
xor
into
add
loope
cmp
cmp
cmpl
push
dec
mov
sbb
fldl
cld
push
and
jns
dec
insl
sub
aam
pop
inc
outsb
mov
fldz
push
inc
jecxz
pop
jmp
or
push
add
xchg
xchg
subl
pop
jle
lock
dec
aad
pop
dec
sub
adc
das
ja
pushf
mov
leave
adc
mov
lods
inc
sub
in
jne
mov
les
outsb
xor
sbbl
push
cmp
push
pop
pop
sub
or
fwait
push
add
and
jbe
sub
lds
hlt
test
int
sub
push
sahf
and
cmp
push
inc
icebp
mov
mov
or
push
cmp
stos
int3
xchg
lcall
rcl
xor
cmp
xor
sbb
bound
jae
add
jnp
jae
fcompl
mul
inc
xchg
aaa
mov
lds
push
aad
inc
leave
cmp
inc
roll
cmpsl
dec
mov
mov
gs
in
mov
mov
cmpsb
cmp
loop
sub
fnsave
ss
xchg
dec
shl
add
fstps
lret
push
pop
sub
push
and
mov
pop
add
cs
gs
jl
and
fwait
cmp
enter
pop
movsl
xchg
ret
mov
loope
inc
push
sbb
roll
loop
inc
test
mov
in
jno
gs
fcom
lahf
adcb
cltd
aas
xchg
sub
pop
jp
andl
or
dec
inc
jmp
dec
dec
scas
pop
loop
dec
jbe
add
leave
pop
mov
fnstsw
cli
mov
pop
push
iret
add
mov
cmp
dec
rolb
add
or
push
scas
les
pop
lods
mov
xchg
fs
adc
hlt
repz
out
or
lret
lds
or
leave
shrb
mov
dec
jbe
dec
and
push
sub
push
iret
sub
scas
pop
fsubrl
lods
imul
dec
jns
dec
pop
ds
sub
int3
dec
xor
enter
adc
mov
outsl
mov
adc
shl
mov
adc
subl
div
repnz
popa
pushf
in
int3
movb
lds
adc
add
inc
jmp
jmp
data16
arpl
icebp
pop
sbbb
xor
repnz
std
mov
adc
inc
push
inc
in
dec
lods
arpl
mov
lret
pop
fidivrl
cmp
mov
pop
adc
xlat
push
lods
mov
inc
xchg
sub
pop
cmove
jmp
inc
and
pop
shl
dec
adc
dec
popf
xor
pop
sbb
iret
mov
xchg
jle
mov
xor
es
pop
jo
add
scas
fwait
mov
cmp
inc
popf
xor
stc
add
mov
inc
call
ret
lcall
pop
aad
test
dec
fisubl
inc
mov
or
cmpsb
push
mov
mov
into
dec
lock
out
pop
jmp
lcall
gs
lea
dec
xchg
adc
inc
pop
cmp
jnp
push
shrb
inc
clc
jmp
sub
mov
jle
pop
push
sti
sbb
add
sub
jecxz
pop
jno
std
mov
pop
mov
pop
xor
pop
sbb
inc
push
sar
adc
inc
inc
lcall
add
dec
fisttpl
pop
add
dec
mov
xorl
cmp
dec
lds
cmp
dec
addr16
pop
ror
mov
mov
adc
psllw
jo
lock
iret
test
call
push
sbb
fnstsw
stos
adc
leave
and
call
xor
add
or
sbb
call
inc
push
push
rcrl
sub
pop
push
adc
lea
or
repz
push
in
movsl
push
add
ss
addl
and
adc
lods
inc
dec
push
ret
scas
out
inc
mov
dec
lahf
push
negb
inc
or
fs
cmp
add
cmp
pop
xor
movsl
pop
mov
addr16
out
or
stos
imul
dec
sahf
je
scas
ds
hlt
cld
in
pushf
dec
lcall
mov
xchg
pop
cmc
xor
mov
sub
push
fiaddl
ljmp
in
mov
aas
add
jae
push
enter
jge
and
fcomip
or
testb
cltd
insb
mov
out
jmp
jg
inc
jbe
mov
aad
mov
xor
call
fdivs
adc
repz
and
std
stos
jg
dec
xchg
inc
mov
push
xlat
mov
push
dec
inc
icebp
mov
lds
je
rcll
call
pop
lds
and
push
jo
xor
popa
lods
inc
movsl
mov
xor
xchg
push
xchg
and
inc
je
mov
lea
dec
cmp
and
nop
arpl
push
pop
sti
and
or
jbe
xchg
rcll
ds
bound
sarl
and
hlt
inc
inc
pop
jmp
sub
int
pop
mov
dec
jne
cmp
sahf
outsl
jge
push
and
ss
push
fsubrs
xor
scas
dec
int
push
or
stos
add
sbb
cmp
ret
mov
xchg
jl
leave
xchg
subl
add
add
dec
test
inc
sahf
dec
fldl
ret
icebp
adc
xchg
cmpb
mov
lds
rol
pop
mov
dec
pop
pop
mov
mov
int
test
pop
in
popf
jecxz
cwtl
push
add
inc
or
adc
mov
je
add
and
inc
insl
adc
pop
lods
inc
xor
loop
ja
enter
pop
xchg
push
add
dec
add
mov
add
jg
or
adc
dec
in
mov
sbb
cwtl
xor
sbb
add
sub
mov
scas
push
mov
mov
and
orb
pop
in
and
cmp
sbb
insl
mov
cmp
xchg
and
cmp
fisttpl
xor
xchg
pop
adc
roll
fxch
xor
shll
fcmovne
ret
xchg
xor
or
ds
imul
sbb
into
mov
inc
sub
imull
iret
rep
nop
ret
iret
sbb
jo
sub
and
jmp
fcmovu
ficompl
sahf
lods
push
push
cmpb
or
cmp
push
mov
leave
fimull
pop
add
dec
clc
mov
and
sub
aas
add
jbe
cli
mov
in
adc
or
xchg
sub
popf
imul
shlb
insb
sbb
aaa
dec
out
xor
fcompl
add
stc
pop
xor
popf
xchg
mov
pop
add
mov
add
xchg
dec
and
sahf
xor
adc
sbb
lods
rcrb
mov
leave
mov
cmp
fisubl
xchg
sub
jnp
dec
stos
out
dec
adc
sbb
sub
xor
cmpsb
call
jg
jecxz
clc
sub
xor
pop
imul
jb
push
dec
xchg
sub
ficompl
fsubrs
dec
inc
xchg
shrb
push
pusha
push
add
inc
rcl
add
xor
imul
pop
clc
imul
mov
jecxz
sub
lock
ficoml
inc
add
in
aas
pop
ret
jmp
inc
cli
cli
mov
cvtpi2ps
hlt
inc
fildll
popf
fnstcw
ds
leave
out
sbb
mov
jmp
jb
dec
push
jae
adc
pop
hlt
ss
mov
lcall
pop
push
or
lret
daa
cmpb
out
inc
inc
lods
loope
push
lcall
push
sarb
lock
or
jmp
push
int
sbb
cmp
and
das
xchg
jle
and
push
jbe
cld
pushf
scas
pop
mov
fcmovb
cmc
test
das
adc
rcrb
and
mov
rorb
punpcklwd
fcmovbe
push
push
add
mov
add
or
jmp
popl
sub
enter
imul
inc
mov
orb
inc
subps
add
out
dec
add
cmpsb
lock
mov
sub
imul
push
jmp
lods
hlt
dec
xchg
pop
add
enter
or
xor
pop
je
repz
andl
mov
aaa
rcl
xor
fidivrl
cmovae
ss
fstps
mov
cld
sbb
in
ja
enter
sbb
ss
inc
lds
mov
dec
and
add
ror
cmp
ret
bound
dec
pop
fiaddl
xchg
test
push
cmp
out
data16
dec
dec
push
insl
and
ret
xor
aas
aad
mov
pop
and
ljmp
stc
pop
mov
mov
push
inc
mov
jbe
outsb
lds
dec
push
add
lods
cmp
es
arpl
call
or
mov
pop
shrl
dec
sub
add
lods
jl
push
fwait
inc
rcrl
dec
nop
jnp
adc
xor
aaa
mov
subb
mov
dec
jecxz
mov
jo
jnp
add
inc
or
inc
faddl
cmp
adc
adc
imul
push
jbe
repz
lods
and
push
dec
inc
mov
cmp
mov
es
rclb
jge
lea
gs
mov
push
and
add
sbb
sti
sub
lret
out
rclb
xor
insl
lret
dec
insl
rcll
jno
sbb
into
cltd
int3
push
int
fstp
or
jge
clc
pop
mov
pop
sbb
add
push
push
loop
cmp
ds
in
in
mov
xchg
sbb
fs
iret
fildl
hlt
mov
movsl
add
and
mov
xchg
xchg
xchg
movsl
inc
fcompl
sbb
aam
call
push
dec
xor
mov
lret
aam
inc
fistpll
or
add
sbb
lret
dec
and
and
ds
jns
leave
in
xor
imul
mov
ss
mov
lret
sbb
mov
sti
rcrl
adcl
or
jle
aam
pop
imul
xchg
in
jl
sub
inc
inc
addr16
sub
xchg
outsl
lods
and
rcrl
push
sbb
add
add
inc
pop
jne
in
push
sbb
or
inc
std
leave
push
jo
cmp
sbb
mov
push
push
out
jle
mov
int3
inc
ret
or
std
mov
fisubrs
int
add
or
imul
mov
jnp
mov
inc
xor
dec
call
lcall
out
mov
or
mov
xchg
cmpsb
int
rcrl
add
xchg
addr16
jecxz
push
int3
inc
and
add
mov
adcb
iret
xchg
lods
lods
cltd
inc
push
push
jp
adc
mov
adc
sub
inc
cs
push
inc
mov
insb
cmp
fcompl
inc
xor
or
mov
fdiv
stos
inc
sbb
mov
or
cmp
push
outsb
jl
mov
jmp
or
jg
les
ror
ljmp
sub
push
sbb
jle
mov
push
scas
insl
or
or
shrl
xchg
sahf
or
pushf
sub
xchg
cltd
les
lea
cmp
insl
mov
sub
out
aas
js
push
fnstenv
push
push
xchg
lahf
in
outsb
push
lock
arpl
mov
dec
cmp
add
imul
dec
test
pop
ljmp
xor
and
mulb
fs
pop
push
imul
jns
dec
clc
sti
outsl
mov
add
out
lds
icebp
cmp
cmc
add
jp
push
lret
scas
inc
push
jl
xor
mov
sub
mov
push
add
pop
ret
arpl
xchg
scas
out
rorl
and
jge
imul
jns
cs
aad
call
dec
gs
sbb
ja
cmp
scas
call
push
add
clc
mov
inc
mov
shr
xor
mov
aas
inc
sti
imul
mov
xchg
dec
inc
popf
jmp
or
or
adc
movl
lret
inc
adc
inc
xor
xor
sahf
or
push
fisttpl
sub
test
insl
push
sub
adc
pop
into
fst
and
insb
iret
push
popf
fldcw
add
pop
pushf
js
dec
push
das
and
xor
iret
imul
enter
inc
pop
mov
pusha
add
data16
pop
roll
and
mov
loopne
arpl
xchg
mov
and
sub
sub
pop
mov
dec
ss
sbb
cli
pop
add
lcall
leave
and
fisubl
dec
dec
imul
xor
and
mov
sti
inc
test
cs
or
xchg
push
arpl
aas
adc
cmc
pop
jg
and
lret
dec
xor
xor
iret
mov
adc
adc
loopne
negl
or
sub
ret
ljmp
cmp
mov
mov
clc
stc
mov
dec
jns
adc
pop
lock
popf
insb
or
scas
inc
sub
add
mov
mov
test
fcomps
sbb
jmp
pop
test
mov
xor
mov
and
sub
dec
rolb
out
pop
and
pop
inc
icebp
dec
in
sub
and
push
adc
imul
inc
push
inc
sbb
iret
xor
lea
test
mov
mov
jbe
xor
nop
cmp
xor
lret
mov
leave
xor
stos
rolb
js
lods
pushf
pop
and
aaa
ds
fcmovbe
arpl
xor
xor
sarl
cmp
sub
aaa
ret
cmp
sbb
jl
mov
dec
adcb
cli
rolb
jge
outsl
cmpsl
or
sub
lcall
adc
push
mov
cmp
js
sahf
mov
xchg
adc
insb
push
dec
dec
push
push
repz
mov
mov
repz
cmp
mov
mov
out
push
sub
fisubl
rcll
cmp
fsubrl
xchg
inc
das
add
insl
lret
in
mov
jmp
mov
pop
dec
ffreep
inc
mov
fimuls
or
pop
mov
cmp
orb
xor
repz
push
icebp
sbb
mov
mov
sbb
lcall
imul
pop
inc
inc
lret
add
leave
jp
mov
mov
dec
pop
addr16
xchg
pop
out
test
roll
cmp
and
decl
pop
addb
jg
arpl
add
jae
and
dec
stos
push
and
insb
sbb
stos
fisttpl
cmp
push
out
cwtl
sub
int
sub
sbb
pop
out
sub
sti
dec
das
aad
in
roll
mov
push
xchg
add
inc
push
mov
insl
in
mov
pop
imul
popf
pop
aad
xor
push
mov
bound
jecxz
pop
in
call
loopne
je
inc
push
inc
stc
cmc
mov
sub
jp
ret
jmp
pop
cld
roll
dec
mov
test
and
mov
push
adc
and
mov
cmpsl
repz
int
cld
dec
push
outsb
lahf
cmp
inc
movsb
lods
mov
inc
inc
bound
sub
mov
inc
nop
pop
lcall
dec
cmp
push
movsb
repz
cld
sbb
adc
idiv
jge
jle
rcll
xor
int3
shlb
pop
imul
pop
mov
mov
xor
ret
decb
inc
ds
dec
pusha
mov
mov
int3
leave
or
and
xor
aad
pop
pop
int3
mov
add
push
ret
and
pop
sub
push
push
cmp
insb
and
dec
dec
sub
pop
sbb
pop
fisttpl
enter
sub
mov
pop
adc
mov
dec
dec
xchg
dec
fwait
cmp
and
xchg
fld1
dec
lcall
sub
cmc
leave
notb
mov
cwtl
sub
int
xor
mov
sbb
jo
shl
sbb
dec
dec
inc
lret
lcall
bound
inc
test
dec
pop
les
inc
arpl
xlat
lret
sbb
call
lcall
rcrb
dec
pop
inc
xor
fcmovb
sahf
popa
mov
sbb
push
mov
ds
xchg
or
ja
movsl
push
ret
and
push
call
int
sbb
jno
jnp
or
push
les
push
adc
xlat
inc
sub
cli
xor
insl
mov
mov
sub
sbb
out
xchg
or
pop
out
or
in
xchg
andl
repz
fidivl
mov
push
addr16
icebp
push
xor
and
add
sub
xor
xchg
rcll
leave
inc
push
fidivrl
data16
push
add
sbb
and
dec
xor
in
pop
jae
lea
imul
push
pop
adc
addl
pop
mov
mov
mov
out
inc
and
lret
mov
dec
add
pop
sub
add
lods
xor
cli
cmp
sub
out
es
ror
inc
push
cmp
sub
push
push
mov
mov
leave
loopne
jne
insl
cmpl
out
mov
repnz
psubb
jo
ja
scas
dec
imul
fistpll
mov
pop
add
int
leave
sbb
mov
push
dec
not
nop
testb
hlt
clc
ret
jne
rep
jmp
xchg
shll
stc
paddw
mov
fxch
push
sub
cmpsl
pusha
pop
dec
adc
leave
cli
sahf
mov
or
push
scas
lods
mov
test
dec
inc
mov
jne
inc
jle
inc
sbbl
das
push
cmp
ret
xchg
cmpsl
xor
push
or
ret
mov
mov
mov
add
adc
jg
mov
cmpsl
dec
sbb
fldenv
js
or
mov
sub
sbb
pop
pop
inc
out
pusha
pusha
pop
cmp
adc
sar
ficoml
inc
xchg
imul
sub
aam
or
xor
push
add
je
mov
cmpsl
sub
xchg
inc
inc
push
push
inc
jg
mov
jmp
shr
inc
jmp
mov
repz
out
rcll
fsub
jmp
cmp
mov
pop
push
mov
jmpw
mov
dec
add
lret
cmp
or
fidivs
in
add
scas
popf
dec
aas
insb
stos
fnstenv
push
jmp
ss
inc
pop
inc
call
or
lods
sbb
adc
dec
add
sub
inc
mov
bound
leave
cmpsl
sti
mov
cld
lods
loop
push
movsl
lock
stos
jle
xchg
pop
test
mov
daa
hlt
mov
xor
xor
adc
paddb
or
mov
repz
ja
dec
jp
jmp
mov
pop
push
into
mov
addb
inc
bound
dec
cmp
jo
push
xchg
ret
mov
adc
ljmp
lahf
xchg
mov
jbe
int3
adc
jb
popa
inc
sahf
push
push
std
imul
pop
xchg
aaa
jo
lcall
add
std
mov
jbe
lea
push
push
movntps
ljmp
adc
mov
sar
or
and
icebp
xor
push
adc
dec
mov
adc
inc
push
enter
or
add
dec
out
dec
leave
notl
or
jge
mov
roll
cmp
xor
or
adc
rol
adc
xchg
mov
fldcw
and
or
xor
rorl
add
mov
inc
jle
sub
rcll
cmp
test
pushl
lds
test
mov
jmp
xor
add
mov
inc
push
xchg
add
jnp
sbb
cwtl
rorb
mov
dec
out
lods
and
orb
pop
push
cmp
roll
imul
dec
and
adc
sbb
jecxz
ljmp
dec
or
or
adc
adc
dec
xchg
xchg
inc
sub
mov
outsb
jne
hlt
or
xchg
cmpsb
dec
xor
je
js
das
iret
sub
or
pop
sbbl
add
cmpsb
pop
ds
jmp
pop
inc
aad
int
pushf
fmuls
xor
mov
rol
cmpsb
std
inc
cmp
pop
fcmovb
ret
jle
sbb
jo
mov
cmp
fsubs
xor
jg
push
int
std
push
mov
add
lea
jnp
jae
inc
cmp
inc
popa
cs
xor
loop
mov
cmpsb
sahf
ret
add
inc
inc
pop
lods
push
xchg
sbb
cli
lods
xchg
insb
loop
shll
mov
adcb
mov
pop
sahf
leave
mov
rol
in
mov
test
sub
jg
xorl
mov
pop
mov
jae
pop
mov
mov
xchg
in
or
push
addr16
jg
fs
inc
jae
arpl
incl
sub
int
sub
adc
dec
pop
jmp
push
movsl
enter
insl
inc
lock
pop
shr
push
loopne
iret
xor
out
out
adc
mov
push
lods
jecxz
add
bound
clc
lock
mov
mov
test
leave
mov
fimuls
jle
cli
fs
pop
cltd
call
mov
cs
sbbb
mov
int3
cmp
push
push
outsb
jge
pop
cmp
insl
mov
sub
mov
mov
pop
andl
jp
adc
es
stos
fs
adc
xor
jecxz
lea
enter
or
push
iretw
dec
and
lret
inc
inc
jp
cmp
hlt
shrb
pop
outsb
dec
ficompl
xor
aas
or
jae
cwtl
push
stos
mov
jp
xchg
fstps
pop
mov
push
lahf
or
test
sbb
or
sbb
push
inc
imul
bnd
jg
insl
shrb
and
or
ffree
push
loopne
jns
xor
das
mov
ds
sbb
and
mov
scas
out
push
clc
aad
sbb
sub
into
in
xchg
mov
mov
dec
add
dec
inc
das
inc
inc
aas
mov
jo
dec
leave
in
loop
ficompl
push
mov
and
xlat
aas
jne
pop
test
call
cld
push
daa
shrl
int
or
or
jae
push
arpl
xor
lret
fnstenv
rcrb
flds
lahf
aad
jp
adc
dec
and
sbb
lods
fldenv
xchg
xchg
jae
shlb
push
sub
xor
dec
inc
cmpsl
fmul
call
xor
cwtl
push
jmp
sbb
push
mov
push
jg
add
adc
xadd
data16
pop
and
test
push
icebp
notb
jns
rcll
fwait
mov
push
inc
fisttpl
pop
scas
mov
daa
lods
mov
sub
xlat
les
inc
data16
push
add
popf
or
sbb
inc
sub
and
pushf
outsl
mov
addl
cmp
dec
mov
fistl
test
xchg
leave
jp
cmp
mov
iret
xchg
fsubp
rorb
xchg
mov
cmp
lock
ja
push
adc
push
jp
pop
mov
xor
repz
ret
add
pop
sbb
xchg
rcrb
call
pop
idivl
ffreep
call
adc
sbb
insb
lret
shll
nop
icebp
leave
jle
pop
imul
flds
sti
orb
push
je
pop
fs
mov
rcrl
test
adc
xchg
mov
pop
mov
fisttps
add
or
out
sub
push
mov
push
pop
cmp
jbe
cli
xor
lods
scas
mov
xchg
data16
scas
mov
push
arpl
je
mov
adc
adc
add
mov
mov
sub
dec
pop
mov
out
xchg
cmp
cmp
inc
ljmp
mov
sbb
sbb
mov
call
int
sub
fistl
and
mov
mov
push
test
cmp
stc
cwtl
lret
das
imul
fs
or
sub
jle
add
rorl
cli
inc
dec
dec
test
add
test
xchg
into
hlt
ja
icebp
sti
and
adc
cmp
mov
jae
cmc
inc
jp
push
ret
pushf
xchg
aam
andb
fsubrs
pop
cltd
mov
xchg
stos
ret
and
jmp
push
addr16
insl
inc
bound
pop
push
repnz
ret
clc
clc
push
rcrl
fisubl
js
aad
pusha
out
stos
mov
inc
call
ret
repz
jne
push
inc
test
mov
imul
or
imul
and
dec
mov
and
add
js
sub
js
sbb
sub
pushf
vsubps
adc
sbb
icebp
pop
lret
inc
or
addr16
dec
lret
in
in
icebp
nop
test
and
add
pop
pop
push
mov
loope
xor
cmp
and
daa
andb
mov
insb
or
mov
in
sub
xlat
jns
leave
push
dec
cmp
into
and
dec
dec
in
cmp
and
icebp
sbb
jo
or
dec
pushf
bound
cmp
dec
sti
in
ds
nop
into
and
ss
cmp
popf
inc
test
adcb
call
push
jl
adc
mov
iret
arpl
push
xchg
pop
fidivrs
mov
pop
add
dec
push
adc
scas
mov
jge
or
sbb
popf
cmc
add
push
sbb
adc
outsl
adc
inc
xor
push
mov
push
js
inc
xchg
pop
cltd
pusha
out
enter
jle
mov
cmp
adc
scas
pop
clc
cmp
imul
stos
stos
imul
jle
or
dec
cmp
pushf
mov
mov
test
pop
or
jno
aaa
fstl
sub
ret
cmp
inc
jmp
jmp
pop
pushf
shrd
jae
lret
loop
add
leave
mov
dec
mov
notb
pop
inc
adc
call
add
pop
imul
test
aam
jmp
fisttpl
inc
shl
lods
fucom
push
jb
or
push
sbb
mov
push
popa
mov
pop
insl
and
xlat
rolb
inc
push
sub
cmp
iret
and
inc
sbb
mov
loopne
clc
cmp
repz
rclb
hlt
push
pop
fcomps
adc
subb
xlat
cwtl
mov
ret
push
outsl
cli
data16
xor
inc
ror
cmp
inc
shll
adc
sbb
push
imul
mov
and
mov
dec
or
dec
into
mov
bound
dec
sub
fisubrl
rcrb
cmp
push
pop
lret
pop
pop
lods
pop
imul
add
jmp
outsl
or
add
cmp
fldenv
jg
out
roll
cmp
xor
xor
lcall
pop
push
cmp
clc
rcrl
mov
lods
jmp
push
imul
jecxz
cmp
xchg
insb
lahf
push
sub
inc
rclb
mov
insb
inc
xor
dec
pop
inc
lret
mov
arpl
push
xor
stos
shlb
inc
shr
fildll
rorl
mov
sti
pop
and
xchg
and
cmpsl
dec
scas
mov
xchg
ja
test
dec
or
popl
loope
int3
mov
mov
pushf
repz
outsl
push
testb
or
cmp
xor
shll
push
mov
lods
sahf
push
mov
dec
push
lods
repz
sub
mov
dec
inc
mov
mov
xchg
xchg
sti
hlt
mov
aas
std
add
ja
cmp
cmp
movsb
push
inc
lahf
mov
adc
and
dec
inc
cmp
sbb
loop
and
adc
insl
shll
add
sub
or
sub
cmpl
dec
mov
in
js
hlt
leave
xor
loopne
aad
pop
mov
adc
sub
imul
hlt
out
loopne
xchg
in
push
imul
sub
inc
push
ljmp
jmp
ret
push
pop
pop
jbe
mov
mov
cmp
xlat
int3
and
or
int3
jmp
push
pop
loop
jb
inc
cltd
adc
fucomip
cmp
pop
cmp
shrb
mov
pusha
jnp
or
or
pop
push
outsb
jl
add
adc
jno
lahf
fcomps
mov
dec
dec
and
aam
sub
repnz
std
inc
cmpl
xchg
mov
inc
sub
imulb
xchg
mov
std
or
or
xor
adc
adc
mov
dec
sbb
mov
xor
or
les
je
outsl
bound
out
imul
push
sti
push
ds
pop
mov
pop
jae
pop
jge
or
pop
aam
xchg
fwait
add
arpl
es
xchg
loopne
pop
add
imul
jg
sub
push
or
nop
adc
mov
mov
cmp
sti
sub
jge
xchg
test
imul
and
call
pushaw
or
inc
pop
aas
xchg
sti
test
cmpsl
sbb
jne
mov
std
imul
push
jmp
aad
dec
cmp
mov
dec
mov
xchg
xor
push
add
mov
sarb
mov
cmp
mov
dec
lcall
jae
ret
sub
adc
nop
sub
ss
mov
mov
push
jle
into
inc
ficomps
inc
pop
jecxz
outsb
xchg
ret
push
push
rcl
call
pop
ret
addb
mov
imul
test
jb
aaa
jns
dec
jo
mov
xor
dec
repz
mov
dec
in
mov
dec
ret
notl
bound
ret
sub
mov
jle
mov
xchg
inc
jge
dec
addl
xchg
or
ja
mov
stc
ss
adc
shlb
leave
fsubs
rorl
pop
imul
mov
in
imul
clc
aas
stos
inc
sub
arpl
jb
pop
fmull
jne
test
aad
dec
push
jo
and
adc
mov
leave
pop
push
mov
enter
or
adc
or
jecxz
arpl
fwait
mov
pop
aaa
mov
scas
fimull
xor
call
insl
lcall
lods
cmp
pop
aam
dec
jmp
push
in
xor
sub
fwait
mov
insl
pop
cmp
inc
dec
daa
movsl
dec
dec
inc
jae
or
sbb
lret
addb
cvtps2pd
jecxz
pop
mov
add
fbstp
xlat
mov
or
adc
cmp
mov
sti
dec
push
nopl
in
push
movsb
pop
cmp
sub
jo
push
mov
jecxz
jb
adc
arpl
xchg
fs
clc
into
push
xor
gs
sbb
pop
dec
xor
mov
dec
pop
push
jmp
sbb
jno
mov
jle
rcll
inc
xor
pusha
out
jp
jge
adc
jl
es
cmp
jmp
es
or
imul
or
dec
shl
xor
push
mov
loopne
or
mov
push
sbb
rol
inc
pusha
mov
jnp
push
stc
negl
ja
in
mov
dec
xchg
mov
inc
pop
mov
jl
mov
fadds
sub
inc
call
out
jge
outsb
push
flds
dec
and
xor
add
adc
mov
add
sbb
sbb
push
xchg
dec
sbb
xchg
call
lods
into
jns
cmc
dec
xor
loopne,pt
mov
jbe
adc
insl
push
mov
shlb
stc
lret
in
mov
xchg
dec
push
lahf
out
mov
mov
inc
into
dec
add
rclb
subl
and
dec
inc
lret
push
mov
in
cmc
mov
ret
xorl
xor
cmp
cmp
mov
es
lea
test
sub
push
inc
outsl
mov
aam
aaa
leave
out
pusha
fisttpll
aas
dec
std
dec
dec
fwait
inc
mov
cwtl
daa
jp
loope
pop
push
fdivs
dec
xor
pop
mov
loop
push
in
test
jnp
jmp
dec
push
fsubr
fnstcw
mov
xchg
inc
or
ret
mov
decb
jbe
add
inc
test
inc
fistpll
call
and
lret
mov
lret
js
shrl
dec
pusha
lret
sarl
cmp
sub
or
push
insb
leave
add
icebp
mov
or
dec
adc
push
test
rol
aad
inc
aas
orl
mov
sbb
cld
push
mov
jbe
inc
xor
push
mov
add
incl
mov
fwait
gs
mov
je
xchg
inc
aad
insl
sbb
leave
pop
into
andl
test
lret
std
sub
xchg
sub
push
sub
sbb
add
pop
inc
xor
decb
sahf
sbb
dec
adc
mov
mov
clc
sahf
push
addr16
push
xor
cmpsl
loopne
je
add
push
filds
icebp
scas
pop
sub
inc
leave
idiv
into
xor
enter
arpl
cmp
jecxz
leave
push
push
rorb
jo
pop
cltd
push
outsb
ja
nop
jb
sub
or
mov
mov
add
rorb
imul
fsubrs
and
out
and
pop
pushf
dec
xor
lea
in
cmpsb
cmp
xor
xor
xor
aam
push
xchg
mov
xlat
add
inc
inc
dec
push
sbb
jmp
jnp
je
loop
insl
push
and
xor
mov
pop
mov
call
cmp
leave
aaa
add
jne
in
mov
in
dec
cmp
cltd
mov
push
idivl
stc
pop
fdivrs
out
pop
sbb
fs
push
push
stos
insl
imul
mov
and
or
mov
jmp
insb
inc
and
mov
sub
push
out
call
cltd
loop
and
cmp
rcl
test
dec
jp
jae
iret
dec
in
clc
jns
mov
jge
ljmp
icebp
repz
push
sub
test
rcll
xchg
mov
fstpl
dec
sti
xchg
imul
cltd
or
pcmpgtd
fimuls
inc
leave
sahf
lret
pop
cld
mov
jnp
or
pop
imul
fcomi
lds
or
mov
and
or
sbb
negl
call
sub
mov
in
cmp
cli
outsl
sub
dec
jecxz
jecxz
inc
lock
inc
movsb
ret
pushf
ss
jo
ss
je
fiadds
jle
or
inc
mov
call
inc
lock
orl
das
and
push
cmpsb
insl
shrb
stos
inc
ss
aas
loopne
xchg
xchg
clc
je
sbb
lds
repz
adc
ret
or
ja
mov
pop
or
fxch
jl
or
aaa
loop
push
lahf
sarl
imul
js
into
xchg
popa
mov
lock
push
jle
jno
cmpl
pop
nop
cmp
or
fnsave
inc
loop
inc
lahf
cmp
loopne
pop
sub
nop
sbb
adc
popa
lea
and
jg
sarl
imul
test
shld
cmp
xor
dec
add
push
dec
movsl
sbb
jno
mov
mov
js
mov
adc
jnp
push
lods
push
test
xor
mov
cmp
cs
xor
enter
cli
mov
adc
pop
jg
adc
data16
in
in
aaa
int3
pop
cmp
into
into
mov
hlt
inc
inc
cmpl
dec
inc
jle
addl
and
and
dec
aam
std
mov
dec
cmpsb
dec
fidivrs
enter
clc
mov
xor
xor
fidivl
and
add
jo
movsl
insl
push
mov
sbb
insb
leave
pop
push
jns
sub
cmpsl
leave
sub
xor
int3
jg
and
inc
mov
repnz
mov
aaa
call
test
sbb
outsb
sti
ret
adc
arpl
pop
xlat
jb
mov
imul
and
sub
push
dec
jb
push
pushf
push
loopne
dec
jle
jae
fs
pop
lods
aad
adc
negb
inc
mov
inc
add
or
inc
pop
cmpb
jecxz
jmp
ret
dec
inc
jl
fwait
lsl
cmpsb
popf
sbb
es
push
jg
stos
test
jp
xor
test
xor
movsb
xchg
jae
jnp
in
jge
enter
repz
les
push
ret
or
test
rcr
jle
lret
cli
lods
or
cmp
cmp
sbb
mov
hlt
cmp
movsb
imul
cmp
ja
pop
mov
sbb
cli
cld
shrl
and
dec
js
mov
cli
mov
jle
cmpsl
cli
outsl
loop
mov
and
sbb
loop
xor
xor
jle
sub
xor
fs
fcoml
sub
cmp
fcomps
and
daa
stc
mov
mov
jbe
dec
pusha
pop
ss
pop
js
jnp
shll
push
testl
int3
mov
ja
movsb
enter
or
stos
fisubrl
pop
loope
fnstenv
pop
je
into
orl
add
sbb
xor
jbe
jae
int3
xlat
clc
inc
les
and
push
dec
inc
lods
out
daa
inc
cmp
stc
sub
or
add
mov
or
call
sub
je
xor
xor
and
rcrb
ds
sbb
pop
mov
dec
and
dec
fnstsw
scas
pop
adcl
jg
xor
divl
sub
arpl
cmp
xlat
push
lods
dec
xlat
adc
ret
sub
ds
call
repz
sub
dec
push
call
cmp
dec
xchg
inc
loope
xor
mov
divb
inc
lds
inc
lea
sti
or
xor
pop
fwait
sti
addr16
mov
scas
jle
orb
out
fisttps
into
mov
xchg
pop
sbb
addr16
and
xor
sahf
push
pusha
sarl
adc
mov
scas
jb
adc
pop
int
fsub
xchg
xchg
push
stos
iret
mov
test
rcll
sub
lds
dec
clc
sub
popl
jp
fnstenv
adc
je
or
imul
test
pop
clc
sub
iret
pop
inc
addr16
jnp
adc
dec
or
mov
pop
push
cltd
xor
adc
pop
mov
xor
dec
cmp
mov
xchg
inc
pop
leave
ljmp
jle
mov
insb
push
adc
xor
cld
arpl
inc
iret
inc
dec
pop
ret
jne
pop
pop
cmc
xor
or
xor
add
sti
and
push
adc
or
inc
loope
test
xchg
or
xor
test
inc
stos
fwait
sar
insb
lods
push
sbb
lods
int3
push
cltd
dec
sbb
add
out
jbe
xchg
fdivs
pop
das
push
cld
lods
rorb
adc
add
es
jnp
pop
adcb
and
or
mov
xor
shll
fs
or
cmpb
loopne
leave
aam
insl
pop
call
xchg
rorb
out
xor
add
sti
dec
adc
rorl
int
sbb
dec
mov
shll
ja
mov
shrl
bound
arpl
pop
dec
mov
shl
jmp
ficoml
dec
adc
test
fwait
mov
push
pop
cmpb
out
sub
add
daa
mov
dec
shrb
xor
push
inc
dec
aam
sti
test
sub
and
aam
jnp
arpl
lcall
or
fnstsw
les
xchg
fwait
xor
out
rorb
xor
icebp
pop
adc
loopne
mov
pop
in
test
call
ss
add
popa
ret
xor
repnz
dec
inc
inc
push
pop
push
rcrl
and
loopne
cs
hlt
mov
pop
inc
in
dec
mov
imul
sub
ret
loop
xlat
aad
jle
aam
dec
or
push
nop
mov
dec
stc
jg
jp
push
xor
push
out
add
or
mov
cs
mov
jbe
add
push
mov
sbb
mov
outsb
inc
push
lock
sbb
xchg
mov
push
mov
dec
fwait
xor
lds
repz
sbb
dec
dec
fildll
sub
jp
dec
or
leave
mov
dec
and
or
jmp
rorl
dec
jl
inc
sbb
imul
loopne
pop
push
loop
mov
mov
dec
push
loop
push
inc
fstps
ret
fmulp
mov
push
dec
xchg
mov
addr16
movsb
pop
sbb
lea
mov
rcrl
jle
inc
popl
gs
paddw
popf
lahf
push
fistps
andl
in
jo
push
shll
mov
mov
mov
int3
push
orl
jp
and
adc
in
int3
movsl
pop
pop
xor
pop
mov
mov
cld
cmp
jp
aam
dec
inc
xchg
pop
and
clc
enter
insl
pusha
aad
xchg
or
iret
scas
jecxz
jb
sub
inc
push
arpl
dec
pop
out
mov
call
cld
and
pop
sub
inc
jnp
or
xchg
sti
mov
insl
cld
div
push
inc
mov
xchg
adcl
movl
andb
mov
pop
enter
or
imul
out
xor
or
inc
rolb
adc
ror
jmp
and
pop
movsl
dec
adc
sub
dec
pop
jle
push
cmp
xorl
rolb
jno
dec
and
pop
shll
jecxz
shll
pop
xlat
adc
pop
push
test
xor
inc
cmp
gs
dec
aad
mov
push
mov
dec
xorb
gs
iret
cltd
mulb
repz
ret
sub
and
lods
mov
pop
lret
sub
loopne
leave
mov
cmp
clc
jg
std
cmpsb
clc
mov
inc
sub
outsb
loopne
shlb
jae
repz
fsubrl
xor
xchg
push
sub
out
data16
dec
xor
dec
dec
inc
pop
cmpb
insb
push
pop
roll
or
daa
adc
fcmovnb
scas
imul
sub
loope
test
jne
stos
pop
fisubrl
add
in
pop
aas
out
inc
fidivrl
dec
jb
fcom
add
add
dec
inc
fs
push
fidivrs
addr16
pop
xor
inc
repz
jecxz
dec
aad
inc
clc
lahf
xchg
and
xor
pop
pop
xchg
insb
xorb
and
pop
push
dec
sub
or
push
dec
push
test
iret
push
pushf
or
jnp
enter
jb
cwtl
inc
hlt
xchg
or
je
pushf
mov
lcall
or
lea
jmp
push
fldt
pop
and
jmp
leave
xchg
jns
jno
frstor
mov
adc
push
mov
dec
jecxz
sbb
into
pop
gs
out
fistps
push
out
movsb
push
pusha
push
inc
sti
mov
or
push
mov
orl
clc
sub
in
fisubl
pop
das
sub
sub
repz
add
xchg
aad
pop
rcrl
notb
cld
inc
or
sbb
jbe
test
xchg
xchg
sbb
lret
leave
and
mov
add
or
pop
mov
adc
shll
mov
dec
lock
jmp
lret
jnp
jnp
sbb
adc
ds
lods
jmp
sbb
pop
mov
dec
fsubl
pandn
pop
dec
addl
adcl
xchg
inc
push
dec
pop
add
push
pop
mov
popf
pop
leave
outsb
jl
mov
cli
mov
sub
sub
aad
dec
call
rolb
push
in
pop
fsubrl
dec
lock
adc
mov
or
test
mov
cmc
sbb
xor
lret
aad
jae
insl
xor
push
pop
jnp
mov
popf
ret
push
call
shll
loope
in
int
lock
pop
inc
push
in
mov
cmpb
or
adc
jle
out
mov
mov
mov
daa
pop
mov
insl
in
push
es
into
xchg
mov
outsb
pop
inc
sti
stos
and
cwtl
cli
or
enter
aad
or
mov
xor
nop
outsb
dec
pop
ud1
arpl
sub
subl
adc
adcb
or
pushf
sahf
adc
lea
inc
sahf
pusha
pop
or
xor
imul
push
push
pop
andl
fldcw
lret
cltd
push
inc
push
jp
push
mov
cmpsl
xchg
add
mov
mov
sub
insl
lret
add
test
push
out
pusha
ljmp
jmp
lds
outsb
or
cmpl
adc
push
push
in
sbb
repz
orps
and
xchg
ss
mov
sti
or
lods
pop
dec
sub
push
call
pusha
and
cmpsb
cmp
and
cmpsl
xchg
add
pop
popa
fildl
arpl
xor
jge
or
mov
fisttpl
inc
arpl
mov
pop
dec
int3
notl
push
lods
and
insb
mov
mov
mov
sub
sbb
push
sub
dec
dec
or
popf
aas
rep
mov
mov
sub
je
dec
add
gs
xchg
jmp
shll
sub
test
cld
pop
inc
cmp
shrb
and
jp
sbbb
cld
pop
pop
les
dec
mov
xchg
enter
add
inc
scas
or
adc
stos
or
jg
jno
dec
test
fnstenv
mov
stos
outsb
xor
push
inc
mov
sub
sbb
ss
jne
inc
xor
mov
and
push
fwait
insl
and
cltd
cwtl
gs
dec
and
xchg
jmp
ret
pop
lahf
out
pop
ret
pop
jnp
xchg
outsb
stos
sub
enter
lret
xchg
dec
sub
xchg
in
push
mov
pop
pop
or
sbb
ljmp
and
out
lret
sub
sbb
std
xchg
push
hlt
pop
xchg
adc
aas
sub
dec
lods
ljmp
cs
emms
dec
mov
pandn
adc
out
cmc
mov
enter
call
gs
mov
lret
daa
xchg
push
lahf
jecxz
es
outsb
fists
sbb
test
pusha
jbe
jecxz
aaa
jg
mov
loop
dec
repnz
pushf
loopne
jge
xor
mov
stos
or
xchg
push
inc
mov
push
dec
addl
call
scas
loope
je
aad
lods
jnp
jecxz
loopne
pop
std
xchg
jge
icebp
mov
mov
xchg
gs
xor
insl
push
cmp
outsl
xorl
mov
mov
dec
imul
xor
icebp
decl
pushl
ret
add
shlb
jb
dec
cltd
add
adc
mov
daa
and
add
cmpb
ljmp
xchg
jle
mov
inc
lret
pop
jne
pusha
mov
in
pop
ds
push
mov
pop
sub
test
mov
std
faddp
push
test
idivb
push
cmpsl
movsl
std
dec
sub
add
dec
mov
xor
adc
cs
jnp
add
pop
mov
jnp
cmp
dec
dec
nop
mov
or
mov
hlt
imulb
mov
mov
ljmp
or
addr16
mov
mov
sub
jp
fwait
adc
int
or
jnp
loope
adc
arpl
xor
out
push
pop
mov
sub
pusha
aam
xor
clc
jnp
aad
sti
stos
mov
dec
test
pop
addl
mov
ljmp
lret
xor
mov
pop
and
pushf
push
adc
pop
adc
jb
mov
jmp
adc
adc
adc
mov
stos
inc
and
cwtl
cld
fistps
inc
enter
cmc
xchg
test
cmpb
sbb
or
pop
or
fdivrl
push
scas
add
aas
orl
push
xchg
lahf
pop
mov
mov
xchg
jg
inc
sbb
mov
inc
fwait
mov
jb
cmp
inc
jg
movsb
push
les
lds
jb
mov
sbb
shlb
xlat
mov
dec
scas
iret
inc
shlb
and
adc
aam
js
ret
pushf
gs
cmc
jne
cmp
sub
push
and
xlat
iret
inc
sar
jne
cltd
insl
inc
and
cmp
push
and
adc
inc
ljmp
push
outsb
ficomps
push
or
sub
repz
xor
add
cli
outsb
bound
add
xor
loopne
xor
mov
and
std
frstor
add
fstp
adc
add
push
xor
iret
sub
xor
sbb
xchg
jo
inc
mov
xchg
push
imul
jb
cs
loop
xor
fdivrs
cs
out
bound
cmp
es
sahf
xchg
or
adc
mov
mov
adc
imulb
sub
int3
stos
adc
test
dec
xor
int3
dec
and
inc
mov
iret
iret
sub
adc
test
in
test
mov
push
pushf
inc
sub
adc
aas
popf
jae
jb
stos
push
xchg
out
cmp
push
xchg
adc
push
shrb
lcall
icebp
in
movsb
movsb
xchg
and
test
xor
stc
jmp
rorb
loope
arpl
dec
inc
mov
cmp
and
stos
push
rcrb
cltd
mov
es
jnp
insl
int
aas
xlat
jle
test
mov
inc
cmp
lock
mov
bound
inc
mov
lock
jb
std
pop
leave
xor
adc
xor
imul
sarl
sahf
sbb
cltd
jno
cs
rol
repnz
and
jge
cmp
aam
cltd
aad
inc
aam
data16
sub
sbb
pop
and
or
cli
jo
int3
pop
aas
imul
mov
insb
push
loopne
sbb
pop
std
jmp
adc
ficomps
jne
jmp
inc
orl
jbe
sub
lcall
aaa
lret
nop
andb
sbb
mov
pop
pop
repnz
call
popa
add
push
sbb
mov
push
addr16
aaa
aaa
add
mov
aam
lods
fidivs
mov
jmp
push
mov
ret
mov
and
ret
push
insb
mov
sahf
jmp
mov
pushf
push
pushf
pushl
ret
movsl
mov
mov
lods
and
dec
ja
sub
or
fcomps
dec
lahf
addr16
cmpsb
rorb
push
data16
add
fcmovnu
sub
and
andb
gs
movsb
mov
mov
inc
andl
pushf
mov
in
mov
or
mov
ss
jl
jb
pushf
loopne
pushf
loopne
mov
enter
and
push
inc
mov
out
orl
lock
enter
movsl
push
insb
sub
sbb
fisttps
jmp
outsb
jbe
les
sbb
fldl
mov
sub
pop
push
mov
xchg
mov
out
inc
lods
adc
adc
adc
mov
cmp
adc
pop
cwtl
lock
sub
push
and
and
pushf
pusha
pushf
pushf
lea
jmp
not
rcr
pushl
not
not
rol
pushf
stos
mov
pushf
pusha
mov
lea
pushf
movb
jmp
mov
sub
mull
movq
or
inc
mov
xchg
fistpll
cmp
std
test
cmp
loopne
pop
inc
and
movsl
jnp
mov
mov
in
fdivs
cld
aam
loop
leave
sbb
dec
sub
sub
sub
gs
xor
add
xor
je
cmp
jge
adc
add
nop
nop
jo
outsl
fsubr
mov
out
pop
pop
xlat
shlb
cltd
test
cli
jmp
pushf
fcomp
imul
and
pop
or
in
loopne
sbb
mov
xlat
sbb
dec
sub
cltd
orl
mov
fistps
in
cld
cli
pop
sub
lret
loope
sub
gs
pop
stos
pop
scas
adc
mov
sub
add
mov
xor
mov
jle
or
add
xlat
sbb
cmp
in
ljmp
xchg
or
inc
and
and
fs
fistpll
enter
loop
test
fmul
out
sub
jmp
js
cltd
mull
xchg
mov
movsb
pop
fistpll
rol
pop
dec
inc
and
mov
push
sahf
jmp
test
lea
ja
call
sub
roll
repz
mov
outsl
lret
inc
sti
imul
dec
aam
ret
jnp
addl
jne
adc
leave
add
mov
or
rol
jae
pop
sub
out
inc
scas
out
sub
xchg
xchg
fldl
jne
sbb
pusha
mov
scas
jbe
xchg
cmc
mov
lret
jp
adc
lds
sub
cmc
lds
mov
and
fdivl
jb
sbb
push
enter
or
mov
adc
and
dec
xor
mov
inc
scas
add
and
or
pop
add
test
mov
mov
push
data16
cld
cld
call
test
sub
imul
add
cmp
mov
cmp
aad
es
dec
sub
mov
mov
jp
or
jecxz
arpl
pmovmskb
mov
cltd
pop
rcll
or
mov
cmp
jb,pn
hlt
dec
mov
mov
add
scas
and
fs
loop
push
xlat
sbb
cmp
jno
or
mov
inc
out
out
xor
shll
cmp
mov
dec
adc
lods
fldcw
cmpb
nop
loope
out
pop
and
adc
mov
push
jb
lods
stos
push
negl
pop
call
in
xchg
adc
lods
sbb
sub
and
adc
adc
cld
ror
mov
xorb
loope
pop
sahf
jp
and
fs
jne
pushf
lea
call
pusha
lea
jmp
call
and
das
jb
jnp
jae
inc
cmpsl
jnp
xor
jg
sub
push
jb
enter
test
xor
mov
test
mov
cmpsl
xchg
icebp
pop
jo
jo
or
lret
mov
or
shll
fidivrl
add
ret
iret
cmpsl
movsl
cmc
pop
mov
inc
or
hlt
dec
mov
jl
inc
and
bound
cmp
fdivrl
pop
sbb
add
and
ljmp
jle
dec
push
add
dec
stos
aaa
sub
arpl
cmp
sbb
xor
xchg
fiadds
adc
out
rcll
jg
pop
pop
aad
push
addr16
jbe
aam
push
pop
push
fisubrs
fldl
jmp
mov
in
aam
and
jno
sub
ss
js
loope
sbb
leave
cmp
ficomps
mov
sub
js
dec
js
push
and
cld
clc
mov
xor
xor
jno
into
and
sub
shll
jb
dec
enter
inc
mov
test
pop
enter
adc
xchg
adc
mov
mov
lods
mov
repz
and
or
aas
mov
shlb
lcall
mov
adc
std
insl
xor
mov
add
or
xchg
test
cmp
das
xchg
test
pop
mov
adc
movsb
cmpsb
xchg
paddw
mov
shll
pop
xchg
ljmp
add
mov
pop
stos
idivb
mov
mov
xchg
outsb
push
xchg
dec
mov
mov
xor
jno
cmp
sbbl
aam
fsubl
xlat
cmp
or
and
jne
icebp
scas
adc
sub
mov
push
mov
jle
pop
js
lret
stos
push
orb
out
ljmp
add
fcmovb
lret
pop
add
push
jns
jmp
xor
inc
xchg
cli
push
lret
loop
mov
or
cmp
mov
int3
and
mov
xchg
sbbl
fsubp
or
mov
sbb
out
lahf
std
movsb
push
cs
jg
inc
xlat
sbb
shl
dec
mov
push
push
sbb
pop
ja
ret
xchg
sbb
sub
call
sbb
cmp
sbb
jmp
mov
xchg
popa
out
or
cmp
enter
dec
xor
jg
pop
stos
or
inc
ret
aas
cmpsl
or
sub
and
mov
jo
push
mov
jae
dec
popa
adc
sbb
push
lods
ret
or
adc
xchg
pushf
fs
iret
mov
mov
call
adc
jge
les
inc
sbb
cltd
popa
xor
lret
mov
lea
push
mov
lods
sub
loopne
int3
inc
cwtl
in
rolb
sub
fwait
mov
jo
jle
inc
pop
xor
imul
fsub
loop
insb
int3
xor
lock
clc
ror
adc
add
shlb
mov
jmp
test
xor
sbb
sarl
push
jns
mov
gs
sub
rcrl
test
push
inc
cmp
sarb
sbb
lcall
mov
and
mov
hlt
cmp
sarl
push
mov
sbb
push
xchg
add
push
push
cmp
xchg
cli
ss
pop
sbb
enter
cmp
outsl
sub
push
sub
repnz
jmp
and
rcrb
mov
pop
jecxz
mov
das
popa
js
ljmp
xor
lods
add
sarb
mov
dec
test
test
adc
sub
in
das
imul
cmpsb
jo
xchg
jno
popw
mov
mov
mov
fimuls
test
mov
icebp
in
mov
sub
sbb
stos
rorb
xor
sbb
add
and
in
shll
test
pop
ret
sub
add
pop
inc
cmpsb
outsb
jae
or
push
and
fcmovbe
pop
cmpsl
and
adc
fnstsw
push
pop
push
fisttps
ss
sti
shrl
out
ret
roll
mov
push
or
lret
stos
repnz
inc
js
xor
add
inc
sub
xor
je
dec
dec
sub
and
lock
mov
mov
test
and
call
pusha
lea
jb
pusha
pushf
push
pushf
pushl
ret
stc
call
movl
call
pop
jne
xor
gs
lcall
pop
stos
add
push
mov
std
cmc
mov
push
test
xor
icebp
icebp
loope
pop
ret
and
cmp
push
ret
mov
mov
mov
stos
xor
aas
and
xor
mov
fs
ja
test
push
mov
xchg
jmp
and
or
andl
fnstsw
sub
call
inc
or
sbb
js
ja
cmp
rorb
inc
mov
cmp
mov
scas
cmpsb
mov
inc
xor
sub
push
jl
add
mov
mov
pop
cmp
loope
inc
inc
xor
aaa
out
push
mov
pop
mov
sub
stc
sahf
jb
imul
adc
pop
cmp
mov
xor
cmc
mov
mov
or
sbb
xor
xor
add
test
mov
loope
and
loopne
xchg
or
sbb
adc
scas
scas
xchg
nop
hlt
bound
and
or
mov
mov
cmp
inc
and
cmp
push
in
sti
pop
and
xchg
xlat
pop
decl
hlt
and
jl
jmp
movsl
mov
jae
loop
aas
mov
ret
iret
inc
and
gs
xor
or
dec
addr16
scas
add
js
mov
hlt
out
push
mov
cmp
loopne
jno
cmp
mov
inc
xchg
sti
rcrl
cmp
inc
xchg
icebp
add
sahf
arpl
ficoms
dec
push
push
dec
dec
dec
cs
push
push
add
and
outsl
arpl
jne
and
je
jns
jo
imul
arpl
insb
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
and
call
jne
lea
rol
rcr
mov
test
clc
clc
add
stc
pushf
clc
movzwl
and
shrd
pusha
mov
cmc
add
pushf
movl
pushl
movb
mov
pushf
push
pushf
lea
jmp
dec
test
cmpsb
and
xor
lcall
inc
cs
gs
dec
ret
imul
sub
daa
cmpsl
test
in
test
fimuls
jo
cmp
dec
test
sub
loop
lret
leave
ret
das
stc
std
fst
and
mov
and
imul
leave
dec
push
mov
ja
stc
push
push
dec
sbbb
or
fcompl
in
push
fisttpl
xchg
stc
jns
cmp
mov
add
xor
cwtl
pusha
pusha
aaa
mov
gs
outsb
mov
orb
call
call
push
and
dec
sub
aaa
lahf
adc
adc
mov
add
xchg
outsb
pop
dec
push
add
mov
es
dec
sahf
mov
ret
out
out
pop
mov
inc
mov
in
pushf
gs
xor
cmp
enter
inc
cmp
xor
ret
mov
mov
jle
popf
jl
cmp
lock
mov
inc
lods
je
and
scas
sbb
ror
outsl
mov
xorl
adc
movsb
push
cli
fnstenv
or
loopne
push
mov
and
xchg
fistps
sbb
fs
leave
call
pop
and
popl
cli
bound
mov
insl
push
sbb
or
add
loope
filds
icebp
fisubrl
mov
fdivl
jl
movsb
inc
mov
hlt
mov
dec
cmp
aad
mov
insl
int
jno
cmp
jmp
mov
push
les
and
test
mov
mov
imul
xor
subl
mov
jge
xchg
cmp
jecxz
sub
movsl
adc
fsubl
aaa
pop
and
aad
or
push
daa
or
add
mov
push
xor
sbb
mov
xchg
xor
xchg
or
mov
inc
jmp
cmp
jbe
jb
mov
mov
push
into
cmp
insl
mov
or
faddp
mov
hlt
or
mov
jge
pop
ss
loope
cmp
rcrb
jp
dec
pop
jo
or
and
push
push
and
gs
mov
push
jg
test
outsl
aaa
and
pop
xchg
pop
mov
lret
loop
add
outsl
pusha
loopne
dec
mov
lcall
loope
popf
test
adc
out
cld
jl
xor
mov
sbb
jne
xor
sbb
in
in
mov
sti
shrb
stc
test
sti
cwtl
or
das
sub
mov
test
mulb
or
out
pop
and
roll
or
xor
jo
gs
out
mov
adc
add
sbb
mov
cli
shlb
lret
push
inc
mov
jg
ffreep
sahf
push
inc
into
cmp
aas
mov
pop
mov
lret
pop
mov
xor
shl
mov
jl
push
movb
fwait
jg
lods
fsubrl
in
jbe
fmuls
sbb
dec
mov
lods
imul
inc
shrb
or
dec
into
or
push
rclb
push
out
cwtl
loopne
cmpsl
push
movl
pop
std
fnstcw
mov
cmp
aas
cmp
xchg
dec
and
or
lret
ds
push
orl
out
mov
sub
jb
lahf
jmp
lret
inc
mov
jae
inc
mov
das
xchg
add
mov
rcr
mov
ljmp
jne
loopne
lods
jno
pop
pop
mov
adc
pop
ret
and
les
dec
cmp
fisttpll
lods
repz
outsb
adc
lods
or
iret
mov
dec
dec
mov
cmp
cltd
gs
and
mov
es
inc
inc
add
push
push
js
arpl
gs
add
xchg
add
cmp
test
jmp
xlat
xor
inc
mov
jle
pop
shlb
sahf
push
push
push
outsb
cmp
ret
pop
inc
sub
pop
mov
sbb
xchg
add
dec
dec
sub
or
mov
or
fcmovbe
xchg
hlt
outsl
fdivs
arpl
das
xchg
xchg
jnp
jmp
jg
pop
or
jmp
push
and
pusha
push
movsl
jb
adc
nop
jg
ret
movsb
std
pop
jp
dec
mov
mov
pop
jle
loop
dec
push
pop
data16
stos
pop
jecxz
stos
mov
aas
or
lret
lahf
fwait
stc
stc
lods
enter
pop
adc
dec
cmpsl
imul
shlb
fsubs
lock
lods
add
repz
cmp
cmpsb
adc
mov
loope
sbb
mov
adc
cli
jbe
sbb
cmp
xchg
cmp
sub
clc
xor
shrb
stos
mov
push
jecxz
and
mov
adc
jno
add
pavgw
jno
add
ficoms
sbb
mov
inc
es
inc
scas
int3
adc
or
pushl
lea
ja
cmc
push
stc
cmc
imul
clc
call
mov
and
testb
push
mov
jb
dec
xchg
ss
cmp
pushf
pusha
inc
stos
vmovdqa
cmp
shr
lret
movq
xchg
inc
setns
scas
pop
sbb
mov
mov
mov
rcrb
mov
lret
test
dec
ljmp
xchg
outsl
arpl
psrlq
insl
sub
inc
aas
mov
push
movl
push
push
lea
jmp
push
clc
cmp
jmp
notb
jb
or
movsl
adc
mov
ret
aam
lods
nop
push
inc
arpl
jno
stc
bound
or
xchg
or
mov
cld
gs
lahf
dec
clc
or
jg
scas
cmpsl
filds
orl
or
mov
aas
pop
fldenv
pop
into
stos
push
imul
pop
out
cmpsl
xchg
jnp
lea
mov
inc
les
and
lea
call
call
pusha
lea
jne
sbb
daa
sub
clc
rcl
mov
and
cmp
ror
sub
add
inc
ror
call
add
push
gs
jo
outsb
dec
gs
js
add
dec
sarl
gs
xchg
or
mov
mov
cmp
imul
add
enter
aaa
dec
xchg
push
lds
push
push
mov
fcomp
rclb
ljmp
stos
adc
pop
sub
stos
jle
es
ds
das
xor
mov
xor
ss
jae
sbb
aaa
lds
push
sub
lcall
push
mov
cmp
and
xor
dec
mov
mov
xor
rcll
clc
aam
and
repz
cmc
pusha
add
mov
cmp
pusha
test
test
cmpb
pushf
pushf
pushf
lea
jg
jne
bsr
xor
daa
or
mov
pushf
dec
add
adc
rcr
call
and
aas
jb
fisttpll
cmp
stc
jno
sbb
mov
subb
out
mov
mov
push
daa
nop
out
lds
out
sbb
add
sub
cld
cmp
andb
sarb
push
xchg
lcall
lods
push
icebp
cmp
xchg
les
jbe
fwait
aaa
insb
xchg
jmp
imul
inc
xchg
not
mov
jb
pop
dec
dec
and
add
push
mov
xchg
push
cmp
lea
ret
rcrb
aas
jb
sub
das
jecxz
stos
pop
pop
mov
xchg
mov
sahf
or
shll
cmpsl
jbe
stos
adc
jae
repnz
mov
xor
dec
sbb
shrl
xchg
cmp
daa
jmp
push
dec
mov
arpl
imul
sbb
fisubs
cli
fcmovbe
lret
xorb
divl
and
push
inc
jb
mov
dec
cmpsl
and
adcl
mov
mov
and
jns
push
out
in
add
int
xchg
pop
clc
sub
cmc
out
les
mov
add
stos
jnp
jmp
loopne
mov
aad
test
jle
data16
inc
and
call
int3
clc
insb
loopne
mov
add
test
fs
mov
dec
mov
xchg
xchg
test
call
mov
gs
inc
cwtl
add
dec
mov
dec
test
mov
pop
add
push
ds
int3
loop
cmpsb
jae
insl
in
mov
or
pop
and
sbb
inc
and
test
or
ficoml
inc
mov
cmpsl
into
cwtl
mov
test
mov
cmpb
xor
adc
movsb
and
fs
adc
mov
in
les
rclb
into
add
movsl
imul
mov
jp
bound
mov
push
xchg
in
test
cltd
scas
sub
pop
cs
cmc
cltd
and
mov
pop
pop
lds
ljmp
cmc
lahf
sbb
cwtl
or
stos
sbb
gs
adc
rcl
mov
in
add
mov
mov
push
sub
mov
add
out
add
loop
iret
dec
cmp
repnz
dec
xchg
out
cmp
jle
dec
lcall
mov
sbb
or
test
inc
fwait
stc
fnsave
shlb
cs
adc
mov
fistpll
lret
xor
push
or
scas
mov
push
xor
cmpsb
stos
jb
in
push
mov
ljmp
vmread
adc
shlb
fwait
stc
fwait
popf
xchg
cli
xor
jmp
enter
loop
pop
sub
roll
ljmp
mov
jg
jbe
imull
push
sub
pop
mov
push
ljmp
outsl
dec
das
pop
jmp
xchg
daa
call
loop
rcl
mov
cmc
shr
movzbw
mov
push
pusha
stc
pushf
and
cmp
cmc
cmc
movb
add
add
cmc
pusha
add
pushf
pushf
dec
pushf
lea
jne
inc
jo
lea
mov
jg
test
pushf
cmc
cmp
pushl
jmp
jnp
pop
inc
jb
jo
push
rclb
and
mov
pushf
fst
mov
aas
popa
mov
jl
stc
bound
xlat
xlat
mov
sti
sub
jp
pop
jno
out
out
rcr
xchg
xchg
or
mov
mov
xchg
setge
cwtl
test
fstl
in
nop
jns
cs
pop
xchg
js
jp
mov
call
shll
pop
inc
pop
xchg
dec
lahf
into
dec
test
fs
test
jmp
aaa
popl
movb
cmp
call
pop
jge
inc
jb
mov
push
outsb
mov
pop
mov
mov
dec
mov
movl
lret
test
inc
jge
sbb
sub
adc
dec
push
insl
divl
mov
jb
or
int
arpl
ss
jge
jae
dec
bound
leave
mov
movsb
adc
sbb
inc
and
sub
cmpsl
or
push
aad
stos
cmc
pop
sti
xchg
outsb
fidivrl
mov
lods
push
subb
std
int
movsl
insl
cmp
insl
subl
mov
xchg
sub
xchg
data16
pushf
pushl
ret
stc
pushf
cmc
xor
jmp
jmp
inc
mov
scas
es
dec
mov
jb
inc
mov
push
stos
jb
dec
dec
leave
dec
int
repnz
int
jge
push
stos
jne
dec
mov
into
push
push
daa
adc
addb
dec
dec
aas
mov
mov
jno
cmp
dec
push
sub
insl
jns
cs
adc
lcall
das
cwtl
aam
push
and
push
cmp
ja
sub
and
cltd
lods
or
push
nop
sbbb
loopne
lods
or
lock
mov
fcomps
and
xchg
test
bound
mov
mov
ds
dec
and
jg
mov
roll
fstl
gs
cmp
outsb
je
mov
imul
ret
fimuls
or
leave
dec
mov
mov
inc
je
out
push
mov
pusha
sbb
dec
mov
insl
push
xchg
pop
pusha
pop
mov
out
sbb
adc
mov
adc
mov
add
hlt
loopne
test
and
sub
push
and
jmp
lea
jb
pusha
pushl
not
stc
push
cmc
jmp
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
add
push
gs
arpl
cmp
cmp
xchg
out
lret
iret
inc
mov
dec
mov
vfrczpd
pop
rorb
out
inc
stos
push
bound
push
sub
or
fcomi
push
pushf
add
xor
jecxz
cmpsb
movsb
or
xor
addl
out
dec
andb
lret
cmp
mov
rolb
xchg
jb
sbb
or
loop
cmpb
out
pop
outsl
sbb
xor
push
mov
or
adc
inc
fbld
xchg
repz
dec
aaa
sbb
lret
shrb
sti
stc
jne
dec
jo
jno
std
data16
fcmovnu
iret
int
mov
mov
jno
jge
adc
pop
cmp
mov
test
fs
xchg
in
dec
inc
or
lods
test
cmp
stc
mov
fstl
pop
loop
rolb
gs
lods
and
push
mov
or
sub
mov
clc
push
in
mov
sahf
rsm
sbbl
icebp
mov
add
clc
push
mov
or
loope
sahf
negb
push
cld
push
clc
add
sub
xor
setno
pop
mov
xchg
jmp
jo
or
outsb
into
sub
pop
jno
jmp
pop
or
idivl
pop
push
or
lahf
sbb
clc
pop
xor
push
dec
inc
jb
aad
roll
popa
rorl
loope
mov
std
std
loop
lret
cmc
fwait
mov
mov
pop
popa
stos
jne
call
icebp
mov
cmp
mov
jbe
fadds
mov
fidivs
repnz
arpl
dec
pop
mov
jno
and
lds
in
dec
cmpsl
pushf
lds
pop
std
adc
inc
jb
sbb
lahf
pop
dec
fwait
testl
add
jbe
xor
nop
iret
add
data16
cmp
stos
outsl
and
pop
sti
adc
mov
or
hlt
repnz
push
mov
ror
mov
push
syscall
xor
and
inc
push
fcmovnu
jge
gs
xchg
jno
fwait
xor
jg
aas
pop
adc
ret
xchg
imul
or
mov
loope
pushf
adc
jo
dec
dec
pushf
inc
cmp
cmc
mov
cmp
sub
push
movw
call
call
cwtl
clc
pushf
mov
sub
mov
call
mov
and
mov
pusha
pusha
mov
call
pushl
pushl
popl
movb
pushf
movw
lea
jmp
lea
pusha
pop
pusha
mov
mov
lea
jne
push
push
mov
call
pushl
popl
pushf
lea
jmp
sub
pushf
add
mov
movb
pushf
pushf
popl
jmp
jmp
sbb
push
bswap
btc
neg
pushl
movzbw
setg
dec
dec
rcl
clc
lea
lea
bswap
xor
sub
pushf
bsr
lea
lea
clc
shr
bt
shl
mov
bsf
sar
neg
add
rcl
cmc
bsf
sub
mov
jmp
js
mov
jmp
call
push
jmp
mov
cmp
pushl
sub
pushf
pushf
pushf
lea
jne
stc
stc
cmp
xor
pushf
pusha
xchg
push
call
mov
mov
mov
lea
jmp
pushl
mov
call
mov
add
test
neg
mov
pusha
add
push
jmp
pushf
mov
mov
mov
pusha
pushl
lea
jmp
pushf
pushf
mov
movw
bswap
pushf
movw
mov
pusha
pop
pushf
popl
call
rcr
mov
bt
sub
push
pushl
push
pushf
mov
pusha
lea
jmp
mov
bt
call
movb
dec
bt
neg
movb
sub
pushl
sub
jmp
call
jmp
mov
pushf
mov
pusha
movb
mov
lea
jmp
call
mov
pusha
push
call
not
call
jmp
mov
pushf
pusha
movw
mov
lea
jmp
jmp
mov
inc
mov
pusha
pushf
cmc
sub
bt
jmp
pushl
popl
lea
jp
movsbw
bswap
push
pushf
movzbw
pop
movsbw
mov
pushf
pushf
lea
jmp
pushf
mov
push
pushf
movw
pushl
lea
jmp
jmp
bt
call
movw
jmp
pushl
xchg
movl
mov
pushl
movzbw
mov
pushf
popl
bswap
pusha
mov
bswap
mov
jmp
pushl
mov
pusha
pushf
pushf
mov
movzbw
mov
lea
jmp
pushf
push
movl
mov
call
pushf
popl
pushf
pushl
popl
push
push
push
movw
lea
jmp
push
push
pushl
mov
pushf
pusha
movb
push
lea
jmp
mov
push
mov
pushf
pushf
mov
std
jmp
pusha
push
pushf
mov
jmp
jmp
call
stc
pusha
mov
xor
pushf
pushl
pushf
dec
cmc
test
xor
clc
xor
mov
mov
add
jp
cmc
cmp
cmc
sub
jmp
mov
not
cmc
mov
clc
not
cmp
not
jmp
mov
mov
pushf
pusha
lea
jmp
call
add
jo
pusha
pushf
popl
movb
pushl
popl
pusha
pushl
pushl
lea
jmp
call
add
add
cmp
pusha
mov
rcr
mov
cmc
cmp
push
add
call
pushf
popl
call
pushf
not
not
mov
push
pusha
pushf
mov
push
lea
jmp
mov
not
movzbw
lea
mov
movsbw
bswap
pushf
pushf
popl
push
jmp
movzbw
mov
bswap
pushf
popl
jmp
pushf
jmp
pusha
pushf
pushf
pushf
popl
jmp
lahf
aaa
das
mov
test
pushf
mov
bt
call
pushl
popl
mov
push
mov
lea
jmp
pusha
mov
pushf
pushf
popl
pusha
call
mov
jmp
movzbw
movzww
pusha
push
pushf
sub
sub
jl
test
add
pusha
cmc
jmp
lea
push
pushf
not
movsbw
mov
push
pusha
lea
cpuid
stc
sub
pusha
bt
cmpl
mov
pusha
push
movb
mov
jmp
pushl
popl
mov
movb
mov
lea
jmp
jmp
mov
call
sub
pushf
call
call
xchg
movzbl
pushf
popl
cmc
mov
pop
cmc
sar
xchg
and
setno
sets
xchg
neg
mov
sar
mov
shrd
setl
movzbl
pushl
popl
or
movl
btr
mov
lea
mov
clc
xadd
sbb
sub
jmp
shl
mov
test
dec
add
not
jp
mov
not
mov
call
movzbw
movl
push
mov
pushf
lea
jmp
movzbw
aad
lahf
rdtsc
jmp
pushl
popf
movb
lea
jmp
movw
bswap
jmp
mov
mov
movb
mov
movb
lea
jmp
push
pusha
movzbl
neg
bts
lea
ror
mov
test
bt
test
not
pushl
clc
cmc
add
call
not
call
pusha
push
push
call
push
mov
mov
movb
push
pushf
lea
jmp
pusha
pushf
popl
jmp
pushf
jmp
bswap
pushf
movsbw
mov
mov
pushl
pushf
movb
lea
jmp
btr
jmp
movw
mov
bswap
mov
not
jmp
pushf
shld
bsr
add
neg
btc
inc
xor
bsr
and
rcr
mov
pushf
call
rcl
lea
sbb
sub
bt
lea
clc
and
ror
sub
movzbw
push
call
shld
pushf
push
mov
mov
push
push
movl
call
add
lea
jns
mov
push
pusha
pushf
pushl
lea
jmp
mov
xor
notl
movzbw
cmp
mov
pushf
sub
test
mov
and
pusha
pushf
popl
movw
movb
pushl
popl
pushf
pushf
lea
jmp
clc
add
call
clc
mov
or
rol
neg
rcl
mov
push
sub
mov
cmp
stc
pushl
shl
mov
mov
call
jmp
movzbw
movzbw
jns
movsbw
mov
dec
pushf
dec
inc
dec
add
jnp
shrd
xor
inc
cmc
stc
rol
xor
dec
dec
bsr
btr
xor
pushf
bts
xor
rcr
shld
shrd
rol
mov
pusha
pusha
jmp
or
btc
test
mov
and
mov
mov
push
movb
sub
jmp
pusha
pusha
mov
mov
movb
pushf
lea
jmp
jmp
mov
movsbw
call
inc
shl
cmc
sub
stc
cmc
rol
test
rol
bswap
add
shr
rcr
sub
btr
jmp
pushf
jmp
cwtl
mov
mov
mov
setne
jmp
mov
pushl
popl
mov
pushf
movw
lea
jmp
cmc
call
stc
add
stc
jmp
mov
mov
pusha
push
lea
jmp
cmc
sar
cmp
shld
mov
cmc
test
pusha
add
push
push
push
lea
jmp
push
jmp
jmp
inc
call
lea
pusha
jmp
pop
movl
movw
pushl
not
mov
mov
pushf
pushf
lea
jmp
jmp
jmp
pop
movl
not
mov
pusha
pushf
mov
lea
jmp
rol
stc
add
jmp
lea
jo
mov
pushf
call
pusha
push
pushf
pushf
popl
push
call
pusha
pushf
popl
mov
push
mov
pushf
pushl
popl
push
lea
jmp
mov
pusha
pushf
xchg
movsbw
pushf
movzbl
mov
call
call
pushf
mov
mov
jmp
jmp
pusha
mov
push
pushl
jmp
mov
sub
mov
bts
mov
call
mov
pushf
cwtl
cmp
test
cmc
sub
call
push
push
add
clc
pusha
not
cmp
sub
bt
pushl
sub
test
stc
sub
cmc
test
cwtl
test
call
aaa
cmpsb
aam
lcall
out
mov
aam
aaa
cmpsb
aam
popa
test
out
add
aam
aaa
cmpsb
aam
sub
aam
pushl
out
aaa
cmpsb
aam
push
aam
mov
cmpsb
aam
andl
aam
aaa
cmpsb
aam
add
aam
mov
cmpsb
aam
push
mov
out
mov
cmpsb
aam
in
aam
imul
aam
aaa
cmpsb
aam
jge
aam
xor
aam
mov
cmpsb
aam
mov
aam
rol
aam
popa
test
out
aaa
cmpsb
aam
lcall
out
lcall
out
mov
stos
aam
outsl
lret
aam
aaa
cmpsb
aam
mov
test
out
add
aam
lods
mov
out
cmp
aam
push
cmpsb
aam
adc
aam
fcmovne
aam
aaa
cmpsb
aam
loope
aam
scas
stos
aam
mov
rcl
pop
lods
aam
mov
test
out
outsl
lret
aam
dec
lret
mov
lcall
out
outsl
lret
aam
push
mov
aam
rep
aam
jge
aam
and
aam
imul
aam
rol
aam
rep
aam
dec
lret
push
mov
aam
push
mov
out
lcall
out
add
aam
mov
mov
out
add
aam
sub
aam
push
mov
out
pop
rcl
pop
mov
aam
lcall
out
xchg
mov
out
lcall
out
lods
mov
out
je
aam
mov
aam
pop
lods
aam
andl
aam
pop
mov
aam
rep
aam
sub
aam
cli
mov
out
jge
aam
or
out
dec
mov
out
rep
aam
scas
stos
aam
adc
aam
mov
aam
rol
aam
gs
aam
mov
mov
aam
gs
aam
fcmovne
aam
in
aam
push
aam
gs
aam
dec
lret
mov
mov
out
gs
aam
or
aam
dec
mov
out
cmp
aam
gs
aam
fcmovne
aam
je
aam
cli
mov
out
gs
aam
leave
aam
xchg
mov
out
xor
aam
loope
aam
dec
rcl
out
add
aam
outsl
lret
aam
mov
aam
mov
leave
aam
imul
aam
pop
mov
aam
imul
aam
mov
aam
gs
aam
dec
rcl
out
andl
aam
mov
rcl
mov
aam
gs
aam
mov
aam
push
aam
sub
aam
gs
aam
mov
stos
aam
je
aam
gs
aam
xchg
mov
out
push
rcl
gs
aam
mov
rcl
mov
enter
mov
out
lods
mov
out
lcall
out
or
out
add
aam
push
aam
xor
aam
pop
mov
aam
andl
aam
lods
mov
out
add
aam
popa
test
out
dec
mov
out
jge
aam
xchg
mov
out
lcall
out
dec
lret
xor
aam
cli
mov
out
mov
rcl
out
xor
aam
mov
test
out
mov
aam
leave
aam
andl
aam
pop
mov
aam
add
aam
rol
aam
movsb
mov
out
dec
mov
out
imul
out
imul
out
andl
aam
rol
aam
or
out
lcall
out
mov
cmpsl
aam
je
aam
pop
rcl
pop
mov
aam
or
aam
push
mov
out
je
aam
mov
movl
mov
call
add
jmp
push
not
mov
pushf
movzbl
mov
call
shrd
aam
mov
sbb
shr
mov
jmp
cmp
xor
test
pushf
pusha
xchg
clc
jmp
shl
mov
xor
add
movsbw
inc
call
jmp
xadd
jb
neg
dec
xchg
lea
dec
shl
mov
movsbw
pusha
sar
sub
and
bswap
pushf
btc
lea
sub
cmp
bts
mov
pusha
movsbw
cmp
sar
add
sub
lea
mov
push
add
dec
not
dec
add
bsr
neg
jmp
test
sub
stc
call
cmp
test
pushl
push
call
seto
ror
pusha
call
pushf
mov
not
pushf
pusha
movzbw
mov
pusha
pushf
popl
pushf
bswap
pushl
pushf
mov
mov
not
mov
push
pop
mov
pushl
mov
movzbw
mov
lea
pushl
popl
push
movl
bswap
not
movzbw
movzbl
mov
pushf
movl
mov
lea
jmp
movsbl
not
pushf
mov
movsbw
jmp
pushf
push
call
push
jmp
push
pusha
jmp
jmp
mov
pusha
jmp
lea
jne
rcl
xorb
mov
call
inc
pushf
push
jmp
mov
call
test
stc
sub
jmp
call
mov
pushf
call
movsbl
mov
jmp
push
mov
pusha
push
mov
lea
jmp
push
pushl
push
mov
call
call
sete
add
mov
mov
cmc
clc
push
sub
jmp
mov
pushf
push
pushf
pushf
lea
jmp
mov
pushf
pushl
ret
mov
call
pushf
popl
jmp
pushf
add
call
pushl
test
sub
cmc
mov
shr
pusha
mov
movw
pushf
popl
pusha
jmp
stc
mov
cmc
add
jns
test
add
push
lea
jmp
movsbw
push
mov
mov
pushl
ret
mov
jmp
mov
push
pushf
movw
lea
jmp
btr
movzbw
mov
jle
add
push
pusha
pushf
popl
jmp
pushl
popl
mov
movb
lea
jmp
pusha
pusha
pushl
popl
pushf
jmp
stc
neg
movb
stc
add
cmp
pushl
cbtw
clc
stc
cwtl
push
clc
cmc
sub
jmp
pushf
call
call
pushf
mov
movb
push
push
lea
jmp
jmp
clc
jae
xchg
mov
aas
xor
bswap
xchg
mov
bsr
shl
mov
cmc
cmc
sub
call
call
mov
push
pushf
push
mov
mov
lea
jmp
inc
clc
xor
add
bts
btc
clc
not
dec
neg
sub
xor
add
sar
and
and
or
movzbl
bt
movb
mov
call
add
pushf
movb
mov
pushl
lea
jmp
dec
pushf
clc
stc
xor
sub
jns
push
cmp
cmp
xor
pusha
bt
test
jmp
add
jg
not
pusha
cmp
sub
cmc
bt
stc
sub
sub
jp
stc
bt
sub
stc
cwtl
cmp
pushf
test
sub
movw
mov
movb
push
pushl
pushf
lea
jmp
call
mov
mov
pushl
lea
jmp
neg
cmc
push
push
pushl
add
clc
bt
test
cmp
cbtw
pushf
bt
jmp
mov
call
jmp
pusha
call
cld
movb
movb
rep
xchg
or
mov
rol
bts
rcl
shl
mov
stc
call
mov
call
pusha
mov
jmp
call
mov
call
pusha
and
movb
cmp
mov
jmp
mov
pushl
popl
push
push
movw
movb
lea
jmp
movl
movsbl
mov
pushf
pushf
lea
jmp
cmp
stc
cwtl
pusha
cmp
pushf
stc
sub
pusha
call
add
movb
pop
dec
bsf
xor
bsf
call
call
jmp
mov
bswap
call
pushf
jmp
bswap
not
mov
not
mov
movw
movsbw
pushl
popl
pop
pushf
movsbw
movl
jmp
not
movsbw
mov
pusha
mov
not
pop
jmp
call
test
add
pusha
push
mov
pushl
pushl
pushf
lea
jmp
inc
dec
add
shrd
movzbl
adc
lea
mov
push
cmp
not
stc
add
call
bt
cmc
sub
jmp
rcr
bsr
mov
xadd
shld
cwtl
pop
aam
std
aam
cld
pop
lea
aaa
cmp
neg
pop
pushf
xadd
std
mov
mov
daa
mov
movsbl
cmp
ror
das
mov
xchg
bt
bsr
mov
shr
or
pushl
popf
movsbw
pusha
call
pushf
popl
call
not
mov
mov
movsbl
mov
movsbw
mov
movzbl
lea
mov
movsbw
pushf
lea
movsbw
mov
mov
bswap
bswap
pushl
popl
not
movl
call
push
lea
jp
mov
pusha
pushl
jmp
and
adc
mov
bt
add
push
pushl
pusha
mov
jmp
stc
cmc
jmp
add
pusha
call
pusha
mov
pusha
call
pushf
popl
movw
pushf
pushl
popl
movb
pushf
lea
jmp
xchg
dec
btc
mov
mov
bts
neg
cmp
sub
movsbw
bswap
call
mov
movb
movb
xchg
mov
pusha
pop
lea
mov
call
not
pushf
jmp
sub
not
adc
mov
jmp
mov
call
pusha
shrd
cmp
mov
cmp
test
bswap
test
add
clc
sub
sub
cmp
setns
bts
xor
mov
push
test
bt
shl
cmp
mov
stc
stc
shr
cmp
or
cmp
test
xor
push
call
and
bt
xor
mov
clc
bt
shr
mov
pushf
movb
pushf
push
sub
movb
pusha
mov
shr
jmp
jmp
mov
pushl
jmp
not
mov
pushl
popl
push
movl
pushl
pushf
not
mov
mov
mov
pushf
pushf
lea
jmp
movzbl
mov
mov
movsbw
pushf
popl
pop
pop
bswap
pop
mov
bswap
not
lea
mov
bswap
movsbw
not
call
sub
pushf
movw
mov
pushf
movb
pusha
pushf
lea
jmp
mov
movw
pushl
mov
lea
jmp
not
cmc
call
inc
xor
shld
mov
jmp
pusha
mov
push
pushf
popl
push
pushf
jmp
mov
pushf
lea
movzbw
pop
pushf
jl
movsbl
lea
push
push
movsbw
mov
jmp
jmp
add
cmp
call
sub
bsr
bts
mov
test
cmc
cmc
add
call
and
adc
neg
or
mov
clc
call
mov
movl
lea
jne
movsbw
mov
clc
stc
call
stc
not
bt
clc
clc
pushl
not
mov
cmp
bt
mov
sub
mov
push
cmc
bt
and
mov
pushl
jmp
clc
pusha
sub
call
pushf
mov
pushl
lea
jmp
mov
call
mov
movl
not
jmp
dec
inc
mov
bt
bt
bt
pusha
xor
test
pusha
lea
cmc
pushf
add
jo
xor
jmp
call
pop
pop
push
movb
movw
push
lea
jmp
pushf
pushf
mov
push
lea
jmp
mov
pushl
pushf
mov
movzbw
movw
pushf
mov
not
mov
push
lea
jae
pusha
pusha
pushl
popl
pushf
movl
mov
pushf
mov
pushf
push
pushf
movb
lea
jmp
jmp
mov
lea
movsbw
bswap
mov
call
movsbw
push
movw
mov
pop
pushl
popl
mov
push
lea
je
mov
movzbl
mov
pushf
pusha
pushf
lea
jmp
pop
mov
not
bswap
pushf
lea
pushl
popl
mov
call
mov
movw
movw
movb
lea
jmp
clc
sub
push
pusha
push
push
mov
pushf
pushl
pushf
lea
jmp
test
cmp
mov
jle
push
pusha
push
sub
push
add
push
movw
pushf
popl
jmp
sub
mov
pushf
push
mov
push
lea
jmp
movb
pushf
mov
pushl
pushf
pushl
ret
jmp
shr
shr
bswap
lea
clc
cmp
pushf
lea
ja
lea
movzbl
daa
mov
mov
sub
call
pushl
popl
pushf
mov
push
lea
jmp
cmp
clc
mov
test
pusha
jmp
mov
push
lea
jmp
shrd
jmp
pushf
pusha
jmp
mov
lea
mov
pushf
pushf
not
bswap
mov
lea
mov
call
jmp
movw
mov
pushl
pushl
popl
pop
movl
not
mov
pushl
movb
pushf
pushf
lea
jmp
mov
divl
jmp
bswap
clc
mov
cmp
push
call
setns
mov
push
sbb
or
mov
jmp
pushf
mov
call
push
pusha
pushl
mov
pushf
mov
push
pushf
lea
jmp
pushf
pushf
popl
jmp
cmc
mov
or
mov
bt
cmc
test
cmc
sub
pusha
shl
pusha
mov
push
jmp
movzbw
pushf
pop
movzbw
push
pusha
pushf
pusha
jmp
pushl
popl
mov
lea
jmp
sub
cmp
stc
pusha
pushl
sub
cmc
sub
cmp
call
mov
jmp
push
push
sub
test
test
push
pushf
add
cmp
bt
cmp
neg
call
pusha
mov
call
add
cld
pushl
popf
push
push
pushl
pusha
lea
jmp
pushl
popl
movb
movw
pushf
pushl
lea
jmp
pushl
popl
pushf
movw
pushf
lea
jmp
mov
jmp
mov
movb
push
pushf
lea
jmp
dec
mov
and
inc
sub
mov
stc
call
pusha
not
test
call
mov
mov
pop
movzbw
mov
pushf
movsbw
pushf
mov
mov
not
movsbl
mov
bswap
push
push
lea
pushl
popl
bswap
pop
movsbw
pushf
movl
bswap
mov
pushf
lea
jmp
pushl
popl
pushf
pushf
mov
movb
lea
jmp
mov
movw
mov
pushl
add
push
mov
movw
pushf
pusha
pushf
lea
jmp
mov
push
pushf
popl
pusha
call
push
stc
add
bt
pusha
movb
pushl
not
clc
call
cmc
sar
add
mov
sets
sete
call
stc
cmp
pushf
or
push
lea
je
stc
call
bswap
not
lea
pushf
popl
call
mov
pushf
push
movl
lea
jmp
jmp
push
mov
movb
movw
pushf
pushl
ret
add
pushf
mov
pusha
pushf
mov
mov
lea
jmp
mov
push
call
neg
pushf
add
clc
cmc
cmc
cbtw
pusha
test
cwtl
test
stc
pushf
pushf
sub
push
mov
call
clc
sbb
mov
adc
or
mov
call
inc
pushf
cmp
bt
test
not
jmp
pushl
popl
pushf
lea
jmp
mov
test
mov
pushf
stc
clc
test
sub
pushf
clc
clc
mul
call
pushf
bt
sub
mov
add
movw
pushf
popl
pusha
movb
pushl
popl
pushf
push
lea
jmp
mov
pushf
lea
jmp
mov
lea
mov
bswap
bswap
movzbw
lea
mov
movzbl
mov
pushf
pushl
popl
mov
movl
movsbl
movl
bswap
pushf
mov
movb
mov
pushf
pushf
lea
jmp
pushf
pushl
popl
jmp
jmp
pushf
popl
not
lea
bswap
pop
mov
pusha
mov
pop
mov
movsbl
push
jmp
sub
movb
mov
pushf
lea
jmp
mov
inc
pusha
mov
decl
movw
mov
movl
lea
jne
jmp
pusha
pusha
mov
mov
jmp
pushf
pushl
popl
pushf
movl
mov
lea
jmp
and
setae
mov
call
bswap
inc
jmp
add
pushf
mov
pushf
lea
jmp
mov
inc
jmp
pusha
mov
mov
lea
ja
pushf
pusha
mov
push
mov
movsbw
movzbw
pushf
popl
call
mov
movzbl
mov
movzbw
pushf
bswap
not
mov
movsbw
pushl
popl
bswap
jmp
mov
mov
pushl
movzbw
mov
lea
lea
movsbw
pushf
popl
movzbw
mov
pop
mov
movsbw
mov
mov
pushl
mov
pushf
bswap
mov
mov
mov
pushl
popl
bswap
movl
pushf
movzbl
mov
mov
push
pushf
pushf
lea
jmp
mov
pusha
pop
pushf
push
pushf
popl
cld
pushl
xchg
pusha
mov
pushf
pop
not
lea
call
jmp
lea
jb
pusha
mov
movb
movb
pushf
lea
jmp
call
not
cmc
clc
pushl
stc
neg
bt
call
mov
push
movzbw
pusha
inc
pusha
push
pushf
xor
rol
rcr
inc
xor
inc
mov
movsbw
bswap
dec
sar
or
shld
neg
xor
bts
xor
movzbw
sar
bts
mov
jmp
xor
call
pushf
mov
lea
jnp
pusha
movb
pushl
pushf
popl
pushf
call
clc
add
push
pushl
call
mov
pusha
mov
jmp
pushl
popl
push
lea
jmp
mov
pusha
jmp
mov
pop
pushf
popl
bswap
mov
push
movl
pusha
bswap
mov
pop
mov
movzbl
lea
mov
pushl
mov
not
pusha
push
mov
not
call
mov
pushf
popl
jmp
neg
dec
pushf
inc
jmp
pusha
mov
lahf
pop
setp
not
mov
call
mov
jmp
pushf
popl
mov
call
mov
pushl
pushf
pushf
lea
jmp
mov
mov
movsbw
mov
pushf
pushl
mov
call
push
call
pop
not
mov
bswap
pushf
call
mov
mov
call
pusha
mov
not
movsbw
bswap
mov
lea
bswap
pop
movsbw
pushf
popl
jmp
pusha
movb
movw
sub
mov
movb
mov
pusha
inc
pushl
bt
jmp
mov
movb
pusha
pushl
popl
mov
pushl
lea
jmp
not
mov
pushf
movzbw
movsbw
bswap
mov
jmp
jnp
sub
pusha
call
mov
call
pushf
popl
movsbw
movsbw
mov
pushf
mov
lea
movzbw
mov
movsbw
mov
pusha
pushl
mov
movsbw
mov
bswap
call
lea
mov
rcl
jmp
mov
not
pop
pushf
popl
bswap
mov
pushf
mov
mov
movsbw
mov
lea
not
jmp
not
not
and
jno
pusha
neg
sub
stc
or
shld
xor
lea
shr
and
mov
sub
mov
clc
add
pusha
jmp
pushf
pushf
pushf
pushf
popl
push
pushl
popl
movb
lea
jmp
pushf
popl
mov
jmp
pushf
pusha
mov
jmp
mov
pushf
mov
mov
pushl
popl
mov
movl
movzbw
mov
jmp
cmc
shld
bswap
mov
shld
rcr
adc
mov
bswap
push
setge
mov
cmp
movw
sub
push
div
pusha
push
mov
pushf
pushf
mov
mov
mov
jmp
mov
push
pushl
pushf
push
lea
jmp
sub
pusha
mov
push
push
pushf
push
mov
push
movb
lea
jmp
push
jmp
clc
stc
bt
xor
bt
jmp
mov
push
pushf
lea
jmp
pushl
popl
pushl
mov
lea
jmp
movw
inc
jmp
push
jmp
pushf
shr
jmp
btr
cmp
dec
xor
shl
movzbw
ror
pusha
xor
pushf
push
dec
rol
btr
inc
xor
call
call
mov
push
pushf
movb
movl
mov
jmp
sub
jmp
mov
pop
pusha
mov
pushl
not
not
pushf
mov
jmp
not
btr
setp
mov
pusha
test
pusha
cmp
add
pushf
call
mov
pushl
mov
movzbw
call
call
shl
pushf
jmp
mov
pusha
pushf
lea
jmp
mov
pushf
lea
jmp
mov
clc
sub
pushf
pushl
movb
pushf
mov
pushf
push
lea
jmp
aad
shrd
mov
xadd
mov
and
mov
test
pushf
bt
pusha
add
test
sub
jnp
cmp
shrd
pusha
mov
pushf
pusha
pushf
popl
call
pusha
not
pushl
not
mov
pushf
mov
lea
jmp
jmp
mov
btr
rcl
mov
sub
mov
stc
test
stc
call
inc
cmp
add
jmp
jmp
mov
lea
pusha
jmp
div
lea
jno
pushf
mov
jmp
movw
bswap
movl
mov
mov
mov
mov
lea
jmp
mov
bsr
sbb
xchg
mov
clc
shr
call
push
pushl
popl
push
pushf
pushf
mov
lea
jmp
pushf
call
push
mov
mov
push
jmp
pushf
pusha
pushf
mov
jmp
call
call
add
jmp
lea
movsbw
movzbl
mov
pushf
mov
mov
pop
not
bswap
mov
call
movsbw
pushf
lea
movl
pushf
mov
pusha
movw
lea
jmp
mov
pushf
mov
stc
test
jmp
neg
not
sbb
movsbw
neg
shld
xor
sbb
mov
movzbw
bts
and
pusha
shl
call
sub
jmp
not
mov
mov
pushf
lea
jmp
pushl
popl
pushf
lea
jmp
push
mov
push
mov
mov
movsbw
call
add
bt
cmc
push
sub
test
push
stc
sub
pushl
mov
pushf
pushl
mov
lea
jmp
pusha
jmp
pusha
pushf
movl
mov
pop
jmp
jmp
movl
jmp
sub
call
cmc
stc
push
add
movb
lea
jmp
pushf
popl
movw
pushl
popl
mov
lea
jmp
pusha
mov
jmp
jmp
mov
pusha
not
movzbl
pushl
popl
mov
call
jmp
setp
movzbw
jmp
pusha
jmp
pushf
jmp
